Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x11a]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x11a
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x11a
0xa: JUMPI 0x11a V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x149]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x13faede6
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x149
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x13faede6
0x39: V12 = EQ V10 0x13faede6
0x3a: V13 = 0x149
0x3d: JUMPI 0x149 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x16e]
---
0x3e DUP1
0x3f PUSH4 0x142769aa
0x44 EQ
0x45 PUSH2 0x16e
0x48 JUMPI
---
0x3f: V14 = 0x142769aa
0x44: V15 = EQ 0x142769aa V10
0x45: V16 = 0x16e
0x48: JUMPI 0x16e V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x18d]
---
0x49 DUP1
0x4a PUSH4 0x171fcb5a
0x4f EQ
0x50 PUSH2 0x18d
0x53 JUMPI
---
0x4a: V17 = 0x171fcb5a
0x4f: V18 = EQ 0x171fcb5a V10
0x50: V19 = 0x18d
0x53: JUMPI 0x18d V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x1a3]
---
0x54 DUP1
0x55 PUSH4 0x1fe9eabc
0x5a EQ
0x5b PUSH2 0x1a3
0x5e JUMPI
---
0x55: V20 = 0x1fe9eabc
0x5a: V21 = EQ 0x1fe9eabc V10
0x5b: V22 = 0x1a3
0x5e: JUMPI 0x1a3 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x1cd]
---
0x5f DUP1
0x60 PUSH4 0x372c12b1
0x65 EQ
0x66 PUSH2 0x1cd
0x69 JUMPI
---
0x60: V23 = 0x372c12b1
0x65: V24 = EQ 0x372c12b1 V10
0x66: V25 = 0x1cd
0x69: JUMPI 0x1cd V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x200]
---
0x6a DUP1
0x6b PUSH4 0x4173ffbc
0x70 EQ
0x71 PUSH2 0x200
0x74 JUMPI
---
0x6b: V26 = 0x4173ffbc
0x70: V27 = EQ 0x4173ffbc V10
0x71: V28 = 0x200
0x74: JUMPI 0x200 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x22b]
---
0x75 DUP1
0x76 PUSH4 0x41c0e1b5
0x7b EQ
0x7c PUSH2 0x22b
0x7f JUMPI
---
0x76: V29 = 0x41c0e1b5
0x7b: V30 = EQ 0x41c0e1b5 V10
0x7c: V31 = 0x22b
0x7f: JUMPI 0x22b V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x240]
---
0x80 DUP1
0x81 PUSH4 0x44a0d68a
0x86 EQ
0x87 PUSH2 0x240
0x8a JUMPI
---
0x81: V32 = 0x44a0d68a
0x86: V33 = EQ 0x44a0d68a V10
0x87: V34 = 0x240
0x8a: JUMPI 0x240 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x95]
---
Predecessors: [0x80]
Successors: [0x96, 0x26a]
---
0x8b DUP1
0x8c PUSH4 0x49af63a9
0x91 EQ
0x92 PUSH2 0x26a
0x95 JUMPI
---
0x8c: V35 = 0x49af63a9
0x91: V36 = EQ 0x49af63a9 V10
0x92: V37 = 0x26a
0x95: JUMPI 0x26a V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x96
[0x96:0xa0]
---
Predecessors: [0x8b]
Successors: [0xa1, 0x297]
---
0x96 DUP1
0x97 PUSH4 0x6ac5db19
0x9c EQ
0x9d PUSH2 0x297
0xa0 JUMPI
---
0x97: V38 = 0x6ac5db19
0x9c: V39 = EQ 0x6ac5db19 V10
0x9d: V40 = 0x297
0xa0: JUMPI 0x297 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa1
[0xa1:0xab]
---
Predecessors: [0x96]
Successors: [0xac, 0x2bc]
---
0xa1 DUP1
0xa2 PUSH4 0x8da5cb5b
0xa7 EQ
0xa8 PUSH2 0x2bc
0xab JUMPI
---
0xa2: V41 = 0x8da5cb5b
0xa7: V42 = EQ 0x8da5cb5b V10
0xa8: V43 = 0x2bc
0xab: JUMPI 0x2bc V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xac
[0xac:0xb6]
---
Predecessors: [0xa1]
Successors: [0xb7, 0x2eb]
---
0xac DUP1
0xad PUSH4 0x936315d6
0xb2 EQ
0xb3 PUSH2 0x2eb
0xb6 JUMPI
---
0xad: V44 = 0x936315d6
0xb2: V45 = EQ 0x936315d6 V10
0xb3: V46 = 0x2eb
0xb6: JUMPI 0x2eb V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xb7
[0xb7:0xc1]
---
Predecessors: [0xac]
Successors: [0xc2, 0x348]
---
0xb7 DUP1
0xb8 PUSH4 0x942ea466
0xbd EQ
0xbe PUSH2 0x348
0xc1 JUMPI
---
0xb8: V47 = 0x942ea466
0xbd: V48 = EQ 0x942ea466 V10
0xbe: V49 = 0x348
0xc1: JUMPI 0x348 V48
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xc2
[0xc2:0xcc]
---
Predecessors: [0xb7]
Successors: [0xcd, 0x39b]
---
0xc2 DUP1
0xc3 PUSH4 0x9edf42ff
0xc8 EQ
0xc9 PUSH2 0x39b
0xcc JUMPI
---
0xc3: V50 = 0x9edf42ff
0xc8: V51 = EQ 0x9edf42ff V10
0xc9: V52 = 0x39b
0xcc: JUMPI 0x39b V51
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xcd
[0xcd:0xd7]
---
Predecessors: [0xc2]
Successors: [0xd8, 0x3f7]
---
0xcd DUP1
0xce PUSH4 0xa9671dd9
0xd3 EQ
0xd4 PUSH2 0x3f7
0xd7 JUMPI
---
0xce: V53 = 0xa9671dd9
0xd3: V54 = EQ 0xa9671dd9 V10
0xd4: V55 = 0x3f7
0xd7: JUMPI 0x3f7 V54
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xd8
[0xd8:0xe2]
---
Predecessors: [0xcd]
Successors: [0xe3, 0x42a]
---
0xd8 DUP1
0xd9 PUSH4 0xbe116c3b
0xde EQ
0xdf PUSH2 0x42a
0xe2 JUMPI
---
0xd9: V56 = 0xbe116c3b
0xde: V57 = EQ 0xbe116c3b V10
0xdf: V58 = 0x42a
0xe2: JUMPI 0x42a V57
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xe3
[0xe3:0xed]
---
Predecessors: [0xd8]
Successors: [0xee, 0x45d]
---
0xe3 DUP1
0xe4 PUSH4 0xccca123b
0xe9 EQ
0xea PUSH2 0x45d
0xed JUMPI
---
0xe4: V59 = 0xccca123b
0xe9: V60 = EQ 0xccca123b V10
0xea: V61 = 0x45d
0xed: JUMPI 0x45d V60
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xee
[0xee:0xf8]
---
Predecessors: [0xe3]
Successors: [0xf9, 0x486]
---
0xee DUP1
0xef PUSH4 0xdf32754b
0xf4 EQ
0xf5 PUSH2 0x486
0xf8 JUMPI
---
0xef: V62 = 0xdf32754b
0xf4: V63 = EQ 0xdf32754b V10
0xf5: V64 = 0x486
0xf8: JUMPI 0x486 V63
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xf9
[0xf9:0x103]
---
Predecessors: [0xee]
Successors: [0x104, 0x49b]
---
0xf9 DUP1
0xfa PUSH4 0xf1f76438
0xff EQ
0x100 PUSH2 0x49b
0x103 JUMPI
---
0xfa: V65 = 0xf1f76438
0xff: V66 = EQ 0xf1f76438 V10
0x100: V67 = 0x49b
0x103: JUMPI 0x49b V66
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x104
[0x104:0x10e]
---
Predecessors: [0xf9]
Successors: [0x10f, 0x4ce]
---
0x104 DUP1
0x105 PUSH4 0xf2fde38b
0x10a EQ
0x10b PUSH2 0x4ce
0x10e JUMPI
---
0x105: V68 = 0xf2fde38b
0x10a: V69 = EQ 0xf2fde38b V10
0x10b: V70 = 0x4ce
0x10e: JUMPI 0x4ce V69
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x10f
[0x10f:0x119]
---
Predecessors: [0x104]
Successors: [0x11a, 0x4ef]
---
0x10f DUP1
0x110 PUSH4 0xf3fef3a3
0x115 EQ
0x116 PUSH2 0x4ef
0x119 JUMPI
---
0x110: V71 = 0xf3fef3a3
0x115: V72 = EQ 0xf3fef3a3 V10
0x116: V73 = 0x4ef
0x119: JUMPI 0x4ef V72
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x11a
[0x11a:0x11a]
---
Predecessors: [0x0, 0x10f]
Successors: [0x11b]
---
0x11a JUMPDEST
---
0x11a: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x11b
[0x11b:0x131]
---
Predecessors: [0x11a]
Successors: [0x132, 0x145]
---
0x11b JUMPDEST
0x11c PUSH1 0x0
0x11e SLOAD
0x11f CALLER
0x120 PUSH1 0x1
0x122 PUSH1 0xa0
0x124 PUSH1 0x2
0x126 EXP
0x127 SUB
0x128 SWAP1
0x129 DUP2
0x12a AND
0x12b SWAP2
0x12c AND
0x12d EQ
0x12e PUSH2 0x145
0x131 JUMPI
---
0x11b: JUMPDEST 
0x11c: V74 = 0x0
0x11e: V75 = S[0x0]
0x11f: V76 = CALLER
0x120: V77 = 0x1
0x122: V78 = 0xa0
0x124: V79 = 0x2
0x126: V80 = EXP 0x2 0xa0
0x127: V81 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12a: V82 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0x12c: V83 = AND V75 0xffffffffffffffffffffffffffffffffffffffff
0x12d: V84 = EQ V83 V82
0x12e: V85 = 0x145
0x131: JUMPI 0x145 V84
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x132
[0x132:0x144]
---
Predecessors: [0x11b]
Successors: [0x525]
---
0x132 PUSH1 0x3
0x134 SLOAD
0x135 PUSH1 0x2
0x137 SLOAD
0x138 PUSH2 0x145
0x13b SWAP2
0x13c CALLER
0x13d SWAP2
0x13e PUSH1 0xff
0x140 AND
0x141 PUSH2 0x525
0x144 JUMP
---
0x132: V86 = 0x3
0x134: V87 = S[0x3]
0x135: V88 = 0x2
0x137: V89 = S[0x2]
0x138: V90 = 0x145
0x13c: V91 = CALLER
0x13e: V92 = 0xff
0x140: V93 = AND 0xff V89
0x141: V94 = 0x525
0x144: JUMP 0x525
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x145, V91, V87, V93]
Exit stack: [V10, 0x145, V91, V87, V93]

================================

Block 0x145
[0x145:0x145]
---
Predecessors: [0x11b, 0x70b, 0x7f7, 0x97b, 0xab9, 0xb5b, 0xc2d, 0xd14, 0xd93]
Successors: [0x146]
---
0x145 JUMPDEST
---
0x145: JUMPDEST 
---
Entry stack: [V10, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x146
[0x146:0x146]
---
Predecessors: [0x145]
Successors: [0x147]
---
0x146 JUMPDEST
---
0x146: JUMPDEST 
---
Entry stack: [V10, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x147
[0x147:0x148]
---
Predecessors: [0x146]
Successors: []
---
0x147 JUMPDEST
0x148 STOP
---
0x147: JUMPDEST 
0x148: STOP 
---
Entry stack: [V10, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x149
[0x149:0x14f]
---
Predecessors: [0xb]
Successors: [0x150, 0x154]
---
0x149 JUMPDEST
0x14a CALLVALUE
0x14b ISZERO
0x14c PUSH2 0x154
0x14f JUMPI
---
0x149: JUMPDEST 
0x14a: V95 = CALLVALUE
0x14b: V96 = ISZERO V95
0x14c: V97 = 0x154
0x14f: JUMPI 0x154 V96
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x150
[0x150:0x153]
---
Predecessors: [0x149]
Successors: []
---
0x150 PUSH1 0x0
0x152 DUP1
0x153 REVERT
---
0x150: V98 = 0x0
0x153: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x154
[0x154:0x15b]
---
Predecessors: [0x149]
Successors: [0x710]
---
0x154 JUMPDEST
0x155 PUSH2 0x15c
0x158 PUSH2 0x710
0x15b JUMP
---
0x154: JUMPDEST 
0x155: V99 = 0x15c
0x158: V100 = 0x710
0x15b: JUMP 0x710
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x15c]
Exit stack: [V10, 0x15c]

================================

Block 0x15c
[0x15c:0x16d]
---
Predecessors: [0x710, 0x7f7, 0x935, 0xd93]
Successors: []
---
0x15c JUMPDEST
0x15d PUSH1 0x40
0x15f MLOAD
0x160 SWAP1
0x161 DUP2
0x162 MSTORE
0x163 PUSH1 0x20
0x165 ADD
0x166 PUSH1 0x40
0x168 MLOAD
0x169 DUP1
0x16a SWAP2
0x16b SUB
0x16c SWAP1
0x16d RETURN
---
0x15c: JUMPDEST 
0x15d: V101 = 0x40
0x15f: V102 = M[0x40]
0x162: M[V102] = S0
0x163: V103 = 0x20
0x165: V104 = ADD 0x20 V102
0x166: V105 = 0x40
0x168: V106 = M[0x40]
0x16b: V107 = SUB V104 V106
0x16d: RETURN V106 V107
---
Entry stack: [V10, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x16e
[0x16e:0x18a]
---
Predecessors: [0x3e]
Successors: [0x525]
---
0x16e JUMPDEST
0x16f PUSH2 0x145
0x172 PUSH1 0x1
0x174 PUSH1 0xa0
0x176 PUSH1 0x2
0x178 EXP
0x179 SUB
0x17a PUSH1 0x4
0x17c CALLDATALOAD
0x17d AND
0x17e PUSH1 0x24
0x180 CALLDATALOAD
0x181 PUSH1 0xff
0x183 PUSH1 0x44
0x185 CALLDATALOAD
0x186 AND
0x187 PUSH2 0x525
0x18a JUMP
---
0x16e: JUMPDEST 
0x16f: V108 = 0x145
0x172: V109 = 0x1
0x174: V110 = 0xa0
0x176: V111 = 0x2
0x178: V112 = EXP 0x2 0xa0
0x179: V113 = SUB 0x10000000000000000000000000000000000000000 0x1
0x17a: V114 = 0x4
0x17c: V115 = CALLDATALOAD 0x4
0x17d: V116 = AND V115 0xffffffffffffffffffffffffffffffffffffffff
0x17e: V117 = 0x24
0x180: V118 = CALLDATALOAD 0x24
0x181: V119 = 0xff
0x183: V120 = 0x44
0x185: V121 = CALLDATALOAD 0x44
0x186: V122 = AND V121 0xff
0x187: V123 = 0x525
0x18a: JUMP 0x525
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x145, V116, V118, V122]
Exit stack: [V10, 0x145, V116, V118, V122]

================================

Block 0x18b
[0x18b:0x18c]
---
Predecessors: []
Successors: []
---
0x18b JUMPDEST
0x18c STOP
---
0x18b: JUMPDEST 
0x18c: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x18d
[0x18d:0x1a0]
---
Predecessors: [0x49]
Successors: [0x716]
---
0x18d JUMPDEST
0x18e PUSH2 0x145
0x191 PUSH1 0x1
0x193 PUSH1 0xa0
0x195 PUSH1 0x2
0x197 EXP
0x198 SUB
0x199 PUSH1 0x4
0x19b CALLDATALOAD
0x19c AND
0x19d PUSH2 0x716
0x1a0 JUMP
---
0x18d: JUMPDEST 
0x18e: V124 = 0x145
0x191: V125 = 0x1
0x193: V126 = 0xa0
0x195: V127 = 0x2
0x197: V128 = EXP 0x2 0xa0
0x198: V129 = SUB 0x10000000000000000000000000000000000000000 0x1
0x199: V130 = 0x4
0x19b: V131 = CALLDATALOAD 0x4
0x19c: V132 = AND V131 0xffffffffffffffffffffffffffffffffffffffff
0x19d: V133 = 0x716
0x1a0: JUMP 0x716
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x145, V132]
Exit stack: [V10, 0x145, V132]

================================

Block 0x1a1
[0x1a1:0x1a2]
---
Predecessors: []
Successors: []
---
0x1a1 JUMPDEST
0x1a2 STOP
---
0x1a1: JUMPDEST 
0x1a2: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1a3
[0x1a3:0x1a9]
---
Predecessors: [0x54]
Successors: [0x1aa, 0x1ae]
---
0x1a3 JUMPDEST
0x1a4 CALLVALUE
0x1a5 ISZERO
0x1a6 PUSH2 0x1ae
0x1a9 JUMPI
---
0x1a3: JUMPDEST 
0x1a4: V134 = CALLVALUE
0x1a5: V135 = ISZERO V134
0x1a6: V136 = 0x1ae
0x1a9: JUMPI 0x1ae V135
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1aa
[0x1aa:0x1ad]
---
Predecessors: [0x1a3]
Successors: []
---
0x1aa PUSH1 0x0
0x1ac DUP1
0x1ad REVERT
---
0x1aa: V137 = 0x0
0x1ad: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ae
[0x1ae:0x1b8]
---
Predecessors: [0x1a3]
Successors: [0x735]
---
0x1ae JUMPDEST
0x1af PUSH2 0x1b9
0x1b2 PUSH1 0x4
0x1b4 CALLDATALOAD
0x1b5 PUSH2 0x735
0x1b8 JUMP
---
0x1ae: JUMPDEST 
0x1af: V138 = 0x1b9
0x1b2: V139 = 0x4
0x1b4: V140 = CALLDATALOAD 0x4
0x1b5: V141 = 0x735
0x1b8: JUMP 0x735
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b9, V140]
Exit stack: [V10, 0x1b9, V140]

================================

Block 0x1b9
[0x1b9:0x1cc]
---
Predecessors: [0x7af, 0x7b4, 0x8a2, 0x930, 0xa3c, 0xa82, 0xb11, 0xbb0]
Successors: []
---
0x1b9 JUMPDEST
0x1ba PUSH1 0x40
0x1bc MLOAD
0x1bd SWAP1
0x1be ISZERO
0x1bf ISZERO
0x1c0 DUP2
0x1c1 MSTORE
0x1c2 PUSH1 0x20
0x1c4 ADD
0x1c5 PUSH1 0x40
0x1c7 MLOAD
0x1c8 DUP1
0x1c9 SWAP2
0x1ca SUB
0x1cb SWAP1
0x1cc RETURN
---
0x1b9: JUMPDEST 
0x1ba: V142 = 0x40
0x1bc: V143 = M[0x40]
0x1be: V144 = ISZERO S0
0x1bf: V145 = ISZERO V144
0x1c1: M[V143] = V145
0x1c2: V146 = 0x20
0x1c4: V147 = ADD 0x20 V143
0x1c5: V148 = 0x40
0x1c7: V149 = M[0x40]
0x1ca: V150 = SUB V147 V149
0x1cc: RETURN V149 V150
---
Entry stack: [V10, 0x30a, V277, 0x0, 0x0, S7, {0x0, 0x145}, S5, {0x145, 0x720, 0x95c}, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x30a, V277, 0x0, 0x0, S7, {0x0, 0x145}, S5, {0x145, 0x720, 0x95c}, S3, S2, S1]

================================

Block 0x1cd
[0x1cd:0x1d3]
---
Predecessors: [0x5f]
Successors: [0x1d4, 0x1d8]
---
0x1cd JUMPDEST
0x1ce CALLVALUE
0x1cf ISZERO
0x1d0 PUSH2 0x1d8
0x1d3 JUMPI
---
0x1cd: JUMPDEST 
0x1ce: V151 = CALLVALUE
0x1cf: V152 = ISZERO V151
0x1d0: V153 = 0x1d8
0x1d3: JUMPI 0x1d8 V152
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d4
[0x1d4:0x1d7]
---
Predecessors: [0x1cd]
Successors: []
---
0x1d4 PUSH1 0x0
0x1d6 DUP1
0x1d7 REVERT
---
0x1d4: V154 = 0x0
0x1d7: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d8
[0x1d8:0x1eb]
---
Predecessors: [0x1cd]
Successors: [0x7b4]
---
0x1d8 JUMPDEST
0x1d9 PUSH2 0x1b9
0x1dc PUSH1 0x1
0x1de PUSH1 0xa0
0x1e0 PUSH1 0x2
0x1e2 EXP
0x1e3 SUB
0x1e4 PUSH1 0x4
0x1e6 CALLDATALOAD
0x1e7 AND
0x1e8 PUSH2 0x7b4
0x1eb JUMP
---
0x1d8: JUMPDEST 
0x1d9: V155 = 0x1b9
0x1dc: V156 = 0x1
0x1de: V157 = 0xa0
0x1e0: V158 = 0x2
0x1e2: V159 = EXP 0x2 0xa0
0x1e3: V160 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e4: V161 = 0x4
0x1e6: V162 = CALLDATALOAD 0x4
0x1e7: V163 = AND V162 0xffffffffffffffffffffffffffffffffffffffff
0x1e8: V164 = 0x7b4
0x1eb: JUMP 0x7b4
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b9, V163]
Exit stack: [V10, 0x1b9, V163]

================================

Block 0x1ec
[0x1ec:0x1ff]
---
Predecessors: []
Successors: []
---
0x1ec JUMPDEST
0x1ed PUSH1 0x40
0x1ef MLOAD
0x1f0 SWAP1
0x1f1 ISZERO
0x1f2 ISZERO
0x1f3 DUP2
0x1f4 MSTORE
0x1f5 PUSH1 0x20
0x1f7 ADD
0x1f8 PUSH1 0x40
0x1fa MLOAD
0x1fb DUP1
0x1fc SWAP2
0x1fd SUB
0x1fe SWAP1
0x1ff RETURN
---
0x1ec: JUMPDEST 
0x1ed: V165 = 0x40
0x1ef: V166 = M[0x40]
0x1f1: V167 = ISZERO S0
0x1f2: V168 = ISZERO V167
0x1f4: M[V166] = V168
0x1f5: V169 = 0x20
0x1f7: V170 = ADD 0x20 V166
0x1f8: V171 = 0x40
0x1fa: V172 = M[0x40]
0x1fd: V173 = SUB V170 V172
0x1ff: RETURN V172 V173
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x200
[0x200:0x206]
---
Predecessors: [0x6a]
Successors: [0x207, 0x20b]
---
0x200 JUMPDEST
0x201 CALLVALUE
0x202 ISZERO
0x203 PUSH2 0x20b
0x206 JUMPI
---
0x200: JUMPDEST 
0x201: V174 = CALLVALUE
0x202: V175 = ISZERO V174
0x203: V176 = 0x20b
0x206: JUMPI 0x20b V175
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x207
[0x207:0x20a]
---
Predecessors: [0x200]
Successors: []
---
0x207 PUSH1 0x0
0x209 DUP1
0x20a REVERT
---
0x207: V177 = 0x0
0x20a: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x20b
[0x20b:0x218]
---
Predecessors: [0x200]
Successors: [0x7c9]
---
0x20b JUMPDEST
0x20c PUSH2 0x15c
0x20f PUSH1 0x4
0x211 CALLDATALOAD
0x212 PUSH1 0x24
0x214 CALLDATALOAD
0x215 PUSH2 0x7c9
0x218 JUMP
---
0x20b: JUMPDEST 
0x20c: V178 = 0x15c
0x20f: V179 = 0x4
0x211: V180 = CALLDATALOAD 0x4
0x212: V181 = 0x24
0x214: V182 = CALLDATALOAD 0x24
0x215: V183 = 0x7c9
0x218: JUMP 0x7c9
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x15c, V180, V182]
Exit stack: [V10, 0x15c, V180, V182]

================================

Block 0x219
[0x219:0x22a]
---
Predecessors: []
Successors: []
---
0x219 JUMPDEST
0x21a PUSH1 0x40
0x21c MLOAD
0x21d SWAP1
0x21e DUP2
0x21f MSTORE
0x220 PUSH1 0x20
0x222 ADD
0x223 PUSH1 0x40
0x225 MLOAD
0x226 DUP1
0x227 SWAP2
0x228 SUB
0x229 SWAP1
0x22a RETURN
---
0x219: JUMPDEST 
0x21a: V184 = 0x40
0x21c: V185 = M[0x40]
0x21f: M[V185] = S0
0x220: V186 = 0x20
0x222: V187 = ADD 0x20 V185
0x223: V188 = 0x40
0x225: V189 = M[0x40]
0x228: V190 = SUB V187 V189
0x22a: RETURN V189 V190
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x22b
[0x22b:0x231]
---
Predecessors: [0x75]
Successors: [0x232, 0x236]
---
0x22b JUMPDEST
0x22c CALLVALUE
0x22d ISZERO
0x22e PUSH2 0x236
0x231 JUMPI
---
0x22b: JUMPDEST 
0x22c: V191 = CALLVALUE
0x22d: V192 = ISZERO V191
0x22e: V193 = 0x236
0x231: JUMPI 0x236 V192
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x232
[0x232:0x235]
---
Predecessors: [0x22b]
Successors: []
---
0x232 PUSH1 0x0
0x234 DUP1
0x235 REVERT
---
0x232: V194 = 0x0
0x235: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x236
[0x236:0x23d]
---
Predecessors: [0x22b]
Successors: [0x7fd]
---
0x236 JUMPDEST
0x237 PUSH2 0x145
0x23a PUSH2 0x7fd
0x23d JUMP
---
0x236: JUMPDEST 
0x237: V195 = 0x145
0x23a: V196 = 0x7fd
0x23d: JUMP 0x7fd
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x145]
Exit stack: [V10, 0x145]

================================

Block 0x23e
[0x23e:0x23f]
---
Predecessors: []
Successors: []
---
0x23e JUMPDEST
0x23f STOP
---
0x23e: JUMPDEST 
0x23f: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x240
[0x240:0x246]
---
Predecessors: [0x80]
Successors: [0x247, 0x24b]
---
0x240 JUMPDEST
0x241 CALLVALUE
0x242 ISZERO
0x243 PUSH2 0x24b
0x246 JUMPI
---
0x240: JUMPDEST 
0x241: V197 = CALLVALUE
0x242: V198 = ISZERO V197
0x243: V199 = 0x24b
0x246: JUMPI 0x24b V198
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x247
[0x247:0x24a]
---
Predecessors: [0x240]
Successors: []
---
0x247 PUSH1 0x0
0x249 DUP1
0x24a REVERT
---
0x247: V200 = 0x0
0x24a: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x24b
[0x24b:0x255]
---
Predecessors: [0x240]
Successors: [0x829]
---
0x24b JUMPDEST
0x24c PUSH2 0x1b9
0x24f PUSH1 0x4
0x251 CALLDATALOAD
0x252 PUSH2 0x829
0x255 JUMP
---
0x24b: JUMPDEST 
0x24c: V201 = 0x1b9
0x24f: V202 = 0x4
0x251: V203 = CALLDATALOAD 0x4
0x252: V204 = 0x829
0x255: JUMP 0x829
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b9, V203]
Exit stack: [V10, 0x1b9, V203]

================================

Block 0x256
[0x256:0x269]
---
Predecessors: []
Successors: []
---
0x256 JUMPDEST
0x257 PUSH1 0x40
0x259 MLOAD
0x25a SWAP1
0x25b ISZERO
0x25c ISZERO
0x25d DUP2
0x25e MSTORE
0x25f PUSH1 0x20
0x261 ADD
0x262 PUSH1 0x40
0x264 MLOAD
0x265 DUP1
0x266 SWAP2
0x267 SUB
0x268 SWAP1
0x269 RETURN
---
0x256: JUMPDEST 
0x257: V205 = 0x40
0x259: V206 = M[0x40]
0x25b: V207 = ISZERO S0
0x25c: V208 = ISZERO V207
0x25e: M[V206] = V208
0x25f: V209 = 0x20
0x261: V210 = ADD 0x20 V206
0x262: V211 = 0x40
0x264: V212 = M[0x40]
0x267: V213 = SUB V210 V212
0x269: RETURN V212 V213
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x26a
[0x26a:0x270]
---
Predecessors: [0x8b]
Successors: [0x271, 0x275]
---
0x26a JUMPDEST
0x26b CALLVALUE
0x26c ISZERO
0x26d PUSH2 0x275
0x270 JUMPI
---
0x26a: JUMPDEST 
0x26b: V214 = CALLVALUE
0x26c: V215 = ISZERO V214
0x26d: V216 = 0x275
0x270: JUMPI 0x275 V215
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x271
[0x271:0x274]
---
Predecessors: [0x26a]
Successors: []
---
0x271 PUSH1 0x0
0x273 DUP1
0x274 REVERT
---
0x271: V217 = 0x0
0x274: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x275
[0x275:0x282]
---
Predecessors: [0x26a]
Successors: [0x8a7]
---
0x275 JUMPDEST
0x276 PUSH2 0x1b9
0x279 PUSH1 0xff
0x27b PUSH1 0x4
0x27d CALLDATALOAD
0x27e AND
0x27f PUSH2 0x8a7
0x282 JUMP
---
0x275: JUMPDEST 
0x276: V218 = 0x1b9
0x279: V219 = 0xff
0x27b: V220 = 0x4
0x27d: V221 = CALLDATALOAD 0x4
0x27e: V222 = AND V221 0xff
0x27f: V223 = 0x8a7
0x282: JUMP 0x8a7
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b9, V222]
Exit stack: [V10, 0x1b9, V222]

================================

Block 0x283
[0x283:0x296]
---
Predecessors: []
Successors: []
---
0x283 JUMPDEST
0x284 PUSH1 0x40
0x286 MLOAD
0x287 SWAP1
0x288 ISZERO
0x289 ISZERO
0x28a DUP2
0x28b MSTORE
0x28c PUSH1 0x20
0x28e ADD
0x28f PUSH1 0x40
0x291 MLOAD
0x292 DUP1
0x293 SWAP2
0x294 SUB
0x295 SWAP1
0x296 RETURN
---
0x283: JUMPDEST 
0x284: V224 = 0x40
0x286: V225 = M[0x40]
0x288: V226 = ISZERO S0
0x289: V227 = ISZERO V226
0x28b: M[V225] = V227
0x28c: V228 = 0x20
0x28e: V229 = ADD 0x20 V225
0x28f: V230 = 0x40
0x291: V231 = M[0x40]
0x294: V232 = SUB V229 V231
0x296: RETURN V231 V232
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x297
[0x297:0x29d]
---
Predecessors: [0x96]
Successors: [0x29e, 0x2a2]
---
0x297 JUMPDEST
0x298 CALLVALUE
0x299 ISZERO
0x29a PUSH2 0x2a2
0x29d JUMPI
---
0x297: JUMPDEST 
0x298: V233 = CALLVALUE
0x299: V234 = ISZERO V233
0x29a: V235 = 0x2a2
0x29d: JUMPI 0x2a2 V234
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x29e
[0x29e:0x2a1]
---
Predecessors: [0x297]
Successors: []
---
0x29e PUSH1 0x0
0x2a0 DUP1
0x2a1 REVERT
---
0x29e: V236 = 0x0
0x2a1: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2a2
[0x2a2:0x2a9]
---
Predecessors: [0x297]
Successors: [0x935]
---
0x2a2 JUMPDEST
0x2a3 PUSH2 0x15c
0x2a6 PUSH2 0x935
0x2a9 JUMP
---
0x2a2: JUMPDEST 
0x2a3: V237 = 0x15c
0x2a6: V238 = 0x935
0x2a9: JUMP 0x935
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x15c]
Exit stack: [V10, 0x15c]

================================

Block 0x2aa
[0x2aa:0x2bb]
---
Predecessors: []
Successors: []
---
0x2aa JUMPDEST
0x2ab PUSH1 0x40
0x2ad MLOAD
0x2ae SWAP1
0x2af DUP2
0x2b0 MSTORE
0x2b1 PUSH1 0x20
0x2b3 ADD
0x2b4 PUSH1 0x40
0x2b6 MLOAD
0x2b7 DUP1
0x2b8 SWAP2
0x2b9 SUB
0x2ba SWAP1
0x2bb RETURN
---
0x2aa: JUMPDEST 
0x2ab: V239 = 0x40
0x2ad: V240 = M[0x40]
0x2b0: M[V240] = S0
0x2b1: V241 = 0x20
0x2b3: V242 = ADD 0x20 V240
0x2b4: V243 = 0x40
0x2b6: V244 = M[0x40]
0x2b9: V245 = SUB V242 V244
0x2bb: RETURN V244 V245
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2bc
[0x2bc:0x2c2]
---
Predecessors: [0xa1]
Successors: [0x2c3, 0x2c7]
---
0x2bc JUMPDEST
0x2bd CALLVALUE
0x2be ISZERO
0x2bf PUSH2 0x2c7
0x2c2 JUMPI
---
0x2bc: JUMPDEST 
0x2bd: V246 = CALLVALUE
0x2be: V247 = ISZERO V246
0x2bf: V248 = 0x2c7
0x2c2: JUMPI 0x2c7 V247
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2c3
[0x2c3:0x2c6]
---
Predecessors: [0x2bc]
Successors: []
---
0x2c3 PUSH1 0x0
0x2c5 DUP1
0x2c6 REVERT
---
0x2c3: V249 = 0x0
0x2c6: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2c7
[0x2c7:0x2ce]
---
Predecessors: [0x2bc]
Successors: [0x93b]
---
0x2c7 JUMPDEST
0x2c8 PUSH2 0x2cf
0x2cb PUSH2 0x93b
0x2ce JUMP
---
0x2c7: JUMPDEST 
0x2c8: V250 = 0x2cf
0x2cb: V251 = 0x93b
0x2ce: JUMP 0x93b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2cf]
Exit stack: [V10, 0x2cf]

================================

Block 0x2cf
[0x2cf:0x2ea]
---
Predecessors: [0x93b]
Successors: []
---
0x2cf JUMPDEST
0x2d0 PUSH1 0x40
0x2d2 MLOAD
0x2d3 PUSH1 0x1
0x2d5 PUSH1 0xa0
0x2d7 PUSH1 0x2
0x2d9 EXP
0x2da SUB
0x2db SWAP1
0x2dc SWAP2
0x2dd AND
0x2de DUP2
0x2df MSTORE
0x2e0 PUSH1 0x20
0x2e2 ADD
0x2e3 PUSH1 0x40
0x2e5 MLOAD
0x2e6 DUP1
0x2e7 SWAP2
0x2e8 SUB
0x2e9 SWAP1
0x2ea RETURN
---
0x2cf: JUMPDEST 
0x2d0: V252 = 0x40
0x2d2: V253 = M[0x40]
0x2d3: V254 = 0x1
0x2d5: V255 = 0xa0
0x2d7: V256 = 0x2
0x2d9: V257 = EXP 0x2 0xa0
0x2da: V258 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2dd: V259 = AND V859 0xffffffffffffffffffffffffffffffffffffffff
0x2df: M[V253] = V259
0x2e0: V260 = 0x20
0x2e2: V261 = ADD 0x20 V253
0x2e3: V262 = 0x40
0x2e5: V263 = M[0x40]
0x2e8: V264 = SUB V261 V263
0x2ea: RETURN V263 V264
---
Entry stack: [V10, 0x2cf, V859]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x2cf]

================================

Block 0x2eb
[0x2eb:0x2f1]
---
Predecessors: [0xac]
Successors: [0x2f2, 0x2f6]
---
0x2eb JUMPDEST
0x2ec CALLVALUE
0x2ed ISZERO
0x2ee PUSH2 0x2f6
0x2f1 JUMPI
---
0x2eb: JUMPDEST 
0x2ec: V265 = CALLVALUE
0x2ed: V266 = ISZERO V265
0x2ee: V267 = 0x2f6
0x2f1: JUMPI 0x2f6 V266
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2f2
[0x2f2:0x2f5]
---
Predecessors: [0x2eb]
Successors: []
---
0x2f2 PUSH1 0x0
0x2f4 DUP1
0x2f5 REVERT
---
0x2f2: V268 = 0x0
0x2f5: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2f6
[0x2f6:0x309]
---
Predecessors: [0x2eb]
Successors: [0x94a]
---
0x2f6 JUMPDEST
0x2f7 PUSH2 0x30a
0x2fa PUSH1 0x1
0x2fc PUSH1 0xa0
0x2fe PUSH1 0x2
0x300 EXP
0x301 SUB
0x302 PUSH1 0x4
0x304 CALLDATALOAD
0x305 AND
0x306 PUSH2 0x94a
0x309 JUMP
---
0x2f6: JUMPDEST 
0x2f7: V269 = 0x30a
0x2fa: V270 = 0x1
0x2fc: V271 = 0xa0
0x2fe: V272 = 0x2
0x300: V273 = EXP 0x2 0xa0
0x301: V274 = SUB 0x10000000000000000000000000000000000000000 0x1
0x302: V275 = 0x4
0x304: V276 = CALLDATALOAD 0x4
0x305: V277 = AND V276 0xffffffffffffffffffffffffffffffffffffffff
0x306: V278 = 0x94a
0x309: JUMP 0x94a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x30a, V277]
Exit stack: [V10, 0x30a, V277]

================================

Block 0x30a
[0x30a:0x347]
---
Predecessors: [0x7f7, 0x97b, 0xd14]
Successors: []
---
0x30a JUMPDEST
0x30b PUSH1 0x40
0x30d MLOAD
0x30e SWAP5
0x30f ISZERO
0x310 ISZERO
0x311 DUP6
0x312 MSTORE
0x313 PUSH1 0x20
0x315 DUP6
0x316 ADD
0x317 SWAP4
0x318 SWAP1
0x319 SWAP4
0x31a MSTORE
0x31b PUSH1 0x40
0x31d DUP1
0x31e DUP6
0x31f ADD
0x320 SWAP3
0x321 SWAP1
0x322 SWAP3
0x323 MSTORE
0x324 PUSH1 0x1
0x326 PUSH1 0xa0
0x328 PUSH1 0x2
0x32a EXP
0x32b SUB
0x32c SWAP1
0x32d DUP2
0x32e AND
0x32f PUSH1 0x60
0x331 DUP6
0x332 ADD
0x333 MSTORE
0x334 SWAP1
0x335 SWAP2
0x336 AND
0x337 PUSH1 0x80
0x339 DUP4
0x33a ADD
0x33b MSTORE
0x33c PUSH1 0xa0
0x33e SWAP1
0x33f SWAP2
0x340 ADD
0x341 SWAP1
0x342 MLOAD
0x343 DUP1
0x344 SWAP2
0x345 SUB
0x346 SWAP1
0x347 RETURN
---
0x30a: JUMPDEST 
0x30b: V279 = 0x40
0x30d: V280 = M[0x40]
0x30f: V281 = ISZERO S4
0x310: V282 = ISZERO V281
0x312: M[V280] = V282
0x313: V283 = 0x20
0x316: V284 = ADD V280 0x20
0x31a: M[V284] = S3
0x31b: V285 = 0x40
0x31f: V286 = ADD V280 0x40
0x323: M[V286] = S2
0x324: V287 = 0x1
0x326: V288 = 0xa0
0x328: V289 = 0x2
0x32a: V290 = EXP 0x2 0xa0
0x32b: V291 = SUB 0x10000000000000000000000000000000000000000 0x1
0x32e: V292 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x32f: V293 = 0x60
0x332: V294 = ADD V280 0x60
0x333: M[V294] = V292
0x336: V295 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x337: V296 = 0x80
0x33a: V297 = ADD V280 0x80
0x33b: M[V297] = V295
0x33c: V298 = 0xa0
0x340: V299 = ADD V280 0xa0
0x342: V300 = M[0x40]
0x345: V301 = SUB V299 V300
0x347: RETURN V300 V301
---
Entry stack: [V10, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V10, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5]

================================

Block 0x348
[0x348:0x34e]
---
Predecessors: [0xb7]
Successors: [0x34f, 0x353]
---
0x348 JUMPDEST
0x349 CALLVALUE
0x34a ISZERO
0x34b PUSH2 0x353
0x34e JUMPI
---
0x348: JUMPDEST 
0x349: V302 = CALLVALUE
0x34a: V303 = ISZERO V302
0x34b: V304 = 0x353
0x34e: JUMPI 0x353 V303
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x34f
[0x34f:0x352]
---
Predecessors: [0x348]
Successors: []
---
0x34f PUSH1 0x0
0x351 DUP1
0x352 REVERT
---
0x34f: V305 = 0x0
0x352: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x353
[0x353:0x366]
---
Predecessors: [0x348]
Successors: [0x984]
---
0x353 JUMPDEST
0x354 PUSH2 0x367
0x357 PUSH1 0x1
0x359 PUSH1 0xa0
0x35b PUSH1 0x2
0x35d EXP
0x35e SUB
0x35f PUSH1 0x4
0x361 CALLDATALOAD
0x362 AND
0x363 PUSH2 0x984
0x366 JUMP
---
0x353: JUMPDEST 
0x354: V306 = 0x367
0x357: V307 = 0x1
0x359: V308 = 0xa0
0x35b: V309 = 0x2
0x35d: V310 = EXP 0x2 0xa0
0x35e: V311 = SUB 0x10000000000000000000000000000000000000000 0x1
0x35f: V312 = 0x4
0x361: V313 = CALLDATALOAD 0x4
0x362: V314 = AND V313 0xffffffffffffffffffffffffffffffffffffffff
0x363: V315 = 0x984
0x366: JUMP 0x984
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x367, V314]
Exit stack: [V10, 0x367, V314]

================================

Block 0x367
[0x367:0x39a]
---
Predecessors: [0x9b1]
Successors: []
---
0x367 JUMPDEST
0x368 PUSH1 0x40
0x36a MLOAD
0x36b SWAP4
0x36c DUP5
0x36d MSTORE
0x36e PUSH1 0x20
0x370 DUP5
0x371 ADD
0x372 SWAP3
0x373 SWAP1
0x374 SWAP3
0x375 MSTORE
0x376 PUSH1 0x40
0x378 DUP1
0x379 DUP5
0x37a ADD
0x37b SWAP2
0x37c SWAP1
0x37d SWAP2
0x37e MSTORE
0x37f PUSH1 0x1
0x381 PUSH1 0xa0
0x383 PUSH1 0x2
0x385 EXP
0x386 SUB
0x387 SWAP1
0x388 SWAP2
0x389 AND
0x38a PUSH1 0x60
0x38c DUP4
0x38d ADD
0x38e MSTORE
0x38f PUSH1 0x80
0x391 SWAP1
0x392 SWAP2
0x393 ADD
0x394 SWAP1
0x395 MLOAD
0x396 DUP1
0x397 SWAP2
0x398 SUB
0x399 SWAP1
0x39a RETURN
---
0x367: JUMPDEST 
0x368: V316 = 0x40
0x36a: V317 = M[0x40]
0x36d: M[V317] = V884
0x36e: V318 = 0x20
0x371: V319 = ADD V317 0x20
0x375: M[V319] = V887
0x376: V320 = 0x40
0x37a: V321 = ADD V317 0x40
0x37e: M[V321] = V890
0x37f: V322 = 0x1
0x381: V323 = 0xa0
0x383: V324 = 0x2
0x385: V325 = EXP 0x2 0xa0
0x386: V326 = SUB 0x10000000000000000000000000000000000000000 0x1
0x389: V327 = AND V314 0xffffffffffffffffffffffffffffffffffffffff
0x38a: V328 = 0x60
0x38d: V329 = ADD V317 0x60
0x38e: M[V329] = V327
0x38f: V330 = 0x80
0x393: V331 = ADD V317 0x80
0x395: V332 = M[0x40]
0x398: V333 = SUB V331 V332
0x39a: RETURN V332 V333
---
Entry stack: [V10, V884, V887, V890, V314]
Stack pops: 4
Stack additions: []
Exit stack: [V10]

================================

Block 0x39b
[0x39b:0x3a1]
---
Predecessors: [0xc2]
Successors: [0x3a2, 0x3a6]
---
0x39b JUMPDEST
0x39c CALLVALUE
0x39d ISZERO
0x39e PUSH2 0x3a6
0x3a1 JUMPI
---
0x39b: JUMPDEST 
0x39c: V334 = CALLVALUE
0x39d: V335 = ISZERO V334
0x39e: V336 = 0x3a6
0x3a1: JUMPI 0x3a6 V335
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3a2
[0x3a2:0x3a5]
---
Predecessors: [0x39b]
Successors: []
---
0x3a2 PUSH1 0x0
0x3a4 DUP1
0x3a5 REVERT
---
0x3a2: V337 = 0x0
0x3a5: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3a6
[0x3a6:0x3b9]
---
Predecessors: [0x39b]
Successors: [0x9b8]
---
0x3a6 JUMPDEST
0x3a7 PUSH2 0x3ba
0x3aa PUSH1 0x1
0x3ac PUSH1 0xa0
0x3ae PUSH1 0x2
0x3b0 EXP
0x3b1 SUB
0x3b2 PUSH1 0x4
0x3b4 CALLDATALOAD
0x3b5 AND
0x3b6 PUSH2 0x9b8
0x3b9 JUMP
---
0x3a6: JUMPDEST 
0x3a7: V338 = 0x3ba
0x3aa: V339 = 0x1
0x3ac: V340 = 0xa0
0x3ae: V341 = 0x2
0x3b0: V342 = EXP 0x2 0xa0
0x3b1: V343 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b2: V344 = 0x4
0x3b4: V345 = CALLDATALOAD 0x4
0x3b5: V346 = AND V345 0xffffffffffffffffffffffffffffffffffffffff
0x3b6: V347 = 0x9b8
0x3b9: JUMP 0x9b8
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3ba, V346]
Exit stack: [V10, 0x3ba, V346]

================================

Block 0x3ba
[0x3ba:0x3f6]
---
Predecessors: [0x9b8]
Successors: []
---
0x3ba JUMPDEST
0x3bb PUSH1 0x40
0x3bd MLOAD
0x3be PUSH1 0x1
0x3c0 PUSH1 0xa0
0x3c2 PUSH1 0x2
0x3c4 EXP
0x3c5 SUB
0x3c6 SWAP1
0x3c7 SWAP6
0x3c8 AND
0x3c9 DUP6
0x3ca MSTORE
0x3cb PUSH1 0x20
0x3cd DUP6
0x3ce ADD
0x3cf SWAP4
0x3d0 SWAP1
0x3d1 SWAP4
0x3d2 MSTORE
0x3d3 PUSH1 0x40
0x3d5 DUP1
0x3d6 DUP6
0x3d7 ADD
0x3d8 SWAP3
0x3d9 SWAP1
0x3da SWAP3
0x3db MSTORE
0x3dc PUSH1 0x60
0x3de DUP5
0x3df ADD
0x3e0 MSTORE
0x3e1 PUSH1 0xff
0x3e3 SWAP1
0x3e4 SWAP2
0x3e5 AND
0x3e6 PUSH1 0x80
0x3e8 DUP4
0x3e9 ADD
0x3ea MSTORE
0x3eb PUSH1 0xa0
0x3ed SWAP1
0x3ee SWAP2
0x3ef ADD
0x3f0 SWAP1
0x3f1 MLOAD
0x3f2 DUP1
0x3f3 SWAP2
0x3f4 SUB
0x3f5 SWAP1
0x3f6 RETURN
---
0x3ba: JUMPDEST 
0x3bb: V348 = 0x40
0x3bd: V349 = M[0x40]
0x3be: V350 = 0x1
0x3c0: V351 = 0xa0
0x3c2: V352 = 0x2
0x3c4: V353 = EXP 0x2 0xa0
0x3c5: V354 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c8: V355 = AND V913 0xffffffffffffffffffffffffffffffffffffffff
0x3ca: M[V349] = V355
0x3cb: V356 = 0x20
0x3ce: V357 = ADD V349 0x20
0x3d2: M[V357] = V899
0x3d3: V358 = 0x40
0x3d7: V359 = ADD V349 0x40
0x3db: M[V359] = V902
0x3dc: V360 = 0x60
0x3df: V361 = ADD V349 0x60
0x3e0: M[V361] = V905
0x3e1: V362 = 0xff
0x3e5: V363 = AND V915 0xff
0x3e6: V364 = 0x80
0x3e9: V365 = ADD V349 0x80
0x3ea: M[V365] = V363
0x3eb: V366 = 0xa0
0x3ef: V367 = ADD V349 0xa0
0x3f1: V368 = M[0x40]
0x3f4: V369 = SUB V367 V368
0x3f6: RETURN V368 V369
---
Entry stack: [V10, 0x3ba, V913, V899, V902, V905, V915]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x3ba]

================================

Block 0x3f7
[0x3f7:0x3fd]
---
Predecessors: [0xcd]
Successors: [0x3fe, 0x402]
---
0x3f7 JUMPDEST
0x3f8 CALLVALUE
0x3f9 ISZERO
0x3fa PUSH2 0x402
0x3fd JUMPI
---
0x3f7: JUMPDEST 
0x3f8: V370 = CALLVALUE
0x3f9: V371 = ISZERO V370
0x3fa: V372 = 0x402
0x3fd: JUMPI 0x402 V371
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3fe
[0x3fe:0x401]
---
Predecessors: [0x3f7]
Successors: []
---
0x3fe PUSH1 0x0
0x400 DUP1
0x401 REVERT
---
0x3fe: V373 = 0x0
0x401: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x402
[0x402:0x415]
---
Predecessors: [0x3f7]
Successors: [0x9f5]
---
0x402 JUMPDEST
0x403 PUSH2 0x1b9
0x406 PUSH1 0x1
0x408 PUSH1 0xa0
0x40a PUSH1 0x2
0x40c EXP
0x40d SUB
0x40e PUSH1 0x4
0x410 CALLDATALOAD
0x411 AND
0x412 PUSH2 0x9f5
0x415 JUMP
---
0x402: JUMPDEST 
0x403: V374 = 0x1b9
0x406: V375 = 0x1
0x408: V376 = 0xa0
0x40a: V377 = 0x2
0x40c: V378 = EXP 0x2 0xa0
0x40d: V379 = SUB 0x10000000000000000000000000000000000000000 0x1
0x40e: V380 = 0x4
0x410: V381 = CALLDATALOAD 0x4
0x411: V382 = AND V381 0xffffffffffffffffffffffffffffffffffffffff
0x412: V383 = 0x9f5
0x415: JUMP 0x9f5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b9, V382]
Exit stack: [V10, 0x1b9, V382]

================================

Block 0x416
[0x416:0x429]
---
Predecessors: []
Successors: []
---
0x416 JUMPDEST
0x417 PUSH1 0x40
0x419 MLOAD
0x41a SWAP1
0x41b ISZERO
0x41c ISZERO
0x41d DUP2
0x41e MSTORE
0x41f PUSH1 0x20
0x421 ADD
0x422 PUSH1 0x40
0x424 MLOAD
0x425 DUP1
0x426 SWAP2
0x427 SUB
0x428 SWAP1
0x429 RETURN
---
0x416: JUMPDEST 
0x417: V384 = 0x40
0x419: V385 = M[0x40]
0x41b: V386 = ISZERO S0
0x41c: V387 = ISZERO V386
0x41e: M[V385] = V387
0x41f: V388 = 0x20
0x421: V389 = ADD 0x20 V385
0x422: V390 = 0x40
0x424: V391 = M[0x40]
0x427: V392 = SUB V389 V391
0x429: RETURN V391 V392
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x42a
[0x42a:0x430]
---
Predecessors: [0xd8]
Successors: [0x431, 0x435]
---
0x42a JUMPDEST
0x42b CALLVALUE
0x42c ISZERO
0x42d PUSH2 0x435
0x430 JUMPI
---
0x42a: JUMPDEST 
0x42b: V393 = CALLVALUE
0x42c: V394 = ISZERO V393
0x42d: V395 = 0x435
0x430: JUMPI 0x435 V394
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x431
[0x431:0x434]
---
Predecessors: [0x42a]
Successors: []
---
0x431 PUSH1 0x0
0x433 DUP1
0x434 REVERT
---
0x431: V396 = 0x0
0x434: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x435
[0x435:0x448]
---
Predecessors: [0x42a]
Successors: [0xa41]
---
0x435 JUMPDEST
0x436 PUSH2 0x1b9
0x439 PUSH1 0x1
0x43b PUSH1 0xa0
0x43d PUSH1 0x2
0x43f EXP
0x440 SUB
0x441 PUSH1 0x4
0x443 CALLDATALOAD
0x444 AND
0x445 PUSH2 0xa41
0x448 JUMP
---
0x435: JUMPDEST 
0x436: V397 = 0x1b9
0x439: V398 = 0x1
0x43b: V399 = 0xa0
0x43d: V400 = 0x2
0x43f: V401 = EXP 0x2 0xa0
0x440: V402 = SUB 0x10000000000000000000000000000000000000000 0x1
0x441: V403 = 0x4
0x443: V404 = CALLDATALOAD 0x4
0x444: V405 = AND V404 0xffffffffffffffffffffffffffffffffffffffff
0x445: V406 = 0xa41
0x448: JUMP 0xa41
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b9, V405]
Exit stack: [V10, 0x1b9, V405]

================================

Block 0x449
[0x449:0x45c]
---
Predecessors: []
Successors: []
---
0x449 JUMPDEST
0x44a PUSH1 0x40
0x44c MLOAD
0x44d SWAP1
0x44e ISZERO
0x44f ISZERO
0x450 DUP2
0x451 MSTORE
0x452 PUSH1 0x20
0x454 ADD
0x455 PUSH1 0x40
0x457 MLOAD
0x458 DUP1
0x459 SWAP2
0x45a SUB
0x45b SWAP1
0x45c RETURN
---
0x449: JUMPDEST 
0x44a: V407 = 0x40
0x44c: V408 = M[0x40]
0x44e: V409 = ISZERO S0
0x44f: V410 = ISZERO V409
0x451: M[V408] = V410
0x452: V411 = 0x20
0x454: V412 = ADD 0x20 V408
0x455: V413 = 0x40
0x457: V414 = M[0x40]
0x45a: V415 = SUB V412 V414
0x45c: RETURN V414 V415
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x45d
[0x45d:0x463]
---
Predecessors: [0xe3]
Successors: [0x464, 0x468]
---
0x45d JUMPDEST
0x45e CALLVALUE
0x45f ISZERO
0x460 PUSH2 0x468
0x463 JUMPI
---
0x45d: JUMPDEST 
0x45e: V416 = CALLVALUE
0x45f: V417 = ISZERO V416
0x460: V418 = 0x468
0x463: JUMPI 0x468 V417
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x464
[0x464:0x467]
---
Predecessors: [0x45d]
Successors: []
---
0x464 PUSH1 0x0
0x466 DUP1
0x467 REVERT
---
0x464: V419 = 0x0
0x467: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x468
[0x468:0x46f]
---
Predecessors: [0x45d]
Successors: [0xa87]
---
0x468 JUMPDEST
0x469 PUSH2 0x470
0x46c PUSH2 0xa87
0x46f JUMP
---
0x468: JUMPDEST 
0x469: V420 = 0x470
0x46c: V421 = 0xa87
0x46f: JUMP 0xa87
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x470]
Exit stack: [V10, 0x470]

================================

Block 0x470
[0x470:0x485]
---
Predecessors: [0xa87]
Successors: []
---
0x470 JUMPDEST
0x471 PUSH1 0x40
0x473 MLOAD
0x474 PUSH1 0xff
0x476 SWAP1
0x477 SWAP2
0x478 AND
0x479 DUP2
0x47a MSTORE
0x47b PUSH1 0x20
0x47d ADD
0x47e PUSH1 0x40
0x480 MLOAD
0x481 DUP1
0x482 SWAP2
0x483 SUB
0x484 SWAP1
0x485 RETURN
---
0x470: JUMPDEST 
0x471: V422 = 0x40
0x473: V423 = M[0x40]
0x474: V424 = 0xff
0x478: V425 = AND V980 0xff
0x47a: M[V423] = V425
0x47b: V426 = 0x20
0x47d: V427 = ADD 0x20 V423
0x47e: V428 = 0x40
0x480: V429 = M[0x40]
0x483: V430 = SUB V427 V429
0x485: RETURN V429 V430
---
Entry stack: [V10, 0x470, V980]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x470]

================================

Block 0x486
[0x486:0x48c]
---
Predecessors: [0xee]
Successors: [0x48d, 0x491]
---
0x486 JUMPDEST
0x487 CALLVALUE
0x488 ISZERO
0x489 PUSH2 0x491
0x48c JUMPI
---
0x486: JUMPDEST 
0x487: V431 = CALLVALUE
0x488: V432 = ISZERO V431
0x489: V433 = 0x491
0x48c: JUMPI 0x491 V432
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x48d
[0x48d:0x490]
---
Predecessors: [0x486]
Successors: []
---
0x48d PUSH1 0x0
0x48f DUP1
0x490 REVERT
---
0x48d: V434 = 0x0
0x490: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x491
[0x491:0x498]
---
Predecessors: [0x486]
Successors: [0xa90]
---
0x491 JUMPDEST
0x492 PUSH2 0x145
0x495 PUSH2 0xa90
0x498 JUMP
---
0x491: JUMPDEST 
0x492: V435 = 0x145
0x495: V436 = 0xa90
0x498: JUMP 0xa90
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x145]
Exit stack: [V10, 0x145]

================================

Block 0x499
[0x499:0x49a]
---
Predecessors: []
Successors: []
---
0x499 JUMPDEST
0x49a STOP
---
0x499: JUMPDEST 
0x49a: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x49b
[0x49b:0x4a1]
---
Predecessors: [0xf9]
Successors: [0x4a2, 0x4a6]
---
0x49b JUMPDEST
0x49c CALLVALUE
0x49d ISZERO
0x49e PUSH2 0x4a6
0x4a1 JUMPI
---
0x49b: JUMPDEST 
0x49c: V437 = CALLVALUE
0x49d: V438 = ISZERO V437
0x49e: V439 = 0x4a6
0x4a1: JUMPI 0x4a6 V438
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4a2
[0x4a2:0x4a5]
---
Predecessors: [0x49b]
Successors: []
---
0x4a2 PUSH1 0x0
0x4a4 DUP1
0x4a5 REVERT
---
0x4a2: V440 = 0x0
0x4a5: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4a6
[0x4a6:0x4b9]
---
Predecessors: [0x49b]
Successors: [0xabb]
---
0x4a6 JUMPDEST
0x4a7 PUSH2 0x1b9
0x4aa PUSH1 0x1
0x4ac PUSH1 0xa0
0x4ae PUSH1 0x2
0x4b0 EXP
0x4b1 SUB
0x4b2 PUSH1 0x4
0x4b4 CALLDATALOAD
0x4b5 AND
0x4b6 PUSH2 0xabb
0x4b9 JUMP
---
0x4a6: JUMPDEST 
0x4a7: V441 = 0x1b9
0x4aa: V442 = 0x1
0x4ac: V443 = 0xa0
0x4ae: V444 = 0x2
0x4b0: V445 = EXP 0x2 0xa0
0x4b1: V446 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4b2: V447 = 0x4
0x4b4: V448 = CALLDATALOAD 0x4
0x4b5: V449 = AND V448 0xffffffffffffffffffffffffffffffffffffffff
0x4b6: V450 = 0xabb
0x4b9: JUMP 0xabb
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b9, V449]
Exit stack: [V10, 0x1b9, V449]

================================

Block 0x4ba
[0x4ba:0x4cd]
---
Predecessors: []
Successors: []
---
0x4ba JUMPDEST
0x4bb PUSH1 0x40
0x4bd MLOAD
0x4be SWAP1
0x4bf ISZERO
0x4c0 ISZERO
0x4c1 DUP2
0x4c2 MSTORE
0x4c3 PUSH1 0x20
0x4c5 ADD
0x4c6 PUSH1 0x40
0x4c8 MLOAD
0x4c9 DUP1
0x4ca SWAP2
0x4cb SUB
0x4cc SWAP1
0x4cd RETURN
---
0x4ba: JUMPDEST 
0x4bb: V451 = 0x40
0x4bd: V452 = M[0x40]
0x4bf: V453 = ISZERO S0
0x4c0: V454 = ISZERO V453
0x4c2: M[V452] = V454
0x4c3: V455 = 0x20
0x4c5: V456 = ADD 0x20 V452
0x4c6: V457 = 0x40
0x4c8: V458 = M[0x40]
0x4cb: V459 = SUB V456 V458
0x4cd: RETURN V458 V459
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4ce
[0x4ce:0x4d4]
---
Predecessors: [0x104]
Successors: [0x4d5, 0x4d9]
---
0x4ce JUMPDEST
0x4cf CALLVALUE
0x4d0 ISZERO
0x4d1 PUSH2 0x4d9
0x4d4 JUMPI
---
0x4ce: JUMPDEST 
0x4cf: V460 = CALLVALUE
0x4d0: V461 = ISZERO V460
0x4d1: V462 = 0x4d9
0x4d4: JUMPI 0x4d9 V461
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4d5
[0x4d5:0x4d8]
---
Predecessors: [0x4ce]
Successors: []
---
0x4d5 PUSH1 0x0
0x4d7 DUP1
0x4d8 REVERT
---
0x4d5: V463 = 0x0
0x4d8: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4d9
[0x4d9:0x4ec]
---
Predecessors: [0x4ce]
Successors: [0xb16]
---
0x4d9 JUMPDEST
0x4da PUSH2 0x145
0x4dd PUSH1 0x1
0x4df PUSH1 0xa0
0x4e1 PUSH1 0x2
0x4e3 EXP
0x4e4 SUB
0x4e5 PUSH1 0x4
0x4e7 CALLDATALOAD
0x4e8 AND
0x4e9 PUSH2 0xb16
0x4ec JUMP
---
0x4d9: JUMPDEST 
0x4da: V464 = 0x145
0x4dd: V465 = 0x1
0x4df: V466 = 0xa0
0x4e1: V467 = 0x2
0x4e3: V468 = EXP 0x2 0xa0
0x4e4: V469 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4e5: V470 = 0x4
0x4e7: V471 = CALLDATALOAD 0x4
0x4e8: V472 = AND V471 0xffffffffffffffffffffffffffffffffffffffff
0x4e9: V473 = 0xb16
0x4ec: JUMP 0xb16
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x145, V472]
Exit stack: [V10, 0x145, V472]

================================

Block 0x4ed
[0x4ed:0x4ee]
---
Predecessors: []
Successors: []
---
0x4ed JUMPDEST
0x4ee STOP
---
0x4ed: JUMPDEST 
0x4ee: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x4ef
[0x4ef:0x4f5]
---
Predecessors: [0x10f]
Successors: [0x4f6, 0x4fa]
---
0x4ef JUMPDEST
0x4f0 CALLVALUE
0x4f1 ISZERO
0x4f2 PUSH2 0x4fa
0x4f5 JUMPI
---
0x4ef: JUMPDEST 
0x4f0: V474 = CALLVALUE
0x4f1: V475 = ISZERO V474
0x4f2: V476 = 0x4fa
0x4f5: JUMPI 0x4fa V475
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4f6
[0x4f6:0x4f9]
---
Predecessors: [0x4ef]
Successors: []
---
0x4f6 PUSH1 0x0
0x4f8 DUP1
0x4f9 REVERT
---
0x4f6: V477 = 0x0
0x4f9: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4fa
[0x4fa:0x510]
---
Predecessors: [0x4ef]
Successors: [0xb5e]
---
0x4fa JUMPDEST
0x4fb PUSH2 0x1b9
0x4fe PUSH1 0x1
0x500 PUSH1 0xa0
0x502 PUSH1 0x2
0x504 EXP
0x505 SUB
0x506 PUSH1 0x4
0x508 CALLDATALOAD
0x509 AND
0x50a PUSH1 0x24
0x50c CALLDATALOAD
0x50d PUSH2 0xb5e
0x510 JUMP
---
0x4fa: JUMPDEST 
0x4fb: V478 = 0x1b9
0x4fe: V479 = 0x1
0x500: V480 = 0xa0
0x502: V481 = 0x2
0x504: V482 = EXP 0x2 0xa0
0x505: V483 = SUB 0x10000000000000000000000000000000000000000 0x1
0x506: V484 = 0x4
0x508: V485 = CALLDATALOAD 0x4
0x509: V486 = AND V485 0xffffffffffffffffffffffffffffffffffffffff
0x50a: V487 = 0x24
0x50c: V488 = CALLDATALOAD 0x24
0x50d: V489 = 0xb5e
0x510: JUMP 0xb5e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b9, V486, V488]
Exit stack: [V10, 0x1b9, V486, V488]

================================

Block 0x511
[0x511:0x524]
---
Predecessors: []
Successors: []
---
0x511 JUMPDEST
0x512 PUSH1 0x40
0x514 MLOAD
0x515 SWAP1
0x516 ISZERO
0x517 ISZERO
0x518 DUP2
0x519 MSTORE
0x51a PUSH1 0x20
0x51c ADD
0x51d PUSH1 0x40
0x51f MLOAD
0x520 DUP1
0x521 SWAP2
0x522 SUB
0x523 SWAP1
0x524 RETURN
---
0x511: JUMPDEST 
0x512: V490 = 0x40
0x514: V491 = M[0x40]
0x516: V492 = ISZERO S0
0x517: V493 = ISZERO V492
0x519: M[V491] = V493
0x51a: V494 = 0x20
0x51c: V495 = ADD 0x20 V491
0x51d: V496 = 0x40
0x51f: V497 = M[0x40]
0x522: V498 = SUB V495 V497
0x524: RETURN V497 V498
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x525
[0x525:0x547]
---
Predecessors: [0x132, 0x16e]
Successors: [0x548, 0x556]
---
0x525 JUMPDEST
0x526 PUSH1 0x1
0x528 PUSH1 0xa0
0x52a PUSH1 0x2
0x52c EXP
0x52d SUB
0x52e CALLER
0x52f AND
0x530 PUSH1 0x0
0x532 SWAP1
0x533 DUP2
0x534 MSTORE
0x535 PUSH1 0x5
0x537 PUSH1 0x20
0x539 MSTORE
0x53a PUSH1 0x40
0x53c SWAP1
0x53d SHA3
0x53e SLOAD
0x53f PUSH1 0xff
0x541 AND
0x542 ISZERO
0x543 ISZERO
0x544 PUSH2 0x556
0x547 JUMPI
---
0x525: JUMPDEST 
0x526: V499 = 0x1
0x528: V500 = 0xa0
0x52a: V501 = 0x2
0x52c: V502 = EXP 0x2 0xa0
0x52d: V503 = SUB 0x10000000000000000000000000000000000000000 0x1
0x52e: V504 = CALLER
0x52f: V505 = AND V504 0xffffffffffffffffffffffffffffffffffffffff
0x530: V506 = 0x0
0x534: M[0x0] = V505
0x535: V507 = 0x5
0x537: V508 = 0x20
0x539: M[0x20] = 0x5
0x53a: V509 = 0x40
0x53d: V510 = SHA3 0x0 0x40
0x53e: V511 = S[V510]
0x53f: V512 = 0xff
0x541: V513 = AND 0xff V511
0x542: V514 = ISZERO V513
0x543: V515 = ISZERO V514
0x544: V516 = 0x556
0x547: JUMPI 0x556 V515
---
Entry stack: [V10, 0x145, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x145, S2, S1, S0]

================================

Block 0x548
[0x548:0x551]
---
Predecessors: [0x525]
Successors: [0x552, 0x556]
---
0x548 PUSH1 0x1
0x54a SLOAD
0x54b CALLVALUE
0x54c LT
0x54d ISZERO
0x54e PUSH2 0x556
0x551 JUMPI
---
0x548: V517 = 0x1
0x54a: V518 = S[0x1]
0x54b: V519 = CALLVALUE
0x54c: V520 = LT V519 V518
0x54d: V521 = ISZERO V520
0x54e: V522 = 0x556
0x551: JUMPI 0x556 V521
---
Entry stack: [V10, 0x145, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x145, S2, S1, S0]

================================

Block 0x552
[0x552:0x555]
---
Predecessors: [0x548]
Successors: []
---
0x552 PUSH1 0x0
0x554 DUP1
0x555 REVERT
---
0x552: V523 = 0x0
0x555: REVERT 0x0 0x0
---
Entry stack: [V10, 0x145, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x145, S2, S1, S0]

================================

Block 0x556
[0x556:0x556]
---
Predecessors: [0x525, 0x548]
Successors: [0x557]
---
0x556 JUMPDEST
---
0x556: JUMPDEST 
---
Entry stack: [V10, 0x145, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x145, S2, S1, S0]

================================

Block 0x557
[0x557:0x55f]
---
Predecessors: [0x556]
Successors: [0xabb]
---
0x557 JUMPDEST
0x558 PUSH2 0x560
0x55b DUP4
0x55c PUSH2 0xabb
0x55f JUMP
---
0x557: JUMPDEST 
0x558: V524 = 0x560
0x55c: V525 = 0xabb
0x55f: JUMP 0xabb
---
Entry stack: [V10, 0x145, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x560, S2]
Exit stack: [V10, 0x145, S2, S1, S0, 0x560, S2]

================================

Block 0x560
[0x560:0x565]
---
Predecessors: [0x7af, 0xb11]
Successors: [0x566, 0x567]
---
0x560 JUMPDEST
0x561 ISZERO
0x562 PUSH2 0x567
0x565 JUMPI
---
0x560: JUMPDEST 
0x561: V526 = ISZERO {0x0, 0x1}
0x562: V527 = 0x567
0x565: JUMPI 0x567 V526
---
Entry stack: [V10, 0x30a, V277, 0x0, 0x0, S7, {0x0, 0x145}, S5, {0x145, 0x720, 0x95c}, S3, S2, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x30a, V277, 0x0, 0x0, S7, {0x0, 0x145}, S5, {0x145, 0x720, 0x95c}, S3, S2, S1]

================================

Block 0x566
[0x566:0x566]
---
Predecessors: [0x560]
Successors: []
---
0x566 INVALID
---
0x566: INVALID 
---
Entry stack: [V10, 0x30a, V277, 0x0, 0x0, S6, {0x0, 0x145}, S4, {0x145, 0x720, 0x95c}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x30a, V277, 0x0, 0x0, S6, {0x0, 0x145}, S4, {0x145, 0x720, 0x95c}, S2, S1, S0]

================================

Block 0x567
[0x567:0x61c]
---
Predecessors: [0x560]
Successors: [0x61d, 0x63b]
---
0x567 JUMPDEST
0x568 PUSH1 0xa0
0x56a PUSH1 0x40
0x56c MLOAD
0x56d SWAP1
0x56e DUP2
0x56f ADD
0x570 PUSH1 0x40
0x572 SWAP1
0x573 DUP2
0x574 MSTORE
0x575 PUSH1 0x1
0x577 PUSH1 0xa0
0x579 PUSH1 0x2
0x57b EXP
0x57c SUB
0x57d ORIGIN
0x57e DUP2
0x57f AND
0x580 DUP4
0x581 MSTORE
0x582 PUSH1 0x0
0x584 PUSH1 0x20
0x586 DUP1
0x587 DUP6
0x588 ADD
0x589 DUP3
0x58a SWAP1
0x58b MSTORE
0x58c NUMBER
0x58d DUP5
0x58e DUP7
0x58f ADD
0x590 MSTORE
0x591 PUSH1 0x3
0x593 SLOAD
0x594 PUSH1 0x60
0x596 DUP7
0x597 ADD
0x598 MSTORE
0x599 PUSH1 0x2
0x59b SLOAD
0x59c PUSH1 0xff
0x59e AND
0x59f PUSH1 0x80
0x5a1 DUP7
0x5a2 ADD
0x5a3 MSTORE
0x5a4 SWAP2
0x5a5 DUP8
0x5a6 AND
0x5a7 DUP2
0x5a8 MSTORE
0x5a9 PUSH1 0x4
0x5ab SWAP1
0x5ac SWAP2
0x5ad MSTORE
0x5ae SHA3
0x5af DUP2
0x5b0 MLOAD
0x5b1 DUP2
0x5b2 SLOAD
0x5b3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5c8 NOT
0x5c9 AND
0x5ca PUSH1 0x1
0x5cc PUSH1 0xa0
0x5ce PUSH1 0x2
0x5d0 EXP
0x5d1 SUB
0x5d2 SWAP2
0x5d3 SWAP1
0x5d4 SWAP2
0x5d5 AND
0x5d6 OR
0x5d7 DUP2
0x5d8 SSTORE
0x5d9 PUSH1 0x20
0x5db DUP3
0x5dc ADD
0x5dd MLOAD
0x5de DUP2
0x5df PUSH1 0x1
0x5e1 ADD
0x5e2 SSTORE
0x5e3 PUSH1 0x40
0x5e5 DUP3
0x5e6 ADD
0x5e7 MLOAD
0x5e8 DUP2
0x5e9 PUSH1 0x2
0x5eb ADD
0x5ec SSTORE
0x5ed PUSH1 0x60
0x5ef DUP3
0x5f0 ADD
0x5f1 MLOAD
0x5f2 DUP2
0x5f3 PUSH1 0x3
0x5f5 ADD
0x5f6 SSTORE
0x5f7 PUSH1 0x80
0x5f9 DUP3
0x5fa ADD
0x5fb MLOAD
0x5fc PUSH1 0x4
0x5fe SWAP2
0x5ff SWAP1
0x600 SWAP2
0x601 ADD
0x602 DUP1
0x603 SLOAD
0x604 PUSH1 0xff
0x606 NOT
0x607 AND
0x608 PUSH1 0xff
0x60a SWAP1
0x60b SWAP3
0x60c AND
0x60d SWAP2
0x60e SWAP1
0x60f SWAP2
0x610 OR
0x611 SWAP1
0x612 SSTORE
0x613 POP
0x614 PUSH1 0x1
0x616 DUP3
0x617 GT
0x618 ISZERO
0x619 PUSH2 0x63b
0x61c JUMPI
---
0x567: JUMPDEST 
0x568: V528 = 0xa0
0x56a: V529 = 0x40
0x56c: V530 = M[0x40]
0x56f: V531 = ADD V530 0xa0
0x570: V532 = 0x40
0x574: M[0x40] = V531
0x575: V533 = 0x1
0x577: V534 = 0xa0
0x579: V535 = 0x2
0x57b: V536 = EXP 0x2 0xa0
0x57c: V537 = SUB 0x10000000000000000000000000000000000000000 0x1
0x57d: V538 = ORIGIN
0x57f: V539 = AND 0xffffffffffffffffffffffffffffffffffffffff V538
0x581: M[V530] = V539
0x582: V540 = 0x0
0x584: V541 = 0x20
0x588: V542 = ADD V530 0x20
0x58b: M[V542] = 0x0
0x58c: V543 = NUMBER
0x58f: V544 = ADD V530 0x40
0x590: M[V544] = V543
0x591: V545 = 0x3
0x593: V546 = S[0x3]
0x594: V547 = 0x60
0x597: V548 = ADD V530 0x60
0x598: M[V548] = V546
0x599: V549 = 0x2
0x59b: V550 = S[0x2]
0x59c: V551 = 0xff
0x59e: V552 = AND 0xff V550
0x59f: V553 = 0x80
0x5a2: V554 = ADD V530 0x80
0x5a3: M[V554] = V552
0x5a6: V555 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x5a8: M[0x0] = V555
0x5a9: V556 = 0x4
0x5ad: M[0x20] = 0x4
0x5ae: V557 = SHA3 0x0 0x40
0x5b0: V558 = M[V530]
0x5b2: V559 = S[V557]
0x5b3: V560 = 0xffffffffffffffffffffffffffffffffffffffff
0x5c8: V561 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x5c9: V562 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V559
0x5ca: V563 = 0x1
0x5cc: V564 = 0xa0
0x5ce: V565 = 0x2
0x5d0: V566 = EXP 0x2 0xa0
0x5d1: V567 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5d5: V568 = AND 0xffffffffffffffffffffffffffffffffffffffff V558
0x5d6: V569 = OR V568 V562
0x5d8: S[V557] = V569
0x5d9: V570 = 0x20
0x5dc: V571 = ADD V530 0x20
0x5dd: V572 = M[V571]
0x5df: V573 = 0x1
0x5e1: V574 = ADD 0x1 V557
0x5e2: S[V574] = V572
0x5e3: V575 = 0x40
0x5e6: V576 = ADD V530 0x40
0x5e7: V577 = M[V576]
0x5e9: V578 = 0x2
0x5eb: V579 = ADD 0x2 V557
0x5ec: S[V579] = V577
0x5ed: V580 = 0x60
0x5f0: V581 = ADD V530 0x60
0x5f1: V582 = M[V581]
0x5f3: V583 = 0x3
0x5f5: V584 = ADD 0x3 V557
0x5f6: S[V584] = V582
0x5f7: V585 = 0x80
0x5fa: V586 = ADD V530 0x80
0x5fb: V587 = M[V586]
0x5fc: V588 = 0x4
0x601: V589 = ADD 0x4 V557
0x603: V590 = S[V589]
0x604: V591 = 0xff
0x606: V592 = NOT 0xff
0x607: V593 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V590
0x608: V594 = 0xff
0x60c: V595 = AND V587 0xff
0x610: V596 = OR V595 V593
0x612: S[V589] = V596
0x614: V597 = 0x1
0x617: V598 = GT S1 0x1
0x618: V599 = ISZERO V598
0x619: V600 = 0x63b
0x61c: JUMPI 0x63b V599
---
Entry stack: [V10, 0x30a, V277, 0x0, 0x0, S6, {0x0, 0x145}, S4, {0x145, 0x720, 0x95c}, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x30a, V277, 0x0, 0x0, S6, {0x0, 0x145}, S4, {0x145, 0x720, 0x95c}, S2, S1, S0]

================================

Block 0x61d
[0x61d:0x63a]
---
Predecessors: [0x567]
Successors: [0x63b]
---
0x61d PUSH1 0x1
0x61f PUSH1 0xa0
0x621 PUSH1 0x2
0x623 EXP
0x624 SUB
0x625 DUP4
0x626 AND
0x627 PUSH1 0x0
0x629 SWAP1
0x62a DUP2
0x62b MSTORE
0x62c PUSH1 0x4
0x62e PUSH1 0x20
0x630 MSTORE
0x631 PUSH1 0x40
0x633 SWAP1
0x634 SHA3
0x635 PUSH1 0x3
0x637 ADD
0x638 DUP3
0x639 SWAP1
0x63a SSTORE
---
0x61d: V601 = 0x1
0x61f: V602 = 0xa0
0x621: V603 = 0x2
0x623: V604 = EXP 0x2 0xa0
0x624: V605 = SUB 0x10000000000000000000000000000000000000000 0x1
0x626: V606 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x627: V607 = 0x0
0x62b: M[0x0] = V606
0x62c: V608 = 0x4
0x62e: V609 = 0x20
0x630: M[0x20] = 0x4
0x631: V610 = 0x40
0x634: V611 = SHA3 0x0 0x40
0x635: V612 = 0x3
0x637: V613 = ADD 0x3 V611
0x63a: S[V613] = S1
---
Entry stack: [V10, 0x30a, V277, 0x0, 0x0, S6, {0x0, 0x145}, S4, {0x145, 0x720, 0x95c}, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x30a, V277, 0x0, 0x0, S6, {0x0, 0x145}, S4, {0x145, 0x720, 0x95c}, S2, S1, S0]

================================

Block 0x63b
[0x63b:0x648]
---
Predecessors: [0x567, 0x61d]
Successors: [0x649, 0x651]
---
0x63b JUMPDEST
0x63c PUSH1 0x0
0x63e DUP2
0x63f PUSH1 0xff
0x641 AND
0x642 GT
0x643 DUP1
0x644 ISZERO
0x645 PUSH2 0x651
0x648 JUMPI
---
0x63b: JUMPDEST 
0x63c: V614 = 0x0
0x63f: V615 = 0xff
0x641: V616 = AND 0xff S0
0x642: V617 = GT V616 0x0
0x644: V618 = ISZERO V617
0x645: V619 = 0x651
0x648: JUMPI 0x651 V618
---
Entry stack: [V10, 0x30a, V277, 0x0, 0x0, S6, {0x0, 0x145}, S4, {0x145, 0x720, 0x95c}, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, V617]
Exit stack: [V10, 0x30a, V277, 0x0, 0x0, S6, {0x0, 0x145}, S4, {0x145, 0x720, 0x95c}, S2, S1, S0, V617]

================================

Block 0x649
[0x649:0x650]
---
Predecessors: [0x63b]
Successors: [0x651]
---
0x649 POP
0x64a PUSH1 0xfa
0x64c DUP2
0x64d PUSH1 0xff
0x64f AND
0x650 LT
---
0x64a: V620 = 0xfa
0x64d: V621 = 0xff
0x64f: V622 = AND 0xff S1
0x650: V623 = LT V622 0xfa
---
Entry stack: [V10, 0x30a, V277, 0x0, 0x0, S7, {0x0, 0x145}, S5, {0x145, 0x720, 0x95c}, S3, S2, S1, V617]
Stack pops: 2
Stack additions: [S1, V623]
Exit stack: [V10, 0x30a, V277, 0x0, 0x0, S7, {0x0, 0x145}, S5, {0x145, 0x720, 0x95c}, S3, S2, S1, V623]

================================

Block 0x651
[0x651:0x656]
---
Predecessors: [0x63b, 0x649]
Successors: [0x657, 0x680]
---
0x651 JUMPDEST
0x652 ISZERO
0x653 PUSH2 0x680
0x656 JUMPI
---
0x651: JUMPDEST 
0x652: V624 = ISZERO S0
0x653: V625 = 0x680
0x656: JUMPI 0x680 V624
---
Entry stack: [V10, 0x30a, V277, 0x0, 0x0, S7, {0x0, 0x145}, S5, {0x145, 0x720, 0x95c}, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x30a, V277, 0x0, 0x0, S7, {0x0, 0x145}, S5, {0x145, 0x720, 0x95c}, S3, S2, S1]

================================

Block 0x657
[0x657:0x67f]
---
Predecessors: [0x651]
Successors: [0x680]
---
0x657 PUSH1 0x1
0x659 PUSH1 0xa0
0x65b PUSH1 0x2
0x65d EXP
0x65e SUB
0x65f DUP4
0x660 AND
0x661 PUSH1 0x0
0x663 SWAP1
0x664 DUP2
0x665 MSTORE
0x666 PUSH1 0x4
0x668 PUSH1 0x20
0x66a DUP2
0x66b SWAP1
0x66c MSTORE
0x66d PUSH1 0x40
0x66f SWAP1
0x670 SWAP2
0x671 SHA3
0x672 ADD
0x673 DUP1
0x674 SLOAD
0x675 PUSH1 0xff
0x677 NOT
0x678 AND
0x679 PUSH1 0xff
0x67b DUP4
0x67c AND
0x67d OR
0x67e SWAP1
0x67f SSTORE
---
0x657: V626 = 0x1
0x659: V627 = 0xa0
0x65b: V628 = 0x2
0x65d: V629 = EXP 0x2 0xa0
0x65e: V630 = SUB 0x10000000000000000000000000000000000000000 0x1
0x660: V631 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x661: V632 = 0x0
0x665: M[0x0] = V631
0x666: V633 = 0x4
0x668: V634 = 0x20
0x66c: M[0x20] = 0x4
0x66d: V635 = 0x40
0x671: V636 = SHA3 0x0 0x40
0x672: V637 = ADD V636 0x4
0x674: V638 = S[V637]
0x675: V639 = 0xff
0x677: V640 = NOT 0xff
0x678: V641 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V638
0x679: V642 = 0xff
0x67c: V643 = AND S0 0xff
0x67d: V644 = OR V643 V641
0x67f: S[V637] = V644
---
Entry stack: [V10, 0x30a, V277, 0x0, 0x0, S6, {0x0, 0x145}, S4, {0x145, 0x720, 0x95c}, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x30a, V277, 0x0, 0x0, S6, {0x0, 0x145}, S4, {0x145, 0x720, 0x95c}, S2, S1, S0]

================================

Block 0x680
[0x680:0x70a]
---
Predecessors: [0x651, 0x657]
Successors: [0x70b]
---
0x680 JUMPDEST
0x681 PUSH1 0x1
0x683 PUSH1 0xa0
0x685 PUSH1 0x2
0x687 EXP
0x688 SUB
0x689 DUP4
0x68a AND
0x68b PUSH1 0x0
0x68d SWAP1
0x68e DUP2
0x68f MSTORE
0x690 PUSH1 0x4
0x692 PUSH1 0x20
0x694 DUP2
0x695 SWAP1
0x696 MSTORE
0x697 PUSH1 0x40
0x699 SWAP2
0x69a DUP3
0x69b SWAP1
0x69c SHA3
0x69d PUSH1 0x3
0x69f DUP2
0x6a0 ADD
0x6a1 SLOAD
0x6a2 PUSH1 0x2
0x6a4 DUP3
0x6a5 ADD
0x6a6 SLOAD
0x6a7 SWAP2
0x6a8 SWAP1
0x6a9 SWAP3
0x6aa ADD
0x6ab SLOAD
0x6ac PUSH32 0xa2605dc1353bea55de8ac977b40ab996f4e7340179b5f62f70f479cfff7a0cf8
0x6cd SWAP4
0x6ce DUP8
0x6cf SWAP4
0x6d0 SWAP3
0x6d1 SWAP2
0x6d2 PUSH1 0xff
0x6d4 AND
0x6d5 SWAP1
0x6d6 MLOAD
0x6d7 PUSH1 0x1
0x6d9 PUSH1 0xa0
0x6db PUSH1 0x2
0x6dd EXP
0x6de SUB
0x6df SWAP1
0x6e0 SWAP5
0x6e1 AND
0x6e2 DUP5
0x6e3 MSTORE
0x6e4 PUSH1 0x20
0x6e6 DUP5
0x6e7 ADD
0x6e8 SWAP3
0x6e9 SWAP1
0x6ea SWAP3
0x6eb MSTORE
0x6ec PUSH1 0x40
0x6ee DUP1
0x6ef DUP5
0x6f0 ADD
0x6f1 SWAP2
0x6f2 SWAP1
0x6f3 SWAP2
0x6f4 MSTORE
0x6f5 PUSH1 0xff
0x6f7 SWAP1
0x6f8 SWAP2
0x6f9 AND
0x6fa PUSH1 0x60
0x6fc DUP4
0x6fd ADD
0x6fe MSTORE
0x6ff PUSH1 0x80
0x701 SWAP1
0x702 SWAP2
0x703 ADD
0x704 SWAP1
0x705 MLOAD
0x706 DUP1
0x707 SWAP2
0x708 SUB
0x709 SWAP1
0x70a LOG1
---
0x680: JUMPDEST 
0x681: V645 = 0x1
0x683: V646 = 0xa0
0x685: V647 = 0x2
0x687: V648 = EXP 0x2 0xa0
0x688: V649 = SUB 0x10000000000000000000000000000000000000000 0x1
0x68a: V650 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x68b: V651 = 0x0
0x68f: M[0x0] = V650
0x690: V652 = 0x4
0x692: V653 = 0x20
0x696: M[0x20] = 0x4
0x697: V654 = 0x40
0x69c: V655 = SHA3 0x0 0x40
0x69d: V656 = 0x3
0x6a0: V657 = ADD V655 0x3
0x6a1: V658 = S[V657]
0x6a2: V659 = 0x2
0x6a5: V660 = ADD V655 0x2
0x6a6: V661 = S[V660]
0x6aa: V662 = ADD 0x4 V655
0x6ab: V663 = S[V662]
0x6ac: V664 = 0xa2605dc1353bea55de8ac977b40ab996f4e7340179b5f62f70f479cfff7a0cf8
0x6d2: V665 = 0xff
0x6d4: V666 = AND 0xff V663
0x6d6: V667 = M[0x40]
0x6d7: V668 = 0x1
0x6d9: V669 = 0xa0
0x6db: V670 = 0x2
0x6dd: V671 = EXP 0x2 0xa0
0x6de: V672 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6e1: V673 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x6e3: M[V667] = V673
0x6e4: V674 = 0x20
0x6e7: V675 = ADD V667 0x20
0x6eb: M[V675] = V658
0x6ec: V676 = 0x40
0x6f0: V677 = ADD V667 0x40
0x6f4: M[V677] = V661
0x6f5: V678 = 0xff
0x6f9: V679 = AND V666 0xff
0x6fa: V680 = 0x60
0x6fd: V681 = ADD V667 0x60
0x6fe: M[V681] = V679
0x6ff: V682 = 0x80
0x703: V683 = ADD V667 0x80
0x705: V684 = M[0x40]
0x708: V685 = SUB V683 V684
0x70a: LOG V684 V685 0xa2605dc1353bea55de8ac977b40ab996f4e7340179b5f62f70f479cfff7a0cf8
---
Entry stack: [V10, 0x30a, V277, 0x0, 0x0, S6, {0x0, 0x145}, S4, {0x145, 0x720, 0x95c}, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x30a, V277, 0x0, 0x0, S6, {0x0, 0x145}, S4, {0x145, 0x720, 0x95c}, S2, S1, S0]

================================

Block 0x70b
[0x70b:0x70f]
---
Predecessors: [0x680]
Successors: [0x145, 0x720, 0x95c]
---
0x70b JUMPDEST
0x70c POP
0x70d POP
0x70e POP
0x70f JUMP
---
0x70b: JUMPDEST 
0x70f: JUMP {0x145, 0x720, 0x95c}
---
Entry stack: [V10, 0x30a, V277, 0x0, 0x0, S6, {0x0, 0x145}, S4, {0x145, 0x720, 0x95c}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V10, 0x30a, V277, 0x0, 0x0, S6, {0x0, 0x145}, S4]

================================

Block 0x710
[0x710:0x715]
---
Predecessors: [0x154]
Successors: [0x15c]
---
0x710 JUMPDEST
0x711 PUSH1 0x1
0x713 SLOAD
0x714 DUP2
0x715 JUMP
---
0x710: JUMPDEST 
0x711: V686 = 0x1
0x713: V687 = S[0x1]
0x715: JUMP 0x15c
---
Entry stack: [V10, 0x15c]
Stack pops: 1
Stack additions: [S0, V687]
Exit stack: [V10, 0x15c, V687]

================================

Block 0x716
[0x716:0x71f]
---
Predecessors: [0x18d]
Successors: [0xbb6]
---
0x716 JUMPDEST
0x717 PUSH2 0x720
0x71a DUP2
0x71b CALLER
0x71c PUSH2 0xbb6
0x71f JUMP
---
0x716: JUMPDEST 
0x717: V688 = 0x720
0x71b: V689 = CALLER
0x71c: V690 = 0xbb6
0x71f: JUMP 0xbb6
---
Entry stack: [V10, 0x145, V132]
Stack pops: 1
Stack additions: [S0, 0x720, S0, V689]
Exit stack: [V10, 0x145, V132, 0x720, V132, V689]

================================

Block 0x720
[0x720:0x726]
---
Predecessors: [0x70b, 0x7f7, 0xc2d, 0xd14]
Successors: [0x727, 0x728]
---
0x720 JUMPDEST
0x721 ISZERO
0x722 ISZERO
0x723 PUSH2 0x728
0x726 JUMPI
---
0x720: JUMPDEST 
0x721: V691 = ISZERO S0
0x722: V692 = ISZERO V691
0x723: V693 = 0x728
0x726: JUMPI 0x728 V692
---
Entry stack: [V10, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x727
[0x727:0x727]
---
Predecessors: [0x720]
Successors: []
---
0x727 INVALID
---
0x727: INVALID 
---
Entry stack: [V10, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x728
[0x728:0x730]
---
Predecessors: [0x720]
Successors: [0xc33]
---
0x728 JUMPDEST
0x729 PUSH2 0x731
0x72c DUP2
0x72d PUSH2 0xc33
0x730 JUMP
---
0x728: JUMPDEST 
0x729: V694 = 0x731
0x72d: V695 = 0xc33
0x730: JUMP 0xc33
---
Entry stack: [V10, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x731, S0]
Exit stack: [V10, S7, S6, S5, S4, S3, S2, S1, S0, 0x731, S0]

================================

Block 0x731
[0x731:0x731]
---
Predecessors: [0x7f7, 0xc2d, 0xd14]
Successors: [0x732]
---
0x731 JUMPDEST
---
0x731: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x732
[0x732:0x734]
---
Predecessors: [0x731]
Successors: []
Has unresolved jump.
---
0x732 JUMPDEST
0x733 POP
0x734 JUMP
---
0x732: JUMPDEST 
0x734: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x735
[0x735:0x74c]
---
Predecessors: [0x1ae]
Successors: [0x74d, 0x751]
---
0x735 JUMPDEST
0x736 PUSH1 0x0
0x738 DUP1
0x739 SLOAD
0x73a CALLER
0x73b PUSH1 0x1
0x73d PUSH1 0xa0
0x73f PUSH1 0x2
0x741 EXP
0x742 SUB
0x743 SWAP1
0x744 DUP2
0x745 AND
0x746 SWAP2
0x747 AND
0x748 EQ
0x749 PUSH2 0x751
0x74c JUMPI
---
0x735: JUMPDEST 
0x736: V696 = 0x0
0x739: V697 = S[0x0]
0x73a: V698 = CALLER
0x73b: V699 = 0x1
0x73d: V700 = 0xa0
0x73f: V701 = 0x2
0x741: V702 = EXP 0x2 0xa0
0x742: V703 = SUB 0x10000000000000000000000000000000000000000 0x1
0x745: V704 = AND 0xffffffffffffffffffffffffffffffffffffffff V698
0x747: V705 = AND V697 0xffffffffffffffffffffffffffffffffffffffff
0x748: V706 = EQ V705 V704
0x749: V707 = 0x751
0x74c: JUMPI 0x751 V706
---
Entry stack: [V10, 0x1b9, V140]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x1b9, V140, 0x0]

================================

Block 0x74d
[0x74d:0x750]
---
Predecessors: [0x735]
Successors: []
---
0x74d PUSH1 0x0
0x74f DUP1
0x750 REVERT
---
0x74d: V708 = 0x0
0x750: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1b9, V140, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b9, V140, 0x0]

================================

Block 0x751
[0x751:0x7ad]
---
Predecessors: [0x735]
Successors: [0x7ae]
---
0x751 JUMPDEST
0x752 PUSH1 0x3
0x754 DUP3
0x755 SWAP1
0x756 SSTORE
0x757 PUSH1 0x1
0x759 SLOAD
0x75a PUSH1 0x2
0x75c SLOAD
0x75d PUSH32 0xcf40f2904a4d43cdb0ce27b4a77434c9eb3163b7380be392336f70ae1ccc33ac
0x77e SWAP2
0x77f SWAP1
0x780 DUP5
0x781 SWAP1
0x782 PUSH1 0xff
0x784 AND
0x785 PUSH1 0x40
0x787 MLOAD
0x788 SWAP3
0x789 DUP4
0x78a MSTORE
0x78b PUSH1 0x20
0x78d DUP4
0x78e ADD
0x78f SWAP2
0x790 SWAP1
0x791 SWAP2
0x792 MSTORE
0x793 PUSH1 0xff
0x795 AND
0x796 PUSH1 0x40
0x798 DUP1
0x799 DUP4
0x79a ADD
0x79b SWAP2
0x79c SWAP1
0x79d SWAP2
0x79e MSTORE
0x79f PUSH1 0x60
0x7a1 SWAP1
0x7a2 SWAP2
0x7a3 ADD
0x7a4 SWAP1
0x7a5 MLOAD
0x7a6 DUP1
0x7a7 SWAP2
0x7a8 SUB
0x7a9 SWAP1
0x7aa LOG1
0x7ab POP
0x7ac PUSH1 0x1
---
0x751: JUMPDEST 
0x752: V709 = 0x3
0x756: S[0x3] = V140
0x757: V710 = 0x1
0x759: V711 = S[0x1]
0x75a: V712 = 0x2
0x75c: V713 = S[0x2]
0x75d: V714 = 0xcf40f2904a4d43cdb0ce27b4a77434c9eb3163b7380be392336f70ae1ccc33ac
0x782: V715 = 0xff
0x784: V716 = AND 0xff V713
0x785: V717 = 0x40
0x787: V718 = M[0x40]
0x78a: M[V718] = V711
0x78b: V719 = 0x20
0x78e: V720 = ADD V718 0x20
0x792: M[V720] = V140
0x793: V721 = 0xff
0x795: V722 = AND 0xff V716
0x796: V723 = 0x40
0x79a: V724 = ADD V718 0x40
0x79e: M[V724] = V722
0x79f: V725 = 0x60
0x7a3: V726 = ADD V718 0x60
0x7a5: V727 = M[0x40]
0x7a8: V728 = SUB V726 V727
0x7aa: LOG V727 V728 0xcf40f2904a4d43cdb0ce27b4a77434c9eb3163b7380be392336f70ae1ccc33ac
0x7ac: V729 = 0x1
---
Entry stack: [V10, 0x1b9, V140, 0x0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V10, 0x1b9, V140, 0x1]

================================

Block 0x7ae
[0x7ae:0x7ae]
---
Predecessors: [0x751, 0xb06]
Successors: [0x7af]
---
0x7ae JUMPDEST
---
0x7ae: JUMPDEST 
---
Entry stack: [V10, 0x30a, V277, 0x0, 0x0, S9, {0x0, 0x145}, S7, {0x145, 0x720, 0x95c}, S5, S4, S3, {0x1b9, 0x560, 0xbc1}, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x30a, V277, 0x0, 0x0, S9, {0x0, 0x145}, S7, {0x145, 0x720, 0x95c}, S5, S4, S3, {0x1b9, 0x560, 0xbc1}, S1, 0x1]

================================

Block 0x7af
[0x7af:0x7b3]
---
Predecessors: [0x7ae]
Successors: [0x1b9, 0x560, 0xbc1]
---
0x7af JUMPDEST
0x7b0 SWAP2
0x7b1 SWAP1
0x7b2 POP
0x7b3 JUMP
---
0x7af: JUMPDEST 
0x7b3: JUMP {0x1b9, 0x560, 0xbc1}
---
Entry stack: [V10, 0x30a, V277, 0x0, 0x0, S9, {0x0, 0x145}, S7, {0x145, 0x720, 0x95c}, S5, S4, S3, {0x1b9, 0x560, 0xbc1}, S1, 0x1]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, 0x30a, V277, 0x0, 0x0, S9, {0x0, 0x145}, S7, {0x145, 0x720, 0x95c}, S5, S4, S3, 0x1]

================================

Block 0x7b4
[0x7b4:0x7c8]
---
Predecessors: [0x1d8]
Successors: [0x1b9]
---
0x7b4 JUMPDEST
0x7b5 PUSH1 0x5
0x7b7 PUSH1 0x20
0x7b9 MSTORE
0x7ba PUSH1 0x0
0x7bc SWAP1
0x7bd DUP2
0x7be MSTORE
0x7bf PUSH1 0x40
0x7c1 SWAP1
0x7c2 SHA3
0x7c3 SLOAD
0x7c4 PUSH1 0xff
0x7c6 AND
0x7c7 DUP2
0x7c8 JUMP
---
0x7b4: JUMPDEST 
0x7b5: V730 = 0x5
0x7b7: V731 = 0x20
0x7b9: M[0x20] = 0x5
0x7ba: V732 = 0x0
0x7be: M[0x0] = V163
0x7bf: V733 = 0x40
0x7c2: V734 = SHA3 0x0 0x40
0x7c3: V735 = S[V734]
0x7c4: V736 = 0xff
0x7c6: V737 = AND 0xff V735
0x7c8: JUMP 0x1b9
---
Entry stack: [V10, 0x1b9, V163]
Stack pops: 2
Stack additions: [S1, V737]
Exit stack: [V10, 0x1b9, V737]

================================

Block 0x7c9
[0x7c9:0x7ea]
---
Predecessors: [0x20b, 0xc3f]
Successors: [0x7eb, 0x7ec]
---
0x7c9 JUMPDEST
0x7ca PUSH1 0x0
0x7cc PUSH2 0x7f4
0x7cf DUP3
0x7d0 DUP5
0x7d1 BLOCKHASH
0x7d2 PUSH1 0x40
0x7d4 MLOAD
0x7d5 SWAP1
0x7d6 DUP2
0x7d7 MSTORE
0x7d8 PUSH1 0x20
0x7da ADD
0x7db PUSH1 0x40
0x7dd MLOAD
0x7de SWAP1
0x7df DUP2
0x7e0 SWAP1
0x7e1 SUB
0x7e2 SWAP1
0x7e3 SHA3
0x7e4 DUP2
0x7e5 ISZERO
0x7e6 ISZERO
0x7e7 PUSH2 0x7ec
0x7ea JUMPI
---
0x7c9: JUMPDEST 
0x7ca: V738 = 0x0
0x7cc: V739 = 0x7f4
0x7d1: V740 = BLOCKHASH S1
0x7d2: V741 = 0x40
0x7d4: V742 = M[0x40]
0x7d7: M[V742] = V740
0x7d8: V743 = 0x20
0x7da: V744 = ADD 0x20 V742
0x7db: V745 = 0x40
0x7dd: V746 = M[0x40]
0x7e1: V747 = SUB V744 V746
0x7e3: V748 = SHA3 V746 V747
0x7e5: V749 = ISZERO S0
0x7e6: V750 = ISZERO V749
0x7e7: V751 = 0x7ec
0x7ea: JUMPI 0x7ec V750
---
Entry stack: [V10, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x15c, 0xc69}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x7f4, S0, V748]
Exit stack: [V10, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x15c, 0xc69}, S1, S0, 0x0, 0x7f4, S0, V748]

================================

Block 0x7eb
[0x7eb:0x7eb]
---
Predecessors: [0x7c9]
Successors: []
---
0x7eb INVALID
---
0x7eb: INVALID 
---
Entry stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x15c, 0xc69}, S5, S4, 0x0, 0x7f4, S1, V748]
Stack pops: 0
Stack additions: []
Exit stack: [S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x15c, 0xc69}, S5, S4, 0x0, 0x7f4, S1, V748]

================================

Block 0x7ec
[0x7ec:0x7f3]
---
Predecessors: [0x7c9]
Successors: [0xd19]
---
0x7ec JUMPDEST
0x7ed MOD
0x7ee PUSH1 0x1
0x7f0 PUSH2 0xd19
0x7f3 JUMP
---
0x7ec: JUMPDEST 
0x7ed: V752 = MOD V748 S1
0x7ee: V753 = 0x1
0x7f0: V754 = 0xd19
0x7f3: JUMP 0xd19
---
Entry stack: [V10, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x15c, 0xc69}, S5, S4, 0x0, 0x7f4, S1, V748]
Stack pops: 2
Stack additions: [V752, 0x1]
Exit stack: [V10, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x15c, 0xc69}, S5, S4, 0x0, 0x7f4, V752, 0x1]

================================

Block 0x7f4
[0x7f4:0x7f6]
---
Predecessors: [0xd3a]
Successors: [0x7f7]
---
0x7f4 JUMPDEST
0x7f5 SWAP1
0x7f6 POP
---
0x7f4: JUMPDEST 
---
Entry stack: [V10, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0]

================================

Block 0x7f7
[0x7f7:0x7fc]
---
Predecessors: [0x7f4, 0xc20]
Successors: [0x145, 0x15c, 0x30a, 0x720, 0x731, 0x95c, 0xc69]
---
0x7f7 JUMPDEST
0x7f8 SWAP3
0x7f9 SWAP2
0x7fa POP
0x7fb POP
0x7fc JUMP
---
0x7f7: JUMPDEST 
0x7fc: JUMP S3
---
Entry stack: [V10, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S0]

================================

Block 0x7fd
[0x7fd:0x813]
---
Predecessors: [0x236]
Successors: [0x814, 0x818]
---
0x7fd JUMPDEST
0x7fe PUSH1 0x0
0x800 SLOAD
0x801 CALLER
0x802 PUSH1 0x1
0x804 PUSH1 0xa0
0x806 PUSH1 0x2
0x808 EXP
0x809 SUB
0x80a SWAP1
0x80b DUP2
0x80c AND
0x80d SWAP2
0x80e AND
0x80f EQ
0x810 PUSH2 0x818
0x813 JUMPI
---
0x7fd: JUMPDEST 
0x7fe: V755 = 0x0
0x800: V756 = S[0x0]
0x801: V757 = CALLER
0x802: V758 = 0x1
0x804: V759 = 0xa0
0x806: V760 = 0x2
0x808: V761 = EXP 0x2 0xa0
0x809: V762 = SUB 0x10000000000000000000000000000000000000000 0x1
0x80c: V763 = AND 0xffffffffffffffffffffffffffffffffffffffff V757
0x80e: V764 = AND V756 0xffffffffffffffffffffffffffffffffffffffff
0x80f: V765 = EQ V764 V763
0x810: V766 = 0x818
0x813: JUMPI 0x818 V765
---
Entry stack: [V10, 0x145]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x145]

================================

Block 0x814
[0x814:0x817]
---
Predecessors: [0x7fd]
Successors: []
---
0x814 PUSH1 0x0
0x816 DUP1
0x817 REVERT
---
0x814: V767 = 0x0
0x817: REVERT 0x0 0x0
---
Entry stack: [V10, 0x145]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x145]

================================

Block 0x818
[0x818:0x825]
---
Predecessors: [0x7fd]
Successors: []
---
0x818 JUMPDEST
0x819 PUSH1 0x0
0x81b SLOAD
0x81c PUSH1 0x1
0x81e PUSH1 0xa0
0x820 PUSH1 0x2
0x822 EXP
0x823 SUB
0x824 AND
0x825 SELFDESTRUCT
---
0x818: JUMPDEST 
0x819: V768 = 0x0
0x81b: V769 = S[0x0]
0x81c: V770 = 0x1
0x81e: V771 = 0xa0
0x820: V772 = 0x2
0x822: V773 = EXP 0x2 0xa0
0x823: V774 = SUB 0x10000000000000000000000000000000000000000 0x1
0x824: V775 = AND 0xffffffffffffffffffffffffffffffffffffffff V769
0x825: SELFDESTRUCT V775
---
Entry stack: [V10, 0x145]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x145]

================================

Block 0x826
[0x826:0x826]
---
Predecessors: []
Successors: [0x827]
---
0x826 JUMPDEST
---
0x826: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x827
[0x827:0x828]
---
Predecessors: [0x826]
Successors: []
Has unresolved jump.
---
0x827 JUMPDEST
0x828 JUMP
---
0x827: JUMPDEST 
0x828: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x829
[0x829:0x840]
---
Predecessors: [0x24b]
Successors: [0x841, 0x845]
---
0x829 JUMPDEST
0x82a PUSH1 0x0
0x82c DUP1
0x82d SLOAD
0x82e CALLER
0x82f PUSH1 0x1
0x831 PUSH1 0xa0
0x833 PUSH1 0x2
0x835 EXP
0x836 SUB
0x837 SWAP1
0x838 DUP2
0x839 AND
0x83a SWAP2
0x83b AND
0x83c EQ
0x83d PUSH2 0x845
0x840 JUMPI
---
0x829: JUMPDEST 
0x82a: V776 = 0x0
0x82d: V777 = S[0x0]
0x82e: V778 = CALLER
0x82f: V779 = 0x1
0x831: V780 = 0xa0
0x833: V781 = 0x2
0x835: V782 = EXP 0x2 0xa0
0x836: V783 = SUB 0x10000000000000000000000000000000000000000 0x1
0x839: V784 = AND 0xffffffffffffffffffffffffffffffffffffffff V778
0x83b: V785 = AND V777 0xffffffffffffffffffffffffffffffffffffffff
0x83c: V786 = EQ V785 V784
0x83d: V787 = 0x845
0x840: JUMPI 0x845 V786
---
Entry stack: [V10, 0x1b9, V203]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x1b9, V203, 0x0]

================================

Block 0x841
[0x841:0x844]
---
Predecessors: [0x829]
Successors: []
---
0x841 PUSH1 0x0
0x843 DUP1
0x844 REVERT
---
0x841: V788 = 0x0
0x844: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1b9, V203, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b9, V203, 0x0]

================================

Block 0x845
[0x845:0x8a0]
---
Predecessors: [0x829]
Successors: [0x8a1]
---
0x845 JUMPDEST
0x846 PUSH1 0x1
0x848 DUP3
0x849 SWAP1
0x84a SSTORE
0x84b PUSH1 0x3
0x84d SLOAD
0x84e PUSH1 0x2
0x850 SLOAD
0x851 PUSH32 0xcf40f2904a4d43cdb0ce27b4a77434c9eb3163b7380be392336f70ae1ccc33ac
0x872 SWAP2
0x873 DUP5
0x874 SWAP2
0x875 PUSH1 0xff
0x877 AND
0x878 PUSH1 0x40
0x87a MLOAD
0x87b SWAP3
0x87c DUP4
0x87d MSTORE
0x87e PUSH1 0x20
0x880 DUP4
0x881 ADD
0x882 SWAP2
0x883 SWAP1
0x884 SWAP2
0x885 MSTORE
0x886 PUSH1 0xff
0x888 AND
0x889 PUSH1 0x40
0x88b DUP1
0x88c DUP4
0x88d ADD
0x88e SWAP2
0x88f SWAP1
0x890 SWAP2
0x891 MSTORE
0x892 PUSH1 0x60
0x894 SWAP1
0x895 SWAP2
0x896 ADD
0x897 SWAP1
0x898 MLOAD
0x899 DUP1
0x89a SWAP2
0x89b SUB
0x89c SWAP1
0x89d LOG1
0x89e POP
0x89f PUSH1 0x1
---
0x845: JUMPDEST 
0x846: V789 = 0x1
0x84a: S[0x1] = V203
0x84b: V790 = 0x3
0x84d: V791 = S[0x3]
0x84e: V792 = 0x2
0x850: V793 = S[0x2]
0x851: V794 = 0xcf40f2904a4d43cdb0ce27b4a77434c9eb3163b7380be392336f70ae1ccc33ac
0x875: V795 = 0xff
0x877: V796 = AND 0xff V793
0x878: V797 = 0x40
0x87a: V798 = M[0x40]
0x87d: M[V798] = V203
0x87e: V799 = 0x20
0x881: V800 = ADD V798 0x20
0x885: M[V800] = V791
0x886: V801 = 0xff
0x888: V802 = AND 0xff V796
0x889: V803 = 0x40
0x88d: V804 = ADD V798 0x40
0x891: M[V804] = V802
0x892: V805 = 0x60
0x896: V806 = ADD V798 0x60
0x898: V807 = M[0x40]
0x89b: V808 = SUB V806 V807
0x89d: LOG V807 V808 0xcf40f2904a4d43cdb0ce27b4a77434c9eb3163b7380be392336f70ae1ccc33ac
0x89f: V809 = 0x1
---
Entry stack: [V10, 0x1b9, V203, 0x0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V10, 0x1b9, V203, 0x1]

================================

Block 0x8a1
[0x8a1:0x8a1]
---
Predecessors: [0x845]
Successors: [0x8a2]
---
0x8a1 JUMPDEST
---
0x8a1: JUMPDEST 
---
Entry stack: [V10, 0x1b9, V203, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b9, V203, 0x1]

================================

Block 0x8a2
[0x8a2:0x8a6]
---
Predecessors: [0x8a1]
Successors: [0x1b9]
---
0x8a2 JUMPDEST
0x8a3 SWAP2
0x8a4 SWAP1
0x8a5 POP
0x8a6 JUMP
---
0x8a2: JUMPDEST 
0x8a6: JUMP 0x1b9
---
Entry stack: [V10, 0x1b9, V203, 0x1]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, 0x1]

================================

Block 0x8a7
[0x8a7:0x8be]
---
Predecessors: [0x275]
Successors: [0x8bf, 0x8c3]
---
0x8a7 JUMPDEST
0x8a8 PUSH1 0x0
0x8aa DUP1
0x8ab SLOAD
0x8ac CALLER
0x8ad PUSH1 0x1
0x8af PUSH1 0xa0
0x8b1 PUSH1 0x2
0x8b3 EXP
0x8b4 SUB
0x8b5 SWAP1
0x8b6 DUP2
0x8b7 AND
0x8b8 SWAP2
0x8b9 AND
0x8ba EQ
0x8bb PUSH2 0x8c3
0x8be JUMPI
---
0x8a7: JUMPDEST 
0x8a8: V810 = 0x0
0x8ab: V811 = S[0x0]
0x8ac: V812 = CALLER
0x8ad: V813 = 0x1
0x8af: V814 = 0xa0
0x8b1: V815 = 0x2
0x8b3: V816 = EXP 0x2 0xa0
0x8b4: V817 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8b7: V818 = AND 0xffffffffffffffffffffffffffffffffffffffff V812
0x8b9: V819 = AND V811 0xffffffffffffffffffffffffffffffffffffffff
0x8ba: V820 = EQ V819 V818
0x8bb: V821 = 0x8c3
0x8be: JUMPI 0x8c3 V820
---
Entry stack: [V10, 0x1b9, V222]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x1b9, V222, 0x0]

================================

Block 0x8bf
[0x8bf:0x8c2]
---
Predecessors: [0x8a7]
Successors: []
---
0x8bf PUSH1 0x0
0x8c1 DUP1
0x8c2 REVERT
---
0x8bf: V822 = 0x0
0x8c2: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1b9, V222, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b9, V222, 0x0]

================================

Block 0x8c3
[0x8c3:0x92e]
---
Predecessors: [0x8a7]
Successors: [0x92f]
---
0x8c3 JUMPDEST
0x8c4 PUSH1 0x2
0x8c6 DUP1
0x8c7 SLOAD
0x8c8 PUSH1 0xff
0x8ca NOT
0x8cb AND
0x8cc PUSH1 0xff
0x8ce DUP5
0x8cf DUP2
0x8d0 AND
0x8d1 SWAP2
0x8d2 SWAP1
0x8d3 SWAP2
0x8d4 OR
0x8d5 SWAP2
0x8d6 DUP3
0x8d7 SWAP1
0x8d8 SSTORE
0x8d9 PUSH1 0x1
0x8db SLOAD
0x8dc PUSH1 0x3
0x8de SLOAD
0x8df PUSH32 0xcf40f2904a4d43cdb0ce27b4a77434c9eb3163b7380be392336f70ae1ccc33ac
0x900 SWAP4
0x901 SWAP2
0x902 SWAP3
0x903 SWAP1
0x904 SWAP2
0x905 AND
0x906 PUSH1 0x40
0x908 MLOAD
0x909 SWAP3
0x90a DUP4
0x90b MSTORE
0x90c PUSH1 0x20
0x90e DUP4
0x90f ADD
0x910 SWAP2
0x911 SWAP1
0x912 SWAP2
0x913 MSTORE
0x914 PUSH1 0xff
0x916 AND
0x917 PUSH1 0x40
0x919 DUP1
0x91a DUP4
0x91b ADD
0x91c SWAP2
0x91d SWAP1
0x91e SWAP2
0x91f MSTORE
0x920 PUSH1 0x60
0x922 SWAP1
0x923 SWAP2
0x924 ADD
0x925 SWAP1
0x926 MLOAD
0x927 DUP1
0x928 SWAP2
0x929 SUB
0x92a SWAP1
0x92b LOG1
0x92c POP
0x92d PUSH1 0x1
---
0x8c3: JUMPDEST 
0x8c4: V823 = 0x2
0x8c7: V824 = S[0x2]
0x8c8: V825 = 0xff
0x8ca: V826 = NOT 0xff
0x8cb: V827 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V824
0x8cc: V828 = 0xff
0x8d0: V829 = AND 0xff V222
0x8d4: V830 = OR V829 V827
0x8d8: S[0x2] = V830
0x8d9: V831 = 0x1
0x8db: V832 = S[0x1]
0x8dc: V833 = 0x3
0x8de: V834 = S[0x3]
0x8df: V835 = 0xcf40f2904a4d43cdb0ce27b4a77434c9eb3163b7380be392336f70ae1ccc33ac
0x905: V836 = AND V830 0xff
0x906: V837 = 0x40
0x908: V838 = M[0x40]
0x90b: M[V838] = V832
0x90c: V839 = 0x20
0x90f: V840 = ADD V838 0x20
0x913: M[V840] = V834
0x914: V841 = 0xff
0x916: V842 = AND 0xff V836
0x917: V843 = 0x40
0x91b: V844 = ADD V838 0x40
0x91f: M[V844] = V842
0x920: V845 = 0x60
0x924: V846 = ADD V838 0x60
0x926: V847 = M[0x40]
0x929: V848 = SUB V846 V847
0x92b: LOG V847 V848 0xcf40f2904a4d43cdb0ce27b4a77434c9eb3163b7380be392336f70ae1ccc33ac
0x92d: V849 = 0x1
---
Entry stack: [V10, 0x1b9, V222, 0x0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V10, 0x1b9, V222, 0x1]

================================

Block 0x92f
[0x92f:0x92f]
---
Predecessors: [0x8c3]
Successors: [0x930]
---
0x92f JUMPDEST
---
0x92f: JUMPDEST 
---
Entry stack: [V10, 0x1b9, V222, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b9, V222, 0x1]

================================

Block 0x930
[0x930:0x934]
---
Predecessors: [0x92f]
Successors: [0x1b9]
---
0x930 JUMPDEST
0x931 SWAP2
0x932 SWAP1
0x933 POP
0x934 JUMP
---
0x930: JUMPDEST 
0x934: JUMP 0x1b9
---
Entry stack: [V10, 0x1b9, V222, 0x1]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, 0x1]

================================

Block 0x935
[0x935:0x93a]
---
Predecessors: [0x2a2]
Successors: [0x15c]
---
0x935 JUMPDEST
0x936 PUSH1 0x3
0x938 SLOAD
0x939 DUP2
0x93a JUMP
---
0x935: JUMPDEST 
0x936: V850 = 0x3
0x938: V851 = S[0x3]
0x93a: JUMP 0x15c
---
Entry stack: [V10, 0x15c]
Stack pops: 1
Stack additions: [S0, V851]
Exit stack: [V10, 0x15c, V851]

================================

Block 0x93b
[0x93b:0x949]
---
Predecessors: [0x2c7]
Successors: [0x2cf]
---
0x93b JUMPDEST
0x93c PUSH1 0x0
0x93e SLOAD
0x93f PUSH1 0x1
0x941 PUSH1 0xa0
0x943 PUSH1 0x2
0x945 EXP
0x946 SUB
0x947 AND
0x948 DUP2
0x949 JUMP
---
0x93b: JUMPDEST 
0x93c: V852 = 0x0
0x93e: V853 = S[0x0]
0x93f: V854 = 0x1
0x941: V855 = 0xa0
0x943: V856 = 0x2
0x945: V857 = EXP 0x2 0xa0
0x946: V858 = SUB 0x10000000000000000000000000000000000000000 0x1
0x947: V859 = AND 0xffffffffffffffffffffffffffffffffffffffff V853
0x949: JUMP 0x2cf
---
Entry stack: [V10, 0x2cf]
Stack pops: 1
Stack additions: [S0, V859]
Exit stack: [V10, 0x2cf, V859]

================================

Block 0x94a
[0x94a:0x95b]
---
Predecessors: [0x2f6]
Successors: [0xbb6]
---
0x94a JUMPDEST
0x94b PUSH1 0x0
0x94d DUP1
0x94e PUSH1 0x0
0x950 DUP1
0x951 PUSH1 0x0
0x953 PUSH2 0x95c
0x956 DUP7
0x957 CALLER
0x958 PUSH2 0xbb6
0x95b JUMP
---
0x94a: JUMPDEST 
0x94b: V860 = 0x0
0x94e: V861 = 0x0
0x951: V862 = 0x0
0x953: V863 = 0x95c
0x957: V864 = CALLER
0x958: V865 = 0xbb6
0x95b: JUMP 0xbb6
---
Entry stack: [V10, 0x30a, V277]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x95c, S0, V864]
Exit stack: [V10, 0x30a, V277, 0x0, 0x0, 0x0, 0x0, 0x0, 0x95c, V277, V864]

================================

Block 0x95c
[0x95c:0x964]
---
Predecessors: [0x70b, 0x7f7, 0xc2d, 0xd14]
Successors: [0xd41]
---
0x95c JUMPDEST
0x95d PUSH2 0x965
0x960 DUP8
0x961 PUSH2 0xd41
0x964 JUMP
---
0x95c: JUMPDEST 
0x95d: V866 = 0x965
0x961: V867 = 0xd41
0x964: JUMP 0xd41
---
Entry stack: [V10, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, 0x965, S6]
Exit stack: [V10, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x965, S6]

================================

Block 0x965
[0x965:0x96d]
---
Predecessors: [0xd93]
Successors: [0xd9a]
---
0x965 JUMPDEST
0x966 PUSH2 0x96e
0x969 DUP9
0x96a PUSH2 0xd9a
0x96d JUMP
---
0x965: JUMPDEST 
0x966: V868 = 0x96e
0x96a: V869 = 0xd9a
0x96d: JUMP 0xd9a
---
Entry stack: [V10, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0, 0x96e, S7]
Exit stack: [V10, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x96e, S7]

================================

Block 0x96e
[0x96e:0x97a]
---
Predecessors: [0xdcc]
Successors: [0x97b]
---
0x96e JUMPDEST
0x96f DUP9
0x970 CALLER
0x971 SWAP5
0x972 POP
0x973 SWAP5
0x974 POP
0x975 SWAP5
0x976 POP
0x977 SWAP5
0x978 POP
0x979 SWAP5
0x97a POP
---
0x96e: JUMPDEST 
0x970: V870 = CALLER
---
Entry stack: [V10, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, S2, S1, S0, S8, V870]
Exit stack: [V10, S15, S14, S13, S12, S11, S10, S9, S8, S2, S1, S0, S8, V870]

================================

Block 0x97b
[0x97b:0x983]
---
Predecessors: [0x96e]
Successors: [0x145, 0x30a]
---
0x97b JUMPDEST
0x97c SWAP2
0x97d SWAP4
0x97e SWAP6
0x97f SWAP1
0x980 SWAP3
0x981 SWAP5
0x982 POP
0x983 JUMP
---
0x97b: JUMPDEST 
0x983: JUMP S6
---
Entry stack: [V10, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V870]
Stack pops: 7
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V10, S12, S11, S10, S9, S8, S7, S4, S3, S2, S1, V870]

================================

Block 0x984
[0x984:0x9b0]
---
Predecessors: [0x353]
Successors: [0x9b1]
---
0x984 JUMPDEST
0x985 PUSH1 0x1
0x987 PUSH1 0xa0
0x989 PUSH1 0x2
0x98b EXP
0x98c SUB
0x98d DUP2
0x98e AND
0x98f PUSH1 0x0
0x991 SWAP1
0x992 DUP2
0x993 MSTORE
0x994 PUSH1 0x4
0x996 PUSH1 0x20
0x998 MSTORE
0x999 PUSH1 0x40
0x99b SWAP1
0x99c SHA3
0x99d PUSH1 0x1
0x99f DUP2
0x9a0 ADD
0x9a1 SLOAD
0x9a2 PUSH1 0x3
0x9a4 DUP3
0x9a5 ADD
0x9a6 SLOAD
0x9a7 PUSH1 0x2
0x9a9 SWAP1
0x9aa SWAP3
0x9ab ADD
0x9ac SLOAD
0x9ad SWAP1
0x9ae SWAP2
0x9af SWAP1
0x9b0 DUP4
---
0x984: JUMPDEST 
0x985: V871 = 0x1
0x987: V872 = 0xa0
0x989: V873 = 0x2
0x98b: V874 = EXP 0x2 0xa0
0x98c: V875 = SUB 0x10000000000000000000000000000000000000000 0x1
0x98e: V876 = AND V314 0xffffffffffffffffffffffffffffffffffffffff
0x98f: V877 = 0x0
0x993: M[0x0] = V876
0x994: V878 = 0x4
0x996: V879 = 0x20
0x998: M[0x20] = 0x4
0x999: V880 = 0x40
0x99c: V881 = SHA3 0x0 0x40
0x99d: V882 = 0x1
0x9a0: V883 = ADD V881 0x1
0x9a1: V884 = S[V883]
0x9a2: V885 = 0x3
0x9a5: V886 = ADD V881 0x3
0x9a6: V887 = S[V886]
0x9a7: V888 = 0x2
0x9ab: V889 = ADD V881 0x2
0x9ac: V890 = S[V889]
---
Entry stack: [V10, 0x367, V314]
Stack pops: 1
Stack additions: [S0, V884, V887, V890, S0]
Exit stack: [V10, 0x367, V314, V884, V887, V890, V314]

================================

Block 0x9b1
[0x9b1:0x9b7]
---
Predecessors: [0x984]
Successors: [0x367]
---
0x9b1 JUMPDEST
0x9b2 SWAP2
0x9b3 SWAP4
0x9b4 POP
0x9b5 SWAP2
0x9b6 SWAP4
0x9b7 JUMP
---
0x9b1: JUMPDEST 
0x9b7: JUMP 0x367
---
Entry stack: [V10, 0x367, V314, V884, V887, V890, V314]
Stack pops: 6
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, V884, V887, V890, V314]

================================

Block 0x9b8
[0x9b8:0x9f4]
---
Predecessors: [0x3a6]
Successors: [0x3ba]
---
0x9b8 JUMPDEST
0x9b9 PUSH1 0x4
0x9bb PUSH1 0x20
0x9bd DUP2
0x9be SWAP1
0x9bf MSTORE
0x9c0 PUSH1 0x0
0x9c2 SWAP2
0x9c3 DUP3
0x9c4 MSTORE
0x9c5 PUSH1 0x40
0x9c7 SWAP1
0x9c8 SWAP2
0x9c9 SHA3
0x9ca DUP1
0x9cb SLOAD
0x9cc PUSH1 0x1
0x9ce DUP3
0x9cf ADD
0x9d0 SLOAD
0x9d1 PUSH1 0x2
0x9d3 DUP4
0x9d4 ADD
0x9d5 SLOAD
0x9d6 PUSH1 0x3
0x9d8 DUP5
0x9d9 ADD
0x9da SLOAD
0x9db SWAP4
0x9dc SWAP1
0x9dd SWAP5
0x9de ADD
0x9df SLOAD
0x9e0 PUSH1 0x1
0x9e2 PUSH1 0xa0
0x9e4 PUSH1 0x2
0x9e6 EXP
0x9e7 SUB
0x9e8 SWAP1
0x9e9 SWAP3
0x9ea AND
0x9eb SWAP4
0x9ec SWAP1
0x9ed SWAP3
0x9ee SWAP1
0x9ef SWAP2
0x9f0 PUSH1 0xff
0x9f2 AND
0x9f3 DUP6
0x9f4 JUMP
---
0x9b8: JUMPDEST 
0x9b9: V891 = 0x4
0x9bb: V892 = 0x20
0x9bf: M[0x20] = 0x4
0x9c0: V893 = 0x0
0x9c4: M[0x0] = V346
0x9c5: V894 = 0x40
0x9c9: V895 = SHA3 0x0 0x40
0x9cb: V896 = S[V895]
0x9cc: V897 = 0x1
0x9cf: V898 = ADD V895 0x1
0x9d0: V899 = S[V898]
0x9d1: V900 = 0x2
0x9d4: V901 = ADD V895 0x2
0x9d5: V902 = S[V901]
0x9d6: V903 = 0x3
0x9d9: V904 = ADD V895 0x3
0x9da: V905 = S[V904]
0x9de: V906 = ADD 0x4 V895
0x9df: V907 = S[V906]
0x9e0: V908 = 0x1
0x9e2: V909 = 0xa0
0x9e4: V910 = 0x2
0x9e6: V911 = EXP 0x2 0xa0
0x9e7: V912 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9ea: V913 = AND V896 0xffffffffffffffffffffffffffffffffffffffff
0x9f0: V914 = 0xff
0x9f2: V915 = AND 0xff V907
0x9f4: JUMP 0x3ba
---
Entry stack: [V10, 0x3ba, V346]
Stack pops: 2
Stack additions: [S1, V913, V899, V902, V905, V915]
Exit stack: [V10, 0x3ba, V913, V899, V902, V905, V915]

================================

Block 0x9f5
[0x9f5:0xa0c]
---
Predecessors: [0x402]
Successors: [0xa0d, 0xa11]
---
0x9f5 JUMPDEST
0x9f6 PUSH1 0x0
0x9f8 DUP1
0x9f9 SLOAD
0x9fa CALLER
0x9fb PUSH1 0x1
0x9fd PUSH1 0xa0
0x9ff PUSH1 0x2
0xa01 EXP
0xa02 SUB
0xa03 SWAP1
0xa04 DUP2
0xa05 AND
0xa06 SWAP2
0xa07 AND
0xa08 EQ
0xa09 PUSH2 0xa11
0xa0c JUMPI
---
0x9f5: JUMPDEST 
0x9f6: V916 = 0x0
0x9f9: V917 = S[0x0]
0x9fa: V918 = CALLER
0x9fb: V919 = 0x1
0x9fd: V920 = 0xa0
0x9ff: V921 = 0x2
0xa01: V922 = EXP 0x2 0xa0
0xa02: V923 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa05: V924 = AND 0xffffffffffffffffffffffffffffffffffffffff V918
0xa07: V925 = AND V917 0xffffffffffffffffffffffffffffffffffffffff
0xa08: V926 = EQ V925 V924
0xa09: V927 = 0xa11
0xa0c: JUMPI 0xa11 V926
---
Entry stack: [V10, 0x1b9, V382]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x1b9, V382, 0x0]

================================

Block 0xa0d
[0xa0d:0xa10]
---
Predecessors: [0x9f5]
Successors: []
---
0xa0d PUSH1 0x0
0xa0f DUP1
0xa10 REVERT
---
0xa0d: V928 = 0x0
0xa10: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1b9, V382, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b9, V382, 0x0]

================================

Block 0xa11
[0xa11:0xa3a]
---
Predecessors: [0x9f5]
Successors: [0xa3b]
---
0xa11 JUMPDEST
0xa12 POP
0xa13 PUSH1 0x1
0xa15 PUSH1 0xa0
0xa17 PUSH1 0x2
0xa19 EXP
0xa1a SUB
0xa1b DUP2
0xa1c AND
0xa1d PUSH1 0x0
0xa1f SWAP1
0xa20 DUP2
0xa21 MSTORE
0xa22 PUSH1 0x5
0xa24 PUSH1 0x20
0xa26 MSTORE
0xa27 PUSH1 0x40
0xa29 SWAP1
0xa2a SHA3
0xa2b DUP1
0xa2c SLOAD
0xa2d PUSH1 0xff
0xa2f NOT
0xa30 AND
0xa31 PUSH1 0x1
0xa33 OR
0xa34 SWAP1
0xa35 DUP2
0xa36 SWAP1
0xa37 SSTORE
0xa38 PUSH1 0xff
0xa3a AND
---
0xa11: JUMPDEST 
0xa13: V929 = 0x1
0xa15: V930 = 0xa0
0xa17: V931 = 0x2
0xa19: V932 = EXP 0x2 0xa0
0xa1a: V933 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa1c: V934 = AND V382 0xffffffffffffffffffffffffffffffffffffffff
0xa1d: V935 = 0x0
0xa21: M[0x0] = V934
0xa22: V936 = 0x5
0xa24: V937 = 0x20
0xa26: M[0x20] = 0x5
0xa27: V938 = 0x40
0xa2a: V939 = SHA3 0x0 0x40
0xa2c: V940 = S[V939]
0xa2d: V941 = 0xff
0xa2f: V942 = NOT 0xff
0xa30: V943 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V940
0xa31: V944 = 0x1
0xa33: V945 = OR 0x1 V943
0xa37: S[V939] = V945
0xa38: V946 = 0xff
0xa3a: V947 = AND 0xff V945
---
Entry stack: [V10, 0x1b9, V382, 0x0]
Stack pops: 2
Stack additions: [S1, V947]
Exit stack: [V10, 0x1b9, V382, V947]

================================

Block 0xa3b
[0xa3b:0xa3b]
---
Predecessors: [0xa11]
Successors: [0xa3c]
---
0xa3b JUMPDEST
---
0xa3b: JUMPDEST 
---
Entry stack: [V10, 0x1b9, V382, V947]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b9, V382, V947]

================================

Block 0xa3c
[0xa3c:0xa40]
---
Predecessors: [0xa3b]
Successors: [0x1b9]
---
0xa3c JUMPDEST
0xa3d SWAP2
0xa3e SWAP1
0xa3f POP
0xa40 JUMP
---
0xa3c: JUMPDEST 
0xa40: JUMP 0x1b9
---
Entry stack: [V10, 0x1b9, V382, V947]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, V947]

================================

Block 0xa41
[0xa41:0xa58]
---
Predecessors: [0x435]
Successors: [0xa59, 0xa5d]
---
0xa41 JUMPDEST
0xa42 PUSH1 0x0
0xa44 DUP1
0xa45 SLOAD
0xa46 CALLER
0xa47 PUSH1 0x1
0xa49 PUSH1 0xa0
0xa4b PUSH1 0x2
0xa4d EXP
0xa4e SUB
0xa4f SWAP1
0xa50 DUP2
0xa51 AND
0xa52 SWAP2
0xa53 AND
0xa54 EQ
0xa55 PUSH2 0xa5d
0xa58 JUMPI
---
0xa41: JUMPDEST 
0xa42: V948 = 0x0
0xa45: V949 = S[0x0]
0xa46: V950 = CALLER
0xa47: V951 = 0x1
0xa49: V952 = 0xa0
0xa4b: V953 = 0x2
0xa4d: V954 = EXP 0x2 0xa0
0xa4e: V955 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa51: V956 = AND 0xffffffffffffffffffffffffffffffffffffffff V950
0xa53: V957 = AND V949 0xffffffffffffffffffffffffffffffffffffffff
0xa54: V958 = EQ V957 V956
0xa55: V959 = 0xa5d
0xa58: JUMPI 0xa5d V958
---
Entry stack: [V10, 0x1b9, V405]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x1b9, V405, 0x0]

================================

Block 0xa59
[0xa59:0xa5c]
---
Predecessors: [0xa41]
Successors: []
---
0xa59 PUSH1 0x0
0xa5b DUP1
0xa5c REVERT
---
0xa59: V960 = 0x0
0xa5c: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1b9, V405, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b9, V405, 0x0]

================================

Block 0xa5d
[0xa5d:0xa80]
---
Predecessors: [0xa41]
Successors: [0xa81]
---
0xa5d JUMPDEST
0xa5e POP
0xa5f PUSH1 0x1
0xa61 PUSH1 0xa0
0xa63 PUSH1 0x2
0xa65 EXP
0xa66 SUB
0xa67 DUP2
0xa68 AND
0xa69 PUSH1 0x0
0xa6b SWAP1
0xa6c DUP2
0xa6d MSTORE
0xa6e PUSH1 0x5
0xa70 PUSH1 0x20
0xa72 MSTORE
0xa73 PUSH1 0x40
0xa75 SWAP1
0xa76 SHA3
0xa77 DUP1
0xa78 SLOAD
0xa79 PUSH1 0xff
0xa7b NOT
0xa7c AND
0xa7d SWAP1
0xa7e SSTORE
0xa7f PUSH1 0x1
---
0xa5d: JUMPDEST 
0xa5f: V961 = 0x1
0xa61: V962 = 0xa0
0xa63: V963 = 0x2
0xa65: V964 = EXP 0x2 0xa0
0xa66: V965 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa68: V966 = AND V405 0xffffffffffffffffffffffffffffffffffffffff
0xa69: V967 = 0x0
0xa6d: M[0x0] = V966
0xa6e: V968 = 0x5
0xa70: V969 = 0x20
0xa72: M[0x20] = 0x5
0xa73: V970 = 0x40
0xa76: V971 = SHA3 0x0 0x40
0xa78: V972 = S[V971]
0xa79: V973 = 0xff
0xa7b: V974 = NOT 0xff
0xa7c: V975 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V972
0xa7e: S[V971] = V975
0xa7f: V976 = 0x1
---
Entry stack: [V10, 0x1b9, V405, 0x0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V10, 0x1b9, V405, 0x1]

================================

Block 0xa81
[0xa81:0xa81]
---
Predecessors: [0xa5d]
Successors: [0xa82]
---
0xa81 JUMPDEST
---
0xa81: JUMPDEST 
---
Entry stack: [V10, 0x1b9, V405, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b9, V405, 0x1]

================================

Block 0xa82
[0xa82:0xa86]
---
Predecessors: [0xa81]
Successors: [0x1b9]
---
0xa82 JUMPDEST
0xa83 SWAP2
0xa84 SWAP1
0xa85 POP
0xa86 JUMP
---
0xa82: JUMPDEST 
0xa86: JUMP 0x1b9
---
Entry stack: [V10, 0x1b9, V405, 0x1]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, 0x1]

================================

Block 0xa87
[0xa87:0xa8f]
---
Predecessors: [0x468]
Successors: [0x470]
---
0xa87 JUMPDEST
0xa88 PUSH1 0x2
0xa8a SLOAD
0xa8b PUSH1 0xff
0xa8d AND
0xa8e DUP2
0xa8f JUMP
---
0xa87: JUMPDEST 
0xa88: V977 = 0x2
0xa8a: V978 = S[0x2]
0xa8b: V979 = 0xff
0xa8d: V980 = AND 0xff V978
0xa8f: JUMP 0x470
---
Entry stack: [V10, 0x470]
Stack pops: 1
Stack additions: [S0, V980]
Exit stack: [V10, 0x470, V980]

================================

Block 0xa90
[0xa90:0xab8]
---
Predecessors: [0x491]
Successors: [0xab9]
---
0xa90 JUMPDEST
0xa91 PUSH1 0x0
0xa93 DUP1
0xa94 SLOAD
0xa95 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaaa NOT
0xaab AND
0xaac CALLER
0xaad PUSH1 0x1
0xaaf PUSH1 0xa0
0xab1 PUSH1 0x2
0xab3 EXP
0xab4 SUB
0xab5 AND
0xab6 OR
0xab7 SWAP1
0xab8 SSTORE
---
0xa90: JUMPDEST 
0xa91: V981 = 0x0
0xa94: V982 = S[0x0]
0xa95: V983 = 0xffffffffffffffffffffffffffffffffffffffff
0xaaa: V984 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xaab: V985 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V982
0xaac: V986 = CALLER
0xaad: V987 = 0x1
0xaaf: V988 = 0xa0
0xab1: V989 = 0x2
0xab3: V990 = EXP 0x2 0xa0
0xab4: V991 = SUB 0x10000000000000000000000000000000000000000 0x1
0xab5: V992 = AND 0xffffffffffffffffffffffffffffffffffffffff V986
0xab6: V993 = OR V992 V985
0xab8: S[0x0] = V993
---
Entry stack: [V10, 0x145]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x145]

================================

Block 0xab9
[0xab9:0xaba]
---
Predecessors: [0xa90]
Successors: [0x145]
---
0xab9 JUMPDEST
0xaba JUMP
---
0xab9: JUMPDEST 
0xaba: JUMP 0x145
---
Entry stack: [V10, 0x145]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xabb
[0xabb:0xade]
---
Predecessors: [0x4a6, 0x557, 0xbb6]
Successors: [0xadf, 0xb00]
---
0xabb JUMPDEST
0xabc PUSH1 0x1
0xabe PUSH1 0xa0
0xac0 PUSH1 0x2
0xac2 EXP
0xac3 SUB
0xac4 DUP2
0xac5 AND
0xac6 PUSH1 0x0
0xac8 SWAP1
0xac9 DUP2
0xaca MSTORE
0xacb PUSH1 0x4
0xacd PUSH1 0x20
0xacf MSTORE
0xad0 PUSH1 0x40
0xad2 DUP2
0xad3 SHA3
0xad4 PUSH1 0x1
0xad6 ADD
0xad7 SLOAD
0xad8 ISZERO
0xad9 DUP1
0xada ISZERO
0xadb PUSH2 0xb00
0xade JUMPI
---
0xabb: JUMPDEST 
0xabc: V994 = 0x1
0xabe: V995 = 0xa0
0xac0: V996 = 0x2
0xac2: V997 = EXP 0x2 0xa0
0xac3: V998 = SUB 0x10000000000000000000000000000000000000000 0x1
0xac5: V999 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xac6: V1000 = 0x0
0xaca: M[0x0] = V999
0xacb: V1001 = 0x4
0xacd: V1002 = 0x20
0xacf: M[0x20] = 0x4
0xad0: V1003 = 0x40
0xad3: V1004 = SHA3 0x0 0x40
0xad4: V1005 = 0x1
0xad6: V1006 = ADD 0x1 V1004
0xad7: V1007 = S[V1006]
0xad8: V1008 = ISZERO V1007
0xada: V1009 = ISZERO V1008
0xadb: V1010 = 0xb00
0xade: JUMPI 0xb00 V1009
---
Entry stack: [V10, 0x30a, V277, 0x0, 0x0, S8, {0x0, 0x145}, S6, {0x145, 0x720, 0x95c}, S4, S3, S2, {0x1b9, 0x560, 0xbc1}, S0]
Stack pops: 1
Stack additions: [S0, 0x0, V1008]
Exit stack: [V10, 0x30a, V277, 0x0, 0x0, S8, {0x0, 0x145}, S6, {0x145, 0x720, 0x95c}, S4, S3, S2, {0x1b9, 0x560, 0xbc1}, S0, 0x0, V1008]

================================

Block 0xadf
[0xadf:0xaff]
---
Predecessors: [0xabb]
Successors: [0xb00]
---
0xadf POP
0xae0 PUSH1 0x1
0xae2 PUSH1 0xa0
0xae4 PUSH1 0x2
0xae6 EXP
0xae7 SUB
0xae8 DUP3
0xae9 AND
0xaea PUSH1 0x0
0xaec SWAP1
0xaed DUP2
0xaee MSTORE
0xaef PUSH1 0x4
0xaf1 PUSH1 0x20
0xaf3 DUP2
0xaf4 SWAP1
0xaf5 MSTORE
0xaf6 PUSH1 0x40
0xaf8 DUP3
0xaf9 SHA3
0xafa ADD
0xafb SLOAD
0xafc PUSH1 0xff
0xafe AND
0xaff GT
---
0xae0: V1011 = 0x1
0xae2: V1012 = 0xa0
0xae4: V1013 = 0x2
0xae6: V1014 = EXP 0x2 0xa0
0xae7: V1015 = SUB 0x10000000000000000000000000000000000000000 0x1
0xae9: V1016 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xaea: V1017 = 0x0
0xaee: M[0x0] = V1016
0xaef: V1018 = 0x4
0xaf1: V1019 = 0x20
0xaf5: M[0x20] = 0x4
0xaf6: V1020 = 0x40
0xaf9: V1021 = SHA3 0x0 0x40
0xafa: V1022 = ADD V1021 0x4
0xafb: V1023 = S[V1022]
0xafc: V1024 = 0xff
0xafe: V1025 = AND 0xff V1023
0xaff: V1026 = GT V1025 0x0
---
Entry stack: [V10, 0x30a, V277, 0x0, 0x0, S10, {0x0, 0x145}, S8, {0x145, 0x720, 0x95c}, S6, S5, S4, {0x1b9, 0x560, 0xbc1}, S2, 0x0, V1008]
Stack pops: 3
Stack additions: [S2, S1, V1026]
Exit stack: [V10, 0x30a, V277, 0x0, 0x0, S10, {0x0, 0x145}, S8, {0x145, 0x720, 0x95c}, S6, S5, S4, {0x1b9, 0x560, 0xbc1}, S2, 0x0, V1026]

================================

Block 0xb00
[0xb00:0xb05]
---
Predecessors: [0xabb, 0xadf]
Successors: [0xb06, 0xb0d]
---
0xb00 JUMPDEST
0xb01 ISZERO
0xb02 PUSH2 0xb0d
0xb05 JUMPI
---
0xb00: JUMPDEST 
0xb01: V1027 = ISZERO S0
0xb02: V1028 = 0xb0d
0xb05: JUMPI 0xb0d V1027
---
Entry stack: [V10, 0x30a, V277, 0x0, 0x0, S10, {0x0, 0x145}, S8, {0x145, 0x720, 0x95c}, S6, S5, S4, {0x1b9, 0x560, 0xbc1}, S2, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x30a, V277, 0x0, 0x0, S10, {0x0, 0x145}, S8, {0x145, 0x720, 0x95c}, S6, S5, S4, {0x1b9, 0x560, 0xbc1}, S2, 0x0]

================================

Block 0xb06
[0xb06:0xb0c]
---
Predecessors: [0xb00]
Successors: [0x7ae]
---
0xb06 POP
0xb07 PUSH1 0x1
0xb09 PUSH2 0x7ae
0xb0c JUMP
---
0xb07: V1029 = 0x1
0xb09: V1030 = 0x7ae
0xb0c: JUMP 0x7ae
---
Entry stack: [V10, 0x30a, V277, 0x0, 0x0, S9, {0x0, 0x145}, S7, {0x145, 0x720, 0x95c}, S5, S4, S3, {0x1b9, 0x560, 0xbc1}, S1, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V10, 0x30a, V277, 0x0, 0x0, S9, {0x0, 0x145}, S7, {0x145, 0x720, 0x95c}, S5, S4, S3, {0x1b9, 0x560, 0xbc1}, S1, 0x1]

================================

Block 0xb0d
[0xb0d:0xb10]
---
Predecessors: [0xb00]
Successors: [0xb11]
---
0xb0d JUMPDEST
0xb0e POP
0xb0f PUSH1 0x0
---
0xb0d: JUMPDEST 
0xb0f: V1031 = 0x0
---
Entry stack: [V10, 0x30a, V277, 0x0, 0x0, S9, {0x0, 0x145}, S7, {0x145, 0x720, 0x95c}, S5, S4, S3, {0x1b9, 0x560, 0xbc1}, S1, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0x30a, V277, 0x0, 0x0, S9, {0x0, 0x145}, S7, {0x145, 0x720, 0x95c}, S5, S4, S3, {0x1b9, 0x560, 0xbc1}, S1, 0x0]

================================

Block 0xb11
[0xb11:0xb15]
---
Predecessors: [0xb0d]
Successors: [0x1b9, 0x560, 0xbc1]
---
0xb11 JUMPDEST
0xb12 SWAP2
0xb13 SWAP1
0xb14 POP
0xb15 JUMP
---
0xb11: JUMPDEST 
0xb15: JUMP {0x1b9, 0x560, 0xbc1}
---
Entry stack: [V10, 0x30a, V277, 0x0, 0x0, S9, {0x0, 0x145}, S7, {0x145, 0x720, 0x95c}, S5, S4, S3, {0x1b9, 0x560, 0xbc1}, S1, 0x0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, 0x30a, V277, 0x0, 0x0, S9, {0x0, 0x145}, S7, {0x145, 0x720, 0x95c}, S5, S4, S3, 0x0]

================================

Block 0xb16
[0xb16:0xb2c]
---
Predecessors: [0x4d9]
Successors: [0xb2d, 0xb31]
---
0xb16 JUMPDEST
0xb17 PUSH1 0x0
0xb19 SLOAD
0xb1a CALLER
0xb1b PUSH1 0x1
0xb1d PUSH1 0xa0
0xb1f PUSH1 0x2
0xb21 EXP
0xb22 SUB
0xb23 SWAP1
0xb24 DUP2
0xb25 AND
0xb26 SWAP2
0xb27 AND
0xb28 EQ
0xb29 PUSH2 0xb31
0xb2c JUMPI
---
0xb16: JUMPDEST 
0xb17: V1032 = 0x0
0xb19: V1033 = S[0x0]
0xb1a: V1034 = CALLER
0xb1b: V1035 = 0x1
0xb1d: V1036 = 0xa0
0xb1f: V1037 = 0x2
0xb21: V1038 = EXP 0x2 0xa0
0xb22: V1039 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb25: V1040 = AND 0xffffffffffffffffffffffffffffffffffffffff V1034
0xb27: V1041 = AND V1033 0xffffffffffffffffffffffffffffffffffffffff
0xb28: V1042 = EQ V1041 V1040
0xb29: V1043 = 0xb31
0xb2c: JUMPI 0xb31 V1042
---
Entry stack: [V10, 0x145, V472]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x145, V472]

================================

Block 0xb2d
[0xb2d:0xb30]
---
Predecessors: [0xb16]
Successors: []
---
0xb2d PUSH1 0x0
0xb2f DUP1
0xb30 REVERT
---
0xb2d: V1044 = 0x0
0xb30: REVERT 0x0 0x0
---
Entry stack: [V10, 0x145, V472]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x145, V472]

================================

Block 0xb31
[0xb31:0xb59]
---
Predecessors: [0xb16]
Successors: [0xb5a]
---
0xb31 JUMPDEST
0xb32 PUSH1 0x0
0xb34 DUP1
0xb35 SLOAD
0xb36 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb4b NOT
0xb4c AND
0xb4d PUSH1 0x1
0xb4f PUSH1 0xa0
0xb51 PUSH1 0x2
0xb53 EXP
0xb54 SUB
0xb55 DUP4
0xb56 AND
0xb57 OR
0xb58 SWAP1
0xb59 SSTORE
---
0xb31: JUMPDEST 
0xb32: V1045 = 0x0
0xb35: V1046 = S[0x0]
0xb36: V1047 = 0xffffffffffffffffffffffffffffffffffffffff
0xb4b: V1048 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xb4c: V1049 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1046
0xb4d: V1050 = 0x1
0xb4f: V1051 = 0xa0
0xb51: V1052 = 0x2
0xb53: V1053 = EXP 0x2 0xa0
0xb54: V1054 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb56: V1055 = AND V472 0xffffffffffffffffffffffffffffffffffffffff
0xb57: V1056 = OR V1055 V1049
0xb59: S[0x0] = V1056
---
Entry stack: [V10, 0x145, V472]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x145, V472]

================================

Block 0xb5a
[0xb5a:0xb5a]
---
Predecessors: [0xb31]
Successors: [0xb5b]
---
0xb5a JUMPDEST
---
0xb5a: JUMPDEST 
---
Entry stack: [V10, 0x145, V472]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x145, V472]

================================

Block 0xb5b
[0xb5b:0xb5d]
---
Predecessors: [0xb5a]
Successors: [0x145]
---
0xb5b JUMPDEST
0xb5c POP
0xb5d JUMP
---
0xb5b: JUMPDEST 
0xb5d: JUMP 0x145
---
Entry stack: [V10, 0x145, V472]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0xb5e
[0xb5e:0xb75]
---
Predecessors: [0x4fa]
Successors: [0xb76, 0xb7a]
---
0xb5e JUMPDEST
0xb5f PUSH1 0x0
0xb61 DUP1
0xb62 SLOAD
0xb63 CALLER
0xb64 PUSH1 0x1
0xb66 PUSH1 0xa0
0xb68 PUSH1 0x2
0xb6a EXP
0xb6b SUB
0xb6c SWAP1
0xb6d DUP2
0xb6e AND
0xb6f SWAP2
0xb70 AND
0xb71 EQ
0xb72 PUSH2 0xb7a
0xb75 JUMPI
---
0xb5e: JUMPDEST 
0xb5f: V1057 = 0x0
0xb62: V1058 = S[0x0]
0xb63: V1059 = CALLER
0xb64: V1060 = 0x1
0xb66: V1061 = 0xa0
0xb68: V1062 = 0x2
0xb6a: V1063 = EXP 0x2 0xa0
0xb6b: V1064 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb6e: V1065 = AND 0xffffffffffffffffffffffffffffffffffffffff V1059
0xb70: V1066 = AND V1058 0xffffffffffffffffffffffffffffffffffffffff
0xb71: V1067 = EQ V1066 V1065
0xb72: V1068 = 0xb7a
0xb75: JUMPI 0xb7a V1067
---
Entry stack: [V10, 0x1b9, V486, V488]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x1b9, V486, V488, 0x0]

================================

Block 0xb76
[0xb76:0xb79]
---
Predecessors: [0xb5e]
Successors: []
---
0xb76 PUSH1 0x0
0xb78 DUP1
0xb79 REVERT
---
0xb76: V1069 = 0x0
0xb79: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1b9, V486, V488, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b9, V486, V488, 0x0]

================================

Block 0xb7a
[0xb7a:0xba6]
---
Predecessors: [0xb5e]
Successors: [0xba7, 0xbab]
---
0xb7a JUMPDEST
0xb7b PUSH1 0x1
0xb7d PUSH1 0xa0
0xb7f PUSH1 0x2
0xb81 EXP
0xb82 SUB
0xb83 DUP4
0xb84 AND
0xb85 DUP3
0xb86 ISZERO
0xb87 PUSH2 0x8fc
0xb8a MUL
0xb8b DUP4
0xb8c PUSH1 0x40
0xb8e MLOAD
0xb8f PUSH1 0x0
0xb91 PUSH1 0x40
0xb93 MLOAD
0xb94 DUP1
0xb95 DUP4
0xb96 SUB
0xb97 DUP2
0xb98 DUP6
0xb99 DUP9
0xb9a DUP9
0xb9b CALL
0xb9c SWAP4
0xb9d POP
0xb9e POP
0xb9f POP
0xba0 POP
0xba1 ISZERO
0xba2 ISZERO
0xba3 PUSH2 0xbab
0xba6 JUMPI
---
0xb7a: JUMPDEST 
0xb7b: V1070 = 0x1
0xb7d: V1071 = 0xa0
0xb7f: V1072 = 0x2
0xb81: V1073 = EXP 0x2 0xa0
0xb82: V1074 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb84: V1075 = AND V486 0xffffffffffffffffffffffffffffffffffffffff
0xb86: V1076 = ISZERO V488
0xb87: V1077 = 0x8fc
0xb8a: V1078 = MUL 0x8fc V1076
0xb8c: V1079 = 0x40
0xb8e: V1080 = M[0x40]
0xb8f: V1081 = 0x0
0xb91: V1082 = 0x40
0xb93: V1083 = M[0x40]
0xb96: V1084 = SUB V1080 V1083
0xb9b: V1085 = CALL V1078 V1075 V488 V1083 V1084 V1083 0x0
0xba1: V1086 = ISZERO V1085
0xba2: V1087 = ISZERO V1086
0xba3: V1088 = 0xbab
0xba6: JUMPI 0xbab V1087
---
Entry stack: [V10, 0x1b9, V486, V488, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x1b9, V486, V488, 0x0]

================================

Block 0xba7
[0xba7:0xbaa]
---
Predecessors: [0xb7a]
Successors: []
---
0xba7 PUSH1 0x0
0xba9 DUP1
0xbaa REVERT
---
0xba7: V1089 = 0x0
0xbaa: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1b9, V486, V488, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b9, V486, V488, 0x0]

================================

Block 0xbab
[0xbab:0xbae]
---
Predecessors: [0xb7a]
Successors: [0xbaf]
---
0xbab JUMPDEST
0xbac POP
0xbad PUSH1 0x1
---
0xbab: JUMPDEST 
0xbad: V1090 = 0x1
---
Entry stack: [V10, 0x1b9, V486, V488, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V10, 0x1b9, V486, V488, 0x1]

================================

Block 0xbaf
[0xbaf:0xbaf]
---
Predecessors: [0xbab]
Successors: [0xbb0]
---
0xbaf JUMPDEST
---
0xbaf: JUMPDEST 
---
Entry stack: [V10, 0x1b9, V486, V488, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b9, V486, V488, 0x1]

================================

Block 0xbb0
[0xbb0:0xbb5]
---
Predecessors: [0xbaf]
Successors: [0x1b9]
---
0xbb0 JUMPDEST
0xbb1 SWAP3
0xbb2 SWAP2
0xbb3 POP
0xbb4 POP
0xbb5 JUMP
---
0xbb0: JUMPDEST 
0xbb5: JUMP 0x1b9
---
Entry stack: [V10, 0x1b9, V486, V488, 0x1]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, 0x1]

================================

Block 0xbb6
[0xbb6:0xbc0]
---
Predecessors: [0x716, 0x94a]
Successors: [0xabb]
---
0xbb6 JUMPDEST
0xbb7 PUSH1 0x0
0xbb9 PUSH2 0xbc1
0xbbc DUP4
0xbbd PUSH2 0xabb
0xbc0 JUMP
---
0xbb6: JUMPDEST 
0xbb7: V1091 = 0x0
0xbb9: V1092 = 0xbc1
0xbbd: V1093 = 0xabb
0xbc0: JUMP 0xabb
---
Entry stack: [V10, 0x30a, V277, 0x0, 0x0, S5, {0x0, 0x145}, S3, {0x720, 0x95c}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0xbc1, S1]
Exit stack: [V10, 0x30a, V277, 0x0, 0x0, S5, {0x0, 0x145}, S3, {0x720, 0x95c}, S1, S0, 0x0, 0xbc1, S1]

================================

Block 0xbc1
[0xbc1:0xbc6]
---
Predecessors: [0x7af, 0xb11]
Successors: [0xbc7, 0xc27]
---
0xbc1 JUMPDEST
0xbc2 ISZERO
0xbc3 PUSH2 0xc27
0xbc6 JUMPI
---
0xbc1: JUMPDEST 
0xbc2: V1094 = ISZERO {0x0, 0x1}
0xbc3: V1095 = 0xc27
0xbc6: JUMPI 0xc27 V1094
---
Entry stack: [V10, 0x30a, V277, 0x0, 0x0, S7, {0x0, 0x145}, S5, {0x145, 0x720, 0x95c}, S3, S2, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x30a, V277, 0x0, 0x0, S7, {0x0, 0x145}, S5, {0x145, 0x720, 0x95c}, S3, S2, S1]

================================

Block 0xbc7
[0xbc7:0xbce]
---
Predecessors: [0xbc1]
Successors: [0xd41]
---
0xbc7 PUSH2 0xbcf
0xbca DUP4
0xbcb PUSH2 0xd41
0xbce JUMP
---
0xbc7: V1096 = 0xbcf
0xbcb: V1097 = 0xd41
0xbce: JUMP 0xd41
---
Entry stack: [V10, 0x30a, V277, 0x0, 0x0, S6, {0x0, 0x145}, S4, {0x145, 0x720, 0x95c}, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0xbcf, S2]
Exit stack: [V10, 0x30a, V277, 0x0, 0x0, S6, {0x0, 0x145}, S4, {0x145, 0x720, 0x95c}, S2, S1, S0, 0xbcf, S2]

================================

Block 0xbcf
[0xbcf:0xbd5]
---
Predecessors: [0xd93]
Successors: [0xbd6, 0xc27]
---
0xbcf JUMPDEST
0xbd0 ISZERO
0xbd1 ISZERO
0xbd2 PUSH2 0xc27
0xbd5 JUMPI
---
0xbcf: JUMPDEST 
0xbd0: V1098 = ISZERO S0
0xbd1: V1099 = ISZERO V1098
0xbd2: V1100 = 0xc27
0xbd5: JUMPI 0xc27 V1099
---
Entry stack: [V10, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0xbd6
[0xbd6:0xbf8]
---
Predecessors: [0xbcf]
Successors: [0xbf9, 0xc1a]
---
0xbd6 PUSH1 0x1
0xbd8 PUSH1 0xa0
0xbda PUSH1 0x2
0xbdc EXP
0xbdd SUB
0xbde DUP1
0xbdf DUP5
0xbe0 AND
0xbe1 PUSH1 0x0
0xbe3 DUP2
0xbe4 DUP2
0xbe5 MSTORE
0xbe6 PUSH1 0x4
0xbe8 PUSH1 0x20
0xbea MSTORE
0xbeb PUSH1 0x40
0xbed SWAP1
0xbee SHA3
0xbef SLOAD
0xbf0 SWAP1
0xbf1 SWAP2
0xbf2 AND
0xbf3 EQ
0xbf4 DUP1
0xbf5 PUSH2 0xc1a
0xbf8 JUMPI
---
0xbd6: V1101 = 0x1
0xbd8: V1102 = 0xa0
0xbda: V1103 = 0x2
0xbdc: V1104 = EXP 0x2 0xa0
0xbdd: V1105 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbe0: V1106 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xbe1: V1107 = 0x0
0xbe5: M[0x0] = V1106
0xbe6: V1108 = 0x4
0xbe8: V1109 = 0x20
0xbea: M[0x20] = 0x4
0xbeb: V1110 = 0x40
0xbee: V1111 = SHA3 0x0 0x40
0xbef: V1112 = S[V1111]
0xbf2: V1113 = AND 0xffffffffffffffffffffffffffffffffffffffff V1112
0xbf3: V1114 = EQ V1113 V1106
0xbf5: V1115 = 0xc1a
0xbf8: JUMPI 0xc1a V1114
---
Entry stack: [V10, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V1114]
Exit stack: [V10, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V1114]

================================

Block 0xbf9
[0xbf9:0xc19]
---
Predecessors: [0xbd6]
Successors: [0xc1a]
---
0xbf9 POP
0xbfa PUSH1 0x1
0xbfc PUSH1 0xa0
0xbfe PUSH1 0x2
0xc00 EXP
0xc01 SUB
0xc02 DUP4
0xc03 DUP2
0xc04 AND
0xc05 PUSH1 0x0
0xc07 SWAP1
0xc08 DUP2
0xc09 MSTORE
0xc0a PUSH1 0x4
0xc0c PUSH1 0x20
0xc0e MSTORE
0xc0f PUSH1 0x40
0xc11 SWAP1
0xc12 SHA3
0xc13 SLOAD
0xc14 DUP2
0xc15 AND
0xc16 SWAP1
0xc17 DUP4
0xc18 AND
0xc19 EQ
---
0xbfa: V1116 = 0x1
0xbfc: V1117 = 0xa0
0xbfe: V1118 = 0x2
0xc00: V1119 = EXP 0x2 0xa0
0xc01: V1120 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc04: V1121 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xc05: V1122 = 0x0
0xc09: M[0x0] = V1121
0xc0a: V1123 = 0x4
0xc0c: V1124 = 0x20
0xc0e: M[0x20] = 0x4
0xc0f: V1125 = 0x40
0xc12: V1126 = SHA3 0x0 0x40
0xc13: V1127 = S[V1126]
0xc15: V1128 = AND 0xffffffffffffffffffffffffffffffffffffffff V1127
0xc18: V1129 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xc19: V1130 = EQ V1129 V1128
---
Entry stack: [V10, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1114]
Stack pops: 4
Stack additions: [S3, S2, S1, V1130]
Exit stack: [V10, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1130]

================================

Block 0xc1a
[0xc1a:0xc1f]
---
Predecessors: [0xbd6, 0xbf9]
Successors: [0xc20, 0xc27]
---
0xc1a JUMPDEST
0xc1b ISZERO
0xc1c PUSH2 0xc27
0xc1f JUMPI
---
0xc1a: JUMPDEST 
0xc1b: V1131 = ISZERO S0
0xc1c: V1132 = 0xc27
0xc1f: JUMPI 0xc27 V1131
---
Entry stack: [V10, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0xc20
[0xc20:0xc26]
---
Predecessors: [0xc1a]
Successors: [0x7f7]
---
0xc20 POP
0xc21 PUSH1 0x1
0xc23 PUSH2 0x7f7
0xc26 JUMP
---
0xc21: V1133 = 0x1
0xc23: V1134 = 0x7f7
0xc26: JUMP 0x7f7
---
Entry stack: [V10, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V10, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x1]

================================

Block 0xc27
[0xc27:0xc27]
---
Predecessors: [0xbc1, 0xbcf, 0xc1a]
Successors: [0xc28]
---
0xc27 JUMPDEST
---
0xc27: JUMPDEST 
---
Entry stack: [V10, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xc28
[0xc28:0xc28]
---
Predecessors: [0xc27]
Successors: [0xc29]
---
0xc28 JUMPDEST
---
0xc28: JUMPDEST 
---
Entry stack: [V10, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xc29
[0xc29:0xc2c]
---
Predecessors: [0xc28]
Successors: [0xc2d]
---
0xc29 JUMPDEST
0xc2a POP
0xc2b PUSH1 0x0
---
0xc29: JUMPDEST 
0xc2b: V1135 = 0x0
---
Entry stack: [V10, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]

================================

Block 0xc2d
[0xc2d:0xc32]
---
Predecessors: [0xc29]
Successors: [0x145, 0x720, 0x731, 0x95c]
---
0xc2d JUMPDEST
0xc2e SWAP3
0xc2f SWAP2
0xc30 POP
0xc31 POP
0xc32 JUMP
---
0xc2d: JUMPDEST 
0xc32: JUMP S3
---
Entry stack: [V10, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, S11, S10, S9, S8, S7, S6, S5, S4, 0x0]

================================

Block 0xc33
[0xc33:0xc3e]
---
Predecessors: [0x728]
Successors: [0xd9a]
---
0xc33 JUMPDEST
0xc34 PUSH1 0x0
0xc36 DUP1
0xc37 PUSH2 0xc3f
0xc3a DUP4
0xc3b PUSH2 0xd9a
0xc3e JUMP
---
0xc33: JUMPDEST 
0xc34: V1136 = 0x0
0xc37: V1137 = 0xc3f
0xc3b: V1138 = 0xd9a
0xc3e: JUMP 0xd9a
---
Entry stack: [V10, S9, S8, S7, S6, S5, S4, S3, S2, 0x731, S0]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, 0xc3f, S0]
Exit stack: [V10, S9, S8, S7, S6, S5, S4, S3, S2, 0x731, S0, 0x0, 0x0, 0xc3f, S0]

================================

Block 0xc3f
[0xc3f:0xc68]
---
Predecessors: [0xdcc]
Successors: [0x7c9]
---
0xc3f JUMPDEST
0xc40 PUSH1 0x1
0xc42 PUSH1 0xa0
0xc44 PUSH1 0x2
0xc46 EXP
0xc47 SUB
0xc48 DUP5
0xc49 AND
0xc4a PUSH1 0x0
0xc4c SWAP1
0xc4d DUP2
0xc4e MSTORE
0xc4f PUSH1 0x4
0xc51 PUSH1 0x20
0xc53 MSTORE
0xc54 PUSH1 0x40
0xc56 SWAP1
0xc57 SHA3
0xc58 PUSH1 0x3
0xc5a ADD
0xc5b SLOAD
0xc5c SWAP1
0xc5d SWAP3
0xc5e POP
0xc5f PUSH2 0xc69
0xc62 SWAP1
0xc63 DUP4
0xc64 SWAP1
0xc65 PUSH2 0x7c9
0xc68 JUMP
---
0xc3f: JUMPDEST 
0xc40: V1139 = 0x1
0xc42: V1140 = 0xa0
0xc44: V1141 = 0x2
0xc46: V1142 = EXP 0x2 0xa0
0xc47: V1143 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc49: V1144 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0xc4a: V1145 = 0x0
0xc4e: M[0x0] = V1144
0xc4f: V1146 = 0x4
0xc51: V1147 = 0x20
0xc53: M[0x20] = 0x4
0xc54: V1148 = 0x40
0xc57: V1149 = SHA3 0x0 0x40
0xc58: V1150 = 0x3
0xc5a: V1151 = ADD 0x3 V1149
0xc5b: V1152 = S[V1151]
0xc5f: V1153 = 0xc69
0xc65: V1154 = 0x7c9
0xc68: JUMP 0x7c9
---
Entry stack: [V10, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S0, S1, 0xc69, S0, V1152]
Exit stack: [V10, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S0, S1, 0xc69, S0, V1152]

================================

Block 0xc69
[0xc69:0xd13]
---
Predecessors: [0x7f7, 0xd93]
Successors: [0xd14]
---
0xc69 JUMPDEST
0xc6a PUSH1 0x1
0xc6c PUSH1 0xa0
0xc6e PUSH1 0x2
0xc70 EXP
0xc71 SUB
0xc72 DUP5
0xc73 AND
0xc74 PUSH1 0x0
0xc76 SWAP1
0xc77 DUP2
0xc78 MSTORE
0xc79 PUSH1 0x4
0xc7b PUSH1 0x20
0xc7d MSTORE
0xc7e PUSH1 0x40
0xc80 SWAP1
0xc81 DUP2
0xc82 SWAP1
0xc83 SHA3
0xc84 PUSH1 0x1
0xc86 DUP2
0xc87 ADD
0xc88 DUP4
0xc89 SWAP1
0xc8a SSTORE
0xc8b PUSH1 0x2
0xc8d ADD
0xc8e SLOAD
0xc8f SWAP2
0xc90 SWAP3
0xc91 POP
0xc92 PUSH32 0x7482e5336f1e1d41a854354f7d34587683eada063aece86f3318e562e124381d
0xcb3 SWAP2
0xcb4 DUP6
0xcb5 SWAP2
0xcb6 DUP5
0xcb7 SWAP1
0xcb8 MLOAD
0xcb9 DUP1
0xcba DUP5
0xcbb PUSH1 0x1
0xcbd PUSH1 0xa0
0xcbf PUSH1 0x2
0xcc1 EXP
0xcc2 SUB
0xcc3 AND
0xcc4 PUSH1 0x1
0xcc6 PUSH1 0xa0
0xcc8 PUSH1 0x2
0xcca EXP
0xccb SUB
0xccc AND
0xccd DUP2
0xcce MSTORE
0xccf PUSH1 0x20
0xcd1 ADD
0xcd2 DUP4
0xcd3 DUP2
0xcd4 MSTORE
0xcd5 PUSH1 0x20
0xcd7 ADD
0xcd8 DUP3
0xcd9 DUP2
0xcda MSTORE
0xcdb PUSH1 0x20
0xcdd ADD
0xcde SWAP4
0xcdf POP
0xce0 POP
0xce1 POP
0xce2 POP
0xce3 PUSH1 0x40
0xce5 MLOAD
0xce6 DUP1
0xce7 SWAP2
0xce8 SUB
0xce9 SWAP1
0xcea LOG1
0xceb PUSH1 0x1
0xced PUSH1 0xa0
0xcef PUSH1 0x2
0xcf1 EXP
0xcf2 SUB
0xcf3 DUP4
0xcf4 AND
0xcf5 PUSH1 0x0
0xcf7 SWAP1
0xcf8 DUP2
0xcf9 MSTORE
0xcfa PUSH1 0x4
0xcfc PUSH1 0x20
0xcfe DUP2
0xcff SWAP1
0xd00 MSTORE
0xd01 PUSH1 0x40
0xd03 DUP3
0xd04 SHA3
0xd05 SWAP1
0xd06 DUP2
0xd07 ADD
0xd08 DUP1
0xd09 SLOAD
0xd0a PUSH1 0xff
0xd0c NOT
0xd0d AND
0xd0e SWAP1
0xd0f SSTORE
0xd10 PUSH1 0x2
0xd12 ADD
0xd13 SSTORE
---
0xc69: JUMPDEST 
0xc6a: V1155 = 0x1
0xc6c: V1156 = 0xa0
0xc6e: V1157 = 0x2
0xc70: V1158 = EXP 0x2 0xa0
0xc71: V1159 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc73: V1160 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0xc74: V1161 = 0x0
0xc78: M[0x0] = V1160
0xc79: V1162 = 0x4
0xc7b: V1163 = 0x20
0xc7d: M[0x20] = 0x4
0xc7e: V1164 = 0x40
0xc83: V1165 = SHA3 0x0 0x40
0xc84: V1166 = 0x1
0xc87: V1167 = ADD V1165 0x1
0xc8a: S[V1167] = S0
0xc8b: V1168 = 0x2
0xc8d: V1169 = ADD 0x2 V1165
0xc8e: V1170 = S[V1169]
0xc92: V1171 = 0x7482e5336f1e1d41a854354f7d34587683eada063aece86f3318e562e124381d
0xcb8: V1172 = M[0x40]
0xcbb: V1173 = 0x1
0xcbd: V1174 = 0xa0
0xcbf: V1175 = 0x2
0xcc1: V1176 = EXP 0x2 0xa0
0xcc2: V1177 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcc3: V1178 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xcc4: V1179 = 0x1
0xcc6: V1180 = 0xa0
0xcc8: V1181 = 0x2
0xcca: V1182 = EXP 0x2 0xa0
0xccb: V1183 = SUB 0x10000000000000000000000000000000000000000 0x1
0xccc: V1184 = AND 0xffffffffffffffffffffffffffffffffffffffff V1178
0xcce: M[V1172] = V1184
0xccf: V1185 = 0x20
0xcd1: V1186 = ADD 0x20 V1172
0xcd4: M[V1186] = V1170
0xcd5: V1187 = 0x20
0xcd7: V1188 = ADD 0x20 V1186
0xcda: M[V1188] = S0
0xcdb: V1189 = 0x20
0xcdd: V1190 = ADD 0x20 V1188
0xce3: V1191 = 0x40
0xce5: V1192 = M[0x40]
0xce8: V1193 = SUB V1190 V1192
0xcea: LOG V1192 V1193 0x7482e5336f1e1d41a854354f7d34587683eada063aece86f3318e562e124381d
0xceb: V1194 = 0x1
0xced: V1195 = 0xa0
0xcef: V1196 = 0x2
0xcf1: V1197 = EXP 0x2 0xa0
0xcf2: V1198 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcf4: V1199 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0xcf5: V1200 = 0x0
0xcf9: M[0x0] = V1199
0xcfa: V1201 = 0x4
0xcfc: V1202 = 0x20
0xd00: M[0x20] = 0x4
0xd01: V1203 = 0x40
0xd04: V1204 = SHA3 0x0 0x40
0xd07: V1205 = ADD V1204 0x4
0xd09: V1206 = S[V1205]
0xd0a: V1207 = 0xff
0xd0c: V1208 = NOT 0xff
0xd0d: V1209 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1206
0xd0f: S[V1205] = V1209
0xd10: V1210 = 0x2
0xd12: V1211 = ADD 0x2 V1204
0xd13: S[V1211] = 0x0
---
Entry stack: [V10, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S0]
Exit stack: [V10, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0]

================================

Block 0xd14
[0xd14:0xd18]
---
Predecessors: [0xc69]
Successors: [0x145, 0x30a, 0x720, 0x731, 0x95c]
---
0xd14 JUMPDEST
0xd15 POP
0xd16 POP
0xd17 POP
0xd18 JUMP
---
0xd14: JUMPDEST 
0xd18: JUMP S3
---
Entry stack: [V10, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V10, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4]

================================

Block 0xd19
[0xd19:0xd28]
---
Predecessors: [0x7ec, 0xd41, 0xd9a]
Successors: [0xd29, 0xd2e]
---
0xd19 JUMPDEST
0xd1a PUSH1 0x0
0xd1c DUP3
0xd1d DUP3
0xd1e ADD
0xd1f DUP4
0xd20 DUP2
0xd21 LT
0xd22 DUP1
0xd23 ISZERO
0xd24 SWAP1
0xd25 PUSH2 0xd2e
0xd28 JUMPI
---
0xd19: JUMPDEST 
0xd1a: V1212 = 0x0
0xd1e: V1213 = ADD S0 S1
0xd21: V1214 = LT V1213 S1
0xd23: V1215 = ISZERO V1214
0xd25: V1216 = 0xd2e
0xd28: JUMPI 0xd2e V1214
---
Entry stack: [V10, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, {0x7f4, 0xd74, 0xdc9}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1213, V1215]
Exit stack: [V10, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, {0x7f4, 0xd74, 0xdc9}, S1, S0, 0x0, V1213, V1215]

================================

Block 0xd29
[0xd29:0xd2d]
---
Predecessors: [0xd19]
Successors: [0xd2e]
---
0xd29 POP
0xd2a DUP3
0xd2b DUP2
0xd2c LT
0xd2d ISZERO
---
0xd2c: V1217 = LT V1213 S3
0xd2d: V1218 = ISZERO V1217
---
Entry stack: [V10, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, 0x0, {0x7f4, 0xd74, 0xdc9}, S4, S3, 0x0, V1213, V1215]
Stack pops: 4
Stack additions: [S3, S2, S1, V1218]
Exit stack: [V10, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, 0x0, {0x7f4, 0xd74, 0xdc9}, S4, S3, 0x0, V1213, V1218]

================================

Block 0xd2e
[0xd2e:0xd34]
---
Predecessors: [0xd19, 0xd29]
Successors: [0xd35, 0xd36]
---
0xd2e JUMPDEST
0xd2f ISZERO
0xd30 ISZERO
0xd31 PUSH2 0xd36
0xd34 JUMPI
---
0xd2e: JUMPDEST 
0xd2f: V1219 = ISZERO S0
0xd30: V1220 = ISZERO V1219
0xd31: V1221 = 0xd36
0xd34: JUMPI 0xd36 V1220
---
Entry stack: [V10, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, 0x0, {0x7f4, 0xd74, 0xdc9}, S4, S3, 0x0, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, 0x0, {0x7f4, 0xd74, 0xdc9}, S4, S3, 0x0, S1]

================================

Block 0xd35
[0xd35:0xd35]
---
Predecessors: [0xd2e]
Successors: []
---
0xd35 INVALID
---
0xd35: INVALID 
---
Entry stack: [V10, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, {0x7f4, 0xd74, 0xdc9}, S3, S2, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, {0x7f4, 0xd74, 0xdc9}, S3, S2, 0x0, S0]

================================

Block 0xd36
[0xd36:0xd39]
---
Predecessors: [0xd2e]
Successors: [0xd3a]
---
0xd36 JUMPDEST
0xd37 DUP1
0xd38 SWAP2
0xd39 POP
---
0xd36: JUMPDEST 
---
Entry stack: [V10, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, {0x7f4, 0xd74, 0xdc9}, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V10, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, {0x7f4, 0xd74, 0xdc9}, S3, S2, S0, S0]

================================

Block 0xd3a
[0xd3a:0xd40]
---
Predecessors: [0xd36]
Successors: [0x7f4, 0xd74, 0xdc9]
---
0xd3a JUMPDEST
0xd3b POP
0xd3c SWAP3
0xd3d SWAP2
0xd3e POP
0xd3f POP
0xd40 JUMP
---
0xd3a: JUMPDEST 
0xd40: JUMP {0x7f4, 0xd74, 0xdc9}
---
Entry stack: [V10, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, {0x7f4, 0xd74, 0xdc9}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V10, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, S1]

================================

Block 0xd41
[0xd41:0xd73]
---
Predecessors: [0x95c, 0xbc7]
Successors: [0xd19]
---
0xd41 JUMPDEST
0xd42 PUSH1 0x1
0xd44 PUSH1 0xa0
0xd46 PUSH1 0x2
0xd48 EXP
0xd49 SUB
0xd4a DUP2
0xd4b AND
0xd4c PUSH1 0x0
0xd4e SWAP1
0xd4f DUP2
0xd50 MSTORE
0xd51 PUSH1 0x4
0xd53 PUSH1 0x20
0xd55 DUP2
0xd56 SWAP1
0xd57 MSTORE
0xd58 PUSH1 0x40
0xd5a DUP3
0xd5b SHA3
0xd5c PUSH1 0x2
0xd5e DUP2
0xd5f ADD
0xd60 SLOAD
0xd61 SWAP2
0xd62 ADD
0xd63 SLOAD
0xd64 DUP3
0xd65 SWAP2
0xd66 DUP3
0xd67 SWAP2
0xd68 PUSH2 0xd74
0xd6b SWAP2
0xd6c SWAP1
0xd6d PUSH1 0xff
0xd6f AND
0xd70 PUSH2 0xd19
0xd73 JUMP
---
0xd41: JUMPDEST 
0xd42: V1222 = 0x1
0xd44: V1223 = 0xa0
0xd46: V1224 = 0x2
0xd48: V1225 = EXP 0x2 0xa0
0xd49: V1226 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd4b: V1227 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xd4c: V1228 = 0x0
0xd50: M[0x0] = V1227
0xd51: V1229 = 0x4
0xd53: V1230 = 0x20
0xd57: M[0x20] = 0x4
0xd58: V1231 = 0x40
0xd5b: V1232 = SHA3 0x0 0x40
0xd5c: V1233 = 0x2
0xd5f: V1234 = ADD V1232 0x2
0xd60: V1235 = S[V1234]
0xd62: V1236 = ADD 0x4 V1232
0xd63: V1237 = S[V1236]
0xd68: V1238 = 0xd74
0xd6d: V1239 = 0xff
0xd6f: V1240 = AND 0xff V1237
0xd70: V1241 = 0xd19
0xd73: JUMP 0xd19
---
Entry stack: [V10, 0x30a, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x965, 0xbcf}, S0]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, 0x0, 0xd74, V1235, V1240]
Exit stack: [V10, 0x30a, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x965, 0xbcf}, S0, 0x0, 0x0, 0x0, 0xd74, V1235, V1240]

================================

Block 0xd74
[0xd74:0xd82]
---
Predecessors: [0xd3a]
Successors: [0xd83, 0xd8f]
---
0xd74 JUMPDEST
0xd75 SWAP2
0xd76 POP
0xd77 PUSH1 0x0
0xd79 SWAP1
0xd7a POP
0xd7b NUMBER
0xd7c DUP3
0xd7d GT
0xd7e ISZERO
0xd7f PUSH2 0xd8f
0xd82 JUMPI
---
0xd74: JUMPDEST 
0xd77: V1242 = 0x0
0xd7b: V1243 = NUMBER
0xd7d: V1244 = GT S0 V1243
0xd7e: V1245 = ISZERO V1244
0xd7f: V1246 = 0xd8f
0xd82: JUMPI 0xd8f V1245
---
Entry stack: [V10, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0]
Stack pops: 3
Stack additions: [S0, 0x0]
Exit stack: [V10, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S0, 0x0]

================================

Block 0xd83
[0xd83:0xd8b]
---
Predecessors: [0xd74]
Successors: [0xdd1]
---
0xd83 PUSH2 0xd8c
0xd86 DUP3
0xd87 NUMBER
0xd88 PUSH2 0xdd1
0xd8b JUMP
---
0xd83: V1247 = 0xd8c
0xd87: V1248 = NUMBER
0xd88: V1249 = 0xdd1
0xd8b: JUMP 0xdd1
---
Entry stack: [V10, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0xd8c, S1, V1248]
Exit stack: [S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0, 0xd8c, S1, V1248]

================================

Block 0xd8c
[0xd8c:0xd8e]
---
Predecessors: [0xde5]
Successors: [0xd8f]
---
0xd8c JUMPDEST
0xd8d SWAP1
0xd8e POP
---
0xd8c: JUMPDEST 
---
Entry stack: [V10, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V1274]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V1274]

================================

Block 0xd8f
[0xd8f:0xd92]
---
Predecessors: [0xd74, 0xd8c]
Successors: [0xd93]
---
0xd8f JUMPDEST
0xd90 DUP1
0xd91 SWAP3
0xd92 POP
---
0xd8f: JUMPDEST 
---
Entry stack: [V10, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S0, S1, S0]
Exit stack: [V10, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S0, S1, S0]

================================

Block 0xd93
[0xd93:0xd99]
---
Predecessors: [0xd8f]
Successors: [0x145, 0x15c, 0x965, 0xbcf, 0xc69]
---
0xd93 JUMPDEST
0xd94 POP
0xd95 POP
0xd96 SWAP2
0xd97 SWAP1
0xd98 POP
0xd99 JUMP
---
0xd93: JUMPDEST 
0xd99: JUMP S4
---
Entry stack: [V10, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S2]
Exit stack: [V10, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S2]

================================

Block 0xd9a
[0xd9a:0xdc8]
---
Predecessors: [0x965, 0xc33]
Successors: [0xd19]
---
0xd9a JUMPDEST
0xd9b PUSH1 0x1
0xd9d PUSH1 0xa0
0xd9f PUSH1 0x2
0xda1 EXP
0xda2 SUB
0xda3 DUP2
0xda4 AND
0xda5 PUSH1 0x0
0xda7 SWAP1
0xda8 DUP2
0xda9 MSTORE
0xdaa PUSH1 0x4
0xdac PUSH1 0x20
0xdae DUP2
0xdaf SWAP1
0xdb0 MSTORE
0xdb1 PUSH1 0x40
0xdb3 DUP3
0xdb4 SHA3
0xdb5 PUSH1 0x2
0xdb7 DUP2
0xdb8 ADD
0xdb9 SLOAD
0xdba SWAP2
0xdbb ADD
0xdbc SLOAD
0xdbd PUSH2 0xdc9
0xdc0 SWAP2
0xdc1 SWAP1
0xdc2 PUSH1 0xff
0xdc4 AND
0xdc5 PUSH2 0xd19
0xdc8 JUMP
---
0xd9a: JUMPDEST 
0xd9b: V1250 = 0x1
0xd9d: V1251 = 0xa0
0xd9f: V1252 = 0x2
0xda1: V1253 = EXP 0x2 0xa0
0xda2: V1254 = SUB 0x10000000000000000000000000000000000000000 0x1
0xda4: V1255 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xda5: V1256 = 0x0
0xda9: M[0x0] = V1255
0xdaa: V1257 = 0x4
0xdac: V1258 = 0x20
0xdb0: M[0x20] = 0x4
0xdb1: V1259 = 0x40
0xdb4: V1260 = SHA3 0x0 0x40
0xdb5: V1261 = 0x2
0xdb8: V1262 = ADD V1260 0x2
0xdb9: V1263 = S[V1262]
0xdbb: V1264 = ADD 0x4 V1260
0xdbc: V1265 = S[V1264]
0xdbd: V1266 = 0xdc9
0xdc2: V1267 = 0xff
0xdc4: V1268 = AND 0xff V1265
0xdc5: V1269 = 0xd19
0xdc8: JUMP 0xd19
---
Entry stack: [V10, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x96e, 0xc3f}, S0]
Stack pops: 1
Stack additions: [S0, 0x0, 0xdc9, V1263, V1268]
Exit stack: [V10, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x96e, 0xc3f}, S0, 0x0, 0xdc9, V1263, V1268]

================================

Block 0xdc9
[0xdc9:0xdcb]
---
Predecessors: [0xd3a]
Successors: [0xdcc]
---
0xdc9 JUMPDEST
0xdca SWAP1
0xdcb POP
---
0xdc9: JUMPDEST 
---
Entry stack: [V10, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0]

================================

Block 0xdcc
[0xdcc:0xdd0]
---
Predecessors: [0xdc9]
Successors: [0x96e, 0xc3f]
---
0xdcc JUMPDEST
0xdcd SWAP2
0xdce SWAP1
0xdcf POP
0xdd0 JUMP
---
0xdcc: JUMPDEST 
0xdd0: THROW 
---
Entry stack: [V10, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S0]

================================

Block 0xdd1
[0xdd1:0xddc]
---
Predecessors: [0xd83]
Successors: [0xddd, 0xdde]
---
0xdd1 JUMPDEST
0xdd2 PUSH1 0x0
0xdd4 DUP1
0xdd5 DUP3
0xdd6 DUP5
0xdd7 LT
0xdd8 ISZERO
0xdd9 PUSH2 0xdde
0xddc JUMPI
---
0xdd1: JUMPDEST 
0xdd2: V1270 = 0x0
0xdd7: V1271 = LT S1 V1248
0xdd8: V1272 = ISZERO V1271
0xdd9: V1273 = 0xdde
0xddc: JUMPI 0xdde V1272
---
Entry stack: [V10, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, 0xd8c, S1, V1248]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0]
Exit stack: [V10, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, 0xd8c, S1, V1248, 0x0, 0x0]

================================

Block 0xddd
[0xddd:0xddd]
---
Predecessors: [0xdd1]
Successors: []
---
0xddd INVALID
---
0xddd: INVALID 
---
Entry stack: [V10, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, 0xd8c, S3, V1248, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, 0xd8c, S3, V1248, 0x0, 0x0]

================================

Block 0xdde
[0xdde:0xde4]
---
Predecessors: [0xdd1]
Successors: [0xde5]
---
0xdde JUMPDEST
0xddf POP
0xde0 POP
0xde1 DUP1
0xde2 DUP3
0xde3 SUB
0xde4 DUP1
---
0xdde: JUMPDEST 
0xde3: V1274 = SUB S3 V1248
---
Entry stack: [V10, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, 0xd8c, S3, V1248, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, V1274, V1274]
Exit stack: [V10, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, 0xd8c, S3, V1248, V1274, V1274]

================================

Block 0xde5
[0xde5:0xdeb]
---
Predecessors: [0xdde]
Successors: [0xd8c]
---
0xde5 JUMPDEST
0xde6 POP
0xde7 SWAP3
0xde8 SWAP2
0xde9 POP
0xdea POP
0xdeb JUMP
---
0xde5: JUMPDEST 
0xdeb: JUMP 0xd8c
---
Entry stack: [V10, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, 0xd8c, S3, V1248, V1274, V1274]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V10, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, V1274]

================================

Block 0xdec
[0xdec:0xe20]
---
Predecessors: []
Successors: []
---
0xdec STOP
0xded LOG1
0xdee PUSH6 0x627a7a723058
0xdf5 SHA3
0xdf6 MISSING 0xe2
0xdf7 LOG1
0xdf8 MISSING 0xfc
0xdf9 MISSING 0xfb
0xdfa MISSING 0xb4
0xdfb MISSING 0xfb
0xdfc MISSING 0xc5
0xdfd MISSING 0xbf
0xdfe PUSH5 0xd2d331a9ec
0xe04 MISSING 0x5c
0xe05 MUL
0xe06 CALLDATALOAD
0xe07 CALLDATASIZE
0xe08 MISSING 0xc1
0xe09 MISSING 0xe
0xe0a MISSING 0x4c
0xe0b MISSING 0x26
0xe0c MISSING 0xe0
0xe0d PUSH19 0xa52137a36b3a6d2e0029
---
0xdec: STOP 
0xded: LOG S0 S1 S2
0xdee: V1275 = 0x627a7a723058
0xdf5: V1276 = SHA3 0x627a7a723058 S3
0xdf6: MISSING 0xe2
0xdf7: LOG S0 S1 S2
0xdf8: MISSING 0xfc
0xdf9: MISSING 0xfb
0xdfa: MISSING 0xb4
0xdfb: MISSING 0xfb
0xdfc: MISSING 0xc5
0xdfd: MISSING 0xbf
0xdfe: V1277 = 0xd2d331a9ec
0xe04: MISSING 0x5c
0xe05: V1278 = MUL S0 S1
0xe06: V1279 = CALLDATALOAD V1278
0xe07: V1280 = CALLDATASIZE
0xe08: MISSING 0xc1
0xe09: MISSING 0xe
0xe0a: MISSING 0x4c
0xe0b: MISSING 0x26
0xe0c: MISSING 0xe0
0xe0d: V1281 = 0xa52137a36b3a6d2e0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V1276, 0xd2d331a9ec, V1280, V1279, 0xa52137a36b3a6d2e0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x13faede6
Entry block: 0x149
Exit block: 0x15c
Body: 0x149, 0x150, 0x154, 0x15c, 0x710

Function 1:
Public function signature: 0x142769aa
Entry block: 0x16e
Exit block: 0x147
Body: 0x145, 0x146, 0x147, 0x16e

Function 2:
Public function signature: 0x171fcb5a
Entry block: 0x18d
Exit block: 0x727
Body: 0x15c, 0x18d, 0x716, 0x720, 0x727

Function 3:
Public function signature: 0x1fe9eabc
Entry block: 0x1a3
Exit block: 0x732
Body: 0x1a3, 0x1aa, 0x1ae, 0x732, 0x735, 0x74d, 0x751

Function 4:
Public function signature: 0x372c12b1
Entry block: 0x1cd
Exit block: 0x1b9
Body: 0x1b9, 0x1cd, 0x1d4, 0x1d8, 0x7b4

Function 5:
Public function signature: 0x4173ffbc
Entry block: 0x200
Exit block: 0x15c
Body: 0x15c, 0x200, 0x207, 0x20b

Function 6:
Public function signature: 0x41c0e1b5
Entry block: 0x22b
Exit block: 0x818
Body: 0x22b, 0x232, 0x236, 0x7fd, 0x814, 0x818

Function 7:
Public function signature: 0x44a0d68a
Entry block: 0x240
Exit block: 0x1b9
Body: 0x1b9, 0x240, 0x247, 0x24b, 0x829, 0x841, 0x845, 0x8a1, 0x8a2

Function 8:
Public function signature: 0x49af63a9
Entry block: 0x26a
Exit block: 0x1b9
Body: 0x1b9, 0x26a, 0x271, 0x275, 0x8a7, 0x8bf, 0x8c3, 0x92f, 0x930

Function 9:
Public function signature: 0x6ac5db19
Entry block: 0x297
Exit block: 0x15c
Body: 0x15c, 0x297, 0x29e, 0x2a2, 0x935

Function 10:
Public function signature: 0x8da5cb5b
Entry block: 0x2bc
Exit block: 0x2cf
Body: 0x2bc, 0x2c3, 0x2c7, 0x2cf, 0x93b

Function 11:
Public function signature: 0x936315d6
Entry block: 0x2eb
Exit block: 0x15c
Body: 0x15c, 0x2eb, 0x2f2, 0x2f6, 0x94a, 0x95c

Function 12:
Public function signature: 0x942ea466
Entry block: 0x348
Exit block: 0x367
Body: 0x348, 0x34f, 0x353, 0x367, 0x984, 0x9b1

Function 13:
Public function signature: 0x9edf42ff
Entry block: 0x39b
Exit block: 0x3ba
Body: 0x39b, 0x3a2, 0x3a6, 0x3ba, 0x9b8

Function 14:
Public function signature: 0xa9671dd9
Entry block: 0x3f7
Exit block: 0x1b9
Body: 0x1b9, 0x3f7, 0x3fe, 0x402, 0x9f5, 0xa0d, 0xa11, 0xa3b, 0xa3c

Function 15:
Public function signature: 0xbe116c3b
Entry block: 0x42a
Exit block: 0x1b9
Body: 0x1b9, 0x42a, 0x431, 0x435, 0xa41, 0xa59, 0xa5d, 0xa81, 0xa82

Function 16:
Public function signature: 0xccca123b
Entry block: 0x45d
Exit block: 0x470
Body: 0x45d, 0x464, 0x468, 0x470, 0xa87

Function 17:
Public function signature: 0xdf32754b
Entry block: 0x486
Exit block: 0x147
Body: 0x145, 0x146, 0x147, 0x486, 0x48d, 0x491, 0xa90, 0xab9

Function 18:
Public function signature: 0xf1f76438
Entry block: 0x49b
Exit block: 0x4a2
Body: 0x1b9, 0x49b, 0x4a2, 0x4a6

Function 19:
Public function signature: 0xf2fde38b
Entry block: 0x4ce
Exit block: 0x147
Body: 0x145, 0x146, 0x147, 0x4ce, 0x4d5, 0x4d9, 0xb16, 0xb2d, 0xb31, 0xb5a, 0xb5b

Function 20:
Public function signature: 0xf3fef3a3
Entry block: 0x4ef
Exit block: 0x1b9
Body: 0x1b9, 0x4ef, 0x4f6, 0x4fa, 0xb5e, 0xb76, 0xb7a, 0xba7, 0xbab, 0xbaf, 0xbb0

Function 21:
Public fallback function
Entry block: 0x11a
Exit block: 0x147
Body: 0x11a, 0x11b, 0x132, 0x145, 0x146, 0x147

Function 22:
Private function
Entry block: 0xd9a
Exit block: 0xdcc
Body: 0xd9a, 0xdc9, 0xdcc

Function 23:
Private function
Entry block: 0x7c9
Exit block: 0xd93
Body: 0x720, 0x728, 0x7c9, 0x7ec, 0x7f4, 0x7f7, 0x95c, 0x95c, 0x95c, 0x965, 0x965, 0xbcf, 0xbd6, 0xbf9, 0xc1a, 0xc20, 0xc27, 0xc28, 0xc29, 0xc2d, 0xc33, 0xc3f, 0xc3f, 0xc69, 0xd14, 0xd19, 0xd29, 0xd2e, 0xd36, 0xd3a, 0xd74, 0xd83, 0xd8c, 0xd8f, 0xd93, 0xd9a, 0xdc9, 0xdcc, 0xdd1, 0xdde, 0xde5

Function 24:
Private function
Entry block: 0xd41
Exit block: 0xd93
Body: 0x720, 0x728, 0x95c, 0x965, 0xc33, 0xc3f, 0xc3f, 0xc69, 0xd14, 0xd41, 0xd74, 0xd83, 0xd8c, 0xd8f, 0xd93, 0xd9a, 0xdc9, 0xdcc, 0xdd1, 0xdde, 0xde5

Function 25:
Private function
Entry block: 0xd19
Exit block: 0xd3a
Body: 0x720, 0x728, 0x7f4, 0x7f7, 0x95c, 0x95c, 0x965, 0xc33, 0xc3f, 0xc3f, 0xc69, 0xd14, 0xd19, 0xd29, 0xd2e, 0xd36, 0xd3a, 0xd9a, 0xdc9, 0xdcc

Function 26:
Private function
Entry block: 0xabb
Exit block: 0xb11
Body: 0x7ae, 0x7af, 0xabb, 0xadf, 0xb00, 0xb06, 0xb0d, 0xb11

Function 27:
Private function
Entry block: 0xbb6
Exit block: 0xd14
Body: 0x7f7, 0xbb6, 0xbc1, 0xbc7, 0xbcf, 0xbd6, 0xbf9, 0xc1a, 0xc20, 0xc27, 0xc28, 0xc29, 0xc2d, 0xc69, 0xd14

Function 28:
Private function
Entry block: 0x525
Exit block: 0xd93
Body: 0x525, 0x548, 0x556, 0x557, 0x560, 0x567, 0x61d, 0x63b, 0x649, 0x651, 0x657, 0x680, 0x70b, 0x720, 0x728, 0x95c, 0x95c, 0x965, 0x96e, 0x97b, 0xc33, 0xc3f, 0xc3f, 0xc69, 0xd14, 0xd9a, 0xdc9, 0xdcc

