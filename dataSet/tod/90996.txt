Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x75]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x75
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x75
0xa: JUMPI 0x75 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x77]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x2d05d3f
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x77
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x2d05d3f
0x39: V12 = EQ V10 0x2d05d3f
0x3a: V13 = 0x77
0x3d: JUMPI 0x77 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0xa3]
---
0x3e DUP1
0x3f PUSH4 0x1b9265b8
0x44 EQ
0x45 PUSH2 0xa3
0x48 JUMPI
---
0x3f: V14 = 0x1b9265b8
0x44: V15 = EQ 0x1b9265b8 V10
0x45: V16 = 0xa3
0x48: JUMPI 0xa3 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0xad]
---
0x49 DUP1
0x4a PUSH4 0x253227f1
0x4f EQ
0x50 PUSH2 0xad
0x53 JUMPI
---
0x4a: V17 = 0x253227f1
0x4f: V18 = EQ 0x253227f1 V10
0x50: V19 = 0xad
0x53: JUMPI 0xad V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x105]
---
0x54 DUP1
0x55 PUSH4 0x2e1a7d4d
0x5a EQ
0x5b PUSH2 0x105
0x5e JUMPI
---
0x55: V20 = 0x2e1a7d4d
0x5a: V21 = EQ 0x2e1a7d4d V10
0x5b: V22 = 0x105
0x5e: JUMPI 0x105 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x112]
---
0x5f DUP1
0x60 PUSH4 0x41c0e1b5
0x65 EQ
0x66 PUSH2 0x112
0x69 JUMPI
---
0x60: V23 = 0x41c0e1b5
0x65: V24 = EQ 0x41c0e1b5 V10
0x66: V25 = 0x112
0x69: JUMPI 0x112 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x124]
---
0x6a DUP1
0x6b PUSH4 0x97be40ff
0x70 EQ
0x71 PUSH2 0x124
0x74 JUMPI
---
0x6b: V26 = 0x97be40ff
0x70: V27 = EQ 0x97be40ff V10
0x71: V28 = 0x124
0x74: JUMPI 0x124 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x76]
---
Predecessors: [0x0, 0x6a]
Successors: []
---
0x75 JUMPDEST
0x76 INVALID
---
0x75: JUMPDEST 
0x76: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x77
[0x77:0x7d]
---
Predecessors: [0xb]
Successors: [0x7e, 0x7f]
---
0x77 JUMPDEST
0x78 CALLVALUE
0x79 ISZERO
0x7a PUSH2 0x7f
0x7d JUMPI
---
0x77: JUMPDEST 
0x78: V29 = CALLVALUE
0x79: V30 = ISZERO V29
0x7a: V31 = 0x7f
0x7d: JUMPI 0x7f V30
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x7e
[0x7e:0x7e]
---
Predecessors: [0x77]
Successors: []
---
0x7e INVALID
---
0x7e: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x7f
[0x7f:0x86]
---
Predecessors: [0x77]
Successors: [0x17e]
---
0x7f JUMPDEST
0x80 PUSH2 0x87
0x83 PUSH2 0x17e
0x86 JUMP
---
0x7f: JUMPDEST 
0x80: V32 = 0x87
0x83: V33 = 0x17e
0x86: JUMP 0x17e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x87]
Exit stack: [V10, 0x87]

================================

Block 0x87
[0x87:0xa2]
---
Predecessors: [0x17e]
Successors: []
---
0x87 JUMPDEST
0x88 PUSH1 0x40
0x8a DUP1
0x8b MLOAD
0x8c PUSH1 0x1
0x8e PUSH1 0xa0
0x90 PUSH1 0x2
0x92 EXP
0x93 SUB
0x94 SWAP1
0x95 SWAP3
0x96 AND
0x97 DUP3
0x98 MSTORE
0x99 MLOAD
0x9a SWAP1
0x9b DUP2
0x9c SWAP1
0x9d SUB
0x9e PUSH1 0x20
0xa0 ADD
0xa1 SWAP1
0xa2 RETURN
---
0x87: JUMPDEST 
0x88: V34 = 0x40
0x8b: V35 = M[0x40]
0x8c: V36 = 0x1
0x8e: V37 = 0xa0
0x90: V38 = 0x2
0x92: V39 = EXP 0x2 0xa0
0x93: V40 = SUB 0x10000000000000000000000000000000000000000 0x1
0x96: V41 = AND V117 0xffffffffffffffffffffffffffffffffffffffff
0x98: M[V35] = V41
0x99: V42 = M[0x40]
0x9d: V43 = SUB V35 V42
0x9e: V44 = 0x20
0xa0: V45 = ADD 0x20 V43
0xa2: RETURN V42 V45
---
Entry stack: [V10, 0x87, V117]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x87]

================================

Block 0xa3
[0xa3:0xaa]
---
Predecessors: [0x3e]
Successors: [0x18d]
---
0xa3 JUMPDEST
0xa4 PUSH2 0xab
0xa7 PUSH2 0x18d
0xaa JUMP
---
0xa3: JUMPDEST 
0xa4: V46 = 0xab
0xa7: V47 = 0x18d
0xaa: JUMP 0x18d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xab]
Exit stack: [V10, 0xab]

================================

Block 0xab
[0xab:0xac]
---
Predecessors: [0x18e, 0x261, 0x2b4, 0x43a]
Successors: []
---
0xab JUMPDEST
0xac STOP
---
0xab: JUMPDEST 
0xac: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xad
[0xad:0xb3]
---
Predecessors: [0x49]
Successors: [0xb4, 0xb5]
---
0xad JUMPDEST
0xae CALLVALUE
0xaf ISZERO
0xb0 PUSH2 0xb5
0xb3 JUMPI
---
0xad: JUMPDEST 
0xae: V48 = CALLVALUE
0xaf: V49 = ISZERO V48
0xb0: V50 = 0xb5
0xb3: JUMPI 0xb5 V49
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xb4
[0xb4:0xb4]
---
Predecessors: [0xad]
Successors: []
---
0xb4 INVALID
---
0xb4: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xb5
[0xb5:0x102]
---
Predecessors: [0xad]
Successors: [0x190]
---
0xb5 JUMPDEST
0xb6 PUSH2 0xab
0xb9 PUSH1 0x4
0xbb DUP1
0xbc DUP1
0xbd CALLDATALOAD
0xbe SWAP1
0xbf PUSH1 0x20
0xc1 ADD
0xc2 SWAP1
0xc3 DUP3
0xc4 ADD
0xc5 DUP1
0xc6 CALLDATALOAD
0xc7 SWAP1
0xc8 PUSH1 0x20
0xca ADD
0xcb SWAP1
0xcc DUP1
0xcd DUP1
0xce PUSH1 0x1f
0xd0 ADD
0xd1 PUSH1 0x20
0xd3 DUP1
0xd4 SWAP2
0xd5 DIV
0xd6 MUL
0xd7 PUSH1 0x20
0xd9 ADD
0xda PUSH1 0x40
0xdc MLOAD
0xdd SWAP1
0xde DUP2
0xdf ADD
0xe0 PUSH1 0x40
0xe2 MSTORE
0xe3 DUP1
0xe4 SWAP4
0xe5 SWAP3
0xe6 SWAP2
0xe7 SWAP1
0xe8 DUP2
0xe9 DUP2
0xea MSTORE
0xeb PUSH1 0x20
0xed ADD
0xee DUP4
0xef DUP4
0xf0 DUP1
0xf1 DUP3
0xf2 DUP5
0xf3 CALLDATACOPY
0xf4 POP
0xf5 SWAP5
0xf6 SWAP7
0xf7 POP
0xf8 PUSH2 0x190
0xfb SWAP6
0xfc POP
0xfd POP
0xfe POP
0xff POP
0x100 POP
0x101 POP
0x102 JUMP
---
0xb5: JUMPDEST 
0xb6: V51 = 0xab
0xb9: V52 = 0x4
0xbd: V53 = CALLDATALOAD 0x4
0xbf: V54 = 0x20
0xc1: V55 = ADD 0x20 0x4
0xc4: V56 = ADD 0x4 V53
0xc6: V57 = CALLDATALOAD V56
0xc8: V58 = 0x20
0xca: V59 = ADD 0x20 V56
0xce: V60 = 0x1f
0xd0: V61 = ADD 0x1f V57
0xd1: V62 = 0x20
0xd5: V63 = DIV V61 0x20
0xd6: V64 = MUL V63 0x20
0xd7: V65 = 0x20
0xd9: V66 = ADD 0x20 V64
0xda: V67 = 0x40
0xdc: V68 = M[0x40]
0xdf: V69 = ADD V68 V66
0xe0: V70 = 0x40
0xe2: M[0x40] = V69
0xea: M[V68] = V57
0xeb: V71 = 0x20
0xed: V72 = ADD 0x20 V68
0xf3: CALLDATACOPY V72 V59 V57
0xf8: V73 = 0x190
0x102: JUMP 0x190
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xab, V68]
Exit stack: [V10, 0xab, V68]

================================

Block 0x103
[0x103:0x104]
---
Predecessors: []
Successors: []
---
0x103 JUMPDEST
0x104 STOP
---
0x103: JUMPDEST 
0x104: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x105
[0x105:0x10f]
---
Predecessors: [0x54]
Successors: [0x266]
---
0x105 JUMPDEST
0x106 PUSH2 0xab
0x109 PUSH1 0x4
0x10b CALLDATALOAD
0x10c PUSH2 0x266
0x10f JUMP
---
0x105: JUMPDEST 
0x106: V74 = 0xab
0x109: V75 = 0x4
0x10b: V76 = CALLDATALOAD 0x4
0x10c: V77 = 0x266
0x10f: JUMP 0x266
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xab, V76]
Exit stack: [V10, 0xab, V76]

================================

Block 0x110
[0x110:0x111]
---
Predecessors: []
Successors: []
---
0x110 JUMPDEST
0x111 STOP
---
0x110: JUMPDEST 
0x111: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x112
[0x112:0x118]
---
Predecessors: [0x5f]
Successors: [0x119, 0x11a]
---
0x112 JUMPDEST
0x113 CALLVALUE
0x114 ISZERO
0x115 PUSH2 0x11a
0x118 JUMPI
---
0x112: JUMPDEST 
0x113: V78 = CALLVALUE
0x114: V79 = ISZERO V78
0x115: V80 = 0x11a
0x118: JUMPI 0x11a V79
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x119
[0x119:0x119]
---
Predecessors: [0x112]
Successors: []
---
0x119 INVALID
---
0x119: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x11a
[0x11a:0x121]
---
Predecessors: [0x112]
Successors: [0x2b7]
---
0x11a JUMPDEST
0x11b PUSH2 0xab
0x11e PUSH2 0x2b7
0x121 JUMP
---
0x11a: JUMPDEST 
0x11b: V81 = 0xab
0x11e: V82 = 0x2b7
0x121: JUMP 0x2b7
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xab]
Exit stack: [V10, 0xab]

================================

Block 0x122
[0x122:0x123]
---
Predecessors: []
Successors: []
---
0x122 JUMPDEST
0x123 STOP
---
0x122: JUMPDEST 
0x123: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x124
[0x124:0x12a]
---
Predecessors: [0x6a]
Successors: [0x12b, 0x12c]
---
0x124 JUMPDEST
0x125 CALLVALUE
0x126 ISZERO
0x127 PUSH2 0x12c
0x12a JUMPI
---
0x124: JUMPDEST 
0x125: V83 = CALLVALUE
0x126: V84 = ISZERO V83
0x127: V85 = 0x12c
0x12a: JUMPI 0x12c V84
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x12b
[0x12b:0x12b]
---
Predecessors: [0x124]
Successors: []
---
0x12b INVALID
---
0x12b: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x12c
[0x12c:0x17b]
---
Predecessors: [0x124]
Successors: [0x2fc]
---
0x12c JUMPDEST
0x12d PUSH2 0xab
0x130 PUSH1 0x4
0x132 DUP1
0x133 DUP1
0x134 CALLDATALOAD
0x135 SWAP1
0x136 PUSH1 0x20
0x138 ADD
0x139 SWAP1
0x13a DUP3
0x13b ADD
0x13c DUP1
0x13d CALLDATALOAD
0x13e SWAP1
0x13f PUSH1 0x20
0x141 ADD
0x142 SWAP1
0x143 DUP1
0x144 DUP1
0x145 PUSH1 0x1f
0x147 ADD
0x148 PUSH1 0x20
0x14a DUP1
0x14b SWAP2
0x14c DIV
0x14d MUL
0x14e PUSH1 0x20
0x150 ADD
0x151 PUSH1 0x40
0x153 MLOAD
0x154 SWAP1
0x155 DUP2
0x156 ADD
0x157 PUSH1 0x40
0x159 MSTORE
0x15a DUP1
0x15b SWAP4
0x15c SWAP3
0x15d SWAP2
0x15e SWAP1
0x15f DUP2
0x160 DUP2
0x161 MSTORE
0x162 PUSH1 0x20
0x164 ADD
0x165 DUP4
0x166 DUP4
0x167 DUP1
0x168 DUP3
0x169 DUP5
0x16a CALLDATACOPY
0x16b POP
0x16c SWAP5
0x16d SWAP7
0x16e POP
0x16f POP
0x170 SWAP4
0x171 CALLDATALOAD
0x172 SWAP4
0x173 POP
0x174 PUSH2 0x2fc
0x177 SWAP3
0x178 POP
0x179 POP
0x17a POP
0x17b JUMP
---
0x12c: JUMPDEST 
0x12d: V86 = 0xab
0x130: V87 = 0x4
0x134: V88 = CALLDATALOAD 0x4
0x136: V89 = 0x20
0x138: V90 = ADD 0x20 0x4
0x13b: V91 = ADD 0x4 V88
0x13d: V92 = CALLDATALOAD V91
0x13f: V93 = 0x20
0x141: V94 = ADD 0x20 V91
0x145: V95 = 0x1f
0x147: V96 = ADD 0x1f V92
0x148: V97 = 0x20
0x14c: V98 = DIV V96 0x20
0x14d: V99 = MUL V98 0x20
0x14e: V100 = 0x20
0x150: V101 = ADD 0x20 V99
0x151: V102 = 0x40
0x153: V103 = M[0x40]
0x156: V104 = ADD V103 V101
0x157: V105 = 0x40
0x159: M[0x40] = V104
0x161: M[V103] = V92
0x162: V106 = 0x20
0x164: V107 = ADD 0x20 V103
0x16a: CALLDATACOPY V107 V94 V92
0x171: V108 = CALLDATALOAD 0x24
0x174: V109 = 0x2fc
0x17b: JUMP 0x2fc
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xab, V103, V108]
Exit stack: [V10, 0xab, V103, V108]

================================

Block 0x17c
[0x17c:0x17d]
---
Predecessors: []
Successors: []
---
0x17c JUMPDEST
0x17d STOP
---
0x17c: JUMPDEST 
0x17d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x17e
[0x17e:0x18c]
---
Predecessors: [0x7f]
Successors: [0x87]
---
0x17e JUMPDEST
0x17f PUSH1 0x0
0x181 SLOAD
0x182 PUSH1 0x1
0x184 PUSH1 0xa0
0x186 PUSH1 0x2
0x188 EXP
0x189 SUB
0x18a AND
0x18b DUP2
0x18c JUMP
---
0x17e: JUMPDEST 
0x17f: V110 = 0x0
0x181: V111 = S[0x0]
0x182: V112 = 0x1
0x184: V113 = 0xa0
0x186: V114 = 0x2
0x188: V115 = EXP 0x2 0xa0
0x189: V116 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18a: V117 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x18c: JUMP 0x87
---
Entry stack: [V10, 0x87]
Stack pops: 1
Stack additions: [S0, V117]
Exit stack: [V10, 0x87, V117]

================================

Block 0x18d
[0x18d:0x18d]
---
Predecessors: [0xa3, 0x2d3]
Successors: [0x18e]
---
0x18d JUMPDEST
---
0x18d: JUMPDEST 
---
Entry stack: [V10, 0xab]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xab]

================================

Block 0x18e
[0x18e:0x18f]
---
Predecessors: [0x18d]
Successors: [0xab]
---
0x18e JUMPDEST
0x18f JUMP
---
0x18e: JUMPDEST 
0x18f: JUMP 0xab
---
Entry stack: [V10, 0xab]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x190
[0x190:0x1a9]
---
Predecessors: [0xb5]
Successors: [0x1aa, 0x1af]
---
0x190 JUMPDEST
0x191 PUSH1 0x0
0x193 DUP1
0x194 SLOAD
0x195 DUP2
0x196 SWAP1
0x197 CALLER
0x198 PUSH1 0x1
0x19a PUSH1 0xa0
0x19c PUSH1 0x2
0x19e EXP
0x19f SUB
0x1a0 SWAP1
0x1a1 DUP2
0x1a2 AND
0x1a3 SWAP2
0x1a4 AND
0x1a5 EQ
0x1a6 PUSH2 0x1af
0x1a9 JUMPI
---
0x190: JUMPDEST 
0x191: V118 = 0x0
0x194: V119 = S[0x0]
0x197: V120 = CALLER
0x198: V121 = 0x1
0x19a: V122 = 0xa0
0x19c: V123 = 0x2
0x19e: V124 = EXP 0x2 0xa0
0x19f: V125 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a2: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V120
0x1a4: V127 = AND V119 0xffffffffffffffffffffffffffffffffffffffff
0x1a5: V128 = EQ V127 V126
0x1a6: V129 = 0x1af
0x1a9: JUMPI 0x1af V128
---
Entry stack: [V10, 0xab, V68]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V10, 0xab, V68, 0x0, 0x0]

================================

Block 0x1aa
[0x1aa:0x1ae]
---
Predecessors: [0x190]
Successors: []
---
0x1aa PUSH1 0x0
0x1ac PUSH1 0x0
0x1ae REVERT
---
0x1aa: V130 = 0x0
0x1ac: V131 = 0x0
0x1ae: REVERT 0x0 0x0
---
Entry stack: [V10, 0xab, V68, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xab, V68, 0x0, 0x0]

================================

Block 0x1af
[0x1af:0x1c5]
---
Predecessors: [0x190]
Successors: [0x1c6, 0x1cb]
---
0x1af JUMPDEST
0x1b0 PUSH1 0x0
0x1b2 SLOAD
0x1b3 CALLER
0x1b4 PUSH1 0x1
0x1b6 PUSH1 0xa0
0x1b8 PUSH1 0x2
0x1ba EXP
0x1bb SUB
0x1bc SWAP1
0x1bd DUP2
0x1be AND
0x1bf SWAP2
0x1c0 AND
0x1c1 EQ
0x1c2 PUSH2 0x1cb
0x1c5 JUMPI
---
0x1af: JUMPDEST 
0x1b0: V132 = 0x0
0x1b2: V133 = S[0x0]
0x1b3: V134 = CALLER
0x1b4: V135 = 0x1
0x1b6: V136 = 0xa0
0x1b8: V137 = 0x2
0x1ba: V138 = EXP 0x2 0xa0
0x1bb: V139 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1be: V140 = AND 0xffffffffffffffffffffffffffffffffffffffff V134
0x1c0: V141 = AND V133 0xffffffffffffffffffffffffffffffffffffffff
0x1c1: V142 = EQ V141 V140
0x1c2: V143 = 0x1cb
0x1c5: JUMPI 0x1cb V142
---
Entry stack: [V10, 0xab, V68, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xab, V68, 0x0, 0x0]

================================

Block 0x1c6
[0x1c6:0x1ca]
---
Predecessors: [0x1af]
Successors: []
---
0x1c6 PUSH1 0x0
0x1c8 PUSH1 0x0
0x1ca REVERT
---
0x1c6: V144 = 0x0
0x1c8: V145 = 0x0
0x1ca: REVERT 0x0 0x0
---
Entry stack: [V10, 0xab, V68, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xab, V68, 0x0, 0x0]

================================

Block 0x1cb
[0x1cb:0x1dd]
---
Predecessors: [0x1af]
Successors: [0x1de]
---
0x1cb JUMPDEST
0x1cc PUSH1 0x1
0x1ce DUP4
0x1cf PUSH1 0x40
0x1d1 MLOAD
0x1d2 DUP1
0x1d3 DUP3
0x1d4 DUP1
0x1d5 MLOAD
0x1d6 SWAP1
0x1d7 PUSH1 0x20
0x1d9 ADD
0x1da SWAP1
0x1db DUP1
0x1dc DUP4
0x1dd DUP4
---
0x1cb: JUMPDEST 
0x1cc: V146 = 0x1
0x1cf: V147 = 0x40
0x1d1: V148 = M[0x40]
0x1d5: V149 = M[V68]
0x1d7: V150 = 0x20
0x1d9: V151 = ADD 0x20 V68
---
Entry stack: [V10, 0xab, V68, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x1, S2, V148, V148, V151, V149, V149, V148, V151]
Exit stack: [V10, 0xab, V68, 0x0, 0x0, 0x1, V68, V148, V148, V151, V149, V149, V148, V151]

================================

Block 0x1de
[0x1de:0x1e6]
---
Predecessors: [0x1cb, 0x1e7]
Successors: [0x1e7, 0x1fd]
---
0x1de JUMPDEST
0x1df PUSH1 0x20
0x1e1 DUP4
0x1e2 LT
0x1e3 PUSH2 0x1fd
0x1e6 JUMPI
---
0x1de: JUMPDEST 
0x1df: V152 = 0x20
0x1e2: V153 = LT S2 0x20
0x1e3: V154 = 0x1fd
0x1e6: JUMPI 0x1fd V153
---
Entry stack: [V10, 0xab, V68, 0x0, 0x0, 0x1, V68, V148, V148, V151, V149, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0xab, V68, 0x0, 0x0, 0x1, V68, V148, V148, V151, V149, S2, S1, S0]

================================

Block 0x1e7
[0x1e7:0x1fc]
---
Predecessors: [0x1de]
Successors: [0x1de]
---
0x1e7 DUP1
0x1e8 MLOAD
0x1e9 DUP3
0x1ea MSTORE
0x1eb PUSH1 0x1f
0x1ed NOT
0x1ee SWAP1
0x1ef SWAP3
0x1f0 ADD
0x1f1 SWAP2
0x1f2 PUSH1 0x20
0x1f4 SWAP2
0x1f5 DUP3
0x1f6 ADD
0x1f7 SWAP2
0x1f8 ADD
0x1f9 PUSH2 0x1de
0x1fc JUMP
---
0x1e8: V155 = M[S0]
0x1ea: M[S1] = V155
0x1eb: V156 = 0x1f
0x1ed: V157 = NOT 0x1f
0x1f0: V158 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x1f2: V159 = 0x20
0x1f6: V160 = ADD 0x20 S1
0x1f8: V161 = ADD 0x20 S0
0x1f9: V162 = 0x1de
0x1fc: JUMP 0x1de
---
Entry stack: [V10, 0xab, V68, 0x0, 0x0, 0x1, V68, V148, V148, V151, V149, S2, S1, S0]
Stack pops: 3
Stack additions: [V158, V160, V161]
Exit stack: [V10, 0xab, V68, 0x0, 0x0, 0x1, V68, V148, V148, V151, V149, V158, V160, V161]

================================

Block 0x1fd
[0x1fd:0x25d]
---
Predecessors: [0x1de]
Successors: [0x25e, 0x25f]
---
0x1fd JUMPDEST
0x1fe MLOAD
0x1ff DUP2
0x200 MLOAD
0x201 PUSH1 0x20
0x203 SWAP4
0x204 DUP5
0x205 SUB
0x206 PUSH2 0x100
0x209 EXP
0x20a PUSH1 0x0
0x20c NOT
0x20d ADD
0x20e DUP1
0x20f NOT
0x210 SWAP1
0x211 SWAP3
0x212 AND
0x213 SWAP2
0x214 AND
0x215 OR
0x216 SWAP1
0x217 MSTORE
0x218 SWAP3
0x219 ADD
0x21a SWAP5
0x21b DUP6
0x21c MSTORE
0x21d POP
0x21e PUSH1 0x40
0x220 MLOAD
0x221 SWAP4
0x222 DUP5
0x223 SWAP1
0x224 SUB
0x225 ADD
0x226 DUP4
0x227 SHA3
0x228 DUP1
0x229 SLOAD
0x22a PUSH1 0x1
0x22c DUP3
0x22d ADD
0x22e SLOAD
0x22f SWAP2
0x230 SWAP7
0x231 POP
0x232 PUSH1 0x1
0x234 PUSH1 0xa0
0x236 PUSH1 0x2
0x238 EXP
0x239 SUB
0x23a AND
0x23b SWAP5
0x23c POP
0x23d DUP5
0x23e SWAP4
0x23f PUSH2 0x8fc
0x242 DUP3
0x243 ISZERO
0x244 MUL
0x245 SWAP4
0x246 POP
0x247 SWAP1
0x248 SWAP2
0x249 POP
0x24a PUSH1 0x0
0x24c DUP2
0x24d DUP2
0x24e DUP2
0x24f DUP6
0x250 DUP9
0x251 DUP9
0x252 CALL
0x253 SWAP4
0x254 POP
0x255 POP
0x256 POP
0x257 POP
0x258 ISZERO
0x259 ISZERO
0x25a PUSH2 0x25f
0x25d JUMPI
---
0x1fd: JUMPDEST 
0x1fe: V163 = M[S0]
0x200: V164 = M[S1]
0x201: V165 = 0x20
0x205: V166 = SUB 0x20 S2
0x206: V167 = 0x100
0x209: V168 = EXP 0x100 V166
0x20a: V169 = 0x0
0x20c: V170 = NOT 0x0
0x20d: V171 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V168
0x20f: V172 = NOT V171
0x212: V173 = AND V163 V172
0x214: V174 = AND V171 V164
0x215: V175 = OR V174 V173
0x217: M[S1] = V175
0x219: V176 = ADD V148 V149
0x21c: M[V176] = 0x1
0x21e: V177 = 0x40
0x220: V178 = M[0x40]
0x224: V179 = SUB V176 V178
0x225: V180 = ADD V179 0x20
0x227: V181 = SHA3 V178 V180
0x229: V182 = S[V181]
0x22a: V183 = 0x1
0x22d: V184 = ADD V181 0x1
0x22e: V185 = S[V184]
0x232: V186 = 0x1
0x234: V187 = 0xa0
0x236: V188 = 0x2
0x238: V189 = EXP 0x2 0xa0
0x239: V190 = SUB 0x10000000000000000000000000000000000000000 0x1
0x23a: V191 = AND 0xffffffffffffffffffffffffffffffffffffffff V182
0x23f: V192 = 0x8fc
0x243: V193 = ISZERO V185
0x244: V194 = MUL V193 0x8fc
0x24a: V195 = 0x0
0x252: V196 = CALL V194 V191 V185 V178 0x0 V178 0x0
0x258: V197 = ISZERO V196
0x259: V198 = ISZERO V197
0x25a: V199 = 0x25f
0x25d: JUMPI 0x25f V198
---
Entry stack: [V10, 0xab, V68, 0x0, 0x0, 0x1, V68, V148, V148, V151, V149, S2, S1, S0]
Stack pops: 11
Stack additions: [V181, V191]
Exit stack: [V10, 0xab, V68, V181, V191]

================================

Block 0x25e
[0x25e:0x25e]
---
Predecessors: [0x1fd]
Successors: []
---
0x25e INVALID
---
0x25e: INVALID 
---
Entry stack: [V10, 0xab, V68, V181, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xab, V68, V181, V191]

================================

Block 0x25f
[0x25f:0x25f]
---
Predecessors: [0x1fd]
Successors: [0x260]
---
0x25f JUMPDEST
---
0x25f: JUMPDEST 
---
Entry stack: [V10, 0xab, V68, V181, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xab, V68, V181, V191]

================================

Block 0x260
[0x260:0x260]
---
Predecessors: [0x25f]
Successors: [0x261]
---
0x260 JUMPDEST
---
0x260: JUMPDEST 
---
Entry stack: [V10, 0xab, V68, V181, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xab, V68, V181, V191]

================================

Block 0x261
[0x261:0x265]
---
Predecessors: [0x260]
Successors: [0xab]
---
0x261 JUMPDEST
0x262 POP
0x263 POP
0x264 POP
0x265 JUMP
---
0x261: JUMPDEST 
0x265: JUMP 0xab
---
Entry stack: [V10, 0xab, V68, V181, V191]
Stack pops: 4
Stack additions: []
Exit stack: [V10]

================================

Block 0x266
[0x266:0x27c]
---
Predecessors: [0x105]
Successors: [0x27d, 0x282]
---
0x266 JUMPDEST
0x267 PUSH1 0x0
0x269 SLOAD
0x26a CALLER
0x26b PUSH1 0x1
0x26d PUSH1 0xa0
0x26f PUSH1 0x2
0x271 EXP
0x272 SUB
0x273 SWAP1
0x274 DUP2
0x275 AND
0x276 SWAP2
0x277 AND
0x278 EQ
0x279 PUSH2 0x282
0x27c JUMPI
---
0x266: JUMPDEST 
0x267: V200 = 0x0
0x269: V201 = S[0x0]
0x26a: V202 = CALLER
0x26b: V203 = 0x1
0x26d: V204 = 0xa0
0x26f: V205 = 0x2
0x271: V206 = EXP 0x2 0xa0
0x272: V207 = SUB 0x10000000000000000000000000000000000000000 0x1
0x275: V208 = AND 0xffffffffffffffffffffffffffffffffffffffff V202
0x277: V209 = AND V201 0xffffffffffffffffffffffffffffffffffffffff
0x278: V210 = EQ V209 V208
0x279: V211 = 0x282
0x27c: JUMPI 0x282 V210
---
Entry stack: [V10, 0xab, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xab, V76]

================================

Block 0x27d
[0x27d:0x281]
---
Predecessors: [0x266]
Successors: []
---
0x27d PUSH1 0x0
0x27f PUSH1 0x0
0x281 REVERT
---
0x27d: V212 = 0x0
0x27f: V213 = 0x0
0x281: REVERT 0x0 0x0
---
Entry stack: [V10, 0xab, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xab, V76]

================================

Block 0x282
[0x282:0x2b0]
---
Predecessors: [0x266]
Successors: [0x2b1, 0x2b2]
---
0x282 JUMPDEST
0x283 PUSH1 0x0
0x285 DUP1
0x286 SLOAD
0x287 PUSH1 0x40
0x289 MLOAD
0x28a PUSH1 0x1
0x28c PUSH1 0xa0
0x28e PUSH1 0x2
0x290 EXP
0x291 SUB
0x292 SWAP1
0x293 SWAP2
0x294 AND
0x295 SWAP2
0x296 DUP4
0x297 ISZERO
0x298 PUSH2 0x8fc
0x29b MUL
0x29c SWAP2
0x29d DUP5
0x29e SWAP2
0x29f DUP2
0x2a0 DUP2
0x2a1 DUP2
0x2a2 DUP6
0x2a3 DUP9
0x2a4 DUP9
0x2a5 CALL
0x2a6 SWAP4
0x2a7 POP
0x2a8 POP
0x2a9 POP
0x2aa POP
0x2ab ISZERO
0x2ac ISZERO
0x2ad PUSH2 0x2b2
0x2b0 JUMPI
---
0x282: JUMPDEST 
0x283: V214 = 0x0
0x286: V215 = S[0x0]
0x287: V216 = 0x40
0x289: V217 = M[0x40]
0x28a: V218 = 0x1
0x28c: V219 = 0xa0
0x28e: V220 = 0x2
0x290: V221 = EXP 0x2 0xa0
0x291: V222 = SUB 0x10000000000000000000000000000000000000000 0x1
0x294: V223 = AND V215 0xffffffffffffffffffffffffffffffffffffffff
0x297: V224 = ISZERO V76
0x298: V225 = 0x8fc
0x29b: V226 = MUL 0x8fc V224
0x2a5: V227 = CALL V226 V223 V76 V217 0x0 V217 0x0
0x2ab: V228 = ISZERO V227
0x2ac: V229 = ISZERO V228
0x2ad: V230 = 0x2b2
0x2b0: JUMPI 0x2b2 V229
---
Entry stack: [V10, 0xab, V76]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0xab, V76]

================================

Block 0x2b1
[0x2b1:0x2b1]
---
Predecessors: [0x282]
Successors: []
---
0x2b1 INVALID
---
0x2b1: INVALID 
---
Entry stack: [V10, 0xab, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xab, V76]

================================

Block 0x2b2
[0x2b2:0x2b2]
---
Predecessors: [0x282]
Successors: [0x2b3]
---
0x2b2 JUMPDEST
---
0x2b2: JUMPDEST 
---
Entry stack: [V10, 0xab, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xab, V76]

================================

Block 0x2b3
[0x2b3:0x2b3]
---
Predecessors: [0x2b2]
Successors: [0x2b4]
---
0x2b3 JUMPDEST
---
0x2b3: JUMPDEST 
---
Entry stack: [V10, 0xab, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xab, V76]

================================

Block 0x2b4
[0x2b4:0x2b6]
---
Predecessors: [0x2b3]
Successors: [0xab]
---
0x2b4 JUMPDEST
0x2b5 POP
0x2b6 JUMP
---
0x2b4: JUMPDEST 
0x2b6: JUMP 0xab
---
Entry stack: [V10, 0xab, V76]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x2b7
[0x2b7:0x2cd]
---
Predecessors: [0x11a]
Successors: [0x2ce, 0x2d3]
---
0x2b7 JUMPDEST
0x2b8 PUSH1 0x0
0x2ba SLOAD
0x2bb CALLER
0x2bc PUSH1 0x1
0x2be PUSH1 0xa0
0x2c0 PUSH1 0x2
0x2c2 EXP
0x2c3 SUB
0x2c4 SWAP1
0x2c5 DUP2
0x2c6 AND
0x2c7 SWAP2
0x2c8 AND
0x2c9 EQ
0x2ca PUSH2 0x2d3
0x2cd JUMPI
---
0x2b7: JUMPDEST 
0x2b8: V231 = 0x0
0x2ba: V232 = S[0x0]
0x2bb: V233 = CALLER
0x2bc: V234 = 0x1
0x2be: V235 = 0xa0
0x2c0: V236 = 0x2
0x2c2: V237 = EXP 0x2 0xa0
0x2c3: V238 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c6: V239 = AND 0xffffffffffffffffffffffffffffffffffffffff V233
0x2c8: V240 = AND V232 0xffffffffffffffffffffffffffffffffffffffff
0x2c9: V241 = EQ V240 V239
0x2ca: V242 = 0x2d3
0x2cd: JUMPI 0x2d3 V241
---
Entry stack: [V10, 0xab]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xab]

================================

Block 0x2ce
[0x2ce:0x2d2]
---
Predecessors: [0x2b7]
Successors: []
---
0x2ce PUSH1 0x0
0x2d0 PUSH1 0x0
0x2d2 REVERT
---
0x2ce: V243 = 0x0
0x2d0: V244 = 0x0
0x2d2: REVERT 0x0 0x0
---
Entry stack: [V10, 0xab]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xab]

================================

Block 0x2d3
[0x2d3:0x2ea]
---
Predecessors: [0x2b7]
Successors: [0x18d, 0x2eb]
---
0x2d3 JUMPDEST
0x2d4 PUSH1 0x0
0x2d6 SLOAD
0x2d7 CALLER
0x2d8 PUSH1 0x1
0x2da PUSH1 0xa0
0x2dc PUSH1 0x2
0x2de EXP
0x2df SUB
0x2e0 SWAP1
0x2e1 DUP2
0x2e2 AND
0x2e3 SWAP2
0x2e4 AND
0x2e5 EQ
0x2e6 ISZERO
0x2e7 PUSH2 0x18d
0x2ea JUMPI
---
0x2d3: JUMPDEST 
0x2d4: V245 = 0x0
0x2d6: V246 = S[0x0]
0x2d7: V247 = CALLER
0x2d8: V248 = 0x1
0x2da: V249 = 0xa0
0x2dc: V250 = 0x2
0x2de: V251 = EXP 0x2 0xa0
0x2df: V252 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e2: V253 = AND 0xffffffffffffffffffffffffffffffffffffffff V247
0x2e4: V254 = AND V246 0xffffffffffffffffffffffffffffffffffffffff
0x2e5: V255 = EQ V254 V253
0x2e6: V256 = ISZERO V255
0x2e7: V257 = 0x18d
0x2ea: JUMPI 0x18d V256
---
Entry stack: [V10, 0xab]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xab]

================================

Block 0x2eb
[0x2eb:0x2f7]
---
Predecessors: [0x2d3]
Successors: []
---
0x2eb PUSH1 0x0
0x2ed SLOAD
0x2ee PUSH1 0x1
0x2f0 PUSH1 0xa0
0x2f2 PUSH1 0x2
0x2f4 EXP
0x2f5 SUB
0x2f6 AND
0x2f7 SELFDESTRUCT
---
0x2eb: V258 = 0x0
0x2ed: V259 = S[0x0]
0x2ee: V260 = 0x1
0x2f0: V261 = 0xa0
0x2f2: V262 = 0x2
0x2f4: V263 = EXP 0x2 0xa0
0x2f5: V264 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f6: V265 = AND 0xffffffffffffffffffffffffffffffffffffffff V259
0x2f7: SELFDESTRUCT V265
---
Entry stack: [V10, 0xab]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xab]

================================

Block 0x2f8
[0x2f8:0x2f8]
---
Predecessors: []
Successors: [0x2f9]
---
0x2f8 JUMPDEST
---
0x2f8: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2f9
[0x2f9:0x2f9]
---
Predecessors: [0x2f8]
Successors: [0x2fa]
---
0x2f9 JUMPDEST
---
0x2f9: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2fa
[0x2fa:0x2fb]
---
Predecessors: [0x2f9]
Successors: []
Has unresolved jump.
---
0x2fa JUMPDEST
0x2fb JUMP
---
0x2fa: JUMPDEST 
0x2fb: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2fc
[0x2fc:0x310]
---
Predecessors: [0x12c]
Successors: [0x311]
---
0x2fc JUMPDEST
0x2fd PUSH1 0x0
0x2ff PUSH1 0x1
0x301 DUP4
0x302 PUSH1 0x40
0x304 MLOAD
0x305 DUP1
0x306 DUP3
0x307 DUP1
0x308 MLOAD
0x309 SWAP1
0x30a PUSH1 0x20
0x30c ADD
0x30d SWAP1
0x30e DUP1
0x30f DUP4
0x310 DUP4
---
0x2fc: JUMPDEST 
0x2fd: V266 = 0x0
0x2ff: V267 = 0x1
0x302: V268 = 0x40
0x304: V269 = M[0x40]
0x308: V270 = M[V103]
0x30a: V271 = 0x20
0x30c: V272 = ADD 0x20 V103
---
Entry stack: [V10, 0xab, V103, V108]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x1, S1, V269, V269, V272, V270, V270, V269, V272]
Exit stack: [V10, 0xab, V103, V108, 0x0, 0x1, V103, V269, V269, V272, V270, V270, V269, V272]

================================

Block 0x311
[0x311:0x319]
---
Predecessors: [0x2fc, 0x31a]
Successors: [0x31a, 0x330]
---
0x311 JUMPDEST
0x312 PUSH1 0x20
0x314 DUP4
0x315 LT
0x316 PUSH2 0x330
0x319 JUMPI
---
0x311: JUMPDEST 
0x312: V273 = 0x20
0x315: V274 = LT S2 0x20
0x316: V275 = 0x330
0x319: JUMPI 0x330 V274
---
Entry stack: [V10, 0xab, V103, V108, 0x0, 0x1, V103, V269, V269, V272, V270, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0xab, V103, V108, 0x0, 0x1, V103, V269, V269, V272, V270, S2, S1, S0]

================================

Block 0x31a
[0x31a:0x32f]
---
Predecessors: [0x311]
Successors: [0x311]
---
0x31a DUP1
0x31b MLOAD
0x31c DUP3
0x31d MSTORE
0x31e PUSH1 0x1f
0x320 NOT
0x321 SWAP1
0x322 SWAP3
0x323 ADD
0x324 SWAP2
0x325 PUSH1 0x20
0x327 SWAP2
0x328 DUP3
0x329 ADD
0x32a SWAP2
0x32b ADD
0x32c PUSH2 0x311
0x32f JUMP
---
0x31b: V276 = M[S0]
0x31d: M[S1] = V276
0x31e: V277 = 0x1f
0x320: V278 = NOT 0x1f
0x323: V279 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x325: V280 = 0x20
0x329: V281 = ADD 0x20 S1
0x32b: V282 = ADD 0x20 S0
0x32c: V283 = 0x311
0x32f: JUMP 0x311
---
Entry stack: [V10, 0xab, V103, V108, 0x0, 0x1, V103, V269, V269, V272, V270, S2, S1, S0]
Stack pops: 3
Stack additions: [V279, V281, V282]
Exit stack: [V10, 0xab, V103, V108, 0x0, 0x1, V103, V269, V269, V272, V270, V279, V281, V282]

================================

Block 0x330
[0x330:0x3de]
---
Predecessors: [0x311]
Successors: [0x3df, 0x3ff]
---
0x330 JUMPDEST
0x331 MLOAD
0x332 DUP2
0x333 MLOAD
0x334 PUSH1 0x20
0x336 SWAP4
0x337 DUP5
0x338 SUB
0x339 PUSH2 0x100
0x33c EXP
0x33d PUSH1 0x0
0x33f NOT
0x340 ADD
0x341 DUP1
0x342 NOT
0x343 SWAP1
0x344 SWAP3
0x345 AND
0x346 SWAP2
0x347 AND
0x348 OR
0x349 SWAP1
0x34a MSTORE
0x34b SWAP3
0x34c ADD
0x34d SWAP5
0x34e DUP6
0x34f MSTORE
0x350 POP
0x351 PUSH1 0x40
0x353 DUP1
0x354 MLOAD
0x355 SWAP5
0x356 DUP6
0x357 SWAP1
0x358 SUB
0x359 DUP3
0x35a ADD
0x35b DUP6
0x35c SHA3
0x35d DUP1
0x35e SLOAD
0x35f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x374 NOT
0x375 AND
0x376 CALLER
0x377 PUSH1 0x1
0x379 PUSH1 0xa0
0x37b PUSH1 0x2
0x37d EXP
0x37e SUB
0x37f DUP2
0x380 AND
0x381 SWAP2
0x382 DUP3
0x383 OR
0x384 DUP4
0x385 SSTORE
0x386 PUSH1 0x1
0x388 DUP4
0x389 ADD
0x38a DUP11
0x38b SWAP1
0x38c SSTORE
0x38d SWAP1
0x38e DUP8
0x38f MSTORE
0x390 DUP7
0x391 DUP5
0x392 ADD
0x393 DUP4
0x394 DUP2
0x395 MSTORE
0x396 DUP11
0x397 MLOAD
0x398 SWAP4
0x399 DUP9
0x39a ADD
0x39b SWAP4
0x39c SWAP1
0x39d SWAP4
0x39e MSTORE
0x39f DUP10
0x3a0 MLOAD
0x3a1 SWAP2
0x3a2 SWAP8
0x3a3 POP
0x3a4 PUSH32 0x7b9ef5b0dc3308bf0d328fa6b77f2b422a6e7ac776fa470f33e31569a3a209ef
0x3c5 SWAP7
0x3c6 SWAP1
0x3c7 SWAP6
0x3c8 POP
0x3c9 DUP10
0x3ca SWAP5
0x3cb POP
0x3cc SWAP3
0x3cd PUSH1 0x60
0x3cf DUP5
0x3d0 ADD
0x3d1 SWAP2
0x3d2 SWAP1
0x3d3 DUP6
0x3d4 ADD
0x3d5 SWAP1
0x3d6 DUP1
0x3d7 DUP4
0x3d8 DUP4
0x3d9 DUP3
0x3da ISZERO
0x3db PUSH2 0x3ff
0x3de JUMPI
---
0x330: JUMPDEST 
0x331: V284 = M[S0]
0x333: V285 = M[S1]
0x334: V286 = 0x20
0x338: V287 = SUB 0x20 S2
0x339: V288 = 0x100
0x33c: V289 = EXP 0x100 V287
0x33d: V290 = 0x0
0x33f: V291 = NOT 0x0
0x340: V292 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V289
0x342: V293 = NOT V292
0x345: V294 = AND V284 V293
0x347: V295 = AND V292 V285
0x348: V296 = OR V295 V294
0x34a: M[S1] = V296
0x34c: V297 = ADD V269 V270
0x34f: M[V297] = 0x1
0x351: V298 = 0x40
0x354: V299 = M[0x40]
0x358: V300 = SUB V297 V299
0x35a: V301 = ADD 0x20 V300
0x35c: V302 = SHA3 V299 V301
0x35e: V303 = S[V302]
0x35f: V304 = 0xffffffffffffffffffffffffffffffffffffffff
0x374: V305 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x375: V306 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V303
0x376: V307 = CALLER
0x377: V308 = 0x1
0x379: V309 = 0xa0
0x37b: V310 = 0x2
0x37d: V311 = EXP 0x2 0xa0
0x37e: V312 = SUB 0x10000000000000000000000000000000000000000 0x1
0x380: V313 = AND V307 0xffffffffffffffffffffffffffffffffffffffff
0x383: V314 = OR V313 V306
0x385: S[V302] = V314
0x386: V315 = 0x1
0x389: V316 = ADD V302 0x1
0x38c: S[V316] = V108
0x38f: M[V299] = V313
0x392: V317 = ADD 0x20 V299
0x395: M[V317] = 0x40
0x397: V318 = M[V103]
0x39a: V319 = ADD V299 0x40
0x39e: M[V319] = V318
0x3a0: V320 = M[V103]
0x3a4: V321 = 0x7b9ef5b0dc3308bf0d328fa6b77f2b422a6e7ac776fa470f33e31569a3a209ef
0x3cd: V322 = 0x60
0x3d0: V323 = ADD V299 0x60
0x3d4: V324 = ADD V103 0x20
0x3da: V325 = ISZERO V320
0x3db: V326 = 0x3ff
0x3de: JUMPI 0x3ff V325
---
Entry stack: [V10, 0xab, V103, V108, 0x0, 0x1, V103, V269, V269, V272, V270, S2, S1, S0]
Stack pops: 12
Stack additions: [S11, S10, V302, 0x7b9ef5b0dc3308bf0d328fa6b77f2b422a6e7ac776fa470f33e31569a3a209ef, V307, S11, V299, V317, V323, V324, V320, V320, V323, V324]
Exit stack: [V10, 0xab, V103, V108, V302, 0x7b9ef5b0dc3308bf0d328fa6b77f2b422a6e7ac776fa470f33e31569a3a209ef, V307, V103, V299, V317, V323, V324, V320, V320, V323, V324]

================================

Block 0x3df
[0x3df:0x3ec]
---
Predecessors: [0x330, 0x3ed]
Successors: [0x3ed, 0x3ff]
---
0x3df JUMPDEST
0x3e0 DUP1
0x3e1 MLOAD
0x3e2 DUP3
0x3e3 MSTORE
0x3e4 PUSH1 0x20
0x3e6 DUP4
0x3e7 GT
0x3e8 ISZERO
0x3e9 PUSH2 0x3ff
0x3ec JUMPI
---
0x3df: JUMPDEST 
0x3e1: V327 = M[S0]
0x3e3: M[S1] = V327
0x3e4: V328 = 0x20
0x3e7: V329 = GT S2 0x20
0x3e8: V330 = ISZERO V329
0x3e9: V331 = 0x3ff
0x3ec: JUMPI 0x3ff V330
---
Entry stack: [V10, 0xab, V103, V108, V302, 0x7b9ef5b0dc3308bf0d328fa6b77f2b422a6e7ac776fa470f33e31569a3a209ef, V307, V103, V299, V317, V323, V324, V320, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0xab, V103, V108, V302, 0x7b9ef5b0dc3308bf0d328fa6b77f2b422a6e7ac776fa470f33e31569a3a209ef, V307, V103, V299, V317, V323, V324, V320, S2, S1, S0]

================================

Block 0x3ed
[0x3ed:0x3fe]
---
Predecessors: [0x3df]
Successors: [0x3df]
---
0x3ed PUSH1 0x1f
0x3ef NOT
0x3f0 SWAP1
0x3f1 SWAP3
0x3f2 ADD
0x3f3 SWAP2
0x3f4 PUSH1 0x20
0x3f6 SWAP2
0x3f7 DUP3
0x3f8 ADD
0x3f9 SWAP2
0x3fa ADD
0x3fb PUSH2 0x3df
0x3fe JUMP
---
0x3ed: V332 = 0x1f
0x3ef: V333 = NOT 0x1f
0x3f2: V334 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x3f4: V335 = 0x20
0x3f8: V336 = ADD 0x20 S1
0x3fa: V337 = ADD 0x20 S0
0x3fb: V338 = 0x3df
0x3fe: JUMP 0x3df
---
Entry stack: [V10, 0xab, V103, V108, V302, 0x7b9ef5b0dc3308bf0d328fa6b77f2b422a6e7ac776fa470f33e31569a3a209ef, V307, V103, V299, V317, V323, V324, V320, S2, S1, S0]
Stack pops: 3
Stack additions: [V334, V336, V337]
Exit stack: [V10, 0xab, V103, V108, V302, 0x7b9ef5b0dc3308bf0d328fa6b77f2b422a6e7ac776fa470f33e31569a3a209ef, V307, V103, V299, V317, V323, V324, V320, V334, V336, V337]

================================

Block 0x3ff
[0x3ff:0x411]
---
Predecessors: [0x330, 0x3df]
Successors: [0x412, 0x42b]
---
0x3ff JUMPDEST
0x400 POP
0x401 POP
0x402 POP
0x403 SWAP1
0x404 POP
0x405 SWAP1
0x406 DUP2
0x407 ADD
0x408 SWAP1
0x409 PUSH1 0x1f
0x40b AND
0x40c DUP1
0x40d ISZERO
0x40e PUSH2 0x42b
0x411 JUMPI
---
0x3ff: JUMPDEST 
0x407: V339 = ADD V320 V323
0x409: V340 = 0x1f
0x40b: V341 = AND 0x1f V320
0x40d: V342 = ISZERO V341
0x40e: V343 = 0x42b
0x411: JUMPI 0x42b V342
---
Entry stack: [V10, 0xab, V103, V108, V302, 0x7b9ef5b0dc3308bf0d328fa6b77f2b422a6e7ac776fa470f33e31569a3a209ef, V307, V103, V299, V317, V323, V324, V320, S2, S1, S0]
Stack pops: 6
Stack additions: [V339, V341]
Exit stack: [V10, 0xab, V103, V108, V302, 0x7b9ef5b0dc3308bf0d328fa6b77f2b422a6e7ac776fa470f33e31569a3a209ef, V307, V103, V299, V317, V339, V341]

================================

Block 0x412
[0x412:0x42a]
---
Predecessors: [0x3ff]
Successors: [0x42b]
---
0x412 DUP1
0x413 DUP3
0x414 SUB
0x415 DUP1
0x416 MLOAD
0x417 PUSH1 0x1
0x419 DUP4
0x41a PUSH1 0x20
0x41c SUB
0x41d PUSH2 0x100
0x420 EXP
0x421 SUB
0x422 NOT
0x423 AND
0x424 DUP2
0x425 MSTORE
0x426 PUSH1 0x20
0x428 ADD
0x429 SWAP2
0x42a POP
---
0x414: V344 = SUB V339 V341
0x416: V345 = M[V344]
0x417: V346 = 0x1
0x41a: V347 = 0x20
0x41c: V348 = SUB 0x20 V341
0x41d: V349 = 0x100
0x420: V350 = EXP 0x100 V348
0x421: V351 = SUB V350 0x1
0x422: V352 = NOT V351
0x423: V353 = AND V352 V345
0x425: M[V344] = V353
0x426: V354 = 0x20
0x428: V355 = ADD 0x20 V344
---
Entry stack: [V10, 0xab, V103, V108, V302, 0x7b9ef5b0dc3308bf0d328fa6b77f2b422a6e7ac776fa470f33e31569a3a209ef, V307, V103, V299, V317, V339, V341]
Stack pops: 2
Stack additions: [V355, S0]
Exit stack: [V10, 0xab, V103, V108, V302, 0x7b9ef5b0dc3308bf0d328fa6b77f2b422a6e7ac776fa470f33e31569a3a209ef, V307, V103, V299, V317, V355, V341]

================================

Block 0x42b
[0x42b:0x439]
---
Predecessors: [0x3ff, 0x412]
Successors: [0x43a]
---
0x42b JUMPDEST
0x42c POP
0x42d SWAP4
0x42e POP
0x42f POP
0x430 POP
0x431 POP
0x432 PUSH1 0x40
0x434 MLOAD
0x435 DUP1
0x436 SWAP2
0x437 SUB
0x438 SWAP1
0x439 LOG1
---
0x42b: JUMPDEST 
0x432: V356 = 0x40
0x434: V357 = M[0x40]
0x437: V358 = SUB S1 V357
0x439: LOG V357 V358 0x7b9ef5b0dc3308bf0d328fa6b77f2b422a6e7ac776fa470f33e31569a3a209ef
---
Entry stack: [V10, 0xab, V103, V108, V302, 0x7b9ef5b0dc3308bf0d328fa6b77f2b422a6e7ac776fa470f33e31569a3a209ef, V307, V103, V299, V317, S1, V341]
Stack pops: 7
Stack additions: []
Exit stack: [V10, 0xab, V103, V108, V302]

================================

Block 0x43a
[0x43a:0x43e]
---
Predecessors: [0x42b]
Successors: [0xab]
---
0x43a JUMPDEST
0x43b POP
0x43c POP
0x43d POP
0x43e JUMP
---
0x43a: JUMPDEST 
0x43e: JUMP 0xab
---
Entry stack: [V10, 0xab, V103, V108, V302]
Stack pops: 4
Stack additions: []
Exit stack: [V10]

================================

Block 0x43f
[0x43f:0x46a]
---
Predecessors: []
Successors: []
---
0x43f STOP
0x440 LOG1
0x441 PUSH6 0x627a7a723058
0x448 SHA3
0x449 MISSING 0xdb
0x44a MISSING 0xaf
0x44b RETURNDATASIZE
0x44c DUP8
0x44d DUP5
0x44e MISSING 0xef
0x44f MISSING 0xba
0x450 MISSING 0x25
0x451 MISSING 0xcd
0x452 MISSING 0xb7
0x453 DUP12
0x454 MISSING 0x1e
0x455 MISSING 0xc1
0x456 MISSING 0x25
0x457 SWAP15
0x458 MISSING 0xbf
0x459 MISSING 0xbd
0x45a MISSING 0xd7
0x45b MISSING 0xa9
0x45c MISSING 0x22
0x45d EXP
0x45e PUSH4 0xad48c133
0x463 MISSING 0xd9
0x464 STATICCALL
0x465 SMOD
0x466 MISSING 0x28
0x467 MISSING 0xc1
0x468 MISSING 0xf6
0x469 STOP
0x46a MISSING 0x29
---
0x43f: STOP 
0x440: LOG S0 S1 S2
0x441: V359 = 0x627a7a723058
0x448: V360 = SHA3 0x627a7a723058 S3
0x449: MISSING 0xdb
0x44a: MISSING 0xaf
0x44b: V361 = RETURNDATASIZE
0x44e: MISSING 0xef
0x44f: MISSING 0xba
0x450: MISSING 0x25
0x451: MISSING 0xcd
0x452: MISSING 0xb7
0x454: MISSING 0x1e
0x455: MISSING 0xc1
0x456: MISSING 0x25
0x458: MISSING 0xbf
0x459: MISSING 0xbd
0x45a: MISSING 0xd7
0x45b: MISSING 0xa9
0x45c: MISSING 0x22
0x45d: V362 = EXP S0 S1
0x45e: V363 = 0xad48c133
0x463: MISSING 0xd9
0x464: V364 = STATICCALL S0 S1 S2 S3 S4 S5
0x465: V365 = SMOD V364 S6
0x466: MISSING 0x28
0x467: MISSING 0xc1
0x468: MISSING 0xf6
0x469: STOP 
0x46a: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V360, S2, S6, V361, S0, S1, S2, S3, S4, S5, S6, S11, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S15, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S0, 0xad48c133, V362, V365]
Exit stack: []

================================

Function 0:
Public function signature: 0x2d05d3f
Entry block: 0x77
Exit block: 0x87
Body: 0x77, 0x7e, 0x7f, 0x87, 0x17e

Function 1:
Public function signature: 0x1b9265b8
Entry block: 0xa3
Exit block: 0xab
Body: 0xa3, 0xab, 0x18d, 0x18e

Function 2:
Public function signature: 0x253227f1
Entry block: 0xad
Exit block: 0xab
Body: 0xab, 0xad, 0xb4, 0xb5, 0x190, 0x1aa, 0x1af, 0x1c6, 0x1cb, 0x1de, 0x1e7, 0x1fd, 0x25e, 0x25f, 0x260, 0x261

Function 3:
Public function signature: 0x2e1a7d4d
Entry block: 0x105
Exit block: 0xab
Body: 0xab, 0x105, 0x266, 0x27d, 0x282, 0x2b1, 0x2b2, 0x2b3, 0x2b4

Function 4:
Public function signature: 0x41c0e1b5
Entry block: 0x112
Exit block: 0xab
Body: 0xab, 0x112, 0x119, 0x11a, 0x18d, 0x18e, 0x2b7, 0x2ce, 0x2d3, 0x2eb

Function 5:
Public function signature: 0x97be40ff
Entry block: 0x124
Exit block: 0xab
Body: 0xab, 0x124, 0x12b, 0x12c, 0x2fc, 0x311, 0x31a, 0x330, 0x3df, 0x3ed, 0x3ff, 0x412, 0x42b, 0x43a

Function 6:
Public fallback function
Entry block: 0x75
Exit block: 0x75
Body: 0x75

