Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x40]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x40
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x40
0xc: JUMPI 0x40 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x92]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0xcdcb6e3f
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x92
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0xcdcb6e3f
0x3b: V13 = EQ V11 0xcdcb6e3f
0x3c: V14 = 0x92
0x3f: JUMPI 0x92 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x53]
---
Predecessors: [0x0, 0xd]
Successors: [0x54, 0x90]
---
0x40 JUMPDEST
0x41 PUSH1 0x0
0x43 ADDRESS
0x44 PUSH1 0x1
0x46 PUSH1 0xa0
0x48 PUSH1 0x2
0x4a EXP
0x4b SUB
0x4c AND
0x4d BALANCE
0x4e GT
0x4f ISZERO
0x50 PUSH2 0x90
0x53 JUMPI
---
0x40: JUMPDEST 
0x41: V15 = 0x0
0x43: V16 = ADDRESS
0x44: V17 = 0x1
0x46: V18 = 0xa0
0x48: V19 = 0x2
0x4a: V20 = EXP 0x2 0xa0
0x4b: V21 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c: V22 = AND 0xffffffffffffffffffffffffffffffffffffffff V16
0x4d: V23 = BALANCE V22
0x4e: V24 = GT V23 0x0
0x4f: V25 = ISZERO V24
0x50: V26 = 0x90
0x53: JUMPI 0x90 V25
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x54
[0x54:0x8b]
---
Predecessors: [0x40]
Successors: [0x8c, 0x90]
---
0x54 CALLER
0x55 PUSH1 0x1
0x57 PUSH1 0xa0
0x59 PUSH1 0x2
0x5b EXP
0x5c SUB
0x5d AND
0x5e PUSH2 0x8fc
0x61 ADDRESS
0x62 PUSH1 0x1
0x64 PUSH1 0xa0
0x66 PUSH1 0x2
0x68 EXP
0x69 SUB
0x6a AND
0x6b BALANCE
0x6c SWAP1
0x6d DUP2
0x6e ISZERO
0x6f MUL
0x70 SWAP1
0x71 PUSH1 0x40
0x73 MLOAD
0x74 PUSH1 0x0
0x76 PUSH1 0x40
0x78 MLOAD
0x79 DUP1
0x7a DUP4
0x7b SUB
0x7c DUP2
0x7d DUP6
0x7e DUP9
0x7f DUP9
0x80 CALL
0x81 SWAP4
0x82 POP
0x83 POP
0x84 POP
0x85 POP
0x86 ISZERO
0x87 ISZERO
0x88 PUSH2 0x90
0x8b JUMPI
---
0x54: V27 = CALLER
0x55: V28 = 0x1
0x57: V29 = 0xa0
0x59: V30 = 0x2
0x5b: V31 = EXP 0x2 0xa0
0x5c: V32 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5d: V33 = AND 0xffffffffffffffffffffffffffffffffffffffff V27
0x5e: V34 = 0x8fc
0x61: V35 = ADDRESS
0x62: V36 = 0x1
0x64: V37 = 0xa0
0x66: V38 = 0x2
0x68: V39 = EXP 0x2 0xa0
0x69: V40 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6a: V41 = AND 0xffffffffffffffffffffffffffffffffffffffff V35
0x6b: V42 = BALANCE V41
0x6e: V43 = ISZERO V42
0x6f: V44 = MUL V43 0x8fc
0x71: V45 = 0x40
0x73: V46 = M[0x40]
0x74: V47 = 0x0
0x76: V48 = 0x40
0x78: V49 = M[0x40]
0x7b: V50 = SUB V46 V49
0x80: V51 = CALL V44 V33 V42 V49 V50 V49 0x0
0x86: V52 = ISZERO V51
0x87: V53 = ISZERO V52
0x88: V54 = 0x90
0x8b: JUMPI 0x90 V53
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x8c
[0x8c:0x8f]
---
Predecessors: [0x54]
Successors: []
---
0x8c PUSH1 0x0
0x8e DUP1
0x8f REVERT
---
0x8c: V55 = 0x0
0x8f: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x90
[0x90:0x91]
---
Predecessors: [0x40, 0x54, 0x2be]
Successors: []
---
0x90 JUMPDEST
0x91 STOP
---
0x90: JUMPDEST 
0x91: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x92
[0x92:0x100]
---
Predecessors: [0xd]
Successors: [0x101, 0x105]
---
0x92 JUMPDEST
0x93 PUSH2 0x90
0x96 PUSH1 0x4
0x98 CALLDATALOAD
0x99 PUSH1 0x1
0x9b PUSH1 0xa0
0x9d PUSH1 0x2
0x9f EXP
0xa0 SUB
0xa1 PUSH1 0x24
0xa3 CALLDATALOAD
0xa4 DUP2
0xa5 AND
0xa6 SWAP1
0xa7 PUSH1 0x44
0xa9 CALLDATALOAD
0xaa DUP2
0xab AND
0xac SWAP1
0xad PUSH1 0x64
0xaf CALLDATALOAD
0xb0 DUP2
0xb1 AND
0xb2 SWAP1
0xb3 PUSH1 0x84
0xb5 CALLDATALOAD
0xb6 DUP2
0xb7 AND
0xb8 SWAP1
0xb9 PUSH1 0xa4
0xbb CALLDATALOAD
0xbc DUP2
0xbd AND
0xbe SWAP1
0xbf PUSH1 0xc4
0xc1 CALLDATALOAD
0xc2 DUP2
0xc3 AND
0xc4 SWAP1
0xc5 PUSH1 0xe4
0xc7 CALLDATALOAD
0xc8 DUP2
0xc9 AND
0xca SWAP1
0xcb PUSH2 0x104
0xce CALLDATALOAD
0xcf DUP2
0xd0 AND
0xd1 SWAP1
0xd2 PUSH2 0x124
0xd5 CALLDATALOAD
0xd6 DUP2
0xd7 AND
0xd8 SWAP1
0xd9 PUSH2 0x144
0xdc CALLDATALOAD
0xdd AND
0xde DUP10
0xdf DUP12
0xe0 ISZERO
0xe1 PUSH2 0x8fc
0xe4 MUL
0xe5 DUP13
0xe6 PUSH1 0x40
0xe8 MLOAD
0xe9 PUSH1 0x0
0xeb PUSH1 0x40
0xed MLOAD
0xee DUP1
0xef DUP4
0xf0 SUB
0xf1 DUP2
0xf2 DUP6
0xf3 DUP9
0xf4 DUP9
0xf5 CALL
0xf6 SWAP4
0xf7 POP
0xf8 POP
0xf9 POP
0xfa POP
0xfb ISZERO
0xfc ISZERO
0xfd PUSH2 0x105
0x100 JUMPI
---
0x92: JUMPDEST 
0x93: V56 = 0x90
0x96: V57 = 0x4
0x98: V58 = CALLDATALOAD 0x4
0x99: V59 = 0x1
0x9b: V60 = 0xa0
0x9d: V61 = 0x2
0x9f: V62 = EXP 0x2 0xa0
0xa0: V63 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa1: V64 = 0x24
0xa3: V65 = CALLDATALOAD 0x24
0xa5: V66 = AND 0xffffffffffffffffffffffffffffffffffffffff V65
0xa7: V67 = 0x44
0xa9: V68 = CALLDATALOAD 0x44
0xab: V69 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0xad: V70 = 0x64
0xaf: V71 = CALLDATALOAD 0x64
0xb1: V72 = AND 0xffffffffffffffffffffffffffffffffffffffff V71
0xb3: V73 = 0x84
0xb5: V74 = CALLDATALOAD 0x84
0xb7: V75 = AND 0xffffffffffffffffffffffffffffffffffffffff V74
0xb9: V76 = 0xa4
0xbb: V77 = CALLDATALOAD 0xa4
0xbd: V78 = AND 0xffffffffffffffffffffffffffffffffffffffff V77
0xbf: V79 = 0xc4
0xc1: V80 = CALLDATALOAD 0xc4
0xc3: V81 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0xc5: V82 = 0xe4
0xc7: V83 = CALLDATALOAD 0xe4
0xc9: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V83
0xcb: V85 = 0x104
0xce: V86 = CALLDATALOAD 0x104
0xd0: V87 = AND 0xffffffffffffffffffffffffffffffffffffffff V86
0xd2: V88 = 0x124
0xd5: V89 = CALLDATALOAD 0x124
0xd7: V90 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0xd9: V91 = 0x144
0xdc: V92 = CALLDATALOAD 0x144
0xdd: V93 = AND V92 0xffffffffffffffffffffffffffffffffffffffff
0xe0: V94 = ISZERO V58
0xe1: V95 = 0x8fc
0xe4: V96 = MUL 0x8fc V94
0xe6: V97 = 0x40
0xe8: V98 = M[0x40]
0xe9: V99 = 0x0
0xeb: V100 = 0x40
0xed: V101 = M[0x40]
0xf0: V102 = SUB V98 V101
0xf5: V103 = CALL V96 V66 V58 V101 V102 V101 0x0
0xfb: V104 = ISZERO V103
0xfc: V105 = ISZERO V104
0xfd: V106 = 0x105
0x100: JUMPI 0x105 V105
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x90, V58, V66, V69, V72, V75, V78, V81, V84, V87, V90, V93]
Exit stack: [V11, 0x90, V58, V66, V69, V72, V75, V78, V81, V84, V87, V90, V93]

================================

Block 0x101
[0x101:0x104]
---
Predecessors: [0x92]
Successors: []
---
0x101 PUSH1 0x0
0x103 DUP1
0x104 REVERT
---
0x101: V107 = 0x0
0x104: REVERT 0x0 0x0
---
Entry stack: [V11, 0x90, V58, V66, V69, V72, V75, V78, V81, V84, V87, V90, V93]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x90, V58, V66, V69, V72, V75, V78, V81, V84, V87, V90, V93]

================================

Block 0x105
[0x105:0x131]
---
Predecessors: [0x92]
Successors: [0x132, 0x136]
---
0x105 JUMPDEST
0x106 PUSH1 0x1
0x108 PUSH1 0xa0
0x10a PUSH1 0x2
0x10c EXP
0x10d SUB
0x10e DUP10
0x10f AND
0x110 DUP12
0x111 ISZERO
0x112 PUSH2 0x8fc
0x115 MUL
0x116 DUP13
0x117 PUSH1 0x40
0x119 MLOAD
0x11a PUSH1 0x0
0x11c PUSH1 0x40
0x11e MLOAD
0x11f DUP1
0x120 DUP4
0x121 SUB
0x122 DUP2
0x123 DUP6
0x124 DUP9
0x125 DUP9
0x126 CALL
0x127 SWAP4
0x128 POP
0x129 POP
0x12a POP
0x12b POP
0x12c ISZERO
0x12d ISZERO
0x12e PUSH2 0x136
0x131 JUMPI
---
0x105: JUMPDEST 
0x106: V108 = 0x1
0x108: V109 = 0xa0
0x10a: V110 = 0x2
0x10c: V111 = EXP 0x2 0xa0
0x10d: V112 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10f: V113 = AND V69 0xffffffffffffffffffffffffffffffffffffffff
0x111: V114 = ISZERO V58
0x112: V115 = 0x8fc
0x115: V116 = MUL 0x8fc V114
0x117: V117 = 0x40
0x119: V118 = M[0x40]
0x11a: V119 = 0x0
0x11c: V120 = 0x40
0x11e: V121 = M[0x40]
0x121: V122 = SUB V118 V121
0x126: V123 = CALL V116 V113 V58 V121 V122 V121 0x0
0x12c: V124 = ISZERO V123
0x12d: V125 = ISZERO V124
0x12e: V126 = 0x136
0x131: JUMPI 0x136 V125
---
Entry stack: [V11, 0x90, V58, V66, V69, V72, V75, V78, V81, V84, V87, V90, V93]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V11, 0x90, V58, V66, V69, V72, V75, V78, V81, V84, V87, V90, V93]

================================

Block 0x132
[0x132:0x135]
---
Predecessors: [0x105]
Successors: []
---
0x132 PUSH1 0x0
0x134 DUP1
0x135 REVERT
---
0x132: V127 = 0x0
0x135: REVERT 0x0 0x0
---
Entry stack: [V11, 0x90, V58, V66, V69, V72, V75, V78, V81, V84, V87, V90, V93]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x90, V58, V66, V69, V72, V75, V78, V81, V84, V87, V90, V93]

================================

Block 0x136
[0x136:0x162]
---
Predecessors: [0x105]
Successors: [0x163, 0x167]
---
0x136 JUMPDEST
0x137 PUSH1 0x1
0x139 PUSH1 0xa0
0x13b PUSH1 0x2
0x13d EXP
0x13e SUB
0x13f DUP9
0x140 AND
0x141 DUP12
0x142 ISZERO
0x143 PUSH2 0x8fc
0x146 MUL
0x147 DUP13
0x148 PUSH1 0x40
0x14a MLOAD
0x14b PUSH1 0x0
0x14d PUSH1 0x40
0x14f MLOAD
0x150 DUP1
0x151 DUP4
0x152 SUB
0x153 DUP2
0x154 DUP6
0x155 DUP9
0x156 DUP9
0x157 CALL
0x158 SWAP4
0x159 POP
0x15a POP
0x15b POP
0x15c POP
0x15d ISZERO
0x15e ISZERO
0x15f PUSH2 0x167
0x162 JUMPI
---
0x136: JUMPDEST 
0x137: V128 = 0x1
0x139: V129 = 0xa0
0x13b: V130 = 0x2
0x13d: V131 = EXP 0x2 0xa0
0x13e: V132 = SUB 0x10000000000000000000000000000000000000000 0x1
0x140: V133 = AND V72 0xffffffffffffffffffffffffffffffffffffffff
0x142: V134 = ISZERO V58
0x143: V135 = 0x8fc
0x146: V136 = MUL 0x8fc V134
0x148: V137 = 0x40
0x14a: V138 = M[0x40]
0x14b: V139 = 0x0
0x14d: V140 = 0x40
0x14f: V141 = M[0x40]
0x152: V142 = SUB V138 V141
0x157: V143 = CALL V136 V133 V58 V141 V142 V141 0x0
0x15d: V144 = ISZERO V143
0x15e: V145 = ISZERO V144
0x15f: V146 = 0x167
0x162: JUMPI 0x167 V145
---
Entry stack: [V11, 0x90, V58, V66, V69, V72, V75, V78, V81, V84, V87, V90, V93]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V11, 0x90, V58, V66, V69, V72, V75, V78, V81, V84, V87, V90, V93]

================================

Block 0x163
[0x163:0x166]
---
Predecessors: [0x136]
Successors: []
---
0x163 PUSH1 0x0
0x165 DUP1
0x166 REVERT
---
0x163: V147 = 0x0
0x166: REVERT 0x0 0x0
---
Entry stack: [V11, 0x90, V58, V66, V69, V72, V75, V78, V81, V84, V87, V90, V93]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x90, V58, V66, V69, V72, V75, V78, V81, V84, V87, V90, V93]

================================

Block 0x167
[0x167:0x193]
---
Predecessors: [0x136]
Successors: [0x194, 0x198]
---
0x167 JUMPDEST
0x168 PUSH1 0x1
0x16a PUSH1 0xa0
0x16c PUSH1 0x2
0x16e EXP
0x16f SUB
0x170 DUP8
0x171 AND
0x172 DUP12
0x173 ISZERO
0x174 PUSH2 0x8fc
0x177 MUL
0x178 DUP13
0x179 PUSH1 0x40
0x17b MLOAD
0x17c PUSH1 0x0
0x17e PUSH1 0x40
0x180 MLOAD
0x181 DUP1
0x182 DUP4
0x183 SUB
0x184 DUP2
0x185 DUP6
0x186 DUP9
0x187 DUP9
0x188 CALL
0x189 SWAP4
0x18a POP
0x18b POP
0x18c POP
0x18d POP
0x18e ISZERO
0x18f ISZERO
0x190 PUSH2 0x198
0x193 JUMPI
---
0x167: JUMPDEST 
0x168: V148 = 0x1
0x16a: V149 = 0xa0
0x16c: V150 = 0x2
0x16e: V151 = EXP 0x2 0xa0
0x16f: V152 = SUB 0x10000000000000000000000000000000000000000 0x1
0x171: V153 = AND V75 0xffffffffffffffffffffffffffffffffffffffff
0x173: V154 = ISZERO V58
0x174: V155 = 0x8fc
0x177: V156 = MUL 0x8fc V154
0x179: V157 = 0x40
0x17b: V158 = M[0x40]
0x17c: V159 = 0x0
0x17e: V160 = 0x40
0x180: V161 = M[0x40]
0x183: V162 = SUB V158 V161
0x188: V163 = CALL V156 V153 V58 V161 V162 V161 0x0
0x18e: V164 = ISZERO V163
0x18f: V165 = ISZERO V164
0x190: V166 = 0x198
0x193: JUMPI 0x198 V165
---
Entry stack: [V11, 0x90, V58, V66, V69, V72, V75, V78, V81, V84, V87, V90, V93]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V11, 0x90, V58, V66, V69, V72, V75, V78, V81, V84, V87, V90, V93]

================================

Block 0x194
[0x194:0x197]
---
Predecessors: [0x167]
Successors: []
---
0x194 PUSH1 0x0
0x196 DUP1
0x197 REVERT
---
0x194: V167 = 0x0
0x197: REVERT 0x0 0x0
---
Entry stack: [V11, 0x90, V58, V66, V69, V72, V75, V78, V81, V84, V87, V90, V93]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x90, V58, V66, V69, V72, V75, V78, V81, V84, V87, V90, V93]

================================

Block 0x198
[0x198:0x1c4]
---
Predecessors: [0x167]
Successors: [0x1c5, 0x1c9]
---
0x198 JUMPDEST
0x199 PUSH1 0x1
0x19b PUSH1 0xa0
0x19d PUSH1 0x2
0x19f EXP
0x1a0 SUB
0x1a1 DUP7
0x1a2 AND
0x1a3 DUP12
0x1a4 ISZERO
0x1a5 PUSH2 0x8fc
0x1a8 MUL
0x1a9 DUP13
0x1aa PUSH1 0x40
0x1ac MLOAD
0x1ad PUSH1 0x0
0x1af PUSH1 0x40
0x1b1 MLOAD
0x1b2 DUP1
0x1b3 DUP4
0x1b4 SUB
0x1b5 DUP2
0x1b6 DUP6
0x1b7 DUP9
0x1b8 DUP9
0x1b9 CALL
0x1ba SWAP4
0x1bb POP
0x1bc POP
0x1bd POP
0x1be POP
0x1bf ISZERO
0x1c0 ISZERO
0x1c1 PUSH2 0x1c9
0x1c4 JUMPI
---
0x198: JUMPDEST 
0x199: V168 = 0x1
0x19b: V169 = 0xa0
0x19d: V170 = 0x2
0x19f: V171 = EXP 0x2 0xa0
0x1a0: V172 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a2: V173 = AND V78 0xffffffffffffffffffffffffffffffffffffffff
0x1a4: V174 = ISZERO V58
0x1a5: V175 = 0x8fc
0x1a8: V176 = MUL 0x8fc V174
0x1aa: V177 = 0x40
0x1ac: V178 = M[0x40]
0x1ad: V179 = 0x0
0x1af: V180 = 0x40
0x1b1: V181 = M[0x40]
0x1b4: V182 = SUB V178 V181
0x1b9: V183 = CALL V176 V173 V58 V181 V182 V181 0x0
0x1bf: V184 = ISZERO V183
0x1c0: V185 = ISZERO V184
0x1c1: V186 = 0x1c9
0x1c4: JUMPI 0x1c9 V185
---
Entry stack: [V11, 0x90, V58, V66, V69, V72, V75, V78, V81, V84, V87, V90, V93]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V11, 0x90, V58, V66, V69, V72, V75, V78, V81, V84, V87, V90, V93]

================================

Block 0x1c5
[0x1c5:0x1c8]
---
Predecessors: [0x198]
Successors: []
---
0x1c5 PUSH1 0x0
0x1c7 DUP1
0x1c8 REVERT
---
0x1c5: V187 = 0x0
0x1c8: REVERT 0x0 0x0
---
Entry stack: [V11, 0x90, V58, V66, V69, V72, V75, V78, V81, V84, V87, V90, V93]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x90, V58, V66, V69, V72, V75, V78, V81, V84, V87, V90, V93]

================================

Block 0x1c9
[0x1c9:0x1f5]
---
Predecessors: [0x198]
Successors: [0x1f6, 0x1fa]
---
0x1c9 JUMPDEST
0x1ca PUSH1 0x1
0x1cc PUSH1 0xa0
0x1ce PUSH1 0x2
0x1d0 EXP
0x1d1 SUB
0x1d2 DUP6
0x1d3 AND
0x1d4 DUP12
0x1d5 ISZERO
0x1d6 PUSH2 0x8fc
0x1d9 MUL
0x1da DUP13
0x1db PUSH1 0x40
0x1dd MLOAD
0x1de PUSH1 0x0
0x1e0 PUSH1 0x40
0x1e2 MLOAD
0x1e3 DUP1
0x1e4 DUP4
0x1e5 SUB
0x1e6 DUP2
0x1e7 DUP6
0x1e8 DUP9
0x1e9 DUP9
0x1ea CALL
0x1eb SWAP4
0x1ec POP
0x1ed POP
0x1ee POP
0x1ef POP
0x1f0 ISZERO
0x1f1 ISZERO
0x1f2 PUSH2 0x1fa
0x1f5 JUMPI
---
0x1c9: JUMPDEST 
0x1ca: V188 = 0x1
0x1cc: V189 = 0xa0
0x1ce: V190 = 0x2
0x1d0: V191 = EXP 0x2 0xa0
0x1d1: V192 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d3: V193 = AND V81 0xffffffffffffffffffffffffffffffffffffffff
0x1d5: V194 = ISZERO V58
0x1d6: V195 = 0x8fc
0x1d9: V196 = MUL 0x8fc V194
0x1db: V197 = 0x40
0x1dd: V198 = M[0x40]
0x1de: V199 = 0x0
0x1e0: V200 = 0x40
0x1e2: V201 = M[0x40]
0x1e5: V202 = SUB V198 V201
0x1ea: V203 = CALL V196 V193 V58 V201 V202 V201 0x0
0x1f0: V204 = ISZERO V203
0x1f1: V205 = ISZERO V204
0x1f2: V206 = 0x1fa
0x1f5: JUMPI 0x1fa V205
---
Entry stack: [V11, 0x90, V58, V66, V69, V72, V75, V78, V81, V84, V87, V90, V93]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V11, 0x90, V58, V66, V69, V72, V75, V78, V81, V84, V87, V90, V93]

================================

Block 0x1f6
[0x1f6:0x1f9]
---
Predecessors: [0x1c9]
Successors: []
---
0x1f6 PUSH1 0x0
0x1f8 DUP1
0x1f9 REVERT
---
0x1f6: V207 = 0x0
0x1f9: REVERT 0x0 0x0
---
Entry stack: [V11, 0x90, V58, V66, V69, V72, V75, V78, V81, V84, V87, V90, V93]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x90, V58, V66, V69, V72, V75, V78, V81, V84, V87, V90, V93]

================================

Block 0x1fa
[0x1fa:0x226]
---
Predecessors: [0x1c9]
Successors: [0x227, 0x22b]
---
0x1fa JUMPDEST
0x1fb PUSH1 0x1
0x1fd PUSH1 0xa0
0x1ff PUSH1 0x2
0x201 EXP
0x202 SUB
0x203 DUP5
0x204 AND
0x205 DUP12
0x206 ISZERO
0x207 PUSH2 0x8fc
0x20a MUL
0x20b DUP13
0x20c PUSH1 0x40
0x20e MLOAD
0x20f PUSH1 0x0
0x211 PUSH1 0x40
0x213 MLOAD
0x214 DUP1
0x215 DUP4
0x216 SUB
0x217 DUP2
0x218 DUP6
0x219 DUP9
0x21a DUP9
0x21b CALL
0x21c SWAP4
0x21d POP
0x21e POP
0x21f POP
0x220 POP
0x221 ISZERO
0x222 ISZERO
0x223 PUSH2 0x22b
0x226 JUMPI
---
0x1fa: JUMPDEST 
0x1fb: V208 = 0x1
0x1fd: V209 = 0xa0
0x1ff: V210 = 0x2
0x201: V211 = EXP 0x2 0xa0
0x202: V212 = SUB 0x10000000000000000000000000000000000000000 0x1
0x204: V213 = AND V84 0xffffffffffffffffffffffffffffffffffffffff
0x206: V214 = ISZERO V58
0x207: V215 = 0x8fc
0x20a: V216 = MUL 0x8fc V214
0x20c: V217 = 0x40
0x20e: V218 = M[0x40]
0x20f: V219 = 0x0
0x211: V220 = 0x40
0x213: V221 = M[0x40]
0x216: V222 = SUB V218 V221
0x21b: V223 = CALL V216 V213 V58 V221 V222 V221 0x0
0x221: V224 = ISZERO V223
0x222: V225 = ISZERO V224
0x223: V226 = 0x22b
0x226: JUMPI 0x22b V225
---
Entry stack: [V11, 0x90, V58, V66, V69, V72, V75, V78, V81, V84, V87, V90, V93]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V11, 0x90, V58, V66, V69, V72, V75, V78, V81, V84, V87, V90, V93]

================================

Block 0x227
[0x227:0x22a]
---
Predecessors: [0x1fa]
Successors: []
---
0x227 PUSH1 0x0
0x229 DUP1
0x22a REVERT
---
0x227: V227 = 0x0
0x22a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x90, V58, V66, V69, V72, V75, V78, V81, V84, V87, V90, V93]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x90, V58, V66, V69, V72, V75, V78, V81, V84, V87, V90, V93]

================================

Block 0x22b
[0x22b:0x257]
---
Predecessors: [0x1fa]
Successors: [0x258, 0x25c]
---
0x22b JUMPDEST
0x22c PUSH1 0x1
0x22e PUSH1 0xa0
0x230 PUSH1 0x2
0x232 EXP
0x233 SUB
0x234 DUP4
0x235 AND
0x236 DUP12
0x237 ISZERO
0x238 PUSH2 0x8fc
0x23b MUL
0x23c DUP13
0x23d PUSH1 0x40
0x23f MLOAD
0x240 PUSH1 0x0
0x242 PUSH1 0x40
0x244 MLOAD
0x245 DUP1
0x246 DUP4
0x247 SUB
0x248 DUP2
0x249 DUP6
0x24a DUP9
0x24b DUP9
0x24c CALL
0x24d SWAP4
0x24e POP
0x24f POP
0x250 POP
0x251 POP
0x252 ISZERO
0x253 ISZERO
0x254 PUSH2 0x25c
0x257 JUMPI
---
0x22b: JUMPDEST 
0x22c: V228 = 0x1
0x22e: V229 = 0xa0
0x230: V230 = 0x2
0x232: V231 = EXP 0x2 0xa0
0x233: V232 = SUB 0x10000000000000000000000000000000000000000 0x1
0x235: V233 = AND V87 0xffffffffffffffffffffffffffffffffffffffff
0x237: V234 = ISZERO V58
0x238: V235 = 0x8fc
0x23b: V236 = MUL 0x8fc V234
0x23d: V237 = 0x40
0x23f: V238 = M[0x40]
0x240: V239 = 0x0
0x242: V240 = 0x40
0x244: V241 = M[0x40]
0x247: V242 = SUB V238 V241
0x24c: V243 = CALL V236 V233 V58 V241 V242 V241 0x0
0x252: V244 = ISZERO V243
0x253: V245 = ISZERO V244
0x254: V246 = 0x25c
0x257: JUMPI 0x25c V245
---
Entry stack: [V11, 0x90, V58, V66, V69, V72, V75, V78, V81, V84, V87, V90, V93]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V11, 0x90, V58, V66, V69, V72, V75, V78, V81, V84, V87, V90, V93]

================================

Block 0x258
[0x258:0x25b]
---
Predecessors: [0x22b]
Successors: []
---
0x258 PUSH1 0x0
0x25a DUP1
0x25b REVERT
---
0x258: V247 = 0x0
0x25b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x90, V58, V66, V69, V72, V75, V78, V81, V84, V87, V90, V93]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x90, V58, V66, V69, V72, V75, V78, V81, V84, V87, V90, V93]

================================

Block 0x25c
[0x25c:0x288]
---
Predecessors: [0x22b]
Successors: [0x289, 0x28d]
---
0x25c JUMPDEST
0x25d PUSH1 0x1
0x25f PUSH1 0xa0
0x261 PUSH1 0x2
0x263 EXP
0x264 SUB
0x265 DUP3
0x266 AND
0x267 DUP12
0x268 ISZERO
0x269 PUSH2 0x8fc
0x26c MUL
0x26d DUP13
0x26e PUSH1 0x40
0x270 MLOAD
0x271 PUSH1 0x0
0x273 PUSH1 0x40
0x275 MLOAD
0x276 DUP1
0x277 DUP4
0x278 SUB
0x279 DUP2
0x27a DUP6
0x27b DUP9
0x27c DUP9
0x27d CALL
0x27e SWAP4
0x27f POP
0x280 POP
0x281 POP
0x282 POP
0x283 ISZERO
0x284 ISZERO
0x285 PUSH2 0x28d
0x288 JUMPI
---
0x25c: JUMPDEST 
0x25d: V248 = 0x1
0x25f: V249 = 0xa0
0x261: V250 = 0x2
0x263: V251 = EXP 0x2 0xa0
0x264: V252 = SUB 0x10000000000000000000000000000000000000000 0x1
0x266: V253 = AND V90 0xffffffffffffffffffffffffffffffffffffffff
0x268: V254 = ISZERO V58
0x269: V255 = 0x8fc
0x26c: V256 = MUL 0x8fc V254
0x26e: V257 = 0x40
0x270: V258 = M[0x40]
0x271: V259 = 0x0
0x273: V260 = 0x40
0x275: V261 = M[0x40]
0x278: V262 = SUB V258 V261
0x27d: V263 = CALL V256 V253 V58 V261 V262 V261 0x0
0x283: V264 = ISZERO V263
0x284: V265 = ISZERO V264
0x285: V266 = 0x28d
0x288: JUMPI 0x28d V265
---
Entry stack: [V11, 0x90, V58, V66, V69, V72, V75, V78, V81, V84, V87, V90, V93]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V11, 0x90, V58, V66, V69, V72, V75, V78, V81, V84, V87, V90, V93]

================================

Block 0x289
[0x289:0x28c]
---
Predecessors: [0x25c]
Successors: []
---
0x289 PUSH1 0x0
0x28b DUP1
0x28c REVERT
---
0x289: V267 = 0x0
0x28c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x90, V58, V66, V69, V72, V75, V78, V81, V84, V87, V90, V93]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x90, V58, V66, V69, V72, V75, V78, V81, V84, V87, V90, V93]

================================

Block 0x28d
[0x28d:0x2b9]
---
Predecessors: [0x25c]
Successors: [0x2ba, 0x2be]
---
0x28d JUMPDEST
0x28e PUSH1 0x1
0x290 PUSH1 0xa0
0x292 PUSH1 0x2
0x294 EXP
0x295 SUB
0x296 DUP2
0x297 AND
0x298 DUP12
0x299 ISZERO
0x29a PUSH2 0x8fc
0x29d MUL
0x29e DUP13
0x29f PUSH1 0x40
0x2a1 MLOAD
0x2a2 PUSH1 0x0
0x2a4 PUSH1 0x40
0x2a6 MLOAD
0x2a7 DUP1
0x2a8 DUP4
0x2a9 SUB
0x2aa DUP2
0x2ab DUP6
0x2ac DUP9
0x2ad DUP9
0x2ae CALL
0x2af SWAP4
0x2b0 POP
0x2b1 POP
0x2b2 POP
0x2b3 POP
0x2b4 ISZERO
0x2b5 ISZERO
0x2b6 PUSH2 0x2be
0x2b9 JUMPI
---
0x28d: JUMPDEST 
0x28e: V268 = 0x1
0x290: V269 = 0xa0
0x292: V270 = 0x2
0x294: V271 = EXP 0x2 0xa0
0x295: V272 = SUB 0x10000000000000000000000000000000000000000 0x1
0x297: V273 = AND V93 0xffffffffffffffffffffffffffffffffffffffff
0x299: V274 = ISZERO V58
0x29a: V275 = 0x8fc
0x29d: V276 = MUL 0x8fc V274
0x29f: V277 = 0x40
0x2a1: V278 = M[0x40]
0x2a2: V279 = 0x0
0x2a4: V280 = 0x40
0x2a6: V281 = M[0x40]
0x2a9: V282 = SUB V278 V281
0x2ae: V283 = CALL V276 V273 V58 V281 V282 V281 0x0
0x2b4: V284 = ISZERO V283
0x2b5: V285 = ISZERO V284
0x2b6: V286 = 0x2be
0x2b9: JUMPI 0x2be V285
---
Entry stack: [V11, 0x90, V58, V66, V69, V72, V75, V78, V81, V84, V87, V90, V93]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V11, 0x90, V58, V66, V69, V72, V75, V78, V81, V84, V87, V90, V93]

================================

Block 0x2ba
[0x2ba:0x2bd]
---
Predecessors: [0x28d]
Successors: []
---
0x2ba PUSH1 0x0
0x2bc DUP1
0x2bd REVERT
---
0x2ba: V287 = 0x0
0x2bd: REVERT 0x0 0x0
---
Entry stack: [V11, 0x90, V58, V66, V69, V72, V75, V78, V81, V84, V87, V90, V93]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x90, V58, V66, V69, V72, V75, V78, V81, V84, V87, V90, V93]

================================

Block 0x2be
[0x2be:0x2ca]
---
Predecessors: [0x28d]
Successors: [0x90]
---
0x2be JUMPDEST
0x2bf POP
0x2c0 POP
0x2c1 POP
0x2c2 POP
0x2c3 POP
0x2c4 POP
0x2c5 POP
0x2c6 POP
0x2c7 POP
0x2c8 POP
0x2c9 POP
0x2ca JUMP
---
0x2be: JUMPDEST 
0x2ca: JUMP 0x90
---
Entry stack: [V11, 0x90, V58, V66, V69, V72, V75, V78, V81, V84, V87, V90, V93]
Stack pops: 12
Stack additions: []
Exit stack: [V11]

================================

Block 0x2cb
[0x2cb:0x2f6]
---
Predecessors: []
Successors: []
---
0x2cb STOP
0x2cc LOG1
0x2cd PUSH6 0x627a7a723058
0x2d4 SHA3
0x2d5 MISSING 0xaa
0x2d6 MISSING 0xd8
0x2d7 SAR
0x2d8 MISSING 0xcd
0x2d9 PUSH5 0x7e8a558087
0x2df MISSING 0x28
0x2e0 MOD
0x2e1 DUP9
0x2e2 PUSH5 0x1dbfdaf55a
0x2e8 PUSH10 0xd451ddb6bc49a669e5c2
0x2f3 MISSING 0xb5
0x2f4 SWAP9
0x2f5 STOP
0x2f6 MISSING 0x29
---
0x2cb: STOP 
0x2cc: LOG S0 S1 S2
0x2cd: V288 = 0x627a7a723058
0x2d4: V289 = SHA3 0x627a7a723058 S3
0x2d5: MISSING 0xaa
0x2d6: MISSING 0xd8
0x2d7: V290 = SAR S0 S1
0x2d8: MISSING 0xcd
0x2d9: V291 = 0x7e8a558087
0x2df: MISSING 0x28
0x2e0: V292 = MOD S0 S1
0x2e2: V293 = 0x1dbfdaf55a
0x2e8: V294 = 0xd451ddb6bc49a669e5c2
0x2f3: MISSING 0xb5
0x2f5: STOP 
0x2f6: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V289, V290, 0x7e8a558087, 0xd451ddb6bc49a669e5c2, 0x1dbfdaf55a, S9, V292, S2, S3, S4, S5, S6, S7, S8, S9, S9, S1, S2, S3, S4, S5, S6, S7, S8, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0xcdcb6e3f
Entry block: 0x92
Exit block: 0x90
Body: 0x90, 0x92, 0x101, 0x105, 0x132, 0x136, 0x163, 0x167, 0x194, 0x198, 0x1c5, 0x1c9, 0x1f6, 0x1fa, 0x227, 0x22b, 0x258, 0x25c, 0x289, 0x28d, 0x2ba, 0x2be

Function 1:
Public fallback function
Entry block: 0x40
Exit block: 0x8c
Body: 0x40, 0x54, 0x8c, 0x90

