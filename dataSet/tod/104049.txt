Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x76]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x76
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x76
0xa: JUMPI 0x76 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x7f]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x41c0e1b5
0x3a EQ
0x3b PUSH2 0x7f
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x41c0e1b5
0x3a: V12 = EQ 0x41c0e1b5 V10
0x3b: V13 = 0x7f
0x3e: JUMPI 0x7f V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x91]
---
0x3f DUP1
0x40 PUSH4 0x4f057506
0x45 EQ
0x46 PUSH2 0x91
0x49 JUMPI
---
0x40: V14 = 0x4f057506
0x45: V15 = EQ 0x4f057506 V10
0x46: V16 = 0x91
0x49: JUMPI 0x91 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0xb7]
---
0x4a DUP1
0x4b PUSH4 0x5f66d2a9
0x50 EQ
0x51 PUSH2 0xb7
0x54 JUMPI
---
0x4b: V17 = 0x5f66d2a9
0x50: V18 = EQ 0x5f66d2a9 V10
0x51: V19 = 0xb7
0x54: JUMPI 0xb7 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0xf6]
---
0x55 DUP1
0x56 PUSH4 0xa5fe0872
0x5b EQ
0x5c PUSH2 0xf6
0x5f JUMPI
---
0x56: V20 = 0xa5fe0872
0x5b: V21 = EQ 0xa5fe0872 V10
0x5c: V22 = 0xf6
0x5f: JUMPI 0xf6 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x100]
---
0x60 DUP1
0x61 PUSH4 0xa6f9dae1
0x66 EQ
0x67 PUSH2 0x100
0x6a JUMPI
---
0x61: V23 = 0xa6f9dae1
0x66: V24 = EQ 0xa6f9dae1 V10
0x67: V25 = 0x100
0x6a: JUMPI 0x100 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x60]
Successors: [0x76, 0x136]
---
0x6b DUP1
0x6c PUSH4 0xd4e93292
0x71 EQ
0x72 PUSH2 0x136
0x75 JUMPI
---
0x6c: V26 = 0xd4e93292
0x71: V27 = EQ 0xd4e93292 V10
0x72: V28 = 0x136
0x75: JUMPI 0x136 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x76
[0x76:0x79]
---
Predecessors: [0x0, 0x6b]
Successors: [0x7a]
---
0x76 JUMPDEST
0x77 PUSH2 0x7d
---
0x76: JUMPDEST 
0x77: V29 = 0x7d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x7d]
Exit stack: [V10, 0x7d]

================================

Block 0x7a
[0x7a:0x7a]
---
Predecessors: [0x76]
Successors: [0x7b]
---
0x7a JUMPDEST
---
0x7a: JUMPDEST 
---
Entry stack: [V10, 0x7d]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x7d]

================================

Block 0x7b
[0x7b:0x7c]
---
Predecessors: [0x7a]
Successors: [0x7d]
---
0x7b JUMPDEST
0x7c JUMP
---
0x7b: JUMPDEST 
0x7c: JUMP 0x7d
---
Entry stack: [V10, 0x7d]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x7d
[0x7d:0x7e]
---
Predecessors: [0x7b]
Successors: []
---
0x7d JUMPDEST
0x7e STOP
---
0x7d: JUMPDEST 
0x7e: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x7f
[0x7f:0x85]
---
Predecessors: [0xb]
Successors: [0x86, 0x87]
---
0x7f JUMPDEST
0x80 CALLVALUE
0x81 ISZERO
0x82 PUSH2 0x87
0x85 JUMPI
---
0x7f: JUMPDEST 
0x80: V30 = CALLVALUE
0x81: V31 = ISZERO V30
0x82: V32 = 0x87
0x85: JUMPI 0x87 V31
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x86
[0x86:0x86]
---
Predecessors: [0x7f]
Successors: []
---
0x86 INVALID
---
0x86: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x87
[0x87:0x8e]
---
Predecessors: [0x7f]
Successors: [0x140]
---
0x87 JUMPDEST
0x88 PUSH2 0x8f
0x8b PUSH2 0x140
0x8e JUMP
---
0x87: JUMPDEST 
0x88: V33 = 0x8f
0x8b: V34 = 0x140
0x8e: JUMP 0x140
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x8f]
Exit stack: [V10, 0x8f]

================================

Block 0x8f
[0x8f:0x90]
---
Predecessors: []
Successors: []
---
0x8f JUMPDEST
0x90 STOP
---
0x8f: JUMPDEST 
0x90: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x91
[0x91:0x97]
---
Predecessors: [0x3f]
Successors: [0x98, 0x99]
---
0x91 JUMPDEST
0x92 CALLVALUE
0x93 ISZERO
0x94 PUSH2 0x99
0x97 JUMPI
---
0x91: JUMPDEST 
0x92: V35 = CALLVALUE
0x93: V36 = ISZERO V35
0x94: V37 = 0x99
0x97: JUMPI 0x99 V36
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x98
[0x98:0x98]
---
Predecessors: [0x91]
Successors: []
---
0x98 INVALID
---
0x98: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x99
[0x99:0xa0]
---
Predecessors: [0x91]
Successors: [0x1b8]
---
0x99 JUMPDEST
0x9a PUSH2 0xa1
0x9d PUSH2 0x1b8
0xa0 JUMP
---
0x99: JUMPDEST 
0x9a: V38 = 0xa1
0x9d: V39 = 0x1b8
0xa0: JUMP 0x1b8
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xa1]
Exit stack: [V10, 0xa1]

================================

Block 0xa1
[0xa1:0xb6]
---
Predecessors: [0x1b8]
Successors: []
---
0xa1 JUMPDEST
0xa2 PUSH1 0x40
0xa4 MLOAD
0xa5 DUP1
0xa6 DUP3
0xa7 DUP2
0xa8 MSTORE
0xa9 PUSH1 0x20
0xab ADD
0xac SWAP2
0xad POP
0xae POP
0xaf PUSH1 0x40
0xb1 MLOAD
0xb2 DUP1
0xb3 SWAP2
0xb4 SUB
0xb5 SWAP1
0xb6 RETURN
---
0xa1: JUMPDEST 
0xa2: V40 = 0x40
0xa4: V41 = M[0x40]
0xa8: M[V41] = V99
0xa9: V42 = 0x20
0xab: V43 = ADD 0x20 V41
0xaf: V44 = 0x40
0xb1: V45 = M[0x40]
0xb4: V46 = SUB V43 V45
0xb6: RETURN V45 V46
---
Entry stack: [V10, 0xa1, V99]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xa1]

================================

Block 0xb7
[0xb7:0xbd]
---
Predecessors: [0x4a]
Successors: [0xbe, 0xbf]
---
0xb7 JUMPDEST
0xb8 CALLVALUE
0xb9 ISZERO
0xba PUSH2 0xbf
0xbd JUMPI
---
0xb7: JUMPDEST 
0xb8: V47 = CALLVALUE
0xb9: V48 = ISZERO V47
0xba: V49 = 0xbf
0xbd: JUMPI 0xbf V48
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xbe
[0xbe:0xbe]
---
Predecessors: [0xb7]
Successors: []
---
0xbe INVALID
---
0xbe: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xbf
[0xbf:0xf3]
---
Predecessors: [0xb7]
Successors: [0x1be]
---
0xbf JUMPDEST
0xc0 PUSH2 0xf4
0xc3 PUSH1 0x4
0xc5 DUP1
0xc6 DUP1
0xc7 CALLDATALOAD
0xc8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdd AND
0xde SWAP1
0xdf PUSH1 0x20
0xe1 ADD
0xe2 SWAP1
0xe3 SWAP2
0xe4 SWAP1
0xe5 DUP1
0xe6 CALLDATALOAD
0xe7 SWAP1
0xe8 PUSH1 0x20
0xea ADD
0xeb SWAP1
0xec SWAP2
0xed SWAP1
0xee POP
0xef POP
0xf0 PUSH2 0x1be
0xf3 JUMP
---
0xbf: JUMPDEST 
0xc0: V50 = 0xf4
0xc3: V51 = 0x4
0xc7: V52 = CALLDATALOAD 0x4
0xc8: V53 = 0xffffffffffffffffffffffffffffffffffffffff
0xdd: V54 = AND 0xffffffffffffffffffffffffffffffffffffffff V52
0xdf: V55 = 0x20
0xe1: V56 = ADD 0x20 0x4
0xe6: V57 = CALLDATALOAD 0x24
0xe8: V58 = 0x20
0xea: V59 = ADD 0x20 0x24
0xf0: V60 = 0x1be
0xf3: JUMP 0x1be
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xf4, V54, V57]
Exit stack: [V10, 0xf4, V54, V57]

================================

Block 0xf4
[0xf4:0xf5]
---
Predecessors: [0x264]
Successors: []
---
0xf4 JUMPDEST
0xf5 STOP
---
0xf4: JUMPDEST 
0xf5: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xf6
[0xf6:0xfd]
---
Predecessors: [0x55]
Successors: [0x268]
---
0xf6 JUMPDEST
0xf7 PUSH2 0xfe
0xfa PUSH2 0x268
0xfd JUMP
---
0xf6: JUMPDEST 
0xf7: V61 = 0xfe
0xfa: V62 = 0x268
0xfd: JUMP 0x268
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xfe]
Exit stack: [V10, 0xfe]

================================

Block 0xfe
[0xfe:0xff]
---
Predecessors: [0x2aa]
Successors: []
---
0xfe JUMPDEST
0xff STOP
---
0xfe: JUMPDEST 
0xff: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x100
[0x100:0x106]
---
Predecessors: [0x60]
Successors: [0x107, 0x108]
---
0x100 JUMPDEST
0x101 CALLVALUE
0x102 ISZERO
0x103 PUSH2 0x108
0x106 JUMPI
---
0x100: JUMPDEST 
0x101: V63 = CALLVALUE
0x102: V64 = ISZERO V63
0x103: V65 = 0x108
0x106: JUMPI 0x108 V64
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x107
[0x107:0x107]
---
Predecessors: [0x100]
Successors: []
---
0x107 INVALID
---
0x107: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x108
[0x108:0x133]
---
Predecessors: [0x100]
Successors: [0x2ac]
---
0x108 JUMPDEST
0x109 PUSH2 0x134
0x10c PUSH1 0x4
0x10e DUP1
0x10f DUP1
0x110 CALLDATALOAD
0x111 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x126 AND
0x127 SWAP1
0x128 PUSH1 0x20
0x12a ADD
0x12b SWAP1
0x12c SWAP2
0x12d SWAP1
0x12e POP
0x12f POP
0x130 PUSH2 0x2ac
0x133 JUMP
---
0x108: JUMPDEST 
0x109: V66 = 0x134
0x10c: V67 = 0x4
0x110: V68 = CALLDATALOAD 0x4
0x111: V69 = 0xffffffffffffffffffffffffffffffffffffffff
0x126: V70 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0x128: V71 = 0x20
0x12a: V72 = ADD 0x20 0x4
0x130: V73 = 0x2ac
0x133: JUMP 0x2ac
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x134, V70]
Exit stack: [V10, 0x134, V70]

================================

Block 0x134
[0x134:0x135]
---
Predecessors: [0x2ad]
Successors: []
---
0x134 JUMPDEST
0x135 STOP
---
0x134: JUMPDEST 
0x135: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x136
[0x136:0x13d]
---
Predecessors: [0x6b]
Successors: [0x2b0]
---
0x136 JUMPDEST
0x137 PUSH2 0x13e
0x13a PUSH2 0x2b0
0x13d JUMP
---
0x136: JUMPDEST 
0x137: V74 = 0x13e
0x13a: V75 = 0x2b0
0x13d: JUMP 0x2b0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x13e]
Exit stack: [V10, 0x13e]

================================

Block 0x13e
[0x13e:0x13f]
---
Predecessors: [0x45b]
Successors: []
---
0x13e JUMPDEST
0x13f STOP
---
0x13e: JUMPDEST 
0x13f: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x140
[0x140:0x197]
---
Predecessors: [0x87]
Successors: [0x198, 0x19d]
---
0x140 JUMPDEST
0x141 PUSH1 0x0
0x143 PUSH1 0x0
0x145 SWAP1
0x146 SLOAD
0x147 SWAP1
0x148 PUSH2 0x100
0x14b EXP
0x14c SWAP1
0x14d DIV
0x14e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x163 AND
0x164 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x179 AND
0x17a CALLER
0x17b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x190 AND
0x191 EQ
0x192 ISZERO
0x193 ISZERO
0x194 PUSH2 0x19d
0x197 JUMPI
---
0x140: JUMPDEST 
0x141: V76 = 0x0
0x143: V77 = 0x0
0x146: V78 = S[0x0]
0x148: V79 = 0x100
0x14b: V80 = EXP 0x100 0x0
0x14d: V81 = DIV V78 0x1
0x14e: V82 = 0xffffffffffffffffffffffffffffffffffffffff
0x163: V83 = AND 0xffffffffffffffffffffffffffffffffffffffff V81
0x164: V84 = 0xffffffffffffffffffffffffffffffffffffffff
0x179: V85 = AND 0xffffffffffffffffffffffffffffffffffffffff V83
0x17a: V86 = CALLER
0x17b: V87 = 0xffffffffffffffffffffffffffffffffffffffff
0x190: V88 = AND 0xffffffffffffffffffffffffffffffffffffffff V86
0x191: V89 = EQ V88 V85
0x192: V90 = ISZERO V89
0x193: V91 = ISZERO V90
0x194: V92 = 0x19d
0x197: JUMPI 0x19d V91
---
Entry stack: [V10, 0x8f]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x8f]

================================

Block 0x198
[0x198:0x19c]
---
Predecessors: [0x140]
Successors: []
---
0x198 PUSH1 0x0
0x19a PUSH1 0x0
0x19c REVERT
---
0x198: V93 = 0x0
0x19a: V94 = 0x0
0x19c: REVERT 0x0 0x0
---
Entry stack: [V10, 0x8f]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x8f]

================================

Block 0x19d
[0x19d:0x1b5]
---
Predecessors: [0x140]
Successors: []
---
0x19d JUMPDEST
0x19e CALLER
0x19f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b4 AND
0x1b5 SELFDESTRUCT
---
0x19d: JUMPDEST 
0x19e: V95 = CALLER
0x19f: V96 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b4: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0x1b5: SELFDESTRUCT V97
---
Entry stack: [V10, 0x8f]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x8f]

================================

Block 0x1b6
[0x1b6:0x1b7]
---
Predecessors: []
Successors: []
Has unresolved jump.
---
0x1b6 JUMPDEST
0x1b7 JUMP
---
0x1b6: JUMPDEST 
0x1b7: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1b8
[0x1b8:0x1bd]
---
Predecessors: [0x99]
Successors: [0xa1]
---
0x1b8 JUMPDEST
0x1b9 PUSH1 0x2
0x1bb SLOAD
0x1bc DUP2
0x1bd JUMP
---
0x1b8: JUMPDEST 
0x1b9: V98 = 0x2
0x1bb: V99 = S[0x2]
0x1bd: JUMP 0xa1
---
Entry stack: [V10, 0xa1]
Stack pops: 1
Stack additions: [S0, V99]
Exit stack: [V10, 0xa1, V99]

================================

Block 0x1be
[0x1be:0x215]
---
Predecessors: [0xbf]
Successors: [0x216, 0x21b]
---
0x1be JUMPDEST
0x1bf PUSH1 0x0
0x1c1 PUSH1 0x0
0x1c3 SWAP1
0x1c4 SLOAD
0x1c5 SWAP1
0x1c6 PUSH2 0x100
0x1c9 EXP
0x1ca SWAP1
0x1cb DIV
0x1cc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e1 AND
0x1e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f7 AND
0x1f8 CALLER
0x1f9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20e AND
0x20f EQ
0x210 ISZERO
0x211 ISZERO
0x212 PUSH2 0x21b
0x215 JUMPI
---
0x1be: JUMPDEST 
0x1bf: V100 = 0x0
0x1c1: V101 = 0x0
0x1c4: V102 = S[0x0]
0x1c6: V103 = 0x100
0x1c9: V104 = EXP 0x100 0x0
0x1cb: V105 = DIV V102 0x1
0x1cc: V106 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e1: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V105
0x1e2: V108 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f7: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff V107
0x1f8: V110 = CALLER
0x1f9: V111 = 0xffffffffffffffffffffffffffffffffffffffff
0x20e: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x20f: V113 = EQ V112 V109
0x210: V114 = ISZERO V113
0x211: V115 = ISZERO V114
0x212: V116 = 0x21b
0x215: JUMPI 0x21b V115
---
Entry stack: [V10, 0xf4, V54, V57]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf4, V54, V57]

================================

Block 0x216
[0x216:0x21a]
---
Predecessors: [0x1be]
Successors: []
---
0x216 PUSH1 0x0
0x218 PUSH1 0x0
0x21a REVERT
---
0x216: V117 = 0x0
0x218: V118 = 0x0
0x21a: REVERT 0x0 0x0
---
Entry stack: [V10, 0xf4, V54, V57]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf4, V54, V57]

================================

Block 0x21b
[0x21b:0x263]
---
Predecessors: [0x1be]
Successors: [0x264]
---
0x21b JUMPDEST
0x21c DUP1
0x21d PUSH1 0x2
0x21f DUP2
0x220 SWAP1
0x221 SSTORE
0x222 POP
0x223 DUP2
0x224 PUSH1 0x3
0x226 PUSH1 0x0
0x228 PUSH2 0x100
0x22b EXP
0x22c DUP2
0x22d SLOAD
0x22e DUP2
0x22f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x244 MUL
0x245 NOT
0x246 AND
0x247 SWAP1
0x248 DUP4
0x249 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x25e AND
0x25f MUL
0x260 OR
0x261 SWAP1
0x262 SSTORE
0x263 POP
---
0x21b: JUMPDEST 
0x21d: V119 = 0x2
0x221: S[0x2] = V57
0x224: V120 = 0x3
0x226: V121 = 0x0
0x228: V122 = 0x100
0x22b: V123 = EXP 0x100 0x0
0x22d: V124 = S[0x3]
0x22f: V125 = 0xffffffffffffffffffffffffffffffffffffffff
0x244: V126 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x245: V127 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x246: V128 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V124
0x249: V129 = 0xffffffffffffffffffffffffffffffffffffffff
0x25e: V130 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0x25f: V131 = MUL V130 0x1
0x260: V132 = OR V131 V128
0x262: S[0x3] = V132
---
Entry stack: [V10, 0xf4, V54, V57]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0xf4, V54, V57]

================================

Block 0x264
[0x264:0x267]
---
Predecessors: [0x21b]
Successors: [0xf4]
---
0x264 JUMPDEST
0x265 POP
0x266 POP
0x267 JUMP
---
0x264: JUMPDEST 
0x267: JUMP 0xf4
---
Entry stack: [V10, 0xf4, V54, V57]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x268
[0x268:0x2a9]
---
Predecessors: [0xf6]
Successors: [0x2aa]
---
0x268 JUMPDEST
0x269 ADDRESS
0x26a PUSH1 0x1
0x26c PUSH1 0x0
0x26e PUSH2 0x100
0x271 EXP
0x272 DUP2
0x273 SLOAD
0x274 DUP2
0x275 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28a MUL
0x28b NOT
0x28c AND
0x28d SWAP1
0x28e DUP4
0x28f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a4 AND
0x2a5 MUL
0x2a6 OR
0x2a7 SWAP1
0x2a8 SSTORE
0x2a9 POP
---
0x268: JUMPDEST 
0x269: V133 = ADDRESS
0x26a: V134 = 0x1
0x26c: V135 = 0x0
0x26e: V136 = 0x100
0x271: V137 = EXP 0x100 0x0
0x273: V138 = S[0x1]
0x275: V139 = 0xffffffffffffffffffffffffffffffffffffffff
0x28a: V140 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x28b: V141 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x28c: V142 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V138
0x28f: V143 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a4: V144 = AND 0xffffffffffffffffffffffffffffffffffffffff V133
0x2a5: V145 = MUL V144 0x1
0x2a6: V146 = OR V145 V142
0x2a8: S[0x1] = V146
---
Entry stack: [V10, 0xfe]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xfe]

================================

Block 0x2aa
[0x2aa:0x2ab]
---
Predecessors: [0x268]
Successors: [0xfe]
---
0x2aa JUMPDEST
0x2ab JUMP
---
0x2aa: JUMPDEST 
0x2ab: JUMP 0xfe
---
Entry stack: [V10, 0xfe]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x2ac
[0x2ac:0x2ac]
---
Predecessors: [0x108]
Successors: [0x2ad]
---
0x2ac JUMPDEST
---
0x2ac: JUMPDEST 
---
Entry stack: [V10, 0x134, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x134, V70]

================================

Block 0x2ad
[0x2ad:0x2af]
---
Predecessors: [0x2ac]
Successors: [0x134]
---
0x2ad JUMPDEST
0x2ae POP
0x2af JUMP
---
0x2ad: JUMPDEST 
0x2af: JUMP 0x134
---
Entry stack: [V10, 0x134, V70]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x2b0
[0x2b0:0x2fb]
---
Predecessors: [0x136]
Successors: [0x2fc, 0x45a]
---
0x2b0 JUMPDEST
0x2b1 CALLER
0x2b2 PUSH1 0x1
0x2b4 PUSH1 0x0
0x2b6 PUSH2 0x100
0x2b9 EXP
0x2ba DUP2
0x2bb SLOAD
0x2bc DUP2
0x2bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d2 MUL
0x2d3 NOT
0x2d4 AND
0x2d5 SWAP1
0x2d6 DUP4
0x2d7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ec AND
0x2ed MUL
0x2ee OR
0x2ef SWAP1
0x2f0 SSTORE
0x2f1 POP
0x2f2 PUSH1 0x2
0x2f4 SLOAD
0x2f5 CALLVALUE
0x2f6 GT
0x2f7 ISZERO
0x2f8 PUSH2 0x45a
0x2fb JUMPI
---
0x2b0: JUMPDEST 
0x2b1: V147 = CALLER
0x2b2: V148 = 0x1
0x2b4: V149 = 0x0
0x2b6: V150 = 0x100
0x2b9: V151 = EXP 0x100 0x0
0x2bb: V152 = S[0x1]
0x2bd: V153 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d2: V154 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x2d3: V155 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2d4: V156 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V152
0x2d7: V157 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ec: V158 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0x2ed: V159 = MUL V158 0x1
0x2ee: V160 = OR V159 V156
0x2f0: S[0x1] = V160
0x2f2: V161 = 0x2
0x2f4: V162 = S[0x2]
0x2f5: V163 = CALLVALUE
0x2f6: V164 = GT V163 V162
0x2f7: V165 = ISZERO V164
0x2f8: V166 = 0x45a
0x2fb: JUMPI 0x45a V165
---
Entry stack: [V10, 0x13e]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x13e]

================================

Block 0x2fc
[0x2fc:0x3da]
---
Predecessors: [0x2b0]
Successors: [0x3db, 0x3dc]
---
0x2fc PUSH1 0x3
0x2fe PUSH1 0x0
0x300 SWAP1
0x301 SLOAD
0x302 SWAP1
0x303 PUSH2 0x100
0x306 EXP
0x307 SWAP1
0x308 DIV
0x309 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x31e AND
0x31f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x334 AND
0x335 PUSH1 0x40
0x337 MLOAD
0x338 DUP1
0x339 DUP1
0x33a PUSH32 0x6c6f674576656e74282900000000000000000000000000000000000000000000
0x35b DUP2
0x35c MSTORE
0x35d POP
0x35e PUSH1 0xa
0x360 ADD
0x361 SWAP1
0x362 POP
0x363 PUSH1 0x40
0x365 MLOAD
0x366 DUP1
0x367 SWAP2
0x368 SUB
0x369 SWAP1
0x36a SHA3
0x36b PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x389 SWAP1
0x38a DIV
0x38b PUSH1 0x0
0x38d PUSH1 0x40
0x38f MLOAD
0x390 PUSH1 0x20
0x392 ADD
0x393 MSTORE
0x394 PUSH1 0x40
0x396 MLOAD
0x397 DUP2
0x398 PUSH4 0xffffffff
0x39d AND
0x39e PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x3bc MUL
0x3bd DUP2
0x3be MSTORE
0x3bf PUSH1 0x4
0x3c1 ADD
0x3c2 DUP1
0x3c3 SWAP1
0x3c4 POP
0x3c5 PUSH1 0x20
0x3c7 PUSH1 0x40
0x3c9 MLOAD
0x3ca DUP1
0x3cb DUP4
0x3cc SUB
0x3cd DUP2
0x3ce DUP7
0x3cf PUSH2 0x2c6
0x3d2 GAS
0x3d3 SUB
0x3d4 DELEGATECALL
0x3d5 ISZERO
0x3d6 ISZERO
0x3d7 PUSH2 0x3dc
0x3da JUMPI
---
0x2fc: V167 = 0x3
0x2fe: V168 = 0x0
0x301: V169 = S[0x3]
0x303: V170 = 0x100
0x306: V171 = EXP 0x100 0x0
0x308: V172 = DIV V169 0x1
0x309: V173 = 0xffffffffffffffffffffffffffffffffffffffff
0x31e: V174 = AND 0xffffffffffffffffffffffffffffffffffffffff V172
0x31f: V175 = 0xffffffffffffffffffffffffffffffffffffffff
0x334: V176 = AND 0xffffffffffffffffffffffffffffffffffffffff V174
0x335: V177 = 0x40
0x337: V178 = M[0x40]
0x33a: V179 = 0x6c6f674576656e74282900000000000000000000000000000000000000000000
0x35c: M[V178] = 0x6c6f674576656e74282900000000000000000000000000000000000000000000
0x35e: V180 = 0xa
0x360: V181 = ADD 0xa V178
0x363: V182 = 0x40
0x365: V183 = M[0x40]
0x368: V184 = SUB V181 V183
0x36a: V185 = SHA3 V183 V184
0x36b: V186 = 0x100000000000000000000000000000000000000000000000000000000
0x38a: V187 = DIV V185 0x100000000000000000000000000000000000000000000000000000000
0x38b: V188 = 0x0
0x38d: V189 = 0x40
0x38f: V190 = M[0x40]
0x390: V191 = 0x20
0x392: V192 = ADD 0x20 V190
0x393: M[V192] = 0x0
0x394: V193 = 0x40
0x396: V194 = M[0x40]
0x398: V195 = 0xffffffff
0x39d: V196 = AND 0xffffffff V187
0x39e: V197 = 0x100000000000000000000000000000000000000000000000000000000
0x3bc: V198 = MUL 0x100000000000000000000000000000000000000000000000000000000 V196
0x3be: M[V194] = V198
0x3bf: V199 = 0x4
0x3c1: V200 = ADD 0x4 V194
0x3c5: V201 = 0x20
0x3c7: V202 = 0x40
0x3c9: V203 = M[0x40]
0x3cc: V204 = SUB V200 V203
0x3cf: V205 = 0x2c6
0x3d2: V206 = GAS
0x3d3: V207 = SUB V206 0x2c6
0x3d4: V208 = DELEGATECALL V207 V176 V203 V204 V203 0x20
0x3d5: V209 = ISZERO V208
0x3d6: V210 = ISZERO V209
0x3d7: V211 = 0x3dc
0x3da: JUMPI 0x3dc V210
---
Entry stack: [V10, 0x13e]
Stack pops: 0
Stack additions: [V176, V187, V200]
Exit stack: [V10, 0x13e, V176, V187, V200]

================================

Block 0x3db
[0x3db:0x3db]
---
Predecessors: [0x2fc]
Successors: []
---
0x3db INVALID
---
0x3db: INVALID 
---
Entry stack: [V10, 0x13e, V176, V187, V200]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x13e, V176, V187, V200]

================================

Block 0x3dc
[0x3dc:0x459]
---
Predecessors: [0x2fc]
Successors: [0x45a]
---
0x3dc JUMPDEST
0x3dd POP
0x3de POP
0x3df POP
0x3e0 PUSH1 0x40
0x3e2 MLOAD
0x3e3 DUP1
0x3e4 MLOAD
0x3e5 SWAP1
0x3e6 POP
0x3e7 POP
0x3e8 PUSH1 0x1
0x3ea PUSH1 0x0
0x3ec SWAP1
0x3ed SLOAD
0x3ee SWAP1
0x3ef PUSH2 0x100
0x3f2 EXP
0x3f3 SWAP1
0x3f4 DIV
0x3f5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x40a AND
0x40b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x420 AND
0x421 PUSH2 0x8fc
0x424 ADDRESS
0x425 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x43a AND
0x43b BALANCE
0x43c SWAP1
0x43d DUP2
0x43e ISZERO
0x43f MUL
0x440 SWAP1
0x441 PUSH1 0x40
0x443 MLOAD
0x444 DUP1
0x445 SWAP1
0x446 POP
0x447 PUSH1 0x0
0x449 PUSH1 0x40
0x44b MLOAD
0x44c DUP1
0x44d DUP4
0x44e SUB
0x44f DUP2
0x450 DUP6
0x451 DUP9
0x452 DUP9
0x453 CALL
0x454 SWAP4
0x455 POP
0x456 POP
0x457 POP
0x458 POP
0x459 POP
---
0x3dc: JUMPDEST 
0x3e0: V212 = 0x40
0x3e2: V213 = M[0x40]
0x3e4: V214 = M[V213]
0x3e8: V215 = 0x1
0x3ea: V216 = 0x0
0x3ed: V217 = S[0x1]
0x3ef: V218 = 0x100
0x3f2: V219 = EXP 0x100 0x0
0x3f4: V220 = DIV V217 0x1
0x3f5: V221 = 0xffffffffffffffffffffffffffffffffffffffff
0x40a: V222 = AND 0xffffffffffffffffffffffffffffffffffffffff V220
0x40b: V223 = 0xffffffffffffffffffffffffffffffffffffffff
0x420: V224 = AND 0xffffffffffffffffffffffffffffffffffffffff V222
0x421: V225 = 0x8fc
0x424: V226 = ADDRESS
0x425: V227 = 0xffffffffffffffffffffffffffffffffffffffff
0x43a: V228 = AND 0xffffffffffffffffffffffffffffffffffffffff V226
0x43b: V229 = BALANCE V228
0x43e: V230 = ISZERO V229
0x43f: V231 = MUL V230 0x8fc
0x441: V232 = 0x40
0x443: V233 = M[0x40]
0x447: V234 = 0x0
0x449: V235 = 0x40
0x44b: V236 = M[0x40]
0x44e: V237 = SUB V233 V236
0x453: V238 = CALL V231 V224 V229 V236 V237 V236 0x0
---
Entry stack: [V10, 0x13e, V176, V187, V200]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x13e]

================================

Block 0x45a
[0x45a:0x45a]
---
Predecessors: [0x2b0, 0x3dc]
Successors: [0x45b]
---
0x45a JUMPDEST
---
0x45a: JUMPDEST 
---
Entry stack: [V10, 0x13e]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x13e]

================================

Block 0x45b
[0x45b:0x45c]
---
Predecessors: [0x45a]
Successors: [0x13e]
---
0x45b JUMPDEST
0x45c JUMP
---
0x45b: JUMPDEST 
0x45c: JUMP 0x13e
---
Entry stack: [V10, 0x13e]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x45d
[0x45d:0x490]
---
Predecessors: []
Successors: []
---
0x45d STOP
0x45e LOG1
0x45f PUSH6 0x627a7a723058
0x466 SHA3
0x467 LOG3
0x468 PUSH14 0x36ab1f5393a5888bd46eb9576fa8
0x477 ADDMOD
0x478 PUSH6 0xc15e31a63cf8
0x47f PUSH17 0x29320046f110160029
---
0x45d: STOP 
0x45e: LOG S0 S1 S2
0x45f: V239 = 0x627a7a723058
0x466: V240 = SHA3 0x627a7a723058 S3
0x467: LOG V240 S4 S5 S6 S7
0x468: V241 = 0x36ab1f5393a5888bd46eb9576fa8
0x477: V242 = ADDMOD 0x36ab1f5393a5888bd46eb9576fa8 S8 S9
0x478: V243 = 0xc15e31a63cf8
0x47f: V244 = 0x29320046f110160029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x29320046f110160029, 0xc15e31a63cf8, V242]
Exit stack: []

================================

Function 0:
Public function signature: 0x41c0e1b5
Entry block: 0x7f
Exit block: 0x19d
Body: 0x7f, 0x86, 0x87, 0x140, 0x198, 0x19d

Function 1:
Public function signature: 0x4f057506
Entry block: 0x91
Exit block: 0xa1
Body: 0x91, 0x98, 0x99, 0xa1, 0x1b8

Function 2:
Public function signature: 0x5f66d2a9
Entry block: 0xb7
Exit block: 0xf4
Body: 0xb7, 0xbe, 0xbf, 0xf4, 0x1be, 0x216, 0x21b, 0x264

Function 3:
Public function signature: 0xa5fe0872
Entry block: 0xf6
Exit block: 0xfe
Body: 0xf6, 0xfe, 0x268, 0x2aa

Function 4:
Public function signature: 0xa6f9dae1
Entry block: 0x100
Exit block: 0x134
Body: 0x100, 0x107, 0x108, 0x134, 0x2ac, 0x2ad

Function 5:
Public function signature: 0xd4e93292
Entry block: 0x136
Exit block: 0x13e
Body: 0x136, 0x13e, 0x2b0, 0x2fc, 0x3db, 0x3dc, 0x45a, 0x45b

Function 6:
Public fallback function
Entry block: 0x76
Exit block: 0x7d
Body: 0x76, 0x7a, 0x7b, 0x7d

