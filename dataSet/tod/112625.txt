Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x72]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x72
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x72
0xa: JUMPI 0x72 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xd5]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x3ccfd60b
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xd5
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x3ccfd60b
0x20: V14 = EQ V12 0x3ccfd60b
0x21: V15 = 0xd5
0x24: JUMPI 0xd5 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xe7]
---
0x25 DUP1
0x26 PUSH4 0x469bb426
0x2b EQ
0x2c PUSH2 0xe7
0x2f JUMPI
---
0x26: V16 = 0x469bb426
0x2b: V17 = EQ 0x469bb426 V12
0x2c: V18 = 0xe7
0x2f: JUMPI 0xe7 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x115]
---
0x30 DUP1
0x31 PUSH4 0x52d6804d
0x36 EQ
0x37 PUSH2 0x115
0x3a JUMPI
---
0x31: V19 = 0x52d6804d
0x36: V20 = EQ 0x52d6804d V12
0x37: V21 = 0x115
0x3a: JUMPI 0x115 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x137]
---
0x3b DUP1
0x3c PUSH4 0x6643caba
0x41 EQ
0x42 PUSH2 0x137
0x45 JUMPI
---
0x3c: V22 = 0x6643caba
0x41: V23 = EQ 0x6643caba V12
0x42: V24 = 0x137
0x45: JUMPI 0x137 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x153]
---
0x46 DUP1
0x47 PUSH4 0x8e468a88
0x4c EQ
0x4d PUSH2 0x153
0x50 JUMPI
---
0x47: V25 = 0x8e468a88
0x4c: V26 = EQ 0x8e468a88 V12
0x4d: V27 = 0x153
0x50: JUMPI 0x153 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x181]
---
0x51 DUP1
0x52 PUSH4 0xe81e1ccc
0x57 EQ
0x58 PUSH2 0x181
0x5b JUMPI
---
0x52: V28 = 0xe81e1ccc
0x57: V29 = EQ 0xe81e1ccc V12
0x58: V30 = 0x181
0x5b: JUMPI 0x181 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x193]
---
0x5c DUP1
0x5d PUSH4 0xe8757d19
0x62 EQ
0x63 PUSH2 0x193
0x66 JUMPI
---
0x5d: V31 = 0xe8757d19
0x62: V32 = EQ 0xe8757d19 V12
0x63: V33 = 0x193
0x66: JUMPI 0x193 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x1b5]
---
0x67 DUP1
0x68 PUSH4 0xed88c68e
0x6d EQ
0x6e PUSH2 0x1b5
0x71 JUMPI
---
0x68: V34 = 0xed88c68e
0x6d: V35 = EQ 0xed88c68e V12
0x6e: V36 = 0x1b5
0x71: JUMPI 0x1b5 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x78]
---
Predecessors: [0x0, 0x67]
Successors: [0x79, 0x7a]
---
0x72 JUMPDEST
0x73 CALLVALUE
0x74 ISZERO
0x75 PUSH2 0x7a
0x78 JUMPI
---
0x72: JUMPDEST 
0x73: V37 = CALLVALUE
0x74: V38 = ISZERO V37
0x75: V39 = 0x7a
0x78: JUMPI 0x7a V38
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x79
[0x79:0x79]
---
Predecessors: [0x72]
Successors: []
---
0x79 INVALID
---
0x79: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7a
[0x7a:0x7d]
---
Predecessors: [0x72]
Successors: [0x7e]
---
0x7a JUMPDEST
0x7b PUSH2 0xd3
---
0x7a: JUMPDEST 
0x7b: V40 = 0xd3
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd3]
Exit stack: [V12, 0xd3]

================================

Block 0x7e
[0x7e:0xd0]
---
Predecessors: [0x7a]
Successors: [0xd1]
---
0x7e JUMPDEST
0x7f PUSH1 0x40
0x81 DUP1
0x82 MLOAD
0x83 PUSH1 0x20
0x85 DUP1
0x86 DUP3
0x87 MSTORE
0x88 PUSH1 0x12
0x8a SWAP1
0x8b DUP3
0x8c ADD
0x8d MSTORE
0x8e PUSH1 0x72
0x90 PUSH1 0x2
0x92 EXP
0x93 PUSH18 0x139bc8199d5b98dd1a5bdb8818d85b1b1959
0xa6 MUL
0xa7 DUP2
0xa8 DUP4
0xa9 ADD
0xaa MSTORE
0xab SWAP1
0xac MLOAD
0xad PUSH1 0x1
0xaf PUSH1 0xa0
0xb1 PUSH1 0x2
0xb3 EXP
0xb4 SUB
0xb5 CALLER
0xb6 AND
0xb7 SWAP2
0xb8 PUSH1 0x0
0xba DUP1
0xbb MLOAD
0xbc PUSH1 0x20
0xbe PUSH2 0x68d
0xc1 DUP4
0xc2 CODECOPY
0xc3 DUP2
0xc4 MLOAD
0xc5 SWAP2
0xc6 MSTORE
0xc7 SWAP2
0xc8 SWAP1
0xc9 DUP2
0xca SWAP1
0xcb SUB
0xcc PUSH1 0x60
0xce ADD
0xcf SWAP1
0xd0 LOG2
---
0x7e: JUMPDEST 
0x7f: V41 = 0x40
0x82: V42 = M[0x40]
0x83: V43 = 0x20
0x87: M[V42] = 0x20
0x88: V44 = 0x12
0x8c: V45 = ADD V42 0x20
0x8d: M[V45] = 0x12
0x8e: V46 = 0x72
0x90: V47 = 0x2
0x92: V48 = EXP 0x2 0x72
0x93: V49 = 0x139bc8199d5b98dd1a5bdb8818d85b1b1959
0xa6: V50 = MUL 0x139bc8199d5b98dd1a5bdb8818d85b1b1959 0x40000000000000000000000000000
0xa9: V51 = ADD 0x40 V42
0xaa: M[V51] = 0x4e6f2066756e6374696f6e2063616c6c65640000000000000000000000000000
0xac: V52 = M[0x40]
0xad: V53 = 0x1
0xaf: V54 = 0xa0
0xb1: V55 = 0x2
0xb3: V56 = EXP 0x2 0xa0
0xb4: V57 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb5: V58 = CALLER
0xb6: V59 = AND V58 0xffffffffffffffffffffffffffffffffffffffff
0xb8: V60 = 0x0
0xbb: V61 = M[0x0]
0xbc: V62 = 0x20
0xbe: V63 = 0x68d
0xc2: CODECOPY 0x0 0x68d 0x20
0xc4: V64 = M[0x0]
0xc6: M[0x0] = V61
0xcb: V65 = SUB V42 V52
0xcc: V66 = 0x60
0xce: V67 = ADD 0x60 V65
0xd0: LOG V52 V67 V64 V59
---
Entry stack: [V12, 0xd3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd3]

================================

Block 0xd1
[0xd1:0xd2]
---
Predecessors: [0x7e]
Successors: [0xd3]
---
0xd1 JUMPDEST
0xd2 JUMP
---
0xd1: JUMPDEST 
0xd2: JUMP 0xd3
---
Entry stack: [V12, 0xd3]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xd3
[0xd3:0xd4]
---
Predecessors: [0xd1, 0x229]
Successors: []
---
0xd3 JUMPDEST
0xd4 STOP
---
0xd3: JUMPDEST 
0xd4: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xdb]
---
Predecessors: [0xb]
Successors: [0xdc, 0xdd]
---
0xd5 JUMPDEST
0xd6 CALLVALUE
0xd7 ISZERO
0xd8 PUSH2 0xdd
0xdb JUMPI
---
0xd5: JUMPDEST 
0xd6: V68 = CALLVALUE
0xd7: V69 = ISZERO V68
0xd8: V70 = 0xdd
0xdb: JUMPI 0xdd V69
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xdc
[0xdc:0xdc]
---
Predecessors: [0xd5]
Successors: []
---
0xdc INVALID
---
0xdc: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xdd
[0xdd:0xe4]
---
Predecessors: [0xd5]
Successors: [0x1d1]
---
0xdd JUMPDEST
0xde PUSH2 0xd3
0xe1 PUSH2 0x1d1
0xe4 JUMP
---
0xdd: JUMPDEST 
0xde: V71 = 0xd3
0xe1: V72 = 0x1d1
0xe4: JUMP 0x1d1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd3]
Exit stack: [V12, 0xd3]

================================

Block 0xe5
[0xe5:0xe6]
---
Predecessors: []
Successors: []
---
0xe5 JUMPDEST
0xe6 STOP
---
0xe5: JUMPDEST 
0xe6: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xe7
[0xe7:0xed]
---
Predecessors: [0x25]
Successors: [0xee, 0xef]
---
0xe7 JUMPDEST
0xe8 CALLVALUE
0xe9 ISZERO
0xea PUSH2 0xef
0xed JUMPI
---
0xe7: JUMPDEST 
0xe8: V73 = CALLVALUE
0xe9: V74 = ISZERO V73
0xea: V75 = 0xef
0xed: JUMPI 0xef V74
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xee
[0xee:0xee]
---
Predecessors: [0xe7]
Successors: []
---
0xee INVALID
---
0xee: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xef
[0xef:0x102]
---
Predecessors: [0xe7]
Successors: [0x22c]
---
0xef JUMPDEST
0xf0 PUSH2 0x103
0xf3 PUSH1 0x1
0xf5 PUSH1 0xa0
0xf7 PUSH1 0x2
0xf9 EXP
0xfa SUB
0xfb PUSH1 0x4
0xfd CALLDATALOAD
0xfe AND
0xff PUSH2 0x22c
0x102 JUMP
---
0xef: JUMPDEST 
0xf0: V76 = 0x103
0xf3: V77 = 0x1
0xf5: V78 = 0xa0
0xf7: V79 = 0x2
0xf9: V80 = EXP 0x2 0xa0
0xfa: V81 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfb: V82 = 0x4
0xfd: V83 = CALLDATALOAD 0x4
0xfe: V84 = AND V83 0xffffffffffffffffffffffffffffffffffffffff
0xff: V85 = 0x22c
0x102: JUMP 0x22c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x103, V84]
Exit stack: [V12, 0x103, V84]

================================

Block 0x103
[0x103:0x114]
---
Predecessors: [0x22c, 0x23e, 0x3d1, 0x428]
Successors: []
---
0x103 JUMPDEST
0x104 PUSH1 0x40
0x106 DUP1
0x107 MLOAD
0x108 SWAP2
0x109 DUP3
0x10a MSTORE
0x10b MLOAD
0x10c SWAP1
0x10d DUP2
0x10e SWAP1
0x10f SUB
0x110 PUSH1 0x20
0x112 ADD
0x113 SWAP1
0x114 RETURN
---
0x103: JUMPDEST 
0x104: V86 = 0x40
0x107: V87 = M[0x40]
0x10a: M[V87] = S0
0x10b: V88 = M[0x40]
0x10f: V89 = SUB V87 V88
0x110: V90 = 0x20
0x112: V91 = ADD 0x20 V89
0x114: RETURN V88 V91
---
Entry stack: [V12, 0x103, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x103]

================================

Block 0x115
[0x115:0x11b]
---
Predecessors: [0x30]
Successors: [0x11c, 0x11d]
---
0x115 JUMPDEST
0x116 CALLVALUE
0x117 ISZERO
0x118 PUSH2 0x11d
0x11b JUMPI
---
0x115: JUMPDEST 
0x116: V92 = CALLVALUE
0x117: V93 = ISZERO V92
0x118: V94 = 0x11d
0x11b: JUMPI 0x11d V93
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x11c
[0x11c:0x11c]
---
Predecessors: [0x115]
Successors: []
---
0x11c INVALID
---
0x11c: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x11d
[0x11d:0x124]
---
Predecessors: [0x115]
Successors: [0x23e]
---
0x11d JUMPDEST
0x11e PUSH2 0x103
0x121 PUSH2 0x23e
0x124 JUMP
---
0x11d: JUMPDEST 
0x11e: V95 = 0x103
0x121: V96 = 0x23e
0x124: JUMP 0x23e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x103]
Exit stack: [V12, 0x103]

================================

Block 0x125
[0x125:0x136]
---
Predecessors: []
Successors: []
---
0x125 JUMPDEST
0x126 PUSH1 0x40
0x128 DUP1
0x129 MLOAD
0x12a SWAP2
0x12b DUP3
0x12c MSTORE
0x12d MLOAD
0x12e SWAP1
0x12f DUP2
0x130 SWAP1
0x131 SUB
0x132 PUSH1 0x20
0x134 ADD
0x135 SWAP1
0x136 RETURN
---
0x125: JUMPDEST 
0x126: V97 = 0x40
0x129: V98 = M[0x40]
0x12c: M[V98] = S0
0x12d: V99 = M[0x40]
0x131: V100 = SUB V98 V99
0x132: V101 = 0x20
0x134: V102 = ADD 0x20 V100
0x136: RETURN V99 V102
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x137
[0x137:0x13e]
---
Predecessors: [0x3b]
Successors: [0x244]
---
0x137 JUMPDEST
0x138 PUSH2 0x13f
0x13b PUSH2 0x244
0x13e JUMP
---
0x137: JUMPDEST 
0x138: V103 = 0x13f
0x13b: V104 = 0x244
0x13e: JUMP 0x244
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x13f]
Exit stack: [V12, 0x13f]

================================

Block 0x13f
[0x13f:0x152]
---
Predecessors: [0x3cd, 0x667]
Successors: []
---
0x13f JUMPDEST
0x140 PUSH1 0x40
0x142 DUP1
0x143 MLOAD
0x144 SWAP2
0x145 ISZERO
0x146 ISZERO
0x147 DUP3
0x148 MSTORE
0x149 MLOAD
0x14a SWAP1
0x14b DUP2
0x14c SWAP1
0x14d SUB
0x14e PUSH1 0x20
0x150 ADD
0x151 SWAP1
0x152 RETURN
---
0x13f: JUMPDEST 
0x140: V105 = 0x40
0x143: V106 = M[0x40]
0x145: V107 = ISZERO {0x0, 0x1}
0x146: V108 = ISZERO V107
0x148: M[V106] = V108
0x149: V109 = M[0x40]
0x14d: V110 = SUB V106 V109
0x14e: V111 = 0x20
0x150: V112 = ADD 0x20 V110
0x152: RETURN V109 V112
---
Entry stack: [V12, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x153
[0x153:0x159]
---
Predecessors: [0x46]
Successors: [0x15a, 0x15b]
---
0x153 JUMPDEST
0x154 CALLVALUE
0x155 ISZERO
0x156 PUSH2 0x15b
0x159 JUMPI
---
0x153: JUMPDEST 
0x154: V113 = CALLVALUE
0x155: V114 = ISZERO V113
0x156: V115 = 0x15b
0x159: JUMPI 0x15b V114
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x15a
[0x15a:0x15a]
---
Predecessors: [0x153]
Successors: []
---
0x15a INVALID
---
0x15a: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x15b
[0x15b:0x16e]
---
Predecessors: [0x153]
Successors: [0x3d1]
---
0x15b JUMPDEST
0x15c PUSH2 0x103
0x15f PUSH1 0x1
0x161 PUSH1 0xa0
0x163 PUSH1 0x2
0x165 EXP
0x166 SUB
0x167 PUSH1 0x4
0x169 CALLDATALOAD
0x16a AND
0x16b PUSH2 0x3d1
0x16e JUMP
---
0x15b: JUMPDEST 
0x15c: V116 = 0x103
0x15f: V117 = 0x1
0x161: V118 = 0xa0
0x163: V119 = 0x2
0x165: V120 = EXP 0x2 0xa0
0x166: V121 = SUB 0x10000000000000000000000000000000000000000 0x1
0x167: V122 = 0x4
0x169: V123 = CALLDATALOAD 0x4
0x16a: V124 = AND V123 0xffffffffffffffffffffffffffffffffffffffff
0x16b: V125 = 0x3d1
0x16e: JUMP 0x3d1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x103, V124]
Exit stack: [V12, 0x103, V124]

================================

Block 0x16f
[0x16f:0x180]
---
Predecessors: []
Successors: []
---
0x16f JUMPDEST
0x170 PUSH1 0x40
0x172 DUP1
0x173 MLOAD
0x174 SWAP2
0x175 DUP3
0x176 MSTORE
0x177 MLOAD
0x178 SWAP1
0x179 DUP2
0x17a SWAP1
0x17b SUB
0x17c PUSH1 0x20
0x17e ADD
0x17f SWAP1
0x180 RETURN
---
0x16f: JUMPDEST 
0x170: V126 = 0x40
0x173: V127 = M[0x40]
0x176: M[V127] = S0
0x177: V128 = M[0x40]
0x17b: V129 = SUB V127 V128
0x17c: V130 = 0x20
0x17e: V131 = ADD 0x20 V129
0x180: RETURN V128 V131
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x181
[0x181:0x187]
---
Predecessors: [0x51]
Successors: [0x188, 0x189]
---
0x181 JUMPDEST
0x182 CALLVALUE
0x183 ISZERO
0x184 PUSH2 0x189
0x187 JUMPI
---
0x181: JUMPDEST 
0x182: V132 = CALLVALUE
0x183: V133 = ISZERO V132
0x184: V134 = 0x189
0x187: JUMPI 0x189 V133
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x188
[0x188:0x188]
---
Predecessors: [0x181]
Successors: []
---
0x188 INVALID
---
0x188: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x189
[0x189:0x190]
---
Predecessors: [0x181]
Successors: [0x3e3]
---
0x189 JUMPDEST
0x18a PUSH2 0xd3
0x18d PUSH2 0x3e3
0x190 JUMP
---
0x189: JUMPDEST 
0x18a: V135 = 0xd3
0x18d: V136 = 0x3e3
0x190: JUMP 0x3e3
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xd3]
Exit stack: [V12, 0xd3]

================================

Block 0x191
[0x191:0x192]
---
Predecessors: []
Successors: []
---
0x191 JUMPDEST
0x192 STOP
---
0x191: JUMPDEST 
0x192: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x193
[0x193:0x199]
---
Predecessors: [0x5c]
Successors: [0x19a, 0x19b]
---
0x193 JUMPDEST
0x194 CALLVALUE
0x195 ISZERO
0x196 PUSH2 0x19b
0x199 JUMPI
---
0x193: JUMPDEST 
0x194: V137 = CALLVALUE
0x195: V138 = ISZERO V137
0x196: V139 = 0x19b
0x199: JUMPI 0x19b V138
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x19a
[0x19a:0x19a]
---
Predecessors: [0x193]
Successors: []
---
0x19a INVALID
---
0x19a: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x19b
[0x19b:0x1a2]
---
Predecessors: [0x193]
Successors: [0x428]
---
0x19b JUMPDEST
0x19c PUSH2 0x103
0x19f PUSH2 0x428
0x1a2 JUMP
---
0x19b: JUMPDEST 
0x19c: V140 = 0x103
0x19f: V141 = 0x428
0x1a2: JUMP 0x428
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x103]
Exit stack: [V12, 0x103]

================================

Block 0x1a3
[0x1a3:0x1b4]
---
Predecessors: []
Successors: []
---
0x1a3 JUMPDEST
0x1a4 PUSH1 0x40
0x1a6 DUP1
0x1a7 MLOAD
0x1a8 SWAP2
0x1a9 DUP3
0x1aa MSTORE
0x1ab MLOAD
0x1ac SWAP1
0x1ad DUP2
0x1ae SWAP1
0x1af SUB
0x1b0 PUSH1 0x20
0x1b2 ADD
0x1b3 SWAP1
0x1b4 RETURN
---
0x1a3: JUMPDEST 
0x1a4: V142 = 0x40
0x1a7: V143 = M[0x40]
0x1aa: M[V143] = S0
0x1ab: V144 = M[0x40]
0x1af: V145 = SUB V143 V144
0x1b0: V146 = 0x20
0x1b2: V147 = ADD 0x20 V145
0x1b4: RETURN V144 V147
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1b5
[0x1b5:0x1bc]
---
Predecessors: [0x67]
Successors: [0x42e]
---
0x1b5 JUMPDEST
0x1b6 PUSH2 0x13f
0x1b9 PUSH2 0x42e
0x1bc JUMP
---
0x1b5: JUMPDEST 
0x1b6: V148 = 0x13f
0x1b9: V149 = 0x42e
0x1bc: JUMP 0x42e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x13f]
Exit stack: [V12, 0x13f]

================================

Block 0x1bd
[0x1bd:0x1d0]
---
Predecessors: []
Successors: []
---
0x1bd JUMPDEST
0x1be PUSH1 0x40
0x1c0 DUP1
0x1c1 MLOAD
0x1c2 SWAP2
0x1c3 ISZERO
0x1c4 ISZERO
0x1c5 DUP3
0x1c6 MSTORE
0x1c7 MLOAD
0x1c8 SWAP1
0x1c9 DUP2
0x1ca SWAP1
0x1cb SUB
0x1cc PUSH1 0x20
0x1ce ADD
0x1cf SWAP1
0x1d0 RETURN
---
0x1bd: JUMPDEST 
0x1be: V150 = 0x40
0x1c1: V151 = M[0x40]
0x1c3: V152 = ISZERO S0
0x1c4: V153 = ISZERO V152
0x1c6: M[V151] = V153
0x1c7: V154 = M[0x40]
0x1cb: V155 = SUB V151 V154
0x1cc: V156 = 0x20
0x1ce: V157 = ADD 0x20 V155
0x1d0: RETURN V154 V157
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1d1
[0x1d1:0x1e8]
---
Predecessors: [0xdd]
Successors: [0x1e9, 0x1ee]
---
0x1d1 JUMPDEST
0x1d2 PUSH1 0x0
0x1d4 DUP1
0x1d5 SLOAD
0x1d6 CALLER
0x1d7 PUSH1 0x1
0x1d9 PUSH1 0xa0
0x1db PUSH1 0x2
0x1dd EXP
0x1de SUB
0x1df SWAP1
0x1e0 DUP2
0x1e1 AND
0x1e2 SWAP2
0x1e3 AND
0x1e4 EQ
0x1e5 PUSH2 0x1ee
0x1e8 JUMPI
---
0x1d1: JUMPDEST 
0x1d2: V158 = 0x0
0x1d5: V159 = S[0x0]
0x1d6: V160 = CALLER
0x1d7: V161 = 0x1
0x1d9: V162 = 0xa0
0x1db: V163 = 0x2
0x1dd: V164 = EXP 0x2 0xa0
0x1de: V165 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e1: V166 = AND 0xffffffffffffffffffffffffffffffffffffffff V160
0x1e3: V167 = AND V159 0xffffffffffffffffffffffffffffffffffffffff
0x1e4: V168 = EQ V167 V166
0x1e5: V169 = 0x1ee
0x1e8: JUMPI 0x1ee V168
---
Entry stack: [V12, 0xd3]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0xd3, 0x0]

================================

Block 0x1e9
[0x1e9:0x1ed]
---
Predecessors: [0x1d1]
Successors: []
---
0x1e9 PUSH1 0x0
0x1eb PUSH1 0x0
0x1ed REVERT
---
0x1e9: V170 = 0x0
0x1eb: V171 = 0x0
0x1ed: REVERT 0x0 0x0
---
Entry stack: [V12, 0xd3, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd3, 0x0]

================================

Block 0x1ee
[0x1ee:0x225]
---
Predecessors: [0x1d1]
Successors: [0x226, 0x227]
---
0x1ee JUMPDEST
0x1ef POP
0x1f0 PUSH1 0x2
0x1f2 DUP1
0x1f3 SLOAD
0x1f4 PUSH1 0x0
0x1f6 SWAP2
0x1f7 DUP3
0x1f8 SWAP1
0x1f9 SSTORE
0x1fa PUSH1 0x40
0x1fc MLOAD
0x1fd SWAP1
0x1fe SWAP2
0x1ff PUSH1 0x1
0x201 PUSH1 0xa0
0x203 PUSH1 0x2
0x205 EXP
0x206 SUB
0x207 CALLER
0x208 AND
0x209 SWAP2
0x20a DUP4
0x20b ISZERO
0x20c PUSH2 0x8fc
0x20f MUL
0x210 SWAP2
0x211 DUP5
0x212 SWAP2
0x213 SWAP1
0x214 DUP2
0x215 DUP2
0x216 DUP2
0x217 DUP6
0x218 DUP9
0x219 DUP9
0x21a CALL
0x21b SWAP4
0x21c POP
0x21d POP
0x21e POP
0x21f POP
0x220 ISZERO
0x221 ISZERO
0x222 PUSH2 0x227
0x225 JUMPI
---
0x1ee: JUMPDEST 
0x1f0: V172 = 0x2
0x1f3: V173 = S[0x2]
0x1f4: V174 = 0x0
0x1f9: S[0x2] = 0x0
0x1fa: V175 = 0x40
0x1fc: V176 = M[0x40]
0x1ff: V177 = 0x1
0x201: V178 = 0xa0
0x203: V179 = 0x2
0x205: V180 = EXP 0x2 0xa0
0x206: V181 = SUB 0x10000000000000000000000000000000000000000 0x1
0x207: V182 = CALLER
0x208: V183 = AND V182 0xffffffffffffffffffffffffffffffffffffffff
0x20b: V184 = ISZERO V173
0x20c: V185 = 0x8fc
0x20f: V186 = MUL 0x8fc V184
0x21a: V187 = CALL V186 V183 V173 V176 0x0 V176 0x0
0x220: V188 = ISZERO V187
0x221: V189 = ISZERO V188
0x222: V190 = 0x227
0x225: JUMPI 0x227 V189
---
Entry stack: [V12, 0xd3, 0x0]
Stack pops: 1
Stack additions: [V173]
Exit stack: [V12, 0xd3, V173]

================================

Block 0x226
[0x226:0x226]
---
Predecessors: [0x1ee]
Successors: []
---
0x226 INVALID
---
0x226: INVALID 
---
Entry stack: [V12, 0xd3, V173]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd3, V173]

================================

Block 0x227
[0x227:0x227]
---
Predecessors: [0x1ee, 0x3e3]
Successors: [0x228]
---
0x227 JUMPDEST
---
0x227: JUMPDEST 
---
Entry stack: [V12, 0xd3, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd3, S0]

================================

Block 0x228
[0x228:0x228]
---
Predecessors: [0x227]
Successors: [0x229]
---
0x228 JUMPDEST
---
0x228: JUMPDEST 
---
Entry stack: [V12, 0xd3, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd3, S0]

================================

Block 0x229
[0x229:0x22b]
---
Predecessors: [0x228]
Successors: [0xd3]
---
0x229 JUMPDEST
0x22a POP
0x22b JUMP
---
0x229: JUMPDEST 
0x22b: JUMP 0xd3
---
Entry stack: [V12, 0xd3, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x22c
[0x22c:0x23d]
---
Predecessors: [0xef]
Successors: [0x103]
---
0x22c JUMPDEST
0x22d PUSH1 0x4
0x22f PUSH1 0x20
0x231 MSTORE
0x232 PUSH1 0x0
0x234 SWAP1
0x235 DUP2
0x236 MSTORE
0x237 PUSH1 0x40
0x239 SWAP1
0x23a SHA3
0x23b SLOAD
0x23c DUP2
0x23d JUMP
---
0x22c: JUMPDEST 
0x22d: V191 = 0x4
0x22f: V192 = 0x20
0x231: M[0x20] = 0x4
0x232: V193 = 0x0
0x236: M[0x0] = V84
0x237: V194 = 0x40
0x23a: V195 = SHA3 0x0 0x40
0x23b: V196 = S[V195]
0x23d: JUMP 0x103
---
Entry stack: [V12, 0x103, V84]
Stack pops: 2
Stack additions: [S1, V196]
Exit stack: [V12, 0x103, V196]

================================

Block 0x23e
[0x23e:0x243]
---
Predecessors: [0x11d]
Successors: [0x103]
---
0x23e JUMPDEST
0x23f PUSH1 0x5
0x241 SLOAD
0x242 DUP2
0x243 JUMP
---
0x23e: JUMPDEST 
0x23f: V197 = 0x5
0x241: V198 = S[0x5]
0x243: JUMP 0x103
---
Entry stack: [V12, 0x103]
Stack pops: 1
Stack additions: [S0, V198]
Exit stack: [V12, 0x103, V198]

================================

Block 0x244
[0x244:0x2a4]
---
Predecessors: [0x137]
Successors: [0x2a5, 0x2a6]
---
0x244 JUMPDEST
0x245 PUSH1 0x1
0x247 SLOAD
0x248 PUSH1 0x0
0x24a DUP1
0x24b SLOAD
0x24c PUSH1 0x40
0x24e DUP1
0x24f MLOAD
0x250 PUSH1 0x20
0x252 SWAP1
0x253 DUP2
0x254 ADD
0x255 DUP5
0x256 SWAP1
0x257 MSTORE
0x258 DUP2
0x259 MLOAD
0x25a PUSH1 0xe1
0x25c PUSH1 0x2
0x25e EXP
0x25f PUSH4 0x6eb1769f
0x264 MUL
0x265 DUP2
0x266 MSTORE
0x267 PUSH1 0x1
0x269 PUSH1 0xa0
0x26b PUSH1 0x2
0x26d EXP
0x26e SUB
0x26f SWAP4
0x270 DUP5
0x271 AND
0x272 PUSH1 0x4
0x274 DUP3
0x275 ADD
0x276 MSTORE
0x277 ADDRESS
0x278 DUP5
0x279 AND
0x27a PUSH1 0x24
0x27c DUP3
0x27d ADD
0x27e MSTORE
0x27f SWAP2
0x280 MLOAD
0x281 SWAP4
0x282 SWAP5
0x283 DUP6
0x284 SWAP5
0x285 SWAP4
0x286 AND
0x287 SWAP3
0x288 PUSH4 0xdd62ed3e
0x28d SWAP3
0x28e PUSH1 0x44
0x290 DUP1
0x291 DUP3
0x292 ADD
0x293 SWAP4
0x294 SWAP3
0x295 SWAP2
0x296 DUP3
0x297 SWAP1
0x298 SUB
0x299 ADD
0x29a DUP2
0x29b DUP8
0x29c DUP8
0x29d DUP1
0x29e EXTCODESIZE
0x29f ISZERO
0x2a0 ISZERO
0x2a1 PUSH2 0x2a6
0x2a4 JUMPI
---
0x244: JUMPDEST 
0x245: V199 = 0x1
0x247: V200 = S[0x1]
0x248: V201 = 0x0
0x24b: V202 = S[0x0]
0x24c: V203 = 0x40
0x24f: V204 = M[0x40]
0x250: V205 = 0x20
0x254: V206 = ADD 0x20 V204
0x257: M[V206] = 0x0
0x259: V207 = M[0x40]
0x25a: V208 = 0xe1
0x25c: V209 = 0x2
0x25e: V210 = EXP 0x2 0xe1
0x25f: V211 = 0x6eb1769f
0x264: V212 = MUL 0x6eb1769f 0x200000000000000000000000000000000000000000000000000000000
0x266: M[V207] = 0xdd62ed3e00000000000000000000000000000000000000000000000000000000
0x267: V213 = 0x1
0x269: V214 = 0xa0
0x26b: V215 = 0x2
0x26d: V216 = EXP 0x2 0xa0
0x26e: V217 = SUB 0x10000000000000000000000000000000000000000 0x1
0x271: V218 = AND 0xffffffffffffffffffffffffffffffffffffffff V202
0x272: V219 = 0x4
0x275: V220 = ADD V207 0x4
0x276: M[V220] = V218
0x277: V221 = ADDRESS
0x279: V222 = AND 0xffffffffffffffffffffffffffffffffffffffff V221
0x27a: V223 = 0x24
0x27d: V224 = ADD V207 0x24
0x27e: M[V224] = V222
0x280: V225 = M[0x40]
0x286: V226 = AND 0xffffffffffffffffffffffffffffffffffffffff V200
0x288: V227 = 0xdd62ed3e
0x28e: V228 = 0x44
0x292: V229 = ADD V207 0x44
0x298: V230 = SUB V207 V225
0x299: V231 = ADD V230 0x44
0x29e: V232 = EXTCODESIZE V226
0x29f: V233 = ISZERO V232
0x2a0: V234 = ISZERO V233
0x2a1: V235 = 0x2a6
0x2a4: JUMPI 0x2a6 V234
---
Entry stack: [V12, 0x13f]
Stack pops: 0
Stack additions: [0x0, 0x0, V226, 0xdd62ed3e, V229, 0x20, V225, V231, V225, 0x0, V226]
Exit stack: [V12, 0x13f, 0x0, 0x0, V226, 0xdd62ed3e, V229, 0x20, V225, V231, V225, 0x0, V226]

================================

Block 0x2a5
[0x2a5:0x2a5]
---
Predecessors: [0x244]
Successors: []
---
0x2a5 INVALID
---
0x2a5: INVALID 
---
Entry stack: [V12, 0x13f, 0x0, 0x0, V226, 0xdd62ed3e, V229, 0x20, V225, V231, V225, 0x0, V226]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x13f, 0x0, 0x0, V226, 0xdd62ed3e, V229, 0x20, V225, V231, V225, 0x0, V226]

================================

Block 0x2a6
[0x2a6:0x2b2]
---
Predecessors: [0x244]
Successors: [0x2b3, 0x2b4]
---
0x2a6 JUMPDEST
0x2a7 PUSH2 0x2c6
0x2aa GAS
0x2ab SUB
0x2ac CALL
0x2ad ISZERO
0x2ae ISZERO
0x2af PUSH2 0x2b4
0x2b2 JUMPI
---
0x2a6: JUMPDEST 
0x2a7: V236 = 0x2c6
0x2aa: V237 = GAS
0x2ab: V238 = SUB V237 0x2c6
0x2ac: V239 = CALL V238 V226 0x0 V225 V231 V225 0x20
0x2ad: V240 = ISZERO V239
0x2ae: V241 = ISZERO V240
0x2af: V242 = 0x2b4
0x2b2: JUMPI 0x2b4 V241
---
Entry stack: [V12, 0x13f, 0x0, 0x0, V226, 0xdd62ed3e, V229, 0x20, V225, V231, V225, 0x0, V226]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x13f, 0x0, 0x0, V226, 0xdd62ed3e, V229]

================================

Block 0x2b3
[0x2b3:0x2b3]
---
Predecessors: [0x2a6]
Successors: []
---
0x2b3 INVALID
---
0x2b3: INVALID 
---
Entry stack: [V12, 0x13f, 0x0, 0x0, V226, 0xdd62ed3e, V229]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x13f, 0x0, 0x0, V226, 0xdd62ed3e, V229]

================================

Block 0x2b4
[0x2b4:0x2c4]
---
Predecessors: [0x2a6]
Successors: [0x2c5, 0x35f]
---
0x2b4 JUMPDEST
0x2b5 POP
0x2b6 POP
0x2b7 PUSH1 0x40
0x2b9 MLOAD
0x2ba MLOAD
0x2bb SWAP2
0x2bc POP
0x2bd POP
0x2be DUP1
0x2bf ISZERO
0x2c0 ISZERO
0x2c1 PUSH2 0x35f
0x2c4 JUMPI
---
0x2b4: JUMPDEST 
0x2b7: V243 = 0x40
0x2b9: V244 = M[0x40]
0x2ba: V245 = M[V244]
0x2bf: V246 = ISZERO V245
0x2c0: V247 = ISZERO V246
0x2c1: V248 = 0x35f
0x2c4: JUMPI 0x35f V247
---
Entry stack: [V12, 0x13f, 0x0, 0x0, V226, 0xdd62ed3e, V229]
Stack pops: 4
Stack additions: [V245]
Exit stack: [V12, 0x13f, 0x0, V245]

================================

Block 0x2c5
[0x2c5:0x35e]
---
Predecessors: [0x2b4]
Successors: [0x3cd]
---
0x2c5 PUSH1 0x1
0x2c7 PUSH1 0xa0
0x2c9 PUSH1 0x2
0x2cb EXP
0x2cc SUB
0x2cd CALLER
0x2ce AND
0x2cf PUSH1 0x0
0x2d1 DUP2
0x2d2 DUP2
0x2d3 MSTORE
0x2d4 PUSH1 0x4
0x2d6 PUSH1 0x20
0x2d8 SWAP1
0x2d9 DUP2
0x2da MSTORE
0x2db PUSH1 0x40
0x2dd SWAP2
0x2de DUP3
0x2df SWAP1
0x2e0 SHA3
0x2e1 DUP1
0x2e2 SLOAD
0x2e3 CALLVALUE
0x2e4 ADD
0x2e5 SWAP1
0x2e6 SSTORE
0x2e7 DUP2
0x2e8 MLOAD
0x2e9 DUP2
0x2ea DUP2
0x2eb MSTORE
0x2ec SWAP1
0x2ed DUP2
0x2ee ADD
0x2ef DUP3
0x2f0 SWAP1
0x2f1 MSTORE
0x2f2 PUSH32 0x4e6f206d6f726520646f6e6174696f6e73206865726520636865636b204d616a
0x313 DUP2
0x314 DUP4
0x315 ADD
0x316 MSTORE
0x317 PUSH32 0x6f6f6c722e696f2c2063616c6c207769746864726177446f6e6174696f6e2829
0x338 PUSH1 0x60
0x33a DUP3
0x33b ADD
0x33c MSTORE
0x33d SWAP1
0x33e MLOAD
0x33f PUSH1 0x0
0x341 DUP1
0x342 MLOAD
0x343 PUSH1 0x20
0x345 PUSH2 0x68d
0x348 DUP4
0x349 CODECOPY
0x34a DUP2
0x34b MLOAD
0x34c SWAP2
0x34d MSTORE
0x34e SWAP2
0x34f DUP2
0x350 SWAP1
0x351 SUB
0x352 PUSH1 0x80
0x354 ADD
0x355 SWAP1
0x356 LOG2
0x357 PUSH1 0x0
0x359 SWAP2
0x35a POP
0x35b PUSH2 0x3cd
0x35e JUMP
---
0x2c5: V249 = 0x1
0x2c7: V250 = 0xa0
0x2c9: V251 = 0x2
0x2cb: V252 = EXP 0x2 0xa0
0x2cc: V253 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2cd: V254 = CALLER
0x2ce: V255 = AND V254 0xffffffffffffffffffffffffffffffffffffffff
0x2cf: V256 = 0x0
0x2d3: M[0x0] = V255
0x2d4: V257 = 0x4
0x2d6: V258 = 0x20
0x2da: M[0x20] = 0x4
0x2db: V259 = 0x40
0x2e0: V260 = SHA3 0x0 0x40
0x2e2: V261 = S[V260]
0x2e3: V262 = CALLVALUE
0x2e4: V263 = ADD V262 V261
0x2e6: S[V260] = V263
0x2e8: V264 = M[0x40]
0x2eb: M[V264] = 0x20
0x2ee: V265 = ADD V264 0x20
0x2f1: M[V265] = 0x40
0x2f2: V266 = 0x4e6f206d6f726520646f6e6174696f6e73206865726520636865636b204d616a
0x315: V267 = ADD 0x40 V264
0x316: M[V267] = 0x4e6f206d6f726520646f6e6174696f6e73206865726520636865636b204d616a
0x317: V268 = 0x6f6f6c722e696f2c2063616c6c207769746864726177446f6e6174696f6e2829
0x338: V269 = 0x60
0x33b: V270 = ADD V264 0x60
0x33c: M[V270] = 0x6f6f6c722e696f2c2063616c6c207769746864726177446f6e6174696f6e2829
0x33e: V271 = M[0x40]
0x33f: V272 = 0x0
0x342: V273 = M[0x0]
0x343: V274 = 0x20
0x345: V275 = 0x68d
0x349: CODECOPY 0x0 0x68d 0x20
0x34b: V276 = M[0x0]
0x34d: M[0x0] = V273
0x351: V277 = SUB V264 V271
0x352: V278 = 0x80
0x354: V279 = ADD 0x80 V277
0x356: LOG V271 V279 V276 V255
0x357: V280 = 0x0
0x35b: V281 = 0x3cd
0x35e: JUMP 0x3cd
---
Entry stack: [V12, 0x13f, 0x0, V245]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V12, 0x13f, 0x0, V245]

================================

Block 0x35f
[0x35f:0x3cc]
---
Predecessors: [0x2b4]
Successors: [0x3cd]
---
0x35f JUMPDEST
0x360 PUSH1 0x1
0x362 PUSH1 0xa0
0x364 PUSH1 0x2
0x366 EXP
0x367 SUB
0x368 CALLER
0x369 AND
0x36a PUSH1 0x0
0x36c DUP2
0x36d DUP2
0x36e MSTORE
0x36f PUSH1 0x3
0x371 PUSH1 0x20
0x373 SWAP1
0x374 DUP2
0x375 MSTORE
0x376 PUSH1 0x40
0x378 SWAP2
0x379 DUP3
0x37a SWAP1
0x37b SHA3
0x37c DUP1
0x37d SLOAD
0x37e CALLVALUE
0x37f SWAP1
0x380 DUP2
0x381 ADD
0x382 SWAP1
0x383 SWAP2
0x384 SSTORE
0x385 PUSH1 0x2
0x387 DUP1
0x388 SLOAD
0x389 SWAP1
0x38a SWAP2
0x38b ADD
0x38c SWAP1
0x38d SSTORE
0x38e DUP2
0x38f MLOAD
0x390 DUP2
0x391 DUP2
0x392 MSTORE
0x393 PUSH1 0x1c
0x395 SWAP2
0x396 DUP2
0x397 ADD
0x398 SWAP2
0x399 SWAP1
0x39a SWAP2
0x39b MSTORE
0x39c PUSH1 0x0
0x39e DUP1
0x39f MLOAD
0x3a0 PUSH1 0x20
0x3a2 PUSH2 0x6ad
0x3a5 DUP4
0x3a6 CODECOPY
0x3a7 DUP2
0x3a8 MLOAD
0x3a9 SWAP2
0x3aa MSTORE
0x3ab DUP2
0x3ac DUP4
0x3ad ADD
0x3ae MSTORE
0x3af SWAP1
0x3b0 MLOAD
0x3b1 PUSH1 0x0
0x3b3 DUP1
0x3b4 MLOAD
0x3b5 PUSH1 0x20
0x3b7 PUSH2 0x66d
0x3ba DUP4
0x3bb CODECOPY
0x3bc DUP2
0x3bd MLOAD
0x3be SWAP2
0x3bf MSTORE
0x3c0 SWAP2
0x3c1 DUP2
0x3c2 SWAP1
0x3c3 SUB
0x3c4 PUSH1 0x60
0x3c6 ADD
0x3c7 SWAP1
0x3c8 LOG2
0x3c9 PUSH1 0x1
0x3cb SWAP2
0x3cc POP
---
0x35f: JUMPDEST 
0x360: V282 = 0x1
0x362: V283 = 0xa0
0x364: V284 = 0x2
0x366: V285 = EXP 0x2 0xa0
0x367: V286 = SUB 0x10000000000000000000000000000000000000000 0x1
0x368: V287 = CALLER
0x369: V288 = AND V287 0xffffffffffffffffffffffffffffffffffffffff
0x36a: V289 = 0x0
0x36e: M[0x0] = V288
0x36f: V290 = 0x3
0x371: V291 = 0x20
0x375: M[0x20] = 0x3
0x376: V292 = 0x40
0x37b: V293 = SHA3 0x0 0x40
0x37d: V294 = S[V293]
0x37e: V295 = CALLVALUE
0x381: V296 = ADD V295 V294
0x384: S[V293] = V296
0x385: V297 = 0x2
0x388: V298 = S[0x2]
0x38b: V299 = ADD V295 V298
0x38d: S[0x2] = V299
0x38f: V300 = M[0x40]
0x392: M[V300] = 0x20
0x393: V301 = 0x1c
0x397: V302 = ADD V300 0x20
0x39b: M[V302] = 0x1c
0x39c: V303 = 0x0
0x39f: V304 = M[0x0]
0x3a0: V305 = 0x20
0x3a2: V306 = 0x6ad
0x3a6: CODECOPY 0x0 0x6ad 0x20
0x3a8: V307 = M[0x0]
0x3aa: M[0x0] = V304
0x3ad: V308 = ADD 0x40 V300
0x3ae: M[V308] = V307
0x3b0: V309 = M[0x40]
0x3b1: V310 = 0x0
0x3b4: V311 = M[0x0]
0x3b5: V312 = 0x20
0x3b7: V313 = 0x66d
0x3bb: CODECOPY 0x0 0x66d 0x20
0x3bd: V314 = M[0x0]
0x3bf: M[0x0] = V311
0x3c3: V315 = SUB V300 V309
0x3c4: V316 = 0x60
0x3c6: V317 = ADD 0x60 V315
0x3c8: LOG V309 V317 V314 V288
0x3c9: V318 = 0x1
---
Entry stack: [V12, 0x13f, 0x0, V245]
Stack pops: 2
Stack additions: [0x1, S0]
Exit stack: [V12, 0x13f, 0x1, V245]

================================

Block 0x3cd
[0x3cd:0x3d0]
---
Predecessors: [0x2c5, 0x35f]
Successors: [0x13f]
---
0x3cd JUMPDEST
0x3ce POP
0x3cf SWAP1
0x3d0 JUMP
---
0x3cd: JUMPDEST 
0x3d0: JUMP 0x13f
---
Entry stack: [V12, 0x13f, {0x0, 0x1}, V245]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V12, {0x0, 0x1}]

================================

Block 0x3d1
[0x3d1:0x3e2]
---
Predecessors: [0x15b]
Successors: [0x103]
---
0x3d1 JUMPDEST
0x3d2 PUSH1 0x3
0x3d4 PUSH1 0x20
0x3d6 MSTORE
0x3d7 PUSH1 0x0
0x3d9 SWAP1
0x3da DUP2
0x3db MSTORE
0x3dc PUSH1 0x40
0x3de SWAP1
0x3df SHA3
0x3e0 SLOAD
0x3e1 DUP2
0x3e2 JUMP
---
0x3d1: JUMPDEST 
0x3d2: V319 = 0x3
0x3d4: V320 = 0x20
0x3d6: M[0x20] = 0x3
0x3d7: V321 = 0x0
0x3db: M[0x0] = V124
0x3dc: V322 = 0x40
0x3df: V323 = SHA3 0x0 0x40
0x3e0: V324 = S[V323]
0x3e2: JUMP 0x103
---
Entry stack: [V12, 0x103, V124]
Stack pops: 2
Stack additions: [S1, V324]
Exit stack: [V12, 0x103, V324]

================================

Block 0x3e3
[0x3e3:0x422]
---
Predecessors: [0x189]
Successors: [0x227, 0x423]
---
0x3e3 JUMPDEST
0x3e4 PUSH1 0x1
0x3e6 PUSH1 0xa0
0x3e8 PUSH1 0x2
0x3ea EXP
0x3eb SUB
0x3ec CALLER
0x3ed AND
0x3ee PUSH1 0x0
0x3f0 DUP2
0x3f1 DUP2
0x3f2 MSTORE
0x3f3 PUSH1 0x4
0x3f5 PUSH1 0x20
0x3f7 MSTORE
0x3f8 PUSH1 0x40
0x3fa DUP1
0x3fb DUP3
0x3fc SHA3
0x3fd DUP1
0x3fe SLOAD
0x3ff SWAP1
0x400 DUP4
0x401 SWAP1
0x402 SSTORE
0x403 SWAP1
0x404 MLOAD
0x405 SWAP1
0x406 SWAP3
0x407 SWAP2
0x408 DUP4
0x409 ISZERO
0x40a PUSH2 0x8fc
0x40d MUL
0x40e SWAP2
0x40f DUP5
0x410 SWAP2
0x411 DUP2
0x412 DUP2
0x413 DUP2
0x414 DUP6
0x415 DUP9
0x416 DUP9
0x417 CALL
0x418 SWAP4
0x419 POP
0x41a POP
0x41b POP
0x41c POP
0x41d ISZERO
0x41e ISZERO
0x41f PUSH2 0x227
0x422 JUMPI
---
0x3e3: JUMPDEST 
0x3e4: V325 = 0x1
0x3e6: V326 = 0xa0
0x3e8: V327 = 0x2
0x3ea: V328 = EXP 0x2 0xa0
0x3eb: V329 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ec: V330 = CALLER
0x3ed: V331 = AND V330 0xffffffffffffffffffffffffffffffffffffffff
0x3ee: V332 = 0x0
0x3f2: M[0x0] = V331
0x3f3: V333 = 0x4
0x3f5: V334 = 0x20
0x3f7: M[0x20] = 0x4
0x3f8: V335 = 0x40
0x3fc: V336 = SHA3 0x0 0x40
0x3fe: V337 = S[V336]
0x402: S[V336] = 0x0
0x404: V338 = M[0x40]
0x409: V339 = ISZERO V337
0x40a: V340 = 0x8fc
0x40d: V341 = MUL 0x8fc V339
0x417: V342 = CALL V341 V331 V337 V338 0x0 V338 0x0
0x41d: V343 = ISZERO V342
0x41e: V344 = ISZERO V343
0x41f: V345 = 0x227
0x422: JUMPI 0x227 V344
---
Entry stack: [V12, 0xd3]
Stack pops: 0
Stack additions: [V337]
Exit stack: [V12, 0xd3, V337]

================================

Block 0x423
[0x423:0x423]
---
Predecessors: [0x3e3]
Successors: []
---
0x423 INVALID
---
0x423: INVALID 
---
Entry stack: [V12, 0xd3, V337]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xd3, V337]

================================

Block 0x424
[0x424:0x424]
---
Predecessors: []
Successors: [0x425]
---
0x424 JUMPDEST
---
0x424: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x425
[0x425:0x427]
---
Predecessors: [0x424]
Successors: []
Has unresolved jump.
---
0x425 JUMPDEST
0x426 POP
0x427 JUMP
---
0x425: JUMPDEST 
0x427: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x428
[0x428:0x42d]
---
Predecessors: [0x19b]
Successors: [0x103]
---
0x428 JUMPDEST
0x429 PUSH1 0x2
0x42b SLOAD
0x42c DUP2
0x42d JUMP
---
0x428: JUMPDEST 
0x429: V346 = 0x2
0x42b: V347 = S[0x2]
0x42d: JUMP 0x103
---
Entry stack: [V12, 0x103]
Stack pops: 1
Stack additions: [S0, V347]
Exit stack: [V12, 0x103, V347]

================================

Block 0x42e
[0x42e:0x458]
---
Predecessors: [0x1b5]
Successors: [0x459, 0x4e5]
---
0x42e JUMPDEST
0x42f CALLER
0x430 PUSH1 0x1
0x432 PUSH1 0xa0
0x434 PUSH1 0x2
0x436 EXP
0x437 SUB
0x438 AND
0x439 PUSH1 0x0
0x43b SWAP1
0x43c DUP2
0x43d MSTORE
0x43e PUSH1 0x3
0x440 PUSH1 0x20
0x442 MSTORE
0x443 PUSH1 0x40
0x445 DUP2
0x446 SHA3
0x447 SLOAD
0x448 PUSH1 0x5
0x44a SLOAD
0x44b CALLVALUE
0x44c SWAP1
0x44d SWAP2
0x44e ADD
0x44f SWAP1
0x450 DUP3
0x451 SWAP1
0x452 DUP3
0x453 LT
0x454 ISZERO
0x455 PUSH2 0x4e5
0x458 JUMPI
---
0x42e: JUMPDEST 
0x42f: V348 = CALLER
0x430: V349 = 0x1
0x432: V350 = 0xa0
0x434: V351 = 0x2
0x436: V352 = EXP 0x2 0xa0
0x437: V353 = SUB 0x10000000000000000000000000000000000000000 0x1
0x438: V354 = AND 0xffffffffffffffffffffffffffffffffffffffff V348
0x439: V355 = 0x0
0x43d: M[0x0] = V354
0x43e: V356 = 0x3
0x440: V357 = 0x20
0x442: M[0x20] = 0x3
0x443: V358 = 0x40
0x446: V359 = SHA3 0x0 0x40
0x447: V360 = S[V359]
0x448: V361 = 0x5
0x44a: V362 = S[0x5]
0x44b: V363 = CALLVALUE
0x44e: V364 = ADD V360 V363
0x453: V365 = LT V364 V362
0x454: V366 = ISZERO V365
0x455: V367 = 0x4e5
0x458: JUMPI 0x4e5 V366
---
Entry stack: [V12, 0x13f]
Stack pops: 0
Stack additions: [0x0, V364, 0x0]
Exit stack: [V12, 0x13f, 0x0, V364, 0x0]

================================

Block 0x459
[0x459:0x4e4]
---
Predecessors: [0x42e]
Successors: [0x667]
---
0x459 PUSH1 0x1
0x45b PUSH1 0xa0
0x45d PUSH1 0x2
0x45f EXP
0x460 SUB
0x461 CALLER
0x462 AND
0x463 PUSH1 0x0
0x465 DUP2
0x466 DUP2
0x467 MSTORE
0x468 PUSH1 0x4
0x46a PUSH1 0x20
0x46c SWAP1
0x46d DUP2
0x46e MSTORE
0x46f PUSH1 0x40
0x471 SWAP2
0x472 DUP3
0x473 SWAP1
0x474 SHA3
0x475 DUP1
0x476 SLOAD
0x477 CALLVALUE
0x478 ADD
0x479 SWAP1
0x47a SSTORE
0x47b DUP2
0x47c MLOAD
0x47d DUP2
0x47e DUP2
0x47f MSTORE
0x480 PUSH1 0x29
0x482 SWAP2
0x483 DUP2
0x484 ADD
0x485 SWAP2
0x486 SWAP1
0x487 SWAP2
0x488 MSTORE
0x489 PUSH32 0x446f6e6174696f6e20746f6f206c6f772c2063616c6c20776974686472617744
0x4aa DUP2
0x4ab DUP4
0x4ac ADD
0x4ad MSTORE
0x4ae PUSH1 0xb8
0x4b0 PUSH1 0x2
0x4b2 EXP
0x4b3 PUSH9 0x6f6e6174696f6e2829
0x4bd MUL
0x4be PUSH1 0x60
0x4c0 DUP3
0x4c1 ADD
0x4c2 MSTORE
0x4c3 SWAP1
0x4c4 MLOAD
0x4c5 PUSH1 0x0
0x4c7 DUP1
0x4c8 MLOAD
0x4c9 PUSH1 0x20
0x4cb PUSH2 0x68d
0x4ce DUP4
0x4cf CODECOPY
0x4d0 DUP2
0x4d1 MLOAD
0x4d2 SWAP2
0x4d3 MSTORE
0x4d4 SWAP2
0x4d5 DUP2
0x4d6 SWAP1
0x4d7 SUB
0x4d8 PUSH1 0x80
0x4da ADD
0x4db SWAP1
0x4dc LOG2
0x4dd PUSH1 0x0
0x4df SWAP3
0x4e0 POP
0x4e1 PUSH2 0x667
0x4e4 JUMP
---
0x459: V368 = 0x1
0x45b: V369 = 0xa0
0x45d: V370 = 0x2
0x45f: V371 = EXP 0x2 0xa0
0x460: V372 = SUB 0x10000000000000000000000000000000000000000 0x1
0x461: V373 = CALLER
0x462: V374 = AND V373 0xffffffffffffffffffffffffffffffffffffffff
0x463: V375 = 0x0
0x467: M[0x0] = V374
0x468: V376 = 0x4
0x46a: V377 = 0x20
0x46e: M[0x20] = 0x4
0x46f: V378 = 0x40
0x474: V379 = SHA3 0x0 0x40
0x476: V380 = S[V379]
0x477: V381 = CALLVALUE
0x478: V382 = ADD V381 V380
0x47a: S[V379] = V382
0x47c: V383 = M[0x40]
0x47f: M[V383] = 0x20
0x480: V384 = 0x29
0x484: V385 = ADD V383 0x20
0x488: M[V385] = 0x29
0x489: V386 = 0x446f6e6174696f6e20746f6f206c6f772c2063616c6c20776974686472617744
0x4ac: V387 = ADD 0x40 V383
0x4ad: M[V387] = 0x446f6e6174696f6e20746f6f206c6f772c2063616c6c20776974686472617744
0x4ae: V388 = 0xb8
0x4b0: V389 = 0x2
0x4b2: V390 = EXP 0x2 0xb8
0x4b3: V391 = 0x6f6e6174696f6e2829
0x4bd: V392 = MUL 0x6f6e6174696f6e2829 0x10000000000000000000000000000000000000000000000
0x4be: V393 = 0x60
0x4c1: V394 = ADD V383 0x60
0x4c2: M[V394] = 0x6f6e6174696f6e28290000000000000000000000000000000000000000000000
0x4c4: V395 = M[0x40]
0x4c5: V396 = 0x0
0x4c8: V397 = M[0x0]
0x4c9: V398 = 0x20
0x4cb: V399 = 0x68d
0x4cf: CODECOPY 0x0 0x68d 0x20
0x4d1: V400 = M[0x0]
0x4d3: M[0x0] = V397
0x4d7: V401 = SUB V383 V395
0x4d8: V402 = 0x80
0x4da: V403 = ADD 0x80 V401
0x4dc: LOG V395 V403 V400 V374
0x4dd: V404 = 0x0
0x4e1: V405 = 0x667
0x4e4: JUMP 0x667
---
Entry stack: [V12, 0x13f, 0x0, V364, 0x0]
Stack pops: 3
Stack additions: [0x0, S1, S0]
Exit stack: [V12, 0x13f, 0x0, V364, 0x0]

================================

Block 0x4e5
[0x4e5:0x54e]
---
Predecessors: [0x42e]
Successors: [0x54f, 0x550]
---
0x4e5 JUMPDEST
0x4e6 PUSH1 0x1
0x4e8 DUP1
0x4e9 SLOAD
0x4ea PUSH1 0x0
0x4ec DUP1
0x4ed SLOAD
0x4ee PUSH1 0x40
0x4f0 DUP1
0x4f1 MLOAD
0x4f2 PUSH1 0x20
0x4f4 SWAP1
0x4f5 DUP2
0x4f6 ADD
0x4f7 DUP5
0x4f8 SWAP1
0x4f9 MSTORE
0x4fa DUP2
0x4fb MLOAD
0x4fc PUSH1 0xe0
0x4fe PUSH1 0x2
0x500 EXP
0x501 PUSH4 0x23b872dd
0x506 MUL
0x507 DUP2
0x508 MSTORE
0x509 PUSH1 0x1
0x50b PUSH1 0xa0
0x50d PUSH1 0x2
0x50f EXP
0x510 SUB
0x511 SWAP4
0x512 DUP5
0x513 AND
0x514 PUSH1 0x4
0x516 DUP3
0x517 ADD
0x518 MSTORE
0x519 CALLER
0x51a DUP5
0x51b AND
0x51c PUSH1 0x24
0x51e DUP3
0x51f ADD
0x520 MSTORE
0x521 PUSH1 0x44
0x523 DUP2
0x524 ADD
0x525 SWAP7
0x526 SWAP1
0x527 SWAP7
0x528 MSTORE
0x529 SWAP1
0x52a MLOAD
0x52b SWAP2
0x52c SWAP1
0x52d SWAP4
0x52e AND
0x52f SWAP4
0x530 PUSH4 0x23b872dd
0x535 SWAP4
0x536 PUSH1 0x64
0x538 DUP1
0x539 DUP4
0x53a ADD
0x53b SWAP5
0x53c SWAP2
0x53d SWAP4
0x53e SWAP3
0x53f DUP4
0x540 SWAP1
0x541 SUB
0x542 ADD
0x543 SWAP1
0x544 DUP3
0x545 SWAP1
0x546 DUP8
0x547 DUP1
0x548 EXTCODESIZE
0x549 ISZERO
0x54a ISZERO
0x54b PUSH2 0x550
0x54e JUMPI
---
0x4e5: JUMPDEST 
0x4e6: V406 = 0x1
0x4e9: V407 = S[0x1]
0x4ea: V408 = 0x0
0x4ed: V409 = S[0x0]
0x4ee: V410 = 0x40
0x4f1: V411 = M[0x40]
0x4f2: V412 = 0x20
0x4f6: V413 = ADD 0x20 V411
0x4f9: M[V413] = 0x0
0x4fb: V414 = M[0x40]
0x4fc: V415 = 0xe0
0x4fe: V416 = 0x2
0x500: V417 = EXP 0x2 0xe0
0x501: V418 = 0x23b872dd
0x506: V419 = MUL 0x23b872dd 0x100000000000000000000000000000000000000000000000000000000
0x508: M[V414] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x509: V420 = 0x1
0x50b: V421 = 0xa0
0x50d: V422 = 0x2
0x50f: V423 = EXP 0x2 0xa0
0x510: V424 = SUB 0x10000000000000000000000000000000000000000 0x1
0x513: V425 = AND 0xffffffffffffffffffffffffffffffffffffffff V409
0x514: V426 = 0x4
0x517: V427 = ADD V414 0x4
0x518: M[V427] = V425
0x519: V428 = CALLER
0x51b: V429 = AND 0xffffffffffffffffffffffffffffffffffffffff V428
0x51c: V430 = 0x24
0x51f: V431 = ADD V414 0x24
0x520: M[V431] = V429
0x521: V432 = 0x44
0x524: V433 = ADD V414 0x44
0x528: M[V433] = 0x1
0x52a: V434 = M[0x40]
0x52e: V435 = AND V407 0xffffffffffffffffffffffffffffffffffffffff
0x530: V436 = 0x23b872dd
0x536: V437 = 0x64
0x53a: V438 = ADD V414 0x64
0x541: V439 = SUB V414 V434
0x542: V440 = ADD V439 0x64
0x548: V441 = EXTCODESIZE V435
0x549: V442 = ISZERO V441
0x54a: V443 = ISZERO V442
0x54b: V444 = 0x550
0x54e: JUMPI 0x550 V443
---
Entry stack: [V12, 0x13f, 0x0, V364, 0x0]
Stack pops: 0
Stack additions: [V435, 0x23b872dd, V438, 0x20, V434, V440, V434, 0x0, V435]
Exit stack: [V12, 0x13f, 0x0, V364, 0x0, V435, 0x23b872dd, V438, 0x20, V434, V440, V434, 0x0, V435]

================================

Block 0x54f
[0x54f:0x54f]
---
Predecessors: [0x4e5]
Successors: []
---
0x54f INVALID
---
0x54f: INVALID 
---
Entry stack: [V12, 0x13f, 0x0, V364, 0x0, V435, 0x23b872dd, V438, 0x20, V434, V440, V434, 0x0, V435]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x13f, 0x0, V364, 0x0, V435, 0x23b872dd, V438, 0x20, V434, V440, V434, 0x0, V435]

================================

Block 0x550
[0x550:0x55c]
---
Predecessors: [0x4e5]
Successors: [0x55d, 0x55e]
---
0x550 JUMPDEST
0x551 PUSH2 0x2c6
0x554 GAS
0x555 SUB
0x556 CALL
0x557 ISZERO
0x558 ISZERO
0x559 PUSH2 0x55e
0x55c JUMPI
---
0x550: JUMPDEST 
0x551: V445 = 0x2c6
0x554: V446 = GAS
0x555: V447 = SUB V446 0x2c6
0x556: V448 = CALL V447 V435 0x0 V434 V440 V434 0x20
0x557: V449 = ISZERO V448
0x558: V450 = ISZERO V449
0x559: V451 = 0x55e
0x55c: JUMPI 0x55e V450
---
Entry stack: [V12, 0x13f, 0x0, V364, 0x0, V435, 0x23b872dd, V438, 0x20, V434, V440, V434, 0x0, V435]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x13f, 0x0, V364, 0x0, V435, 0x23b872dd, V438]

================================

Block 0x55d
[0x55d:0x55d]
---
Predecessors: [0x550]
Successors: []
---
0x55d INVALID
---
0x55d: INVALID 
---
Entry stack: [V12, 0x13f, 0x0, V364, 0x0, V435, 0x23b872dd, V438]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x13f, 0x0, V364, 0x0, V435, 0x23b872dd, V438]

================================

Block 0x55e
[0x55e:0x56e]
---
Predecessors: [0x550]
Successors: [0x56f, 0x5f9]
---
0x55e JUMPDEST
0x55f POP
0x560 POP
0x561 PUSH1 0x40
0x563 MLOAD
0x564 MLOAD
0x565 SWAP2
0x566 POP
0x567 POP
0x568 DUP1
0x569 ISZERO
0x56a ISZERO
0x56b PUSH2 0x5f9
0x56e JUMPI
---
0x55e: JUMPDEST 
0x561: V452 = 0x40
0x563: V453 = M[0x40]
0x564: V454 = M[V453]
0x569: V455 = ISZERO V454
0x56a: V456 = ISZERO V455
0x56b: V457 = 0x5f9
0x56e: JUMPI 0x5f9 V456
---
Entry stack: [V12, 0x13f, 0x0, V364, 0x0, V435, 0x23b872dd, V438]
Stack pops: 4
Stack additions: [V454]
Exit stack: [V12, 0x13f, 0x0, V364, V454]

================================

Block 0x56f
[0x56f:0x5f8]
---
Predecessors: [0x55e]
Successors: [0x667]
---
0x56f PUSH1 0x1
0x571 PUSH1 0xa0
0x573 PUSH1 0x2
0x575 EXP
0x576 SUB
0x577 CALLER
0x578 AND
0x579 PUSH1 0x0
0x57b DUP2
0x57c DUP2
0x57d MSTORE
0x57e PUSH1 0x4
0x580 PUSH1 0x20
0x582 SWAP1
0x583 DUP2
0x584 MSTORE
0x585 PUSH1 0x40
0x587 SWAP2
0x588 DUP3
0x589 SWAP1
0x58a SHA3
0x58b DUP1
0x58c SLOAD
0x58d CALLVALUE
0x58e ADD
0x58f SWAP1
0x590 SSTORE
0x591 DUP2
0x592 MLOAD
0x593 DUP2
0x594 DUP2
0x595 MSTORE
0x596 PUSH1 0x27
0x598 SWAP2
0x599 DUP2
0x59a ADD
0x59b SWAP2
0x59c SWAP1
0x59d SWAP2
0x59e MSTORE
0x59f PUSH32 0x5472616e736572206661696c65642c2063616c6c207769746864726177446f6e
0x5c0 DUP2
0x5c1 DUP4
0x5c2 ADD
0x5c3 MSTORE
0x5c4 PUSH1 0xc8
0x5c6 PUSH1 0x2
0x5c8 EXP
0x5c9 PUSH7 0x6174696f6e2829
0x5d1 MUL
0x5d2 PUSH1 0x60
0x5d4 DUP3
0x5d5 ADD
0x5d6 MSTORE
0x5d7 SWAP1
0x5d8 MLOAD
0x5d9 PUSH1 0x0
0x5db DUP1
0x5dc MLOAD
0x5dd PUSH1 0x20
0x5df PUSH2 0x68d
0x5e2 DUP4
0x5e3 CODECOPY
0x5e4 DUP2
0x5e5 MLOAD
0x5e6 SWAP2
0x5e7 MSTORE
0x5e8 SWAP2
0x5e9 DUP2
0x5ea SWAP1
0x5eb SUB
0x5ec PUSH1 0x80
0x5ee ADD
0x5ef SWAP1
0x5f0 LOG2
0x5f1 PUSH1 0x0
0x5f3 SWAP3
0x5f4 POP
0x5f5 PUSH2 0x667
0x5f8 JUMP
---
0x56f: V458 = 0x1
0x571: V459 = 0xa0
0x573: V460 = 0x2
0x575: V461 = EXP 0x2 0xa0
0x576: V462 = SUB 0x10000000000000000000000000000000000000000 0x1
0x577: V463 = CALLER
0x578: V464 = AND V463 0xffffffffffffffffffffffffffffffffffffffff
0x579: V465 = 0x0
0x57d: M[0x0] = V464
0x57e: V466 = 0x4
0x580: V467 = 0x20
0x584: M[0x20] = 0x4
0x585: V468 = 0x40
0x58a: V469 = SHA3 0x0 0x40
0x58c: V470 = S[V469]
0x58d: V471 = CALLVALUE
0x58e: V472 = ADD V471 V470
0x590: S[V469] = V472
0x592: V473 = M[0x40]
0x595: M[V473] = 0x20
0x596: V474 = 0x27
0x59a: V475 = ADD V473 0x20
0x59e: M[V475] = 0x27
0x59f: V476 = 0x5472616e736572206661696c65642c2063616c6c207769746864726177446f6e
0x5c2: V477 = ADD 0x40 V473
0x5c3: M[V477] = 0x5472616e736572206661696c65642c2063616c6c207769746864726177446f6e
0x5c4: V478 = 0xc8
0x5c6: V479 = 0x2
0x5c8: V480 = EXP 0x2 0xc8
0x5c9: V481 = 0x6174696f6e2829
0x5d1: V482 = MUL 0x6174696f6e2829 0x100000000000000000000000000000000000000000000000000
0x5d2: V483 = 0x60
0x5d5: V484 = ADD V473 0x60
0x5d6: M[V484] = 0x6174696f6e282900000000000000000000000000000000000000000000000000
0x5d8: V485 = M[0x40]
0x5d9: V486 = 0x0
0x5dc: V487 = M[0x0]
0x5dd: V488 = 0x20
0x5df: V489 = 0x68d
0x5e3: CODECOPY 0x0 0x68d 0x20
0x5e5: V490 = M[0x0]
0x5e7: M[0x0] = V487
0x5eb: V491 = SUB V473 V485
0x5ec: V492 = 0x80
0x5ee: V493 = ADD 0x80 V491
0x5f0: LOG V485 V493 V490 V464
0x5f1: V494 = 0x0
0x5f5: V495 = 0x667
0x5f8: JUMP 0x667
---
Entry stack: [V12, 0x13f, 0x0, V364, V454]
Stack pops: 3
Stack additions: [0x0, S1, S0]
Exit stack: [V12, 0x13f, 0x0, V364, V454]

================================

Block 0x5f9
[0x5f9:0x666]
---
Predecessors: [0x55e]
Successors: [0x667]
---
0x5f9 JUMPDEST
0x5fa PUSH1 0x1
0x5fc PUSH1 0xa0
0x5fe PUSH1 0x2
0x600 EXP
0x601 SUB
0x602 CALLER
0x603 AND
0x604 PUSH1 0x0
0x606 DUP2
0x607 DUP2
0x608 MSTORE
0x609 PUSH1 0x3
0x60b PUSH1 0x20
0x60d SWAP1
0x60e DUP2
0x60f MSTORE
0x610 PUSH1 0x40
0x612 SWAP2
0x613 DUP3
0x614 SWAP1
0x615 SHA3
0x616 DUP1
0x617 SLOAD
0x618 CALLVALUE
0x619 SWAP1
0x61a DUP2
0x61b ADD
0x61c SWAP1
0x61d SWAP2
0x61e SSTORE
0x61f PUSH1 0x2
0x621 DUP1
0x622 SLOAD
0x623 SWAP1
0x624 SWAP2
0x625 ADD
0x626 SWAP1
0x627 SSTORE
0x628 DUP2
0x629 MLOAD
0x62a DUP2
0x62b DUP2
0x62c MSTORE
0x62d PUSH1 0x1c
0x62f SWAP2
0x630 DUP2
0x631 ADD
0x632 SWAP2
0x633 SWAP1
0x634 SWAP2
0x635 MSTORE
0x636 PUSH1 0x0
0x638 DUP1
0x639 MLOAD
0x63a PUSH1 0x20
0x63c PUSH2 0x6ad
0x63f DUP4
0x640 CODECOPY
0x641 DUP2
0x642 MLOAD
0x643 SWAP2
0x644 MSTORE
0x645 DUP2
0x646 DUP4
0x647 ADD
0x648 MSTORE
0x649 SWAP1
0x64a MLOAD
0x64b PUSH1 0x0
0x64d DUP1
0x64e MLOAD
0x64f PUSH1 0x20
0x651 PUSH2 0x66d
0x654 DUP4
0x655 CODECOPY
0x656 DUP2
0x657 MLOAD
0x658 SWAP2
0x659 MSTORE
0x65a SWAP2
0x65b DUP2
0x65c SWAP1
0x65d SUB
0x65e PUSH1 0x60
0x660 ADD
0x661 SWAP1
0x662 LOG2
0x663 PUSH1 0x1
0x665 SWAP3
0x666 POP
---
0x5f9: JUMPDEST 
0x5fa: V496 = 0x1
0x5fc: V497 = 0xa0
0x5fe: V498 = 0x2
0x600: V499 = EXP 0x2 0xa0
0x601: V500 = SUB 0x10000000000000000000000000000000000000000 0x1
0x602: V501 = CALLER
0x603: V502 = AND V501 0xffffffffffffffffffffffffffffffffffffffff
0x604: V503 = 0x0
0x608: M[0x0] = V502
0x609: V504 = 0x3
0x60b: V505 = 0x20
0x60f: M[0x20] = 0x3
0x610: V506 = 0x40
0x615: V507 = SHA3 0x0 0x40
0x617: V508 = S[V507]
0x618: V509 = CALLVALUE
0x61b: V510 = ADD V509 V508
0x61e: S[V507] = V510
0x61f: V511 = 0x2
0x622: V512 = S[0x2]
0x625: V513 = ADD V509 V512
0x627: S[0x2] = V513
0x629: V514 = M[0x40]
0x62c: M[V514] = 0x20
0x62d: V515 = 0x1c
0x631: V516 = ADD V514 0x20
0x635: M[V516] = 0x1c
0x636: V517 = 0x0
0x639: V518 = M[0x0]
0x63a: V519 = 0x20
0x63c: V520 = 0x6ad
0x640: CODECOPY 0x0 0x6ad 0x20
0x642: V521 = M[0x0]
0x644: M[0x0] = V518
0x647: V522 = ADD 0x40 V514
0x648: M[V522] = V521
0x64a: V523 = M[0x40]
0x64b: V524 = 0x0
0x64e: V525 = M[0x0]
0x64f: V526 = 0x20
0x651: V527 = 0x66d
0x655: CODECOPY 0x0 0x66d 0x20
0x657: V528 = M[0x0]
0x659: M[0x0] = V525
0x65d: V529 = SUB V514 V523
0x65e: V530 = 0x60
0x660: V531 = ADD 0x60 V529
0x662: LOG V523 V531 V528 V502
0x663: V532 = 0x1
---
Entry stack: [V12, 0x13f, 0x0, V364, V454]
Stack pops: 3
Stack additions: [0x1, S1, S0]
Exit stack: [V12, 0x13f, 0x1, V364, V454]

================================

Block 0x667
[0x667:0x66b]
---
Predecessors: [0x459, 0x56f, 0x5f9]
Successors: [0x13f]
---
0x667 JUMPDEST
0x668 POP
0x669 POP
0x66a SWAP1
0x66b JUMP
---
0x667: JUMPDEST 
0x66b: JUMP 0x13f
---
Entry stack: [V12, 0x13f, {0x0, 0x1}, V364, S0]
Stack pops: 4
Stack additions: [S2]
Exit stack: [V12, {0x0, 0x1}]

================================

Block 0x66c
[0x66c:0x6f7]
---
Predecessors: []
Successors: []
---
0x66c STOP
0x66d MISSING 0xa8
0x66e AND
0x66f MISSING 0x4a
0x670 DUP5
0x671 XOR
0x672 PUSH32 0x759e2f9df4750fc4e87b740e664c569b8c40f4fd0e01db2feb612f78dc14b433
0x693 MISSING 0x29
0x694 SWAP6
0x695 MISSING 0xb0
0x696 MISSING 0xd5
0x697 MISSING 0xbf
0x698 SSTORE
0x699 SDIV
0x69a SWAP15
0x69b MISSING 0xe8
0x69c SDIV
0x69d PUSH14 0x45bd743ef02ddd5c86d562c8601d
0x6ac PUSH20 0x5468616e6b20796f7520666f7220796f75722064
0x6c1 PUSH16 0x6e6174696f6e2100000000a165627a7a
0x6d2 PUSH19 0x3058203bb664c9d6d473d042d0f1fd5a4f441d
0x6e6 ADDRESS
0x6e7 MISSING 0xed
0x6e8 MISSING 0xc1
0x6e9 MISSING 0xc2
0x6ea MISSING 0xd7
0x6eb MISSING 0xe4
0x6ec DIFFICULTY
0x6ed MISSING 0xe5
0x6ee MSIZE
0x6ef PUSH2 0xa78a
0x6f2 MISSING 0xb2
0x6f3 MISSING 0xd9
0x6f4 DUP3
0x6f5 MISSING 0xe7
0x6f6 STOP
0x6f7 MISSING 0x29
---
0x66c: STOP 
0x66d: MISSING 0xa8
0x66e: V533 = AND S0 S1
0x66f: MISSING 0x4a
0x671: V534 = XOR S4 S0
0x672: V535 = 0x759e2f9df4750fc4e87b740e664c569b8c40f4fd0e01db2feb612f78dc14b433
0x693: MISSING 0x29
0x695: MISSING 0xb0
0x696: MISSING 0xd5
0x697: MISSING 0xbf
0x698: S[S0] = S1
0x699: V536 = SDIV S2 S3
0x69b: MISSING 0xe8
0x69c: V537 = SDIV S0 S1
0x69d: V538 = 0x45bd743ef02ddd5c86d562c8601d
0x6ac: V539 = 0x5468616e6b20796f7520666f7220796f75722064
0x6c1: V540 = 0x6e6174696f6e2100000000a165627a7a
0x6d2: V541 = 0x3058203bb664c9d6d473d042d0f1fd5a4f441d
0x6e6: V542 = ADDRESS
0x6e7: MISSING 0xed
0x6e8: MISSING 0xc1
0x6e9: MISSING 0xc2
0x6ea: MISSING 0xd7
0x6eb: MISSING 0xe4
0x6ec: V543 = DIFFICULTY
0x6ed: MISSING 0xe5
0x6ee: V544 = MSIZE
0x6ef: V545 = 0xa78a
0x6f2: MISSING 0xb2
0x6f3: MISSING 0xd9
0x6f5: MISSING 0xe7
0x6f6: STOP 
0x6f7: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V533, 0x759e2f9df4750fc4e87b740e664c569b8c40f4fd0e01db2feb612f78dc14b433, V534, S1, S2, S3, S4, S6, S1, S2, S3, S4, S5, S0, S18, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, V536, V542, 0x3058203bb664c9d6d473d042d0f1fd5a4f441d, 0x6e6174696f6e2100000000a165627a7a, 0x5468616e6b20796f7520666f7220796f75722064, 0x45bd743ef02ddd5c86d562c8601d, V537, V543, 0xa78a, V544, S2, S0, S1, S2]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0xd5
Exit block: 0xd3
Body: 0xd3, 0xd5, 0xdc, 0xdd, 0x1d1, 0x1e9, 0x1ee, 0x226, 0x227, 0x228, 0x229

Function 1:
Public function signature: 0x469bb426
Entry block: 0xe7
Exit block: 0x103
Body: 0xe7, 0xee, 0xef, 0x103, 0x22c

Function 2:
Public function signature: 0x52d6804d
Entry block: 0x115
Exit block: 0x103
Body: 0x103, 0x115, 0x11c, 0x11d, 0x23e

Function 3:
Public function signature: 0x6643caba
Entry block: 0x137
Exit block: 0x13f
Body: 0x137, 0x13f, 0x244, 0x2a5, 0x2a6, 0x2b3, 0x2b4, 0x2c5, 0x35f, 0x3cd

Function 4:
Public function signature: 0x8e468a88
Entry block: 0x153
Exit block: 0x103
Body: 0x103, 0x153, 0x15a, 0x15b, 0x3d1

Function 5:
Public function signature: 0xe81e1ccc
Entry block: 0x181
Exit block: 0xd3
Body: 0xd3, 0x181, 0x188, 0x189, 0x227, 0x228, 0x229, 0x3e3, 0x423

Function 6:
Public function signature: 0xe8757d19
Entry block: 0x193
Exit block: 0x103
Body: 0x103, 0x193, 0x19a, 0x19b, 0x428

Function 7:
Public function signature: 0xed88c68e
Entry block: 0x1b5
Exit block: 0x55d
Body: 0x13f, 0x1b5, 0x42e, 0x459, 0x4e5, 0x54f, 0x550, 0x55d, 0x55e, 0x56f, 0x5f9, 0x667

Function 8:
Public fallback function
Entry block: 0x72
Exit block: 0xd3
Body: 0x72, 0x79, 0x7a, 0x7e, 0xd1, 0xd3

