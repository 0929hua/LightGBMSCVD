Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x5f]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x5f
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x5f
0xa: JUMPI 0x5f V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x63]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH3 0x5c33e1
0x39 EQ
0x3a PUSH2 0x63
0x3d JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x5c33e1
0x39: V12 = EQ 0x5c33e1 V10
0x3a: V13 = 0x63
0x3d: JUMPI 0x63 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x6d]
---
0x3e DUP1
0x3f PUSH4 0x14dca88c
0x44 EQ
0x45 PUSH2 0x6d
0x48 JUMPI
---
0x3f: V14 = 0x14dca88c
0x44: V15 = EQ 0x14dca88c V10
0x45: V16 = 0x6d
0x48: JUMPI 0x6d V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0xc3]
---
0x49 DUP1
0x4a PUSH4 0x155dd5ee
0x4f EQ
0x50 PUSH2 0xc3
0x53 JUMPI
---
0x4a: V17 = 0x155dd5ee
0x4f: V18 = EQ 0x155dd5ee V10
0x50: V19 = 0xc3
0x53: JUMPI 0xc3 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0xe6]
---
0x54 DUP1
0x55 PUSH4 0xb927e171
0x5a EQ
0x5b PUSH2 0xe6
0x5e JUMPI
---
0x55: V20 = 0xb927e171
0x5a: V21 = EQ 0xb927e171 V10
0x5b: V22 = 0xe6
0x5e: JUMPI 0xe6 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x5f]
---
Predecessors: [0x0, 0x54]
Successors: [0x60]
---
0x5f JUMPDEST
---
0x5f: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x60
[0x60:0x60]
---
Predecessors: [0x5f]
Successors: [0x61]
---
0x60 JUMPDEST
---
0x60: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x61
[0x61:0x62]
---
Predecessors: [0x60]
Successors: []
---
0x61 JUMPDEST
0x62 STOP
---
0x61: JUMPDEST 
0x62: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x63
[0x63:0x6a]
---
Predecessors: [0xb]
Successors: [0xfb]
---
0x63 JUMPDEST
0x64 PUSH2 0x6b
0x67 PUSH2 0xfb
0x6a JUMP
---
0x63: JUMPDEST 
0x64: V23 = 0x6b
0x67: V24 = 0xfb
0x6a: JUMP 0xfb
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x6b]
Exit stack: [V10, 0x6b]

================================

Block 0x6b
[0x6b:0x6c]
---
Predecessors: [0x1a5]
Successors: []
---
0x6b JUMPDEST
0x6c STOP
---
0x6b: JUMPDEST 
0x6c: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x6d
[0x6d:0x73]
---
Predecessors: [0x3e]
Successors: [0x74, 0x78]
---
0x6d JUMPDEST
0x6e CALLVALUE
0x6f ISZERO
0x70 PUSH2 0x78
0x73 JUMPI
---
0x6d: JUMPDEST 
0x6e: V25 = CALLVALUE
0x6f: V26 = ISZERO V25
0x70: V27 = 0x78
0x73: JUMPI 0x78 V26
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x74
[0x74:0x77]
---
Predecessors: [0x6d]
Successors: []
---
0x74 PUSH1 0x0
0x76 DUP1
0x77 REVERT
---
0x74: V28 = 0x0
0x77: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x78
[0x78:0xac]
---
Predecessors: [0x6d]
Successors: [0x1a7]
---
0x78 JUMPDEST
0x79 PUSH2 0xad
0x7c PUSH1 0x4
0x7e DUP1
0x7f DUP1
0x80 CALLDATALOAD
0x81 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x96 AND
0x97 SWAP1
0x98 PUSH1 0x20
0x9a ADD
0x9b SWAP1
0x9c SWAP2
0x9d SWAP1
0x9e DUP1
0x9f CALLDATALOAD
0xa0 SWAP1
0xa1 PUSH1 0x20
0xa3 ADD
0xa4 SWAP1
0xa5 SWAP2
0xa6 SWAP1
0xa7 POP
0xa8 POP
0xa9 PUSH2 0x1a7
0xac JUMP
---
0x78: JUMPDEST 
0x79: V29 = 0xad
0x7c: V30 = 0x4
0x80: V31 = CALLDATALOAD 0x4
0x81: V32 = 0xffffffffffffffffffffffffffffffffffffffff
0x96: V33 = AND 0xffffffffffffffffffffffffffffffffffffffff V31
0x98: V34 = 0x20
0x9a: V35 = ADD 0x20 0x4
0x9f: V36 = CALLDATALOAD 0x24
0xa1: V37 = 0x20
0xa3: V38 = ADD 0x20 0x24
0xa9: V39 = 0x1a7
0xac: JUMP 0x1a7
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xad, V33, V36]
Exit stack: [V10, 0xad, V33, V36]

================================

Block 0xad
[0xad:0xc2]
---
Predecessors: [0x25f]
Successors: []
---
0xad JUMPDEST
0xae PUSH1 0x40
0xb0 MLOAD
0xb1 DUP1
0xb2 DUP3
0xb3 DUP2
0xb4 MSTORE
0xb5 PUSH1 0x20
0xb7 ADD
0xb8 SWAP2
0xb9 POP
0xba POP
0xbb PUSH1 0x40
0xbd MLOAD
0xbe DUP1
0xbf SWAP2
0xc0 SUB
0xc1 SWAP1
0xc2 RETURN
---
0xad: JUMPDEST 
0xae: V40 = 0x40
0xb0: V41 = M[0x40]
0xb4: M[V41] = V129
0xb5: V42 = 0x20
0xb7: V43 = ADD 0x20 V41
0xbb: V44 = 0x40
0xbd: V45 = M[0x40]
0xc0: V46 = SUB V43 V45
0xc2: RETURN V45 V46
---
Entry stack: [V10, V129]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xc3
[0xc3:0xc9]
---
Predecessors: [0x49]
Successors: [0xca, 0xce]
---
0xc3 JUMPDEST
0xc4 CALLVALUE
0xc5 ISZERO
0xc6 PUSH2 0xce
0xc9 JUMPI
---
0xc3: JUMPDEST 
0xc4: V47 = CALLVALUE
0xc5: V48 = ISZERO V47
0xc6: V49 = 0xce
0xc9: JUMPI 0xce V48
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xca
[0xca:0xcd]
---
Predecessors: [0xc3]
Successors: []
---
0xca PUSH1 0x0
0xcc DUP1
0xcd REVERT
---
0xca: V50 = 0x0
0xcd: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xce
[0xce:0xe3]
---
Predecessors: [0xc3]
Successors: [0x265]
---
0xce JUMPDEST
0xcf PUSH2 0xe4
0xd2 PUSH1 0x4
0xd4 DUP1
0xd5 DUP1
0xd6 CALLDATALOAD
0xd7 SWAP1
0xd8 PUSH1 0x20
0xda ADD
0xdb SWAP1
0xdc SWAP2
0xdd SWAP1
0xde POP
0xdf POP
0xe0 PUSH2 0x265
0xe3 JUMP
---
0xce: JUMPDEST 
0xcf: V51 = 0xe4
0xd2: V52 = 0x4
0xd6: V53 = CALLDATALOAD 0x4
0xd8: V54 = 0x20
0xda: V55 = ADD 0x20 0x4
0xe0: V56 = 0x265
0xe3: JUMP 0x265
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xe4, V53]
Exit stack: [V10, 0xe4, V53]

================================

Block 0xe4
[0xe4:0xe5]
---
Predecessors: [0x34f]
Successors: []
---
0xe4 JUMPDEST
0xe5 STOP
---
0xe4: JUMPDEST 
0xe5: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xe6
[0xe6:0xec]
---
Predecessors: [0x54]
Successors: [0xed, 0xf1]
---
0xe6 JUMPDEST
0xe7 CALLVALUE
0xe8 ISZERO
0xe9 PUSH2 0xf1
0xec JUMPI
---
0xe6: JUMPDEST 
0xe7: V57 = CALLVALUE
0xe8: V58 = ISZERO V57
0xe9: V59 = 0xf1
0xec: JUMPI 0xf1 V58
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xed
[0xed:0xf0]
---
Predecessors: [0xe6]
Successors: []
---
0xed PUSH1 0x0
0xef DUP1
0xf0 REVERT
---
0xed: V60 = 0x0
0xf0: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xf1
[0xf1:0xf8]
---
Predecessors: [0xe6]
Successors: [0x352]
---
0xf1 JUMPDEST
0xf2 PUSH2 0xf9
0xf5 PUSH2 0x352
0xf8 JUMP
---
0xf1: JUMPDEST 
0xf2: V61 = 0xf9
0xf5: V62 = 0x352
0xf8: JUMP 0x352
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xf9]
Exit stack: [V10, 0xf9]

================================

Block 0xf9
[0xf9:0xfa]
---
Predecessors: []
Successors: []
---
0xf9 JUMPDEST
0xfa STOP
---
0xf9: JUMPDEST 
0xfa: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xfb
[0xfb:0x151]
---
Predecessors: [0x63]
Successors: [0x152, 0x156]
---
0xfb JUMPDEST
0xfc PUSH1 0x0
0xfe DUP1
0xff SWAP1
0x100 SLOAD
0x101 SWAP1
0x102 PUSH2 0x100
0x105 EXP
0x106 SWAP1
0x107 DIV
0x108 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11d AND
0x11e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x133 AND
0x134 CALLER
0x135 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14a AND
0x14b EQ
0x14c ISZERO
0x14d ISZERO
0x14e PUSH2 0x156
0x151 JUMPI
---
0xfb: JUMPDEST 
0xfc: V63 = 0x0
0x100: V64 = S[0x0]
0x102: V65 = 0x100
0x105: V66 = EXP 0x100 0x0
0x107: V67 = DIV V64 0x1
0x108: V68 = 0xffffffffffffffffffffffffffffffffffffffff
0x11d: V69 = AND 0xffffffffffffffffffffffffffffffffffffffff V67
0x11e: V70 = 0xffffffffffffffffffffffffffffffffffffffff
0x133: V71 = AND 0xffffffffffffffffffffffffffffffffffffffff V69
0x134: V72 = CALLER
0x135: V73 = 0xffffffffffffffffffffffffffffffffffffffff
0x14a: V74 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0x14b: V75 = EQ V74 V71
0x14c: V76 = ISZERO V75
0x14d: V77 = ISZERO V76
0x14e: V78 = 0x156
0x151: JUMPI 0x156 V77
---
Entry stack: [V10, 0x6b]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6b]

================================

Block 0x152
[0x152:0x155]
---
Predecessors: [0xfb]
Successors: []
---
0x152 PUSH1 0x0
0x154 DUP1
0x155 REVERT
---
0x152: V79 = 0x0
0x155: REVERT 0x0 0x0
---
Entry stack: [V10, 0x6b]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6b]

================================

Block 0x156
[0x156:0x1a4]
---
Predecessors: [0xfb]
Successors: [0x1a5]
---
0x156 JUMPDEST
0x157 PUSH32 0xeee9b99e43cf47c0b059200515960a56b3ffc23ae0e8ecaf9f530832d310132b
0x178 ADDRESS
0x179 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18e AND
0x18f BALANCE
0x190 PUSH1 0x40
0x192 MLOAD
0x193 DUP1
0x194 DUP3
0x195 DUP2
0x196 MSTORE
0x197 PUSH1 0x20
0x199 ADD
0x19a SWAP2
0x19b POP
0x19c POP
0x19d PUSH1 0x40
0x19f MLOAD
0x1a0 DUP1
0x1a1 SWAP2
0x1a2 SUB
0x1a3 SWAP1
0x1a4 LOG1
---
0x156: JUMPDEST 
0x157: V80 = 0xeee9b99e43cf47c0b059200515960a56b3ffc23ae0e8ecaf9f530832d310132b
0x178: V81 = ADDRESS
0x179: V82 = 0xffffffffffffffffffffffffffffffffffffffff
0x18e: V83 = AND 0xffffffffffffffffffffffffffffffffffffffff V81
0x18f: V84 = BALANCE V83
0x190: V85 = 0x40
0x192: V86 = M[0x40]
0x196: M[V86] = V84
0x197: V87 = 0x20
0x199: V88 = ADD 0x20 V86
0x19d: V89 = 0x40
0x19f: V90 = M[0x40]
0x1a2: V91 = SUB V88 V90
0x1a4: LOG V90 V91 0xeee9b99e43cf47c0b059200515960a56b3ffc23ae0e8ecaf9f530832d310132b
---
Entry stack: [V10, 0x6b]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x6b]

================================

Block 0x1a5
[0x1a5:0x1a6]
---
Predecessors: [0x156]
Successors: [0x6b]
---
0x1a5 JUMPDEST
0x1a6 JUMP
---
0x1a5: JUMPDEST 
0x1a6: JUMP 0x6b
---
Entry stack: [V10, 0x6b]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x1a7
[0x1a7:0x1ff]
---
Predecessors: [0x78]
Successors: [0x200, 0x204]
---
0x1a7 JUMPDEST
0x1a8 PUSH1 0x0
0x1aa DUP1
0x1ab PUSH1 0x0
0x1ad SWAP1
0x1ae SLOAD
0x1af SWAP1
0x1b0 PUSH2 0x100
0x1b3 EXP
0x1b4 SWAP1
0x1b5 DIV
0x1b6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1cb AND
0x1cc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e1 AND
0x1e2 CALLER
0x1e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f8 AND
0x1f9 EQ
0x1fa ISZERO
0x1fb ISZERO
0x1fc PUSH2 0x204
0x1ff JUMPI
---
0x1a7: JUMPDEST 
0x1a8: V92 = 0x0
0x1ab: V93 = 0x0
0x1ae: V94 = S[0x0]
0x1b0: V95 = 0x100
0x1b3: V96 = EXP 0x100 0x0
0x1b5: V97 = DIV V94 0x1
0x1b6: V98 = 0xffffffffffffffffffffffffffffffffffffffff
0x1cb: V99 = AND 0xffffffffffffffffffffffffffffffffffffffff V97
0x1cc: V100 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e1: V101 = AND 0xffffffffffffffffffffffffffffffffffffffff V99
0x1e2: V102 = CALLER
0x1e3: V103 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f8: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x1f9: V105 = EQ V104 V101
0x1fa: V106 = ISZERO V105
0x1fb: V107 = ISZERO V106
0x1fc: V108 = 0x204
0x1ff: JUMPI 0x204 V107
---
Entry stack: [V10, 0xad, V33, V36]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0xad, V33, V36, 0x0]

================================

Block 0x200
[0x200:0x203]
---
Predecessors: [0x1a7]
Successors: []
---
0x200 PUSH1 0x0
0x202 DUP1
0x203 REVERT
---
0x200: V109 = 0x0
0x203: REVERT 0x0 0x0
---
Entry stack: [V10, 0xad, V33, V36, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xad, V33, V36, 0x0]

================================

Block 0x204
[0x204:0x23f]
---
Predecessors: [0x1a7]
Successors: [0x240, 0x244]
---
0x204 JUMPDEST
0x205 DUP3
0x206 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21b AND
0x21c PUSH2 0x8fc
0x21f DUP4
0x220 SWAP1
0x221 DUP2
0x222 ISZERO
0x223 MUL
0x224 SWAP1
0x225 PUSH1 0x40
0x227 MLOAD
0x228 PUSH1 0x0
0x22a PUSH1 0x40
0x22c MLOAD
0x22d DUP1
0x22e DUP4
0x22f SUB
0x230 DUP2
0x231 DUP6
0x232 DUP9
0x233 DUP9
0x234 CALL
0x235 SWAP4
0x236 POP
0x237 POP
0x238 POP
0x239 POP
0x23a ISZERO
0x23b ISZERO
0x23c PUSH2 0x244
0x23f JUMPI
---
0x204: JUMPDEST 
0x206: V110 = 0xffffffffffffffffffffffffffffffffffffffff
0x21b: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V33
0x21c: V112 = 0x8fc
0x222: V113 = ISZERO V36
0x223: V114 = MUL V113 0x8fc
0x225: V115 = 0x40
0x227: V116 = M[0x40]
0x228: V117 = 0x0
0x22a: V118 = 0x40
0x22c: V119 = M[0x40]
0x22f: V120 = SUB V116 V119
0x234: V121 = CALL V114 V111 V36 V119 V120 V119 0x0
0x23a: V122 = ISZERO V121
0x23b: V123 = ISZERO V122
0x23c: V124 = 0x244
0x23f: JUMPI 0x244 V123
---
Entry stack: [V10, 0xad, V33, V36, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0xad, V33, V36, 0x0]

================================

Block 0x240
[0x240:0x243]
---
Predecessors: [0x204]
Successors: []
---
0x240 PUSH1 0x0
0x242 DUP1
0x243 REVERT
---
0x240: V125 = 0x0
0x243: REVERT 0x0 0x0
---
Entry stack: [V10, 0xad, V33, V36, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xad, V33, V36, 0x0]

================================

Block 0x244
[0x244:0x25e]
---
Predecessors: [0x204]
Successors: [0x25f]
---
0x244 JUMPDEST
0x245 ADDRESS
0x246 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x25b AND
0x25c BALANCE
0x25d SWAP1
0x25e POP
---
0x244: JUMPDEST 
0x245: V126 = ADDRESS
0x246: V127 = 0xffffffffffffffffffffffffffffffffffffffff
0x25b: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x25c: V129 = BALANCE V128
---
Entry stack: [V10, 0xad, V33, V36, 0x0]
Stack pops: 1
Stack additions: [V129]
Exit stack: [V10, 0xad, V33, V36, V129]

================================

Block 0x25f
[0x25f:0x264]
---
Predecessors: [0x244]
Successors: [0xad]
---
0x25f JUMPDEST
0x260 SWAP3
0x261 SWAP2
0x262 POP
0x263 POP
0x264 JUMP
---
0x25f: JUMPDEST 
0x264: JUMP 0xad
---
Entry stack: [V10, 0xad, V33, V36, V129]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, V129]

================================

Block 0x265
[0x265:0x2bb]
---
Predecessors: [0xce]
Successors: [0x2bc, 0x2c0]
---
0x265 JUMPDEST
0x266 PUSH1 0x0
0x268 DUP1
0x269 SWAP1
0x26a SLOAD
0x26b SWAP1
0x26c PUSH2 0x100
0x26f EXP
0x270 SWAP1
0x271 DIV
0x272 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x287 AND
0x288 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x29d AND
0x29e CALLER
0x29f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b4 AND
0x2b5 EQ
0x2b6 ISZERO
0x2b7 ISZERO
0x2b8 PUSH2 0x2c0
0x2bb JUMPI
---
0x265: JUMPDEST 
0x266: V130 = 0x0
0x26a: V131 = S[0x0]
0x26c: V132 = 0x100
0x26f: V133 = EXP 0x100 0x0
0x271: V134 = DIV V131 0x1
0x272: V135 = 0xffffffffffffffffffffffffffffffffffffffff
0x287: V136 = AND 0xffffffffffffffffffffffffffffffffffffffff V134
0x288: V137 = 0xffffffffffffffffffffffffffffffffffffffff
0x29d: V138 = AND 0xffffffffffffffffffffffffffffffffffffffff V136
0x29e: V139 = CALLER
0x29f: V140 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b4: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x2b5: V142 = EQ V141 V138
0x2b6: V143 = ISZERO V142
0x2b7: V144 = ISZERO V143
0x2b8: V145 = 0x2c0
0x2bb: JUMPI 0x2c0 V144
---
Entry stack: [V10, 0xe4, V53]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe4, V53]

================================

Block 0x2bc
[0x2bc:0x2bf]
---
Predecessors: [0x265]
Successors: []
---
0x2bc PUSH1 0x0
0x2be DUP1
0x2bf REVERT
---
0x2bc: V146 = 0x0
0x2bf: REVERT 0x0 0x0
---
Entry stack: [V10, 0xe4, V53]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe4, V53]

================================

Block 0x2c0
[0x2c0:0x2fb]
---
Predecessors: [0x265]
Successors: [0x2fc, 0x300]
---
0x2c0 JUMPDEST
0x2c1 CALLER
0x2c2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d7 AND
0x2d8 PUSH2 0x8fc
0x2db DUP3
0x2dc SWAP1
0x2dd DUP2
0x2de ISZERO
0x2df MUL
0x2e0 SWAP1
0x2e1 PUSH1 0x40
0x2e3 MLOAD
0x2e4 PUSH1 0x0
0x2e6 PUSH1 0x40
0x2e8 MLOAD
0x2e9 DUP1
0x2ea DUP4
0x2eb SUB
0x2ec DUP2
0x2ed DUP6
0x2ee DUP9
0x2ef DUP9
0x2f0 CALL
0x2f1 SWAP4
0x2f2 POP
0x2f3 POP
0x2f4 POP
0x2f5 POP
0x2f6 ISZERO
0x2f7 ISZERO
0x2f8 PUSH2 0x300
0x2fb JUMPI
---
0x2c0: JUMPDEST 
0x2c1: V147 = CALLER
0x2c2: V148 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d7: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0x2d8: V150 = 0x8fc
0x2de: V151 = ISZERO V53
0x2df: V152 = MUL V151 0x8fc
0x2e1: V153 = 0x40
0x2e3: V154 = M[0x40]
0x2e4: V155 = 0x0
0x2e6: V156 = 0x40
0x2e8: V157 = M[0x40]
0x2eb: V158 = SUB V154 V157
0x2f0: V159 = CALL V152 V149 V53 V157 V158 V157 0x0
0x2f6: V160 = ISZERO V159
0x2f7: V161 = ISZERO V160
0x2f8: V162 = 0x300
0x2fb: JUMPI 0x300 V161
---
Entry stack: [V10, 0xe4, V53]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0xe4, V53]

================================

Block 0x2fc
[0x2fc:0x2ff]
---
Predecessors: [0x2c0]
Successors: []
---
0x2fc PUSH1 0x0
0x2fe DUP1
0x2ff REVERT
---
0x2fc: V163 = 0x0
0x2ff: REVERT 0x0 0x0
---
Entry stack: [V10, 0xe4, V53]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe4, V53]

================================

Block 0x300
[0x300:0x34e]
---
Predecessors: [0x2c0]
Successors: [0x34f]
---
0x300 JUMPDEST
0x301 PUSH32 0xeee9b99e43cf47c0b059200515960a56b3ffc23ae0e8ecaf9f530832d310132b
0x322 ADDRESS
0x323 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x338 AND
0x339 BALANCE
0x33a PUSH1 0x40
0x33c MLOAD
0x33d DUP1
0x33e DUP3
0x33f DUP2
0x340 MSTORE
0x341 PUSH1 0x20
0x343 ADD
0x344 SWAP2
0x345 POP
0x346 POP
0x347 PUSH1 0x40
0x349 MLOAD
0x34a DUP1
0x34b SWAP2
0x34c SUB
0x34d SWAP1
0x34e LOG1
---
0x300: JUMPDEST 
0x301: V164 = 0xeee9b99e43cf47c0b059200515960a56b3ffc23ae0e8ecaf9f530832d310132b
0x322: V165 = ADDRESS
0x323: V166 = 0xffffffffffffffffffffffffffffffffffffffff
0x338: V167 = AND 0xffffffffffffffffffffffffffffffffffffffff V165
0x339: V168 = BALANCE V167
0x33a: V169 = 0x40
0x33c: V170 = M[0x40]
0x340: M[V170] = V168
0x341: V171 = 0x20
0x343: V172 = ADD 0x20 V170
0x347: V173 = 0x40
0x349: V174 = M[0x40]
0x34c: V175 = SUB V172 V174
0x34e: LOG V174 V175 0xeee9b99e43cf47c0b059200515960a56b3ffc23ae0e8ecaf9f530832d310132b
---
Entry stack: [V10, 0xe4, V53]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe4, V53]

================================

Block 0x34f
[0x34f:0x351]
---
Predecessors: [0x300]
Successors: [0xe4]
---
0x34f JUMPDEST
0x350 POP
0x351 JUMP
---
0x34f: JUMPDEST 
0x351: JUMP 0xe4
---
Entry stack: [V10, 0xe4, V53]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x352
[0x352:0x3a8]
---
Predecessors: [0xf1]
Successors: [0x3a9, 0x3ad]
---
0x352 JUMPDEST
0x353 PUSH1 0x0
0x355 DUP1
0x356 SWAP1
0x357 SLOAD
0x358 SWAP1
0x359 PUSH2 0x100
0x35c EXP
0x35d SWAP1
0x35e DIV
0x35f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x374 AND
0x375 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x38a AND
0x38b CALLER
0x38c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a1 AND
0x3a2 EQ
0x3a3 ISZERO
0x3a4 ISZERO
0x3a5 PUSH2 0x3ad
0x3a8 JUMPI
---
0x352: JUMPDEST 
0x353: V176 = 0x0
0x357: V177 = S[0x0]
0x359: V178 = 0x100
0x35c: V179 = EXP 0x100 0x0
0x35e: V180 = DIV V177 0x1
0x35f: V181 = 0xffffffffffffffffffffffffffffffffffffffff
0x374: V182 = AND 0xffffffffffffffffffffffffffffffffffffffff V180
0x375: V183 = 0xffffffffffffffffffffffffffffffffffffffff
0x38a: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V182
0x38b: V185 = CALLER
0x38c: V186 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a1: V187 = AND 0xffffffffffffffffffffffffffffffffffffffff V185
0x3a2: V188 = EQ V187 V184
0x3a3: V189 = ISZERO V188
0x3a4: V190 = ISZERO V189
0x3a5: V191 = 0x3ad
0x3a8: JUMPI 0x3ad V190
---
Entry stack: [V10, 0xf9]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf9]

================================

Block 0x3a9
[0x3a9:0x3ac]
---
Predecessors: [0x352]
Successors: []
---
0x3a9 PUSH1 0x0
0x3ab DUP1
0x3ac REVERT
---
0x3a9: V192 = 0x0
0x3ac: REVERT 0x0 0x0
---
Entry stack: [V10, 0xf9]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf9]

================================

Block 0x3ad
[0x3ad:0x3e6]
---
Predecessors: [0x352]
Successors: []
---
0x3ad JUMPDEST
0x3ae PUSH1 0x0
0x3b0 DUP1
0x3b1 SWAP1
0x3b2 SLOAD
0x3b3 SWAP1
0x3b4 PUSH2 0x100
0x3b7 EXP
0x3b8 SWAP1
0x3b9 DIV
0x3ba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3cf AND
0x3d0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e5 AND
0x3e6 SELFDESTRUCT
---
0x3ad: JUMPDEST 
0x3ae: V193 = 0x0
0x3b2: V194 = S[0x0]
0x3b4: V195 = 0x100
0x3b7: V196 = EXP 0x100 0x0
0x3b9: V197 = DIV V194 0x1
0x3ba: V198 = 0xffffffffffffffffffffffffffffffffffffffff
0x3cf: V199 = AND 0xffffffffffffffffffffffffffffffffffffffff V197
0x3d0: V200 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e5: V201 = AND 0xffffffffffffffffffffffffffffffffffffffff V199
0x3e6: SELFDESTRUCT V201
---
Entry stack: [V10, 0xf9]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf9]

================================

Block 0x3e7
[0x3e7:0x422]
---
Predecessors: []
Successors: []
---
0x3e7 JUMPDEST
0x3e8 JUMP
0x3e9 STOP
0x3ea LOG1
0x3eb PUSH6 0x627a7a723058
0x3f2 SHA3
0x3f3 DELEGATECALL
0x3f4 SHL
0x3f5 SHR
0x3f6 SUB
0x3f7 MISSING 0xe8
0x3f8 MUL
0x3f9 MISSING 0xfb
0x3fa MISSING 0x4c
0x3fb MISSING 0xd0
0x3fc OR
0x3fd MISSING 0xfb
0x3fe MISSING 0xe6
0x3ff MISSING 0xc
0x400 MISSING 0xcb
0x401 MISSING 0xc7
0x402 CODESIZE
0x403 CODECOPY
0x404 LOG3
0x405 MSIZE
0x406 DUP2
0x407 MISSING 0xdc
0x408 MISSING 0xcb
0x409 DUP15
0x40a SUB
0x40b CODECOPY
0x40c MISSING 0x21
0x40d CALLVALUE
0x40e SSTORE
0x40f MISSING 0xaa
0x410 MISSING 0x25
0x411 MISSING 0xde
0x412 PUSH16 0x29
---
0x3e7: JUMPDEST 
0x3e8: JUMP S0
0x3e9: STOP 
0x3ea: LOG S0 S1 S2
0x3eb: V202 = 0x627a7a723058
0x3f2: V203 = SHA3 0x627a7a723058 S3
0x3f3: V204 = DELEGATECALL V203 S4 S5 S6 S7 S8
0x3f4: V205 = SHL V204 S9
0x3f5: V206 = SHR V205 S10
0x3f6: V207 = SUB V206 S11
0x3f7: MISSING 0xe8
0x3f8: V208 = MUL S0 S1
0x3f9: MISSING 0xfb
0x3fa: MISSING 0x4c
0x3fb: MISSING 0xd0
0x3fc: V209 = OR S0 S1
0x3fd: MISSING 0xfb
0x3fe: MISSING 0xe6
0x3ff: MISSING 0xc
0x400: MISSING 0xcb
0x401: MISSING 0xc7
0x402: V210 = CODESIZE
0x403: CODECOPY V210 S0 S1
0x404: LOG S2 S3 S4 S5 S6
0x405: V211 = MSIZE
0x407: MISSING 0xdc
0x408: MISSING 0xcb
0x40a: V212 = SUB S14 S0
0x40b: CODECOPY V212 S1 S2
0x40c: MISSING 0x21
0x40d: V213 = CALLVALUE
0x40e: S[V213] = S0
0x40f: MISSING 0xaa
0x410: MISSING 0x25
0x411: MISSING 0xde
0x412: V214 = 0x29
---
Entry stack: []
Stack pops: 105280
Stack additions: [0x29]
Exit stack: []

================================

Function 0:
Public function signature: 0x5c33e1
Entry block: 0x63
Exit block: 0x6b
Body: 0x63, 0x6b, 0xfb, 0x152, 0x156, 0x1a5

Function 1:
Public function signature: 0x14dca88c
Entry block: 0x6d
Exit block: 0xad
Body: 0x6d, 0x74, 0x78, 0xad, 0x1a7, 0x200, 0x204, 0x240, 0x244, 0x25f

Function 2:
Public function signature: 0x155dd5ee
Entry block: 0xc3
Exit block: 0xe4
Body: 0xc3, 0xca, 0xce, 0xe4, 0x265, 0x2bc, 0x2c0, 0x2fc, 0x300, 0x34f

Function 3:
Public function signature: 0xb927e171
Entry block: 0xe6
Exit block: 0x3a9
Body: 0xe6, 0xed, 0xf1, 0x352, 0x3a9, 0x3ad

Function 4:
Public fallback function
Entry block: 0x5f
Exit block: 0x61
Body: 0x5f, 0x60, 0x61

