Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x98]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x98
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x98
0xc: JUMPI 0x98 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x9d]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x43d726d6
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x9d
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x43d726d6
0x3b: V13 = EQ V11 0x43d726d6
0x3c: V14 = 0x9d
0x3f: JUMPI 0x9d V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xb2]
---
0x40 DUP1
0x41 PUSH4 0x521eb273
0x46 EQ
0x47 PUSH2 0xb2
0x4a JUMPI
---
0x41: V15 = 0x521eb273
0x46: V16 = EQ 0x521eb273 V11
0x47: V17 = 0xb2
0x4a: JUMPI 0xb2 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xe1]
---
0x4b DUP1
0x4c PUSH4 0x8c52dc41
0x51 EQ
0x52 PUSH2 0xe1
0x55 JUMPI
---
0x4c: V18 = 0x8c52dc41
0x51: V19 = EQ 0x8c52dc41 V11
0x52: V20 = 0xe1
0x55: JUMPI 0xe1 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xf4]
---
0x56 DUP1
0x57 PUSH4 0x8da5cb5b
0x5c EQ
0x5d PUSH2 0xf4
0x60 JUMPI
---
0x57: V21 = 0x8da5cb5b
0x5c: V22 = EQ 0x8da5cb5b V11
0x5d: V23 = 0xf4
0x60: JUMPI 0xf4 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x107]
---
0x61 DUP1
0x62 PUSH4 0xc19d93fb
0x67 EQ
0x68 PUSH2 0x107
0x6b JUMPI
---
0x62: V24 = 0xc19d93fb
0x67: V25 = EQ 0xc19d93fb V11
0x68: V26 = 0x107
0x6b: JUMPI 0x107 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x13e]
---
0x6c DUP1
0x6d PUSH4 0xcb13cddb
0x72 EQ
0x73 PUSH2 0x13e
0x76 JUMPI
---
0x6d: V27 = 0xcb13cddb
0x72: V28 = EQ 0xcb13cddb V11
0x73: V29 = 0x13e
0x76: JUMPI 0x13e V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x16f]
---
0x77 DUP1
0x78 PUSH4 0xf2fde38b
0x7d EQ
0x7e PUSH2 0x16f
0x81 JUMPI
---
0x78: V30 = 0xf2fde38b
0x7d: V31 = EQ 0xf2fde38b V11
0x7e: V32 = 0x16f
0x81: JUMPI 0x16f V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x18e]
---
0x82 DUP1
0x83 PUSH4 0xf340fa01
0x88 EQ
0x89 PUSH2 0x18e
0x8c JUMPI
---
0x83: V33 = 0xf340fa01
0x88: V34 = EQ 0xf340fa01 V11
0x89: V35 = 0x18e
0x8c: JUMPI 0x18e V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x1a2]
---
0x8d DUP1
0x8e PUSH4 0xfa89401a
0x93 EQ
0x94 PUSH2 0x1a2
0x97 JUMPI
---
0x8e: V36 = 0xfa89401a
0x93: V37 = EQ 0xfa89401a V11
0x94: V38 = 0x1a2
0x97: JUMPI 0x1a2 V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x98
[0x98:0x9c]
---
Predecessors: [0x0, 0x8d]
Successors: []
---
0x98 JUMPDEST
0x99 PUSH1 0x0
0x9b DUP1
0x9c REVERT
---
0x98: JUMPDEST 
0x99: V39 = 0x0
0x9c: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9d
[0x9d:0xa3]
---
Predecessors: [0xd]
Successors: [0xa4, 0xa8]
---
0x9d JUMPDEST
0x9e CALLVALUE
0x9f ISZERO
0xa0 PUSH2 0xa8
0xa3 JUMPI
---
0x9d: JUMPDEST 
0x9e: V40 = CALLVALUE
0x9f: V41 = ISZERO V40
0xa0: V42 = 0xa8
0xa3: JUMPI 0xa8 V41
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa4
[0xa4:0xa7]
---
Predecessors: [0x9d]
Successors: []
---
0xa4 PUSH1 0x0
0xa6 DUP1
0xa7 REVERT
---
0xa4: V43 = 0x0
0xa7: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa8
[0xa8:0xaf]
---
Predecessors: [0x9d]
Successors: [0x1c1]
---
0xa8 JUMPDEST
0xa9 PUSH2 0xb0
0xac PUSH2 0x1c1
0xaf JUMP
---
0xa8: JUMPDEST 
0xa9: V44 = 0xb0
0xac: V45 = 0x1c1
0xaf: JUMP 0x1c1
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xb0]
Exit stack: [V11, 0xb0]

================================

Block 0xb0
[0xb0:0xb1]
---
Predecessors: [0x276, 0x2c6, 0x379, 0x44c, 0x4d7]
Successors: []
---
0xb0 JUMPDEST
0xb1 STOP
---
0xb0: JUMPDEST 
0xb1: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb2
[0xb2:0xb8]
---
Predecessors: [0x40]
Successors: [0xb9, 0xbd]
---
0xb2 JUMPDEST
0xb3 CALLVALUE
0xb4 ISZERO
0xb5 PUSH2 0xbd
0xb8 JUMPI
---
0xb2: JUMPDEST 
0xb3: V46 = CALLVALUE
0xb4: V47 = ISZERO V46
0xb5: V48 = 0xbd
0xb8: JUMPI 0xbd V47
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb9
[0xb9:0xbc]
---
Predecessors: [0xb2]
Successors: []
---
0xb9 PUSH1 0x0
0xbb DUP1
0xbc REVERT
---
0xb9: V49 = 0x0
0xbc: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xbd
[0xbd:0xc4]
---
Predecessors: [0xb2]
Successors: [0x278]
---
0xbd JUMPDEST
0xbe PUSH2 0xc5
0xc1 PUSH2 0x278
0xc4 JUMP
---
0xbd: JUMPDEST 
0xbe: V50 = 0xc5
0xc1: V51 = 0x278
0xc4: JUMP 0x278
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xc5]
Exit stack: [V11, 0xc5]

================================

Block 0xc5
[0xc5:0xe0]
---
Predecessors: [0x278, 0x318]
Successors: []
---
0xc5 JUMPDEST
0xc6 PUSH1 0x40
0xc8 MLOAD
0xc9 PUSH1 0x1
0xcb PUSH1 0xa0
0xcd PUSH1 0x2
0xcf EXP
0xd0 SUB
0xd1 SWAP1
0xd2 SWAP2
0xd3 AND
0xd4 DUP2
0xd5 MSTORE
0xd6 PUSH1 0x20
0xd8 ADD
0xd9 PUSH1 0x40
0xdb MLOAD
0xdc DUP1
0xdd SWAP2
0xde SUB
0xdf SWAP1
0xe0 RETURN
---
0xc5: JUMPDEST 
0xc6: V52 = 0x40
0xc8: V53 = M[0x40]
0xc9: V54 = 0x1
0xcb: V55 = 0xa0
0xcd: V56 = 0x2
0xcf: V57 = EXP 0x2 0xa0
0xd0: V58 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd3: V59 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xd5: M[V53] = V59
0xd6: V60 = 0x20
0xd8: V61 = ADD 0x20 V53
0xd9: V62 = 0x40
0xdb: V63 = M[0x40]
0xde: V64 = SUB V61 V63
0xe0: RETURN V63 V64
---
Entry stack: [V11, 0xc5, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xc5]

================================

Block 0xe1
[0xe1:0xe7]
---
Predecessors: [0x4b]
Successors: [0xe8, 0xec]
---
0xe1 JUMPDEST
0xe2 CALLVALUE
0xe3 ISZERO
0xe4 PUSH2 0xec
0xe7 JUMPI
---
0xe1: JUMPDEST 
0xe2: V65 = CALLVALUE
0xe3: V66 = ISZERO V65
0xe4: V67 = 0xec
0xe7: JUMPI 0xec V66
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe8
[0xe8:0xeb]
---
Predecessors: [0xe1]
Successors: []
---
0xe8 PUSH1 0x0
0xea DUP1
0xeb REVERT
---
0xe8: V68 = 0x0
0xeb: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xec
[0xec:0xf3]
---
Predecessors: [0xe1]
Successors: [0x287]
---
0xec JUMPDEST
0xed PUSH2 0xb0
0xf0 PUSH2 0x287
0xf3 JUMP
---
0xec: JUMPDEST 
0xed: V69 = 0xb0
0xf0: V70 = 0x287
0xf3: JUMP 0x287
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xb0]
Exit stack: [V11, 0xb0]

================================

Block 0xf4
[0xf4:0xfa]
---
Predecessors: [0x56]
Successors: [0xfb, 0xff]
---
0xf4 JUMPDEST
0xf5 CALLVALUE
0xf6 ISZERO
0xf7 PUSH2 0xff
0xfa JUMPI
---
0xf4: JUMPDEST 
0xf5: V71 = CALLVALUE
0xf6: V72 = ISZERO V71
0xf7: V73 = 0xff
0xfa: JUMPI 0xff V72
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xfb
[0xfb:0xfe]
---
Predecessors: [0xf4]
Successors: []
---
0xfb PUSH1 0x0
0xfd DUP1
0xfe REVERT
---
0xfb: V74 = 0x0
0xfe: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xff
[0xff:0x106]
---
Predecessors: [0xf4]
Successors: [0x318]
---
0xff JUMPDEST
0x100 PUSH2 0xc5
0x103 PUSH2 0x318
0x106 JUMP
---
0xff: JUMPDEST 
0x100: V75 = 0xc5
0x103: V76 = 0x318
0x106: JUMP 0x318
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xc5]
Exit stack: [V11, 0xc5]

================================

Block 0x107
[0x107:0x10d]
---
Predecessors: [0x61]
Successors: [0x10e, 0x112]
---
0x107 JUMPDEST
0x108 CALLVALUE
0x109 ISZERO
0x10a PUSH2 0x112
0x10d JUMPI
---
0x107: JUMPDEST 
0x108: V77 = CALLVALUE
0x109: V78 = ISZERO V77
0x10a: V79 = 0x112
0x10d: JUMPI 0x112 V78
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x10e
[0x10e:0x111]
---
Predecessors: [0x107]
Successors: []
---
0x10e PUSH1 0x0
0x110 DUP1
0x111 REVERT
---
0x10e: V80 = 0x0
0x111: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x112
[0x112:0x119]
---
Predecessors: [0x107]
Successors: [0x327]
---
0x112 JUMPDEST
0x113 PUSH2 0x11a
0x116 PUSH2 0x327
0x119 JUMP
---
0x112: JUMPDEST 
0x113: V81 = 0x11a
0x116: V82 = 0x327
0x119: JUMP 0x327
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x11a]
Exit stack: [V11, 0x11a]

================================

Block 0x11a
[0x11a:0x128]
---
Predecessors: [0x327]
Successors: [0x129, 0x12a]
---
0x11a JUMPDEST
0x11b PUSH1 0x40
0x11d MLOAD
0x11e DUP1
0x11f DUP3
0x120 PUSH1 0x2
0x122 DUP2
0x123 GT
0x124 ISZERO
0x125 PUSH2 0x12a
0x128 JUMPI
---
0x11a: JUMPDEST 
0x11b: V83 = 0x40
0x11d: V84 = M[0x40]
0x120: V85 = 0x2
0x123: V86 = GT V272 0x2
0x124: V87 = ISZERO V86
0x125: V88 = 0x12a
0x128: JUMPI 0x12a V87
---
Entry stack: [V11, 0x11a, V272]
Stack pops: 1
Stack additions: [S0, V84, V84, S0]
Exit stack: [V11, 0x11a, V272, V84, V84, V272]

================================

Block 0x129
[0x129:0x129]
---
Predecessors: [0x11a]
Successors: []
---
0x129 INVALID
---
0x129: INVALID 
---
Entry stack: [V11, 0x11a, V272, V84, V84, V272]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x11a, V272, V84, V84, V272]

================================

Block 0x12a
[0x12a:0x13d]
---
Predecessors: [0x11a]
Successors: []
---
0x12a JUMPDEST
0x12b PUSH1 0xff
0x12d AND
0x12e DUP2
0x12f MSTORE
0x130 PUSH1 0x20
0x132 ADD
0x133 SWAP2
0x134 POP
0x135 POP
0x136 PUSH1 0x40
0x138 MLOAD
0x139 DUP1
0x13a SWAP2
0x13b SUB
0x13c SWAP1
0x13d RETURN
---
0x12a: JUMPDEST 
0x12b: V89 = 0xff
0x12d: V90 = AND 0xff V272
0x12f: M[V84] = V90
0x130: V91 = 0x20
0x132: V92 = ADD 0x20 V84
0x136: V93 = 0x40
0x138: V94 = M[0x40]
0x13b: V95 = SUB V92 V94
0x13d: RETURN V94 V95
---
Entry stack: [V11, 0x11a, V272, V84, V84, V272]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x11a]

================================

Block 0x13e
[0x13e:0x144]
---
Predecessors: [0x6c]
Successors: [0x145, 0x149]
---
0x13e JUMPDEST
0x13f CALLVALUE
0x140 ISZERO
0x141 PUSH2 0x149
0x144 JUMPI
---
0x13e: JUMPDEST 
0x13f: V96 = CALLVALUE
0x140: V97 = ISZERO V96
0x141: V98 = 0x149
0x144: JUMPI 0x149 V97
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x145
[0x145:0x148]
---
Predecessors: [0x13e]
Successors: []
---
0x145 PUSH1 0x0
0x147 DUP1
0x148 REVERT
---
0x145: V99 = 0x0
0x148: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x149
[0x149:0x15c]
---
Predecessors: [0x13e]
Successors: [0x337]
---
0x149 JUMPDEST
0x14a PUSH2 0x15d
0x14d PUSH1 0x1
0x14f PUSH1 0xa0
0x151 PUSH1 0x2
0x153 EXP
0x154 SUB
0x155 PUSH1 0x4
0x157 CALLDATALOAD
0x158 AND
0x159 PUSH2 0x337
0x15c JUMP
---
0x149: JUMPDEST 
0x14a: V100 = 0x15d
0x14d: V101 = 0x1
0x14f: V102 = 0xa0
0x151: V103 = 0x2
0x153: V104 = EXP 0x2 0xa0
0x154: V105 = SUB 0x10000000000000000000000000000000000000000 0x1
0x155: V106 = 0x4
0x157: V107 = CALLDATALOAD 0x4
0x158: V108 = AND V107 0xffffffffffffffffffffffffffffffffffffffff
0x159: V109 = 0x337
0x15c: JUMP 0x337
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x15d, V108]
Exit stack: [V11, 0x15d, V108]

================================

Block 0x15d
[0x15d:0x16e]
---
Predecessors: [0x337]
Successors: []
---
0x15d JUMPDEST
0x15e PUSH1 0x40
0x160 MLOAD
0x161 SWAP1
0x162 DUP2
0x163 MSTORE
0x164 PUSH1 0x20
0x166 ADD
0x167 PUSH1 0x40
0x169 MLOAD
0x16a DUP1
0x16b SWAP2
0x16c SUB
0x16d SWAP1
0x16e RETURN
---
0x15d: JUMPDEST 
0x15e: V110 = 0x40
0x160: V111 = M[0x40]
0x163: M[V111] = V278
0x164: V112 = 0x20
0x166: V113 = ADD 0x20 V111
0x167: V114 = 0x40
0x169: V115 = M[0x40]
0x16c: V116 = SUB V113 V115
0x16e: RETURN V115 V116
---
Entry stack: [V11, 0x15d, V278]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x15d]

================================

Block 0x16f
[0x16f:0x175]
---
Predecessors: [0x77]
Successors: [0x176, 0x17a]
---
0x16f JUMPDEST
0x170 CALLVALUE
0x171 ISZERO
0x172 PUSH2 0x17a
0x175 JUMPI
---
0x16f: JUMPDEST 
0x170: V117 = CALLVALUE
0x171: V118 = ISZERO V117
0x172: V119 = 0x17a
0x175: JUMPI 0x17a V118
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x176
[0x176:0x179]
---
Predecessors: [0x16f]
Successors: []
---
0x176 PUSH1 0x0
0x178 DUP1
0x179 REVERT
---
0x176: V120 = 0x0
0x179: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x17a
[0x17a:0x18d]
---
Predecessors: [0x16f]
Successors: [0x349]
---
0x17a JUMPDEST
0x17b PUSH2 0xb0
0x17e PUSH1 0x1
0x180 PUSH1 0xa0
0x182 PUSH1 0x2
0x184 EXP
0x185 SUB
0x186 PUSH1 0x4
0x188 CALLDATALOAD
0x189 AND
0x18a PUSH2 0x349
0x18d JUMP
---
0x17a: JUMPDEST 
0x17b: V121 = 0xb0
0x17e: V122 = 0x1
0x180: V123 = 0xa0
0x182: V124 = 0x2
0x184: V125 = EXP 0x2 0xa0
0x185: V126 = SUB 0x10000000000000000000000000000000000000000 0x1
0x186: V127 = 0x4
0x188: V128 = CALLDATALOAD 0x4
0x189: V129 = AND V128 0xffffffffffffffffffffffffffffffffffffffff
0x18a: V130 = 0x349
0x18d: JUMP 0x349
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xb0, V129]
Exit stack: [V11, 0xb0, V129]

================================

Block 0x18e
[0x18e:0x1a1]
---
Predecessors: [0x82]
Successors: [0x3e4]
---
0x18e JUMPDEST
0x18f PUSH2 0xb0
0x192 PUSH1 0x1
0x194 PUSH1 0xa0
0x196 PUSH1 0x2
0x198 EXP
0x199 SUB
0x19a PUSH1 0x4
0x19c CALLDATALOAD
0x19d AND
0x19e PUSH2 0x3e4
0x1a1 JUMP
---
0x18e: JUMPDEST 
0x18f: V131 = 0xb0
0x192: V132 = 0x1
0x194: V133 = 0xa0
0x196: V134 = 0x2
0x198: V135 = EXP 0x2 0xa0
0x199: V136 = SUB 0x10000000000000000000000000000000000000000 0x1
0x19a: V137 = 0x4
0x19c: V138 = CALLDATALOAD 0x4
0x19d: V139 = AND V138 0xffffffffffffffffffffffffffffffffffffffff
0x19e: V140 = 0x3e4
0x1a1: JUMP 0x3e4
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xb0, V139]
Exit stack: [V11, 0xb0, V139]

================================

Block 0x1a2
[0x1a2:0x1a8]
---
Predecessors: [0x8d]
Successors: [0x1a9, 0x1ad]
---
0x1a2 JUMPDEST
0x1a3 CALLVALUE
0x1a4 ISZERO
0x1a5 PUSH2 0x1ad
0x1a8 JUMPI
---
0x1a2: JUMPDEST 
0x1a3: V141 = CALLVALUE
0x1a4: V142 = ISZERO V141
0x1a5: V143 = 0x1ad
0x1a8: JUMPI 0x1ad V142
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1a9
[0x1a9:0x1ac]
---
Predecessors: [0x1a2]
Successors: []
---
0x1a9 PUSH1 0x0
0x1ab DUP1
0x1ac REVERT
---
0x1a9: V144 = 0x0
0x1ac: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1ad
[0x1ad:0x1c0]
---
Predecessors: [0x1a2]
Successors: [0x468]
---
0x1ad JUMPDEST
0x1ae PUSH2 0xb0
0x1b1 PUSH1 0x1
0x1b3 PUSH1 0xa0
0x1b5 PUSH1 0x2
0x1b7 EXP
0x1b8 SUB
0x1b9 PUSH1 0x4
0x1bb CALLDATALOAD
0x1bc AND
0x1bd PUSH2 0x468
0x1c0 JUMP
---
0x1ad: JUMPDEST 
0x1ae: V145 = 0xb0
0x1b1: V146 = 0x1
0x1b3: V147 = 0xa0
0x1b5: V148 = 0x2
0x1b7: V149 = EXP 0x2 0xa0
0x1b8: V150 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b9: V151 = 0x4
0x1bb: V152 = CALLDATALOAD 0x4
0x1bc: V153 = AND V152 0xffffffffffffffffffffffffffffffffffffffff
0x1bd: V154 = 0x468
0x1c0: JUMP 0x468
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xb0, V153]
Exit stack: [V11, 0xb0, V153]

================================

Block 0x1c1
[0x1c1:0x1d7]
---
Predecessors: [0xa8]
Successors: [0x1d8, 0x1dc]
---
0x1c1 JUMPDEST
0x1c2 PUSH1 0x0
0x1c4 SLOAD
0x1c5 CALLER
0x1c6 PUSH1 0x1
0x1c8 PUSH1 0xa0
0x1ca PUSH1 0x2
0x1cc EXP
0x1cd SUB
0x1ce SWAP1
0x1cf DUP2
0x1d0 AND
0x1d1 SWAP2
0x1d2 AND
0x1d3 EQ
0x1d4 PUSH2 0x1dc
0x1d7 JUMPI
---
0x1c1: JUMPDEST 
0x1c2: V155 = 0x0
0x1c4: V156 = S[0x0]
0x1c5: V157 = CALLER
0x1c6: V158 = 0x1
0x1c8: V159 = 0xa0
0x1ca: V160 = 0x2
0x1cc: V161 = EXP 0x2 0xa0
0x1cd: V162 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d0: V163 = AND 0xffffffffffffffffffffffffffffffffffffffff V157
0x1d2: V164 = AND V156 0xffffffffffffffffffffffffffffffffffffffff
0x1d3: V165 = EQ V164 V163
0x1d4: V166 = 0x1dc
0x1d7: JUMPI 0x1dc V165
---
Entry stack: [V11, 0xb0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0]

================================

Block 0x1d8
[0x1d8:0x1db]
---
Predecessors: [0x1c1]
Successors: []
---
0x1d8 PUSH1 0x0
0x1da DUP1
0x1db REVERT
---
0x1d8: V167 = 0x0
0x1db: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0]

================================

Block 0x1dc
[0x1dc:0x271]
---
Predecessors: [0x1c1]
Successors: [0x272, 0x276]
---
0x1dc JUMPDEST
0x1dd PUSH1 0x2
0x1df DUP1
0x1e0 SLOAD
0x1e1 PUSH21 0xff0000000000000000000000000000000000000000
0x1f7 NOT
0x1f8 AND
0x1f9 PUSH21 0x20000000000000000000000000000000000000000
0x20f OR
0x210 SWAP1
0x211 SSTORE
0x212 PUSH32 0x1cdde67b72a90f19919ac732a437ac2f7a10fc128d28c2a6e525d89ce5cd9d3a
0x233 PUSH1 0x40
0x235 MLOAD
0x236 PUSH1 0x40
0x238 MLOAD
0x239 DUP1
0x23a SWAP2
0x23b SUB
0x23c SWAP1
0x23d LOG1
0x23e PUSH1 0x2
0x240 SLOAD
0x241 PUSH1 0x1
0x243 PUSH1 0xa0
0x245 PUSH1 0x2
0x247 EXP
0x248 SUB
0x249 SWAP1
0x24a DUP2
0x24b AND
0x24c SWAP1
0x24d ADDRESS
0x24e AND
0x24f BALANCE
0x250 DUP1
0x251 ISZERO
0x252 PUSH2 0x8fc
0x255 MUL
0x256 SWAP1
0x257 PUSH1 0x40
0x259 MLOAD
0x25a PUSH1 0x0
0x25c PUSH1 0x40
0x25e MLOAD
0x25f DUP1
0x260 DUP4
0x261 SUB
0x262 DUP2
0x263 DUP6
0x264 DUP9
0x265 DUP9
0x266 CALL
0x267 SWAP4
0x268 POP
0x269 POP
0x26a POP
0x26b POP
0x26c ISZERO
0x26d ISZERO
0x26e PUSH2 0x276
0x271 JUMPI
---
0x1dc: JUMPDEST 
0x1dd: V168 = 0x2
0x1e0: V169 = S[0x2]
0x1e1: V170 = 0xff0000000000000000000000000000000000000000
0x1f7: V171 = NOT 0xff0000000000000000000000000000000000000000
0x1f8: V172 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V169
0x1f9: V173 = 0x20000000000000000000000000000000000000000
0x20f: V174 = OR 0x20000000000000000000000000000000000000000 V172
0x211: S[0x2] = V174
0x212: V175 = 0x1cdde67b72a90f19919ac732a437ac2f7a10fc128d28c2a6e525d89ce5cd9d3a
0x233: V176 = 0x40
0x235: V177 = M[0x40]
0x236: V178 = 0x40
0x238: V179 = M[0x40]
0x23b: V180 = SUB V177 V179
0x23d: LOG V179 V180 0x1cdde67b72a90f19919ac732a437ac2f7a10fc128d28c2a6e525d89ce5cd9d3a
0x23e: V181 = 0x2
0x240: V182 = S[0x2]
0x241: V183 = 0x1
0x243: V184 = 0xa0
0x245: V185 = 0x2
0x247: V186 = EXP 0x2 0xa0
0x248: V187 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24b: V188 = AND 0xffffffffffffffffffffffffffffffffffffffff V182
0x24d: V189 = ADDRESS
0x24e: V190 = AND V189 0xffffffffffffffffffffffffffffffffffffffff
0x24f: V191 = BALANCE V190
0x251: V192 = ISZERO V191
0x252: V193 = 0x8fc
0x255: V194 = MUL 0x8fc V192
0x257: V195 = 0x40
0x259: V196 = M[0x40]
0x25a: V197 = 0x0
0x25c: V198 = 0x40
0x25e: V199 = M[0x40]
0x261: V200 = SUB V196 V199
0x266: V201 = CALL V194 V188 V191 V199 V200 V199 0x0
0x26c: V202 = ISZERO V201
0x26d: V203 = ISZERO V202
0x26e: V204 = 0x276
0x271: JUMPI 0x276 V203
---
Entry stack: [V11, 0xb0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0]

================================

Block 0x272
[0x272:0x275]
---
Predecessors: [0x1dc]
Successors: []
---
0x272 PUSH1 0x0
0x274 DUP1
0x275 REVERT
---
0x272: V205 = 0x0
0x275: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0]

================================

Block 0x276
[0x276:0x277]
---
Predecessors: [0x1dc]
Successors: [0xb0]
---
0x276 JUMPDEST
0x277 JUMP
---
0x276: JUMPDEST 
0x277: JUMP 0xb0
---
Entry stack: [V11, 0xb0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x278
[0x278:0x286]
---
Predecessors: [0xbd]
Successors: [0xc5]
---
0x278 JUMPDEST
0x279 PUSH1 0x2
0x27b SLOAD
0x27c PUSH1 0x1
0x27e PUSH1 0xa0
0x280 PUSH1 0x2
0x282 EXP
0x283 SUB
0x284 AND
0x285 DUP2
0x286 JUMP
---
0x278: JUMPDEST 
0x279: V206 = 0x2
0x27b: V207 = S[0x2]
0x27c: V208 = 0x1
0x27e: V209 = 0xa0
0x280: V210 = 0x2
0x282: V211 = EXP 0x2 0xa0
0x283: V212 = SUB 0x10000000000000000000000000000000000000000 0x1
0x284: V213 = AND 0xffffffffffffffffffffffffffffffffffffffff V207
0x286: JUMP 0xc5
---
Entry stack: [V11, 0xc5]
Stack pops: 1
Stack additions: [S0, V213]
Exit stack: [V11, 0xc5, V213]

================================

Block 0x287
[0x287:0x29d]
---
Predecessors: [0xec]
Successors: [0x29e, 0x2a2]
---
0x287 JUMPDEST
0x288 PUSH1 0x0
0x28a SLOAD
0x28b CALLER
0x28c PUSH1 0x1
0x28e PUSH1 0xa0
0x290 PUSH1 0x2
0x292 EXP
0x293 SUB
0x294 SWAP1
0x295 DUP2
0x296 AND
0x297 SWAP2
0x298 AND
0x299 EQ
0x29a PUSH2 0x2a2
0x29d JUMPI
---
0x287: JUMPDEST 
0x288: V214 = 0x0
0x28a: V215 = S[0x0]
0x28b: V216 = CALLER
0x28c: V217 = 0x1
0x28e: V218 = 0xa0
0x290: V219 = 0x2
0x292: V220 = EXP 0x2 0xa0
0x293: V221 = SUB 0x10000000000000000000000000000000000000000 0x1
0x296: V222 = AND 0xffffffffffffffffffffffffffffffffffffffff V216
0x298: V223 = AND V215 0xffffffffffffffffffffffffffffffffffffffff
0x299: V224 = EQ V223 V222
0x29a: V225 = 0x2a2
0x29d: JUMPI 0x2a2 V224
---
Entry stack: [V11, 0xb0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0]

================================

Block 0x29e
[0x29e:0x2a1]
---
Predecessors: [0x287]
Successors: []
---
0x29e PUSH1 0x0
0x2a0 DUP1
0x2a1 REVERT
---
0x29e: V226 = 0x0
0x2a1: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0]

================================

Block 0x2a2
[0x2a2:0x2ba]
---
Predecessors: [0x287]
Successors: [0x2bb, 0x2bc]
---
0x2a2 JUMPDEST
0x2a3 PUSH1 0x0
0x2a5 PUSH1 0x2
0x2a7 DUP1
0x2a8 SLOAD
0x2a9 PUSH1 0xa0
0x2ab PUSH1 0x2
0x2ad EXP
0x2ae SWAP1
0x2af DIV
0x2b0 PUSH1 0xff
0x2b2 AND
0x2b3 SWAP1
0x2b4 DUP2
0x2b5 GT
0x2b6 ISZERO
0x2b7 PUSH2 0x2bc
0x2ba JUMPI
---
0x2a2: JUMPDEST 
0x2a3: V227 = 0x0
0x2a5: V228 = 0x2
0x2a8: V229 = S[0x2]
0x2a9: V230 = 0xa0
0x2ab: V231 = 0x2
0x2ad: V232 = EXP 0x2 0xa0
0x2af: V233 = DIV V229 0x10000000000000000000000000000000000000000
0x2b0: V234 = 0xff
0x2b2: V235 = AND 0xff V233
0x2b5: V236 = GT V235 0x2
0x2b6: V237 = ISZERO V236
0x2b7: V238 = 0x2bc
0x2ba: JUMPI 0x2bc V237
---
Entry stack: [V11, 0xb0]
Stack pops: 0
Stack additions: [0x0, V235]
Exit stack: [V11, 0xb0, 0x0, V235]

================================

Block 0x2bb
[0x2bb:0x2bb]
---
Predecessors: [0x2a2]
Successors: []
---
0x2bb INVALID
---
0x2bb: INVALID 
---
Entry stack: [V11, 0xb0, 0x0, V235]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, 0x0, V235]

================================

Block 0x2bc
[0x2bc:0x2c1]
---
Predecessors: [0x2a2]
Successors: [0x2c2, 0x2c6]
---
0x2bc JUMPDEST
0x2bd EQ
0x2be PUSH2 0x2c6
0x2c1 JUMPI
---
0x2bc: JUMPDEST 
0x2bd: V239 = EQ V235 0x0
0x2be: V240 = 0x2c6
0x2c1: JUMPI 0x2c6 V239
---
Entry stack: [V11, 0xb0, 0x0, V235]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0xb0]

================================

Block 0x2c2
[0x2c2:0x2c5]
---
Predecessors: [0x2bc]
Successors: []
---
0x2c2 PUSH1 0x0
0x2c4 DUP1
0x2c5 REVERT
---
0x2c2: V241 = 0x0
0x2c5: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0]

================================

Block 0x2c6
[0x2c6:0x317]
---
Predecessors: [0x2bc]
Successors: [0xb0]
---
0x2c6 JUMPDEST
0x2c7 PUSH1 0x2
0x2c9 DUP1
0x2ca SLOAD
0x2cb PUSH21 0xff0000000000000000000000000000000000000000
0x2e1 NOT
0x2e2 AND
0x2e3 PUSH1 0xa0
0x2e5 PUSH1 0x2
0x2e7 EXP
0x2e8 OR
0x2e9 SWAP1
0x2ea SSTORE
0x2eb PUSH32 0x599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b89
0x30c PUSH1 0x40
0x30e MLOAD
0x30f PUSH1 0x40
0x311 MLOAD
0x312 DUP1
0x313 SWAP2
0x314 SUB
0x315 SWAP1
0x316 LOG1
0x317 JUMP
---
0x2c6: JUMPDEST 
0x2c7: V242 = 0x2
0x2ca: V243 = S[0x2]
0x2cb: V244 = 0xff0000000000000000000000000000000000000000
0x2e1: V245 = NOT 0xff0000000000000000000000000000000000000000
0x2e2: V246 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V243
0x2e3: V247 = 0xa0
0x2e5: V248 = 0x2
0x2e7: V249 = EXP 0x2 0xa0
0x2e8: V250 = OR 0x10000000000000000000000000000000000000000 V246
0x2ea: S[0x2] = V250
0x2eb: V251 = 0x599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b89
0x30c: V252 = 0x40
0x30e: V253 = M[0x40]
0x30f: V254 = 0x40
0x311: V255 = M[0x40]
0x314: V256 = SUB V253 V255
0x316: LOG V255 V256 0x599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b89
0x317: JUMP 0xb0
---
Entry stack: [V11, 0xb0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x318
[0x318:0x326]
---
Predecessors: [0xff]
Successors: [0xc5]
---
0x318 JUMPDEST
0x319 PUSH1 0x0
0x31b SLOAD
0x31c PUSH1 0x1
0x31e PUSH1 0xa0
0x320 PUSH1 0x2
0x322 EXP
0x323 SUB
0x324 AND
0x325 DUP2
0x326 JUMP
---
0x318: JUMPDEST 
0x319: V257 = 0x0
0x31b: V258 = S[0x0]
0x31c: V259 = 0x1
0x31e: V260 = 0xa0
0x320: V261 = 0x2
0x322: V262 = EXP 0x2 0xa0
0x323: V263 = SUB 0x10000000000000000000000000000000000000000 0x1
0x324: V264 = AND 0xffffffffffffffffffffffffffffffffffffffff V258
0x326: JUMP 0xc5
---
Entry stack: [V11, 0xc5]
Stack pops: 1
Stack additions: [S0, V264]
Exit stack: [V11, 0xc5, V264]

================================

Block 0x327
[0x327:0x336]
---
Predecessors: [0x112]
Successors: [0x11a]
---
0x327 JUMPDEST
0x328 PUSH1 0x2
0x32a SLOAD
0x32b PUSH1 0xa0
0x32d PUSH1 0x2
0x32f EXP
0x330 SWAP1
0x331 DIV
0x332 PUSH1 0xff
0x334 AND
0x335 DUP2
0x336 JUMP
---
0x327: JUMPDEST 
0x328: V265 = 0x2
0x32a: V266 = S[0x2]
0x32b: V267 = 0xa0
0x32d: V268 = 0x2
0x32f: V269 = EXP 0x2 0xa0
0x331: V270 = DIV V266 0x10000000000000000000000000000000000000000
0x332: V271 = 0xff
0x334: V272 = AND 0xff V270
0x336: JUMP 0x11a
---
Entry stack: [V11, 0x11a]
Stack pops: 1
Stack additions: [S0, V272]
Exit stack: [V11, 0x11a, V272]

================================

Block 0x337
[0x337:0x348]
---
Predecessors: [0x149]
Successors: [0x15d]
---
0x337 JUMPDEST
0x338 PUSH1 0x1
0x33a PUSH1 0x20
0x33c MSTORE
0x33d PUSH1 0x0
0x33f SWAP1
0x340 DUP2
0x341 MSTORE
0x342 PUSH1 0x40
0x344 SWAP1
0x345 SHA3
0x346 SLOAD
0x347 DUP2
0x348 JUMP
---
0x337: JUMPDEST 
0x338: V273 = 0x1
0x33a: V274 = 0x20
0x33c: M[0x20] = 0x1
0x33d: V275 = 0x0
0x341: M[0x0] = V108
0x342: V276 = 0x40
0x345: V277 = SHA3 0x0 0x40
0x346: V278 = S[V277]
0x348: JUMP 0x15d
---
Entry stack: [V11, 0x15d, V108]
Stack pops: 2
Stack additions: [S1, V278]
Exit stack: [V11, 0x15d, V278]

================================

Block 0x349
[0x349:0x35f]
---
Predecessors: [0x17a]
Successors: [0x360, 0x364]
---
0x349 JUMPDEST
0x34a PUSH1 0x0
0x34c SLOAD
0x34d CALLER
0x34e PUSH1 0x1
0x350 PUSH1 0xa0
0x352 PUSH1 0x2
0x354 EXP
0x355 SUB
0x356 SWAP1
0x357 DUP2
0x358 AND
0x359 SWAP2
0x35a AND
0x35b EQ
0x35c PUSH2 0x364
0x35f JUMPI
---
0x349: JUMPDEST 
0x34a: V279 = 0x0
0x34c: V280 = S[0x0]
0x34d: V281 = CALLER
0x34e: V282 = 0x1
0x350: V283 = 0xa0
0x352: V284 = 0x2
0x354: V285 = EXP 0x2 0xa0
0x355: V286 = SUB 0x10000000000000000000000000000000000000000 0x1
0x358: V287 = AND 0xffffffffffffffffffffffffffffffffffffffff V281
0x35a: V288 = AND V280 0xffffffffffffffffffffffffffffffffffffffff
0x35b: V289 = EQ V288 V287
0x35c: V290 = 0x364
0x35f: JUMPI 0x364 V289
---
Entry stack: [V11, 0xb0, V129]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V129]

================================

Block 0x360
[0x360:0x363]
---
Predecessors: [0x349]
Successors: []
---
0x360 PUSH1 0x0
0x362 DUP1
0x363 REVERT
---
0x360: V291 = 0x0
0x363: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb0, V129]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V129]

================================

Block 0x364
[0x364:0x374]
---
Predecessors: [0x349]
Successors: [0x375, 0x379]
---
0x364 JUMPDEST
0x365 PUSH1 0x1
0x367 PUSH1 0xa0
0x369 PUSH1 0x2
0x36b EXP
0x36c SUB
0x36d DUP2
0x36e AND
0x36f ISZERO
0x370 ISZERO
0x371 PUSH2 0x379
0x374 JUMPI
---
0x364: JUMPDEST 
0x365: V292 = 0x1
0x367: V293 = 0xa0
0x369: V294 = 0x2
0x36b: V295 = EXP 0x2 0xa0
0x36c: V296 = SUB 0x10000000000000000000000000000000000000000 0x1
0x36e: V297 = AND V129 0xffffffffffffffffffffffffffffffffffffffff
0x36f: V298 = ISZERO V297
0x370: V299 = ISZERO V298
0x371: V300 = 0x379
0x374: JUMPI 0x379 V299
---
Entry stack: [V11, 0xb0, V129]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xb0, V129]

================================

Block 0x375
[0x375:0x378]
---
Predecessors: [0x364]
Successors: []
---
0x375 PUSH1 0x0
0x377 DUP1
0x378 REVERT
---
0x375: V301 = 0x0
0x378: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb0, V129]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V129]

================================

Block 0x379
[0x379:0x3e3]
---
Predecessors: [0x364]
Successors: [0xb0]
---
0x379 JUMPDEST
0x37a PUSH1 0x0
0x37c SLOAD
0x37d PUSH1 0x1
0x37f PUSH1 0xa0
0x381 PUSH1 0x2
0x383 EXP
0x384 SUB
0x385 DUP1
0x386 DUP4
0x387 AND
0x388 SWAP2
0x389 AND
0x38a PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x3ab PUSH1 0x40
0x3ad MLOAD
0x3ae PUSH1 0x40
0x3b0 MLOAD
0x3b1 DUP1
0x3b2 SWAP2
0x3b3 SUB
0x3b4 SWAP1
0x3b5 LOG3
0x3b6 PUSH1 0x0
0x3b8 DUP1
0x3b9 SLOAD
0x3ba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3cf NOT
0x3d0 AND
0x3d1 PUSH1 0x1
0x3d3 PUSH1 0xa0
0x3d5 PUSH1 0x2
0x3d7 EXP
0x3d8 SUB
0x3d9 SWAP3
0x3da SWAP1
0x3db SWAP3
0x3dc AND
0x3dd SWAP2
0x3de SWAP1
0x3df SWAP2
0x3e0 OR
0x3e1 SWAP1
0x3e2 SSTORE
0x3e3 JUMP
---
0x379: JUMPDEST 
0x37a: V302 = 0x0
0x37c: V303 = S[0x0]
0x37d: V304 = 0x1
0x37f: V305 = 0xa0
0x381: V306 = 0x2
0x383: V307 = EXP 0x2 0xa0
0x384: V308 = SUB 0x10000000000000000000000000000000000000000 0x1
0x387: V309 = AND V129 0xffffffffffffffffffffffffffffffffffffffff
0x389: V310 = AND V303 0xffffffffffffffffffffffffffffffffffffffff
0x38a: V311 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x3ab: V312 = 0x40
0x3ad: V313 = M[0x40]
0x3ae: V314 = 0x40
0x3b0: V315 = M[0x40]
0x3b3: V316 = SUB V313 V315
0x3b5: LOG V315 V316 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V310 V309
0x3b6: V317 = 0x0
0x3b9: V318 = S[0x0]
0x3ba: V319 = 0xffffffffffffffffffffffffffffffffffffffff
0x3cf: V320 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3d0: V321 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V318
0x3d1: V322 = 0x1
0x3d3: V323 = 0xa0
0x3d5: V324 = 0x2
0x3d7: V325 = EXP 0x2 0xa0
0x3d8: V326 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3dc: V327 = AND 0xffffffffffffffffffffffffffffffffffffffff V129
0x3e0: V328 = OR V327 V321
0x3e2: S[0x0] = V328
0x3e3: JUMP 0xb0
---
Entry stack: [V11, 0xb0, V129]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x3e4
[0x3e4:0x3fa]
---
Predecessors: [0x18e]
Successors: [0x3fb, 0x3ff]
---
0x3e4 JUMPDEST
0x3e5 PUSH1 0x0
0x3e7 SLOAD
0x3e8 CALLER
0x3e9 PUSH1 0x1
0x3eb PUSH1 0xa0
0x3ed PUSH1 0x2
0x3ef EXP
0x3f0 SUB
0x3f1 SWAP1
0x3f2 DUP2
0x3f3 AND
0x3f4 SWAP2
0x3f5 AND
0x3f6 EQ
0x3f7 PUSH2 0x3ff
0x3fa JUMPI
---
0x3e4: JUMPDEST 
0x3e5: V329 = 0x0
0x3e7: V330 = S[0x0]
0x3e8: V331 = CALLER
0x3e9: V332 = 0x1
0x3eb: V333 = 0xa0
0x3ed: V334 = 0x2
0x3ef: V335 = EXP 0x2 0xa0
0x3f0: V336 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f3: V337 = AND 0xffffffffffffffffffffffffffffffffffffffff V331
0x3f5: V338 = AND V330 0xffffffffffffffffffffffffffffffffffffffff
0x3f6: V339 = EQ V338 V337
0x3f7: V340 = 0x3ff
0x3fa: JUMPI 0x3ff V339
---
Entry stack: [V11, 0xb0, V139]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V139]

================================

Block 0x3fb
[0x3fb:0x3fe]
---
Predecessors: [0x3e4]
Successors: []
---
0x3fb PUSH1 0x0
0x3fd DUP1
0x3fe REVERT
---
0x3fb: V341 = 0x0
0x3fe: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb0, V139]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V139]

================================

Block 0x3ff
[0x3ff:0x417]
---
Predecessors: [0x3e4]
Successors: [0x418, 0x419]
---
0x3ff JUMPDEST
0x400 PUSH1 0x0
0x402 PUSH1 0x2
0x404 DUP1
0x405 SLOAD
0x406 PUSH1 0xa0
0x408 PUSH1 0x2
0x40a EXP
0x40b SWAP1
0x40c DIV
0x40d PUSH1 0xff
0x40f AND
0x410 SWAP1
0x411 DUP2
0x412 GT
0x413 ISZERO
0x414 PUSH2 0x419
0x417 JUMPI
---
0x3ff: JUMPDEST 
0x400: V342 = 0x0
0x402: V343 = 0x2
0x405: V344 = S[0x2]
0x406: V345 = 0xa0
0x408: V346 = 0x2
0x40a: V347 = EXP 0x2 0xa0
0x40c: V348 = DIV V344 0x10000000000000000000000000000000000000000
0x40d: V349 = 0xff
0x40f: V350 = AND 0xff V348
0x412: V351 = GT V350 0x2
0x413: V352 = ISZERO V351
0x414: V353 = 0x419
0x417: JUMPI 0x419 V352
---
Entry stack: [V11, 0xb0, V139]
Stack pops: 0
Stack additions: [0x0, V350]
Exit stack: [V11, 0xb0, V139, 0x0, V350]

================================

Block 0x418
[0x418:0x418]
---
Predecessors: [0x3ff]
Successors: []
---
0x418 INVALID
---
0x418: INVALID 
---
Entry stack: [V11, 0xb0, V139, 0x0, V350]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V139, 0x0, V350]

================================

Block 0x419
[0x419:0x41e]
---
Predecessors: [0x3ff]
Successors: [0x41f, 0x423]
---
0x419 JUMPDEST
0x41a EQ
0x41b PUSH2 0x423
0x41e JUMPI
---
0x419: JUMPDEST 
0x41a: V354 = EQ V350 0x0
0x41b: V355 = 0x423
0x41e: JUMPI 0x423 V354
---
Entry stack: [V11, 0xb0, V139, 0x0, V350]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0xb0, V139]

================================

Block 0x41f
[0x41f:0x422]
---
Predecessors: [0x419]
Successors: []
---
0x41f PUSH1 0x0
0x421 DUP1
0x422 REVERT
---
0x41f: V356 = 0x0
0x422: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb0, V139]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V139]

================================

Block 0x423
[0x423:0x44b]
---
Predecessors: [0x419]
Successors: [0x518]
---
0x423 JUMPDEST
0x424 PUSH1 0x1
0x426 PUSH1 0xa0
0x428 PUSH1 0x2
0x42a EXP
0x42b SUB
0x42c DUP2
0x42d AND
0x42e PUSH1 0x0
0x430 SWAP1
0x431 DUP2
0x432 MSTORE
0x433 PUSH1 0x1
0x435 PUSH1 0x20
0x437 MSTORE
0x438 PUSH1 0x40
0x43a SWAP1
0x43b SHA3
0x43c SLOAD
0x43d PUSH2 0x44c
0x440 SWAP1
0x441 CALLVALUE
0x442 PUSH4 0xffffffff
0x447 PUSH2 0x518
0x44a AND
0x44b JUMP
---
0x423: JUMPDEST 
0x424: V357 = 0x1
0x426: V358 = 0xa0
0x428: V359 = 0x2
0x42a: V360 = EXP 0x2 0xa0
0x42b: V361 = SUB 0x10000000000000000000000000000000000000000 0x1
0x42d: V362 = AND V139 0xffffffffffffffffffffffffffffffffffffffff
0x42e: V363 = 0x0
0x432: M[0x0] = V362
0x433: V364 = 0x1
0x435: V365 = 0x20
0x437: M[0x20] = 0x1
0x438: V366 = 0x40
0x43b: V367 = SHA3 0x0 0x40
0x43c: V368 = S[V367]
0x43d: V369 = 0x44c
0x441: V370 = CALLVALUE
0x442: V371 = 0xffffffff
0x447: V372 = 0x518
0x44a: V373 = AND 0x518 0xffffffff
0x44b: JUMP 0x518
---
Entry stack: [V11, 0xb0, V139]
Stack pops: 1
Stack additions: [S0, 0x44c, V368, V370]
Exit stack: [V11, 0xb0, V139, 0x44c, V368, V370]

================================

Block 0x44c
[0x44c:0x467]
---
Predecessors: [0x525]
Successors: [0xb0]
---
0x44c JUMPDEST
0x44d PUSH1 0x1
0x44f PUSH1 0xa0
0x451 PUSH1 0x2
0x453 EXP
0x454 SUB
0x455 SWAP1
0x456 SWAP2
0x457 AND
0x458 PUSH1 0x0
0x45a SWAP1
0x45b DUP2
0x45c MSTORE
0x45d PUSH1 0x1
0x45f PUSH1 0x20
0x461 MSTORE
0x462 PUSH1 0x40
0x464 SWAP1
0x465 SHA3
0x466 SSTORE
0x467 JUMP
---
0x44c: JUMPDEST 
0x44d: V374 = 0x1
0x44f: V375 = 0xa0
0x451: V376 = 0x2
0x453: V377 = EXP 0x2 0xa0
0x454: V378 = SUB 0x10000000000000000000000000000000000000000 0x1
0x457: V379 = AND V139 0xffffffffffffffffffffffffffffffffffffffff
0x458: V380 = 0x0
0x45c: M[0x0] = V379
0x45d: V381 = 0x1
0x45f: V382 = 0x20
0x461: M[0x20] = 0x1
0x462: V383 = 0x40
0x465: V384 = SHA3 0x0 0x40
0x466: S[V384] = V440
0x467: JUMP 0xb0
---
Entry stack: [V11, 0xb0, V139, V440]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x468
[0x468:0x482]
---
Predecessors: [0x1ad]
Successors: [0x483, 0x484]
---
0x468 JUMPDEST
0x469 PUSH1 0x0
0x46b PUSH1 0x1
0x46d PUSH1 0x2
0x46f DUP1
0x470 SLOAD
0x471 PUSH1 0xa0
0x473 PUSH1 0x2
0x475 EXP
0x476 SWAP1
0x477 DIV
0x478 PUSH1 0xff
0x47a AND
0x47b SWAP1
0x47c DUP2
0x47d GT
0x47e ISZERO
0x47f PUSH2 0x484
0x482 JUMPI
---
0x468: JUMPDEST 
0x469: V385 = 0x0
0x46b: V386 = 0x1
0x46d: V387 = 0x2
0x470: V388 = S[0x2]
0x471: V389 = 0xa0
0x473: V390 = 0x2
0x475: V391 = EXP 0x2 0xa0
0x477: V392 = DIV V388 0x10000000000000000000000000000000000000000
0x478: V393 = 0xff
0x47a: V394 = AND 0xff V392
0x47d: V395 = GT V394 0x2
0x47e: V396 = ISZERO V395
0x47f: V397 = 0x484
0x482: JUMPI 0x484 V396
---
Entry stack: [V11, 0xb0, V153]
Stack pops: 0
Stack additions: [0x0, 0x1, V394]
Exit stack: [V11, 0xb0, V153, 0x0, 0x1, V394]

================================

Block 0x483
[0x483:0x483]
---
Predecessors: [0x468]
Successors: []
---
0x483 INVALID
---
0x483: INVALID 
---
Entry stack: [V11, 0xb0, V153, 0x0, 0x1, V394]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V153, 0x0, 0x1, V394]

================================

Block 0x484
[0x484:0x489]
---
Predecessors: [0x468]
Successors: [0x48a, 0x48e]
---
0x484 JUMPDEST
0x485 EQ
0x486 PUSH2 0x48e
0x489 JUMPI
---
0x484: JUMPDEST 
0x485: V398 = EQ V394 0x1
0x486: V399 = 0x48e
0x489: JUMPI 0x48e V398
---
Entry stack: [V11, 0xb0, V153, 0x0, 0x1, V394]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0xb0, V153, 0x0]

================================

Block 0x48a
[0x48a:0x48d]
---
Predecessors: [0x484]
Successors: []
---
0x48a PUSH1 0x0
0x48c DUP1
0x48d REVERT
---
0x48a: V400 = 0x0
0x48d: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb0, V153, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V153, 0x0]

================================

Block 0x48e
[0x48e:0x4d2]
---
Predecessors: [0x484]
Successors: [0x4d3, 0x4d7]
---
0x48e JUMPDEST
0x48f POP
0x490 PUSH1 0x1
0x492 PUSH1 0xa0
0x494 PUSH1 0x2
0x496 EXP
0x497 SUB
0x498 DUP2
0x499 AND
0x49a PUSH1 0x0
0x49c DUP2
0x49d DUP2
0x49e MSTORE
0x49f PUSH1 0x1
0x4a1 PUSH1 0x20
0x4a3 MSTORE
0x4a4 PUSH1 0x40
0x4a6 DUP1
0x4a7 DUP3
0x4a8 SHA3
0x4a9 DUP1
0x4aa SLOAD
0x4ab SWAP3
0x4ac SWAP1
0x4ad SSTORE
0x4ae SWAP1
0x4af SWAP2
0x4b0 SWAP1
0x4b1 DUP3
0x4b2 ISZERO
0x4b3 PUSH2 0x8fc
0x4b6 MUL
0x4b7 SWAP1
0x4b8 DUP4
0x4b9 SWAP1
0x4ba MLOAD
0x4bb PUSH1 0x0
0x4bd PUSH1 0x40
0x4bf MLOAD
0x4c0 DUP1
0x4c1 DUP4
0x4c2 SUB
0x4c3 DUP2
0x4c4 DUP6
0x4c5 DUP9
0x4c6 DUP9
0x4c7 CALL
0x4c8 SWAP4
0x4c9 POP
0x4ca POP
0x4cb POP
0x4cc POP
0x4cd ISZERO
0x4ce ISZERO
0x4cf PUSH2 0x4d7
0x4d2 JUMPI
---
0x48e: JUMPDEST 
0x490: V401 = 0x1
0x492: V402 = 0xa0
0x494: V403 = 0x2
0x496: V404 = EXP 0x2 0xa0
0x497: V405 = SUB 0x10000000000000000000000000000000000000000 0x1
0x499: V406 = AND V153 0xffffffffffffffffffffffffffffffffffffffff
0x49a: V407 = 0x0
0x49e: M[0x0] = V406
0x49f: V408 = 0x1
0x4a1: V409 = 0x20
0x4a3: M[0x20] = 0x1
0x4a4: V410 = 0x40
0x4a8: V411 = SHA3 0x0 0x40
0x4aa: V412 = S[V411]
0x4ad: S[V411] = 0x0
0x4b2: V413 = ISZERO V412
0x4b3: V414 = 0x8fc
0x4b6: V415 = MUL 0x8fc V413
0x4ba: V416 = M[0x40]
0x4bb: V417 = 0x0
0x4bd: V418 = 0x40
0x4bf: V419 = M[0x40]
0x4c2: V420 = SUB V416 V419
0x4c7: V421 = CALL V415 V406 V412 V419 V420 V419 0x0
0x4cd: V422 = ISZERO V421
0x4ce: V423 = ISZERO V422
0x4cf: V424 = 0x4d7
0x4d2: JUMPI 0x4d7 V423
---
Entry stack: [V11, 0xb0, V153, 0x0]
Stack pops: 2
Stack additions: [S1, V412]
Exit stack: [V11, 0xb0, V153, V412]

================================

Block 0x4d3
[0x4d3:0x4d6]
---
Predecessors: [0x48e]
Successors: []
---
0x4d3 PUSH1 0x0
0x4d5 DUP1
0x4d6 REVERT
---
0x4d3: V425 = 0x0
0x4d6: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb0, V153, V412]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V153, V412]

================================

Block 0x4d7
[0x4d7:0x517]
---
Predecessors: [0x48e]
Successors: [0xb0]
---
0x4d7 JUMPDEST
0x4d8 DUP2
0x4d9 PUSH1 0x1
0x4db PUSH1 0xa0
0x4dd PUSH1 0x2
0x4df EXP
0x4e0 SUB
0x4e1 AND
0x4e2 PUSH32 0xd7dee2702d63ad89917b6a4da9981c90c4d24f8c2bdfd64c604ecae57d8d0651
0x503 DUP3
0x504 PUSH1 0x40
0x506 MLOAD
0x507 SWAP1
0x508 DUP2
0x509 MSTORE
0x50a PUSH1 0x20
0x50c ADD
0x50d PUSH1 0x40
0x50f MLOAD
0x510 DUP1
0x511 SWAP2
0x512 SUB
0x513 SWAP1
0x514 LOG2
0x515 POP
0x516 POP
0x517 JUMP
---
0x4d7: JUMPDEST 
0x4d9: V426 = 0x1
0x4db: V427 = 0xa0
0x4dd: V428 = 0x2
0x4df: V429 = EXP 0x2 0xa0
0x4e0: V430 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4e1: V431 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x4e2: V432 = 0xd7dee2702d63ad89917b6a4da9981c90c4d24f8c2bdfd64c604ecae57d8d0651
0x504: V433 = 0x40
0x506: V434 = M[0x40]
0x509: M[V434] = V412
0x50a: V435 = 0x20
0x50c: V436 = ADD 0x20 V434
0x50d: V437 = 0x40
0x50f: V438 = M[0x40]
0x512: V439 = SUB V436 V438
0x514: LOG V438 V439 0xd7dee2702d63ad89917b6a4da9981c90c4d24f8c2bdfd64c604ecae57d8d0651 V431
0x517: JUMP 0xb0
---
Entry stack: [V11, 0xb0, V153, V412]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x518
[0x518:0x523]
---
Predecessors: [0x423]
Successors: [0x524, 0x525]
---
0x518 JUMPDEST
0x519 DUP2
0x51a DUP2
0x51b ADD
0x51c DUP3
0x51d DUP2
0x51e LT
0x51f ISZERO
0x520 PUSH2 0x525
0x523 JUMPI
---
0x518: JUMPDEST 
0x51b: V440 = ADD V370 V368
0x51e: V441 = LT V440 V368
0x51f: V442 = ISZERO V441
0x520: V443 = 0x525
0x523: JUMPI 0x525 V442
---
Entry stack: [V11, 0xb0, V139, 0x44c, V368, V370]
Stack pops: 2
Stack additions: [S1, S0, V440]
Exit stack: [V11, 0xb0, V139, 0x44c, V368, V370, V440]

================================

Block 0x524
[0x524:0x524]
---
Predecessors: [0x518]
Successors: []
---
0x524 INVALID
---
0x524: INVALID 
---
Entry stack: [V11, 0xb0, V139, 0x44c, V368, V370, V440]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V139, 0x44c, V368, V370, V440]

================================

Block 0x525
[0x525:0x52a]
---
Predecessors: [0x518]
Successors: [0x44c]
---
0x525 JUMPDEST
0x526 SWAP3
0x527 SWAP2
0x528 POP
0x529 POP
0x52a JUMP
---
0x525: JUMPDEST 
0x52a: JUMP 0x44c
---
Entry stack: [V11, 0xb0, V139, 0x44c, V368, V370, V440]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V11, 0xb0, V139, V440]

================================

Block 0x52b
[0x52b:0x557]
---
Predecessors: []
Successors: []
---
0x52b STOP
0x52c LOG1
0x52d PUSH6 0x627a7a723058
0x534 SHA3
0x535 MISSING 0xba
0x536 SELFDESTRUCT
0x537 MISSING 0x5c
0x538 SLOAD
0x539 PUSH30 0x78d83d4a58e9748f9c4d6a66a1a851de72ca4c72af060ee2214da20029
---
0x52b: STOP 
0x52c: LOG S0 S1 S2
0x52d: V444 = 0x627a7a723058
0x534: V445 = SHA3 0x627a7a723058 S3
0x535: MISSING 0xba
0x536: SELFDESTRUCT S0
0x537: MISSING 0x5c
0x538: V446 = S[S0]
0x539: V447 = 0x78d83d4a58e9748f9c4d6a66a1a851de72ca4c72af060ee2214da20029
---
Entry stack: []
Stack pops: 0
Stack additions: [V445, 0x78d83d4a58e9748f9c4d6a66a1a851de72ca4c72af060ee2214da20029, V446]
Exit stack: []

================================

Function 0:
Public function signature: 0x43d726d6
Entry block: 0x9d
Exit block: 0xb0
Body: 0x9d, 0xa4, 0xa8, 0xb0, 0x1c1, 0x1d8, 0x1dc, 0x272, 0x276

Function 1:
Public function signature: 0x521eb273
Entry block: 0xb2
Exit block: 0xc5
Body: 0xb2, 0xb9, 0xbd, 0xc5, 0x278

Function 2:
Public function signature: 0x8c52dc41
Entry block: 0xe1
Exit block: 0xb0
Body: 0xb0, 0xe1, 0xe8, 0xec, 0x287, 0x29e, 0x2a2, 0x2bb, 0x2bc, 0x2c2, 0x2c6

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0xf4
Exit block: 0xc5
Body: 0xc5, 0xf4, 0xfb, 0xff, 0x318

Function 4:
Public function signature: 0xc19d93fb
Entry block: 0x107
Exit block: 0x129
Body: 0x107, 0x10e, 0x112, 0x11a, 0x129, 0x12a, 0x327

Function 5:
Public function signature: 0xcb13cddb
Entry block: 0x13e
Exit block: 0x15d
Body: 0x13e, 0x145, 0x149, 0x15d, 0x337

Function 6:
Public function signature: 0xf2fde38b
Entry block: 0x16f
Exit block: 0xb0
Body: 0xb0, 0x16f, 0x176, 0x17a, 0x349, 0x360, 0x364, 0x375, 0x379

Function 7:
Public function signature: 0xf340fa01
Entry block: 0x18e
Exit block: 0xb0
Body: 0xb0, 0x18e, 0x3e4, 0x3fb, 0x3ff, 0x418, 0x419, 0x41f, 0x423, 0x44c, 0x518, 0x524, 0x525

Function 8:
Public function signature: 0xfa89401a
Entry block: 0x1a2
Exit block: 0xb0
Body: 0xb0, 0x1a2, 0x1a9, 0x1ad, 0x468, 0x483, 0x484, 0x48a, 0x48e, 0x4d3, 0x4d7

Function 9:
Public fallback function
Entry block: 0x98
Exit block: 0x98
Body: 0x98

