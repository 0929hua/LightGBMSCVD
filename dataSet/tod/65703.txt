Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x61]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x61
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x61
0xc: JUMPI 0x61 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x66]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x3ccfd60b
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x66
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x3ccfd60b
0x3b: V13 = EQ V11 0x3ccfd60b
0x3c: V14 = 0x66
0x3f: JUMPI 0x66 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x7d]
---
0x40 DUP1
0x41 PUSH4 0x83197ef0
0x46 EQ
0x47 PUSH2 0x7d
0x4a JUMPI
---
0x41: V15 = 0x83197ef0
0x46: V16 = EQ 0x83197ef0 V11
0x47: V17 = 0x7d
0x4a: JUMPI 0x7d V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x92]
---
0x4b DUP1
0x4c PUSH4 0xbdf3390e
0x51 EQ
0x52 PUSH2 0x92
0x55 JUMPI
---
0x4c: V18 = 0xbdf3390e
0x51: V19 = EQ 0xbdf3390e V11
0x52: V20 = 0x92
0x55: JUMPI 0x92 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xce]
---
0x56 DUP1
0x57 PUSH4 0xc2381296
0x5c EQ
0x5d PUSH2 0xce
0x60 JUMPI
---
0x57: V21 = 0xc2381296
0x5c: V22 = EQ 0xc2381296 V11
0x5d: V23 = 0xce
0x60: JUMPI 0xce V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x65]
---
Predecessors: [0x0, 0x56]
Successors: []
---
0x61 JUMPDEST
0x62 PUSH1 0x0
0x64 DUP1
0x65 REVERT
---
0x61: JUMPDEST 
0x62: V24 = 0x0
0x65: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x66
[0x66:0x6d]
---
Predecessors: [0xd]
Successors: [0x6e, 0x72]
---
0x66 JUMPDEST
0x67 CALLVALUE
0x68 DUP1
0x69 ISZERO
0x6a PUSH2 0x72
0x6d JUMPI
---
0x66: JUMPDEST 
0x67: V25 = CALLVALUE
0x69: V26 = ISZERO V25
0x6a: V27 = 0x72
0x6d: JUMPI 0x72 V26
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V25]
Exit stack: [V11, V25]

================================

Block 0x6e
[0x6e:0x71]
---
Predecessors: [0x66]
Successors: []
---
0x6e PUSH1 0x0
0x70 DUP1
0x71 REVERT
---
0x6e: V28 = 0x0
0x71: REVERT 0x0 0x0
---
Entry stack: [V11, V25]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V25]

================================

Block 0x72
[0x72:0x7a]
---
Predecessors: [0x66, 0x920]
Successors: [0xe3]
---
0x72 JUMPDEST
0x73 POP
0x74 PUSH2 0x7b
0x77 PUSH2 0xe3
0x7a JUMP
---
0x72: JUMPDEST 
0x74: V29 = 0x7b
0x77: V30 = 0xe3
0x7a: JUMP 0xe3
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: [0x7b]
Exit stack: [V11, 0x7b]

================================

Block 0x7b
[0x7b:0x7c]
---
Predecessors: [0x134, 0x721]
Successors: []
---
0x7b JUMPDEST
0x7c STOP
---
0x7b: JUMPDEST 
0x7c: STOP 
---
Entry stack: [V11, 0x7b, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7b, S2, S1, S0]

================================

Block 0x7d
[0x7d:0x84]
---
Predecessors: [0x40]
Successors: [0x85, 0x89]
---
0x7d JUMPDEST
0x7e CALLVALUE
0x7f DUP1
0x80 ISZERO
0x81 PUSH2 0x89
0x84 JUMPI
---
0x7d: JUMPDEST 
0x7e: V31 = CALLVALUE
0x80: V32 = ISZERO V31
0x81: V33 = 0x89
0x84: JUMPI 0x89 V32
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V31]
Exit stack: [V11, V31]

================================

Block 0x85
[0x85:0x88]
---
Predecessors: [0x7d]
Successors: []
---
0x85 PUSH1 0x0
0x87 DUP1
0x88 REVERT
---
0x85: V34 = 0x0
0x88: REVERT 0x0 0x0
---
Entry stack: [V11, V31]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V31]

================================

Block 0x89
[0x89:0x91]
---
Predecessors: [0x7d]
Successors: [0x137]
---
0x89 JUMPDEST
0x8a POP
0x8b PUSH2 0x7b
0x8e PUSH2 0x137
0x91 JUMP
---
0x89: JUMPDEST 
0x8b: V35 = 0x7b
0x8e: V36 = 0x137
0x91: JUMP 0x137
---
Entry stack: [V11, V31]
Stack pops: 1
Stack additions: [0x7b]
Exit stack: [V11, 0x7b]

================================

Block 0x92
[0x92:0x99]
---
Predecessors: [0x4b]
Successors: [0x9a, 0x9e]
---
0x92 JUMPDEST
0x93 CALLVALUE
0x94 DUP1
0x95 ISZERO
0x96 PUSH2 0x9e
0x99 JUMPI
---
0x92: JUMPDEST 
0x93: V37 = CALLVALUE
0x95: V38 = ISZERO V37
0x96: V39 = 0x9e
0x99: JUMPI 0x9e V38
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V37]
Exit stack: [V11, V37]

================================

Block 0x9a
[0x9a:0x9d]
---
Predecessors: [0x92]
Successors: []
---
0x9a PUSH1 0x0
0x9c DUP1
0x9d REVERT
---
0x9a: V40 = 0x0
0x9d: REVERT 0x0 0x0
---
Entry stack: [V11, V37]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V37]

================================

Block 0x9e
[0x9e:0xa6]
---
Predecessors: [0x92]
Successors: [0x15c]
---
0x9e JUMPDEST
0x9f POP
0xa0 PUSH2 0xa7
0xa3 PUSH2 0x15c
0xa6 JUMP
---
0x9e: JUMPDEST 
0xa0: V41 = 0xa7
0xa3: V42 = 0x15c
0xa6: JUMP 0x15c
---
Entry stack: [V11, V37]
Stack pops: 1
Stack additions: [0xa7]
Exit stack: [V11, 0xa7]

================================

Block 0xa7
[0xa7:0xcd]
---
Predecessors: [0x6c4]
Successors: []
---
0xa7 JUMPDEST
0xa8 PUSH1 0x40
0xaa DUP1
0xab MLOAD
0xac SWAP4
0xad DUP5
0xae MSTORE
0xaf PUSH1 0x20
0xb1 DUP5
0xb2 ADD
0xb3 SWAP3
0xb4 SWAP1
0xb5 SWAP3
0xb6 MSTORE
0xb7 PUSH1 0x1
0xb9 PUSH1 0xa0
0xbb PUSH1 0x2
0xbd EXP
0xbe SUB
0xbf AND
0xc0 DUP3
0xc1 DUP3
0xc2 ADD
0xc3 MSTORE
0xc4 MLOAD
0xc5 SWAP1
0xc6 DUP2
0xc7 SWAP1
0xc8 SUB
0xc9 PUSH1 0x60
0xcb ADD
0xcc SWAP1
0xcd RETURN
---
0xa7: JUMPDEST 
0xa8: V43 = 0x40
0xab: V44 = M[0x40]
0xae: M[V44] = S2
0xaf: V45 = 0x20
0xb2: V46 = ADD V44 0x20
0xb6: M[V46] = S1
0xb7: V47 = 0x1
0xb9: V48 = 0xa0
0xbb: V49 = 0x2
0xbd: V50 = EXP 0x2 0xa0
0xbe: V51 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbf: V52 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xc2: V53 = ADD 0x40 V44
0xc3: M[V53] = V52
0xc4: V54 = M[0x40]
0xc8: V55 = SUB V44 V54
0xc9: V56 = 0x60
0xcb: V57 = ADD 0x60 V55
0xcd: RETURN V54 V57
---
Entry stack: [V11, 0x7b, 0x0, 0x0, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x7b, 0x0, 0x0, S3]

================================

Block 0xce
[0xce:0xd5]
---
Predecessors: [0x56]
Successors: [0xd6, 0xda]
---
0xce JUMPDEST
0xcf CALLVALUE
0xd0 DUP1
0xd1 ISZERO
0xd2 PUSH2 0xda
0xd5 JUMPI
---
0xce: JUMPDEST 
0xcf: V58 = CALLVALUE
0xd1: V59 = ISZERO V58
0xd2: V60 = 0xda
0xd5: JUMPI 0xda V59
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V58]
Exit stack: [V11, V58]

================================

Block 0xd6
[0xd6:0xd9]
---
Predecessors: [0xce]
Successors: []
---
0xd6 PUSH1 0x0
0xd8 DUP1
0xd9 REVERT
---
0xd6: V61 = 0x0
0xd9: REVERT 0x0 0x0
---
Entry stack: [V11, V58]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V58]

================================

Block 0xda
[0xda:0xe2]
---
Predecessors: [0xce]
Successors: [0x6d5]
---
0xda JUMPDEST
0xdb POP
0xdc PUSH2 0x7b
0xdf PUSH2 0x6d5
0xe2 JUMP
---
0xda: JUMPDEST 
0xdc: V62 = 0x7b
0xdf: V63 = 0x6d5
0xe2: JUMP 0x6d5
---
Entry stack: [V11, V58]
Stack pops: 1
Stack additions: [0x7b]
Exit stack: [V11, 0x7b]

================================

Block 0xe3
[0xe3:0xf5]
---
Predecessors: [0x72]
Successors: [0xf6, 0xfa]
---
0xe3 JUMPDEST
0xe4 PUSH1 0x1
0xe6 SLOAD
0xe7 PUSH1 0x1
0xe9 PUSH1 0xa0
0xeb PUSH1 0x2
0xed EXP
0xee SUB
0xef AND
0xf0 CALLER
0xf1 EQ
0xf2 PUSH2 0xfa
0xf5 JUMPI
---
0xe3: JUMPDEST 
0xe4: V64 = 0x1
0xe6: V65 = S[0x1]
0xe7: V66 = 0x1
0xe9: V67 = 0xa0
0xeb: V68 = 0x2
0xed: V69 = EXP 0x2 0xa0
0xee: V70 = SUB 0x10000000000000000000000000000000000000000 0x1
0xef: V71 = AND 0xffffffffffffffffffffffffffffffffffffffff V65
0xf0: V72 = CALLER
0xf1: V73 = EQ V72 V71
0xf2: V74 = 0xfa
0xf5: JUMPI 0xfa V73
---
Entry stack: [V11, 0x7b]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7b]

================================

Block 0xf6
[0xf6:0xf9]
---
Predecessors: [0xe3]
Successors: []
---
0xf6 PUSH1 0x0
0xf8 DUP1
0xf9 REVERT
---
0xf6: V75 = 0x0
0xf9: REVERT 0x0 0x0
---
Entry stack: [V11, 0x7b]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7b]

================================

Block 0xfa
[0xfa:0x12a]
---
Predecessors: [0xe3]
Successors: [0x12b, 0x134]
---
0xfa JUMPDEST
0xfb PUSH1 0x1
0xfd SLOAD
0xfe PUSH1 0x40
0x100 MLOAD
0x101 PUSH1 0x1
0x103 PUSH1 0xa0
0x105 PUSH1 0x2
0x107 EXP
0x108 SUB
0x109 SWAP1
0x10a SWAP2
0x10b AND
0x10c SWAP1
0x10d ADDRESS
0x10e BALANCE
0x10f DUP1
0x110 ISZERO
0x111 PUSH2 0x8fc
0x114 MUL
0x115 SWAP2
0x116 PUSH1 0x0
0x118 DUP2
0x119 DUP2
0x11a DUP2
0x11b DUP6
0x11c DUP9
0x11d DUP9
0x11e CALL
0x11f SWAP4
0x120 POP
0x121 POP
0x122 POP
0x123 POP
0x124 ISZERO
0x125 DUP1
0x126 ISZERO
0x127 PUSH2 0x134
0x12a JUMPI
---
0xfa: JUMPDEST 
0xfb: V76 = 0x1
0xfd: V77 = S[0x1]
0xfe: V78 = 0x40
0x100: V79 = M[0x40]
0x101: V80 = 0x1
0x103: V81 = 0xa0
0x105: V82 = 0x2
0x107: V83 = EXP 0x2 0xa0
0x108: V84 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10b: V85 = AND V77 0xffffffffffffffffffffffffffffffffffffffff
0x10d: V86 = ADDRESS
0x10e: V87 = BALANCE V86
0x110: V88 = ISZERO V87
0x111: V89 = 0x8fc
0x114: V90 = MUL 0x8fc V88
0x116: V91 = 0x0
0x11e: V92 = CALL V90 V85 V87 V79 0x0 V79 0x0
0x124: V93 = ISZERO V92
0x126: V94 = ISZERO V93
0x127: V95 = 0x134
0x12a: JUMPI 0x134 V94
---
Entry stack: [V11, 0x7b]
Stack pops: 0
Stack additions: [V93]
Exit stack: [V11, 0x7b, V93]

================================

Block 0x12b
[0x12b:0x133]
---
Predecessors: [0xfa]
Successors: []
---
0x12b RETURNDATASIZE
0x12c PUSH1 0x0
0x12e DUP1
0x12f RETURNDATACOPY
0x130 RETURNDATASIZE
0x131 PUSH1 0x0
0x133 REVERT
---
0x12b: V96 = RETURNDATASIZE
0x12c: V97 = 0x0
0x12f: RETURNDATACOPY 0x0 0x0 V96
0x130: V98 = RETURNDATASIZE
0x131: V99 = 0x0
0x133: REVERT 0x0 V98
---
Entry stack: [V11, 0x7b, V93]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7b, V93]

================================

Block 0x134
[0x134:0x136]
---
Predecessors: [0xfa]
Successors: [0x7b]
---
0x134 JUMPDEST
0x135 POP
0x136 JUMP
---
0x134: JUMPDEST 
0x136: JUMP 0x7b
---
Entry stack: [V11, 0x7b, V93]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x137
[0x137:0x149]
---
Predecessors: [0x89]
Successors: [0x14a, 0x14e]
---
0x137 JUMPDEST
0x138 PUSH1 0x1
0x13a SLOAD
0x13b PUSH1 0x1
0x13d PUSH1 0xa0
0x13f PUSH1 0x2
0x141 EXP
0x142 SUB
0x143 AND
0x144 CALLER
0x145 EQ
0x146 PUSH2 0x14e
0x149 JUMPI
---
0x137: JUMPDEST 
0x138: V100 = 0x1
0x13a: V101 = S[0x1]
0x13b: V102 = 0x1
0x13d: V103 = 0xa0
0x13f: V104 = 0x2
0x141: V105 = EXP 0x2 0xa0
0x142: V106 = SUB 0x10000000000000000000000000000000000000000 0x1
0x143: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V101
0x144: V108 = CALLER
0x145: V109 = EQ V108 V107
0x146: V110 = 0x14e
0x149: JUMPI 0x14e V109
---
Entry stack: [V11, 0x7b]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7b]

================================

Block 0x14a
[0x14a:0x14d]
---
Predecessors: [0x137]
Successors: []
---
0x14a PUSH1 0x0
0x14c DUP1
0x14d REVERT
---
0x14a: V111 = 0x0
0x14d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x7b]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7b]

================================

Block 0x14e
[0x14e:0x15b]
---
Predecessors: [0x137]
Successors: []
---
0x14e JUMPDEST
0x14f PUSH1 0x1
0x151 SLOAD
0x152 PUSH1 0x1
0x154 PUSH1 0xa0
0x156 PUSH1 0x2
0x158 EXP
0x159 SUB
0x15a AND
0x15b SELFDESTRUCT
---
0x14e: JUMPDEST 
0x14f: V112 = 0x1
0x151: V113 = S[0x1]
0x152: V114 = 0x1
0x154: V115 = 0xa0
0x156: V116 = 0x2
0x158: V117 = EXP 0x2 0xa0
0x159: V118 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15a: V119 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x15b: SELFDESTRUCT V119
---
Entry stack: [V11, 0x7b]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7b]

================================

Block 0x15c
[0x15c:0x183]
---
Predecessors: [0x9e, 0x6f3]
Successors: [0x184, 0x188]
---
0x15c JUMPDEST
0x15d PUSH1 0x1
0x15f SLOAD
0x160 PUSH1 0x0
0x162 SWAP1
0x163 DUP2
0x164 SWAP1
0x165 DUP2
0x166 SWAP1
0x167 DUP2
0x168 SWAP1
0x169 DUP2
0x16a SWAP1
0x16b DUP2
0x16c SWAP1
0x16d DUP2
0x16e SWAP1
0x16f DUP2
0x170 SWAP1
0x171 DUP2
0x172 SWAP1
0x173 DUP2
0x174 SWAP1
0x175 PUSH1 0x1
0x177 PUSH1 0xa0
0x179 PUSH1 0x2
0x17b EXP
0x17c SUB
0x17d AND
0x17e CALLER
0x17f EQ
0x180 PUSH2 0x188
0x183 JUMPI
---
0x15c: JUMPDEST 
0x15d: V120 = 0x1
0x15f: V121 = S[0x1]
0x160: V122 = 0x0
0x175: V123 = 0x1
0x177: V124 = 0xa0
0x179: V125 = 0x2
0x17b: V126 = EXP 0x2 0xa0
0x17c: V127 = SUB 0x10000000000000000000000000000000000000000 0x1
0x17d: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x17e: V129 = CALLER
0x17f: V130 = EQ V129 V128
0x180: V131 = 0x188
0x183: JUMPI 0x188 V130
---
Entry stack: [V11, 0x7b, 0x0, 0x0, S1, {0xa7, 0x6fb}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V11, 0x7b, 0x0, 0x0, S1, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x184
[0x184:0x187]
---
Predecessors: [0x15c]
Successors: []
---
0x184 PUSH1 0x0
0x186 DUP1
0x187 REVERT
---
0x184: V132 = 0x0
0x187: REVERT 0x0 0x0
---
Entry stack: [V11, 0x7b, 0x0, 0x0, S11, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7b, 0x0, 0x0, S11, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x188
[0x188:0x23b]
---
Predecessors: [0x15c]
Successors: [0x23c]
---
0x188 JUMPDEST
0x189 PUSH1 0x40
0x18b DUP1
0x18c MLOAD
0x18d PUSH32 0xd600000000000000000000000000000000000000000000000000000000000000
0x1ae PUSH1 0x20
0x1b0 DUP1
0x1b1 DUP4
0x1b2 ADD
0x1b3 SWAP2
0x1b4 SWAP1
0x1b5 SWAP2
0x1b6 MSTORE
0x1b7 PUSH32 0x9400000000000000000000000000000000000000000000000000000000000000
0x1d8 PUSH1 0x21
0x1da DUP4
0x1db ADD
0x1dc MSTORE
0x1dd PUSH13 0x1000000000000000000000000
0x1eb ADDRESS
0x1ec MUL
0x1ed PUSH1 0x22
0x1ef DUP4
0x1f0 ADD
0x1f1 MSTORE
0x1f2 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x213 PUSH1 0x36
0x215 DUP4
0x216 ADD
0x217 MSTORE
0x218 DUP3
0x219 MLOAD
0x21a PUSH1 0x17
0x21c DUP2
0x21d DUP5
0x21e SUB
0x21f ADD
0x220 DUP2
0x221 MSTORE
0x222 PUSH1 0x37
0x224 SWAP1
0x225 SWAP3
0x226 ADD
0x227 SWAP3
0x228 DUP4
0x229 SWAP1
0x22a MSTORE
0x22b DUP2
0x22c MLOAD
0x22d PUSH1 0x1
0x22f SWAP11
0x230 POP
0x231 SWAP2
0x232 SWAP3
0x233 SWAP2
0x234 DUP3
0x235 SWAP2
0x236 DUP5
0x237 ADD
0x238 SWAP1
0x239 DUP1
0x23a DUP4
0x23b DUP4
---
0x188: JUMPDEST 
0x189: V133 = 0x40
0x18c: V134 = M[0x40]
0x18d: V135 = 0xd600000000000000000000000000000000000000000000000000000000000000
0x1ae: V136 = 0x20
0x1b2: V137 = ADD V134 0x20
0x1b6: M[V137] = 0xd600000000000000000000000000000000000000000000000000000000000000
0x1b7: V138 = 0x9400000000000000000000000000000000000000000000000000000000000000
0x1d8: V139 = 0x21
0x1db: V140 = ADD V134 0x21
0x1dc: M[V140] = 0x9400000000000000000000000000000000000000000000000000000000000000
0x1dd: V141 = 0x1000000000000000000000000
0x1eb: V142 = ADDRESS
0x1ec: V143 = MUL V142 0x1000000000000000000000000
0x1ed: V144 = 0x22
0x1f0: V145 = ADD V134 0x22
0x1f1: M[V145] = V143
0x1f2: V146 = 0x100000000000000000000000000000000000000000000000000000000000000
0x213: V147 = 0x36
0x216: V148 = ADD V134 0x36
0x217: M[V148] = 0x100000000000000000000000000000000000000000000000000000000000000
0x219: V149 = M[0x40]
0x21a: V150 = 0x17
0x21e: V151 = SUB V134 V149
0x21f: V152 = ADD V151 0x17
0x221: M[V149] = V152
0x222: V153 = 0x37
0x226: V154 = ADD V134 0x37
0x22a: M[0x40] = V154
0x22c: V155 = M[V149]
0x22d: V156 = 0x1
0x237: V157 = ADD V149 0x20
---
Entry stack: [V11, 0x7b, 0x0, 0x0, S11, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 7
Stack additions: [0x1, S5, S4, S3, S2, S1, S0, V149, V154, V154, V157, V155, V155, V154, V157]
Exit stack: [V11, 0x7b, 0x0, 0x0, S11, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V149, V154, V154, V157, V155, V155, V154, V157]

================================

Block 0x23c
[0x23c:0x244]
---
Predecessors: [0x188, 0x245]
Successors: [0x245, 0x25b]
---
0x23c JUMPDEST
0x23d PUSH1 0x20
0x23f DUP4
0x240 LT
0x241 PUSH2 0x25b
0x244 JUMPI
---
0x23c: JUMPDEST 
0x23d: V158 = 0x20
0x240: V159 = LT S2 0x20
0x241: V160 = 0x25b
0x244: JUMPI 0x25b V159
---
Entry stack: [V11, 0x7b, 0x0, 0x0, S19, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x7b, 0x0, 0x0, S19, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x245
[0x245:0x25a]
---
Predecessors: [0x23c]
Successors: [0x23c]
---
0x245 DUP1
0x246 MLOAD
0x247 DUP3
0x248 MSTORE
0x249 PUSH1 0x1f
0x24b NOT
0x24c SWAP1
0x24d SWAP3
0x24e ADD
0x24f SWAP2
0x250 PUSH1 0x20
0x252 SWAP2
0x253 DUP3
0x254 ADD
0x255 SWAP2
0x256 ADD
0x257 PUSH2 0x23c
0x25a JUMP
---
0x246: V161 = M[S0]
0x248: M[S1] = V161
0x249: V162 = 0x1f
0x24b: V163 = NOT 0x1f
0x24e: V164 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x250: V165 = 0x20
0x254: V166 = ADD 0x20 S1
0x256: V167 = ADD 0x20 S0
0x257: V168 = 0x23c
0x25a: JUMP 0x23c
---
Entry stack: [V11, 0x7b, 0x0, 0x0, S19, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V164, V166, V167]
Exit stack: [V11, 0x7b, 0x0, 0x0, S19, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, S7, S6, S5, S4, S3, V164, V166, V167]

================================

Block 0x25b
[0x25b:0x2e5]
---
Predecessors: [0x23c]
Successors: [0x2e6, 0x2ea]
---
0x25b JUMPDEST
0x25c MLOAD
0x25d DUP2
0x25e MLOAD
0x25f PUSH1 0x20
0x261 SWAP4
0x262 DUP5
0x263 SUB
0x264 PUSH2 0x100
0x267 EXP
0x268 PUSH1 0x0
0x26a NOT
0x26b ADD
0x26c DUP1
0x26d NOT
0x26e SWAP1
0x26f SWAP3
0x270 AND
0x271 SWAP2
0x272 AND
0x273 OR
0x274 SWAP1
0x275 MSTORE
0x276 PUSH1 0x40
0x278 DUP1
0x279 MLOAD
0x27a SWAP3
0x27b SWAP1
0x27c SWAP5
0x27d ADD
0x27e DUP3
0x27f SWAP1
0x280 SUB
0x281 DUP3
0x282 SHA3
0x283 PUSH1 0x0
0x285 DUP1
0x286 SLOAD
0x287 PUSH32 0x11a09ae700000000000000000000000000000000000000000000000000000000
0x2a8 DUP6
0x2a9 MSTORE
0x2aa SWAP6
0x2ab MLOAD
0x2ac SWAP2
0x2ad SWAP14
0x2ae POP
0x2af SWAP12
0x2b0 POP
0x2b1 DUP12
0x2b2 SWAP11
0x2b3 POP
0x2b4 DUP11
0x2b5 SWAP10
0x2b6 POP
0x2b7 PUSH1 0x1
0x2b9 PUSH1 0xa0
0x2bb PUSH1 0x2
0x2bd EXP
0x2be SUB
0x2bf SWAP1
0x2c0 SWAP5
0x2c1 AND
0x2c2 SWAP6
0x2c3 POP
0x2c4 PUSH4 0x11a09ae7
0x2c9 SWAP5
0x2ca POP
0x2cb PUSH1 0x4
0x2cd DUP1
0x2ce DUP4
0x2cf ADD
0x2d0 SWAP5
0x2d1 SWAP2
0x2d2 SWAP4
0x2d3 POP
0x2d4 SWAP1
0x2d5 SWAP2
0x2d6 DUP3
0x2d7 SWAP1
0x2d8 SUB
0x2d9 ADD
0x2da DUP2
0x2db DUP10
0x2dc DUP8
0x2dd DUP1
0x2de EXTCODESIZE
0x2df ISZERO
0x2e0 DUP1
0x2e1 ISZERO
0x2e2 PUSH2 0x2ea
0x2e5 JUMPI
---
0x25b: JUMPDEST 
0x25c: V169 = M[S0]
0x25e: V170 = M[S1]
0x25f: V171 = 0x20
0x263: V172 = SUB 0x20 S2
0x264: V173 = 0x100
0x267: V174 = EXP 0x100 V172
0x268: V175 = 0x0
0x26a: V176 = NOT 0x0
0x26b: V177 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V174
0x26d: V178 = NOT V177
0x270: V179 = AND V169 V178
0x272: V180 = AND V177 V170
0x273: V181 = OR V180 V179
0x275: M[S1] = V181
0x276: V182 = 0x40
0x279: V183 = M[0x40]
0x27d: V184 = ADD S5 S3
0x280: V185 = SUB V184 V183
0x282: V186 = SHA3 V183 V185
0x283: V187 = 0x0
0x286: V188 = S[0x0]
0x287: V189 = 0x11a09ae700000000000000000000000000000000000000000000000000000000
0x2a9: M[V183] = 0x11a09ae700000000000000000000000000000000000000000000000000000000
0x2ab: V190 = M[0x40]
0x2b7: V191 = 0x1
0x2b9: V192 = 0xa0
0x2bb: V193 = 0x2
0x2bd: V194 = EXP 0x2 0xa0
0x2be: V195 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c1: V196 = AND V188 0xffffffffffffffffffffffffffffffffffffffff
0x2c4: V197 = 0x11a09ae7
0x2cb: V198 = 0x4
0x2cf: V199 = ADD V183 0x4
0x2d8: V200 = SUB V183 V190
0x2d9: V201 = ADD V200 0x4
0x2de: V202 = EXTCODESIZE V196
0x2df: V203 = ISZERO V202
0x2e1: V204 = ISZERO V203
0x2e2: V205 = 0x2ea
0x2e5: JUMPI 0x2ea V204
---
Entry stack: [V11, 0x7b, 0x0, 0x0, S19, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 14
Stack additions: [V186, 0x0, 0x0, 0x0, S9, S8, V196, 0x11a09ae7, V199, 0x20, V190, V201, V190, 0x0, V196, V203]
Exit stack: [V11, 0x7b, 0x0, 0x0, S19, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, 0x1, V186, 0x0, 0x0, 0x0, 0x0, 0x0, V196, 0x11a09ae7, V199, 0x20, V190, V201, V190, 0x0, V196, V203]

================================

Block 0x2e6
[0x2e6:0x2e9]
---
Predecessors: [0x25b]
Successors: []
---
0x2e6 PUSH1 0x0
0x2e8 DUP1
0x2e9 REVERT
---
0x2e6: V206 = 0x0
0x2e9: REVERT 0x0 0x0
---
Entry stack: [V11, 0x7b, 0x0, 0x0, S21, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, 0x1, V186, 0x0, 0x0, 0x0, 0x0, 0x0, V196, 0x11a09ae7, V199, 0x20, V190, V201, V190, 0x0, V196, V203]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7b, 0x0, 0x0, S21, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, 0x1, V186, 0x0, 0x0, 0x0, 0x0, 0x0, V196, 0x11a09ae7, V199, 0x20, V190, V201, V190, 0x0, V196, V203]

================================

Block 0x2ea
[0x2ea:0x2f4]
---
Predecessors: [0x25b]
Successors: [0x2f5, 0x2fe]
---
0x2ea JUMPDEST
0x2eb POP
0x2ec GAS
0x2ed CALL
0x2ee ISZERO
0x2ef DUP1
0x2f0 ISZERO
0x2f1 PUSH2 0x2fe
0x2f4 JUMPI
---
0x2ea: JUMPDEST 
0x2ec: V207 = GAS
0x2ed: V208 = CALL V207 V196 0x0 V190 V201 V190 0x20
0x2ee: V209 = ISZERO V208
0x2f0: V210 = ISZERO V209
0x2f1: V211 = 0x2fe
0x2f4: JUMPI 0x2fe V210
---
Entry stack: [V11, 0x7b, 0x0, 0x0, S21, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, 0x1, V186, 0x0, 0x0, 0x0, 0x0, 0x0, V196, 0x11a09ae7, V199, 0x20, V190, V201, V190, 0x0, V196, V203]
Stack pops: 7
Stack additions: [V209]
Exit stack: [V11, 0x7b, 0x0, 0x0, S21, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, 0x1, V186, 0x0, 0x0, 0x0, 0x0, 0x0, V196, 0x11a09ae7, V199, V209]

================================

Block 0x2f5
[0x2f5:0x2fd]
---
Predecessors: [0x2ea]
Successors: []
---
0x2f5 RETURNDATASIZE
0x2f6 PUSH1 0x0
0x2f8 DUP1
0x2f9 RETURNDATACOPY
0x2fa RETURNDATASIZE
0x2fb PUSH1 0x0
0x2fd REVERT
---
0x2f5: V212 = RETURNDATASIZE
0x2f6: V213 = 0x0
0x2f9: RETURNDATACOPY 0x0 0x0 V212
0x2fa: V214 = RETURNDATASIZE
0x2fb: V215 = 0x0
0x2fd: REVERT 0x0 V214
---
Entry stack: [V11, 0x7b, 0x0, 0x0, S15, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, 0x1, S9, 0x0, 0x0, 0x0, 0x0, 0x0, S3, 0x11a09ae7, S1, V209]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7b, 0x0, 0x0, S15, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, 0x1, S9, 0x0, 0x0, 0x0, 0x0, 0x0, S3, 0x11a09ae7, S1, V209]

================================

Block 0x2fe
[0x2fe:0x30f]
---
Predecessors: [0x2ea]
Successors: [0x310, 0x314]
---
0x2fe JUMPDEST
0x2ff POP
0x300 POP
0x301 POP
0x302 POP
0x303 PUSH1 0x40
0x305 MLOAD
0x306 RETURNDATASIZE
0x307 PUSH1 0x20
0x309 DUP2
0x30a LT
0x30b ISZERO
0x30c PUSH2 0x314
0x30f JUMPI
---
0x2fe: JUMPDEST 
0x303: V216 = 0x40
0x305: V217 = M[0x40]
0x306: V218 = RETURNDATASIZE
0x307: V219 = 0x20
0x30a: V220 = LT V218 0x20
0x30b: V221 = ISZERO V220
0x30c: V222 = 0x314
0x30f: JUMPI 0x314 V221
---
Entry stack: [V11, 0x7b, 0x0, 0x0, S15, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, 0x1, S9, 0x0, 0x0, 0x0, 0x0, 0x0, S3, 0x11a09ae7, S1, V209]
Stack pops: 4
Stack additions: [V217, V218]
Exit stack: [V11, 0x7b, 0x0, 0x0, S15, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, 0x1, S9, 0x0, 0x0, 0x0, 0x0, 0x0, V217, V218]

================================

Block 0x310
[0x310:0x313]
---
Predecessors: [0x2fe]
Successors: []
---
0x310 PUSH1 0x0
0x312 DUP1
0x313 REVERT
---
0x310: V223 = 0x0
0x313: REVERT 0x0 0x0
---
Entry stack: [V11, 0x7b, 0x0, 0x0, S13, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, 0x1, S7, 0x0, 0x0, 0x0, 0x0, 0x0, V217, V218]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7b, 0x0, 0x0, S13, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, 0x1, S7, 0x0, 0x0, 0x0, 0x0, 0x0, V217, V218]

================================

Block 0x314
[0x314:0x31c]
---
Predecessors: [0x2fe]
Successors: [0x31d]
---
0x314 JUMPDEST
0x315 POP
0x316 MLOAD
0x317 SWAP2
0x318 POP
0x319 PUSH1 0x0
0x31b SWAP1
0x31c POP
---
0x314: JUMPDEST 
0x316: V224 = M[V217]
0x319: V225 = 0x0
---
Entry stack: [V11, 0x7b, 0x0, 0x0, S13, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, 0x1, S7, 0x0, 0x0, 0x0, 0x0, 0x0, V217, V218]
Stack pops: 4
Stack additions: [V224, 0x0]
Exit stack: [V11, 0x7b, 0x0, 0x0, S13, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, 0x1, S7, 0x0, 0x0, 0x0, V224, 0x0]

================================

Block 0x31d
[0x31d:0x324]
---
Predecessors: [0x314, 0x6bf]
Successors: [0x325, 0x6c4]
---
0x31d JUMPDEST
0x31e DUP1
0x31f ISZERO
0x320 ISZERO
0x321 PUSH2 0x6c4
0x324 JUMPI
---
0x31d: JUMPDEST 
0x31f: V226 = ISZERO S0
0x320: V227 = ISZERO V226
0x321: V228 = 0x6c4
0x324: JUMPI 0x6c4 V227
---
Entry stack: [V11, 0x7b, 0x0, 0x0, S11, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x7b, 0x0, 0x0, S11, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x325
[0x325:0x376]
---
Predecessors: [0x31d]
Successors: [0x377]
---
0x325 NUMBER
0x326 TIMESTAMP
0x327 DUP8
0x328 PUSH1 0x40
0x32a MLOAD
0x32b PUSH1 0x20
0x32d ADD
0x32e DUP1
0x32f DUP3
0x330 PUSH1 0x1
0x332 PUSH1 0xa0
0x334 PUSH1 0x2
0x336 EXP
0x337 SUB
0x338 AND
0x339 PUSH1 0x1
0x33b PUSH1 0xa0
0x33d PUSH1 0x2
0x33f EXP
0x340 SUB
0x341 AND
0x342 PUSH13 0x1000000000000000000000000
0x350 MUL
0x351 DUP2
0x352 MSTORE
0x353 PUSH1 0x14
0x355 ADD
0x356 SWAP2
0x357 POP
0x358 POP
0x359 PUSH1 0x40
0x35b MLOAD
0x35c PUSH1 0x20
0x35e DUP2
0x35f DUP4
0x360 SUB
0x361 SUB
0x362 DUP2
0x363 MSTORE
0x364 SWAP1
0x365 PUSH1 0x40
0x367 MSTORE
0x368 PUSH1 0x40
0x36a MLOAD
0x36b DUP1
0x36c DUP3
0x36d DUP1
0x36e MLOAD
0x36f SWAP1
0x370 PUSH1 0x20
0x372 ADD
0x373 SWAP1
0x374 DUP1
0x375 DUP4
0x376 DUP4
---
0x325: V229 = NUMBER
0x326: V230 = TIMESTAMP
0x328: V231 = 0x40
0x32a: V232 = M[0x40]
0x32b: V233 = 0x20
0x32d: V234 = ADD 0x20 V232
0x330: V235 = 0x1
0x332: V236 = 0xa0
0x334: V237 = 0x2
0x336: V238 = EXP 0x2 0xa0
0x337: V239 = SUB 0x10000000000000000000000000000000000000000 0x1
0x338: V240 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x339: V241 = 0x1
0x33b: V242 = 0xa0
0x33d: V243 = 0x2
0x33f: V244 = EXP 0x2 0xa0
0x340: V245 = SUB 0x10000000000000000000000000000000000000000 0x1
0x341: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff V240
0x342: V247 = 0x1000000000000000000000000
0x350: V248 = MUL 0x1000000000000000000000000 V246
0x352: M[V234] = V248
0x353: V249 = 0x14
0x355: V250 = ADD 0x14 V234
0x359: V251 = 0x40
0x35b: V252 = M[0x40]
0x35c: V253 = 0x20
0x360: V254 = SUB V250 V252
0x361: V255 = SUB V254 0x20
0x363: M[V252] = V255
0x365: V256 = 0x40
0x367: M[0x40] = V250
0x368: V257 = 0x40
0x36a: V258 = M[0x40]
0x36e: V259 = M[V252]
0x370: V260 = 0x20
0x372: V261 = ADD 0x20 V252
---
Entry stack: [V11, 0x7b, 0x0, 0x0, S11, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, V229, V230, V252, V258, V258, V261, V259, V259, V258, V261]
Exit stack: [V11, 0x7b, 0x0, 0x0, S11, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, S6, S5, S4, S3, S2, S1, S0, V229, V230, V252, V258, V258, V261, V259, V259, V258, V261]

================================

Block 0x377
[0x377:0x37f]
---
Predecessors: [0x325, 0x380]
Successors: [0x380, 0x396]
---
0x377 JUMPDEST
0x378 PUSH1 0x20
0x37a DUP4
0x37b LT
0x37c PUSH2 0x396
0x37f JUMPI
---
0x377: JUMPDEST 
0x378: V262 = 0x20
0x37b: V263 = LT S2 0x20
0x37c: V264 = 0x396
0x37f: JUMPI 0x396 V263
---
Entry stack: [V11, 0x7b, 0x0, 0x0, S21, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, S16, S15, S14, S13, S12, S11, S10, V229, V230, V252, V258, V258, V261, V259, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x7b, 0x0, 0x0, S21, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, S16, S15, S14, S13, S12, S11, S10, V229, V230, V252, V258, V258, V261, V259, S2, S1, S0]

================================

Block 0x380
[0x380:0x395]
---
Predecessors: [0x377]
Successors: [0x377]
---
0x380 DUP1
0x381 MLOAD
0x382 DUP3
0x383 MSTORE
0x384 PUSH1 0x1f
0x386 NOT
0x387 SWAP1
0x388 SWAP3
0x389 ADD
0x38a SWAP2
0x38b PUSH1 0x20
0x38d SWAP2
0x38e DUP3
0x38f ADD
0x390 SWAP2
0x391 ADD
0x392 PUSH2 0x377
0x395 JUMP
---
0x381: V265 = M[S0]
0x383: M[S1] = V265
0x384: V266 = 0x1f
0x386: V267 = NOT 0x1f
0x389: V268 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x38b: V269 = 0x20
0x38f: V270 = ADD 0x20 S1
0x391: V271 = ADD 0x20 S0
0x392: V272 = 0x377
0x395: JUMP 0x377
---
Entry stack: [V11, 0x7b, 0x0, 0x0, S21, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, S16, S15, S14, S13, S12, S11, S10, V229, V230, V252, V258, V258, V261, V259, S2, S1, S0]
Stack pops: 3
Stack additions: [V268, V270, V271]
Exit stack: [V11, 0x7b, 0x0, 0x0, S21, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, S16, S15, S14, S13, S12, S11, S10, V229, V230, V252, V258, V258, V261, V259, V268, V270, V271]

================================

Block 0x396
[0x396:0x3ca]
---
Predecessors: [0x377]
Successors: [0x3cb, 0x3cc]
---
0x396 JUMPDEST
0x397 MLOAD
0x398 DUP2
0x399 MLOAD
0x39a PUSH1 0x20
0x39c SWAP4
0x39d SWAP1
0x39e SWAP4
0x39f SUB
0x3a0 PUSH2 0x100
0x3a3 EXP
0x3a4 PUSH1 0x0
0x3a6 NOT
0x3a7 ADD
0x3a8 DUP1
0x3a9 NOT
0x3aa SWAP1
0x3ab SWAP2
0x3ac AND
0x3ad SWAP3
0x3ae AND
0x3af SWAP2
0x3b0 SWAP1
0x3b1 SWAP2
0x3b2 OR
0x3b3 SWAP1
0x3b4 MSTORE
0x3b5 PUSH1 0x40
0x3b7 MLOAD
0x3b8 SWAP3
0x3b9 ADD
0x3ba DUP3
0x3bb SWAP1
0x3bc SUB
0x3bd SWAP1
0x3be SWAP2
0x3bf SHA3
0x3c0 SWAP3
0x3c1 POP
0x3c2 POP
0x3c3 POP
0x3c4 DUP2
0x3c5 ISZERO
0x3c6 ISZERO
0x3c7 PUSH2 0x3cc
0x3ca JUMPI
---
0x396: JUMPDEST 
0x397: V273 = M[S0]
0x399: V274 = M[S1]
0x39a: V275 = 0x20
0x39f: V276 = SUB 0x20 S2
0x3a0: V277 = 0x100
0x3a3: V278 = EXP 0x100 V276
0x3a4: V279 = 0x0
0x3a6: V280 = NOT 0x0
0x3a7: V281 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V278
0x3a9: V282 = NOT V281
0x3ac: V283 = AND V273 V282
0x3ae: V284 = AND V274 V281
0x3b2: V285 = OR V284 V283
0x3b4: M[S1] = V285
0x3b5: V286 = 0x40
0x3b7: V287 = M[0x40]
0x3b9: V288 = ADD V258 V259
0x3bc: V289 = SUB V288 V287
0x3bf: V290 = SHA3 V287 V289
0x3c5: V291 = ISZERO V230
0x3c6: V292 = ISZERO V291
0x3c7: V293 = 0x3cc
0x3ca: JUMPI 0x3cc V292
---
Entry stack: [V11, 0x7b, 0x0, 0x0, S21, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, S16, S15, S14, S13, S12, S11, S10, V229, V230, V252, V258, V258, V261, V259, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, V290]
Exit stack: [V11, 0x7b, 0x0, 0x0, S21, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, S16, S15, S14, S13, S12, S11, S10, V229, V230, V290]

================================

Block 0x3cb
[0x3cb:0x3cb]
---
Predecessors: [0x396]
Successors: []
---
0x3cb INVALID
---
0x3cb: INVALID 
---
Entry stack: [V11, 0x7b, 0x0, 0x0, S14, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, S9, S8, S7, S6, S5, S4, S3, V229, V230, V290]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7b, 0x0, 0x0, S14, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, S9, S8, S7, S6, S5, S4, S3, V229, V230, V290]

================================

Block 0x3cc
[0x3cc:0x41f]
---
Predecessors: [0x396]
Successors: [0x420]
---
0x3cc JUMPDEST
0x3cd DIV
0x3ce GASLIMIT
0x3cf TIMESTAMP
0x3d0 COINBASE
0x3d1 PUSH1 0x40
0x3d3 MLOAD
0x3d4 PUSH1 0x20
0x3d6 ADD
0x3d7 DUP1
0x3d8 DUP3
0x3d9 PUSH1 0x1
0x3db PUSH1 0xa0
0x3dd PUSH1 0x2
0x3df EXP
0x3e0 SUB
0x3e1 AND
0x3e2 PUSH1 0x1
0x3e4 PUSH1 0xa0
0x3e6 PUSH1 0x2
0x3e8 EXP
0x3e9 SUB
0x3ea AND
0x3eb PUSH13 0x1000000000000000000000000
0x3f9 MUL
0x3fa DUP2
0x3fb MSTORE
0x3fc PUSH1 0x14
0x3fe ADD
0x3ff SWAP2
0x400 POP
0x401 POP
0x402 PUSH1 0x40
0x404 MLOAD
0x405 PUSH1 0x20
0x407 DUP2
0x408 DUP4
0x409 SUB
0x40a SUB
0x40b DUP2
0x40c MSTORE
0x40d SWAP1
0x40e PUSH1 0x40
0x410 MSTORE
0x411 PUSH1 0x40
0x413 MLOAD
0x414 DUP1
0x415 DUP3
0x416 DUP1
0x417 MLOAD
0x418 SWAP1
0x419 PUSH1 0x20
0x41b ADD
0x41c SWAP1
0x41d DUP1
0x41e DUP4
0x41f DUP4
---
0x3cc: JUMPDEST 
0x3cd: V294 = DIV V290 V230
0x3ce: V295 = GASLIMIT
0x3cf: V296 = TIMESTAMP
0x3d0: V297 = COINBASE
0x3d1: V298 = 0x40
0x3d3: V299 = M[0x40]
0x3d4: V300 = 0x20
0x3d6: V301 = ADD 0x20 V299
0x3d9: V302 = 0x1
0x3db: V303 = 0xa0
0x3dd: V304 = 0x2
0x3df: V305 = EXP 0x2 0xa0
0x3e0: V306 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3e1: V307 = AND 0xffffffffffffffffffffffffffffffffffffffff V297
0x3e2: V308 = 0x1
0x3e4: V309 = 0xa0
0x3e6: V310 = 0x2
0x3e8: V311 = EXP 0x2 0xa0
0x3e9: V312 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ea: V313 = AND 0xffffffffffffffffffffffffffffffffffffffff V307
0x3eb: V314 = 0x1000000000000000000000000
0x3f9: V315 = MUL 0x1000000000000000000000000 V313
0x3fb: M[V301] = V315
0x3fc: V316 = 0x14
0x3fe: V317 = ADD 0x14 V301
0x402: V318 = 0x40
0x404: V319 = M[0x40]
0x405: V320 = 0x20
0x409: V321 = SUB V317 V319
0x40a: V322 = SUB V321 0x20
0x40c: M[V319] = V322
0x40e: V323 = 0x40
0x410: M[0x40] = V317
0x411: V324 = 0x40
0x413: V325 = M[0x40]
0x417: V326 = M[V319]
0x419: V327 = 0x20
0x41b: V328 = ADD 0x20 V319
---
Entry stack: [V11, 0x7b, 0x0, 0x0, S14, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, S9, S8, S7, S6, S5, S4, S3, V229, V230, V290]
Stack pops: 2
Stack additions: [V294, V295, V296, V319, V325, V325, V328, V326, V326, V325, V328]
Exit stack: [V11, 0x7b, 0x0, 0x0, S14, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, S9, S8, S7, S6, S5, S4, S3, V229, V294, V295, V296, V319, V325, V325, V328, V326, V326, V325, V328]

================================

Block 0x420
[0x420:0x428]
---
Predecessors: [0x3cc, 0x429]
Successors: [0x429, 0x43f]
---
0x420 JUMPDEST
0x421 PUSH1 0x20
0x423 DUP4
0x424 LT
0x425 PUSH2 0x43f
0x428 JUMPI
---
0x420: JUMPDEST 
0x421: V329 = 0x20
0x424: V330 = LT S2 0x20
0x425: V331 = 0x43f
0x428: JUMPI 0x43f V330
---
Entry stack: [V11, 0x7b, 0x0, 0x0, S23, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, S18, S17, S16, S15, S14, S13, S12, V229, V294, V295, V296, V319, V325, V325, V328, V326, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x7b, 0x0, 0x0, S23, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, S18, S17, S16, S15, S14, S13, S12, V229, V294, V295, V296, V319, V325, V325, V328, V326, S2, S1, S0]

================================

Block 0x429
[0x429:0x43e]
---
Predecessors: [0x420]
Successors: [0x420]
---
0x429 DUP1
0x42a MLOAD
0x42b DUP3
0x42c MSTORE
0x42d PUSH1 0x1f
0x42f NOT
0x430 SWAP1
0x431 SWAP3
0x432 ADD
0x433 SWAP2
0x434 PUSH1 0x20
0x436 SWAP2
0x437 DUP3
0x438 ADD
0x439 SWAP2
0x43a ADD
0x43b PUSH2 0x420
0x43e JUMP
---
0x42a: V332 = M[S0]
0x42c: M[S1] = V332
0x42d: V333 = 0x1f
0x42f: V334 = NOT 0x1f
0x432: V335 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x434: V336 = 0x20
0x438: V337 = ADD 0x20 S1
0x43a: V338 = ADD 0x20 S0
0x43b: V339 = 0x420
0x43e: JUMP 0x420
---
Entry stack: [V11, 0x7b, 0x0, 0x0, S23, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, S18, S17, S16, S15, S14, S13, S12, V229, V294, V295, V296, V319, V325, V325, V328, V326, S2, S1, S0]
Stack pops: 3
Stack additions: [V335, V337, V338]
Exit stack: [V11, 0x7b, 0x0, 0x0, S23, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, S18, S17, S16, S15, S14, S13, S12, V229, V294, V295, V296, V319, V325, V325, V328, V326, V335, V337, V338]

================================

Block 0x43f
[0x43f:0x473]
---
Predecessors: [0x420]
Successors: [0x474, 0x475]
---
0x43f JUMPDEST
0x440 MLOAD
0x441 DUP2
0x442 MLOAD
0x443 PUSH1 0x20
0x445 SWAP4
0x446 SWAP1
0x447 SWAP4
0x448 SUB
0x449 PUSH2 0x100
0x44c EXP
0x44d PUSH1 0x0
0x44f NOT
0x450 ADD
0x451 DUP1
0x452 NOT
0x453 SWAP1
0x454 SWAP2
0x455 AND
0x456 SWAP3
0x457 AND
0x458 SWAP2
0x459 SWAP1
0x45a SWAP2
0x45b OR
0x45c SWAP1
0x45d MSTORE
0x45e PUSH1 0x40
0x460 MLOAD
0x461 SWAP3
0x462 ADD
0x463 DUP3
0x464 SWAP1
0x465 SUB
0x466 SWAP1
0x467 SWAP2
0x468 SHA3
0x469 SWAP3
0x46a POP
0x46b POP
0x46c POP
0x46d DUP2
0x46e ISZERO
0x46f ISZERO
0x470 PUSH2 0x475
0x473 JUMPI
---
0x43f: JUMPDEST 
0x440: V340 = M[S0]
0x442: V341 = M[S1]
0x443: V342 = 0x20
0x448: V343 = SUB 0x20 S2
0x449: V344 = 0x100
0x44c: V345 = EXP 0x100 V343
0x44d: V346 = 0x0
0x44f: V347 = NOT 0x0
0x450: V348 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V345
0x452: V349 = NOT V348
0x455: V350 = AND V340 V349
0x457: V351 = AND V341 V348
0x45b: V352 = OR V351 V350
0x45d: M[S1] = V352
0x45e: V353 = 0x40
0x460: V354 = M[0x40]
0x462: V355 = ADD V325 V326
0x465: V356 = SUB V355 V354
0x468: V357 = SHA3 V354 V356
0x46e: V358 = ISZERO V296
0x46f: V359 = ISZERO V358
0x470: V360 = 0x475
0x473: JUMPI 0x475 V359
---
Entry stack: [V11, 0x7b, 0x0, 0x0, S23, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, S18, S17, S16, S15, S14, S13, S12, V229, V294, V295, V296, V319, V325, V325, V328, V326, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, V357]
Exit stack: [V11, 0x7b, 0x0, 0x0, S23, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, S18, S17, S16, S15, S14, S13, S12, V229, V294, V295, V296, V357]

================================

Block 0x474
[0x474:0x474]
---
Predecessors: [0x43f]
Successors: []
---
0x474 INVALID
---
0x474: INVALID 
---
Entry stack: [V11, 0x7b, 0x0, 0x0, S16, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, S11, S10, S9, S8, S7, S6, S5, V229, V294, V295, V296, V357]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7b, 0x0, 0x0, S16, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, S11, S10, S9, S8, S7, S6, S5, V229, V294, V295, V296, V357]

================================

Block 0x475
[0x475:0x4ab]
---
Predecessors: [0x43f]
Successors: [0x4ac]
---
0x475 JUMPDEST
0x476 DIV
0x477 DIFFICULTY
0x478 TIMESTAMP
0x479 ADD
0x47a ADD
0x47b ADD
0x47c ADD
0x47d ADD
0x47e PUSH1 0x40
0x480 MLOAD
0x481 PUSH1 0x20
0x483 ADD
0x484 DUP1
0x485 DUP3
0x486 DUP2
0x487 MSTORE
0x488 PUSH1 0x20
0x48a ADD
0x48b SWAP2
0x48c POP
0x48d POP
0x48e PUSH1 0x40
0x490 MLOAD
0x491 PUSH1 0x20
0x493 DUP2
0x494 DUP4
0x495 SUB
0x496 SUB
0x497 DUP2
0x498 MSTORE
0x499 SWAP1
0x49a PUSH1 0x40
0x49c MSTORE
0x49d PUSH1 0x40
0x49f MLOAD
0x4a0 DUP1
0x4a1 DUP3
0x4a2 DUP1
0x4a3 MLOAD
0x4a4 SWAP1
0x4a5 PUSH1 0x20
0x4a7 ADD
0x4a8 SWAP1
0x4a9 DUP1
0x4aa DUP4
0x4ab DUP4
---
0x475: JUMPDEST 
0x476: V361 = DIV V357 V296
0x477: V362 = DIFFICULTY
0x478: V363 = TIMESTAMP
0x479: V364 = ADD V363 V362
0x47a: V365 = ADD V364 V361
0x47b: V366 = ADD V365 V295
0x47c: V367 = ADD V366 V294
0x47d: V368 = ADD V367 V229
0x47e: V369 = 0x40
0x480: V370 = M[0x40]
0x481: V371 = 0x20
0x483: V372 = ADD 0x20 V370
0x487: M[V372] = V368
0x488: V373 = 0x20
0x48a: V374 = ADD 0x20 V372
0x48e: V375 = 0x40
0x490: V376 = M[0x40]
0x491: V377 = 0x20
0x495: V378 = SUB V374 V376
0x496: V379 = SUB V378 0x20
0x498: M[V376] = V379
0x49a: V380 = 0x40
0x49c: M[0x40] = V374
0x49d: V381 = 0x40
0x49f: V382 = M[0x40]
0x4a3: V383 = M[V376]
0x4a5: V384 = 0x20
0x4a7: V385 = ADD 0x20 V376
---
Entry stack: [V11, 0x7b, 0x0, 0x0, S16, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, S11, S10, S9, S8, S7, S6, S5, V229, V294, V295, V296, V357]
Stack pops: 5
Stack additions: [V376, V382, V382, V385, V383, V383, V382, V385]
Exit stack: [V11, 0x7b, 0x0, 0x0, S16, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, S11, S10, S9, S8, S7, S6, S5, V376, V382, V382, V385, V383, V383, V382, V385]

================================

Block 0x4ac
[0x4ac:0x4b4]
---
Predecessors: [0x475, 0x4b5]
Successors: [0x4b5, 0x4cb]
---
0x4ac JUMPDEST
0x4ad PUSH1 0x20
0x4af DUP4
0x4b0 LT
0x4b1 PUSH2 0x4cb
0x4b4 JUMPI
---
0x4ac: JUMPDEST 
0x4ad: V386 = 0x20
0x4b0: V387 = LT S2 0x20
0x4b1: V388 = 0x4cb
0x4b4: JUMPI 0x4cb V387
---
Entry stack: [V11, 0x7b, 0x0, 0x0, S19, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, S14, S13, S12, S11, S10, S9, S8, V376, V382, V382, V385, V383, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x7b, 0x0, 0x0, S19, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, S14, S13, S12, S11, S10, S9, S8, V376, V382, V382, V385, V383, S2, S1, S0]

================================

Block 0x4b5
[0x4b5:0x4ca]
---
Predecessors: [0x4ac]
Successors: [0x4ac]
---
0x4b5 DUP1
0x4b6 MLOAD
0x4b7 DUP3
0x4b8 MSTORE
0x4b9 PUSH1 0x1f
0x4bb NOT
0x4bc SWAP1
0x4bd SWAP3
0x4be ADD
0x4bf SWAP2
0x4c0 PUSH1 0x20
0x4c2 SWAP2
0x4c3 DUP3
0x4c4 ADD
0x4c5 SWAP2
0x4c6 ADD
0x4c7 PUSH2 0x4ac
0x4ca JUMP
---
0x4b6: V389 = M[S0]
0x4b8: M[S1] = V389
0x4b9: V390 = 0x1f
0x4bb: V391 = NOT 0x1f
0x4be: V392 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x4c0: V393 = 0x20
0x4c4: V394 = ADD 0x20 S1
0x4c6: V395 = ADD 0x20 S0
0x4c7: V396 = 0x4ac
0x4ca: JUMP 0x4ac
---
Entry stack: [V11, 0x7b, 0x0, 0x0, S19, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, S14, S13, S12, S11, S10, S9, S8, V376, V382, V382, V385, V383, S2, S1, S0]
Stack pops: 3
Stack additions: [V392, V394, V395]
Exit stack: [V11, 0x7b, 0x0, 0x0, S19, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, S14, S13, S12, S11, S10, S9, S8, V376, V382, V382, V385, V383, V392, V394, V395]

================================

Block 0x4cb
[0x4cb:0x53d]
---
Predecessors: [0x4ac]
Successors: [0x53e, 0x65b]
---
0x4cb JUMPDEST
0x4cc MLOAD
0x4cd DUP2
0x4ce MLOAD
0x4cf PUSH1 0x0
0x4d1 NOT
0x4d2 PUSH1 0x20
0x4d4 SWAP5
0x4d5 DUP6
0x4d6 SUB
0x4d7 PUSH2 0x100
0x4da EXP
0x4db ADD
0x4dc SWAP1
0x4dd DUP2
0x4de AND
0x4df SWAP1
0x4e0 NOT
0x4e1 SWAP2
0x4e2 SWAP1
0x4e3 SWAP2
0x4e4 AND
0x4e5 OR
0x4e6 SWAP1
0x4e7 MSTORE
0x4e8 PUSH1 0x40
0x4ea DUP1
0x4eb MLOAD
0x4ec SWAP5
0x4ed SWAP1
0x4ee SWAP3
0x4ef ADD
0x4f0 DUP5
0x4f1 SWAP1
0x4f2 SUB
0x4f3 DUP5
0x4f4 SHA3
0x4f5 DUP1
0x4f6 DUP6
0x4f7 MSTORE
0x4f8 SWAP1
0x4f9 DUP5
0x4fa ADD
0x4fb DUP9
0x4fc SWAP1
0x4fd MSTORE
0x4fe DUP2
0x4ff MLOAD
0x500 SWAP1
0x501 SWAP9
0x502 POP
0x503 PUSH32 0xd7db8bd6749f2cdf59a7b660098558630fb02f3884bcd31ad6c5deec74d81af6
0x524 SWAP6
0x525 POP
0x526 SWAP3
0x527 DUP4
0x528 SWAP1
0x529 SUB
0x52a ADD
0x52b SWAP3
0x52c POP
0x52d POP
0x52e LOG1
0x52f PUSH2 0x3e8
0x532 DUP1
0x533 DUP5
0x534 DIV
0x535 MUL
0x536 DUP4
0x537 SUB
0x538 DUP3
0x539 GT
0x53a PUSH2 0x65b
0x53d JUMPI
---
0x4cb: JUMPDEST 
0x4cc: V397 = M[S0]
0x4ce: V398 = M[S1]
0x4cf: V399 = 0x0
0x4d1: V400 = NOT 0x0
0x4d2: V401 = 0x20
0x4d6: V402 = SUB 0x20 S2
0x4d7: V403 = 0x100
0x4da: V404 = EXP 0x100 V402
0x4db: V405 = ADD V404 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x4de: V406 = AND V405 V398
0x4e0: V407 = NOT V405
0x4e4: V408 = AND V407 V397
0x4e5: V409 = OR V408 V406
0x4e7: M[S1] = V409
0x4e8: V410 = 0x40
0x4eb: V411 = M[0x40]
0x4ef: V412 = ADD V383 V382
0x4f2: V413 = SUB V412 V411
0x4f4: V414 = SHA3 V411 V413
0x4f7: M[V411] = V414
0x4fa: V415 = ADD V411 0x20
0x4fd: M[V415] = S9
0x4ff: V416 = M[0x40]
0x503: V417 = 0xd7db8bd6749f2cdf59a7b660098558630fb02f3884bcd31ad6c5deec74d81af6
0x529: V418 = SUB V411 V416
0x52a: V419 = ADD V418 0x40
0x52e: LOG V416 V419 0xd7db8bd6749f2cdf59a7b660098558630fb02f3884bcd31ad6c5deec74d81af6
0x52f: V420 = 0x3e8
0x534: V421 = DIV V414 0x3e8
0x535: V422 = MUL V421 0x3e8
0x537: V423 = SUB V414 V422
0x539: V424 = GT S9 V423
0x53a: V425 = 0x65b
0x53d: JUMPI 0x65b V424
---
Entry stack: [V11, 0x7b, 0x0, 0x0, S19, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, S14, S13, S12, S11, S10, S9, S8, V376, V382, V382, V385, V383, S2, S1, S0]
Stack pops: 11
Stack additions: [V414, S9, S8]
Exit stack: [V11, 0x7b, 0x0, 0x0, S19, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, S14, S13, S12, S11, V414, S9, S8]

================================

Block 0x53e
[0x53e:0x5f7]
---
Predecessors: [0x4cb]
Successors: [0x5f8]
---
0x53e PUSH1 0x40
0x540 DUP1
0x541 MLOAD
0x542 PUSH32 0xd600000000000000000000000000000000000000000000000000000000000000
0x563 PUSH1 0x20
0x565 DUP1
0x566 DUP4
0x567 ADD
0x568 SWAP2
0x569 SWAP1
0x56a SWAP2
0x56b MSTORE
0x56c PUSH32 0x9400000000000000000000000000000000000000000000000000000000000000
0x58d PUSH1 0x21
0x58f DUP4
0x590 ADD
0x591 MSTORE
0x592 PUSH13 0x1000000000000000000000000
0x5a0 ADDRESS
0x5a1 MUL
0x5a2 PUSH1 0x22
0x5a4 DUP4
0x5a5 ADD
0x5a6 MSTORE
0x5a7 PUSH1 0xff
0x5a9 PUSH1 0x1
0x5ab SWAP1
0x5ac SWAP11
0x5ad ADD
0x5ae SWAP10
0x5af DUP11
0x5b0 AND
0x5b1 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x5d2 MUL
0x5d3 PUSH1 0x36
0x5d5 DUP4
0x5d6 ADD
0x5d7 MSTORE
0x5d8 DUP3
0x5d9 MLOAD
0x5da PUSH1 0x17
0x5dc DUP2
0x5dd DUP5
0x5de SUB
0x5df ADD
0x5e0 DUP2
0x5e1 MSTORE
0x5e2 PUSH1 0x37
0x5e4 SWAP1
0x5e5 SWAP3
0x5e6 ADD
0x5e7 SWAP3
0x5e8 DUP4
0x5e9 SWAP1
0x5ea MSTORE
0x5eb DUP2
0x5ec MLOAD
0x5ed SWAP2
0x5ee SWAP3
0x5ef SWAP2
0x5f0 DUP3
0x5f1 SWAP2
0x5f2 DUP5
0x5f3 ADD
0x5f4 SWAP1
0x5f5 DUP1
0x5f6 DUP4
0x5f7 DUP4
---
0x53e: V426 = 0x40
0x541: V427 = M[0x40]
0x542: V428 = 0xd600000000000000000000000000000000000000000000000000000000000000
0x563: V429 = 0x20
0x567: V430 = ADD V427 0x20
0x56b: M[V430] = 0xd600000000000000000000000000000000000000000000000000000000000000
0x56c: V431 = 0x9400000000000000000000000000000000000000000000000000000000000000
0x58d: V432 = 0x21
0x590: V433 = ADD V427 0x21
0x591: M[V433] = 0x9400000000000000000000000000000000000000000000000000000000000000
0x592: V434 = 0x1000000000000000000000000
0x5a0: V435 = ADDRESS
0x5a1: V436 = MUL V435 0x1000000000000000000000000
0x5a2: V437 = 0x22
0x5a5: V438 = ADD V427 0x22
0x5a6: M[V438] = V436
0x5a7: V439 = 0xff
0x5a9: V440 = 0x1
0x5ad: V441 = ADD S6 0x1
0x5b0: V442 = AND V441 0xff
0x5b1: V443 = 0x100000000000000000000000000000000000000000000000000000000000000
0x5d2: V444 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V442
0x5d3: V445 = 0x36
0x5d6: V446 = ADD V427 0x36
0x5d7: M[V446] = V444
0x5d9: V447 = M[0x40]
0x5da: V448 = 0x17
0x5de: V449 = SUB V427 V447
0x5df: V450 = ADD V449 0x17
0x5e1: M[V447] = V450
0x5e2: V451 = 0x37
0x5e6: V452 = ADD V427 0x37
0x5ea: M[0x40] = V452
0x5ec: V453 = M[V447]
0x5f3: V454 = ADD V447 0x20
---
Entry stack: [V11, 0x7b, 0x0, 0x0, S11, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, S6, S5, S4, S3, V414, S1, S0]
Stack pops: 7
Stack additions: [V441, S5, S4, S3, S2, S1, S0, V447, V452, V452, V454, V453, V453, V452, V454]
Exit stack: [V11, 0x7b, 0x0, 0x0, S11, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, V441, S5, S4, S3, V414, S1, S0, V447, V452, V452, V454, V453, V453, V452, V454]

================================

Block 0x5f8
[0x5f8:0x600]
---
Predecessors: [0x53e, 0x601]
Successors: [0x601, 0x617]
---
0x5f8 JUMPDEST
0x5f9 PUSH1 0x20
0x5fb DUP4
0x5fc LT
0x5fd PUSH2 0x617
0x600 JUMPI
---
0x5f8: JUMPDEST 
0x5f9: V455 = 0x20
0x5fc: V456 = LT S2 0x20
0x5fd: V457 = 0x617
0x600: JUMPI 0x617 V456
---
Entry stack: [V11, 0x7b, 0x0, 0x0, S19, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, V441, S13, S12, S11, S10, S9, S8, V447, V452, V452, V454, V453, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x7b, 0x0, 0x0, S19, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, V441, S13, S12, S11, S10, S9, S8, V447, V452, V452, V454, V453, S2, S1, S0]

================================

Block 0x601
[0x601:0x616]
---
Predecessors: [0x5f8]
Successors: [0x5f8]
---
0x601 DUP1
0x602 MLOAD
0x603 DUP3
0x604 MSTORE
0x605 PUSH1 0x1f
0x607 NOT
0x608 SWAP1
0x609 SWAP3
0x60a ADD
0x60b SWAP2
0x60c PUSH1 0x20
0x60e SWAP2
0x60f DUP3
0x610 ADD
0x611 SWAP2
0x612 ADD
0x613 PUSH2 0x5f8
0x616 JUMP
---
0x602: V458 = M[S0]
0x604: M[S1] = V458
0x605: V459 = 0x1f
0x607: V460 = NOT 0x1f
0x60a: V461 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x60c: V462 = 0x20
0x610: V463 = ADD 0x20 S1
0x612: V464 = ADD 0x20 S0
0x613: V465 = 0x5f8
0x616: JUMP 0x5f8
---
Entry stack: [V11, 0x7b, 0x0, 0x0, S19, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, V441, S13, S12, S11, S10, S9, S8, V447, V452, V452, V454, V453, S2, S1, S0]
Stack pops: 3
Stack additions: [V461, V463, V464]
Exit stack: [V11, 0x7b, 0x0, 0x0, S19, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, V441, S13, S12, S11, S10, S9, S8, V447, V452, V452, V454, V453, V461, V463, V464]

================================

Block 0x617
[0x617:0x65a]
---
Predecessors: [0x5f8]
Successors: [0x6bf]
---
0x617 JUMPDEST
0x618 MLOAD
0x619 DUP2
0x61a MLOAD
0x61b PUSH1 0x20
0x61d SWAP4
0x61e SWAP1
0x61f SWAP4
0x620 SUB
0x621 PUSH2 0x100
0x624 EXP
0x625 PUSH1 0x0
0x627 NOT
0x628 ADD
0x629 DUP1
0x62a NOT
0x62b SWAP1
0x62c SWAP2
0x62d AND
0x62e SWAP3
0x62f AND
0x630 SWAP2
0x631 SWAP1
0x632 SWAP2
0x633 OR
0x634 SWAP1
0x635 MSTORE
0x636 PUSH1 0x40
0x638 MLOAD
0x639 SWAP3
0x63a ADD
0x63b DUP3
0x63c SWAP1
0x63d SUB
0x63e SWAP1
0x63f SWAP2
0x640 SHA3
0x641 PUSH1 0x6
0x643 SLOAD
0x644 SWAP1
0x645 SWAP10
0x646 POP
0x647 PUSH1 0x1
0x649 SWAP9
0x64a SWAP1
0x64b SWAP9
0x64c ADD
0x64d SWAP8
0x64e SWAP7
0x64f SWAP1
0x650 SWAP7
0x651 ADD
0x652 SWAP6
0x653 POP
0x654 PUSH2 0x6bf
0x657 SWAP2
0x658 POP
0x659 POP
0x65a JUMP
---
0x617: JUMPDEST 
0x618: V466 = M[S0]
0x61a: V467 = M[S1]
0x61b: V468 = 0x20
0x620: V469 = SUB 0x20 S2
0x621: V470 = 0x100
0x624: V471 = EXP 0x100 V469
0x625: V472 = 0x0
0x627: V473 = NOT 0x0
0x628: V474 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V471
0x62a: V475 = NOT V474
0x62d: V476 = AND V466 V475
0x62f: V477 = AND V467 V474
0x633: V478 = OR V477 V476
0x635: M[S1] = V478
0x636: V479 = 0x40
0x638: V480 = M[0x40]
0x63a: V481 = ADD V452 V453
0x63d: V482 = SUB V481 V480
0x640: V483 = SHA3 V480 V482
0x641: V484 = 0x6
0x643: V485 = S[0x6]
0x647: V486 = 0x1
0x64c: V487 = ADD 0x1 S12
0x651: V488 = ADD V485 S11
0x654: V489 = 0x6bf
0x65a: JUMP 0x6bf
---
Entry stack: [V11, 0x7b, 0x0, 0x0, S19, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, V441, S13, S12, S11, S10, S9, S8, V447, V452, V452, V454, V453, S2, S1, S0]
Stack pops: 14
Stack additions: [V483, V487, V488, S10, S9, S8]
Exit stack: [V11, 0x7b, 0x0, 0x0, S19, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, V441, V483, V487, V488, S10, S9, S8]

================================

Block 0x65b
[0x65b:0x6be]
---
Predecessors: [0x4cb]
Successors: [0x6bf]
---
0x65b JUMPDEST
0x65c POP
0x65d PUSH1 0x7
0x65f SLOAD
0x660 PUSH1 0x40
0x662 DUP1
0x663 MLOAD
0x664 SWAP5
0x665 SWAP1
0x666 SWAP2
0x667 ADD
0x668 DUP1
0x669 DUP6
0x66a MSTORE
0x66b PUSH1 0x20
0x66d DUP6
0x66e ADD
0x66f DUP7
0x670 SWAP1
0x671 MSTORE
0x672 DUP5
0x673 DUP3
0x674 ADD
0x675 DUP5
0x676 SWAP1
0x677 MSTORE
0x678 PUSH1 0x60
0x67a DUP6
0x67b ADD
0x67c DUP4
0x67d SWAP1
0x67e MSTORE
0x67f PUSH1 0x1
0x681 PUSH1 0xa0
0x683 PUSH1 0x2
0x685 EXP
0x686 SUB
0x687 DUP8
0x688 AND
0x689 PUSH1 0x80
0x68b DUP7
0x68c ADD
0x68d MSTORE
0x68e SWAP1
0x68f MLOAD
0x690 SWAP1
0x691 SWAP4
0x692 PUSH1 0x1
0x694 SWAP2
0x695 PUSH32 0x9ba171a0bf779fb814b08421a0deb279f72dfa73ac7a8f35a8edf6bdfa898cf4
0x6b6 SWAP2
0x6b7 DUP2
0x6b8 SWAP1
0x6b9 SUB
0x6ba PUSH1 0xa0
0x6bc ADD
0x6bd SWAP1
0x6be LOG1
---
0x65b: JUMPDEST 
0x65d: V490 = 0x7
0x65f: V491 = S[0x7]
0x660: V492 = 0x40
0x663: V493 = M[0x40]
0x667: V494 = ADD V491 S3
0x66a: M[V493] = V494
0x66b: V495 = 0x20
0x66e: V496 = ADD V493 0x20
0x671: M[V496] = S4
0x674: V497 = ADD 0x40 V493
0x677: M[V497] = V414
0x678: V498 = 0x60
0x67b: V499 = ADD V493 0x60
0x67e: M[V499] = S1
0x67f: V500 = 0x1
0x681: V501 = 0xa0
0x683: V502 = 0x2
0x685: V503 = EXP 0x2 0xa0
0x686: V504 = SUB 0x10000000000000000000000000000000000000000 0x1
0x688: V505 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x689: V506 = 0x80
0x68c: V507 = ADD V493 0x80
0x68d: M[V507] = V505
0x68f: V508 = M[0x40]
0x692: V509 = 0x1
0x695: V510 = 0x9ba171a0bf779fb814b08421a0deb279f72dfa73ac7a8f35a8edf6bdfa898cf4
0x6b9: V511 = SUB V493 V508
0x6ba: V512 = 0xa0
0x6bc: V513 = ADD 0xa0 V511
0x6be: LOG V508 V513 0x9ba171a0bf779fb814b08421a0deb279f72dfa73ac7a8f35a8edf6bdfa898cf4
---
Entry stack: [V11, 0x7b, 0x0, 0x0, S11, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, S6, S5, S4, S3, V414, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, V494, S2, S1, 0x1]
Exit stack: [V11, 0x7b, 0x0, 0x0, S11, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, S6, S5, S4, V494, V414, S1, 0x1]

================================

Block 0x6bf
[0x6bf:0x6c3]
---
Predecessors: [0x617, 0x65b]
Successors: [0x31d]
---
0x6bf JUMPDEST
0x6c0 PUSH2 0x31d
0x6c3 JUMP
---
0x6bf: JUMPDEST 
0x6c0: V514 = 0x31d
0x6c3: JUMP 0x31d
---
Entry stack: [V11, 0x7b, 0x0, 0x0, S11, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7b, 0x0, 0x0, S11, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x6c4
[0x6c4:0x6d4]
---
Predecessors: [0x31d]
Successors: [0xa7, 0x6fb]
---
0x6c4 JUMPDEST
0x6c5 POP
0x6c6 SWAP2
0x6c7 SWAP9
0x6c8 SWAP3
0x6c9 SWAP8
0x6ca POP
0x6cb SWAP3
0x6cc SWAP6
0x6cd POP
0x6ce SWAP1
0x6cf SWAP4
0x6d0 POP
0x6d1 POP
0x6d2 POP
0x6d3 POP
0x6d4 JUMP
---
0x6c4: JUMPDEST 
0x6d4: JUMP {0xa7, 0x6fb}
---
Entry stack: [V11, 0x7b, 0x0, 0x0, S11, {0xa7, 0x6fb}, 0x0, 0x0, 0x0, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 11
Stack additions: [S3, S4, S5]
Exit stack: [V11, 0x7b, 0x0, 0x0, S11, S3, S4, S5]

================================

Block 0x6d5
[0x6d5:0x6ee]
---
Predecessors: [0xda]
Successors: [0x6ef, 0x6f3]
---
0x6d5 JUMPDEST
0x6d6 PUSH1 0x1
0x6d8 SLOAD
0x6d9 PUSH1 0x0
0x6db SWAP1
0x6dc DUP2
0x6dd SWAP1
0x6de DUP2
0x6df SWAP1
0x6e0 PUSH1 0x1
0x6e2 PUSH1 0xa0
0x6e4 PUSH1 0x2
0x6e6 EXP
0x6e7 SUB
0x6e8 AND
0x6e9 CALLER
0x6ea EQ
0x6eb PUSH2 0x6f3
0x6ee JUMPI
---
0x6d5: JUMPDEST 
0x6d6: V515 = 0x1
0x6d8: V516 = S[0x1]
0x6d9: V517 = 0x0
0x6e0: V518 = 0x1
0x6e2: V519 = 0xa0
0x6e4: V520 = 0x2
0x6e6: V521 = EXP 0x2 0xa0
0x6e7: V522 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6e8: V523 = AND 0xffffffffffffffffffffffffffffffffffffffff V516
0x6e9: V524 = CALLER
0x6ea: V525 = EQ V524 V523
0x6eb: V526 = 0x6f3
0x6ee: JUMPI 0x6f3 V525
---
Entry stack: [V11, 0x7b]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V11, 0x7b, 0x0, 0x0, 0x0]

================================

Block 0x6ef
[0x6ef:0x6f2]
---
Predecessors: [0x6d5]
Successors: []
---
0x6ef PUSH1 0x0
0x6f1 DUP1
0x6f2 REVERT
---
0x6ef: V527 = 0x0
0x6f2: REVERT 0x0 0x0
---
Entry stack: [V11, 0x7b, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7b, 0x0, 0x0, 0x0]

================================

Block 0x6f3
[0x6f3:0x6fa]
---
Predecessors: [0x6d5]
Successors: [0x15c]
---
0x6f3 JUMPDEST
0x6f4 PUSH2 0x6fb
0x6f7 PUSH2 0x15c
0x6fa JUMP
---
0x6f3: JUMPDEST 
0x6f4: V528 = 0x6fb
0x6f7: V529 = 0x15c
0x6fa: JUMP 0x15c
---
Entry stack: [V11, 0x7b, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x6fb]
Exit stack: [V11, 0x7b, 0x0, 0x0, 0x0, 0x6fb]

================================

Block 0x6fb
[0x6fb:0x717]
---
Predecessors: [0x6c4]
Successors: [0x718, 0x721]
---
0x6fb JUMPDEST
0x6fc PUSH1 0x8
0x6fe SLOAD
0x6ff SWAP3
0x700 SWAP6
0x701 POP
0x702 SWAP1
0x703 SWAP4
0x704 POP
0x705 SWAP2
0x706 POP
0x707 PUSH8 0x16345785d8a0000
0x710 DUP5
0x711 ADD
0x712 LT
0x713 ISZERO
0x714 PUSH2 0x721
0x717 JUMPI
---
0x6fb: JUMPDEST 
0x6fc: V530 = 0x8
0x6fe: V531 = S[0x8]
0x707: V532 = 0x16345785d8a0000
0x711: V533 = ADD S2 0x16345785d8a0000
0x712: V534 = LT V533 V531
0x713: V535 = ISZERO V534
0x714: V536 = 0x721
0x717: JUMPI 0x721 V535
---
Entry stack: [V11, 0x7b, 0x0, 0x0, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x7b, S2, S1, S0]

================================

Block 0x718
[0x718:0x720]
---
Predecessors: [0x6fb]
Successors: [0x726]
---
0x718 PUSH2 0x721
0x71b DUP3
0x71c DUP3
0x71d PUSH2 0x726
0x720 JUMP
---
0x718: V537 = 0x721
0x71d: V538 = 0x726
0x720: JUMP 0x726
---
Entry stack: [V11, 0x7b, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x721, S1, S0]
Exit stack: [V11, 0x7b, S2, S1, S0, 0x721, S1, S0]

================================

Block 0x721
[0x721:0x725]
---
Predecessors: [0x6fb, 0x721, 0x729]
Successors: [0x7b, 0x721]
---
0x721 JUMPDEST
0x722 POP
0x723 POP
0x724 POP
0x725 JUMP
---
0x721: JUMPDEST 
0x725: JUMP {0x7b, 0x721}
---
Entry stack: [V11, 0x7b, S6, S5, S4, {0x7b, 0x721}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x7b, S6, S5, S4]

================================

Block 0x726
[0x726:0x728]
---
Predecessors: [0x718]
Successors: [0x729]
---
0x726 JUMPDEST
0x727 PUSH1 0x0
---
0x726: JUMPDEST 
0x727: V539 = 0x0
---
Entry stack: [V11, 0x7b, S5, S4, S3, 0x721, S1, S0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x7b, S5, S4, S3, 0x721, S1, S0, 0x0]

================================

Block 0x729
[0x729:0x731]
---
Predecessors: [0x726, 0x7fb]
Successors: [0x721, 0x732]
---
0x729 JUMPDEST
0x72a DUP3
0x72b DUP2
0x72c LT
0x72d ISZERO
0x72e PUSH2 0x721
0x731 JUMPI
---
0x729: JUMPDEST 
0x72c: V540 = LT S0 S2
0x72d: V541 = ISZERO V540
0x72e: V542 = 0x721
0x731: JUMPI 0x721 V541
---
Entry stack: [V11, 0x7b, S6, S5, S4, 0x721, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x7b, S6, S5, S4, 0x721, S2, S1, S0]

================================

Block 0x732
[0x732:0x73c]
---
Predecessors: [0x729]
Successors: [0x73d, 0x7ab]
---
0x732 PUSH1 0x1
0x734 DUP4
0x735 SUB
0x736 DUP2
0x737 EQ
0x738 ISZERO
0x739 PUSH2 0x7ab
0x73c JUMPI
---
0x732: V543 = 0x1
0x735: V544 = SUB S2 0x1
0x737: V545 = EQ S0 V544
0x738: V546 = ISZERO V545
0x739: V547 = 0x7ab
0x73c: JUMPI 0x7ab V546
---
Entry stack: [V11, 0x7b, S6, S5, S4, 0x721, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x7b, S6, S5, S4, 0x721, S2, S1, S0]

================================

Block 0x73d
[0x73d:0x787]
---
Predecessors: [0x732]
Successors: [0x803]
---
0x73d PUSH1 0x40
0x73f DUP1
0x740 MLOAD
0x741 PUSH1 0x1
0x743 PUSH1 0xa0
0x745 PUSH1 0x2
0x747 EXP
0x748 SUB
0x749 DUP5
0x74a AND
0x74b DUP2
0x74c MSTORE
0x74d ADDRESS
0x74e BALANCE
0x74f PUSH1 0x20
0x751 DUP3
0x752 ADD
0x753 MSTORE
0x754 DUP2
0x755 MLOAD
0x756 PUSH32 0x6f64f88d9c7bce9de81630a906db0b3cca6a7fab9fb0203e20d5beac8bcf70b7
0x777 SWAP3
0x778 SWAP2
0x779 DUP2
0x77a SWAP1
0x77b SUB
0x77c SWAP1
0x77d SWAP2
0x77e ADD
0x77f SWAP1
0x780 LOG1
0x781 PUSH2 0x788
0x784 PUSH2 0x803
0x787 JUMP
---
0x73d: V548 = 0x40
0x740: V549 = M[0x40]
0x741: V550 = 0x1
0x743: V551 = 0xa0
0x745: V552 = 0x2
0x747: V553 = EXP 0x2 0xa0
0x748: V554 = SUB 0x10000000000000000000000000000000000000000 0x1
0x74a: V555 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x74c: M[V549] = V555
0x74d: V556 = ADDRESS
0x74e: V557 = BALANCE V556
0x74f: V558 = 0x20
0x752: V559 = ADD V549 0x20
0x753: M[V559] = V557
0x755: V560 = M[0x40]
0x756: V561 = 0x6f64f88d9c7bce9de81630a906db0b3cca6a7fab9fb0203e20d5beac8bcf70b7
0x77b: V562 = SUB V549 V560
0x77e: V563 = ADD 0x40 V562
0x780: LOG V560 V563 0x6f64f88d9c7bce9de81630a906db0b3cca6a7fab9fb0203e20d5beac8bcf70b7
0x781: V564 = 0x788
0x784: V565 = 0x803
0x787: JUMP 0x803
---
Entry stack: [V11, 0x7b, S6, S5, S4, 0x721, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x788]
Exit stack: [V11, 0x7b, S6, S5, S4, 0x721, S2, S1, S0, 0x788]

================================

Block 0x788
[0x788:0x79a]
---
Predecessors: [0x803]
Successors: [0x79b, 0x7a4]
---
0x788 JUMPDEST
0x789 PUSH1 0x40
0x78b MLOAD
0x78c DUP1
0x78d SWAP2
0x78e SUB
0x78f SWAP1
0x790 PUSH1 0x0
0x792 CREATE
0x793 DUP1
0x794 ISZERO
0x795 DUP1
0x796 ISZERO
0x797 PUSH2 0x7a4
0x79a JUMPI
---
0x788: JUMPDEST 
0x789: V566 = 0x40
0x78b: V567 = M[0x40]
0x78e: V568 = SUB V604 V567
0x790: V569 = 0x0
0x792: V570 = CREATE 0x0 V567 V568
0x794: V571 = ISZERO V570
0x796: V572 = ISZERO V571
0x797: V573 = 0x7a4
0x79a: JUMPI 0x7a4 V572
---
Entry stack: [V11, 0x7b, S7, S6, S5, 0x721, S3, S2, S1, V604]
Stack pops: 1
Stack additions: [V570, V571]
Exit stack: [V11, 0x7b, S7, S6, S5, 0x721, S3, S2, S1, V570, V571]

================================

Block 0x79b
[0x79b:0x7a3]
---
Predecessors: [0x788]
Successors: []
---
0x79b RETURNDATASIZE
0x79c PUSH1 0x0
0x79e DUP1
0x79f RETURNDATACOPY
0x7a0 RETURNDATASIZE
0x7a1 PUSH1 0x0
0x7a3 REVERT
---
0x79b: V574 = RETURNDATASIZE
0x79c: V575 = 0x0
0x79f: RETURNDATACOPY 0x0 0x0 V574
0x7a0: V576 = RETURNDATASIZE
0x7a1: V577 = 0x0
0x7a3: REVERT 0x0 V576
---
Entry stack: [V11, 0x7b, S8, S7, S6, 0x721, S4, S3, S2, V570, V571]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7b, S8, S7, S6, 0x721, S4, S3, S2, V570, V571]

================================

Block 0x7a4
[0x7a4:0x7aa]
---
Predecessors: [0x788]
Successors: [0x7fb]
---
0x7a4 JUMPDEST
0x7a5 POP
0x7a6 POP
0x7a7 PUSH2 0x7fb
0x7aa JUMP
---
0x7a4: JUMPDEST 
0x7a7: V578 = 0x7fb
0x7aa: JUMP 0x7fb
---
Entry stack: [V11, 0x7b, S8, S7, S6, 0x721, S4, S3, S2, V570, V571]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x7b, S8, S7, S6, 0x721, S4, S3, S2]

================================

Block 0x7ab
[0x7ab:0x7db]
---
Predecessors: [0x732]
Successors: [0x813]
---
0x7ab JUMPDEST
0x7ac PUSH1 0x40
0x7ae MLOAD
0x7af PUSH32 0xeb14667e38f6b17e01711fed8117755b944ab6f980852e88e06b63b25527c1f
0x7d0 SWAP1
0x7d1 PUSH1 0x0
0x7d3 SWAP1
0x7d4 LOG1
0x7d5 PUSH2 0x7dc
0x7d8 PUSH2 0x813
0x7db JUMP
---
0x7ab: JUMPDEST 
0x7ac: V579 = 0x40
0x7ae: V580 = M[0x40]
0x7af: V581 = 0xeb14667e38f6b17e01711fed8117755b944ab6f980852e88e06b63b25527c1f
0x7d1: V582 = 0x0
0x7d4: LOG V580 0x0 0xeb14667e38f6b17e01711fed8117755b944ab6f980852e88e06b63b25527c1f
0x7d5: V583 = 0x7dc
0x7d8: V584 = 0x813
0x7db: JUMP 0x813
---
Entry stack: [V11, 0x7b, S6, S5, S4, 0x721, S2, S1, S0]
Stack pops: 0
Stack additions: [0x7dc]
Exit stack: [V11, 0x7b, S6, S5, S4, 0x721, S2, S1, S0, 0x7dc]

================================

Block 0x7dc
[0x7dc:0x7ee]
---
Predecessors: [0x813]
Successors: [0x7ef, 0x7f8]
---
0x7dc JUMPDEST
0x7dd PUSH1 0x40
0x7df MLOAD
0x7e0 DUP1
0x7e1 SWAP2
0x7e2 SUB
0x7e3 SWAP1
0x7e4 PUSH1 0x0
0x7e6 CREATE
0x7e7 DUP1
0x7e8 ISZERO
0x7e9 DUP1
0x7ea ISZERO
0x7eb PUSH2 0x7f8
0x7ee JUMPI
---
0x7dc: JUMPDEST 
0x7dd: V585 = 0x40
0x7df: V586 = M[0x40]
0x7e2: V587 = SUB V609 V586
0x7e4: V588 = 0x0
0x7e6: V589 = CREATE 0x0 V586 V587
0x7e8: V590 = ISZERO V589
0x7ea: V591 = ISZERO V590
0x7eb: V592 = 0x7f8
0x7ee: JUMPI 0x7f8 V591
---
Entry stack: [V11, 0x7b, S7, S6, S5, 0x721, S3, S2, S1, V609]
Stack pops: 1
Stack additions: [V589, V590]
Exit stack: [V11, 0x7b, S7, S6, S5, 0x721, S3, S2, S1, V589, V590]

================================

Block 0x7ef
[0x7ef:0x7f7]
---
Predecessors: [0x7dc]
Successors: []
---
0x7ef RETURNDATASIZE
0x7f0 PUSH1 0x0
0x7f2 DUP1
0x7f3 RETURNDATACOPY
0x7f4 RETURNDATASIZE
0x7f5 PUSH1 0x0
0x7f7 REVERT
---
0x7ef: V593 = RETURNDATASIZE
0x7f0: V594 = 0x0
0x7f3: RETURNDATACOPY 0x0 0x0 V593
0x7f4: V595 = RETURNDATASIZE
0x7f5: V596 = 0x0
0x7f7: REVERT 0x0 V595
---
Entry stack: [V11, 0x7b, S8, S7, S6, 0x721, S4, S3, S2, V589, V590]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7b, S8, S7, S6, 0x721, S4, S3, S2, V589, V590]

================================

Block 0x7f8
[0x7f8:0x7fa]
---
Predecessors: [0x7dc]
Successors: [0x7fb]
---
0x7f8 JUMPDEST
0x7f9 POP
0x7fa POP
---
0x7f8: JUMPDEST 
---
Entry stack: [V11, 0x7b, S8, S7, S6, 0x721, S4, S3, S2, V589, V590]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x7b, S8, S7, S6, 0x721, S4, S3, S2]

================================

Block 0x7fb
[0x7fb:0x802]
---
Predecessors: [0x7a4, 0x7f8]
Successors: [0x729]
---
0x7fb JUMPDEST
0x7fc PUSH1 0x1
0x7fe ADD
0x7ff PUSH2 0x729
0x802 JUMP
---
0x7fb: JUMPDEST 
0x7fc: V597 = 0x1
0x7fe: V598 = ADD 0x1 S0
0x7ff: V599 = 0x729
0x802: JUMP 0x729
---
Entry stack: [V11, 0x7b, S6, S5, S4, 0x721, S2, S1, S0]
Stack pops: 1
Stack additions: [V598]
Exit stack: [V11, 0x7b, S6, S5, S4, 0x721, S2, S1, V598]

================================

Block 0x803
[0x803:0x812]
---
Predecessors: [0x73d]
Successors: [0x788]
---
0x803 JUMPDEST
0x804 PUSH1 0x40
0x806 MLOAD
0x807 PUSH2 0x29c
0x80a DUP1
0x80b PUSH2 0x823
0x80e DUP4
0x80f CODECOPY
0x810 ADD
0x811 SWAP1
0x812 JUMP
---
0x803: JUMPDEST 
0x804: V600 = 0x40
0x806: V601 = M[0x40]
0x807: V602 = 0x29c
0x80b: V603 = 0x823
0x80f: CODECOPY V601 0x823 0x29c
0x810: V604 = ADD 0x29c V601
0x812: JUMP 0x788
---
Entry stack: [V11, 0x7b, S7, S6, S5, 0x721, S3, S2, S1, 0x788]
Stack pops: 1
Stack additions: [V604]
Exit stack: [V11, 0x7b, S7, S6, S5, 0x721, S3, S2, S1, V604]

================================

Block 0x813
[0x813:0x821]
---
Predecessors: [0x7ab]
Successors: [0x7dc]
---
0x813 JUMPDEST
0x814 PUSH1 0x40
0x816 MLOAD
0x817 PUSH1 0x52
0x819 DUP1
0x81a PUSH2 0xabf
0x81d DUP4
0x81e CODECOPY
0x81f ADD
0x820 SWAP1
0x821 JUMP
---
0x813: JUMPDEST 
0x814: V605 = 0x40
0x816: V606 = M[0x40]
0x817: V607 = 0x52
0x81a: V608 = 0xabf
0x81e: CODECOPY V606 0xabf 0x52
0x81f: V609 = ADD 0x52 V606
0x821: JUMP 0x7dc
---
Entry stack: [V11, 0x7b, S7, S6, S5, 0x721, S3, S2, S1, 0x7dc]
Stack pops: 1
Stack additions: [V609]
Exit stack: [V11, 0x7b, S7, S6, S5, 0x721, S3, S2, S1, V609]

================================

Block 0x822
[0x822:0x854]
---
Predecessors: []
Successors: [0x855]
---
0x822 STOP
0x823 PUSH1 0x80
0x825 PUSH1 0x40
0x827 MSTORE
0x828 PUSH1 0x1
0x82a DUP1
0x82b SLOAD
0x82c PUSH1 0x1
0x82e PUSH1 0xa0
0x830 PUSH1 0x2
0x832 EXP
0x833 SUB
0x834 NOT
0x835 AND
0x836 PUSH20 0x5d0d76787d9d564061dd23f8209f804a3b8ad2f2
0x84b OR
0x84c SWAP1
0x84d SSTORE
0x84e CALLVALUE
0x84f DUP1
0x850 ISZERO
0x851 PUSH2 0x36
0x854 JUMPI
---
0x822: STOP 
0x823: V610 = 0x80
0x825: V611 = 0x40
0x827: M[0x40] = 0x80
0x828: V612 = 0x1
0x82b: V613 = S[0x1]
0x82c: V614 = 0x1
0x82e: V615 = 0xa0
0x830: V616 = 0x2
0x832: V617 = EXP 0x2 0xa0
0x833: V618 = SUB 0x10000000000000000000000000000000000000000 0x1
0x834: V619 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x835: V620 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V613
0x836: V621 = 0x5d0d76787d9d564061dd23f8209f804a3b8ad2f2
0x84b: V622 = OR 0x5d0d76787d9d564061dd23f8209f804a3b8ad2f2 V620
0x84d: S[0x1] = V622
0x84e: V623 = CALLVALUE
0x850: V624 = ISZERO V623
0x851: V625 = 0x36
0x854: THROWI V624
---
Entry stack: []
Stack pops: 0
Stack additions: [V623]
Exit stack: []

================================

Block 0x855
[0x855:0x8ec]
---
Predecessors: [0x822]
Successors: [0x8ed]
---
0x855 PUSH1 0x0
0x857 DUP1
0x858 REVERT
0x859 JUMPDEST
0x85a POP
0x85b PUSH1 0x0
0x85d DUP1
0x85e SLOAD
0x85f PUSH1 0x1
0x861 PUSH1 0xa0
0x863 PUSH1 0x2
0x865 EXP
0x866 SUB
0x867 NOT
0x868 AND
0x869 CALLER
0x86a OR
0x86b SWAP1
0x86c SSTORE
0x86d PUSH1 0x40
0x86f DUP1
0x870 MLOAD
0x871 ADDRESS
0x872 PUSH1 0x20
0x874 DUP3
0x875 ADD
0x876 MSTORE
0x877 DUP2
0x878 DUP2
0x879 MSTORE
0x87a PUSH1 0x5
0x87c DUP2
0x87d DUP4
0x87e ADD
0x87f MSTORE
0x880 PUSH32 0x446f6e6521000000000000000000000000000000000000000000000000000000
0x8a1 PUSH1 0x60
0x8a3 DUP3
0x8a4 ADD
0x8a5 MSTORE
0x8a6 SWAP1
0x8a7 MLOAD
0x8a8 PUSH32 0x2057896cc09868316964a1f6a8b6b2e648f25329586febe87cda8248e4f37da5
0x8c9 SWAP2
0x8ca DUP2
0x8cb SWAP1
0x8cc SUB
0x8cd PUSH1 0x80
0x8cf ADD
0x8d0 SWAP1
0x8d1 LOG1
0x8d2 PUSH2 0x1df
0x8d5 DUP1
0x8d6 PUSH2 0xbd
0x8d9 PUSH1 0x0
0x8db CODECOPY
0x8dc PUSH1 0x0
0x8de RETURN
0x8df STOP
0x8e0 PUSH1 0x80
0x8e2 PUSH1 0x40
0x8e4 MSTORE
0x8e5 PUSH1 0x4
0x8e7 CALLDATASIZE
0x8e8 LT
0x8e9 PUSH2 0x56
0x8ec JUMPI
---
0x855: V626 = 0x0
0x858: REVERT 0x0 0x0
0x859: JUMPDEST 
0x85b: V627 = 0x0
0x85e: V628 = S[0x0]
0x85f: V629 = 0x1
0x861: V630 = 0xa0
0x863: V631 = 0x2
0x865: V632 = EXP 0x2 0xa0
0x866: V633 = SUB 0x10000000000000000000000000000000000000000 0x1
0x867: V634 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x868: V635 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V628
0x869: V636 = CALLER
0x86a: V637 = OR V636 V635
0x86c: S[0x0] = V637
0x86d: V638 = 0x40
0x870: V639 = M[0x40]
0x871: V640 = ADDRESS
0x872: V641 = 0x20
0x875: V642 = ADD V639 0x20
0x876: M[V642] = V640
0x879: M[V639] = 0x40
0x87a: V643 = 0x5
0x87e: V644 = ADD 0x40 V639
0x87f: M[V644] = 0x5
0x880: V645 = 0x446f6e6521000000000000000000000000000000000000000000000000000000
0x8a1: V646 = 0x60
0x8a4: V647 = ADD V639 0x60
0x8a5: M[V647] = 0x446f6e6521000000000000000000000000000000000000000000000000000000
0x8a7: V648 = M[0x40]
0x8a8: V649 = 0x2057896cc09868316964a1f6a8b6b2e648f25329586febe87cda8248e4f37da5
0x8cc: V650 = SUB V639 V648
0x8cd: V651 = 0x80
0x8cf: V652 = ADD 0x80 V650
0x8d1: LOG V648 V652 0x2057896cc09868316964a1f6a8b6b2e648f25329586febe87cda8248e4f37da5
0x8d2: V653 = 0x1df
0x8d6: V654 = 0xbd
0x8d9: V655 = 0x0
0x8db: CODECOPY 0x0 0xbd 0x1df
0x8dc: V656 = 0x0
0x8de: RETURN 0x0 0x1df
0x8df: STOP 
0x8e0: V657 = 0x80
0x8e2: V658 = 0x40
0x8e4: M[0x40] = 0x80
0x8e5: V659 = 0x4
0x8e7: V660 = CALLDATASIZE
0x8e8: V661 = LT V660 0x4
0x8e9: V662 = 0x56
0x8ec: THROWI V661
---
Entry stack: [V623]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x8ed
[0x8ed:0x91f]
---
Predecessors: [0x855]
Successors: [0x920]
---
0x8ed PUSH4 0xffffffff
0x8f2 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x910 PUSH1 0x0
0x912 CALLDATALOAD
0x913 DIV
0x914 AND
0x915 PUSH4 0x3ccfd60b
0x91a DUP2
0x91b EQ
0x91c PUSH2 0x5b
0x91f JUMPI
---
0x8ed: V663 = 0xffffffff
0x8f2: V664 = 0x100000000000000000000000000000000000000000000000000000000
0x910: V665 = 0x0
0x912: V666 = CALLDATALOAD 0x0
0x913: V667 = DIV V666 0x100000000000000000000000000000000000000000000000000000000
0x914: V668 = AND V667 0xffffffff
0x915: V669 = 0x3ccfd60b
0x91b: V670 = EQ V668 0x3ccfd60b
0x91c: V671 = 0x5b
0x91f: THROWI V670
---
Entry stack: []
Stack pops: 0
Stack additions: [V668]
Exit stack: [V668]

================================

Block 0x920
[0x920:0x92a]
---
Predecessors: [0x8ed]
Successors: [0x72, 0x92b]
---
0x920 DUP1
0x921 PUSH4 0x83197ef0
0x926 EQ
0x927 PUSH2 0x72
0x92a JUMPI
---
0x921: V672 = 0x83197ef0
0x926: V673 = EQ 0x83197ef0 V668
0x927: V674 = 0x72
0x92a: JUMPI 0x72 V673
---
Entry stack: [V668]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V668]

================================

Block 0x92b
[0x92b:0x935]
---
Predecessors: [0x920]
Successors: [0x936]
---
0x92b DUP1
0x92c PUSH4 0x8dc48fcd
0x931 EQ
0x932 PUSH2 0x87
0x935 JUMPI
---
0x92c: V675 = 0x8dc48fcd
0x931: V676 = EQ 0x8dc48fcd V668
0x932: V677 = 0x87
0x935: THROWI V676
---
Entry stack: [V668]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V668]

================================

Block 0x936
[0x936:0x942]
---
Predecessors: [0x92b]
Successors: [0x943]
---
0x936 JUMPDEST
0x937 PUSH1 0x0
0x939 DUP1
0x93a REVERT
0x93b JUMPDEST
0x93c CALLVALUE
0x93d DUP1
0x93e ISZERO
0x93f PUSH2 0x67
0x942 JUMPI
---
0x936: JUMPDEST 
0x937: V678 = 0x0
0x93a: REVERT 0x0 0x0
0x93b: JUMPDEST 
0x93c: V679 = CALLVALUE
0x93e: V680 = ISZERO V679
0x93f: V681 = 0x67
0x942: THROWI V680
---
Entry stack: [V668]
Stack pops: 0
Stack additions: [V679]
Exit stack: []

================================

Block 0x943
[0x943:0x959]
---
Predecessors: [0x936]
Successors: [0x95a]
---
0x943 PUSH1 0x0
0x945 DUP1
0x946 REVERT
0x947 JUMPDEST
0x948 POP
0x949 PUSH2 0x70
0x94c PUSH2 0x9c
0x94f JUMP
0x950 JUMPDEST
0x951 STOP
0x952 JUMPDEST
0x953 CALLVALUE
0x954 DUP1
0x955 ISZERO
0x956 PUSH2 0x7e
0x959 JUMPI
---
0x943: V682 = 0x0
0x946: REVERT 0x0 0x0
0x947: JUMPDEST 
0x949: V683 = 0x70
0x94c: V684 = 0x9c
0x94f: THROW 
0x950: JUMPDEST 
0x951: STOP 
0x952: JUMPDEST 
0x953: V685 = CALLVALUE
0x955: V686 = ISZERO V685
0x956: V687 = 0x7e
0x959: THROWI V686
---
Entry stack: [V679]
Stack pops: 0
Stack additions: [0x70, V685]
Exit stack: []

================================

Block 0x95a
[0x95a:0x96e]
---
Predecessors: [0x943]
Successors: [0x96f]
---
0x95a PUSH1 0x0
0x95c DUP1
0x95d REVERT
0x95e JUMPDEST
0x95f POP
0x960 PUSH2 0x70
0x963 PUSH2 0xf1
0x966 JUMP
0x967 JUMPDEST
0x968 CALLVALUE
0x969 DUP1
0x96a ISZERO
0x96b PUSH2 0x93
0x96e JUMPI
---
0x95a: V688 = 0x0
0x95d: REVERT 0x0 0x0
0x95e: JUMPDEST 
0x960: V689 = 0x70
0x963: V690 = 0xf1
0x966: THROW 
0x967: JUMPDEST 
0x968: V691 = CALLVALUE
0x96a: V692 = ISZERO V691
0x96b: V693 = 0x93
0x96e: THROWI V692
---
Entry stack: [V685]
Stack pops: 0
Stack additions: [0x70, V691]
Exit stack: []

================================

Block 0x96f
[0x96f:0x98e]
---
Predecessors: [0x95a]
Successors: [0x98f]
---
0x96f PUSH1 0x0
0x971 DUP1
0x972 REVERT
0x973 JUMPDEST
0x974 POP
0x975 PUSH2 0x70
0x978 PUSH2 0x116
0x97b JUMP
0x97c JUMPDEST
0x97d PUSH1 0x0
0x97f SLOAD
0x980 PUSH1 0x1
0x982 PUSH1 0xa0
0x984 PUSH1 0x2
0x986 EXP
0x987 SUB
0x988 AND
0x989 CALLER
0x98a EQ
0x98b PUSH2 0xb3
0x98e JUMPI
---
0x96f: V694 = 0x0
0x972: REVERT 0x0 0x0
0x973: JUMPDEST 
0x975: V695 = 0x70
0x978: V696 = 0x116
0x97b: THROW 
0x97c: JUMPDEST 
0x97d: V697 = 0x0
0x97f: V698 = S[0x0]
0x980: V699 = 0x1
0x982: V700 = 0xa0
0x984: V701 = 0x2
0x986: V702 = EXP 0x2 0xa0
0x987: V703 = SUB 0x10000000000000000000000000000000000000000 0x1
0x988: V704 = AND 0xffffffffffffffffffffffffffffffffffffffff V698
0x989: V705 = CALLER
0x98a: V706 = EQ V705 V704
0x98b: V707 = 0xb3
0x98e: THROWI V706
---
Entry stack: [V691]
Stack pops: 0
Stack additions: [0x70]
Exit stack: []

================================

Block 0x98f
[0x98f:0x9c4]
---
Predecessors: [0x96f]
Successors: [0x9c5]
---
0x98f PUSH1 0x0
0x991 DUP1
0x992 REVERT
0x993 JUMPDEST
0x994 PUSH1 0x0
0x996 DUP1
0x997 SLOAD
0x998 PUSH1 0x40
0x99a MLOAD
0x99b PUSH1 0x1
0x99d PUSH1 0xa0
0x99f PUSH1 0x2
0x9a1 EXP
0x9a2 SUB
0x9a3 SWAP1
0x9a4 SWAP2
0x9a5 AND
0x9a6 SWAP2
0x9a7 ADDRESS
0x9a8 BALANCE
0x9a9 DUP1
0x9aa ISZERO
0x9ab PUSH2 0x8fc
0x9ae MUL
0x9af SWAP3
0x9b0 SWAP1
0x9b1 SWAP2
0x9b2 DUP2
0x9b3 DUP2
0x9b4 DUP2
0x9b5 DUP6
0x9b6 DUP9
0x9b7 DUP9
0x9b8 CALL
0x9b9 SWAP4
0x9ba POP
0x9bb POP
0x9bc POP
0x9bd POP
0x9be ISZERO
0x9bf DUP1
0x9c0 ISZERO
0x9c1 PUSH2 0xee
0x9c4 JUMPI
---
0x98f: V708 = 0x0
0x992: REVERT 0x0 0x0
0x993: JUMPDEST 
0x994: V709 = 0x0
0x997: V710 = S[0x0]
0x998: V711 = 0x40
0x99a: V712 = M[0x40]
0x99b: V713 = 0x1
0x99d: V714 = 0xa0
0x99f: V715 = 0x2
0x9a1: V716 = EXP 0x2 0xa0
0x9a2: V717 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9a5: V718 = AND V710 0xffffffffffffffffffffffffffffffffffffffff
0x9a7: V719 = ADDRESS
0x9a8: V720 = BALANCE V719
0x9aa: V721 = ISZERO V720
0x9ab: V722 = 0x8fc
0x9ae: V723 = MUL 0x8fc V721
0x9b8: V724 = CALL V723 V718 V720 V712 0x0 V712 0x0
0x9be: V725 = ISZERO V724
0x9c0: V726 = ISZERO V725
0x9c1: V727 = 0xee
0x9c4: THROWI V726
---
Entry stack: []
Stack pops: 0
Stack additions: [V725]
Exit stack: []

================================

Block 0x9c5
[0x9c5:0x9e3]
---
Predecessors: [0x98f]
Successors: [0x9e4]
---
0x9c5 RETURNDATASIZE
0x9c6 PUSH1 0x0
0x9c8 DUP1
0x9c9 RETURNDATACOPY
0x9ca RETURNDATASIZE
0x9cb PUSH1 0x0
0x9cd REVERT
0x9ce JUMPDEST
0x9cf POP
0x9d0 JUMP
0x9d1 JUMPDEST
0x9d2 PUSH1 0x0
0x9d4 SLOAD
0x9d5 PUSH1 0x1
0x9d7 PUSH1 0xa0
0x9d9 PUSH1 0x2
0x9db EXP
0x9dc SUB
0x9dd AND
0x9de CALLER
0x9df EQ
0x9e0 PUSH2 0x108
0x9e3 JUMPI
---
0x9c5: V728 = RETURNDATASIZE
0x9c6: V729 = 0x0
0x9c9: RETURNDATACOPY 0x0 0x0 V728
0x9ca: V730 = RETURNDATASIZE
0x9cb: V731 = 0x0
0x9cd: REVERT 0x0 V730
0x9ce: JUMPDEST 
0x9d0: JUMP S1
0x9d1: JUMPDEST 
0x9d2: V732 = 0x0
0x9d4: V733 = S[0x0]
0x9d5: V734 = 0x1
0x9d7: V735 = 0xa0
0x9d9: V736 = 0x2
0x9db: V737 = EXP 0x2 0xa0
0x9dc: V738 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9dd: V739 = AND 0xffffffffffffffffffffffffffffffffffffffff V733
0x9de: V740 = CALLER
0x9df: V741 = EQ V740 V739
0x9e0: V742 = 0x108
0x9e3: THROWI V741
---
Entry stack: [V725]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x9e4
[0x9e4:0xa08]
---
Predecessors: [0x9c5]
Successors: [0xa09]
---
0x9e4 PUSH1 0x0
0x9e6 DUP1
0x9e7 REVERT
0x9e8 JUMPDEST
0x9e9 PUSH1 0x0
0x9eb SLOAD
0x9ec PUSH1 0x1
0x9ee PUSH1 0xa0
0x9f0 PUSH1 0x2
0x9f2 EXP
0x9f3 SUB
0x9f4 AND
0x9f5 SELFDESTRUCT
0x9f6 JUMPDEST
0x9f7 PUSH1 0x0
0x9f9 SLOAD
0x9fa PUSH1 0x1
0x9fc PUSH1 0xa0
0x9fe PUSH1 0x2
0xa00 EXP
0xa01 SUB
0xa02 AND
0xa03 CALLER
0xa04 EQ
0xa05 PUSH2 0x12d
0xa08 JUMPI
---
0x9e4: V743 = 0x0
0x9e7: REVERT 0x0 0x0
0x9e8: JUMPDEST 
0x9e9: V744 = 0x0
0x9eb: V745 = S[0x0]
0x9ec: V746 = 0x1
0x9ee: V747 = 0xa0
0x9f0: V748 = 0x2
0x9f2: V749 = EXP 0x2 0xa0
0x9f3: V750 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9f4: V751 = AND 0xffffffffffffffffffffffffffffffffffffffff V745
0x9f5: SELFDESTRUCT V751
0x9f6: JUMPDEST 
0x9f7: V752 = 0x0
0x9f9: V753 = S[0x0]
0x9fa: V754 = 0x1
0x9fc: V755 = 0xa0
0x9fe: V756 = 0x2
0xa00: V757 = EXP 0x2 0xa0
0xa01: V758 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa02: V759 = AND 0xffffffffffffffffffffffffffffffffffffffff V753
0xa03: V760 = CALLER
0xa04: V761 = EQ V760 V759
0xa05: V762 = 0x12d
0xa08: THROWI V761
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa09
[0xa09:0xa74]
---
Predecessors: [0x9e4]
Successors: [0xa75]
---
0xa09 PUSH1 0x0
0xa0b DUP1
0xa0c REVERT
0xa0d JUMPDEST
0xa0e PUSH1 0x1
0xa10 PUSH1 0x0
0xa12 SWAP1
0xa13 SLOAD
0xa14 SWAP1
0xa15 PUSH2 0x100
0xa18 EXP
0xa19 SWAP1
0xa1a DIV
0xa1b PUSH1 0x1
0xa1d PUSH1 0xa0
0xa1f PUSH1 0x2
0xa21 EXP
0xa22 SUB
0xa23 AND
0xa24 PUSH1 0x1
0xa26 PUSH1 0xa0
0xa28 PUSH1 0x2
0xa2a EXP
0xa2b SUB
0xa2c AND
0xa2d PUSH4 0x3ccfd60b
0xa32 PUSH1 0x40
0xa34 MLOAD
0xa35 DUP2
0xa36 PUSH4 0xffffffff
0xa3b AND
0xa3c PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xa5a MUL
0xa5b DUP2
0xa5c MSTORE
0xa5d PUSH1 0x4
0xa5f ADD
0xa60 PUSH1 0x0
0xa62 PUSH1 0x40
0xa64 MLOAD
0xa65 DUP1
0xa66 DUP4
0xa67 SUB
0xa68 DUP2
0xa69 PUSH1 0x0
0xa6b DUP8
0xa6c DUP1
0xa6d EXTCODESIZE
0xa6e ISZERO
0xa6f DUP1
0xa70 ISZERO
0xa71 PUSH2 0x199
0xa74 JUMPI
---
0xa09: V763 = 0x0
0xa0c: REVERT 0x0 0x0
0xa0d: JUMPDEST 
0xa0e: V764 = 0x1
0xa10: V765 = 0x0
0xa13: V766 = S[0x1]
0xa15: V767 = 0x100
0xa18: V768 = EXP 0x100 0x0
0xa1a: V769 = DIV V766 0x1
0xa1b: V770 = 0x1
0xa1d: V771 = 0xa0
0xa1f: V772 = 0x2
0xa21: V773 = EXP 0x2 0xa0
0xa22: V774 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa23: V775 = AND 0xffffffffffffffffffffffffffffffffffffffff V769
0xa24: V776 = 0x1
0xa26: V777 = 0xa0
0xa28: V778 = 0x2
0xa2a: V779 = EXP 0x2 0xa0
0xa2b: V780 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa2c: V781 = AND 0xffffffffffffffffffffffffffffffffffffffff V775
0xa2d: V782 = 0x3ccfd60b
0xa32: V783 = 0x40
0xa34: V784 = M[0x40]
0xa36: V785 = 0xffffffff
0xa3b: V786 = AND 0xffffffff 0x3ccfd60b
0xa3c: V787 = 0x100000000000000000000000000000000000000000000000000000000
0xa5a: V788 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x3ccfd60b
0xa5c: M[V784] = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0xa5d: V789 = 0x4
0xa5f: V790 = ADD 0x4 V784
0xa60: V791 = 0x0
0xa62: V792 = 0x40
0xa64: V793 = M[0x40]
0xa67: V794 = SUB V790 V793
0xa69: V795 = 0x0
0xa6d: V796 = EXTCODESIZE V781
0xa6e: V797 = ISZERO V796
0xa70: V798 = ISZERO V797
0xa71: V799 = 0x199
0xa74: THROWI V798
---
Entry stack: []
Stack pops: 0
Stack additions: [V797, V781, 0x0, V793, V794, V793, 0x0, V790, 0x3ccfd60b, V781]
Exit stack: []

================================

Block 0xa75
[0xa75:0xa83]
---
Predecessors: [0xa09]
Successors: [0xa84]
---
0xa75 PUSH1 0x0
0xa77 DUP1
0xa78 REVERT
0xa79 JUMPDEST
0xa7a POP
0xa7b GAS
0xa7c CALL
0xa7d ISZERO
0xa7e DUP1
0xa7f ISZERO
0xa80 PUSH2 0x1ad
0xa83 JUMPI
---
0xa75: V800 = 0x0
0xa78: REVERT 0x0 0x0
0xa79: JUMPDEST 
0xa7b: V801 = GAS
0xa7c: V802 = CALL V801 S1 S2 S3 S4 S5 S6
0xa7d: V803 = ISZERO V802
0xa7f: V804 = ISZERO V803
0xa80: V805 = 0x1ad
0xa83: THROWI V804
---
Entry stack: [V781, 0x3ccfd60b, V790, 0x0, V793, V794, V793, 0x0, V781, V797]
Stack pops: 0
Stack additions: [V803]
Exit stack: []

================================

Block 0xa84
[0xa84:0xa9d]
---
Predecessors: [0xa75]
Successors: [0xa9e]
---
0xa84 RETURNDATASIZE
0xa85 PUSH1 0x0
0xa87 DUP1
0xa88 RETURNDATACOPY
0xa89 RETURNDATASIZE
0xa8a PUSH1 0x0
0xa8c REVERT
0xa8d JUMPDEST
0xa8e POP
0xa8f POP
0xa90 POP
0xa91 POP
0xa92 JUMP
0xa93 STOP
0xa94 LOG1
0xa95 PUSH6 0x627a7a723058
0xa9c SHA3
0xa9d DUP16
---
0xa84: V806 = RETURNDATASIZE
0xa85: V807 = 0x0
0xa88: RETURNDATACOPY 0x0 0x0 V806
0xa89: V808 = RETURNDATASIZE
0xa8a: V809 = 0x0
0xa8c: REVERT 0x0 V808
0xa8d: JUMPDEST 
0xa92: JUMP S4
0xa93: STOP 
0xa94: LOG S0 S1 S2
0xa95: V810 = 0x627a7a723058
0xa9c: V811 = SHA3 0x627a7a723058 S3
---
Entry stack: [V803]
Stack pops: 0
Stack additions: [S18, V811, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18]
Exit stack: []

================================

Block 0xa9e
[0xa9e:0xac9]
---
Predecessors: [0xa84]
Successors: [0xaca]
---
0xa9e JUMPDEST
0xa9f OR
0xaa0 MLOAD
0xaa1 SWAP4
0xaa2 MISSING 0xdf
0xaa3 PUSH8 0x51a3f9b7ba96bae9
0xaac MISSING 0xdc
0xaad CODESIZE
0xaae SWAP4
0xaaf MISSING 0xcc
0xab0 ISZERO
0xab1 MISSING 0xd3
0xab2 MISSING 0xb5
0xab3 MISSING 0xda
0xab4 EQ
0xab5 MISSING 0xa7
0xab6 MISSING 0xcd
0xab7 LOG2
0xab8 MISSING 0xf
0xab9 MISSING 0xbe
0xaba SWAP12
0xabb SSTORE
0xabc MISSING 0xd3
0xabd STOP
0xabe MISSING 0x29
0xabf PUSH1 0x80
0xac1 PUSH1 0x40
0xac3 MSTORE
0xac4 CALLVALUE
0xac5 DUP1
0xac6 ISZERO
0xac7 PUSH1 0xf
0xac9 JUMPI
---
0xa9e: JUMPDEST 
0xa9f: V812 = OR S0 V811
0xaa0: V813 = M[V812]
0xaa2: MISSING 0xdf
0xaa3: V814 = 0x51a3f9b7ba96bae9
0xaac: MISSING 0xdc
0xaad: V815 = CODESIZE
0xaaf: MISSING 0xcc
0xab0: V816 = ISZERO S0
0xab1: MISSING 0xd3
0xab2: MISSING 0xb5
0xab3: MISSING 0xda
0xab4: V817 = EQ S0 S1
0xab5: MISSING 0xa7
0xab6: MISSING 0xcd
0xab7: LOG S0 S1 S2 S3
0xab8: MISSING 0xf
0xab9: MISSING 0xbe
0xabb: S[S12] = S1
0xabc: MISSING 0xd3
0xabd: STOP 
0xabe: MISSING 0x29
0xabf: V818 = 0x80
0xac1: V819 = 0x40
0xac3: M[0x40] = 0x80
0xac4: V820 = CALLVALUE
0xac6: V821 = ISZERO V820
0xac7: V822 = 0xf
0xac9: THROWI V821
---
Entry stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V811, S0]
Stack pops: 20884
Stack additions: [V820]
Exit stack: []

================================

Block 0xaca
[0xaca:0xaf3]
---
Predecessors: [0xa9e]
Successors: [0xaf4]
---
0xaca PUSH1 0x0
0xacc DUP1
0xacd REVERT
0xace JUMPDEST
0xacf POP
0xad0 PUSH1 0x35
0xad2 DUP1
0xad3 PUSH1 0x1d
0xad5 PUSH1 0x0
0xad7 CODECOPY
0xad8 PUSH1 0x0
0xada RETURN
0xadb STOP
0xadc PUSH1 0x80
0xade PUSH1 0x40
0xae0 MSTORE
0xae1 PUSH1 0x0
0xae3 DUP1
0xae4 REVERT
0xae5 STOP
0xae6 LOG1
0xae7 PUSH6 0x627a7a723058
0xaee SHA3
0xaef RETURNDATACOPY
0xaf0 GASPRICE
0xaf1 MISSING 0xc4
0xaf2 SWAP11
0xaf3 GASLIMIT
---
0xaca: V823 = 0x0
0xacd: REVERT 0x0 0x0
0xace: JUMPDEST 
0xad0: V824 = 0x35
0xad3: V825 = 0x1d
0xad5: V826 = 0x0
0xad7: CODECOPY 0x0 0x1d 0x35
0xad8: V827 = 0x0
0xada: RETURN 0x0 0x35
0xadb: STOP 
0xadc: V828 = 0x80
0xade: V829 = 0x40
0xae0: M[0x40] = 0x80
0xae1: V830 = 0x0
0xae4: REVERT 0x0 0x0
0xae5: STOP 
0xae6: LOG S0 S1 S2
0xae7: V831 = 0x627a7a723058
0xaee: V832 = SHA3 0x627a7a723058 S3
0xaef: RETURNDATACOPY V832 S4 S5
0xaf0: V833 = GASPRICE
0xaf1: MISSING 0xc4
0xaf3: V834 = GASLIMIT
---
Entry stack: [V820]
Stack pops: 0
Stack additions: [V833, V834, S11, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S0]
Exit stack: []

================================

Block 0xaf4
[0xaf4:0xb3b]
---
Predecessors: [0xaca]
Successors: []
---
0xaf4 JUMPDEST
0xaf5 MISSING 0xeb
0xaf6 MISSING 0xc7
0xaf7 STATICCALL
0xaf8 MLOAD
0xaf9 PUSH27 0xe39cbef9a1a9e0f51fdbf7e912664924ad740875790029a165627a
0xb15 PUSH27 0x7230582095c81c3812e73f442209de1cfdc6756337607452a874c4
0xb31 DIFFICULTY
0xb32 RETURN
0xb33 ADD
0xb34 SHL
0xb35 MISSING 0x29
0xb36 DUP4
0xb37 MISSING 0xac
0xb38 CREATE2
0xb39 MISSING 0xcd
0xb3a STOP
0xb3b MISSING 0x29
---
0xaf4: JUMPDEST 
0xaf5: MISSING 0xeb
0xaf6: MISSING 0xc7
0xaf7: V835 = STATICCALL S0 S1 S2 S3 S4 S5
0xaf8: V836 = M[V835]
0xaf9: V837 = 0xe39cbef9a1a9e0f51fdbf7e912664924ad740875790029a165627a
0xb15: V838 = 0x7230582095c81c3812e73f442209de1cfdc6756337607452a874c4
0xb31: V839 = DIFFICULTY
0xb32: RETURN V839 0x7230582095c81c3812e73f442209de1cfdc6756337607452a874c4
0xb33: V840 = ADD S0 S1
0xb34: V841 = SHL V840 S2
0xb35: MISSING 0x29
0xb37: MISSING 0xac
0xb38: V842 = CREATE2 S0 S1 S2 S3
0xb39: MISSING 0xcd
0xb3a: STOP 
0xb3b: MISSING 0x29
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V834]
Stack pops: 0
Stack additions: [0xe39cbef9a1a9e0f51fdbf7e912664924ad740875790029a165627a, V836, V841, S3, S0, S1, S2, S3, V842]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0x66
Exit block: 0x7b
Body: 0x66, 0x6e, 0x72, 0x7b, 0xe3, 0xf6, 0xfa, 0x12b, 0x134

Function 1:
Public function signature: 0x83197ef0
Entry block: 0x7d
Exit block: 0x14e
Body: 0x7d, 0x85, 0x89, 0x137, 0x14a, 0x14e

Function 2:
Public function signature: 0xbdf3390e
Entry block: 0x92
Exit block: 0xa7
Body: 0x92, 0x9a, 0x9e, 0xa7

Function 3:
Public function signature: 0xc2381296
Entry block: 0xce
Exit block: 0x79b
Body: 0x7b, 0xce, 0xd6, 0xda, 0x6d5, 0x6ef, 0x6f3, 0x6fb, 0x718, 0x721, 0x726, 0x729, 0x732, 0x73d, 0x788, 0x79b, 0x7a4, 0x7ab, 0x7dc, 0x7ef, 0x7f8, 0x7fb, 0x803, 0x813

Function 4:
Public fallback function
Entry block: 0x61
Exit block: 0x61
Body: 0x61

Function 5:
Private function
Entry block: 0x15c
Exit block: 0x6c4
Body: 0x15c, 0x188, 0x23c, 0x245, 0x25b, 0x2ea, 0x2fe, 0x314, 0x31d, 0x325, 0x377, 0x380, 0x396, 0x3cc, 0x420, 0x429, 0x43f, 0x475, 0x4ac, 0x4b5, 0x4cb, 0x53e, 0x5f8, 0x601, 0x617, 0x65b, 0x6bf, 0x6c4

