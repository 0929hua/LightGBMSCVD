Block 0x0
[0x0:0x17]
---
Predecessors: []
Successors: [0x18, 0x2e]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0xe0
0x7 PUSH1 0x2
0x9 EXP
0xa PUSH1 0x0
0xc CALLDATALOAD
0xd DIV
0xe PUSH4 0x2e1a7d4d
0x13 DUP2
0x14 EQ
0x15 PUSH1 0x2e
0x17 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0xe0
0x7: V3 = 0x2
0x9: V4 = EXP 0x2 0xe0
0xa: V5 = 0x0
0xc: V6 = CALLDATALOAD 0x0
0xd: V7 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0xe: V8 = 0x2e1a7d4d
0x14: V9 = EQ V7 0x2e1a7d4d
0x15: V10 = 0x2e
0x17: JUMPI 0x2e V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x18
[0x18:0x21]
---
Predecessors: [0x0]
Successors: [0x22, 0x61]
---
0x18 DUP1
0x19 PUSH4 0xa7f43779
0x1e EQ
0x1f PUSH1 0x61
0x21 JUMPI
---
0x19: V11 = 0xa7f43779
0x1e: V12 = EQ 0xa7f43779 V7
0x1f: V13 = 0x61
0x21: JUMPI 0x61 V12
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x22
[0x22:0x2b]
---
Predecessors: [0x18]
Successors: [0x2c, 0x89]
---
0x22 DUP1
0x23 PUSH4 0xd0e30db0
0x28 EQ
0x29 PUSH1 0x89
0x2b JUMPI
---
0x23: V14 = 0xd0e30db0
0x28: V15 = EQ 0xd0e30db0 V7
0x29: V16 = 0x89
0x2b: JUMPI 0x89 V15
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x2c
[0x2c:0x2d]
---
Predecessors: [0x22, 0xaa, 0xd6]
Successors: []
---
0x2c JUMPDEST
0x2d STOP
---
0x2c: JUMPDEST 
0x2d: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x2e
[0x2e:0x53]
---
Predecessors: [0x0]
Successors: [0x54, 0x59]
---
0x2e JUMPDEST
0x2f PUSH1 0x2c
0x31 PUSH1 0x4
0x33 CALLDATALOAD
0x34 PUSH1 0x1
0x36 PUSH1 0xa0
0x38 PUSH1 0x2
0x3a EXP
0x3b SUB
0x3c CALLER
0x3d AND
0x3e PUSH1 0x0
0x40 SWAP1
0x41 DUP2
0x42 MSTORE
0x43 PUSH1 0x1
0x45 PUSH1 0x20
0x47 MSTORE
0x48 PUSH1 0x40
0x4a SWAP1
0x4b SHA3
0x4c SLOAD
0x4d DUP2
0x4e SWAP1
0x4f LT
0x50 DUP1
0x51 PUSH1 0x59
0x53 JUMPI
---
0x2e: JUMPDEST 
0x2f: V17 = 0x2c
0x31: V18 = 0x4
0x33: V19 = CALLDATALOAD 0x4
0x34: V20 = 0x1
0x36: V21 = 0xa0
0x38: V22 = 0x2
0x3a: V23 = EXP 0x2 0xa0
0x3b: V24 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c: V25 = CALLER
0x3d: V26 = AND V25 0xffffffffffffffffffffffffffffffffffffffff
0x3e: V27 = 0x0
0x42: M[0x0] = V26
0x43: V28 = 0x1
0x45: V29 = 0x20
0x47: M[0x20] = 0x1
0x48: V30 = 0x40
0x4b: V31 = SHA3 0x0 0x40
0x4c: V32 = S[V31]
0x4f: V33 = LT V32 V19
0x51: V34 = 0x59
0x53: JUMPI 0x59 V33
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x2c, V19, V33]
Exit stack: [V7, 0x2c, V19, V33]

================================

Block 0x54
[0x54:0x58]
---
Predecessors: [0x2e]
Successors: [0x59]
---
0x54 POP
0x55 DUP1
0x56 PUSH1 0x0
0x58 EQ
---
0x56: V35 = 0x0
0x58: V36 = EQ 0x0 V19
---
Entry stack: [V7, 0x2c, V19, V33]
Stack pops: 2
Stack additions: [S1, V36]
Exit stack: [V7, 0x2c, V19, V36]

================================

Block 0x59
[0x59:0x5d]
---
Predecessors: [0x2e, 0x54]
Successors: [0x5e, 0xac]
---
0x59 JUMPDEST
0x5a ISZERO
0x5b PUSH1 0xac
0x5d JUMPI
---
0x59: JUMPDEST 
0x5a: V37 = ISZERO S0
0x5b: V38 = 0xac
0x5d: JUMPI 0xac V37
---
Entry stack: [V7, 0x2c, V19, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0x2c, V19]

================================

Block 0x5e
[0x5e:0x60]
---
Predecessors: [0x59]
Successors: [0xd6]
---
0x5e PUSH1 0xd6
0x60 JUMP
---
0x5e: V39 = 0xd6
0x60: JUMP 0xd6
---
Entry stack: [V7, 0x2c, V19]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x2c, V19]

================================

Block 0x61
[0x61:0x7b]
---
Predecessors: [0x18]
Successors: [0x7c, 0xaa]
---
0x61 JUMPDEST
0x62 PUSH1 0x2c
0x64 PUSH1 0x0
0x66 SLOAD
0x67 PUSH1 0x1
0x69 PUSH1 0xa0
0x6b PUSH1 0x2
0x6d EXP
0x6e SUB
0x6f SWAP1
0x70 DUP2
0x71 AND
0x72 CALLER
0x73 SWAP2
0x74 SWAP1
0x75 SWAP2
0x76 AND
0x77 EQ
0x78 ISZERO
0x79 PUSH1 0xaa
0x7b JUMPI
---
0x61: JUMPDEST 
0x62: V40 = 0x2c
0x64: V41 = 0x0
0x66: V42 = S[0x0]
0x67: V43 = 0x1
0x69: V44 = 0xa0
0x6b: V45 = 0x2
0x6d: V46 = EXP 0x2 0xa0
0x6e: V47 = SUB 0x10000000000000000000000000000000000000000 0x1
0x71: V48 = AND 0xffffffffffffffffffffffffffffffffffffffff V42
0x72: V49 = CALLER
0x76: V50 = AND V49 0xffffffffffffffffffffffffffffffffffffffff
0x77: V51 = EQ V50 V48
0x78: V52 = ISZERO V51
0x79: V53 = 0xaa
0x7b: JUMPI 0xaa V52
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x2c]
Exit stack: [V7, 0x2c]

================================

Block 0x7c
[0x7c:0x88]
---
Predecessors: [0x61]
Successors: []
---
0x7c PUSH1 0x0
0x7e SLOAD
0x7f PUSH1 0x1
0x81 PUSH1 0xa0
0x83 PUSH1 0x2
0x85 EXP
0x86 SUB
0x87 AND
0x88 SELFDESTRUCT
---
0x7c: V54 = 0x0
0x7e: V55 = S[0x0]
0x7f: V56 = 0x1
0x81: V57 = 0xa0
0x83: V58 = 0x2
0x85: V59 = EXP 0x2 0xa0
0x86: V60 = SUB 0x10000000000000000000000000000000000000000 0x1
0x87: V61 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0x88: SELFDESTRUCT V61
---
Entry stack: [V7, 0x2c]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x2c]

================================

Block 0x89
[0x89:0xa9]
---
Predecessors: [0x22]
Successors: [0xaa]
---
0x89 JUMPDEST
0x8a PUSH1 0x2c
0x8c PUSH1 0x1
0x8e PUSH1 0xa0
0x90 PUSH1 0x2
0x92 EXP
0x93 SUB
0x94 CALLER
0x95 AND
0x96 PUSH1 0x0
0x98 SWAP1
0x99 DUP2
0x9a MSTORE
0x9b PUSH1 0x1
0x9d PUSH1 0x20
0x9f MSTORE
0xa0 PUSH1 0x40
0xa2 SWAP1
0xa3 SHA3
0xa4 DUP1
0xa5 SLOAD
0xa6 CALLVALUE
0xa7 ADD
0xa8 SWAP1
0xa9 SSTORE
---
0x89: JUMPDEST 
0x8a: V62 = 0x2c
0x8c: V63 = 0x1
0x8e: V64 = 0xa0
0x90: V65 = 0x2
0x92: V66 = EXP 0x2 0xa0
0x93: V67 = SUB 0x10000000000000000000000000000000000000000 0x1
0x94: V68 = CALLER
0x95: V69 = AND V68 0xffffffffffffffffffffffffffffffffffffffff
0x96: V70 = 0x0
0x9a: M[0x0] = V69
0x9b: V71 = 0x1
0x9d: V72 = 0x20
0x9f: M[0x20] = 0x1
0xa0: V73 = 0x40
0xa3: V74 = SHA3 0x0 0x40
0xa5: V75 = S[V74]
0xa6: V76 = CALLVALUE
0xa7: V77 = ADD V76 V75
0xa9: S[V74] = V77
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x2c]
Exit stack: [V7, 0x2c]

================================

Block 0xaa
[0xaa:0xab]
---
Predecessors: [0x61, 0x89]
Successors: [0x2c]
---
0xaa JUMPDEST
0xab JUMP
---
0xaa: JUMPDEST 
0xab: JUMP 0x2c
---
Entry stack: [V7, 0x2c]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Block 0xac
[0xac:0xd5]
---
Predecessors: [0x59]
Successors: [0xd6]
---
0xac JUMPDEST
0xad PUSH1 0x40
0xaf PUSH1 0x0
0xb1 SWAP1
0xb2 DUP2
0xb3 SHA3
0xb4 DUP1
0xb5 SLOAD
0xb6 DUP4
0xb7 SWAP1
0xb8 SUB
0xb9 SWAP1
0xba SSTORE
0xbb PUSH1 0x1
0xbd PUSH1 0xa0
0xbf PUSH1 0x2
0xc1 EXP
0xc2 SUB
0xc3 CALLER
0xc4 AND
0xc5 SWAP1
0xc6 DUP3
0xc7 PUSH1 0x60
0xc9 DUP3
0xca DUP2
0xcb DUP2
0xcc DUP2
0xcd DUP6
0xce DUP9
0xcf DUP4
0xd0 CALL
0xd1 POP
0xd2 POP
0xd3 POP
0xd4 POP
0xd5 POP
---
0xac: JUMPDEST 
0xad: V78 = 0x40
0xaf: V79 = 0x0
0xb3: V80 = SHA3 0x0 0x40
0xb5: V81 = S[V80]
0xb8: V82 = SUB V81 V19
0xba: S[V80] = V82
0xbb: V83 = 0x1
0xbd: V84 = 0xa0
0xbf: V85 = 0x2
0xc1: V86 = EXP 0x2 0xa0
0xc2: V87 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc3: V88 = CALLER
0xc4: V89 = AND V88 0xffffffffffffffffffffffffffffffffffffffff
0xc7: V90 = 0x60
0xd0: V91 = CALL 0x0 V89 V19 0x60 0x0 0x60 0x0
---
Entry stack: [V7, 0x2c, V19]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7, 0x2c, V19]

================================

Block 0xd6
[0xd6:0xd8]
---
Predecessors: [0x5e, 0xac]
Successors: [0x2c]
---
0xd6 JUMPDEST
0xd7 POP
0xd8 JUMP
---
0xd6: JUMPDEST 
0xd8: JUMP 0x2c
---
Entry stack: [V7, 0x2c, V19]
Stack pops: 2
Stack additions: []
Exit stack: [V7]

================================

Function 0:
Public function signature: 0x2e1a7d4d
Entry block: 0x2e
Exit block: 0x2c
Body: 0x2c, 0x2e, 0x54, 0x59, 0x5e, 0xac, 0xd6

Function 1:
Public function signature: 0xa7f43779
Entry block: 0x61
Exit block: 0x2c
Body: 0x2c, 0x61

Function 2:
Public function signature: 0xd0e30db0
Entry block: 0x89
Exit block: 0x2c
Body: 0x2c, 0x89

Function 3:
Public fallback function
Entry block: 0x2c
Exit block: 0x2c
Body: 0x2c

