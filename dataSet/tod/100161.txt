Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x61]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x61
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x61
0xc: JUMPI 0x61 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x66]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0xde96dff
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x66
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0xde96dff
0x3b: V13 = EQ V11 0xde96dff
0x3c: V14 = 0x66
0x3f: JUMPI 0x66 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x82]
---
0x40 DUP1
0x41 PUSH4 0x9cb8a26a
0x46 EQ
0x47 PUSH2 0x82
0x4a JUMPI
---
0x41: V15 = 0x9cb8a26a
0x46: V16 = EQ 0x9cb8a26a V11
0x47: V17 = 0x82
0x4a: JUMPI 0x82 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x8a]
---
0x4b DUP1
0x4c PUSH4 0xc71daccb
0x51 EQ
0x52 PUSH2 0x8a
0x55 JUMPI
---
0x4c: V18 = 0xc71daccb
0x51: V19 = EQ 0xc71daccb V11
0x52: V20 = 0x8a
0x55: JUMPI 0x8a V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xb1]
---
0x56 DUP1
0x57 PUSH4 0xd0e30db0
0x5c EQ
0x5d PUSH2 0xb1
0x60 JUMPI
---
0x57: V21 = 0xd0e30db0
0x5c: V22 = EQ 0xd0e30db0 V11
0x5d: V23 = 0xb1
0x60: JUMPI 0xb1 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x65]
---
Predecessors: [0x0, 0x56]
Successors: []
---
0x61 JUMPDEST
0x62 PUSH1 0x0
0x64 DUP1
0x65 REVERT
---
0x61: JUMPDEST 
0x62: V24 = 0x0
0x65: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x66
[0x66:0x6d]
---
Predecessors: [0xd]
Successors: [0xb9]
---
0x66 JUMPDEST
0x67 PUSH2 0x6e
0x6a PUSH2 0xb9
0x6d JUMP
---
0x66: JUMPDEST 
0x67: V25 = 0x6e
0x6a: V26 = 0xb9
0x6d: JUMP 0xb9
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6e]
Exit stack: [V11, 0x6e]

================================

Block 0x6e
[0x6e:0x81]
---
Predecessors: [0x154, 0x23a]
Successors: []
---
0x6e JUMPDEST
0x6f PUSH1 0x40
0x71 DUP1
0x72 MLOAD
0x73 SWAP2
0x74 ISZERO
0x75 ISZERO
0x76 DUP3
0x77 MSTORE
0x78 MLOAD
0x79 SWAP1
0x7a DUP2
0x7b SWAP1
0x7c SUB
0x7d PUSH1 0x20
0x7f ADD
0x80 SWAP1
0x81 RETURN
---
0x6e: JUMPDEST 
0x6f: V27 = 0x40
0x72: V28 = M[0x40]
0x74: V29 = ISZERO 0x1
0x75: V30 = ISZERO 0x0
0x77: M[V28] = 0x1
0x78: V31 = M[0x40]
0x7c: V32 = SUB V28 V31
0x7d: V33 = 0x20
0x7f: V34 = ADD 0x20 V32
0x81: RETURN V31 V34
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x82
[0x82:0x89]
---
Predecessors: [0x40]
Successors: [0x16e]
---
0x82 JUMPDEST
0x83 PUSH2 0x6e
0x86 PUSH2 0x16e
0x89 JUMP
---
0x82: JUMPDEST 
0x83: V35 = 0x6e
0x86: V36 = 0x16e
0x89: JUMP 0x16e
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6e]
Exit stack: [V11, 0x6e]

================================

Block 0x8a
[0x8a:0x91]
---
Predecessors: [0x4b]
Successors: [0x92, 0x96]
---
0x8a JUMPDEST
0x8b CALLVALUE
0x8c DUP1
0x8d ISZERO
0x8e PUSH2 0x96
0x91 JUMPI
---
0x8a: JUMPDEST 
0x8b: V37 = CALLVALUE
0x8d: V38 = ISZERO V37
0x8e: V39 = 0x96
0x91: JUMPI 0x96 V38
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V37]
Exit stack: [V11, V37]

================================

Block 0x92
[0x92:0x95]
---
Predecessors: [0x8a]
Successors: []
---
0x92 PUSH1 0x0
0x94 DUP1
0x95 REVERT
---
0x92: V40 = 0x0
0x95: REVERT 0x0 0x0
---
Entry stack: [V11, V37]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V37]

================================

Block 0x96
[0x96:0x9e]
---
Predecessors: [0x8a]
Successors: [0x219]
---
0x96 JUMPDEST
0x97 POP
0x98 PUSH2 0x9f
0x9b PUSH2 0x219
0x9e JUMP
---
0x96: JUMPDEST 
0x98: V41 = 0x9f
0x9b: V42 = 0x219
0x9e: JUMP 0x219
---
Entry stack: [V11, V37]
Stack pops: 1
Stack additions: [0x9f]
Exit stack: [V11, 0x9f]

================================

Block 0x9f
[0x9f:0xb0]
---
Predecessors: [0x219]
Successors: []
---
0x9f JUMPDEST
0xa0 PUSH1 0x40
0xa2 DUP1
0xa3 MLOAD
0xa4 SWAP2
0xa5 DUP3
0xa6 MSTORE
0xa7 MLOAD
0xa8 SWAP1
0xa9 DUP2
0xaa SWAP1
0xab SUB
0xac PUSH1 0x20
0xae ADD
0xaf SWAP1
0xb0 RETURN
---
0x9f: JUMPDEST 
0xa0: V43 = 0x40
0xa3: V44 = M[0x40]
0xa6: M[V44] = V133
0xa7: V45 = M[0x40]
0xab: V46 = SUB V44 V45
0xac: V47 = 0x20
0xae: V48 = ADD 0x20 V46
0xb0: RETURN V45 V48
---
Entry stack: [V11, V133]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xb1
[0xb1:0xb8]
---
Predecessors: [0x56]
Successors: [0x22c]
---
0xb1 JUMPDEST
0xb2 PUSH2 0x6e
0xb5 PUSH2 0x22c
0xb8 JUMP
---
0xb1: JUMPDEST 
0xb2: V49 = 0x6e
0xb5: V50 = 0x22c
0xb8: JUMP 0x22c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6e]
Exit stack: [V11, 0x6e]

================================

Block 0xb9
[0xb9:0xcf]
---
Predecessors: [0x66]
Successors: [0xd0, 0xd4]
---
0xb9 JUMPDEST
0xba CALLER
0xbb PUSH1 0x0
0xbd SWAP1
0xbe DUP2
0xbf MSTORE
0xc0 PUSH1 0x1
0xc2 PUSH1 0x20
0xc4 MSTORE
0xc5 PUSH1 0x40
0xc7 DUP2
0xc8 SHA3
0xc9 SLOAD
0xca DUP2
0xcb LT
0xcc PUSH2 0xd4
0xcf JUMPI
---
0xb9: JUMPDEST 
0xba: V51 = CALLER
0xbb: V52 = 0x0
0xbf: M[0x0] = V51
0xc0: V53 = 0x1
0xc2: V54 = 0x20
0xc4: M[0x20] = 0x1
0xc5: V55 = 0x40
0xc8: V56 = SHA3 0x0 0x40
0xc9: V57 = S[V56]
0xcb: V58 = LT 0x0 V57
0xcc: V59 = 0xd4
0xcf: JUMPI 0xd4 V58
---
Entry stack: [V11, 0x6e]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x6e, 0x0]

================================

Block 0xd0
[0xd0:0xd3]
---
Predecessors: [0xb9]
Successors: []
---
0xd0 PUSH1 0x0
0xd2 DUP1
0xd3 REVERT
---
0xd0: V60 = 0x0
0xd3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6e, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6e, 0x0]

================================

Block 0xd4
[0xd4:0x14a]
---
Predecessors: [0xb9]
Successors: [0x14b, 0x154]
---
0xd4 JUMPDEST
0xd5 CALLER
0xd6 PUSH1 0x0
0xd8 DUP2
0xd9 DUP2
0xda MSTORE
0xdb PUSH1 0x1
0xdd PUSH1 0x20
0xdf SWAP1
0xe0 DUP2
0xe1 MSTORE
0xe2 PUSH1 0x40
0xe4 SWAP2
0xe5 DUP3
0xe6 SWAP1
0xe7 SHA3
0xe8 SLOAD
0xe9 DUP3
0xea MLOAD
0xeb SWAP4
0xec DUP5
0xed MSTORE
0xee SWAP1
0xef DUP4
0xf0 ADD
0xf1 MSTORE
0xf2 DUP1
0xf3 MLOAD
0xf4 PUSH32 0xdd81098bbc043431d4a440ca8823673fd1129893ab79f9838df4cf3d5e381259
0x115 SWAP3
0x116 DUP2
0x117 SWAP1
0x118 SUB
0x119 SWAP1
0x11a SWAP2
0x11b ADD
0x11c SWAP1
0x11d LOG1
0x11e CALLER
0x11f PUSH1 0x0
0x121 DUP2
0x122 DUP2
0x123 MSTORE
0x124 PUSH1 0x1
0x126 PUSH1 0x20
0x128 MSTORE
0x129 PUSH1 0x40
0x12b DUP1
0x12c DUP3
0x12d SHA3
0x12e SLOAD
0x12f SWAP1
0x130 MLOAD
0x131 DUP2
0x132 ISZERO
0x133 PUSH2 0x8fc
0x136 MUL
0x137 SWAP3
0x138 DUP2
0x139 DUP2
0x13a DUP2
0x13b DUP6
0x13c DUP9
0x13d DUP9
0x13e CALL
0x13f SWAP4
0x140 POP
0x141 POP
0x142 POP
0x143 POP
0x144 ISZERO
0x145 DUP1
0x146 ISZERO
0x147 PUSH2 0x154
0x14a JUMPI
---
0xd4: JUMPDEST 
0xd5: V61 = CALLER
0xd6: V62 = 0x0
0xda: M[0x0] = V61
0xdb: V63 = 0x1
0xdd: V64 = 0x20
0xe1: M[0x20] = 0x1
0xe2: V65 = 0x40
0xe7: V66 = SHA3 0x0 0x40
0xe8: V67 = S[V66]
0xea: V68 = M[0x40]
0xed: M[V68] = V61
0xf0: V69 = ADD V68 0x20
0xf1: M[V69] = V67
0xf3: V70 = M[0x40]
0xf4: V71 = 0xdd81098bbc043431d4a440ca8823673fd1129893ab79f9838df4cf3d5e381259
0x118: V72 = SUB V68 V70
0x11b: V73 = ADD 0x40 V72
0x11d: LOG V70 V73 0xdd81098bbc043431d4a440ca8823673fd1129893ab79f9838df4cf3d5e381259
0x11e: V74 = CALLER
0x11f: V75 = 0x0
0x123: M[0x0] = V74
0x124: V76 = 0x1
0x126: V77 = 0x20
0x128: M[0x20] = 0x1
0x129: V78 = 0x40
0x12d: V79 = SHA3 0x0 0x40
0x12e: V80 = S[V79]
0x130: V81 = M[0x40]
0x132: V82 = ISZERO V80
0x133: V83 = 0x8fc
0x136: V84 = MUL 0x8fc V82
0x13e: V85 = CALL V84 V74 V80 V81 0x0 V81 0x0
0x144: V86 = ISZERO V85
0x146: V87 = ISZERO V86
0x147: V88 = 0x154
0x14a: JUMPI 0x154 V87
---
Entry stack: [V11, 0x6e, 0x0]
Stack pops: 0
Stack additions: [V86]
Exit stack: [V11, 0x6e, 0x0, V86]

================================

Block 0x14b
[0x14b:0x153]
---
Predecessors: [0xd4]
Successors: []
---
0x14b RETURNDATASIZE
0x14c PUSH1 0x0
0x14e DUP1
0x14f RETURNDATACOPY
0x150 RETURNDATASIZE
0x151 PUSH1 0x0
0x153 REVERT
---
0x14b: V89 = RETURNDATASIZE
0x14c: V90 = 0x0
0x14f: RETURNDATACOPY 0x0 0x0 V89
0x150: V91 = RETURNDATASIZE
0x151: V92 = 0x0
0x153: REVERT 0x0 V91
---
Entry stack: [V11, 0x6e, 0x0, V86]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6e, 0x0, V86]

================================

Block 0x154
[0x154:0x16d]
---
Predecessors: [0xd4]
Successors: [0x6e]
---
0x154 JUMPDEST
0x155 POP
0x156 POP
0x157 CALLER
0x158 PUSH1 0x0
0x15a SWAP1
0x15b DUP2
0x15c MSTORE
0x15d PUSH1 0x1
0x15f PUSH1 0x20
0x161 DUP2
0x162 SWAP1
0x163 MSTORE
0x164 PUSH1 0x40
0x166 DUP3
0x167 SHA3
0x168 SWAP2
0x169 SWAP1
0x16a SWAP2
0x16b SSTORE
0x16c SWAP1
0x16d JUMP
---
0x154: JUMPDEST 
0x157: V93 = CALLER
0x158: V94 = 0x0
0x15c: M[0x0] = V93
0x15d: V95 = 0x1
0x15f: V96 = 0x20
0x163: M[0x20] = 0x1
0x164: V97 = 0x40
0x167: V98 = SHA3 0x0 0x40
0x16b: S[V98] = 0x0
0x16d: JUMP 0x6e
---
Entry stack: [V11, 0x6e, 0x0, V86]
Stack pops: 3
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x16e
[0x16e:0x18e]
---
Predecessors: [0x82]
Successors: [0x18f, 0x193]
---
0x16e JUMPDEST
0x16f PUSH1 0x0
0x171 DUP1
0x172 SLOAD
0x173 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x188 AND
0x189 CALLER
0x18a EQ
0x18b PUSH2 0x193
0x18e JUMPI
---
0x16e: JUMPDEST 
0x16f: V99 = 0x0
0x172: V100 = S[0x0]
0x173: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x188: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x189: V103 = CALLER
0x18a: V104 = EQ V103 V102
0x18b: V105 = 0x193
0x18e: JUMPI 0x193 V104
---
Entry stack: [V11, 0x6e]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x6e, 0x0]

================================

Block 0x18f
[0x18f:0x192]
---
Predecessors: [0x16e]
Successors: []
---
0x18f PUSH1 0x0
0x191 DUP1
0x192 REVERT
---
0x18f: V106 = 0x0
0x192: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6e, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6e, 0x0]

================================

Block 0x193
[0x193:0x199]
---
Predecessors: [0x16e]
Successors: [0x19a, 0x19e]
---
0x193 JUMPDEST
0x194 CALLVALUE
0x195 ISZERO
0x196 PUSH2 0x19e
0x199 JUMPI
---
0x193: JUMPDEST 
0x194: V107 = CALLVALUE
0x195: V108 = ISZERO V107
0x196: V109 = 0x19e
0x199: JUMPI 0x19e V108
---
Entry stack: [V11, 0x6e, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6e, 0x0]

================================

Block 0x19a
[0x19a:0x19d]
---
Predecessors: [0x193]
Successors: []
---
0x19a PUSH1 0x0
0x19c DUP1
0x19d REVERT
---
0x19a: V110 = 0x0
0x19d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6e, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6e, 0x0]

================================

Block 0x19e
[0x19e:0x218]
---
Predecessors: [0x193]
Successors: []
---
0x19e JUMPDEST
0x19f PUSH1 0x40
0x1a1 DUP1
0x1a2 MLOAD
0x1a3 PUSH1 0x20
0x1a5 DUP1
0x1a6 DUP3
0x1a7 MSTORE
0x1a8 PUSH1 0x16
0x1aa SWAP1
0x1ab DUP3
0x1ac ADD
0x1ad MSTORE
0x1ae PUSH32 0x436f6e7472616374207761732064657374726f79656400000000000000000000
0x1cf DUP2
0x1d0 DUP4
0x1d1 ADD
0x1d2 MSTORE
0x1d3 SWAP1
0x1d4 MLOAD
0x1d5 PUSH32 0xbcd5eddaf3171311f9b2ac4eea88e837f955a328c3d0f86fb1f16e53aa11e180
0x1f6 SWAP2
0x1f7 DUP2
0x1f8 SWAP1
0x1f9 SUB
0x1fa PUSH1 0x60
0x1fc ADD
0x1fd SWAP1
0x1fe LOG1
0x1ff PUSH1 0x0
0x201 SLOAD
0x202 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x217 AND
0x218 SELFDESTRUCT
---
0x19e: JUMPDEST 
0x19f: V111 = 0x40
0x1a2: V112 = M[0x40]
0x1a3: V113 = 0x20
0x1a7: M[V112] = 0x20
0x1a8: V114 = 0x16
0x1ac: V115 = ADD V112 0x20
0x1ad: M[V115] = 0x16
0x1ae: V116 = 0x436f6e7472616374207761732064657374726f79656400000000000000000000
0x1d1: V117 = ADD 0x40 V112
0x1d2: M[V117] = 0x436f6e7472616374207761732064657374726f79656400000000000000000000
0x1d4: V118 = M[0x40]
0x1d5: V119 = 0xbcd5eddaf3171311f9b2ac4eea88e837f955a328c3d0f86fb1f16e53aa11e180
0x1f9: V120 = SUB V112 V118
0x1fa: V121 = 0x60
0x1fc: V122 = ADD 0x60 V120
0x1fe: LOG V118 V122 0xbcd5eddaf3171311f9b2ac4eea88e837f955a328c3d0f86fb1f16e53aa11e180
0x1ff: V123 = 0x0
0x201: V124 = S[0x0]
0x202: V125 = 0xffffffffffffffffffffffffffffffffffffffff
0x217: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V124
0x218: SELFDESTRUCT V126
---
Entry stack: [V11, 0x6e, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6e, 0x0]

================================

Block 0x219
[0x219:0x22b]
---
Predecessors: [0x96]
Successors: [0x9f]
---
0x219 JUMPDEST
0x21a CALLER
0x21b PUSH1 0x0
0x21d SWAP1
0x21e DUP2
0x21f MSTORE
0x220 PUSH1 0x1
0x222 PUSH1 0x20
0x224 MSTORE
0x225 PUSH1 0x40
0x227 SWAP1
0x228 SHA3
0x229 SLOAD
0x22a SWAP1
0x22b JUMP
---
0x219: JUMPDEST 
0x21a: V127 = CALLER
0x21b: V128 = 0x0
0x21f: M[0x0] = V127
0x220: V129 = 0x1
0x222: V130 = 0x20
0x224: M[0x20] = 0x1
0x225: V131 = 0x40
0x228: V132 = SHA3 0x0 0x40
0x229: V133 = S[V132]
0x22b: JUMP 0x9f
---
Entry stack: [V11, 0x9f]
Stack pops: 1
Stack additions: [V133]
Exit stack: [V11, V133]

================================

Block 0x22c
[0x22c:0x235]
---
Predecessors: [0xb1]
Successors: [0x236, 0x23a]
---
0x22c JUMPDEST
0x22d PUSH1 0x0
0x22f CALLVALUE
0x230 DUP2
0x231 LT
0x232 PUSH2 0x23a
0x235 JUMPI
---
0x22c: JUMPDEST 
0x22d: V134 = 0x0
0x22f: V135 = CALLVALUE
0x231: V136 = LT 0x0 V135
0x232: V137 = 0x23a
0x235: JUMPI 0x23a V136
---
Entry stack: [V11, 0x6e]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x6e, 0x0]

================================

Block 0x236
[0x236:0x239]
---
Predecessors: [0x22c]
Successors: []
---
0x236 PUSH1 0x0
0x238 DUP1
0x239 REVERT
---
0x236: V138 = 0x0
0x239: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6e, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6e, 0x0]

================================

Block 0x23a
[0x23a:0x28c]
---
Predecessors: [0x22c]
Successors: [0x6e]
---
0x23a JUMPDEST
0x23b CALLER
0x23c PUSH1 0x0
0x23e DUP2
0x23f DUP2
0x240 MSTORE
0x241 PUSH1 0x1
0x243 PUSH1 0x20
0x245 SWAP1
0x246 DUP2
0x247 MSTORE
0x248 PUSH1 0x40
0x24a SWAP2
0x24b DUP3
0x24c SWAP1
0x24d SHA3
0x24e CALLVALUE
0x24f SWAP1
0x250 DUP2
0x251 SWAP1
0x252 SSTORE
0x253 DUP3
0x254 MLOAD
0x255 SWAP4
0x256 DUP5
0x257 MSTORE
0x258 SWAP1
0x259 DUP4
0x25a ADD
0x25b MSTORE
0x25c DUP1
0x25d MLOAD
0x25e PUSH32 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
0x27f SWAP3
0x280 DUP2
0x281 SWAP1
0x282 SUB
0x283 SWAP1
0x284 SWAP2
0x285 ADD
0x286 SWAP1
0x287 LOG1
0x288 POP
0x289 PUSH1 0x1
0x28b SWAP1
0x28c JUMP
---
0x23a: JUMPDEST 
0x23b: V139 = CALLER
0x23c: V140 = 0x0
0x240: M[0x0] = V139
0x241: V141 = 0x1
0x243: V142 = 0x20
0x247: M[0x20] = 0x1
0x248: V143 = 0x40
0x24d: V144 = SHA3 0x0 0x40
0x24e: V145 = CALLVALUE
0x252: S[V144] = V145
0x254: V146 = M[0x40]
0x257: M[V146] = V139
0x25a: V147 = ADD V146 0x20
0x25b: M[V147] = V145
0x25d: V148 = M[0x40]
0x25e: V149 = 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
0x282: V150 = SUB V146 V148
0x285: V151 = ADD 0x40 V150
0x287: LOG V148 V151 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
0x289: V152 = 0x1
0x28c: JUMP 0x6e
---
Entry stack: [V11, 0x6e, 0x0]
Stack pops: 2
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x28d
[0x28d:0x2bd]
---
Predecessors: []
Successors: []
---
0x28d STOP
0x28e LOG1
0x28f PUSH6 0x627a7a723058
0x296 SHA3
0x297 MISSING 0xd8
0x298 CREATE2
0x299 SWAP6
0x29a XOR
0x29b DUP14
0x29c GASLIMIT
0x29d SWAP16
0x29e MISSING 0xdd
0x29f DELEGATECALL
0x2a0 MISSING 0xe8
0x2a1 MISSING 0xf9
0x2a2 MISSING 0x5c
0x2a3 ADDRESS
0x2a4 MISSING 0xdd
0x2a5 MISSING 0xc3
0x2a6 MISSING 0xc8
0x2a7 MISSING 0x22
0x2a8 DELEGATECALL
0x2a9 MISSING 0x1e
0x2aa MISSING 0xbe
0x2ab PUSH18 0x22a2d4eaf7e71940b08a490029
---
0x28d: STOP 
0x28e: LOG S0 S1 S2
0x28f: V153 = 0x627a7a723058
0x296: V154 = SHA3 0x627a7a723058 S3
0x297: MISSING 0xd8
0x298: V155 = CREATE2 S0 S1 S2 S3
0x29a: V156 = XOR S9 S4
0x29c: V157 = GASLIMIT
0x29e: MISSING 0xdd
0x29f: V158 = DELEGATECALL S0 S1 S2 S3 S4 S5
0x2a0: MISSING 0xe8
0x2a1: MISSING 0xf9
0x2a2: MISSING 0x5c
0x2a3: V159 = ADDRESS
0x2a4: MISSING 0xdd
0x2a5: MISSING 0xc3
0x2a6: MISSING 0xc8
0x2a7: MISSING 0x22
0x2a8: V160 = DELEGATECALL S0 S1 S2 S3 S4 S5
0x2a9: MISSING 0x1e
0x2aa: MISSING 0xbe
0x2ab: V161 = 0x22a2d4eaf7e71940b08a490029
---
Entry stack: []
Stack pops: 0
Stack additions: [V154, S18, S17, V156, S5, S6, S7, S8, V155, S10, S11, S12, S13, S14, S15, S16, S17, V157, V158, V159, V160, 0x22a2d4eaf7e71940b08a490029]
Exit stack: []

================================

Function 0:
Public function signature: 0xde96dff
Entry block: 0x66
Exit block: 0x6e
Body: 0x66, 0x6e, 0xb9, 0xd0, 0xd4, 0x14b, 0x154

Function 1:
Public function signature: 0x9cb8a26a
Entry block: 0x82
Exit block: 0x19e
Body: 0x82, 0x16e, 0x18f, 0x193, 0x19a, 0x19e

Function 2:
Public function signature: 0xc71daccb
Entry block: 0x8a
Exit block: 0x9f
Body: 0x8a, 0x92, 0x96, 0x9f, 0x219

Function 3:
Public function signature: 0xd0e30db0
Entry block: 0xb1
Exit block: 0x6e
Body: 0x6e, 0xb1, 0x22c, 0x236, 0x23a

Function 4:
Public fallback function
Entry block: 0x61
Exit block: 0x61
Body: 0x61

