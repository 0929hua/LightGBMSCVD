Block 0x0
[0x0:0x32]
---
Predecessors: []
Successors: [0x33, 0x5a]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 DUP1
0x29 PUSH4 0x41c0e1b5
0x2e EQ
0x2f PUSH2 0x5a
0x32 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x29: V6 = 0x41c0e1b5
0x2e: V7 = EQ 0x41c0e1b5 V5
0x2f: V8 = 0x5a
0x32: JUMPI 0x5a V7
---
Entry stack: []
Stack pops: 0
Stack additions: [V5]
Exit stack: [V5]

================================

Block 0x33
[0x33:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x69]
---
0x33 DUP1
0x34 PUSH4 0x6b9f96ea
0x39 EQ
0x3a PUSH2 0x69
0x3d JUMPI
---
0x34: V9 = 0x6b9f96ea
0x39: V10 = EQ 0x6b9f96ea V5
0x3a: V11 = 0x69
0x3d: JUMPI 0x69 V10
---
Entry stack: [V5]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V5]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0x33]
Successors: [0x49, 0x78]
---
0x3e DUP1
0x3f PUSH4 0xb0c8f9dc
0x44 EQ
0x45 PUSH2 0x78
0x48 JUMPI
---
0x3f: V12 = 0xb0c8f9dc
0x44: V13 = EQ 0xb0c8f9dc V5
0x45: V14 = 0x78
0x48: JUMPI 0x78 V13
---
Entry stack: [V5]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V5]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0xce]
---
0x49 DUP1
0x4a PUSH4 0xcc459696
0x4f EQ
0x50 PUSH2 0xce
0x53 JUMPI
---
0x4a: V15 = 0xcc459696
0x4f: V16 = EQ 0xcc459696 V5
0x50: V17 = 0xce
0x53: JUMPI 0xce V16
---
Entry stack: [V5]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V5]

================================

Block 0x54
[0x54:0x57]
---
Predecessors: [0x49]
Successors: [0x58]
---
0x54 PUSH2 0x58
0x57 JUMP
---
0x54: V18 = 0x58
0x57: JUMP 0x58
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x58
[0x58:0x59]
---
Predecessors: [0x54]
Successors: []
---
0x58 JUMPDEST
0x59 STOP
---
0x58: JUMPDEST 
0x59: STOP 
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x5a
[0x5a:0x66]
---
Predecessors: [0x0]
Successors: [0xf5]
---
0x5a JUMPDEST
0x5b PUSH2 0x67
0x5e PUSH1 0x4
0x60 DUP1
0x61 POP
0x62 POP
0x63 PUSH2 0xf5
0x66 JUMP
---
0x5a: JUMPDEST 
0x5b: V19 = 0x67
0x5e: V20 = 0x4
0x63: V21 = 0xf5
0x66: JUMP 0xf5
---
Entry stack: [V5]
Stack pops: 0
Stack additions: [0x67]
Exit stack: [V5, 0x67]

================================

Block 0x67
[0x67:0x68]
---
Predecessors: [0x187]
Successors: []
---
0x67 JUMPDEST
0x68 STOP
---
0x67: JUMPDEST 
0x68: STOP 
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x69
[0x69:0x75]
---
Predecessors: [0x33]
Successors: [0x189]
---
0x69 JUMPDEST
0x6a PUSH2 0x76
0x6d PUSH1 0x4
0x6f DUP1
0x70 POP
0x71 POP
0x72 PUSH2 0x189
0x75 JUMP
---
0x69: JUMPDEST 
0x6a: V22 = 0x76
0x6d: V23 = 0x4
0x72: V24 = 0x189
0x75: JUMP 0x189
---
Entry stack: [V5]
Stack pops: 0
Stack additions: [0x76]
Exit stack: [V5, 0x76]

================================

Block 0x76
[0x76:0x77]
---
Predecessors: [0x1f6]
Successors: []
---
0x76 JUMPDEST
0x77 STOP
---
0x76: JUMPDEST 
0x77: STOP 
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x78
[0x78:0xcb]
---
Predecessors: [0x3e]
Successors: [0x1f8]
---
0x78 JUMPDEST
0x79 PUSH2 0xcc
0x7c PUSH1 0x4
0x7e DUP1
0x7f DUP1
0x80 CALLDATALOAD
0x81 SWAP1
0x82 PUSH1 0x20
0x84 ADD
0x85 SWAP1
0x86 DUP3
0x87 ADD
0x88 DUP1
0x89 CALLDATALOAD
0x8a SWAP1
0x8b PUSH1 0x20
0x8d ADD
0x8e SWAP2
0x8f SWAP2
0x90 SWAP1
0x91 DUP1
0x92 DUP1
0x93 PUSH1 0x1f
0x95 ADD
0x96 PUSH1 0x20
0x98 DUP1
0x99 SWAP2
0x9a DIV
0x9b MUL
0x9c PUSH1 0x20
0x9e ADD
0x9f PUSH1 0x40
0xa1 MLOAD
0xa2 SWAP1
0xa3 DUP2
0xa4 ADD
0xa5 PUSH1 0x40
0xa7 MSTORE
0xa8 DUP1
0xa9 SWAP4
0xaa SWAP3
0xab SWAP2
0xac SWAP1
0xad DUP2
0xae DUP2
0xaf MSTORE
0xb0 PUSH1 0x20
0xb2 ADD
0xb3 DUP4
0xb4 DUP4
0xb5 DUP1
0xb6 DUP3
0xb7 DUP5
0xb8 CALLDATACOPY
0xb9 DUP3
0xba ADD
0xbb SWAP2
0xbc POP
0xbd POP
0xbe POP
0xbf POP
0xc0 POP
0xc1 POP
0xc2 SWAP1
0xc3 SWAP1
0xc4 SWAP2
0xc5 SWAP1
0xc6 POP
0xc7 POP
0xc8 PUSH2 0x1f8
0xcb JUMP
---
0x78: JUMPDEST 
0x79: V25 = 0xcc
0x7c: V26 = 0x4
0x80: V27 = CALLDATALOAD 0x4
0x82: V28 = 0x20
0x84: V29 = ADD 0x20 0x4
0x87: V30 = ADD 0x4 V27
0x89: V31 = CALLDATALOAD V30
0x8b: V32 = 0x20
0x8d: V33 = ADD 0x20 V30
0x93: V34 = 0x1f
0x95: V35 = ADD 0x1f V31
0x96: V36 = 0x20
0x9a: V37 = DIV V35 0x20
0x9b: V38 = MUL V37 0x20
0x9c: V39 = 0x20
0x9e: V40 = ADD 0x20 V38
0x9f: V41 = 0x40
0xa1: V42 = M[0x40]
0xa4: V43 = ADD V42 V40
0xa5: V44 = 0x40
0xa7: M[0x40] = V43
0xaf: M[V42] = V31
0xb0: V45 = 0x20
0xb2: V46 = ADD 0x20 V42
0xb8: CALLDATACOPY V46 V33 V31
0xba: V47 = ADD V46 V31
0xc8: V48 = 0x1f8
0xcb: JUMP 0x1f8
---
Entry stack: [V5]
Stack pops: 0
Stack additions: [0xcc, V42]
Exit stack: [V5, 0xcc, V42]

================================

Block 0xcc
[0xcc:0xcd]
---
Predecessors: [0x315]
Successors: []
---
0xcc JUMPDEST
0xcd STOP
---
0xcc: JUMPDEST 
0xcd: STOP 
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0xce
[0xce:0xda]
---
Predecessors: [0x49]
Successors: [0x318]
---
0xce JUMPDEST
0xcf PUSH2 0xdb
0xd2 PUSH1 0x4
0xd4 DUP1
0xd5 POP
0xd6 POP
0xd7 PUSH2 0x318
0xda JUMP
---
0xce: JUMPDEST 
0xcf: V49 = 0xdb
0xd2: V50 = 0x4
0xd7: V51 = 0x318
0xda: JUMP 0x318
---
Entry stack: [V5]
Stack pops: 0
Stack additions: [0xdb]
Exit stack: [V5, 0xdb]

================================

Block 0xdb
[0xdb:0xf4]
---
Predecessors: [0x318]
Successors: []
---
0xdb JUMPDEST
0xdc PUSH1 0x40
0xde MLOAD
0xdf DUP1
0xe0 DUP3
0xe1 PUSH2 0xffff
0xe4 AND
0xe5 DUP2
0xe6 MSTORE
0xe7 PUSH1 0x20
0xe9 ADD
0xea SWAP2
0xeb POP
0xec POP
0xed PUSH1 0x40
0xef MLOAD
0xf0 DUP1
0xf1 SWAP2
0xf2 SUB
0xf3 SWAP1
0xf4 RETURN
---
0xdb: JUMPDEST 
0xdc: V52 = 0x40
0xde: V53 = M[0x40]
0xe1: V54 = 0xffff
0xe4: V55 = AND 0xffff V196
0xe6: M[V53] = V55
0xe7: V56 = 0x20
0xe9: V57 = ADD 0x20 V53
0xed: V58 = 0x40
0xef: V59 = M[0x40]
0xf2: V60 = SUB V57 V59
0xf4: RETURN V59 V60
---
Entry stack: [V5, 0xdb, V196]
Stack pops: 1
Stack additions: []
Exit stack: [V5, 0xdb]

================================

Block 0xf5
[0xf5:0x14b]
---
Predecessors: [0x5a]
Successors: [0x14c, 0x186]
---
0xf5 JUMPDEST
0xf6 PUSH1 0x0
0xf8 PUSH1 0x0
0xfa SWAP1
0xfb SLOAD
0xfc SWAP1
0xfd PUSH2 0x100
0x100 EXP
0x101 SWAP1
0x102 DIV
0x103 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x118 AND
0x119 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12e AND
0x12f CALLER
0x130 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x145 AND
0x146 EQ
0x147 ISZERO
0x148 PUSH2 0x186
0x14b JUMPI
---
0xf5: JUMPDEST 
0xf6: V61 = 0x0
0xf8: V62 = 0x0
0xfb: V63 = S[0x0]
0xfd: V64 = 0x100
0x100: V65 = EXP 0x100 0x0
0x102: V66 = DIV V63 0x1
0x103: V67 = 0xffffffffffffffffffffffffffffffffffffffff
0x118: V68 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0x119: V69 = 0xffffffffffffffffffffffffffffffffffffffff
0x12e: V70 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0x12f: V71 = CALLER
0x130: V72 = 0xffffffffffffffffffffffffffffffffffffffff
0x145: V73 = AND 0xffffffffffffffffffffffffffffffffffffffff V71
0x146: V74 = EQ V73 V70
0x147: V75 = ISZERO V74
0x148: V76 = 0x186
0x14b: JUMPI 0x186 V75
---
Entry stack: [V5, 0x67]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x67]

================================

Block 0x14c
[0x14c:0x185]
---
Predecessors: [0xf5]
Successors: []
---
0x14c PUSH1 0x0
0x14e PUSH1 0x0
0x150 SWAP1
0x151 SLOAD
0x152 SWAP1
0x153 PUSH2 0x100
0x156 EXP
0x157 SWAP1
0x158 DIV
0x159 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16e AND
0x16f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x184 AND
0x185 SELFDESTRUCT
---
0x14c: V77 = 0x0
0x14e: V78 = 0x0
0x151: V79 = S[0x0]
0x153: V80 = 0x100
0x156: V81 = EXP 0x100 0x0
0x158: V82 = DIV V79 0x1
0x159: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x16e: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V82
0x16f: V85 = 0xffffffffffffffffffffffffffffffffffffffff
0x184: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff V84
0x185: SELFDESTRUCT V86
---
Entry stack: [V5, 0x67]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x67]

================================

Block 0x186
[0x186:0x186]
---
Predecessors: [0xf5]
Successors: [0x187]
---
0x186 JUMPDEST
---
0x186: JUMPDEST 
---
Entry stack: [V5, 0x67]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x67]

================================

Block 0x187
[0x187:0x188]
---
Predecessors: [0x186]
Successors: [0x67]
---
0x187 JUMPDEST
0x188 JUMP
---
0x187: JUMPDEST 
0x188: JUMP 0x67
---
Entry stack: [V5, 0x67]
Stack pops: 1
Stack additions: []
Exit stack: [V5]

================================

Block 0x189
[0x189:0x1f5]
---
Predecessors: [0x69]
Successors: [0x1f6]
---
0x189 JUMPDEST
0x18a PUSH1 0x0
0x18c PUSH1 0x0
0x18e SWAP1
0x18f SLOAD
0x190 SWAP1
0x191 PUSH2 0x100
0x194 EXP
0x195 SWAP1
0x196 DIV
0x197 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ac AND
0x1ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c2 AND
0x1c3 PUSH1 0x0
0x1c5 ADDRESS
0x1c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1db AND
0x1dc BALANCE
0x1dd PUSH1 0x40
0x1df MLOAD
0x1e0 DUP1
0x1e1 SWAP1
0x1e2 POP
0x1e3 PUSH1 0x0
0x1e5 PUSH1 0x40
0x1e7 MLOAD
0x1e8 DUP1
0x1e9 DUP4
0x1ea SUB
0x1eb DUP2
0x1ec DUP6
0x1ed DUP9
0x1ee DUP9
0x1ef CALL
0x1f0 SWAP4
0x1f1 POP
0x1f2 POP
0x1f3 POP
0x1f4 POP
0x1f5 POP
---
0x189: JUMPDEST 
0x18a: V87 = 0x0
0x18c: V88 = 0x0
0x18f: V89 = S[0x0]
0x191: V90 = 0x100
0x194: V91 = EXP 0x100 0x0
0x196: V92 = DIV V89 0x1
0x197: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ac: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x1ad: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c2: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x1c3: V97 = 0x0
0x1c5: V98 = ADDRESS
0x1c6: V99 = 0xffffffffffffffffffffffffffffffffffffffff
0x1db: V100 = AND 0xffffffffffffffffffffffffffffffffffffffff V98
0x1dc: V101 = BALANCE V100
0x1dd: V102 = 0x40
0x1df: V103 = M[0x40]
0x1e3: V104 = 0x0
0x1e5: V105 = 0x40
0x1e7: V106 = M[0x40]
0x1ea: V107 = SUB V103 V106
0x1ef: V108 = CALL 0x0 V96 V101 V106 V107 V106 0x0
---
Entry stack: [V5, 0x76]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x76]

================================

Block 0x1f6
[0x1f6:0x1f7]
---
Predecessors: [0x189]
Successors: [0x76]
---
0x1f6 JUMPDEST
0x1f7 JUMP
---
0x1f6: JUMPDEST 
0x1f7: JUMP 0x76
---
Entry stack: [V5, 0x76]
Stack pops: 1
Stack additions: []
Exit stack: [V5]

================================

Block 0x1f8
[0x1f8:0x24f]
---
Predecessors: [0x78]
Successors: [0x250, 0x254]
---
0x1f8 JUMPDEST
0x1f9 PUSH1 0x0
0x1fb PUSH1 0x0
0x1fd SWAP1
0x1fe SLOAD
0x1ff SWAP1
0x200 PUSH2 0x100
0x203 EXP
0x204 SWAP1
0x205 DIV
0x206 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21b AND
0x21c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x231 AND
0x232 CALLER
0x233 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x248 AND
0x249 EQ
0x24a ISZERO
0x24b ISZERO
0x24c PUSH2 0x254
0x24f JUMPI
---
0x1f8: JUMPDEST 
0x1f9: V109 = 0x0
0x1fb: V110 = 0x0
0x1fe: V111 = S[0x0]
0x200: V112 = 0x100
0x203: V113 = EXP 0x100 0x0
0x205: V114 = DIV V111 0x1
0x206: V115 = 0xffffffffffffffffffffffffffffffffffffffff
0x21b: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x21c: V117 = 0xffffffffffffffffffffffffffffffffffffffff
0x231: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0x232: V119 = CALLER
0x233: V120 = 0xffffffffffffffffffffffffffffffffffffffff
0x248: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x249: V122 = EQ V121 V118
0x24a: V123 = ISZERO V122
0x24b: V124 = ISZERO V123
0x24c: V125 = 0x254
0x24f: JUMPI 0x254 V124
---
Entry stack: [V5, 0xcc, V42]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0xcc, V42]

================================

Block 0x250
[0x250:0x253]
---
Predecessors: [0x1f8]
Successors: [0x315]
---
0x250 PUSH2 0x315
0x253 JUMP
---
0x250: V126 = 0x315
0x253: JUMP 0x315
---
Entry stack: [V5, 0xcc, V42]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0xcc, V42]

================================

Block 0x254
[0x254:0x2ed]
---
Predecessors: [0x1f8]
Successors: [0x2ee, 0x307]
---
0x254 JUMPDEST
0x255 PUSH1 0x0
0x257 PUSH1 0x14
0x259 DUP2
0x25a DUP2
0x25b SWAP1
0x25c SLOAD
0x25d SWAP1
0x25e PUSH2 0x100
0x261 EXP
0x262 SWAP1
0x263 DIV
0x264 PUSH2 0xffff
0x267 AND
0x268 DUP1
0x269 SWAP3
0x26a SWAP2
0x26b SWAP1
0x26c PUSH1 0x1
0x26e ADD
0x26f SWAP2
0x270 SWAP1
0x271 PUSH2 0x100
0x274 EXP
0x275 DUP2
0x276 SLOAD
0x277 DUP2
0x278 PUSH2 0xffff
0x27b MUL
0x27c NOT
0x27d AND
0x27e SWAP1
0x27f DUP4
0x280 MUL
0x281 OR
0x282 SWAP1
0x283 SSTORE
0x284 POP
0x285 POP
0x286 PUSH32 0xdd54a62fe075c6750ff0360cdb434927c0f8022fa292567582af0c0421ed725a
0x2a7 DUP2
0x2a8 PUSH1 0x40
0x2aa MLOAD
0x2ab DUP1
0x2ac DUP1
0x2ad PUSH1 0x20
0x2af ADD
0x2b0 DUP3
0x2b1 DUP2
0x2b2 SUB
0x2b3 DUP3
0x2b4 MSTORE
0x2b5 DUP4
0x2b6 DUP2
0x2b7 DUP2
0x2b8 MLOAD
0x2b9 DUP2
0x2ba MSTORE
0x2bb PUSH1 0x20
0x2bd ADD
0x2be SWAP2
0x2bf POP
0x2c0 DUP1
0x2c1 MLOAD
0x2c2 SWAP1
0x2c3 PUSH1 0x20
0x2c5 ADD
0x2c6 SWAP1
0x2c7 DUP1
0x2c8 DUP4
0x2c9 DUP4
0x2ca DUP3
0x2cb SWAP1
0x2cc PUSH1 0x0
0x2ce PUSH1 0x4
0x2d0 PUSH1 0x20
0x2d2 DUP5
0x2d3 PUSH1 0x1f
0x2d5 ADD
0x2d6 DIV
0x2d7 PUSH1 0xf
0x2d9 MUL
0x2da PUSH1 0x3
0x2dc ADD
0x2dd CALL
0x2de POP
0x2df SWAP1
0x2e0 POP
0x2e1 SWAP1
0x2e2 DUP2
0x2e3 ADD
0x2e4 SWAP1
0x2e5 PUSH1 0x1f
0x2e7 AND
0x2e8 DUP1
0x2e9 ISZERO
0x2ea PUSH2 0x307
0x2ed JUMPI
---
0x254: JUMPDEST 
0x255: V127 = 0x0
0x257: V128 = 0x14
0x25c: V129 = S[0x0]
0x25e: V130 = 0x100
0x261: V131 = EXP 0x100 0x14
0x263: V132 = DIV V129 0x10000000000000000000000000000000000000000
0x264: V133 = 0xffff
0x267: V134 = AND 0xffff V132
0x26c: V135 = 0x1
0x26e: V136 = ADD 0x1 V134
0x271: V137 = 0x100
0x274: V138 = EXP 0x100 0x14
0x276: V139 = S[0x0]
0x278: V140 = 0xffff
0x27b: V141 = MUL 0xffff 0x10000000000000000000000000000000000000000
0x27c: V142 = NOT 0xffff0000000000000000000000000000000000000000
0x27d: V143 = AND 0xffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff V139
0x280: V144 = MUL V136 0x10000000000000000000000000000000000000000
0x281: V145 = OR V144 V143
0x283: S[0x0] = V145
0x286: V146 = 0xdd54a62fe075c6750ff0360cdb434927c0f8022fa292567582af0c0421ed725a
0x2a8: V147 = 0x40
0x2aa: V148 = M[0x40]
0x2ad: V149 = 0x20
0x2af: V150 = ADD 0x20 V148
0x2b2: V151 = SUB V150 V148
0x2b4: M[V148] = V151
0x2b8: V152 = M[V42]
0x2ba: M[V150] = V152
0x2bb: V153 = 0x20
0x2bd: V154 = ADD 0x20 V150
0x2c1: V155 = M[V42]
0x2c3: V156 = 0x20
0x2c5: V157 = ADD 0x20 V42
0x2cc: V158 = 0x0
0x2ce: V159 = 0x4
0x2d0: V160 = 0x20
0x2d3: V161 = 0x1f
0x2d5: V162 = ADD 0x1f V155
0x2d6: V163 = DIV V162 0x20
0x2d7: V164 = 0xf
0x2d9: V165 = MUL 0xf V163
0x2da: V166 = 0x3
0x2dc: V167 = ADD 0x3 V165
0x2dd: V168 = CALL V167 0x4 0x0 V157 V155 V154 V155
0x2e3: V169 = ADD V155 V154
0x2e5: V170 = 0x1f
0x2e7: V171 = AND 0x1f V155
0x2e9: V172 = ISZERO V171
0x2ea: V173 = 0x307
0x2ed: JUMPI 0x307 V172
---
Entry stack: [V5, 0xcc, V42]
Stack pops: 1
Stack additions: [S0, 0xdd54a62fe075c6750ff0360cdb434927c0f8022fa292567582af0c0421ed725a, S0, V148, V148, V169, V171]
Exit stack: [V5, 0xcc, V42, 0xdd54a62fe075c6750ff0360cdb434927c0f8022fa292567582af0c0421ed725a, V42, V148, V148, V169, V171]

================================

Block 0x2ee
[0x2ee:0x306]
---
Predecessors: [0x254]
Successors: [0x307]
---
0x2ee DUP1
0x2ef DUP3
0x2f0 SUB
0x2f1 DUP1
0x2f2 MLOAD
0x2f3 PUSH1 0x1
0x2f5 DUP4
0x2f6 PUSH1 0x20
0x2f8 SUB
0x2f9 PUSH2 0x100
0x2fc EXP
0x2fd SUB
0x2fe NOT
0x2ff AND
0x300 DUP2
0x301 MSTORE
0x302 PUSH1 0x20
0x304 ADD
0x305 SWAP2
0x306 POP
---
0x2f0: V174 = SUB V169 V171
0x2f2: V175 = M[V174]
0x2f3: V176 = 0x1
0x2f6: V177 = 0x20
0x2f8: V178 = SUB 0x20 V171
0x2f9: V179 = 0x100
0x2fc: V180 = EXP 0x100 V178
0x2fd: V181 = SUB V180 0x1
0x2fe: V182 = NOT V181
0x2ff: V183 = AND V182 V175
0x301: M[V174] = V183
0x302: V184 = 0x20
0x304: V185 = ADD 0x20 V174
---
Entry stack: [V5, 0xcc, V42, 0xdd54a62fe075c6750ff0360cdb434927c0f8022fa292567582af0c0421ed725a, V42, V148, V148, V169, V171]
Stack pops: 2
Stack additions: [V185, S0]
Exit stack: [V5, 0xcc, V42, 0xdd54a62fe075c6750ff0360cdb434927c0f8022fa292567582af0c0421ed725a, V42, V148, V148, V185, V171]

================================

Block 0x307
[0x307:0x314]
---
Predecessors: [0x254, 0x2ee]
Successors: [0x315]
---
0x307 JUMPDEST
0x308 POP
0x309 SWAP3
0x30a POP
0x30b POP
0x30c POP
0x30d PUSH1 0x40
0x30f MLOAD
0x310 DUP1
0x311 SWAP2
0x312 SUB
0x313 SWAP1
0x314 LOG1
---
0x307: JUMPDEST 
0x30d: V186 = 0x40
0x30f: V187 = M[0x40]
0x312: V188 = SUB S1 V187
0x314: LOG V187 V188 0xdd54a62fe075c6750ff0360cdb434927c0f8022fa292567582af0c0421ed725a
---
Entry stack: [V5, 0xcc, V42, 0xdd54a62fe075c6750ff0360cdb434927c0f8022fa292567582af0c0421ed725a, V42, V148, V148, S1, V171]
Stack pops: 6
Stack additions: []
Exit stack: [V5, 0xcc, V42]

================================

Block 0x315
[0x315:0x317]
---
Predecessors: [0x250, 0x307]
Successors: [0xcc]
---
0x315 JUMPDEST
0x316 POP
0x317 JUMP
---
0x315: JUMPDEST 
0x317: JUMP 0xcc
---
Entry stack: [V5, 0xcc, V42]
Stack pops: 2
Stack additions: []
Exit stack: [V5]

================================

Block 0x318
[0x318:0x32b]
---
Predecessors: [0xce]
Successors: [0xdb]
---
0x318 JUMPDEST
0x319 PUSH1 0x0
0x31b PUSH1 0x14
0x31d SWAP1
0x31e SLOAD
0x31f SWAP1
0x320 PUSH2 0x100
0x323 EXP
0x324 SWAP1
0x325 DIV
0x326 PUSH2 0xffff
0x329 AND
0x32a DUP2
0x32b JUMP
---
0x318: JUMPDEST 
0x319: V189 = 0x0
0x31b: V190 = 0x14
0x31e: V191 = S[0x0]
0x320: V192 = 0x100
0x323: V193 = EXP 0x100 0x14
0x325: V194 = DIV V191 0x10000000000000000000000000000000000000000
0x326: V195 = 0xffff
0x329: V196 = AND 0xffff V194
0x32b: JUMP 0xdb
---
Entry stack: [V5, 0xdb]
Stack pops: 1
Stack additions: [S0, V196]
Exit stack: [V5, 0xdb, V196]

================================

Function 0:
Public function signature: 0x41c0e1b5
Entry block: 0x5a
Exit block: 0x67
Body: 0x5a, 0x67, 0xf5, 0x14c, 0x186, 0x187

Function 1:
Public function signature: 0x6b9f96ea
Entry block: 0x69
Exit block: 0x76
Body: 0x69, 0x76, 0x189, 0x1f6

Function 2:
Public function signature: 0xb0c8f9dc
Entry block: 0x78
Exit block: 0xcc
Body: 0x78, 0xcc, 0x1f8, 0x250, 0x254, 0x2ee, 0x307, 0x315

Function 3:
Public function signature: 0xcc459696
Entry block: 0xce
Exit block: 0xdb
Body: 0xce, 0xdb, 0x318

Function 4:
Public fallback function
Entry block: 0x54
Exit block: 0x58
Body: 0x54, 0x58

