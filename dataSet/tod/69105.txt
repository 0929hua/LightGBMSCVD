Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xa3]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xa3
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xa3
0xc: JUMPI 0xa3 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0xa8]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x43d726d6
0x3a DUP2
0x3b EQ
0x3c PUSH2 0xa8
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x43d726d6
0x3b: V13 = EQ V11 0x43d726d6
0x3c: V14 = 0xa8
0x3f: JUMPI 0xa8 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xbf]
---
0x40 DUP1
0x41 PUSH4 0x521eb273
0x46 EQ
0x47 PUSH2 0xbf
0x4a JUMPI
---
0x41: V15 = 0x521eb273
0x46: V16 = EQ 0x521eb273 V11
0x47: V17 = 0xbf
0x4a: JUMPI 0xbf V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xf0]
---
0x4b DUP1
0x4c PUSH4 0x715018a6
0x51 EQ
0x52 PUSH2 0xf0
0x55 JUMPI
---
0x4c: V18 = 0x715018a6
0x51: V19 = EQ 0x715018a6 V11
0x52: V20 = 0xf0
0x55: JUMPI 0xf0 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x105]
---
0x56 DUP1
0x57 PUSH4 0x8c52dc41
0x5c EQ
0x5d PUSH2 0x105
0x60 JUMPI
---
0x57: V21 = 0x8c52dc41
0x5c: V22 = EQ 0x8c52dc41 V11
0x5d: V23 = 0x105
0x60: JUMPI 0x105 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x11a]
---
0x61 DUP1
0x62 PUSH4 0x8da5cb5b
0x67 EQ
0x68 PUSH2 0x11a
0x6b JUMPI
---
0x62: V24 = 0x8da5cb5b
0x67: V25 = EQ 0x8da5cb5b V11
0x68: V26 = 0x11a
0x6b: JUMPI 0x11a V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x12f]
---
0x6c DUP1
0x6d PUSH4 0xc19d93fb
0x72 EQ
0x73 PUSH2 0x12f
0x76 JUMPI
---
0x6d: V27 = 0xc19d93fb
0x72: V28 = EQ 0xc19d93fb V11
0x73: V29 = 0x12f
0x76: JUMPI 0x12f V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x168]
---
0x77 DUP1
0x78 PUSH4 0xcb13cddb
0x7d EQ
0x7e PUSH2 0x168
0x81 JUMPI
---
0x78: V30 = 0xcb13cddb
0x7d: V31 = EQ 0xcb13cddb V11
0x7e: V32 = 0x168
0x81: JUMPI 0x168 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x19b]
---
0x82 DUP1
0x83 PUSH4 0xf2fde38b
0x88 EQ
0x89 PUSH2 0x19b
0x8c JUMPI
---
0x83: V33 = 0xf2fde38b
0x88: V34 = EQ 0xf2fde38b V11
0x89: V35 = 0x19b
0x8c: JUMPI 0x19b V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x1bc]
---
0x8d DUP1
0x8e PUSH4 0xf340fa01
0x93 EQ
0x94 PUSH2 0x1bc
0x97 JUMPI
---
0x8e: V36 = 0xf340fa01
0x93: V37 = EQ 0xf340fa01 V11
0x94: V38 = 0x1bc
0x97: JUMPI 0x1bc V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x8d]
Successors: [0xa3, 0x1d0]
---
0x98 DUP1
0x99 PUSH4 0xfa89401a
0x9e EQ
0x9f PUSH2 0x1d0
0xa2 JUMPI
---
0x99: V39 = 0xfa89401a
0x9e: V40 = EQ 0xfa89401a V11
0x9f: V41 = 0x1d0
0xa2: JUMPI 0x1d0 V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa3
[0xa3:0xa7]
---
Predecessors: [0x0, 0x98]
Successors: []
---
0xa3 JUMPDEST
0xa4 PUSH1 0x0
0xa6 DUP1
0xa7 REVERT
---
0xa3: JUMPDEST 
0xa4: V42 = 0x0
0xa7: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa8
[0xa8:0xaf]
---
Predecessors: [0xd]
Successors: [0xb0, 0xb4]
---
0xa8 JUMPDEST
0xa9 CALLVALUE
0xaa DUP1
0xab ISZERO
0xac PUSH2 0xb4
0xaf JUMPI
---
0xa8: JUMPDEST 
0xa9: V43 = CALLVALUE
0xab: V44 = ISZERO V43
0xac: V45 = 0xb4
0xaf: JUMPI 0xb4 V44
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V43]
Exit stack: [V11, V43]

================================

Block 0xb0
[0xb0:0xb3]
---
Predecessors: [0xa8]
Successors: []
---
0xb0 PUSH1 0x0
0xb2 DUP1
0xb3 REVERT
---
0xb0: V46 = 0x0
0xb3: REVERT 0x0 0x0
---
Entry stack: [V11, V43]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V43]

================================

Block 0xb4
[0xb4:0xbc]
---
Predecessors: [0xa8]
Successors: [0x1f1]
---
0xb4 JUMPDEST
0xb5 POP
0xb6 PUSH2 0xbd
0xb9 PUSH2 0x1f1
0xbc JUMP
---
0xb4: JUMPDEST 
0xb6: V47 = 0xbd
0xb9: V48 = 0x1f1
0xbc: JUMP 0x1f1
---
Entry stack: [V11, V43]
Stack pops: 1
Stack additions: [0xbd]
Exit stack: [V11, 0xbd]

================================

Block 0xbd
[0xbd:0xbe]
---
Predecessors: [0x2c4, 0x2ed, 0x37d, 0x481, 0x50e]
Successors: []
---
0xbd JUMPDEST
0xbe STOP
---
0xbd: JUMPDEST 
0xbe: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xbf
[0xbf:0xc6]
---
Predecessors: [0x40]
Successors: [0xc7, 0xcb]
---
0xbf JUMPDEST
0xc0 CALLVALUE
0xc1 DUP1
0xc2 ISZERO
0xc3 PUSH2 0xcb
0xc6 JUMPI
---
0xbf: JUMPDEST 
0xc0: V49 = CALLVALUE
0xc2: V50 = ISZERO V49
0xc3: V51 = 0xcb
0xc6: JUMPI 0xcb V50
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V49]
Exit stack: [V11, V49]

================================

Block 0xc7
[0xc7:0xca]
---
Predecessors: [0xbf]
Successors: []
---
0xc7 PUSH1 0x0
0xc9 DUP1
0xca REVERT
---
0xc7: V52 = 0x0
0xca: REVERT 0x0 0x0
---
Entry stack: [V11, V49]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V49]

================================

Block 0xcb
[0xcb:0xd3]
---
Predecessors: [0xbf]
Successors: [0x2c7]
---
0xcb JUMPDEST
0xcc POP
0xcd PUSH2 0xd4
0xd0 PUSH2 0x2c7
0xd3 JUMP
---
0xcb: JUMPDEST 
0xcd: V53 = 0xd4
0xd0: V54 = 0x2c7
0xd3: JUMP 0x2c7
---
Entry stack: [V11, V49]
Stack pops: 1
Stack additions: [0xd4]
Exit stack: [V11, 0xd4]

================================

Block 0xd4
[0xd4:0xef]
---
Predecessors: [0x2c7, 0x3cc]
Successors: []
---
0xd4 JUMPDEST
0xd5 PUSH1 0x40
0xd7 DUP1
0xd8 MLOAD
0xd9 PUSH1 0x1
0xdb PUSH1 0xa0
0xdd PUSH1 0x2
0xdf EXP
0xe0 SUB
0xe1 SWAP1
0xe2 SWAP3
0xe3 AND
0xe4 DUP3
0xe5 MSTORE
0xe6 MLOAD
0xe7 SWAP1
0xe8 DUP2
0xe9 SWAP1
0xea SUB
0xeb PUSH1 0x20
0xed ADD
0xee SWAP1
0xef RETURN
---
0xd4: JUMPDEST 
0xd5: V55 = 0x40
0xd8: V56 = M[0x40]
0xd9: V57 = 0x1
0xdb: V58 = 0xa0
0xdd: V59 = 0x2
0xdf: V60 = EXP 0x2 0xa0
0xe0: V61 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe3: V62 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xe5: M[V56] = V62
0xe6: V63 = M[0x40]
0xea: V64 = SUB V56 V63
0xeb: V65 = 0x20
0xed: V66 = ADD 0x20 V64
0xef: RETURN V63 V66
---
Entry stack: [V11, 0xd4, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xd4]

================================

Block 0xf0
[0xf0:0xf7]
---
Predecessors: [0x4b]
Successors: [0xf8, 0xfc]
---
0xf0 JUMPDEST
0xf1 CALLVALUE
0xf2 DUP1
0xf3 ISZERO
0xf4 PUSH2 0xfc
0xf7 JUMPI
---
0xf0: JUMPDEST 
0xf1: V67 = CALLVALUE
0xf3: V68 = ISZERO V67
0xf4: V69 = 0xfc
0xf7: JUMPI 0xfc V68
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V67]
Exit stack: [V11, V67]

================================

Block 0xf8
[0xf8:0xfb]
---
Predecessors: [0xf0]
Successors: []
---
0xf8 PUSH1 0x0
0xfa DUP1
0xfb REVERT
---
0xf8: V70 = 0x0
0xfb: REVERT 0x0 0x0
---
Entry stack: [V11, V67]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V67]

================================

Block 0xfc
[0xfc:0x104]
---
Predecessors: [0xf0]
Successors: [0x2d6]
---
0xfc JUMPDEST
0xfd POP
0xfe PUSH2 0xbd
0x101 PUSH2 0x2d6
0x104 JUMP
---
0xfc: JUMPDEST 
0xfe: V71 = 0xbd
0x101: V72 = 0x2d6
0x104: JUMP 0x2d6
---
Entry stack: [V11, V67]
Stack pops: 1
Stack additions: [0xbd]
Exit stack: [V11, 0xbd]

================================

Block 0x105
[0x105:0x10c]
---
Predecessors: [0x56]
Successors: [0x10d, 0x111]
---
0x105 JUMPDEST
0x106 CALLVALUE
0x107 DUP1
0x108 ISZERO
0x109 PUSH2 0x111
0x10c JUMPI
---
0x105: JUMPDEST 
0x106: V73 = CALLVALUE
0x108: V74 = ISZERO V73
0x109: V75 = 0x111
0x10c: JUMPI 0x111 V74
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V73]
Exit stack: [V11, V73]

================================

Block 0x10d
[0x10d:0x110]
---
Predecessors: [0x105]
Successors: []
---
0x10d PUSH1 0x0
0x10f DUP1
0x110 REVERT
---
0x10d: V76 = 0x0
0x110: REVERT 0x0 0x0
---
Entry stack: [V11, V73]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V73]

================================

Block 0x111
[0x111:0x119]
---
Predecessors: [0x105]
Successors: [0x342]
---
0x111 JUMPDEST
0x112 POP
0x113 PUSH2 0xbd
0x116 PUSH2 0x342
0x119 JUMP
---
0x111: JUMPDEST 
0x113: V77 = 0xbd
0x116: V78 = 0x342
0x119: JUMP 0x342
---
Entry stack: [V11, V73]
Stack pops: 1
Stack additions: [0xbd]
Exit stack: [V11, 0xbd]

================================

Block 0x11a
[0x11a:0x121]
---
Predecessors: [0x61]
Successors: [0x122, 0x126]
---
0x11a JUMPDEST
0x11b CALLVALUE
0x11c DUP1
0x11d ISZERO
0x11e PUSH2 0x126
0x121 JUMPI
---
0x11a: JUMPDEST 
0x11b: V79 = CALLVALUE
0x11d: V80 = ISZERO V79
0x11e: V81 = 0x126
0x121: JUMPI 0x126 V80
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V79]
Exit stack: [V11, V79]

================================

Block 0x122
[0x122:0x125]
---
Predecessors: [0x11a]
Successors: []
---
0x122 PUSH1 0x0
0x124 DUP1
0x125 REVERT
---
0x122: V82 = 0x0
0x125: REVERT 0x0 0x0
---
Entry stack: [V11, V79]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V79]

================================

Block 0x126
[0x126:0x12e]
---
Predecessors: [0x11a]
Successors: [0x3cc]
---
0x126 JUMPDEST
0x127 POP
0x128 PUSH2 0xd4
0x12b PUSH2 0x3cc
0x12e JUMP
---
0x126: JUMPDEST 
0x128: V83 = 0xd4
0x12b: V84 = 0x3cc
0x12e: JUMP 0x3cc
---
Entry stack: [V11, V79]
Stack pops: 1
Stack additions: [0xd4]
Exit stack: [V11, 0xd4]

================================

Block 0x12f
[0x12f:0x136]
---
Predecessors: [0x6c]
Successors: [0x137, 0x13b]
---
0x12f JUMPDEST
0x130 CALLVALUE
0x131 DUP1
0x132 ISZERO
0x133 PUSH2 0x13b
0x136 JUMPI
---
0x12f: JUMPDEST 
0x130: V85 = CALLVALUE
0x132: V86 = ISZERO V85
0x133: V87 = 0x13b
0x136: JUMPI 0x13b V86
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V85]
Exit stack: [V11, V85]

================================

Block 0x137
[0x137:0x13a]
---
Predecessors: [0x12f]
Successors: []
---
0x137 PUSH1 0x0
0x139 DUP1
0x13a REVERT
---
0x137: V88 = 0x0
0x13a: REVERT 0x0 0x0
---
Entry stack: [V11, V85]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V85]

================================

Block 0x13b
[0x13b:0x143]
---
Predecessors: [0x12f]
Successors: [0x3db]
---
0x13b JUMPDEST
0x13c POP
0x13d PUSH2 0x144
0x140 PUSH2 0x3db
0x143 JUMP
---
0x13b: JUMPDEST 
0x13d: V89 = 0x144
0x140: V90 = 0x3db
0x143: JUMP 0x3db
---
Entry stack: [V11, V85]
Stack pops: 1
Stack additions: [0x144]
Exit stack: [V11, 0x144]

================================

Block 0x144
[0x144:0x152]
---
Predecessors: [0x3db]
Successors: [0x153, 0x154]
---
0x144 JUMPDEST
0x145 PUSH1 0x40
0x147 MLOAD
0x148 DUP1
0x149 DUP3
0x14a PUSH1 0x2
0x14c DUP2
0x14d GT
0x14e ISZERO
0x14f PUSH2 0x154
0x152 JUMPI
---
0x144: JUMPDEST 
0x145: V91 = 0x40
0x147: V92 = M[0x40]
0x14a: V93 = 0x2
0x14d: V94 = GT V315 0x2
0x14e: V95 = ISZERO V94
0x14f: V96 = 0x154
0x152: JUMPI 0x154 V95
---
Entry stack: [V11, 0x144, V315]
Stack pops: 1
Stack additions: [S0, V92, V92, S0]
Exit stack: [V11, 0x144, V315, V92, V92, V315]

================================

Block 0x153
[0x153:0x153]
---
Predecessors: [0x144]
Successors: []
---
0x153 INVALID
---
0x153: INVALID 
---
Entry stack: [V11, 0x144, V315, V92, V92, V315]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x144, V315, V92, V92, V315]

================================

Block 0x154
[0x154:0x167]
---
Predecessors: [0x144]
Successors: []
---
0x154 JUMPDEST
0x155 PUSH1 0xff
0x157 AND
0x158 DUP2
0x159 MSTORE
0x15a PUSH1 0x20
0x15c ADD
0x15d SWAP2
0x15e POP
0x15f POP
0x160 PUSH1 0x40
0x162 MLOAD
0x163 DUP1
0x164 SWAP2
0x165 SUB
0x166 SWAP1
0x167 RETURN
---
0x154: JUMPDEST 
0x155: V97 = 0xff
0x157: V98 = AND 0xff V315
0x159: M[V92] = V98
0x15a: V99 = 0x20
0x15c: V100 = ADD 0x20 V92
0x160: V101 = 0x40
0x162: V102 = M[0x40]
0x165: V103 = SUB V100 V102
0x167: RETURN V102 V103
---
Entry stack: [V11, 0x144, V315, V92, V92, V315]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x144]

================================

Block 0x168
[0x168:0x16f]
---
Predecessors: [0x77]
Successors: [0x170, 0x174]
---
0x168 JUMPDEST
0x169 CALLVALUE
0x16a DUP1
0x16b ISZERO
0x16c PUSH2 0x174
0x16f JUMPI
---
0x168: JUMPDEST 
0x169: V104 = CALLVALUE
0x16b: V105 = ISZERO V104
0x16c: V106 = 0x174
0x16f: JUMPI 0x174 V105
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V104]
Exit stack: [V11, V104]

================================

Block 0x170
[0x170:0x173]
---
Predecessors: [0x168]
Successors: []
---
0x170 PUSH1 0x0
0x172 DUP1
0x173 REVERT
---
0x170: V107 = 0x0
0x173: REVERT 0x0 0x0
---
Entry stack: [V11, V104]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V104]

================================

Block 0x174
[0x174:0x188]
---
Predecessors: [0x168]
Successors: [0x3eb]
---
0x174 JUMPDEST
0x175 POP
0x176 PUSH2 0x189
0x179 PUSH1 0x1
0x17b PUSH1 0xa0
0x17d PUSH1 0x2
0x17f EXP
0x180 SUB
0x181 PUSH1 0x4
0x183 CALLDATALOAD
0x184 AND
0x185 PUSH2 0x3eb
0x188 JUMP
---
0x174: JUMPDEST 
0x176: V108 = 0x189
0x179: V109 = 0x1
0x17b: V110 = 0xa0
0x17d: V111 = 0x2
0x17f: V112 = EXP 0x2 0xa0
0x180: V113 = SUB 0x10000000000000000000000000000000000000000 0x1
0x181: V114 = 0x4
0x183: V115 = CALLDATALOAD 0x4
0x184: V116 = AND V115 0xffffffffffffffffffffffffffffffffffffffff
0x185: V117 = 0x3eb
0x188: JUMP 0x3eb
---
Entry stack: [V11, V104]
Stack pops: 1
Stack additions: [0x189, V116]
Exit stack: [V11, 0x189, V116]

================================

Block 0x189
[0x189:0x19a]
---
Predecessors: [0x3eb]
Successors: []
---
0x189 JUMPDEST
0x18a PUSH1 0x40
0x18c DUP1
0x18d MLOAD
0x18e SWAP2
0x18f DUP3
0x190 MSTORE
0x191 MLOAD
0x192 SWAP1
0x193 DUP2
0x194 SWAP1
0x195 SUB
0x196 PUSH1 0x20
0x198 ADD
0x199 SWAP1
0x19a RETURN
---
0x189: JUMPDEST 
0x18a: V118 = 0x40
0x18d: V119 = M[0x40]
0x190: M[V119] = V321
0x191: V120 = M[0x40]
0x195: V121 = SUB V119 V120
0x196: V122 = 0x20
0x198: V123 = ADD 0x20 V121
0x19a: RETURN V120 V123
---
Entry stack: [V11, 0x189, V321]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x189]

================================

Block 0x19b
[0x19b:0x1a2]
---
Predecessors: [0x82]
Successors: [0x1a3, 0x1a7]
---
0x19b JUMPDEST
0x19c CALLVALUE
0x19d DUP1
0x19e ISZERO
0x19f PUSH2 0x1a7
0x1a2 JUMPI
---
0x19b: JUMPDEST 
0x19c: V124 = CALLVALUE
0x19e: V125 = ISZERO V124
0x19f: V126 = 0x1a7
0x1a2: JUMPI 0x1a7 V125
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V124]
Exit stack: [V11, V124]

================================

Block 0x1a3
[0x1a3:0x1a6]
---
Predecessors: [0x19b]
Successors: []
---
0x1a3 PUSH1 0x0
0x1a5 DUP1
0x1a6 REVERT
---
0x1a3: V127 = 0x0
0x1a6: REVERT 0x0 0x0
---
Entry stack: [V11, V124]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V124]

================================

Block 0x1a7
[0x1a7:0x1bb]
---
Predecessors: [0x19b]
Successors: [0x3fd]
---
0x1a7 JUMPDEST
0x1a8 POP
0x1a9 PUSH2 0xbd
0x1ac PUSH1 0x1
0x1ae PUSH1 0xa0
0x1b0 PUSH1 0x2
0x1b2 EXP
0x1b3 SUB
0x1b4 PUSH1 0x4
0x1b6 CALLDATALOAD
0x1b7 AND
0x1b8 PUSH2 0x3fd
0x1bb JUMP
---
0x1a7: JUMPDEST 
0x1a9: V128 = 0xbd
0x1ac: V129 = 0x1
0x1ae: V130 = 0xa0
0x1b0: V131 = 0x2
0x1b2: V132 = EXP 0x2 0xa0
0x1b3: V133 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b4: V134 = 0x4
0x1b6: V135 = CALLDATALOAD 0x4
0x1b7: V136 = AND V135 0xffffffffffffffffffffffffffffffffffffffff
0x1b8: V137 = 0x3fd
0x1bb: JUMP 0x3fd
---
Entry stack: [V11, V124]
Stack pops: 1
Stack additions: [0xbd, V136]
Exit stack: [V11, 0xbd, V136]

================================

Block 0x1bc
[0x1bc:0x1cf]
---
Predecessors: [0x8d]
Successors: [0x41d]
---
0x1bc JUMPDEST
0x1bd PUSH2 0xbd
0x1c0 PUSH1 0x1
0x1c2 PUSH1 0xa0
0x1c4 PUSH1 0x2
0x1c6 EXP
0x1c7 SUB
0x1c8 PUSH1 0x4
0x1ca CALLDATALOAD
0x1cb AND
0x1cc PUSH2 0x41d
0x1cf JUMP
---
0x1bc: JUMPDEST 
0x1bd: V138 = 0xbd
0x1c0: V139 = 0x1
0x1c2: V140 = 0xa0
0x1c4: V141 = 0x2
0x1c6: V142 = EXP 0x2 0xa0
0x1c7: V143 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c8: V144 = 0x4
0x1ca: V145 = CALLDATALOAD 0x4
0x1cb: V146 = AND V145 0xffffffffffffffffffffffffffffffffffffffff
0x1cc: V147 = 0x41d
0x1cf: JUMP 0x41d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xbd, V146]
Exit stack: [V11, 0xbd, V146]

================================

Block 0x1d0
[0x1d0:0x1d7]
---
Predecessors: [0x98]
Successors: [0x1d8, 0x1dc]
---
0x1d0 JUMPDEST
0x1d1 CALLVALUE
0x1d2 DUP1
0x1d3 ISZERO
0x1d4 PUSH2 0x1dc
0x1d7 JUMPI
---
0x1d0: JUMPDEST 
0x1d1: V148 = CALLVALUE
0x1d3: V149 = ISZERO V148
0x1d4: V150 = 0x1dc
0x1d7: JUMPI 0x1dc V149
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V148]
Exit stack: [V11, V148]

================================

Block 0x1d8
[0x1d8:0x1db]
---
Predecessors: [0x1d0]
Successors: []
---
0x1d8 PUSH1 0x0
0x1da DUP1
0x1db REVERT
---
0x1d8: V151 = 0x0
0x1db: REVERT 0x0 0x0
---
Entry stack: [V11, V148]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V148]

================================

Block 0x1dc
[0x1dc:0x1f0]
---
Predecessors: [0x1d0]
Successors: [0x49d]
---
0x1dc JUMPDEST
0x1dd POP
0x1de PUSH2 0xbd
0x1e1 PUSH1 0x1
0x1e3 PUSH1 0xa0
0x1e5 PUSH1 0x2
0x1e7 EXP
0x1e8 SUB
0x1e9 PUSH1 0x4
0x1eb CALLDATALOAD
0x1ec AND
0x1ed PUSH2 0x49d
0x1f0 JUMP
---
0x1dc: JUMPDEST 
0x1de: V152 = 0xbd
0x1e1: V153 = 0x1
0x1e3: V154 = 0xa0
0x1e5: V155 = 0x2
0x1e7: V156 = EXP 0x2 0xa0
0x1e8: V157 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e9: V158 = 0x4
0x1eb: V159 = CALLDATALOAD 0x4
0x1ec: V160 = AND V159 0xffffffffffffffffffffffffffffffffffffffff
0x1ed: V161 = 0x49d
0x1f0: JUMP 0x49d
---
Entry stack: [V11, V148]
Stack pops: 1
Stack additions: [0xbd, V160]
Exit stack: [V11, 0xbd, V160]

================================

Block 0x1f1
[0x1f1:0x203]
---
Predecessors: [0xb4]
Successors: [0x204, 0x208]
---
0x1f1 JUMPDEST
0x1f2 PUSH1 0x0
0x1f4 SLOAD
0x1f5 PUSH1 0x1
0x1f7 PUSH1 0xa0
0x1f9 PUSH1 0x2
0x1fb EXP
0x1fc SUB
0x1fd AND
0x1fe CALLER
0x1ff EQ
0x200 PUSH2 0x208
0x203 JUMPI
---
0x1f1: JUMPDEST 
0x1f2: V162 = 0x0
0x1f4: V163 = S[0x0]
0x1f5: V164 = 0x1
0x1f7: V165 = 0xa0
0x1f9: V166 = 0x2
0x1fb: V167 = EXP 0x2 0xa0
0x1fc: V168 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1fd: V169 = AND 0xffffffffffffffffffffffffffffffffffffffff V163
0x1fe: V170 = CALLER
0x1ff: V171 = EQ V170 V169
0x200: V172 = 0x208
0x203: JUMPI 0x208 V171
---
Entry stack: [V11, 0xbd]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbd]

================================

Block 0x204
[0x204:0x207]
---
Predecessors: [0x1f1]
Successors: []
---
0x204 PUSH1 0x0
0x206 DUP1
0x207 REVERT
---
0x204: V173 = 0x0
0x207: REVERT 0x0 0x0
---
Entry stack: [V11, 0xbd]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbd]

================================

Block 0x208
[0x208:0x220]
---
Predecessors: [0x1f1]
Successors: [0x221, 0x222]
---
0x208 JUMPDEST
0x209 PUSH1 0x0
0x20b PUSH1 0x2
0x20d DUP1
0x20e SLOAD
0x20f PUSH1 0xa0
0x211 PUSH1 0x2
0x213 EXP
0x214 SWAP1
0x215 DIV
0x216 PUSH1 0xff
0x218 AND
0x219 SWAP1
0x21a DUP2
0x21b GT
0x21c ISZERO
0x21d PUSH2 0x222
0x220 JUMPI
---
0x208: JUMPDEST 
0x209: V174 = 0x0
0x20b: V175 = 0x2
0x20e: V176 = S[0x2]
0x20f: V177 = 0xa0
0x211: V178 = 0x2
0x213: V179 = EXP 0x2 0xa0
0x215: V180 = DIV V176 0x10000000000000000000000000000000000000000
0x216: V181 = 0xff
0x218: V182 = AND 0xff V180
0x21b: V183 = GT V182 0x2
0x21c: V184 = ISZERO V183
0x21d: V185 = 0x222
0x220: JUMPI 0x222 V184
---
Entry stack: [V11, 0xbd]
Stack pops: 0
Stack additions: [0x0, V182]
Exit stack: [V11, 0xbd, 0x0, V182]

================================

Block 0x221
[0x221:0x221]
---
Predecessors: [0x208]
Successors: []
---
0x221 INVALID
---
0x221: INVALID 
---
Entry stack: [V11, 0xbd, 0x0, V182]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbd, 0x0, V182]

================================

Block 0x222
[0x222:0x227]
---
Predecessors: [0x208]
Successors: [0x228, 0x22c]
---
0x222 JUMPDEST
0x223 EQ
0x224 PUSH2 0x22c
0x227 JUMPI
---
0x222: JUMPDEST 
0x223: V186 = EQ V182 0x0
0x224: V187 = 0x22c
0x227: JUMPI 0x22c V186
---
Entry stack: [V11, 0xbd, 0x0, V182]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0xbd]

================================

Block 0x228
[0x228:0x22b]
---
Predecessors: [0x222]
Successors: []
---
0x228 PUSH1 0x0
0x22a DUP1
0x22b REVERT
---
0x228: V188 = 0x0
0x22b: REVERT 0x0 0x0
---
Entry stack: [V11, 0xbd]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbd]

================================

Block 0x22c
[0x22c:0x2ba]
---
Predecessors: [0x222]
Successors: [0x2bb, 0x2c4]
---
0x22c JUMPDEST
0x22d PUSH1 0x2
0x22f DUP1
0x230 SLOAD
0x231 PUSH21 0xff0000000000000000000000000000000000000000
0x247 NOT
0x248 AND
0x249 PUSH21 0x20000000000000000000000000000000000000000
0x25f OR
0x260 SWAP1
0x261 SSTORE
0x262 PUSH1 0x40
0x264 MLOAD
0x265 PUSH32 0x1cdde67b72a90f19919ac732a437ac2f7a10fc128d28c2a6e525d89ce5cd9d3a
0x286 SWAP1
0x287 PUSH1 0x0
0x289 SWAP1
0x28a LOG1
0x28b PUSH1 0x2
0x28d SLOAD
0x28e PUSH1 0x40
0x290 MLOAD
0x291 PUSH1 0x1
0x293 PUSH1 0xa0
0x295 PUSH1 0x2
0x297 EXP
0x298 SUB
0x299 SWAP1
0x29a SWAP2
0x29b AND
0x29c SWAP1
0x29d ADDRESS
0x29e BALANCE
0x29f DUP1
0x2a0 ISZERO
0x2a1 PUSH2 0x8fc
0x2a4 MUL
0x2a5 SWAP2
0x2a6 PUSH1 0x0
0x2a8 DUP2
0x2a9 DUP2
0x2aa DUP2
0x2ab DUP6
0x2ac DUP9
0x2ad DUP9
0x2ae CALL
0x2af SWAP4
0x2b0 POP
0x2b1 POP
0x2b2 POP
0x2b3 POP
0x2b4 ISZERO
0x2b5 DUP1
0x2b6 ISZERO
0x2b7 PUSH2 0x2c4
0x2ba JUMPI
---
0x22c: JUMPDEST 
0x22d: V189 = 0x2
0x230: V190 = S[0x2]
0x231: V191 = 0xff0000000000000000000000000000000000000000
0x247: V192 = NOT 0xff0000000000000000000000000000000000000000
0x248: V193 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V190
0x249: V194 = 0x20000000000000000000000000000000000000000
0x25f: V195 = OR 0x20000000000000000000000000000000000000000 V193
0x261: S[0x2] = V195
0x262: V196 = 0x40
0x264: V197 = M[0x40]
0x265: V198 = 0x1cdde67b72a90f19919ac732a437ac2f7a10fc128d28c2a6e525d89ce5cd9d3a
0x287: V199 = 0x0
0x28a: LOG V197 0x0 0x1cdde67b72a90f19919ac732a437ac2f7a10fc128d28c2a6e525d89ce5cd9d3a
0x28b: V200 = 0x2
0x28d: V201 = S[0x2]
0x28e: V202 = 0x40
0x290: V203 = M[0x40]
0x291: V204 = 0x1
0x293: V205 = 0xa0
0x295: V206 = 0x2
0x297: V207 = EXP 0x2 0xa0
0x298: V208 = SUB 0x10000000000000000000000000000000000000000 0x1
0x29b: V209 = AND V201 0xffffffffffffffffffffffffffffffffffffffff
0x29d: V210 = ADDRESS
0x29e: V211 = BALANCE V210
0x2a0: V212 = ISZERO V211
0x2a1: V213 = 0x8fc
0x2a4: V214 = MUL 0x8fc V212
0x2a6: V215 = 0x0
0x2ae: V216 = CALL V214 V209 V211 V203 0x0 V203 0x0
0x2b4: V217 = ISZERO V216
0x2b6: V218 = ISZERO V217
0x2b7: V219 = 0x2c4
0x2ba: JUMPI 0x2c4 V218
---
Entry stack: [V11, 0xbd]
Stack pops: 0
Stack additions: [V217]
Exit stack: [V11, 0xbd, V217]

================================

Block 0x2bb
[0x2bb:0x2c3]
---
Predecessors: [0x22c]
Successors: []
---
0x2bb RETURNDATASIZE
0x2bc PUSH1 0x0
0x2be DUP1
0x2bf RETURNDATACOPY
0x2c0 RETURNDATASIZE
0x2c1 PUSH1 0x0
0x2c3 REVERT
---
0x2bb: V220 = RETURNDATASIZE
0x2bc: V221 = 0x0
0x2bf: RETURNDATACOPY 0x0 0x0 V220
0x2c0: V222 = RETURNDATASIZE
0x2c1: V223 = 0x0
0x2c3: REVERT 0x0 V222
---
Entry stack: [V11, 0xbd, V217]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbd, V217]

================================

Block 0x2c4
[0x2c4:0x2c6]
---
Predecessors: [0x22c, 0x567]
Successors: [0xbd]
---
0x2c4 JUMPDEST
0x2c5 POP
0x2c6 JUMP
---
0x2c4: JUMPDEST 
0x2c6: JUMP 0xbd
---
Entry stack: [V11, 0xbd, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x2c7
[0x2c7:0x2d5]
---
Predecessors: [0xcb]
Successors: [0xd4]
---
0x2c7 JUMPDEST
0x2c8 PUSH1 0x2
0x2ca SLOAD
0x2cb PUSH1 0x1
0x2cd PUSH1 0xa0
0x2cf PUSH1 0x2
0x2d1 EXP
0x2d2 SUB
0x2d3 AND
0x2d4 DUP2
0x2d5 JUMP
---
0x2c7: JUMPDEST 
0x2c8: V224 = 0x2
0x2ca: V225 = S[0x2]
0x2cb: V226 = 0x1
0x2cd: V227 = 0xa0
0x2cf: V228 = 0x2
0x2d1: V229 = EXP 0x2 0xa0
0x2d2: V230 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d3: V231 = AND 0xffffffffffffffffffffffffffffffffffffffff V225
0x2d5: JUMP 0xd4
---
Entry stack: [V11, 0xd4]
Stack pops: 1
Stack additions: [S0, V231]
Exit stack: [V11, 0xd4, V231]

================================

Block 0x2d6
[0x2d6:0x2e8]
---
Predecessors: [0xfc]
Successors: [0x2e9, 0x2ed]
---
0x2d6 JUMPDEST
0x2d7 PUSH1 0x0
0x2d9 SLOAD
0x2da PUSH1 0x1
0x2dc PUSH1 0xa0
0x2de PUSH1 0x2
0x2e0 EXP
0x2e1 SUB
0x2e2 AND
0x2e3 CALLER
0x2e4 EQ
0x2e5 PUSH2 0x2ed
0x2e8 JUMPI
---
0x2d6: JUMPDEST 
0x2d7: V232 = 0x0
0x2d9: V233 = S[0x0]
0x2da: V234 = 0x1
0x2dc: V235 = 0xa0
0x2de: V236 = 0x2
0x2e0: V237 = EXP 0x2 0xa0
0x2e1: V238 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e2: V239 = AND 0xffffffffffffffffffffffffffffffffffffffff V233
0x2e3: V240 = CALLER
0x2e4: V241 = EQ V240 V239
0x2e5: V242 = 0x2ed
0x2e8: JUMPI 0x2ed V241
---
Entry stack: [V11, 0xbd]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbd]

================================

Block 0x2e9
[0x2e9:0x2ec]
---
Predecessors: [0x2d6]
Successors: []
---
0x2e9 PUSH1 0x0
0x2eb DUP1
0x2ec REVERT
---
0x2e9: V243 = 0x0
0x2ec: REVERT 0x0 0x0
---
Entry stack: [V11, 0xbd]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbd]

================================

Block 0x2ed
[0x2ed:0x341]
---
Predecessors: [0x2d6]
Successors: [0xbd]
---
0x2ed JUMPDEST
0x2ee PUSH1 0x0
0x2f0 DUP1
0x2f1 SLOAD
0x2f2 PUSH1 0x40
0x2f4 MLOAD
0x2f5 PUSH1 0x1
0x2f7 PUSH1 0xa0
0x2f9 PUSH1 0x2
0x2fb EXP
0x2fc SUB
0x2fd SWAP1
0x2fe SWAP2
0x2ff AND
0x300 SWAP2
0x301 PUSH32 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820
0x322 SWAP2
0x323 LOG2
0x324 PUSH1 0x0
0x326 DUP1
0x327 SLOAD
0x328 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x33d NOT
0x33e AND
0x33f SWAP1
0x340 SSTORE
0x341 JUMP
---
0x2ed: JUMPDEST 
0x2ee: V244 = 0x0
0x2f1: V245 = S[0x0]
0x2f2: V246 = 0x40
0x2f4: V247 = M[0x40]
0x2f5: V248 = 0x1
0x2f7: V249 = 0xa0
0x2f9: V250 = 0x2
0x2fb: V251 = EXP 0x2 0xa0
0x2fc: V252 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ff: V253 = AND V245 0xffffffffffffffffffffffffffffffffffffffff
0x301: V254 = 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820
0x323: LOG V247 0x0 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820 V253
0x324: V255 = 0x0
0x327: V256 = S[0x0]
0x328: V257 = 0xffffffffffffffffffffffffffffffffffffffff
0x33d: V258 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x33e: V259 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V256
0x340: S[0x0] = V259
0x341: JUMP 0xbd
---
Entry stack: [V11, 0xbd]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x342
[0x342:0x354]
---
Predecessors: [0x111]
Successors: [0x355, 0x359]
---
0x342 JUMPDEST
0x343 PUSH1 0x0
0x345 SLOAD
0x346 PUSH1 0x1
0x348 PUSH1 0xa0
0x34a PUSH1 0x2
0x34c EXP
0x34d SUB
0x34e AND
0x34f CALLER
0x350 EQ
0x351 PUSH2 0x359
0x354 JUMPI
---
0x342: JUMPDEST 
0x343: V260 = 0x0
0x345: V261 = S[0x0]
0x346: V262 = 0x1
0x348: V263 = 0xa0
0x34a: V264 = 0x2
0x34c: V265 = EXP 0x2 0xa0
0x34d: V266 = SUB 0x10000000000000000000000000000000000000000 0x1
0x34e: V267 = AND 0xffffffffffffffffffffffffffffffffffffffff V261
0x34f: V268 = CALLER
0x350: V269 = EQ V268 V267
0x351: V270 = 0x359
0x354: JUMPI 0x359 V269
---
Entry stack: [V11, 0xbd]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbd]

================================

Block 0x355
[0x355:0x358]
---
Predecessors: [0x342]
Successors: []
---
0x355 PUSH1 0x0
0x357 DUP1
0x358 REVERT
---
0x355: V271 = 0x0
0x358: REVERT 0x0 0x0
---
Entry stack: [V11, 0xbd]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbd]

================================

Block 0x359
[0x359:0x371]
---
Predecessors: [0x342]
Successors: [0x372, 0x373]
---
0x359 JUMPDEST
0x35a PUSH1 0x0
0x35c PUSH1 0x2
0x35e DUP1
0x35f SLOAD
0x360 PUSH1 0xa0
0x362 PUSH1 0x2
0x364 EXP
0x365 SWAP1
0x366 DIV
0x367 PUSH1 0xff
0x369 AND
0x36a SWAP1
0x36b DUP2
0x36c GT
0x36d ISZERO
0x36e PUSH2 0x373
0x371 JUMPI
---
0x359: JUMPDEST 
0x35a: V272 = 0x0
0x35c: V273 = 0x2
0x35f: V274 = S[0x2]
0x360: V275 = 0xa0
0x362: V276 = 0x2
0x364: V277 = EXP 0x2 0xa0
0x366: V278 = DIV V274 0x10000000000000000000000000000000000000000
0x367: V279 = 0xff
0x369: V280 = AND 0xff V278
0x36c: V281 = GT V280 0x2
0x36d: V282 = ISZERO V281
0x36e: V283 = 0x373
0x371: JUMPI 0x373 V282
---
Entry stack: [V11, 0xbd]
Stack pops: 0
Stack additions: [0x0, V280]
Exit stack: [V11, 0xbd, 0x0, V280]

================================

Block 0x372
[0x372:0x372]
---
Predecessors: [0x359]
Successors: []
---
0x372 INVALID
---
0x372: INVALID 
---
Entry stack: [V11, 0xbd, 0x0, V280]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbd, 0x0, V280]

================================

Block 0x373
[0x373:0x378]
---
Predecessors: [0x359]
Successors: [0x379, 0x37d]
---
0x373 JUMPDEST
0x374 EQ
0x375 PUSH2 0x37d
0x378 JUMPI
---
0x373: JUMPDEST 
0x374: V284 = EQ V280 0x0
0x375: V285 = 0x37d
0x378: JUMPI 0x37d V284
---
Entry stack: [V11, 0xbd, 0x0, V280]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0xbd]

================================

Block 0x379
[0x379:0x37c]
---
Predecessors: [0x373]
Successors: []
---
0x379 PUSH1 0x0
0x37b DUP1
0x37c REVERT
---
0x379: V286 = 0x0
0x37c: REVERT 0x0 0x0
---
Entry stack: [V11, 0xbd]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbd]

================================

Block 0x37d
[0x37d:0x3cb]
---
Predecessors: [0x373]
Successors: [0xbd]
---
0x37d JUMPDEST
0x37e PUSH1 0x2
0x380 DUP1
0x381 SLOAD
0x382 PUSH21 0xff0000000000000000000000000000000000000000
0x398 NOT
0x399 AND
0x39a PUSH1 0xa0
0x39c PUSH1 0x2
0x39e EXP
0x39f OR
0x3a0 SWAP1
0x3a1 SSTORE
0x3a2 PUSH1 0x40
0x3a4 MLOAD
0x3a5 PUSH32 0x599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b89
0x3c6 SWAP1
0x3c7 PUSH1 0x0
0x3c9 SWAP1
0x3ca LOG1
0x3cb JUMP
---
0x37d: JUMPDEST 
0x37e: V287 = 0x2
0x381: V288 = S[0x2]
0x382: V289 = 0xff0000000000000000000000000000000000000000
0x398: V290 = NOT 0xff0000000000000000000000000000000000000000
0x399: V291 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V288
0x39a: V292 = 0xa0
0x39c: V293 = 0x2
0x39e: V294 = EXP 0x2 0xa0
0x39f: V295 = OR 0x10000000000000000000000000000000000000000 V291
0x3a1: S[0x2] = V295
0x3a2: V296 = 0x40
0x3a4: V297 = M[0x40]
0x3a5: V298 = 0x599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b89
0x3c7: V299 = 0x0
0x3ca: LOG V297 0x0 0x599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b89
0x3cb: JUMP 0xbd
---
Entry stack: [V11, 0xbd]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x3cc
[0x3cc:0x3da]
---
Predecessors: [0x126]
Successors: [0xd4]
---
0x3cc JUMPDEST
0x3cd PUSH1 0x0
0x3cf SLOAD
0x3d0 PUSH1 0x1
0x3d2 PUSH1 0xa0
0x3d4 PUSH1 0x2
0x3d6 EXP
0x3d7 SUB
0x3d8 AND
0x3d9 DUP2
0x3da JUMP
---
0x3cc: JUMPDEST 
0x3cd: V300 = 0x0
0x3cf: V301 = S[0x0]
0x3d0: V302 = 0x1
0x3d2: V303 = 0xa0
0x3d4: V304 = 0x2
0x3d6: V305 = EXP 0x2 0xa0
0x3d7: V306 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d8: V307 = AND 0xffffffffffffffffffffffffffffffffffffffff V301
0x3da: JUMP 0xd4
---
Entry stack: [V11, 0xd4]
Stack pops: 1
Stack additions: [S0, V307]
Exit stack: [V11, 0xd4, V307]

================================

Block 0x3db
[0x3db:0x3ea]
---
Predecessors: [0x13b]
Successors: [0x144]
---
0x3db JUMPDEST
0x3dc PUSH1 0x2
0x3de SLOAD
0x3df PUSH1 0xa0
0x3e1 PUSH1 0x2
0x3e3 EXP
0x3e4 SWAP1
0x3e5 DIV
0x3e6 PUSH1 0xff
0x3e8 AND
0x3e9 DUP2
0x3ea JUMP
---
0x3db: JUMPDEST 
0x3dc: V308 = 0x2
0x3de: V309 = S[0x2]
0x3df: V310 = 0xa0
0x3e1: V311 = 0x2
0x3e3: V312 = EXP 0x2 0xa0
0x3e5: V313 = DIV V309 0x10000000000000000000000000000000000000000
0x3e6: V314 = 0xff
0x3e8: V315 = AND 0xff V313
0x3ea: JUMP 0x144
---
Entry stack: [V11, 0x144]
Stack pops: 1
Stack additions: [S0, V315]
Exit stack: [V11, 0x144, V315]

================================

Block 0x3eb
[0x3eb:0x3fc]
---
Predecessors: [0x174]
Successors: [0x189]
---
0x3eb JUMPDEST
0x3ec PUSH1 0x1
0x3ee PUSH1 0x20
0x3f0 MSTORE
0x3f1 PUSH1 0x0
0x3f3 SWAP1
0x3f4 DUP2
0x3f5 MSTORE
0x3f6 PUSH1 0x40
0x3f8 SWAP1
0x3f9 SHA3
0x3fa SLOAD
0x3fb DUP2
0x3fc JUMP
---
0x3eb: JUMPDEST 
0x3ec: V316 = 0x1
0x3ee: V317 = 0x20
0x3f0: M[0x20] = 0x1
0x3f1: V318 = 0x0
0x3f5: M[0x0] = V116
0x3f6: V319 = 0x40
0x3f9: V320 = SHA3 0x0 0x40
0x3fa: V321 = S[V320]
0x3fc: JUMP 0x189
---
Entry stack: [V11, 0x189, V116]
Stack pops: 2
Stack additions: [S1, V321]
Exit stack: [V11, 0x189, V321]

================================

Block 0x3fd
[0x3fd:0x40f]
---
Predecessors: [0x1a7]
Successors: [0x410, 0x414]
---
0x3fd JUMPDEST
0x3fe PUSH1 0x0
0x400 SLOAD
0x401 PUSH1 0x1
0x403 PUSH1 0xa0
0x405 PUSH1 0x2
0x407 EXP
0x408 SUB
0x409 AND
0x40a CALLER
0x40b EQ
0x40c PUSH2 0x414
0x40f JUMPI
---
0x3fd: JUMPDEST 
0x3fe: V322 = 0x0
0x400: V323 = S[0x0]
0x401: V324 = 0x1
0x403: V325 = 0xa0
0x405: V326 = 0x2
0x407: V327 = EXP 0x2 0xa0
0x408: V328 = SUB 0x10000000000000000000000000000000000000000 0x1
0x409: V329 = AND 0xffffffffffffffffffffffffffffffffffffffff V323
0x40a: V330 = CALLER
0x40b: V331 = EQ V330 V329
0x40c: V332 = 0x414
0x40f: JUMPI 0x414 V331
---
Entry stack: [V11, 0xbd, V136]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbd, V136]

================================

Block 0x410
[0x410:0x413]
---
Predecessors: [0x3fd]
Successors: []
---
0x410 PUSH1 0x0
0x412 DUP1
0x413 REVERT
---
0x410: V333 = 0x0
0x413: REVERT 0x0 0x0
---
Entry stack: [V11, 0xbd, V136]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbd, V136]

================================

Block 0x414
[0x414:0x41c]
---
Predecessors: [0x3fd]
Successors: [0x552]
---
0x414 JUMPDEST
0x415 PUSH2 0x2c4
0x418 DUP2
0x419 PUSH2 0x552
0x41c JUMP
---
0x414: JUMPDEST 
0x415: V334 = 0x2c4
0x419: V335 = 0x552
0x41c: JUMP 0x552
---
Entry stack: [V11, 0xbd, V136]
Stack pops: 1
Stack additions: [S0, 0x2c4, S0]
Exit stack: [V11, 0xbd, V136, 0x2c4, V136]

================================

Block 0x41d
[0x41d:0x42f]
---
Predecessors: [0x1bc]
Successors: [0x430, 0x434]
---
0x41d JUMPDEST
0x41e PUSH1 0x0
0x420 SLOAD
0x421 PUSH1 0x1
0x423 PUSH1 0xa0
0x425 PUSH1 0x2
0x427 EXP
0x428 SUB
0x429 AND
0x42a CALLER
0x42b EQ
0x42c PUSH2 0x434
0x42f JUMPI
---
0x41d: JUMPDEST 
0x41e: V336 = 0x0
0x420: V337 = S[0x0]
0x421: V338 = 0x1
0x423: V339 = 0xa0
0x425: V340 = 0x2
0x427: V341 = EXP 0x2 0xa0
0x428: V342 = SUB 0x10000000000000000000000000000000000000000 0x1
0x429: V343 = AND 0xffffffffffffffffffffffffffffffffffffffff V337
0x42a: V344 = CALLER
0x42b: V345 = EQ V344 V343
0x42c: V346 = 0x434
0x42f: JUMPI 0x434 V345
---
Entry stack: [V11, 0xbd, V146]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbd, V146]

================================

Block 0x430
[0x430:0x433]
---
Predecessors: [0x41d]
Successors: []
---
0x430 PUSH1 0x0
0x432 DUP1
0x433 REVERT
---
0x430: V347 = 0x0
0x433: REVERT 0x0 0x0
---
Entry stack: [V11, 0xbd, V146]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbd, V146]

================================

Block 0x434
[0x434:0x44c]
---
Predecessors: [0x41d]
Successors: [0x44d, 0x44e]
---
0x434 JUMPDEST
0x435 PUSH1 0x0
0x437 PUSH1 0x2
0x439 DUP1
0x43a SLOAD
0x43b PUSH1 0xa0
0x43d PUSH1 0x2
0x43f EXP
0x440 SWAP1
0x441 DIV
0x442 PUSH1 0xff
0x444 AND
0x445 SWAP1
0x446 DUP2
0x447 GT
0x448 ISZERO
0x449 PUSH2 0x44e
0x44c JUMPI
---
0x434: JUMPDEST 
0x435: V348 = 0x0
0x437: V349 = 0x2
0x43a: V350 = S[0x2]
0x43b: V351 = 0xa0
0x43d: V352 = 0x2
0x43f: V353 = EXP 0x2 0xa0
0x441: V354 = DIV V350 0x10000000000000000000000000000000000000000
0x442: V355 = 0xff
0x444: V356 = AND 0xff V354
0x447: V357 = GT V356 0x2
0x448: V358 = ISZERO V357
0x449: V359 = 0x44e
0x44c: JUMPI 0x44e V358
---
Entry stack: [V11, 0xbd, V146]
Stack pops: 0
Stack additions: [0x0, V356]
Exit stack: [V11, 0xbd, V146, 0x0, V356]

================================

Block 0x44d
[0x44d:0x44d]
---
Predecessors: [0x434]
Successors: []
---
0x44d INVALID
---
0x44d: INVALID 
---
Entry stack: [V11, 0xbd, V146, 0x0, V356]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbd, V146, 0x0, V356]

================================

Block 0x44e
[0x44e:0x453]
---
Predecessors: [0x434]
Successors: [0x454, 0x458]
---
0x44e JUMPDEST
0x44f EQ
0x450 PUSH2 0x458
0x453 JUMPI
---
0x44e: JUMPDEST 
0x44f: V360 = EQ V356 0x0
0x450: V361 = 0x458
0x453: JUMPI 0x458 V360
---
Entry stack: [V11, 0xbd, V146, 0x0, V356]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0xbd, V146]

================================

Block 0x454
[0x454:0x457]
---
Predecessors: [0x44e]
Successors: []
---
0x454 PUSH1 0x0
0x456 DUP1
0x457 REVERT
---
0x454: V362 = 0x0
0x457: REVERT 0x0 0x0
---
Entry stack: [V11, 0xbd, V146]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbd, V146]

================================

Block 0x458
[0x458:0x480]
---
Predecessors: [0x44e]
Successors: [0x5cf]
---
0x458 JUMPDEST
0x459 PUSH1 0x1
0x45b PUSH1 0xa0
0x45d PUSH1 0x2
0x45f EXP
0x460 SUB
0x461 DUP2
0x462 AND
0x463 PUSH1 0x0
0x465 SWAP1
0x466 DUP2
0x467 MSTORE
0x468 PUSH1 0x1
0x46a PUSH1 0x20
0x46c MSTORE
0x46d PUSH1 0x40
0x46f SWAP1
0x470 SHA3
0x471 SLOAD
0x472 PUSH2 0x481
0x475 SWAP1
0x476 CALLVALUE
0x477 PUSH4 0xffffffff
0x47c PUSH2 0x5cf
0x47f AND
0x480 JUMP
---
0x458: JUMPDEST 
0x459: V363 = 0x1
0x45b: V364 = 0xa0
0x45d: V365 = 0x2
0x45f: V366 = EXP 0x2 0xa0
0x460: V367 = SUB 0x10000000000000000000000000000000000000000 0x1
0x462: V368 = AND V146 0xffffffffffffffffffffffffffffffffffffffff
0x463: V369 = 0x0
0x467: M[0x0] = V368
0x468: V370 = 0x1
0x46a: V371 = 0x20
0x46c: M[0x20] = 0x1
0x46d: V372 = 0x40
0x470: V373 = SHA3 0x0 0x40
0x471: V374 = S[V373]
0x472: V375 = 0x481
0x476: V376 = CALLVALUE
0x477: V377 = 0xffffffff
0x47c: V378 = 0x5cf
0x47f: V379 = AND 0x5cf 0xffffffff
0x480: JUMP 0x5cf
---
Entry stack: [V11, 0xbd, V146]
Stack pops: 1
Stack additions: [S0, 0x481, V374, V376]
Exit stack: [V11, 0xbd, V146, 0x481, V374, V376]

================================

Block 0x481
[0x481:0x49c]
---
Predecessors: [0x5dc]
Successors: [0xbd]
---
0x481 JUMPDEST
0x482 PUSH1 0x1
0x484 PUSH1 0xa0
0x486 PUSH1 0x2
0x488 EXP
0x489 SUB
0x48a SWAP1
0x48b SWAP2
0x48c AND
0x48d PUSH1 0x0
0x48f SWAP1
0x490 DUP2
0x491 MSTORE
0x492 PUSH1 0x1
0x494 PUSH1 0x20
0x496 MSTORE
0x497 PUSH1 0x40
0x499 SWAP1
0x49a SHA3
0x49b SSTORE
0x49c JUMP
---
0x481: JUMPDEST 
0x482: V380 = 0x1
0x484: V381 = 0xa0
0x486: V382 = 0x2
0x488: V383 = EXP 0x2 0xa0
0x489: V384 = SUB 0x10000000000000000000000000000000000000000 0x1
0x48c: V385 = AND V146 0xffffffffffffffffffffffffffffffffffffffff
0x48d: V386 = 0x0
0x491: M[0x0] = V385
0x492: V387 = 0x1
0x494: V388 = 0x20
0x496: M[0x20] = 0x1
0x497: V389 = 0x40
0x49a: V390 = SHA3 0x0 0x40
0x49b: S[V390] = V478
0x49c: JUMP 0xbd
---
Entry stack: [V11, 0xbd, V146, V478]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x49d
[0x49d:0x4b7]
---
Predecessors: [0x1dc]
Successors: [0x4b8, 0x4b9]
---
0x49d JUMPDEST
0x49e PUSH1 0x0
0x4a0 PUSH1 0x1
0x4a2 PUSH1 0x2
0x4a4 DUP1
0x4a5 SLOAD
0x4a6 PUSH1 0xa0
0x4a8 PUSH1 0x2
0x4aa EXP
0x4ab SWAP1
0x4ac DIV
0x4ad PUSH1 0xff
0x4af AND
0x4b0 SWAP1
0x4b1 DUP2
0x4b2 GT
0x4b3 ISZERO
0x4b4 PUSH2 0x4b9
0x4b7 JUMPI
---
0x49d: JUMPDEST 
0x49e: V391 = 0x0
0x4a0: V392 = 0x1
0x4a2: V393 = 0x2
0x4a5: V394 = S[0x2]
0x4a6: V395 = 0xa0
0x4a8: V396 = 0x2
0x4aa: V397 = EXP 0x2 0xa0
0x4ac: V398 = DIV V394 0x10000000000000000000000000000000000000000
0x4ad: V399 = 0xff
0x4af: V400 = AND 0xff V398
0x4b2: V401 = GT V400 0x2
0x4b3: V402 = ISZERO V401
0x4b4: V403 = 0x4b9
0x4b7: JUMPI 0x4b9 V402
---
Entry stack: [V11, 0xbd, V160]
Stack pops: 0
Stack additions: [0x0, 0x1, V400]
Exit stack: [V11, 0xbd, V160, 0x0, 0x1, V400]

================================

Block 0x4b8
[0x4b8:0x4b8]
---
Predecessors: [0x49d]
Successors: []
---
0x4b8 INVALID
---
0x4b8: INVALID 
---
Entry stack: [V11, 0xbd, V160, 0x0, 0x1, V400]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbd, V160, 0x0, 0x1, V400]

================================

Block 0x4b9
[0x4b9:0x4be]
---
Predecessors: [0x49d]
Successors: [0x4bf, 0x4c3]
---
0x4b9 JUMPDEST
0x4ba EQ
0x4bb PUSH2 0x4c3
0x4be JUMPI
---
0x4b9: JUMPDEST 
0x4ba: V404 = EQ V400 0x1
0x4bb: V405 = 0x4c3
0x4be: JUMPI 0x4c3 V404
---
Entry stack: [V11, 0xbd, V160, 0x0, 0x1, V400]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0xbd, V160, 0x0]

================================

Block 0x4bf
[0x4bf:0x4c2]
---
Predecessors: [0x4b9]
Successors: []
---
0x4bf PUSH1 0x0
0x4c1 DUP1
0x4c2 REVERT
---
0x4bf: V406 = 0x0
0x4c2: REVERT 0x0 0x0
---
Entry stack: [V11, 0xbd, V160, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbd, V160, 0x0]

================================

Block 0x4c3
[0x4c3:0x504]
---
Predecessors: [0x4b9]
Successors: [0x505, 0x50e]
---
0x4c3 JUMPDEST
0x4c4 POP
0x4c5 PUSH1 0x1
0x4c7 PUSH1 0xa0
0x4c9 PUSH1 0x2
0x4cb EXP
0x4cc SUB
0x4cd DUP2
0x4ce AND
0x4cf PUSH1 0x0
0x4d1 DUP2
0x4d2 DUP2
0x4d3 MSTORE
0x4d4 PUSH1 0x1
0x4d6 PUSH1 0x20
0x4d8 MSTORE
0x4d9 PUSH1 0x40
0x4db DUP1
0x4dc DUP3
0x4dd SHA3
0x4de DUP1
0x4df SLOAD
0x4e0 SWAP1
0x4e1 DUP4
0x4e2 SWAP1
0x4e3 SSTORE
0x4e4 SWAP1
0x4e5 MLOAD
0x4e6 SWAP1
0x4e7 SWAP3
0x4e8 SWAP2
0x4e9 DUP4
0x4ea ISZERO
0x4eb PUSH2 0x8fc
0x4ee MUL
0x4ef SWAP2
0x4f0 DUP5
0x4f1 SWAP2
0x4f2 DUP2
0x4f3 DUP2
0x4f4 DUP2
0x4f5 DUP6
0x4f6 DUP9
0x4f7 DUP9
0x4f8 CALL
0x4f9 SWAP4
0x4fa POP
0x4fb POP
0x4fc POP
0x4fd POP
0x4fe ISZERO
0x4ff DUP1
0x500 ISZERO
0x501 PUSH2 0x50e
0x504 JUMPI
---
0x4c3: JUMPDEST 
0x4c5: V407 = 0x1
0x4c7: V408 = 0xa0
0x4c9: V409 = 0x2
0x4cb: V410 = EXP 0x2 0xa0
0x4cc: V411 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ce: V412 = AND V160 0xffffffffffffffffffffffffffffffffffffffff
0x4cf: V413 = 0x0
0x4d3: M[0x0] = V412
0x4d4: V414 = 0x1
0x4d6: V415 = 0x20
0x4d8: M[0x20] = 0x1
0x4d9: V416 = 0x40
0x4dd: V417 = SHA3 0x0 0x40
0x4df: V418 = S[V417]
0x4e3: S[V417] = 0x0
0x4e5: V419 = M[0x40]
0x4ea: V420 = ISZERO V418
0x4eb: V421 = 0x8fc
0x4ee: V422 = MUL 0x8fc V420
0x4f8: V423 = CALL V422 V412 V418 V419 0x0 V419 0x0
0x4fe: V424 = ISZERO V423
0x500: V425 = ISZERO V424
0x501: V426 = 0x50e
0x504: JUMPI 0x50e V425
---
Entry stack: [V11, 0xbd, V160, 0x0]
Stack pops: 2
Stack additions: [S1, V418, V424]
Exit stack: [V11, 0xbd, V160, V418, V424]

================================

Block 0x505
[0x505:0x50d]
---
Predecessors: [0x4c3]
Successors: []
---
0x505 RETURNDATASIZE
0x506 PUSH1 0x0
0x508 DUP1
0x509 RETURNDATACOPY
0x50a RETURNDATASIZE
0x50b PUSH1 0x0
0x50d REVERT
---
0x505: V427 = RETURNDATASIZE
0x506: V428 = 0x0
0x509: RETURNDATACOPY 0x0 0x0 V427
0x50a: V429 = RETURNDATASIZE
0x50b: V430 = 0x0
0x50d: REVERT 0x0 V429
---
Entry stack: [V11, 0xbd, V160, V418, V424]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbd, V160, V418, V424]

================================

Block 0x50e
[0x50e:0x551]
---
Predecessors: [0x4c3]
Successors: [0xbd]
---
0x50e JUMPDEST
0x50f POP
0x510 PUSH1 0x40
0x512 DUP1
0x513 MLOAD
0x514 DUP3
0x515 DUP2
0x516 MSTORE
0x517 SWAP1
0x518 MLOAD
0x519 PUSH1 0x1
0x51b PUSH1 0xa0
0x51d PUSH1 0x2
0x51f EXP
0x520 SUB
0x521 DUP5
0x522 AND
0x523 SWAP2
0x524 PUSH32 0xd7dee2702d63ad89917b6a4da9981c90c4d24f8c2bdfd64c604ecae57d8d0651
0x545 SWAP2
0x546 SWAP1
0x547 DUP2
0x548 SWAP1
0x549 SUB
0x54a PUSH1 0x20
0x54c ADD
0x54d SWAP1
0x54e LOG2
0x54f POP
0x550 POP
0x551 JUMP
---
0x50e: JUMPDEST 
0x510: V431 = 0x40
0x513: V432 = M[0x40]
0x516: M[V432] = V418
0x518: V433 = M[0x40]
0x519: V434 = 0x1
0x51b: V435 = 0xa0
0x51d: V436 = 0x2
0x51f: V437 = EXP 0x2 0xa0
0x520: V438 = SUB 0x10000000000000000000000000000000000000000 0x1
0x522: V439 = AND V160 0xffffffffffffffffffffffffffffffffffffffff
0x524: V440 = 0xd7dee2702d63ad89917b6a4da9981c90c4d24f8c2bdfd64c604ecae57d8d0651
0x549: V441 = SUB V432 V433
0x54a: V442 = 0x20
0x54c: V443 = ADD 0x20 V441
0x54e: LOG V433 V443 0xd7dee2702d63ad89917b6a4da9981c90c4d24f8c2bdfd64c604ecae57d8d0651 V439
0x551: JUMP 0xbd
---
Entry stack: [V11, 0xbd, V160, V418, V424]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x552
[0x552:0x562]
---
Predecessors: [0x414]
Successors: [0x563, 0x567]
---
0x552 JUMPDEST
0x553 PUSH1 0x1
0x555 PUSH1 0xa0
0x557 PUSH1 0x2
0x559 EXP
0x55a SUB
0x55b DUP2
0x55c AND
0x55d ISZERO
0x55e ISZERO
0x55f PUSH2 0x567
0x562 JUMPI
---
0x552: JUMPDEST 
0x553: V444 = 0x1
0x555: V445 = 0xa0
0x557: V446 = 0x2
0x559: V447 = EXP 0x2 0xa0
0x55a: V448 = SUB 0x10000000000000000000000000000000000000000 0x1
0x55c: V449 = AND V136 0xffffffffffffffffffffffffffffffffffffffff
0x55d: V450 = ISZERO V449
0x55e: V451 = ISZERO V450
0x55f: V452 = 0x567
0x562: JUMPI 0x567 V451
---
Entry stack: [V11, 0xbd, V136, 0x2c4, V136]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xbd, V136, 0x2c4, V136]

================================

Block 0x563
[0x563:0x566]
---
Predecessors: [0x552]
Successors: []
---
0x563 PUSH1 0x0
0x565 DUP1
0x566 REVERT
---
0x563: V453 = 0x0
0x566: REVERT 0x0 0x0
---
Entry stack: [V11, 0xbd, V136, 0x2c4, V136]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbd, V136, 0x2c4, V136]

================================

Block 0x567
[0x567:0x5ce]
---
Predecessors: [0x552]
Successors: [0x2c4]
---
0x567 JUMPDEST
0x568 PUSH1 0x0
0x56a DUP1
0x56b SLOAD
0x56c PUSH1 0x40
0x56e MLOAD
0x56f PUSH1 0x1
0x571 PUSH1 0xa0
0x573 PUSH1 0x2
0x575 EXP
0x576 SUB
0x577 DUP1
0x578 DUP6
0x579 AND
0x57a SWAP4
0x57b SWAP3
0x57c AND
0x57d SWAP2
0x57e PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x59f SWAP2
0x5a0 LOG3
0x5a1 PUSH1 0x0
0x5a3 DUP1
0x5a4 SLOAD
0x5a5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5ba NOT
0x5bb AND
0x5bc PUSH1 0x1
0x5be PUSH1 0xa0
0x5c0 PUSH1 0x2
0x5c2 EXP
0x5c3 SUB
0x5c4 SWAP3
0x5c5 SWAP1
0x5c6 SWAP3
0x5c7 AND
0x5c8 SWAP2
0x5c9 SWAP1
0x5ca SWAP2
0x5cb OR
0x5cc SWAP1
0x5cd SSTORE
0x5ce JUMP
---
0x567: JUMPDEST 
0x568: V454 = 0x0
0x56b: V455 = S[0x0]
0x56c: V456 = 0x40
0x56e: V457 = M[0x40]
0x56f: V458 = 0x1
0x571: V459 = 0xa0
0x573: V460 = 0x2
0x575: V461 = EXP 0x2 0xa0
0x576: V462 = SUB 0x10000000000000000000000000000000000000000 0x1
0x579: V463 = AND V136 0xffffffffffffffffffffffffffffffffffffffff
0x57c: V464 = AND V455 0xffffffffffffffffffffffffffffffffffffffff
0x57e: V465 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x5a0: LOG V457 0x0 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V464 V463
0x5a1: V466 = 0x0
0x5a4: V467 = S[0x0]
0x5a5: V468 = 0xffffffffffffffffffffffffffffffffffffffff
0x5ba: V469 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x5bb: V470 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V467
0x5bc: V471 = 0x1
0x5be: V472 = 0xa0
0x5c0: V473 = 0x2
0x5c2: V474 = EXP 0x2 0xa0
0x5c3: V475 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5c7: V476 = AND 0xffffffffffffffffffffffffffffffffffffffff V136
0x5cb: V477 = OR V476 V470
0x5cd: S[0x0] = V477
0x5ce: JUMP 0x2c4
---
Entry stack: [V11, 0xbd, V136, 0x2c4, V136]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0xbd, V136]

================================

Block 0x5cf
[0x5cf:0x5da]
---
Predecessors: [0x458]
Successors: [0x5db, 0x5dc]
---
0x5cf JUMPDEST
0x5d0 DUP2
0x5d1 DUP2
0x5d2 ADD
0x5d3 DUP3
0x5d4 DUP2
0x5d5 LT
0x5d6 ISZERO
0x5d7 PUSH2 0x5dc
0x5da JUMPI
---
0x5cf: JUMPDEST 
0x5d2: V478 = ADD V376 V374
0x5d5: V479 = LT V478 V374
0x5d6: V480 = ISZERO V479
0x5d7: V481 = 0x5dc
0x5da: JUMPI 0x5dc V480
---
Entry stack: [V11, 0xbd, V146, 0x481, V374, V376]
Stack pops: 2
Stack additions: [S1, S0, V478]
Exit stack: [V11, 0xbd, V146, 0x481, V374, V376, V478]

================================

Block 0x5db
[0x5db:0x5db]
---
Predecessors: [0x5cf]
Successors: []
---
0x5db INVALID
---
0x5db: INVALID 
---
Entry stack: [V11, 0xbd, V146, 0x481, V374, V376, V478]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xbd, V146, 0x481, V374, V376, V478]

================================

Block 0x5dc
[0x5dc:0x5e1]
---
Predecessors: [0x5cf]
Successors: [0x481]
---
0x5dc JUMPDEST
0x5dd SWAP3
0x5de SWAP2
0x5df POP
0x5e0 POP
0x5e1 JUMP
---
0x5dc: JUMPDEST 
0x5e1: JUMP 0x481
---
Entry stack: [V11, 0xbd, V146, 0x481, V374, V376, V478]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V11, 0xbd, V146, V478]

================================

Block 0x5e2
[0x5e2:0x624]
---
Predecessors: []
Successors: []
---
0x5e2 STOP
0x5e3 LOG1
0x5e4 PUSH6 0x627a7a723058
0x5eb SHA3
0x5ec PUSH13 0x1fef96219d67a2b6e6ecfab5f7
0x5fa PC
0x5fb SWAP10
0x5fc MISSING 0x2b
0x5fd AND
0x5fe MISSING 0x4a
0x5ff MUL
0x600 GASLIMIT
0x601 EXP
0x602 SELFDESTRUCT
0x603 MISSING 0xbe
0x604 MISSING 0xc2
0x605 PUSH31 0x656af6f8527a0029
---
0x5e2: STOP 
0x5e3: LOG S0 S1 S2
0x5e4: V482 = 0x627a7a723058
0x5eb: V483 = SHA3 0x627a7a723058 S3
0x5ec: V484 = 0x1fef96219d67a2b6e6ecfab5f7
0x5fa: V485 = PC
0x5fc: MISSING 0x2b
0x5fd: V486 = AND S0 S1
0x5fe: MISSING 0x4a
0x5ff: V487 = MUL S0 S1
0x600: V488 = GASLIMIT
0x601: V489 = EXP V488 V487
0x602: SELFDESTRUCT V489
0x603: MISSING 0xbe
0x604: MISSING 0xc2
0x605: V490 = 0x656af6f8527a0029
---
Entry stack: []
Stack pops: 0
Stack additions: [S11, 0x1fef96219d67a2b6e6ecfab5f7, V483, S4, S5, S6, S7, S8, S9, S10, V485, V486, 0x656af6f8527a0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x43d726d6
Entry block: 0xa8
Exit block: 0xbd
Body: 0xa8, 0xb0, 0xb4, 0xbd, 0x1f1, 0x204, 0x208, 0x221, 0x222, 0x228, 0x22c, 0x2bb, 0x2c4

Function 1:
Public function signature: 0x521eb273
Entry block: 0xbf
Exit block: 0xd4
Body: 0xbf, 0xc7, 0xcb, 0xd4, 0x2c7

Function 2:
Public function signature: 0x715018a6
Entry block: 0xf0
Exit block: 0xbd
Body: 0xbd, 0xf0, 0xf8, 0xfc, 0x2d6, 0x2e9, 0x2ed

Function 3:
Public function signature: 0x8c52dc41
Entry block: 0x105
Exit block: 0xbd
Body: 0xbd, 0x105, 0x10d, 0x111, 0x342, 0x355, 0x359, 0x372, 0x373, 0x379, 0x37d

Function 4:
Public function signature: 0x8da5cb5b
Entry block: 0x11a
Exit block: 0xd4
Body: 0xd4, 0x11a, 0x122, 0x126, 0x3cc

Function 5:
Public function signature: 0xc19d93fb
Entry block: 0x12f
Exit block: 0x154
Body: 0x12f, 0x137, 0x13b, 0x144, 0x153, 0x154, 0x3db

Function 6:
Public function signature: 0xcb13cddb
Entry block: 0x168
Exit block: 0x189
Body: 0x168, 0x170, 0x174, 0x189, 0x3eb

Function 7:
Public function signature: 0xf2fde38b
Entry block: 0x19b
Exit block: 0xbd
Body: 0xbd, 0x19b, 0x1a3, 0x1a7, 0x2c4, 0x3fd, 0x410, 0x414, 0x552, 0x563, 0x567

Function 8:
Public function signature: 0xf340fa01
Entry block: 0x1bc
Exit block: 0xbd
Body: 0xbd, 0x1bc, 0x41d, 0x430, 0x434, 0x44d, 0x44e, 0x454, 0x458, 0x481, 0x5cf, 0x5db, 0x5dc

Function 9:
Public function signature: 0xfa89401a
Entry block: 0x1d0
Exit block: 0xbd
Body: 0xbd, 0x1d0, 0x1d8, 0x1dc, 0x49d, 0x4b8, 0x4b9, 0x4bf, 0x4c3, 0x505, 0x50e

Function 10:
Public fallback function
Entry block: 0xa3
Exit block: 0xa3
Body: 0xa3

