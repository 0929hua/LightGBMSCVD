Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x56]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x56
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x56
0xc: JUMPI 0x56 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x93]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x71064e2
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x93
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x71064e2
0x3b: V13 = EQ V11 0x71064e2
0x3c: V14 = 0x93
0x3f: JUMPI 0x93 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xaa]
---
0x40 DUP1
0x41 PUSH4 0x30057c18
0x46 EQ
0x47 PUSH2 0xaa
0x4a JUMPI
---
0x41: V15 = 0x30057c18
0x46: V16 = EQ 0x30057c18 V11
0x47: V17 = 0xaa
0x4a: JUMPI 0xaa V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xcb]
---
0x4b DUP1
0x4c PUSH4 0xa50b5bb8
0x51 EQ
0x52 PUSH2 0xcb
0x55 JUMPI
---
0x4c: V18 = 0xa50b5bb8
0x51: V19 = EQ 0xa50b5bb8 V11
0x52: V20 = 0xcb
0x55: JUMPI 0xcb V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x86]
---
Predecessors: [0x0, 0x4b]
Successors: [0x87, 0x90]
---
0x56 JUMPDEST
0x57 PUSH1 0x1
0x59 SLOAD
0x5a PUSH1 0x40
0x5c MLOAD
0x5d PUSH1 0x1
0x5f PUSH1 0xa0
0x61 PUSH1 0x2
0x63 EXP
0x64 SUB
0x65 SWAP1
0x66 SWAP2
0x67 AND
0x68 SWAP1
0x69 ADDRESS
0x6a BALANCE
0x6b DUP1
0x6c ISZERO
0x6d PUSH2 0x8fc
0x70 MUL
0x71 SWAP2
0x72 PUSH1 0x0
0x74 DUP2
0x75 DUP2
0x76 DUP2
0x77 DUP6
0x78 DUP9
0x79 DUP9
0x7a CALL
0x7b SWAP4
0x7c POP
0x7d POP
0x7e POP
0x7f POP
0x80 ISZERO
0x81 DUP1
0x82 ISZERO
0x83 PUSH2 0x90
0x86 JUMPI
---
0x56: JUMPDEST 
0x57: V21 = 0x1
0x59: V22 = S[0x1]
0x5a: V23 = 0x40
0x5c: V24 = M[0x40]
0x5d: V25 = 0x1
0x5f: V26 = 0xa0
0x61: V27 = 0x2
0x63: V28 = EXP 0x2 0xa0
0x64: V29 = SUB 0x10000000000000000000000000000000000000000 0x1
0x67: V30 = AND V22 0xffffffffffffffffffffffffffffffffffffffff
0x69: V31 = ADDRESS
0x6a: V32 = BALANCE V31
0x6c: V33 = ISZERO V32
0x6d: V34 = 0x8fc
0x70: V35 = MUL 0x8fc V33
0x72: V36 = 0x0
0x7a: V37 = CALL V35 V30 V32 V24 0x0 V24 0x0
0x80: V38 = ISZERO V37
0x82: V39 = ISZERO V38
0x83: V40 = 0x90
0x86: JUMPI 0x90 V39
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V38]
Exit stack: [V11, V38]

================================

Block 0x87
[0x87:0x8f]
---
Predecessors: [0x56]
Successors: []
---
0x87 RETURNDATASIZE
0x88 PUSH1 0x0
0x8a DUP1
0x8b RETURNDATACOPY
0x8c RETURNDATASIZE
0x8d PUSH1 0x0
0x8f REVERT
---
0x87: V41 = RETURNDATASIZE
0x88: V42 = 0x0
0x8b: RETURNDATACOPY 0x0 0x0 V41
0x8c: V43 = RETURNDATASIZE
0x8d: V44 = 0x0
0x8f: REVERT 0x0 V43
---
Entry stack: [V11, V38]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V38]

================================

Block 0x90
[0x90:0x92]
---
Predecessors: [0x56]
Successors: []
---
0x90 JUMPDEST
0x91 POP
0x92 STOP
---
0x90: JUMPDEST 
0x92: STOP 
---
Entry stack: [V11, V38]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x93
[0x93:0x9a]
---
Predecessors: [0xd]
Successors: [0x9b, 0x9f]
---
0x93 JUMPDEST
0x94 CALLVALUE
0x95 DUP1
0x96 ISZERO
0x97 PUSH2 0x9f
0x9a JUMPI
---
0x93: JUMPDEST 
0x94: V45 = CALLVALUE
0x96: V46 = ISZERO V45
0x97: V47 = 0x9f
0x9a: JUMPI 0x9f V46
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V45]
Exit stack: [V11, V45]

================================

Block 0x9b
[0x9b:0x9e]
---
Predecessors: [0x93]
Successors: []
---
0x9b PUSH1 0x0
0x9d DUP1
0x9e REVERT
---
0x9b: V48 = 0x0
0x9e: REVERT 0x0 0x0
---
Entry stack: [V11, V45]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V45]

================================

Block 0x9f
[0x9f:0xa7]
---
Predecessors: [0x93]
Successors: [0xd3]
---
0x9f JUMPDEST
0xa0 POP
0xa1 PUSH2 0xa8
0xa4 PUSH2 0xd3
0xa7 JUMP
---
0x9f: JUMPDEST 
0xa1: V49 = 0xa8
0xa4: V50 = 0xd3
0xa7: JUMP 0xd3
---
Entry stack: [V11, V45]
Stack pops: 1
Stack additions: [0xa8]
Exit stack: [V11, 0xa8]

================================

Block 0xa8
[0xa8:0xa9]
---
Predecessors: [0x10f, 0x178]
Successors: []
---
0xa8 JUMPDEST
0xa9 STOP
---
0xa8: JUMPDEST 
0xa9: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xaa
[0xaa:0xb1]
---
Predecessors: [0x40]
Successors: [0xb2, 0xb6]
---
0xaa JUMPDEST
0xab CALLVALUE
0xac DUP1
0xad ISZERO
0xae PUSH2 0xb6
0xb1 JUMPI
---
0xaa: JUMPDEST 
0xab: V51 = CALLVALUE
0xad: V52 = ISZERO V51
0xae: V53 = 0xb6
0xb1: JUMPI 0xb6 V52
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V51]
Exit stack: [V11, V51]

================================

Block 0xb2
[0xb2:0xb5]
---
Predecessors: [0xaa]
Successors: []
---
0xb2 PUSH1 0x0
0xb4 DUP1
0xb5 REVERT
---
0xb2: V54 = 0x0
0xb5: REVERT 0x0 0x0
---
Entry stack: [V11, V51]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V51]

================================

Block 0xb6
[0xb6:0xca]
---
Predecessors: [0xaa]
Successors: [0xf8]
---
0xb6 JUMPDEST
0xb7 POP
0xb8 PUSH2 0xa8
0xbb PUSH1 0x1
0xbd PUSH1 0xa0
0xbf PUSH1 0x2
0xc1 EXP
0xc2 SUB
0xc3 PUSH1 0x4
0xc5 CALLDATALOAD
0xc6 AND
0xc7 PUSH2 0xf8
0xca JUMP
---
0xb6: JUMPDEST 
0xb8: V55 = 0xa8
0xbb: V56 = 0x1
0xbd: V57 = 0xa0
0xbf: V58 = 0x2
0xc1: V59 = EXP 0x2 0xa0
0xc2: V60 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc3: V61 = 0x4
0xc5: V62 = CALLDATALOAD 0x4
0xc6: V63 = AND V62 0xffffffffffffffffffffffffffffffffffffffff
0xc7: V64 = 0xf8
0xca: JUMP 0xf8
---
Entry stack: [V11, V51]
Stack pops: 1
Stack additions: [0xa8, V63]
Exit stack: [V11, 0xa8, V63]

================================

Block 0xcb
[0xcb:0xd2]
---
Predecessors: [0x4b]
Successors: [0x13e]
---
0xcb JUMPDEST
0xcc PUSH2 0xa8
0xcf PUSH2 0x13e
0xd2 JUMP
---
0xcb: JUMPDEST 
0xcc: V65 = 0xa8
0xcf: V66 = 0x13e
0xd2: JUMP 0x13e
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa8]
Exit stack: [V11, 0xa8]

================================

Block 0xd3
[0xd3:0xe5]
---
Predecessors: [0x9f]
Successors: [0xe6, 0xea]
---
0xd3 JUMPDEST
0xd4 PUSH1 0x0
0xd6 SLOAD
0xd7 PUSH1 0x1
0xd9 PUSH1 0xa0
0xdb PUSH1 0x2
0xdd EXP
0xde SUB
0xdf AND
0xe0 CALLER
0xe1 EQ
0xe2 PUSH2 0xea
0xe5 JUMPI
---
0xd3: JUMPDEST 
0xd4: V67 = 0x0
0xd6: V68 = S[0x0]
0xd7: V69 = 0x1
0xd9: V70 = 0xa0
0xdb: V71 = 0x2
0xdd: V72 = EXP 0x2 0xa0
0xde: V73 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdf: V74 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0xe0: V75 = CALLER
0xe1: V76 = EQ V75 V74
0xe2: V77 = 0xea
0xe5: JUMPI 0xea V76
---
Entry stack: [V11, 0xa8]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa8]

================================

Block 0xe6
[0xe6:0xe9]
---
Predecessors: [0xd3]
Successors: []
---
0xe6 PUSH1 0x0
0xe8 DUP1
0xe9 REVERT
---
0xe6: V78 = 0x0
0xe9: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa8]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa8]

================================

Block 0xea
[0xea:0xf7]
---
Predecessors: [0xd3]
Successors: []
---
0xea JUMPDEST
0xeb PUSH1 0x1
0xed SLOAD
0xee PUSH1 0x1
0xf0 PUSH1 0xa0
0xf2 PUSH1 0x2
0xf4 EXP
0xf5 SUB
0xf6 AND
0xf7 SELFDESTRUCT
---
0xea: JUMPDEST 
0xeb: V79 = 0x1
0xed: V80 = S[0x1]
0xee: V81 = 0x1
0xf0: V82 = 0xa0
0xf2: V83 = 0x2
0xf4: V84 = EXP 0x2 0xa0
0xf5: V85 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf6: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0xf7: SELFDESTRUCT V86
---
Entry stack: [V11, 0xa8]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa8]

================================

Block 0xf8
[0xf8:0x10a]
---
Predecessors: [0xb6]
Successors: [0x10b, 0x10f]
---
0xf8 JUMPDEST
0xf9 PUSH1 0x0
0xfb SLOAD
0xfc PUSH1 0x1
0xfe PUSH1 0xa0
0x100 PUSH1 0x2
0x102 EXP
0x103 SUB
0x104 AND
0x105 CALLER
0x106 EQ
0x107 PUSH2 0x10f
0x10a JUMPI
---
0xf8: JUMPDEST 
0xf9: V87 = 0x0
0xfb: V88 = S[0x0]
0xfc: V89 = 0x1
0xfe: V90 = 0xa0
0x100: V91 = 0x2
0x102: V92 = EXP 0x2 0xa0
0x103: V93 = SUB 0x10000000000000000000000000000000000000000 0x1
0x104: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V88
0x105: V95 = CALLER
0x106: V96 = EQ V95 V94
0x107: V97 = 0x10f
0x10a: JUMPI 0x10f V96
---
Entry stack: [V11, 0xa8, V63]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa8, V63]

================================

Block 0x10b
[0x10b:0x10e]
---
Predecessors: [0xf8]
Successors: []
---
0x10b PUSH1 0x0
0x10d DUP1
0x10e REVERT
---
0x10b: V98 = 0x0
0x10e: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa8, V63]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa8, V63]

================================

Block 0x10f
[0x10f:0x13d]
---
Predecessors: [0xf8]
Successors: [0xa8]
---
0x10f JUMPDEST
0x110 PUSH1 0x1
0x112 DUP1
0x113 SLOAD
0x114 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x129 NOT
0x12a AND
0x12b PUSH1 0x1
0x12d PUSH1 0xa0
0x12f PUSH1 0x2
0x131 EXP
0x132 SUB
0x133 SWAP3
0x134 SWAP1
0x135 SWAP3
0x136 AND
0x137 SWAP2
0x138 SWAP1
0x139 SWAP2
0x13a OR
0x13b SWAP1
0x13c SSTORE
0x13d JUMP
---
0x10f: JUMPDEST 
0x110: V99 = 0x1
0x113: V100 = S[0x1]
0x114: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x129: V102 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x12a: V103 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V100
0x12b: V104 = 0x1
0x12d: V105 = 0xa0
0x12f: V106 = 0x2
0x131: V107 = EXP 0x2 0xa0
0x132: V108 = SUB 0x10000000000000000000000000000000000000000 0x1
0x136: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0x13a: V110 = OR V109 V103
0x13c: S[0x1] = V110
0x13d: JUMP 0xa8
---
Entry stack: [V11, 0xa8, V63]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x13e
[0x13e:0x16e]
---
Predecessors: [0xcb]
Successors: [0x16f, 0x178]
---
0x13e JUMPDEST
0x13f PUSH1 0x1
0x141 SLOAD
0x142 PUSH1 0x40
0x144 MLOAD
0x145 PUSH1 0x1
0x147 PUSH1 0xa0
0x149 PUSH1 0x2
0x14b EXP
0x14c SUB
0x14d SWAP1
0x14e SWAP2
0x14f AND
0x150 SWAP1
0x151 ADDRESS
0x152 BALANCE
0x153 DUP1
0x154 ISZERO
0x155 PUSH2 0x8fc
0x158 MUL
0x159 SWAP2
0x15a PUSH1 0x0
0x15c DUP2
0x15d DUP2
0x15e DUP2
0x15f DUP6
0x160 DUP9
0x161 DUP9
0x162 CALL
0x163 SWAP4
0x164 POP
0x165 POP
0x166 POP
0x167 POP
0x168 ISZERO
0x169 DUP1
0x16a ISZERO
0x16b PUSH2 0x178
0x16e JUMPI
---
0x13e: JUMPDEST 
0x13f: V111 = 0x1
0x141: V112 = S[0x1]
0x142: V113 = 0x40
0x144: V114 = M[0x40]
0x145: V115 = 0x1
0x147: V116 = 0xa0
0x149: V117 = 0x2
0x14b: V118 = EXP 0x2 0xa0
0x14c: V119 = SUB 0x10000000000000000000000000000000000000000 0x1
0x14f: V120 = AND V112 0xffffffffffffffffffffffffffffffffffffffff
0x151: V121 = ADDRESS
0x152: V122 = BALANCE V121
0x154: V123 = ISZERO V122
0x155: V124 = 0x8fc
0x158: V125 = MUL 0x8fc V123
0x15a: V126 = 0x0
0x162: V127 = CALL V125 V120 V122 V114 0x0 V114 0x0
0x168: V128 = ISZERO V127
0x16a: V129 = ISZERO V128
0x16b: V130 = 0x178
0x16e: JUMPI 0x178 V129
---
Entry stack: [V11, 0xa8]
Stack pops: 0
Stack additions: [V128]
Exit stack: [V11, 0xa8, V128]

================================

Block 0x16f
[0x16f:0x177]
---
Predecessors: [0x13e]
Successors: []
---
0x16f RETURNDATASIZE
0x170 PUSH1 0x0
0x172 DUP1
0x173 RETURNDATACOPY
0x174 RETURNDATASIZE
0x175 PUSH1 0x0
0x177 REVERT
---
0x16f: V131 = RETURNDATASIZE
0x170: V132 = 0x0
0x173: RETURNDATACOPY 0x0 0x0 V131
0x174: V133 = RETURNDATASIZE
0x175: V134 = 0x0
0x177: REVERT 0x0 V133
---
Entry stack: [V11, 0xa8, V128]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa8, V128]

================================

Block 0x178
[0x178:0x17a]
---
Predecessors: [0x13e]
Successors: [0xa8]
---
0x178 JUMPDEST
0x179 POP
0x17a JUMP
---
0x178: JUMPDEST 
0x17a: JUMP 0xa8
---
Entry stack: [V11, 0xa8, V128]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x17b
[0x17b:0x1a6]
---
Predecessors: []
Successors: []
---
0x17b STOP
0x17c LOG1
0x17d PUSH6 0x627a7a723058
0x184 SHA3
0x185 BYTE
0x186 MISSING 0xf8
0x187 MISSING 0xc1
0x188 MISSING 0xe8
0x189 PUSH22 0x8d29652d50e21479d9d4296f05895b7672a089dad0b
0x1a0 DUP9
0x1a1 DUP13
0x1a2 SMOD
0x1a3 MISSING 0xe
0x1a4 MISSING 0xa6
0x1a5 STOP
0x1a6 MISSING 0x29
---
0x17b: STOP 
0x17c: LOG S0 S1 S2
0x17d: V135 = 0x627a7a723058
0x184: V136 = SHA3 0x627a7a723058 S3
0x185: V137 = BYTE V136 S4
0x186: MISSING 0xf8
0x187: MISSING 0xc1
0x188: MISSING 0xe8
0x189: V138 = 0x8d29652d50e21479d9d4296f05895b7672a089dad0b
0x1a2: V139 = SMOD S10 S7
0x1a3: MISSING 0xe
0x1a4: MISSING 0xa6
0x1a5: STOP 
0x1a6: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V137, V139, 0x8d29652d50e21479d9d4296f05895b7672a089dad0b, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10]
Exit stack: []

================================

Function 0:
Public function signature: 0x71064e2
Entry block: 0x93
Exit block: 0xea
Body: 0x93, 0x9b, 0x9f, 0xd3, 0xe6, 0xea

Function 1:
Public function signature: 0x30057c18
Entry block: 0xaa
Exit block: 0xa8
Body: 0xa8, 0xaa, 0xb2, 0xb6, 0xf8, 0x10b, 0x10f

Function 2:
Public function signature: 0xa50b5bb8
Entry block: 0xcb
Exit block: 0xa8
Body: 0xa8, 0xcb, 0x13e, 0x16f, 0x178

Function 3:
Public fallback function
Entry block: 0x56
Exit block: 0x87
Body: 0x56, 0x87, 0x90

