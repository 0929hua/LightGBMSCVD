Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xe3]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xe3
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xe3
0xa: JUMPI 0xe3 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x10c]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x22f987ec
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x10c
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x22f987ec
0x39: V12 = EQ V10 0x22f987ec
0x3a: V13 = 0x10c
0x3d: JUMPI 0x10c V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x133]
---
0x3e DUP1
0x3f PUSH4 0x23dc24ef
0x44 EQ
0x45 PUSH2 0x133
0x48 JUMPI
---
0x3f: V14 = 0x23dc24ef
0x44: V15 = EQ 0x23dc24ef V10
0x45: V16 = 0x133
0x48: JUMPI 0x133 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x146]
---
0x49 DUP1
0x4a PUSH4 0x60c7dc47
0x4f EQ
0x50 PUSH2 0x146
0x53 JUMPI
---
0x4a: V17 = 0x60c7dc47
0x4f: V18 = EQ 0x60c7dc47 V10
0x50: V19 = 0x146
0x53: JUMPI 0x146 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x16b]
---
0x54 DUP1
0x55 PUSH4 0x8bf0beee
0x5a EQ
0x5b PUSH2 0x16b
0x5e JUMPI
---
0x55: V20 = 0x8bf0beee
0x5a: V21 = EQ 0x8bf0beee V10
0x5b: V22 = 0x16b
0x5e: JUMPI 0x16b V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x19a]
---
0x5f DUP1
0x60 PUSH4 0x8da5cb5b
0x65 EQ
0x66 PUSH2 0x19a
0x69 JUMPI
---
0x60: V23 = 0x8da5cb5b
0x65: V24 = EQ 0x8da5cb5b V10
0x66: V25 = 0x19a
0x69: JUMPI 0x19a V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x1ad]
---
0x6a DUP1
0x6b PUSH4 0x90506f20
0x70 EQ
0x71 PUSH2 0x1ad
0x74 JUMPI
---
0x6b: V26 = 0x90506f20
0x70: V27 = EQ 0x90506f20 V10
0x71: V28 = 0x1ad
0x74: JUMPI 0x1ad V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x1c0]
---
0x75 DUP1
0x76 PUSH4 0x99b6f607
0x7b EQ
0x7c PUSH2 0x1c0
0x7f JUMPI
---
0x76: V29 = 0x99b6f607
0x7b: V30 = EQ 0x99b6f607 V10
0x7c: V31 = 0x1c0
0x7f: JUMPI 0x1c0 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x1d3]
---
0x80 DUP1
0x81 PUSH4 0xb82aa6c3
0x86 EQ
0x87 PUSH2 0x1d3
0x8a JUMPI
---
0x81: V32 = 0xb82aa6c3
0x86: V33 = EQ 0xb82aa6c3 V10
0x87: V34 = 0x1d3
0x8a: JUMPI 0x1d3 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x95]
---
Predecessors: [0x80]
Successors: [0x96, 0x1e6]
---
0x8b DUP1
0x8c PUSH4 0xb8da1b0c
0x91 EQ
0x92 PUSH2 0x1e6
0x95 JUMPI
---
0x8c: V35 = 0xb8da1b0c
0x91: V36 = EQ 0xb8da1b0c V10
0x92: V37 = 0x1e6
0x95: JUMPI 0x1e6 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x96
[0x96:0xa0]
---
Predecessors: [0x8b]
Successors: [0xa1, 0x205]
---
0x96 DUP1
0x97 PUSH4 0xc19d93fb
0x9c EQ
0x9d PUSH2 0x205
0xa0 JUMPI
---
0x97: V38 = 0xc19d93fb
0x9c: V39 = EQ 0xc19d93fb V10
0x9d: V40 = 0x205
0xa0: JUMPI 0x205 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa1
[0xa1:0xab]
---
Predecessors: [0x96]
Successors: [0xac, 0x23c]
---
0xa1 DUP1
0xa2 PUSH4 0xc94f598b
0xa7 EQ
0xa8 PUSH2 0x23c
0xab JUMPI
---
0xa2: V41 = 0xc94f598b
0xa7: V42 = EQ 0xc94f598b V10
0xa8: V43 = 0x23c
0xab: JUMPI 0x23c V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xac
[0xac:0xb6]
---
Predecessors: [0xa1]
Successors: [0xb7, 0x24f]
---
0xac DUP1
0xad PUSH4 0xd9c146de
0xb2 EQ
0xb3 PUSH2 0x24f
0xb6 JUMPI
---
0xad: V44 = 0xd9c146de
0xb2: V45 = EQ 0xd9c146de V10
0xb3: V46 = 0x24f
0xb6: JUMPI 0x24f V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xb7
[0xb7:0xc1]
---
Predecessors: [0xac]
Successors: [0xc2, 0x262]
---
0xb7 DUP1
0xb8 PUSH4 0xdfbf53ae
0xbd EQ
0xbe PUSH2 0x262
0xc1 JUMPI
---
0xb8: V47 = 0xdfbf53ae
0xbd: V48 = EQ 0xdfbf53ae V10
0xbe: V49 = 0x262
0xc1: JUMPI 0x262 V48
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xc2
[0xc2:0xcc]
---
Predecessors: [0xb7]
Successors: [0xcd, 0x275]
---
0xc2 DUP1
0xc3 PUSH4 0xf2fde38b
0xc8 EQ
0xc9 PUSH2 0x275
0xcc JUMPI
---
0xc3: V50 = 0xf2fde38b
0xc8: V51 = EQ 0xf2fde38b V10
0xc9: V52 = 0x275
0xcc: JUMPI 0x275 V51
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xcd
[0xcd:0xd7]
---
Predecessors: [0xc2]
Successors: [0xd8, 0x294]
---
0xcd DUP1
0xce PUSH4 0xfc0c03a5
0xd3 EQ
0xd4 PUSH2 0x294
0xd7 JUMPI
---
0xce: V53 = 0xfc0c03a5
0xd3: V54 = EQ 0xfc0c03a5 V10
0xd4: V55 = 0x294
0xd7: JUMPI 0x294 V54
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xd8
[0xd8:0xe2]
---
Predecessors: [0xcd]
Successors: [0xe3, 0x2a7]
---
0xd8 DUP1
0xd9 PUSH4 0xfc168747
0xde EQ
0xdf PUSH2 0x2a7
0xe2 JUMPI
---
0xd9: V56 = 0xfc168747
0xde: V57 = EQ 0xfc168747 V10
0xdf: V58 = 0x2a7
0xe2: JUMPI 0x2a7 V57
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xe3
[0xe3:0xf4]
---
Predecessors: [0x0, 0xd8]
Successors: [0xf5, 0xf6]
---
0xe3 JUMPDEST
0xe4 PUSH1 0x0
0xe6 PUSH1 0x8
0xe8 SLOAD
0xe9 PUSH1 0xff
0xeb AND
0xec PUSH1 0x2
0xee DUP2
0xef GT
0xf0 ISZERO
0xf1 PUSH2 0xf6
0xf4 JUMPI
---
0xe3: JUMPDEST 
0xe4: V59 = 0x0
0xe6: V60 = 0x8
0xe8: V61 = S[0x8]
0xe9: V62 = 0xff
0xeb: V63 = AND 0xff V61
0xec: V64 = 0x2
0xef: V65 = GT V63 0x2
0xf0: V66 = ISZERO V65
0xf1: V67 = 0xf6
0xf4: JUMPI 0xf6 V66
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x0, V63]
Exit stack: [V10, 0x0, V63]

================================

Block 0xf5
[0xf5:0xf5]
---
Predecessors: [0xe3]
Successors: []
---
0xf5 INVALID
---
0xf5: INVALID 
---
Entry stack: [V10, 0x0, V63]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x0, V63]

================================

Block 0xf6
[0xf6:0xfb]
---
Predecessors: [0xe3]
Successors: [0xfc, 0x100]
---
0xf6 JUMPDEST
0xf7 EQ
0xf8 PUSH2 0x100
0xfb JUMPI
---
0xf6: JUMPDEST 
0xf7: V68 = EQ V63 0x0
0xf8: V69 = 0x100
0xfb: JUMPI 0x100 V68
---
Entry stack: [V10, 0x0, V63]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0xfc
[0xfc:0xff]
---
Predecessors: [0xf6]
Successors: []
---
0xfc PUSH1 0x0
0xfe DUP1
0xff REVERT
---
0xfc: V70 = 0x0
0xff: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x100
[0x100:0x109]
---
Predecessors: [0xf6]
Successors: [0x2ba]
---
0x100 JUMPDEST
0x101 PUSH2 0x10a
0x104 CALLER
0x105 CALLVALUE
0x106 PUSH2 0x2ba
0x109 JUMP
---
0x100: JUMPDEST 
0x101: V71 = 0x10a
0x104: V72 = CALLER
0x105: V73 = CALLVALUE
0x106: V74 = 0x2ba
0x109: JUMP 0x2ba
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x10a, V72, V73]
Exit stack: [V10, 0x10a, V72, V73]

================================

Block 0x10a
[0x10a:0x10b]
---
Predecessors: [0x47e, 0x501, 0x687, 0x6e4]
Successors: []
---
0x10a JUMPDEST
0x10b STOP
---
0x10a: JUMPDEST 
0x10b: STOP 
---
Entry stack: [V10, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, S0]

================================

Block 0x10c
[0x10c:0x112]
---
Predecessors: [0xb]
Successors: [0x113, 0x117]
---
0x10c JUMPDEST
0x10d CALLVALUE
0x10e ISZERO
0x10f PUSH2 0x117
0x112 JUMPI
---
0x10c: JUMPDEST 
0x10d: V75 = CALLVALUE
0x10e: V76 = ISZERO V75
0x10f: V77 = 0x117
0x112: JUMPI 0x117 V76
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x113
[0x113:0x116]
---
Predecessors: [0x10c]
Successors: []
---
0x113 PUSH1 0x0
0x115 DUP1
0x116 REVERT
---
0x113: V78 = 0x0
0x116: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x117
[0x117:0x11e]
---
Predecessors: [0x10c]
Successors: [0x482]
---
0x117 JUMPDEST
0x118 PUSH2 0x11f
0x11b PUSH2 0x482
0x11e JUMP
---
0x117: JUMPDEST 
0x118: V79 = 0x11f
0x11b: V80 = 0x482
0x11e: JUMP 0x482
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x11f]
Exit stack: [V10, 0x11f]

================================

Block 0x11f
[0x11f:0x132]
---
Predecessors: [0x482, 0x710]
Successors: []
---
0x11f JUMPDEST
0x120 PUSH1 0x40
0x122 MLOAD
0x123 SWAP1
0x124 ISZERO
0x125 ISZERO
0x126 DUP2
0x127 MSTORE
0x128 PUSH1 0x20
0x12a ADD
0x12b PUSH1 0x40
0x12d MLOAD
0x12e DUP1
0x12f SWAP2
0x130 SUB
0x131 SWAP1
0x132 RETURN
---
0x11f: JUMPDEST 
0x120: V81 = 0x40
0x122: V82 = M[0x40]
0x124: V83 = ISZERO S0
0x125: V84 = ISZERO V83
0x127: M[V82] = V84
0x128: V85 = 0x20
0x12a: V86 = ADD 0x20 V82
0x12b: V87 = 0x40
0x12d: V88 = M[0x40]
0x130: V89 = SUB V86 V88
0x132: RETURN V88 V89
---
Entry stack: [V10, 0x11f, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x11f]

================================

Block 0x133
[0x133:0x139]
---
Predecessors: [0x3e]
Successors: [0x13a, 0x13e]
---
0x133 JUMPDEST
0x134 CALLVALUE
0x135 ISZERO
0x136 PUSH2 0x13e
0x139 JUMPI
---
0x133: JUMPDEST 
0x134: V90 = CALLVALUE
0x135: V91 = ISZERO V90
0x136: V92 = 0x13e
0x139: JUMPI 0x13e V91
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x13a
[0x13a:0x13d]
---
Predecessors: [0x133]
Successors: []
---
0x13a PUSH1 0x0
0x13c DUP1
0x13d REVERT
---
0x13a: V93 = 0x0
0x13d: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x13e
[0x13e:0x145]
---
Predecessors: [0x133]
Successors: [0x48b]
---
0x13e JUMPDEST
0x13f PUSH2 0x10a
0x142 PUSH2 0x48b
0x145 JUMP
---
0x13e: JUMPDEST 
0x13f: V94 = 0x10a
0x142: V95 = 0x48b
0x145: JUMP 0x48b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x10a]
Exit stack: [V10, 0x10a]

================================

Block 0x146
[0x146:0x14c]
---
Predecessors: [0x49]
Successors: [0x14d, 0x151]
---
0x146 JUMPDEST
0x147 CALLVALUE
0x148 ISZERO
0x149 PUSH2 0x151
0x14c JUMPI
---
0x146: JUMPDEST 
0x147: V96 = CALLVALUE
0x148: V97 = ISZERO V96
0x149: V98 = 0x151
0x14c: JUMPI 0x151 V97
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x14d
[0x14d:0x150]
---
Predecessors: [0x146]
Successors: []
---
0x14d PUSH1 0x0
0x14f DUP1
0x150 REVERT
---
0x14d: V99 = 0x0
0x150: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x151
[0x151:0x158]
---
Predecessors: [0x146]
Successors: [0x503]
---
0x151 JUMPDEST
0x152 PUSH2 0x159
0x155 PUSH2 0x503
0x158 JUMP
---
0x151: JUMPDEST 
0x152: V100 = 0x159
0x155: V101 = 0x503
0x158: JUMP 0x503
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x159]
Exit stack: [V10, 0x159]

================================

Block 0x159
[0x159:0x16a]
---
Predecessors: [0x503, 0x5af, 0x5b5, 0x6a8]
Successors: []
---
0x159 JUMPDEST
0x15a PUSH1 0x40
0x15c MLOAD
0x15d SWAP1
0x15e DUP2
0x15f MSTORE
0x160 PUSH1 0x20
0x162 ADD
0x163 PUSH1 0x40
0x165 MLOAD
0x166 DUP1
0x167 SWAP2
0x168 SUB
0x169 SWAP1
0x16a RETURN
---
0x159: JUMPDEST 
0x15a: V102 = 0x40
0x15c: V103 = M[0x40]
0x15f: M[V103] = S0
0x160: V104 = 0x20
0x162: V105 = ADD 0x20 V103
0x163: V106 = 0x40
0x165: V107 = M[0x40]
0x168: V108 = SUB V105 V107
0x16a: RETURN V107 V108
---
Entry stack: [V10, 0x159, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x159]

================================

Block 0x16b
[0x16b:0x171]
---
Predecessors: [0x54]
Successors: [0x172, 0x176]
---
0x16b JUMPDEST
0x16c CALLVALUE
0x16d ISZERO
0x16e PUSH2 0x176
0x171 JUMPI
---
0x16b: JUMPDEST 
0x16c: V109 = CALLVALUE
0x16d: V110 = ISZERO V109
0x16e: V111 = 0x176
0x171: JUMPI 0x176 V110
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x172
[0x172:0x175]
---
Predecessors: [0x16b]
Successors: []
---
0x172 PUSH1 0x0
0x174 DUP1
0x175 REVERT
---
0x172: V112 = 0x0
0x175: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x176
[0x176:0x17d]
---
Predecessors: [0x16b]
Successors: [0x509]
---
0x176 JUMPDEST
0x177 PUSH2 0x17e
0x17a PUSH2 0x509
0x17d JUMP
---
0x176: JUMPDEST 
0x177: V113 = 0x17e
0x17a: V114 = 0x509
0x17d: JUMP 0x509
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x17e]
Exit stack: [V10, 0x17e]

================================

Block 0x17e
[0x17e:0x199]
---
Predecessors: [0x509, 0x518, 0x693, 0x71e]
Successors: []
---
0x17e JUMPDEST
0x17f PUSH1 0x40
0x181 MLOAD
0x182 PUSH1 0x1
0x184 PUSH1 0xa0
0x186 PUSH1 0x2
0x188 EXP
0x189 SUB
0x18a SWAP1
0x18b SWAP2
0x18c AND
0x18d DUP2
0x18e MSTORE
0x18f PUSH1 0x20
0x191 ADD
0x192 PUSH1 0x40
0x194 MLOAD
0x195 DUP1
0x196 SWAP2
0x197 SUB
0x198 SWAP1
0x199 RETURN
---
0x17e: JUMPDEST 
0x17f: V115 = 0x40
0x181: V116 = M[0x40]
0x182: V117 = 0x1
0x184: V118 = 0xa0
0x186: V119 = 0x2
0x188: V120 = EXP 0x2 0xa0
0x189: V121 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18c: V122 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x18e: M[V116] = V122
0x18f: V123 = 0x20
0x191: V124 = ADD 0x20 V116
0x192: V125 = 0x40
0x194: V126 = M[0x40]
0x197: V127 = SUB V124 V126
0x199: RETURN V126 V127
---
Entry stack: [V10, 0x17e, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x17e]

================================

Block 0x19a
[0x19a:0x1a0]
---
Predecessors: [0x5f]
Successors: [0x1a1, 0x1a5]
---
0x19a JUMPDEST
0x19b CALLVALUE
0x19c ISZERO
0x19d PUSH2 0x1a5
0x1a0 JUMPI
---
0x19a: JUMPDEST 
0x19b: V128 = CALLVALUE
0x19c: V129 = ISZERO V128
0x19d: V130 = 0x1a5
0x1a0: JUMPI 0x1a5 V129
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1a1
[0x1a1:0x1a4]
---
Predecessors: [0x19a]
Successors: []
---
0x1a1 PUSH1 0x0
0x1a3 DUP1
0x1a4 REVERT
---
0x1a1: V131 = 0x0
0x1a4: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1a5
[0x1a5:0x1ac]
---
Predecessors: [0x19a]
Successors: [0x518]
---
0x1a5 JUMPDEST
0x1a6 PUSH2 0x17e
0x1a9 PUSH2 0x518
0x1ac JUMP
---
0x1a5: JUMPDEST 
0x1a6: V132 = 0x17e
0x1a9: V133 = 0x518
0x1ac: JUMP 0x518
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x17e]
Exit stack: [V10, 0x17e]

================================

Block 0x1ad
[0x1ad:0x1b3]
---
Predecessors: [0x6a]
Successors: [0x1b4, 0x1b8]
---
0x1ad JUMPDEST
0x1ae CALLVALUE
0x1af ISZERO
0x1b0 PUSH2 0x1b8
0x1b3 JUMPI
---
0x1ad: JUMPDEST 
0x1ae: V134 = CALLVALUE
0x1af: V135 = ISZERO V134
0x1b0: V136 = 0x1b8
0x1b3: JUMPI 0x1b8 V135
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1b4
[0x1b4:0x1b7]
---
Predecessors: [0x1ad]
Successors: []
---
0x1b4 PUSH1 0x0
0x1b6 DUP1
0x1b7 REVERT
---
0x1b4: V137 = 0x0
0x1b7: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1b8
[0x1b8:0x1bf]
---
Predecessors: [0x1ad]
Successors: [0x527]
---
0x1b8 JUMPDEST
0x1b9 PUSH2 0x10a
0x1bc PUSH2 0x527
0x1bf JUMP
---
0x1b8: JUMPDEST 
0x1b9: V138 = 0x10a
0x1bc: V139 = 0x527
0x1bf: JUMP 0x527
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x10a]
Exit stack: [V10, 0x10a]

================================

Block 0x1c0
[0x1c0:0x1c6]
---
Predecessors: [0x75]
Successors: [0x1c7, 0x1cb]
---
0x1c0 JUMPDEST
0x1c1 CALLVALUE
0x1c2 ISZERO
0x1c3 PUSH2 0x1cb
0x1c6 JUMPI
---
0x1c0: JUMPDEST 
0x1c1: V140 = CALLVALUE
0x1c2: V141 = ISZERO V140
0x1c3: V142 = 0x1cb
0x1c6: JUMPI 0x1cb V141
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1c7
[0x1c7:0x1ca]
---
Predecessors: [0x1c0]
Successors: []
---
0x1c7 PUSH1 0x0
0x1c9 DUP1
0x1ca REVERT
---
0x1c7: V143 = 0x0
0x1ca: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1cb
[0x1cb:0x1d2]
---
Predecessors: [0x1c0]
Successors: [0x5af]
---
0x1cb JUMPDEST
0x1cc PUSH2 0x159
0x1cf PUSH2 0x5af
0x1d2 JUMP
---
0x1cb: JUMPDEST 
0x1cc: V144 = 0x159
0x1cf: V145 = 0x5af
0x1d2: JUMP 0x5af
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x159]
Exit stack: [V10, 0x159]

================================

Block 0x1d3
[0x1d3:0x1d9]
---
Predecessors: [0x80]
Successors: [0x1da, 0x1de]
---
0x1d3 JUMPDEST
0x1d4 CALLVALUE
0x1d5 ISZERO
0x1d6 PUSH2 0x1de
0x1d9 JUMPI
---
0x1d3: JUMPDEST 
0x1d4: V146 = CALLVALUE
0x1d5: V147 = ISZERO V146
0x1d6: V148 = 0x1de
0x1d9: JUMPI 0x1de V147
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1da
[0x1da:0x1dd]
---
Predecessors: [0x1d3]
Successors: []
---
0x1da PUSH1 0x0
0x1dc DUP1
0x1dd REVERT
---
0x1da: V149 = 0x0
0x1dd: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1de
[0x1de:0x1e5]
---
Predecessors: [0x1d3]
Successors: [0x5b5]
---
0x1de JUMPDEST
0x1df PUSH2 0x159
0x1e2 PUSH2 0x5b5
0x1e5 JUMP
---
0x1de: JUMPDEST 
0x1df: V150 = 0x159
0x1e2: V151 = 0x5b5
0x1e5: JUMP 0x5b5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x159]
Exit stack: [V10, 0x159]

================================

Block 0x1e6
[0x1e6:0x1ec]
---
Predecessors: [0x8b]
Successors: [0x1ed, 0x1f1]
---
0x1e6 JUMPDEST
0x1e7 CALLVALUE
0x1e8 ISZERO
0x1e9 PUSH2 0x1f1
0x1ec JUMPI
---
0x1e6: JUMPDEST 
0x1e7: V152 = CALLVALUE
0x1e8: V153 = ISZERO V152
0x1e9: V154 = 0x1f1
0x1ec: JUMPI 0x1f1 V153
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ed
[0x1ed:0x1f0]
---
Predecessors: [0x1e6]
Successors: []
---
0x1ed PUSH1 0x0
0x1ef DUP1
0x1f0 REVERT
---
0x1ed: V155 = 0x0
0x1f0: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1f1
[0x1f1:0x204]
---
Predecessors: [0x1e6]
Successors: [0x5bb]
---
0x1f1 JUMPDEST
0x1f2 PUSH2 0x10a
0x1f5 PUSH1 0x1
0x1f7 PUSH1 0xa0
0x1f9 PUSH1 0x2
0x1fb EXP
0x1fc SUB
0x1fd PUSH1 0x4
0x1ff CALLDATALOAD
0x200 AND
0x201 PUSH2 0x5bb
0x204 JUMP
---
0x1f1: JUMPDEST 
0x1f2: V156 = 0x10a
0x1f5: V157 = 0x1
0x1f7: V158 = 0xa0
0x1f9: V159 = 0x2
0x1fb: V160 = EXP 0x2 0xa0
0x1fc: V161 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1fd: V162 = 0x4
0x1ff: V163 = CALLDATALOAD 0x4
0x200: V164 = AND V163 0xffffffffffffffffffffffffffffffffffffffff
0x201: V165 = 0x5bb
0x204: JUMP 0x5bb
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x10a, V164]
Exit stack: [V10, 0x10a, V164]

================================

Block 0x205
[0x205:0x20b]
---
Predecessors: [0x96]
Successors: [0x20c, 0x210]
---
0x205 JUMPDEST
0x206 CALLVALUE
0x207 ISZERO
0x208 PUSH2 0x210
0x20b JUMPI
---
0x205: JUMPDEST 
0x206: V166 = CALLVALUE
0x207: V167 = ISZERO V166
0x208: V168 = 0x210
0x20b: JUMPI 0x210 V167
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x20c
[0x20c:0x20f]
---
Predecessors: [0x205]
Successors: []
---
0x20c PUSH1 0x0
0x20e DUP1
0x20f REVERT
---
0x20c: V169 = 0x0
0x20f: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x210
[0x210:0x217]
---
Predecessors: [0x205]
Successors: [0x68a]
---
0x210 JUMPDEST
0x211 PUSH2 0x218
0x214 PUSH2 0x68a
0x217 JUMP
---
0x210: JUMPDEST 
0x211: V170 = 0x218
0x214: V171 = 0x68a
0x217: JUMP 0x68a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x218]
Exit stack: [V10, 0x218]

================================

Block 0x218
[0x218:0x226]
---
Predecessors: [0x68a, 0x6ae]
Successors: [0x227, 0x228]
---
0x218 JUMPDEST
0x219 PUSH1 0x40
0x21b MLOAD
0x21c DUP1
0x21d DUP3
0x21e PUSH1 0x2
0x220 DUP2
0x221 GT
0x222 ISZERO
0x223 PUSH2 0x228
0x226 JUMPI
---
0x218: JUMPDEST 
0x219: V172 = 0x40
0x21b: V173 = M[0x40]
0x21e: V174 = 0x2
0x221: V175 = GT S0 0x2
0x222: V176 = ISZERO V175
0x223: V177 = 0x228
0x226: JUMPI 0x228 V176
---
Entry stack: [V10, 0x218, S0]
Stack pops: 1
Stack additions: [S0, V173, V173, S0]
Exit stack: [V10, 0x218, S0, V173, V173, S0]

================================

Block 0x227
[0x227:0x227]
---
Predecessors: [0x218]
Successors: []
---
0x227 INVALID
---
0x227: INVALID 
---
Entry stack: [V10, 0x218, S3, V173, V173, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x218, S3, V173, V173, S0]

================================

Block 0x228
[0x228:0x23b]
---
Predecessors: [0x218]
Successors: []
---
0x228 JUMPDEST
0x229 PUSH1 0xff
0x22b AND
0x22c DUP2
0x22d MSTORE
0x22e PUSH1 0x20
0x230 ADD
0x231 SWAP2
0x232 POP
0x233 POP
0x234 PUSH1 0x40
0x236 MLOAD
0x237 DUP1
0x238 SWAP2
0x239 SUB
0x23a SWAP1
0x23b RETURN
---
0x228: JUMPDEST 
0x229: V178 = 0xff
0x22b: V179 = AND 0xff S0
0x22d: M[V173] = V179
0x22e: V180 = 0x20
0x230: V181 = ADD 0x20 V173
0x234: V182 = 0x40
0x236: V183 = M[0x40]
0x239: V184 = SUB V181 V183
0x23b: RETURN V183 V184
---
Entry stack: [V10, 0x218, S3, V173, V173, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V10, 0x218]

================================

Block 0x23c
[0x23c:0x242]
---
Predecessors: [0xa1]
Successors: [0x243, 0x247]
---
0x23c JUMPDEST
0x23d CALLVALUE
0x23e ISZERO
0x23f PUSH2 0x247
0x242 JUMPI
---
0x23c: JUMPDEST 
0x23d: V185 = CALLVALUE
0x23e: V186 = ISZERO V185
0x23f: V187 = 0x247
0x242: JUMPI 0x247 V186
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x243
[0x243:0x246]
---
Predecessors: [0x23c]
Successors: []
---
0x243 PUSH1 0x0
0x245 DUP1
0x246 REVERT
---
0x243: V188 = 0x0
0x246: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x247
[0x247:0x24e]
---
Predecessors: [0x23c]
Successors: [0x693]
---
0x247 JUMPDEST
0x248 PUSH2 0x17e
0x24b PUSH2 0x693
0x24e JUMP
---
0x247: JUMPDEST 
0x248: V189 = 0x17e
0x24b: V190 = 0x693
0x24e: JUMP 0x693
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x17e]
Exit stack: [V10, 0x17e]

================================

Block 0x24f
[0x24f:0x255]
---
Predecessors: [0xac]
Successors: [0x256, 0x25a]
---
0x24f JUMPDEST
0x250 CALLVALUE
0x251 ISZERO
0x252 PUSH2 0x25a
0x255 JUMPI
---
0x24f: JUMPDEST 
0x250: V191 = CALLVALUE
0x251: V192 = ISZERO V191
0x252: V193 = 0x25a
0x255: JUMPI 0x25a V192
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x256
[0x256:0x259]
---
Predecessors: [0x24f]
Successors: []
---
0x256 PUSH1 0x0
0x258 DUP1
0x259 REVERT
---
0x256: V194 = 0x0
0x259: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x25a
[0x25a:0x261]
---
Predecessors: [0x24f]
Successors: [0x6a8]
---
0x25a JUMPDEST
0x25b PUSH2 0x159
0x25e PUSH2 0x6a8
0x261 JUMP
---
0x25a: JUMPDEST 
0x25b: V195 = 0x159
0x25e: V196 = 0x6a8
0x261: JUMP 0x6a8
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x159]
Exit stack: [V10, 0x159]

================================

Block 0x262
[0x262:0x268]
---
Predecessors: [0xb7]
Successors: [0x269, 0x26d]
---
0x262 JUMPDEST
0x263 CALLVALUE
0x264 ISZERO
0x265 PUSH2 0x26d
0x268 JUMPI
---
0x262: JUMPDEST 
0x263: V197 = CALLVALUE
0x264: V198 = ISZERO V197
0x265: V199 = 0x26d
0x268: JUMPI 0x26d V198
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x269
[0x269:0x26c]
---
Predecessors: [0x262]
Successors: []
---
0x269 PUSH1 0x0
0x26b DUP1
0x26c REVERT
---
0x269: V200 = 0x0
0x26c: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x26d
[0x26d:0x274]
---
Predecessors: [0x262]
Successors: [0x6ae]
---
0x26d JUMPDEST
0x26e PUSH2 0x218
0x271 PUSH2 0x6ae
0x274 JUMP
---
0x26d: JUMPDEST 
0x26e: V201 = 0x218
0x271: V202 = 0x6ae
0x274: JUMP 0x6ae
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x218]
Exit stack: [V10, 0x218]

================================

Block 0x275
[0x275:0x27b]
---
Predecessors: [0xc2]
Successors: [0x27c, 0x280]
---
0x275 JUMPDEST
0x276 CALLVALUE
0x277 ISZERO
0x278 PUSH2 0x280
0x27b JUMPI
---
0x275: JUMPDEST 
0x276: V203 = CALLVALUE
0x277: V204 = ISZERO V203
0x278: V205 = 0x280
0x27b: JUMPI 0x280 V204
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x27c
[0x27c:0x27f]
---
Predecessors: [0x275]
Successors: []
---
0x27c PUSH1 0x0
0x27e DUP1
0x27f REVERT
---
0x27c: V206 = 0x0
0x27f: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x280
[0x280:0x293]
---
Predecessors: [0x275]
Successors: [0x6bc]
---
0x280 JUMPDEST
0x281 PUSH2 0x10a
0x284 PUSH1 0x1
0x286 PUSH1 0xa0
0x288 PUSH1 0x2
0x28a EXP
0x28b SUB
0x28c PUSH1 0x4
0x28e CALLDATALOAD
0x28f AND
0x290 PUSH2 0x6bc
0x293 JUMP
---
0x280: JUMPDEST 
0x281: V207 = 0x10a
0x284: V208 = 0x1
0x286: V209 = 0xa0
0x288: V210 = 0x2
0x28a: V211 = EXP 0x2 0xa0
0x28b: V212 = SUB 0x10000000000000000000000000000000000000000 0x1
0x28c: V213 = 0x4
0x28e: V214 = CALLDATALOAD 0x4
0x28f: V215 = AND V214 0xffffffffffffffffffffffffffffffffffffffff
0x290: V216 = 0x6bc
0x293: JUMP 0x6bc
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x10a, V215]
Exit stack: [V10, 0x10a, V215]

================================

Block 0x294
[0x294:0x29a]
---
Predecessors: [0xcd]
Successors: [0x29b, 0x29f]
---
0x294 JUMPDEST
0x295 CALLVALUE
0x296 ISZERO
0x297 PUSH2 0x29f
0x29a JUMPI
---
0x294: JUMPDEST 
0x295: V217 = CALLVALUE
0x296: V218 = ISZERO V217
0x297: V219 = 0x29f
0x29a: JUMPI 0x29f V218
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x29b
[0x29b:0x29e]
---
Predecessors: [0x294]
Successors: []
---
0x29b PUSH1 0x0
0x29d DUP1
0x29e REVERT
---
0x29b: V220 = 0x0
0x29e: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x29f
[0x29f:0x2a6]
---
Predecessors: [0x294]
Successors: [0x710]
---
0x29f JUMPDEST
0x2a0 PUSH2 0x11f
0x2a3 PUSH2 0x710
0x2a6 JUMP
---
0x29f: JUMPDEST 
0x2a0: V221 = 0x11f
0x2a3: V222 = 0x710
0x2a6: JUMP 0x710
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x11f]
Exit stack: [V10, 0x11f]

================================

Block 0x2a7
[0x2a7:0x2ad]
---
Predecessors: [0xd8]
Successors: [0x2ae, 0x2b2]
---
0x2a7 JUMPDEST
0x2a8 CALLVALUE
0x2a9 ISZERO
0x2aa PUSH2 0x2b2
0x2ad JUMPI
---
0x2a7: JUMPDEST 
0x2a8: V223 = CALLVALUE
0x2a9: V224 = ISZERO V223
0x2aa: V225 = 0x2b2
0x2ad: JUMPI 0x2b2 V224
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2ae
[0x2ae:0x2b1]
---
Predecessors: [0x2a7]
Successors: []
---
0x2ae PUSH1 0x0
0x2b0 DUP1
0x2b1 REVERT
---
0x2ae: V226 = 0x0
0x2b1: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2b2
[0x2b2:0x2b9]
---
Predecessors: [0x2a7]
Successors: [0x71e]
---
0x2b2 JUMPDEST
0x2b3 PUSH2 0x17e
0x2b6 PUSH2 0x71e
0x2b9 JUMP
---
0x2b2: JUMPDEST 
0x2b3: V227 = 0x17e
0x2b6: V228 = 0x71e
0x2b9: JUMP 0x71e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x17e]
Exit stack: [V10, 0x17e]

================================

Block 0x2ba
[0x2ba:0x2cb]
---
Predecessors: [0x100]
Successors: [0x2cc, 0x2cd]
---
0x2ba JUMPDEST
0x2bb PUSH1 0x0
0x2bd PUSH1 0x8
0x2bf SLOAD
0x2c0 PUSH1 0xff
0x2c2 AND
0x2c3 PUSH1 0x2
0x2c5 DUP2
0x2c6 GT
0x2c7 ISZERO
0x2c8 PUSH2 0x2cd
0x2cb JUMPI
---
0x2ba: JUMPDEST 
0x2bb: V229 = 0x0
0x2bd: V230 = 0x8
0x2bf: V231 = S[0x8]
0x2c0: V232 = 0xff
0x2c2: V233 = AND 0xff V231
0x2c3: V234 = 0x2
0x2c6: V235 = GT V233 0x2
0x2c7: V236 = ISZERO V235
0x2c8: V237 = 0x2cd
0x2cb: JUMPI 0x2cd V236
---
Entry stack: [V10, 0x10a, V72, V73]
Stack pops: 0
Stack additions: [0x0, V233]
Exit stack: [V10, 0x10a, V72, V73, 0x0, V233]

================================

Block 0x2cc
[0x2cc:0x2cc]
---
Predecessors: [0x2ba]
Successors: []
---
0x2cc INVALID
---
0x2cc: INVALID 
---
Entry stack: [V10, 0x10a, V72, V73, 0x0, V233]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10a, V72, V73, 0x0, V233]

================================

Block 0x2cd
[0x2cd:0x2d2]
---
Predecessors: [0x2ba]
Successors: [0x2d3, 0x2d7]
---
0x2cd JUMPDEST
0x2ce EQ
0x2cf PUSH2 0x2d7
0x2d2 JUMPI
---
0x2cd: JUMPDEST 
0x2ce: V238 = EQ V233 0x0
0x2cf: V239 = 0x2d7
0x2d2: JUMPI 0x2d7 V238
---
Entry stack: [V10, 0x10a, V72, V73, 0x0, V233]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x10a, V72, V73]

================================

Block 0x2d3
[0x2d3:0x2d6]
---
Predecessors: [0x2cd]
Successors: []
---
0x2d3 PUSH1 0x0
0x2d5 DUP1
0x2d6 REVERT
---
0x2d3: V240 = 0x0
0x2d6: REVERT 0x0 0x0
---
Entry stack: [V10, 0x10a, V72, V73]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10a, V72, V73]

================================

Block 0x2d7
[0x2d7:0x2ed]
---
Predecessors: [0x2cd]
Successors: [0x2ee, 0x2f2]
---
0x2d7 JUMPDEST
0x2d8 PUSH1 0x0
0x2da SLOAD
0x2db PUSH1 0x1
0x2dd PUSH1 0xa0
0x2df PUSH1 0x2
0x2e1 EXP
0x2e2 SUB
0x2e3 DUP4
0x2e4 DUP2
0x2e5 AND
0x2e6 SWAP2
0x2e7 AND
0x2e8 EQ
0x2e9 ISZERO
0x2ea PUSH2 0x2f2
0x2ed JUMPI
---
0x2d7: JUMPDEST 
0x2d8: V241 = 0x0
0x2da: V242 = S[0x0]
0x2db: V243 = 0x1
0x2dd: V244 = 0xa0
0x2df: V245 = 0x2
0x2e1: V246 = EXP 0x2 0xa0
0x2e2: V247 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e5: V248 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0x2e7: V249 = AND V242 0xffffffffffffffffffffffffffffffffffffffff
0x2e8: V250 = EQ V249 V248
0x2e9: V251 = ISZERO V250
0x2ea: V252 = 0x2f2
0x2ed: JUMPI 0x2f2 V251
---
Entry stack: [V10, 0x10a, V72, V73]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x10a, V72, V73]

================================

Block 0x2ee
[0x2ee:0x2f1]
---
Predecessors: [0x2d7]
Successors: []
---
0x2ee PUSH1 0x0
0x2f0 DUP1
0x2f1 REVERT
---
0x2ee: V253 = 0x0
0x2f1: REVERT 0x0 0x0
---
Entry stack: [V10, 0x10a, V72, V73]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10a, V72, V73]

================================

Block 0x2f2
[0x2f2:0x308]
---
Predecessors: [0x2d7]
Successors: [0x309, 0x31b]
---
0x2f2 JUMPDEST
0x2f3 PUSH1 0x1
0x2f5 SLOAD
0x2f6 PUSH1 0x1
0x2f8 PUSH1 0xa0
0x2fa PUSH1 0x2
0x2fc EXP
0x2fd SUB
0x2fe DUP4
0x2ff DUP2
0x300 AND
0x301 SWAP2
0x302 AND
0x303 EQ
0x304 DUP1
0x305 PUSH2 0x31b
0x308 JUMPI
---
0x2f2: JUMPDEST 
0x2f3: V254 = 0x1
0x2f5: V255 = S[0x1]
0x2f6: V256 = 0x1
0x2f8: V257 = 0xa0
0x2fa: V258 = 0x2
0x2fc: V259 = EXP 0x2 0xa0
0x2fd: V260 = SUB 0x10000000000000000000000000000000000000000 0x1
0x300: V261 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0x302: V262 = AND V255 0xffffffffffffffffffffffffffffffffffffffff
0x303: V263 = EQ V262 V261
0x305: V264 = 0x31b
0x308: JUMPI 0x31b V263
---
Entry stack: [V10, 0x10a, V72, V73]
Stack pops: 2
Stack additions: [S1, S0, V263]
Exit stack: [V10, 0x10a, V72, V73, V263]

================================

Block 0x309
[0x309:0x31a]
---
Predecessors: [0x2f2]
Successors: [0x31b]
---
0x309 POP
0x30a PUSH1 0x2
0x30c SLOAD
0x30d PUSH1 0x1
0x30f PUSH1 0xa0
0x311 PUSH1 0x2
0x313 EXP
0x314 SUB
0x315 DUP4
0x316 DUP2
0x317 AND
0x318 SWAP2
0x319 AND
0x31a EQ
---
0x30a: V265 = 0x2
0x30c: V266 = S[0x2]
0x30d: V267 = 0x1
0x30f: V268 = 0xa0
0x311: V269 = 0x2
0x313: V270 = EXP 0x2 0xa0
0x314: V271 = SUB 0x10000000000000000000000000000000000000000 0x1
0x317: V272 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0x319: V273 = AND V266 0xffffffffffffffffffffffffffffffffffffffff
0x31a: V274 = EQ V273 V272
---
Entry stack: [V10, 0x10a, V72, V73, V263]
Stack pops: 3
Stack additions: [S2, S1, V274]
Exit stack: [V10, 0x10a, V72, V73, V274]

================================

Block 0x31b
[0x31b:0x321]
---
Predecessors: [0x2f2, 0x309]
Successors: [0x322, 0x326]
---
0x31b JUMPDEST
0x31c ISZERO
0x31d ISZERO
0x31e PUSH2 0x326
0x321 JUMPI
---
0x31b: JUMPDEST 
0x31c: V275 = ISZERO S0
0x31d: V276 = ISZERO V275
0x31e: V277 = 0x326
0x321: JUMPI 0x326 V276
---
Entry stack: [V10, 0x10a, V72, V73, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x10a, V72, V73]

================================

Block 0x322
[0x322:0x325]
---
Predecessors: [0x31b]
Successors: []
---
0x322 PUSH1 0x0
0x324 DUP1
0x325 REVERT
---
0x322: V278 = 0x0
0x325: REVERT 0x0 0x0
---
Entry stack: [V10, 0x10a, V72, V73]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10a, V72, V73]

================================

Block 0x326
[0x326:0x32f]
---
Predecessors: [0x31b]
Successors: [0x330, 0x334]
---
0x326 JUMPDEST
0x327 PUSH1 0x3
0x329 SLOAD
0x32a DUP2
0x32b EQ
0x32c PUSH2 0x334
0x32f JUMPI
---
0x326: JUMPDEST 
0x327: V279 = 0x3
0x329: V280 = S[0x3]
0x32b: V281 = EQ V73 V280
0x32c: V282 = 0x334
0x32f: JUMPI 0x334 V281
---
Entry stack: [V10, 0x10a, V72, V73]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x10a, V72, V73]

================================

Block 0x330
[0x330:0x333]
---
Predecessors: [0x326]
Successors: []
---
0x330 PUSH1 0x0
0x332 DUP1
0x333 REVERT
---
0x330: V283 = 0x0
0x333: REVERT 0x0 0x0
---
Entry stack: [V10, 0x10a, V72, V73]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10a, V72, V73]

================================

Block 0x334
[0x334:0x34a]
---
Predecessors: [0x326]
Successors: [0x34b, 0x3e8]
---
0x334 JUMPDEST
0x335 PUSH1 0x1
0x337 SLOAD
0x338 PUSH1 0x1
0x33a PUSH1 0xa0
0x33c PUSH1 0x2
0x33e EXP
0x33f SUB
0x340 DUP4
0x341 DUP2
0x342 AND
0x343 SWAP2
0x344 AND
0x345 EQ
0x346 ISZERO
0x347 PUSH2 0x3e8
0x34a JUMPI
---
0x334: JUMPDEST 
0x335: V284 = 0x1
0x337: V285 = S[0x1]
0x338: V286 = 0x1
0x33a: V287 = 0xa0
0x33c: V288 = 0x2
0x33e: V289 = EXP 0x2 0xa0
0x33f: V290 = SUB 0x10000000000000000000000000000000000000000 0x1
0x342: V291 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0x344: V292 = AND V285 0xffffffffffffffffffffffffffffffffffffffff
0x345: V293 = EQ V292 V291
0x346: V294 = ISZERO V293
0x347: V295 = 0x3e8
0x34a: JUMPI 0x3e8 V294
---
Entry stack: [V10, 0x10a, V72, V73]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x10a, V72, V73]

================================

Block 0x34b
[0x34b:0x395]
---
Predecessors: [0x334]
Successors: [0x72d]
---
0x34b PUSH32 0xd64cb44456bd7d4e47224cb980c2160795ccb658cf7680554fd221cb46637deb
0x36c PUSH1 0x40
0x36e MLOAD
0x36f PUSH1 0x40
0x371 MLOAD
0x372 DUP1
0x373 SWAP2
0x374 SUB
0x375 SWAP1
0x376 LOG1
0x377 PUSH1 0x5
0x379 DUP1
0x37a SLOAD
0x37b PUSH1 0xff
0x37d NOT
0x37e AND
0x37f PUSH1 0x1
0x381 OR
0x382 SWAP1
0x383 SSTORE
0x384 PUSH1 0x4
0x386 SLOAD
0x387 PUSH2 0x396
0x38a SWAP1
0x38b DUP3
0x38c PUSH4 0xffffffff
0x391 PUSH2 0x72d
0x394 AND
0x395 JUMP
---
0x34b: V296 = 0xd64cb44456bd7d4e47224cb980c2160795ccb658cf7680554fd221cb46637deb
0x36c: V297 = 0x40
0x36e: V298 = M[0x40]
0x36f: V299 = 0x40
0x371: V300 = M[0x40]
0x374: V301 = SUB V298 V300
0x376: LOG V300 V301 0xd64cb44456bd7d4e47224cb980c2160795ccb658cf7680554fd221cb46637deb
0x377: V302 = 0x5
0x37a: V303 = S[0x5]
0x37b: V304 = 0xff
0x37d: V305 = NOT 0xff
0x37e: V306 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V303
0x37f: V307 = 0x1
0x381: V308 = OR 0x1 V306
0x383: S[0x5] = V308
0x384: V309 = 0x4
0x386: V310 = S[0x4]
0x387: V311 = 0x396
0x38c: V312 = 0xffffffff
0x391: V313 = 0x72d
0x394: V314 = AND 0x72d 0xffffffff
0x395: JUMP 0x72d
---
Entry stack: [V10, 0x10a, V72, V73]
Stack pops: 1
Stack additions: [S0, 0x396, V310, S0]
Exit stack: [V10, 0x10a, V72, V73, 0x396, V310, V73]

================================

Block 0x396
[0x396:0x3a9]
---
Predecessors: [0x73c]
Successors: [0x3aa, 0x3e3]
---
0x396 JUMPDEST
0x397 PUSH1 0x4
0x399 SSTORE
0x39a PUSH1 0x5
0x39c SLOAD
0x39d PUSH2 0x100
0x3a0 SWAP1
0x3a1 DIV
0x3a2 PUSH1 0xff
0x3a4 AND
0x3a5 ISZERO
0x3a6 PUSH2 0x3e3
0x3a9 JUMPI
---
0x396: JUMPDEST 
0x397: V315 = 0x4
0x399: S[0x4] = S0
0x39a: V316 = 0x5
0x39c: V317 = S[0x5]
0x39d: V318 = 0x100
0x3a1: V319 = DIV V317 0x100
0x3a2: V320 = 0xff
0x3a4: V321 = AND 0xff V319
0x3a5: V322 = ISZERO V321
0x3a6: V323 = 0x3e3
0x3a9: JUMPI 0x3e3 V322
---
Entry stack: [V10, 0x10a, V72, V73, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x10a, V72, V73]

================================

Block 0x3aa
[0x3aa:0x3e2]
---
Predecessors: [0x396]
Successors: [0x3e3]
---
0x3aa PUSH32 0x4cf2e2dcdeacb2322843921968cb0e6a97a686594cb0a4f29abb65a7ed651952
0x3cb PUSH1 0x40
0x3cd MLOAD
0x3ce PUSH1 0x40
0x3d0 MLOAD
0x3d1 DUP1
0x3d2 SWAP2
0x3d3 SUB
0x3d4 SWAP1
0x3d5 LOG1
0x3d6 PUSH1 0x8
0x3d8 DUP1
0x3d9 SLOAD
0x3da PUSH1 0xff
0x3dc NOT
0x3dd AND
0x3de PUSH1 0x1
0x3e0 OR
0x3e1 SWAP1
0x3e2 SSTORE
---
0x3aa: V324 = 0x4cf2e2dcdeacb2322843921968cb0e6a97a686594cb0a4f29abb65a7ed651952
0x3cb: V325 = 0x40
0x3cd: V326 = M[0x40]
0x3ce: V327 = 0x40
0x3d0: V328 = M[0x40]
0x3d3: V329 = SUB V326 V328
0x3d5: LOG V328 V329 0x4cf2e2dcdeacb2322843921968cb0e6a97a686594cb0a4f29abb65a7ed651952
0x3d6: V330 = 0x8
0x3d9: V331 = S[0x8]
0x3da: V332 = 0xff
0x3dc: V333 = NOT 0xff
0x3dd: V334 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V331
0x3de: V335 = 0x1
0x3e0: V336 = OR 0x1 V334
0x3e2: S[0x8] = V336
---
Entry stack: [V10, 0x10a, V72, V73]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10a, V72, V73]

================================

Block 0x3e3
[0x3e3:0x3e7]
---
Predecessors: [0x396, 0x3aa]
Successors: [0x47e]
---
0x3e3 JUMPDEST
0x3e4 PUSH2 0x47e
0x3e7 JUMP
---
0x3e3: JUMPDEST 
0x3e4: V337 = 0x47e
0x3e7: JUMP 0x47e
---
Entry stack: [V10, 0x10a, V72, V73]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10a, V72, V73]

================================

Block 0x3e8
[0x3e8:0x435]
---
Predecessors: [0x334]
Successors: [0x72d]
---
0x3e8 JUMPDEST
0x3e9 PUSH32 0x711d93172fa8bb12d838a56d5adf4de575676c312633d40fb11e33d0a43915ec
0x40a PUSH1 0x40
0x40c MLOAD
0x40d PUSH1 0x40
0x40f MLOAD
0x410 DUP1
0x411 SWAP2
0x412 SUB
0x413 SWAP1
0x414 LOG1
0x415 PUSH1 0x5
0x417 DUP1
0x418 SLOAD
0x419 PUSH2 0xff00
0x41c NOT
0x41d AND
0x41e PUSH2 0x100
0x421 OR
0x422 SWAP1
0x423 SSTORE
0x424 PUSH1 0x4
0x426 SLOAD
0x427 PUSH2 0x436
0x42a SWAP1
0x42b DUP3
0x42c PUSH4 0xffffffff
0x431 PUSH2 0x72d
0x434 AND
0x435 JUMP
---
0x3e8: JUMPDEST 
0x3e9: V338 = 0x711d93172fa8bb12d838a56d5adf4de575676c312633d40fb11e33d0a43915ec
0x40a: V339 = 0x40
0x40c: V340 = M[0x40]
0x40d: V341 = 0x40
0x40f: V342 = M[0x40]
0x412: V343 = SUB V340 V342
0x414: LOG V342 V343 0x711d93172fa8bb12d838a56d5adf4de575676c312633d40fb11e33d0a43915ec
0x415: V344 = 0x5
0x418: V345 = S[0x5]
0x419: V346 = 0xff00
0x41c: V347 = NOT 0xff00
0x41d: V348 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V345
0x41e: V349 = 0x100
0x421: V350 = OR 0x100 V348
0x423: S[0x5] = V350
0x424: V351 = 0x4
0x426: V352 = S[0x4]
0x427: V353 = 0x436
0x42c: V354 = 0xffffffff
0x431: V355 = 0x72d
0x434: V356 = AND 0x72d 0xffffffff
0x435: JUMP 0x72d
---
Entry stack: [V10, 0x10a, V72, V73]
Stack pops: 1
Stack additions: [S0, 0x436, V352, S0]
Exit stack: [V10, 0x10a, V72, V73, 0x436, V352, V73]

================================

Block 0x436
[0x436:0x444]
---
Predecessors: [0x73c]
Successors: [0x445, 0x47e]
---
0x436 JUMPDEST
0x437 PUSH1 0x4
0x439 SSTORE
0x43a PUSH1 0x5
0x43c SLOAD
0x43d PUSH1 0xff
0x43f AND
0x440 ISZERO
0x441 PUSH2 0x47e
0x444 JUMPI
---
0x436: JUMPDEST 
0x437: V357 = 0x4
0x439: S[0x4] = S0
0x43a: V358 = 0x5
0x43c: V359 = S[0x5]
0x43d: V360 = 0xff
0x43f: V361 = AND 0xff V359
0x440: V362 = ISZERO V361
0x441: V363 = 0x47e
0x444: JUMPI 0x47e V362
---
Entry stack: [V10, 0x10a, V72, V73, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x10a, V72, V73]

================================

Block 0x445
[0x445:0x47d]
---
Predecessors: [0x436]
Successors: [0x47e]
---
0x445 PUSH32 0x4cf2e2dcdeacb2322843921968cb0e6a97a686594cb0a4f29abb65a7ed651952
0x466 PUSH1 0x40
0x468 MLOAD
0x469 PUSH1 0x40
0x46b MLOAD
0x46c DUP1
0x46d SWAP2
0x46e SUB
0x46f SWAP1
0x470 LOG1
0x471 PUSH1 0x8
0x473 DUP1
0x474 SLOAD
0x475 PUSH1 0xff
0x477 NOT
0x478 AND
0x479 PUSH1 0x1
0x47b OR
0x47c SWAP1
0x47d SSTORE
---
0x445: V364 = 0x4cf2e2dcdeacb2322843921968cb0e6a97a686594cb0a4f29abb65a7ed651952
0x466: V365 = 0x40
0x468: V366 = M[0x40]
0x469: V367 = 0x40
0x46b: V368 = M[0x40]
0x46e: V369 = SUB V366 V368
0x470: LOG V368 V369 0x4cf2e2dcdeacb2322843921968cb0e6a97a686594cb0a4f29abb65a7ed651952
0x471: V370 = 0x8
0x474: V371 = S[0x8]
0x475: V372 = 0xff
0x477: V373 = NOT 0xff
0x478: V374 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V371
0x479: V375 = 0x1
0x47b: V376 = OR 0x1 V374
0x47d: S[0x8] = V376
---
Entry stack: [V10, 0x10a, V72, V73]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10a, V72, V73]

================================

Block 0x47e
[0x47e:0x481]
---
Predecessors: [0x3e3, 0x436, 0x445]
Successors: [0x10a]
---
0x47e JUMPDEST
0x47f POP
0x480 POP
0x481 JUMP
---
0x47e: JUMPDEST 
0x481: JUMP 0x10a
---
Entry stack: [V10, 0x10a, V72, V73]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x482
[0x482:0x48a]
---
Predecessors: [0x117]
Successors: [0x11f]
---
0x482 JUMPDEST
0x483 PUSH1 0x5
0x485 SLOAD
0x486 PUSH1 0xff
0x488 AND
0x489 DUP2
0x48a JUMP
---
0x482: JUMPDEST 
0x483: V377 = 0x5
0x485: V378 = S[0x5]
0x486: V379 = 0xff
0x488: V380 = AND 0xff V378
0x48a: JUMP 0x11f
---
Entry stack: [V10, 0x11f]
Stack pops: 1
Stack additions: [S0, V380]
Exit stack: [V10, 0x11f, V380]

================================

Block 0x48b
[0x48b:0x4a1]
---
Predecessors: [0x13e]
Successors: [0x4a2, 0x4a3]
---
0x48b JUMPDEST
0x48c PUSH1 0x0
0x48e SLOAD
0x48f CALLER
0x490 PUSH1 0x1
0x492 PUSH1 0xa0
0x494 PUSH1 0x2
0x496 EXP
0x497 SUB
0x498 SWAP1
0x499 DUP2
0x49a AND
0x49b SWAP2
0x49c AND
0x49d EQ
0x49e PUSH2 0x4a3
0x4a1 JUMPI
---
0x48b: JUMPDEST 
0x48c: V381 = 0x0
0x48e: V382 = S[0x0]
0x48f: V383 = CALLER
0x490: V384 = 0x1
0x492: V385 = 0xa0
0x494: V386 = 0x2
0x496: V387 = EXP 0x2 0xa0
0x497: V388 = SUB 0x10000000000000000000000000000000000000000 0x1
0x49a: V389 = AND 0xffffffffffffffffffffffffffffffffffffffff V383
0x49c: V390 = AND V382 0xffffffffffffffffffffffffffffffffffffffff
0x49d: V391 = EQ V390 V389
0x49e: V392 = 0x4a3
0x4a1: JUMPI 0x4a3 V391
---
Entry stack: [V10, 0x10a]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10a]

================================

Block 0x4a2
[0x4a2:0x4a2]
---
Predecessors: [0x48b]
Successors: []
---
0x4a2 INVALID
---
0x4a2: INVALID 
---
Entry stack: [V10, 0x10a]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10a]

================================

Block 0x4a3
[0x4a3:0x4b4]
---
Predecessors: [0x48b]
Successors: [0x4b5, 0x4b6]
---
0x4a3 JUMPDEST
0x4a4 PUSH1 0x1
0x4a6 PUSH1 0x8
0x4a8 SLOAD
0x4a9 PUSH1 0xff
0x4ab AND
0x4ac PUSH1 0x2
0x4ae DUP2
0x4af GT
0x4b0 ISZERO
0x4b1 PUSH2 0x4b6
0x4b4 JUMPI
---
0x4a3: JUMPDEST 
0x4a4: V393 = 0x1
0x4a6: V394 = 0x8
0x4a8: V395 = S[0x8]
0x4a9: V396 = 0xff
0x4ab: V397 = AND 0xff V395
0x4ac: V398 = 0x2
0x4af: V399 = GT V397 0x2
0x4b0: V400 = ISZERO V399
0x4b1: V401 = 0x4b6
0x4b4: JUMPI 0x4b6 V400
---
Entry stack: [V10, 0x10a]
Stack pops: 0
Stack additions: [0x1, V397]
Exit stack: [V10, 0x10a, 0x1, V397]

================================

Block 0x4b5
[0x4b5:0x4b5]
---
Predecessors: [0x4a3]
Successors: []
---
0x4b5 INVALID
---
0x4b5: INVALID 
---
Entry stack: [V10, 0x10a, 0x1, V397]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10a, 0x1, V397]

================================

Block 0x4b6
[0x4b6:0x4bb]
---
Predecessors: [0x4a3]
Successors: [0x4bc, 0x4c0]
---
0x4b6 JUMPDEST
0x4b7 EQ
0x4b8 PUSH2 0x4c0
0x4bb JUMPI
---
0x4b6: JUMPDEST 
0x4b7: V402 = EQ V397 0x1
0x4b8: V403 = 0x4c0
0x4bb: JUMPI 0x4c0 V402
---
Entry stack: [V10, 0x10a, 0x1, V397]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x10a]

================================

Block 0x4bc
[0x4bc:0x4bf]
---
Predecessors: [0x4b6]
Successors: []
---
0x4bc PUSH1 0x0
0x4be DUP1
0x4bf REVERT
---
0x4bc: V404 = 0x0
0x4bf: REVERT 0x0 0x0
---
Entry stack: [V10, 0x10a]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10a]

================================

Block 0x4c0
[0x4c0:0x500]
---
Predecessors: [0x4b6]
Successors: [0x743]
---
0x4c0 JUMPDEST
0x4c1 PUSH1 0x8
0x4c3 DUP1
0x4c4 SLOAD
0x4c5 PUSH1 0xff
0x4c7 NOT
0x4c8 AND
0x4c9 PUSH1 0x2
0x4cb OR
0x4cc SWAP1
0x4cd SSTORE
0x4ce PUSH32 0xb537cbcadc098cfedf5a04ef7e68a8554b55f7e45bfdaca1cbc51a686ef65f48
0x4ef PUSH1 0x40
0x4f1 MLOAD
0x4f2 PUSH1 0x40
0x4f4 MLOAD
0x4f5 DUP1
0x4f6 SWAP2
0x4f7 SUB
0x4f8 SWAP1
0x4f9 LOG1
0x4fa PUSH2 0x501
0x4fd PUSH2 0x743
0x500 JUMP
---
0x4c0: JUMPDEST 
0x4c1: V405 = 0x8
0x4c4: V406 = S[0x8]
0x4c5: V407 = 0xff
0x4c7: V408 = NOT 0xff
0x4c8: V409 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V406
0x4c9: V410 = 0x2
0x4cb: V411 = OR 0x2 V409
0x4cd: S[0x8] = V411
0x4ce: V412 = 0xb537cbcadc098cfedf5a04ef7e68a8554b55f7e45bfdaca1cbc51a686ef65f48
0x4ef: V413 = 0x40
0x4f1: V414 = M[0x40]
0x4f2: V415 = 0x40
0x4f4: V416 = M[0x40]
0x4f7: V417 = SUB V414 V416
0x4f9: LOG V416 V417 0xb537cbcadc098cfedf5a04ef7e68a8554b55f7e45bfdaca1cbc51a686ef65f48
0x4fa: V418 = 0x501
0x4fd: V419 = 0x743
0x500: JUMP 0x743
---
Entry stack: [V10, 0x10a]
Stack pops: 0
Stack additions: [0x501]
Exit stack: [V10, 0x10a, 0x501]

================================

Block 0x501
[0x501:0x502]
---
Predecessors: [0x501, 0x58e, 0x7db, 0x824]
Successors: [0x10a, 0x501]
---
0x501 JUMPDEST
0x502 JUMP
---
0x501: JUMPDEST 
0x502: JUMP S0
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x503
[0x503:0x508]
---
Predecessors: [0x151]
Successors: [0x159]
---
0x503 JUMPDEST
0x504 PUSH1 0x3
0x506 SLOAD
0x507 DUP2
0x508 JUMP
---
0x503: JUMPDEST 
0x504: V420 = 0x3
0x506: V421 = S[0x3]
0x508: JUMP 0x159
---
Entry stack: [V10, 0x159]
Stack pops: 1
Stack additions: [S0, V421]
Exit stack: [V10, 0x159, V421]

================================

Block 0x509
[0x509:0x517]
---
Predecessors: [0x176]
Successors: [0x17e]
---
0x509 JUMPDEST
0x50a PUSH1 0x1
0x50c SLOAD
0x50d PUSH1 0x1
0x50f PUSH1 0xa0
0x511 PUSH1 0x2
0x513 EXP
0x514 SUB
0x515 AND
0x516 DUP2
0x517 JUMP
---
0x509: JUMPDEST 
0x50a: V422 = 0x1
0x50c: V423 = S[0x1]
0x50d: V424 = 0x1
0x50f: V425 = 0xa0
0x511: V426 = 0x2
0x513: V427 = EXP 0x2 0xa0
0x514: V428 = SUB 0x10000000000000000000000000000000000000000 0x1
0x515: V429 = AND 0xffffffffffffffffffffffffffffffffffffffff V423
0x517: JUMP 0x17e
---
Entry stack: [V10, 0x17e]
Stack pops: 1
Stack additions: [S0, V429]
Exit stack: [V10, 0x17e, V429]

================================

Block 0x518
[0x518:0x526]
---
Predecessors: [0x1a5]
Successors: [0x17e]
---
0x518 JUMPDEST
0x519 PUSH1 0x0
0x51b SLOAD
0x51c PUSH1 0x1
0x51e PUSH1 0xa0
0x520 PUSH1 0x2
0x522 EXP
0x523 SUB
0x524 AND
0x525 DUP2
0x526 JUMP
---
0x518: JUMPDEST 
0x519: V430 = 0x0
0x51b: V431 = S[0x0]
0x51c: V432 = 0x1
0x51e: V433 = 0xa0
0x520: V434 = 0x2
0x522: V435 = EXP 0x2 0xa0
0x523: V436 = SUB 0x10000000000000000000000000000000000000000 0x1
0x524: V437 = AND 0xffffffffffffffffffffffffffffffffffffffff V431
0x526: JUMP 0x17e
---
Entry stack: [V10, 0x17e]
Stack pops: 1
Stack additions: [S0, V437]
Exit stack: [V10, 0x17e, V437]

================================

Block 0x527
[0x527:0x532]
---
Predecessors: [0x1b8]
Successors: [0x533, 0x539]
---
0x527 JUMPDEST
0x528 TIMESTAMP
0x529 PUSH1 0x6
0x52b SLOAD
0x52c GT
0x52d DUP1
0x52e ISZERO
0x52f PUSH2 0x539
0x532 JUMPI
---
0x527: JUMPDEST 
0x528: V438 = TIMESTAMP
0x529: V439 = 0x6
0x52b: V440 = S[0x6]
0x52c: V441 = GT V440 V438
0x52e: V442 = ISZERO V441
0x52f: V443 = 0x539
0x532: JUMPI 0x539 V442
---
Entry stack: [V10, 0x10a]
Stack pops: 0
Stack additions: [V441]
Exit stack: [V10, 0x10a, V441]

================================

Block 0x533
[0x533:0x538]
---
Predecessors: [0x527]
Successors: [0x539]
---
0x533 POP
0x534 TIMESTAMP
0x535 PUSH1 0x7
0x537 SLOAD
0x538 LT
---
0x534: V444 = TIMESTAMP
0x535: V445 = 0x7
0x537: V446 = S[0x7]
0x538: V447 = LT V446 V444
---
Entry stack: [V10, 0x10a, V441]
Stack pops: 1
Stack additions: [V447]
Exit stack: [V10, 0x10a, V447]

================================

Block 0x539
[0x539:0x53f]
---
Predecessors: [0x527, 0x533]
Successors: [0x540, 0x544]
---
0x539 JUMPDEST
0x53a ISZERO
0x53b ISZERO
0x53c PUSH2 0x544
0x53f JUMPI
---
0x539: JUMPDEST 
0x53a: V448 = ISZERO S0
0x53b: V449 = ISZERO V448
0x53c: V450 = 0x544
0x53f: JUMPI 0x544 V449
---
Entry stack: [V10, 0x10a, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x10a]

================================

Block 0x540
[0x540:0x543]
---
Predecessors: [0x539]
Successors: []
---
0x540 PUSH1 0x0
0x542 DUP1
0x543 REVERT
---
0x540: V451 = 0x0
0x543: REVERT 0x0 0x0
---
Entry stack: [V10, 0x10a]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10a]

================================

Block 0x544
[0x544:0x55a]
---
Predecessors: [0x539]
Successors: [0x55b, 0x55c]
---
0x544 JUMPDEST
0x545 PUSH1 0x0
0x547 SLOAD
0x548 CALLER
0x549 PUSH1 0x1
0x54b PUSH1 0xa0
0x54d PUSH1 0x2
0x54f EXP
0x550 SUB
0x551 SWAP1
0x552 DUP2
0x553 AND
0x554 SWAP2
0x555 AND
0x556 EQ
0x557 PUSH2 0x55c
0x55a JUMPI
---
0x544: JUMPDEST 
0x545: V452 = 0x0
0x547: V453 = S[0x0]
0x548: V454 = CALLER
0x549: V455 = 0x1
0x54b: V456 = 0xa0
0x54d: V457 = 0x2
0x54f: V458 = EXP 0x2 0xa0
0x550: V459 = SUB 0x10000000000000000000000000000000000000000 0x1
0x553: V460 = AND 0xffffffffffffffffffffffffffffffffffffffff V454
0x555: V461 = AND V453 0xffffffffffffffffffffffffffffffffffffffff
0x556: V462 = EQ V461 V460
0x557: V463 = 0x55c
0x55a: JUMPI 0x55c V462
---
Entry stack: [V10, 0x10a]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10a]

================================

Block 0x55b
[0x55b:0x55b]
---
Predecessors: [0x544]
Successors: []
---
0x55b INVALID
---
0x55b: INVALID 
---
Entry stack: [V10, 0x10a]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10a]

================================

Block 0x55c
[0x55c:0x56d]
---
Predecessors: [0x544]
Successors: [0x56e, 0x56f]
---
0x55c JUMPDEST
0x55d PUSH1 0x0
0x55f PUSH1 0x8
0x561 SLOAD
0x562 PUSH1 0xff
0x564 AND
0x565 PUSH1 0x2
0x567 DUP2
0x568 GT
0x569 ISZERO
0x56a PUSH2 0x56f
0x56d JUMPI
---
0x55c: JUMPDEST 
0x55d: V464 = 0x0
0x55f: V465 = 0x8
0x561: V466 = S[0x8]
0x562: V467 = 0xff
0x564: V468 = AND 0xff V466
0x565: V469 = 0x2
0x568: V470 = GT V468 0x2
0x569: V471 = ISZERO V470
0x56a: V472 = 0x56f
0x56d: JUMPI 0x56f V471
---
Entry stack: [V10, 0x10a]
Stack pops: 0
Stack additions: [0x0, V468]
Exit stack: [V10, 0x10a, 0x0, V468]

================================

Block 0x56e
[0x56e:0x56e]
---
Predecessors: [0x55c]
Successors: []
---
0x56e INVALID
---
0x56e: INVALID 
---
Entry stack: [V10, 0x10a, 0x0, V468]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10a, 0x0, V468]

================================

Block 0x56f
[0x56f:0x574]
---
Predecessors: [0x55c]
Successors: [0x575, 0x579]
---
0x56f JUMPDEST
0x570 EQ
0x571 PUSH2 0x579
0x574 JUMPI
---
0x56f: JUMPDEST 
0x570: V473 = EQ V468 0x0
0x571: V474 = 0x579
0x574: JUMPI 0x579 V473
---
Entry stack: [V10, 0x10a, 0x0, V468]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x10a]

================================

Block 0x575
[0x575:0x578]
---
Predecessors: [0x56f]
Successors: []
---
0x575 PUSH1 0x0
0x577 DUP1
0x578 REVERT
---
0x575: V475 = 0x0
0x578: REVERT 0x0 0x0
---
Entry stack: [V10, 0x10a]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10a]

================================

Block 0x579
[0x579:0x589]
---
Predecessors: [0x56f]
Successors: [0x58a, 0x58e]
---
0x579 JUMPDEST
0x57a PUSH1 0x3
0x57c SLOAD
0x57d PUSH1 0x2
0x57f MUL
0x580 PUSH1 0x4
0x582 SLOAD
0x583 LT
0x584 ISZERO
0x585 ISZERO
0x586 PUSH2 0x58e
0x589 JUMPI
---
0x579: JUMPDEST 
0x57a: V476 = 0x3
0x57c: V477 = S[0x3]
0x57d: V478 = 0x2
0x57f: V479 = MUL 0x2 V477
0x580: V480 = 0x4
0x582: V481 = S[0x4]
0x583: V482 = LT V481 V479
0x584: V483 = ISZERO V482
0x585: V484 = ISZERO V483
0x586: V485 = 0x58e
0x589: JUMPI 0x58e V484
---
Entry stack: [V10, 0x10a]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10a]

================================

Block 0x58a
[0x58a:0x58d]
---
Predecessors: [0x579]
Successors: []
---
0x58a PUSH1 0x0
0x58c DUP1
0x58d REVERT
---
0x58a: V486 = 0x0
0x58d: REVERT 0x0 0x0
---
Entry stack: [V10, 0x10a]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10a]

================================

Block 0x58e
[0x58e:0x5a7]
---
Predecessors: [0x579]
Successors: [0x501, 0x5a8]
---
0x58e JUMPDEST
0x58f PUSH1 0x8
0x591 DUP1
0x592 SLOAD
0x593 PUSH1 0xff
0x595 NOT
0x596 AND
0x597 PUSH1 0x2
0x599 OR
0x59a SWAP1
0x59b SSTORE
0x59c PUSH1 0x4
0x59e SLOAD
0x59f PUSH1 0x0
0x5a1 SWAP1
0x5a2 GT
0x5a3 ISZERO
0x5a4 PUSH2 0x501
0x5a7 JUMPI
---
0x58e: JUMPDEST 
0x58f: V487 = 0x8
0x592: V488 = S[0x8]
0x593: V489 = 0xff
0x595: V490 = NOT 0xff
0x596: V491 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V488
0x597: V492 = 0x2
0x599: V493 = OR 0x2 V491
0x59b: S[0x8] = V493
0x59c: V494 = 0x4
0x59e: V495 = S[0x4]
0x59f: V496 = 0x0
0x5a2: V497 = GT V495 0x0
0x5a3: V498 = ISZERO V497
0x5a4: V499 = 0x501
0x5a7: JUMPI 0x501 V498
---
Entry stack: [V10, 0x10a]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10a]

================================

Block 0x5a8
[0x5a8:0x5ae]
---
Predecessors: [0x58e]
Successors: [0x743]
---
0x5a8 PUSH2 0x501
0x5ab PUSH2 0x743
0x5ae JUMP
---
0x5a8: V500 = 0x501
0x5ab: V501 = 0x743
0x5ae: JUMP 0x743
---
Entry stack: [V10, 0x10a]
Stack pops: 0
Stack additions: [0x501]
Exit stack: [V10, 0x10a, 0x501]

================================

Block 0x5af
[0x5af:0x5b4]
---
Predecessors: [0x1cb]
Successors: [0x159]
---
0x5af JUMPDEST
0x5b0 PUSH1 0x7
0x5b2 SLOAD
0x5b3 DUP2
0x5b4 JUMP
---
0x5af: JUMPDEST 
0x5b0: V502 = 0x7
0x5b2: V503 = S[0x7]
0x5b4: JUMP 0x159
---
Entry stack: [V10, 0x159]
Stack pops: 1
Stack additions: [S0, V503]
Exit stack: [V10, 0x159, V503]

================================

Block 0x5b5
[0x5b5:0x5ba]
---
Predecessors: [0x1de]
Successors: [0x159]
---
0x5b5 JUMPDEST
0x5b6 PUSH1 0x4
0x5b8 SLOAD
0x5b9 DUP2
0x5ba JUMP
---
0x5b5: JUMPDEST 
0x5b6: V504 = 0x4
0x5b8: V505 = S[0x4]
0x5ba: JUMP 0x159
---
Entry stack: [V10, 0x159]
Stack pops: 1
Stack additions: [S0, V505]
Exit stack: [V10, 0x159, V505]

================================

Block 0x5bb
[0x5bb:0x5d1]
---
Predecessors: [0x1f1]
Successors: [0x5d2, 0x5d3]
---
0x5bb JUMPDEST
0x5bc PUSH1 0x0
0x5be SLOAD
0x5bf CALLER
0x5c0 PUSH1 0x1
0x5c2 PUSH1 0xa0
0x5c4 PUSH1 0x2
0x5c6 EXP
0x5c7 SUB
0x5c8 SWAP1
0x5c9 DUP2
0x5ca AND
0x5cb SWAP2
0x5cc AND
0x5cd EQ
0x5ce PUSH2 0x5d3
0x5d1 JUMPI
---
0x5bb: JUMPDEST 
0x5bc: V506 = 0x0
0x5be: V507 = S[0x0]
0x5bf: V508 = CALLER
0x5c0: V509 = 0x1
0x5c2: V510 = 0xa0
0x5c4: V511 = 0x2
0x5c6: V512 = EXP 0x2 0xa0
0x5c7: V513 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ca: V514 = AND 0xffffffffffffffffffffffffffffffffffffffff V508
0x5cc: V515 = AND V507 0xffffffffffffffffffffffffffffffffffffffff
0x5cd: V516 = EQ V515 V514
0x5ce: V517 = 0x5d3
0x5d1: JUMPI 0x5d3 V516
---
Entry stack: [V10, 0x10a, V164]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10a, V164]

================================

Block 0x5d2
[0x5d2:0x5d2]
---
Predecessors: [0x5bb]
Successors: []
---
0x5d2 INVALID
---
0x5d2: INVALID 
---
Entry stack: [V10, 0x10a, V164]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10a, V164]

================================

Block 0x5d3
[0x5d3:0x5e4]
---
Predecessors: [0x5bb]
Successors: [0x5e5, 0x5e6]
---
0x5d3 JUMPDEST
0x5d4 PUSH1 0x1
0x5d6 PUSH1 0x8
0x5d8 SLOAD
0x5d9 PUSH1 0xff
0x5db AND
0x5dc PUSH1 0x2
0x5de DUP2
0x5df GT
0x5e0 ISZERO
0x5e1 PUSH2 0x5e6
0x5e4 JUMPI
---
0x5d3: JUMPDEST 
0x5d4: V518 = 0x1
0x5d6: V519 = 0x8
0x5d8: V520 = S[0x8]
0x5d9: V521 = 0xff
0x5db: V522 = AND 0xff V520
0x5dc: V523 = 0x2
0x5df: V524 = GT V522 0x2
0x5e0: V525 = ISZERO V524
0x5e1: V526 = 0x5e6
0x5e4: JUMPI 0x5e6 V525
---
Entry stack: [V10, 0x10a, V164]
Stack pops: 0
Stack additions: [0x1, V522]
Exit stack: [V10, 0x10a, V164, 0x1, V522]

================================

Block 0x5e5
[0x5e5:0x5e5]
---
Predecessors: [0x5d3]
Successors: []
---
0x5e5 INVALID
---
0x5e5: INVALID 
---
Entry stack: [V10, 0x10a, V164, 0x1, V522]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10a, V164, 0x1, V522]

================================

Block 0x5e6
[0x5e6:0x5eb]
---
Predecessors: [0x5d3]
Successors: [0x5ec, 0x5f0]
---
0x5e6 JUMPDEST
0x5e7 EQ
0x5e8 PUSH2 0x5f0
0x5eb JUMPI
---
0x5e6: JUMPDEST 
0x5e7: V527 = EQ V522 0x1
0x5e8: V528 = 0x5f0
0x5eb: JUMPI 0x5f0 V527
---
Entry stack: [V10, 0x10a, V164, 0x1, V522]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x10a, V164]

================================

Block 0x5ec
[0x5ec:0x5ef]
---
Predecessors: [0x5e6]
Successors: []
---
0x5ec PUSH1 0x0
0x5ee DUP1
0x5ef REVERT
---
0x5ec: V529 = 0x0
0x5ef: REVERT 0x0 0x0
---
Entry stack: [V10, 0x10a, V164]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10a, V164]

================================

Block 0x5f0
[0x5f0:0x60c]
---
Predecessors: [0x5e6]
Successors: [0x60d, 0x611]
---
0x5f0 JUMPDEST
0x5f1 CALLER
0x5f2 PUSH1 0x1
0x5f4 PUSH1 0xa0
0x5f6 PUSH1 0x2
0x5f8 EXP
0x5f9 SUB
0x5fa AND
0x5fb DUP2
0x5fc PUSH1 0x1
0x5fe PUSH1 0xa0
0x600 PUSH1 0x2
0x602 EXP
0x603 SUB
0x604 AND
0x605 EQ
0x606 ISZERO
0x607 ISZERO
0x608 ISZERO
0x609 PUSH2 0x611
0x60c JUMPI
---
0x5f0: JUMPDEST 
0x5f1: V530 = CALLER
0x5f2: V531 = 0x1
0x5f4: V532 = 0xa0
0x5f6: V533 = 0x2
0x5f8: V534 = EXP 0x2 0xa0
0x5f9: V535 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5fa: V536 = AND 0xffffffffffffffffffffffffffffffffffffffff V530
0x5fc: V537 = 0x1
0x5fe: V538 = 0xa0
0x600: V539 = 0x2
0x602: V540 = EXP 0x2 0xa0
0x603: V541 = SUB 0x10000000000000000000000000000000000000000 0x1
0x604: V542 = AND 0xffffffffffffffffffffffffffffffffffffffff V164
0x605: V543 = EQ V542 V536
0x606: V544 = ISZERO V543
0x607: V545 = ISZERO V544
0x608: V546 = ISZERO V545
0x609: V547 = 0x611
0x60c: JUMPI 0x611 V546
---
Entry stack: [V10, 0x10a, V164]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x10a, V164]

================================

Block 0x60d
[0x60d:0x610]
---
Predecessors: [0x5f0]
Successors: []
---
0x60d PUSH1 0x0
0x60f DUP1
0x610 REVERT
---
0x60d: V548 = 0x0
0x610: REVERT 0x0 0x0
---
Entry stack: [V10, 0x10a, V164]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10a, V164]

================================

Block 0x611
[0x611:0x627]
---
Predecessors: [0x5f0]
Successors: [0x628, 0x63a]
---
0x611 JUMPDEST
0x612 PUSH1 0x1
0x614 SLOAD
0x615 PUSH1 0x1
0x617 PUSH1 0xa0
0x619 PUSH1 0x2
0x61b EXP
0x61c SUB
0x61d DUP3
0x61e DUP2
0x61f AND
0x620 SWAP2
0x621 AND
0x622 EQ
0x623 DUP1
0x624 PUSH2 0x63a
0x627 JUMPI
---
0x611: JUMPDEST 
0x612: V549 = 0x1
0x614: V550 = S[0x1]
0x615: V551 = 0x1
0x617: V552 = 0xa0
0x619: V553 = 0x2
0x61b: V554 = EXP 0x2 0xa0
0x61c: V555 = SUB 0x10000000000000000000000000000000000000000 0x1
0x61f: V556 = AND 0xffffffffffffffffffffffffffffffffffffffff V164
0x621: V557 = AND V550 0xffffffffffffffffffffffffffffffffffffffff
0x622: V558 = EQ V557 V556
0x624: V559 = 0x63a
0x627: JUMPI 0x63a V558
---
Entry stack: [V10, 0x10a, V164]
Stack pops: 1
Stack additions: [S0, V558]
Exit stack: [V10, 0x10a, V164, V558]

================================

Block 0x628
[0x628:0x639]
---
Predecessors: [0x611]
Successors: [0x63a]
---
0x628 POP
0x629 PUSH1 0x2
0x62b SLOAD
0x62c PUSH1 0x1
0x62e PUSH1 0xa0
0x630 PUSH1 0x2
0x632 EXP
0x633 SUB
0x634 DUP3
0x635 DUP2
0x636 AND
0x637 SWAP2
0x638 AND
0x639 EQ
---
0x629: V560 = 0x2
0x62b: V561 = S[0x2]
0x62c: V562 = 0x1
0x62e: V563 = 0xa0
0x630: V564 = 0x2
0x632: V565 = EXP 0x2 0xa0
0x633: V566 = SUB 0x10000000000000000000000000000000000000000 0x1
0x636: V567 = AND 0xffffffffffffffffffffffffffffffffffffffff V164
0x638: V568 = AND V561 0xffffffffffffffffffffffffffffffffffffffff
0x639: V569 = EQ V568 V567
---
Entry stack: [V10, 0x10a, V164, V558]
Stack pops: 2
Stack additions: [S1, V569]
Exit stack: [V10, 0x10a, V164, V569]

================================

Block 0x63a
[0x63a:0x640]
---
Predecessors: [0x611, 0x628]
Successors: [0x641, 0x645]
---
0x63a JUMPDEST
0x63b ISZERO
0x63c ISZERO
0x63d PUSH2 0x645
0x640 JUMPI
---
0x63a: JUMPDEST 
0x63b: V570 = ISZERO S0
0x63c: V571 = ISZERO V570
0x63d: V572 = 0x645
0x640: JUMPI 0x645 V571
---
Entry stack: [V10, 0x10a, V164, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x10a, V164]

================================

Block 0x641
[0x641:0x644]
---
Predecessors: [0x63a]
Successors: []
---
0x641 PUSH1 0x0
0x643 DUP1
0x644 REVERT
---
0x641: V573 = 0x0
0x644: REVERT 0x0 0x0
---
Entry stack: [V10, 0x10a, V164]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10a, V164]

================================

Block 0x645
[0x645:0x686]
---
Predecessors: [0x63a]
Successors: [0x879]
---
0x645 JUMPDEST
0x646 PUSH1 0x8
0x648 DUP1
0x649 SLOAD
0x64a PUSH1 0xff
0x64c NOT
0x64d AND
0x64e PUSH1 0x2
0x650 OR
0x651 SWAP1
0x652 SSTORE
0x653 PUSH32 0xb537cbcadc098cfedf5a04ef7e68a8554b55f7e45bfdaca1cbc51a686ef65f48
0x674 PUSH1 0x40
0x676 MLOAD
0x677 PUSH1 0x40
0x679 MLOAD
0x67a DUP1
0x67b SWAP2
0x67c SUB
0x67d SWAP1
0x67e LOG1
0x67f PUSH2 0x687
0x682 DUP2
0x683 PUSH2 0x879
0x686 JUMP
---
0x645: JUMPDEST 
0x646: V574 = 0x8
0x649: V575 = S[0x8]
0x64a: V576 = 0xff
0x64c: V577 = NOT 0xff
0x64d: V578 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V575
0x64e: V579 = 0x2
0x650: V580 = OR 0x2 V578
0x652: S[0x8] = V580
0x653: V581 = 0xb537cbcadc098cfedf5a04ef7e68a8554b55f7e45bfdaca1cbc51a686ef65f48
0x674: V582 = 0x40
0x676: V583 = M[0x40]
0x677: V584 = 0x40
0x679: V585 = M[0x40]
0x67c: V586 = SUB V583 V585
0x67e: LOG V585 V586 0xb537cbcadc098cfedf5a04ef7e68a8554b55f7e45bfdaca1cbc51a686ef65f48
0x67f: V587 = 0x687
0x683: V588 = 0x879
0x686: JUMP 0x879
---
Entry stack: [V10, 0x10a, V164]
Stack pops: 1
Stack additions: [S0, 0x687, S0]
Exit stack: [V10, 0x10a, V164, 0x687, V164]

================================

Block 0x687
[0x687:0x689]
---
Predecessors: [0x687, 0x6d4, 0x896]
Successors: [0x10a, 0x687]
---
0x687 JUMPDEST
0x688 POP
0x689 JUMP
---
0x687: JUMPDEST 
0x689: JUMP {0x10a, 0x687}
---
Entry stack: [V10, 0x10a, S2, {0x10a, 0x687}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x10a, S2]

================================

Block 0x68a
[0x68a:0x692]
---
Predecessors: [0x210]
Successors: [0x218]
---
0x68a JUMPDEST
0x68b PUSH1 0x8
0x68d SLOAD
0x68e PUSH1 0xff
0x690 AND
0x691 DUP2
0x692 JUMP
---
0x68a: JUMPDEST 
0x68b: V589 = 0x8
0x68d: V590 = S[0x8]
0x68e: V591 = 0xff
0x690: V592 = AND 0xff V590
0x692: JUMP 0x218
---
Entry stack: [V10, 0x218]
Stack pops: 1
Stack additions: [S0, V592]
Exit stack: [V10, 0x218, V592]

================================

Block 0x693
[0x693:0x6a7]
---
Predecessors: [0x247]
Successors: [0x17e]
---
0x693 JUMPDEST
0x694 PUSH1 0x5
0x696 SLOAD
0x697 PUSH3 0x10000
0x69b SWAP1
0x69c DIV
0x69d PUSH1 0x1
0x69f PUSH1 0xa0
0x6a1 PUSH1 0x2
0x6a3 EXP
0x6a4 SUB
0x6a5 AND
0x6a6 DUP2
0x6a7 JUMP
---
0x693: JUMPDEST 
0x694: V593 = 0x5
0x696: V594 = S[0x5]
0x697: V595 = 0x10000
0x69c: V596 = DIV V594 0x10000
0x69d: V597 = 0x1
0x69f: V598 = 0xa0
0x6a1: V599 = 0x2
0x6a3: V600 = EXP 0x2 0xa0
0x6a4: V601 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6a5: V602 = AND 0xffffffffffffffffffffffffffffffffffffffff V596
0x6a7: JUMP 0x17e
---
Entry stack: [V10, 0x17e]
Stack pops: 1
Stack additions: [S0, V602]
Exit stack: [V10, 0x17e, V602]

================================

Block 0x6a8
[0x6a8:0x6ad]
---
Predecessors: [0x25a]
Successors: [0x159]
---
0x6a8 JUMPDEST
0x6a9 PUSH1 0x6
0x6ab SLOAD
0x6ac DUP2
0x6ad JUMP
---
0x6a8: JUMPDEST 
0x6a9: V603 = 0x6
0x6ab: V604 = S[0x6]
0x6ad: JUMP 0x159
---
Entry stack: [V10, 0x159]
Stack pops: 1
Stack additions: [S0, V604]
Exit stack: [V10, 0x159, V604]

================================

Block 0x6ae
[0x6ae:0x6bb]
---
Predecessors: [0x26d]
Successors: [0x218]
---
0x6ae JUMPDEST
0x6af PUSH1 0x8
0x6b1 SLOAD
0x6b2 PUSH2 0x100
0x6b5 SWAP1
0x6b6 DIV
0x6b7 PUSH1 0xff
0x6b9 AND
0x6ba DUP2
0x6bb JUMP
---
0x6ae: JUMPDEST 
0x6af: V605 = 0x8
0x6b1: V606 = S[0x8]
0x6b2: V607 = 0x100
0x6b6: V608 = DIV V606 0x100
0x6b7: V609 = 0xff
0x6b9: V610 = AND 0xff V608
0x6bb: JUMP 0x218
---
Entry stack: [V10, 0x218]
Stack pops: 1
Stack additions: [S0, V610]
Exit stack: [V10, 0x218, V610]

================================

Block 0x6bc
[0x6bc:0x6d2]
---
Predecessors: [0x280]
Successors: [0x6d3, 0x6d4]
---
0x6bc JUMPDEST
0x6bd PUSH1 0x0
0x6bf SLOAD
0x6c0 CALLER
0x6c1 PUSH1 0x1
0x6c3 PUSH1 0xa0
0x6c5 PUSH1 0x2
0x6c7 EXP
0x6c8 SUB
0x6c9 SWAP1
0x6ca DUP2
0x6cb AND
0x6cc SWAP2
0x6cd AND
0x6ce EQ
0x6cf PUSH2 0x6d4
0x6d2 JUMPI
---
0x6bc: JUMPDEST 
0x6bd: V611 = 0x0
0x6bf: V612 = S[0x0]
0x6c0: V613 = CALLER
0x6c1: V614 = 0x1
0x6c3: V615 = 0xa0
0x6c5: V616 = 0x2
0x6c7: V617 = EXP 0x2 0xa0
0x6c8: V618 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6cb: V619 = AND 0xffffffffffffffffffffffffffffffffffffffff V613
0x6cd: V620 = AND V612 0xffffffffffffffffffffffffffffffffffffffff
0x6ce: V621 = EQ V620 V619
0x6cf: V622 = 0x6d4
0x6d2: JUMPI 0x6d4 V621
---
Entry stack: [V10, 0x10a, V215]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10a, V215]

================================

Block 0x6d3
[0x6d3:0x6d3]
---
Predecessors: [0x6bc]
Successors: []
---
0x6d3 INVALID
---
0x6d3: INVALID 
---
Entry stack: [V10, 0x10a, V215]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10a, V215]

================================

Block 0x6d4
[0x6d4:0x6e3]
---
Predecessors: [0x6bc]
Successors: [0x687, 0x6e4]
---
0x6d4 JUMPDEST
0x6d5 PUSH1 0x1
0x6d7 PUSH1 0xa0
0x6d9 PUSH1 0x2
0x6db EXP
0x6dc SUB
0x6dd DUP2
0x6de AND
0x6df ISZERO
0x6e0 PUSH2 0x687
0x6e3 JUMPI
---
0x6d4: JUMPDEST 
0x6d5: V623 = 0x1
0x6d7: V624 = 0xa0
0x6d9: V625 = 0x2
0x6db: V626 = EXP 0x2 0xa0
0x6dc: V627 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6de: V628 = AND V215 0xffffffffffffffffffffffffffffffffffffffff
0x6df: V629 = ISZERO V628
0x6e0: V630 = 0x687
0x6e3: JUMPI 0x687 V629
---
Entry stack: [V10, 0x10a, V215]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x10a, V215]

================================

Block 0x6e4
[0x6e4:0x70f]
---
Predecessors: [0x6d4]
Successors: [0x10a]
---
0x6e4 PUSH1 0x0
0x6e6 DUP1
0x6e7 SLOAD
0x6e8 PUSH1 0x1
0x6ea PUSH1 0xa0
0x6ec PUSH1 0x2
0x6ee EXP
0x6ef SUB
0x6f0 DUP4
0x6f1 AND
0x6f2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x707 NOT
0x708 SWAP1
0x709 SWAP2
0x70a AND
0x70b OR
0x70c SWAP1
0x70d SSTORE
0x70e POP
0x70f JUMP
---
0x6e4: V631 = 0x0
0x6e7: V632 = S[0x0]
0x6e8: V633 = 0x1
0x6ea: V634 = 0xa0
0x6ec: V635 = 0x2
0x6ee: V636 = EXP 0x2 0xa0
0x6ef: V637 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6f1: V638 = AND V215 0xffffffffffffffffffffffffffffffffffffffff
0x6f2: V639 = 0xffffffffffffffffffffffffffffffffffffffff
0x707: V640 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x70a: V641 = AND V632 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x70b: V642 = OR V641 V638
0x70d: S[0x0] = V642
0x70f: JUMP 0x10a
---
Entry stack: [V10, 0x10a, V215]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x710
[0x710:0x71d]
---
Predecessors: [0x29f]
Successors: [0x11f]
---
0x710 JUMPDEST
0x711 PUSH1 0x5
0x713 SLOAD
0x714 PUSH2 0x100
0x717 SWAP1
0x718 DIV
0x719 PUSH1 0xff
0x71b AND
0x71c DUP2
0x71d JUMP
---
0x710: JUMPDEST 
0x711: V643 = 0x5
0x713: V644 = S[0x5]
0x714: V645 = 0x100
0x718: V646 = DIV V644 0x100
0x719: V647 = 0xff
0x71b: V648 = AND 0xff V646
0x71d: JUMP 0x11f
---
Entry stack: [V10, 0x11f]
Stack pops: 1
Stack additions: [S0, V648]
Exit stack: [V10, 0x11f, V648]

================================

Block 0x71e
[0x71e:0x72c]
---
Predecessors: [0x2b2]
Successors: [0x17e]
---
0x71e JUMPDEST
0x71f PUSH1 0x2
0x721 SLOAD
0x722 PUSH1 0x1
0x724 PUSH1 0xa0
0x726 PUSH1 0x2
0x728 EXP
0x729 SUB
0x72a AND
0x72b DUP2
0x72c JUMP
---
0x71e: JUMPDEST 
0x71f: V649 = 0x2
0x721: V650 = S[0x2]
0x722: V651 = 0x1
0x724: V652 = 0xa0
0x726: V653 = 0x2
0x728: V654 = EXP 0x2 0xa0
0x729: V655 = SUB 0x10000000000000000000000000000000000000000 0x1
0x72a: V656 = AND 0xffffffffffffffffffffffffffffffffffffffff V650
0x72c: JUMP 0x17e
---
Entry stack: [V10, 0x17e]
Stack pops: 1
Stack additions: [S0, V656]
Exit stack: [V10, 0x17e, V656]

================================

Block 0x72d
[0x72d:0x73a]
---
Predecessors: [0x34b, 0x3e8]
Successors: [0x73b, 0x73c]
---
0x72d JUMPDEST
0x72e PUSH1 0x0
0x730 DUP3
0x731 DUP3
0x732 ADD
0x733 DUP4
0x734 DUP2
0x735 LT
0x736 ISZERO
0x737 PUSH2 0x73c
0x73a JUMPI
---
0x72d: JUMPDEST 
0x72e: V657 = 0x0
0x732: V658 = ADD V73 S1
0x735: V659 = LT V658 S1
0x736: V660 = ISZERO V659
0x737: V661 = 0x73c
0x73a: JUMPI 0x73c V660
---
Entry stack: [V10, 0x10a, V72, V73, {0x396, 0x436}, S1, V73]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V658]
Exit stack: [V10, 0x10a, V72, V73, {0x396, 0x436}, S1, V73, 0x0, V658]

================================

Block 0x73b
[0x73b:0x73b]
---
Predecessors: [0x72d]
Successors: []
---
0x73b INVALID
---
0x73b: INVALID 
---
Entry stack: [V10, 0x10a, V72, V73, {0x396, 0x436}, S3, V73, 0x0, V658]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10a, V72, V73, {0x396, 0x436}, S3, V73, 0x0, V658]

================================

Block 0x73c
[0x73c:0x742]
---
Predecessors: [0x72d]
Successors: [0x396, 0x436]
---
0x73c JUMPDEST
0x73d SWAP4
0x73e SWAP3
0x73f POP
0x740 POP
0x741 POP
0x742 JUMP
---
0x73c: JUMPDEST 
0x742: JUMP {0x396, 0x436}
---
Entry stack: [V10, 0x10a, V72, V73, {0x396, 0x436}, S3, V73, 0x0, V658]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V10, 0x10a, V72, V73, V658]

================================

Block 0x743
[0x743:0x74e]
---
Predecessors: [0x4c0, 0x5a8]
Successors: [0x74f, 0x7db]
---
0x743 JUMPDEST
0x744 PUSH1 0x5
0x746 SLOAD
0x747 PUSH1 0xff
0x749 AND
0x74a ISZERO
0x74b PUSH2 0x7db
0x74e JUMPI
---
0x743: JUMPDEST 
0x744: V662 = 0x5
0x746: V663 = S[0x5]
0x747: V664 = 0xff
0x749: V665 = AND 0xff V663
0x74a: V666 = ISZERO V665
0x74b: V667 = 0x7db
0x74e: JUMPI 0x7db V666
---
Entry stack: [V10, 0x10a, 0x501]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10a, 0x501]

================================

Block 0x74f
[0x74f:0x782]
---
Predecessors: [0x743]
Successors: [0x783, 0x787]
---
0x74f PUSH1 0x1
0x751 SLOAD
0x752 PUSH1 0x3
0x754 SLOAD
0x755 PUSH1 0x1
0x757 PUSH1 0xa0
0x759 PUSH1 0x2
0x75b EXP
0x75c SUB
0x75d SWAP1
0x75e SWAP2
0x75f AND
0x760 SWAP1
0x761 DUP1
0x762 ISZERO
0x763 PUSH2 0x8fc
0x766 MUL
0x767 SWAP1
0x768 PUSH1 0x40
0x76a MLOAD
0x76b PUSH1 0x0
0x76d PUSH1 0x40
0x76f MLOAD
0x770 DUP1
0x771 DUP4
0x772 SUB
0x773 DUP2
0x774 DUP6
0x775 DUP9
0x776 DUP9
0x777 CALL
0x778 SWAP4
0x779 POP
0x77a POP
0x77b POP
0x77c POP
0x77d ISZERO
0x77e ISZERO
0x77f PUSH2 0x787
0x782 JUMPI
---
0x74f: V668 = 0x1
0x751: V669 = S[0x1]
0x752: V670 = 0x3
0x754: V671 = S[0x3]
0x755: V672 = 0x1
0x757: V673 = 0xa0
0x759: V674 = 0x2
0x75b: V675 = EXP 0x2 0xa0
0x75c: V676 = SUB 0x10000000000000000000000000000000000000000 0x1
0x75f: V677 = AND V669 0xffffffffffffffffffffffffffffffffffffffff
0x762: V678 = ISZERO V671
0x763: V679 = 0x8fc
0x766: V680 = MUL 0x8fc V678
0x768: V681 = 0x40
0x76a: V682 = M[0x40]
0x76b: V683 = 0x0
0x76d: V684 = 0x40
0x76f: V685 = M[0x40]
0x772: V686 = SUB V682 V685
0x777: V687 = CALL V680 V677 V671 V685 V686 V685 0x0
0x77d: V688 = ISZERO V687
0x77e: V689 = ISZERO V688
0x77f: V690 = 0x787
0x782: JUMPI 0x787 V689
---
Entry stack: [V10, 0x10a, 0x501]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10a, 0x501]

================================

Block 0x783
[0x783:0x786]
---
Predecessors: [0x74f]
Successors: []
---
0x783 PUSH1 0x0
0x785 DUP1
0x786 REVERT
---
0x783: V691 = 0x0
0x786: REVERT 0x0 0x0
---
Entry stack: [V10, 0x10a, 0x501]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10a, 0x501]

================================

Block 0x787
[0x787:0x7da]
---
Predecessors: [0x74f]
Successors: [0x7db]
---
0x787 JUMPDEST
0x788 PUSH1 0x1
0x78a SLOAD
0x78b PUSH1 0x3
0x78d SLOAD
0x78e PUSH32 0xbb28353e4598c3b9199101a66e0989549b659a59a54d2c27fbb183f1932c8e6d
0x7af SWAP2
0x7b0 PUSH1 0x1
0x7b2 PUSH1 0xa0
0x7b4 PUSH1 0x2
0x7b6 EXP
0x7b7 SUB
0x7b8 AND
0x7b9 SWAP1
0x7ba PUSH1 0x40
0x7bc MLOAD
0x7bd PUSH1 0x1
0x7bf PUSH1 0xa0
0x7c1 PUSH1 0x2
0x7c3 EXP
0x7c4 SUB
0x7c5 SWAP1
0x7c6 SWAP3
0x7c7 AND
0x7c8 DUP3
0x7c9 MSTORE
0x7ca PUSH1 0x20
0x7cc DUP3
0x7cd ADD
0x7ce MSTORE
0x7cf PUSH1 0x40
0x7d1 SWAP1
0x7d2 DUP2
0x7d3 ADD
0x7d4 SWAP1
0x7d5 MLOAD
0x7d6 DUP1
0x7d7 SWAP2
0x7d8 SUB
0x7d9 SWAP1
0x7da LOG1
---
0x787: JUMPDEST 
0x788: V692 = 0x1
0x78a: V693 = S[0x1]
0x78b: V694 = 0x3
0x78d: V695 = S[0x3]
0x78e: V696 = 0xbb28353e4598c3b9199101a66e0989549b659a59a54d2c27fbb183f1932c8e6d
0x7b0: V697 = 0x1
0x7b2: V698 = 0xa0
0x7b4: V699 = 0x2
0x7b6: V700 = EXP 0x2 0xa0
0x7b7: V701 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7b8: V702 = AND 0xffffffffffffffffffffffffffffffffffffffff V693
0x7ba: V703 = 0x40
0x7bc: V704 = M[0x40]
0x7bd: V705 = 0x1
0x7bf: V706 = 0xa0
0x7c1: V707 = 0x2
0x7c3: V708 = EXP 0x2 0xa0
0x7c4: V709 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7c7: V710 = AND V702 0xffffffffffffffffffffffffffffffffffffffff
0x7c9: M[V704] = V710
0x7ca: V711 = 0x20
0x7cd: V712 = ADD V704 0x20
0x7ce: M[V712] = V695
0x7cf: V713 = 0x40
0x7d3: V714 = ADD 0x40 V704
0x7d5: V715 = M[0x40]
0x7d8: V716 = SUB V714 V715
0x7da: LOG V715 V716 0xbb28353e4598c3b9199101a66e0989549b659a59a54d2c27fbb183f1932c8e6d
---
Entry stack: [V10, 0x10a, 0x501]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10a, 0x501]

================================

Block 0x7db
[0x7db:0x7eb]
---
Predecessors: [0x743, 0x787]
Successors: [0x501, 0x7ec]
---
0x7db JUMPDEST
0x7dc PUSH1 0x5
0x7de SLOAD
0x7df PUSH2 0x100
0x7e2 SWAP1
0x7e3 DIV
0x7e4 PUSH1 0xff
0x7e6 AND
0x7e7 ISZERO
0x7e8 PUSH2 0x501
0x7eb JUMPI
---
0x7db: JUMPDEST 
0x7dc: V717 = 0x5
0x7de: V718 = S[0x5]
0x7df: V719 = 0x100
0x7e3: V720 = DIV V718 0x100
0x7e4: V721 = 0xff
0x7e6: V722 = AND 0xff V720
0x7e7: V723 = ISZERO V722
0x7e8: V724 = 0x501
0x7eb: JUMPI 0x501 V723
---
Entry stack: [V10, 0x10a, 0x501]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10a, 0x501]

================================

Block 0x7ec
[0x7ec:0x81f]
---
Predecessors: [0x7db]
Successors: [0x820, 0x824]
---
0x7ec PUSH1 0x2
0x7ee SLOAD
0x7ef PUSH1 0x3
0x7f1 SLOAD
0x7f2 PUSH1 0x1
0x7f4 PUSH1 0xa0
0x7f6 PUSH1 0x2
0x7f8 EXP
0x7f9 SUB
0x7fa SWAP1
0x7fb SWAP2
0x7fc AND
0x7fd SWAP1
0x7fe DUP1
0x7ff ISZERO
0x800 PUSH2 0x8fc
0x803 MUL
0x804 SWAP1
0x805 PUSH1 0x40
0x807 MLOAD
0x808 PUSH1 0x0
0x80a PUSH1 0x40
0x80c MLOAD
0x80d DUP1
0x80e DUP4
0x80f SUB
0x810 DUP2
0x811 DUP6
0x812 DUP9
0x813 DUP9
0x814 CALL
0x815 SWAP4
0x816 POP
0x817 POP
0x818 POP
0x819 POP
0x81a ISZERO
0x81b ISZERO
0x81c PUSH2 0x824
0x81f JUMPI
---
0x7ec: V725 = 0x2
0x7ee: V726 = S[0x2]
0x7ef: V727 = 0x3
0x7f1: V728 = S[0x3]
0x7f2: V729 = 0x1
0x7f4: V730 = 0xa0
0x7f6: V731 = 0x2
0x7f8: V732 = EXP 0x2 0xa0
0x7f9: V733 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7fc: V734 = AND V726 0xffffffffffffffffffffffffffffffffffffffff
0x7ff: V735 = ISZERO V728
0x800: V736 = 0x8fc
0x803: V737 = MUL 0x8fc V735
0x805: V738 = 0x40
0x807: V739 = M[0x40]
0x808: V740 = 0x0
0x80a: V741 = 0x40
0x80c: V742 = M[0x40]
0x80f: V743 = SUB V739 V742
0x814: V744 = CALL V737 V734 V728 V742 V743 V742 0x0
0x81a: V745 = ISZERO V744
0x81b: V746 = ISZERO V745
0x81c: V747 = 0x824
0x81f: JUMPI 0x824 V746
---
Entry stack: [V10, 0x10a, 0x501]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10a, 0x501]

================================

Block 0x820
[0x820:0x823]
---
Predecessors: [0x7ec]
Successors: []
---
0x820 PUSH1 0x0
0x822 DUP1
0x823 REVERT
---
0x820: V748 = 0x0
0x823: REVERT 0x0 0x0
---
Entry stack: [V10, 0x10a, 0x501]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10a, 0x501]

================================

Block 0x824
[0x824:0x878]
---
Predecessors: [0x7ec]
Successors: [0x501]
---
0x824 JUMPDEST
0x825 PUSH1 0x2
0x827 SLOAD
0x828 PUSH1 0x3
0x82a SLOAD
0x82b PUSH32 0xbb28353e4598c3b9199101a66e0989549b659a59a54d2c27fbb183f1932c8e6d
0x84c SWAP2
0x84d PUSH1 0x1
0x84f PUSH1 0xa0
0x851 PUSH1 0x2
0x853 EXP
0x854 SUB
0x855 AND
0x856 SWAP1
0x857 PUSH1 0x40
0x859 MLOAD
0x85a PUSH1 0x1
0x85c PUSH1 0xa0
0x85e PUSH1 0x2
0x860 EXP
0x861 SUB
0x862 SWAP1
0x863 SWAP3
0x864 AND
0x865 DUP3
0x866 MSTORE
0x867 PUSH1 0x20
0x869 DUP3
0x86a ADD
0x86b MSTORE
0x86c PUSH1 0x40
0x86e SWAP1
0x86f DUP2
0x870 ADD
0x871 SWAP1
0x872 MLOAD
0x873 DUP1
0x874 SWAP2
0x875 SUB
0x876 SWAP1
0x877 LOG1
0x878 JUMP
---
0x824: JUMPDEST 
0x825: V749 = 0x2
0x827: V750 = S[0x2]
0x828: V751 = 0x3
0x82a: V752 = S[0x3]
0x82b: V753 = 0xbb28353e4598c3b9199101a66e0989549b659a59a54d2c27fbb183f1932c8e6d
0x84d: V754 = 0x1
0x84f: V755 = 0xa0
0x851: V756 = 0x2
0x853: V757 = EXP 0x2 0xa0
0x854: V758 = SUB 0x10000000000000000000000000000000000000000 0x1
0x855: V759 = AND 0xffffffffffffffffffffffffffffffffffffffff V750
0x857: V760 = 0x40
0x859: V761 = M[0x40]
0x85a: V762 = 0x1
0x85c: V763 = 0xa0
0x85e: V764 = 0x2
0x860: V765 = EXP 0x2 0xa0
0x861: V766 = SUB 0x10000000000000000000000000000000000000000 0x1
0x864: V767 = AND V759 0xffffffffffffffffffffffffffffffffffffffff
0x866: M[V761] = V767
0x867: V768 = 0x20
0x86a: V769 = ADD V761 0x20
0x86b: M[V769] = V752
0x86c: V770 = 0x40
0x870: V771 = ADD 0x40 V761
0x872: V772 = M[0x40]
0x875: V773 = SUB V771 V772
0x877: LOG V772 V773 0xbb28353e4598c3b9199101a66e0989549b659a59a54d2c27fbb183f1932c8e6d
0x878: JUMP 0x501
---
Entry stack: [V10, 0x10a, 0x501]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x10a]

================================

Block 0x879
[0x879:0x88a]
---
Predecessors: [0x645]
Successors: [0x88b, 0x88c]
---
0x879 JUMPDEST
0x87a PUSH1 0x2
0x87c PUSH1 0x8
0x87e SLOAD
0x87f PUSH1 0xff
0x881 AND
0x882 PUSH1 0x2
0x884 DUP2
0x885 GT
0x886 ISZERO
0x887 PUSH2 0x88c
0x88a JUMPI
---
0x879: JUMPDEST 
0x87a: V774 = 0x2
0x87c: V775 = 0x8
0x87e: V776 = S[0x8]
0x87f: V777 = 0xff
0x881: V778 = AND 0xff V776
0x882: V779 = 0x2
0x885: V780 = GT V778 0x2
0x886: V781 = ISZERO V780
0x887: V782 = 0x88c
0x88a: JUMPI 0x88c V781
---
Entry stack: [V10, 0x10a, V164, 0x687, V164]
Stack pops: 0
Stack additions: [0x2, V778]
Exit stack: [V10, 0x10a, V164, 0x687, V164, 0x2, V778]

================================

Block 0x88b
[0x88b:0x88b]
---
Predecessors: [0x879]
Successors: []
---
0x88b INVALID
---
0x88b: INVALID 
---
Entry stack: [V10, 0x10a, V164, 0x687, V164, 0x2, V778]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10a, V164, 0x687, V164, 0x2, V778]

================================

Block 0x88c
[0x88c:0x891]
---
Predecessors: [0x879]
Successors: [0x892, 0x896]
---
0x88c JUMPDEST
0x88d EQ
0x88e PUSH2 0x896
0x891 JUMPI
---
0x88c: JUMPDEST 
0x88d: V783 = EQ V778 0x2
0x88e: V784 = 0x896
0x891: JUMPI 0x896 V783
---
Entry stack: [V10, 0x10a, V164, 0x687, V164, 0x2, V778]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x10a, V164, 0x687, V164]

================================

Block 0x892
[0x892:0x895]
---
Predecessors: [0x88c]
Successors: []
---
0x892 PUSH1 0x0
0x894 DUP1
0x895 REVERT
---
0x892: V785 = 0x0
0x895: REVERT 0x0 0x0
---
Entry stack: [V10, 0x10a, V164, 0x687, V164]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10a, V164, 0x687, V164]

================================

Block 0x896
[0x896:0x8c9]
---
Predecessors: [0x88c]
Successors: [0x687, 0x8ca]
---
0x896 JUMPDEST
0x897 DUP1
0x898 PUSH1 0x1
0x89a PUSH1 0xa0
0x89c PUSH1 0x2
0x89e EXP
0x89f SUB
0x8a0 AND
0x8a1 PUSH2 0x8fc
0x8a4 PUSH1 0x3
0x8a6 SLOAD
0x8a7 PUSH1 0x2
0x8a9 MUL
0x8aa SWAP1
0x8ab DUP2
0x8ac ISZERO
0x8ad MUL
0x8ae SWAP1
0x8af PUSH1 0x40
0x8b1 MLOAD
0x8b2 PUSH1 0x0
0x8b4 PUSH1 0x40
0x8b6 MLOAD
0x8b7 DUP1
0x8b8 DUP4
0x8b9 SUB
0x8ba DUP2
0x8bb DUP6
0x8bc DUP9
0x8bd DUP9
0x8be CALL
0x8bf SWAP4
0x8c0 POP
0x8c1 POP
0x8c2 POP
0x8c3 POP
0x8c4 ISZERO
0x8c5 ISZERO
0x8c6 PUSH2 0x687
0x8c9 JUMPI
---
0x896: JUMPDEST 
0x898: V786 = 0x1
0x89a: V787 = 0xa0
0x89c: V788 = 0x2
0x89e: V789 = EXP 0x2 0xa0
0x89f: V790 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8a0: V791 = AND 0xffffffffffffffffffffffffffffffffffffffff V164
0x8a1: V792 = 0x8fc
0x8a4: V793 = 0x3
0x8a6: V794 = S[0x3]
0x8a7: V795 = 0x2
0x8a9: V796 = MUL 0x2 V794
0x8ac: V797 = ISZERO V796
0x8ad: V798 = MUL V797 0x8fc
0x8af: V799 = 0x40
0x8b1: V800 = M[0x40]
0x8b2: V801 = 0x0
0x8b4: V802 = 0x40
0x8b6: V803 = M[0x40]
0x8b9: V804 = SUB V800 V803
0x8be: V805 = CALL V798 V791 V796 V803 V804 V803 0x0
0x8c4: V806 = ISZERO V805
0x8c5: V807 = ISZERO V806
0x8c6: V808 = 0x687
0x8c9: JUMPI 0x687 V807
---
Entry stack: [V10, 0x10a, V164, 0x687, V164]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x10a, V164, 0x687, V164]

================================

Block 0x8ca
[0x8ca:0x8cd]
---
Predecessors: [0x896]
Successors: []
---
0x8ca PUSH1 0x0
0x8cc DUP1
0x8cd REVERT
---
0x8ca: V809 = 0x0
0x8cd: REVERT 0x0 0x0
---
Entry stack: [V10, 0x10a, V164, 0x687, V164]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10a, V164, 0x687, V164]

================================

Block 0x8ce
[0x8ce:0x8f3]
---
Predecessors: []
Successors: [0x8f4]
---
0x8ce STOP
0x8cf LOG1
0x8d0 PUSH6 0x627a7a723058
0x8d7 SHA3
0x8d8 MISSING 0xaa
0x8d9 PUSH26 0xf5feaeb1a01dfff9a460e7a5440b1185077ede07757fb666b6d8
---
0x8ce: STOP 
0x8cf: LOG S0 S1 S2
0x8d0: V810 = 0x627a7a723058
0x8d7: V811 = SHA3 0x627a7a723058 S3
0x8d8: MISSING 0xaa
0x8d9: V812 = 0xf5feaeb1a01dfff9a460e7a5440b1185077ede07757fb666b6d8
---
Entry stack: []
Stack pops: 0
Stack additions: [V811, 0xf5feaeb1a01dfff9a460e7a5440b1185077ede07757fb666b6d8]
Exit stack: []

================================

Block 0x8f4
[0x8f4:0x8f9]
---
Predecessors: [0x8ce]
Successors: []
---
0x8f4 JUMPDEST
0x8f5 MISSING 0x5c
0x8f6 SIGNEXTEND
0x8f7 DUP9
0x8f8 STOP
0x8f9 MISSING 0x29
---
0x8f4: JUMPDEST 
0x8f5: MISSING 0x5c
0x8f6: V813 = SIGNEXTEND S0 S1
0x8f8: STOP 
0x8f9: MISSING 0x29
---
Entry stack: [0xf5feaeb1a01dfff9a460e7a5440b1185077ede07757fb666b6d8]
Stack pops: 0
Stack additions: [S9, V813, S2, S3, S4, S5, S6, S7, S8, S9]
Exit stack: []

================================

Function 0:
Public function signature: 0x22f987ec
Entry block: 0x10c
Exit block: 0x11f
Body: 0x10c, 0x113, 0x117, 0x11f, 0x482

Function 1:
Public function signature: 0x23dc24ef
Entry block: 0x133
Exit block: 0x10a
Body: 0x10a, 0x133, 0x13a, 0x13e, 0x48b, 0x4a2, 0x4a3, 0x4b5, 0x4b6, 0x4bc, 0x4c0, 0x501

Function 2:
Public function signature: 0x60c7dc47
Entry block: 0x146
Exit block: 0x159
Body: 0x146, 0x14d, 0x151, 0x159, 0x503

Function 3:
Public function signature: 0x8bf0beee
Entry block: 0x16b
Exit block: 0x17e
Body: 0x16b, 0x172, 0x176, 0x17e, 0x509

Function 4:
Public function signature: 0x8da5cb5b
Entry block: 0x19a
Exit block: 0x17e
Body: 0x17e, 0x19a, 0x1a1, 0x1a5, 0x518

Function 5:
Public function signature: 0x90506f20
Entry block: 0x1ad
Exit block: 0x10a
Body: 0x10a, 0x1ad, 0x1b4, 0x1b8, 0x501, 0x527, 0x533, 0x539, 0x540, 0x544, 0x55b, 0x55c, 0x56e, 0x56f, 0x575, 0x579, 0x58a, 0x58e, 0x5a8

Function 6:
Public function signature: 0x99b6f607
Entry block: 0x1c0
Exit block: 0x159
Body: 0x159, 0x1c0, 0x1c7, 0x1cb, 0x5af

Function 7:
Public function signature: 0xb82aa6c3
Entry block: 0x1d3
Exit block: 0x159
Body: 0x159, 0x1d3, 0x1da, 0x1de, 0x5b5

Function 8:
Public function signature: 0xb8da1b0c
Entry block: 0x1e6
Exit block: 0x10a
Body: 0x10a, 0x1e6, 0x1ed, 0x1f1, 0x5bb, 0x5d2, 0x5d3, 0x5e5, 0x5e6, 0x5ec, 0x5f0, 0x60d, 0x611, 0x628, 0x63a, 0x641, 0x645, 0x687, 0x879, 0x88b, 0x88c, 0x892, 0x896, 0x8ca

Function 9:
Public function signature: 0xc19d93fb
Entry block: 0x205
Exit block: 0x228
Body: 0x205, 0x20c, 0x210, 0x218, 0x227, 0x228, 0x68a

Function 10:
Public function signature: 0xc94f598b
Entry block: 0x23c
Exit block: 0x17e
Body: 0x17e, 0x23c, 0x243, 0x247, 0x693

Function 11:
Public function signature: 0xd9c146de
Entry block: 0x24f
Exit block: 0x159
Body: 0x159, 0x24f, 0x256, 0x25a, 0x6a8

Function 12:
Public function signature: 0xdfbf53ae
Entry block: 0x262
Exit block: 0x228
Body: 0x218, 0x227, 0x228, 0x262, 0x269, 0x26d, 0x6ae

Function 13:
Public function signature: 0xf2fde38b
Entry block: 0x275
Exit block: 0x10a
Body: 0x10a, 0x275, 0x27c, 0x280, 0x687, 0x6bc, 0x6d3, 0x6d4, 0x6e4

Function 14:
Public function signature: 0xfc0c03a5
Entry block: 0x294
Exit block: 0x11f
Body: 0x11f, 0x294, 0x29b, 0x29f, 0x710

Function 15:
Public function signature: 0xfc168747
Entry block: 0x2a7
Exit block: 0x17e
Body: 0x17e, 0x2a7, 0x2ae, 0x2b2, 0x71e

Function 16:
Public fallback function
Entry block: 0xe3
Exit block: 0x10a
Body: 0xe3, 0xf5, 0xf6, 0xfc, 0x100, 0x10a, 0x2ba, 0x2cc, 0x2cd, 0x2d3, 0x2d7, 0x2ee, 0x2f2, 0x309, 0x31b, 0x322, 0x326, 0x330, 0x334, 0x34b, 0x396, 0x3aa, 0x3e3, 0x3e8, 0x436, 0x445, 0x47e

Function 17:
Private function
Entry block: 0x72d
Exit block: 0x73c
Body: 0x72d, 0x73c

Function 18:
Private function
Entry block: 0x743
Exit block: 0x824
Body: 0x743, 0x74f, 0x787, 0x7db, 0x7ec, 0x824

