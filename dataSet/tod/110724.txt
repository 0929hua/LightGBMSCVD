Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x7f]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x7f
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x7f
0xc: JUMPI 0x7f V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x357]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x11d9e195
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x357
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x11d9e195
0x22: V15 = EQ V13 0x11d9e195
0x23: V16 = 0x357
0x26: JUMPI 0x357 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x36c]
---
0x27 DUP1
0x28 PUSH4 0x1ff38308
0x2d EQ
0x2e PUSH2 0x36c
0x31 JUMPI
---
0x28: V17 = 0x1ff38308
0x2d: V18 = EQ 0x1ff38308 V13
0x2e: V19 = 0x36c
0x31: JUMPI 0x36c V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x39b]
---
0x32 DUP1
0x33 PUSH4 0x41c0e1b5
0x38 EQ
0x39 PUSH2 0x39b
0x3c JUMPI
---
0x33: V20 = 0x41c0e1b5
0x38: V21 = EQ 0x41c0e1b5 V13
0x39: V22 = 0x39b
0x3c: JUMPI 0x39b V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x3ae]
---
0x3d DUP1
0x3e PUSH4 0x5600d2fa
0x43 EQ
0x44 PUSH2 0x3ae
0x47 JUMPI
---
0x3e: V23 = 0x5600d2fa
0x43: V24 = EQ 0x5600d2fa V13
0x44: V25 = 0x3ae
0x47: JUMPI 0x3ae V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x3e1]
---
0x48 DUP1
0x49 PUSH4 0x68306e43
0x4e EQ
0x4f PUSH2 0x3e1
0x52 JUMPI
---
0x49: V26 = 0x68306e43
0x4e: V27 = EQ 0x68306e43 V13
0x4f: V28 = 0x3e1
0x52: JUMPI 0x3e1 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x412]
---
0x53 DUP1
0x54 PUSH4 0x6a474002
0x59 EQ
0x5a PUSH2 0x412
0x5d JUMPI
---
0x54: V29 = 0x6a474002
0x59: V30 = EQ 0x6a474002 V13
0x5a: V31 = 0x412
0x5d: JUMPI 0x412 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x425]
---
0x5e DUP1
0x5f PUSH4 0x8da5cb5b
0x64 EQ
0x65 PUSH2 0x425
0x68 JUMPI
---
0x5f: V32 = 0x8da5cb5b
0x64: V33 = EQ 0x8da5cb5b V13
0x65: V34 = 0x425
0x68: JUMPI 0x425 V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x438]
---
0x69 DUP1
0x6a PUSH4 0x984d11fc
0x6f EQ
0x70 PUSH2 0x438
0x73 JUMPI
---
0x6a: V35 = 0x984d11fc
0x6f: V36 = EQ 0x984d11fc V13
0x70: V37 = 0x438
0x73: JUMPI 0x438 V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x44b]
---
0x74 DUP1
0x75 PUSH4 0xa0a8e460
0x7a EQ
0x7b PUSH2 0x44b
0x7e JUMPI
---
0x75: V38 = 0xa0a8e460
0x7a: V39 = EQ 0xa0a8e460 V13
0x7b: V40 = 0x44b
0x7e: JUMPI 0x44b V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x93]
---
Predecessors: [0x0, 0x74]
Successors: [0x94, 0x95]
---
0x7f JUMPDEST
0x80 PUSH1 0x0
0x82 DUP1
0x83 PUSH1 0x0
0x85 DUP1
0x86 PUSH1 0x0
0x88 DUP1
0x89 PUSH1 0x4
0x8b SLOAD
0x8c CALLVALUE
0x8d DUP2
0x8e ISZERO
0x8f ISZERO
0x90 PUSH2 0x95
0x93 JUMPI
---
0x7f: JUMPDEST 
0x80: V41 = 0x0
0x83: V42 = 0x0
0x86: V43 = 0x0
0x89: V44 = 0x4
0x8b: V45 = S[0x4]
0x8c: V46 = CALLVALUE
0x8e: V47 = ISZERO V45
0x8f: V48 = ISZERO V47
0x90: V49 = 0x95
0x93: JUMPI 0x95 V48
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V45, V46]
Exit stack: [V13, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V45, V46]

================================

Block 0x94
[0x94:0x94]
---
Predecessors: [0x7f]
Successors: []
---
0x94 INVALID
---
0x94: INVALID 
---
Entry stack: [V13, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V45, V46]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V45, V46]

================================

Block 0x95
[0x95:0x9f]
---
Predecessors: [0x7f]
Successors: [0xa0, 0xa4]
---
0x95 JUMPDEST
0x96 DIV
0x97 SWAP6
0x98 POP
0x99 DUP6
0x9a ISZERO
0x9b ISZERO
0x9c PUSH2 0xa4
0x9f JUMPI
---
0x95: JUMPDEST 
0x96: V50 = DIV V46 V45
0x9a: V51 = ISZERO V50
0x9b: V52 = ISZERO V51
0x9c: V53 = 0xa4
0x9f: JUMPI 0xa4 V52
---
Entry stack: [V13, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V45, V46]
Stack pops: 8
Stack additions: [V50, S6, S5, S4, S3, S2]
Exit stack: [V13, V50, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xa0
[0xa0:0xa3]
---
Predecessors: [0x95]
Successors: []
---
0xa0 PUSH1 0x0
0xa2 DUP1
0xa3 REVERT
---
0xa0: V54 = 0x0
0xa3: REVERT 0x0 0x0
---
Entry stack: [V13, V50, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V50, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xa4
[0xa4:0xac]
---
Predecessors: [0x95]
Successors: [0xad]
---
0xa4 JUMPDEST
0xa5 PUSH1 0x0
0xa7 SWAP5
0xa8 POP
0xa9 PUSH1 0x0
0xab SWAP4
0xac POP
---
0xa4: JUMPDEST 
0xa5: V55 = 0x0
0xa9: V56 = 0x0
---
Entry stack: [V13, V50, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [0x0, 0x0, S2, S1, S0]
Exit stack: [V13, V50, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xad
[0xad:0xe7]
---
Predecessors: [0xa4, 0x30a]
Successors: [0xe8, 0xec]
---
0xad JUMPDEST
0xae PUSH1 0x0
0xb0 SLOAD
0xb1 PUSH1 0x1
0xb3 PUSH1 0xa0
0xb5 PUSH1 0x2
0xb7 EXP
0xb8 SUB
0xb9 AND
0xba PUSH4 0x4787513a
0xbf PUSH1 0x40
0xc1 MLOAD
0xc2 DUP2
0xc3 PUSH4 0xffffffff
0xc8 AND
0xc9 PUSH1 0xe0
0xcb PUSH1 0x2
0xcd EXP
0xce MUL
0xcf DUP2
0xd0 MSTORE
0xd1 PUSH1 0x4
0xd3 ADD
0xd4 PUSH1 0x20
0xd6 PUSH1 0x40
0xd8 MLOAD
0xd9 DUP1
0xda DUP4
0xdb SUB
0xdc DUP2
0xdd PUSH1 0x0
0xdf DUP8
0xe0 DUP1
0xe1 EXTCODESIZE
0xe2 ISZERO
0xe3 ISZERO
0xe4 PUSH2 0xec
0xe7 JUMPI
---
0xad: JUMPDEST 
0xae: V57 = 0x0
0xb0: V58 = S[0x0]
0xb1: V59 = 0x1
0xb3: V60 = 0xa0
0xb5: V61 = 0x2
0xb7: V62 = EXP 0x2 0xa0
0xb8: V63 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb9: V64 = AND 0xffffffffffffffffffffffffffffffffffffffff V58
0xba: V65 = 0x4787513a
0xbf: V66 = 0x40
0xc1: V67 = M[0x40]
0xc3: V68 = 0xffffffff
0xc8: V69 = AND 0xffffffff 0x4787513a
0xc9: V70 = 0xe0
0xcb: V71 = 0x2
0xcd: V72 = EXP 0x2 0xe0
0xce: V73 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x4787513a
0xd0: M[V67] = 0x4787513a00000000000000000000000000000000000000000000000000000000
0xd1: V74 = 0x4
0xd3: V75 = ADD 0x4 V67
0xd4: V76 = 0x20
0xd6: V77 = 0x40
0xd8: V78 = M[0x40]
0xdb: V79 = SUB V75 V78
0xdd: V80 = 0x0
0xe1: V81 = EXTCODESIZE V64
0xe2: V82 = ISZERO V81
0xe3: V83 = ISZERO V82
0xe4: V84 = 0xec
0xe7: JUMPI 0xec V83
---
Entry stack: [V13, V50, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [V64, 0x4787513a, V75, 0x20, V78, V79, V78, 0x0, V64]
Exit stack: [V13, V50, S4, S3, S2, S1, S0, V64, 0x4787513a, V75, 0x20, V78, V79, V78, 0x0, V64]

================================

Block 0xe8
[0xe8:0xeb]
---
Predecessors: [0xad]
Successors: []
---
0xe8 PUSH1 0x0
0xea DUP1
0xeb REVERT
---
0xe8: V85 = 0x0
0xeb: REVERT 0x0 0x0
---
Entry stack: [V13, V50, S13, S12, S11, S10, S9, V64, 0x4787513a, V75, 0x20, V78, V79, V78, 0x0, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V50, S13, S12, S11, S10, S9, V64, 0x4787513a, V75, 0x20, V78, V79, V78, 0x0, V64]

================================

Block 0xec
[0xec:0xf4]
---
Predecessors: [0xad]
Successors: [0xf5, 0xf9]
---
0xec JUMPDEST
0xed GAS
0xee CALL
0xef ISZERO
0xf0 ISZERO
0xf1 PUSH2 0xf9
0xf4 JUMPI
---
0xec: JUMPDEST 
0xed: V86 = GAS
0xee: V87 = CALL V86 V64 0x0 V78 V79 V78 0x20
0xef: V88 = ISZERO V87
0xf0: V89 = ISZERO V88
0xf1: V90 = 0xf9
0xf4: JUMPI 0xf9 V89
---
Entry stack: [V13, V50, S13, S12, S11, S10, S9, V64, 0x4787513a, V75, 0x20, V78, V79, V78, 0x0, V64]
Stack pops: 6
Stack additions: []
Exit stack: [V13, V50, S13, S12, S11, S10, S9, V64, 0x4787513a, V75]

================================

Block 0xf5
[0xf5:0xf8]
---
Predecessors: [0xec]
Successors: []
---
0xf5 PUSH1 0x0
0xf7 DUP1
0xf8 REVERT
---
0xf5: V91 = 0x0
0xf8: REVERT 0x0 0x0
---
Entry stack: [V13, V50, S7, S6, S5, S4, S3, V64, 0x4787513a, V75]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V50, S7, S6, S5, S4, S3, V64, 0x4787513a, V75]

================================

Block 0xf9
[0xf9:0x10a]
---
Predecessors: [0xec]
Successors: [0x10b, 0x315]
---
0xf9 JUMPDEST
0xfa POP
0xfb POP
0xfc POP
0xfd PUSH1 0x40
0xff MLOAD
0x100 DUP1
0x101 MLOAD
0x102 SWAP1
0x103 POP
0x104 DUP5
0x105 LT
0x106 ISZERO
0x107 PUSH2 0x315
0x10a JUMPI
---
0xf9: JUMPDEST 
0xfd: V92 = 0x40
0xff: V93 = M[0x40]
0x101: V94 = M[V93]
0x105: V95 = LT S6 V94
0x106: V96 = ISZERO V95
0x107: V97 = 0x315
0x10a: JUMPI 0x315 V96
---
Entry stack: [V13, V50, S7, S6, S5, S4, S3, V64, 0x4787513a, V75]
Stack pops: 7
Stack additions: [S6, S5, S4, S3]
Exit stack: [V13, V50, S7, S6, S5, S4, S3]

================================

Block 0x10b
[0x10b:0x14d]
---
Predecessors: [0xf9]
Successors: [0x14e, 0x152]
---
0x10b PUSH1 0x0
0x10d SLOAD
0x10e PUSH1 0x1
0x110 PUSH1 0xa0
0x112 PUSH1 0x2
0x114 EXP
0x115 SUB
0x116 AND
0x117 PUSH4 0x862a4bf2
0x11c DUP6
0x11d PUSH1 0x40
0x11f MLOAD
0x120 PUSH1 0xe0
0x122 PUSH1 0x2
0x124 EXP
0x125 PUSH4 0xffffffff
0x12a DUP5
0x12b AND
0x12c MUL
0x12d DUP2
0x12e MSTORE
0x12f PUSH1 0x4
0x131 DUP2
0x132 ADD
0x133 SWAP2
0x134 SWAP1
0x135 SWAP2
0x136 MSTORE
0x137 PUSH1 0x24
0x139 ADD
0x13a PUSH1 0x20
0x13c PUSH1 0x40
0x13e MLOAD
0x13f DUP1
0x140 DUP4
0x141 SUB
0x142 DUP2
0x143 PUSH1 0x0
0x145 DUP8
0x146 DUP1
0x147 EXTCODESIZE
0x148 ISZERO
0x149 ISZERO
0x14a PUSH2 0x152
0x14d JUMPI
---
0x10b: V98 = 0x0
0x10d: V99 = S[0x0]
0x10e: V100 = 0x1
0x110: V101 = 0xa0
0x112: V102 = 0x2
0x114: V103 = EXP 0x2 0xa0
0x115: V104 = SUB 0x10000000000000000000000000000000000000000 0x1
0x116: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V99
0x117: V106 = 0x862a4bf2
0x11d: V107 = 0x40
0x11f: V108 = M[0x40]
0x120: V109 = 0xe0
0x122: V110 = 0x2
0x124: V111 = EXP 0x2 0xe0
0x125: V112 = 0xffffffff
0x12b: V113 = AND 0x862a4bf2 0xffffffff
0x12c: V114 = MUL 0x862a4bf2 0x100000000000000000000000000000000000000000000000000000000
0x12e: M[V108] = 0x862a4bf200000000000000000000000000000000000000000000000000000000
0x12f: V115 = 0x4
0x132: V116 = ADD V108 0x4
0x136: M[V116] = S3
0x137: V117 = 0x24
0x139: V118 = ADD 0x24 V108
0x13a: V119 = 0x20
0x13c: V120 = 0x40
0x13e: V121 = M[0x40]
0x141: V122 = SUB V118 V121
0x143: V123 = 0x0
0x147: V124 = EXTCODESIZE V105
0x148: V125 = ISZERO V124
0x149: V126 = ISZERO V125
0x14a: V127 = 0x152
0x14d: JUMPI 0x152 V126
---
Entry stack: [V13, V50, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V105, 0x862a4bf2, V118, 0x20, V121, V122, V121, 0x0, V105]
Exit stack: [V13, V50, S4, S3, S2, S1, S0, V105, 0x862a4bf2, V118, 0x20, V121, V122, V121, 0x0, V105]

================================

Block 0x14e
[0x14e:0x151]
---
Predecessors: [0x10b]
Successors: []
---
0x14e PUSH1 0x0
0x150 DUP1
0x151 REVERT
---
0x14e: V128 = 0x0
0x151: REVERT 0x0 0x0
---
Entry stack: [V13, V50, S13, S12, S11, S10, S9, V105, 0x862a4bf2, V118, 0x20, V121, V122, V121, 0x0, V105]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V50, S13, S12, S11, S10, S9, V105, 0x862a4bf2, V118, 0x20, V121, V122, V121, 0x0, V105]

================================

Block 0x152
[0x152:0x15a]
---
Predecessors: [0x10b]
Successors: [0x15b, 0x15f]
---
0x152 JUMPDEST
0x153 GAS
0x154 CALL
0x155 ISZERO
0x156 ISZERO
0x157 PUSH2 0x15f
0x15a JUMPI
---
0x152: JUMPDEST 
0x153: V129 = GAS
0x154: V130 = CALL V129 V105 0x0 V121 V122 V121 0x20
0x155: V131 = ISZERO V130
0x156: V132 = ISZERO V131
0x157: V133 = 0x15f
0x15a: JUMPI 0x15f V132
---
Entry stack: [V13, V50, S13, S12, S11, S10, S9, V105, 0x862a4bf2, V118, 0x20, V121, V122, V121, 0x0, V105]
Stack pops: 6
Stack additions: []
Exit stack: [V13, V50, S13, S12, S11, S10, S9, V105, 0x862a4bf2, V118]

================================

Block 0x15b
[0x15b:0x15e]
---
Predecessors: [0x152]
Successors: []
---
0x15b PUSH1 0x0
0x15d DUP1
0x15e REVERT
---
0x15b: V134 = 0x0
0x15e: REVERT 0x0 0x0
---
Entry stack: [V13, V50, S7, S6, S5, S4, S3, V105, 0x862a4bf2, V118]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V50, S7, S6, S5, S4, S3, V105, 0x862a4bf2, V118]

================================

Block 0x15f
[0x15f:0x1b7]
---
Predecessors: [0x152]
Successors: [0x1b8, 0x1bc]
---
0x15f JUMPDEST
0x160 POP
0x161 POP
0x162 POP
0x163 PUSH1 0x40
0x165 MLOAD
0x166 DUP1
0x167 MLOAD
0x168 PUSH1 0x0
0x16a SLOAD
0x16b SWAP1
0x16c SWAP5
0x16d POP
0x16e PUSH1 0x1
0x170 PUSH1 0xa0
0x172 PUSH1 0x2
0x174 EXP
0x175 SUB
0x176 AND
0x177 SWAP1
0x178 POP
0x179 PUSH4 0xb414d4b6
0x17e DUP5
0x17f PUSH1 0x40
0x181 MLOAD
0x182 PUSH1 0xe0
0x184 PUSH1 0x2
0x186 EXP
0x187 PUSH4 0xffffffff
0x18c DUP5
0x18d AND
0x18e MUL
0x18f DUP2
0x190 MSTORE
0x191 PUSH1 0x1
0x193 PUSH1 0xa0
0x195 PUSH1 0x2
0x197 EXP
0x198 SUB
0x199 SWAP1
0x19a SWAP2
0x19b AND
0x19c PUSH1 0x4
0x19e DUP3
0x19f ADD
0x1a0 MSTORE
0x1a1 PUSH1 0x24
0x1a3 ADD
0x1a4 PUSH1 0x20
0x1a6 PUSH1 0x40
0x1a8 MLOAD
0x1a9 DUP1
0x1aa DUP4
0x1ab SUB
0x1ac DUP2
0x1ad PUSH1 0x0
0x1af DUP8
0x1b0 DUP1
0x1b1 EXTCODESIZE
0x1b2 ISZERO
0x1b3 ISZERO
0x1b4 PUSH2 0x1bc
0x1b7 JUMPI
---
0x15f: JUMPDEST 
0x163: V135 = 0x40
0x165: V136 = M[0x40]
0x167: V137 = M[V136]
0x168: V138 = 0x0
0x16a: V139 = S[0x0]
0x16e: V140 = 0x1
0x170: V141 = 0xa0
0x172: V142 = 0x2
0x174: V143 = EXP 0x2 0xa0
0x175: V144 = SUB 0x10000000000000000000000000000000000000000 0x1
0x176: V145 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x179: V146 = 0xb414d4b6
0x17f: V147 = 0x40
0x181: V148 = M[0x40]
0x182: V149 = 0xe0
0x184: V150 = 0x2
0x186: V151 = EXP 0x2 0xe0
0x187: V152 = 0xffffffff
0x18d: V153 = AND 0xb414d4b6 0xffffffff
0x18e: V154 = MUL 0xb414d4b6 0x100000000000000000000000000000000000000000000000000000000
0x190: M[V148] = 0xb414d4b600000000000000000000000000000000000000000000000000000000
0x191: V155 = 0x1
0x193: V156 = 0xa0
0x195: V157 = 0x2
0x197: V158 = EXP 0x2 0xa0
0x198: V159 = SUB 0x10000000000000000000000000000000000000000 0x1
0x19b: V160 = AND V137 0xffffffffffffffffffffffffffffffffffffffff
0x19c: V161 = 0x4
0x19f: V162 = ADD V148 0x4
0x1a0: M[V162] = V160
0x1a1: V163 = 0x24
0x1a3: V164 = ADD 0x24 V148
0x1a4: V165 = 0x20
0x1a6: V166 = 0x40
0x1a8: V167 = M[0x40]
0x1ab: V168 = SUB V164 V167
0x1ad: V169 = 0x0
0x1b1: V170 = EXTCODESIZE V145
0x1b2: V171 = ISZERO V170
0x1b3: V172 = ISZERO V171
0x1b4: V173 = 0x1bc
0x1b7: JUMPI 0x1bc V172
---
Entry stack: [V13, V50, S7, S6, S5, S4, S3, V105, 0x862a4bf2, V118]
Stack pops: 6
Stack additions: [V137, S4, S3, V145, 0xb414d4b6, V164, 0x20, V167, V168, V167, 0x0, V145]
Exit stack: [V13, V50, S7, S6, V137, S4, S3, V145, 0xb414d4b6, V164, 0x20, V167, V168, V167, 0x0, V145]

================================

Block 0x1b8
[0x1b8:0x1bb]
---
Predecessors: [0x15f]
Successors: []
---
0x1b8 PUSH1 0x0
0x1ba DUP1
0x1bb REVERT
---
0x1b8: V174 = 0x0
0x1bb: REVERT 0x0 0x0
---
Entry stack: [V13, V50, S13, S12, V137, S10, S9, V145, 0xb414d4b6, V164, 0x20, V167, V168, V167, 0x0, V145]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V50, S13, S12, V137, S10, S9, V145, 0xb414d4b6, V164, 0x20, V167, V168, V167, 0x0, V145]

================================

Block 0x1bc
[0x1bc:0x1c4]
---
Predecessors: [0x15f]
Successors: [0x1c5, 0x1c9]
---
0x1bc JUMPDEST
0x1bd GAS
0x1be CALL
0x1bf ISZERO
0x1c0 ISZERO
0x1c1 PUSH2 0x1c9
0x1c4 JUMPI
---
0x1bc: JUMPDEST 
0x1bd: V175 = GAS
0x1be: V176 = CALL V175 V145 0x0 V167 V168 V167 0x20
0x1bf: V177 = ISZERO V176
0x1c0: V178 = ISZERO V177
0x1c1: V179 = 0x1c9
0x1c4: JUMPI 0x1c9 V178
---
Entry stack: [V13, V50, S13, S12, V137, S10, S9, V145, 0xb414d4b6, V164, 0x20, V167, V168, V167, 0x0, V145]
Stack pops: 6
Stack additions: []
Exit stack: [V13, V50, S13, S12, V137, S10, S9, V145, 0xb414d4b6, V164]

================================

Block 0x1c5
[0x1c5:0x1c8]
---
Predecessors: [0x1bc]
Successors: []
---
0x1c5 PUSH1 0x0
0x1c7 DUP1
0x1c8 REVERT
---
0x1c5: V180 = 0x0
0x1c8: REVERT 0x0 0x0
---
Entry stack: [V13, V50, S7, S6, V137, S4, S3, V145, 0xb414d4b6, V164]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V50, S7, S6, V137, S4, S3, V145, 0xb414d4b6, V164]

================================

Block 0x1c9
[0x1c9:0x1dc]
---
Predecessors: [0x1bc]
Successors: [0x1dd, 0x1fb]
---
0x1c9 JUMPDEST
0x1ca POP
0x1cb POP
0x1cc POP
0x1cd PUSH1 0x40
0x1cf MLOAD
0x1d0 DUP1
0x1d1 MLOAD
0x1d2 SWAP3
0x1d3 POP
0x1d4 POP
0x1d5 DUP2
0x1d6 ISZERO
0x1d7 DUP1
0x1d8 ISZERO
0x1d9 PUSH2 0x1fb
0x1dc JUMPI
---
0x1c9: JUMPDEST 
0x1cd: V181 = 0x40
0x1cf: V182 = M[0x40]
0x1d1: V183 = M[V182]
0x1d6: V184 = ISZERO V183
0x1d8: V185 = ISZERO V184
0x1d9: V186 = 0x1fb
0x1dc: JUMPI 0x1fb V185
---
Entry stack: [V13, V50, S7, S6, V137, S4, S3, V145, 0xb414d4b6, V164]
Stack pops: 5
Stack additions: [V183, S3, V184]
Exit stack: [V13, V50, S7, S6, V137, V183, S3, V184]

================================

Block 0x1dd
[0x1dd:0x1fa]
---
Predecessors: [0x1c9]
Successors: [0x1fb]
---
0x1dd POP
0x1de PUSH1 0x1
0x1e0 PUSH1 0xa0
0x1e2 PUSH1 0x2
0x1e4 EXP
0x1e5 SUB
0x1e6 DUP4
0x1e7 AND
0x1e8 PUSH1 0x0
0x1ea SWAP1
0x1eb DUP2
0x1ec MSTORE
0x1ed PUSH1 0x3
0x1ef PUSH1 0x20
0x1f1 MSTORE
0x1f2 PUSH1 0x40
0x1f4 SWAP1
0x1f5 SHA3
0x1f6 SLOAD
0x1f7 PUSH1 0xff
0x1f9 AND
0x1fa ISZERO
---
0x1de: V187 = 0x1
0x1e0: V188 = 0xa0
0x1e2: V189 = 0x2
0x1e4: V190 = EXP 0x2 0xa0
0x1e5: V191 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e7: V192 = AND V137 0xffffffffffffffffffffffffffffffffffffffff
0x1e8: V193 = 0x0
0x1ec: M[0x0] = V192
0x1ed: V194 = 0x3
0x1ef: V195 = 0x20
0x1f1: M[0x20] = 0x3
0x1f2: V196 = 0x40
0x1f5: V197 = SHA3 0x0 0x40
0x1f6: V198 = S[V197]
0x1f7: V199 = 0xff
0x1f9: V200 = AND 0xff V198
0x1fa: V201 = ISZERO V200
---
Entry stack: [V13, V50, S5, S4, V137, V183, S1, V184]
Stack pops: 4
Stack additions: [S3, S2, S1, V201]
Exit stack: [V13, V50, S5, S4, V137, V183, S1, V201]

================================

Block 0x1fb
[0x1fb:0x200]
---
Predecessors: [0x1c9, 0x1dd]
Successors: [0x201, 0x30a]
---
0x1fb JUMPDEST
0x1fc ISZERO
0x1fd PUSH2 0x30a
0x200 JUMPI
---
0x1fb: JUMPDEST 
0x1fc: V202 = ISZERO S0
0x1fd: V203 = 0x30a
0x200: JUMPI 0x30a V202
---
Entry stack: [V13, V50, S5, S4, V137, V183, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, V50, S5, S4, V137, V183, S1]

================================

Block 0x201
[0x201:0x24b]
---
Predecessors: [0x1fb]
Successors: [0x24c, 0x250]
---
0x201 PUSH1 0x0
0x203 SLOAD
0x204 PUSH1 0x1
0x206 PUSH1 0xa0
0x208 PUSH1 0x2
0x20a EXP
0x20b SUB
0x20c AND
0x20d PUSH4 0x70a08231
0x212 DUP5
0x213 PUSH1 0x40
0x215 MLOAD
0x216 PUSH1 0xe0
0x218 PUSH1 0x2
0x21a EXP
0x21b PUSH4 0xffffffff
0x220 DUP5
0x221 AND
0x222 MUL
0x223 DUP2
0x224 MSTORE
0x225 PUSH1 0x1
0x227 PUSH1 0xa0
0x229 PUSH1 0x2
0x22b EXP
0x22c SUB
0x22d SWAP1
0x22e SWAP2
0x22f AND
0x230 PUSH1 0x4
0x232 DUP3
0x233 ADD
0x234 MSTORE
0x235 PUSH1 0x24
0x237 ADD
0x238 PUSH1 0x20
0x23a PUSH1 0x40
0x23c MLOAD
0x23d DUP1
0x23e DUP4
0x23f SUB
0x240 DUP2
0x241 PUSH1 0x0
0x243 DUP8
0x244 DUP1
0x245 EXTCODESIZE
0x246 ISZERO
0x247 ISZERO
0x248 PUSH2 0x250
0x24b JUMPI
---
0x201: V204 = 0x0
0x203: V205 = S[0x0]
0x204: V206 = 0x1
0x206: V207 = 0xa0
0x208: V208 = 0x2
0x20a: V209 = EXP 0x2 0xa0
0x20b: V210 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20c: V211 = AND 0xffffffffffffffffffffffffffffffffffffffff V205
0x20d: V212 = 0x70a08231
0x213: V213 = 0x40
0x215: V214 = M[0x40]
0x216: V215 = 0xe0
0x218: V216 = 0x2
0x21a: V217 = EXP 0x2 0xe0
0x21b: V218 = 0xffffffff
0x221: V219 = AND 0x70a08231 0xffffffff
0x222: V220 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x224: M[V214] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x225: V221 = 0x1
0x227: V222 = 0xa0
0x229: V223 = 0x2
0x22b: V224 = EXP 0x2 0xa0
0x22c: V225 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22f: V226 = AND V137 0xffffffffffffffffffffffffffffffffffffffff
0x230: V227 = 0x4
0x233: V228 = ADD V214 0x4
0x234: M[V228] = V226
0x235: V229 = 0x24
0x237: V230 = ADD 0x24 V214
0x238: V231 = 0x20
0x23a: V232 = 0x40
0x23c: V233 = M[0x40]
0x23f: V234 = SUB V230 V233
0x241: V235 = 0x0
0x245: V236 = EXTCODESIZE V211
0x246: V237 = ISZERO V236
0x247: V238 = ISZERO V237
0x248: V239 = 0x250
0x24b: JUMPI 0x250 V238
---
Entry stack: [V13, V50, S4, S3, V137, V183, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V211, 0x70a08231, V230, 0x20, V233, V234, V233, 0x0, V211]
Exit stack: [V13, V50, S4, S3, V137, V183, S0, V211, 0x70a08231, V230, 0x20, V233, V234, V233, 0x0, V211]

================================

Block 0x24c
[0x24c:0x24f]
---
Predecessors: [0x201]
Successors: []
---
0x24c PUSH1 0x0
0x24e DUP1
0x24f REVERT
---
0x24c: V240 = 0x0
0x24f: REVERT 0x0 0x0
---
Entry stack: [V13, V50, S13, S12, V137, V183, S9, V211, 0x70a08231, V230, 0x20, V233, V234, V233, 0x0, V211]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V50, S13, S12, V137, V183, S9, V211, 0x70a08231, V230, 0x20, V233, V234, V233, 0x0, V211]

================================

Block 0x250
[0x250:0x258]
---
Predecessors: [0x201]
Successors: [0x259, 0x25d]
---
0x250 JUMPDEST
0x251 GAS
0x252 CALL
0x253 ISZERO
0x254 ISZERO
0x255 PUSH2 0x25d
0x258 JUMPI
---
0x250: JUMPDEST 
0x251: V241 = GAS
0x252: V242 = CALL V241 V211 0x0 V233 V234 V233 0x20
0x253: V243 = ISZERO V242
0x254: V244 = ISZERO V243
0x255: V245 = 0x25d
0x258: JUMPI 0x25d V244
---
Entry stack: [V13, V50, S13, S12, V137, V183, S9, V211, 0x70a08231, V230, 0x20, V233, V234, V233, 0x0, V211]
Stack pops: 6
Stack additions: []
Exit stack: [V13, V50, S13, S12, V137, V183, S9, V211, 0x70a08231, V230]

================================

Block 0x259
[0x259:0x25c]
---
Predecessors: [0x250]
Successors: []
---
0x259 PUSH1 0x0
0x25b DUP1
0x25c REVERT
---
0x259: V246 = 0x0
0x25c: REVERT 0x0 0x0
---
Entry stack: [V13, V50, S7, S6, V137, V183, S3, V211, 0x70a08231, V230]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V50, S7, S6, V137, V183, S3, V211, 0x70a08231, V230]

================================

Block 0x25d
[0x25d:0x293]
---
Predecessors: [0x250]
Successors: [0x45e]
---
0x25d JUMPDEST
0x25e POP
0x25f POP
0x260 POP
0x261 PUSH1 0x40
0x263 MLOAD
0x264 DUP1
0x265 MLOAD
0x266 PUSH1 0x1
0x268 PUSH1 0xa0
0x26a PUSH1 0x2
0x26c EXP
0x26d SUB
0x26e DUP6
0x26f AND
0x270 PUSH1 0x0
0x272 SWAP1
0x273 DUP2
0x274 MSTORE
0x275 PUSH1 0x2
0x277 PUSH1 0x20
0x279 MSTORE
0x27a PUSH1 0x40
0x27c SWAP1
0x27d SHA3
0x27e SLOAD
0x27f SWAP1
0x280 DUP9
0x281 MUL
0x282 SWAP3
0x283 POP
0x284 PUSH2 0x294
0x287 SWAP2
0x288 POP
0x289 DUP3
0x28a PUSH4 0xffffffff
0x28f PUSH2 0x45e
0x292 AND
0x293 JUMP
---
0x25d: JUMPDEST 
0x261: V247 = 0x40
0x263: V248 = M[0x40]
0x265: V249 = M[V248]
0x266: V250 = 0x1
0x268: V251 = 0xa0
0x26a: V252 = 0x2
0x26c: V253 = EXP 0x2 0xa0
0x26d: V254 = SUB 0x10000000000000000000000000000000000000000 0x1
0x26f: V255 = AND V137 0xffffffffffffffffffffffffffffffffffffffff
0x270: V256 = 0x0
0x274: M[0x0] = V255
0x275: V257 = 0x2
0x277: V258 = 0x20
0x279: M[0x20] = 0x2
0x27a: V259 = 0x40
0x27d: V260 = SHA3 0x0 0x40
0x27e: V261 = S[V260]
0x281: V262 = MUL V50 V249
0x284: V263 = 0x294
0x28a: V264 = 0xffffffff
0x28f: V265 = 0x45e
0x292: V266 = AND 0x45e 0xffffffff
0x293: JUMP 0x45e
---
Entry stack: [V13, V50, S7, S6, V137, V183, S3, V211, 0x70a08231, V230]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, V262, 0x294, V261, V262]
Exit stack: [V13, V50, S7, S6, V137, V183, V262, 0x294, V261, V262]

================================

Block 0x294
[0x294:0x306]
---
Predecessors: [0x46d]
Successors: [0x45e]
---
0x294 JUMPDEST
0x295 PUSH1 0x1
0x297 PUSH1 0xa0
0x299 PUSH1 0x2
0x29b EXP
0x29c SUB
0x29d DUP5
0x29e AND
0x29f PUSH1 0x0
0x2a1 SWAP1
0x2a2 DUP2
0x2a3 MSTORE
0x2a4 PUSH1 0x2
0x2a6 PUSH1 0x20
0x2a8 MSTORE
0x2a9 PUSH1 0x40
0x2ab SWAP1
0x2ac DUP2
0x2ad SWAP1
0x2ae SHA3
0x2af SWAP2
0x2b0 SWAP1
0x2b1 SWAP2
0x2b2 SSTORE
0x2b3 PUSH32 0x819b977343032d77a957a68d940f126c76955eec2548cfb58b3bcdc601405e23
0x2d4 SWAP1
0x2d5 DUP5
0x2d6 SWAP1
0x2d7 DUP4
0x2d8 SWAP1
0x2d9 MLOAD
0x2da PUSH1 0x1
0x2dc PUSH1 0xa0
0x2de PUSH1 0x2
0x2e0 EXP
0x2e1 SUB
0x2e2 SWAP1
0x2e3 SWAP3
0x2e4 AND
0x2e5 DUP3
0x2e6 MSTORE
0x2e7 PUSH1 0x20
0x2e9 DUP3
0x2ea ADD
0x2eb MSTORE
0x2ec PUSH1 0x40
0x2ee SWAP1
0x2ef DUP2
0x2f0 ADD
0x2f1 SWAP1
0x2f2 MLOAD
0x2f3 DUP1
0x2f4 SWAP2
0x2f5 SUB
0x2f6 SWAP1
0x2f7 LOG1
0x2f8 PUSH2 0x307
0x2fb DUP6
0x2fc DUP3
0x2fd PUSH4 0xffffffff
0x302 PUSH2 0x45e
0x305 AND
0x306 JUMP
---
0x294: JUMPDEST 
0x295: V267 = 0x1
0x297: V268 = 0xa0
0x299: V269 = 0x2
0x29b: V270 = EXP 0x2 0xa0
0x29c: V271 = SUB 0x10000000000000000000000000000000000000000 0x1
0x29e: V272 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x29f: V273 = 0x0
0x2a3: M[0x0] = V272
0x2a4: V274 = 0x2
0x2a6: V275 = 0x20
0x2a8: M[0x20] = 0x2
0x2a9: V276 = 0x40
0x2ae: V277 = SHA3 0x0 0x40
0x2b2: S[V277] = S0
0x2b3: V278 = 0x819b977343032d77a957a68d940f126c76955eec2548cfb58b3bcdc601405e23
0x2d9: V279 = M[0x40]
0x2da: V280 = 0x1
0x2dc: V281 = 0xa0
0x2de: V282 = 0x2
0x2e0: V283 = EXP 0x2 0xa0
0x2e1: V284 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e4: V285 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x2e6: M[V279] = V285
0x2e7: V286 = 0x20
0x2ea: V287 = ADD V279 0x20
0x2eb: M[V287] = S1
0x2ec: V288 = 0x40
0x2f0: V289 = ADD 0x40 V279
0x2f2: V290 = M[0x40]
0x2f5: V291 = SUB V289 V290
0x2f7: LOG V290 V291 0x819b977343032d77a957a68d940f126c76955eec2548cfb58b3bcdc601405e23
0x2f8: V292 = 0x307
0x2fd: V293 = 0xffffffff
0x302: V294 = 0x45e
0x305: V295 = AND 0x45e 0xffffffff
0x306: JUMP 0x45e
---
Entry stack: [V13, V50, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, 0x307, S5, S1]
Exit stack: [V13, V50, S5, S4, S3, S2, S1, 0x307, S5, S1]

================================

Block 0x307
[0x307:0x309]
---
Predecessors: [0x46d]
Successors: [0x30a]
---
0x307 JUMPDEST
0x308 SWAP5
0x309 POP
---
0x307: JUMPDEST 
---
Entry stack: [V13, V50, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S0, S4, S3, S2, S1]
Exit stack: [V13, V50, S0, S4, S3, S2, S1]

================================

Block 0x30a
[0x30a:0x314]
---
Predecessors: [0x1fb, 0x307]
Successors: [0xad]
---
0x30a JUMPDEST
0x30b PUSH1 0x1
0x30d SWAP1
0x30e SWAP4
0x30f ADD
0x310 SWAP3
0x311 PUSH2 0xad
0x314 JUMP
---
0x30a: JUMPDEST 
0x30b: V296 = 0x1
0x30f: V297 = ADD S3 0x1
0x311: V298 = 0xad
0x314: JUMP 0xad
---
Entry stack: [V13, V50, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [V297, S2, S1, S0]
Exit stack: [V13, V50, S4, V297, S2, S1, S0]

================================

Block 0x315
[0x315:0x356]
---
Predecessors: [0xf9]
Successors: []
---
0x315 JUMPDEST
0x316 PUSH32 0x467f85e4a492889e9c3a393cdf42cc4fe10f61dcf88a8881f417542ccb5abced
0x337 DUP7
0x338 TIMESTAMP
0x339 PUSH1 0x40
0x33b MLOAD
0x33c SWAP2
0x33d DUP3
0x33e MSTORE
0x33f PUSH1 0x20
0x341 DUP3
0x342 ADD
0x343 MSTORE
0x344 PUSH1 0x40
0x346 SWAP1
0x347 DUP2
0x348 ADD
0x349 SWAP1
0x34a MLOAD
0x34b DUP1
0x34c SWAP2
0x34d SUB
0x34e SWAP1
0x34f LOG1
0x350 POP
0x351 POP
0x352 POP
0x353 POP
0x354 POP
0x355 POP
0x356 STOP
---
0x315: JUMPDEST 
0x316: V299 = 0x467f85e4a492889e9c3a393cdf42cc4fe10f61dcf88a8881f417542ccb5abced
0x338: V300 = TIMESTAMP
0x339: V301 = 0x40
0x33b: V302 = M[0x40]
0x33e: M[V302] = V50
0x33f: V303 = 0x20
0x342: V304 = ADD V302 0x20
0x343: M[V304] = V300
0x344: V305 = 0x40
0x348: V306 = ADD 0x40 V302
0x34a: V307 = M[0x40]
0x34d: V308 = SUB V306 V307
0x34f: LOG V307 V308 0x467f85e4a492889e9c3a393cdf42cc4fe10f61dcf88a8881f417542ccb5abced
0x356: STOP 
---
Entry stack: [V13, V50, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V13]

================================

Block 0x357
[0x357:0x35d]
---
Predecessors: [0xd]
Successors: [0x35e, 0x362]
---
0x357 JUMPDEST
0x358 CALLVALUE
0x359 ISZERO
0x35a PUSH2 0x362
0x35d JUMPI
---
0x357: JUMPDEST 
0x358: V309 = CALLVALUE
0x359: V310 = ISZERO V309
0x35a: V311 = 0x362
0x35d: JUMPI 0x362 V310
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x35e
[0x35e:0x361]
---
Predecessors: [0x357]
Successors: []
---
0x35e PUSH1 0x0
0x360 DUP1
0x361 REVERT
---
0x35e: V312 = 0x0
0x361: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x362
[0x362:0x369]
---
Predecessors: [0x357]
Successors: [0x474]
---
0x362 JUMPDEST
0x363 PUSH2 0x36a
0x366 PUSH2 0x474
0x369 JUMP
---
0x362: JUMPDEST 
0x363: V313 = 0x36a
0x366: V314 = 0x474
0x369: JUMP 0x474
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x36a]
Exit stack: [V13, 0x36a]

================================

Block 0x36a
[0x36a:0x36b]
---
Predecessors: [0x659, 0x746]
Successors: []
---
0x36a JUMPDEST
0x36b STOP
---
0x36a: JUMPDEST 
0x36b: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x36c
[0x36c:0x372]
---
Predecessors: [0x27]
Successors: [0x373, 0x377]
---
0x36c JUMPDEST
0x36d CALLVALUE
0x36e ISZERO
0x36f PUSH2 0x377
0x372 JUMPI
---
0x36c: JUMPDEST 
0x36d: V315 = CALLVALUE
0x36e: V316 = ISZERO V315
0x36f: V317 = 0x377
0x372: JUMPI 0x377 V316
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x373
[0x373:0x376]
---
Predecessors: [0x36c]
Successors: []
---
0x373 PUSH1 0x0
0x375 DUP1
0x376 REVERT
---
0x373: V318 = 0x0
0x376: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x377
[0x377:0x37e]
---
Predecessors: [0x36c]
Successors: [0x65e]
---
0x377 JUMPDEST
0x378 PUSH2 0x37f
0x37b PUSH2 0x65e
0x37e JUMP
---
0x377: JUMPDEST 
0x378: V319 = 0x37f
0x37b: V320 = 0x65e
0x37e: JUMP 0x65e
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x37f]
Exit stack: [V13, 0x37f]

================================

Block 0x37f
[0x37f:0x39a]
---
Predecessors: [0x65e, 0x749]
Successors: []
---
0x37f JUMPDEST
0x380 PUSH1 0x40
0x382 MLOAD
0x383 PUSH1 0x1
0x385 PUSH1 0xa0
0x387 PUSH1 0x2
0x389 EXP
0x38a SUB
0x38b SWAP1
0x38c SWAP2
0x38d AND
0x38e DUP2
0x38f MSTORE
0x390 PUSH1 0x20
0x392 ADD
0x393 PUSH1 0x40
0x395 MLOAD
0x396 DUP1
0x397 SWAP2
0x398 SUB
0x399 SWAP1
0x39a RETURN
---
0x37f: JUMPDEST 
0x380: V321 = 0x40
0x382: V322 = M[0x40]
0x383: V323 = 0x1
0x385: V324 = 0xa0
0x387: V325 = 0x2
0x389: V326 = EXP 0x2 0xa0
0x38a: V327 = SUB 0x10000000000000000000000000000000000000000 0x1
0x38d: V328 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x38f: M[V322] = V328
0x390: V329 = 0x20
0x392: V330 = ADD 0x20 V322
0x393: V331 = 0x40
0x395: V332 = M[0x40]
0x398: V333 = SUB V330 V332
0x39a: RETURN V332 V333
---
Entry stack: [V13, 0x37f, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x37f]

================================

Block 0x39b
[0x39b:0x3a1]
---
Predecessors: [0x32]
Successors: [0x3a2, 0x3a6]
---
0x39b JUMPDEST
0x39c CALLVALUE
0x39d ISZERO
0x39e PUSH2 0x3a6
0x3a1 JUMPI
---
0x39b: JUMPDEST 
0x39c: V334 = CALLVALUE
0x39d: V335 = ISZERO V334
0x39e: V336 = 0x3a6
0x3a1: JUMPI 0x3a6 V335
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x3a2
[0x3a2:0x3a5]
---
Predecessors: [0x39b]
Successors: []
---
0x3a2 PUSH1 0x0
0x3a4 DUP1
0x3a5 REVERT
---
0x3a2: V337 = 0x0
0x3a5: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x3a6
[0x3a6:0x3ad]
---
Predecessors: [0x39b]
Successors: [0x66d]
---
0x3a6 JUMPDEST
0x3a7 PUSH2 0x36a
0x3aa PUSH2 0x66d
0x3ad JUMP
---
0x3a6: JUMPDEST 
0x3a7: V338 = 0x36a
0x3aa: V339 = 0x66d
0x3ad: JUMP 0x66d
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x36a]
Exit stack: [V13, 0x36a]

================================

Block 0x3ae
[0x3ae:0x3b4]
---
Predecessors: [0x3d]
Successors: [0x3b5, 0x3b9]
---
0x3ae JUMPDEST
0x3af CALLVALUE
0x3b0 ISZERO
0x3b1 PUSH2 0x3b9
0x3b4 JUMPI
---
0x3ae: JUMPDEST 
0x3af: V340 = CALLVALUE
0x3b0: V341 = ISZERO V340
0x3b1: V342 = 0x3b9
0x3b4: JUMPI 0x3b9 V341
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x3b5
[0x3b5:0x3b8]
---
Predecessors: [0x3ae]
Successors: []
---
0x3b5 PUSH1 0x0
0x3b7 DUP1
0x3b8 REVERT
---
0x3b5: V343 = 0x0
0x3b8: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x3b9
[0x3b9:0x3cc]
---
Predecessors: [0x3ae]
Successors: [0x6b1]
---
0x3b9 JUMPDEST
0x3ba PUSH2 0x3cd
0x3bd PUSH1 0x1
0x3bf PUSH1 0xa0
0x3c1 PUSH1 0x2
0x3c3 EXP
0x3c4 SUB
0x3c5 PUSH1 0x4
0x3c7 CALLDATALOAD
0x3c8 AND
0x3c9 PUSH2 0x6b1
0x3cc JUMP
---
0x3b9: JUMPDEST 
0x3ba: V344 = 0x3cd
0x3bd: V345 = 0x1
0x3bf: V346 = 0xa0
0x3c1: V347 = 0x2
0x3c3: V348 = EXP 0x2 0xa0
0x3c4: V349 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c5: V350 = 0x4
0x3c7: V351 = CALLDATALOAD 0x4
0x3c8: V352 = AND V351 0xffffffffffffffffffffffffffffffffffffffff
0x3c9: V353 = 0x6b1
0x3cc: JUMP 0x6b1
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x3cd, V352]
Exit stack: [V13, 0x3cd, V352]

================================

Block 0x3cd
[0x3cd:0x3e0]
---
Predecessors: [0x6b1]
Successors: []
---
0x3cd JUMPDEST
0x3ce PUSH1 0x40
0x3d0 MLOAD
0x3d1 SWAP1
0x3d2 ISZERO
0x3d3 ISZERO
0x3d4 DUP2
0x3d5 MSTORE
0x3d6 PUSH1 0x20
0x3d8 ADD
0x3d9 PUSH1 0x40
0x3db MLOAD
0x3dc DUP1
0x3dd SWAP2
0x3de SUB
0x3df SWAP1
0x3e0 RETURN
---
0x3cd: JUMPDEST 
0x3ce: V354 = 0x40
0x3d0: V355 = M[0x40]
0x3d2: V356 = ISZERO V667
0x3d3: V357 = ISZERO V356
0x3d5: M[V355] = V357
0x3d6: V358 = 0x20
0x3d8: V359 = ADD 0x20 V355
0x3d9: V360 = 0x40
0x3db: V361 = M[0x40]
0x3de: V362 = SUB V359 V361
0x3e0: RETURN V361 V362
---
Entry stack: [V13, 0x3cd, V667]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x3cd]

================================

Block 0x3e1
[0x3e1:0x3e7]
---
Predecessors: [0x48]
Successors: [0x3e8, 0x3ec]
---
0x3e1 JUMPDEST
0x3e2 CALLVALUE
0x3e3 ISZERO
0x3e4 PUSH2 0x3ec
0x3e7 JUMPI
---
0x3e1: JUMPDEST 
0x3e2: V363 = CALLVALUE
0x3e3: V364 = ISZERO V363
0x3e4: V365 = 0x3ec
0x3e7: JUMPI 0x3ec V364
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x3e8
[0x3e8:0x3eb]
---
Predecessors: [0x3e1]
Successors: []
---
0x3e8 PUSH1 0x0
0x3ea DUP1
0x3eb REVERT
---
0x3e8: V366 = 0x0
0x3eb: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x3ec
[0x3ec:0x3ff]
---
Predecessors: [0x3e1]
Successors: [0x6c6]
---
0x3ec JUMPDEST
0x3ed PUSH2 0x400
0x3f0 PUSH1 0x1
0x3f2 PUSH1 0xa0
0x3f4 PUSH1 0x2
0x3f6 EXP
0x3f7 SUB
0x3f8 PUSH1 0x4
0x3fa CALLDATALOAD
0x3fb AND
0x3fc PUSH2 0x6c6
0x3ff JUMP
---
0x3ec: JUMPDEST 
0x3ed: V367 = 0x400
0x3f0: V368 = 0x1
0x3f2: V369 = 0xa0
0x3f4: V370 = 0x2
0x3f6: V371 = EXP 0x2 0xa0
0x3f7: V372 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f8: V373 = 0x4
0x3fa: V374 = CALLDATALOAD 0x4
0x3fb: V375 = AND V374 0xffffffffffffffffffffffffffffffffffffffff
0x3fc: V376 = 0x6c6
0x3ff: JUMP 0x6c6
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x400, V375]
Exit stack: [V13, 0x400, V375]

================================

Block 0x400
[0x400:0x411]
---
Predecessors: [0x6c6, 0x758, 0x75e]
Successors: []
---
0x400 JUMPDEST
0x401 PUSH1 0x40
0x403 MLOAD
0x404 SWAP1
0x405 DUP2
0x406 MSTORE
0x407 PUSH1 0x20
0x409 ADD
0x40a PUSH1 0x40
0x40c MLOAD
0x40d DUP1
0x40e SWAP2
0x40f SUB
0x410 SWAP1
0x411 RETURN
---
0x400: JUMPDEST 
0x401: V377 = 0x40
0x403: V378 = M[0x40]
0x406: M[V378] = S0
0x407: V379 = 0x20
0x409: V380 = ADD 0x20 V378
0x40a: V381 = 0x40
0x40c: V382 = M[0x40]
0x40f: V383 = SUB V380 V382
0x411: RETURN V382 V383
---
Entry stack: [V13, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S1]

================================

Block 0x412
[0x412:0x418]
---
Predecessors: [0x53]
Successors: [0x419, 0x41d]
---
0x412 JUMPDEST
0x413 CALLVALUE
0x414 ISZERO
0x415 PUSH2 0x41d
0x418 JUMPI
---
0x412: JUMPDEST 
0x413: V384 = CALLVALUE
0x414: V385 = ISZERO V384
0x415: V386 = 0x41d
0x418: JUMPI 0x41d V385
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x419
[0x419:0x41c]
---
Predecessors: [0x412]
Successors: []
---
0x419 PUSH1 0x0
0x41b DUP1
0x41c REVERT
---
0x419: V387 = 0x0
0x41c: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x41d
[0x41d:0x424]
---
Predecessors: [0x412]
Successors: [0x6d8]
---
0x41d JUMPDEST
0x41e PUSH2 0x36a
0x421 PUSH2 0x6d8
0x424 JUMP
---
0x41d: JUMPDEST 
0x41e: V388 = 0x36a
0x421: V389 = 0x6d8
0x424: JUMP 0x6d8
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x36a]
Exit stack: [V13, 0x36a]

================================

Block 0x425
[0x425:0x42b]
---
Predecessors: [0x5e]
Successors: [0x42c, 0x430]
---
0x425 JUMPDEST
0x426 CALLVALUE
0x427 ISZERO
0x428 PUSH2 0x430
0x42b JUMPI
---
0x425: JUMPDEST 
0x426: V390 = CALLVALUE
0x427: V391 = ISZERO V390
0x428: V392 = 0x430
0x42b: JUMPI 0x430 V391
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x42c
[0x42c:0x42f]
---
Predecessors: [0x425]
Successors: []
---
0x42c PUSH1 0x0
0x42e DUP1
0x42f REVERT
---
0x42c: V393 = 0x0
0x42f: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x430
[0x430:0x437]
---
Predecessors: [0x425]
Successors: [0x749]
---
0x430 JUMPDEST
0x431 PUSH2 0x37f
0x434 PUSH2 0x749
0x437 JUMP
---
0x430: JUMPDEST 
0x431: V394 = 0x37f
0x434: V395 = 0x749
0x437: JUMP 0x749
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x37f]
Exit stack: [V13, 0x37f]

================================

Block 0x438
[0x438:0x43e]
---
Predecessors: [0x69]
Successors: [0x43f, 0x443]
---
0x438 JUMPDEST
0x439 CALLVALUE
0x43a ISZERO
0x43b PUSH2 0x443
0x43e JUMPI
---
0x438: JUMPDEST 
0x439: V396 = CALLVALUE
0x43a: V397 = ISZERO V396
0x43b: V398 = 0x443
0x43e: JUMPI 0x443 V397
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x43f
[0x43f:0x442]
---
Predecessors: [0x438]
Successors: []
---
0x43f PUSH1 0x0
0x441 DUP1
0x442 REVERT
---
0x43f: V399 = 0x0
0x442: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x443
[0x443:0x44a]
---
Predecessors: [0x438]
Successors: [0x758]
---
0x443 JUMPDEST
0x444 PUSH2 0x400
0x447 PUSH2 0x758
0x44a JUMP
---
0x443: JUMPDEST 
0x444: V400 = 0x400
0x447: V401 = 0x758
0x44a: JUMP 0x758
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x400]
Exit stack: [V13, 0x400]

================================

Block 0x44b
[0x44b:0x451]
---
Predecessors: [0x74]
Successors: [0x452, 0x456]
---
0x44b JUMPDEST
0x44c CALLVALUE
0x44d ISZERO
0x44e PUSH2 0x456
0x451 JUMPI
---
0x44b: JUMPDEST 
0x44c: V402 = CALLVALUE
0x44d: V403 = ISZERO V402
0x44e: V404 = 0x456
0x451: JUMPI 0x456 V403
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x452
[0x452:0x455]
---
Predecessors: [0x44b]
Successors: []
---
0x452 PUSH1 0x0
0x454 DUP1
0x455 REVERT
---
0x452: V405 = 0x0
0x455: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x456
[0x456:0x45d]
---
Predecessors: [0x44b]
Successors: [0x75e]
---
0x456 JUMPDEST
0x457 PUSH2 0x400
0x45a PUSH2 0x75e
0x45d JUMP
---
0x456: JUMPDEST 
0x457: V406 = 0x400
0x45a: V407 = 0x75e
0x45d: JUMP 0x75e
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x400]
Exit stack: [V13, 0x400]

================================

Block 0x45e
[0x45e:0x46b]
---
Predecessors: [0x25d, 0x294, 0x632]
Successors: [0x46c, 0x46d]
---
0x45e JUMPDEST
0x45f PUSH1 0x0
0x461 DUP3
0x462 DUP3
0x463 ADD
0x464 DUP4
0x465 DUP2
0x466 LT
0x467 ISZERO
0x468 PUSH2 0x46d
0x46b JUMPI
---
0x45e: JUMPDEST 
0x45f: V408 = 0x0
0x463: V409 = ADD S0 S1
0x466: V410 = LT V409 S1
0x467: V411 = ISZERO V410
0x468: V412 = 0x46d
0x46b: JUMPI 0x46d V411
---
Entry stack: [V13, V50, S7, S6, S5, S4, S3, {0x294, 0x307, 0x64a}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V409]
Exit stack: [V13, V50, S7, S6, S5, S4, S3, {0x294, 0x307, 0x64a}, S1, S0, 0x0, V409]

================================

Block 0x46c
[0x46c:0x46c]
---
Predecessors: [0x45e]
Successors: []
---
0x46c INVALID
---
0x46c: INVALID 
---
Entry stack: [V13, V50, S9, S8, S7, S6, S5, {0x294, 0x307, 0x64a}, S3, S2, 0x0, V409]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V50, S9, S8, S7, S6, S5, {0x294, 0x307, 0x64a}, S3, S2, 0x0, V409]

================================

Block 0x46d
[0x46d:0x473]
---
Predecessors: [0x45e]
Successors: [0x294, 0x307, 0x64a]
---
0x46d JUMPDEST
0x46e SWAP4
0x46f SWAP3
0x470 POP
0x471 POP
0x472 POP
0x473 JUMP
---
0x46d: JUMPDEST 
0x473: JUMP {0x294, 0x307, 0x64a}
---
Entry stack: [V13, V50, S9, S8, S7, S6, S5, {0x294, 0x307, 0x64a}, S3, S2, 0x0, V409]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V13, V50, S9, S8, S7, S6, S5, V409]

================================

Block 0x474
[0x474:0x47d]
---
Predecessors: [0x362]
Successors: [0x47e]
---
0x474 JUMPDEST
0x475 PUSH1 0x0
0x477 PUSH1 0x4
0x479 DUP2
0x47a SWAP1
0x47b SSTORE
0x47c DUP1
0x47d DUP1
---
0x474: JUMPDEST 
0x475: V413 = 0x0
0x477: V414 = 0x4
0x47b: S[0x4] = 0x0
---
Entry stack: [V13, 0x36a]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V13, 0x36a, 0x0, 0x0, 0x0]

================================

Block 0x47e
[0x47e:0x4b8]
---
Predecessors: [0x474, 0x64e]
Successors: [0x4b9, 0x4bd]
---
0x47e JUMPDEST
0x47f PUSH1 0x0
0x481 SLOAD
0x482 PUSH1 0x1
0x484 PUSH1 0xa0
0x486 PUSH1 0x2
0x488 EXP
0x489 SUB
0x48a AND
0x48b PUSH4 0x4787513a
0x490 PUSH1 0x40
0x492 MLOAD
0x493 DUP2
0x494 PUSH4 0xffffffff
0x499 AND
0x49a PUSH1 0xe0
0x49c PUSH1 0x2
0x49e EXP
0x49f MUL
0x4a0 DUP2
0x4a1 MSTORE
0x4a2 PUSH1 0x4
0x4a4 ADD
0x4a5 PUSH1 0x20
0x4a7 PUSH1 0x40
0x4a9 MLOAD
0x4aa DUP1
0x4ab DUP4
0x4ac SUB
0x4ad DUP2
0x4ae PUSH1 0x0
0x4b0 DUP8
0x4b1 DUP1
0x4b2 EXTCODESIZE
0x4b3 ISZERO
0x4b4 ISZERO
0x4b5 PUSH2 0x4bd
0x4b8 JUMPI
---
0x47e: JUMPDEST 
0x47f: V415 = 0x0
0x481: V416 = S[0x0]
0x482: V417 = 0x1
0x484: V418 = 0xa0
0x486: V419 = 0x2
0x488: V420 = EXP 0x2 0xa0
0x489: V421 = SUB 0x10000000000000000000000000000000000000000 0x1
0x48a: V422 = AND 0xffffffffffffffffffffffffffffffffffffffff V416
0x48b: V423 = 0x4787513a
0x490: V424 = 0x40
0x492: V425 = M[0x40]
0x494: V426 = 0xffffffff
0x499: V427 = AND 0xffffffff 0x4787513a
0x49a: V428 = 0xe0
0x49c: V429 = 0x2
0x49e: V430 = EXP 0x2 0xe0
0x49f: V431 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x4787513a
0x4a1: M[V425] = 0x4787513a00000000000000000000000000000000000000000000000000000000
0x4a2: V432 = 0x4
0x4a4: V433 = ADD 0x4 V425
0x4a5: V434 = 0x20
0x4a7: V435 = 0x40
0x4a9: V436 = M[0x40]
0x4ac: V437 = SUB V433 V436
0x4ae: V438 = 0x0
0x4b2: V439 = EXTCODESIZE V422
0x4b3: V440 = ISZERO V439
0x4b4: V441 = ISZERO V440
0x4b5: V442 = 0x4bd
0x4b8: JUMPI 0x4bd V441
---
Entry stack: [V13, V50, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [V422, 0x4787513a, V433, 0x20, V436, V437, V436, 0x0, V422]
Exit stack: [V13, V50, S4, S3, S2, S1, S0, V422, 0x4787513a, V433, 0x20, V436, V437, V436, 0x0, V422]

================================

Block 0x4b9
[0x4b9:0x4bc]
---
Predecessors: [0x47e]
Successors: []
---
0x4b9 PUSH1 0x0
0x4bb DUP1
0x4bc REVERT
---
0x4b9: V443 = 0x0
0x4bc: REVERT 0x0 0x0
---
Entry stack: [V13, V50, S13, S12, S11, S10, S9, V422, 0x4787513a, V433, 0x20, V436, V437, V436, 0x0, V422]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V50, S13, S12, S11, S10, S9, V422, 0x4787513a, V433, 0x20, V436, V437, V436, 0x0, V422]

================================

Block 0x4bd
[0x4bd:0x4c5]
---
Predecessors: [0x47e]
Successors: [0x4c6, 0x4ca]
---
0x4bd JUMPDEST
0x4be GAS
0x4bf CALL
0x4c0 ISZERO
0x4c1 ISZERO
0x4c2 PUSH2 0x4ca
0x4c5 JUMPI
---
0x4bd: JUMPDEST 
0x4be: V444 = GAS
0x4bf: V445 = CALL V444 V422 0x0 V436 V437 V436 0x20
0x4c0: V446 = ISZERO V445
0x4c1: V447 = ISZERO V446
0x4c2: V448 = 0x4ca
0x4c5: JUMPI 0x4ca V447
---
Entry stack: [V13, V50, S13, S12, S11, S10, S9, V422, 0x4787513a, V433, 0x20, V436, V437, V436, 0x0, V422]
Stack pops: 6
Stack additions: []
Exit stack: [V13, V50, S13, S12, S11, S10, S9, V422, 0x4787513a, V433]

================================

Block 0x4c6
[0x4c6:0x4c9]
---
Predecessors: [0x4bd]
Successors: []
---
0x4c6 PUSH1 0x0
0x4c8 DUP1
0x4c9 REVERT
---
0x4c6: V449 = 0x0
0x4c9: REVERT 0x0 0x0
---
Entry stack: [V13, 0x36a, S5, S4, S3, S2, 0x4787513a, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x36a, S5, S4, S3, S2, 0x4787513a, S0]

================================

Block 0x4ca
[0x4ca:0x4db]
---
Predecessors: [0x4bd]
Successors: [0x4dc, 0x659]
---
0x4ca JUMPDEST
0x4cb POP
0x4cc POP
0x4cd POP
0x4ce PUSH1 0x40
0x4d0 MLOAD
0x4d1 DUP1
0x4d2 MLOAD
0x4d3 SWAP1
0x4d4 POP
0x4d5 DUP4
0x4d6 LT
0x4d7 ISZERO
0x4d8 PUSH2 0x659
0x4db JUMPI
---
0x4ca: JUMPDEST 
0x4ce: V450 = 0x40
0x4d0: V451 = M[0x40]
0x4d2: V452 = M[V451]
0x4d6: V453 = LT S5 V452
0x4d7: V454 = ISZERO V453
0x4d8: V455 = 0x659
0x4db: JUMPI 0x659 V454
---
Entry stack: [V13, 0x36a, S5, S4, S3, S2, 0x4787513a, S0]
Stack pops: 6
Stack additions: [S5, S4, S3]
Exit stack: [V13, 0x36a, S5, S4, S3]

================================

Block 0x4dc
[0x4dc:0x51e]
---
Predecessors: [0x4ca]
Successors: [0x51f, 0x523]
---
0x4dc PUSH1 0x0
0x4de SLOAD
0x4df PUSH1 0x1
0x4e1 PUSH1 0xa0
0x4e3 PUSH1 0x2
0x4e5 EXP
0x4e6 SUB
0x4e7 AND
0x4e8 PUSH4 0x862a4bf2
0x4ed DUP5
0x4ee PUSH1 0x40
0x4f0 MLOAD
0x4f1 PUSH1 0xe0
0x4f3 PUSH1 0x2
0x4f5 EXP
0x4f6 PUSH4 0xffffffff
0x4fb DUP5
0x4fc AND
0x4fd MUL
0x4fe DUP2
0x4ff MSTORE
0x500 PUSH1 0x4
0x502 DUP2
0x503 ADD
0x504 SWAP2
0x505 SWAP1
0x506 SWAP2
0x507 MSTORE
0x508 PUSH1 0x24
0x50a ADD
0x50b PUSH1 0x20
0x50d PUSH1 0x40
0x50f MLOAD
0x510 DUP1
0x511 DUP4
0x512 SUB
0x513 DUP2
0x514 PUSH1 0x0
0x516 DUP8
0x517 DUP1
0x518 EXTCODESIZE
0x519 ISZERO
0x51a ISZERO
0x51b PUSH2 0x523
0x51e JUMPI
---
0x4dc: V456 = 0x0
0x4de: V457 = S[0x0]
0x4df: V458 = 0x1
0x4e1: V459 = 0xa0
0x4e3: V460 = 0x2
0x4e5: V461 = EXP 0x2 0xa0
0x4e6: V462 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4e7: V463 = AND 0xffffffffffffffffffffffffffffffffffffffff V457
0x4e8: V464 = 0x862a4bf2
0x4ee: V465 = 0x40
0x4f0: V466 = M[0x40]
0x4f1: V467 = 0xe0
0x4f3: V468 = 0x2
0x4f5: V469 = EXP 0x2 0xe0
0x4f6: V470 = 0xffffffff
0x4fc: V471 = AND 0x862a4bf2 0xffffffff
0x4fd: V472 = MUL 0x862a4bf2 0x100000000000000000000000000000000000000000000000000000000
0x4ff: M[V466] = 0x862a4bf200000000000000000000000000000000000000000000000000000000
0x500: V473 = 0x4
0x503: V474 = ADD V466 0x4
0x507: M[V474] = S2
0x508: V475 = 0x24
0x50a: V476 = ADD 0x24 V466
0x50b: V477 = 0x20
0x50d: V478 = 0x40
0x50f: V479 = M[0x40]
0x512: V480 = SUB V476 V479
0x514: V481 = 0x0
0x518: V482 = EXTCODESIZE V463
0x519: V483 = ISZERO V482
0x51a: V484 = ISZERO V483
0x51b: V485 = 0x523
0x51e: JUMPI 0x523 V484
---
Entry stack: [V13, 0x36a, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V463, 0x862a4bf2, V476, 0x20, V479, V480, V479, 0x0, V463]
Exit stack: [V13, 0x36a, S2, S1, S0, V463, 0x862a4bf2, V476, 0x20, V479, V480, V479, 0x0, V463]

================================

Block 0x51f
[0x51f:0x522]
---
Predecessors: [0x4dc]
Successors: []
---
0x51f PUSH1 0x0
0x521 DUP1
0x522 REVERT
---
0x51f: V486 = 0x0
0x522: REVERT 0x0 0x0
---
Entry stack: [V13, 0x36a, S11, S10, S9, V463, 0x862a4bf2, V476, 0x20, V479, V480, V479, 0x0, V463]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x36a, S11, S10, S9, V463, 0x862a4bf2, V476, 0x20, V479, V480, V479, 0x0, V463]

================================

Block 0x523
[0x523:0x52b]
---
Predecessors: [0x4dc]
Successors: [0x52c, 0x530]
---
0x523 JUMPDEST
0x524 GAS
0x525 CALL
0x526 ISZERO
0x527 ISZERO
0x528 PUSH2 0x530
0x52b JUMPI
---
0x523: JUMPDEST 
0x524: V487 = GAS
0x525: V488 = CALL V487 V463 0x0 V479 V480 V479 0x20
0x526: V489 = ISZERO V488
0x527: V490 = ISZERO V489
0x528: V491 = 0x530
0x52b: JUMPI 0x530 V490
---
Entry stack: [V13, 0x36a, S11, S10, S9, V463, 0x862a4bf2, V476, 0x20, V479, V480, V479, 0x0, V463]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x36a, S11, S10, S9, V463, 0x862a4bf2, V476]

================================

Block 0x52c
[0x52c:0x52f]
---
Predecessors: [0x523]
Successors: []
---
0x52c PUSH1 0x0
0x52e DUP1
0x52f REVERT
---
0x52c: V492 = 0x0
0x52f: REVERT 0x0 0x0
---
Entry stack: [V13, 0x36a, S5, S4, S3, V463, 0x862a4bf2, V476]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x36a, S5, S4, S3, V463, 0x862a4bf2, V476]

================================

Block 0x530
[0x530:0x588]
---
Predecessors: [0x523]
Successors: [0x589, 0x58d]
---
0x530 JUMPDEST
0x531 POP
0x532 POP
0x533 POP
0x534 PUSH1 0x40
0x536 MLOAD
0x537 DUP1
0x538 MLOAD
0x539 PUSH1 0x0
0x53b SLOAD
0x53c SWAP1
0x53d SWAP4
0x53e POP
0x53f PUSH1 0x1
0x541 PUSH1 0xa0
0x543 PUSH1 0x2
0x545 EXP
0x546 SUB
0x547 AND
0x548 SWAP1
0x549 POP
0x54a PUSH4 0xb414d4b6
0x54f DUP4
0x550 PUSH1 0x40
0x552 MLOAD
0x553 PUSH1 0xe0
0x555 PUSH1 0x2
0x557 EXP
0x558 PUSH4 0xffffffff
0x55d DUP5
0x55e AND
0x55f MUL
0x560 DUP2
0x561 MSTORE
0x562 PUSH1 0x1
0x564 PUSH1 0xa0
0x566 PUSH1 0x2
0x568 EXP
0x569 SUB
0x56a SWAP1
0x56b SWAP2
0x56c AND
0x56d PUSH1 0x4
0x56f DUP3
0x570 ADD
0x571 MSTORE
0x572 PUSH1 0x24
0x574 ADD
0x575 PUSH1 0x20
0x577 PUSH1 0x40
0x579 MLOAD
0x57a DUP1
0x57b DUP4
0x57c SUB
0x57d DUP2
0x57e PUSH1 0x0
0x580 DUP8
0x581 DUP1
0x582 EXTCODESIZE
0x583 ISZERO
0x584 ISZERO
0x585 PUSH2 0x58d
0x588 JUMPI
---
0x530: JUMPDEST 
0x534: V493 = 0x40
0x536: V494 = M[0x40]
0x538: V495 = M[V494]
0x539: V496 = 0x0
0x53b: V497 = S[0x0]
0x53f: V498 = 0x1
0x541: V499 = 0xa0
0x543: V500 = 0x2
0x545: V501 = EXP 0x2 0xa0
0x546: V502 = SUB 0x10000000000000000000000000000000000000000 0x1
0x547: V503 = AND 0xffffffffffffffffffffffffffffffffffffffff V497
0x54a: V504 = 0xb414d4b6
0x550: V505 = 0x40
0x552: V506 = M[0x40]
0x553: V507 = 0xe0
0x555: V508 = 0x2
0x557: V509 = EXP 0x2 0xe0
0x558: V510 = 0xffffffff
0x55e: V511 = AND 0xb414d4b6 0xffffffff
0x55f: V512 = MUL 0xb414d4b6 0x100000000000000000000000000000000000000000000000000000000
0x561: M[V506] = 0xb414d4b600000000000000000000000000000000000000000000000000000000
0x562: V513 = 0x1
0x564: V514 = 0xa0
0x566: V515 = 0x2
0x568: V516 = EXP 0x2 0xa0
0x569: V517 = SUB 0x10000000000000000000000000000000000000000 0x1
0x56c: V518 = AND V495 0xffffffffffffffffffffffffffffffffffffffff
0x56d: V519 = 0x4
0x570: V520 = ADD V506 0x4
0x571: M[V520] = V518
0x572: V521 = 0x24
0x574: V522 = ADD 0x24 V506
0x575: V523 = 0x20
0x577: V524 = 0x40
0x579: V525 = M[0x40]
0x57c: V526 = SUB V522 V525
0x57e: V527 = 0x0
0x582: V528 = EXTCODESIZE V503
0x583: V529 = ISZERO V528
0x584: V530 = ISZERO V529
0x585: V531 = 0x58d
0x588: JUMPI 0x58d V530
---
Entry stack: [V13, 0x36a, S5, S4, S3, V463, 0x862a4bf2, V476]
Stack pops: 5
Stack additions: [V495, S3, V503, 0xb414d4b6, V522, 0x20, V525, V526, V525, 0x0, V503]
Exit stack: [V13, 0x36a, S5, V495, S3, V503, 0xb414d4b6, V522, 0x20, V525, V526, V525, 0x0, V503]

================================

Block 0x589
[0x589:0x58c]
---
Predecessors: [0x530]
Successors: []
---
0x589 PUSH1 0x0
0x58b DUP1
0x58c REVERT
---
0x589: V532 = 0x0
0x58c: REVERT 0x0 0x0
---
Entry stack: [V13, 0x36a, S11, V495, S9, V503, 0xb414d4b6, V522, 0x20, V525, V526, V525, 0x0, V503]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x36a, S11, V495, S9, V503, 0xb414d4b6, V522, 0x20, V525, V526, V525, 0x0, V503]

================================

Block 0x58d
[0x58d:0x595]
---
Predecessors: [0x530]
Successors: [0x596, 0x59a]
---
0x58d JUMPDEST
0x58e GAS
0x58f CALL
0x590 ISZERO
0x591 ISZERO
0x592 PUSH2 0x59a
0x595 JUMPI
---
0x58d: JUMPDEST 
0x58e: V533 = GAS
0x58f: V534 = CALL V533 V503 0x0 V525 V526 V525 0x20
0x590: V535 = ISZERO V534
0x591: V536 = ISZERO V535
0x592: V537 = 0x59a
0x595: JUMPI 0x59a V536
---
Entry stack: [V13, 0x36a, S11, V495, S9, V503, 0xb414d4b6, V522, 0x20, V525, V526, V525, 0x0, V503]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x36a, S11, V495, S9, V503, 0xb414d4b6, V522]

================================

Block 0x596
[0x596:0x599]
---
Predecessors: [0x58d]
Successors: []
---
0x596 PUSH1 0x0
0x598 DUP1
0x599 REVERT
---
0x596: V538 = 0x0
0x599: REVERT 0x0 0x0
---
Entry stack: [V13, 0x36a, S5, V495, S3, V503, 0xb414d4b6, V522]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x36a, S5, V495, S3, V503, 0xb414d4b6, V522]

================================

Block 0x59a
[0x59a:0x5ad]
---
Predecessors: [0x58d]
Successors: [0x5ae, 0x5cc]
---
0x59a JUMPDEST
0x59b POP
0x59c POP
0x59d POP
0x59e PUSH1 0x40
0x5a0 MLOAD
0x5a1 DUP1
0x5a2 MLOAD
0x5a3 SWAP2
0x5a4 POP
0x5a5 POP
0x5a6 DUP1
0x5a7 ISZERO
0x5a8 DUP1
0x5a9 ISZERO
0x5aa PUSH2 0x5cc
0x5ad JUMPI
---
0x59a: JUMPDEST 
0x59e: V539 = 0x40
0x5a0: V540 = M[0x40]
0x5a2: V541 = M[V540]
0x5a7: V542 = ISZERO V541
0x5a9: V543 = ISZERO V542
0x5aa: V544 = 0x5cc
0x5ad: JUMPI 0x5cc V543
---
Entry stack: [V13, 0x36a, S5, V495, S3, V503, 0xb414d4b6, V522]
Stack pops: 4
Stack additions: [V541, V542]
Exit stack: [V13, 0x36a, S5, V495, V541, V542]

================================

Block 0x5ae
[0x5ae:0x5cb]
---
Predecessors: [0x59a]
Successors: [0x5cc]
---
0x5ae POP
0x5af PUSH1 0x1
0x5b1 PUSH1 0xa0
0x5b3 PUSH1 0x2
0x5b5 EXP
0x5b6 SUB
0x5b7 DUP3
0x5b8 AND
0x5b9 PUSH1 0x0
0x5bb SWAP1
0x5bc DUP2
0x5bd MSTORE
0x5be PUSH1 0x3
0x5c0 PUSH1 0x20
0x5c2 MSTORE
0x5c3 PUSH1 0x40
0x5c5 SWAP1
0x5c6 SHA3
0x5c7 SLOAD
0x5c8 PUSH1 0xff
0x5ca AND
0x5cb ISZERO
---
0x5af: V545 = 0x1
0x5b1: V546 = 0xa0
0x5b3: V547 = 0x2
0x5b5: V548 = EXP 0x2 0xa0
0x5b6: V549 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5b8: V550 = AND V495 0xffffffffffffffffffffffffffffffffffffffff
0x5b9: V551 = 0x0
0x5bd: M[0x0] = V550
0x5be: V552 = 0x3
0x5c0: V553 = 0x20
0x5c2: M[0x20] = 0x3
0x5c3: V554 = 0x40
0x5c6: V555 = SHA3 0x0 0x40
0x5c7: V556 = S[V555]
0x5c8: V557 = 0xff
0x5ca: V558 = AND 0xff V556
0x5cb: V559 = ISZERO V558
---
Entry stack: [V13, 0x36a, S3, V495, V541, V542]
Stack pops: 3
Stack additions: [S2, S1, V559]
Exit stack: [V13, 0x36a, S3, V495, V541, V559]

================================

Block 0x5cc
[0x5cc:0x5d1]
---
Predecessors: [0x59a, 0x5ae]
Successors: [0x5d2, 0x64e]
---
0x5cc JUMPDEST
0x5cd ISZERO
0x5ce PUSH2 0x64e
0x5d1 JUMPI
---
0x5cc: JUMPDEST 
0x5cd: V560 = ISZERO S0
0x5ce: V561 = 0x64e
0x5d1: JUMPI 0x64e V560
---
Entry stack: [V13, 0x36a, S3, V495, V541, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x36a, S3, V495, V541]

================================

Block 0x5d2
[0x5d2:0x620]
---
Predecessors: [0x5cc]
Successors: [0x621, 0x625]
---
0x5d2 PUSH1 0x0
0x5d4 SLOAD
0x5d5 PUSH2 0x64a
0x5d8 SWAP1
0x5d9 PUSH1 0x1
0x5db PUSH1 0xa0
0x5dd PUSH1 0x2
0x5df EXP
0x5e0 SUB
0x5e1 AND
0x5e2 PUSH4 0x70a08231
0x5e7 DUP5
0x5e8 PUSH1 0x40
0x5ea MLOAD
0x5eb PUSH1 0xe0
0x5ed PUSH1 0x2
0x5ef EXP
0x5f0 PUSH4 0xffffffff
0x5f5 DUP5
0x5f6 AND
0x5f7 MUL
0x5f8 DUP2
0x5f9 MSTORE
0x5fa PUSH1 0x1
0x5fc PUSH1 0xa0
0x5fe PUSH1 0x2
0x600 EXP
0x601 SUB
0x602 SWAP1
0x603 SWAP2
0x604 AND
0x605 PUSH1 0x4
0x607 DUP3
0x608 ADD
0x609 MSTORE
0x60a PUSH1 0x24
0x60c ADD
0x60d PUSH1 0x20
0x60f PUSH1 0x40
0x611 MLOAD
0x612 DUP1
0x613 DUP4
0x614 SUB
0x615 DUP2
0x616 PUSH1 0x0
0x618 DUP8
0x619 DUP1
0x61a EXTCODESIZE
0x61b ISZERO
0x61c ISZERO
0x61d PUSH2 0x625
0x620 JUMPI
---
0x5d2: V562 = 0x0
0x5d4: V563 = S[0x0]
0x5d5: V564 = 0x64a
0x5d9: V565 = 0x1
0x5db: V566 = 0xa0
0x5dd: V567 = 0x2
0x5df: V568 = EXP 0x2 0xa0
0x5e0: V569 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5e1: V570 = AND 0xffffffffffffffffffffffffffffffffffffffff V563
0x5e2: V571 = 0x70a08231
0x5e8: V572 = 0x40
0x5ea: V573 = M[0x40]
0x5eb: V574 = 0xe0
0x5ed: V575 = 0x2
0x5ef: V576 = EXP 0x2 0xe0
0x5f0: V577 = 0xffffffff
0x5f6: V578 = AND 0x70a08231 0xffffffff
0x5f7: V579 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x5f9: M[V573] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x5fa: V580 = 0x1
0x5fc: V581 = 0xa0
0x5fe: V582 = 0x2
0x600: V583 = EXP 0x2 0xa0
0x601: V584 = SUB 0x10000000000000000000000000000000000000000 0x1
0x604: V585 = AND V495 0xffffffffffffffffffffffffffffffffffffffff
0x605: V586 = 0x4
0x608: V587 = ADD V573 0x4
0x609: M[V587] = V585
0x60a: V588 = 0x24
0x60c: V589 = ADD 0x24 V573
0x60d: V590 = 0x20
0x60f: V591 = 0x40
0x611: V592 = M[0x40]
0x614: V593 = SUB V589 V592
0x616: V594 = 0x0
0x61a: V595 = EXTCODESIZE V570
0x61b: V596 = ISZERO V595
0x61c: V597 = ISZERO V596
0x61d: V598 = 0x625
0x620: JUMPI 0x625 V597
---
Entry stack: [V13, 0x36a, S2, V495, V541]
Stack pops: 2
Stack additions: [S1, S0, 0x64a, V570, 0x70a08231, V589, 0x20, V592, V593, V592, 0x0, V570]
Exit stack: [V13, 0x36a, S2, V495, V541, 0x64a, V570, 0x70a08231, V589, 0x20, V592, V593, V592, 0x0, V570]

================================

Block 0x621
[0x621:0x624]
---
Predecessors: [0x5d2]
Successors: []
---
0x621 PUSH1 0x0
0x623 DUP1
0x624 REVERT
---
0x621: V599 = 0x0
0x624: REVERT 0x0 0x0
---
Entry stack: [V13, 0x36a, S12, V495, V541, 0x64a, V570, 0x70a08231, V589, 0x20, V592, V593, V592, 0x0, V570]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x36a, S12, V495, V541, 0x64a, V570, 0x70a08231, V589, 0x20, V592, V593, V592, 0x0, V570]

================================

Block 0x625
[0x625:0x62d]
---
Predecessors: [0x5d2]
Successors: [0x62e, 0x632]
---
0x625 JUMPDEST
0x626 GAS
0x627 CALL
0x628 ISZERO
0x629 ISZERO
0x62a PUSH2 0x632
0x62d JUMPI
---
0x625: JUMPDEST 
0x626: V600 = GAS
0x627: V601 = CALL V600 V570 0x0 V592 V593 V592 0x20
0x628: V602 = ISZERO V601
0x629: V603 = ISZERO V602
0x62a: V604 = 0x632
0x62d: JUMPI 0x632 V603
---
Entry stack: [V13, 0x36a, S12, V495, V541, 0x64a, V570, 0x70a08231, V589, 0x20, V592, V593, V592, 0x0, V570]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x36a, S12, V495, V541, 0x64a, V570, 0x70a08231, V589]

================================

Block 0x62e
[0x62e:0x631]
---
Predecessors: [0x625]
Successors: []
---
0x62e PUSH1 0x0
0x630 DUP1
0x631 REVERT
---
0x62e: V605 = 0x0
0x631: REVERT 0x0 0x0
---
Entry stack: [V13, 0x36a, S6, V495, V541, 0x64a, V570, 0x70a08231, V589]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x36a, S6, V495, V541, 0x64a, V570, 0x70a08231, V589]

================================

Block 0x632
[0x632:0x649]
---
Predecessors: [0x625]
Successors: [0x45e]
---
0x632 JUMPDEST
0x633 POP
0x634 POP
0x635 POP
0x636 PUSH1 0x40
0x638 MLOAD
0x639 DUP1
0x63a MLOAD
0x63b PUSH1 0x4
0x63d SLOAD
0x63e SWAP2
0x63f POP
0x640 PUSH4 0xffffffff
0x645 PUSH2 0x45e
0x648 AND
0x649 JUMP
---
0x632: JUMPDEST 
0x636: V606 = 0x40
0x638: V607 = M[0x40]
0x63a: V608 = M[V607]
0x63b: V609 = 0x4
0x63d: V610 = S[0x4]
0x640: V611 = 0xffffffff
0x645: V612 = 0x45e
0x648: V613 = AND 0x45e 0xffffffff
0x649: JUMP 0x45e
---
Entry stack: [V13, 0x36a, S6, V495, V541, 0x64a, V570, 0x70a08231, V589]
Stack pops: 3
Stack additions: [V610, V608]
Exit stack: [V13, 0x36a, S6, V495, V541, 0x64a, V610, V608]

================================

Block 0x64a
[0x64a:0x64d]
---
Predecessors: [0x46d]
Successors: [0x64e]
---
0x64a JUMPDEST
0x64b PUSH1 0x4
0x64d SSTORE
---
0x64a: JUMPDEST 
0x64b: V614 = 0x4
0x64d: S[0x4] = S0
---
Entry stack: [V13, V50, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, V50, S5, S4, S3, S2, S1]

================================

Block 0x64e
[0x64e:0x658]
---
Predecessors: [0x5cc, 0x64a]
Successors: [0x47e]
---
0x64e JUMPDEST
0x64f PUSH1 0x1
0x651 SWAP1
0x652 SWAP3
0x653 ADD
0x654 SWAP2
0x655 PUSH2 0x47e
0x658 JUMP
---
0x64e: JUMPDEST 
0x64f: V615 = 0x1
0x653: V616 = ADD S2 0x1
0x655: V617 = 0x47e
0x658: JUMP 0x47e
---
Entry stack: [V13, V50, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V616, S1, S0]
Exit stack: [V13, V50, S4, S3, V616, S1, S0]

================================

Block 0x659
[0x659:0x65d]
---
Predecessors: [0x4ca]
Successors: [0x36a]
---
0x659 JUMPDEST
0x65a POP
0x65b POP
0x65c POP
0x65d JUMP
---
0x659: JUMPDEST 
0x65d: JUMP 0x36a
---
Entry stack: [V13, 0x36a, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V13]

================================

Block 0x65e
[0x65e:0x66c]
---
Predecessors: [0x377]
Successors: [0x37f]
---
0x65e JUMPDEST
0x65f PUSH1 0x0
0x661 SLOAD
0x662 PUSH1 0x1
0x664 PUSH1 0xa0
0x666 PUSH1 0x2
0x668 EXP
0x669 SUB
0x66a AND
0x66b DUP2
0x66c JUMP
---
0x65e: JUMPDEST 
0x65f: V618 = 0x0
0x661: V619 = S[0x0]
0x662: V620 = 0x1
0x664: V621 = 0xa0
0x666: V622 = 0x2
0x668: V623 = EXP 0x2 0xa0
0x669: V624 = SUB 0x10000000000000000000000000000000000000000 0x1
0x66a: V625 = AND 0xffffffffffffffffffffffffffffffffffffffff V619
0x66c: JUMP 0x37f
---
Entry stack: [V13, 0x37f]
Stack pops: 1
Stack additions: [S0, V625]
Exit stack: [V13, 0x37f, V625]

================================

Block 0x66d
[0x66d:0x683]
---
Predecessors: [0x3a6]
Successors: [0x684, 0x688]
---
0x66d JUMPDEST
0x66e PUSH1 0x1
0x670 SLOAD
0x671 CALLER
0x672 PUSH1 0x1
0x674 PUSH1 0xa0
0x676 PUSH1 0x2
0x678 EXP
0x679 SUB
0x67a SWAP1
0x67b DUP2
0x67c AND
0x67d SWAP2
0x67e AND
0x67f EQ
0x680 PUSH2 0x688
0x683 JUMPI
---
0x66d: JUMPDEST 
0x66e: V626 = 0x1
0x670: V627 = S[0x1]
0x671: V628 = CALLER
0x672: V629 = 0x1
0x674: V630 = 0xa0
0x676: V631 = 0x2
0x678: V632 = EXP 0x2 0xa0
0x679: V633 = SUB 0x10000000000000000000000000000000000000000 0x1
0x67c: V634 = AND 0xffffffffffffffffffffffffffffffffffffffff V628
0x67e: V635 = AND V627 0xffffffffffffffffffffffffffffffffffffffff
0x67f: V636 = EQ V635 V634
0x680: V637 = 0x688
0x683: JUMPI 0x688 V636
---
Entry stack: [V13, 0x36a]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x36a]

================================

Block 0x684
[0x684:0x687]
---
Predecessors: [0x66d]
Successors: []
---
0x684 PUSH1 0x0
0x686 DUP1
0x687 REVERT
---
0x684: V638 = 0x0
0x687: REVERT 0x0 0x0
---
Entry stack: [V13, 0x36a]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x36a]

================================

Block 0x688
[0x688:0x69e]
---
Predecessors: [0x66d]
Successors: [0x69f, 0x6a3]
---
0x688 JUMPDEST
0x689 PUSH1 0x1
0x68b SLOAD
0x68c CALLER
0x68d PUSH1 0x1
0x68f PUSH1 0xa0
0x691 PUSH1 0x2
0x693 EXP
0x694 SUB
0x695 SWAP1
0x696 DUP2
0x697 AND
0x698 SWAP2
0x699 AND
0x69a EQ
0x69b PUSH2 0x6a3
0x69e JUMPI
---
0x688: JUMPDEST 
0x689: V639 = 0x1
0x68b: V640 = S[0x1]
0x68c: V641 = CALLER
0x68d: V642 = 0x1
0x68f: V643 = 0xa0
0x691: V644 = 0x2
0x693: V645 = EXP 0x2 0xa0
0x694: V646 = SUB 0x10000000000000000000000000000000000000000 0x1
0x697: V647 = AND 0xffffffffffffffffffffffffffffffffffffffff V641
0x699: V648 = AND V640 0xffffffffffffffffffffffffffffffffffffffff
0x69a: V649 = EQ V648 V647
0x69b: V650 = 0x6a3
0x69e: JUMPI 0x6a3 V649
---
Entry stack: [V13, 0x36a]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x36a]

================================

Block 0x69f
[0x69f:0x6a2]
---
Predecessors: [0x688]
Successors: []
---
0x69f PUSH1 0x0
0x6a1 DUP1
0x6a2 REVERT
---
0x69f: V651 = 0x0
0x6a2: REVERT 0x0 0x0
---
Entry stack: [V13, 0x36a]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x36a]

================================

Block 0x6a3
[0x6a3:0x6b0]
---
Predecessors: [0x688]
Successors: []
---
0x6a3 JUMPDEST
0x6a4 PUSH1 0x1
0x6a6 SLOAD
0x6a7 PUSH1 0x1
0x6a9 PUSH1 0xa0
0x6ab PUSH1 0x2
0x6ad EXP
0x6ae SUB
0x6af AND
0x6b0 SELFDESTRUCT
---
0x6a3: JUMPDEST 
0x6a4: V652 = 0x1
0x6a6: V653 = S[0x1]
0x6a7: V654 = 0x1
0x6a9: V655 = 0xa0
0x6ab: V656 = 0x2
0x6ad: V657 = EXP 0x2 0xa0
0x6ae: V658 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6af: V659 = AND 0xffffffffffffffffffffffffffffffffffffffff V653
0x6b0: SELFDESTRUCT V659
---
Entry stack: [V13, 0x36a]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x36a]

================================

Block 0x6b1
[0x6b1:0x6c5]
---
Predecessors: [0x3b9]
Successors: [0x3cd]
---
0x6b1 JUMPDEST
0x6b2 PUSH1 0x3
0x6b4 PUSH1 0x20
0x6b6 MSTORE
0x6b7 PUSH1 0x0
0x6b9 SWAP1
0x6ba DUP2
0x6bb MSTORE
0x6bc PUSH1 0x40
0x6be SWAP1
0x6bf SHA3
0x6c0 SLOAD
0x6c1 PUSH1 0xff
0x6c3 AND
0x6c4 DUP2
0x6c5 JUMP
---
0x6b1: JUMPDEST 
0x6b2: V660 = 0x3
0x6b4: V661 = 0x20
0x6b6: M[0x20] = 0x3
0x6b7: V662 = 0x0
0x6bb: M[0x0] = V352
0x6bc: V663 = 0x40
0x6bf: V664 = SHA3 0x0 0x40
0x6c0: V665 = S[V664]
0x6c1: V666 = 0xff
0x6c3: V667 = AND 0xff V665
0x6c5: JUMP 0x3cd
---
Entry stack: [V13, 0x3cd, V352]
Stack pops: 2
Stack additions: [S1, V667]
Exit stack: [V13, 0x3cd, V667]

================================

Block 0x6c6
[0x6c6:0x6d7]
---
Predecessors: [0x3ec]
Successors: [0x400]
---
0x6c6 JUMPDEST
0x6c7 PUSH1 0x2
0x6c9 PUSH1 0x20
0x6cb MSTORE
0x6cc PUSH1 0x0
0x6ce SWAP1
0x6cf DUP2
0x6d0 MSTORE
0x6d1 PUSH1 0x40
0x6d3 SWAP1
0x6d4 SHA3
0x6d5 SLOAD
0x6d6 DUP2
0x6d7 JUMP
---
0x6c6: JUMPDEST 
0x6c7: V668 = 0x2
0x6c9: V669 = 0x20
0x6cb: M[0x20] = 0x2
0x6cc: V670 = 0x0
0x6d0: M[0x0] = V375
0x6d1: V671 = 0x40
0x6d4: V672 = SHA3 0x0 0x40
0x6d5: V673 = S[V672]
0x6d7: JUMP 0x400
---
Entry stack: [V13, 0x400, V375]
Stack pops: 2
Stack additions: [S1, V673]
Exit stack: [V13, 0x400, V673]

================================

Block 0x6d8
[0x6d8:0x6f8]
---
Predecessors: [0x41d]
Successors: [0x6f9, 0x6fd]
---
0x6d8 JUMPDEST
0x6d9 PUSH1 0x1
0x6db PUSH1 0xa0
0x6dd PUSH1 0x2
0x6df EXP
0x6e0 SUB
0x6e1 CALLER
0x6e2 AND
0x6e3 PUSH1 0x0
0x6e5 SWAP1
0x6e6 DUP2
0x6e7 MSTORE
0x6e8 PUSH1 0x2
0x6ea PUSH1 0x20
0x6ec MSTORE
0x6ed PUSH1 0x40
0x6ef DUP2
0x6f0 SHA3
0x6f1 SLOAD
0x6f2 DUP2
0x6f3 SWAP1
0x6f4 GT
0x6f5 PUSH2 0x6fd
0x6f8 JUMPI
---
0x6d8: JUMPDEST 
0x6d9: V674 = 0x1
0x6db: V675 = 0xa0
0x6dd: V676 = 0x2
0x6df: V677 = EXP 0x2 0xa0
0x6e0: V678 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6e1: V679 = CALLER
0x6e2: V680 = AND V679 0xffffffffffffffffffffffffffffffffffffffff
0x6e3: V681 = 0x0
0x6e7: M[0x0] = V680
0x6e8: V682 = 0x2
0x6ea: V683 = 0x20
0x6ec: M[0x20] = 0x2
0x6ed: V684 = 0x40
0x6f0: V685 = SHA3 0x0 0x40
0x6f1: V686 = S[V685]
0x6f4: V687 = GT V686 0x0
0x6f5: V688 = 0x6fd
0x6f8: JUMPI 0x6fd V687
---
Entry stack: [V13, 0x36a]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x36a, 0x0]

================================

Block 0x6f9
[0x6f9:0x6fc]
---
Predecessors: [0x6d8]
Successors: []
---
0x6f9 PUSH1 0x0
0x6fb DUP1
0x6fc REVERT
---
0x6f9: V689 = 0x0
0x6fc: REVERT 0x0 0x0
---
Entry stack: [V13, 0x36a, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x36a, 0x0]

================================

Block 0x6fd
[0x6fd:0x741]
---
Predecessors: [0x6d8]
Successors: [0x742, 0x746]
---
0x6fd JUMPDEST
0x6fe POP
0x6ff PUSH1 0x1
0x701 PUSH1 0xa0
0x703 PUSH1 0x2
0x705 EXP
0x706 SUB
0x707 CALLER
0x708 AND
0x709 PUSH1 0x0
0x70b DUP2
0x70c DUP2
0x70d MSTORE
0x70e PUSH1 0x2
0x710 PUSH1 0x20
0x712 MSTORE
0x713 PUSH1 0x40
0x715 DUP1
0x716 DUP3
0x717 SHA3
0x718 DUP1
0x719 SLOAD
0x71a SWAP3
0x71b SWAP1
0x71c SSTORE
0x71d SWAP1
0x71e SWAP2
0x71f SWAP1
0x720 DUP3
0x721 ISZERO
0x722 PUSH2 0x8fc
0x725 MUL
0x726 SWAP1
0x727 DUP4
0x728 SWAP1
0x729 MLOAD
0x72a PUSH1 0x0
0x72c PUSH1 0x40
0x72e MLOAD
0x72f DUP1
0x730 DUP4
0x731 SUB
0x732 DUP2
0x733 DUP6
0x734 DUP9
0x735 DUP9
0x736 CALL
0x737 SWAP4
0x738 POP
0x739 POP
0x73a POP
0x73b POP
0x73c ISZERO
0x73d ISZERO
0x73e PUSH2 0x746
0x741 JUMPI
---
0x6fd: JUMPDEST 
0x6ff: V690 = 0x1
0x701: V691 = 0xa0
0x703: V692 = 0x2
0x705: V693 = EXP 0x2 0xa0
0x706: V694 = SUB 0x10000000000000000000000000000000000000000 0x1
0x707: V695 = CALLER
0x708: V696 = AND V695 0xffffffffffffffffffffffffffffffffffffffff
0x709: V697 = 0x0
0x70d: M[0x0] = V696
0x70e: V698 = 0x2
0x710: V699 = 0x20
0x712: M[0x20] = 0x2
0x713: V700 = 0x40
0x717: V701 = SHA3 0x0 0x40
0x719: V702 = S[V701]
0x71c: S[V701] = 0x0
0x721: V703 = ISZERO V702
0x722: V704 = 0x8fc
0x725: V705 = MUL 0x8fc V703
0x729: V706 = M[0x40]
0x72a: V707 = 0x0
0x72c: V708 = 0x40
0x72e: V709 = M[0x40]
0x731: V710 = SUB V706 V709
0x736: V711 = CALL V705 V696 V702 V709 V710 V709 0x0
0x73c: V712 = ISZERO V711
0x73d: V713 = ISZERO V712
0x73e: V714 = 0x746
0x741: JUMPI 0x746 V713
---
Entry stack: [V13, 0x36a, 0x0]
Stack pops: 1
Stack additions: [V702]
Exit stack: [V13, 0x36a, V702]

================================

Block 0x742
[0x742:0x745]
---
Predecessors: [0x6fd]
Successors: []
---
0x742 PUSH1 0x0
0x744 DUP1
0x745 REVERT
---
0x742: V715 = 0x0
0x745: REVERT 0x0 0x0
---
Entry stack: [V13, 0x36a, V702]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x36a, V702]

================================

Block 0x746
[0x746:0x748]
---
Predecessors: [0x6fd]
Successors: [0x36a]
---
0x746 JUMPDEST
0x747 POP
0x748 JUMP
---
0x746: JUMPDEST 
0x748: JUMP 0x36a
---
Entry stack: [V13, 0x36a, V702]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x749
[0x749:0x757]
---
Predecessors: [0x430]
Successors: [0x37f]
---
0x749 JUMPDEST
0x74a PUSH1 0x1
0x74c SLOAD
0x74d PUSH1 0x1
0x74f PUSH1 0xa0
0x751 PUSH1 0x2
0x753 EXP
0x754 SUB
0x755 AND
0x756 DUP2
0x757 JUMP
---
0x749: JUMPDEST 
0x74a: V716 = 0x1
0x74c: V717 = S[0x1]
0x74d: V718 = 0x1
0x74f: V719 = 0xa0
0x751: V720 = 0x2
0x753: V721 = EXP 0x2 0xa0
0x754: V722 = SUB 0x10000000000000000000000000000000000000000 0x1
0x755: V723 = AND 0xffffffffffffffffffffffffffffffffffffffff V717
0x757: JUMP 0x37f
---
Entry stack: [V13, 0x37f]
Stack pops: 1
Stack additions: [S0, V723]
Exit stack: [V13, 0x37f, V723]

================================

Block 0x758
[0x758:0x75d]
---
Predecessors: [0x443]
Successors: [0x400]
---
0x758 JUMPDEST
0x759 PUSH1 0x4
0x75b SLOAD
0x75c DUP2
0x75d JUMP
---
0x758: JUMPDEST 
0x759: V724 = 0x4
0x75b: V725 = S[0x4]
0x75d: JUMP 0x400
---
Entry stack: [V13, 0x400]
Stack pops: 1
Stack additions: [S0, V725]
Exit stack: [V13, 0x400, V725]

================================

Block 0x75e
[0x75e:0x766]
---
Predecessors: [0x456]
Successors: [0x400]
---
0x75e JUMPDEST
0x75f PUSH5 0xdf97b4564
0x765 SWAP1
0x766 JUMP
---
0x75e: JUMPDEST 
0x75f: V726 = 0xdf97b4564
0x766: JUMP 0x400
---
Entry stack: [V13, 0x400]
Stack pops: 1
Stack additions: [0xdf97b4564]
Exit stack: [V13, 0xdf97b4564]

================================

Block 0x767
[0x767:0x79b]
---
Predecessors: []
Successors: []
---
0x767 STOP
0x768 LOG1
0x769 PUSH6 0x627a7a723058
0x770 SHA3
0x771 AND
0x772 EXTCODESIZE
0x773 MISSING 0xda
0x774 MISSING 0xc9
0x775 LOG4
0x776 SWAP14
0x777 PUSH3 0xf57aa2
0x77b MISSING 0xe2
0x77c MISSING 0xed
0x77d MSIZE
0x77e JUMP
0x77f ORIGIN
0x780 MISSING 0xd7
0x781 MISSING 0xaf
0x782 MISSING 0xed
0x783 CALLCODE
0x784 ADDMOD
0x785 CREATE2
0x786 PUSH21 0x93acc09aac5aa0cc92ff0029
---
0x767: STOP 
0x768: LOG S0 S1 S2
0x769: V727 = 0x627a7a723058
0x770: V728 = SHA3 0x627a7a723058 S3
0x771: V729 = AND V728 S4
0x772: V730 = EXTCODESIZE V729
0x773: MISSING 0xda
0x774: MISSING 0xc9
0x775: LOG S0 S1 S2 S3 S4 S5
0x777: V731 = 0xf57aa2
0x77b: MISSING 0xe2
0x77c: MISSING 0xed
0x77d: V732 = MSIZE
0x77e: JUMP V732
0x77f: V733 = ORIGIN
0x780: MISSING 0xd7
0x781: MISSING 0xaf
0x782: MISSING 0xed
0x783: V734 = CALLCODE S0 S1 S2 S3 S4 S5 S6
0x784: V735 = ADDMOD V734 S7 S8
0x785: V736 = CREATE2 V735 S9 S10 S11
0x786: V737 = 0x93acc09aac5aa0cc92ff0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V730, 0xf57aa2, S20, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S6, V733, 0x93acc09aac5aa0cc92ff0029, V736]
Exit stack: []

================================

Function 0:
Public function signature: 0x11d9e195
Entry block: 0x357
Exit block: 0x36a
Body: 0x357, 0x35e, 0x362, 0x36a, 0x474

Function 1:
Public function signature: 0x1ff38308
Entry block: 0x36c
Exit block: 0x37f
Body: 0x36c, 0x373, 0x377, 0x37f, 0x65e

Function 2:
Public function signature: 0x41c0e1b5
Entry block: 0x39b
Exit block: 0x6a3
Body: 0x39b, 0x3a2, 0x3a6, 0x66d, 0x684, 0x688, 0x69f, 0x6a3

Function 3:
Public function signature: 0x5600d2fa
Entry block: 0x3ae
Exit block: 0x3cd
Body: 0x3ae, 0x3b5, 0x3b9, 0x3cd, 0x6b1

Function 4:
Public function signature: 0x68306e43
Entry block: 0x3e1
Exit block: 0x400
Body: 0x3e1, 0x3e8, 0x3ec, 0x400, 0x6c6

Function 5:
Public function signature: 0x6a474002
Entry block: 0x412
Exit block: 0x36a
Body: 0x36a, 0x412, 0x419, 0x41d, 0x6d8, 0x6f9, 0x6fd, 0x742, 0x746

Function 6:
Public function signature: 0x8da5cb5b
Entry block: 0x425
Exit block: 0x37f
Body: 0x37f, 0x425, 0x42c, 0x430, 0x749

Function 7:
Public function signature: 0x984d11fc
Entry block: 0x438
Exit block: 0x400
Body: 0x400, 0x438, 0x43f, 0x443, 0x758

Function 8:
Public function signature: 0xa0a8e460
Entry block: 0x44b
Exit block: 0x400
Body: 0x400, 0x44b, 0x452, 0x456, 0x75e

Function 9:
Public fallback function
Entry block: 0x7f
Exit block: 0x36a
Body: 0x7f, 0x94, 0x95, 0xa0, 0xa4, 0xad, 0xe8, 0xec, 0xf5, 0xf9, 0x10b, 0x14e, 0x152, 0x15b, 0x15f, 0x1b8, 0x1bc, 0x1c5, 0x1c9, 0x1dd, 0x1fb, 0x201, 0x24c, 0x250, 0x259, 0x25d, 0x294, 0x30a, 0x315, 0x36a

Function 10:
Private function
Entry block: 0x45e
Exit block: 0x46d
Body: 0x45e, 0x46d, 0x47e, 0x4bd, 0x4ca, 0x4dc, 0x523, 0x530, 0x58d, 0x59a, 0x5ae, 0x5cc, 0x5d2, 0x625, 0x632, 0x64a, 0x64e

