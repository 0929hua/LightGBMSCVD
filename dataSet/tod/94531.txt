Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x69]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x69
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x69
0xc: JUMPI 0x69 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x5f6]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x1ff38308
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x5f6
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x1ff38308
0x22: V15 = EQ V13 0x1ff38308
0x23: V16 = 0x5f6
0x26: JUMPI 0x5f6 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x625]
---
0x27 DUP1
0x28 PUSH4 0x41c0e1b5
0x2d EQ
0x2e PUSH2 0x625
0x31 JUMPI
---
0x28: V17 = 0x41c0e1b5
0x2d: V18 = EQ 0x41c0e1b5 V13
0x2e: V19 = 0x625
0x31: JUMPI 0x625 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x63a]
---
0x32 DUP1
0x33 PUSH4 0x5600d2fa
0x38 EQ
0x39 PUSH2 0x63a
0x3c JUMPI
---
0x33: V20 = 0x5600d2fa
0x38: V21 = EQ 0x5600d2fa V13
0x39: V22 = 0x63a
0x3c: JUMPI 0x63a V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x66d]
---
0x3d DUP1
0x3e PUSH4 0x68306e43
0x43 EQ
0x44 PUSH2 0x66d
0x47 JUMPI
---
0x3e: V23 = 0x68306e43
0x43: V24 = EQ 0x68306e43 V13
0x44: V25 = 0x66d
0x47: JUMPI 0x66d V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x69e]
---
0x48 DUP1
0x49 PUSH4 0x6a474002
0x4e EQ
0x4f PUSH2 0x69e
0x52 JUMPI
---
0x49: V26 = 0x6a474002
0x4e: V27 = EQ 0x6a474002 V13
0x4f: V28 = 0x69e
0x52: JUMPI 0x69e V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x6b1]
---
0x53 DUP1
0x54 PUSH4 0x8da5cb5b
0x59 EQ
0x5a PUSH2 0x6b1
0x5d JUMPI
---
0x54: V29 = 0x8da5cb5b
0x59: V30 = EQ 0x8da5cb5b V13
0x5a: V31 = 0x6b1
0x5d: JUMPI 0x6b1 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x6c4]
---
0x5e DUP1
0x5f PUSH4 0xa0a8e460
0x64 EQ
0x65 PUSH2 0x6c4
0x68 JUMPI
---
0x5f: V32 = 0xa0a8e460
0x64: V33 = EQ 0xa0a8e460 V13
0x65: V34 = 0x6c4
0x68: JUMPI 0x6c4 V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x75]
---
Predecessors: [0x0, 0x5e]
Successors: [0x76]
---
0x69 JUMPDEST
0x6a PUSH1 0x0
0x6c DUP1
0x6d DUP1
0x6e DUP1
0x6f DUP1
0x70 DUP1
0x71 DUP1
0x72 DUP1
0x73 DUP1
0x74 DUP1
0x75 DUP1
---
0x69: JUMPDEST 
0x6a: V35 = 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V13, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x76
[0x76:0xb0]
---
Predecessors: [0x69, 0x243]
Successors: [0xb1, 0xb5]
---
0x76 JUMPDEST
0x77 PUSH1 0x0
0x79 SLOAD
0x7a PUSH1 0x1
0x7c PUSH1 0xa0
0x7e PUSH1 0x2
0x80 EXP
0x81 SUB
0x82 AND
0x83 PUSH4 0x4787513a
0x88 PUSH1 0x40
0x8a MLOAD
0x8b DUP2
0x8c PUSH4 0xffffffff
0x91 AND
0x92 PUSH1 0xe0
0x94 PUSH1 0x2
0x96 EXP
0x97 MUL
0x98 DUP2
0x99 MSTORE
0x9a PUSH1 0x4
0x9c ADD
0x9d PUSH1 0x20
0x9f PUSH1 0x40
0xa1 MLOAD
0xa2 DUP1
0xa3 DUP4
0xa4 SUB
0xa5 DUP2
0xa6 PUSH1 0x0
0xa8 DUP8
0xa9 DUP1
0xaa EXTCODESIZE
0xab ISZERO
0xac ISZERO
0xad PUSH2 0xb5
0xb0 JUMPI
---
0x76: JUMPDEST 
0x77: V36 = 0x0
0x79: V37 = S[0x0]
0x7a: V38 = 0x1
0x7c: V39 = 0xa0
0x7e: V40 = 0x2
0x80: V41 = EXP 0x2 0xa0
0x81: V42 = SUB 0x10000000000000000000000000000000000000000 0x1
0x82: V43 = AND 0xffffffffffffffffffffffffffffffffffffffff V37
0x83: V44 = 0x4787513a
0x88: V45 = 0x40
0x8a: V46 = M[0x40]
0x8c: V47 = 0xffffffff
0x91: V48 = AND 0xffffffff 0x4787513a
0x92: V49 = 0xe0
0x94: V50 = 0x2
0x96: V51 = EXP 0x2 0xe0
0x97: V52 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x4787513a
0x99: M[V46] = 0x4787513a00000000000000000000000000000000000000000000000000000000
0x9a: V53 = 0x4
0x9c: V54 = ADD 0x4 V46
0x9d: V55 = 0x20
0x9f: V56 = 0x40
0xa1: V57 = M[0x40]
0xa4: V58 = SUB V54 V57
0xa6: V59 = 0x0
0xaa: V60 = EXTCODESIZE V43
0xab: V61 = ISZERO V60
0xac: V62 = ISZERO V61
0xad: V63 = 0xb5
0xb0: JUMPI 0xb5 V62
---
Entry stack: [V13, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [V43, 0x4787513a, V54, 0x20, V57, V58, V57, 0x0, V43]
Exit stack: [V13, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V43, 0x4787513a, V54, 0x20, V57, V58, V57, 0x0, V43]

================================

Block 0xb1
[0xb1:0xb4]
---
Predecessors: [0x76]
Successors: []
---
0xb1 PUSH1 0x0
0xb3 DUP1
0xb4 REVERT
---
0xb1: V64 = 0x0
0xb4: REVERT 0x0 0x0
---
Entry stack: [V13, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V43, 0x4787513a, V54, 0x20, V57, V58, V57, 0x0, V43]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V43, 0x4787513a, V54, 0x20, V57, V58, V57, 0x0, V43]

================================

Block 0xb5
[0xb5:0xbd]
---
Predecessors: [0x76]
Successors: [0xbe, 0xc2]
---
0xb5 JUMPDEST
0xb6 GAS
0xb7 CALL
0xb8 ISZERO
0xb9 ISZERO
0xba PUSH2 0xc2
0xbd JUMPI
---
0xb5: JUMPDEST 
0xb6: V65 = GAS
0xb7: V66 = CALL V65 V43 0x0 V57 V58 V57 0x20
0xb8: V67 = ISZERO V66
0xb9: V68 = ISZERO V67
0xba: V69 = 0xc2
0xbd: JUMPI 0xc2 V68
---
Entry stack: [V13, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V43, 0x4787513a, V54, 0x20, V57, V58, V57, 0x0, V43]
Stack pops: 6
Stack additions: []
Exit stack: [V13, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V43, 0x4787513a, V54]

================================

Block 0xbe
[0xbe:0xc1]
---
Predecessors: [0xb5]
Successors: []
---
0xbe PUSH1 0x0
0xc0 DUP1
0xc1 REVERT
---
0xbe: V70 = 0x0
0xc1: REVERT 0x0 0x0
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V43, 0x4787513a, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V43, 0x4787513a, V54]

================================

Block 0xc2
[0xc2:0xd3]
---
Predecessors: [0xb5]
Successors: [0xd4, 0x24e]
---
0xc2 JUMPDEST
0xc3 POP
0xc4 POP
0xc5 POP
0xc6 PUSH1 0x40
0xc8 MLOAD
0xc9 DUP1
0xca MLOAD
0xcb SWAP1
0xcc POP
0xcd DUP11
0xce LT
0xcf ISZERO
0xd0 PUSH2 0x24e
0xd3 JUMPI
---
0xc2: JUMPDEST 
0xc6: V71 = 0x40
0xc8: V72 = M[0x40]
0xca: V73 = M[V72]
0xce: V74 = LT S12 V73
0xcf: V75 = ISZERO V74
0xd0: V76 = 0x24e
0xd3: JUMPI 0x24e V75
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V43, 0x4787513a, V54]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3]
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3]

================================

Block 0xd4
[0xd4:0x116]
---
Predecessors: [0xc2]
Successors: [0x117, 0x11b]
---
0xd4 PUSH1 0x0
0xd6 SLOAD
0xd7 PUSH1 0x1
0xd9 PUSH1 0xa0
0xdb PUSH1 0x2
0xdd EXP
0xde SUB
0xdf AND
0xe0 PUSH4 0x862a4bf2
0xe5 DUP12
0xe6 PUSH1 0x40
0xe8 MLOAD
0xe9 PUSH1 0xe0
0xeb PUSH1 0x2
0xed EXP
0xee PUSH4 0xffffffff
0xf3 DUP5
0xf4 AND
0xf5 MUL
0xf6 DUP2
0xf7 MSTORE
0xf8 PUSH1 0x4
0xfa DUP2
0xfb ADD
0xfc SWAP2
0xfd SWAP1
0xfe SWAP2
0xff MSTORE
0x100 PUSH1 0x24
0x102 ADD
0x103 PUSH1 0x20
0x105 PUSH1 0x40
0x107 MLOAD
0x108 DUP1
0x109 DUP4
0x10a SUB
0x10b DUP2
0x10c PUSH1 0x0
0x10e DUP8
0x10f DUP1
0x110 EXTCODESIZE
0x111 ISZERO
0x112 ISZERO
0x113 PUSH2 0x11b
0x116 JUMPI
---
0xd4: V77 = 0x0
0xd6: V78 = S[0x0]
0xd7: V79 = 0x1
0xd9: V80 = 0xa0
0xdb: V81 = 0x2
0xdd: V82 = EXP 0x2 0xa0
0xde: V83 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdf: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0xe0: V85 = 0x862a4bf2
0xe6: V86 = 0x40
0xe8: V87 = M[0x40]
0xe9: V88 = 0xe0
0xeb: V89 = 0x2
0xed: V90 = EXP 0x2 0xe0
0xee: V91 = 0xffffffff
0xf4: V92 = AND 0x862a4bf2 0xffffffff
0xf5: V93 = MUL 0x862a4bf2 0x100000000000000000000000000000000000000000000000000000000
0xf7: M[V87] = 0x862a4bf200000000000000000000000000000000000000000000000000000000
0xf8: V94 = 0x4
0xfb: V95 = ADD V87 0x4
0xff: M[V95] = S9
0x100: V96 = 0x24
0x102: V97 = ADD 0x24 V87
0x103: V98 = 0x20
0x105: V99 = 0x40
0x107: V100 = M[0x40]
0x10a: V101 = SUB V97 V100
0x10c: V102 = 0x0
0x110: V103 = EXTCODESIZE V84
0x111: V104 = ISZERO V103
0x112: V105 = ISZERO V104
0x113: V106 = 0x11b
0x116: JUMPI 0x11b V105
---
Entry stack: [V13, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V84, 0x862a4bf2, V97, 0x20, V100, V101, V100, 0x0, V84]
Exit stack: [V13, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V84, 0x862a4bf2, V97, 0x20, V100, V101, V100, 0x0, V84]

================================

Block 0x117
[0x117:0x11a]
---
Predecessors: [0xd4]
Successors: []
---
0x117 PUSH1 0x0
0x119 DUP1
0x11a REVERT
---
0x117: V107 = 0x0
0x11a: REVERT 0x0 0x0
---
Entry stack: [V13, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V84, 0x862a4bf2, V97, 0x20, V100, V101, V100, 0x0, V84]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V84, 0x862a4bf2, V97, 0x20, V100, V101, V100, 0x0, V84]

================================

Block 0x11b
[0x11b:0x123]
---
Predecessors: [0xd4]
Successors: [0x124, 0x128]
---
0x11b JUMPDEST
0x11c GAS
0x11d CALL
0x11e ISZERO
0x11f ISZERO
0x120 PUSH2 0x128
0x123 JUMPI
---
0x11b: JUMPDEST 
0x11c: V108 = GAS
0x11d: V109 = CALL V108 V84 0x0 V100 V101 V100 0x20
0x11e: V110 = ISZERO V109
0x11f: V111 = ISZERO V110
0x120: V112 = 0x128
0x123: JUMPI 0x128 V111
---
Entry stack: [V13, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V84, 0x862a4bf2, V97, 0x20, V100, V101, V100, 0x0, V84]
Stack pops: 6
Stack additions: []
Exit stack: [V13, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V84, 0x862a4bf2, V97]

================================

Block 0x124
[0x124:0x127]
---
Predecessors: [0x11b]
Successors: []
---
0x124 PUSH1 0x0
0x126 DUP1
0x127 REVERT
---
0x124: V113 = 0x0
0x127: REVERT 0x0 0x0
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V84, 0x862a4bf2, V97]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V84, 0x862a4bf2, V97]

================================

Block 0x128
[0x128:0x180]
---
Predecessors: [0x11b]
Successors: [0x181, 0x185]
---
0x128 JUMPDEST
0x129 POP
0x12a POP
0x12b POP
0x12c PUSH1 0x40
0x12e MLOAD
0x12f DUP1
0x130 MLOAD
0x131 PUSH1 0x0
0x133 SLOAD
0x134 SWAP1
0x135 SWAP11
0x136 POP
0x137 PUSH1 0x1
0x139 PUSH1 0xa0
0x13b PUSH1 0x2
0x13d EXP
0x13e SUB
0x13f AND
0x140 SWAP1
0x141 POP
0x142 PUSH4 0xb414d4b6
0x147 DUP11
0x148 PUSH1 0x40
0x14a MLOAD
0x14b PUSH1 0xe0
0x14d PUSH1 0x2
0x14f EXP
0x150 PUSH4 0xffffffff
0x155 DUP5
0x156 AND
0x157 MUL
0x158 DUP2
0x159 MSTORE
0x15a PUSH1 0x1
0x15c PUSH1 0xa0
0x15e PUSH1 0x2
0x160 EXP
0x161 SUB
0x162 SWAP1
0x163 SWAP2
0x164 AND
0x165 PUSH1 0x4
0x167 DUP3
0x168 ADD
0x169 MSTORE
0x16a PUSH1 0x24
0x16c ADD
0x16d PUSH1 0x20
0x16f PUSH1 0x40
0x171 MLOAD
0x172 DUP1
0x173 DUP4
0x174 SUB
0x175 DUP2
0x176 PUSH1 0x0
0x178 DUP8
0x179 DUP1
0x17a EXTCODESIZE
0x17b ISZERO
0x17c ISZERO
0x17d PUSH2 0x185
0x180 JUMPI
---
0x128: JUMPDEST 
0x12c: V114 = 0x40
0x12e: V115 = M[0x40]
0x130: V116 = M[V115]
0x131: V117 = 0x0
0x133: V118 = S[0x0]
0x137: V119 = 0x1
0x139: V120 = 0xa0
0x13b: V121 = 0x2
0x13d: V122 = EXP 0x2 0xa0
0x13e: V123 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13f: V124 = AND 0xffffffffffffffffffffffffffffffffffffffff V118
0x142: V125 = 0xb414d4b6
0x148: V126 = 0x40
0x14a: V127 = M[0x40]
0x14b: V128 = 0xe0
0x14d: V129 = 0x2
0x14f: V130 = EXP 0x2 0xe0
0x150: V131 = 0xffffffff
0x156: V132 = AND 0xb414d4b6 0xffffffff
0x157: V133 = MUL 0xb414d4b6 0x100000000000000000000000000000000000000000000000000000000
0x159: M[V127] = 0xb414d4b600000000000000000000000000000000000000000000000000000000
0x15a: V134 = 0x1
0x15c: V135 = 0xa0
0x15e: V136 = 0x2
0x160: V137 = EXP 0x2 0xa0
0x161: V138 = SUB 0x10000000000000000000000000000000000000000 0x1
0x164: V139 = AND V116 0xffffffffffffffffffffffffffffffffffffffff
0x165: V140 = 0x4
0x168: V141 = ADD V127 0x4
0x169: M[V141] = V139
0x16a: V142 = 0x24
0x16c: V143 = ADD 0x24 V127
0x16d: V144 = 0x20
0x16f: V145 = 0x40
0x171: V146 = M[0x40]
0x174: V147 = SUB V143 V146
0x176: V148 = 0x0
0x17a: V149 = EXTCODESIZE V124
0x17b: V150 = ISZERO V149
0x17c: V151 = ISZERO V150
0x17d: V152 = 0x185
0x180: JUMPI 0x185 V151
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V84, 0x862a4bf2, V97]
Stack pops: 12
Stack additions: [V116, S10, S9, S8, S7, S6, S5, S4, S3, V124, 0xb414d4b6, V143, 0x20, V146, V147, V146, 0x0, V124]
Exit stack: [V13, S13, S12, V116, S10, S9, S8, S7, S6, S5, S4, S3, V124, 0xb414d4b6, V143, 0x20, V146, V147, V146, 0x0, V124]

================================

Block 0x181
[0x181:0x184]
---
Predecessors: [0x128]
Successors: []
---
0x181 PUSH1 0x0
0x183 DUP1
0x184 REVERT
---
0x181: V153 = 0x0
0x184: REVERT 0x0 0x0
---
Entry stack: [V13, S19, S18, V116, S16, S15, S14, S13, S12, S11, S10, S9, V124, 0xb414d4b6, V143, 0x20, V146, V147, V146, 0x0, V124]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S19, S18, V116, S16, S15, S14, S13, S12, S11, S10, S9, V124, 0xb414d4b6, V143, 0x20, V146, V147, V146, 0x0, V124]

================================

Block 0x185
[0x185:0x18d]
---
Predecessors: [0x128]
Successors: [0x18e, 0x192]
---
0x185 JUMPDEST
0x186 GAS
0x187 CALL
0x188 ISZERO
0x189 ISZERO
0x18a PUSH2 0x192
0x18d JUMPI
---
0x185: JUMPDEST 
0x186: V154 = GAS
0x187: V155 = CALL V154 V124 0x0 V146 V147 V146 0x20
0x188: V156 = ISZERO V155
0x189: V157 = ISZERO V156
0x18a: V158 = 0x192
0x18d: JUMPI 0x192 V157
---
Entry stack: [V13, S19, S18, V116, S16, S15, S14, S13, S12, S11, S10, S9, V124, 0xb414d4b6, V143, 0x20, V146, V147, V146, 0x0, V124]
Stack pops: 6
Stack additions: []
Exit stack: [V13, S19, S18, V116, S16, S15, S14, S13, S12, S11, S10, S9, V124, 0xb414d4b6, V143]

================================

Block 0x18e
[0x18e:0x191]
---
Predecessors: [0x185]
Successors: []
---
0x18e PUSH1 0x0
0x190 DUP1
0x191 REVERT
---
0x18e: V159 = 0x0
0x191: REVERT 0x0 0x0
---
Entry stack: [V13, S13, S12, V116, S10, S9, S8, S7, S6, S5, S4, S3, V124, 0xb414d4b6, V143]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S13, S12, V116, S10, S9, S8, S7, S6, S5, S4, S3, V124, 0xb414d4b6, V143]

================================

Block 0x192
[0x192:0x1a5]
---
Predecessors: [0x185]
Successors: [0x1a6, 0x1c4]
---
0x192 JUMPDEST
0x193 POP
0x194 POP
0x195 POP
0x196 PUSH1 0x40
0x198 MLOAD
0x199 DUP1
0x19a MLOAD
0x19b SWAP9
0x19c POP
0x19d POP
0x19e DUP8
0x19f ISZERO
0x1a0 DUP1
0x1a1 ISZERO
0x1a2 PUSH2 0x1c4
0x1a5 JUMPI
---
0x192: JUMPDEST 
0x196: V160 = 0x40
0x198: V161 = M[0x40]
0x19a: V162 = M[V161]
0x19f: V163 = ISZERO V162
0x1a1: V164 = ISZERO V163
0x1a2: V165 = 0x1c4
0x1a5: JUMPI 0x1c4 V164
---
Entry stack: [V13, S13, S12, V116, S10, S9, S8, S7, S6, S5, S4, S3, V124, 0xb414d4b6, V143]
Stack pops: 11
Stack additions: [V162, S9, S8, S7, S6, S5, S4, S3, V163]
Exit stack: [V13, S13, S12, V116, V162, S9, S8, S7, S6, S5, S4, S3, V163]

================================

Block 0x1a6
[0x1a6:0x1c3]
---
Predecessors: [0x192]
Successors: [0x1c4]
---
0x1a6 POP
0x1a7 PUSH1 0x1
0x1a9 PUSH1 0xa0
0x1ab PUSH1 0x2
0x1ad EXP
0x1ae SUB
0x1af DUP10
0x1b0 AND
0x1b1 PUSH1 0x0
0x1b3 SWAP1
0x1b4 DUP2
0x1b5 MSTORE
0x1b6 PUSH1 0x3
0x1b8 PUSH1 0x20
0x1ba MSTORE
0x1bb PUSH1 0x40
0x1bd SWAP1
0x1be SHA3
0x1bf SLOAD
0x1c0 PUSH1 0xff
0x1c2 AND
0x1c3 ISZERO
---
0x1a7: V166 = 0x1
0x1a9: V167 = 0xa0
0x1ab: V168 = 0x2
0x1ad: V169 = EXP 0x2 0xa0
0x1ae: V170 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b0: V171 = AND V116 0xffffffffffffffffffffffffffffffffffffffff
0x1b1: V172 = 0x0
0x1b5: M[0x0] = V171
0x1b6: V173 = 0x3
0x1b8: V174 = 0x20
0x1ba: M[0x20] = 0x3
0x1bb: V175 = 0x40
0x1be: V176 = SHA3 0x0 0x40
0x1bf: V177 = S[V176]
0x1c0: V178 = 0xff
0x1c2: V179 = AND 0xff V177
0x1c3: V180 = ISZERO V179
---
Entry stack: [V13, S11, S10, V116, V162, S7, S6, S5, S4, S3, S2, S1, V163]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, S1, V180]
Exit stack: [V13, S11, S10, V116, V162, S7, S6, S5, S4, S3, S2, S1, V180]

================================

Block 0x1c4
[0x1c4:0x1c9]
---
Predecessors: [0x192, 0x1a6]
Successors: [0x1ca, 0x243]
---
0x1c4 JUMPDEST
0x1c5 ISZERO
0x1c6 PUSH2 0x243
0x1c9 JUMPI
---
0x1c4: JUMPDEST 
0x1c5: V181 = ISZERO S0
0x1c6: V182 = 0x243
0x1c9: JUMPI 0x243 V181
---
Entry stack: [V13, S11, S10, V116, V162, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S11, S10, V116, V162, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x1ca
[0x1ca:0x218]
---
Predecessors: [0x1c4]
Successors: [0x219, 0x21d]
---
0x1ca PUSH1 0x0
0x1cc SLOAD
0x1cd PUSH2 0x240
0x1d0 SWAP1
0x1d1 PUSH1 0x1
0x1d3 PUSH1 0xa0
0x1d5 PUSH1 0x2
0x1d7 EXP
0x1d8 SUB
0x1d9 AND
0x1da PUSH4 0x70a08231
0x1df DUP12
0x1e0 PUSH1 0x40
0x1e2 MLOAD
0x1e3 PUSH1 0xe0
0x1e5 PUSH1 0x2
0x1e7 EXP
0x1e8 PUSH4 0xffffffff
0x1ed DUP5
0x1ee AND
0x1ef MUL
0x1f0 DUP2
0x1f1 MSTORE
0x1f2 PUSH1 0x1
0x1f4 PUSH1 0xa0
0x1f6 PUSH1 0x2
0x1f8 EXP
0x1f9 SUB
0x1fa SWAP1
0x1fb SWAP2
0x1fc AND
0x1fd PUSH1 0x4
0x1ff DUP3
0x200 ADD
0x201 MSTORE
0x202 PUSH1 0x24
0x204 ADD
0x205 PUSH1 0x20
0x207 PUSH1 0x40
0x209 MLOAD
0x20a DUP1
0x20b DUP4
0x20c SUB
0x20d DUP2
0x20e PUSH1 0x0
0x210 DUP8
0x211 DUP1
0x212 EXTCODESIZE
0x213 ISZERO
0x214 ISZERO
0x215 PUSH2 0x21d
0x218 JUMPI
---
0x1ca: V183 = 0x0
0x1cc: V184 = S[0x0]
0x1cd: V185 = 0x240
0x1d1: V186 = 0x1
0x1d3: V187 = 0xa0
0x1d5: V188 = 0x2
0x1d7: V189 = EXP 0x2 0xa0
0x1d8: V190 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d9: V191 = AND 0xffffffffffffffffffffffffffffffffffffffff V184
0x1da: V192 = 0x70a08231
0x1e0: V193 = 0x40
0x1e2: V194 = M[0x40]
0x1e3: V195 = 0xe0
0x1e5: V196 = 0x2
0x1e7: V197 = EXP 0x2 0xe0
0x1e8: V198 = 0xffffffff
0x1ee: V199 = AND 0x70a08231 0xffffffff
0x1ef: V200 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x1f1: M[V194] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x1f2: V201 = 0x1
0x1f4: V202 = 0xa0
0x1f6: V203 = 0x2
0x1f8: V204 = EXP 0x2 0xa0
0x1f9: V205 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1fc: V206 = AND V116 0xffffffffffffffffffffffffffffffffffffffff
0x1fd: V207 = 0x4
0x200: V208 = ADD V194 0x4
0x201: M[V208] = V206
0x202: V209 = 0x24
0x204: V210 = ADD 0x24 V194
0x205: V211 = 0x20
0x207: V212 = 0x40
0x209: V213 = M[0x40]
0x20c: V214 = SUB V210 V213
0x20e: V215 = 0x0
0x212: V216 = EXTCODESIZE V191
0x213: V217 = ISZERO V216
0x214: V218 = ISZERO V217
0x215: V219 = 0x21d
0x218: JUMPI 0x21d V218
---
Entry stack: [V13, S10, S9, V116, V162, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x240, V191, 0x70a08231, V210, 0x20, V213, V214, V213, 0x0, V191]
Exit stack: [V13, S10, S9, V116, V162, S6, S5, S4, S3, S2, S1, S0, 0x240, V191, 0x70a08231, V210, 0x20, V213, V214, V213, 0x0, V191]

================================

Block 0x219
[0x219:0x21c]
---
Predecessors: [0x1ca]
Successors: []
---
0x219 PUSH1 0x0
0x21b DUP1
0x21c REVERT
---
0x219: V220 = 0x0
0x21c: REVERT 0x0 0x0
---
Entry stack: [V13, S20, S19, V116, V162, S16, S15, S14, S13, S12, S11, S10, 0x240, V191, 0x70a08231, V210, 0x20, V213, V214, V213, 0x0, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S20, S19, V116, V162, S16, S15, S14, S13, S12, S11, S10, 0x240, V191, 0x70a08231, V210, 0x20, V213, V214, V213, 0x0, V191]

================================

Block 0x21d
[0x21d:0x225]
---
Predecessors: [0x1ca]
Successors: [0x226, 0x22a]
---
0x21d JUMPDEST
0x21e GAS
0x21f CALL
0x220 ISZERO
0x221 ISZERO
0x222 PUSH2 0x22a
0x225 JUMPI
---
0x21d: JUMPDEST 
0x21e: V221 = GAS
0x21f: V222 = CALL V221 V191 0x0 V213 V214 V213 0x20
0x220: V223 = ISZERO V222
0x221: V224 = ISZERO V223
0x222: V225 = 0x22a
0x225: JUMPI 0x22a V224
---
Entry stack: [V13, S20, S19, V116, V162, S16, S15, S14, S13, S12, S11, S10, 0x240, V191, 0x70a08231, V210, 0x20, V213, V214, V213, 0x0, V191]
Stack pops: 6
Stack additions: []
Exit stack: [V13, S20, S19, V116, V162, S16, S15, S14, S13, S12, S11, S10, 0x240, V191, 0x70a08231, V210]

================================

Block 0x226
[0x226:0x229]
---
Predecessors: [0x21d]
Successors: []
---
0x226 PUSH1 0x0
0x228 DUP1
0x229 REVERT
---
0x226: V226 = 0x0
0x229: REVERT 0x0 0x0
---
Entry stack: [V13, S14, S13, V116, V162, S10, S9, S8, S7, S6, S5, S4, 0x240, V191, 0x70a08231, V210]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S14, S13, V116, V162, S10, S9, S8, S7, S6, S5, S4, 0x240, V191, 0x70a08231, V210]

================================

Block 0x22a
[0x22a:0x23f]
---
Predecessors: [0x21d]
Successors: [0x6d7]
---
0x22a JUMPDEST
0x22b POP
0x22c POP
0x22d POP
0x22e PUSH1 0x40
0x230 MLOAD
0x231 DUP1
0x232 MLOAD
0x233 DUP14
0x234 SWAP2
0x235 POP
0x236 PUSH4 0xffffffff
0x23b PUSH2 0x6d7
0x23e AND
0x23f JUMP
---
0x22a: JUMPDEST 
0x22e: V227 = 0x40
0x230: V228 = M[0x40]
0x232: V229 = M[V228]
0x236: V230 = 0xffffffff
0x23b: V231 = 0x6d7
0x23e: V232 = AND 0x6d7 0xffffffff
0x23f: JUMP 0x6d7
---
Entry stack: [V13, S14, S13, V116, V162, S10, S9, S8, S7, S6, S5, S4, 0x240, V191, 0x70a08231, V210]
Stack pops: 15
Stack additions: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S14, V229]
Exit stack: [V13, S14, S13, V116, V162, S10, S9, S8, S7, S6, S5, S4, 0x240, S14, V229]

================================

Block 0x240
[0x240:0x242]
---
Predecessors: [0x6e6]
Successors: [0x243]
---
0x240 JUMPDEST
0x241 SWAP11
0x242 POP
---
0x240: JUMPDEST 
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 12
Stack additions: [S0, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]
Exit stack: [V13, S0, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x243
[0x243:0x24d]
---
Predecessors: [0x1c4, 0x240]
Successors: [0x76]
---
0x243 JUMPDEST
0x244 PUSH1 0x1
0x246 SWAP1
0x247 SWAP10
0x248 ADD
0x249 SWAP9
0x24a PUSH2 0x76
0x24d JUMP
---
0x243: JUMPDEST 
0x244: V233 = 0x1
0x248: V234 = ADD S9 0x1
0x24a: V235 = 0x76
0x24d: JUMP 0x76
---
Entry stack: [V13, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 10
Stack additions: [V234, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V13, S10, V234, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x24e
[0x24e:0x257]
---
Predecessors: [0xc2]
Successors: [0x258, 0x259]
---
0x24e JUMPDEST
0x24f DUP11
0x250 CALLVALUE
0x251 DUP2
0x252 ISZERO
0x253 ISZERO
0x254 PUSH2 0x259
0x257 JUMPI
---
0x24e: JUMPDEST 
0x250: V236 = CALLVALUE
0x252: V237 = ISZERO S10
0x253: V238 = ISZERO V237
0x254: V239 = 0x259
0x257: JUMPI 0x259 V238
---
Entry stack: [V13, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, S10, V236]
Exit stack: [V13, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, S10, V236]

================================

Block 0x258
[0x258:0x258]
---
Predecessors: [0x24e]
Successors: []
---
0x258 INVALID
---
0x258: INVALID 
---
Entry stack: [V13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V236]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V236]

================================

Block 0x259
[0x259:0x263]
---
Predecessors: [0x24e]
Successors: [0x264, 0x268]
---
0x259 JUMPDEST
0x25a DIV
0x25b SWAP7
0x25c POP
0x25d DUP7
0x25e ISZERO
0x25f ISZERO
0x260 PUSH2 0x268
0x263 JUMPI
---
0x259: JUMPDEST 
0x25a: V240 = DIV V236 S1
0x25e: V241 = ISZERO V240
0x25f: V242 = ISZERO V241
0x260: V243 = 0x268
0x263: JUMPI 0x268 V242
---
Entry stack: [V13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V236]
Stack pops: 9
Stack additions: [V240, S7, S6, S5, S4, S3, S2]
Exit stack: [V13, S12, S11, S10, S9, V240, S7, S6, S5, S4, S3, S2]

================================

Block 0x264
[0x264:0x267]
---
Predecessors: [0x259]
Successors: []
---
0x264 PUSH1 0x0
0x266 DUP1
0x267 REVERT
---
0x264: V244 = 0x0
0x267: REVERT 0x0 0x0
---
Entry stack: [V13, S10, S9, S8, S7, V240, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S10, S9, S8, S7, V240, S5, S4, S3, S2, S1, S0]

================================

Block 0x268
[0x268:0x270]
---
Predecessors: [0x259]
Successors: [0x271]
---
0x268 JUMPDEST
0x269 PUSH1 0x0
0x26b SWAP6
0x26c POP
0x26d PUSH1 0x0
0x26f SWAP5
0x270 POP
---
0x268: JUMPDEST 
0x269: V245 = 0x0
0x26d: V246 = 0x0
---
Entry stack: [V13, S10, S9, S8, S7, V240, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [0x0, 0x0, S3, S2, S1, S0]
Exit stack: [V13, S10, S9, S8, S7, V240, 0x0, 0x0, S3, S2, S1, S0]

================================

Block 0x271
[0x271:0x2ab]
---
Predecessors: [0x268, 0x4ce]
Successors: [0x2ac, 0x2b0]
---
0x271 JUMPDEST
0x272 PUSH1 0x0
0x274 SLOAD
0x275 PUSH1 0x1
0x277 PUSH1 0xa0
0x279 PUSH1 0x2
0x27b EXP
0x27c SUB
0x27d AND
0x27e PUSH4 0x4787513a
0x283 PUSH1 0x40
0x285 MLOAD
0x286 DUP2
0x287 PUSH4 0xffffffff
0x28c AND
0x28d PUSH1 0xe0
0x28f PUSH1 0x2
0x291 EXP
0x292 MUL
0x293 DUP2
0x294 MSTORE
0x295 PUSH1 0x4
0x297 ADD
0x298 PUSH1 0x20
0x29a PUSH1 0x40
0x29c MLOAD
0x29d DUP1
0x29e DUP4
0x29f SUB
0x2a0 DUP2
0x2a1 PUSH1 0x0
0x2a3 DUP8
0x2a4 DUP1
0x2a5 EXTCODESIZE
0x2a6 ISZERO
0x2a7 ISZERO
0x2a8 PUSH2 0x2b0
0x2ab JUMPI
---
0x271: JUMPDEST 
0x272: V247 = 0x0
0x274: V248 = S[0x0]
0x275: V249 = 0x1
0x277: V250 = 0xa0
0x279: V251 = 0x2
0x27b: V252 = EXP 0x2 0xa0
0x27c: V253 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27d: V254 = AND 0xffffffffffffffffffffffffffffffffffffffff V248
0x27e: V255 = 0x4787513a
0x283: V256 = 0x40
0x285: V257 = M[0x40]
0x287: V258 = 0xffffffff
0x28c: V259 = AND 0xffffffff 0x4787513a
0x28d: V260 = 0xe0
0x28f: V261 = 0x2
0x291: V262 = EXP 0x2 0xe0
0x292: V263 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x4787513a
0x294: M[V257] = 0x4787513a00000000000000000000000000000000000000000000000000000000
0x295: V264 = 0x4
0x297: V265 = ADD 0x4 V257
0x298: V266 = 0x20
0x29a: V267 = 0x40
0x29c: V268 = M[0x40]
0x29f: V269 = SUB V265 V268
0x2a1: V270 = 0x0
0x2a5: V271 = EXTCODESIZE V254
0x2a6: V272 = ISZERO V271
0x2a7: V273 = ISZERO V272
0x2a8: V274 = 0x2b0
0x2ab: JUMPI 0x2b0 V273
---
Entry stack: [V13, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [V254, 0x4787513a, V265, 0x20, V268, V269, V268, 0x0, V254]
Exit stack: [V13, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V254, 0x4787513a, V265, 0x20, V268, V269, V268, 0x0, V254]

================================

Block 0x2ac
[0x2ac:0x2af]
---
Predecessors: [0x271]
Successors: []
---
0x2ac PUSH1 0x0
0x2ae DUP1
0x2af REVERT
---
0x2ac: V275 = 0x0
0x2af: REVERT 0x0 0x0
---
Entry stack: [V13, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V254, 0x4787513a, V265, 0x20, V268, V269, V268, 0x0, V254]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V254, 0x4787513a, V265, 0x20, V268, V269, V268, 0x0, V254]

================================

Block 0x2b0
[0x2b0:0x2b8]
---
Predecessors: [0x271]
Successors: [0x2b9, 0x2bd]
---
0x2b0 JUMPDEST
0x2b1 GAS
0x2b2 CALL
0x2b3 ISZERO
0x2b4 ISZERO
0x2b5 PUSH2 0x2bd
0x2b8 JUMPI
---
0x2b0: JUMPDEST 
0x2b1: V276 = GAS
0x2b2: V277 = CALL V276 V254 0x0 V268 V269 V268 0x20
0x2b3: V278 = ISZERO V277
0x2b4: V279 = ISZERO V278
0x2b5: V280 = 0x2bd
0x2b8: JUMPI 0x2bd V279
---
Entry stack: [V13, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V254, 0x4787513a, V265, 0x20, V268, V269, V268, 0x0, V254]
Stack pops: 6
Stack additions: []
Exit stack: [V13, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V254, 0x4787513a, V265]

================================

Block 0x2b9
[0x2b9:0x2bc]
---
Predecessors: [0x2b0]
Successors: []
---
0x2b9 PUSH1 0x0
0x2bb DUP1
0x2bc REVERT
---
0x2b9: V281 = 0x0
0x2bc: REVERT 0x0 0x0
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V254, 0x4787513a, V265]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V254, 0x4787513a, V265]

================================

Block 0x2bd
[0x2bd:0x2ce]
---
Predecessors: [0x2b0]
Successors: [0x2cf, 0x4d9]
---
0x2bd JUMPDEST
0x2be POP
0x2bf POP
0x2c0 POP
0x2c1 PUSH1 0x40
0x2c3 MLOAD
0x2c4 DUP1
0x2c5 MLOAD
0x2c6 SWAP1
0x2c7 POP
0x2c8 DUP6
0x2c9 LT
0x2ca ISZERO
0x2cb PUSH2 0x4d9
0x2ce JUMPI
---
0x2bd: JUMPDEST 
0x2c1: V282 = 0x40
0x2c3: V283 = M[0x40]
0x2c5: V284 = M[V283]
0x2c9: V285 = LT S7 V284
0x2ca: V286 = ISZERO V285
0x2cb: V287 = 0x4d9
0x2ce: JUMPI 0x4d9 V286
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V254, 0x4787513a, V265]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3]
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3]

================================

Block 0x2cf
[0x2cf:0x311]
---
Predecessors: [0x2bd]
Successors: [0x312, 0x316]
---
0x2cf PUSH1 0x0
0x2d1 SLOAD
0x2d2 PUSH1 0x1
0x2d4 PUSH1 0xa0
0x2d6 PUSH1 0x2
0x2d8 EXP
0x2d9 SUB
0x2da AND
0x2db PUSH4 0x862a4bf2
0x2e0 DUP7
0x2e1 PUSH1 0x40
0x2e3 MLOAD
0x2e4 PUSH1 0xe0
0x2e6 PUSH1 0x2
0x2e8 EXP
0x2e9 PUSH4 0xffffffff
0x2ee DUP5
0x2ef AND
0x2f0 MUL
0x2f1 DUP2
0x2f2 MSTORE
0x2f3 PUSH1 0x4
0x2f5 DUP2
0x2f6 ADD
0x2f7 SWAP2
0x2f8 SWAP1
0x2f9 SWAP2
0x2fa MSTORE
0x2fb PUSH1 0x24
0x2fd ADD
0x2fe PUSH1 0x20
0x300 PUSH1 0x40
0x302 MLOAD
0x303 DUP1
0x304 DUP4
0x305 SUB
0x306 DUP2
0x307 PUSH1 0x0
0x309 DUP8
0x30a DUP1
0x30b EXTCODESIZE
0x30c ISZERO
0x30d ISZERO
0x30e PUSH2 0x316
0x311 JUMPI
---
0x2cf: V288 = 0x0
0x2d1: V289 = S[0x0]
0x2d2: V290 = 0x1
0x2d4: V291 = 0xa0
0x2d6: V292 = 0x2
0x2d8: V293 = EXP 0x2 0xa0
0x2d9: V294 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2da: V295 = AND 0xffffffffffffffffffffffffffffffffffffffff V289
0x2db: V296 = 0x862a4bf2
0x2e1: V297 = 0x40
0x2e3: V298 = M[0x40]
0x2e4: V299 = 0xe0
0x2e6: V300 = 0x2
0x2e8: V301 = EXP 0x2 0xe0
0x2e9: V302 = 0xffffffff
0x2ef: V303 = AND 0x862a4bf2 0xffffffff
0x2f0: V304 = MUL 0x862a4bf2 0x100000000000000000000000000000000000000000000000000000000
0x2f2: M[V298] = 0x862a4bf200000000000000000000000000000000000000000000000000000000
0x2f3: V305 = 0x4
0x2f6: V306 = ADD V298 0x4
0x2fa: M[V306] = S4
0x2fb: V307 = 0x24
0x2fd: V308 = ADD 0x24 V298
0x2fe: V309 = 0x20
0x300: V310 = 0x40
0x302: V311 = M[0x40]
0x305: V312 = SUB V308 V311
0x307: V313 = 0x0
0x30b: V314 = EXTCODESIZE V295
0x30c: V315 = ISZERO V314
0x30d: V316 = ISZERO V315
0x30e: V317 = 0x316
0x311: JUMPI 0x316 V316
---
Entry stack: [V13, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V295, 0x862a4bf2, V308, 0x20, V311, V312, V311, 0x0, V295]
Exit stack: [V13, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V295, 0x862a4bf2, V308, 0x20, V311, V312, V311, 0x0, V295]

================================

Block 0x312
[0x312:0x315]
---
Predecessors: [0x2cf]
Successors: []
---
0x312 PUSH1 0x0
0x314 DUP1
0x315 REVERT
---
0x312: V318 = 0x0
0x315: REVERT 0x0 0x0
---
Entry stack: [V13, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V295, 0x862a4bf2, V308, 0x20, V311, V312, V311, 0x0, V295]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V295, 0x862a4bf2, V308, 0x20, V311, V312, V311, 0x0, V295]

================================

Block 0x316
[0x316:0x31e]
---
Predecessors: [0x2cf]
Successors: [0x31f, 0x323]
---
0x316 JUMPDEST
0x317 GAS
0x318 CALL
0x319 ISZERO
0x31a ISZERO
0x31b PUSH2 0x323
0x31e JUMPI
---
0x316: JUMPDEST 
0x317: V319 = GAS
0x318: V320 = CALL V319 V295 0x0 V311 V312 V311 0x20
0x319: V321 = ISZERO V320
0x31a: V322 = ISZERO V321
0x31b: V323 = 0x323
0x31e: JUMPI 0x323 V322
---
Entry stack: [V13, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V295, 0x862a4bf2, V308, 0x20, V311, V312, V311, 0x0, V295]
Stack pops: 6
Stack additions: []
Exit stack: [V13, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V295, 0x862a4bf2, V308]

================================

Block 0x31f
[0x31f:0x322]
---
Predecessors: [0x316]
Successors: []
---
0x31f PUSH1 0x0
0x321 DUP1
0x322 REVERT
---
0x31f: V324 = 0x0
0x322: REVERT 0x0 0x0
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V295, 0x862a4bf2, V308]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V295, 0x862a4bf2, V308]

================================

Block 0x323
[0x323:0x37b]
---
Predecessors: [0x316]
Successors: [0x37c, 0x380]
---
0x323 JUMPDEST
0x324 POP
0x325 POP
0x326 POP
0x327 PUSH1 0x40
0x329 MLOAD
0x32a DUP1
0x32b MLOAD
0x32c PUSH1 0x0
0x32e SLOAD
0x32f SWAP1
0x330 SWAP6
0x331 POP
0x332 PUSH1 0x1
0x334 PUSH1 0xa0
0x336 PUSH1 0x2
0x338 EXP
0x339 SUB
0x33a AND
0x33b SWAP1
0x33c POP
0x33d PUSH4 0xb414d4b6
0x342 DUP11
0x343 PUSH1 0x40
0x345 MLOAD
0x346 PUSH1 0xe0
0x348 PUSH1 0x2
0x34a EXP
0x34b PUSH4 0xffffffff
0x350 DUP5
0x351 AND
0x352 MUL
0x353 DUP2
0x354 MSTORE
0x355 PUSH1 0x1
0x357 PUSH1 0xa0
0x359 PUSH1 0x2
0x35b EXP
0x35c SUB
0x35d SWAP1
0x35e SWAP2
0x35f AND
0x360 PUSH1 0x4
0x362 DUP3
0x363 ADD
0x364 MSTORE
0x365 PUSH1 0x24
0x367 ADD
0x368 PUSH1 0x20
0x36a PUSH1 0x40
0x36c MLOAD
0x36d DUP1
0x36e DUP4
0x36f SUB
0x370 DUP2
0x371 PUSH1 0x0
0x373 DUP8
0x374 DUP1
0x375 EXTCODESIZE
0x376 ISZERO
0x377 ISZERO
0x378 PUSH2 0x380
0x37b JUMPI
---
0x323: JUMPDEST 
0x327: V325 = 0x40
0x329: V326 = M[0x40]
0x32b: V327 = M[V326]
0x32c: V328 = 0x0
0x32e: V329 = S[0x0]
0x332: V330 = 0x1
0x334: V331 = 0xa0
0x336: V332 = 0x2
0x338: V333 = EXP 0x2 0xa0
0x339: V334 = SUB 0x10000000000000000000000000000000000000000 0x1
0x33a: V335 = AND 0xffffffffffffffffffffffffffffffffffffffff V329
0x33d: V336 = 0xb414d4b6
0x343: V337 = 0x40
0x345: V338 = M[0x40]
0x346: V339 = 0xe0
0x348: V340 = 0x2
0x34a: V341 = EXP 0x2 0xe0
0x34b: V342 = 0xffffffff
0x351: V343 = AND 0xb414d4b6 0xffffffff
0x352: V344 = MUL 0xb414d4b6 0x100000000000000000000000000000000000000000000000000000000
0x354: M[V338] = 0xb414d4b600000000000000000000000000000000000000000000000000000000
0x355: V345 = 0x1
0x357: V346 = 0xa0
0x359: V347 = 0x2
0x35b: V348 = EXP 0x2 0xa0
0x35c: V349 = SUB 0x10000000000000000000000000000000000000000 0x1
0x35f: V350 = AND S11 0xffffffffffffffffffffffffffffffffffffffff
0x360: V351 = 0x4
0x363: V352 = ADD V338 0x4
0x364: M[V352] = V350
0x365: V353 = 0x24
0x367: V354 = ADD 0x24 V338
0x368: V355 = 0x20
0x36a: V356 = 0x40
0x36c: V357 = M[0x40]
0x36f: V358 = SUB V354 V357
0x371: V359 = 0x0
0x375: V360 = EXTCODESIZE V335
0x376: V361 = ISZERO V360
0x377: V362 = ISZERO V361
0x378: V363 = 0x380
0x37b: JUMPI 0x380 V362
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V295, 0x862a4bf2, V308]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, V327, S5, S4, S3, V335, 0xb414d4b6, V354, 0x20, V357, V358, V357, 0x0, V335]
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, V327, S5, S4, S3, V335, 0xb414d4b6, V354, 0x20, V357, V358, V357, 0x0, V335]

================================

Block 0x37c
[0x37c:0x37f]
---
Predecessors: [0x323]
Successors: []
---
0x37c PUSH1 0x0
0x37e DUP1
0x37f REVERT
---
0x37c: V364 = 0x0
0x37f: REVERT 0x0 0x0
---
Entry stack: [V13, S19, S18, S17, S16, S15, S14, S13, V327, S11, S10, S9, V335, 0xb414d4b6, V354, 0x20, V357, V358, V357, 0x0, V335]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S19, S18, S17, S16, S15, S14, S13, V327, S11, S10, S9, V335, 0xb414d4b6, V354, 0x20, V357, V358, V357, 0x0, V335]

================================

Block 0x380
[0x380:0x388]
---
Predecessors: [0x323]
Successors: [0x389, 0x38d]
---
0x380 JUMPDEST
0x381 GAS
0x382 CALL
0x383 ISZERO
0x384 ISZERO
0x385 PUSH2 0x38d
0x388 JUMPI
---
0x380: JUMPDEST 
0x381: V365 = GAS
0x382: V366 = CALL V365 V335 0x0 V357 V358 V357 0x20
0x383: V367 = ISZERO V366
0x384: V368 = ISZERO V367
0x385: V369 = 0x38d
0x388: JUMPI 0x38d V368
---
Entry stack: [V13, S19, S18, S17, S16, S15, S14, S13, V327, S11, S10, S9, V335, 0xb414d4b6, V354, 0x20, V357, V358, V357, 0x0, V335]
Stack pops: 6
Stack additions: []
Exit stack: [V13, S19, S18, S17, S16, S15, S14, S13, V327, S11, S10, S9, V335, 0xb414d4b6, V354]

================================

Block 0x389
[0x389:0x38c]
---
Predecessors: [0x380]
Successors: []
---
0x389 PUSH1 0x0
0x38b DUP1
0x38c REVERT
---
0x389: V370 = 0x0
0x38c: REVERT 0x0 0x0
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, V327, S5, S4, S3, V335, 0xb414d4b6, V354]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, V327, S5, S4, S3, V335, 0xb414d4b6, V354]

================================

Block 0x38d
[0x38d:0x3a0]
---
Predecessors: [0x380]
Successors: [0x3a1, 0x3bf]
---
0x38d JUMPDEST
0x38e POP
0x38f POP
0x390 POP
0x391 PUSH1 0x40
0x393 MLOAD
0x394 DUP1
0x395 MLOAD
0x396 SWAP4
0x397 POP
0x398 POP
0x399 DUP3
0x39a ISZERO
0x39b DUP1
0x39c ISZERO
0x39d PUSH2 0x3bf
0x3a0 JUMPI
---
0x38d: JUMPDEST 
0x391: V371 = 0x40
0x393: V372 = M[0x40]
0x395: V373 = M[V372]
0x39a: V374 = ISZERO V373
0x39c: V375 = ISZERO V374
0x39d: V376 = 0x3bf
0x3a0: JUMPI 0x3bf V375
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, V327, S5, S4, S3, V335, 0xb414d4b6, V354]
Stack pops: 6
Stack additions: [V373, S4, S3, V374]
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, V327, V373, S4, S3, V374]

================================

Block 0x3a1
[0x3a1:0x3be]
---
Predecessors: [0x38d]
Successors: [0x3bf]
---
0x3a1 POP
0x3a2 PUSH1 0x1
0x3a4 PUSH1 0xa0
0x3a6 PUSH1 0x2
0x3a8 EXP
0x3a9 SUB
0x3aa DUP10
0x3ab AND
0x3ac PUSH1 0x0
0x3ae SWAP1
0x3af DUP2
0x3b0 MSTORE
0x3b1 PUSH1 0x3
0x3b3 PUSH1 0x20
0x3b5 MSTORE
0x3b6 PUSH1 0x40
0x3b8 SWAP1
0x3b9 SHA3
0x3ba SLOAD
0x3bb PUSH1 0xff
0x3bd AND
0x3be ISZERO
---
0x3a2: V377 = 0x1
0x3a4: V378 = 0xa0
0x3a6: V379 = 0x2
0x3a8: V380 = EXP 0x2 0xa0
0x3a9: V381 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ab: V382 = AND S9 0xffffffffffffffffffffffffffffffffffffffff
0x3ac: V383 = 0x0
0x3b0: M[0x0] = V382
0x3b1: V384 = 0x3
0x3b3: V385 = 0x20
0x3b5: M[0x20] = 0x3
0x3b6: V386 = 0x40
0x3b9: V387 = SHA3 0x0 0x40
0x3ba: V388 = S[V387]
0x3bb: V389 = 0xff
0x3bd: V390 = AND 0xff V388
0x3be: V391 = ISZERO V390
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, V327, V373, S2, S1, V374]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, S1, V391]
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, V327, V373, S2, S1, V391]

================================

Block 0x3bf
[0x3bf:0x3c4]
---
Predecessors: [0x38d, 0x3a1]
Successors: [0x3c5, 0x4ce]
---
0x3bf JUMPDEST
0x3c0 ISZERO
0x3c1 PUSH2 0x4ce
0x3c4 JUMPI
---
0x3bf: JUMPDEST 
0x3c0: V392 = ISZERO S0
0x3c1: V393 = 0x4ce
0x3c4: JUMPI 0x4ce V392
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, V327, V373, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, V327, V373, S2, S1]

================================

Block 0x3c5
[0x3c5:0x40f]
---
Predecessors: [0x3bf]
Successors: [0x410, 0x414]
---
0x3c5 PUSH1 0x0
0x3c7 SLOAD
0x3c8 PUSH1 0x1
0x3ca PUSH1 0xa0
0x3cc PUSH1 0x2
0x3ce EXP
0x3cf SUB
0x3d0 AND
0x3d1 PUSH4 0x70a08231
0x3d6 DUP6
0x3d7 PUSH1 0x40
0x3d9 MLOAD
0x3da PUSH1 0xe0
0x3dc PUSH1 0x2
0x3de EXP
0x3df PUSH4 0xffffffff
0x3e4 DUP5
0x3e5 AND
0x3e6 MUL
0x3e7 DUP2
0x3e8 MSTORE
0x3e9 PUSH1 0x1
0x3eb PUSH1 0xa0
0x3ed PUSH1 0x2
0x3ef EXP
0x3f0 SUB
0x3f1 SWAP1
0x3f2 SWAP2
0x3f3 AND
0x3f4 PUSH1 0x4
0x3f6 DUP3
0x3f7 ADD
0x3f8 MSTORE
0x3f9 PUSH1 0x24
0x3fb ADD
0x3fc PUSH1 0x20
0x3fe PUSH1 0x40
0x400 MLOAD
0x401 DUP1
0x402 DUP4
0x403 SUB
0x404 DUP2
0x405 PUSH1 0x0
0x407 DUP8
0x408 DUP1
0x409 EXTCODESIZE
0x40a ISZERO
0x40b ISZERO
0x40c PUSH2 0x414
0x40f JUMPI
---
0x3c5: V394 = 0x0
0x3c7: V395 = S[0x0]
0x3c8: V396 = 0x1
0x3ca: V397 = 0xa0
0x3cc: V398 = 0x2
0x3ce: V399 = EXP 0x2 0xa0
0x3cf: V400 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d0: V401 = AND 0xffffffffffffffffffffffffffffffffffffffff V395
0x3d1: V402 = 0x70a08231
0x3d7: V403 = 0x40
0x3d9: V404 = M[0x40]
0x3da: V405 = 0xe0
0x3dc: V406 = 0x2
0x3de: V407 = EXP 0x2 0xe0
0x3df: V408 = 0xffffffff
0x3e5: V409 = AND 0x70a08231 0xffffffff
0x3e6: V410 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x3e8: M[V404] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x3e9: V411 = 0x1
0x3eb: V412 = 0xa0
0x3ed: V413 = 0x2
0x3ef: V414 = EXP 0x2 0xa0
0x3f0: V415 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f3: V416 = AND V327 0xffffffffffffffffffffffffffffffffffffffff
0x3f4: V417 = 0x4
0x3f7: V418 = ADD V404 0x4
0x3f8: M[V418] = V416
0x3f9: V419 = 0x24
0x3fb: V420 = ADD 0x24 V404
0x3fc: V421 = 0x20
0x3fe: V422 = 0x40
0x400: V423 = M[0x40]
0x403: V424 = SUB V420 V423
0x405: V425 = 0x0
0x409: V426 = EXTCODESIZE V401
0x40a: V427 = ISZERO V426
0x40b: V428 = ISZERO V427
0x40c: V429 = 0x414
0x40f: JUMPI 0x414 V428
---
Entry stack: [V13, S10, S9, S8, S7, S6, S5, S4, V327, V373, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V401, 0x70a08231, V420, 0x20, V423, V424, V423, 0x0, V401]
Exit stack: [V13, S10, S9, S8, S7, S6, S5, S4, V327, V373, S1, S0, V401, 0x70a08231, V420, 0x20, V423, V424, V423, 0x0, V401]

================================

Block 0x410
[0x410:0x413]
---
Predecessors: [0x3c5]
Successors: []
---
0x410 PUSH1 0x0
0x412 DUP1
0x413 REVERT
---
0x410: V430 = 0x0
0x413: REVERT 0x0 0x0
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, V327, V373, S10, S9, V401, 0x70a08231, V420, 0x20, V423, V424, V423, 0x0, V401]
Stack pops: 0
Stack additions: []
Exit stack: [S19, S18, S17, S16, S15, S14, S13, V327, V373, S10, S9, V401, 0x70a08231, V420, 0x20, V423, V424, V423, 0x0, V401]

================================

Block 0x414
[0x414:0x41c]
---
Predecessors: [0x3c5]
Successors: [0x41d, 0x421]
---
0x414 JUMPDEST
0x415 GAS
0x416 CALL
0x417 ISZERO
0x418 ISZERO
0x419 PUSH2 0x421
0x41c JUMPI
---
0x414: JUMPDEST 
0x415: V431 = GAS
0x416: V432 = CALL V431 V401 0x0 V423 V424 V423 0x20
0x417: V433 = ISZERO V432
0x418: V434 = ISZERO V433
0x419: V435 = 0x421
0x41c: JUMPI 0x421 V434
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, V327, V373, S10, S9, V401, 0x70a08231, V420, 0x20, V423, V424, V423, 0x0, V401]
Stack pops: 6
Stack additions: []
Exit stack: [S19, S18, S17, S16, S15, S14, S13, V327, V373, S10, S9, V401, 0x70a08231, V420]

================================

Block 0x41d
[0x41d:0x420]
---
Predecessors: [0x414]
Successors: []
---
0x41d PUSH1 0x0
0x41f DUP1
0x420 REVERT
---
0x41d: V436 = 0x0
0x420: REVERT 0x0 0x0
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, V327, V373, S4, S3, V401, 0x70a08231, V420]
Stack pops: 0
Stack additions: []
Exit stack: [S13, S12, S11, S10, S9, S8, S7, V327, V373, S4, S3, V401, 0x70a08231, V420]

================================

Block 0x421
[0x421:0x457]
---
Predecessors: [0x414]
Successors: [0x6d7]
---
0x421 JUMPDEST
0x422 POP
0x423 POP
0x424 POP
0x425 PUSH1 0x40
0x427 MLOAD
0x428 DUP1
0x429 MLOAD
0x42a PUSH1 0x1
0x42c PUSH1 0xa0
0x42e PUSH1 0x2
0x430 EXP
0x431 SUB
0x432 DUP7
0x433 AND
0x434 PUSH1 0x0
0x436 SWAP1
0x437 DUP2
0x438 MSTORE
0x439 PUSH1 0x2
0x43b PUSH1 0x20
0x43d MSTORE
0x43e PUSH1 0x40
0x440 SWAP1
0x441 SHA3
0x442 SLOAD
0x443 SWAP1
0x444 DUP10
0x445 MUL
0x446 SWAP4
0x447 POP
0x448 PUSH2 0x458
0x44b SWAP2
0x44c POP
0x44d DUP4
0x44e PUSH4 0xffffffff
0x453 PUSH2 0x6d7
0x456 AND
0x457 JUMP
---
0x421: JUMPDEST 
0x425: V437 = 0x40
0x427: V438 = M[0x40]
0x429: V439 = M[V438]
0x42a: V440 = 0x1
0x42c: V441 = 0xa0
0x42e: V442 = 0x2
0x430: V443 = EXP 0x2 0xa0
0x431: V444 = SUB 0x10000000000000000000000000000000000000000 0x1
0x433: V445 = AND V327 0xffffffffffffffffffffffffffffffffffffffff
0x434: V446 = 0x0
0x438: M[0x0] = V445
0x439: V447 = 0x2
0x43b: V448 = 0x20
0x43d: M[0x20] = 0x2
0x43e: V449 = 0x40
0x441: V450 = SHA3 0x0 0x40
0x442: V451 = S[V450]
0x445: V452 = MUL S9 V439
0x448: V453 = 0x458
0x44e: V454 = 0xffffffff
0x453: V455 = 0x6d7
0x456: V456 = AND 0x6d7 0xffffffff
0x457: JUMP 0x6d7
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, V327, V373, S4, S3, V401, 0x70a08231, V420]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, V452, S3, 0x458, V451, V452]
Exit stack: [S13, S12, S11, S10, S9, S8, S7, V327, V373, V452, S3, 0x458, V451, V452]

================================

Block 0x458
[0x458:0x4ca]
---
Predecessors: [0x6e6]
Successors: [0x6d7]
---
0x458 JUMPDEST
0x459 PUSH1 0x1
0x45b PUSH1 0xa0
0x45d PUSH1 0x2
0x45f EXP
0x460 SUB
0x461 DUP6
0x462 AND
0x463 PUSH1 0x0
0x465 SWAP1
0x466 DUP2
0x467 MSTORE
0x468 PUSH1 0x2
0x46a PUSH1 0x20
0x46c MSTORE
0x46d PUSH1 0x40
0x46f SWAP1
0x470 DUP2
0x471 SWAP1
0x472 SHA3
0x473 SWAP2
0x474 SWAP1
0x475 SWAP2
0x476 SSTORE
0x477 PUSH32 0x819b977343032d77a957a68d940f126c76955eec2548cfb58b3bcdc601405e23
0x498 SWAP1
0x499 DUP6
0x49a SWAP1
0x49b DUP5
0x49c SWAP1
0x49d MLOAD
0x49e PUSH1 0x1
0x4a0 PUSH1 0xa0
0x4a2 PUSH1 0x2
0x4a4 EXP
0x4a5 SUB
0x4a6 SWAP1
0x4a7 SWAP3
0x4a8 AND
0x4a9 DUP3
0x4aa MSTORE
0x4ab PUSH1 0x20
0x4ad DUP3
0x4ae ADD
0x4af MSTORE
0x4b0 PUSH1 0x40
0x4b2 SWAP1
0x4b3 DUP2
0x4b4 ADD
0x4b5 SWAP1
0x4b6 MLOAD
0x4b7 DUP1
0x4b8 SWAP2
0x4b9 SUB
0x4ba SWAP1
0x4bb LOG1
0x4bc PUSH2 0x4cb
0x4bf DUP7
0x4c0 DUP4
0x4c1 PUSH4 0xffffffff
0x4c6 PUSH2 0x6d7
0x4c9 AND
0x4ca JUMP
---
0x458: JUMPDEST 
0x459: V457 = 0x1
0x45b: V458 = 0xa0
0x45d: V459 = 0x2
0x45f: V460 = EXP 0x2 0xa0
0x460: V461 = SUB 0x10000000000000000000000000000000000000000 0x1
0x462: V462 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x463: V463 = 0x0
0x467: M[0x0] = V462
0x468: V464 = 0x2
0x46a: V465 = 0x20
0x46c: M[0x20] = 0x2
0x46d: V466 = 0x40
0x472: V467 = SHA3 0x0 0x40
0x476: S[V467] = S0
0x477: V468 = 0x819b977343032d77a957a68d940f126c76955eec2548cfb58b3bcdc601405e23
0x49d: V469 = M[0x40]
0x49e: V470 = 0x1
0x4a0: V471 = 0xa0
0x4a2: V472 = 0x2
0x4a4: V473 = EXP 0x2 0xa0
0x4a5: V474 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4a8: V475 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x4aa: M[V469] = V475
0x4ab: V476 = 0x20
0x4ae: V477 = ADD V469 0x20
0x4af: M[V477] = S2
0x4b0: V478 = 0x40
0x4b4: V479 = ADD 0x40 V469
0x4b6: V480 = M[0x40]
0x4b9: V481 = SUB V479 V480
0x4bb: LOG V480 V481 0x819b977343032d77a957a68d940f126c76955eec2548cfb58b3bcdc601405e23
0x4bc: V482 = 0x4cb
0x4c1: V483 = 0xffffffff
0x4c6: V484 = 0x6d7
0x4c9: V485 = AND 0x6d7 0xffffffff
0x4ca: JUMP 0x6d7
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, 0x4cb, S6, S2]
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x4cb, S6, S2]

================================

Block 0x4cb
[0x4cb:0x4cd]
---
Predecessors: [0x6e6]
Successors: [0x4ce]
---
0x4cb JUMPDEST
0x4cc SWAP6
0x4cd POP
---
0x4cb: JUMPDEST 
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S0, S5, S4, S3, S2, S1]
Exit stack: [V13, S11, S10, S9, S8, S7, S0, S5, S4, S3, S2, S1]

================================

Block 0x4ce
[0x4ce:0x4d8]
---
Predecessors: [0x3bf, 0x4cb]
Successors: [0x271]
---
0x4ce JUMPDEST
0x4cf PUSH1 0x1
0x4d1 SWAP1
0x4d2 SWAP5
0x4d3 ADD
0x4d4 SWAP4
0x4d5 PUSH2 0x271
0x4d8 JUMP
---
0x4ce: JUMPDEST 
0x4cf: V486 = 0x1
0x4d3: V487 = ADD S4 0x1
0x4d5: V488 = 0x271
0x4d8: JUMP 0x271
---
Entry stack: [V13, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [V487, S3, S2, S1, S0]
Exit stack: [V13, S10, S9, S8, S7, S6, S5, V487, S3, S2, S1, S0]

================================

Block 0x4d9
[0x4d9:0x4e8]
---
Predecessors: [0x2bd]
Successors: [0x6ed]
---
0x4d9 JUMPDEST
0x4da PUSH2 0x4e9
0x4dd CALLVALUE
0x4de DUP8
0x4df PUSH4 0xffffffff
0x4e4 PUSH2 0x6ed
0x4e7 AND
0x4e8 JUMP
---
0x4d9: JUMPDEST 
0x4da: V489 = 0x4e9
0x4dd: V490 = CALLVALUE
0x4df: V491 = 0xffffffff
0x4e4: V492 = 0x6ed
0x4e7: V493 = AND 0x6ed 0xffffffff
0x4e8: JUMP 0x6ed
---
Entry stack: [V13, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, 0x4e9, V490, S5]
Exit stack: [V13, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x4e9, V490, S5]

================================

Block 0x4e9
[0x4e9:0x4f5]
---
Predecessors: [0x6f9]
Successors: [0x4f6, 0x51e]
---
0x4e9 JUMPDEST
0x4ea SWAP1
0x4eb POP
0x4ec PUSH1 0x0
0x4ee DUP2
0x4ef GT
0x4f0 DUP1
0x4f1 ISZERO
0x4f2 PUSH2 0x51e
0x4f5 JUMPI
---
0x4e9: JUMPDEST 
0x4ec: V494 = 0x0
0x4ef: V495 = GT V667 0x0
0x4f1: V496 = ISZERO V495
0x4f2: V497 = 0x51e
0x4f5: JUMPI 0x51e V496
---
Entry stack: [V13, S11, S10, S9, S8, V240, S6, S5, S4, S3, S2, 0x0, V667]
Stack pops: 2
Stack additions: [S0, V495]
Exit stack: [V13, S11, S10, S9, S8, V240, S6, S5, S4, S3, S2, V667, V495]

================================

Block 0x4f6
[0x4f6:0x51d]
---
Predecessors: [0x4e9]
Successors: [0x51e]
---
0x4f6 POP
0x4f7 PUSH1 0x1
0x4f9 PUSH1 0xa0
0x4fb PUSH1 0x2
0x4fd EXP
0x4fe SUB
0x4ff CALLER
0x500 AND
0x501 DUP2
0x502 ISZERO
0x503 PUSH2 0x8fc
0x506 MUL
0x507 DUP3
0x508 PUSH1 0x40
0x50a MLOAD
0x50b PUSH1 0x0
0x50d PUSH1 0x40
0x50f MLOAD
0x510 DUP1
0x511 DUP4
0x512 SUB
0x513 DUP2
0x514 DUP6
0x515 DUP9
0x516 DUP9
0x517 CALL
0x518 SWAP4
0x519 POP
0x51a POP
0x51b POP
0x51c POP
0x51d ISZERO
---
0x4f7: V498 = 0x1
0x4f9: V499 = 0xa0
0x4fb: V500 = 0x2
0x4fd: V501 = EXP 0x2 0xa0
0x4fe: V502 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ff: V503 = CALLER
0x500: V504 = AND V503 0xffffffffffffffffffffffffffffffffffffffff
0x502: V505 = ISZERO V667
0x503: V506 = 0x8fc
0x506: V507 = MUL 0x8fc V505
0x508: V508 = 0x40
0x50a: V509 = M[0x40]
0x50b: V510 = 0x0
0x50d: V511 = 0x40
0x50f: V512 = M[0x40]
0x512: V513 = SUB V509 V512
0x517: V514 = CALL V507 V504 V667 V512 V513 V512 0x0
0x51d: V515 = ISZERO V514
---
Entry stack: [V13, S11, S10, S9, S8, V240, S6, S5, S4, S3, S2, V667, V495]
Stack pops: 2
Stack additions: [S1, V515]
Exit stack: [V13, S11, S10, S9, S8, V240, S6, S5, S4, S3, S2, V667, V515]

================================

Block 0x51e
[0x51e:0x523]
---
Predecessors: [0x4e9, 0x4f6]
Successors: [0x524, 0x5af]
---
0x51e JUMPDEST
0x51f ISZERO
0x520 PUSH2 0x5af
0x523 JUMPI
---
0x51e: JUMPDEST 
0x51f: V516 = ISZERO S0
0x520: V517 = 0x5af
0x523: JUMPI 0x5af V516
---
Entry stack: [V13, S11, S10, S9, S8, V240, S6, S5, S4, S3, S2, V667, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S11, S10, S9, S8, V240, S6, S5, S4, S3, S2, V667]

================================

Block 0x524
[0x524:0x54b]
---
Predecessors: [0x51e]
Successors: [0x6d7]
---
0x524 PUSH1 0x1
0x526 PUSH1 0xa0
0x528 PUSH1 0x2
0x52a EXP
0x52b SUB
0x52c CALLER
0x52d AND
0x52e PUSH1 0x0
0x530 SWAP1
0x531 DUP2
0x532 MSTORE
0x533 PUSH1 0x2
0x535 PUSH1 0x20
0x537 MSTORE
0x538 PUSH1 0x40
0x53a SWAP1
0x53b SHA3
0x53c SLOAD
0x53d PUSH2 0x54c
0x540 SWAP1
0x541 DUP3
0x542 PUSH4 0xffffffff
0x547 PUSH2 0x6d7
0x54a AND
0x54b JUMP
---
0x524: V518 = 0x1
0x526: V519 = 0xa0
0x528: V520 = 0x2
0x52a: V521 = EXP 0x2 0xa0
0x52b: V522 = SUB 0x10000000000000000000000000000000000000000 0x1
0x52c: V523 = CALLER
0x52d: V524 = AND V523 0xffffffffffffffffffffffffffffffffffffffff
0x52e: V525 = 0x0
0x532: M[0x0] = V524
0x533: V526 = 0x2
0x535: V527 = 0x20
0x537: M[0x20] = 0x2
0x538: V528 = 0x40
0x53b: V529 = SHA3 0x0 0x40
0x53c: V530 = S[V529]
0x53d: V531 = 0x54c
0x542: V532 = 0xffffffff
0x547: V533 = 0x6d7
0x54a: V534 = AND 0x6d7 0xffffffff
0x54b: JUMP 0x6d7
---
Entry stack: [V13, S10, S9, S8, S7, V240, S5, S4, S3, S2, S1, V667]
Stack pops: 1
Stack additions: [S0, 0x54c, V530, S0]
Exit stack: [V13, S10, S9, S8, S7, V240, S5, S4, S3, S2, S1, V667, 0x54c, V530, V667]

================================

Block 0x54c
[0x54c:0x5ae]
---
Predecessors: [0x6e6]
Successors: [0x5af]
---
0x54c JUMPDEST
0x54d CALLER
0x54e PUSH1 0x1
0x550 PUSH1 0xa0
0x552 PUSH1 0x2
0x554 EXP
0x555 SUB
0x556 DUP2
0x557 AND
0x558 PUSH1 0x0
0x55a SWAP1
0x55b DUP2
0x55c MSTORE
0x55d PUSH1 0x2
0x55f PUSH1 0x20
0x561 MSTORE
0x562 PUSH1 0x40
0x564 SWAP1
0x565 DUP2
0x566 SWAP1
0x567 SHA3
0x568 SWAP3
0x569 SWAP1
0x56a SWAP3
0x56b SSTORE
0x56c PUSH32 0x819b977343032d77a957a68d940f126c76955eec2548cfb58b3bcdc601405e23
0x58d SWAP2
0x58e DUP4
0x58f SWAP1
0x590 MLOAD
0x591 PUSH1 0x1
0x593 PUSH1 0xa0
0x595 PUSH1 0x2
0x597 EXP
0x598 SUB
0x599 SWAP1
0x59a SWAP3
0x59b AND
0x59c DUP3
0x59d MSTORE
0x59e PUSH1 0x20
0x5a0 DUP3
0x5a1 ADD
0x5a2 MSTORE
0x5a3 PUSH1 0x40
0x5a5 SWAP1
0x5a6 DUP2
0x5a7 ADD
0x5a8 SWAP1
0x5a9 MLOAD
0x5aa DUP1
0x5ab SWAP2
0x5ac SUB
0x5ad SWAP1
0x5ae LOG1
---
0x54c: JUMPDEST 
0x54d: V535 = CALLER
0x54e: V536 = 0x1
0x550: V537 = 0xa0
0x552: V538 = 0x2
0x554: V539 = EXP 0x2 0xa0
0x555: V540 = SUB 0x10000000000000000000000000000000000000000 0x1
0x557: V541 = AND V535 0xffffffffffffffffffffffffffffffffffffffff
0x558: V542 = 0x0
0x55c: M[0x0] = V541
0x55d: V543 = 0x2
0x55f: V544 = 0x20
0x561: M[0x20] = 0x2
0x562: V545 = 0x40
0x567: V546 = SHA3 0x0 0x40
0x56b: S[V546] = S0
0x56c: V547 = 0x819b977343032d77a957a68d940f126c76955eec2548cfb58b3bcdc601405e23
0x590: V548 = M[0x40]
0x591: V549 = 0x1
0x593: V550 = 0xa0
0x595: V551 = 0x2
0x597: V552 = EXP 0x2 0xa0
0x598: V553 = SUB 0x10000000000000000000000000000000000000000 0x1
0x59b: V554 = AND V535 0xffffffffffffffffffffffffffffffffffffffff
0x59d: M[V548] = V554
0x59e: V555 = 0x20
0x5a1: V556 = ADD V548 0x20
0x5a2: M[V556] = S1
0x5a3: V557 = 0x40
0x5a7: V558 = ADD 0x40 V548
0x5a9: V559 = M[0x40]
0x5ac: V560 = SUB V558 V559
0x5ae: LOG V559 V560 0x819b977343032d77a957a68d940f126c76955eec2548cfb58b3bcdc601405e23
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1]
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x5af
[0x5af:0x5f5]
---
Predecessors: [0x51e, 0x54c]
Successors: []
---
0x5af JUMPDEST
0x5b0 PUSH32 0x467f85e4a492889e9c3a393cdf42cc4fe10f61dcf88a8881f417542ccb5abced
0x5d1 DUP8
0x5d2 TIMESTAMP
0x5d3 PUSH1 0x40
0x5d5 MLOAD
0x5d6 SWAP2
0x5d7 DUP3
0x5d8 MSTORE
0x5d9 PUSH1 0x20
0x5db DUP3
0x5dc ADD
0x5dd MSTORE
0x5de PUSH1 0x40
0x5e0 SWAP1
0x5e1 DUP2
0x5e2 ADD
0x5e3 SWAP1
0x5e4 MLOAD
0x5e5 DUP1
0x5e6 SWAP2
0x5e7 SUB
0x5e8 SWAP1
0x5e9 LOG1
0x5ea POP
0x5eb POP
0x5ec POP
0x5ed POP
0x5ee POP
0x5ef POP
0x5f0 POP
0x5f1 POP
0x5f2 POP
0x5f3 POP
0x5f4 POP
0x5f5 STOP
---
0x5af: JUMPDEST 
0x5b0: V561 = 0x467f85e4a492889e9c3a393cdf42cc4fe10f61dcf88a8881f417542ccb5abced
0x5d2: V562 = TIMESTAMP
0x5d3: V563 = 0x40
0x5d5: V564 = M[0x40]
0x5d8: M[V564] = S6
0x5d9: V565 = 0x20
0x5dc: V566 = ADD V564 0x20
0x5dd: M[V566] = V562
0x5de: V567 = 0x40
0x5e2: V568 = ADD 0x40 V564
0x5e4: V569 = M[0x40]
0x5e7: V570 = SUB V568 V569
0x5e9: LOG V569 V570 0x467f85e4a492889e9c3a393cdf42cc4fe10f61dcf88a8881f417542ccb5abced
0x5f5: STOP 
---
Entry stack: [V13, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 11
Stack additions: []
Exit stack: [V13]

================================

Block 0x5f6
[0x5f6:0x5fc]
---
Predecessors: [0xd]
Successors: [0x5fd, 0x601]
---
0x5f6 JUMPDEST
0x5f7 CALLVALUE
0x5f8 ISZERO
0x5f9 PUSH2 0x601
0x5fc JUMPI
---
0x5f6: JUMPDEST 
0x5f7: V571 = CALLVALUE
0x5f8: V572 = ISZERO V571
0x5f9: V573 = 0x601
0x5fc: JUMPI 0x601 V572
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x5fd
[0x5fd:0x600]
---
Predecessors: [0x5f6]
Successors: []
---
0x5fd PUSH1 0x0
0x5ff DUP1
0x600 REVERT
---
0x5fd: V574 = 0x0
0x600: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x601
[0x601:0x608]
---
Predecessors: [0x5f6]
Successors: [0x6ff]
---
0x601 JUMPDEST
0x602 PUSH2 0x609
0x605 PUSH2 0x6ff
0x608 JUMP
---
0x601: JUMPDEST 
0x602: V575 = 0x609
0x605: V576 = 0x6ff
0x608: JUMP 0x6ff
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x609]
Exit stack: [V13, 0x609]

================================

Block 0x609
[0x609:0x624]
---
Predecessors: [0x6ff, 0x7ea]
Successors: []
---
0x609 JUMPDEST
0x60a PUSH1 0x40
0x60c MLOAD
0x60d PUSH1 0x1
0x60f PUSH1 0xa0
0x611 PUSH1 0x2
0x613 EXP
0x614 SUB
0x615 SWAP1
0x616 SWAP2
0x617 AND
0x618 DUP2
0x619 MSTORE
0x61a PUSH1 0x20
0x61c ADD
0x61d PUSH1 0x40
0x61f MLOAD
0x620 DUP1
0x621 SWAP2
0x622 SUB
0x623 SWAP1
0x624 RETURN
---
0x609: JUMPDEST 
0x60a: V577 = 0x40
0x60c: V578 = M[0x40]
0x60d: V579 = 0x1
0x60f: V580 = 0xa0
0x611: V581 = 0x2
0x613: V582 = EXP 0x2 0xa0
0x614: V583 = SUB 0x10000000000000000000000000000000000000000 0x1
0x617: V584 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x619: M[V578] = V584
0x61a: V585 = 0x20
0x61c: V586 = ADD 0x20 V578
0x61d: V587 = 0x40
0x61f: V588 = M[0x40]
0x622: V589 = SUB V586 V588
0x624: RETURN V588 V589
---
Entry stack: [V13, 0x609, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x609]

================================

Block 0x625
[0x625:0x62b]
---
Predecessors: [0x27]
Successors: [0x62c, 0x630]
---
0x625 JUMPDEST
0x626 CALLVALUE
0x627 ISZERO
0x628 PUSH2 0x630
0x62b JUMPI
---
0x625: JUMPDEST 
0x626: V590 = CALLVALUE
0x627: V591 = ISZERO V590
0x628: V592 = 0x630
0x62b: JUMPI 0x630 V591
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x62c
[0x62c:0x62f]
---
Predecessors: [0x625]
Successors: []
---
0x62c PUSH1 0x0
0x62e DUP1
0x62f REVERT
---
0x62c: V593 = 0x0
0x62f: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x630
[0x630:0x637]
---
Predecessors: [0x625]
Successors: [0x70e]
---
0x630 JUMPDEST
0x631 PUSH2 0x638
0x634 PUSH2 0x70e
0x637 JUMP
---
0x630: JUMPDEST 
0x631: V594 = 0x638
0x634: V595 = 0x70e
0x637: JUMP 0x70e
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x638]
Exit stack: [V13, 0x638]

================================

Block 0x638
[0x638:0x639]
---
Predecessors: [0x7e7]
Successors: []
---
0x638 JUMPDEST
0x639 STOP
---
0x638: JUMPDEST 
0x639: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x63a
[0x63a:0x640]
---
Predecessors: [0x32]
Successors: [0x641, 0x645]
---
0x63a JUMPDEST
0x63b CALLVALUE
0x63c ISZERO
0x63d PUSH2 0x645
0x640 JUMPI
---
0x63a: JUMPDEST 
0x63b: V596 = CALLVALUE
0x63c: V597 = ISZERO V596
0x63d: V598 = 0x645
0x640: JUMPI 0x645 V597
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x641
[0x641:0x644]
---
Predecessors: [0x63a]
Successors: []
---
0x641 PUSH1 0x0
0x643 DUP1
0x644 REVERT
---
0x641: V599 = 0x0
0x644: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x645
[0x645:0x658]
---
Predecessors: [0x63a]
Successors: [0x752]
---
0x645 JUMPDEST
0x646 PUSH2 0x659
0x649 PUSH1 0x1
0x64b PUSH1 0xa0
0x64d PUSH1 0x2
0x64f EXP
0x650 SUB
0x651 PUSH1 0x4
0x653 CALLDATALOAD
0x654 AND
0x655 PUSH2 0x752
0x658 JUMP
---
0x645: JUMPDEST 
0x646: V600 = 0x659
0x649: V601 = 0x1
0x64b: V602 = 0xa0
0x64d: V603 = 0x2
0x64f: V604 = EXP 0x2 0xa0
0x650: V605 = SUB 0x10000000000000000000000000000000000000000 0x1
0x651: V606 = 0x4
0x653: V607 = CALLDATALOAD 0x4
0x654: V608 = AND V607 0xffffffffffffffffffffffffffffffffffffffff
0x655: V609 = 0x752
0x658: JUMP 0x752
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x659, V608]
Exit stack: [V13, 0x659, V608]

================================

Block 0x659
[0x659:0x66c]
---
Predecessors: [0x752]
Successors: []
---
0x659 JUMPDEST
0x65a PUSH1 0x40
0x65c MLOAD
0x65d SWAP1
0x65e ISZERO
0x65f ISZERO
0x660 DUP2
0x661 MSTORE
0x662 PUSH1 0x20
0x664 ADD
0x665 PUSH1 0x40
0x667 MLOAD
0x668 DUP1
0x669 SWAP2
0x66a SUB
0x66b SWAP1
0x66c RETURN
---
0x659: JUMPDEST 
0x65a: V610 = 0x40
0x65c: V611 = M[0x40]
0x65e: V612 = ISZERO V717
0x65f: V613 = ISZERO V612
0x661: M[V611] = V613
0x662: V614 = 0x20
0x664: V615 = ADD 0x20 V611
0x665: V616 = 0x40
0x667: V617 = M[0x40]
0x66a: V618 = SUB V615 V617
0x66c: RETURN V617 V618
---
Entry stack: [V13, 0x659, V717]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x659]

================================

Block 0x66d
[0x66d:0x673]
---
Predecessors: [0x3d]
Successors: [0x674, 0x678]
---
0x66d JUMPDEST
0x66e CALLVALUE
0x66f ISZERO
0x670 PUSH2 0x678
0x673 JUMPI
---
0x66d: JUMPDEST 
0x66e: V619 = CALLVALUE
0x66f: V620 = ISZERO V619
0x670: V621 = 0x678
0x673: JUMPI 0x678 V620
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x674
[0x674:0x677]
---
Predecessors: [0x66d]
Successors: []
---
0x674 PUSH1 0x0
0x676 DUP1
0x677 REVERT
---
0x674: V622 = 0x0
0x677: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x678
[0x678:0x68b]
---
Predecessors: [0x66d]
Successors: [0x767]
---
0x678 JUMPDEST
0x679 PUSH2 0x68c
0x67c PUSH1 0x1
0x67e PUSH1 0xa0
0x680 PUSH1 0x2
0x682 EXP
0x683 SUB
0x684 PUSH1 0x4
0x686 CALLDATALOAD
0x687 AND
0x688 PUSH2 0x767
0x68b JUMP
---
0x678: JUMPDEST 
0x679: V623 = 0x68c
0x67c: V624 = 0x1
0x67e: V625 = 0xa0
0x680: V626 = 0x2
0x682: V627 = EXP 0x2 0xa0
0x683: V628 = SUB 0x10000000000000000000000000000000000000000 0x1
0x684: V629 = 0x4
0x686: V630 = CALLDATALOAD 0x4
0x687: V631 = AND V630 0xffffffffffffffffffffffffffffffffffffffff
0x688: V632 = 0x767
0x68b: JUMP 0x767
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x68c, V631]
Exit stack: [V13, 0x68c, V631]

================================

Block 0x68c
[0x68c:0x69d]
---
Predecessors: [0x767, 0x7f9]
Successors: []
---
0x68c JUMPDEST
0x68d PUSH1 0x40
0x68f MLOAD
0x690 SWAP1
0x691 DUP2
0x692 MSTORE
0x693 PUSH1 0x20
0x695 ADD
0x696 PUSH1 0x40
0x698 MLOAD
0x699 DUP1
0x69a SWAP2
0x69b SUB
0x69c SWAP1
0x69d RETURN
---
0x68c: JUMPDEST 
0x68d: V633 = 0x40
0x68f: V634 = M[0x40]
0x692: M[V634] = S0
0x693: V635 = 0x20
0x695: V636 = ADD 0x20 V634
0x696: V637 = 0x40
0x698: V638 = M[0x40]
0x69b: V639 = SUB V636 V638
0x69d: RETURN V638 V639
---
Entry stack: [V13, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S1]

================================

Block 0x69e
[0x69e:0x6a4]
---
Predecessors: [0x48]
Successors: [0x6a5, 0x6a9]
---
0x69e JUMPDEST
0x69f CALLVALUE
0x6a0 ISZERO
0x6a1 PUSH2 0x6a9
0x6a4 JUMPI
---
0x69e: JUMPDEST 
0x69f: V640 = CALLVALUE
0x6a0: V641 = ISZERO V640
0x6a1: V642 = 0x6a9
0x6a4: JUMPI 0x6a9 V641
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x6a5
[0x6a5:0x6a8]
---
Predecessors: [0x69e]
Successors: []
---
0x6a5 PUSH1 0x0
0x6a7 DUP1
0x6a8 REVERT
---
0x6a5: V643 = 0x0
0x6a8: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x6a9
[0x6a9:0x6b0]
---
Predecessors: [0x69e]
Successors: [0x779]
---
0x6a9 JUMPDEST
0x6aa PUSH2 0x638
0x6ad PUSH2 0x779
0x6b0 JUMP
---
0x6a9: JUMPDEST 
0x6aa: V644 = 0x638
0x6ad: V645 = 0x779
0x6b0: JUMP 0x779
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x638]
Exit stack: [V13, 0x638]

================================

Block 0x6b1
[0x6b1:0x6b7]
---
Predecessors: [0x53]
Successors: [0x6b8, 0x6bc]
---
0x6b1 JUMPDEST
0x6b2 CALLVALUE
0x6b3 ISZERO
0x6b4 PUSH2 0x6bc
0x6b7 JUMPI
---
0x6b1: JUMPDEST 
0x6b2: V646 = CALLVALUE
0x6b3: V647 = ISZERO V646
0x6b4: V648 = 0x6bc
0x6b7: JUMPI 0x6bc V647
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x6b8
[0x6b8:0x6bb]
---
Predecessors: [0x6b1]
Successors: []
---
0x6b8 PUSH1 0x0
0x6ba DUP1
0x6bb REVERT
---
0x6b8: V649 = 0x0
0x6bb: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x6bc
[0x6bc:0x6c3]
---
Predecessors: [0x6b1]
Successors: [0x7ea]
---
0x6bc JUMPDEST
0x6bd PUSH2 0x609
0x6c0 PUSH2 0x7ea
0x6c3 JUMP
---
0x6bc: JUMPDEST 
0x6bd: V650 = 0x609
0x6c0: V651 = 0x7ea
0x6c3: JUMP 0x7ea
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x609]
Exit stack: [V13, 0x609]

================================

Block 0x6c4
[0x6c4:0x6ca]
---
Predecessors: [0x5e]
Successors: [0x6cb, 0x6cf]
---
0x6c4 JUMPDEST
0x6c5 CALLVALUE
0x6c6 ISZERO
0x6c7 PUSH2 0x6cf
0x6ca JUMPI
---
0x6c4: JUMPDEST 
0x6c5: V652 = CALLVALUE
0x6c6: V653 = ISZERO V652
0x6c7: V654 = 0x6cf
0x6ca: JUMPI 0x6cf V653
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x6cb
[0x6cb:0x6ce]
---
Predecessors: [0x6c4]
Successors: []
---
0x6cb PUSH1 0x0
0x6cd DUP1
0x6ce REVERT
---
0x6cb: V655 = 0x0
0x6ce: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x6cf
[0x6cf:0x6d6]
---
Predecessors: [0x6c4]
Successors: [0x7f9]
---
0x6cf JUMPDEST
0x6d0 PUSH2 0x68c
0x6d3 PUSH2 0x7f9
0x6d6 JUMP
---
0x6cf: JUMPDEST 
0x6d0: V656 = 0x68c
0x6d3: V657 = 0x7f9
0x6d6: JUMP 0x7f9
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x68c]
Exit stack: [V13, 0x68c]

================================

Block 0x6d7
[0x6d7:0x6e4]
---
Predecessors: [0x22a, 0x421, 0x458, 0x524]
Successors: [0x6e5, 0x6e6]
---
0x6d7 JUMPDEST
0x6d8 PUSH1 0x0
0x6da DUP3
0x6db DUP3
0x6dc ADD
0x6dd DUP4
0x6de DUP2
0x6df LT
0x6e0 ISZERO
0x6e1 PUSH2 0x6e6
0x6e4 JUMPI
---
0x6d7: JUMPDEST 
0x6d8: V658 = 0x0
0x6dc: V659 = ADD S0 S1
0x6df: V660 = LT V659 S1
0x6e0: V661 = ISZERO V660
0x6e1: V662 = 0x6e6
0x6e4: JUMPI 0x6e6 V661
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x240, 0x458, 0x4cb, 0x54c}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V659]
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x240, 0x458, 0x4cb, 0x54c}, S1, S0, 0x0, V659]

================================

Block 0x6e5
[0x6e5:0x6e5]
---
Predecessors: [0x6d7]
Successors: []
---
0x6e5 INVALID
---
0x6e5: INVALID 
---
Entry stack: [V13, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x240, 0x458, 0x4cb, 0x54c}, S3, S2, 0x0, V659]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x240, 0x458, 0x4cb, 0x54c}, S3, S2, 0x0, V659]

================================

Block 0x6e6
[0x6e6:0x6ec]
---
Predecessors: [0x6d7]
Successors: [0x240, 0x458, 0x4cb, 0x54c]
---
0x6e6 JUMPDEST
0x6e7 SWAP4
0x6e8 SWAP3
0x6e9 POP
0x6ea POP
0x6eb POP
0x6ec JUMP
---
0x6e6: JUMPDEST 
0x6ec: JUMP {0x240, 0x458, 0x4cb, 0x54c}
---
Entry stack: [V13, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x240, 0x458, 0x4cb, 0x54c}, S3, S2, 0x0, V659]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V13, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V659]

================================

Block 0x6ed
[0x6ed:0x6f7]
---
Predecessors: [0x4d9]
Successors: [0x6f8, 0x6f9]
---
0x6ed JUMPDEST
0x6ee PUSH1 0x0
0x6f0 DUP3
0x6f1 DUP3
0x6f2 GT
0x6f3 ISZERO
0x6f4 PUSH2 0x6f9
0x6f7 JUMPI
---
0x6ed: JUMPDEST 
0x6ee: V663 = 0x0
0x6f2: V664 = GT S0 V490
0x6f3: V665 = ISZERO V664
0x6f4: V666 = 0x6f9
0x6f7: JUMPI 0x6f9 V665
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x4e9, V490, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x4e9, V490, S0, 0x0]

================================

Block 0x6f8
[0x6f8:0x6f8]
---
Predecessors: [0x6ed]
Successors: []
---
0x6f8 INVALID
---
0x6f8: INVALID 
---
Entry stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x4e9, V490, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x4e9, V490, S1, 0x0]

================================

Block 0x6f9
[0x6f9:0x6fe]
---
Predecessors: [0x6ed]
Successors: [0x4e9]
---
0x6f9 JUMPDEST
0x6fa POP
0x6fb SWAP1
0x6fc SUB
0x6fd SWAP1
0x6fe JUMP
---
0x6f9: JUMPDEST 
0x6fc: V667 = SUB V490 S1
0x6fe: JUMP 0x4e9
---
Entry stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x4e9, V490, S1, 0x0]
Stack pops: 4
Stack additions: [V667]
Exit stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V667]

================================

Block 0x6ff
[0x6ff:0x70d]
---
Predecessors: [0x601]
Successors: [0x609]
---
0x6ff JUMPDEST
0x700 PUSH1 0x0
0x702 SLOAD
0x703 PUSH1 0x1
0x705 PUSH1 0xa0
0x707 PUSH1 0x2
0x709 EXP
0x70a SUB
0x70b AND
0x70c DUP2
0x70d JUMP
---
0x6ff: JUMPDEST 
0x700: V668 = 0x0
0x702: V669 = S[0x0]
0x703: V670 = 0x1
0x705: V671 = 0xa0
0x707: V672 = 0x2
0x709: V673 = EXP 0x2 0xa0
0x70a: V674 = SUB 0x10000000000000000000000000000000000000000 0x1
0x70b: V675 = AND 0xffffffffffffffffffffffffffffffffffffffff V669
0x70d: JUMP 0x609
---
Entry stack: [V13, 0x609]
Stack pops: 1
Stack additions: [S0, V675]
Exit stack: [V13, 0x609, V675]

================================

Block 0x70e
[0x70e:0x724]
---
Predecessors: [0x630]
Successors: [0x725, 0x729]
---
0x70e JUMPDEST
0x70f PUSH1 0x1
0x711 SLOAD
0x712 CALLER
0x713 PUSH1 0x1
0x715 PUSH1 0xa0
0x717 PUSH1 0x2
0x719 EXP
0x71a SUB
0x71b SWAP1
0x71c DUP2
0x71d AND
0x71e SWAP2
0x71f AND
0x720 EQ
0x721 PUSH2 0x729
0x724 JUMPI
---
0x70e: JUMPDEST 
0x70f: V676 = 0x1
0x711: V677 = S[0x1]
0x712: V678 = CALLER
0x713: V679 = 0x1
0x715: V680 = 0xa0
0x717: V681 = 0x2
0x719: V682 = EXP 0x2 0xa0
0x71a: V683 = SUB 0x10000000000000000000000000000000000000000 0x1
0x71d: V684 = AND 0xffffffffffffffffffffffffffffffffffffffff V678
0x71f: V685 = AND V677 0xffffffffffffffffffffffffffffffffffffffff
0x720: V686 = EQ V685 V684
0x721: V687 = 0x729
0x724: JUMPI 0x729 V686
---
Entry stack: [V13, 0x638]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x638]

================================

Block 0x725
[0x725:0x728]
---
Predecessors: [0x70e]
Successors: []
---
0x725 PUSH1 0x0
0x727 DUP1
0x728 REVERT
---
0x725: V688 = 0x0
0x728: REVERT 0x0 0x0
---
Entry stack: [V13, 0x638]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x638]

================================

Block 0x729
[0x729:0x73f]
---
Predecessors: [0x70e]
Successors: [0x740, 0x744]
---
0x729 JUMPDEST
0x72a PUSH1 0x1
0x72c SLOAD
0x72d CALLER
0x72e PUSH1 0x1
0x730 PUSH1 0xa0
0x732 PUSH1 0x2
0x734 EXP
0x735 SUB
0x736 SWAP1
0x737 DUP2
0x738 AND
0x739 SWAP2
0x73a AND
0x73b EQ
0x73c PUSH2 0x744
0x73f JUMPI
---
0x729: JUMPDEST 
0x72a: V689 = 0x1
0x72c: V690 = S[0x1]
0x72d: V691 = CALLER
0x72e: V692 = 0x1
0x730: V693 = 0xa0
0x732: V694 = 0x2
0x734: V695 = EXP 0x2 0xa0
0x735: V696 = SUB 0x10000000000000000000000000000000000000000 0x1
0x738: V697 = AND 0xffffffffffffffffffffffffffffffffffffffff V691
0x73a: V698 = AND V690 0xffffffffffffffffffffffffffffffffffffffff
0x73b: V699 = EQ V698 V697
0x73c: V700 = 0x744
0x73f: JUMPI 0x744 V699
---
Entry stack: [V13, 0x638]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x638]

================================

Block 0x740
[0x740:0x743]
---
Predecessors: [0x729]
Successors: []
---
0x740 PUSH1 0x0
0x742 DUP1
0x743 REVERT
---
0x740: V701 = 0x0
0x743: REVERT 0x0 0x0
---
Entry stack: [V13, 0x638]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x638]

================================

Block 0x744
[0x744:0x751]
---
Predecessors: [0x729]
Successors: []
---
0x744 JUMPDEST
0x745 PUSH1 0x1
0x747 SLOAD
0x748 PUSH1 0x1
0x74a PUSH1 0xa0
0x74c PUSH1 0x2
0x74e EXP
0x74f SUB
0x750 AND
0x751 SELFDESTRUCT
---
0x744: JUMPDEST 
0x745: V702 = 0x1
0x747: V703 = S[0x1]
0x748: V704 = 0x1
0x74a: V705 = 0xa0
0x74c: V706 = 0x2
0x74e: V707 = EXP 0x2 0xa0
0x74f: V708 = SUB 0x10000000000000000000000000000000000000000 0x1
0x750: V709 = AND 0xffffffffffffffffffffffffffffffffffffffff V703
0x751: SELFDESTRUCT V709
---
Entry stack: [V13, 0x638]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x638]

================================

Block 0x752
[0x752:0x766]
---
Predecessors: [0x645]
Successors: [0x659]
---
0x752 JUMPDEST
0x753 PUSH1 0x3
0x755 PUSH1 0x20
0x757 MSTORE
0x758 PUSH1 0x0
0x75a SWAP1
0x75b DUP2
0x75c MSTORE
0x75d PUSH1 0x40
0x75f SWAP1
0x760 SHA3
0x761 SLOAD
0x762 PUSH1 0xff
0x764 AND
0x765 DUP2
0x766 JUMP
---
0x752: JUMPDEST 
0x753: V710 = 0x3
0x755: V711 = 0x20
0x757: M[0x20] = 0x3
0x758: V712 = 0x0
0x75c: M[0x0] = V608
0x75d: V713 = 0x40
0x760: V714 = SHA3 0x0 0x40
0x761: V715 = S[V714]
0x762: V716 = 0xff
0x764: V717 = AND 0xff V715
0x766: JUMP 0x659
---
Entry stack: [V13, 0x659, V608]
Stack pops: 2
Stack additions: [S1, V717]
Exit stack: [V13, 0x659, V717]

================================

Block 0x767
[0x767:0x778]
---
Predecessors: [0x678]
Successors: [0x68c]
---
0x767 JUMPDEST
0x768 PUSH1 0x2
0x76a PUSH1 0x20
0x76c MSTORE
0x76d PUSH1 0x0
0x76f SWAP1
0x770 DUP2
0x771 MSTORE
0x772 PUSH1 0x40
0x774 SWAP1
0x775 SHA3
0x776 SLOAD
0x777 DUP2
0x778 JUMP
---
0x767: JUMPDEST 
0x768: V718 = 0x2
0x76a: V719 = 0x20
0x76c: M[0x20] = 0x2
0x76d: V720 = 0x0
0x771: M[0x0] = V631
0x772: V721 = 0x40
0x775: V722 = SHA3 0x0 0x40
0x776: V723 = S[V722]
0x778: JUMP 0x68c
---
Entry stack: [V13, 0x68c, V631]
Stack pops: 2
Stack additions: [S1, V723]
Exit stack: [V13, 0x68c, V723]

================================

Block 0x779
[0x779:0x799]
---
Predecessors: [0x6a9]
Successors: [0x79a, 0x79e]
---
0x779 JUMPDEST
0x77a PUSH1 0x1
0x77c PUSH1 0xa0
0x77e PUSH1 0x2
0x780 EXP
0x781 SUB
0x782 CALLER
0x783 AND
0x784 PUSH1 0x0
0x786 SWAP1
0x787 DUP2
0x788 MSTORE
0x789 PUSH1 0x2
0x78b PUSH1 0x20
0x78d MSTORE
0x78e PUSH1 0x40
0x790 DUP2
0x791 SHA3
0x792 SLOAD
0x793 DUP2
0x794 SWAP1
0x795 GT
0x796 PUSH2 0x79e
0x799 JUMPI
---
0x779: JUMPDEST 
0x77a: V724 = 0x1
0x77c: V725 = 0xa0
0x77e: V726 = 0x2
0x780: V727 = EXP 0x2 0xa0
0x781: V728 = SUB 0x10000000000000000000000000000000000000000 0x1
0x782: V729 = CALLER
0x783: V730 = AND V729 0xffffffffffffffffffffffffffffffffffffffff
0x784: V731 = 0x0
0x788: M[0x0] = V730
0x789: V732 = 0x2
0x78b: V733 = 0x20
0x78d: M[0x20] = 0x2
0x78e: V734 = 0x40
0x791: V735 = SHA3 0x0 0x40
0x792: V736 = S[V735]
0x795: V737 = GT V736 0x0
0x796: V738 = 0x79e
0x799: JUMPI 0x79e V737
---
Entry stack: [V13, 0x638]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x638, 0x0]

================================

Block 0x79a
[0x79a:0x79d]
---
Predecessors: [0x779]
Successors: []
---
0x79a PUSH1 0x0
0x79c DUP1
0x79d REVERT
---
0x79a: V739 = 0x0
0x79d: REVERT 0x0 0x0
---
Entry stack: [V13, 0x638, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x638, 0x0]

================================

Block 0x79e
[0x79e:0x7e2]
---
Predecessors: [0x779]
Successors: [0x7e3, 0x7e7]
---
0x79e JUMPDEST
0x79f POP
0x7a0 PUSH1 0x1
0x7a2 PUSH1 0xa0
0x7a4 PUSH1 0x2
0x7a6 EXP
0x7a7 SUB
0x7a8 CALLER
0x7a9 AND
0x7aa PUSH1 0x0
0x7ac DUP2
0x7ad DUP2
0x7ae MSTORE
0x7af PUSH1 0x2
0x7b1 PUSH1 0x20
0x7b3 MSTORE
0x7b4 PUSH1 0x40
0x7b6 DUP1
0x7b7 DUP3
0x7b8 SHA3
0x7b9 DUP1
0x7ba SLOAD
0x7bb SWAP3
0x7bc SWAP1
0x7bd SSTORE
0x7be SWAP1
0x7bf SWAP2
0x7c0 SWAP1
0x7c1 DUP3
0x7c2 ISZERO
0x7c3 PUSH2 0x8fc
0x7c6 MUL
0x7c7 SWAP1
0x7c8 DUP4
0x7c9 SWAP1
0x7ca MLOAD
0x7cb PUSH1 0x0
0x7cd PUSH1 0x40
0x7cf MLOAD
0x7d0 DUP1
0x7d1 DUP4
0x7d2 SUB
0x7d3 DUP2
0x7d4 DUP6
0x7d5 DUP9
0x7d6 DUP9
0x7d7 CALL
0x7d8 SWAP4
0x7d9 POP
0x7da POP
0x7db POP
0x7dc POP
0x7dd ISZERO
0x7de ISZERO
0x7df PUSH2 0x7e7
0x7e2 JUMPI
---
0x79e: JUMPDEST 
0x7a0: V740 = 0x1
0x7a2: V741 = 0xa0
0x7a4: V742 = 0x2
0x7a6: V743 = EXP 0x2 0xa0
0x7a7: V744 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7a8: V745 = CALLER
0x7a9: V746 = AND V745 0xffffffffffffffffffffffffffffffffffffffff
0x7aa: V747 = 0x0
0x7ae: M[0x0] = V746
0x7af: V748 = 0x2
0x7b1: V749 = 0x20
0x7b3: M[0x20] = 0x2
0x7b4: V750 = 0x40
0x7b8: V751 = SHA3 0x0 0x40
0x7ba: V752 = S[V751]
0x7bd: S[V751] = 0x0
0x7c2: V753 = ISZERO V752
0x7c3: V754 = 0x8fc
0x7c6: V755 = MUL 0x8fc V753
0x7ca: V756 = M[0x40]
0x7cb: V757 = 0x0
0x7cd: V758 = 0x40
0x7cf: V759 = M[0x40]
0x7d2: V760 = SUB V756 V759
0x7d7: V761 = CALL V755 V746 V752 V759 V760 V759 0x0
0x7dd: V762 = ISZERO V761
0x7de: V763 = ISZERO V762
0x7df: V764 = 0x7e7
0x7e2: JUMPI 0x7e7 V763
---
Entry stack: [V13, 0x638, 0x0]
Stack pops: 1
Stack additions: [V752]
Exit stack: [V13, 0x638, V752]

================================

Block 0x7e3
[0x7e3:0x7e6]
---
Predecessors: [0x79e]
Successors: []
---
0x7e3 PUSH1 0x0
0x7e5 DUP1
0x7e6 REVERT
---
0x7e3: V765 = 0x0
0x7e6: REVERT 0x0 0x0
---
Entry stack: [V13, 0x638, V752]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x638, V752]

================================

Block 0x7e7
[0x7e7:0x7e9]
---
Predecessors: [0x79e]
Successors: [0x638]
---
0x7e7 JUMPDEST
0x7e8 POP
0x7e9 JUMP
---
0x7e7: JUMPDEST 
0x7e9: JUMP 0x638
---
Entry stack: [V13, 0x638, V752]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x7ea
[0x7ea:0x7f8]
---
Predecessors: [0x6bc]
Successors: [0x609]
---
0x7ea JUMPDEST
0x7eb PUSH1 0x1
0x7ed SLOAD
0x7ee PUSH1 0x1
0x7f0 PUSH1 0xa0
0x7f2 PUSH1 0x2
0x7f4 EXP
0x7f5 SUB
0x7f6 AND
0x7f7 DUP2
0x7f8 JUMP
---
0x7ea: JUMPDEST 
0x7eb: V766 = 0x1
0x7ed: V767 = S[0x1]
0x7ee: V768 = 0x1
0x7f0: V769 = 0xa0
0x7f2: V770 = 0x2
0x7f4: V771 = EXP 0x2 0xa0
0x7f5: V772 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7f6: V773 = AND 0xffffffffffffffffffffffffffffffffffffffff V767
0x7f8: JUMP 0x609
---
Entry stack: [V13, 0x609]
Stack pops: 1
Stack additions: [S0, V773]
Exit stack: [V13, 0x609, V773]

================================

Block 0x7f9
[0x7f9:0x801]
---
Predecessors: [0x6cf]
Successors: [0x68c]
---
0x7f9 JUMPDEST
0x7fa PUSH5 0xdf97b4564
0x800 SWAP1
0x801 JUMP
---
0x7f9: JUMPDEST 
0x7fa: V774 = 0xdf97b4564
0x801: JUMP 0x68c
---
Entry stack: [V13, 0x68c]
Stack pops: 1
Stack additions: [0xdf97b4564]
Exit stack: [V13, 0xdf97b4564]

================================

Block 0x802
[0x802:0x82d]
---
Predecessors: []
Successors: []
---
0x802 STOP
0x803 LOG1
0x804 PUSH6 0x627a7a723058
0x80b SHA3
0x80c CALLDATASIZE
0x80d REVERT
0x80e SWAP5
0x80f MISSING 0xea
0x810 PUSH4 0xedc04917
0x815 MISSING 0xf9
0x816 MISSING 0xac
0x817 RETURN
0x818 CODESIZE
0x819 PUSH5 0xa919df11e1
0x81f MISSING 0xe3
0x820 SWAP11
0x821 PUSH8 0xe4a0bbd7115dd8e5
0x82a MISSING 0xec
0x82b DUP6
0x82c STOP
0x82d MISSING 0x29
---
0x802: STOP 
0x803: LOG S0 S1 S2
0x804: V775 = 0x627a7a723058
0x80b: V776 = SHA3 0x627a7a723058 S3
0x80c: V777 = CALLDATASIZE
0x80d: REVERT V777 V776
0x80f: MISSING 0xea
0x810: V778 = 0xedc04917
0x815: MISSING 0xf9
0x816: MISSING 0xac
0x817: RETURN S0 S1
0x818: V779 = CODESIZE
0x819: V780 = 0xa919df11e1
0x81f: MISSING 0xe3
0x821: V781 = 0xe4a0bbd7115dd8e5
0x82a: MISSING 0xec
0x82c: STOP 
0x82d: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S5, S1, S2, S3, S4, S0, 0xedc04917, 0xa919df11e1, V779, 0xe4a0bbd7115dd8e5, S11, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S0, S5, S0, S1, S2, S3, S4, S5]
Exit stack: []

================================

Function 0:
Public function signature: 0x1ff38308
Entry block: 0x5f6
Exit block: 0x609
Body: 0x5f6, 0x5fd, 0x601, 0x609, 0x6ff

Function 1:
Public function signature: 0x41c0e1b5
Entry block: 0x625
Exit block: 0x740
Body: 0x625, 0x62c, 0x630, 0x70e, 0x725, 0x729, 0x740, 0x744

Function 2:
Public function signature: 0x5600d2fa
Entry block: 0x63a
Exit block: 0x659
Body: 0x63a, 0x641, 0x645, 0x659, 0x752

Function 3:
Public function signature: 0x68306e43
Entry block: 0x66d
Exit block: 0x68c
Body: 0x66d, 0x674, 0x678, 0x68c, 0x767

Function 4:
Public function signature: 0x6a474002
Entry block: 0x69e
Exit block: 0x638
Body: 0x638, 0x69e, 0x6a5, 0x6a9, 0x779, 0x79a, 0x79e, 0x7e3, 0x7e7

Function 5:
Public function signature: 0x8da5cb5b
Entry block: 0x6b1
Exit block: 0x609
Body: 0x609, 0x6b1, 0x6b8, 0x6bc, 0x7ea

Function 6:
Public function signature: 0xa0a8e460
Entry block: 0x6c4
Exit block: 0x68c
Body: 0x68c, 0x6c4, 0x6cb, 0x6cf, 0x7f9

Function 7:
Public fallback function
Entry block: 0x69
Exit block: 0xb1
Body: 0x69, 0xb1

Function 8:
Private function
Entry block: 0x6d7
Exit block: 0x6e6
Body: 0x76, 0xb5, 0xc2, 0xd4, 0x11b, 0x128, 0x185, 0x192, 0x1a6, 0x1c4, 0x1ca, 0x21d, 0x22a, 0x240, 0x243, 0x24e, 0x259, 0x268, 0x271, 0x2b0, 0x2bd, 0x2cf, 0x316, 0x323, 0x380, 0x38d, 0x3a1, 0x3bf, 0x3c5, 0x414, 0x421, 0x458, 0x4ce, 0x4d9, 0x4e9, 0x4f6, 0x51e, 0x524, 0x54c, 0x6d7, 0x6e6, 0x6ed, 0x6f9

