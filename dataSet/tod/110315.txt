Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x9e]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x9e
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x9e
0xa: JUMPI 0x9e V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xa0]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x97c1e25
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xa0
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x97c1e25
0x20: V14 = EQ V12 0x97c1e25
0x21: V15 = 0xa0
0x24: JUMPI 0xa0 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xb2]
---
0x25 DUP1
0x26 PUSH4 0xc36add8
0x2b EQ
0x2c PUSH2 0xb2
0x2f JUMPI
---
0x26: V16 = 0xc36add8
0x2b: V17 = EQ 0xc36add8 V12
0x2c: V18 = 0xb2
0x2f: JUMPI 0xb2 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xde]
---
0x30 DUP1
0x31 PUSH4 0x1b15982a
0x36 EQ
0x37 PUSH2 0xde
0x3a JUMPI
---
0x31: V19 = 0x1b15982a
0x36: V20 = EQ 0x1b15982a V12
0x37: V21 = 0xde
0x3a: JUMPI 0xde V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0xf4]
---
0x3b DUP1
0x3c PUSH4 0x26b85ee1
0x41 EQ
0x42 PUSH2 0xf4
0x45 JUMPI
---
0x3c: V22 = 0x26b85ee1
0x41: V23 = EQ 0x26b85ee1 V12
0x42: V24 = 0xf4
0x45: JUMPI 0xf4 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x120]
---
0x46 DUP1
0x47 PUSH4 0x5d37e2cc
0x4c EQ
0x4d PUSH2 0x120
0x50 JUMPI
---
0x47: V25 = 0x5d37e2cc
0x4c: V26 = EQ 0x5d37e2cc V12
0x4d: V27 = 0x120
0x50: JUMPI 0x120 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x14c]
---
0x51 DUP1
0x52 PUSH4 0x6b3fc293
0x57 EQ
0x58 PUSH2 0x14c
0x5b JUMPI
---
0x52: V28 = 0x6b3fc293
0x57: V29 = EQ 0x6b3fc293 V12
0x58: V30 = 0x14c
0x5b: JUMPI 0x14c V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x17b]
---
0x5c DUP1
0x5d PUSH4 0xb2a20cf0
0x62 EQ
0x63 PUSH2 0x17b
0x66 JUMPI
---
0x5d: V31 = 0xb2a20cf0
0x62: V32 = EQ 0xb2a20cf0 V12
0x63: V33 = 0x17b
0x66: JUMPI 0x17b V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x199]
---
0x67 DUP1
0x68 PUSH4 0xba45b0b8
0x6d EQ
0x6e PUSH2 0x199
0x71 JUMPI
---
0x68: V34 = 0xba45b0b8
0x6d: V35 = EQ 0xba45b0b8 V12
0x6e: V36 = 0x199
0x71: JUMPI 0x199 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x1bd]
---
0x72 DUP1
0x73 PUSH4 0xbd00b0c2
0x78 EQ
0x79 PUSH2 0x1bd
0x7c JUMPI
---
0x73: V37 = 0xbd00b0c2
0x78: V38 = EQ 0xbd00b0c2 V12
0x79: V39 = 0x1bd
0x7c: JUMPI 0x1bd V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x1db]
---
0x7d DUP1
0x7e PUSH4 0xc77911aa
0x83 EQ
0x84 PUSH2 0x1db
0x87 JUMPI
---
0x7e: V40 = 0xc77911aa
0x83: V41 = EQ 0xc77911aa V12
0x84: V42 = 0x1db
0x87: JUMPI 0x1db V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x20b]
---
0x88 DUP1
0x89 PUSH4 0xc8db233e
0x8e EQ
0x8f PUSH2 0x20b
0x92 JUMPI
---
0x89: V43 = 0xc8db233e
0x8e: V44 = EQ 0xc8db233e V12
0x8f: V45 = 0x20b
0x92: JUMPI 0x20b V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x229]
---
0x93 DUP1
0x94 PUSH4 0xdc33feeb
0x99 EQ
0x9a PUSH2 0x229
0x9d JUMPI
---
0x94: V46 = 0xdc33feeb
0x99: V47 = EQ 0xdc33feeb V12
0x9a: V48 = 0x229
0x9d: JUMPI 0x229 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0x9f]
---
Predecessors: [0x0, 0x93]
Successors: []
---
0x9e JUMPDEST
0x9f INVALID
---
0x9e: JUMPDEST 
0x9f: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa0
[0xa0:0xa6]
---
Predecessors: [0xb]
Successors: [0xa7, 0xa8]
---
0xa0 JUMPDEST
0xa1 CALLVALUE
0xa2 ISZERO
0xa3 PUSH2 0xa8
0xa6 JUMPI
---
0xa0: JUMPDEST 
0xa1: V49 = CALLVALUE
0xa2: V50 = ISZERO V49
0xa3: V51 = 0xa8
0xa6: JUMPI 0xa8 V50
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa7
[0xa7:0xa7]
---
Predecessors: [0xa0]
Successors: []
---
0xa7 INVALID
---
0xa7: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa8
[0xa8:0xaf]
---
Predecessors: [0xa0]
Successors: [0x255]
---
0xa8 JUMPDEST
0xa9 PUSH2 0xb0
0xac PUSH2 0x255
0xaf JUMP
---
0xa8: JUMPDEST 
0xa9: V52 = 0xb0
0xac: V53 = 0x255
0xaf: JUMP 0x255
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xb0]
Exit stack: [V12, 0xb0]

================================

Block 0xb0
[0xb0:0xb1]
---
Predecessors: [0x2c9, 0x4e8, 0x82b, 0x918, 0xb16]
Successors: []
---
0xb0 JUMPDEST
0xb1 STOP
---
0xb0: JUMPDEST 
0xb1: STOP 
---
Entry stack: [V12, 0xb0, V56, V58, V66, V69, V71, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb0, V56, V58, V66, V69, V71, S0]

================================

Block 0xb2
[0xb2:0xdb]
---
Predecessors: [0x25, 0xe0e]
Successors: [0x29c]
---
0xb2 JUMPDEST
0xb3 PUSH2 0xb0
0xb6 PUSH1 0x4
0xb8 CALLDATALOAD
0xb9 PUSH1 0x24
0xbb CALLDATALOAD
0xbc PUSH1 0x1
0xbe PUSH1 0xa0
0xc0 PUSH1 0x2
0xc2 EXP
0xc3 SUB
0xc4 PUSH1 0x44
0xc6 CALLDATALOAD
0xc7 DUP2
0xc8 AND
0xc9 SWAP1
0xca PUSH1 0x64
0xcc CALLDATALOAD
0xcd DUP2
0xce AND
0xcf SWAP1
0xd0 PUSH1 0x84
0xd2 CALLDATALOAD
0xd3 SWAP1
0xd4 PUSH1 0xa4
0xd6 CALLDATALOAD
0xd7 AND
0xd8 PUSH2 0x29c
0xdb JUMP
---
0xb2: JUMPDEST 
0xb3: V54 = 0xb0
0xb6: V55 = 0x4
0xb8: V56 = CALLDATALOAD 0x4
0xb9: V57 = 0x24
0xbb: V58 = CALLDATALOAD 0x24
0xbc: V59 = 0x1
0xbe: V60 = 0xa0
0xc0: V61 = 0x2
0xc2: V62 = EXP 0x2 0xa0
0xc3: V63 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc4: V64 = 0x44
0xc6: V65 = CALLDATALOAD 0x44
0xc8: V66 = AND 0xffffffffffffffffffffffffffffffffffffffff V65
0xca: V67 = 0x64
0xcc: V68 = CALLDATALOAD 0x64
0xce: V69 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0xd0: V70 = 0x84
0xd2: V71 = CALLDATALOAD 0x84
0xd4: V72 = 0xa4
0xd6: V73 = CALLDATALOAD 0xa4
0xd7: V74 = AND V73 0xffffffffffffffffffffffffffffffffffffffff
0xd8: V75 = 0x29c
0xdb: JUMP 0x29c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xb0, V56, V58, V66, V69, V71, V74]
Exit stack: [V12, 0xb0, V56, V58, V66, V69, V71, V74]

================================

Block 0xdc
[0xdc:0xdd]
---
Predecessors: []
Successors: []
---
0xdc JUMPDEST
0xdd STOP
---
0xdc: JUMPDEST 
0xdd: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xde
[0xde:0xf1]
---
Predecessors: [0x30]
Successors: [0x2d1]
---
0xde JUMPDEST
0xdf PUSH2 0xb0
0xe2 PUSH1 0x1
0xe4 PUSH1 0xa0
0xe6 PUSH1 0x2
0xe8 EXP
0xe9 SUB
0xea PUSH1 0x4
0xec CALLDATALOAD
0xed AND
0xee PUSH2 0x2d1
0xf1 JUMP
---
0xde: JUMPDEST 
0xdf: V76 = 0xb0
0xe2: V77 = 0x1
0xe4: V78 = 0xa0
0xe6: V79 = 0x2
0xe8: V80 = EXP 0x2 0xa0
0xe9: V81 = SUB 0x10000000000000000000000000000000000000000 0x1
0xea: V82 = 0x4
0xec: V83 = CALLDATALOAD 0x4
0xed: V84 = AND V83 0xffffffffffffffffffffffffffffffffffffffff
0xee: V85 = 0x2d1
0xf1: JUMP 0x2d1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xb0, V84]
Exit stack: [V12, 0xb0, V84]

================================

Block 0xf2
[0xf2:0xf3]
---
Predecessors: []
Successors: []
---
0xf2 JUMPDEST
0xf3 STOP
---
0xf2: JUMPDEST 
0xf3: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xf4
[0xf4:0xfa]
---
Predecessors: [0x3b]
Successors: [0xfb, 0xfc]
---
0xf4 JUMPDEST
0xf5 CALLVALUE
0xf6 ISZERO
0xf7 PUSH2 0xfc
0xfa JUMPI
---
0xf4: JUMPDEST 
0xf5: V86 = CALLVALUE
0xf6: V87 = ISZERO V86
0xf7: V88 = 0xfc
0xfa: JUMPI 0xfc V87
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xfb
[0xfb:0xfb]
---
Predecessors: [0xf4]
Successors: []
---
0xfb INVALID
---
0xfb: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xfc
[0xfc:0x103]
---
Predecessors: [0xf4]
Successors: [0x4ec]
---
0xfc JUMPDEST
0xfd PUSH2 0x104
0x100 PUSH2 0x4ec
0x103 JUMP
---
0xfc: JUMPDEST 
0xfd: V89 = 0x104
0x100: V90 = 0x4ec
0x103: JUMP 0x4ec
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x104]
Exit stack: [V12, 0x104]

================================

Block 0x104
[0x104:0x11f]
---
Predecessors: [0x4ec, 0x4fb, 0xd48]
Successors: []
---
0x104 JUMPDEST
0x105 PUSH1 0x40
0x107 DUP1
0x108 MLOAD
0x109 PUSH1 0x1
0x10b PUSH1 0xa0
0x10d PUSH1 0x2
0x10f EXP
0x110 SUB
0x111 SWAP1
0x112 SWAP3
0x113 AND
0x114 DUP3
0x115 MSTORE
0x116 MLOAD
0x117 SWAP1
0x118 DUP2
0x119 SWAP1
0x11a SUB
0x11b PUSH1 0x20
0x11d ADD
0x11e SWAP1
0x11f RETURN
---
0x104: JUMPDEST 
0x105: V91 = 0x40
0x108: V92 = M[0x40]
0x109: V93 = 0x1
0x10b: V94 = 0xa0
0x10d: V95 = 0x2
0x10f: V96 = EXP 0x2 0xa0
0x110: V97 = SUB 0x10000000000000000000000000000000000000000 0x1
0x113: V98 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x115: M[V92] = V98
0x116: V99 = M[0x40]
0x11a: V100 = SUB V92 V99
0x11b: V101 = 0x20
0x11d: V102 = ADD 0x20 V100
0x11f: RETURN V99 V102
---
Entry stack: [V12, 0x104, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x104]

================================

Block 0x120
[0x120:0x126]
---
Predecessors: [0x46]
Successors: [0x127, 0x128]
---
0x120 JUMPDEST
0x121 CALLVALUE
0x122 ISZERO
0x123 PUSH2 0x128
0x126 JUMPI
---
0x120: JUMPDEST 
0x121: V103 = CALLVALUE
0x122: V104 = ISZERO V103
0x123: V105 = 0x128
0x126: JUMPI 0x128 V104
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x127
[0x127:0x127]
---
Predecessors: [0x120]
Successors: []
---
0x127 INVALID
---
0x127: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x128
[0x128:0x12f]
---
Predecessors: [0x120]
Successors: [0x4fb]
---
0x128 JUMPDEST
0x129 PUSH2 0x104
0x12c PUSH2 0x4fb
0x12f JUMP
---
0x128: JUMPDEST 
0x129: V106 = 0x104
0x12c: V107 = 0x4fb
0x12f: JUMP 0x4fb
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x104]
Exit stack: [V12, 0x104]

================================

Block 0x130
[0x130:0x14b]
---
Predecessors: []
Successors: []
---
0x130 JUMPDEST
0x131 PUSH1 0x40
0x133 DUP1
0x134 MLOAD
0x135 PUSH1 0x1
0x137 PUSH1 0xa0
0x139 PUSH1 0x2
0x13b EXP
0x13c SUB
0x13d SWAP1
0x13e SWAP3
0x13f AND
0x140 DUP3
0x141 MSTORE
0x142 MLOAD
0x143 SWAP1
0x144 DUP2
0x145 SWAP1
0x146 SUB
0x147 PUSH1 0x20
0x149 ADD
0x14a SWAP1
0x14b RETURN
---
0x130: JUMPDEST 
0x131: V108 = 0x40
0x134: V109 = M[0x40]
0x135: V110 = 0x1
0x137: V111 = 0xa0
0x139: V112 = 0x2
0x13b: V113 = EXP 0x2 0xa0
0x13c: V114 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13f: V115 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x141: M[V109] = V115
0x142: V116 = M[0x40]
0x146: V117 = SUB V109 V116
0x147: V118 = 0x20
0x149: V119 = ADD 0x20 V117
0x14b: RETURN V116 V119
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x14c
[0x14c:0x178]
---
Predecessors: [0x51]
Successors: [0x50a]
---
0x14c JUMPDEST
0x14d PUSH2 0xb0
0x150 PUSH1 0x4
0x152 CALLDATALOAD
0x153 PUSH1 0x24
0x155 CALLDATALOAD
0x156 PUSH1 0x1
0x158 PUSH1 0xa0
0x15a PUSH1 0x2
0x15c EXP
0x15d SUB
0x15e PUSH1 0x44
0x160 CALLDATALOAD
0x161 DUP2
0x162 AND
0x163 SWAP1
0x164 PUSH1 0x64
0x166 CALLDATALOAD
0x167 DUP2
0x168 AND
0x169 SWAP1
0x16a PUSH1 0x84
0x16c CALLDATALOAD
0x16d SWAP1
0x16e PUSH1 0xa4
0x170 CALLDATALOAD
0x171 AND
0x172 PUSH1 0xc4
0x174 CALLDATALOAD
0x175 PUSH2 0x50a
0x178 JUMP
---
0x14c: JUMPDEST 
0x14d: V120 = 0xb0
0x150: V121 = 0x4
0x152: V122 = CALLDATALOAD 0x4
0x153: V123 = 0x24
0x155: V124 = CALLDATALOAD 0x24
0x156: V125 = 0x1
0x158: V126 = 0xa0
0x15a: V127 = 0x2
0x15c: V128 = EXP 0x2 0xa0
0x15d: V129 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15e: V130 = 0x44
0x160: V131 = CALLDATALOAD 0x44
0x162: V132 = AND 0xffffffffffffffffffffffffffffffffffffffff V131
0x164: V133 = 0x64
0x166: V134 = CALLDATALOAD 0x64
0x168: V135 = AND 0xffffffffffffffffffffffffffffffffffffffff V134
0x16a: V136 = 0x84
0x16c: V137 = CALLDATALOAD 0x84
0x16e: V138 = 0xa4
0x170: V139 = CALLDATALOAD 0xa4
0x171: V140 = AND V139 0xffffffffffffffffffffffffffffffffffffffff
0x172: V141 = 0xc4
0x174: V142 = CALLDATALOAD 0xc4
0x175: V143 = 0x50a
0x178: JUMP 0x50a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xb0, V122, V124, V132, V135, V137, V140, V142]
Exit stack: [V12, 0xb0, V122, V124, V132, V135, V137, V140, V142]

================================

Block 0x179
[0x179:0x17a]
---
Predecessors: []
Successors: []
---
0x179 JUMPDEST
0x17a STOP
---
0x179: JUMPDEST 
0x17a: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x17b
[0x17b:0x181]
---
Predecessors: [0x5c]
Successors: [0x182, 0x183]
---
0x17b JUMPDEST
0x17c CALLVALUE
0x17d ISZERO
0x17e PUSH2 0x183
0x181 JUMPI
---
0x17b: JUMPDEST 
0x17c: V144 = CALLVALUE
0x17d: V145 = ISZERO V144
0x17e: V146 = 0x183
0x181: JUMPI 0x183 V145
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x182
[0x182:0x182]
---
Predecessors: [0x17b]
Successors: []
---
0x182 INVALID
---
0x182: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x183
[0x183:0x196]
---
Predecessors: [0x17b]
Successors: [0x836]
---
0x183 JUMPDEST
0x184 PUSH2 0xb0
0x187 PUSH1 0x1
0x189 PUSH1 0xa0
0x18b PUSH1 0x2
0x18d EXP
0x18e SUB
0x18f PUSH1 0x4
0x191 CALLDATALOAD
0x192 AND
0x193 PUSH2 0x836
0x196 JUMP
---
0x183: JUMPDEST 
0x184: V147 = 0xb0
0x187: V148 = 0x1
0x189: V149 = 0xa0
0x18b: V150 = 0x2
0x18d: V151 = EXP 0x2 0xa0
0x18e: V152 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18f: V153 = 0x4
0x191: V154 = CALLDATALOAD 0x4
0x192: V155 = AND V154 0xffffffffffffffffffffffffffffffffffffffff
0x193: V156 = 0x836
0x196: JUMP 0x836
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xb0, V155]
Exit stack: [V12, 0xb0, V155]

================================

Block 0x197
[0x197:0x198]
---
Predecessors: []
Successors: []
---
0x197 JUMPDEST
0x198 STOP
---
0x197: JUMPDEST 
0x198: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x199
[0x199:0x19f]
---
Predecessors: [0x67]
Successors: [0x1a0, 0x1a1]
---
0x199 JUMPDEST
0x19a CALLVALUE
0x19b ISZERO
0x19c PUSH2 0x1a1
0x19f JUMPI
---
0x199: JUMPDEST 
0x19a: V157 = CALLVALUE
0x19b: V158 = ISZERO V157
0x19c: V159 = 0x1a1
0x19f: JUMPI 0x1a1 V158
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a0
[0x1a0:0x1a0]
---
Predecessors: [0x199]
Successors: []
---
0x1a0 INVALID
---
0x1a0: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a1
[0x1a1:0x1ba]
---
Predecessors: [0x199]
Successors: [0x91b]
---
0x1a1 JUMPDEST
0x1a2 PUSH2 0xb0
0x1a5 PUSH1 0x1
0x1a7 PUSH1 0xa0
0x1a9 PUSH1 0x2
0x1ab EXP
0x1ac SUB
0x1ad PUSH1 0x4
0x1af CALLDATALOAD
0x1b0 DUP2
0x1b1 AND
0x1b2 SWAP1
0x1b3 PUSH1 0x24
0x1b5 CALLDATALOAD
0x1b6 AND
0x1b7 PUSH2 0x91b
0x1ba JUMP
---
0x1a1: JUMPDEST 
0x1a2: V160 = 0xb0
0x1a5: V161 = 0x1
0x1a7: V162 = 0xa0
0x1a9: V163 = 0x2
0x1ab: V164 = EXP 0x2 0xa0
0x1ac: V165 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ad: V166 = 0x4
0x1af: V167 = CALLDATALOAD 0x4
0x1b1: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff V167
0x1b3: V169 = 0x24
0x1b5: V170 = CALLDATALOAD 0x24
0x1b6: V171 = AND V170 0xffffffffffffffffffffffffffffffffffffffff
0x1b7: V172 = 0x91b
0x1ba: JUMP 0x91b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xb0, V168, V171]
Exit stack: [V12, 0xb0, V168, V171]

================================

Block 0x1bb
[0x1bb:0x1bc]
---
Predecessors: []
Successors: []
---
0x1bb JUMPDEST
0x1bc STOP
---
0x1bb: JUMPDEST 
0x1bc: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1bd
[0x1bd:0x1c3]
---
Predecessors: [0x72]
Successors: [0x1c4, 0x1c5]
---
0x1bd JUMPDEST
0x1be CALLVALUE
0x1bf ISZERO
0x1c0 PUSH2 0x1c5
0x1c3 JUMPI
---
0x1bd: JUMPDEST 
0x1be: V173 = CALLVALUE
0x1bf: V174 = ISZERO V173
0x1c0: V175 = 0x1c5
0x1c3: JUMPI 0x1c5 V174
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1c4
[0x1c4:0x1c4]
---
Predecessors: [0x1bd]
Successors: []
---
0x1c4 INVALID
---
0x1c4: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1c5
[0x1c5:0x1d8]
---
Predecessors: [0x1bd]
Successors: [0xad1]
---
0x1c5 JUMPDEST
0x1c6 PUSH2 0xb0
0x1c9 PUSH1 0x1
0x1cb PUSH1 0xa0
0x1cd PUSH1 0x2
0x1cf EXP
0x1d0 SUB
0x1d1 PUSH1 0x4
0x1d3 CALLDATALOAD
0x1d4 AND
0x1d5 PUSH2 0xad1
0x1d8 JUMP
---
0x1c5: JUMPDEST 
0x1c6: V176 = 0xb0
0x1c9: V177 = 0x1
0x1cb: V178 = 0xa0
0x1cd: V179 = 0x2
0x1cf: V180 = EXP 0x2 0xa0
0x1d0: V181 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d1: V182 = 0x4
0x1d3: V183 = CALLDATALOAD 0x4
0x1d4: V184 = AND V183 0xffffffffffffffffffffffffffffffffffffffff
0x1d5: V185 = 0xad1
0x1d8: JUMP 0xad1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xb0, V184]
Exit stack: [V12, 0xb0, V184]

================================

Block 0x1d9
[0x1d9:0x1da]
---
Predecessors: []
Successors: []
---
0x1d9 JUMPDEST
0x1da STOP
---
0x1d9: JUMPDEST 
0x1da: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1db
[0x1db:0x1e1]
---
Predecessors: [0x7d]
Successors: [0x1e2, 0x1e3]
---
0x1db JUMPDEST
0x1dc CALLVALUE
0x1dd ISZERO
0x1de PUSH2 0x1e3
0x1e1 JUMPI
---
0x1db: JUMPDEST 
0x1dc: V186 = CALLVALUE
0x1dd: V187 = ISZERO V186
0x1de: V188 = 0x1e3
0x1e1: JUMPI 0x1e3 V187
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e2
[0x1e2:0x1e2]
---
Predecessors: [0x1db]
Successors: []
---
0x1e2 INVALID
---
0x1e2: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e3
[0x1e3:0x1f6]
---
Predecessors: [0x1db]
Successors: [0xb19]
---
0x1e3 JUMPDEST
0x1e4 PUSH2 0x1f7
0x1e7 PUSH1 0x1
0x1e9 PUSH1 0xa0
0x1eb PUSH1 0x2
0x1ed EXP
0x1ee SUB
0x1ef PUSH1 0x4
0x1f1 CALLDATALOAD
0x1f2 AND
0x1f3 PUSH2 0xb19
0x1f6 JUMP
---
0x1e3: JUMPDEST 
0x1e4: V189 = 0x1f7
0x1e7: V190 = 0x1
0x1e9: V191 = 0xa0
0x1eb: V192 = 0x2
0x1ed: V193 = EXP 0x2 0xa0
0x1ee: V194 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ef: V195 = 0x4
0x1f1: V196 = CALLDATALOAD 0x4
0x1f2: V197 = AND V196 0xffffffffffffffffffffffffffffffffffffffff
0x1f3: V198 = 0xb19
0x1f6: JUMP 0xb19
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1f7, V197]
Exit stack: [V12, 0x1f7, V197]

================================

Block 0x1f7
[0x1f7:0x20a]
---
Predecessors: [0xb19]
Successors: []
---
0x1f7 JUMPDEST
0x1f8 PUSH1 0x40
0x1fa DUP1
0x1fb MLOAD
0x1fc SWAP2
0x1fd ISZERO
0x1fe ISZERO
0x1ff DUP3
0x200 MSTORE
0x201 MLOAD
0x202 SWAP1
0x203 DUP2
0x204 SWAP1
0x205 SUB
0x206 PUSH1 0x20
0x208 ADD
0x209 SWAP1
0x20a RETURN
---
0x1f7: JUMPDEST 
0x1f8: V199 = 0x40
0x1fb: V200 = M[0x40]
0x1fd: V201 = ISZERO V1067
0x1fe: V202 = ISZERO V201
0x200: M[V200] = V202
0x201: V203 = M[0x40]
0x205: V204 = SUB V200 V203
0x206: V205 = 0x20
0x208: V206 = ADD 0x20 V204
0x20a: RETURN V203 V206
---
Entry stack: [V12, 0x1f7, V1067]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1f7]

================================

Block 0x20b
[0x20b:0x211]
---
Predecessors: [0x88]
Successors: [0x212, 0x213]
---
0x20b JUMPDEST
0x20c CALLVALUE
0x20d ISZERO
0x20e PUSH2 0x213
0x211 JUMPI
---
0x20b: JUMPDEST 
0x20c: V207 = CALLVALUE
0x20d: V208 = ISZERO V207
0x20e: V209 = 0x213
0x211: JUMPI 0x213 V208
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x212
[0x212:0x212]
---
Predecessors: [0x20b]
Successors: []
---
0x212 INVALID
---
0x212: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x213
[0x213:0x226]
---
Predecessors: [0x20b]
Successors: [0xb2e]
---
0x213 JUMPDEST
0x214 PUSH2 0xb0
0x217 PUSH1 0x1
0x219 PUSH1 0xa0
0x21b PUSH1 0x2
0x21d EXP
0x21e SUB
0x21f PUSH1 0x4
0x221 CALLDATALOAD
0x222 AND
0x223 PUSH2 0xb2e
0x226 JUMP
---
0x213: JUMPDEST 
0x214: V210 = 0xb0
0x217: V211 = 0x1
0x219: V212 = 0xa0
0x21b: V213 = 0x2
0x21d: V214 = EXP 0x2 0xa0
0x21e: V215 = SUB 0x10000000000000000000000000000000000000000 0x1
0x21f: V216 = 0x4
0x221: V217 = CALLDATALOAD 0x4
0x222: V218 = AND V217 0xffffffffffffffffffffffffffffffffffffffff
0x223: V219 = 0xb2e
0x226: JUMP 0xb2e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xb0, V218]
Exit stack: [V12, 0xb0, V218]

================================

Block 0x227
[0x227:0x228]
---
Predecessors: []
Successors: []
---
0x227 JUMPDEST
0x228 STOP
---
0x227: JUMPDEST 
0x228: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x229
[0x229:0x22f]
---
Predecessors: [0x93]
Successors: [0x230, 0x231]
---
0x229 JUMPDEST
0x22a CALLVALUE
0x22b ISZERO
0x22c PUSH2 0x231
0x22f JUMPI
---
0x229: JUMPDEST 
0x22a: V220 = CALLVALUE
0x22b: V221 = ISZERO V220
0x22c: V222 = 0x231
0x22f: JUMPI 0x231 V221
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x230
[0x230:0x230]
---
Predecessors: [0x229]
Successors: []
---
0x230 INVALID
---
0x230: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x231
[0x231:0x238]
---
Predecessors: [0x229]
Successors: [0xd48]
---
0x231 JUMPDEST
0x232 PUSH2 0x104
0x235 PUSH2 0xd48
0x238 JUMP
---
0x231: JUMPDEST 
0x232: V223 = 0x104
0x235: V224 = 0xd48
0x238: JUMP 0xd48
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x104]
Exit stack: [V12, 0x104]

================================

Block 0x239
[0x239:0x254]
---
Predecessors: []
Successors: []
---
0x239 JUMPDEST
0x23a PUSH1 0x40
0x23c DUP1
0x23d MLOAD
0x23e PUSH1 0x1
0x240 PUSH1 0xa0
0x242 PUSH1 0x2
0x244 EXP
0x245 SUB
0x246 SWAP1
0x247 SWAP3
0x248 AND
0x249 DUP3
0x24a MSTORE
0x24b MLOAD
0x24c SWAP1
0x24d DUP2
0x24e SWAP1
0x24f SUB
0x250 PUSH1 0x20
0x252 ADD
0x253 SWAP1
0x254 RETURN
---
0x239: JUMPDEST 
0x23a: V225 = 0x40
0x23d: V226 = M[0x40]
0x23e: V227 = 0x1
0x240: V228 = 0xa0
0x242: V229 = 0x2
0x244: V230 = EXP 0x2 0xa0
0x245: V231 = SUB 0x10000000000000000000000000000000000000000 0x1
0x248: V232 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x24a: M[V226] = V232
0x24b: V233 = M[0x40]
0x24f: V234 = SUB V226 V233
0x250: V235 = 0x20
0x252: V236 = ADD 0x20 V234
0x254: RETURN V233 V236
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x255
[0x255:0x26c]
---
Predecessors: [0xa8]
Successors: [0x26d, 0x280]
---
0x255 JUMPDEST
0x256 PUSH1 0x3
0x258 SLOAD
0x259 CALLER
0x25a PUSH1 0x1
0x25c PUSH1 0xa0
0x25e PUSH1 0x2
0x260 EXP
0x261 SUB
0x262 SWAP1
0x263 DUP2
0x264 AND
0x265 SWAP2
0x266 AND
0x267 EQ
0x268 DUP1
0x269 PUSH2 0x280
0x26c JUMPI
---
0x255: JUMPDEST 
0x256: V237 = 0x3
0x258: V238 = S[0x3]
0x259: V239 = CALLER
0x25a: V240 = 0x1
0x25c: V241 = 0xa0
0x25e: V242 = 0x2
0x260: V243 = EXP 0x2 0xa0
0x261: V244 = SUB 0x10000000000000000000000000000000000000000 0x1
0x264: V245 = AND 0xffffffffffffffffffffffffffffffffffffffff V239
0x266: V246 = AND V238 0xffffffffffffffffffffffffffffffffffffffff
0x267: V247 = EQ V246 V245
0x269: V248 = 0x280
0x26c: JUMPI 0x280 V247
---
Entry stack: [V12, 0xb0]
Stack pops: 0
Stack additions: [V247]
Exit stack: [V12, 0xb0, V247]

================================

Block 0x26d
[0x26d:0x27f]
---
Predecessors: [0x255]
Successors: [0x280]
---
0x26d POP
0x26e PUSH1 0x1
0x270 SLOAD
0x271 CALLER
0x272 PUSH1 0x1
0x274 PUSH1 0xa0
0x276 PUSH1 0x2
0x278 EXP
0x279 SUB
0x27a SWAP1
0x27b DUP2
0x27c AND
0x27d SWAP2
0x27e AND
0x27f EQ
---
0x26e: V249 = 0x1
0x270: V250 = S[0x1]
0x271: V251 = CALLER
0x272: V252 = 0x1
0x274: V253 = 0xa0
0x276: V254 = 0x2
0x278: V255 = EXP 0x2 0xa0
0x279: V256 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27c: V257 = AND 0xffffffffffffffffffffffffffffffffffffffff V251
0x27e: V258 = AND V250 0xffffffffffffffffffffffffffffffffffffffff
0x27f: V259 = EQ V258 V257
---
Entry stack: [V12, 0xb0, V247]
Stack pops: 1
Stack additions: [V259]
Exit stack: [V12, 0xb0, V259]

================================

Block 0x280
[0x280:0x286]
---
Predecessors: [0x255, 0x26d]
Successors: [0x287, 0x28c]
---
0x280 JUMPDEST
0x281 ISZERO
0x282 ISZERO
0x283 PUSH2 0x28c
0x286 JUMPI
---
0x280: JUMPDEST 
0x281: V260 = ISZERO S0
0x282: V261 = ISZERO V260
0x283: V262 = 0x28c
0x286: JUMPI 0x28c V261
---
Entry stack: [V12, 0xb0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xb0]

================================

Block 0x287
[0x287:0x28b]
---
Predecessors: [0x280]
Successors: []
---
0x287 PUSH1 0x0
0x289 PUSH1 0x0
0x28b REVERT
---
0x287: V263 = 0x0
0x289: V264 = 0x0
0x28b: REVERT 0x0 0x0
---
Entry stack: [V12, 0xb0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb0]

================================

Block 0x28c
[0x28c:0x299]
---
Predecessors: [0x280]
Successors: []
---
0x28c JUMPDEST
0x28d PUSH1 0x3
0x28f SLOAD
0x290 PUSH1 0x1
0x292 PUSH1 0xa0
0x294 PUSH1 0x2
0x296 EXP
0x297 SUB
0x298 AND
0x299 SELFDESTRUCT
---
0x28c: JUMPDEST 
0x28d: V265 = 0x3
0x28f: V266 = S[0x3]
0x290: V267 = 0x1
0x292: V268 = 0xa0
0x294: V269 = 0x2
0x296: V270 = EXP 0x2 0xa0
0x297: V271 = SUB 0x10000000000000000000000000000000000000000 0x1
0x298: V272 = AND 0xffffffffffffffffffffffffffffffffffffffff V266
0x299: SELFDESTRUCT V272
---
Entry stack: [V12, 0xb0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb0]

================================

Block 0x29a
[0x29a:0x29b]
---
Predecessors: []
Successors: []
Has unresolved jump.
---
0x29a JUMPDEST
0x29b JUMP
---
0x29a: JUMPDEST 
0x29b: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x29c
[0x29c:0x2b2]
---
Predecessors: [0xb2]
Successors: [0x2b3, 0x2b8]
---
0x29c JUMPDEST
0x29d PUSH1 0x1
0x29f SLOAD
0x2a0 CALLER
0x2a1 PUSH1 0x1
0x2a3 PUSH1 0xa0
0x2a5 PUSH1 0x2
0x2a7 EXP
0x2a8 SUB
0x2a9 SWAP1
0x2aa DUP2
0x2ab AND
0x2ac SWAP2
0x2ad AND
0x2ae EQ
0x2af PUSH2 0x2b8
0x2b2 JUMPI
---
0x29c: JUMPDEST 
0x29d: V273 = 0x1
0x29f: V274 = S[0x1]
0x2a0: V275 = CALLER
0x2a1: V276 = 0x1
0x2a3: V277 = 0xa0
0x2a5: V278 = 0x2
0x2a7: V279 = EXP 0x2 0xa0
0x2a8: V280 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ab: V281 = AND 0xffffffffffffffffffffffffffffffffffffffff V275
0x2ad: V282 = AND V274 0xffffffffffffffffffffffffffffffffffffffff
0x2ae: V283 = EQ V282 V281
0x2af: V284 = 0x2b8
0x2b2: JUMPI 0x2b8 V283
---
Entry stack: [V12, 0xb0, V56, V58, V66, V69, V71, V74]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb0, V56, V58, V66, V69, V71, V74]

================================

Block 0x2b3
[0x2b3:0x2b7]
---
Predecessors: [0x29c]
Successors: []
---
0x2b3 PUSH1 0x0
0x2b5 PUSH1 0x0
0x2b7 REVERT
---
0x2b3: V285 = 0x0
0x2b5: V286 = 0x0
0x2b7: REVERT 0x0 0x0
---
Entry stack: [V12, 0xb0, V56, V58, V66, V69, V71, V74]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb0, V56, V58, V66, V69, V71, V74]

================================

Block 0x2b8
[0x2b8:0x2c7]
---
Predecessors: [0x29c]
Successors: [0x50a]
---
0x2b8 JUMPDEST
0x2b9 PUSH2 0x2c8
0x2bc DUP7
0x2bd DUP7
0x2be DUP7
0x2bf DUP7
0x2c0 DUP7
0x2c1 DUP7
0x2c2 PUSH1 0x1
0x2c4 PUSH2 0x50a
0x2c7 JUMP
---
0x2b8: JUMPDEST 
0x2b9: V287 = 0x2c8
0x2c2: V288 = 0x1
0x2c4: V289 = 0x50a
0x2c7: JUMP 0x50a
---
Entry stack: [V12, 0xb0, V56, V58, V66, V69, V71, V74]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, 0x2c8, S5, S4, S3, S2, S1, S0, 0x1]
Exit stack: [V12, 0xb0, V56, V58, V66, V69, V71, V74, 0x2c8, V56, V58, V66, V69, V71, V74, 0x1]

================================

Block 0x2c8
[0x2c8:0x2c8]
---
Predecessors: [0x82b, 0xaba]
Successors: [0x2c9]
---
0x2c8 JUMPDEST
---
0x2c8: JUMPDEST 
---
Entry stack: [V12, 0xb0, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb0, S5, S4, S3, S2, S1, S0]

================================

Block 0x2c9
[0x2c9:0x2d0]
---
Predecessors: [0x2c8]
Successors: [0xb0]
---
0x2c9 JUMPDEST
0x2ca POP
0x2cb POP
0x2cc POP
0x2cd POP
0x2ce POP
0x2cf POP
0x2d0 JUMP
---
0x2c9: JUMPDEST 
0x2d0: JUMP 0xb0
---
Entry stack: [V12, 0xb0, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: []
Exit stack: [V12]

================================

Block 0x2d1
[0x2d1:0x2f3]
---
Predecessors: [0xde]
Successors: [0x2f4, 0x2f9]
---
0x2d1 JUMPDEST
0x2d2 PUSH1 0x1
0x2d4 PUSH1 0xa0
0x2d6 PUSH1 0x2
0x2d8 EXP
0x2d9 SUB
0x2da DUP2
0x2db AND
0x2dc PUSH1 0x0
0x2de SWAP1
0x2df DUP2
0x2e0 MSTORE
0x2e1 PUSH1 0x20
0x2e3 DUP2
0x2e4 SWAP1
0x2e5 MSTORE
0x2e6 PUSH1 0x40
0x2e8 DUP2
0x2e9 SHA3
0x2ea SLOAD
0x2eb PUSH1 0xff
0x2ed AND
0x2ee ISZERO
0x2ef ISZERO
0x2f0 PUSH2 0x2f9
0x2f3 JUMPI
---
0x2d1: JUMPDEST 
0x2d2: V290 = 0x1
0x2d4: V291 = 0xa0
0x2d6: V292 = 0x2
0x2d8: V293 = EXP 0x2 0xa0
0x2d9: V294 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2db: V295 = AND V84 0xffffffffffffffffffffffffffffffffffffffff
0x2dc: V296 = 0x0
0x2e0: M[0x0] = V295
0x2e1: V297 = 0x20
0x2e5: M[0x20] = 0x0
0x2e6: V298 = 0x40
0x2e9: V299 = SHA3 0x0 0x40
0x2ea: V300 = S[V299]
0x2eb: V301 = 0xff
0x2ed: V302 = AND 0xff V300
0x2ee: V303 = ISZERO V302
0x2ef: V304 = ISZERO V303
0x2f0: V305 = 0x2f9
0x2f3: JUMPI 0x2f9 V304
---
Entry stack: [V12, 0xb0, V84]
Stack pops: 1
Stack additions: [S0, 0x0]
Exit stack: [V12, 0xb0, V84, 0x0]

================================

Block 0x2f4
[0x2f4:0x2f8]
---
Predecessors: [0x2d1]
Successors: []
---
0x2f4 PUSH1 0x0
0x2f6 PUSH1 0x0
0x2f8 REVERT
---
0x2f4: V306 = 0x0
0x2f6: V307 = 0x0
0x2f8: REVERT 0x0 0x0
---
Entry stack: [V12, 0xb0, V84, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb0, V84, 0x0]

================================

Block 0x2f9
[0x2f9:0x36a]
---
Predecessors: [0x2d1]
Successors: [0x36b, 0x36c]
---
0x2f9 JUMPDEST
0x2fa POP
0x2fb PUSH1 0x1
0x2fd PUSH1 0xa0
0x2ff PUSH1 0x2
0x301 EXP
0x302 SUB
0x303 DUP1
0x304 DUP3
0x305 AND
0x306 PUSH1 0x0
0x308 DUP2
0x309 DUP2
0x30a MSTORE
0x30b PUSH1 0x20
0x30d DUP2
0x30e SWAP1
0x30f MSTORE
0x310 PUSH1 0x40
0x312 DUP1
0x313 DUP3
0x314 SHA3
0x315 DUP1
0x316 SLOAD
0x317 PUSH1 0xff
0x319 NOT
0x31a AND
0x31b SWAP1
0x31c SSTORE
0x31d DUP1
0x31e MLOAD
0x31f PUSH32 0x1b15982a00000000000000000000000000000000000000000000000000000000
0x340 DUP2
0x341 MSTORE
0x342 CALLER
0x343 SWAP1
0x344 SWAP5
0x345 AND
0x346 PUSH1 0x4
0x348 DUP6
0x349 ADD
0x34a MSTORE
0x34b MLOAD
0x34c DUP5
0x34d SWAP4
0x34e PUSH4 0x1b15982a
0x353 SWAP3
0x354 CALLVALUE
0x355 SWAP3
0x356 PUSH1 0x24
0x358 DUP1
0x359 DUP5
0x35a ADD
0x35b SWAP4
0x35c DUP3
0x35d SWAP1
0x35e SUB
0x35f ADD
0x360 DUP2
0x361 DUP6
0x362 DUP9
0x363 DUP1
0x364 EXTCODESIZE
0x365 ISZERO
0x366 ISZERO
0x367 PUSH2 0x36c
0x36a JUMPI
---
0x2f9: JUMPDEST 
0x2fb: V308 = 0x1
0x2fd: V309 = 0xa0
0x2ff: V310 = 0x2
0x301: V311 = EXP 0x2 0xa0
0x302: V312 = SUB 0x10000000000000000000000000000000000000000 0x1
0x305: V313 = AND V84 0xffffffffffffffffffffffffffffffffffffffff
0x306: V314 = 0x0
0x30a: M[0x0] = V313
0x30b: V315 = 0x20
0x30f: M[0x20] = 0x0
0x310: V316 = 0x40
0x314: V317 = SHA3 0x0 0x40
0x316: V318 = S[V317]
0x317: V319 = 0xff
0x319: V320 = NOT 0xff
0x31a: V321 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V318
0x31c: S[V317] = V321
0x31e: V322 = M[0x40]
0x31f: V323 = 0x1b15982a00000000000000000000000000000000000000000000000000000000
0x341: M[V322] = 0x1b15982a00000000000000000000000000000000000000000000000000000000
0x342: V324 = CALLER
0x345: V325 = AND 0xffffffffffffffffffffffffffffffffffffffff V324
0x346: V326 = 0x4
0x349: V327 = ADD V322 0x4
0x34a: M[V327] = V325
0x34b: V328 = M[0x40]
0x34e: V329 = 0x1b15982a
0x354: V330 = CALLVALUE
0x356: V331 = 0x24
0x35a: V332 = ADD V322 0x24
0x35e: V333 = SUB V322 V328
0x35f: V334 = ADD V333 0x24
0x364: V335 = EXTCODESIZE V313
0x365: V336 = ISZERO V335
0x366: V337 = ISZERO V336
0x367: V338 = 0x36c
0x36a: JUMPI 0x36c V337
---
Entry stack: [V12, 0xb0, V84, 0x0]
Stack pops: 2
Stack additions: [S1, S1, V313, 0x1b15982a, V330, V332, 0x0, V328, V334, V328, V330, V313]
Exit stack: [V12, 0xb0, V84, V84, V313, 0x1b15982a, V330, V332, 0x0, V328, V334, V328, V330, V313]

================================

Block 0x36b
[0x36b:0x36b]
---
Predecessors: [0x2f9]
Successors: []
---
0x36b INVALID
---
0x36b: INVALID 
---
Entry stack: [V12, 0xb0, V84, V84, V313, 0x1b15982a, V330, V332, 0x0, V328, V334, V328, V330, V313]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb0, V84, V84, V313, 0x1b15982a, V330, V332, 0x0, V328, V334, V328, V330, V313]

================================

Block 0x36c
[0x36c:0x378]
---
Predecessors: [0x2f9]
Successors: [0x379, 0x37a]
---
0x36c JUMPDEST
0x36d PUSH2 0x25ee
0x370 GAS
0x371 SUB
0x372 CALL
0x373 ISZERO
0x374 ISZERO
0x375 PUSH2 0x37a
0x378 JUMPI
---
0x36c: JUMPDEST 
0x36d: V339 = 0x25ee
0x370: V340 = GAS
0x371: V341 = SUB V340 0x25ee
0x372: V342 = CALL V341 V313 V330 V328 V334 V328 0x0
0x373: V343 = ISZERO V342
0x374: V344 = ISZERO V343
0x375: V345 = 0x37a
0x378: JUMPI 0x37a V344
---
Entry stack: [V12, 0xb0, V84, V84, V313, 0x1b15982a, V330, V332, 0x0, V328, V334, V328, V330, V313]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xb0, V84, V84, V313, 0x1b15982a, V330, V332]

================================

Block 0x379
[0x379:0x379]
---
Predecessors: [0x36c]
Successors: []
---
0x379 INVALID
---
0x379: INVALID 
---
Entry stack: [V12, 0xb0, V84, V84, V313, 0x1b15982a, V330, V332]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb0, V84, V84, V313, 0x1b15982a, V330, V332]

================================

Block 0x37a
[0x37a:0x3e3]
---
Predecessors: [0x36c]
Successors: [0x3e4, 0x3e5]
---
0x37a JUMPDEST
0x37b POP
0x37c POP
0x37d POP
0x37e POP
0x37f PUSH32 0xbf79d66c3ce5a33f7c9ce6d53467377f1c4fe313b8cd3297d2051c54f96e8a86
0x3a0 DUP2
0x3a1 PUSH1 0x1
0x3a3 PUSH1 0xa0
0x3a5 PUSH1 0x2
0x3a7 EXP
0x3a8 SUB
0x3a9 AND
0x3aa PUSH4 0x1d143848
0x3af PUSH1 0x0
0x3b1 PUSH1 0x40
0x3b3 MLOAD
0x3b4 PUSH1 0x20
0x3b6 ADD
0x3b7 MSTORE
0x3b8 PUSH1 0x40
0x3ba MLOAD
0x3bb DUP2
0x3bc PUSH4 0xffffffff
0x3c1 AND
0x3c2 PUSH1 0xe0
0x3c4 PUSH1 0x2
0x3c6 EXP
0x3c7 MUL
0x3c8 DUP2
0x3c9 MSTORE
0x3ca PUSH1 0x4
0x3cc ADD
0x3cd DUP1
0x3ce SWAP1
0x3cf POP
0x3d0 PUSH1 0x20
0x3d2 PUSH1 0x40
0x3d4 MLOAD
0x3d5 DUP1
0x3d6 DUP4
0x3d7 SUB
0x3d8 DUP2
0x3d9 PUSH1 0x0
0x3db DUP8
0x3dc DUP1
0x3dd EXTCODESIZE
0x3de ISZERO
0x3df ISZERO
0x3e0 PUSH2 0x3e5
0x3e3 JUMPI
---
0x37a: JUMPDEST 
0x37f: V346 = 0xbf79d66c3ce5a33f7c9ce6d53467377f1c4fe313b8cd3297d2051c54f96e8a86
0x3a1: V347 = 0x1
0x3a3: V348 = 0xa0
0x3a5: V349 = 0x2
0x3a7: V350 = EXP 0x2 0xa0
0x3a8: V351 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a9: V352 = AND 0xffffffffffffffffffffffffffffffffffffffff V84
0x3aa: V353 = 0x1d143848
0x3af: V354 = 0x0
0x3b1: V355 = 0x40
0x3b3: V356 = M[0x40]
0x3b4: V357 = 0x20
0x3b6: V358 = ADD 0x20 V356
0x3b7: M[V358] = 0x0
0x3b8: V359 = 0x40
0x3ba: V360 = M[0x40]
0x3bc: V361 = 0xffffffff
0x3c1: V362 = AND 0xffffffff 0x1d143848
0x3c2: V363 = 0xe0
0x3c4: V364 = 0x2
0x3c6: V365 = EXP 0x2 0xe0
0x3c7: V366 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x1d143848
0x3c9: M[V360] = 0x1d14384800000000000000000000000000000000000000000000000000000000
0x3ca: V367 = 0x4
0x3cc: V368 = ADD 0x4 V360
0x3d0: V369 = 0x20
0x3d2: V370 = 0x40
0x3d4: V371 = M[0x40]
0x3d7: V372 = SUB V368 V371
0x3d9: V373 = 0x0
0x3dd: V374 = EXTCODESIZE V352
0x3de: V375 = ISZERO V374
0x3df: V376 = ISZERO V375
0x3e0: V377 = 0x3e5
0x3e3: JUMPI 0x3e5 V376
---
Entry stack: [V12, 0xb0, V84, V84, V313, 0x1b15982a, V330, V332]
Stack pops: 5
Stack additions: [S4, 0xbf79d66c3ce5a33f7c9ce6d53467377f1c4fe313b8cd3297d2051c54f96e8a86, V352, 0x1d143848, V368, 0x20, V371, V372, V371, 0x0, V352]
Exit stack: [V12, 0xb0, V84, V84, 0xbf79d66c3ce5a33f7c9ce6d53467377f1c4fe313b8cd3297d2051c54f96e8a86, V352, 0x1d143848, V368, 0x20, V371, V372, V371, 0x0, V352]

================================

Block 0x3e4
[0x3e4:0x3e4]
---
Predecessors: [0x37a]
Successors: []
---
0x3e4 INVALID
---
0x3e4: INVALID 
---
Entry stack: [V12, 0xb0, V84, V84, 0xbf79d66c3ce5a33f7c9ce6d53467377f1c4fe313b8cd3297d2051c54f96e8a86, V352, 0x1d143848, V368, 0x20, V371, V372, V371, 0x0, V352]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb0, V84, V84, 0xbf79d66c3ce5a33f7c9ce6d53467377f1c4fe313b8cd3297d2051c54f96e8a86, V352, 0x1d143848, V368, 0x20, V371, V372, V371, 0x0, V352]

================================

Block 0x3e5
[0x3e5:0x3f1]
---
Predecessors: [0x37a, 0xbd7]
Successors: [0x3f2, 0x3f3]
---
0x3e5 JUMPDEST
0x3e6 PUSH2 0x2c6
0x3e9 GAS
0x3ea SUB
0x3eb CALL
0x3ec ISZERO
0x3ed ISZERO
0x3ee PUSH2 0x3f3
0x3f1 JUMPI
---
0x3e5: JUMPDEST 
0x3e6: V378 = 0x2c6
0x3e9: V379 = GAS
0x3ea: V380 = SUB V379 0x2c6
0x3eb: V381 = CALL V380 S0 0x0 S2 S3 S4 0x20
0x3ec: V382 = ISZERO V381
0x3ed: V383 = ISZERO V382
0x3ee: V384 = 0x3f3
0x3f1: JUMPI 0x3f3 V383
---
Entry stack: [V12, 0xb0, S11, S10, {0x63dbb4a1bdc8a836cbb4e43a69769115ee047c253086e1d337d5143b7fcf2ab7, 0xbf79d66c3ce5a33f7c9ce6d53467377f1c4fe313b8cd3297d2051c54f96e8a86}, S8, 0x1d143848, S6, 0x20, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xb0, S11, S10, {0x63dbb4a1bdc8a836cbb4e43a69769115ee047c253086e1d337d5143b7fcf2ab7, 0xbf79d66c3ce5a33f7c9ce6d53467377f1c4fe313b8cd3297d2051c54f96e8a86}, S8, 0x1d143848, S6]

================================

Block 0x3f2
[0x3f2:0x3f2]
---
Predecessors: [0x3e5]
Successors: []
---
0x3f2 INVALID
---
0x3f2: INVALID 
---
Entry stack: [V12, 0xb0, S5, S4, {0x63dbb4a1bdc8a836cbb4e43a69769115ee047c253086e1d337d5143b7fcf2ab7, 0xbf79d66c3ce5a33f7c9ce6d53467377f1c4fe313b8cd3297d2051c54f96e8a86}, S2, 0x1d143848, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb0, S5, S4, {0x63dbb4a1bdc8a836cbb4e43a69769115ee047c253086e1d337d5143b7fcf2ab7, 0xbf79d66c3ce5a33f7c9ce6d53467377f1c4fe313b8cd3297d2051c54f96e8a86}, S2, 0x1d143848, S0]

================================

Block 0x3f3
[0x3f3:0x441]
---
Predecessors: [0x3e5, 0xc41]
Successors: [0x442, 0x443]
---
0x3f3 JUMPDEST
0x3f4 POP
0x3f5 POP
0x3f6 POP
0x3f7 PUSH1 0x40
0x3f9 MLOAD
0x3fa DUP1
0x3fb MLOAD
0x3fc SWAP1
0x3fd POP
0x3fe DUP3
0x3ff PUSH1 0x1
0x401 PUSH1 0xa0
0x403 PUSH1 0x2
0x405 EXP
0x406 SUB
0x407 AND
0x408 PUSH4 0x8da5cb5b
0x40d PUSH1 0x0
0x40f PUSH1 0x40
0x411 MLOAD
0x412 PUSH1 0x20
0x414 ADD
0x415 MSTORE
0x416 PUSH1 0x40
0x418 MLOAD
0x419 DUP2
0x41a PUSH4 0xffffffff
0x41f AND
0x420 PUSH1 0xe0
0x422 PUSH1 0x2
0x424 EXP
0x425 MUL
0x426 DUP2
0x427 MSTORE
0x428 PUSH1 0x4
0x42a ADD
0x42b DUP1
0x42c SWAP1
0x42d POP
0x42e PUSH1 0x20
0x430 PUSH1 0x40
0x432 MLOAD
0x433 DUP1
0x434 DUP4
0x435 SUB
0x436 DUP2
0x437 PUSH1 0x0
0x439 DUP8
0x43a DUP1
0x43b EXTCODESIZE
0x43c ISZERO
0x43d ISZERO
0x43e PUSH2 0x443
0x441 JUMPI
---
0x3f3: JUMPDEST 
0x3f7: V385 = 0x40
0x3f9: V386 = M[0x40]
0x3fb: V387 = M[V386]
0x3ff: V388 = 0x1
0x401: V389 = 0xa0
0x403: V390 = 0x2
0x405: V391 = EXP 0x2 0xa0
0x406: V392 = SUB 0x10000000000000000000000000000000000000000 0x1
0x407: V393 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x408: V394 = 0x8da5cb5b
0x40d: V395 = 0x0
0x40f: V396 = 0x40
0x411: V397 = M[0x40]
0x412: V398 = 0x20
0x414: V399 = ADD 0x20 V397
0x415: M[V399] = 0x0
0x416: V400 = 0x40
0x418: V401 = M[0x40]
0x41a: V402 = 0xffffffff
0x41f: V403 = AND 0xffffffff 0x8da5cb5b
0x420: V404 = 0xe0
0x422: V405 = 0x2
0x424: V406 = EXP 0x2 0xe0
0x425: V407 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x8da5cb5b
0x427: M[V401] = 0x8da5cb5b00000000000000000000000000000000000000000000000000000000
0x428: V408 = 0x4
0x42a: V409 = ADD 0x4 V401
0x42e: V410 = 0x20
0x430: V411 = 0x40
0x432: V412 = M[0x40]
0x435: V413 = SUB V409 V412
0x437: V414 = 0x0
0x43b: V415 = EXTCODESIZE V393
0x43c: V416 = ISZERO V415
0x43d: V417 = ISZERO V416
0x43e: V418 = 0x443
0x441: JUMPI 0x443 V417
---
Entry stack: [V12, 0xb0, S5, S4, {0x63dbb4a1bdc8a836cbb4e43a69769115ee047c253086e1d337d5143b7fcf2ab7, 0xbf79d66c3ce5a33f7c9ce6d53467377f1c4fe313b8cd3297d2051c54f96e8a86}, S2, 0x1d143848, S0]
Stack pops: 5
Stack additions: [S4, S3, V387, V393, 0x8da5cb5b, V409, 0x20, V412, V413, V412, 0x0, V393]
Exit stack: [V12, 0xb0, S5, S4, {0x63dbb4a1bdc8a836cbb4e43a69769115ee047c253086e1d337d5143b7fcf2ab7, 0xbf79d66c3ce5a33f7c9ce6d53467377f1c4fe313b8cd3297d2051c54f96e8a86}, V387, V393, 0x8da5cb5b, V409, 0x20, V412, V413, V412, 0x0, V393]

================================

Block 0x442
[0x442:0x442]
---
Predecessors: [0x3f3]
Successors: []
---
0x442 INVALID
---
0x442: INVALID 
---
Entry stack: [V12, 0xb0, S12, S11, {0x63dbb4a1bdc8a836cbb4e43a69769115ee047c253086e1d337d5143b7fcf2ab7, 0xbf79d66c3ce5a33f7c9ce6d53467377f1c4fe313b8cd3297d2051c54f96e8a86}, V387, V393, 0x8da5cb5b, V409, 0x20, V412, V413, V412, 0x0, V393]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb0, S12, S11, {0x63dbb4a1bdc8a836cbb4e43a69769115ee047c253086e1d337d5143b7fcf2ab7, 0xbf79d66c3ce5a33f7c9ce6d53467377f1c4fe313b8cd3297d2051c54f96e8a86}, V387, V393, 0x8da5cb5b, V409, 0x20, V412, V413, V412, 0x0, V393]

================================

Block 0x443
[0x443:0x44f]
---
Predecessors: [0x3f3, 0xc4e]
Successors: [0x450, 0x451]
---
0x443 JUMPDEST
0x444 PUSH2 0x2c6
0x447 GAS
0x448 SUB
0x449 CALL
0x44a ISZERO
0x44b ISZERO
0x44c PUSH2 0x451
0x44f JUMPI
---
0x443: JUMPDEST 
0x444: V419 = 0x2c6
0x447: V420 = GAS
0x448: V421 = SUB V420 0x2c6
0x449: V422 = CALL V421 S0 0x0 S2 S3 S4 0x20
0x44a: V423 = ISZERO V422
0x44b: V424 = ISZERO V423
0x44c: V425 = 0x451
0x44f: JUMPI 0x451 V424
---
Entry stack: [V12, 0xb0, S12, S11, S10, S9, S8, 0x8da5cb5b, S6, 0x20, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xb0, S12, S11, S10, S9, S8, 0x8da5cb5b, S6]

================================

Block 0x450
[0x450:0x450]
---
Predecessors: [0x443]
Successors: []
---
0x450 INVALID
---
0x450: INVALID 
---
Entry stack: [V12, 0xb0, S6, S5, S4, S3, S2, 0x8da5cb5b, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb0, S6, S5, S4, S3, S2, 0x8da5cb5b, S0]

================================

Block 0x451
[0x451:0x49f]
---
Predecessors: [0x443, 0xc9e]
Successors: [0x4a0, 0x4a1]
---
0x451 JUMPDEST
0x452 POP
0x453 POP
0x454 POP
0x455 PUSH1 0x40
0x457 MLOAD
0x458 DUP1
0x459 MLOAD
0x45a SWAP1
0x45b POP
0x45c DUP4
0x45d PUSH1 0x1
0x45f PUSH1 0xa0
0x461 PUSH1 0x2
0x463 EXP
0x464 SUB
0x465 AND
0x466 PUSH4 0x77c93662
0x46b PUSH1 0x0
0x46d PUSH1 0x40
0x46f MLOAD
0x470 PUSH1 0x20
0x472 ADD
0x473 MSTORE
0x474 PUSH1 0x40
0x476 MLOAD
0x477 DUP2
0x478 PUSH4 0xffffffff
0x47d AND
0x47e PUSH1 0xe0
0x480 PUSH1 0x2
0x482 EXP
0x483 MUL
0x484 DUP2
0x485 MSTORE
0x486 PUSH1 0x4
0x488 ADD
0x489 DUP1
0x48a SWAP1
0x48b POP
0x48c PUSH1 0x20
0x48e PUSH1 0x40
0x490 MLOAD
0x491 DUP1
0x492 DUP4
0x493 SUB
0x494 DUP2
0x495 PUSH1 0x0
0x497 DUP8
0x498 DUP1
0x499 EXTCODESIZE
0x49a ISZERO
0x49b ISZERO
0x49c PUSH2 0x4a1
0x49f JUMPI
---
0x451: JUMPDEST 
0x455: V426 = 0x40
0x457: V427 = M[0x40]
0x459: V428 = M[V427]
0x45d: V429 = 0x1
0x45f: V430 = 0xa0
0x461: V431 = 0x2
0x463: V432 = EXP 0x2 0xa0
0x464: V433 = SUB 0x10000000000000000000000000000000000000000 0x1
0x465: V434 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x466: V435 = 0x77c93662
0x46b: V436 = 0x0
0x46d: V437 = 0x40
0x46f: V438 = M[0x40]
0x470: V439 = 0x20
0x472: V440 = ADD 0x20 V438
0x473: M[V440] = 0x0
0x474: V441 = 0x40
0x476: V442 = M[0x40]
0x478: V443 = 0xffffffff
0x47d: V444 = AND 0xffffffff 0x77c93662
0x47e: V445 = 0xe0
0x480: V446 = 0x2
0x482: V447 = EXP 0x2 0xe0
0x483: V448 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x77c93662
0x485: M[V442] = 0x77c9366200000000000000000000000000000000000000000000000000000000
0x486: V449 = 0x4
0x488: V450 = ADD 0x4 V442
0x48c: V451 = 0x20
0x48e: V452 = 0x40
0x490: V453 = M[0x40]
0x493: V454 = SUB V450 V453
0x495: V455 = 0x0
0x499: V456 = EXTCODESIZE V434
0x49a: V457 = ISZERO V456
0x49b: V458 = ISZERO V457
0x49c: V459 = 0x4a1
0x49f: JUMPI 0x4a1 V458
---
Entry stack: [V12, 0xb0, S6, S5, S4, S3, S2, 0x8da5cb5b, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, V428, V434, 0x77c93662, V450, 0x20, V453, V454, V453, 0x0, V434]
Exit stack: [V12, 0xb0, S6, S5, S4, S3, V428, V434, 0x77c93662, V450, 0x20, V453, V454, V453, 0x0, V434]

================================

Block 0x4a0
[0x4a0:0x4a0]
---
Predecessors: [0x451]
Successors: []
---
0x4a0 INVALID
---
0x4a0: INVALID 
---
Entry stack: [V12, 0xb0, S13, S12, S11, S10, V428, V434, 0x77c93662, V450, 0x20, V453, V454, V453, 0x0, V434]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb0, S13, S12, S11, S10, V428, V434, 0x77c93662, V450, 0x20, V453, V454, V453, 0x0, V434]

================================

Block 0x4a1
[0x4a1:0x4ad]
---
Predecessors: [0x451, 0xcac]
Successors: [0x4ae, 0x4af]
---
0x4a1 JUMPDEST
0x4a2 PUSH2 0x2c6
0x4a5 GAS
0x4a6 SUB
0x4a7 CALL
0x4a8 ISZERO
0x4a9 ISZERO
0x4aa PUSH2 0x4af
0x4ad JUMPI
---
0x4a1: JUMPDEST 
0x4a2: V460 = 0x2c6
0x4a5: V461 = GAS
0x4a6: V462 = SUB V461 0x2c6
0x4a7: V463 = CALL V462 S0 0x0 S2 S3 S4 0x20
0x4a8: V464 = ISZERO V463
0x4a9: V465 = ISZERO V464
0x4aa: V466 = 0x4af
0x4ad: JUMPI 0x4af V465
---
Entry stack: [V12, 0xb0, S13, S12, S11, S10, S9, S8, 0x77c93662, S6, 0x20, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xb0, S13, S12, S11, S10, S9, S8, 0x77c93662, S6]

================================

Block 0x4ae
[0x4ae:0x4ae]
---
Predecessors: [0x4a1]
Successors: []
---
0x4ae INVALID
---
0x4ae: INVALID 
---
Entry stack: [V12, 0xb0, S7, S6, S5, S4, S3, S2, 0x77c93662, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb0, S7, S6, S5, S4, S3, S2, 0x77c93662, S0]

================================

Block 0x4af
[0x4af:0x4e7]
---
Predecessors: [0x4a1, 0xcfc]
Successors: [0x4e8]
---
0x4af JUMPDEST
0x4b0 POP
0x4b1 POP
0x4b2 PUSH1 0x40
0x4b4 DUP1
0x4b5 MLOAD
0x4b6 DUP1
0x4b7 MLOAD
0x4b8 PUSH1 0x1
0x4ba PUSH1 0xa0
0x4bc PUSH1 0x2
0x4be EXP
0x4bf SUB
0x4c0 SWAP6
0x4c1 DUP7
0x4c2 AND
0x4c3 DUP3
0x4c4 MSTORE
0x4c5 SWAP4
0x4c6 DUP6
0x4c7 AND
0x4c8 PUSH1 0x20
0x4ca DUP3
0x4cb ADD
0x4cc MSTORE
0x4cd SWAP3
0x4ce DUP5
0x4cf AND
0x4d0 DUP4
0x4d1 DUP3
0x4d2 ADD
0x4d3 MSTORE
0x4d4 SWAP3
0x4d5 DUP7
0x4d6 AND
0x4d7 PUSH1 0x60
0x4d9 DUP4
0x4da ADD
0x4db MSTORE
0x4dc POP
0x4dd SWAP1
0x4de MLOAD
0x4df SWAP1
0x4e0 DUP2
0x4e1 SWAP1
0x4e2 SUB
0x4e3 PUSH1 0x80
0x4e5 ADD
0x4e6 SWAP1
0x4e7 LOG1
---
0x4af: JUMPDEST 
0x4b2: V467 = 0x40
0x4b5: V468 = M[0x40]
0x4b7: V469 = M[V468]
0x4b8: V470 = 0x1
0x4ba: V471 = 0xa0
0x4bc: V472 = 0x2
0x4be: V473 = EXP 0x2 0xa0
0x4bf: V474 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c2: V475 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x4c4: M[V468] = V475
0x4c7: V476 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x4c8: V477 = 0x20
0x4cb: V478 = ADD V468 0x20
0x4cc: M[V478] = V476
0x4cf: V479 = AND 0xffffffffffffffffffffffffffffffffffffffff V469
0x4d2: V480 = ADD 0x40 V468
0x4d3: M[V480] = V479
0x4d6: V481 = AND S7 0xffffffffffffffffffffffffffffffffffffffff
0x4d7: V482 = 0x60
0x4da: V483 = ADD V468 0x60
0x4db: M[V483] = V481
0x4de: V484 = M[0x40]
0x4e2: V485 = SUB V468 V484
0x4e3: V486 = 0x80
0x4e5: V487 = ADD 0x80 V485
0x4e7: LOG V484 V487 S5
---
Entry stack: [V12, 0xb0, S7, S6, S5, S4, S3, S2, 0x77c93662, S0]
Stack pops: 8
Stack additions: [S7, S6]
Exit stack: [V12, 0xb0, S7, S6]

================================

Block 0x4e8
[0x4e8:0x4eb]
---
Predecessors: [0x4af]
Successors: [0xb0]
---
0x4e8 JUMPDEST
0x4e9 POP
0x4ea POP
0x4eb JUMP
---
0x4e8: JUMPDEST 
0x4eb: JUMP 0xb0
---
Entry stack: [V12, 0xb0, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x4ec
[0x4ec:0x4fa]
---
Predecessors: [0xfc]
Successors: [0x104]
---
0x4ec JUMPDEST
0x4ed PUSH1 0x3
0x4ef SLOAD
0x4f0 PUSH1 0x1
0x4f2 PUSH1 0xa0
0x4f4 PUSH1 0x2
0x4f6 EXP
0x4f7 SUB
0x4f8 AND
0x4f9 DUP2
0x4fa JUMP
---
0x4ec: JUMPDEST 
0x4ed: V488 = 0x3
0x4ef: V489 = S[0x3]
0x4f0: V490 = 0x1
0x4f2: V491 = 0xa0
0x4f4: V492 = 0x2
0x4f6: V493 = EXP 0x2 0xa0
0x4f7: V494 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f8: V495 = AND 0xffffffffffffffffffffffffffffffffffffffff V489
0x4fa: JUMP 0x104
---
Entry stack: [V12, 0x104]
Stack pops: 1
Stack additions: [S0, V495]
Exit stack: [V12, 0x104, V495]

================================

Block 0x4fb
[0x4fb:0x509]
---
Predecessors: [0x128]
Successors: [0x104]
---
0x4fb JUMPDEST
0x4fc PUSH1 0x2
0x4fe SLOAD
0x4ff PUSH1 0x1
0x501 PUSH1 0xa0
0x503 PUSH1 0x2
0x505 EXP
0x506 SUB
0x507 AND
0x508 DUP2
0x509 JUMP
---
0x4fb: JUMPDEST 
0x4fc: V496 = 0x2
0x4fe: V497 = S[0x2]
0x4ff: V498 = 0x1
0x501: V499 = 0xa0
0x503: V500 = 0x2
0x505: V501 = EXP 0x2 0xa0
0x506: V502 = SUB 0x10000000000000000000000000000000000000000 0x1
0x507: V503 = AND 0xffffffffffffffffffffffffffffffffffffffff V497
0x509: JUMP 0x104
---
Entry stack: [V12, 0x104]
Stack pops: 1
Stack additions: [S0, V503]
Exit stack: [V12, 0x104, V503]

================================

Block 0x50a
[0x50a:0x525]
---
Predecessors: [0x14c, 0x2b8]
Successors: [0x526, 0x52b]
---
0x50a JUMPDEST
0x50b PUSH1 0x1
0x50d SLOAD
0x50e PUSH1 0x0
0x510 SWAP1
0x511 DUP2
0x512 SWAP1
0x513 CALLER
0x514 PUSH1 0x1
0x516 PUSH1 0xa0
0x518 PUSH1 0x2
0x51a EXP
0x51b SUB
0x51c SWAP1
0x51d DUP2
0x51e AND
0x51f SWAP2
0x520 AND
0x521 EQ
0x522 PUSH2 0x52b
0x525 JUMPI
---
0x50a: JUMPDEST 
0x50b: V504 = 0x1
0x50d: V505 = S[0x1]
0x50e: V506 = 0x0
0x513: V507 = CALLER
0x514: V508 = 0x1
0x516: V509 = 0xa0
0x518: V510 = 0x2
0x51a: V511 = EXP 0x2 0xa0
0x51b: V512 = SUB 0x10000000000000000000000000000000000000000 0x1
0x51e: V513 = AND 0xffffffffffffffffffffffffffffffffffffffff V507
0x520: V514 = AND V505 0xffffffffffffffffffffffffffffffffffffffff
0x521: V515 = EQ V514 V513
0x522: V516 = 0x52b
0x525: JUMPI 0x52b V515
---
Entry stack: [V12, 0xb0, V56, V58, V66, V69, V71, S8, {0xb0, 0x2c8}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0xb0, V56, V58, V66, V69, V71, S8, {0xb0, 0x2c8}, S6, S5, S4, S3, S2, S1, S0, 0x0, 0x0]

================================

Block 0x526
[0x526:0x52a]
---
Predecessors: [0x50a]
Successors: []
---
0x526 PUSH1 0x0
0x528 PUSH1 0x0
0x52a REVERT
---
0x526: V517 = 0x0
0x528: V518 = 0x0
0x52a: REVERT 0x0 0x0
---
Entry stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]

================================

Block 0x52b
[0x52b:0x534]
---
Predecessors: [0x50a]
Successors: [0x535, 0x53a]
---
0x52b JUMPDEST
0x52c PUSH1 0xa
0x52e DUP4
0x52f GT
0x530 ISZERO
0x531 PUSH2 0x53a
0x534 JUMPI
---
0x52b: JUMPDEST 
0x52c: V519 = 0xa
0x52f: V520 = GT S2 0xa
0x530: V521 = ISZERO V520
0x531: V522 = 0x53a
0x534: JUMPI 0x53a V521
---
Entry stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]

================================

Block 0x535
[0x535:0x539]
---
Predecessors: [0x52b]
Successors: []
---
0x535 PUSH1 0x0
0x537 PUSH1 0x0
0x539 REVERT
---
0x535: V523 = 0x0
0x537: V524 = 0x0
0x539: REVERT 0x0 0x0
---
Entry stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]

================================

Block 0x53a
[0x53a:0x543]
---
Predecessors: [0x52b]
Successors: [0x544, 0x549]
---
0x53a JUMPDEST
0x53b PUSH1 0x1
0x53d DUP4
0x53e LT
0x53f ISZERO
0x540 PUSH2 0x549
0x543 JUMPI
---
0x53a: JUMPDEST 
0x53b: V525 = 0x1
0x53e: V526 = LT S2 0x1
0x53f: V527 = ISZERO V526
0x540: V528 = 0x549
0x543: JUMPI 0x549 V527
---
Entry stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]

================================

Block 0x544
[0x544:0x548]
---
Predecessors: [0x53a]
Successors: []
---
0x544 PUSH1 0x0
0x546 PUSH1 0x0
0x548 REVERT
---
0x544: V529 = 0x0
0x546: V530 = 0x0
0x548: REVERT 0x0 0x0
---
Entry stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]

================================

Block 0x549
[0x549:0x559]
---
Predecessors: [0x53a]
Successors: [0x55a, 0x5a9]
---
0x549 JUMPDEST
0x54a PUSH1 0x1
0x54c PUSH1 0xa0
0x54e PUSH1 0x2
0x550 EXP
0x551 SUB
0x552 DUP8
0x553 AND
0x554 ISZERO
0x555 ISZERO
0x556 PUSH2 0x5a9
0x559 JUMPI
---
0x549: JUMPDEST 
0x54a: V531 = 0x1
0x54c: V532 = 0xa0
0x54e: V533 = 0x2
0x550: V534 = EXP 0x2 0xa0
0x551: V535 = SUB 0x10000000000000000000000000000000000000000 0x1
0x553: V536 = AND S6 0xffffffffffffffffffffffffffffffffffffffff
0x554: V537 = ISZERO V536
0x555: V538 = ISZERO V537
0x556: V539 = 0x5a9
0x559: JUMPI 0x5a9 V538
---
Entry stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]

================================

Block 0x55a
[0x55a:0x563]
---
Predecessors: [0x549]
Successors: [0x564, 0x569]
---
0x55a DUP9
0x55b DUP4
0x55c MUL
0x55d CALLVALUE
0x55e LT
0x55f ISZERO
0x560 PUSH2 0x569
0x563 JUMPI
---
0x55c: V540 = MUL S2 S8
0x55d: V541 = CALLVALUE
0x55e: V542 = LT V541 V540
0x55f: V543 = ISZERO V542
0x560: V544 = 0x569
0x563: JUMPI 0x569 V543
---
Entry stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]

================================

Block 0x564
[0x564:0x568]
---
Predecessors: [0x55a]
Successors: []
---
0x564 PUSH1 0x0
0x566 PUSH1 0x0
0x568 REVERT
---
0x564: V545 = 0x0
0x566: V546 = 0x0
0x568: REVERT 0x0 0x0
---
Entry stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]

================================

Block 0x569
[0x569:0x573]
---
Predecessors: [0x55a]
Successors: [0x574, 0x5a3]
---
0x569 JUMPDEST
0x56a DUP3
0x56b DUP10
0x56c MUL
0x56d CALLVALUE
0x56e GT
0x56f ISZERO
0x570 PUSH2 0x5a3
0x573 JUMPI
---
0x569: JUMPDEST 
0x56c: V547 = MUL S8 S2
0x56d: V548 = CALLVALUE
0x56e: V549 = GT V548 V547
0x56f: V550 = ISZERO V549
0x570: V551 = 0x5a3
0x573: JUMPI 0x5a3 V550
---
Entry stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]

================================

Block 0x574
[0x574:0x5a1]
---
Predecessors: [0x569]
Successors: [0x5a2, 0x5a3]
---
0x574 PUSH1 0x40
0x576 MLOAD
0x577 PUSH1 0x1
0x579 PUSH1 0xa0
0x57b PUSH1 0x2
0x57d EXP
0x57e SUB
0x57f CALLER
0x580 AND
0x581 SWAP1
0x582 DUP11
0x583 DUP6
0x584 MUL
0x585 CALLVALUE
0x586 SUB
0x587 DUP1
0x588 ISZERO
0x589 PUSH2 0x8fc
0x58c MUL
0x58d SWAP2
0x58e PUSH1 0x0
0x590 DUP2
0x591 DUP2
0x592 DUP2
0x593 DUP6
0x594 DUP9
0x595 DUP9
0x596 CALL
0x597 SWAP4
0x598 POP
0x599 POP
0x59a POP
0x59b POP
0x59c ISZERO
0x59d ISZERO
0x59e PUSH2 0x5a3
0x5a1 JUMPI
---
0x574: V552 = 0x40
0x576: V553 = M[0x40]
0x577: V554 = 0x1
0x579: V555 = 0xa0
0x57b: V556 = 0x2
0x57d: V557 = EXP 0x2 0xa0
0x57e: V558 = SUB 0x10000000000000000000000000000000000000000 0x1
0x57f: V559 = CALLER
0x580: V560 = AND V559 0xffffffffffffffffffffffffffffffffffffffff
0x584: V561 = MUL S2 S8
0x585: V562 = CALLVALUE
0x586: V563 = SUB V562 V561
0x588: V564 = ISZERO V563
0x589: V565 = 0x8fc
0x58c: V566 = MUL 0x8fc V564
0x58e: V567 = 0x0
0x596: V568 = CALL V566 V560 V563 V553 0x0 V553 0x0
0x59c: V569 = ISZERO V568
0x59d: V570 = ISZERO V569
0x59e: V571 = 0x5a3
0x5a1: JUMPI 0x5a3 V570
---
Entry stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]

================================

Block 0x5a2
[0x5a2:0x5a2]
---
Predecessors: [0x574]
Successors: []
---
0x5a2 INVALID
---
0x5a2: INVALID 
---
Entry stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]

================================

Block 0x5a3
[0x5a3:0x5a3]
---
Predecessors: [0x569, 0x574]
Successors: [0x5a4]
---
0x5a3 JUMPDEST
---
0x5a3: JUMPDEST 
---
Entry stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]

================================

Block 0x5a4
[0x5a4:0x5a8]
---
Predecessors: [0x5a3]
Successors: [0x640]
---
0x5a4 JUMPDEST
0x5a5 PUSH2 0x640
0x5a8 JUMP
---
0x5a4: JUMPDEST 
0x5a5: V572 = 0x640
0x5a8: JUMP 0x640
---
Entry stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]

================================

Block 0x5a9
[0x5a9:0x620]
---
Predecessors: [0x549]
Successors: [0x621, 0x622]
---
0x5a9 JUMPDEST
0x5aa PUSH1 0x40
0x5ac DUP1
0x5ad MLOAD
0x5ae PUSH1 0x0
0x5b0 PUSH1 0x20
0x5b2 SWAP2
0x5b3 DUP3
0x5b4 ADD
0x5b5 DUP2
0x5b6 SWAP1
0x5b7 MSTORE
0x5b8 DUP3
0x5b9 MLOAD
0x5ba PUSH32 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x5db DUP2
0x5dc MSTORE
0x5dd PUSH1 0x1
0x5df PUSH1 0xa0
0x5e1 PUSH1 0x2
0x5e3 EXP
0x5e4 SUB
0x5e5 CALLER
0x5e6 DUP2
0x5e7 AND
0x5e8 PUSH1 0x4
0x5ea DUP4
0x5eb ADD
0x5ec MSTORE
0x5ed ADDRESS
0x5ee DUP2
0x5ef AND
0x5f0 PUSH1 0x24
0x5f2 DUP4
0x5f3 ADD
0x5f4 MSTORE
0x5f5 DUP8
0x5f6 DUP15
0x5f7 MUL
0x5f8 PUSH1 0x44
0x5fa DUP4
0x5fb ADD
0x5fc MSTORE
0x5fd SWAP4
0x5fe MLOAD
0x5ff SWAP4
0x600 DUP12
0x601 AND
0x602 SWAP4
0x603 PUSH4 0x23b872dd
0x608 SWAP4
0x609 PUSH1 0x64
0x60b DUP1
0x60c DUP5
0x60d ADD
0x60e SWAP5
0x60f SWAP2
0x610 SWAP4
0x611 DUP4
0x612 SWAP1
0x613 SUB
0x614 ADD
0x615 SWAP1
0x616 DUP3
0x617 SWAP1
0x618 DUP8
0x619 DUP1
0x61a EXTCODESIZE
0x61b ISZERO
0x61c ISZERO
0x61d PUSH2 0x622
0x620 JUMPI
---
0x5a9: JUMPDEST 
0x5aa: V573 = 0x40
0x5ad: V574 = M[0x40]
0x5ae: V575 = 0x0
0x5b0: V576 = 0x20
0x5b4: V577 = ADD 0x20 V574
0x5b7: M[V577] = 0x0
0x5b9: V578 = M[0x40]
0x5ba: V579 = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x5dc: M[V578] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x5dd: V580 = 0x1
0x5df: V581 = 0xa0
0x5e1: V582 = 0x2
0x5e3: V583 = EXP 0x2 0xa0
0x5e4: V584 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5e5: V585 = CALLER
0x5e7: V586 = AND 0xffffffffffffffffffffffffffffffffffffffff V585
0x5e8: V587 = 0x4
0x5eb: V588 = ADD V578 0x4
0x5ec: M[V588] = V586
0x5ed: V589 = ADDRESS
0x5ef: V590 = AND 0xffffffffffffffffffffffffffffffffffffffff V589
0x5f0: V591 = 0x24
0x5f3: V592 = ADD V578 0x24
0x5f4: M[V592] = V590
0x5f7: V593 = MUL S8 S2
0x5f8: V594 = 0x44
0x5fb: V595 = ADD V578 0x44
0x5fc: M[V595] = V593
0x5fe: V596 = M[0x40]
0x601: V597 = AND S6 0xffffffffffffffffffffffffffffffffffffffff
0x603: V598 = 0x23b872dd
0x609: V599 = 0x64
0x60d: V600 = ADD V578 0x64
0x613: V601 = SUB V578 V596
0x614: V602 = ADD V601 0x64
0x61a: V603 = EXTCODESIZE V597
0x61b: V604 = ISZERO V603
0x61c: V605 = ISZERO V604
0x61d: V606 = 0x622
0x620: JUMPI 0x622 V605
---
Entry stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S1, S0, V597, 0x23b872dd, V600, 0x20, V596, V602, V596, 0x0, V597]
Exit stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0, V597, 0x23b872dd, V600, 0x20, V596, V602, V596, 0x0, V597]

================================

Block 0x621
[0x621:0x621]
---
Predecessors: [0x5a9]
Successors: []
---
0x621 INVALID
---
0x621: INVALID 
---
Entry stack: [V12, 0xb0, V56, V58, V66, V69, V71, S19, {0xb0, 0x2c8}, S17, S16, S15, S14, S13, S12, S11, 0x0, 0x0, V597, 0x23b872dd, V600, 0x20, V596, V602, V596, 0x0, V597]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb0, V56, V58, V66, V69, V71, S19, {0xb0, 0x2c8}, S17, S16, S15, S14, S13, S12, S11, 0x0, 0x0, V597, 0x23b872dd, V600, 0x20, V596, V602, V596, 0x0, V597]

================================

Block 0x622
[0x622:0x62e]
---
Predecessors: [0x5a9]
Successors: [0x62f, 0x630]
---
0x622 JUMPDEST
0x623 PUSH2 0x2c6
0x626 GAS
0x627 SUB
0x628 CALL
0x629 ISZERO
0x62a ISZERO
0x62b PUSH2 0x630
0x62e JUMPI
---
0x622: JUMPDEST 
0x623: V607 = 0x2c6
0x626: V608 = GAS
0x627: V609 = SUB V608 0x2c6
0x628: V610 = CALL V609 V597 0x0 V596 V602 V596 0x20
0x629: V611 = ISZERO V610
0x62a: V612 = ISZERO V611
0x62b: V613 = 0x630
0x62e: JUMPI 0x630 V612
---
Entry stack: [V12, 0xb0, V56, V58, V66, V69, V71, S19, {0xb0, 0x2c8}, S17, S16, S15, S14, S13, S12, S11, 0x0, 0x0, V597, 0x23b872dd, V600, 0x20, V596, V602, V596, 0x0, V597]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xb0, V56, V58, V66, V69, V71, S19, {0xb0, 0x2c8}, S17, S16, S15, S14, S13, S12, S11, 0x0, 0x0, V597, 0x23b872dd, V600]

================================

Block 0x62f
[0x62f:0x62f]
---
Predecessors: [0x622]
Successors: []
---
0x62f INVALID
---
0x62f: INVALID 
---
Entry stack: [V12, 0xb0, V56, V58, V66, V69, V71, S13, {0xb0, 0x2c8}, S11, S10, S9, S8, S7, S6, S5, 0x0, 0x0, S2, 0x23b872dd, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb0, V56, V58, V66, V69, V71, S13, {0xb0, 0x2c8}, S11, S10, S9, S8, S7, S6, S5, 0x0, 0x0, S2, 0x23b872dd, S0]

================================

Block 0x630
[0x630:0x63e]
---
Predecessors: [0x622]
Successors: [0x63f, 0x640]
---
0x630 JUMPDEST
0x631 POP
0x632 POP
0x633 PUSH1 0x40
0x635 MLOAD
0x636 MLOAD
0x637 ISZERO
0x638 ISZERO
0x639 SWAP1
0x63a POP
0x63b PUSH2 0x640
0x63e JUMPI
---
0x630: JUMPDEST 
0x633: V614 = 0x40
0x635: V615 = M[0x40]
0x636: V616 = M[V615]
0x637: V617 = ISZERO V616
0x638: V618 = ISZERO V617
0x63b: V619 = 0x640
0x63e: JUMPI 0x640 V618
---
Entry stack: [V12, 0xb0, V56, V58, V66, V69, V71, S13, {0xb0, 0x2c8}, S11, S10, S9, S8, S7, S6, S5, 0x0, 0x0, S2, 0x23b872dd, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xb0, V56, V58, V66, V69, V71, S13, {0xb0, 0x2c8}, S11, S10, S9, S8, S7, S6, S5, 0x0, 0x0]

================================

Block 0x63f
[0x63f:0x63f]
---
Predecessors: [0x630]
Successors: []
---
0x63f INVALID
---
0x63f: INVALID 
---
Entry stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]

================================

Block 0x640
[0x640:0x640]
---
Predecessors: [0x5a4, 0x630]
Successors: [0x641]
---
0x640 JUMPDEST
---
0x640: JUMPDEST 
---
Entry stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]

================================

Block 0x641
[0x641:0x645]
---
Predecessors: [0x640]
Successors: [0x646]
---
0x641 JUMPDEST
0x642 PUSH1 0x0
0x644 SWAP2
0x645 POP
---
0x641: JUMPDEST 
0x642: V620 = 0x0
---
Entry stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]

================================

Block 0x646
[0x646:0x64e]
---
Predecessors: [0x641, 0x81f]
Successors: [0x64f, 0x82a]
---
0x646 JUMPDEST
0x647 DUP3
0x648 DUP3
0x649 LT
0x64a ISZERO
0x64b PUSH2 0x82a
0x64e JUMPI
---
0x646: JUMPDEST 
0x649: V621 = LT S1 S2
0x64a: V622 = ISZERO V621
0x64b: V623 = 0x82a
0x64e: JUMPI 0x82a V622
---
Entry stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x64f
[0x64f:0x65d]
---
Predecessors: [0x646]
Successors: [0x65e, 0x664]
---
0x64f PUSH1 0x1
0x651 PUSH1 0xa0
0x653 PUSH1 0x2
0x655 EXP
0x656 SUB
0x657 DUP8
0x658 AND
0x659 ISZERO
0x65a PUSH2 0x664
0x65d JUMPI
---
0x64f: V624 = 0x1
0x651: V625 = 0xa0
0x653: V626 = 0x2
0x655: V627 = EXP 0x2 0xa0
0x656: V628 = SUB 0x10000000000000000000000000000000000000000 0x1
0x658: V629 = AND S6 0xffffffffffffffffffffffffffffffffffffffff
0x659: V630 = ISZERO V629
0x65a: V631 = 0x664
0x65d: JUMPI 0x664 V630
---
Entry stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x65e
[0x65e:0x663]
---
Predecessors: [0x64f]
Successors: [0x666]
---
0x65e PUSH1 0x0
0x660 PUSH2 0x666
0x663 JUMP
---
0x65e: V632 = 0x0
0x660: V633 = 0x666
0x663: JUMP 0x666
---
Entry stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0]

================================

Block 0x664
[0x664:0x665]
---
Predecessors: [0x64f]
Successors: [0x666]
---
0x664 JUMPDEST
0x665 DUP9
---
0x664: JUMPDEST 
---
Entry stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S1, S0, S8]
Exit stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, S1, S0, S8]

================================

Block 0x666
[0x666:0x68e]
---
Predecessors: [0x65e, 0x664]
Successors: [0xd57]
---
0x666 JUMPDEST
0x667 PUSH1 0x1
0x669 SLOAD
0x66a PUSH1 0x2
0x66c SLOAD
0x66d CALLER
0x66e SWAP2
0x66f PUSH1 0x1
0x671 PUSH1 0xa0
0x673 PUSH1 0x2
0x675 EXP
0x676 SUB
0x677 SWAP1
0x678 DUP2
0x679 AND
0x67a SWAP2
0x67b DUP9
0x67c SWAP2
0x67d DUP15
0x67e SWAP2
0x67f DUP15
0x680 SWAP2
0x681 DUP15
0x682 SWAP2
0x683 DUP15
0x684 SWAP2
0x685 DUP15
0x686 SWAP2
0x687 AND
0x688 PUSH2 0x68f
0x68b PUSH2 0xd57
0x68e JUMP
---
0x666: JUMPDEST 
0x667: V634 = 0x1
0x669: V635 = S[0x1]
0x66a: V636 = 0x2
0x66c: V637 = S[0x2]
0x66d: V638 = CALLER
0x66f: V639 = 0x1
0x671: V640 = 0xa0
0x673: V641 = 0x2
0x675: V642 = EXP 0x2 0xa0
0x676: V643 = SUB 0x10000000000000000000000000000000000000000 0x1
0x679: V644 = AND 0xffffffffffffffffffffffffffffffffffffffff V635
0x687: V645 = AND V637 0xffffffffffffffffffffffffffffffffffffffff
0x688: V646 = 0x68f
0x68b: V647 = 0xd57
0x68e: JUMP 0xd57
---
Entry stack: [V12, 0xb0, V56, V58, V66, V69, V71, S11, {0xb0, 0x2c8}, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V638, V644, S4, S9, S8, S7, S6, S5, V645, 0x68f]
Exit stack: [V12, 0xb0, V56, V58, V66, V69, V71, S11, {0xb0, 0x2c8}, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V638, V644, S4, S9, S8, S7, S6, S5, V645, 0x68f]

================================

Block 0x68f
[0x68f:0x6f0]
---
Predecessors: [0xd57]
Successors: [0x6f1, 0x6f2]
---
0x68f JUMPDEST
0x690 PUSH1 0x1
0x692 PUSH1 0xa0
0x694 PUSH1 0x2
0x696 EXP
0x697 SUB
0x698 SWAP10
0x699 DUP11
0x69a AND
0x69b DUP2
0x69c MSTORE
0x69d SWAP8
0x69e DUP10
0x69f AND
0x6a0 PUSH1 0x20
0x6a2 DUP10
0x6a3 ADD
0x6a4 MSTORE
0x6a5 SWAP6
0x6a6 DUP9
0x6a7 AND
0x6a8 PUSH1 0x40
0x6aa DUP1
0x6ab DUP10
0x6ac ADD
0x6ad SWAP2
0x6ae SWAP1
0x6af SWAP2
0x6b0 MSTORE
0x6b1 PUSH1 0x60
0x6b3 DUP9
0x6b4 ADD
0x6b5 SWAP6
0x6b6 SWAP1
0x6b7 SWAP6
0x6b8 MSTORE
0x6b9 PUSH1 0x80
0x6bb DUP8
0x6bc ADD
0x6bd SWAP4
0x6be SWAP1
0x6bf SWAP4
0x6c0 MSTORE
0x6c1 SWAP1
0x6c2 DUP7
0x6c3 AND
0x6c4 PUSH1 0xa0
0x6c6 DUP7
0x6c7 ADD
0x6c8 MSTORE
0x6c9 DUP6
0x6ca AND
0x6cb PUSH1 0xc0
0x6cd DUP6
0x6ce ADD
0x6cf MSTORE
0x6d0 PUSH1 0xe0
0x6d2 DUP5
0x6d3 ADD
0x6d4 MSTORE
0x6d5 SWAP3
0x6d6 AND
0x6d7 PUSH2 0x100
0x6da DUP3
0x6db ADD
0x6dc MSTORE
0x6dd SWAP1
0x6de MLOAD
0x6df SWAP1
0x6e0 DUP2
0x6e1 SWAP1
0x6e2 SUB
0x6e3 PUSH2 0x120
0x6e6 ADD
0x6e7 SWAP1
0x6e8 DUP3
0x6e9 CREATE
0x6ea DUP1
0x6eb ISZERO
0x6ec ISZERO
0x6ed PUSH2 0x6f2
0x6f0 JUMPI
---
0x68f: JUMPDEST 
0x690: V648 = 0x1
0x692: V649 = 0xa0
0x694: V650 = 0x2
0x696: V651 = EXP 0x2 0xa0
0x697: V652 = SUB 0x10000000000000000000000000000000000000000 0x1
0x69a: V653 = AND 0xffffffffffffffffffffffffffffffffffffffff S9
0x69c: M[V1277] = V653
0x69f: V654 = AND 0xffffffffffffffffffffffffffffffffffffffff S8
0x6a0: V655 = 0x20
0x6a3: V656 = ADD V1277 0x20
0x6a4: M[V656] = V654
0x6a7: V657 = AND 0xffffffffffffffffffffffffffffffffffffffff S7
0x6a8: V658 = 0x40
0x6ac: V659 = ADD V1277 0x40
0x6b0: M[V659] = V657
0x6b1: V660 = 0x60
0x6b4: V661 = ADD V1277 0x60
0x6b8: M[V661] = S6
0x6b9: V662 = 0x80
0x6bc: V663 = ADD V1277 0x80
0x6c0: M[V663] = S5
0x6c3: V664 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x6c4: V665 = 0xa0
0x6c7: V666 = ADD V1277 0xa0
0x6c8: M[V666] = V664
0x6ca: V667 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x6cb: V668 = 0xc0
0x6ce: V669 = ADD V1277 0xc0
0x6cf: M[V669] = V667
0x6d0: V670 = 0xe0
0x6d3: V671 = ADD V1277 0xe0
0x6d4: M[V671] = S2
0x6d6: V672 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x6d7: V673 = 0x100
0x6db: V674 = ADD V1277 0x100
0x6dc: M[V674] = V672
0x6de: V675 = M[0x40]
0x6e2: V676 = SUB V1277 V675
0x6e3: V677 = 0x120
0x6e6: V678 = ADD 0x120 V676
0x6e9: V679 = CREATE S10 V675 V678
0x6eb: V680 = ISZERO V679
0x6ec: V681 = ISZERO V680
0x6ed: V682 = 0x6f2
0x6f0: JUMPI 0x6f2 V681
---
Entry stack: [V12, 0xb0, V56, V58, V66, V69, V71, S21, {0xb0, 0x2c8}, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1277]
Stack pops: 11
Stack additions: [S10, V679]
Exit stack: [V12, 0xb0, V56, V58, V66, V69, V71, S21, {0xb0, 0x2c8}, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, V679]

================================

Block 0x6f1
[0x6f1:0x6f1]
---
Predecessors: [0x68f]
Successors: []
---
0x6f1 INVALID
---
0x6f1: INVALID 
---
Entry stack: [V12, 0xb0, V56, V58, V66, V69, V71, S12, {0xb0, 0x2c8}, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V679]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb0, V56, V58, V66, V69, V71, S12, {0xb0, 0x2c8}, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V679]

================================

Block 0x6f2
[0x6f2:0x722]
---
Predecessors: [0x68f]
Successors: [0x723, 0x7a8]
---
0x6f2 JUMPDEST
0x6f3 PUSH1 0x1
0x6f5 PUSH1 0xa0
0x6f7 PUSH1 0x2
0x6f9 EXP
0x6fa SUB
0x6fb DUP1
0x6fc DUP3
0x6fd AND
0x6fe PUSH1 0x0
0x700 SWAP1
0x701 DUP2
0x702 MSTORE
0x703 PUSH1 0x20
0x705 DUP2
0x706 SWAP1
0x707 MSTORE
0x708 PUSH1 0x40
0x70a SWAP1
0x70b SHA3
0x70c DUP1
0x70d SLOAD
0x70e PUSH1 0xff
0x710 NOT
0x711 AND
0x712 PUSH1 0x1
0x714 OR
0x715 SWAP1
0x716 SSTORE
0x717 SWAP1
0x718 SWAP3
0x719 POP
0x71a DUP9
0x71b AND
0x71c ISZERO
0x71d SWAP1
0x71e POP
0x71f PUSH2 0x7a8
0x722 JUMPI
---
0x6f2: JUMPDEST 
0x6f3: V683 = 0x1
0x6f5: V684 = 0xa0
0x6f7: V685 = 0x2
0x6f9: V686 = EXP 0x2 0xa0
0x6fa: V687 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6fd: V688 = AND V679 0xffffffffffffffffffffffffffffffffffffffff
0x6fe: V689 = 0x0
0x702: M[0x0] = V688
0x703: V690 = 0x20
0x707: M[0x20] = 0x0
0x708: V691 = 0x40
0x70b: V692 = SHA3 0x0 0x40
0x70d: V693 = S[V692]
0x70e: V694 = 0xff
0x710: V695 = NOT 0xff
0x711: V696 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V693
0x712: V697 = 0x1
0x714: V698 = OR 0x1 V696
0x716: S[V692] = V698
0x71b: V699 = AND S8 0xffffffffffffffffffffffffffffffffffffffff
0x71c: V700 = ISZERO V699
0x71f: V701 = 0x7a8
0x722: JUMPI 0x7a8 V700
---
Entry stack: [V12, 0xb0, V56, V58, V66, V69, V71, S12, {0xb0, 0x2c8}, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V679]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S0]
Exit stack: [V12, 0xb0, V56, V58, V66, V69, V71, S12, {0xb0, 0x2c8}, S10, S9, S8, S7, S6, S5, S4, S3, V679]

================================

Block 0x723
[0x723:0x788]
---
Predecessors: [0x6f2]
Successors: [0x789, 0x78a]
---
0x723 DUP7
0x724 PUSH1 0x1
0x726 PUSH1 0xa0
0x728 PUSH1 0x2
0x72a EXP
0x72b SUB
0x72c AND
0x72d PUSH4 0xa9059cbb
0x732 DUP3
0x733 DUP12
0x734 PUSH1 0x0
0x736 PUSH1 0x40
0x738 MLOAD
0x739 PUSH1 0x20
0x73b ADD
0x73c MSTORE
0x73d PUSH1 0x40
0x73f MLOAD
0x740 DUP4
0x741 PUSH4 0xffffffff
0x746 AND
0x747 PUSH1 0xe0
0x749 PUSH1 0x2
0x74b EXP
0x74c MUL
0x74d DUP2
0x74e MSTORE
0x74f PUSH1 0x4
0x751 ADD
0x752 DUP1
0x753 DUP4
0x754 PUSH1 0x1
0x756 PUSH1 0xa0
0x758 PUSH1 0x2
0x75a EXP
0x75b SUB
0x75c AND
0x75d PUSH1 0x1
0x75f PUSH1 0xa0
0x761 PUSH1 0x2
0x763 EXP
0x764 SUB
0x765 AND
0x766 DUP2
0x767 MSTORE
0x768 PUSH1 0x20
0x76a ADD
0x76b DUP3
0x76c DUP2
0x76d MSTORE
0x76e PUSH1 0x20
0x770 ADD
0x771 SWAP3
0x772 POP
0x773 POP
0x774 POP
0x775 PUSH1 0x20
0x777 PUSH1 0x40
0x779 MLOAD
0x77a DUP1
0x77b DUP4
0x77c SUB
0x77d DUP2
0x77e PUSH1 0x0
0x780 DUP8
0x781 DUP1
0x782 EXTCODESIZE
0x783 ISZERO
0x784 ISZERO
0x785 PUSH2 0x78a
0x788 JUMPI
---
0x724: V702 = 0x1
0x726: V703 = 0xa0
0x728: V704 = 0x2
0x72a: V705 = EXP 0x2 0xa0
0x72b: V706 = SUB 0x10000000000000000000000000000000000000000 0x1
0x72c: V707 = AND 0xffffffffffffffffffffffffffffffffffffffff S6
0x72d: V708 = 0xa9059cbb
0x734: V709 = 0x0
0x736: V710 = 0x40
0x738: V711 = M[0x40]
0x739: V712 = 0x20
0x73b: V713 = ADD 0x20 V711
0x73c: M[V713] = 0x0
0x73d: V714 = 0x40
0x73f: V715 = M[0x40]
0x741: V716 = 0xffffffff
0x746: V717 = AND 0xffffffff 0xa9059cbb
0x747: V718 = 0xe0
0x749: V719 = 0x2
0x74b: V720 = EXP 0x2 0xe0
0x74c: V721 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x74e: M[V715] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x74f: V722 = 0x4
0x751: V723 = ADD 0x4 V715
0x754: V724 = 0x1
0x756: V725 = 0xa0
0x758: V726 = 0x2
0x75a: V727 = EXP 0x2 0xa0
0x75b: V728 = SUB 0x10000000000000000000000000000000000000000 0x1
0x75c: V729 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x75d: V730 = 0x1
0x75f: V731 = 0xa0
0x761: V732 = 0x2
0x763: V733 = EXP 0x2 0xa0
0x764: V734 = SUB 0x10000000000000000000000000000000000000000 0x1
0x765: V735 = AND 0xffffffffffffffffffffffffffffffffffffffff V729
0x767: M[V723] = V735
0x768: V736 = 0x20
0x76a: V737 = ADD 0x20 V723
0x76d: M[V737] = S8
0x76e: V738 = 0x20
0x770: V739 = ADD 0x20 V737
0x775: V740 = 0x20
0x777: V741 = 0x40
0x779: V742 = M[0x40]
0x77c: V743 = SUB V739 V742
0x77e: V744 = 0x0
0x782: V745 = EXTCODESIZE V707
0x783: V746 = ISZERO V745
0x784: V747 = ISZERO V746
0x785: V748 = 0x78a
0x788: JUMPI 0x78a V747
---
Entry stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S1, S0, V707, 0xa9059cbb, V739, 0x20, V742, V743, V742, 0x0, V707]
Exit stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, S1, S0, V707, 0xa9059cbb, V739, 0x20, V742, V743, V742, 0x0, V707]

================================

Block 0x789
[0x789:0x789]
---
Predecessors: [0x723]
Successors: []
---
0x789 INVALID
---
0x789: INVALID 
---
Entry stack: [V12, 0xb0, V56, V58, V66, V69, V71, S19, {0xb0, 0x2c8}, S17, S16, S15, S14, S13, S12, S11, S10, S9, V707, 0xa9059cbb, V739, 0x20, V742, V743, V742, 0x0, V707]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb0, V56, V58, V66, V69, V71, S19, {0xb0, 0x2c8}, S17, S16, S15, S14, S13, S12, S11, S10, S9, V707, 0xa9059cbb, V739, 0x20, V742, V743, V742, 0x0, V707]

================================

Block 0x78a
[0x78a:0x796]
---
Predecessors: [0x723]
Successors: [0x797, 0x798]
---
0x78a JUMPDEST
0x78b PUSH2 0x2c6
0x78e GAS
0x78f SUB
0x790 CALL
0x791 ISZERO
0x792 ISZERO
0x793 PUSH2 0x798
0x796 JUMPI
---
0x78a: JUMPDEST 
0x78b: V749 = 0x2c6
0x78e: V750 = GAS
0x78f: V751 = SUB V750 0x2c6
0x790: V752 = CALL V751 V707 0x0 V742 V743 V742 0x20
0x791: V753 = ISZERO V752
0x792: V754 = ISZERO V753
0x793: V755 = 0x798
0x796: JUMPI 0x798 V754
---
Entry stack: [V12, 0xb0, V56, V58, V66, V69, V71, S19, {0xb0, 0x2c8}, S17, S16, S15, S14, S13, S12, S11, S10, S9, V707, 0xa9059cbb, V739, 0x20, V742, V743, V742, 0x0, V707]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xb0, V56, V58, V66, V69, V71, S19, {0xb0, 0x2c8}, S17, S16, S15, S14, S13, S12, S11, S10, S9, V707, 0xa9059cbb, V739]

================================

Block 0x797
[0x797:0x797]
---
Predecessors: [0x78a]
Successors: []
---
0x797 INVALID
---
0x797: INVALID 
---
Entry stack: [V12, 0xb0, V56, V58, V66, V69, V71, S13, {0xb0, 0x2c8}, S11, S10, S9, S8, S7, S6, S5, S4, S3, V707, 0xa9059cbb, V739]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb0, V56, V58, V66, V69, V71, S13, {0xb0, 0x2c8}, S11, S10, S9, S8, S7, S6, S5, S4, S3, V707, 0xa9059cbb, V739]

================================

Block 0x798
[0x798:0x7a6]
---
Predecessors: [0x78a]
Successors: [0x7a7, 0x7a8]
---
0x798 JUMPDEST
0x799 POP
0x79a POP
0x79b PUSH1 0x40
0x79d MLOAD
0x79e MLOAD
0x79f ISZERO
0x7a0 ISZERO
0x7a1 SWAP1
0x7a2 POP
0x7a3 PUSH2 0x7a8
0x7a6 JUMPI
---
0x798: JUMPDEST 
0x79b: V756 = 0x40
0x79d: V757 = M[0x40]
0x79e: V758 = M[V757]
0x79f: V759 = ISZERO V758
0x7a0: V760 = ISZERO V759
0x7a3: V761 = 0x7a8
0x7a6: JUMPI 0x7a8 V760
---
Entry stack: [V12, 0xb0, V56, V58, V66, V69, V71, S13, {0xb0, 0x2c8}, S11, S10, S9, S8, S7, S6, S5, S4, S3, V707, 0xa9059cbb, V739]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xb0, V56, V58, V66, V69, V71, S13, {0xb0, 0x2c8}, S11, S10, S9, S8, S7, S6, S5, S4, S3]

================================

Block 0x7a7
[0x7a7:0x7a7]
---
Predecessors: [0x798]
Successors: []
---
0x7a7 INVALID
---
0x7a7: INVALID 
---
Entry stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x7a8
[0x7a8:0x7a8]
---
Predecessors: [0x6f2, 0x798]
Successors: [0x7a9]
---
0x7a8 JUMPDEST
---
0x7a8: JUMPDEST 
---
Entry stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x7a9
[0x7a9:0x81e]
---
Predecessors: [0x7a8]
Successors: [0x81f]
---
0x7a9 JUMPDEST
0x7aa PUSH1 0x1
0x7ac SLOAD
0x7ad PUSH1 0x40
0x7af DUP1
0x7b0 MLOAD
0x7b1 PUSH1 0x1
0x7b3 PUSH1 0xa0
0x7b5 PUSH1 0x2
0x7b7 EXP
0x7b8 SUB
0x7b9 CALLER
0x7ba DUP2
0x7bb AND
0x7bc DUP3
0x7bd MSTORE
0x7be SWAP3
0x7bf DUP4
0x7c0 AND
0x7c1 PUSH1 0x20
0x7c3 DUP3
0x7c4 ADD
0x7c5 MSTORE
0x7c6 DUP7
0x7c7 DUP4
0x7c8 AND
0x7c9 DUP2
0x7ca DUP4
0x7cb ADD
0x7cc MSTORE
0x7cd DUP4
0x7ce DUP4
0x7cf AND
0x7d0 PUSH1 0x60
0x7d2 DUP3
0x7d3 ADD
0x7d4 MSTORE
0x7d5 PUSH1 0x80
0x7d7 DUP2
0x7d8 ADD
0x7d9 DUP13
0x7da SWAP1
0x7db MSTORE
0x7dc PUSH1 0xa0
0x7de DUP2
0x7df ADD
0x7e0 DUP12
0x7e1 SWAP1
0x7e2 MSTORE
0x7e3 DUP10
0x7e4 DUP4
0x7e5 AND
0x7e6 PUSH1 0xc0
0x7e8 DUP3
0x7e9 ADD
0x7ea MSTORE
0x7eb SWAP2
0x7ec DUP9
0x7ed AND
0x7ee PUSH1 0xe0
0x7f0 DUP4
0x7f1 ADD
0x7f2 MSTORE
0x7f3 MLOAD
0x7f4 PUSH32 0xb37a1c53aba4fad02b291de64661708d721fe305d8052657a781feca311494ee
0x815 SWAP2
0x816 DUP2
0x817 SWAP1
0x818 SUB
0x819 PUSH2 0x100
0x81c ADD
0x81d SWAP1
0x81e LOG1
---
0x7a9: JUMPDEST 
0x7aa: V762 = 0x1
0x7ac: V763 = S[0x1]
0x7ad: V764 = 0x40
0x7b0: V765 = M[0x40]
0x7b1: V766 = 0x1
0x7b3: V767 = 0xa0
0x7b5: V768 = 0x2
0x7b7: V769 = EXP 0x2 0xa0
0x7b8: V770 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7b9: V771 = CALLER
0x7bb: V772 = AND 0xffffffffffffffffffffffffffffffffffffffff V771
0x7bd: M[V765] = V772
0x7c0: V773 = AND 0xffffffffffffffffffffffffffffffffffffffff V763
0x7c1: V774 = 0x20
0x7c4: V775 = ADD V765 0x20
0x7c5: M[V775] = V773
0x7c8: V776 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x7cb: V777 = ADD 0x40 V765
0x7cc: M[V777] = V776
0x7cf: V778 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x7d0: V779 = 0x60
0x7d3: V780 = ADD V765 0x60
0x7d4: M[V780] = V778
0x7d5: V781 = 0x80
0x7d8: V782 = ADD V765 0x80
0x7db: M[V782] = S8
0x7dc: V783 = 0xa0
0x7df: V784 = ADD V765 0xa0
0x7e2: M[V784] = S7
0x7e5: V785 = AND 0xffffffffffffffffffffffffffffffffffffffff S6
0x7e6: V786 = 0xc0
0x7e9: V787 = ADD V765 0xc0
0x7ea: M[V787] = V785
0x7ed: V788 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x7ee: V789 = 0xe0
0x7f1: V790 = ADD V765 0xe0
0x7f2: M[V790] = V788
0x7f3: V791 = M[0x40]
0x7f4: V792 = 0xb37a1c53aba4fad02b291de64661708d721fe305d8052657a781feca311494ee
0x818: V793 = SUB V765 V791
0x819: V794 = 0x100
0x81c: V795 = ADD 0x100 V793
0x81e: LOG V791 V795 0xb37a1c53aba4fad02b291de64661708d721fe305d8052657a781feca311494ee
---
Entry stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x81f
[0x81f:0x829]
---
Predecessors: [0x7a9]
Successors: [0x646]
---
0x81f JUMPDEST
0x820 PUSH1 0x1
0x822 SWAP1
0x823 SWAP2
0x824 ADD
0x825 SWAP1
0x826 PUSH2 0x646
0x829 JUMP
---
0x81f: JUMPDEST 
0x820: V796 = 0x1
0x824: V797 = ADD S1 0x1
0x826: V798 = 0x646
0x829: JUMP 0x646
---
Entry stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [V797, S0]
Exit stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, V797, S0]

================================

Block 0x82a
[0x82a:0x82a]
---
Predecessors: [0x646]
Successors: [0x82b]
---
0x82a JUMPDEST
---
0x82a: JUMPDEST 
---
Entry stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x82b
[0x82b:0x835]
---
Predecessors: [0x82a]
Successors: [0xb0, 0x2c8]
---
0x82b JUMPDEST
0x82c POP
0x82d POP
0x82e POP
0x82f POP
0x830 POP
0x831 POP
0x832 POP
0x833 POP
0x834 POP
0x835 JUMP
---
0x82b: JUMPDEST 
0x835: JUMP {0xb0, 0x2c8}
---
Entry stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10, {0xb0, 0x2c8}, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 10
Stack additions: []
Exit stack: [V12, 0xb0, V56, V58, V66, V69, V71, S10]

================================

Block 0x836
[0x836:0x84d]
---
Predecessors: [0x183]
Successors: [0x84e, 0x861]
---
0x836 JUMPDEST
0x837 PUSH1 0x3
0x839 SLOAD
0x83a CALLER
0x83b PUSH1 0x1
0x83d PUSH1 0xa0
0x83f PUSH1 0x2
0x841 EXP
0x842 SUB
0x843 SWAP1
0x844 DUP2
0x845 AND
0x846 SWAP2
0x847 AND
0x848 EQ
0x849 DUP1
0x84a PUSH2 0x861
0x84d JUMPI
---
0x836: JUMPDEST 
0x837: V799 = 0x3
0x839: V800 = S[0x3]
0x83a: V801 = CALLER
0x83b: V802 = 0x1
0x83d: V803 = 0xa0
0x83f: V804 = 0x2
0x841: V805 = EXP 0x2 0xa0
0x842: V806 = SUB 0x10000000000000000000000000000000000000000 0x1
0x845: V807 = AND 0xffffffffffffffffffffffffffffffffffffffff V801
0x847: V808 = AND V800 0xffffffffffffffffffffffffffffffffffffffff
0x848: V809 = EQ V808 V807
0x84a: V810 = 0x861
0x84d: JUMPI 0x861 V809
---
Entry stack: [V12, 0xb0, V155]
Stack pops: 0
Stack additions: [V809]
Exit stack: [V12, 0xb0, V155, V809]

================================

Block 0x84e
[0x84e:0x860]
---
Predecessors: [0x836]
Successors: [0x861]
---
0x84e POP
0x84f PUSH1 0x1
0x851 SLOAD
0x852 CALLER
0x853 PUSH1 0x1
0x855 PUSH1 0xa0
0x857 PUSH1 0x2
0x859 EXP
0x85a SUB
0x85b SWAP1
0x85c DUP2
0x85d AND
0x85e SWAP2
0x85f AND
0x860 EQ
---
0x84f: V811 = 0x1
0x851: V812 = S[0x1]
0x852: V813 = CALLER
0x853: V814 = 0x1
0x855: V815 = 0xa0
0x857: V816 = 0x2
0x859: V817 = EXP 0x2 0xa0
0x85a: V818 = SUB 0x10000000000000000000000000000000000000000 0x1
0x85d: V819 = AND 0xffffffffffffffffffffffffffffffffffffffff V813
0x85f: V820 = AND V812 0xffffffffffffffffffffffffffffffffffffffff
0x860: V821 = EQ V820 V819
---
Entry stack: [V12, 0xb0, V155, V809]
Stack pops: 1
Stack additions: [V821]
Exit stack: [V12, 0xb0, V155, V821]

================================

Block 0x861
[0x861:0x867]
---
Predecessors: [0x836, 0x84e]
Successors: [0x868, 0x86d]
---
0x861 JUMPDEST
0x862 ISZERO
0x863 ISZERO
0x864 PUSH2 0x86d
0x867 JUMPI
---
0x861: JUMPDEST 
0x862: V822 = ISZERO S0
0x863: V823 = ISZERO V822
0x864: V824 = 0x86d
0x867: JUMPI 0x86d V823
---
Entry stack: [V12, 0xb0, V155, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xb0, V155]

================================

Block 0x868
[0x868:0x86c]
---
Predecessors: [0x861]
Successors: []
---
0x868 PUSH1 0x0
0x86a PUSH1 0x0
0x86c REVERT
---
0x868: V825 = 0x0
0x86a: V826 = 0x0
0x86c: REVERT 0x0 0x0
---
Entry stack: [V12, 0xb0, V155]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb0, V155]

================================

Block 0x86d
[0x86d:0x88f]
---
Predecessors: [0x861]
Successors: [0x890, 0x895]
---
0x86d JUMPDEST
0x86e PUSH1 0x1
0x870 PUSH1 0xa0
0x872 PUSH1 0x2
0x874 EXP
0x875 SUB
0x876 DUP2
0x877 AND
0x878 PUSH1 0x0
0x87a SWAP1
0x87b DUP2
0x87c MSTORE
0x87d PUSH1 0x20
0x87f DUP2
0x880 SWAP1
0x881 MSTORE
0x882 PUSH1 0x40
0x884 SWAP1
0x885 SHA3
0x886 SLOAD
0x887 PUSH1 0xff
0x889 AND
0x88a ISZERO
0x88b ISZERO
0x88c PUSH2 0x895
0x88f JUMPI
---
0x86d: JUMPDEST 
0x86e: V827 = 0x1
0x870: V828 = 0xa0
0x872: V829 = 0x2
0x874: V830 = EXP 0x2 0xa0
0x875: V831 = SUB 0x10000000000000000000000000000000000000000 0x1
0x877: V832 = AND V155 0xffffffffffffffffffffffffffffffffffffffff
0x878: V833 = 0x0
0x87c: M[0x0] = V832
0x87d: V834 = 0x20
0x881: M[0x20] = 0x0
0x882: V835 = 0x40
0x885: V836 = SHA3 0x0 0x40
0x886: V837 = S[V836]
0x887: V838 = 0xff
0x889: V839 = AND 0xff V837
0x88a: V840 = ISZERO V839
0x88b: V841 = ISZERO V840
0x88c: V842 = 0x895
0x88f: JUMPI 0x895 V841
---
Entry stack: [V12, 0xb0, V155]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xb0, V155]

================================

Block 0x890
[0x890:0x894]
---
Predecessors: [0x86d]
Successors: []
---
0x890 PUSH1 0x0
0x892 PUSH1 0x0
0x894 REVERT
---
0x890: V843 = 0x0
0x892: V844 = 0x0
0x894: REVERT 0x0 0x0
---
Entry stack: [V12, 0xb0, V155]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb0, V155]

================================

Block 0x895
[0x895:0x904]
---
Predecessors: [0x86d]
Successors: [0x905, 0x906]
---
0x895 JUMPDEST
0x896 PUSH1 0x1
0x898 PUSH1 0xa0
0x89a PUSH1 0x2
0x89c EXP
0x89d SUB
0x89e DUP1
0x89f DUP3
0x8a0 AND
0x8a1 PUSH1 0x0
0x8a3 DUP2
0x8a4 DUP2
0x8a5 MSTORE
0x8a6 PUSH1 0x20
0x8a8 DUP2
0x8a9 SWAP1
0x8aa MSTORE
0x8ab PUSH1 0x40
0x8ad DUP1
0x8ae DUP3
0x8af SHA3
0x8b0 DUP1
0x8b1 SLOAD
0x8b2 PUSH1 0xff
0x8b4 NOT
0x8b5 AND
0x8b6 SWAP1
0x8b7 SSTORE
0x8b8 DUP1
0x8b9 MLOAD
0x8ba PUSH32 0x2ebf1d5800000000000000000000000000000000000000000000000000000000
0x8db DUP2
0x8dc MSTORE
0x8dd CALLER
0x8de SWAP1
0x8df SWAP5
0x8e0 AND
0x8e1 PUSH1 0x4
0x8e3 DUP6
0x8e4 ADD
0x8e5 MSTORE
0x8e6 MLOAD
0x8e7 SWAP2
0x8e8 SWAP3
0x8e9 PUSH4 0x2ebf1d58
0x8ee SWAP3
0x8ef PUSH1 0x24
0x8f1 DUP1
0x8f2 DUP4
0x8f3 ADD
0x8f4 SWAP4
0x8f5 SWAP3
0x8f6 DUP3
0x8f7 SWAP1
0x8f8 SUB
0x8f9 ADD
0x8fa DUP2
0x8fb DUP4
0x8fc DUP8
0x8fd DUP1
0x8fe EXTCODESIZE
0x8ff ISZERO
0x900 ISZERO
0x901 PUSH2 0x906
0x904 JUMPI
---
0x895: JUMPDEST 
0x896: V845 = 0x1
0x898: V846 = 0xa0
0x89a: V847 = 0x2
0x89c: V848 = EXP 0x2 0xa0
0x89d: V849 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8a0: V850 = AND V155 0xffffffffffffffffffffffffffffffffffffffff
0x8a1: V851 = 0x0
0x8a5: M[0x0] = V850
0x8a6: V852 = 0x20
0x8aa: M[0x20] = 0x0
0x8ab: V853 = 0x40
0x8af: V854 = SHA3 0x0 0x40
0x8b1: V855 = S[V854]
0x8b2: V856 = 0xff
0x8b4: V857 = NOT 0xff
0x8b5: V858 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V855
0x8b7: S[V854] = V858
0x8b9: V859 = M[0x40]
0x8ba: V860 = 0x2ebf1d5800000000000000000000000000000000000000000000000000000000
0x8dc: M[V859] = 0x2ebf1d5800000000000000000000000000000000000000000000000000000000
0x8dd: V861 = CALLER
0x8e0: V862 = AND 0xffffffffffffffffffffffffffffffffffffffff V861
0x8e1: V863 = 0x4
0x8e4: V864 = ADD V859 0x4
0x8e5: M[V864] = V862
0x8e6: V865 = M[0x40]
0x8e9: V866 = 0x2ebf1d58
0x8ef: V867 = 0x24
0x8f3: V868 = ADD V859 0x24
0x8f8: V869 = SUB V859 V865
0x8f9: V870 = ADD V869 0x24
0x8fe: V871 = EXTCODESIZE V850
0x8ff: V872 = ISZERO V871
0x900: V873 = ISZERO V872
0x901: V874 = 0x906
0x904: JUMPI 0x906 V873
---
Entry stack: [V12, 0xb0, V155]
Stack pops: 1
Stack additions: [S0, V850, 0x2ebf1d58, V868, 0x0, V865, V870, V865, 0x0, V850]
Exit stack: [V12, 0xb0, V155, V850, 0x2ebf1d58, V868, 0x0, V865, V870, V865, 0x0, V850]

================================

Block 0x905
[0x905:0x905]
---
Predecessors: [0x895]
Successors: []
---
0x905 INVALID
---
0x905: INVALID 
---
Entry stack: [V12, 0xb0, V155, V850, 0x2ebf1d58, V868, 0x0, V865, V870, V865, 0x0, V850]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb0, V155, V850, 0x2ebf1d58, V868, 0x0, V865, V870, V865, 0x0, V850]

================================

Block 0x906
[0x906:0x912]
---
Predecessors: [0x895]
Successors: [0x913, 0x914]
---
0x906 JUMPDEST
0x907 PUSH2 0x2c6
0x90a GAS
0x90b SUB
0x90c CALL
0x90d ISZERO
0x90e ISZERO
0x90f PUSH2 0x914
0x912 JUMPI
---
0x906: JUMPDEST 
0x907: V875 = 0x2c6
0x90a: V876 = GAS
0x90b: V877 = SUB V876 0x2c6
0x90c: V878 = CALL V877 V850 0x0 V865 V870 V865 0x0
0x90d: V879 = ISZERO V878
0x90e: V880 = ISZERO V879
0x90f: V881 = 0x914
0x912: JUMPI 0x914 V880
---
Entry stack: [V12, 0xb0, V155, V850, 0x2ebf1d58, V868, 0x0, V865, V870, V865, 0x0, V850]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xb0, V155, V850, 0x2ebf1d58, V868]

================================

Block 0x913
[0x913:0x913]
---
Predecessors: [0x906]
Successors: []
---
0x913 INVALID
---
0x913: INVALID 
---
Entry stack: [V12, 0xb0, V155, V850, 0x2ebf1d58, V868]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb0, V155, V850, 0x2ebf1d58, V868]

================================

Block 0x914
[0x914:0x917]
---
Predecessors: [0x906]
Successors: [0x918]
---
0x914 JUMPDEST
0x915 POP
0x916 POP
0x917 POP
---
0x914: JUMPDEST 
---
Entry stack: [V12, 0xb0, V155, V850, 0x2ebf1d58, V868]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xb0, V155]

================================

Block 0x918
[0x918:0x91a]
---
Predecessors: [0x914]
Successors: [0xb0]
---
0x918 JUMPDEST
0x919 POP
0x91a JUMP
---
0x918: JUMPDEST 
0x91a: JUMP 0xb0
---
Entry stack: [V12, 0xb0, V155]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x91b
[0x91b:0x93d]
---
Predecessors: [0x1a1]
Successors: [0x93e, 0x943]
---
0x91b JUMPDEST
0x91c PUSH1 0x1
0x91e PUSH1 0xa0
0x920 PUSH1 0x2
0x922 EXP
0x923 SUB
0x924 DUP2
0x925 AND
0x926 PUSH1 0x0
0x928 SWAP1
0x929 DUP2
0x92a MSTORE
0x92b PUSH1 0x20
0x92d DUP2
0x92e SWAP1
0x92f MSTORE
0x930 PUSH1 0x40
0x932 DUP2
0x933 SHA3
0x934 SLOAD
0x935 PUSH1 0xff
0x937 AND
0x938 ISZERO
0x939 ISZERO
0x93a PUSH2 0x943
0x93d JUMPI
---
0x91b: JUMPDEST 
0x91c: V882 = 0x1
0x91e: V883 = 0xa0
0x920: V884 = 0x2
0x922: V885 = EXP 0x2 0xa0
0x923: V886 = SUB 0x10000000000000000000000000000000000000000 0x1
0x925: V887 = AND V171 0xffffffffffffffffffffffffffffffffffffffff
0x926: V888 = 0x0
0x92a: M[0x0] = V887
0x92b: V889 = 0x20
0x92f: M[0x20] = 0x0
0x930: V890 = 0x40
0x933: V891 = SHA3 0x0 0x40
0x934: V892 = S[V891]
0x935: V893 = 0xff
0x937: V894 = AND 0xff V892
0x938: V895 = ISZERO V894
0x939: V896 = ISZERO V895
0x93a: V897 = 0x943
0x93d: JUMPI 0x943 V896
---
Entry stack: [V12, 0xb0, V168, V171]
Stack pops: 1
Stack additions: [S0, 0x0]
Exit stack: [V12, 0xb0, V168, V171, 0x0]

================================

Block 0x93e
[0x93e:0x942]
---
Predecessors: [0x91b]
Successors: []
---
0x93e PUSH1 0x0
0x940 PUSH1 0x0
0x942 REVERT
---
0x93e: V898 = 0x0
0x940: V899 = 0x0
0x942: REVERT 0x0 0x0
---
Entry stack: [V12, 0xb0, V168, V171, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb0, V168, V171, 0x0]

================================

Block 0x943
[0x943:0x9ab]
---
Predecessors: [0x91b]
Successors: [0x9ac, 0x9ad]
---
0x943 JUMPDEST
0x944 DUP2
0x945 SWAP1
0x946 POP
0x947 PUSH32 0x5edf34d4499d087e8b0dfaeec99a5f02a53dc00a89e2e1fcaf7d737c1e780e69
0x968 DUP2
0x969 PUSH1 0x1
0x96b PUSH1 0xa0
0x96d PUSH1 0x2
0x96f EXP
0x970 SUB
0x971 AND
0x972 PUSH4 0x8da5cb5b
0x977 PUSH1 0x0
0x979 PUSH1 0x40
0x97b MLOAD
0x97c PUSH1 0x20
0x97e ADD
0x97f MSTORE
0x980 PUSH1 0x40
0x982 MLOAD
0x983 DUP2
0x984 PUSH4 0xffffffff
0x989 AND
0x98a PUSH1 0xe0
0x98c PUSH1 0x2
0x98e EXP
0x98f MUL
0x990 DUP2
0x991 MSTORE
0x992 PUSH1 0x4
0x994 ADD
0x995 DUP1
0x996 SWAP1
0x997 POP
0x998 PUSH1 0x20
0x99a PUSH1 0x40
0x99c MLOAD
0x99d DUP1
0x99e DUP4
0x99f SUB
0x9a0 DUP2
0x9a1 PUSH1 0x0
0x9a3 DUP8
0x9a4 DUP1
0x9a5 EXTCODESIZE
0x9a6 ISZERO
0x9a7 ISZERO
0x9a8 PUSH2 0x9ad
0x9ab JUMPI
---
0x943: JUMPDEST 
0x947: V900 = 0x5edf34d4499d087e8b0dfaeec99a5f02a53dc00a89e2e1fcaf7d737c1e780e69
0x969: V901 = 0x1
0x96b: V902 = 0xa0
0x96d: V903 = 0x2
0x96f: V904 = EXP 0x2 0xa0
0x970: V905 = SUB 0x10000000000000000000000000000000000000000 0x1
0x971: V906 = AND 0xffffffffffffffffffffffffffffffffffffffff V171
0x972: V907 = 0x8da5cb5b
0x977: V908 = 0x0
0x979: V909 = 0x40
0x97b: V910 = M[0x40]
0x97c: V911 = 0x20
0x97e: V912 = ADD 0x20 V910
0x97f: M[V912] = 0x0
0x980: V913 = 0x40
0x982: V914 = M[0x40]
0x984: V915 = 0xffffffff
0x989: V916 = AND 0xffffffff 0x8da5cb5b
0x98a: V917 = 0xe0
0x98c: V918 = 0x2
0x98e: V919 = EXP 0x2 0xe0
0x98f: V920 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x8da5cb5b
0x991: M[V914] = 0x8da5cb5b00000000000000000000000000000000000000000000000000000000
0x992: V921 = 0x4
0x994: V922 = ADD 0x4 V914
0x998: V923 = 0x20
0x99a: V924 = 0x40
0x99c: V925 = M[0x40]
0x99f: V926 = SUB V922 V925
0x9a1: V927 = 0x0
0x9a5: V928 = EXTCODESIZE V906
0x9a6: V929 = ISZERO V928
0x9a7: V930 = ISZERO V929
0x9a8: V931 = 0x9ad
0x9ab: JUMPI 0x9ad V930
---
Entry stack: [V12, 0xb0, V168, V171, 0x0]
Stack pops: 2
Stack additions: [S1, S1, 0x5edf34d4499d087e8b0dfaeec99a5f02a53dc00a89e2e1fcaf7d737c1e780e69, V906, 0x8da5cb5b, V922, 0x20, V925, V926, V925, 0x0, V906]
Exit stack: [V12, 0xb0, V168, V171, V171, 0x5edf34d4499d087e8b0dfaeec99a5f02a53dc00a89e2e1fcaf7d737c1e780e69, V906, 0x8da5cb5b, V922, 0x20, V925, V926, V925, 0x0, V906]

================================

Block 0x9ac
[0x9ac:0x9ac]
---
Predecessors: [0x943]
Successors: []
---
0x9ac INVALID
---
0x9ac: INVALID 
---
Entry stack: [V12, 0xb0, V168, V171, V171, 0x5edf34d4499d087e8b0dfaeec99a5f02a53dc00a89e2e1fcaf7d737c1e780e69, V906, 0x8da5cb5b, V922, 0x20, V925, V926, V925, 0x0, V906]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb0, V168, V171, V171, 0x5edf34d4499d087e8b0dfaeec99a5f02a53dc00a89e2e1fcaf7d737c1e780e69, V906, 0x8da5cb5b, V922, 0x20, V925, V926, V925, 0x0, V906]

================================

Block 0x9ad
[0x9ad:0x9b9]
---
Predecessors: [0x943]
Successors: [0x9ba, 0x9bb]
---
0x9ad JUMPDEST
0x9ae PUSH2 0x2c6
0x9b1 GAS
0x9b2 SUB
0x9b3 CALL
0x9b4 ISZERO
0x9b5 ISZERO
0x9b6 PUSH2 0x9bb
0x9b9 JUMPI
---
0x9ad: JUMPDEST 
0x9ae: V932 = 0x2c6
0x9b1: V933 = GAS
0x9b2: V934 = SUB V933 0x2c6
0x9b3: V935 = CALL V934 V906 0x0 V925 V926 V925 0x20
0x9b4: V936 = ISZERO V935
0x9b5: V937 = ISZERO V936
0x9b6: V938 = 0x9bb
0x9b9: JUMPI 0x9bb V937
---
Entry stack: [V12, 0xb0, V168, V171, V171, 0x5edf34d4499d087e8b0dfaeec99a5f02a53dc00a89e2e1fcaf7d737c1e780e69, V906, 0x8da5cb5b, V922, 0x20, V925, V926, V925, 0x0, V906]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xb0, V168, V171, V171, 0x5edf34d4499d087e8b0dfaeec99a5f02a53dc00a89e2e1fcaf7d737c1e780e69, V906, 0x8da5cb5b, V922]

================================

Block 0x9ba
[0x9ba:0x9ba]
---
Predecessors: [0x9ad]
Successors: []
---
0x9ba INVALID
---
0x9ba: INVALID 
---
Entry stack: [V12, 0xb0, V168, V171, V171, 0x5edf34d4499d087e8b0dfaeec99a5f02a53dc00a89e2e1fcaf7d737c1e780e69, V906, 0x8da5cb5b, V922]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb0, V168, V171, V171, 0x5edf34d4499d087e8b0dfaeec99a5f02a53dc00a89e2e1fcaf7d737c1e780e69, V906, 0x8da5cb5b, V922]

================================

Block 0x9bb
[0x9bb:0xa0a]
---
Predecessors: [0x9ad]
Successors: [0xa0b, 0xa0c]
---
0x9bb JUMPDEST
0x9bc POP
0x9bd POP
0x9be POP
0x9bf PUSH1 0x40
0x9c1 MLOAD
0x9c2 DUP1
0x9c3 MLOAD
0x9c4 SWAP1
0x9c5 POP
0x9c6 DUP5
0x9c7 DUP4
0x9c8 PUSH1 0x1
0x9ca PUSH1 0xa0
0x9cc PUSH1 0x2
0x9ce EXP
0x9cf SUB
0x9d0 AND
0x9d1 PUSH4 0x77c93662
0x9d6 PUSH1 0x0
0x9d8 PUSH1 0x40
0x9da MLOAD
0x9db PUSH1 0x20
0x9dd ADD
0x9de MSTORE
0x9df PUSH1 0x40
0x9e1 MLOAD
0x9e2 DUP2
0x9e3 PUSH4 0xffffffff
0x9e8 AND
0x9e9 PUSH1 0xe0
0x9eb PUSH1 0x2
0x9ed EXP
0x9ee MUL
0x9ef DUP2
0x9f0 MSTORE
0x9f1 PUSH1 0x4
0x9f3 ADD
0x9f4 DUP1
0x9f5 SWAP1
0x9f6 POP
0x9f7 PUSH1 0x20
0x9f9 PUSH1 0x40
0x9fb MLOAD
0x9fc DUP1
0x9fd DUP4
0x9fe SUB
0x9ff DUP2
0xa00 PUSH1 0x0
0xa02 DUP8
0xa03 DUP1
0xa04 EXTCODESIZE
0xa05 ISZERO
0xa06 ISZERO
0xa07 PUSH2 0xa0c
0xa0a JUMPI
---
0x9bb: JUMPDEST 
0x9bf: V939 = 0x40
0x9c1: V940 = M[0x40]
0x9c3: V941 = M[V940]
0x9c8: V942 = 0x1
0x9ca: V943 = 0xa0
0x9cc: V944 = 0x2
0x9ce: V945 = EXP 0x2 0xa0
0x9cf: V946 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9d0: V947 = AND 0xffffffffffffffffffffffffffffffffffffffff V171
0x9d1: V948 = 0x77c93662
0x9d6: V949 = 0x0
0x9d8: V950 = 0x40
0x9da: V951 = M[0x40]
0x9db: V952 = 0x20
0x9dd: V953 = ADD 0x20 V951
0x9de: M[V953] = 0x0
0x9df: V954 = 0x40
0x9e1: V955 = M[0x40]
0x9e3: V956 = 0xffffffff
0x9e8: V957 = AND 0xffffffff 0x77c93662
0x9e9: V958 = 0xe0
0x9eb: V959 = 0x2
0x9ed: V960 = EXP 0x2 0xe0
0x9ee: V961 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x77c93662
0x9f0: M[V955] = 0x77c9366200000000000000000000000000000000000000000000000000000000
0x9f1: V962 = 0x4
0x9f3: V963 = ADD 0x4 V955
0x9f7: V964 = 0x20
0x9f9: V965 = 0x40
0x9fb: V966 = M[0x40]
0x9fe: V967 = SUB V963 V966
0xa00: V968 = 0x0
0xa04: V969 = EXTCODESIZE V947
0xa05: V970 = ISZERO V969
0xa06: V971 = ISZERO V970
0xa07: V972 = 0xa0c
0xa0a: JUMPI 0xa0c V971
---
Entry stack: [V12, 0xb0, V168, V171, V171, 0x5edf34d4499d087e8b0dfaeec99a5f02a53dc00a89e2e1fcaf7d737c1e780e69, V906, 0x8da5cb5b, V922]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, V941, S6, V947, 0x77c93662, V963, 0x20, V966, V967, V966, 0x0, V947]
Exit stack: [V12, 0xb0, V168, V171, V171, 0x5edf34d4499d087e8b0dfaeec99a5f02a53dc00a89e2e1fcaf7d737c1e780e69, V941, V168, V947, 0x77c93662, V963, 0x20, V966, V967, V966, 0x0, V947]

================================

Block 0xa0b
[0xa0b:0xa0b]
---
Predecessors: [0x9bb]
Successors: []
---
0xa0b INVALID
---
0xa0b: INVALID 
---
Entry stack: [V12, 0xb0, V168, V171, V171, 0x5edf34d4499d087e8b0dfaeec99a5f02a53dc00a89e2e1fcaf7d737c1e780e69, V941, V168, V947, 0x77c93662, V963, 0x20, V966, V967, V966, 0x0, V947]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb0, V168, V171, V171, 0x5edf34d4499d087e8b0dfaeec99a5f02a53dc00a89e2e1fcaf7d737c1e780e69, V941, V168, V947, 0x77c93662, V963, 0x20, V966, V967, V966, 0x0, V947]

================================

Block 0xa0c
[0xa0c:0xa18]
---
Predecessors: [0x9bb]
Successors: [0xa19, 0xa1a]
---
0xa0c JUMPDEST
0xa0d PUSH2 0x2c6
0xa10 GAS
0xa11 SUB
0xa12 CALL
0xa13 ISZERO
0xa14 ISZERO
0xa15 PUSH2 0xa1a
0xa18 JUMPI
---
0xa0c: JUMPDEST 
0xa0d: V973 = 0x2c6
0xa10: V974 = GAS
0xa11: V975 = SUB V974 0x2c6
0xa12: V976 = CALL V975 V947 0x0 V966 V967 V966 0x20
0xa13: V977 = ISZERO V976
0xa14: V978 = ISZERO V977
0xa15: V979 = 0xa1a
0xa18: JUMPI 0xa1a V978
---
Entry stack: [V12, 0xb0, V168, V171, V171, 0x5edf34d4499d087e8b0dfaeec99a5f02a53dc00a89e2e1fcaf7d737c1e780e69, V941, V168, V947, 0x77c93662, V963, 0x20, V966, V967, V966, 0x0, V947]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xb0, V168, V171, V171, 0x5edf34d4499d087e8b0dfaeec99a5f02a53dc00a89e2e1fcaf7d737c1e780e69, V941, V168, V947, 0x77c93662, V963]

================================

Block 0xa19
[0xa19:0xa19]
---
Predecessors: [0xa0c]
Successors: []
---
0xa19 INVALID
---
0xa19: INVALID 
---
Entry stack: [V12, 0xb0, V168, V171, V171, 0x5edf34d4499d087e8b0dfaeec99a5f02a53dc00a89e2e1fcaf7d737c1e780e69, V941, V168, V947, 0x77c93662, V963]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb0, V168, V171, V171, 0x5edf34d4499d087e8b0dfaeec99a5f02a53dc00a89e2e1fcaf7d737c1e780e69, V941, V168, V947, 0x77c93662, V963]

================================

Block 0xa1a
[0xa1a:0xab8]
---
Predecessors: [0xa0c]
Successors: [0xab9, 0xaba]
---
0xa1a JUMPDEST
0xa1b POP
0xa1c POP
0xa1d PUSH1 0x40
0xa1f DUP1
0xa20 MLOAD
0xa21 DUP1
0xa22 MLOAD
0xa23 PUSH1 0x1
0xa25 PUSH1 0xa0
0xa27 PUSH1 0x2
0xa29 EXP
0xa2a SUB
0xa2b SWAP6
0xa2c DUP7
0xa2d AND
0xa2e DUP3
0xa2f MSTORE
0xa30 SWAP4
0xa31 DUP6
0xa32 AND
0xa33 PUSH1 0x20
0xa35 DUP3
0xa36 ADD
0xa37 MSTORE
0xa38 SWAP3
0xa39 DUP5
0xa3a AND
0xa3b DUP4
0xa3c DUP3
0xa3d ADD
0xa3e MSTORE
0xa3f SWAP3
0xa40 DUP7
0xa41 AND
0xa42 PUSH1 0x60
0xa44 DUP4
0xa45 ADD
0xa46 MSTORE
0xa47 POP
0xa48 SWAP1
0xa49 MLOAD
0xa4a SWAP1
0xa4b DUP2
0xa4c SWAP1
0xa4d SUB
0xa4e PUSH1 0x80
0xa50 ADD
0xa51 SWAP1
0xa52 LOG1
0xa53 PUSH1 0x40
0xa55 DUP1
0xa56 MLOAD
0xa57 PUSH32 0xba45b0b800000000000000000000000000000000000000000000000000000000
0xa78 DUP2
0xa79 MSTORE
0xa7a PUSH1 0x1
0xa7c PUSH1 0xa0
0xa7e PUSH1 0x2
0xa80 EXP
0xa81 SUB
0xa82 CALLER
0xa83 DUP2
0xa84 AND
0xa85 PUSH1 0x4
0xa87 DUP4
0xa88 ADD
0xa89 MSTORE
0xa8a DUP6
0xa8b DUP2
0xa8c AND
0xa8d PUSH1 0x24
0xa8f DUP4
0xa90 ADD
0xa91 MSTORE
0xa92 SWAP2
0xa93 MLOAD
0xa94 SWAP2
0xa95 DUP4
0xa96 AND
0xa97 SWAP2
0xa98 PUSH4 0xba45b0b8
0xa9d SWAP2
0xa9e PUSH1 0x44
0xaa0 DUP1
0xaa1 DUP3
0xaa2 ADD
0xaa3 SWAP3
0xaa4 PUSH1 0x0
0xaa6 SWAP3
0xaa7 SWAP1
0xaa8 SWAP2
0xaa9 SWAP1
0xaaa DUP3
0xaab SWAP1
0xaac SUB
0xaad ADD
0xaae DUP2
0xaaf DUP4
0xab0 DUP8
0xab1 DUP1
0xab2 EXTCODESIZE
0xab3 ISZERO
0xab4 ISZERO
0xab5 PUSH2 0xaba
0xab8 JUMPI
---
0xa1a: JUMPDEST 
0xa1d: V980 = 0x40
0xa20: V981 = M[0x40]
0xa22: V982 = M[V981]
0xa23: V983 = 0x1
0xa25: V984 = 0xa0
0xa27: V985 = 0x2
0xa29: V986 = EXP 0x2 0xa0
0xa2a: V987 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa2d: V988 = AND 0xffffffffffffffffffffffffffffffffffffffff V941
0xa2f: M[V981] = V988
0xa32: V989 = AND 0xffffffffffffffffffffffffffffffffffffffff V168
0xa33: V990 = 0x20
0xa36: V991 = ADD V981 0x20
0xa37: M[V991] = V989
0xa3a: V992 = AND 0xffffffffffffffffffffffffffffffffffffffff V982
0xa3d: V993 = ADD 0x40 V981
0xa3e: M[V993] = V992
0xa41: V994 = AND V171 0xffffffffffffffffffffffffffffffffffffffff
0xa42: V995 = 0x60
0xa45: V996 = ADD V981 0x60
0xa46: M[V996] = V994
0xa49: V997 = M[0x40]
0xa4d: V998 = SUB V981 V997
0xa4e: V999 = 0x80
0xa50: V1000 = ADD 0x80 V998
0xa52: LOG V997 V1000 0x5edf34d4499d087e8b0dfaeec99a5f02a53dc00a89e2e1fcaf7d737c1e780e69
0xa53: V1001 = 0x40
0xa56: V1002 = M[0x40]
0xa57: V1003 = 0xba45b0b800000000000000000000000000000000000000000000000000000000
0xa79: M[V1002] = 0xba45b0b800000000000000000000000000000000000000000000000000000000
0xa7a: V1004 = 0x1
0xa7c: V1005 = 0xa0
0xa7e: V1006 = 0x2
0xa80: V1007 = EXP 0x2 0xa0
0xa81: V1008 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa82: V1009 = CALLER
0xa84: V1010 = AND 0xffffffffffffffffffffffffffffffffffffffff V1009
0xa85: V1011 = 0x4
0xa88: V1012 = ADD V1002 0x4
0xa89: M[V1012] = V1010
0xa8c: V1013 = AND 0xffffffffffffffffffffffffffffffffffffffff V168
0xa8d: V1014 = 0x24
0xa90: V1015 = ADD V1002 0x24
0xa91: M[V1015] = V1013
0xa93: V1016 = M[0x40]
0xa96: V1017 = AND V171 0xffffffffffffffffffffffffffffffffffffffff
0xa98: V1018 = 0xba45b0b8
0xa9e: V1019 = 0x44
0xaa2: V1020 = ADD V1002 0x44
0xaa4: V1021 = 0x0
0xaac: V1022 = SUB V1002 V1016
0xaad: V1023 = ADD V1022 0x44
0xab2: V1024 = EXTCODESIZE V1017
0xab3: V1025 = ISZERO V1024
0xab4: V1026 = ISZERO V1025
0xab5: V1027 = 0xaba
0xab8: JUMPI 0xaba V1026
---
Entry stack: [V12, 0xb0, V168, V171, V171, 0x5edf34d4499d087e8b0dfaeec99a5f02a53dc00a89e2e1fcaf7d737c1e780e69, V941, V168, V947, 0x77c93662, V963]
Stack pops: 9
Stack additions: [S8, S7, S6, V1017, 0xba45b0b8, V1020, 0x0, V1016, V1023, V1016, 0x0, V1017]
Exit stack: [V12, 0xb0, V168, V171, V171, V1017, 0xba45b0b8, V1020, 0x0, V1016, V1023, V1016, 0x0, V1017]

================================

Block 0xab9
[0xab9:0xab9]
---
Predecessors: [0xa1a]
Successors: []
---
0xab9 INVALID
---
0xab9: INVALID 
---
Entry stack: [V12, 0xb0, V168, V171, V171, V1017, 0xba45b0b8, V1020, 0x0, V1016, V1023, V1016, 0x0, V1017]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb0, V168, V171, V171, V1017, 0xba45b0b8, V1020, 0x0, V1016, V1023, V1016, 0x0, V1017]

================================

Block 0xaba
[0xaba:0xac6]
---
Predecessors: [0xa1a]
Successors: [0x2c8, 0xac7]
---
0xaba JUMPDEST
0xabb PUSH2 0x2c6
0xabe GAS
0xabf SUB
0xac0 CALL
0xac1 ISZERO
0xac2 ISZERO
0xac3 PUSH2 0x2c8
0xac6 JUMPI
---
0xaba: JUMPDEST 
0xabb: V1028 = 0x2c6
0xabe: V1029 = GAS
0xabf: V1030 = SUB V1029 0x2c6
0xac0: V1031 = CALL V1030 V1017 0x0 V1016 V1023 V1016 0x0
0xac1: V1032 = ISZERO V1031
0xac2: V1033 = ISZERO V1032
0xac3: V1034 = 0x2c8
0xac6: JUMPI 0x2c8 V1033
---
Entry stack: [V12, 0xb0, V168, V171, V171, V1017, 0xba45b0b8, V1020, 0x0, V1016, V1023, V1016, 0x0, V1017]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xb0, V168, V171, V171, V1017, 0xba45b0b8, V1020]

================================

Block 0xac7
[0xac7:0xac7]
---
Predecessors: [0xaba]
Successors: []
---
0xac7 INVALID
---
0xac7: INVALID 
---
Entry stack: [V12, 0xb0, V168, V171, V171, V1017, 0xba45b0b8, V1020]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb0, V168, V171, V171, V1017, 0xba45b0b8, V1020]

================================

Block 0xac8
[0xac8:0xacb]
---
Predecessors: []
Successors: [0xacc]
---
0xac8 JUMPDEST
0xac9 POP
0xaca POP
0xacb POP
---
0xac8: JUMPDEST 
---
Entry stack: []
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0xacc
[0xacc:0xad0]
---
Predecessors: [0xac8]
Successors: []
Has unresolved jump.
---
0xacc JUMPDEST
0xacd POP
0xace POP
0xacf POP
0xad0 JUMP
---
0xacc: JUMPDEST 
0xad0: JUMP S3
---
Entry stack: []
Stack pops: 4
Stack additions: []
Exit stack: []

================================

Block 0xad1
[0xad1:0xae7]
---
Predecessors: [0x1c5]
Successors: [0xae8, 0xaed]
---
0xad1 JUMPDEST
0xad2 PUSH1 0x1
0xad4 SLOAD
0xad5 CALLER
0xad6 PUSH1 0x1
0xad8 PUSH1 0xa0
0xada PUSH1 0x2
0xadc EXP
0xadd SUB
0xade SWAP1
0xadf DUP2
0xae0 AND
0xae1 SWAP2
0xae2 AND
0xae3 EQ
0xae4 PUSH2 0xaed
0xae7 JUMPI
---
0xad1: JUMPDEST 
0xad2: V1035 = 0x1
0xad4: V1036 = S[0x1]
0xad5: V1037 = CALLER
0xad6: V1038 = 0x1
0xad8: V1039 = 0xa0
0xada: V1040 = 0x2
0xadc: V1041 = EXP 0x2 0xa0
0xadd: V1042 = SUB 0x10000000000000000000000000000000000000000 0x1
0xae0: V1043 = AND 0xffffffffffffffffffffffffffffffffffffffff V1037
0xae2: V1044 = AND V1036 0xffffffffffffffffffffffffffffffffffffffff
0xae3: V1045 = EQ V1044 V1043
0xae4: V1046 = 0xaed
0xae7: JUMPI 0xaed V1045
---
Entry stack: [V12, 0xb0, V184]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb0, V184]

================================

Block 0xae8
[0xae8:0xaec]
---
Predecessors: [0xad1]
Successors: []
---
0xae8 PUSH1 0x0
0xaea PUSH1 0x0
0xaec REVERT
---
0xae8: V1047 = 0x0
0xaea: V1048 = 0x0
0xaec: REVERT 0x0 0x0
---
Entry stack: [V12, 0xb0, V184]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb0, V184]

================================

Block 0xaed
[0xaed:0xb15]
---
Predecessors: [0xad1]
Successors: [0xb16]
---
0xaed JUMPDEST
0xaee PUSH1 0x1
0xaf0 DUP1
0xaf1 SLOAD
0xaf2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb07 NOT
0xb08 AND
0xb09 PUSH1 0x1
0xb0b PUSH1 0xa0
0xb0d PUSH1 0x2
0xb0f EXP
0xb10 SUB
0xb11 DUP4
0xb12 AND
0xb13 OR
0xb14 SWAP1
0xb15 SSTORE
---
0xaed: JUMPDEST 
0xaee: V1049 = 0x1
0xaf1: V1050 = S[0x1]
0xaf2: V1051 = 0xffffffffffffffffffffffffffffffffffffffff
0xb07: V1052 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xb08: V1053 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1050
0xb09: V1054 = 0x1
0xb0b: V1055 = 0xa0
0xb0d: V1056 = 0x2
0xb0f: V1057 = EXP 0x2 0xa0
0xb10: V1058 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb12: V1059 = AND V184 0xffffffffffffffffffffffffffffffffffffffff
0xb13: V1060 = OR V1059 V1053
0xb15: S[0x1] = V1060
---
Entry stack: [V12, 0xb0, V184]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xb0, V184]

================================

Block 0xb16
[0xb16:0xb18]
---
Predecessors: [0xaed]
Successors: [0xb0]
---
0xb16 JUMPDEST
0xb17 POP
0xb18 JUMP
---
0xb16: JUMPDEST 
0xb18: JUMP 0xb0
---
Entry stack: [V12, 0xb0, V184]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0xb19
[0xb19:0xb2d]
---
Predecessors: [0x1e3]
Successors: [0x1f7]
---
0xb19 JUMPDEST
0xb1a PUSH1 0x0
0xb1c PUSH1 0x20
0xb1e DUP2
0xb1f SWAP1
0xb20 MSTORE
0xb21 SWAP1
0xb22 DUP2
0xb23 MSTORE
0xb24 PUSH1 0x40
0xb26 SWAP1
0xb27 SHA3
0xb28 SLOAD
0xb29 PUSH1 0xff
0xb2b AND
0xb2c DUP2
0xb2d JUMP
---
0xb19: JUMPDEST 
0xb1a: V1061 = 0x0
0xb1c: V1062 = 0x20
0xb20: M[0x20] = 0x0
0xb23: M[0x0] = V197
0xb24: V1063 = 0x40
0xb27: V1064 = SHA3 0x0 0x40
0xb28: V1065 = S[V1064]
0xb29: V1066 = 0xff
0xb2b: V1067 = AND 0xff V1065
0xb2d: JUMP 0x1f7
---
Entry stack: [V12, 0x1f7, V197]
Stack pops: 2
Stack additions: [S1, V1067]
Exit stack: [V12, 0x1f7, V1067]

================================

Block 0xb2e
[0xb2e:0xb50]
---
Predecessors: [0x213]
Successors: [0xb51, 0xb56]
---
0xb2e JUMPDEST
0xb2f PUSH1 0x1
0xb31 PUSH1 0xa0
0xb33 PUSH1 0x2
0xb35 EXP
0xb36 SUB
0xb37 DUP2
0xb38 AND
0xb39 PUSH1 0x0
0xb3b SWAP1
0xb3c DUP2
0xb3d MSTORE
0xb3e PUSH1 0x20
0xb40 DUP2
0xb41 SWAP1
0xb42 MSTORE
0xb43 PUSH1 0x40
0xb45 DUP2
0xb46 SHA3
0xb47 SLOAD
0xb48 PUSH1 0xff
0xb4a AND
0xb4b ISZERO
0xb4c ISZERO
0xb4d PUSH2 0xb56
0xb50 JUMPI
---
0xb2e: JUMPDEST 
0xb2f: V1068 = 0x1
0xb31: V1069 = 0xa0
0xb33: V1070 = 0x2
0xb35: V1071 = EXP 0x2 0xa0
0xb36: V1072 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb38: V1073 = AND V218 0xffffffffffffffffffffffffffffffffffffffff
0xb39: V1074 = 0x0
0xb3d: M[0x0] = V1073
0xb3e: V1075 = 0x20
0xb42: M[0x20] = 0x0
0xb43: V1076 = 0x40
0xb46: V1077 = SHA3 0x0 0x40
0xb47: V1078 = S[V1077]
0xb48: V1079 = 0xff
0xb4a: V1080 = AND 0xff V1078
0xb4b: V1081 = ISZERO V1080
0xb4c: V1082 = ISZERO V1081
0xb4d: V1083 = 0xb56
0xb50: JUMPI 0xb56 V1082
---
Entry stack: [V12, 0xb0, V218]
Stack pops: 1
Stack additions: [S0, 0x0]
Exit stack: [V12, 0xb0, V218, 0x0]

================================

Block 0xb51
[0xb51:0xb55]
---
Predecessors: [0xb2e]
Successors: []
---
0xb51 PUSH1 0x0
0xb53 PUSH1 0x0
0xb55 REVERT
---
0xb51: V1084 = 0x0
0xb53: V1085 = 0x0
0xb55: REVERT 0x0 0x0
---
Entry stack: [V12, 0xb0, V218, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb0, V218, 0x0]

================================

Block 0xb56
[0xb56:0xbc7]
---
Predecessors: [0xb2e]
Successors: [0xbc8, 0xbc9]
---
0xb56 JUMPDEST
0xb57 POP
0xb58 PUSH1 0x1
0xb5a PUSH1 0xa0
0xb5c PUSH1 0x2
0xb5e EXP
0xb5f SUB
0xb60 DUP1
0xb61 DUP3
0xb62 AND
0xb63 PUSH1 0x0
0xb65 DUP2
0xb66 DUP2
0xb67 MSTORE
0xb68 PUSH1 0x20
0xb6a DUP2
0xb6b SWAP1
0xb6c MSTORE
0xb6d PUSH1 0x40
0xb6f DUP1
0xb70 DUP3
0xb71 SHA3
0xb72 DUP1
0xb73 SLOAD
0xb74 PUSH1 0xff
0xb76 NOT
0xb77 AND
0xb78 SWAP1
0xb79 SSTORE
0xb7a DUP1
0xb7b MLOAD
0xb7c PUSH32 0xc8db233e00000000000000000000000000000000000000000000000000000000
0xb9d DUP2
0xb9e MSTORE
0xb9f CALLER
0xba0 SWAP1
0xba1 SWAP5
0xba2 AND
0xba3 PUSH1 0x4
0xba5 DUP6
0xba6 ADD
0xba7 MSTORE
0xba8 MLOAD
0xba9 DUP5
0xbaa SWAP4
0xbab PUSH4 0xc8db233e
0xbb0 SWAP3
0xbb1 PUSH1 0x24
0xbb3 DUP1
0xbb4 DUP4
0xbb5 ADD
0xbb6 SWAP4
0xbb7 SWAP2
0xbb8 SWAP3
0xbb9 DUP3
0xbba SWAP1
0xbbb SUB
0xbbc ADD
0xbbd DUP2
0xbbe DUP4
0xbbf DUP8
0xbc0 DUP1
0xbc1 EXTCODESIZE
0xbc2 ISZERO
0xbc3 ISZERO
0xbc4 PUSH2 0xbc9
0xbc7 JUMPI
---
0xb56: JUMPDEST 
0xb58: V1086 = 0x1
0xb5a: V1087 = 0xa0
0xb5c: V1088 = 0x2
0xb5e: V1089 = EXP 0x2 0xa0
0xb5f: V1090 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb62: V1091 = AND V218 0xffffffffffffffffffffffffffffffffffffffff
0xb63: V1092 = 0x0
0xb67: M[0x0] = V1091
0xb68: V1093 = 0x20
0xb6c: M[0x20] = 0x0
0xb6d: V1094 = 0x40
0xb71: V1095 = SHA3 0x0 0x40
0xb73: V1096 = S[V1095]
0xb74: V1097 = 0xff
0xb76: V1098 = NOT 0xff
0xb77: V1099 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1096
0xb79: S[V1095] = V1099
0xb7b: V1100 = M[0x40]
0xb7c: V1101 = 0xc8db233e00000000000000000000000000000000000000000000000000000000
0xb9e: M[V1100] = 0xc8db233e00000000000000000000000000000000000000000000000000000000
0xb9f: V1102 = CALLER
0xba2: V1103 = AND 0xffffffffffffffffffffffffffffffffffffffff V1102
0xba3: V1104 = 0x4
0xba6: V1105 = ADD V1100 0x4
0xba7: M[V1105] = V1103
0xba8: V1106 = M[0x40]
0xbab: V1107 = 0xc8db233e
0xbb1: V1108 = 0x24
0xbb5: V1109 = ADD V1100 0x24
0xbbb: V1110 = SUB V1100 V1106
0xbbc: V1111 = ADD V1110 0x24
0xbc1: V1112 = EXTCODESIZE V1091
0xbc2: V1113 = ISZERO V1112
0xbc3: V1114 = ISZERO V1113
0xbc4: V1115 = 0xbc9
0xbc7: JUMPI 0xbc9 V1114
---
Entry stack: [V12, 0xb0, V218, 0x0]
Stack pops: 2
Stack additions: [S1, S1, V1091, 0xc8db233e, V1109, 0x0, V1106, V1111, V1106, 0x0, V1091]
Exit stack: [V12, 0xb0, V218, V218, V1091, 0xc8db233e, V1109, 0x0, V1106, V1111, V1106, 0x0, V1091]

================================

Block 0xbc8
[0xbc8:0xbc8]
---
Predecessors: [0xb56]
Successors: []
---
0xbc8 INVALID
---
0xbc8: INVALID 
---
Entry stack: [V12, 0xb0, V218, V218, V1091, 0xc8db233e, V1109, 0x0, V1106, V1111, V1106, 0x0, V1091]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb0, V218, V218, V1091, 0xc8db233e, V1109, 0x0, V1106, V1111, V1106, 0x0, V1091]

================================

Block 0xbc9
[0xbc9:0xbd5]
---
Predecessors: [0xb56]
Successors: [0xbd6, 0xbd7]
---
0xbc9 JUMPDEST
0xbca PUSH2 0x2c6
0xbcd GAS
0xbce SUB
0xbcf CALL
0xbd0 ISZERO
0xbd1 ISZERO
0xbd2 PUSH2 0xbd7
0xbd5 JUMPI
---
0xbc9: JUMPDEST 
0xbca: V1116 = 0x2c6
0xbcd: V1117 = GAS
0xbce: V1118 = SUB V1117 0x2c6
0xbcf: V1119 = CALL V1118 V1091 0x0 V1106 V1111 V1106 0x0
0xbd0: V1120 = ISZERO V1119
0xbd1: V1121 = ISZERO V1120
0xbd2: V1122 = 0xbd7
0xbd5: JUMPI 0xbd7 V1121
---
Entry stack: [V12, 0xb0, V218, V218, V1091, 0xc8db233e, V1109, 0x0, V1106, V1111, V1106, 0x0, V1091]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xb0, V218, V218, V1091, 0xc8db233e, V1109]

================================

Block 0xbd6
[0xbd6:0xbd6]
---
Predecessors: [0xbc9]
Successors: []
---
0xbd6 INVALID
---
0xbd6: INVALID 
---
Entry stack: [V12, 0xb0, V218, V218, V1091, 0xc8db233e, V1109]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb0, V218, V218, V1091, 0xc8db233e, V1109]

================================

Block 0xbd7
[0xbd7:0xc3f]
---
Predecessors: [0xbc9]
Successors: [0x3e5, 0xc40]
---
0xbd7 JUMPDEST
0xbd8 POP
0xbd9 POP
0xbda POP
0xbdb PUSH32 0x63dbb4a1bdc8a836cbb4e43a69769115ee047c253086e1d337d5143b7fcf2ab7
0xbfc DUP2
0xbfd PUSH1 0x1
0xbff PUSH1 0xa0
0xc01 PUSH1 0x2
0xc03 EXP
0xc04 SUB
0xc05 AND
0xc06 PUSH4 0x1d143848
0xc0b PUSH1 0x0
0xc0d PUSH1 0x40
0xc0f MLOAD
0xc10 PUSH1 0x20
0xc12 ADD
0xc13 MSTORE
0xc14 PUSH1 0x40
0xc16 MLOAD
0xc17 DUP2
0xc18 PUSH4 0xffffffff
0xc1d AND
0xc1e PUSH1 0xe0
0xc20 PUSH1 0x2
0xc22 EXP
0xc23 MUL
0xc24 DUP2
0xc25 MSTORE
0xc26 PUSH1 0x4
0xc28 ADD
0xc29 DUP1
0xc2a SWAP1
0xc2b POP
0xc2c PUSH1 0x20
0xc2e PUSH1 0x40
0xc30 MLOAD
0xc31 DUP1
0xc32 DUP4
0xc33 SUB
0xc34 DUP2
0xc35 PUSH1 0x0
0xc37 DUP8
0xc38 DUP1
0xc39 EXTCODESIZE
0xc3a ISZERO
0xc3b ISZERO
0xc3c PUSH2 0x3e5
0xc3f JUMPI
---
0xbd7: JUMPDEST 
0xbdb: V1123 = 0x63dbb4a1bdc8a836cbb4e43a69769115ee047c253086e1d337d5143b7fcf2ab7
0xbfd: V1124 = 0x1
0xbff: V1125 = 0xa0
0xc01: V1126 = 0x2
0xc03: V1127 = EXP 0x2 0xa0
0xc04: V1128 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc05: V1129 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0xc06: V1130 = 0x1d143848
0xc0b: V1131 = 0x0
0xc0d: V1132 = 0x40
0xc0f: V1133 = M[0x40]
0xc10: V1134 = 0x20
0xc12: V1135 = ADD 0x20 V1133
0xc13: M[V1135] = 0x0
0xc14: V1136 = 0x40
0xc16: V1137 = M[0x40]
0xc18: V1138 = 0xffffffff
0xc1d: V1139 = AND 0xffffffff 0x1d143848
0xc1e: V1140 = 0xe0
0xc20: V1141 = 0x2
0xc22: V1142 = EXP 0x2 0xe0
0xc23: V1143 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x1d143848
0xc25: M[V1137] = 0x1d14384800000000000000000000000000000000000000000000000000000000
0xc26: V1144 = 0x4
0xc28: V1145 = ADD 0x4 V1137
0xc2c: V1146 = 0x20
0xc2e: V1147 = 0x40
0xc30: V1148 = M[0x40]
0xc33: V1149 = SUB V1145 V1148
0xc35: V1150 = 0x0
0xc39: V1151 = EXTCODESIZE V1129
0xc3a: V1152 = ISZERO V1151
0xc3b: V1153 = ISZERO V1152
0xc3c: V1154 = 0x3e5
0xc3f: JUMPI 0x3e5 V1153
---
Entry stack: [V12, 0xb0, V218, V218, V1091, 0xc8db233e, V1109]
Stack pops: 4
Stack additions: [S3, 0x63dbb4a1bdc8a836cbb4e43a69769115ee047c253086e1d337d5143b7fcf2ab7, V1129, 0x1d143848, V1145, 0x20, V1148, V1149, V1148, 0x0, V1129]
Exit stack: [V12, 0xb0, V218, V218, 0x63dbb4a1bdc8a836cbb4e43a69769115ee047c253086e1d337d5143b7fcf2ab7, V1129, 0x1d143848, V1145, 0x20, V1148, V1149, V1148, 0x0, V1129]

================================

Block 0xc40
[0xc40:0xc40]
---
Predecessors: [0xbd7]
Successors: []
---
0xc40 INVALID
---
0xc40: INVALID 
---
Entry stack: [V12, 0xb0, V218, V218, 0x63dbb4a1bdc8a836cbb4e43a69769115ee047c253086e1d337d5143b7fcf2ab7, V1129, 0x1d143848, V1145, 0x20, V1148, V1149, V1148, 0x0, V1129]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb0, V218, V218, 0x63dbb4a1bdc8a836cbb4e43a69769115ee047c253086e1d337d5143b7fcf2ab7, V1129, 0x1d143848, V1145, 0x20, V1148, V1149, V1148, 0x0, V1129]

================================

Block 0xc41
[0xc41:0xc4d]
---
Predecessors: []
Successors: [0x3f3, 0xc4e]
---
0xc41 JUMPDEST
0xc42 PUSH2 0x2c6
0xc45 GAS
0xc46 SUB
0xc47 CALL
0xc48 ISZERO
0xc49 ISZERO
0xc4a PUSH2 0x3f3
0xc4d JUMPI
---
0xc41: JUMPDEST 
0xc42: V1155 = 0x2c6
0xc45: V1156 = GAS
0xc46: V1157 = SUB V1156 0x2c6
0xc47: V1158 = CALL V1157 S0 S1 S2 S3 S4 S5
0xc48: V1159 = ISZERO V1158
0xc49: V1160 = ISZERO V1159
0xc4a: V1161 = 0x3f3
0xc4d: JUMPI 0x3f3 V1160
---
Entry stack: []
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0xc4e
[0xc4e:0xc9d]
---
Predecessors: [0xc41]
Successors: [0x443, 0xc9e]
---
0xc4e INVALID
0xc4f JUMPDEST
0xc50 POP
0xc51 POP
0xc52 POP
0xc53 PUSH1 0x40
0xc55 MLOAD
0xc56 DUP1
0xc57 MLOAD
0xc58 SWAP1
0xc59 POP
0xc5a DUP3
0xc5b PUSH1 0x1
0xc5d PUSH1 0xa0
0xc5f PUSH1 0x2
0xc61 EXP
0xc62 SUB
0xc63 AND
0xc64 PUSH4 0x8da5cb5b
0xc69 PUSH1 0x0
0xc6b PUSH1 0x40
0xc6d MLOAD
0xc6e PUSH1 0x20
0xc70 ADD
0xc71 MSTORE
0xc72 PUSH1 0x40
0xc74 MLOAD
0xc75 DUP2
0xc76 PUSH4 0xffffffff
0xc7b AND
0xc7c PUSH1 0xe0
0xc7e PUSH1 0x2
0xc80 EXP
0xc81 MUL
0xc82 DUP2
0xc83 MSTORE
0xc84 PUSH1 0x4
0xc86 ADD
0xc87 DUP1
0xc88 SWAP1
0xc89 POP
0xc8a PUSH1 0x20
0xc8c PUSH1 0x40
0xc8e MLOAD
0xc8f DUP1
0xc90 DUP4
0xc91 SUB
0xc92 DUP2
0xc93 PUSH1 0x0
0xc95 DUP8
0xc96 DUP1
0xc97 EXTCODESIZE
0xc98 ISZERO
0xc99 ISZERO
0xc9a PUSH2 0x443
0xc9d JUMPI
---
0xc4e: INVALID 
0xc4f: JUMPDEST 
0xc53: V1162 = 0x40
0xc55: V1163 = M[0x40]
0xc57: V1164 = M[V1163]
0xc5b: V1165 = 0x1
0xc5d: V1166 = 0xa0
0xc5f: V1167 = 0x2
0xc61: V1168 = EXP 0x2 0xa0
0xc62: V1169 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc63: V1170 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xc64: V1171 = 0x8da5cb5b
0xc69: V1172 = 0x0
0xc6b: V1173 = 0x40
0xc6d: V1174 = M[0x40]
0xc6e: V1175 = 0x20
0xc70: V1176 = ADD 0x20 V1174
0xc71: M[V1176] = 0x0
0xc72: V1177 = 0x40
0xc74: V1178 = M[0x40]
0xc76: V1179 = 0xffffffff
0xc7b: V1180 = AND 0xffffffff 0x8da5cb5b
0xc7c: V1181 = 0xe0
0xc7e: V1182 = 0x2
0xc80: V1183 = EXP 0x2 0xe0
0xc81: V1184 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x8da5cb5b
0xc83: M[V1178] = 0x8da5cb5b00000000000000000000000000000000000000000000000000000000
0xc84: V1185 = 0x4
0xc86: V1186 = ADD 0x4 V1178
0xc8a: V1187 = 0x20
0xc8c: V1188 = 0x40
0xc8e: V1189 = M[0x40]
0xc91: V1190 = SUB V1186 V1189
0xc93: V1191 = 0x0
0xc97: V1192 = EXTCODESIZE V1170
0xc98: V1193 = ISZERO V1192
0xc99: V1194 = ISZERO V1193
0xc9a: V1195 = 0x443
0xc9d: JUMPI 0x443 V1194
---
Entry stack: []
Stack pops: 0
Stack additions: [V1170, 0x0, V1189, V1190, V1189, 0x20, V1186, 0x8da5cb5b, V1170, V1164, S3, S4]
Exit stack: []

================================

Block 0xc9e
[0xc9e:0xcab]
---
Predecessors: [0xc4e]
Successors: [0x451, 0xcac]
---
0xc9e INVALID
0xc9f JUMPDEST
0xca0 PUSH2 0x2c6
0xca3 GAS
0xca4 SUB
0xca5 CALL
0xca6 ISZERO
0xca7 ISZERO
0xca8 PUSH2 0x451
0xcab JUMPI
---
0xc9e: INVALID 
0xc9f: JUMPDEST 
0xca0: V1196 = 0x2c6
0xca3: V1197 = GAS
0xca4: V1198 = SUB V1197 0x2c6
0xca5: V1199 = CALL V1198 S0 S1 S2 S3 S4 S5
0xca6: V1200 = ISZERO V1199
0xca7: V1201 = ISZERO V1200
0xca8: V1202 = 0x451
0xcab: JUMPI 0x451 V1201
---
Entry stack: [S11, S10, V1164, V1170, 0x8da5cb5b, V1186, 0x20, V1189, V1190, V1189, 0x0, V1170]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xcac
[0xcac:0xcfb]
---
Predecessors: [0xc9e]
Successors: [0x4a1, 0xcfc]
---
0xcac INVALID
0xcad JUMPDEST
0xcae POP
0xcaf POP
0xcb0 POP
0xcb1 PUSH1 0x40
0xcb3 MLOAD
0xcb4 DUP1
0xcb5 MLOAD
0xcb6 SWAP1
0xcb7 POP
0xcb8 DUP4
0xcb9 PUSH1 0x1
0xcbb PUSH1 0xa0
0xcbd PUSH1 0x2
0xcbf EXP
0xcc0 SUB
0xcc1 AND
0xcc2 PUSH4 0x77c93662
0xcc7 PUSH1 0x0
0xcc9 PUSH1 0x40
0xccb MLOAD
0xccc PUSH1 0x20
0xcce ADD
0xccf MSTORE
0xcd0 PUSH1 0x40
0xcd2 MLOAD
0xcd3 DUP2
0xcd4 PUSH4 0xffffffff
0xcd9 AND
0xcda PUSH1 0xe0
0xcdc PUSH1 0x2
0xcde EXP
0xcdf MUL
0xce0 DUP2
0xce1 MSTORE
0xce2 PUSH1 0x4
0xce4 ADD
0xce5 DUP1
0xce6 SWAP1
0xce7 POP
0xce8 PUSH1 0x20
0xcea PUSH1 0x40
0xcec MLOAD
0xced DUP1
0xcee DUP4
0xcef SUB
0xcf0 DUP2
0xcf1 PUSH1 0x0
0xcf3 DUP8
0xcf4 DUP1
0xcf5 EXTCODESIZE
0xcf6 ISZERO
0xcf7 ISZERO
0xcf8 PUSH2 0x4a1
0xcfb JUMPI
---
0xcac: INVALID 
0xcad: JUMPDEST 
0xcb1: V1203 = 0x40
0xcb3: V1204 = M[0x40]
0xcb5: V1205 = M[V1204]
0xcb9: V1206 = 0x1
0xcbb: V1207 = 0xa0
0xcbd: V1208 = 0x2
0xcbf: V1209 = EXP 0x2 0xa0
0xcc0: V1210 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcc1: V1211 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0xcc2: V1212 = 0x77c93662
0xcc7: V1213 = 0x0
0xcc9: V1214 = 0x40
0xccb: V1215 = M[0x40]
0xccc: V1216 = 0x20
0xcce: V1217 = ADD 0x20 V1215
0xccf: M[V1217] = 0x0
0xcd0: V1218 = 0x40
0xcd2: V1219 = M[0x40]
0xcd4: V1220 = 0xffffffff
0xcd9: V1221 = AND 0xffffffff 0x77c93662
0xcda: V1222 = 0xe0
0xcdc: V1223 = 0x2
0xcde: V1224 = EXP 0x2 0xe0
0xcdf: V1225 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x77c93662
0xce1: M[V1219] = 0x77c9366200000000000000000000000000000000000000000000000000000000
0xce2: V1226 = 0x4
0xce4: V1227 = ADD 0x4 V1219
0xce8: V1228 = 0x20
0xcea: V1229 = 0x40
0xcec: V1230 = M[0x40]
0xcef: V1231 = SUB V1227 V1230
0xcf1: V1232 = 0x0
0xcf5: V1233 = EXTCODESIZE V1211
0xcf6: V1234 = ISZERO V1233
0xcf7: V1235 = ISZERO V1234
0xcf8: V1236 = 0x4a1
0xcfb: JUMPI 0x4a1 V1235
---
Entry stack: []
Stack pops: 0
Stack additions: [V1211, 0x0, V1230, V1231, V1230, 0x20, V1227, 0x77c93662, V1211, V1205, S3, S4, S5]
Exit stack: []

================================

Block 0xcfc
[0xcfc:0xd09]
---
Predecessors: [0xcac]
Successors: [0x4af, 0xd0a]
---
0xcfc INVALID
0xcfd JUMPDEST
0xcfe PUSH2 0x2c6
0xd01 GAS
0xd02 SUB
0xd03 CALL
0xd04 ISZERO
0xd05 ISZERO
0xd06 PUSH2 0x4af
0xd09 JUMPI
---
0xcfc: INVALID 
0xcfd: JUMPDEST 
0xcfe: V1237 = 0x2c6
0xd01: V1238 = GAS
0xd02: V1239 = SUB V1238 0x2c6
0xd03: V1240 = CALL V1239 S0 S1 S2 S3 S4 S5
0xd04: V1241 = ISZERO V1240
0xd05: V1242 = ISZERO V1241
0xd06: V1243 = 0x4af
0xd09: JUMPI 0x4af V1242
---
Entry stack: [S12, S11, S10, V1205, V1211, 0x77c93662, V1227, 0x20, V1230, V1231, V1230, 0x0, V1211]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd0a
[0xd0a:0xd43]
---
Predecessors: [0xcfc]
Successors: [0xd44]
---
0xd0a INVALID
0xd0b JUMPDEST
0xd0c POP
0xd0d POP
0xd0e PUSH1 0x40
0xd10 DUP1
0xd11 MLOAD
0xd12 DUP1
0xd13 MLOAD
0xd14 PUSH1 0x1
0xd16 PUSH1 0xa0
0xd18 PUSH1 0x2
0xd1a EXP
0xd1b SUB
0xd1c SWAP6
0xd1d DUP7
0xd1e AND
0xd1f DUP3
0xd20 MSTORE
0xd21 SWAP4
0xd22 DUP6
0xd23 AND
0xd24 PUSH1 0x20
0xd26 DUP3
0xd27 ADD
0xd28 MSTORE
0xd29 SWAP3
0xd2a DUP5
0xd2b AND
0xd2c DUP4
0xd2d DUP3
0xd2e ADD
0xd2f MSTORE
0xd30 SWAP3
0xd31 DUP7
0xd32 AND
0xd33 PUSH1 0x60
0xd35 DUP4
0xd36 ADD
0xd37 MSTORE
0xd38 POP
0xd39 SWAP1
0xd3a MLOAD
0xd3b SWAP1
0xd3c DUP2
0xd3d SWAP1
0xd3e SUB
0xd3f PUSH1 0x80
0xd41 ADD
0xd42 SWAP1
0xd43 LOG1
---
0xd0a: INVALID 
0xd0b: JUMPDEST 
0xd0e: V1244 = 0x40
0xd11: V1245 = M[0x40]
0xd13: V1246 = M[V1245]
0xd14: V1247 = 0x1
0xd16: V1248 = 0xa0
0xd18: V1249 = 0x2
0xd1a: V1250 = EXP 0x2 0xa0
0xd1b: V1251 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd1e: V1252 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xd20: M[V1245] = V1252
0xd23: V1253 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xd24: V1254 = 0x20
0xd27: V1255 = ADD V1245 0x20
0xd28: M[V1255] = V1253
0xd2b: V1256 = AND 0xffffffffffffffffffffffffffffffffffffffff V1246
0xd2e: V1257 = ADD 0x40 V1245
0xd2f: M[V1257] = V1256
0xd32: V1258 = AND S7 0xffffffffffffffffffffffffffffffffffffffff
0xd33: V1259 = 0x60
0xd36: V1260 = ADD V1245 0x60
0xd37: M[V1260] = V1258
0xd3a: V1261 = M[0x40]
0xd3e: V1262 = SUB V1245 V1261
0xd3f: V1263 = 0x80
0xd41: V1264 = ADD 0x80 V1262
0xd43: LOG V1261 V1264 S5
---
Entry stack: []
Stack pops: 0
Stack additions: [S6, S7]
Exit stack: []

================================

Block 0xd44
[0xd44:0xd47]
---
Predecessors: [0xd0a]
Successors: []
Has unresolved jump.
---
0xd44 JUMPDEST
0xd45 POP
0xd46 POP
0xd47 JUMP
---
0xd44: JUMPDEST 
0xd47: JUMP S2
---
Entry stack: [S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0xd48
[0xd48:0xd56]
---
Predecessors: [0x231]
Successors: [0x104]
---
0xd48 JUMPDEST
0xd49 PUSH1 0x1
0xd4b SLOAD
0xd4c PUSH1 0x1
0xd4e PUSH1 0xa0
0xd50 PUSH1 0x2
0xd52 EXP
0xd53 SUB
0xd54 AND
0xd55 DUP2
0xd56 JUMP
---
0xd48: JUMPDEST 
0xd49: V1265 = 0x1
0xd4b: V1266 = S[0x1]
0xd4c: V1267 = 0x1
0xd4e: V1268 = 0xa0
0xd50: V1269 = 0x2
0xd52: V1270 = EXP 0x2 0xa0
0xd53: V1271 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd54: V1272 = AND 0xffffffffffffffffffffffffffffffffffffffff V1266
0xd56: JUMP 0x104
---
Entry stack: [V12, 0x104]
Stack pops: 1
Stack additions: [S0, V1272]
Exit stack: [V12, 0x104, V1272]

================================

Block 0xd57
[0xd57:0xd66]
---
Predecessors: [0x666]
Successors: [0x68f]
---
0xd57 JUMPDEST
0xd58 PUSH1 0x40
0xd5a MLOAD
0xd5b PUSH2 0x90d
0xd5e DUP1
0xd5f PUSH2 0xd68
0xd62 DUP4
0xd63 CODECOPY
0xd64 ADD
0xd65 SWAP1
0xd66 JUMP
---
0xd57: JUMPDEST 
0xd58: V1273 = 0x40
0xd5a: V1274 = M[0x40]
0xd5b: V1275 = 0x90d
0xd5f: V1276 = 0xd68
0xd63: CODECOPY V1274 0xd68 0x90d
0xd64: V1277 = ADD 0x90d V1274
0xd66: JUMP 0x68f
---
Entry stack: [V12, 0xb0, V56, V58, V66, V69, V71, S21, {0xb0, 0x2c8}, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, V638, V644, S7, S6, S5, S4, S3, S2, V645, 0x68f]
Stack pops: 1
Stack additions: [V1277]
Exit stack: [V12, 0xb0, V56, V58, V66, V69, V71, S21, {0xb0, 0x2c8}, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, V638, V644, S7, S6, S5, S4, S3, S2, V645, V1277]

================================

Block 0xd67
[0xd67:0xdb6]
---
Predecessors: []
Successors: [0xdb7]
---
0xd67 STOP
0xd68 PUSH1 0x60
0xd6a PUSH1 0x40
0xd6c MSTORE
0xd6d PUSH1 0x40
0xd6f MLOAD
0xd70 PUSH2 0x120
0xd73 DUP1
0xd74 PUSH2 0x90d
0xd77 DUP4
0xd78 CODECOPY
0xd79 DUP2
0xd7a ADD
0xd7b PUSH1 0x40
0xd7d SWAP1
0xd7e DUP2
0xd7f MSTORE
0xd80 DUP2
0xd81 MLOAD
0xd82 PUSH1 0x20
0xd84 DUP4
0xd85 ADD
0xd86 MLOAD
0xd87 SWAP2
0xd88 DUP4
0xd89 ADD
0xd8a MLOAD
0xd8b PUSH1 0x60
0xd8d DUP5
0xd8e ADD
0xd8f MLOAD
0xd90 PUSH1 0x80
0xd92 DUP6
0xd93 ADD
0xd94 MLOAD
0xd95 PUSH1 0xa0
0xd97 DUP7
0xd98 ADD
0xd99 MLOAD
0xd9a PUSH1 0xc0
0xd9c DUP8
0xd9d ADD
0xd9e MLOAD
0xd9f PUSH1 0xe0
0xda1 DUP9
0xda2 ADD
0xda3 MLOAD
0xda4 PUSH2 0x100
0xda7 SWAP1
0xda8 SWAP9
0xda9 ADD
0xdaa MLOAD
0xdab SWAP6
0xdac SWAP8
0xdad SWAP5
0xdae SWAP6
0xdaf SWAP4
0xdb0 SWAP5
0xdb1 SWAP3
0xdb2 SWAP4
0xdb3 SWAP2
0xdb4 SWAP3
0xdb5 SWAP1
0xdb6 SWAP2
---
0xd67: STOP 
0xd68: V1278 = 0x60
0xd6a: V1279 = 0x40
0xd6c: M[0x40] = 0x60
0xd6d: V1280 = 0x40
0xd6f: V1281 = M[0x40]
0xd70: V1282 = 0x120
0xd74: V1283 = 0x90d
0xd78: CODECOPY V1281 0x90d 0x120
0xd7a: V1284 = ADD V1281 0x120
0xd7b: V1285 = 0x40
0xd7f: M[0x40] = V1284
0xd81: V1286 = M[V1281]
0xd82: V1287 = 0x20
0xd85: V1288 = ADD V1281 0x20
0xd86: V1289 = M[V1288]
0xd89: V1290 = ADD V1281 0x40
0xd8a: V1291 = M[V1290]
0xd8b: V1292 = 0x60
0xd8e: V1293 = ADD V1281 0x60
0xd8f: V1294 = M[V1293]
0xd90: V1295 = 0x80
0xd93: V1296 = ADD V1281 0x80
0xd94: V1297 = M[V1296]
0xd95: V1298 = 0xa0
0xd98: V1299 = ADD V1281 0xa0
0xd99: V1300 = M[V1299]
0xd9a: V1301 = 0xc0
0xd9d: V1302 = ADD V1281 0xc0
0xd9e: V1303 = M[V1302]
0xd9f: V1304 = 0xe0
0xda2: V1305 = ADD V1281 0xe0
0xda3: V1306 = M[V1305]
0xda4: V1307 = 0x100
0xda9: V1308 = ADD V1281 0x100
0xdaa: V1309 = M[V1308]
---
Entry stack: []
Stack pops: 0
Stack additions: [V1309, V1306, V1303, V1300, V1297, V1294, V1291, V1289, V1286]
Exit stack: []

================================

Block 0xdb7
[0xdb7:0xdcb]
---
Predecessors: [0xd67]
Successors: [0xdcc]
---
0xdb7 JUMPDEST
0xdb8 PUSH1 0x1
0xdba PUSH1 0xa0
0xdbc PUSH1 0x2
0xdbe EXP
0xdbf SUB
0xdc0 DUP5
0xdc1 DUP2
0xdc2 AND
0xdc3 SWAP1
0xdc4 DUP5
0xdc5 AND
0xdc6 EQ
0xdc7 ISZERO
0xdc8 PUSH2 0x69
0xdcb JUMPI
---
0xdb7: JUMPDEST 
0xdb8: V1310 = 0x1
0xdba: V1311 = 0xa0
0xdbc: V1312 = 0x2
0xdbe: V1313 = EXP 0x2 0xa0
0xdbf: V1314 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdc2: V1315 = AND 0xffffffffffffffffffffffffffffffffffffffff V1300
0xdc5: V1316 = AND V1303 0xffffffffffffffffffffffffffffffffffffffff
0xdc6: V1317 = EQ V1316 V1315
0xdc7: V1318 = ISZERO V1317
0xdc8: V1319 = 0x69
0xdcb: THROWI V1318
---
Entry stack: [V1286, V1289, V1291, V1294, V1297, V1300, V1303, V1306, V1309]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V1286, V1289, V1291, V1294, V1297, V1300, V1303, V1306, V1309]

================================

Block 0xdcc
[0xdcc:0xdd9]
---
Predecessors: [0xdb7]
Successors: [0xdda]
---
0xdcc PUSH1 0x0
0xdce PUSH1 0x0
0xdd0 REVERT
0xdd1 JUMPDEST
0xdd2 TIMESTAMP
0xdd3 DUP3
0xdd4 SWAP1
0xdd5 LT
0xdd6 PUSH2 0x77
0xdd9 JUMPI
---
0xdcc: V1320 = 0x0
0xdce: V1321 = 0x0
0xdd0: REVERT 0x0 0x0
0xdd1: JUMPDEST 
0xdd2: V1322 = TIMESTAMP
0xdd5: V1323 = LT V1322 S1
0xdd6: V1324 = 0x77
0xdd9: THROWI V1323
---
Entry stack: [V1286, V1289, V1291, V1294, V1297, V1300, V1303, V1306, V1309]
Stack pops: 0
Stack additions: [S0, S1]
Exit stack: []

================================

Block 0xdda
[0xdda:0xdf8]
---
Predecessors: [0xdcc]
Successors: [0xdf9]
---
0xdda PUSH1 0x0
0xddc PUSH1 0x0
0xdde REVERT
0xddf JUMPDEST
0xde0 PUSH1 0x5
0xde2 SLOAD
0xde3 PUSH1 0x7
0xde5 SLOAD
0xde6 PUSH1 0x1
0xde8 PUSH1 0xa0
0xdea PUSH1 0x2
0xdec EXP
0xded SUB
0xdee SWAP1
0xdef DUP2
0xdf0 AND
0xdf1 SWAP2
0xdf2 AND
0xdf3 EQ
0xdf4 DUP1
0xdf5 PUSH2 0xa6
0xdf8 JUMPI
---
0xdda: V1325 = 0x0
0xddc: V1326 = 0x0
0xdde: REVERT 0x0 0x0
0xddf: JUMPDEST 
0xde0: V1327 = 0x5
0xde2: V1328 = S[0x5]
0xde3: V1329 = 0x7
0xde5: V1330 = S[0x7]
0xde6: V1331 = 0x1
0xde8: V1332 = 0xa0
0xdea: V1333 = 0x2
0xdec: V1334 = EXP 0x2 0xa0
0xded: V1335 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdf0: V1336 = AND 0xffffffffffffffffffffffffffffffffffffffff V1330
0xdf2: V1337 = AND V1328 0xffffffffffffffffffffffffffffffffffffffff
0xdf3: V1338 = EQ V1337 V1336
0xdf5: V1339 = 0xa6
0xdf8: THROWI V1338
---
Entry stack: [S1, S0]
Stack pops: 0
Stack additions: [V1338]
Exit stack: []

================================

Block 0xdf9
[0xdf9:0xe0d]
---
Predecessors: [0xdda]
Successors: [0xe0e]
---
0xdf9 POP
0xdfa PUSH1 0x5
0xdfc SLOAD
0xdfd PUSH1 0x6
0xdff SLOAD
0xe00 PUSH1 0x1
0xe02 PUSH1 0xa0
0xe04 PUSH1 0x2
0xe06 EXP
0xe07 SUB
0xe08 SWAP1
0xe09 DUP2
0xe0a AND
0xe0b SWAP2
0xe0c AND
0xe0d EQ
---
0xdfa: V1340 = 0x5
0xdfc: V1341 = S[0x5]
0xdfd: V1342 = 0x6
0xdff: V1343 = S[0x6]
0xe00: V1344 = 0x1
0xe02: V1345 = 0xa0
0xe04: V1346 = 0x2
0xe06: V1347 = EXP 0x2 0xa0
0xe07: V1348 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe0a: V1349 = AND 0xffffffffffffffffffffffffffffffffffffffff V1343
0xe0c: V1350 = AND V1341 0xffffffffffffffffffffffffffffffffffffffff
0xe0d: V1351 = EQ V1350 V1349
---
Entry stack: [V1338]
Stack pops: 1
Stack additions: [V1351]
Exit stack: [V1351]

================================

Block 0xe0e
[0xe0e:0xe14]
---
Predecessors: [0xdf9]
Successors: [0xb2, 0xe15]
---
0xe0e JUMPDEST
0xe0f ISZERO
0xe10 ISZERO
0xe11 PUSH2 0xb2
0xe14 JUMPI
---
0xe0e: JUMPDEST 
0xe0f: V1352 = ISZERO V1351
0xe10: V1353 = ISZERO V1352
0xe11: V1354 = 0xb2
0xe14: JUMPI 0xb2 V1353
---
Entry stack: [V1351]
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xe15
[0xe15:0xe98]
---
Predecessors: [0xe0e]
Successors: [0xe99]
---
0xe15 PUSH1 0x0
0xe17 PUSH1 0x0
0xe19 REVERT
0xe1a JUMPDEST
0xe1b PUSH1 0x1
0xe1d DUP1
0xe1e SLOAD
0xe1f PUSH1 0x1
0xe21 PUSH1 0xa0
0xe23 PUSH1 0x2
0xe25 EXP
0xe26 SUB
0xe27 NOT
0xe28 SWAP1
0xe29 DUP2
0xe2a AND
0xe2b CALLER
0xe2c PUSH1 0x1
0xe2e PUSH1 0xa0
0xe30 PUSH1 0x2
0xe32 EXP
0xe33 SUB
0xe34 SWAP1
0xe35 DUP2
0xe36 AND
0xe37 SWAP2
0xe38 SWAP1
0xe39 SWAP2
0xe3a OR
0xe3b SWAP1
0xe3c SWAP3
0xe3d SSTORE
0xe3e PUSH1 0x5
0xe40 DUP1
0xe41 SLOAD
0xe42 DUP3
0xe43 AND
0xe44 DUP5
0xe45 DUP5
0xe46 AND
0xe47 OR
0xe48 SWAP1
0xe49 SSTORE
0xe4a PUSH1 0x2
0xe4c DUP1
0xe4d SLOAD
0xe4e DUP3
0xe4f AND
0xe50 DUP13
0xe51 DUP5
0xe52 AND
0xe53 OR
0xe54 SWAP1
0xe55 SSTORE
0xe56 PUSH1 0x3
0xe58 DUP1
0xe59 SLOAD
0xe5a DUP3
0xe5b AND
0xe5c DUP12
0xe5d DUP5
0xe5e AND
0xe5f OR
0xe60 SWAP1
0xe61 SSTORE
0xe62 PUSH1 0x4
0xe64 DUP1
0xe65 SLOAD
0xe66 DUP3
0xe67 AND
0xe68 DUP11
0xe69 DUP5
0xe6a AND
0xe6b OR
0xe6c SWAP1
0xe6d SSTORE
0xe6e PUSH1 0x6
0xe70 DUP1
0xe71 SLOAD
0xe72 DUP3
0xe73 AND
0xe74 DUP8
0xe75 DUP5
0xe76 AND
0xe77 OR
0xe78 SWAP1
0xe79 SSTORE
0xe7a PUSH1 0x7
0xe7c DUP1
0xe7d SLOAD
0xe7e SWAP1
0xe7f SWAP2
0xe80 AND
0xe81 SWAP2
0xe82 DUP6
0xe83 AND
0xe84 SWAP2
0xe85 SWAP1
0xe86 SWAP2
0xe87 OR
0xe88 SWAP1
0xe89 SSTORE
0xe8a PUSH1 0x8
0xe8c DUP7
0xe8d SWAP1
0xe8e SSTORE
0xe8f PUSH1 0x9
0xe91 DUP6
0xe92 SWAP1
0xe93 SSTORE
0xe94 PUSH1 0x0
0xe96 DUP3
0xe97 SWAP1
0xe98 SSTORE
---
0xe15: V1355 = 0x0
0xe17: V1356 = 0x0
0xe19: REVERT 0x0 0x0
0xe1a: JUMPDEST 
0xe1b: V1357 = 0x1
0xe1e: V1358 = S[0x1]
0xe1f: V1359 = 0x1
0xe21: V1360 = 0xa0
0xe23: V1361 = 0x2
0xe25: V1362 = EXP 0x2 0xa0
0xe26: V1363 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe27: V1364 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xe2a: V1365 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1358
0xe2b: V1366 = CALLER
0xe2c: V1367 = 0x1
0xe2e: V1368 = 0xa0
0xe30: V1369 = 0x2
0xe32: V1370 = EXP 0x2 0xa0
0xe33: V1371 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe36: V1372 = AND 0xffffffffffffffffffffffffffffffffffffffff V1366
0xe3a: V1373 = OR V1372 V1365
0xe3d: S[0x1] = V1373
0xe3e: V1374 = 0x5
0xe41: V1375 = S[0x5]
0xe43: V1376 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1375
0xe46: V1377 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xe47: V1378 = OR V1377 V1376
0xe49: S[0x5] = V1378
0xe4a: V1379 = 0x2
0xe4d: V1380 = S[0x2]
0xe4f: V1381 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1380
0xe52: V1382 = AND 0xffffffffffffffffffffffffffffffffffffffff S8
0xe53: V1383 = OR V1382 V1381
0xe55: S[0x2] = V1383
0xe56: V1384 = 0x3
0xe59: V1385 = S[0x3]
0xe5b: V1386 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1385
0xe5e: V1387 = AND 0xffffffffffffffffffffffffffffffffffffffff S7
0xe5f: V1388 = OR V1387 V1386
0xe61: S[0x3] = V1388
0xe62: V1389 = 0x4
0xe65: V1390 = S[0x4]
0xe67: V1391 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1390
0xe6a: V1392 = AND 0xffffffffffffffffffffffffffffffffffffffff S6
0xe6b: V1393 = OR V1392 V1391
0xe6d: S[0x4] = V1393
0xe6e: V1394 = 0x6
0xe71: V1395 = S[0x6]
0xe73: V1396 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1395
0xe76: V1397 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xe77: V1398 = OR V1397 V1396
0xe79: S[0x6] = V1398
0xe7a: V1399 = 0x7
0xe7d: V1400 = S[0x7]
0xe80: V1401 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1400
0xe83: V1402 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xe87: V1403 = OR V1402 V1401
0xe89: S[0x7] = V1403
0xe8a: V1404 = 0x8
0xe8e: S[0x8] = S5
0xe8f: V1405 = 0x9
0xe93: S[0x9] = S4
0xe94: V1406 = 0x0
0xe98: S[0x0] = S1
---
Entry stack: []
Stack pops: 0
Stack additions: [S0, S1, S2, S3, S4, S5, S6, S7, S8]
Exit stack: []

================================

Block 0xe99
[0xe99:0xea2]
---
Predecessors: [0xe15]
Successors: [0xea3]
---
0xe99 JUMPDEST
0xe9a POP
0xe9b POP
0xe9c POP
0xe9d POP
0xe9e POP
0xe9f POP
0xea0 POP
0xea1 POP
0xea2 POP
---
0xe99: JUMPDEST 
---
Entry stack: [S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 9
Stack additions: []
Exit stack: []

================================

Block 0xea3
[0xea3:0xebc]
---
Predecessors: [0xe99]
Successors: [0xebd]
---
0xea3 JUMPDEST
0xea4 PUSH2 0x7c3
0xea7 DUP1
0xea8 PUSH2 0x14a
0xeab PUSH1 0x0
0xead CODECOPY
0xeae PUSH1 0x0
0xeb0 RETURN
0xeb1 STOP
0xeb2 PUSH1 0x60
0xeb4 PUSH1 0x40
0xeb6 MSTORE
0xeb7 CALLDATASIZE
0xeb8 ISZERO
0xeb9 PUSH2 0xcd
0xebc JUMPI
---
0xea3: JUMPDEST 
0xea4: V1407 = 0x7c3
0xea8: V1408 = 0x14a
0xeab: V1409 = 0x0
0xead: CODECOPY 0x0 0x14a 0x7c3
0xeae: V1410 = 0x0
0xeb0: RETURN 0x0 0x7c3
0xeb1: STOP 
0xeb2: V1411 = 0x60
0xeb4: V1412 = 0x40
0xeb6: M[0x40] = 0x60
0xeb7: V1413 = CALLDATASIZE
0xeb8: V1414 = ISZERO V1413
0xeb9: V1415 = 0xcd
0xebc: THROWI V1414
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xebd
[0xebd:0xeef]
---
Predecessors: [0xea3]
Successors: [0xef0]
---
0xebd PUSH4 0xffffffff
0xec2 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xee0 PUSH1 0x0
0xee2 CALLDATALOAD
0xee3 DIV
0xee4 AND
0xee5 PUSH4 0x1b15982a
0xeea DUP2
0xeeb EQ
0xeec PUSH2 0xcf
0xeef JUMPI
---
0xebd: V1416 = 0xffffffff
0xec2: V1417 = 0x100000000000000000000000000000000000000000000000000000000
0xee0: V1418 = 0x0
0xee2: V1419 = CALLDATALOAD 0x0
0xee3: V1420 = DIV V1419 0x100000000000000000000000000000000000000000000000000000000
0xee4: V1421 = AND V1420 0xffffffff
0xee5: V1422 = 0x1b15982a
0xeeb: V1423 = EQ V1421 0x1b15982a
0xeec: V1424 = 0xcf
0xeef: THROWI V1423
---
Entry stack: []
Stack pops: 0
Stack additions: [V1421]
Exit stack: [V1421]

================================

Block 0xef0
[0xef0:0xefa]
---
Predecessors: [0xebd]
Successors: [0xefb]
---
0xef0 DUP1
0xef1 PUSH4 0x1d143848
0xef6 EQ
0xef7 PUSH2 0xe5
0xefa JUMPI
---
0xef1: V1425 = 0x1d143848
0xef6: V1426 = EQ 0x1d143848 V1421
0xef7: V1427 = 0xe5
0xefa: THROWI V1426
---
Entry stack: [V1421]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V1421]

================================

Block 0xefb
[0xefb:0xf05]
---
Predecessors: [0xef0]
Successors: [0xf06]
---
0xefb DUP1
0xefc PUSH4 0x28f833b7
0xf01 EQ
0xf02 PUSH2 0x111
0xf05 JUMPI
---
0xefc: V1428 = 0x28f833b7
0xf01: V1429 = EQ 0x28f833b7 V1421
0xf02: V1430 = 0x111
0xf05: THROWI V1429
---
Entry stack: [V1421]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V1421]

================================

Block 0xf06
[0xf06:0xf10]
---
Predecessors: [0xefb]
Successors: [0xf11]
---
0xf06 DUP1
0xf07 PUSH4 0x2ebf1d58
0xf0c EQ
0xf0d PUSH2 0x13d
0xf10 JUMPI
---
0xf07: V1431 = 0x2ebf1d58
0xf0c: V1432 = EQ 0x2ebf1d58 V1421
0xf0d: V1433 = 0x13d
0xf10: THROWI V1432
---
Entry stack: [V1421]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V1421]

================================

Block 0xf11
[0xf11:0xf1b]
---
Predecessors: [0xf06]
Successors: [0xf1c]
---
0xf11 DUP1
0xf12 PUSH4 0x419759f5
0xf17 EQ
0xf18 PUSH2 0x15b
0xf1b JUMPI
---
0xf12: V1434 = 0x419759f5
0xf17: V1435 = EQ 0x419759f5 V1421
0xf18: V1436 = 0x15b
0xf1b: THROWI V1435
---
Entry stack: [V1421]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V1421]

================================

Block 0xf1c
[0xf1c:0xf26]
---
Predecessors: [0xf11]
Successors: [0xf27]
---
0xf1c DUP1
0xf1d PUSH4 0x5d37e2cc
0xf22 EQ
0xf23 PUSH2 0x17d
0xf26 JUMPI
---
0xf1d: V1437 = 0x5d37e2cc
0xf22: V1438 = EQ 0x5d37e2cc V1421
0xf23: V1439 = 0x17d
0xf26: THROWI V1438
---
Entry stack: [V1421]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V1421]

================================

Block 0xf27
[0xf27:0xf31]
---
Predecessors: [0xf1c]
Successors: [0xf32]
---
0xf27 DUP1
0xf28 PUSH4 0x633423be
0xf2d EQ
0xf2e PUSH2 0x1a9
0xf31 JUMPI
---
0xf28: V1440 = 0x633423be
0xf2d: V1441 = EQ 0x633423be V1421
0xf2e: V1442 = 0x1a9
0xf31: THROWI V1441
---
Entry stack: [V1421]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V1421]

================================

Block 0xf32
[0xf32:0xf3c]
---
Predecessors: [0xf27]
Successors: [0xf3d]
---
0xf32 DUP1
0xf33 PUSH4 0x77c93662
0xf38 EQ
0xf39 PUSH2 0x1d5
0xf3c JUMPI
---
0xf33: V1443 = 0x77c93662
0xf38: V1444 = EQ 0x77c93662 V1421
0xf39: V1445 = 0x1d5
0xf3c: THROWI V1444
---
Entry stack: [V1421]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V1421]

================================

Block 0xf3d
[0xf3d:0xf47]
---
Predecessors: [0xf32]
Successors: [0xf48]
---
0xf3d DUP1
0xf3e PUSH4 0x8da5cb5b
0xf43 EQ
0xf44 PUSH2 0x201
0xf47 JUMPI
---
0xf3e: V1446 = 0x8da5cb5b
0xf43: V1447 = EQ 0x8da5cb5b V1421
0xf44: V1448 = 0x201
0xf47: THROWI V1447
---
Entry stack: [V1421]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V1421]

================================

Block 0xf48
[0xf48:0xf52]
---
Predecessors: [0xf3d]
Successors: [0xf53]
---
0xf48 DUP1
0xf49 PUSH4 0xba45b0b8
0xf4e EQ
0xf4f PUSH2 0x22d
0xf52 JUMPI
---
0xf49: V1449 = 0xba45b0b8
0xf4e: V1450 = EQ 0xba45b0b8 V1421
0xf4f: V1451 = 0x22d
0xf52: THROWI V1450
---
Entry stack: [V1421]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V1421]

================================

Block 0xf53
[0xf53:0xf5d]
---
Predecessors: [0xf48]
Successors: [0xf5e]
---
0xf53 DUP1
0xf54 PUSH4 0xc35905c6
0xf59 EQ
0xf5a PUSH2 0x251
0xf5d JUMPI
---
0xf54: V1452 = 0xc35905c6
0xf59: V1453 = EQ 0xc35905c6 V1421
0xf5a: V1454 = 0x251
0xf5d: THROWI V1453
---
Entry stack: [V1421]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V1421]

================================

Block 0xf5e
[0xf5e:0xf68]
---
Predecessors: [0xf53]
Successors: [0xf69]
---
0xf5e DUP1
0xf5f PUSH4 0xc8db233e
0xf64 EQ
0xf65 PUSH2 0x273
0xf68 JUMPI
---
0xf5f: V1455 = 0xc8db233e
0xf64: V1456 = EQ 0xc8db233e V1421
0xf65: V1457 = 0x273
0xf68: THROWI V1456
---
Entry stack: [V1421]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V1421]

================================

Block 0xf69
[0xf69:0xf73]
---
Predecessors: [0xf5e]
Successors: [0xf74]
---
0xf69 DUP1
0xf6a PUSH4 0xcd446e22
0xf6f EQ
0xf70 PUSH2 0x291
0xf73 JUMPI
---
0xf6a: V1458 = 0xcd446e22
0xf6f: V1459 = EQ 0xcd446e22 V1421
0xf70: V1460 = 0x291
0xf73: THROWI V1459
---
Entry stack: [V1421]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V1421]

================================

Block 0xf74
[0xf74:0xf7e]
---
Predecessors: [0xf69]
Successors: [0xf7f]
---
0xf74 DUP1
0xf75 PUSH4 0xda284dcc
0xf7a EQ
0xf7b PUSH2 0x2bd
0xf7e JUMPI
---
0xf75: V1461 = 0xda284dcc
0xf7a: V1462 = EQ 0xda284dcc V1421
0xf7b: V1463 = 0x2bd
0xf7e: THROWI V1462
---
Entry stack: [V1421]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V1421]

================================

Block 0xf7f
[0xf7f:0xf9d]
---
Predecessors: [0xf74]
Successors: [0xf9e]
---
0xf7f JUMPDEST
0xf80 INVALID
0xf81 JUMPDEST
0xf82 PUSH2 0xe3
0xf85 PUSH1 0x1
0xf87 PUSH1 0xa0
0xf89 PUSH1 0x2
0xf8b EXP
0xf8c SUB
0xf8d PUSH1 0x4
0xf8f CALLDATALOAD
0xf90 AND
0xf91 PUSH2 0x2df
0xf94 JUMP
0xf95 JUMPDEST
0xf96 STOP
0xf97 JUMPDEST
0xf98 CALLVALUE
0xf99 ISZERO
0xf9a PUSH2 0xed
0xf9d JUMPI
---
0xf7f: JUMPDEST 
0xf80: INVALID 
0xf81: JUMPDEST 
0xf82: V1464 = 0xe3
0xf85: V1465 = 0x1
0xf87: V1466 = 0xa0
0xf89: V1467 = 0x2
0xf8b: V1468 = EXP 0x2 0xa0
0xf8c: V1469 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf8d: V1470 = 0x4
0xf8f: V1471 = CALLDATALOAD 0x4
0xf90: V1472 = AND V1471 0xffffffffffffffffffffffffffffffffffffffff
0xf91: V1473 = 0x2df
0xf94: THROW 
0xf95: JUMPDEST 
0xf96: STOP 
0xf97: JUMPDEST 
0xf98: V1474 = CALLVALUE
0xf99: V1475 = ISZERO V1474
0xf9a: V1476 = 0xed
0xf9d: THROWI V1475
---
Entry stack: [V1421]
Stack pops: 0
Stack additions: [V1472, 0xe3]
Exit stack: []

================================

Block 0xf9e
[0xf9e:0xfc9]
---
Predecessors: [0xf7f]
Successors: [0xfca]
---
0xf9e INVALID
0xf9f JUMPDEST
0xfa0 PUSH2 0xf5
0xfa3 PUSH2 0x4cf
0xfa6 JUMP
0xfa7 JUMPDEST
0xfa8 PUSH1 0x40
0xfaa DUP1
0xfab MLOAD
0xfac PUSH1 0x1
0xfae PUSH1 0xa0
0xfb0 PUSH1 0x2
0xfb2 EXP
0xfb3 SUB
0xfb4 SWAP1
0xfb5 SWAP3
0xfb6 AND
0xfb7 DUP3
0xfb8 MSTORE
0xfb9 MLOAD
0xfba SWAP1
0xfbb DUP2
0xfbc SWAP1
0xfbd SUB
0xfbe PUSH1 0x20
0xfc0 ADD
0xfc1 SWAP1
0xfc2 RETURN
0xfc3 JUMPDEST
0xfc4 CALLVALUE
0xfc5 ISZERO
0xfc6 PUSH2 0x119
0xfc9 JUMPI
---
0xf9e: INVALID 
0xf9f: JUMPDEST 
0xfa0: V1477 = 0xf5
0xfa3: V1478 = 0x4cf
0xfa6: THROW 
0xfa7: JUMPDEST 
0xfa8: V1479 = 0x40
0xfab: V1480 = M[0x40]
0xfac: V1481 = 0x1
0xfae: V1482 = 0xa0
0xfb0: V1483 = 0x2
0xfb2: V1484 = EXP 0x2 0xa0
0xfb3: V1485 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfb6: V1486 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xfb8: M[V1480] = V1486
0xfb9: V1487 = M[0x40]
0xfbd: V1488 = SUB V1480 V1487
0xfbe: V1489 = 0x20
0xfc0: V1490 = ADD 0x20 V1488
0xfc2: RETURN V1487 V1490
0xfc3: JUMPDEST 
0xfc4: V1491 = CALLVALUE
0xfc5: V1492 = ISZERO V1491
0xfc6: V1493 = 0x119
0xfc9: THROWI V1492
---
Entry stack: []
Stack pops: 0
Stack additions: [0xf5]
Exit stack: []

================================

Block 0xfca
[0xfca:0xff5]
---
Predecessors: [0xf9e]
Successors: [0xff6]
---
0xfca INVALID
0xfcb JUMPDEST
0xfcc PUSH2 0xf5
0xfcf PUSH2 0x4de
0xfd2 JUMP
0xfd3 JUMPDEST
0xfd4 PUSH1 0x40
0xfd6 DUP1
0xfd7 MLOAD
0xfd8 PUSH1 0x1
0xfda PUSH1 0xa0
0xfdc PUSH1 0x2
0xfde EXP
0xfdf SUB
0xfe0 SWAP1
0xfe1 SWAP3
0xfe2 AND
0xfe3 DUP3
0xfe4 MSTORE
0xfe5 MLOAD
0xfe6 SWAP1
0xfe7 DUP2
0xfe8 SWAP1
0xfe9 SUB
0xfea PUSH1 0x20
0xfec ADD
0xfed SWAP1
0xfee RETURN
0xfef JUMPDEST
0xff0 CALLVALUE
0xff1 ISZERO
0xff2 PUSH2 0x145
0xff5 JUMPI
---
0xfca: INVALID 
0xfcb: JUMPDEST 
0xfcc: V1494 = 0xf5
0xfcf: V1495 = 0x4de
0xfd2: THROW 
0xfd3: JUMPDEST 
0xfd4: V1496 = 0x40
0xfd7: V1497 = M[0x40]
0xfd8: V1498 = 0x1
0xfda: V1499 = 0xa0
0xfdc: V1500 = 0x2
0xfde: V1501 = EXP 0x2 0xa0
0xfdf: V1502 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfe2: V1503 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xfe4: M[V1497] = V1503
0xfe5: V1504 = M[0x40]
0xfe9: V1505 = SUB V1497 V1504
0xfea: V1506 = 0x20
0xfec: V1507 = ADD 0x20 V1505
0xfee: RETURN V1504 V1507
0xfef: JUMPDEST 
0xff0: V1508 = CALLVALUE
0xff1: V1509 = ISZERO V1508
0xff2: V1510 = 0x145
0xff5: THROWI V1509
---
Entry stack: []
Stack pops: 0
Stack additions: [0xf5]
Exit stack: []

================================

Block 0xff6
[0xff6:0x1013]
---
Predecessors: [0xfca]
Successors: [0x1014]
---
0xff6 INVALID
0xff7 JUMPDEST
0xff8 PUSH2 0xe3
0xffb PUSH1 0x1
0xffd PUSH1 0xa0
0xfff PUSH1 0x2
0x1001 EXP
0x1002 SUB
0x1003 PUSH1 0x4
0x1005 CALLDATALOAD
0x1006 AND
0x1007 PUSH2 0x4ed
0x100a JUMP
0x100b JUMPDEST
0x100c STOP
0x100d JUMPDEST
0x100e CALLVALUE
0x100f ISZERO
0x1010 PUSH2 0x163
0x1013 JUMPI
---
0xff6: INVALID 
0xff7: JUMPDEST 
0xff8: V1511 = 0xe3
0xffb: V1512 = 0x1
0xffd: V1513 = 0xa0
0xfff: V1514 = 0x2
0x1001: V1515 = EXP 0x2 0xa0
0x1002: V1516 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1003: V1517 = 0x4
0x1005: V1518 = CALLDATALOAD 0x4
0x1006: V1519 = AND V1518 0xffffffffffffffffffffffffffffffffffffffff
0x1007: V1520 = 0x4ed
0x100a: THROW 
0x100b: JUMPDEST 
0x100c: STOP 
0x100d: JUMPDEST 
0x100e: V1521 = CALLVALUE
0x100f: V1522 = ISZERO V1521
0x1010: V1523 = 0x163
0x1013: THROWI V1522
---
Entry stack: []
Stack pops: 0
Stack additions: [V1519, 0xe3]
Exit stack: []

================================

Block 0x1014
[0x1014:0x1035]
---
Predecessors: [0xff6]
Successors: [0x1036]
---
0x1014 INVALID
0x1015 JUMPDEST
0x1016 PUSH2 0x16b
0x1019 PUSH2 0x5b4
0x101c JUMP
0x101d JUMPDEST
0x101e PUSH1 0x40
0x1020 DUP1
0x1021 MLOAD
0x1022 SWAP2
0x1023 DUP3
0x1024 MSTORE
0x1025 MLOAD
0x1026 SWAP1
0x1027 DUP2
0x1028 SWAP1
0x1029 SUB
0x102a PUSH1 0x20
0x102c ADD
0x102d SWAP1
0x102e RETURN
0x102f JUMPDEST
0x1030 CALLVALUE
0x1031 ISZERO
0x1032 PUSH2 0x185
0x1035 JUMPI
---
0x1014: INVALID 
0x1015: JUMPDEST 
0x1016: V1524 = 0x16b
0x1019: V1525 = 0x5b4
0x101c: THROW 
0x101d: JUMPDEST 
0x101e: V1526 = 0x40
0x1021: V1527 = M[0x40]
0x1024: M[V1527] = S0
0x1025: V1528 = M[0x40]
0x1029: V1529 = SUB V1527 V1528
0x102a: V1530 = 0x20
0x102c: V1531 = ADD 0x20 V1529
0x102e: RETURN V1528 V1531
0x102f: JUMPDEST 
0x1030: V1532 = CALLVALUE
0x1031: V1533 = ISZERO V1532
0x1032: V1534 = 0x185
0x1035: THROWI V1533
---
Entry stack: []
Stack pops: 0
Stack additions: [0x16b]
Exit stack: []

================================

Block 0x1036
[0x1036:0x1061]
---
Predecessors: [0x1014]
Successors: [0x1062]
---
0x1036 INVALID
0x1037 JUMPDEST
0x1038 PUSH2 0xf5
0x103b PUSH2 0x5ba
0x103e JUMP
0x103f JUMPDEST
0x1040 PUSH1 0x40
0x1042 DUP1
0x1043 MLOAD
0x1044 PUSH1 0x1
0x1046 PUSH1 0xa0
0x1048 PUSH1 0x2
0x104a EXP
0x104b SUB
0x104c SWAP1
0x104d SWAP3
0x104e AND
0x104f DUP3
0x1050 MSTORE
0x1051 MLOAD
0x1052 SWAP1
0x1053 DUP2
0x1054 SWAP1
0x1055 SUB
0x1056 PUSH1 0x20
0x1058 ADD
0x1059 SWAP1
0x105a RETURN
0x105b JUMPDEST
0x105c CALLVALUE
0x105d ISZERO
0x105e PUSH2 0x1b1
0x1061 JUMPI
---
0x1036: INVALID 
0x1037: JUMPDEST 
0x1038: V1535 = 0xf5
0x103b: V1536 = 0x5ba
0x103e: THROW 
0x103f: JUMPDEST 
0x1040: V1537 = 0x40
0x1043: V1538 = M[0x40]
0x1044: V1539 = 0x1
0x1046: V1540 = 0xa0
0x1048: V1541 = 0x2
0x104a: V1542 = EXP 0x2 0xa0
0x104b: V1543 = SUB 0x10000000000000000000000000000000000000000 0x1
0x104e: V1544 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1050: M[V1538] = V1544
0x1051: V1545 = M[0x40]
0x1055: V1546 = SUB V1538 V1545
0x1056: V1547 = 0x20
0x1058: V1548 = ADD 0x20 V1546
0x105a: RETURN V1545 V1548
0x105b: JUMPDEST 
0x105c: V1549 = CALLVALUE
0x105d: V1550 = ISZERO V1549
0x105e: V1551 = 0x1b1
0x1061: THROWI V1550
---
Entry stack: []
Stack pops: 0
Stack additions: [0xf5]
Exit stack: []

================================

Block 0x1062
[0x1062:0x108d]
---
Predecessors: [0x1036]
Successors: [0x108e]
---
0x1062 INVALID
0x1063 JUMPDEST
0x1064 PUSH2 0xf5
0x1067 PUSH2 0x5c9
0x106a JUMP
0x106b JUMPDEST
0x106c PUSH1 0x40
0x106e DUP1
0x106f MLOAD
0x1070 PUSH1 0x1
0x1072 PUSH1 0xa0
0x1074 PUSH1 0x2
0x1076 EXP
0x1077 SUB
0x1078 SWAP1
0x1079 SWAP3
0x107a AND
0x107b DUP3
0x107c MSTORE
0x107d MLOAD
0x107e SWAP1
0x107f DUP2
0x1080 SWAP1
0x1081 SUB
0x1082 PUSH1 0x20
0x1084 ADD
0x1085 SWAP1
0x1086 RETURN
0x1087 JUMPDEST
0x1088 CALLVALUE
0x1089 ISZERO
0x108a PUSH2 0x1dd
0x108d JUMPI
---
0x1062: INVALID 
0x1063: JUMPDEST 
0x1064: V1552 = 0xf5
0x1067: V1553 = 0x5c9
0x106a: THROW 
0x106b: JUMPDEST 
0x106c: V1554 = 0x40
0x106f: V1555 = M[0x40]
0x1070: V1556 = 0x1
0x1072: V1557 = 0xa0
0x1074: V1558 = 0x2
0x1076: V1559 = EXP 0x2 0xa0
0x1077: V1560 = SUB 0x10000000000000000000000000000000000000000 0x1
0x107a: V1561 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x107c: M[V1555] = V1561
0x107d: V1562 = M[0x40]
0x1081: V1563 = SUB V1555 V1562
0x1082: V1564 = 0x20
0x1084: V1565 = ADD 0x20 V1563
0x1086: RETURN V1562 V1565
0x1087: JUMPDEST 
0x1088: V1566 = CALLVALUE
0x1089: V1567 = ISZERO V1566
0x108a: V1568 = 0x1dd
0x108d: THROWI V1567
---
Entry stack: []
Stack pops: 0
Stack additions: [0xf5]
Exit stack: []

================================

Block 0x108e
[0x108e:0x10b9]
---
Predecessors: [0x1062]
Successors: [0x10ba]
---
0x108e INVALID
0x108f JUMPDEST
0x1090 PUSH2 0xf5
0x1093 PUSH2 0x5d8
0x1096 JUMP
0x1097 JUMPDEST
0x1098 PUSH1 0x40
0x109a DUP1
0x109b MLOAD
0x109c PUSH1 0x1
0x109e PUSH1 0xa0
0x10a0 PUSH1 0x2
0x10a2 EXP
0x10a3 SUB
0x10a4 SWAP1
0x10a5 SWAP3
0x10a6 AND
0x10a7 DUP3
0x10a8 MSTORE
0x10a9 MLOAD
0x10aa SWAP1
0x10ab DUP2
0x10ac SWAP1
0x10ad SUB
0x10ae PUSH1 0x20
0x10b0 ADD
0x10b1 SWAP1
0x10b2 RETURN
0x10b3 JUMPDEST
0x10b4 CALLVALUE
0x10b5 ISZERO
0x10b6 PUSH2 0x209
0x10b9 JUMPI
---
0x108e: INVALID 
0x108f: JUMPDEST 
0x1090: V1569 = 0xf5
0x1093: V1570 = 0x5d8
0x1096: THROW 
0x1097: JUMPDEST 
0x1098: V1571 = 0x40
0x109b: V1572 = M[0x40]
0x109c: V1573 = 0x1
0x109e: V1574 = 0xa0
0x10a0: V1575 = 0x2
0x10a2: V1576 = EXP 0x2 0xa0
0x10a3: V1577 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10a6: V1578 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x10a8: M[V1572] = V1578
0x10a9: V1579 = M[0x40]
0x10ad: V1580 = SUB V1572 V1579
0x10ae: V1581 = 0x20
0x10b0: V1582 = ADD 0x20 V1580
0x10b2: RETURN V1579 V1582
0x10b3: JUMPDEST 
0x10b4: V1583 = CALLVALUE
0x10b5: V1584 = ISZERO V1583
0x10b6: V1585 = 0x209
0x10b9: THROWI V1584
---
Entry stack: []
Stack pops: 0
Stack additions: [0xf5]
Exit stack: []

================================

Block 0x10ba
[0x10ba:0x10e5]
---
Predecessors: [0x108e]
Successors: [0x10e6]
---
0x10ba INVALID
0x10bb JUMPDEST
0x10bc PUSH2 0xf5
0x10bf PUSH2 0x5e7
0x10c2 JUMP
0x10c3 JUMPDEST
0x10c4 PUSH1 0x40
0x10c6 DUP1
0x10c7 MLOAD
0x10c8 PUSH1 0x1
0x10ca PUSH1 0xa0
0x10cc PUSH1 0x2
0x10ce EXP
0x10cf SUB
0x10d0 SWAP1
0x10d1 SWAP3
0x10d2 AND
0x10d3 DUP3
0x10d4 MSTORE
0x10d5 MLOAD
0x10d6 SWAP1
0x10d7 DUP2
0x10d8 SWAP1
0x10d9 SUB
0x10da PUSH1 0x20
0x10dc ADD
0x10dd SWAP1
0x10de RETURN
0x10df JUMPDEST
0x10e0 CALLVALUE
0x10e1 ISZERO
0x10e2 PUSH2 0x235
0x10e5 JUMPI
---
0x10ba: INVALID 
0x10bb: JUMPDEST 
0x10bc: V1586 = 0xf5
0x10bf: V1587 = 0x5e7
0x10c2: THROW 
0x10c3: JUMPDEST 
0x10c4: V1588 = 0x40
0x10c7: V1589 = M[0x40]
0x10c8: V1590 = 0x1
0x10ca: V1591 = 0xa0
0x10cc: V1592 = 0x2
0x10ce: V1593 = EXP 0x2 0xa0
0x10cf: V1594 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10d2: V1595 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x10d4: M[V1589] = V1595
0x10d5: V1596 = M[0x40]
0x10d9: V1597 = SUB V1589 V1596
0x10da: V1598 = 0x20
0x10dc: V1599 = ADD 0x20 V1597
0x10de: RETURN V1596 V1599
0x10df: JUMPDEST 
0x10e0: V1600 = CALLVALUE
0x10e1: V1601 = ISZERO V1600
0x10e2: V1602 = 0x235
0x10e5: THROWI V1601
---
Entry stack: []
Stack pops: 0
Stack additions: [0xf5]
Exit stack: []

================================

Block 0x10e6
[0x10e6:0x1109]
---
Predecessors: [0x10ba]
Successors: [0x110a]
---
0x10e6 INVALID
0x10e7 JUMPDEST
0x10e8 PUSH2 0xe3
0x10eb PUSH1 0x1
0x10ed PUSH1 0xa0
0x10ef PUSH1 0x2
0x10f1 EXP
0x10f2 SUB
0x10f3 PUSH1 0x4
0x10f5 CALLDATALOAD
0x10f6 DUP2
0x10f7 AND
0x10f8 SWAP1
0x10f9 PUSH1 0x24
0x10fb CALLDATALOAD
0x10fc AND
0x10fd PUSH2 0x5f6
0x1100 JUMP
0x1101 JUMPDEST
0x1102 STOP
0x1103 JUMPDEST
0x1104 CALLVALUE
0x1105 ISZERO
0x1106 PUSH2 0x259
0x1109 JUMPI
---
0x10e6: INVALID 
0x10e7: JUMPDEST 
0x10e8: V1603 = 0xe3
0x10eb: V1604 = 0x1
0x10ed: V1605 = 0xa0
0x10ef: V1606 = 0x2
0x10f1: V1607 = EXP 0x2 0xa0
0x10f2: V1608 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10f3: V1609 = 0x4
0x10f5: V1610 = CALLDATALOAD 0x4
0x10f7: V1611 = AND 0xffffffffffffffffffffffffffffffffffffffff V1610
0x10f9: V1612 = 0x24
0x10fb: V1613 = CALLDATALOAD 0x24
0x10fc: V1614 = AND V1613 0xffffffffffffffffffffffffffffffffffffffff
0x10fd: V1615 = 0x5f6
0x1100: THROW 
0x1101: JUMPDEST 
0x1102: STOP 
0x1103: JUMPDEST 
0x1104: V1616 = CALLVALUE
0x1105: V1617 = ISZERO V1616
0x1106: V1618 = 0x259
0x1109: THROWI V1617
---
Entry stack: []
Stack pops: 0
Stack additions: [V1614, V1611, 0xe3]
Exit stack: []

================================

Block 0x110a
[0x110a:0x112b]
---
Predecessors: [0x10e6]
Successors: [0x112c]
---
0x110a INVALID
0x110b JUMPDEST
0x110c PUSH2 0x16b
0x110f PUSH2 0x65a
0x1112 JUMP
0x1113 JUMPDEST
0x1114 PUSH1 0x40
0x1116 DUP1
0x1117 MLOAD
0x1118 SWAP2
0x1119 DUP3
0x111a MSTORE
0x111b MLOAD
0x111c SWAP1
0x111d DUP2
0x111e SWAP1
0x111f SUB
0x1120 PUSH1 0x20
0x1122 ADD
0x1123 SWAP1
0x1124 RETURN
0x1125 JUMPDEST
0x1126 CALLVALUE
0x1127 ISZERO
0x1128 PUSH2 0x27b
0x112b JUMPI
---
0x110a: INVALID 
0x110b: JUMPDEST 
0x110c: V1619 = 0x16b
0x110f: V1620 = 0x65a
0x1112: THROW 
0x1113: JUMPDEST 
0x1114: V1621 = 0x40
0x1117: V1622 = M[0x40]
0x111a: M[V1622] = S0
0x111b: V1623 = M[0x40]
0x111f: V1624 = SUB V1622 V1623
0x1120: V1625 = 0x20
0x1122: V1626 = ADD 0x20 V1624
0x1124: RETURN V1623 V1626
0x1125: JUMPDEST 
0x1126: V1627 = CALLVALUE
0x1127: V1628 = ISZERO V1627
0x1128: V1629 = 0x27b
0x112b: THROWI V1628
---
Entry stack: []
Stack pops: 0
Stack additions: [0x16b]
Exit stack: []

================================

Block 0x112c
[0x112c:0x1149]
---
Predecessors: [0x110a]
Successors: [0x114a]
---
0x112c INVALID
0x112d JUMPDEST
0x112e PUSH2 0xe3
0x1131 PUSH1 0x1
0x1133 PUSH1 0xa0
0x1135 PUSH1 0x2
0x1137 EXP
0x1138 SUB
0x1139 PUSH1 0x4
0x113b CALLDATALOAD
0x113c AND
0x113d PUSH2 0x660
0x1140 JUMP
0x1141 JUMPDEST
0x1142 STOP
0x1143 JUMPDEST
0x1144 CALLVALUE
0x1145 ISZERO
0x1146 PUSH2 0x299
0x1149 JUMPI
---
0x112c: INVALID 
0x112d: JUMPDEST 
0x112e: V1630 = 0xe3
0x1131: V1631 = 0x1
0x1133: V1632 = 0xa0
0x1135: V1633 = 0x2
0x1137: V1634 = EXP 0x2 0xa0
0x1138: V1635 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1139: V1636 = 0x4
0x113b: V1637 = CALLDATALOAD 0x4
0x113c: V1638 = AND V1637 0xffffffffffffffffffffffffffffffffffffffff
0x113d: V1639 = 0x660
0x1140: THROW 
0x1141: JUMPDEST 
0x1142: STOP 
0x1143: JUMPDEST 
0x1144: V1640 = CALLVALUE
0x1145: V1641 = ISZERO V1640
0x1146: V1642 = 0x299
0x1149: THROWI V1641
---
Entry stack: []
Stack pops: 0
Stack additions: [V1638, 0xe3]
Exit stack: []

================================

Block 0x114a
[0x114a:0x1175]
---
Predecessors: [0x112c]
Successors: [0x1176]
---
0x114a INVALID
0x114b JUMPDEST
0x114c PUSH2 0xf5
0x114f PUSH2 0x782
0x1152 JUMP
0x1153 JUMPDEST
0x1154 PUSH1 0x40
0x1156 DUP1
0x1157 MLOAD
0x1158 PUSH1 0x1
0x115a PUSH1 0xa0
0x115c PUSH1 0x2
0x115e EXP
0x115f SUB
0x1160 SWAP1
0x1161 SWAP3
0x1162 AND
0x1163 DUP3
0x1164 MSTORE
0x1165 MLOAD
0x1166 SWAP1
0x1167 DUP2
0x1168 SWAP1
0x1169 SUB
0x116a PUSH1 0x20
0x116c ADD
0x116d SWAP1
0x116e RETURN
0x116f JUMPDEST
0x1170 CALLVALUE
0x1171 ISZERO
0x1172 PUSH2 0x2c5
0x1175 JUMPI
---
0x114a: INVALID 
0x114b: JUMPDEST 
0x114c: V1643 = 0xf5
0x114f: V1644 = 0x782
0x1152: THROW 
0x1153: JUMPDEST 
0x1154: V1645 = 0x40
0x1157: V1646 = M[0x40]
0x1158: V1647 = 0x1
0x115a: V1648 = 0xa0
0x115c: V1649 = 0x2
0x115e: V1650 = EXP 0x2 0xa0
0x115f: V1651 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1162: V1652 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1164: M[V1646] = V1652
0x1165: V1653 = M[0x40]
0x1169: V1654 = SUB V1646 V1653
0x116a: V1655 = 0x20
0x116c: V1656 = ADD 0x20 V1654
0x116e: RETURN V1653 V1656
0x116f: JUMPDEST 
0x1170: V1657 = CALLVALUE
0x1171: V1658 = ISZERO V1657
0x1172: V1659 = 0x2c5
0x1175: THROWI V1658
---
Entry stack: []
Stack pops: 0
Stack additions: [0xf5]
Exit stack: []

================================

Block 0x1176
[0x1176:0x11a7]
---
Predecessors: [0x114a]
Successors: [0x11a8]
---
0x1176 INVALID
0x1177 JUMPDEST
0x1178 PUSH2 0x16b
0x117b PUSH2 0x791
0x117e JUMP
0x117f JUMPDEST
0x1180 PUSH1 0x40
0x1182 DUP1
0x1183 MLOAD
0x1184 SWAP2
0x1185 DUP3
0x1186 MSTORE
0x1187 MLOAD
0x1188 SWAP1
0x1189 DUP2
0x118a SWAP1
0x118b SUB
0x118c PUSH1 0x20
0x118e ADD
0x118f SWAP1
0x1190 RETURN
0x1191 JUMPDEST
0x1192 PUSH1 0x1
0x1194 SLOAD
0x1195 CALLER
0x1196 PUSH1 0x1
0x1198 PUSH1 0xa0
0x119a PUSH1 0x2
0x119c EXP
0x119d SUB
0x119e SWAP1
0x119f DUP2
0x11a0 AND
0x11a1 SWAP2
0x11a2 AND
0x11a3 EQ
0x11a4 PUSH2 0x2fb
0x11a7 JUMPI
---
0x1176: INVALID 
0x1177: JUMPDEST 
0x1178: V1660 = 0x16b
0x117b: V1661 = 0x791
0x117e: THROW 
0x117f: JUMPDEST 
0x1180: V1662 = 0x40
0x1183: V1663 = M[0x40]
0x1186: M[V1663] = S0
0x1187: V1664 = M[0x40]
0x118b: V1665 = SUB V1663 V1664
0x118c: V1666 = 0x20
0x118e: V1667 = ADD 0x20 V1665
0x1190: RETURN V1664 V1667
0x1191: JUMPDEST 
0x1192: V1668 = 0x1
0x1194: V1669 = S[0x1]
0x1195: V1670 = CALLER
0x1196: V1671 = 0x1
0x1198: V1672 = 0xa0
0x119a: V1673 = 0x2
0x119c: V1674 = EXP 0x2 0xa0
0x119d: V1675 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11a0: V1676 = AND 0xffffffffffffffffffffffffffffffffffffffff V1670
0x11a2: V1677 = AND V1669 0xffffffffffffffffffffffffffffffffffffffff
0x11a3: V1678 = EQ V1677 V1676
0x11a4: V1679 = 0x2fb
0x11a7: THROWI V1678
---
Entry stack: []
Stack pops: 0
Stack additions: [0x16b]
Exit stack: []

================================

Block 0x11a8
[0x11a8:0x11c2]
---
Predecessors: [0x1176]
Successors: [0x11c3]
---
0x11a8 PUSH1 0x0
0x11aa PUSH1 0x0
0x11ac REVERT
0x11ad JUMPDEST
0x11ae PUSH1 0x3
0x11b0 SLOAD
0x11b1 PUSH1 0x1
0x11b3 PUSH1 0xa0
0x11b5 PUSH1 0x2
0x11b7 EXP
0x11b8 SUB
0x11b9 DUP3
0x11ba DUP2
0x11bb AND
0x11bc SWAP2
0x11bd AND
0x11be EQ
0x11bf PUSH2 0x316
0x11c2 JUMPI
---
0x11a8: V1680 = 0x0
0x11aa: V1681 = 0x0
0x11ac: REVERT 0x0 0x0
0x11ad: JUMPDEST 
0x11ae: V1682 = 0x3
0x11b0: V1683 = S[0x3]
0x11b1: V1684 = 0x1
0x11b3: V1685 = 0xa0
0x11b5: V1686 = 0x2
0x11b7: V1687 = EXP 0x2 0xa0
0x11b8: V1688 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11bb: V1689 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x11bd: V1690 = AND V1683 0xffffffffffffffffffffffffffffffffffffffff
0x11be: V1691 = EQ V1690 V1689
0x11bf: V1692 = 0x316
0x11c2: THROWI V1691
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x11c3
[0x11c3:0x11d4]
---
Predecessors: [0x11a8]
Successors: [0x11d5]
---
0x11c3 PUSH1 0x0
0x11c5 PUSH1 0x0
0x11c7 REVERT
0x11c8 JUMPDEST
0x11c9 PUSH1 0x0
0x11cb SLOAD
0x11cc TIMESTAMP
0x11cd LT
0x11ce ISZERO
0x11cf DUP1
0x11d0 ISZERO
0x11d1 PUSH2 0x32e
0x11d4 JUMPI
---
0x11c3: V1693 = 0x0
0x11c5: V1694 = 0x0
0x11c7: REVERT 0x0 0x0
0x11c8: JUMPDEST 
0x11c9: V1695 = 0x0
0x11cb: V1696 = S[0x0]
0x11cc: V1697 = TIMESTAMP
0x11cd: V1698 = LT V1697 V1696
0x11ce: V1699 = ISZERO V1698
0x11d0: V1700 = ISZERO V1699
0x11d1: V1701 = 0x32e
0x11d4: THROWI V1700
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [V1699]
Exit stack: []

================================

Block 0x11d5
[0x11d5:0x11df]
---
Predecessors: [0x11c3]
Successors: [0x11e0]
---
0x11d5 POP
0x11d6 PUSH1 0x0
0x11d8 SLOAD
0x11d9 PUSH3 0x15180
0x11dd ADD
0x11de TIMESTAMP
0x11df LT
---
0x11d6: V1702 = 0x0
0x11d8: V1703 = S[0x0]
0x11d9: V1704 = 0x15180
0x11dd: V1705 = ADD 0x15180 V1703
0x11de: V1706 = TIMESTAMP
0x11df: V1707 = LT V1706 V1705
---
Entry stack: [V1699]
Stack pops: 1
Stack additions: [V1707]
Exit stack: [V1707]

================================

Block 0x11e0
[0x11e0:0x11e6]
---
Predecessors: [0x11d5]
Successors: [0x11e7]
---
0x11e0 JUMPDEST
0x11e1 ISZERO
0x11e2 ISZERO
0x11e3 PUSH2 0x33a
0x11e6 JUMPI
---
0x11e0: JUMPDEST 
0x11e1: V1708 = ISZERO V1707
0x11e2: V1709 = ISZERO V1708
0x11e3: V1710 = 0x33a
0x11e6: THROWI V1709
---
Entry stack: [V1707]
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x11e7
[0x11e7:0x11fd]
---
Predecessors: [0x11e0]
Successors: [0x11fe]
---
0x11e7 PUSH1 0x0
0x11e9 PUSH1 0x0
0x11eb REVERT
0x11ec JUMPDEST
0x11ed PUSH1 0x6
0x11ef SLOAD
0x11f0 PUSH1 0x1
0x11f2 PUSH1 0xa0
0x11f4 PUSH1 0x2
0x11f6 EXP
0x11f7 SUB
0x11f8 AND
0x11f9 ISZERO
0x11fa PUSH2 0x3e6
0x11fd JUMPI
---
0x11e7: V1711 = 0x0
0x11e9: V1712 = 0x0
0x11eb: REVERT 0x0 0x0
0x11ec: JUMPDEST 
0x11ed: V1713 = 0x6
0x11ef: V1714 = S[0x6]
0x11f0: V1715 = 0x1
0x11f2: V1716 = 0xa0
0x11f4: V1717 = 0x2
0x11f6: V1718 = EXP 0x2 0xa0
0x11f7: V1719 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11f8: V1720 = AND 0xffffffffffffffffffffffffffffffffffffffff V1714
0x11f9: V1721 = ISZERO V1720
0x11fa: V1722 = 0x3e6
0x11fd: THROWI V1721
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x11fe
[0x11fe:0x1278]
---
Predecessors: [0x11e7]
Successors: [0x1279]
---
0x11fe PUSH1 0x6
0x1200 SLOAD
0x1201 PUSH1 0x3
0x1203 SLOAD
0x1204 PUSH1 0x8
0x1206 SLOAD
0x1207 PUSH1 0x40
0x1209 DUP1
0x120a MLOAD
0x120b PUSH1 0x0
0x120d PUSH1 0x20
0x120f SWAP2
0x1210 DUP3
0x1211 ADD
0x1212 DUP2
0x1213 SWAP1
0x1214 MSTORE
0x1215 DUP3
0x1216 MLOAD
0x1217 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x1238 DUP2
0x1239 MSTORE
0x123a PUSH1 0x1
0x123c PUSH1 0xa0
0x123e PUSH1 0x2
0x1240 EXP
0x1241 SUB
0x1242 SWAP6
0x1243 DUP7
0x1244 AND
0x1245 PUSH1 0x4
0x1247 DUP3
0x1248 ADD
0x1249 MSTORE
0x124a PUSH1 0x24
0x124c DUP2
0x124d ADD
0x124e SWAP5
0x124f SWAP1
0x1250 SWAP5
0x1251 MSTORE
0x1252 SWAP2
0x1253 MLOAD
0x1254 SWAP4
0x1255 SWAP1
0x1256 SWAP5
0x1257 AND
0x1258 SWAP4
0x1259 PUSH4 0xa9059cbb
0x125e SWAP4
0x125f PUSH1 0x44
0x1261 DUP1
0x1262 DUP6
0x1263 ADD
0x1264 SWAP5
0x1265 SWAP3
0x1266 SWAP4
0x1267 SWAP2
0x1268 SWAP3
0x1269 DUP4
0x126a SWAP1
0x126b SUB
0x126c ADD
0x126d SWAP1
0x126e DUP3
0x126f SWAP1
0x1270 DUP8
0x1271 DUP1
0x1272 EXTCODESIZE
0x1273 ISZERO
0x1274 ISZERO
0x1275 PUSH2 0x3c8
0x1278 JUMPI
---
0x11fe: V1723 = 0x6
0x1200: V1724 = S[0x6]
0x1201: V1725 = 0x3
0x1203: V1726 = S[0x3]
0x1204: V1727 = 0x8
0x1206: V1728 = S[0x8]
0x1207: V1729 = 0x40
0x120a: V1730 = M[0x40]
0x120b: V1731 = 0x0
0x120d: V1732 = 0x20
0x1211: V1733 = ADD 0x20 V1730
0x1214: M[V1733] = 0x0
0x1216: V1734 = M[0x40]
0x1217: V1735 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x1239: M[V1734] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x123a: V1736 = 0x1
0x123c: V1737 = 0xa0
0x123e: V1738 = 0x2
0x1240: V1739 = EXP 0x2 0xa0
0x1241: V1740 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1244: V1741 = AND 0xffffffffffffffffffffffffffffffffffffffff V1726
0x1245: V1742 = 0x4
0x1248: V1743 = ADD V1734 0x4
0x1249: M[V1743] = V1741
0x124a: V1744 = 0x24
0x124d: V1745 = ADD V1734 0x24
0x1251: M[V1745] = V1728
0x1253: V1746 = M[0x40]
0x1257: V1747 = AND V1724 0xffffffffffffffffffffffffffffffffffffffff
0x1259: V1748 = 0xa9059cbb
0x125f: V1749 = 0x44
0x1263: V1750 = ADD V1734 0x44
0x126b: V1751 = SUB V1734 V1746
0x126c: V1752 = ADD V1751 0x44
0x1272: V1753 = EXTCODESIZE V1747
0x1273: V1754 = ISZERO V1753
0x1274: V1755 = ISZERO V1754
0x1275: V1756 = 0x3c8
0x1278: THROWI V1755
---
Entry stack: []
Stack pops: 0
Stack additions: [V1747, 0xa9059cbb, V1750, 0x20, V1746, V1752, V1746, 0x0, V1747]
Exit stack: [V1747, 0xa9059cbb, V1750, 0x20, V1746, V1752, V1746, 0x0, V1747]

================================

Block 0x1279
[0x1279:0x1286]
---
Predecessors: [0x11fe]
Successors: [0x1287]
---
0x1279 INVALID
0x127a JUMPDEST
0x127b PUSH2 0x2c6
0x127e GAS
0x127f SUB
0x1280 CALL
0x1281 ISZERO
0x1282 ISZERO
0x1283 PUSH2 0x3d6
0x1286 JUMPI
---
0x1279: INVALID 
0x127a: JUMPDEST 
0x127b: V1757 = 0x2c6
0x127e: V1758 = GAS
0x127f: V1759 = SUB V1758 0x2c6
0x1280: V1760 = CALL V1759 S0 S1 S2 S3 S4 S5
0x1281: V1761 = ISZERO V1760
0x1282: V1762 = ISZERO V1761
0x1283: V1763 = 0x3d6
0x1286: THROWI V1762
---
Entry stack: [V1747, 0xa9059cbb, V1750, 0x20, V1746, V1752, V1746, 0x0, V1747]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1287
[0x1287:0x1296]
---
Predecessors: [0x1279]
Successors: [0x1297]
---
0x1287 INVALID
0x1288 JUMPDEST
0x1289 POP
0x128a POP
0x128b PUSH1 0x40
0x128d MLOAD
0x128e MLOAD
0x128f ISZERO
0x1290 ISZERO
0x1291 SWAP1
0x1292 POP
0x1293 PUSH2 0x3e6
0x1296 JUMPI
---
0x1287: INVALID 
0x1288: JUMPDEST 
0x128b: V1764 = 0x40
0x128d: V1765 = M[0x40]
0x128e: V1766 = M[V1765]
0x128f: V1767 = ISZERO V1766
0x1290: V1768 = ISZERO V1767
0x1293: V1769 = 0x3e6
0x1296: THROWI V1768
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1297
[0x1297:0x1298]
---
Predecessors: [0x1287]
Successors: [0x1299]
---
0x1297 INVALID
0x1298 JUMPDEST
---
0x1297: INVALID 
0x1298: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1299
[0x1299:0x12ab]
---
Predecessors: [0x1297]
Successors: [0x12ac]
---
0x1299 JUMPDEST
0x129a PUSH1 0x7
0x129c SLOAD
0x129d PUSH1 0x1
0x129f PUSH1 0xa0
0x12a1 PUSH1 0x2
0x12a3 EXP
0x12a4 SUB
0x12a5 AND
0x12a6 ISZERO
0x12a7 ISZERO
0x12a8 PUSH2 0x417
0x12ab JUMPI
---
0x1299: JUMPDEST 
0x129a: V1770 = 0x7
0x129c: V1771 = S[0x7]
0x129d: V1772 = 0x1
0x129f: V1773 = 0xa0
0x12a1: V1774 = 0x2
0x12a3: V1775 = EXP 0x2 0xa0
0x12a4: V1776 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12a5: V1777 = AND 0xffffffffffffffffffffffffffffffffffffffff V1771
0x12a6: V1778 = ISZERO V1777
0x12a7: V1779 = ISZERO V1778
0x12a8: V1780 = 0x417
0x12ab: THROWI V1779
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x12ac
[0x12ac:0x12b5]
---
Predecessors: [0x1299]
Successors: [0x12b6]
---
0x12ac PUSH1 0x9
0x12ae SLOAD
0x12af CALLVALUE
0x12b0 LT
0x12b1 ISZERO
0x12b2 PUSH2 0x409
0x12b5 JUMPI
---
0x12ac: V1781 = 0x9
0x12ae: V1782 = S[0x9]
0x12af: V1783 = CALLVALUE
0x12b0: V1784 = LT V1783 V1782
0x12b1: V1785 = ISZERO V1784
0x12b2: V1786 = 0x409
0x12b5: THROWI V1785
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x12b6
[0x12b6:0x134f]
---
Predecessors: [0x12ac]
Successors: [0x1350]
---
0x12b6 PUSH1 0x0
0x12b8 PUSH1 0x0
0x12ba REVERT
0x12bb JUMPDEST
0x12bc PUSH1 0x2
0x12be SLOAD
0x12bf PUSH1 0x1
0x12c1 PUSH1 0xa0
0x12c3 PUSH1 0x2
0x12c5 EXP
0x12c6 SUB
0x12c7 AND
0x12c8 SELFDESTRUCT
0x12c9 JUMPDEST
0x12ca PUSH1 0x7
0x12cc SLOAD
0x12cd PUSH1 0x3
0x12cf SLOAD
0x12d0 PUSH1 0x2
0x12d2 SLOAD
0x12d3 PUSH1 0x9
0x12d5 SLOAD
0x12d6 PUSH1 0x40
0x12d8 DUP1
0x12d9 MLOAD
0x12da PUSH1 0x0
0x12dc PUSH1 0x20
0x12de SWAP2
0x12df DUP3
0x12e0 ADD
0x12e1 DUP2
0x12e2 SWAP1
0x12e3 MSTORE
0x12e4 DUP3
0x12e5 MLOAD
0x12e6 PUSH32 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x1307 DUP2
0x1308 MSTORE
0x1309 PUSH1 0x1
0x130b PUSH1 0xa0
0x130d PUSH1 0x2
0x130f EXP
0x1310 SUB
0x1311 SWAP7
0x1312 DUP8
0x1313 AND
0x1314 PUSH1 0x4
0x1316 DUP3
0x1317 ADD
0x1318 MSTORE
0x1319 SWAP5
0x131a DUP7
0x131b AND
0x131c PUSH1 0x24
0x131e DUP7
0x131f ADD
0x1320 MSTORE
0x1321 PUSH1 0x44
0x1323 DUP6
0x1324 ADD
0x1325 SWAP4
0x1326 SWAP1
0x1327 SWAP4
0x1328 MSTORE
0x1329 SWAP1
0x132a MLOAD
0x132b SWAP4
0x132c SWAP1
0x132d SWAP5
0x132e AND
0x132f SWAP4
0x1330 PUSH4 0x23b872dd
0x1335 SWAP4
0x1336 PUSH1 0x64
0x1338 DUP1
0x1339 DUP6
0x133a ADD
0x133b SWAP5
0x133c SWAP3
0x133d SWAP4
0x133e SWAP2
0x133f SWAP3
0x1340 DUP4
0x1341 SWAP1
0x1342 SUB
0x1343 ADD
0x1344 SWAP1
0x1345 DUP3
0x1346 SWAP1
0x1347 DUP8
0x1348 DUP1
0x1349 EXTCODESIZE
0x134a ISZERO
0x134b ISZERO
0x134c PUSH2 0x49f
0x134f JUMPI
---
0x12b6: V1787 = 0x0
0x12b8: V1788 = 0x0
0x12ba: REVERT 0x0 0x0
0x12bb: JUMPDEST 
0x12bc: V1789 = 0x2
0x12be: V1790 = S[0x2]
0x12bf: V1791 = 0x1
0x12c1: V1792 = 0xa0
0x12c3: V1793 = 0x2
0x12c5: V1794 = EXP 0x2 0xa0
0x12c6: V1795 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12c7: V1796 = AND 0xffffffffffffffffffffffffffffffffffffffff V1790
0x12c8: SELFDESTRUCT V1796
0x12c9: JUMPDEST 
0x12ca: V1797 = 0x7
0x12cc: V1798 = S[0x7]
0x12cd: V1799 = 0x3
0x12cf: V1800 = S[0x3]
0x12d0: V1801 = 0x2
0x12d2: V1802 = S[0x2]
0x12d3: V1803 = 0x9
0x12d5: V1804 = S[0x9]
0x12d6: V1805 = 0x40
0x12d9: V1806 = M[0x40]
0x12da: V1807 = 0x0
0x12dc: V1808 = 0x20
0x12e0: V1809 = ADD 0x20 V1806
0x12e3: M[V1809] = 0x0
0x12e5: V1810 = M[0x40]
0x12e6: V1811 = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x1308: M[V1810] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x1309: V1812 = 0x1
0x130b: V1813 = 0xa0
0x130d: V1814 = 0x2
0x130f: V1815 = EXP 0x2 0xa0
0x1310: V1816 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1313: V1817 = AND 0xffffffffffffffffffffffffffffffffffffffff V1800
0x1314: V1818 = 0x4
0x1317: V1819 = ADD V1810 0x4
0x1318: M[V1819] = V1817
0x131b: V1820 = AND 0xffffffffffffffffffffffffffffffffffffffff V1802
0x131c: V1821 = 0x24
0x131f: V1822 = ADD V1810 0x24
0x1320: M[V1822] = V1820
0x1321: V1823 = 0x44
0x1324: V1824 = ADD V1810 0x44
0x1328: M[V1824] = V1804
0x132a: V1825 = M[0x40]
0x132e: V1826 = AND V1798 0xffffffffffffffffffffffffffffffffffffffff
0x1330: V1827 = 0x23b872dd
0x1336: V1828 = 0x64
0x133a: V1829 = ADD V1810 0x64
0x1342: V1830 = SUB V1810 V1825
0x1343: V1831 = ADD V1830 0x64
0x1349: V1832 = EXTCODESIZE V1826
0x134a: V1833 = ISZERO V1832
0x134b: V1834 = ISZERO V1833
0x134c: V1835 = 0x49f
0x134f: THROWI V1834
---
Entry stack: []
Stack pops: 0
Stack additions: [V1826, 0x0, V1825, V1831, V1825, 0x20, V1829, 0x23b872dd, V1826]
Exit stack: []

================================

Block 0x1350
[0x1350:0x135d]
---
Predecessors: [0x12b6]
Successors: [0x135e]
---
0x1350 INVALID
0x1351 JUMPDEST
0x1352 PUSH2 0x2c6
0x1355 GAS
0x1356 SUB
0x1357 CALL
0x1358 ISZERO
0x1359 ISZERO
0x135a PUSH2 0x4ad
0x135d JUMPI
---
0x1350: INVALID 
0x1351: JUMPDEST 
0x1352: V1836 = 0x2c6
0x1355: V1837 = GAS
0x1356: V1838 = SUB V1837 0x2c6
0x1357: V1839 = CALL V1838 S0 S1 S2 S3 S4 S5
0x1358: V1840 = ISZERO V1839
0x1359: V1841 = ISZERO V1840
0x135a: V1842 = 0x4ad
0x135d: THROWI V1841
---
Entry stack: [V1826, 0x23b872dd, V1829, 0x20, V1825, V1831, V1825, 0x0, V1826]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x135e
[0x135e:0x136d]
---
Predecessors: [0x1350]
Successors: [0x136e]
---
0x135e INVALID
0x135f JUMPDEST
0x1360 POP
0x1361 POP
0x1362 PUSH1 0x40
0x1364 MLOAD
0x1365 MLOAD
0x1366 ISZERO
0x1367 ISZERO
0x1368 SWAP1
0x1369 POP
0x136a PUSH2 0x4bd
0x136d JUMPI
---
0x135e: INVALID 
0x135f: JUMPDEST 
0x1362: V1843 = 0x40
0x1364: V1844 = M[0x40]
0x1365: V1845 = M[V1844]
0x1366: V1846 = ISZERO V1845
0x1367: V1847 = ISZERO V1846
0x136a: V1848 = 0x4bd
0x136d: THROWI V1847
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x136e
[0x136e:0x137d]
---
Predecessors: [0x135e]
Successors: [0x137e]
---
0x136e INVALID
0x136f JUMPDEST
0x1370 PUSH1 0x3
0x1372 SLOAD
0x1373 PUSH1 0x1
0x1375 PUSH1 0xa0
0x1377 PUSH1 0x2
0x1379 EXP
0x137a SUB
0x137b AND
0x137c SELFDESTRUCT
0x137d JUMPDEST
---
0x136e: INVALID 
0x136f: JUMPDEST 
0x1370: V1849 = 0x3
0x1372: V1850 = S[0x3]
0x1373: V1851 = 0x1
0x1375: V1852 = 0xa0
0x1377: V1853 = 0x2
0x1379: V1854 = EXP 0x2 0xa0
0x137a: V1855 = SUB 0x10000000000000000000000000000000000000000 0x1
0x137b: V1856 = AND 0xffffffffffffffffffffffffffffffffffffffff V1850
0x137c: SELFDESTRUCT V1856
0x137d: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x137e
[0x137e:0x13b5]
---
Predecessors: [0x136e]
Successors: [0x13b6]
---
0x137e JUMPDEST
0x137f POP
0x1380 JUMP
0x1381 JUMPDEST
0x1382 PUSH1 0x2
0x1384 SLOAD
0x1385 PUSH1 0x1
0x1387 PUSH1 0xa0
0x1389 PUSH1 0x2
0x138b EXP
0x138c SUB
0x138d AND
0x138e DUP2
0x138f JUMP
0x1390 JUMPDEST
0x1391 PUSH1 0x6
0x1393 SLOAD
0x1394 PUSH1 0x1
0x1396 PUSH1 0xa0
0x1398 PUSH1 0x2
0x139a EXP
0x139b SUB
0x139c AND
0x139d DUP2
0x139e JUMP
0x139f JUMPDEST
0x13a0 PUSH1 0x1
0x13a2 SLOAD
0x13a3 CALLER
0x13a4 PUSH1 0x1
0x13a6 PUSH1 0xa0
0x13a8 PUSH1 0x2
0x13aa EXP
0x13ab SUB
0x13ac SWAP1
0x13ad DUP2
0x13ae AND
0x13af SWAP2
0x13b0 AND
0x13b1 EQ
0x13b2 PUSH2 0x509
0x13b5 JUMPI
---
0x137e: JUMPDEST 
0x1380: JUMP S1
0x1381: JUMPDEST 
0x1382: V1857 = 0x2
0x1384: V1858 = S[0x2]
0x1385: V1859 = 0x1
0x1387: V1860 = 0xa0
0x1389: V1861 = 0x2
0x138b: V1862 = EXP 0x2 0xa0
0x138c: V1863 = SUB 0x10000000000000000000000000000000000000000 0x1
0x138d: V1864 = AND 0xffffffffffffffffffffffffffffffffffffffff V1858
0x138f: JUMP S0
0x1390: JUMPDEST 
0x1391: V1865 = 0x6
0x1393: V1866 = S[0x6]
0x1394: V1867 = 0x1
0x1396: V1868 = 0xa0
0x1398: V1869 = 0x2
0x139a: V1870 = EXP 0x2 0xa0
0x139b: V1871 = SUB 0x10000000000000000000000000000000000000000 0x1
0x139c: V1872 = AND 0xffffffffffffffffffffffffffffffffffffffff V1866
0x139e: JUMP S0
0x139f: JUMPDEST 
0x13a0: V1873 = 0x1
0x13a2: V1874 = S[0x1]
0x13a3: V1875 = CALLER
0x13a4: V1876 = 0x1
0x13a6: V1877 = 0xa0
0x13a8: V1878 = 0x2
0x13aa: V1879 = EXP 0x2 0xa0
0x13ab: V1880 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13ae: V1881 = AND 0xffffffffffffffffffffffffffffffffffffffff V1875
0x13b0: V1882 = AND V1874 0xffffffffffffffffffffffffffffffffffffffff
0x13b1: V1883 = EQ V1882 V1881
0x13b2: V1884 = 0x509
0x13b5: THROWI V1883
---
Entry stack: []
Stack pops: 10
Stack additions: []
Exit stack: []

================================

Block 0x13b6
[0x13b6:0x13cc]
---
Predecessors: [0x137e]
Successors: [0x13cd]
---
0x13b6 PUSH1 0x0
0x13b8 PUSH1 0x0
0x13ba REVERT
0x13bb JUMPDEST
0x13bc PUSH1 0x6
0x13be SLOAD
0x13bf PUSH1 0x1
0x13c1 PUSH1 0xa0
0x13c3 PUSH1 0x2
0x13c5 EXP
0x13c6 SUB
0x13c7 AND
0x13c8 ISZERO
0x13c9 PUSH2 0x5a5
0x13cc JUMPI
---
0x13b6: V1885 = 0x0
0x13b8: V1886 = 0x0
0x13ba: REVERT 0x0 0x0
0x13bb: JUMPDEST 
0x13bc: V1887 = 0x6
0x13be: V1888 = S[0x6]
0x13bf: V1889 = 0x1
0x13c1: V1890 = 0xa0
0x13c3: V1891 = 0x2
0x13c5: V1892 = EXP 0x2 0xa0
0x13c6: V1893 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13c7: V1894 = AND 0xffffffffffffffffffffffffffffffffffffffff V1888
0x13c8: V1895 = ISZERO V1894
0x13c9: V1896 = 0x5a5
0x13cc: THROWI V1895
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x13cd
[0x13cd:0x1443]
---
Predecessors: [0x13b6]
Successors: [0x1444]
---
0x13cd PUSH1 0x6
0x13cf SLOAD
0x13d0 PUSH1 0x8
0x13d2 SLOAD
0x13d3 PUSH1 0x40
0x13d5 DUP1
0x13d6 MLOAD
0x13d7 PUSH1 0x0
0x13d9 PUSH1 0x20
0x13db SWAP2
0x13dc DUP3
0x13dd ADD
0x13de DUP2
0x13df SWAP1
0x13e0 MSTORE
0x13e1 DUP3
0x13e2 MLOAD
0x13e3 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x1404 DUP2
0x1405 MSTORE
0x1406 PUSH1 0x1
0x1408 PUSH1 0xa0
0x140a PUSH1 0x2
0x140c EXP
0x140d SUB
0x140e DUP8
0x140f DUP2
0x1410 AND
0x1411 PUSH1 0x4
0x1413 DUP4
0x1414 ADD
0x1415 MSTORE
0x1416 PUSH1 0x24
0x1418 DUP3
0x1419 ADD
0x141a SWAP6
0x141b SWAP1
0x141c SWAP6
0x141d MSTORE
0x141e SWAP3
0x141f MLOAD
0x1420 SWAP4
0x1421 SWAP1
0x1422 SWAP5
0x1423 AND
0x1424 SWAP4
0x1425 PUSH4 0xa9059cbb
0x142a SWAP4
0x142b PUSH1 0x44
0x142d DUP1
0x142e DUP6
0x142f ADD
0x1430 SWAP5
0x1431 SWAP2
0x1432 SWAP3
0x1433 SWAP2
0x1434 DUP4
0x1435 SWAP1
0x1436 SUB
0x1437 ADD
0x1438 SWAP1
0x1439 DUP3
0x143a SWAP1
0x143b DUP8
0x143c DUP1
0x143d EXTCODESIZE
0x143e ISZERO
0x143f ISZERO
0x1440 PUSH2 0x593
0x1443 JUMPI
---
0x13cd: V1897 = 0x6
0x13cf: V1898 = S[0x6]
0x13d0: V1899 = 0x8
0x13d2: V1900 = S[0x8]
0x13d3: V1901 = 0x40
0x13d6: V1902 = M[0x40]
0x13d7: V1903 = 0x0
0x13d9: V1904 = 0x20
0x13dd: V1905 = ADD 0x20 V1902
0x13e0: M[V1905] = 0x0
0x13e2: V1906 = M[0x40]
0x13e3: V1907 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x1405: M[V1906] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x1406: V1908 = 0x1
0x1408: V1909 = 0xa0
0x140a: V1910 = 0x2
0x140c: V1911 = EXP 0x2 0xa0
0x140d: V1912 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1410: V1913 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x1411: V1914 = 0x4
0x1414: V1915 = ADD V1906 0x4
0x1415: M[V1915] = V1913
0x1416: V1916 = 0x24
0x1419: V1917 = ADD V1906 0x24
0x141d: M[V1917] = V1900
0x141f: V1918 = M[0x40]
0x1423: V1919 = AND V1898 0xffffffffffffffffffffffffffffffffffffffff
0x1425: V1920 = 0xa9059cbb
0x142b: V1921 = 0x44
0x142f: V1922 = ADD V1906 0x44
0x1436: V1923 = SUB V1906 V1918
0x1437: V1924 = ADD V1923 0x44
0x143d: V1925 = EXTCODESIZE V1919
0x143e: V1926 = ISZERO V1925
0x143f: V1927 = ISZERO V1926
0x1440: V1928 = 0x593
0x1443: THROWI V1927
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, V1919, 0xa9059cbb, V1922, 0x20, V1918, V1924, V1918, 0x0, V1919]
Exit stack: [S0, V1919, 0xa9059cbb, V1922, 0x20, V1918, V1924, V1918, 0x0, V1919]

================================

Block 0x1444
[0x1444:0x1451]
---
Predecessors: [0x13cd]
Successors: [0x1452]
---
0x1444 INVALID
0x1445 JUMPDEST
0x1446 PUSH2 0x2c6
0x1449 GAS
0x144a SUB
0x144b CALL
0x144c ISZERO
0x144d ISZERO
0x144e PUSH2 0x5a1
0x1451 JUMPI
---
0x1444: INVALID 
0x1445: JUMPDEST 
0x1446: V1929 = 0x2c6
0x1449: V1930 = GAS
0x144a: V1931 = SUB V1930 0x2c6
0x144b: V1932 = CALL V1931 S0 S1 S2 S3 S4 S5
0x144c: V1933 = ISZERO V1932
0x144d: V1934 = ISZERO V1933
0x144e: V1935 = 0x5a1
0x1451: THROWI V1934
---
Entry stack: [S9, V1919, 0xa9059cbb, V1922, 0x20, V1918, V1924, V1918, 0x0, V1919]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1452
[0x1452:0x1456]
---
Predecessors: [0x1444]
Successors: [0x1457]
---
0x1452 INVALID
0x1453 JUMPDEST
0x1454 POP
0x1455 POP
0x1456 POP
---
0x1452: INVALID 
0x1453: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1457
[0x1457:0x14be]
---
Predecessors: [0x1452]
Successors: [0x14bf]
---
0x1457 JUMPDEST
0x1458 DUP1
0x1459 PUSH1 0x1
0x145b PUSH1 0xa0
0x145d PUSH1 0x2
0x145f EXP
0x1460 SUB
0x1461 AND
0x1462 SELFDESTRUCT
0x1463 JUMPDEST
0x1464 POP
0x1465 JUMP
0x1466 JUMPDEST
0x1467 PUSH1 0x8
0x1469 SLOAD
0x146a DUP2
0x146b JUMP
0x146c JUMPDEST
0x146d PUSH1 0x5
0x146f SLOAD
0x1470 PUSH1 0x1
0x1472 PUSH1 0xa0
0x1474 PUSH1 0x2
0x1476 EXP
0x1477 SUB
0x1478 AND
0x1479 DUP2
0x147a JUMP
0x147b JUMPDEST
0x147c PUSH1 0x7
0x147e SLOAD
0x147f PUSH1 0x1
0x1481 PUSH1 0xa0
0x1483 PUSH1 0x2
0x1485 EXP
0x1486 SUB
0x1487 AND
0x1488 DUP2
0x1489 JUMP
0x148a JUMPDEST
0x148b PUSH1 0x4
0x148d SLOAD
0x148e PUSH1 0x1
0x1490 PUSH1 0xa0
0x1492 PUSH1 0x2
0x1494 EXP
0x1495 SUB
0x1496 AND
0x1497 DUP2
0x1498 JUMP
0x1499 JUMPDEST
0x149a PUSH1 0x3
0x149c SLOAD
0x149d PUSH1 0x1
0x149f PUSH1 0xa0
0x14a1 PUSH1 0x2
0x14a3 EXP
0x14a4 SUB
0x14a5 AND
0x14a6 DUP2
0x14a7 JUMP
0x14a8 JUMPDEST
0x14a9 PUSH1 0x1
0x14ab SLOAD
0x14ac CALLER
0x14ad PUSH1 0x1
0x14af PUSH1 0xa0
0x14b1 PUSH1 0x2
0x14b3 EXP
0x14b4 SUB
0x14b5 SWAP1
0x14b6 DUP2
0x14b7 AND
0x14b8 SWAP2
0x14b9 AND
0x14ba EQ
0x14bb PUSH2 0x612
0x14be JUMPI
---
0x1457: JUMPDEST 
0x1459: V1936 = 0x1
0x145b: V1937 = 0xa0
0x145d: V1938 = 0x2
0x145f: V1939 = EXP 0x2 0xa0
0x1460: V1940 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1461: V1941 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x1462: SELFDESTRUCT V1941
0x1463: JUMPDEST 
0x1465: JUMP S1
0x1466: JUMPDEST 
0x1467: V1942 = 0x8
0x1469: V1943 = S[0x8]
0x146b: JUMP S0
0x146c: JUMPDEST 
0x146d: V1944 = 0x5
0x146f: V1945 = S[0x5]
0x1470: V1946 = 0x1
0x1472: V1947 = 0xa0
0x1474: V1948 = 0x2
0x1476: V1949 = EXP 0x2 0xa0
0x1477: V1950 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1478: V1951 = AND 0xffffffffffffffffffffffffffffffffffffffff V1945
0x147a: JUMP S0
0x147b: JUMPDEST 
0x147c: V1952 = 0x7
0x147e: V1953 = S[0x7]
0x147f: V1954 = 0x1
0x1481: V1955 = 0xa0
0x1483: V1956 = 0x2
0x1485: V1957 = EXP 0x2 0xa0
0x1486: V1958 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1487: V1959 = AND 0xffffffffffffffffffffffffffffffffffffffff V1953
0x1489: JUMP S0
0x148a: JUMPDEST 
0x148b: V1960 = 0x4
0x148d: V1961 = S[0x4]
0x148e: V1962 = 0x1
0x1490: V1963 = 0xa0
0x1492: V1964 = 0x2
0x1494: V1965 = EXP 0x2 0xa0
0x1495: V1966 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1496: V1967 = AND 0xffffffffffffffffffffffffffffffffffffffff V1961
0x1498: JUMP S0
0x1499: JUMPDEST 
0x149a: V1968 = 0x3
0x149c: V1969 = S[0x3]
0x149d: V1970 = 0x1
0x149f: V1971 = 0xa0
0x14a1: V1972 = 0x2
0x14a3: V1973 = EXP 0x2 0xa0
0x14a4: V1974 = SUB 0x10000000000000000000000000000000000000000 0x1
0x14a5: V1975 = AND 0xffffffffffffffffffffffffffffffffffffffff V1969
0x14a7: JUMP S0
0x14a8: JUMPDEST 
0x14a9: V1976 = 0x1
0x14ab: V1977 = S[0x1]
0x14ac: V1978 = CALLER
0x14ad: V1979 = 0x1
0x14af: V1980 = 0xa0
0x14b1: V1981 = 0x2
0x14b3: V1982 = EXP 0x2 0xa0
0x14b4: V1983 = SUB 0x10000000000000000000000000000000000000000 0x1
0x14b7: V1984 = AND 0xffffffffffffffffffffffffffffffffffffffff V1978
0x14b9: V1985 = AND V1977 0xffffffffffffffffffffffffffffffffffffffff
0x14ba: V1986 = EQ V1985 V1984
0x14bb: V1987 = 0x612
0x14be: THROWI V1986
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x14bf
[0x14bf:0x14d9]
---
Predecessors: [0x1457]
Successors: [0x14da]
---
0x14bf PUSH1 0x0
0x14c1 PUSH1 0x0
0x14c3 REVERT
0x14c4 JUMPDEST
0x14c5 PUSH1 0x3
0x14c7 SLOAD
0x14c8 PUSH1 0x1
0x14ca PUSH1 0xa0
0x14cc PUSH1 0x2
0x14ce EXP
0x14cf SUB
0x14d0 DUP4
0x14d1 DUP2
0x14d2 AND
0x14d3 SWAP2
0x14d4 AND
0x14d5 EQ
0x14d6 PUSH2 0x62d
0x14d9 JUMPI
---
0x14bf: V1988 = 0x0
0x14c1: V1989 = 0x0
0x14c3: REVERT 0x0 0x0
0x14c4: JUMPDEST 
0x14c5: V1990 = 0x3
0x14c7: V1991 = S[0x3]
0x14c8: V1992 = 0x1
0x14ca: V1993 = 0xa0
0x14cc: V1994 = 0x2
0x14ce: V1995 = EXP 0x2 0xa0
0x14cf: V1996 = SUB 0x10000000000000000000000000000000000000000 0x1
0x14d2: V1997 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x14d4: V1998 = AND V1991 0xffffffffffffffffffffffffffffffffffffffff
0x14d5: V1999 = EQ V1998 V1997
0x14d6: V2000 = 0x62d
0x14d9: THROWI V1999
---
Entry stack: []
Stack pops: 0
Stack additions: [S0, S1]
Exit stack: []

================================

Block 0x14da
[0x14da:0x1507]
---
Predecessors: [0x14bf]
Successors: [0x1508]
---
0x14da PUSH1 0x0
0x14dc PUSH1 0x0
0x14de REVERT
0x14df JUMPDEST
0x14e0 PUSH1 0x3
0x14e2 DUP1
0x14e3 SLOAD
0x14e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14f9 NOT
0x14fa AND
0x14fb PUSH1 0x1
0x14fd PUSH1 0xa0
0x14ff PUSH1 0x2
0x1501 EXP
0x1502 SUB
0x1503 DUP4
0x1504 AND
0x1505 OR
0x1506 SWAP1
0x1507 SSTORE
---
0x14da: V2001 = 0x0
0x14dc: V2002 = 0x0
0x14de: REVERT 0x0 0x0
0x14df: JUMPDEST 
0x14e0: V2003 = 0x3
0x14e3: V2004 = S[0x3]
0x14e4: V2005 = 0xffffffffffffffffffffffffffffffffffffffff
0x14f9: V2006 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x14fa: V2007 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V2004
0x14fb: V2008 = 0x1
0x14fd: V2009 = 0xa0
0x14ff: V2010 = 0x2
0x1501: V2011 = EXP 0x2 0xa0
0x1502: V2012 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1504: V2013 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1505: V2014 = OR V2013 V2007
0x1507: S[0x3] = V2014
---
Entry stack: [S1, S0]
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x1508
[0x1508:0x1528]
---
Predecessors: [0x14da]
Successors: [0x1529]
---
0x1508 JUMPDEST
0x1509 POP
0x150a POP
0x150b JUMP
0x150c JUMPDEST
0x150d PUSH1 0x9
0x150f SLOAD
0x1510 DUP2
0x1511 JUMP
0x1512 JUMPDEST
0x1513 PUSH1 0x1
0x1515 SLOAD
0x1516 CALLER
0x1517 PUSH1 0x1
0x1519 PUSH1 0xa0
0x151b PUSH1 0x2
0x151d EXP
0x151e SUB
0x151f SWAP1
0x1520 DUP2
0x1521 AND
0x1522 SWAP2
0x1523 AND
0x1524 EQ
0x1525 PUSH2 0x67c
0x1528 JUMPI
---
0x1508: JUMPDEST 
0x150b: JUMP S2
0x150c: JUMPDEST 
0x150d: V2015 = 0x9
0x150f: V2016 = S[0x9]
0x1511: JUMP S0
0x1512: JUMPDEST 
0x1513: V2017 = 0x1
0x1515: V2018 = S[0x1]
0x1516: V2019 = CALLER
0x1517: V2020 = 0x1
0x1519: V2021 = 0xa0
0x151b: V2022 = 0x2
0x151d: V2023 = EXP 0x2 0xa0
0x151e: V2024 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1521: V2025 = AND 0xffffffffffffffffffffffffffffffffffffffff V2019
0x1523: V2026 = AND V2018 0xffffffffffffffffffffffffffffffffffffffff
0x1524: V2027 = EQ V2026 V2025
0x1525: V2028 = 0x67c
0x1528: THROWI V2027
---
Entry stack: [S0]
Stack pops: 10
Stack additions: []
Exit stack: []

================================

Block 0x1529
[0x1529:0x1544]
---
Predecessors: [0x1508]
Successors: [0x1545]
---
0x1529 PUSH1 0x0
0x152b PUSH1 0x0
0x152d REVERT
0x152e JUMPDEST
0x152f PUSH1 0x3
0x1531 SLOAD
0x1532 PUSH1 0x1
0x1534 PUSH1 0xa0
0x1536 PUSH1 0x2
0x1538 EXP
0x1539 SUB
0x153a DUP3
0x153b DUP2
0x153c AND
0x153d SWAP2
0x153e AND
0x153f EQ
0x1540 DUP1
0x1541 PUSH2 0x6b7
0x1544 JUMPI
---
0x1529: V2029 = 0x0
0x152b: V2030 = 0x0
0x152d: REVERT 0x0 0x0
0x152e: JUMPDEST 
0x152f: V2031 = 0x3
0x1531: V2032 = S[0x3]
0x1532: V2033 = 0x1
0x1534: V2034 = 0xa0
0x1536: V2035 = 0x2
0x1538: V2036 = EXP 0x2 0xa0
0x1539: V2037 = SUB 0x10000000000000000000000000000000000000000 0x1
0x153c: V2038 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x153e: V2039 = AND V2032 0xffffffffffffffffffffffffffffffffffffffff
0x153f: V2040 = EQ V2039 V2038
0x1541: V2041 = 0x6b7
0x1544: THROWI V2040
---
Entry stack: []
Stack pops: 0
Stack additions: [V2040, S0]
Exit stack: []

================================

Block 0x1545
[0x1545:0x1556]
---
Predecessors: [0x1529]
Successors: [0x1557]
---
0x1545 POP
0x1546 PUSH1 0x0
0x1548 SLOAD
0x1549 PUSH3 0x15180
0x154d ADD
0x154e TIMESTAMP
0x154f LT
0x1550 ISZERO
0x1551 DUP1
0x1552 ISZERO
0x1553 PUSH2 0x6b7
0x1556 JUMPI
---
0x1546: V2042 = 0x0
0x1548: V2043 = S[0x0]
0x1549: V2044 = 0x15180
0x154d: V2045 = ADD 0x15180 V2043
0x154e: V2046 = TIMESTAMP
0x154f: V2047 = LT V2046 V2045
0x1550: V2048 = ISZERO V2047
0x1552: V2049 = ISZERO V2048
0x1553: V2050 = 0x6b7
0x1556: THROWI V2049
---
Entry stack: [S1, V2040]
Stack pops: 1
Stack additions: [V2048]
Exit stack: [S1, V2048]

================================

Block 0x1557
[0x1557:0x1568]
---
Predecessors: [0x1545]
Successors: [0x1569]
---
0x1557 POP
0x1558 PUSH1 0x2
0x155a SLOAD
0x155b PUSH1 0x1
0x155d PUSH1 0xa0
0x155f PUSH1 0x2
0x1561 EXP
0x1562 SUB
0x1563 DUP3
0x1564 DUP2
0x1565 AND
0x1566 SWAP2
0x1567 AND
0x1568 EQ
---
0x1558: V2051 = 0x2
0x155a: V2052 = S[0x2]
0x155b: V2053 = 0x1
0x155d: V2054 = 0xa0
0x155f: V2055 = 0x2
0x1561: V2056 = EXP 0x2 0xa0
0x1562: V2057 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1565: V2058 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x1567: V2059 = AND V2052 0xffffffffffffffffffffffffffffffffffffffff
0x1568: V2060 = EQ V2059 V2058
---
Entry stack: [S1, V2048]
Stack pops: 2
Stack additions: [S1, V2060]
Exit stack: [S1, V2060]

================================

Block 0x1569
[0x1569:0x1569]
---
Predecessors: [0x1557]
Successors: [0x156a]
---
0x1569 JUMPDEST
---
0x1569: JUMPDEST 
---
Entry stack: [S1, V2060]
Stack pops: 0
Stack additions: []
Exit stack: [S1, V2060]

================================

Block 0x156a
[0x156a:0x1570]
---
Predecessors: [0x1569]
Successors: [0x1571]
---
0x156a JUMPDEST
0x156b ISZERO
0x156c ISZERO
0x156d PUSH2 0x6c4
0x1570 JUMPI
---
0x156a: JUMPDEST 
0x156b: V2061 = ISZERO V2060
0x156c: V2062 = ISZERO V2061
0x156d: V2063 = 0x6c4
0x1570: THROWI V2062
---
Entry stack: [S1, V2060]
Stack pops: 1
Stack additions: []
Exit stack: [S1]

================================

Block 0x1571
[0x1571:0x1587]
---
Predecessors: [0x156a]
Successors: [0x1588]
---
0x1571 PUSH1 0x0
0x1573 PUSH1 0x0
0x1575 REVERT
0x1576 JUMPDEST
0x1577 PUSH1 0x6
0x1579 SLOAD
0x157a PUSH1 0x1
0x157c PUSH1 0xa0
0x157e PUSH1 0x2
0x1580 EXP
0x1581 SUB
0x1582 AND
0x1583 ISZERO
0x1584 PUSH2 0x409
0x1587 JUMPI
---
0x1571: V2064 = 0x0
0x1573: V2065 = 0x0
0x1575: REVERT 0x0 0x0
0x1576: JUMPDEST 
0x1577: V2066 = 0x6
0x1579: V2067 = S[0x6]
0x157a: V2068 = 0x1
0x157c: V2069 = 0xa0
0x157e: V2070 = 0x2
0x1580: V2071 = EXP 0x2 0xa0
0x1581: V2072 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1582: V2073 = AND 0xffffffffffffffffffffffffffffffffffffffff V2067
0x1583: V2074 = ISZERO V2073
0x1584: V2075 = 0x409
0x1587: THROWI V2074
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1588
[0x1588:0x1602]
---
Predecessors: [0x1571]
Successors: [0x1603]
---
0x1588 PUSH1 0x6
0x158a SLOAD
0x158b PUSH1 0x2
0x158d SLOAD
0x158e PUSH1 0x8
0x1590 SLOAD
0x1591 PUSH1 0x40
0x1593 DUP1
0x1594 MLOAD
0x1595 PUSH1 0x0
0x1597 PUSH1 0x20
0x1599 SWAP2
0x159a DUP3
0x159b ADD
0x159c DUP2
0x159d SWAP1
0x159e MSTORE
0x159f DUP3
0x15a0 MLOAD
0x15a1 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x15c2 DUP2
0x15c3 MSTORE
0x15c4 PUSH1 0x1
0x15c6 PUSH1 0xa0
0x15c8 PUSH1 0x2
0x15ca EXP
0x15cb SUB
0x15cc SWAP6
0x15cd DUP7
0x15ce AND
0x15cf PUSH1 0x4
0x15d1 DUP3
0x15d2 ADD
0x15d3 MSTORE
0x15d4 PUSH1 0x24
0x15d6 DUP2
0x15d7 ADD
0x15d8 SWAP5
0x15d9 SWAP1
0x15da SWAP5
0x15db MSTORE
0x15dc SWAP2
0x15dd MLOAD
0x15de SWAP4
0x15df SWAP1
0x15e0 SWAP5
0x15e1 AND
0x15e2 SWAP4
0x15e3 PUSH4 0xa9059cbb
0x15e8 SWAP4
0x15e9 PUSH1 0x44
0x15eb DUP1
0x15ec DUP6
0x15ed ADD
0x15ee SWAP5
0x15ef SWAP3
0x15f0 SWAP4
0x15f1 SWAP2
0x15f2 SWAP3
0x15f3 DUP4
0x15f4 SWAP1
0x15f5 SUB
0x15f6 ADD
0x15f7 SWAP1
0x15f8 DUP3
0x15f9 SWAP1
0x15fa DUP8
0x15fb DUP1
0x15fc EXTCODESIZE
0x15fd ISZERO
0x15fe ISZERO
0x15ff PUSH2 0x752
0x1602 JUMPI
---
0x1588: V2076 = 0x6
0x158a: V2077 = S[0x6]
0x158b: V2078 = 0x2
0x158d: V2079 = S[0x2]
0x158e: V2080 = 0x8
0x1590: V2081 = S[0x8]
0x1591: V2082 = 0x40
0x1594: V2083 = M[0x40]
0x1595: V2084 = 0x0
0x1597: V2085 = 0x20
0x159b: V2086 = ADD 0x20 V2083
0x159e: M[V2086] = 0x0
0x15a0: V2087 = M[0x40]
0x15a1: V2088 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x15c3: M[V2087] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x15c4: V2089 = 0x1
0x15c6: V2090 = 0xa0
0x15c8: V2091 = 0x2
0x15ca: V2092 = EXP 0x2 0xa0
0x15cb: V2093 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15ce: V2094 = AND 0xffffffffffffffffffffffffffffffffffffffff V2079
0x15cf: V2095 = 0x4
0x15d2: V2096 = ADD V2087 0x4
0x15d3: M[V2096] = V2094
0x15d4: V2097 = 0x24
0x15d7: V2098 = ADD V2087 0x24
0x15db: M[V2098] = V2081
0x15dd: V2099 = M[0x40]
0x15e1: V2100 = AND V2077 0xffffffffffffffffffffffffffffffffffffffff
0x15e3: V2101 = 0xa9059cbb
0x15e9: V2102 = 0x44
0x15ed: V2103 = ADD V2087 0x44
0x15f5: V2104 = SUB V2087 V2099
0x15f6: V2105 = ADD V2104 0x44
0x15fc: V2106 = EXTCODESIZE V2100
0x15fd: V2107 = ISZERO V2106
0x15fe: V2108 = ISZERO V2107
0x15ff: V2109 = 0x752
0x1602: THROWI V2108
---
Entry stack: []
Stack pops: 0
Stack additions: [V2100, 0xa9059cbb, V2103, 0x20, V2099, V2105, V2099, 0x0, V2100]
Exit stack: [V2100, 0xa9059cbb, V2103, 0x20, V2099, V2105, V2099, 0x0, V2100]

================================

Block 0x1603
[0x1603:0x1610]
---
Predecessors: [0x1588]
Successors: [0x1611]
---
0x1603 INVALID
0x1604 JUMPDEST
0x1605 PUSH2 0x2c6
0x1608 GAS
0x1609 SUB
0x160a CALL
0x160b ISZERO
0x160c ISZERO
0x160d PUSH2 0x760
0x1610 JUMPI
---
0x1603: INVALID 
0x1604: JUMPDEST 
0x1605: V2110 = 0x2c6
0x1608: V2111 = GAS
0x1609: V2112 = SUB V2111 0x2c6
0x160a: V2113 = CALL V2112 S0 S1 S2 S3 S4 S5
0x160b: V2114 = ISZERO V2113
0x160c: V2115 = ISZERO V2114
0x160d: V2116 = 0x760
0x1610: THROWI V2115
---
Entry stack: [V2100, 0xa9059cbb, V2103, 0x20, V2099, V2105, V2099, 0x0, V2100]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1611
[0x1611:0x1620]
---
Predecessors: [0x1603]
Successors: [0x1621]
---
0x1611 INVALID
0x1612 JUMPDEST
0x1613 POP
0x1614 POP
0x1615 PUSH1 0x40
0x1617 MLOAD
0x1618 MLOAD
0x1619 ISZERO
0x161a ISZERO
0x161b SWAP1
0x161c POP
0x161d PUSH2 0x409
0x1620 JUMPI
---
0x1611: INVALID 
0x1612: JUMPDEST 
0x1615: V2117 = 0x40
0x1617: V2118 = M[0x40]
0x1618: V2119 = M[V2118]
0x1619: V2120 = ISZERO V2119
0x161a: V2121 = ISZERO V2120
0x161d: V2122 = 0x409
0x1620: THROWI V2121
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1621
[0x1621:0x1622]
---
Predecessors: [0x1611]
Successors: [0x1623]
---
0x1621 INVALID
0x1622 JUMPDEST
---
0x1621: INVALID 
0x1622: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1623
[0x1623:0x16a4]
---
Predecessors: [0x1621]
Successors: []
---
0x1623 JUMPDEST
0x1624 PUSH1 0x2
0x1626 SLOAD
0x1627 PUSH1 0x1
0x1629 PUSH1 0xa0
0x162b PUSH1 0x2
0x162d EXP
0x162e SUB
0x162f AND
0x1630 SELFDESTRUCT
0x1631 JUMPDEST
0x1632 POP
0x1633 JUMP
0x1634 JUMPDEST
0x1635 PUSH1 0x1
0x1637 SLOAD
0x1638 PUSH1 0x1
0x163a PUSH1 0xa0
0x163c PUSH1 0x2
0x163e EXP
0x163f SUB
0x1640 AND
0x1641 DUP2
0x1642 JUMP
0x1643 JUMPDEST
0x1644 PUSH1 0x0
0x1646 SLOAD
0x1647 DUP2
0x1648 JUMP
0x1649 STOP
0x164a LOG1
0x164b PUSH6 0x627a7a723058
0x1652 SHA3
0x1653 DUP15
0x1654 MISSING 0xc5
0x1655 DUP16
0x1656 CALLDATALOAD
0x1657 PUSH9 0xdff34fb15f5549ce42
0x1661 MISSING 0xd0
0x1662 MSIZE
0x1663 MISSING 0xd
0x1664 MISSING 0xd5
0x1665 MISSING 0x4b
0x1666 MISSING 0x5c
0x1667 GT
0x1668 SWAP10
0x1669 BYTE
0x166a MISSING 0xc2
0x166b MISSING 0xe3
0x166c MISSING 0xfb
0x166d MISSING 0xac
0x166e MISSING 0xd6
0x166f SWAP15
0x1670 MISSING 0xe7
0x1671 SWAP14
0x1672 PUSH18 0x29a165627a7a72305820e28f8704d867a8
0x1685 ORIGIN
0x1686 MISSING 0xd8
0x1687 MISSING 0xb0
0x1688 MISSING 0x24
0x1689 MISSING 0xbd
0x168a MISSING 0x4b
0x168b DUP2
0x168c MISSING 0xd3
0x168d MISSING 0xb5
0x168e MISSING 0xb5
0x168f MISSING 0xb4
0x1690 MISSING 0xab
0x1691 MISSING 0x4f
0x1692 CODESIZE
0x1693 SWAP5
0x1694 DUP9
0x1695 DUP11
0x1696 MISSING 0xc9
0x1697 MISSING 0xed
0x1698 SLT
0x1699 ADDMOD
0x169a PUSH10 0x51a650029
---
0x1623: JUMPDEST 
0x1624: V2123 = 0x2
0x1626: V2124 = S[0x2]
0x1627: V2125 = 0x1
0x1629: V2126 = 0xa0
0x162b: V2127 = 0x2
0x162d: V2128 = EXP 0x2 0xa0
0x162e: V2129 = SUB 0x10000000000000000000000000000000000000000 0x1
0x162f: V2130 = AND 0xffffffffffffffffffffffffffffffffffffffff V2124
0x1630: SELFDESTRUCT V2130
0x1631: JUMPDEST 
0x1633: JUMP S1
0x1634: JUMPDEST 
0x1635: V2131 = 0x1
0x1637: V2132 = S[0x1]
0x1638: V2133 = 0x1
0x163a: V2134 = 0xa0
0x163c: V2135 = 0x2
0x163e: V2136 = EXP 0x2 0xa0
0x163f: V2137 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1640: V2138 = AND 0xffffffffffffffffffffffffffffffffffffffff V2132
0x1642: JUMP S0
0x1643: JUMPDEST 
0x1644: V2139 = 0x0
0x1646: V2140 = S[0x0]
0x1648: JUMP S0
0x1649: STOP 
0x164a: LOG S0 S1 S2
0x164b: V2141 = 0x627a7a723058
0x1652: V2142 = SHA3 0x627a7a723058 S3
0x1654: MISSING 0xc5
0x1656: V2143 = CALLDATALOAD S15
0x1657: V2144 = 0xdff34fb15f5549ce42
0x1661: MISSING 0xd0
0x1662: V2145 = MSIZE
0x1663: MISSING 0xd
0x1664: MISSING 0xd5
0x1665: MISSING 0x4b
0x1666: MISSING 0x5c
0x1667: V2146 = GT S0 S1
0x1669: V2147 = BYTE S11 S2
0x166a: MISSING 0xc2
0x166b: MISSING 0xe3
0x166c: MISSING 0xfb
0x166d: MISSING 0xac
0x166e: MISSING 0xd6
0x1670: MISSING 0xe7
0x1672: V2148 = 0x29a165627a7a72305820e28f8704d867a8
0x1685: V2149 = ORIGIN
0x1686: MISSING 0xd8
0x1687: MISSING 0xb0
0x1688: MISSING 0x24
0x1689: MISSING 0xbd
0x168a: MISSING 0x4b
0x168c: MISSING 0xd3
0x168d: MISSING 0xb5
0x168e: MISSING 0xb5
0x168f: MISSING 0xb4
0x1690: MISSING 0xab
0x1691: MISSING 0x4f
0x1692: V2150 = CODESIZE
0x1696: MISSING 0xc9
0x1697: MISSING 0xed
0x1698: V2151 = SLT S0 S1
0x1699: V2152 = ADDMOD V2151 S2 S3
0x169a: V2153 = 0x51a650029
---
Entry stack: []
Stack pops: 0
Stack additions: [V2138, S0, V2140, S0, S17, V2142, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, 0xdff34fb15f5549ce42, V2143, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, V2145, V2147, S3, S4, S5, S6, S7, S8, S9, S10, V2146, S15, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S0, V2149, 0x29a165627a7a72305820e28f8704d867a8, S14, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S0, S1, S0, S1, S8, S7, S4, S0, S1, S2, S3, V2150, S5, S6, S7, S8, 0x51a650029, V2152]
Exit stack: []

================================

Function 0:
Public function signature: 0x97c1e25
Entry block: 0xa0
Exit block: 0x287
Body: 0xa0, 0xa7, 0xa8, 0x255, 0x26d, 0x280, 0x287, 0x28c

Function 1:
Public function signature: 0xc36add8
Entry block: 0xb2
Exit block: 0xb0
Body: 0xb0, 0xb2, 0x29c, 0x2b3, 0x2b8, 0x2c8, 0x2c9

Function 2:
Public function signature: 0x1b15982a
Entry block: 0xde
Exit block: 0xb0
Body: 0xb0, 0xde, 0x2d1, 0x2f4, 0x2f9, 0x36b, 0x36c, 0x379, 0x37a, 0x3e4, 0x3e5, 0x3f2, 0x3f3, 0x442, 0x443, 0x450, 0x451, 0x4a0, 0x4a1, 0x4ae, 0x4af, 0x4e8

Function 3:
Public function signature: 0x26b85ee1
Entry block: 0xf4
Exit block: 0x104
Body: 0xf4, 0xfb, 0xfc, 0x104, 0x4ec

Function 4:
Public function signature: 0x5d37e2cc
Entry block: 0x120
Exit block: 0x104
Body: 0x104, 0x120, 0x127, 0x128, 0x4fb

Function 5:
Public function signature: 0x6b3fc293
Entry block: 0x14c
Exit block: 0xb0
Body: 0xb0, 0x14c

Function 6:
Public function signature: 0xb2a20cf0
Entry block: 0x17b
Exit block: 0xb0
Body: 0xb0, 0x17b, 0x182, 0x183, 0x836, 0x84e, 0x861, 0x868, 0x86d, 0x890, 0x895, 0x905, 0x906, 0x913, 0x914, 0x918

Function 7:
Public function signature: 0xba45b0b8
Entry block: 0x199
Exit block: 0xb0
Body: 0xb0, 0x199, 0x1a0, 0x1a1, 0x2c8, 0x2c9, 0x91b, 0x93e, 0x943, 0x9ac, 0x9ad, 0x9ba, 0x9bb, 0xa0b, 0xa0c, 0xa19, 0xa1a, 0xab9, 0xaba, 0xac7

Function 8:
Public function signature: 0xbd00b0c2
Entry block: 0x1bd
Exit block: 0xb0
Body: 0xb0, 0x1bd, 0x1c4, 0x1c5, 0xad1, 0xae8, 0xaed, 0xb16

Function 9:
Public function signature: 0xc77911aa
Entry block: 0x1db
Exit block: 0x1f7
Body: 0x1db, 0x1e2, 0x1e3, 0x1f7, 0xb19

Function 10:
Public function signature: 0xc8db233e
Entry block: 0x20b
Exit block: 0xb0
Body: 0xb0, 0x20b, 0x212, 0x213, 0x3e5, 0x3f2, 0x3f3, 0x442, 0x443, 0x450, 0x451, 0x4a0, 0x4a1, 0x4ae, 0x4af, 0x4e8, 0xb2e, 0xb51, 0xb56, 0xbc8, 0xbc9, 0xbd6, 0xbd7, 0xc40

Function 11:
Public function signature: 0xdc33feeb
Entry block: 0x229
Exit block: 0x104
Body: 0x104, 0x229, 0x230, 0x231, 0xd48

Function 12:
Public fallback function
Entry block: 0x9e
Exit block: 0x9e
Body: 0x9e

Function 13:
Private function
Entry block: 0x50a
Exit block: 0x82b
Body: 0x50a, 0x52b, 0x53a, 0x549, 0x55a, 0x569, 0x574, 0x5a3, 0x5a4, 0x5a9, 0x622, 0x630, 0x640, 0x641, 0x646, 0x64f, 0x65e, 0x664, 0x666, 0x68f, 0x6f2, 0x723, 0x78a, 0x798, 0x7a8, 0x7a9, 0x81f, 0x82a, 0x82b, 0xd57

