Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xb9]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xb9
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xb9
0xc: JUMPI 0xb9 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0xbe]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x38af3eed
0x3a DUP2
0x3b EQ
0x3c PUSH2 0xbe
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x38af3eed
0x3b: V13 = EQ V11 0x38af3eed
0x3c: V14 = 0xbe
0x3f: JUMPI 0xbe V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xef]
---
0x40 DUP1
0x41 PUSH4 0x43d726d6
0x46 EQ
0x47 PUSH2 0xef
0x4a JUMPI
---
0x41: V15 = 0x43d726d6
0x46: V16 = EQ 0x43d726d6 V11
0x47: V17 = 0xef
0x4a: JUMPI 0xef V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x106]
---
0x4b DUP1
0x4c PUSH4 0x51cff8d9
0x51 EQ
0x52 PUSH2 0x106
0x55 JUMPI
---
0x4c: V18 = 0x51cff8d9
0x51: V19 = EQ 0x51cff8d9 V11
0x52: V20 = 0x106
0x55: JUMPI 0x106 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x127]
---
0x56 DUP1
0x57 PUSH4 0x685ca194
0x5c EQ
0x5d PUSH2 0x127
0x60 JUMPI
---
0x57: V21 = 0x685ca194
0x5c: V22 = EQ 0x685ca194 V11
0x5d: V23 = 0x127
0x60: JUMPI 0x127 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x15c]
---
0x61 DUP1
0x62 PUSH4 0x715018a6
0x67 EQ
0x68 PUSH2 0x15c
0x6b JUMPI
---
0x62: V24 = 0x715018a6
0x67: V25 = EQ 0x715018a6 V11
0x68: V26 = 0x15c
0x6b: JUMPI 0x15c V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x171]
---
0x6c DUP1
0x6d PUSH4 0x8c52dc41
0x72 EQ
0x73 PUSH2 0x171
0x76 JUMPI
---
0x6d: V27 = 0x8c52dc41
0x72: V28 = EQ 0x8c52dc41 V11
0x73: V29 = 0x171
0x76: JUMPI 0x171 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x186]
---
0x77 DUP1
0x78 PUSH4 0x8da5cb5b
0x7d EQ
0x7e PUSH2 0x186
0x81 JUMPI
---
0x78: V30 = 0x8da5cb5b
0x7d: V31 = EQ 0x8da5cb5b V11
0x7e: V32 = 0x186
0x81: JUMPI 0x186 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x19b]
---
0x82 DUP1
0x83 PUSH4 0x9af6549a
0x88 EQ
0x89 PUSH2 0x19b
0x8c JUMPI
---
0x83: V33 = 0x9af6549a
0x88: V34 = EQ 0x9af6549a V11
0x89: V35 = 0x19b
0x8c: JUMPI 0x19b V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x1b0]
---
0x8d DUP1
0x8e PUSH4 0xc19d93fb
0x93 EQ
0x94 PUSH2 0x1b0
0x97 JUMPI
---
0x8e: V36 = 0xc19d93fb
0x93: V37 = EQ 0xc19d93fb V11
0x94: V38 = 0x1b0
0x97: JUMPI 0x1b0 V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x8d]
Successors: [0xa3, 0x1e9]
---
0x98 DUP1
0x99 PUSH4 0xe3a9db1a
0x9e EQ
0x9f PUSH2 0x1e9
0xa2 JUMPI
---
0x99: V39 = 0xe3a9db1a
0x9e: V40 = EQ 0xe3a9db1a V11
0x9f: V41 = 0x1e9
0xa2: JUMPI 0x1e9 V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa3
[0xa3:0xad]
---
Predecessors: [0x98]
Successors: [0xae, 0x21c]
---
0xa3 DUP1
0xa4 PUSH4 0xf2fde38b
0xa9 EQ
0xaa PUSH2 0x21c
0xad JUMPI
---
0xa4: V42 = 0xf2fde38b
0xa9: V43 = EQ 0xf2fde38b V11
0xaa: V44 = 0x21c
0xad: JUMPI 0x21c V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xae
[0xae:0xb8]
---
Predecessors: [0xa3]
Successors: [0xb9, 0x23d]
---
0xae DUP1
0xaf PUSH4 0xf340fa01
0xb4 EQ
0xb5 PUSH2 0x23d
0xb8 JUMPI
---
0xaf: V45 = 0xf340fa01
0xb4: V46 = EQ 0xf340fa01 V11
0xb5: V47 = 0x23d
0xb8: JUMPI 0x23d V46
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xb9
[0xb9:0xbd]
---
Predecessors: [0x0, 0xae]
Successors: []
---
0xb9 JUMPDEST
0xba PUSH1 0x0
0xbc DUP1
0xbd REVERT
---
0xb9: JUMPDEST 
0xba: V48 = 0x0
0xbd: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xbe
[0xbe:0xc5]
---
Predecessors: [0xd]
Successors: [0xc6, 0xca]
---
0xbe JUMPDEST
0xbf CALLVALUE
0xc0 DUP1
0xc1 ISZERO
0xc2 PUSH2 0xca
0xc5 JUMPI
---
0xbe: JUMPDEST 
0xbf: V49 = CALLVALUE
0xc1: V50 = ISZERO V49
0xc2: V51 = 0xca
0xc5: JUMPI 0xca V50
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V49]
Exit stack: [V11, V49]

================================

Block 0xc6
[0xc6:0xc9]
---
Predecessors: [0xbe]
Successors: []
---
0xc6 PUSH1 0x0
0xc8 DUP1
0xc9 REVERT
---
0xc6: V52 = 0x0
0xc9: REVERT 0x0 0x0
---
Entry stack: [V11, V49]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V49]

================================

Block 0xca
[0xca:0xd2]
---
Predecessors: [0xbe]
Successors: [0x251]
---
0xca JUMPDEST
0xcb POP
0xcc PUSH2 0xd3
0xcf PUSH2 0x251
0xd2 JUMP
---
0xca: JUMPDEST 
0xcc: V53 = 0xd3
0xcf: V54 = 0x251
0xd2: JUMP 0x251
---
Entry stack: [V11, V49]
Stack pops: 1
Stack additions: [0xd3]
Exit stack: [V11, 0xd3]

================================

Block 0xd3
[0xd3:0xee]
---
Predecessors: [0x251, 0x3e4]
Successors: []
---
0xd3 JUMPDEST
0xd4 PUSH1 0x40
0xd6 DUP1
0xd7 MLOAD
0xd8 PUSH1 0x1
0xda PUSH1 0xa0
0xdc PUSH1 0x2
0xde EXP
0xdf SUB
0xe0 SWAP1
0xe1 SWAP3
0xe2 AND
0xe3 DUP3
0xe4 MSTORE
0xe5 MLOAD
0xe6 SWAP1
0xe7 DUP2
0xe8 SWAP1
0xe9 SUB
0xea PUSH1 0x20
0xec ADD
0xed SWAP1
0xee RETURN
---
0xd3: JUMPDEST 
0xd4: V55 = 0x40
0xd7: V56 = M[0x40]
0xd8: V57 = 0x1
0xda: V58 = 0xa0
0xdc: V59 = 0x2
0xde: V60 = EXP 0x2 0xa0
0xdf: V61 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe2: V62 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xe4: M[V56] = V62
0xe5: V63 = M[0x40]
0xe9: V64 = SUB V56 V63
0xea: V65 = 0x20
0xec: V66 = ADD 0x20 V64
0xee: RETURN V63 V66
---
Entry stack: [V11, 0xd3, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xd3]

================================

Block 0xef
[0xef:0xf6]
---
Predecessors: [0x40]
Successors: [0xf7, 0xfb]
---
0xef JUMPDEST
0xf0 CALLVALUE
0xf1 DUP1
0xf2 ISZERO
0xf3 PUSH2 0xfb
0xf6 JUMPI
---
0xef: JUMPDEST 
0xf0: V67 = CALLVALUE
0xf2: V68 = ISZERO V67
0xf3: V69 = 0xfb
0xf6: JUMPI 0xfb V68
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V67]
Exit stack: [V11, V67]

================================

Block 0xf7
[0xf7:0xfa]
---
Predecessors: [0xef]
Successors: []
---
0xf7 PUSH1 0x0
0xf9 DUP1
0xfa REVERT
---
0xf7: V70 = 0x0
0xfa: REVERT 0x0 0x0
---
Entry stack: [V11, V67]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V67]

================================

Block 0xfb
[0xfb:0x103]
---
Predecessors: [0xef]
Successors: [0x265]
---
0xfb JUMPDEST
0xfc POP
0xfd PUSH2 0x104
0x100 PUSH2 0x265
0x103 JUMP
---
0xfb: JUMPDEST 
0xfd: V71 = 0x104
0x100: V72 = 0x265
0x103: JUMP 0x265
---
Entry stack: [V11, V67]
Stack pops: 1
Stack additions: [0x104]
Exit stack: [V11, 0x104]

================================

Block 0x104
[0x104:0x105]
---
Predecessors: [0x299, 0x2ed, 0x323, 0x3ac]
Successors: []
---
0x104 JUMPDEST
0x105 STOP
---
0x104: JUMPDEST 
0x105: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x106
[0x106:0x10d]
---
Predecessors: [0x4b]
Successors: [0x10e, 0x112]
---
0x106 JUMPDEST
0x107 CALLVALUE
0x108 DUP1
0x109 ISZERO
0x10a PUSH2 0x112
0x10d JUMPI
---
0x106: JUMPDEST 
0x107: V73 = CALLVALUE
0x109: V74 = ISZERO V73
0x10a: V75 = 0x112
0x10d: JUMPI 0x112 V74
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V73]
Exit stack: [V11, V73]

================================

Block 0x10e
[0x10e:0x111]
---
Predecessors: [0x106]
Successors: []
---
0x10e PUSH1 0x0
0x110 DUP1
0x111 REVERT
---
0x10e: V76 = 0x0
0x111: REVERT 0x0 0x0
---
Entry stack: [V11, V73]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V73]

================================

Block 0x112
[0x112:0x126]
---
Predecessors: [0x106]
Successors: [0x2d0]
---
0x112 JUMPDEST
0x113 POP
0x114 PUSH2 0x104
0x117 PUSH1 0x1
0x119 PUSH1 0xa0
0x11b PUSH1 0x2
0x11d EXP
0x11e SUB
0x11f PUSH1 0x4
0x121 CALLDATALOAD
0x122 AND
0x123 PUSH2 0x2d0
0x126 JUMP
---
0x112: JUMPDEST 
0x114: V77 = 0x104
0x117: V78 = 0x1
0x119: V79 = 0xa0
0x11b: V80 = 0x2
0x11d: V81 = EXP 0x2 0xa0
0x11e: V82 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11f: V83 = 0x4
0x121: V84 = CALLDATALOAD 0x4
0x122: V85 = AND V84 0xffffffffffffffffffffffffffffffffffffffff
0x123: V86 = 0x2d0
0x126: JUMP 0x2d0
---
Entry stack: [V11, V73]
Stack pops: 1
Stack additions: [0x104, V85]
Exit stack: [V11, 0x104, V85]

================================

Block 0x127
[0x127:0x12e]
---
Predecessors: [0x56]
Successors: [0x12f, 0x133]
---
0x127 JUMPDEST
0x128 CALLVALUE
0x129 DUP1
0x12a ISZERO
0x12b PUSH2 0x133
0x12e JUMPI
---
0x127: JUMPDEST 
0x128: V87 = CALLVALUE
0x12a: V88 = ISZERO V87
0x12b: V89 = 0x133
0x12e: JUMPI 0x133 V88
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V87]
Exit stack: [V11, V87]

================================

Block 0x12f
[0x12f:0x132]
---
Predecessors: [0x127]
Successors: []
---
0x12f PUSH1 0x0
0x131 DUP1
0x132 REVERT
---
0x12f: V90 = 0x0
0x132: REVERT 0x0 0x0
---
Entry stack: [V11, V87]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V87]

================================

Block 0x133
[0x133:0x147]
---
Predecessors: [0x127]
Successors: [0x2f0]
---
0x133 JUMPDEST
0x134 POP
0x135 PUSH2 0x148
0x138 PUSH1 0x1
0x13a PUSH1 0xa0
0x13c PUSH1 0x2
0x13e EXP
0x13f SUB
0x140 PUSH1 0x4
0x142 CALLDATALOAD
0x143 AND
0x144 PUSH2 0x2f0
0x147 JUMP
---
0x133: JUMPDEST 
0x135: V91 = 0x148
0x138: V92 = 0x1
0x13a: V93 = 0xa0
0x13c: V94 = 0x2
0x13e: V95 = EXP 0x2 0xa0
0x13f: V96 = SUB 0x10000000000000000000000000000000000000000 0x1
0x140: V97 = 0x4
0x142: V98 = CALLDATALOAD 0x4
0x143: V99 = AND V98 0xffffffffffffffffffffffffffffffffffffffff
0x144: V100 = 0x2f0
0x147: JUMP 0x2f0
---
Entry stack: [V11, V87]
Stack pops: 1
Stack additions: [0x148, V99]
Exit stack: [V11, 0x148, V99]

================================

Block 0x148
[0x148:0x15b]
---
Predecessors: [0x305]
Successors: []
---
0x148 JUMPDEST
0x149 PUSH1 0x40
0x14b DUP1
0x14c MLOAD
0x14d SWAP2
0x14e ISZERO
0x14f ISZERO
0x150 DUP3
0x151 MSTORE
0x152 MLOAD
0x153 SWAP1
0x154 DUP2
0x155 SWAP1
0x156 SUB
0x157 PUSH1 0x20
0x159 ADD
0x15a SWAP1
0x15b RETURN
---
0x148: JUMPDEST 
0x149: V101 = 0x40
0x14c: V102 = M[0x40]
0x14e: V103 = ISZERO V256
0x14f: V104 = ISZERO V103
0x151: M[V102] = V104
0x152: V105 = M[0x40]
0x156: V106 = SUB V102 V105
0x157: V107 = 0x20
0x159: V108 = ADD 0x20 V106
0x15b: RETURN V105 V108
---
Entry stack: [V11, 0x104, S1, V256]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x104, S1]

================================

Block 0x15c
[0x15c:0x163]
---
Predecessors: [0x61]
Successors: [0x164, 0x168]
---
0x15c JUMPDEST
0x15d CALLVALUE
0x15e DUP1
0x15f ISZERO
0x160 PUSH2 0x168
0x163 JUMPI
---
0x15c: JUMPDEST 
0x15d: V109 = CALLVALUE
0x15f: V110 = ISZERO V109
0x160: V111 = 0x168
0x163: JUMPI 0x168 V110
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V109]
Exit stack: [V11, V109]

================================

Block 0x164
[0x164:0x167]
---
Predecessors: [0x15c]
Successors: []
---
0x164 PUSH1 0x0
0x166 DUP1
0x167 REVERT
---
0x164: V112 = 0x0
0x167: REVERT 0x0 0x0
---
Entry stack: [V11, V109]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V109]

================================

Block 0x168
[0x168:0x170]
---
Predecessors: [0x15c]
Successors: [0x30c]
---
0x168 JUMPDEST
0x169 POP
0x16a PUSH2 0x104
0x16d PUSH2 0x30c
0x170 JUMP
---
0x168: JUMPDEST 
0x16a: V113 = 0x104
0x16d: V114 = 0x30c
0x170: JUMP 0x30c
---
Entry stack: [V11, V109]
Stack pops: 1
Stack additions: [0x104]
Exit stack: [V11, 0x104]

================================

Block 0x171
[0x171:0x178]
---
Predecessors: [0x6c]
Successors: [0x179, 0x17d]
---
0x171 JUMPDEST
0x172 CALLVALUE
0x173 DUP1
0x174 ISZERO
0x175 PUSH2 0x17d
0x178 JUMPI
---
0x171: JUMPDEST 
0x172: V115 = CALLVALUE
0x174: V116 = ISZERO V115
0x175: V117 = 0x17d
0x178: JUMPI 0x17d V116
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V115]
Exit stack: [V11, V115]

================================

Block 0x179
[0x179:0x17c]
---
Predecessors: [0x171]
Successors: []
---
0x179 PUSH1 0x0
0x17b DUP1
0x17c REVERT
---
0x179: V118 = 0x0
0x17c: REVERT 0x0 0x0
---
Entry stack: [V11, V115]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V115]

================================

Block 0x17d
[0x17d:0x185]
---
Predecessors: [0x171]
Successors: [0x378]
---
0x17d JUMPDEST
0x17e POP
0x17f PUSH2 0x104
0x182 PUSH2 0x378
0x185 JUMP
---
0x17d: JUMPDEST 
0x17f: V119 = 0x104
0x182: V120 = 0x378
0x185: JUMP 0x378
---
Entry stack: [V11, V115]
Stack pops: 1
Stack additions: [0x104]
Exit stack: [V11, 0x104]

================================

Block 0x186
[0x186:0x18d]
---
Predecessors: [0x77]
Successors: [0x18e, 0x192]
---
0x186 JUMPDEST
0x187 CALLVALUE
0x188 DUP1
0x189 ISZERO
0x18a PUSH2 0x192
0x18d JUMPI
---
0x186: JUMPDEST 
0x187: V121 = CALLVALUE
0x189: V122 = ISZERO V121
0x18a: V123 = 0x192
0x18d: JUMPI 0x192 V122
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V121]
Exit stack: [V11, V121]

================================

Block 0x18e
[0x18e:0x191]
---
Predecessors: [0x186]
Successors: []
---
0x18e PUSH1 0x0
0x190 DUP1
0x191 REVERT
---
0x18e: V124 = 0x0
0x191: REVERT 0x0 0x0
---
Entry stack: [V11, V121]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V121]

================================

Block 0x192
[0x192:0x19a]
---
Predecessors: [0x186]
Successors: [0x3e4]
---
0x192 JUMPDEST
0x193 POP
0x194 PUSH2 0xd3
0x197 PUSH2 0x3e4
0x19a JUMP
---
0x192: JUMPDEST 
0x194: V125 = 0xd3
0x197: V126 = 0x3e4
0x19a: JUMP 0x3e4
---
Entry stack: [V11, V121]
Stack pops: 1
Stack additions: [0xd3]
Exit stack: [V11, 0xd3]

================================

Block 0x19b
[0x19b:0x1a2]
---
Predecessors: [0x82]
Successors: [0x1a3, 0x1a7]
---
0x19b JUMPDEST
0x19c CALLVALUE
0x19d DUP1
0x19e ISZERO
0x19f PUSH2 0x1a7
0x1a2 JUMPI
---
0x19b: JUMPDEST 
0x19c: V127 = CALLVALUE
0x19e: V128 = ISZERO V127
0x19f: V129 = 0x1a7
0x1a2: JUMPI 0x1a7 V128
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V127]
Exit stack: [V11, V127]

================================

Block 0x1a3
[0x1a3:0x1a6]
---
Predecessors: [0x19b]
Successors: []
---
0x1a3 PUSH1 0x0
0x1a5 DUP1
0x1a6 REVERT
---
0x1a3: V130 = 0x0
0x1a6: REVERT 0x0 0x0
---
Entry stack: [V11, V127]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V127]

================================

Block 0x1a7
[0x1a7:0x1af]
---
Predecessors: [0x19b]
Successors: [0x3f3]
---
0x1a7 JUMPDEST
0x1a8 POP
0x1a9 PUSH2 0x104
0x1ac PUSH2 0x3f3
0x1af JUMP
---
0x1a7: JUMPDEST 
0x1a9: V131 = 0x104
0x1ac: V132 = 0x3f3
0x1af: JUMP 0x3f3
---
Entry stack: [V11, V127]
Stack pops: 1
Stack additions: [0x104]
Exit stack: [V11, 0x104]

================================

Block 0x1b0
[0x1b0:0x1b7]
---
Predecessors: [0x8d]
Successors: [0x1b8, 0x1bc]
---
0x1b0 JUMPDEST
0x1b1 CALLVALUE
0x1b2 DUP1
0x1b3 ISZERO
0x1b4 PUSH2 0x1bc
0x1b7 JUMPI
---
0x1b0: JUMPDEST 
0x1b1: V133 = CALLVALUE
0x1b3: V134 = ISZERO V133
0x1b4: V135 = 0x1bc
0x1b7: JUMPI 0x1bc V134
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V133]
Exit stack: [V11, V133]

================================

Block 0x1b8
[0x1b8:0x1bb]
---
Predecessors: [0x1b0]
Successors: []
---
0x1b8 PUSH1 0x0
0x1ba DUP1
0x1bb REVERT
---
0x1b8: V136 = 0x0
0x1bb: REVERT 0x0 0x0
---
Entry stack: [V11, V133]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V133]

================================

Block 0x1bc
[0x1bc:0x1c4]
---
Predecessors: [0x1b0]
Successors: [0x44f]
---
0x1bc JUMPDEST
0x1bd POP
0x1be PUSH2 0x1c5
0x1c1 PUSH2 0x44f
0x1c4 JUMP
---
0x1bc: JUMPDEST 
0x1be: V137 = 0x1c5
0x1c1: V138 = 0x44f
0x1c4: JUMP 0x44f
---
Entry stack: [V11, V133]
Stack pops: 1
Stack additions: [0x1c5]
Exit stack: [V11, 0x1c5]

================================

Block 0x1c5
[0x1c5:0x1d3]
---
Predecessors: [0x44f]
Successors: [0x1d4, 0x1d5]
---
0x1c5 JUMPDEST
0x1c6 PUSH1 0x40
0x1c8 MLOAD
0x1c9 DUP1
0x1ca DUP3
0x1cb PUSH1 0x2
0x1cd DUP2
0x1ce GT
0x1cf ISZERO
0x1d0 PUSH2 0x1d5
0x1d3 JUMPI
---
0x1c5: JUMPDEST 
0x1c6: V139 = 0x40
0x1c8: V140 = M[0x40]
0x1cb: V141 = 0x2
0x1ce: V142 = GT V366 0x2
0x1cf: V143 = ISZERO V142
0x1d0: V144 = 0x1d5
0x1d3: JUMPI 0x1d5 V143
---
Entry stack: [V11, 0x1c5, V366]
Stack pops: 1
Stack additions: [S0, V140, V140, S0]
Exit stack: [V11, 0x1c5, V366, V140, V140, V366]

================================

Block 0x1d4
[0x1d4:0x1d4]
---
Predecessors: [0x1c5]
Successors: []
---
0x1d4 INVALID
---
0x1d4: INVALID 
---
Entry stack: [V11, 0x1c5, V366, V140, V140, V366]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1c5, V366, V140, V140, V366]

================================

Block 0x1d5
[0x1d5:0x1e8]
---
Predecessors: [0x1c5]
Successors: []
---
0x1d5 JUMPDEST
0x1d6 PUSH1 0xff
0x1d8 AND
0x1d9 DUP2
0x1da MSTORE
0x1db PUSH1 0x20
0x1dd ADD
0x1de SWAP2
0x1df POP
0x1e0 POP
0x1e1 PUSH1 0x40
0x1e3 MLOAD
0x1e4 DUP1
0x1e5 SWAP2
0x1e6 SUB
0x1e7 SWAP1
0x1e8 RETURN
---
0x1d5: JUMPDEST 
0x1d6: V145 = 0xff
0x1d8: V146 = AND 0xff V366
0x1da: M[V140] = V146
0x1db: V147 = 0x20
0x1dd: V148 = ADD 0x20 V140
0x1e1: V149 = 0x40
0x1e3: V150 = M[0x40]
0x1e6: V151 = SUB V148 V150
0x1e8: RETURN V150 V151
---
Entry stack: [V11, 0x1c5, V366, V140, V140, V366]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x1c5]

================================

Block 0x1e9
[0x1e9:0x1f0]
---
Predecessors: [0x98]
Successors: [0x1f1, 0x1f5]
---
0x1e9 JUMPDEST
0x1ea CALLVALUE
0x1eb DUP1
0x1ec ISZERO
0x1ed PUSH2 0x1f5
0x1f0 JUMPI
---
0x1e9: JUMPDEST 
0x1ea: V152 = CALLVALUE
0x1ec: V153 = ISZERO V152
0x1ed: V154 = 0x1f5
0x1f0: JUMPI 0x1f5 V153
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V152]
Exit stack: [V11, V152]

================================

Block 0x1f1
[0x1f1:0x1f4]
---
Predecessors: [0x1e9]
Successors: []
---
0x1f1 PUSH1 0x0
0x1f3 DUP1
0x1f4 REVERT
---
0x1f1: V155 = 0x0
0x1f4: REVERT 0x0 0x0
---
Entry stack: [V11, V152]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V152]

================================

Block 0x1f5
[0x1f5:0x209]
---
Predecessors: [0x1e9]
Successors: [0x458]
---
0x1f5 JUMPDEST
0x1f6 POP
0x1f7 PUSH2 0x20a
0x1fa PUSH1 0x1
0x1fc PUSH1 0xa0
0x1fe PUSH1 0x2
0x200 EXP
0x201 SUB
0x202 PUSH1 0x4
0x204 CALLDATALOAD
0x205 AND
0x206 PUSH2 0x458
0x209 JUMP
---
0x1f5: JUMPDEST 
0x1f7: V156 = 0x20a
0x1fa: V157 = 0x1
0x1fc: V158 = 0xa0
0x1fe: V159 = 0x2
0x200: V160 = EXP 0x2 0xa0
0x201: V161 = SUB 0x10000000000000000000000000000000000000000 0x1
0x202: V162 = 0x4
0x204: V163 = CALLDATALOAD 0x4
0x205: V164 = AND V163 0xffffffffffffffffffffffffffffffffffffffff
0x206: V165 = 0x458
0x209: JUMP 0x458
---
Entry stack: [V11, V152]
Stack pops: 1
Stack additions: [0x20a, V164]
Exit stack: [V11, 0x20a, V164]

================================

Block 0x20a
[0x20a:0x21b]
---
Predecessors: [0x458]
Successors: []
---
0x20a JUMPDEST
0x20b PUSH1 0x40
0x20d DUP1
0x20e MLOAD
0x20f SWAP2
0x210 DUP3
0x211 MSTORE
0x212 MLOAD
0x213 SWAP1
0x214 DUP2
0x215 SWAP1
0x216 SUB
0x217 PUSH1 0x20
0x219 ADD
0x21a SWAP1
0x21b RETURN
---
0x20a: JUMPDEST 
0x20b: V166 = 0x40
0x20e: V167 = M[0x40]
0x211: M[V167] = V378
0x212: V168 = M[0x40]
0x216: V169 = SUB V167 V168
0x217: V170 = 0x20
0x219: V171 = ADD 0x20 V169
0x21b: RETURN V168 V171
---
Entry stack: [V11, V378]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x21c
[0x21c:0x223]
---
Predecessors: [0xa3]
Successors: [0x224, 0x228]
---
0x21c JUMPDEST
0x21d CALLVALUE
0x21e DUP1
0x21f ISZERO
0x220 PUSH2 0x228
0x223 JUMPI
---
0x21c: JUMPDEST 
0x21d: V172 = CALLVALUE
0x21f: V173 = ISZERO V172
0x220: V174 = 0x228
0x223: JUMPI 0x228 V173
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V172]
Exit stack: [V11, V172]

================================

Block 0x224
[0x224:0x227]
---
Predecessors: [0x21c]
Successors: []
---
0x224 PUSH1 0x0
0x226 DUP1
0x227 REVERT
---
0x224: V175 = 0x0
0x227: REVERT 0x0 0x0
---
Entry stack: [V11, V172]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V172]

================================

Block 0x228
[0x228:0x23c]
---
Predecessors: [0x21c]
Successors: [0x473]
---
0x228 JUMPDEST
0x229 POP
0x22a PUSH2 0x104
0x22d PUSH1 0x1
0x22f PUSH1 0xa0
0x231 PUSH1 0x2
0x233 EXP
0x234 SUB
0x235 PUSH1 0x4
0x237 CALLDATALOAD
0x238 AND
0x239 PUSH2 0x473
0x23c JUMP
---
0x228: JUMPDEST 
0x22a: V176 = 0x104
0x22d: V177 = 0x1
0x22f: V178 = 0xa0
0x231: V179 = 0x2
0x233: V180 = EXP 0x2 0xa0
0x234: V181 = SUB 0x10000000000000000000000000000000000000000 0x1
0x235: V182 = 0x4
0x237: V183 = CALLDATALOAD 0x4
0x238: V184 = AND V183 0xffffffffffffffffffffffffffffffffffffffff
0x239: V185 = 0x473
0x23c: JUMP 0x473
---
Entry stack: [V11, V172]
Stack pops: 1
Stack additions: [0x104, V184]
Exit stack: [V11, 0x104, V184]

================================

Block 0x23d
[0x23d:0x250]
---
Predecessors: [0xae]
Successors: [0x493]
---
0x23d JUMPDEST
0x23e PUSH2 0x104
0x241 PUSH1 0x1
0x243 PUSH1 0xa0
0x245 PUSH1 0x2
0x247 EXP
0x248 SUB
0x249 PUSH1 0x4
0x24b CALLDATALOAD
0x24c AND
0x24d PUSH2 0x493
0x250 JUMP
---
0x23d: JUMPDEST 
0x23e: V186 = 0x104
0x241: V187 = 0x1
0x243: V188 = 0xa0
0x245: V189 = 0x2
0x247: V190 = EXP 0x2 0xa0
0x248: V191 = SUB 0x10000000000000000000000000000000000000000 0x1
0x249: V192 = 0x4
0x24b: V193 = CALLDATALOAD 0x4
0x24c: V194 = AND V193 0xffffffffffffffffffffffffffffffffffffffff
0x24d: V195 = 0x493
0x250: JUMP 0x493
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x104, V194]
Exit stack: [V11, 0x104, V194]

================================

Block 0x251
[0x251:0x264]
---
Predecessors: [0xca]
Successors: [0xd3]
---
0x251 JUMPDEST
0x252 PUSH1 0x2
0x254 SLOAD
0x255 PUSH2 0x100
0x258 SWAP1
0x259 DIV
0x25a PUSH1 0x1
0x25c PUSH1 0xa0
0x25e PUSH1 0x2
0x260 EXP
0x261 SUB
0x262 AND
0x263 DUP2
0x264 JUMP
---
0x251: JUMPDEST 
0x252: V196 = 0x2
0x254: V197 = S[0x2]
0x255: V198 = 0x100
0x259: V199 = DIV V197 0x100
0x25a: V200 = 0x1
0x25c: V201 = 0xa0
0x25e: V202 = 0x2
0x260: V203 = EXP 0x2 0xa0
0x261: V204 = SUB 0x10000000000000000000000000000000000000000 0x1
0x262: V205 = AND 0xffffffffffffffffffffffffffffffffffffffff V199
0x264: JUMP 0xd3
---
Entry stack: [V11, 0xd3]
Stack pops: 1
Stack additions: [S0, V205]
Exit stack: [V11, 0xd3, V205]

================================

Block 0x265
[0x265:0x277]
---
Predecessors: [0xfb]
Successors: [0x278, 0x27c]
---
0x265 JUMPDEST
0x266 PUSH1 0x0
0x268 SLOAD
0x269 PUSH1 0x1
0x26b PUSH1 0xa0
0x26d PUSH1 0x2
0x26f EXP
0x270 SUB
0x271 AND
0x272 CALLER
0x273 EQ
0x274 PUSH2 0x27c
0x277 JUMPI
---
0x265: JUMPDEST 
0x266: V206 = 0x0
0x268: V207 = S[0x0]
0x269: V208 = 0x1
0x26b: V209 = 0xa0
0x26d: V210 = 0x2
0x26f: V211 = EXP 0x2 0xa0
0x270: V212 = SUB 0x10000000000000000000000000000000000000000 0x1
0x271: V213 = AND 0xffffffffffffffffffffffffffffffffffffffff V207
0x272: V214 = CALLER
0x273: V215 = EQ V214 V213
0x274: V216 = 0x27c
0x277: JUMPI 0x27c V215
---
Entry stack: [V11, 0x104]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104]

================================

Block 0x278
[0x278:0x27b]
---
Predecessors: [0x265]
Successors: []
---
0x278 PUSH1 0x0
0x27a DUP1
0x27b REVERT
---
0x278: V217 = 0x0
0x27b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x104]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104]

================================

Block 0x27c
[0x27c:0x28d]
---
Predecessors: [0x265]
Successors: [0x28e, 0x28f]
---
0x27c JUMPDEST
0x27d PUSH1 0x0
0x27f PUSH1 0x2
0x281 DUP1
0x282 SLOAD
0x283 PUSH1 0xff
0x285 AND
0x286 SWAP1
0x287 DUP2
0x288 GT
0x289 ISZERO
0x28a PUSH2 0x28f
0x28d JUMPI
---
0x27c: JUMPDEST 
0x27d: V218 = 0x0
0x27f: V219 = 0x2
0x282: V220 = S[0x2]
0x283: V221 = 0xff
0x285: V222 = AND 0xff V220
0x288: V223 = GT V222 0x2
0x289: V224 = ISZERO V223
0x28a: V225 = 0x28f
0x28d: JUMPI 0x28f V224
---
Entry stack: [V11, 0x104]
Stack pops: 0
Stack additions: [0x0, V222]
Exit stack: [V11, 0x104, 0x0, V222]

================================

Block 0x28e
[0x28e:0x28e]
---
Predecessors: [0x27c]
Successors: []
---
0x28e INVALID
---
0x28e: INVALID 
---
Entry stack: [V11, 0x104, 0x0, V222]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104, 0x0, V222]

================================

Block 0x28f
[0x28f:0x294]
---
Predecessors: [0x27c]
Successors: [0x295, 0x299]
---
0x28f JUMPDEST
0x290 EQ
0x291 PUSH2 0x299
0x294 JUMPI
---
0x28f: JUMPDEST 
0x290: V226 = EQ V222 0x0
0x291: V227 = 0x299
0x294: JUMPI 0x299 V226
---
Entry stack: [V11, 0x104, 0x0, V222]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x104]

================================

Block 0x295
[0x295:0x298]
---
Predecessors: [0x28f]
Successors: []
---
0x295 PUSH1 0x0
0x297 DUP1
0x298 REVERT
---
0x295: V228 = 0x0
0x298: REVERT 0x0 0x0
---
Entry stack: [V11, 0x104]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104]

================================

Block 0x299
[0x299:0x2cf]
---
Predecessors: [0x28f]
Successors: [0x104]
---
0x299 JUMPDEST
0x29a PUSH1 0x2
0x29c DUP1
0x29d SLOAD
0x29e PUSH1 0xff
0x2a0 NOT
0x2a1 AND
0x2a2 DUP2
0x2a3 OR
0x2a4 SWAP1
0x2a5 SSTORE
0x2a6 PUSH1 0x40
0x2a8 MLOAD
0x2a9 PUSH32 0x1cdde67b72a90f19919ac732a437ac2f7a10fc128d28c2a6e525d89ce5cd9d3a
0x2ca SWAP1
0x2cb PUSH1 0x0
0x2cd SWAP1
0x2ce LOG1
0x2cf JUMP
---
0x299: JUMPDEST 
0x29a: V229 = 0x2
0x29d: V230 = S[0x2]
0x29e: V231 = 0xff
0x2a0: V232 = NOT 0xff
0x2a1: V233 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V230
0x2a3: V234 = OR 0x2 V233
0x2a5: S[0x2] = V234
0x2a6: V235 = 0x40
0x2a8: V236 = M[0x40]
0x2a9: V237 = 0x1cdde67b72a90f19919ac732a437ac2f7a10fc128d28c2a6e525d89ce5cd9d3a
0x2cb: V238 = 0x0
0x2ce: LOG V236 0x0 0x1cdde67b72a90f19919ac732a437ac2f7a10fc128d28c2a6e525d89ce5cd9d3a
0x2cf: JUMP 0x104
---
Entry stack: [V11, 0x104]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x2d0
[0x2d0:0x2d8]
---
Predecessors: [0x112]
Successors: [0x2f0]
---
0x2d0 JUMPDEST
0x2d1 PUSH2 0x2d9
0x2d4 DUP2
0x2d5 PUSH2 0x2f0
0x2d8 JUMP
---
0x2d0: JUMPDEST 
0x2d1: V239 = 0x2d9
0x2d5: V240 = 0x2f0
0x2d8: JUMP 0x2f0
---
Entry stack: [V11, 0x104, V85]
Stack pops: 1
Stack additions: [S0, 0x2d9, S0]
Exit stack: [V11, 0x104, V85, 0x2d9, V85]

================================

Block 0x2d9
[0x2d9:0x2df]
---
Predecessors: [0x305]
Successors: [0x2e0, 0x2e4]
---
0x2d9 JUMPDEST
0x2da ISZERO
0x2db ISZERO
0x2dc PUSH2 0x2e4
0x2df JUMPI
---
0x2d9: JUMPDEST 
0x2da: V241 = ISZERO V256
0x2db: V242 = ISZERO V241
0x2dc: V243 = 0x2e4
0x2df: JUMPI 0x2e4 V242
---
Entry stack: [V11, 0x104, S1, V256]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x104, S1]

================================

Block 0x2e0
[0x2e0:0x2e3]
---
Predecessors: [0x2d9]
Successors: []
---
0x2e0 PUSH1 0x0
0x2e2 DUP1
0x2e3 REVERT
---
0x2e0: V244 = 0x0
0x2e3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x104, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104, S0]

================================

Block 0x2e4
[0x2e4:0x2ec]
---
Predecessors: [0x2d9]
Successors: [0x4b9]
---
0x2e4 JUMPDEST
0x2e5 PUSH2 0x2ed
0x2e8 DUP2
0x2e9 PUSH2 0x4b9
0x2ec JUMP
---
0x2e4: JUMPDEST 
0x2e5: V245 = 0x2ed
0x2e9: V246 = 0x4b9
0x2ec: JUMP 0x4b9
---
Entry stack: [V11, 0x104, S0]
Stack pops: 1
Stack additions: [S0, 0x2ed, S0]
Exit stack: [V11, 0x104, S0, 0x2ed, S0]

================================

Block 0x2ed
[0x2ed:0x2ef]
---
Predecessors: [0x40e, 0x53a, 0x593, 0x63f]
Successors: [0x104]
---
0x2ed JUMPDEST
0x2ee POP
0x2ef JUMP
---
0x2ed: JUMPDEST 
0x2ef: JUMP 0x104
---
Entry stack: [V11, 0x104, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x2f0
[0x2f0:0x303]
---
Predecessors: [0x133, 0x2d0]
Successors: [0x304, 0x305]
---
0x2f0 JUMPDEST
0x2f1 PUSH1 0x0
0x2f3 PUSH1 0x1
0x2f5 PUSH1 0x2
0x2f7 DUP1
0x2f8 SLOAD
0x2f9 PUSH1 0xff
0x2fb AND
0x2fc SWAP1
0x2fd DUP2
0x2fe GT
0x2ff ISZERO
0x300 PUSH2 0x305
0x303 JUMPI
---
0x2f0: JUMPDEST 
0x2f1: V247 = 0x0
0x2f3: V248 = 0x1
0x2f5: V249 = 0x2
0x2f8: V250 = S[0x2]
0x2f9: V251 = 0xff
0x2fb: V252 = AND 0xff V250
0x2fe: V253 = GT V252 0x2
0x2ff: V254 = ISZERO V253
0x300: V255 = 0x305
0x303: JUMPI 0x305 V254
---
Entry stack: [V11, 0x104, S2, {0x148, 0x2d9}, S0]
Stack pops: 0
Stack additions: [0x0, 0x1, V252]
Exit stack: [V11, 0x104, S2, {0x148, 0x2d9}, S0, 0x0, 0x1, V252]

================================

Block 0x304
[0x304:0x304]
---
Predecessors: [0x2f0]
Successors: []
---
0x304 INVALID
---
0x304: INVALID 
---
Entry stack: [V11, 0x104, S5, {0x148, 0x2d9}, S3, 0x0, 0x1, V252]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104, S5, {0x148, 0x2d9}, S3, 0x0, 0x1, V252]

================================

Block 0x305
[0x305:0x30b]
---
Predecessors: [0x2f0]
Successors: [0x148, 0x2d9]
---
0x305 JUMPDEST
0x306 EQ
0x307 SWAP3
0x308 SWAP2
0x309 POP
0x30a POP
0x30b JUMP
---
0x305: JUMPDEST 
0x306: V256 = EQ V252 0x1
0x30b: JUMP {0x148, 0x2d9}
---
Entry stack: [V11, 0x104, S5, {0x148, 0x2d9}, S3, 0x0, 0x1, V252]
Stack pops: 5
Stack additions: [V256]
Exit stack: [V11, 0x104, S5, V256]

================================

Block 0x30c
[0x30c:0x31e]
---
Predecessors: [0x168]
Successors: [0x31f, 0x323]
---
0x30c JUMPDEST
0x30d PUSH1 0x0
0x30f SLOAD
0x310 PUSH1 0x1
0x312 PUSH1 0xa0
0x314 PUSH1 0x2
0x316 EXP
0x317 SUB
0x318 AND
0x319 CALLER
0x31a EQ
0x31b PUSH2 0x323
0x31e JUMPI
---
0x30c: JUMPDEST 
0x30d: V257 = 0x0
0x30f: V258 = S[0x0]
0x310: V259 = 0x1
0x312: V260 = 0xa0
0x314: V261 = 0x2
0x316: V262 = EXP 0x2 0xa0
0x317: V263 = SUB 0x10000000000000000000000000000000000000000 0x1
0x318: V264 = AND 0xffffffffffffffffffffffffffffffffffffffff V258
0x319: V265 = CALLER
0x31a: V266 = EQ V265 V264
0x31b: V267 = 0x323
0x31e: JUMPI 0x323 V266
---
Entry stack: [V11, 0x104]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104]

================================

Block 0x31f
[0x31f:0x322]
---
Predecessors: [0x30c]
Successors: []
---
0x31f PUSH1 0x0
0x321 DUP1
0x322 REVERT
---
0x31f: V268 = 0x0
0x322: REVERT 0x0 0x0
---
Entry stack: [V11, 0x104]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104]

================================

Block 0x323
[0x323:0x377]
---
Predecessors: [0x30c]
Successors: [0x104]
---
0x323 JUMPDEST
0x324 PUSH1 0x0
0x326 DUP1
0x327 SLOAD
0x328 PUSH1 0x40
0x32a MLOAD
0x32b PUSH1 0x1
0x32d PUSH1 0xa0
0x32f PUSH1 0x2
0x331 EXP
0x332 SUB
0x333 SWAP1
0x334 SWAP2
0x335 AND
0x336 SWAP2
0x337 PUSH32 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820
0x358 SWAP2
0x359 LOG2
0x35a PUSH1 0x0
0x35c DUP1
0x35d SLOAD
0x35e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x373 NOT
0x374 AND
0x375 SWAP1
0x376 SSTORE
0x377 JUMP
---
0x323: JUMPDEST 
0x324: V269 = 0x0
0x327: V270 = S[0x0]
0x328: V271 = 0x40
0x32a: V272 = M[0x40]
0x32b: V273 = 0x1
0x32d: V274 = 0xa0
0x32f: V275 = 0x2
0x331: V276 = EXP 0x2 0xa0
0x332: V277 = SUB 0x10000000000000000000000000000000000000000 0x1
0x335: V278 = AND V270 0xffffffffffffffffffffffffffffffffffffffff
0x337: V279 = 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820
0x359: LOG V272 0x0 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820 V278
0x35a: V280 = 0x0
0x35d: V281 = S[0x0]
0x35e: V282 = 0xffffffffffffffffffffffffffffffffffffffff
0x373: V283 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x374: V284 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V281
0x376: S[0x0] = V284
0x377: JUMP 0x104
---
Entry stack: [V11, 0x104]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x378
[0x378:0x38a]
---
Predecessors: [0x17d]
Successors: [0x38b, 0x38f]
---
0x378 JUMPDEST
0x379 PUSH1 0x0
0x37b SLOAD
0x37c PUSH1 0x1
0x37e PUSH1 0xa0
0x380 PUSH1 0x2
0x382 EXP
0x383 SUB
0x384 AND
0x385 CALLER
0x386 EQ
0x387 PUSH2 0x38f
0x38a JUMPI
---
0x378: JUMPDEST 
0x379: V285 = 0x0
0x37b: V286 = S[0x0]
0x37c: V287 = 0x1
0x37e: V288 = 0xa0
0x380: V289 = 0x2
0x382: V290 = EXP 0x2 0xa0
0x383: V291 = SUB 0x10000000000000000000000000000000000000000 0x1
0x384: V292 = AND 0xffffffffffffffffffffffffffffffffffffffff V286
0x385: V293 = CALLER
0x386: V294 = EQ V293 V292
0x387: V295 = 0x38f
0x38a: JUMPI 0x38f V294
---
Entry stack: [V11, 0x104]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104]

================================

Block 0x38b
[0x38b:0x38e]
---
Predecessors: [0x378]
Successors: []
---
0x38b PUSH1 0x0
0x38d DUP1
0x38e REVERT
---
0x38b: V296 = 0x0
0x38e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x104]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104]

================================

Block 0x38f
[0x38f:0x3a0]
---
Predecessors: [0x378]
Successors: [0x3a1, 0x3a2]
---
0x38f JUMPDEST
0x390 PUSH1 0x0
0x392 PUSH1 0x2
0x394 DUP1
0x395 SLOAD
0x396 PUSH1 0xff
0x398 AND
0x399 SWAP1
0x39a DUP2
0x39b GT
0x39c ISZERO
0x39d PUSH2 0x3a2
0x3a0 JUMPI
---
0x38f: JUMPDEST 
0x390: V297 = 0x0
0x392: V298 = 0x2
0x395: V299 = S[0x2]
0x396: V300 = 0xff
0x398: V301 = AND 0xff V299
0x39b: V302 = GT V301 0x2
0x39c: V303 = ISZERO V302
0x39d: V304 = 0x3a2
0x3a0: JUMPI 0x3a2 V303
---
Entry stack: [V11, 0x104]
Stack pops: 0
Stack additions: [0x0, V301]
Exit stack: [V11, 0x104, 0x0, V301]

================================

Block 0x3a1
[0x3a1:0x3a1]
---
Predecessors: [0x38f]
Successors: []
---
0x3a1 INVALID
---
0x3a1: INVALID 
---
Entry stack: [V11, 0x104, 0x0, V301]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104, 0x0, V301]

================================

Block 0x3a2
[0x3a2:0x3a7]
---
Predecessors: [0x38f]
Successors: [0x3a8, 0x3ac]
---
0x3a2 JUMPDEST
0x3a3 EQ
0x3a4 PUSH2 0x3ac
0x3a7 JUMPI
---
0x3a2: JUMPDEST 
0x3a3: V305 = EQ V301 0x0
0x3a4: V306 = 0x3ac
0x3a7: JUMPI 0x3ac V305
---
Entry stack: [V11, 0x104, 0x0, V301]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x104]

================================

Block 0x3a8
[0x3a8:0x3ab]
---
Predecessors: [0x3a2]
Successors: []
---
0x3a8 PUSH1 0x0
0x3aa DUP1
0x3ab REVERT
---
0x3a8: V307 = 0x0
0x3ab: REVERT 0x0 0x0
---
Entry stack: [V11, 0x104]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104]

================================

Block 0x3ac
[0x3ac:0x3e3]
---
Predecessors: [0x3a2]
Successors: [0x104]
---
0x3ac JUMPDEST
0x3ad PUSH1 0x2
0x3af DUP1
0x3b0 SLOAD
0x3b1 PUSH1 0xff
0x3b3 NOT
0x3b4 AND
0x3b5 PUSH1 0x1
0x3b7 OR
0x3b8 SWAP1
0x3b9 SSTORE
0x3ba PUSH1 0x40
0x3bc MLOAD
0x3bd PUSH32 0x599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b89
0x3de SWAP1
0x3df PUSH1 0x0
0x3e1 SWAP1
0x3e2 LOG1
0x3e3 JUMP
---
0x3ac: JUMPDEST 
0x3ad: V308 = 0x2
0x3b0: V309 = S[0x2]
0x3b1: V310 = 0xff
0x3b3: V311 = NOT 0xff
0x3b4: V312 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V309
0x3b5: V313 = 0x1
0x3b7: V314 = OR 0x1 V312
0x3b9: S[0x2] = V314
0x3ba: V315 = 0x40
0x3bc: V316 = M[0x40]
0x3bd: V317 = 0x599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b89
0x3df: V318 = 0x0
0x3e2: LOG V316 0x0 0x599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b89
0x3e3: JUMP 0x104
---
Entry stack: [V11, 0x104]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x3e4
[0x3e4:0x3f2]
---
Predecessors: [0x192]
Successors: [0xd3]
---
0x3e4 JUMPDEST
0x3e5 PUSH1 0x0
0x3e7 SLOAD
0x3e8 PUSH1 0x1
0x3ea PUSH1 0xa0
0x3ec PUSH1 0x2
0x3ee EXP
0x3ef SUB
0x3f0 AND
0x3f1 DUP2
0x3f2 JUMP
---
0x3e4: JUMPDEST 
0x3e5: V319 = 0x0
0x3e7: V320 = S[0x0]
0x3e8: V321 = 0x1
0x3ea: V322 = 0xa0
0x3ec: V323 = 0x2
0x3ee: V324 = EXP 0x2 0xa0
0x3ef: V325 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f0: V326 = AND 0xffffffffffffffffffffffffffffffffffffffff V320
0x3f2: JUMP 0xd3
---
Entry stack: [V11, 0xd3]
Stack pops: 1
Stack additions: [S0, V326]
Exit stack: [V11, 0xd3, V326]

================================

Block 0x3f3
[0x3f3:0x402]
---
Predecessors: [0x1a7]
Successors: [0x403, 0x404]
---
0x3f3 JUMPDEST
0x3f4 PUSH1 0x2
0x3f6 DUP1
0x3f7 SLOAD
0x3f8 PUSH1 0xff
0x3fa AND
0x3fb DUP2
0x3fc DUP2
0x3fd GT
0x3fe ISZERO
0x3ff PUSH2 0x404
0x402 JUMPI
---
0x3f3: JUMPDEST 
0x3f4: V327 = 0x2
0x3f7: V328 = S[0x2]
0x3f8: V329 = 0xff
0x3fa: V330 = AND 0xff V328
0x3fd: V331 = GT V330 0x2
0x3fe: V332 = ISZERO V331
0x3ff: V333 = 0x404
0x402: JUMPI 0x404 V332
---
Entry stack: [V11, 0x104]
Stack pops: 0
Stack additions: [0x2, V330]
Exit stack: [V11, 0x104, 0x2, V330]

================================

Block 0x403
[0x403:0x403]
---
Predecessors: [0x3f3]
Successors: []
---
0x403 INVALID
---
0x403: INVALID 
---
Entry stack: [V11, 0x104, 0x2, V330]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104, 0x2, V330]

================================

Block 0x404
[0x404:0x409]
---
Predecessors: [0x3f3]
Successors: [0x40a, 0x40e]
---
0x404 JUMPDEST
0x405 EQ
0x406 PUSH2 0x40e
0x409 JUMPI
---
0x404: JUMPDEST 
0x405: V334 = EQ V330 0x2
0x406: V335 = 0x40e
0x409: JUMPI 0x40e V334
---
Entry stack: [V11, 0x104, 0x2, V330]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x104]

================================

Block 0x40a
[0x40a:0x40d]
---
Predecessors: [0x404]
Successors: []
---
0x40a PUSH1 0x0
0x40c DUP1
0x40d REVERT
---
0x40a: V336 = 0x0
0x40d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x104]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104]

================================

Block 0x40e
[0x40e:0x445]
---
Predecessors: [0x404]
Successors: [0x2ed, 0x446]
---
0x40e JUMPDEST
0x40f PUSH1 0x2
0x411 SLOAD
0x412 PUSH1 0x40
0x414 MLOAD
0x415 PUSH1 0x1
0x417 PUSH1 0xa0
0x419 PUSH1 0x2
0x41b EXP
0x41c SUB
0x41d PUSH2 0x100
0x420 SWAP1
0x421 SWAP3
0x422 DIV
0x423 SWAP2
0x424 SWAP1
0x425 SWAP2
0x426 AND
0x427 SWAP1
0x428 ADDRESS
0x429 BALANCE
0x42a DUP1
0x42b ISZERO
0x42c PUSH2 0x8fc
0x42f MUL
0x430 SWAP2
0x431 PUSH1 0x0
0x433 DUP2
0x434 DUP2
0x435 DUP2
0x436 DUP6
0x437 DUP9
0x438 DUP9
0x439 CALL
0x43a SWAP4
0x43b POP
0x43c POP
0x43d POP
0x43e POP
0x43f ISZERO
0x440 DUP1
0x441 ISZERO
0x442 PUSH2 0x2ed
0x445 JUMPI
---
0x40e: JUMPDEST 
0x40f: V337 = 0x2
0x411: V338 = S[0x2]
0x412: V339 = 0x40
0x414: V340 = M[0x40]
0x415: V341 = 0x1
0x417: V342 = 0xa0
0x419: V343 = 0x2
0x41b: V344 = EXP 0x2 0xa0
0x41c: V345 = SUB 0x10000000000000000000000000000000000000000 0x1
0x41d: V346 = 0x100
0x422: V347 = DIV V338 0x100
0x426: V348 = AND V347 0xffffffffffffffffffffffffffffffffffffffff
0x428: V349 = ADDRESS
0x429: V350 = BALANCE V349
0x42b: V351 = ISZERO V350
0x42c: V352 = 0x8fc
0x42f: V353 = MUL 0x8fc V351
0x431: V354 = 0x0
0x439: V355 = CALL V353 V348 V350 V340 0x0 V340 0x0
0x43f: V356 = ISZERO V355
0x441: V357 = ISZERO V356
0x442: V358 = 0x2ed
0x445: JUMPI 0x2ed V357
---
Entry stack: [V11, 0x104]
Stack pops: 0
Stack additions: [V356]
Exit stack: [V11, 0x104, V356]

================================

Block 0x446
[0x446:0x44e]
---
Predecessors: [0x40e]
Successors: []
---
0x446 RETURNDATASIZE
0x447 PUSH1 0x0
0x449 DUP1
0x44a RETURNDATACOPY
0x44b RETURNDATASIZE
0x44c PUSH1 0x0
0x44e REVERT
---
0x446: V359 = RETURNDATASIZE
0x447: V360 = 0x0
0x44a: RETURNDATACOPY 0x0 0x0 V359
0x44b: V361 = RETURNDATASIZE
0x44c: V362 = 0x0
0x44e: REVERT 0x0 V361
---
Entry stack: [V11, 0x104, V356]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104, V356]

================================

Block 0x44f
[0x44f:0x457]
---
Predecessors: [0x1bc]
Successors: [0x1c5]
---
0x44f JUMPDEST
0x450 PUSH1 0x2
0x452 SLOAD
0x453 PUSH1 0xff
0x455 AND
0x456 DUP2
0x457 JUMP
---
0x44f: JUMPDEST 
0x450: V363 = 0x2
0x452: V364 = S[0x2]
0x453: V365 = 0xff
0x455: V366 = AND 0xff V364
0x457: JUMP 0x1c5
---
Entry stack: [V11, 0x1c5]
Stack pops: 1
Stack additions: [S0, V366]
Exit stack: [V11, 0x1c5, V366]

================================

Block 0x458
[0x458:0x472]
---
Predecessors: [0x1f5]
Successors: [0x20a]
---
0x458 JUMPDEST
0x459 PUSH1 0x1
0x45b PUSH1 0xa0
0x45d PUSH1 0x2
0x45f EXP
0x460 SUB
0x461 AND
0x462 PUSH1 0x0
0x464 SWAP1
0x465 DUP2
0x466 MSTORE
0x467 PUSH1 0x1
0x469 PUSH1 0x20
0x46b MSTORE
0x46c PUSH1 0x40
0x46e SWAP1
0x46f SHA3
0x470 SLOAD
0x471 SWAP1
0x472 JUMP
---
0x458: JUMPDEST 
0x459: V367 = 0x1
0x45b: V368 = 0xa0
0x45d: V369 = 0x2
0x45f: V370 = EXP 0x2 0xa0
0x460: V371 = SUB 0x10000000000000000000000000000000000000000 0x1
0x461: V372 = AND 0xffffffffffffffffffffffffffffffffffffffff V164
0x462: V373 = 0x0
0x466: M[0x0] = V372
0x467: V374 = 0x1
0x469: V375 = 0x20
0x46b: M[0x20] = 0x1
0x46c: V376 = 0x40
0x46f: V377 = SHA3 0x0 0x40
0x470: V378 = S[V377]
0x472: JUMP 0x20a
---
Entry stack: [V11, 0x20a, V164]
Stack pops: 2
Stack additions: [V378]
Exit stack: [V11, V378]

================================

Block 0x473
[0x473:0x485]
---
Predecessors: [0x228]
Successors: [0x486, 0x48a]
---
0x473 JUMPDEST
0x474 PUSH1 0x0
0x476 SLOAD
0x477 PUSH1 0x1
0x479 PUSH1 0xa0
0x47b PUSH1 0x2
0x47d EXP
0x47e SUB
0x47f AND
0x480 CALLER
0x481 EQ
0x482 PUSH2 0x48a
0x485 JUMPI
---
0x473: JUMPDEST 
0x474: V379 = 0x0
0x476: V380 = S[0x0]
0x477: V381 = 0x1
0x479: V382 = 0xa0
0x47b: V383 = 0x2
0x47d: V384 = EXP 0x2 0xa0
0x47e: V385 = SUB 0x10000000000000000000000000000000000000000 0x1
0x47f: V386 = AND 0xffffffffffffffffffffffffffffffffffffffff V380
0x480: V387 = CALLER
0x481: V388 = EQ V387 V386
0x482: V389 = 0x48a
0x485: JUMPI 0x48a V388
---
Entry stack: [V11, 0x104, V184]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104, V184]

================================

Block 0x486
[0x486:0x489]
---
Predecessors: [0x473]
Successors: []
---
0x486 PUSH1 0x0
0x488 DUP1
0x489 REVERT
---
0x486: V390 = 0x0
0x489: REVERT 0x0 0x0
---
Entry stack: [V11, 0x104, V184]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104, V184]

================================

Block 0x48a
[0x48a:0x492]
---
Predecessors: [0x473]
Successors: [0x57e]
---
0x48a JUMPDEST
0x48b PUSH2 0x2ed
0x48e DUP2
0x48f PUSH2 0x57e
0x492 JUMP
---
0x48a: JUMPDEST 
0x48b: V391 = 0x2ed
0x48f: V392 = 0x57e
0x492: JUMP 0x57e
---
Entry stack: [V11, 0x104, V184]
Stack pops: 1
Stack additions: [S0, 0x2ed, S0]
Exit stack: [V11, 0x104, V184, 0x2ed, V184]

================================

Block 0x493
[0x493:0x4a4]
---
Predecessors: [0x23d]
Successors: [0x4a5, 0x4a6]
---
0x493 JUMPDEST
0x494 PUSH1 0x0
0x496 PUSH1 0x2
0x498 DUP1
0x499 SLOAD
0x49a PUSH1 0xff
0x49c AND
0x49d SWAP1
0x49e DUP2
0x49f GT
0x4a0 ISZERO
0x4a1 PUSH2 0x4a6
0x4a4 JUMPI
---
0x493: JUMPDEST 
0x494: V393 = 0x0
0x496: V394 = 0x2
0x499: V395 = S[0x2]
0x49a: V396 = 0xff
0x49c: V397 = AND 0xff V395
0x49f: V398 = GT V397 0x2
0x4a0: V399 = ISZERO V398
0x4a1: V400 = 0x4a6
0x4a4: JUMPI 0x4a6 V399
---
Entry stack: [V11, 0x104, V194]
Stack pops: 0
Stack additions: [0x0, V397]
Exit stack: [V11, 0x104, V194, 0x0, V397]

================================

Block 0x4a5
[0x4a5:0x4a5]
---
Predecessors: [0x493]
Successors: []
---
0x4a5 INVALID
---
0x4a5: INVALID 
---
Entry stack: [V11, 0x104, V194, 0x0, V397]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104, V194, 0x0, V397]

================================

Block 0x4a6
[0x4a6:0x4ab]
---
Predecessors: [0x493]
Successors: [0x4ac, 0x4b0]
---
0x4a6 JUMPDEST
0x4a7 EQ
0x4a8 PUSH2 0x4b0
0x4ab JUMPI
---
0x4a6: JUMPDEST 
0x4a7: V401 = EQ V397 0x0
0x4a8: V402 = 0x4b0
0x4ab: JUMPI 0x4b0 V401
---
Entry stack: [V11, 0x104, V194, 0x0, V397]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x104, V194]

================================

Block 0x4ac
[0x4ac:0x4af]
---
Predecessors: [0x4a6]
Successors: []
---
0x4ac PUSH1 0x0
0x4ae DUP1
0x4af REVERT
---
0x4ac: V403 = 0x0
0x4af: REVERT 0x0 0x0
---
Entry stack: [V11, 0x104, V194]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104, V194]

================================

Block 0x4b0
[0x4b0:0x4b8]
---
Predecessors: [0x4a6]
Successors: [0x5fb]
---
0x4b0 JUMPDEST
0x4b1 PUSH2 0x2ed
0x4b4 DUP2
0x4b5 PUSH2 0x5fb
0x4b8 JUMP
---
0x4b0: JUMPDEST 
0x4b1: V404 = 0x2ed
0x4b5: V405 = 0x5fb
0x4b8: JUMP 0x5fb
---
Entry stack: [V11, 0x104, V194]
Stack pops: 1
Stack additions: [S0, 0x2ed, S0]
Exit stack: [V11, 0x104, V194, 0x2ed, V194]

================================

Block 0x4b9
[0x4b9:0x4cc]
---
Predecessors: [0x2e4]
Successors: [0x4cd, 0x4d1]
---
0x4b9 JUMPDEST
0x4ba PUSH1 0x0
0x4bc DUP1
0x4bd SLOAD
0x4be PUSH1 0x1
0x4c0 PUSH1 0xa0
0x4c2 PUSH1 0x2
0x4c4 EXP
0x4c5 SUB
0x4c6 AND
0x4c7 CALLER
0x4c8 EQ
0x4c9 PUSH2 0x4d1
0x4cc JUMPI
---
0x4b9: JUMPDEST 
0x4ba: V406 = 0x0
0x4bd: V407 = S[0x0]
0x4be: V408 = 0x1
0x4c0: V409 = 0xa0
0x4c2: V410 = 0x2
0x4c4: V411 = EXP 0x2 0xa0
0x4c5: V412 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c6: V413 = AND 0xffffffffffffffffffffffffffffffffffffffff V407
0x4c7: V414 = CALLER
0x4c8: V415 = EQ V414 V413
0x4c9: V416 = 0x4d1
0x4cc: JUMPI 0x4d1 V415
---
Entry stack: [V11, 0x104, S2, 0x2ed, S0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x104, S2, 0x2ed, S0, 0x0]

================================

Block 0x4cd
[0x4cd:0x4d0]
---
Predecessors: [0x4b9]
Successors: []
---
0x4cd PUSH1 0x0
0x4cf DUP1
0x4d0 REVERT
---
0x4cd: V417 = 0x0
0x4d0: REVERT 0x0 0x0
---
Entry stack: [V11, 0x104, S3, 0x2ed, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104, S3, 0x2ed, S1, 0x0]

================================

Block 0x4d1
[0x4d1:0x4f4]
---
Predecessors: [0x4b9]
Successors: [0x4f5, 0x4f6]
---
0x4d1 JUMPDEST
0x4d2 POP
0x4d3 PUSH1 0x1
0x4d5 PUSH1 0xa0
0x4d7 PUSH1 0x2
0x4d9 EXP
0x4da SUB
0x4db DUP2
0x4dc AND
0x4dd PUSH1 0x0
0x4df SWAP1
0x4e0 DUP2
0x4e1 MSTORE
0x4e2 PUSH1 0x1
0x4e4 PUSH1 0x20
0x4e6 MSTORE
0x4e7 PUSH1 0x40
0x4e9 SWAP1
0x4ea SHA3
0x4eb SLOAD
0x4ec ADDRESS
0x4ed BALANCE
0x4ee DUP2
0x4ef GT
0x4f0 ISZERO
0x4f1 PUSH2 0x4f6
0x4f4 JUMPI
---
0x4d1: JUMPDEST 
0x4d3: V418 = 0x1
0x4d5: V419 = 0xa0
0x4d7: V420 = 0x2
0x4d9: V421 = EXP 0x2 0xa0
0x4da: V422 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4dc: V423 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x4dd: V424 = 0x0
0x4e1: M[0x0] = V423
0x4e2: V425 = 0x1
0x4e4: V426 = 0x20
0x4e6: M[0x20] = 0x1
0x4e7: V427 = 0x40
0x4ea: V428 = SHA3 0x0 0x40
0x4eb: V429 = S[V428]
0x4ec: V430 = ADDRESS
0x4ed: V431 = BALANCE V430
0x4ef: V432 = GT V429 V431
0x4f0: V433 = ISZERO V432
0x4f1: V434 = 0x4f6
0x4f4: JUMPI 0x4f6 V433
---
Entry stack: [V11, 0x104, S3, 0x2ed, S1, 0x0]
Stack pops: 2
Stack additions: [S1, V429]
Exit stack: [V11, 0x104, S3, 0x2ed, S1, V429]

================================

Block 0x4f5
[0x4f5:0x4f5]
---
Predecessors: [0x4d1]
Successors: []
---
0x4f5 INVALID
---
0x4f5: INVALID 
---
Entry stack: [V11, 0x104, S3, 0x2ed, S1, V429]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104, S3, 0x2ed, S1, V429]

================================

Block 0x4f6
[0x4f6:0x530]
---
Predecessors: [0x4d1]
Successors: [0x531, 0x53a]
---
0x4f6 JUMPDEST
0x4f7 PUSH1 0x1
0x4f9 PUSH1 0xa0
0x4fb PUSH1 0x2
0x4fd EXP
0x4fe SUB
0x4ff DUP3
0x500 AND
0x501 PUSH1 0x0
0x503 DUP2
0x504 DUP2
0x505 MSTORE
0x506 PUSH1 0x1
0x508 PUSH1 0x20
0x50a MSTORE
0x50b PUSH1 0x40
0x50d DUP1
0x50e DUP3
0x50f SHA3
0x510 DUP3
0x511 SWAP1
0x512 SSTORE
0x513 MLOAD
0x514 DUP4
0x515 ISZERO
0x516 PUSH2 0x8fc
0x519 MUL
0x51a SWAP2
0x51b DUP5
0x51c SWAP2
0x51d SWAP1
0x51e DUP2
0x51f DUP2
0x520 DUP2
0x521 DUP6
0x522 DUP9
0x523 DUP9
0x524 CALL
0x525 SWAP4
0x526 POP
0x527 POP
0x528 POP
0x529 POP
0x52a ISZERO
0x52b DUP1
0x52c ISZERO
0x52d PUSH2 0x53a
0x530 JUMPI
---
0x4f6: JUMPDEST 
0x4f7: V435 = 0x1
0x4f9: V436 = 0xa0
0x4fb: V437 = 0x2
0x4fd: V438 = EXP 0x2 0xa0
0x4fe: V439 = SUB 0x10000000000000000000000000000000000000000 0x1
0x500: V440 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x501: V441 = 0x0
0x505: M[0x0] = V440
0x506: V442 = 0x1
0x508: V443 = 0x20
0x50a: M[0x20] = 0x1
0x50b: V444 = 0x40
0x50f: V445 = SHA3 0x0 0x40
0x512: S[V445] = 0x0
0x513: V446 = M[0x40]
0x515: V447 = ISZERO V429
0x516: V448 = 0x8fc
0x519: V449 = MUL 0x8fc V447
0x524: V450 = CALL V449 V440 V429 V446 0x0 V446 0x0
0x52a: V451 = ISZERO V450
0x52c: V452 = ISZERO V451
0x52d: V453 = 0x53a
0x530: JUMPI 0x53a V452
---
Entry stack: [V11, 0x104, S3, 0x2ed, S1, V429]
Stack pops: 2
Stack additions: [S1, S0, V451]
Exit stack: [V11, 0x104, S3, 0x2ed, S1, V429, V451]

================================

Block 0x531
[0x531:0x539]
---
Predecessors: [0x4f6]
Successors: []
---
0x531 RETURNDATASIZE
0x532 PUSH1 0x0
0x534 DUP1
0x535 RETURNDATACOPY
0x536 RETURNDATASIZE
0x537 PUSH1 0x0
0x539 REVERT
---
0x531: V454 = RETURNDATASIZE
0x532: V455 = 0x0
0x535: RETURNDATACOPY 0x0 0x0 V454
0x536: V456 = RETURNDATASIZE
0x537: V457 = 0x0
0x539: REVERT 0x0 V456
---
Entry stack: [V11, 0x104, S4, 0x2ed, S2, V429, V451]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104, S4, 0x2ed, S2, V429, V451]

================================

Block 0x53a
[0x53a:0x57d]
---
Predecessors: [0x4f6]
Successors: [0x2ed]
---
0x53a JUMPDEST
0x53b POP
0x53c PUSH1 0x40
0x53e DUP1
0x53f MLOAD
0x540 DUP3
0x541 DUP2
0x542 MSTORE
0x543 SWAP1
0x544 MLOAD
0x545 PUSH1 0x1
0x547 PUSH1 0xa0
0x549 PUSH1 0x2
0x54b EXP
0x54c SUB
0x54d DUP5
0x54e AND
0x54f SWAP2
0x550 PUSH32 0x7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5
0x571 SWAP2
0x572 SWAP1
0x573 DUP2
0x574 SWAP1
0x575 SUB
0x576 PUSH1 0x20
0x578 ADD
0x579 SWAP1
0x57a LOG2
0x57b POP
0x57c POP
0x57d JUMP
---
0x53a: JUMPDEST 
0x53c: V458 = 0x40
0x53f: V459 = M[0x40]
0x542: M[V459] = V429
0x544: V460 = M[0x40]
0x545: V461 = 0x1
0x547: V462 = 0xa0
0x549: V463 = 0x2
0x54b: V464 = EXP 0x2 0xa0
0x54c: V465 = SUB 0x10000000000000000000000000000000000000000 0x1
0x54e: V466 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x550: V467 = 0x7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5
0x575: V468 = SUB V459 V460
0x576: V469 = 0x20
0x578: V470 = ADD 0x20 V468
0x57a: LOG V460 V470 0x7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5 V466
0x57d: JUMP 0x2ed
---
Entry stack: [V11, 0x104, S4, 0x2ed, S2, V429, V451]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x104, S4]

================================

Block 0x57e
[0x57e:0x58e]
---
Predecessors: [0x48a]
Successors: [0x58f, 0x593]
---
0x57e JUMPDEST
0x57f PUSH1 0x1
0x581 PUSH1 0xa0
0x583 PUSH1 0x2
0x585 EXP
0x586 SUB
0x587 DUP2
0x588 AND
0x589 ISZERO
0x58a ISZERO
0x58b PUSH2 0x593
0x58e JUMPI
---
0x57e: JUMPDEST 
0x57f: V471 = 0x1
0x581: V472 = 0xa0
0x583: V473 = 0x2
0x585: V474 = EXP 0x2 0xa0
0x586: V475 = SUB 0x10000000000000000000000000000000000000000 0x1
0x588: V476 = AND V184 0xffffffffffffffffffffffffffffffffffffffff
0x589: V477 = ISZERO V476
0x58a: V478 = ISZERO V477
0x58b: V479 = 0x593
0x58e: JUMPI 0x593 V478
---
Entry stack: [V11, 0x104, V184, 0x2ed, V184]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x104, V184, 0x2ed, V184]

================================

Block 0x58f
[0x58f:0x592]
---
Predecessors: [0x57e]
Successors: []
---
0x58f PUSH1 0x0
0x591 DUP1
0x592 REVERT
---
0x58f: V480 = 0x0
0x592: REVERT 0x0 0x0
---
Entry stack: [V11, 0x104, V184, 0x2ed, V184]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104, V184, 0x2ed, V184]

================================

Block 0x593
[0x593:0x5fa]
---
Predecessors: [0x57e]
Successors: [0x2ed]
---
0x593 JUMPDEST
0x594 PUSH1 0x0
0x596 DUP1
0x597 SLOAD
0x598 PUSH1 0x40
0x59a MLOAD
0x59b PUSH1 0x1
0x59d PUSH1 0xa0
0x59f PUSH1 0x2
0x5a1 EXP
0x5a2 SUB
0x5a3 DUP1
0x5a4 DUP6
0x5a5 AND
0x5a6 SWAP4
0x5a7 SWAP3
0x5a8 AND
0x5a9 SWAP2
0x5aa PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x5cb SWAP2
0x5cc LOG3
0x5cd PUSH1 0x0
0x5cf DUP1
0x5d0 SLOAD
0x5d1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5e6 NOT
0x5e7 AND
0x5e8 PUSH1 0x1
0x5ea PUSH1 0xa0
0x5ec PUSH1 0x2
0x5ee EXP
0x5ef SUB
0x5f0 SWAP3
0x5f1 SWAP1
0x5f2 SWAP3
0x5f3 AND
0x5f4 SWAP2
0x5f5 SWAP1
0x5f6 SWAP2
0x5f7 OR
0x5f8 SWAP1
0x5f9 SSTORE
0x5fa JUMP
---
0x593: JUMPDEST 
0x594: V481 = 0x0
0x597: V482 = S[0x0]
0x598: V483 = 0x40
0x59a: V484 = M[0x40]
0x59b: V485 = 0x1
0x59d: V486 = 0xa0
0x59f: V487 = 0x2
0x5a1: V488 = EXP 0x2 0xa0
0x5a2: V489 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5a5: V490 = AND V184 0xffffffffffffffffffffffffffffffffffffffff
0x5a8: V491 = AND V482 0xffffffffffffffffffffffffffffffffffffffff
0x5aa: V492 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x5cc: LOG V484 0x0 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V491 V490
0x5cd: V493 = 0x0
0x5d0: V494 = S[0x0]
0x5d1: V495 = 0xffffffffffffffffffffffffffffffffffffffff
0x5e6: V496 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x5e7: V497 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V494
0x5e8: V498 = 0x1
0x5ea: V499 = 0xa0
0x5ec: V500 = 0x2
0x5ee: V501 = EXP 0x2 0xa0
0x5ef: V502 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5f3: V503 = AND 0xffffffffffffffffffffffffffffffffffffffff V184
0x5f7: V504 = OR V503 V497
0x5f9: S[0x0] = V504
0x5fa: JUMP 0x2ed
---
Entry stack: [V11, 0x104, V184, 0x2ed, V184]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x104, V184]

================================

Block 0x5fb
[0x5fb:0x60e]
---
Predecessors: [0x4b0]
Successors: [0x60f, 0x613]
---
0x5fb JUMPDEST
0x5fc PUSH1 0x0
0x5fe DUP1
0x5ff SLOAD
0x600 PUSH1 0x1
0x602 PUSH1 0xa0
0x604 PUSH1 0x2
0x606 EXP
0x607 SUB
0x608 AND
0x609 CALLER
0x60a EQ
0x60b PUSH2 0x613
0x60e JUMPI
---
0x5fb: JUMPDEST 
0x5fc: V505 = 0x0
0x5ff: V506 = S[0x0]
0x600: V507 = 0x1
0x602: V508 = 0xa0
0x604: V509 = 0x2
0x606: V510 = EXP 0x2 0xa0
0x607: V511 = SUB 0x10000000000000000000000000000000000000000 0x1
0x608: V512 = AND 0xffffffffffffffffffffffffffffffffffffffff V506
0x609: V513 = CALLER
0x60a: V514 = EQ V513 V512
0x60b: V515 = 0x613
0x60e: JUMPI 0x613 V514
---
Entry stack: [V11, 0x104, V194, 0x2ed, V194]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x104, V194, 0x2ed, V194, 0x0]

================================

Block 0x60f
[0x60f:0x612]
---
Predecessors: [0x5fb]
Successors: []
---
0x60f PUSH1 0x0
0x611 DUP1
0x612 REVERT
---
0x60f: V516 = 0x0
0x612: REVERT 0x0 0x0
---
Entry stack: [V11, 0x104, V194, 0x2ed, V194, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104, V194, 0x2ed, V194, 0x0]

================================

Block 0x613
[0x613:0x63e]
---
Predecessors: [0x5fb]
Successors: [0x695]
---
0x613 JUMPDEST
0x614 POP
0x615 PUSH1 0x1
0x617 PUSH1 0xa0
0x619 PUSH1 0x2
0x61b EXP
0x61c SUB
0x61d DUP2
0x61e AND
0x61f PUSH1 0x0
0x621 SWAP1
0x622 DUP2
0x623 MSTORE
0x624 PUSH1 0x1
0x626 PUSH1 0x20
0x628 MSTORE
0x629 PUSH1 0x40
0x62b SWAP1
0x62c SHA3
0x62d SLOAD
0x62e CALLVALUE
0x62f SWAP1
0x630 PUSH2 0x63f
0x633 SWAP1
0x634 DUP3
0x635 PUSH4 0xffffffff
0x63a PUSH2 0x695
0x63d AND
0x63e JUMP
---
0x613: JUMPDEST 
0x615: V517 = 0x1
0x617: V518 = 0xa0
0x619: V519 = 0x2
0x61b: V520 = EXP 0x2 0xa0
0x61c: V521 = SUB 0x10000000000000000000000000000000000000000 0x1
0x61e: V522 = AND V194 0xffffffffffffffffffffffffffffffffffffffff
0x61f: V523 = 0x0
0x623: M[0x0] = V522
0x624: V524 = 0x1
0x626: V525 = 0x20
0x628: M[0x20] = 0x1
0x629: V526 = 0x40
0x62c: V527 = SHA3 0x0 0x40
0x62d: V528 = S[V527]
0x62e: V529 = CALLVALUE
0x630: V530 = 0x63f
0x635: V531 = 0xffffffff
0x63a: V532 = 0x695
0x63d: V533 = AND 0x695 0xffffffff
0x63e: JUMP 0x695
---
Entry stack: [V11, 0x104, V194, 0x2ed, V194, 0x0]
Stack pops: 2
Stack additions: [S1, V529, 0x63f, V528, V529]
Exit stack: [V11, 0x104, V194, 0x2ed, V194, V529, 0x63f, V528, V529]

================================

Block 0x63f
[0x63f:0x694]
---
Predecessors: [0x6a2]
Successors: [0x2ed]
---
0x63f JUMPDEST
0x640 PUSH1 0x1
0x642 PUSH1 0xa0
0x644 PUSH1 0x2
0x646 EXP
0x647 SUB
0x648 DUP4
0x649 AND
0x64a PUSH1 0x0
0x64c DUP2
0x64d DUP2
0x64e MSTORE
0x64f PUSH1 0x1
0x651 PUSH1 0x20
0x653 SWAP1
0x654 DUP2
0x655 MSTORE
0x656 PUSH1 0x40
0x658 SWAP2
0x659 DUP3
0x65a SWAP1
0x65b SHA3
0x65c SWAP4
0x65d SWAP1
0x65e SWAP4
0x65f SSTORE
0x660 DUP1
0x661 MLOAD
0x662 DUP5
0x663 DUP2
0x664 MSTORE
0x665 SWAP1
0x666 MLOAD
0x667 SWAP2
0x668 SWAP3
0x669 PUSH32 0x2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4
0x68a SWAP3
0x68b SWAP2
0x68c DUP3
0x68d SWAP1
0x68e SUB
0x68f ADD
0x690 SWAP1
0x691 LOG2
0x692 POP
0x693 POP
0x694 JUMP
---
0x63f: JUMPDEST 
0x640: V534 = 0x1
0x642: V535 = 0xa0
0x644: V536 = 0x2
0x646: V537 = EXP 0x2 0xa0
0x647: V538 = SUB 0x10000000000000000000000000000000000000000 0x1
0x649: V539 = AND V194 0xffffffffffffffffffffffffffffffffffffffff
0x64a: V540 = 0x0
0x64e: M[0x0] = V539
0x64f: V541 = 0x1
0x651: V542 = 0x20
0x655: M[0x20] = 0x1
0x656: V543 = 0x40
0x65b: V544 = SHA3 0x0 0x40
0x65f: S[V544] = V550
0x661: V545 = M[0x40]
0x664: M[V545] = V529
0x666: V546 = M[0x40]
0x669: V547 = 0x2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4
0x68e: V548 = SUB V545 V546
0x68f: V549 = ADD V548 0x20
0x691: LOG V546 V549 0x2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4 V539
0x694: JUMP 0x2ed
---
Entry stack: [V11, 0x104, V194, 0x2ed, V194, V529, V550]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x104, V194]

================================

Block 0x695
[0x695:0x6a0]
---
Predecessors: [0x613]
Successors: [0x6a1, 0x6a2]
---
0x695 JUMPDEST
0x696 DUP2
0x697 DUP2
0x698 ADD
0x699 DUP3
0x69a DUP2
0x69b LT
0x69c ISZERO
0x69d PUSH2 0x6a2
0x6a0 JUMPI
---
0x695: JUMPDEST 
0x698: V550 = ADD V529 V528
0x69b: V551 = LT V550 V528
0x69c: V552 = ISZERO V551
0x69d: V553 = 0x6a2
0x6a0: JUMPI 0x6a2 V552
---
Entry stack: [V11, 0x104, V194, 0x2ed, V194, V529, 0x63f, V528, V529]
Stack pops: 2
Stack additions: [S1, S0, V550]
Exit stack: [V11, 0x104, V194, 0x2ed, V194, V529, 0x63f, V528, V529, V550]

================================

Block 0x6a1
[0x6a1:0x6a1]
---
Predecessors: [0x695]
Successors: []
---
0x6a1 INVALID
---
0x6a1: INVALID 
---
Entry stack: [V11, 0x104, V194, 0x2ed, V194, V529, 0x63f, V528, V529, V550]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x104, V194, 0x2ed, V194, V529, 0x63f, V528, V529, V550]

================================

Block 0x6a2
[0x6a2:0x6a7]
---
Predecessors: [0x695]
Successors: [0x63f]
---
0x6a2 JUMPDEST
0x6a3 SWAP3
0x6a4 SWAP2
0x6a5 POP
0x6a6 POP
0x6a7 JUMP
---
0x6a2: JUMPDEST 
0x6a7: JUMP 0x63f
---
Entry stack: [V11, 0x104, V194, 0x2ed, V194, V529, 0x63f, V528, V529, V550]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V11, 0x104, V194, 0x2ed, V194, V529, V550]

================================

Block 0x6a8
[0x6a8:0x6d3]
---
Predecessors: []
Successors: []
---
0x6a8 STOP
0x6a9 LOG1
0x6aa PUSH6 0x627a7a723058
0x6b1 SHA3
0x6b2 PUSH3 0x32c01b
0x6b6 CALLDATACOPY
0x6b7 PUSH21 0xf8253b6fb2e7154923e63add4625332323a843c975
0x6cd STATICCALL
0x6ce PUSH3 0x2a4902
0x6d2 STOP
0x6d3 MISSING 0x29
---
0x6a8: STOP 
0x6a9: LOG S0 S1 S2
0x6aa: V554 = 0x627a7a723058
0x6b1: V555 = SHA3 0x627a7a723058 S3
0x6b2: V556 = 0x32c01b
0x6b6: CALLDATACOPY 0x32c01b V555 S4
0x6b7: V557 = 0xf8253b6fb2e7154923e63add4625332323a843c975
0x6cd: V558 = STATICCALL 0xf8253b6fb2e7154923e63add4625332323a843c975 S5 S6 S7 S8 S9
0x6ce: V559 = 0x2a4902
0x6d2: STOP 
0x6d3: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0x2a4902, V558]
Exit stack: []

================================

Function 0:
Public function signature: 0x38af3eed
Entry block: 0xbe
Exit block: 0xd3
Body: 0xbe, 0xc6, 0xca, 0xd3, 0x251

Function 1:
Public function signature: 0x43d726d6
Entry block: 0xef
Exit block: 0x104
Body: 0xef, 0xf7, 0xfb, 0x104, 0x265, 0x278, 0x27c, 0x28e, 0x28f, 0x295, 0x299

Function 2:
Public function signature: 0x51cff8d9
Entry block: 0x106
Exit block: 0x104
Body: 0x104, 0x106, 0x10e, 0x112, 0x2d0, 0x2d9, 0x2e0, 0x2e4, 0x2ed, 0x4b9, 0x4cd, 0x4d1, 0x4f5, 0x4f6, 0x531, 0x53a

Function 3:
Public function signature: 0x685ca194
Entry block: 0x127
Exit block: 0x12f
Body: 0x127, 0x12f, 0x133, 0x148

Function 4:
Public function signature: 0x715018a6
Entry block: 0x15c
Exit block: 0x104
Body: 0x104, 0x15c, 0x164, 0x168, 0x30c, 0x31f, 0x323

Function 5:
Public function signature: 0x8c52dc41
Entry block: 0x171
Exit block: 0x104
Body: 0x104, 0x171, 0x179, 0x17d, 0x378, 0x38b, 0x38f, 0x3a1, 0x3a2, 0x3a8, 0x3ac

Function 6:
Public function signature: 0x8da5cb5b
Entry block: 0x186
Exit block: 0xd3
Body: 0xd3, 0x186, 0x18e, 0x192, 0x3e4

Function 7:
Public function signature: 0x9af6549a
Entry block: 0x19b
Exit block: 0x104
Body: 0x104, 0x19b, 0x1a3, 0x1a7, 0x2ed, 0x3f3, 0x403, 0x404, 0x40a, 0x40e, 0x446

Function 8:
Public function signature: 0xc19d93fb
Entry block: 0x1b0
Exit block: 0x1d4
Body: 0x1b0, 0x1b8, 0x1bc, 0x1c5, 0x1d4, 0x1d5, 0x44f

Function 9:
Public function signature: 0xe3a9db1a
Entry block: 0x1e9
Exit block: 0x20a
Body: 0x1e9, 0x1f1, 0x1f5, 0x20a, 0x458

Function 10:
Public function signature: 0xf2fde38b
Entry block: 0x21c
Exit block: 0x104
Body: 0x104, 0x21c, 0x224, 0x228, 0x2ed, 0x473, 0x486, 0x48a, 0x57e, 0x58f, 0x593

Function 11:
Public function signature: 0xf340fa01
Entry block: 0x23d
Exit block: 0x104
Body: 0x104, 0x23d, 0x2ed, 0x493, 0x4a5, 0x4a6, 0x4ac, 0x4b0, 0x5fb, 0x60f, 0x613, 0x63f, 0x695, 0x6a1, 0x6a2

Function 12:
Public fallback function
Entry block: 0xb9
Exit block: 0xb9
Body: 0xb9

Function 13:
Private function
Entry block: 0x2f0
Exit block: 0x305
Body: 0x2f0, 0x305

