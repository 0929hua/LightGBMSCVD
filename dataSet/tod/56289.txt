Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xd8]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xd8
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xd8
0xa: JUMPI 0xd8 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0xe4]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x22a7ac34
0x38 DUP2
0x39 EQ
0x3a PUSH2 0xe4
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x22a7ac34
0x39: V12 = EQ V10 0x22a7ac34
0x3a: V13 = 0xe4
0x3d: JUMPI 0xe4 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x109]
---
0x3e DUP1
0x3f PUSH4 0x41c0e1b5
0x44 EQ
0x45 PUSH2 0x109
0x48 JUMPI
---
0x3f: V14 = 0x41c0e1b5
0x44: V15 = EQ 0x41c0e1b5 V10
0x45: V16 = 0x109
0x48: JUMPI 0x109 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x11e]
---
0x49 DUP1
0x4a PUSH4 0x5c975abb
0x4f EQ
0x50 PUSH2 0x11e
0x53 JUMPI
---
0x4a: V17 = 0x5c975abb
0x4f: V18 = EQ 0x5c975abb V10
0x50: V19 = 0x11e
0x53: JUMPI 0x11e V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x145]
---
0x54 DUP1
0x55 PUSH4 0xb2d5ae44
0x5a EQ
0x5b PUSH2 0x145
0x5e JUMPI
---
0x55: V20 = 0xb2d5ae44
0x5a: V21 = EQ 0xb2d5ae44 V10
0x5b: V22 = 0x145
0x5e: JUMPI 0x145 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x15a]
---
0x5f DUP1
0x60 PUSH4 0xb375603c
0x65 EQ
0x66 PUSH2 0x15a
0x69 JUMPI
---
0x60: V23 = 0xb375603c
0x65: V24 = EQ 0xb375603c V10
0x66: V25 = 0x15a
0x69: JUMPI 0x15a V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x17f]
---
0x6a DUP1
0x6b PUSH4 0xb4894b1d
0x70 EQ
0x71 PUSH2 0x17f
0x74 JUMPI
---
0x6b: V26 = 0xb4894b1d
0x70: V27 = EQ 0xb4894b1d V10
0x71: V28 = 0x17f
0x74: JUMPI 0x17f V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x1a7]
---
0x75 DUP1
0x76 PUSH4 0xc33b76c6
0x7b EQ
0x7c PUSH2 0x1a7
0x7f JUMPI
---
0x76: V29 = 0xc33b76c6
0x7b: V30 = EQ 0xc33b76c6 V10
0x7c: V31 = 0x1a7
0x7f: JUMPI 0x1a7 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x1d6]
---
0x80 DUP1
0x81 PUSH4 0xc4ae3168
0x86 EQ
0x87 PUSH2 0x1d6
0x8a JUMPI
---
0x81: V32 = 0xc4ae3168
0x86: V33 = EQ 0xc4ae3168 V10
0x87: V34 = 0x1d6
0x8a: JUMPI 0x1d6 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x95]
---
Predecessors: [0x80]
Successors: [0x96, 0x1eb]
---
0x8b DUP1
0x8c PUSH4 0xc7dbbc47
0x91 EQ
0x92 PUSH2 0x1eb
0x95 JUMPI
---
0x8c: V35 = 0xc7dbbc47
0x91: V36 = EQ 0xc7dbbc47 V10
0x92: V37 = 0x1eb
0x95: JUMPI 0x1eb V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x96
[0x96:0xa0]
---
Predecessors: [0x8b]
Successors: [0xa1, 0xd8]
---
0x96 DUP1
0x97 PUSH4 0xc8199826
0x9c EQ
0x9d PUSH2 0xd8
0xa0 JUMPI
---
0x97: V38 = 0xc8199826
0x9c: V39 = EQ 0xc8199826 V10
0x9d: V40 = 0xd8
0xa0: JUMPI 0xd8 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa1
[0xa1:0xab]
---
Predecessors: [0x96]
Successors: [0xac, 0x21a]
---
0xa1 DUP1
0xa2 PUSH4 0xdd11247e
0xa7 EQ
0xa8 PUSH2 0x21a
0xab JUMPI
---
0xa2: V41 = 0xdd11247e
0xa7: V42 = EQ 0xdd11247e V10
0xa8: V43 = 0x21a
0xab: JUMPI 0x21a V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xac
[0xac:0xb6]
---
Predecessors: [0xa1]
Successors: [0xb7, 0x23f]
---
0xac DUP1
0xad PUSH4 0xdfd50f52
0xb2 EQ
0xb3 PUSH2 0x23f
0xb6 JUMPI
---
0xad: V44 = 0xdfd50f52
0xb2: V45 = EQ 0xdfd50f52 V10
0xb3: V46 = 0x23f
0xb6: JUMPI 0x23f V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xb7
[0xb7:0xc1]
---
Predecessors: [0xac]
Successors: [0xc2, 0x277]
---
0xb7 DUP1
0xb8 PUSH4 0xe3ac5d26
0xbd EQ
0xbe PUSH2 0x277
0xc1 JUMPI
---
0xb8: V47 = 0xe3ac5d26
0xbd: V48 = EQ 0xe3ac5d26 V10
0xbe: V49 = 0x277
0xc1: JUMPI 0x277 V48
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xc2
[0xc2:0xcc]
---
Predecessors: [0xb7]
Successors: [0xcd, 0x29c]
---
0xc2 DUP1
0xc3 PUSH4 0xe9874106
0xc8 EQ
0xc9 PUSH2 0x29c
0xcc JUMPI
---
0xc3: V50 = 0xe9874106
0xc8: V51 = EQ 0xe9874106 V10
0xc9: V52 = 0x29c
0xcc: JUMPI 0x29c V51
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xcd
[0xcd:0xd7]
---
Predecessors: [0xc2]
Successors: [0xd8, 0x2c1]
---
0xcd DUP1
0xce PUSH4 0xee095c0e
0xd3 EQ
0xd4 PUSH2 0x2c1
0xd7 JUMPI
---
0xce: V53 = 0xee095c0e
0xd3: V54 = EQ 0xee095c0e V10
0xd4: V55 = 0x2c1
0xd7: JUMPI 0x2c1 V54
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xd8
[0xd8:0xd8]
---
Predecessors: [0x0, 0x96, 0xcd]
Successors: [0xd9]
---
0xd8 JUMPDEST
---
0xd8: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xd9
[0xd9:0xe0]
---
Predecessors: [0xd8]
Successors: [0x2d6]
---
0xd9 JUMPDEST
0xda PUSH2 0xe1
0xdd PUSH2 0x2d6
0xe0 JUMP
---
0xd9: JUMPDEST 
0xda: V56 = 0xe1
0xdd: V57 = 0x2d6
0xe0: JUMP 0x2d6
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xe1]
Exit stack: [V10, 0xe1]

================================

Block 0xe1
[0xe1:0xe1]
---
Predecessors: [0x4af, 0x4e4, 0x6c5, 0x8d6]
Successors: [0xe2]
---
0xe1 JUMPDEST
---
0xe1: JUMPDEST 
---
Entry stack: [V10, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S2, S1, S0]

================================

Block 0xe2
[0xe2:0xe3]
---
Predecessors: [0xe1]
Successors: []
---
0xe2 JUMPDEST
0xe3 STOP
---
0xe2: JUMPDEST 
0xe3: STOP 
---
Entry stack: [V10, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S2, S1, S0]

================================

Block 0xe4
[0xe4:0xea]
---
Predecessors: [0xb]
Successors: [0xeb, 0xef]
---
0xe4 JUMPDEST
0xe5 CALLVALUE
0xe6 ISZERO
0xe7 PUSH2 0xef
0xea JUMPI
---
0xe4: JUMPDEST 
0xe5: V58 = CALLVALUE
0xe6: V59 = ISZERO V58
0xe7: V60 = 0xef
0xea: JUMPI 0xef V59
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xeb
[0xeb:0xee]
---
Predecessors: [0xe4]
Successors: []
---
0xeb PUSH1 0x0
0xed DUP1
0xee REVERT
---
0xeb: V61 = 0x0
0xee: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xef
[0xef:0xf6]
---
Predecessors: [0xe4]
Successors: [0x4b3]
---
0xef JUMPDEST
0xf0 PUSH2 0xf7
0xf3 PUSH2 0x4b3
0xf6 JUMP
---
0xef: JUMPDEST 
0xf0: V62 = 0xf7
0xf3: V63 = 0x4b3
0xf6: JUMP 0x4b3
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xf7]
Exit stack: [V10, 0xf7]

================================

Block 0xf7
[0xf7:0x108]
---
Predecessors: [0x4b3, 0x662, 0x684, 0x6c7, 0x6cd, 0x6f7, 0x70f]
Successors: []
---
0xf7 JUMPDEST
0xf8 PUSH1 0x40
0xfa MLOAD
0xfb SWAP1
0xfc DUP2
0xfd MSTORE
0xfe PUSH1 0x20
0x100 ADD
0x101 PUSH1 0x40
0x103 MLOAD
0x104 DUP1
0x105 SWAP2
0x106 SUB
0x107 SWAP1
0x108 RETURN
---
0xf7: JUMPDEST 
0xf8: V64 = 0x40
0xfa: V65 = M[0x40]
0xfd: M[V65] = S0
0xfe: V66 = 0x20
0x100: V67 = ADD 0x20 V65
0x101: V68 = 0x40
0x103: V69 = M[0x40]
0x106: V70 = SUB V67 V69
0x108: RETURN V69 V70
---
Entry stack: [V10, 0xf7, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xf7]

================================

Block 0x109
[0x109:0x10f]
---
Predecessors: [0x3e]
Successors: [0x110, 0x114]
---
0x109 JUMPDEST
0x10a CALLVALUE
0x10b ISZERO
0x10c PUSH2 0x114
0x10f JUMPI
---
0x109: JUMPDEST 
0x10a: V71 = CALLVALUE
0x10b: V72 = ISZERO V71
0x10c: V73 = 0x114
0x10f: JUMPI 0x114 V72
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x110
[0x110:0x113]
---
Predecessors: [0x109]
Successors: []
---
0x110 PUSH1 0x0
0x112 DUP1
0x113 REVERT
---
0x110: V74 = 0x0
0x113: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x114
[0x114:0x11b]
---
Predecessors: [0x109]
Successors: [0x4be]
---
0x114 JUMPDEST
0x115 PUSH2 0xe1
0x118 PUSH2 0x4be
0x11b JUMP
---
0x114: JUMPDEST 
0x115: V75 = 0xe1
0x118: V76 = 0x4be
0x11b: JUMP 0x4be
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xe1]
Exit stack: [V10, 0xe1]

================================

Block 0x11c
[0x11c:0x11d]
---
Predecessors: []
Successors: []
---
0x11c JUMPDEST
0x11d STOP
---
0x11c: JUMPDEST 
0x11d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x11e
[0x11e:0x124]
---
Predecessors: [0x49]
Successors: [0x125, 0x129]
---
0x11e JUMPDEST
0x11f CALLVALUE
0x120 ISZERO
0x121 PUSH2 0x129
0x124 JUMPI
---
0x11e: JUMPDEST 
0x11f: V77 = CALLVALUE
0x120: V78 = ISZERO V77
0x121: V79 = 0x129
0x124: JUMPI 0x129 V78
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x125
[0x125:0x128]
---
Predecessors: [0x11e]
Successors: []
---
0x125 PUSH1 0x0
0x127 DUP1
0x128 REVERT
---
0x125: V80 = 0x0
0x128: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x129
[0x129:0x130]
---
Predecessors: [0x11e]
Successors: [0x4e6]
---
0x129 JUMPDEST
0x12a PUSH2 0x131
0x12d PUSH2 0x4e6
0x130 JUMP
---
0x129: JUMPDEST 
0x12a: V81 = 0x131
0x12d: V82 = 0x4e6
0x130: JUMP 0x4e6
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x131]
Exit stack: [V10, 0x131]

================================

Block 0x131
[0x131:0x144]
---
Predecessors: [0x4e6]
Successors: []
---
0x131 JUMPDEST
0x132 PUSH1 0x40
0x134 MLOAD
0x135 SWAP1
0x136 ISZERO
0x137 ISZERO
0x138 DUP2
0x139 MSTORE
0x13a PUSH1 0x20
0x13c ADD
0x13d PUSH1 0x40
0x13f MLOAD
0x140 DUP1
0x141 SWAP2
0x142 SUB
0x143 SWAP1
0x144 RETURN
---
0x131: JUMPDEST 
0x132: V83 = 0x40
0x134: V84 = M[0x40]
0x136: V85 = ISZERO V425
0x137: V86 = ISZERO V85
0x139: M[V84] = V86
0x13a: V87 = 0x20
0x13c: V88 = ADD 0x20 V84
0x13d: V89 = 0x40
0x13f: V90 = M[0x40]
0x142: V91 = SUB V88 V90
0x144: RETURN V90 V91
---
Entry stack: [V10, 0x131, V425]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x131]

================================

Block 0x145
[0x145:0x14b]
---
Predecessors: [0x54]
Successors: [0x14c, 0x150]
---
0x145 JUMPDEST
0x146 CALLVALUE
0x147 ISZERO
0x148 PUSH2 0x150
0x14b JUMPI
---
0x145: JUMPDEST 
0x146: V92 = CALLVALUE
0x147: V93 = ISZERO V92
0x148: V94 = 0x150
0x14b: JUMPI 0x150 V93
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x14c
[0x14c:0x14f]
---
Predecessors: [0x145]
Successors: []
---
0x14c PUSH1 0x0
0x14e DUP1
0x14f REVERT
---
0x14c: V95 = 0x0
0x14f: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x150
[0x150:0x157]
---
Predecessors: [0x145]
Successors: [0x4ef]
---
0x150 JUMPDEST
0x151 PUSH2 0xe1
0x154 PUSH2 0x4ef
0x157 JUMP
---
0x150: JUMPDEST 
0x151: V96 = 0xe1
0x154: V97 = 0x4ef
0x157: JUMP 0x4ef
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xe1]
Exit stack: [V10, 0xe1]

================================

Block 0x158
[0x158:0x159]
---
Predecessors: []
Successors: []
---
0x158 JUMPDEST
0x159 STOP
---
0x158: JUMPDEST 
0x159: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x15a
[0x15a:0x160]
---
Predecessors: [0x5f]
Successors: [0x161, 0x165]
---
0x15a JUMPDEST
0x15b CALLVALUE
0x15c ISZERO
0x15d PUSH2 0x165
0x160 JUMPI
---
0x15a: JUMPDEST 
0x15b: V98 = CALLVALUE
0x15c: V99 = ISZERO V98
0x15d: V100 = 0x165
0x160: JUMPI 0x165 V99
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x161
[0x161:0x164]
---
Predecessors: [0x15a]
Successors: []
---
0x161 PUSH1 0x0
0x163 DUP1
0x164 REVERT
---
0x161: V101 = 0x0
0x164: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x165
[0x165:0x16c]
---
Predecessors: [0x15a]
Successors: [0x662]
---
0x165 JUMPDEST
0x166 PUSH2 0xf7
0x169 PUSH2 0x662
0x16c JUMP
---
0x165: JUMPDEST 
0x166: V102 = 0xf7
0x169: V103 = 0x662
0x16c: JUMP 0x662
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xf7]
Exit stack: [V10, 0xf7]

================================

Block 0x16d
[0x16d:0x17e]
---
Predecessors: []
Successors: []
---
0x16d JUMPDEST
0x16e PUSH1 0x40
0x170 MLOAD
0x171 SWAP1
0x172 DUP2
0x173 MSTORE
0x174 PUSH1 0x20
0x176 ADD
0x177 PUSH1 0x40
0x179 MLOAD
0x17a DUP1
0x17b SWAP2
0x17c SUB
0x17d SWAP1
0x17e RETURN
---
0x16d: JUMPDEST 
0x16e: V104 = 0x40
0x170: V105 = M[0x40]
0x173: M[V105] = S0
0x174: V106 = 0x20
0x176: V107 = ADD 0x20 V105
0x177: V108 = 0x40
0x179: V109 = M[0x40]
0x17c: V110 = SUB V107 V109
0x17e: RETURN V109 V110
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x17f
[0x17f:0x185]
---
Predecessors: [0x6a]
Successors: [0x186, 0x18a]
---
0x17f JUMPDEST
0x180 CALLVALUE
0x181 ISZERO
0x182 PUSH2 0x18a
0x185 JUMPI
---
0x17f: JUMPDEST 
0x180: V111 = CALLVALUE
0x181: V112 = ISZERO V111
0x182: V113 = 0x18a
0x185: JUMPI 0x18a V112
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x186
[0x186:0x189]
---
Predecessors: [0x17f]
Successors: []
---
0x186 PUSH1 0x0
0x188 DUP1
0x189 REVERT
---
0x186: V114 = 0x0
0x189: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x18a
[0x18a:0x194]
---
Predecessors: [0x17f]
Successors: [0x668]
---
0x18a JUMPDEST
0x18b PUSH2 0xf7
0x18e PUSH1 0x4
0x190 CALLDATALOAD
0x191 PUSH2 0x668
0x194 JUMP
---
0x18a: JUMPDEST 
0x18b: V115 = 0xf7
0x18e: V116 = 0x4
0x190: V117 = CALLDATALOAD 0x4
0x191: V118 = 0x668
0x194: JUMP 0x668
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xf7, V117]
Exit stack: [V10, 0xf7, V117]

================================

Block 0x195
[0x195:0x1a6]
---
Predecessors: []
Successors: []
---
0x195 JUMPDEST
0x196 PUSH1 0x40
0x198 MLOAD
0x199 SWAP1
0x19a DUP2
0x19b MSTORE
0x19c PUSH1 0x20
0x19e ADD
0x19f PUSH1 0x40
0x1a1 MLOAD
0x1a2 DUP1
0x1a3 SWAP2
0x1a4 SUB
0x1a5 SWAP1
0x1a6 RETURN
---
0x195: JUMPDEST 
0x196: V119 = 0x40
0x198: V120 = M[0x40]
0x19b: M[V120] = S0
0x19c: V121 = 0x20
0x19e: V122 = ADD 0x20 V120
0x19f: V123 = 0x40
0x1a1: V124 = M[0x40]
0x1a4: V125 = SUB V122 V124
0x1a6: RETURN V124 V125
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1a7
[0x1a7:0x1ad]
---
Predecessors: [0x75]
Successors: [0x1ae, 0x1b2]
---
0x1a7 JUMPDEST
0x1a8 CALLVALUE
0x1a9 ISZERO
0x1aa PUSH2 0x1b2
0x1ad JUMPI
---
0x1a7: JUMPDEST 
0x1a8: V126 = CALLVALUE
0x1a9: V127 = ISZERO V126
0x1aa: V128 = 0x1b2
0x1ad: JUMPI 0x1b2 V127
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ae
[0x1ae:0x1b1]
---
Predecessors: [0x1a7]
Successors: []
---
0x1ae PUSH1 0x0
0x1b0 DUP1
0x1b1 REVERT
---
0x1ae: V129 = 0x0
0x1b1: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1b2
[0x1b2:0x1b9]
---
Predecessors: [0x1a7]
Successors: [0x68b]
---
0x1b2 JUMPDEST
0x1b3 PUSH2 0x1ba
0x1b6 PUSH2 0x68b
0x1b9 JUMP
---
0x1b2: JUMPDEST 
0x1b3: V130 = 0x1ba
0x1b6: V131 = 0x68b
0x1b9: JUMP 0x68b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1ba]
Exit stack: [V10, 0x1ba]

================================

Block 0x1ba
[0x1ba:0x1d5]
---
Predecessors: [0x68b]
Successors: []
---
0x1ba JUMPDEST
0x1bb PUSH1 0x40
0x1bd MLOAD
0x1be PUSH1 0x1
0x1c0 PUSH1 0xa0
0x1c2 PUSH1 0x2
0x1c4 EXP
0x1c5 SUB
0x1c6 SWAP1
0x1c7 SWAP2
0x1c8 AND
0x1c9 DUP2
0x1ca MSTORE
0x1cb PUSH1 0x20
0x1cd ADD
0x1ce PUSH1 0x40
0x1d0 MLOAD
0x1d1 DUP1
0x1d2 SWAP2
0x1d3 SUB
0x1d4 SWAP1
0x1d5 RETURN
---
0x1ba: JUMPDEST 
0x1bb: V132 = 0x40
0x1bd: V133 = M[0x40]
0x1be: V134 = 0x1
0x1c0: V135 = 0xa0
0x1c2: V136 = 0x2
0x1c4: V137 = EXP 0x2 0xa0
0x1c5: V138 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c8: V139 = AND V569 0xffffffffffffffffffffffffffffffffffffffff
0x1ca: M[V133] = V139
0x1cb: V140 = 0x20
0x1cd: V141 = ADD 0x20 V133
0x1ce: V142 = 0x40
0x1d0: V143 = M[0x40]
0x1d3: V144 = SUB V141 V143
0x1d5: RETURN V143 V144
---
Entry stack: [V10, 0x1ba, V569]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1ba]

================================

Block 0x1d6
[0x1d6:0x1dc]
---
Predecessors: [0x80]
Successors: [0x1dd, 0x1e1]
---
0x1d6 JUMPDEST
0x1d7 CALLVALUE
0x1d8 ISZERO
0x1d9 PUSH2 0x1e1
0x1dc JUMPI
---
0x1d6: JUMPDEST 
0x1d7: V145 = CALLVALUE
0x1d8: V146 = ISZERO V145
0x1d9: V147 = 0x1e1
0x1dc: JUMPI 0x1e1 V146
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1dd
[0x1dd:0x1e0]
---
Predecessors: [0x1d6]
Successors: []
---
0x1dd PUSH1 0x0
0x1df DUP1
0x1e0 REVERT
---
0x1dd: V148 = 0x0
0x1e0: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1e1
[0x1e1:0x1e8]
---
Predecessors: [0x1d6]
Successors: [0x69a]
---
0x1e1 JUMPDEST
0x1e2 PUSH2 0xe1
0x1e5 PUSH2 0x69a
0x1e8 JUMP
---
0x1e1: JUMPDEST 
0x1e2: V149 = 0xe1
0x1e5: V150 = 0x69a
0x1e8: JUMP 0x69a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xe1]
Exit stack: [V10, 0xe1]

================================

Block 0x1e9
[0x1e9:0x1ea]
---
Predecessors: []
Successors: []
---
0x1e9 JUMPDEST
0x1ea STOP
---
0x1e9: JUMPDEST 
0x1ea: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1eb
[0x1eb:0x1f1]
---
Predecessors: [0x8b]
Successors: [0x1f2, 0x1f6]
---
0x1eb JUMPDEST
0x1ec CALLVALUE
0x1ed ISZERO
0x1ee PUSH2 0x1f6
0x1f1 JUMPI
---
0x1eb: JUMPDEST 
0x1ec: V151 = CALLVALUE
0x1ed: V152 = ISZERO V151
0x1ee: V153 = 0x1f6
0x1f1: JUMPI 0x1f6 V152
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1f2
[0x1f2:0x1f5]
---
Predecessors: [0x1eb]
Successors: []
---
0x1f2 PUSH1 0x0
0x1f4 DUP1
0x1f5 REVERT
---
0x1f2: V154 = 0x0
0x1f5: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1f6
[0x1f6:0x1fd]
---
Predecessors: [0x1eb]
Successors: [0x6c7]
---
0x1f6 JUMPDEST
0x1f7 PUSH2 0xf7
0x1fa PUSH2 0x6c7
0x1fd JUMP
---
0x1f6: JUMPDEST 
0x1f7: V155 = 0xf7
0x1fa: V156 = 0x6c7
0x1fd: JUMP 0x6c7
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xf7]
Exit stack: [V10, 0xf7]

================================

Block 0x1fe
[0x1fe:0x217]
---
Predecessors: []
Successors: [0x2d6]
---
0x1fe JUMPDEST
0x1ff PUSH1 0x40
0x201 MLOAD
0x202 SWAP1
0x203 DUP2
0x204 MSTORE
0x205 PUSH1 0x20
0x207 ADD
0x208 PUSH1 0x40
0x20a MLOAD
0x20b DUP1
0x20c SWAP2
0x20d SUB
0x20e SWAP1
0x20f RETURN
0x210 JUMPDEST
0x211 PUSH2 0xe1
0x214 PUSH2 0x2d6
0x217 JUMP
---
0x1fe: JUMPDEST 
0x1ff: V157 = 0x40
0x201: V158 = M[0x40]
0x204: M[V158] = S0
0x205: V159 = 0x20
0x207: V160 = ADD 0x20 V158
0x208: V161 = 0x40
0x20a: V162 = M[0x40]
0x20d: V163 = SUB V160 V162
0x20f: RETURN V162 V163
0x210: JUMPDEST 
0x211: V164 = 0xe1
0x214: V165 = 0x2d6
0x217: JUMP 0x2d6
---
Entry stack: []
Stack pops: 2
Stack additions: [0xe1]
Exit stack: []

================================

Block 0x218
[0x218:0x219]
---
Predecessors: []
Successors: []
---
0x218 JUMPDEST
0x219 STOP
---
0x218: JUMPDEST 
0x219: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x21a
[0x21a:0x220]
---
Predecessors: [0xa1]
Successors: [0x221, 0x225]
---
0x21a JUMPDEST
0x21b CALLVALUE
0x21c ISZERO
0x21d PUSH2 0x225
0x220 JUMPI
---
0x21a: JUMPDEST 
0x21b: V166 = CALLVALUE
0x21c: V167 = ISZERO V166
0x21d: V168 = 0x225
0x220: JUMPI 0x225 V167
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x221
[0x221:0x224]
---
Predecessors: [0x21a]
Successors: []
---
0x221 PUSH1 0x0
0x223 DUP1
0x224 REVERT
---
0x221: V169 = 0x0
0x224: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x225
[0x225:0x22c]
---
Predecessors: [0x21a]
Successors: [0x6cd]
---
0x225 JUMPDEST
0x226 PUSH2 0xf7
0x229 PUSH2 0x6cd
0x22c JUMP
---
0x225: JUMPDEST 
0x226: V170 = 0xf7
0x229: V171 = 0x6cd
0x22c: JUMP 0x6cd
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xf7]
Exit stack: [V10, 0xf7]

================================

Block 0x22d
[0x22d:0x23e]
---
Predecessors: []
Successors: []
---
0x22d JUMPDEST
0x22e PUSH1 0x40
0x230 MLOAD
0x231 SWAP1
0x232 DUP2
0x233 MSTORE
0x234 PUSH1 0x20
0x236 ADD
0x237 PUSH1 0x40
0x239 MLOAD
0x23a DUP1
0x23b SWAP2
0x23c SUB
0x23d SWAP1
0x23e RETURN
---
0x22d: JUMPDEST 
0x22e: V172 = 0x40
0x230: V173 = M[0x40]
0x233: M[V173] = S0
0x234: V174 = 0x20
0x236: V175 = ADD 0x20 V173
0x237: V176 = 0x40
0x239: V177 = M[0x40]
0x23c: V178 = SUB V175 V177
0x23e: RETURN V177 V178
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x23f
[0x23f:0x245]
---
Predecessors: [0xac]
Successors: [0x246, 0x24a]
---
0x23f JUMPDEST
0x240 CALLVALUE
0x241 ISZERO
0x242 PUSH2 0x24a
0x245 JUMPI
---
0x23f: JUMPDEST 
0x240: V179 = CALLVALUE
0x241: V180 = ISZERO V179
0x242: V181 = 0x24a
0x245: JUMPI 0x24a V180
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x246
[0x246:0x249]
---
Predecessors: [0x23f]
Successors: []
---
0x246 PUSH1 0x0
0x248 DUP1
0x249 REVERT
---
0x246: V182 = 0x0
0x249: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x24a
[0x24a:0x254]
---
Predecessors: [0x23f]
Successors: [0x6d2]
---
0x24a JUMPDEST
0x24b PUSH2 0x255
0x24e PUSH1 0x4
0x250 CALLDATALOAD
0x251 PUSH2 0x6d2
0x254 JUMP
---
0x24a: JUMPDEST 
0x24b: V183 = 0x255
0x24e: V184 = 0x4
0x250: V185 = CALLDATALOAD 0x4
0x251: V186 = 0x6d2
0x254: JUMP 0x6d2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x255, V185]
Exit stack: [V10, 0x255, V185]

================================

Block 0x255
[0x255:0x276]
---
Predecessors: [0x6d2]
Successors: []
---
0x255 JUMPDEST
0x256 PUSH1 0x40
0x258 MLOAD
0x259 PUSH1 0x1
0x25b PUSH1 0xa0
0x25d PUSH1 0x2
0x25f EXP
0x260 SUB
0x261 SWAP1
0x262 SWAP3
0x263 AND
0x264 DUP3
0x265 MSTORE
0x266 PUSH1 0x20
0x268 DUP3
0x269 ADD
0x26a MSTORE
0x26b PUSH1 0x40
0x26d SWAP1
0x26e DUP2
0x26f ADD
0x270 SWAP1
0x271 MLOAD
0x272 DUP1
0x273 SWAP2
0x274 SUB
0x275 SWAP1
0x276 RETURN
---
0x255: JUMPDEST 
0x256: V187 = 0x40
0x258: V188 = M[0x40]
0x259: V189 = 0x1
0x25b: V190 = 0xa0
0x25d: V191 = 0x2
0x25f: V192 = EXP 0x2 0xa0
0x260: V193 = SUB 0x10000000000000000000000000000000000000000 0x1
0x263: V194 = AND V609 0xffffffffffffffffffffffffffffffffffffffff
0x265: M[V188] = V194
0x266: V195 = 0x20
0x269: V196 = ADD V188 0x20
0x26a: M[V196] = V603
0x26b: V197 = 0x40
0x26f: V198 = ADD 0x40 V188
0x271: V199 = M[0x40]
0x274: V200 = SUB V198 V199
0x276: RETURN V199 V200
---
Entry stack: [V10, 0x255, V609, V603]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x255]

================================

Block 0x277
[0x277:0x27d]
---
Predecessors: [0xb7]
Successors: [0x27e, 0x282]
---
0x277 JUMPDEST
0x278 CALLVALUE
0x279 ISZERO
0x27a PUSH2 0x282
0x27d JUMPI
---
0x277: JUMPDEST 
0x278: V201 = CALLVALUE
0x279: V202 = ISZERO V201
0x27a: V203 = 0x282
0x27d: JUMPI 0x282 V202
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x27e
[0x27e:0x281]
---
Predecessors: [0x277]
Successors: []
---
0x27e PUSH1 0x0
0x280 DUP1
0x281 REVERT
---
0x27e: V204 = 0x0
0x281: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x282
[0x282:0x289]
---
Predecessors: [0x277]
Successors: [0x6f7]
---
0x282 JUMPDEST
0x283 PUSH2 0xf7
0x286 PUSH2 0x6f7
0x289 JUMP
---
0x282: JUMPDEST 
0x283: V205 = 0xf7
0x286: V206 = 0x6f7
0x289: JUMP 0x6f7
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xf7]
Exit stack: [V10, 0xf7]

================================

Block 0x28a
[0x28a:0x29b]
---
Predecessors: []
Successors: []
---
0x28a JUMPDEST
0x28b PUSH1 0x40
0x28d MLOAD
0x28e SWAP1
0x28f DUP2
0x290 MSTORE
0x291 PUSH1 0x20
0x293 ADD
0x294 PUSH1 0x40
0x296 MLOAD
0x297 DUP1
0x298 SWAP2
0x299 SUB
0x29a SWAP1
0x29b RETURN
---
0x28a: JUMPDEST 
0x28b: V207 = 0x40
0x28d: V208 = M[0x40]
0x290: M[V208] = S0
0x291: V209 = 0x20
0x293: V210 = ADD 0x20 V208
0x294: V211 = 0x40
0x296: V212 = M[0x40]
0x299: V213 = SUB V210 V212
0x29b: RETURN V212 V213
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x29c
[0x29c:0x2a2]
---
Predecessors: [0xc2]
Successors: [0x2a3, 0x2a7]
---
0x29c JUMPDEST
0x29d CALLVALUE
0x29e ISZERO
0x29f PUSH2 0x2a7
0x2a2 JUMPI
---
0x29c: JUMPDEST 
0x29d: V214 = CALLVALUE
0x29e: V215 = ISZERO V214
0x29f: V216 = 0x2a7
0x2a2: JUMPI 0x2a7 V215
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2a3
[0x2a3:0x2a6]
---
Predecessors: [0x29c]
Successors: []
---
0x2a3 PUSH1 0x0
0x2a5 DUP1
0x2a6 REVERT
---
0x2a3: V217 = 0x0
0x2a6: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2a7
[0x2a7:0x2ae]
---
Predecessors: [0x29c]
Successors: [0x703]
---
0x2a7 JUMPDEST
0x2a8 PUSH2 0xf7
0x2ab PUSH2 0x703
0x2ae JUMP
---
0x2a7: JUMPDEST 
0x2a8: V218 = 0xf7
0x2ab: V219 = 0x703
0x2ae: JUMP 0x703
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xf7]
Exit stack: [V10, 0xf7]

================================

Block 0x2af
[0x2af:0x2c0]
---
Predecessors: []
Successors: []
---
0x2af JUMPDEST
0x2b0 PUSH1 0x40
0x2b2 MLOAD
0x2b3 SWAP1
0x2b4 DUP2
0x2b5 MSTORE
0x2b6 PUSH1 0x20
0x2b8 ADD
0x2b9 PUSH1 0x40
0x2bb MLOAD
0x2bc DUP1
0x2bd SWAP2
0x2be SUB
0x2bf SWAP1
0x2c0 RETURN
---
0x2af: JUMPDEST 
0x2b0: V220 = 0x40
0x2b2: V221 = M[0x40]
0x2b5: M[V221] = S0
0x2b6: V222 = 0x20
0x2b8: V223 = ADD 0x20 V221
0x2b9: V224 = 0x40
0x2bb: V225 = M[0x40]
0x2be: V226 = SUB V223 V225
0x2c0: RETURN V225 V226
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2c1
[0x2c1:0x2c7]
---
Predecessors: [0xcd]
Successors: [0x2c8, 0x2cc]
---
0x2c1 JUMPDEST
0x2c2 CALLVALUE
0x2c3 ISZERO
0x2c4 PUSH2 0x2cc
0x2c7 JUMPI
---
0x2c1: JUMPDEST 
0x2c2: V227 = CALLVALUE
0x2c3: V228 = ISZERO V227
0x2c4: V229 = 0x2cc
0x2c7: JUMPI 0x2cc V228
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2c8
[0x2c8:0x2cb]
---
Predecessors: [0x2c1]
Successors: []
---
0x2c8 PUSH1 0x0
0x2ca DUP1
0x2cb REVERT
---
0x2c8: V230 = 0x0
0x2cb: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2cc
[0x2cc:0x2d3]
---
Predecessors: [0x2c1]
Successors: [0x713]
---
0x2cc JUMPDEST
0x2cd PUSH2 0xe1
0x2d0 PUSH2 0x713
0x2d3 JUMP
---
0x2cc: JUMPDEST 
0x2cd: V231 = 0xe1
0x2d0: V232 = 0x713
0x2d3: JUMP 0x713
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xe1]
Exit stack: [V10, 0xe1]

================================

Block 0x2d4
[0x2d4:0x2d5]
---
Predecessors: []
Successors: []
---
0x2d4 JUMPDEST
0x2d5 STOP
---
0x2d4: JUMPDEST 
0x2d5: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2d6
[0x2d6:0x2e6]
---
Predecessors: [0xd9, 0x1fe]
Successors: [0x2e7, 0x31d]
---
0x2d6 JUMPDEST
0x2d7 PUSH1 0x5
0x2d9 SLOAD
0x2da PUSH1 0x0
0x2dc SWAP1
0x2dd DUP2
0x2de SWAP1
0x2df PUSH1 0xff
0x2e1 AND
0x2e2 ISZERO
0x2e3 PUSH2 0x31d
0x2e6 JUMPI
---
0x2d6: JUMPDEST 
0x2d7: V233 = 0x5
0x2d9: V234 = S[0x5]
0x2da: V235 = 0x0
0x2df: V236 = 0xff
0x2e1: V237 = AND 0xff V234
0x2e2: V238 = ISZERO V237
0x2e3: V239 = 0x31d
0x2e6: JUMPI 0x31d V238
---
Entry stack: [V10, 0xe1]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V10, 0xe1, 0x0, 0x0]

================================

Block 0x2e7
[0x2e7:0x313]
---
Predecessors: [0x2d6]
Successors: [0x314, 0x318]
---
0x2e7 PUSH1 0x1
0x2e9 PUSH1 0xa0
0x2eb PUSH1 0x2
0x2ed EXP
0x2ee SUB
0x2ef CALLER
0x2f0 AND
0x2f1 CALLVALUE
0x2f2 DUP1
0x2f3 ISZERO
0x2f4 PUSH2 0x8fc
0x2f7 MUL
0x2f8 SWAP1
0x2f9 PUSH1 0x40
0x2fb MLOAD
0x2fc PUSH1 0x0
0x2fe PUSH1 0x40
0x300 MLOAD
0x301 DUP1
0x302 DUP4
0x303 SUB
0x304 DUP2
0x305 DUP6
0x306 DUP9
0x307 DUP9
0x308 CALL
0x309 SWAP4
0x30a POP
0x30b POP
0x30c POP
0x30d POP
0x30e ISZERO
0x30f ISZERO
0x310 PUSH2 0x318
0x313 JUMPI
---
0x2e7: V240 = 0x1
0x2e9: V241 = 0xa0
0x2eb: V242 = 0x2
0x2ed: V243 = EXP 0x2 0xa0
0x2ee: V244 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ef: V245 = CALLER
0x2f0: V246 = AND V245 0xffffffffffffffffffffffffffffffffffffffff
0x2f1: V247 = CALLVALUE
0x2f3: V248 = ISZERO V247
0x2f4: V249 = 0x8fc
0x2f7: V250 = MUL 0x8fc V248
0x2f9: V251 = 0x40
0x2fb: V252 = M[0x40]
0x2fc: V253 = 0x0
0x2fe: V254 = 0x40
0x300: V255 = M[0x40]
0x303: V256 = SUB V252 V255
0x308: V257 = CALL V250 V246 V247 V255 V256 V255 0x0
0x30e: V258 = ISZERO V257
0x30f: V259 = ISZERO V258
0x310: V260 = 0x318
0x313: JUMPI 0x318 V259
---
Entry stack: [V10, 0xe1, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe1, 0x0, 0x0]

================================

Block 0x314
[0x314:0x317]
---
Predecessors: [0x2e7]
Successors: []
---
0x314 PUSH1 0x0
0x316 DUP1
0x317 REVERT
---
0x314: V261 = 0x0
0x317: REVERT 0x0 0x0
---
Entry stack: [V10, 0xe1, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe1, 0x0, 0x0]

================================

Block 0x318
[0x318:0x31c]
---
Predecessors: [0x2e7]
Successors: [0x4ad]
---
0x318 JUMPDEST
0x319 PUSH2 0x4ad
0x31c JUMP
---
0x318: JUMPDEST 
0x319: V262 = 0x4ad
0x31c: JUMP 0x4ad
---
Entry stack: [V10, 0xe1, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe1, 0x0, 0x0]

================================

Block 0x31d
[0x31d:0x320]
---
Predecessors: [0x2d6]
Successors: [0x321]
---
0x31d JUMPDEST
0x31e CALLVALUE
0x31f SWAP2
0x320 POP
---
0x31d: JUMPDEST 
0x31e: V263 = CALLVALUE
---
Entry stack: [V10, 0xe1, 0x0, 0x0]
Stack pops: 2
Stack additions: [V263, S0]
Exit stack: [V10, 0xe1, V263, 0x0]

================================

Block 0x321
[0x321:0x32c]
---
Predecessors: [0x31d, 0x455]
Successors: [0x32d]
---
0x321 JUMPDEST
0x322 PUSH1 0x6
0x324 PUSH8 0x1aa535d3d0c0000
---
0x321: JUMPDEST 
0x322: V264 = 0x6
0x324: V265 = 0x1aa535d3d0c0000
---
Entry stack: [V10, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x6, 0x1aa535d3d0c0000]
Exit stack: [V10, S4, S3, S2, S1, S0, 0x6, 0x1aa535d3d0c0000]

================================

Block 0x32d
[0x32d:0x337]
---
Predecessors: [0x321]
Successors: [0x338, 0x340]
---
0x32d JUMPDEST
0x32e DIV
0x32f DUP3
0x330 LT
0x331 ISZERO
0x332 DUP1
0x333 ISZERO
0x334 PUSH2 0x340
0x337 JUMPI
---
0x32d: JUMPDEST 
0x32e: V266 = DIV 0x1aa535d3d0c0000 0x6
0x330: V267 = LT S3 0x470de4df820000
0x331: V268 = ISZERO V267
0x333: V269 = ISZERO V268
0x334: V270 = 0x340
0x337: JUMPI 0x340 V269
---
Entry stack: [V10, S6, S5, S4, S3, S2, 0x6, 0x1aa535d3d0c0000]
Stack pops: 4
Stack additions: [S3, S2, V268]
Exit stack: [V10, S6, S5, S4, S3, S2, V268]

================================

Block 0x338
[0x338:0x33f]
---
Predecessors: [0x32d]
Successors: [0x340]
---
0x338 POP
0x339 PUSH1 0x6
0x33b PUSH1 0x2
0x33d SLOAD
0x33e GT
0x33f ISZERO
---
0x339: V271 = 0x6
0x33b: V272 = 0x2
0x33d: V273 = S[0x2]
0x33e: V274 = GT V273 0x6
0x33f: V275 = ISZERO V274
---
Entry stack: [V10, S5, S4, S3, S2, S1, V268]
Stack pops: 1
Stack additions: [V275]
Exit stack: [V10, S5, S4, S3, S2, S1, V275]

================================

Block 0x340
[0x340:0x345]
---
Predecessors: [0x32d, 0x338]
Successors: [0x346, 0x45f]
---
0x340 JUMPDEST
0x341 ISZERO
0x342 PUSH2 0x45f
0x345 JUMPI
---
0x340: JUMPDEST 
0x341: V276 = ISZERO S0
0x342: V277 = 0x45f
0x345: JUMPI 0x45f V276
---
Entry stack: [V10, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S5, S4, S3, S2, S1]

================================

Block 0x346
[0x346:0x354]
---
Predecessors: [0x340]
Successors: [0x355, 0x391]
---
0x346 POP
0x347 PUSH1 0x4
0x349 SLOAD
0x34a PUSH1 0x0
0x34c SWAP1
0x34d DUP2
0x34e SWAP1
0x34f GT
0x350 ISZERO
0x351 PUSH2 0x391
0x354 JUMPI
---
0x347: V278 = 0x4
0x349: V279 = S[0x4]
0x34a: V280 = 0x0
0x34f: V281 = GT V279 0x0
0x350: V282 = ISZERO V281
0x351: V283 = 0x391
0x354: JUMPI 0x391 V282
---
Entry stack: [V10, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, S4, S3, S2, S1, 0x0]

================================

Block 0x355
[0x355:0x364]
---
Predecessors: [0x346]
Successors: [0x365, 0x366]
---
0x355 PUSH1 0x4
0x357 DUP1
0x358 SLOAD
0x359 PUSH1 0x0
0x35b NOT
0x35c DUP2
0x35d ADD
0x35e SWAP1
0x35f DUP2
0x360 LT
0x361 PUSH2 0x366
0x364 JUMPI
---
0x355: V284 = 0x4
0x358: V285 = S[0x4]
0x359: V286 = 0x0
0x35b: V287 = NOT 0x0
0x35d: V288 = ADD V285 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x360: V289 = LT V288 V285
0x361: V290 = 0x366
0x364: JUMPI 0x366 V289
---
Entry stack: [V10, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: [0x4, V288]
Exit stack: [V10, S4, S3, S2, S1, 0x0, 0x4, V288]

================================

Block 0x365
[0x365:0x365]
---
Predecessors: [0x355]
Successors: []
---
0x365 INVALID
---
0x365: INVALID 
---
Entry stack: [V10, S6, S5, S4, S3, 0x0, 0x4, V288]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S6, S5, S4, S3, 0x0, 0x4, V288]

================================

Block 0x366
[0x366:0x373]
---
Predecessors: [0x355]
Successors: [0x374]
---
0x366 JUMPDEST
0x367 SWAP1
0x368 PUSH1 0x0
0x36a MSTORE
0x36b PUSH1 0x20
0x36d PUSH1 0x0
0x36f SHA3
0x370 SWAP1
0x371 ADD
0x372 PUSH1 0x0
---
0x366: JUMPDEST 
0x368: V291 = 0x0
0x36a: M[0x0] = 0x4
0x36b: V292 = 0x20
0x36d: V293 = 0x0
0x36f: V294 = SHA3 0x0 0x20
0x371: V295 = ADD V288 V294
0x372: V296 = 0x0
---
Entry stack: [V10, S6, S5, S4, S3, 0x0, 0x4, V288]
Stack pops: 2
Stack additions: [V295, 0x0]
Exit stack: [V10, S6, S5, S4, S3, 0x0, V295, 0x0]

================================

Block 0x374
[0x374:0x38a]
---
Predecessors: [0x366]
Successors: [0xa89]
---
0x374 JUMPDEST
0x375 POP
0x376 SLOAD
0x377 PUSH1 0x4
0x379 DUP1
0x37a SLOAD
0x37b SWAP2
0x37c SWAP3
0x37d POP
0x37e PUSH2 0x38b
0x381 SWAP1
0x382 PUSH1 0x0
0x384 NOT
0x385 DUP4
0x386 ADD
0x387 PUSH2 0xa89
0x38a JUMP
---
0x374: JUMPDEST 
0x376: V297 = S[V295]
0x377: V298 = 0x4
0x37a: V299 = S[0x4]
0x37e: V300 = 0x38b
0x382: V301 = 0x0
0x384: V302 = NOT 0x0
0x386: V303 = ADD V299 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x387: V304 = 0xa89
0x38a: JUMP 0xa89
---
Entry stack: [V10, S6, S5, S4, S3, 0x0, V295, 0x0]
Stack pops: 3
Stack additions: [V297, V299, 0x38b, 0x4, V303]
Exit stack: [V10, S6, S5, S4, S3, V297, V299, 0x38b, 0x4, V303]

================================

Block 0x38b
[0x38b:0x390]
---
Predecessors: [0xa84]
Successors: [0x39e]
---
0x38b JUMPDEST
0x38c POP
0x38d PUSH2 0x39e
0x390 JUMP
---
0x38b: JUMPDEST 
0x38d: V305 = 0x39e
0x390: JUMP 0x39e
---
Entry stack: [V10, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S5, S4, S3, S2, S1]

================================

Block 0x391
[0x391:0x39d]
---
Predecessors: [0x346]
Successors: [0x39e]
---
0x391 JUMPDEST
0x392 POP
0x393 PUSH1 0x2
0x395 DUP1
0x396 SLOAD
0x397 PUSH1 0x1
0x399 DUP2
0x39a ADD
0x39b SWAP1
0x39c SWAP2
0x39d SSTORE
---
0x391: JUMPDEST 
0x393: V306 = 0x2
0x396: V307 = S[0x2]
0x397: V308 = 0x1
0x39a: V309 = ADD V307 0x1
0x39d: S[0x2] = V309
---
Entry stack: [V10, S4, S3, S2, S1, 0x0]
Stack pops: 1
Stack additions: [V307]
Exit stack: [V10, S4, S3, S2, S1, V307]

================================

Block 0x39e
[0x39e:0x454]
---
Predecessors: [0x38b, 0x391]
Successors: [0x455]
---
0x39e JUMPDEST
0x39f PUSH1 0x40
0x3a1 DUP1
0x3a2 MLOAD
0x3a3 SWAP1
0x3a4 DUP2
0x3a5 ADD
0x3a6 PUSH1 0x40
0x3a8 SWAP1
0x3a9 DUP2
0x3aa MSTORE
0x3ab PUSH1 0x1
0x3ad PUSH1 0xa0
0x3af PUSH1 0x2
0x3b1 EXP
0x3b2 SUB
0x3b3 CALLER
0x3b4 AND
0x3b5 DUP3
0x3b6 MSTORE
0x3b7 PUSH1 0x1
0x3b9 SLOAD
0x3ba PUSH1 0x20
0x3bc DUP1
0x3bd DUP5
0x3be ADD
0x3bf SWAP2
0x3c0 SWAP1
0x3c1 SWAP2
0x3c2 MSTORE
0x3c3 PUSH1 0x0
0x3c5 DUP5
0x3c6 DUP2
0x3c7 MSTORE
0x3c8 PUSH1 0x3
0x3ca SWAP1
0x3cb SWAP2
0x3cc MSTORE
0x3cd SHA3
0x3ce DUP2
0x3cf MLOAD
0x3d0 DUP2
0x3d1 SLOAD
0x3d2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e7 NOT
0x3e8 AND
0x3e9 PUSH1 0x1
0x3eb PUSH1 0xa0
0x3ed PUSH1 0x2
0x3ef EXP
0x3f0 SUB
0x3f1 SWAP2
0x3f2 SWAP1
0x3f3 SWAP2
0x3f4 AND
0x3f5 OR
0x3f6 DUP2
0x3f7 SSTORE
0x3f8 PUSH1 0x20
0x3fa DUP3
0x3fb ADD
0x3fc MLOAD
0x3fd PUSH1 0x1
0x3ff SWAP2
0x400 DUP3
0x401 ADD
0x402 SSTORE
0x403 SLOAD
0x404 SWAP1
0x405 POP
0x406 PUSH32 0x24c553806a0c0d72a519acfdd0ddf0a5f14a54389e411baf3055eded1126f1e6
0x427 CALLER
0x428 DUP4
0x429 PUSH1 0x40
0x42b MLOAD
0x42c PUSH1 0x1
0x42e PUSH1 0xa0
0x430 PUSH1 0x2
0x432 EXP
0x433 SUB
0x434 SWAP1
0x435 SWAP3
0x436 AND
0x437 DUP3
0x438 MSTORE
0x439 PUSH1 0x20
0x43b DUP3
0x43c ADD
0x43d MSTORE
0x43e PUSH1 0x40
0x440 SWAP1
0x441 DUP2
0x442 ADD
0x443 SWAP1
0x444 MLOAD
0x445 DUP1
0x446 SWAP2
0x447 SUB
0x448 SWAP1
0x449 LOG2
0x44a PUSH1 0x6
0x44c PUSH8 0x1aa535d3d0c0000
---
0x39e: JUMPDEST 
0x39f: V310 = 0x40
0x3a2: V311 = M[0x40]
0x3a5: V312 = ADD V311 0x40
0x3a6: V313 = 0x40
0x3aa: M[0x40] = V312
0x3ab: V314 = 0x1
0x3ad: V315 = 0xa0
0x3af: V316 = 0x2
0x3b1: V317 = EXP 0x2 0xa0
0x3b2: V318 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b3: V319 = CALLER
0x3b4: V320 = AND V319 0xffffffffffffffffffffffffffffffffffffffff
0x3b6: M[V311] = V320
0x3b7: V321 = 0x1
0x3b9: V322 = S[0x1]
0x3ba: V323 = 0x20
0x3be: V324 = ADD V311 0x20
0x3c2: M[V324] = V322
0x3c3: V325 = 0x0
0x3c7: M[0x0] = S0
0x3c8: V326 = 0x3
0x3cc: M[0x20] = 0x3
0x3cd: V327 = SHA3 0x0 0x40
0x3cf: V328 = M[V311]
0x3d1: V329 = S[V327]
0x3d2: V330 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e7: V331 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3e8: V332 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V329
0x3e9: V333 = 0x1
0x3eb: V334 = 0xa0
0x3ed: V335 = 0x2
0x3ef: V336 = EXP 0x2 0xa0
0x3f0: V337 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f4: V338 = AND 0xffffffffffffffffffffffffffffffffffffffff V328
0x3f5: V339 = OR V338 V332
0x3f7: S[V327] = V339
0x3f8: V340 = 0x20
0x3fb: V341 = ADD V311 0x20
0x3fc: V342 = M[V341]
0x3fd: V343 = 0x1
0x401: V344 = ADD 0x1 V327
0x402: S[V344] = V342
0x403: V345 = S[0x1]
0x406: V346 = 0x24c553806a0c0d72a519acfdd0ddf0a5f14a54389e411baf3055eded1126f1e6
0x427: V347 = CALLER
0x429: V348 = 0x40
0x42b: V349 = M[0x40]
0x42c: V350 = 0x1
0x42e: V351 = 0xa0
0x430: V352 = 0x2
0x432: V353 = EXP 0x2 0xa0
0x433: V354 = SUB 0x10000000000000000000000000000000000000000 0x1
0x436: V355 = AND V347 0xffffffffffffffffffffffffffffffffffffffff
0x438: M[V349] = V355
0x439: V356 = 0x20
0x43c: V357 = ADD V349 0x20
0x43d: M[V357] = S0
0x43e: V358 = 0x40
0x442: V359 = ADD 0x40 V349
0x444: V360 = M[0x40]
0x447: V361 = SUB V359 V360
0x449: LOG V360 V361 0x24c553806a0c0d72a519acfdd0ddf0a5f14a54389e411baf3055eded1126f1e6 V345
0x44a: V362 = 0x6
0x44c: V363 = 0x1aa535d3d0c0000
---
Entry stack: [V10, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x6, 0x1aa535d3d0c0000]
Exit stack: [V10, S4, S3, S2, S1, S0, 0x6, 0x1aa535d3d0c0000]

================================

Block 0x455
[0x455:0x45e]
---
Predecessors: [0x39e]
Successors: [0x321]
---
0x455 JUMPDEST
0x456 DIV
0x457 DUP3
0x458 SUB
0x459 SWAP2
0x45a POP
0x45b PUSH2 0x321
0x45e JUMP
---
0x455: JUMPDEST 
0x456: V364 = DIV 0x1aa535d3d0c0000 0x6
0x458: V365 = SUB S3 0x470de4df820000
0x45b: V366 = 0x321
0x45e: JUMP 0x321
---
Entry stack: [V10, S6, S5, S4, S3, S2, 0x6, 0x1aa535d3d0c0000]
Stack pops: 4
Stack additions: [V365, S2]
Exit stack: [V10, S6, S5, S4, V365, S2]

================================

Block 0x45f
[0x45f:0x46a]
---
Predecessors: [0x340]
Successors: [0x46b, 0x472]
---
0x45f JUMPDEST
0x460 PUSH1 0x6
0x462 PUSH1 0x2
0x464 SLOAD
0x465 GT
0x466 ISZERO
0x467 PUSH2 0x472
0x46a JUMPI
---
0x45f: JUMPDEST 
0x460: V367 = 0x6
0x462: V368 = 0x2
0x464: V369 = S[0x2]
0x465: V370 = GT V369 0x6
0x466: V371 = ISZERO V370
0x467: V372 = 0x472
0x46a: JUMPI 0x472 V371
---
Entry stack: [V10, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, S3, S2, S1, S0]

================================

Block 0x46b
[0x46b:0x471]
---
Predecessors: [0x45f]
Successors: [0x8d9]
---
0x46b PUSH2 0x472
0x46e PUSH2 0x8d9
0x471 JUMP
---
0x46b: V373 = 0x472
0x46e: V374 = 0x8d9
0x471: JUMP 0x8d9
---
Entry stack: [V10, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x472]
Exit stack: [V10, S4, S3, S2, S1, S0, 0x472]

================================

Block 0x472
[0x472:0x472]
---
Predecessors: [0x45f, 0xa84]
Successors: [0x473]
---
0x472 JUMPDEST
---
0x472: JUMPDEST 
---
Entry stack: [V10, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, S4, S3, S2, S1, S0]

================================

Block 0x473
[0x473:0x47c]
---
Predecessors: [0x472]
Successors: [0x47d, 0x4ad]
---
0x473 JUMPDEST
0x474 PUSH1 0x0
0x476 DUP3
0x477 GT
0x478 ISZERO
0x479 PUSH2 0x4ad
0x47c JUMPI
---
0x473: JUMPDEST 
0x474: V375 = 0x0
0x477: V376 = GT S1 0x0
0x478: V377 = ISZERO V376
0x479: V378 = 0x4ad
0x47c: JUMPI 0x4ad V377
---
Entry stack: [V10, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, S5, S4, S3, S2, S1, S0]

================================

Block 0x47d
[0x47d:0x4a8]
---
Predecessors: [0x473]
Successors: [0x4a9, 0x4ad]
---
0x47d PUSH1 0x1
0x47f PUSH1 0xa0
0x481 PUSH1 0x2
0x483 EXP
0x484 SUB
0x485 CALLER
0x486 AND
0x487 DUP3
0x488 ISZERO
0x489 PUSH2 0x8fc
0x48c MUL
0x48d DUP4
0x48e PUSH1 0x40
0x490 MLOAD
0x491 PUSH1 0x0
0x493 PUSH1 0x40
0x495 MLOAD
0x496 DUP1
0x497 DUP4
0x498 SUB
0x499 DUP2
0x49a DUP6
0x49b DUP9
0x49c DUP9
0x49d CALL
0x49e SWAP4
0x49f POP
0x4a0 POP
0x4a1 POP
0x4a2 POP
0x4a3 ISZERO
0x4a4 ISZERO
0x4a5 PUSH2 0x4ad
0x4a8 JUMPI
---
0x47d: V379 = 0x1
0x47f: V380 = 0xa0
0x481: V381 = 0x2
0x483: V382 = EXP 0x2 0xa0
0x484: V383 = SUB 0x10000000000000000000000000000000000000000 0x1
0x485: V384 = CALLER
0x486: V385 = AND V384 0xffffffffffffffffffffffffffffffffffffffff
0x488: V386 = ISZERO S1
0x489: V387 = 0x8fc
0x48c: V388 = MUL 0x8fc V386
0x48e: V389 = 0x40
0x490: V390 = M[0x40]
0x491: V391 = 0x0
0x493: V392 = 0x40
0x495: V393 = M[0x40]
0x498: V394 = SUB V390 V393
0x49d: V395 = CALL V388 V385 S1 V393 V394 V393 0x0
0x4a3: V396 = ISZERO V395
0x4a4: V397 = ISZERO V396
0x4a5: V398 = 0x4ad
0x4a8: JUMPI 0x4ad V397
---
Entry stack: [V10, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, S5, S4, S3, S2, S1, S0]

================================

Block 0x4a9
[0x4a9:0x4ac]
---
Predecessors: [0x47d]
Successors: []
---
0x4a9 PUSH1 0x0
0x4ab DUP1
0x4ac REVERT
---
0x4a9: V399 = 0x0
0x4ac: REVERT 0x0 0x0
---
Entry stack: [V10, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, S4, S3, S2, S1, S0]

================================

Block 0x4ad
[0x4ad:0x4ad]
---
Predecessors: [0x318, 0x473, 0x47d, 0x612, 0x634, 0xa84]
Successors: [0x4ae]
---
0x4ad JUMPDEST
---
0x4ad: JUMPDEST 
---
Entry stack: [V10, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, S4, S3, S2, S1, S0]

================================

Block 0x4ae
[0x4ae:0x4ae]
---
Predecessors: [0x4ad]
Successors: [0x4af]
---
0x4ae JUMPDEST
---
0x4ae: JUMPDEST 
---
Entry stack: [V10, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, S4, S3, S2, S1, S0]

================================

Block 0x4af
[0x4af:0x4b2]
---
Predecessors: [0x4ae]
Successors: [0xe1]
---
0x4af JUMPDEST
0x4b0 POP
0x4b1 POP
0x4b2 JUMP
---
0x4af: JUMPDEST 
0x4b2: JUMP S2
---
Entry stack: [V10, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V10, S5, S4, S3]

================================

Block 0x4b3
[0x4b3:0x4bd]
---
Predecessors: [0xef]
Successors: [0xf7]
---
0x4b3 JUMPDEST
0x4b4 PUSH7 0x470de4df820000
0x4bc DUP2
0x4bd JUMP
---
0x4b3: JUMPDEST 
0x4b4: V400 = 0x470de4df820000
0x4bd: JUMP 0xf7
---
Entry stack: [V10, 0xf7]
Stack pops: 1
Stack additions: [S0, 0x470de4df820000]
Exit stack: [V10, 0xf7, 0x470de4df820000]

================================

Block 0x4be
[0x4be:0x4d5]
---
Predecessors: [0x114]
Successors: [0x4d6, 0x4e3]
---
0x4be JUMPDEST
0x4bf PUSH1 0x0
0x4c1 SLOAD
0x4c2 CALLER
0x4c3 PUSH1 0x1
0x4c5 PUSH1 0xa0
0x4c7 PUSH1 0x2
0x4c9 EXP
0x4ca SUB
0x4cb SWAP1
0x4cc DUP2
0x4cd AND
0x4ce SWAP2
0x4cf AND
0x4d0 EQ
0x4d1 ISZERO
0x4d2 PUSH2 0x4e3
0x4d5 JUMPI
---
0x4be: JUMPDEST 
0x4bf: V401 = 0x0
0x4c1: V402 = S[0x0]
0x4c2: V403 = CALLER
0x4c3: V404 = 0x1
0x4c5: V405 = 0xa0
0x4c7: V406 = 0x2
0x4c9: V407 = EXP 0x2 0xa0
0x4ca: V408 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4cd: V409 = AND 0xffffffffffffffffffffffffffffffffffffffff V403
0x4cf: V410 = AND V402 0xffffffffffffffffffffffffffffffffffffffff
0x4d0: V411 = EQ V410 V409
0x4d1: V412 = ISZERO V411
0x4d2: V413 = 0x4e3
0x4d5: JUMPI 0x4e3 V412
---
Entry stack: [V10, 0xe1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe1]

================================

Block 0x4d6
[0x4d6:0x4e2]
---
Predecessors: [0x4be]
Successors: []
---
0x4d6 PUSH1 0x0
0x4d8 SLOAD
0x4d9 PUSH1 0x1
0x4db PUSH1 0xa0
0x4dd PUSH1 0x2
0x4df EXP
0x4e0 SUB
0x4e1 AND
0x4e2 SELFDESTRUCT
---
0x4d6: V414 = 0x0
0x4d8: V415 = S[0x0]
0x4d9: V416 = 0x1
0x4db: V417 = 0xa0
0x4dd: V418 = 0x2
0x4df: V419 = EXP 0x2 0xa0
0x4e0: V420 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4e1: V421 = AND 0xffffffffffffffffffffffffffffffffffffffff V415
0x4e2: SELFDESTRUCT V421
---
Entry stack: [V10, 0xe1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe1]

================================

Block 0x4e3
[0x4e3:0x4e3]
---
Predecessors: [0x4be, 0x69a]
Successors: [0x4e4]
---
0x4e3 JUMPDEST
---
0x4e3: JUMPDEST 
---
Entry stack: [V10, 0xe1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe1]

================================

Block 0x4e4
[0x4e4:0x4e5]
---
Predecessors: [0x4e3]
Successors: [0xe1]
---
0x4e4 JUMPDEST
0x4e5 JUMP
---
0x4e4: JUMPDEST 
0x4e5: JUMP 0xe1
---
Entry stack: [V10, 0xe1]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x4e6
[0x4e6:0x4ee]
---
Predecessors: [0x129]
Successors: [0x131]
---
0x4e6 JUMPDEST
0x4e7 PUSH1 0x5
0x4e9 SLOAD
0x4ea PUSH1 0xff
0x4ec AND
0x4ed DUP2
0x4ee JUMP
---
0x4e6: JUMPDEST 
0x4e7: V422 = 0x5
0x4e9: V423 = S[0x5]
0x4ea: V424 = 0xff
0x4ec: V425 = AND 0xff V423
0x4ee: JUMP 0x131
---
Entry stack: [V10, 0x131]
Stack pops: 1
Stack additions: [S0, V425]
Exit stack: [V10, 0x131, V425]

================================

Block 0x4ef
[0x4ef:0x4f3]
---
Predecessors: [0x150]
Successors: [0x4f4]
---
0x4ef JUMPDEST
0x4f0 PUSH1 0x0
0x4f2 PUSH1 0x1
---
0x4ef: JUMPDEST 
0x4f0: V426 = 0x0
0x4f2: V427 = 0x1
---
Entry stack: [V10, 0xe1]
Stack pops: 0
Stack additions: [0x0, 0x1]
Exit stack: [V10, 0xe1, 0x0, 0x1]

================================

Block 0x4f4
[0x4f4:0x4fc]
---
Predecessors: [0x4ef, 0x60a]
Successors: [0x4fd, 0x612]
---
0x4f4 JUMPDEST
0x4f5 PUSH1 0x6
0x4f7 DUP2
0x4f8 GT
0x4f9 PUSH2 0x612
0x4fc JUMPI
---
0x4f4: JUMPDEST 
0x4f5: V428 = 0x6
0x4f8: V429 = GT S0 0x6
0x4f9: V430 = 0x612
0x4fc: JUMPI 0x612 V429
---
Entry stack: [V10, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, S2, S1, S0]

================================

Block 0x4fd
[0x4fd:0x520]
---
Predecessors: [0x4f4]
Successors: [0x521, 0x539]
---
0x4fd PUSH1 0x0
0x4ff DUP2
0x500 DUP2
0x501 MSTORE
0x502 PUSH1 0x3
0x504 PUSH1 0x20
0x506 MSTORE
0x507 PUSH1 0x40
0x509 SWAP1
0x50a SHA3
0x50b SLOAD
0x50c CALLER
0x50d PUSH1 0x1
0x50f PUSH1 0xa0
0x511 PUSH1 0x2
0x513 EXP
0x514 SUB
0x515 SWAP1
0x516 DUP2
0x517 AND
0x518 SWAP2
0x519 AND
0x51a EQ
0x51b DUP1
0x51c ISZERO
0x51d PUSH2 0x539
0x520 JUMPI
---
0x4fd: V431 = 0x0
0x501: M[0x0] = S0
0x502: V432 = 0x3
0x504: V433 = 0x20
0x506: M[0x20] = 0x3
0x507: V434 = 0x40
0x50a: V435 = SHA3 0x0 0x40
0x50b: V436 = S[V435]
0x50c: V437 = CALLER
0x50d: V438 = 0x1
0x50f: V439 = 0xa0
0x511: V440 = 0x2
0x513: V441 = EXP 0x2 0xa0
0x514: V442 = SUB 0x10000000000000000000000000000000000000000 0x1
0x517: V443 = AND 0xffffffffffffffffffffffffffffffffffffffff V437
0x519: V444 = AND V436 0xffffffffffffffffffffffffffffffffffffffff
0x51a: V445 = EQ V444 V443
0x51c: V446 = ISZERO V445
0x51d: V447 = 0x539
0x520: JUMPI 0x539 V446
---
Entry stack: [V10, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, V445]
Exit stack: [V10, S2, S1, S0, V445]

================================

Block 0x521
[0x521:0x538]
---
Predecessors: [0x4fd]
Successors: [0x539]
---
0x521 POP
0x522 PUSH1 0x0
0x524 DUP2
0x525 DUP2
0x526 MSTORE
0x527 PUSH1 0x3
0x529 PUSH1 0x20
0x52b MSTORE
0x52c PUSH1 0x40
0x52e SWAP1
0x52f SHA3
0x530 PUSH1 0x1
0x532 SWAP1
0x533 DUP2
0x534 ADD
0x535 SLOAD
0x536 SWAP1
0x537 SLOAD
0x538 EQ
---
0x522: V448 = 0x0
0x526: M[0x0] = S1
0x527: V449 = 0x3
0x529: V450 = 0x20
0x52b: M[0x20] = 0x3
0x52c: V451 = 0x40
0x52f: V452 = SHA3 0x0 0x40
0x530: V453 = 0x1
0x534: V454 = ADD 0x1 V452
0x535: V455 = S[V454]
0x537: V456 = S[0x1]
0x538: V457 = EQ V456 V455
---
Entry stack: [V10, S3, S2, S1, V445]
Stack pops: 2
Stack additions: [S1, V457]
Exit stack: [V10, S3, S2, S1, V457]

================================

Block 0x539
[0x539:0x53e]
---
Predecessors: [0x4fd, 0x521]
Successors: [0x53f, 0x609]
---
0x539 JUMPDEST
0x53a ISZERO
0x53b PUSH2 0x609
0x53e JUMPI
---
0x539: JUMPDEST 
0x53a: V458 = ISZERO S0
0x53b: V459 = 0x609
0x53e: JUMPI 0x609 V458
---
Entry stack: [V10, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S3, S2, S1]

================================

Block 0x53f
[0x53f:0x5ad]
---
Predecessors: [0x539]
Successors: [0xa89]
---
0x53f PUSH1 0x1
0x541 SWAP1
0x542 SWAP2
0x543 ADD
0x544 SWAP1
0x545 PUSH1 0x40
0x547 DUP1
0x548 MLOAD
0x549 SWAP1
0x54a DUP2
0x54b ADD
0x54c PUSH1 0x40
0x54e SWAP1
0x54f DUP2
0x550 MSTORE
0x551 PUSH1 0x0
0x553 DUP1
0x554 DUP4
0x555 MSTORE
0x556 PUSH1 0x20
0x558 DUP1
0x559 DUP5
0x55a ADD
0x55b DUP3
0x55c SWAP1
0x55d MSTORE
0x55e DUP5
0x55f DUP3
0x560 MSTORE
0x561 PUSH1 0x3
0x563 SWAP1
0x564 MSTORE
0x565 SHA3
0x566 DUP2
0x567 MLOAD
0x568 DUP2
0x569 SLOAD
0x56a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x57f NOT
0x580 AND
0x581 PUSH1 0x1
0x583 PUSH1 0xa0
0x585 PUSH1 0x2
0x587 EXP
0x588 SUB
0x589 SWAP2
0x58a SWAP1
0x58b SWAP2
0x58c AND
0x58d OR
0x58e DUP2
0x58f SSTORE
0x590 PUSH1 0x20
0x592 DUP3
0x593 ADD
0x594 MLOAD
0x595 PUSH1 0x1
0x597 SWAP2
0x598 DUP3
0x599 ADD
0x59a SSTORE
0x59b PUSH1 0x4
0x59d DUP1
0x59e SLOAD
0x59f SWAP1
0x5a0 SWAP3
0x5a1 POP
0x5a2 SWAP1
0x5a3 DUP2
0x5a4 ADD
0x5a5 PUSH2 0x5ae
0x5a8 DUP4
0x5a9 DUP3
0x5aa PUSH2 0xa89
0x5ad JUMP
---
0x53f: V460 = 0x1
0x543: V461 = ADD S1 0x1
0x545: V462 = 0x40
0x548: V463 = M[0x40]
0x54b: V464 = ADD V463 0x40
0x54c: V465 = 0x40
0x550: M[0x40] = V464
0x551: V466 = 0x0
0x555: M[V463] = 0x0
0x556: V467 = 0x20
0x55a: V468 = ADD V463 0x20
0x55d: M[V468] = 0x0
0x560: M[0x0] = S0
0x561: V469 = 0x3
0x564: M[0x20] = 0x3
0x565: V470 = SHA3 0x0 0x40
0x567: V471 = M[V463]
0x569: V472 = S[V470]
0x56a: V473 = 0xffffffffffffffffffffffffffffffffffffffff
0x57f: V474 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x580: V475 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V472
0x581: V476 = 0x1
0x583: V477 = 0xa0
0x585: V478 = 0x2
0x587: V479 = EXP 0x2 0xa0
0x588: V480 = SUB 0x10000000000000000000000000000000000000000 0x1
0x58c: V481 = AND 0xffffffffffffffffffffffffffffffffffffffff V471
0x58d: V482 = OR V481 V475
0x58f: S[V470] = V482
0x590: V483 = 0x20
0x593: V484 = ADD V463 0x20
0x594: V485 = M[V484]
0x595: V486 = 0x1
0x599: V487 = ADD 0x1 V470
0x59a: S[V487] = V485
0x59b: V488 = 0x4
0x59e: V489 = S[0x4]
0x5a4: V490 = ADD V489 0x1
0x5a5: V491 = 0x5ae
0x5aa: V492 = 0xa89
0x5ad: JUMP 0xa89
---
Entry stack: [V10, S2, S1, S0]
Stack pops: 2
Stack additions: [V461, S0, 0x4, V489, V490, 0x5ae, 0x4, V490]
Exit stack: [V10, S2, V461, S0, 0x4, V489, V490, 0x5ae, 0x4, V490]

================================

Block 0x5ae
[0x5ae:0x5bb]
---
Predecessors: [0xa84]
Successors: [0x5bc]
---
0x5ae JUMPDEST
0x5af SWAP2
0x5b0 PUSH1 0x0
0x5b2 MSTORE
0x5b3 PUSH1 0x20
0x5b5 PUSH1 0x0
0x5b7 SHA3
0x5b8 SWAP1
0x5b9 ADD
0x5ba PUSH1 0x0
---
0x5ae: JUMPDEST 
0x5b0: V493 = 0x0
0x5b2: M[0x0] = S2
0x5b3: V494 = 0x20
0x5b5: V495 = 0x0
0x5b7: V496 = SHA3 0x0 0x20
0x5b9: V497 = ADD S1 V496
0x5ba: V498 = 0x0
---
Entry stack: [V10, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S0, V497, 0x0]
Exit stack: [V10, S5, S4, S3, S0, V497, 0x0]

================================

Block 0x5bc
[0x5bc:0x608]
---
Predecessors: [0x5ae]
Successors: [0x609]
---
0x5bc JUMPDEST
0x5bd POP
0x5be DUP3
0x5bf SWAP1
0x5c0 SSTORE
0x5c1 POP
0x5c2 PUSH1 0x1
0x5c4 SLOAD
0x5c5 PUSH32 0xb56b591803cc7bbb211b8af54a52c3a403e25fb272b9b853e59f42cef9e41d98
0x5e6 CALLER
0x5e7 DUP4
0x5e8 PUSH1 0x40
0x5ea MLOAD
0x5eb PUSH1 0x1
0x5ed PUSH1 0xa0
0x5ef PUSH1 0x2
0x5f1 EXP
0x5f2 SUB
0x5f3 SWAP1
0x5f4 SWAP3
0x5f5 AND
0x5f6 DUP3
0x5f7 MSTORE
0x5f8 PUSH1 0x20
0x5fa DUP3
0x5fb ADD
0x5fc MSTORE
0x5fd PUSH1 0x40
0x5ff SWAP1
0x600 DUP2
0x601 ADD
0x602 SWAP1
0x603 MLOAD
0x604 DUP1
0x605 SWAP2
0x606 SUB
0x607 SWAP1
0x608 LOG2
---
0x5bc: JUMPDEST 
0x5c0: S[V497] = S3
0x5c2: V499 = 0x1
0x5c4: V500 = S[0x1]
0x5c5: V501 = 0xb56b591803cc7bbb211b8af54a52c3a403e25fb272b9b853e59f42cef9e41d98
0x5e6: V502 = CALLER
0x5e8: V503 = 0x40
0x5ea: V504 = M[0x40]
0x5eb: V505 = 0x1
0x5ed: V506 = 0xa0
0x5ef: V507 = 0x2
0x5f1: V508 = EXP 0x2 0xa0
0x5f2: V509 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5f5: V510 = AND V502 0xffffffffffffffffffffffffffffffffffffffff
0x5f7: M[V504] = V510
0x5f8: V511 = 0x20
0x5fb: V512 = ADD V504 0x20
0x5fc: M[V512] = S3
0x5fd: V513 = 0x40
0x601: V514 = ADD 0x40 V504
0x603: V515 = M[0x40]
0x606: V516 = SUB V514 V515
0x608: LOG V515 V516 0xb56b591803cc7bbb211b8af54a52c3a403e25fb272b9b853e59f42cef9e41d98 V500
---
Entry stack: [V10, S5, S4, S3, S2, V497, 0x0]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V10, S5, S4, S3]

================================

Block 0x609
[0x609:0x609]
---
Predecessors: [0x539, 0x5bc]
Successors: [0x60a]
---
0x609 JUMPDEST
---
0x609: JUMPDEST 
---
Entry stack: [V10, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S2, S1, S0]

================================

Block 0x60a
[0x60a:0x611]
---
Predecessors: [0x609]
Successors: [0x4f4]
---
0x60a JUMPDEST
0x60b PUSH1 0x1
0x60d ADD
0x60e PUSH2 0x4f4
0x611 JUMP
---
0x60a: JUMPDEST 
0x60b: V517 = 0x1
0x60d: V518 = ADD 0x1 S0
0x60e: V519 = 0x4f4
0x611: JUMP 0x4f4
---
Entry stack: [V10, S2, S1, S0]
Stack pops: 1
Stack additions: [V518]
Exit stack: [V10, S2, S1, V518]

================================

Block 0x612
[0x612:0x61b]
---
Predecessors: [0x4f4]
Successors: [0x4ad, 0x61c]
---
0x612 JUMPDEST
0x613 PUSH1 0x0
0x615 DUP3
0x616 GT
0x617 ISZERO
0x618 PUSH2 0x4ad
0x61b JUMPI
---
0x612: JUMPDEST 
0x613: V520 = 0x0
0x616: V521 = GT S1 0x0
0x617: V522 = ISZERO V521
0x618: V523 = 0x4ad
0x61b: JUMPI 0x4ad V522
---
Entry stack: [V10, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, S2, S1, S0]

================================

Block 0x61c
[0x61c:0x633]
---
Predecessors: [0x612]
Successors: [0x634]
---
0x61c PUSH1 0x1
0x61e PUSH1 0xa0
0x620 PUSH1 0x2
0x622 EXP
0x623 SUB
0x624 CALLER
0x625 AND
0x626 PUSH2 0x8fc
0x629 PUSH1 0x6
0x62b PUSH8 0x1aa535d3d0c0000
---
0x61c: V524 = 0x1
0x61e: V525 = 0xa0
0x620: V526 = 0x2
0x622: V527 = EXP 0x2 0xa0
0x623: V528 = SUB 0x10000000000000000000000000000000000000000 0x1
0x624: V529 = CALLER
0x625: V530 = AND V529 0xffffffffffffffffffffffffffffffffffffffff
0x626: V531 = 0x8fc
0x629: V532 = 0x6
0x62b: V533 = 0x1aa535d3d0c0000
---
Entry stack: [V10, S2, S1, S0]
Stack pops: 0
Stack additions: [V530, 0x8fc, 0x6, 0x1aa535d3d0c0000]
Exit stack: [V10, S2, S1, S0, V530, 0x8fc, 0x6, 0x1aa535d3d0c0000]

================================

Block 0x634
[0x634:0x657]
---
Predecessors: [0x61c]
Successors: [0x4ad, 0x658]
---
0x634 JUMPDEST
0x635 DIV
0x636 DUP5
0x637 MUL
0x638 SWAP1
0x639 DUP2
0x63a ISZERO
0x63b MUL
0x63c SWAP1
0x63d PUSH1 0x40
0x63f MLOAD
0x640 PUSH1 0x0
0x642 PUSH1 0x40
0x644 MLOAD
0x645 DUP1
0x646 DUP4
0x647 SUB
0x648 DUP2
0x649 DUP6
0x64a DUP9
0x64b DUP9
0x64c CALL
0x64d SWAP4
0x64e POP
0x64f POP
0x650 POP
0x651 POP
0x652 ISZERO
0x653 ISZERO
0x654 PUSH2 0x4ad
0x657 JUMPI
---
0x634: JUMPDEST 
0x635: V534 = DIV 0x1aa535d3d0c0000 0x6
0x637: V535 = MUL S5 0x470de4df820000
0x63a: V536 = ISZERO V535
0x63b: V537 = MUL V536 0x8fc
0x63d: V538 = 0x40
0x63f: V539 = M[0x40]
0x640: V540 = 0x0
0x642: V541 = 0x40
0x644: V542 = M[0x40]
0x647: V543 = SUB V539 V542
0x64c: V544 = CALL V537 V530 V535 V542 V543 V542 0x0
0x652: V545 = ISZERO V544
0x653: V546 = ISZERO V545
0x654: V547 = 0x4ad
0x657: JUMPI 0x4ad V546
---
Entry stack: [V10, S6, S5, S4, V530, 0x8fc, 0x6, 0x1aa535d3d0c0000]
Stack pops: 6
Stack additions: [S5, S4]
Exit stack: [V10, S6, S5, S4]

================================

Block 0x658
[0x658:0x65b]
---
Predecessors: [0x634]
Successors: []
---
0x658 PUSH1 0x0
0x65a DUP1
0x65b REVERT
---
0x658: V548 = 0x0
0x65b: REVERT 0x0 0x0
---
Entry stack: [V10, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S2, S1, S0]

================================

Block 0x65c
[0x65c:0x65c]
---
Predecessors: []
Successors: [0x65d]
---
0x65c JUMPDEST
---
0x65c: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x65d
[0x65d:0x65d]
---
Predecessors: [0x65c]
Successors: [0x65e]
---
0x65d JUMPDEST
---
0x65d: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x65e
[0x65e:0x661]
---
Predecessors: [0x65d]
Successors: []
Has unresolved jump.
---
0x65e JUMPDEST
0x65f POP
0x660 POP
0x661 JUMP
---
0x65e: JUMPDEST 
0x661: JUMP S2
---
Entry stack: []
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0x662
[0x662:0x667]
---
Predecessors: [0x165]
Successors: [0xf7]
---
0x662 JUMPDEST
0x663 PUSH1 0x1
0x665 SLOAD
0x666 DUP2
0x667 JUMP
---
0x662: JUMPDEST 
0x663: V549 = 0x1
0x665: V550 = S[0x1]
0x667: JUMP 0xf7
---
Entry stack: [V10, 0xf7]
Stack pops: 1
Stack additions: [S0, V550]
Exit stack: [V10, 0xf7, V550]

================================

Block 0x668
[0x668:0x674]
---
Predecessors: [0x18a]
Successors: [0x675, 0x676]
---
0x668 JUMPDEST
0x669 PUSH1 0x4
0x66b DUP1
0x66c SLOAD
0x66d DUP3
0x66e SWAP1
0x66f DUP2
0x670 LT
0x671 PUSH2 0x676
0x674 JUMPI
---
0x668: JUMPDEST 
0x669: V551 = 0x4
0x66c: V552 = S[0x4]
0x670: V553 = LT V117 V552
0x671: V554 = 0x676
0x674: JUMPI 0x676 V553
---
Entry stack: [V10, 0xf7, V117]
Stack pops: 1
Stack additions: [S0, 0x4, S0]
Exit stack: [V10, 0xf7, V117, 0x4, V117]

================================

Block 0x675
[0x675:0x675]
---
Predecessors: [0x668]
Successors: []
---
0x675 INVALID
---
0x675: INVALID 
---
Entry stack: [V10, 0xf7, V117, 0x4, V117]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf7, V117, 0x4, V117]

================================

Block 0x676
[0x676:0x683]
---
Predecessors: [0x668]
Successors: [0x684]
---
0x676 JUMPDEST
0x677 SWAP1
0x678 PUSH1 0x0
0x67a MSTORE
0x67b PUSH1 0x20
0x67d PUSH1 0x0
0x67f SHA3
0x680 SWAP1
0x681 ADD
0x682 PUSH1 0x0
---
0x676: JUMPDEST 
0x678: V555 = 0x0
0x67a: M[0x0] = 0x4
0x67b: V556 = 0x20
0x67d: V557 = 0x0
0x67f: V558 = SHA3 0x0 0x20
0x681: V559 = ADD V117 V558
0x682: V560 = 0x0
---
Entry stack: [V10, 0xf7, V117, 0x4, V117]
Stack pops: 2
Stack additions: [V559, 0x0]
Exit stack: [V10, 0xf7, V117, V559, 0x0]

================================

Block 0x684
[0x684:0x68a]
---
Predecessors: [0x676]
Successors: [0xf7]
---
0x684 JUMPDEST
0x685 POP
0x686 SLOAD
0x687 SWAP1
0x688 POP
0x689 DUP2
0x68a JUMP
---
0x684: JUMPDEST 
0x686: V561 = S[V559]
0x68a: JUMP 0xf7
---
Entry stack: [V10, 0xf7, V117, V559, 0x0]
Stack pops: 4
Stack additions: [S3, V561]
Exit stack: [V10, 0xf7, V561]

================================

Block 0x68b
[0x68b:0x699]
---
Predecessors: [0x1b2]
Successors: [0x1ba]
---
0x68b JUMPDEST
0x68c PUSH1 0x0
0x68e SLOAD
0x68f PUSH1 0x1
0x691 PUSH1 0xa0
0x693 PUSH1 0x2
0x695 EXP
0x696 SUB
0x697 AND
0x698 DUP2
0x699 JUMP
---
0x68b: JUMPDEST 
0x68c: V562 = 0x0
0x68e: V563 = S[0x0]
0x68f: V564 = 0x1
0x691: V565 = 0xa0
0x693: V566 = 0x2
0x695: V567 = EXP 0x2 0xa0
0x696: V568 = SUB 0x10000000000000000000000000000000000000000 0x1
0x697: V569 = AND 0xffffffffffffffffffffffffffffffffffffffff V563
0x699: JUMP 0x1ba
---
Entry stack: [V10, 0x1ba]
Stack pops: 1
Stack additions: [S0, V569]
Exit stack: [V10, 0x1ba, V569]

================================

Block 0x69a
[0x69a:0x6b1]
---
Predecessors: [0x1e1]
Successors: [0x4e3, 0x6b2]
---
0x69a JUMPDEST
0x69b PUSH1 0x0
0x69d SLOAD
0x69e CALLER
0x69f PUSH1 0x1
0x6a1 PUSH1 0xa0
0x6a3 PUSH1 0x2
0x6a5 EXP
0x6a6 SUB
0x6a7 SWAP1
0x6a8 DUP2
0x6a9 AND
0x6aa SWAP2
0x6ab AND
0x6ac EQ
0x6ad ISZERO
0x6ae PUSH2 0x4e3
0x6b1 JUMPI
---
0x69a: JUMPDEST 
0x69b: V570 = 0x0
0x69d: V571 = S[0x0]
0x69e: V572 = CALLER
0x69f: V573 = 0x1
0x6a1: V574 = 0xa0
0x6a3: V575 = 0x2
0x6a5: V576 = EXP 0x2 0xa0
0x6a6: V577 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6a9: V578 = AND 0xffffffffffffffffffffffffffffffffffffffff V572
0x6ab: V579 = AND V571 0xffffffffffffffffffffffffffffffffffffffff
0x6ac: V580 = EQ V579 V578
0x6ad: V581 = ISZERO V580
0x6ae: V582 = 0x4e3
0x6b1: JUMPI 0x4e3 V581
---
Entry stack: [V10, 0xe1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe1]

================================

Block 0x6b2
[0x6b2:0x6c3]
---
Predecessors: [0x69a]
Successors: [0x6c4]
---
0x6b2 PUSH1 0x5
0x6b4 DUP1
0x6b5 SLOAD
0x6b6 PUSH1 0xff
0x6b8 NOT
0x6b9 DUP2
0x6ba AND
0x6bb PUSH1 0xff
0x6bd SWAP1
0x6be SWAP2
0x6bf AND
0x6c0 ISZERO
0x6c1 OR
0x6c2 SWAP1
0x6c3 SSTORE
---
0x6b2: V583 = 0x5
0x6b5: V584 = S[0x5]
0x6b6: V585 = 0xff
0x6b8: V586 = NOT 0xff
0x6ba: V587 = AND V584 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
0x6bb: V588 = 0xff
0x6bf: V589 = AND V584 0xff
0x6c0: V590 = ISZERO V589
0x6c1: V591 = OR V590 V587
0x6c3: S[0x5] = V591
---
Entry stack: [V10, 0xe1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe1]

================================

Block 0x6c4
[0x6c4:0x6c4]
---
Predecessors: [0x6b2]
Successors: [0x6c5]
---
0x6c4 JUMPDEST
---
0x6c4: JUMPDEST 
---
Entry stack: [V10, 0xe1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe1]

================================

Block 0x6c5
[0x6c5:0x6c6]
---
Predecessors: [0x6c4]
Successors: [0xe1]
---
0x6c5 JUMPDEST
0x6c6 JUMP
---
0x6c5: JUMPDEST 
0x6c6: JUMP 0xe1
---
Entry stack: [V10, 0xe1]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x6c7
[0x6c7:0x6cc]
---
Predecessors: [0x1f6]
Successors: [0xf7]
---
0x6c7 JUMPDEST
0x6c8 PUSH1 0x2
0x6ca SLOAD
0x6cb DUP2
0x6cc JUMP
---
0x6c7: JUMPDEST 
0x6c8: V592 = 0x2
0x6ca: V593 = S[0x2]
0x6cc: JUMP 0xf7
---
Entry stack: [V10, 0xf7]
Stack pops: 1
Stack additions: [S0, V593]
Exit stack: [V10, 0xf7, V593]

================================

Block 0x6cd
[0x6cd:0x6d1]
---
Predecessors: [0x225]
Successors: [0xf7]
---
0x6cd JUMPDEST
0x6ce PUSH1 0x6
0x6d0 DUP2
0x6d1 JUMP
---
0x6cd: JUMPDEST 
0x6ce: V594 = 0x6
0x6d1: JUMP 0xf7
---
Entry stack: [V10, 0xf7]
Stack pops: 1
Stack additions: [S0, 0x6]
Exit stack: [V10, 0xf7, 0x6]

================================

Block 0x6d2
[0x6d2:0x6f6]
---
Predecessors: [0x24a]
Successors: [0x255]
---
0x6d2 JUMPDEST
0x6d3 PUSH1 0x3
0x6d5 PUSH1 0x20
0x6d7 MSTORE
0x6d8 PUSH1 0x0
0x6da SWAP1
0x6db DUP2
0x6dc MSTORE
0x6dd PUSH1 0x40
0x6df SWAP1
0x6e0 SHA3
0x6e1 DUP1
0x6e2 SLOAD
0x6e3 PUSH1 0x1
0x6e5 SWAP1
0x6e6 SWAP2
0x6e7 ADD
0x6e8 SLOAD
0x6e9 PUSH1 0x1
0x6eb PUSH1 0xa0
0x6ed PUSH1 0x2
0x6ef EXP
0x6f0 SUB
0x6f1 SWAP1
0x6f2 SWAP2
0x6f3 AND
0x6f4 SWAP1
0x6f5 DUP3
0x6f6 JUMP
---
0x6d2: JUMPDEST 
0x6d3: V595 = 0x3
0x6d5: V596 = 0x20
0x6d7: M[0x20] = 0x3
0x6d8: V597 = 0x0
0x6dc: M[0x0] = V185
0x6dd: V598 = 0x40
0x6e0: V599 = SHA3 0x0 0x40
0x6e2: V600 = S[V599]
0x6e3: V601 = 0x1
0x6e7: V602 = ADD V599 0x1
0x6e8: V603 = S[V602]
0x6e9: V604 = 0x1
0x6eb: V605 = 0xa0
0x6ed: V606 = 0x2
0x6ef: V607 = EXP 0x2 0xa0
0x6f0: V608 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6f3: V609 = AND V600 0xffffffffffffffffffffffffffffffffffffffff
0x6f6: JUMP 0x255
---
Entry stack: [V10, 0x255, V185]
Stack pops: 2
Stack additions: [S1, V609, V603]
Exit stack: [V10, 0x255, V609, V603]

================================

Block 0x6f7
[0x6f7:0x702]
---
Predecessors: [0x282]
Successors: [0xf7]
---
0x6f7 JUMPDEST
0x6f8 PUSH8 0x16345785d8a0000
0x701 DUP2
0x702 JUMP
---
0x6f7: JUMPDEST 
0x6f8: V610 = 0x16345785d8a0000
0x702: JUMP 0xf7
---
Entry stack: [V10, 0xf7]
Stack pops: 1
Stack additions: [S0, 0x16345785d8a0000]
Exit stack: [V10, 0xf7, 0x16345785d8a0000]

================================

Block 0x703
[0x703:0x70e]
---
Predecessors: [0x2a7]
Successors: [0x70f]
---
0x703 JUMPDEST
0x704 PUSH1 0x6
0x706 PUSH8 0x1aa535d3d0c0000
---
0x703: JUMPDEST 
0x704: V611 = 0x6
0x706: V612 = 0x1aa535d3d0c0000
---
Entry stack: [V10, 0xf7]
Stack pops: 0
Stack additions: [0x6, 0x1aa535d3d0c0000]
Exit stack: [V10, 0xf7, 0x6, 0x1aa535d3d0c0000]

================================

Block 0x70f
[0x70f:0x712]
---
Predecessors: [0x703]
Successors: [0xf7]
---
0x70f JUMPDEST
0x710 DIV
0x711 DUP2
0x712 JUMP
---
0x70f: JUMPDEST 
0x710: V613 = DIV 0x1aa535d3d0c0000 0x6
0x712: JUMP 0xf7
---
Entry stack: [V10, 0xf7, 0x6, 0x1aa535d3d0c0000]
Stack pops: 3
Stack additions: [S2, 0x470de4df820000]
Exit stack: [V10, 0xf7, 0x470de4df820000]

================================

Block 0x713
[0x713:0x72b]
---
Predecessors: [0x2cc]
Successors: [0x72c, 0x8d5]
---
0x713 JUMPDEST
0x714 PUSH1 0x0
0x716 DUP1
0x717 SLOAD
0x718 CALLER
0x719 PUSH1 0x1
0x71b PUSH1 0xa0
0x71d PUSH1 0x2
0x71f EXP
0x720 SUB
0x721 SWAP1
0x722 DUP2
0x723 AND
0x724 SWAP2
0x725 AND
0x726 EQ
0x727 ISZERO
0x728 PUSH2 0x8d5
0x72b JUMPI
---
0x713: JUMPDEST 
0x714: V614 = 0x0
0x717: V615 = S[0x0]
0x718: V616 = CALLER
0x719: V617 = 0x1
0x71b: V618 = 0xa0
0x71d: V619 = 0x2
0x71f: V620 = EXP 0x2 0xa0
0x720: V621 = SUB 0x10000000000000000000000000000000000000000 0x1
0x723: V622 = AND 0xffffffffffffffffffffffffffffffffffffffff V616
0x725: V623 = AND V615 0xffffffffffffffffffffffffffffffffffffffff
0x726: V624 = EQ V623 V622
0x727: V625 = ISZERO V624
0x728: V626 = 0x8d5
0x72b: JUMPI 0x8d5 V625
---
Entry stack: [V10, 0xe1]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0xe1, 0x0]

================================

Block 0x72c
[0x72c:0x73c]
---
Predecessors: [0x713]
Successors: [0x73d]
---
0x72c POP
0x72d PUSH1 0x5
0x72f DUP1
0x730 SLOAD
0x731 PUSH1 0xff
0x733 NOT
0x734 AND
0x735 PUSH1 0x1
0x737 SWAP1
0x738 DUP2
0x739 OR
0x73a SWAP1
0x73b SWAP2
0x73c SSTORE
---
0x72d: V627 = 0x5
0x730: V628 = S[0x5]
0x731: V629 = 0xff
0x733: V630 = NOT 0xff
0x734: V631 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V628
0x735: V632 = 0x1
0x739: V633 = OR 0x1 V631
0x73c: S[0x5] = V633
---
Entry stack: [V10, 0xe1, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V10, 0xe1, 0x1]

================================

Block 0x73d
[0x73d:0x745]
---
Predecessors: [0x72c, 0x813]
Successors: [0x746, 0x81b]
---
0x73d JUMPDEST
0x73e PUSH1 0x6
0x740 DUP2
0x741 GT
0x742 PUSH2 0x81b
0x745 JUMPI
---
0x73d: JUMPDEST 
0x73e: V634 = 0x6
0x741: V635 = GT S0 0x6
0x742: V636 = 0x81b
0x745: JUMPI 0x81b V635
---
Entry stack: [V10, 0xe1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0xe1, S0]

================================

Block 0x746
[0x746:0x761]
---
Predecessors: [0x73d]
Successors: [0x762, 0x811]
---
0x746 PUSH1 0x0
0x748 DUP2
0x749 DUP2
0x74a MSTORE
0x74b PUSH1 0x3
0x74d PUSH1 0x20
0x74f MSTORE
0x750 PUSH1 0x40
0x752 SWAP1
0x753 SHA3
0x754 PUSH1 0x1
0x756 SWAP1
0x757 DUP2
0x758 ADD
0x759 SLOAD
0x75a SWAP1
0x75b SLOAD
0x75c EQ
0x75d ISZERO
0x75e PUSH2 0x811
0x761 JUMPI
---
0x746: V637 = 0x0
0x74a: M[0x0] = S0
0x74b: V638 = 0x3
0x74d: V639 = 0x20
0x74f: M[0x20] = 0x3
0x750: V640 = 0x40
0x753: V641 = SHA3 0x0 0x40
0x754: V642 = 0x1
0x758: V643 = ADD 0x1 V641
0x759: V644 = S[V643]
0x75b: V645 = S[0x1]
0x75c: V646 = EQ V645 V644
0x75d: V647 = ISZERO V646
0x75e: V648 = 0x811
0x761: JUMPI 0x811 V647
---
Entry stack: [V10, 0xe1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0xe1, S0]

================================

Block 0x762
[0x762:0x7ea]
---
Predecessors: [0x746]
Successors: [0x7eb]
---
0x762 PUSH1 0x1
0x764 SLOAD
0x765 PUSH1 0x0
0x767 DUP3
0x768 DUP2
0x769 MSTORE
0x76a PUSH1 0x3
0x76c PUSH1 0x20
0x76e MSTORE
0x76f PUSH1 0x40
0x771 SWAP1
0x772 DUP2
0x773 SWAP1
0x774 SHA3
0x775 SLOAD
0x776 PUSH32 0xb56b591803cc7bbb211b8af54a52c3a403e25fb272b9b853e59f42cef9e41d98
0x797 SWAP2
0x798 PUSH1 0x1
0x79a PUSH1 0xa0
0x79c PUSH1 0x2
0x79e EXP
0x79f SUB
0x7a0 SWAP1
0x7a1 SWAP2
0x7a2 AND
0x7a3 SWAP1
0x7a4 DUP5
0x7a5 SWAP1
0x7a6 MLOAD
0x7a7 PUSH1 0x1
0x7a9 PUSH1 0xa0
0x7ab PUSH1 0x2
0x7ad EXP
0x7ae SUB
0x7af SWAP1
0x7b0 SWAP3
0x7b1 AND
0x7b2 DUP3
0x7b3 MSTORE
0x7b4 PUSH1 0x20
0x7b6 DUP3
0x7b7 ADD
0x7b8 MSTORE
0x7b9 PUSH1 0x40
0x7bb SWAP1
0x7bc DUP2
0x7bd ADD
0x7be SWAP1
0x7bf MLOAD
0x7c0 DUP1
0x7c1 SWAP2
0x7c2 SUB
0x7c3 SWAP1
0x7c4 LOG2
0x7c5 PUSH1 0x0
0x7c7 DUP2
0x7c8 DUP2
0x7c9 MSTORE
0x7ca PUSH1 0x3
0x7cc PUSH1 0x20
0x7ce MSTORE
0x7cf PUSH1 0x40
0x7d1 SWAP1
0x7d2 SHA3
0x7d3 SLOAD
0x7d4 PUSH1 0x1
0x7d6 PUSH1 0xa0
0x7d8 PUSH1 0x2
0x7da EXP
0x7db SUB
0x7dc AND
0x7dd PUSH2 0x8fc
0x7e0 PUSH1 0x6
0x7e2 PUSH8 0x1aa535d3d0c0000
---
0x762: V649 = 0x1
0x764: V650 = S[0x1]
0x765: V651 = 0x0
0x769: M[0x0] = S0
0x76a: V652 = 0x3
0x76c: V653 = 0x20
0x76e: M[0x20] = 0x3
0x76f: V654 = 0x40
0x774: V655 = SHA3 0x0 0x40
0x775: V656 = S[V655]
0x776: V657 = 0xb56b591803cc7bbb211b8af54a52c3a403e25fb272b9b853e59f42cef9e41d98
0x798: V658 = 0x1
0x79a: V659 = 0xa0
0x79c: V660 = 0x2
0x79e: V661 = EXP 0x2 0xa0
0x79f: V662 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7a2: V663 = AND V656 0xffffffffffffffffffffffffffffffffffffffff
0x7a6: V664 = M[0x40]
0x7a7: V665 = 0x1
0x7a9: V666 = 0xa0
0x7ab: V667 = 0x2
0x7ad: V668 = EXP 0x2 0xa0
0x7ae: V669 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7b1: V670 = AND V663 0xffffffffffffffffffffffffffffffffffffffff
0x7b3: M[V664] = V670
0x7b4: V671 = 0x20
0x7b7: V672 = ADD V664 0x20
0x7b8: M[V672] = S0
0x7b9: V673 = 0x40
0x7bd: V674 = ADD 0x40 V664
0x7bf: V675 = M[0x40]
0x7c2: V676 = SUB V674 V675
0x7c4: LOG V675 V676 0xb56b591803cc7bbb211b8af54a52c3a403e25fb272b9b853e59f42cef9e41d98 V650
0x7c5: V677 = 0x0
0x7c9: M[0x0] = S0
0x7ca: V678 = 0x3
0x7cc: V679 = 0x20
0x7ce: M[0x20] = 0x3
0x7cf: V680 = 0x40
0x7d2: V681 = SHA3 0x0 0x40
0x7d3: V682 = S[V681]
0x7d4: V683 = 0x1
0x7d6: V684 = 0xa0
0x7d8: V685 = 0x2
0x7da: V686 = EXP 0x2 0xa0
0x7db: V687 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7dc: V688 = AND 0xffffffffffffffffffffffffffffffffffffffff V682
0x7dd: V689 = 0x8fc
0x7e0: V690 = 0x6
0x7e2: V691 = 0x1aa535d3d0c0000
---
Entry stack: [V10, 0xe1, S0]
Stack pops: 1
Stack additions: [S0, V688, 0x8fc, 0x6, 0x1aa535d3d0c0000]
Exit stack: [V10, 0xe1, S0, V688, 0x8fc, 0x6, 0x1aa535d3d0c0000]

================================

Block 0x7eb
[0x7eb:0x80c]
---
Predecessors: [0x762]
Successors: [0x80d, 0x811]
---
0x7eb JUMPDEST
0x7ec DIV
0x7ed SWAP1
0x7ee DUP2
0x7ef ISZERO
0x7f0 MUL
0x7f1 SWAP1
0x7f2 PUSH1 0x40
0x7f4 MLOAD
0x7f5 PUSH1 0x0
0x7f7 PUSH1 0x40
0x7f9 MLOAD
0x7fa DUP1
0x7fb DUP4
0x7fc SUB
0x7fd DUP2
0x7fe DUP6
0x7ff DUP9
0x800 DUP9
0x801 CALL
0x802 SWAP4
0x803 POP
0x804 POP
0x805 POP
0x806 POP
0x807 ISZERO
0x808 ISZERO
0x809 PUSH2 0x811
0x80c JUMPI
---
0x7eb: JUMPDEST 
0x7ec: V692 = DIV 0x1aa535d3d0c0000 0x6
0x7ef: V693 = ISZERO 0x470de4df820000
0x7f0: V694 = MUL 0x0 0x8fc
0x7f2: V695 = 0x40
0x7f4: V696 = M[0x40]
0x7f5: V697 = 0x0
0x7f7: V698 = 0x40
0x7f9: V699 = M[0x40]
0x7fc: V700 = SUB V696 V699
0x801: V701 = CALL 0x0 V688 0x470de4df820000 V699 V700 V699 0x0
0x807: V702 = ISZERO V701
0x808: V703 = ISZERO V702
0x809: V704 = 0x811
0x80c: JUMPI 0x811 V703
---
Entry stack: [V10, 0xe1, S4, V688, 0x8fc, 0x6, 0x1aa535d3d0c0000]
Stack pops: 4
Stack additions: []
Exit stack: [V10, 0xe1, S4]

================================

Block 0x80d
[0x80d:0x810]
---
Predecessors: [0x7eb]
Successors: []
---
0x80d PUSH1 0x0
0x80f DUP1
0x810 REVERT
---
0x80d: V705 = 0x0
0x810: REVERT 0x0 0x0
---
Entry stack: [V10, 0xe1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe1, S0]

================================

Block 0x811
[0x811:0x811]
---
Predecessors: [0x746, 0x7eb]
Successors: [0x812]
---
0x811 JUMPDEST
---
0x811: JUMPDEST 
---
Entry stack: [V10, 0xe1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe1, S0]

================================

Block 0x812
[0x812:0x812]
---
Predecessors: [0x811]
Successors: [0x813]
---
0x812 JUMPDEST
---
0x812: JUMPDEST 
---
Entry stack: [V10, 0xe1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe1, S0]

================================

Block 0x813
[0x813:0x81a]
---
Predecessors: [0x812]
Successors: [0x73d]
---
0x813 JUMPDEST
0x814 PUSH1 0x1
0x816 ADD
0x817 PUSH2 0x73d
0x81a JUMP
---
0x813: JUMPDEST 
0x814: V706 = 0x1
0x816: V707 = ADD 0x1 S0
0x817: V708 = 0x73d
0x81a: JUMP 0x73d
---
Entry stack: [V10, 0xe1, S0]
Stack pops: 1
Stack additions: [V707]
Exit stack: [V10, 0xe1, V707]

================================

Block 0x81b
[0x81b:0x8d2]
---
Predecessors: [0x73d]
Successors: [0xa89]
---
0x81b JUMPDEST
0x81c PUSH1 0x1
0x81e SLOAD
0x81f PUSH32 0xf6f505c4e2afc66c45fc86d0f67a029205edf1dac8aa263e5f77ac6818f0572b
0x840 PUSH1 0x0
0x842 DUP1
0x843 PUSH1 0x0
0x845 DUP1
0x846 PUSH1 0x0
0x848 DUP1
0x849 PUSH1 0x0
0x84b DUP1
0x84c PUSH1 0x0
0x84e DUP1
0x84f PUSH1 0x0
0x851 PUSH1 0x40
0x853 MLOAD
0x854 SWAP11
0x855 DUP12
0x856 MSTORE
0x857 PUSH1 0x1
0x859 PUSH1 0xa0
0x85b PUSH1 0x2
0x85d EXP
0x85e SUB
0x85f SWAP10
0x860 DUP11
0x861 AND
0x862 PUSH1 0x20
0x864 DUP13
0x865 ADD
0x866 MSTORE
0x867 PUSH1 0x40
0x869 DUP1
0x86a DUP13
0x86b ADD
0x86c SWAP10
0x86d SWAP1
0x86e SWAP10
0x86f MSTORE
0x870 PUSH1 0x60
0x872 DUP12
0x873 ADD
0x874 SWAP8
0x875 SWAP1
0x876 SWAP8
0x877 MSTORE
0x878 PUSH1 0x80
0x87a DUP11
0x87b ADD
0x87c SWAP6
0x87d SWAP1
0x87e SWAP6
0x87f MSTORE
0x880 PUSH1 0xa0
0x882 DUP10
0x883 ADD
0x884 SWAP4
0x885 SWAP1
0x886 SWAP4
0x887 MSTORE
0x888 PUSH1 0xc0
0x88a DUP9
0x88b ADD
0x88c SWAP2
0x88d SWAP1
0x88e SWAP2
0x88f MSTORE
0x890 PUSH1 0xe0
0x892 DUP8
0x893 ADD
0x894 MSTORE
0x895 DUP5
0x896 AND
0x897 PUSH2 0x100
0x89a DUP7
0x89b ADD
0x89c MSTORE
0x89d SWAP1
0x89e SWAP3
0x89f AND
0x8a0 PUSH2 0x120
0x8a3 DUP5
0x8a4 ADD
0x8a5 MSTORE
0x8a6 PUSH2 0x140
0x8a9 DUP4
0x8aa ADD
0x8ab SWAP2
0x8ac SWAP1
0x8ad SWAP2
0x8ae MSTORE
0x8af PUSH2 0x160
0x8b2 SWAP1
0x8b3 SWAP2
0x8b4 ADD
0x8b5 SWAP1
0x8b6 MLOAD
0x8b7 DUP1
0x8b8 SWAP2
0x8b9 SUB
0x8ba SWAP1
0x8bb LOG2
0x8bc PUSH1 0x1
0x8be DUP1
0x8bf SLOAD
0x8c0 DUP2
0x8c1 ADD
0x8c2 DUP2
0x8c3 SSTORE
0x8c4 PUSH1 0x2
0x8c6 SSTORE
0x8c7 PUSH1 0x0
0x8c9 PUSH2 0x4ad
0x8cc PUSH1 0x4
0x8ce DUP3
0x8cf PUSH2 0xa89
0x8d2 JUMP
---
0x81b: JUMPDEST 
0x81c: V709 = 0x1
0x81e: V710 = S[0x1]
0x81f: V711 = 0xf6f505c4e2afc66c45fc86d0f67a029205edf1dac8aa263e5f77ac6818f0572b
0x840: V712 = 0x0
0x843: V713 = 0x0
0x846: V714 = 0x0
0x849: V715 = 0x0
0x84c: V716 = 0x0
0x84f: V717 = 0x0
0x851: V718 = 0x40
0x853: V719 = M[0x40]
0x856: M[V719] = 0x0
0x857: V720 = 0x1
0x859: V721 = 0xa0
0x85b: V722 = 0x2
0x85d: V723 = EXP 0x2 0xa0
0x85e: V724 = SUB 0x10000000000000000000000000000000000000000 0x1
0x861: V725 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x862: V726 = 0x20
0x865: V727 = ADD V719 0x20
0x866: M[V727] = 0x0
0x867: V728 = 0x40
0x86b: V729 = ADD V719 0x40
0x86f: M[V729] = 0x0
0x870: V730 = 0x60
0x873: V731 = ADD V719 0x60
0x877: M[V731] = 0x0
0x878: V732 = 0x80
0x87b: V733 = ADD V719 0x80
0x87f: M[V733] = 0x0
0x880: V734 = 0xa0
0x883: V735 = ADD V719 0xa0
0x887: M[V735] = 0x0
0x888: V736 = 0xc0
0x88b: V737 = ADD V719 0xc0
0x88f: M[V737] = 0x0
0x890: V738 = 0xe0
0x893: V739 = ADD V719 0xe0
0x894: M[V739] = 0x0
0x896: V740 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x897: V741 = 0x100
0x89b: V742 = ADD V719 0x100
0x89c: M[V742] = 0x0
0x89f: V743 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x8a0: V744 = 0x120
0x8a4: V745 = ADD V719 0x120
0x8a5: M[V745] = 0x0
0x8a6: V746 = 0x140
0x8aa: V747 = ADD V719 0x140
0x8ae: M[V747] = 0x0
0x8af: V748 = 0x160
0x8b4: V749 = ADD V719 0x160
0x8b6: V750 = M[0x40]
0x8b9: V751 = SUB V749 V750
0x8bb: LOG V750 V751 0xf6f505c4e2afc66c45fc86d0f67a029205edf1dac8aa263e5f77ac6818f0572b V710
0x8bc: V752 = 0x1
0x8bf: V753 = S[0x1]
0x8c1: V754 = ADD 0x1 V753
0x8c3: S[0x1] = V754
0x8c4: V755 = 0x2
0x8c6: S[0x2] = 0x1
0x8c7: V756 = 0x0
0x8c9: V757 = 0x4ad
0x8cc: V758 = 0x4
0x8cf: V759 = 0xa89
0x8d2: JUMP 0xa89
---
Entry stack: [V10, 0xe1, S0]
Stack pops: 0
Stack additions: [0x0, 0x4ad, 0x4, 0x0]
Exit stack: [V10, 0xe1, S0, 0x0, 0x4ad, 0x4, 0x0]

================================

Block 0x8d3
[0x8d3:0x8d4]
---
Predecessors: []
Successors: [0x8d5]
---
0x8d3 JUMPDEST
0x8d4 POP
---
0x8d3: JUMPDEST 
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x8d5
[0x8d5:0x8d5]
---
Predecessors: [0x713, 0x8d3]
Successors: [0x8d6]
---
0x8d5 JUMPDEST
---
0x8d5: JUMPDEST 
---
Entry stack: [V10, 0xe1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe1, 0x0]

================================

Block 0x8d6
[0x8d6:0x8d8]
---
Predecessors: [0x8d5]
Successors: [0xe1]
---
0x8d6 JUMPDEST
0x8d7 POP
0x8d8 JUMP
---
0x8d6: JUMPDEST 
0x8d8: JUMP 0xe1
---
Entry stack: [V10, 0xe1, 0x0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x8d9
[0x8d9:0x94e]
---
Predecessors: [0x46b]
Successors: [0x94f]
---
0x8d9 JUMPDEST
0x8da PUSH1 0x0
0x8dc DUP1
0x8dd PUSH1 0x0
0x8df TIMESTAMP
0x8e0 NUMBER
0x8e1 GASLIMIT
0x8e2 DIFFICULTY
0x8e3 GAS
0x8e4 CALLVALUE
0x8e5 CALLER
0x8e6 COINBASE
0x8e7 PUSH1 0x40
0x8e9 MLOAD
0x8ea SWAP8
0x8eb DUP9
0x8ec MSTORE
0x8ed PUSH1 0x20
0x8ef DUP9
0x8f0 ADD
0x8f1 SWAP7
0x8f2 SWAP1
0x8f3 SWAP7
0x8f4 MSTORE
0x8f5 PUSH1 0x40
0x8f7 DUP1
0x8f8 DUP9
0x8f9 ADD
0x8fa SWAP6
0x8fb SWAP1
0x8fc SWAP6
0x8fd MSTORE
0x8fe PUSH1 0x60
0x900 DUP8
0x901 ADD
0x902 SWAP4
0x903 SWAP1
0x904 SWAP4
0x905 MSTORE
0x906 PUSH1 0x80
0x908 DUP7
0x909 ADD
0x90a SWAP2
0x90b SWAP1
0x90c SWAP2
0x90d MSTORE
0x90e PUSH1 0xa0
0x910 DUP6
0x911 ADD
0x912 MSTORE
0x913 PUSH13 0x1000000000000000000000000
0x921 PUSH1 0x1
0x923 PUSH1 0xa0
0x925 PUSH1 0x2
0x927 EXP
0x928 SUB
0x929 SWAP2
0x92a DUP3
0x92b AND
0x92c DUP2
0x92d MUL
0x92e PUSH1 0xc0
0x930 DUP7
0x931 ADD
0x932 MSTORE
0x933 SWAP3
0x934 AND
0x935 SWAP1
0x936 SWAP2
0x937 MUL
0x938 PUSH1 0xd4
0x93a DUP4
0x93b ADD
0x93c MSTORE
0x93d PUSH1 0xe8
0x93f SWAP1
0x940 SWAP2
0x941 ADD
0x942 SWAP1
0x943 MLOAD
0x944 SWAP1
0x945 DUP2
0x946 SWAP1
0x947 SUB
0x948 SWAP1
0x949 SHA3
0x94a SWAP3
0x94b POP
0x94c PUSH1 0x6
0x94e DUP4
---
0x8d9: JUMPDEST 
0x8da: V760 = 0x0
0x8dd: V761 = 0x0
0x8df: V762 = TIMESTAMP
0x8e0: V763 = NUMBER
0x8e1: V764 = GASLIMIT
0x8e2: V765 = DIFFICULTY
0x8e3: V766 = GAS
0x8e4: V767 = CALLVALUE
0x8e5: V768 = CALLER
0x8e6: V769 = COINBASE
0x8e7: V770 = 0x40
0x8e9: V771 = M[0x40]
0x8ec: M[V771] = V762
0x8ed: V772 = 0x20
0x8f0: V773 = ADD V771 0x20
0x8f4: M[V773] = V763
0x8f5: V774 = 0x40
0x8f9: V775 = ADD V771 0x40
0x8fd: M[V775] = V764
0x8fe: V776 = 0x60
0x901: V777 = ADD V771 0x60
0x905: M[V777] = V765
0x906: V778 = 0x80
0x909: V779 = ADD V771 0x80
0x90d: M[V779] = V766
0x90e: V780 = 0xa0
0x911: V781 = ADD V771 0xa0
0x912: M[V781] = V767
0x913: V782 = 0x1000000000000000000000000
0x921: V783 = 0x1
0x923: V784 = 0xa0
0x925: V785 = 0x2
0x927: V786 = EXP 0x2 0xa0
0x928: V787 = SUB 0x10000000000000000000000000000000000000000 0x1
0x92b: V788 = AND 0xffffffffffffffffffffffffffffffffffffffff V768
0x92d: V789 = MUL 0x1000000000000000000000000 V788
0x92e: V790 = 0xc0
0x931: V791 = ADD V771 0xc0
0x932: M[V791] = V789
0x934: V792 = AND V769 0xffffffffffffffffffffffffffffffffffffffff
0x937: V793 = MUL 0x1000000000000000000000000 V792
0x938: V794 = 0xd4
0x93b: V795 = ADD V771 0xd4
0x93c: M[V795] = V793
0x93d: V796 = 0xe8
0x941: V797 = ADD V771 0xe8
0x943: V798 = M[0x40]
0x947: V799 = SUB V797 V798
0x949: V800 = SHA3 V798 V799
0x94c: V801 = 0x6
---
Entry stack: [V10, S5, S4, S3, S2, S1, 0x472]
Stack pops: 0
Stack additions: [V800, 0x0, 0x0, 0x6, V800]
Exit stack: [V10, S5, S4, S3, S2, S1, 0x472, V800, 0x0, 0x0, 0x6, V800]

================================

Block 0x94f
[0x94f:0xa48]
---
Predecessors: [0x8d9]
Successors: [0xa49, 0xa4d]
---
0x94f JUMPDEST
0x950 MOD
0x951 PUSH1 0x1
0x953 SWAP1
0x954 DUP2
0x955 ADD
0x956 PUSH1 0x0
0x958 DUP2
0x959 DUP2
0x95a MSTORE
0x95b PUSH1 0x3
0x95d PUSH1 0x20
0x95f MSTORE
0x960 PUSH1 0x40
0x962 SWAP1
0x963 SHA3
0x964 SLOAD
0x965 SWAP2
0x966 SLOAD
0x967 SWAP1
0x968 SWAP4
0x969 POP
0x96a PUSH1 0x1
0x96c PUSH1 0xa0
0x96e PUSH1 0x2
0x970 EXP
0x971 SUB
0x972 SWAP1
0x973 SWAP2
0x974 AND
0x975 SWAP2
0x976 POP
0x977 PUSH32 0xf6f505c4e2afc66c45fc86d0f67a029205edf1dac8aa263e5f77ac6818f0572b
0x998 DUP4
0x999 DUP4
0x99a TIMESTAMP
0x99b NUMBER
0x99c GASLIMIT
0x99d DIFFICULTY
0x99e GAS
0x99f CALLVALUE
0x9a0 CALLER
0x9a1 COINBASE
0x9a2 DUP15
0x9a3 PUSH1 0x40
0x9a5 MLOAD
0x9a6 SWAP11
0x9a7 DUP12
0x9a8 MSTORE
0x9a9 PUSH1 0x1
0x9ab PUSH1 0xa0
0x9ad PUSH1 0x2
0x9af EXP
0x9b0 SUB
0x9b1 SWAP10
0x9b2 DUP11
0x9b3 AND
0x9b4 PUSH1 0x20
0x9b6 DUP13
0x9b7 ADD
0x9b8 MSTORE
0x9b9 PUSH1 0x40
0x9bb DUP1
0x9bc DUP13
0x9bd ADD
0x9be SWAP10
0x9bf SWAP1
0x9c0 SWAP10
0x9c1 MSTORE
0x9c2 PUSH1 0x60
0x9c4 DUP12
0x9c5 ADD
0x9c6 SWAP8
0x9c7 SWAP1
0x9c8 SWAP8
0x9c9 MSTORE
0x9ca PUSH1 0x80
0x9cc DUP11
0x9cd ADD
0x9ce SWAP6
0x9cf SWAP1
0x9d0 SWAP6
0x9d1 MSTORE
0x9d2 PUSH1 0xa0
0x9d4 DUP10
0x9d5 ADD
0x9d6 SWAP4
0x9d7 SWAP1
0x9d8 SWAP4
0x9d9 MSTORE
0x9da PUSH1 0xc0
0x9dc DUP9
0x9dd ADD
0x9de SWAP2
0x9df SWAP1
0x9e0 SWAP2
0x9e1 MSTORE
0x9e2 PUSH1 0xe0
0x9e4 DUP8
0x9e5 ADD
0x9e6 MSTORE
0x9e7 DUP5
0x9e8 AND
0x9e9 PUSH2 0x100
0x9ec DUP7
0x9ed ADD
0x9ee MSTORE
0x9ef SWAP1
0x9f0 SWAP3
0x9f1 AND
0x9f2 PUSH2 0x120
0x9f5 DUP5
0x9f6 ADD
0x9f7 MSTORE
0x9f8 PUSH2 0x140
0x9fb DUP4
0x9fc ADD
0x9fd SWAP2
0x9fe SWAP1
0x9ff SWAP2
0xa00 MSTORE
0xa01 PUSH2 0x160
0xa04 SWAP1
0xa05 SWAP2
0xa06 ADD
0xa07 SWAP1
0xa08 MLOAD
0xa09 DUP1
0xa0a SWAP2
0xa0b SUB
0xa0c SWAP1
0xa0d LOG2
0xa0e PUSH1 0x1
0xa10 DUP1
0xa11 SLOAD
0xa12 DUP2
0xa13 ADD
0xa14 DUP2
0xa15 SSTORE
0xa16 PUSH1 0x2
0xa18 SSTORE
0xa19 PUSH1 0x1
0xa1b PUSH1 0xa0
0xa1d PUSH1 0x2
0xa1f EXP
0xa20 SUB
0xa21 DUP2
0xa22 AND
0xa23 PUSH1 0x0
0xa25 PUSH8 0x16345785d8a0000
0xa2e PUSH1 0x40
0xa30 MLOAD
0xa31 PUSH1 0x0
0xa33 PUSH1 0x40
0xa35 MLOAD
0xa36 DUP1
0xa37 DUP4
0xa38 SUB
0xa39 DUP2
0xa3a DUP6
0xa3b DUP9
0xa3c DUP9
0xa3d CALL
0xa3e SWAP4
0xa3f POP
0xa40 POP
0xa41 POP
0xa42 POP
0xa43 ISZERO
0xa44 ISZERO
0xa45 PUSH2 0xa4d
0xa48 JUMPI
---
0x94f: JUMPDEST 
0x950: V802 = MOD V800 0x6
0x951: V803 = 0x1
0x955: V804 = ADD 0x1 V802
0x956: V805 = 0x0
0x95a: M[0x0] = V804
0x95b: V806 = 0x3
0x95d: V807 = 0x20
0x95f: M[0x20] = 0x3
0x960: V808 = 0x40
0x963: V809 = SHA3 0x0 0x40
0x964: V810 = S[V809]
0x966: V811 = S[0x1]
0x96a: V812 = 0x1
0x96c: V813 = 0xa0
0x96e: V814 = 0x2
0x970: V815 = EXP 0x2 0xa0
0x971: V816 = SUB 0x10000000000000000000000000000000000000000 0x1
0x974: V817 = AND V810 0xffffffffffffffffffffffffffffffffffffffff
0x977: V818 = 0xf6f505c4e2afc66c45fc86d0f67a029205edf1dac8aa263e5f77ac6818f0572b
0x99a: V819 = TIMESTAMP
0x99b: V820 = NUMBER
0x99c: V821 = GASLIMIT
0x99d: V822 = DIFFICULTY
0x99e: V823 = GAS
0x99f: V824 = CALLVALUE
0x9a0: V825 = CALLER
0x9a1: V826 = COINBASE
0x9a3: V827 = 0x40
0x9a5: V828 = M[0x40]
0x9a8: M[V828] = V804
0x9a9: V829 = 0x1
0x9ab: V830 = 0xa0
0x9ad: V831 = 0x2
0x9af: V832 = EXP 0x2 0xa0
0x9b0: V833 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9b3: V834 = AND 0xffffffffffffffffffffffffffffffffffffffff V817
0x9b4: V835 = 0x20
0x9b7: V836 = ADD V828 0x20
0x9b8: M[V836] = V834
0x9b9: V837 = 0x40
0x9bd: V838 = ADD V828 0x40
0x9c1: M[V838] = V819
0x9c2: V839 = 0x60
0x9c5: V840 = ADD V828 0x60
0x9c9: M[V840] = V820
0x9ca: V841 = 0x80
0x9cd: V842 = ADD V828 0x80
0x9d1: M[V842] = V821
0x9d2: V843 = 0xa0
0x9d5: V844 = ADD V828 0xa0
0x9d9: M[V844] = V822
0x9da: V845 = 0xc0
0x9dd: V846 = ADD V828 0xc0
0x9e1: M[V846] = V823
0x9e2: V847 = 0xe0
0x9e5: V848 = ADD V828 0xe0
0x9e6: M[V848] = V824
0x9e8: V849 = AND 0xffffffffffffffffffffffffffffffffffffffff V825
0x9e9: V850 = 0x100
0x9ed: V851 = ADD V828 0x100
0x9ee: M[V851] = V849
0x9f1: V852 = AND 0xffffffffffffffffffffffffffffffffffffffff V826
0x9f2: V853 = 0x120
0x9f6: V854 = ADD V828 0x120
0x9f7: M[V854] = V852
0x9f8: V855 = 0x140
0x9fc: V856 = ADD V828 0x140
0xa00: M[V856] = V800
0xa01: V857 = 0x160
0xa06: V858 = ADD V828 0x160
0xa08: V859 = M[0x40]
0xa0b: V860 = SUB V858 V859
0xa0d: LOG V859 V860 0xf6f505c4e2afc66c45fc86d0f67a029205edf1dac8aa263e5f77ac6818f0572b V811
0xa0e: V861 = 0x1
0xa11: V862 = S[0x1]
0xa13: V863 = ADD 0x1 V862
0xa15: S[0x1] = V863
0xa16: V864 = 0x2
0xa18: S[0x2] = 0x1
0xa19: V865 = 0x1
0xa1b: V866 = 0xa0
0xa1d: V867 = 0x2
0xa1f: V868 = EXP 0x2 0xa0
0xa20: V869 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa22: V870 = AND V817 0xffffffffffffffffffffffffffffffffffffffff
0xa23: V871 = 0x0
0xa25: V872 = 0x16345785d8a0000
0xa2e: V873 = 0x40
0xa30: V874 = M[0x40]
0xa31: V875 = 0x0
0xa33: V876 = 0x40
0xa35: V877 = M[0x40]
0xa38: V878 = SUB V874 V877
0xa3d: V879 = CALL 0x0 V870 0x16345785d8a0000 V877 V878 V877 0x0
0xa43: V880 = ISZERO V879
0xa44: V881 = ISZERO V880
0xa45: V882 = 0xa4d
0xa48: JUMPI 0xa4d V881
---
Entry stack: [V10, S10, S9, S8, S7, S6, 0x472, V800, 0x0, 0x0, 0x6, V800]
Stack pops: 5
Stack additions: [S4, V804, V817]
Exit stack: [V10, S10, S9, S8, S7, S6, 0x472, V800, V804, V817]

================================

Block 0xa49
[0xa49:0xa4c]
---
Predecessors: [0x94f]
Successors: []
---
0xa49 PUSH1 0x0
0xa4b DUP1
0xa4c REVERT
---
0xa49: V883 = 0x0
0xa4c: REVERT 0x0 0x0
---
Entry stack: [V10, S8, S7, S6, S5, S4, 0x472, V800, V804, V817]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S8, S7, S6, S5, S4, 0x472, V800, V804, V817]

================================

Block 0xa4d
[0xa4d:0xa7e]
---
Predecessors: [0x94f]
Successors: [0xa7f, 0xa83]
---
0xa4d JUMPDEST
0xa4e PUSH1 0x0
0xa50 DUP1
0xa51 SLOAD
0xa52 PUSH1 0x1
0xa54 PUSH1 0xa0
0xa56 PUSH1 0x2
0xa58 EXP
0xa59 SUB
0xa5a AND
0xa5b SWAP1
0xa5c PUSH7 0x470de4df820000
0xa64 PUSH1 0x40
0xa66 MLOAD
0xa67 PUSH1 0x0
0xa69 PUSH1 0x40
0xa6b MLOAD
0xa6c DUP1
0xa6d DUP4
0xa6e SUB
0xa6f DUP2
0xa70 DUP6
0xa71 DUP9
0xa72 DUP9
0xa73 CALL
0xa74 SWAP4
0xa75 POP
0xa76 POP
0xa77 POP
0xa78 POP
0xa79 ISZERO
0xa7a ISZERO
0xa7b PUSH2 0xa83
0xa7e JUMPI
---
0xa4d: JUMPDEST 
0xa4e: V884 = 0x0
0xa51: V885 = S[0x0]
0xa52: V886 = 0x1
0xa54: V887 = 0xa0
0xa56: V888 = 0x2
0xa58: V889 = EXP 0x2 0xa0
0xa59: V890 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa5a: V891 = AND 0xffffffffffffffffffffffffffffffffffffffff V885
0xa5c: V892 = 0x470de4df820000
0xa64: V893 = 0x40
0xa66: V894 = M[0x40]
0xa67: V895 = 0x0
0xa69: V896 = 0x40
0xa6b: V897 = M[0x40]
0xa6e: V898 = SUB V894 V897
0xa73: V899 = CALL 0x0 V891 0x470de4df820000 V897 V898 V897 0x0
0xa79: V900 = ISZERO V899
0xa7a: V901 = ISZERO V900
0xa7b: V902 = 0xa83
0xa7e: JUMPI 0xa83 V901
---
Entry stack: [V10, S8, S7, S6, S5, S4, 0x472, V800, V804, V817]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S8, S7, S6, S5, S4, 0x472, V800, V804, V817]

================================

Block 0xa7f
[0xa7f:0xa82]
---
Predecessors: [0xa4d]
Successors: []
---
0xa7f PUSH1 0x0
0xa81 DUP1
0xa82 REVERT
---
0xa7f: V903 = 0x0
0xa82: REVERT 0x0 0x0
---
Entry stack: [V10, S8, S7, S6, S5, S4, 0x472, V800, V804, V817]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S8, S7, S6, S5, S4, 0x472, V800, V804, V817]

================================

Block 0xa83
[0xa83:0xa83]
---
Predecessors: [0xa4d, 0xa89, 0xaae, 0xafb]
Successors: [0xa84]
---
0xa83 JUMPDEST
---
0xa83: JUMPDEST 
---
Entry stack: [V10, S9, S8, S7, S6, S5, S4, {0x38b, 0x472, 0x4ad, 0x5ae}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S9, S8, S7, S6, S5, S4, {0x38b, 0x472, 0x4ad, 0x5ae}, S2, S1, S0]

================================

Block 0xa84
[0xa84:0xa88]
---
Predecessors: [0xa83]
Successors: [0x38b, 0x472, 0x4ad, 0x5ae]
---
0xa84 JUMPDEST
0xa85 POP
0xa86 POP
0xa87 POP
0xa88 JUMP
---
0xa84: JUMPDEST 
0xa88: JUMP {0x38b, 0x472, 0x4ad, 0x5ae}
---
Entry stack: [V10, S9, S8, S7, S6, S5, S4, {0x38b, 0x472, 0x4ad, 0x5ae}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V10, S9, S8, S7, S6, S5, S4]

================================

Block 0xa89
[0xa89:0xa96]
---
Predecessors: [0x374, 0x53f, 0x81b]
Successors: [0xa83, 0xa97]
---
0xa89 JUMPDEST
0xa8a DUP2
0xa8b SLOAD
0xa8c DUP2
0xa8d DUP4
0xa8e SSTORE
0xa8f DUP2
0xa90 DUP2
0xa91 ISZERO
0xa92 GT
0xa93 PUSH2 0xa83
0xa96 JUMPI
---
0xa89: JUMPDEST 
0xa8b: V904 = S[0x4]
0xa8e: S[0x4] = S0
0xa91: V905 = ISZERO V904
0xa92: V906 = GT V905 S0
0xa93: V907 = 0xa83
0xa96: JUMPI 0xa83 V906
---
Entry stack: [V10, S8, S7, S6, S5, S4, S3, {0x38b, 0x4ad, 0x5ae}, 0x4, S0]
Stack pops: 2
Stack additions: [S1, S0, V904]
Exit stack: [V10, S8, S7, S6, S5, S4, S3, {0x38b, 0x4ad, 0x5ae}, 0x4, S0, V904]

================================

Block 0xa97
[0xa97:0xaac]
---
Predecessors: [0xa89]
Successors: [0xadd]
---
0xa97 PUSH1 0x0
0xa99 DUP4
0xa9a DUP2
0xa9b MSTORE
0xa9c PUSH1 0x20
0xa9e SWAP1
0xa9f SHA3
0xaa0 PUSH2 0xa83
0xaa3 SWAP2
0xaa4 DUP2
0xaa5 ADD
0xaa6 SWAP1
0xaa7 DUP4
0xaa8 ADD
0xaa9 PUSH2 0xadd
0xaac JUMP
---
0xa97: V908 = 0x0
0xa9b: M[0x0] = 0x4
0xa9c: V909 = 0x20
0xa9f: V910 = SHA3 0x0 0x20
0xaa0: V911 = 0xa83
0xaa5: V912 = ADD V910 V904
0xaa8: V913 = ADD S1 V910
0xaa9: V914 = 0xadd
0xaac: JUMP 0xadd
---
Entry stack: [V10, 0xe1, S8, S7, S6, S5, S4, {0x38b, 0x4ad, 0x5ae}, 0x4, S1, V904]
Stack pops: 3
Stack additions: [S2, S1, 0xa83, V912, V913]
Exit stack: [V10, 0xe1, S8, S7, S6, S5, S4, {0x38b, 0x4ad, 0x5ae}, 0x4, S1, 0xa83, V912, V913]

================================

Block 0xaad
[0xaad:0xaad]
---
Predecessors: []
Successors: [0xaae]
---
0xaad JUMPDEST
---
0xaad: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xaae
[0xaae:0xac0]
---
Predecessors: [0xaad]
Successors: [0xa83, 0xac1]
---
0xaae JUMPDEST
0xaaf POP
0xab0 POP
0xab1 POP
0xab2 JUMP
0xab3 JUMPDEST
0xab4 DUP2
0xab5 SLOAD
0xab6 DUP2
0xab7 DUP4
0xab8 SSTORE
0xab9 DUP2
0xaba DUP2
0xabb ISZERO
0xabc GT
0xabd PUSH2 0xa83
0xac0 JUMPI
---
0xaae: JUMPDEST 
0xab2: JUMP S3
0xab3: JUMPDEST 
0xab5: V915 = S[S1]
0xab8: S[S1] = S0
0xabb: V916 = ISZERO V915
0xabc: V917 = GT V916 S0
0xabd: V918 = 0xa83
0xac0: JUMPI 0xa83 V917
---
Entry stack: []
Stack pops: 8
Stack additions: [V915, S0, S1]
Exit stack: []

================================

Block 0xac1
[0xac1:0xad6]
---
Predecessors: [0xaae]
Successors: [0xadd]
---
0xac1 PUSH1 0x0
0xac3 DUP4
0xac4 DUP2
0xac5 MSTORE
0xac6 PUSH1 0x20
0xac8 SWAP1
0xac9 SHA3
0xaca PUSH2 0xa83
0xacd SWAP2
0xace DUP2
0xacf ADD
0xad0 SWAP1
0xad1 DUP4
0xad2 ADD
0xad3 PUSH2 0xadd
0xad6 JUMP
---
0xac1: V919 = 0x0
0xac5: M[0x0] = S2
0xac6: V920 = 0x20
0xac9: V921 = SHA3 0x0 0x20
0xaca: V922 = 0xa83
0xacf: V923 = ADD V921 V915
0xad2: V924 = ADD S1 V921
0xad3: V925 = 0xadd
0xad6: JUMP 0xadd
---
Entry stack: [S2, S1, V915]
Stack pops: 3
Stack additions: [S2, S1, 0xa83, V923, V924]
Exit stack: [S2, S1, 0xa83, V923, V924]

================================

Block 0xad7
[0xad7:0xad7]
---
Predecessors: []
Successors: [0xad8]
---
0xad7 JUMPDEST
---
0xad7: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xad8
[0xad8:0xadc]
---
Predecessors: [0xad7]
Successors: []
Has unresolved jump.
---
0xad8 JUMPDEST
0xad9 POP
0xada POP
0xadb POP
0xadc JUMP
---
0xad8: JUMPDEST 
0xadc: JUMP S3
---
Entry stack: []
Stack pops: 4
Stack additions: []
Exit stack: []

================================

Block 0xadd
[0xadd:0xae2]
---
Predecessors: [0xa97, 0xac1]
Successors: [0xae3]
---
0xadd JUMPDEST
0xade PUSH2 0xafb
0xae1 SWAP2
0xae2 SWAP1
---
0xadd: JUMPDEST 
0xade: V926 = 0xafb
---
Entry stack: [V10, 0xe1, S10, S9, S8, S7, S6, {0x38b, 0x4ad, 0x5ae}, S4, S3, 0xa83, S1, S0]
Stack pops: 2
Stack additions: [0xafb, S1, S0]
Exit stack: [V10, 0xe1, S10, S9, S8, S7, S6, {0x38b, 0x4ad, 0x5ae}, S4, S3, 0xa83, 0xafb, S1, S0]

================================

Block 0xae3
[0xae3:0xaeb]
---
Predecessors: [0xadd, 0xaec]
Successors: [0xaec, 0xaf7]
---
0xae3 JUMPDEST
0xae4 DUP1
0xae5 DUP3
0xae6 GT
0xae7 ISZERO
0xae8 PUSH2 0xaf7
0xaeb JUMPI
---
0xae3: JUMPDEST 
0xae6: V927 = GT S1 S0
0xae7: V928 = ISZERO V927
0xae8: V929 = 0xaf7
0xaeb: JUMPI 0xaf7 V928
---
Entry stack: [V10, 0xe1, S11, S10, S9, S8, S7, {0x38b, 0x4ad, 0x5ae}, S5, S4, 0xa83, 0xafb, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0xe1, S11, S10, S9, S8, S7, {0x38b, 0x4ad, 0x5ae}, S5, S4, 0xa83, 0xafb, S1, S0]

================================

Block 0xaec
[0xaec:0xaf6]
---
Predecessors: [0xae3]
Successors: [0xae3]
---
0xaec PUSH1 0x0
0xaee DUP2
0xaef SSTORE
0xaf0 PUSH1 0x1
0xaf2 ADD
0xaf3 PUSH2 0xae3
0xaf6 JUMP
---
0xaec: V930 = 0x0
0xaef: S[S0] = 0x0
0xaf0: V931 = 0x1
0xaf2: V932 = ADD 0x1 S0
0xaf3: V933 = 0xae3
0xaf6: JUMP 0xae3
---
Entry stack: [V10, 0xe1, S11, S10, S9, S8, S7, {0x38b, 0x4ad, 0x5ae}, S5, S4, 0xa83, 0xafb, S1, S0]
Stack pops: 1
Stack additions: [V932]
Exit stack: [V10, 0xe1, S11, S10, S9, S8, S7, {0x38b, 0x4ad, 0x5ae}, S5, S4, 0xa83, 0xafb, S1, V932]

================================

Block 0xaf7
[0xaf7:0xafa]
---
Predecessors: [0xae3]
Successors: [0xafb]
---
0xaf7 JUMPDEST
0xaf8 POP
0xaf9 SWAP1
0xafa JUMP
---
0xaf7: JUMPDEST 
0xafa: JUMP 0xafb
---
Entry stack: [V10, 0xe1, S11, S10, S9, S8, S7, {0x38b, 0x4ad, 0x5ae}, S5, S4, 0xa83, 0xafb, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V10, 0xe1, S11, S10, S9, S8, S7, {0x38b, 0x4ad, 0x5ae}, S5, S4, 0xa83, S1]

================================

Block 0xafb
[0xafb:0xafd]
---
Predecessors: [0xaf7]
Successors: [0xa83]
---
0xafb JUMPDEST
0xafc SWAP1
0xafd JUMP
---
0xafb: JUMPDEST 
0xafd: JUMP 0xa83
---
Entry stack: [V10, 0xe1, S9, S8, S7, S6, S5, {0x38b, 0x4ad, 0x5ae}, S3, S2, 0xa83, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, 0xe1, S9, S8, S7, S6, S5, {0x38b, 0x4ad, 0x5ae}, S3, S2, S0]

================================

Block 0xafe
[0xafe:0xb2f]
---
Predecessors: []
Successors: []
---
0xafe STOP
0xaff LOG1
0xb00 PUSH6 0x627a7a723058
0xb07 SHA3
0xb08 GAS
0xb09 MISSING 0xab
0xb0a MISSING 0xd4
0xb0b PUSH11 0xd706acca22abc4ddc5ded5
0xb17 MISSING 0x49
0xb18 MISSING 0xdd
0xb19 MISSING 0xc6
0xb1a PUSH21 0x23645173d425a630c29b84ecdc0029
---
0xafe: STOP 
0xaff: LOG S0 S1 S2
0xb00: V934 = 0x627a7a723058
0xb07: V935 = SHA3 0x627a7a723058 S3
0xb08: V936 = GAS
0xb09: MISSING 0xab
0xb0a: MISSING 0xd4
0xb0b: V937 = 0xd706acca22abc4ddc5ded5
0xb17: MISSING 0x49
0xb18: MISSING 0xdd
0xb19: MISSING 0xc6
0xb1a: V938 = 0x23645173d425a630c29b84ecdc0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V936, V935, 0xd706acca22abc4ddc5ded5, 0x23645173d425a630c29b84ecdc0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x22a7ac34
Entry block: 0xe4
Exit block: 0xf7
Body: 0xe4, 0xeb, 0xef, 0xf7, 0x4b3

Function 1:
Public function signature: 0x41c0e1b5
Entry block: 0x109
Exit block: 0xe2
Body: 0xe1, 0xe2, 0x109, 0x110, 0x114, 0x4be, 0x4d6, 0x4e3, 0x4e4

Function 2:
Public function signature: 0x5c975abb
Entry block: 0x11e
Exit block: 0x131
Body: 0x11e, 0x125, 0x129, 0x131, 0x4e6

Function 3:
Public function signature: 0xb2d5ae44
Entry block: 0x145
Exit block: 0xe2
Body: 0xe1, 0xe2, 0x145, 0x14c, 0x150, 0x4ef

Function 4:
Public function signature: 0xb375603c
Entry block: 0x15a
Exit block: 0xf7
Body: 0xf7, 0x15a, 0x161, 0x165, 0x662

Function 5:
Public function signature: 0xb4894b1d
Entry block: 0x17f
Exit block: 0xf7
Body: 0xf7, 0x17f, 0x186, 0x18a, 0x668, 0x675, 0x676, 0x684

Function 6:
Public function signature: 0xc33b76c6
Entry block: 0x1a7
Exit block: 0x1ba
Body: 0x1a7, 0x1ae, 0x1b2, 0x1ba, 0x68b

Function 7:
Public function signature: 0xc4ae3168
Entry block: 0x1d6
Exit block: 0xe2
Body: 0xe1, 0xe2, 0x1d6, 0x1dd, 0x1e1, 0x4e3, 0x4e4, 0x69a, 0x6b2, 0x6c4, 0x6c5

Function 8:
Public function signature: 0xc7dbbc47
Entry block: 0x1eb
Exit block: 0xf7
Body: 0xf7, 0x1eb, 0x1f2, 0x1f6, 0x6c7

Function 9:
Public function signature: 0xc8199826
Entry block: 0xd8
Exit block: 0xe2
Body: 0xd8, 0xd9, 0xe1, 0xe2

Function 10:
Public function signature: 0xdd11247e
Entry block: 0x21a
Exit block: 0xf7
Body: 0xf7, 0x21a, 0x221, 0x225, 0x6cd

Function 11:
Public function signature: 0xdfd50f52
Entry block: 0x23f
Exit block: 0x255
Body: 0x23f, 0x246, 0x24a, 0x255, 0x6d2

Function 12:
Public function signature: 0xe3ac5d26
Entry block: 0x277
Exit block: 0xf7
Body: 0xf7, 0x277, 0x27e, 0x282, 0x6f7

Function 13:
Public function signature: 0xe9874106
Entry block: 0x29c
Exit block: 0xf7
Body: 0xf7, 0x29c, 0x2a3, 0x2a7, 0x703, 0x70f

Function 14:
Public function signature: 0xee095c0e
Entry block: 0x2c1
Exit block: 0x80d
Body: 0xe1, 0xe2, 0x2c1, 0x2c8, 0x2cc, 0x4ad, 0x713, 0x72c, 0x73d, 0x746, 0x762, 0x7eb, 0x80d, 0x811, 0x812, 0x813, 0x81b, 0x8d5, 0x8d6

Function 15:
Public fallback function
Entry block: 0xd8
Exit block: 0xe2
Body: 0xd8, 0xd9, 0xe1, 0xe2

Function 16:
Private function
Entry block: 0xadd
Exit block: 0xafb
Body: 0xadd, 0xae3, 0xaec, 0xaf7, 0xafb

Function 17:
Private function
Entry block: 0xa89
Exit block: 0xa84
Body: 0x472, 0x473, 0x47d, 0xa83, 0xa84, 0xa89, 0xa97

Function 18:
Private function
Entry block: 0x2d6
Exit block: 0x8d6
Body: 0x2d6, 0x2e7, 0x318, 0x31d, 0x321, 0x32d, 0x338, 0x340, 0x346, 0x355, 0x366, 0x374, 0x38b, 0x391, 0x39e, 0x455, 0x45f, 0x46b, 0x472, 0x473, 0x47d, 0x4ad, 0x4ae, 0x4af, 0x4f4, 0x4fd, 0x521, 0x539, 0x53f, 0x5ae, 0x5bc, 0x609, 0x60a, 0x612, 0x61c, 0x634, 0x8d9, 0x94f, 0xa4d, 0xa83, 0xa84

