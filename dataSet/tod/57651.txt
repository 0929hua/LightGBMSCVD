Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xe5]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xe5
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xe5
0xa: JUMPI 0xe5 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x126]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x722013d
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x126
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x722013d
0x1a: V12 = EQ V10 0x722013d
0x1b: V13 = 0x126
0x1e: JUMPI 0x126 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0x15e]
---
0x1f DUP1
0x20 PUSH4 0xeecae21
0x25 EQ
0x26 PUSH2 0x15e
0x29 JUMPI
---
0x20: V14 = 0xeecae21
0x25: V15 = EQ 0xeecae21 V10
0x26: V16 = 0x15e
0x29: JUMPI 0x15e V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0x176]
---
0x2a DUP1
0x2b PUSH4 0x25a1577a
0x30 EQ
0x31 PUSH2 0x176
0x34 JUMPI
---
0x2b: V17 = 0x25a1577a
0x30: V18 = EQ 0x25a1577a V10
0x31: V19 = 0x176
0x34: JUMPI 0x176 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0x1c0]
---
0x35 DUP1
0x36 PUSH4 0x2825a817
0x3b EQ
0x3c PUSH2 0x1c0
0x3f JUMPI
---
0x36: V20 = 0x2825a817
0x3b: V21 = EQ 0x2825a817 V10
0x3c: V22 = 0x1c0
0x3f: JUMPI 0x1c0 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x1db]
---
0x40 DUP1
0x41 PUSH4 0x28c6be77
0x46 EQ
0x47 PUSH2 0x1db
0x4a JUMPI
---
0x41: V23 = 0x28c6be77
0x46: V24 = EQ 0x28c6be77 V10
0x47: V25 = 0x1db
0x4a: JUMPI 0x1db V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x229]
---
0x4b DUP1
0x4c PUSH4 0x47a0bad6
0x51 EQ
0x52 PUSH2 0x229
0x55 JUMPI
---
0x4c: V26 = 0x47a0bad6
0x51: V27 = EQ 0x47a0bad6 V10
0x52: V28 = 0x229
0x55: JUMPI 0x229 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x277]
---
0x56 DUP1
0x57 PUSH4 0x4ccf6210
0x5c EQ
0x5d PUSH2 0x277
0x60 JUMPI
---
0x57: V29 = 0x4ccf6210
0x5c: V30 = EQ 0x4ccf6210 V10
0x5d: V31 = 0x277
0x60: JUMPI 0x277 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x2be]
---
0x61 DUP1
0x62 PUSH4 0x65da6fc0
0x67 EQ
0x68 PUSH2 0x2be
0x6b JUMPI
---
0x62: V32 = 0x65da6fc0
0x67: V33 = EQ 0x65da6fc0 V10
0x68: V34 = 0x2be
0x6b: JUMPI 0x2be V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x308]
---
0x6c DUP1
0x6d PUSH4 0x71dbd330
0x72 EQ
0x73 PUSH2 0x308
0x76 JUMPI
---
0x6d: V35 = 0x71dbd330
0x72: V36 = EQ 0x71dbd330 V10
0x73: V37 = 0x308
0x76: JUMPI 0x308 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x328]
---
0x77 DUP1
0x78 PUSH4 0x81f5ddcb
0x7d EQ
0x7e PUSH2 0x328
0x81 JUMPI
---
0x78: V38 = 0x81f5ddcb
0x7d: V39 = EQ 0x81f5ddcb V10
0x7e: V40 = 0x328
0x81: JUMPI 0x328 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x340]
---
0x82 DUP1
0x83 PUSH4 0x8b8fd3bd
0x88 EQ
0x89 PUSH2 0x340
0x8c JUMPI
---
0x83: V41 = 0x8b8fd3bd
0x88: V42 = EQ 0x8b8fd3bd V10
0x89: V43 = 0x340
0x8c: JUMPI 0x340 V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x35c]
---
0x8d DUP1
0x8e PUSH4 0x949d225d
0x93 EQ
0x94 PUSH2 0x35c
0x97 JUMPI
---
0x8e: V44 = 0x949d225d
0x93: V45 = EQ 0x949d225d V10
0x94: V46 = 0x35c
0x97: JUMPI 0x35c V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x8d]
Successors: [0xa3, 0x36d]
---
0x98 DUP1
0x99 PUSH4 0xa0811074
0x9e EQ
0x9f PUSH2 0x36d
0xa2 JUMPI
---
0x99: V47 = 0xa0811074
0x9e: V48 = EQ 0xa0811074 V10
0x9f: V49 = 0x36d
0xa2: JUMPI 0x36d V48
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa3
[0xa3:0xad]
---
Predecessors: [0x98]
Successors: [0xae, 0x384]
---
0xa3 DUP1
0xa4 PUSH4 0xa968991b
0xa9 EQ
0xaa PUSH2 0x384
0xad JUMPI
---
0xa4: V50 = 0xa968991b
0xa9: V51 = EQ 0xa968991b V10
0xaa: V52 = 0x384
0xad: JUMPI 0x384 V51
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xae
[0xae:0xb8]
---
Predecessors: [0xa3]
Successors: [0xb9, 0x39c]
---
0xae DUP1
0xaf PUSH4 0xc7a01a1a
0xb4 EQ
0xb5 PUSH2 0x39c
0xb8 JUMPI
---
0xaf: V53 = 0xc7a01a1a
0xb4: V54 = EQ 0xc7a01a1a V10
0xb5: V55 = 0x39c
0xb8: JUMPI 0x39c V54
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xb9
[0xb9:0xc3]
---
Predecessors: [0xae]
Successors: [0xc4, 0x3e6]
---
0xb9 DUP1
0xba PUSH4 0xcdf4545d
0xbf EQ
0xc0 PUSH2 0x3e6
0xc3 JUMPI
---
0xba: V56 = 0xcdf4545d
0xbf: V57 = EQ 0xcdf4545d V10
0xc0: V58 = 0x3e6
0xc3: JUMPI 0x3e6 V57
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xc4
[0xc4:0xce]
---
Predecessors: [0xb9]
Successors: [0xcf, 0x42d]
---
0xc4 DUP1
0xc5 PUSH4 0xd1851c92
0xca EQ
0xcb PUSH2 0x42d
0xce JUMPI
---
0xc5: V59 = 0xd1851c92
0xca: V60 = EQ 0xd1851c92 V10
0xcb: V61 = 0x42d
0xce: JUMPI 0x42d V60
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xcf
[0xcf:0xd9]
---
Predecessors: [0xc4]
Successors: [0xda, 0x451]
---
0xcf DUP1
0xd0 PUSH4 0xdfbf53ae
0xd5 EQ
0xd6 PUSH2 0x451
0xd9 JUMPI
---
0xd0: V62 = 0xdfbf53ae
0xd5: V63 = EQ 0xdfbf53ae V10
0xd6: V64 = 0x451
0xd9: JUMPI 0x451 V63
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xda
[0xda:0xe4]
---
Predecessors: [0xcf]
Successors: [0xe5, 0x462]
---
0xda DUP1
0xdb PUSH4 0xe1a5c92e
0xe0 EQ
0xe1 PUSH2 0x462
0xe4 JUMPI
---
0xdb: V65 = 0xe1a5c92e
0xe0: V66 = EQ 0xe1a5c92e V10
0xe1: V67 = 0x462
0xe4: JUMPI 0x462 V66
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xe5
[0xe5:0x106]
---
Predecessors: [0x0, 0xda]
Successors: [0x107, 0x11c]
---
0xe5 JUMPDEST
0xe6 PUSH2 0x47a
0xe9 PUSH1 0x0
0xeb SLOAD
0xec CALLER
0xed PUSH1 0x1
0xef PUSH1 0xa0
0xf1 PUSH1 0x2
0xf3 EXP
0xf4 SUB
0xf5 SWAP1
0xf6 DUP2
0xf7 AND
0xf8 PUSH2 0x100
0xfb SWAP1
0xfc SWAP3
0xfd DIV
0xfe AND
0xff EQ
0x100 DUP1
0x101 ISZERO
0x102 SWAP1
0x103 PUSH2 0x11c
0x106 JUMPI
---
0xe5: JUMPDEST 
0xe6: V68 = 0x47a
0xe9: V69 = 0x0
0xeb: V70 = S[0x0]
0xec: V71 = CALLER
0xed: V72 = 0x1
0xef: V73 = 0xa0
0xf1: V74 = 0x2
0xf3: V75 = EXP 0x2 0xa0
0xf4: V76 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf7: V77 = AND 0xffffffffffffffffffffffffffffffffffffffff V71
0xf8: V78 = 0x100
0xfd: V79 = DIV V70 0x100
0xfe: V80 = AND V79 0xffffffffffffffffffffffffffffffffffffffff
0xff: V81 = EQ V80 V77
0x101: V82 = ISZERO V81
0x103: V83 = 0x11c
0x106: JUMPI 0x11c V81
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x47a, V82]
Exit stack: [V10, 0x47a, V82]

================================

Block 0x107
[0x107:0x11b]
---
Predecessors: [0xe5]
Successors: [0x11c]
---
0x107 POP
0x108 PUSH1 0x1
0x10a SLOAD
0x10b PUSH1 0x1
0x10d PUSH1 0xa0
0x10f PUSH1 0x2
0x111 EXP
0x112 SUB
0x113 SWAP1
0x114 DUP2
0x115 AND
0x116 CALLER
0x117 SWAP1
0x118 SWAP2
0x119 AND
0x11a EQ
0x11b ISZERO
---
0x108: V84 = 0x1
0x10a: V85 = S[0x1]
0x10b: V86 = 0x1
0x10d: V87 = 0xa0
0x10f: V88 = 0x2
0x111: V89 = EXP 0x2 0xa0
0x112: V90 = SUB 0x10000000000000000000000000000000000000000 0x1
0x115: V91 = AND 0xffffffffffffffffffffffffffffffffffffffff V85
0x116: V92 = CALLER
0x119: V93 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x11a: V94 = EQ V93 V91
0x11b: V95 = ISZERO V94
---
Entry stack: [V10, 0x47a, V82]
Stack pops: 1
Stack additions: [V95]
Exit stack: [V10, 0x47a, V95]

================================

Block 0x11c
[0x11c:0x121]
---
Predecessors: [0xe5, 0x107]
Successors: [0x122, 0x47c]
---
0x11c JUMPDEST
0x11d ISZERO
0x11e PUSH2 0x47c
0x121 JUMPI
---
0x11c: JUMPDEST 
0x11d: V96 = ISZERO S0
0x11e: V97 = 0x47c
0x121: JUMPI 0x47c V96
---
Entry stack: [V10, 0x47a, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x47a]

================================

Block 0x122
[0x122:0x125]
---
Predecessors: [0x11c]
Successors: []
---
0x122 PUSH2 0x2
0x125 JUMP
---
0x122: V98 = 0x2
0x125: THROW 
---
Entry stack: [V10, 0x47a]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x47a]

================================

Block 0x126
[0x126:0x13e]
---
Predecessors: [0xb]
Successors: [0x13f, 0x154]
---
0x126 JUMPDEST
0x127 PUSH2 0x47a
0x12a PUSH1 0x2
0x12c ADDRESS
0x12d PUSH1 0x1
0x12f PUSH1 0xa0
0x131 PUSH1 0x2
0x133 EXP
0x134 SUB
0x135 AND
0x136 BALANCE
0x137 DIV
0x138 CALLVALUE
0x139 LT
0x13a DUP1
0x13b PUSH2 0x154
0x13e JUMPI
---
0x126: JUMPDEST 
0x127: V99 = 0x47a
0x12a: V100 = 0x2
0x12c: V101 = ADDRESS
0x12d: V102 = 0x1
0x12f: V103 = 0xa0
0x131: V104 = 0x2
0x133: V105 = EXP 0x2 0xa0
0x134: V106 = SUB 0x10000000000000000000000000000000000000000 0x1
0x135: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V101
0x136: V108 = BALANCE V107
0x137: V109 = DIV V108 0x2
0x138: V110 = CALLVALUE
0x139: V111 = LT V110 V109
0x13b: V112 = 0x154
0x13e: JUMPI 0x154 V111
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x47a, V111]
Exit stack: [V10, 0x47a, V111]

================================

Block 0x13f
[0x13f:0x153]
---
Predecessors: [0x126]
Successors: [0x154]
---
0x13f POP
0x140 PUSH1 0x1
0x142 SLOAD
0x143 PUSH1 0x1
0x145 PUSH1 0xa0
0x147 PUSH1 0x2
0x149 EXP
0x14a SUB
0x14b SWAP1
0x14c DUP2
0x14d AND
0x14e CALLER
0x14f SWAP1
0x150 SWAP2
0x151 AND
0x152 EQ
0x153 ISZERO
---
0x140: V113 = 0x1
0x142: V114 = S[0x1]
0x143: V115 = 0x1
0x145: V116 = 0xa0
0x147: V117 = 0x2
0x149: V118 = EXP 0x2 0xa0
0x14a: V119 = SUB 0x10000000000000000000000000000000000000000 0x1
0x14d: V120 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x14e: V121 = CALLER
0x151: V122 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x152: V123 = EQ V122 V120
0x153: V124 = ISZERO V123
---
Entry stack: [V10, 0x47a, V111]
Stack pops: 1
Stack additions: [V124]
Exit stack: [V10, 0x47a, V124]

================================

Block 0x154
[0x154:0x159]
---
Predecessors: [0x126, 0x13f]
Successors: [0x15a, 0x4e9]
---
0x154 JUMPDEST
0x155 ISZERO
0x156 PUSH2 0x4e9
0x159 JUMPI
---
0x154: JUMPDEST 
0x155: V125 = ISZERO S0
0x156: V126 = 0x4e9
0x159: JUMPI 0x4e9 V125
---
Entry stack: [V10, 0x47a, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x47a]

================================

Block 0x15a
[0x15a:0x15d]
---
Predecessors: [0x154]
Successors: []
---
0x15a PUSH2 0x2
0x15d JUMP
---
0x15a: V127 = 0x2
0x15d: THROW 
---
Entry stack: [V10, 0x47a]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x47a]

================================

Block 0x15e
[0x15e:0x163]
---
Predecessors: [0x1f]
Successors: [0x164]
---
0x15e JUMPDEST
0x15f CALLVALUE
0x160 PUSH2 0x2
0x163 JUMPI
---
0x15e: JUMPDEST 
0x15f: V128 = CALLVALUE
0x160: V129 = 0x2
0x163: THROWI V128
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x164
[0x164:0x175]
---
Predecessors: [0x15e]
Successors: [0x47e]
---
0x164 PUSH2 0x47e
0x167 PUSH1 0x1
0x169 SLOAD
0x16a PUSH1 0xb8
0x16c PUSH1 0x2
0x16e EXP
0x16f SWAP1
0x170 DIV
0x171 PUSH1 0xff
0x173 AND
0x174 DUP2
0x175 JUMP
---
0x164: V130 = 0x47e
0x167: V131 = 0x1
0x169: V132 = S[0x1]
0x16a: V133 = 0xb8
0x16c: V134 = 0x2
0x16e: V135 = EXP 0x2 0xb8
0x170: V136 = DIV V132 0x10000000000000000000000000000000000000000000000
0x171: V137 = 0xff
0x173: V138 = AND 0xff V136
0x175: JUMP 0x47e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x47e, V138]
Exit stack: [V10, 0x47e, V138]

================================

Block 0x176
[0x176:0x17b]
---
Predecessors: [0x2a]
Successors: [0x17c]
---
0x176 JUMPDEST
0x177 CALLVALUE
0x178 PUSH2 0x2
0x17b JUMPI
---
0x176: JUMPDEST 
0x177: V139 = CALLVALUE
0x178: V140 = 0x2
0x17b: THROWI V139
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x17c
[0x17c:0x1a0]
---
Predecessors: [0x176]
Successors: [0x1a1, 0x1b6]
---
0x17c PUSH2 0x47a
0x17f PUSH1 0x4
0x181 CALLDATALOAD
0x182 PUSH1 0x0
0x184 SLOAD
0x185 PUSH2 0x100
0x188 SWAP1
0x189 DIV
0x18a PUSH1 0x1
0x18c PUSH1 0xa0
0x18e PUSH1 0x2
0x190 EXP
0x191 SUB
0x192 SWAP1
0x193 DUP2
0x194 AND
0x195 CALLER
0x196 SWAP1
0x197 SWAP2
0x198 AND
0x199 EQ
0x19a DUP1
0x19b ISZERO
0x19c SWAP1
0x19d PUSH2 0x1b6
0x1a0 JUMPI
---
0x17c: V141 = 0x47a
0x17f: V142 = 0x4
0x181: V143 = CALLDATALOAD 0x4
0x182: V144 = 0x0
0x184: V145 = S[0x0]
0x185: V146 = 0x100
0x189: V147 = DIV V145 0x100
0x18a: V148 = 0x1
0x18c: V149 = 0xa0
0x18e: V150 = 0x2
0x190: V151 = EXP 0x2 0xa0
0x191: V152 = SUB 0x10000000000000000000000000000000000000000 0x1
0x194: V153 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0x195: V154 = CALLER
0x198: V155 = AND 0xffffffffffffffffffffffffffffffffffffffff V154
0x199: V156 = EQ V155 V153
0x19b: V157 = ISZERO V156
0x19d: V158 = 0x1b6
0x1a0: JUMPI 0x1b6 V156
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x47a, V143, V157]
Exit stack: [V10, 0x47a, V143, V157]

================================

Block 0x1a1
[0x1a1:0x1b5]
---
Predecessors: [0x17c]
Successors: [0x1b6]
---
0x1a1 POP
0x1a2 PUSH1 0x1
0x1a4 SLOAD
0x1a5 PUSH1 0x1
0x1a7 PUSH1 0xa0
0x1a9 PUSH1 0x2
0x1ab EXP
0x1ac SUB
0x1ad SWAP1
0x1ae DUP2
0x1af AND
0x1b0 CALLER
0x1b1 SWAP1
0x1b2 SWAP2
0x1b3 AND
0x1b4 EQ
0x1b5 ISZERO
---
0x1a2: V159 = 0x1
0x1a4: V160 = S[0x1]
0x1a5: V161 = 0x1
0x1a7: V162 = 0xa0
0x1a9: V163 = 0x2
0x1ab: V164 = EXP 0x2 0xa0
0x1ac: V165 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1af: V166 = AND 0xffffffffffffffffffffffffffffffffffffffff V160
0x1b0: V167 = CALLER
0x1b3: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff V167
0x1b4: V169 = EQ V168 V166
0x1b5: V170 = ISZERO V169
---
Entry stack: [V10, 0x47a, V143, V157]
Stack pops: 1
Stack additions: [V170]
Exit stack: [V10, 0x47a, V143, V170]

================================

Block 0x1b6
[0x1b6:0x1bb]
---
Predecessors: [0x17c, 0x1a1]
Successors: [0x1bc, 0x530]
---
0x1b6 JUMPDEST
0x1b7 ISZERO
0x1b8 PUSH2 0x530
0x1bb JUMPI
---
0x1b6: JUMPDEST 
0x1b7: V171 = ISZERO S0
0x1b8: V172 = 0x530
0x1bb: JUMPI 0x530 V171
---
Entry stack: [V10, 0x47a, V143, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x47a, V143]

================================

Block 0x1bc
[0x1bc:0x1bf]
---
Predecessors: [0x1b6]
Successors: []
---
0x1bc PUSH2 0x2
0x1bf JUMP
---
0x1bc: V173 = 0x2
0x1bf: THROW 
---
Entry stack: [V10, 0x47a, V143]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x47a, V143]

================================

Block 0x1c0
[0x1c0:0x1c5]
---
Predecessors: [0x35]
Successors: [0x1c6]
---
0x1c0 JUMPDEST
0x1c1 CALLVALUE
0x1c2 PUSH2 0x2
0x1c5 JUMPI
---
0x1c0: JUMPDEST 
0x1c1: V174 = CALLVALUE
0x1c2: V175 = 0x2
0x1c5: THROWI V174
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1c6
[0x1c6:0x1c8]
---
Predecessors: [0x1c0]
Successors: [0x1c9]
---
0x1c6 PUSH1 0x2
0x1c8 SLOAD
---
0x1c6: V176 = 0x2
0x1c8: V177 = S[0x2]
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [V177]
Exit stack: [V10, V177]

================================

Block 0x1c9
[0x1c9:0x1da]
---
Predecessors: [0x1c6, 0x457]
Successors: []
---
0x1c9 JUMPDEST
0x1ca PUSH1 0x40
0x1cc DUP1
0x1cd MLOAD
0x1ce SWAP2
0x1cf DUP3
0x1d0 MSTORE
0x1d1 MLOAD
0x1d2 SWAP1
0x1d3 DUP2
0x1d4 SWAP1
0x1d5 SUB
0x1d6 PUSH1 0x20
0x1d8 ADD
0x1d9 SWAP1
0x1da RETURN
---
0x1c9: JUMPDEST 
0x1ca: V178 = 0x40
0x1cd: V179 = M[0x40]
0x1d0: M[V179] = S0
0x1d1: V180 = M[0x40]
0x1d5: V181 = SUB V179 V180
0x1d6: V182 = 0x20
0x1d8: V183 = ADD 0x20 V181
0x1da: RETURN V180 V183
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x1db
[0x1db:0x1e0]
---
Predecessors: [0x40]
Successors: [0x1e1]
---
0x1db JUMPDEST
0x1dc CALLVALUE
0x1dd PUSH2 0x2
0x1e0 JUMPI
---
0x1db: JUMPDEST 
0x1dc: V184 = CALLVALUE
0x1dd: V185 = 0x2
0x1e0: THROWI V184
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1e1
[0x1e1:0x209]
---
Predecessors: [0x1db]
Successors: [0x20a, 0x21f]
---
0x1e1 PUSH2 0x47a
0x1e4 PUSH1 0x4
0x1e6 CALLDATALOAD
0x1e7 PUSH1 0x24
0x1e9 CALLDATALOAD
0x1ea PUSH1 0x0
0x1ec DUP1
0x1ed SLOAD
0x1ee PUSH2 0x100
0x1f1 SWAP1
0x1f2 DIV
0x1f3 PUSH1 0x1
0x1f5 PUSH1 0xa0
0x1f7 PUSH1 0x2
0x1f9 EXP
0x1fa SUB
0x1fb SWAP1
0x1fc DUP2
0x1fd AND
0x1fe CALLER
0x1ff SWAP1
0x200 SWAP2
0x201 AND
0x202 EQ
0x203 DUP1
0x204 ISZERO
0x205 SWAP1
0x206 PUSH2 0x21f
0x209 JUMPI
---
0x1e1: V186 = 0x47a
0x1e4: V187 = 0x4
0x1e6: V188 = CALLDATALOAD 0x4
0x1e7: V189 = 0x24
0x1e9: V190 = CALLDATALOAD 0x24
0x1ea: V191 = 0x0
0x1ed: V192 = S[0x0]
0x1ee: V193 = 0x100
0x1f2: V194 = DIV V192 0x100
0x1f3: V195 = 0x1
0x1f5: V196 = 0xa0
0x1f7: V197 = 0x2
0x1f9: V198 = EXP 0x2 0xa0
0x1fa: V199 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1fd: V200 = AND 0xffffffffffffffffffffffffffffffffffffffff V194
0x1fe: V201 = CALLER
0x201: V202 = AND 0xffffffffffffffffffffffffffffffffffffffff V201
0x202: V203 = EQ V202 V200
0x204: V204 = ISZERO V203
0x206: V205 = 0x21f
0x209: JUMPI 0x21f V203
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x47a, V188, V190, 0x0, V204]
Exit stack: [V10, 0x47a, V188, V190, 0x0, V204]

================================

Block 0x20a
[0x20a:0x21e]
---
Predecessors: [0x1e1]
Successors: [0x21f]
---
0x20a POP
0x20b PUSH1 0x1
0x20d SLOAD
0x20e PUSH1 0x1
0x210 PUSH1 0xa0
0x212 PUSH1 0x2
0x214 EXP
0x215 SUB
0x216 SWAP1
0x217 DUP2
0x218 AND
0x219 CALLER
0x21a SWAP1
0x21b SWAP2
0x21c AND
0x21d EQ
0x21e ISZERO
---
0x20b: V206 = 0x1
0x20d: V207 = S[0x1]
0x20e: V208 = 0x1
0x210: V209 = 0xa0
0x212: V210 = 0x2
0x214: V211 = EXP 0x2 0xa0
0x215: V212 = SUB 0x10000000000000000000000000000000000000000 0x1
0x218: V213 = AND 0xffffffffffffffffffffffffffffffffffffffff V207
0x219: V214 = CALLER
0x21c: V215 = AND 0xffffffffffffffffffffffffffffffffffffffff V214
0x21d: V216 = EQ V215 V213
0x21e: V217 = ISZERO V216
---
Entry stack: [V10, 0x47a, V188, V190, 0x0, V204]
Stack pops: 1
Stack additions: [V217]
Exit stack: [V10, 0x47a, V188, V190, 0x0, V217]

================================

Block 0x21f
[0x21f:0x224]
---
Predecessors: [0x1e1, 0x20a]
Successors: [0x225, 0x6ab]
---
0x21f JUMPDEST
0x220 ISZERO
0x221 PUSH2 0x6ab
0x224 JUMPI
---
0x21f: JUMPDEST 
0x220: V218 = ISZERO S0
0x221: V219 = 0x6ab
0x224: JUMPI 0x6ab V218
---
Entry stack: [V10, 0x47a, V188, V190, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x47a, V188, V190, 0x0]

================================

Block 0x225
[0x225:0x228]
---
Predecessors: [0x21f]
Successors: []
---
0x225 PUSH2 0x2
0x228 JUMP
---
0x225: V220 = 0x2
0x228: THROW 
---
Entry stack: [V10, 0x47a, V188, V190, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x47a, V188, V190, 0x0]

================================

Block 0x229
[0x229:0x22e]
---
Predecessors: [0x4b]
Successors: [0x22f]
---
0x229 JUMPDEST
0x22a CALLVALUE
0x22b PUSH2 0x2
0x22e JUMPI
---
0x229: JUMPDEST 
0x22a: V221 = CALLVALUE
0x22b: V222 = 0x2
0x22e: THROWI V221
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x22f
[0x22f:0x24f]
---
Predecessors: [0x229]
Successors: [0x250, 0x25f]
---
0x22f PUSH2 0x47a
0x232 PUSH1 0x0
0x234 SLOAD
0x235 PUSH2 0x100
0x238 SWAP1
0x239 DIV
0x23a PUSH1 0x1
0x23c PUSH1 0xa0
0x23e PUSH1 0x2
0x240 EXP
0x241 SUB
0x242 SWAP1
0x243 DUP2
0x244 AND
0x245 CALLER
0x246 SWAP1
0x247 SWAP2
0x248 AND
0x249 EQ
0x24a DUP1
0x24b ISZERO
0x24c PUSH2 0x25f
0x24f JUMPI
---
0x22f: V223 = 0x47a
0x232: V224 = 0x0
0x234: V225 = S[0x0]
0x235: V226 = 0x100
0x239: V227 = DIV V225 0x100
0x23a: V228 = 0x1
0x23c: V229 = 0xa0
0x23e: V230 = 0x2
0x240: V231 = EXP 0x2 0xa0
0x241: V232 = SUB 0x10000000000000000000000000000000000000000 0x1
0x244: V233 = AND 0xffffffffffffffffffffffffffffffffffffffff V227
0x245: V234 = CALLER
0x248: V235 = AND 0xffffffffffffffffffffffffffffffffffffffff V234
0x249: V236 = EQ V235 V233
0x24b: V237 = ISZERO V236
0x24c: V238 = 0x25f
0x24f: JUMPI 0x25f V237
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x47a, V236]
Exit stack: [V10, 0x47a, V236]

================================

Block 0x250
[0x250:0x25e]
---
Predecessors: [0x22f]
Successors: [0x25f]
---
0x250 POP
0x251 PUSH1 0x1
0x253 SLOAD
0x254 PUSH1 0xa0
0x256 PUSH1 0x2
0x258 EXP
0x259 SWAP1
0x25a DIV
0x25b PUSH1 0xff
0x25d AND
0x25e ISZERO
---
0x251: V239 = 0x1
0x253: V240 = S[0x1]
0x254: V241 = 0xa0
0x256: V242 = 0x2
0x258: V243 = EXP 0x2 0xa0
0x25a: V244 = DIV V240 0x10000000000000000000000000000000000000000
0x25b: V245 = 0xff
0x25d: V246 = AND 0xff V244
0x25e: V247 = ISZERO V246
---
Entry stack: [V10, 0x47a, V236]
Stack pops: 1
Stack additions: [V247]
Exit stack: [V10, 0x47a, V247]

================================

Block 0x25f
[0x25f:0x264]
---
Predecessors: [0x22f, 0x250]
Successors: [0x265, 0x47c]
---
0x25f JUMPDEST
0x260 ISZERO
0x261 PUSH2 0x47c
0x264 JUMPI
---
0x25f: JUMPDEST 
0x260: V248 = ISZERO S0
0x261: V249 = 0x47c
0x264: JUMPI 0x47c V248
---
Entry stack: [V10, 0x47a, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x47a]

================================

Block 0x265
[0x265:0x276]
---
Predecessors: [0x25f]
Successors: []
---
0x265 PUSH1 0x0
0x267 SLOAD
0x268 PUSH2 0x100
0x26b SWAP1
0x26c DIV
0x26d PUSH1 0x1
0x26f PUSH1 0xa0
0x271 PUSH1 0x2
0x273 EXP
0x274 SUB
0x275 AND
0x276 SELFDESTRUCT
---
0x265: V250 = 0x0
0x267: V251 = S[0x0]
0x268: V252 = 0x100
0x26c: V253 = DIV V251 0x100
0x26d: V254 = 0x1
0x26f: V255 = 0xa0
0x271: V256 = 0x2
0x273: V257 = EXP 0x2 0xa0
0x274: V258 = SUB 0x10000000000000000000000000000000000000000 0x1
0x275: V259 = AND 0xffffffffffffffffffffffffffffffffffffffff V253
0x276: SELFDESTRUCT V259
---
Entry stack: [V10, 0x47a]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x47a]

================================

Block 0x277
[0x277:0x27c]
---
Predecessors: [0x56]
Successors: [0x27d]
---
0x277 JUMPDEST
0x278 CALLVALUE
0x279 PUSH2 0x2
0x27c JUMPI
---
0x277: JUMPDEST 
0x278: V260 = CALLVALUE
0x279: V261 = 0x2
0x27c: THROWI V260
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x27d
[0x27d:0x29e]
---
Predecessors: [0x277]
Successors: [0x29f, 0x2b4]
---
0x27d PUSH2 0x47a
0x280 PUSH1 0x0
0x282 SLOAD
0x283 PUSH2 0x100
0x286 SWAP1
0x287 DIV
0x288 PUSH1 0x1
0x28a PUSH1 0xa0
0x28c PUSH1 0x2
0x28e EXP
0x28f SUB
0x290 SWAP1
0x291 DUP2
0x292 AND
0x293 CALLER
0x294 SWAP1
0x295 SWAP2
0x296 AND
0x297 EQ
0x298 DUP1
0x299 ISZERO
0x29a SWAP1
0x29b PUSH2 0x2b4
0x29e JUMPI
---
0x27d: V262 = 0x47a
0x280: V263 = 0x0
0x282: V264 = S[0x0]
0x283: V265 = 0x100
0x287: V266 = DIV V264 0x100
0x288: V267 = 0x1
0x28a: V268 = 0xa0
0x28c: V269 = 0x2
0x28e: V270 = EXP 0x2 0xa0
0x28f: V271 = SUB 0x10000000000000000000000000000000000000000 0x1
0x292: V272 = AND 0xffffffffffffffffffffffffffffffffffffffff V266
0x293: V273 = CALLER
0x296: V274 = AND 0xffffffffffffffffffffffffffffffffffffffff V273
0x297: V275 = EQ V274 V272
0x299: V276 = ISZERO V275
0x29b: V277 = 0x2b4
0x29e: JUMPI 0x2b4 V275
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x47a, V276]
Exit stack: [V10, 0x47a, V276]

================================

Block 0x29f
[0x29f:0x2b3]
---
Predecessors: [0x27d]
Successors: [0x2b4]
---
0x29f POP
0x2a0 PUSH1 0x1
0x2a2 SLOAD
0x2a3 PUSH1 0x1
0x2a5 PUSH1 0xa0
0x2a7 PUSH1 0x2
0x2a9 EXP
0x2aa SUB
0x2ab SWAP1
0x2ac DUP2
0x2ad AND
0x2ae CALLER
0x2af SWAP1
0x2b0 SWAP2
0x2b1 AND
0x2b2 EQ
0x2b3 ISZERO
---
0x2a0: V278 = 0x1
0x2a2: V279 = S[0x1]
0x2a3: V280 = 0x1
0x2a5: V281 = 0xa0
0x2a7: V282 = 0x2
0x2a9: V283 = EXP 0x2 0xa0
0x2aa: V284 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ad: V285 = AND 0xffffffffffffffffffffffffffffffffffffffff V279
0x2ae: V286 = CALLER
0x2b1: V287 = AND 0xffffffffffffffffffffffffffffffffffffffff V286
0x2b2: V288 = EQ V287 V285
0x2b3: V289 = ISZERO V288
---
Entry stack: [V10, 0x47a, V276]
Stack pops: 1
Stack additions: [V289]
Exit stack: [V10, 0x47a, V289]

================================

Block 0x2b4
[0x2b4:0x2b9]
---
Predecessors: [0x27d, 0x29f]
Successors: [0x2ba, 0x7da]
---
0x2b4 JUMPDEST
0x2b5 ISZERO
0x2b6 PUSH2 0x7da
0x2b9 JUMPI
---
0x2b4: JUMPDEST 
0x2b5: V290 = ISZERO S0
0x2b6: V291 = 0x7da
0x2b9: JUMPI 0x7da V290
---
Entry stack: [V10, 0x47a, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x47a]

================================

Block 0x2ba
[0x2ba:0x2bd]
---
Predecessors: [0x2b4]
Successors: []
---
0x2ba PUSH2 0x2
0x2bd JUMP
---
0x2ba: V292 = 0x2
0x2bd: THROW 
---
Entry stack: [V10, 0x47a]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x47a]

================================

Block 0x2be
[0x2be:0x2c3]
---
Predecessors: [0x61]
Successors: [0x2c4]
---
0x2be JUMPDEST
0x2bf CALLVALUE
0x2c0 PUSH2 0x2
0x2c3 JUMPI
---
0x2be: JUMPDEST 
0x2bf: V293 = CALLVALUE
0x2c0: V294 = 0x2
0x2c3: THROWI V293
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2c4
[0x2c4:0x2e8]
---
Predecessors: [0x2be]
Successors: [0x2e9, 0x2fe]
---
0x2c4 PUSH2 0x47a
0x2c7 PUSH1 0x4
0x2c9 CALLDATALOAD
0x2ca PUSH1 0x0
0x2cc SLOAD
0x2cd PUSH2 0x100
0x2d0 SWAP1
0x2d1 DIV
0x2d2 PUSH1 0x1
0x2d4 PUSH1 0xa0
0x2d6 PUSH1 0x2
0x2d8 EXP
0x2d9 SUB
0x2da SWAP1
0x2db DUP2
0x2dc AND
0x2dd CALLER
0x2de SWAP1
0x2df SWAP2
0x2e0 AND
0x2e1 EQ
0x2e2 DUP1
0x2e3 ISZERO
0x2e4 SWAP1
0x2e5 PUSH2 0x2fe
0x2e8 JUMPI
---
0x2c4: V295 = 0x47a
0x2c7: V296 = 0x4
0x2c9: V297 = CALLDATALOAD 0x4
0x2ca: V298 = 0x0
0x2cc: V299 = S[0x0]
0x2cd: V300 = 0x100
0x2d1: V301 = DIV V299 0x100
0x2d2: V302 = 0x1
0x2d4: V303 = 0xa0
0x2d6: V304 = 0x2
0x2d8: V305 = EXP 0x2 0xa0
0x2d9: V306 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2dc: V307 = AND 0xffffffffffffffffffffffffffffffffffffffff V301
0x2dd: V308 = CALLER
0x2e0: V309 = AND 0xffffffffffffffffffffffffffffffffffffffff V308
0x2e1: V310 = EQ V309 V307
0x2e3: V311 = ISZERO V310
0x2e5: V312 = 0x2fe
0x2e8: JUMPI 0x2fe V310
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x47a, V297, V311]
Exit stack: [V10, 0x47a, V297, V311]

================================

Block 0x2e9
[0x2e9:0x2fd]
---
Predecessors: [0x2c4]
Successors: [0x2fe]
---
0x2e9 POP
0x2ea PUSH1 0x1
0x2ec SLOAD
0x2ed PUSH1 0x1
0x2ef PUSH1 0xa0
0x2f1 PUSH1 0x2
0x2f3 EXP
0x2f4 SUB
0x2f5 SWAP1
0x2f6 DUP2
0x2f7 AND
0x2f8 CALLER
0x2f9 SWAP1
0x2fa SWAP2
0x2fb AND
0x2fc EQ
0x2fd ISZERO
---
0x2ea: V313 = 0x1
0x2ec: V314 = S[0x1]
0x2ed: V315 = 0x1
0x2ef: V316 = 0xa0
0x2f1: V317 = 0x2
0x2f3: V318 = EXP 0x2 0xa0
0x2f4: V319 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f7: V320 = AND 0xffffffffffffffffffffffffffffffffffffffff V314
0x2f8: V321 = CALLER
0x2fb: V322 = AND 0xffffffffffffffffffffffffffffffffffffffff V321
0x2fc: V323 = EQ V322 V320
0x2fd: V324 = ISZERO V323
---
Entry stack: [V10, 0x47a, V297, V311]
Stack pops: 1
Stack additions: [V324]
Exit stack: [V10, 0x47a, V297, V324]

================================

Block 0x2fe
[0x2fe:0x303]
---
Predecessors: [0x2c4, 0x2e9]
Successors: [0x304, 0x88c]
---
0x2fe JUMPDEST
0x2ff ISZERO
0x300 PUSH2 0x88c
0x303 JUMPI
---
0x2fe: JUMPDEST 
0x2ff: V325 = ISZERO S0
0x300: V326 = 0x88c
0x303: JUMPI 0x88c V325
---
Entry stack: [V10, 0x47a, V297, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x47a, V297]

================================

Block 0x304
[0x304:0x307]
---
Predecessors: [0x2fe]
Successors: []
---
0x304 PUSH2 0x2
0x307 JUMP
---
0x304: V327 = 0x2
0x307: THROW 
---
Entry stack: [V10, 0x47a, V297]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x47a, V297]

================================

Block 0x308
[0x308:0x30d]
---
Predecessors: [0x6c]
Successors: [0x30e]
---
0x308 JUMPDEST
0x309 CALLVALUE
0x30a PUSH2 0x2
0x30d JUMPI
---
0x308: JUMPDEST 
0x309: V328 = CALLVALUE
0x30a: V329 = 0x2
0x30d: THROWI V328
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x30e
[0x30e:0x323]
---
Predecessors: [0x308]
Successors: [0x324, 0xa00]
---
0x30e PUSH2 0x492
0x311 PUSH1 0x4
0x313 CALLDATALOAD
0x314 PUSH1 0x2
0x316 SLOAD
0x317 PUSH1 0x0
0x319 SWAP1
0x31a DUP2
0x31b SWAP1
0x31c DUP2
0x31d SWAP1
0x31e DUP5
0x31f LT
0x320 PUSH2 0xa00
0x323 JUMPI
---
0x30e: V330 = 0x492
0x311: V331 = 0x4
0x313: V332 = CALLDATALOAD 0x4
0x314: V333 = 0x2
0x316: V334 = S[0x2]
0x317: V335 = 0x0
0x31f: V336 = LT V332 V334
0x320: V337 = 0xa00
0x323: JUMPI 0xa00 V336
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x492, V332, 0x0, 0x0, 0x0]
Exit stack: [V10, 0x492, V332, 0x0, 0x0, 0x0]

================================

Block 0x324
[0x324:0x327]
---
Predecessors: [0x30e]
Successors: []
---
0x324 PUSH2 0x2
0x327 JUMP
---
0x324: V338 = 0x2
0x327: THROW 
---
Entry stack: [V10, 0x492, V332, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x492, V332, 0x0, 0x0, 0x0]

================================

Block 0x328
[0x328:0x32d]
---
Predecessors: [0x77]
Successors: [0x32e]
---
0x328 JUMPDEST
0x329 CALLVALUE
0x32a PUSH2 0x2
0x32d JUMPI
---
0x328: JUMPDEST 
0x329: V339 = CALLVALUE
0x32a: V340 = 0x2
0x32d: THROWI V339
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x32e
[0x32e:0x33f]
---
Predecessors: [0x328]
Successors: [0x47e]
---
0x32e PUSH2 0x47e
0x331 PUSH1 0x1
0x333 SLOAD
0x334 PUSH1 0xb0
0x336 PUSH1 0x2
0x338 EXP
0x339 SWAP1
0x33a DIV
0x33b PUSH1 0xff
0x33d AND
0x33e DUP2
0x33f JUMP
---
0x32e: V341 = 0x47e
0x331: V342 = 0x1
0x333: V343 = S[0x1]
0x334: V344 = 0xb0
0x336: V345 = 0x2
0x338: V346 = EXP 0x2 0xb0
0x33a: V347 = DIV V343 0x100000000000000000000000000000000000000000000
0x33b: V348 = 0xff
0x33d: V349 = AND 0xff V347
0x33f: JUMP 0x47e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x47e, V349]
Exit stack: [V10, 0x47e, V349]

================================

Block 0x340
[0x340:0x345]
---
Predecessors: [0x82]
Successors: [0x346]
---
0x340 JUMPDEST
0x341 CALLVALUE
0x342 PUSH2 0x2
0x345 JUMPI
---
0x340: JUMPDEST 
0x341: V350 = CALLVALUE
0x342: V351 = 0x2
0x345: THROWI V350
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x346
[0x346:0x35b]
---
Predecessors: [0x340]
Successors: [0x4b6]
---
0x346 PUSH2 0x4b6
0x349 PUSH1 0x0
0x34b SLOAD
0x34c PUSH2 0x100
0x34f SWAP1
0x350 DIV
0x351 PUSH1 0x1
0x353 PUSH1 0xa0
0x355 PUSH1 0x2
0x357 EXP
0x358 SUB
0x359 AND
0x35a DUP2
0x35b JUMP
---
0x346: V352 = 0x4b6
0x349: V353 = 0x0
0x34b: V354 = S[0x0]
0x34c: V355 = 0x100
0x350: V356 = DIV V354 0x100
0x351: V357 = 0x1
0x353: V358 = 0xa0
0x355: V359 = 0x2
0x357: V360 = EXP 0x2 0xa0
0x358: V361 = SUB 0x10000000000000000000000000000000000000000 0x1
0x359: V362 = AND 0xffffffffffffffffffffffffffffffffffffffff V356
0x35b: JUMP 0x4b6
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x4b6, V362]
Exit stack: [V10, 0x4b6, V362]

================================

Block 0x35c
[0x35c:0x361]
---
Predecessors: [0x8d]
Successors: [0x362]
---
0x35c JUMPDEST
0x35d CALLVALUE
0x35e PUSH2 0x2
0x361 JUMPI
---
0x35c: JUMPDEST 
0x35d: V363 = CALLVALUE
0x35e: V364 = 0x2
0x361: THROWI V363
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x362
[0x362:0x36c]
---
Predecessors: [0x35c]
Successors: [0x4d3]
---
0x362 PUSH2 0x4d3
0x365 PUSH1 0x0
0x367 SLOAD
0x368 PUSH1 0xff
0x36a AND
0x36b DUP2
0x36c JUMP
---
0x362: V365 = 0x4d3
0x365: V366 = 0x0
0x367: V367 = S[0x0]
0x368: V368 = 0xff
0x36a: V369 = AND 0xff V367
0x36c: JUMP 0x4d3
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x4d3, V369]
Exit stack: [V10, 0x4d3, V369]

================================

Block 0x36d
[0x36d:0x372]
---
Predecessors: [0x98]
Successors: [0x373]
---
0x36d JUMPDEST
0x36e CALLVALUE
0x36f PUSH2 0x2
0x372 JUMPI
---
0x36d: JUMPDEST 
0x36e: V370 = CALLVALUE
0x36f: V371 = 0x2
0x372: THROWI V370
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x373
[0x373:0x383]
---
Predecessors: [0x36d]
Successors: [0x4b6]
---
0x373 PUSH2 0x4b6
0x376 PUSH1 0x1
0x378 SLOAD
0x379 PUSH1 0x1
0x37b PUSH1 0xa0
0x37d PUSH1 0x2
0x37f EXP
0x380 SUB
0x381 AND
0x382 DUP2
0x383 JUMP
---
0x373: V372 = 0x4b6
0x376: V373 = 0x1
0x378: V374 = S[0x1]
0x379: V375 = 0x1
0x37b: V376 = 0xa0
0x37d: V377 = 0x2
0x37f: V378 = EXP 0x2 0xa0
0x380: V379 = SUB 0x10000000000000000000000000000000000000000 0x1
0x381: V380 = AND 0xffffffffffffffffffffffffffffffffffffffff V374
0x383: JUMP 0x4b6
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x4b6, V380]
Exit stack: [V10, 0x4b6, V380]

================================

Block 0x384
[0x384:0x389]
---
Predecessors: [0xa3]
Successors: [0x38a]
---
0x384 JUMPDEST
0x385 CALLVALUE
0x386 PUSH2 0x2
0x389 JUMPI
---
0x384: JUMPDEST 
0x385: V381 = CALLVALUE
0x386: V382 = 0x2
0x389: THROWI V381
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x38a
[0x38a:0x39b]
---
Predecessors: [0x384]
Successors: [0x47e]
---
0x38a PUSH2 0x47e
0x38d PUSH1 0x1
0x38f SLOAD
0x390 PUSH1 0xa0
0x392 PUSH1 0x2
0x394 EXP
0x395 SWAP1
0x396 DIV
0x397 PUSH1 0xff
0x399 AND
0x39a DUP2
0x39b JUMP
---
0x38a: V383 = 0x47e
0x38d: V384 = 0x1
0x38f: V385 = S[0x1]
0x390: V386 = 0xa0
0x392: V387 = 0x2
0x394: V388 = EXP 0x2 0xa0
0x396: V389 = DIV V385 0x10000000000000000000000000000000000000000
0x397: V390 = 0xff
0x399: V391 = AND 0xff V389
0x39b: JUMP 0x47e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x47e, V391]
Exit stack: [V10, 0x47e, V391]

================================

Block 0x39c
[0x39c:0x3a1]
---
Predecessors: [0xae]
Successors: [0x3a2]
---
0x39c JUMPDEST
0x39d CALLVALUE
0x39e PUSH2 0x2
0x3a1 JUMPI
---
0x39c: JUMPDEST 
0x39d: V392 = CALLVALUE
0x39e: V393 = 0x2
0x3a1: THROWI V392
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3a2
[0x3a2:0x3c6]
---
Predecessors: [0x39c]
Successors: [0x3c7, 0x3dc]
---
0x3a2 PUSH2 0x47a
0x3a5 PUSH1 0x4
0x3a7 CALLDATALOAD
0x3a8 PUSH1 0x0
0x3aa SLOAD
0x3ab PUSH2 0x100
0x3ae SWAP1
0x3af DIV
0x3b0 PUSH1 0x1
0x3b2 PUSH1 0xa0
0x3b4 PUSH1 0x2
0x3b6 EXP
0x3b7 SUB
0x3b8 SWAP1
0x3b9 DUP2
0x3ba AND
0x3bb CALLER
0x3bc SWAP1
0x3bd SWAP2
0x3be AND
0x3bf EQ
0x3c0 DUP1
0x3c1 ISZERO
0x3c2 SWAP1
0x3c3 PUSH2 0x3dc
0x3c6 JUMPI
---
0x3a2: V394 = 0x47a
0x3a5: V395 = 0x4
0x3a7: V396 = CALLDATALOAD 0x4
0x3a8: V397 = 0x0
0x3aa: V398 = S[0x0]
0x3ab: V399 = 0x100
0x3af: V400 = DIV V398 0x100
0x3b0: V401 = 0x1
0x3b2: V402 = 0xa0
0x3b4: V403 = 0x2
0x3b6: V404 = EXP 0x2 0xa0
0x3b7: V405 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ba: V406 = AND 0xffffffffffffffffffffffffffffffffffffffff V400
0x3bb: V407 = CALLER
0x3be: V408 = AND 0xffffffffffffffffffffffffffffffffffffffff V407
0x3bf: V409 = EQ V408 V406
0x3c1: V410 = ISZERO V409
0x3c3: V411 = 0x3dc
0x3c6: JUMPI 0x3dc V409
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x47a, V396, V410]
Exit stack: [V10, 0x47a, V396, V410]

================================

Block 0x3c7
[0x3c7:0x3db]
---
Predecessors: [0x3a2]
Successors: [0x3dc]
---
0x3c7 POP
0x3c8 PUSH1 0x1
0x3ca SLOAD
0x3cb PUSH1 0x1
0x3cd PUSH1 0xa0
0x3cf PUSH1 0x2
0x3d1 EXP
0x3d2 SUB
0x3d3 SWAP1
0x3d4 DUP2
0x3d5 AND
0x3d6 CALLER
0x3d7 SWAP1
0x3d8 SWAP2
0x3d9 AND
0x3da EQ
0x3db ISZERO
---
0x3c8: V412 = 0x1
0x3ca: V413 = S[0x1]
0x3cb: V414 = 0x1
0x3cd: V415 = 0xa0
0x3cf: V416 = 0x2
0x3d1: V417 = EXP 0x2 0xa0
0x3d2: V418 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d5: V419 = AND 0xffffffffffffffffffffffffffffffffffffffff V413
0x3d6: V420 = CALLER
0x3d9: V421 = AND 0xffffffffffffffffffffffffffffffffffffffff V420
0x3da: V422 = EQ V421 V419
0x3db: V423 = ISZERO V422
---
Entry stack: [V10, 0x47a, V396, V410]
Stack pops: 1
Stack additions: [V423]
Exit stack: [V10, 0x47a, V396, V423]

================================

Block 0x3dc
[0x3dc:0x3e1]
---
Predecessors: [0x3a2, 0x3c7]
Successors: [0x3e2, 0xaa3]
---
0x3dc JUMPDEST
0x3dd ISZERO
0x3de PUSH2 0xaa3
0x3e1 JUMPI
---
0x3dc: JUMPDEST 
0x3dd: V424 = ISZERO S0
0x3de: V425 = 0xaa3
0x3e1: JUMPI 0xaa3 V424
---
Entry stack: [V10, 0x47a, V396, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x47a, V396]

================================

Block 0x3e2
[0x3e2:0x3e5]
---
Predecessors: [0x3dc]
Successors: []
---
0x3e2 PUSH2 0x2
0x3e5 JUMP
---
0x3e2: V426 = 0x2
0x3e5: THROW 
---
Entry stack: [V10, 0x47a, V396]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x47a, V396]

================================

Block 0x3e6
[0x3e6:0x3eb]
---
Predecessors: [0xb9]
Successors: [0x3ec]
---
0x3e6 JUMPDEST
0x3e7 CALLVALUE
0x3e8 PUSH2 0x2
0x3eb JUMPI
---
0x3e6: JUMPDEST 
0x3e7: V427 = CALLVALUE
0x3e8: V428 = 0x2
0x3eb: THROWI V427
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3ec
[0x3ec:0x40d]
---
Predecessors: [0x3e6]
Successors: [0x40e, 0x423]
---
0x3ec PUSH2 0x47a
0x3ef PUSH1 0x0
0x3f1 SLOAD
0x3f2 PUSH2 0x100
0x3f5 SWAP1
0x3f6 DIV
0x3f7 PUSH1 0x1
0x3f9 PUSH1 0xa0
0x3fb PUSH1 0x2
0x3fd EXP
0x3fe SUB
0x3ff SWAP1
0x400 DUP2
0x401 AND
0x402 CALLER
0x403 SWAP1
0x404 SWAP2
0x405 AND
0x406 EQ
0x407 DUP1
0x408 ISZERO
0x409 SWAP1
0x40a PUSH2 0x423
0x40d JUMPI
---
0x3ec: V429 = 0x47a
0x3ef: V430 = 0x0
0x3f1: V431 = S[0x0]
0x3f2: V432 = 0x100
0x3f6: V433 = DIV V431 0x100
0x3f7: V434 = 0x1
0x3f9: V435 = 0xa0
0x3fb: V436 = 0x2
0x3fd: V437 = EXP 0x2 0xa0
0x3fe: V438 = SUB 0x10000000000000000000000000000000000000000 0x1
0x401: V439 = AND 0xffffffffffffffffffffffffffffffffffffffff V433
0x402: V440 = CALLER
0x405: V441 = AND 0xffffffffffffffffffffffffffffffffffffffff V440
0x406: V442 = EQ V441 V439
0x408: V443 = ISZERO V442
0x40a: V444 = 0x423
0x40d: JUMPI 0x423 V442
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x47a, V443]
Exit stack: [V10, 0x47a, V443]

================================

Block 0x40e
[0x40e:0x422]
---
Predecessors: [0x3ec]
Successors: [0x423]
---
0x40e POP
0x40f PUSH1 0x1
0x411 SLOAD
0x412 PUSH1 0x1
0x414 PUSH1 0xa0
0x416 PUSH1 0x2
0x418 EXP
0x419 SUB
0x41a SWAP1
0x41b DUP2
0x41c AND
0x41d CALLER
0x41e SWAP1
0x41f SWAP2
0x420 AND
0x421 EQ
0x422 ISZERO
---
0x40f: V445 = 0x1
0x411: V446 = S[0x1]
0x412: V447 = 0x1
0x414: V448 = 0xa0
0x416: V449 = 0x2
0x418: V450 = EXP 0x2 0xa0
0x419: V451 = SUB 0x10000000000000000000000000000000000000000 0x1
0x41c: V452 = AND 0xffffffffffffffffffffffffffffffffffffffff V446
0x41d: V453 = CALLER
0x420: V454 = AND 0xffffffffffffffffffffffffffffffffffffffff V453
0x421: V455 = EQ V454 V452
0x422: V456 = ISZERO V455
---
Entry stack: [V10, 0x47a, V443]
Stack pops: 1
Stack additions: [V456]
Exit stack: [V10, 0x47a, V456]

================================

Block 0x423
[0x423:0x428]
---
Predecessors: [0x3ec, 0x40e]
Successors: [0x429, 0xba3]
---
0x423 JUMPDEST
0x424 ISZERO
0x425 PUSH2 0xba3
0x428 JUMPI
---
0x423: JUMPDEST 
0x424: V457 = ISZERO S0
0x425: V458 = 0xba3
0x428: JUMPI 0xba3 V457
---
Entry stack: [V10, 0x47a, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x47a]

================================

Block 0x429
[0x429:0x42c]
---
Predecessors: [0x423]
Successors: []
---
0x429 PUSH2 0x2
0x42c JUMP
---
0x429: V459 = 0x2
0x42c: THROW 
---
Entry stack: [V10, 0x47a]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x47a]

================================

Block 0x42d
[0x42d:0x432]
---
Predecessors: [0xc4]
Successors: [0x433]
---
0x42d JUMPDEST
0x42e CALLVALUE
0x42f PUSH2 0x2
0x432 JUMPI
---
0x42d: JUMPDEST 
0x42e: V460 = CALLVALUE
0x42f: V461 = 0x2
0x432: THROWI V460
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x433
[0x433:0x450]
---
Predecessors: [0x42d]
Successors: [0x492]
---
0x433 PUSH2 0x492
0x436 PUSH1 0x3
0x438 SLOAD
0x439 PUSH1 0xff
0x43b DUP2
0x43c DUP2
0x43d AND
0x43e SWAP2
0x43f PUSH2 0x100
0x442 DUP2
0x443 DIV
0x444 DUP3
0x445 AND
0x446 SWAP2
0x447 PUSH3 0x10000
0x44b SWAP1
0x44c SWAP2
0x44d DIV
0x44e AND
0x44f DUP4
0x450 JUMP
---
0x433: V462 = 0x492
0x436: V463 = 0x3
0x438: V464 = S[0x3]
0x439: V465 = 0xff
0x43d: V466 = AND 0xff V464
0x43f: V467 = 0x100
0x443: V468 = DIV V464 0x100
0x445: V469 = AND 0xff V468
0x447: V470 = 0x10000
0x44d: V471 = DIV V464 0x10000
0x44e: V472 = AND V471 0xff
0x450: JUMP 0x492
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x492, V466, V469, V472]
Exit stack: [V10, 0x492, V466, V469, V472]

================================

Block 0x451
[0x451:0x456]
---
Predecessors: [0xcf]
Successors: [0x457]
---
0x451 JUMPDEST
0x452 CALLVALUE
0x453 PUSH2 0x2
0x456 JUMPI
---
0x451: JUMPDEST 
0x452: V473 = CALLVALUE
0x453: V474 = 0x2
0x456: THROWI V473
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x457
[0x457:0x461]
---
Predecessors: [0x451]
Successors: [0x1c9]
---
0x457 PUSH2 0x1c9
0x45a PUSH1 0x4
0x45c SLOAD
0x45d PUSH1 0xff
0x45f AND
0x460 DUP2
0x461 JUMP
---
0x457: V475 = 0x1c9
0x45a: V476 = 0x4
0x45c: V477 = S[0x4]
0x45d: V478 = 0xff
0x45f: V479 = AND 0xff V477
0x461: JUMP 0x1c9
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1c9, V479]
Exit stack: [V10, 0x1c9, V479]

================================

Block 0x462
[0x462:0x467]
---
Predecessors: [0xda]
Successors: [0x468]
---
0x462 JUMPDEST
0x463 CALLVALUE
0x464 PUSH2 0x2
0x467 JUMPI
---
0x462: JUMPDEST 
0x463: V480 = CALLVALUE
0x464: V481 = 0x2
0x467: THROWI V480
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x468
[0x468:0x479]
---
Predecessors: [0x462]
Successors: [0x47e]
---
0x468 PUSH2 0x47e
0x46b PUSH1 0x1
0x46d SLOAD
0x46e PUSH1 0xa8
0x470 PUSH1 0x2
0x472 EXP
0x473 SWAP1
0x474 DIV
0x475 PUSH1 0xff
0x477 AND
0x478 DUP2
0x479 JUMP
---
0x468: V482 = 0x47e
0x46b: V483 = 0x1
0x46d: V484 = S[0x1]
0x46e: V485 = 0xa8
0x470: V486 = 0x2
0x472: V487 = EXP 0x2 0xa8
0x474: V488 = DIV V484 0x1000000000000000000000000000000000000000000
0x475: V489 = 0xff
0x477: V490 = AND 0xff V488
0x479: JUMP 0x47e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x47e, V490]
Exit stack: [V10, 0x47e, V490]

================================

Block 0x47a
[0x47a:0x47b]
---
Predecessors: [0x47c, 0x4e9, 0x6a4, 0x793, 0x853, 0xb7f, 0xc59]
Successors: []
---
0x47a JUMPDEST
0x47b STOP
---
0x47a: JUMPDEST 
0x47b: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x47c
[0x47c:0x47d]
---
Predecessors: [0x11c, 0x25f]
Successors: [0x47a]
---
0x47c JUMPDEST
0x47d JUMP
---
0x47c: JUMPDEST 
0x47d: JUMP 0x47a
---
Entry stack: [V10, 0x47a]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x47e
[0x47e:0x491]
---
Predecessors: [0x164, 0x32e, 0x38a, 0x468]
Successors: []
---
0x47e JUMPDEST
0x47f PUSH1 0x40
0x481 DUP1
0x482 MLOAD
0x483 SWAP2
0x484 ISZERO
0x485 ISZERO
0x486 DUP3
0x487 MSTORE
0x488 MLOAD
0x489 SWAP1
0x48a DUP2
0x48b SWAP1
0x48c SUB
0x48d PUSH1 0x20
0x48f ADD
0x490 SWAP1
0x491 RETURN
---
0x47e: JUMPDEST 
0x47f: V491 = 0x40
0x482: V492 = M[0x40]
0x484: V493 = ISZERO S0
0x485: V494 = ISZERO V493
0x487: M[V492] = V494
0x488: V495 = M[0x40]
0x48c: V496 = SUB V492 V495
0x48d: V497 = 0x20
0x48f: V498 = ADD 0x20 V496
0x491: RETURN V495 V498
---
Entry stack: [V10, 0x47e, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x47e]

================================

Block 0x492
[0x492:0x4b5]
---
Predecessors: [0x433, 0xa6d]
Successors: []
---
0x492 JUMPDEST
0x493 PUSH1 0x40
0x495 DUP1
0x496 MLOAD
0x497 PUSH1 0xff
0x499 SWAP5
0x49a DUP6
0x49b AND
0x49c DUP2
0x49d MSTORE
0x49e SWAP3
0x49f SWAP1
0x4a0 SWAP4
0x4a1 AND
0x4a2 PUSH1 0x20
0x4a4 DUP4
0x4a5 ADD
0x4a6 MSTORE
0x4a7 DUP2
0x4a8 DUP4
0x4a9 ADD
0x4aa MSTORE
0x4ab SWAP1
0x4ac MLOAD
0x4ad SWAP1
0x4ae DUP2
0x4af SWAP1
0x4b0 SUB
0x4b1 PUSH1 0x60
0x4b3 ADD
0x4b4 SWAP1
0x4b5 RETURN
---
0x492: JUMPDEST 
0x493: V499 = 0x40
0x496: V500 = M[0x40]
0x497: V501 = 0xff
0x49b: V502 = AND 0xff S2
0x49d: M[V500] = V502
0x4a1: V503 = AND 0xff S1
0x4a2: V504 = 0x20
0x4a5: V505 = ADD V500 0x20
0x4a6: M[V505] = V503
0x4a9: V506 = ADD 0x40 V500
0x4aa: M[V506] = S0
0x4ac: V507 = M[0x40]
0x4b0: V508 = SUB V500 V507
0x4b1: V509 = 0x60
0x4b3: V510 = ADD 0x60 V508
0x4b5: RETURN V507 V510
---
Entry stack: [V10, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V10, S3]

================================

Block 0x4b6
[0x4b6:0x4d2]
---
Predecessors: [0x346, 0x373]
Successors: []
---
0x4b6 JUMPDEST
0x4b7 PUSH1 0x40
0x4b9 DUP1
0x4ba MLOAD
0x4bb PUSH1 0x1
0x4bd PUSH1 0xa0
0x4bf PUSH1 0x2
0x4c1 EXP
0x4c2 SUB
0x4c3 SWAP3
0x4c4 SWAP1
0x4c5 SWAP3
0x4c6 AND
0x4c7 DUP3
0x4c8 MSTORE
0x4c9 MLOAD
0x4ca SWAP1
0x4cb DUP2
0x4cc SWAP1
0x4cd SUB
0x4ce PUSH1 0x20
0x4d0 ADD
0x4d1 SWAP1
0x4d2 RETURN
---
0x4b6: JUMPDEST 
0x4b7: V511 = 0x40
0x4ba: V512 = M[0x40]
0x4bb: V513 = 0x1
0x4bd: V514 = 0xa0
0x4bf: V515 = 0x2
0x4c1: V516 = EXP 0x2 0xa0
0x4c2: V517 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c6: V518 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x4c8: M[V512] = V518
0x4c9: V519 = M[0x40]
0x4cd: V520 = SUB V512 V519
0x4ce: V521 = 0x20
0x4d0: V522 = ADD 0x20 V520
0x4d2: RETURN V519 V522
---
Entry stack: [V10, 0x4b6, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x4b6]

================================

Block 0x4d3
[0x4d3:0x4e8]
---
Predecessors: [0x362]
Successors: []
---
0x4d3 JUMPDEST
0x4d4 PUSH1 0x40
0x4d6 DUP1
0x4d7 MLOAD
0x4d8 PUSH1 0xff
0x4da SWAP1
0x4db SWAP3
0x4dc AND
0x4dd DUP3
0x4de MSTORE
0x4df MLOAD
0x4e0 SWAP1
0x4e1 DUP2
0x4e2 SWAP1
0x4e3 SUB
0x4e4 PUSH1 0x20
0x4e6 ADD
0x4e7 SWAP1
0x4e8 RETURN
---
0x4d3: JUMPDEST 
0x4d4: V523 = 0x40
0x4d7: V524 = M[0x40]
0x4d8: V525 = 0xff
0x4dc: V526 = AND V369 0xff
0x4de: M[V524] = V526
0x4df: V527 = M[0x40]
0x4e3: V528 = SUB V524 V527
0x4e4: V529 = 0x20
0x4e6: V530 = ADD 0x20 V528
0x4e8: RETURN V527 V530
---
Entry stack: [V10, 0x4d3, V369]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x4d3]

================================

Block 0x4e9
[0x4e9:0x52f]
---
Predecessors: [0x154]
Successors: [0x47a]
---
0x4e9 JUMPDEST
0x4ea PUSH1 0x1
0x4ec DUP1
0x4ed SLOAD
0x4ee PUSH21 0xff0000000000000000000000000000000000000000
0x504 NOT
0x505 PUSH22 0xff000000000000000000000000000000000000000000
0x51c NOT
0x51d SWAP1
0x51e SWAP2
0x51f AND
0x520 PUSH1 0xa8
0x522 PUSH1 0x2
0x524 EXP
0x525 OR
0x526 AND
0x527 PUSH1 0xa0
0x529 PUSH1 0x2
0x52b EXP
0x52c OR
0x52d SWAP1
0x52e SSTORE
0x52f JUMP
---
0x4e9: JUMPDEST 
0x4ea: V531 = 0x1
0x4ed: V532 = S[0x1]
0x4ee: V533 = 0xff0000000000000000000000000000000000000000
0x504: V534 = NOT 0xff0000000000000000000000000000000000000000
0x505: V535 = 0xff000000000000000000000000000000000000000000
0x51c: V536 = NOT 0xff000000000000000000000000000000000000000000
0x51f: V537 = AND V532 0xffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff
0x520: V538 = 0xa8
0x522: V539 = 0x2
0x524: V540 = EXP 0x2 0xa8
0x525: V541 = OR 0x1000000000000000000000000000000000000000000 V537
0x526: V542 = AND V541 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff
0x527: V543 = 0xa0
0x529: V544 = 0x2
0x52b: V545 = EXP 0x2 0xa0
0x52c: V546 = OR 0x10000000000000000000000000000000000000000 V542
0x52e: S[0x1] = V546
0x52f: JUMP 0x47a
---
Entry stack: [V10, 0x47a]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x530
[0x530:0x543]
---
Predecessors: [0x1b6]
Successors: [0x544, 0x571]
---
0x530 JUMPDEST
0x531 PUSH1 0x1
0x533 SLOAD
0x534 PUSH1 0xb0
0x536 PUSH1 0x2
0x538 EXP
0x539 SWAP1
0x53a DIV
0x53b PUSH1 0xff
0x53d AND
0x53e ISZERO
0x53f DUP1
0x540 PUSH2 0x571
0x543 JUMPI
---
0x530: JUMPDEST 
0x531: V547 = 0x1
0x533: V548 = S[0x1]
0x534: V549 = 0xb0
0x536: V550 = 0x2
0x538: V551 = EXP 0x2 0xb0
0x53a: V552 = DIV V548 0x100000000000000000000000000000000000000000000
0x53b: V553 = 0xff
0x53d: V554 = AND 0xff V552
0x53e: V555 = ISZERO V554
0x540: V556 = 0x571
0x543: JUMPI 0x571 V555
---
Entry stack: [V10, 0x47a, V143]
Stack pops: 0
Stack additions: [V555]
Exit stack: [V10, 0x47a, V143, V555]

================================

Block 0x544
[0x544:0x562]
---
Predecessors: [0x530]
Successors: [0x563, 0x571]
---
0x544 POP
0x545 PUSH1 0x0
0x547 SLOAD
0x548 PUSH2 0x100
0x54b SWAP1
0x54c DIV
0x54d PUSH1 0x1
0x54f PUSH1 0xa0
0x551 PUSH1 0x2
0x553 EXP
0x554 SUB
0x555 SWAP1
0x556 DUP2
0x557 AND
0x558 CALLER
0x559 SWAP1
0x55a SWAP2
0x55b AND
0x55c EQ
0x55d DUP1
0x55e ISZERO
0x55f PUSH2 0x571
0x562 JUMPI
---
0x545: V557 = 0x0
0x547: V558 = S[0x0]
0x548: V559 = 0x100
0x54c: V560 = DIV V558 0x100
0x54d: V561 = 0x1
0x54f: V562 = 0xa0
0x551: V563 = 0x2
0x553: V564 = EXP 0x2 0xa0
0x554: V565 = SUB 0x10000000000000000000000000000000000000000 0x1
0x557: V566 = AND 0xffffffffffffffffffffffffffffffffffffffff V560
0x558: V567 = CALLER
0x55b: V568 = AND 0xffffffffffffffffffffffffffffffffffffffff V567
0x55c: V569 = EQ V568 V566
0x55e: V570 = ISZERO V569
0x55f: V571 = 0x571
0x562: JUMPI 0x571 V570
---
Entry stack: [V10, 0x47a, V143, V555]
Stack pops: 1
Stack additions: [V569]
Exit stack: [V10, 0x47a, V143, V569]

================================

Block 0x563
[0x563:0x570]
---
Predecessors: [0x544]
Successors: [0x571]
---
0x563 POP
0x564 PUSH1 0x1
0x566 SLOAD
0x567 PUSH1 0xa8
0x569 PUSH1 0x2
0x56b EXP
0x56c SWAP1
0x56d DIV
0x56e PUSH1 0xff
0x570 AND
---
0x564: V572 = 0x1
0x566: V573 = S[0x1]
0x567: V574 = 0xa8
0x569: V575 = 0x2
0x56b: V576 = EXP 0x2 0xa8
0x56d: V577 = DIV V573 0x1000000000000000000000000000000000000000000
0x56e: V578 = 0xff
0x570: V579 = AND 0xff V577
---
Entry stack: [V10, 0x47a, V143, V569]
Stack pops: 1
Stack additions: [V579]
Exit stack: [V10, 0x47a, V143, V579]

================================

Block 0x571
[0x571:0x576]
---
Predecessors: [0x530, 0x544, 0x563]
Successors: [0x577, 0x5a0]
---
0x571 JUMPDEST
0x572 DUP1
0x573 PUSH2 0x5a0
0x576 JUMPI
---
0x571: JUMPDEST 
0x573: V580 = 0x5a0
0x576: JUMPI 0x5a0 S0
---
Entry stack: [V10, 0x47a, V143, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x47a, V143, S0]

================================

Block 0x577
[0x577:0x590]
---
Predecessors: [0x571]
Successors: [0x591, 0x5a0]
---
0x577 POP
0x578 PUSH1 0x1
0x57a SLOAD
0x57b PUSH1 0x1
0x57d PUSH1 0xa0
0x57f PUSH1 0x2
0x581 EXP
0x582 SUB
0x583 SWAP1
0x584 DUP2
0x585 AND
0x586 CALLER
0x587 SWAP1
0x588 SWAP2
0x589 AND
0x58a EQ
0x58b DUP1
0x58c ISZERO
0x58d PUSH2 0x5a0
0x590 JUMPI
---
0x578: V581 = 0x1
0x57a: V582 = S[0x1]
0x57b: V583 = 0x1
0x57d: V584 = 0xa0
0x57f: V585 = 0x2
0x581: V586 = EXP 0x2 0xa0
0x582: V587 = SUB 0x10000000000000000000000000000000000000000 0x1
0x585: V588 = AND 0xffffffffffffffffffffffffffffffffffffffff V582
0x586: V589 = CALLER
0x589: V590 = AND 0xffffffffffffffffffffffffffffffffffffffff V589
0x58a: V591 = EQ V590 V588
0x58c: V592 = ISZERO V591
0x58d: V593 = 0x5a0
0x590: JUMPI 0x5a0 V592
---
Entry stack: [V10, 0x47a, V143, S0]
Stack pops: 1
Stack additions: [V591]
Exit stack: [V10, 0x47a, V143, V591]

================================

Block 0x591
[0x591:0x59f]
---
Predecessors: [0x577]
Successors: [0x5a0]
---
0x591 POP
0x592 PUSH1 0x1
0x594 SLOAD
0x595 PUSH1 0xa8
0x597 PUSH1 0x2
0x599 EXP
0x59a SWAP1
0x59b DIV
0x59c PUSH1 0xff
0x59e AND
0x59f ISZERO
---
0x592: V594 = 0x1
0x594: V595 = S[0x1]
0x595: V596 = 0xa8
0x597: V597 = 0x2
0x599: V598 = EXP 0x2 0xa8
0x59b: V599 = DIV V595 0x1000000000000000000000000000000000000000000
0x59c: V600 = 0xff
0x59e: V601 = AND 0xff V599
0x59f: V602 = ISZERO V601
---
Entry stack: [V10, 0x47a, V143, V591]
Stack pops: 1
Stack additions: [V602]
Exit stack: [V10, 0x47a, V143, V602]

================================

Block 0x5a0
[0x5a0:0x5a5]
---
Predecessors: [0x571, 0x577, 0x591]
Successors: [0x5a6, 0x5aa]
---
0x5a0 JUMPDEST
0x5a1 ISZERO
0x5a2 PUSH2 0x5aa
0x5a5 JUMPI
---
0x5a0: JUMPDEST 
0x5a1: V603 = ISZERO S0
0x5a2: V604 = 0x5aa
0x5a5: JUMPI 0x5aa V603
---
Entry stack: [V10, 0x47a, V143, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x47a, V143]

================================

Block 0x5a6
[0x5a6:0x5a9]
---
Predecessors: [0x5a0]
Successors: []
---
0x5a6 PUSH2 0x2
0x5a9 JUMP
---
0x5a6: V605 = 0x2
0x5a9: THROW 
---
Entry stack: [V10, 0x47a, V143]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x47a, V143]

================================

Block 0x5aa
[0x5aa:0x5b0]
---
Predecessors: [0x5a0]
Successors: [0x5b1, 0x687]
---
0x5aa JUMPDEST
0x5ab DUP1
0x5ac ISZERO
0x5ad PUSH2 0x687
0x5b0 JUMPI
---
0x5aa: JUMPDEST 
0x5ac: V606 = ISZERO V143
0x5ad: V607 = 0x687
0x5b0: JUMPI 0x687 V606
---
Entry stack: [V10, 0x47a, V143]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x47a, V143]

================================

Block 0x5b1
[0x5b1:0x5c7]
---
Predecessors: [0x5aa]
Successors: [0x5c8, 0x5f6]
---
0x5b1 PUSH1 0x2
0x5b3 DUP1
0x5b4 SLOAD
0x5b5 PUSH1 0x1
0x5b7 DUP2
0x5b8 ADD
0x5b9 DUP1
0x5ba DUP4
0x5bb SSTORE
0x5bc DUP3
0x5bd DUP2
0x5be DUP4
0x5bf DUP1
0x5c0 ISZERO
0x5c1 DUP3
0x5c2 SWAP1
0x5c3 GT
0x5c4 PUSH2 0x5f6
0x5c7 JUMPI
---
0x5b1: V608 = 0x2
0x5b4: V609 = S[0x2]
0x5b5: V610 = 0x1
0x5b8: V611 = ADD V609 0x1
0x5bb: S[0x2] = V611
0x5c0: V612 = ISZERO V609
0x5c3: V613 = GT V612 V611
0x5c4: V614 = 0x5f6
0x5c7: JUMPI 0x5f6 V613
---
Entry stack: [V10, 0x47a, V143]
Stack pops: 0
Stack additions: [0x2, V609, V611, 0x2, V611, V609]
Exit stack: [V10, 0x47a, V143, 0x2, V609, V611, 0x2, V611, V609]

================================

Block 0x5c8
[0x5c8:0x5db]
---
Predecessors: [0x5b1]
Successors: [0x5dc]
---
0x5c8 DUP2
0x5c9 DUP4
0x5ca PUSH1 0x0
0x5cc MSTORE
0x5cd PUSH1 0x20
0x5cf PUSH1 0x0
0x5d1 SHA3
0x5d2 SWAP2
0x5d3 DUP3
0x5d4 ADD
0x5d5 SWAP2
0x5d6 ADD
0x5d7 PUSH2 0x5f6
0x5da SWAP2
0x5db SWAP1
---
0x5ca: V615 = 0x0
0x5cc: M[0x0] = 0x2
0x5cd: V616 = 0x20
0x5cf: V617 = 0x0
0x5d1: V618 = SHA3 0x0 0x20
0x5d4: V619 = ADD V618 V609
0x5d6: V620 = ADD V618 V611
0x5d7: V621 = 0x5f6
---
Entry stack: [V10, 0x47a, V143, 0x2, V609, V611, 0x2, V611, V609]
Stack pops: 3
Stack additions: [S2, S1, 0x5f6, V619, V620]
Exit stack: [V10, 0x47a, V143, 0x2, V609, V611, 0x2, V611, 0x5f6, V619, V620]

================================

Block 0x5dc
[0x5dc:0x5e4]
---
Predecessors: [0x5c8, 0x5e5]
Successors: [0x5e5, 0x6a7]
---
0x5dc JUMPDEST
0x5dd DUP1
0x5de DUP3
0x5df GT
0x5e0 ISZERO
0x5e1 PUSH2 0x6a7
0x5e4 JUMPI
---
0x5dc: JUMPDEST 
0x5df: V622 = GT V619 S0
0x5e0: V623 = ISZERO V622
0x5e1: V624 = 0x6a7
0x5e4: JUMPI 0x6a7 V623
---
Entry stack: [V10, 0x47a, V143, 0x2, V609, V611, 0x2, V611, 0x5f6, V619, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x47a, V143, 0x2, V609, V611, 0x2, V611, 0x5f6, V619, S0]

================================

Block 0x5e5
[0x5e5:0x5f5]
---
Predecessors: [0x5dc]
Successors: [0x5dc]
---
0x5e5 DUP1
0x5e6 SLOAD
0x5e7 PUSH3 0xffffff
0x5eb NOT
0x5ec AND
0x5ed DUP2
0x5ee SSTORE
0x5ef PUSH1 0x1
0x5f1 ADD
0x5f2 PUSH2 0x5dc
0x5f5 JUMP
---
0x5e6: V625 = S[S0]
0x5e7: V626 = 0xffffff
0x5eb: V627 = NOT 0xffffff
0x5ec: V628 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000 V625
0x5ee: S[S0] = V628
0x5ef: V629 = 0x1
0x5f1: V630 = ADD 0x1 S0
0x5f2: V631 = 0x5dc
0x5f5: JUMP 0x5dc
---
Entry stack: [V10, 0x47a, V143, 0x2, V609, V611, 0x2, V611, 0x5f6, V619, S0]
Stack pops: 1
Stack additions: [V630]
Exit stack: [V10, 0x47a, V143, 0x2, V609, V611, 0x2, V611, 0x5f6, V619, V630]

================================

Block 0x5f6
[0x5f6:0x686]
---
Predecessors: [0x5b1, 0x6a7]
Successors: [0x687]
---
0x5f6 JUMPDEST
0x5f7 POP
0x5f8 POP
0x5f9 POP
0x5fa SWAP2
0x5fb SWAP1
0x5fc SWAP1
0x5fd PUSH1 0x0
0x5ff MSTORE
0x600 PUSH1 0x20
0x602 PUSH1 0x0
0x604 SHA3
0x605 SWAP1
0x606 ADD
0x607 PUSH1 0x0
0x609 POP
0x60a DUP1
0x60b SLOAD
0x60c PUSH1 0x3
0x60e DUP1
0x60f SLOAD
0x610 PUSH1 0xff
0x612 NOT
0x613 SWAP3
0x614 SWAP1
0x615 SWAP3
0x616 AND
0x617 PUSH1 0xff
0x619 SWAP3
0x61a DUP4
0x61b AND
0x61c OR
0x61d DUP1
0x61e DUP5
0x61f SSTORE
0x620 DUP2
0x621 SLOAD
0x622 PUSH2 0x100
0x625 SWAP1
0x626 DUP2
0x627 SWAP1
0x628 DIV
0x629 DUP5
0x62a AND
0x62b MUL
0x62c PUSH2 0xff00
0x62f NOT
0x630 SWAP2
0x631 SWAP1
0x632 SWAP2
0x633 AND
0x634 OR
0x635 DUP1
0x636 DUP5
0x637 SSTORE
0x638 SWAP1
0x639 SLOAD
0x63a PUSH3 0x10000
0x63e SWAP1
0x63f DUP2
0x640 SWAP1
0x641 DIV
0x642 DUP4
0x643 AND
0x644 MUL
0x645 PUSH3 0xff0000
0x649 NOT
0x64a SWAP2
0x64b SWAP1
0x64c SWAP2
0x64d AND
0x64e OR
0x64f SWAP1
0x650 SWAP2
0x651 SSTORE
0x652 PUSH1 0x1
0x654 DUP1
0x655 SLOAD
0x656 PUSH1 0xa8
0x658 PUSH1 0x2
0x65a EXP
0x65b DUP1
0x65c DUP3
0x65d DIV
0x65e SWAP1
0x65f SWAP4
0x660 AND
0x661 ISZERO
0x662 SWAP1
0x663 SWAP3
0x664 MUL
0x665 PUSH22 0xff000000000000000000000000000000000000000000
0x67c NOT
0x67d SWAP1
0x67e SWAP3
0x67f AND
0x680 SWAP2
0x681 SWAP1
0x682 SWAP2
0x683 OR
0x684 SWAP1
0x685 SSTORE
0x686 POP
---
0x5f6: JUMPDEST 
0x5fd: V632 = 0x0
0x5ff: M[0x0] = 0x2
0x600: V633 = 0x20
0x602: V634 = 0x0
0x604: V635 = SHA3 0x0 0x20
0x606: V636 = ADD V609 V635
0x607: V637 = 0x0
0x60b: V638 = S[V636]
0x60c: V639 = 0x3
0x60f: V640 = S[0x3]
0x610: V641 = 0xff
0x612: V642 = NOT 0xff
0x616: V643 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V638
0x617: V644 = 0xff
0x61b: V645 = AND 0xff V640
0x61c: V646 = OR V645 V643
0x61f: S[V636] = V646
0x621: V647 = S[0x3]
0x622: V648 = 0x100
0x628: V649 = DIV V647 0x100
0x62a: V650 = AND 0xff V649
0x62b: V651 = MUL V650 0x100
0x62c: V652 = 0xff00
0x62f: V653 = NOT 0xff00
0x633: V654 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V646
0x634: V655 = OR V654 V651
0x637: S[V636] = V655
0x639: V656 = S[0x3]
0x63a: V657 = 0x10000
0x641: V658 = DIV V656 0x10000
0x643: V659 = AND 0xff V658
0x644: V660 = MUL V659 0x10000
0x645: V661 = 0xff0000
0x649: V662 = NOT 0xff0000
0x64d: V663 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff V655
0x64e: V664 = OR V663 V660
0x651: S[V636] = V664
0x652: V665 = 0x1
0x655: V666 = S[0x1]
0x656: V667 = 0xa8
0x658: V668 = 0x2
0x65a: V669 = EXP 0x2 0xa8
0x65d: V670 = DIV V666 0x1000000000000000000000000000000000000000000
0x660: V671 = AND 0xff V670
0x661: V672 = ISZERO V671
0x664: V673 = MUL 0x1000000000000000000000000000000000000000000 V672
0x665: V674 = 0xff000000000000000000000000000000000000000000
0x67c: V675 = NOT 0xff000000000000000000000000000000000000000000
0x67f: V676 = AND V666 0xffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff
0x683: V677 = OR V676 V673
0x685: S[0x1] = V677
---
Entry stack: [V10, 0x47a, V143, 0x2, V609, V611, 0x2, V611, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x47a, V143]

================================

Block 0x687
[0x687:0x6a3]
---
Predecessors: [0x5aa, 0x5f6]
Successors: [0x6a4]
---
0x687 JUMPDEST
0x688 PUSH1 0x3
0x68a DUP1
0x68b SLOAD
0x68c PUSH3 0xffffff
0x690 NOT
0x691 AND
0x692 SWAP1
0x693 SSTORE
0x694 PUSH1 0x1
0x696 DUP1
0x697 SLOAD
0x698 PUSH1 0xb0
0x69a PUSH1 0x2
0x69c EXP
0x69d PUSH1 0xff
0x69f MUL
0x6a0 NOT
0x6a1 AND
0x6a2 SWAP1
0x6a3 SSTORE
---
0x687: JUMPDEST 
0x688: V678 = 0x3
0x68b: V679 = S[0x3]
0x68c: V680 = 0xffffff
0x690: V681 = NOT 0xffffff
0x691: V682 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000 V679
0x693: S[0x3] = V682
0x694: V683 = 0x1
0x697: V684 = S[0x1]
0x698: V685 = 0xb0
0x69a: V686 = 0x2
0x69c: V687 = EXP 0x2 0xb0
0x69d: V688 = 0xff
0x69f: V689 = MUL 0xff 0x100000000000000000000000000000000000000000000
0x6a0: V690 = NOT 0xff00000000000000000000000000000000000000000000
0x6a1: V691 = AND 0xffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffff V684
0x6a3: S[0x1] = V691
---
Entry stack: [V10, 0x47a, V143]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x47a, V143]

================================

Block 0x6a4
[0x6a4:0x6a6]
---
Predecessors: [0x687, 0x915, 0x921, 0x994, 0xb31]
Successors: [0x47a]
---
0x6a4 JUMPDEST
0x6a5 POP
0x6a6 JUMP
---
0x6a4: JUMPDEST 
0x6a6: JUMP 0x47a
---
Entry stack: [V10, 0x47a, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x6a7
[0x6a7:0x6aa]
---
Predecessors: [0x5dc]
Successors: [0x5f6]
---
0x6a7 JUMPDEST
0x6a8 POP
0x6a9 SWAP1
0x6aa JUMP
---
0x6a7: JUMPDEST 
0x6aa: JUMP 0x5f6
---
Entry stack: [V10, 0x47a, V143, 0x2, V609, V611, 0x2, V611, 0x5f6, V619, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V10, 0x47a, V143, 0x2, V609, V611, 0x2, V611, V619]

================================

Block 0x6ab
[0x6ab:0x6bd]
---
Predecessors: [0x21f]
Successors: [0x6be, 0x6ec]
---
0x6ab JUMPDEST
0x6ac PUSH1 0x1
0x6ae SLOAD
0x6af PUSH1 0xb0
0x6b1 PUSH1 0x2
0x6b3 EXP
0x6b4 SWAP1
0x6b5 DIV
0x6b6 PUSH1 0xff
0x6b8 AND
0x6b9 DUP1
0x6ba PUSH2 0x6ec
0x6bd JUMPI
---
0x6ab: JUMPDEST 
0x6ac: V692 = 0x1
0x6ae: V693 = S[0x1]
0x6af: V694 = 0xb0
0x6b1: V695 = 0x2
0x6b3: V696 = EXP 0x2 0xb0
0x6b5: V697 = DIV V693 0x100000000000000000000000000000000000000000000
0x6b6: V698 = 0xff
0x6b8: V699 = AND 0xff V697
0x6ba: V700 = 0x6ec
0x6bd: JUMPI 0x6ec V699
---
Entry stack: [V10, 0x47a, V188, V190, 0x0]
Stack pops: 0
Stack additions: [V699]
Exit stack: [V10, 0x47a, V188, V190, 0x0, V699]

================================

Block 0x6be
[0x6be:0x6dc]
---
Predecessors: [0x6ab]
Successors: [0x6dd, 0x6ec]
---
0x6be POP
0x6bf PUSH1 0x0
0x6c1 SLOAD
0x6c2 PUSH2 0x100
0x6c5 SWAP1
0x6c6 DIV
0x6c7 PUSH1 0x1
0x6c9 PUSH1 0xa0
0x6cb PUSH1 0x2
0x6cd EXP
0x6ce SUB
0x6cf SWAP1
0x6d0 DUP2
0x6d1 AND
0x6d2 CALLER
0x6d3 SWAP1
0x6d4 SWAP2
0x6d5 AND
0x6d6 EQ
0x6d7 DUP1
0x6d8 ISZERO
0x6d9 PUSH2 0x6ec
0x6dc JUMPI
---
0x6bf: V701 = 0x0
0x6c1: V702 = S[0x0]
0x6c2: V703 = 0x100
0x6c6: V704 = DIV V702 0x100
0x6c7: V705 = 0x1
0x6c9: V706 = 0xa0
0x6cb: V707 = 0x2
0x6cd: V708 = EXP 0x2 0xa0
0x6ce: V709 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6d1: V710 = AND 0xffffffffffffffffffffffffffffffffffffffff V704
0x6d2: V711 = CALLER
0x6d5: V712 = AND 0xffffffffffffffffffffffffffffffffffffffff V711
0x6d6: V713 = EQ V712 V710
0x6d8: V714 = ISZERO V713
0x6d9: V715 = 0x6ec
0x6dc: JUMPI 0x6ec V714
---
Entry stack: [V10, 0x47a, V188, V190, 0x0, V699]
Stack pops: 1
Stack additions: [V713]
Exit stack: [V10, 0x47a, V188, V190, 0x0, V713]

================================

Block 0x6dd
[0x6dd:0x6eb]
---
Predecessors: [0x6be]
Successors: [0x6ec]
---
0x6dd POP
0x6de PUSH1 0x1
0x6e0 SLOAD
0x6e1 PUSH1 0xa8
0x6e3 PUSH1 0x2
0x6e5 EXP
0x6e6 SWAP1
0x6e7 DIV
0x6e8 PUSH1 0xff
0x6ea AND
0x6eb ISZERO
---
0x6de: V716 = 0x1
0x6e0: V717 = S[0x1]
0x6e1: V718 = 0xa8
0x6e3: V719 = 0x2
0x6e5: V720 = EXP 0x2 0xa8
0x6e7: V721 = DIV V717 0x1000000000000000000000000000000000000000000
0x6e8: V722 = 0xff
0x6ea: V723 = AND 0xff V721
0x6eb: V724 = ISZERO V723
---
Entry stack: [V10, 0x47a, V188, V190, 0x0, V713]
Stack pops: 1
Stack additions: [V724]
Exit stack: [V10, 0x47a, V188, V190, 0x0, V724]

================================

Block 0x6ec
[0x6ec:0x6f1]
---
Predecessors: [0x6ab, 0x6be, 0x6dd]
Successors: [0x6f2, 0x71a]
---
0x6ec JUMPDEST
0x6ed DUP1
0x6ee PUSH2 0x71a
0x6f1 JUMPI
---
0x6ec: JUMPDEST 
0x6ee: V725 = 0x71a
0x6f1: JUMPI 0x71a S0
---
Entry stack: [V10, 0x47a, V188, V190, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x47a, V188, V190, 0x0, S0]

================================

Block 0x6f2
[0x6f2:0x70b]
---
Predecessors: [0x6ec]
Successors: [0x70c, 0x71a]
---
0x6f2 POP
0x6f3 PUSH1 0x1
0x6f5 SLOAD
0x6f6 PUSH1 0x1
0x6f8 PUSH1 0xa0
0x6fa PUSH1 0x2
0x6fc EXP
0x6fd SUB
0x6fe SWAP1
0x6ff DUP2
0x700 AND
0x701 CALLER
0x702 SWAP1
0x703 SWAP2
0x704 AND
0x705 EQ
0x706 DUP1
0x707 ISZERO
0x708 PUSH2 0x71a
0x70b JUMPI
---
0x6f3: V726 = 0x1
0x6f5: V727 = S[0x1]
0x6f6: V728 = 0x1
0x6f8: V729 = 0xa0
0x6fa: V730 = 0x2
0x6fc: V731 = EXP 0x2 0xa0
0x6fd: V732 = SUB 0x10000000000000000000000000000000000000000 0x1
0x700: V733 = AND 0xffffffffffffffffffffffffffffffffffffffff V727
0x701: V734 = CALLER
0x704: V735 = AND 0xffffffffffffffffffffffffffffffffffffffff V734
0x705: V736 = EQ V735 V733
0x707: V737 = ISZERO V736
0x708: V738 = 0x71a
0x70b: JUMPI 0x71a V737
---
Entry stack: [V10, 0x47a, V188, V190, 0x0, S0]
Stack pops: 1
Stack additions: [V736]
Exit stack: [V10, 0x47a, V188, V190, 0x0, V736]

================================

Block 0x70c
[0x70c:0x719]
---
Predecessors: [0x6f2]
Successors: [0x71a]
---
0x70c POP
0x70d PUSH1 0x1
0x70f SLOAD
0x710 PUSH1 0xa8
0x712 PUSH1 0x2
0x714 EXP
0x715 SWAP1
0x716 DIV
0x717 PUSH1 0xff
0x719 AND
---
0x70d: V739 = 0x1
0x70f: V740 = S[0x1]
0x710: V741 = 0xa8
0x712: V742 = 0x2
0x714: V743 = EXP 0x2 0xa8
0x716: V744 = DIV V740 0x1000000000000000000000000000000000000000000
0x717: V745 = 0xff
0x719: V746 = AND 0xff V744
---
Entry stack: [V10, 0x47a, V188, V190, 0x0, V736]
Stack pops: 1
Stack additions: [V746]
Exit stack: [V10, 0x47a, V188, V190, 0x0, V746]

================================

Block 0x71a
[0x71a:0x71f]
---
Predecessors: [0x6ec, 0x6f2, 0x70c]
Successors: [0x720, 0x724]
---
0x71a JUMPDEST
0x71b ISZERO
0x71c PUSH2 0x724
0x71f JUMPI
---
0x71a: JUMPDEST 
0x71b: V747 = ISZERO S0
0x71c: V748 = 0x724
0x71f: JUMPI 0x724 V747
---
Entry stack: [V10, 0x47a, V188, V190, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x47a, V188, V190, 0x0]

================================

Block 0x720
[0x720:0x723]
---
Predecessors: [0x71a]
Successors: []
---
0x720 PUSH2 0x2
0x723 JUMP
---
0x720: V749 = 0x2
0x723: THROW 
---
Entry stack: [V10, 0x47a, V188, V190, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x47a, V188, V190, 0x0]

================================

Block 0x724
[0x724:0x73a]
---
Predecessors: [0x71a]
Successors: [0x73b, 0x749]
---
0x724 JUMPDEST
0x725 PUSH1 0x0
0x727 SLOAD
0x728 DUP4
0x729 SWAP1
0x72a DUP4
0x72b SWAP1
0x72c PUSH1 0xff
0x72e SWAP1
0x72f DUP2
0x730 AND
0x731 SWAP1
0x732 DUP4
0x733 AND
0x734 LT
0x735 ISZERO
0x736 DUP1
0x737 PUSH2 0x749
0x73a JUMPI
---
0x724: JUMPDEST 
0x725: V750 = 0x0
0x727: V751 = S[0x0]
0x72c: V752 = 0xff
0x730: V753 = AND 0xff V751
0x733: V754 = AND V188 0xff
0x734: V755 = LT V754 V753
0x735: V756 = ISZERO V755
0x737: V757 = 0x749
0x73a: JUMPI 0x749 V756
---
Entry stack: [V10, 0x47a, V188, V190, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, S2, S1, V756]
Exit stack: [V10, 0x47a, V188, V190, 0x0, V188, V190, V756]

================================

Block 0x73b
[0x73b:0x748]
---
Predecessors: [0x724]
Successors: [0x749]
---
0x73b POP
0x73c PUSH1 0x0
0x73e SLOAD
0x73f PUSH1 0xff
0x741 SWAP1
0x742 DUP2
0x743 AND
0x744 SWAP1
0x745 DUP3
0x746 AND
0x747 LT
0x748 ISZERO
---
0x73c: V758 = 0x0
0x73e: V759 = S[0x0]
0x73f: V760 = 0xff
0x743: V761 = AND 0xff V759
0x746: V762 = AND V190 0xff
0x747: V763 = LT V762 V761
0x748: V764 = ISZERO V763
---
Entry stack: [V10, 0x47a, V188, V190, 0x0, V188, V190, V756]
Stack pops: 2
Stack additions: [S1, V764]
Exit stack: [V10, 0x47a, V188, V190, 0x0, V188, V190, V764]

================================

Block 0x749
[0x749:0x74e]
---
Predecessors: [0x724, 0x73b]
Successors: [0x74f, 0x753]
---
0x749 JUMPDEST
0x74a ISZERO
0x74b PUSH2 0x753
0x74e JUMPI
---
0x749: JUMPDEST 
0x74a: V765 = ISZERO S0
0x74b: V766 = 0x753
0x74e: JUMPI 0x753 V765
---
Entry stack: [V10, 0x47a, V188, V190, 0x0, V188, V190, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x47a, V188, V190, 0x0, V188, V190]

================================

Block 0x74f
[0x74f:0x752]
---
Predecessors: [0x749]
Successors: []
---
0x74f PUSH2 0x2
0x752 JUMP
---
0x74f: V767 = 0x2
0x752: THROW 
---
Entry stack: [V10, 0x47a, V188, V190, 0x0, V188, V190]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x47a, V188, V190, 0x0, V188, V190]

================================

Block 0x753
[0x753:0x785]
---
Predecessors: [0x749]
Successors: [0x786, 0x78e]
---
0x753 JUMPDEST
0x754 PUSH1 0x1
0x756 DUP1
0x757 SLOAD
0x758 PUSH1 0xb0
0x75a PUSH1 0x2
0x75c EXP
0x75d PUSH1 0xff
0x75f MUL
0x760 NOT
0x761 AND
0x762 PUSH1 0xb0
0x764 PUSH1 0x2
0x766 EXP
0x767 OR
0x768 SWAP1
0x769 SSTORE
0x76a PUSH1 0x0
0x76c SLOAD
0x76d CALLER
0x76e PUSH1 0x1
0x770 PUSH1 0xa0
0x772 PUSH1 0x2
0x774 EXP
0x775 SUB
0x776 SWAP1
0x777 DUP2
0x778 AND
0x779 PUSH2 0x100
0x77c SWAP1
0x77d SWAP3
0x77e DIV
0x77f AND
0x780 EQ
0x781 ISZERO
0x782 PUSH2 0x78e
0x785 JUMPI
---
0x753: JUMPDEST 
0x754: V768 = 0x1
0x757: V769 = S[0x1]
0x758: V770 = 0xb0
0x75a: V771 = 0x2
0x75c: V772 = EXP 0x2 0xb0
0x75d: V773 = 0xff
0x75f: V774 = MUL 0xff 0x100000000000000000000000000000000000000000000
0x760: V775 = NOT 0xff00000000000000000000000000000000000000000000
0x761: V776 = AND 0xffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffff V769
0x762: V777 = 0xb0
0x764: V778 = 0x2
0x766: V779 = EXP 0x2 0xb0
0x767: V780 = OR 0x100000000000000000000000000000000000000000000 V776
0x769: S[0x1] = V780
0x76a: V781 = 0x0
0x76c: V782 = S[0x0]
0x76d: V783 = CALLER
0x76e: V784 = 0x1
0x770: V785 = 0xa0
0x772: V786 = 0x2
0x774: V787 = EXP 0x2 0xa0
0x775: V788 = SUB 0x10000000000000000000000000000000000000000 0x1
0x778: V789 = AND 0xffffffffffffffffffffffffffffffffffffffff V783
0x779: V790 = 0x100
0x77e: V791 = DIV V782 0x100
0x77f: V792 = AND V791 0xffffffffffffffffffffffffffffffffffffffff
0x780: V793 = EQ V792 V789
0x781: V794 = ISZERO V793
0x782: V795 = 0x78e
0x785: JUMPI 0x78e V794
---
Entry stack: [V10, 0x47a, V188, V190, 0x0, V188, V190]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x47a, V188, V190, 0x0, V188, V190]

================================

Block 0x786
[0x786:0x78d]
---
Predecessors: [0x753]
Successors: [0x793]
---
0x786 PUSH1 0x1
0x788 SWAP3
0x789 POP
0x78a PUSH2 0x793
0x78d JUMP
---
0x786: V796 = 0x1
0x78a: V797 = 0x793
0x78d: JUMP 0x793
---
Entry stack: [V10, 0x47a, V188, V190, 0x0, V188, V190]
Stack pops: 3
Stack additions: [0x1, S1, S0]
Exit stack: [V10, 0x47a, V188, V190, 0x1, V188, V190]

================================

Block 0x78e
[0x78e:0x792]
---
Predecessors: [0x753]
Successors: [0x793]
---
0x78e JUMPDEST
0x78f PUSH1 0x2
0x791 SWAP3
0x792 POP
---
0x78e: JUMPDEST 
0x78f: V798 = 0x2
---
Entry stack: [V10, 0x47a, V188, V190, 0x0, V188, V190]
Stack pops: 3
Stack additions: [0x2, S1, S0]
Exit stack: [V10, 0x47a, V188, V190, 0x2, V188, V190]

================================

Block 0x793
[0x793:0x7d9]
---
Predecessors: [0x786, 0x78e]
Successors: [0x47a]
---
0x793 JUMPDEST
0x794 POP
0x795 POP
0x796 PUSH1 0x40
0x798 DUP1
0x799 MLOAD
0x79a PUSH1 0x60
0x79c DUP2
0x79d ADD
0x79e DUP3
0x79f MSTORE
0x7a0 DUP5
0x7a1 DUP2
0x7a2 MSTORE
0x7a3 PUSH1 0x20
0x7a5 DUP2
0x7a6 ADD
0x7a7 DUP5
0x7a8 SWAP1
0x7a9 MSTORE
0x7aa ADD
0x7ab DUP2
0x7ac SWAP1
0x7ad MSTORE
0x7ae PUSH1 0x3
0x7b0 DUP1
0x7b1 SLOAD
0x7b2 PUSH1 0xff
0x7b4 NOT
0x7b5 AND
0x7b6 SWAP1
0x7b7 SWAP4
0x7b8 OR
0x7b9 PUSH2 0xff00
0x7bc NOT
0x7bd AND
0x7be PUSH2 0x100
0x7c1 SWAP3
0x7c2 SWAP1
0x7c3 SWAP3
0x7c4 MUL
0x7c5 SWAP2
0x7c6 SWAP1
0x7c7 SWAP2
0x7c8 OR
0x7c9 PUSH3 0xff0000
0x7cd NOT
0x7ce AND
0x7cf PUSH3 0x10000
0x7d3 SWAP1
0x7d4 SWAP2
0x7d5 MUL
0x7d6 OR
0x7d7 SWAP1
0x7d8 SSTORE
0x7d9 JUMP
---
0x793: JUMPDEST 
0x796: V799 = 0x40
0x799: V800 = M[0x40]
0x79a: V801 = 0x60
0x79d: V802 = ADD V800 0x60
0x79f: M[0x40] = V802
0x7a2: M[V800] = V188
0x7a3: V803 = 0x20
0x7a6: V804 = ADD V800 0x20
0x7a9: M[V804] = V190
0x7aa: V805 = ADD V800 0x40
0x7ad: M[V805] = {0x1, 0x2}
0x7ae: V806 = 0x3
0x7b1: V807 = S[0x3]
0x7b2: V808 = 0xff
0x7b4: V809 = NOT 0xff
0x7b5: V810 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V807
0x7b8: V811 = OR V188 V810
0x7b9: V812 = 0xff00
0x7bc: V813 = NOT 0xff00
0x7bd: V814 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V811
0x7be: V815 = 0x100
0x7c4: V816 = MUL 0x100 V190
0x7c8: V817 = OR V816 V814
0x7c9: V818 = 0xff0000
0x7cd: V819 = NOT 0xff0000
0x7ce: V820 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff V817
0x7cf: V821 = 0x10000
0x7d5: V822 = MUL {0x1, 0x2} 0x10000
0x7d6: V823 = OR V822 V820
0x7d8: S[0x3] = V823
0x7d9: JUMP 0x47a
---
Entry stack: [V10, 0x47a, V188, V190, {0x1, 0x2}, V188, V190]
Stack pops: 6
Stack additions: []
Exit stack: [V10]

================================

Block 0x7da
[0x7da:0x7ec]
---
Predecessors: [0x2b4]
Successors: [0x7ed, 0x81b]
---
0x7da JUMPDEST
0x7db PUSH1 0x1
0x7dd SLOAD
0x7de PUSH1 0xb0
0x7e0 PUSH1 0x2
0x7e2 EXP
0x7e3 SWAP1
0x7e4 DIV
0x7e5 PUSH1 0xff
0x7e7 AND
0x7e8 DUP1
0x7e9 PUSH2 0x81b
0x7ec JUMPI
---
0x7da: JUMPDEST 
0x7db: V824 = 0x1
0x7dd: V825 = S[0x1]
0x7de: V826 = 0xb0
0x7e0: V827 = 0x2
0x7e2: V828 = EXP 0x2 0xb0
0x7e4: V829 = DIV V825 0x100000000000000000000000000000000000000000000
0x7e5: V830 = 0xff
0x7e7: V831 = AND 0xff V829
0x7e9: V832 = 0x81b
0x7ec: JUMPI 0x81b V831
---
Entry stack: [V10, 0x47a]
Stack pops: 0
Stack additions: [V831]
Exit stack: [V10, 0x47a, V831]

================================

Block 0x7ed
[0x7ed:0x80b]
---
Predecessors: [0x7da]
Successors: [0x80c, 0x81b]
---
0x7ed POP
0x7ee PUSH1 0x0
0x7f0 SLOAD
0x7f1 PUSH2 0x100
0x7f4 SWAP1
0x7f5 DIV
0x7f6 PUSH1 0x1
0x7f8 PUSH1 0xa0
0x7fa PUSH1 0x2
0x7fc EXP
0x7fd SUB
0x7fe SWAP1
0x7ff DUP2
0x800 AND
0x801 CALLER
0x802 SWAP1
0x803 SWAP2
0x804 AND
0x805 EQ
0x806 DUP1
0x807 ISZERO
0x808 PUSH2 0x81b
0x80b JUMPI
---
0x7ee: V833 = 0x0
0x7f0: V834 = S[0x0]
0x7f1: V835 = 0x100
0x7f5: V836 = DIV V834 0x100
0x7f6: V837 = 0x1
0x7f8: V838 = 0xa0
0x7fa: V839 = 0x2
0x7fc: V840 = EXP 0x2 0xa0
0x7fd: V841 = SUB 0x10000000000000000000000000000000000000000 0x1
0x800: V842 = AND 0xffffffffffffffffffffffffffffffffffffffff V836
0x801: V843 = CALLER
0x804: V844 = AND 0xffffffffffffffffffffffffffffffffffffffff V843
0x805: V845 = EQ V844 V842
0x807: V846 = ISZERO V845
0x808: V847 = 0x81b
0x80b: JUMPI 0x81b V846
---
Entry stack: [V10, 0x47a, V831]
Stack pops: 1
Stack additions: [V845]
Exit stack: [V10, 0x47a, V845]

================================

Block 0x80c
[0x80c:0x81a]
---
Predecessors: [0x7ed]
Successors: [0x81b]
---
0x80c POP
0x80d PUSH1 0x1
0x80f SLOAD
0x810 PUSH1 0xa8
0x812 PUSH1 0x2
0x814 EXP
0x815 SWAP1
0x816 DIV
0x817 PUSH1 0xff
0x819 AND
0x81a ISZERO
---
0x80d: V848 = 0x1
0x80f: V849 = S[0x1]
0x810: V850 = 0xa8
0x812: V851 = 0x2
0x814: V852 = EXP 0x2 0xa8
0x816: V853 = DIV V849 0x1000000000000000000000000000000000000000000
0x817: V854 = 0xff
0x819: V855 = AND 0xff V853
0x81a: V856 = ISZERO V855
---
Entry stack: [V10, 0x47a, V845]
Stack pops: 1
Stack additions: [V856]
Exit stack: [V10, 0x47a, V856]

================================

Block 0x81b
[0x81b:0x820]
---
Predecessors: [0x7da, 0x7ed, 0x80c]
Successors: [0x821, 0x849]
---
0x81b JUMPDEST
0x81c DUP1
0x81d PUSH2 0x849
0x820 JUMPI
---
0x81b: JUMPDEST 
0x81d: V857 = 0x849
0x820: JUMPI 0x849 S0
---
Entry stack: [V10, 0x47a, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x47a, S0]

================================

Block 0x821
[0x821:0x83a]
---
Predecessors: [0x81b]
Successors: [0x83b, 0x849]
---
0x821 POP
0x822 PUSH1 0x1
0x824 SLOAD
0x825 PUSH1 0x1
0x827 PUSH1 0xa0
0x829 PUSH1 0x2
0x82b EXP
0x82c SUB
0x82d SWAP1
0x82e DUP2
0x82f AND
0x830 CALLER
0x831 SWAP1
0x832 SWAP2
0x833 AND
0x834 EQ
0x835 DUP1
0x836 ISZERO
0x837 PUSH2 0x849
0x83a JUMPI
---
0x822: V858 = 0x1
0x824: V859 = S[0x1]
0x825: V860 = 0x1
0x827: V861 = 0xa0
0x829: V862 = 0x2
0x82b: V863 = EXP 0x2 0xa0
0x82c: V864 = SUB 0x10000000000000000000000000000000000000000 0x1
0x82f: V865 = AND 0xffffffffffffffffffffffffffffffffffffffff V859
0x830: V866 = CALLER
0x833: V867 = AND 0xffffffffffffffffffffffffffffffffffffffff V866
0x834: V868 = EQ V867 V865
0x836: V869 = ISZERO V868
0x837: V870 = 0x849
0x83a: JUMPI 0x849 V869
---
Entry stack: [V10, 0x47a, S0]
Stack pops: 1
Stack additions: [V868]
Exit stack: [V10, 0x47a, V868]

================================

Block 0x83b
[0x83b:0x848]
---
Predecessors: [0x821]
Successors: [0x849]
---
0x83b POP
0x83c PUSH1 0x1
0x83e SLOAD
0x83f PUSH1 0xa8
0x841 PUSH1 0x2
0x843 EXP
0x844 SWAP1
0x845 DIV
0x846 PUSH1 0xff
0x848 AND
---
0x83c: V871 = 0x1
0x83e: V872 = S[0x1]
0x83f: V873 = 0xa8
0x841: V874 = 0x2
0x843: V875 = EXP 0x2 0xa8
0x845: V876 = DIV V872 0x1000000000000000000000000000000000000000000
0x846: V877 = 0xff
0x848: V878 = AND 0xff V876
---
Entry stack: [V10, 0x47a, V868]
Stack pops: 1
Stack additions: [V878]
Exit stack: [V10, 0x47a, V878]

================================

Block 0x849
[0x849:0x84e]
---
Predecessors: [0x81b, 0x821, 0x83b]
Successors: [0x84f, 0x853]
---
0x849 JUMPDEST
0x84a ISZERO
0x84b PUSH2 0x853
0x84e JUMPI
---
0x849: JUMPDEST 
0x84a: V879 = ISZERO S0
0x84b: V880 = 0x853
0x84e: JUMPI 0x853 V879
---
Entry stack: [V10, 0x47a, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x47a]

================================

Block 0x84f
[0x84f:0x852]
---
Predecessors: [0x849]
Successors: []
---
0x84f PUSH2 0x2
0x852 JUMP
---
0x84f: V881 = 0x2
0x852: THROW 
---
Entry stack: [V10, 0x47a]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x47a]

================================

Block 0x853
[0x853:0x88b]
---
Predecessors: [0x849]
Successors: [0x47a]
---
0x853 JUMPDEST
0x854 PUSH1 0x1
0x856 DUP1
0x857 SLOAD
0x858 PUSH24 0xff0000000000000000000000000000000000000000000000
0x871 NOT
0x872 AND
0x873 PUSH1 0xb8
0x875 PUSH1 0x2
0x877 EXP
0x878 OR
0x879 PUSH1 0xb0
0x87b PUSH1 0x2
0x87d EXP
0x87e PUSH1 0xff
0x880 MUL
0x881 NOT
0x882 AND
0x883 PUSH1 0xb0
0x885 PUSH1 0x2
0x887 EXP
0x888 OR
0x889 SWAP1
0x88a SSTORE
0x88b JUMP
---
0x853: JUMPDEST 
0x854: V882 = 0x1
0x857: V883 = S[0x1]
0x858: V884 = 0xff0000000000000000000000000000000000000000000000
0x871: V885 = NOT 0xff0000000000000000000000000000000000000000000000
0x872: V886 = AND 0xffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffff V883
0x873: V887 = 0xb8
0x875: V888 = 0x2
0x877: V889 = EXP 0x2 0xb8
0x878: V890 = OR 0x10000000000000000000000000000000000000000000000 V886
0x879: V891 = 0xb0
0x87b: V892 = 0x2
0x87d: V893 = EXP 0x2 0xb0
0x87e: V894 = 0xff
0x880: V895 = MUL 0xff 0x100000000000000000000000000000000000000000000
0x881: V896 = NOT 0xff00000000000000000000000000000000000000000000
0x882: V897 = AND 0xffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffff V890
0x883: V898 = 0xb0
0x885: V899 = 0x2
0x887: V900 = EXP 0x2 0xb0
0x888: V901 = OR 0x100000000000000000000000000000000000000000000 V897
0x88a: S[0x1] = V901
0x88b: JUMP 0x47a
---
Entry stack: [V10, 0x47a]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x88c
[0x88c:0x89f]
---
Predecessors: [0x2fe]
Successors: [0x8a0, 0x8cd]
---
0x88c JUMPDEST
0x88d PUSH1 0x1
0x88f SLOAD
0x890 PUSH1 0xb0
0x892 PUSH1 0x2
0x894 EXP
0x895 SWAP1
0x896 DIV
0x897 PUSH1 0xff
0x899 AND
0x89a ISZERO
0x89b DUP1
0x89c PUSH2 0x8cd
0x89f JUMPI
---
0x88c: JUMPDEST 
0x88d: V902 = 0x1
0x88f: V903 = S[0x1]
0x890: V904 = 0xb0
0x892: V905 = 0x2
0x894: V906 = EXP 0x2 0xb0
0x896: V907 = DIV V903 0x100000000000000000000000000000000000000000000
0x897: V908 = 0xff
0x899: V909 = AND 0xff V907
0x89a: V910 = ISZERO V909
0x89c: V911 = 0x8cd
0x89f: JUMPI 0x8cd V910
---
Entry stack: [V10, 0x47a, V297]
Stack pops: 0
Stack additions: [V910]
Exit stack: [V10, 0x47a, V297, V910]

================================

Block 0x8a0
[0x8a0:0x8be]
---
Predecessors: [0x88c]
Successors: [0x8bf, 0x8cd]
---
0x8a0 POP
0x8a1 PUSH1 0x0
0x8a3 SLOAD
0x8a4 PUSH2 0x100
0x8a7 SWAP1
0x8a8 DIV
0x8a9 PUSH1 0x1
0x8ab PUSH1 0xa0
0x8ad PUSH1 0x2
0x8af EXP
0x8b0 SUB
0x8b1 SWAP1
0x8b2 DUP2
0x8b3 AND
0x8b4 CALLER
0x8b5 SWAP1
0x8b6 SWAP2
0x8b7 AND
0x8b8 EQ
0x8b9 DUP1
0x8ba ISZERO
0x8bb PUSH2 0x8cd
0x8be JUMPI
---
0x8a1: V912 = 0x0
0x8a3: V913 = S[0x0]
0x8a4: V914 = 0x100
0x8a8: V915 = DIV V913 0x100
0x8a9: V916 = 0x1
0x8ab: V917 = 0xa0
0x8ad: V918 = 0x2
0x8af: V919 = EXP 0x2 0xa0
0x8b0: V920 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8b3: V921 = AND 0xffffffffffffffffffffffffffffffffffffffff V915
0x8b4: V922 = CALLER
0x8b7: V923 = AND 0xffffffffffffffffffffffffffffffffffffffff V922
0x8b8: V924 = EQ V923 V921
0x8ba: V925 = ISZERO V924
0x8bb: V926 = 0x8cd
0x8be: JUMPI 0x8cd V925
---
Entry stack: [V10, 0x47a, V297, V910]
Stack pops: 1
Stack additions: [V924]
Exit stack: [V10, 0x47a, V297, V924]

================================

Block 0x8bf
[0x8bf:0x8cc]
---
Predecessors: [0x8a0]
Successors: [0x8cd]
---
0x8bf POP
0x8c0 PUSH1 0x1
0x8c2 SLOAD
0x8c3 PUSH1 0xa8
0x8c5 PUSH1 0x2
0x8c7 EXP
0x8c8 SWAP1
0x8c9 DIV
0x8ca PUSH1 0xff
0x8cc AND
---
0x8c0: V927 = 0x1
0x8c2: V928 = S[0x1]
0x8c3: V929 = 0xa8
0x8c5: V930 = 0x2
0x8c7: V931 = EXP 0x2 0xa8
0x8c9: V932 = DIV V928 0x1000000000000000000000000000000000000000000
0x8ca: V933 = 0xff
0x8cc: V934 = AND 0xff V932
---
Entry stack: [V10, 0x47a, V297, V924]
Stack pops: 1
Stack additions: [V934]
Exit stack: [V10, 0x47a, V297, V934]

================================

Block 0x8cd
[0x8cd:0x8d2]
---
Predecessors: [0x88c, 0x8a0, 0x8bf]
Successors: [0x8d3, 0x8fc]
---
0x8cd JUMPDEST
0x8ce DUP1
0x8cf PUSH2 0x8fc
0x8d2 JUMPI
---
0x8cd: JUMPDEST 
0x8cf: V935 = 0x8fc
0x8d2: JUMPI 0x8fc S0
---
Entry stack: [V10, 0x47a, V297, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x47a, V297, S0]

================================

Block 0x8d3
[0x8d3:0x8ec]
---
Predecessors: [0x8cd]
Successors: [0x8ed, 0x8fc]
---
0x8d3 POP
0x8d4 PUSH1 0x1
0x8d6 SLOAD
0x8d7 PUSH1 0x1
0x8d9 PUSH1 0xa0
0x8db PUSH1 0x2
0x8dd EXP
0x8de SUB
0x8df SWAP1
0x8e0 DUP2
0x8e1 AND
0x8e2 CALLER
0x8e3 SWAP1
0x8e4 SWAP2
0x8e5 AND
0x8e6 EQ
0x8e7 DUP1
0x8e8 ISZERO
0x8e9 PUSH2 0x8fc
0x8ec JUMPI
---
0x8d4: V936 = 0x1
0x8d6: V937 = S[0x1]
0x8d7: V938 = 0x1
0x8d9: V939 = 0xa0
0x8db: V940 = 0x2
0x8dd: V941 = EXP 0x2 0xa0
0x8de: V942 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8e1: V943 = AND 0xffffffffffffffffffffffffffffffffffffffff V937
0x8e2: V944 = CALLER
0x8e5: V945 = AND 0xffffffffffffffffffffffffffffffffffffffff V944
0x8e6: V946 = EQ V945 V943
0x8e8: V947 = ISZERO V946
0x8e9: V948 = 0x8fc
0x8ec: JUMPI 0x8fc V947
---
Entry stack: [V10, 0x47a, V297, S0]
Stack pops: 1
Stack additions: [V946]
Exit stack: [V10, 0x47a, V297, V946]

================================

Block 0x8ed
[0x8ed:0x8fb]
---
Predecessors: [0x8d3]
Successors: [0x8fc]
---
0x8ed POP
0x8ee PUSH1 0x1
0x8f0 SLOAD
0x8f1 PUSH1 0xa8
0x8f3 PUSH1 0x2
0x8f5 EXP
0x8f6 SWAP1
0x8f7 DIV
0x8f8 PUSH1 0xff
0x8fa AND
0x8fb ISZERO
---
0x8ee: V949 = 0x1
0x8f0: V950 = S[0x1]
0x8f1: V951 = 0xa8
0x8f3: V952 = 0x2
0x8f5: V953 = EXP 0x2 0xa8
0x8f7: V954 = DIV V950 0x1000000000000000000000000000000000000000000
0x8f8: V955 = 0xff
0x8fa: V956 = AND 0xff V954
0x8fb: V957 = ISZERO V956
---
Entry stack: [V10, 0x47a, V297, V946]
Stack pops: 1
Stack additions: [V957]
Exit stack: [V10, 0x47a, V297, V957]

================================

Block 0x8fc
[0x8fc:0x901]
---
Predecessors: [0x8cd, 0x8d3, 0x8ed]
Successors: [0x902, 0x906]
---
0x8fc JUMPDEST
0x8fd ISZERO
0x8fe PUSH2 0x906
0x901 JUMPI
---
0x8fc: JUMPDEST 
0x8fd: V958 = ISZERO S0
0x8fe: V959 = 0x906
0x901: JUMPI 0x906 V958
---
Entry stack: [V10, 0x47a, V297, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x47a, V297]

================================

Block 0x902
[0x902:0x905]
---
Predecessors: [0x8fc]
Successors: []
---
0x902 PUSH2 0x2
0x905 JUMP
---
0x902: V960 = 0x2
0x905: THROW 
---
Entry stack: [V10, 0x47a, V297]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x47a, V297]

================================

Block 0x906
[0x906:0x914]
---
Predecessors: [0x8fc]
Successors: [0x915, 0x919]
---
0x906 JUMPDEST
0x907 PUSH1 0x4
0x909 SLOAD
0x90a PUSH1 0xff
0x90c AND
0x90d PUSH1 0x0
0x90f EQ
0x910 ISZERO
0x911 PUSH2 0x919
0x914 JUMPI
---
0x906: JUMPDEST 
0x907: V961 = 0x4
0x909: V962 = S[0x4]
0x90a: V963 = 0xff
0x90c: V964 = AND 0xff V962
0x90d: V965 = 0x0
0x90f: V966 = EQ 0x0 V964
0x910: V967 = ISZERO V966
0x911: V968 = 0x919
0x914: JUMPI 0x919 V967
---
Entry stack: [V10, 0x47a, V297]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x47a, V297]

================================

Block 0x915
[0x915:0x918]
---
Predecessors: [0x906]
Successors: [0x6a4]
---
0x915 PUSH2 0x6a4
0x918 JUMP
---
0x915: V969 = 0x6a4
0x918: JUMP 0x6a4
---
Entry stack: [V10, 0x47a, V297]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x47a, V297]

================================

Block 0x919
[0x919:0x920]
---
Predecessors: [0x906]
Successors: [0x921, 0x93f]
---
0x919 JUMPDEST
0x91a DUP1
0x91b ISZERO
0x91c ISZERO
0x91d PUSH2 0x93f
0x920 JUMPI
---
0x919: JUMPDEST 
0x91b: V970 = ISZERO V297
0x91c: V971 = ISZERO V970
0x91d: V972 = 0x93f
0x920: JUMPI 0x93f V971
---
Entry stack: [V10, 0x47a, V297]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x47a, V297]

================================

Block 0x921
[0x921:0x93e]
---
Predecessors: [0x919]
Successors: [0x6a4]
---
0x921 PUSH1 0x4
0x923 DUP1
0x924 SLOAD
0x925 PUSH1 0xff
0x927 NOT
0x928 AND
0x929 SWAP1
0x92a SSTORE
0x92b PUSH1 0x1
0x92d DUP1
0x92e SLOAD
0x92f PUSH1 0xb0
0x931 PUSH1 0x2
0x933 EXP
0x934 PUSH1 0xff
0x936 MUL
0x937 NOT
0x938 AND
0x939 SWAP1
0x93a SSTORE
0x93b PUSH2 0x6a4
0x93e JUMP
---
0x921: V973 = 0x4
0x924: V974 = S[0x4]
0x925: V975 = 0xff
0x927: V976 = NOT 0xff
0x928: V977 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V974
0x92a: S[0x4] = V977
0x92b: V978 = 0x1
0x92e: V979 = S[0x1]
0x92f: V980 = 0xb0
0x931: V981 = 0x2
0x933: V982 = EXP 0x2 0xb0
0x934: V983 = 0xff
0x936: V984 = MUL 0xff 0x100000000000000000000000000000000000000000000
0x937: V985 = NOT 0xff00000000000000000000000000000000000000000000
0x938: V986 = AND 0xffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffff V979
0x93a: S[0x1] = V986
0x93b: V987 = 0x6a4
0x93e: JUMP 0x6a4
---
Entry stack: [V10, 0x47a, V297]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x47a, V297]

================================

Block 0x93f
[0x93f:0x94d]
---
Predecessors: [0x919]
Successors: [0x94e, 0x994]
---
0x93f JUMPDEST
0x940 PUSH1 0x4
0x942 SLOAD
0x943 PUSH1 0xff
0x945 AND
0x946 PUSH1 0x1
0x948 EQ
0x949 ISZERO
0x94a PUSH2 0x994
0x94d JUMPI
---
0x93f: JUMPDEST 
0x940: V988 = 0x4
0x942: V989 = S[0x4]
0x943: V990 = 0xff
0x945: V991 = AND 0xff V989
0x946: V992 = 0x1
0x948: V993 = EQ 0x1 V991
0x949: V994 = ISZERO V993
0x94a: V995 = 0x994
0x94d: JUMPI 0x994 V994
---
Entry stack: [V10, 0x47a, V297]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x47a, V297]

================================

Block 0x94e
[0x94e:0x98f]
---
Predecessors: [0x93f]
Successors: [0x990, 0x9df]
---
0x94e PUSH1 0x0
0x950 SLOAD
0x951 PUSH2 0x100
0x954 SWAP1
0x955 DIV
0x956 PUSH1 0x1
0x958 PUSH1 0xa0
0x95a PUSH1 0x2
0x95c EXP
0x95d SUB
0x95e SWAP1
0x95f DUP2
0x960 AND
0x961 SWAP1
0x962 PUSH2 0x8fc
0x965 SWAP1
0x966 PUSH1 0x4
0x968 SWAP1
0x969 ADDRESS
0x96a AND
0x96b BALANCE
0x96c PUSH1 0x3
0x96e MUL
0x96f PUSH1 0x40
0x971 MLOAD
0x972 SWAP2
0x973 SWAP1
0x974 DIV
0x975 DUP1
0x976 ISZERO
0x977 SWAP1
0x978 SWAP3
0x979 MUL
0x97a SWAP2
0x97b SWAP1
0x97c PUSH1 0x0
0x97e DUP2
0x97f DUP2
0x980 DUP2
0x981 DUP6
0x982 DUP9
0x983 DUP9
0x984 CALL
0x985 SWAP4
0x986 POP
0x987 POP
0x988 POP
0x989 POP
0x98a ISZERO
0x98b ISZERO
0x98c PUSH2 0x9df
0x98f JUMPI
---
0x94e: V996 = 0x0
0x950: V997 = S[0x0]
0x951: V998 = 0x100
0x955: V999 = DIV V997 0x100
0x956: V1000 = 0x1
0x958: V1001 = 0xa0
0x95a: V1002 = 0x2
0x95c: V1003 = EXP 0x2 0xa0
0x95d: V1004 = SUB 0x10000000000000000000000000000000000000000 0x1
0x960: V1005 = AND 0xffffffffffffffffffffffffffffffffffffffff V999
0x962: V1006 = 0x8fc
0x966: V1007 = 0x4
0x969: V1008 = ADDRESS
0x96a: V1009 = AND V1008 0xffffffffffffffffffffffffffffffffffffffff
0x96b: V1010 = BALANCE V1009
0x96c: V1011 = 0x3
0x96e: V1012 = MUL 0x3 V1010
0x96f: V1013 = 0x40
0x971: V1014 = M[0x40]
0x974: V1015 = DIV V1012 0x4
0x976: V1016 = ISZERO V1015
0x979: V1017 = MUL 0x8fc V1016
0x97c: V1018 = 0x0
0x984: V1019 = CALL V1017 V1005 V1015 V1014 0x0 V1014 0x0
0x98a: V1020 = ISZERO V1019
0x98b: V1021 = ISZERO V1020
0x98c: V1022 = 0x9df
0x98f: JUMPI 0x9df V1021
---
Entry stack: [V10, 0x47a, V297]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x47a, V297]

================================

Block 0x990
[0x990:0x993]
---
Predecessors: [0x94e]
Successors: []
---
0x990 PUSH2 0x2
0x993 JUMP
---
0x990: V1023 = 0x2
0x993: THROW 
---
Entry stack: [V10, 0x47a, V297]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x47a, V297]

================================

Block 0x994
[0x994:0x9a2]
---
Predecessors: [0x93f]
Successors: [0x6a4, 0x9a3]
---
0x994 JUMPDEST
0x995 PUSH1 0x4
0x997 SLOAD
0x998 PUSH1 0xff
0x99a AND
0x99b PUSH1 0x2
0x99d EQ
0x99e ISZERO
0x99f PUSH2 0x6a4
0x9a2 JUMPI
---
0x994: JUMPDEST 
0x995: V1024 = 0x4
0x997: V1025 = S[0x4]
0x998: V1026 = 0xff
0x99a: V1027 = AND 0xff V1025
0x99b: V1028 = 0x2
0x99d: V1029 = EQ 0x2 V1027
0x99e: V1030 = ISZERO V1029
0x99f: V1031 = 0x6a4
0x9a2: JUMPI 0x6a4 V1030
---
Entry stack: [V10, 0x47a, V297]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x47a, V297]

================================

Block 0x9a3
[0x9a3:0x9da]
---
Predecessors: [0x994]
Successors: [0x9db, 0x9ed]
---
0x9a3 PUSH1 0x1
0x9a5 SLOAD
0x9a6 PUSH1 0x40
0x9a8 MLOAD
0x9a9 PUSH1 0x1
0x9ab PUSH1 0xa0
0x9ad PUSH1 0x2
0x9af EXP
0x9b0 SUB
0x9b1 SWAP2
0x9b2 DUP3
0x9b3 AND
0x9b4 SWAP2
0x9b5 PUSH1 0x4
0x9b7 ADDRESS
0x9b8 SWAP1
0x9b9 SWAP2
0x9ba AND
0x9bb BALANCE
0x9bc PUSH1 0x3
0x9be MUL
0x9bf DIV
0x9c0 DUP1
0x9c1 ISZERO
0x9c2 PUSH2 0x8fc
0x9c5 MUL
0x9c6 SWAP2
0x9c7 PUSH1 0x0
0x9c9 DUP2
0x9ca DUP2
0x9cb DUP2
0x9cc DUP6
0x9cd DUP9
0x9ce DUP9
0x9cf CALL
0x9d0 SWAP4
0x9d1 POP
0x9d2 POP
0x9d3 POP
0x9d4 POP
0x9d5 ISZERO
0x9d6 ISZERO
0x9d7 PUSH2 0x9ed
0x9da JUMPI
---
0x9a3: V1032 = 0x1
0x9a5: V1033 = S[0x1]
0x9a6: V1034 = 0x40
0x9a8: V1035 = M[0x40]
0x9a9: V1036 = 0x1
0x9ab: V1037 = 0xa0
0x9ad: V1038 = 0x2
0x9af: V1039 = EXP 0x2 0xa0
0x9b0: V1040 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9b3: V1041 = AND 0xffffffffffffffffffffffffffffffffffffffff V1033
0x9b5: V1042 = 0x4
0x9b7: V1043 = ADDRESS
0x9ba: V1044 = AND 0xffffffffffffffffffffffffffffffffffffffff V1043
0x9bb: V1045 = BALANCE V1044
0x9bc: V1046 = 0x3
0x9be: V1047 = MUL 0x3 V1045
0x9bf: V1048 = DIV V1047 0x4
0x9c1: V1049 = ISZERO V1048
0x9c2: V1050 = 0x8fc
0x9c5: V1051 = MUL 0x8fc V1049
0x9c7: V1052 = 0x0
0x9cf: V1053 = CALL V1051 V1041 V1048 V1035 0x0 V1035 0x0
0x9d5: V1054 = ISZERO V1053
0x9d6: V1055 = ISZERO V1054
0x9d7: V1056 = 0x9ed
0x9da: JUMPI 0x9ed V1055
---
Entry stack: [V10, 0x47a, V297]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x47a, V297]

================================

Block 0x9db
[0x9db:0x9de]
---
Predecessors: [0x9a3]
Successors: []
---
0x9db PUSH2 0x2
0x9de JUMP
---
0x9db: V1057 = 0x2
0x9de: THROW 
---
Entry stack: [V10, 0x47a, V297]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x47a, V297]

================================

Block 0x9df
[0x9df:0x9ec]
---
Predecessors: [0x94e, 0xb3c]
Successors: []
---
0x9df JUMPDEST
0x9e0 PUSH1 0x1
0x9e2 SLOAD
0x9e3 PUSH1 0x1
0x9e5 PUSH1 0xa0
0x9e7 PUSH1 0x2
0x9e9 EXP
0x9ea SUB
0x9eb AND
0x9ec SELFDESTRUCT
---
0x9df: JUMPDEST 
0x9e0: V1058 = 0x1
0x9e2: V1059 = S[0x1]
0x9e3: V1060 = 0x1
0x9e5: V1061 = 0xa0
0x9e7: V1062 = 0x2
0x9e9: V1063 = EXP 0x2 0xa0
0x9ea: V1064 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9eb: V1065 = AND 0xffffffffffffffffffffffffffffffffffffffff V1059
0x9ec: SELFDESTRUCT V1065
---
Entry stack: [V10, 0x47a, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x47a, S0]

================================

Block 0x9ed
[0x9ed:0x9ff]
---
Predecessors: [0x9a3]
Successors: []
---
0x9ed JUMPDEST
0x9ee PUSH1 0x0
0x9f0 SLOAD
0x9f1 PUSH2 0x100
0x9f4 SWAP1
0x9f5 DIV
0x9f6 PUSH1 0x1
0x9f8 PUSH1 0xa0
0x9fa PUSH1 0x2
0x9fc EXP
0x9fd SUB
0x9fe AND
0x9ff SELFDESTRUCT
---
0x9ed: JUMPDEST 
0x9ee: V1066 = 0x0
0x9f0: V1067 = S[0x0]
0x9f1: V1068 = 0x100
0x9f5: V1069 = DIV V1067 0x100
0x9f6: V1070 = 0x1
0x9f8: V1071 = 0xa0
0x9fa: V1072 = 0x2
0x9fc: V1073 = EXP 0x2 0xa0
0x9fd: V1074 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9fe: V1075 = AND 0xffffffffffffffffffffffffffffffffffffffff V1069
0x9ff: SELFDESTRUCT V1075
---
Entry stack: [V10, 0x47a, V297]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x47a, V297]

================================

Block 0xa00
[0xa00:0xa0d]
---
Predecessors: [0x30e]
Successors: [0xa0e]
---
0xa00 JUMPDEST
0xa01 PUSH1 0x2
0xa03 DUP1
0xa04 SLOAD
0xa05 DUP6
0xa06 SWAP1
0xa07 DUP2
0xa08 LT
0xa09 ISZERO
0xa0a PUSH2 0x2
0xa0d JUMPI
---
0xa00: JUMPDEST 
0xa01: V1076 = 0x2
0xa04: V1077 = S[0x2]
0xa08: V1078 = LT V332 V1077
0xa09: V1079 = ISZERO V1078
0xa0a: V1080 = 0x2
0xa0d: THROWI V1079
---
Entry stack: [V10, 0x492, V332, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x2, S3]
Exit stack: [V10, 0x492, V332, 0x0, 0x0, 0x0, 0x2, V332]

================================

Block 0xa0e
[0xa0e:0xa44]
---
Predecessors: [0xa00]
Successors: [0xa45]
---
0xa0e DUP2
0xa0f SLOAD
0xa10 PUSH1 0x0
0xa12 DUP4
0xa13 SWAP1
0xa14 MSTORE
0xa15 PUSH32 0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace
0xa36 DUP3
0xa37 ADD
0xa38 SLOAD
0xa39 PUSH1 0xff
0xa3b AND
0xa3c SWAP6
0xa3d POP
0xa3e DUP2
0xa3f LT
0xa40 ISZERO
0xa41 PUSH2 0x2
0xa44 JUMPI
---
0xa0f: V1081 = S[0x2]
0xa10: V1082 = 0x0
0xa14: M[0x0] = 0x2
0xa15: V1083 = 0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace
0xa37: V1084 = ADD V332 0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace
0xa38: V1085 = S[V1084]
0xa39: V1086 = 0xff
0xa3b: V1087 = AND 0xff V1085
0xa3f: V1088 = LT V332 V1081
0xa40: V1089 = ISZERO V1088
0xa41: V1090 = 0x2
0xa44: THROWI V1089
---
Entry stack: [V10, 0x492, V332, 0x0, 0x0, 0x0, 0x2, V332]
Stack pops: 5
Stack additions: [V1087, S3, S2, S1, S0]
Exit stack: [V10, 0x492, V332, V1087, 0x0, 0x0, 0x2, V332]

================================

Block 0xa45
[0xa45:0xa6c]
---
Predecessors: [0xa0e]
Successors: [0xa6d]
---
0xa45 SWAP1
0xa46 PUSH1 0x0
0xa48 MSTORE
0xa49 PUSH1 0x20
0xa4b PUSH1 0x0
0xa4d SHA3
0xa4e SWAP1
0xa4f ADD
0xa50 PUSH1 0x0
0xa52 POP
0xa53 SLOAD
0xa54 PUSH1 0x2
0xa56 DUP1
0xa57 SLOAD
0xa58 PUSH2 0x100
0xa5b SWAP1
0xa5c SWAP3
0xa5d DIV
0xa5e PUSH1 0xff
0xa60 AND
0xa61 SWAP4
0xa62 POP
0xa63 SWAP1
0xa64 DUP6
0xa65 SWAP1
0xa66 DUP2
0xa67 LT
0xa68 ISZERO
0xa69 PUSH2 0x2
0xa6c JUMPI
---
0xa46: V1091 = 0x0
0xa48: M[0x0] = 0x2
0xa49: V1092 = 0x20
0xa4b: V1093 = 0x0
0xa4d: V1094 = SHA3 0x0 0x20
0xa4f: V1095 = ADD V332 V1094
0xa50: V1096 = 0x0
0xa53: V1097 = S[V1095]
0xa54: V1098 = 0x2
0xa57: V1099 = S[0x2]
0xa58: V1100 = 0x100
0xa5d: V1101 = DIV V1097 0x100
0xa5e: V1102 = 0xff
0xa60: V1103 = AND 0xff V1101
0xa67: V1104 = LT V332 V1099
0xa68: V1105 = ISZERO V1104
0xa69: V1106 = 0x2
0xa6c: THROWI V1105
---
Entry stack: [V10, 0x492, V332, V1087, 0x0, 0x0, 0x2, V332]
Stack pops: 6
Stack additions: [S5, S4, V1103, S2, 0x2, S5]
Exit stack: [V10, 0x492, V332, V1087, V1103, 0x0, 0x2, V332]

================================

Block 0xa6d
[0xa6d:0xaa2]
---
Predecessors: [0xa45]
Successors: [0x492]
---
0xa6d POP
0xa6e POP
0xa6f POP
0xa70 PUSH32 0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace
0xa91 SWAP1
0xa92 SWAP3
0xa93 ADD
0xa94 SLOAD
0xa95 SWAP1
0xa96 SWAP3
0xa97 PUSH3 0x10000
0xa9b SWAP1
0xa9c SWAP2
0xa9d DIV
0xa9e PUSH1 0xff
0xaa0 AND
0xaa1 SWAP1
0xaa2 JUMP
---
0xa70: V1107 = 0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace
0xa93: V1108 = ADD V332 0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace
0xa94: V1109 = S[V1108]
0xa97: V1110 = 0x10000
0xa9d: V1111 = DIV V1109 0x10000
0xa9e: V1112 = 0xff
0xaa0: V1113 = AND 0xff V1111
0xaa2: JUMP 0x492
---
Entry stack: [V10, 0x492, V332, V1087, V1103, 0x0, 0x2, V332]
Stack pops: 7
Stack additions: [S4, S3, V1113]
Exit stack: [V10, V1087, V1103, V1113]

================================

Block 0xaa3
[0xaa3:0xab6]
---
Predecessors: [0x3dc]
Successors: [0xab7, 0xae4]
---
0xaa3 JUMPDEST
0xaa4 PUSH1 0x1
0xaa6 SLOAD
0xaa7 PUSH1 0xb0
0xaa9 PUSH1 0x2
0xaab EXP
0xaac SWAP1
0xaad DIV
0xaae PUSH1 0xff
0xab0 AND
0xab1 ISZERO
0xab2 DUP1
0xab3 PUSH2 0xae4
0xab6 JUMPI
---
0xaa3: JUMPDEST 
0xaa4: V1114 = 0x1
0xaa6: V1115 = S[0x1]
0xaa7: V1116 = 0xb0
0xaa9: V1117 = 0x2
0xaab: V1118 = EXP 0x2 0xb0
0xaad: V1119 = DIV V1115 0x100000000000000000000000000000000000000000000
0xaae: V1120 = 0xff
0xab0: V1121 = AND 0xff V1119
0xab1: V1122 = ISZERO V1121
0xab3: V1123 = 0xae4
0xab6: JUMPI 0xae4 V1122
---
Entry stack: [V10, 0x47a, V396]
Stack pops: 0
Stack additions: [V1122]
Exit stack: [V10, 0x47a, V396, V1122]

================================

Block 0xab7
[0xab7:0xad5]
---
Predecessors: [0xaa3]
Successors: [0xad6, 0xae4]
---
0xab7 POP
0xab8 PUSH1 0x0
0xaba SLOAD
0xabb PUSH2 0x100
0xabe SWAP1
0xabf DIV
0xac0 PUSH1 0x1
0xac2 PUSH1 0xa0
0xac4 PUSH1 0x2
0xac6 EXP
0xac7 SUB
0xac8 SWAP1
0xac9 DUP2
0xaca AND
0xacb CALLER
0xacc SWAP1
0xacd SWAP2
0xace AND
0xacf EQ
0xad0 DUP1
0xad1 ISZERO
0xad2 PUSH2 0xae4
0xad5 JUMPI
---
0xab8: V1124 = 0x0
0xaba: V1125 = S[0x0]
0xabb: V1126 = 0x100
0xabf: V1127 = DIV V1125 0x100
0xac0: V1128 = 0x1
0xac2: V1129 = 0xa0
0xac4: V1130 = 0x2
0xac6: V1131 = EXP 0x2 0xa0
0xac7: V1132 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaca: V1133 = AND 0xffffffffffffffffffffffffffffffffffffffff V1127
0xacb: V1134 = CALLER
0xace: V1135 = AND 0xffffffffffffffffffffffffffffffffffffffff V1134
0xacf: V1136 = EQ V1135 V1133
0xad1: V1137 = ISZERO V1136
0xad2: V1138 = 0xae4
0xad5: JUMPI 0xae4 V1137
---
Entry stack: [V10, 0x47a, V396, V1122]
Stack pops: 1
Stack additions: [V1136]
Exit stack: [V10, 0x47a, V396, V1136]

================================

Block 0xad6
[0xad6:0xae3]
---
Predecessors: [0xab7]
Successors: [0xae4]
---
0xad6 POP
0xad7 PUSH1 0x1
0xad9 SLOAD
0xada PUSH1 0xa8
0xadc PUSH1 0x2
0xade EXP
0xadf SWAP1
0xae0 DIV
0xae1 PUSH1 0xff
0xae3 AND
---
0xad7: V1139 = 0x1
0xad9: V1140 = S[0x1]
0xada: V1141 = 0xa8
0xadc: V1142 = 0x2
0xade: V1143 = EXP 0x2 0xa8
0xae0: V1144 = DIV V1140 0x1000000000000000000000000000000000000000000
0xae1: V1145 = 0xff
0xae3: V1146 = AND 0xff V1144
---
Entry stack: [V10, 0x47a, V396, V1136]
Stack pops: 1
Stack additions: [V1146]
Exit stack: [V10, 0x47a, V396, V1146]

================================

Block 0xae4
[0xae4:0xae9]
---
Predecessors: [0xaa3, 0xab7, 0xad6]
Successors: [0xaea, 0xb13]
---
0xae4 JUMPDEST
0xae5 DUP1
0xae6 PUSH2 0xb13
0xae9 JUMPI
---
0xae4: JUMPDEST 
0xae6: V1147 = 0xb13
0xae9: JUMPI 0xb13 S0
---
Entry stack: [V10, 0x47a, V396, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x47a, V396, S0]

================================

Block 0xaea
[0xaea:0xb03]
---
Predecessors: [0xae4]
Successors: [0xb04, 0xb13]
---
0xaea POP
0xaeb PUSH1 0x1
0xaed SLOAD
0xaee PUSH1 0x1
0xaf0 PUSH1 0xa0
0xaf2 PUSH1 0x2
0xaf4 EXP
0xaf5 SUB
0xaf6 SWAP1
0xaf7 DUP2
0xaf8 AND
0xaf9 CALLER
0xafa SWAP1
0xafb SWAP2
0xafc AND
0xafd EQ
0xafe DUP1
0xaff ISZERO
0xb00 PUSH2 0xb13
0xb03 JUMPI
---
0xaeb: V1148 = 0x1
0xaed: V1149 = S[0x1]
0xaee: V1150 = 0x1
0xaf0: V1151 = 0xa0
0xaf2: V1152 = 0x2
0xaf4: V1153 = EXP 0x2 0xa0
0xaf5: V1154 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaf8: V1155 = AND 0xffffffffffffffffffffffffffffffffffffffff V1149
0xaf9: V1156 = CALLER
0xafc: V1157 = AND 0xffffffffffffffffffffffffffffffffffffffff V1156
0xafd: V1158 = EQ V1157 V1155
0xaff: V1159 = ISZERO V1158
0xb00: V1160 = 0xb13
0xb03: JUMPI 0xb13 V1159
---
Entry stack: [V10, 0x47a, V396, S0]
Stack pops: 1
Stack additions: [V1158]
Exit stack: [V10, 0x47a, V396, V1158]

================================

Block 0xb04
[0xb04:0xb12]
---
Predecessors: [0xaea]
Successors: [0xb13]
---
0xb04 POP
0xb05 PUSH1 0x1
0xb07 SLOAD
0xb08 PUSH1 0xa8
0xb0a PUSH1 0x2
0xb0c EXP
0xb0d SWAP1
0xb0e DIV
0xb0f PUSH1 0xff
0xb11 AND
0xb12 ISZERO
---
0xb05: V1161 = 0x1
0xb07: V1162 = S[0x1]
0xb08: V1163 = 0xa8
0xb0a: V1164 = 0x2
0xb0c: V1165 = EXP 0x2 0xa8
0xb0e: V1166 = DIV V1162 0x1000000000000000000000000000000000000000000
0xb0f: V1167 = 0xff
0xb11: V1168 = AND 0xff V1166
0xb12: V1169 = ISZERO V1168
---
Entry stack: [V10, 0x47a, V396, V1158]
Stack pops: 1
Stack additions: [V1169]
Exit stack: [V10, 0x47a, V396, V1169]

================================

Block 0xb13
[0xb13:0xb18]
---
Predecessors: [0xae4, 0xaea, 0xb04]
Successors: [0xb19, 0xb1d]
---
0xb13 JUMPDEST
0xb14 ISZERO
0xb15 PUSH2 0xb1d
0xb18 JUMPI
---
0xb13: JUMPDEST 
0xb14: V1170 = ISZERO S0
0xb15: V1171 = 0xb1d
0xb18: JUMPI 0xb1d V1170
---
Entry stack: [V10, 0x47a, V396, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x47a, V396]

================================

Block 0xb19
[0xb19:0xb1c]
---
Predecessors: [0xb13]
Successors: []
---
0xb19 PUSH2 0x2
0xb1c JUMP
---
0xb19: V1172 = 0x2
0xb1c: THROW 
---
Entry stack: [V10, 0x47a, V396]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x47a, V396]

================================

Block 0xb1d
[0xb1d:0xb30]
---
Predecessors: [0xb13]
Successors: [0xb31, 0xb35]
---
0xb1d JUMPDEST
0xb1e PUSH1 0x1
0xb20 SLOAD
0xb21 PUSH1 0xb8
0xb23 PUSH1 0x2
0xb25 EXP
0xb26 SWAP1
0xb27 DIV
0xb28 PUSH1 0xff
0xb2a AND
0xb2b ISZERO
0xb2c ISZERO
0xb2d PUSH2 0xb35
0xb30 JUMPI
---
0xb1d: JUMPDEST 
0xb1e: V1173 = 0x1
0xb20: V1174 = S[0x1]
0xb21: V1175 = 0xb8
0xb23: V1176 = 0x2
0xb25: V1177 = EXP 0x2 0xb8
0xb27: V1178 = DIV V1174 0x10000000000000000000000000000000000000000000000
0xb28: V1179 = 0xff
0xb2a: V1180 = AND 0xff V1178
0xb2b: V1181 = ISZERO V1180
0xb2c: V1182 = ISZERO V1181
0xb2d: V1183 = 0xb35
0xb30: JUMPI 0xb35 V1182
---
Entry stack: [V10, 0x47a, V396]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x47a, V396]

================================

Block 0xb31
[0xb31:0xb34]
---
Predecessors: [0xb1d]
Successors: [0x6a4]
---
0xb31 PUSH2 0x6a4
0xb34 JUMP
---
0xb31: V1184 = 0x6a4
0xb34: JUMP 0x6a4
---
Entry stack: [V10, 0x47a, V396]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x47a, V396]

================================

Block 0xb35
[0xb35:0xb3b]
---
Predecessors: [0xb1d]
Successors: [0xb3c, 0xb7f]
---
0xb35 JUMPDEST
0xb36 DUP1
0xb37 ISZERO
0xb38 PUSH2 0xb7f
0xb3b JUMPI
---
0xb35: JUMPDEST 
0xb37: V1185 = ISZERO V396
0xb38: V1186 = 0xb7f
0xb3b: JUMPI 0xb7f V1185
---
Entry stack: [V10, 0x47a, V396]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x47a, V396]

================================

Block 0xb3c
[0xb3c:0xb7a]
---
Predecessors: [0xb35]
Successors: [0x9df, 0xb7b]
---
0xb3c PUSH1 0x0
0xb3e SLOAD
0xb3f PUSH2 0x100
0xb42 SWAP1
0xb43 DIV
0xb44 PUSH1 0x1
0xb46 PUSH1 0xa0
0xb48 PUSH1 0x2
0xb4a EXP
0xb4b SUB
0xb4c SWAP1
0xb4d DUP2
0xb4e AND
0xb4f SWAP1
0xb50 PUSH2 0x8fc
0xb53 SWAP1
0xb54 PUSH1 0x2
0xb56 SWAP1
0xb57 ADDRESS
0xb58 AND
0xb59 BALANCE
0xb5a PUSH1 0x40
0xb5c MLOAD
0xb5d SWAP2
0xb5e SWAP1
0xb5f DIV
0xb60 DUP1
0xb61 ISZERO
0xb62 SWAP1
0xb63 SWAP3
0xb64 MUL
0xb65 SWAP2
0xb66 SWAP1
0xb67 PUSH1 0x0
0xb69 DUP2
0xb6a DUP2
0xb6b DUP2
0xb6c DUP6
0xb6d DUP9
0xb6e DUP9
0xb6f CALL
0xb70 SWAP4
0xb71 POP
0xb72 POP
0xb73 POP
0xb74 POP
0xb75 ISZERO
0xb76 ISZERO
0xb77 PUSH2 0x9df
0xb7a JUMPI
---
0xb3c: V1187 = 0x0
0xb3e: V1188 = S[0x0]
0xb3f: V1189 = 0x100
0xb43: V1190 = DIV V1188 0x100
0xb44: V1191 = 0x1
0xb46: V1192 = 0xa0
0xb48: V1193 = 0x2
0xb4a: V1194 = EXP 0x2 0xa0
0xb4b: V1195 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb4e: V1196 = AND 0xffffffffffffffffffffffffffffffffffffffff V1190
0xb50: V1197 = 0x8fc
0xb54: V1198 = 0x2
0xb57: V1199 = ADDRESS
0xb58: V1200 = AND V1199 0xffffffffffffffffffffffffffffffffffffffff
0xb59: V1201 = BALANCE V1200
0xb5a: V1202 = 0x40
0xb5c: V1203 = M[0x40]
0xb5f: V1204 = DIV V1201 0x2
0xb61: V1205 = ISZERO V1204
0xb64: V1206 = MUL 0x8fc V1205
0xb67: V1207 = 0x0
0xb6f: V1208 = CALL V1206 V1196 V1204 V1203 0x0 V1203 0x0
0xb75: V1209 = ISZERO V1208
0xb76: V1210 = ISZERO V1209
0xb77: V1211 = 0x9df
0xb7a: JUMPI 0x9df V1210
---
Entry stack: [V10, 0x47a, V396]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x47a, V396]

================================

Block 0xb7b
[0xb7b:0xb7e]
---
Predecessors: [0xb3c]
Successors: []
---
0xb7b PUSH2 0x2
0xb7e JUMP
---
0xb7b: V1212 = 0x2
0xb7e: THROW 
---
Entry stack: [V10, 0x47a, V396]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x47a, V396]

================================

Block 0xb7f
[0xb7f:0xba2]
---
Predecessors: [0xb35]
Successors: [0x47a]
---
0xb7f JUMPDEST
0xb80 PUSH1 0x1
0xb82 DUP1
0xb83 SLOAD
0xb84 PUSH24 0xffff00000000000000000000000000000000000000000000
0xb9d NOT
0xb9e AND
0xb9f SWAP1
0xba0 SSTORE
0xba1 POP
0xba2 JUMP
---
0xb7f: JUMPDEST 
0xb80: V1213 = 0x1
0xb83: V1214 = S[0x1]
0xb84: V1215 = 0xffff00000000000000000000000000000000000000000000
0xb9d: V1216 = NOT 0xffff00000000000000000000000000000000000000000000
0xb9e: V1217 = AND 0xffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffff V1214
0xba0: S[0x1] = V1217
0xba2: JUMP 0x47a
---
Entry stack: [V10, 0x47a, V396]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0xba3
[0xba3:0xbb5]
---
Predecessors: [0x423]
Successors: [0xbb6, 0xbe4]
---
0xba3 JUMPDEST
0xba4 PUSH1 0x1
0xba6 SLOAD
0xba7 PUSH1 0xb0
0xba9 PUSH1 0x2
0xbab EXP
0xbac SWAP1
0xbad DIV
0xbae PUSH1 0xff
0xbb0 AND
0xbb1 DUP1
0xbb2 PUSH2 0xbe4
0xbb5 JUMPI
---
0xba3: JUMPDEST 
0xba4: V1218 = 0x1
0xba6: V1219 = S[0x1]
0xba7: V1220 = 0xb0
0xba9: V1221 = 0x2
0xbab: V1222 = EXP 0x2 0xb0
0xbad: V1223 = DIV V1219 0x100000000000000000000000000000000000000000000
0xbae: V1224 = 0xff
0xbb0: V1225 = AND 0xff V1223
0xbb2: V1226 = 0xbe4
0xbb5: JUMPI 0xbe4 V1225
---
Entry stack: [V10, 0x47a]
Stack pops: 0
Stack additions: [V1225]
Exit stack: [V10, 0x47a, V1225]

================================

Block 0xbb6
[0xbb6:0xbd4]
---
Predecessors: [0xba3]
Successors: [0xbd5, 0xbe4]
---
0xbb6 POP
0xbb7 PUSH1 0x0
0xbb9 SLOAD
0xbba PUSH2 0x100
0xbbd SWAP1
0xbbe DIV
0xbbf PUSH1 0x1
0xbc1 PUSH1 0xa0
0xbc3 PUSH1 0x2
0xbc5 EXP
0xbc6 SUB
0xbc7 SWAP1
0xbc8 DUP2
0xbc9 AND
0xbca CALLER
0xbcb SWAP1
0xbcc SWAP2
0xbcd AND
0xbce EQ
0xbcf DUP1
0xbd0 ISZERO
0xbd1 PUSH2 0xbe4
0xbd4 JUMPI
---
0xbb7: V1227 = 0x0
0xbb9: V1228 = S[0x0]
0xbba: V1229 = 0x100
0xbbe: V1230 = DIV V1228 0x100
0xbbf: V1231 = 0x1
0xbc1: V1232 = 0xa0
0xbc3: V1233 = 0x2
0xbc5: V1234 = EXP 0x2 0xa0
0xbc6: V1235 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbc9: V1236 = AND 0xffffffffffffffffffffffffffffffffffffffff V1230
0xbca: V1237 = CALLER
0xbcd: V1238 = AND 0xffffffffffffffffffffffffffffffffffffffff V1237
0xbce: V1239 = EQ V1238 V1236
0xbd0: V1240 = ISZERO V1239
0xbd1: V1241 = 0xbe4
0xbd4: JUMPI 0xbe4 V1240
---
Entry stack: [V10, 0x47a, V1225]
Stack pops: 1
Stack additions: [V1239]
Exit stack: [V10, 0x47a, V1239]

================================

Block 0xbd5
[0xbd5:0xbe3]
---
Predecessors: [0xbb6]
Successors: [0xbe4]
---
0xbd5 POP
0xbd6 PUSH1 0x1
0xbd8 SLOAD
0xbd9 PUSH1 0xa8
0xbdb PUSH1 0x2
0xbdd EXP
0xbde SWAP1
0xbdf DIV
0xbe0 PUSH1 0xff
0xbe2 AND
0xbe3 ISZERO
---
0xbd6: V1242 = 0x1
0xbd8: V1243 = S[0x1]
0xbd9: V1244 = 0xa8
0xbdb: V1245 = 0x2
0xbdd: V1246 = EXP 0x2 0xa8
0xbdf: V1247 = DIV V1243 0x1000000000000000000000000000000000000000000
0xbe0: V1248 = 0xff
0xbe2: V1249 = AND 0xff V1247
0xbe3: V1250 = ISZERO V1249
---
Entry stack: [V10, 0x47a, V1239]
Stack pops: 1
Stack additions: [V1250]
Exit stack: [V10, 0x47a, V1250]

================================

Block 0xbe4
[0xbe4:0xbe9]
---
Predecessors: [0xba3, 0xbb6, 0xbd5]
Successors: [0xbea, 0xc12]
---
0xbe4 JUMPDEST
0xbe5 DUP1
0xbe6 PUSH2 0xc12
0xbe9 JUMPI
---
0xbe4: JUMPDEST 
0xbe6: V1251 = 0xc12
0xbe9: JUMPI 0xc12 S0
---
Entry stack: [V10, 0x47a, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x47a, S0]

================================

Block 0xbea
[0xbea:0xc03]
---
Predecessors: [0xbe4]
Successors: [0xc04, 0xc12]
---
0xbea POP
0xbeb PUSH1 0x1
0xbed SLOAD
0xbee PUSH1 0x1
0xbf0 PUSH1 0xa0
0xbf2 PUSH1 0x2
0xbf4 EXP
0xbf5 SUB
0xbf6 SWAP1
0xbf7 DUP2
0xbf8 AND
0xbf9 CALLER
0xbfa SWAP1
0xbfb SWAP2
0xbfc AND
0xbfd EQ
0xbfe DUP1
0xbff ISZERO
0xc00 PUSH2 0xc12
0xc03 JUMPI
---
0xbeb: V1252 = 0x1
0xbed: V1253 = S[0x1]
0xbee: V1254 = 0x1
0xbf0: V1255 = 0xa0
0xbf2: V1256 = 0x2
0xbf4: V1257 = EXP 0x2 0xa0
0xbf5: V1258 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbf8: V1259 = AND 0xffffffffffffffffffffffffffffffffffffffff V1253
0xbf9: V1260 = CALLER
0xbfc: V1261 = AND 0xffffffffffffffffffffffffffffffffffffffff V1260
0xbfd: V1262 = EQ V1261 V1259
0xbff: V1263 = ISZERO V1262
0xc00: V1264 = 0xc12
0xc03: JUMPI 0xc12 V1263
---
Entry stack: [V10, 0x47a, S0]
Stack pops: 1
Stack additions: [V1262]
Exit stack: [V10, 0x47a, V1262]

================================

Block 0xc04
[0xc04:0xc11]
---
Predecessors: [0xbea]
Successors: [0xc12]
---
0xc04 POP
0xc05 PUSH1 0x1
0xc07 SLOAD
0xc08 PUSH1 0xa8
0xc0a PUSH1 0x2
0xc0c EXP
0xc0d SWAP1
0xc0e DIV
0xc0f PUSH1 0xff
0xc11 AND
---
0xc05: V1265 = 0x1
0xc07: V1266 = S[0x1]
0xc08: V1267 = 0xa8
0xc0a: V1268 = 0x2
0xc0c: V1269 = EXP 0x2 0xa8
0xc0e: V1270 = DIV V1266 0x1000000000000000000000000000000000000000000
0xc0f: V1271 = 0xff
0xc11: V1272 = AND 0xff V1270
---
Entry stack: [V10, 0x47a, V1262]
Stack pops: 1
Stack additions: [V1272]
Exit stack: [V10, 0x47a, V1272]

================================

Block 0xc12
[0xc12:0xc17]
---
Predecessors: [0xbe4, 0xbea, 0xc04]
Successors: [0xc18, 0xc1c]
---
0xc12 JUMPDEST
0xc13 ISZERO
0xc14 PUSH2 0xc1c
0xc17 JUMPI
---
0xc12: JUMPDEST 
0xc13: V1273 = ISZERO S0
0xc14: V1274 = 0xc1c
0xc17: JUMPI 0xc1c V1273
---
Entry stack: [V10, 0x47a, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x47a]

================================

Block 0xc18
[0xc18:0xc1b]
---
Predecessors: [0xc12]
Successors: []
---
0xc18 PUSH2 0x2
0xc1b JUMP
---
0xc18: V1275 = 0x2
0xc1b: THROW 
---
Entry stack: [V10, 0x47a]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x47a]

================================

Block 0xc1c
[0xc1c:0xc39]
---
Predecessors: [0xc12]
Successors: [0xc3a, 0xc4b]
---
0xc1c JUMPDEST
0xc1d PUSH1 0x0
0xc1f SLOAD
0xc20 PUSH2 0x100
0xc23 SWAP1
0xc24 DIV
0xc25 PUSH1 0x1
0xc27 PUSH1 0xa0
0xc29 PUSH1 0x2
0xc2b EXP
0xc2c SUB
0xc2d SWAP1
0xc2e DUP2
0xc2f AND
0xc30 CALLER
0xc31 SWAP1
0xc32 SWAP2
0xc33 AND
0xc34 EQ
0xc35 ISZERO
0xc36 PUSH2 0xc4b
0xc39 JUMPI
---
0xc1c: JUMPDEST 
0xc1d: V1276 = 0x0
0xc1f: V1277 = S[0x0]
0xc20: V1278 = 0x100
0xc24: V1279 = DIV V1277 0x100
0xc25: V1280 = 0x1
0xc27: V1281 = 0xa0
0xc29: V1282 = 0x2
0xc2b: V1283 = EXP 0x2 0xa0
0xc2c: V1284 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc2f: V1285 = AND 0xffffffffffffffffffffffffffffffffffffffff V1279
0xc30: V1286 = CALLER
0xc33: V1287 = AND 0xffffffffffffffffffffffffffffffffffffffff V1286
0xc34: V1288 = EQ V1287 V1285
0xc35: V1289 = ISZERO V1288
0xc36: V1290 = 0xc4b
0xc39: JUMPI 0xc4b V1289
---
Entry stack: [V10, 0x47a]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x47a]

================================

Block 0xc3a
[0xc3a:0xc4a]
---
Predecessors: [0xc1c]
Successors: [0xc59]
---
0xc3a PUSH1 0x4
0xc3c DUP1
0xc3d SLOAD
0xc3e PUSH1 0xff
0xc40 NOT
0xc41 AND
0xc42 PUSH1 0x1
0xc44 OR
0xc45 SWAP1
0xc46 SSTORE
0xc47 PUSH2 0xc59
0xc4a JUMP
---
0xc3a: V1291 = 0x4
0xc3d: V1292 = S[0x4]
0xc3e: V1293 = 0xff
0xc40: V1294 = NOT 0xff
0xc41: V1295 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1292
0xc42: V1296 = 0x1
0xc44: V1297 = OR 0x1 V1295
0xc46: S[0x4] = V1297
0xc47: V1298 = 0xc59
0xc4a: JUMP 0xc59
---
Entry stack: [V10, 0x47a]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x47a]

================================

Block 0xc4b
[0xc4b:0xc58]
---
Predecessors: [0xc1c]
Successors: [0xc59]
---
0xc4b JUMPDEST
0xc4c PUSH1 0x4
0xc4e DUP1
0xc4f SLOAD
0xc50 PUSH1 0xff
0xc52 NOT
0xc53 AND
0xc54 PUSH1 0x2
0xc56 OR
0xc57 SWAP1
0xc58 SSTORE
---
0xc4b: JUMPDEST 
0xc4c: V1299 = 0x4
0xc4f: V1300 = S[0x4]
0xc50: V1301 = 0xff
0xc52: V1302 = NOT 0xff
0xc53: V1303 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1300
0xc54: V1304 = 0x2
0xc56: V1305 = OR 0x2 V1303
0xc58: S[0x4] = V1305
---
Entry stack: [V10, 0x47a]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x47a]

================================

Block 0xc59
[0xc59:0xc70]
---
Predecessors: [0xc3a, 0xc4b]
Successors: [0x47a]
---
0xc59 JUMPDEST
0xc5a PUSH1 0x1
0xc5c DUP1
0xc5d SLOAD
0xc5e PUSH1 0xb0
0xc60 PUSH1 0x2
0xc62 EXP
0xc63 PUSH1 0xff
0xc65 MUL
0xc66 NOT
0xc67 AND
0xc68 PUSH1 0xb0
0xc6a PUSH1 0x2
0xc6c EXP
0xc6d OR
0xc6e SWAP1
0xc6f SSTORE
0xc70 JUMP
---
0xc59: JUMPDEST 
0xc5a: V1306 = 0x1
0xc5d: V1307 = S[0x1]
0xc5e: V1308 = 0xb0
0xc60: V1309 = 0x2
0xc62: V1310 = EXP 0x2 0xb0
0xc63: V1311 = 0xff
0xc65: V1312 = MUL 0xff 0x100000000000000000000000000000000000000000000
0xc66: V1313 = NOT 0xff00000000000000000000000000000000000000000000
0xc67: V1314 = AND 0xffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffff V1307
0xc68: V1315 = 0xb0
0xc6a: V1316 = 0x2
0xc6c: V1317 = EXP 0x2 0xb0
0xc6d: V1318 = OR 0x100000000000000000000000000000000000000000000 V1314
0xc6f: S[0x1] = V1318
0xc70: JUMP 0x47a
---
Entry stack: [V10, 0x47a]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Function 0:
Public function signature: 0x722013d
Entry block: 0x126
Exit block: 0x47a
Body: 0x126, 0x13f, 0x154, 0x15a, 0x47a, 0x4e9

Function 1:
Public function signature: 0xeecae21
Entry block: 0x15e
Exit block: 0x47e
Body: 0x15e, 0x164, 0x47e

Function 2:
Public function signature: 0x25a1577a
Entry block: 0x176
Exit block: 0x47a
Body: 0x176, 0x17c, 0x1a1, 0x1b6, 0x1bc, 0x47a, 0x530, 0x544, 0x563, 0x571, 0x577, 0x591, 0x5a0, 0x5a6, 0x5aa, 0x5b1, 0x5c8, 0x5dc, 0x5e5, 0x5f6, 0x687, 0x6a4, 0x6a7

Function 3:
Public function signature: 0x2825a817
Entry block: 0x1c0
Exit block: 0x1c9
Body: 0x1c0, 0x1c6, 0x1c9

Function 4:
Public function signature: 0x28c6be77
Entry block: 0x1db
Exit block: 0x47a
Body: 0x1db, 0x1e1, 0x20a, 0x21f, 0x225, 0x47a, 0x6ab, 0x6be, 0x6dd, 0x6ec, 0x6f2, 0x70c, 0x71a, 0x720, 0x724, 0x73b, 0x749, 0x74f, 0x753, 0x786, 0x78e, 0x793

Function 5:
Public function signature: 0x47a0bad6
Entry block: 0x229
Exit block: 0x47a
Body: 0x229, 0x22f, 0x250, 0x25f, 0x265, 0x47a, 0x47c

Function 6:
Public function signature: 0x4ccf6210
Entry block: 0x277
Exit block: 0x47a
Body: 0x277, 0x27d, 0x29f, 0x2b4, 0x2ba, 0x47a, 0x7da, 0x7ed, 0x80c, 0x81b, 0x821, 0x83b, 0x849, 0x84f, 0x853

Function 7:
Public function signature: 0x65da6fc0
Entry block: 0x2be
Exit block: 0x9ed
Body: 0x2be, 0x2c4, 0x2e9, 0x2fe, 0x304, 0x47a, 0x6a4, 0x88c, 0x8a0, 0x8bf, 0x8cd, 0x8d3, 0x8ed, 0x8fc, 0x902, 0x906, 0x915, 0x919, 0x921, 0x93f, 0x94e, 0x990, 0x994, 0x9a3, 0x9db, 0x9df, 0x9ed

Function 8:
Public function signature: 0x71dbd330
Entry block: 0x308
Exit block: 0x492
Body: 0x308, 0x30e, 0x324, 0x492, 0xa00, 0xa0e, 0xa45, 0xa6d

Function 9:
Public function signature: 0x81f5ddcb
Entry block: 0x328
Exit block: 0x47e
Body: 0x328, 0x32e, 0x47e

Function 10:
Public function signature: 0x8b8fd3bd
Entry block: 0x340
Exit block: 0x4b6
Body: 0x340, 0x346, 0x4b6

Function 11:
Public function signature: 0x949d225d
Entry block: 0x35c
Exit block: 0x4d3
Body: 0x35c, 0x362, 0x4d3

Function 12:
Public function signature: 0xa0811074
Entry block: 0x36d
Exit block: 0x4b6
Body: 0x36d, 0x373, 0x4b6

Function 13:
Public function signature: 0xa968991b
Entry block: 0x384
Exit block: 0x47e
Body: 0x384, 0x38a, 0x47e

Function 14:
Public function signature: 0xc7a01a1a
Entry block: 0x39c
Exit block: 0x47a
Body: 0x39c, 0x3a2, 0x3c7, 0x3dc, 0x3e2, 0x47a, 0x6a4, 0x9df, 0xaa3, 0xab7, 0xad6, 0xae4, 0xaea, 0xb04, 0xb13, 0xb19, 0xb1d, 0xb31, 0xb35, 0xb3c, 0xb7b, 0xb7f

Function 15:
Public function signature: 0xcdf4545d
Entry block: 0x3e6
Exit block: 0x47a
Body: 0x3e6, 0x3ec, 0x40e, 0x423, 0x429, 0x47a, 0xba3, 0xbb6, 0xbd5, 0xbe4, 0xbea, 0xc04, 0xc12, 0xc18, 0xc1c, 0xc3a, 0xc4b, 0xc59

Function 16:
Public function signature: 0xd1851c92
Entry block: 0x42d
Exit block: 0x492
Body: 0x42d, 0x433, 0x492

Function 17:
Public function signature: 0xdfbf53ae
Entry block: 0x451
Exit block: 0x1c9
Body: 0x1c9, 0x451, 0x457

Function 18:
Public function signature: 0xe1a5c92e
Entry block: 0x462
Exit block: 0x47e
Body: 0x462, 0x468, 0x47e

Function 19:
Public fallback function
Entry block: 0xe5
Exit block: 0x47a
Body: 0xe5, 0x107, 0x11c, 0x122, 0x47a, 0x47c

