Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xcf]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xcf
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xcf
0xc: JUMPI 0xcf V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0xd1]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x6b091f9
0x3a DUP2
0x3b EQ
0x3c PUSH2 0xd1
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x6b091f9
0x3b: V13 = EQ V11 0x6b091f9
0x3c: V14 = 0xd1
0x3f: JUMPI 0xd1 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x109]
---
0x40 DUP1
0x41 PUSH4 0x176797d0
0x46 EQ
0x47 PUSH2 0x109
0x4a JUMPI
---
0x41: V15 = 0x176797d0
0x46: V16 = EQ 0x176797d0 V11
0x47: V17 = 0x109
0x4a: JUMPI 0x109 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x130]
---
0x4b DUP1
0x4c PUSH4 0x20d7d3a0
0x51 EQ
0x52 PUSH2 0x130
0x55 JUMPI
---
0x4c: V18 = 0x20d7d3a0
0x51: V19 = EQ 0x20d7d3a0 V11
0x52: V20 = 0x130
0x55: JUMPI 0x130 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x151]
---
0x56 DUP1
0x57 PUSH4 0x2ff57da8
0x5c EQ
0x5d PUSH2 0x151
0x60 JUMPI
---
0x57: V21 = 0x2ff57da8
0x5c: V22 = EQ 0x2ff57da8 V11
0x5d: V23 = 0x151
0x60: JUMPI 0x151 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x172]
---
0x61 DUP1
0x62 PUSH4 0x3ccfd60b
0x67 EQ
0x68 PUSH2 0x172
0x6b JUMPI
---
0x62: V24 = 0x3ccfd60b
0x67: V25 = EQ 0x3ccfd60b V11
0x68: V26 = 0x172
0x6b: JUMPI 0x172 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x187]
---
0x6c DUP1
0x6d PUSH4 0x4ddee4d0
0x72 EQ
0x73 PUSH2 0x187
0x76 JUMPI
---
0x6d: V27 = 0x4ddee4d0
0x72: V28 = EQ 0x4ddee4d0 V11
0x73: V29 = 0x187
0x76: JUMPI 0x187 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x1ab]
---
0x77 DUP1
0x78 PUSH4 0x86403125
0x7d EQ
0x7e PUSH2 0x1ab
0x81 JUMPI
---
0x78: V30 = 0x86403125
0x7d: V31 = EQ 0x86403125 V11
0x7e: V32 = 0x1ab
0x81: JUMPI 0x1ab V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x1cc]
---
0x82 DUP1
0x83 PUSH4 0x8da5cb5b
0x88 EQ
0x89 PUSH2 0x1cc
0x8c JUMPI
---
0x83: V33 = 0x8da5cb5b
0x88: V34 = EQ 0x8da5cb5b V11
0x89: V35 = 0x1cc
0x8c: JUMPI 0x1cc V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x1fd]
---
0x8d DUP1
0x8e PUSH4 0x8f4ffcb1
0x93 EQ
0x94 PUSH2 0x1fd
0x97 JUMPI
---
0x8e: V36 = 0x8f4ffcb1
0x93: V37 = EQ 0x8f4ffcb1 V11
0x94: V38 = 0x1fd
0x97: JUMPI 0x1fd V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x8d]
Successors: [0xa3, 0x26d]
---
0x98 DUP1
0x99 PUSH4 0xa82a6f41
0x9e EQ
0x9f PUSH2 0x26d
0xa2 JUMPI
---
0x99: V39 = 0xa82a6f41
0x9e: V40 = EQ 0xa82a6f41 V11
0x9f: V41 = 0x26d
0xa2: JUMPI 0x26d V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa3
[0xa3:0xad]
---
Predecessors: [0x98]
Successors: [0xae, 0x282]
---
0xa3 DUP1
0xa4 PUSH4 0xb6de460a
0xa9 EQ
0xaa PUSH2 0x282
0xad JUMPI
---
0xa4: V42 = 0xb6de460a
0xa9: V43 = EQ 0xb6de460a V11
0xaa: V44 = 0x282
0xad: JUMPI 0x282 V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xae
[0xae:0xb8]
---
Predecessors: [0xa3]
Successors: [0xb9, 0x297]
---
0xae DUP1
0xaf PUSH4 0xc96cd46f
0xb4 EQ
0xb5 PUSH2 0x297
0xb8 JUMPI
---
0xaf: V45 = 0xc96cd46f
0xb4: V46 = EQ 0xc96cd46f V11
0xb5: V47 = 0x297
0xb8: JUMPI 0x297 V46
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xb9
[0xb9:0xc3]
---
Predecessors: [0xae]
Successors: [0xc4, 0x2ac]
---
0xb9 DUP1
0xba PUSH4 0xd4e0228a
0xbf EQ
0xc0 PUSH2 0x2ac
0xc3 JUMPI
---
0xba: V48 = 0xd4e0228a
0xbf: V49 = EQ 0xd4e0228a V11
0xc0: V50 = 0x2ac
0xc3: JUMPI 0x2ac V49
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xc4
[0xc4:0xce]
---
Predecessors: [0xb9]
Successors: [0xcf, 0x2cd]
---
0xc4 DUP1
0xc5 PUSH4 0xe81a0aad
0xca EQ
0xcb PUSH2 0x2cd
0xce JUMPI
---
0xc5: V51 = 0xe81a0aad
0xca: V52 = EQ 0xe81a0aad V11
0xcb: V53 = 0x2cd
0xce: JUMPI 0x2cd V52
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xcf
[0xcf:0xd0]
---
Predecessors: [0x0, 0xc4, 0x65e, 0x850]
Successors: []
---
0xcf JUMPDEST
0xd0 STOP
---
0xcf: JUMPDEST 
0xd0: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd1
[0xd1:0xd8]
---
Predecessors: [0xd]
Successors: [0xd9, 0xdd]
---
0xd1 JUMPDEST
0xd2 CALLVALUE
0xd3 DUP1
0xd4 ISZERO
0xd5 PUSH2 0xdd
0xd8 JUMPI
---
0xd1: JUMPDEST 
0xd2: V54 = CALLVALUE
0xd4: V55 = ISZERO V54
0xd5: V56 = 0xdd
0xd8: JUMPI 0xdd V55
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V54]
Exit stack: [V11, V54]

================================

Block 0xd9
[0xd9:0xdc]
---
Predecessors: [0xd1]
Successors: []
---
0xd9 PUSH1 0x0
0xdb DUP1
0xdc REVERT
---
0xd9: V57 = 0x0
0xdc: REVERT 0x0 0x0
---
Entry stack: [V11, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V54]

================================

Block 0xdd
[0xdd:0xf4]
---
Predecessors: [0xd1]
Successors: [0x2ee]
---
0xdd JUMPDEST
0xde POP
0xdf PUSH2 0xf5
0xe2 PUSH1 0x1
0xe4 PUSH1 0xa0
0xe6 PUSH1 0x2
0xe8 EXP
0xe9 SUB
0xea PUSH1 0x4
0xec CALLDATALOAD
0xed AND
0xee PUSH1 0x24
0xf0 CALLDATALOAD
0xf1 PUSH2 0x2ee
0xf4 JUMP
---
0xdd: JUMPDEST 
0xdf: V58 = 0xf5
0xe2: V59 = 0x1
0xe4: V60 = 0xa0
0xe6: V61 = 0x2
0xe8: V62 = EXP 0x2 0xa0
0xe9: V63 = SUB 0x10000000000000000000000000000000000000000 0x1
0xea: V64 = 0x4
0xec: V65 = CALLDATALOAD 0x4
0xed: V66 = AND V65 0xffffffffffffffffffffffffffffffffffffffff
0xee: V67 = 0x24
0xf0: V68 = CALLDATALOAD 0x24
0xf1: V69 = 0x2ee
0xf4: JUMP 0x2ee
---
Entry stack: [V11, V54]
Stack pops: 1
Stack additions: [0xf5, V66, V68]
Exit stack: [V11, 0xf5, V66, V68]

================================

Block 0xf5
[0xf5:0x108]
---
Predecessors: [0x408, 0x42d, 0x5d2, 0x954]
Successors: []
---
0xf5 JUMPDEST
0xf6 PUSH1 0x40
0xf8 DUP1
0xf9 MLOAD
0xfa SWAP2
0xfb ISZERO
0xfc ISZERO
0xfd DUP3
0xfe MSTORE
0xff MLOAD
0x100 SWAP1
0x101 DUP2
0x102 SWAP1
0x103 SUB
0x104 PUSH1 0x20
0x106 ADD
0x107 SWAP1
0x108 RETURN
---
0xf5: JUMPDEST 
0xf6: V70 = 0x40
0xf9: V71 = M[0x40]
0xfb: V72 = ISZERO S0
0xfc: V73 = ISZERO V72
0xfe: M[V71] = V73
0xff: V74 = M[0x40]
0x103: V75 = SUB V71 V74
0x104: V76 = 0x20
0x106: V77 = ADD 0x20 V75
0x108: RETURN V74 V77
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x109
[0x109:0x110]
---
Predecessors: [0x40]
Successors: [0x111, 0x115]
---
0x109 JUMPDEST
0x10a CALLVALUE
0x10b DUP1
0x10c ISZERO
0x10d PUSH2 0x115
0x110 JUMPI
---
0x109: JUMPDEST 
0x10a: V78 = CALLVALUE
0x10c: V79 = ISZERO V78
0x10d: V80 = 0x115
0x110: JUMPI 0x115 V79
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V78]
Exit stack: [V11, V78]

================================

Block 0x111
[0x111:0x114]
---
Predecessors: [0x109]
Successors: []
---
0x111 PUSH1 0x0
0x113 DUP1
0x114 REVERT
---
0x111: V81 = 0x0
0x114: REVERT 0x0 0x0
---
Entry stack: [V11, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V78]

================================

Block 0x115
[0x115:0x11d]
---
Predecessors: [0x109]
Successors: [0x40f]
---
0x115 JUMPDEST
0x116 POP
0x117 PUSH2 0x11e
0x11a PUSH2 0x40f
0x11d JUMP
---
0x115: JUMPDEST 
0x117: V82 = 0x11e
0x11a: V83 = 0x40f
0x11d: JUMP 0x40f
---
Entry stack: [V11, V78]
Stack pops: 1
Stack additions: [0x11e]
Exit stack: [V11, 0x11e]

================================

Block 0x11e
[0x11e:0x12f]
---
Predecessors: [0x40f, 0x531, 0x662, 0x92a]
Successors: []
---
0x11e JUMPDEST
0x11f PUSH1 0x40
0x121 DUP1
0x122 MLOAD
0x123 SWAP2
0x124 DUP3
0x125 MSTORE
0x126 MLOAD
0x127 SWAP1
0x128 DUP2
0x129 SWAP1
0x12a SUB
0x12b PUSH1 0x20
0x12d ADD
0x12e SWAP1
0x12f RETURN
---
0x11e: JUMPDEST 
0x11f: V84 = 0x40
0x122: V85 = M[0x40]
0x125: M[V85] = S0
0x126: V86 = M[0x40]
0x12a: V87 = SUB V85 V86
0x12b: V88 = 0x20
0x12d: V89 = ADD 0x20 V87
0x12f: RETURN V86 V89
---
Entry stack: [V11, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S1]

================================

Block 0x130
[0x130:0x137]
---
Predecessors: [0x4b]
Successors: [0x138, 0x13c]
---
0x130 JUMPDEST
0x131 CALLVALUE
0x132 DUP1
0x133 ISZERO
0x134 PUSH2 0x13c
0x137 JUMPI
---
0x130: JUMPDEST 
0x131: V90 = CALLVALUE
0x133: V91 = ISZERO V90
0x134: V92 = 0x13c
0x137: JUMPI 0x13c V91
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V90]
Exit stack: [V11, V90]

================================

Block 0x138
[0x138:0x13b]
---
Predecessors: [0x130]
Successors: []
---
0x138 PUSH1 0x0
0x13a DUP1
0x13b REVERT
---
0x138: V93 = 0x0
0x13b: REVERT 0x0 0x0
---
Entry stack: [V11, V90]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V90]

================================

Block 0x13c
[0x13c:0x150]
---
Predecessors: [0x130]
Successors: [0x415]
---
0x13c JUMPDEST
0x13d POP
0x13e PUSH2 0xf5
0x141 PUSH1 0x1
0x143 PUSH1 0xa0
0x145 PUSH1 0x2
0x147 EXP
0x148 SUB
0x149 PUSH1 0x4
0x14b CALLDATALOAD
0x14c AND
0x14d PUSH2 0x415
0x150 JUMP
---
0x13c: JUMPDEST 
0x13e: V94 = 0xf5
0x141: V95 = 0x1
0x143: V96 = 0xa0
0x145: V97 = 0x2
0x147: V98 = EXP 0x2 0xa0
0x148: V99 = SUB 0x10000000000000000000000000000000000000000 0x1
0x149: V100 = 0x4
0x14b: V101 = CALLDATALOAD 0x4
0x14c: V102 = AND V101 0xffffffffffffffffffffffffffffffffffffffff
0x14d: V103 = 0x415
0x150: JUMP 0x415
---
Entry stack: [V11, V90]
Stack pops: 1
Stack additions: [0xf5, V102]
Exit stack: [V11, 0xf5, V102]

================================

Block 0x151
[0x151:0x158]
---
Predecessors: [0x56]
Successors: [0x159, 0x15d]
---
0x151 JUMPDEST
0x152 CALLVALUE
0x153 DUP1
0x154 ISZERO
0x155 PUSH2 0x15d
0x158 JUMPI
---
0x151: JUMPDEST 
0x152: V104 = CALLVALUE
0x154: V105 = ISZERO V104
0x155: V106 = 0x15d
0x158: JUMPI 0x15d V105
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V104]
Exit stack: [V11, V104]

================================

Block 0x159
[0x159:0x15c]
---
Predecessors: [0x151]
Successors: []
---
0x159 PUSH1 0x0
0x15b DUP1
0x15c REVERT
---
0x159: V107 = 0x0
0x15c: REVERT 0x0 0x0
---
Entry stack: [V11, V104]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V104]

================================

Block 0x15d
[0x15d:0x171]
---
Predecessors: [0x151]
Successors: [0x48f]
---
0x15d JUMPDEST
0x15e POP
0x15f PUSH2 0x11e
0x162 PUSH1 0x1
0x164 PUSH1 0xa0
0x166 PUSH1 0x2
0x168 EXP
0x169 SUB
0x16a PUSH1 0x4
0x16c CALLDATALOAD
0x16d AND
0x16e PUSH2 0x48f
0x171 JUMP
---
0x15d: JUMPDEST 
0x15f: V108 = 0x11e
0x162: V109 = 0x1
0x164: V110 = 0xa0
0x166: V111 = 0x2
0x168: V112 = EXP 0x2 0xa0
0x169: V113 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16a: V114 = 0x4
0x16c: V115 = CALLDATALOAD 0x4
0x16d: V116 = AND V115 0xffffffffffffffffffffffffffffffffffffffff
0x16e: V117 = 0x48f
0x171: JUMP 0x48f
---
Entry stack: [V11, V104]
Stack pops: 1
Stack additions: [0x11e, V116]
Exit stack: [V11, 0x11e, V116]

================================

Block 0x172
[0x172:0x179]
---
Predecessors: [0x61]
Successors: [0x17a, 0x17e]
---
0x172 JUMPDEST
0x173 CALLVALUE
0x174 DUP1
0x175 ISZERO
0x176 PUSH2 0x17e
0x179 JUMPI
---
0x172: JUMPDEST 
0x173: V118 = CALLVALUE
0x175: V119 = ISZERO V118
0x176: V120 = 0x17e
0x179: JUMPI 0x17e V119
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V118]
Exit stack: [V11, V118]

================================

Block 0x17a
[0x17a:0x17d]
---
Predecessors: [0x172]
Successors: []
---
0x17a PUSH1 0x0
0x17c DUP1
0x17d REVERT
---
0x17a: V121 = 0x0
0x17d: REVERT 0x0 0x0
---
Entry stack: [V11, V118]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V118]

================================

Block 0x17e
[0x17e:0x186]
---
Predecessors: [0x172]
Successors: [0x539]
---
0x17e JUMPDEST
0x17f POP
0x180 PUSH2 0xf5
0x183 PUSH2 0x539
0x186 JUMP
---
0x17e: JUMPDEST 
0x180: V122 = 0xf5
0x183: V123 = 0x539
0x186: JUMP 0x539
---
Entry stack: [V11, V118]
Stack pops: 1
Stack additions: [0xf5]
Exit stack: [V11, 0xf5]

================================

Block 0x187
[0x187:0x18e]
---
Predecessors: [0x6c]
Successors: [0x18f, 0x193]
---
0x187 JUMPDEST
0x188 CALLVALUE
0x189 DUP1
0x18a ISZERO
0x18b PUSH2 0x193
0x18e JUMPI
---
0x187: JUMPDEST 
0x188: V124 = CALLVALUE
0x18a: V125 = ISZERO V124
0x18b: V126 = 0x193
0x18e: JUMPI 0x193 V125
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V124]
Exit stack: [V11, V124]

================================

Block 0x18f
[0x18f:0x192]
---
Predecessors: [0x187]
Successors: []
---
0x18f PUSH1 0x0
0x191 DUP1
0x192 REVERT
---
0x18f: V127 = 0x0
0x192: REVERT 0x0 0x0
---
Entry stack: [V11, V124]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V124]

================================

Block 0x193
[0x193:0x1aa]
---
Predecessors: [0x187]
Successors: [0x5da]
---
0x193 JUMPDEST
0x194 POP
0x195 PUSH2 0xcf
0x198 PUSH1 0x1
0x19a PUSH1 0xa0
0x19c PUSH1 0x2
0x19e EXP
0x19f SUB
0x1a0 PUSH1 0x4
0x1a2 CALLDATALOAD
0x1a3 AND
0x1a4 PUSH1 0x24
0x1a6 CALLDATALOAD
0x1a7 PUSH2 0x5da
0x1aa JUMP
---
0x193: JUMPDEST 
0x195: V128 = 0xcf
0x198: V129 = 0x1
0x19a: V130 = 0xa0
0x19c: V131 = 0x2
0x19e: V132 = EXP 0x2 0xa0
0x19f: V133 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a0: V134 = 0x4
0x1a2: V135 = CALLDATALOAD 0x4
0x1a3: V136 = AND V135 0xffffffffffffffffffffffffffffffffffffffff
0x1a4: V137 = 0x24
0x1a6: V138 = CALLDATALOAD 0x24
0x1a7: V139 = 0x5da
0x1aa: JUMP 0x5da
---
Entry stack: [V11, V124]
Stack pops: 1
Stack additions: [0xcf, V136, V138]
Exit stack: [V11, 0xcf, V136, V138]

================================

Block 0x1ab
[0x1ab:0x1b2]
---
Predecessors: [0x77]
Successors: [0x1b3, 0x1b7]
---
0x1ab JUMPDEST
0x1ac CALLVALUE
0x1ad DUP1
0x1ae ISZERO
0x1af PUSH2 0x1b7
0x1b2 JUMPI
---
0x1ab: JUMPDEST 
0x1ac: V140 = CALLVALUE
0x1ae: V141 = ISZERO V140
0x1af: V142 = 0x1b7
0x1b2: JUMPI 0x1b7 V141
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V140]
Exit stack: [V11, V140]

================================

Block 0x1b3
[0x1b3:0x1b6]
---
Predecessors: [0x1ab]
Successors: []
---
0x1b3 PUSH1 0x0
0x1b5 DUP1
0x1b6 REVERT
---
0x1b3: V143 = 0x0
0x1b6: REVERT 0x0 0x0
---
Entry stack: [V11, V140]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V140]

================================

Block 0x1b7
[0x1b7:0x1cb]
---
Predecessors: [0x1ab]
Successors: [0x662]
---
0x1b7 JUMPDEST
0x1b8 POP
0x1b9 PUSH2 0x11e
0x1bc PUSH1 0x1
0x1be PUSH1 0xa0
0x1c0 PUSH1 0x2
0x1c2 EXP
0x1c3 SUB
0x1c4 PUSH1 0x4
0x1c6 CALLDATALOAD
0x1c7 AND
0x1c8 PUSH2 0x662
0x1cb JUMP
---
0x1b7: JUMPDEST 
0x1b9: V144 = 0x11e
0x1bc: V145 = 0x1
0x1be: V146 = 0xa0
0x1c0: V147 = 0x2
0x1c2: V148 = EXP 0x2 0xa0
0x1c3: V149 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c4: V150 = 0x4
0x1c6: V151 = CALLDATALOAD 0x4
0x1c7: V152 = AND V151 0xffffffffffffffffffffffffffffffffffffffff
0x1c8: V153 = 0x662
0x1cb: JUMP 0x662
---
Entry stack: [V11, V140]
Stack pops: 1
Stack additions: [0x11e, V152]
Exit stack: [V11, 0x11e, V152]

================================

Block 0x1cc
[0x1cc:0x1d3]
---
Predecessors: [0x82]
Successors: [0x1d4, 0x1d8]
---
0x1cc JUMPDEST
0x1cd CALLVALUE
0x1ce DUP1
0x1cf ISZERO
0x1d0 PUSH2 0x1d8
0x1d3 JUMPI
---
0x1cc: JUMPDEST 
0x1cd: V154 = CALLVALUE
0x1cf: V155 = ISZERO V154
0x1d0: V156 = 0x1d8
0x1d3: JUMPI 0x1d8 V155
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V154]
Exit stack: [V11, V154]

================================

Block 0x1d4
[0x1d4:0x1d7]
---
Predecessors: [0x1cc]
Successors: []
---
0x1d4 PUSH1 0x0
0x1d6 DUP1
0x1d7 REVERT
---
0x1d4: V157 = 0x0
0x1d7: REVERT 0x0 0x0
---
Entry stack: [V11, V154]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V154]

================================

Block 0x1d8
[0x1d8:0x1e0]
---
Predecessors: [0x1cc]
Successors: [0x674]
---
0x1d8 JUMPDEST
0x1d9 POP
0x1da PUSH2 0x1e1
0x1dd PUSH2 0x674
0x1e0 JUMP
---
0x1d8: JUMPDEST 
0x1da: V158 = 0x1e1
0x1dd: V159 = 0x674
0x1e0: JUMP 0x674
---
Entry stack: [V11, V154]
Stack pops: 1
Stack additions: [0x1e1]
Exit stack: [V11, 0x1e1]

================================

Block 0x1e1
[0x1e1:0x1fc]
---
Predecessors: [0x674, 0x8be, 0x8cd]
Successors: []
---
0x1e1 JUMPDEST
0x1e2 PUSH1 0x40
0x1e4 DUP1
0x1e5 MLOAD
0x1e6 PUSH1 0x1
0x1e8 PUSH1 0xa0
0x1ea PUSH1 0x2
0x1ec EXP
0x1ed SUB
0x1ee SWAP1
0x1ef SWAP3
0x1f0 AND
0x1f1 DUP3
0x1f2 MSTORE
0x1f3 MLOAD
0x1f4 SWAP1
0x1f5 DUP2
0x1f6 SWAP1
0x1f7 SUB
0x1f8 PUSH1 0x20
0x1fa ADD
0x1fb SWAP1
0x1fc RETURN
---
0x1e1: JUMPDEST 
0x1e2: V160 = 0x40
0x1e5: V161 = M[0x40]
0x1e6: V162 = 0x1
0x1e8: V163 = 0xa0
0x1ea: V164 = 0x2
0x1ec: V165 = EXP 0x2 0xa0
0x1ed: V166 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f0: V167 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1f2: M[V161] = V167
0x1f3: V168 = M[0x40]
0x1f7: V169 = SUB V161 V168
0x1f8: V170 = 0x20
0x1fa: V171 = ADD 0x20 V169
0x1fc: RETURN V168 V171
---
Entry stack: [V11, 0x1e1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1e1]

================================

Block 0x1fd
[0x1fd:0x204]
---
Predecessors: [0x8d]
Successors: [0x205, 0x209]
---
0x1fd JUMPDEST
0x1fe CALLVALUE
0x1ff DUP1
0x200 ISZERO
0x201 PUSH2 0x209
0x204 JUMPI
---
0x1fd: JUMPDEST 
0x1fe: V172 = CALLVALUE
0x200: V173 = ISZERO V172
0x201: V174 = 0x209
0x204: JUMPI 0x209 V173
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V172]
Exit stack: [V11, V172]

================================

Block 0x205
[0x205:0x208]
---
Predecessors: [0x1fd]
Successors: []
---
0x205 PUSH1 0x0
0x207 DUP1
0x208 REVERT
---
0x205: V175 = 0x0
0x208: REVERT 0x0 0x0
---
Entry stack: [V11, V172]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V172]

================================

Block 0x209
[0x209:0x26c]
---
Predecessors: [0x1fd]
Successors: [0x683]
---
0x209 JUMPDEST
0x20a POP
0x20b PUSH1 0x40
0x20d DUP1
0x20e MLOAD
0x20f PUSH1 0x20
0x211 PUSH1 0x1f
0x213 PUSH1 0x64
0x215 CALLDATALOAD
0x216 PUSH1 0x4
0x218 DUP2
0x219 DUP2
0x21a ADD
0x21b CALLDATALOAD
0x21c SWAP3
0x21d DUP4
0x21e ADD
0x21f DUP5
0x220 SWAP1
0x221 DIV
0x222 DUP5
0x223 MUL
0x224 DUP6
0x225 ADD
0x226 DUP5
0x227 ADD
0x228 SWAP1
0x229 SWAP6
0x22a MSTORE
0x22b DUP2
0x22c DUP5
0x22d MSTORE
0x22e PUSH2 0xcf
0x231 SWAP5
0x232 PUSH1 0x1
0x234 PUSH1 0xa0
0x236 PUSH1 0x2
0x238 EXP
0x239 SUB
0x23a DUP2
0x23b CALLDATALOAD
0x23c DUP2
0x23d AND
0x23e SWAP6
0x23f PUSH1 0x24
0x241 DUP1
0x242 CALLDATALOAD
0x243 SWAP7
0x244 PUSH1 0x44
0x246 CALLDATALOAD
0x247 SWAP1
0x248 SWAP4
0x249 AND
0x24a SWAP6
0x24b CALLDATASIZE
0x24c SWAP6
0x24d PUSH1 0x84
0x24f SWAP5
0x250 SWAP3
0x251 ADD
0x252 SWAP2
0x253 DUP2
0x254 SWAP1
0x255 DUP5
0x256 ADD
0x257 DUP4
0x258 DUP3
0x259 DUP1
0x25a DUP3
0x25b DUP5
0x25c CALLDATACOPY
0x25d POP
0x25e SWAP5
0x25f SWAP8
0x260 POP
0x261 PUSH2 0x683
0x264 SWAP7
0x265 POP
0x266 POP
0x267 POP
0x268 POP
0x269 POP
0x26a POP
0x26b POP
0x26c JUMP
---
0x209: JUMPDEST 
0x20b: V176 = 0x40
0x20e: V177 = M[0x40]
0x20f: V178 = 0x20
0x211: V179 = 0x1f
0x213: V180 = 0x64
0x215: V181 = CALLDATALOAD 0x64
0x216: V182 = 0x4
0x21a: V183 = ADD 0x4 V181
0x21b: V184 = CALLDATALOAD V183
0x21e: V185 = ADD V184 0x1f
0x221: V186 = DIV V185 0x20
0x223: V187 = MUL 0x20 V186
0x225: V188 = ADD V177 V187
0x227: V189 = ADD 0x20 V188
0x22a: M[0x40] = V189
0x22d: M[V177] = V184
0x22e: V190 = 0xcf
0x232: V191 = 0x1
0x234: V192 = 0xa0
0x236: V193 = 0x2
0x238: V194 = EXP 0x2 0xa0
0x239: V195 = SUB 0x10000000000000000000000000000000000000000 0x1
0x23b: V196 = CALLDATALOAD 0x4
0x23d: V197 = AND 0xffffffffffffffffffffffffffffffffffffffff V196
0x23f: V198 = 0x24
0x242: V199 = CALLDATALOAD 0x24
0x244: V200 = 0x44
0x246: V201 = CALLDATALOAD 0x44
0x249: V202 = AND 0xffffffffffffffffffffffffffffffffffffffff V201
0x24b: V203 = CALLDATASIZE
0x24d: V204 = 0x84
0x251: V205 = ADD 0x24 V181
0x256: V206 = ADD V177 0x20
0x25c: CALLDATACOPY V206 V205 V184
0x261: V207 = 0x683
0x26c: JUMP 0x683
---
Entry stack: [V11, V172]
Stack pops: 1
Stack additions: [0xcf, V197, V199, V202, V177]
Exit stack: [V11, 0xcf, V197, V199, V202, V177]

================================

Block 0x26d
[0x26d:0x274]
---
Predecessors: [0x98]
Successors: [0x275, 0x279]
---
0x26d JUMPDEST
0x26e CALLVALUE
0x26f DUP1
0x270 ISZERO
0x271 PUSH2 0x279
0x274 JUMPI
---
0x26d: JUMPDEST 
0x26e: V208 = CALLVALUE
0x270: V209 = ISZERO V208
0x271: V210 = 0x279
0x274: JUMPI 0x279 V209
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V208]
Exit stack: [V11, V208]

================================

Block 0x275
[0x275:0x278]
---
Predecessors: [0x26d]
Successors: []
---
0x275 PUSH1 0x0
0x277 DUP1
0x278 REVERT
---
0x275: V211 = 0x0
0x278: REVERT 0x0 0x0
---
Entry stack: [V11, V208]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V208]

================================

Block 0x279
[0x279:0x281]
---
Predecessors: [0x26d]
Successors: [0x8be]
---
0x279 JUMPDEST
0x27a POP
0x27b PUSH2 0x1e1
0x27e PUSH2 0x8be
0x281 JUMP
---
0x279: JUMPDEST 
0x27b: V212 = 0x1e1
0x27e: V213 = 0x8be
0x281: JUMP 0x8be
---
Entry stack: [V11, V208]
Stack pops: 1
Stack additions: [0x1e1]
Exit stack: [V11, 0x1e1]

================================

Block 0x282
[0x282:0x289]
---
Predecessors: [0xa3]
Successors: [0x28a, 0x28e]
---
0x282 JUMPDEST
0x283 CALLVALUE
0x284 DUP1
0x285 ISZERO
0x286 PUSH2 0x28e
0x289 JUMPI
---
0x282: JUMPDEST 
0x283: V214 = CALLVALUE
0x285: V215 = ISZERO V214
0x286: V216 = 0x28e
0x289: JUMPI 0x28e V215
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V214]
Exit stack: [V11, V214]

================================

Block 0x28a
[0x28a:0x28d]
---
Predecessors: [0x282]
Successors: []
---
0x28a PUSH1 0x0
0x28c DUP1
0x28d REVERT
---
0x28a: V217 = 0x0
0x28d: REVERT 0x0 0x0
---
Entry stack: [V11, V214]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V214]

================================

Block 0x28e
[0x28e:0x296]
---
Predecessors: [0x282]
Successors: [0x8cd]
---
0x28e JUMPDEST
0x28f POP
0x290 PUSH2 0x1e1
0x293 PUSH2 0x8cd
0x296 JUMP
---
0x28e: JUMPDEST 
0x290: V218 = 0x1e1
0x293: V219 = 0x8cd
0x296: JUMP 0x8cd
---
Entry stack: [V11, V214]
Stack pops: 1
Stack additions: [0x1e1]
Exit stack: [V11, 0x1e1]

================================

Block 0x297
[0x297:0x29e]
---
Predecessors: [0xae]
Successors: [0x29f, 0x2a3]
---
0x297 JUMPDEST
0x298 CALLVALUE
0x299 DUP1
0x29a ISZERO
0x29b PUSH2 0x2a3
0x29e JUMPI
---
0x297: JUMPDEST 
0x298: V220 = CALLVALUE
0x29a: V221 = ISZERO V220
0x29b: V222 = 0x2a3
0x29e: JUMPI 0x2a3 V221
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V220]
Exit stack: [V11, V220]

================================

Block 0x29f
[0x29f:0x2a2]
---
Predecessors: [0x297]
Successors: []
---
0x29f PUSH1 0x0
0x2a1 DUP1
0x2a2 REVERT
---
0x29f: V223 = 0x0
0x2a2: REVERT 0x0 0x0
---
Entry stack: [V11, V220]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V220]

================================

Block 0x2a3
[0x2a3:0x2ab]
---
Predecessors: [0x297]
Successors: [0x8dc]
---
0x2a3 JUMPDEST
0x2a4 POP
0x2a5 PUSH2 0xcf
0x2a8 PUSH2 0x8dc
0x2ab JUMP
---
0x2a3: JUMPDEST 
0x2a5: V224 = 0xcf
0x2a8: V225 = 0x8dc
0x2ab: JUMP 0x8dc
---
Entry stack: [V11, V220]
Stack pops: 1
Stack additions: [0xcf]
Exit stack: [V11, 0xcf]

================================

Block 0x2ac
[0x2ac:0x2b3]
---
Predecessors: [0xb9]
Successors: [0x2b4, 0x2b8]
---
0x2ac JUMPDEST
0x2ad CALLVALUE
0x2ae DUP1
0x2af ISZERO
0x2b0 PUSH2 0x2b8
0x2b3 JUMPI
---
0x2ac: JUMPDEST 
0x2ad: V226 = CALLVALUE
0x2af: V227 = ISZERO V226
0x2b0: V228 = 0x2b8
0x2b3: JUMPI 0x2b8 V227
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V226]
Exit stack: [V11, V226]

================================

Block 0x2b4
[0x2b4:0x2b7]
---
Predecessors: [0x2ac]
Successors: []
---
0x2b4 PUSH1 0x0
0x2b6 DUP1
0x2b7 REVERT
---
0x2b4: V229 = 0x0
0x2b7: REVERT 0x0 0x0
---
Entry stack: [V11, V226]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V226]

================================

Block 0x2b8
[0x2b8:0x2cc]
---
Predecessors: [0x2ac]
Successors: [0x92a]
---
0x2b8 JUMPDEST
0x2b9 POP
0x2ba PUSH2 0x11e
0x2bd PUSH1 0x1
0x2bf PUSH1 0xa0
0x2c1 PUSH1 0x2
0x2c3 EXP
0x2c4 SUB
0x2c5 PUSH1 0x4
0x2c7 CALLDATALOAD
0x2c8 AND
0x2c9 PUSH2 0x92a
0x2cc JUMP
---
0x2b8: JUMPDEST 
0x2ba: V230 = 0x11e
0x2bd: V231 = 0x1
0x2bf: V232 = 0xa0
0x2c1: V233 = 0x2
0x2c3: V234 = EXP 0x2 0xa0
0x2c4: V235 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c5: V236 = 0x4
0x2c7: V237 = CALLDATALOAD 0x4
0x2c8: V238 = AND V237 0xffffffffffffffffffffffffffffffffffffffff
0x2c9: V239 = 0x92a
0x2cc: JUMP 0x92a
---
Entry stack: [V11, V226]
Stack pops: 1
Stack additions: [0x11e, V238]
Exit stack: [V11, 0x11e, V238]

================================

Block 0x2cd
[0x2cd:0x2d4]
---
Predecessors: [0xc4]
Successors: [0x2d5, 0x2d9]
---
0x2cd JUMPDEST
0x2ce CALLVALUE
0x2cf DUP1
0x2d0 ISZERO
0x2d1 PUSH2 0x2d9
0x2d4 JUMPI
---
0x2cd: JUMPDEST 
0x2ce: V240 = CALLVALUE
0x2d0: V241 = ISZERO V240
0x2d1: V242 = 0x2d9
0x2d4: JUMPI 0x2d9 V241
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V240]
Exit stack: [V11, V240]

================================

Block 0x2d5
[0x2d5:0x2d8]
---
Predecessors: [0x2cd]
Successors: []
---
0x2d5 PUSH1 0x0
0x2d7 DUP1
0x2d8 REVERT
---
0x2d5: V243 = 0x0
0x2d8: REVERT 0x0 0x0
---
Entry stack: [V11, V240]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V240]

================================

Block 0x2d9
[0x2d9:0x2ed]
---
Predecessors: [0x2cd]
Successors: [0x93c]
---
0x2d9 JUMPDEST
0x2da POP
0x2db PUSH2 0xf5
0x2de PUSH1 0x1
0x2e0 PUSH1 0xa0
0x2e2 PUSH1 0x2
0x2e4 EXP
0x2e5 SUB
0x2e6 PUSH1 0x4
0x2e8 CALLDATALOAD
0x2e9 AND
0x2ea PUSH2 0x93c
0x2ed JUMP
---
0x2d9: JUMPDEST 
0x2db: V244 = 0xf5
0x2de: V245 = 0x1
0x2e0: V246 = 0xa0
0x2e2: V247 = 0x2
0x2e4: V248 = EXP 0x2 0xa0
0x2e5: V249 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e6: V250 = 0x4
0x2e8: V251 = CALLDATALOAD 0x4
0x2e9: V252 = AND V251 0xffffffffffffffffffffffffffffffffffffffff
0x2ea: V253 = 0x93c
0x2ed: JUMP 0x93c
---
Entry stack: [V11, V240]
Stack pops: 1
Stack additions: [0xf5, V252]
Exit stack: [V11, 0xf5, V252]

================================

Block 0x2ee
[0x2ee:0x303]
---
Predecessors: [0xdd]
Successors: [0x304, 0x308]
---
0x2ee JUMPDEST
0x2ef PUSH1 0x0
0x2f1 DUP1
0x2f2 SLOAD
0x2f3 DUP2
0x2f4 SWAP1
0x2f5 PUSH1 0x1
0x2f7 PUSH1 0xa0
0x2f9 PUSH1 0x2
0x2fb EXP
0x2fc SUB
0x2fd AND
0x2fe CALLER
0x2ff EQ
0x300 PUSH2 0x308
0x303 JUMPI
---
0x2ee: JUMPDEST 
0x2ef: V254 = 0x0
0x2f2: V255 = S[0x0]
0x2f5: V256 = 0x1
0x2f7: V257 = 0xa0
0x2f9: V258 = 0x2
0x2fb: V259 = EXP 0x2 0xa0
0x2fc: V260 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2fd: V261 = AND 0xffffffffffffffffffffffffffffffffffffffff V255
0x2fe: V262 = CALLER
0x2ff: V263 = EQ V262 V261
0x300: V264 = 0x308
0x303: JUMPI 0x308 V263
---
Entry stack: [V11, 0xf5, V66, V68]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0xf5, V66, V68, 0x0, 0x0]

================================

Block 0x304
[0x304:0x307]
---
Predecessors: [0x2ee]
Successors: []
---
0x304 PUSH1 0x0
0x306 DUP1
0x307 REVERT
---
0x304: V265 = 0x0
0x307: REVERT 0x0 0x0
---
Entry stack: [V11, 0xf5, V66, V68, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf5, V66, V68, 0x0, 0x0]

================================

Block 0x308
[0x308:0x318]
---
Predecessors: [0x2ee]
Successors: [0x319, 0x31d]
---
0x308 JUMPDEST
0x309 PUSH1 0x1
0x30b PUSH1 0xa0
0x30d PUSH1 0x2
0x30f EXP
0x310 SUB
0x311 DUP5
0x312 AND
0x313 ISZERO
0x314 ISZERO
0x315 PUSH2 0x31d
0x318 JUMPI
---
0x308: JUMPDEST 
0x309: V266 = 0x1
0x30b: V267 = 0xa0
0x30d: V268 = 0x2
0x30f: V269 = EXP 0x2 0xa0
0x310: V270 = SUB 0x10000000000000000000000000000000000000000 0x1
0x312: V271 = AND V66 0xffffffffffffffffffffffffffffffffffffffff
0x313: V272 = ISZERO V271
0x314: V273 = ISZERO V272
0x315: V274 = 0x31d
0x318: JUMPI 0x31d V273
---
Entry stack: [V11, 0xf5, V66, V68, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0xf5, V66, V68, 0x0, 0x0]

================================

Block 0x319
[0x319:0x31c]
---
Predecessors: [0x308]
Successors: []
---
0x319 PUSH1 0x0
0x31b DUP1
0x31c REVERT
---
0x319: V275 = 0x0
0x31c: REVERT 0x0 0x0
---
Entry stack: [V11, 0xf5, V66, V68, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf5, V66, V68, 0x0, 0x0]

================================

Block 0x31d
[0x31d:0x388]
---
Predecessors: [0x308]
Successors: [0x389, 0x38d]
---
0x31d JUMPDEST
0x31e PUSH1 0x0
0x320 DUP1
0x321 SLOAD
0x322 PUSH1 0x40
0x324 DUP1
0x325 MLOAD
0x326 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x347 DUP2
0x348 MSTORE
0x349 PUSH1 0x1
0x34b PUSH1 0xa0
0x34d PUSH1 0x2
0x34f EXP
0x350 SUB
0x351 SWAP3
0x352 DUP4
0x353 AND
0x354 PUSH1 0x4
0x356 DUP3
0x357 ADD
0x358 MSTORE
0x359 PUSH1 0x24
0x35b DUP2
0x35c ADD
0x35d DUP8
0x35e SWAP1
0x35f MSTORE
0x360 SWAP1
0x361 MLOAD
0x362 SWAP2
0x363 DUP8
0x364 AND
0x365 SWAP3
0x366 PUSH4 0xa9059cbb
0x36b SWAP3
0x36c PUSH1 0x44
0x36e DUP1
0x36f DUP5
0x370 ADD
0x371 SWAP4
0x372 PUSH1 0x20
0x374 SWAP4
0x375 SWAP1
0x376 DUP4
0x377 SWAP1
0x378 SUB
0x379 SWAP1
0x37a SWAP2
0x37b ADD
0x37c SWAP1
0x37d DUP3
0x37e SWAP1
0x37f DUP8
0x380 DUP1
0x381 EXTCODESIZE
0x382 ISZERO
0x383 DUP1
0x384 ISZERO
0x385 PUSH2 0x38d
0x388 JUMPI
---
0x31d: JUMPDEST 
0x31e: V276 = 0x0
0x321: V277 = S[0x0]
0x322: V278 = 0x40
0x325: V279 = M[0x40]
0x326: V280 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x348: M[V279] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x349: V281 = 0x1
0x34b: V282 = 0xa0
0x34d: V283 = 0x2
0x34f: V284 = EXP 0x2 0xa0
0x350: V285 = SUB 0x10000000000000000000000000000000000000000 0x1
0x353: V286 = AND 0xffffffffffffffffffffffffffffffffffffffff V277
0x354: V287 = 0x4
0x357: V288 = ADD V279 0x4
0x358: M[V288] = V286
0x359: V289 = 0x24
0x35c: V290 = ADD V279 0x24
0x35f: M[V290] = V68
0x361: V291 = M[0x40]
0x364: V292 = AND V66 0xffffffffffffffffffffffffffffffffffffffff
0x366: V293 = 0xa9059cbb
0x36c: V294 = 0x44
0x370: V295 = ADD V279 0x44
0x372: V296 = 0x20
0x378: V297 = SUB V279 V291
0x37b: V298 = ADD 0x44 V297
0x381: V299 = EXTCODESIZE V292
0x382: V300 = ISZERO V299
0x384: V301 = ISZERO V300
0x385: V302 = 0x38d
0x388: JUMPI 0x38d V301
---
Entry stack: [V11, 0xf5, V66, V68, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V292, 0xa9059cbb, V295, 0x20, V291, V298, V291, 0x0, V292, V300]
Exit stack: [V11, 0xf5, V66, V68, 0x0, 0x0, V292, 0xa9059cbb, V295, 0x20, V291, V298, V291, 0x0, V292, V300]

================================

Block 0x389
[0x389:0x38c]
---
Predecessors: [0x31d]
Successors: []
---
0x389 PUSH1 0x0
0x38b DUP1
0x38c REVERT
---
0x389: V303 = 0x0
0x38c: REVERT 0x0 0x0
---
Entry stack: [V11, 0xf5, V66, V68, 0x0, 0x0, V292, 0xa9059cbb, V295, 0x20, V291, V298, V291, 0x0, V292, V300]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf5, V66, V68, 0x0, 0x0, V292, 0xa9059cbb, V295, 0x20, V291, V298, V291, 0x0, V292, V300]

================================

Block 0x38d
[0x38d:0x397]
---
Predecessors: [0x31d]
Successors: [0x398, 0x3a1]
---
0x38d JUMPDEST
0x38e POP
0x38f GAS
0x390 CALL
0x391 ISZERO
0x392 DUP1
0x393 ISZERO
0x394 PUSH2 0x3a1
0x397 JUMPI
---
0x38d: JUMPDEST 
0x38f: V304 = GAS
0x390: V305 = CALL V304 V292 0x0 V291 V298 V291 0x20
0x391: V306 = ISZERO V305
0x393: V307 = ISZERO V306
0x394: V308 = 0x3a1
0x397: JUMPI 0x3a1 V307
---
Entry stack: [V11, 0xf5, V66, V68, 0x0, 0x0, V292, 0xa9059cbb, V295, 0x20, V291, V298, V291, 0x0, V292, V300]
Stack pops: 7
Stack additions: [V306]
Exit stack: [V11, 0xf5, V66, V68, 0x0, 0x0, V292, 0xa9059cbb, V295, V306]

================================

Block 0x398
[0x398:0x3a0]
---
Predecessors: [0x38d]
Successors: []
---
0x398 RETURNDATASIZE
0x399 PUSH1 0x0
0x39b DUP1
0x39c RETURNDATACOPY
0x39d RETURNDATASIZE
0x39e PUSH1 0x0
0x3a0 REVERT
---
0x398: V309 = RETURNDATASIZE
0x399: V310 = 0x0
0x39c: RETURNDATACOPY 0x0 0x0 V309
0x39d: V311 = RETURNDATASIZE
0x39e: V312 = 0x0
0x3a0: REVERT 0x0 V311
---
Entry stack: [V11, 0xf5, V66, V68, 0x0, 0x0, V292, 0xa9059cbb, V295, V306]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf5, V66, V68, 0x0, 0x0, V292, 0xa9059cbb, V295, V306]

================================

Block 0x3a1
[0x3a1:0x3b2]
---
Predecessors: [0x38d]
Successors: [0x3b3, 0x3b7]
---
0x3a1 JUMPDEST
0x3a2 POP
0x3a3 POP
0x3a4 POP
0x3a5 POP
0x3a6 PUSH1 0x40
0x3a8 MLOAD
0x3a9 RETURNDATASIZE
0x3aa PUSH1 0x20
0x3ac DUP2
0x3ad LT
0x3ae ISZERO
0x3af PUSH2 0x3b7
0x3b2 JUMPI
---
0x3a1: JUMPDEST 
0x3a6: V313 = 0x40
0x3a8: V314 = M[0x40]
0x3a9: V315 = RETURNDATASIZE
0x3aa: V316 = 0x20
0x3ad: V317 = LT V315 0x20
0x3ae: V318 = ISZERO V317
0x3af: V319 = 0x3b7
0x3b2: JUMPI 0x3b7 V318
---
Entry stack: [V11, 0xf5, V66, V68, 0x0, 0x0, V292, 0xa9059cbb, V295, V306]
Stack pops: 4
Stack additions: [V314, V315]
Exit stack: [V11, 0xf5, V66, V68, 0x0, 0x0, V314, V315]

================================

Block 0x3b3
[0x3b3:0x3b6]
---
Predecessors: [0x3a1]
Successors: []
---
0x3b3 PUSH1 0x0
0x3b5 DUP1
0x3b6 REVERT
---
0x3b3: V320 = 0x0
0x3b6: REVERT 0x0 0x0
---
Entry stack: [V11, 0xf5, V66, V68, 0x0, 0x0, V314, V315]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf5, V66, V68, 0x0, 0x0, V314, V315]

================================

Block 0x3b7
[0x3b7:0x3c1]
---
Predecessors: [0x3a1]
Successors: [0x3c2, 0x408]
---
0x3b7 JUMPDEST
0x3b8 POP
0x3b9 MLOAD
0x3ba SWAP1
0x3bb POP
0x3bc DUP1
0x3bd ISZERO
0x3be PUSH2 0x408
0x3c1 JUMPI
---
0x3b7: JUMPDEST 
0x3b9: V321 = M[V314]
0x3bd: V322 = ISZERO V321
0x3be: V323 = 0x408
0x3c1: JUMPI 0x408 V322
---
Entry stack: [V11, 0xf5, V66, V68, 0x0, 0x0, V314, V315]
Stack pops: 3
Stack additions: [V321]
Exit stack: [V11, 0xf5, V66, V68, 0x0, V321]

================================

Block 0x3c2
[0x3c2:0x407]
---
Predecessors: [0x3b7]
Successors: [0x408]
---
0x3c2 PUSH1 0x0
0x3c4 SLOAD
0x3c5 PUSH1 0x40
0x3c7 DUP1
0x3c8 MLOAD
0x3c9 DUP6
0x3ca DUP2
0x3cb MSTORE
0x3cc SWAP1
0x3cd MLOAD
0x3ce PUSH1 0x1
0x3d0 PUSH1 0xa0
0x3d2 PUSH1 0x2
0x3d4 EXP
0x3d5 SUB
0x3d6 DUP1
0x3d7 DUP9
0x3d8 AND
0x3d9 SWAP4
0x3da AND
0x3db SWAP2
0x3dc CALLER
0x3dd SWAP2
0x3de PUSH32 0xc9e8848e763791df46dee01dfdd8f0eb58cd33dd15e0773146866af844e8f09b
0x3ff SWAP2
0x400 DUP2
0x401 SWAP1
0x402 SUB
0x403 PUSH1 0x20
0x405 ADD
0x406 SWAP1
0x407 LOG4
---
0x3c2: V324 = 0x0
0x3c4: V325 = S[0x0]
0x3c5: V326 = 0x40
0x3c8: V327 = M[0x40]
0x3cb: M[V327] = V68
0x3cd: V328 = M[0x40]
0x3ce: V329 = 0x1
0x3d0: V330 = 0xa0
0x3d2: V331 = 0x2
0x3d4: V332 = EXP 0x2 0xa0
0x3d5: V333 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d8: V334 = AND V66 0xffffffffffffffffffffffffffffffffffffffff
0x3da: V335 = AND V325 0xffffffffffffffffffffffffffffffffffffffff
0x3dc: V336 = CALLER
0x3de: V337 = 0xc9e8848e763791df46dee01dfdd8f0eb58cd33dd15e0773146866af844e8f09b
0x402: V338 = SUB V327 V328
0x403: V339 = 0x20
0x405: V340 = ADD 0x20 V338
0x407: LOG V328 V340 0xc9e8848e763791df46dee01dfdd8f0eb58cd33dd15e0773146866af844e8f09b V336 V335 V334
---
Entry stack: [V11, 0xf5, V66, V68, 0x0, V321]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0xf5, V66, V68, 0x0, V321]

================================

Block 0x408
[0x408:0x40e]
---
Predecessors: [0x3b7, 0x3c2]
Successors: [0xf5]
---
0x408 JUMPDEST
0x409 SWAP4
0x40a SWAP3
0x40b POP
0x40c POP
0x40d POP
0x40e JUMP
---
0x408: JUMPDEST 
0x40e: JUMP 0xf5
---
Entry stack: [V11, 0xf5, V66, V68, 0x0, V321]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V11, V321]

================================

Block 0x40f
[0x40f:0x414]
---
Predecessors: [0x115]
Successors: [0x11e]
---
0x40f JUMPDEST
0x410 PUSH1 0x4
0x412 SLOAD
0x413 DUP2
0x414 JUMP
---
0x40f: JUMPDEST 
0x410: V341 = 0x4
0x412: V342 = S[0x4]
0x414: JUMP 0x11e
---
Entry stack: [V11, 0x11e]
Stack pops: 1
Stack additions: [S0, V342]
Exit stack: [V11, 0x11e, V342]

================================

Block 0x415
[0x415:0x428]
---
Predecessors: [0x13c]
Successors: [0x429, 0x42d]
---
0x415 JUMPDEST
0x416 PUSH1 0x0
0x418 DUP1
0x419 SLOAD
0x41a PUSH1 0x1
0x41c PUSH1 0xa0
0x41e PUSH1 0x2
0x420 EXP
0x421 SUB
0x422 AND
0x423 CALLER
0x424 EQ
0x425 PUSH2 0x42d
0x428 JUMPI
---
0x415: JUMPDEST 
0x416: V343 = 0x0
0x419: V344 = S[0x0]
0x41a: V345 = 0x1
0x41c: V346 = 0xa0
0x41e: V347 = 0x2
0x420: V348 = EXP 0x2 0xa0
0x421: V349 = SUB 0x10000000000000000000000000000000000000000 0x1
0x422: V350 = AND 0xffffffffffffffffffffffffffffffffffffffff V344
0x423: V351 = CALLER
0x424: V352 = EQ V351 V350
0x425: V353 = 0x42d
0x428: JUMPI 0x42d V352
---
Entry stack: [V11, 0xf5, V102]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0xf5, V102, 0x0]

================================

Block 0x429
[0x429:0x42c]
---
Predecessors: [0x415]
Successors: []
---
0x429 PUSH1 0x0
0x42b DUP1
0x42c REVERT
---
0x429: V354 = 0x0
0x42c: REVERT 0x0 0x0
---
Entry stack: [V11, 0xf5, V102, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf5, V102, 0x0]

================================

Block 0x42d
[0x42d:0x48e]
---
Predecessors: [0x415]
Successors: [0xf5]
---
0x42d JUMPDEST
0x42e PUSH1 0x1
0x430 DUP1
0x431 SLOAD
0x432 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x447 NOT
0x448 AND
0x449 PUSH1 0x1
0x44b PUSH1 0xa0
0x44d PUSH1 0x2
0x44f EXP
0x450 SUB
0x451 DUP5
0x452 DUP2
0x453 AND
0x454 SWAP2
0x455 SWAP1
0x456 SWAP2
0x457 OR
0x458 SWAP2
0x459 DUP3
0x45a SWAP1
0x45b SSTORE
0x45c PUSH1 0x40
0x45e MLOAD
0x45f SWAP2
0x460 AND
0x461 SWAP1
0x462 PUSH32 0x1a454d97cd48a735ad4ea17a996af35e8f6ec24874108899a980d2b32e33c259
0x483 SWAP1
0x484 PUSH1 0x0
0x486 SWAP1
0x487 LOG2
0x488 POP
0x489 PUSH1 0x1
0x48b SWAP2
0x48c SWAP1
0x48d POP
0x48e JUMP
---
0x42d: JUMPDEST 
0x42e: V355 = 0x1
0x431: V356 = S[0x1]
0x432: V357 = 0xffffffffffffffffffffffffffffffffffffffff
0x447: V358 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x448: V359 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V356
0x449: V360 = 0x1
0x44b: V361 = 0xa0
0x44d: V362 = 0x2
0x44f: V363 = EXP 0x2 0xa0
0x450: V364 = SUB 0x10000000000000000000000000000000000000000 0x1
0x453: V365 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x457: V366 = OR V365 V359
0x45b: S[0x1] = V366
0x45c: V367 = 0x40
0x45e: V368 = M[0x40]
0x460: V369 = AND V366 0xffffffffffffffffffffffffffffffffffffffff
0x462: V370 = 0x1a454d97cd48a735ad4ea17a996af35e8f6ec24874108899a980d2b32e33c259
0x484: V371 = 0x0
0x487: LOG V368 0x0 0x1a454d97cd48a735ad4ea17a996af35e8f6ec24874108899a980d2b32e33c259 V369
0x489: V372 = 0x1
0x48e: JUMP 0xf5
---
Entry stack: [V11, 0xf5, V102, 0x0]
Stack pops: 3
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x48f
[0x48f:0x4a1]
---
Predecessors: [0x15d]
Successors: [0x4a2, 0x4a6]
---
0x48f JUMPDEST
0x490 PUSH1 0x0
0x492 PUSH1 0x1
0x494 PUSH1 0xa0
0x496 PUSH1 0x2
0x498 EXP
0x499 SUB
0x49a DUP3
0x49b AND
0x49c ISZERO
0x49d ISZERO
0x49e PUSH2 0x4a6
0x4a1 JUMPI
---
0x48f: JUMPDEST 
0x490: V373 = 0x0
0x492: V374 = 0x1
0x494: V375 = 0xa0
0x496: V376 = 0x2
0x498: V377 = EXP 0x2 0xa0
0x499: V378 = SUB 0x10000000000000000000000000000000000000000 0x1
0x49b: V379 = AND V116 0xffffffffffffffffffffffffffffffffffffffff
0x49c: V380 = ISZERO V379
0x49d: V381 = ISZERO V380
0x49e: V382 = 0x4a6
0x4a1: JUMPI 0x4a6 V381
---
Entry stack: [V11, 0x11e, V116]
Stack pops: 1
Stack additions: [S0, 0x0]
Exit stack: [V11, 0x11e, V116, 0x0]

================================

Block 0x4a2
[0x4a2:0x4a5]
---
Predecessors: [0x48f]
Successors: []
---
0x4a2 PUSH1 0x0
0x4a4 DUP1
0x4a5 REVERT
---
0x4a2: V383 = 0x0
0x4a5: REVERT 0x0 0x0
---
Entry stack: [V11, 0x11e, V116, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x11e, V116, 0x0]

================================

Block 0x4a6
[0x4a6:0x502]
---
Predecessors: [0x48f]
Successors: [0x503, 0x507]
---
0x4a6 JUMPDEST
0x4a7 PUSH1 0x40
0x4a9 DUP1
0x4aa MLOAD
0x4ab PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x4cc DUP2
0x4cd MSTORE
0x4ce ADDRESS
0x4cf PUSH1 0x4
0x4d1 DUP3
0x4d2 ADD
0x4d3 MSTORE
0x4d4 SWAP1
0x4d5 MLOAD
0x4d6 PUSH1 0x1
0x4d8 PUSH1 0xa0
0x4da PUSH1 0x2
0x4dc EXP
0x4dd SUB
0x4de DUP5
0x4df AND
0x4e0 SWAP2
0x4e1 PUSH4 0x70a08231
0x4e6 SWAP2
0x4e7 PUSH1 0x24
0x4e9 DUP1
0x4ea DUP4
0x4eb ADD
0x4ec SWAP3
0x4ed PUSH1 0x20
0x4ef SWAP3
0x4f0 SWAP2
0x4f1 SWAP1
0x4f2 DUP3
0x4f3 SWAP1
0x4f4 SUB
0x4f5 ADD
0x4f6 DUP2
0x4f7 PUSH1 0x0
0x4f9 DUP8
0x4fa DUP1
0x4fb EXTCODESIZE
0x4fc ISZERO
0x4fd DUP1
0x4fe ISZERO
0x4ff PUSH2 0x507
0x502 JUMPI
---
0x4a6: JUMPDEST 
0x4a7: V384 = 0x40
0x4aa: V385 = M[0x40]
0x4ab: V386 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x4cd: M[V385] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x4ce: V387 = ADDRESS
0x4cf: V388 = 0x4
0x4d2: V389 = ADD V385 0x4
0x4d3: M[V389] = V387
0x4d5: V390 = M[0x40]
0x4d6: V391 = 0x1
0x4d8: V392 = 0xa0
0x4da: V393 = 0x2
0x4dc: V394 = EXP 0x2 0xa0
0x4dd: V395 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4df: V396 = AND V116 0xffffffffffffffffffffffffffffffffffffffff
0x4e1: V397 = 0x70a08231
0x4e7: V398 = 0x24
0x4eb: V399 = ADD V385 0x24
0x4ed: V400 = 0x20
0x4f4: V401 = SUB V385 V390
0x4f5: V402 = ADD V401 0x24
0x4f7: V403 = 0x0
0x4fb: V404 = EXTCODESIZE V396
0x4fc: V405 = ISZERO V404
0x4fe: V406 = ISZERO V405
0x4ff: V407 = 0x507
0x502: JUMPI 0x507 V406
---
Entry stack: [V11, 0x11e, V116, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V396, 0x70a08231, V399, 0x20, V390, V402, V390, 0x0, V396, V405]
Exit stack: [V11, 0x11e, V116, 0x0, V396, 0x70a08231, V399, 0x20, V390, V402, V390, 0x0, V396, V405]

================================

Block 0x503
[0x503:0x506]
---
Predecessors: [0x4a6]
Successors: []
---
0x503 PUSH1 0x0
0x505 DUP1
0x506 REVERT
---
0x503: V408 = 0x0
0x506: REVERT 0x0 0x0
---
Entry stack: [V11, 0x11e, V116, 0x0, V396, 0x70a08231, V399, 0x20, V390, V402, V390, 0x0, V396, V405]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x11e, V116, 0x0, V396, 0x70a08231, V399, 0x20, V390, V402, V390, 0x0, V396, V405]

================================

Block 0x507
[0x507:0x511]
---
Predecessors: [0x4a6]
Successors: [0x512, 0x51b]
---
0x507 JUMPDEST
0x508 POP
0x509 GAS
0x50a CALL
0x50b ISZERO
0x50c DUP1
0x50d ISZERO
0x50e PUSH2 0x51b
0x511 JUMPI
---
0x507: JUMPDEST 
0x509: V409 = GAS
0x50a: V410 = CALL V409 V396 0x0 V390 V402 V390 0x20
0x50b: V411 = ISZERO V410
0x50d: V412 = ISZERO V411
0x50e: V413 = 0x51b
0x511: JUMPI 0x51b V412
---
Entry stack: [V11, 0x11e, V116, 0x0, V396, 0x70a08231, V399, 0x20, V390, V402, V390, 0x0, V396, V405]
Stack pops: 7
Stack additions: [V411]
Exit stack: [V11, 0x11e, V116, 0x0, V396, 0x70a08231, V399, V411]

================================

Block 0x512
[0x512:0x51a]
---
Predecessors: [0x507]
Successors: []
---
0x512 RETURNDATASIZE
0x513 PUSH1 0x0
0x515 DUP1
0x516 RETURNDATACOPY
0x517 RETURNDATASIZE
0x518 PUSH1 0x0
0x51a REVERT
---
0x512: V414 = RETURNDATASIZE
0x513: V415 = 0x0
0x516: RETURNDATACOPY 0x0 0x0 V414
0x517: V416 = RETURNDATASIZE
0x518: V417 = 0x0
0x51a: REVERT 0x0 V416
---
Entry stack: [V11, 0x11e, V116, 0x0, V396, 0x70a08231, V399, V411]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x11e, V116, 0x0, V396, 0x70a08231, V399, V411]

================================

Block 0x51b
[0x51b:0x52c]
---
Predecessors: [0x507]
Successors: [0x52d, 0x531]
---
0x51b JUMPDEST
0x51c POP
0x51d POP
0x51e POP
0x51f POP
0x520 PUSH1 0x40
0x522 MLOAD
0x523 RETURNDATASIZE
0x524 PUSH1 0x20
0x526 DUP2
0x527 LT
0x528 ISZERO
0x529 PUSH2 0x531
0x52c JUMPI
---
0x51b: JUMPDEST 
0x520: V418 = 0x40
0x522: V419 = M[0x40]
0x523: V420 = RETURNDATASIZE
0x524: V421 = 0x20
0x527: V422 = LT V420 0x20
0x528: V423 = ISZERO V422
0x529: V424 = 0x531
0x52c: JUMPI 0x531 V423
---
Entry stack: [V11, 0x11e, V116, 0x0, V396, 0x70a08231, V399, V411]
Stack pops: 4
Stack additions: [V419, V420]
Exit stack: [V11, 0x11e, V116, 0x0, V419, V420]

================================

Block 0x52d
[0x52d:0x530]
---
Predecessors: [0x51b]
Successors: []
---
0x52d PUSH1 0x0
0x52f DUP1
0x530 REVERT
---
0x52d: V425 = 0x0
0x530: REVERT 0x0 0x0
---
Entry stack: [V11, 0x11e, V116, 0x0, V419, V420]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x11e, V116, 0x0, V419, V420]

================================

Block 0x531
[0x531:0x538]
---
Predecessors: [0x51b]
Successors: [0x11e]
---
0x531 JUMPDEST
0x532 POP
0x533 MLOAD
0x534 SWAP3
0x535 SWAP2
0x536 POP
0x537 POP
0x538 JUMP
---
0x531: JUMPDEST 
0x533: V426 = M[V419]
0x538: JUMP 0x11e
---
Entry stack: [V11, 0x11e, V116, 0x0, V419, V420]
Stack pops: 5
Stack additions: [V426]
Exit stack: [V11, V426]

================================

Block 0x539
[0x539:0x54c]
---
Predecessors: [0x17e]
Successors: [0x54d, 0x551]
---
0x539 JUMPDEST
0x53a PUSH1 0x0
0x53c DUP1
0x53d SLOAD
0x53e PUSH1 0x1
0x540 PUSH1 0xa0
0x542 PUSH1 0x2
0x544 EXP
0x545 SUB
0x546 AND
0x547 CALLER
0x548 EQ
0x549 PUSH2 0x551
0x54c JUMPI
---
0x539: JUMPDEST 
0x53a: V427 = 0x0
0x53d: V428 = S[0x0]
0x53e: V429 = 0x1
0x540: V430 = 0xa0
0x542: V431 = 0x2
0x544: V432 = EXP 0x2 0xa0
0x545: V433 = SUB 0x10000000000000000000000000000000000000000 0x1
0x546: V434 = AND 0xffffffffffffffffffffffffffffffffffffffff V428
0x547: V435 = CALLER
0x548: V436 = EQ V435 V434
0x549: V437 = 0x551
0x54c: JUMPI 0x551 V436
---
Entry stack: [V11, 0xf5]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0xf5, 0x0]

================================

Block 0x54d
[0x54d:0x550]
---
Predecessors: [0x539]
Successors: []
---
0x54d PUSH1 0x0
0x54f DUP1
0x550 REVERT
---
0x54d: V438 = 0x0
0x550: REVERT 0x0 0x0
---
Entry stack: [V11, 0xf5, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf5, 0x0]

================================

Block 0x551
[0x551:0x5c8]
---
Predecessors: [0x539]
Successors: [0x5c9, 0x5d2]
---
0x551 JUMPDEST
0x552 PUSH1 0x0
0x554 SLOAD
0x555 PUSH1 0x40
0x557 DUP1
0x558 MLOAD
0x559 ADDRESS
0x55a BALANCE
0x55b DUP2
0x55c MSTORE
0x55d SWAP1
0x55e MLOAD
0x55f PUSH1 0x1
0x561 PUSH1 0xa0
0x563 PUSH1 0x2
0x565 EXP
0x566 SUB
0x567 SWAP1
0x568 SWAP3
0x569 AND
0x56a SWAP2
0x56b CALLER
0x56c SWAP2
0x56d PUSH32 0x9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb
0x58e SWAP2
0x58f SWAP1
0x590 DUP2
0x591 SWAP1
0x592 SUB
0x593 PUSH1 0x20
0x595 ADD
0x596 SWAP1
0x597 LOG3
0x598 PUSH1 0x0
0x59a DUP1
0x59b SLOAD
0x59c PUSH1 0x40
0x59e MLOAD
0x59f PUSH1 0x1
0x5a1 PUSH1 0xa0
0x5a3 PUSH1 0x2
0x5a5 EXP
0x5a6 SUB
0x5a7 SWAP1
0x5a8 SWAP2
0x5a9 AND
0x5aa SWAP2
0x5ab ADDRESS
0x5ac BALANCE
0x5ad DUP1
0x5ae ISZERO
0x5af PUSH2 0x8fc
0x5b2 MUL
0x5b3 SWAP3
0x5b4 SWAP1
0x5b5 SWAP2
0x5b6 DUP2
0x5b7 DUP2
0x5b8 DUP2
0x5b9 DUP6
0x5ba DUP9
0x5bb DUP9
0x5bc CALL
0x5bd SWAP4
0x5be POP
0x5bf POP
0x5c0 POP
0x5c1 POP
0x5c2 ISZERO
0x5c3 DUP1
0x5c4 ISZERO
0x5c5 PUSH2 0x5d2
0x5c8 JUMPI
---
0x551: JUMPDEST 
0x552: V439 = 0x0
0x554: V440 = S[0x0]
0x555: V441 = 0x40
0x558: V442 = M[0x40]
0x559: V443 = ADDRESS
0x55a: V444 = BALANCE V443
0x55c: M[V442] = V444
0x55e: V445 = M[0x40]
0x55f: V446 = 0x1
0x561: V447 = 0xa0
0x563: V448 = 0x2
0x565: V449 = EXP 0x2 0xa0
0x566: V450 = SUB 0x10000000000000000000000000000000000000000 0x1
0x569: V451 = AND V440 0xffffffffffffffffffffffffffffffffffffffff
0x56b: V452 = CALLER
0x56d: V453 = 0x9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb
0x592: V454 = SUB V442 V445
0x593: V455 = 0x20
0x595: V456 = ADD 0x20 V454
0x597: LOG V445 V456 0x9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb V452 V451
0x598: V457 = 0x0
0x59b: V458 = S[0x0]
0x59c: V459 = 0x40
0x59e: V460 = M[0x40]
0x59f: V461 = 0x1
0x5a1: V462 = 0xa0
0x5a3: V463 = 0x2
0x5a5: V464 = EXP 0x2 0xa0
0x5a6: V465 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5a9: V466 = AND V458 0xffffffffffffffffffffffffffffffffffffffff
0x5ab: V467 = ADDRESS
0x5ac: V468 = BALANCE V467
0x5ae: V469 = ISZERO V468
0x5af: V470 = 0x8fc
0x5b2: V471 = MUL 0x8fc V469
0x5bc: V472 = CALL V471 V466 V468 V460 0x0 V460 0x0
0x5c2: V473 = ISZERO V472
0x5c4: V474 = ISZERO V473
0x5c5: V475 = 0x5d2
0x5c8: JUMPI 0x5d2 V474
---
Entry stack: [V11, 0xf5, 0x0]
Stack pops: 0
Stack additions: [V473]
Exit stack: [V11, 0xf5, 0x0, V473]

================================

Block 0x5c9
[0x5c9:0x5d1]
---
Predecessors: [0x551]
Successors: []
---
0x5c9 RETURNDATASIZE
0x5ca PUSH1 0x0
0x5cc DUP1
0x5cd RETURNDATACOPY
0x5ce RETURNDATASIZE
0x5cf PUSH1 0x0
0x5d1 REVERT
---
0x5c9: V476 = RETURNDATASIZE
0x5ca: V477 = 0x0
0x5cd: RETURNDATACOPY 0x0 0x0 V476
0x5ce: V478 = RETURNDATASIZE
0x5cf: V479 = 0x0
0x5d1: REVERT 0x0 V478
---
Entry stack: [V11, 0xf5, 0x0, V473]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf5, 0x0, V473]

================================

Block 0x5d2
[0x5d2:0x5d9]
---
Predecessors: [0x551]
Successors: [0xf5]
---
0x5d2 JUMPDEST
0x5d3 POP
0x5d4 PUSH1 0x1
0x5d6 SWAP1
0x5d7 POP
0x5d8 SWAP1
0x5d9 JUMP
---
0x5d2: JUMPDEST 
0x5d4: V480 = 0x1
0x5d9: JUMP 0xf5
---
Entry stack: [V11, 0xf5, 0x0, V473]
Stack pops: 3
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x5da
[0x5da:0x5ed]
---
Predecessors: [0x193]
Successors: [0x5ee, 0x5fd]
---
0x5da JUMPDEST
0x5db PUSH1 0x0
0x5dd SLOAD
0x5de PUSH1 0x1
0x5e0 PUSH1 0xa0
0x5e2 PUSH1 0x2
0x5e4 EXP
0x5e5 SUB
0x5e6 AND
0x5e7 CALLER
0x5e8 EQ
0x5e9 DUP1
0x5ea PUSH2 0x5fd
0x5ed JUMPI
---
0x5da: JUMPDEST 
0x5db: V481 = 0x0
0x5dd: V482 = S[0x0]
0x5de: V483 = 0x1
0x5e0: V484 = 0xa0
0x5e2: V485 = 0x2
0x5e4: V486 = EXP 0x2 0xa0
0x5e5: V487 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5e6: V488 = AND 0xffffffffffffffffffffffffffffffffffffffff V482
0x5e7: V489 = CALLER
0x5e8: V490 = EQ V489 V488
0x5ea: V491 = 0x5fd
0x5ed: JUMPI 0x5fd V490
---
Entry stack: [V11, 0xcf, V136, V138]
Stack pops: 0
Stack additions: [V490]
Exit stack: [V11, 0xcf, V136, V138, V490]

================================

Block 0x5ee
[0x5ee:0x5fc]
---
Predecessors: [0x5da]
Successors: [0x5fd]
---
0x5ee POP
0x5ef PUSH1 0x1
0x5f1 SLOAD
0x5f2 PUSH1 0x1
0x5f4 PUSH1 0xa0
0x5f6 PUSH1 0x2
0x5f8 EXP
0x5f9 SUB
0x5fa AND
0x5fb CALLER
0x5fc EQ
---
0x5ef: V492 = 0x1
0x5f1: V493 = S[0x1]
0x5f2: V494 = 0x1
0x5f4: V495 = 0xa0
0x5f6: V496 = 0x2
0x5f8: V497 = EXP 0x2 0xa0
0x5f9: V498 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5fa: V499 = AND 0xffffffffffffffffffffffffffffffffffffffff V493
0x5fb: V500 = CALLER
0x5fc: V501 = EQ V500 V499
---
Entry stack: [V11, 0xcf, V136, V138, V490]
Stack pops: 1
Stack additions: [V501]
Exit stack: [V11, 0xcf, V136, V138, V501]

================================

Block 0x5fd
[0x5fd:0x603]
---
Predecessors: [0x5da, 0x5ee]
Successors: [0x604, 0x608]
---
0x5fd JUMPDEST
0x5fe ISZERO
0x5ff ISZERO
0x600 PUSH2 0x608
0x603 JUMPI
---
0x5fd: JUMPDEST 
0x5fe: V502 = ISZERO S0
0x5ff: V503 = ISZERO V502
0x600: V504 = 0x608
0x603: JUMPI 0x608 V503
---
Entry stack: [V11, 0xcf, V136, V138, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xcf, V136, V138]

================================

Block 0x604
[0x604:0x607]
---
Predecessors: [0x5fd]
Successors: []
---
0x604 PUSH1 0x0
0x606 DUP1
0x607 REVERT
---
0x604: V505 = 0x0
0x607: REVERT 0x0 0x0
---
Entry stack: [V11, 0xcf, V136, V138]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, V136, V138]

================================

Block 0x608
[0x608:0x618]
---
Predecessors: [0x5fd]
Successors: [0x619, 0x61d]
---
0x608 JUMPDEST
0x609 PUSH1 0x1
0x60b PUSH1 0xa0
0x60d PUSH1 0x2
0x60f EXP
0x610 SUB
0x611 DUP3
0x612 AND
0x613 ISZERO
0x614 ISZERO
0x615 PUSH2 0x61d
0x618 JUMPI
---
0x608: JUMPDEST 
0x609: V506 = 0x1
0x60b: V507 = 0xa0
0x60d: V508 = 0x2
0x60f: V509 = EXP 0x2 0xa0
0x610: V510 = SUB 0x10000000000000000000000000000000000000000 0x1
0x612: V511 = AND V136 0xffffffffffffffffffffffffffffffffffffffff
0x613: V512 = ISZERO V511
0x614: V513 = ISZERO V512
0x615: V514 = 0x61d
0x618: JUMPI 0x61d V513
---
Entry stack: [V11, 0xcf, V136, V138]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0xcf, V136, V138]

================================

Block 0x619
[0x619:0x61c]
---
Predecessors: [0x608]
Successors: []
---
0x619 PUSH1 0x0
0x61b DUP1
0x61c REVERT
---
0x619: V515 = 0x0
0x61c: REVERT 0x0 0x0
---
Entry stack: [V11, 0xcf, V136, V138]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, V136, V138]

================================

Block 0x61d
[0x61d:0x624]
---
Predecessors: [0x608]
Successors: [0x625, 0x642]
---
0x61d JUMPDEST
0x61e DUP1
0x61f ISZERO
0x620 ISZERO
0x621 PUSH2 0x642
0x624 JUMPI
---
0x61d: JUMPDEST 
0x61f: V516 = ISZERO V138
0x620: V517 = ISZERO V516
0x621: V518 = 0x642
0x624: JUMPI 0x642 V517
---
Entry stack: [V11, 0xcf, V136, V138]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xcf, V136, V138]

================================

Block 0x625
[0x625:0x641]
---
Predecessors: [0x61d]
Successors: [0x65e]
---
0x625 PUSH1 0x1
0x627 PUSH1 0xa0
0x629 PUSH1 0x2
0x62b EXP
0x62c SUB
0x62d DUP3
0x62e AND
0x62f PUSH1 0x0
0x631 SWAP1
0x632 DUP2
0x633 MSTORE
0x634 PUSH1 0x2
0x636 PUSH1 0x20
0x638 MSTORE
0x639 PUSH1 0x40
0x63b DUP2
0x63c SHA3
0x63d SSTORE
0x63e PUSH2 0x65e
0x641 JUMP
---
0x625: V519 = 0x1
0x627: V520 = 0xa0
0x629: V521 = 0x2
0x62b: V522 = EXP 0x2 0xa0
0x62c: V523 = SUB 0x10000000000000000000000000000000000000000 0x1
0x62e: V524 = AND V136 0xffffffffffffffffffffffffffffffffffffffff
0x62f: V525 = 0x0
0x633: M[0x0] = V524
0x634: V526 = 0x2
0x636: V527 = 0x20
0x638: M[0x20] = 0x2
0x639: V528 = 0x40
0x63c: V529 = SHA3 0x0 0x40
0x63d: S[V529] = 0x0
0x63e: V530 = 0x65e
0x641: JUMP 0x65e
---
Entry stack: [V11, 0xcf, V136, V138]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0xcf, V136, V138]

================================

Block 0x642
[0x642:0x65d]
---
Predecessors: [0x61d]
Successors: [0x65e]
---
0x642 JUMPDEST
0x643 PUSH1 0x1
0x645 PUSH1 0xa0
0x647 PUSH1 0x2
0x649 EXP
0x64a SUB
0x64b DUP3
0x64c AND
0x64d PUSH1 0x0
0x64f SWAP1
0x650 DUP2
0x651 MSTORE
0x652 PUSH1 0x2
0x654 PUSH1 0x20
0x656 MSTORE
0x657 PUSH1 0x40
0x659 SWAP1
0x65a SHA3
0x65b DUP2
0x65c SWAP1
0x65d SSTORE
---
0x642: JUMPDEST 
0x643: V531 = 0x1
0x645: V532 = 0xa0
0x647: V533 = 0x2
0x649: V534 = EXP 0x2 0xa0
0x64a: V535 = SUB 0x10000000000000000000000000000000000000000 0x1
0x64c: V536 = AND V136 0xffffffffffffffffffffffffffffffffffffffff
0x64d: V537 = 0x0
0x651: M[0x0] = V536
0x652: V538 = 0x2
0x654: V539 = 0x20
0x656: M[0x20] = 0x2
0x657: V540 = 0x40
0x65a: V541 = SHA3 0x0 0x40
0x65d: S[V541] = V138
---
Entry stack: [V11, 0xcf, V136, V138]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0xcf, V136, V138]

================================

Block 0x65e
[0x65e:0x661]
---
Predecessors: [0x625, 0x642]
Successors: [0xcf]
---
0x65e JUMPDEST
0x65f POP
0x660 POP
0x661 JUMP
---
0x65e: JUMPDEST 
0x661: JUMP 0xcf
---
Entry stack: [V11, 0xcf, V136, V138]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x662
[0x662:0x673]
---
Predecessors: [0x1b7]
Successors: [0x11e]
---
0x662 JUMPDEST
0x663 PUSH1 0x2
0x665 PUSH1 0x20
0x667 MSTORE
0x668 PUSH1 0x0
0x66a SWAP1
0x66b DUP2
0x66c MSTORE
0x66d PUSH1 0x40
0x66f SWAP1
0x670 SHA3
0x671 SLOAD
0x672 DUP2
0x673 JUMP
---
0x662: JUMPDEST 
0x663: V542 = 0x2
0x665: V543 = 0x20
0x667: M[0x20] = 0x2
0x668: V544 = 0x0
0x66c: M[0x0] = V152
0x66d: V545 = 0x40
0x670: V546 = SHA3 0x0 0x40
0x671: V547 = S[V546]
0x673: JUMP 0x11e
---
Entry stack: [V11, 0x11e, V152]
Stack pops: 2
Stack additions: [S1, V547]
Exit stack: [V11, 0x11e, V547]

================================

Block 0x674
[0x674:0x682]
---
Predecessors: [0x1d8]
Successors: [0x1e1]
---
0x674 JUMPDEST
0x675 PUSH1 0x0
0x677 SLOAD
0x678 PUSH1 0x1
0x67a PUSH1 0xa0
0x67c PUSH1 0x2
0x67e EXP
0x67f SUB
0x680 AND
0x681 DUP2
0x682 JUMP
---
0x674: JUMPDEST 
0x675: V548 = 0x0
0x677: V549 = S[0x0]
0x678: V550 = 0x1
0x67a: V551 = 0xa0
0x67c: V552 = 0x2
0x67e: V553 = EXP 0x2 0xa0
0x67f: V554 = SUB 0x10000000000000000000000000000000000000000 0x1
0x680: V555 = AND 0xffffffffffffffffffffffffffffffffffffffff V549
0x682: JUMP 0x1e1
---
Entry stack: [V11, 0x1e1]
Stack pops: 1
Stack additions: [S0, V555]
Exit stack: [V11, 0x1e1, V555]

================================

Block 0x683
[0x683:0x697]
---
Predecessors: [0x209]
Successors: [0x698, 0x69c]
---
0x683 JUMPDEST
0x684 PUSH1 0x0
0x686 DUP1
0x687 DUP1
0x688 PUSH1 0x1
0x68a PUSH1 0xa0
0x68c PUSH1 0x2
0x68e EXP
0x68f SUB
0x690 DUP8
0x691 AND
0x692 ISZERO
0x693 ISZERO
0x694 PUSH2 0x69c
0x697 JUMPI
---
0x683: JUMPDEST 
0x684: V556 = 0x0
0x688: V557 = 0x1
0x68a: V558 = 0xa0
0x68c: V559 = 0x2
0x68e: V560 = EXP 0x2 0xa0
0x68f: V561 = SUB 0x10000000000000000000000000000000000000000 0x1
0x691: V562 = AND V197 0xffffffffffffffffffffffffffffffffffffffff
0x692: V563 = ISZERO V562
0x693: V564 = ISZERO V563
0x694: V565 = 0x69c
0x697: JUMPI 0x69c V564
---
Entry stack: [V11, 0xcf, V197, V199, V202, V177]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x0, 0x0, 0x0]
Exit stack: [V11, 0xcf, V197, V199, V202, V177, 0x0, 0x0, 0x0]

================================

Block 0x698
[0x698:0x69b]
---
Predecessors: [0x683]
Successors: []
---
0x698 PUSH1 0x0
0x69a DUP1
0x69b REVERT
---
0x698: V566 = 0x0
0x69b: REVERT 0x0 0x0
---
Entry stack: [V11, 0xcf, V197, V199, V202, V177, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, V197, V199, V202, V177, 0x0, 0x0, 0x0]

================================

Block 0x69c
[0x69c:0x6ac]
---
Predecessors: [0x683]
Successors: [0x6ad, 0x6b1]
---
0x69c JUMPDEST
0x69d PUSH1 0x1
0x69f PUSH1 0xa0
0x6a1 PUSH1 0x2
0x6a3 EXP
0x6a4 SUB
0x6a5 DUP6
0x6a6 AND
0x6a7 ISZERO
0x6a8 ISZERO
0x6a9 PUSH2 0x6b1
0x6ac JUMPI
---
0x69c: JUMPDEST 
0x69d: V567 = 0x1
0x69f: V568 = 0xa0
0x6a1: V569 = 0x2
0x6a3: V570 = EXP 0x2 0xa0
0x6a4: V571 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6a6: V572 = AND V202 0xffffffffffffffffffffffffffffffffffffffff
0x6a7: V573 = ISZERO V572
0x6a8: V574 = ISZERO V573
0x6a9: V575 = 0x6b1
0x6ac: JUMPI 0x6b1 V574
---
Entry stack: [V11, 0xcf, V197, V199, V202, V177, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0xcf, V197, V199, V202, V177, 0x0, 0x0, 0x0]

================================

Block 0x6ad
[0x6ad:0x6b0]
---
Predecessors: [0x69c]
Successors: []
---
0x6ad PUSH1 0x0
0x6af DUP1
0x6b0 REVERT
---
0x6ad: V576 = 0x0
0x6b0: REVERT 0x0 0x0
---
Entry stack: [V11, 0xcf, V197, V199, V202, V177, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, V197, V199, V202, V177, 0x0, 0x0, 0x0]

================================

Block 0x6b1
[0x6b1:0x6b9]
---
Predecessors: [0x69c]
Successors: [0x6ba, 0x6be]
---
0x6b1 JUMPDEST
0x6b2 PUSH1 0x0
0x6b4 DUP7
0x6b5 GT
0x6b6 PUSH2 0x6be
0x6b9 JUMPI
---
0x6b1: JUMPDEST 
0x6b2: V577 = 0x0
0x6b5: V578 = GT V199 0x0
0x6b6: V579 = 0x6be
0x6b9: JUMPI 0x6be V578
---
Entry stack: [V11, 0xcf, V197, V199, V202, V177, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V11, 0xcf, V197, V199, V202, V177, 0x0, 0x0, 0x0]

================================

Block 0x6ba
[0x6ba:0x6bd]
---
Predecessors: [0x6b1]
Successors: []
---
0x6ba PUSH1 0x0
0x6bc DUP1
0x6bd REVERT
---
0x6ba: V580 = 0x0
0x6bd: REVERT 0x0 0x0
---
Entry stack: [V11, 0xcf, V197, V199, V202, V177, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, V197, V199, V202, V177, 0x0, 0x0, 0x0]

================================

Block 0x6be
[0x6be:0x6dc]
---
Predecessors: [0x6b1]
Successors: [0x6dd, 0x6e1]
---
0x6be JUMPDEST
0x6bf PUSH1 0x1
0x6c1 PUSH1 0xa0
0x6c3 PUSH1 0x2
0x6c5 EXP
0x6c6 SUB
0x6c7 DUP6
0x6c8 AND
0x6c9 PUSH1 0x0
0x6cb SWAP1
0x6cc DUP2
0x6cd MSTORE
0x6ce PUSH1 0x2
0x6d0 PUSH1 0x20
0x6d2 MSTORE
0x6d3 PUSH1 0x40
0x6d5 DUP2
0x6d6 SHA3
0x6d7 SLOAD
0x6d8 GT
0x6d9 PUSH2 0x6e1
0x6dc JUMPI
---
0x6be: JUMPDEST 
0x6bf: V581 = 0x1
0x6c1: V582 = 0xa0
0x6c3: V583 = 0x2
0x6c5: V584 = EXP 0x2 0xa0
0x6c6: V585 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6c8: V586 = AND V202 0xffffffffffffffffffffffffffffffffffffffff
0x6c9: V587 = 0x0
0x6cd: M[0x0] = V586
0x6ce: V588 = 0x2
0x6d0: V589 = 0x20
0x6d2: M[0x20] = 0x2
0x6d3: V590 = 0x40
0x6d6: V591 = SHA3 0x0 0x40
0x6d7: V592 = S[V591]
0x6d8: V593 = GT V592 0x0
0x6d9: V594 = 0x6e1
0x6dc: JUMPI 0x6e1 V593
---
Entry stack: [V11, 0xcf, V197, V199, V202, V177, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0xcf, V197, V199, V202, V177, 0x0, 0x0, 0x0]

================================

Block 0x6dd
[0x6dd:0x6e0]
---
Predecessors: [0x6be]
Successors: []
---
0x6dd PUSH1 0x0
0x6df DUP1
0x6e0 REVERT
---
0x6dd: V595 = 0x0
0x6e0: REVERT 0x0 0x0
---
Entry stack: [V11, 0xcf, V197, V199, V202, V177, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, V197, V199, V202, V177, 0x0, 0x0, 0x0]

================================

Block 0x6e1
[0x6e1:0x6ea]
---
Predecessors: [0x6be]
Successors: [0x987]
---
0x6e1 JUMPDEST
0x6e2 PUSH2 0x6eb
0x6e5 DUP6
0x6e6 DUP8
0x6e7 PUSH2 0x987
0x6ea JUMP
---
0x6e1: JUMPDEST 
0x6e2: V596 = 0x6eb
0x6e7: V597 = 0x987
0x6ea: JUMP 0x987
---
Entry stack: [V11, 0xcf, V197, V199, V202, V177, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, 0x6eb, S4, S5]
Exit stack: [V11, 0xcf, V197, V199, V202, V177, 0x0, 0x0, 0x0, 0x6eb, V202, V199]

================================

Block 0x6eb
[0x6eb:0x6f5]
---
Predecessors: [0x987]
Successors: [0x6f6, 0x6fa]
---
0x6eb JUMPDEST
0x6ec SWAP3
0x6ed POP
0x6ee PUSH1 0x0
0x6f0 DUP4
0x6f1 GT
0x6f2 PUSH2 0x6fa
0x6f5 JUMPI
---
0x6eb: JUMPDEST 
0x6ee: V598 = 0x0
0x6f1: V599 = GT V817 0x0
0x6f2: V600 = 0x6fa
0x6f5: JUMPI 0x6fa V599
---
Entry stack: [V11, 0xcf, V197, V199, V202, V177, 0x0, 0x0, 0x0, V817]
Stack pops: 4
Stack additions: [S0, S2, S1]
Exit stack: [V11, 0xcf, V197, V199, V202, V177, V817, 0x0, 0x0]

================================

Block 0x6f6
[0x6f6:0x6f9]
---
Predecessors: [0x6eb]
Successors: []
---
0x6f6 PUSH1 0x0
0x6f8 DUP1
0x6f9 REVERT
---
0x6f6: V601 = 0x0
0x6f9: REVERT 0x0 0x0
---
Entry stack: [V11, 0xcf, V197, V199, V202, V177, V817, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, V197, V199, V202, V177, V817, 0x0, 0x0]

================================

Block 0x6fa
[0x6fa:0x76a]
---
Predecessors: [0x6eb]
Successors: [0x76b, 0x76f]
---
0x6fa JUMPDEST
0x6fb PUSH1 0x40
0x6fd DUP1
0x6fe MLOAD
0x6ff PUSH32 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x720 DUP2
0x721 MSTORE
0x722 PUSH1 0x1
0x724 PUSH1 0xa0
0x726 PUSH1 0x2
0x728 EXP
0x729 SUB
0x72a DUP10
0x72b DUP2
0x72c AND
0x72d PUSH1 0x4
0x72f DUP4
0x730 ADD
0x731 MSTORE
0x732 ADDRESS
0x733 PUSH1 0x24
0x735 DUP4
0x736 ADD
0x737 MSTORE
0x738 PUSH1 0x44
0x73a DUP3
0x73b ADD
0x73c DUP10
0x73d SWAP1
0x73e MSTORE
0x73f SWAP2
0x740 MLOAD
0x741 DUP8
0x742 SWAP5
0x743 POP
0x744 SWAP2
0x745 DUP5
0x746 AND
0x747 SWAP2
0x748 PUSH4 0x23b872dd
0x74d SWAP2
0x74e PUSH1 0x64
0x750 DUP1
0x751 DUP3
0x752 ADD
0x753 SWAP3
0x754 PUSH1 0x20
0x756 SWAP3
0x757 SWAP1
0x758 SWAP2
0x759 SWAP1
0x75a DUP3
0x75b SWAP1
0x75c SUB
0x75d ADD
0x75e DUP2
0x75f PUSH1 0x0
0x761 DUP8
0x762 DUP1
0x763 EXTCODESIZE
0x764 ISZERO
0x765 DUP1
0x766 ISZERO
0x767 PUSH2 0x76f
0x76a JUMPI
---
0x6fa: JUMPDEST 
0x6fb: V602 = 0x40
0x6fe: V603 = M[0x40]
0x6ff: V604 = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x721: M[V603] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x722: V605 = 0x1
0x724: V606 = 0xa0
0x726: V607 = 0x2
0x728: V608 = EXP 0x2 0xa0
0x729: V609 = SUB 0x10000000000000000000000000000000000000000 0x1
0x72c: V610 = AND 0xffffffffffffffffffffffffffffffffffffffff V197
0x72d: V611 = 0x4
0x730: V612 = ADD V603 0x4
0x731: M[V612] = V610
0x732: V613 = ADDRESS
0x733: V614 = 0x24
0x736: V615 = ADD V603 0x24
0x737: M[V615] = V613
0x738: V616 = 0x44
0x73b: V617 = ADD V603 0x44
0x73e: M[V617] = V199
0x740: V618 = M[0x40]
0x746: V619 = AND V202 0xffffffffffffffffffffffffffffffffffffffff
0x748: V620 = 0x23b872dd
0x74e: V621 = 0x64
0x752: V622 = ADD V603 0x64
0x754: V623 = 0x20
0x75c: V624 = SUB V603 V618
0x75d: V625 = ADD V624 0x64
0x75f: V626 = 0x0
0x763: V627 = EXTCODESIZE V619
0x764: V628 = ISZERO V627
0x766: V629 = ISZERO V628
0x767: V630 = 0x76f
0x76a: JUMPI 0x76f V629
---
Entry stack: [V11, 0xcf, V197, V199, V202, V177, V817, 0x0, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S4, S0, V619, 0x23b872dd, V622, 0x20, V618, V625, V618, 0x0, V619, V628]
Exit stack: [V11, 0xcf, V197, V199, V202, V177, V817, V202, 0x0, V619, 0x23b872dd, V622, 0x20, V618, V625, V618, 0x0, V619, V628]

================================

Block 0x76b
[0x76b:0x76e]
---
Predecessors: [0x6fa]
Successors: []
---
0x76b PUSH1 0x0
0x76d DUP1
0x76e REVERT
---
0x76b: V631 = 0x0
0x76e: REVERT 0x0 0x0
---
Entry stack: [V11, 0xcf, V197, V199, V202, V177, V817, V202, 0x0, V619, 0x23b872dd, V622, 0x20, V618, V625, V618, 0x0, V619, V628]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, V197, V199, V202, V177, V817, V202, 0x0, V619, 0x23b872dd, V622, 0x20, V618, V625, V618, 0x0, V619, V628]

================================

Block 0x76f
[0x76f:0x779]
---
Predecessors: [0x6fa]
Successors: [0x77a, 0x783]
---
0x76f JUMPDEST
0x770 POP
0x771 GAS
0x772 CALL
0x773 ISZERO
0x774 DUP1
0x775 ISZERO
0x776 PUSH2 0x783
0x779 JUMPI
---
0x76f: JUMPDEST 
0x771: V632 = GAS
0x772: V633 = CALL V632 V619 0x0 V618 V625 V618 0x20
0x773: V634 = ISZERO V633
0x775: V635 = ISZERO V634
0x776: V636 = 0x783
0x779: JUMPI 0x783 V635
---
Entry stack: [V11, 0xcf, V197, V199, V202, V177, V817, V202, 0x0, V619, 0x23b872dd, V622, 0x20, V618, V625, V618, 0x0, V619, V628]
Stack pops: 7
Stack additions: [V634]
Exit stack: [V11, 0xcf, V197, V199, V202, V177, V817, V202, 0x0, V619, 0x23b872dd, V622, V634]

================================

Block 0x77a
[0x77a:0x782]
---
Predecessors: [0x76f]
Successors: []
---
0x77a RETURNDATASIZE
0x77b PUSH1 0x0
0x77d DUP1
0x77e RETURNDATACOPY
0x77f RETURNDATASIZE
0x780 PUSH1 0x0
0x782 REVERT
---
0x77a: V637 = RETURNDATASIZE
0x77b: V638 = 0x0
0x77e: RETURNDATACOPY 0x0 0x0 V637
0x77f: V639 = RETURNDATASIZE
0x780: V640 = 0x0
0x782: REVERT 0x0 V639
---
Entry stack: [V11, 0xcf, V197, V199, V202, V177, V817, V202, 0x0, V619, 0x23b872dd, V622, V634]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, V197, V199, V202, V177, V817, V202, 0x0, V619, 0x23b872dd, V622, V634]

================================

Block 0x783
[0x783:0x794]
---
Predecessors: [0x76f]
Successors: [0x795, 0x799]
---
0x783 JUMPDEST
0x784 POP
0x785 POP
0x786 POP
0x787 POP
0x788 PUSH1 0x40
0x78a MLOAD
0x78b RETURNDATASIZE
0x78c PUSH1 0x20
0x78e DUP2
0x78f LT
0x790 ISZERO
0x791 PUSH2 0x799
0x794 JUMPI
---
0x783: JUMPDEST 
0x788: V641 = 0x40
0x78a: V642 = M[0x40]
0x78b: V643 = RETURNDATASIZE
0x78c: V644 = 0x20
0x78f: V645 = LT V643 0x20
0x790: V646 = ISZERO V645
0x791: V647 = 0x799
0x794: JUMPI 0x799 V646
---
Entry stack: [V11, 0xcf, V197, V199, V202, V177, V817, V202, 0x0, V619, 0x23b872dd, V622, V634]
Stack pops: 4
Stack additions: [V642, V643]
Exit stack: [V11, 0xcf, V197, V199, V202, V177, V817, V202, 0x0, V642, V643]

================================

Block 0x795
[0x795:0x798]
---
Predecessors: [0x783]
Successors: []
---
0x795 PUSH1 0x0
0x797 DUP1
0x798 REVERT
---
0x795: V648 = 0x0
0x798: REVERT 0x0 0x0
---
Entry stack: [V11, 0xcf, V197, V199, V202, V177, V817, V202, 0x0, V642, V643]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, V197, V199, V202, V177, V817, V202, 0x0, V642, V643]

================================

Block 0x799
[0x799:0x7a1]
---
Predecessors: [0x783]
Successors: [0x7a2, 0x7a6]
---
0x799 JUMPDEST
0x79a POP
0x79b MLOAD
0x79c ISZERO
0x79d ISZERO
0x79e PUSH2 0x7a6
0x7a1 JUMPI
---
0x799: JUMPDEST 
0x79b: V649 = M[V642]
0x79c: V650 = ISZERO V649
0x79d: V651 = ISZERO V650
0x79e: V652 = 0x7a6
0x7a1: JUMPI 0x7a6 V651
---
Entry stack: [V11, 0xcf, V197, V199, V202, V177, V817, V202, 0x0, V642, V643]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0xcf, V197, V199, V202, V177, V817, V202, 0x0]

================================

Block 0x7a2
[0x7a2:0x7a5]
---
Predecessors: [0x799]
Successors: []
---
0x7a2 PUSH1 0x0
0x7a4 DUP1
0x7a5 REVERT
---
0x7a2: V653 = 0x0
0x7a5: REVERT 0x0 0x0
---
Entry stack: [V11, 0xcf, V197, V199, V202, V177, V817, V202, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, V197, V199, V202, V177, V817, V202, 0x0]

================================

Block 0x7a6
[0x7a6:0x814]
---
Predecessors: [0x799]
Successors: [0x815, 0x819]
---
0x7a6 JUMPDEST
0x7a7 POP
0x7a8 PUSH1 0x5
0x7aa SLOAD
0x7ab PUSH1 0x40
0x7ad DUP1
0x7ae MLOAD
0x7af PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x7d0 DUP2
0x7d1 MSTORE
0x7d2 PUSH1 0x1
0x7d4 PUSH1 0xa0
0x7d6 PUSH1 0x2
0x7d8 EXP
0x7d9 SUB
0x7da DUP10
0x7db DUP2
0x7dc AND
0x7dd PUSH1 0x4
0x7df DUP4
0x7e0 ADD
0x7e1 MSTORE
0x7e2 PUSH1 0x24
0x7e4 DUP3
0x7e5 ADD
0x7e6 DUP7
0x7e7 SWAP1
0x7e8 MSTORE
0x7e9 SWAP2
0x7ea MLOAD
0x7eb SWAP2
0x7ec SWAP1
0x7ed SWAP3
0x7ee AND
0x7ef SWAP2
0x7f0 DUP3
0x7f1 SWAP2
0x7f2 PUSH4 0xa9059cbb
0x7f7 SWAP2
0x7f8 PUSH1 0x44
0x7fa DUP1
0x7fb DUP3
0x7fc ADD
0x7fd SWAP3
0x7fe PUSH1 0x20
0x800 SWAP3
0x801 SWAP1
0x802 SWAP2
0x803 SWAP1
0x804 DUP3
0x805 SWAP1
0x806 SUB
0x807 ADD
0x808 DUP2
0x809 PUSH1 0x0
0x80b DUP8
0x80c DUP1
0x80d EXTCODESIZE
0x80e ISZERO
0x80f DUP1
0x810 ISZERO
0x811 PUSH2 0x819
0x814 JUMPI
---
0x7a6: JUMPDEST 
0x7a8: V654 = 0x5
0x7aa: V655 = S[0x5]
0x7ab: V656 = 0x40
0x7ae: V657 = M[0x40]
0x7af: V658 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x7d1: M[V657] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x7d2: V659 = 0x1
0x7d4: V660 = 0xa0
0x7d6: V661 = 0x2
0x7d8: V662 = EXP 0x2 0xa0
0x7d9: V663 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7dc: V664 = AND 0xffffffffffffffffffffffffffffffffffffffff V197
0x7dd: V665 = 0x4
0x7e0: V666 = ADD V657 0x4
0x7e1: M[V666] = V664
0x7e2: V667 = 0x24
0x7e5: V668 = ADD V657 0x24
0x7e8: M[V668] = V817
0x7ea: V669 = M[0x40]
0x7ee: V670 = AND V655 0xffffffffffffffffffffffffffffffffffffffff
0x7f2: V671 = 0xa9059cbb
0x7f8: V672 = 0x44
0x7fc: V673 = ADD V657 0x44
0x7fe: V674 = 0x20
0x806: V675 = SUB V657 V669
0x807: V676 = ADD V675 0x44
0x809: V677 = 0x0
0x80d: V678 = EXTCODESIZE V670
0x80e: V679 = ISZERO V678
0x810: V680 = ISZERO V679
0x811: V681 = 0x819
0x814: JUMPI 0x819 V680
---
Entry stack: [V11, 0xcf, V197, V199, V202, V177, V817, V202, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, V670, V670, 0xa9059cbb, V673, 0x20, V669, V676, V669, 0x0, V670, V679]
Exit stack: [V11, 0xcf, V197, V199, V202, V177, V817, V202, V670, V670, 0xa9059cbb, V673, 0x20, V669, V676, V669, 0x0, V670, V679]

================================

Block 0x815
[0x815:0x818]
---
Predecessors: [0x7a6]
Successors: []
---
0x815 PUSH1 0x0
0x817 DUP1
0x818 REVERT
---
0x815: V682 = 0x0
0x818: REVERT 0x0 0x0
---
Entry stack: [V11, 0xcf, V197, V199, V202, V177, V817, V202, V670, V670, 0xa9059cbb, V673, 0x20, V669, V676, V669, 0x0, V670, V679]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, V197, V199, V202, V177, V817, V202, V670, V670, 0xa9059cbb, V673, 0x20, V669, V676, V669, 0x0, V670, V679]

================================

Block 0x819
[0x819:0x823]
---
Predecessors: [0x7a6]
Successors: [0x824, 0x82d]
---
0x819 JUMPDEST
0x81a POP
0x81b GAS
0x81c CALL
0x81d ISZERO
0x81e DUP1
0x81f ISZERO
0x820 PUSH2 0x82d
0x823 JUMPI
---
0x819: JUMPDEST 
0x81b: V683 = GAS
0x81c: V684 = CALL V683 V670 0x0 V669 V676 V669 0x20
0x81d: V685 = ISZERO V684
0x81f: V686 = ISZERO V685
0x820: V687 = 0x82d
0x823: JUMPI 0x82d V686
---
Entry stack: [V11, 0xcf, V197, V199, V202, V177, V817, V202, V670, V670, 0xa9059cbb, V673, 0x20, V669, V676, V669, 0x0, V670, V679]
Stack pops: 7
Stack additions: [V685]
Exit stack: [V11, 0xcf, V197, V199, V202, V177, V817, V202, V670, V670, 0xa9059cbb, V673, V685]

================================

Block 0x824
[0x824:0x82c]
---
Predecessors: [0x819]
Successors: []
---
0x824 RETURNDATASIZE
0x825 PUSH1 0x0
0x827 DUP1
0x828 RETURNDATACOPY
0x829 RETURNDATASIZE
0x82a PUSH1 0x0
0x82c REVERT
---
0x824: V688 = RETURNDATASIZE
0x825: V689 = 0x0
0x828: RETURNDATACOPY 0x0 0x0 V688
0x829: V690 = RETURNDATASIZE
0x82a: V691 = 0x0
0x82c: REVERT 0x0 V690
---
Entry stack: [V11, 0xcf, V197, V199, V202, V177, V817, V202, V670, V670, 0xa9059cbb, V673, V685]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, V197, V199, V202, V177, V817, V202, V670, V670, 0xa9059cbb, V673, V685]

================================

Block 0x82d
[0x82d:0x83e]
---
Predecessors: [0x819]
Successors: [0x83f, 0x843]
---
0x82d JUMPDEST
0x82e POP
0x82f POP
0x830 POP
0x831 POP
0x832 PUSH1 0x40
0x834 MLOAD
0x835 RETURNDATASIZE
0x836 PUSH1 0x20
0x838 DUP2
0x839 LT
0x83a ISZERO
0x83b PUSH2 0x843
0x83e JUMPI
---
0x82d: JUMPDEST 
0x832: V692 = 0x40
0x834: V693 = M[0x40]
0x835: V694 = RETURNDATASIZE
0x836: V695 = 0x20
0x839: V696 = LT V694 0x20
0x83a: V697 = ISZERO V696
0x83b: V698 = 0x843
0x83e: JUMPI 0x843 V697
---
Entry stack: [V11, 0xcf, V197, V199, V202, V177, V817, V202, V670, V670, 0xa9059cbb, V673, V685]
Stack pops: 4
Stack additions: [V693, V694]
Exit stack: [V11, 0xcf, V197, V199, V202, V177, V817, V202, V670, V693, V694]

================================

Block 0x83f
[0x83f:0x842]
---
Predecessors: [0x82d]
Successors: []
---
0x83f PUSH1 0x0
0x841 DUP1
0x842 REVERT
---
0x83f: V699 = 0x0
0x842: REVERT 0x0 0x0
---
Entry stack: [V11, 0xcf, V197, V199, V202, V177, V817, V202, V670, V693, V694]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, V197, V199, V202, V177, V817, V202, V670, V693, V694]

================================

Block 0x843
[0x843:0x84b]
---
Predecessors: [0x82d]
Successors: [0x84c, 0x850]
---
0x843 JUMPDEST
0x844 POP
0x845 MLOAD
0x846 ISZERO
0x847 ISZERO
0x848 PUSH2 0x850
0x84b JUMPI
---
0x843: JUMPDEST 
0x845: V700 = M[V693]
0x846: V701 = ISZERO V700
0x847: V702 = ISZERO V701
0x848: V703 = 0x850
0x84b: JUMPI 0x850 V702
---
Entry stack: [V11, 0xcf, V197, V199, V202, V177, V817, V202, V670, V693, V694]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0xcf, V197, V199, V202, V177, V817, V202, V670]

================================

Block 0x84c
[0x84c:0x84f]
---
Predecessors: [0x843]
Successors: []
---
0x84c PUSH1 0x0
0x84e DUP1
0x84f REVERT
---
0x84c: V704 = 0x0
0x84f: REVERT 0x0 0x0
---
Entry stack: [V11, 0xcf, V197, V199, V202, V177, V817, V202, V670]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, V197, V199, V202, V177, V817, V202, V670]

================================

Block 0x850
[0x850:0x8bd]
---
Predecessors: [0x843]
Successors: [0xcf]
---
0x850 JUMPDEST
0x851 PUSH1 0x1
0x853 PUSH1 0xa0
0x855 PUSH1 0x2
0x857 EXP
0x858 SUB
0x859 DUP8
0x85a AND
0x85b PUSH1 0x0
0x85d DUP2
0x85e DUP2
0x85f MSTORE
0x860 PUSH1 0x3
0x862 PUSH1 0x20
0x864 SWAP1
0x865 DUP2
0x866 MSTORE
0x867 PUSH1 0x40
0x869 SWAP2
0x86a DUP3
0x86b SWAP1
0x86c SHA3
0x86d DUP1
0x86e SLOAD
0x86f DUP8
0x870 ADD
0x871 SWAP1
0x872 SSTORE
0x873 PUSH1 0x4
0x875 DUP1
0x876 SLOAD
0x877 PUSH1 0x1
0x879 ADD
0x87a SWAP1
0x87b SSTORE
0x87c DUP2
0x87d MLOAD
0x87e DUP7
0x87f DUP2
0x880 MSTORE
0x881 TIMESTAMP
0x882 SWAP2
0x883 DUP2
0x884 ADD
0x885 SWAP2
0x886 SWAP1
0x887 SWAP2
0x888 MSTORE
0x889 DUP2
0x88a MLOAD
0x88b PUSH32 0x26ee7530707ae1529000f32cf51fbcaf7c41eb47c63083e08cf650d99e2a34e5
0x8ac SWAP3
0x8ad SWAP2
0x8ae DUP2
0x8af SWAP1
0x8b0 SUB
0x8b1 SWAP1
0x8b2 SWAP2
0x8b3 ADD
0x8b4 SWAP1
0x8b5 LOG2
0x8b6 POP
0x8b7 POP
0x8b8 POP
0x8b9 POP
0x8ba POP
0x8bb POP
0x8bc POP
0x8bd JUMP
---
0x850: JUMPDEST 
0x851: V705 = 0x1
0x853: V706 = 0xa0
0x855: V707 = 0x2
0x857: V708 = EXP 0x2 0xa0
0x858: V709 = SUB 0x10000000000000000000000000000000000000000 0x1
0x85a: V710 = AND V197 0xffffffffffffffffffffffffffffffffffffffff
0x85b: V711 = 0x0
0x85f: M[0x0] = V710
0x860: V712 = 0x3
0x862: V713 = 0x20
0x866: M[0x20] = 0x3
0x867: V714 = 0x40
0x86c: V715 = SHA3 0x0 0x40
0x86e: V716 = S[V715]
0x870: V717 = ADD V817 V716
0x872: S[V715] = V717
0x873: V718 = 0x4
0x876: V719 = S[0x4]
0x877: V720 = 0x1
0x879: V721 = ADD 0x1 V719
0x87b: S[0x4] = V721
0x87d: V722 = M[0x40]
0x880: M[V722] = V817
0x881: V723 = TIMESTAMP
0x884: V724 = ADD V722 0x20
0x888: M[V724] = V723
0x88a: V725 = M[0x40]
0x88b: V726 = 0x26ee7530707ae1529000f32cf51fbcaf7c41eb47c63083e08cf650d99e2a34e5
0x8b0: V727 = SUB V722 V725
0x8b3: V728 = ADD 0x40 V727
0x8b5: LOG V725 V728 0x26ee7530707ae1529000f32cf51fbcaf7c41eb47c63083e08cf650d99e2a34e5 V710
0x8bd: JUMP 0xcf
---
Entry stack: [V11, 0xcf, V197, V199, V202, V177, V817, V202, V670]
Stack pops: 8
Stack additions: []
Exit stack: [V11]

================================

Block 0x8be
[0x8be:0x8cc]
---
Predecessors: [0x279]
Successors: [0x1e1]
---
0x8be JUMPDEST
0x8bf PUSH1 0x5
0x8c1 SLOAD
0x8c2 PUSH1 0x1
0x8c4 PUSH1 0xa0
0x8c6 PUSH1 0x2
0x8c8 EXP
0x8c9 SUB
0x8ca AND
0x8cb DUP2
0x8cc JUMP
---
0x8be: JUMPDEST 
0x8bf: V729 = 0x5
0x8c1: V730 = S[0x5]
0x8c2: V731 = 0x1
0x8c4: V732 = 0xa0
0x8c6: V733 = 0x2
0x8c8: V734 = EXP 0x2 0xa0
0x8c9: V735 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8ca: V736 = AND 0xffffffffffffffffffffffffffffffffffffffff V730
0x8cc: JUMP 0x1e1
---
Entry stack: [V11, 0x1e1]
Stack pops: 1
Stack additions: [S0, V736]
Exit stack: [V11, 0x1e1, V736]

================================

Block 0x8cd
[0x8cd:0x8db]
---
Predecessors: [0x28e]
Successors: [0x1e1]
---
0x8cd JUMPDEST
0x8ce PUSH1 0x1
0x8d0 SLOAD
0x8d1 PUSH1 0x1
0x8d3 PUSH1 0xa0
0x8d5 PUSH1 0x2
0x8d7 EXP
0x8d8 SUB
0x8d9 AND
0x8da DUP2
0x8db JUMP
---
0x8cd: JUMPDEST 
0x8ce: V737 = 0x1
0x8d0: V738 = S[0x1]
0x8d1: V739 = 0x1
0x8d3: V740 = 0xa0
0x8d5: V741 = 0x2
0x8d7: V742 = EXP 0x2 0xa0
0x8d8: V743 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8d9: V744 = AND 0xffffffffffffffffffffffffffffffffffffffff V738
0x8db: JUMP 0x1e1
---
Entry stack: [V11, 0x1e1]
Stack pops: 1
Stack additions: [S0, V744]
Exit stack: [V11, 0x1e1, V744]

================================

Block 0x8dc
[0x8dc:0x8ee]
---
Predecessors: [0x2a3]
Successors: [0x8ef, 0x8f3]
---
0x8dc JUMPDEST
0x8dd PUSH1 0x0
0x8df SLOAD
0x8e0 PUSH1 0x1
0x8e2 PUSH1 0xa0
0x8e4 PUSH1 0x2
0x8e6 EXP
0x8e7 SUB
0x8e8 AND
0x8e9 CALLER
0x8ea EQ
0x8eb PUSH2 0x8f3
0x8ee JUMPI
---
0x8dc: JUMPDEST 
0x8dd: V745 = 0x0
0x8df: V746 = S[0x0]
0x8e0: V747 = 0x1
0x8e2: V748 = 0xa0
0x8e4: V749 = 0x2
0x8e6: V750 = EXP 0x2 0xa0
0x8e7: V751 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8e8: V752 = AND 0xffffffffffffffffffffffffffffffffffffffff V746
0x8e9: V753 = CALLER
0x8ea: V754 = EQ V753 V752
0x8eb: V755 = 0x8f3
0x8ee: JUMPI 0x8f3 V754
---
Entry stack: [V11, 0xcf]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf]

================================

Block 0x8ef
[0x8ef:0x8f2]
---
Predecessors: [0x8dc]
Successors: []
---
0x8ef PUSH1 0x0
0x8f1 DUP1
0x8f2 REVERT
---
0x8ef: V756 = 0x0
0x8f2: REVERT 0x0 0x0
---
Entry stack: [V11, 0xcf]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf]

================================

Block 0x8f3
[0x8f3:0x929]
---
Predecessors: [0x8dc]
Successors: []
---
0x8f3 JUMPDEST
0x8f4 PUSH1 0x40
0x8f6 MLOAD
0x8f7 PUSH32 0x4c8f029a223d6ef85e277f02f646120c462ddbbb92ce8abc71ca784d83473953
0x918 SWAP1
0x919 PUSH1 0x0
0x91b SWAP1
0x91c LOG1
0x91d PUSH1 0x0
0x91f SLOAD
0x920 PUSH1 0x1
0x922 PUSH1 0xa0
0x924 PUSH1 0x2
0x926 EXP
0x927 SUB
0x928 AND
0x929 SELFDESTRUCT
---
0x8f3: JUMPDEST 
0x8f4: V757 = 0x40
0x8f6: V758 = M[0x40]
0x8f7: V759 = 0x4c8f029a223d6ef85e277f02f646120c462ddbbb92ce8abc71ca784d83473953
0x919: V760 = 0x0
0x91c: LOG V758 0x0 0x4c8f029a223d6ef85e277f02f646120c462ddbbb92ce8abc71ca784d83473953
0x91d: V761 = 0x0
0x91f: V762 = S[0x0]
0x920: V763 = 0x1
0x922: V764 = 0xa0
0x924: V765 = 0x2
0x926: V766 = EXP 0x2 0xa0
0x927: V767 = SUB 0x10000000000000000000000000000000000000000 0x1
0x928: V768 = AND 0xffffffffffffffffffffffffffffffffffffffff V762
0x929: SELFDESTRUCT V768
---
Entry stack: [V11, 0xcf]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf]

================================

Block 0x92a
[0x92a:0x93b]
---
Predecessors: [0x2b8]
Successors: [0x11e]
---
0x92a JUMPDEST
0x92b PUSH1 0x3
0x92d PUSH1 0x20
0x92f MSTORE
0x930 PUSH1 0x0
0x932 SWAP1
0x933 DUP2
0x934 MSTORE
0x935 PUSH1 0x40
0x937 SWAP1
0x938 SHA3
0x939 SLOAD
0x93a DUP2
0x93b JUMP
---
0x92a: JUMPDEST 
0x92b: V769 = 0x3
0x92d: V770 = 0x20
0x92f: M[0x20] = 0x3
0x930: V771 = 0x0
0x934: M[0x0] = V238
0x935: V772 = 0x40
0x938: V773 = SHA3 0x0 0x40
0x939: V774 = S[V773]
0x93b: JUMP 0x11e
---
Entry stack: [V11, 0x11e, V238]
Stack pops: 2
Stack additions: [S1, V774]
Exit stack: [V11, 0x11e, V774]

================================

Block 0x93c
[0x93c:0x94f]
---
Predecessors: [0x2d9]
Successors: [0x950, 0x954]
---
0x93c JUMPDEST
0x93d PUSH1 0x0
0x93f DUP1
0x940 SLOAD
0x941 PUSH1 0x1
0x943 PUSH1 0xa0
0x945 PUSH1 0x2
0x947 EXP
0x948 SUB
0x949 AND
0x94a CALLER
0x94b EQ
0x94c PUSH2 0x954
0x94f JUMPI
---
0x93c: JUMPDEST 
0x93d: V775 = 0x0
0x940: V776 = S[0x0]
0x941: V777 = 0x1
0x943: V778 = 0xa0
0x945: V779 = 0x2
0x947: V780 = EXP 0x2 0xa0
0x948: V781 = SUB 0x10000000000000000000000000000000000000000 0x1
0x949: V782 = AND 0xffffffffffffffffffffffffffffffffffffffff V776
0x94a: V783 = CALLER
0x94b: V784 = EQ V783 V782
0x94c: V785 = 0x954
0x94f: JUMPI 0x954 V784
---
Entry stack: [V11, 0xf5, V252]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0xf5, V252, 0x0]

================================

Block 0x950
[0x950:0x953]
---
Predecessors: [0x93c]
Successors: []
---
0x950 PUSH1 0x0
0x952 DUP1
0x953 REVERT
---
0x950: V786 = 0x0
0x953: REVERT 0x0 0x0
---
Entry stack: [V11, 0xf5, V252, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf5, V252, 0x0]

================================

Block 0x954
[0x954:0x986]
---
Predecessors: [0x93c]
Successors: [0xf5]
---
0x954 JUMPDEST
0x955 POP
0x956 PUSH1 0x5
0x958 DUP1
0x959 SLOAD
0x95a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x96f NOT
0x970 AND
0x971 PUSH1 0x1
0x973 PUSH1 0xa0
0x975 PUSH1 0x2
0x977 EXP
0x978 SUB
0x979 SWAP3
0x97a SWAP1
0x97b SWAP3
0x97c AND
0x97d SWAP2
0x97e SWAP1
0x97f SWAP2
0x980 OR
0x981 SWAP1
0x982 SSTORE
0x983 PUSH1 0x1
0x985 SWAP1
0x986 JUMP
---
0x954: JUMPDEST 
0x956: V787 = 0x5
0x959: V788 = S[0x5]
0x95a: V789 = 0xffffffffffffffffffffffffffffffffffffffff
0x96f: V790 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x970: V791 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V788
0x971: V792 = 0x1
0x973: V793 = 0xa0
0x975: V794 = 0x2
0x977: V795 = EXP 0x2 0xa0
0x978: V796 = SUB 0x10000000000000000000000000000000000000000 0x1
0x97c: V797 = AND 0xffffffffffffffffffffffffffffffffffffffff V252
0x980: V798 = OR V797 V791
0x982: S[0x5] = V798
0x983: V799 = 0x1
0x986: JUMP 0xf5
---
Entry stack: [V11, 0xf5, V252, 0x0]
Stack pops: 3
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x987
[0x987:0x9b8]
---
Predecessors: [0x6e1]
Successors: [0x6eb]
---
0x987 JUMPDEST
0x988 PUSH1 0x1
0x98a PUSH1 0xa0
0x98c PUSH1 0x2
0x98e EXP
0x98f SUB
0x990 SWAP2
0x991 SWAP1
0x992 SWAP2
0x993 AND
0x994 PUSH1 0x0
0x996 SWAP1
0x997 DUP2
0x998 MSTORE
0x999 PUSH1 0x2
0x99b PUSH1 0x20
0x99d MSTORE
0x99e PUSH1 0x40
0x9a0 SWAP1
0x9a1 SHA3
0x9a2 SLOAD
0x9a3 PUSH8 0xde0b6b3a7640000
0x9ac SWAP2
0x9ad MUL
0x9ae DUP2
0x9af MUL
0x9b0 DUP2
0x9b1 SWAP1
0x9b2 DIV
0x9b3 DUP2
0x9b4 SWAP1
0x9b5 DIV
0x9b6 DIV
0x9b7 SWAP1
0x9b8 JUMP
---
0x987: JUMPDEST 
0x988: V800 = 0x1
0x98a: V801 = 0xa0
0x98c: V802 = 0x2
0x98e: V803 = EXP 0x2 0xa0
0x98f: V804 = SUB 0x10000000000000000000000000000000000000000 0x1
0x993: V805 = AND 0xffffffffffffffffffffffffffffffffffffffff V202
0x994: V806 = 0x0
0x998: M[0x0] = V805
0x999: V807 = 0x2
0x99b: V808 = 0x20
0x99d: M[0x20] = 0x2
0x99e: V809 = 0x40
0x9a1: V810 = SHA3 0x0 0x40
0x9a2: V811 = S[V810]
0x9a3: V812 = 0xde0b6b3a7640000
0x9ad: V813 = MUL V199 V811
0x9af: V814 = MUL 0xde0b6b3a7640000 V813
0x9b2: V815 = DIV V814 0xde0b6b3a7640000
0x9b5: V816 = DIV V815 0xde0b6b3a7640000
0x9b6: V817 = DIV V816 0xde0b6b3a7640000
0x9b8: JUMP 0x6eb
---
Entry stack: [V11, 0xcf, V197, V199, V202, V177, 0x0, 0x0, 0x0, 0x6eb, V202, V199]
Stack pops: 3
Stack additions: [V817]
Exit stack: [V11, 0xcf, V197, V199, V202, V177, 0x0, 0x0, 0x0, V817]

================================

Block 0x9b9
[0x9b9:0x9f7]
---
Predecessors: []
Successors: []
---
0x9b9 STOP
0x9ba LOG1
0x9bb PUSH6 0x627a7a723058
0x9c2 SHA3
0x9c3 REVERT
0x9c4 MISSING 0xed
0x9c5 MISSING 0x4b
0x9c6 REVERT
0x9c7 PUSH15 0xc7dcd226e5dcbb3fb813fbe0fea98b
0x9d7 INVALID
0x9d8 GASPRICE
0x9d9 REVERT
0x9da PUSH29 0xb8e0396d6c0e94920029
---
0x9b9: STOP 
0x9ba: LOG S0 S1 S2
0x9bb: V818 = 0x627a7a723058
0x9c2: V819 = SHA3 0x627a7a723058 S3
0x9c3: REVERT V819 S4
0x9c4: MISSING 0xed
0x9c5: MISSING 0x4b
0x9c6: REVERT S0 S1
0x9c7: V820 = 0xc7dcd226e5dcbb3fb813fbe0fea98b
0x9d7: INVALID 
0x9d8: V821 = GASPRICE
0x9d9: REVERT V821 S0
0x9da: V822 = 0xb8e0396d6c0e94920029
---
Entry stack: []
Stack pops: 0
Stack additions: [0xc7dcd226e5dcbb3fb813fbe0fea98b, 0xb8e0396d6c0e94920029]
Exit stack: []

================================

Function 0:
Public function signature: 0x6b091f9
Entry block: 0xd1
Exit block: 0xf5
Body: 0xd1, 0xd9, 0xdd, 0xf5, 0x2ee, 0x304, 0x308, 0x319, 0x31d, 0x389, 0x38d, 0x398, 0x3a1, 0x3b3, 0x3b7, 0x3c2, 0x408

Function 1:
Public function signature: 0x176797d0
Entry block: 0x109
Exit block: 0x11e
Body: 0x109, 0x111, 0x115, 0x11e, 0x40f

Function 2:
Public function signature: 0x20d7d3a0
Entry block: 0x130
Exit block: 0xf5
Body: 0xf5, 0x130, 0x138, 0x13c, 0x415, 0x429, 0x42d

Function 3:
Public function signature: 0x2ff57da8
Entry block: 0x151
Exit block: 0x11e
Body: 0x11e, 0x151, 0x159, 0x15d, 0x48f, 0x4a2, 0x4a6, 0x503, 0x507, 0x512, 0x51b, 0x52d, 0x531

Function 4:
Public function signature: 0x3ccfd60b
Entry block: 0x172
Exit block: 0xf5
Body: 0xf5, 0x172, 0x17a, 0x17e, 0x539, 0x54d, 0x551, 0x5c9, 0x5d2

Function 5:
Public function signature: 0x4ddee4d0
Entry block: 0x187
Exit block: 0xcf
Body: 0xcf, 0x187, 0x18f, 0x193, 0x5da, 0x5ee, 0x5fd, 0x604, 0x608, 0x619, 0x61d, 0x625, 0x642, 0x65e

Function 6:
Public function signature: 0x86403125
Entry block: 0x1ab
Exit block: 0x11e
Body: 0x11e, 0x1ab, 0x1b3, 0x1b7, 0x662

Function 7:
Public function signature: 0x8da5cb5b
Entry block: 0x1cc
Exit block: 0x1e1
Body: 0x1cc, 0x1d4, 0x1d8, 0x1e1, 0x674

Function 8:
Public function signature: 0x8f4ffcb1
Entry block: 0x1fd
Exit block: 0xcf
Body: 0xcf, 0x1fd, 0x205, 0x209, 0x683, 0x698, 0x69c, 0x6ad, 0x6b1, 0x6ba, 0x6be, 0x6dd, 0x6e1, 0x6eb, 0x6f6, 0x6fa, 0x76b, 0x76f, 0x77a, 0x783, 0x795, 0x799, 0x7a2, 0x7a6, 0x815, 0x819, 0x824, 0x82d, 0x83f, 0x843, 0x84c, 0x850, 0x987

Function 9:
Public function signature: 0xa82a6f41
Entry block: 0x26d
Exit block: 0x1e1
Body: 0x1e1, 0x26d, 0x275, 0x279, 0x8be

Function 10:
Public function signature: 0xb6de460a
Entry block: 0x282
Exit block: 0x1e1
Body: 0x1e1, 0x282, 0x28a, 0x28e, 0x8cd

Function 11:
Public function signature: 0xc96cd46f
Entry block: 0x297
Exit block: 0x8f3
Body: 0x297, 0x29f, 0x2a3, 0x8dc, 0x8ef, 0x8f3

Function 12:
Public function signature: 0xd4e0228a
Entry block: 0x2ac
Exit block: 0x11e
Body: 0x11e, 0x2ac, 0x2b4, 0x2b8, 0x92a

Function 13:
Public function signature: 0xe81a0aad
Entry block: 0x2cd
Exit block: 0xf5
Body: 0xf5, 0x2cd, 0x2d5, 0x2d9, 0x93c, 0x950, 0x954

Function 14:
Public fallback function
Entry block: 0xcf
Exit block: 0xcf
Body: 0xcf

