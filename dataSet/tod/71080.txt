Block 0x0
[0x0:0x9]
---
Predecessors: []
Successors: [0xa, 0x27]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH1 0x27
0x9 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x27
0x9: JUMPI 0x27 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa
[0xa:0x1c]
---
Predecessors: [0x0]
Successors: [0x1d, 0x75]
---
0xa PUSH1 0xe0
0xc PUSH1 0x2
0xe EXP
0xf PUSH1 0x0
0x11 CALLDATALOAD
0x12 DIV
0x13 PUSH4 0x41c0e1b5
0x18 DUP2
0x19 EQ
0x1a PUSH1 0x75
0x1c JUMPI
---
0xa: V5 = 0xe0
0xc: V6 = 0x2
0xe: V7 = EXP 0x2 0xe0
0xf: V8 = 0x0
0x11: V9 = CALLDATALOAD 0x0
0x12: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x13: V11 = 0x41c0e1b5
0x19: V12 = EQ V10 0x41c0e1b5
0x1a: V13 = 0x75
0x1c: JUMPI 0x75 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1d
[0x1d:0x26]
---
Predecessors: [0xa]
Successors: [0x27, 0x9b]
---
0x1d DUP1
0x1e PUSH4 0xe5225381
0x23 EQ
0x24 PUSH1 0x9b
0x26 JUMPI
---
0x1e: V14 = 0xe5225381
0x23: V15 = EQ 0xe5225381 V10
0x24: V16 = 0x9b
0x26: JUMPI 0x9b V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0x0, 0x1d]
Successors: [0x32, 0x73]
---
0x27 JUMPDEST
0x28 PUSH1 0xe3
0x2a PUSH1 0x0
0x2c CALLVALUE
0x2d GT
0x2e ISZERO
0x2f PUSH1 0x73
0x31 JUMPI
---
0x27: JUMPDEST 
0x28: V17 = 0xe3
0x2a: V18 = 0x0
0x2c: V19 = CALLVALUE
0x2d: V20 = GT V19 0x0
0x2e: V21 = ISZERO V20
0x2f: V22 = 0x73
0x31: JUMPI 0x73 V21
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xe3]
Exit stack: [V10, 0xe3]

================================

Block 0x32
[0x32:0x72]
---
Predecessors: [0x27]
Successors: [0x73]
---
0x32 PUSH1 0x40
0x34 DUP1
0x35 MLOAD
0x36 CALLVALUE
0x37 DUP2
0x38 MSTORE
0x39 SWAP1
0x3a MLOAD
0x3b PUSH1 0x58
0x3d SWAP2
0x3e PUSH1 0x1
0x40 PUSH1 0xa0
0x42 PUSH1 0x2
0x44 EXP
0x45 SUB
0x46 CALLER
0x47 AND
0x48 SWAP2
0x49 PUSH32 0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15
0x6a SWAP2
0x6b DUP2
0x6c SWAP1
0x6d SUB
0x6e PUSH1 0x20
0x70 ADD
0x71 SWAP1
0x72 LOG3
---
0x32: V23 = 0x40
0x35: V24 = M[0x40]
0x36: V25 = CALLVALUE
0x38: M[V24] = V25
0x3a: V26 = M[0x40]
0x3b: V27 = 0x58
0x3e: V28 = 0x1
0x40: V29 = 0xa0
0x42: V30 = 0x2
0x44: V31 = EXP 0x2 0xa0
0x45: V32 = SUB 0x10000000000000000000000000000000000000000 0x1
0x46: V33 = CALLER
0x47: V34 = AND V33 0xffffffffffffffffffffffffffffffffffffffff
0x49: V35 = 0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15
0x6d: V36 = SUB V24 V26
0x6e: V37 = 0x20
0x70: V38 = ADD 0x20 V36
0x72: LOG V26 V38 0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15 V34 0x58
---
Entry stack: [V10, 0xe3]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe3]

================================

Block 0x73
[0x73:0x74]
---
Predecessors: [0x27, 0x32, 0x75, 0x9b]
Successors: [0xe3]
---
0x73 JUMPDEST
0x74 JUMP
---
0x73: JUMPDEST 
0x74: JUMP 0xe3
---
Entry stack: [V10, 0xe3]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x75
[0x75:0x8d]
---
Predecessors: [0xa]
Successors: [0x73, 0x8e]
---
0x75 JUMPDEST
0x76 PUSH1 0xe3
0x78 PUSH1 0x0
0x7a SLOAD
0x7b CALLER
0x7c PUSH1 0x1
0x7e PUSH1 0xa0
0x80 PUSH1 0x2
0x82 EXP
0x83 SUB
0x84 SWAP1
0x85 DUP2
0x86 AND
0x87 SWAP2
0x88 AND
0x89 EQ
0x8a ISZERO
0x8b PUSH1 0x73
0x8d JUMPI
---
0x75: JUMPDEST 
0x76: V39 = 0xe3
0x78: V40 = 0x0
0x7a: V41 = S[0x0]
0x7b: V42 = CALLER
0x7c: V43 = 0x1
0x7e: V44 = 0xa0
0x80: V45 = 0x2
0x82: V46 = EXP 0x2 0xa0
0x83: V47 = SUB 0x10000000000000000000000000000000000000000 0x1
0x86: V48 = AND 0xffffffffffffffffffffffffffffffffffffffff V42
0x88: V49 = AND V41 0xffffffffffffffffffffffffffffffffffffffff
0x89: V50 = EQ V49 V48
0x8a: V51 = ISZERO V50
0x8b: V52 = 0x73
0x8d: JUMPI 0x73 V51
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xe3]
Exit stack: [V10, 0xe3]

================================

Block 0x8e
[0x8e:0x9a]
---
Predecessors: [0x75]
Successors: []
---
0x8e PUSH1 0x0
0x90 SLOAD
0x91 PUSH1 0x1
0x93 PUSH1 0xa0
0x95 PUSH1 0x2
0x97 EXP
0x98 SUB
0x99 AND
0x9a SELFDESTRUCT
---
0x8e: V53 = 0x0
0x90: V54 = S[0x0]
0x91: V55 = 0x1
0x93: V56 = 0xa0
0x95: V57 = 0x2
0x97: V58 = EXP 0x2 0xa0
0x98: V59 = SUB 0x10000000000000000000000000000000000000000 0x1
0x99: V60 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0x9a: SELFDESTRUCT V60
---
Entry stack: [V10, 0xe3]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe3]

================================

Block 0x9b
[0x9b:0xb3]
---
Predecessors: [0x1d]
Successors: [0x73, 0xb4]
---
0x9b JUMPDEST
0x9c PUSH1 0xe3
0x9e PUSH1 0x0
0xa0 SLOAD
0xa1 CALLER
0xa2 PUSH1 0x1
0xa4 PUSH1 0xa0
0xa6 PUSH1 0x2
0xa8 EXP
0xa9 SUB
0xaa SWAP1
0xab DUP2
0xac AND
0xad SWAP2
0xae AND
0xaf EQ
0xb0 ISZERO
0xb1 PUSH1 0x73
0xb3 JUMPI
---
0x9b: JUMPDEST 
0x9c: V61 = 0xe3
0x9e: V62 = 0x0
0xa0: V63 = S[0x0]
0xa1: V64 = CALLER
0xa2: V65 = 0x1
0xa4: V66 = 0xa0
0xa6: V67 = 0x2
0xa8: V68 = EXP 0x2 0xa0
0xa9: V69 = SUB 0x10000000000000000000000000000000000000000 0x1
0xac: V70 = AND 0xffffffffffffffffffffffffffffffffffffffff V64
0xae: V71 = AND V63 0xffffffffffffffffffffffffffffffffffffffff
0xaf: V72 = EQ V71 V70
0xb0: V73 = ISZERO V72
0xb1: V74 = 0x73
0xb3: JUMPI 0x73 V73
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xe3]
Exit stack: [V10, 0xe3]

================================

Block 0xb4
[0xb4:0xe2]
---
Predecessors: [0x9b]
Successors: [0xe3]
---
0xb4 PUSH1 0x0
0xb6 DUP1
0xb7 SLOAD
0xb8 PUSH1 0x40
0xba MLOAD
0xbb PUSH1 0x1
0xbd PUSH1 0xa0
0xbf PUSH1 0x2
0xc1 EXP
0xc2 SUB
0xc3 SWAP2
0xc4 DUP3
0xc5 AND
0xc6 SWAP3
0xc7 ADDRESS
0xc8 SWAP1
0xc9 SWAP3
0xca AND
0xcb BALANCE
0xcc DUP1
0xcd ISZERO
0xce PUSH2 0x8fc
0xd1 MUL
0xd2 SWAP3
0xd3 SWAP1
0xd4 SWAP2
0xd5 SWAP1
0xd6 DUP2
0xd7 DUP2
0xd8 DUP2
0xd9 DUP6
0xda DUP9
0xdb DUP9
0xdc CALL
0xdd POP
0xde POP
0xdf POP
0xe0 POP
0xe1 POP
0xe2 JUMP
---
0xb4: V75 = 0x0
0xb7: V76 = S[0x0]
0xb8: V77 = 0x40
0xba: V78 = M[0x40]
0xbb: V79 = 0x1
0xbd: V80 = 0xa0
0xbf: V81 = 0x2
0xc1: V82 = EXP 0x2 0xa0
0xc2: V83 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc5: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0xc7: V85 = ADDRESS
0xca: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff V85
0xcb: V87 = BALANCE V86
0xcd: V88 = ISZERO V87
0xce: V89 = 0x8fc
0xd1: V90 = MUL 0x8fc V88
0xdc: V91 = CALL V90 V84 V87 V78 0x0 V78 0x0
0xe2: JUMP 0xe3
---
Entry stack: [V10, 0xe3]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xe3
[0xe3:0xe4]
---
Predecessors: [0x73, 0xb4]
Successors: []
---
0xe3 JUMPDEST
0xe4 STOP
---
0xe3: JUMPDEST 
0xe4: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Function 0:
Public function signature: 0x41c0e1b5
Entry block: 0x75
Exit block: 0xe3
Body: 0x73, 0x75, 0x8e, 0xe3

Function 1:
Public function signature: 0xe5225381
Entry block: 0x9b
Exit block: 0xe3
Body: 0x73, 0x9b, 0xb4, 0xe3

Function 2:
Public fallback function
Entry block: 0x27
Exit block: 0xe3
Body: 0x27, 0x32, 0x73, 0xe3

