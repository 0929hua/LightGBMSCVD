Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xda]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xda
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xda
0xc: JUMPI 0xda V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0xdc]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x12065fe0
0x3a DUP2
0x3b EQ
0x3c PUSH2 0xdc
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x12065fe0
0x3b: V13 = EQ V11 0x12065fe0
0x3c: V14 = 0xdc
0x3f: JUMPI 0xdc V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x101]
---
0x40 DUP1
0x41 PUSH4 0x30efb8d3
0x46 EQ
0x47 PUSH2 0x101
0x4a JUMPI
---
0x41: V15 = 0x30efb8d3
0x46: V16 = EQ 0x30efb8d3 V11
0x47: V17 = 0x101
0x4a: JUMPI 0x101 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x114]
---
0x4b DUP1
0x4c PUSH4 0x335aa61a
0x51 EQ
0x52 PUSH2 0x114
0x55 JUMPI
---
0x4c: V18 = 0x335aa61a
0x51: V19 = EQ 0x335aa61a V11
0x52: V20 = 0x114
0x55: JUMPI 0x114 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x12a]
---
0x56 DUP1
0x57 PUSH4 0x67d0661d
0x5c EQ
0x5d PUSH2 0x12a
0x60 JUMPI
---
0x57: V21 = 0x67d0661d
0x5c: V22 = EQ 0x67d0661d V11
0x5d: V23 = 0x12a
0x60: JUMPI 0x12a V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x13d]
---
0x61 DUP1
0x62 PUSH4 0x704b6c02
0x67 EQ
0x68 PUSH2 0x13d
0x6b JUMPI
---
0x62: V24 = 0x704b6c02
0x67: V25 = EQ 0x704b6c02 V11
0x68: V26 = 0x13d
0x6b: JUMPI 0x13d V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x15c]
---
0x6c DUP1
0x6d PUSH4 0x76db76f1
0x72 EQ
0x73 PUSH2 0x15c
0x76 JUMPI
---
0x6d: V27 = 0x76db76f1
0x72: V28 = EQ 0x76db76f1 V11
0x73: V29 = 0x15c
0x76: JUMPI 0x15c V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x16f]
---
0x77 DUP1
0x78 PUSH4 0x82cb9df9
0x7d EQ
0x7e PUSH2 0x16f
0x81 JUMPI
---
0x78: V30 = 0x82cb9df9
0x7d: V31 = EQ 0x82cb9df9 V11
0x7e: V32 = 0x16f
0x81: JUMPI 0x16f V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x19e]
---
0x82 DUP1
0x83 PUSH4 0x9b8d3064
0x88 EQ
0x89 PUSH2 0x19e
0x8c JUMPI
---
0x83: V33 = 0x9b8d3064
0x88: V34 = EQ 0x9b8d3064 V11
0x89: V35 = 0x19e
0x8c: JUMPI 0x19e V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x1bd]
---
0x8d DUP1
0x8e PUSH4 0xb187bd26
0x93 EQ
0x94 PUSH2 0x1bd
0x97 JUMPI
---
0x8e: V36 = 0xb187bd26
0x93: V37 = EQ 0xb187bd26 V11
0x94: V38 = 0x1bd
0x97: JUMPI 0x1bd V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x8d]
Successors: [0xa3, 0x1e4]
---
0x98 DUP1
0x99 PUSH4 0xbf8bdac1
0x9e EQ
0x9f PUSH2 0x1e4
0xa2 JUMPI
---
0x99: V39 = 0xbf8bdac1
0x9e: V40 = EQ 0xbf8bdac1 V11
0x9f: V41 = 0x1e4
0xa2: JUMPI 0x1e4 V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa3
[0xa3:0xad]
---
Predecessors: [0x98]
Successors: [0xae, 0x203]
---
0xa3 DUP1
0xa4 PUSH4 0xbfae2f0e
0xa9 EQ
0xaa PUSH2 0x203
0xad JUMPI
---
0xa4: V42 = 0xbfae2f0e
0xa9: V43 = EQ 0xbfae2f0e V11
0xaa: V44 = 0x203
0xad: JUMPI 0x203 V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xae
[0xae:0xb8]
---
Predecessors: [0xa3]
Successors: [0xb9, 0x216]
---
0xae DUP1
0xaf PUSH4 0xcdd977e0
0xb4 EQ
0xb5 PUSH2 0x216
0xb8 JUMPI
---
0xaf: V45 = 0xcdd977e0
0xb4: V46 = EQ 0xcdd977e0 V11
0xb5: V47 = 0x216
0xb8: JUMPI 0x216 V46
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xb9
[0xb9:0xc3]
---
Predecessors: [0xae]
Successors: [0xc4, 0x229]
---
0xb9 DUP1
0xba PUSH4 0xda0bba90
0xbf EQ
0xc0 PUSH2 0x229
0xc3 JUMPI
---
0xba: V48 = 0xda0bba90
0xbf: V49 = EQ 0xda0bba90 V11
0xc0: V50 = 0x229
0xc3: JUMPI 0x229 V49
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xc4
[0xc4:0xce]
---
Predecessors: [0xb9]
Successors: [0xcf, 0x260]
---
0xc4 DUP1
0xc5 PUSH4 0xf3fef3a3
0xca EQ
0xcb PUSH2 0x260
0xce JUMPI
---
0xc5: V51 = 0xf3fef3a3
0xca: V52 = EQ 0xf3fef3a3 V11
0xcb: V53 = 0x260
0xce: JUMPI 0x260 V52
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xcf
[0xcf:0xd9]
---
Predecessors: [0xc4]
Successors: [0xda, 0x282]
---
0xcf DUP1
0xd0 PUSH4 0xf5486860
0xd5 EQ
0xd6 PUSH2 0x282
0xd9 JUMPI
---
0xd0: V54 = 0xf5486860
0xd5: V55 = EQ 0xf5486860 V11
0xd6: V56 = 0x282
0xd9: JUMPI 0x282 V55
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xda
[0xda:0xdb]
---
Predecessors: [0x0, 0xcf, 0x2f1, 0x347, 0x37c, 0x3c0, 0x451, 0x50b, 0x593, 0x791, 0x93f]
Successors: []
---
0xda JUMPDEST
0xdb STOP
---
0xda: JUMPDEST 
0xdb: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xdc
[0xdc:0xe2]
---
Predecessors: [0xd]
Successors: [0xe3, 0xe7]
---
0xdc JUMPDEST
0xdd CALLVALUE
0xde ISZERO
0xdf PUSH2 0xe7
0xe2 JUMPI
---
0xdc: JUMPDEST 
0xdd: V57 = CALLVALUE
0xde: V58 = ISZERO V57
0xdf: V59 = 0xe7
0xe2: JUMPI 0xe7 V58
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe3
[0xe3:0xe6]
---
Predecessors: [0xdc]
Successors: []
---
0xe3 PUSH1 0x0
0xe5 DUP1
0xe6 REVERT
---
0xe3: V60 = 0x0
0xe6: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe7
[0xe7:0xee]
---
Predecessors: [0xdc]
Successors: [0x2b2]
---
0xe7 JUMPDEST
0xe8 PUSH2 0xef
0xeb PUSH2 0x2b2
0xee JUMP
---
0xe7: JUMPDEST 
0xe8: V61 = 0xef
0xeb: V62 = 0x2b2
0xee: JUMP 0x2b2
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xef]
Exit stack: [V11, 0xef]

================================

Block 0xef
[0xef:0x100]
---
Predecessors: [0x2b2]
Successors: []
---
0xef JUMPDEST
0xf0 PUSH1 0x40
0xf2 MLOAD
0xf3 SWAP1
0xf4 DUP2
0xf5 MSTORE
0xf6 PUSH1 0x20
0xf8 ADD
0xf9 PUSH1 0x40
0xfb MLOAD
0xfc DUP1
0xfd SWAP2
0xfe SUB
0xff SWAP1
0x100 RETURN
---
0xef: JUMPDEST 
0xf0: V63 = 0x40
0xf2: V64 = M[0x40]
0xf5: M[V64] = V242
0xf6: V65 = 0x20
0xf8: V66 = ADD 0x20 V64
0xf9: V67 = 0x40
0xfb: V68 = M[0x40]
0xfe: V69 = SUB V66 V68
0x100: RETURN V68 V69
---
Entry stack: [V11, V242]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x101
[0x101:0x107]
---
Predecessors: [0x40]
Successors: [0x108, 0x10c]
---
0x101 JUMPDEST
0x102 CALLVALUE
0x103 ISZERO
0x104 PUSH2 0x10c
0x107 JUMPI
---
0x101: JUMPDEST 
0x102: V70 = CALLVALUE
0x103: V71 = ISZERO V70
0x104: V72 = 0x10c
0x107: JUMPI 0x10c V71
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x108
[0x108:0x10b]
---
Predecessors: [0x101]
Successors: []
---
0x108 PUSH1 0x0
0x10a DUP1
0x10b REVERT
---
0x108: V73 = 0x0
0x10b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x10c
[0x10c:0x113]
---
Predecessors: [0x101]
Successors: [0x2c0]
---
0x10c JUMPDEST
0x10d PUSH2 0xda
0x110 PUSH2 0x2c0
0x113 JUMP
---
0x10c: JUMPDEST 
0x10d: V74 = 0xda
0x110: V75 = 0x2c0
0x113: JUMP 0x2c0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xda]
Exit stack: [V11, 0xda]

================================

Block 0x114
[0x114:0x11a]
---
Predecessors: [0x4b]
Successors: [0x11b, 0x11f]
---
0x114 JUMPDEST
0x115 CALLVALUE
0x116 ISZERO
0x117 PUSH2 0x11f
0x11a JUMPI
---
0x114: JUMPDEST 
0x115: V76 = CALLVALUE
0x116: V77 = ISZERO V76
0x117: V78 = 0x11f
0x11a: JUMPI 0x11f V77
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x11b
[0x11b:0x11e]
---
Predecessors: [0x114]
Successors: []
---
0x11b PUSH1 0x0
0x11d DUP1
0x11e REVERT
---
0x11b: V79 = 0x0
0x11e: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x11f
[0x11f:0x129]
---
Predecessors: [0x114]
Successors: [0x2fd]
---
0x11f JUMPDEST
0x120 PUSH2 0xda
0x123 PUSH1 0x4
0x125 CALLDATALOAD
0x126 PUSH2 0x2fd
0x129 JUMP
---
0x11f: JUMPDEST 
0x120: V80 = 0xda
0x123: V81 = 0x4
0x125: V82 = CALLDATALOAD 0x4
0x126: V83 = 0x2fd
0x129: JUMP 0x2fd
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xda, V82]
Exit stack: [V11, 0xda, V82]

================================

Block 0x12a
[0x12a:0x130]
---
Predecessors: [0x56]
Successors: [0x131, 0x135]
---
0x12a JUMPDEST
0x12b CALLVALUE
0x12c ISZERO
0x12d PUSH2 0x135
0x130 JUMPI
---
0x12a: JUMPDEST 
0x12b: V84 = CALLVALUE
0x12c: V85 = ISZERO V84
0x12d: V86 = 0x135
0x130: JUMPI 0x135 V85
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x131
[0x131:0x134]
---
Predecessors: [0x12a]
Successors: []
---
0x131 PUSH1 0x0
0x133 DUP1
0x134 REVERT
---
0x131: V87 = 0x0
0x134: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x135
[0x135:0x13c]
---
Predecessors: [0x12a]
Successors: [0x34c]
---
0x135 JUMPDEST
0x136 PUSH2 0xda
0x139 PUSH2 0x34c
0x13c JUMP
---
0x135: JUMPDEST 
0x136: V88 = 0xda
0x139: V89 = 0x34c
0x13c: JUMP 0x34c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xda]
Exit stack: [V11, 0xda]

================================

Block 0x13d
[0x13d:0x143]
---
Predecessors: [0x61]
Successors: [0x144, 0x148]
---
0x13d JUMPDEST
0x13e CALLVALUE
0x13f ISZERO
0x140 PUSH2 0x148
0x143 JUMPI
---
0x13d: JUMPDEST 
0x13e: V90 = CALLVALUE
0x13f: V91 = ISZERO V90
0x140: V92 = 0x148
0x143: JUMPI 0x148 V91
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x144
[0x144:0x147]
---
Predecessors: [0x13d]
Successors: []
---
0x144 PUSH1 0x0
0x146 DUP1
0x147 REVERT
---
0x144: V93 = 0x0
0x147: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x148
[0x148:0x15b]
---
Predecessors: [0x13d]
Successors: [0x38b]
---
0x148 JUMPDEST
0x149 PUSH2 0xda
0x14c PUSH1 0x1
0x14e PUSH1 0xa0
0x150 PUSH1 0x2
0x152 EXP
0x153 SUB
0x154 PUSH1 0x4
0x156 CALLDATALOAD
0x157 AND
0x158 PUSH2 0x38b
0x15b JUMP
---
0x148: JUMPDEST 
0x149: V94 = 0xda
0x14c: V95 = 0x1
0x14e: V96 = 0xa0
0x150: V97 = 0x2
0x152: V98 = EXP 0x2 0xa0
0x153: V99 = SUB 0x10000000000000000000000000000000000000000 0x1
0x154: V100 = 0x4
0x156: V101 = CALLDATALOAD 0x4
0x157: V102 = AND V101 0xffffffffffffffffffffffffffffffffffffffff
0x158: V103 = 0x38b
0x15b: JUMP 0x38b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xda, V102]
Exit stack: [V11, 0xda, V102]

================================

Block 0x15c
[0x15c:0x162]
---
Predecessors: [0x6c]
Successors: [0x163, 0x167]
---
0x15c JUMPDEST
0x15d CALLVALUE
0x15e ISZERO
0x15f PUSH2 0x167
0x162 JUMPI
---
0x15c: JUMPDEST 
0x15d: V104 = CALLVALUE
0x15e: V105 = ISZERO V104
0x15f: V106 = 0x167
0x162: JUMPI 0x167 V105
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x163
[0x163:0x166]
---
Predecessors: [0x15c]
Successors: []
---
0x163 PUSH1 0x0
0x165 DUP1
0x166 REVERT
---
0x163: V107 = 0x0
0x166: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x167
[0x167:0x16e]
---
Predecessors: [0x15c]
Successors: [0x436]
---
0x167 JUMPDEST
0x168 PUSH2 0xda
0x16b PUSH2 0x436
0x16e JUMP
---
0x167: JUMPDEST 
0x168: V108 = 0xda
0x16b: V109 = 0x436
0x16e: JUMP 0x436
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xda]
Exit stack: [V11, 0xda]

================================

Block 0x16f
[0x16f:0x175]
---
Predecessors: [0x77]
Successors: [0x176, 0x17a]
---
0x16f JUMPDEST
0x170 CALLVALUE
0x171 ISZERO
0x172 PUSH2 0x17a
0x175 JUMPI
---
0x16f: JUMPDEST 
0x170: V110 = CALLVALUE
0x171: V111 = ISZERO V110
0x172: V112 = 0x17a
0x175: JUMPI 0x17a V111
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x176
[0x176:0x179]
---
Predecessors: [0x16f]
Successors: []
---
0x176 PUSH1 0x0
0x178 DUP1
0x179 REVERT
---
0x176: V113 = 0x0
0x179: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x17a
[0x17a:0x181]
---
Predecessors: [0x16f]
Successors: [0x4ac]
---
0x17a JUMPDEST
0x17b PUSH2 0x182
0x17e PUSH2 0x4ac
0x181 JUMP
---
0x17a: JUMPDEST 
0x17b: V114 = 0x182
0x17e: V115 = 0x4ac
0x181: JUMP 0x4ac
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x182]
Exit stack: [V11, 0x182]

================================

Block 0x182
[0x182:0x19d]
---
Predecessors: [0x4ac, 0x5c2, 0x5d6]
Successors: []
---
0x182 JUMPDEST
0x183 PUSH1 0x40
0x185 MLOAD
0x186 PUSH1 0x1
0x188 PUSH1 0xa0
0x18a PUSH1 0x2
0x18c EXP
0x18d SUB
0x18e SWAP1
0x18f SWAP2
0x190 AND
0x191 DUP2
0x192 MSTORE
0x193 PUSH1 0x20
0x195 ADD
0x196 PUSH1 0x40
0x198 MLOAD
0x199 DUP1
0x19a SWAP2
0x19b SUB
0x19c SWAP1
0x19d RETURN
---
0x182: JUMPDEST 
0x183: V116 = 0x40
0x185: V117 = M[0x40]
0x186: V118 = 0x1
0x188: V119 = 0xa0
0x18a: V120 = 0x2
0x18c: V121 = EXP 0x2 0xa0
0x18d: V122 = SUB 0x10000000000000000000000000000000000000000 0x1
0x190: V123 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x192: M[V117] = V123
0x193: V124 = 0x20
0x195: V125 = ADD 0x20 V117
0x196: V126 = 0x40
0x198: V127 = M[0x40]
0x19b: V128 = SUB V125 V127
0x19d: RETURN V127 V128
---
Entry stack: [V11, 0x182, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x182]

================================

Block 0x19e
[0x19e:0x1a4]
---
Predecessors: [0x82]
Successors: [0x1a5, 0x1a9]
---
0x19e JUMPDEST
0x19f CALLVALUE
0x1a0 ISZERO
0x1a1 PUSH2 0x1a9
0x1a4 JUMPI
---
0x19e: JUMPDEST 
0x19f: V129 = CALLVALUE
0x1a0: V130 = ISZERO V129
0x1a1: V131 = 0x1a9
0x1a4: JUMPI 0x1a9 V130
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1a5
[0x1a5:0x1a8]
---
Predecessors: [0x19e]
Successors: []
---
0x1a5 PUSH1 0x0
0x1a7 DUP1
0x1a8 REVERT
---
0x1a5: V132 = 0x0
0x1a8: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1a9
[0x1a9:0x1bc]
---
Predecessors: [0x19e]
Successors: [0x4bb]
---
0x1a9 JUMPDEST
0x1aa PUSH2 0xda
0x1ad PUSH1 0x1
0x1af PUSH1 0xa0
0x1b1 PUSH1 0x2
0x1b3 EXP
0x1b4 SUB
0x1b5 PUSH1 0x4
0x1b7 CALLDATALOAD
0x1b8 AND
0x1b9 PUSH2 0x4bb
0x1bc JUMP
---
0x1a9: JUMPDEST 
0x1aa: V133 = 0xda
0x1ad: V134 = 0x1
0x1af: V135 = 0xa0
0x1b1: V136 = 0x2
0x1b3: V137 = EXP 0x2 0xa0
0x1b4: V138 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b5: V139 = 0x4
0x1b7: V140 = CALLDATALOAD 0x4
0x1b8: V141 = AND V140 0xffffffffffffffffffffffffffffffffffffffff
0x1b9: V142 = 0x4bb
0x1bc: JUMP 0x4bb
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xda, V141]
Exit stack: [V11, 0xda, V141]

================================

Block 0x1bd
[0x1bd:0x1c3]
---
Predecessors: [0x8d]
Successors: [0x1c4, 0x1c8]
---
0x1bd JUMPDEST
0x1be CALLVALUE
0x1bf ISZERO
0x1c0 PUSH2 0x1c8
0x1c3 JUMPI
---
0x1bd: JUMPDEST 
0x1be: V143 = CALLVALUE
0x1bf: V144 = ISZERO V143
0x1c0: V145 = 0x1c8
0x1c3: JUMPI 0x1c8 V144
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1c4
[0x1c4:0x1c7]
---
Predecessors: [0x1bd]
Successors: []
---
0x1c4 PUSH1 0x0
0x1c6 DUP1
0x1c7 REVERT
---
0x1c4: V146 = 0x0
0x1c7: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1c8
[0x1c8:0x1cf]
---
Predecessors: [0x1bd]
Successors: [0x53a]
---
0x1c8 JUMPDEST
0x1c9 PUSH2 0x1d0
0x1cc PUSH2 0x53a
0x1cf JUMP
---
0x1c8: JUMPDEST 
0x1c9: V147 = 0x1d0
0x1cc: V148 = 0x53a
0x1cf: JUMP 0x53a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1d0]
Exit stack: [V11, 0x1d0]

================================

Block 0x1d0
[0x1d0:0x1e3]
---
Predecessors: [0x53a]
Successors: []
---
0x1d0 JUMPDEST
0x1d1 PUSH1 0x40
0x1d3 MLOAD
0x1d4 SWAP1
0x1d5 ISZERO
0x1d6 ISZERO
0x1d7 DUP2
0x1d8 MSTORE
0x1d9 PUSH1 0x20
0x1db ADD
0x1dc PUSH1 0x40
0x1de MLOAD
0x1df DUP1
0x1e0 SWAP2
0x1e1 SUB
0x1e2 SWAP1
0x1e3 RETURN
---
0x1d0: JUMPDEST 
0x1d1: V149 = 0x40
0x1d3: V150 = M[0x40]
0x1d5: V151 = ISZERO V477
0x1d6: V152 = ISZERO V151
0x1d8: M[V150] = V152
0x1d9: V153 = 0x20
0x1db: V154 = ADD 0x20 V150
0x1dc: V155 = 0x40
0x1de: V156 = M[0x40]
0x1e1: V157 = SUB V154 V156
0x1e3: RETURN V156 V157
---
Entry stack: [V11, 0x1d0, V477]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1d0]

================================

Block 0x1e4
[0x1e4:0x1ea]
---
Predecessors: [0x98]
Successors: [0x1eb, 0x1ef]
---
0x1e4 JUMPDEST
0x1e5 CALLVALUE
0x1e6 ISZERO
0x1e7 PUSH2 0x1ef
0x1ea JUMPI
---
0x1e4: JUMPDEST 
0x1e5: V158 = CALLVALUE
0x1e6: V159 = ISZERO V158
0x1e7: V160 = 0x1ef
0x1ea: JUMPI 0x1ef V159
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1eb
[0x1eb:0x1ee]
---
Predecessors: [0x1e4]
Successors: []
---
0x1eb PUSH1 0x0
0x1ed DUP1
0x1ee REVERT
---
0x1eb: V161 = 0x0
0x1ee: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1ef
[0x1ef:0x202]
---
Predecessors: [0x1e4]
Successors: [0x543]
---
0x1ef JUMPDEST
0x1f0 PUSH2 0xda
0x1f3 PUSH1 0x1
0x1f5 PUSH1 0xa0
0x1f7 PUSH1 0x2
0x1f9 EXP
0x1fa SUB
0x1fb PUSH1 0x4
0x1fd CALLDATALOAD
0x1fe AND
0x1ff PUSH2 0x543
0x202 JUMP
---
0x1ef: JUMPDEST 
0x1f0: V162 = 0xda
0x1f3: V163 = 0x1
0x1f5: V164 = 0xa0
0x1f7: V165 = 0x2
0x1f9: V166 = EXP 0x2 0xa0
0x1fa: V167 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1fb: V168 = 0x4
0x1fd: V169 = CALLDATALOAD 0x4
0x1fe: V170 = AND V169 0xffffffffffffffffffffffffffffffffffffffff
0x1ff: V171 = 0x543
0x202: JUMP 0x543
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xda, V170]
Exit stack: [V11, 0xda, V170]

================================

Block 0x203
[0x203:0x209]
---
Predecessors: [0xa3]
Successors: [0x20a, 0x20e]
---
0x203 JUMPDEST
0x204 CALLVALUE
0x205 ISZERO
0x206 PUSH2 0x20e
0x209 JUMPI
---
0x203: JUMPDEST 
0x204: V172 = CALLVALUE
0x205: V173 = ISZERO V172
0x206: V174 = 0x20e
0x209: JUMPI 0x20e V173
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x20a
[0x20a:0x20d]
---
Predecessors: [0x203]
Successors: []
---
0x20a PUSH1 0x0
0x20c DUP1
0x20d REVERT
---
0x20a: V175 = 0x0
0x20d: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x20e
[0x20e:0x215]
---
Predecessors: [0x203]
Successors: [0x5c2]
---
0x20e JUMPDEST
0x20f PUSH2 0x182
0x212 PUSH2 0x5c2
0x215 JUMP
---
0x20e: JUMPDEST 
0x20f: V176 = 0x182
0x212: V177 = 0x5c2
0x215: JUMP 0x5c2
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x182]
Exit stack: [V11, 0x182]

================================

Block 0x216
[0x216:0x21c]
---
Predecessors: [0xae]
Successors: [0x21d, 0x221]
---
0x216 JUMPDEST
0x217 CALLVALUE
0x218 ISZERO
0x219 PUSH2 0x221
0x21c JUMPI
---
0x216: JUMPDEST 
0x217: V178 = CALLVALUE
0x218: V179 = ISZERO V178
0x219: V180 = 0x221
0x21c: JUMPI 0x221 V179
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x21d
[0x21d:0x220]
---
Predecessors: [0x216]
Successors: []
---
0x21d PUSH1 0x0
0x21f DUP1
0x220 REVERT
---
0x21d: V181 = 0x0
0x220: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x221
[0x221:0x228]
---
Predecessors: [0x216]
Successors: [0x5d6]
---
0x221 JUMPDEST
0x222 PUSH2 0x182
0x225 PUSH2 0x5d6
0x228 JUMP
---
0x221: JUMPDEST 
0x222: V182 = 0x182
0x225: V183 = 0x5d6
0x228: JUMP 0x5d6
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x182]
Exit stack: [V11, 0x182]

================================

Block 0x229
[0x229:0x22f]
---
Predecessors: [0xb9]
Successors: [0x230, 0x234]
---
0x229 JUMPDEST
0x22a CALLVALUE
0x22b ISZERO
0x22c PUSH2 0x234
0x22f JUMPI
---
0x229: JUMPDEST 
0x22a: V184 = CALLVALUE
0x22b: V185 = ISZERO V184
0x22c: V186 = 0x234
0x22f: JUMPI 0x234 V185
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x230
[0x230:0x233]
---
Predecessors: [0x229]
Successors: []
---
0x230 PUSH1 0x0
0x232 DUP1
0x233 REVERT
---
0x230: V187 = 0x0
0x233: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x234
[0x234:0x25f]
---
Predecessors: [0x229]
Successors: [0x5e5]
---
0x234 JUMPDEST
0x235 PUSH2 0xda
0x238 PUSH1 0x24
0x23a PUSH1 0x4
0x23c DUP1
0x23d CALLDATALOAD
0x23e DUP3
0x23f DUP2
0x240 ADD
0x241 SWAP3
0x242 SWAP1
0x243 DUP3
0x244 ADD
0x245 CALLDATALOAD
0x246 SWAP2
0x247 DUP2
0x248 CALLDATALOAD
0x249 SWAP2
0x24a DUP3
0x24b ADD
0x24c SWAP2
0x24d ADD
0x24e CALLDATALOAD
0x24f PUSH8 0xffffffffffffffff
0x258 PUSH1 0x44
0x25a CALLDATALOAD
0x25b AND
0x25c PUSH2 0x5e5
0x25f JUMP
---
0x234: JUMPDEST 
0x235: V188 = 0xda
0x238: V189 = 0x24
0x23a: V190 = 0x4
0x23d: V191 = CALLDATALOAD 0x4
0x240: V192 = ADD V191 0x24
0x244: V193 = ADD 0x4 V191
0x245: V194 = CALLDATALOAD V193
0x248: V195 = CALLDATALOAD 0x24
0x24b: V196 = ADD V195 0x24
0x24d: V197 = ADD V195 0x4
0x24e: V198 = CALLDATALOAD V197
0x24f: V199 = 0xffffffffffffffff
0x258: V200 = 0x44
0x25a: V201 = CALLDATALOAD 0x44
0x25b: V202 = AND V201 0xffffffffffffffff
0x25c: V203 = 0x5e5
0x25f: JUMP 0x5e5
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xda, V192, V194, V196, V198, V202]
Exit stack: [V11, 0xda, V192, V194, V196, V198, V202]

================================

Block 0x260
[0x260:0x266]
---
Predecessors: [0xc4]
Successors: [0x267, 0x26b]
---
0x260 JUMPDEST
0x261 CALLVALUE
0x262 ISZERO
0x263 PUSH2 0x26b
0x266 JUMPI
---
0x260: JUMPDEST 
0x261: V204 = CALLVALUE
0x262: V205 = ISZERO V204
0x263: V206 = 0x26b
0x266: JUMPI 0x26b V205
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x267
[0x267:0x26a]
---
Predecessors: [0x260]
Successors: []
---
0x267 PUSH1 0x0
0x269 DUP1
0x26a REVERT
---
0x267: V207 = 0x0
0x26a: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x26b
[0x26b:0x281]
---
Predecessors: [0x260]
Successors: [0x847]
---
0x26b JUMPDEST
0x26c PUSH2 0xda
0x26f PUSH1 0x1
0x271 PUSH1 0xa0
0x273 PUSH1 0x2
0x275 EXP
0x276 SUB
0x277 PUSH1 0x4
0x279 CALLDATALOAD
0x27a AND
0x27b PUSH1 0x24
0x27d CALLDATALOAD
0x27e PUSH2 0x847
0x281 JUMP
---
0x26b: JUMPDEST 
0x26c: V208 = 0xda
0x26f: V209 = 0x1
0x271: V210 = 0xa0
0x273: V211 = 0x2
0x275: V212 = EXP 0x2 0xa0
0x276: V213 = SUB 0x10000000000000000000000000000000000000000 0x1
0x277: V214 = 0x4
0x279: V215 = CALLDATALOAD 0x4
0x27a: V216 = AND V215 0xffffffffffffffffffffffffffffffffffffffff
0x27b: V217 = 0x24
0x27d: V218 = CALLDATALOAD 0x24
0x27e: V219 = 0x847
0x281: JUMP 0x847
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xda, V216, V218]
Exit stack: [V11, 0xda, V216, V218]

================================

Block 0x282
[0x282:0x288]
---
Predecessors: [0xcf]
Successors: [0x289, 0x28d]
---
0x282 JUMPDEST
0x283 CALLVALUE
0x284 ISZERO
0x285 PUSH2 0x28d
0x288 JUMPI
---
0x282: JUMPDEST 
0x283: V220 = CALLVALUE
0x284: V221 = ISZERO V220
0x285: V222 = 0x28d
0x288: JUMPI 0x28d V221
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x289
[0x289:0x28c]
---
Predecessors: [0x282]
Successors: []
---
0x289 PUSH1 0x0
0x28b DUP1
0x28c REVERT
---
0x289: V223 = 0x0
0x28c: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x28d
[0x28d:0x294]
---
Predecessors: [0x282]
Successors: [0x945]
---
0x28d JUMPDEST
0x28e PUSH2 0x295
0x291 PUSH2 0x945
0x294 JUMP
---
0x28d: JUMPDEST 
0x28e: V224 = 0x295
0x291: V225 = 0x945
0x294: JUMP 0x945
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x295]
Exit stack: [V11, 0x295]

================================

Block 0x295
[0x295:0x2b1]
---
Predecessors: [0x945]
Successors: []
---
0x295 JUMPDEST
0x296 PUSH1 0x40
0x298 MLOAD
0x299 PUSH8 0xffffffffffffffff
0x2a2 SWAP1
0x2a3 SWAP2
0x2a4 AND
0x2a5 DUP2
0x2a6 MSTORE
0x2a7 PUSH1 0x20
0x2a9 ADD
0x2aa PUSH1 0x40
0x2ac MLOAD
0x2ad DUP1
0x2ae SWAP2
0x2af SUB
0x2b0 SWAP1
0x2b1 RETURN
---
0x295: JUMPDEST 
0x296: V226 = 0x40
0x298: V227 = M[0x40]
0x299: V228 = 0xffffffffffffffff
0x2a4: V229 = AND V849 0xffffffffffffffff
0x2a6: M[V227] = V229
0x2a7: V230 = 0x20
0x2a9: V231 = ADD 0x20 V227
0x2aa: V232 = 0x40
0x2ac: V233 = M[0x40]
0x2af: V234 = SUB V231 V233
0x2b1: RETURN V233 V234
---
Entry stack: [V11, 0x295, V849]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x295]

================================

Block 0x2b2
[0x2b2:0x2bf]
---
Predecessors: [0xe7]
Successors: [0xef]
---
0x2b2 JUMPDEST
0x2b3 PUSH1 0x1
0x2b5 PUSH1 0xa0
0x2b7 PUSH1 0x2
0x2b9 EXP
0x2ba SUB
0x2bb ADDRESS
0x2bc AND
0x2bd BALANCE
0x2be SWAP1
0x2bf JUMP
---
0x2b2: JUMPDEST 
0x2b3: V235 = 0x1
0x2b5: V236 = 0xa0
0x2b7: V237 = 0x2
0x2b9: V238 = EXP 0x2 0xa0
0x2ba: V239 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2bb: V240 = ADDRESS
0x2bc: V241 = AND V240 0xffffffffffffffffffffffffffffffffffffffff
0x2bd: V242 = BALANCE V241
0x2bf: JUMP 0xef
---
Entry stack: [V11, 0xef]
Stack pops: 1
Stack additions: [V242]
Exit stack: [V11, V242]

================================

Block 0x2c0
[0x2c0:0x2db]
---
Predecessors: [0x10c]
Successors: [0x2dc, 0x2e0]
---
0x2c0 JUMPDEST
0x2c1 PUSH1 0x0
0x2c3 SLOAD
0x2c4 CALLER
0x2c5 PUSH1 0x1
0x2c7 PUSH1 0xa0
0x2c9 PUSH1 0x2
0x2cb EXP
0x2cc SUB
0x2cd SWAP1
0x2ce DUP2
0x2cf AND
0x2d0 PUSH2 0x100
0x2d3 SWAP1
0x2d4 SWAP3
0x2d5 DIV
0x2d6 AND
0x2d7 EQ
0x2d8 PUSH2 0x2e0
0x2db JUMPI
---
0x2c0: JUMPDEST 
0x2c1: V243 = 0x0
0x2c3: V244 = S[0x0]
0x2c4: V245 = CALLER
0x2c5: V246 = 0x1
0x2c7: V247 = 0xa0
0x2c9: V248 = 0x2
0x2cb: V249 = EXP 0x2 0xa0
0x2cc: V250 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2cf: V251 = AND 0xffffffffffffffffffffffffffffffffffffffff V245
0x2d0: V252 = 0x100
0x2d5: V253 = DIV V244 0x100
0x2d6: V254 = AND V253 0xffffffffffffffffffffffffffffffffffffffff
0x2d7: V255 = EQ V254 V251
0x2d8: V256 = 0x2e0
0x2db: JUMPI 0x2e0 V255
---
Entry stack: [V11, 0xda]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda]

================================

Block 0x2dc
[0x2dc:0x2df]
---
Predecessors: [0x2c0]
Successors: []
---
0x2dc PUSH1 0x0
0x2de DUP1
0x2df REVERT
---
0x2dc: V257 = 0x0
0x2df: REVERT 0x0 0x0
---
Entry stack: [V11, 0xda]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda]

================================

Block 0x2e0
[0x2e0:0x2ec]
---
Predecessors: [0x2c0]
Successors: [0x2ed, 0x2f1]
---
0x2e0 JUMPDEST
0x2e1 PUSH1 0x0
0x2e3 SLOAD
0x2e4 PUSH1 0xff
0x2e6 AND
0x2e7 ISZERO
0x2e8 ISZERO
0x2e9 PUSH2 0x2f1
0x2ec JUMPI
---
0x2e0: JUMPDEST 
0x2e1: V258 = 0x0
0x2e3: V259 = S[0x0]
0x2e4: V260 = 0xff
0x2e6: V261 = AND 0xff V259
0x2e7: V262 = ISZERO V261
0x2e8: V263 = ISZERO V262
0x2e9: V264 = 0x2f1
0x2ec: JUMPI 0x2f1 V263
---
Entry stack: [V11, 0xda]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda]

================================

Block 0x2ed
[0x2ed:0x2f0]
---
Predecessors: [0x2e0]
Successors: []
---
0x2ed PUSH1 0x0
0x2ef DUP1
0x2f0 REVERT
---
0x2ed: V265 = 0x0
0x2f0: REVERT 0x0 0x0
---
Entry stack: [V11, 0xda]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda]

================================

Block 0x2f1
[0x2f1:0x2fc]
---
Predecessors: [0x2e0]
Successors: [0xda]
---
0x2f1 JUMPDEST
0x2f2 PUSH1 0x0
0x2f4 DUP1
0x2f5 SLOAD
0x2f6 PUSH1 0xff
0x2f8 NOT
0x2f9 AND
0x2fa SWAP1
0x2fb SSTORE
0x2fc JUMP
---
0x2f1: JUMPDEST 
0x2f2: V266 = 0x0
0x2f5: V267 = S[0x0]
0x2f6: V268 = 0xff
0x2f8: V269 = NOT 0xff
0x2f9: V270 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V267
0x2fb: S[0x0] = V270
0x2fc: JUMP 0xda
---
Entry stack: [V11, 0xda]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x2fd
[0x2fd:0x318]
---
Predecessors: [0x11f]
Successors: [0x319, 0x31d]
---
0x2fd JUMPDEST
0x2fe PUSH1 0x0
0x300 SLOAD
0x301 CALLER
0x302 PUSH1 0x1
0x304 PUSH1 0xa0
0x306 PUSH1 0x2
0x308 EXP
0x309 SUB
0x30a SWAP1
0x30b DUP2
0x30c AND
0x30d PUSH2 0x100
0x310 SWAP1
0x311 SWAP3
0x312 DIV
0x313 AND
0x314 EQ
0x315 PUSH2 0x31d
0x318 JUMPI
---
0x2fd: JUMPDEST 
0x2fe: V271 = 0x0
0x300: V272 = S[0x0]
0x301: V273 = CALLER
0x302: V274 = 0x1
0x304: V275 = 0xa0
0x306: V276 = 0x2
0x308: V277 = EXP 0x2 0xa0
0x309: V278 = SUB 0x10000000000000000000000000000000000000000 0x1
0x30c: V279 = AND 0xffffffffffffffffffffffffffffffffffffffff V273
0x30d: V280 = 0x100
0x312: V281 = DIV V272 0x100
0x313: V282 = AND V281 0xffffffffffffffffffffffffffffffffffffffff
0x314: V283 = EQ V282 V279
0x315: V284 = 0x31d
0x318: JUMPI 0x31d V283
---
Entry stack: [V11, 0xda, V82]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda, V82]

================================

Block 0x319
[0x319:0x31c]
---
Predecessors: [0x2fd]
Successors: []
---
0x319 PUSH1 0x0
0x31b DUP1
0x31c REVERT
---
0x319: V285 = 0x0
0x31c: REVERT 0x0 0x0
---
Entry stack: [V11, 0xda, V82]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda, V82]

================================

Block 0x31d
[0x31d:0x327]
---
Predecessors: [0x2fd]
Successors: [0x328, 0x32d]
---
0x31d JUMPDEST
0x31e PUSH1 0x0
0x320 DUP2
0x321 GT
0x322 DUP1
0x323 ISZERO
0x324 PUSH2 0x32d
0x327 JUMPI
---
0x31d: JUMPDEST 
0x31e: V286 = 0x0
0x321: V287 = GT V82 0x0
0x323: V288 = ISZERO V287
0x324: V289 = 0x32d
0x327: JUMPI 0x32d V288
---
Entry stack: [V11, 0xda, V82]
Stack pops: 1
Stack additions: [S0, V287]
Exit stack: [V11, 0xda, V82, V287]

================================

Block 0x328
[0x328:0x32c]
---
Predecessors: [0x31d]
Successors: [0x32d]
---
0x328 POP
0x329 PUSH1 0x64
0x32b DUP2
0x32c LT
---
0x329: V290 = 0x64
0x32c: V291 = LT V82 0x64
---
Entry stack: [V11, 0xda, V82, V287]
Stack pops: 2
Stack additions: [S1, V291]
Exit stack: [V11, 0xda, V82, V291]

================================

Block 0x32d
[0x32d:0x333]
---
Predecessors: [0x31d, 0x328]
Successors: [0x334, 0x338]
---
0x32d JUMPDEST
0x32e ISZERO
0x32f ISZERO
0x330 PUSH2 0x338
0x333 JUMPI
---
0x32d: JUMPDEST 
0x32e: V292 = ISZERO S0
0x32f: V293 = ISZERO V292
0x330: V294 = 0x338
0x333: JUMPI 0x338 V293
---
Entry stack: [V11, 0xda, V82, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xda, V82]

================================

Block 0x334
[0x334:0x337]
---
Predecessors: [0x32d]
Successors: []
---
0x334 PUSH1 0x0
0x336 DUP1
0x337 REVERT
---
0x334: V295 = 0x0
0x337: REVERT 0x0 0x0
---
Entry stack: [V11, 0xda, V82]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda, V82]

================================

Block 0x338
[0x338:0x342]
---
Predecessors: [0x32d]
Successors: [0x343, 0x347]
---
0x338 JUMPDEST
0x339 PUSH1 0x3
0x33b SLOAD
0x33c DUP2
0x33d EQ
0x33e ISZERO
0x33f PUSH2 0x347
0x342 JUMPI
---
0x338: JUMPDEST 
0x339: V296 = 0x3
0x33b: V297 = S[0x3]
0x33d: V298 = EQ V82 V297
0x33e: V299 = ISZERO V298
0x33f: V300 = 0x347
0x342: JUMPI 0x347 V299
---
Entry stack: [V11, 0xda, V82]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xda, V82]

================================

Block 0x343
[0x343:0x346]
---
Predecessors: [0x338]
Successors: []
---
0x343 PUSH1 0x0
0x345 DUP1
0x346 REVERT
---
0x343: V301 = 0x0
0x346: REVERT 0x0 0x0
---
Entry stack: [V11, 0xda, V82]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda, V82]

================================

Block 0x347
[0x347:0x34b]
---
Predecessors: [0x338]
Successors: [0xda]
---
0x347 JUMPDEST
0x348 PUSH1 0x3
0x34a SSTORE
0x34b JUMP
---
0x347: JUMPDEST 
0x348: V302 = 0x3
0x34a: S[0x3] = V82
0x34b: JUMP 0xda
---
Entry stack: [V11, 0xda, V82]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x34c
[0x34c:0x367]
---
Predecessors: [0x135]
Successors: [0x368, 0x36c]
---
0x34c JUMPDEST
0x34d PUSH1 0x0
0x34f SLOAD
0x350 CALLER
0x351 PUSH1 0x1
0x353 PUSH1 0xa0
0x355 PUSH1 0x2
0x357 EXP
0x358 SUB
0x359 SWAP1
0x35a DUP2
0x35b AND
0x35c PUSH2 0x100
0x35f SWAP1
0x360 SWAP3
0x361 DIV
0x362 AND
0x363 EQ
0x364 PUSH2 0x36c
0x367 JUMPI
---
0x34c: JUMPDEST 
0x34d: V303 = 0x0
0x34f: V304 = S[0x0]
0x350: V305 = CALLER
0x351: V306 = 0x1
0x353: V307 = 0xa0
0x355: V308 = 0x2
0x357: V309 = EXP 0x2 0xa0
0x358: V310 = SUB 0x10000000000000000000000000000000000000000 0x1
0x35b: V311 = AND 0xffffffffffffffffffffffffffffffffffffffff V305
0x35c: V312 = 0x100
0x361: V313 = DIV V304 0x100
0x362: V314 = AND V313 0xffffffffffffffffffffffffffffffffffffffff
0x363: V315 = EQ V314 V311
0x364: V316 = 0x36c
0x367: JUMPI 0x36c V315
---
Entry stack: [V11, 0xda]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda]

================================

Block 0x368
[0x368:0x36b]
---
Predecessors: [0x34c]
Successors: []
---
0x368 PUSH1 0x0
0x36a DUP1
0x36b REVERT
---
0x368: V317 = 0x0
0x36b: REVERT 0x0 0x0
---
Entry stack: [V11, 0xda]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda]

================================

Block 0x36c
[0x36c:0x377]
---
Predecessors: [0x34c]
Successors: [0x378, 0x37c]
---
0x36c JUMPDEST
0x36d PUSH1 0x0
0x36f SLOAD
0x370 PUSH1 0xff
0x372 AND
0x373 ISZERO
0x374 PUSH2 0x37c
0x377 JUMPI
---
0x36c: JUMPDEST 
0x36d: V318 = 0x0
0x36f: V319 = S[0x0]
0x370: V320 = 0xff
0x372: V321 = AND 0xff V319
0x373: V322 = ISZERO V321
0x374: V323 = 0x37c
0x377: JUMPI 0x37c V322
---
Entry stack: [V11, 0xda]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda]

================================

Block 0x378
[0x378:0x37b]
---
Predecessors: [0x36c]
Successors: []
---
0x378 PUSH1 0x0
0x37a DUP1
0x37b REVERT
---
0x378: V324 = 0x0
0x37b: REVERT 0x0 0x0
---
Entry stack: [V11, 0xda]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda]

================================

Block 0x37c
[0x37c:0x38a]
---
Predecessors: [0x36c]
Successors: [0xda]
---
0x37c JUMPDEST
0x37d PUSH1 0x0
0x37f DUP1
0x380 SLOAD
0x381 PUSH1 0xff
0x383 NOT
0x384 AND
0x385 PUSH1 0x1
0x387 OR
0x388 SWAP1
0x389 SSTORE
0x38a JUMP
---
0x37c: JUMPDEST 
0x37d: V325 = 0x0
0x380: V326 = S[0x0]
0x381: V327 = 0xff
0x383: V328 = NOT 0xff
0x384: V329 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V326
0x385: V330 = 0x1
0x387: V331 = OR 0x1 V329
0x389: S[0x0] = V331
0x38a: JUMP 0xda
---
Entry stack: [V11, 0xda]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x38b
[0x38b:0x3a6]
---
Predecessors: [0x148]
Successors: [0x3a7, 0x3ab]
---
0x38b JUMPDEST
0x38c PUSH1 0x0
0x38e SLOAD
0x38f CALLER
0x390 PUSH1 0x1
0x392 PUSH1 0xa0
0x394 PUSH1 0x2
0x396 EXP
0x397 SUB
0x398 SWAP1
0x399 DUP2
0x39a AND
0x39b PUSH2 0x100
0x39e SWAP1
0x39f SWAP3
0x3a0 DIV
0x3a1 AND
0x3a2 EQ
0x3a3 PUSH2 0x3ab
0x3a6 JUMPI
---
0x38b: JUMPDEST 
0x38c: V332 = 0x0
0x38e: V333 = S[0x0]
0x38f: V334 = CALLER
0x390: V335 = 0x1
0x392: V336 = 0xa0
0x394: V337 = 0x2
0x396: V338 = EXP 0x2 0xa0
0x397: V339 = SUB 0x10000000000000000000000000000000000000000 0x1
0x39a: V340 = AND 0xffffffffffffffffffffffffffffffffffffffff V334
0x39b: V341 = 0x100
0x3a0: V342 = DIV V333 0x100
0x3a1: V343 = AND V342 0xffffffffffffffffffffffffffffffffffffffff
0x3a2: V344 = EQ V343 V340
0x3a3: V345 = 0x3ab
0x3a6: JUMPI 0x3ab V344
---
Entry stack: [V11, 0xda, V102]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda, V102]

================================

Block 0x3a7
[0x3a7:0x3aa]
---
Predecessors: [0x38b]
Successors: []
---
0x3a7 PUSH1 0x0
0x3a9 DUP1
0x3aa REVERT
---
0x3a7: V346 = 0x0
0x3aa: REVERT 0x0 0x0
---
Entry stack: [V11, 0xda, V102]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda, V102]

================================

Block 0x3ab
[0x3ab:0x3bb]
---
Predecessors: [0x38b]
Successors: [0x3bc, 0x3c0]
---
0x3ab JUMPDEST
0x3ac PUSH1 0x1
0x3ae PUSH1 0xa0
0x3b0 PUSH1 0x2
0x3b2 EXP
0x3b3 SUB
0x3b4 DUP2
0x3b5 AND
0x3b6 ISZERO
0x3b7 ISZERO
0x3b8 PUSH2 0x3c0
0x3bb JUMPI
---
0x3ab: JUMPDEST 
0x3ac: V347 = 0x1
0x3ae: V348 = 0xa0
0x3b0: V349 = 0x2
0x3b2: V350 = EXP 0x2 0xa0
0x3b3: V351 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b5: V352 = AND V102 0xffffffffffffffffffffffffffffffffffffffff
0x3b6: V353 = ISZERO V352
0x3b7: V354 = ISZERO V353
0x3b8: V355 = 0x3c0
0x3bb: JUMPI 0x3c0 V354
---
Entry stack: [V11, 0xda, V102]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xda, V102]

================================

Block 0x3bc
[0x3bc:0x3bf]
---
Predecessors: [0x3ab]
Successors: []
---
0x3bc PUSH1 0x0
0x3be DUP1
0x3bf REVERT
---
0x3bc: V356 = 0x0
0x3bf: REVERT 0x0 0x0
---
Entry stack: [V11, 0xda, V102]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda, V102]

================================

Block 0x3c0
[0x3c0:0x435]
---
Predecessors: [0x3ab]
Successors: [0xda]
---
0x3c0 JUMPDEST
0x3c1 PUSH1 0x0
0x3c3 SLOAD
0x3c4 PUSH1 0x1
0x3c6 PUSH1 0xa0
0x3c8 PUSH1 0x2
0x3ca EXP
0x3cb SUB
0x3cc DUP1
0x3cd DUP4
0x3ce AND
0x3cf SWAP2
0x3d0 PUSH2 0x100
0x3d3 SWAP1
0x3d4 DIV
0x3d5 AND
0x3d6 PUSH32 0xf8ccb027dfcd135e000e9d45e6cc2d662578a8825d4c45b5e32e0adf67e79ec6
0x3f7 PUSH1 0x40
0x3f9 MLOAD
0x3fa PUSH1 0x40
0x3fc MLOAD
0x3fd DUP1
0x3fe SWAP2
0x3ff SUB
0x400 SWAP1
0x401 LOG3
0x402 PUSH1 0x0
0x404 DUP1
0x405 SLOAD
0x406 PUSH1 0x1
0x408 PUSH1 0xa0
0x40a PUSH1 0x2
0x40c EXP
0x40d SUB
0x40e SWAP1
0x40f SWAP3
0x410 AND
0x411 PUSH2 0x100
0x414 MUL
0x415 PUSH21 0xffffffffffffffffffffffffffffffffffffffff00
0x42b NOT
0x42c SWAP1
0x42d SWAP3
0x42e AND
0x42f SWAP2
0x430 SWAP1
0x431 SWAP2
0x432 OR
0x433 SWAP1
0x434 SSTORE
0x435 JUMP
---
0x3c0: JUMPDEST 
0x3c1: V357 = 0x0
0x3c3: V358 = S[0x0]
0x3c4: V359 = 0x1
0x3c6: V360 = 0xa0
0x3c8: V361 = 0x2
0x3ca: V362 = EXP 0x2 0xa0
0x3cb: V363 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ce: V364 = AND V102 0xffffffffffffffffffffffffffffffffffffffff
0x3d0: V365 = 0x100
0x3d4: V366 = DIV V358 0x100
0x3d5: V367 = AND V366 0xffffffffffffffffffffffffffffffffffffffff
0x3d6: V368 = 0xf8ccb027dfcd135e000e9d45e6cc2d662578a8825d4c45b5e32e0adf67e79ec6
0x3f7: V369 = 0x40
0x3f9: V370 = M[0x40]
0x3fa: V371 = 0x40
0x3fc: V372 = M[0x40]
0x3ff: V373 = SUB V370 V372
0x401: LOG V372 V373 0xf8ccb027dfcd135e000e9d45e6cc2d662578a8825d4c45b5e32e0adf67e79ec6 V367 V364
0x402: V374 = 0x0
0x405: V375 = S[0x0]
0x406: V376 = 0x1
0x408: V377 = 0xa0
0x40a: V378 = 0x2
0x40c: V379 = EXP 0x2 0xa0
0x40d: V380 = SUB 0x10000000000000000000000000000000000000000 0x1
0x410: V381 = AND V102 0xffffffffffffffffffffffffffffffffffffffff
0x411: V382 = 0x100
0x414: V383 = MUL 0x100 V381
0x415: V384 = 0xffffffffffffffffffffffffffffffffffffffff00
0x42b: V385 = NOT 0xffffffffffffffffffffffffffffffffffffffff00
0x42e: V386 = AND V375 0xffffffffffffffffffffff0000000000000000000000000000000000000000ff
0x432: V387 = OR V386 V383
0x434: S[0x0] = V387
0x435: JUMP 0xda
---
Entry stack: [V11, 0xda, V102]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x436
[0x436:0x44c]
---
Predecessors: [0x167]
Successors: [0x44d, 0x451]
---
0x436 JUMPDEST
0x437 PUSH1 0x1
0x439 SLOAD
0x43a CALLER
0x43b PUSH1 0x1
0x43d PUSH1 0xa0
0x43f PUSH1 0x2
0x441 EXP
0x442 SUB
0x443 SWAP1
0x444 DUP2
0x445 AND
0x446 SWAP2
0x447 AND
0x448 EQ
0x449 PUSH2 0x451
0x44c JUMPI
---
0x436: JUMPDEST 
0x437: V388 = 0x1
0x439: V389 = S[0x1]
0x43a: V390 = CALLER
0x43b: V391 = 0x1
0x43d: V392 = 0xa0
0x43f: V393 = 0x2
0x441: V394 = EXP 0x2 0xa0
0x442: V395 = SUB 0x10000000000000000000000000000000000000000 0x1
0x445: V396 = AND 0xffffffffffffffffffffffffffffffffffffffff V390
0x447: V397 = AND V389 0xffffffffffffffffffffffffffffffffffffffff
0x448: V398 = EQ V397 V396
0x449: V399 = 0x451
0x44c: JUMPI 0x451 V398
---
Entry stack: [V11, 0xda]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda]

================================

Block 0x44d
[0x44d:0x450]
---
Predecessors: [0x436]
Successors: []
---
0x44d PUSH1 0x0
0x44f DUP1
0x450 REVERT
---
0x44d: V400 = 0x0
0x450: REVERT 0x0 0x0
---
Entry stack: [V11, 0xda]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda]

================================

Block 0x451
[0x451:0x4ab]
---
Predecessors: [0x436]
Successors: [0xda]
---
0x451 JUMPDEST
0x452 PUSH1 0x2
0x454 DUP1
0x455 SLOAD
0x456 PUSH28 0xffffffffffffffff0000000000000000000000000000000000000000
0x473 NOT
0x474 AND
0x475 SWAP1
0x476 SSTORE
0x477 PUSH32 0x5375a076502d9c75336a86508db399eb44d81c74d7a4b21d8f17fee4a38a3c7a
0x498 PUSH1 0x0
0x49a PUSH1 0x40
0x49c MLOAD
0x49d SWAP1
0x49e DUP2
0x49f MSTORE
0x4a0 PUSH1 0x20
0x4a2 ADD
0x4a3 PUSH1 0x40
0x4a5 MLOAD
0x4a6 DUP1
0x4a7 SWAP2
0x4a8 SUB
0x4a9 SWAP1
0x4aa LOG1
0x4ab JUMP
---
0x451: JUMPDEST 
0x452: V401 = 0x2
0x455: V402 = S[0x2]
0x456: V403 = 0xffffffffffffffff0000000000000000000000000000000000000000
0x473: V404 = NOT 0xffffffffffffffff0000000000000000000000000000000000000000
0x474: V405 = AND 0xffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff V402
0x476: S[0x2] = V405
0x477: V406 = 0x5375a076502d9c75336a86508db399eb44d81c74d7a4b21d8f17fee4a38a3c7a
0x498: V407 = 0x0
0x49a: V408 = 0x40
0x49c: V409 = M[0x40]
0x49f: M[V409] = 0x0
0x4a0: V410 = 0x20
0x4a2: V411 = ADD 0x20 V409
0x4a3: V412 = 0x40
0x4a5: V413 = M[0x40]
0x4a8: V414 = SUB V411 V413
0x4aa: LOG V413 V414 0x5375a076502d9c75336a86508db399eb44d81c74d7a4b21d8f17fee4a38a3c7a
0x4ab: JUMP 0xda
---
Entry stack: [V11, 0xda]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x4ac
[0x4ac:0x4ba]
---
Predecessors: [0x17a]
Successors: [0x182]
---
0x4ac JUMPDEST
0x4ad PUSH1 0x2
0x4af SLOAD
0x4b0 PUSH1 0x1
0x4b2 PUSH1 0xa0
0x4b4 PUSH1 0x2
0x4b6 EXP
0x4b7 SUB
0x4b8 AND
0x4b9 DUP2
0x4ba JUMP
---
0x4ac: JUMPDEST 
0x4ad: V415 = 0x2
0x4af: V416 = S[0x2]
0x4b0: V417 = 0x1
0x4b2: V418 = 0xa0
0x4b4: V419 = 0x2
0x4b6: V420 = EXP 0x2 0xa0
0x4b7: V421 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4b8: V422 = AND 0xffffffffffffffffffffffffffffffffffffffff V416
0x4ba: JUMP 0x182
---
Entry stack: [V11, 0x182]
Stack pops: 1
Stack additions: [S0, V422]
Exit stack: [V11, 0x182, V422]

================================

Block 0x4bb
[0x4bb:0x4d2]
---
Predecessors: [0x1a9]
Successors: [0x4d3, 0x4eb]
---
0x4bb JUMPDEST
0x4bc PUSH1 0x2
0x4be SLOAD
0x4bf CALLER
0x4c0 PUSH1 0x1
0x4c2 PUSH1 0xa0
0x4c4 PUSH1 0x2
0x4c6 EXP
0x4c7 SUB
0x4c8 SWAP1
0x4c9 DUP2
0x4ca AND
0x4cb SWAP2
0x4cc AND
0x4cd EQ
0x4ce DUP1
0x4cf PUSH2 0x4eb
0x4d2 JUMPI
---
0x4bb: JUMPDEST 
0x4bc: V423 = 0x2
0x4be: V424 = S[0x2]
0x4bf: V425 = CALLER
0x4c0: V426 = 0x1
0x4c2: V427 = 0xa0
0x4c4: V428 = 0x2
0x4c6: V429 = EXP 0x2 0xa0
0x4c7: V430 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ca: V431 = AND 0xffffffffffffffffffffffffffffffffffffffff V425
0x4cc: V432 = AND V424 0xffffffffffffffffffffffffffffffffffffffff
0x4cd: V433 = EQ V432 V431
0x4cf: V434 = 0x4eb
0x4d2: JUMPI 0x4eb V433
---
Entry stack: [V11, 0xda, V141]
Stack pops: 0
Stack additions: [V433]
Exit stack: [V11, 0xda, V141, V433]

================================

Block 0x4d3
[0x4d3:0x4ea]
---
Predecessors: [0x4bb]
Successors: [0x4eb]
---
0x4d3 POP
0x4d4 PUSH1 0x0
0x4d6 SLOAD
0x4d7 CALLER
0x4d8 PUSH1 0x1
0x4da PUSH1 0xa0
0x4dc PUSH1 0x2
0x4de EXP
0x4df SUB
0x4e0 SWAP1
0x4e1 DUP2
0x4e2 AND
0x4e3 PUSH2 0x100
0x4e6 SWAP1
0x4e7 SWAP3
0x4e8 DIV
0x4e9 AND
0x4ea EQ
---
0x4d4: V435 = 0x0
0x4d6: V436 = S[0x0]
0x4d7: V437 = CALLER
0x4d8: V438 = 0x1
0x4da: V439 = 0xa0
0x4dc: V440 = 0x2
0x4de: V441 = EXP 0x2 0xa0
0x4df: V442 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4e2: V443 = AND 0xffffffffffffffffffffffffffffffffffffffff V437
0x4e3: V444 = 0x100
0x4e8: V445 = DIV V436 0x100
0x4e9: V446 = AND V445 0xffffffffffffffffffffffffffffffffffffffff
0x4ea: V447 = EQ V446 V443
---
Entry stack: [V11, 0xda, V141, V433]
Stack pops: 1
Stack additions: [V447]
Exit stack: [V11, 0xda, V141, V447]

================================

Block 0x4eb
[0x4eb:0x4f1]
---
Predecessors: [0x4bb, 0x4d3]
Successors: [0x4f2, 0x4f6]
---
0x4eb JUMPDEST
0x4ec ISZERO
0x4ed ISZERO
0x4ee PUSH2 0x4f6
0x4f1 JUMPI
---
0x4eb: JUMPDEST 
0x4ec: V448 = ISZERO S0
0x4ed: V449 = ISZERO V448
0x4ee: V450 = 0x4f6
0x4f1: JUMPI 0x4f6 V449
---
Entry stack: [V11, 0xda, V141, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xda, V141]

================================

Block 0x4f2
[0x4f2:0x4f5]
---
Predecessors: [0x4eb]
Successors: []
---
0x4f2 PUSH1 0x0
0x4f4 DUP1
0x4f5 REVERT
---
0x4f2: V451 = 0x0
0x4f5: REVERT 0x0 0x0
---
Entry stack: [V11, 0xda, V141]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda, V141]

================================

Block 0x4f6
[0x4f6:0x506]
---
Predecessors: [0x4eb]
Successors: [0x507, 0x50b]
---
0x4f6 JUMPDEST
0x4f7 PUSH1 0x1
0x4f9 PUSH1 0xa0
0x4fb PUSH1 0x2
0x4fd EXP
0x4fe SUB
0x4ff DUP2
0x500 AND
0x501 ISZERO
0x502 ISZERO
0x503 PUSH2 0x50b
0x506 JUMPI
---
0x4f6: JUMPDEST 
0x4f7: V452 = 0x1
0x4f9: V453 = 0xa0
0x4fb: V454 = 0x2
0x4fd: V455 = EXP 0x2 0xa0
0x4fe: V456 = SUB 0x10000000000000000000000000000000000000000 0x1
0x500: V457 = AND V141 0xffffffffffffffffffffffffffffffffffffffff
0x501: V458 = ISZERO V457
0x502: V459 = ISZERO V458
0x503: V460 = 0x50b
0x506: JUMPI 0x50b V459
---
Entry stack: [V11, 0xda, V141]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xda, V141]

================================

Block 0x507
[0x507:0x50a]
---
Predecessors: [0x4f6]
Successors: []
---
0x507 PUSH1 0x0
0x509 DUP1
0x50a REVERT
---
0x507: V461 = 0x0
0x50a: REVERT 0x0 0x0
---
Entry stack: [V11, 0xda, V141]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda, V141]

================================

Block 0x50b
[0x50b:0x539]
---
Predecessors: [0x4f6]
Successors: [0xda]
---
0x50b JUMPDEST
0x50c PUSH1 0x2
0x50e DUP1
0x50f SLOAD
0x510 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x525 NOT
0x526 AND
0x527 PUSH1 0x1
0x529 PUSH1 0xa0
0x52b PUSH1 0x2
0x52d EXP
0x52e SUB
0x52f SWAP3
0x530 SWAP1
0x531 SWAP3
0x532 AND
0x533 SWAP2
0x534 SWAP1
0x535 SWAP2
0x536 OR
0x537 SWAP1
0x538 SSTORE
0x539 JUMP
---
0x50b: JUMPDEST 
0x50c: V462 = 0x2
0x50f: V463 = S[0x2]
0x510: V464 = 0xffffffffffffffffffffffffffffffffffffffff
0x525: V465 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x526: V466 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V463
0x527: V467 = 0x1
0x529: V468 = 0xa0
0x52b: V469 = 0x2
0x52d: V470 = EXP 0x2 0xa0
0x52e: V471 = SUB 0x10000000000000000000000000000000000000000 0x1
0x532: V472 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0x536: V473 = OR V472 V466
0x538: S[0x2] = V473
0x539: JUMP 0xda
---
Entry stack: [V11, 0xda, V141]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x53a
[0x53a:0x542]
---
Predecessors: [0x1c8]
Successors: [0x1d0]
---
0x53a JUMPDEST
0x53b PUSH1 0x0
0x53d SLOAD
0x53e PUSH1 0xff
0x540 AND
0x541 DUP2
0x542 JUMP
---
0x53a: JUMPDEST 
0x53b: V474 = 0x0
0x53d: V475 = S[0x0]
0x53e: V476 = 0xff
0x540: V477 = AND 0xff V475
0x542: JUMP 0x1d0
---
Entry stack: [V11, 0x1d0]
Stack pops: 1
Stack additions: [S0, V477]
Exit stack: [V11, 0x1d0, V477]

================================

Block 0x543
[0x543:0x55a]
---
Predecessors: [0x1ef]
Successors: [0x55b, 0x573]
---
0x543 JUMPDEST
0x544 PUSH1 0x1
0x546 SLOAD
0x547 CALLER
0x548 PUSH1 0x1
0x54a PUSH1 0xa0
0x54c PUSH1 0x2
0x54e EXP
0x54f SUB
0x550 SWAP1
0x551 DUP2
0x552 AND
0x553 SWAP2
0x554 AND
0x555 EQ
0x556 DUP1
0x557 PUSH2 0x573
0x55a JUMPI
---
0x543: JUMPDEST 
0x544: V478 = 0x1
0x546: V479 = S[0x1]
0x547: V480 = CALLER
0x548: V481 = 0x1
0x54a: V482 = 0xa0
0x54c: V483 = 0x2
0x54e: V484 = EXP 0x2 0xa0
0x54f: V485 = SUB 0x10000000000000000000000000000000000000000 0x1
0x552: V486 = AND 0xffffffffffffffffffffffffffffffffffffffff V480
0x554: V487 = AND V479 0xffffffffffffffffffffffffffffffffffffffff
0x555: V488 = EQ V487 V486
0x557: V489 = 0x573
0x55a: JUMPI 0x573 V488
---
Entry stack: [V11, 0xda, V170]
Stack pops: 0
Stack additions: [V488]
Exit stack: [V11, 0xda, V170, V488]

================================

Block 0x55b
[0x55b:0x572]
---
Predecessors: [0x543]
Successors: [0x573]
---
0x55b POP
0x55c PUSH1 0x0
0x55e SLOAD
0x55f CALLER
0x560 PUSH1 0x1
0x562 PUSH1 0xa0
0x564 PUSH1 0x2
0x566 EXP
0x567 SUB
0x568 SWAP1
0x569 DUP2
0x56a AND
0x56b PUSH2 0x100
0x56e SWAP1
0x56f SWAP3
0x570 DIV
0x571 AND
0x572 EQ
---
0x55c: V490 = 0x0
0x55e: V491 = S[0x0]
0x55f: V492 = CALLER
0x560: V493 = 0x1
0x562: V494 = 0xa0
0x564: V495 = 0x2
0x566: V496 = EXP 0x2 0xa0
0x567: V497 = SUB 0x10000000000000000000000000000000000000000 0x1
0x56a: V498 = AND 0xffffffffffffffffffffffffffffffffffffffff V492
0x56b: V499 = 0x100
0x570: V500 = DIV V491 0x100
0x571: V501 = AND V500 0xffffffffffffffffffffffffffffffffffffffff
0x572: V502 = EQ V501 V498
---
Entry stack: [V11, 0xda, V170, V488]
Stack pops: 1
Stack additions: [V502]
Exit stack: [V11, 0xda, V170, V502]

================================

Block 0x573
[0x573:0x579]
---
Predecessors: [0x543, 0x55b]
Successors: [0x57a, 0x57e]
---
0x573 JUMPDEST
0x574 ISZERO
0x575 ISZERO
0x576 PUSH2 0x57e
0x579 JUMPI
---
0x573: JUMPDEST 
0x574: V503 = ISZERO S0
0x575: V504 = ISZERO V503
0x576: V505 = 0x57e
0x579: JUMPI 0x57e V504
---
Entry stack: [V11, 0xda, V170, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xda, V170]

================================

Block 0x57a
[0x57a:0x57d]
---
Predecessors: [0x573]
Successors: []
---
0x57a PUSH1 0x0
0x57c DUP1
0x57d REVERT
---
0x57a: V506 = 0x0
0x57d: REVERT 0x0 0x0
---
Entry stack: [V11, 0xda, V170]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda, V170]

================================

Block 0x57e
[0x57e:0x58e]
---
Predecessors: [0x573]
Successors: [0x58f, 0x593]
---
0x57e JUMPDEST
0x57f PUSH1 0x1
0x581 PUSH1 0xa0
0x583 PUSH1 0x2
0x585 EXP
0x586 SUB
0x587 DUP2
0x588 AND
0x589 ISZERO
0x58a ISZERO
0x58b PUSH2 0x593
0x58e JUMPI
---
0x57e: JUMPDEST 
0x57f: V507 = 0x1
0x581: V508 = 0xa0
0x583: V509 = 0x2
0x585: V510 = EXP 0x2 0xa0
0x586: V511 = SUB 0x10000000000000000000000000000000000000000 0x1
0x588: V512 = AND V170 0xffffffffffffffffffffffffffffffffffffffff
0x589: V513 = ISZERO V512
0x58a: V514 = ISZERO V513
0x58b: V515 = 0x593
0x58e: JUMPI 0x593 V514
---
Entry stack: [V11, 0xda, V170]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xda, V170]

================================

Block 0x58f
[0x58f:0x592]
---
Predecessors: [0x57e]
Successors: []
---
0x58f PUSH1 0x0
0x591 DUP1
0x592 REVERT
---
0x58f: V516 = 0x0
0x592: REVERT 0x0 0x0
---
Entry stack: [V11, 0xda, V170]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda, V170]

================================

Block 0x593
[0x593:0x5c1]
---
Predecessors: [0x57e]
Successors: [0xda]
---
0x593 JUMPDEST
0x594 PUSH1 0x1
0x596 DUP1
0x597 SLOAD
0x598 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5ad NOT
0x5ae AND
0x5af PUSH1 0x1
0x5b1 PUSH1 0xa0
0x5b3 PUSH1 0x2
0x5b5 EXP
0x5b6 SUB
0x5b7 SWAP3
0x5b8 SWAP1
0x5b9 SWAP3
0x5ba AND
0x5bb SWAP2
0x5bc SWAP1
0x5bd SWAP2
0x5be OR
0x5bf SWAP1
0x5c0 SSTORE
0x5c1 JUMP
---
0x593: JUMPDEST 
0x594: V517 = 0x1
0x597: V518 = S[0x1]
0x598: V519 = 0xffffffffffffffffffffffffffffffffffffffff
0x5ad: V520 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x5ae: V521 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V518
0x5af: V522 = 0x1
0x5b1: V523 = 0xa0
0x5b3: V524 = 0x2
0x5b5: V525 = EXP 0x2 0xa0
0x5b6: V526 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ba: V527 = AND 0xffffffffffffffffffffffffffffffffffffffff V170
0x5be: V528 = OR V527 V521
0x5c0: S[0x1] = V528
0x5c1: JUMP 0xda
---
Entry stack: [V11, 0xda, V170]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c2
[0x5c2:0x5d5]
---
Predecessors: [0x20e]
Successors: [0x182]
---
0x5c2 JUMPDEST
0x5c3 PUSH1 0x0
0x5c5 SLOAD
0x5c6 PUSH2 0x100
0x5c9 SWAP1
0x5ca DIV
0x5cb PUSH1 0x1
0x5cd PUSH1 0xa0
0x5cf PUSH1 0x2
0x5d1 EXP
0x5d2 SUB
0x5d3 AND
0x5d4 DUP2
0x5d5 JUMP
---
0x5c2: JUMPDEST 
0x5c3: V529 = 0x0
0x5c5: V530 = S[0x0]
0x5c6: V531 = 0x100
0x5ca: V532 = DIV V530 0x100
0x5cb: V533 = 0x1
0x5cd: V534 = 0xa0
0x5cf: V535 = 0x2
0x5d1: V536 = EXP 0x2 0xa0
0x5d2: V537 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5d3: V538 = AND 0xffffffffffffffffffffffffffffffffffffffff V532
0x5d5: JUMP 0x182
---
Entry stack: [V11, 0x182]
Stack pops: 1
Stack additions: [S0, V538]
Exit stack: [V11, 0x182, V538]

================================

Block 0x5d6
[0x5d6:0x5e4]
---
Predecessors: [0x221]
Successors: [0x182]
---
0x5d6 JUMPDEST
0x5d7 PUSH1 0x1
0x5d9 SLOAD
0x5da PUSH1 0x1
0x5dc PUSH1 0xa0
0x5de PUSH1 0x2
0x5e0 EXP
0x5e1 SUB
0x5e2 AND
0x5e3 DUP2
0x5e4 JUMP
---
0x5d6: JUMPDEST 
0x5d7: V539 = 0x1
0x5d9: V540 = S[0x1]
0x5da: V541 = 0x1
0x5dc: V542 = 0xa0
0x5de: V543 = 0x2
0x5e0: V544 = EXP 0x2 0xa0
0x5e1: V545 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5e2: V546 = AND 0xffffffffffffffffffffffffffffffffffffffff V540
0x5e4: JUMP 0x182
---
Entry stack: [V11, 0x182]
Stack pops: 1
Stack additions: [S0, V546]
Exit stack: [V11, 0x182, V546]

================================

Block 0x5e5
[0x5e5:0x60a]
---
Predecessors: [0x234]
Successors: [0x60b, 0x60f]
---
0x5e5 JUMPDEST
0x5e6 PUSH1 0x1
0x5e8 SLOAD
0x5e9 PUSH1 0x0
0x5eb SWAP1
0x5ec DUP2
0x5ed SWAP1
0x5ee DUP2
0x5ef SWAP1
0x5f0 DUP2
0x5f1 SWAP1
0x5f2 DUP2
0x5f3 SWAP1
0x5f4 DUP2
0x5f5 SWAP1
0x5f6 DUP2
0x5f7 SWAP1
0x5f8 CALLER
0x5f9 PUSH1 0x1
0x5fb PUSH1 0xa0
0x5fd PUSH1 0x2
0x5ff EXP
0x600 SUB
0x601 SWAP1
0x602 DUP2
0x603 AND
0x604 SWAP2
0x605 AND
0x606 EQ
0x607 PUSH2 0x60f
0x60a JUMPI
---
0x5e5: JUMPDEST 
0x5e6: V547 = 0x1
0x5e8: V548 = S[0x1]
0x5e9: V549 = 0x0
0x5f8: V550 = CALLER
0x5f9: V551 = 0x1
0x5fb: V552 = 0xa0
0x5fd: V553 = 0x2
0x5ff: V554 = EXP 0x2 0xa0
0x600: V555 = SUB 0x10000000000000000000000000000000000000000 0x1
0x603: V556 = AND 0xffffffffffffffffffffffffffffffffffffffff V550
0x605: V557 = AND V548 0xffffffffffffffffffffffffffffffffffffffff
0x606: V558 = EQ V557 V556
0x607: V559 = 0x60f
0x60a: JUMPI 0x60f V558
---
Entry stack: [V11, 0xda, V192, V194, V196, V198, V202]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V11, 0xda, V192, V194, V196, V198, V202, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x60b
[0x60b:0x60e]
---
Predecessors: [0x5e5]
Successors: []
---
0x60b PUSH1 0x0
0x60d DUP1
0x60e REVERT
---
0x60b: V560 = 0x0
0x60e: REVERT 0x0 0x0
---
Entry stack: [V11, 0xda, V192, V194, V196, V198, V202, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda, V192, V194, V196, V198, V202, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x60f
[0x60f:0x61a]
---
Predecessors: [0x5e5]
Successors: [0x61b, 0x61f]
---
0x60f JUMPDEST
0x610 PUSH1 0x0
0x612 SLOAD
0x613 PUSH1 0xff
0x615 AND
0x616 ISZERO
0x617 PUSH2 0x61f
0x61a JUMPI
---
0x60f: JUMPDEST 
0x610: V561 = 0x0
0x612: V562 = S[0x0]
0x613: V563 = 0xff
0x615: V564 = AND 0xff V562
0x616: V565 = ISZERO V564
0x617: V566 = 0x61f
0x61a: JUMPI 0x61f V565
---
Entry stack: [V11, 0xda, V192, V194, V196, V198, V202, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda, V192, V194, V196, V198, V202, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x61b
[0x61b:0x61e]
---
Predecessors: [0x60f]
Successors: []
---
0x61b PUSH1 0x0
0x61d DUP1
0x61e REVERT
---
0x61b: V567 = 0x0
0x61e: REVERT 0x0 0x0
---
Entry stack: [V11, 0xda, V192, V194, V196, V198, V202, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda, V192, V194, V196, V198, V202, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x61f
[0x61f:0x62c]
---
Predecessors: [0x60f]
Successors: [0x62d, 0x631]
---
0x61f JUMPDEST
0x620 TIMESTAMP
0x621 SWAP7
0x622 POP
0x623 DUP11
0x624 SWAP6
0x625 POP
0x626 DUP9
0x627 DUP7
0x628 EQ
0x629 PUSH2 0x631
0x62c JUMPI
---
0x61f: JUMPDEST 
0x620: V568 = TIMESTAMP
0x628: V569 = EQ V194 V198
0x629: V570 = 0x631
0x62c: JUMPI 0x631 V569
---
Entry stack: [V11, 0xda, V192, V194, V196, V198, V202, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, V568, S10, S4, S3, S2, S1, S0]
Exit stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x62d
[0x62d:0x630]
---
Predecessors: [0x61f]
Successors: []
---
0x62d PUSH1 0x0
0x62f DUP1
0x630 REVERT
---
0x62d: V571 = 0x0
0x630: REVERT 0x0 0x0
---
Entry stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x631
[0x631:0x63a]
---
Predecessors: [0x61f]
Successors: [0x63b, 0x63f]
---
0x631 JUMPDEST
0x632 PUSH1 0x40
0x634 DUP7
0x635 GT
0x636 ISZERO
0x637 PUSH2 0x63f
0x63a JUMPI
---
0x631: JUMPDEST 
0x632: V572 = 0x40
0x635: V573 = GT V194 0x40
0x636: V574 = ISZERO V573
0x637: V575 = 0x63f
0x63a: JUMPI 0x63f V574
---
Entry stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x63b
[0x63b:0x63e]
---
Predecessors: [0x631]
Successors: []
---
0x63b PUSH1 0x0
0x63d DUP1
0x63e REVERT
---
0x63b: V576 = 0x0
0x63e: REVERT 0x0 0x0
---
Entry stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x63f
[0x63f:0x647]
---
Predecessors: [0x631]
Successors: [0x648]
---
0x63f JUMPDEST
0x640 PUSH1 0x0
0x642 SWAP5
0x643 POP
0x644 PUSH1 0x0
0x646 SWAP4
0x647 POP
---
0x63f: JUMPDEST 
0x640: V577 = 0x0
0x644: V578 = 0x0
---
Entry stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [0x0, 0x0, S2, S1, S0]
Exit stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x648
[0x648:0x656]
---
Predecessors: [0x63f, 0x681]
Successors: [0x657, 0x68e]
---
0x648 JUMPDEST
0x649 DUP6
0x64a DUP5
0x64b PUSH4 0xffffffff
0x650 AND
0x651 LT
0x652 ISZERO
0x653 PUSH2 0x68e
0x656 JUMPI
---
0x648: JUMPDEST 
0x64b: V579 = 0xffffffff
0x650: V580 = AND 0xffffffff S3
0x651: V581 = LT V580 S5
0x652: V582 = ISZERO V581
0x653: V583 = 0x68e
0x656: JUMPI 0x68e V582
---
Entry stack: [V11, 0xda, V192, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x0, 0x6bf}, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V11, 0xda, V192, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x0, 0x6bf}, S0]

================================

Block 0x657
[0x657:0x669]
---
Predecessors: [0x648]
Successors: [0x66a, 0x66b]
---
0x657 PUSH2 0x681
0x65a DUP11
0x65b DUP11
0x65c PUSH4 0xffffffff
0x661 DUP8
0x662 AND
0x663 DUP2
0x664 DUP2
0x665 LT
0x666 PUSH2 0x66b
0x669 JUMPI
---
0x657: V584 = 0x681
0x65c: V585 = 0xffffffff
0x662: V586 = AND S3 0xffffffff
0x665: V587 = LT V586 S8
0x666: V588 = 0x66b
0x669: JUMPI 0x66b V587
---
Entry stack: [V11, 0xda, V192, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x0, 0x6bf}, S0]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x681, S9, S8, V586]
Exit stack: [S13, 0xda, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, 0x0, 0x0, 0x681, S9, S8, V586]

================================

Block 0x66a
[0x66a:0x66a]
---
Predecessors: [0x657]
Successors: []
---
0x66a INVALID
---
0x66a: INVALID 
---
Entry stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S8, S7, 0x0, 0x0, 0x0, 0x681, V196, V198, V586]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S8, S7, 0x0, 0x0, 0x0, 0x681, V196, V198, V586]

================================

Block 0x66b
[0x66b:0x680]
---
Predecessors: [0x657]
Successors: [0x96d]
---
0x66b JUMPDEST
0x66c SWAP1
0x66d POP
0x66e PUSH1 0x20
0x670 MUL
0x671 ADD
0x672 CALLDATALOAD
0x673 DUP7
0x674 PUSH2 0x96d
0x677 SWAP1
0x678 SWAP2
0x679 SWAP1
0x67a PUSH4 0xffffffff
0x67f AND
0x680 JUMP
---
0x66b: JUMPDEST 
0x66e: V589 = 0x20
0x670: V590 = MUL 0x20 V586
0x671: V591 = ADD V590 V196
0x672: V592 = CALLDATALOAD V591
0x674: V593 = 0x96d
0x67a: V594 = 0xffffffff
0x67f: V595 = AND 0xffffffff 0x96d
0x680: JUMP 0x96d
---
Entry stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S8, S7, 0x0, 0x0, 0x0, 0x681, V196, V198, V586]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S8, V592]
Exit stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S8, S7, 0x0, 0x0, 0x0, 0x681, S8, V592]

================================

Block 0x681
[0x681:0x68d]
---
Predecessors: [0x980]
Successors: [0x648]
---
0x681 JUMPDEST
0x682 SWAP5
0x683 POP
0x684 DUP4
0x685 PUSH1 0x1
0x687 ADD
0x688 SWAP4
0x689 POP
0x68a PUSH2 0x648
0x68d JUMP
---
0x681: JUMPDEST 
0x685: V596 = 0x1
0x687: V597 = ADD 0x1 S4
0x68a: V598 = 0x648
0x68d: JUMP 0x648
---
Entry stack: [V11, 0xda, V192, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x6bf}, S1, S0]
Stack pops: 6
Stack additions: [S0, V597, S3, S2, S1]
Exit stack: [V11, 0xda, V192, S14, S13, S12, S11, S10, S9, S8, S7, S6, S0, V597, S3, {0x0, 0x6bf}, S1]

================================

Block 0x68e
[0x68e:0x6b2]
---
Predecessors: [0x648]
Successors: [0x987]
---
0x68e JUMPDEST
0x68f PUSH1 0x3
0x691 SLOAD
0x692 PUSH1 0x1
0x694 PUSH1 0xa0
0x696 PUSH1 0x2
0x698 EXP
0x699 SUB
0x69a ADDRESS
0x69b AND
0x69c BALANCE
0x69d SWAP4
0x69e POP
0x69f PUSH2 0x6bf
0x6a2 DUP5
0x6a3 PUSH2 0x6b3
0x6a6 DUP9
0x6a7 PUSH1 0x64
0x6a9 PUSH4 0xffffffff
0x6ae PUSH2 0x987
0x6b1 AND
0x6b2 JUMP
---
0x68e: JUMPDEST 
0x68f: V599 = 0x3
0x691: V600 = S[0x3]
0x692: V601 = 0x1
0x694: V602 = 0xa0
0x696: V603 = 0x2
0x698: V604 = EXP 0x2 0xa0
0x699: V605 = SUB 0x10000000000000000000000000000000000000000 0x1
0x69a: V606 = ADDRESS
0x69b: V607 = AND V606 0xffffffffffffffffffffffffffffffffffffffff
0x69c: V608 = BALANCE V607
0x69f: V609 = 0x6bf
0x6a3: V610 = 0x6b3
0x6a7: V611 = 0x64
0x6a9: V612 = 0xffffffff
0x6ae: V613 = 0x987
0x6b1: V614 = AND 0x987 0xffffffff
0x6b2: JUMP 0x987
---
Entry stack: [V11, 0xda, V192, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x0, 0x6bf}, S0]
Stack pops: 5
Stack additions: [S4, S3, V608, S1, S0, V600, 0x6bf, V608, 0x6b3, S4, 0x64]
Exit stack: [S13, 0xda, S11, S10, S9, S8, S7, S6, S5, S4, S3, V608, 0x0, 0x0, V600, 0x6bf, V608, 0x6b3, S4, 0x64]

================================

Block 0x6b3
[0x6b3:0x6be]
---
Predecessors: [0x980]
Successors: [0x9b2]
---
0x6b3 JUMPDEST
0x6b4 SWAP1
0x6b5 PUSH4 0xffffffff
0x6ba PUSH2 0x9b2
0x6bd AND
0x6be JUMP
---
0x6b3: JUMPDEST 
0x6b5: V615 = 0xffffffff
0x6ba: V616 = 0x9b2
0x6bd: V617 = AND 0x9b2 0xffffffff
0x6be: JUMP 0x9b2
---
Entry stack: [V11, 0xda, V192, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x6bf}, S1, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [V11, 0xda, V192, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x6bf}, S0, S1]

================================

Block 0x6bf
[0x6bf:0x6c5]
---
Predecessors: [0x9c0]
Successors: [0x6c6, 0x6ca]
---
0x6bf JUMPDEST
0x6c0 GT
0x6c1 ISZERO
0x6c2 PUSH2 0x6ca
0x6c5 JUMPI
---
0x6bf: JUMPDEST 
0x6c0: V618 = GT V872 V600
0x6c1: V619 = ISZERO V618
0x6c2: V620 = 0x6ca
0x6c5: JUMPI 0x6ca V619
---
Entry stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S6, S5, V608, 0x0, 0x0, V600, V872]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S6, S5, V608, 0x0, 0x0]

================================

Block 0x6c6
[0x6c6:0x6c9]
---
Predecessors: [0x6bf]
Successors: []
---
0x6c6 PUSH1 0x0
0x6c8 DUP1
0x6c9 REVERT
---
0x6c6: V621 = 0x0
0x6c9: REVERT 0x0 0x0
---
Entry stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S4, S3, V608, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S4, S3, V608, 0x0, 0x0]

================================

Block 0x6ca
[0x6ca:0x6d0]
---
Predecessors: [0x6bf]
Successors: [0x6d1]
---
0x6ca JUMPDEST
0x6cb POP
0x6cc PUSH1 0x0
0x6ce SWAP1
0x6cf POP
0x6d0 DUP1
---
0x6ca: JUMPDEST 
0x6cc: V622 = 0x0
---
Entry stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S4, S3, V608, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S4, S3, V608, 0x0, 0x0]

================================

Block 0x6d1
[0x6d1:0x6df]
---
Predecessors: [0x6ca, 0x789]
Successors: [0x6e0, 0x791]
---
0x6d1 JUMPDEST
0x6d2 DUP6
0x6d3 DUP2
0x6d4 PUSH4 0xffffffff
0x6d9 AND
0x6da LT
0x6db ISZERO
0x6dc PUSH2 0x791
0x6df JUMPI
---
0x6d1: JUMPDEST 
0x6d4: V623 = 0xffffffff
0x6d9: V624 = AND 0xffffffff S0
0x6da: V625 = LT V624 V194
0x6db: V626 = ISZERO V625
0x6dc: V627 = 0x791
0x6df: JUMPI 0x791 V626
---
Entry stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S4, S3, V608, 0x0, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S4, S3, V608, 0x0, S0]

================================

Block 0x6e0
[0x6e0:0x6f9]
---
Predecessors: [0x6d1]
Successors: [0x6fa, 0x6fb]
---
0x6e0 PUSH1 0x1
0x6e2 PUSH1 0xa0
0x6e4 PUSH1 0x2
0x6e6 EXP
0x6e7 SUB
0x6e8 DUP3
0x6e9 AND
0x6ea DUP13
0x6eb DUP13
0x6ec PUSH4 0xffffffff
0x6f1 DUP5
0x6f2 AND
0x6f3 DUP2
0x6f4 DUP2
0x6f5 LT
0x6f6 PUSH2 0x6fb
0x6f9 JUMPI
---
0x6e0: V628 = 0x1
0x6e2: V629 = 0xa0
0x6e4: V630 = 0x2
0x6e6: V631 = EXP 0x2 0xa0
0x6e7: V632 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6e9: V633 = AND 0x0 0xffffffffffffffffffffffffffffffffffffffff
0x6ec: V634 = 0xffffffff
0x6f2: V635 = AND S0 0xffffffff
0x6f5: V636 = LT V635 V194
0x6f6: V637 = 0x6fb
0x6f9: JUMPI 0x6fb V636
---
Entry stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S4, S3, V608, 0x0, S0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, S11, S10, V635]
Exit stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S4, S3, V608, 0x0, S0, 0x0, V192, V194, V635]

================================

Block 0x6fa
[0x6fa:0x6fa]
---
Predecessors: [0x6e0]
Successors: []
---
0x6fa INVALID
---
0x6fa: INVALID 
---
Entry stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S8, S7, V608, 0x0, S4, 0x0, V192, V194, V635]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S8, S7, V608, 0x0, S4, 0x0, V192, V194, V635]

================================

Block 0x6fb
[0x6fb:0x71b]
---
Predecessors: [0x6e0]
Successors: [0x71c, 0x789]
---
0x6fb JUMPDEST
0x6fc SWAP1
0x6fd POP
0x6fe PUSH1 0x20
0x700 MUL
0x701 ADD
0x702 CALLDATALOAD
0x703 PUSH1 0x1
0x705 PUSH1 0xa0
0x707 PUSH1 0x2
0x709 EXP
0x70a SUB
0x70b AND
0x70c PUSH1 0x1
0x70e PUSH1 0xa0
0x710 PUSH1 0x2
0x712 EXP
0x713 SUB
0x714 AND
0x715 EQ
0x716 ISZERO
0x717 ISZERO
0x718 PUSH2 0x789
0x71b JUMPI
---
0x6fb: JUMPDEST 
0x6fe: V638 = 0x20
0x700: V639 = MUL 0x20 V635
0x701: V640 = ADD V639 V192
0x702: V641 = CALLDATALOAD V640
0x703: V642 = 0x1
0x705: V643 = 0xa0
0x707: V644 = 0x2
0x709: V645 = EXP 0x2 0xa0
0x70a: V646 = SUB 0x10000000000000000000000000000000000000000 0x1
0x70b: V647 = AND 0xffffffffffffffffffffffffffffffffffffffff V641
0x70c: V648 = 0x1
0x70e: V649 = 0xa0
0x710: V650 = 0x2
0x712: V651 = EXP 0x2 0xa0
0x713: V652 = SUB 0x10000000000000000000000000000000000000000 0x1
0x714: V653 = AND 0xffffffffffffffffffffffffffffffffffffffff V647
0x715: V654 = EQ V653 0x0
0x716: V655 = ISZERO V654
0x717: V656 = ISZERO V655
0x718: V657 = 0x789
0x71b: JUMPI 0x789 V656
---
Entry stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S8, S7, V608, 0x0, S4, 0x0, V192, V194, V635]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S8, S7, V608, 0x0, S4]

================================

Block 0x71c
[0x71c:0x72b]
---
Predecessors: [0x6fb]
Successors: [0x72c, 0x72d]
---
0x71c DUP12
0x71d DUP12
0x71e PUSH4 0xffffffff
0x723 DUP4
0x724 AND
0x725 DUP2
0x726 DUP2
0x727 LT
0x728 PUSH2 0x72d
0x72b JUMPI
---
0x71e: V658 = 0xffffffff
0x724: V659 = AND S0 0xffffffff
0x727: V660 = LT V659 V194
0x728: V661 = 0x72d
0x72b: JUMPI 0x72d V660
---
Entry stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S4, S3, V608, 0x0, S0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, S11, S10, V659]
Exit stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S4, S3, V608, 0x0, S0, V192, V194, V659]

================================

Block 0x72c
[0x72c:0x72c]
---
Predecessors: [0x71c]
Successors: []
---
0x72c INVALID
---
0x72c: INVALID 
---
Entry stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S7, S6, V608, 0x0, S3, V192, V194, V659]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S7, S6, V608, 0x0, S3, V192, V194, V659]

================================

Block 0x72d
[0x72d:0x75b]
---
Predecessors: [0x71c]
Successors: [0x75c, 0x75d]
---
0x72d JUMPDEST
0x72e SWAP1
0x72f POP
0x730 PUSH1 0x20
0x732 MUL
0x733 ADD
0x734 CALLDATALOAD
0x735 PUSH1 0x1
0x737 PUSH1 0xa0
0x739 PUSH1 0x2
0x73b EXP
0x73c SUB
0x73d AND
0x73e PUSH1 0x1
0x740 PUSH1 0xa0
0x742 PUSH1 0x2
0x744 EXP
0x745 SUB
0x746 AND
0x747 PUSH2 0x8fc
0x74a DUP12
0x74b DUP12
0x74c DUP5
0x74d PUSH4 0xffffffff
0x752 AND
0x753 DUP2
0x754 DUP2
0x755 LT
0x756 ISZERO
0x757 ISZERO
0x758 PUSH2 0x75d
0x75b JUMPI
---
0x72d: JUMPDEST 
0x730: V662 = 0x20
0x732: V663 = MUL 0x20 V659
0x733: V664 = ADD V663 V192
0x734: V665 = CALLDATALOAD V664
0x735: V666 = 0x1
0x737: V667 = 0xa0
0x739: V668 = 0x2
0x73b: V669 = EXP 0x2 0xa0
0x73c: V670 = SUB 0x10000000000000000000000000000000000000000 0x1
0x73d: V671 = AND 0xffffffffffffffffffffffffffffffffffffffff V665
0x73e: V672 = 0x1
0x740: V673 = 0xa0
0x742: V674 = 0x2
0x744: V675 = EXP 0x2 0xa0
0x745: V676 = SUB 0x10000000000000000000000000000000000000000 0x1
0x746: V677 = AND 0xffffffffffffffffffffffffffffffffffffffff V671
0x747: V678 = 0x8fc
0x74d: V679 = 0xffffffff
0x752: V680 = AND 0xffffffff S3
0x755: V681 = LT V680 V198
0x756: V682 = ISZERO V681
0x757: V683 = ISZERO V682
0x758: V684 = 0x75d
0x75b: JUMPI 0x75d V683
---
Entry stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S7, S6, V608, 0x0, S3, V192, V194, V659]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V677, 0x8fc, S12, S11, V680]
Exit stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S7, S6, V608, 0x0, S3, V677, 0x8fc, V196, V198, V680]

================================

Block 0x75c
[0x75c:0x75c]
---
Predecessors: [0x72d]
Successors: []
---
0x75c INVALID
---
0x75c: INVALID 
---
Entry stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S9, S8, V608, 0x0, S5, V677, 0x8fc, V196, V198, V680]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S9, S8, V608, 0x0, S5, V677, 0x8fc, V196, V198, V680]

================================

Block 0x75d
[0x75d:0x784]
---
Predecessors: [0x72d]
Successors: [0x785, 0x789]
---
0x75d JUMPDEST
0x75e SWAP1
0x75f POP
0x760 PUSH1 0x20
0x762 MUL
0x763 ADD
0x764 CALLDATALOAD
0x765 SWAP1
0x766 DUP2
0x767 ISZERO
0x768 MUL
0x769 SWAP1
0x76a PUSH1 0x40
0x76c MLOAD
0x76d PUSH1 0x0
0x76f PUSH1 0x40
0x771 MLOAD
0x772 DUP1
0x773 DUP4
0x774 SUB
0x775 DUP2
0x776 DUP6
0x777 DUP9
0x778 DUP9
0x779 CALL
0x77a SWAP4
0x77b POP
0x77c POP
0x77d POP
0x77e POP
0x77f ISZERO
0x780 ISZERO
0x781 PUSH2 0x789
0x784 JUMPI
---
0x75d: JUMPDEST 
0x760: V685 = 0x20
0x762: V686 = MUL 0x20 V680
0x763: V687 = ADD V686 V196
0x764: V688 = CALLDATALOAD V687
0x767: V689 = ISZERO V688
0x768: V690 = MUL V689 0x8fc
0x76a: V691 = 0x40
0x76c: V692 = M[0x40]
0x76d: V693 = 0x0
0x76f: V694 = 0x40
0x771: V695 = M[0x40]
0x774: V696 = SUB V692 V695
0x779: V697 = CALL V690 V677 V688 V695 V696 V695 0x0
0x77f: V698 = ISZERO V697
0x780: V699 = ISZERO V698
0x781: V700 = 0x789
0x784: JUMPI 0x789 V699
---
Entry stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S9, S8, V608, 0x0, S5, V677, 0x8fc, V196, V198, V680]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S9, S8, V608, 0x0, S5]

================================

Block 0x785
[0x785:0x788]
---
Predecessors: [0x75d]
Successors: []
---
0x785 PUSH1 0x0
0x787 DUP1
0x788 REVERT
---
0x785: V701 = 0x0
0x788: REVERT 0x0 0x0
---
Entry stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S4, S3, V608, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S4, S3, V608, 0x0, S0]

================================

Block 0x789
[0x789:0x790]
---
Predecessors: [0x6fb, 0x75d]
Successors: [0x6d1]
---
0x789 JUMPDEST
0x78a PUSH1 0x1
0x78c ADD
0x78d PUSH2 0x6d1
0x790 JUMP
---
0x789: JUMPDEST 
0x78a: V702 = 0x1
0x78c: V703 = ADD 0x1 S0
0x78d: V704 = 0x6d1
0x790: JUMP 0x6d1
---
Entry stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S4, S3, V608, 0x0, S0]
Stack pops: 1
Stack additions: [V703]
Exit stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S4, S3, V608, 0x0, V703]

================================

Block 0x791
[0x791:0x846]
---
Predecessors: [0x6d1]
Successors: [0xda]
---
0x791 JUMPDEST
0x792 PUSH1 0x2
0x794 DUP1
0x795 SLOAD
0x796 PUSH28 0xffffffffffffffff0000000000000000000000000000000000000000
0x7b3 NOT
0x7b4 AND
0x7b5 PUSH21 0x10000000000000000000000000000000000000000
0x7cb PUSH3 0x11940
0x7cf DUP11
0x7d0 ADD
0x7d1 PUSH8 0xffffffffffffffff
0x7da AND
0x7db MUL
0x7dc OR
0x7dd SWAP1
0x7de SSTORE
0x7df PUSH32 0x3ac35f44fa8ae72d6230239912bf440fedd9ce83f24526787fa0efd7d615a17d
0x800 DUP9
0x801 DUP5
0x802 DUP8
0x803 PUSH1 0x40
0x805 MLOAD
0x806 DUP1
0x807 DUP5
0x808 PUSH8 0xffffffffffffffff
0x811 AND
0x812 PUSH8 0xffffffffffffffff
0x81b AND
0x81c DUP2
0x81d MSTORE
0x81e PUSH1 0x20
0x820 ADD
0x821 DUP4
0x822 DUP2
0x823 MSTORE
0x824 PUSH1 0x20
0x826 ADD
0x827 DUP3
0x828 DUP2
0x829 MSTORE
0x82a PUSH1 0x20
0x82c ADD
0x82d SWAP4
0x82e POP
0x82f POP
0x830 POP
0x831 POP
0x832 PUSH1 0x40
0x834 MLOAD
0x835 DUP1
0x836 SWAP2
0x837 SUB
0x838 SWAP1
0x839 LOG1
0x83a POP
0x83b POP
0x83c POP
0x83d POP
0x83e POP
0x83f POP
0x840 POP
0x841 POP
0x842 POP
0x843 POP
0x844 POP
0x845 POP
0x846 JUMP
---
0x791: JUMPDEST 
0x792: V705 = 0x2
0x795: V706 = S[0x2]
0x796: V707 = 0xffffffffffffffff0000000000000000000000000000000000000000
0x7b3: V708 = NOT 0xffffffffffffffff0000000000000000000000000000000000000000
0x7b4: V709 = AND 0xffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff V706
0x7b5: V710 = 0x10000000000000000000000000000000000000000
0x7cb: V711 = 0x11940
0x7d0: V712 = ADD V568 0x11940
0x7d1: V713 = 0xffffffffffffffff
0x7da: V714 = AND 0xffffffffffffffff V712
0x7db: V715 = MUL V714 0x10000000000000000000000000000000000000000
0x7dc: V716 = OR V715 V709
0x7de: S[0x2] = V716
0x7df: V717 = 0x3ac35f44fa8ae72d6230239912bf440fedd9ce83f24526787fa0efd7d615a17d
0x803: V718 = 0x40
0x805: V719 = M[0x40]
0x808: V720 = 0xffffffffffffffff
0x811: V721 = AND 0xffffffffffffffff V202
0x812: V722 = 0xffffffffffffffff
0x81b: V723 = AND 0xffffffffffffffff V721
0x81d: M[V719] = V723
0x81e: V724 = 0x20
0x820: V725 = ADD 0x20 V719
0x823: M[V725] = V608
0x824: V726 = 0x20
0x826: V727 = ADD 0x20 V725
0x829: M[V727] = S4
0x82a: V728 = 0x20
0x82c: V729 = ADD 0x20 V727
0x832: V730 = 0x40
0x834: V731 = M[0x40]
0x837: V732 = SUB V729 V731
0x839: LOG V731 V732 0x3ac35f44fa8ae72d6230239912bf440fedd9ce83f24526787fa0efd7d615a17d
0x846: JUMP 0xda
---
Entry stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S4, S3, V608, 0x0, S0]
Stack pops: 13
Stack additions: []
Exit stack: [V11]

================================

Block 0x847
[0x847:0x863]
---
Predecessors: [0x26b]
Successors: [0x864, 0x87c]
---
0x847 JUMPDEST
0x848 PUSH1 0x2
0x84a SLOAD
0x84b PUSH1 0x0
0x84d SWAP1
0x84e DUP2
0x84f SWAP1
0x850 CALLER
0x851 PUSH1 0x1
0x853 PUSH1 0xa0
0x855 PUSH1 0x2
0x857 EXP
0x858 SUB
0x859 SWAP1
0x85a DUP2
0x85b AND
0x85c SWAP2
0x85d AND
0x85e EQ
0x85f DUP1
0x860 PUSH2 0x87c
0x863 JUMPI
---
0x847: JUMPDEST 
0x848: V733 = 0x2
0x84a: V734 = S[0x2]
0x84b: V735 = 0x0
0x850: V736 = CALLER
0x851: V737 = 0x1
0x853: V738 = 0xa0
0x855: V739 = 0x2
0x857: V740 = EXP 0x2 0xa0
0x858: V741 = SUB 0x10000000000000000000000000000000000000000 0x1
0x85b: V742 = AND 0xffffffffffffffffffffffffffffffffffffffff V736
0x85d: V743 = AND V734 0xffffffffffffffffffffffffffffffffffffffff
0x85e: V744 = EQ V743 V742
0x860: V745 = 0x87c
0x863: JUMPI 0x87c V744
---
Entry stack: [V11, 0xda, V216, V218]
Stack pops: 0
Stack additions: [0x0, 0x0, V744]
Exit stack: [V11, 0xda, V216, V218, 0x0, 0x0, V744]

================================

Block 0x864
[0x864:0x87b]
---
Predecessors: [0x847]
Successors: [0x87c]
---
0x864 POP
0x865 PUSH1 0x0
0x867 SLOAD
0x868 CALLER
0x869 PUSH1 0x1
0x86b PUSH1 0xa0
0x86d PUSH1 0x2
0x86f EXP
0x870 SUB
0x871 SWAP1
0x872 DUP2
0x873 AND
0x874 PUSH2 0x100
0x877 SWAP1
0x878 SWAP3
0x879 DIV
0x87a AND
0x87b EQ
---
0x865: V746 = 0x0
0x867: V747 = S[0x0]
0x868: V748 = CALLER
0x869: V749 = 0x1
0x86b: V750 = 0xa0
0x86d: V751 = 0x2
0x86f: V752 = EXP 0x2 0xa0
0x870: V753 = SUB 0x10000000000000000000000000000000000000000 0x1
0x873: V754 = AND 0xffffffffffffffffffffffffffffffffffffffff V748
0x874: V755 = 0x100
0x879: V756 = DIV V747 0x100
0x87a: V757 = AND V756 0xffffffffffffffffffffffffffffffffffffffff
0x87b: V758 = EQ V757 V754
---
Entry stack: [V11, 0xda, V216, V218, 0x0, 0x0, V744]
Stack pops: 1
Stack additions: [V758]
Exit stack: [V11, 0xda, V216, V218, 0x0, 0x0, V758]

================================

Block 0x87c
[0x87c:0x882]
---
Predecessors: [0x847, 0x864]
Successors: [0x883, 0x887]
---
0x87c JUMPDEST
0x87d ISZERO
0x87e ISZERO
0x87f PUSH2 0x887
0x882 JUMPI
---
0x87c: JUMPDEST 
0x87d: V759 = ISZERO S0
0x87e: V760 = ISZERO V759
0x87f: V761 = 0x887
0x882: JUMPI 0x887 V760
---
Entry stack: [V11, 0xda, V216, V218, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xda, V216, V218, 0x0, 0x0]

================================

Block 0x883
[0x883:0x886]
---
Predecessors: [0x87c]
Successors: []
---
0x883 PUSH1 0x0
0x885 DUP1
0x886 REVERT
---
0x883: V762 = 0x0
0x886: REVERT 0x0 0x0
---
Entry stack: [V11, 0xda, V216, V218, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda, V216, V218, 0x0, 0x0]

================================

Block 0x887
[0x887:0x88f]
---
Predecessors: [0x87c]
Successors: [0x890, 0x894]
---
0x887 JUMPDEST
0x888 PUSH1 0x0
0x88a DUP4
0x88b GT
0x88c PUSH2 0x894
0x88f JUMPI
---
0x887: JUMPDEST 
0x888: V763 = 0x0
0x88b: V764 = GT V218 0x0
0x88c: V765 = 0x894
0x88f: JUMPI 0x894 V764
---
Entry stack: [V11, 0xda, V216, V218, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0xda, V216, V218, 0x0, 0x0]

================================

Block 0x890
[0x890:0x893]
---
Predecessors: [0x887]
Successors: []
---
0x890 PUSH1 0x0
0x892 DUP1
0x893 REVERT
---
0x890: V766 = 0x0
0x893: REVERT 0x0 0x0
---
Entry stack: [V11, 0xda, V216, V218, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda, V216, V218, 0x0, 0x0]

================================

Block 0x894
[0x894:0x8a3]
---
Predecessors: [0x887]
Successors: [0x8a4, 0x8a9]
---
0x894 JUMPDEST
0x895 PUSH1 0x1
0x897 PUSH1 0xa0
0x899 PUSH1 0x2
0x89b EXP
0x89c SUB
0x89d DUP5
0x89e AND
0x89f ISZERO
0x8a0 PUSH2 0x8a9
0x8a3 JUMPI
---
0x894: JUMPDEST 
0x895: V767 = 0x1
0x897: V768 = 0xa0
0x899: V769 = 0x2
0x89b: V770 = EXP 0x2 0xa0
0x89c: V771 = SUB 0x10000000000000000000000000000000000000000 0x1
0x89e: V772 = AND V216 0xffffffffffffffffffffffffffffffffffffffff
0x89f: V773 = ISZERO V772
0x8a0: V774 = 0x8a9
0x8a3: JUMPI 0x8a9 V773
---
Entry stack: [V11, 0xda, V216, V218, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0xda, V216, V218, 0x0, 0x0]

================================

Block 0x8a4
[0x8a4:0x8a8]
---
Predecessors: [0x894]
Successors: [0x8b6]
---
0x8a4 DUP4
0x8a5 PUSH2 0x8b6
0x8a8 JUMP
---
0x8a5: V775 = 0x8b6
0x8a8: JUMP 0x8b6
---
Entry stack: [V11, 0xda, V216, V218, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S3]
Exit stack: [V11, 0xda, V216, V218, 0x0, 0x0, V216]

================================

Block 0x8a9
[0x8a9:0x8b5]
---
Predecessors: [0x894]
Successors: [0x8b6]
---
0x8a9 JUMPDEST
0x8aa PUSH1 0x2
0x8ac SLOAD
0x8ad PUSH1 0x1
0x8af PUSH1 0xa0
0x8b1 PUSH1 0x2
0x8b3 EXP
0x8b4 SUB
0x8b5 AND
---
0x8a9: JUMPDEST 
0x8aa: V776 = 0x2
0x8ac: V777 = S[0x2]
0x8ad: V778 = 0x1
0x8af: V779 = 0xa0
0x8b1: V780 = 0x2
0x8b3: V781 = EXP 0x2 0xa0
0x8b4: V782 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8b5: V783 = AND 0xffffffffffffffffffffffffffffffffffffffff V777
---
Entry stack: [V11, 0xda, V216, V218, 0x0, 0x0]
Stack pops: 0
Stack additions: [V783]
Exit stack: [V11, 0xda, V216, V218, 0x0, 0x0, V783]

================================

Block 0x8b6
[0x8b6:0x8cc]
---
Predecessors: [0x8a4, 0x8a9]
Successors: [0x8cd, 0x902]
---
0x8b6 JUMPDEST
0x8b7 SWAP2
0x8b8 POP
0x8b9 POP
0x8ba PUSH1 0x1
0x8bc PUSH1 0xa0
0x8be PUSH1 0x2
0x8c0 EXP
0x8c1 SUB
0x8c2 ADDRESS
0x8c3 AND
0x8c4 BALANCE
0x8c5 DUP1
0x8c6 DUP4
0x8c7 LT
0x8c8 ISZERO
0x8c9 PUSH2 0x902
0x8cc JUMPI
---
0x8b6: JUMPDEST 
0x8ba: V784 = 0x1
0x8bc: V785 = 0xa0
0x8be: V786 = 0x2
0x8c0: V787 = EXP 0x2 0xa0
0x8c1: V788 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8c2: V789 = ADDRESS
0x8c3: V790 = AND V789 0xffffffffffffffffffffffffffffffffffffffff
0x8c4: V791 = BALANCE V790
0x8c7: V792 = LT V218 V791
0x8c8: V793 = ISZERO V792
0x8c9: V794 = 0x902
0x8cc: JUMPI 0x902 V793
---
Entry stack: [V11, 0xda, V216, V218, 0x0, 0x0, S0]
Stack pops: 4
Stack additions: [S3, S0, V791]
Exit stack: [V11, 0xda, V216, V218, S0, V791]

================================

Block 0x8cd
[0x8cd:0x8f8]
---
Predecessors: [0x8b6]
Successors: [0x8f9, 0x8fd]
---
0x8cd PUSH1 0x1
0x8cf PUSH1 0xa0
0x8d1 PUSH1 0x2
0x8d3 EXP
0x8d4 SUB
0x8d5 DUP3
0x8d6 AND
0x8d7 DUP4
0x8d8 ISZERO
0x8d9 PUSH2 0x8fc
0x8dc MUL
0x8dd DUP5
0x8de PUSH1 0x40
0x8e0 MLOAD
0x8e1 PUSH1 0x0
0x8e3 PUSH1 0x40
0x8e5 MLOAD
0x8e6 DUP1
0x8e7 DUP4
0x8e8 SUB
0x8e9 DUP2
0x8ea DUP6
0x8eb DUP9
0x8ec DUP9
0x8ed CALL
0x8ee SWAP4
0x8ef POP
0x8f0 POP
0x8f1 POP
0x8f2 POP
0x8f3 ISZERO
0x8f4 ISZERO
0x8f5 PUSH2 0x8fd
0x8f8 JUMPI
---
0x8cd: V795 = 0x1
0x8cf: V796 = 0xa0
0x8d1: V797 = 0x2
0x8d3: V798 = EXP 0x2 0xa0
0x8d4: V799 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8d6: V800 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x8d8: V801 = ISZERO V218
0x8d9: V802 = 0x8fc
0x8dc: V803 = MUL 0x8fc V801
0x8de: V804 = 0x40
0x8e0: V805 = M[0x40]
0x8e1: V806 = 0x0
0x8e3: V807 = 0x40
0x8e5: V808 = M[0x40]
0x8e8: V809 = SUB V805 V808
0x8ed: V810 = CALL V803 V800 V218 V808 V809 V808 0x0
0x8f3: V811 = ISZERO V810
0x8f4: V812 = ISZERO V811
0x8f5: V813 = 0x8fd
0x8f8: JUMPI 0x8fd V812
---
Entry stack: [V11, 0xda, V216, V218, S1, V791]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0xda, V216, V218, S1, V791]

================================

Block 0x8f9
[0x8f9:0x8fc]
---
Predecessors: [0x8cd]
Successors: []
---
0x8f9 PUSH1 0x0
0x8fb DUP1
0x8fc REVERT
---
0x8f9: V814 = 0x0
0x8fc: REVERT 0x0 0x0
---
Entry stack: [V11, 0xda, V216, V218, S1, V791]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda, V216, V218, S1, V791]

================================

Block 0x8fd
[0x8fd:0x901]
---
Predecessors: [0x8cd]
Successors: [0x93f]
---
0x8fd JUMPDEST
0x8fe PUSH2 0x93f
0x901 JUMP
---
0x8fd: JUMPDEST 
0x8fe: V815 = 0x93f
0x901: JUMP 0x93f
---
Entry stack: [V11, 0xda, V216, V218, S1, V791]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda, V216, V218, S1, V791]

================================

Block 0x902
[0x902:0x93a]
---
Predecessors: [0x8b6]
Successors: [0x93b, 0x93f]
---
0x902 JUMPDEST
0x903 DUP2
0x904 PUSH1 0x1
0x906 PUSH1 0xa0
0x908 PUSH1 0x2
0x90a EXP
0x90b SUB
0x90c AND
0x90d PUSH2 0x8fc
0x910 ADDRESS
0x911 PUSH1 0x1
0x913 PUSH1 0xa0
0x915 PUSH1 0x2
0x917 EXP
0x918 SUB
0x919 AND
0x91a BALANCE
0x91b SWAP1
0x91c DUP2
0x91d ISZERO
0x91e MUL
0x91f SWAP1
0x920 PUSH1 0x40
0x922 MLOAD
0x923 PUSH1 0x0
0x925 PUSH1 0x40
0x927 MLOAD
0x928 DUP1
0x929 DUP4
0x92a SUB
0x92b DUP2
0x92c DUP6
0x92d DUP9
0x92e DUP9
0x92f CALL
0x930 SWAP4
0x931 POP
0x932 POP
0x933 POP
0x934 POP
0x935 ISZERO
0x936 ISZERO
0x937 PUSH2 0x93f
0x93a JUMPI
---
0x902: JUMPDEST 
0x904: V816 = 0x1
0x906: V817 = 0xa0
0x908: V818 = 0x2
0x90a: V819 = EXP 0x2 0xa0
0x90b: V820 = SUB 0x10000000000000000000000000000000000000000 0x1
0x90c: V821 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x90d: V822 = 0x8fc
0x910: V823 = ADDRESS
0x911: V824 = 0x1
0x913: V825 = 0xa0
0x915: V826 = 0x2
0x917: V827 = EXP 0x2 0xa0
0x918: V828 = SUB 0x10000000000000000000000000000000000000000 0x1
0x919: V829 = AND 0xffffffffffffffffffffffffffffffffffffffff V823
0x91a: V830 = BALANCE V829
0x91d: V831 = ISZERO V830
0x91e: V832 = MUL V831 0x8fc
0x920: V833 = 0x40
0x922: V834 = M[0x40]
0x923: V835 = 0x0
0x925: V836 = 0x40
0x927: V837 = M[0x40]
0x92a: V838 = SUB V834 V837
0x92f: V839 = CALL V832 V821 V830 V837 V838 V837 0x0
0x935: V840 = ISZERO V839
0x936: V841 = ISZERO V840
0x937: V842 = 0x93f
0x93a: JUMPI 0x93f V841
---
Entry stack: [V11, 0xda, V216, V218, S1, V791]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0xda, V216, V218, S1, V791]

================================

Block 0x93b
[0x93b:0x93e]
---
Predecessors: [0x902]
Successors: []
---
0x93b PUSH1 0x0
0x93d DUP1
0x93e REVERT
---
0x93b: V843 = 0x0
0x93e: REVERT 0x0 0x0
---
Entry stack: [V11, 0xda, V216, V218, S1, V791]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda, V216, V218, S1, V791]

================================

Block 0x93f
[0x93f:0x944]
---
Predecessors: [0x8fd, 0x902]
Successors: [0xda]
---
0x93f JUMPDEST
0x940 POP
0x941 POP
0x942 POP
0x943 POP
0x944 JUMP
---
0x93f: JUMPDEST 
0x944: JUMP 0xda
---
Entry stack: [V11, 0xda, V216, V218, S1, V791]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x945
[0x945:0x96c]
---
Predecessors: [0x28d]
Successors: [0x295]
---
0x945 JUMPDEST
0x946 PUSH1 0x2
0x948 SLOAD
0x949 PUSH21 0x10000000000000000000000000000000000000000
0x95f SWAP1
0x960 DIV
0x961 PUSH8 0xffffffffffffffff
0x96a AND
0x96b DUP2
0x96c JUMP
---
0x945: JUMPDEST 
0x946: V844 = 0x2
0x948: V845 = S[0x2]
0x949: V846 = 0x10000000000000000000000000000000000000000
0x960: V847 = DIV V845 0x10000000000000000000000000000000000000000
0x961: V848 = 0xffffffffffffffff
0x96a: V849 = AND 0xffffffffffffffff V847
0x96c: JUMP 0x295
---
Entry stack: [V11, 0x295]
Stack pops: 1
Stack additions: [S0, V849]
Exit stack: [V11, 0x295, V849]

================================

Block 0x96d
[0x96d:0x97a]
---
Predecessors: [0x66b]
Successors: [0x97b, 0x97c]
---
0x96d JUMPDEST
0x96e PUSH1 0x0
0x970 DUP3
0x971 DUP3
0x972 ADD
0x973 DUP4
0x974 DUP2
0x975 LT
0x976 ISZERO
0x977 PUSH2 0x97c
0x97a JUMPI
---
0x96d: JUMPDEST 
0x96e: V850 = 0x0
0x972: V851 = ADD V592 S1
0x975: V852 = LT V851 S1
0x976: V853 = ISZERO V852
0x977: V854 = 0x97c
0x97a: JUMPI 0x97c V853
---
Entry stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S7, S6, 0x0, 0x0, 0x0, 0x681, S1, V592]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V851]
Exit stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S7, S6, 0x0, 0x0, 0x0, 0x681, S1, V592, 0x0, V851]

================================

Block 0x97b
[0x97b:0x97b]
---
Predecessors: [0x96d]
Successors: []
---
0x97b INVALID
---
0x97b: INVALID 
---
Entry stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S9, S8, 0x0, 0x0, 0x0, 0x681, S3, V592, 0x0, V851]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S9, S8, 0x0, 0x0, 0x0, 0x681, S3, V592, 0x0, V851]

================================

Block 0x97c
[0x97c:0x97f]
---
Predecessors: [0x96d, 0x9aa]
Successors: [0x980]
---
0x97c JUMPDEST
0x97d DUP1
0x97e SWAP2
0x97f POP
---
0x97c: JUMPDEST 
---
Entry stack: [V11, 0xda, V192, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x0, 0x6bf}, S5, {0x681, 0x6b3}, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V11, 0xda, V192, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x0, 0x6bf}, S5, {0x681, 0x6b3}, S3, S2, S0, S0]

================================

Block 0x980
[0x980:0x986]
---
Predecessors: [0x97c, 0x992]
Successors: [0x681, 0x6b3]
---
0x980 JUMPDEST
0x981 POP
0x982 SWAP3
0x983 SWAP2
0x984 POP
0x985 POP
0x986 JUMP
---
0x980: JUMPDEST 
0x986: JUMP {0x681, 0x6b3}
---
Entry stack: [V11, 0xda, V192, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x0, 0x6bf}, S5, {0x681, 0x6b3}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V11, 0xda, V192, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x0, 0x6bf}, S5, S1]

================================

Block 0x987
[0x987:0x991]
---
Predecessors: [0x68e]
Successors: [0x992, 0x99a]
---
0x987 JUMPDEST
0x988 PUSH1 0x0
0x98a DUP1
0x98b DUP4
0x98c ISZERO
0x98d ISZERO
0x98e PUSH2 0x99a
0x991 JUMPI
---
0x987: JUMPDEST 
0x988: V855 = 0x0
0x98c: V856 = ISZERO S1
0x98d: V857 = ISZERO V856
0x98e: V858 = 0x99a
0x991: JUMPI 0x99a V857
---
Entry stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S10, S9, V608, 0x0, 0x0, V600, 0x6bf, V608, 0x6b3, S1, 0x64]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0]
Exit stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S10, S9, V608, 0x0, 0x0, V600, 0x6bf, V608, 0x6b3, S1, 0x64, 0x0, 0x0]

================================

Block 0x992
[0x992:0x999]
---
Predecessors: [0x987]
Successors: [0x980]
---
0x992 PUSH1 0x0
0x994 SWAP2
0x995 POP
0x996 PUSH2 0x980
0x999 JUMP
---
0x992: V859 = 0x0
0x996: V860 = 0x980
0x999: JUMP 0x980
---
Entry stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S12, S11, V608, 0x0, 0x0, V600, 0x6bf, V608, 0x6b3, S3, 0x64, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S12, S11, V608, 0x0, 0x0, V600, 0x6bf, V608, 0x6b3, S3, 0x64, 0x0, 0x0]

================================

Block 0x99a
[0x99a:0x9a8]
---
Predecessors: [0x987]
Successors: [0x9a9, 0x9aa]
---
0x99a JUMPDEST
0x99b POP
0x99c DUP3
0x99d DUP3
0x99e MUL
0x99f DUP3
0x9a0 DUP5
0x9a1 DUP3
0x9a2 DUP2
0x9a3 ISZERO
0x9a4 ISZERO
0x9a5 PUSH2 0x9aa
0x9a8 JUMPI
---
0x99a: JUMPDEST 
0x99e: V861 = MUL 0x64 S3
0x9a3: V862 = ISZERO S3
0x9a4: V863 = ISZERO V862
0x9a5: V864 = 0x9aa
0x9a8: JUMPI 0x9aa V863
---
Entry stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S12, S11, V608, 0x0, 0x0, V600, 0x6bf, V608, 0x6b3, S3, 0x64, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, V861, S2, S3, V861]
Exit stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S12, S11, V608, 0x0, 0x0, V600, 0x6bf, V608, 0x6b3, S3, 0x64, 0x0, V861, 0x64, S3, V861]

================================

Block 0x9a9
[0x9a9:0x9a9]
---
Predecessors: [0x99a]
Successors: []
---
0x9a9 INVALID
---
0x9a9: INVALID 
---
Entry stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S15, S14, V608, 0x0, 0x0, V600, 0x6bf, V608, 0x6b3, S6, 0x64, 0x0, V861, 0x64, S1, V861]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S15, S14, V608, 0x0, 0x0, V600, 0x6bf, V608, 0x6b3, S6, 0x64, 0x0, V861, 0x64, S1, V861]

================================

Block 0x9aa
[0x9aa:0x9b0]
---
Predecessors: [0x99a]
Successors: [0x97c, 0x9b1]
---
0x9aa JUMPDEST
0x9ab DIV
0x9ac EQ
0x9ad PUSH2 0x97c
0x9b0 JUMPI
---
0x9aa: JUMPDEST 
0x9ab: V865 = DIV V861 S1
0x9ac: V866 = EQ V865 0x64
0x9ad: V867 = 0x97c
0x9b0: JUMPI 0x97c V866
---
Entry stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S15, S14, V608, 0x0, 0x0, V600, 0x6bf, V608, 0x6b3, S6, 0x64, 0x0, V861, 0x64, S1, V861]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S15, S14, V608, 0x0, 0x0, V600, 0x6bf, V608, 0x6b3, S6, 0x64, 0x0, V861]

================================

Block 0x9b1
[0x9b1:0x9b1]
---
Predecessors: [0x9aa]
Successors: []
---
0x9b1 INVALID
---
0x9b1: INVALID 
---
Entry stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S12, S11, V608, 0x0, 0x0, V600, 0x6bf, V608, 0x6b3, S3, 0x64, 0x0, V861]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S12, S11, V608, 0x0, 0x0, V600, 0x6bf, V608, 0x6b3, S3, 0x64, 0x0, V861]

================================

Block 0x9b2
[0x9b2:0x9be]
---
Predecessors: [0x6b3]
Successors: [0x9bf, 0x9c0]
---
0x9b2 JUMPDEST
0x9b3 PUSH1 0x0
0x9b5 DUP1
0x9b6 DUP3
0x9b7 DUP5
0x9b8 DUP2
0x9b9 ISZERO
0x9ba ISZERO
0x9bb PUSH2 0x9c0
0x9be JUMPI
---
0x9b2: JUMPDEST 
0x9b3: V868 = 0x0
0x9b9: V869 = ISZERO S0
0x9ba: V870 = ISZERO V869
0x9bb: V871 = 0x9c0
0x9be: JUMPI 0x9c0 V870
---
Entry stack: [V11, 0xda, V192, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x6bf}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, S0, S1]
Exit stack: [V11, 0xda, V192, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x0, 0x6bf}, S1, S0, 0x0, 0x0, S0, S1]

================================

Block 0x9bf
[0x9bf:0x9bf]
---
Predecessors: [0x9b2]
Successors: []
---
0x9bf INVALID
---
0x9bf: INVALID 
---
Entry stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S12, S11, V608, 0x0, 0x0, V600, 0x6bf, S5, V608, 0x0, 0x0, V608, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S12, S11, V608, 0x0, 0x0, V600, 0x6bf, S5, V608, 0x0, 0x0, V608, S0]

================================

Block 0x9c0
[0x9c0:0x9c8]
---
Predecessors: [0x9b2]
Successors: [0x6bf]
---
0x9c0 JUMPDEST
0x9c1 DIV
0x9c2 SWAP5
0x9c3 SWAP4
0x9c4 POP
0x9c5 POP
0x9c6 POP
0x9c7 POP
0x9c8 JUMP
---
0x9c0: JUMPDEST 
0x9c1: V872 = DIV S0 V608
0x9c8: JUMP 0x6bf
---
Entry stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S12, S11, V608, 0x0, 0x0, V600, 0x6bf, S5, V608, 0x0, 0x0, V608, S0]
Stack pops: 7
Stack additions: [V872]
Exit stack: [V11, 0xda, V192, V194, V196, V198, V202, V568, V194, S12, S11, V608, 0x0, 0x0, V600, V872]

================================

Block 0x9c9
[0x9c9:0x9fa]
---
Predecessors: []
Successors: []
---
0x9c9 STOP
0x9ca LOG1
0x9cb PUSH6 0x627a7a723058
0x9d2 SHA3
0x9d3 MISSING 0xed
0x9d4 DUP13
0x9d5 SWAP10
0x9d6 MISSING 0xc8
0x9d7 MISSING 0x5f
0x9d8 LOG0
0x9d9 CREATE2
0x9da PUSH32 0x3faf2fa766b5cea5bb447979eb8d309d3f3645d5b4a67c820029
---
0x9c9: STOP 
0x9ca: LOG S0 S1 S2
0x9cb: V873 = 0x627a7a723058
0x9d2: V874 = SHA3 0x627a7a723058 S3
0x9d3: MISSING 0xed
0x9d6: MISSING 0xc8
0x9d7: MISSING 0x5f
0x9d8: LOG S0 S1
0x9d9: V875 = CREATE2 S2 S3 S4 S5
0x9da: V876 = 0x3faf2fa766b5cea5bb447979eb8d309d3f3645d5b4a67c820029
---
Entry stack: []
Stack pops: 0
Stack additions: [V874, S9, S0, S1, S2, S3, S4, S5, S6, S7, S8, S12, S10, S11, S12, 0x3faf2fa766b5cea5bb447979eb8d309d3f3645d5b4a67c820029, V875]
Exit stack: []

================================

Function 0:
Public function signature: 0x12065fe0
Entry block: 0xdc
Exit block: 0xef
Body: 0xdc, 0xe3, 0xe7, 0xef, 0x2b2

Function 1:
Public function signature: 0x30efb8d3
Entry block: 0x101
Exit block: 0xda
Body: 0xda, 0x101, 0x108, 0x10c, 0x2c0, 0x2dc, 0x2e0, 0x2ed, 0x2f1

Function 2:
Public function signature: 0x335aa61a
Entry block: 0x114
Exit block: 0xda
Body: 0xda, 0x114, 0x11b, 0x11f, 0x2fd, 0x319, 0x31d, 0x328, 0x32d, 0x334, 0x338, 0x343, 0x347

Function 3:
Public function signature: 0x67d0661d
Entry block: 0x12a
Exit block: 0xda
Body: 0xda, 0x12a, 0x131, 0x135, 0x34c, 0x368, 0x36c, 0x378, 0x37c

Function 4:
Public function signature: 0x704b6c02
Entry block: 0x13d
Exit block: 0xda
Body: 0xda, 0x13d, 0x144, 0x148, 0x38b, 0x3a7, 0x3ab, 0x3bc, 0x3c0

Function 5:
Public function signature: 0x76db76f1
Entry block: 0x15c
Exit block: 0xda
Body: 0xda, 0x15c, 0x163, 0x167, 0x436, 0x44d, 0x451

Function 6:
Public function signature: 0x82cb9df9
Entry block: 0x16f
Exit block: 0x182
Body: 0x16f, 0x176, 0x17a, 0x182, 0x4ac

Function 7:
Public function signature: 0x9b8d3064
Entry block: 0x19e
Exit block: 0xda
Body: 0xda, 0x19e, 0x1a5, 0x1a9, 0x4bb, 0x4d3, 0x4eb, 0x4f2, 0x4f6, 0x507, 0x50b

Function 8:
Public function signature: 0xb187bd26
Entry block: 0x1bd
Exit block: 0x1d0
Body: 0x1bd, 0x1c4, 0x1c8, 0x1d0, 0x53a

Function 9:
Public function signature: 0xbf8bdac1
Entry block: 0x1e4
Exit block: 0xda
Body: 0xda, 0x1e4, 0x1eb, 0x1ef, 0x543, 0x55b, 0x573, 0x57a, 0x57e, 0x58f, 0x593

Function 10:
Public function signature: 0xbfae2f0e
Entry block: 0x203
Exit block: 0x182
Body: 0x182, 0x203, 0x20a, 0x20e, 0x5c2

Function 11:
Public function signature: 0xcdd977e0
Entry block: 0x216
Exit block: 0x182
Body: 0x182, 0x216, 0x21d, 0x221, 0x5d6

Function 12:
Public function signature: 0xda0bba90
Entry block: 0x229
Exit block: 0x785
Body: 0xda, 0x229, 0x230, 0x234, 0x5e5, 0x60b, 0x60f, 0x61b, 0x61f, 0x62d, 0x631, 0x63b, 0x63f, 0x648, 0x657, 0x66a, 0x66b, 0x681, 0x68e, 0x6b3, 0x6bf, 0x6c6, 0x6ca, 0x6d1, 0x6e0, 0x6fa, 0x6fb, 0x71c, 0x72c, 0x72d, 0x75c, 0x75d, 0x785, 0x789, 0x791, 0x96d, 0x97b, 0x97c, 0x980, 0x987, 0x992, 0x99a, 0x9a9, 0x9aa, 0x9b1, 0x9b2, 0x9bf, 0x9c0

Function 13:
Public function signature: 0xf3fef3a3
Entry block: 0x260
Exit block: 0xda
Body: 0xda, 0x260, 0x267, 0x26b, 0x847, 0x864, 0x87c, 0x883, 0x887, 0x890, 0x894, 0x8a4, 0x8a9, 0x8b6, 0x8cd, 0x8f9, 0x8fd, 0x902, 0x93b, 0x93f

Function 14:
Public function signature: 0xf5486860
Entry block: 0x282
Exit block: 0x295
Body: 0x282, 0x289, 0x28d, 0x295, 0x945

Function 15:
Public fallback function
Entry block: 0xda
Exit block: 0xda
Body: 0xda

