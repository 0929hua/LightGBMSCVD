Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xb6]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xb6
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xb6
0xc: JUMPI 0xb6 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0xbb]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x1f6eb6e7
0x21 DUP2
0x22 EQ
0x23 PUSH2 0xbb
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x1f6eb6e7
0x22: V15 = EQ V13 0x1f6eb6e7
0x23: V16 = 0xbb
0x26: JUMPI 0xbb V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0xea]
---
0x27 DUP1
0x28 PUSH4 0x21b1e5f8
0x2d EQ
0x2e PUSH2 0xea
0x31 JUMPI
---
0x28: V17 = 0x21b1e5f8
0x2d: V18 = EQ 0x21b1e5f8 V13
0x2e: V19 = 0xea
0x31: JUMPI 0xea V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x112]
---
0x32 DUP1
0x33 PUSH4 0x2af4c31e
0x38 EQ
0x39 PUSH2 0x112
0x3c JUMPI
---
0x33: V20 = 0x2af4c31e
0x38: V21 = EQ 0x2af4c31e V13
0x39: V22 = 0x112
0x3c: JUMPI 0x112 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x133]
---
0x3d DUP1
0x3e PUSH4 0x43ddc1b0
0x43 EQ
0x44 PUSH2 0x133
0x47 JUMPI
---
0x3e: V23 = 0x43ddc1b0
0x43: V24 = EQ 0x43ddc1b0 V13
0x44: V25 = 0x133
0x47: JUMPI 0x133 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x147]
---
0x48 DUP1
0x49 PUSH4 0x666a3427
0x4e EQ
0x4f PUSH2 0x147
0x52 JUMPI
---
0x49: V26 = 0x666a3427
0x4e: V27 = EQ 0x666a3427 V13
0x4f: V28 = 0x147
0x52: JUMPI 0x147 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x166]
---
0x53 DUP1
0x54 PUSH4 0x710bf322
0x59 EQ
0x5a PUSH2 0x166
0x5d JUMPI
---
0x54: V29 = 0x710bf322
0x59: V30 = EQ 0x710bf322 V13
0x5a: V31 = 0x166
0x5d: JUMPI 0x166 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x185]
---
0x5e DUP1
0x5f PUSH4 0x79ba5097
0x64 EQ
0x65 PUSH2 0x185
0x68 JUMPI
---
0x5f: V32 = 0x79ba5097
0x64: V33 = EQ 0x79ba5097 V13
0x65: V34 = 0x185
0x68: JUMPI 0x185 V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x198]
---
0x69 DUP1
0x6a PUSH4 0x892db057
0x6f EQ
0x70 PUSH2 0x198
0x73 JUMPI
---
0x6a: V35 = 0x892db057
0x6f: V36 = EQ 0x892db057 V13
0x70: V37 = 0x198
0x73: JUMPI 0x198 V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x1b7]
---
0x74 DUP1
0x75 PUSH4 0x8da5cb5b
0x7a EQ
0x7b PUSH2 0x1b7
0x7e JUMPI
---
0x75: V38 = 0x8da5cb5b
0x7a: V39 = EQ 0x8da5cb5b V13
0x7b: V40 = 0x1b7
0x7e: JUMPI 0x1b7 V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x89]
---
Predecessors: [0x74]
Successors: [0x8a, 0x1ca]
---
0x7f DUP1
0x80 PUSH4 0x8f975a64
0x85 EQ
0x86 PUSH2 0x1ca
0x89 JUMPI
---
0x80: V41 = 0x8f975a64
0x85: V42 = EQ 0x8f975a64 V13
0x86: V43 = 0x1ca
0x89: JUMPI 0x1ca V42
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x8a
[0x8a:0x94]
---
Predecessors: [0x7f]
Successors: [0x95, 0x1f2]
---
0x8a DUP1
0x8b PUSH4 0xa142d608
0x90 EQ
0x91 PUSH2 0x1f2
0x94 JUMPI
---
0x8b: V44 = 0xa142d608
0x90: V45 = EQ 0xa142d608 V13
0x91: V46 = 0x1f2
0x94: JUMPI 0x1f2 V45
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x95
[0x95:0x9f]
---
Predecessors: [0x8a]
Successors: [0xa0, 0x211]
---
0x95 DUP1
0x96 PUSH4 0xd091b550
0x9b EQ
0x9c PUSH2 0x211
0x9f JUMPI
---
0x96: V47 = 0xd091b550
0x9b: V48 = EQ 0xd091b550 V13
0x9c: V49 = 0x211
0x9f: JUMPI 0x211 V48
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xa0
[0xa0:0xaa]
---
Predecessors: [0x95]
Successors: [0xab, 0x224]
---
0xa0 DUP1
0xa1 PUSH4 0xd836fbe8
0xa6 EQ
0xa7 PUSH2 0x224
0xaa JUMPI
---
0xa1: V50 = 0xd836fbe8
0xa6: V51 = EQ 0xd836fbe8 V13
0xa7: V52 = 0x224
0xaa: JUMPI 0x224 V51
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xab
[0xab:0xb5]
---
Predecessors: [0xa0]
Successors: [0xb6, 0x243]
---
0xab DUP1
0xac PUSH4 0xf5b61230
0xb1 EQ
0xb2 PUSH2 0x243
0xb5 JUMPI
---
0xac: V53 = 0xf5b61230
0xb1: V54 = EQ 0xf5b61230 V13
0xb2: V55 = 0x243
0xb5: JUMPI 0x243 V54
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xb6
[0xb6:0xba]
---
Predecessors: [0x0, 0xab]
Successors: []
---
0xb6 JUMPDEST
0xb7 PUSH1 0x0
0xb9 DUP1
0xba REVERT
---
0xb6: JUMPDEST 
0xb7: V56 = 0x0
0xba: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xbb
[0xbb:0xc1]
---
Predecessors: [0xd]
Successors: [0xc2, 0xc6]
---
0xbb JUMPDEST
0xbc CALLVALUE
0xbd ISZERO
0xbe PUSH2 0xc6
0xc1 JUMPI
---
0xbb: JUMPDEST 
0xbc: V57 = CALLVALUE
0xbd: V58 = ISZERO V57
0xbe: V59 = 0xc6
0xc1: JUMPI 0xc6 V58
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xc2
[0xc2:0xc5]
---
Predecessors: [0xbb]
Successors: []
---
0xc2 PUSH1 0x0
0xc4 DUP1
0xc5 REVERT
---
0xc2: V60 = 0x0
0xc5: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xc6
[0xc6:0xcd]
---
Predecessors: [0xbb]
Successors: [0x256]
---
0xc6 JUMPDEST
0xc7 PUSH2 0xce
0xca PUSH2 0x256
0xcd JUMP
---
0xc6: JUMPDEST 
0xc7: V61 = 0xce
0xca: V62 = 0x256
0xcd: JUMP 0x256
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xce]
Exit stack: [V13, 0xce]

================================

Block 0xce
[0xce:0xe9]
---
Predecessors: [0x256, 0x4da, 0x73c, 0x7b0]
Successors: []
---
0xce JUMPDEST
0xcf PUSH1 0x40
0xd1 MLOAD
0xd2 PUSH1 0x1
0xd4 PUSH1 0xa0
0xd6 PUSH1 0x2
0xd8 EXP
0xd9 SUB
0xda SWAP1
0xdb SWAP2
0xdc AND
0xdd DUP2
0xde MSTORE
0xdf PUSH1 0x20
0xe1 ADD
0xe2 PUSH1 0x40
0xe4 MLOAD
0xe5 DUP1
0xe6 SWAP2
0xe7 SUB
0xe8 SWAP1
0xe9 RETURN
---
0xce: JUMPDEST 
0xcf: V63 = 0x40
0xd1: V64 = M[0x40]
0xd2: V65 = 0x1
0xd4: V66 = 0xa0
0xd6: V67 = 0x2
0xd8: V68 = EXP 0x2 0xa0
0xd9: V69 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdc: V70 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xde: M[V64] = V70
0xdf: V71 = 0x20
0xe1: V72 = ADD 0x20 V64
0xe2: V73 = 0x40
0xe4: V74 = M[0x40]
0xe7: V75 = SUB V72 V74
0xe9: RETURN V74 V75
---
Entry stack: [V13, 0xce, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xce]

================================

Block 0xea
[0xea:0xfd]
---
Predecessors: [0x27]
Successors: [0x265]
---
0xea JUMPDEST
0xeb PUSH2 0xfe
0xee PUSH1 0x1
0xf0 PUSH1 0xa0
0xf2 PUSH1 0x2
0xf4 EXP
0xf5 SUB
0xf6 PUSH1 0x4
0xf8 CALLDATALOAD
0xf9 AND
0xfa PUSH2 0x265
0xfd JUMP
---
0xea: JUMPDEST 
0xeb: V76 = 0xfe
0xee: V77 = 0x1
0xf0: V78 = 0xa0
0xf2: V79 = 0x2
0xf4: V80 = EXP 0x2 0xa0
0xf5: V81 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf6: V82 = 0x4
0xf8: V83 = CALLDATALOAD 0x4
0xf9: V84 = AND V83 0xffffffffffffffffffffffffffffffffffffffff
0xfa: V85 = 0x265
0xfd: JUMP 0x265
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xfe, V84]
Exit stack: [V13, 0xfe, V84]

================================

Block 0xfe
[0xfe:0x111]
---
Predecessors: [0x271, 0x4bb, 0x4f6]
Successors: []
---
0xfe JUMPDEST
0xff PUSH1 0x40
0x101 MLOAD
0x102 SWAP1
0x103 ISZERO
0x104 ISZERO
0x105 DUP2
0x106 MSTORE
0x107 PUSH1 0x20
0x109 ADD
0x10a PUSH1 0x40
0x10c MLOAD
0x10d DUP1
0x10e SWAP2
0x10f SUB
0x110 SWAP1
0x111 RETURN
---
0xfe: JUMPDEST 
0xff: V86 = 0x40
0x101: V87 = M[0x40]
0x103: V88 = ISZERO S0
0x104: V89 = ISZERO V88
0x106: M[V87] = V89
0x107: V90 = 0x20
0x109: V91 = ADD 0x20 V87
0x10a: V92 = 0x40
0x10c: V93 = M[0x40]
0x10f: V94 = SUB V91 V93
0x111: RETURN V93 V94
---
Entry stack: [V13, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x112
[0x112:0x118]
---
Predecessors: [0x32]
Successors: [0x119, 0x11d]
---
0x112 JUMPDEST
0x113 CALLVALUE
0x114 ISZERO
0x115 PUSH2 0x11d
0x118 JUMPI
---
0x112: JUMPDEST 
0x113: V95 = CALLVALUE
0x114: V96 = ISZERO V95
0x115: V97 = 0x11d
0x118: JUMPI 0x11d V96
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x119
[0x119:0x11c]
---
Predecessors: [0x112]
Successors: []
---
0x119 PUSH1 0x0
0x11b DUP1
0x11c REVERT
---
0x119: V98 = 0x0
0x11c: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x11d
[0x11d:0x130]
---
Predecessors: [0x112]
Successors: [0x279]
---
0x11d JUMPDEST
0x11e PUSH2 0x131
0x121 PUSH1 0x1
0x123 PUSH1 0xa0
0x125 PUSH1 0x2
0x127 EXP
0x128 SUB
0x129 PUSH1 0x4
0x12b CALLDATALOAD
0x12c AND
0x12d PUSH2 0x279
0x130 JUMP
---
0x11d: JUMPDEST 
0x11e: V99 = 0x131
0x121: V100 = 0x1
0x123: V101 = 0xa0
0x125: V102 = 0x2
0x127: V103 = EXP 0x2 0xa0
0x128: V104 = SUB 0x10000000000000000000000000000000000000000 0x1
0x129: V105 = 0x4
0x12b: V106 = CALLDATALOAD 0x4
0x12c: V107 = AND V106 0xffffffffffffffffffffffffffffffffffffffff
0x12d: V108 = 0x279
0x130: JUMP 0x279
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x131, V107]
Exit stack: [V13, 0x131, V107]

================================

Block 0x131
[0x131:0x132]
---
Predecessors: [0x2aa, 0x358, 0x3cb, 0x44c, 0x737, 0x781]
Successors: []
---
0x131 JUMPDEST
0x132 STOP
---
0x131: JUMPDEST 
0x132: STOP 
---
Entry stack: [V13, 0xfe, V185, V188, V190, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfe, V185, V188, V190, S0]

================================

Block 0x133
[0x133:0x146]
---
Predecessors: [0x3d]
Successors: [0x31a]
---
0x133 JUMPDEST
0x134 PUSH2 0xfe
0x137 PUSH1 0x1
0x139 PUSH1 0xa0
0x13b PUSH1 0x2
0x13d EXP
0x13e SUB
0x13f PUSH1 0x4
0x141 CALLDATALOAD
0x142 AND
0x143 PUSH2 0x31a
0x146 JUMP
---
0x133: JUMPDEST 
0x134: V109 = 0xfe
0x137: V110 = 0x1
0x139: V111 = 0xa0
0x13b: V112 = 0x2
0x13d: V113 = EXP 0x2 0xa0
0x13e: V114 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13f: V115 = 0x4
0x141: V116 = CALLDATALOAD 0x4
0x142: V117 = AND V116 0xffffffffffffffffffffffffffffffffffffffff
0x143: V118 = 0x31a
0x146: JUMP 0x31a
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xfe, V117]
Exit stack: [V13, 0xfe, V117]

================================

Block 0x147
[0x147:0x14d]
---
Predecessors: [0x48]
Successors: [0x14e, 0x152]
---
0x147 JUMPDEST
0x148 CALLVALUE
0x149 ISZERO
0x14a PUSH2 0x152
0x14d JUMPI
---
0x147: JUMPDEST 
0x148: V119 = CALLVALUE
0x149: V120 = ISZERO V119
0x14a: V121 = 0x152
0x14d: JUMPI 0x152 V120
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x14e
[0x14e:0x151]
---
Predecessors: [0x147]
Successors: []
---
0x14e PUSH1 0x0
0x150 DUP1
0x151 REVERT
---
0x14e: V122 = 0x0
0x151: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x152
[0x152:0x165]
---
Predecessors: [0x147]
Successors: [0x326]
---
0x152 JUMPDEST
0x153 PUSH2 0x131
0x156 PUSH1 0x1
0x158 PUSH1 0xa0
0x15a PUSH1 0x2
0x15c EXP
0x15d SUB
0x15e PUSH1 0x4
0x160 CALLDATALOAD
0x161 AND
0x162 PUSH2 0x326
0x165 JUMP
---
0x152: JUMPDEST 
0x153: V123 = 0x131
0x156: V124 = 0x1
0x158: V125 = 0xa0
0x15a: V126 = 0x2
0x15c: V127 = EXP 0x2 0xa0
0x15d: V128 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15e: V129 = 0x4
0x160: V130 = CALLDATALOAD 0x4
0x161: V131 = AND V130 0xffffffffffffffffffffffffffffffffffffffff
0x162: V132 = 0x326
0x165: JUMP 0x326
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x131, V131]
Exit stack: [V13, 0x131, V131]

================================

Block 0x166
[0x166:0x16c]
---
Predecessors: [0x53]
Successors: [0x16d, 0x171]
---
0x166 JUMPDEST
0x167 CALLVALUE
0x168 ISZERO
0x169 PUSH2 0x171
0x16c JUMPI
---
0x166: JUMPDEST 
0x167: V133 = CALLVALUE
0x168: V134 = ISZERO V133
0x169: V135 = 0x171
0x16c: JUMPI 0x171 V134
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x16d
[0x16d:0x170]
---
Predecessors: [0x166]
Successors: []
---
0x16d PUSH1 0x0
0x16f DUP1
0x170 REVERT
---
0x16d: V136 = 0x0
0x170: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x171
[0x171:0x184]
---
Predecessors: [0x166]
Successors: [0x3b0]
---
0x171 JUMPDEST
0x172 PUSH2 0x131
0x175 PUSH1 0x1
0x177 PUSH1 0xa0
0x179 PUSH1 0x2
0x17b EXP
0x17c SUB
0x17d PUSH1 0x4
0x17f CALLDATALOAD
0x180 AND
0x181 PUSH2 0x3b0
0x184 JUMP
---
0x171: JUMPDEST 
0x172: V137 = 0x131
0x175: V138 = 0x1
0x177: V139 = 0xa0
0x179: V140 = 0x2
0x17b: V141 = EXP 0x2 0xa0
0x17c: V142 = SUB 0x10000000000000000000000000000000000000000 0x1
0x17d: V143 = 0x4
0x17f: V144 = CALLDATALOAD 0x4
0x180: V145 = AND V144 0xffffffffffffffffffffffffffffffffffffffff
0x181: V146 = 0x3b0
0x184: JUMP 0x3b0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x131, V145]
Exit stack: [V13, 0x131, V145]

================================

Block 0x185
[0x185:0x18b]
---
Predecessors: [0x5e]
Successors: [0x18c, 0x190]
---
0x185 JUMPDEST
0x186 CALLVALUE
0x187 ISZERO
0x188 PUSH2 0x190
0x18b JUMPI
---
0x185: JUMPDEST 
0x186: V147 = CALLVALUE
0x187: V148 = ISZERO V147
0x188: V149 = 0x190
0x18b: JUMPI 0x190 V148
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x18c
[0x18c:0x18f]
---
Predecessors: [0x185]
Successors: []
---
0x18c PUSH1 0x0
0x18e DUP1
0x18f REVERT
---
0x18c: V150 = 0x0
0x18f: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x190
[0x190:0x197]
---
Predecessors: [0x185]
Successors: [0x42e]
---
0x190 JUMPDEST
0x191 PUSH2 0x131
0x194 PUSH2 0x42e
0x197 JUMP
---
0x190: JUMPDEST 
0x191: V151 = 0x131
0x194: V152 = 0x42e
0x197: JUMP 0x42e
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x131]
Exit stack: [V13, 0x131]

================================

Block 0x198
[0x198:0x19e]
---
Predecessors: [0x69]
Successors: [0x19f, 0x1a3]
---
0x198 JUMPDEST
0x199 CALLVALUE
0x19a ISZERO
0x19b PUSH2 0x1a3
0x19e JUMPI
---
0x198: JUMPDEST 
0x199: V153 = CALLVALUE
0x19a: V154 = ISZERO V153
0x19b: V155 = 0x1a3
0x19e: JUMPI 0x1a3 V154
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x19f
[0x19f:0x1a2]
---
Predecessors: [0x198]
Successors: []
---
0x19f PUSH1 0x0
0x1a1 DUP1
0x1a2 REVERT
---
0x19f: V156 = 0x0
0x1a2: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1a3
[0x1a3:0x1b6]
---
Predecessors: [0x198]
Successors: [0x4bb]
---
0x1a3 JUMPDEST
0x1a4 PUSH2 0xfe
0x1a7 PUSH1 0x1
0x1a9 PUSH1 0xa0
0x1ab PUSH1 0x2
0x1ad EXP
0x1ae SUB
0x1af PUSH1 0x4
0x1b1 CALLDATALOAD
0x1b2 AND
0x1b3 PUSH2 0x4bb
0x1b6 JUMP
---
0x1a3: JUMPDEST 
0x1a4: V157 = 0xfe
0x1a7: V158 = 0x1
0x1a9: V159 = 0xa0
0x1ab: V160 = 0x2
0x1ad: V161 = EXP 0x2 0xa0
0x1ae: V162 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1af: V163 = 0x4
0x1b1: V164 = CALLDATALOAD 0x4
0x1b2: V165 = AND V164 0xffffffffffffffffffffffffffffffffffffffff
0x1b3: V166 = 0x4bb
0x1b6: JUMP 0x4bb
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xfe, V165]
Exit stack: [V13, 0xfe, V165]

================================

Block 0x1b7
[0x1b7:0x1bd]
---
Predecessors: [0x74]
Successors: [0x1be, 0x1c2]
---
0x1b7 JUMPDEST
0x1b8 CALLVALUE
0x1b9 ISZERO
0x1ba PUSH2 0x1c2
0x1bd JUMPI
---
0x1b7: JUMPDEST 
0x1b8: V167 = CALLVALUE
0x1b9: V168 = ISZERO V167
0x1ba: V169 = 0x1c2
0x1bd: JUMPI 0x1c2 V168
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1be
[0x1be:0x1c1]
---
Predecessors: [0x1b7]
Successors: []
---
0x1be PUSH1 0x0
0x1c0 DUP1
0x1c1 REVERT
---
0x1be: V170 = 0x0
0x1c1: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1c2
[0x1c2:0x1c9]
---
Predecessors: [0x1b7]
Successors: [0x4da]
---
0x1c2 JUMPDEST
0x1c3 PUSH2 0xce
0x1c6 PUSH2 0x4da
0x1c9 JUMP
---
0x1c2: JUMPDEST 
0x1c3: V171 = 0xce
0x1c6: V172 = 0x4da
0x1c9: JUMP 0x4da
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xce]
Exit stack: [V13, 0xce]

================================

Block 0x1ca
[0x1ca:0x1d0]
---
Predecessors: [0x7f]
Successors: [0x1d1, 0x1d5]
---
0x1ca JUMPDEST
0x1cb CALLVALUE
0x1cc ISZERO
0x1cd PUSH2 0x1d5
0x1d0 JUMPI
---
0x1ca: JUMPDEST 
0x1cb: V173 = CALLVALUE
0x1cc: V174 = ISZERO V173
0x1cd: V175 = 0x1d5
0x1d0: JUMPI 0x1d5 V174
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1d1
[0x1d1:0x1d4]
---
Predecessors: [0x1ca]
Successors: []
---
0x1d1 PUSH1 0x0
0x1d3 DUP1
0x1d4 REVERT
---
0x1d1: V176 = 0x0
0x1d4: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1d5
[0x1d5:0x1f1]
---
Predecessors: [0x1ca]
Successors: [0x4e9]
---
0x1d5 JUMPDEST
0x1d6 PUSH2 0xfe
0x1d9 PUSH1 0x1
0x1db PUSH1 0xa0
0x1dd PUSH1 0x2
0x1df EXP
0x1e0 SUB
0x1e1 PUSH1 0x4
0x1e3 CALLDATALOAD
0x1e4 DUP2
0x1e5 AND
0x1e6 SWAP1
0x1e7 PUSH1 0x24
0x1e9 CALLDATALOAD
0x1ea AND
0x1eb PUSH1 0x44
0x1ed CALLDATALOAD
0x1ee PUSH2 0x4e9
0x1f1 JUMP
---
0x1d5: JUMPDEST 
0x1d6: V177 = 0xfe
0x1d9: V178 = 0x1
0x1db: V179 = 0xa0
0x1dd: V180 = 0x2
0x1df: V181 = EXP 0x2 0xa0
0x1e0: V182 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e1: V183 = 0x4
0x1e3: V184 = CALLDATALOAD 0x4
0x1e5: V185 = AND 0xffffffffffffffffffffffffffffffffffffffff V184
0x1e7: V186 = 0x24
0x1e9: V187 = CALLDATALOAD 0x24
0x1ea: V188 = AND V187 0xffffffffffffffffffffffffffffffffffffffff
0x1eb: V189 = 0x44
0x1ed: V190 = CALLDATALOAD 0x44
0x1ee: V191 = 0x4e9
0x1f1: JUMP 0x4e9
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xfe, V185, V188, V190]
Exit stack: [V13, 0xfe, V185, V188, V190]

================================

Block 0x1f2
[0x1f2:0x1f8]
---
Predecessors: [0x8a]
Successors: [0x1f9, 0x1fd]
---
0x1f2 JUMPDEST
0x1f3 CALLVALUE
0x1f4 ISZERO
0x1f5 PUSH2 0x1fd
0x1f8 JUMPI
---
0x1f2: JUMPDEST 
0x1f3: V192 = CALLVALUE
0x1f4: V193 = ISZERO V192
0x1f5: V194 = 0x1fd
0x1f8: JUMPI 0x1fd V193
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1f9
[0x1f9:0x1fc]
---
Predecessors: [0x1f2]
Successors: []
---
0x1f9 PUSH1 0x0
0x1fb DUP1
0x1fc REVERT
---
0x1f9: V195 = 0x0
0x1fc: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1fd
[0x1fd:0x210]
---
Predecessors: [0x1f2]
Successors: [0x500]
---
0x1fd JUMPDEST
0x1fe PUSH2 0x131
0x201 PUSH1 0x1
0x203 PUSH1 0xa0
0x205 PUSH1 0x2
0x207 EXP
0x208 SUB
0x209 PUSH1 0x4
0x20b CALLDATALOAD
0x20c AND
0x20d PUSH2 0x500
0x210 JUMP
---
0x1fd: JUMPDEST 
0x1fe: V196 = 0x131
0x201: V197 = 0x1
0x203: V198 = 0xa0
0x205: V199 = 0x2
0x207: V200 = EXP 0x2 0xa0
0x208: V201 = SUB 0x10000000000000000000000000000000000000000 0x1
0x209: V202 = 0x4
0x20b: V203 = CALLDATALOAD 0x4
0x20c: V204 = AND V203 0xffffffffffffffffffffffffffffffffffffffff
0x20d: V205 = 0x500
0x210: JUMP 0x500
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x131, V204]
Exit stack: [V13, 0x131, V204]

================================

Block 0x211
[0x211:0x217]
---
Predecessors: [0x95]
Successors: [0x218, 0x21c]
---
0x211 JUMPDEST
0x212 CALLVALUE
0x213 ISZERO
0x214 PUSH2 0x21c
0x217 JUMPI
---
0x211: JUMPDEST 
0x212: V206 = CALLVALUE
0x213: V207 = ISZERO V206
0x214: V208 = 0x21c
0x217: JUMPI 0x21c V207
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x218
[0x218:0x21b]
---
Predecessors: [0x211]
Successors: []
---
0x218 PUSH1 0x0
0x21a DUP1
0x21b REVERT
---
0x218: V209 = 0x0
0x21b: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x21c
[0x21c:0x223]
---
Predecessors: [0x211]
Successors: [0x73c]
---
0x21c JUMPDEST
0x21d PUSH2 0xce
0x220 PUSH2 0x73c
0x223 JUMP
---
0x21c: JUMPDEST 
0x21d: V210 = 0xce
0x220: V211 = 0x73c
0x223: JUMP 0x73c
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xce]
Exit stack: [V13, 0xce]

================================

Block 0x224
[0x224:0x22a]
---
Predecessors: [0xa0]
Successors: [0x22b, 0x22f]
---
0x224 JUMPDEST
0x225 CALLVALUE
0x226 ISZERO
0x227 PUSH2 0x22f
0x22a JUMPI
---
0x224: JUMPDEST 
0x225: V212 = CALLVALUE
0x226: V213 = ISZERO V212
0x227: V214 = 0x22f
0x22a: JUMPI 0x22f V213
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x22b
[0x22b:0x22e]
---
Predecessors: [0x224]
Successors: []
---
0x22b PUSH1 0x0
0x22d DUP1
0x22e REVERT
---
0x22b: V215 = 0x0
0x22e: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x22f
[0x22f:0x242]
---
Predecessors: [0x224]
Successors: [0x74b]
---
0x22f JUMPDEST
0x230 PUSH2 0x131
0x233 PUSH1 0x1
0x235 PUSH1 0xa0
0x237 PUSH1 0x2
0x239 EXP
0x23a SUB
0x23b PUSH1 0x4
0x23d CALLDATALOAD
0x23e AND
0x23f PUSH2 0x74b
0x242 JUMP
---
0x22f: JUMPDEST 
0x230: V216 = 0x131
0x233: V217 = 0x1
0x235: V218 = 0xa0
0x237: V219 = 0x2
0x239: V220 = EXP 0x2 0xa0
0x23a: V221 = SUB 0x10000000000000000000000000000000000000000 0x1
0x23b: V222 = 0x4
0x23d: V223 = CALLDATALOAD 0x4
0x23e: V224 = AND V223 0xffffffffffffffffffffffffffffffffffffffff
0x23f: V225 = 0x74b
0x242: JUMP 0x74b
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x131, V224]
Exit stack: [V13, 0x131, V224]

================================

Block 0x243
[0x243:0x249]
---
Predecessors: [0xab]
Successors: [0x24a, 0x24e]
---
0x243 JUMPDEST
0x244 CALLVALUE
0x245 ISZERO
0x246 PUSH2 0x24e
0x249 JUMPI
---
0x243: JUMPDEST 
0x244: V226 = CALLVALUE
0x245: V227 = ISZERO V226
0x246: V228 = 0x24e
0x249: JUMPI 0x24e V227
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x24a
[0x24a:0x24d]
---
Predecessors: [0x243]
Successors: []
---
0x24a PUSH1 0x0
0x24c DUP1
0x24d REVERT
---
0x24a: V229 = 0x0
0x24d: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x24e
[0x24e:0x255]
---
Predecessors: [0x243]
Successors: [0x7b0]
---
0x24e JUMPDEST
0x24f PUSH2 0xce
0x252 PUSH2 0x7b0
0x255 JUMP
---
0x24e: JUMPDEST 
0x24f: V230 = 0xce
0x252: V231 = 0x7b0
0x255: JUMP 0x7b0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xce]
Exit stack: [V13, 0xce]

================================

Block 0x256
[0x256:0x264]
---
Predecessors: [0xc6]
Successors: [0xce]
---
0x256 JUMPDEST
0x257 PUSH1 0x2
0x259 SLOAD
0x25a PUSH1 0x1
0x25c PUSH1 0xa0
0x25e PUSH1 0x2
0x260 EXP
0x261 SUB
0x262 AND
0x263 DUP2
0x264 JUMP
---
0x256: JUMPDEST 
0x257: V232 = 0x2
0x259: V233 = S[0x2]
0x25a: V234 = 0x1
0x25c: V235 = 0xa0
0x25e: V236 = 0x2
0x260: V237 = EXP 0x2 0xa0
0x261: V238 = SUB 0x10000000000000000000000000000000000000000 0x1
0x262: V239 = AND 0xffffffffffffffffffffffffffffffffffffffff V233
0x264: JUMP 0xce
---
Entry stack: [V13, 0xce]
Stack pops: 1
Stack additions: [S0, V239]
Exit stack: [V13, 0xce, V239]

================================

Block 0x265
[0x265:0x270]
---
Predecessors: [0xea]
Successors: [0x7bf]
---
0x265 JUMPDEST
0x266 PUSH1 0x0
0x268 PUSH2 0x271
0x26b DUP3
0x26c CALLVALUE
0x26d PUSH2 0x7bf
0x270 JUMP
---
0x265: JUMPDEST 
0x266: V240 = 0x0
0x268: V241 = 0x271
0x26c: V242 = CALLVALUE
0x26d: V243 = 0x7bf
0x270: JUMP 0x7bf
---
Entry stack: [V13, 0xfe, V84]
Stack pops: 1
Stack additions: [S0, 0x0, 0x271, S0, V242]
Exit stack: [V13, 0xfe, V84, 0x0, 0x271, V84, V242]

================================

Block 0x271
[0x271:0x278]
---
Predecessors: [0x805]
Successors: [0xfe]
---
0x271 JUMPDEST
0x272 POP
0x273 PUSH1 0x1
0x275 SWAP2
0x276 SWAP1
0x277 POP
0x278 JUMP
---
0x271: JUMPDEST 
0x273: V244 = 0x1
0x278: JUMP 0xfe
---
Entry stack: [V13, 0xfe, S1, 0x0]
Stack pops: 3
Stack additions: [0x1]
Exit stack: [V13, 0x1]

================================

Block 0x279
[0x279:0x290]
---
Predecessors: [0x11d]
Successors: [0x291, 0x295]
---
0x279 JUMPDEST
0x27a PUSH1 0x0
0x27c DUP1
0x27d SLOAD
0x27e CALLER
0x27f PUSH1 0x1
0x281 PUSH1 0xa0
0x283 PUSH1 0x2
0x285 EXP
0x286 SUB
0x287 SWAP1
0x288 DUP2
0x289 AND
0x28a SWAP2
0x28b AND
0x28c EQ
0x28d PUSH2 0x295
0x290 JUMPI
---
0x279: JUMPDEST 
0x27a: V245 = 0x0
0x27d: V246 = S[0x0]
0x27e: V247 = CALLER
0x27f: V248 = 0x1
0x281: V249 = 0xa0
0x283: V250 = 0x2
0x285: V251 = EXP 0x2 0xa0
0x286: V252 = SUB 0x10000000000000000000000000000000000000000 0x1
0x289: V253 = AND 0xffffffffffffffffffffffffffffffffffffffff V247
0x28b: V254 = AND V246 0xffffffffffffffffffffffffffffffffffffffff
0x28c: V255 = EQ V254 V253
0x28d: V256 = 0x295
0x290: JUMPI 0x295 V255
---
Entry stack: [V13, 0x131, V107]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x131, V107, 0x0]

================================

Block 0x291
[0x291:0x294]
---
Predecessors: [0x279]
Successors: []
---
0x291 PUSH1 0x0
0x293 DUP1
0x294 REVERT
---
0x291: V257 = 0x0
0x294: REVERT 0x0 0x0
---
Entry stack: [V13, 0x131, V107, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x131, V107, 0x0]

================================

Block 0x295
[0x295:0x2a5]
---
Predecessors: [0x279]
Successors: [0x2a6, 0x2aa]
---
0x295 JUMPDEST
0x296 PUSH1 0x1
0x298 PUSH1 0xa0
0x29a PUSH1 0x2
0x29c EXP
0x29d SUB
0x29e DUP3
0x29f AND
0x2a0 ISZERO
0x2a1 ISZERO
0x2a2 PUSH2 0x2aa
0x2a5 JUMPI
---
0x295: JUMPDEST 
0x296: V258 = 0x1
0x298: V259 = 0xa0
0x29a: V260 = 0x2
0x29c: V261 = EXP 0x2 0xa0
0x29d: V262 = SUB 0x10000000000000000000000000000000000000000 0x1
0x29f: V263 = AND V107 0xffffffffffffffffffffffffffffffffffffffff
0x2a0: V264 = ISZERO V263
0x2a1: V265 = ISZERO V264
0x2a2: V266 = 0x2aa
0x2a5: JUMPI 0x2aa V265
---
Entry stack: [V13, 0x131, V107, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x131, V107, 0x0]

================================

Block 0x2a6
[0x2a6:0x2a9]
---
Predecessors: [0x295]
Successors: []
---
0x2a6 PUSH1 0x0
0x2a8 DUP1
0x2a9 REVERT
---
0x2a6: V267 = 0x0
0x2a9: REVERT 0x0 0x0
---
Entry stack: [V13, 0x131, V107, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x131, V107, 0x0]

================================

Block 0x2aa
[0x2aa:0x319]
---
Predecessors: [0x295]
Successors: [0x131]
---
0x2aa JUMPDEST
0x2ab POP
0x2ac PUSH1 0x0
0x2ae DUP1
0x2af SLOAD
0x2b0 PUSH1 0x1
0x2b2 PUSH1 0xa0
0x2b4 PUSH1 0x2
0x2b6 EXP
0x2b7 SUB
0x2b8 DUP4
0x2b9 DUP2
0x2ba AND
0x2bb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d0 NOT
0x2d1 DUP1
0x2d2 DUP5
0x2d3 AND
0x2d4 SWAP2
0x2d5 SWAP1
0x2d6 SWAP2
0x2d7 OR
0x2d8 SWAP4
0x2d9 DUP5
0x2da SWAP1
0x2db SSTORE
0x2dc PUSH1 0x1
0x2de DUP1
0x2df SLOAD
0x2e0 SWAP1
0x2e1 SWAP2
0x2e2 AND
0x2e3 SWAP1
0x2e4 SSTORE
0x2e5 SWAP1
0x2e6 DUP2
0x2e7 AND
0x2e8 SWAP2
0x2e9 AND
0x2ea DUP2
0x2eb PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x30c PUSH1 0x40
0x30e MLOAD
0x30f PUSH1 0x40
0x311 MLOAD
0x312 DUP1
0x313 SWAP2
0x314 SUB
0x315 SWAP1
0x316 LOG3
0x317 POP
0x318 POP
0x319 JUMP
---
0x2aa: JUMPDEST 
0x2ac: V268 = 0x0
0x2af: V269 = S[0x0]
0x2b0: V270 = 0x1
0x2b2: V271 = 0xa0
0x2b4: V272 = 0x2
0x2b6: V273 = EXP 0x2 0xa0
0x2b7: V274 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ba: V275 = AND 0xffffffffffffffffffffffffffffffffffffffff V107
0x2bb: V276 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d0: V277 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2d3: V278 = AND V269 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x2d7: V279 = OR V278 V275
0x2db: S[0x0] = V279
0x2dc: V280 = 0x1
0x2df: V281 = S[0x1]
0x2e2: V282 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V281
0x2e4: S[0x1] = V282
0x2e7: V283 = AND 0xffffffffffffffffffffffffffffffffffffffff V269
0x2e9: V284 = AND V279 0xffffffffffffffffffffffffffffffffffffffff
0x2eb: V285 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x30c: V286 = 0x40
0x30e: V287 = M[0x40]
0x30f: V288 = 0x40
0x311: V289 = M[0x40]
0x314: V290 = SUB V287 V289
0x316: LOG V289 V290 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V283 V284
0x319: JUMP 0x131
---
Entry stack: [V13, 0x131, V107, 0x0]
Stack pops: 3
Stack additions: []
Exit stack: [V13]

================================

Block 0x31a
[0x31a:0x325]
---
Predecessors: [0x133]
Successors: [0x809]
---
0x31a JUMPDEST
0x31b PUSH1 0x0
0x31d PUSH2 0x271
0x320 DUP3
0x321 CALLVALUE
0x322 PUSH2 0x809
0x325 JUMP
---
0x31a: JUMPDEST 
0x31b: V291 = 0x0
0x31d: V292 = 0x271
0x321: V293 = CALLVALUE
0x322: V294 = 0x809
0x325: JUMP 0x809
---
Entry stack: [V13, 0xfe, V117]
Stack pops: 1
Stack additions: [S0, 0x0, 0x271, S0, V293]
Exit stack: [V13, 0xfe, V117, 0x0, 0x271, V117, V293]

================================

Block 0x326
[0x326:0x33c]
---
Predecessors: [0x152]
Successors: [0x33d, 0x341]
---
0x326 JUMPDEST
0x327 PUSH1 0x0
0x329 SLOAD
0x32a CALLER
0x32b PUSH1 0x1
0x32d PUSH1 0xa0
0x32f PUSH1 0x2
0x331 EXP
0x332 SUB
0x333 SWAP1
0x334 DUP2
0x335 AND
0x336 SWAP2
0x337 AND
0x338 EQ
0x339 PUSH2 0x341
0x33c JUMPI
---
0x326: JUMPDEST 
0x327: V295 = 0x0
0x329: V296 = S[0x0]
0x32a: V297 = CALLER
0x32b: V298 = 0x1
0x32d: V299 = 0xa0
0x32f: V300 = 0x2
0x331: V301 = EXP 0x2 0xa0
0x332: V302 = SUB 0x10000000000000000000000000000000000000000 0x1
0x335: V303 = AND 0xffffffffffffffffffffffffffffffffffffffff V297
0x337: V304 = AND V296 0xffffffffffffffffffffffffffffffffffffffff
0x338: V305 = EQ V304 V303
0x339: V306 = 0x341
0x33c: JUMPI 0x341 V305
---
Entry stack: [V13, 0x131, V131]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x131, V131]

================================

Block 0x33d
[0x33d:0x340]
---
Predecessors: [0x326]
Successors: []
---
0x33d PUSH1 0x0
0x33f DUP1
0x340 REVERT
---
0x33d: V307 = 0x0
0x340: REVERT 0x0 0x0
---
Entry stack: [V13, 0x131, V131]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x131, V131]

================================

Block 0x341
[0x341:0x353]
---
Predecessors: [0x326]
Successors: [0x354, 0x358]
---
0x341 JUMPDEST
0x342 PUSH2 0xdac
0x345 PUSH1 0x1
0x347 PUSH1 0xa0
0x349 PUSH1 0x2
0x34b EXP
0x34c SUB
0x34d DUP3
0x34e AND
0x34f EQ
0x350 PUSH2 0x358
0x353 JUMPI
---
0x341: JUMPDEST 
0x342: V308 = 0xdac
0x345: V309 = 0x1
0x347: V310 = 0xa0
0x349: V311 = 0x2
0x34b: V312 = EXP 0x2 0xa0
0x34c: V313 = SUB 0x10000000000000000000000000000000000000000 0x1
0x34e: V314 = AND V131 0xffffffffffffffffffffffffffffffffffffffff
0x34f: V315 = EQ V314 0xdac
0x350: V316 = 0x358
0x353: JUMPI 0x358 V315
---
Entry stack: [V13, 0x131, V131]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x131, V131]

================================

Block 0x354
[0x354:0x357]
---
Predecessors: [0x341]
Successors: []
---
0x354 PUSH1 0x0
0x356 DUP1
0x357 REVERT
---
0x354: V317 = 0x0
0x357: REVERT 0x0 0x0
---
Entry stack: [V13, 0x131, V131]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x131, V131]

================================

Block 0x358
[0x358:0x3af]
---
Predecessors: [0x341]
Successors: [0x131]
---
0x358 JUMPDEST
0x359 PUSH1 0x0
0x35b DUP1
0x35c SLOAD
0x35d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x372 NOT
0x373 SWAP1
0x374 DUP2
0x375 AND
0x376 SWAP1
0x377 SWAP2
0x378 SSTORE
0x379 PUSH1 0x1
0x37b DUP1
0x37c SLOAD
0x37d SWAP1
0x37e SWAP2
0x37f AND
0x380 SWAP1
0x381 SSTORE
0x382 PUSH32 0x94e8b32e01b9eedfddd778ffbd051a7718cdc14781702884561162dca6f74dbb
0x3a3 PUSH1 0x40
0x3a5 MLOAD
0x3a6 PUSH1 0x40
0x3a8 MLOAD
0x3a9 DUP1
0x3aa SWAP2
0x3ab SUB
0x3ac SWAP1
0x3ad LOG1
0x3ae POP
0x3af JUMP
---
0x358: JUMPDEST 
0x359: V318 = 0x0
0x35c: V319 = S[0x0]
0x35d: V320 = 0xffffffffffffffffffffffffffffffffffffffff
0x372: V321 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x375: V322 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V319
0x378: S[0x0] = V322
0x379: V323 = 0x1
0x37c: V324 = S[0x1]
0x37f: V325 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V324
0x381: S[0x1] = V325
0x382: V326 = 0x94e8b32e01b9eedfddd778ffbd051a7718cdc14781702884561162dca6f74dbb
0x3a3: V327 = 0x40
0x3a5: V328 = M[0x40]
0x3a6: V329 = 0x40
0x3a8: V330 = M[0x40]
0x3ab: V331 = SUB V328 V330
0x3ad: LOG V330 V331 0x94e8b32e01b9eedfddd778ffbd051a7718cdc14781702884561162dca6f74dbb
0x3af: JUMP 0x131
---
Entry stack: [V13, 0x131, V131]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x3b0
[0x3b0:0x3c6]
---
Predecessors: [0x171]
Successors: [0x3c7, 0x3cb]
---
0x3b0 JUMPDEST
0x3b1 PUSH1 0x0
0x3b3 SLOAD
0x3b4 CALLER
0x3b5 PUSH1 0x1
0x3b7 PUSH1 0xa0
0x3b9 PUSH1 0x2
0x3bb EXP
0x3bc SUB
0x3bd SWAP1
0x3be DUP2
0x3bf AND
0x3c0 SWAP2
0x3c1 AND
0x3c2 EQ
0x3c3 PUSH2 0x3cb
0x3c6 JUMPI
---
0x3b0: JUMPDEST 
0x3b1: V332 = 0x0
0x3b3: V333 = S[0x0]
0x3b4: V334 = CALLER
0x3b5: V335 = 0x1
0x3b7: V336 = 0xa0
0x3b9: V337 = 0x2
0x3bb: V338 = EXP 0x2 0xa0
0x3bc: V339 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3bf: V340 = AND 0xffffffffffffffffffffffffffffffffffffffff V334
0x3c1: V341 = AND V333 0xffffffffffffffffffffffffffffffffffffffff
0x3c2: V342 = EQ V341 V340
0x3c3: V343 = 0x3cb
0x3c6: JUMPI 0x3cb V342
---
Entry stack: [V13, 0x131, V145]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x131, V145]

================================

Block 0x3c7
[0x3c7:0x3ca]
---
Predecessors: [0x3b0]
Successors: []
---
0x3c7 PUSH1 0x0
0x3c9 DUP1
0x3ca REVERT
---
0x3c7: V344 = 0x0
0x3ca: REVERT 0x0 0x0
---
Entry stack: [V13, 0x131, V145]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x131, V145]

================================

Block 0x3cb
[0x3cb:0x42d]
---
Predecessors: [0x3b0]
Successors: [0x131]
---
0x3cb JUMPDEST
0x3cc PUSH1 0x1
0x3ce DUP1
0x3cf SLOAD
0x3d0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e5 NOT
0x3e6 AND
0x3e7 PUSH1 0x1
0x3e9 PUSH1 0xa0
0x3eb PUSH1 0x2
0x3ed EXP
0x3ee SUB
0x3ef DUP4
0x3f0 DUP2
0x3f1 AND
0x3f2 SWAP2
0x3f3 SWAP1
0x3f4 SWAP2
0x3f5 OR
0x3f6 SWAP2
0x3f7 DUP3
0x3f8 SWAP1
0x3f9 SSTORE
0x3fa SWAP1
0x3fb DUP2
0x3fc AND
0x3fd SWAP1
0x3fe CALLER
0x3ff AND
0x400 PUSH32 0x13a4b3bc0d5234dd3d87c9f1557d8faefa37986da62c36ba49309e2fb2c9aec4
0x421 PUSH1 0x40
0x423 MLOAD
0x424 PUSH1 0x40
0x426 MLOAD
0x427 DUP1
0x428 SWAP2
0x429 SUB
0x42a SWAP1
0x42b LOG3
0x42c POP
0x42d JUMP
---
0x3cb: JUMPDEST 
0x3cc: V345 = 0x1
0x3cf: V346 = S[0x1]
0x3d0: V347 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e5: V348 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3e6: V349 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V346
0x3e7: V350 = 0x1
0x3e9: V351 = 0xa0
0x3eb: V352 = 0x2
0x3ed: V353 = EXP 0x2 0xa0
0x3ee: V354 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f1: V355 = AND 0xffffffffffffffffffffffffffffffffffffffff V145
0x3f5: V356 = OR V355 V349
0x3f9: S[0x1] = V356
0x3fc: V357 = AND 0xffffffffffffffffffffffffffffffffffffffff V356
0x3fe: V358 = CALLER
0x3ff: V359 = AND V358 0xffffffffffffffffffffffffffffffffffffffff
0x400: V360 = 0x13a4b3bc0d5234dd3d87c9f1557d8faefa37986da62c36ba49309e2fb2c9aec4
0x421: V361 = 0x40
0x423: V362 = M[0x40]
0x424: V363 = 0x40
0x426: V364 = M[0x40]
0x429: V365 = SUB V362 V364
0x42b: LOG V364 V365 0x13a4b3bc0d5234dd3d87c9f1557d8faefa37986da62c36ba49309e2fb2c9aec4 V359 V357
0x42d: JUMP 0x131
---
Entry stack: [V13, 0x131, V145]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x42e
[0x42e:0x447]
---
Predecessors: [0x190]
Successors: [0x448, 0x44c]
---
0x42e JUMPDEST
0x42f PUSH1 0x1
0x431 SLOAD
0x432 PUSH1 0x0
0x434 SWAP1
0x435 CALLER
0x436 PUSH1 0x1
0x438 PUSH1 0xa0
0x43a PUSH1 0x2
0x43c EXP
0x43d SUB
0x43e SWAP1
0x43f DUP2
0x440 AND
0x441 SWAP2
0x442 AND
0x443 EQ
0x444 PUSH2 0x44c
0x447 JUMPI
---
0x42e: JUMPDEST 
0x42f: V366 = 0x1
0x431: V367 = S[0x1]
0x432: V368 = 0x0
0x435: V369 = CALLER
0x436: V370 = 0x1
0x438: V371 = 0xa0
0x43a: V372 = 0x2
0x43c: V373 = EXP 0x2 0xa0
0x43d: V374 = SUB 0x10000000000000000000000000000000000000000 0x1
0x440: V375 = AND 0xffffffffffffffffffffffffffffffffffffffff V369
0x442: V376 = AND V367 0xffffffffffffffffffffffffffffffffffffffff
0x443: V377 = EQ V376 V375
0x444: V378 = 0x44c
0x447: JUMPI 0x44c V377
---
Entry stack: [V13, 0x131]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x131, 0x0]

================================

Block 0x448
[0x448:0x44b]
---
Predecessors: [0x42e]
Successors: []
---
0x448 PUSH1 0x0
0x44a DUP1
0x44b REVERT
---
0x448: V379 = 0x0
0x44b: REVERT 0x0 0x0
---
Entry stack: [V13, 0x131, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x131, 0x0]

================================

Block 0x44c
[0x44c:0x4ba]
---
Predecessors: [0x42e]
Successors: [0x131]
---
0x44c JUMPDEST
0x44d POP
0x44e PUSH1 0x0
0x450 DUP1
0x451 SLOAD
0x452 PUSH1 0x1
0x454 DUP1
0x455 SLOAD
0x456 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x46b NOT
0x46c DUP1
0x46d DUP5
0x46e AND
0x46f PUSH1 0x1
0x471 PUSH1 0xa0
0x473 PUSH1 0x2
0x475 EXP
0x476 SUB
0x477 DUP4
0x478 DUP2
0x479 AND
0x47a SWAP2
0x47b SWAP1
0x47c SWAP2
0x47d OR
0x47e SWAP6
0x47f DUP7
0x480 SWAP1
0x481 SSTORE
0x482 SWAP2
0x483 AND
0x484 SWAP1
0x485 SWAP2
0x486 SSTORE
0x487 SWAP1
0x488 DUP2
0x489 AND
0x48a SWAP2
0x48b AND
0x48c DUP2
0x48d PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x4ae PUSH1 0x40
0x4b0 MLOAD
0x4b1 PUSH1 0x40
0x4b3 MLOAD
0x4b4 DUP1
0x4b5 SWAP2
0x4b6 SUB
0x4b7 SWAP1
0x4b8 LOG3
0x4b9 POP
0x4ba JUMP
---
0x44c: JUMPDEST 
0x44e: V380 = 0x0
0x451: V381 = S[0x0]
0x452: V382 = 0x1
0x455: V383 = S[0x1]
0x456: V384 = 0xffffffffffffffffffffffffffffffffffffffff
0x46b: V385 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x46e: V386 = AND V381 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x46f: V387 = 0x1
0x471: V388 = 0xa0
0x473: V389 = 0x2
0x475: V390 = EXP 0x2 0xa0
0x476: V391 = SUB 0x10000000000000000000000000000000000000000 0x1
0x479: V392 = AND 0xffffffffffffffffffffffffffffffffffffffff V383
0x47d: V393 = OR V392 V386
0x481: S[0x0] = V393
0x483: V394 = AND V383 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x486: S[0x1] = V394
0x489: V395 = AND 0xffffffffffffffffffffffffffffffffffffffff V381
0x48b: V396 = AND V393 0xffffffffffffffffffffffffffffffffffffffff
0x48d: V397 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x4ae: V398 = 0x40
0x4b0: V399 = M[0x40]
0x4b1: V400 = 0x40
0x4b3: V401 = M[0x40]
0x4b6: V402 = SUB V399 V401
0x4b8: LOG V401 V402 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V395 V396
0x4ba: JUMP 0x131
---
Entry stack: [V13, 0x131, 0x0]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x4bb
[0x4bb:0x4d9]
---
Predecessors: [0x1a3]
Successors: [0xfe]
---
0x4bb JUMPDEST
0x4bc PUSH1 0x1
0x4be PUSH1 0xa0
0x4c0 PUSH1 0x2
0x4c2 EXP
0x4c3 SUB
0x4c4 AND
0x4c5 PUSH1 0x0
0x4c7 SWAP1
0x4c8 DUP2
0x4c9 MSTORE
0x4ca PUSH1 0x4
0x4cc PUSH1 0x20
0x4ce MSTORE
0x4cf PUSH1 0x40
0x4d1 SWAP1
0x4d2 SHA3
0x4d3 SLOAD
0x4d4 PUSH1 0xff
0x4d6 AND
0x4d7 ISZERO
0x4d8 SWAP1
0x4d9 JUMP
---
0x4bb: JUMPDEST 
0x4bc: V403 = 0x1
0x4be: V404 = 0xa0
0x4c0: V405 = 0x2
0x4c2: V406 = EXP 0x2 0xa0
0x4c3: V407 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c4: V408 = AND 0xffffffffffffffffffffffffffffffffffffffff V165
0x4c5: V409 = 0x0
0x4c9: M[0x0] = V408
0x4ca: V410 = 0x4
0x4cc: V411 = 0x20
0x4ce: M[0x20] = 0x4
0x4cf: V412 = 0x40
0x4d2: V413 = SHA3 0x0 0x40
0x4d3: V414 = S[V413]
0x4d4: V415 = 0xff
0x4d6: V416 = AND 0xff V414
0x4d7: V417 = ISZERO V416
0x4d9: JUMP 0xfe
---
Entry stack: [V13, 0xfe, V165]
Stack pops: 2
Stack additions: [V417]
Exit stack: [V13, V417]

================================

Block 0x4da
[0x4da:0x4e8]
---
Predecessors: [0x1c2]
Successors: [0xce]
---
0x4da JUMPDEST
0x4db PUSH1 0x0
0x4dd SLOAD
0x4de PUSH1 0x1
0x4e0 PUSH1 0xa0
0x4e2 PUSH1 0x2
0x4e4 EXP
0x4e5 SUB
0x4e6 AND
0x4e7 DUP2
0x4e8 JUMP
---
0x4da: JUMPDEST 
0x4db: V418 = 0x0
0x4dd: V419 = S[0x0]
0x4de: V420 = 0x1
0x4e0: V421 = 0xa0
0x4e2: V422 = 0x2
0x4e4: V423 = EXP 0x2 0xa0
0x4e5: V424 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4e6: V425 = AND 0xffffffffffffffffffffffffffffffffffffffff V419
0x4e8: JUMP 0xce
---
Entry stack: [V13, 0xce]
Stack pops: 1
Stack additions: [S0, V425]
Exit stack: [V13, 0xce, V425]

================================

Block 0x4e9
[0x4e9:0x4f5]
---
Predecessors: [0x1d5]
Successors: [0x84c]
---
0x4e9 JUMPDEST
0x4ea PUSH1 0x0
0x4ec PUSH2 0x4f6
0x4ef DUP5
0x4f0 DUP5
0x4f1 DUP5
0x4f2 PUSH2 0x84c
0x4f5 JUMP
---
0x4e9: JUMPDEST 
0x4ea: V426 = 0x0
0x4ec: V427 = 0x4f6
0x4f2: V428 = 0x84c
0x4f5: JUMP 0x84c
---
Entry stack: [V13, 0xfe, V185, V188, V190]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, 0x4f6, S2, S1, S0]
Exit stack: [V13, 0xfe, V185, V188, V190, 0x0, 0x4f6, V185, V188, V190]

================================

Block 0x4f6
[0x4f6:0x4ff]
---
Predecessors: [0x737]
Successors: [0xfe]
---
0x4f6 JUMPDEST
0x4f7 POP
0x4f8 PUSH1 0x1
0x4fa SWAP4
0x4fb SWAP3
0x4fc POP
0x4fd POP
0x4fe POP
0x4ff JUMP
---
0x4f6: JUMPDEST 
0x4f8: V429 = 0x1
0x4ff: JUMP 0xfe
---
Entry stack: [V13, 0xfe, V185, V188, V190, S0]
Stack pops: 5
Stack additions: [0x1]
Exit stack: [V13, 0x1]

================================

Block 0x500
[0x500:0x51c]
---
Predecessors: [0x1fd]
Successors: [0x51d, 0x530]
---
0x500 JUMPDEST
0x501 PUSH1 0x2
0x503 SLOAD
0x504 PUSH1 0x0
0x506 SWAP1
0x507 DUP2
0x508 SWAP1
0x509 CALLER
0x50a PUSH1 0x1
0x50c PUSH1 0xa0
0x50e PUSH1 0x2
0x510 EXP
0x511 SUB
0x512 SWAP1
0x513 DUP2
0x514 AND
0x515 SWAP2
0x516 AND
0x517 EQ
0x518 DUP1
0x519 PUSH2 0x530
0x51c JUMPI
---
0x500: JUMPDEST 
0x501: V430 = 0x2
0x503: V431 = S[0x2]
0x504: V432 = 0x0
0x509: V433 = CALLER
0x50a: V434 = 0x1
0x50c: V435 = 0xa0
0x50e: V436 = 0x2
0x510: V437 = EXP 0x2 0xa0
0x511: V438 = SUB 0x10000000000000000000000000000000000000000 0x1
0x514: V439 = AND 0xffffffffffffffffffffffffffffffffffffffff V433
0x516: V440 = AND V431 0xffffffffffffffffffffffffffffffffffffffff
0x517: V441 = EQ V440 V439
0x519: V442 = 0x530
0x51c: JUMPI 0x530 V441
---
Entry stack: [V13, 0x131, V204]
Stack pops: 0
Stack additions: [0x0, 0x0, V441]
Exit stack: [V13, 0x131, V204, 0x0, 0x0, V441]

================================

Block 0x51d
[0x51d:0x52f]
---
Predecessors: [0x500]
Successors: [0x530]
---
0x51d POP
0x51e PUSH1 0x0
0x520 SLOAD
0x521 CALLER
0x522 PUSH1 0x1
0x524 PUSH1 0xa0
0x526 PUSH1 0x2
0x528 EXP
0x529 SUB
0x52a SWAP1
0x52b DUP2
0x52c AND
0x52d SWAP2
0x52e AND
0x52f EQ
---
0x51e: V443 = 0x0
0x520: V444 = S[0x0]
0x521: V445 = CALLER
0x522: V446 = 0x1
0x524: V447 = 0xa0
0x526: V448 = 0x2
0x528: V449 = EXP 0x2 0xa0
0x529: V450 = SUB 0x10000000000000000000000000000000000000000 0x1
0x52c: V451 = AND 0xffffffffffffffffffffffffffffffffffffffff V445
0x52e: V452 = AND V444 0xffffffffffffffffffffffffffffffffffffffff
0x52f: V453 = EQ V452 V451
---
Entry stack: [V13, 0x131, V204, 0x0, 0x0, V441]
Stack pops: 1
Stack additions: [V453]
Exit stack: [V13, 0x131, V204, 0x0, 0x0, V453]

================================

Block 0x530
[0x530:0x536]
---
Predecessors: [0x500, 0x51d]
Successors: [0x537, 0x53b]
---
0x530 JUMPDEST
0x531 ISZERO
0x532 ISZERO
0x533 PUSH2 0x53b
0x536 JUMPI
---
0x530: JUMPDEST 
0x531: V454 = ISZERO S0
0x532: V455 = ISZERO V454
0x533: V456 = 0x53b
0x536: JUMPI 0x53b V455
---
Entry stack: [V13, 0x131, V204, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x131, V204, 0x0, 0x0]

================================

Block 0x537
[0x537:0x53a]
---
Predecessors: [0x530]
Successors: []
---
0x537 PUSH1 0x0
0x539 DUP1
0x53a REVERT
---
0x537: V457 = 0x0
0x53a: REVERT 0x0 0x0
---
Entry stack: [V13, 0x131, V204, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x131, V204, 0x0, 0x0]

================================

Block 0x53b
[0x53b:0x55c]
---
Predecessors: [0x530]
Successors: [0x55d, 0x561]
---
0x53b JUMPDEST
0x53c PUSH1 0x1
0x53e PUSH1 0xa0
0x540 PUSH1 0x2
0x542 EXP
0x543 SUB
0x544 DUP4
0x545 AND
0x546 PUSH1 0x0
0x548 SWAP1
0x549 DUP2
0x54a MSTORE
0x54b PUSH1 0x4
0x54d PUSH1 0x20
0x54f MSTORE
0x550 PUSH1 0x40
0x552 SWAP1
0x553 SHA3
0x554 SLOAD
0x555 PUSH1 0xff
0x557 AND
0x558 ISZERO
0x559 PUSH2 0x561
0x55c JUMPI
---
0x53b: JUMPDEST 
0x53c: V458 = 0x1
0x53e: V459 = 0xa0
0x540: V460 = 0x2
0x542: V461 = EXP 0x2 0xa0
0x543: V462 = SUB 0x10000000000000000000000000000000000000000 0x1
0x545: V463 = AND V204 0xffffffffffffffffffffffffffffffffffffffff
0x546: V464 = 0x0
0x54a: M[0x0] = V463
0x54b: V465 = 0x4
0x54d: V466 = 0x20
0x54f: M[0x20] = 0x4
0x550: V467 = 0x40
0x553: V468 = SHA3 0x0 0x40
0x554: V469 = S[V468]
0x555: V470 = 0xff
0x557: V471 = AND 0xff V469
0x558: V472 = ISZERO V471
0x559: V473 = 0x561
0x55c: JUMPI 0x561 V472
---
Entry stack: [V13, 0x131, V204, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x131, V204, 0x0, 0x0]

================================

Block 0x55d
[0x55d:0x560]
---
Predecessors: [0x53b]
Successors: []
---
0x55d PUSH1 0x0
0x55f DUP1
0x560 REVERT
---
0x55d: V474 = 0x0
0x560: REVERT 0x0 0x0
---
Entry stack: [V13, 0x131, V204, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x131, V204, 0x0, 0x0]

================================

Block 0x561
[0x561:0x571]
---
Predecessors: [0x53b]
Successors: [0x572, 0x5f3]
---
0x561 JUMPDEST
0x562 PUSH1 0x1
0x564 PUSH1 0xa0
0x566 PUSH1 0x2
0x568 EXP
0x569 SUB
0x56a DUP4
0x56b AND
0x56c ISZERO
0x56d ISZERO
0x56e PUSH2 0x5f3
0x571 JUMPI
---
0x561: JUMPDEST 
0x562: V475 = 0x1
0x564: V476 = 0xa0
0x566: V477 = 0x2
0x568: V478 = EXP 0x2 0xa0
0x569: V479 = SUB 0x10000000000000000000000000000000000000000 0x1
0x56b: V480 = AND V204 0xffffffffffffffffffffffffffffffffffffffff
0x56c: V481 = ISZERO V480
0x56d: V482 = ISZERO V481
0x56e: V483 = 0x5f3
0x571: JUMPI 0x5f3 V482
---
Entry stack: [V13, 0x131, V204, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x131, V204, 0x0, 0x0]

================================

Block 0x572
[0x572:0x5a5]
---
Predecessors: [0x561]
Successors: [0x5a6, 0x5aa]
---
0x572 PUSH1 0x3
0x574 SLOAD
0x575 PUSH1 0x1
0x577 PUSH1 0xa0
0x579 PUSH1 0x2
0x57b EXP
0x57c SUB
0x57d ADDRESS
0x57e DUP2
0x57f AND
0x580 BALANCE
0x581 SWAP4
0x582 POP
0x583 AND
0x584 DUP3
0x585 ISZERO
0x586 PUSH2 0x8fc
0x589 MUL
0x58a DUP4
0x58b PUSH1 0x40
0x58d MLOAD
0x58e PUSH1 0x0
0x590 PUSH1 0x40
0x592 MLOAD
0x593 DUP1
0x594 DUP4
0x595 SUB
0x596 DUP2
0x597 DUP6
0x598 DUP9
0x599 DUP9
0x59a CALL
0x59b SWAP4
0x59c POP
0x59d POP
0x59e POP
0x59f POP
0x5a0 ISZERO
0x5a1 ISZERO
0x5a2 PUSH2 0x5aa
0x5a5 JUMPI
---
0x572: V484 = 0x3
0x574: V485 = S[0x3]
0x575: V486 = 0x1
0x577: V487 = 0xa0
0x579: V488 = 0x2
0x57b: V489 = EXP 0x2 0xa0
0x57c: V490 = SUB 0x10000000000000000000000000000000000000000 0x1
0x57d: V491 = ADDRESS
0x57f: V492 = AND 0xffffffffffffffffffffffffffffffffffffffff V491
0x580: V493 = BALANCE V492
0x583: V494 = AND 0xffffffffffffffffffffffffffffffffffffffff V485
0x585: V495 = ISZERO V493
0x586: V496 = 0x8fc
0x589: V497 = MUL 0x8fc V495
0x58b: V498 = 0x40
0x58d: V499 = M[0x40]
0x58e: V500 = 0x0
0x590: V501 = 0x40
0x592: V502 = M[0x40]
0x595: V503 = SUB V499 V502
0x59a: V504 = CALL V497 V494 V493 V502 V503 V502 0x0
0x5a0: V505 = ISZERO V504
0x5a1: V506 = ISZERO V505
0x5a2: V507 = 0x5aa
0x5a5: JUMPI 0x5aa V506
---
Entry stack: [V13, 0x131, V204, 0x0, 0x0]
Stack pops: 2
Stack additions: [V493, S0]
Exit stack: [V13, 0x131, V204, V493, 0x0]

================================

Block 0x5a6
[0x5a6:0x5a9]
---
Predecessors: [0x572]
Successors: []
---
0x5a6 PUSH1 0x0
0x5a8 DUP1
0x5a9 REVERT
---
0x5a6: V508 = 0x0
0x5a9: REVERT 0x0 0x0
---
Entry stack: [V13, 0x131, V204, V493, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x131, V204, V493, 0x0]

================================

Block 0x5aa
[0x5aa:0x5f2]
---
Predecessors: [0x572]
Successors: [0x737]
---
0x5aa JUMPDEST
0x5ab PUSH32 0xa50dde912fa22ea0d215a0236093ac45b4d55d6ef0c604c319f900029c5d10f2
0x5cc DUP4
0x5cd DUP4
0x5ce PUSH1 0x40
0x5d0 MLOAD
0x5d1 PUSH1 0x1
0x5d3 PUSH1 0xa0
0x5d5 PUSH1 0x2
0x5d7 EXP
0x5d8 SUB
0x5d9 SWAP1
0x5da SWAP3
0x5db AND
0x5dc DUP3
0x5dd MSTORE
0x5de PUSH1 0x20
0x5e0 DUP3
0x5e1 ADD
0x5e2 MSTORE
0x5e3 PUSH1 0x40
0x5e5 SWAP1
0x5e6 DUP2
0x5e7 ADD
0x5e8 SWAP1
0x5e9 MLOAD
0x5ea DUP1
0x5eb SWAP2
0x5ec SUB
0x5ed SWAP1
0x5ee LOG1
0x5ef PUSH2 0x737
0x5f2 JUMP
---
0x5aa: JUMPDEST 
0x5ab: V509 = 0xa50dde912fa22ea0d215a0236093ac45b4d55d6ef0c604c319f900029c5d10f2
0x5ce: V510 = 0x40
0x5d0: V511 = M[0x40]
0x5d1: V512 = 0x1
0x5d3: V513 = 0xa0
0x5d5: V514 = 0x2
0x5d7: V515 = EXP 0x2 0xa0
0x5d8: V516 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5db: V517 = AND V204 0xffffffffffffffffffffffffffffffffffffffff
0x5dd: M[V511] = V517
0x5de: V518 = 0x20
0x5e1: V519 = ADD V511 0x20
0x5e2: M[V519] = V493
0x5e3: V520 = 0x40
0x5e7: V521 = ADD 0x40 V511
0x5e9: V522 = M[0x40]
0x5ec: V523 = SUB V521 V522
0x5ee: LOG V522 V523 0xa50dde912fa22ea0d215a0236093ac45b4d55d6ef0c604c319f900029c5d10f2
0x5ef: V524 = 0x737
0x5f2: JUMP 0x737
---
Entry stack: [V13, 0x131, V204, V493, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x131, V204, V493, 0x0]

================================

Block 0x5f3
[0x5f3:0x647]
---
Predecessors: [0x561]
Successors: [0x648, 0x64c]
---
0x5f3 JUMPDEST
0x5f4 POP
0x5f5 DUP2
0x5f6 PUSH1 0x1
0x5f8 PUSH1 0xa0
0x5fa PUSH1 0x2
0x5fc EXP
0x5fd SUB
0x5fe DUP2
0x5ff AND
0x600 PUSH4 0x70a08231
0x605 ADDRESS
0x606 PUSH1 0x0
0x608 PUSH1 0x40
0x60a MLOAD
0x60b PUSH1 0x20
0x60d ADD
0x60e MSTORE
0x60f PUSH1 0x40
0x611 MLOAD
0x612 PUSH1 0xe0
0x614 PUSH1 0x2
0x616 EXP
0x617 PUSH4 0xffffffff
0x61c DUP5
0x61d AND
0x61e MUL
0x61f DUP2
0x620 MSTORE
0x621 PUSH1 0x1
0x623 PUSH1 0xa0
0x625 PUSH1 0x2
0x627 EXP
0x628 SUB
0x629 SWAP1
0x62a SWAP2
0x62b AND
0x62c PUSH1 0x4
0x62e DUP3
0x62f ADD
0x630 MSTORE
0x631 PUSH1 0x24
0x633 ADD
0x634 PUSH1 0x20
0x636 PUSH1 0x40
0x638 MLOAD
0x639 DUP1
0x63a DUP4
0x63b SUB
0x63c DUP2
0x63d PUSH1 0x0
0x63f DUP8
0x640 DUP1
0x641 EXTCODESIZE
0x642 ISZERO
0x643 ISZERO
0x644 PUSH2 0x64c
0x647 JUMPI
---
0x5f3: JUMPDEST 
0x5f6: V525 = 0x1
0x5f8: V526 = 0xa0
0x5fa: V527 = 0x2
0x5fc: V528 = EXP 0x2 0xa0
0x5fd: V529 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ff: V530 = AND V204 0xffffffffffffffffffffffffffffffffffffffff
0x600: V531 = 0x70a08231
0x605: V532 = ADDRESS
0x606: V533 = 0x0
0x608: V534 = 0x40
0x60a: V535 = M[0x40]
0x60b: V536 = 0x20
0x60d: V537 = ADD 0x20 V535
0x60e: M[V537] = 0x0
0x60f: V538 = 0x40
0x611: V539 = M[0x40]
0x612: V540 = 0xe0
0x614: V541 = 0x2
0x616: V542 = EXP 0x2 0xe0
0x617: V543 = 0xffffffff
0x61d: V544 = AND 0x70a08231 0xffffffff
0x61e: V545 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x620: M[V539] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x621: V546 = 0x1
0x623: V547 = 0xa0
0x625: V548 = 0x2
0x627: V549 = EXP 0x2 0xa0
0x628: V550 = SUB 0x10000000000000000000000000000000000000000 0x1
0x62b: V551 = AND V532 0xffffffffffffffffffffffffffffffffffffffff
0x62c: V552 = 0x4
0x62f: V553 = ADD V539 0x4
0x630: M[V553] = V551
0x631: V554 = 0x24
0x633: V555 = ADD 0x24 V539
0x634: V556 = 0x20
0x636: V557 = 0x40
0x638: V558 = M[0x40]
0x63b: V559 = SUB V555 V558
0x63d: V560 = 0x0
0x641: V561 = EXTCODESIZE V530
0x642: V562 = ISZERO V561
0x643: V563 = ISZERO V562
0x644: V564 = 0x64c
0x647: JUMPI 0x64c V563
---
Entry stack: [V13, 0x131, V204, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S2, V530, 0x70a08231, V555, 0x20, V558, V559, V558, 0x0, V530]
Exit stack: [V13, 0x131, V204, 0x0, V204, V530, 0x70a08231, V555, 0x20, V558, V559, V558, 0x0, V530]

================================

Block 0x648
[0x648:0x64b]
---
Predecessors: [0x5f3]
Successors: []
---
0x648 PUSH1 0x0
0x64a DUP1
0x64b REVERT
---
0x648: V565 = 0x0
0x64b: REVERT 0x0 0x0
---
Entry stack: [V13, 0x131, V204, 0x0, V204, V530, 0x70a08231, V555, 0x20, V558, V559, V558, 0x0, V530]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x131, V204, 0x0, V204, V530, 0x70a08231, V555, 0x20, V558, V559, V558, 0x0, V530]

================================

Block 0x64c
[0x64c:0x658]
---
Predecessors: [0x5f3]
Successors: [0x659, 0x65d]
---
0x64c JUMPDEST
0x64d PUSH2 0x2c6
0x650 GAS
0x651 SUB
0x652 CALL
0x653 ISZERO
0x654 ISZERO
0x655 PUSH2 0x65d
0x658 JUMPI
---
0x64c: JUMPDEST 
0x64d: V566 = 0x2c6
0x650: V567 = GAS
0x651: V568 = SUB V567 0x2c6
0x652: V569 = CALL V568 V530 0x0 V558 V559 V558 0x20
0x653: V570 = ISZERO V569
0x654: V571 = ISZERO V570
0x655: V572 = 0x65d
0x658: JUMPI 0x65d V571
---
Entry stack: [V13, 0x131, V204, 0x0, V204, V530, 0x70a08231, V555, 0x20, V558, V559, V558, 0x0, V530]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x131, V204, 0x0, V204, V530, 0x70a08231, V555]

================================

Block 0x659
[0x659:0x65c]
---
Predecessors: [0x64c]
Successors: []
---
0x659 PUSH1 0x0
0x65b DUP1
0x65c REVERT
---
0x659: V573 = 0x0
0x65c: REVERT 0x0 0x0
---
Entry stack: [V13, 0x131, V204, 0x0, V204, V530, 0x70a08231, V555]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x131, V204, 0x0, V204, V530, 0x70a08231, V555]

================================

Block 0x65d
[0x65d:0x6c7]
---
Predecessors: [0x64c]
Successors: [0x6c8, 0x6cc]
---
0x65d JUMPDEST
0x65e POP
0x65f POP
0x660 POP
0x661 PUSH1 0x40
0x663 MLOAD
0x664 DUP1
0x665 MLOAD
0x666 PUSH1 0x3
0x668 SLOAD
0x669 SWAP1
0x66a SWAP4
0x66b POP
0x66c PUSH1 0x1
0x66e PUSH1 0xa0
0x670 PUSH1 0x2
0x672 EXP
0x673 SUB
0x674 DUP1
0x675 DUP5
0x676 AND
0x677 SWAP3
0x678 POP
0x679 PUSH4 0xa9059cbb
0x67e SWAP2
0x67f AND
0x680 DUP5
0x681 PUSH1 0x0
0x683 PUSH1 0x40
0x685 MLOAD
0x686 PUSH1 0x20
0x688 ADD
0x689 MSTORE
0x68a PUSH1 0x40
0x68c MLOAD
0x68d PUSH1 0xe0
0x68f PUSH1 0x2
0x691 EXP
0x692 PUSH4 0xffffffff
0x697 DUP6
0x698 AND
0x699 MUL
0x69a DUP2
0x69b MSTORE
0x69c PUSH1 0x1
0x69e PUSH1 0xa0
0x6a0 PUSH1 0x2
0x6a2 EXP
0x6a3 SUB
0x6a4 SWAP1
0x6a5 SWAP3
0x6a6 AND
0x6a7 PUSH1 0x4
0x6a9 DUP4
0x6aa ADD
0x6ab MSTORE
0x6ac PUSH1 0x24
0x6ae DUP3
0x6af ADD
0x6b0 MSTORE
0x6b1 PUSH1 0x44
0x6b3 ADD
0x6b4 PUSH1 0x20
0x6b6 PUSH1 0x40
0x6b8 MLOAD
0x6b9 DUP1
0x6ba DUP4
0x6bb SUB
0x6bc DUP2
0x6bd PUSH1 0x0
0x6bf DUP8
0x6c0 DUP1
0x6c1 EXTCODESIZE
0x6c2 ISZERO
0x6c3 ISZERO
0x6c4 PUSH2 0x6cc
0x6c7 JUMPI
---
0x65d: JUMPDEST 
0x661: V574 = 0x40
0x663: V575 = M[0x40]
0x665: V576 = M[V575]
0x666: V577 = 0x3
0x668: V578 = S[0x3]
0x66c: V579 = 0x1
0x66e: V580 = 0xa0
0x670: V581 = 0x2
0x672: V582 = EXP 0x2 0xa0
0x673: V583 = SUB 0x10000000000000000000000000000000000000000 0x1
0x676: V584 = AND V204 0xffffffffffffffffffffffffffffffffffffffff
0x679: V585 = 0xa9059cbb
0x67f: V586 = AND V578 0xffffffffffffffffffffffffffffffffffffffff
0x681: V587 = 0x0
0x683: V588 = 0x40
0x685: V589 = M[0x40]
0x686: V590 = 0x20
0x688: V591 = ADD 0x20 V589
0x689: M[V591] = 0x0
0x68a: V592 = 0x40
0x68c: V593 = M[0x40]
0x68d: V594 = 0xe0
0x68f: V595 = 0x2
0x691: V596 = EXP 0x2 0xe0
0x692: V597 = 0xffffffff
0x698: V598 = AND 0xa9059cbb 0xffffffff
0x699: V599 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x69b: M[V593] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x69c: V600 = 0x1
0x69e: V601 = 0xa0
0x6a0: V602 = 0x2
0x6a2: V603 = EXP 0x2 0xa0
0x6a3: V604 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6a6: V605 = AND V586 0xffffffffffffffffffffffffffffffffffffffff
0x6a7: V606 = 0x4
0x6aa: V607 = ADD V593 0x4
0x6ab: M[V607] = V605
0x6ac: V608 = 0x24
0x6af: V609 = ADD V593 0x24
0x6b0: M[V609] = V576
0x6b1: V610 = 0x44
0x6b3: V611 = ADD 0x44 V593
0x6b4: V612 = 0x20
0x6b6: V613 = 0x40
0x6b8: V614 = M[0x40]
0x6bb: V615 = SUB V611 V614
0x6bd: V616 = 0x0
0x6c1: V617 = EXTCODESIZE V584
0x6c2: V618 = ISZERO V617
0x6c3: V619 = ISZERO V618
0x6c4: V620 = 0x6cc
0x6c7: JUMPI 0x6cc V619
---
Entry stack: [V13, 0x131, V204, 0x0, V204, V530, 0x70a08231, V555]
Stack pops: 5
Stack additions: [V576, S3, V584, 0xa9059cbb, V611, 0x20, V614, V615, V614, 0x0, V584]
Exit stack: [V13, 0x131, V204, V576, V204, V584, 0xa9059cbb, V611, 0x20, V614, V615, V614, 0x0, V584]

================================

Block 0x6c8
[0x6c8:0x6cb]
---
Predecessors: [0x65d]
Successors: []
---
0x6c8 PUSH1 0x0
0x6ca DUP1
0x6cb REVERT
---
0x6c8: V621 = 0x0
0x6cb: REVERT 0x0 0x0
---
Entry stack: [V13, 0x131, V204, V576, V204, V584, 0xa9059cbb, V611, 0x20, V614, V615, V614, 0x0, V584]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x131, V204, V576, V204, V584, 0xa9059cbb, V611, 0x20, V614, V615, V614, 0x0, V584]

================================

Block 0x6cc
[0x6cc:0x6d8]
---
Predecessors: [0x65d]
Successors: [0x6d9, 0x6dd]
---
0x6cc JUMPDEST
0x6cd PUSH2 0x2c6
0x6d0 GAS
0x6d1 SUB
0x6d2 CALL
0x6d3 ISZERO
0x6d4 ISZERO
0x6d5 PUSH2 0x6dd
0x6d8 JUMPI
---
0x6cc: JUMPDEST 
0x6cd: V622 = 0x2c6
0x6d0: V623 = GAS
0x6d1: V624 = SUB V623 0x2c6
0x6d2: V625 = CALL V624 V584 0x0 V614 V615 V614 0x20
0x6d3: V626 = ISZERO V625
0x6d4: V627 = ISZERO V626
0x6d5: V628 = 0x6dd
0x6d8: JUMPI 0x6dd V627
---
Entry stack: [V13, 0x131, V204, V576, V204, V584, 0xa9059cbb, V611, 0x20, V614, V615, V614, 0x0, V584]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x131, V204, V576, V204, V584, 0xa9059cbb, V611]

================================

Block 0x6d9
[0x6d9:0x6dc]
---
Predecessors: [0x6cc]
Successors: []
---
0x6d9 PUSH1 0x0
0x6db DUP1
0x6dc REVERT
---
0x6d9: V629 = 0x0
0x6dc: REVERT 0x0 0x0
---
Entry stack: [V13, 0x131, V204, V576, V204, V584, 0xa9059cbb, V611]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x131, V204, V576, V204, V584, 0xa9059cbb, V611]

================================

Block 0x6dd
[0x6dd:0x6ed]
---
Predecessors: [0x6cc]
Successors: [0x6ee, 0x6f2]
---
0x6dd JUMPDEST
0x6de POP
0x6df POP
0x6e0 POP
0x6e1 PUSH1 0x40
0x6e3 MLOAD
0x6e4 DUP1
0x6e5 MLOAD
0x6e6 SWAP1
0x6e7 POP
0x6e8 ISZERO
0x6e9 ISZERO
0x6ea PUSH2 0x6f2
0x6ed JUMPI
---
0x6dd: JUMPDEST 
0x6e1: V630 = 0x40
0x6e3: V631 = M[0x40]
0x6e5: V632 = M[V631]
0x6e8: V633 = ISZERO V632
0x6e9: V634 = ISZERO V633
0x6ea: V635 = 0x6f2
0x6ed: JUMPI 0x6f2 V634
---
Entry stack: [V13, 0x131, V204, V576, V204, V584, 0xa9059cbb, V611]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0x131, V204, V576, V204]

================================

Block 0x6ee
[0x6ee:0x6f1]
---
Predecessors: [0x6dd]
Successors: []
---
0x6ee PUSH1 0x0
0x6f0 DUP1
0x6f1 REVERT
---
0x6ee: V636 = 0x0
0x6f1: REVERT 0x0 0x0
---
Entry stack: [V13, 0x131, V204, V576, V204]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x131, V204, V576, V204]

================================

Block 0x6f2
[0x6f2:0x736]
---
Predecessors: [0x6dd]
Successors: [0x737]
---
0x6f2 JUMPDEST
0x6f3 PUSH32 0xa50dde912fa22ea0d215a0236093ac45b4d55d6ef0c604c319f900029c5d10f2
0x714 DUP4
0x715 DUP4
0x716 PUSH1 0x40
0x718 MLOAD
0x719 PUSH1 0x1
0x71b PUSH1 0xa0
0x71d PUSH1 0x2
0x71f EXP
0x720 SUB
0x721 SWAP1
0x722 SWAP3
0x723 AND
0x724 DUP3
0x725 MSTORE
0x726 PUSH1 0x20
0x728 DUP3
0x729 ADD
0x72a MSTORE
0x72b PUSH1 0x40
0x72d SWAP1
0x72e DUP2
0x72f ADD
0x730 SWAP1
0x731 MLOAD
0x732 DUP1
0x733 SWAP2
0x734 SUB
0x735 SWAP1
0x736 LOG1
---
0x6f2: JUMPDEST 
0x6f3: V637 = 0xa50dde912fa22ea0d215a0236093ac45b4d55d6ef0c604c319f900029c5d10f2
0x716: V638 = 0x40
0x718: V639 = M[0x40]
0x719: V640 = 0x1
0x71b: V641 = 0xa0
0x71d: V642 = 0x2
0x71f: V643 = EXP 0x2 0xa0
0x720: V644 = SUB 0x10000000000000000000000000000000000000000 0x1
0x723: V645 = AND V204 0xffffffffffffffffffffffffffffffffffffffff
0x725: M[V639] = V645
0x726: V646 = 0x20
0x729: V647 = ADD V639 0x20
0x72a: M[V647] = V576
0x72b: V648 = 0x40
0x72f: V649 = ADD 0x40 V639
0x731: V650 = M[0x40]
0x734: V651 = SUB V649 V650
0x736: LOG V650 V651 0xa50dde912fa22ea0d215a0236093ac45b4d55d6ef0c604c319f900029c5d10f2
---
Entry stack: [V13, 0x131, V204, V576, V204]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x131, V204, V576, V204]

================================

Block 0x737
[0x737:0x73b]
---
Predecessors: [0x5aa, 0x6f2, 0x8dc]
Successors: [0x131, 0x4f6]
---
0x737 JUMPDEST
0x738 POP
0x739 POP
0x73a POP
0x73b JUMP
---
0x737: JUMPDEST 
0x73b: JUMP {0x131, 0x4f6}
---
Entry stack: [V13, 0xfe, V185, V188, V190, S4, {0x131, 0x4f6}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V13, 0xfe, V185, V188, V190, S4]

================================

Block 0x73c
[0x73c:0x74a]
---
Predecessors: [0x21c]
Successors: [0xce]
---
0x73c JUMPDEST
0x73d PUSH1 0x1
0x73f SLOAD
0x740 PUSH1 0x1
0x742 PUSH1 0xa0
0x744 PUSH1 0x2
0x746 EXP
0x747 SUB
0x748 AND
0x749 DUP2
0x74a JUMP
---
0x73c: JUMPDEST 
0x73d: V652 = 0x1
0x73f: V653 = S[0x1]
0x740: V654 = 0x1
0x742: V655 = 0xa0
0x744: V656 = 0x2
0x746: V657 = EXP 0x2 0xa0
0x747: V658 = SUB 0x10000000000000000000000000000000000000000 0x1
0x748: V659 = AND 0xffffffffffffffffffffffffffffffffffffffff V653
0x74a: JUMP 0xce
---
Entry stack: [V13, 0xce]
Stack pops: 1
Stack additions: [S0, V659]
Exit stack: [V13, 0xce, V659]

================================

Block 0x74b
[0x74b:0x762]
---
Predecessors: [0x22f]
Successors: [0x763, 0x776]
---
0x74b JUMPDEST
0x74c PUSH1 0x2
0x74e SLOAD
0x74f CALLER
0x750 PUSH1 0x1
0x752 PUSH1 0xa0
0x754 PUSH1 0x2
0x756 EXP
0x757 SUB
0x758 SWAP1
0x759 DUP2
0x75a AND
0x75b SWAP2
0x75c AND
0x75d EQ
0x75e DUP1
0x75f PUSH2 0x776
0x762 JUMPI
---
0x74b: JUMPDEST 
0x74c: V660 = 0x2
0x74e: V661 = S[0x2]
0x74f: V662 = CALLER
0x750: V663 = 0x1
0x752: V664 = 0xa0
0x754: V665 = 0x2
0x756: V666 = EXP 0x2 0xa0
0x757: V667 = SUB 0x10000000000000000000000000000000000000000 0x1
0x75a: V668 = AND 0xffffffffffffffffffffffffffffffffffffffff V662
0x75c: V669 = AND V661 0xffffffffffffffffffffffffffffffffffffffff
0x75d: V670 = EQ V669 V668
0x75f: V671 = 0x776
0x762: JUMPI 0x776 V670
---
Entry stack: [V13, 0x131, V224]
Stack pops: 0
Stack additions: [V670]
Exit stack: [V13, 0x131, V224, V670]

================================

Block 0x763
[0x763:0x775]
---
Predecessors: [0x74b]
Successors: [0x776]
---
0x763 POP
0x764 PUSH1 0x0
0x766 SLOAD
0x767 CALLER
0x768 PUSH1 0x1
0x76a PUSH1 0xa0
0x76c PUSH1 0x2
0x76e EXP
0x76f SUB
0x770 SWAP1
0x771 DUP2
0x772 AND
0x773 SWAP2
0x774 AND
0x775 EQ
---
0x764: V672 = 0x0
0x766: V673 = S[0x0]
0x767: V674 = CALLER
0x768: V675 = 0x1
0x76a: V676 = 0xa0
0x76c: V677 = 0x2
0x76e: V678 = EXP 0x2 0xa0
0x76f: V679 = SUB 0x10000000000000000000000000000000000000000 0x1
0x772: V680 = AND 0xffffffffffffffffffffffffffffffffffffffff V674
0x774: V681 = AND V673 0xffffffffffffffffffffffffffffffffffffffff
0x775: V682 = EQ V681 V680
---
Entry stack: [V13, 0x131, V224, V670]
Stack pops: 1
Stack additions: [V682]
Exit stack: [V13, 0x131, V224, V682]

================================

Block 0x776
[0x776:0x77c]
---
Predecessors: [0x74b, 0x763]
Successors: [0x77d, 0x781]
---
0x776 JUMPDEST
0x777 ISZERO
0x778 ISZERO
0x779 PUSH2 0x781
0x77c JUMPI
---
0x776: JUMPDEST 
0x777: V683 = ISZERO S0
0x778: V684 = ISZERO V683
0x779: V685 = 0x781
0x77c: JUMPI 0x781 V684
---
Entry stack: [V13, 0x131, V224, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x131, V224]

================================

Block 0x77d
[0x77d:0x780]
---
Predecessors: [0x776]
Successors: []
---
0x77d PUSH1 0x0
0x77f DUP1
0x780 REVERT
---
0x77d: V686 = 0x0
0x780: REVERT 0x0 0x0
---
Entry stack: [V13, 0x131, V224]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x131, V224]

================================

Block 0x781
[0x781:0x7af]
---
Predecessors: [0x776]
Successors: [0x131]
---
0x781 JUMPDEST
0x782 PUSH1 0x2
0x784 DUP1
0x785 SLOAD
0x786 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x79b NOT
0x79c AND
0x79d PUSH1 0x1
0x79f PUSH1 0xa0
0x7a1 PUSH1 0x2
0x7a3 EXP
0x7a4 SUB
0x7a5 SWAP3
0x7a6 SWAP1
0x7a7 SWAP3
0x7a8 AND
0x7a9 SWAP2
0x7aa SWAP1
0x7ab SWAP2
0x7ac OR
0x7ad SWAP1
0x7ae SSTORE
0x7af JUMP
---
0x781: JUMPDEST 
0x782: V687 = 0x2
0x785: V688 = S[0x2]
0x786: V689 = 0xffffffffffffffffffffffffffffffffffffffff
0x79b: V690 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x79c: V691 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V688
0x79d: V692 = 0x1
0x79f: V693 = 0xa0
0x7a1: V694 = 0x2
0x7a3: V695 = EXP 0x2 0xa0
0x7a4: V696 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7a8: V697 = AND 0xffffffffffffffffffffffffffffffffffffffff V224
0x7ac: V698 = OR V697 V691
0x7ae: S[0x2] = V698
0x7af: JUMP 0x131
---
Entry stack: [V13, 0x131, V224]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x7b0
[0x7b0:0x7be]
---
Predecessors: [0x24e]
Successors: [0xce]
---
0x7b0 JUMPDEST
0x7b1 PUSH1 0x3
0x7b3 SLOAD
0x7b4 PUSH1 0x1
0x7b6 PUSH1 0xa0
0x7b8 PUSH1 0x2
0x7ba EXP
0x7bb SUB
0x7bc AND
0x7bd DUP2
0x7be JUMP
---
0x7b0: JUMPDEST 
0x7b1: V699 = 0x3
0x7b3: V700 = S[0x3]
0x7b4: V701 = 0x1
0x7b6: V702 = 0xa0
0x7b8: V703 = 0x2
0x7ba: V704 = EXP 0x2 0xa0
0x7bb: V705 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7bc: V706 = AND 0xffffffffffffffffffffffffffffffffffffffff V700
0x7be: JUMP 0xce
---
Entry stack: [V13, 0xce]
Stack pops: 1
Stack additions: [S0, V706]
Exit stack: [V13, 0xce, V706]

================================

Block 0x7bf
[0x7bf:0x7cf]
---
Predecessors: [0x265]
Successors: [0x7d0, 0x7d4]
---
0x7bf JUMPDEST
0x7c0 PUSH1 0x1
0x7c2 PUSH1 0xa0
0x7c4 PUSH1 0x2
0x7c6 EXP
0x7c7 SUB
0x7c8 DUP3
0x7c9 AND
0x7ca ISZERO
0x7cb ISZERO
0x7cc PUSH2 0x7d4
0x7cf JUMPI
---
0x7bf: JUMPDEST 
0x7c0: V707 = 0x1
0x7c2: V708 = 0xa0
0x7c4: V709 = 0x2
0x7c6: V710 = EXP 0x2 0xa0
0x7c7: V711 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7c9: V712 = AND V84 0xffffffffffffffffffffffffffffffffffffffff
0x7ca: V713 = ISZERO V712
0x7cb: V714 = ISZERO V713
0x7cc: V715 = 0x7d4
0x7cf: JUMPI 0x7d4 V714
---
Entry stack: [V13, 0xfe, V84, 0x0, 0x271, V84, V242]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0xfe, V84, 0x0, 0x271, V84, V242]

================================

Block 0x7d0
[0x7d0:0x7d3]
---
Predecessors: [0x7bf]
Successors: []
---
0x7d0 PUSH1 0x0
0x7d2 DUP1
0x7d3 REVERT
---
0x7d0: V716 = 0x0
0x7d3: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfe, V84, 0x0, 0x271, V84, V242]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfe, V84, 0x0, 0x271, V84, V242]

================================

Block 0x7d4
[0x7d4:0x800]
---
Predecessors: [0x7bf]
Successors: [0x801, 0x805]
---
0x7d4 JUMPDEST
0x7d5 PUSH1 0x1
0x7d7 PUSH1 0xa0
0x7d9 PUSH1 0x2
0x7db EXP
0x7dc SUB
0x7dd DUP3
0x7de AND
0x7df DUP2
0x7e0 ISZERO
0x7e1 PUSH2 0x8fc
0x7e4 MUL
0x7e5 DUP3
0x7e6 PUSH1 0x40
0x7e8 MLOAD
0x7e9 PUSH1 0x0
0x7eb PUSH1 0x40
0x7ed MLOAD
0x7ee DUP1
0x7ef DUP4
0x7f0 SUB
0x7f1 DUP2
0x7f2 DUP6
0x7f3 DUP9
0x7f4 DUP9
0x7f5 CALL
0x7f6 SWAP4
0x7f7 POP
0x7f8 POP
0x7f9 POP
0x7fa POP
0x7fb ISZERO
0x7fc ISZERO
0x7fd PUSH2 0x805
0x800 JUMPI
---
0x7d4: JUMPDEST 
0x7d5: V717 = 0x1
0x7d7: V718 = 0xa0
0x7d9: V719 = 0x2
0x7db: V720 = EXP 0x2 0xa0
0x7dc: V721 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7de: V722 = AND V84 0xffffffffffffffffffffffffffffffffffffffff
0x7e0: V723 = ISZERO V242
0x7e1: V724 = 0x8fc
0x7e4: V725 = MUL 0x8fc V723
0x7e6: V726 = 0x40
0x7e8: V727 = M[0x40]
0x7e9: V728 = 0x0
0x7eb: V729 = 0x40
0x7ed: V730 = M[0x40]
0x7f0: V731 = SUB V727 V730
0x7f5: V732 = CALL V725 V722 V242 V730 V731 V730 0x0
0x7fb: V733 = ISZERO V732
0x7fc: V734 = ISZERO V733
0x7fd: V735 = 0x805
0x800: JUMPI 0x805 V734
---
Entry stack: [V13, 0xfe, V84, 0x0, 0x271, V84, V242]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0xfe, V84, 0x0, 0x271, V84, V242]

================================

Block 0x801
[0x801:0x804]
---
Predecessors: [0x7d4]
Successors: []
---
0x801 PUSH1 0x0
0x803 DUP1
0x804 REVERT
---
0x801: V736 = 0x0
0x804: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfe, V84, 0x0, 0x271, V84, V242]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfe, V84, 0x0, 0x271, V84, V242]

================================

Block 0x805
[0x805:0x808]
---
Predecessors: [0x7d4, 0x81e]
Successors: [0x271]
---
0x805 JUMPDEST
0x806 POP
0x807 POP
0x808 JUMP
---
0x805: JUMPDEST 
0x808: JUMP 0x271
---
Entry stack: [V13, 0xfe, S4, 0x0, 0x271, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0xfe, S4, 0x0]

================================

Block 0x809
[0x809:0x819]
---
Predecessors: [0x31a]
Successors: [0x81a, 0x81e]
---
0x809 JUMPDEST
0x80a PUSH1 0x1
0x80c PUSH1 0xa0
0x80e PUSH1 0x2
0x810 EXP
0x811 SUB
0x812 DUP3
0x813 AND
0x814 ISZERO
0x815 ISZERO
0x816 PUSH2 0x81e
0x819 JUMPI
---
0x809: JUMPDEST 
0x80a: V737 = 0x1
0x80c: V738 = 0xa0
0x80e: V739 = 0x2
0x810: V740 = EXP 0x2 0xa0
0x811: V741 = SUB 0x10000000000000000000000000000000000000000 0x1
0x813: V742 = AND V117 0xffffffffffffffffffffffffffffffffffffffff
0x814: V743 = ISZERO V742
0x815: V744 = ISZERO V743
0x816: V745 = 0x81e
0x819: JUMPI 0x81e V744
---
Entry stack: [V13, 0xfe, V117, 0x0, 0x271, V117, V293]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0xfe, V117, 0x0, 0x271, V117, V293]

================================

Block 0x81a
[0x81a:0x81d]
---
Predecessors: [0x809]
Successors: []
---
0x81a PUSH1 0x0
0x81c DUP1
0x81d REVERT
---
0x81a: V746 = 0x0
0x81d: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfe, V117, 0x0, 0x271, V117, V293]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfe, V117, 0x0, 0x271, V117, V293]

================================

Block 0x81e
[0x81e:0x847]
---
Predecessors: [0x809]
Successors: [0x805, 0x848]
---
0x81e JUMPDEST
0x81f DUP2
0x820 PUSH1 0x1
0x822 PUSH1 0xa0
0x824 PUSH1 0x2
0x826 EXP
0x827 SUB
0x828 AND
0x829 DUP2
0x82a PUSH1 0x40
0x82c MLOAD
0x82d PUSH1 0x0
0x82f PUSH1 0x40
0x831 MLOAD
0x832 DUP1
0x833 DUP4
0x834 SUB
0x835 DUP2
0x836 DUP6
0x837 DUP8
0x838 PUSH2 0x8796
0x83b GAS
0x83c SUB
0x83d CALL
0x83e SWAP3
0x83f POP
0x840 POP
0x841 POP
0x842 ISZERO
0x843 ISZERO
0x844 PUSH2 0x805
0x847 JUMPI
---
0x81e: JUMPDEST 
0x820: V747 = 0x1
0x822: V748 = 0xa0
0x824: V749 = 0x2
0x826: V750 = EXP 0x2 0xa0
0x827: V751 = SUB 0x10000000000000000000000000000000000000000 0x1
0x828: V752 = AND 0xffffffffffffffffffffffffffffffffffffffff V117
0x82a: V753 = 0x40
0x82c: V754 = M[0x40]
0x82d: V755 = 0x0
0x82f: V756 = 0x40
0x831: V757 = M[0x40]
0x834: V758 = SUB V754 V757
0x838: V759 = 0x8796
0x83b: V760 = GAS
0x83c: V761 = SUB V760 0x8796
0x83d: V762 = CALL V761 V752 V293 V757 V758 V757 0x0
0x842: V763 = ISZERO V762
0x843: V764 = ISZERO V763
0x844: V765 = 0x805
0x847: JUMPI 0x805 V764
---
Entry stack: [V13, 0xfe, V117, 0x0, 0x271, V117, V293]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0xfe, V117, 0x0, 0x271, V117, V293]

================================

Block 0x848
[0x848:0x84b]
---
Predecessors: [0x81e]
Successors: []
---
0x848 PUSH1 0x0
0x84a DUP1
0x84b REVERT
---
0x848: V766 = 0x0
0x84b: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfe, V117, 0x0, 0x271, V117, V293]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfe, V117, 0x0, 0x271, V117, V293]

================================

Block 0x84c
[0x84c:0x85c]
---
Predecessors: [0x4e9]
Successors: [0x85d, 0x861]
---
0x84c JUMPDEST
0x84d PUSH1 0x1
0x84f PUSH1 0xa0
0x851 PUSH1 0x2
0x853 EXP
0x854 SUB
0x855 DUP3
0x856 AND
0x857 ISZERO
0x858 ISZERO
0x859 PUSH2 0x861
0x85c JUMPI
---
0x84c: JUMPDEST 
0x84d: V767 = 0x1
0x84f: V768 = 0xa0
0x851: V769 = 0x2
0x853: V770 = EXP 0x2 0xa0
0x854: V771 = SUB 0x10000000000000000000000000000000000000000 0x1
0x856: V772 = AND V188 0xffffffffffffffffffffffffffffffffffffffff
0x857: V773 = ISZERO V772
0x858: V774 = ISZERO V773
0x859: V775 = 0x861
0x85c: JUMPI 0x861 V774
---
Entry stack: [V13, 0xfe, V185, V188, V190, 0x0, 0x4f6, V185, V188, V190]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0xfe, V185, V188, V190, 0x0, 0x4f6, V185, V188, V190]

================================

Block 0x85d
[0x85d:0x860]
---
Predecessors: [0x84c]
Successors: []
---
0x85d PUSH1 0x0
0x85f DUP1
0x860 REVERT
---
0x85d: V776 = 0x0
0x860: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfe, V185, V188, V190, 0x0, 0x4f6, V185, V188, V190]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfe, V185, V188, V190, 0x0, 0x4f6, V185, V188, V190]

================================

Block 0x861
[0x861:0x8c6]
---
Predecessors: [0x84c]
Successors: [0x8c7, 0x8cb]
---
0x861 JUMPDEST
0x862 DUP3
0x863 PUSH1 0x1
0x865 PUSH1 0xa0
0x867 PUSH1 0x2
0x869 EXP
0x86a SUB
0x86b AND
0x86c PUSH4 0x23b872dd
0x871 CALLER
0x872 DUP5
0x873 DUP5
0x874 PUSH1 0x0
0x876 PUSH1 0x40
0x878 MLOAD
0x879 PUSH1 0x20
0x87b ADD
0x87c MSTORE
0x87d PUSH1 0x40
0x87f MLOAD
0x880 PUSH1 0xe0
0x882 PUSH1 0x2
0x884 EXP
0x885 PUSH4 0xffffffff
0x88a DUP7
0x88b AND
0x88c MUL
0x88d DUP2
0x88e MSTORE
0x88f PUSH1 0x1
0x891 PUSH1 0xa0
0x893 PUSH1 0x2
0x895 EXP
0x896 SUB
0x897 SWAP4
0x898 DUP5
0x899 AND
0x89a PUSH1 0x4
0x89c DUP3
0x89d ADD
0x89e MSTORE
0x89f SWAP2
0x8a0 SWAP1
0x8a1 SWAP3
0x8a2 AND
0x8a3 PUSH1 0x24
0x8a5 DUP3
0x8a6 ADD
0x8a7 MSTORE
0x8a8 PUSH1 0x44
0x8aa DUP2
0x8ab ADD
0x8ac SWAP2
0x8ad SWAP1
0x8ae SWAP2
0x8af MSTORE
0x8b0 PUSH1 0x64
0x8b2 ADD
0x8b3 PUSH1 0x20
0x8b5 PUSH1 0x40
0x8b7 MLOAD
0x8b8 DUP1
0x8b9 DUP4
0x8ba SUB
0x8bb DUP2
0x8bc PUSH1 0x0
0x8be DUP8
0x8bf DUP1
0x8c0 EXTCODESIZE
0x8c1 ISZERO
0x8c2 ISZERO
0x8c3 PUSH2 0x8cb
0x8c6 JUMPI
---
0x861: JUMPDEST 
0x863: V777 = 0x1
0x865: V778 = 0xa0
0x867: V779 = 0x2
0x869: V780 = EXP 0x2 0xa0
0x86a: V781 = SUB 0x10000000000000000000000000000000000000000 0x1
0x86b: V782 = AND 0xffffffffffffffffffffffffffffffffffffffff V185
0x86c: V783 = 0x23b872dd
0x871: V784 = CALLER
0x874: V785 = 0x0
0x876: V786 = 0x40
0x878: V787 = M[0x40]
0x879: V788 = 0x20
0x87b: V789 = ADD 0x20 V787
0x87c: M[V789] = 0x0
0x87d: V790 = 0x40
0x87f: V791 = M[0x40]
0x880: V792 = 0xe0
0x882: V793 = 0x2
0x884: V794 = EXP 0x2 0xe0
0x885: V795 = 0xffffffff
0x88b: V796 = AND 0x23b872dd 0xffffffff
0x88c: V797 = MUL 0x23b872dd 0x100000000000000000000000000000000000000000000000000000000
0x88e: M[V791] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x88f: V798 = 0x1
0x891: V799 = 0xa0
0x893: V800 = 0x2
0x895: V801 = EXP 0x2 0xa0
0x896: V802 = SUB 0x10000000000000000000000000000000000000000 0x1
0x899: V803 = AND 0xffffffffffffffffffffffffffffffffffffffff V784
0x89a: V804 = 0x4
0x89d: V805 = ADD V791 0x4
0x89e: M[V805] = V803
0x8a2: V806 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x8a3: V807 = 0x24
0x8a6: V808 = ADD V791 0x24
0x8a7: M[V808] = V806
0x8a8: V809 = 0x44
0x8ab: V810 = ADD V791 0x44
0x8af: M[V810] = V190
0x8b0: V811 = 0x64
0x8b2: V812 = ADD 0x64 V791
0x8b3: V813 = 0x20
0x8b5: V814 = 0x40
0x8b7: V815 = M[0x40]
0x8ba: V816 = SUB V812 V815
0x8bc: V817 = 0x0
0x8c0: V818 = EXTCODESIZE V782
0x8c1: V819 = ISZERO V818
0x8c2: V820 = ISZERO V819
0x8c3: V821 = 0x8cb
0x8c6: JUMPI 0x8cb V820
---
Entry stack: [V13, 0xfe, V185, V188, V190, 0x0, 0x4f6, V185, V188, V190]
Stack pops: 3
Stack additions: [S2, S1, S0, V782, 0x23b872dd, V812, 0x20, V815, V816, V815, 0x0, V782]
Exit stack: [V13, 0xfe, V185, V188, V190, 0x0, 0x4f6, V185, V188, V190, V782, 0x23b872dd, V812, 0x20, V815, V816, V815, 0x0, V782]

================================

Block 0x8c7
[0x8c7:0x8ca]
---
Predecessors: [0x861]
Successors: []
---
0x8c7 PUSH1 0x0
0x8c9 DUP1
0x8ca REVERT
---
0x8c7: V822 = 0x0
0x8ca: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfe, V185, V188, V190, 0x0, 0x4f6, V185, V188, V190, V782, 0x23b872dd, V812, 0x20, V815, V816, V815, 0x0, V782]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfe, V185, V188, V190, 0x0, 0x4f6, V185, V188, V190, V782, 0x23b872dd, V812, 0x20, V815, V816, V815, 0x0, V782]

================================

Block 0x8cb
[0x8cb:0x8d7]
---
Predecessors: [0x861]
Successors: [0x8d8, 0x8dc]
---
0x8cb JUMPDEST
0x8cc PUSH2 0x2c6
0x8cf GAS
0x8d0 SUB
0x8d1 CALL
0x8d2 ISZERO
0x8d3 ISZERO
0x8d4 PUSH2 0x8dc
0x8d7 JUMPI
---
0x8cb: JUMPDEST 
0x8cc: V823 = 0x2c6
0x8cf: V824 = GAS
0x8d0: V825 = SUB V824 0x2c6
0x8d1: V826 = CALL V825 V782 0x0 V815 V816 V815 0x20
0x8d2: V827 = ISZERO V826
0x8d3: V828 = ISZERO V827
0x8d4: V829 = 0x8dc
0x8d7: JUMPI 0x8dc V828
---
Entry stack: [V13, 0xfe, V185, V188, V190, 0x0, 0x4f6, V185, V188, V190, V782, 0x23b872dd, V812, 0x20, V815, V816, V815, 0x0, V782]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0xfe, V185, V188, V190, 0x0, 0x4f6, V185, V188, V190, V782, 0x23b872dd, V812]

================================

Block 0x8d8
[0x8d8:0x8db]
---
Predecessors: [0x8cb]
Successors: []
---
0x8d8 PUSH1 0x0
0x8da DUP1
0x8db REVERT
---
0x8d8: V830 = 0x0
0x8db: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfe, V185, V188, V190, 0x0, 0x4f6, V185, V188, V190, V782, 0x23b872dd, V812]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfe, V185, V188, V190, 0x0, 0x4f6, V185, V188, V190, V782, 0x23b872dd, V812]

================================

Block 0x8dc
[0x8dc:0x8ec]
---
Predecessors: [0x8cb]
Successors: [0x737, 0x8ed]
---
0x8dc JUMPDEST
0x8dd POP
0x8de POP
0x8df POP
0x8e0 PUSH1 0x40
0x8e2 MLOAD
0x8e3 DUP1
0x8e4 MLOAD
0x8e5 SWAP1
0x8e6 POP
0x8e7 ISZERO
0x8e8 ISZERO
0x8e9 PUSH2 0x737
0x8ec JUMPI
---
0x8dc: JUMPDEST 
0x8e0: V831 = 0x40
0x8e2: V832 = M[0x40]
0x8e4: V833 = M[V832]
0x8e7: V834 = ISZERO V833
0x8e8: V835 = ISZERO V834
0x8e9: V836 = 0x737
0x8ec: JUMPI 0x737 V835
---
Entry stack: [V13, 0xfe, V185, V188, V190, 0x0, 0x4f6, V185, V188, V190, V782, 0x23b872dd, V812]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0xfe, V185, V188, V190, 0x0, 0x4f6, V185, V188, V190]

================================

Block 0x8ed
[0x8ed:0x8f0]
---
Predecessors: [0x8dc]
Successors: []
---
0x8ed PUSH1 0x0
0x8ef DUP1
0x8f0 REVERT
---
0x8ed: V837 = 0x0
0x8f0: REVERT 0x0 0x0
---
Entry stack: [V13, 0xfe, V185, V188, V190, 0x0, 0x4f6, V185, V188, V190]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xfe, V185, V188, V190, 0x0, 0x4f6, V185, V188, V190]

================================

Block 0x8f1
[0x8f1:0x91c]
---
Predecessors: []
Successors: []
---
0x8f1 STOP
0x8f2 LOG1
0x8f3 PUSH6 0x627a7a723058
0x8fa SHA3
0x8fb GT
0x8fc PUSH31 0x698d8a569af8c6b3c29b44f40c4854701a080bd27da7b399a88e794f86ec00
0x91c MISSING 0x29
---
0x8f1: STOP 
0x8f2: LOG S0 S1 S2
0x8f3: V838 = 0x627a7a723058
0x8fa: V839 = SHA3 0x627a7a723058 S3
0x8fb: V840 = GT V839 S4
0x8fc: V841 = 0x698d8a569af8c6b3c29b44f40c4854701a080bd27da7b399a88e794f86ec00
0x91c: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0x698d8a569af8c6b3c29b44f40c4854701a080bd27da7b399a88e794f86ec00, V840]
Exit stack: []

================================

Function 0:
Public function signature: 0x1f6eb6e7
Entry block: 0xbb
Exit block: 0xce
Body: 0xbb, 0xc2, 0xc6, 0xce, 0x256

Function 1:
Public function signature: 0x21b1e5f8
Entry block: 0xea
Exit block: 0xfe
Body: 0xea, 0xfe, 0x265, 0x271, 0x7bf, 0x7d0, 0x7d4, 0x801, 0x805

Function 2:
Public function signature: 0x2af4c31e
Entry block: 0x112
Exit block: 0x131
Body: 0x112, 0x119, 0x11d, 0x131, 0x279, 0x291, 0x295, 0x2a6, 0x2aa

Function 3:
Public function signature: 0x43ddc1b0
Entry block: 0x133
Exit block: 0xfe
Body: 0xfe, 0x133, 0x271, 0x31a, 0x805, 0x809, 0x81a, 0x81e, 0x848

Function 4:
Public function signature: 0x666a3427
Entry block: 0x147
Exit block: 0x131
Body: 0x131, 0x147, 0x14e, 0x152, 0x326, 0x33d, 0x341, 0x354, 0x358

Function 5:
Public function signature: 0x710bf322
Entry block: 0x166
Exit block: 0x131
Body: 0x131, 0x166, 0x16d, 0x171, 0x3b0, 0x3c7, 0x3cb

Function 6:
Public function signature: 0x79ba5097
Entry block: 0x185
Exit block: 0x131
Body: 0x131, 0x185, 0x18c, 0x190, 0x42e, 0x448, 0x44c

Function 7:
Public function signature: 0x892db057
Entry block: 0x198
Exit block: 0xfe
Body: 0xfe, 0x198, 0x19f, 0x1a3, 0x4bb

Function 8:
Public function signature: 0x8da5cb5b
Entry block: 0x1b7
Exit block: 0xce
Body: 0xce, 0x1b7, 0x1be, 0x1c2, 0x4da

Function 9:
Public function signature: 0x8f975a64
Entry block: 0x1ca
Exit block: 0xfe
Body: 0xfe, 0x131, 0x1ca, 0x1d1, 0x1d5, 0x4e9, 0x4f6, 0x737, 0x84c, 0x85d, 0x861, 0x8c7, 0x8cb, 0x8d8, 0x8dc, 0x8ed

Function 10:
Public function signature: 0xa142d608
Entry block: 0x1f2
Exit block: 0x6ee
Body: 0xfe, 0x131, 0x1f2, 0x1f9, 0x1fd, 0x4f6, 0x500, 0x51d, 0x530, 0x537, 0x53b, 0x55d, 0x561, 0x572, 0x5a6, 0x5aa, 0x5f3, 0x648, 0x64c, 0x659, 0x65d, 0x6c8, 0x6cc, 0x6d9, 0x6dd, 0x6ee, 0x6f2, 0x737

Function 11:
Public function signature: 0xd091b550
Entry block: 0x211
Exit block: 0xce
Body: 0xce, 0x211, 0x218, 0x21c, 0x73c

Function 12:
Public function signature: 0xd836fbe8
Entry block: 0x224
Exit block: 0x131
Body: 0x131, 0x224, 0x22b, 0x22f, 0x74b, 0x763, 0x776, 0x77d, 0x781

Function 13:
Public function signature: 0xf5b61230
Entry block: 0x243
Exit block: 0xce
Body: 0xce, 0x243, 0x24a, 0x24e, 0x7b0

Function 14:
Public fallback function
Entry block: 0xb6
Exit block: 0xb6
Body: 0xb6

