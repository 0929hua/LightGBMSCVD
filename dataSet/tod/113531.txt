Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x67]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x11d067ec
0x3c EQ
0x3d PUSH2 0x67
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x11d067ec
0x3c: V13 = EQ 0x11d067ec V11
0x3d: V14 = 0x67
0x40: JUMPI 0x67 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xb5]
---
0x41 DUP1
0x42 PUSH4 0x2e1a7d4d
0x47 EQ
0x48 PUSH2 0xb5
0x4b JUMPI
---
0x42: V15 = 0x2e1a7d4d
0x47: V16 = EQ 0x2e1a7d4d V11
0x48: V17 = 0xb5
0x4b: JUMPI 0xb5 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xe2]
---
0x4c DUP1
0x4d PUSH4 0x41c0e1b5
0x52 EQ
0x53 PUSH2 0xe2
0x56 JUMPI
---
0x4d: V18 = 0x41c0e1b5
0x52: V19 = EQ 0x41c0e1b5 V11
0x53: V20 = 0xe2
0x56: JUMPI 0xe2 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0xf9]
---
0x57 DUP1
0x58 PUSH4 0xd0e30db0
0x5d EQ
0x5e PUSH2 0xf9
0x61 JUMPI
---
0x58: V21 = 0xd0e30db0
0x5d: V22 = EQ 0xd0e30db0 V11
0x5e: V23 = 0xf9
0x61: JUMPI 0xf9 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x66]
---
Predecessors: [0x0, 0x57]
Successors: []
---
0x62 JUMPDEST
0x63 PUSH1 0x0
0x65 DUP1
0x66 REVERT
---
0x62: JUMPDEST 
0x63: V24 = 0x0
0x66: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x67
[0x67:0x9a]
---
Predecessors: [0xd]
Successors: [0x103]
---
0x67 JUMPDEST
0x68 PUSH2 0x9b
0x6b PUSH1 0x4
0x6d DUP1
0x6e CALLDATASIZE
0x6f SUB
0x70 DUP2
0x71 ADD
0x72 SWAP1
0x73 DUP1
0x74 DUP1
0x75 CALLDATALOAD
0x76 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8b AND
0x8c SWAP1
0x8d PUSH1 0x20
0x8f ADD
0x90 SWAP1
0x91 SWAP3
0x92 SWAP2
0x93 SWAP1
0x94 POP
0x95 POP
0x96 POP
0x97 PUSH2 0x103
0x9a JUMP
---
0x67: JUMPDEST 
0x68: V25 = 0x9b
0x6b: V26 = 0x4
0x6e: V27 = CALLDATASIZE
0x6f: V28 = SUB V27 0x4
0x71: V29 = ADD 0x4 V28
0x75: V30 = CALLDATALOAD 0x4
0x76: V31 = 0xffffffffffffffffffffffffffffffffffffffff
0x8b: V32 = AND 0xffffffffffffffffffffffffffffffffffffffff V30
0x8d: V33 = 0x20
0x8f: V34 = ADD 0x20 0x4
0x97: V35 = 0x103
0x9a: JUMP 0x103
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x9b, V32]
Exit stack: [V11, 0x9b, V32]

================================

Block 0x9b
[0x9b:0xb4]
---
Predecessors: [0x18c]
Successors: []
---
0x9b JUMPDEST
0x9c PUSH1 0x40
0x9e MLOAD
0x9f DUP1
0xa0 DUP3
0xa1 ISZERO
0xa2 ISZERO
0xa3 ISZERO
0xa4 ISZERO
0xa5 DUP2
0xa6 MSTORE
0xa7 PUSH1 0x20
0xa9 ADD
0xaa SWAP2
0xab POP
0xac POP
0xad PUSH1 0x40
0xaf MLOAD
0xb0 DUP1
0xb1 SWAP2
0xb2 SUB
0xb3 SWAP1
0xb4 RETURN
---
0x9b: JUMPDEST 
0x9c: V36 = 0x40
0x9e: V37 = M[0x40]
0xa1: V38 = ISZERO 0x1
0xa2: V39 = ISZERO 0x0
0xa3: V40 = ISZERO 0x1
0xa4: V41 = ISZERO 0x0
0xa6: M[V37] = 0x1
0xa7: V42 = 0x20
0xa9: V43 = ADD 0x20 V37
0xad: V44 = 0x40
0xaf: V45 = M[0x40]
0xb2: V46 = SUB V43 V45
0xb4: RETURN V45 V46
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xb5
[0xb5:0xbc]
---
Predecessors: [0x41]
Successors: [0xbd, 0xc1]
---
0xb5 JUMPDEST
0xb6 CALLVALUE
0xb7 DUP1
0xb8 ISZERO
0xb9 PUSH2 0xc1
0xbc JUMPI
---
0xb5: JUMPDEST 
0xb6: V47 = CALLVALUE
0xb8: V48 = ISZERO V47
0xb9: V49 = 0xc1
0xbc: JUMPI 0xc1 V48
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V47]
Exit stack: [V11, V47]

================================

Block 0xbd
[0xbd:0xc0]
---
Predecessors: [0xb5]
Successors: []
---
0xbd PUSH1 0x0
0xbf DUP1
0xc0 REVERT
---
0xbd: V50 = 0x0
0xc0: REVERT 0x0 0x0
---
Entry stack: [V11, V47]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V47]

================================

Block 0xc1
[0xc1:0xdf]
---
Predecessors: [0xb5]
Successors: [0x196]
---
0xc1 JUMPDEST
0xc2 POP
0xc3 PUSH2 0xe0
0xc6 PUSH1 0x4
0xc8 DUP1
0xc9 CALLDATASIZE
0xca SUB
0xcb DUP2
0xcc ADD
0xcd SWAP1
0xce DUP1
0xcf DUP1
0xd0 CALLDATALOAD
0xd1 SWAP1
0xd2 PUSH1 0x20
0xd4 ADD
0xd5 SWAP1
0xd6 SWAP3
0xd7 SWAP2
0xd8 SWAP1
0xd9 POP
0xda POP
0xdb POP
0xdc PUSH2 0x196
0xdf JUMP
---
0xc1: JUMPDEST 
0xc3: V51 = 0xe0
0xc6: V52 = 0x4
0xc9: V53 = CALLDATASIZE
0xca: V54 = SUB V53 0x4
0xcc: V55 = ADD 0x4 V54
0xd0: V56 = CALLDATALOAD 0x4
0xd2: V57 = 0x20
0xd4: V58 = ADD 0x20 0x4
0xdc: V59 = 0x196
0xdf: JUMP 0x196
---
Entry stack: [V11, V47]
Stack pops: 1
Stack additions: [0xe0, V56]
Exit stack: [V11, 0xe0, V56]

================================

Block 0xe0
[0xe0:0xe1]
---
Predecessors: [0x258]
Successors: []
---
0xe0 JUMPDEST
0xe1 STOP
---
0xe0: JUMPDEST 
0xe1: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe2
[0xe2:0xe9]
---
Predecessors: [0x4c]
Successors: [0xea, 0xee]
---
0xe2 JUMPDEST
0xe3 CALLVALUE
0xe4 DUP1
0xe5 ISZERO
0xe6 PUSH2 0xee
0xe9 JUMPI
---
0xe2: JUMPDEST 
0xe3: V60 = CALLVALUE
0xe5: V61 = ISZERO V60
0xe6: V62 = 0xee
0xe9: JUMPI 0xee V61
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V60]
Exit stack: [V11, V60]

================================

Block 0xea
[0xea:0xed]
---
Predecessors: [0xe2]
Successors: []
---
0xea PUSH1 0x0
0xec DUP1
0xed REVERT
---
0xea: V63 = 0x0
0xed: REVERT 0x0 0x0
---
Entry stack: [V11, V60]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V60]

================================

Block 0xee
[0xee:0xf6]
---
Predecessors: [0xe2]
Successors: [0x25c]
---
0xee JUMPDEST
0xef POP
0xf0 PUSH2 0xf7
0xf3 PUSH2 0x25c
0xf6 JUMP
---
0xee: JUMPDEST 
0xf0: V64 = 0xf7
0xf3: V65 = 0x25c
0xf6: JUMP 0x25c
---
Entry stack: [V11, V60]
Stack pops: 1
Stack additions: [0xf7]
Exit stack: [V11, 0xf7]

================================

Block 0xf7
[0xf7:0xf8]
---
Predecessors: [0x2eb]
Successors: []
---
0xf7 JUMPDEST
0xf8 STOP
---
0xf7: JUMPDEST 
0xf8: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf9
[0xf9:0x100]
---
Predecessors: [0x57]
Successors: [0x2ed]
---
0xf9 JUMPDEST
0xfa PUSH2 0x101
0xfd PUSH2 0x2ed
0x100 JUMP
---
0xf9: JUMPDEST 
0xfa: V66 = 0x101
0xfd: V67 = 0x2ed
0x100: JUMP 0x2ed
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x101]
Exit stack: [V11, 0x101]

================================

Block 0x101
[0x101:0x102]
---
Predecessors: [0x2ed]
Successors: []
---
0x101 JUMPDEST
0x102 STOP
---
0x101: JUMPDEST 
0x102: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x103
[0x103:0x182]
---
Predecessors: [0x67]
Successors: [0x183, 0x18c]
---
0x103 JUMPDEST
0x104 PUSH1 0x0
0x106 DUP2
0x107 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11c AND
0x11d PUSH1 0x40
0x11f MLOAD
0x120 PUSH1 0x0
0x122 PUSH1 0x40
0x124 MLOAD
0x125 DUP1
0x126 DUP4
0x127 SUB
0x128 DUP2
0x129 DUP6
0x12a GAS
0x12b DELEGATECALL
0x12c SWAP2
0x12d POP
0x12e POP
0x12f POP
0x130 CALLER
0x131 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x146 AND
0x147 PUSH2 0x8fc
0x14a ADDRESS
0x14b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x160 AND
0x161 BALANCE
0x162 SWAP1
0x163 DUP2
0x164 ISZERO
0x165 MUL
0x166 SWAP1
0x167 PUSH1 0x40
0x169 MLOAD
0x16a PUSH1 0x0
0x16c PUSH1 0x40
0x16e MLOAD
0x16f DUP1
0x170 DUP4
0x171 SUB
0x172 DUP2
0x173 DUP6
0x174 DUP9
0x175 DUP9
0x176 CALL
0x177 SWAP4
0x178 POP
0x179 POP
0x17a POP
0x17b POP
0x17c ISZERO
0x17d DUP1
0x17e ISZERO
0x17f PUSH2 0x18c
0x182 JUMPI
---
0x103: JUMPDEST 
0x104: V68 = 0x0
0x107: V69 = 0xffffffffffffffffffffffffffffffffffffffff
0x11c: V70 = AND 0xffffffffffffffffffffffffffffffffffffffff V32
0x11d: V71 = 0x40
0x11f: V72 = M[0x40]
0x120: V73 = 0x0
0x122: V74 = 0x40
0x124: V75 = M[0x40]
0x127: V76 = SUB V72 V75
0x12a: V77 = GAS
0x12b: V78 = DELEGATECALL V77 V70 V75 V76 V75 0x0
0x130: V79 = CALLER
0x131: V80 = 0xffffffffffffffffffffffffffffffffffffffff
0x146: V81 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x147: V82 = 0x8fc
0x14a: V83 = ADDRESS
0x14b: V84 = 0xffffffffffffffffffffffffffffffffffffffff
0x160: V85 = AND 0xffffffffffffffffffffffffffffffffffffffff V83
0x161: V86 = BALANCE V85
0x164: V87 = ISZERO V86
0x165: V88 = MUL V87 0x8fc
0x167: V89 = 0x40
0x169: V90 = M[0x40]
0x16a: V91 = 0x0
0x16c: V92 = 0x40
0x16e: V93 = M[0x40]
0x171: V94 = SUB V90 V93
0x176: V95 = CALL V88 V81 V86 V93 V94 V93 0x0
0x17c: V96 = ISZERO V95
0x17e: V97 = ISZERO V96
0x17f: V98 = 0x18c
0x182: JUMPI 0x18c V97
---
Entry stack: [V11, 0x9b, V32]
Stack pops: 1
Stack additions: [S0, 0x0, V96]
Exit stack: [V11, 0x9b, V32, 0x0, V96]

================================

Block 0x183
[0x183:0x18b]
---
Predecessors: [0x103]
Successors: []
---
0x183 RETURNDATASIZE
0x184 PUSH1 0x0
0x186 DUP1
0x187 RETURNDATACOPY
0x188 RETURNDATASIZE
0x189 PUSH1 0x0
0x18b REVERT
---
0x183: V99 = RETURNDATASIZE
0x184: V100 = 0x0
0x187: RETURNDATACOPY 0x0 0x0 V99
0x188: V101 = RETURNDATASIZE
0x189: V102 = 0x0
0x18b: REVERT 0x0 V101
---
Entry stack: [V11, 0x9b, V32, 0x0, V96]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9b, V32, 0x0, V96]

================================

Block 0x18c
[0x18c:0x195]
---
Predecessors: [0x103]
Successors: [0x9b]
---
0x18c JUMPDEST
0x18d POP
0x18e PUSH1 0x1
0x190 SWAP1
0x191 POP
0x192 SWAP2
0x193 SWAP1
0x194 POP
0x195 JUMP
---
0x18c: JUMPDEST 
0x18e: V103 = 0x1
0x195: JUMP 0x9b
---
Entry stack: [V11, 0x9b, V32, 0x0, V96]
Stack pops: 4
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x196
[0x196:0x1ec]
---
Predecessors: [0xc1]
Successors: [0x1ed, 0x1f1]
---
0x196 JUMPDEST
0x197 PUSH1 0x0
0x199 DUP1
0x19a SWAP1
0x19b SLOAD
0x19c SWAP1
0x19d PUSH2 0x100
0x1a0 EXP
0x1a1 SWAP1
0x1a2 DIV
0x1a3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b8 AND
0x1b9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ce AND
0x1cf CALLER
0x1d0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e5 AND
0x1e6 EQ
0x1e7 ISZERO
0x1e8 ISZERO
0x1e9 PUSH2 0x1f1
0x1ec JUMPI
---
0x196: JUMPDEST 
0x197: V104 = 0x0
0x19b: V105 = S[0x0]
0x19d: V106 = 0x100
0x1a0: V107 = EXP 0x100 0x0
0x1a2: V108 = DIV V105 0x1
0x1a3: V109 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b8: V110 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x1b9: V111 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ce: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x1cf: V113 = CALLER
0x1d0: V114 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e5: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x1e6: V116 = EQ V115 V112
0x1e7: V117 = ISZERO V116
0x1e8: V118 = ISZERO V117
0x1e9: V119 = 0x1f1
0x1ec: JUMPI 0x1f1 V118
---
Entry stack: [V11, 0xe0, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe0, V56]

================================

Block 0x1ed
[0x1ed:0x1f0]
---
Predecessors: [0x196]
Successors: []
---
0x1ed PUSH1 0x0
0x1ef DUP1
0x1f0 REVERT
---
0x1ed: V120 = 0x0
0x1f0: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe0, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe0, V56]

================================

Block 0x1f1
[0x1f1:0x24e]
---
Predecessors: [0x196]
Successors: [0x24f, 0x258]
---
0x1f1 JUMPDEST
0x1f2 PUSH1 0x0
0x1f4 DUP1
0x1f5 SWAP1
0x1f6 SLOAD
0x1f7 SWAP1
0x1f8 PUSH2 0x100
0x1fb EXP
0x1fc SWAP1
0x1fd DIV
0x1fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x213 AND
0x214 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x229 AND
0x22a PUSH2 0x8fc
0x22d DUP3
0x22e SWAP1
0x22f DUP2
0x230 ISZERO
0x231 MUL
0x232 SWAP1
0x233 PUSH1 0x40
0x235 MLOAD
0x236 PUSH1 0x0
0x238 PUSH1 0x40
0x23a MLOAD
0x23b DUP1
0x23c DUP4
0x23d SUB
0x23e DUP2
0x23f DUP6
0x240 DUP9
0x241 DUP9
0x242 CALL
0x243 SWAP4
0x244 POP
0x245 POP
0x246 POP
0x247 POP
0x248 ISZERO
0x249 DUP1
0x24a ISZERO
0x24b PUSH2 0x258
0x24e JUMPI
---
0x1f1: JUMPDEST 
0x1f2: V121 = 0x0
0x1f6: V122 = S[0x0]
0x1f8: V123 = 0x100
0x1fb: V124 = EXP 0x100 0x0
0x1fd: V125 = DIV V122 0x1
0x1fe: V126 = 0xffffffffffffffffffffffffffffffffffffffff
0x213: V127 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x214: V128 = 0xffffffffffffffffffffffffffffffffffffffff
0x229: V129 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x22a: V130 = 0x8fc
0x230: V131 = ISZERO V56
0x231: V132 = MUL V131 0x8fc
0x233: V133 = 0x40
0x235: V134 = M[0x40]
0x236: V135 = 0x0
0x238: V136 = 0x40
0x23a: V137 = M[0x40]
0x23d: V138 = SUB V134 V137
0x242: V139 = CALL V132 V129 V56 V137 V138 V137 0x0
0x248: V140 = ISZERO V139
0x24a: V141 = ISZERO V140
0x24b: V142 = 0x258
0x24e: JUMPI 0x258 V141
---
Entry stack: [V11, 0xe0, V56]
Stack pops: 1
Stack additions: [S0, V140]
Exit stack: [V11, 0xe0, V56, V140]

================================

Block 0x24f
[0x24f:0x257]
---
Predecessors: [0x1f1]
Successors: []
---
0x24f RETURNDATASIZE
0x250 PUSH1 0x0
0x252 DUP1
0x253 RETURNDATACOPY
0x254 RETURNDATASIZE
0x255 PUSH1 0x0
0x257 REVERT
---
0x24f: V143 = RETURNDATASIZE
0x250: V144 = 0x0
0x253: RETURNDATACOPY 0x0 0x0 V143
0x254: V145 = RETURNDATASIZE
0x255: V146 = 0x0
0x257: REVERT 0x0 V145
---
Entry stack: [V11, 0xe0, V56, V140]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe0, V56, V140]

================================

Block 0x258
[0x258:0x25b]
---
Predecessors: [0x1f1]
Successors: [0xe0]
---
0x258 JUMPDEST
0x259 POP
0x25a POP
0x25b JUMP
---
0x258: JUMPDEST 
0x25b: JUMP 0xe0
---
Entry stack: [V11, 0xe0, V56, V140]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x25c
[0x25c:0x2b1]
---
Predecessors: [0xee]
Successors: [0x2b2, 0x2eb]
---
0x25c JUMPDEST
0x25d PUSH1 0x0
0x25f DUP1
0x260 SWAP1
0x261 SLOAD
0x262 SWAP1
0x263 PUSH2 0x100
0x266 EXP
0x267 SWAP1
0x268 DIV
0x269 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27e AND
0x27f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x294 AND
0x295 CALLER
0x296 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ab AND
0x2ac EQ
0x2ad ISZERO
0x2ae PUSH2 0x2eb
0x2b1 JUMPI
---
0x25c: JUMPDEST 
0x25d: V147 = 0x0
0x261: V148 = S[0x0]
0x263: V149 = 0x100
0x266: V150 = EXP 0x100 0x0
0x268: V151 = DIV V148 0x1
0x269: V152 = 0xffffffffffffffffffffffffffffffffffffffff
0x27e: V153 = AND 0xffffffffffffffffffffffffffffffffffffffff V151
0x27f: V154 = 0xffffffffffffffffffffffffffffffffffffffff
0x294: V155 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x295: V156 = CALLER
0x296: V157 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ab: V158 = AND 0xffffffffffffffffffffffffffffffffffffffff V156
0x2ac: V159 = EQ V158 V155
0x2ad: V160 = ISZERO V159
0x2ae: V161 = 0x2eb
0x2b1: JUMPI 0x2eb V160
---
Entry stack: [V11, 0xf7]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf7]

================================

Block 0x2b2
[0x2b2:0x2ea]
---
Predecessors: [0x25c]
Successors: []
---
0x2b2 PUSH1 0x0
0x2b4 DUP1
0x2b5 SWAP1
0x2b6 SLOAD
0x2b7 SWAP1
0x2b8 PUSH2 0x100
0x2bb EXP
0x2bc SWAP1
0x2bd DIV
0x2be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d3 AND
0x2d4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e9 AND
0x2ea SELFDESTRUCT
---
0x2b2: V162 = 0x0
0x2b6: V163 = S[0x0]
0x2b8: V164 = 0x100
0x2bb: V165 = EXP 0x100 0x0
0x2bd: V166 = DIV V163 0x1
0x2be: V167 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d3: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff V166
0x2d4: V169 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e9: V170 = AND 0xffffffffffffffffffffffffffffffffffffffff V168
0x2ea: SELFDESTRUCT V170
---
Entry stack: [V11, 0xf7]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf7]

================================

Block 0x2eb
[0x2eb:0x2ec]
---
Predecessors: [0x25c]
Successors: [0xf7]
---
0x2eb JUMPDEST
0x2ec JUMP
---
0x2eb: JUMPDEST 
0x2ec: JUMP 0xf7
---
Entry stack: [V11, 0xf7]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x2ed
[0x2ed:0x2ee]
---
Predecessors: [0xf9]
Successors: [0x101]
---
0x2ed JUMPDEST
0x2ee JUMP
---
0x2ed: JUMPDEST 
0x2ee: JUMP 0x101
---
Entry stack: [V11, 0x101]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x2ef
[0x2ef:0x31a]
---
Predecessors: []
Successors: []
---
0x2ef STOP
0x2f0 LOG1
0x2f1 PUSH6 0x627a7a723058
0x2f8 SHA3
0x2f9 TIMESTAMP
0x2fa CALLDATACOPY
0x2fb PUSH3 0x576e24
0x2ff PUSH16 0x9e25f7089ecf358ca61d1205e68ff3
0x310 MISSING 0xac
0x311 MISSING 0xdd
0x312 SWAP1
0x313 SUB
0x314 MISSING 0xcb
0x315 MISSING 0xd8
0x316 MISSING 0xed
0x317 PC
0x318 RETURNDATACOPY
0x319 STOP
0x31a MISSING 0x29
---
0x2ef: STOP 
0x2f0: LOG S0 S1 S2
0x2f1: V171 = 0x627a7a723058
0x2f8: V172 = SHA3 0x627a7a723058 S3
0x2f9: V173 = TIMESTAMP
0x2fa: CALLDATACOPY V173 V172 S4
0x2fb: V174 = 0x576e24
0x2ff: V175 = 0x9e25f7089ecf358ca61d1205e68ff3
0x310: MISSING 0xac
0x311: MISSING 0xdd
0x313: V176 = SUB S1 S0
0x314: MISSING 0xcb
0x315: MISSING 0xd8
0x316: MISSING 0xed
0x317: V177 = PC
0x318: RETURNDATACOPY V177 S0 S1
0x319: STOP 
0x31a: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0x9e25f7089ecf358ca61d1205e68ff3, 0x576e24, V176]
Exit stack: []

================================

Function 0:
Public function signature: 0x11d067ec
Entry block: 0x67
Exit block: 0x9b
Body: 0x67, 0x9b, 0x103, 0x183, 0x18c

Function 1:
Public function signature: 0x2e1a7d4d
Entry block: 0xb5
Exit block: 0xe0
Body: 0xb5, 0xbd, 0xc1, 0xe0, 0x196, 0x1ed, 0x1f1, 0x24f, 0x258

Function 2:
Public function signature: 0x41c0e1b5
Entry block: 0xe2
Exit block: 0xf7
Body: 0xe2, 0xea, 0xee, 0xf7, 0x25c, 0x2b2, 0x2eb

Function 3:
Public function signature: 0xd0e30db0
Entry block: 0xf9
Exit block: 0x101
Body: 0xf9, 0x101, 0x2ed

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x62
Body: 0x62

