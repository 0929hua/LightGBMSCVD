Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xfb]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xfb
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xfb
0xc: JUMPI 0xfb V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x105]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x6fdde03
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x105
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x6fdde03
0x3b: V13 = EQ V11 0x6fdde03
0x3c: V14 = 0x105
0x3f: JUMPI 0x105 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x18f]
---
0x40 DUP1
0x41 PUSH4 0x95ea7b3
0x46 EQ
0x47 PUSH2 0x18f
0x4a JUMPI
---
0x41: V15 = 0x95ea7b3
0x46: V16 = EQ 0x95ea7b3 V11
0x47: V17 = 0x18f
0x4a: JUMPI 0x18f V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x1c7]
---
0x4b DUP1
0x4c PUSH4 0x18160ddd
0x51 EQ
0x52 PUSH2 0x1c7
0x55 JUMPI
---
0x4c: V18 = 0x18160ddd
0x51: V19 = EQ 0x18160ddd V11
0x52: V20 = 0x1c7
0x55: JUMPI 0x1c7 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x1ee]
---
0x56 DUP1
0x57 PUSH4 0x205c2878
0x5c EQ
0x5d PUSH2 0x1ee
0x60 JUMPI
---
0x57: V21 = 0x205c2878
0x5c: V22 = EQ 0x205c2878 V11
0x5d: V23 = 0x1ee
0x60: JUMPI 0x1ee V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x212]
---
0x61 DUP1
0x62 PUSH4 0x23b872dd
0x67 EQ
0x68 PUSH2 0x212
0x6b JUMPI
---
0x62: V24 = 0x23b872dd
0x67: V25 = EQ 0x23b872dd V11
0x68: V26 = 0x212
0x6b: JUMPI 0x212 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x23c]
---
0x6c DUP1
0x6d PUSH4 0x2e1a7d4d
0x72 EQ
0x73 PUSH2 0x23c
0x76 JUMPI
---
0x6d: V27 = 0x2e1a7d4d
0x72: V28 = EQ 0x2e1a7d4d V11
0x73: V29 = 0x23c
0x76: JUMPI 0x23c V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x254]
---
0x77 DUP1
0x78 PUSH4 0x313ce567
0x7d EQ
0x7e PUSH2 0x254
0x81 JUMPI
---
0x78: V30 = 0x313ce567
0x7d: V31 = EQ 0x313ce567 V11
0x7e: V32 = 0x254
0x81: JUMPI 0x254 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x27f]
---
0x82 DUP1
0x83 PUSH4 0x5a3b7e42
0x88 EQ
0x89 PUSH2 0x27f
0x8c JUMPI
---
0x83: V33 = 0x5a3b7e42
0x88: V34 = EQ 0x5a3b7e42 V11
0x89: V35 = 0x27f
0x8c: JUMPI 0x27f V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x294]
---
0x8d DUP1
0x8e PUSH4 0x5e35359e
0x93 EQ
0x94 PUSH2 0x294
0x97 JUMPI
---
0x8e: V36 = 0x5e35359e
0x93: V37 = EQ 0x5e35359e V11
0x94: V38 = 0x294
0x97: JUMPI 0x294 V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x8d]
Successors: [0xa3, 0x2be]
---
0x98 DUP1
0x99 PUSH4 0x70a08231
0x9e EQ
0x9f PUSH2 0x2be
0xa2 JUMPI
---
0x99: V39 = 0x70a08231
0x9e: V40 = EQ 0x70a08231 V11
0x9f: V41 = 0x2be
0xa2: JUMPI 0x2be V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa3
[0xa3:0xad]
---
Predecessors: [0x98]
Successors: [0xae, 0x2df]
---
0xa3 DUP1
0xa4 PUSH4 0x79ba5097
0xa9 EQ
0xaa PUSH2 0x2df
0xad JUMPI
---
0xa4: V42 = 0x79ba5097
0xa9: V43 = EQ 0x79ba5097 V11
0xaa: V44 = 0x2df
0xad: JUMPI 0x2df V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xae
[0xae:0xb8]
---
Predecessors: [0xa3]
Successors: [0xb9, 0x2f4]
---
0xae DUP1
0xaf PUSH4 0x8da5cb5b
0xb4 EQ
0xb5 PUSH2 0x2f4
0xb8 JUMPI
---
0xaf: V45 = 0x8da5cb5b
0xb4: V46 = EQ 0x8da5cb5b V11
0xb5: V47 = 0x2f4
0xb8: JUMPI 0x2f4 V46
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xb9
[0xb9:0xc3]
---
Predecessors: [0xae]
Successors: [0xc4, 0x325]
---
0xb9 DUP1
0xba PUSH4 0x95d89b41
0xbf EQ
0xc0 PUSH2 0x325
0xc3 JUMPI
---
0xba: V48 = 0x95d89b41
0xbf: V49 = EQ 0x95d89b41 V11
0xc0: V50 = 0x325
0xc3: JUMPI 0x325 V49
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xc4
[0xc4:0xce]
---
Predecessors: [0xb9]
Successors: [0xcf, 0x33a]
---
0xc4 DUP1
0xc5 PUSH4 0xa9059cbb
0xca EQ
0xcb PUSH2 0x33a
0xce JUMPI
---
0xc5: V51 = 0xa9059cbb
0xca: V52 = EQ 0xa9059cbb V11
0xcb: V53 = 0x33a
0xce: JUMPI 0x33a V52
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xcf
[0xcf:0xd9]
---
Predecessors: [0xc4]
Successors: [0xda, 0xfb]
---
0xcf DUP1
0xd0 PUSH4 0xd0e30db0
0xd5 EQ
0xd6 PUSH2 0xfb
0xd9 JUMPI
---
0xd0: V54 = 0xd0e30db0
0xd5: V55 = EQ 0xd0e30db0 V11
0xd6: V56 = 0xfb
0xd9: JUMPI 0xfb V55
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xda
[0xda:0xe4]
---
Predecessors: [0xcf]
Successors: [0xe5, 0x35e]
---
0xda DUP1
0xdb PUSH4 0xd4ee1d90
0xe0 EQ
0xe1 PUSH2 0x35e
0xe4 JUMPI
---
0xdb: V57 = 0xd4ee1d90
0xe0: V58 = EQ 0xd4ee1d90 V11
0xe1: V59 = 0x35e
0xe4: JUMPI 0x35e V58
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xe5
[0xe5:0xef]
---
Predecessors: [0xda]
Successors: [0xf0, 0x373]
---
0xe5 DUP1
0xe6 PUSH4 0xdd62ed3e
0xeb EQ
0xec PUSH2 0x373
0xef JUMPI
---
0xe6: V60 = 0xdd62ed3e
0xeb: V61 = EQ 0xdd62ed3e V11
0xec: V62 = 0x373
0xef: JUMPI 0x373 V61
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xf0
[0xf0:0xfa]
---
Predecessors: [0xe5]
Successors: [0xfb, 0x39a]
---
0xf0 DUP1
0xf1 PUSH4 0xf2fde38b
0xf6 EQ
0xf7 PUSH2 0x39a
0xfa JUMPI
---
0xf1: V63 = 0xf2fde38b
0xf6: V64 = EQ 0xf2fde38b V11
0xf7: V65 = 0x39a
0xfa: JUMPI 0x39a V64
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xfb
[0xfb:0x102]
---
Predecessors: [0x0, 0xcf, 0xf0]
Successors: [0x3bb]
---
0xfb JUMPDEST
0xfc PUSH2 0x103
0xff PUSH2 0x3bb
0x102 JUMP
---
0xfb: JUMPDEST 
0xfc: V66 = 0x103
0xff: V67 = 0x3bb
0x102: JUMP 0x3bb
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x103]
Exit stack: [V11, 0x103]

================================

Block 0x103
[0x103:0x104]
---
Predecessors: [0x3f2, 0x623, 0x6c2, 0x82d, 0x85e, 0x9d8]
Successors: []
---
0x103 JUMPDEST
0x104 STOP
---
0x103: JUMPDEST 
0x104: STOP 
---
Entry stack: [V11, 0x1b3, V176, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1b3, V176, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x105
[0x105:0x10c]
---
Predecessors: [0xd]
Successors: [0x10d, 0x111]
---
0x105 JUMPDEST
0x106 CALLVALUE
0x107 DUP1
0x108 ISZERO
0x109 PUSH2 0x111
0x10c JUMPI
---
0x105: JUMPDEST 
0x106: V68 = CALLVALUE
0x108: V69 = ISZERO V68
0x109: V70 = 0x111
0x10c: JUMPI 0x111 V69
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V68]
Exit stack: [V11, V68]

================================

Block 0x10d
[0x10d:0x110]
---
Predecessors: [0x105]
Successors: []
---
0x10d PUSH1 0x0
0x10f DUP1
0x110 REVERT
---
0x10d: V71 = 0x0
0x110: REVERT 0x0 0x0
---
Entry stack: [V11, V68]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V68]

================================

Block 0x111
[0x111:0x119]
---
Predecessors: [0x105]
Successors: [0x44f]
---
0x111 JUMPDEST
0x112 POP
0x113 PUSH2 0x11a
0x116 PUSH2 0x44f
0x119 JUMP
---
0x111: JUMPDEST 
0x113: V72 = 0x11a
0x116: V73 = 0x44f
0x119: JUMP 0x44f
---
Entry stack: [V11, V68]
Stack pops: 1
Stack additions: [0x11a]
Exit stack: [V11, 0x11a]

================================

Block 0x11a
[0x11a:0x13b]
---
Predecessors: [0x4d5]
Successors: [0x13c]
---
0x11a JUMPDEST
0x11b PUSH1 0x40
0x11d DUP1
0x11e MLOAD
0x11f PUSH1 0x20
0x121 DUP1
0x122 DUP3
0x123 MSTORE
0x124 DUP4
0x125 MLOAD
0x126 DUP2
0x127 DUP4
0x128 ADD
0x129 MSTORE
0x12a DUP4
0x12b MLOAD
0x12c SWAP2
0x12d SWAP3
0x12e DUP4
0x12f SWAP3
0x130 SWAP1
0x131 DUP4
0x132 ADD
0x133 SWAP2
0x134 DUP6
0x135 ADD
0x136 SWAP1
0x137 DUP1
0x138 DUP4
0x139 DUP4
0x13a PUSH1 0x0
---
0x11a: JUMPDEST 
0x11b: V74 = 0x40
0x11e: V75 = M[0x40]
0x11f: V76 = 0x20
0x123: M[V75] = 0x20
0x125: V77 = M[S0]
0x128: V78 = ADD V75 0x20
0x129: M[V78] = V77
0x12b: V79 = M[S0]
0x132: V80 = ADD V75 0x40
0x135: V81 = ADD S0 0x20
0x13a: V82 = 0x0
---
Entry stack: [V11, 0x11a, S0]
Stack pops: 1
Stack additions: [S0, V75, V75, V80, V81, V79, V79, V80, V81, 0x0]
Exit stack: [V11, 0x11a, S0, V75, V75, V80, V81, V79, V79, V80, V81, 0x0]

================================

Block 0x13c
[0x13c:0x144]
---
Predecessors: [0x11a, 0x145]
Successors: [0x145, 0x154]
---
0x13c JUMPDEST
0x13d DUP4
0x13e DUP2
0x13f LT
0x140 ISZERO
0x141 PUSH2 0x154
0x144 JUMPI
---
0x13c: JUMPDEST 
0x13f: V83 = LT S0 V79
0x140: V84 = ISZERO V83
0x141: V85 = 0x154
0x144: JUMPI 0x154 V84
---
Entry stack: [V11, 0x11a, S9, V75, V75, V80, V81, V79, V79, V80, V81, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x11a, S9, V75, V75, V80, V81, V79, V79, V80, V81, S0]

================================

Block 0x145
[0x145:0x153]
---
Predecessors: [0x13c]
Successors: [0x13c]
---
0x145 DUP2
0x146 DUP2
0x147 ADD
0x148 MLOAD
0x149 DUP4
0x14a DUP3
0x14b ADD
0x14c MSTORE
0x14d PUSH1 0x20
0x14f ADD
0x150 PUSH2 0x13c
0x153 JUMP
---
0x147: V86 = ADD S0 V81
0x148: V87 = M[V86]
0x14b: V88 = ADD S0 V80
0x14c: M[V88] = V87
0x14d: V89 = 0x20
0x14f: V90 = ADD 0x20 S0
0x150: V91 = 0x13c
0x153: JUMP 0x13c
---
Entry stack: [V11, 0x11a, S9, V75, V75, V80, V81, V79, V79, V80, V81, S0]
Stack pops: 3
Stack additions: [S2, S1, V90]
Exit stack: [V11, 0x11a, S9, V75, V75, V80, V81, V79, V79, V80, V81, V90]

================================

Block 0x154
[0x154:0x167]
---
Predecessors: [0x13c]
Successors: [0x168, 0x181]
---
0x154 JUMPDEST
0x155 POP
0x156 POP
0x157 POP
0x158 POP
0x159 SWAP1
0x15a POP
0x15b SWAP1
0x15c DUP2
0x15d ADD
0x15e SWAP1
0x15f PUSH1 0x1f
0x161 AND
0x162 DUP1
0x163 ISZERO
0x164 PUSH2 0x181
0x167 JUMPI
---
0x154: JUMPDEST 
0x15d: V92 = ADD V79 V80
0x15f: V93 = 0x1f
0x161: V94 = AND 0x1f V79
0x163: V95 = ISZERO V94
0x164: V96 = 0x181
0x167: JUMPI 0x181 V95
---
Entry stack: [V11, 0x11a, S9, V75, V75, V80, V81, V79, V79, V80, V81, S0]
Stack pops: 7
Stack additions: [V92, V94]
Exit stack: [V11, 0x11a, S9, V75, V75, V92, V94]

================================

Block 0x168
[0x168:0x180]
---
Predecessors: [0x154]
Successors: [0x181]
---
0x168 DUP1
0x169 DUP3
0x16a SUB
0x16b DUP1
0x16c MLOAD
0x16d PUSH1 0x1
0x16f DUP4
0x170 PUSH1 0x20
0x172 SUB
0x173 PUSH2 0x100
0x176 EXP
0x177 SUB
0x178 NOT
0x179 AND
0x17a DUP2
0x17b MSTORE
0x17c PUSH1 0x20
0x17e ADD
0x17f SWAP2
0x180 POP
---
0x16a: V97 = SUB V92 V94
0x16c: V98 = M[V97]
0x16d: V99 = 0x1
0x170: V100 = 0x20
0x172: V101 = SUB 0x20 V94
0x173: V102 = 0x100
0x176: V103 = EXP 0x100 V101
0x177: V104 = SUB V103 0x1
0x178: V105 = NOT V104
0x179: V106 = AND V105 V98
0x17b: M[V97] = V106
0x17c: V107 = 0x20
0x17e: V108 = ADD 0x20 V97
---
Entry stack: [V11, 0x11a, S4, V75, V75, V92, V94]
Stack pops: 2
Stack additions: [V108, S0]
Exit stack: [V11, 0x11a, S4, V75, V75, V108, V94]

================================

Block 0x181
[0x181:0x18e]
---
Predecessors: [0x154, 0x168]
Successors: []
---
0x181 JUMPDEST
0x182 POP
0x183 SWAP3
0x184 POP
0x185 POP
0x186 POP
0x187 PUSH1 0x40
0x189 MLOAD
0x18a DUP1
0x18b SWAP2
0x18c SUB
0x18d SWAP1
0x18e RETURN
---
0x181: JUMPDEST 
0x187: V109 = 0x40
0x189: V110 = M[0x40]
0x18c: V111 = SUB S1 V110
0x18e: RETURN V110 V111
---
Entry stack: [V11, 0x11a, S4, V75, V75, S1, V94]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x11a]

================================

Block 0x18f
[0x18f:0x196]
---
Predecessors: [0x40]
Successors: [0x197, 0x19b]
---
0x18f JUMPDEST
0x190 CALLVALUE
0x191 DUP1
0x192 ISZERO
0x193 PUSH2 0x19b
0x196 JUMPI
---
0x18f: JUMPDEST 
0x190: V112 = CALLVALUE
0x192: V113 = ISZERO V112
0x193: V114 = 0x19b
0x196: JUMPI 0x19b V113
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V112]
Exit stack: [V11, V112]

================================

Block 0x197
[0x197:0x19a]
---
Predecessors: [0x18f]
Successors: []
---
0x197 PUSH1 0x0
0x199 DUP1
0x19a REVERT
---
0x197: V115 = 0x0
0x19a: REVERT 0x0 0x0
---
Entry stack: [V11, V112]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V112]

================================

Block 0x19b
[0x19b:0x1b2]
---
Predecessors: [0x18f]
Successors: [0x4dd]
---
0x19b JUMPDEST
0x19c POP
0x19d PUSH2 0x1b3
0x1a0 PUSH1 0x1
0x1a2 PUSH1 0xa0
0x1a4 PUSH1 0x2
0x1a6 EXP
0x1a7 SUB
0x1a8 PUSH1 0x4
0x1aa CALLDATALOAD
0x1ab AND
0x1ac PUSH1 0x24
0x1ae CALLDATALOAD
0x1af PUSH2 0x4dd
0x1b2 JUMP
---
0x19b: JUMPDEST 
0x19d: V116 = 0x1b3
0x1a0: V117 = 0x1
0x1a2: V118 = 0xa0
0x1a4: V119 = 0x2
0x1a6: V120 = EXP 0x2 0xa0
0x1a7: V121 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a8: V122 = 0x4
0x1aa: V123 = CALLDATALOAD 0x4
0x1ab: V124 = AND V123 0xffffffffffffffffffffffffffffffffffffffff
0x1ac: V125 = 0x24
0x1ae: V126 = CALLDATALOAD 0x24
0x1af: V127 = 0x4dd
0x1b2: JUMP 0x4dd
---
Entry stack: [V11, V112]
Stack pops: 1
Stack additions: [0x1b3, V124, V126]
Exit stack: [V11, 0x1b3, V124, V126]

================================

Block 0x1b3
[0x1b3:0x1c6]
---
Predecessors: [0x52e, 0x6ad, 0x973]
Successors: []
---
0x1b3 JUMPDEST
0x1b4 PUSH1 0x40
0x1b6 DUP1
0x1b7 MLOAD
0x1b8 SWAP2
0x1b9 ISZERO
0x1ba ISZERO
0x1bb DUP3
0x1bc MSTORE
0x1bd MLOAD
0x1be SWAP1
0x1bf DUP2
0x1c0 SWAP1
0x1c1 SUB
0x1c2 PUSH1 0x20
0x1c4 ADD
0x1c5 SWAP1
0x1c6 RETURN
---
0x1b3: JUMPDEST 
0x1b4: V128 = 0x40
0x1b7: V129 = M[0x40]
0x1b9: V130 = ISZERO 0x1
0x1ba: V131 = ISZERO 0x0
0x1bc: M[V129] = 0x1
0x1bd: V132 = M[0x40]
0x1c1: V133 = SUB V129 V132
0x1c2: V134 = 0x20
0x1c4: V135 = ADD 0x20 V133
0x1c6: RETURN V132 V135
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1c7
[0x1c7:0x1ce]
---
Predecessors: [0x4b]
Successors: [0x1cf, 0x1d3]
---
0x1c7 JUMPDEST
0x1c8 CALLVALUE
0x1c9 DUP1
0x1ca ISZERO
0x1cb PUSH2 0x1d3
0x1ce JUMPI
---
0x1c7: JUMPDEST 
0x1c8: V136 = CALLVALUE
0x1ca: V137 = ISZERO V136
0x1cb: V138 = 0x1d3
0x1ce: JUMPI 0x1d3 V137
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V136]
Exit stack: [V11, V136]

================================

Block 0x1cf
[0x1cf:0x1d2]
---
Predecessors: [0x1c7]
Successors: []
---
0x1cf PUSH1 0x0
0x1d1 DUP1
0x1d2 REVERT
---
0x1cf: V139 = 0x0
0x1d2: REVERT 0x0 0x0
---
Entry stack: [V11, V136]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V136]

================================

Block 0x1d3
[0x1d3:0x1db]
---
Predecessors: [0x1c7]
Successors: [0x596]
---
0x1d3 JUMPDEST
0x1d4 POP
0x1d5 PUSH2 0x1dc
0x1d8 PUSH2 0x596
0x1db JUMP
---
0x1d3: JUMPDEST 
0x1d5: V140 = 0x1dc
0x1d8: V141 = 0x596
0x1db: JUMP 0x596
---
Entry stack: [V11, V136]
Stack pops: 1
Stack additions: [0x1dc]
Exit stack: [V11, 0x1dc]

================================

Block 0x1dc
[0x1dc:0x1ed]
---
Predecessors: [0x596, 0x835, 0x98c]
Successors: []
---
0x1dc JUMPDEST
0x1dd PUSH1 0x40
0x1df DUP1
0x1e0 MLOAD
0x1e1 SWAP2
0x1e2 DUP3
0x1e3 MSTORE
0x1e4 MLOAD
0x1e5 SWAP1
0x1e6 DUP2
0x1e7 SWAP1
0x1e8 SUB
0x1e9 PUSH1 0x20
0x1eb ADD
0x1ec SWAP1
0x1ed RETURN
---
0x1dc: JUMPDEST 
0x1dd: V142 = 0x40
0x1e0: V143 = M[0x40]
0x1e3: M[V143] = S0
0x1e4: V144 = M[0x40]
0x1e8: V145 = SUB V143 V144
0x1e9: V146 = 0x20
0x1eb: V147 = ADD 0x20 V145
0x1ed: RETURN V144 V147
---
Entry stack: [V11, 0x1dc, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1dc]

================================

Block 0x1ee
[0x1ee:0x1f5]
---
Predecessors: [0x56]
Successors: [0x1f6, 0x1fa]
---
0x1ee JUMPDEST
0x1ef CALLVALUE
0x1f0 DUP1
0x1f1 ISZERO
0x1f2 PUSH2 0x1fa
0x1f5 JUMPI
---
0x1ee: JUMPDEST 
0x1ef: V148 = CALLVALUE
0x1f1: V149 = ISZERO V148
0x1f2: V150 = 0x1fa
0x1f5: JUMPI 0x1fa V149
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V148]
Exit stack: [V11, V148]

================================

Block 0x1f6
[0x1f6:0x1f9]
---
Predecessors: [0x1ee]
Successors: []
---
0x1f6 PUSH1 0x0
0x1f8 DUP1
0x1f9 REVERT
---
0x1f6: V151 = 0x0
0x1f9: REVERT 0x0 0x0
---
Entry stack: [V11, V148]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V148]

================================

Block 0x1fa
[0x1fa:0x211]
---
Predecessors: [0x1ee]
Successors: [0x59c]
---
0x1fa JUMPDEST
0x1fb POP
0x1fc PUSH2 0x103
0x1ff PUSH1 0x1
0x201 PUSH1 0xa0
0x203 PUSH1 0x2
0x205 EXP
0x206 SUB
0x207 PUSH1 0x4
0x209 CALLDATALOAD
0x20a AND
0x20b PUSH1 0x24
0x20d CALLDATALOAD
0x20e PUSH2 0x59c
0x211 JUMP
---
0x1fa: JUMPDEST 
0x1fc: V152 = 0x103
0x1ff: V153 = 0x1
0x201: V154 = 0xa0
0x203: V155 = 0x2
0x205: V156 = EXP 0x2 0xa0
0x206: V157 = SUB 0x10000000000000000000000000000000000000000 0x1
0x207: V158 = 0x4
0x209: V159 = CALLDATALOAD 0x4
0x20a: V160 = AND V159 0xffffffffffffffffffffffffffffffffffffffff
0x20b: V161 = 0x24
0x20d: V162 = CALLDATALOAD 0x24
0x20e: V163 = 0x59c
0x211: JUMP 0x59c
---
Entry stack: [V11, V148]
Stack pops: 1
Stack additions: [0x103, V160, V162]
Exit stack: [V11, 0x103, V160, V162]

================================

Block 0x212
[0x212:0x219]
---
Predecessors: [0x61]
Successors: [0x21a, 0x21e]
---
0x212 JUMPDEST
0x213 CALLVALUE
0x214 DUP1
0x215 ISZERO
0x216 PUSH2 0x21e
0x219 JUMPI
---
0x212: JUMPDEST 
0x213: V164 = CALLVALUE
0x215: V165 = ISZERO V164
0x216: V166 = 0x21e
0x219: JUMPI 0x21e V165
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V164]
Exit stack: [V11, V164]

================================

Block 0x21a
[0x21a:0x21d]
---
Predecessors: [0x212]
Successors: []
---
0x21a PUSH1 0x0
0x21c DUP1
0x21d REVERT
---
0x21a: V167 = 0x0
0x21d: REVERT 0x0 0x0
---
Entry stack: [V11, V164]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V164]

================================

Block 0x21e
[0x21e:0x23b]
---
Predecessors: [0x212]
Successors: [0x681]
---
0x21e JUMPDEST
0x21f POP
0x220 PUSH2 0x1b3
0x223 PUSH1 0x1
0x225 PUSH1 0xa0
0x227 PUSH1 0x2
0x229 EXP
0x22a SUB
0x22b PUSH1 0x4
0x22d CALLDATALOAD
0x22e DUP2
0x22f AND
0x230 SWAP1
0x231 PUSH1 0x24
0x233 CALLDATALOAD
0x234 AND
0x235 PUSH1 0x44
0x237 CALLDATALOAD
0x238 PUSH2 0x681
0x23b JUMP
---
0x21e: JUMPDEST 
0x220: V168 = 0x1b3
0x223: V169 = 0x1
0x225: V170 = 0xa0
0x227: V171 = 0x2
0x229: V172 = EXP 0x2 0xa0
0x22a: V173 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22b: V174 = 0x4
0x22d: V175 = CALLDATALOAD 0x4
0x22f: V176 = AND 0xffffffffffffffffffffffffffffffffffffffff V175
0x231: V177 = 0x24
0x233: V178 = CALLDATALOAD 0x24
0x234: V179 = AND V178 0xffffffffffffffffffffffffffffffffffffffff
0x235: V180 = 0x44
0x237: V181 = CALLDATALOAD 0x44
0x238: V182 = 0x681
0x23b: JUMP 0x681
---
Entry stack: [V11, V164]
Stack pops: 1
Stack additions: [0x1b3, V176, V179, V181]
Exit stack: [V11, 0x1b3, V176, V179, V181]

================================

Block 0x23c
[0x23c:0x243]
---
Predecessors: [0x6c]
Successors: [0x244, 0x248]
---
0x23c JUMPDEST
0x23d CALLVALUE
0x23e DUP1
0x23f ISZERO
0x240 PUSH2 0x248
0x243 JUMPI
---
0x23c: JUMPDEST 
0x23d: V183 = CALLVALUE
0x23f: V184 = ISZERO V183
0x240: V185 = 0x248
0x243: JUMPI 0x248 V184
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V183]
Exit stack: [V11, V183]

================================

Block 0x244
[0x244:0x247]
---
Predecessors: [0x23c]
Successors: []
---
0x244 PUSH1 0x0
0x246 DUP1
0x247 REVERT
---
0x244: V186 = 0x0
0x247: REVERT 0x0 0x0
---
Entry stack: [V11, V183]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V183]

================================

Block 0x248
[0x248:0x253]
---
Predecessors: [0x23c]
Successors: [0x6b8]
---
0x248 JUMPDEST
0x249 POP
0x24a PUSH2 0x103
0x24d PUSH1 0x4
0x24f CALLDATALOAD
0x250 PUSH2 0x6b8
0x253 JUMP
---
0x248: JUMPDEST 
0x24a: V187 = 0x103
0x24d: V188 = 0x4
0x24f: V189 = CALLDATALOAD 0x4
0x250: V190 = 0x6b8
0x253: JUMP 0x6b8
---
Entry stack: [V11, V183]
Stack pops: 1
Stack additions: [0x103, V189]
Exit stack: [V11, 0x103, V189]

================================

Block 0x254
[0x254:0x25b]
---
Predecessors: [0x77]
Successors: [0x25c, 0x260]
---
0x254 JUMPDEST
0x255 CALLVALUE
0x256 DUP1
0x257 ISZERO
0x258 PUSH2 0x260
0x25b JUMPI
---
0x254: JUMPDEST 
0x255: V191 = CALLVALUE
0x257: V192 = ISZERO V191
0x258: V193 = 0x260
0x25b: JUMPI 0x260 V192
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V191]
Exit stack: [V11, V191]

================================

Block 0x25c
[0x25c:0x25f]
---
Predecessors: [0x254]
Successors: []
---
0x25c PUSH1 0x0
0x25e DUP1
0x25f REVERT
---
0x25c: V194 = 0x0
0x25f: REVERT 0x0 0x0
---
Entry stack: [V11, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V191]

================================

Block 0x260
[0x260:0x268]
---
Predecessors: [0x254]
Successors: [0x6c5]
---
0x260 JUMPDEST
0x261 POP
0x262 PUSH2 0x269
0x265 PUSH2 0x6c5
0x268 JUMP
---
0x260: JUMPDEST 
0x262: V195 = 0x269
0x265: V196 = 0x6c5
0x268: JUMP 0x6c5
---
Entry stack: [V11, V191]
Stack pops: 1
Stack additions: [0x269]
Exit stack: [V11, 0x269]

================================

Block 0x269
[0x269:0x27e]
---
Predecessors: [0x6c5]
Successors: []
---
0x269 JUMPDEST
0x26a PUSH1 0x40
0x26c DUP1
0x26d MLOAD
0x26e PUSH1 0xff
0x270 SWAP1
0x271 SWAP3
0x272 AND
0x273 DUP3
0x274 MSTORE
0x275 MLOAD
0x276 SWAP1
0x277 DUP2
0x278 SWAP1
0x279 SUB
0x27a PUSH1 0x20
0x27c ADD
0x27d SWAP1
0x27e RETURN
---
0x269: JUMPDEST 
0x26a: V197 = 0x40
0x26d: V198 = M[0x40]
0x26e: V199 = 0xff
0x272: V200 = AND V570 0xff
0x274: M[V198] = V200
0x275: V201 = M[0x40]
0x279: V202 = SUB V198 V201
0x27a: V203 = 0x20
0x27c: V204 = ADD 0x20 V202
0x27e: RETURN V201 V204
---
Entry stack: [V11, 0x269, V570]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x269]

================================

Block 0x27f
[0x27f:0x286]
---
Predecessors: [0x82]
Successors: [0x287, 0x28b]
---
0x27f JUMPDEST
0x280 CALLVALUE
0x281 DUP1
0x282 ISZERO
0x283 PUSH2 0x28b
0x286 JUMPI
---
0x27f: JUMPDEST 
0x280: V205 = CALLVALUE
0x282: V206 = ISZERO V205
0x283: V207 = 0x28b
0x286: JUMPI 0x28b V206
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V205]
Exit stack: [V11, V205]

================================

Block 0x287
[0x287:0x28a]
---
Predecessors: [0x27f]
Successors: []
---
0x287 PUSH1 0x0
0x289 DUP1
0x28a REVERT
---
0x287: V208 = 0x0
0x28a: REVERT 0x0 0x0
---
Entry stack: [V11, V205]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V205]

================================

Block 0x28b
[0x28b:0x293]
---
Predecessors: [0x27f]
Successors: [0x6ce]
---
0x28b JUMPDEST
0x28c POP
0x28d PUSH2 0x11a
0x290 PUSH2 0x6ce
0x293 JUMP
---
0x28b: JUMPDEST 
0x28d: V209 = 0x11a
0x290: V210 = 0x6ce
0x293: JUMP 0x6ce
---
Entry stack: [V11, V205]
Stack pops: 1
Stack additions: [0x11a]
Exit stack: [V11, 0x11a]

================================

Block 0x294
[0x294:0x29b]
---
Predecessors: [0x8d]
Successors: [0x29c, 0x2a0]
---
0x294 JUMPDEST
0x295 CALLVALUE
0x296 DUP1
0x297 ISZERO
0x298 PUSH2 0x2a0
0x29b JUMPI
---
0x294: JUMPDEST 
0x295: V211 = CALLVALUE
0x297: V212 = ISZERO V211
0x298: V213 = 0x2a0
0x29b: JUMPI 0x2a0 V212
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V211]
Exit stack: [V11, V211]

================================

Block 0x29c
[0x29c:0x29f]
---
Predecessors: [0x294]
Successors: []
---
0x29c PUSH1 0x0
0x29e DUP1
0x29f REVERT
---
0x29c: V214 = 0x0
0x29f: REVERT 0x0 0x0
---
Entry stack: [V11, V211]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V211]

================================

Block 0x2a0
[0x2a0:0x2bd]
---
Predecessors: [0x294]
Successors: [0x726]
---
0x2a0 JUMPDEST
0x2a1 POP
0x2a2 PUSH2 0x103
0x2a5 PUSH1 0x1
0x2a7 PUSH1 0xa0
0x2a9 PUSH1 0x2
0x2ab EXP
0x2ac SUB
0x2ad PUSH1 0x4
0x2af CALLDATALOAD
0x2b0 DUP2
0x2b1 AND
0x2b2 SWAP1
0x2b3 PUSH1 0x24
0x2b5 CALLDATALOAD
0x2b6 AND
0x2b7 PUSH1 0x44
0x2b9 CALLDATALOAD
0x2ba PUSH2 0x726
0x2bd JUMP
---
0x2a0: JUMPDEST 
0x2a2: V215 = 0x103
0x2a5: V216 = 0x1
0x2a7: V217 = 0xa0
0x2a9: V218 = 0x2
0x2ab: V219 = EXP 0x2 0xa0
0x2ac: V220 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ad: V221 = 0x4
0x2af: V222 = CALLDATALOAD 0x4
0x2b1: V223 = AND 0xffffffffffffffffffffffffffffffffffffffff V222
0x2b3: V224 = 0x24
0x2b5: V225 = CALLDATALOAD 0x24
0x2b6: V226 = AND V225 0xffffffffffffffffffffffffffffffffffffffff
0x2b7: V227 = 0x44
0x2b9: V228 = CALLDATALOAD 0x44
0x2ba: V229 = 0x726
0x2bd: JUMP 0x726
---
Entry stack: [V11, V211]
Stack pops: 1
Stack additions: [0x103, V223, V226, V228]
Exit stack: [V11, 0x103, V223, V226, V228]

================================

Block 0x2be
[0x2be:0x2c5]
---
Predecessors: [0x98]
Successors: [0x2c6, 0x2ca]
---
0x2be JUMPDEST
0x2bf CALLVALUE
0x2c0 DUP1
0x2c1 ISZERO
0x2c2 PUSH2 0x2ca
0x2c5 JUMPI
---
0x2be: JUMPDEST 
0x2bf: V230 = CALLVALUE
0x2c1: V231 = ISZERO V230
0x2c2: V232 = 0x2ca
0x2c5: JUMPI 0x2ca V231
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V230]
Exit stack: [V11, V230]

================================

Block 0x2c6
[0x2c6:0x2c9]
---
Predecessors: [0x2be]
Successors: []
---
0x2c6 PUSH1 0x0
0x2c8 DUP1
0x2c9 REVERT
---
0x2c6: V233 = 0x0
0x2c9: REVERT 0x0 0x0
---
Entry stack: [V11, V230]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V230]

================================

Block 0x2ca
[0x2ca:0x2de]
---
Predecessors: [0x2be]
Successors: [0x835]
---
0x2ca JUMPDEST
0x2cb POP
0x2cc PUSH2 0x1dc
0x2cf PUSH1 0x1
0x2d1 PUSH1 0xa0
0x2d3 PUSH1 0x2
0x2d5 EXP
0x2d6 SUB
0x2d7 PUSH1 0x4
0x2d9 CALLDATALOAD
0x2da AND
0x2db PUSH2 0x835
0x2de JUMP
---
0x2ca: JUMPDEST 
0x2cc: V234 = 0x1dc
0x2cf: V235 = 0x1
0x2d1: V236 = 0xa0
0x2d3: V237 = 0x2
0x2d5: V238 = EXP 0x2 0xa0
0x2d6: V239 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d7: V240 = 0x4
0x2d9: V241 = CALLDATALOAD 0x4
0x2da: V242 = AND V241 0xffffffffffffffffffffffffffffffffffffffff
0x2db: V243 = 0x835
0x2de: JUMP 0x835
---
Entry stack: [V11, V230]
Stack pops: 1
Stack additions: [0x1dc, V242]
Exit stack: [V11, 0x1dc, V242]

================================

Block 0x2df
[0x2df:0x2e6]
---
Predecessors: [0xa3]
Successors: [0x2e7, 0x2eb]
---
0x2df JUMPDEST
0x2e0 CALLVALUE
0x2e1 DUP1
0x2e2 ISZERO
0x2e3 PUSH2 0x2eb
0x2e6 JUMPI
---
0x2df: JUMPDEST 
0x2e0: V244 = CALLVALUE
0x2e2: V245 = ISZERO V244
0x2e3: V246 = 0x2eb
0x2e6: JUMPI 0x2eb V245
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V244]
Exit stack: [V11, V244]

================================

Block 0x2e7
[0x2e7:0x2ea]
---
Predecessors: [0x2df]
Successors: []
---
0x2e7 PUSH1 0x0
0x2e9 DUP1
0x2ea REVERT
---
0x2e7: V247 = 0x0
0x2ea: REVERT 0x0 0x0
---
Entry stack: [V11, V244]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V244]

================================

Block 0x2eb
[0x2eb:0x2f3]
---
Predecessors: [0x2df]
Successors: [0x847]
---
0x2eb JUMPDEST
0x2ec POP
0x2ed PUSH2 0x103
0x2f0 PUSH2 0x847
0x2f3 JUMP
---
0x2eb: JUMPDEST 
0x2ed: V248 = 0x103
0x2f0: V249 = 0x847
0x2f3: JUMP 0x847
---
Entry stack: [V11, V244]
Stack pops: 1
Stack additions: [0x103]
Exit stack: [V11, 0x103]

================================

Block 0x2f4
[0x2f4:0x2fb]
---
Predecessors: [0xae]
Successors: [0x2fc, 0x300]
---
0x2f4 JUMPDEST
0x2f5 CALLVALUE
0x2f6 DUP1
0x2f7 ISZERO
0x2f8 PUSH2 0x300
0x2fb JUMPI
---
0x2f4: JUMPDEST 
0x2f5: V250 = CALLVALUE
0x2f7: V251 = ISZERO V250
0x2f8: V252 = 0x300
0x2fb: JUMPI 0x300 V251
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V250]
Exit stack: [V11, V250]

================================

Block 0x2fc
[0x2fc:0x2ff]
---
Predecessors: [0x2f4]
Successors: []
---
0x2fc PUSH1 0x0
0x2fe DUP1
0x2ff REVERT
---
0x2fc: V253 = 0x0
0x2ff: REVERT 0x0 0x0
---
Entry stack: [V11, V250]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V250]

================================

Block 0x300
[0x300:0x308]
---
Predecessors: [0x2f4]
Successors: [0x8de]
---
0x300 JUMPDEST
0x301 POP
0x302 PUSH2 0x309
0x305 PUSH2 0x8de
0x308 JUMP
---
0x300: JUMPDEST 
0x302: V254 = 0x309
0x305: V255 = 0x8de
0x308: JUMP 0x8de
---
Entry stack: [V11, V250]
Stack pops: 1
Stack additions: [0x309]
Exit stack: [V11, 0x309]

================================

Block 0x309
[0x309:0x324]
---
Predecessors: [0x8de, 0x97d]
Successors: []
---
0x309 JUMPDEST
0x30a PUSH1 0x40
0x30c DUP1
0x30d MLOAD
0x30e PUSH1 0x1
0x310 PUSH1 0xa0
0x312 PUSH1 0x2
0x314 EXP
0x315 SUB
0x316 SWAP1
0x317 SWAP3
0x318 AND
0x319 DUP3
0x31a MSTORE
0x31b MLOAD
0x31c SWAP1
0x31d DUP2
0x31e SWAP1
0x31f SUB
0x320 PUSH1 0x20
0x322 ADD
0x323 SWAP1
0x324 RETURN
---
0x309: JUMPDEST 
0x30a: V256 = 0x40
0x30d: V257 = M[0x40]
0x30e: V258 = 0x1
0x310: V259 = 0xa0
0x312: V260 = 0x2
0x314: V261 = EXP 0x2 0xa0
0x315: V262 = SUB 0x10000000000000000000000000000000000000000 0x1
0x318: V263 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x31a: M[V257] = V263
0x31b: V264 = M[0x40]
0x31f: V265 = SUB V257 V264
0x320: V266 = 0x20
0x322: V267 = ADD 0x20 V265
0x324: RETURN V264 V267
---
Entry stack: [V11, 0x309, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x309]

================================

Block 0x325
[0x325:0x32c]
---
Predecessors: [0xb9]
Successors: [0x32d, 0x331]
---
0x325 JUMPDEST
0x326 CALLVALUE
0x327 DUP1
0x328 ISZERO
0x329 PUSH2 0x331
0x32c JUMPI
---
0x325: JUMPDEST 
0x326: V268 = CALLVALUE
0x328: V269 = ISZERO V268
0x329: V270 = 0x331
0x32c: JUMPI 0x331 V269
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V268]
Exit stack: [V11, V268]

================================

Block 0x32d
[0x32d:0x330]
---
Predecessors: [0x325]
Successors: []
---
0x32d PUSH1 0x0
0x32f DUP1
0x330 REVERT
---
0x32d: V271 = 0x0
0x330: REVERT 0x0 0x0
---
Entry stack: [V11, V268]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V268]

================================

Block 0x331
[0x331:0x339]
---
Predecessors: [0x325]
Successors: [0x8ed]
---
0x331 JUMPDEST
0x332 POP
0x333 PUSH2 0x11a
0x336 PUSH2 0x8ed
0x339 JUMP
---
0x331: JUMPDEST 
0x333: V272 = 0x11a
0x336: V273 = 0x8ed
0x339: JUMP 0x8ed
---
Entry stack: [V11, V268]
Stack pops: 1
Stack additions: [0x11a]
Exit stack: [V11, 0x11a]

================================

Block 0x33a
[0x33a:0x341]
---
Predecessors: [0xc4]
Successors: [0x342, 0x346]
---
0x33a JUMPDEST
0x33b CALLVALUE
0x33c DUP1
0x33d ISZERO
0x33e PUSH2 0x346
0x341 JUMPI
---
0x33a: JUMPDEST 
0x33b: V274 = CALLVALUE
0x33d: V275 = ISZERO V274
0x33e: V276 = 0x346
0x341: JUMPI 0x346 V275
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V274]
Exit stack: [V11, V274]

================================

Block 0x342
[0x342:0x345]
---
Predecessors: [0x33a]
Successors: []
---
0x342 PUSH1 0x0
0x344 DUP1
0x345 REVERT
---
0x342: V277 = 0x0
0x345: REVERT 0x0 0x0
---
Entry stack: [V11, V274]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V274]

================================

Block 0x346
[0x346:0x35d]
---
Predecessors: [0x33a]
Successors: [0x948]
---
0x346 JUMPDEST
0x347 POP
0x348 PUSH2 0x1b3
0x34b PUSH1 0x1
0x34d PUSH1 0xa0
0x34f PUSH1 0x2
0x351 EXP
0x352 SUB
0x353 PUSH1 0x4
0x355 CALLDATALOAD
0x356 AND
0x357 PUSH1 0x24
0x359 CALLDATALOAD
0x35a PUSH2 0x948
0x35d JUMP
---
0x346: JUMPDEST 
0x348: V278 = 0x1b3
0x34b: V279 = 0x1
0x34d: V280 = 0xa0
0x34f: V281 = 0x2
0x351: V282 = EXP 0x2 0xa0
0x352: V283 = SUB 0x10000000000000000000000000000000000000000 0x1
0x353: V284 = 0x4
0x355: V285 = CALLDATALOAD 0x4
0x356: V286 = AND V285 0xffffffffffffffffffffffffffffffffffffffff
0x357: V287 = 0x24
0x359: V288 = CALLDATALOAD 0x24
0x35a: V289 = 0x948
0x35d: JUMP 0x948
---
Entry stack: [V11, V274]
Stack pops: 1
Stack additions: [0x1b3, V286, V288]
Exit stack: [V11, 0x1b3, V286, V288]

================================

Block 0x35e
[0x35e:0x365]
---
Predecessors: [0xda]
Successors: [0x366, 0x36a]
---
0x35e JUMPDEST
0x35f CALLVALUE
0x360 DUP1
0x361 ISZERO
0x362 PUSH2 0x36a
0x365 JUMPI
---
0x35e: JUMPDEST 
0x35f: V290 = CALLVALUE
0x361: V291 = ISZERO V290
0x362: V292 = 0x36a
0x365: JUMPI 0x36a V291
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V290]
Exit stack: [V11, V290]

================================

Block 0x366
[0x366:0x369]
---
Predecessors: [0x35e]
Successors: []
---
0x366 PUSH1 0x0
0x368 DUP1
0x369 REVERT
---
0x366: V293 = 0x0
0x369: REVERT 0x0 0x0
---
Entry stack: [V11, V290]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V290]

================================

Block 0x36a
[0x36a:0x372]
---
Predecessors: [0x35e]
Successors: [0x97d]
---
0x36a JUMPDEST
0x36b POP
0x36c PUSH2 0x309
0x36f PUSH2 0x97d
0x372 JUMP
---
0x36a: JUMPDEST 
0x36c: V294 = 0x309
0x36f: V295 = 0x97d
0x372: JUMP 0x97d
---
Entry stack: [V11, V290]
Stack pops: 1
Stack additions: [0x309]
Exit stack: [V11, 0x309]

================================

Block 0x373
[0x373:0x37a]
---
Predecessors: [0xe5]
Successors: [0x37b, 0x37f]
---
0x373 JUMPDEST
0x374 CALLVALUE
0x375 DUP1
0x376 ISZERO
0x377 PUSH2 0x37f
0x37a JUMPI
---
0x373: JUMPDEST 
0x374: V296 = CALLVALUE
0x376: V297 = ISZERO V296
0x377: V298 = 0x37f
0x37a: JUMPI 0x37f V297
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V296]
Exit stack: [V11, V296]

================================

Block 0x37b
[0x37b:0x37e]
---
Predecessors: [0x373]
Successors: []
---
0x37b PUSH1 0x0
0x37d DUP1
0x37e REVERT
---
0x37b: V299 = 0x0
0x37e: REVERT 0x0 0x0
---
Entry stack: [V11, V296]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V296]

================================

Block 0x37f
[0x37f:0x399]
---
Predecessors: [0x373]
Successors: [0x98c]
---
0x37f JUMPDEST
0x380 POP
0x381 PUSH2 0x1dc
0x384 PUSH1 0x1
0x386 PUSH1 0xa0
0x388 PUSH1 0x2
0x38a EXP
0x38b SUB
0x38c PUSH1 0x4
0x38e CALLDATALOAD
0x38f DUP2
0x390 AND
0x391 SWAP1
0x392 PUSH1 0x24
0x394 CALLDATALOAD
0x395 AND
0x396 PUSH2 0x98c
0x399 JUMP
---
0x37f: JUMPDEST 
0x381: V300 = 0x1dc
0x384: V301 = 0x1
0x386: V302 = 0xa0
0x388: V303 = 0x2
0x38a: V304 = EXP 0x2 0xa0
0x38b: V305 = SUB 0x10000000000000000000000000000000000000000 0x1
0x38c: V306 = 0x4
0x38e: V307 = CALLDATALOAD 0x4
0x390: V308 = AND 0xffffffffffffffffffffffffffffffffffffffff V307
0x392: V309 = 0x24
0x394: V310 = CALLDATALOAD 0x24
0x395: V311 = AND V310 0xffffffffffffffffffffffffffffffffffffffff
0x396: V312 = 0x98c
0x399: JUMP 0x98c
---
Entry stack: [V11, V296]
Stack pops: 1
Stack additions: [0x1dc, V308, V311]
Exit stack: [V11, 0x1dc, V308, V311]

================================

Block 0x39a
[0x39a:0x3a1]
---
Predecessors: [0xf0]
Successors: [0x3a2, 0x3a6]
---
0x39a JUMPDEST
0x39b CALLVALUE
0x39c DUP1
0x39d ISZERO
0x39e PUSH2 0x3a6
0x3a1 JUMPI
---
0x39a: JUMPDEST 
0x39b: V313 = CALLVALUE
0x39d: V314 = ISZERO V313
0x39e: V315 = 0x3a6
0x3a1: JUMPI 0x3a6 V314
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V313]
Exit stack: [V11, V313]

================================

Block 0x3a2
[0x3a2:0x3a5]
---
Predecessors: [0x39a]
Successors: []
---
0x3a2 PUSH1 0x0
0x3a4 DUP1
0x3a5 REVERT
---
0x3a2: V316 = 0x0
0x3a5: REVERT 0x0 0x0
---
Entry stack: [V11, V313]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V313]

================================

Block 0x3a6
[0x3a6:0x3ba]
---
Predecessors: [0x39a]
Successors: [0x9a9]
---
0x3a6 JUMPDEST
0x3a7 POP
0x3a8 PUSH2 0x103
0x3ab PUSH1 0x1
0x3ad PUSH1 0xa0
0x3af PUSH1 0x2
0x3b1 EXP
0x3b2 SUB
0x3b3 PUSH1 0x4
0x3b5 CALLDATALOAD
0x3b6 AND
0x3b7 PUSH2 0x9a9
0x3ba JUMP
---
0x3a6: JUMPDEST 
0x3a8: V317 = 0x103
0x3ab: V318 = 0x1
0x3ad: V319 = 0xa0
0x3af: V320 = 0x2
0x3b1: V321 = EXP 0x2 0xa0
0x3b2: V322 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b3: V323 = 0x4
0x3b5: V324 = CALLDATALOAD 0x4
0x3b6: V325 = AND V324 0xffffffffffffffffffffffffffffffffffffffff
0x3b7: V326 = 0x9a9
0x3ba: JUMP 0x9a9
---
Entry stack: [V11, V313]
Stack pops: 1
Stack additions: [0x103, V325]
Exit stack: [V11, 0x103, V325]

================================

Block 0x3bb
[0x3bb:0x3d4]
---
Predecessors: [0xfb]
Successors: [0xa07]
---
0x3bb JUMPDEST
0x3bc CALLER
0x3bd PUSH1 0x0
0x3bf SWAP1
0x3c0 DUP2
0x3c1 MSTORE
0x3c2 PUSH1 0x7
0x3c4 PUSH1 0x20
0x3c6 MSTORE
0x3c7 PUSH1 0x40
0x3c9 SWAP1
0x3ca SHA3
0x3cb SLOAD
0x3cc PUSH2 0x3d5
0x3cf SWAP1
0x3d0 CALLVALUE
0x3d1 PUSH2 0xa07
0x3d4 JUMP
---
0x3bb: JUMPDEST 
0x3bc: V327 = CALLER
0x3bd: V328 = 0x0
0x3c1: M[0x0] = V327
0x3c2: V329 = 0x7
0x3c4: V330 = 0x20
0x3c6: M[0x20] = 0x7
0x3c7: V331 = 0x40
0x3ca: V332 = SHA3 0x0 0x40
0x3cb: V333 = S[V332]
0x3cc: V334 = 0x3d5
0x3d0: V335 = CALLVALUE
0x3d1: V336 = 0xa07
0x3d4: JUMP 0xa07
---
Entry stack: [V11, 0x103]
Stack pops: 0
Stack additions: [0x3d5, V333, V335]
Exit stack: [V11, 0x103, 0x3d5, V333, V335]

================================

Block 0x3d5
[0x3d5:0x3f1]
---
Predecessors: [0xa16]
Successors: [0xa07]
---
0x3d5 JUMPDEST
0x3d6 CALLER
0x3d7 PUSH1 0x0
0x3d9 SWAP1
0x3da DUP2
0x3db MSTORE
0x3dc PUSH1 0x7
0x3de PUSH1 0x20
0x3e0 MSTORE
0x3e1 PUSH1 0x40
0x3e3 SWAP1
0x3e4 SHA3
0x3e5 SSTORE
0x3e6 PUSH1 0x6
0x3e8 SLOAD
0x3e9 PUSH2 0x3f2
0x3ec SWAP1
0x3ed CALLVALUE
0x3ee PUSH2 0xa07
0x3f1 JUMP
---
0x3d5: JUMPDEST 
0x3d6: V337 = CALLER
0x3d7: V338 = 0x0
0x3db: M[0x0] = V337
0x3dc: V339 = 0x7
0x3de: V340 = 0x20
0x3e0: M[0x20] = 0x7
0x3e1: V341 = 0x40
0x3e4: V342 = SHA3 0x0 0x40
0x3e5: S[V342] = S0
0x3e6: V343 = 0x6
0x3e8: V344 = S[0x6]
0x3e9: V345 = 0x3f2
0x3ed: V346 = CALLVALUE
0x3ee: V347 = 0xa07
0x3f1: JUMP 0xa07
---
Entry stack: [V11, 0x1b3, V176, S11, S10, S9, S8, {0x0, 0x6a5}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [0x3f2, V344, V346]
Exit stack: [V11, 0x1b3, V176, S11, S10, S9, S8, {0x0, 0x6a5}, S6, S5, S4, S3, S2, S1, 0x3f2, V344, V346]

================================

Block 0x3f2
[0x3f2:0x44e]
---
Predecessors: [0xa16]
Successors: [0x103]
---
0x3f2 JUMPDEST
0x3f3 PUSH1 0x6
0x3f5 SSTORE
0x3f6 PUSH1 0x40
0x3f8 DUP1
0x3f9 MLOAD
0x3fa CALLVALUE
0x3fb DUP2
0x3fc MSTORE
0x3fd SWAP1
0x3fe MLOAD
0x3ff PUSH32 0x9386c90217c323f58030f9dadcbc938f807a940f4ff41cd4cead9562f5da7dc3
0x420 SWAP2
0x421 DUP2
0x422 SWAP1
0x423 SUB
0x424 PUSH1 0x20
0x426 ADD
0x427 SWAP1
0x428 LOG1
0x429 PUSH1 0x40
0x42b DUP1
0x42c MLOAD
0x42d CALLVALUE
0x42e DUP2
0x42f MSTORE
0x430 SWAP1
0x431 MLOAD
0x432 CALLER
0x433 SWAP2
0x434 ADDRESS
0x435 SWAP2
0x436 PUSH1 0x0
0x438 DUP1
0x439 MLOAD
0x43a PUSH1 0x20
0x43c PUSH2 0xbf2
0x43f DUP4
0x440 CODECOPY
0x441 DUP2
0x442 MLOAD
0x443 SWAP2
0x444 MSTORE
0x445 SWAP2
0x446 DUP2
0x447 SWAP1
0x448 SUB
0x449 PUSH1 0x20
0x44b ADD
0x44c SWAP1
0x44d LOG3
0x44e JUMP
---
0x3f2: JUMPDEST 
0x3f3: V348 = 0x6
0x3f5: S[0x6] = S0
0x3f6: V349 = 0x40
0x3f9: V350 = M[0x40]
0x3fa: V351 = CALLVALUE
0x3fc: M[V350] = V351
0x3fe: V352 = M[0x40]
0x3ff: V353 = 0x9386c90217c323f58030f9dadcbc938f807a940f4ff41cd4cead9562f5da7dc3
0x423: V354 = SUB V350 V352
0x424: V355 = 0x20
0x426: V356 = ADD 0x20 V354
0x428: LOG V352 V356 0x9386c90217c323f58030f9dadcbc938f807a940f4ff41cd4cead9562f5da7dc3
0x429: V357 = 0x40
0x42c: V358 = M[0x40]
0x42d: V359 = CALLVALUE
0x42f: M[V358] = V359
0x431: V360 = M[0x40]
0x432: V361 = CALLER
0x434: V362 = ADDRESS
0x436: V363 = 0x0
0x439: V364 = M[0x0]
0x43a: V365 = 0x20
0x43c: V366 = 0xbf2
0x440: CODECOPY 0x0 0xbf2 0x20
0x442: V367 = M[0x0]
0x444: M[0x0] = V364
0x448: V368 = SUB V358 V360
0x449: V369 = 0x20
0x44b: V370 = ADD 0x20 V368
0x44d: LOG V360 V370 V367 V362 V361
0x44e: JUMP S1
---
Entry stack: [V11, 0x1b3, V176, S11, S10, S9, S8, {0x0, 0x6a5}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x1b3, V176, S11, S10, S9, S8, {0x0, 0x6a5}, S6, S5, S4, S3, S2]

================================

Block 0x44f
[0x44f:0x48e]
---
Predecessors: [0x111]
Successors: [0x48f, 0x4d5]
---
0x44f JUMPDEST
0x450 PUSH1 0x3
0x452 DUP1
0x453 SLOAD
0x454 PUSH1 0x40
0x456 DUP1
0x457 MLOAD
0x458 PUSH1 0x20
0x45a PUSH1 0x2
0x45c PUSH1 0x1
0x45e DUP6
0x45f AND
0x460 ISZERO
0x461 PUSH2 0x100
0x464 MUL
0x465 PUSH1 0x0
0x467 NOT
0x468 ADD
0x469 SWAP1
0x46a SWAP5
0x46b AND
0x46c SWAP4
0x46d SWAP1
0x46e SWAP4
0x46f DIV
0x470 PUSH1 0x1f
0x472 DUP2
0x473 ADD
0x474 DUP5
0x475 SWAP1
0x476 DIV
0x477 DUP5
0x478 MUL
0x479 DUP3
0x47a ADD
0x47b DUP5
0x47c ADD
0x47d SWAP1
0x47e SWAP3
0x47f MSTORE
0x480 DUP2
0x481 DUP2
0x482 MSTORE
0x483 SWAP3
0x484 SWAP2
0x485 DUP4
0x486 ADD
0x487 DUP3
0x488 DUP3
0x489 DUP1
0x48a ISZERO
0x48b PUSH2 0x4d5
0x48e JUMPI
---
0x44f: JUMPDEST 
0x450: V371 = 0x3
0x453: V372 = S[0x3]
0x454: V373 = 0x40
0x457: V374 = M[0x40]
0x458: V375 = 0x20
0x45a: V376 = 0x2
0x45c: V377 = 0x1
0x45f: V378 = AND V372 0x1
0x460: V379 = ISZERO V378
0x461: V380 = 0x100
0x464: V381 = MUL 0x100 V379
0x465: V382 = 0x0
0x467: V383 = NOT 0x0
0x468: V384 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V381
0x46b: V385 = AND V372 V384
0x46f: V386 = DIV V385 0x2
0x470: V387 = 0x1f
0x473: V388 = ADD V386 0x1f
0x476: V389 = DIV V388 0x20
0x478: V390 = MUL 0x20 V389
0x47a: V391 = ADD V374 V390
0x47c: V392 = ADD 0x20 V391
0x47f: M[0x40] = V392
0x482: M[V374] = V386
0x486: V393 = ADD V374 0x20
0x48a: V394 = ISZERO V386
0x48b: V395 = 0x4d5
0x48e: JUMPI 0x4d5 V394
---
Entry stack: [V11, 0x11a]
Stack pops: 0
Stack additions: [V374, 0x3, V386, V393, 0x3, V386]
Exit stack: [V11, 0x11a, V374, 0x3, V386, V393, 0x3, V386]

================================

Block 0x48f
[0x48f:0x496]
---
Predecessors: [0x44f]
Successors: [0x497, 0x4aa]
---
0x48f DUP1
0x490 PUSH1 0x1f
0x492 LT
0x493 PUSH2 0x4aa
0x496 JUMPI
---
0x490: V396 = 0x1f
0x492: V397 = LT 0x1f V386
0x493: V398 = 0x4aa
0x496: JUMPI 0x4aa V397
---
Entry stack: [V11, 0x11a, V374, 0x3, V386, V393, 0x3, V386]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x11a, V374, 0x3, V386, V393, 0x3, V386]

================================

Block 0x497
[0x497:0x4a9]
---
Predecessors: [0x48f]
Successors: [0x4d5]
---
0x497 PUSH2 0x100
0x49a DUP1
0x49b DUP4
0x49c SLOAD
0x49d DIV
0x49e MUL
0x49f DUP4
0x4a0 MSTORE
0x4a1 SWAP2
0x4a2 PUSH1 0x20
0x4a4 ADD
0x4a5 SWAP2
0x4a6 PUSH2 0x4d5
0x4a9 JUMP
---
0x497: V399 = 0x100
0x49c: V400 = S[0x3]
0x49d: V401 = DIV V400 0x100
0x49e: V402 = MUL V401 0x100
0x4a0: M[V393] = V402
0x4a2: V403 = 0x20
0x4a4: V404 = ADD 0x20 V393
0x4a6: V405 = 0x4d5
0x4a9: JUMP 0x4d5
---
Entry stack: [V11, 0x11a, V374, 0x3, V386, V393, 0x3, V386]
Stack pops: 3
Stack additions: [V404, S1, S0]
Exit stack: [V11, 0x11a, V374, 0x3, V386, V404, 0x3, V386]

================================

Block 0x4aa
[0x4aa:0x4b7]
---
Predecessors: [0x48f, 0x70b, 0x92d]
Successors: [0x4b8]
---
0x4aa JUMPDEST
0x4ab DUP3
0x4ac ADD
0x4ad SWAP2
0x4ae SWAP1
0x4af PUSH1 0x0
0x4b1 MSTORE
0x4b2 PUSH1 0x20
0x4b4 PUSH1 0x0
0x4b6 SHA3
0x4b7 SWAP1
---
0x4aa: JUMPDEST 
0x4ac: V406 = ADD S2 S0
0x4af: V407 = 0x0
0x4b1: M[0x0] = {0x2, 0x3, 0x4}
0x4b2: V408 = 0x20
0x4b4: V409 = 0x0
0x4b6: V410 = SHA3 0x0 0x20
---
Entry stack: [V11, 0x11a, S5, {0x2, 0x3, 0x4}, S3, S2, {0x2, 0x3, 0x4}, S0]
Stack pops: 3
Stack additions: [V406, V410, S2]
Exit stack: [V11, 0x11a, S5, {0x2, 0x3, 0x4}, S3, V406, V410, S2]

================================

Block 0x4b8
[0x4b8:0x4cb]
---
Predecessors: [0x4aa, 0x4b8]
Successors: [0x4b8, 0x4cc]
---
0x4b8 JUMPDEST
0x4b9 DUP2
0x4ba SLOAD
0x4bb DUP2
0x4bc MSTORE
0x4bd SWAP1
0x4be PUSH1 0x1
0x4c0 ADD
0x4c1 SWAP1
0x4c2 PUSH1 0x20
0x4c4 ADD
0x4c5 DUP1
0x4c6 DUP4
0x4c7 GT
0x4c8 PUSH2 0x4b8
0x4cb JUMPI
---
0x4b8: JUMPDEST 
0x4ba: V411 = S[S1]
0x4bc: M[S0] = V411
0x4be: V412 = 0x1
0x4c0: V413 = ADD 0x1 S1
0x4c2: V414 = 0x20
0x4c4: V415 = ADD 0x20 S0
0x4c7: V416 = GT V406 V415
0x4c8: V417 = 0x4b8
0x4cb: JUMPI 0x4b8 V416
---
Entry stack: [V11, 0x11a, S5, {0x2, 0x3, 0x4}, S3, V406, S1, S0]
Stack pops: 3
Stack additions: [S2, V413, V415]
Exit stack: [V11, 0x11a, S5, {0x2, 0x3, 0x4}, S3, V406, V413, V415]

================================

Block 0x4cc
[0x4cc:0x4d4]
---
Predecessors: [0x4b8]
Successors: [0x4d5]
---
0x4cc DUP3
0x4cd SWAP1
0x4ce SUB
0x4cf PUSH1 0x1f
0x4d1 AND
0x4d2 DUP3
0x4d3 ADD
0x4d4 SWAP2
---
0x4ce: V418 = SUB V415 V406
0x4cf: V419 = 0x1f
0x4d1: V420 = AND 0x1f V418
0x4d3: V421 = ADD V406 V420
---
Entry stack: [V11, 0x11a, S5, {0x2, 0x3, 0x4}, S3, V406, V413, V415]
Stack pops: 3
Stack additions: [V421, S1, S2]
Exit stack: [V11, 0x11a, S5, {0x2, 0x3, 0x4}, S3, V421, V413, V406]

================================

Block 0x4d5
[0x4d5:0x4dc]
---
Predecessors: [0x44f, 0x497, 0x4cc, 0x6ce, 0x713, 0x8ed, 0x935]
Successors: [0x11a]
---
0x4d5 JUMPDEST
0x4d6 POP
0x4d7 POP
0x4d8 POP
0x4d9 POP
0x4da POP
0x4db DUP2
0x4dc JUMP
---
0x4d5: JUMPDEST 
0x4dc: JUMP 0x11a
---
Entry stack: [V11, 0x11a, S5, {0x2, 0x3, 0x4}, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V11, 0x11a, S5]

================================

Block 0x4dd
[0x4dd:0x4f0]
---
Predecessors: [0x19b]
Successors: [0x4f1, 0x4f5]
---
0x4dd JUMPDEST
0x4de PUSH1 0x0
0x4e0 DUP3
0x4e1 PUSH1 0x1
0x4e3 PUSH1 0xa0
0x4e5 PUSH1 0x2
0x4e7 EXP
0x4e8 SUB
0x4e9 DUP2
0x4ea AND
0x4eb ISZERO
0x4ec ISZERO
0x4ed PUSH2 0x4f5
0x4f0 JUMPI
---
0x4dd: JUMPDEST 
0x4de: V422 = 0x0
0x4e1: V423 = 0x1
0x4e3: V424 = 0xa0
0x4e5: V425 = 0x2
0x4e7: V426 = EXP 0x2 0xa0
0x4e8: V427 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ea: V428 = AND V124 0xffffffffffffffffffffffffffffffffffffffff
0x4eb: V429 = ISZERO V428
0x4ec: V430 = ISZERO V429
0x4ed: V431 = 0x4f5
0x4f0: JUMPI 0x4f5 V430
---
Entry stack: [V11, 0x1b3, V124, V126]
Stack pops: 2
Stack additions: [S1, S0, 0x0, S1]
Exit stack: [V11, 0x1b3, V124, V126, 0x0, V124]

================================

Block 0x4f1
[0x4f1:0x4f4]
---
Predecessors: [0x4dd]
Successors: []
---
0x4f1 PUSH1 0x0
0x4f3 DUP1
0x4f4 REVERT
---
0x4f1: V432 = 0x0
0x4f4: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1b3, V124, V126, 0x0, V124]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1b3, V124, V126, 0x0, V124]

================================

Block 0x4f5
[0x4f5:0x4fc]
---
Predecessors: [0x4dd]
Successors: [0x4fd, 0x523]
---
0x4f5 JUMPDEST
0x4f6 DUP3
0x4f7 ISZERO
0x4f8 DUP1
0x4f9 PUSH2 0x523
0x4fc JUMPI
---
0x4f5: JUMPDEST 
0x4f7: V433 = ISZERO V126
0x4f9: V434 = 0x523
0x4fc: JUMPI 0x523 V433
---
Entry stack: [V11, 0x1b3, V124, V126, 0x0, V124]
Stack pops: 3
Stack additions: [S2, S1, S0, V433]
Exit stack: [V11, 0x1b3, V124, V126, 0x0, V124, V433]

================================

Block 0x4fd
[0x4fd:0x522]
---
Predecessors: [0x4f5]
Successors: [0x523]
---
0x4fd POP
0x4fe CALLER
0x4ff PUSH1 0x0
0x501 SWAP1
0x502 DUP2
0x503 MSTORE
0x504 PUSH1 0x8
0x506 PUSH1 0x20
0x508 SWAP1
0x509 DUP2
0x50a MSTORE
0x50b PUSH1 0x40
0x50d DUP1
0x50e DUP4
0x50f SHA3
0x510 PUSH1 0x1
0x512 PUSH1 0xa0
0x514 PUSH1 0x2
0x516 EXP
0x517 SUB
0x518 DUP9
0x519 AND
0x51a DUP5
0x51b MSTORE
0x51c SWAP1
0x51d SWAP2
0x51e MSTORE
0x51f SWAP1
0x520 SHA3
0x521 SLOAD
0x522 ISZERO
---
0x4fe: V435 = CALLER
0x4ff: V436 = 0x0
0x503: M[0x0] = V435
0x504: V437 = 0x8
0x506: V438 = 0x20
0x50a: M[0x20] = 0x8
0x50b: V439 = 0x40
0x50f: V440 = SHA3 0x0 0x40
0x510: V441 = 0x1
0x512: V442 = 0xa0
0x514: V443 = 0x2
0x516: V444 = EXP 0x2 0xa0
0x517: V445 = SUB 0x10000000000000000000000000000000000000000 0x1
0x519: V446 = AND V124 0xffffffffffffffffffffffffffffffffffffffff
0x51b: M[0x0] = V446
0x51e: M[0x20] = V440
0x520: V447 = SHA3 0x0 0x40
0x521: V448 = S[V447]
0x522: V449 = ISZERO V448
---
Entry stack: [V11, 0x1b3, V124, V126, 0x0, V124, V433]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V449]
Exit stack: [V11, 0x1b3, V124, V126, 0x0, V124, V449]

================================

Block 0x523
[0x523:0x529]
---
Predecessors: [0x4f5, 0x4fd]
Successors: [0x52a, 0x52e]
---
0x523 JUMPDEST
0x524 ISZERO
0x525 ISZERO
0x526 PUSH2 0x52e
0x529 JUMPI
---
0x523: JUMPDEST 
0x524: V450 = ISZERO S0
0x525: V451 = ISZERO V450
0x526: V452 = 0x52e
0x529: JUMPI 0x52e V451
---
Entry stack: [V11, 0x1b3, V124, V126, 0x0, V124, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1b3, V124, V126, 0x0, V124]

================================

Block 0x52a
[0x52a:0x52d]
---
Predecessors: [0x523]
Successors: []
---
0x52a PUSH1 0x0
0x52c DUP1
0x52d REVERT
---
0x52a: V453 = 0x0
0x52d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1b3, V124, V126, 0x0, V124]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1b3, V124, V126, 0x0, V124]

================================

Block 0x52e
[0x52e:0x595]
---
Predecessors: [0x523]
Successors: [0x1b3]
---
0x52e JUMPDEST
0x52f CALLER
0x530 PUSH1 0x0
0x532 DUP2
0x533 DUP2
0x534 MSTORE
0x535 PUSH1 0x8
0x537 PUSH1 0x20
0x539 SWAP1
0x53a DUP2
0x53b MSTORE
0x53c PUSH1 0x40
0x53e DUP1
0x53f DUP4
0x540 SHA3
0x541 PUSH1 0x1
0x543 PUSH1 0xa0
0x545 PUSH1 0x2
0x547 EXP
0x548 SUB
0x549 DUP10
0x54a AND
0x54b DUP1
0x54c DUP6
0x54d MSTORE
0x54e SWAP1
0x54f DUP4
0x550 MSTORE
0x551 SWAP3
0x552 DUP2
0x553 SWAP1
0x554 SHA3
0x555 DUP8
0x556 SWAP1
0x557 SSTORE
0x558 DUP1
0x559 MLOAD
0x55a DUP8
0x55b DUP2
0x55c MSTORE
0x55d SWAP1
0x55e MLOAD
0x55f SWAP3
0x560 SWAP4
0x561 SWAP3
0x562 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x583 SWAP3
0x584 SWAP2
0x585 DUP2
0x586 SWAP1
0x587 SUB
0x588 SWAP1
0x589 SWAP2
0x58a ADD
0x58b SWAP1
0x58c LOG3
0x58d POP
0x58e PUSH1 0x1
0x590 SWAP4
0x591 SWAP3
0x592 POP
0x593 POP
0x594 POP
0x595 JUMP
---
0x52e: JUMPDEST 
0x52f: V454 = CALLER
0x530: V455 = 0x0
0x534: M[0x0] = V454
0x535: V456 = 0x8
0x537: V457 = 0x20
0x53b: M[0x20] = 0x8
0x53c: V458 = 0x40
0x540: V459 = SHA3 0x0 0x40
0x541: V460 = 0x1
0x543: V461 = 0xa0
0x545: V462 = 0x2
0x547: V463 = EXP 0x2 0xa0
0x548: V464 = SUB 0x10000000000000000000000000000000000000000 0x1
0x54a: V465 = AND V124 0xffffffffffffffffffffffffffffffffffffffff
0x54d: M[0x0] = V465
0x550: M[0x20] = V459
0x554: V466 = SHA3 0x0 0x40
0x557: S[V466] = V126
0x559: V467 = M[0x40]
0x55c: M[V467] = V126
0x55e: V468 = M[0x40]
0x562: V469 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x587: V470 = SUB V467 V468
0x58a: V471 = ADD 0x20 V470
0x58c: LOG V468 V471 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V454 V465
0x58e: V472 = 0x1
0x595: JUMP 0x1b3
---
Entry stack: [V11, 0x1b3, V124, V126, 0x0, V124]
Stack pops: 5
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x596
[0x596:0x59b]
---
Predecessors: [0x1d3]
Successors: [0x1dc]
---
0x596 JUMPDEST
0x597 PUSH1 0x6
0x599 SLOAD
0x59a DUP2
0x59b JUMP
---
0x596: JUMPDEST 
0x597: V473 = 0x6
0x599: V474 = S[0x6]
0x59b: JUMP 0x1dc
---
Entry stack: [V11, 0x1dc]
Stack pops: 1
Stack additions: [S0, V474]
Exit stack: [V11, 0x1dc, V474]

================================

Block 0x59c
[0x59c:0x5ae]
---
Predecessors: [0x1fa, 0x6b8]
Successors: [0x5af, 0x5b3]
---
0x59c JUMPDEST
0x59d DUP2
0x59e PUSH1 0x1
0x5a0 PUSH1 0xa0
0x5a2 PUSH1 0x2
0x5a4 EXP
0x5a5 SUB
0x5a6 DUP2
0x5a7 AND
0x5a8 ADDRESS
0x5a9 EQ
0x5aa ISZERO
0x5ab PUSH2 0x5b3
0x5ae JUMPI
---
0x59c: JUMPDEST 
0x59e: V475 = 0x1
0x5a0: V476 = 0xa0
0x5a2: V477 = 0x2
0x5a4: V478 = EXP 0x2 0xa0
0x5a5: V479 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5a7: V480 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x5a8: V481 = ADDRESS
0x5a9: V482 = EQ V481 V480
0x5aa: V483 = ISZERO V482
0x5ab: V484 = 0x5b3
0x5ae: JUMPI 0x5b3 V483
---
Entry stack: [V11, 0x103, S3, {0x103, 0x6c2}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, S1]
Exit stack: [V11, 0x103, S3, {0x103, 0x6c2}, S1, S0, S1]

================================

Block 0x5af
[0x5af:0x5b2]
---
Predecessors: [0x59c]
Successors: []
---
0x5af PUSH1 0x0
0x5b1 DUP1
0x5b2 REVERT
---
0x5af: V485 = 0x0
0x5b2: REVERT 0x0 0x0
---
Entry stack: [V11, 0x103, S4, {0x103, 0x6c2}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, S4, {0x103, 0x6c2}, S2, S1, S0]

================================

Block 0x5b3
[0x5b3:0x5cc]
---
Predecessors: [0x59c]
Successors: [0xa1d]
---
0x5b3 JUMPDEST
0x5b4 CALLER
0x5b5 PUSH1 0x0
0x5b7 SWAP1
0x5b8 DUP2
0x5b9 MSTORE
0x5ba PUSH1 0x7
0x5bc PUSH1 0x20
0x5be MSTORE
0x5bf PUSH1 0x40
0x5c1 SWAP1
0x5c2 SHA3
0x5c3 SLOAD
0x5c4 PUSH2 0x5cd
0x5c7 SWAP1
0x5c8 DUP4
0x5c9 PUSH2 0xa1d
0x5cc JUMP
---
0x5b3: JUMPDEST 
0x5b4: V486 = CALLER
0x5b5: V487 = 0x0
0x5b9: M[0x0] = V486
0x5ba: V488 = 0x7
0x5bc: V489 = 0x20
0x5be: M[0x20] = 0x7
0x5bf: V490 = 0x40
0x5c2: V491 = SHA3 0x0 0x40
0x5c3: V492 = S[V491]
0x5c4: V493 = 0x5cd
0x5c9: V494 = 0xa1d
0x5cc: JUMP 0xa1d
---
Entry stack: [V11, 0x103, S4, {0x103, 0x6c2}, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x5cd, V492, S1]
Exit stack: [V11, 0x103, S4, {0x103, 0x6c2}, S2, S1, S0, 0x5cd, V492, S1]

================================

Block 0x5cd
[0x5cd:0x5e9]
---
Predecessors: [0xa29]
Successors: [0xa1d]
---
0x5cd JUMPDEST
0x5ce CALLER
0x5cf PUSH1 0x0
0x5d1 SWAP1
0x5d2 DUP2
0x5d3 MSTORE
0x5d4 PUSH1 0x7
0x5d6 PUSH1 0x20
0x5d8 MSTORE
0x5d9 PUSH1 0x40
0x5db SWAP1
0x5dc SHA3
0x5dd SSTORE
0x5de PUSH1 0x6
0x5e0 SLOAD
0x5e1 PUSH2 0x5ea
0x5e4 SWAP1
0x5e5 DUP4
0x5e6 PUSH2 0xa1d
0x5e9 JUMP
---
0x5cd: JUMPDEST 
0x5ce: V495 = CALLER
0x5cf: V496 = 0x0
0x5d3: M[0x0] = V495
0x5d4: V497 = 0x7
0x5d6: V498 = 0x20
0x5d8: M[0x20] = 0x7
0x5d9: V499 = 0x40
0x5dc: V500 = SHA3 0x0 0x40
0x5dd: S[V500] = V882
0x5de: V501 = 0x6
0x5e0: V502 = S[0x6]
0x5e1: V503 = 0x5ea
0x5e6: V504 = 0xa1d
0x5e9: JUMP 0xa1d
---
Entry stack: [V11, 0x1b3, V176, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V882]
Stack pops: 3
Stack additions: [S2, S1, 0x5ea, V502, S2]
Exit stack: [V11, 0x1b3, V176, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x5ea, V502, S2]

================================

Block 0x5ea
[0x5ea:0x619]
---
Predecessors: [0xa29]
Successors: [0x61a, 0x623]
---
0x5ea JUMPDEST
0x5eb PUSH1 0x6
0x5ed SSTORE
0x5ee PUSH1 0x40
0x5f0 MLOAD
0x5f1 PUSH1 0x1
0x5f3 PUSH1 0xa0
0x5f5 PUSH1 0x2
0x5f7 EXP
0x5f8 SUB
0x5f9 DUP5
0x5fa AND
0x5fb SWAP1
0x5fc DUP4
0x5fd ISZERO
0x5fe PUSH2 0x8fc
0x601 MUL
0x602 SWAP1
0x603 DUP5
0x604 SWAP1
0x605 PUSH1 0x0
0x607 DUP2
0x608 DUP2
0x609 DUP2
0x60a DUP6
0x60b DUP9
0x60c DUP9
0x60d CALL
0x60e SWAP4
0x60f POP
0x610 POP
0x611 POP
0x612 POP
0x613 ISZERO
0x614 DUP1
0x615 ISZERO
0x616 PUSH2 0x623
0x619 JUMPI
---
0x5ea: JUMPDEST 
0x5eb: V505 = 0x6
0x5ed: S[0x6] = V882
0x5ee: V506 = 0x40
0x5f0: V507 = M[0x40]
0x5f1: V508 = 0x1
0x5f3: V509 = 0xa0
0x5f5: V510 = 0x2
0x5f7: V511 = EXP 0x2 0xa0
0x5f8: V512 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5fa: V513 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x5fd: V514 = ISZERO S2
0x5fe: V515 = 0x8fc
0x601: V516 = MUL 0x8fc V514
0x605: V517 = 0x0
0x60d: V518 = CALL V516 V513 S2 V507 0x0 V507 0x0
0x613: V519 = ISZERO V518
0x615: V520 = ISZERO V519
0x616: V521 = 0x623
0x619: JUMPI 0x623 V520
---
Entry stack: [V11, 0x1b3, V176, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V882]
Stack pops: 4
Stack additions: [S3, S2, S1, V519]
Exit stack: [V11, 0x1b3, V176, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V519]

================================

Block 0x61a
[0x61a:0x622]
---
Predecessors: [0x5ea]
Successors: []
---
0x61a RETURNDATASIZE
0x61b PUSH1 0x0
0x61d DUP1
0x61e RETURNDATACOPY
0x61f RETURNDATASIZE
0x620 PUSH1 0x0
0x622 REVERT
---
0x61a: V522 = RETURNDATASIZE
0x61b: V523 = 0x0
0x61e: RETURNDATACOPY 0x0 0x0 V522
0x61f: V524 = RETURNDATASIZE
0x620: V525 = 0x0
0x622: REVERT 0x0 V524
---
Entry stack: [V11, 0x1b3, V176, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V519]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1b3, V176, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V519]

================================

Block 0x623
[0x623:0x680]
---
Predecessors: [0x5ea]
Successors: [0x103, 0x6c2]
---
0x623 JUMPDEST
0x624 POP
0x625 PUSH1 0x40
0x627 DUP1
0x628 MLOAD
0x629 DUP4
0x62a DUP2
0x62b MSTORE
0x62c SWAP1
0x62d MLOAD
0x62e ADDRESS
0x62f SWAP2
0x630 CALLER
0x631 SWAP2
0x632 PUSH1 0x0
0x634 DUP1
0x635 MLOAD
0x636 PUSH1 0x20
0x638 PUSH2 0xbf2
0x63b DUP4
0x63c CODECOPY
0x63d DUP2
0x63e MLOAD
0x63f SWAP2
0x640 MSTORE
0x641 SWAP2
0x642 DUP2
0x643 SWAP1
0x644 SUB
0x645 PUSH1 0x20
0x647 ADD
0x648 SWAP1
0x649 LOG3
0x64a PUSH1 0x40
0x64c DUP1
0x64d MLOAD
0x64e DUP4
0x64f DUP2
0x650 MSTORE
0x651 SWAP1
0x652 MLOAD
0x653 PUSH32 0x9a1b418bc061a5d80270261562e6986a35d995f8051145f277be16103abd3453
0x674 SWAP2
0x675 DUP2
0x676 SWAP1
0x677 SUB
0x678 PUSH1 0x20
0x67a ADD
0x67b SWAP1
0x67c LOG1
0x67d POP
0x67e POP
0x67f POP
0x680 JUMP
---
0x623: JUMPDEST 
0x625: V526 = 0x40
0x628: V527 = M[0x40]
0x62b: M[V527] = S2
0x62d: V528 = M[0x40]
0x62e: V529 = ADDRESS
0x630: V530 = CALLER
0x632: V531 = 0x0
0x635: V532 = M[0x0]
0x636: V533 = 0x20
0x638: V534 = 0xbf2
0x63c: CODECOPY 0x0 0xbf2 0x20
0x63e: V535 = M[0x0]
0x640: M[0x0] = V532
0x644: V536 = SUB V527 V528
0x645: V537 = 0x20
0x647: V538 = ADD 0x20 V536
0x649: LOG V528 V538 V535 V530 V529
0x64a: V539 = 0x40
0x64d: V540 = M[0x40]
0x650: M[V540] = S2
0x652: V541 = M[0x40]
0x653: V542 = 0x9a1b418bc061a5d80270261562e6986a35d995f8051145f277be16103abd3453
0x677: V543 = SUB V540 V541
0x678: V544 = 0x20
0x67a: V545 = ADD 0x20 V543
0x67c: LOG V541 V545 0x9a1b418bc061a5d80270261562e6986a35d995f8051145f277be16103abd3453
0x680: JUMP S4
---
Entry stack: [V11, 0x1b3, V176, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V519]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x1b3, V176, S11, S10, S9, S8, S7, S6, S5]

================================

Block 0x681
[0x681:0x695]
---
Predecessors: [0x21e]
Successors: [0x696, 0x69a]
---
0x681 JUMPDEST
0x682 PUSH1 0x0
0x684 DUP3
0x685 PUSH1 0x1
0x687 PUSH1 0xa0
0x689 PUSH1 0x2
0x68b EXP
0x68c SUB
0x68d DUP2
0x68e AND
0x68f ADDRESS
0x690 EQ
0x691 ISZERO
0x692 PUSH2 0x69a
0x695 JUMPI
---
0x681: JUMPDEST 
0x682: V546 = 0x0
0x685: V547 = 0x1
0x687: V548 = 0xa0
0x689: V549 = 0x2
0x68b: V550 = EXP 0x2 0xa0
0x68c: V551 = SUB 0x10000000000000000000000000000000000000000 0x1
0x68e: V552 = AND V179 0xffffffffffffffffffffffffffffffffffffffff
0x68f: V553 = ADDRESS
0x690: V554 = EQ V553 V552
0x691: V555 = ISZERO V554
0x692: V556 = 0x69a
0x695: JUMPI 0x69a V555
---
Entry stack: [V11, 0x1b3, V176, V179, V181]
Stack pops: 2
Stack additions: [S1, S0, 0x0, S1]
Exit stack: [V11, 0x1b3, V176, V179, V181, 0x0, V179]

================================

Block 0x696
[0x696:0x699]
---
Predecessors: [0x681]
Successors: []
---
0x696 PUSH1 0x0
0x698 DUP1
0x699 REVERT
---
0x696: V557 = 0x0
0x699: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1b3, V176, V179, V181, 0x0, V179]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1b3, V176, V179, V181, 0x0, V179]

================================

Block 0x69a
[0x69a:0x6a4]
---
Predecessors: [0x681]
Successors: [0xa2f]
---
0x69a JUMPDEST
0x69b PUSH2 0x6a5
0x69e DUP6
0x69f DUP6
0x6a0 DUP6
0x6a1 PUSH2 0xa2f
0x6a4 JUMP
---
0x69a: JUMPDEST 
0x69b: V558 = 0x6a5
0x6a1: V559 = 0xa2f
0x6a4: JUMP 0xa2f
---
Entry stack: [V11, 0x1b3, V176, V179, V181, 0x0, V179]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x6a5, S4, S3, S2]
Exit stack: [V11, 0x1b3, V176, V179, V181, 0x0, V179, 0x6a5, V176, V179, V181]

================================

Block 0x6a5
[0x6a5:0x6ab]
---
Predecessors: [0xaf5]
Successors: [0x6ac, 0x6ad]
---
0x6a5 JUMPDEST
0x6a6 ISZERO
0x6a7 ISZERO
0x6a8 PUSH2 0x6ad
0x6ab JUMPI
---
0x6a5: JUMPDEST 
0x6a6: V560 = ISZERO 0x1
0x6a7: V561 = ISZERO 0x0
0x6a8: V562 = 0x6ad
0x6ab: JUMPI 0x6ad 0x1
---
Entry stack: [V11, 0x1b3, V176, S4, S3, S2, S1, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1b3, V176, S4, S3, S2, S1]

================================

Block 0x6ac
[0x6ac:0x6ac]
---
Predecessors: [0x6a5]
Successors: []
---
0x6ac INVALID
---
0x6ac: INVALID 
---
Entry stack: [V11, 0x1b3, V176, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1b3, V176, S3, S2, S1, S0]

================================

Block 0x6ad
[0x6ad:0x6b7]
---
Predecessors: [0x6a5]
Successors: [0x1b3]
---
0x6ad JUMPDEST
0x6ae POP
0x6af PUSH1 0x1
0x6b1 SWAP5
0x6b2 SWAP4
0x6b3 POP
0x6b4 POP
0x6b5 POP
0x6b6 POP
0x6b7 JUMP
---
0x6ad: JUMPDEST 
0x6af: V563 = 0x1
0x6b7: JUMP 0x1b3
---
Entry stack: [V11, 0x1b3, V176, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x6b8
[0x6b8:0x6c1]
---
Predecessors: [0x248]
Successors: [0x59c]
---
0x6b8 JUMPDEST
0x6b9 PUSH2 0x6c2
0x6bc CALLER
0x6bd DUP3
0x6be PUSH2 0x59c
0x6c1 JUMP
---
0x6b8: JUMPDEST 
0x6b9: V564 = 0x6c2
0x6bc: V565 = CALLER
0x6be: V566 = 0x59c
0x6c1: JUMP 0x59c
---
Entry stack: [V11, 0x103, V189]
Stack pops: 1
Stack additions: [S0, 0x6c2, V565, S0]
Exit stack: [V11, 0x103, V189, 0x6c2, V565, V189]

================================

Block 0x6c2
[0x6c2:0x6c4]
---
Predecessors: [0x623]
Successors: [0x103]
---
0x6c2 JUMPDEST
0x6c3 POP
0x6c4 JUMP
---
0x6c2: JUMPDEST 
0x6c4: JUMP S1
---
Entry stack: [V11, 0x1b3, V176, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x1b3, V176, S6, S5, S4, S3, S2]

================================

Block 0x6c5
[0x6c5:0x6cd]
---
Predecessors: [0x260]
Successors: [0x269]
---
0x6c5 JUMPDEST
0x6c6 PUSH1 0x5
0x6c8 SLOAD
0x6c9 PUSH1 0xff
0x6cb AND
0x6cc DUP2
0x6cd JUMP
---
0x6c5: JUMPDEST 
0x6c6: V567 = 0x5
0x6c8: V568 = S[0x5]
0x6c9: V569 = 0xff
0x6cb: V570 = AND 0xff V568
0x6cd: JUMP 0x269
---
Entry stack: [V11, 0x269]
Stack pops: 1
Stack additions: [S0, V570]
Exit stack: [V11, 0x269, V570]

================================

Block 0x6ce
[0x6ce:0x70a]
---
Predecessors: [0x28b]
Successors: [0x4d5, 0x70b]
---
0x6ce JUMPDEST
0x6cf PUSH1 0x2
0x6d1 DUP1
0x6d2 SLOAD
0x6d3 PUSH1 0x40
0x6d5 DUP1
0x6d6 MLOAD
0x6d7 PUSH1 0x20
0x6d9 PUSH1 0x1
0x6db DUP5
0x6dc AND
0x6dd ISZERO
0x6de PUSH2 0x100
0x6e1 MUL
0x6e2 PUSH1 0x0
0x6e4 NOT
0x6e5 ADD
0x6e6 SWAP1
0x6e7 SWAP4
0x6e8 AND
0x6e9 DUP5
0x6ea SWAP1
0x6eb DIV
0x6ec PUSH1 0x1f
0x6ee DUP2
0x6ef ADD
0x6f0 DUP5
0x6f1 SWAP1
0x6f2 DIV
0x6f3 DUP5
0x6f4 MUL
0x6f5 DUP3
0x6f6 ADD
0x6f7 DUP5
0x6f8 ADD
0x6f9 SWAP1
0x6fa SWAP3
0x6fb MSTORE
0x6fc DUP2
0x6fd DUP2
0x6fe MSTORE
0x6ff SWAP3
0x700 SWAP2
0x701 DUP4
0x702 ADD
0x703 DUP3
0x704 DUP3
0x705 DUP1
0x706 ISZERO
0x707 PUSH2 0x4d5
0x70a JUMPI
---
0x6ce: JUMPDEST 
0x6cf: V571 = 0x2
0x6d2: V572 = S[0x2]
0x6d3: V573 = 0x40
0x6d6: V574 = M[0x40]
0x6d7: V575 = 0x20
0x6d9: V576 = 0x1
0x6dc: V577 = AND V572 0x1
0x6dd: V578 = ISZERO V577
0x6de: V579 = 0x100
0x6e1: V580 = MUL 0x100 V578
0x6e2: V581 = 0x0
0x6e4: V582 = NOT 0x0
0x6e5: V583 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V580
0x6e8: V584 = AND V572 V583
0x6eb: V585 = DIV V584 0x2
0x6ec: V586 = 0x1f
0x6ef: V587 = ADD V585 0x1f
0x6f2: V588 = DIV V587 0x20
0x6f4: V589 = MUL 0x20 V588
0x6f6: V590 = ADD V574 V589
0x6f8: V591 = ADD 0x20 V590
0x6fb: M[0x40] = V591
0x6fe: M[V574] = V585
0x702: V592 = ADD V574 0x20
0x706: V593 = ISZERO V585
0x707: V594 = 0x4d5
0x70a: JUMPI 0x4d5 V593
---
Entry stack: [V11, 0x11a]
Stack pops: 0
Stack additions: [V574, 0x2, V585, V592, 0x2, V585]
Exit stack: [V11, 0x11a, V574, 0x2, V585, V592, 0x2, V585]

================================

Block 0x70b
[0x70b:0x712]
---
Predecessors: [0x6ce]
Successors: [0x4aa, 0x713]
---
0x70b DUP1
0x70c PUSH1 0x1f
0x70e LT
0x70f PUSH2 0x4aa
0x712 JUMPI
---
0x70c: V595 = 0x1f
0x70e: V596 = LT 0x1f V585
0x70f: V597 = 0x4aa
0x712: JUMPI 0x4aa V596
---
Entry stack: [V11, 0x11a, V574, 0x2, V585, V592, 0x2, V585]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x11a, V574, 0x2, V585, V592, 0x2, V585]

================================

Block 0x713
[0x713:0x725]
---
Predecessors: [0x70b]
Successors: [0x4d5]
---
0x713 PUSH2 0x100
0x716 DUP1
0x717 DUP4
0x718 SLOAD
0x719 DIV
0x71a MUL
0x71b DUP4
0x71c MSTORE
0x71d SWAP2
0x71e PUSH1 0x20
0x720 ADD
0x721 SWAP2
0x722 PUSH2 0x4d5
0x725 JUMP
---
0x713: V598 = 0x100
0x718: V599 = S[0x2]
0x719: V600 = DIV V599 0x100
0x71a: V601 = MUL V600 0x100
0x71c: M[V592] = V601
0x71e: V602 = 0x20
0x720: V603 = ADD 0x20 V592
0x722: V604 = 0x4d5
0x725: JUMP 0x4d5
---
Entry stack: [V11, 0x11a, V574, 0x2, V585, V592, 0x2, V585]
Stack pops: 3
Stack additions: [V603, S1, S0]
Exit stack: [V11, 0x11a, V574, 0x2, V585, V603, 0x2, V585]

================================

Block 0x726
[0x726:0x738]
---
Predecessors: [0x2a0]
Successors: [0x739, 0x73a]
---
0x726 JUMPDEST
0x727 PUSH1 0x0
0x729 SLOAD
0x72a PUSH1 0x1
0x72c PUSH1 0xa0
0x72e PUSH1 0x2
0x730 EXP
0x731 SUB
0x732 AND
0x733 CALLER
0x734 EQ
0x735 PUSH2 0x73a
0x738 JUMPI
---
0x726: JUMPDEST 
0x727: V605 = 0x0
0x729: V606 = S[0x0]
0x72a: V607 = 0x1
0x72c: V608 = 0xa0
0x72e: V609 = 0x2
0x730: V610 = EXP 0x2 0xa0
0x731: V611 = SUB 0x10000000000000000000000000000000000000000 0x1
0x732: V612 = AND 0xffffffffffffffffffffffffffffffffffffffff V606
0x733: V613 = CALLER
0x734: V614 = EQ V613 V612
0x735: V615 = 0x73a
0x738: JUMPI 0x73a V614
---
Entry stack: [V11, 0x103, V223, V226, V228]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, V223, V226, V228]

================================

Block 0x739
[0x739:0x739]
---
Predecessors: [0x726]
Successors: []
---
0x739 INVALID
---
0x739: INVALID 
---
Entry stack: [V11, 0x103, V223, V226, V228]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, V223, V226, V228]

================================

Block 0x73a
[0x73a:0x74b]
---
Predecessors: [0x726]
Successors: [0x74c, 0x750]
---
0x73a JUMPDEST
0x73b DUP3
0x73c PUSH1 0x1
0x73e PUSH1 0xa0
0x740 PUSH1 0x2
0x742 EXP
0x743 SUB
0x744 DUP2
0x745 AND
0x746 ISZERO
0x747 ISZERO
0x748 PUSH2 0x750
0x74b JUMPI
---
0x73a: JUMPDEST 
0x73c: V616 = 0x1
0x73e: V617 = 0xa0
0x740: V618 = 0x2
0x742: V619 = EXP 0x2 0xa0
0x743: V620 = SUB 0x10000000000000000000000000000000000000000 0x1
0x745: V621 = AND V223 0xffffffffffffffffffffffffffffffffffffffff
0x746: V622 = ISZERO V621
0x747: V623 = ISZERO V622
0x748: V624 = 0x750
0x74b: JUMPI 0x750 V623
---
Entry stack: [V11, 0x103, V223, V226, V228]
Stack pops: 3
Stack additions: [S2, S1, S0, S2]
Exit stack: [V11, 0x103, V223, V226, V228, V223]

================================

Block 0x74c
[0x74c:0x74f]
---
Predecessors: [0x73a]
Successors: []
---
0x74c PUSH1 0x0
0x74e DUP1
0x74f REVERT
---
0x74c: V625 = 0x0
0x74f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x103, V223, V226, V228, V223]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, V223, V226, V228, V223]

================================

Block 0x750
[0x750:0x761]
---
Predecessors: [0x73a]
Successors: [0x762, 0x766]
---
0x750 JUMPDEST
0x751 DUP3
0x752 PUSH1 0x1
0x754 PUSH1 0xa0
0x756 PUSH1 0x2
0x758 EXP
0x759 SUB
0x75a DUP2
0x75b AND
0x75c ISZERO
0x75d ISZERO
0x75e PUSH2 0x766
0x761 JUMPI
---
0x750: JUMPDEST 
0x752: V626 = 0x1
0x754: V627 = 0xa0
0x756: V628 = 0x2
0x758: V629 = EXP 0x2 0xa0
0x759: V630 = SUB 0x10000000000000000000000000000000000000000 0x1
0x75b: V631 = AND V226 0xffffffffffffffffffffffffffffffffffffffff
0x75c: V632 = ISZERO V631
0x75d: V633 = ISZERO V632
0x75e: V634 = 0x766
0x761: JUMPI 0x766 V633
---
Entry stack: [V11, 0x103, V223, V226, V228, V223]
Stack pops: 3
Stack additions: [S2, S1, S0, S2]
Exit stack: [V11, 0x103, V223, V226, V228, V223, V226]

================================

Block 0x762
[0x762:0x765]
---
Predecessors: [0x750]
Successors: []
---
0x762 PUSH1 0x0
0x764 DUP1
0x765 REVERT
---
0x762: V635 = 0x0
0x765: REVERT 0x0 0x0
---
Entry stack: [V11, 0x103, V223, V226, V228, V223, V226]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, V223, V226, V228, V223, V226]

================================

Block 0x766
[0x766:0x778]
---
Predecessors: [0x750]
Successors: [0x779, 0x77d]
---
0x766 JUMPDEST
0x767 DUP4
0x768 PUSH1 0x1
0x76a PUSH1 0xa0
0x76c PUSH1 0x2
0x76e EXP
0x76f SUB
0x770 DUP2
0x771 AND
0x772 ADDRESS
0x773 EQ
0x774 ISZERO
0x775 PUSH2 0x77d
0x778 JUMPI
---
0x766: JUMPDEST 
0x768: V636 = 0x1
0x76a: V637 = 0xa0
0x76c: V638 = 0x2
0x76e: V639 = EXP 0x2 0xa0
0x76f: V640 = SUB 0x10000000000000000000000000000000000000000 0x1
0x771: V641 = AND V226 0xffffffffffffffffffffffffffffffffffffffff
0x772: V642 = ADDRESS
0x773: V643 = EQ V642 V641
0x774: V644 = ISZERO V643
0x775: V645 = 0x77d
0x778: JUMPI 0x77d V644
---
Entry stack: [V11, 0x103, V223, V226, V228, V223, V226]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S3]
Exit stack: [V11, 0x103, V223, V226, V228, V223, V226, V226]

================================

Block 0x779
[0x779:0x77c]
---
Predecessors: [0x766]
Successors: []
---
0x779 PUSH1 0x0
0x77b DUP1
0x77c REVERT
---
0x779: V646 = 0x0
0x77c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x103, V223, V226, V228, V223, V226, V226]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, V223, V226, V228, V223, V226, V226]

================================

Block 0x77d
[0x77d:0x7f4]
---
Predecessors: [0x766]
Successors: [0x7f5, 0x7f9]
---
0x77d JUMPDEST
0x77e DUP6
0x77f PUSH1 0x1
0x781 PUSH1 0xa0
0x783 PUSH1 0x2
0x785 EXP
0x786 SUB
0x787 AND
0x788 PUSH4 0xa9059cbb
0x78d DUP7
0x78e DUP7
0x78f PUSH1 0x40
0x791 MLOAD
0x792 DUP4
0x793 PUSH4 0xffffffff
0x798 AND
0x799 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x7b7 MUL
0x7b8 DUP2
0x7b9 MSTORE
0x7ba PUSH1 0x4
0x7bc ADD
0x7bd DUP1
0x7be DUP4
0x7bf PUSH1 0x1
0x7c1 PUSH1 0xa0
0x7c3 PUSH1 0x2
0x7c5 EXP
0x7c6 SUB
0x7c7 AND
0x7c8 PUSH1 0x1
0x7ca PUSH1 0xa0
0x7cc PUSH1 0x2
0x7ce EXP
0x7cf SUB
0x7d0 AND
0x7d1 DUP2
0x7d2 MSTORE
0x7d3 PUSH1 0x20
0x7d5 ADD
0x7d6 DUP3
0x7d7 DUP2
0x7d8 MSTORE
0x7d9 PUSH1 0x20
0x7db ADD
0x7dc SWAP3
0x7dd POP
0x7de POP
0x7df POP
0x7e0 PUSH1 0x20
0x7e2 PUSH1 0x40
0x7e4 MLOAD
0x7e5 DUP1
0x7e6 DUP4
0x7e7 SUB
0x7e8 DUP2
0x7e9 PUSH1 0x0
0x7eb DUP8
0x7ec DUP1
0x7ed EXTCODESIZE
0x7ee ISZERO
0x7ef DUP1
0x7f0 ISZERO
0x7f1 PUSH2 0x7f9
0x7f4 JUMPI
---
0x77d: JUMPDEST 
0x77f: V647 = 0x1
0x781: V648 = 0xa0
0x783: V649 = 0x2
0x785: V650 = EXP 0x2 0xa0
0x786: V651 = SUB 0x10000000000000000000000000000000000000000 0x1
0x787: V652 = AND 0xffffffffffffffffffffffffffffffffffffffff V223
0x788: V653 = 0xa9059cbb
0x78f: V654 = 0x40
0x791: V655 = M[0x40]
0x793: V656 = 0xffffffff
0x798: V657 = AND 0xffffffff 0xa9059cbb
0x799: V658 = 0x100000000000000000000000000000000000000000000000000000000
0x7b7: V659 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x7b9: M[V655] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x7ba: V660 = 0x4
0x7bc: V661 = ADD 0x4 V655
0x7bf: V662 = 0x1
0x7c1: V663 = 0xa0
0x7c3: V664 = 0x2
0x7c5: V665 = EXP 0x2 0xa0
0x7c6: V666 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7c7: V667 = AND 0xffffffffffffffffffffffffffffffffffffffff V226
0x7c8: V668 = 0x1
0x7ca: V669 = 0xa0
0x7cc: V670 = 0x2
0x7ce: V671 = EXP 0x2 0xa0
0x7cf: V672 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7d0: V673 = AND 0xffffffffffffffffffffffffffffffffffffffff V667
0x7d2: M[V661] = V673
0x7d3: V674 = 0x20
0x7d5: V675 = ADD 0x20 V661
0x7d8: M[V675] = V228
0x7d9: V676 = 0x20
0x7db: V677 = ADD 0x20 V675
0x7e0: V678 = 0x20
0x7e2: V679 = 0x40
0x7e4: V680 = M[0x40]
0x7e7: V681 = SUB V677 V680
0x7e9: V682 = 0x0
0x7ed: V683 = EXTCODESIZE V652
0x7ee: V684 = ISZERO V683
0x7f0: V685 = ISZERO V684
0x7f1: V686 = 0x7f9
0x7f4: JUMPI 0x7f9 V685
---
Entry stack: [V11, 0x103, V223, V226, V228, V223, V226, V226]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, V652, 0xa9059cbb, V677, 0x20, V680, V681, V680, 0x0, V652, V684]
Exit stack: [V11, 0x103, V223, V226, V228, V223, V226, V226, V652, 0xa9059cbb, V677, 0x20, V680, V681, V680, 0x0, V652, V684]

================================

Block 0x7f5
[0x7f5:0x7f8]
---
Predecessors: [0x77d]
Successors: []
---
0x7f5 PUSH1 0x0
0x7f7 DUP1
0x7f8 REVERT
---
0x7f5: V687 = 0x0
0x7f8: REVERT 0x0 0x0
---
Entry stack: [V11, 0x103, V223, V226, V228, V223, V226, V226, V652, 0xa9059cbb, V677, 0x20, V680, V681, V680, 0x0, V652, V684]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, V223, V226, V228, V223, V226, V226, V652, 0xa9059cbb, V677, 0x20, V680, V681, V680, 0x0, V652, V684]

================================

Block 0x7f9
[0x7f9:0x803]
---
Predecessors: [0x77d]
Successors: [0x804, 0x80d]
---
0x7f9 JUMPDEST
0x7fa POP
0x7fb GAS
0x7fc CALL
0x7fd ISZERO
0x7fe DUP1
0x7ff ISZERO
0x800 PUSH2 0x80d
0x803 JUMPI
---
0x7f9: JUMPDEST 
0x7fb: V688 = GAS
0x7fc: V689 = CALL V688 V652 0x0 V680 V681 V680 0x20
0x7fd: V690 = ISZERO V689
0x7ff: V691 = ISZERO V690
0x800: V692 = 0x80d
0x803: JUMPI 0x80d V691
---
Entry stack: [V11, 0x103, V223, V226, V228, V223, V226, V226, V652, 0xa9059cbb, V677, 0x20, V680, V681, V680, 0x0, V652, V684]
Stack pops: 7
Stack additions: [V690]
Exit stack: [V11, 0x103, V223, V226, V228, V223, V226, V226, V652, 0xa9059cbb, V677, V690]

================================

Block 0x804
[0x804:0x80c]
---
Predecessors: [0x7f9]
Successors: []
---
0x804 RETURNDATASIZE
0x805 PUSH1 0x0
0x807 DUP1
0x808 RETURNDATACOPY
0x809 RETURNDATASIZE
0x80a PUSH1 0x0
0x80c REVERT
---
0x804: V693 = RETURNDATASIZE
0x805: V694 = 0x0
0x808: RETURNDATACOPY 0x0 0x0 V693
0x809: V695 = RETURNDATASIZE
0x80a: V696 = 0x0
0x80c: REVERT 0x0 V695
---
Entry stack: [V11, 0x103, V223, V226, V228, V223, V226, V226, V652, 0xa9059cbb, V677, V690]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, V223, V226, V228, V223, V226, V226, V652, 0xa9059cbb, V677, V690]

================================

Block 0x80d
[0x80d:0x81e]
---
Predecessors: [0x7f9]
Successors: [0x81f, 0x823]
---
0x80d JUMPDEST
0x80e POP
0x80f POP
0x810 POP
0x811 POP
0x812 PUSH1 0x40
0x814 MLOAD
0x815 RETURNDATASIZE
0x816 PUSH1 0x20
0x818 DUP2
0x819 LT
0x81a ISZERO
0x81b PUSH2 0x823
0x81e JUMPI
---
0x80d: JUMPDEST 
0x812: V697 = 0x40
0x814: V698 = M[0x40]
0x815: V699 = RETURNDATASIZE
0x816: V700 = 0x20
0x819: V701 = LT V699 0x20
0x81a: V702 = ISZERO V701
0x81b: V703 = 0x823
0x81e: JUMPI 0x823 V702
---
Entry stack: [V11, 0x103, V223, V226, V228, V223, V226, V226, V652, 0xa9059cbb, V677, V690]
Stack pops: 4
Stack additions: [V698, V699]
Exit stack: [V11, 0x103, V223, V226, V228, V223, V226, V226, V698, V699]

================================

Block 0x81f
[0x81f:0x822]
---
Predecessors: [0x80d]
Successors: []
---
0x81f PUSH1 0x0
0x821 DUP1
0x822 REVERT
---
0x81f: V704 = 0x0
0x822: REVERT 0x0 0x0
---
Entry stack: [V11, 0x103, V223, V226, V228, V223, V226, V226, V698, V699]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, V223, V226, V228, V223, V226, V226, V698, V699]

================================

Block 0x823
[0x823:0x82b]
---
Predecessors: [0x80d]
Successors: [0x82c, 0x82d]
---
0x823 JUMPDEST
0x824 POP
0x825 MLOAD
0x826 ISZERO
0x827 ISZERO
0x828 PUSH2 0x82d
0x82b JUMPI
---
0x823: JUMPDEST 
0x825: V705 = M[V698]
0x826: V706 = ISZERO V705
0x827: V707 = ISZERO V706
0x828: V708 = 0x82d
0x82b: JUMPI 0x82d V707
---
Entry stack: [V11, 0x103, V223, V226, V228, V223, V226, V226, V698, V699]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x103, V223, V226, V228, V223, V226, V226]

================================

Block 0x82c
[0x82c:0x82c]
---
Predecessors: [0x823]
Successors: []
---
0x82c INVALID
---
0x82c: INVALID 
---
Entry stack: [V11, 0x103, V223, V226, V228, V223, V226, V226]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, V223, V226, V228, V223, V226, V226]

================================

Block 0x82d
[0x82d:0x834]
---
Predecessors: [0x823]
Successors: [0x103]
---
0x82d JUMPDEST
0x82e POP
0x82f POP
0x830 POP
0x831 POP
0x832 POP
0x833 POP
0x834 JUMP
---
0x82d: JUMPDEST 
0x834: JUMP 0x103
---
Entry stack: [V11, 0x103, V223, V226, V228, V223, V226, V226]
Stack pops: 7
Stack additions: []
Exit stack: [V11]

================================

Block 0x835
[0x835:0x846]
---
Predecessors: [0x2ca]
Successors: [0x1dc]
---
0x835 JUMPDEST
0x836 PUSH1 0x7
0x838 PUSH1 0x20
0x83a MSTORE
0x83b PUSH1 0x0
0x83d SWAP1
0x83e DUP2
0x83f MSTORE
0x840 PUSH1 0x40
0x842 SWAP1
0x843 SHA3
0x844 SLOAD
0x845 DUP2
0x846 JUMP
---
0x835: JUMPDEST 
0x836: V709 = 0x7
0x838: V710 = 0x20
0x83a: M[0x20] = 0x7
0x83b: V711 = 0x0
0x83f: M[0x0] = V242
0x840: V712 = 0x40
0x843: V713 = SHA3 0x0 0x40
0x844: V714 = S[V713]
0x846: JUMP 0x1dc
---
Entry stack: [V11, 0x1dc, V242]
Stack pops: 2
Stack additions: [S1, V714]
Exit stack: [V11, 0x1dc, V714]

================================

Block 0x847
[0x847:0x859]
---
Predecessors: [0x2eb]
Successors: [0x85a, 0x85e]
---
0x847 JUMPDEST
0x848 PUSH1 0x1
0x84a SLOAD
0x84b PUSH1 0x1
0x84d PUSH1 0xa0
0x84f PUSH1 0x2
0x851 EXP
0x852 SUB
0x853 AND
0x854 CALLER
0x855 EQ
0x856 PUSH2 0x85e
0x859 JUMPI
---
0x847: JUMPDEST 
0x848: V715 = 0x1
0x84a: V716 = S[0x1]
0x84b: V717 = 0x1
0x84d: V718 = 0xa0
0x84f: V719 = 0x2
0x851: V720 = EXP 0x2 0xa0
0x852: V721 = SUB 0x10000000000000000000000000000000000000000 0x1
0x853: V722 = AND 0xffffffffffffffffffffffffffffffffffffffff V716
0x854: V723 = CALLER
0x855: V724 = EQ V723 V722
0x856: V725 = 0x85e
0x859: JUMPI 0x85e V724
---
Entry stack: [V11, 0x103]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103]

================================

Block 0x85a
[0x85a:0x85d]
---
Predecessors: [0x847]
Successors: []
---
0x85a PUSH1 0x0
0x85c DUP1
0x85d REVERT
---
0x85a: V726 = 0x0
0x85d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x103]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103]

================================

Block 0x85e
[0x85e:0x8dd]
---
Predecessors: [0x847]
Successors: [0x103]
---
0x85e JUMPDEST
0x85f PUSH1 0x0
0x861 SLOAD
0x862 PUSH1 0x1
0x864 SLOAD
0x865 PUSH1 0x40
0x867 DUP1
0x868 MLOAD
0x869 PUSH1 0x1
0x86b PUSH1 0xa0
0x86d PUSH1 0x2
0x86f EXP
0x870 SUB
0x871 SWAP4
0x872 DUP5
0x873 AND
0x874 DUP2
0x875 MSTORE
0x876 SWAP3
0x877 SWAP1
0x878 SWAP2
0x879 AND
0x87a PUSH1 0x20
0x87c DUP4
0x87d ADD
0x87e MSTORE
0x87f DUP1
0x880 MLOAD
0x881 PUSH32 0x343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a
0x8a2 SWAP3
0x8a3 DUP2
0x8a4 SWAP1
0x8a5 SUB
0x8a6 SWAP1
0x8a7 SWAP2
0x8a8 ADD
0x8a9 SWAP1
0x8aa LOG1
0x8ab PUSH1 0x1
0x8ad DUP1
0x8ae SLOAD
0x8af PUSH1 0x0
0x8b1 DUP1
0x8b2 SLOAD
0x8b3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8c8 NOT
0x8c9 SWAP1
0x8ca DUP2
0x8cb AND
0x8cc PUSH1 0x1
0x8ce PUSH1 0xa0
0x8d0 PUSH1 0x2
0x8d2 EXP
0x8d3 SUB
0x8d4 DUP5
0x8d5 AND
0x8d6 OR
0x8d7 SWAP1
0x8d8 SWAP2
0x8d9 SSTORE
0x8da AND
0x8db SWAP1
0x8dc SSTORE
0x8dd JUMP
---
0x85e: JUMPDEST 
0x85f: V727 = 0x0
0x861: V728 = S[0x0]
0x862: V729 = 0x1
0x864: V730 = S[0x1]
0x865: V731 = 0x40
0x868: V732 = M[0x40]
0x869: V733 = 0x1
0x86b: V734 = 0xa0
0x86d: V735 = 0x2
0x86f: V736 = EXP 0x2 0xa0
0x870: V737 = SUB 0x10000000000000000000000000000000000000000 0x1
0x873: V738 = AND 0xffffffffffffffffffffffffffffffffffffffff V728
0x875: M[V732] = V738
0x879: V739 = AND V730 0xffffffffffffffffffffffffffffffffffffffff
0x87a: V740 = 0x20
0x87d: V741 = ADD V732 0x20
0x87e: M[V741] = V739
0x880: V742 = M[0x40]
0x881: V743 = 0x343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a
0x8a5: V744 = SUB V732 V742
0x8a8: V745 = ADD 0x40 V744
0x8aa: LOG V742 V745 0x343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a
0x8ab: V746 = 0x1
0x8ae: V747 = S[0x1]
0x8af: V748 = 0x0
0x8b2: V749 = S[0x0]
0x8b3: V750 = 0xffffffffffffffffffffffffffffffffffffffff
0x8c8: V751 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x8cb: V752 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V749
0x8cc: V753 = 0x1
0x8ce: V754 = 0xa0
0x8d0: V755 = 0x2
0x8d2: V756 = EXP 0x2 0xa0
0x8d3: V757 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8d5: V758 = AND V747 0xffffffffffffffffffffffffffffffffffffffff
0x8d6: V759 = OR V758 V752
0x8d9: S[0x0] = V759
0x8da: V760 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V747
0x8dc: S[0x1] = V760
0x8dd: JUMP 0x103
---
Entry stack: [V11, 0x103]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x8de
[0x8de:0x8ec]
---
Predecessors: [0x300]
Successors: [0x309]
---
0x8de JUMPDEST
0x8df PUSH1 0x0
0x8e1 SLOAD
0x8e2 PUSH1 0x1
0x8e4 PUSH1 0xa0
0x8e6 PUSH1 0x2
0x8e8 EXP
0x8e9 SUB
0x8ea AND
0x8eb DUP2
0x8ec JUMP
---
0x8de: JUMPDEST 
0x8df: V761 = 0x0
0x8e1: V762 = S[0x0]
0x8e2: V763 = 0x1
0x8e4: V764 = 0xa0
0x8e6: V765 = 0x2
0x8e8: V766 = EXP 0x2 0xa0
0x8e9: V767 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8ea: V768 = AND 0xffffffffffffffffffffffffffffffffffffffff V762
0x8ec: JUMP 0x309
---
Entry stack: [V11, 0x309]
Stack pops: 1
Stack additions: [S0, V768]
Exit stack: [V11, 0x309, V768]

================================

Block 0x8ed
[0x8ed:0x92c]
---
Predecessors: [0x331]
Successors: [0x4d5, 0x92d]
---
0x8ed JUMPDEST
0x8ee PUSH1 0x4
0x8f0 DUP1
0x8f1 SLOAD
0x8f2 PUSH1 0x40
0x8f4 DUP1
0x8f5 MLOAD
0x8f6 PUSH1 0x20
0x8f8 PUSH1 0x2
0x8fa PUSH1 0x1
0x8fc DUP6
0x8fd AND
0x8fe ISZERO
0x8ff PUSH2 0x100
0x902 MUL
0x903 PUSH1 0x0
0x905 NOT
0x906 ADD
0x907 SWAP1
0x908 SWAP5
0x909 AND
0x90a SWAP4
0x90b SWAP1
0x90c SWAP4
0x90d DIV
0x90e PUSH1 0x1f
0x910 DUP2
0x911 ADD
0x912 DUP5
0x913 SWAP1
0x914 DIV
0x915 DUP5
0x916 MUL
0x917 DUP3
0x918 ADD
0x919 DUP5
0x91a ADD
0x91b SWAP1
0x91c SWAP3
0x91d MSTORE
0x91e DUP2
0x91f DUP2
0x920 MSTORE
0x921 SWAP3
0x922 SWAP2
0x923 DUP4
0x924 ADD
0x925 DUP3
0x926 DUP3
0x927 DUP1
0x928 ISZERO
0x929 PUSH2 0x4d5
0x92c JUMPI
---
0x8ed: JUMPDEST 
0x8ee: V769 = 0x4
0x8f1: V770 = S[0x4]
0x8f2: V771 = 0x40
0x8f5: V772 = M[0x40]
0x8f6: V773 = 0x20
0x8f8: V774 = 0x2
0x8fa: V775 = 0x1
0x8fd: V776 = AND V770 0x1
0x8fe: V777 = ISZERO V776
0x8ff: V778 = 0x100
0x902: V779 = MUL 0x100 V777
0x903: V780 = 0x0
0x905: V781 = NOT 0x0
0x906: V782 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V779
0x909: V783 = AND V770 V782
0x90d: V784 = DIV V783 0x2
0x90e: V785 = 0x1f
0x911: V786 = ADD V784 0x1f
0x914: V787 = DIV V786 0x20
0x916: V788 = MUL 0x20 V787
0x918: V789 = ADD V772 V788
0x91a: V790 = ADD 0x20 V789
0x91d: M[0x40] = V790
0x920: M[V772] = V784
0x924: V791 = ADD V772 0x20
0x928: V792 = ISZERO V784
0x929: V793 = 0x4d5
0x92c: JUMPI 0x4d5 V792
---
Entry stack: [V11, 0x11a]
Stack pops: 0
Stack additions: [V772, 0x4, V784, V791, 0x4, V784]
Exit stack: [V11, 0x11a, V772, 0x4, V784, V791, 0x4, V784]

================================

Block 0x92d
[0x92d:0x934]
---
Predecessors: [0x8ed]
Successors: [0x4aa, 0x935]
---
0x92d DUP1
0x92e PUSH1 0x1f
0x930 LT
0x931 PUSH2 0x4aa
0x934 JUMPI
---
0x92e: V794 = 0x1f
0x930: V795 = LT 0x1f V784
0x931: V796 = 0x4aa
0x934: JUMPI 0x4aa V795
---
Entry stack: [V11, 0x11a, V772, 0x4, V784, V791, 0x4, V784]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x11a, V772, 0x4, V784, V791, 0x4, V784]

================================

Block 0x935
[0x935:0x947]
---
Predecessors: [0x92d]
Successors: [0x4d5]
---
0x935 PUSH2 0x100
0x938 DUP1
0x939 DUP4
0x93a SLOAD
0x93b DIV
0x93c MUL
0x93d DUP4
0x93e MSTORE
0x93f SWAP2
0x940 PUSH1 0x20
0x942 ADD
0x943 SWAP2
0x944 PUSH2 0x4d5
0x947 JUMP
---
0x935: V797 = 0x100
0x93a: V798 = S[0x4]
0x93b: V799 = DIV V798 0x100
0x93c: V800 = MUL V799 0x100
0x93e: M[V791] = V800
0x940: V801 = 0x20
0x942: V802 = ADD 0x20 V791
0x944: V803 = 0x4d5
0x947: JUMP 0x4d5
---
Entry stack: [V11, 0x11a, V772, 0x4, V784, V791, 0x4, V784]
Stack pops: 3
Stack additions: [V802, S1, S0]
Exit stack: [V11, 0x11a, V772, 0x4, V784, V802, 0x4, V784]

================================

Block 0x948
[0x948:0x95c]
---
Predecessors: [0x346]
Successors: [0x95d, 0x961]
---
0x948 JUMPDEST
0x949 PUSH1 0x0
0x94b DUP3
0x94c PUSH1 0x1
0x94e PUSH1 0xa0
0x950 PUSH1 0x2
0x952 EXP
0x953 SUB
0x954 DUP2
0x955 AND
0x956 ADDRESS
0x957 EQ
0x958 ISZERO
0x959 PUSH2 0x961
0x95c JUMPI
---
0x948: JUMPDEST 
0x949: V804 = 0x0
0x94c: V805 = 0x1
0x94e: V806 = 0xa0
0x950: V807 = 0x2
0x952: V808 = EXP 0x2 0xa0
0x953: V809 = SUB 0x10000000000000000000000000000000000000000 0x1
0x955: V810 = AND V286 0xffffffffffffffffffffffffffffffffffffffff
0x956: V811 = ADDRESS
0x957: V812 = EQ V811 V810
0x958: V813 = ISZERO V812
0x959: V814 = 0x961
0x95c: JUMPI 0x961 V813
---
Entry stack: [V11, 0x1b3, V286, V288]
Stack pops: 2
Stack additions: [S1, S0, 0x0, S1]
Exit stack: [V11, 0x1b3, V286, V288, 0x0, V286]

================================

Block 0x95d
[0x95d:0x960]
---
Predecessors: [0x948]
Successors: []
---
0x95d PUSH1 0x0
0x95f DUP1
0x960 REVERT
---
0x95d: V815 = 0x0
0x960: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1b3, V286, V288, 0x0, V286]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1b3, V286, V288, 0x0, V286]

================================

Block 0x961
[0x961:0x96a]
---
Predecessors: [0x948]
Successors: [0xb46]
---
0x961 JUMPDEST
0x962 PUSH2 0x96b
0x965 DUP5
0x966 DUP5
0x967 PUSH2 0xb46
0x96a JUMP
---
0x961: JUMPDEST 
0x962: V816 = 0x96b
0x967: V817 = 0xb46
0x96a: JUMP 0xb46
---
Entry stack: [V11, 0x1b3, V286, V288, 0x0, V286]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x96b, S3, S2]
Exit stack: [V11, 0x1b3, V286, V288, 0x0, V286, 0x96b, V286, V288]

================================

Block 0x96b
[0x96b:0x971]
---
Predecessors: [0xba4]
Successors: [0x972, 0x973]
---
0x96b JUMPDEST
0x96c ISZERO
0x96d ISZERO
0x96e PUSH2 0x973
0x971 JUMPI
---
0x96b: JUMPDEST 
0x96c: V818 = ISZERO 0x1
0x96d: V819 = ISZERO 0x0
0x96e: V820 = 0x973
0x971: JUMPI 0x973 0x1
---
Entry stack: [V11, 0x1b3, V176, S6, S5, S4, S3, {0x0, 0x6a5}, S1, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1b3, V176, S6, S5, S4, S3, {0x0, 0x6a5}, S1]

================================

Block 0x972
[0x972:0x972]
---
Predecessors: [0x96b]
Successors: []
---
0x972 INVALID
---
0x972: INVALID 
---
Entry stack: [V11, 0x1b3, V176, S5, S4, S3, S2, {0x0, 0x6a5}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1b3, V176, S5, S4, S3, S2, {0x0, 0x6a5}, S0]

================================

Block 0x973
[0x973:0x97c]
---
Predecessors: [0x96b]
Successors: [0x1b3]
---
0x973 JUMPDEST
0x974 POP
0x975 PUSH1 0x1
0x977 SWAP4
0x978 SWAP3
0x979 POP
0x97a POP
0x97b POP
0x97c JUMP
---
0x973: JUMPDEST 
0x975: V821 = 0x1
0x97c: JUMP S4
---
Entry stack: [V11, 0x1b3, V176, S5, S4, S3, S2, {0x0, 0x6a5}, S0]
Stack pops: 5
Stack additions: [0x1]
Exit stack: [V11, 0x1b3, V176, S5, 0x1]

================================

Block 0x97d
[0x97d:0x98b]
---
Predecessors: [0x36a]
Successors: [0x309]
---
0x97d JUMPDEST
0x97e PUSH1 0x1
0x980 SLOAD
0x981 PUSH1 0x1
0x983 PUSH1 0xa0
0x985 PUSH1 0x2
0x987 EXP
0x988 SUB
0x989 AND
0x98a DUP2
0x98b JUMP
---
0x97d: JUMPDEST 
0x97e: V822 = 0x1
0x980: V823 = S[0x1]
0x981: V824 = 0x1
0x983: V825 = 0xa0
0x985: V826 = 0x2
0x987: V827 = EXP 0x2 0xa0
0x988: V828 = SUB 0x10000000000000000000000000000000000000000 0x1
0x989: V829 = AND 0xffffffffffffffffffffffffffffffffffffffff V823
0x98b: JUMP 0x309
---
Entry stack: [V11, 0x309]
Stack pops: 1
Stack additions: [S0, V829]
Exit stack: [V11, 0x309, V829]

================================

Block 0x98c
[0x98c:0x9a8]
---
Predecessors: [0x37f]
Successors: [0x1dc]
---
0x98c JUMPDEST
0x98d PUSH1 0x8
0x98f PUSH1 0x20
0x991 SWAP1
0x992 DUP2
0x993 MSTORE
0x994 PUSH1 0x0
0x996 SWAP3
0x997 DUP4
0x998 MSTORE
0x999 PUSH1 0x40
0x99b DUP1
0x99c DUP5
0x99d SHA3
0x99e SWAP1
0x99f SWAP2
0x9a0 MSTORE
0x9a1 SWAP1
0x9a2 DUP3
0x9a3 MSTORE
0x9a4 SWAP1
0x9a5 SHA3
0x9a6 SLOAD
0x9a7 DUP2
0x9a8 JUMP
---
0x98c: JUMPDEST 
0x98d: V830 = 0x8
0x98f: V831 = 0x20
0x993: M[0x20] = 0x8
0x994: V832 = 0x0
0x998: M[0x0] = V308
0x999: V833 = 0x40
0x99d: V834 = SHA3 0x0 0x40
0x9a0: M[0x20] = V834
0x9a3: M[0x0] = V311
0x9a5: V835 = SHA3 0x0 0x40
0x9a6: V836 = S[V835]
0x9a8: JUMP 0x1dc
---
Entry stack: [V11, 0x1dc, V308, V311]
Stack pops: 3
Stack additions: [S2, V836]
Exit stack: [V11, 0x1dc, V836]

================================

Block 0x9a9
[0x9a9:0x9bb]
---
Predecessors: [0x3a6]
Successors: [0x9bc, 0x9bd]
---
0x9a9 JUMPDEST
0x9aa PUSH1 0x0
0x9ac SLOAD
0x9ad PUSH1 0x1
0x9af PUSH1 0xa0
0x9b1 PUSH1 0x2
0x9b3 EXP
0x9b4 SUB
0x9b5 AND
0x9b6 CALLER
0x9b7 EQ
0x9b8 PUSH2 0x9bd
0x9bb JUMPI
---
0x9a9: JUMPDEST 
0x9aa: V837 = 0x0
0x9ac: V838 = S[0x0]
0x9ad: V839 = 0x1
0x9af: V840 = 0xa0
0x9b1: V841 = 0x2
0x9b3: V842 = EXP 0x2 0xa0
0x9b4: V843 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9b5: V844 = AND 0xffffffffffffffffffffffffffffffffffffffff V838
0x9b6: V845 = CALLER
0x9b7: V846 = EQ V845 V844
0x9b8: V847 = 0x9bd
0x9bb: JUMPI 0x9bd V846
---
Entry stack: [V11, 0x103, V325]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, V325]

================================

Block 0x9bc
[0x9bc:0x9bc]
---
Predecessors: [0x9a9]
Successors: []
---
0x9bc INVALID
---
0x9bc: INVALID 
---
Entry stack: [V11, 0x103, V325]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, V325]

================================

Block 0x9bd
[0x9bd:0x9d3]
---
Predecessors: [0x9a9]
Successors: [0x9d4, 0x9d8]
---
0x9bd JUMPDEST
0x9be PUSH1 0x0
0x9c0 SLOAD
0x9c1 PUSH1 0x1
0x9c3 PUSH1 0xa0
0x9c5 PUSH1 0x2
0x9c7 EXP
0x9c8 SUB
0x9c9 DUP3
0x9ca DUP2
0x9cb AND
0x9cc SWAP2
0x9cd AND
0x9ce EQ
0x9cf ISZERO
0x9d0 PUSH2 0x9d8
0x9d3 JUMPI
---
0x9bd: JUMPDEST 
0x9be: V848 = 0x0
0x9c0: V849 = S[0x0]
0x9c1: V850 = 0x1
0x9c3: V851 = 0xa0
0x9c5: V852 = 0x2
0x9c7: V853 = EXP 0x2 0xa0
0x9c8: V854 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9cb: V855 = AND 0xffffffffffffffffffffffffffffffffffffffff V325
0x9cd: V856 = AND V849 0xffffffffffffffffffffffffffffffffffffffff
0x9ce: V857 = EQ V856 V855
0x9cf: V858 = ISZERO V857
0x9d0: V859 = 0x9d8
0x9d3: JUMPI 0x9d8 V858
---
Entry stack: [V11, 0x103, V325]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x103, V325]

================================

Block 0x9d4
[0x9d4:0x9d7]
---
Predecessors: [0x9bd]
Successors: []
---
0x9d4 PUSH1 0x0
0x9d6 DUP1
0x9d7 REVERT
---
0x9d4: V860 = 0x0
0x9d7: REVERT 0x0 0x0
---
Entry stack: [V11, 0x103, V325]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x103, V325]

================================

Block 0x9d8
[0x9d8:0xa06]
---
Predecessors: [0x9bd]
Successors: [0x103]
---
0x9d8 JUMPDEST
0x9d9 PUSH1 0x1
0x9db DUP1
0x9dc SLOAD
0x9dd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9f2 NOT
0x9f3 AND
0x9f4 PUSH1 0x1
0x9f6 PUSH1 0xa0
0x9f8 PUSH1 0x2
0x9fa EXP
0x9fb SUB
0x9fc SWAP3
0x9fd SWAP1
0x9fe SWAP3
0x9ff AND
0xa00 SWAP2
0xa01 SWAP1
0xa02 SWAP2
0xa03 OR
0xa04 SWAP1
0xa05 SSTORE
0xa06 JUMP
---
0x9d8: JUMPDEST 
0x9d9: V861 = 0x1
0x9dc: V862 = S[0x1]
0x9dd: V863 = 0xffffffffffffffffffffffffffffffffffffffff
0x9f2: V864 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x9f3: V865 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V862
0x9f4: V866 = 0x1
0x9f6: V867 = 0xa0
0x9f8: V868 = 0x2
0x9fa: V869 = EXP 0x2 0xa0
0x9fb: V870 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9ff: V871 = AND 0xffffffffffffffffffffffffffffffffffffffff V325
0xa03: V872 = OR V871 V865
0xa05: S[0x1] = V872
0xa06: JUMP 0x103
---
Entry stack: [V11, 0x103, V325]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0xa07
[0xa07:0xa14]
---
Predecessors: [0x3bb, 0x3d5, 0xac6, 0xb78]
Successors: [0xa15, 0xa16]
---
0xa07 JUMPDEST
0xa08 PUSH1 0x0
0xa0a DUP3
0xa0b DUP3
0xa0c ADD
0xa0d DUP4
0xa0e DUP2
0xa0f LT
0xa10 ISZERO
0xa11 PUSH2 0xa16
0xa14 JUMPI
---
0xa07: JUMPDEST 
0xa08: V873 = 0x0
0xa0c: V874 = ADD S0 S1
0xa0f: V875 = LT V874 S1
0xa10: V876 = ISZERO V875
0xa11: V877 = 0xa16
0xa14: JUMPI 0xa16 V876
---
Entry stack: [V11, 0x1b3, V176, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x3d5, 0x3f2, 0xaf5, 0xba4}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V874]
Exit stack: [V11, 0x1b3, V176, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x3d5, 0x3f2, 0xaf5, 0xba4}, S1, S0, 0x0, V874]

================================

Block 0xa15
[0xa15:0xa15]
---
Predecessors: [0xa07]
Successors: []
---
0xa15 INVALID
---
0xa15: INVALID 
---
Entry stack: [V11, 0x1b3, V176, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x3d5, 0x3f2, 0xaf5, 0xba4}, S3, S2, 0x0, V874]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1b3, V176, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x3d5, 0x3f2, 0xaf5, 0xba4}, S3, S2, 0x0, V874]

================================

Block 0xa16
[0xa16:0xa1c]
---
Predecessors: [0xa07]
Successors: [0x3d5, 0x3f2, 0xaf5, 0xba4]
---
0xa16 JUMPDEST
0xa17 SWAP4
0xa18 SWAP3
0xa19 POP
0xa1a POP
0xa1b POP
0xa1c JUMP
---
0xa16: JUMPDEST 
0xa1c: JUMP {0x3d5, 0x3f2, 0xaf5, 0xba4}
---
Entry stack: [V11, 0x1b3, V176, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x3d5, 0x3f2, 0xaf5, 0xba4}, S3, S2, 0x0, V874]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V11, 0x1b3, V176, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V874]

================================

Block 0xa1d
[0xa1d:0xa27]
---
Predecessors: [0x5b3, 0x5cd, 0xa5d, 0xa8b, 0xb5e]
Successors: [0xa28, 0xa29]
---
0xa1d JUMPDEST
0xa1e PUSH1 0x0
0xa20 DUP2
0xa21 DUP4
0xa22 LT
0xa23 ISZERO
0xa24 PUSH2 0xa29
0xa27 JUMPI
---
0xa1d: JUMPDEST 
0xa1e: V878 = 0x0
0xa22: V879 = LT S1 S0
0xa23: V880 = ISZERO V879
0xa24: V881 = 0xa29
0xa27: JUMPI 0xa29 V880
---
Entry stack: [V11, 0x1b3, V176, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x5cd, 0x5ea, 0xa8b, 0xac6, 0xb78}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V11, 0x1b3, V176, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x5cd, 0x5ea, 0xa8b, 0xac6, 0xb78}, S1, S0, 0x0]

================================

Block 0xa28
[0xa28:0xa28]
---
Predecessors: [0xa1d]
Successors: []
---
0xa28 INVALID
---
0xa28: INVALID 
---
Entry stack: [V11, 0x1b3, V176, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x5cd, 0x5ea, 0xa8b, 0xac6, 0xb78}, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1b3, V176, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x5cd, 0x5ea, 0xa8b, 0xac6, 0xb78}, S2, S1, 0x0]

================================

Block 0xa29
[0xa29:0xa2e]
---
Predecessors: [0xa1d]
Successors: [0x5cd, 0x5ea, 0xa8b, 0xac6, 0xb78]
---
0xa29 JUMPDEST
0xa2a POP
0xa2b SWAP1
0xa2c SUB
0xa2d SWAP1
0xa2e JUMP
---
0xa29: JUMPDEST 
0xa2c: V882 = SUB S2 S1
0xa2e: JUMP {0x5cd, 0x5ea, 0xa8b, 0xac6, 0xb78}
---
Entry stack: [V11, 0x1b3, V176, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x5cd, 0x5ea, 0xa8b, 0xac6, 0xb78}, S2, S1, 0x0]
Stack pops: 4
Stack additions: [V882]
Exit stack: [V11, 0x1b3, V176, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V882]

================================

Block 0xa2f
[0xa2f:0xa42]
---
Predecessors: [0x69a]
Successors: [0xa43, 0xa47]
---
0xa2f JUMPDEST
0xa30 PUSH1 0x0
0xa32 DUP4
0xa33 PUSH1 0x1
0xa35 PUSH1 0xa0
0xa37 PUSH1 0x2
0xa39 EXP
0xa3a SUB
0xa3b DUP2
0xa3c AND
0xa3d ISZERO
0xa3e ISZERO
0xa3f PUSH2 0xa47
0xa42 JUMPI
---
0xa2f: JUMPDEST 
0xa30: V883 = 0x0
0xa33: V884 = 0x1
0xa35: V885 = 0xa0
0xa37: V886 = 0x2
0xa39: V887 = EXP 0x2 0xa0
0xa3a: V888 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa3c: V889 = AND V176 0xffffffffffffffffffffffffffffffffffffffff
0xa3d: V890 = ISZERO V889
0xa3e: V891 = ISZERO V890
0xa3f: V892 = 0xa47
0xa42: JUMPI 0xa47 V891
---
Entry stack: [V11, 0x1b3, V176, V179, V181, 0x0, V179, 0x6a5, V176, V179, V181]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, S2]
Exit stack: [V11, 0x1b3, V176, V179, V181, 0x0, V179, 0x6a5, V176, V179, V181, 0x0, V176]

================================

Block 0xa43
[0xa43:0xa46]
---
Predecessors: [0xa2f]
Successors: []
---
0xa43 PUSH1 0x0
0xa45 DUP1
0xa46 REVERT
---
0xa43: V893 = 0x0
0xa46: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1b3, V176, V179, V181, 0x0, V179, 0x6a5, V176, V179, V181, 0x0, V176]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1b3, V176, V179, V181, 0x0, V179, 0x6a5, V176, V179, V181, 0x0, V176]

================================

Block 0xa47
[0xa47:0xa58]
---
Predecessors: [0xa2f]
Successors: [0xa59, 0xa5d]
---
0xa47 JUMPDEST
0xa48 DUP4
0xa49 PUSH1 0x1
0xa4b PUSH1 0xa0
0xa4d PUSH1 0x2
0xa4f EXP
0xa50 SUB
0xa51 DUP2
0xa52 AND
0xa53 ISZERO
0xa54 ISZERO
0xa55 PUSH2 0xa5d
0xa58 JUMPI
---
0xa47: JUMPDEST 
0xa49: V894 = 0x1
0xa4b: V895 = 0xa0
0xa4d: V896 = 0x2
0xa4f: V897 = EXP 0x2 0xa0
0xa50: V898 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa52: V899 = AND V179 0xffffffffffffffffffffffffffffffffffffffff
0xa53: V900 = ISZERO V899
0xa54: V901 = ISZERO V900
0xa55: V902 = 0xa5d
0xa58: JUMPI 0xa5d V901
---
Entry stack: [V11, 0x1b3, V176, V179, V181, 0x0, V179, 0x6a5, V176, V179, V181, 0x0, V176]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S3]
Exit stack: [V11, 0x1b3, V176, V179, V181, 0x0, V179, 0x6a5, V176, V179, V181, 0x0, V176, V179]

================================

Block 0xa59
[0xa59:0xa5c]
---
Predecessors: [0xa47]
Successors: []
---
0xa59 PUSH1 0x0
0xa5b DUP1
0xa5c REVERT
---
0xa59: V903 = 0x0
0xa5c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1b3, V176, V179, V181, 0x0, V179, 0x6a5, V176, V179, V181, 0x0, V176, V179]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1b3, V176, V179, V181, 0x0, V179, 0x6a5, V176, V179, V181, 0x0, V176, V179]

================================

Block 0xa5d
[0xa5d:0xa8a]
---
Predecessors: [0xa47]
Successors: [0xa1d]
---
0xa5d JUMPDEST
0xa5e PUSH1 0x1
0xa60 PUSH1 0xa0
0xa62 PUSH1 0x2
0xa64 EXP
0xa65 SUB
0xa66 DUP7
0xa67 AND
0xa68 PUSH1 0x0
0xa6a SWAP1
0xa6b DUP2
0xa6c MSTORE
0xa6d PUSH1 0x8
0xa6f PUSH1 0x20
0xa71 SWAP1
0xa72 DUP2
0xa73 MSTORE
0xa74 PUSH1 0x40
0xa76 DUP1
0xa77 DUP4
0xa78 SHA3
0xa79 CALLER
0xa7a DUP5
0xa7b MSTORE
0xa7c SWAP1
0xa7d SWAP2
0xa7e MSTORE
0xa7f SWAP1
0xa80 SHA3
0xa81 SLOAD
0xa82 PUSH2 0xa8b
0xa85 SWAP1
0xa86 DUP6
0xa87 PUSH2 0xa1d
0xa8a JUMP
---
0xa5d: JUMPDEST 
0xa5e: V904 = 0x1
0xa60: V905 = 0xa0
0xa62: V906 = 0x2
0xa64: V907 = EXP 0x2 0xa0
0xa65: V908 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa67: V909 = AND V176 0xffffffffffffffffffffffffffffffffffffffff
0xa68: V910 = 0x0
0xa6c: M[0x0] = V909
0xa6d: V911 = 0x8
0xa6f: V912 = 0x20
0xa73: M[0x20] = 0x8
0xa74: V913 = 0x40
0xa78: V914 = SHA3 0x0 0x40
0xa79: V915 = CALLER
0xa7b: M[0x0] = V915
0xa7e: M[0x20] = V914
0xa80: V916 = SHA3 0x0 0x40
0xa81: V917 = S[V916]
0xa82: V918 = 0xa8b
0xa87: V919 = 0xa1d
0xa8a: JUMP 0xa1d
---
Entry stack: [V11, 0x1b3, V176, V179, V181, 0x0, V179, 0x6a5, V176, V179, V181, 0x0, V176, V179]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, 0xa8b, V917, S3]
Exit stack: [V11, 0x1b3, V176, V179, V181, 0x0, V179, 0x6a5, V176, V179, V181, 0x0, V176, V179, 0xa8b, V917, V181]

================================

Block 0xa8b
[0xa8b:0xac5]
---
Predecessors: [0xa29]
Successors: [0xa1d]
---
0xa8b JUMPDEST
0xa8c PUSH1 0x1
0xa8e PUSH1 0xa0
0xa90 PUSH1 0x2
0xa92 EXP
0xa93 SUB
0xa94 DUP8
0xa95 AND
0xa96 PUSH1 0x0
0xa98 DUP2
0xa99 DUP2
0xa9a MSTORE
0xa9b PUSH1 0x8
0xa9d PUSH1 0x20
0xa9f SWAP1
0xaa0 DUP2
0xaa1 MSTORE
0xaa2 PUSH1 0x40
0xaa4 DUP1
0xaa5 DUP4
0xaa6 SHA3
0xaa7 CALLER
0xaa8 DUP5
0xaa9 MSTORE
0xaaa DUP3
0xaab MSTORE
0xaac DUP1
0xaad DUP4
0xaae SHA3
0xaaf SWAP5
0xab0 SWAP1
0xab1 SWAP5
0xab2 SSTORE
0xab3 SWAP2
0xab4 DUP2
0xab5 MSTORE
0xab6 PUSH1 0x7
0xab8 SWAP1
0xab9 SWAP2
0xaba MSTORE
0xabb SHA3
0xabc SLOAD
0xabd PUSH2 0xac6
0xac0 SWAP1
0xac1 DUP6
0xac2 PUSH2 0xa1d
0xac5 JUMP
---
0xa8b: JUMPDEST 
0xa8c: V920 = 0x1
0xa8e: V921 = 0xa0
0xa90: V922 = 0x2
0xa92: V923 = EXP 0x2 0xa0
0xa93: V924 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa95: V925 = AND S6 0xffffffffffffffffffffffffffffffffffffffff
0xa96: V926 = 0x0
0xa9a: M[0x0] = V925
0xa9b: V927 = 0x8
0xa9d: V928 = 0x20
0xaa1: M[0x20] = 0x8
0xaa2: V929 = 0x40
0xaa6: V930 = SHA3 0x0 0x40
0xaa7: V931 = CALLER
0xaa9: M[0x0] = V931
0xaab: M[0x20] = V930
0xaae: V932 = SHA3 0x0 0x40
0xab2: S[V932] = V882
0xab5: M[0x0] = V925
0xab6: V933 = 0x7
0xaba: M[0x20] = 0x7
0xabb: V934 = SHA3 0x0 0x40
0xabc: V935 = S[V934]
0xabd: V936 = 0xac6
0xac2: V937 = 0xa1d
0xac5: JUMP 0xa1d
---
Entry stack: [V11, 0x1b3, V176, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V882]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, 0xac6, V935, S4]
Exit stack: [V11, 0x1b3, V176, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0xac6, V935, S4]

================================

Block 0xac6
[0xac6:0xaf4]
---
Predecessors: [0xa29]
Successors: [0xa07]
---
0xac6 JUMPDEST
0xac7 PUSH1 0x1
0xac9 PUSH1 0xa0
0xacb PUSH1 0x2
0xacd EXP
0xace SUB
0xacf DUP1
0xad0 DUP9
0xad1 AND
0xad2 PUSH1 0x0
0xad4 SWAP1
0xad5 DUP2
0xad6 MSTORE
0xad7 PUSH1 0x7
0xad9 PUSH1 0x20
0xadb MSTORE
0xadc PUSH1 0x40
0xade DUP1
0xadf DUP3
0xae0 SHA3
0xae1 SWAP4
0xae2 SWAP1
0xae3 SWAP4
0xae4 SSTORE
0xae5 SWAP1
0xae6 DUP8
0xae7 AND
0xae8 DUP2
0xae9 MSTORE
0xaea SHA3
0xaeb SLOAD
0xaec PUSH2 0xaf5
0xaef SWAP1
0xaf0 DUP6
0xaf1 PUSH2 0xa07
0xaf4 JUMP
---
0xac6: JUMPDEST 
0xac7: V938 = 0x1
0xac9: V939 = 0xa0
0xacb: V940 = 0x2
0xacd: V941 = EXP 0x2 0xa0
0xace: V942 = SUB 0x10000000000000000000000000000000000000000 0x1
0xad1: V943 = AND S6 0xffffffffffffffffffffffffffffffffffffffff
0xad2: V944 = 0x0
0xad6: M[0x0] = V943
0xad7: V945 = 0x7
0xad9: V946 = 0x20
0xadb: M[0x20] = 0x7
0xadc: V947 = 0x40
0xae0: V948 = SHA3 0x0 0x40
0xae4: S[V948] = V882
0xae7: V949 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0xae9: M[0x0] = V949
0xaea: V950 = SHA3 0x0 0x40
0xaeb: V951 = S[V950]
0xaec: V952 = 0xaf5
0xaf1: V953 = 0xa07
0xaf4: JUMP 0xa07
---
Entry stack: [V11, 0x1b3, V176, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V882]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, 0xaf5, V951, S4]
Exit stack: [V11, 0x1b3, V176, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0xaf5, V951, S4]

================================

Block 0xaf5
[0xaf5:0xb45]
---
Predecessors: [0xa16]
Successors: [0x6a5]
---
0xaf5 JUMPDEST
0xaf6 PUSH1 0x1
0xaf8 PUSH1 0xa0
0xafa PUSH1 0x2
0xafc EXP
0xafd SUB
0xafe DUP1
0xaff DUP8
0xb00 AND
0xb01 PUSH1 0x0
0xb03 DUP2
0xb04 DUP2
0xb05 MSTORE
0xb06 PUSH1 0x7
0xb08 PUSH1 0x20
0xb0a SWAP1
0xb0b DUP2
0xb0c MSTORE
0xb0d PUSH1 0x40
0xb0f SWAP2
0xb10 DUP3
0xb11 SWAP1
0xb12 SHA3
0xb13 SWAP5
0xb14 SWAP1
0xb15 SWAP5
0xb16 SSTORE
0xb17 DUP1
0xb18 MLOAD
0xb19 DUP9
0xb1a DUP2
0xb1b MSTORE
0xb1c SWAP1
0xb1d MLOAD
0xb1e SWAP2
0xb1f SWAP4
0xb20 SWAP3
0xb21 DUP11
0xb22 AND
0xb23 SWAP3
0xb24 PUSH1 0x0
0xb26 DUP1
0xb27 MLOAD
0xb28 PUSH1 0x20
0xb2a PUSH2 0xbf2
0xb2d DUP4
0xb2e CODECOPY
0xb2f DUP2
0xb30 MLOAD
0xb31 SWAP2
0xb32 MSTORE
0xb33 SWAP3
0xb34 SWAP2
0xb35 DUP3
0xb36 SWAP1
0xb37 SUB
0xb38 ADD
0xb39 SWAP1
0xb3a LOG3
0xb3b POP
0xb3c PUSH1 0x1
0xb3e SWAP6
0xb3f SWAP5
0xb40 POP
0xb41 POP
0xb42 POP
0xb43 POP
0xb44 POP
0xb45 JUMP
---
0xaf5: JUMPDEST 
0xaf6: V954 = 0x1
0xaf8: V955 = 0xa0
0xafa: V956 = 0x2
0xafc: V957 = EXP 0x2 0xa0
0xafd: V958 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb00: V959 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0xb01: V960 = 0x0
0xb05: M[0x0] = V959
0xb06: V961 = 0x7
0xb08: V962 = 0x20
0xb0c: M[0x20] = 0x7
0xb0d: V963 = 0x40
0xb12: V964 = SHA3 0x0 0x40
0xb16: S[V964] = S0
0xb18: V965 = M[0x40]
0xb1b: M[V965] = S4
0xb1d: V966 = M[0x40]
0xb22: V967 = AND S6 0xffffffffffffffffffffffffffffffffffffffff
0xb24: V968 = 0x0
0xb27: V969 = M[0x0]
0xb28: V970 = 0x20
0xb2a: V971 = 0xbf2
0xb2e: CODECOPY 0x0 0xbf2 0x20
0xb30: V972 = M[0x0]
0xb32: M[0x0] = V969
0xb37: V973 = SUB V965 V966
0xb38: V974 = ADD V973 0x20
0xb3a: LOG V966 V974 V972 V967 V959
0xb3c: V975 = 0x1
0xb45: JUMP {0x0, 0x6a5}
---
Entry stack: [V11, 0x1b3, V176, S11, S10, S9, S8, {0x0, 0x6a5}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 8
Stack additions: [0x1]
Exit stack: [V11, 0x1b3, V176, S11, S10, S9, S8, 0x1]

================================

Block 0xb46
[0xb46:0xb59]
---
Predecessors: [0x961]
Successors: [0xb5a, 0xb5e]
---
0xb46 JUMPDEST
0xb47 PUSH1 0x0
0xb49 DUP3
0xb4a PUSH1 0x1
0xb4c PUSH1 0xa0
0xb4e PUSH1 0x2
0xb50 EXP
0xb51 SUB
0xb52 DUP2
0xb53 AND
0xb54 ISZERO
0xb55 ISZERO
0xb56 PUSH2 0xb5e
0xb59 JUMPI
---
0xb46: JUMPDEST 
0xb47: V976 = 0x0
0xb4a: V977 = 0x1
0xb4c: V978 = 0xa0
0xb4e: V979 = 0x2
0xb50: V980 = EXP 0x2 0xa0
0xb51: V981 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb53: V982 = AND V286 0xffffffffffffffffffffffffffffffffffffffff
0xb54: V983 = ISZERO V982
0xb55: V984 = ISZERO V983
0xb56: V985 = 0xb5e
0xb59: JUMPI 0xb5e V984
---
Entry stack: [V11, 0x1b3, V286, V288, 0x0, V286, 0x96b, V286, V288]
Stack pops: 2
Stack additions: [S1, S0, 0x0, S1]
Exit stack: [V11, 0x1b3, V286, V288, 0x0, V286, 0x96b, V286, V288, 0x0, V286]

================================

Block 0xb5a
[0xb5a:0xb5d]
---
Predecessors: [0xb46]
Successors: []
---
0xb5a PUSH1 0x0
0xb5c DUP1
0xb5d REVERT
---
0xb5a: V986 = 0x0
0xb5d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1b3, V286, V288, 0x0, V286, 0x96b, V286, V288, 0x0, V286]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1b3, V286, V288, 0x0, V286, 0x96b, V286, V288, 0x0, V286]

================================

Block 0xb5e
[0xb5e:0xb77]
---
Predecessors: [0xb46]
Successors: [0xa1d]
---
0xb5e JUMPDEST
0xb5f CALLER
0xb60 PUSH1 0x0
0xb62 SWAP1
0xb63 DUP2
0xb64 MSTORE
0xb65 PUSH1 0x7
0xb67 PUSH1 0x20
0xb69 MSTORE
0xb6a PUSH1 0x40
0xb6c SWAP1
0xb6d SHA3
0xb6e SLOAD
0xb6f PUSH2 0xb78
0xb72 SWAP1
0xb73 DUP5
0xb74 PUSH2 0xa1d
0xb77 JUMP
---
0xb5e: JUMPDEST 
0xb5f: V987 = CALLER
0xb60: V988 = 0x0
0xb64: M[0x0] = V987
0xb65: V989 = 0x7
0xb67: V990 = 0x20
0xb69: M[0x20] = 0x7
0xb6a: V991 = 0x40
0xb6d: V992 = SHA3 0x0 0x40
0xb6e: V993 = S[V992]
0xb6f: V994 = 0xb78
0xb74: V995 = 0xa1d
0xb77: JUMP 0xa1d
---
Entry stack: [V11, 0x1b3, V286, V288, 0x0, V286, 0x96b, V286, V288, 0x0, V286]
Stack pops: 3
Stack additions: [S2, S1, S0, 0xb78, V993, S2]
Exit stack: [V11, 0x1b3, V286, V288, 0x0, V286, 0x96b, V286, V288, 0x0, V286, 0xb78, V993, V288]

================================

Block 0xb78
[0xb78:0xba3]
---
Predecessors: [0xa29]
Successors: [0xa07]
---
0xb78 JUMPDEST
0xb79 CALLER
0xb7a PUSH1 0x0
0xb7c SWAP1
0xb7d DUP2
0xb7e MSTORE
0xb7f PUSH1 0x7
0xb81 PUSH1 0x20
0xb83 MSTORE
0xb84 PUSH1 0x40
0xb86 DUP1
0xb87 DUP3
0xb88 SHA3
0xb89 SWAP3
0xb8a SWAP1
0xb8b SWAP3
0xb8c SSTORE
0xb8d PUSH1 0x1
0xb8f PUSH1 0xa0
0xb91 PUSH1 0x2
0xb93 EXP
0xb94 SUB
0xb95 DUP7
0xb96 AND
0xb97 DUP2
0xb98 MSTORE
0xb99 SHA3
0xb9a SLOAD
0xb9b PUSH2 0xba4
0xb9e SWAP1
0xb9f DUP5
0xba0 PUSH2 0xa07
0xba3 JUMP
---
0xb78: JUMPDEST 
0xb79: V996 = CALLER
0xb7a: V997 = 0x0
0xb7e: M[0x0] = V996
0xb7f: V998 = 0x7
0xb81: V999 = 0x20
0xb83: M[0x20] = 0x7
0xb84: V1000 = 0x40
0xb88: V1001 = SHA3 0x0 0x40
0xb8c: S[V1001] = V882
0xb8d: V1002 = 0x1
0xb8f: V1003 = 0xa0
0xb91: V1004 = 0x2
0xb93: V1005 = EXP 0x2 0xa0
0xb94: V1006 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb96: V1007 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0xb98: M[0x0] = V1007
0xb99: V1008 = SHA3 0x0 0x40
0xb9a: V1009 = S[V1008]
0xb9b: V1010 = 0xba4
0xba0: V1011 = 0xa07
0xba3: JUMP 0xa07
---
Entry stack: [V11, 0x1b3, V176, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V882]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, 0xba4, V1009, S3]
Exit stack: [V11, 0x1b3, V176, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0xba4, V1009, S3]

================================

Block 0xba4
[0xba4:0xbf0]
---
Predecessors: [0xa16]
Successors: [0x96b]
---
0xba4 JUMPDEST
0xba5 PUSH1 0x1
0xba7 PUSH1 0xa0
0xba9 PUSH1 0x2
0xbab EXP
0xbac SUB
0xbad DUP6
0xbae AND
0xbaf PUSH1 0x0
0xbb1 DUP2
0xbb2 DUP2
0xbb3 MSTORE
0xbb4 PUSH1 0x7
0xbb6 PUSH1 0x20
0xbb8 SWAP1
0xbb9 DUP2
0xbba MSTORE
0xbbb PUSH1 0x40
0xbbd SWAP2
0xbbe DUP3
0xbbf SWAP1
0xbc0 SHA3
0xbc1 SWAP4
0xbc2 SWAP1
0xbc3 SWAP4
0xbc4 SSTORE
0xbc5 DUP1
0xbc6 MLOAD
0xbc7 DUP7
0xbc8 DUP2
0xbc9 MSTORE
0xbca SWAP1
0xbcb MLOAD
0xbcc SWAP2
0xbcd SWAP3
0xbce CALLER
0xbcf SWAP3
0xbd0 PUSH1 0x0
0xbd2 DUP1
0xbd3 MLOAD
0xbd4 PUSH1 0x20
0xbd6 PUSH2 0xbf2
0xbd9 DUP4
0xbda CODECOPY
0xbdb DUP2
0xbdc MLOAD
0xbdd SWAP2
0xbde MSTORE
0xbdf SWAP3
0xbe0 DUP2
0xbe1 SWAP1
0xbe2 SUB
0xbe3 SWAP1
0xbe4 SWAP2
0xbe5 ADD
0xbe6 SWAP1
0xbe7 LOG3
0xbe8 POP
0xbe9 PUSH1 0x1
0xbeb SWAP4
0xbec SWAP3
0xbed POP
0xbee POP
0xbef POP
0xbf0 JUMP
---
0xba4: JUMPDEST 
0xba5: V1012 = 0x1
0xba7: V1013 = 0xa0
0xba9: V1014 = 0x2
0xbab: V1015 = EXP 0x2 0xa0
0xbac: V1016 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbae: V1017 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0xbaf: V1018 = 0x0
0xbb3: M[0x0] = V1017
0xbb4: V1019 = 0x7
0xbb6: V1020 = 0x20
0xbba: M[0x20] = 0x7
0xbbb: V1021 = 0x40
0xbc0: V1022 = SHA3 0x0 0x40
0xbc4: S[V1022] = S0
0xbc6: V1023 = M[0x40]
0xbc9: M[V1023] = S3
0xbcb: V1024 = M[0x40]
0xbce: V1025 = CALLER
0xbd0: V1026 = 0x0
0xbd3: V1027 = M[0x0]
0xbd4: V1028 = 0x20
0xbd6: V1029 = 0xbf2
0xbda: CODECOPY 0x0 0xbf2 0x20
0xbdc: V1030 = M[0x0]
0xbde: M[0x0] = V1027
0xbe2: V1031 = SUB V1023 V1024
0xbe5: V1032 = ADD 0x20 V1031
0xbe7: LOG V1024 V1032 V1030 V1025 V1017
0xbe9: V1033 = 0x1
0xbf0: JUMP S5
---
Entry stack: [V11, 0x1b3, V176, S11, S10, S9, S8, {0x0, 0x6a5}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [0x1]
Exit stack: [V11, 0x1b3, V176, S11, S10, S9, S8, {0x0, 0x6a5}, S6, 0x1]

================================

Block 0xbf1
[0xbf1:0xc40]
---
Predecessors: []
Successors: []
---
0xbf1 STOP
0xbf2 MISSING 0xdd
0xbf3 CALLCODE
0xbf4 MSTORE
0xbf5 MISSING 0xad
0xbf6 SHL
0xbf7 MISSING 0xe2
0xbf8 MISSING 0xc8
0xbf9 SWAP12
0xbfa PUSH10 0xc2b068fc378daa952ba7
0xc05 CALL
0xc06 PUSH4 0xc4a11628
0xc0b CREATE2
0xc0c GAS
0xc0d MISSING 0x4d
0xc0e CREATE2
0xc0f MISSING 0x23
0xc10 MISSING 0xb3
0xc11 MISSING 0xef
0xc12 LOG1
0xc13 PUSH6 0x627a7a723058
0xc1a SHA3
0xc1b MISSING 0xd
0xc1c GASLIMIT
0xc1d MISSING 0x1e
0xc1e MISSING 0xdf
0xc1f MISSING 0xb0
0xc20 MISSING 0xcc
0xc21 PUSH31 0x5855dc342579479b86c5cf36e1403e6d01129fdb494b35602c0029
---
0xbf1: STOP 
0xbf2: MISSING 0xdd
0xbf3: V1034 = CALLCODE S0 S1 S2 S3 S4 S5 S6
0xbf4: M[V1034] = S7
0xbf5: MISSING 0xad
0xbf6: V1035 = SHL S0 S1
0xbf7: MISSING 0xe2
0xbf8: MISSING 0xc8
0xbfa: V1036 = 0xc2b068fc378daa952ba7
0xc05: V1037 = CALL 0xc2b068fc378daa952ba7 S12 S1 S2 S3 S4 S5
0xc06: V1038 = 0xc4a11628
0xc0b: V1039 = CREATE2 0xc4a11628 V1037 S6 S7
0xc0c: V1040 = GAS
0xc0d: MISSING 0x4d
0xc0e: V1041 = CREATE2 S0 S1 S2 S3
0xc0f: MISSING 0x23
0xc10: MISSING 0xb3
0xc11: MISSING 0xef
0xc12: LOG S0 S1 S2
0xc13: V1042 = 0x627a7a723058
0xc1a: V1043 = SHA3 0x627a7a723058 S3
0xc1b: MISSING 0xd
0xc1c: V1044 = GASLIMIT
0xc1d: MISSING 0x1e
0xc1e: MISSING 0xdf
0xc1f: MISSING 0xb0
0xc20: MISSING 0xcc
0xc21: V1045 = 0x5855dc342579479b86c5cf36e1403e6d01129fdb494b35602c0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V1035, V1040, V1039, S8, S9, S10, S11, S0, V1041, V1043, V1044, 0x5855dc342579479b86c5cf36e1403e6d01129fdb494b35602c0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x105
Exit block: 0x181
Body: 0x105, 0x10d, 0x111, 0x11a, 0x13c, 0x145, 0x154, 0x168, 0x181, 0x44f, 0x48f, 0x497, 0x4aa, 0x4b8, 0x4cc, 0x4d5

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x18f
Exit block: 0x1b3
Body: 0x18f, 0x197, 0x19b, 0x1b3, 0x4dd, 0x4f1, 0x4f5, 0x4fd, 0x523, 0x52a, 0x52e

Function 2:
Public function signature: 0x18160ddd
Entry block: 0x1c7
Exit block: 0x1dc
Body: 0x1c7, 0x1cf, 0x1d3, 0x1dc, 0x596

Function 3:
Public function signature: 0x205c2878
Entry block: 0x1ee
Exit block: 0x103
Body: 0x103, 0x1ee, 0x1f6, 0x1fa

Function 4:
Public function signature: 0x23b872dd
Entry block: 0x212
Exit block: 0x1b3
Body: 0x1b3, 0x212, 0x21a, 0x21e, 0x681, 0x696, 0x69a, 0xa2f, 0xa43, 0xa47, 0xa59, 0xa5d, 0xa8b

Function 5:
Public function signature: 0x2e1a7d4d
Entry block: 0x23c
Exit block: 0x103
Body: 0x103, 0x23c, 0x244, 0x248, 0x6b8, 0x6c2

Function 6:
Public function signature: 0x313ce567
Entry block: 0x254
Exit block: 0x269
Body: 0x254, 0x25c, 0x260, 0x269, 0x6c5

Function 7:
Public function signature: 0x5a3b7e42
Entry block: 0x27f
Exit block: 0x181
Body: 0x11a, 0x13c, 0x145, 0x154, 0x168, 0x181, 0x27f, 0x287, 0x28b, 0x4aa, 0x4b8, 0x4cc, 0x4d5, 0x6ce, 0x70b, 0x713

Function 8:
Public function signature: 0x5e35359e
Entry block: 0x294
Exit block: 0x103
Body: 0x103, 0x294, 0x29c, 0x2a0, 0x726, 0x739, 0x73a, 0x74c, 0x750, 0x762, 0x766, 0x779, 0x77d, 0x7f5, 0x7f9, 0x804, 0x80d, 0x81f, 0x823, 0x82c, 0x82d

Function 9:
Public function signature: 0x70a08231
Entry block: 0x2be
Exit block: 0x1dc
Body: 0x1dc, 0x2be, 0x2c6, 0x2ca, 0x835

Function 10:
Public function signature: 0x79ba5097
Entry block: 0x2df
Exit block: 0x103
Body: 0x103, 0x2df, 0x2e7, 0x2eb, 0x847, 0x85a, 0x85e

Function 11:
Public function signature: 0x8da5cb5b
Entry block: 0x2f4
Exit block: 0x309
Body: 0x2f4, 0x2fc, 0x300, 0x309, 0x8de

Function 12:
Public function signature: 0x95d89b41
Entry block: 0x325
Exit block: 0x181
Body: 0x11a, 0x13c, 0x145, 0x154, 0x168, 0x181, 0x325, 0x32d, 0x331, 0x4aa, 0x4b8, 0x4cc, 0x4d5, 0x8ed, 0x92d, 0x935

Function 13:
Public function signature: 0xa9059cbb
Entry block: 0x33a
Exit block: 0x1b3
Body: 0x1b3, 0x33a, 0x342, 0x346, 0x948, 0x95d, 0x961, 0x96b, 0x972, 0x973, 0xb46, 0xb5a, 0xb5e, 0xb78

Function 14:
Public function signature: 0xd0e30db0
Entry block: 0xfb
Exit block: 0x1b3
Body: 0xfb, 0x1b3, 0x3bb, 0x3d5

Function 15:
Public function signature: 0xd4ee1d90
Entry block: 0x35e
Exit block: 0x309
Body: 0x309, 0x35e, 0x366, 0x36a, 0x97d

Function 16:
Public function signature: 0xdd62ed3e
Entry block: 0x373
Exit block: 0x1dc
Body: 0x1dc, 0x373, 0x37b, 0x37f, 0x98c

Function 17:
Public function signature: 0xf2fde38b
Entry block: 0x39a
Exit block: 0x103
Body: 0x103, 0x39a, 0x3a2, 0x3a6, 0x9a9, 0x9bc, 0x9bd, 0x9d4, 0x9d8

Function 18:
Public fallback function
Entry block: 0xfb
Exit block: 0x1b3
Body: 0xfb, 0x1b3, 0x3bb, 0x3d5

Function 19:
Private function
Entry block: 0x59c
Exit block: 0x623
Body: 0x59c, 0x5b3, 0x5cd, 0x5cd, 0x5ea, 0x623, 0xa1d, 0xa29, 0xa8b, 0xac6, 0xac6, 0xb78

Function 20:
Private function
Entry block: 0xa1d
Exit block: 0xa29
Body: 0xa1d, 0xa29

Function 21:
Private function
Entry block: 0xa07
Exit block: 0xa16
Body: 0xa07, 0xa16

