Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x40]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x40
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x40
0xa: JUMPI 0x40 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x84]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x8714bfa
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x84
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x8714bfa
0x1a: V12 = EQ V10 0x8714bfa
0x1b: V13 = 0x84
0x1e: JUMPI 0x84 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0xc3]
---
0x1f DUP1
0x20 PUSH4 0x2f75ca81
0x25 EQ
0x26 PUSH2 0xc3
0x29 JUMPI
---
0x20: V14 = 0x2f75ca81
0x25: V15 = EQ 0x2f75ca81 V10
0x26: V16 = 0xc3
0x29: JUMPI 0xc3 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0x103]
---
0x2a DUP1
0x2b PUSH4 0x9eab503a
0x30 EQ
0x31 PUSH2 0x103
0x34 JUMPI
---
0x2b: V17 = 0x9eab503a
0x30: V18 = EQ 0x9eab503a V10
0x31: V19 = 0x103
0x34: JUMPI 0x103 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0x115]
---
0x35 DUP1
0x36 PUSH4 0xd5f39488
0x3b EQ
0x3c PUSH2 0x115
0x3f JUMPI
---
0x36: V20 = 0xd5f39488
0x3b: V21 = EQ 0xd5f39488 V10
0x3c: V22 = 0x115
0x3f: JUMPI 0x115 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x5d]
---
Predecessors: [0x0, 0x35]
Successors: [0x5e, 0x82]
---
0x40 JUMPDEST
0x41 PUSH2 0x127
0x44 PUSH8 0x16345785d8a0000
0x4d ADDRESS
0x4e PUSH1 0x1
0x50 PUSH1 0xa0
0x52 PUSH1 0x2
0x54 EXP
0x55 SUB
0x56 AND
0x57 BALANCE
0x58 GT
0x59 ISZERO
0x5a PUSH2 0x82
0x5d JUMPI
---
0x40: JUMPDEST 
0x41: V23 = 0x127
0x44: V24 = 0x16345785d8a0000
0x4d: V25 = ADDRESS
0x4e: V26 = 0x1
0x50: V27 = 0xa0
0x52: V28 = 0x2
0x54: V29 = EXP 0x2 0xa0
0x55: V30 = SUB 0x10000000000000000000000000000000000000000 0x1
0x56: V31 = AND 0xffffffffffffffffffffffffffffffffffffffff V25
0x57: V32 = BALANCE V31
0x58: V33 = GT V32 0x16345785d8a0000
0x59: V34 = ISZERO V33
0x5a: V35 = 0x82
0x5d: JUMPI 0x82 V34
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x127]
Exit stack: [V10, 0x127]

================================

Block 0x5e
[0x5e:0x81]
---
Predecessors: [0x40]
Successors: [0x82]
---
0x5e PUSH1 0x1
0x60 SLOAD
0x61 PUSH1 0x1
0x63 PUSH1 0xa0
0x65 PUSH1 0x2
0x67 EXP
0x68 SUB
0x69 SWAP1
0x6a DUP2
0x6b AND
0x6c SWAP1
0x6d PUSH1 0x0
0x6f SWAP1
0x70 ADDRESS
0x71 AND
0x72 BALANCE
0x73 PUSH1 0x60
0x75 DUP3
0x76 DUP2
0x77 DUP2
0x78 DUP2
0x79 DUP6
0x7a DUP9
0x7b DUP4
0x7c CALL
0x7d POP
0x7e POP
0x7f POP
0x80 POP
0x81 POP
---
0x5e: V36 = 0x1
0x60: V37 = S[0x1]
0x61: V38 = 0x1
0x63: V39 = 0xa0
0x65: V40 = 0x2
0x67: V41 = EXP 0x2 0xa0
0x68: V42 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6b: V43 = AND 0xffffffffffffffffffffffffffffffffffffffff V37
0x6d: V44 = 0x0
0x70: V45 = ADDRESS
0x71: V46 = AND V45 0xffffffffffffffffffffffffffffffffffffffff
0x72: V47 = BALANCE V46
0x73: V48 = 0x60
0x7c: V49 = CALL 0x0 V43 V47 0x60 0x0 0x60 0x0
---
Entry stack: [V10, 0x127]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x127]

================================

Block 0x82
[0x82:0x83]
---
Predecessors: [0x40, 0x5e, 0x84]
Successors: [0x127]
---
0x82 JUMPDEST
0x83 JUMP
---
0x82: JUMPDEST 
0x83: JUMP 0x127
---
Entry stack: [V10, 0x127]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x84
[0x84:0x9e]
---
Predecessors: [0xb]
Successors: [0x82, 0x9f]
---
0x84 JUMPDEST
0x85 PUSH2 0x127
0x88 PUSH1 0x0
0x8a SLOAD
0x8b CALLER
0x8c PUSH1 0x1
0x8e PUSH1 0xa0
0x90 PUSH1 0x2
0x92 EXP
0x93 SUB
0x94 SWAP1
0x95 DUP2
0x96 AND
0x97 SWAP2
0x98 AND
0x99 EQ
0x9a ISZERO
0x9b PUSH2 0x82
0x9e JUMPI
---
0x84: JUMPDEST 
0x85: V50 = 0x127
0x88: V51 = 0x0
0x8a: V52 = S[0x0]
0x8b: V53 = CALLER
0x8c: V54 = 0x1
0x8e: V55 = 0xa0
0x90: V56 = 0x2
0x92: V57 = EXP 0x2 0xa0
0x93: V58 = SUB 0x10000000000000000000000000000000000000000 0x1
0x96: V59 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0x98: V60 = AND V52 0xffffffffffffffffffffffffffffffffffffffff
0x99: V61 = EQ V60 V59
0x9a: V62 = ISZERO V61
0x9b: V63 = 0x82
0x9e: JUMPI 0x82 V62
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x127]
Exit stack: [V10, 0x127]

================================

Block 0x9f
[0x9f:0xc2]
---
Predecessors: [0x84]
Successors: [0x127]
---
0x9f PUSH1 0x0
0xa1 DUP1
0xa2 SLOAD
0xa3 PUSH1 0x1
0xa5 PUSH1 0xa0
0xa7 PUSH1 0x2
0xa9 EXP
0xaa SUB
0xab SWAP1
0xac DUP2
0xad AND
0xae SWAP2
0xaf SWAP1
0xb0 ADDRESS
0xb1 AND
0xb2 BALANCE
0xb3 PUSH1 0x60
0xb5 DUP3
0xb6 DUP2
0xb7 DUP2
0xb8 DUP2
0xb9 DUP6
0xba DUP9
0xbb DUP4
0xbc CALL
0xbd POP
0xbe POP
0xbf POP
0xc0 POP
0xc1 POP
0xc2 JUMP
---
0x9f: V64 = 0x0
0xa2: V65 = S[0x0]
0xa3: V66 = 0x1
0xa5: V67 = 0xa0
0xa7: V68 = 0x2
0xa9: V69 = EXP 0x2 0xa0
0xaa: V70 = SUB 0x10000000000000000000000000000000000000000 0x1
0xad: V71 = AND 0xffffffffffffffffffffffffffffffffffffffff V65
0xb0: V72 = ADDRESS
0xb1: V73 = AND V72 0xffffffffffffffffffffffffffffffffffffffff
0xb2: V74 = BALANCE V73
0xb3: V75 = 0x60
0xbc: V76 = CALL 0x0 V71 V74 0x60 0x0 0x60 0x0
0xc2: JUMP 0x127
---
Entry stack: [V10, 0x127]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xc3
[0xc3:0xe0]
---
Predecessors: [0x1f]
Successors: [0xe1, 0x100]
---
0xc3 JUMPDEST
0xc4 PUSH2 0x127
0xc7 PUSH1 0x4
0xc9 CALLDATALOAD
0xca PUSH1 0x0
0xcc SLOAD
0xcd CALLER
0xce PUSH1 0x1
0xd0 PUSH1 0xa0
0xd2 PUSH1 0x2
0xd4 EXP
0xd5 SUB
0xd6 SWAP1
0xd7 DUP2
0xd8 AND
0xd9 SWAP2
0xda AND
0xdb EQ
0xdc ISZERO
0xdd PUSH2 0x100
0xe0 JUMPI
---
0xc3: JUMPDEST 
0xc4: V77 = 0x127
0xc7: V78 = 0x4
0xc9: V79 = CALLDATALOAD 0x4
0xca: V80 = 0x0
0xcc: V81 = S[0x0]
0xcd: V82 = CALLER
0xce: V83 = 0x1
0xd0: V84 = 0xa0
0xd2: V85 = 0x2
0xd4: V86 = EXP 0x2 0xa0
0xd5: V87 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd8: V88 = AND 0xffffffffffffffffffffffffffffffffffffffff V82
0xda: V89 = AND V81 0xffffffffffffffffffffffffffffffffffffffff
0xdb: V90 = EQ V89 V88
0xdc: V91 = ISZERO V90
0xdd: V92 = 0x100
0xe0: JUMPI 0x100 V91
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x127, V79]
Exit stack: [V10, 0x127, V79]

================================

Block 0xe1
[0xe1:0xff]
---
Predecessors: [0xc3]
Successors: [0x100]
---
0xe1 PUSH1 0x1
0xe3 DUP1
0xe4 SLOAD
0xe5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfa NOT
0xfb AND
0xfc DUP3
0xfd OR
0xfe SWAP1
0xff SSTORE
---
0xe1: V93 = 0x1
0xe4: V94 = S[0x1]
0xe5: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0xfa: V96 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xfb: V97 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V94
0xfd: V98 = OR V79 V97
0xff: S[0x1] = V98
---
Entry stack: [V10, 0x127, V79]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x127, V79]

================================

Block 0x100
[0x100:0x102]
---
Predecessors: [0xc3, 0xe1]
Successors: [0x127]
---
0x100 JUMPDEST
0x101 POP
0x102 JUMP
---
0x100: JUMPDEST 
0x102: JUMP 0x127
---
Entry stack: [V10, 0x127, V79]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x103
[0x103:0x114]
---
Predecessors: [0x2a]
Successors: [0x129]
---
0x103 JUMPDEST
0x104 PUSH2 0x129
0x107 PUSH1 0x1
0x109 SLOAD
0x10a PUSH1 0x1
0x10c PUSH1 0xa0
0x10e PUSH1 0x2
0x110 EXP
0x111 SUB
0x112 AND
0x113 DUP2
0x114 JUMP
---
0x103: JUMPDEST 
0x104: V99 = 0x129
0x107: V100 = 0x1
0x109: V101 = S[0x1]
0x10a: V102 = 0x1
0x10c: V103 = 0xa0
0x10e: V104 = 0x2
0x110: V105 = EXP 0x2 0xa0
0x111: V106 = SUB 0x10000000000000000000000000000000000000000 0x1
0x112: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V101
0x114: JUMP 0x129
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x129, V107]
Exit stack: [V10, 0x129, V107]

================================

Block 0x115
[0x115:0x126]
---
Predecessors: [0x35]
Successors: [0x129]
---
0x115 JUMPDEST
0x116 PUSH2 0x129
0x119 PUSH1 0x0
0x11b SLOAD
0x11c PUSH1 0x1
0x11e PUSH1 0xa0
0x120 PUSH1 0x2
0x122 EXP
0x123 SUB
0x124 AND
0x125 DUP2
0x126 JUMP
---
0x115: JUMPDEST 
0x116: V108 = 0x129
0x119: V109 = 0x0
0x11b: V110 = S[0x0]
0x11c: V111 = 0x1
0x11e: V112 = 0xa0
0x120: V113 = 0x2
0x122: V114 = EXP 0x2 0xa0
0x123: V115 = SUB 0x10000000000000000000000000000000000000000 0x1
0x124: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x126: JUMP 0x129
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x129, V116]
Exit stack: [V10, 0x129, V116]

================================

Block 0x127
[0x127:0x128]
---
Predecessors: [0x82, 0x9f, 0x100]
Successors: []
---
0x127 JUMPDEST
0x128 STOP
---
0x127: JUMPDEST 
0x128: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x129
[0x129:0x13b]
---
Predecessors: [0x103, 0x115]
Successors: []
---
0x129 JUMPDEST
0x12a PUSH1 0x1
0x12c PUSH1 0xa0
0x12e PUSH1 0x2
0x130 EXP
0x131 SUB
0x132 AND
0x133 PUSH1 0x60
0x135 SWAP1
0x136 DUP2
0x137 MSTORE
0x138 PUSH1 0x20
0x13a SWAP1
0x13b RETURN
---
0x129: JUMPDEST 
0x12a: V117 = 0x1
0x12c: V118 = 0xa0
0x12e: V119 = 0x2
0x130: V120 = EXP 0x2 0xa0
0x131: V121 = SUB 0x10000000000000000000000000000000000000000 0x1
0x132: V122 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x133: V123 = 0x60
0x137: M[0x60] = V122
0x138: V124 = 0x20
0x13b: RETURN 0x60 0x20
---
Entry stack: [V10, 0x129, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x129]

================================

Function 0:
Public function signature: 0x8714bfa
Entry block: 0x84
Exit block: 0x127
Body: 0x82, 0x84, 0x9f, 0x127

Function 1:
Public function signature: 0x2f75ca81
Entry block: 0xc3
Exit block: 0x127
Body: 0xc3, 0xe1, 0x100, 0x127

Function 2:
Public function signature: 0x9eab503a
Entry block: 0x103
Exit block: 0x129
Body: 0x103, 0x129

Function 3:
Public function signature: 0xd5f39488
Entry block: 0x115
Exit block: 0x129
Body: 0x115, 0x129

Function 4:
Public fallback function
Entry block: 0x40
Exit block: 0x127
Body: 0x40, 0x5e, 0x82, 0x127

