Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4b]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4b
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4b
0xc: JUMPI 0x4b V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0xd7]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x8af1bac9
0x3a DUP2
0x3b EQ
0x3c PUSH2 0xd7
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x8af1bac9
0x3b: V13 = EQ V11 0x8af1bac9
0x3c: V14 = 0xd7
0x3f: JUMPI 0xd7 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x119]
---
0x40 DUP1
0x41 PUSH4 0xce606ee0
0x46 EQ
0x47 PUSH2 0x119
0x4a JUMPI
---
0x41: V15 = 0xce606ee0
0x46: V16 = EQ 0xce606ee0 V11
0x47: V17 = 0x119
0x4a: JUMPI 0x119 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x53]
---
Predecessors: [0x0, 0x40]
Successors: [0x157]
---
0x4b JUMPDEST
0x4c PUSH2 0x54
0x4f CALLER
0x50 PUSH2 0x157
0x53 JUMP
---
0x4b: JUMPDEST 
0x4c: V18 = 0x54
0x4f: V19 = CALLER
0x50: V20 = 0x157
0x53: JUMP 0x157
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x54, V19]
Exit stack: [V11, 0x54, V19]

================================

Block 0x54
[0x54:0x5a]
---
Predecessors: [0x157]
Successors: [0x5b, 0x8c]
---
0x54 JUMPDEST
0x55 ISZERO
0x56 ISZERO
0x57 PUSH2 0x8c
0x5a JUMPI
---
0x54: JUMPDEST 
0x55: V21 = ISZERO V94
0x56: V22 = ISZERO V21
0x57: V23 = 0x8c
0x5a: JUMPI 0x8c V22
---
Entry stack: [V11, V94]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x5b
[0x5b:0x7c]
---
Predecessors: [0x54]
Successors: [0x7d, 0x86]
---
0x5b PUSH1 0x40
0x5d MLOAD
0x5e CALLER
0x5f SWAP1
0x60 CALLVALUE
0x61 DUP1
0x62 ISZERO
0x63 PUSH2 0x8fc
0x66 MUL
0x67 SWAP2
0x68 PUSH1 0x0
0x6a DUP2
0x6b DUP2
0x6c DUP2
0x6d DUP6
0x6e DUP9
0x6f DUP9
0x70 CALL
0x71 SWAP4
0x72 POP
0x73 POP
0x74 POP
0x75 POP
0x76 ISZERO
0x77 DUP1
0x78 ISZERO
0x79 PUSH2 0x86
0x7c JUMPI
---
0x5b: V24 = 0x40
0x5d: V25 = M[0x40]
0x5e: V26 = CALLER
0x60: V27 = CALLVALUE
0x62: V28 = ISZERO V27
0x63: V29 = 0x8fc
0x66: V30 = MUL 0x8fc V28
0x68: V31 = 0x0
0x70: V32 = CALL V30 V26 V27 V25 0x0 V25 0x0
0x76: V33 = ISZERO V32
0x78: V34 = ISZERO V33
0x79: V35 = 0x86
0x7c: JUMPI 0x86 V34
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V33]
Exit stack: [V11, V33]

================================

Block 0x7d
[0x7d:0x85]
---
Predecessors: [0x5b]
Successors: []
---
0x7d RETURNDATASIZE
0x7e PUSH1 0x0
0x80 DUP1
0x81 RETURNDATACOPY
0x82 RETURNDATASIZE
0x83 PUSH1 0x0
0x85 REVERT
---
0x7d: V36 = RETURNDATASIZE
0x7e: V37 = 0x0
0x81: RETURNDATACOPY 0x0 0x0 V36
0x82: V38 = RETURNDATASIZE
0x83: V39 = 0x0
0x85: REVERT 0x0 V38
---
Entry stack: [V11, V33]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V33]

================================

Block 0x86
[0x86:0x8b]
---
Predecessors: [0x5b]
Successors: [0xd5]
---
0x86 JUMPDEST
0x87 POP
0x88 PUSH2 0xd5
0x8b JUMP
---
0x86: JUMPDEST 
0x88: V40 = 0xd5
0x8b: JUMP 0xd5
---
Entry stack: [V11, V33]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x8c
[0x8c:0xc9]
---
Predecessors: [0x54]
Successors: [0xca, 0xd3]
---
0x8c JUMPDEST
0x8d PUSH1 0x0
0x8f DUP1
0x90 SLOAD
0x91 PUSH1 0x40
0x93 MLOAD
0x94 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa9 SWAP1
0xaa SWAP2
0xab AND
0xac SWAP2
0xad CALLVALUE
0xae DUP1
0xaf ISZERO
0xb0 PUSH2 0x8fc
0xb3 MUL
0xb4 SWAP3
0xb5 SWAP1
0xb6 SWAP2
0xb7 DUP2
0xb8 DUP2
0xb9 DUP2
0xba DUP6
0xbb DUP9
0xbc DUP9
0xbd CALL
0xbe SWAP4
0xbf POP
0xc0 POP
0xc1 POP
0xc2 POP
0xc3 ISZERO
0xc4 DUP1
0xc5 ISZERO
0xc6 PUSH2 0xd3
0xc9 JUMPI
---
0x8c: JUMPDEST 
0x8d: V41 = 0x0
0x90: V42 = S[0x0]
0x91: V43 = 0x40
0x93: V44 = M[0x40]
0x94: V45 = 0xffffffffffffffffffffffffffffffffffffffff
0xab: V46 = AND V42 0xffffffffffffffffffffffffffffffffffffffff
0xad: V47 = CALLVALUE
0xaf: V48 = ISZERO V47
0xb0: V49 = 0x8fc
0xb3: V50 = MUL 0x8fc V48
0xbd: V51 = CALL V50 V46 V47 V44 0x0 V44 0x0
0xc3: V52 = ISZERO V51
0xc5: V53 = ISZERO V52
0xc6: V54 = 0xd3
0xc9: JUMPI 0xd3 V53
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V52]
Exit stack: [V11, V52]

================================

Block 0xca
[0xca:0xd2]
---
Predecessors: [0x8c]
Successors: []
---
0xca RETURNDATASIZE
0xcb PUSH1 0x0
0xcd DUP1
0xce RETURNDATACOPY
0xcf RETURNDATASIZE
0xd0 PUSH1 0x0
0xd2 REVERT
---
0xca: V55 = RETURNDATASIZE
0xcb: V56 = 0x0
0xce: RETURNDATACOPY 0x0 0x0 V55
0xcf: V57 = RETURNDATASIZE
0xd0: V58 = 0x0
0xd2: REVERT 0x0 V57
---
Entry stack: [V11, V52]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V52]

================================

Block 0xd3
[0xd3:0xd4]
---
Predecessors: [0x8c]
Successors: [0xd5]
---
0xd3 JUMPDEST
0xd4 POP
---
0xd3: JUMPDEST 
---
Entry stack: [V11, V52]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xd5
[0xd5:0xd6]
---
Predecessors: [0x86, 0xd3]
Successors: []
---
0xd5 JUMPDEST
0xd6 STOP
---
0xd5: JUMPDEST 
0xd6: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd7
[0xd7:0xde]
---
Predecessors: [0xd]
Successors: [0xdf, 0xe3]
---
0xd7 JUMPDEST
0xd8 CALLVALUE
0xd9 DUP1
0xda ISZERO
0xdb PUSH2 0xe3
0xde JUMPI
---
0xd7: JUMPDEST 
0xd8: V59 = CALLVALUE
0xda: V60 = ISZERO V59
0xdb: V61 = 0xe3
0xde: JUMPI 0xe3 V60
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V59]
Exit stack: [V11, V59]

================================

Block 0xdf
[0xdf:0xe2]
---
Predecessors: [0xd7]
Successors: []
---
0xdf PUSH1 0x0
0xe1 DUP1
0xe2 REVERT
---
0xdf: V62 = 0x0
0xe2: REVERT 0x0 0x0
---
Entry stack: [V11, V59]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V59]

================================

Block 0xe3
[0xe3:0x104]
---
Predecessors: [0xd7]
Successors: [0x157]
---
0xe3 JUMPDEST
0xe4 POP
0xe5 PUSH2 0x105
0xe8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfd PUSH1 0x4
0xff CALLDATALOAD
0x100 AND
0x101 PUSH2 0x157
0x104 JUMP
---
0xe3: JUMPDEST 
0xe5: V63 = 0x105
0xe8: V64 = 0xffffffffffffffffffffffffffffffffffffffff
0xfd: V65 = 0x4
0xff: V66 = CALLDATALOAD 0x4
0x100: V67 = AND V66 0xffffffffffffffffffffffffffffffffffffffff
0x101: V68 = 0x157
0x104: JUMP 0x157
---
Entry stack: [V11, V59]
Stack pops: 1
Stack additions: [0x105, V67]
Exit stack: [V11, 0x105, V67]

================================

Block 0x105
[0x105:0x118]
---
Predecessors: [0x157]
Successors: []
---
0x105 JUMPDEST
0x106 PUSH1 0x40
0x108 DUP1
0x109 MLOAD
0x10a SWAP2
0x10b ISZERO
0x10c ISZERO
0x10d DUP3
0x10e MSTORE
0x10f MLOAD
0x110 SWAP1
0x111 DUP2
0x112 SWAP1
0x113 SUB
0x114 PUSH1 0x20
0x116 ADD
0x117 SWAP1
0x118 RETURN
---
0x105: JUMPDEST 
0x106: V69 = 0x40
0x109: V70 = M[0x40]
0x10b: V71 = ISZERO V94
0x10c: V72 = ISZERO V71
0x10e: M[V70] = V72
0x10f: V73 = M[0x40]
0x113: V74 = SUB V70 V73
0x114: V75 = 0x20
0x116: V76 = ADD 0x20 V74
0x118: RETURN V73 V76
---
Entry stack: [V11, V94]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x119
[0x119:0x120]
---
Predecessors: [0x40]
Successors: [0x121, 0x125]
---
0x119 JUMPDEST
0x11a CALLVALUE
0x11b DUP1
0x11c ISZERO
0x11d PUSH2 0x125
0x120 JUMPI
---
0x119: JUMPDEST 
0x11a: V77 = CALLVALUE
0x11c: V78 = ISZERO V77
0x11d: V79 = 0x125
0x120: JUMPI 0x125 V78
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V77]
Exit stack: [V11, V77]

================================

Block 0x121
[0x121:0x124]
---
Predecessors: [0x119]
Successors: []
---
0x121 PUSH1 0x0
0x123 DUP1
0x124 REVERT
---
0x121: V80 = 0x0
0x124: REVERT 0x0 0x0
---
Entry stack: [V11, V77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V77]

================================

Block 0x125
[0x125:0x12d]
---
Predecessors: [0x119]
Successors: [0x186]
---
0x125 JUMPDEST
0x126 POP
0x127 PUSH2 0x12e
0x12a PUSH2 0x186
0x12d JUMP
---
0x125: JUMPDEST 
0x127: V81 = 0x12e
0x12a: V82 = 0x186
0x12d: JUMP 0x186
---
Entry stack: [V11, V77]
Stack pops: 1
Stack additions: [0x12e]
Exit stack: [V11, 0x12e]

================================

Block 0x12e
[0x12e:0x156]
---
Predecessors: [0x186]
Successors: []
---
0x12e JUMPDEST
0x12f PUSH1 0x40
0x131 DUP1
0x132 MLOAD
0x133 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x148 SWAP1
0x149 SWAP3
0x14a AND
0x14b DUP3
0x14c MSTORE
0x14d MLOAD
0x14e SWAP1
0x14f DUP2
0x150 SWAP1
0x151 SUB
0x152 PUSH1 0x20
0x154 ADD
0x155 SWAP1
0x156 RETURN
---
0x12e: JUMPDEST 
0x12f: V83 = 0x40
0x132: V84 = M[0x40]
0x133: V85 = 0xffffffffffffffffffffffffffffffffffffffff
0x14a: V86 = AND V98 0xffffffffffffffffffffffffffffffffffffffff
0x14c: M[V84] = V86
0x14d: V87 = M[0x40]
0x151: V88 = SUB V84 V87
0x152: V89 = 0x20
0x154: V90 = ADD 0x20 V88
0x156: RETURN V87 V90
---
Entry stack: [V11, 0x12e, V98]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x12e]

================================

Block 0x157
[0x157:0x185]
---
Predecessors: [0x4b, 0xe3]
Successors: [0x54, 0x105]
---
0x157 JUMPDEST
0x158 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16d AND
0x16e PUSH20 0x41fe3738b503cbafd01c1fd8dd66b7fe6ec11b01
0x183 EQ
0x184 SWAP1
0x185 JUMP
---
0x157: JUMPDEST 
0x158: V91 = 0xffffffffffffffffffffffffffffffffffffffff
0x16d: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x16e: V93 = 0x41fe3738b503cbafd01c1fd8dd66b7fe6ec11b01
0x183: V94 = EQ 0x41fe3738b503cbafd01c1fd8dd66b7fe6ec11b01 V92
0x185: JUMP {0x54, 0x105}
---
Entry stack: [V11, {0x54, 0x105}, S0]
Stack pops: 2
Stack additions: [V94]
Exit stack: [V11, V94]

================================

Block 0x186
[0x186:0x1a1]
---
Predecessors: [0x125]
Successors: [0x12e]
---
0x186 JUMPDEST
0x187 PUSH1 0x0
0x189 SLOAD
0x18a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19f AND
0x1a0 DUP2
0x1a1 JUMP
---
0x186: JUMPDEST 
0x187: V95 = 0x0
0x189: V96 = S[0x0]
0x18a: V97 = 0xffffffffffffffffffffffffffffffffffffffff
0x19f: V98 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x1a1: JUMP 0x12e
---
Entry stack: [V11, 0x12e]
Stack pops: 1
Stack additions: [S0, V98]
Exit stack: [V11, 0x12e, V98]

================================

Block 0x1a2
[0x1a2:0x1d7]
---
Predecessors: []
Successors: []
---
0x1a2 STOP
0x1a3 LOG1
0x1a4 PUSH6 0x627a7a723058
0x1ab SHA3
0x1ac STOP
0x1ad MISSING 0xb5
0x1ae PUSH11 0x24862f52c665e2c49611f3
0x1ba MUL
0x1bb MISSING 0xae
0x1bc EXTCODESIZE
0x1bd MISSING 0xcb
0x1be COINBASE
0x1bf COINBASE
0x1c0 DUP5
0x1c1 MISSING 0xda
0x1c2 MISSING 0x2e
0x1c3 MISSING 0x4c
0x1c4 MISSING 0xcf
0x1c5 MISSING 0xf7
0x1c6 PUSH17 0xef612434b00029
---
0x1a2: STOP 
0x1a3: LOG S0 S1 S2
0x1a4: V99 = 0x627a7a723058
0x1ab: V100 = SHA3 0x627a7a723058 S3
0x1ac: STOP 
0x1ad: MISSING 0xb5
0x1ae: V101 = 0x24862f52c665e2c49611f3
0x1ba: V102 = MUL 0x24862f52c665e2c49611f3 S0
0x1bb: MISSING 0xae
0x1bc: V103 = EXTCODESIZE S0
0x1bd: MISSING 0xcb
0x1be: V104 = COINBASE
0x1bf: V105 = COINBASE
0x1c1: MISSING 0xda
0x1c2: MISSING 0x2e
0x1c3: MISSING 0x4c
0x1c4: MISSING 0xcf
0x1c5: MISSING 0xf7
0x1c6: V106 = 0xef612434b00029
---
Entry stack: []
Stack pops: 0
Stack additions: [V100, V102, V103, S2, V105, V104, S0, S1, S2, 0xef612434b00029]
Exit stack: []

================================

Function 0:
Public function signature: 0x8af1bac9
Entry block: 0xd7
Exit block: 0xdf
Body: 0xd7, 0xdf, 0xe3, 0x105

Function 1:
Public function signature: 0xce606ee0
Entry block: 0x119
Exit block: 0x12e
Body: 0x119, 0x121, 0x125, 0x12e, 0x186

Function 2:
Public fallback function
Entry block: 0x4b
Exit block: 0xd5
Body: 0x4b, 0x54, 0x5b, 0x7d, 0x86, 0x8c, 0xca, 0xd3, 0xd5

