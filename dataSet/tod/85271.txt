Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xb6]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xb6
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xb6
0xc: JUMPI 0xb6 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0xc3]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x27ebe40a
0x21 DUP2
0x22 EQ
0x23 PUSH2 0xc3
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x27ebe40a
0x22: V15 = EQ V13 0x27ebe40a
0x23: V16 = 0xc3
0x26: JUMPI 0xc3 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0xee]
---
0x27 DUP1
0x28 PUSH4 0x3f4ba83a
0x2d EQ
0x2e PUSH2 0xee
0x31 JUMPI
---
0x28: V17 = 0x3f4ba83a
0x2d: V18 = EQ 0x3f4ba83a V13
0x2e: V19 = 0xee
0x31: JUMPI 0xee V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x115]
---
0x32 DUP1
0x33 PUSH4 0x454a2ab3
0x38 EQ
0x39 PUSH2 0x115
0x3c JUMPI
---
0x33: V20 = 0x454a2ab3
0x38: V21 = EQ 0x454a2ab3 V13
0x39: V22 = 0x115
0x3c: JUMPI 0x115 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x120]
---
0x3d DUP1
0x3e PUSH4 0x5c975abb
0x43 EQ
0x44 PUSH2 0x120
0x47 JUMPI
---
0x3e: V23 = 0x5c975abb
0x43: V24 = EQ 0x5c975abb V13
0x44: V25 = 0x120
0x47: JUMPI 0x120 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x133]
---
0x48 DUP1
0x49 PUSH4 0x5fd8c710
0x4e EQ
0x4f PUSH2 0x133
0x52 JUMPI
---
0x49: V26 = 0x5fd8c710
0x4e: V27 = EQ 0x5fd8c710 V13
0x4f: V28 = 0x133
0x52: JUMPI 0x133 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x146]
---
0x53 DUP1
0x54 PUSH4 0x78bd7935
0x59 EQ
0x5a PUSH2 0x146
0x5d JUMPI
---
0x54: V29 = 0x78bd7935
0x59: V30 = EQ 0x78bd7935 V13
0x5a: V31 = 0x146
0x5d: JUMPI 0x146 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x197]
---
0x5e DUP1
0x5f PUSH4 0x83b5ff8b
0x64 EQ
0x65 PUSH2 0x197
0x68 JUMPI
---
0x5f: V32 = 0x83b5ff8b
0x64: V33 = EQ 0x83b5ff8b V13
0x65: V34 = 0x197
0x68: JUMPI 0x197 V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x1bc]
---
0x69 DUP1
0x6a PUSH4 0x8456cb59
0x6f EQ
0x70 PUSH2 0x1bc
0x73 JUMPI
---
0x6a: V35 = 0x8456cb59
0x6f: V36 = EQ 0x8456cb59 V13
0x70: V37 = 0x1bc
0x73: JUMPI 0x1bc V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x1cf]
---
0x74 DUP1
0x75 PUSH4 0x878eb368
0x7a EQ
0x7b PUSH2 0x1cf
0x7e JUMPI
---
0x75: V38 = 0x878eb368
0x7a: V39 = EQ 0x878eb368 V13
0x7b: V40 = 0x1cf
0x7e: JUMPI 0x1cf V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x89]
---
Predecessors: [0x74]
Successors: [0x8a, 0x1e5]
---
0x7f DUP1
0x80 PUSH4 0x8da5cb5b
0x85 EQ
0x86 PUSH2 0x1e5
0x89 JUMPI
---
0x80: V41 = 0x8da5cb5b
0x85: V42 = EQ 0x8da5cb5b V13
0x86: V43 = 0x1e5
0x89: JUMPI 0x1e5 V42
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x8a
[0x8a:0x94]
---
Predecessors: [0x7f]
Successors: [0x95, 0x214]
---
0x8a DUP1
0x8b PUSH4 0x96b5a755
0x90 EQ
0x91 PUSH2 0x214
0x94 JUMPI
---
0x8b: V44 = 0x96b5a755
0x90: V45 = EQ 0x96b5a755 V13
0x91: V46 = 0x214
0x94: JUMPI 0x214 V45
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x95
[0x95:0x9f]
---
Predecessors: [0x8a]
Successors: [0xa0, 0x22a]
---
0x95 DUP1
0x96 PUSH4 0xc55d0f56
0x9b EQ
0x9c PUSH2 0x22a
0x9f JUMPI
---
0x96: V47 = 0xc55d0f56
0x9b: V48 = EQ 0xc55d0f56 V13
0x9c: V49 = 0x22a
0x9f: JUMPI 0x22a V48
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xa0
[0xa0:0xaa]
---
Predecessors: [0x95]
Successors: [0xab, 0x240]
---
0xa0 DUP1
0xa1 PUSH4 0xdd1b7a0f
0xa6 EQ
0xa7 PUSH2 0x240
0xaa JUMPI
---
0xa1: V50 = 0xdd1b7a0f
0xa6: V51 = EQ 0xdd1b7a0f V13
0xa7: V52 = 0x240
0xaa: JUMPI 0x240 V51
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xab
[0xab:0xb5]
---
Predecessors: [0xa0]
Successors: [0xb6, 0x253]
---
0xab DUP1
0xac PUSH4 0xf2fde38b
0xb1 EQ
0xb2 PUSH2 0x253
0xb5 JUMPI
---
0xac: V53 = 0xf2fde38b
0xb1: V54 = EQ 0xf2fde38b V13
0xb2: V55 = 0x253
0xb5: JUMPI 0x253 V54
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xb6
[0xb6:0xbc]
---
Predecessors: [0x0, 0xab]
Successors: [0xbd, 0xc1]
---
0xb6 JUMPDEST
0xb7 CALLVALUE
0xb8 ISZERO
0xb9 PUSH2 0xc1
0xbc JUMPI
---
0xb6: JUMPDEST 
0xb7: V56 = CALLVALUE
0xb8: V57 = ISZERO V56
0xb9: V58 = 0xc1
0xbc: JUMPI 0xc1 V57
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xbd
[0xbd:0xc0]
---
Predecessors: [0xb6]
Successors: []
---
0xbd PUSH1 0x0
0xbf DUP1
0xc0 REVERT
---
0xbd: V59 = 0x0
0xc0: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xc1
[0xc1:0xc2]
---
Predecessors: [0xb6, 0x351, 0x40c, 0x624, 0x680, 0x6f1]
Successors: []
---
0xc1 JUMPDEST
0xc2 STOP
---
0xc1: JUMPDEST 
0xc2: STOP 
---
Entry stack: [V13, 0xc1, V66, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc1, V66, S5, S4, S3, S2, S1, S0]

================================

Block 0xc3
[0xc3:0xc9]
---
Predecessors: [0xd]
Successors: [0xca, 0xce]
---
0xc3 JUMPDEST
0xc4 CALLVALUE
0xc5 ISZERO
0xc6 PUSH2 0xce
0xc9 JUMPI
---
0xc3: JUMPDEST 
0xc4: V60 = CALLVALUE
0xc5: V61 = ISZERO V60
0xc6: V62 = 0xce
0xc9: JUMPI 0xce V61
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xca
[0xca:0xcd]
---
Predecessors: [0xc3]
Successors: []
---
0xca PUSH1 0x0
0xcc DUP1
0xcd REVERT
---
0xca: V63 = 0x0
0xcd: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xce
[0xce:0xed]
---
Predecessors: [0xc3]
Successors: [0x272]
---
0xce JUMPDEST
0xcf PUSH2 0xc1
0xd2 PUSH1 0x4
0xd4 CALLDATALOAD
0xd5 PUSH1 0x24
0xd7 CALLDATALOAD
0xd8 PUSH1 0x44
0xda CALLDATALOAD
0xdb PUSH1 0x64
0xdd CALLDATALOAD
0xde PUSH1 0x1
0xe0 PUSH1 0xa0
0xe2 PUSH1 0x2
0xe4 EXP
0xe5 SUB
0xe6 PUSH1 0x84
0xe8 CALLDATALOAD
0xe9 AND
0xea PUSH2 0x272
0xed JUMP
---
0xce: JUMPDEST 
0xcf: V64 = 0xc1
0xd2: V65 = 0x4
0xd4: V66 = CALLDATALOAD 0x4
0xd5: V67 = 0x24
0xd7: V68 = CALLDATALOAD 0x24
0xd8: V69 = 0x44
0xda: V70 = CALLDATALOAD 0x44
0xdb: V71 = 0x64
0xdd: V72 = CALLDATALOAD 0x64
0xde: V73 = 0x1
0xe0: V74 = 0xa0
0xe2: V75 = 0x2
0xe4: V76 = EXP 0x2 0xa0
0xe5: V77 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe6: V78 = 0x84
0xe8: V79 = CALLDATALOAD 0x84
0xe9: V80 = AND V79 0xffffffffffffffffffffffffffffffffffffffff
0xea: V81 = 0x272
0xed: JUMP 0x272
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xc1, V66, V68, V70, V72, V80]
Exit stack: [V13, 0xc1, V66, V68, V70, V72, V80]

================================

Block 0xee
[0xee:0xf4]
---
Predecessors: [0x27]
Successors: [0xf5, 0xf9]
---
0xee JUMPDEST
0xef CALLVALUE
0xf0 ISZERO
0xf1 PUSH2 0xf9
0xf4 JUMPI
---
0xee: JUMPDEST 
0xef: V82 = CALLVALUE
0xf0: V83 = ISZERO V82
0xf1: V84 = 0xf9
0xf4: JUMPI 0xf9 V83
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xf5
[0xf5:0xf8]
---
Predecessors: [0xee]
Successors: []
---
0xf5 PUSH1 0x0
0xf7 DUP1
0xf8 REVERT
---
0xf5: V85 = 0x0
0xf8: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xf9
[0xf9:0x100]
---
Predecessors: [0xee]
Successors: [0x35c]
---
0xf9 JUMPDEST
0xfa PUSH2 0x101
0xfd PUSH2 0x35c
0x100 JUMP
---
0xf9: JUMPDEST 
0xfa: V86 = 0x101
0xfd: V87 = 0x35c
0x100: JUMP 0x35c
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x101]
Exit stack: [V13, 0x101]

================================

Block 0x101
[0x101:0x114]
---
Predecessors: [0x390, 0x40f, 0x561]
Successors: []
---
0x101 JUMPDEST
0x102 PUSH1 0x40
0x104 MLOAD
0x105 SWAP1
0x106 ISZERO
0x107 ISZERO
0x108 DUP2
0x109 MSTORE
0x10a PUSH1 0x20
0x10c ADD
0x10d PUSH1 0x40
0x10f MLOAD
0x110 DUP1
0x111 SWAP2
0x112 SUB
0x113 SWAP1
0x114 RETURN
---
0x101: JUMPDEST 
0x102: V88 = 0x40
0x104: V89 = M[0x40]
0x106: V90 = ISZERO S0
0x107: V91 = ISZERO V90
0x109: M[V89] = V91
0x10a: V92 = 0x20
0x10c: V93 = ADD 0x20 V89
0x10d: V94 = 0x40
0x10f: V95 = M[0x40]
0x112: V96 = SUB V93 V95
0x114: RETURN V95 V96
---
Entry stack: [V13, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S1]

================================

Block 0x115
[0x115:0x11f]
---
Predecessors: [0x32]
Successors: [0x3e0]
---
0x115 JUMPDEST
0x116 PUSH2 0xc1
0x119 PUSH1 0x4
0x11b CALLDATALOAD
0x11c PUSH2 0x3e0
0x11f JUMP
---
0x115: JUMPDEST 
0x116: V97 = 0xc1
0x119: V98 = 0x4
0x11b: V99 = CALLDATALOAD 0x4
0x11c: V100 = 0x3e0
0x11f: JUMP 0x3e0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xc1, V99]
Exit stack: [V13, 0xc1, V99]

================================

Block 0x120
[0x120:0x126]
---
Predecessors: [0x3d]
Successors: [0x127, 0x12b]
---
0x120 JUMPDEST
0x121 CALLVALUE
0x122 ISZERO
0x123 PUSH2 0x12b
0x126 JUMPI
---
0x120: JUMPDEST 
0x121: V101 = CALLVALUE
0x122: V102 = ISZERO V101
0x123: V103 = 0x12b
0x126: JUMPI 0x12b V102
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x127
[0x127:0x12a]
---
Predecessors: [0x120]
Successors: []
---
0x127 PUSH1 0x0
0x129 DUP1
0x12a REVERT
---
0x127: V104 = 0x0
0x12a: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x12b
[0x12b:0x132]
---
Predecessors: [0x120]
Successors: [0x40f]
---
0x12b JUMPDEST
0x12c PUSH2 0x101
0x12f PUSH2 0x40f
0x132 JUMP
---
0x12b: JUMPDEST 
0x12c: V105 = 0x101
0x12f: V106 = 0x40f
0x132: JUMP 0x40f
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x101]
Exit stack: [V13, 0x101]

================================

Block 0x133
[0x133:0x139]
---
Predecessors: [0x48]
Successors: [0x13a, 0x13e]
---
0x133 JUMPDEST
0x134 CALLVALUE
0x135 ISZERO
0x136 PUSH2 0x13e
0x139 JUMPI
---
0x133: JUMPDEST 
0x134: V107 = CALLVALUE
0x135: V108 = ISZERO V107
0x136: V109 = 0x13e
0x139: JUMPI 0x13e V108
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x13a
[0x13a:0x13d]
---
Predecessors: [0x133]
Successors: []
---
0x13a PUSH1 0x0
0x13c DUP1
0x13d REVERT
---
0x13a: V110 = 0x0
0x13d: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x13e
[0x13e:0x145]
---
Predecessors: [0x133]
Successors: [0x41f]
---
0x13e JUMPDEST
0x13f PUSH2 0xc1
0x142 PUSH2 0x41f
0x145 JUMP
---
0x13e: JUMPDEST 
0x13f: V111 = 0xc1
0x142: V112 = 0x41f
0x145: JUMP 0x41f
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xc1]
Exit stack: [V13, 0xc1]

================================

Block 0x146
[0x146:0x14c]
---
Predecessors: [0x53]
Successors: [0x14d, 0x151]
---
0x146 JUMPDEST
0x147 CALLVALUE
0x148 ISZERO
0x149 PUSH2 0x151
0x14c JUMPI
---
0x146: JUMPDEST 
0x147: V113 = CALLVALUE
0x148: V114 = ISZERO V113
0x149: V115 = 0x151
0x14c: JUMPI 0x151 V114
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x14d
[0x14d:0x150]
---
Predecessors: [0x146]
Successors: []
---
0x14d PUSH1 0x0
0x14f DUP1
0x150 REVERT
---
0x14d: V116 = 0x0
0x150: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x151
[0x151:0x15b]
---
Predecessors: [0x146]
Successors: [0x49b]
---
0x151 JUMPDEST
0x152 PUSH2 0x15c
0x155 PUSH1 0x4
0x157 CALLDATALOAD
0x158 PUSH2 0x49b
0x15b JUMP
---
0x151: JUMPDEST 
0x152: V117 = 0x15c
0x155: V118 = 0x4
0x157: V119 = CALLDATALOAD 0x4
0x158: V120 = 0x49b
0x15b: JUMP 0x49b
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x15c, V119]
Exit stack: [V13, 0x15c, V119]

================================

Block 0x15c
[0x15c:0x196]
---
Predecessors: [0x4c5]
Successors: []
---
0x15c JUMPDEST
0x15d PUSH1 0x40
0x15f MLOAD
0x160 PUSH1 0x1
0x162 PUSH1 0xa0
0x164 PUSH1 0x2
0x166 EXP
0x167 SUB
0x168 SWAP1
0x169 SWAP6
0x16a AND
0x16b DUP6
0x16c MSTORE
0x16d PUSH1 0x20
0x16f DUP6
0x170 ADD
0x171 SWAP4
0x172 SWAP1
0x173 SWAP4
0x174 MSTORE
0x175 PUSH1 0x40
0x177 DUP1
0x178 DUP6
0x179 ADD
0x17a SWAP3
0x17b SWAP1
0x17c SWAP3
0x17d MSTORE
0x17e PUSH1 0x60
0x180 DUP5
0x181 ADD
0x182 MSTORE
0x183 PUSH1 0x80
0x185 DUP4
0x186 ADD
0x187 SWAP2
0x188 SWAP1
0x189 SWAP2
0x18a MSTORE
0x18b PUSH1 0xa0
0x18d SWAP1
0x18e SWAP2
0x18f ADD
0x190 SWAP1
0x191 MLOAD
0x192 DUP1
0x193 SWAP2
0x194 SUB
0x195 SWAP1
0x196 RETURN
---
0x15c: JUMPDEST 
0x15d: V121 = 0x40
0x15f: V122 = M[0x40]
0x160: V123 = 0x1
0x162: V124 = 0xa0
0x164: V125 = 0x2
0x166: V126 = EXP 0x2 0xa0
0x167: V127 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16a: V128 = AND V451 0xffffffffffffffffffffffffffffffffffffffff
0x16c: M[V122] = V128
0x16d: V129 = 0x20
0x170: V130 = ADD V122 0x20
0x174: M[V130] = V457
0x175: V131 = 0x40
0x179: V132 = ADD V122 0x40
0x17d: M[V132] = V460
0x17e: V133 = 0x60
0x181: V134 = ADD V122 0x60
0x182: M[V134] = V462
0x183: V135 = 0x80
0x186: V136 = ADD V122 0x80
0x18a: M[V136] = V465
0x18b: V137 = 0xa0
0x18f: V138 = ADD V122 0xa0
0x191: V139 = M[0x40]
0x194: V140 = SUB V138 V139
0x196: RETURN V139 V140
---
Entry stack: [V13, 0xc1, V99, S5, V451, V457, V460, V462, V465]
Stack pops: 5
Stack additions: []
Exit stack: [V13, 0xc1, V99, S5]

================================

Block 0x197
[0x197:0x19d]
---
Predecessors: [0x5e]
Successors: [0x19e, 0x1a2]
---
0x197 JUMPDEST
0x198 CALLVALUE
0x199 ISZERO
0x19a PUSH2 0x1a2
0x19d JUMPI
---
0x197: JUMPDEST 
0x198: V141 = CALLVALUE
0x199: V142 = ISZERO V141
0x19a: V143 = 0x1a2
0x19d: JUMPI 0x1a2 V142
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x19e
[0x19e:0x1a1]
---
Predecessors: [0x197]
Successors: []
---
0x19e PUSH1 0x0
0x1a0 DUP1
0x1a1 REVERT
---
0x19e: V144 = 0x0
0x1a1: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1a2
[0x1a2:0x1a9]
---
Predecessors: [0x197]
Successors: [0x528]
---
0x1a2 JUMPDEST
0x1a3 PUSH2 0x1aa
0x1a6 PUSH2 0x528
0x1a9 JUMP
---
0x1a2: JUMPDEST 
0x1a3: V145 = 0x1aa
0x1a6: V146 = 0x528
0x1a9: JUMP 0x528
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1aa]
Exit stack: [V13, 0x1aa]

================================

Block 0x1aa
[0x1aa:0x1bb]
---
Predecessors: [0x528, 0x6b0]
Successors: []
---
0x1aa JUMPDEST
0x1ab PUSH1 0x40
0x1ad MLOAD
0x1ae SWAP1
0x1af DUP2
0x1b0 MSTORE
0x1b1 PUSH1 0x20
0x1b3 ADD
0x1b4 PUSH1 0x40
0x1b6 MLOAD
0x1b7 DUP1
0x1b8 SWAP2
0x1b9 SUB
0x1ba SWAP1
0x1bb RETURN
---
0x1aa: JUMPDEST 
0x1ab: V147 = 0x40
0x1ad: V148 = M[0x40]
0x1b0: M[V148] = V467
0x1b1: V149 = 0x20
0x1b3: V150 = ADD 0x20 V148
0x1b4: V151 = 0x40
0x1b6: V152 = M[0x40]
0x1b9: V153 = SUB V150 V152
0x1bb: RETURN V152 V153
---
Entry stack: [V13, 0x1aa, V467]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x1aa]

================================

Block 0x1bc
[0x1bc:0x1c2]
---
Predecessors: [0x69]
Successors: [0x1c3, 0x1c7]
---
0x1bc JUMPDEST
0x1bd CALLVALUE
0x1be ISZERO
0x1bf PUSH2 0x1c7
0x1c2 JUMPI
---
0x1bc: JUMPDEST 
0x1bd: V154 = CALLVALUE
0x1be: V155 = ISZERO V154
0x1bf: V156 = 0x1c7
0x1c2: JUMPI 0x1c7 V155
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1c3
[0x1c3:0x1c6]
---
Predecessors: [0x1bc]
Successors: []
---
0x1c3 PUSH1 0x0
0x1c5 DUP1
0x1c6 REVERT
---
0x1c3: V157 = 0x0
0x1c6: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1c7
[0x1c7:0x1ce]
---
Predecessors: [0x1bc]
Successors: [0x52e]
---
0x1c7 JUMPDEST
0x1c8 PUSH2 0x101
0x1cb PUSH2 0x52e
0x1ce JUMP
---
0x1c7: JUMPDEST 
0x1c8: V158 = 0x101
0x1cb: V159 = 0x52e
0x1ce: JUMP 0x52e
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x101]
Exit stack: [V13, 0x101]

================================

Block 0x1cf
[0x1cf:0x1d5]
---
Predecessors: [0x74]
Successors: [0x1d6, 0x1da]
---
0x1cf JUMPDEST
0x1d0 CALLVALUE
0x1d1 ISZERO
0x1d2 PUSH2 0x1da
0x1d5 JUMPI
---
0x1cf: JUMPDEST 
0x1d0: V160 = CALLVALUE
0x1d1: V161 = ISZERO V160
0x1d2: V162 = 0x1da
0x1d5: JUMPI 0x1da V161
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1d6
[0x1d6:0x1d9]
---
Predecessors: [0x1cf]
Successors: []
---
0x1d6 PUSH1 0x0
0x1d8 DUP1
0x1d9 REVERT
---
0x1d6: V163 = 0x0
0x1d9: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1da
[0x1da:0x1e4]
---
Predecessors: [0x1cf]
Successors: [0x5b7]
---
0x1da JUMPDEST
0x1db PUSH2 0xc1
0x1de PUSH1 0x4
0x1e0 CALLDATALOAD
0x1e1 PUSH2 0x5b7
0x1e4 JUMP
---
0x1da: JUMPDEST 
0x1db: V164 = 0xc1
0x1de: V165 = 0x4
0x1e0: V166 = CALLDATALOAD 0x4
0x1e1: V167 = 0x5b7
0x1e4: JUMP 0x5b7
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xc1, V166]
Exit stack: [V13, 0xc1, V166]

================================

Block 0x1e5
[0x1e5:0x1eb]
---
Predecessors: [0x7f]
Successors: [0x1ec, 0x1f0]
---
0x1e5 JUMPDEST
0x1e6 CALLVALUE
0x1e7 ISZERO
0x1e8 PUSH2 0x1f0
0x1eb JUMPI
---
0x1e5: JUMPDEST 
0x1e6: V168 = CALLVALUE
0x1e7: V169 = ISZERO V168
0x1e8: V170 = 0x1f0
0x1eb: JUMPI 0x1f0 V169
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1ec
[0x1ec:0x1ef]
---
Predecessors: [0x1e5]
Successors: []
---
0x1ec PUSH1 0x0
0x1ee DUP1
0x1ef REVERT
---
0x1ec: V171 = 0x0
0x1ef: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1f0
[0x1f0:0x1f7]
---
Predecessors: [0x1e5]
Successors: [0x628]
---
0x1f0 JUMPDEST
0x1f1 PUSH2 0x1f8
0x1f4 PUSH2 0x628
0x1f7 JUMP
---
0x1f0: JUMPDEST 
0x1f1: V172 = 0x1f8
0x1f4: V173 = 0x628
0x1f7: JUMP 0x628
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1f8]
Exit stack: [V13, 0x1f8]

================================

Block 0x1f8
[0x1f8:0x213]
---
Predecessors: [0x628, 0x6b7]
Successors: []
---
0x1f8 JUMPDEST
0x1f9 PUSH1 0x40
0x1fb MLOAD
0x1fc PUSH1 0x1
0x1fe PUSH1 0xa0
0x200 PUSH1 0x2
0x202 EXP
0x203 SUB
0x204 SWAP1
0x205 SWAP2
0x206 AND
0x207 DUP2
0x208 MSTORE
0x209 PUSH1 0x20
0x20b ADD
0x20c PUSH1 0x40
0x20e MLOAD
0x20f DUP1
0x210 SWAP2
0x211 SUB
0x212 SWAP1
0x213 RETURN
---
0x1f8: JUMPDEST 
0x1f9: V174 = 0x40
0x1fb: V175 = M[0x40]
0x1fc: V176 = 0x1
0x1fe: V177 = 0xa0
0x200: V178 = 0x2
0x202: V179 = EXP 0x2 0xa0
0x203: V180 = SUB 0x10000000000000000000000000000000000000000 0x1
0x206: V181 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x208: M[V175] = V181
0x209: V182 = 0x20
0x20b: V183 = ADD 0x20 V175
0x20c: V184 = 0x40
0x20e: V185 = M[0x40]
0x211: V186 = SUB V183 V185
0x213: RETURN V185 V186
---
Entry stack: [V13, 0x1f8, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x1f8]

================================

Block 0x214
[0x214:0x21a]
---
Predecessors: [0x8a]
Successors: [0x21b, 0x21f]
---
0x214 JUMPDEST
0x215 CALLVALUE
0x216 ISZERO
0x217 PUSH2 0x21f
0x21a JUMPI
---
0x214: JUMPDEST 
0x215: V187 = CALLVALUE
0x216: V188 = ISZERO V187
0x217: V189 = 0x21f
0x21a: JUMPI 0x21f V188
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x21b
[0x21b:0x21e]
---
Predecessors: [0x214]
Successors: []
---
0x21b PUSH1 0x0
0x21d DUP1
0x21e REVERT
---
0x21b: V190 = 0x0
0x21e: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x21f
[0x21f:0x229]
---
Predecessors: [0x214]
Successors: [0x637]
---
0x21f JUMPDEST
0x220 PUSH2 0xc1
0x223 PUSH1 0x4
0x225 CALLDATALOAD
0x226 PUSH2 0x637
0x229 JUMP
---
0x21f: JUMPDEST 
0x220: V191 = 0xc1
0x223: V192 = 0x4
0x225: V193 = CALLDATALOAD 0x4
0x226: V194 = 0x637
0x229: JUMP 0x637
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xc1, V193]
Exit stack: [V13, 0xc1, V193]

================================

Block 0x22a
[0x22a:0x230]
---
Predecessors: [0x95]
Successors: [0x231, 0x235]
---
0x22a JUMPDEST
0x22b CALLVALUE
0x22c ISZERO
0x22d PUSH2 0x235
0x230 JUMPI
---
0x22a: JUMPDEST 
0x22b: V195 = CALLVALUE
0x22c: V196 = ISZERO V195
0x22d: V197 = 0x235
0x230: JUMPI 0x235 V196
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x231
[0x231:0x234]
---
Predecessors: [0x22a]
Successors: []
---
0x231 PUSH1 0x0
0x233 DUP1
0x234 REVERT
---
0x231: V198 = 0x0
0x234: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x235
[0x235:0x23f]
---
Predecessors: [0x22a]
Successors: [0x685]
---
0x235 JUMPDEST
0x236 PUSH2 0x1aa
0x239 PUSH1 0x4
0x23b CALLDATALOAD
0x23c PUSH2 0x685
0x23f JUMP
---
0x235: JUMPDEST 
0x236: V199 = 0x1aa
0x239: V200 = 0x4
0x23b: V201 = CALLDATALOAD 0x4
0x23c: V202 = 0x685
0x23f: JUMP 0x685
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1aa, V201]
Exit stack: [V13, 0x1aa, V201]

================================

Block 0x240
[0x240:0x246]
---
Predecessors: [0xa0]
Successors: [0x247, 0x24b]
---
0x240 JUMPDEST
0x241 CALLVALUE
0x242 ISZERO
0x243 PUSH2 0x24b
0x246 JUMPI
---
0x240: JUMPDEST 
0x241: V203 = CALLVALUE
0x242: V204 = ISZERO V203
0x243: V205 = 0x24b
0x246: JUMPI 0x24b V204
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x247
[0x247:0x24a]
---
Predecessors: [0x240]
Successors: []
---
0x247 PUSH1 0x0
0x249 DUP1
0x24a REVERT
---
0x247: V206 = 0x0
0x24a: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x24b
[0x24b:0x252]
---
Predecessors: [0x240]
Successors: [0x6b7]
---
0x24b JUMPDEST
0x24c PUSH2 0x1f8
0x24f PUSH2 0x6b7
0x252 JUMP
---
0x24b: JUMPDEST 
0x24c: V207 = 0x1f8
0x24f: V208 = 0x6b7
0x252: JUMP 0x6b7
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1f8]
Exit stack: [V13, 0x1f8]

================================

Block 0x253
[0x253:0x259]
---
Predecessors: [0xab]
Successors: [0x25a, 0x25e]
---
0x253 JUMPDEST
0x254 CALLVALUE
0x255 ISZERO
0x256 PUSH2 0x25e
0x259 JUMPI
---
0x253: JUMPDEST 
0x254: V209 = CALLVALUE
0x255: V210 = ISZERO V209
0x256: V211 = 0x25e
0x259: JUMPI 0x25e V210
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x25a
[0x25a:0x25d]
---
Predecessors: [0x253]
Successors: []
---
0x25a PUSH1 0x0
0x25c DUP1
0x25d REVERT
---
0x25a: V212 = 0x0
0x25d: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x25e
[0x25e:0x271]
---
Predecessors: [0x253]
Successors: [0x6c6]
---
0x25e JUMPDEST
0x25f PUSH2 0xc1
0x262 PUSH1 0x1
0x264 PUSH1 0xa0
0x266 PUSH1 0x2
0x268 EXP
0x269 SUB
0x26a PUSH1 0x4
0x26c CALLDATALOAD
0x26d AND
0x26e PUSH2 0x6c6
0x271 JUMP
---
0x25e: JUMPDEST 
0x25f: V213 = 0xc1
0x262: V214 = 0x1
0x264: V215 = 0xa0
0x266: V216 = 0x2
0x268: V217 = EXP 0x2 0xa0
0x269: V218 = SUB 0x10000000000000000000000000000000000000000 0x1
0x26a: V219 = 0x4
0x26c: V220 = CALLDATALOAD 0x4
0x26d: V221 = AND V220 0xffffffffffffffffffffffffffffffffffffffff
0x26e: V222 = 0x6c6
0x271: JUMP 0x6c6
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xc1, V221]
Exit stack: [V13, 0xc1, V221]

================================

Block 0x272
[0x272:0x279]
---
Predecessors: [0xce]
Successors: [0xc8e]
---
0x272 JUMPDEST
0x273 PUSH2 0x27a
0x276 PUSH2 0xc8e
0x279 JUMP
---
0x272: JUMPDEST 
0x273: V223 = 0x27a
0x276: V224 = 0xc8e
0x279: JUMP 0xc8e
---
Entry stack: [V13, 0xc1, V66, V68, V70, V72, V80]
Stack pops: 0
Stack additions: [0x27a]
Exit stack: [V13, 0xc1, V66, V68, V70, V72, V80, 0x27a]

================================

Block 0x27a
[0x27a:0x28c]
---
Predecessors: [0xc8e]
Successors: [0x28d, 0x291]
---
0x27a JUMPDEST
0x27b PUSH1 0x0
0x27d SLOAD
0x27e PUSH1 0xa0
0x280 PUSH1 0x2
0x282 EXP
0x283 SWAP1
0x284 DIV
0x285 PUSH1 0xff
0x287 AND
0x288 ISZERO
0x289 PUSH2 0x291
0x28c JUMPI
---
0x27a: JUMPDEST 
0x27b: V225 = 0x0
0x27d: V226 = S[0x0]
0x27e: V227 = 0xa0
0x280: V228 = 0x2
0x282: V229 = EXP 0x2 0xa0
0x284: V230 = DIV V226 0x10000000000000000000000000000000000000000
0x285: V231 = 0xff
0x287: V232 = AND 0xff V230
0x288: V233 = ISZERO V232
0x289: V234 = 0x291
0x28c: JUMPI 0x291 V233
---
Entry stack: [V13, 0xc1, V66, V68, V70, V72, V80, V1074]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc1, V66, V68, V70, V72, V80, V1074]

================================

Block 0x28d
[0x28d:0x290]
---
Predecessors: [0x27a]
Successors: []
---
0x28d PUSH1 0x0
0x28f DUP1
0x290 REVERT
---
0x28d: V235 = 0x0
0x290: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc1, V66, V68, V70, V72, V80, V1074]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc1, V66, V68, V70, V72, V80, V1074]

================================

Block 0x291
[0x291:0x2a0]
---
Predecessors: [0x27a]
Successors: [0x2a1, 0x2a5]
---
0x291 JUMPDEST
0x292 DUP5
0x293 PUSH1 0x1
0x295 PUSH1 0x80
0x297 PUSH1 0x2
0x299 EXP
0x29a SUB
0x29b DUP2
0x29c LT
0x29d PUSH2 0x2a5
0x2a0 JUMPI
---
0x291: JUMPDEST 
0x293: V236 = 0x1
0x295: V237 = 0x80
0x297: V238 = 0x2
0x299: V239 = EXP 0x2 0x80
0x29a: V240 = SUB 0x100000000000000000000000000000000 0x1
0x29c: V241 = LT V68 0xffffffffffffffffffffffffffffffff
0x29d: V242 = 0x2a5
0x2a0: JUMPI 0x2a5 V241
---
Entry stack: [V13, 0xc1, V66, V68, V70, V72, V80, V1074]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S4]
Exit stack: [V13, 0xc1, V66, V68, V70, V72, V80, V1074, V68]

================================

Block 0x2a1
[0x2a1:0x2a4]
---
Predecessors: [0x291]
Successors: []
---
0x2a1 PUSH1 0x0
0x2a3 DUP1
0x2a4 REVERT
---
0x2a1: V243 = 0x0
0x2a4: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc1, V66, V68, V70, V72, V80, V1074, V68]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc1, V66, V68, V70, V72, V80, V1074, V68]

================================

Block 0x2a5
[0x2a5:0x2b4]
---
Predecessors: [0x291]
Successors: [0x2b5, 0x2b9]
---
0x2a5 JUMPDEST
0x2a6 DUP5
0x2a7 PUSH1 0x1
0x2a9 PUSH1 0x80
0x2ab PUSH1 0x2
0x2ad EXP
0x2ae SUB
0x2af DUP2
0x2b0 LT
0x2b1 PUSH2 0x2b9
0x2b4 JUMPI
---
0x2a5: JUMPDEST 
0x2a7: V244 = 0x1
0x2a9: V245 = 0x80
0x2ab: V246 = 0x2
0x2ad: V247 = EXP 0x2 0x80
0x2ae: V248 = SUB 0x100000000000000000000000000000000 0x1
0x2b0: V249 = LT V70 0xffffffffffffffffffffffffffffffff
0x2b1: V250 = 0x2b9
0x2b4: JUMPI 0x2b9 V249
---
Entry stack: [V13, 0xc1, V66, V68, V70, V72, V80, V1074, V68]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S4]
Exit stack: [V13, 0xc1, V66, V68, V70, V72, V80, V1074, V68, V70]

================================

Block 0x2b5
[0x2b5:0x2b8]
---
Predecessors: [0x2a5]
Successors: []
---
0x2b5 PUSH1 0x0
0x2b7 DUP1
0x2b8 REVERT
---
0x2b5: V251 = 0x0
0x2b8: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc1, V66, V68, V70, V72, V80, V1074, V68, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc1, V66, V68, V70, V72, V80, V1074, V68, V70]

================================

Block 0x2b9
[0x2b9:0x2ca]
---
Predecessors: [0x2a5]
Successors: [0x2cb, 0x2cf]
---
0x2b9 JUMPDEST
0x2ba DUP5
0x2bb PUSH8 0xffffffffffffffff
0x2c4 DUP2
0x2c5 GT
0x2c6 ISZERO
0x2c7 PUSH2 0x2cf
0x2ca JUMPI
---
0x2b9: JUMPDEST 
0x2bb: V252 = 0xffffffffffffffff
0x2c5: V253 = GT V72 0xffffffffffffffff
0x2c6: V254 = ISZERO V253
0x2c7: V255 = 0x2cf
0x2ca: JUMPI 0x2cf V254
---
Entry stack: [V13, 0xc1, V66, V68, V70, V72, V80, V1074, V68, V70]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S4]
Exit stack: [V13, 0xc1, V66, V68, V70, V72, V80, V1074, V68, V70, V72]

================================

Block 0x2cb
[0x2cb:0x2ce]
---
Predecessors: [0x2b9]
Successors: []
---
0x2cb PUSH1 0x0
0x2cd DUP1
0x2ce REVERT
---
0x2cb: V256 = 0x0
0x2ce: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc1, V66, V68, V70, V72, V80, V1074, V68, V70, V72]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc1, V66, V68, V70, V72, V80, V1074, V68, V70, V72]

================================

Block 0x2cf
[0x2cf:0x2d8]
---
Predecessors: [0x2b9]
Successors: [0x71d]
---
0x2cf JUMPDEST
0x2d0 PUSH2 0x2d9
0x2d3 CALLER
0x2d4 DUP11
0x2d5 PUSH2 0x71d
0x2d8 JUMP
---
0x2cf: JUMPDEST 
0x2d0: V257 = 0x2d9
0x2d3: V258 = CALLER
0x2d5: V259 = 0x71d
0x2d8: JUMP 0x71d
---
Entry stack: [V13, 0xc1, V66, V68, V70, V72, V80, V1074, V68, V70, V72]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x2d9, V258, S8]
Exit stack: [V13, 0xc1, V66, V68, V70, V72, V80, V1074, V68, V70, V72, 0x2d9, V258, V66]

================================

Block 0x2d9
[0x2d9:0x2df]
---
Predecessors: [0x785]
Successors: [0x2e0, 0x2e4]
---
0x2d9 JUMPDEST
0x2da ISZERO
0x2db ISZERO
0x2dc PUSH2 0x2e4
0x2df JUMPI
---
0x2d9: JUMPDEST 
0x2da: V260 = ISZERO V694
0x2db: V261 = ISZERO V260
0x2dc: V262 = 0x2e4
0x2df: JUMPI 0x2e4 V261
---
Entry stack: [V13, 0xc1, V66, V68, V70, V72, V80, V1074, V68, V70, V72, V694]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xc1, V66, V68, V70, V72, V80, V1074, V68, V70, V72]

================================

Block 0x2e0
[0x2e0:0x2e3]
---
Predecessors: [0x2d9]
Successors: []
---
0x2e0 PUSH1 0x0
0x2e2 DUP1
0x2e3 REVERT
---
0x2e0: V263 = 0x0
0x2e3: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc1, V66, V68, V70, V72, V80, V1074, V68, V70, V72]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc1, V66, V68, V70, V72, V80, V1074, V68, V70, V72]

================================

Block 0x2e4
[0x2e4:0x2ed]
---
Predecessors: [0x2d9]
Successors: [0x7a1]
---
0x2e4 JUMPDEST
0x2e5 PUSH2 0x2ee
0x2e8 CALLER
0x2e9 DUP11
0x2ea PUSH2 0x7a1
0x2ed JUMP
---
0x2e4: JUMPDEST 
0x2e5: V264 = 0x2ee
0x2e8: V265 = CALLER
0x2ea: V266 = 0x7a1
0x2ed: JUMP 0x7a1
---
Entry stack: [V13, 0xc1, V66, V68, V70, V72, V80, V1074, V68, V70, V72]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x2ee, V265, S8]
Exit stack: [V13, 0xc1, V66, V68, V70, V72, V80, V1074, V68, V70, V72, 0x2ee, V265, V66]

================================

Block 0x2ee
[0x2ee:0x350]
---
Predecessors: [0x815]
Successors: [0x81c]
---
0x2ee JUMPDEST
0x2ef PUSH1 0xa0
0x2f1 PUSH1 0x40
0x2f3 MLOAD
0x2f4 SWAP1
0x2f5 DUP2
0x2f6 ADD
0x2f7 PUSH1 0x40
0x2f9 MSTORE
0x2fa DUP1
0x2fb DUP7
0x2fc PUSH1 0x1
0x2fe PUSH1 0xa0
0x300 PUSH1 0x2
0x302 EXP
0x303 SUB
0x304 AND
0x305 DUP2
0x306 MSTORE
0x307 PUSH1 0x20
0x309 ADD
0x30a DUP10
0x30b PUSH1 0x1
0x30d PUSH1 0x80
0x30f PUSH1 0x2
0x311 EXP
0x312 SUB
0x313 AND
0x314 DUP2
0x315 MSTORE
0x316 PUSH1 0x20
0x318 ADD
0x319 DUP9
0x31a PUSH1 0x1
0x31c PUSH1 0x80
0x31e PUSH1 0x2
0x320 EXP
0x321 SUB
0x322 AND
0x323 DUP2
0x324 MSTORE
0x325 PUSH1 0x20
0x327 ADD
0x328 DUP8
0x329 PUSH8 0xffffffffffffffff
0x332 AND
0x333 DUP2
0x334 MSTORE
0x335 PUSH1 0x20
0x337 ADD
0x338 TIMESTAMP
0x339 PUSH8 0xffffffffffffffff
0x342 AND
0x343 DUP2
0x344 MSTORE
0x345 POP
0x346 SWAP4
0x347 POP
0x348 PUSH2 0x351
0x34b DUP10
0x34c DUP6
0x34d PUSH2 0x81c
0x350 JUMP
---
0x2ee: JUMPDEST 
0x2ef: V267 = 0xa0
0x2f1: V268 = 0x40
0x2f3: V269 = M[0x40]
0x2f6: V270 = ADD V269 0xa0
0x2f7: V271 = 0x40
0x2f9: M[0x40] = V270
0x2fc: V272 = 0x1
0x2fe: V273 = 0xa0
0x300: V274 = 0x2
0x302: V275 = EXP 0x2 0xa0
0x303: V276 = SUB 0x10000000000000000000000000000000000000000 0x1
0x304: V277 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x306: M[V269] = V277
0x307: V278 = 0x20
0x309: V279 = ADD 0x20 V269
0x30b: V280 = 0x1
0x30d: V281 = 0x80
0x30f: V282 = 0x2
0x311: V283 = EXP 0x2 0x80
0x312: V284 = SUB 0x100000000000000000000000000000000 0x1
0x313: V285 = AND 0xffffffffffffffffffffffffffffffff S7
0x315: M[V279] = V285
0x316: V286 = 0x20
0x318: V287 = ADD 0x20 V279
0x31a: V288 = 0x1
0x31c: V289 = 0x80
0x31e: V290 = 0x2
0x320: V291 = EXP 0x2 0x80
0x321: V292 = SUB 0x100000000000000000000000000000000 0x1
0x322: V293 = AND 0xffffffffffffffffffffffffffffffff S6
0x324: M[V287] = V293
0x325: V294 = 0x20
0x327: V295 = ADD 0x20 V287
0x329: V296 = 0xffffffffffffffff
0x332: V297 = AND 0xffffffffffffffff S5
0x334: M[V295] = V297
0x335: V298 = 0x20
0x337: V299 = ADD 0x20 V295
0x338: V300 = TIMESTAMP
0x339: V301 = 0xffffffffffffffff
0x342: V302 = AND 0xffffffffffffffff V300
0x344: M[V299] = V302
0x348: V303 = 0x351
0x34d: V304 = 0x81c
0x350: JUMP 0x81c
---
Entry stack: [V13, 0xc1, V66, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, V269, S2, S1, S0, 0x351, S8, V269]
Exit stack: [V13, 0xc1, V66, S7, S6, S5, S4, V269, S2, S1, S0, 0x351, V66, V269]

================================

Block 0x351
[0x351:0x35b]
---
Predecessors: [0x838]
Successors: [0xc1]
---
0x351 JUMPDEST
0x352 POP
0x353 POP
0x354 POP
0x355 POP
0x356 POP
0x357 POP
0x358 POP
0x359 POP
0x35a POP
0x35b JUMP
---
0x351: JUMPDEST 
0x35b: JUMP 0xc1
---
Entry stack: [V13, 0xc1, V66, V68, V70, V72, V80, S3, V68, V70, V72]
Stack pops: 10
Stack additions: []
Exit stack: [V13]

================================

Block 0x35c
[0x35c:0x373]
---
Predecessors: [0xf9]
Successors: [0x374, 0x378]
---
0x35c JUMPDEST
0x35d PUSH1 0x0
0x35f DUP1
0x360 SLOAD
0x361 CALLER
0x362 PUSH1 0x1
0x364 PUSH1 0xa0
0x366 PUSH1 0x2
0x368 EXP
0x369 SUB
0x36a SWAP1
0x36b DUP2
0x36c AND
0x36d SWAP2
0x36e AND
0x36f EQ
0x370 PUSH2 0x378
0x373 JUMPI
---
0x35c: JUMPDEST 
0x35d: V305 = 0x0
0x360: V306 = S[0x0]
0x361: V307 = CALLER
0x362: V308 = 0x1
0x364: V309 = 0xa0
0x366: V310 = 0x2
0x368: V311 = EXP 0x2 0xa0
0x369: V312 = SUB 0x10000000000000000000000000000000000000000 0x1
0x36c: V313 = AND 0xffffffffffffffffffffffffffffffffffffffff V307
0x36e: V314 = AND V306 0xffffffffffffffffffffffffffffffffffffffff
0x36f: V315 = EQ V314 V313
0x370: V316 = 0x378
0x373: JUMPI 0x378 V315
---
Entry stack: [V13, 0x101]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x101, 0x0]

================================

Block 0x374
[0x374:0x377]
---
Predecessors: [0x35c]
Successors: []
---
0x374 PUSH1 0x0
0x376 DUP1
0x377 REVERT
---
0x374: V317 = 0x0
0x377: REVERT 0x0 0x0
---
Entry stack: [V13, 0x101, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x101, 0x0]

================================

Block 0x378
[0x378:0x38b]
---
Predecessors: [0x35c]
Successors: [0x38c, 0x390]
---
0x378 JUMPDEST
0x379 PUSH1 0x0
0x37b SLOAD
0x37c PUSH1 0xa0
0x37e PUSH1 0x2
0x380 EXP
0x381 SWAP1
0x382 DIV
0x383 PUSH1 0xff
0x385 AND
0x386 ISZERO
0x387 ISZERO
0x388 PUSH2 0x390
0x38b JUMPI
---
0x378: JUMPDEST 
0x379: V318 = 0x0
0x37b: V319 = S[0x0]
0x37c: V320 = 0xa0
0x37e: V321 = 0x2
0x380: V322 = EXP 0x2 0xa0
0x382: V323 = DIV V319 0x10000000000000000000000000000000000000000
0x383: V324 = 0xff
0x385: V325 = AND 0xff V323
0x386: V326 = ISZERO V325
0x387: V327 = ISZERO V326
0x388: V328 = 0x390
0x38b: JUMPI 0x390 V327
---
Entry stack: [V13, 0x101, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x101, 0x0]

================================

Block 0x38c
[0x38c:0x38f]
---
Predecessors: [0x378]
Successors: []
---
0x38c PUSH1 0x0
0x38e DUP1
0x38f REVERT
---
0x38c: V329 = 0x0
0x38f: REVERT 0x0 0x0
---
Entry stack: [V13, 0x101, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x101, 0x0]

================================

Block 0x390
[0x390:0x3df]
---
Predecessors: [0x378]
Successors: [0x101]
---
0x390 JUMPDEST
0x391 PUSH1 0x0
0x393 DUP1
0x394 SLOAD
0x395 PUSH21 0xff0000000000000000000000000000000000000000
0x3ab NOT
0x3ac AND
0x3ad SWAP1
0x3ae SSTORE
0x3af PUSH32 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
0x3d0 PUSH1 0x40
0x3d2 MLOAD
0x3d3 PUSH1 0x40
0x3d5 MLOAD
0x3d6 DUP1
0x3d7 SWAP2
0x3d8 SUB
0x3d9 SWAP1
0x3da LOG1
0x3db POP
0x3dc PUSH1 0x1
0x3de SWAP1
0x3df JUMP
---
0x390: JUMPDEST 
0x391: V330 = 0x0
0x394: V331 = S[0x0]
0x395: V332 = 0xff0000000000000000000000000000000000000000
0x3ab: V333 = NOT 0xff0000000000000000000000000000000000000000
0x3ac: V334 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V331
0x3ae: S[0x0] = V334
0x3af: V335 = 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
0x3d0: V336 = 0x40
0x3d2: V337 = M[0x40]
0x3d3: V338 = 0x40
0x3d5: V339 = M[0x40]
0x3d8: V340 = SUB V337 V339
0x3da: LOG V339 V340 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
0x3dc: V341 = 0x1
0x3df: JUMP 0x101
---
Entry stack: [V13, 0x101, 0x0]
Stack pops: 2
Stack additions: [0x1]
Exit stack: [V13, 0x1]

================================

Block 0x3e0
[0x3e0:0x3f2]
---
Predecessors: [0x115]
Successors: [0x3f3, 0x3f7]
---
0x3e0 JUMPDEST
0x3e1 PUSH1 0x0
0x3e3 SLOAD
0x3e4 PUSH1 0xa0
0x3e6 PUSH1 0x2
0x3e8 EXP
0x3e9 SWAP1
0x3ea DIV
0x3eb PUSH1 0xff
0x3ed AND
0x3ee ISZERO
0x3ef PUSH2 0x3f7
0x3f2 JUMPI
---
0x3e0: JUMPDEST 
0x3e1: V342 = 0x0
0x3e3: V343 = S[0x0]
0x3e4: V344 = 0xa0
0x3e6: V345 = 0x2
0x3e8: V346 = EXP 0x2 0xa0
0x3ea: V347 = DIV V343 0x10000000000000000000000000000000000000000
0x3eb: V348 = 0xff
0x3ed: V349 = AND 0xff V347
0x3ee: V350 = ISZERO V349
0x3ef: V351 = 0x3f7
0x3f2: JUMPI 0x3f7 V350
---
Entry stack: [V13, 0xc1, V99]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc1, V99]

================================

Block 0x3f3
[0x3f3:0x3f6]
---
Predecessors: [0x3e0]
Successors: []
---
0x3f3 PUSH1 0x0
0x3f5 DUP1
0x3f6 REVERT
---
0x3f3: V352 = 0x0
0x3f6: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc1, V99]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc1, V99]

================================

Block 0x3f7
[0x3f7:0x400]
---
Predecessors: [0x3e0]
Successors: [0x9b7]
---
0x3f7 JUMPDEST
0x3f8 PUSH2 0x401
0x3fb DUP2
0x3fc CALLVALUE
0x3fd PUSH2 0x9b7
0x400 JUMP
---
0x3f7: JUMPDEST 
0x3f8: V353 = 0x401
0x3fc: V354 = CALLVALUE
0x3fd: V355 = 0x9b7
0x400: JUMP 0x9b7
---
Entry stack: [V13, 0xc1, V99]
Stack pops: 1
Stack additions: [S0, 0x401, S0, V354]
Exit stack: [V13, 0xc1, V99, 0x401, V99, V354]

================================

Block 0x401
[0x401:0x40b]
---
Predecessors: [0xa54]
Successors: [0xab0]
---
0x401 JUMPDEST
0x402 POP
0x403 PUSH2 0x40c
0x406 CALLER
0x407 DUP3
0x408 PUSH2 0xab0
0x40b JUMP
---
0x401: JUMPDEST 
0x403: V356 = 0x40c
0x406: V357 = CALLER
0x408: V358 = 0xab0
0x40b: JUMP 0xab0
---
Entry stack: [V13, 0xc1, V99, S0]
Stack pops: 2
Stack additions: [S1, 0x40c, V357, S1]
Exit stack: [V13, 0xc1, V99, 0x40c, V357, V99]

================================

Block 0x40c
[0x40c:0x40e]
---
Predecessors: [0x45e, 0x6e1, 0x815]
Successors: [0xc1]
---
0x40c JUMPDEST
0x40d POP
0x40e JUMP
---
0x40c: JUMPDEST 
0x40e: JUMP S1
---
Entry stack: [V13, 0xc1, V66, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0xc1, V66, S7, S6, S5, S4, S3, S2]

================================

Block 0x40f
[0x40f:0x41e]
---
Predecessors: [0x12b]
Successors: [0x101]
---
0x40f JUMPDEST
0x410 PUSH1 0x0
0x412 SLOAD
0x413 PUSH1 0xa0
0x415 PUSH1 0x2
0x417 EXP
0x418 SWAP1
0x419 DIV
0x41a PUSH1 0xff
0x41c AND
0x41d DUP2
0x41e JUMP
---
0x40f: JUMPDEST 
0x410: V359 = 0x0
0x412: V360 = S[0x0]
0x413: V361 = 0xa0
0x415: V362 = 0x2
0x417: V363 = EXP 0x2 0xa0
0x419: V364 = DIV V360 0x10000000000000000000000000000000000000000
0x41a: V365 = 0xff
0x41c: V366 = AND 0xff V364
0x41e: JUMP 0x101
---
Entry stack: [V13, 0x101]
Stack pops: 1
Stack additions: [S0, V366]
Exit stack: [V13, 0x101, V366]

================================

Block 0x41f
[0x41f:0x43c]
---
Predecessors: [0x13e]
Successors: [0x43d, 0x453]
---
0x41f JUMPDEST
0x420 PUSH1 0x1
0x422 SLOAD
0x423 PUSH1 0x0
0x425 SLOAD
0x426 PUSH1 0x1
0x428 PUSH1 0xa0
0x42a PUSH1 0x2
0x42c EXP
0x42d SUB
0x42e SWAP2
0x42f DUP3
0x430 AND
0x431 SWAP2
0x432 CALLER
0x433 DUP2
0x434 AND
0x435 SWAP2
0x436 AND
0x437 EQ
0x438 DUP1
0x439 PUSH2 0x453
0x43c JUMPI
---
0x41f: JUMPDEST 
0x420: V367 = 0x1
0x422: V368 = S[0x1]
0x423: V369 = 0x0
0x425: V370 = S[0x0]
0x426: V371 = 0x1
0x428: V372 = 0xa0
0x42a: V373 = 0x2
0x42c: V374 = EXP 0x2 0xa0
0x42d: V375 = SUB 0x10000000000000000000000000000000000000000 0x1
0x430: V376 = AND 0xffffffffffffffffffffffffffffffffffffffff V368
0x432: V377 = CALLER
0x434: V378 = AND 0xffffffffffffffffffffffffffffffffffffffff V377
0x436: V379 = AND V370 0xffffffffffffffffffffffffffffffffffffffff
0x437: V380 = EQ V379 V378
0x439: V381 = 0x453
0x43c: JUMPI 0x453 V380
---
Entry stack: [V13, 0xc1]
Stack pops: 0
Stack additions: [V376, V380]
Exit stack: [V13, 0xc1, V376, V380]

================================

Block 0x43d
[0x43d:0x452]
---
Predecessors: [0x41f]
Successors: [0x453]
---
0x43d POP
0x43e DUP1
0x43f PUSH1 0x1
0x441 PUSH1 0xa0
0x443 PUSH1 0x2
0x445 EXP
0x446 SUB
0x447 AND
0x448 CALLER
0x449 PUSH1 0x1
0x44b PUSH1 0xa0
0x44d PUSH1 0x2
0x44f EXP
0x450 SUB
0x451 AND
0x452 EQ
---
0x43f: V382 = 0x1
0x441: V383 = 0xa0
0x443: V384 = 0x2
0x445: V385 = EXP 0x2 0xa0
0x446: V386 = SUB 0x10000000000000000000000000000000000000000 0x1
0x447: V387 = AND 0xffffffffffffffffffffffffffffffffffffffff V376
0x448: V388 = CALLER
0x449: V389 = 0x1
0x44b: V390 = 0xa0
0x44d: V391 = 0x2
0x44f: V392 = EXP 0x2 0xa0
0x450: V393 = SUB 0x10000000000000000000000000000000000000000 0x1
0x451: V394 = AND 0xffffffffffffffffffffffffffffffffffffffff V388
0x452: V395 = EQ V394 V387
---
Entry stack: [V13, 0xc1, V376, V380]
Stack pops: 2
Stack additions: [S1, V395]
Exit stack: [V13, 0xc1, V376, V395]

================================

Block 0x453
[0x453:0x459]
---
Predecessors: [0x41f, 0x43d]
Successors: [0x45a, 0x45e]
---
0x453 JUMPDEST
0x454 ISZERO
0x455 ISZERO
0x456 PUSH2 0x45e
0x459 JUMPI
---
0x453: JUMPDEST 
0x454: V396 = ISZERO S0
0x455: V397 = ISZERO V396
0x456: V398 = 0x45e
0x459: JUMPI 0x45e V397
---
Entry stack: [V13, 0xc1, V376, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xc1, V376]

================================

Block 0x45a
[0x45a:0x45d]
---
Predecessors: [0x453]
Successors: []
---
0x45a PUSH1 0x0
0x45c DUP1
0x45d REVERT
---
0x45a: V399 = 0x0
0x45d: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc1, V376]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc1, V376]

================================

Block 0x45e
[0x45e:0x496]
---
Predecessors: [0x453]
Successors: [0x40c, 0x497]
---
0x45e JUMPDEST
0x45f DUP1
0x460 PUSH1 0x1
0x462 PUSH1 0xa0
0x464 PUSH1 0x2
0x466 EXP
0x467 SUB
0x468 AND
0x469 PUSH2 0x8fc
0x46c ADDRESS
0x46d PUSH1 0x1
0x46f PUSH1 0xa0
0x471 PUSH1 0x2
0x473 EXP
0x474 SUB
0x475 AND
0x476 BALANCE
0x477 SWAP1
0x478 DUP2
0x479 ISZERO
0x47a MUL
0x47b SWAP1
0x47c PUSH1 0x40
0x47e MLOAD
0x47f PUSH1 0x0
0x481 PUSH1 0x40
0x483 MLOAD
0x484 DUP1
0x485 DUP4
0x486 SUB
0x487 DUP2
0x488 DUP6
0x489 DUP9
0x48a DUP9
0x48b CALL
0x48c SWAP4
0x48d POP
0x48e POP
0x48f POP
0x490 POP
0x491 ISZERO
0x492 ISZERO
0x493 PUSH2 0x40c
0x496 JUMPI
---
0x45e: JUMPDEST 
0x460: V400 = 0x1
0x462: V401 = 0xa0
0x464: V402 = 0x2
0x466: V403 = EXP 0x2 0xa0
0x467: V404 = SUB 0x10000000000000000000000000000000000000000 0x1
0x468: V405 = AND 0xffffffffffffffffffffffffffffffffffffffff V376
0x469: V406 = 0x8fc
0x46c: V407 = ADDRESS
0x46d: V408 = 0x1
0x46f: V409 = 0xa0
0x471: V410 = 0x2
0x473: V411 = EXP 0x2 0xa0
0x474: V412 = SUB 0x10000000000000000000000000000000000000000 0x1
0x475: V413 = AND 0xffffffffffffffffffffffffffffffffffffffff V407
0x476: V414 = BALANCE V413
0x479: V415 = ISZERO V414
0x47a: V416 = MUL V415 0x8fc
0x47c: V417 = 0x40
0x47e: V418 = M[0x40]
0x47f: V419 = 0x0
0x481: V420 = 0x40
0x483: V421 = M[0x40]
0x486: V422 = SUB V418 V421
0x48b: V423 = CALL V416 V405 V414 V421 V422 V421 0x0
0x491: V424 = ISZERO V423
0x492: V425 = ISZERO V424
0x493: V426 = 0x40c
0x496: JUMPI 0x40c V425
---
Entry stack: [V13, 0xc1, V376]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0xc1, V376]

================================

Block 0x497
[0x497:0x49a]
---
Predecessors: [0x45e]
Successors: []
---
0x497 PUSH1 0x0
0x499 DUP1
0x49a REVERT
---
0x497: V427 = 0x0
0x49a: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc1, V376]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc1, V376]

================================

Block 0x49b
[0x49b:0x4b9]
---
Predecessors: [0x151]
Successors: [0xb06]
---
0x49b JUMPDEST
0x49c PUSH1 0x0
0x49e DUP2
0x49f DUP2
0x4a0 MSTORE
0x4a1 PUSH1 0x3
0x4a3 PUSH1 0x20
0x4a5 MSTORE
0x4a6 PUSH1 0x40
0x4a8 DUP2
0x4a9 SHA3
0x4aa DUP2
0x4ab SWAP1
0x4ac DUP2
0x4ad SWAP1
0x4ae DUP2
0x4af SWAP1
0x4b0 DUP2
0x4b1 SWAP1
0x4b2 PUSH2 0x4ba
0x4b5 DUP2
0x4b6 PUSH2 0xb06
0x4b9 JUMP
---
0x49b: JUMPDEST 
0x49c: V428 = 0x0
0x4a0: M[0x0] = V119
0x4a1: V429 = 0x3
0x4a3: V430 = 0x20
0x4a5: M[0x20] = 0x3
0x4a6: V431 = 0x40
0x4a9: V432 = SHA3 0x0 0x40
0x4b2: V433 = 0x4ba
0x4b6: V434 = 0xb06
0x4b9: JUMP 0xb06
---
Entry stack: [V13, 0x15c, V119]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, 0x0, 0x0, 0x0, V432, 0x4ba, V432]
Exit stack: [V13, 0x15c, V119, 0x0, 0x0, 0x0, 0x0, 0x0, V432, 0x4ba, V432]

================================

Block 0x4ba
[0x4ba:0x4c0]
---
Predecessors: [0xb06]
Successors: [0x4c1, 0x4c5]
---
0x4ba JUMPDEST
0x4bb ISZERO
0x4bc ISZERO
0x4bd PUSH2 0x4c5
0x4c0 JUMPI
---
0x4ba: JUMPDEST 
0x4bb: V435 = ISZERO V986
0x4bc: V436 = ISZERO V435
0x4bd: V437 = 0x4c5
0x4c0: JUMPI 0x4c5 V436
---
Entry stack: [V13, 0xc1, V99, S9, S8, S7, 0x0, S5, S4, S3, S2, S1, V986]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xc1, V99, S9, S8, S7, 0x0, S5, S4, S3, S2, S1]

================================

Block 0x4c1
[0x4c1:0x4c4]
---
Predecessors: [0x4ba]
Successors: []
---
0x4c1 PUSH1 0x0
0x4c3 DUP1
0x4c4 REVERT
---
0x4c1: V438 = 0x0
0x4c4: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc1, V99, S8, S7, S6, 0x0, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc1, V99, S8, S7, S6, 0x0, S4, S3, S2, S1, S0]

================================

Block 0x4c5
[0x4c5:0x527]
---
Predecessors: [0x4ba]
Successors: [0x15c]
---
0x4c5 JUMPDEST
0x4c6 DUP1
0x4c7 SLOAD
0x4c8 PUSH1 0x1
0x4ca DUP3
0x4cb ADD
0x4cc SLOAD
0x4cd PUSH1 0x2
0x4cf SWAP1
0x4d0 SWAP3
0x4d1 ADD
0x4d2 SLOAD
0x4d3 PUSH1 0x1
0x4d5 PUSH1 0xa0
0x4d7 PUSH1 0x2
0x4d9 EXP
0x4da SUB
0x4db SWAP1
0x4dc SWAP2
0x4dd AND
0x4de SWAP9
0x4df PUSH1 0x1
0x4e1 PUSH1 0x80
0x4e3 PUSH1 0x2
0x4e5 EXP
0x4e6 SUB
0x4e7 DUP1
0x4e8 DUP5
0x4e9 AND
0x4ea SWAP10
0x4eb POP
0x4ec PUSH17 0x100000000000000000000000000000000
0x4fe SWAP1
0x4ff SWAP4
0x500 DIV
0x501 SWAP1
0x502 SWAP3
0x503 AND
0x504 SWAP7
0x505 POP
0x506 PUSH8 0xffffffffffffffff
0x50f DUP1
0x510 DUP3
0x511 AND
0x512 SWAP7
0x513 POP
0x514 PUSH9 0x10000000000000000
0x51e SWAP1
0x51f SWAP2
0x520 DIV
0x521 AND
0x522 SWAP4
0x523 POP
0x524 SWAP2
0x525 POP
0x526 POP
0x527 JUMP
---
0x4c5: JUMPDEST 
0x4c7: V439 = S[S0]
0x4c8: V440 = 0x1
0x4cb: V441 = ADD S0 0x1
0x4cc: V442 = S[V441]
0x4cd: V443 = 0x2
0x4d1: V444 = ADD S0 0x2
0x4d2: V445 = S[V444]
0x4d3: V446 = 0x1
0x4d5: V447 = 0xa0
0x4d7: V448 = 0x2
0x4d9: V449 = EXP 0x2 0xa0
0x4da: V450 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4dd: V451 = AND V439 0xffffffffffffffffffffffffffffffffffffffff
0x4df: V452 = 0x1
0x4e1: V453 = 0x80
0x4e3: V454 = 0x2
0x4e5: V455 = EXP 0x2 0x80
0x4e6: V456 = SUB 0x100000000000000000000000000000000 0x1
0x4e9: V457 = AND V442 0xffffffffffffffffffffffffffffffff
0x4ec: V458 = 0x100000000000000000000000000000000
0x500: V459 = DIV V442 0x100000000000000000000000000000000
0x503: V460 = AND 0xffffffffffffffffffffffffffffffff V459
0x506: V461 = 0xffffffffffffffff
0x511: V462 = AND V445 0xffffffffffffffff
0x514: V463 = 0x10000000000000000
0x520: V464 = DIV V445 0x10000000000000000
0x521: V465 = AND V464 0xffffffffffffffff
0x527: JUMP S7
---
Entry stack: [V13, 0xc1, V99, S8, S7, S6, 0x0, S4, S3, S2, S1, S0]
Stack pops: 8
Stack additions: [V451, V457, V460, V462, V465]
Exit stack: [V13, 0xc1, V99, S8, V451, V457, V460, V462, V465]

================================

Block 0x528
[0x528:0x52d]
---
Predecessors: [0x1a2]
Successors: [0x1aa]
---
0x528 JUMPDEST
0x529 PUSH1 0x2
0x52b SLOAD
0x52c DUP2
0x52d JUMP
---
0x528: JUMPDEST 
0x529: V466 = 0x2
0x52b: V467 = S[0x2]
0x52d: JUMP 0x1aa
---
Entry stack: [V13, 0x1aa]
Stack pops: 1
Stack additions: [S0, V467]
Exit stack: [V13, 0x1aa, V467]

================================

Block 0x52e
[0x52e:0x545]
---
Predecessors: [0x1c7]
Successors: [0x546, 0x54a]
---
0x52e JUMPDEST
0x52f PUSH1 0x0
0x531 DUP1
0x532 SLOAD
0x533 CALLER
0x534 PUSH1 0x1
0x536 PUSH1 0xa0
0x538 PUSH1 0x2
0x53a EXP
0x53b SUB
0x53c SWAP1
0x53d DUP2
0x53e AND
0x53f SWAP2
0x540 AND
0x541 EQ
0x542 PUSH2 0x54a
0x545 JUMPI
---
0x52e: JUMPDEST 
0x52f: V468 = 0x0
0x532: V469 = S[0x0]
0x533: V470 = CALLER
0x534: V471 = 0x1
0x536: V472 = 0xa0
0x538: V473 = 0x2
0x53a: V474 = EXP 0x2 0xa0
0x53b: V475 = SUB 0x10000000000000000000000000000000000000000 0x1
0x53e: V476 = AND 0xffffffffffffffffffffffffffffffffffffffff V470
0x540: V477 = AND V469 0xffffffffffffffffffffffffffffffffffffffff
0x541: V478 = EQ V477 V476
0x542: V479 = 0x54a
0x545: JUMPI 0x54a V478
---
Entry stack: [V13, 0x101]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x101, 0x0]

================================

Block 0x546
[0x546:0x549]
---
Predecessors: [0x52e]
Successors: []
---
0x546 PUSH1 0x0
0x548 DUP1
0x549 REVERT
---
0x546: V480 = 0x0
0x549: REVERT 0x0 0x0
---
Entry stack: [V13, 0x101, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x101, 0x0]

================================

Block 0x54a
[0x54a:0x55c]
---
Predecessors: [0x52e]
Successors: [0x55d, 0x561]
---
0x54a JUMPDEST
0x54b PUSH1 0x0
0x54d SLOAD
0x54e PUSH1 0xa0
0x550 PUSH1 0x2
0x552 EXP
0x553 SWAP1
0x554 DIV
0x555 PUSH1 0xff
0x557 AND
0x558 ISZERO
0x559 PUSH2 0x561
0x55c JUMPI
---
0x54a: JUMPDEST 
0x54b: V481 = 0x0
0x54d: V482 = S[0x0]
0x54e: V483 = 0xa0
0x550: V484 = 0x2
0x552: V485 = EXP 0x2 0xa0
0x554: V486 = DIV V482 0x10000000000000000000000000000000000000000
0x555: V487 = 0xff
0x557: V488 = AND 0xff V486
0x558: V489 = ISZERO V488
0x559: V490 = 0x561
0x55c: JUMPI 0x561 V489
---
Entry stack: [V13, 0x101, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x101, 0x0]

================================

Block 0x55d
[0x55d:0x560]
---
Predecessors: [0x54a]
Successors: []
---
0x55d PUSH1 0x0
0x55f DUP1
0x560 REVERT
---
0x55d: V491 = 0x0
0x560: REVERT 0x0 0x0
---
Entry stack: [V13, 0x101, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x101, 0x0]

================================

Block 0x561
[0x561:0x5b6]
---
Predecessors: [0x54a]
Successors: [0x101]
---
0x561 JUMPDEST
0x562 PUSH1 0x0
0x564 DUP1
0x565 SLOAD
0x566 PUSH21 0xff0000000000000000000000000000000000000000
0x57c NOT
0x57d AND
0x57e PUSH1 0xa0
0x580 PUSH1 0x2
0x582 EXP
0x583 OR
0x584 SWAP1
0x585 SSTORE
0x586 PUSH32 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
0x5a7 PUSH1 0x40
0x5a9 MLOAD
0x5aa PUSH1 0x40
0x5ac MLOAD
0x5ad DUP1
0x5ae SWAP2
0x5af SUB
0x5b0 SWAP1
0x5b1 LOG1
0x5b2 POP
0x5b3 PUSH1 0x1
0x5b5 SWAP1
0x5b6 JUMP
---
0x561: JUMPDEST 
0x562: V492 = 0x0
0x565: V493 = S[0x0]
0x566: V494 = 0xff0000000000000000000000000000000000000000
0x57c: V495 = NOT 0xff0000000000000000000000000000000000000000
0x57d: V496 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V493
0x57e: V497 = 0xa0
0x580: V498 = 0x2
0x582: V499 = EXP 0x2 0xa0
0x583: V500 = OR 0x10000000000000000000000000000000000000000 V496
0x585: S[0x0] = V500
0x586: V501 = 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
0x5a7: V502 = 0x40
0x5a9: V503 = M[0x40]
0x5aa: V504 = 0x40
0x5ac: V505 = M[0x40]
0x5af: V506 = SUB V503 V505
0x5b1: LOG V505 V506 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
0x5b3: V507 = 0x1
0x5b6: JUMP 0x101
---
Entry stack: [V13, 0x101, 0x0]
Stack pops: 2
Stack additions: [0x1]
Exit stack: [V13, 0x1]

================================

Block 0x5b7
[0x5b7:0x5cb]
---
Predecessors: [0x1da]
Successors: [0x5cc, 0x5d0]
---
0x5b7 JUMPDEST
0x5b8 PUSH1 0x0
0x5ba DUP1
0x5bb SLOAD
0x5bc PUSH1 0xa0
0x5be PUSH1 0x2
0x5c0 EXP
0x5c1 SWAP1
0x5c2 DIV
0x5c3 PUSH1 0xff
0x5c5 AND
0x5c6 ISZERO
0x5c7 ISZERO
0x5c8 PUSH2 0x5d0
0x5cb JUMPI
---
0x5b7: JUMPDEST 
0x5b8: V508 = 0x0
0x5bb: V509 = S[0x0]
0x5bc: V510 = 0xa0
0x5be: V511 = 0x2
0x5c0: V512 = EXP 0x2 0xa0
0x5c2: V513 = DIV V509 0x10000000000000000000000000000000000000000
0x5c3: V514 = 0xff
0x5c5: V515 = AND 0xff V513
0x5c6: V516 = ISZERO V515
0x5c7: V517 = ISZERO V516
0x5c8: V518 = 0x5d0
0x5cb: JUMPI 0x5d0 V517
---
Entry stack: [V13, 0xc1, V166]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0xc1, V166, 0x0]

================================

Block 0x5cc
[0x5cc:0x5cf]
---
Predecessors: [0x5b7]
Successors: []
---
0x5cc PUSH1 0x0
0x5ce DUP1
0x5cf REVERT
---
0x5cc: V519 = 0x0
0x5cf: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc1, V166, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc1, V166, 0x0]

================================

Block 0x5d0
[0x5d0:0x5e6]
---
Predecessors: [0x5b7]
Successors: [0x5e7, 0x5eb]
---
0x5d0 JUMPDEST
0x5d1 PUSH1 0x0
0x5d3 SLOAD
0x5d4 CALLER
0x5d5 PUSH1 0x1
0x5d7 PUSH1 0xa0
0x5d9 PUSH1 0x2
0x5db EXP
0x5dc SUB
0x5dd SWAP1
0x5de DUP2
0x5df AND
0x5e0 SWAP2
0x5e1 AND
0x5e2 EQ
0x5e3 PUSH2 0x5eb
0x5e6 JUMPI
---
0x5d0: JUMPDEST 
0x5d1: V520 = 0x0
0x5d3: V521 = S[0x0]
0x5d4: V522 = CALLER
0x5d5: V523 = 0x1
0x5d7: V524 = 0xa0
0x5d9: V525 = 0x2
0x5db: V526 = EXP 0x2 0xa0
0x5dc: V527 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5df: V528 = AND 0xffffffffffffffffffffffffffffffffffffffff V522
0x5e1: V529 = AND V521 0xffffffffffffffffffffffffffffffffffffffff
0x5e2: V530 = EQ V529 V528
0x5e3: V531 = 0x5eb
0x5e6: JUMPI 0x5eb V530
---
Entry stack: [V13, 0xc1, V166, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc1, V166, 0x0]

================================

Block 0x5e7
[0x5e7:0x5ea]
---
Predecessors: [0x5d0]
Successors: []
---
0x5e7 PUSH1 0x0
0x5e9 DUP1
0x5ea REVERT
---
0x5e7: V532 = 0x0
0x5ea: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc1, V166, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc1, V166, 0x0]

================================

Block 0x5eb
[0x5eb:0x602]
---
Predecessors: [0x5d0]
Successors: [0xb06]
---
0x5eb JUMPDEST
0x5ec POP
0x5ed PUSH1 0x0
0x5ef DUP2
0x5f0 DUP2
0x5f1 MSTORE
0x5f2 PUSH1 0x3
0x5f4 PUSH1 0x20
0x5f6 MSTORE
0x5f7 PUSH1 0x40
0x5f9 SWAP1
0x5fa SHA3
0x5fb PUSH2 0x603
0x5fe DUP2
0x5ff PUSH2 0xb06
0x602 JUMP
---
0x5eb: JUMPDEST 
0x5ed: V533 = 0x0
0x5f1: M[0x0] = V166
0x5f2: V534 = 0x3
0x5f4: V535 = 0x20
0x5f6: M[0x20] = 0x3
0x5f7: V536 = 0x40
0x5fa: V537 = SHA3 0x0 0x40
0x5fb: V538 = 0x603
0x5ff: V539 = 0xb06
0x602: JUMP 0xb06
---
Entry stack: [V13, 0xc1, V166, 0x0]
Stack pops: 2
Stack additions: [S1, V537, 0x603, V537]
Exit stack: [V13, 0xc1, V166, V537, 0x603, V537]

================================

Block 0x603
[0x603:0x609]
---
Predecessors: [0xb06]
Successors: [0x60a, 0x60e]
---
0x603 JUMPDEST
0x604 ISZERO
0x605 ISZERO
0x606 PUSH2 0x60e
0x609 JUMPI
---
0x603: JUMPDEST 
0x604: V540 = ISZERO V986
0x605: V541 = ISZERO V540
0x606: V542 = 0x60e
0x609: JUMPI 0x60e V541
---
Entry stack: [V13, 0xc1, V99, S9, S8, S7, 0x0, S5, S4, S3, S2, S1, V986]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xc1, V99, S9, S8, S7, 0x0, S5, S4, S3, S2, S1]

================================

Block 0x60a
[0x60a:0x60d]
---
Predecessors: [0x603]
Successors: []
---
0x60a PUSH1 0x0
0x60c DUP1
0x60d REVERT
---
0x60a: V543 = 0x0
0x60d: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc1, V99, S8, S7, S6, 0x0, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc1, V99, S8, S7, S6, 0x0, S4, S3, S2, S1, S0]

================================

Block 0x60e
[0x60e:0x623]
---
Predecessors: [0x603]
Successors: [0xb27]
---
0x60e JUMPDEST
0x60f DUP1
0x610 SLOAD
0x611 PUSH2 0x624
0x614 SWAP1
0x615 DUP4
0x616 SWAP1
0x617 PUSH1 0x1
0x619 PUSH1 0xa0
0x61b PUSH1 0x2
0x61d EXP
0x61e SUB
0x61f AND
0x620 PUSH2 0xb27
0x623 JUMP
---
0x60e: JUMPDEST 
0x610: V544 = S[S0]
0x611: V545 = 0x624
0x617: V546 = 0x1
0x619: V547 = 0xa0
0x61b: V548 = 0x2
0x61d: V549 = EXP 0x2 0xa0
0x61e: V550 = SUB 0x10000000000000000000000000000000000000000 0x1
0x61f: V551 = AND 0xffffffffffffffffffffffffffffffffffffffff V544
0x620: V552 = 0xb27
0x623: JUMP 0xb27
---
Entry stack: [V13, 0xc1, V99, S8, S7, S6, 0x0, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x624, S1, V551]
Exit stack: [V13, 0xc1, V99, S8, S7, S6, 0x0, S4, S3, S2, S1, S0, 0x624, S1, V551]

================================

Block 0x624
[0x624:0x627]
---
Predecessors: [0xb3a]
Successors: [0xc1]
---
0x624 JUMPDEST
0x625 POP
0x626 POP
0x627 JUMP
---
0x624: JUMPDEST 
0x627: JUMP S2
---
Entry stack: [V13, 0xc1, V66, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0xc1, V66, S4, S3]

================================

Block 0x628
[0x628:0x636]
---
Predecessors: [0x1f0]
Successors: [0x1f8]
---
0x628 JUMPDEST
0x629 PUSH1 0x0
0x62b SLOAD
0x62c PUSH1 0x1
0x62e PUSH1 0xa0
0x630 PUSH1 0x2
0x632 EXP
0x633 SUB
0x634 AND
0x635 DUP2
0x636 JUMP
---
0x628: JUMPDEST 
0x629: V553 = 0x0
0x62b: V554 = S[0x0]
0x62c: V555 = 0x1
0x62e: V556 = 0xa0
0x630: V557 = 0x2
0x632: V558 = EXP 0x2 0xa0
0x633: V559 = SUB 0x10000000000000000000000000000000000000000 0x1
0x634: V560 = AND 0xffffffffffffffffffffffffffffffffffffffff V554
0x636: JUMP 0x1f8
---
Entry stack: [V13, 0x1f8]
Stack pops: 1
Stack additions: [S0, V560]
Exit stack: [V13, 0x1f8, V560]

================================

Block 0x637
[0x637:0x64e]
---
Predecessors: [0x21f]
Successors: [0xb06]
---
0x637 JUMPDEST
0x638 PUSH1 0x0
0x63a DUP2
0x63b DUP2
0x63c MSTORE
0x63d PUSH1 0x3
0x63f PUSH1 0x20
0x641 MSTORE
0x642 PUSH1 0x40
0x644 DUP2
0x645 SHA3
0x646 SWAP1
0x647 PUSH2 0x64f
0x64a DUP3
0x64b PUSH2 0xb06
0x64e JUMP
---
0x637: JUMPDEST 
0x638: V561 = 0x0
0x63c: M[0x0] = V193
0x63d: V562 = 0x3
0x63f: V563 = 0x20
0x641: M[0x20] = 0x3
0x642: V564 = 0x40
0x645: V565 = SHA3 0x0 0x40
0x647: V566 = 0x64f
0x64b: V567 = 0xb06
0x64e: JUMP 0xb06
---
Entry stack: [V13, 0xc1, V193]
Stack pops: 1
Stack additions: [S0, V565, 0x0, 0x64f, V565]
Exit stack: [V13, 0xc1, V193, V565, 0x0, 0x64f, V565]

================================

Block 0x64f
[0x64f:0x655]
---
Predecessors: [0xb06]
Successors: [0x656, 0x65a]
---
0x64f JUMPDEST
0x650 ISZERO
0x651 ISZERO
0x652 PUSH2 0x65a
0x655 JUMPI
---
0x64f: JUMPDEST 
0x650: V568 = ISZERO V986
0x651: V569 = ISZERO V568
0x652: V570 = 0x65a
0x655: JUMPI 0x65a V569
---
Entry stack: [V13, 0xc1, V99, S9, S8, S7, 0x0, S5, S4, S3, S2, S1, V986]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xc1, V99, S9, S8, S7, 0x0, S5, S4, S3, S2, S1]

================================

Block 0x656
[0x656:0x659]
---
Predecessors: [0x64f]
Successors: []
---
0x656 PUSH1 0x0
0x658 DUP1
0x659 REVERT
---
0x656: V571 = 0x0
0x659: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc1, V99, S8, S7, S6, 0x0, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc1, V99, S8, S7, S6, 0x0, S4, S3, S2, S1, S0]

================================

Block 0x65a
[0x65a:0x671]
---
Predecessors: [0x64f]
Successors: [0x672, 0x676]
---
0x65a JUMPDEST
0x65b POP
0x65c DUP1
0x65d SLOAD
0x65e PUSH1 0x1
0x660 PUSH1 0xa0
0x662 PUSH1 0x2
0x664 EXP
0x665 SUB
0x666 SWAP1
0x667 DUP2
0x668 AND
0x669 SWAP1
0x66a CALLER
0x66b AND
0x66c DUP2
0x66d EQ
0x66e PUSH2 0x676
0x671 JUMPI
---
0x65a: JUMPDEST 
0x65d: V572 = S[S1]
0x65e: V573 = 0x1
0x660: V574 = 0xa0
0x662: V575 = 0x2
0x664: V576 = EXP 0x2 0xa0
0x665: V577 = SUB 0x10000000000000000000000000000000000000000 0x1
0x668: V578 = AND 0xffffffffffffffffffffffffffffffffffffffff V572
0x66a: V579 = CALLER
0x66b: V580 = AND V579 0xffffffffffffffffffffffffffffffffffffffff
0x66d: V581 = EQ V578 V580
0x66e: V582 = 0x676
0x671: JUMPI 0x676 V581
---
Entry stack: [V13, 0xc1, V99, S8, S7, S6, 0x0, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, V578]
Exit stack: [V13, 0xc1, V99, S8, S7, S6, 0x0, S4, S3, S2, S1, V578]

================================

Block 0x672
[0x672:0x675]
---
Predecessors: [0x65a]
Successors: []
---
0x672 PUSH1 0x0
0x674 DUP1
0x675 REVERT
---
0x672: V583 = 0x0
0x675: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc1, V99, S8, S7, S6, 0x0, S4, S3, S2, S1, V578]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc1, V99, S8, S7, S6, 0x0, S4, S3, S2, S1, V578]

================================

Block 0x676
[0x676:0x67f]
---
Predecessors: [0x65a]
Successors: [0xb27]
---
0x676 JUMPDEST
0x677 PUSH2 0x680
0x67a DUP4
0x67b DUP3
0x67c PUSH2 0xb27
0x67f JUMP
---
0x676: JUMPDEST 
0x677: V584 = 0x680
0x67c: V585 = 0xb27
0x67f: JUMP 0xb27
---
Entry stack: [V13, 0xc1, V99, S8, S7, S6, 0x0, S4, S3, S2, S1, V578]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x680, S2, S0]
Exit stack: [V13, 0xc1, V99, S8, S7, S6, 0x0, S4, S3, S2, S1, V578, 0x680, S2, V578]

================================

Block 0x680
[0x680:0x684]
---
Predecessors: [0xb3a]
Successors: [0xc1]
---
0x680 JUMPDEST
0x681 POP
0x682 POP
0x683 POP
0x684 JUMP
---
0x680: JUMPDEST 
0x684: JUMP S3
---
Entry stack: [V13, 0xc1, V66, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V13, 0xc1, V66, S4]

================================

Block 0x685
[0x685:0x69b]
---
Predecessors: [0x235]
Successors: [0xb06]
---
0x685 JUMPDEST
0x686 PUSH1 0x0
0x688 DUP2
0x689 DUP2
0x68a MSTORE
0x68b PUSH1 0x3
0x68d PUSH1 0x20
0x68f MSTORE
0x690 PUSH1 0x40
0x692 DUP2
0x693 SHA3
0x694 PUSH2 0x69c
0x697 DUP2
0x698 PUSH2 0xb06
0x69b JUMP
---
0x685: JUMPDEST 
0x686: V586 = 0x0
0x68a: M[0x0] = V201
0x68b: V587 = 0x3
0x68d: V588 = 0x20
0x68f: M[0x20] = 0x3
0x690: V589 = 0x40
0x693: V590 = SHA3 0x0 0x40
0x694: V591 = 0x69c
0x698: V592 = 0xb06
0x69b: JUMP 0xb06
---
Entry stack: [V13, 0x1aa, V201]
Stack pops: 1
Stack additions: [S0, 0x0, V590, 0x69c, V590]
Exit stack: [V13, 0x1aa, V201, 0x0, V590, 0x69c, V590]

================================

Block 0x69c
[0x69c:0x6a2]
---
Predecessors: [0xb06]
Successors: [0x6a3, 0x6a7]
---
0x69c JUMPDEST
0x69d ISZERO
0x69e ISZERO
0x69f PUSH2 0x6a7
0x6a2 JUMPI
---
0x69c: JUMPDEST 
0x69d: V593 = ISZERO V986
0x69e: V594 = ISZERO V593
0x69f: V595 = 0x6a7
0x6a2: JUMPI 0x6a7 V594
---
Entry stack: [V13, 0xc1, V99, S9, S8, S7, 0x0, S5, S4, S3, S2, S1, V986]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xc1, V99, S9, S8, S7, 0x0, S5, S4, S3, S2, S1]

================================

Block 0x6a3
[0x6a3:0x6a6]
---
Predecessors: [0x69c]
Successors: []
---
0x6a3 PUSH1 0x0
0x6a5 DUP1
0x6a6 REVERT
---
0x6a3: V596 = 0x0
0x6a6: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc1, V99, S8, S7, S6, 0x0, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc1, V99, S8, S7, S6, 0x0, S4, S3, S2, S1, S0]

================================

Block 0x6a7
[0x6a7:0x6af]
---
Predecessors: [0x69c]
Successors: [0xb71]
---
0x6a7 JUMPDEST
0x6a8 PUSH2 0x6b0
0x6ab DUP2
0x6ac PUSH2 0xb71
0x6af JUMP
---
0x6a7: JUMPDEST 
0x6a8: V597 = 0x6b0
0x6ac: V598 = 0xb71
0x6af: JUMP 0xb71
---
Entry stack: [V13, 0xc1, V99, S8, S7, S6, 0x0, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x6b0, S0]
Exit stack: [V13, 0xc1, V99, S8, S7, S6, 0x0, S4, S3, S2, S1, S0, 0x6b0, S0]

================================

Block 0x6b0
[0x6b0:0x6b6]
---
Predecessors: [0x6b0, 0xc83]
Successors: [0x1aa, 0x6b0, 0x9e6]
---
0x6b0 JUMPDEST
0x6b1 SWAP4
0x6b2 SWAP3
0x6b3 POP
0x6b4 POP
0x6b5 POP
0x6b6 JUMP
---
0x6b0: JUMPDEST 
0x6b6: JUMP S4
---
Entry stack: [V13, 0xc1, V99, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V13, 0xc1, V99, S13, S12, S11, S10, S9, S8, S7, S6, S5, S0]

================================

Block 0x6b7
[0x6b7:0x6c5]
---
Predecessors: [0x24b]
Successors: [0x1f8]
---
0x6b7 JUMPDEST
0x6b8 PUSH1 0x1
0x6ba SLOAD
0x6bb PUSH1 0x1
0x6bd PUSH1 0xa0
0x6bf PUSH1 0x2
0x6c1 EXP
0x6c2 SUB
0x6c3 AND
0x6c4 DUP2
0x6c5 JUMP
---
0x6b7: JUMPDEST 
0x6b8: V599 = 0x1
0x6ba: V600 = S[0x1]
0x6bb: V601 = 0x1
0x6bd: V602 = 0xa0
0x6bf: V603 = 0x2
0x6c1: V604 = EXP 0x2 0xa0
0x6c2: V605 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6c3: V606 = AND 0xffffffffffffffffffffffffffffffffffffffff V600
0x6c5: JUMP 0x1f8
---
Entry stack: [V13, 0x1f8]
Stack pops: 1
Stack additions: [S0, V606]
Exit stack: [V13, 0x1f8, V606]

================================

Block 0x6c6
[0x6c6:0x6dc]
---
Predecessors: [0x25e]
Successors: [0x6dd, 0x6e1]
---
0x6c6 JUMPDEST
0x6c7 PUSH1 0x0
0x6c9 SLOAD
0x6ca CALLER
0x6cb PUSH1 0x1
0x6cd PUSH1 0xa0
0x6cf PUSH1 0x2
0x6d1 EXP
0x6d2 SUB
0x6d3 SWAP1
0x6d4 DUP2
0x6d5 AND
0x6d6 SWAP2
0x6d7 AND
0x6d8 EQ
0x6d9 PUSH2 0x6e1
0x6dc JUMPI
---
0x6c6: JUMPDEST 
0x6c7: V607 = 0x0
0x6c9: V608 = S[0x0]
0x6ca: V609 = CALLER
0x6cb: V610 = 0x1
0x6cd: V611 = 0xa0
0x6cf: V612 = 0x2
0x6d1: V613 = EXP 0x2 0xa0
0x6d2: V614 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6d5: V615 = AND 0xffffffffffffffffffffffffffffffffffffffff V609
0x6d7: V616 = AND V608 0xffffffffffffffffffffffffffffffffffffffff
0x6d8: V617 = EQ V616 V615
0x6d9: V618 = 0x6e1
0x6dc: JUMPI 0x6e1 V617
---
Entry stack: [V13, 0xc1, V221]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc1, V221]

================================

Block 0x6dd
[0x6dd:0x6e0]
---
Predecessors: [0x6c6]
Successors: []
---
0x6dd PUSH1 0x0
0x6df DUP1
0x6e0 REVERT
---
0x6dd: V619 = 0x0
0x6e0: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc1, V221]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc1, V221]

================================

Block 0x6e1
[0x6e1:0x6f0]
---
Predecessors: [0x6c6]
Successors: [0x40c, 0x6f1]
---
0x6e1 JUMPDEST
0x6e2 PUSH1 0x1
0x6e4 PUSH1 0xa0
0x6e6 PUSH1 0x2
0x6e8 EXP
0x6e9 SUB
0x6ea DUP2
0x6eb AND
0x6ec ISZERO
0x6ed PUSH2 0x40c
0x6f0 JUMPI
---
0x6e1: JUMPDEST 
0x6e2: V620 = 0x1
0x6e4: V621 = 0xa0
0x6e6: V622 = 0x2
0x6e8: V623 = EXP 0x2 0xa0
0x6e9: V624 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6eb: V625 = AND V221 0xffffffffffffffffffffffffffffffffffffffff
0x6ec: V626 = ISZERO V625
0x6ed: V627 = 0x40c
0x6f0: JUMPI 0x40c V626
---
Entry stack: [V13, 0xc1, V221]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0xc1, V221]

================================

Block 0x6f1
[0x6f1:0x71c]
---
Predecessors: [0x6e1]
Successors: [0xc1]
---
0x6f1 PUSH1 0x0
0x6f3 DUP1
0x6f4 SLOAD
0x6f5 PUSH1 0x1
0x6f7 PUSH1 0xa0
0x6f9 PUSH1 0x2
0x6fb EXP
0x6fc SUB
0x6fd DUP4
0x6fe AND
0x6ff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x714 NOT
0x715 SWAP1
0x716 SWAP2
0x717 AND
0x718 OR
0x719 SWAP1
0x71a SSTORE
0x71b POP
0x71c JUMP
---
0x6f1: V628 = 0x0
0x6f4: V629 = S[0x0]
0x6f5: V630 = 0x1
0x6f7: V631 = 0xa0
0x6f9: V632 = 0x2
0x6fb: V633 = EXP 0x2 0xa0
0x6fc: V634 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6fe: V635 = AND V221 0xffffffffffffffffffffffffffffffffffffffff
0x6ff: V636 = 0xffffffffffffffffffffffffffffffffffffffff
0x714: V637 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x717: V638 = AND V629 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x718: V639 = OR V638 V635
0x71a: S[0x0] = V639
0x71c: JUMP 0xc1
---
Entry stack: [V13, 0xc1, V221]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x71d
[0x71d:0x76f]
---
Predecessors: [0x2cf]
Successors: [0x770, 0x774]
---
0x71d JUMPDEST
0x71e PUSH1 0x1
0x720 SLOAD
0x721 PUSH1 0x0
0x723 SWAP1
0x724 PUSH1 0x1
0x726 PUSH1 0xa0
0x728 PUSH1 0x2
0x72a EXP
0x72b SUB
0x72c DUP1
0x72d DUP6
0x72e AND
0x72f SWAP2
0x730 AND
0x731 PUSH4 0x6352211e
0x736 DUP5
0x737 DUP5
0x738 PUSH1 0x40
0x73a MLOAD
0x73b PUSH1 0x20
0x73d ADD
0x73e MSTORE
0x73f PUSH1 0x40
0x741 MLOAD
0x742 PUSH1 0xe0
0x744 PUSH1 0x2
0x746 EXP
0x747 PUSH4 0xffffffff
0x74c DUP5
0x74d AND
0x74e MUL
0x74f DUP2
0x750 MSTORE
0x751 PUSH1 0x4
0x753 DUP2
0x754 ADD
0x755 SWAP2
0x756 SWAP1
0x757 SWAP2
0x758 MSTORE
0x759 PUSH1 0x24
0x75b ADD
0x75c PUSH1 0x20
0x75e PUSH1 0x40
0x760 MLOAD
0x761 DUP1
0x762 DUP4
0x763 SUB
0x764 DUP2
0x765 PUSH1 0x0
0x767 DUP8
0x768 DUP1
0x769 EXTCODESIZE
0x76a ISZERO
0x76b ISZERO
0x76c PUSH2 0x774
0x76f JUMPI
---
0x71d: JUMPDEST 
0x71e: V640 = 0x1
0x720: V641 = S[0x1]
0x721: V642 = 0x0
0x724: V643 = 0x1
0x726: V644 = 0xa0
0x728: V645 = 0x2
0x72a: V646 = EXP 0x2 0xa0
0x72b: V647 = SUB 0x10000000000000000000000000000000000000000 0x1
0x72e: V648 = AND V258 0xffffffffffffffffffffffffffffffffffffffff
0x730: V649 = AND V641 0xffffffffffffffffffffffffffffffffffffffff
0x731: V650 = 0x6352211e
0x738: V651 = 0x40
0x73a: V652 = M[0x40]
0x73b: V653 = 0x20
0x73d: V654 = ADD 0x20 V652
0x73e: M[V654] = 0x0
0x73f: V655 = 0x40
0x741: V656 = M[0x40]
0x742: V657 = 0xe0
0x744: V658 = 0x2
0x746: V659 = EXP 0x2 0xe0
0x747: V660 = 0xffffffff
0x74d: V661 = AND 0x6352211e 0xffffffff
0x74e: V662 = MUL 0x6352211e 0x100000000000000000000000000000000000000000000000000000000
0x750: M[V656] = 0x6352211e00000000000000000000000000000000000000000000000000000000
0x751: V663 = 0x4
0x754: V664 = ADD V656 0x4
0x758: M[V664] = V66
0x759: V665 = 0x24
0x75b: V666 = ADD 0x24 V656
0x75c: V667 = 0x20
0x75e: V668 = 0x40
0x760: V669 = M[0x40]
0x763: V670 = SUB V666 V669
0x765: V671 = 0x0
0x769: V672 = EXTCODESIZE V649
0x76a: V673 = ISZERO V672
0x76b: V674 = ISZERO V673
0x76c: V675 = 0x774
0x76f: JUMPI 0x774 V674
---
Entry stack: [V13, 0xc1, V66, V68, V70, V72, V80, V1074, V68, V70, V72, 0x2d9, V258, V66]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V648, V649, 0x6352211e, V666, 0x20, V669, V670, V669, 0x0, V649]
Exit stack: [V13, 0xc1, V66, V68, V70, V72, V80, V1074, V68, V70, V72, 0x2d9, V258, V66, 0x0, V648, V649, 0x6352211e, V666, 0x20, V669, V670, V669, 0x0, V649]

================================

Block 0x770
[0x770:0x773]
---
Predecessors: [0x71d]
Successors: []
---
0x770 PUSH1 0x0
0x772 DUP1
0x773 REVERT
---
0x770: V676 = 0x0
0x773: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc1, V66, V68, V70, V72, V80, V1074, V68, V70, V72, 0x2d9, V258, V66, 0x0, V648, V649, 0x6352211e, V666, 0x20, V669, V670, V669, 0x0, V649]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc1, V66, V68, V70, V72, V80, V1074, V68, V70, V72, 0x2d9, V258, V66, 0x0, V648, V649, 0x6352211e, V666, 0x20, V669, V670, V669, 0x0, V649]

================================

Block 0x774
[0x774:0x780]
---
Predecessors: [0x71d]
Successors: [0x781, 0x785]
---
0x774 JUMPDEST
0x775 PUSH2 0x2c6
0x778 GAS
0x779 SUB
0x77a CALL
0x77b ISZERO
0x77c ISZERO
0x77d PUSH2 0x785
0x780 JUMPI
---
0x774: JUMPDEST 
0x775: V677 = 0x2c6
0x778: V678 = GAS
0x779: V679 = SUB V678 0x2c6
0x77a: V680 = CALL V679 V649 0x0 V669 V670 V669 0x20
0x77b: V681 = ISZERO V680
0x77c: V682 = ISZERO V681
0x77d: V683 = 0x785
0x780: JUMPI 0x785 V682
---
Entry stack: [V13, 0xc1, V66, V68, V70, V72, V80, V1074, V68, V70, V72, 0x2d9, V258, V66, 0x0, V648, V649, 0x6352211e, V666, 0x20, V669, V670, V669, 0x0, V649]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0xc1, V66, V68, V70, V72, V80, V1074, V68, V70, V72, 0x2d9, V258, V66, 0x0, V648, V649, 0x6352211e, V666]

================================

Block 0x781
[0x781:0x784]
---
Predecessors: [0x774]
Successors: []
---
0x781 PUSH1 0x0
0x783 DUP1
0x784 REVERT
---
0x781: V684 = 0x0
0x784: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc1, V66, V68, V70, V72, V80, V1074, V68, V70, V72, 0x2d9, V258, V66, 0x0, V648, V649, 0x6352211e, V666]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc1, V66, V68, V70, V72, V80, V1074, V68, V70, V72, 0x2d9, V258, V66, 0x0, V648, V649, 0x6352211e, V666]

================================

Block 0x785
[0x785:0x7a0]
---
Predecessors: [0x774]
Successors: [0x2d9]
---
0x785 JUMPDEST
0x786 POP
0x787 POP
0x788 POP
0x789 PUSH1 0x40
0x78b MLOAD
0x78c DUP1
0x78d MLOAD
0x78e SWAP1
0x78f POP
0x790 PUSH1 0x1
0x792 PUSH1 0xa0
0x794 PUSH1 0x2
0x796 EXP
0x797 SUB
0x798 AND
0x799 EQ
0x79a SWAP1
0x79b POP
0x79c SWAP3
0x79d SWAP2
0x79e POP
0x79f POP
0x7a0 JUMP
---
0x785: JUMPDEST 
0x789: V685 = 0x40
0x78b: V686 = M[0x40]
0x78d: V687 = M[V686]
0x790: V688 = 0x1
0x792: V689 = 0xa0
0x794: V690 = 0x2
0x796: V691 = EXP 0x2 0xa0
0x797: V692 = SUB 0x10000000000000000000000000000000000000000 0x1
0x798: V693 = AND 0xffffffffffffffffffffffffffffffffffffffff V687
0x799: V694 = EQ V693 V648
0x7a0: JUMP 0x2d9
---
Entry stack: [V13, 0xc1, V66, V68, V70, V72, V80, V1074, V68, V70, V72, 0x2d9, V258, V66, 0x0, V648, V649, 0x6352211e, V666]
Stack pops: 8
Stack additions: [V694]
Exit stack: [V13, 0xc1, V66, V68, V70, V72, V80, V1074, V68, V70, V72, V694]

================================

Block 0x7a1
[0x7a1:0x7ff]
---
Predecessors: [0x2e4]
Successors: [0x800, 0x804]
---
0x7a1 JUMPDEST
0x7a2 PUSH1 0x1
0x7a4 SLOAD
0x7a5 PUSH1 0x1
0x7a7 PUSH1 0xa0
0x7a9 PUSH1 0x2
0x7ab EXP
0x7ac SUB
0x7ad AND
0x7ae PUSH4 0x23b872dd
0x7b3 DUP4
0x7b4 ADDRESS
0x7b5 DUP5
0x7b6 PUSH1 0x40
0x7b8 MLOAD
0x7b9 PUSH1 0xe0
0x7bb PUSH1 0x2
0x7bd EXP
0x7be PUSH4 0xffffffff
0x7c3 DUP7
0x7c4 AND
0x7c5 MUL
0x7c6 DUP2
0x7c7 MSTORE
0x7c8 PUSH1 0x1
0x7ca PUSH1 0xa0
0x7cc PUSH1 0x2
0x7ce EXP
0x7cf SUB
0x7d0 SWAP4
0x7d1 DUP5
0x7d2 AND
0x7d3 PUSH1 0x4
0x7d5 DUP3
0x7d6 ADD
0x7d7 MSTORE
0x7d8 SWAP2
0x7d9 SWAP1
0x7da SWAP3
0x7db AND
0x7dc PUSH1 0x24
0x7de DUP3
0x7df ADD
0x7e0 MSTORE
0x7e1 PUSH1 0x44
0x7e3 DUP2
0x7e4 ADD
0x7e5 SWAP2
0x7e6 SWAP1
0x7e7 SWAP2
0x7e8 MSTORE
0x7e9 PUSH1 0x64
0x7eb ADD
0x7ec PUSH1 0x0
0x7ee PUSH1 0x40
0x7f0 MLOAD
0x7f1 DUP1
0x7f2 DUP4
0x7f3 SUB
0x7f4 DUP2
0x7f5 PUSH1 0x0
0x7f7 DUP8
0x7f8 DUP1
0x7f9 EXTCODESIZE
0x7fa ISZERO
0x7fb ISZERO
0x7fc PUSH2 0x804
0x7ff JUMPI
---
0x7a1: JUMPDEST 
0x7a2: V695 = 0x1
0x7a4: V696 = S[0x1]
0x7a5: V697 = 0x1
0x7a7: V698 = 0xa0
0x7a9: V699 = 0x2
0x7ab: V700 = EXP 0x2 0xa0
0x7ac: V701 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7ad: V702 = AND 0xffffffffffffffffffffffffffffffffffffffff V696
0x7ae: V703 = 0x23b872dd
0x7b4: V704 = ADDRESS
0x7b6: V705 = 0x40
0x7b8: V706 = M[0x40]
0x7b9: V707 = 0xe0
0x7bb: V708 = 0x2
0x7bd: V709 = EXP 0x2 0xe0
0x7be: V710 = 0xffffffff
0x7c4: V711 = AND 0x23b872dd 0xffffffff
0x7c5: V712 = MUL 0x23b872dd 0x100000000000000000000000000000000000000000000000000000000
0x7c7: M[V706] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x7c8: V713 = 0x1
0x7ca: V714 = 0xa0
0x7cc: V715 = 0x2
0x7ce: V716 = EXP 0x2 0xa0
0x7cf: V717 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7d2: V718 = AND 0xffffffffffffffffffffffffffffffffffffffff V265
0x7d3: V719 = 0x4
0x7d6: V720 = ADD V706 0x4
0x7d7: M[V720] = V718
0x7db: V721 = AND 0xffffffffffffffffffffffffffffffffffffffff V704
0x7dc: V722 = 0x24
0x7df: V723 = ADD V706 0x24
0x7e0: M[V723] = V721
0x7e1: V724 = 0x44
0x7e4: V725 = ADD V706 0x44
0x7e8: M[V725] = V66
0x7e9: V726 = 0x64
0x7eb: V727 = ADD 0x64 V706
0x7ec: V728 = 0x0
0x7ee: V729 = 0x40
0x7f0: V730 = M[0x40]
0x7f3: V731 = SUB V727 V730
0x7f5: V732 = 0x0
0x7f9: V733 = EXTCODESIZE V702
0x7fa: V734 = ISZERO V733
0x7fb: V735 = ISZERO V734
0x7fc: V736 = 0x804
0x7ff: JUMPI 0x804 V735
---
Entry stack: [V13, 0xc1, V66, V68, V70, V72, V80, V1074, V68, V70, V72, 0x2ee, V265, V66]
Stack pops: 2
Stack additions: [S1, S0, V702, 0x23b872dd, V727, 0x0, V730, V731, V730, 0x0, V702]
Exit stack: [V13, 0xc1, V66, V68, V70, V72, V80, V1074, V68, V70, V72, 0x2ee, V265, V66, V702, 0x23b872dd, V727, 0x0, V730, V731, V730, 0x0, V702]

================================

Block 0x800
[0x800:0x803]
---
Predecessors: [0x7a1]
Successors: []
---
0x800 PUSH1 0x0
0x802 DUP1
0x803 REVERT
---
0x800: V737 = 0x0
0x803: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc1, V66, V68, V70, V72, V80, V1074, V68, V70, V72, 0x2ee, V265, V66, V702, 0x23b872dd, V727, 0x0, V730, V731, V730, 0x0, V702]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc1, V66, V68, V70, V72, V80, V1074, V68, V70, V72, 0x2ee, V265, V66, V702, 0x23b872dd, V727, 0x0, V730, V731, V730, 0x0, V702]

================================

Block 0x804
[0x804:0x810]
---
Predecessors: [0x7a1, 0xab0]
Successors: [0x811, 0x815]
---
0x804 JUMPDEST
0x805 PUSH2 0x2c6
0x808 GAS
0x809 SUB
0x80a CALL
0x80b ISZERO
0x80c ISZERO
0x80d PUSH2 0x815
0x810 JUMPI
---
0x804: JUMPDEST 
0x805: V738 = 0x2c6
0x808: V739 = GAS
0x809: V740 = SUB V739 0x2c6
0x80a: V741 = CALL V740 S0 0x0 S2 S3 S4 0x0
0x80b: V742 = ISZERO V741
0x80c: V743 = ISZERO V742
0x80d: V744 = 0x815
0x810: JUMPI 0x815 V743
---
Entry stack: [V13, 0xc1, V66, S19, S18, S17, S16, S15, S14, S13, S12, {0x2ee, 0x40c, 0xb3a}, S10, S9, S8, {0x23b872dd, 0xa9059cbb}, S6, 0x0, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0xc1, V66, S19, S18, S17, S16, S15, S14, S13, S12, {0x2ee, 0x40c, 0xb3a}, S10, S9, S8, {0x23b872dd, 0xa9059cbb}, S6]

================================

Block 0x811
[0x811:0x814]
---
Predecessors: [0x804]
Successors: []
---
0x811 PUSH1 0x0
0x813 DUP1
0x814 REVERT
---
0x811: V745 = 0x0
0x814: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc1, V66, S13, S12, S11, S10, S9, S8, S7, S6, {0x2ee, 0x40c, 0xb3a}, S4, S3, S2, {0x23b872dd, 0xa9059cbb}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc1, V66, S13, S12, S11, S10, S9, S8, S7, S6, {0x2ee, 0x40c, 0xb3a}, S4, S3, S2, {0x23b872dd, 0xa9059cbb}, S0]

================================

Block 0x815
[0x815:0x81b]
---
Predecessors: [0x804]
Successors: [0x2ee, 0x40c, 0xb3a]
---
0x815 JUMPDEST
0x816 POP
0x817 POP
0x818 POP
0x819 POP
0x81a POP
0x81b JUMP
---
0x815: JUMPDEST 
0x81b: JUMP {0x2ee, 0x40c, 0xb3a}
---
Entry stack: [V13, 0xc1, V66, S13, S12, S11, S10, S9, S8, S7, S6, {0x2ee, 0x40c, 0xb3a}, S4, S3, S2, {0x23b872dd, 0xa9059cbb}, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0xc1, V66, S13, S12, S11, S10, S9, S8, S7, S6]

================================

Block 0x81c
[0x81c:0x833]
---
Predecessors: [0x2ee]
Successors: [0x834, 0x838]
---
0x81c JUMPDEST
0x81d PUSH1 0x3c
0x81f DUP2
0x820 PUSH1 0x60
0x822 ADD
0x823 MLOAD
0x824 PUSH8 0xffffffffffffffff
0x82d AND
0x82e LT
0x82f ISZERO
0x830 PUSH2 0x838
0x833 JUMPI
---
0x81c: JUMPDEST 
0x81d: V746 = 0x3c
0x820: V747 = 0x60
0x822: V748 = ADD 0x60 V269
0x823: V749 = M[V748]
0x824: V750 = 0xffffffffffffffff
0x82d: V751 = AND 0xffffffffffffffff V749
0x82e: V752 = LT V751 0x3c
0x82f: V753 = ISZERO V752
0x830: V754 = 0x838
0x833: JUMPI 0x838 V753
---
Entry stack: [V13, 0xc1, V66, S10, S9, S8, S7, V269, S5, S4, S3, 0x351, V66, V269]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0xc1, V66, S10, S9, S8, S7, V269, S5, S4, S3, 0x351, V66, V269]

================================

Block 0x834
[0x834:0x837]
---
Predecessors: [0x81c]
Successors: []
---
0x834 PUSH1 0x0
0x836 DUP1
0x837 REVERT
---
0x834: V755 = 0x0
0x837: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc1, V66, V68, V70, V72, V80, S6, V68, V70, V72, 0x351, V66, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc1, V66, V68, V70, V72, V80, S6, V68, V70, V72, 0x351, V66, S0]

================================

Block 0x838
[0x838:0x9b6]
---
Predecessors: [0x81c]
Successors: [0x351]
---
0x838 JUMPDEST
0x839 PUSH1 0x0
0x83b DUP3
0x83c DUP2
0x83d MSTORE
0x83e PUSH1 0x3
0x840 PUSH1 0x20
0x842 MSTORE
0x843 PUSH1 0x40
0x845 SWAP1
0x846 SHA3
0x847 DUP2
0x848 SWAP1
0x849 DUP2
0x84a MLOAD
0x84b DUP2
0x84c SLOAD
0x84d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x862 NOT
0x863 AND
0x864 PUSH1 0x1
0x866 PUSH1 0xa0
0x868 PUSH1 0x2
0x86a EXP
0x86b SUB
0x86c SWAP2
0x86d SWAP1
0x86e SWAP2
0x86f AND
0x870 OR
0x871 DUP2
0x872 SSTORE
0x873 PUSH1 0x20
0x875 DUP3
0x876 ADD
0x877 MLOAD
0x878 PUSH1 0x1
0x87a DUP3
0x87b ADD
0x87c DUP1
0x87d SLOAD
0x87e PUSH16 0xffffffffffffffffffffffffffffffff
0x88f NOT
0x890 AND
0x891 PUSH1 0x1
0x893 PUSH1 0x80
0x895 PUSH1 0x2
0x897 EXP
0x898 SUB
0x899 SWAP3
0x89a SWAP1
0x89b SWAP3
0x89c AND
0x89d SWAP2
0x89e SWAP1
0x89f SWAP2
0x8a0 OR
0x8a1 SWAP1
0x8a2 SSTORE
0x8a3 PUSH1 0x40
0x8a5 DUP3
0x8a6 ADD
0x8a7 MLOAD
0x8a8 PUSH1 0x1
0x8aa DUP3
0x8ab ADD
0x8ac DUP1
0x8ad SLOAD
0x8ae PUSH1 0x1
0x8b0 PUSH1 0x80
0x8b2 PUSH1 0x2
0x8b4 EXP
0x8b5 SUB
0x8b6 SWAP3
0x8b7 DUP4
0x8b8 AND
0x8b9 PUSH17 0x100000000000000000000000000000000
0x8cb MUL
0x8cc SWAP3
0x8cd AND
0x8ce SWAP2
0x8cf SWAP1
0x8d0 SWAP2
0x8d1 OR
0x8d2 SWAP1
0x8d3 SSTORE
0x8d4 PUSH1 0x60
0x8d6 DUP3
0x8d7 ADD
0x8d8 MLOAD
0x8d9 PUSH1 0x2
0x8db DUP3
0x8dc ADD
0x8dd DUP1
0x8de SLOAD
0x8df PUSH8 0xffffffffffffffff
0x8e8 NOT
0x8e9 AND
0x8ea PUSH8 0xffffffffffffffff
0x8f3 SWAP3
0x8f4 SWAP1
0x8f5 SWAP3
0x8f6 AND
0x8f7 SWAP2
0x8f8 SWAP1
0x8f9 SWAP2
0x8fa OR
0x8fb SWAP1
0x8fc SSTORE
0x8fd PUSH1 0x80
0x8ff DUP3
0x900 ADD
0x901 MLOAD
0x902 PUSH1 0x2
0x904 SWAP1
0x905 SWAP2
0x906 ADD
0x907 DUP1
0x908 SLOAD
0x909 PUSH8 0xffffffffffffffff
0x912 SWAP3
0x913 SWAP1
0x914 SWAP3
0x915 AND
0x916 PUSH9 0x10000000000000000
0x920 MUL
0x921 PUSH16 0xffffffffffffffff0000000000000000
0x932 NOT
0x933 SWAP1
0x934 SWAP3
0x935 AND
0x936 SWAP2
0x937 SWAP1
0x938 SWAP2
0x939 OR
0x93a SWAP1
0x93b SSTORE
0x93c POP
0x93d PUSH32 0xa9c8dfcda5664a5a124c713e386da27de87432d5b668e79458501eb296389ba7
0x95e DUP3
0x95f PUSH1 0x20
0x961 DUP4
0x962 ADD
0x963 MLOAD
0x964 PUSH1 0x1
0x966 PUSH1 0x80
0x968 PUSH1 0x2
0x96a EXP
0x96b SUB
0x96c AND
0x96d DUP4
0x96e PUSH1 0x40
0x970 ADD
0x971 MLOAD
0x972 PUSH1 0x1
0x974 PUSH1 0x80
0x976 PUSH1 0x2
0x978 EXP
0x979 SUB
0x97a AND
0x97b DUP5
0x97c PUSH1 0x60
0x97e ADD
0x97f MLOAD
0x980 PUSH8 0xffffffffffffffff
0x989 AND
0x98a PUSH1 0x40
0x98c MLOAD
0x98d DUP1
0x98e DUP6
0x98f DUP2
0x990 MSTORE
0x991 PUSH1 0x20
0x993 ADD
0x994 DUP5
0x995 DUP2
0x996 MSTORE
0x997 PUSH1 0x20
0x999 ADD
0x99a DUP4
0x99b DUP2
0x99c MSTORE
0x99d PUSH1 0x20
0x99f ADD
0x9a0 DUP3
0x9a1 DUP2
0x9a2 MSTORE
0x9a3 PUSH1 0x20
0x9a5 ADD
0x9a6 SWAP5
0x9a7 POP
0x9a8 POP
0x9a9 POP
0x9aa POP
0x9ab POP
0x9ac PUSH1 0x40
0x9ae MLOAD
0x9af DUP1
0x9b0 SWAP2
0x9b1 SUB
0x9b2 SWAP1
0x9b3 LOG1
0x9b4 POP
0x9b5 POP
0x9b6 JUMP
---
0x838: JUMPDEST 
0x839: V756 = 0x0
0x83d: M[0x0] = V66
0x83e: V757 = 0x3
0x840: V758 = 0x20
0x842: M[0x20] = 0x3
0x843: V759 = 0x40
0x846: V760 = SHA3 0x0 0x40
0x84a: V761 = M[S0]
0x84c: V762 = S[V760]
0x84d: V763 = 0xffffffffffffffffffffffffffffffffffffffff
0x862: V764 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x863: V765 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V762
0x864: V766 = 0x1
0x866: V767 = 0xa0
0x868: V768 = 0x2
0x86a: V769 = EXP 0x2 0xa0
0x86b: V770 = SUB 0x10000000000000000000000000000000000000000 0x1
0x86f: V771 = AND 0xffffffffffffffffffffffffffffffffffffffff V761
0x870: V772 = OR V771 V765
0x872: S[V760] = V772
0x873: V773 = 0x20
0x876: V774 = ADD S0 0x20
0x877: V775 = M[V774]
0x878: V776 = 0x1
0x87b: V777 = ADD V760 0x1
0x87d: V778 = S[V777]
0x87e: V779 = 0xffffffffffffffffffffffffffffffff
0x88f: V780 = NOT 0xffffffffffffffffffffffffffffffff
0x890: V781 = AND 0xffffffffffffffffffffffffffffffff00000000000000000000000000000000 V778
0x891: V782 = 0x1
0x893: V783 = 0x80
0x895: V784 = 0x2
0x897: V785 = EXP 0x2 0x80
0x898: V786 = SUB 0x100000000000000000000000000000000 0x1
0x89c: V787 = AND 0xffffffffffffffffffffffffffffffff V775
0x8a0: V788 = OR V787 V781
0x8a2: S[V777] = V788
0x8a3: V789 = 0x40
0x8a6: V790 = ADD S0 0x40
0x8a7: V791 = M[V790]
0x8a8: V792 = 0x1
0x8ab: V793 = ADD V760 0x1
0x8ad: V794 = S[V793]
0x8ae: V795 = 0x1
0x8b0: V796 = 0x80
0x8b2: V797 = 0x2
0x8b4: V798 = EXP 0x2 0x80
0x8b5: V799 = SUB 0x100000000000000000000000000000000 0x1
0x8b8: V800 = AND 0xffffffffffffffffffffffffffffffff V791
0x8b9: V801 = 0x100000000000000000000000000000000
0x8cb: V802 = MUL 0x100000000000000000000000000000000 V800
0x8cd: V803 = AND 0xffffffffffffffffffffffffffffffff V794
0x8d1: V804 = OR V803 V802
0x8d3: S[V793] = V804
0x8d4: V805 = 0x60
0x8d7: V806 = ADD S0 0x60
0x8d8: V807 = M[V806]
0x8d9: V808 = 0x2
0x8dc: V809 = ADD V760 0x2
0x8de: V810 = S[V809]
0x8df: V811 = 0xffffffffffffffff
0x8e8: V812 = NOT 0xffffffffffffffff
0x8e9: V813 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000 V810
0x8ea: V814 = 0xffffffffffffffff
0x8f6: V815 = AND 0xffffffffffffffff V807
0x8fa: V816 = OR V815 V813
0x8fc: S[V809] = V816
0x8fd: V817 = 0x80
0x900: V818 = ADD S0 0x80
0x901: V819 = M[V818]
0x902: V820 = 0x2
0x906: V821 = ADD V760 0x2
0x908: V822 = S[V821]
0x909: V823 = 0xffffffffffffffff
0x915: V824 = AND 0xffffffffffffffff V819
0x916: V825 = 0x10000000000000000
0x920: V826 = MUL 0x10000000000000000 V824
0x921: V827 = 0xffffffffffffffff0000000000000000
0x932: V828 = NOT 0xffffffffffffffff0000000000000000
0x935: V829 = AND V822 0xffffffffffffffffffffffffffffffff0000000000000000ffffffffffffffff
0x939: V830 = OR V829 V826
0x93b: S[V821] = V830
0x93d: V831 = 0xa9c8dfcda5664a5a124c713e386da27de87432d5b668e79458501eb296389ba7
0x95f: V832 = 0x20
0x962: V833 = ADD S0 0x20
0x963: V834 = M[V833]
0x964: V835 = 0x1
0x966: V836 = 0x80
0x968: V837 = 0x2
0x96a: V838 = EXP 0x2 0x80
0x96b: V839 = SUB 0x100000000000000000000000000000000 0x1
0x96c: V840 = AND 0xffffffffffffffffffffffffffffffff V834
0x96e: V841 = 0x40
0x970: V842 = ADD 0x40 S0
0x971: V843 = M[V842]
0x972: V844 = 0x1
0x974: V845 = 0x80
0x976: V846 = 0x2
0x978: V847 = EXP 0x2 0x80
0x979: V848 = SUB 0x100000000000000000000000000000000 0x1
0x97a: V849 = AND 0xffffffffffffffffffffffffffffffff V843
0x97c: V850 = 0x60
0x97e: V851 = ADD 0x60 S0
0x97f: V852 = M[V851]
0x980: V853 = 0xffffffffffffffff
0x989: V854 = AND 0xffffffffffffffff V852
0x98a: V855 = 0x40
0x98c: V856 = M[0x40]
0x990: M[V856] = V66
0x991: V857 = 0x20
0x993: V858 = ADD 0x20 V856
0x996: M[V858] = V840
0x997: V859 = 0x20
0x999: V860 = ADD 0x20 V858
0x99c: M[V860] = V849
0x99d: V861 = 0x20
0x99f: V862 = ADD 0x20 V860
0x9a2: M[V862] = V854
0x9a3: V863 = 0x20
0x9a5: V864 = ADD 0x20 V862
0x9ac: V865 = 0x40
0x9ae: V866 = M[0x40]
0x9b1: V867 = SUB V864 V866
0x9b3: LOG V866 V867 0xa9c8dfcda5664a5a124c713e386da27de87432d5b668e79458501eb296389ba7
0x9b6: JUMP 0x351
---
Entry stack: [V13, 0xc1, V66, V68, V70, V72, V80, S6, V68, V70, V72, 0x351, V66, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0xc1, V66, V68, V70, V72, V80, S6, V68, V70, V72]

================================

Block 0x9b7
[0x9b7:0x9d1]
---
Predecessors: [0x3f7]
Successors: [0xb06]
---
0x9b7 JUMPDEST
0x9b8 PUSH1 0x0
0x9ba DUP3
0x9bb DUP2
0x9bc MSTORE
0x9bd PUSH1 0x3
0x9bf PUSH1 0x20
0x9c1 MSTORE
0x9c2 PUSH1 0x40
0x9c4 DUP2
0x9c5 SHA3
0x9c6 DUP2
0x9c7 DUP1
0x9c8 DUP1
0x9c9 DUP1
0x9ca PUSH2 0x9d2
0x9cd DUP6
0x9ce PUSH2 0xb06
0x9d1 JUMP
---
0x9b7: JUMPDEST 
0x9b8: V868 = 0x0
0x9bc: M[0x0] = V99
0x9bd: V869 = 0x3
0x9bf: V870 = 0x20
0x9c1: M[0x20] = 0x3
0x9c2: V871 = 0x40
0x9c5: V872 = SHA3 0x0 0x40
0x9ca: V873 = 0x9d2
0x9ce: V874 = 0xb06
0x9d1: JUMP 0xb06
---
Entry stack: [V13, 0xc1, V99, 0x401, V99, V354]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V872, 0x0, 0x0, 0x0, 0x0, 0x9d2, V872]
Exit stack: [V13, 0xc1, V99, 0x401, V99, V354, 0x0, V872, 0x0, 0x0, 0x0, 0x0, 0x9d2, V872]

================================

Block 0x9d2
[0x9d2:0x9d8]
---
Predecessors: [0xb06]
Successors: [0x9d9, 0x9dd]
---
0x9d2 JUMPDEST
0x9d3 ISZERO
0x9d4 ISZERO
0x9d5 PUSH2 0x9dd
0x9d8 JUMPI
---
0x9d2: JUMPDEST 
0x9d3: V875 = ISZERO V986
0x9d4: V876 = ISZERO V875
0x9d5: V877 = 0x9dd
0x9d8: JUMPI 0x9dd V876
---
Entry stack: [V13, 0xc1, V99, S9, S8, S7, 0x0, S5, S4, S3, S2, S1, V986]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xc1, V99, S9, S8, S7, 0x0, S5, S4, S3, S2, S1]

================================

Block 0x9d9
[0x9d9:0x9dc]
---
Predecessors: [0x9d2]
Successors: []
---
0x9d9 PUSH1 0x0
0x9db DUP1
0x9dc REVERT
---
0x9d9: V878 = 0x0
0x9dc: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc1, V99, S8, S7, S6, 0x0, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc1, V99, S8, S7, S6, 0x0, S4, S3, S2, S1, S0]

================================

Block 0x9dd
[0x9dd:0x9e5]
---
Predecessors: [0x9d2]
Successors: [0xb71]
---
0x9dd JUMPDEST
0x9de PUSH2 0x9e6
0x9e1 DUP6
0x9e2 PUSH2 0xb71
0x9e5 JUMP
---
0x9dd: JUMPDEST 
0x9de: V879 = 0x9e6
0x9e2: V880 = 0xb71
0x9e5: JUMP 0xb71
---
Entry stack: [V13, 0xc1, V99, S8, S7, S6, 0x0, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x9e6, S4]
Exit stack: [V13, 0xc1, V99, S8, S7, S6, 0x0, S4, S3, S2, S1, S0, 0x9e6, S4]

================================

Block 0x9e6
[0x9e6:0x9f0]
---
Predecessors: [0x6b0]
Successors: [0x9f1, 0x9f5]
---
0x9e6 JUMPDEST
0x9e7 SWAP4
0x9e8 POP
0x9e9 DUP4
0x9ea DUP8
0x9eb LT
0x9ec ISZERO
0x9ed PUSH2 0x9f5
0x9f0 JUMPI
---
0x9e6: JUMPDEST 
0x9eb: V881 = LT S7 S0
0x9ec: V882 = ISZERO V881
0x9ed: V883 = 0x9f5
0x9f0: JUMPI 0x9f5 V882
---
Entry stack: [V13, 0xc1, V99, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S0, S3, S2, S1]
Exit stack: [V13, 0xc1, V99, S9, S8, S7, S6, S5, S0, S3, S2, S1]

================================

Block 0x9f1
[0x9f1:0x9f4]
---
Predecessors: [0x9e6]
Successors: []
---
0x9f1 PUSH1 0x0
0x9f3 DUP1
0x9f4 REVERT
---
0x9f1: V884 = 0x0
0x9f4: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc1, V99, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc1, V99, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x9f5
[0x9f5:0xa0a]
---
Predecessors: [0x9e6]
Successors: [0xbf8]
---
0x9f5 JUMPDEST
0x9f6 DUP5
0x9f7 SLOAD
0x9f8 PUSH1 0x1
0x9fa PUSH1 0xa0
0x9fc PUSH1 0x2
0x9fe EXP
0x9ff SUB
0xa00 AND
0xa01 SWAP3
0xa02 POP
0xa03 PUSH2 0xa0b
0xa06 DUP9
0xa07 PUSH2 0xbf8
0xa0a JUMP
---
0x9f5: JUMPDEST 
0x9f7: V885 = S[S4]
0x9f8: V886 = 0x1
0x9fa: V887 = 0xa0
0x9fc: V888 = 0x2
0x9fe: V889 = EXP 0x2 0xa0
0x9ff: V890 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa00: V891 = AND 0xffffffffffffffffffffffffffffffffffffffff V885
0xa03: V892 = 0xa0b
0xa07: V893 = 0xbf8
0xa0a: JUMP 0xbf8
---
Entry stack: [V13, 0xc1, V99, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, V891, S1, S0, 0xa0b, S7]
Exit stack: [V13, 0xc1, V99, S8, S7, S6, S5, S4, S3, V891, S1, S0, 0xa0b, S7]

================================

Block 0xa0b
[0xa0b:0xa14]
---
Predecessors: [0xbf8]
Successors: [0xa15, 0xa54]
---
0xa0b JUMPDEST
0xa0c PUSH1 0x0
0xa0e DUP5
0xa0f GT
0xa10 ISZERO
0xa11 PUSH2 0xa54
0xa14 JUMPI
---
0xa0b: JUMPDEST 
0xa0c: V894 = 0x0
0xa0f: V895 = GT S3 0x0
0xa10: V896 = ISZERO V895
0xa11: V897 = 0xa54
0xa14: JUMPI 0xa54 V896
---
Entry stack: [V13, 0xc1, V99, 0x401, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, 0xc1, V99, 0x401, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xa15
[0xa15:0xa1c]
---
Predecessors: [0xa0b]
Successors: [0xc45]
---
0xa15 PUSH2 0xa1d
0xa18 DUP5
0xa19 PUSH2 0xc45
0xa1c JUMP
---
0xa15: V898 = 0xa1d
0xa19: V899 = 0xc45
0xa1c: JUMP 0xc45
---
Entry stack: [V13, 0xc1, V99, 0x401, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0xa1d, S3]
Exit stack: [V13, 0xc1, V99, 0x401, S7, S6, S5, S4, S3, S2, S1, S0, 0xa1d, S3]

================================

Block 0xa1d
[0xa1d:0xa4f]
---
Predecessors: [0xc45]
Successors: [0xa50, 0xa54]
---
0xa1d JUMPDEST
0xa1e SWAP2
0xa1f POP
0xa20 POP
0xa21 DUP1
0xa22 DUP4
0xa23 SUB
0xa24 PUSH1 0x1
0xa26 PUSH1 0xa0
0xa28 PUSH1 0x2
0xa2a EXP
0xa2b SUB
0xa2c DUP4
0xa2d AND
0xa2e DUP2
0xa2f ISZERO
0xa30 PUSH2 0x8fc
0xa33 MUL
0xa34 DUP3
0xa35 PUSH1 0x40
0xa37 MLOAD
0xa38 PUSH1 0x0
0xa3a PUSH1 0x40
0xa3c MLOAD
0xa3d DUP1
0xa3e DUP4
0xa3f SUB
0xa40 DUP2
0xa41 DUP6
0xa42 DUP9
0xa43 DUP9
0xa44 CALL
0xa45 SWAP4
0xa46 POP
0xa47 POP
0xa48 POP
0xa49 POP
0xa4a ISZERO
0xa4b ISZERO
0xa4c PUSH2 0xa54
0xa4f JUMPI
---
0xa1d: JUMPDEST 
0xa23: V900 = SUB S4 V1060
0xa24: V901 = 0x1
0xa26: V902 = 0xa0
0xa28: V903 = 0x2
0xa2a: V904 = EXP 0x2 0xa0
0xa2b: V905 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa2d: V906 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0xa2f: V907 = ISZERO V900
0xa30: V908 = 0x8fc
0xa33: V909 = MUL 0x8fc V907
0xa35: V910 = 0x40
0xa37: V911 = M[0x40]
0xa38: V912 = 0x0
0xa3a: V913 = 0x40
0xa3c: V914 = M[0x40]
0xa3f: V915 = SUB V911 V914
0xa44: V916 = CALL V909 V906 V900 V914 V915 V914 0x0
0xa4a: V917 = ISZERO V916
0xa4b: V918 = ISZERO V917
0xa4c: V919 = 0xa54
0xa4f: JUMPI 0xa54 V918
---
Entry stack: [V13, 0xc1, V99, 0x401, S8, S7, S6, S5, S4, S3, S2, S1, V1060]
Stack pops: 5
Stack additions: [S4, S3, S0, V900]
Exit stack: [V13, 0xc1, V99, 0x401, S8, S7, S6, S5, S4, S3, V1060, V900]

================================

Block 0xa50
[0xa50:0xa53]
---
Predecessors: [0xa1d]
Successors: []
---
0xa50 PUSH1 0x0
0xa52 DUP1
0xa53 REVERT
---
0xa50: V920 = 0x0
0xa53: REVERT 0x0 0x0
---
Entry stack: [V13, 0xc1, V99, 0x401, S7, S6, S5, S4, S3, S2, V1060, V900]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc1, V99, 0x401, S7, S6, S5, S4, S3, S2, V1060, V900]

================================

Block 0xa54
[0xa54:0xaaf]
---
Predecessors: [0xa0b, 0xa1d]
Successors: [0x401]
---
0xa54 JUMPDEST
0xa55 PUSH32 0x4fcc30d90a842164dd58501ab874a101a3749c3d4747139cefe7c876f4ccebd2
0xa76 DUP9
0xa77 DUP6
0xa78 CALLER
0xa79 PUSH1 0x40
0xa7b MLOAD
0xa7c SWAP3
0xa7d DUP4
0xa7e MSTORE
0xa7f PUSH1 0x20
0xa81 DUP4
0xa82 ADD
0xa83 SWAP2
0xa84 SWAP1
0xa85 SWAP2
0xa86 MSTORE
0xa87 PUSH1 0x1
0xa89 PUSH1 0xa0
0xa8b PUSH1 0x2
0xa8d EXP
0xa8e SUB
0xa8f AND
0xa90 PUSH1 0x40
0xa92 DUP1
0xa93 DUP4
0xa94 ADD
0xa95 SWAP2
0xa96 SWAP1
0xa97 SWAP2
0xa98 MSTORE
0xa99 PUSH1 0x60
0xa9b SWAP1
0xa9c SWAP2
0xa9d ADD
0xa9e SWAP1
0xa9f MLOAD
0xaa0 DUP1
0xaa1 SWAP2
0xaa2 SUB
0xaa3 SWAP1
0xaa4 LOG1
0xaa5 POP
0xaa6 SWAP2
0xaa7 SWAP7
0xaa8 SWAP6
0xaa9 POP
0xaaa POP
0xaab POP
0xaac POP
0xaad POP
0xaae POP
0xaaf JUMP
---
0xa54: JUMPDEST 
0xa55: V921 = 0x4fcc30d90a842164dd58501ab874a101a3749c3d4747139cefe7c876f4ccebd2
0xa78: V922 = CALLER
0xa79: V923 = 0x40
0xa7b: V924 = M[0x40]
0xa7e: M[V924] = S7
0xa7f: V925 = 0x20
0xa82: V926 = ADD V924 0x20
0xa86: M[V926] = S3
0xa87: V927 = 0x1
0xa89: V928 = 0xa0
0xa8b: V929 = 0x2
0xa8d: V930 = EXP 0x2 0xa0
0xa8e: V931 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa8f: V932 = AND 0xffffffffffffffffffffffffffffffffffffffff V922
0xa90: V933 = 0x40
0xa94: V934 = ADD V924 0x40
0xa98: M[V934] = V932
0xa99: V935 = 0x60
0xa9d: V936 = ADD V924 0x60
0xa9f: V937 = M[0x40]
0xaa2: V938 = SUB V936 V937
0xaa4: LOG V937 V938 0x4fcc30d90a842164dd58501ab874a101a3749c3d4747139cefe7c876f4ccebd2
0xaaf: JUMP 0x401
---
Entry stack: [V13, 0xc1, V99, 0x401, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 9
Stack additions: [S3]
Exit stack: [V13, 0xc1, V99, S3]

================================

Block 0xab0
[0xab0:0xb01]
---
Predecessors: [0x401, 0xb30]
Successors: [0x804, 0xb02]
---
0xab0 JUMPDEST
0xab1 PUSH1 0x1
0xab3 SLOAD
0xab4 PUSH1 0x1
0xab6 PUSH1 0xa0
0xab8 PUSH1 0x2
0xaba EXP
0xabb SUB
0xabc AND
0xabd PUSH4 0xa9059cbb
0xac2 DUP4
0xac3 DUP4
0xac4 PUSH1 0x40
0xac6 MLOAD
0xac7 PUSH1 0xe0
0xac9 PUSH1 0x2
0xacb EXP
0xacc PUSH4 0xffffffff
0xad1 DUP6
0xad2 AND
0xad3 MUL
0xad4 DUP2
0xad5 MSTORE
0xad6 PUSH1 0x1
0xad8 PUSH1 0xa0
0xada PUSH1 0x2
0xadc EXP
0xadd SUB
0xade SWAP1
0xadf SWAP3
0xae0 AND
0xae1 PUSH1 0x4
0xae3 DUP4
0xae4 ADD
0xae5 MSTORE
0xae6 PUSH1 0x24
0xae8 DUP3
0xae9 ADD
0xaea MSTORE
0xaeb PUSH1 0x44
0xaed ADD
0xaee PUSH1 0x0
0xaf0 PUSH1 0x40
0xaf2 MLOAD
0xaf3 DUP1
0xaf4 DUP4
0xaf5 SUB
0xaf6 DUP2
0xaf7 PUSH1 0x0
0xaf9 DUP8
0xafa DUP1
0xafb EXTCODESIZE
0xafc ISZERO
0xafd ISZERO
0xafe PUSH2 0x804
0xb01 JUMPI
---
0xab0: JUMPDEST 
0xab1: V939 = 0x1
0xab3: V940 = S[0x1]
0xab4: V941 = 0x1
0xab6: V942 = 0xa0
0xab8: V943 = 0x2
0xaba: V944 = EXP 0x2 0xa0
0xabb: V945 = SUB 0x10000000000000000000000000000000000000000 0x1
0xabc: V946 = AND 0xffffffffffffffffffffffffffffffffffffffff V940
0xabd: V947 = 0xa9059cbb
0xac4: V948 = 0x40
0xac6: V949 = M[0x40]
0xac7: V950 = 0xe0
0xac9: V951 = 0x2
0xacb: V952 = EXP 0x2 0xe0
0xacc: V953 = 0xffffffff
0xad2: V954 = AND 0xa9059cbb 0xffffffff
0xad3: V955 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xad5: M[V949] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xad6: V956 = 0x1
0xad8: V957 = 0xa0
0xada: V958 = 0x2
0xadc: V959 = EXP 0x2 0xa0
0xadd: V960 = SUB 0x10000000000000000000000000000000000000000 0x1
0xae0: V961 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0xae1: V962 = 0x4
0xae4: V963 = ADD V949 0x4
0xae5: M[V963] = V961
0xae6: V964 = 0x24
0xae9: V965 = ADD V949 0x24
0xaea: M[V965] = S0
0xaeb: V966 = 0x44
0xaed: V967 = ADD 0x44 V949
0xaee: V968 = 0x0
0xaf0: V969 = 0x40
0xaf2: V970 = M[0x40]
0xaf5: V971 = SUB V967 V970
0xaf7: V972 = 0x0
0xafb: V973 = EXTCODESIZE V946
0xafc: V974 = ISZERO V973
0xafd: V975 = ISZERO V974
0xafe: V976 = 0x804
0xb01: JUMPI 0x804 V975
---
Entry stack: [V13, 0xc1, V99, 0x401, S10, S9, S8, S7, S6, S5, S4, S3, {0x40c, 0xb3a}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V946, 0xa9059cbb, V967, 0x0, V970, V971, V970, 0x0, V946]
Exit stack: [V13, 0xc1, V99, 0x401, S10, S9, S8, S7, S6, S5, S4, S3, {0x40c, 0xb3a}, S1, S0, V946, 0xa9059cbb, V967, 0x0, V970, V971, V970, 0x0, V946]

================================

Block 0xb02
[0xb02:0xb05]
---
Predecessors: [0xab0]
Successors: []
---
0xb02 PUSH1 0x0
0xb04 DUP1
0xb05 REVERT
---
0xb02: V977 = 0x0
0xb05: REVERT 0x0 0x0
---
Entry stack: [V13, S18, S17, S16, S15, S14, S13, S12, {0x40c, 0xb3a}, S10, S9, V946, 0xa9059cbb, V967, 0x0, V970, V971, V970, 0x0, V946]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S18, S17, S16, S15, S14, S13, S12, {0x40c, 0xb3a}, S10, S9, V946, 0xa9059cbb, V967, 0x0, V970, V971, V970, 0x0, V946]

================================

Block 0xb06
[0xb06:0xb26]
---
Predecessors: [0x49b, 0x5eb, 0x637, 0x685, 0x9b7]
Successors: [0x4ba, 0x603, 0x64f, 0x69c, 0x9d2]
---
0xb06 JUMPDEST
0xb07 PUSH1 0x2
0xb09 ADD
0xb0a SLOAD
0xb0b PUSH1 0x0
0xb0d PUSH9 0x10000000000000000
0xb17 SWAP1
0xb18 SWAP2
0xb19 DIV
0xb1a PUSH8 0xffffffffffffffff
0xb23 AND
0xb24 GT
0xb25 SWAP1
0xb26 JUMP
---
0xb06: JUMPDEST 
0xb07: V978 = 0x2
0xb09: V979 = ADD 0x2 S0
0xb0a: V980 = S[V979]
0xb0b: V981 = 0x0
0xb0d: V982 = 0x10000000000000000
0xb19: V983 = DIV V980 0x10000000000000000
0xb1a: V984 = 0xffffffffffffffff
0xb23: V985 = AND 0xffffffffffffffff V983
0xb24: V986 = GT V985 0x0
0xb26: JUMP {0x4ba, 0x603, 0x64f, 0x69c, 0x9d2}
---
Entry stack: [V13, 0xc1, V99, S10, S9, S8, 0x0, S6, S5, S4, S3, S2, {0x4ba, 0x603, 0x64f, 0x69c, 0x9d2}, S0]
Stack pops: 2
Stack additions: [V986]
Exit stack: [V13, 0xc1, V99, S10, S9, S8, 0x0, S6, S5, S4, S3, S2, V986]

================================

Block 0xb27
[0xb27:0xb2f]
---
Predecessors: [0x60e, 0x676]
Successors: [0xbf8]
---
0xb27 JUMPDEST
0xb28 PUSH2 0xb30
0xb2b DUP3
0xb2c PUSH2 0xbf8
0xb2f JUMP
---
0xb27: JUMPDEST 
0xb28: V987 = 0xb30
0xb2c: V988 = 0xbf8
0xb2f: JUMP 0xbf8
---
Entry stack: [V13, 0xc1, V99, S11, S10, S9, 0x0, S7, S6, S5, S4, S3, {0x624, 0x680}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0xb30, S1]
Exit stack: [V13, 0xc1, V99, S11, S10, S9, 0x0, S7, S6, S5, S4, S3, {0x624, 0x680}, S1, S0, 0xb30, S1]

================================

Block 0xb30
[0xb30:0xb39]
---
Predecessors: [0xbf8]
Successors: [0xab0]
---
0xb30 JUMPDEST
0xb31 PUSH2 0xb3a
0xb34 DUP2
0xb35 DUP4
0xb36 PUSH2 0xab0
0xb39 JUMP
---
0xb30: JUMPDEST 
0xb31: V989 = 0xb3a
0xb36: V990 = 0xab0
0xb39: JUMP 0xab0
---
Entry stack: [V13, 0xc1, V99, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0xb3a, S0, S1]
Exit stack: [V13, 0xc1, V99, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0xb3a, S0, S1]

================================

Block 0xb3a
[0xb3a:0xb70]
---
Predecessors: [0x815]
Successors: [0x624, 0x680]
---
0xb3a JUMPDEST
0xb3b PUSH32 0x2809c7e17bf978fbc7194c0a694b638c4215e9140cacc6c38ca36010b45697df
0xb5c DUP3
0xb5d PUSH1 0x40
0xb5f MLOAD
0xb60 SWAP1
0xb61 DUP2
0xb62 MSTORE
0xb63 PUSH1 0x20
0xb65 ADD
0xb66 PUSH1 0x40
0xb68 MLOAD
0xb69 DUP1
0xb6a SWAP2
0xb6b SUB
0xb6c SWAP1
0xb6d LOG1
0xb6e POP
0xb6f POP
0xb70 JUMP
---
0xb3a: JUMPDEST 
0xb3b: V991 = 0x2809c7e17bf978fbc7194c0a694b638c4215e9140cacc6c38ca36010b45697df
0xb5d: V992 = 0x40
0xb5f: V993 = M[0x40]
0xb62: M[V993] = S1
0xb63: V994 = 0x20
0xb65: V995 = ADD 0x20 V993
0xb66: V996 = 0x40
0xb68: V997 = M[0x40]
0xb6b: V998 = SUB V995 V997
0xb6d: LOG V997 V998 0x2809c7e17bf978fbc7194c0a694b638c4215e9140cacc6c38ca36010b45697df
0xb70: JUMP S2
---
Entry stack: [V13, 0xc1, V66, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0xc1, V66, S7, S6, S5, S4, S3]

================================

Block 0xb71
[0xb71:0xb98]
---
Predecessors: [0x6a7, 0x9dd]
Successors: [0xb99, 0xbb7]
---
0xb71 JUMPDEST
0xb72 PUSH1 0x2
0xb74 DUP2
0xb75 ADD
0xb76 SLOAD
0xb77 PUSH1 0x0
0xb79 SWAP1
0xb7a DUP2
0xb7b SWAP1
0xb7c PUSH9 0x10000000000000000
0xb86 SWAP1
0xb87 DIV
0xb88 PUSH8 0xffffffffffffffff
0xb91 AND
0xb92 TIMESTAMP
0xb93 GT
0xb94 ISZERO
0xb95 PUSH2 0xbb7
0xb98 JUMPI
---
0xb71: JUMPDEST 
0xb72: V999 = 0x2
0xb75: V1000 = ADD S0 0x2
0xb76: V1001 = S[V1000]
0xb77: V1002 = 0x0
0xb7c: V1003 = 0x10000000000000000
0xb87: V1004 = DIV V1001 0x10000000000000000
0xb88: V1005 = 0xffffffffffffffff
0xb91: V1006 = AND 0xffffffffffffffff V1004
0xb92: V1007 = TIMESTAMP
0xb93: V1008 = GT V1007 V1006
0xb94: V1009 = ISZERO V1008
0xb95: V1010 = 0xbb7
0xb98: JUMPI 0xbb7 V1009
---
Entry stack: [V13, 0xc1, V99, S10, S9, S8, 0x0, S6, S5, S4, S3, S2, {0x6b0, 0x9e6}, S0]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0]
Exit stack: [V13, 0xc1, V99, S10, S9, S8, 0x0, S6, S5, S4, S3, S2, {0x6b0, 0x9e6}, S0, 0x0, 0x0]

================================

Block 0xb99
[0xb99:0xbb6]
---
Predecessors: [0xb71]
Successors: [0xbb7]
---
0xb99 POP
0xb9a PUSH1 0x2
0xb9c DUP3
0xb9d ADD
0xb9e SLOAD
0xb9f PUSH9 0x10000000000000000
0xba9 SWAP1
0xbaa DIV
0xbab PUSH8 0xffffffffffffffff
0xbb4 AND
0xbb5 TIMESTAMP
0xbb6 SUB
---
0xb9a: V1011 = 0x2
0xb9d: V1012 = ADD S2 0x2
0xb9e: V1013 = S[V1012]
0xb9f: V1014 = 0x10000000000000000
0xbaa: V1015 = DIV V1013 0x10000000000000000
0xbab: V1016 = 0xffffffffffffffff
0xbb4: V1017 = AND 0xffffffffffffffff V1015
0xbb5: V1018 = TIMESTAMP
0xbb6: V1019 = SUB V1018 V1017
---
Entry stack: [V13, 0xc1, V99, S12, S11, S10, 0x0, S8, S7, S6, S5, S4, {0x6b0, 0x9e6}, S2, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V1019]
Exit stack: [V13, 0xc1, V99, S12, S11, S10, 0x0, S8, S7, S6, S5, S4, {0x6b0, 0x9e6}, S2, 0x0, V1019]

================================

Block 0xbb7
[0xbb7:0xbf7]
---
Predecessors: [0xb71, 0xb99]
Successors: [0xc51]
---
0xbb7 JUMPDEST
0xbb8 PUSH1 0x1
0xbba DUP4
0xbbb ADD
0xbbc SLOAD
0xbbd PUSH1 0x2
0xbbf DUP5
0xbc0 ADD
0xbc1 SLOAD
0xbc2 PUSH2 0x6b0
0xbc5 SWAP2
0xbc6 PUSH1 0x1
0xbc8 PUSH1 0x80
0xbca PUSH1 0x2
0xbcc EXP
0xbcd SUB
0xbce DUP1
0xbcf DUP3
0xbd0 AND
0xbd1 SWAP3
0xbd2 PUSH17 0x100000000000000000000000000000000
0xbe4 SWAP1
0xbe5 SWAP3
0xbe6 DIV
0xbe7 AND
0xbe8 SWAP1
0xbe9 PUSH8 0xffffffffffffffff
0xbf2 AND
0xbf3 DUP5
0xbf4 PUSH2 0xc51
0xbf7 JUMP
---
0xbb7: JUMPDEST 
0xbb8: V1020 = 0x1
0xbbb: V1021 = ADD S2 0x1
0xbbc: V1022 = S[V1021]
0xbbd: V1023 = 0x2
0xbc0: V1024 = ADD S2 0x2
0xbc1: V1025 = S[V1024]
0xbc2: V1026 = 0x6b0
0xbc6: V1027 = 0x1
0xbc8: V1028 = 0x80
0xbca: V1029 = 0x2
0xbcc: V1030 = EXP 0x2 0x80
0xbcd: V1031 = SUB 0x100000000000000000000000000000000 0x1
0xbd0: V1032 = AND V1022 0xffffffffffffffffffffffffffffffff
0xbd2: V1033 = 0x100000000000000000000000000000000
0xbe6: V1034 = DIV V1022 0x100000000000000000000000000000000
0xbe7: V1035 = AND V1034 0xffffffffffffffffffffffffffffffff
0xbe9: V1036 = 0xffffffffffffffff
0xbf2: V1037 = AND 0xffffffffffffffff V1025
0xbf4: V1038 = 0xc51
0xbf7: JUMP 0xc51
---
Entry stack: [V13, 0xc1, V99, S12, S11, S10, 0x0, S8, S7, S6, S5, S4, {0x6b0, 0x9e6}, S2, 0x0, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x6b0, V1032, V1035, V1037, S0]
Exit stack: [V13, 0xc1, V99, S12, S11, S10, 0x0, S8, S7, S6, S5, S4, {0x6b0, 0x9e6}, S2, 0x0, S0, 0x6b0, V1032, V1035, V1037, S0]

================================

Block 0xbf8
[0xbf8:0xc44]
---
Predecessors: [0x9f5, 0xb27]
Successors: [0xa0b, 0xb30]
---
0xbf8 JUMPDEST
0xbf9 PUSH1 0x0
0xbfb SWAP1
0xbfc DUP2
0xbfd MSTORE
0xbfe PUSH1 0x3
0xc00 PUSH1 0x20
0xc02 MSTORE
0xc03 PUSH1 0x40
0xc05 DUP2
0xc06 SHA3
0xc07 DUP1
0xc08 SLOAD
0xc09 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc1e NOT
0xc1f AND
0xc20 DUP2
0xc21 SSTORE
0xc22 PUSH1 0x1
0xc24 DUP2
0xc25 ADD
0xc26 SWAP2
0xc27 SWAP1
0xc28 SWAP2
0xc29 SSTORE
0xc2a PUSH1 0x2
0xc2c ADD
0xc2d DUP1
0xc2e SLOAD
0xc2f PUSH16 0xffffffffffffffffffffffffffffffff
0xc40 NOT
0xc41 AND
0xc42 SWAP1
0xc43 SSTORE
0xc44 JUMP
---
0xbf8: JUMPDEST 
0xbf9: V1039 = 0x0
0xbfd: M[0x0] = S0
0xbfe: V1040 = 0x3
0xc00: V1041 = 0x20
0xc02: M[0x20] = 0x3
0xc03: V1042 = 0x40
0xc06: V1043 = SHA3 0x0 0x40
0xc08: V1044 = S[V1043]
0xc09: V1045 = 0xffffffffffffffffffffffffffffffffffffffff
0xc1e: V1046 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xc1f: V1047 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1044
0xc21: S[V1043] = V1047
0xc22: V1048 = 0x1
0xc25: V1049 = ADD V1043 0x1
0xc29: S[V1049] = 0x0
0xc2a: V1050 = 0x2
0xc2c: V1051 = ADD 0x2 V1043
0xc2e: V1052 = S[V1051]
0xc2f: V1053 = 0xffffffffffffffffffffffffffffffff
0xc40: V1054 = NOT 0xffffffffffffffffffffffffffffffff
0xc41: V1055 = AND 0xffffffffffffffffffffffffffffffff00000000000000000000000000000000 V1052
0xc43: S[V1051] = V1055
0xc44: JUMP {0xa0b, 0xb30}
---
Entry stack: [V13, 0xc1, V99, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0xa0b, 0xb30}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0xc1, V99, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0xc45
[0xc45:0xc50]
---
Predecessors: [0xa15]
Successors: [0xa1d]
---
0xc45 JUMPDEST
0xc46 PUSH1 0x2
0xc48 SLOAD
0xc49 PUSH2 0x2710
0xc4c SWAP2
0xc4d MUL
0xc4e DIV
0xc4f SWAP1
0xc50 JUMP
---
0xc45: JUMPDEST 
0xc46: V1056 = 0x2
0xc48: V1057 = S[0x2]
0xc49: V1058 = 0x2710
0xc4d: V1059 = MUL S0 V1057
0xc4e: V1060 = DIV V1059 0x2710
0xc50: JUMP 0xa1d
---
Entry stack: [V13, 0xc1, V99, 0x401, S9, S8, S7, S6, S5, S4, S3, S2, 0xa1d, S0]
Stack pops: 2
Stack additions: [V1060]
Exit stack: [V13, 0xc1, V99, 0x401, S9, S8, S7, S6, S5, S4, S3, S2, V1060]

================================

Block 0xc51
[0xc51:0xc5d]
---
Predecessors: [0xbb7]
Successors: [0xc5e, 0xc65]
---
0xc51 JUMPDEST
0xc52 PUSH1 0x0
0xc54 DUP1
0xc55 DUP1
0xc56 DUP1
0xc57 DUP6
0xc58 DUP6
0xc59 LT
0xc5a PUSH2 0xc65
0xc5d JUMPI
---
0xc51: JUMPDEST 
0xc52: V1061 = 0x0
0xc59: V1062 = LT S0 V1037
0xc5a: V1063 = 0xc65
0xc5d: JUMPI 0xc65 V1062
---
Entry stack: [V13, 0xc1, V99, S17, S16, S15, 0x0, S13, S12, S11, S10, S9, {0x6b0, 0x9e6}, S7, 0x0, S5, 0x6b0, V1032, V1035, V1037, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V13, 0xc1, V99, S17, S16, S15, 0x0, S13, S12, S11, S10, S9, {0x6b0, 0x9e6}, S7, 0x0, S5, 0x6b0, V1032, V1035, V1037, S0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xc5e
[0xc5e:0xc64]
---
Predecessors: [0xc51]
Successors: [0xc83]
---
0xc5e DUP7
0xc5f SWAP4
0xc60 POP
0xc61 PUSH2 0xc83
0xc64 JUMP
---
0xc61: V1064 = 0xc83
0xc64: JUMP 0xc83
---
Entry stack: [V13, 0xc1, V99, S21, S20, S19, 0x0, S17, S16, S15, S14, S13, {0x6b0, 0x9e6}, S11, 0x0, S9, 0x6b0, V1032, V1035, V1037, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S6, S2, S1, S0]
Exit stack: [V13, 0xc1, V99, S21, S20, S19, 0x0, S17, S16, S15, S14, S13, {0x6b0, 0x9e6}, S11, 0x0, S9, 0x6b0, V1032, V1035, V1037, S4, V1035, 0x0, 0x0, 0x0]

================================

Block 0xc65
[0xc65:0xc75]
---
Predecessors: [0xc51]
Successors: [0xc76, 0xc77]
---
0xc65 JUMPDEST
0xc66 DUP8
0xc67 DUP8
0xc68 SUB
0xc69 SWAP3
0xc6a POP
0xc6b DUP6
0xc6c DUP6
0xc6d DUP5
0xc6e MUL
0xc6f DUP2
0xc70 ISZERO
0xc71 ISZERO
0xc72 PUSH2 0xc77
0xc75 JUMPI
---
0xc65: JUMPDEST 
0xc68: V1065 = SUB V1035 V1032
0xc6e: V1066 = MUL V1065 S4
0xc70: V1067 = ISZERO V1037
0xc71: V1068 = ISZERO V1067
0xc72: V1069 = 0xc77
0xc75: JUMPI 0xc77 V1068
---
Entry stack: [V13, 0xc1, V99, S21, S20, S19, 0x0, S17, S16, S15, S14, S13, {0x6b0, 0x9e6}, S11, 0x0, S9, 0x6b0, V1032, V1035, V1037, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, V1065, S1, S0, S5, V1066]
Exit stack: [V13, 0xc1, V99, S21, S20, S19, 0x0, S17, S16, S15, S14, S13, {0x6b0, 0x9e6}, S11, 0x0, S9, 0x6b0, V1032, V1035, V1037, S4, 0x0, V1065, 0x0, 0x0, V1037, V1066]

================================

Block 0xc76
[0xc76:0xc76]
---
Predecessors: [0xc65]
Successors: []
---
0xc76 INVALID
---
0xc76: INVALID 
---
Entry stack: [V13, 0xc1, V99, S23, S22, S21, 0x0, S19, S18, S17, S16, S15, {0x6b0, 0x9e6}, S13, 0x0, S11, 0x6b0, V1032, V1035, V1037, S6, 0x0, V1065, 0x0, 0x0, V1037, V1066]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xc1, V99, S23, S22, S21, 0x0, S19, S18, S17, S16, S15, {0x6b0, 0x9e6}, S13, 0x0, S11, 0x6b0, V1032, V1035, V1037, S6, 0x0, V1065, 0x0, 0x0, V1037, V1066]

================================

Block 0xc77
[0xc77:0xc82]
---
Predecessors: [0xc65]
Successors: [0xc83]
---
0xc77 JUMPDEST
0xc78 SDIV
0xc79 SWAP2
0xc7a POP
0xc7b DUP2
0xc7c DUP9
0xc7d ADD
0xc7e SWAP1
0xc7f POP
0xc80 DUP1
0xc81 SWAP4
0xc82 POP
---
0xc77: JUMPDEST 
0xc78: V1070 = SDIV V1066 V1037
0xc7d: V1071 = ADD V1032 V1070
---
Entry stack: [V13, 0xc1, V99, S23, S22, S21, 0x0, S19, S18, S17, S16, S15, {0x6b0, 0x9e6}, S13, 0x0, S11, 0x6b0, V1032, V1035, V1037, S6, 0x0, V1065, 0x0, 0x0, V1037, V1066]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, V1071, S4, V1070, V1071]
Exit stack: [V13, 0xc1, V99, S23, S22, S21, 0x0, S19, S18, S17, S16, S15, {0x6b0, 0x9e6}, S13, 0x0, S11, 0x6b0, V1032, V1035, V1037, S6, V1071, V1065, V1070, V1071]

================================

Block 0xc83
[0xc83:0xc8d]
---
Predecessors: [0xc5e, 0xc77]
Successors: [0x6b0]
---
0xc83 JUMPDEST
0xc84 POP
0xc85 POP
0xc86 POP
0xc87 SWAP5
0xc88 SWAP4
0xc89 POP
0xc8a POP
0xc8b POP
0xc8c POP
0xc8d JUMP
---
0xc83: JUMPDEST 
0xc8d: JUMP 0x6b0
---
Entry stack: [V13, 0xc1, V99, S21, S20, S19, 0x0, S17, S16, S15, S14, S13, {0x6b0, 0x9e6}, S11, 0x0, S9, 0x6b0, V1032, V1035, V1037, S4, S3, S2, S1, S0]
Stack pops: 9
Stack additions: [S3]
Exit stack: [V13, 0xc1, V99, S21, S20, S19, 0x0, S17, S16, S15, S14, S13, {0x6b0, 0x9e6}, S11, 0x0, S9, S3]

================================

Block 0xc8e
[0xc8e:0xcbb]
---
Predecessors: [0x272]
Successors: [0x27a]
---
0xc8e JUMPDEST
0xc8f PUSH1 0xa0
0xc91 PUSH1 0x40
0xc93 MLOAD
0xc94 SWAP1
0xc95 DUP2
0xc96 ADD
0xc97 PUSH1 0x40
0xc99 SWAP1
0xc9a DUP2
0xc9b MSTORE
0xc9c PUSH1 0x0
0xc9e DUP1
0xc9f DUP4
0xca0 MSTORE
0xca1 PUSH1 0x20
0xca3 DUP4
0xca4 ADD
0xca5 DUP2
0xca6 SWAP1
0xca7 MSTORE
0xca8 SWAP1
0xca9 DUP3
0xcaa ADD
0xcab DUP2
0xcac SWAP1
0xcad MSTORE
0xcae PUSH1 0x60
0xcb0 DUP3
0xcb1 ADD
0xcb2 DUP2
0xcb3 SWAP1
0xcb4 MSTORE
0xcb5 PUSH1 0x80
0xcb7 DUP3
0xcb8 ADD
0xcb9 MSTORE
0xcba SWAP1
0xcbb JUMP
---
0xc8e: JUMPDEST 
0xc8f: V1072 = 0xa0
0xc91: V1073 = 0x40
0xc93: V1074 = M[0x40]
0xc96: V1075 = ADD V1074 0xa0
0xc97: V1076 = 0x40
0xc9b: M[0x40] = V1075
0xc9c: V1077 = 0x0
0xca0: M[V1074] = 0x0
0xca1: V1078 = 0x20
0xca4: V1079 = ADD V1074 0x20
0xca7: M[V1079] = 0x0
0xcaa: V1080 = ADD V1074 0x40
0xcad: M[V1080] = 0x0
0xcae: V1081 = 0x60
0xcb1: V1082 = ADD V1074 0x60
0xcb4: M[V1082] = 0x0
0xcb5: V1083 = 0x80
0xcb8: V1084 = ADD V1074 0x80
0xcb9: M[V1084] = 0x0
0xcbb: JUMP 0x27a
---
Entry stack: [V13, 0xc1, V66, V68, V70, V72, V80, 0x27a]
Stack pops: 1
Stack additions: [V1074]
Exit stack: [V13, 0xc1, V66, V68, V70, V72, V80, V1074]

================================

Block 0xcbc
[0xcbc:0xce7]
---
Predecessors: []
Successors: []
---
0xcbc STOP
0xcbd LOG1
0xcbe PUSH6 0x627a7a723058
0xcc5 SHA3
0xcc6 BLOCKHASH
0xcc7 PUSH26 0x90a6704976c35f1fb2dd510f4d09cdaf75ad2bd10acc9d9da8e3
0xce2 MISSING 0xfc
0xce3 SWAP8
0xce4 MISSING 0xf9
0xce5 DELEGATECALL
0xce6 STOP
0xce7 MISSING 0x29
---
0xcbc: STOP 
0xcbd: LOG S0 S1 S2
0xcbe: V1085 = 0x627a7a723058
0xcc5: V1086 = SHA3 0x627a7a723058 S3
0xcc6: V1087 = BLOCKHASH V1086
0xcc7: V1088 = 0x90a6704976c35f1fb2dd510f4d09cdaf75ad2bd10acc9d9da8e3
0xce2: MISSING 0xfc
0xce4: MISSING 0xf9
0xce5: V1089 = DELEGATECALL S0 S1 S2 S3 S4 S5
0xce6: STOP 
0xce7: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0x90a6704976c35f1fb2dd510f4d09cdaf75ad2bd10acc9d9da8e3, V1087, S8, S1, S2, S3, S4, S5, S6, S7, S0, V1089]
Exit stack: []

================================

Function 0:
Public function signature: 0x27ebe40a
Entry block: 0xc3
Exit block: 0xc1
Body: 0xc1, 0xc3, 0xca, 0xce, 0x272, 0x27a, 0x28d, 0x291, 0x2a1, 0x2a5, 0x2b5, 0x2b9, 0x2cb, 0x2cf, 0x2d9, 0x2e0, 0x2e4, 0x71d, 0x770, 0x774, 0x781, 0x785, 0x7a1, 0x800, 0xc8e

Function 1:
Public function signature: 0x3f4ba83a
Entry block: 0xee
Exit block: 0x101
Body: 0xee, 0xf5, 0xf9, 0x101, 0x35c, 0x374, 0x378, 0x38c, 0x390

Function 2:
Public function signature: 0x454a2ab3
Entry block: 0x115
Exit block: 0xa50
Body: 0xc1, 0x115, 0x3e0, 0x3f3, 0x3f7, 0x401, 0x40c, 0x9b7, 0x9d2, 0x9d9, 0x9dd, 0x9e6, 0x9f1, 0x9f5, 0xa0b, 0xa15, 0xa1d, 0xa50, 0xa54, 0xc45

Function 3:
Public function signature: 0x5c975abb
Entry block: 0x120
Exit block: 0x101
Body: 0x101, 0x120, 0x127, 0x12b, 0x40f

Function 4:
Public function signature: 0x5fd8c710
Entry block: 0x133
Exit block: 0xc1
Body: 0xc1, 0x133, 0x13a, 0x13e, 0x40c, 0x41f, 0x43d, 0x453, 0x45a, 0x45e, 0x497

Function 5:
Public function signature: 0x78bd7935
Entry block: 0x146
Exit block: 0x15c
Body: 0x146, 0x14d, 0x151, 0x15c, 0x49b, 0x4ba, 0x4c1, 0x4c5

Function 6:
Public function signature: 0x83b5ff8b
Entry block: 0x197
Exit block: 0x1aa
Body: 0x197, 0x19e, 0x1a2, 0x1aa, 0x528

Function 7:
Public function signature: 0x8456cb59
Entry block: 0x1bc
Exit block: 0x101
Body: 0x101, 0x1bc, 0x1c3, 0x1c7, 0x52e, 0x546, 0x54a, 0x55d, 0x561

Function 8:
Public function signature: 0x878eb368
Entry block: 0x1cf
Exit block: 0xc1
Body: 0xc1, 0x1cf, 0x1d6, 0x1da, 0x5b7, 0x5cc, 0x5d0, 0x5e7, 0x5eb, 0x603, 0x60a, 0x60e, 0x624

Function 9:
Public function signature: 0x8da5cb5b
Entry block: 0x1e5
Exit block: 0x1f8
Body: 0x1e5, 0x1ec, 0x1f0, 0x1f8, 0x628

Function 10:
Public function signature: 0x96b5a755
Entry block: 0x214
Exit block: 0xc1
Body: 0xc1, 0x214, 0x21b, 0x21f, 0x637, 0x64f, 0x656, 0x65a, 0x672, 0x676, 0x680

Function 11:
Public function signature: 0xc55d0f56
Entry block: 0x22a
Exit block: 0xa50
Body: 0xc1, 0x1aa, 0x22a, 0x231, 0x235, 0x401, 0x40c, 0x685, 0x69c, 0x6a3, 0x6a7, 0x6b0, 0x9e6, 0x9f1, 0x9f5, 0xa0b, 0xa15, 0xa1d, 0xa50, 0xa54, 0xc45

Function 12:
Public function signature: 0xdd1b7a0f
Entry block: 0x240
Exit block: 0x1f8
Body: 0x1f8, 0x240, 0x247, 0x24b, 0x6b7

Function 13:
Public function signature: 0xf2fde38b
Entry block: 0x253
Exit block: 0xc1
Body: 0xc1, 0x253, 0x25a, 0x25e, 0x40c, 0x6c6, 0x6dd, 0x6e1, 0x6f1

Function 14:
Public fallback function
Entry block: 0xb6
Exit block: 0xbd
Body: 0xb6, 0xbd, 0xc1

Function 15:
Private function
Entry block: 0xb27
Exit block: 0xb3a
Body: 0x804, 0x815, 0xab0, 0xb27, 0xb30, 0xb3a

Function 16:
Private function
Entry block: 0xab0
Exit block: 0x815
Body: 0x804, 0x815, 0xab0

