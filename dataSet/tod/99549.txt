Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x88]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x88
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x88
0xa: JUMPI 0x88 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x8a]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x3ccfd60b
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x8a
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x3ccfd60b
0x20: V14 = EQ V12 0x3ccfd60b
0x21: V15 = 0x8a
0x24: JUMPI 0x8a V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x9c]
---
0x25 DUP1
0x26 PUSH4 0x3f4ba83a
0x2b EQ
0x2c PUSH2 0x9c
0x2f JUMPI
---
0x26: V16 = 0x3f4ba83a
0x2b: V17 = EQ 0x3f4ba83a V12
0x2c: V18 = 0x9c
0x2f: JUMPI 0x9c V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xc0]
---
0x30 DUP1
0x31 PUSH4 0x4fa51a39
0x36 EQ
0x37 PUSH2 0xc0
0x3a JUMPI
---
0x31: V19 = 0x4fa51a39
0x36: V20 = EQ 0x4fa51a39 V12
0x37: V21 = 0xc0
0x3a: JUMPI 0xc0 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0xd7]
---
0x3b DUP1
0x3c PUSH4 0x5c975abb
0x41 EQ
0x42 PUSH2 0xd7
0x45 JUMPI
---
0x3c: V22 = 0x5c975abb
0x41: V23 = EQ 0x5c975abb V12
0x42: V24 = 0xd7
0x45: JUMPI 0xd7 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0xfb]
---
0x46 DUP1
0x47 PUSH4 0x83197ef0
0x4c EQ
0x4d PUSH2 0xfb
0x50 JUMPI
---
0x47: V25 = 0x83197ef0
0x4c: V26 = EQ 0x83197ef0 V12
0x4d: V27 = 0xfb
0x50: JUMPI 0xfb V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x10d]
---
0x51 DUP1
0x52 PUSH4 0x8456cb59
0x57 EQ
0x58 PUSH2 0x10d
0x5b JUMPI
---
0x52: V28 = 0x8456cb59
0x57: V29 = EQ 0x8456cb59 V12
0x58: V30 = 0x10d
0x5b: JUMPI 0x10d V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x131]
---
0x5c DUP1
0x5d PUSH4 0x8da5cb5b
0x62 EQ
0x63 PUSH2 0x131
0x66 JUMPI
---
0x5d: V31 = 0x8da5cb5b
0x62: V32 = EQ 0x8da5cb5b V12
0x63: V33 = 0x131
0x66: JUMPI 0x131 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x15d]
---
0x67 DUP1
0x68 PUSH4 0xef9e5743
0x6d EQ
0x6e PUSH2 0x15d
0x71 JUMPI
---
0x68: V34 = 0xef9e5743
0x6d: V35 = EQ 0xef9e5743 V12
0x6e: V36 = 0x15d
0x71: JUMPI 0x15d V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x18c]
---
0x72 DUP1
0x73 PUSH4 0xf2fde38b
0x78 EQ
0x79 PUSH2 0x18c
0x7c JUMPI
---
0x73: V37 = 0xf2fde38b
0x78: V38 = EQ 0xf2fde38b V12
0x79: V39 = 0x18c
0x7c: JUMPI 0x18c V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x1aa]
---
0x7d DUP1
0x7e PUSH4 0xf5074f41
0x83 EQ
0x84 PUSH2 0x1aa
0x87 JUMPI
---
0x7e: V40 = 0xf5074f41
0x83: V41 = EQ 0xf5074f41 V12
0x84: V42 = 0x1aa
0x87: JUMPI 0x1aa V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x89]
---
Predecessors: [0x0, 0x7d]
Successors: []
---
0x88 JUMPDEST
0x89 INVALID
---
0x88: JUMPDEST 
0x89: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8a
[0x8a:0x90]
---
Predecessors: [0xb]
Successors: [0x91, 0x92]
---
0x8a JUMPDEST
0x8b CALLVALUE
0x8c ISZERO
0x8d PUSH2 0x92
0x90 JUMPI
---
0x8a: JUMPDEST 
0x8b: V43 = CALLVALUE
0x8c: V44 = ISZERO V43
0x8d: V45 = 0x92
0x90: JUMPI 0x92 V44
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x91
[0x91:0x91]
---
Predecessors: [0x8a]
Successors: []
---
0x91 INVALID
---
0x91: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x92
[0x92:0x99]
---
Predecessors: [0x8a]
Successors: [0x1c8]
---
0x92 JUMPDEST
0x93 PUSH2 0x9a
0x96 PUSH2 0x1c8
0x99 JUMP
---
0x92: JUMPDEST 
0x93: V46 = 0x9a
0x96: V47 = 0x1c8
0x99: JUMP 0x1c8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x9a]
Exit stack: [V12, 0x9a]

================================

Block 0x9a
[0x9a:0x9b]
---
Predecessors: [0x235, 0x33f, 0x464]
Successors: []
---
0x9a JUMPDEST
0x9b STOP
---
0x9a: JUMPDEST 
0x9b: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9c
[0x9c:0xa2]
---
Predecessors: [0x25]
Successors: [0xa3, 0xa4]
---
0x9c JUMPDEST
0x9d CALLVALUE
0x9e ISZERO
0x9f PUSH2 0xa4
0xa2 JUMPI
---
0x9c: JUMPDEST 
0x9d: V48 = CALLVALUE
0x9e: V49 = ISZERO V48
0x9f: V50 = 0xa4
0xa2: JUMPI 0xa4 V49
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa3
[0xa3:0xa3]
---
Predecessors: [0x9c]
Successors: []
---
0xa3 INVALID
---
0xa3: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa4
[0xa4:0xab]
---
Predecessors: [0x9c]
Successors: [0x237]
---
0xa4 JUMPDEST
0xa5 PUSH2 0xac
0xa8 PUSH2 0x237
0xab JUMP
---
0xa4: JUMPDEST 
0xa5: V51 = 0xac
0xa8: V52 = 0x237
0xab: JUMP 0x237
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xac]
Exit stack: [V12, 0xac]

================================

Block 0xac
[0xac:0xbf]
---
Predecessors: [0x2aa, 0x342, 0x3f7]
Successors: []
---
0xac JUMPDEST
0xad PUSH1 0x40
0xaf DUP1
0xb0 MLOAD
0xb1 SWAP2
0xb2 ISZERO
0xb3 ISZERO
0xb4 DUP3
0xb5 MSTORE
0xb6 MLOAD
0xb7 SWAP1
0xb8 DUP2
0xb9 SWAP1
0xba SUB
0xbb PUSH1 0x20
0xbd ADD
0xbe SWAP1
0xbf RETURN
---
0xac: JUMPDEST 
0xad: V53 = 0x40
0xb0: V54 = M[0x40]
0xb2: V55 = ISZERO S0
0xb3: V56 = ISZERO V55
0xb5: M[V54] = V56
0xb6: V57 = M[0x40]
0xba: V58 = SUB V54 V57
0xbb: V59 = 0x20
0xbd: V60 = ADD 0x20 V58
0xbf: RETURN V57 V60
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0xc0
[0xc0:0xd4]
---
Predecessors: [0x30]
Successors: [0x2ad]
---
0xc0 JUMPDEST
0xc1 PUSH2 0x9a
0xc4 PUSH1 0x1
0xc6 PUSH1 0xb0
0xc8 PUSH1 0x2
0xca EXP
0xcb SUB
0xcc NOT
0xcd PUSH1 0x4
0xcf CALLDATALOAD
0xd0 AND
0xd1 PUSH2 0x2ad
0xd4 JUMP
---
0xc0: JUMPDEST 
0xc1: V61 = 0x9a
0xc4: V62 = 0x1
0xc6: V63 = 0xb0
0xc8: V64 = 0x2
0xca: V65 = EXP 0x2 0xb0
0xcb: V66 = SUB 0x100000000000000000000000000000000000000000000 0x1
0xcc: V67 = NOT 0xffffffffffffffffffffffffffffffffffffffffffff
0xcd: V68 = 0x4
0xcf: V69 = CALLDATALOAD 0x4
0xd0: V70 = AND V69 0xffffffffffffffffffff00000000000000000000000000000000000000000000
0xd1: V71 = 0x2ad
0xd4: JUMP 0x2ad
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x9a, V70]
Exit stack: [V12, 0x9a, V70]

================================

Block 0xd5
[0xd5:0xd6]
---
Predecessors: []
Successors: []
---
0xd5 JUMPDEST
0xd6 STOP
---
0xd5: JUMPDEST 
0xd6: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd7
[0xd7:0xdd]
---
Predecessors: [0x3b]
Successors: [0xde, 0xdf]
---
0xd7 JUMPDEST
0xd8 CALLVALUE
0xd9 ISZERO
0xda PUSH2 0xdf
0xdd JUMPI
---
0xd7: JUMPDEST 
0xd8: V72 = CALLVALUE
0xd9: V73 = ISZERO V72
0xda: V74 = 0xdf
0xdd: JUMPI 0xdf V73
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xde
[0xde:0xde]
---
Predecessors: [0xd7]
Successors: []
---
0xde INVALID
---
0xde: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xdf
[0xdf:0xe6]
---
Predecessors: [0xd7]
Successors: [0x342]
---
0xdf JUMPDEST
0xe0 PUSH2 0xac
0xe3 PUSH2 0x342
0xe6 JUMP
---
0xdf: JUMPDEST 
0xe0: V75 = 0xac
0xe3: V76 = 0x342
0xe6: JUMP 0x342
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xac]
Exit stack: [V12, 0xac]

================================

Block 0xe7
[0xe7:0xfa]
---
Predecessors: []
Successors: []
---
0xe7 JUMPDEST
0xe8 PUSH1 0x40
0xea DUP1
0xeb MLOAD
0xec SWAP2
0xed ISZERO
0xee ISZERO
0xef DUP3
0xf0 MSTORE
0xf1 MLOAD
0xf2 SWAP1
0xf3 DUP2
0xf4 SWAP1
0xf5 SUB
0xf6 PUSH1 0x20
0xf8 ADD
0xf9 SWAP1
0xfa RETURN
---
0xe7: JUMPDEST 
0xe8: V77 = 0x40
0xeb: V78 = M[0x40]
0xed: V79 = ISZERO S0
0xee: V80 = ISZERO V79
0xf0: M[V78] = V80
0xf1: V81 = M[0x40]
0xf5: V82 = SUB V78 V81
0xf6: V83 = 0x20
0xf8: V84 = ADD 0x20 V82
0xfa: RETURN V81 V84
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xfb
[0xfb:0x101]
---
Predecessors: [0x46]
Successors: [0x102, 0x103]
---
0xfb JUMPDEST
0xfc CALLVALUE
0xfd ISZERO
0xfe PUSH2 0x103
0x101 JUMPI
---
0xfb: JUMPDEST 
0xfc: V85 = CALLVALUE
0xfd: V86 = ISZERO V85
0xfe: V87 = 0x103
0x101: JUMPI 0x103 V86
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x102
[0x102:0x102]
---
Predecessors: [0xfb]
Successors: []
---
0x102 INVALID
---
0x102: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x103
[0x103:0x10a]
---
Predecessors: [0xfb]
Successors: [0x352]
---
0x103 JUMPDEST
0x104 PUSH2 0x9a
0x107 PUSH2 0x352
0x10a JUMP
---
0x103: JUMPDEST 
0x104: V88 = 0x9a
0x107: V89 = 0x352
0x10a: JUMP 0x352
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x9a]
Exit stack: [V12, 0x9a]

================================

Block 0x10b
[0x10b:0x10c]
---
Predecessors: []
Successors: []
---
0x10b JUMPDEST
0x10c STOP
---
0x10b: JUMPDEST 
0x10c: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x10d
[0x10d:0x113]
---
Predecessors: [0x51]
Successors: [0x114, 0x115]
---
0x10d JUMPDEST
0x10e CALLVALUE
0x10f ISZERO
0x110 PUSH2 0x115
0x113 JUMPI
---
0x10d: JUMPDEST 
0x10e: V90 = CALLVALUE
0x10f: V91 = ISZERO V90
0x110: V92 = 0x115
0x113: JUMPI 0x115 V91
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x114
[0x114:0x114]
---
Predecessors: [0x10d]
Successors: []
---
0x114 INVALID
---
0x114: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x115
[0x115:0x11c]
---
Predecessors: [0x10d]
Successors: [0x37f]
---
0x115 JUMPDEST
0x116 PUSH2 0xac
0x119 PUSH2 0x37f
0x11c JUMP
---
0x115: JUMPDEST 
0x116: V93 = 0xac
0x119: V94 = 0x37f
0x11c: JUMP 0x37f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xac]
Exit stack: [V12, 0xac]

================================

Block 0x11d
[0x11d:0x130]
---
Predecessors: []
Successors: []
---
0x11d JUMPDEST
0x11e PUSH1 0x40
0x120 DUP1
0x121 MLOAD
0x122 SWAP2
0x123 ISZERO
0x124 ISZERO
0x125 DUP3
0x126 MSTORE
0x127 MLOAD
0x128 SWAP1
0x129 DUP2
0x12a SWAP1
0x12b SUB
0x12c PUSH1 0x20
0x12e ADD
0x12f SWAP1
0x130 RETURN
---
0x11d: JUMPDEST 
0x11e: V95 = 0x40
0x121: V96 = M[0x40]
0x123: V97 = ISZERO S0
0x124: V98 = ISZERO V97
0x126: M[V96] = V98
0x127: V99 = M[0x40]
0x12b: V100 = SUB V96 V99
0x12c: V101 = 0x20
0x12e: V102 = ADD 0x20 V100
0x130: RETURN V99 V102
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x131
[0x131:0x137]
---
Predecessors: [0x5c]
Successors: [0x138, 0x139]
---
0x131 JUMPDEST
0x132 CALLVALUE
0x133 ISZERO
0x134 PUSH2 0x139
0x137 JUMPI
---
0x131: JUMPDEST 
0x132: V103 = CALLVALUE
0x133: V104 = ISZERO V103
0x134: V105 = 0x139
0x137: JUMPI 0x139 V104
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x138
[0x138:0x138]
---
Predecessors: [0x131]
Successors: []
---
0x138 INVALID
---
0x138: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x139
[0x139:0x140]
---
Predecessors: [0x131]
Successors: [0x3fa]
---
0x139 JUMPDEST
0x13a PUSH2 0x141
0x13d PUSH2 0x3fa
0x140 JUMP
---
0x139: JUMPDEST 
0x13a: V106 = 0x141
0x13d: V107 = 0x3fa
0x140: JUMP 0x3fa
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x141]
Exit stack: [V12, 0x141]

================================

Block 0x141
[0x141:0x15c]
---
Predecessors: [0x3fa]
Successors: []
---
0x141 JUMPDEST
0x142 PUSH1 0x40
0x144 DUP1
0x145 MLOAD
0x146 PUSH1 0x1
0x148 PUSH1 0xa0
0x14a PUSH1 0x2
0x14c EXP
0x14d SUB
0x14e SWAP1
0x14f SWAP3
0x150 AND
0x151 DUP3
0x152 MSTORE
0x153 MLOAD
0x154 SWAP1
0x155 DUP2
0x156 SWAP1
0x157 SUB
0x158 PUSH1 0x20
0x15a ADD
0x15b SWAP1
0x15c RETURN
---
0x141: JUMPDEST 
0x142: V108 = 0x40
0x145: V109 = M[0x40]
0x146: V110 = 0x1
0x148: V111 = 0xa0
0x14a: V112 = 0x2
0x14c: V113 = EXP 0x2 0xa0
0x14d: V114 = SUB 0x10000000000000000000000000000000000000000 0x1
0x150: V115 = AND V383 0xffffffffffffffffffffffffffffffffffffffff
0x152: M[V109] = V115
0x153: V116 = M[0x40]
0x157: V117 = SUB V109 V116
0x158: V118 = 0x20
0x15a: V119 = ADD 0x20 V117
0x15c: RETURN V116 V119
---
Entry stack: [V12, 0x141, V383]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x141]

================================

Block 0x15d
[0x15d:0x163]
---
Predecessors: [0x67]
Successors: [0x164, 0x165]
---
0x15d JUMPDEST
0x15e CALLVALUE
0x15f ISZERO
0x160 PUSH2 0x165
0x163 JUMPI
---
0x15d: JUMPDEST 
0x15e: V120 = CALLVALUE
0x15f: V121 = ISZERO V120
0x160: V122 = 0x165
0x163: JUMPI 0x165 V121
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x164
[0x164:0x164]
---
Predecessors: [0x15d]
Successors: []
---
0x164 INVALID
---
0x164: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x165
[0x165:0x179]
---
Predecessors: [0x15d]
Successors: [0x409]
---
0x165 JUMPDEST
0x166 PUSH2 0x17a
0x169 PUSH1 0x1
0x16b PUSH1 0xb0
0x16d PUSH1 0x2
0x16f EXP
0x170 SUB
0x171 NOT
0x172 PUSH1 0x4
0x174 CALLDATALOAD
0x175 AND
0x176 PUSH2 0x409
0x179 JUMP
---
0x165: JUMPDEST 
0x166: V123 = 0x17a
0x169: V124 = 0x1
0x16b: V125 = 0xb0
0x16d: V126 = 0x2
0x16f: V127 = EXP 0x2 0xb0
0x170: V128 = SUB 0x100000000000000000000000000000000000000000000 0x1
0x171: V129 = NOT 0xffffffffffffffffffffffffffffffffffffffffffff
0x172: V130 = 0x4
0x174: V131 = CALLDATALOAD 0x4
0x175: V132 = AND V131 0xffffffffffffffffffff00000000000000000000000000000000000000000000
0x176: V133 = 0x409
0x179: JUMP 0x409
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x17a, V132]
Exit stack: [V12, 0x17a, V132]

================================

Block 0x17a
[0x17a:0x18b]
---
Predecessors: [0x409]
Successors: []
---
0x17a JUMPDEST
0x17b PUSH1 0x40
0x17d DUP1
0x17e MLOAD
0x17f SWAP2
0x180 DUP3
0x181 MSTORE
0x182 MLOAD
0x183 SWAP1
0x184 DUP2
0x185 SWAP1
0x186 SUB
0x187 PUSH1 0x20
0x189 ADD
0x18a SWAP1
0x18b RETURN
---
0x17a: JUMPDEST 
0x17b: V134 = 0x40
0x17e: V135 = M[0x40]
0x181: M[V135] = V389
0x182: V136 = M[0x40]
0x186: V137 = SUB V135 V136
0x187: V138 = 0x20
0x189: V139 = ADD 0x20 V137
0x18b: RETURN V136 V139
---
Entry stack: [V12, 0x17a, V389]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x17a]

================================

Block 0x18c
[0x18c:0x192]
---
Predecessors: [0x72]
Successors: [0x193, 0x194]
---
0x18c JUMPDEST
0x18d CALLVALUE
0x18e ISZERO
0x18f PUSH2 0x194
0x192 JUMPI
---
0x18c: JUMPDEST 
0x18d: V140 = CALLVALUE
0x18e: V141 = ISZERO V140
0x18f: V142 = 0x194
0x192: JUMPI 0x194 V141
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x193
[0x193:0x193]
---
Predecessors: [0x18c]
Successors: []
---
0x193 INVALID
---
0x193: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x194
[0x194:0x1a7]
---
Predecessors: [0x18c]
Successors: [0x41b]
---
0x194 JUMPDEST
0x195 PUSH2 0x9a
0x198 PUSH1 0x1
0x19a PUSH1 0xa0
0x19c PUSH1 0x2
0x19e EXP
0x19f SUB
0x1a0 PUSH1 0x4
0x1a2 CALLDATALOAD
0x1a3 AND
0x1a4 PUSH2 0x41b
0x1a7 JUMP
---
0x194: JUMPDEST 
0x195: V143 = 0x9a
0x198: V144 = 0x1
0x19a: V145 = 0xa0
0x19c: V146 = 0x2
0x19e: V147 = EXP 0x2 0xa0
0x19f: V148 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a0: V149 = 0x4
0x1a2: V150 = CALLDATALOAD 0x4
0x1a3: V151 = AND V150 0xffffffffffffffffffffffffffffffffffffffff
0x1a4: V152 = 0x41b
0x1a7: JUMP 0x41b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x9a, V151]
Exit stack: [V12, 0x9a, V151]

================================

Block 0x1a8
[0x1a8:0x1a9]
---
Predecessors: []
Successors: []
---
0x1a8 JUMPDEST
0x1a9 STOP
---
0x1a8: JUMPDEST 
0x1a9: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1aa
[0x1aa:0x1b0]
---
Predecessors: [0x7d]
Successors: [0x1b1, 0x1b2]
---
0x1aa JUMPDEST
0x1ab CALLVALUE
0x1ac ISZERO
0x1ad PUSH2 0x1b2
0x1b0 JUMPI
---
0x1aa: JUMPDEST 
0x1ab: V153 = CALLVALUE
0x1ac: V154 = ISZERO V153
0x1ad: V155 = 0x1b2
0x1b0: JUMPI 0x1b2 V154
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b1
[0x1b1:0x1b1]
---
Predecessors: [0x1aa]
Successors: []
---
0x1b1 INVALID
---
0x1b1: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b2
[0x1b2:0x1c5]
---
Predecessors: [0x1aa]
Successors: [0x467]
---
0x1b2 JUMPDEST
0x1b3 PUSH2 0x9a
0x1b6 PUSH1 0x1
0x1b8 PUSH1 0xa0
0x1ba PUSH1 0x2
0x1bc EXP
0x1bd SUB
0x1be PUSH1 0x4
0x1c0 CALLDATALOAD
0x1c1 AND
0x1c2 PUSH2 0x467
0x1c5 JUMP
---
0x1b2: JUMPDEST 
0x1b3: V156 = 0x9a
0x1b6: V157 = 0x1
0x1b8: V158 = 0xa0
0x1ba: V159 = 0x2
0x1bc: V160 = EXP 0x2 0xa0
0x1bd: V161 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1be: V162 = 0x4
0x1c0: V163 = CALLDATALOAD 0x4
0x1c1: V164 = AND V163 0xffffffffffffffffffffffffffffffffffffffff
0x1c2: V165 = 0x467
0x1c5: JUMP 0x467
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x9a, V164]
Exit stack: [V12, 0x9a, V164]

================================

Block 0x1c6
[0x1c6:0x1c7]
---
Predecessors: []
Successors: []
---
0x1c6 JUMPDEST
0x1c7 STOP
---
0x1c6: JUMPDEST 
0x1c7: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1c8
[0x1c8:0x1de]
---
Predecessors: [0x92]
Successors: [0x1df, 0x1e4]
---
0x1c8 JUMPDEST
0x1c9 PUSH1 0x0
0x1cb SLOAD
0x1cc CALLER
0x1cd PUSH1 0x1
0x1cf PUSH1 0xa0
0x1d1 PUSH1 0x2
0x1d3 EXP
0x1d4 SUB
0x1d5 SWAP1
0x1d6 DUP2
0x1d7 AND
0x1d8 SWAP2
0x1d9 AND
0x1da EQ
0x1db PUSH2 0x1e4
0x1de JUMPI
---
0x1c8: JUMPDEST 
0x1c9: V166 = 0x0
0x1cb: V167 = S[0x0]
0x1cc: V168 = CALLER
0x1cd: V169 = 0x1
0x1cf: V170 = 0xa0
0x1d1: V171 = 0x2
0x1d3: V172 = EXP 0x2 0xa0
0x1d4: V173 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d7: V174 = AND 0xffffffffffffffffffffffffffffffffffffffff V168
0x1d9: V175 = AND V167 0xffffffffffffffffffffffffffffffffffffffff
0x1da: V176 = EQ V175 V174
0x1db: V177 = 0x1e4
0x1de: JUMPI 0x1e4 V176
---
Entry stack: [V12, 0x9a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a]

================================

Block 0x1df
[0x1df:0x1e3]
---
Predecessors: [0x1c8]
Successors: []
---
0x1df PUSH1 0x0
0x1e1 PUSH1 0x0
0x1e3 REVERT
---
0x1df: V178 = 0x0
0x1e1: V179 = 0x0
0x1e3: REVERT 0x0 0x0
---
Entry stack: [V12, 0x9a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a]

================================

Block 0x1e4
[0x1e4:0x1f6]
---
Predecessors: [0x1c8]
Successors: [0x1f7, 0x1fc]
---
0x1e4 JUMPDEST
0x1e5 PUSH1 0x0
0x1e7 SLOAD
0x1e8 PUSH1 0xa0
0x1ea PUSH1 0x2
0x1ec EXP
0x1ed SWAP1
0x1ee DIV
0x1ef PUSH1 0xff
0x1f1 AND
0x1f2 ISZERO
0x1f3 PUSH2 0x1fc
0x1f6 JUMPI
---
0x1e4: JUMPDEST 
0x1e5: V180 = 0x0
0x1e7: V181 = S[0x0]
0x1e8: V182 = 0xa0
0x1ea: V183 = 0x2
0x1ec: V184 = EXP 0x2 0xa0
0x1ee: V185 = DIV V181 0x10000000000000000000000000000000000000000
0x1ef: V186 = 0xff
0x1f1: V187 = AND 0xff V185
0x1f2: V188 = ISZERO V187
0x1f3: V189 = 0x1fc
0x1f6: JUMPI 0x1fc V188
---
Entry stack: [V12, 0x9a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a]

================================

Block 0x1f7
[0x1f7:0x1fb]
---
Predecessors: [0x1e4]
Successors: []
---
0x1f7 PUSH1 0x0
0x1f9 PUSH1 0x0
0x1fb REVERT
---
0x1f7: V190 = 0x0
0x1f9: V191 = 0x0
0x1fb: REVERT 0x0 0x0
---
Entry stack: [V12, 0x9a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a]

================================

Block 0x1fc
[0x1fc:0x230]
---
Predecessors: [0x1e4]
Successors: [0x231, 0x232]
---
0x1fc JUMPDEST
0x1fd PUSH1 0x0
0x1ff DUP1
0x200 SLOAD
0x201 PUSH1 0x40
0x203 MLOAD
0x204 PUSH1 0x1
0x206 PUSH1 0xa0
0x208 PUSH1 0x2
0x20a EXP
0x20b SUB
0x20c SWAP2
0x20d DUP3
0x20e AND
0x20f SWAP3
0x210 ADDRESS
0x211 SWAP1
0x212 SWAP3
0x213 AND
0x214 BALANCE
0x215 DUP1
0x216 ISZERO
0x217 PUSH2 0x8fc
0x21a MUL
0x21b SWAP3
0x21c SWAP1
0x21d SWAP2
0x21e SWAP1
0x21f DUP2
0x220 DUP2
0x221 DUP2
0x222 DUP6
0x223 DUP9
0x224 DUP9
0x225 CALL
0x226 SWAP4
0x227 POP
0x228 POP
0x229 POP
0x22a POP
0x22b ISZERO
0x22c ISZERO
0x22d PUSH2 0x232
0x230 JUMPI
---
0x1fc: JUMPDEST 
0x1fd: V192 = 0x0
0x200: V193 = S[0x0]
0x201: V194 = 0x40
0x203: V195 = M[0x40]
0x204: V196 = 0x1
0x206: V197 = 0xa0
0x208: V198 = 0x2
0x20a: V199 = EXP 0x2 0xa0
0x20b: V200 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20e: V201 = AND 0xffffffffffffffffffffffffffffffffffffffff V193
0x210: V202 = ADDRESS
0x213: V203 = AND 0xffffffffffffffffffffffffffffffffffffffff V202
0x214: V204 = BALANCE V203
0x216: V205 = ISZERO V204
0x217: V206 = 0x8fc
0x21a: V207 = MUL 0x8fc V205
0x225: V208 = CALL V207 V201 V204 V195 0x0 V195 0x0
0x22b: V209 = ISZERO V208
0x22c: V210 = ISZERO V209
0x22d: V211 = 0x232
0x230: JUMPI 0x232 V210
---
Entry stack: [V12, 0x9a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a]

================================

Block 0x231
[0x231:0x231]
---
Predecessors: [0x1fc]
Successors: []
---
0x231 INVALID
---
0x231: INVALID 
---
Entry stack: [V12, 0x9a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a]

================================

Block 0x232
[0x232:0x232]
---
Predecessors: [0x1fc]
Successors: [0x233]
---
0x232 JUMPDEST
---
0x232: JUMPDEST 
---
Entry stack: [V12, 0x9a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a]

================================

Block 0x233
[0x233:0x233]
---
Predecessors: [0x232]
Successors: [0x234]
---
0x233 JUMPDEST
---
0x233: JUMPDEST 
---
Entry stack: [V12, 0x9a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a]

================================

Block 0x234
[0x234:0x234]
---
Predecessors: [0x233]
Successors: [0x235]
---
0x234 JUMPDEST
---
0x234: JUMPDEST 
---
Entry stack: [V12, 0x9a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a]

================================

Block 0x235
[0x235:0x236]
---
Predecessors: [0x234]
Successors: [0x9a]
---
0x235 JUMPDEST
0x236 JUMP
---
0x235: JUMPDEST 
0x236: JUMP 0x9a
---
Entry stack: [V12, 0x9a]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x237
[0x237:0x24e]
---
Predecessors: [0xa4]
Successors: [0x24f, 0x254]
---
0x237 JUMPDEST
0x238 PUSH1 0x0
0x23a DUP1
0x23b SLOAD
0x23c CALLER
0x23d PUSH1 0x1
0x23f PUSH1 0xa0
0x241 PUSH1 0x2
0x243 EXP
0x244 SUB
0x245 SWAP1
0x246 DUP2
0x247 AND
0x248 SWAP2
0x249 AND
0x24a EQ
0x24b PUSH2 0x254
0x24e JUMPI
---
0x237: JUMPDEST 
0x238: V212 = 0x0
0x23b: V213 = S[0x0]
0x23c: V214 = CALLER
0x23d: V215 = 0x1
0x23f: V216 = 0xa0
0x241: V217 = 0x2
0x243: V218 = EXP 0x2 0xa0
0x244: V219 = SUB 0x10000000000000000000000000000000000000000 0x1
0x247: V220 = AND 0xffffffffffffffffffffffffffffffffffffffff V214
0x249: V221 = AND V213 0xffffffffffffffffffffffffffffffffffffffff
0x24a: V222 = EQ V221 V220
0x24b: V223 = 0x254
0x24e: JUMPI 0x254 V222
---
Entry stack: [V12, 0xac]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0xac, 0x0]

================================

Block 0x24f
[0x24f:0x253]
---
Predecessors: [0x237]
Successors: []
---
0x24f PUSH1 0x0
0x251 PUSH1 0x0
0x253 REVERT
---
0x24f: V224 = 0x0
0x251: V225 = 0x0
0x253: REVERT 0x0 0x0
---
Entry stack: [V12, 0xac, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xac, 0x0]

================================

Block 0x254
[0x254:0x267]
---
Predecessors: [0x237]
Successors: [0x268, 0x26d]
---
0x254 JUMPDEST
0x255 PUSH1 0x0
0x257 SLOAD
0x258 PUSH1 0xa0
0x25a PUSH1 0x2
0x25c EXP
0x25d SWAP1
0x25e DIV
0x25f PUSH1 0xff
0x261 AND
0x262 ISZERO
0x263 ISZERO
0x264 PUSH2 0x26d
0x267 JUMPI
---
0x254: JUMPDEST 
0x255: V226 = 0x0
0x257: V227 = S[0x0]
0x258: V228 = 0xa0
0x25a: V229 = 0x2
0x25c: V230 = EXP 0x2 0xa0
0x25e: V231 = DIV V227 0x10000000000000000000000000000000000000000
0x25f: V232 = 0xff
0x261: V233 = AND 0xff V231
0x262: V234 = ISZERO V233
0x263: V235 = ISZERO V234
0x264: V236 = 0x26d
0x267: JUMPI 0x26d V235
---
Entry stack: [V12, 0xac, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xac, 0x0]

================================

Block 0x268
[0x268:0x26c]
---
Predecessors: [0x254]
Successors: []
---
0x268 PUSH1 0x0
0x26a PUSH1 0x0
0x26c REVERT
---
0x268: V237 = 0x0
0x26a: V238 = 0x0
0x26c: REVERT 0x0 0x0
---
Entry stack: [V12, 0xac, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xac, 0x0]

================================

Block 0x26d
[0x26d:0x2a7]
---
Predecessors: [0x254]
Successors: [0x2a8]
---
0x26d JUMPDEST
0x26e PUSH1 0x0
0x270 DUP1
0x271 SLOAD
0x272 PUSH1 0xa0
0x274 PUSH1 0x2
0x276 EXP
0x277 PUSH1 0xff
0x279 MUL
0x27a NOT
0x27b AND
0x27c DUP2
0x27d SSTORE
0x27e PUSH1 0x40
0x280 MLOAD
0x281 PUSH32 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
0x2a2 SWAP2
0x2a3 SWAP1
0x2a4 LOG1
0x2a5 POP
0x2a6 PUSH1 0x1
---
0x26d: JUMPDEST 
0x26e: V239 = 0x0
0x271: V240 = S[0x0]
0x272: V241 = 0xa0
0x274: V242 = 0x2
0x276: V243 = EXP 0x2 0xa0
0x277: V244 = 0xff
0x279: V245 = MUL 0xff 0x10000000000000000000000000000000000000000
0x27a: V246 = NOT 0xff0000000000000000000000000000000000000000
0x27b: V247 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V240
0x27d: S[0x0] = V247
0x27e: V248 = 0x40
0x280: V249 = M[0x40]
0x281: V250 = 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
0x2a4: LOG V249 0x0 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
0x2a6: V251 = 0x1
---
Entry stack: [V12, 0xac, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V12, 0xac, 0x1]

================================

Block 0x2a8
[0x2a8:0x2a8]
---
Predecessors: [0x26d]
Successors: [0x2a9]
---
0x2a8 JUMPDEST
---
0x2a8: JUMPDEST 
---
Entry stack: [V12, 0xac, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xac, 0x1]

================================

Block 0x2a9
[0x2a9:0x2a9]
---
Predecessors: [0x2a8]
Successors: [0x2aa]
---
0x2a9 JUMPDEST
---
0x2a9: JUMPDEST 
---
Entry stack: [V12, 0xac, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xac, 0x1]

================================

Block 0x2aa
[0x2aa:0x2ac]
---
Predecessors: [0x2a9]
Successors: [0xac]
---
0x2aa JUMPDEST
0x2ab SWAP1
0x2ac JUMP
---
0x2aa: JUMPDEST 
0x2ac: JUMP 0xac
---
Entry stack: [V12, 0xac, 0x1]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x1]

================================

Block 0x2ad
[0x2ad:0x2bf]
---
Predecessors: [0xc0]
Successors: [0x2c0, 0x2c5]
---
0x2ad JUMPDEST
0x2ae PUSH1 0x0
0x2b0 SLOAD
0x2b1 PUSH1 0xa0
0x2b3 PUSH1 0x2
0x2b5 EXP
0x2b6 SWAP1
0x2b7 DIV
0x2b8 PUSH1 0xff
0x2ba AND
0x2bb ISZERO
0x2bc PUSH2 0x2c5
0x2bf JUMPI
---
0x2ad: JUMPDEST 
0x2ae: V252 = 0x0
0x2b0: V253 = S[0x0]
0x2b1: V254 = 0xa0
0x2b3: V255 = 0x2
0x2b5: V256 = EXP 0x2 0xa0
0x2b7: V257 = DIV V253 0x10000000000000000000000000000000000000000
0x2b8: V258 = 0xff
0x2ba: V259 = AND 0xff V257
0x2bb: V260 = ISZERO V259
0x2bc: V261 = 0x2c5
0x2bf: JUMPI 0x2c5 V260
---
Entry stack: [V12, 0x9a, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V70]

================================

Block 0x2c0
[0x2c0:0x2c4]
---
Predecessors: [0x2ad]
Successors: []
---
0x2c0 PUSH1 0x0
0x2c2 PUSH1 0x0
0x2c4 REVERT
---
0x2c0: V262 = 0x0
0x2c2: V263 = 0x0
0x2c4: REVERT 0x0 0x0
---
Entry stack: [V12, 0x9a, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V70]

================================

Block 0x2c5
[0x2c5:0x2d6]
---
Predecessors: [0x2ad]
Successors: [0x2d7, 0x2dc]
---
0x2c5 JUMPDEST
0x2c6 PUSH1 0x1
0x2c8 PUSH1 0xb0
0x2ca PUSH1 0x2
0x2cc EXP
0x2cd SUB
0x2ce NOT
0x2cf DUP2
0x2d0 AND
0x2d1 ISZERO
0x2d2 ISZERO
0x2d3 PUSH2 0x2dc
0x2d6 JUMPI
---
0x2c5: JUMPDEST 
0x2c6: V264 = 0x1
0x2c8: V265 = 0xb0
0x2ca: V266 = 0x2
0x2cc: V267 = EXP 0x2 0xb0
0x2cd: V268 = SUB 0x100000000000000000000000000000000000000000000 0x1
0x2ce: V269 = NOT 0xffffffffffffffffffffffffffffffffffffffffffff
0x2d0: V270 = AND V70 0xffffffffffffffffffff00000000000000000000000000000000000000000000
0x2d1: V271 = ISZERO V270
0x2d2: V272 = ISZERO V271
0x2d3: V273 = 0x2dc
0x2d6: JUMPI 0x2dc V272
---
Entry stack: [V12, 0x9a, V70]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x9a, V70]

================================

Block 0x2d7
[0x2d7:0x2db]
---
Predecessors: [0x2c5]
Successors: []
---
0x2d7 PUSH1 0x0
0x2d9 PUSH1 0x0
0x2db REVERT
---
0x2d7: V274 = 0x0
0x2d9: V275 = 0x0
0x2db: REVERT 0x0 0x0
---
Entry stack: [V12, 0x9a, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V70]

================================

Block 0x2dc
[0x2dc:0x33d]
---
Predecessors: [0x2c5]
Successors: [0x33e]
---
0x2dc JUMPDEST
0x2dd PUSH1 0x1
0x2df PUSH1 0xb0
0x2e1 PUSH1 0x2
0x2e3 EXP
0x2e4 SUB
0x2e5 NOT
0x2e6 DUP2
0x2e7 AND
0x2e8 PUSH1 0x0
0x2ea DUP2
0x2eb DUP2
0x2ec MSTORE
0x2ed PUSH1 0x1
0x2ef PUSH1 0x20
0x2f1 SWAP1
0x2f2 DUP2
0x2f3 MSTORE
0x2f4 PUSH1 0x40
0x2f6 SWAP2
0x2f7 DUP3
0x2f8 SWAP1
0x2f9 SHA3
0x2fa DUP1
0x2fb SLOAD
0x2fc CALLVALUE
0x2fd SWAP1
0x2fe DUP2
0x2ff ADD
0x300 SWAP1
0x301 SWAP2
0x302 SSTORE
0x303 DUP3
0x304 MLOAD
0x305 SWAP1
0x306 DUP2
0x307 MSTORE
0x308 SWAP2
0x309 MLOAD
0x30a PUSH1 0x1
0x30c PUSH1 0xa0
0x30e PUSH1 0x2
0x310 EXP
0x311 SUB
0x312 CALLER
0x313 AND
0x314 SWAP3
0x315 PUSH32 0xe1fdb0a50e742b6ef36889a8d1ce12bd3faa56c0b482869be8d0e46a3e12652f
0x336 SWAP3
0x337 SWAP1
0x338 DUP3
0x339 SWAP1
0x33a SUB
0x33b ADD
0x33c SWAP1
0x33d LOG3
---
0x2dc: JUMPDEST 
0x2dd: V276 = 0x1
0x2df: V277 = 0xb0
0x2e1: V278 = 0x2
0x2e3: V279 = EXP 0x2 0xb0
0x2e4: V280 = SUB 0x100000000000000000000000000000000000000000000 0x1
0x2e5: V281 = NOT 0xffffffffffffffffffffffffffffffffffffffffffff
0x2e7: V282 = AND V70 0xffffffffffffffffffff00000000000000000000000000000000000000000000
0x2e8: V283 = 0x0
0x2ec: M[0x0] = V282
0x2ed: V284 = 0x1
0x2ef: V285 = 0x20
0x2f3: M[0x20] = 0x1
0x2f4: V286 = 0x40
0x2f9: V287 = SHA3 0x0 0x40
0x2fb: V288 = S[V287]
0x2fc: V289 = CALLVALUE
0x2ff: V290 = ADD V289 V288
0x302: S[V287] = V290
0x304: V291 = M[0x40]
0x307: M[V291] = V289
0x309: V292 = M[0x40]
0x30a: V293 = 0x1
0x30c: V294 = 0xa0
0x30e: V295 = 0x2
0x310: V296 = EXP 0x2 0xa0
0x311: V297 = SUB 0x10000000000000000000000000000000000000000 0x1
0x312: V298 = CALLER
0x313: V299 = AND V298 0xffffffffffffffffffffffffffffffffffffffff
0x315: V300 = 0xe1fdb0a50e742b6ef36889a8d1ce12bd3faa56c0b482869be8d0e46a3e12652f
0x33a: V301 = SUB V291 V292
0x33b: V302 = ADD V301 0x20
0x33d: LOG V292 V302 0xe1fdb0a50e742b6ef36889a8d1ce12bd3faa56c0b482869be8d0e46a3e12652f V299 V282
---
Entry stack: [V12, 0x9a, V70]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x9a, V70]

================================

Block 0x33e
[0x33e:0x33e]
---
Predecessors: [0x2dc, 0x437]
Successors: [0x33f]
---
0x33e JUMPDEST
---
0x33e: JUMPDEST 
---
Entry stack: [V12, 0x9a, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, S0]

================================

Block 0x33f
[0x33f:0x341]
---
Predecessors: [0x33e]
Successors: [0x9a]
---
0x33f JUMPDEST
0x340 POP
0x341 JUMP
---
0x33f: JUMPDEST 
0x341: JUMP 0x9a
---
Entry stack: [V12, 0x9a, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x342
[0x342:0x351]
---
Predecessors: [0xdf]
Successors: [0xac]
---
0x342 JUMPDEST
0x343 PUSH1 0x0
0x345 SLOAD
0x346 PUSH1 0xa0
0x348 PUSH1 0x2
0x34a EXP
0x34b SWAP1
0x34c DIV
0x34d PUSH1 0xff
0x34f AND
0x350 DUP2
0x351 JUMP
---
0x342: JUMPDEST 
0x343: V303 = 0x0
0x345: V304 = S[0x0]
0x346: V305 = 0xa0
0x348: V306 = 0x2
0x34a: V307 = EXP 0x2 0xa0
0x34c: V308 = DIV V304 0x10000000000000000000000000000000000000000
0x34d: V309 = 0xff
0x34f: V310 = AND 0xff V308
0x351: JUMP 0xac
---
Entry stack: [V12, 0xac]
Stack pops: 1
Stack additions: [S0, V310]
Exit stack: [V12, 0xac, V310]

================================

Block 0x352
[0x352:0x368]
---
Predecessors: [0x103]
Successors: [0x369, 0x36e]
---
0x352 JUMPDEST
0x353 PUSH1 0x0
0x355 SLOAD
0x356 CALLER
0x357 PUSH1 0x1
0x359 PUSH1 0xa0
0x35b PUSH1 0x2
0x35d EXP
0x35e SUB
0x35f SWAP1
0x360 DUP2
0x361 AND
0x362 SWAP2
0x363 AND
0x364 EQ
0x365 PUSH2 0x36e
0x368 JUMPI
---
0x352: JUMPDEST 
0x353: V311 = 0x0
0x355: V312 = S[0x0]
0x356: V313 = CALLER
0x357: V314 = 0x1
0x359: V315 = 0xa0
0x35b: V316 = 0x2
0x35d: V317 = EXP 0x2 0xa0
0x35e: V318 = SUB 0x10000000000000000000000000000000000000000 0x1
0x361: V319 = AND 0xffffffffffffffffffffffffffffffffffffffff V313
0x363: V320 = AND V312 0xffffffffffffffffffffffffffffffffffffffff
0x364: V321 = EQ V320 V319
0x365: V322 = 0x36e
0x368: JUMPI 0x36e V321
---
Entry stack: [V12, 0x9a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a]

================================

Block 0x369
[0x369:0x36d]
---
Predecessors: [0x352]
Successors: []
---
0x369 PUSH1 0x0
0x36b PUSH1 0x0
0x36d REVERT
---
0x369: V323 = 0x0
0x36b: V324 = 0x0
0x36d: REVERT 0x0 0x0
---
Entry stack: [V12, 0x9a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a]

================================

Block 0x36e
[0x36e:0x37b]
---
Predecessors: [0x352]
Successors: []
---
0x36e JUMPDEST
0x36f PUSH1 0x0
0x371 SLOAD
0x372 PUSH1 0x1
0x374 PUSH1 0xa0
0x376 PUSH1 0x2
0x378 EXP
0x379 SUB
0x37a AND
0x37b SELFDESTRUCT
---
0x36e: JUMPDEST 
0x36f: V325 = 0x0
0x371: V326 = S[0x0]
0x372: V327 = 0x1
0x374: V328 = 0xa0
0x376: V329 = 0x2
0x378: V330 = EXP 0x2 0xa0
0x379: V331 = SUB 0x10000000000000000000000000000000000000000 0x1
0x37a: V332 = AND 0xffffffffffffffffffffffffffffffffffffffff V326
0x37b: SELFDESTRUCT V332
---
Entry stack: [V12, 0x9a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a]

================================

Block 0x37c
[0x37c:0x37c]
---
Predecessors: []
Successors: [0x37d]
---
0x37c JUMPDEST
---
0x37c: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x37d
[0x37d:0x37e]
---
Predecessors: [0x37c]
Successors: []
Has unresolved jump.
---
0x37d JUMPDEST
0x37e JUMP
---
0x37d: JUMPDEST 
0x37e: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x37f
[0x37f:0x396]
---
Predecessors: [0x115]
Successors: [0x397, 0x39c]
---
0x37f JUMPDEST
0x380 PUSH1 0x0
0x382 DUP1
0x383 SLOAD
0x384 CALLER
0x385 PUSH1 0x1
0x387 PUSH1 0xa0
0x389 PUSH1 0x2
0x38b EXP
0x38c SUB
0x38d SWAP1
0x38e DUP2
0x38f AND
0x390 SWAP2
0x391 AND
0x392 EQ
0x393 PUSH2 0x39c
0x396 JUMPI
---
0x37f: JUMPDEST 
0x380: V333 = 0x0
0x383: V334 = S[0x0]
0x384: V335 = CALLER
0x385: V336 = 0x1
0x387: V337 = 0xa0
0x389: V338 = 0x2
0x38b: V339 = EXP 0x2 0xa0
0x38c: V340 = SUB 0x10000000000000000000000000000000000000000 0x1
0x38f: V341 = AND 0xffffffffffffffffffffffffffffffffffffffff V335
0x391: V342 = AND V334 0xffffffffffffffffffffffffffffffffffffffff
0x392: V343 = EQ V342 V341
0x393: V344 = 0x39c
0x396: JUMPI 0x39c V343
---
Entry stack: [V12, 0xac]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0xac, 0x0]

================================

Block 0x397
[0x397:0x39b]
---
Predecessors: [0x37f]
Successors: []
---
0x397 PUSH1 0x0
0x399 PUSH1 0x0
0x39b REVERT
---
0x397: V345 = 0x0
0x399: V346 = 0x0
0x39b: REVERT 0x0 0x0
---
Entry stack: [V12, 0xac, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xac, 0x0]

================================

Block 0x39c
[0x39c:0x3ae]
---
Predecessors: [0x37f]
Successors: [0x3af, 0x3b4]
---
0x39c JUMPDEST
0x39d PUSH1 0x0
0x39f SLOAD
0x3a0 PUSH1 0xa0
0x3a2 PUSH1 0x2
0x3a4 EXP
0x3a5 SWAP1
0x3a6 DIV
0x3a7 PUSH1 0xff
0x3a9 AND
0x3aa ISZERO
0x3ab PUSH2 0x3b4
0x3ae JUMPI
---
0x39c: JUMPDEST 
0x39d: V347 = 0x0
0x39f: V348 = S[0x0]
0x3a0: V349 = 0xa0
0x3a2: V350 = 0x2
0x3a4: V351 = EXP 0x2 0xa0
0x3a6: V352 = DIV V348 0x10000000000000000000000000000000000000000
0x3a7: V353 = 0xff
0x3a9: V354 = AND 0xff V352
0x3aa: V355 = ISZERO V354
0x3ab: V356 = 0x3b4
0x3ae: JUMPI 0x3b4 V355
---
Entry stack: [V12, 0xac, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xac, 0x0]

================================

Block 0x3af
[0x3af:0x3b3]
---
Predecessors: [0x39c]
Successors: []
---
0x3af PUSH1 0x0
0x3b1 PUSH1 0x0
0x3b3 REVERT
---
0x3af: V357 = 0x0
0x3b1: V358 = 0x0
0x3b3: REVERT 0x0 0x0
---
Entry stack: [V12, 0xac, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xac, 0x0]

================================

Block 0x3b4
[0x3b4:0x3f4]
---
Predecessors: [0x39c]
Successors: [0x3f5]
---
0x3b4 JUMPDEST
0x3b5 PUSH1 0x0
0x3b7 DUP1
0x3b8 SLOAD
0x3b9 PUSH1 0xa0
0x3bb PUSH1 0x2
0x3bd EXP
0x3be PUSH1 0xff
0x3c0 MUL
0x3c1 NOT
0x3c2 AND
0x3c3 PUSH1 0xa0
0x3c5 PUSH1 0x2
0x3c7 EXP
0x3c8 OR
0x3c9 DUP2
0x3ca SSTORE
0x3cb PUSH1 0x40
0x3cd MLOAD
0x3ce PUSH32 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
0x3ef SWAP2
0x3f0 SWAP1
0x3f1 LOG1
0x3f2 POP
0x3f3 PUSH1 0x1
---
0x3b4: JUMPDEST 
0x3b5: V359 = 0x0
0x3b8: V360 = S[0x0]
0x3b9: V361 = 0xa0
0x3bb: V362 = 0x2
0x3bd: V363 = EXP 0x2 0xa0
0x3be: V364 = 0xff
0x3c0: V365 = MUL 0xff 0x10000000000000000000000000000000000000000
0x3c1: V366 = NOT 0xff0000000000000000000000000000000000000000
0x3c2: V367 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V360
0x3c3: V368 = 0xa0
0x3c5: V369 = 0x2
0x3c7: V370 = EXP 0x2 0xa0
0x3c8: V371 = OR 0x10000000000000000000000000000000000000000 V367
0x3ca: S[0x0] = V371
0x3cb: V372 = 0x40
0x3cd: V373 = M[0x40]
0x3ce: V374 = 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
0x3f1: LOG V373 0x0 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
0x3f3: V375 = 0x1
---
Entry stack: [V12, 0xac, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V12, 0xac, 0x1]

================================

Block 0x3f5
[0x3f5:0x3f5]
---
Predecessors: [0x3b4]
Successors: [0x3f6]
---
0x3f5 JUMPDEST
---
0x3f5: JUMPDEST 
---
Entry stack: [V12, 0xac, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xac, 0x1]

================================

Block 0x3f6
[0x3f6:0x3f6]
---
Predecessors: [0x3f5]
Successors: [0x3f7]
---
0x3f6 JUMPDEST
---
0x3f6: JUMPDEST 
---
Entry stack: [V12, 0xac, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xac, 0x1]

================================

Block 0x3f7
[0x3f7:0x3f9]
---
Predecessors: [0x3f6]
Successors: [0xac]
---
0x3f7 JUMPDEST
0x3f8 SWAP1
0x3f9 JUMP
---
0x3f7: JUMPDEST 
0x3f9: JUMP 0xac
---
Entry stack: [V12, 0xac, 0x1]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x1]

================================

Block 0x3fa
[0x3fa:0x408]
---
Predecessors: [0x139]
Successors: [0x141]
---
0x3fa JUMPDEST
0x3fb PUSH1 0x0
0x3fd SLOAD
0x3fe PUSH1 0x1
0x400 PUSH1 0xa0
0x402 PUSH1 0x2
0x404 EXP
0x405 SUB
0x406 AND
0x407 DUP2
0x408 JUMP
---
0x3fa: JUMPDEST 
0x3fb: V376 = 0x0
0x3fd: V377 = S[0x0]
0x3fe: V378 = 0x1
0x400: V379 = 0xa0
0x402: V380 = 0x2
0x404: V381 = EXP 0x2 0xa0
0x405: V382 = SUB 0x10000000000000000000000000000000000000000 0x1
0x406: V383 = AND 0xffffffffffffffffffffffffffffffffffffffff V377
0x408: JUMP 0x141
---
Entry stack: [V12, 0x141]
Stack pops: 1
Stack additions: [S0, V383]
Exit stack: [V12, 0x141, V383]

================================

Block 0x409
[0x409:0x41a]
---
Predecessors: [0x165]
Successors: [0x17a]
---
0x409 JUMPDEST
0x40a PUSH1 0x1
0x40c PUSH1 0x20
0x40e MSTORE
0x40f PUSH1 0x0
0x411 SWAP1
0x412 DUP2
0x413 MSTORE
0x414 PUSH1 0x40
0x416 SWAP1
0x417 SHA3
0x418 SLOAD
0x419 DUP2
0x41a JUMP
---
0x409: JUMPDEST 
0x40a: V384 = 0x1
0x40c: V385 = 0x20
0x40e: M[0x20] = 0x1
0x40f: V386 = 0x0
0x413: M[0x0] = V132
0x414: V387 = 0x40
0x417: V388 = SHA3 0x0 0x40
0x418: V389 = S[V388]
0x41a: JUMP 0x17a
---
Entry stack: [V12, 0x17a, V132]
Stack pops: 2
Stack additions: [S1, V389]
Exit stack: [V12, 0x17a, V389]

================================

Block 0x41b
[0x41b:0x431]
---
Predecessors: [0x194]
Successors: [0x432, 0x437]
---
0x41b JUMPDEST
0x41c PUSH1 0x0
0x41e SLOAD
0x41f CALLER
0x420 PUSH1 0x1
0x422 PUSH1 0xa0
0x424 PUSH1 0x2
0x426 EXP
0x427 SUB
0x428 SWAP1
0x429 DUP2
0x42a AND
0x42b SWAP2
0x42c AND
0x42d EQ
0x42e PUSH2 0x437
0x431 JUMPI
---
0x41b: JUMPDEST 
0x41c: V390 = 0x0
0x41e: V391 = S[0x0]
0x41f: V392 = CALLER
0x420: V393 = 0x1
0x422: V394 = 0xa0
0x424: V395 = 0x2
0x426: V396 = EXP 0x2 0xa0
0x427: V397 = SUB 0x10000000000000000000000000000000000000000 0x1
0x42a: V398 = AND 0xffffffffffffffffffffffffffffffffffffffff V392
0x42c: V399 = AND V391 0xffffffffffffffffffffffffffffffffffffffff
0x42d: V400 = EQ V399 V398
0x42e: V401 = 0x437
0x431: JUMPI 0x437 V400
---
Entry stack: [V12, 0x9a, V151]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V151]

================================

Block 0x432
[0x432:0x436]
---
Predecessors: [0x41b]
Successors: []
---
0x432 PUSH1 0x0
0x434 PUSH1 0x0
0x436 REVERT
---
0x432: V402 = 0x0
0x434: V403 = 0x0
0x436: REVERT 0x0 0x0
---
Entry stack: [V12, 0x9a, V151]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V151]

================================

Block 0x437
[0x437:0x446]
---
Predecessors: [0x41b]
Successors: [0x33e, 0x447]
---
0x437 JUMPDEST
0x438 PUSH1 0x1
0x43a PUSH1 0xa0
0x43c PUSH1 0x2
0x43e EXP
0x43f SUB
0x440 DUP2
0x441 AND
0x442 ISZERO
0x443 PUSH2 0x33e
0x446 JUMPI
---
0x437: JUMPDEST 
0x438: V404 = 0x1
0x43a: V405 = 0xa0
0x43c: V406 = 0x2
0x43e: V407 = EXP 0x2 0xa0
0x43f: V408 = SUB 0x10000000000000000000000000000000000000000 0x1
0x441: V409 = AND V151 0xffffffffffffffffffffffffffffffffffffffff
0x442: V410 = ISZERO V409
0x443: V411 = 0x33e
0x446: JUMPI 0x33e V410
---
Entry stack: [V12, 0x9a, V151]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x9a, V151]

================================

Block 0x447
[0x447:0x461]
---
Predecessors: [0x437]
Successors: [0x462]
---
0x447 PUSH1 0x0
0x449 DUP1
0x44a SLOAD
0x44b PUSH1 0x1
0x44d PUSH1 0xa0
0x44f PUSH1 0x2
0x451 EXP
0x452 SUB
0x453 NOT
0x454 AND
0x455 PUSH1 0x1
0x457 PUSH1 0xa0
0x459 PUSH1 0x2
0x45b EXP
0x45c SUB
0x45d DUP4
0x45e AND
0x45f OR
0x460 SWAP1
0x461 SSTORE
---
0x447: V412 = 0x0
0x44a: V413 = S[0x0]
0x44b: V414 = 0x1
0x44d: V415 = 0xa0
0x44f: V416 = 0x2
0x451: V417 = EXP 0x2 0xa0
0x452: V418 = SUB 0x10000000000000000000000000000000000000000 0x1
0x453: V419 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x454: V420 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V413
0x455: V421 = 0x1
0x457: V422 = 0xa0
0x459: V423 = 0x2
0x45b: V424 = EXP 0x2 0xa0
0x45c: V425 = SUB 0x10000000000000000000000000000000000000000 0x1
0x45e: V426 = AND V151 0xffffffffffffffffffffffffffffffffffffffff
0x45f: V427 = OR V426 V420
0x461: S[0x0] = V427
---
Entry stack: [V12, 0x9a, V151]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x9a, V151]

================================

Block 0x462
[0x462:0x462]
---
Predecessors: [0x447]
Successors: [0x463]
---
0x462 JUMPDEST
---
0x462: JUMPDEST 
---
Entry stack: [V12, 0x9a, V151]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V151]

================================

Block 0x463
[0x463:0x463]
---
Predecessors: [0x462]
Successors: [0x464]
---
0x463 JUMPDEST
---
0x463: JUMPDEST 
---
Entry stack: [V12, 0x9a, V151]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V151]

================================

Block 0x464
[0x464:0x466]
---
Predecessors: [0x463]
Successors: [0x9a]
---
0x464 JUMPDEST
0x465 POP
0x466 JUMP
---
0x464: JUMPDEST 
0x466: JUMP 0x9a
---
Entry stack: [V12, 0x9a, V151]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x467
[0x467:0x47d]
---
Predecessors: [0x1b2]
Successors: [0x47e, 0x483]
---
0x467 JUMPDEST
0x468 PUSH1 0x0
0x46a SLOAD
0x46b CALLER
0x46c PUSH1 0x1
0x46e PUSH1 0xa0
0x470 PUSH1 0x2
0x472 EXP
0x473 SUB
0x474 SWAP1
0x475 DUP2
0x476 AND
0x477 SWAP2
0x478 AND
0x479 EQ
0x47a PUSH2 0x483
0x47d JUMPI
---
0x467: JUMPDEST 
0x468: V428 = 0x0
0x46a: V429 = S[0x0]
0x46b: V430 = CALLER
0x46c: V431 = 0x1
0x46e: V432 = 0xa0
0x470: V433 = 0x2
0x472: V434 = EXP 0x2 0xa0
0x473: V435 = SUB 0x10000000000000000000000000000000000000000 0x1
0x476: V436 = AND 0xffffffffffffffffffffffffffffffffffffffff V430
0x478: V437 = AND V429 0xffffffffffffffffffffffffffffffffffffffff
0x479: V438 = EQ V437 V436
0x47a: V439 = 0x483
0x47d: JUMPI 0x483 V438
---
Entry stack: [V12, 0x9a, V164]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V164]

================================

Block 0x47e
[0x47e:0x482]
---
Predecessors: [0x467]
Successors: []
---
0x47e PUSH1 0x0
0x480 PUSH1 0x0
0x482 REVERT
---
0x47e: V440 = 0x0
0x480: V441 = 0x0
0x482: REVERT 0x0 0x0
---
Entry stack: [V12, 0x9a, V164]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x9a, V164]

================================

Block 0x483
[0x483:0x48e]
---
Predecessors: [0x467]
Successors: []
---
0x483 JUMPDEST
0x484 DUP1
0x485 PUSH1 0x1
0x487 PUSH1 0xa0
0x489 PUSH1 0x2
0x48b EXP
0x48c SUB
0x48d AND
0x48e SELFDESTRUCT
---
0x483: JUMPDEST 
0x485: V442 = 0x1
0x487: V443 = 0xa0
0x489: V444 = 0x2
0x48b: V445 = EXP 0x2 0xa0
0x48c: V446 = SUB 0x10000000000000000000000000000000000000000 0x1
0x48d: V447 = AND 0xffffffffffffffffffffffffffffffffffffffff V164
0x48e: SELFDESTRUCT V447
---
Entry stack: [V12, 0x9a, V164]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x9a, V164]

================================

Block 0x48f
[0x48f:0x48f]
---
Predecessors: []
Successors: [0x490]
---
0x48f JUMPDEST
---
0x48f: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x490
[0x490:0x4d7]
---
Predecessors: [0x48f]
Successors: []
---
0x490 JUMPDEST
0x491 POP
0x492 JUMP
0x493 STOP
0x494 LOG1
0x495 PUSH6 0x627a7a723058
0x49c SHA3
0x49d CALLDATACOPY
0x49e PUSH19 0x1bb3f7ab16c55b6357e8a6bae4a4cbbacfd0fa
0x4b2 MISSING 0xee
0x4b3 REVERT
0x4b4 MISSING 0xc2
0x4b5 MISSING 0xb5
0x4b6 GASLIMIT
0x4b7 MISSING 0xd4
0x4b8 EXTCODEHASH
0x4b9 DELEGATECALL
0x4ba ISZERO
0x4bb PUSH28 0xc40029
---
0x490: JUMPDEST 
0x492: JUMP S1
0x493: STOP 
0x494: LOG S0 S1 S2
0x495: V448 = 0x627a7a723058
0x49c: V449 = SHA3 0x627a7a723058 S3
0x49d: CALLDATACOPY V449 S4 S5
0x49e: V450 = 0x1bb3f7ab16c55b6357e8a6bae4a4cbbacfd0fa
0x4b2: MISSING 0xee
0x4b3: REVERT S0 S1
0x4b4: MISSING 0xc2
0x4b5: MISSING 0xb5
0x4b6: V451 = GASLIMIT
0x4b7: MISSING 0xd4
0x4b8: V452 = EXTCODEHASH S0
0x4b9: V453 = DELEGATECALL V452 S1 S2 S3 S4 S5
0x4ba: V454 = ISZERO V453
0x4bb: V455 = 0xc40029
---
Entry stack: []
Stack pops: 239
Stack additions: [0xc40029, V454]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0x8a
Exit block: 0x9a
Body: 0x8a, 0x91, 0x92, 0x9a, 0x1c8, 0x1df, 0x1e4, 0x1f7, 0x1fc, 0x231, 0x232, 0x233, 0x234, 0x235

Function 1:
Public function signature: 0x3f4ba83a
Entry block: 0x9c
Exit block: 0xac
Body: 0x9c, 0xa3, 0xa4, 0xac, 0x237, 0x24f, 0x254, 0x268, 0x26d, 0x2a8, 0x2a9, 0x2aa

Function 2:
Public function signature: 0x4fa51a39
Entry block: 0xc0
Exit block: 0x9a
Body: 0x9a, 0xc0, 0x2ad, 0x2c0, 0x2c5, 0x2d7, 0x2dc, 0x33e, 0x33f

Function 3:
Public function signature: 0x5c975abb
Entry block: 0xd7
Exit block: 0xac
Body: 0xac, 0xd7, 0xde, 0xdf, 0x342

Function 4:
Public function signature: 0x83197ef0
Entry block: 0xfb
Exit block: 0x36e
Body: 0xfb, 0x102, 0x103, 0x352, 0x369, 0x36e

Function 5:
Public function signature: 0x8456cb59
Entry block: 0x10d
Exit block: 0xac
Body: 0xac, 0x10d, 0x114, 0x115, 0x37f, 0x397, 0x39c, 0x3af, 0x3b4, 0x3f5, 0x3f6, 0x3f7

Function 6:
Public function signature: 0x8da5cb5b
Entry block: 0x131
Exit block: 0x141
Body: 0x131, 0x138, 0x139, 0x141, 0x3fa

Function 7:
Public function signature: 0xef9e5743
Entry block: 0x15d
Exit block: 0x17a
Body: 0x15d, 0x164, 0x165, 0x17a, 0x409

Function 8:
Public function signature: 0xf2fde38b
Entry block: 0x18c
Exit block: 0x9a
Body: 0x9a, 0x18c, 0x193, 0x194, 0x33e, 0x33f, 0x41b, 0x432, 0x437, 0x447, 0x462, 0x463, 0x464

Function 9:
Public function signature: 0xf5074f41
Entry block: 0x1aa
Exit block: 0x47e
Body: 0x1aa, 0x1b1, 0x1b2, 0x467, 0x47e, 0x483

Function 10:
Public fallback function
Entry block: 0x88
Exit block: 0x88
Body: 0x88

