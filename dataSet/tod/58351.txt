Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x81]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x81
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x81
0xa: JUMPI 0x81 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x99]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0xc08bf88
0x3a EQ
0x3b PUSH2 0x99
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0xc08bf88
0x3a: V12 = EQ 0xc08bf88 V10
0x3b: V13 = 0x99
0x3e: JUMPI 0x99 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0xae]
---
0x3f DUP1
0x40 PUSH4 0x4fa51a39
0x45 EQ
0x46 PUSH2 0xae
0x49 JUMPI
---
0x40: V14 = 0x4fa51a39
0x45: V15 = EQ 0x4fa51a39 V10
0x46: V16 = 0xae
0x49: JUMPI 0xae V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0xf7]
---
0x4a DUP1
0x4b PUSH4 0x6b9f96ea
0x50 EQ
0x51 PUSH2 0xf7
0x54 JUMPI
---
0x4b: V17 = 0x6b9f96ea
0x50: V18 = EQ 0x6b9f96ea V10
0x51: V19 = 0xf7
0x54: JUMPI 0xf7 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x124]
---
0x55 DUP1
0x56 PUSH4 0x8456cb59
0x5b EQ
0x5c PUSH2 0x124
0x5f JUMPI
---
0x56: V20 = 0x8456cb59
0x5b: V21 = EQ 0x8456cb59 V10
0x5c: V22 = 0x124
0x5f: JUMPI 0x124 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x139]
---
0x60 DUP1
0x61 PUSH4 0x8da5cb5b
0x66 EQ
0x67 PUSH2 0x139
0x6a JUMPI
---
0x61: V23 = 0x8da5cb5b
0x66: V24 = EQ 0x8da5cb5b V10
0x67: V25 = 0x139
0x6a: JUMPI 0x139 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x60]
Successors: [0x76, 0x18e]
---
0x6b DUP1
0x6c PUSH4 0xc0406226
0x71 EQ
0x72 PUSH2 0x18e
0x75 JUMPI
---
0x6c: V26 = 0xc0406226
0x71: V27 = EQ 0xc0406226 V10
0x72: V28 = 0x18e
0x75: JUMPI 0x18e V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x76
[0x76:0x80]
---
Predecessors: [0x6b]
Successors: [0x81, 0x1a3]
---
0x76 DUP1
0x77 PUSH4 0xef9e5743
0x7c EQ
0x7d PUSH2 0x1a3
0x80 JUMPI
---
0x77: V29 = 0xef9e5743
0x7c: V30 = EQ 0xef9e5743 V10
0x7d: V31 = 0x1a3
0x80: JUMPI 0x1a3 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x81
[0x81:0x87]
---
Predecessors: [0x0, 0x76]
Successors: [0x88, 0x8c]
---
0x81 JUMPDEST
0x82 CALLVALUE
0x83 ISZERO
0x84 PUSH2 0x8c
0x87 JUMPI
---
0x81: JUMPDEST 
0x82: V32 = CALLVALUE
0x83: V33 = ISZERO V32
0x84: V34 = 0x8c
0x87: JUMPI 0x8c V33
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x88
[0x88:0x8b]
---
Predecessors: [0x81]
Successors: []
---
0x88 PUSH1 0x0
0x8a DUP1
0x8b REVERT
---
0x88: V35 = 0x0
0x8b: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x8c
[0x8c:0x8f]
---
Predecessors: [0x81]
Successors: [0x90]
---
0x8c JUMPDEST
0x8d PUSH2 0x97
---
0x8c: JUMPDEST 
0x8d: V36 = 0x97
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x97]
Exit stack: [V10, 0x97]

================================

Block 0x90
[0x90:0x94]
---
Predecessors: [0x8c]
Successors: []
---
0x90 JUMPDEST
0x91 PUSH1 0x0
0x93 DUP1
0x94 REVERT
---
0x90: JUMPDEST 
0x91: V37 = 0x0
0x94: REVERT 0x0 0x0
---
Entry stack: [V10, 0x97]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x97]

================================

Block 0x95
[0x95:0x98]
---
Predecessors: []
Successors: []
---
0x95 JUMPDEST
0x96 JUMP
0x97 JUMPDEST
0x98 STOP
---
0x95: JUMPDEST 
0x96: JUMP S0
0x97: JUMPDEST 
0x98: STOP 
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x99
[0x99:0x9f]
---
Predecessors: [0xb]
Successors: [0xa0, 0xa4]
---
0x99 JUMPDEST
0x9a CALLVALUE
0x9b ISZERO
0x9c PUSH2 0xa4
0x9f JUMPI
---
0x99: JUMPDEST 
0x9a: V38 = CALLVALUE
0x9b: V39 = ISZERO V38
0x9c: V40 = 0xa4
0x9f: JUMPI 0xa4 V39
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xa0
[0xa0:0xa3]
---
Predecessors: [0x99]
Successors: []
---
0xa0 PUSH1 0x0
0xa2 DUP1
0xa3 REVERT
---
0xa0: V41 = 0x0
0xa3: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xa4
[0xa4:0xab]
---
Predecessors: [0x99]
Successors: [0x1f3]
---
0xa4 JUMPDEST
0xa5 PUSH2 0xac
0xa8 PUSH2 0x1f3
0xab JUMP
---
0xa4: JUMPDEST 
0xa5: V42 = 0xac
0xa8: V43 = 0x1f3
0xab: JUMP 0x1f3
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xac]
Exit stack: [V10, 0xac]

================================

Block 0xac
[0xac:0xad]
---
Predecessors: []
Successors: []
---
0xac JUMPDEST
0xad STOP
---
0xac: JUMPDEST 
0xad: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xae
[0xae:0xdc]
---
Predecessors: [0x3f]
Successors: [0x28a]
---
0xae JUMPDEST
0xaf PUSH2 0xdd
0xb2 PUSH1 0x4
0xb4 DUP1
0xb5 DUP1
0xb6 CALLDATALOAD
0xb7 PUSH22 0xffffffffffffffffffffffffffffffffffffffffffff
0xce NOT
0xcf AND
0xd0 SWAP1
0xd1 PUSH1 0x20
0xd3 ADD
0xd4 SWAP1
0xd5 SWAP2
0xd6 SWAP1
0xd7 POP
0xd8 POP
0xd9 PUSH2 0x28a
0xdc JUMP
---
0xae: JUMPDEST 
0xaf: V44 = 0xdd
0xb2: V45 = 0x4
0xb6: V46 = CALLDATALOAD 0x4
0xb7: V47 = 0xffffffffffffffffffffffffffffffffffffffffffff
0xce: V48 = NOT 0xffffffffffffffffffffffffffffffffffffffffffff
0xcf: V49 = AND 0xffffffffffffffffffff00000000000000000000000000000000000000000000 V46
0xd1: V50 = 0x20
0xd3: V51 = ADD 0x20 0x4
0xd9: V52 = 0x28a
0xdc: JUMP 0x28a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xdd, V49]
Exit stack: [V10, 0xdd, V49]

================================

Block 0xdd
[0xdd:0xf6]
---
Predecessors: [0x37f]
Successors: []
---
0xdd JUMPDEST
0xde PUSH1 0x40
0xe0 MLOAD
0xe1 DUP1
0xe2 DUP3
0xe3 ISZERO
0xe4 ISZERO
0xe5 ISZERO
0xe6 ISZERO
0xe7 DUP2
0xe8 MSTORE
0xe9 PUSH1 0x20
0xeb ADD
0xec SWAP2
0xed POP
0xee POP
0xef PUSH1 0x40
0xf1 MLOAD
0xf2 DUP1
0xf3 SWAP2
0xf4 SUB
0xf5 SWAP1
0xf6 RETURN
---
0xdd: JUMPDEST 
0xde: V53 = 0x40
0xe0: V54 = M[0x40]
0xe3: V55 = ISZERO 0x1
0xe4: V56 = ISZERO 0x0
0xe5: V57 = ISZERO 0x1
0xe6: V58 = ISZERO 0x0
0xe8: M[V54] = 0x1
0xe9: V59 = 0x20
0xeb: V60 = ADD 0x20 V54
0xef: V61 = 0x40
0xf1: V62 = M[0x40]
0xf4: V63 = SUB V60 V62
0xf6: RETURN V62 V63
---
Entry stack: [V10, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xf7
[0xf7:0xfd]
---
Predecessors: [0x4a]
Successors: [0xfe, 0x102]
---
0xf7 JUMPDEST
0xf8 CALLVALUE
0xf9 ISZERO
0xfa PUSH2 0x102
0xfd JUMPI
---
0xf7: JUMPDEST 
0xf8: V64 = CALLVALUE
0xf9: V65 = ISZERO V64
0xfa: V66 = 0x102
0xfd: JUMPI 0x102 V65
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xfe
[0xfe:0x101]
---
Predecessors: [0xf7]
Successors: []
---
0xfe PUSH1 0x0
0x100 DUP1
0x101 REVERT
---
0xfe: V67 = 0x0
0x101: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x102
[0x102:0x109]
---
Predecessors: [0xf7]
Successors: [0x384]
---
0x102 JUMPDEST
0x103 PUSH2 0x10a
0x106 PUSH2 0x384
0x109 JUMP
---
0x102: JUMPDEST 
0x103: V68 = 0x10a
0x106: V69 = 0x384
0x109: JUMP 0x384
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x10a]
Exit stack: [V10, 0x10a]

================================

Block 0x10a
[0x10a:0x123]
---
Predecessors: [0x4f0]
Successors: []
---
0x10a JUMPDEST
0x10b PUSH1 0x40
0x10d MLOAD
0x10e DUP1
0x10f DUP3
0x110 ISZERO
0x111 ISZERO
0x112 ISZERO
0x113 ISZERO
0x114 DUP2
0x115 MSTORE
0x116 PUSH1 0x20
0x118 ADD
0x119 SWAP2
0x11a POP
0x11b POP
0x11c PUSH1 0x40
0x11e MLOAD
0x11f DUP1
0x120 SWAP2
0x121 SUB
0x122 SWAP1
0x123 RETURN
---
0x10a: JUMPDEST 
0x10b: V70 = 0x40
0x10d: V71 = M[0x40]
0x110: V72 = ISZERO {0x0, 0x1}
0x111: V73 = ISZERO V72
0x112: V74 = ISZERO V73
0x113: V75 = ISZERO V74
0x115: M[V71] = V75
0x116: V76 = 0x20
0x118: V77 = ADD 0x20 V71
0x11c: V78 = 0x40
0x11e: V79 = M[0x40]
0x121: V80 = SUB V77 V79
0x123: RETURN V79 V80
---
Entry stack: [V10, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x124
[0x124:0x12a]
---
Predecessors: [0x55]
Successors: [0x12b, 0x12f]
---
0x124 JUMPDEST
0x125 CALLVALUE
0x126 ISZERO
0x127 PUSH2 0x12f
0x12a JUMPI
---
0x124: JUMPDEST 
0x125: V81 = CALLVALUE
0x126: V82 = ISZERO V81
0x127: V83 = 0x12f
0x12a: JUMPI 0x12f V82
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x12b
[0x12b:0x12e]
---
Predecessors: [0x124]
Successors: []
---
0x12b PUSH1 0x0
0x12d DUP1
0x12e REVERT
---
0x12b: V84 = 0x0
0x12e: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x12f
[0x12f:0x136]
---
Predecessors: [0x124]
Successors: [0x4f4]
---
0x12f JUMPDEST
0x130 PUSH2 0x137
0x133 PUSH2 0x4f4
0x136 JUMP
---
0x12f: JUMPDEST 
0x130: V85 = 0x137
0x133: V86 = 0x4f4
0x136: JUMP 0x4f4
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x137]
Exit stack: [V10, 0x137]

================================

Block 0x137
[0x137:0x138]
---
Predecessors: [0x574]
Successors: []
---
0x137 JUMPDEST
0x138 STOP
---
0x137: JUMPDEST 
0x138: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x139
[0x139:0x13f]
---
Predecessors: [0x60]
Successors: [0x140, 0x144]
---
0x139 JUMPDEST
0x13a CALLVALUE
0x13b ISZERO
0x13c PUSH2 0x144
0x13f JUMPI
---
0x139: JUMPDEST 
0x13a: V87 = CALLVALUE
0x13b: V88 = ISZERO V87
0x13c: V89 = 0x144
0x13f: JUMPI 0x144 V88
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x140
[0x140:0x143]
---
Predecessors: [0x139]
Successors: []
---
0x140 PUSH1 0x0
0x142 DUP1
0x143 REVERT
---
0x140: V90 = 0x0
0x143: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x144
[0x144:0x14b]
---
Predecessors: [0x139]
Successors: [0x576]
---
0x144 JUMPDEST
0x145 PUSH2 0x14c
0x148 PUSH2 0x576
0x14b JUMP
---
0x144: JUMPDEST 
0x145: V91 = 0x14c
0x148: V92 = 0x576
0x14b: JUMP 0x576
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x14c]
Exit stack: [V10, 0x14c]

================================

Block 0x14c
[0x14c:0x18d]
---
Predecessors: [0x576]
Successors: []
---
0x14c JUMPDEST
0x14d PUSH1 0x40
0x14f MLOAD
0x150 DUP1
0x151 DUP3
0x152 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x167 AND
0x168 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17d AND
0x17e DUP2
0x17f MSTORE
0x180 PUSH1 0x20
0x182 ADD
0x183 SWAP2
0x184 POP
0x185 POP
0x186 PUSH1 0x40
0x188 MLOAD
0x189 DUP1
0x18a SWAP2
0x18b SUB
0x18c SWAP1
0x18d RETURN
---
0x14c: JUMPDEST 
0x14d: V93 = 0x40
0x14f: V94 = M[0x40]
0x152: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x167: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V319
0x168: V97 = 0xffffffffffffffffffffffffffffffffffffffff
0x17d: V98 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x17f: M[V94] = V98
0x180: V99 = 0x20
0x182: V100 = ADD 0x20 V94
0x186: V101 = 0x40
0x188: V102 = M[0x40]
0x18b: V103 = SUB V100 V102
0x18d: RETURN V102 V103
---
Entry stack: [V10, 0x14c, V319]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x14c]

================================

Block 0x18e
[0x18e:0x194]
---
Predecessors: [0x6b]
Successors: [0x195, 0x199]
---
0x18e JUMPDEST
0x18f CALLVALUE
0x190 ISZERO
0x191 PUSH2 0x199
0x194 JUMPI
---
0x18e: JUMPDEST 
0x18f: V104 = CALLVALUE
0x190: V105 = ISZERO V104
0x191: V106 = 0x199
0x194: JUMPI 0x199 V105
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x195
[0x195:0x198]
---
Predecessors: [0x18e]
Successors: []
---
0x195 PUSH1 0x0
0x197 DUP1
0x198 REVERT
---
0x195: V107 = 0x0
0x198: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x199
[0x199:0x1a0]
---
Predecessors: [0x18e]
Successors: [0x59b]
---
0x199 JUMPDEST
0x19a PUSH2 0x1a1
0x19d PUSH2 0x59b
0x1a0 JUMP
---
0x199: JUMPDEST 
0x19a: V108 = 0x1a1
0x19d: V109 = 0x59b
0x1a0: JUMP 0x59b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1a1]
Exit stack: [V10, 0x1a1]

================================

Block 0x1a1
[0x1a1:0x1a2]
---
Predecessors: [0x61a]
Successors: []
---
0x1a1 JUMPDEST
0x1a2 STOP
---
0x1a1: JUMPDEST 
0x1a2: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1a3
[0x1a3:0x1a9]
---
Predecessors: [0x76]
Successors: [0x1aa, 0x1ae]
---
0x1a3 JUMPDEST
0x1a4 CALLVALUE
0x1a5 ISZERO
0x1a6 PUSH2 0x1ae
0x1a9 JUMPI
---
0x1a3: JUMPDEST 
0x1a4: V110 = CALLVALUE
0x1a5: V111 = ISZERO V110
0x1a6: V112 = 0x1ae
0x1a9: JUMPI 0x1ae V111
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1aa
[0x1aa:0x1ad]
---
Predecessors: [0x1a3]
Successors: []
---
0x1aa PUSH1 0x0
0x1ac DUP1
0x1ad REVERT
---
0x1aa: V113 = 0x0
0x1ad: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ae
[0x1ae:0x1dc]
---
Predecessors: [0x1a3]
Successors: [0x61c]
---
0x1ae JUMPDEST
0x1af PUSH2 0x1dd
0x1b2 PUSH1 0x4
0x1b4 DUP1
0x1b5 DUP1
0x1b6 CALLDATALOAD
0x1b7 PUSH22 0xffffffffffffffffffffffffffffffffffffffffffff
0x1ce NOT
0x1cf AND
0x1d0 SWAP1
0x1d1 PUSH1 0x20
0x1d3 ADD
0x1d4 SWAP1
0x1d5 SWAP2
0x1d6 SWAP1
0x1d7 POP
0x1d8 POP
0x1d9 PUSH2 0x61c
0x1dc JUMP
---
0x1ae: JUMPDEST 
0x1af: V114 = 0x1dd
0x1b2: V115 = 0x4
0x1b6: V116 = CALLDATALOAD 0x4
0x1b7: V117 = 0xffffffffffffffffffffffffffffffffffffffffffff
0x1ce: V118 = NOT 0xffffffffffffffffffffffffffffffffffffffffffff
0x1cf: V119 = AND 0xffffffffffffffffffff00000000000000000000000000000000000000000000 V116
0x1d1: V120 = 0x20
0x1d3: V121 = ADD 0x20 0x4
0x1d9: V122 = 0x61c
0x1dc: JUMP 0x61c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1dd, V119]
Exit stack: [V10, 0x1dd, V119]

================================

Block 0x1dd
[0x1dd:0x1f2]
---
Predecessors: [0x667]
Successors: []
---
0x1dd JUMPDEST
0x1de PUSH1 0x40
0x1e0 MLOAD
0x1e1 DUP1
0x1e2 DUP3
0x1e3 DUP2
0x1e4 MSTORE
0x1e5 PUSH1 0x20
0x1e7 ADD
0x1e8 SWAP2
0x1e9 POP
0x1ea POP
0x1eb PUSH1 0x40
0x1ed MLOAD
0x1ee DUP1
0x1ef SWAP2
0x1f0 SUB
0x1f1 SWAP1
0x1f2 RETURN
---
0x1dd: JUMPDEST 
0x1de: V123 = 0x40
0x1e0: V124 = M[0x40]
0x1e4: M[V124] = V367
0x1e5: V125 = 0x20
0x1e7: V126 = ADD 0x20 V124
0x1eb: V127 = 0x40
0x1ed: V128 = M[0x40]
0x1f0: V129 = SUB V126 V128
0x1f2: RETURN V128 V129
---
Entry stack: [V10, V367]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x1f3
[0x1f3:0x249]
---
Predecessors: [0xa4]
Successors: [0x24a, 0x24e]
---
0x1f3 JUMPDEST
0x1f4 PUSH1 0x0
0x1f6 DUP1
0x1f7 SWAP1
0x1f8 SLOAD
0x1f9 SWAP1
0x1fa PUSH2 0x100
0x1fd EXP
0x1fe SWAP1
0x1ff DIV
0x200 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x215 AND
0x216 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22b AND
0x22c CALLER
0x22d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x242 AND
0x243 EQ
0x244 ISZERO
0x245 ISZERO
0x246 PUSH2 0x24e
0x249 JUMPI
---
0x1f3: JUMPDEST 
0x1f4: V130 = 0x0
0x1f8: V131 = S[0x0]
0x1fa: V132 = 0x100
0x1fd: V133 = EXP 0x100 0x0
0x1ff: V134 = DIV V131 0x1
0x200: V135 = 0xffffffffffffffffffffffffffffffffffffffff
0x215: V136 = AND 0xffffffffffffffffffffffffffffffffffffffff V134
0x216: V137 = 0xffffffffffffffffffffffffffffffffffffffff
0x22b: V138 = AND 0xffffffffffffffffffffffffffffffffffffffff V136
0x22c: V139 = CALLER
0x22d: V140 = 0xffffffffffffffffffffffffffffffffffffffff
0x242: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x243: V142 = EQ V141 V138
0x244: V143 = ISZERO V142
0x245: V144 = ISZERO V143
0x246: V145 = 0x24e
0x249: JUMPI 0x24e V144
---
Entry stack: [V10, 0xac]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xac]

================================

Block 0x24a
[0x24a:0x24d]
---
Predecessors: [0x1f3]
Successors: []
---
0x24a PUSH1 0x0
0x24c DUP1
0x24d REVERT
---
0x24a: V146 = 0x0
0x24d: REVERT 0x0 0x0
---
Entry stack: [V10, 0xac]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xac]

================================

Block 0x24e
[0x24e:0x287]
---
Predecessors: [0x1f3]
Successors: []
---
0x24e JUMPDEST
0x24f PUSH1 0x0
0x251 DUP1
0x252 SWAP1
0x253 SLOAD
0x254 SWAP1
0x255 PUSH2 0x100
0x258 EXP
0x259 SWAP1
0x25a DIV
0x25b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x270 AND
0x271 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x286 AND
0x287 SELFDESTRUCT
---
0x24e: JUMPDEST 
0x24f: V147 = 0x0
0x253: V148 = S[0x0]
0x255: V149 = 0x100
0x258: V150 = EXP 0x100 0x0
0x25a: V151 = DIV V148 0x1
0x25b: V152 = 0xffffffffffffffffffffffffffffffffffffffff
0x270: V153 = AND 0xffffffffffffffffffffffffffffffffffffffff V151
0x271: V154 = 0xffffffffffffffffffffffffffffffffffffffff
0x286: V155 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x287: SELFDESTRUCT V155
---
Entry stack: [V10, 0xac]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xac]

================================

Block 0x288
[0x288:0x289]
---
Predecessors: []
Successors: []
Has unresolved jump.
---
0x288 JUMPDEST
0x289 JUMP
---
0x288: JUMPDEST 
0x289: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x28a
[0x28a:0x296]
---
Predecessors: [0xae]
Successors: [0x297, 0x298]
---
0x28a JUMPDEST
0x28b PUSH1 0x0
0x28d DUP1
0x28e PUSH1 0x1
0x290 DUP2
0x291 GT
0x292 ISZERO
0x293 PUSH2 0x298
0x296 JUMPI
---
0x28a: JUMPDEST 
0x28b: V156 = 0x0
0x28e: V157 = 0x1
0x291: V158 = GT 0x0 0x1
0x292: V159 = ISZERO 0x0
0x293: V160 = 0x298
0x296: JUMPI 0x298 0x1
---
Entry stack: [V10, 0xdd, V49]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V10, 0xdd, V49, 0x0, 0x0]

================================

Block 0x297
[0x297:0x297]
---
Predecessors: [0x28a]
Successors: []
---
0x297 INVALID
---
0x297: INVALID 
---
Entry stack: [V10, 0xdd, V49, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xdd, V49, 0x0, 0x0]

================================

Block 0x298
[0x298:0x2b1]
---
Predecessors: [0x28a]
Successors: [0x2b2, 0x2b3]
---
0x298 JUMPDEST
0x299 PUSH1 0x0
0x29b PUSH1 0x14
0x29d SWAP1
0x29e SLOAD
0x29f SWAP1
0x2a0 PUSH2 0x100
0x2a3 EXP
0x2a4 SWAP1
0x2a5 DIV
0x2a6 PUSH1 0xff
0x2a8 AND
0x2a9 PUSH1 0x1
0x2ab DUP2
0x2ac GT
0x2ad ISZERO
0x2ae PUSH2 0x2b3
0x2b1 JUMPI
---
0x298: JUMPDEST 
0x299: V161 = 0x0
0x29b: V162 = 0x14
0x29e: V163 = S[0x0]
0x2a0: V164 = 0x100
0x2a3: V165 = EXP 0x100 0x14
0x2a5: V166 = DIV V163 0x10000000000000000000000000000000000000000
0x2a6: V167 = 0xff
0x2a8: V168 = AND 0xff V166
0x2a9: V169 = 0x1
0x2ac: V170 = GT V168 0x1
0x2ad: V171 = ISZERO V170
0x2ae: V172 = 0x2b3
0x2b1: JUMPI 0x2b3 V171
---
Entry stack: [V10, 0xdd, V49, 0x0, 0x0]
Stack pops: 0
Stack additions: [V168]
Exit stack: [V10, 0xdd, V49, 0x0, 0x0, V168]

================================

Block 0x2b2
[0x2b2:0x2b2]
---
Predecessors: [0x298]
Successors: []
---
0x2b2 INVALID
---
0x2b2: INVALID 
---
Entry stack: [V10, 0xdd, V49, 0x0, 0x0, V168]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xdd, V49, 0x0, 0x0, V168]

================================

Block 0x2b3
[0x2b3:0x2ba]
---
Predecessors: [0x298]
Successors: [0x2bb, 0x2bf]
---
0x2b3 JUMPDEST
0x2b4 EQ
0x2b5 ISZERO
0x2b6 ISZERO
0x2b7 PUSH2 0x2bf
0x2ba JUMPI
---
0x2b3: JUMPDEST 
0x2b4: V173 = EQ V168 0x0
0x2b5: V174 = ISZERO V173
0x2b6: V175 = ISZERO V174
0x2b7: V176 = 0x2bf
0x2ba: JUMPI 0x2bf V175
---
Entry stack: [V10, 0xdd, V49, 0x0, 0x0, V168]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0xdd, V49, 0x0]

================================

Block 0x2bb
[0x2bb:0x2be]
---
Predecessors: [0x2b3]
Successors: []
---
0x2bb PUSH1 0x0
0x2bd DUP1
0x2be REVERT
---
0x2bb: V177 = 0x0
0x2be: REVERT 0x0 0x0
---
Entry stack: [V10, 0xdd, V49, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xdd, V49, 0x0]

================================

Block 0x2bf
[0x2bf:0x37e]
---
Predecessors: [0x2b3]
Successors: [0x37f]
---
0x2bf JUMPDEST
0x2c0 CALLVALUE
0x2c1 PUSH1 0x1
0x2c3 PUSH1 0x0
0x2c5 DUP5
0x2c6 PUSH22 0xffffffffffffffffffffffffffffffffffffffffffff
0x2dd NOT
0x2de AND
0x2df PUSH22 0xffffffffffffffffffffffffffffffffffffffffffff
0x2f6 NOT
0x2f7 AND
0x2f8 DUP2
0x2f9 MSTORE
0x2fa PUSH1 0x20
0x2fc ADD
0x2fd SWAP1
0x2fe DUP2
0x2ff MSTORE
0x300 PUSH1 0x20
0x302 ADD
0x303 PUSH1 0x0
0x305 SHA3
0x306 PUSH1 0x0
0x308 DUP3
0x309 DUP3
0x30a SLOAD
0x30b ADD
0x30c SWAP3
0x30d POP
0x30e POP
0x30f DUP2
0x310 SWAP1
0x311 SSTORE
0x312 POP
0x313 DUP2
0x314 PUSH22 0xffffffffffffffffffffffffffffffffffffffffffff
0x32b NOT
0x32c AND
0x32d CALLER
0x32e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x343 AND
0x344 PUSH32 0xe1fdb0a50e742b6ef36889a8d1ce12bd3faa56c0b482869be8d0e46a3e12652f
0x365 CALLVALUE
0x366 PUSH1 0x40
0x368 MLOAD
0x369 DUP1
0x36a DUP3
0x36b DUP2
0x36c MSTORE
0x36d PUSH1 0x20
0x36f ADD
0x370 SWAP2
0x371 POP
0x372 POP
0x373 PUSH1 0x40
0x375 MLOAD
0x376 DUP1
0x377 SWAP2
0x378 SUB
0x379 SWAP1
0x37a LOG3
0x37b PUSH1 0x1
0x37d SWAP1
0x37e POP
---
0x2bf: JUMPDEST 
0x2c0: V178 = CALLVALUE
0x2c1: V179 = 0x1
0x2c3: V180 = 0x0
0x2c6: V181 = 0xffffffffffffffffffffffffffffffffffffffffffff
0x2dd: V182 = NOT 0xffffffffffffffffffffffffffffffffffffffffffff
0x2de: V183 = AND 0xffffffffffffffffffff00000000000000000000000000000000000000000000 V49
0x2df: V184 = 0xffffffffffffffffffffffffffffffffffffffffffff
0x2f6: V185 = NOT 0xffffffffffffffffffffffffffffffffffffffffffff
0x2f7: V186 = AND 0xffffffffffffffffffff00000000000000000000000000000000000000000000 V183
0x2f9: M[0x0] = V186
0x2fa: V187 = 0x20
0x2fc: V188 = ADD 0x20 0x0
0x2ff: M[0x20] = 0x1
0x300: V189 = 0x20
0x302: V190 = ADD 0x20 0x20
0x303: V191 = 0x0
0x305: V192 = SHA3 0x0 0x40
0x306: V193 = 0x0
0x30a: V194 = S[V192]
0x30b: V195 = ADD V194 V178
0x311: S[V192] = V195
0x314: V196 = 0xffffffffffffffffffffffffffffffffffffffffffff
0x32b: V197 = NOT 0xffffffffffffffffffffffffffffffffffffffffffff
0x32c: V198 = AND 0xffffffffffffffffffff00000000000000000000000000000000000000000000 V49
0x32d: V199 = CALLER
0x32e: V200 = 0xffffffffffffffffffffffffffffffffffffffff
0x343: V201 = AND 0xffffffffffffffffffffffffffffffffffffffff V199
0x344: V202 = 0xe1fdb0a50e742b6ef36889a8d1ce12bd3faa56c0b482869be8d0e46a3e12652f
0x365: V203 = CALLVALUE
0x366: V204 = 0x40
0x368: V205 = M[0x40]
0x36c: M[V205] = V203
0x36d: V206 = 0x20
0x36f: V207 = ADD 0x20 V205
0x373: V208 = 0x40
0x375: V209 = M[0x40]
0x378: V210 = SUB V207 V209
0x37a: LOG V209 V210 0xe1fdb0a50e742b6ef36889a8d1ce12bd3faa56c0b482869be8d0e46a3e12652f V201 V198
0x37b: V211 = 0x1
---
Entry stack: [V10, 0xdd, V49, 0x0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V10, 0xdd, V49, 0x1]

================================

Block 0x37f
[0x37f:0x383]
---
Predecessors: [0x2bf]
Successors: [0xdd]
---
0x37f JUMPDEST
0x380 SWAP2
0x381 SWAP1
0x382 POP
0x383 JUMP
---
0x37f: JUMPDEST 
0x383: JUMP 0xdd
---
Entry stack: [V10, 0xdd, V49, 0x1]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, 0x1]

================================

Block 0x384
[0x384:0x3dd]
---
Predecessors: [0x102]
Successors: [0x3de, 0x3e2]
---
0x384 JUMPDEST
0x385 PUSH1 0x0
0x387 DUP1
0x388 PUSH1 0x0
0x38a DUP1
0x38b SWAP1
0x38c SLOAD
0x38d SWAP1
0x38e PUSH2 0x100
0x391 EXP
0x392 SWAP1
0x393 DIV
0x394 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a9 AND
0x3aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3bf AND
0x3c0 CALLER
0x3c1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d6 AND
0x3d7 EQ
0x3d8 ISZERO
0x3d9 ISZERO
0x3da PUSH2 0x3e2
0x3dd JUMPI
---
0x384: JUMPDEST 
0x385: V212 = 0x0
0x388: V213 = 0x0
0x38c: V214 = S[0x0]
0x38e: V215 = 0x100
0x391: V216 = EXP 0x100 0x0
0x393: V217 = DIV V214 0x1
0x394: V218 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a9: V219 = AND 0xffffffffffffffffffffffffffffffffffffffff V217
0x3aa: V220 = 0xffffffffffffffffffffffffffffffffffffffff
0x3bf: V221 = AND 0xffffffffffffffffffffffffffffffffffffffff V219
0x3c0: V222 = CALLER
0x3c1: V223 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d6: V224 = AND 0xffffffffffffffffffffffffffffffffffffffff V222
0x3d7: V225 = EQ V224 V221
0x3d8: V226 = ISZERO V225
0x3d9: V227 = ISZERO V226
0x3da: V228 = 0x3e2
0x3dd: JUMPI 0x3e2 V227
---
Entry stack: [V10, 0x10a]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V10, 0x10a, 0x0, 0x0]

================================

Block 0x3de
[0x3de:0x3e1]
---
Predecessors: [0x384]
Successors: []
---
0x3de PUSH1 0x0
0x3e0 DUP1
0x3e1 REVERT
---
0x3de: V229 = 0x0
0x3e1: REVERT 0x0 0x0
---
Entry stack: [V10, 0x10a, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10a, 0x0, 0x0]

================================

Block 0x3e2
[0x3e2:0x458]
---
Predecessors: [0x384]
Successors: [0x459, 0x461]
---
0x3e2 JUMPDEST
0x3e3 ADDRESS
0x3e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f9 AND
0x3fa BALANCE
0x3fb SWAP1
0x3fc POP
0x3fd PUSH1 0x0
0x3ff DUP1
0x400 SWAP1
0x401 SLOAD
0x402 SWAP1
0x403 PUSH2 0x100
0x406 EXP
0x407 SWAP1
0x408 DIV
0x409 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x41e AND
0x41f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x434 AND
0x435 PUSH2 0x8fc
0x438 DUP3
0x439 SWAP1
0x43a DUP2
0x43b ISZERO
0x43c MUL
0x43d SWAP1
0x43e PUSH1 0x40
0x440 MLOAD
0x441 PUSH1 0x0
0x443 PUSH1 0x40
0x445 MLOAD
0x446 DUP1
0x447 DUP4
0x448 SUB
0x449 DUP2
0x44a DUP6
0x44b DUP9
0x44c DUP9
0x44d CALL
0x44e SWAP4
0x44f POP
0x450 POP
0x451 POP
0x452 POP
0x453 ISZERO
0x454 ISZERO
0x455 PUSH2 0x461
0x458 JUMPI
---
0x3e2: JUMPDEST 
0x3e3: V230 = ADDRESS
0x3e4: V231 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f9: V232 = AND 0xffffffffffffffffffffffffffffffffffffffff V230
0x3fa: V233 = BALANCE V232
0x3fd: V234 = 0x0
0x401: V235 = S[0x0]
0x403: V236 = 0x100
0x406: V237 = EXP 0x100 0x0
0x408: V238 = DIV V235 0x1
0x409: V239 = 0xffffffffffffffffffffffffffffffffffffffff
0x41e: V240 = AND 0xffffffffffffffffffffffffffffffffffffffff V238
0x41f: V241 = 0xffffffffffffffffffffffffffffffffffffffff
0x434: V242 = AND 0xffffffffffffffffffffffffffffffffffffffff V240
0x435: V243 = 0x8fc
0x43b: V244 = ISZERO V233
0x43c: V245 = MUL V244 0x8fc
0x43e: V246 = 0x40
0x440: V247 = M[0x40]
0x441: V248 = 0x0
0x443: V249 = 0x40
0x445: V250 = M[0x40]
0x448: V251 = SUB V247 V250
0x44d: V252 = CALL V245 V242 V233 V250 V251 V250 0x0
0x453: V253 = ISZERO V252
0x454: V254 = ISZERO V253
0x455: V255 = 0x461
0x458: JUMPI 0x461 V254
---
Entry stack: [V10, 0x10a, 0x0, 0x0]
Stack pops: 1
Stack additions: [V233]
Exit stack: [V10, 0x10a, 0x0, V233]

================================

Block 0x459
[0x459:0x460]
---
Predecessors: [0x3e2]
Successors: [0x4f0]
---
0x459 PUSH1 0x0
0x45b SWAP2
0x45c POP
0x45d PUSH2 0x4f0
0x460 JUMP
---
0x459: V256 = 0x0
0x45d: V257 = 0x4f0
0x460: JUMP 0x4f0
---
Entry stack: [V10, 0x10a, 0x0, V233]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V10, 0x10a, 0x0, V233]

================================

Block 0x461
[0x461:0x4ef]
---
Predecessors: [0x3e2]
Successors: [0x4f0]
---
0x461 JUMPDEST
0x462 PUSH1 0x0
0x464 PUSH22 0xffffffffffffffffffffffffffffffffffffffffffff
0x47b NOT
0x47c AND
0x47d PUSH1 0x0
0x47f DUP1
0x480 SWAP1
0x481 SLOAD
0x482 SWAP1
0x483 PUSH2 0x100
0x486 EXP
0x487 SWAP1
0x488 DIV
0x489 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x49e AND
0x49f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4b4 AND
0x4b5 PUSH32 0xe1fdb0a50e742b6ef36889a8d1ce12bd3faa56c0b482869be8d0e46a3e12652f
0x4d6 DUP4
0x4d7 PUSH1 0x40
0x4d9 MLOAD
0x4da DUP1
0x4db DUP3
0x4dc DUP2
0x4dd MSTORE
0x4de PUSH1 0x20
0x4e0 ADD
0x4e1 SWAP2
0x4e2 POP
0x4e3 POP
0x4e4 PUSH1 0x40
0x4e6 MLOAD
0x4e7 DUP1
0x4e8 SWAP2
0x4e9 SUB
0x4ea SWAP1
0x4eb LOG3
0x4ec PUSH1 0x1
0x4ee SWAP2
0x4ef POP
---
0x461: JUMPDEST 
0x462: V258 = 0x0
0x464: V259 = 0xffffffffffffffffffffffffffffffffffffffffffff
0x47b: V260 = NOT 0xffffffffffffffffffffffffffffffffffffffffffff
0x47c: V261 = AND 0xffffffffffffffffffff00000000000000000000000000000000000000000000 0x0
0x47d: V262 = 0x0
0x481: V263 = S[0x0]
0x483: V264 = 0x100
0x486: V265 = EXP 0x100 0x0
0x488: V266 = DIV V263 0x1
0x489: V267 = 0xffffffffffffffffffffffffffffffffffffffff
0x49e: V268 = AND 0xffffffffffffffffffffffffffffffffffffffff V266
0x49f: V269 = 0xffffffffffffffffffffffffffffffffffffffff
0x4b4: V270 = AND 0xffffffffffffffffffffffffffffffffffffffff V268
0x4b5: V271 = 0xe1fdb0a50e742b6ef36889a8d1ce12bd3faa56c0b482869be8d0e46a3e12652f
0x4d7: V272 = 0x40
0x4d9: V273 = M[0x40]
0x4dd: M[V273] = V233
0x4de: V274 = 0x20
0x4e0: V275 = ADD 0x20 V273
0x4e4: V276 = 0x40
0x4e6: V277 = M[0x40]
0x4e9: V278 = SUB V275 V277
0x4eb: LOG V277 V278 0xe1fdb0a50e742b6ef36889a8d1ce12bd3faa56c0b482869be8d0e46a3e12652f V270 0x0
0x4ec: V279 = 0x1
---
Entry stack: [V10, 0x10a, 0x0, V233]
Stack pops: 2
Stack additions: [0x1, S0]
Exit stack: [V10, 0x10a, 0x1, V233]

================================

Block 0x4f0
[0x4f0:0x4f3]
---
Predecessors: [0x459, 0x461]
Successors: [0x10a]
---
0x4f0 JUMPDEST
0x4f1 POP
0x4f2 SWAP1
0x4f3 JUMP
---
0x4f0: JUMPDEST 
0x4f3: JUMP 0x10a
---
Entry stack: [V10, 0x10a, {0x0, 0x1}, V233]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0x4f4
[0x4f4:0x54a]
---
Predecessors: [0x12f]
Successors: [0x54b, 0x54f]
---
0x4f4 JUMPDEST
0x4f5 PUSH1 0x0
0x4f7 DUP1
0x4f8 SWAP1
0x4f9 SLOAD
0x4fa SWAP1
0x4fb PUSH2 0x100
0x4fe EXP
0x4ff SWAP1
0x500 DIV
0x501 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x516 AND
0x517 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x52c AND
0x52d CALLER
0x52e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x543 AND
0x544 EQ
0x545 ISZERO
0x546 ISZERO
0x547 PUSH2 0x54f
0x54a JUMPI
---
0x4f4: JUMPDEST 
0x4f5: V280 = 0x0
0x4f9: V281 = S[0x0]
0x4fb: V282 = 0x100
0x4fe: V283 = EXP 0x100 0x0
0x500: V284 = DIV V281 0x1
0x501: V285 = 0xffffffffffffffffffffffffffffffffffffffff
0x516: V286 = AND 0xffffffffffffffffffffffffffffffffffffffff V284
0x517: V287 = 0xffffffffffffffffffffffffffffffffffffffff
0x52c: V288 = AND 0xffffffffffffffffffffffffffffffffffffffff V286
0x52d: V289 = CALLER
0x52e: V290 = 0xffffffffffffffffffffffffffffffffffffffff
0x543: V291 = AND 0xffffffffffffffffffffffffffffffffffffffff V289
0x544: V292 = EQ V291 V288
0x545: V293 = ISZERO V292
0x546: V294 = ISZERO V293
0x547: V295 = 0x54f
0x54a: JUMPI 0x54f V294
---
Entry stack: [V10, 0x137]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x137]

================================

Block 0x54b
[0x54b:0x54e]
---
Predecessors: [0x4f4]
Successors: []
---
0x54b PUSH1 0x0
0x54d DUP1
0x54e REVERT
---
0x54b: V296 = 0x0
0x54e: REVERT 0x0 0x0
---
Entry stack: [V10, 0x137]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x137]

================================

Block 0x54f
[0x54f:0x56c]
---
Predecessors: [0x4f4]
Successors: [0x56d, 0x56e]
---
0x54f JUMPDEST
0x550 PUSH1 0x1
0x552 PUSH1 0x0
0x554 PUSH1 0x14
0x556 PUSH2 0x100
0x559 EXP
0x55a DUP2
0x55b SLOAD
0x55c DUP2
0x55d PUSH1 0xff
0x55f MUL
0x560 NOT
0x561 AND
0x562 SWAP1
0x563 DUP4
0x564 PUSH1 0x1
0x566 DUP2
0x567 GT
0x568 ISZERO
0x569 PUSH2 0x56e
0x56c JUMPI
---
0x54f: JUMPDEST 
0x550: V297 = 0x1
0x552: V298 = 0x0
0x554: V299 = 0x14
0x556: V300 = 0x100
0x559: V301 = EXP 0x100 0x14
0x55b: V302 = S[0x0]
0x55d: V303 = 0xff
0x55f: V304 = MUL 0xff 0x10000000000000000000000000000000000000000
0x560: V305 = NOT 0xff0000000000000000000000000000000000000000
0x561: V306 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V302
0x564: V307 = 0x1
0x567: V308 = GT 0x1 0x1
0x568: V309 = ISZERO 0x0
0x569: V310 = 0x56e
0x56c: JUMPI 0x56e 0x1
---
Entry stack: [V10, 0x137]
Stack pops: 0
Stack additions: [0x1, 0x0, V306, 0x10000000000000000000000000000000000000000, 0x1]
Exit stack: [V10, 0x137, 0x1, 0x0, V306, 0x10000000000000000000000000000000000000000, 0x1]

================================

Block 0x56d
[0x56d:0x56d]
---
Predecessors: [0x54f]
Successors: []
---
0x56d INVALID
---
0x56d: INVALID 
---
Entry stack: [V10, 0x137, 0x1, 0x0, V306, 0x10000000000000000000000000000000000000000, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x137, 0x1, 0x0, V306, 0x10000000000000000000000000000000000000000, 0x1]

================================

Block 0x56e
[0x56e:0x573]
---
Predecessors: [0x54f]
Successors: [0x574]
---
0x56e JUMPDEST
0x56f MUL
0x570 OR
0x571 SWAP1
0x572 SSTORE
0x573 POP
---
0x56e: JUMPDEST 
0x56f: V311 = MUL 0x1 0x10000000000000000000000000000000000000000
0x570: V312 = OR 0x10000000000000000000000000000000000000000 V306
0x572: S[0x0] = V312
---
Entry stack: [V10, 0x137, 0x1, 0x0, V306, 0x10000000000000000000000000000000000000000, 0x1]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x137]

================================

Block 0x574
[0x574:0x575]
---
Predecessors: [0x56e]
Successors: [0x137]
---
0x574 JUMPDEST
0x575 JUMP
---
0x574: JUMPDEST 
0x575: JUMP 0x137
---
Entry stack: [V10, 0x137]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x576
[0x576:0x59a]
---
Predecessors: [0x144]
Successors: [0x14c]
---
0x576 JUMPDEST
0x577 PUSH1 0x0
0x579 DUP1
0x57a SWAP1
0x57b SLOAD
0x57c SWAP1
0x57d PUSH2 0x100
0x580 EXP
0x581 SWAP1
0x582 DIV
0x583 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x598 AND
0x599 DUP2
0x59a JUMP
---
0x576: JUMPDEST 
0x577: V313 = 0x0
0x57b: V314 = S[0x0]
0x57d: V315 = 0x100
0x580: V316 = EXP 0x100 0x0
0x582: V317 = DIV V314 0x1
0x583: V318 = 0xffffffffffffffffffffffffffffffffffffffff
0x598: V319 = AND 0xffffffffffffffffffffffffffffffffffffffff V317
0x59a: JUMP 0x14c
---
Entry stack: [V10, 0x14c]
Stack pops: 1
Stack additions: [S0, V319]
Exit stack: [V10, 0x14c, V319]

================================

Block 0x59b
[0x59b:0x5f1]
---
Predecessors: [0x199]
Successors: [0x5f2, 0x5f6]
---
0x59b JUMPDEST
0x59c PUSH1 0x0
0x59e DUP1
0x59f SWAP1
0x5a0 SLOAD
0x5a1 SWAP1
0x5a2 PUSH2 0x100
0x5a5 EXP
0x5a6 SWAP1
0x5a7 DIV
0x5a8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5bd AND
0x5be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d3 AND
0x5d4 CALLER
0x5d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5ea AND
0x5eb EQ
0x5ec ISZERO
0x5ed ISZERO
0x5ee PUSH2 0x5f6
0x5f1 JUMPI
---
0x59b: JUMPDEST 
0x59c: V320 = 0x0
0x5a0: V321 = S[0x0]
0x5a2: V322 = 0x100
0x5a5: V323 = EXP 0x100 0x0
0x5a7: V324 = DIV V321 0x1
0x5a8: V325 = 0xffffffffffffffffffffffffffffffffffffffff
0x5bd: V326 = AND 0xffffffffffffffffffffffffffffffffffffffff V324
0x5be: V327 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d3: V328 = AND 0xffffffffffffffffffffffffffffffffffffffff V326
0x5d4: V329 = CALLER
0x5d5: V330 = 0xffffffffffffffffffffffffffffffffffffffff
0x5ea: V331 = AND 0xffffffffffffffffffffffffffffffffffffffff V329
0x5eb: V332 = EQ V331 V328
0x5ec: V333 = ISZERO V332
0x5ed: V334 = ISZERO V333
0x5ee: V335 = 0x5f6
0x5f1: JUMPI 0x5f6 V334
---
Entry stack: [V10, 0x1a1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1a1]

================================

Block 0x5f2
[0x5f2:0x5f5]
---
Predecessors: [0x59b]
Successors: []
---
0x5f2 PUSH1 0x0
0x5f4 DUP1
0x5f5 REVERT
---
0x5f2: V336 = 0x0
0x5f5: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1a1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1a1]

================================

Block 0x5f6
[0x5f6:0x612]
---
Predecessors: [0x59b]
Successors: [0x613, 0x614]
---
0x5f6 JUMPDEST
0x5f7 PUSH1 0x0
0x5f9 DUP1
0x5fa PUSH1 0x14
0x5fc PUSH2 0x100
0x5ff EXP
0x600 DUP2
0x601 SLOAD
0x602 DUP2
0x603 PUSH1 0xff
0x605 MUL
0x606 NOT
0x607 AND
0x608 SWAP1
0x609 DUP4
0x60a PUSH1 0x1
0x60c DUP2
0x60d GT
0x60e ISZERO
0x60f PUSH2 0x614
0x612 JUMPI
---
0x5f6: JUMPDEST 
0x5f7: V337 = 0x0
0x5fa: V338 = 0x14
0x5fc: V339 = 0x100
0x5ff: V340 = EXP 0x100 0x14
0x601: V341 = S[0x0]
0x603: V342 = 0xff
0x605: V343 = MUL 0xff 0x10000000000000000000000000000000000000000
0x606: V344 = NOT 0xff0000000000000000000000000000000000000000
0x607: V345 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V341
0x60a: V346 = 0x1
0x60d: V347 = GT 0x0 0x1
0x60e: V348 = ISZERO 0x0
0x60f: V349 = 0x614
0x612: JUMPI 0x614 0x1
---
Entry stack: [V10, 0x1a1]
Stack pops: 0
Stack additions: [0x0, 0x0, V345, 0x10000000000000000000000000000000000000000, 0x0]
Exit stack: [V10, 0x1a1, 0x0, 0x0, V345, 0x10000000000000000000000000000000000000000, 0x0]

================================

Block 0x613
[0x613:0x613]
---
Predecessors: [0x5f6]
Successors: []
---
0x613 INVALID
---
0x613: INVALID 
---
Entry stack: [V10, 0x1a1, 0x0, 0x0, V345, 0x10000000000000000000000000000000000000000, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1a1, 0x0, 0x0, V345, 0x10000000000000000000000000000000000000000, 0x0]

================================

Block 0x614
[0x614:0x619]
---
Predecessors: [0x5f6]
Successors: [0x61a]
---
0x614 JUMPDEST
0x615 MUL
0x616 OR
0x617 SWAP1
0x618 SSTORE
0x619 POP
---
0x614: JUMPDEST 
0x615: V350 = MUL 0x0 0x10000000000000000000000000000000000000000
0x616: V351 = OR 0x0 V345
0x618: S[0x0] = V351
---
Entry stack: [V10, 0x1a1, 0x0, 0x0, V345, 0x10000000000000000000000000000000000000000, 0x0]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x1a1]

================================

Block 0x61a
[0x61a:0x61b]
---
Predecessors: [0x614]
Successors: [0x1a1]
---
0x61a JUMPDEST
0x61b JUMP
---
0x61a: JUMPDEST 
0x61b: JUMP 0x1a1
---
Entry stack: [V10, 0x1a1]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x61c
[0x61c:0x666]
---
Predecessors: [0x1ae]
Successors: [0x667]
---
0x61c JUMPDEST
0x61d PUSH1 0x0
0x61f PUSH1 0x1
0x621 PUSH1 0x0
0x623 DUP4
0x624 PUSH22 0xffffffffffffffffffffffffffffffffffffffffffff
0x63b NOT
0x63c AND
0x63d PUSH22 0xffffffffffffffffffffffffffffffffffffffffffff
0x654 NOT
0x655 AND
0x656 DUP2
0x657 MSTORE
0x658 PUSH1 0x20
0x65a ADD
0x65b SWAP1
0x65c DUP2
0x65d MSTORE
0x65e PUSH1 0x20
0x660 ADD
0x661 PUSH1 0x0
0x663 SHA3
0x664 SLOAD
0x665 SWAP1
0x666 POP
---
0x61c: JUMPDEST 
0x61d: V352 = 0x0
0x61f: V353 = 0x1
0x621: V354 = 0x0
0x624: V355 = 0xffffffffffffffffffffffffffffffffffffffffffff
0x63b: V356 = NOT 0xffffffffffffffffffffffffffffffffffffffffffff
0x63c: V357 = AND 0xffffffffffffffffffff00000000000000000000000000000000000000000000 V119
0x63d: V358 = 0xffffffffffffffffffffffffffffffffffffffffffff
0x654: V359 = NOT 0xffffffffffffffffffffffffffffffffffffffffffff
0x655: V360 = AND 0xffffffffffffffffffff00000000000000000000000000000000000000000000 V357
0x657: M[0x0] = V360
0x658: V361 = 0x20
0x65a: V362 = ADD 0x20 0x0
0x65d: M[0x20] = 0x1
0x65e: V363 = 0x20
0x660: V364 = ADD 0x20 0x20
0x661: V365 = 0x0
0x663: V366 = SHA3 0x0 0x40
0x664: V367 = S[V366]
---
Entry stack: [V10, 0x1dd, V119]
Stack pops: 1
Stack additions: [S0, V367]
Exit stack: [V10, 0x1dd, V119, V367]

================================

Block 0x667
[0x667:0x66b]
---
Predecessors: [0x61c]
Successors: [0x1dd]
---
0x667 JUMPDEST
0x668 SWAP2
0x669 SWAP1
0x66a POP
0x66b JUMP
---
0x667: JUMPDEST 
0x66b: JUMP 0x1dd
---
Entry stack: [V10, 0x1dd, V119, V367]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, V367]

================================

Block 0x66c
[0x66c:0x6a0]
---
Predecessors: []
Successors: []
---
0x66c STOP
0x66d LOG1
0x66e PUSH6 0x627a7a723058
0x675 SHA3
0x676 MISSING 0xd9
0x677 LOG1
0x678 PUSH2 0x5f67
0x67b MISSING 0xee
0x67c MISSING 0xcf
0x67d CALLDATASIZE
0x67e EQ
0x67f MISSING 0xd0
0x680 PUSH32 0x96c51b5692a8794b818240845bfcf13235813ed5210029
---
0x66c: STOP 
0x66d: LOG S0 S1 S2
0x66e: V368 = 0x627a7a723058
0x675: V369 = SHA3 0x627a7a723058 S3
0x676: MISSING 0xd9
0x677: LOG S0 S1 S2
0x678: V370 = 0x5f67
0x67b: MISSING 0xee
0x67c: MISSING 0xcf
0x67d: V371 = CALLDATASIZE
0x67e: V372 = EQ V371 S0
0x67f: MISSING 0xd0
0x680: V373 = 0x96c51b5692a8794b818240845bfcf13235813ed5210029
---
Entry stack: []
Stack pops: 0
Stack additions: [V369, 0x5f67, V372, 0x96c51b5692a8794b818240845bfcf13235813ed5210029]
Exit stack: []

================================

Function 0:
Public function signature: 0xc08bf88
Entry block: 0x99
Exit block: 0x24a
Body: 0x99, 0xa0, 0xa4, 0x1f3, 0x24a, 0x24e

Function 1:
Public function signature: 0x4fa51a39
Entry block: 0xae
Exit block: 0xdd
Body: 0xae, 0xdd, 0x28a, 0x297, 0x298, 0x2b2, 0x2b3, 0x2bb, 0x2bf, 0x37f

Function 2:
Public function signature: 0x6b9f96ea
Entry block: 0xf7
Exit block: 0x10a
Body: 0xf7, 0xfe, 0x102, 0x10a, 0x384, 0x3de, 0x3e2, 0x459, 0x461, 0x4f0

Function 3:
Public function signature: 0x8456cb59
Entry block: 0x124
Exit block: 0x137
Body: 0x124, 0x12b, 0x12f, 0x137, 0x4f4, 0x54b, 0x54f, 0x56d, 0x56e, 0x574

Function 4:
Public function signature: 0x8da5cb5b
Entry block: 0x139
Exit block: 0x14c
Body: 0x139, 0x140, 0x144, 0x14c, 0x576

Function 5:
Public function signature: 0xc0406226
Entry block: 0x18e
Exit block: 0x1a1
Body: 0x18e, 0x195, 0x199, 0x1a1, 0x59b, 0x5f2, 0x5f6, 0x613, 0x614, 0x61a

Function 6:
Public function signature: 0xef9e5743
Entry block: 0x1a3
Exit block: 0x1dd
Body: 0x1a3, 0x1aa, 0x1ae, 0x1dd, 0x61c, 0x667

Function 7:
Public fallback function
Entry block: 0x81
Exit block: 0x90
Body: 0x81, 0x88, 0x8c, 0x90

