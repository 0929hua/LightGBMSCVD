Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x46]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x46
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x46
0xa: JUMPI 0x46 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x4a]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x300b50a
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x4a
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x300b50a
0x20: V14 = EQ V12 0x300b50a
0x21: V15 = 0x4a
0x24: JUMPI 0x4a V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x79]
---
0x25 DUP1
0x26 PUSH4 0x41c0e1b5
0x2b EQ
0x2c PUSH2 0x79
0x2f JUMPI
---
0x26: V16 = 0x41c0e1b5
0x2b: V17 = EQ 0x41c0e1b5 V12
0x2c: V18 = 0x79
0x2f: JUMPI 0x79 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x8e]
---
0x30 DUP1
0x31 PUSH4 0x6aa3e64d
0x36 EQ
0x37 PUSH2 0x8e
0x3a JUMPI
---
0x31: V19 = 0x6aa3e64d
0x36: V20 = EQ 0x6aa3e64d V12
0x37: V21 = 0x8e
0x3a: JUMPI 0x8e V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0xaf]
---
0x3b DUP1
0x3c PUSH4 0x7b88eae1
0x41 EQ
0x42 PUSH2 0xaf
0x45 JUMPI
---
0x3c: V22 = 0x7b88eae1
0x41: V23 = EQ 0x7b88eae1 V12
0x42: V24 = 0xaf
0x45: JUMPI 0xaf V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x46]
---
Predecessors: [0x0, 0x3b, 0x16f, 0x375]
Successors: [0x47]
---
0x46 JUMPDEST
---
0x46: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x47
[0x47:0x47]
---
Predecessors: [0x46]
Successors: [0x48]
---
0x47 JUMPDEST
---
0x47: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x48
[0x48:0x49]
---
Predecessors: [0x47]
Successors: []
---
0x48 JUMPDEST
0x49 STOP
---
0x48: JUMPDEST 
0x49: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4a
[0x4a:0x50]
---
Predecessors: [0xb]
Successors: [0x51, 0x55]
---
0x4a JUMPDEST
0x4b CALLVALUE
0x4c ISZERO
0x4d PUSH2 0x55
0x50 JUMPI
---
0x4a: JUMPDEST 
0x4b: V25 = CALLVALUE
0x4c: V26 = ISZERO V25
0x4d: V27 = 0x55
0x50: JUMPI 0x55 V26
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x51
[0x51:0x54]
---
Predecessors: [0x4a]
Successors: []
---
0x51 PUSH1 0x0
0x53 DUP1
0x54 REVERT
---
0x51: V28 = 0x0
0x54: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x55
[0x55:0x5c]
---
Predecessors: [0x4a]
Successors: [0xc5]
---
0x55 JUMPDEST
0x56 PUSH2 0x5d
0x59 PUSH2 0xc5
0x5c JUMP
---
0x55: JUMPDEST 
0x56: V29 = 0x5d
0x59: V30 = 0xc5
0x5c: JUMP 0xc5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x5d]
Exit stack: [V12, 0x5d]

================================

Block 0x5d
[0x5d:0x78]
---
Predecessors: [0xc5]
Successors: []
---
0x5d JUMPDEST
0x5e PUSH1 0x40
0x60 MLOAD
0x61 PUSH1 0x1
0x63 PUSH1 0xa0
0x65 PUSH1 0x2
0x67 EXP
0x68 SUB
0x69 SWAP1
0x6a SWAP2
0x6b AND
0x6c DUP2
0x6d MSTORE
0x6e PUSH1 0x20
0x70 ADD
0x71 PUSH1 0x40
0x73 MLOAD
0x74 DUP1
0x75 SWAP2
0x76 SUB
0x77 SWAP1
0x78 RETURN
---
0x5d: JUMPDEST 
0x5e: V31 = 0x40
0x60: V32 = M[0x40]
0x61: V33 = 0x1
0x63: V34 = 0xa0
0x65: V35 = 0x2
0x67: V36 = EXP 0x2 0xa0
0x68: V37 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6b: V38 = AND V81 0xffffffffffffffffffffffffffffffffffffffff
0x6d: M[V32] = V38
0x6e: V39 = 0x20
0x70: V40 = ADD 0x20 V32
0x71: V41 = 0x40
0x73: V42 = M[0x40]
0x76: V43 = SUB V40 V42
0x78: RETURN V42 V43
---
Entry stack: [V12, 0x5d, V81]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x5d]

================================

Block 0x79
[0x79:0x7f]
---
Predecessors: [0x25]
Successors: [0x80, 0x84]
---
0x79 JUMPDEST
0x7a CALLVALUE
0x7b ISZERO
0x7c PUSH2 0x84
0x7f JUMPI
---
0x79: JUMPDEST 
0x7a: V44 = CALLVALUE
0x7b: V45 = ISZERO V44
0x7c: V46 = 0x84
0x7f: JUMPI 0x84 V45
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x80
[0x80:0x83]
---
Predecessors: [0x79]
Successors: []
---
0x80 PUSH1 0x0
0x82 DUP1
0x83 REVERT
---
0x80: V47 = 0x0
0x83: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x84
[0x84:0x8b]
---
Predecessors: [0x79]
Successors: [0xd4]
---
0x84 JUMPDEST
0x85 PUSH2 0x46
0x88 PUSH2 0xd4
0x8b JUMP
---
0x84: JUMPDEST 
0x85: V48 = 0x46
0x88: V49 = 0xd4
0x8b: JUMP 0xd4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x46]
Exit stack: [V12, 0x46]

================================

Block 0x8c
[0x8c:0x8d]
---
Predecessors: []
Successors: []
---
0x8c JUMPDEST
0x8d STOP
---
0x8c: JUMPDEST 
0x8d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x8e
[0x8e:0x94]
---
Predecessors: [0x30]
Successors: [0x95, 0x99]
---
0x8e JUMPDEST
0x8f CALLVALUE
0x90 ISZERO
0x91 PUSH2 0x99
0x94 JUMPI
---
0x8e: JUMPDEST 
0x8f: V50 = CALLVALUE
0x90: V51 = ISZERO V50
0x91: V52 = 0x99
0x94: JUMPI 0x99 V51
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x95
[0x95:0x98]
---
Predecessors: [0x8e]
Successors: []
---
0x95 PUSH1 0x0
0x97 DUP1
0x98 REVERT
---
0x95: V53 = 0x0
0x98: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x99
[0x99:0xac]
---
Predecessors: [0x8e]
Successors: [0xfe]
---
0x99 JUMPDEST
0x9a PUSH2 0x46
0x9d PUSH1 0x1
0x9f PUSH1 0xa0
0xa1 PUSH1 0x2
0xa3 EXP
0xa4 SUB
0xa5 PUSH1 0x4
0xa7 CALLDATALOAD
0xa8 AND
0xa9 PUSH2 0xfe
0xac JUMP
---
0x99: JUMPDEST 
0x9a: V54 = 0x46
0x9d: V55 = 0x1
0x9f: V56 = 0xa0
0xa1: V57 = 0x2
0xa3: V58 = EXP 0x2 0xa0
0xa4: V59 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa5: V60 = 0x4
0xa7: V61 = CALLDATALOAD 0x4
0xa8: V62 = AND V61 0xffffffffffffffffffffffffffffffffffffffff
0xa9: V63 = 0xfe
0xac: JUMP 0xfe
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x46, V62]
Exit stack: [V12, 0x46, V62]

================================

Block 0xad
[0xad:0xae]
---
Predecessors: []
Successors: []
---
0xad JUMPDEST
0xae STOP
---
0xad: JUMPDEST 
0xae: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xaf
[0xaf:0xc2]
---
Predecessors: [0x3b]
Successors: [0x172]
---
0xaf JUMPDEST
0xb0 PUSH2 0x46
0xb3 PUSH1 0x1
0xb5 PUSH1 0xa0
0xb7 PUSH1 0x2
0xb9 EXP
0xba SUB
0xbb PUSH1 0x4
0xbd CALLDATALOAD
0xbe AND
0xbf PUSH2 0x172
0xc2 JUMP
---
0xaf: JUMPDEST 
0xb0: V64 = 0x46
0xb3: V65 = 0x1
0xb5: V66 = 0xa0
0xb7: V67 = 0x2
0xb9: V68 = EXP 0x2 0xa0
0xba: V69 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbb: V70 = 0x4
0xbd: V71 = CALLDATALOAD 0x4
0xbe: V72 = AND V71 0xffffffffffffffffffffffffffffffffffffffff
0xbf: V73 = 0x172
0xc2: JUMP 0x172
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x46, V72]
Exit stack: [V12, 0x46, V72]

================================

Block 0xc3
[0xc3:0xc4]
---
Predecessors: []
Successors: []
---
0xc3 JUMPDEST
0xc4 STOP
---
0xc3: JUMPDEST 
0xc4: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc5
[0xc5:0xd3]
---
Predecessors: [0x55]
Successors: [0x5d]
---
0xc5 JUMPDEST
0xc6 PUSH1 0x0
0xc8 SLOAD
0xc9 PUSH1 0x1
0xcb PUSH1 0xa0
0xcd PUSH1 0x2
0xcf EXP
0xd0 SUB
0xd1 AND
0xd2 DUP2
0xd3 JUMP
---
0xc5: JUMPDEST 
0xc6: V74 = 0x0
0xc8: V75 = S[0x0]
0xc9: V76 = 0x1
0xcb: V77 = 0xa0
0xcd: V78 = 0x2
0xcf: V79 = EXP 0x2 0xa0
0xd0: V80 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd1: V81 = AND 0xffffffffffffffffffffffffffffffffffffffff V75
0xd3: JUMP 0x5d
---
Entry stack: [V12, 0x5d]
Stack pops: 1
Stack additions: [S0, V81]
Exit stack: [V12, 0x5d, V81]

================================

Block 0xd4
[0xd4:0xea]
---
Predecessors: [0x84]
Successors: [0xeb, 0xef]
---
0xd4 JUMPDEST
0xd5 PUSH1 0x0
0xd7 SLOAD
0xd8 CALLER
0xd9 PUSH1 0x1
0xdb PUSH1 0xa0
0xdd PUSH1 0x2
0xdf EXP
0xe0 SUB
0xe1 SWAP1
0xe2 DUP2
0xe3 AND
0xe4 SWAP2
0xe5 AND
0xe6 EQ
0xe7 PUSH2 0xef
0xea JUMPI
---
0xd4: JUMPDEST 
0xd5: V82 = 0x0
0xd7: V83 = S[0x0]
0xd8: V84 = CALLER
0xd9: V85 = 0x1
0xdb: V86 = 0xa0
0xdd: V87 = 0x2
0xdf: V88 = EXP 0x2 0xa0
0xe0: V89 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe3: V90 = AND 0xffffffffffffffffffffffffffffffffffffffff V84
0xe5: V91 = AND V83 0xffffffffffffffffffffffffffffffffffffffff
0xe6: V92 = EQ V91 V90
0xe7: V93 = 0xef
0xea: JUMPI 0xef V92
---
Entry stack: [V12, 0x46]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x46]

================================

Block 0xeb
[0xeb:0xee]
---
Predecessors: [0xd4]
Successors: []
---
0xeb PUSH1 0x0
0xed DUP1
0xee REVERT
---
0xeb: V94 = 0x0
0xee: REVERT 0x0 0x0
---
Entry stack: [V12, 0x46]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x46]

================================

Block 0xef
[0xef:0xfa]
---
Predecessors: [0xd4]
Successors: []
---
0xef JUMPDEST
0xf0 CALLER
0xf1 PUSH1 0x1
0xf3 PUSH1 0xa0
0xf5 PUSH1 0x2
0xf7 EXP
0xf8 SUB
0xf9 AND
0xfa SELFDESTRUCT
---
0xef: JUMPDEST 
0xf0: V95 = CALLER
0xf1: V96 = 0x1
0xf3: V97 = 0xa0
0xf5: V98 = 0x2
0xf7: V99 = EXP 0x2 0xa0
0xf8: V100 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf9: V101 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0xfa: SELFDESTRUCT V101
---
Entry stack: [V12, 0x46]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x46]

================================

Block 0xfb
[0xfb:0xfb]
---
Predecessors: []
Successors: [0xfc]
---
0xfb JUMPDEST
---
0xfb: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xfc
[0xfc:0xfd]
---
Predecessors: [0xfb]
Successors: []
Has unresolved jump.
---
0xfc JUMPDEST
0xfd JUMP
---
0xfc: JUMPDEST 
0xfd: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xfe
[0xfe:0x114]
---
Predecessors: [0x99]
Successors: [0x115, 0x119]
---
0xfe JUMPDEST
0xff PUSH1 0x0
0x101 SLOAD
0x102 CALLER
0x103 PUSH1 0x1
0x105 PUSH1 0xa0
0x107 PUSH1 0x2
0x109 EXP
0x10a SUB
0x10b SWAP1
0x10c DUP2
0x10d AND
0x10e SWAP2
0x10f AND
0x110 EQ
0x111 PUSH2 0x119
0x114 JUMPI
---
0xfe: JUMPDEST 
0xff: V102 = 0x0
0x101: V103 = S[0x0]
0x102: V104 = CALLER
0x103: V105 = 0x1
0x105: V106 = 0xa0
0x107: V107 = 0x2
0x109: V108 = EXP 0x2 0xa0
0x10a: V109 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10d: V110 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x10f: V111 = AND V103 0xffffffffffffffffffffffffffffffffffffffff
0x110: V112 = EQ V111 V110
0x111: V113 = 0x119
0x114: JUMPI 0x119 V112
---
Entry stack: [V12, 0x46, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x46, V62]

================================

Block 0x115
[0x115:0x118]
---
Predecessors: [0xfe]
Successors: []
---
0x115 PUSH1 0x0
0x117 DUP1
0x118 REVERT
---
0x115: V114 = 0x0
0x118: REVERT 0x0 0x0
---
Entry stack: [V12, 0x46, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x46, V62]

================================

Block 0x119
[0x119:0x12b]
---
Predecessors: [0xfe]
Successors: [0x12c, 0x130]
---
0x119 JUMPDEST
0x11a PUSH1 0x0
0x11c PUSH1 0x1
0x11e PUSH1 0xa0
0x120 PUSH1 0x2
0x122 EXP
0x123 SUB
0x124 ADDRESS
0x125 AND
0x126 BALANCE
0x127 GT
0x128 PUSH2 0x130
0x12b JUMPI
---
0x119: JUMPDEST 
0x11a: V115 = 0x0
0x11c: V116 = 0x1
0x11e: V117 = 0xa0
0x120: V118 = 0x2
0x122: V119 = EXP 0x2 0xa0
0x123: V120 = SUB 0x10000000000000000000000000000000000000000 0x1
0x124: V121 = ADDRESS
0x125: V122 = AND V121 0xffffffffffffffffffffffffffffffffffffffff
0x126: V123 = BALANCE V122
0x127: V124 = GT V123 0x0
0x128: V125 = 0x130
0x12b: JUMPI 0x130 V124
---
Entry stack: [V12, 0x46, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x46, V62]

================================

Block 0x12c
[0x12c:0x12f]
---
Predecessors: [0x119]
Successors: []
---
0x12c PUSH1 0x0
0x12e DUP1
0x12f REVERT
---
0x12c: V126 = 0x0
0x12f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x46, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x46, V62]

================================

Block 0x130
[0x130:0x168]
---
Predecessors: [0x119]
Successors: [0x169, 0x16d]
---
0x130 JUMPDEST
0x131 DUP1
0x132 PUSH1 0x1
0x134 PUSH1 0xa0
0x136 PUSH1 0x2
0x138 EXP
0x139 SUB
0x13a AND
0x13b PUSH2 0x8fc
0x13e ADDRESS
0x13f PUSH1 0x1
0x141 PUSH1 0xa0
0x143 PUSH1 0x2
0x145 EXP
0x146 SUB
0x147 AND
0x148 BALANCE
0x149 SWAP1
0x14a DUP2
0x14b ISZERO
0x14c MUL
0x14d SWAP1
0x14e PUSH1 0x40
0x150 MLOAD
0x151 PUSH1 0x0
0x153 PUSH1 0x40
0x155 MLOAD
0x156 DUP1
0x157 DUP4
0x158 SUB
0x159 DUP2
0x15a DUP6
0x15b DUP9
0x15c DUP9
0x15d CALL
0x15e SWAP4
0x15f POP
0x160 POP
0x161 POP
0x162 POP
0x163 ISZERO
0x164 ISZERO
0x165 PUSH2 0x16d
0x168 JUMPI
---
0x130: JUMPDEST 
0x132: V127 = 0x1
0x134: V128 = 0xa0
0x136: V129 = 0x2
0x138: V130 = EXP 0x2 0xa0
0x139: V131 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13a: V132 = AND 0xffffffffffffffffffffffffffffffffffffffff V62
0x13b: V133 = 0x8fc
0x13e: V134 = ADDRESS
0x13f: V135 = 0x1
0x141: V136 = 0xa0
0x143: V137 = 0x2
0x145: V138 = EXP 0x2 0xa0
0x146: V139 = SUB 0x10000000000000000000000000000000000000000 0x1
0x147: V140 = AND 0xffffffffffffffffffffffffffffffffffffffff V134
0x148: V141 = BALANCE V140
0x14b: V142 = ISZERO V141
0x14c: V143 = MUL V142 0x8fc
0x14e: V144 = 0x40
0x150: V145 = M[0x40]
0x151: V146 = 0x0
0x153: V147 = 0x40
0x155: V148 = M[0x40]
0x158: V149 = SUB V145 V148
0x15d: V150 = CALL V143 V132 V141 V148 V149 V148 0x0
0x163: V151 = ISZERO V150
0x164: V152 = ISZERO V151
0x165: V153 = 0x16d
0x168: JUMPI 0x16d V152
---
Entry stack: [V12, 0x46, V62]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x46, V62]

================================

Block 0x169
[0x169:0x16c]
---
Predecessors: [0x130]
Successors: []
---
0x169 PUSH1 0x0
0x16b DUP1
0x16c REVERT
---
0x169: V154 = 0x0
0x16c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x46, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x46, V62]

================================

Block 0x16d
[0x16d:0x16d]
---
Predecessors: [0x130]
Successors: [0x16e]
---
0x16d JUMPDEST
---
0x16d: JUMPDEST 
---
Entry stack: [V12, 0x46, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x46, V62]

================================

Block 0x16e
[0x16e:0x16e]
---
Predecessors: [0x16d]
Successors: [0x16f]
---
0x16e JUMPDEST
---
0x16e: JUMPDEST 
---
Entry stack: [V12, 0x46, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x46, V62]

================================

Block 0x16f
[0x16f:0x171]
---
Predecessors: [0x16e]
Successors: [0x46]
---
0x16f JUMPDEST
0x170 POP
0x171 JUMP
---
0x16f: JUMPDEST 
0x171: JUMP 0x46
---
Entry stack: [V12, 0x46, V62]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x172
[0x172:0x1ae]
---
Predecessors: [0xaf]
Successors: [0x1af, 0x1b3]
---
0x172 JUMPDEST
0x173 DUP1
0x174 PUSH1 0x0
0x176 DUP1
0x177 PUSH1 0x1
0x179 PUSH1 0xa0
0x17b PUSH1 0x2
0x17d EXP
0x17e SUB
0x17f DUP4
0x180 AND
0x181 PUSH4 0x8129fc1c
0x186 PUSH1 0x40
0x188 MLOAD
0x189 DUP2
0x18a PUSH4 0xffffffff
0x18f AND
0x190 PUSH1 0xe0
0x192 PUSH1 0x2
0x194 EXP
0x195 MUL
0x196 DUP2
0x197 MSTORE
0x198 PUSH1 0x4
0x19a ADD
0x19b PUSH1 0x0
0x19d PUSH1 0x40
0x19f MLOAD
0x1a0 DUP1
0x1a1 DUP4
0x1a2 SUB
0x1a3 DUP2
0x1a4 PUSH1 0x0
0x1a6 DUP8
0x1a7 DUP1
0x1a8 EXTCODESIZE
0x1a9 ISZERO
0x1aa ISZERO
0x1ab PUSH2 0x1b3
0x1ae JUMPI
---
0x172: JUMPDEST 
0x174: V155 = 0x0
0x177: V156 = 0x1
0x179: V157 = 0xa0
0x17b: V158 = 0x2
0x17d: V159 = EXP 0x2 0xa0
0x17e: V160 = SUB 0x10000000000000000000000000000000000000000 0x1
0x180: V161 = AND V72 0xffffffffffffffffffffffffffffffffffffffff
0x181: V162 = 0x8129fc1c
0x186: V163 = 0x40
0x188: V164 = M[0x40]
0x18a: V165 = 0xffffffff
0x18f: V166 = AND 0xffffffff 0x8129fc1c
0x190: V167 = 0xe0
0x192: V168 = 0x2
0x194: V169 = EXP 0x2 0xe0
0x195: V170 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x8129fc1c
0x197: M[V164] = 0x8129fc1c00000000000000000000000000000000000000000000000000000000
0x198: V171 = 0x4
0x19a: V172 = ADD 0x4 V164
0x19b: V173 = 0x0
0x19d: V174 = 0x40
0x19f: V175 = M[0x40]
0x1a2: V176 = SUB V172 V175
0x1a4: V177 = 0x0
0x1a8: V178 = EXTCODESIZE V161
0x1a9: V179 = ISZERO V178
0x1aa: V180 = ISZERO V179
0x1ab: V181 = 0x1b3
0x1ae: JUMPI 0x1b3 V180
---
Entry stack: [V12, 0x46, V72]
Stack pops: 1
Stack additions: [S0, S0, 0x0, 0x0, V161, 0x8129fc1c, V172, 0x0, V175, V176, V175, 0x0, V161]
Exit stack: [V12, 0x46, V72, V72, 0x0, 0x0, V161, 0x8129fc1c, V172, 0x0, V175, V176, V175, 0x0, V161]

================================

Block 0x1af
[0x1af:0x1b2]
---
Predecessors: [0x172]
Successors: []
---
0x1af PUSH1 0x0
0x1b1 DUP1
0x1b2 REVERT
---
0x1af: V182 = 0x0
0x1b2: REVERT 0x0 0x0
---
Entry stack: [V12, 0x46, V72, V72, 0x0, 0x0, V161, 0x8129fc1c, V172, 0x0, V175, V176, V175, 0x0, V161]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x46, V72, V72, 0x0, 0x0, V161, 0x8129fc1c, V172, 0x0, V175, V176, V175, 0x0, V161]

================================

Block 0x1b3
[0x1b3:0x1bf]
---
Predecessors: [0x172]
Successors: [0x1c0, 0x1c4]
---
0x1b3 JUMPDEST
0x1b4 PUSH2 0x2c6
0x1b7 GAS
0x1b8 SUB
0x1b9 CALL
0x1ba ISZERO
0x1bb ISZERO
0x1bc PUSH2 0x1c4
0x1bf JUMPI
---
0x1b3: JUMPDEST 
0x1b4: V183 = 0x2c6
0x1b7: V184 = GAS
0x1b8: V185 = SUB V184 0x2c6
0x1b9: V186 = CALL V185 V161 0x0 V175 V176 V175 0x0
0x1ba: V187 = ISZERO V186
0x1bb: V188 = ISZERO V187
0x1bc: V189 = 0x1c4
0x1bf: JUMPI 0x1c4 V188
---
Entry stack: [V12, 0x46, V72, V72, 0x0, 0x0, V161, 0x8129fc1c, V172, 0x0, V175, V176, V175, 0x0, V161]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x46, V72, V72, 0x0, 0x0, V161, 0x8129fc1c, V172]

================================

Block 0x1c0
[0x1c0:0x1c3]
---
Predecessors: [0x1b3]
Successors: []
---
0x1c0 PUSH1 0x0
0x1c2 DUP1
0x1c3 REVERT
---
0x1c0: V190 = 0x0
0x1c3: REVERT 0x0 0x0
---
Entry stack: [V12, 0x46, V72, V72, 0x0, 0x0, V161, 0x8129fc1c, V172]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x46, V72, V72, 0x0, 0x0, V161, 0x8129fc1c, V172]

================================

Block 0x1c4
[0x1c4:0x209]
---
Predecessors: [0x1b3]
Successors: [0x20a, 0x20e]
---
0x1c4 JUMPDEST
0x1c5 POP
0x1c6 POP
0x1c7 POP
0x1c8 DUP3
0x1c9 PUSH1 0x1
0x1cb PUSH1 0xa0
0x1cd PUSH1 0x2
0x1cf EXP
0x1d0 SUB
0x1d1 AND
0x1d2 PUSH4 0x1352faec
0x1d7 PUSH1 0x1
0x1d9 PUSH1 0x40
0x1db MLOAD
0x1dc PUSH1 0xe0
0x1de PUSH1 0x2
0x1e0 EXP
0x1e1 PUSH4 0xffffffff
0x1e6 DUP5
0x1e7 AND
0x1e8 MUL
0x1e9 DUP2
0x1ea MSTORE
0x1eb PUSH1 0x4
0x1ed DUP2
0x1ee ADD
0x1ef SWAP2
0x1f0 SWAP1
0x1f1 SWAP2
0x1f2 MSTORE
0x1f3 PUSH1 0x24
0x1f5 ADD
0x1f6 PUSH1 0x0
0x1f8 PUSH1 0x40
0x1fa MLOAD
0x1fb DUP1
0x1fc DUP4
0x1fd SUB
0x1fe DUP2
0x1ff PUSH1 0x0
0x201 DUP8
0x202 DUP1
0x203 EXTCODESIZE
0x204 ISZERO
0x205 ISZERO
0x206 PUSH2 0x20e
0x209 JUMPI
---
0x1c4: JUMPDEST 
0x1c9: V191 = 0x1
0x1cb: V192 = 0xa0
0x1cd: V193 = 0x2
0x1cf: V194 = EXP 0x2 0xa0
0x1d0: V195 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d1: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0x1d2: V197 = 0x1352faec
0x1d7: V198 = 0x1
0x1d9: V199 = 0x40
0x1db: V200 = M[0x40]
0x1dc: V201 = 0xe0
0x1de: V202 = 0x2
0x1e0: V203 = EXP 0x2 0xe0
0x1e1: V204 = 0xffffffff
0x1e7: V205 = AND 0x1352faec 0xffffffff
0x1e8: V206 = MUL 0x1352faec 0x100000000000000000000000000000000000000000000000000000000
0x1ea: M[V200] = 0x1352faec00000000000000000000000000000000000000000000000000000000
0x1eb: V207 = 0x4
0x1ee: V208 = ADD V200 0x4
0x1f2: M[V208] = 0x1
0x1f3: V209 = 0x24
0x1f5: V210 = ADD 0x24 V200
0x1f6: V211 = 0x0
0x1f8: V212 = 0x40
0x1fa: V213 = M[0x40]
0x1fd: V214 = SUB V210 V213
0x1ff: V215 = 0x0
0x203: V216 = EXTCODESIZE V196
0x204: V217 = ISZERO V216
0x205: V218 = ISZERO V217
0x206: V219 = 0x20e
0x209: JUMPI 0x20e V218
---
Entry stack: [V12, 0x46, V72, V72, 0x0, 0x0, V161, 0x8129fc1c, V172]
Stack pops: 6
Stack additions: [S5, S4, S3, V196, 0x1352faec, V210, 0x0, V213, V214, V213, 0x0, V196]
Exit stack: [V12, 0x46, V72, V72, 0x0, 0x0, V196, 0x1352faec, V210, 0x0, V213, V214, V213, 0x0, V196]

================================

Block 0x20a
[0x20a:0x20d]
---
Predecessors: [0x1c4]
Successors: []
---
0x20a PUSH1 0x0
0x20c DUP1
0x20d REVERT
---
0x20a: V220 = 0x0
0x20d: REVERT 0x0 0x0
---
Entry stack: [V12, 0x46, V72, V72, 0x0, 0x0, V196, 0x1352faec, V210, 0x0, V213, V214, V213, 0x0, V196]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x46, V72, V72, 0x0, 0x0, V196, 0x1352faec, V210, 0x0, V213, V214, V213, 0x0, V196]

================================

Block 0x20e
[0x20e:0x21a]
---
Predecessors: [0x1c4]
Successors: [0x21b, 0x21f]
---
0x20e JUMPDEST
0x20f PUSH2 0x2c6
0x212 GAS
0x213 SUB
0x214 CALL
0x215 ISZERO
0x216 ISZERO
0x217 PUSH2 0x21f
0x21a JUMPI
---
0x20e: JUMPDEST 
0x20f: V221 = 0x2c6
0x212: V222 = GAS
0x213: V223 = SUB V222 0x2c6
0x214: V224 = CALL V223 V196 0x0 V213 V214 V213 0x0
0x215: V225 = ISZERO V224
0x216: V226 = ISZERO V225
0x217: V227 = 0x21f
0x21a: JUMPI 0x21f V226
---
Entry stack: [V12, 0x46, V72, V72, 0x0, 0x0, V196, 0x1352faec, V210, 0x0, V213, V214, V213, 0x0, V196]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x46, V72, V72, 0x0, 0x0, V196, 0x1352faec, V210]

================================

Block 0x21b
[0x21b:0x21e]
---
Predecessors: [0x20e]
Successors: []
---
0x21b PUSH1 0x0
0x21d DUP1
0x21e REVERT
---
0x21b: V228 = 0x0
0x21e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x46, V72, V72, 0x0, 0x0, V196, 0x1352faec, V210]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x46, V72, V72, 0x0, 0x0, V196, 0x1352faec, V210]

================================

Block 0x21f
[0x21f:0x25a]
---
Predecessors: [0x20e]
Successors: [0x25b, 0x25f]
---
0x21f JUMPDEST
0x220 POP
0x221 POP
0x222 POP
0x223 DUP3
0x224 PUSH1 0x1
0x226 PUSH1 0xa0
0x228 PUSH1 0x2
0x22a EXP
0x22b SUB
0x22c AND
0x22d PUSH4 0xd0e30db0
0x232 CALLVALUE
0x233 PUSH1 0x40
0x235 MLOAD
0x236 DUP3
0x237 PUSH4 0xffffffff
0x23c AND
0x23d PUSH1 0xe0
0x23f PUSH1 0x2
0x241 EXP
0x242 MUL
0x243 DUP2
0x244 MSTORE
0x245 PUSH1 0x4
0x247 ADD
0x248 PUSH1 0x0
0x24a PUSH1 0x40
0x24c MLOAD
0x24d DUP1
0x24e DUP4
0x24f SUB
0x250 DUP2
0x251 DUP6
0x252 DUP9
0x253 DUP1
0x254 EXTCODESIZE
0x255 ISZERO
0x256 ISZERO
0x257 PUSH2 0x25f
0x25a JUMPI
---
0x21f: JUMPDEST 
0x224: V229 = 0x1
0x226: V230 = 0xa0
0x228: V231 = 0x2
0x22a: V232 = EXP 0x2 0xa0
0x22b: V233 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22c: V234 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0x22d: V235 = 0xd0e30db0
0x232: V236 = CALLVALUE
0x233: V237 = 0x40
0x235: V238 = M[0x40]
0x237: V239 = 0xffffffff
0x23c: V240 = AND 0xffffffff 0xd0e30db0
0x23d: V241 = 0xe0
0x23f: V242 = 0x2
0x241: V243 = EXP 0x2 0xe0
0x242: V244 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd0e30db0
0x244: M[V238] = 0xd0e30db000000000000000000000000000000000000000000000000000000000
0x245: V245 = 0x4
0x247: V246 = ADD 0x4 V238
0x248: V247 = 0x0
0x24a: V248 = 0x40
0x24c: V249 = M[0x40]
0x24f: V250 = SUB V246 V249
0x254: V251 = EXTCODESIZE V234
0x255: V252 = ISZERO V251
0x256: V253 = ISZERO V252
0x257: V254 = 0x25f
0x25a: JUMPI 0x25f V253
---
Entry stack: [V12, 0x46, V72, V72, 0x0, 0x0, V196, 0x1352faec, V210]
Stack pops: 6
Stack additions: [S5, S4, S3, V234, 0xd0e30db0, V236, V246, 0x0, V249, V250, V249, V236, V234]
Exit stack: [V12, 0x46, V72, V72, 0x0, 0x0, V234, 0xd0e30db0, V236, V246, 0x0, V249, V250, V249, V236, V234]

================================

Block 0x25b
[0x25b:0x25e]
---
Predecessors: [0x21f]
Successors: []
---
0x25b PUSH1 0x0
0x25d DUP1
0x25e REVERT
---
0x25b: V255 = 0x0
0x25e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x46, V72, V72, 0x0, 0x0, V234, 0xd0e30db0, V236, V246, 0x0, V249, V250, V249, V236, V234]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x46, V72, V72, 0x0, 0x0, V234, 0xd0e30db0, V236, V246, 0x0, V249, V250, V249, V236, V234]

================================

Block 0x25f
[0x25f:0x26b]
---
Predecessors: [0x21f]
Successors: [0x26c, 0x270]
---
0x25f JUMPDEST
0x260 PUSH2 0x25ee
0x263 GAS
0x264 SUB
0x265 CALL
0x266 ISZERO
0x267 ISZERO
0x268 PUSH2 0x270
0x26b JUMPI
---
0x25f: JUMPDEST 
0x260: V256 = 0x25ee
0x263: V257 = GAS
0x264: V258 = SUB V257 0x25ee
0x265: V259 = CALL V258 V234 V236 V249 V250 V249 0x0
0x266: V260 = ISZERO V259
0x267: V261 = ISZERO V260
0x268: V262 = 0x270
0x26b: JUMPI 0x270 V261
---
Entry stack: [V12, 0x46, V72, V72, 0x0, 0x0, V234, 0xd0e30db0, V236, V246, 0x0, V249, V250, V249, V236, V234]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x46, V72, V72, 0x0, 0x0, V234, 0xd0e30db0, V236, V246]

================================

Block 0x26c
[0x26c:0x26f]
---
Predecessors: [0x25f]
Successors: []
---
0x26c PUSH1 0x0
0x26e DUP1
0x26f REVERT
---
0x26c: V263 = 0x0
0x26f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x46, V72, V72, 0x0, 0x0, V234, 0xd0e30db0, V236, V246]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x46, V72, V72, 0x0, 0x0, V234, 0xd0e30db0, V236, V246]

================================

Block 0x270
[0x270:0x287]
---
Predecessors: [0x25f]
Successors: [0x288, 0x289]
---
0x270 JUMPDEST
0x271 POP
0x272 POP
0x273 POP
0x274 POP
0x275 CALLVALUE
0x276 DUP5
0x277 PUSH1 0x1
0x279 PUSH1 0xa0
0x27b PUSH1 0x2
0x27d EXP
0x27e SUB
0x27f AND
0x280 BALANCE
0x281 DUP2
0x282 ISZERO
0x283 ISZERO
0x284 PUSH2 0x289
0x287 JUMPI
---
0x270: JUMPDEST 
0x275: V264 = CALLVALUE
0x277: V265 = 0x1
0x279: V266 = 0xa0
0x27b: V267 = 0x2
0x27d: V268 = EXP 0x2 0xa0
0x27e: V269 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27f: V270 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0x280: V271 = BALANCE V270
0x282: V272 = ISZERO V264
0x283: V273 = ISZERO V272
0x284: V274 = 0x289
0x287: JUMPI 0x289 V273
---
Entry stack: [V12, 0x46, V72, V72, 0x0, 0x0, V234, 0xd0e30db0, V236, V246]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, V264, V271]
Exit stack: [V12, 0x46, V72, V72, 0x0, 0x0, V264, V271]

================================

Block 0x288
[0x288:0x288]
---
Predecessors: [0x270]
Successors: []
---
0x288 INVALID
---
0x288: INVALID 
---
Entry stack: [V12, 0x46, V72, V72, 0x0, 0x0, V264, V271]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x46, V72, V72, 0x0, 0x0, V264, V271]

================================

Block 0x289
[0x289:0x290]
---
Predecessors: [0x270]
Successors: [0x291]
---
0x289 JUMPDEST
0x28a DIV
0x28b SWAP2
0x28c POP
0x28d PUSH1 0x0
0x28f SWAP1
0x290 POP
---
0x289: JUMPDEST 
0x28a: V275 = DIV V271 V264
0x28d: V276 = 0x0
---
Entry stack: [V12, 0x46, V72, V72, 0x0, 0x0, V264, V271]
Stack pops: 4
Stack additions: [V275, 0x0]
Exit stack: [V12, 0x46, V72, V72, V275, 0x0]

================================

Block 0x291
[0x291:0x299]
---
Predecessors: [0x289, 0x2f4]
Successors: [0x29a, 0x2fc]
---
0x291 JUMPDEST
0x292 DUP2
0x293 DUP2
0x294 LT
0x295 ISZERO
0x296 PUSH2 0x2fc
0x299 JUMPI
---
0x291: JUMPDEST 
0x294: V277 = LT S0 V275
0x295: V278 = ISZERO V277
0x296: V279 = 0x2fc
0x299: JUMPI 0x2fc V278
---
Entry stack: [V12, 0x46, V72, V72, V275, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x46, V72, V72, V275, S0]

================================

Block 0x29a
[0x29a:0x2da]
---
Predecessors: [0x291]
Successors: [0x2db, 0x2df]
---
0x29a DUP3
0x29b PUSH1 0x1
0x29d PUSH1 0xa0
0x29f PUSH1 0x2
0x2a1 EXP
0x2a2 SUB
0x2a3 AND
0x2a4 PUSH4 0x2e1a7d4d
0x2a9 CALLVALUE
0x2aa PUSH1 0x40
0x2ac MLOAD
0x2ad PUSH1 0xe0
0x2af PUSH1 0x2
0x2b1 EXP
0x2b2 PUSH4 0xffffffff
0x2b7 DUP5
0x2b8 AND
0x2b9 MUL
0x2ba DUP2
0x2bb MSTORE
0x2bc PUSH1 0x4
0x2be DUP2
0x2bf ADD
0x2c0 SWAP2
0x2c1 SWAP1
0x2c2 SWAP2
0x2c3 MSTORE
0x2c4 PUSH1 0x24
0x2c6 ADD
0x2c7 PUSH1 0x0
0x2c9 PUSH1 0x40
0x2cb MLOAD
0x2cc DUP1
0x2cd DUP4
0x2ce SUB
0x2cf DUP2
0x2d0 PUSH1 0x0
0x2d2 DUP8
0x2d3 DUP1
0x2d4 EXTCODESIZE
0x2d5 ISZERO
0x2d6 ISZERO
0x2d7 PUSH2 0x2df
0x2da JUMPI
---
0x29b: V280 = 0x1
0x29d: V281 = 0xa0
0x29f: V282 = 0x2
0x2a1: V283 = EXP 0x2 0xa0
0x2a2: V284 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a3: V285 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0x2a4: V286 = 0x2e1a7d4d
0x2a9: V287 = CALLVALUE
0x2aa: V288 = 0x40
0x2ac: V289 = M[0x40]
0x2ad: V290 = 0xe0
0x2af: V291 = 0x2
0x2b1: V292 = EXP 0x2 0xe0
0x2b2: V293 = 0xffffffff
0x2b8: V294 = AND 0x2e1a7d4d 0xffffffff
0x2b9: V295 = MUL 0x2e1a7d4d 0x100000000000000000000000000000000000000000000000000000000
0x2bb: M[V289] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
0x2bc: V296 = 0x4
0x2bf: V297 = ADD V289 0x4
0x2c3: M[V297] = V287
0x2c4: V298 = 0x24
0x2c6: V299 = ADD 0x24 V289
0x2c7: V300 = 0x0
0x2c9: V301 = 0x40
0x2cb: V302 = M[0x40]
0x2ce: V303 = SUB V299 V302
0x2d0: V304 = 0x0
0x2d4: V305 = EXTCODESIZE V285
0x2d5: V306 = ISZERO V305
0x2d6: V307 = ISZERO V306
0x2d7: V308 = 0x2df
0x2da: JUMPI 0x2df V307
---
Entry stack: [V12, 0x46, V72, V72, V275, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V285, 0x2e1a7d4d, V299, 0x0, V302, V303, V302, 0x0, V285]
Exit stack: [V12, 0x46, V72, V72, V275, S0, V285, 0x2e1a7d4d, V299, 0x0, V302, V303, V302, 0x0, V285]

================================

Block 0x2db
[0x2db:0x2de]
---
Predecessors: [0x29a]
Successors: []
---
0x2db PUSH1 0x0
0x2dd DUP1
0x2de REVERT
---
0x2db: V309 = 0x0
0x2de: REVERT 0x0 0x0
---
Entry stack: [V12, 0x46, V72, V72, V275, S9, V285, 0x2e1a7d4d, V299, 0x0, V302, V303, V302, 0x0, V285]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x46, V72, V72, V275, S9, V285, 0x2e1a7d4d, V299, 0x0, V302, V303, V302, 0x0, V285]

================================

Block 0x2df
[0x2df:0x2eb]
---
Predecessors: [0x29a]
Successors: [0x2ec, 0x2f0]
---
0x2df JUMPDEST
0x2e0 PUSH2 0x2c6
0x2e3 GAS
0x2e4 SUB
0x2e5 CALL
0x2e6 ISZERO
0x2e7 ISZERO
0x2e8 PUSH2 0x2f0
0x2eb JUMPI
---
0x2df: JUMPDEST 
0x2e0: V310 = 0x2c6
0x2e3: V311 = GAS
0x2e4: V312 = SUB V311 0x2c6
0x2e5: V313 = CALL V312 V285 0x0 V302 V303 V302 0x0
0x2e6: V314 = ISZERO V313
0x2e7: V315 = ISZERO V314
0x2e8: V316 = 0x2f0
0x2eb: JUMPI 0x2f0 V315
---
Entry stack: [V12, 0x46, V72, V72, V275, S9, V285, 0x2e1a7d4d, V299, 0x0, V302, V303, V302, 0x0, V285]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x46, V72, V72, V275, S9, V285, 0x2e1a7d4d, V299]

================================

Block 0x2ec
[0x2ec:0x2ef]
---
Predecessors: [0x2df]
Successors: []
---
0x2ec PUSH1 0x0
0x2ee DUP1
0x2ef REVERT
---
0x2ec: V317 = 0x0
0x2ef: REVERT 0x0 0x0
---
Entry stack: [V12, 0x46, V72, V72, V275, S3, V285, 0x2e1a7d4d, V299]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x46, V72, V72, V275, S3, V285, 0x2e1a7d4d, V299]

================================

Block 0x2f0
[0x2f0:0x2f3]
---
Predecessors: [0x2df]
Successors: [0x2f4]
---
0x2f0 JUMPDEST
0x2f1 POP
0x2f2 POP
0x2f3 POP
---
0x2f0: JUMPDEST 
---
Entry stack: [V12, 0x46, V72, V72, V275, S3, V285, 0x2e1a7d4d, V299]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x46, V72, V72, V275, S3]

================================

Block 0x2f4
[0x2f4:0x2fb]
---
Predecessors: [0x2f0]
Successors: [0x291]
---
0x2f4 JUMPDEST
0x2f5 PUSH1 0x1
0x2f7 ADD
0x2f8 PUSH2 0x291
0x2fb JUMP
---
0x2f4: JUMPDEST 
0x2f5: V318 = 0x1
0x2f7: V319 = ADD 0x1 S0
0x2f8: V320 = 0x291
0x2fb: JUMP 0x291
---
Entry stack: [V12, 0x46, V72, V72, V275, S0]
Stack pops: 1
Stack additions: [V319]
Exit stack: [V12, 0x46, V72, V72, V275, V319]

================================

Block 0x2fc
[0x2fc:0x30f]
---
Predecessors: [0x291]
Successors: [0x310, 0x374]
---
0x2fc JUMPDEST
0x2fd PUSH1 0x0
0x2ff DUP5
0x300 PUSH1 0x1
0x302 PUSH1 0xa0
0x304 PUSH1 0x2
0x306 EXP
0x307 SUB
0x308 AND
0x309 BALANCE
0x30a GT
0x30b ISZERO
0x30c PUSH2 0x374
0x30f JUMPI
---
0x2fc: JUMPDEST 
0x2fd: V321 = 0x0
0x300: V322 = 0x1
0x302: V323 = 0xa0
0x304: V324 = 0x2
0x306: V325 = EXP 0x2 0xa0
0x307: V326 = SUB 0x10000000000000000000000000000000000000000 0x1
0x308: V327 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0x309: V328 = BALANCE V327
0x30a: V329 = GT V328 0x0
0x30b: V330 = ISZERO V329
0x30c: V331 = 0x374
0x30f: JUMPI 0x374 V330
---
Entry stack: [V12, 0x46, V72, V72, V275, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, 0x46, V72, V72, V275, S0]

================================

Block 0x310
[0x310:0x35a]
---
Predecessors: [0x2fc]
Successors: [0x35b, 0x35f]
---
0x310 DUP3
0x311 PUSH1 0x1
0x313 PUSH1 0xa0
0x315 PUSH1 0x2
0x317 EXP
0x318 SUB
0x319 AND
0x31a PUSH4 0x2e1a7d4d
0x31f DUP6
0x320 PUSH1 0x1
0x322 PUSH1 0xa0
0x324 PUSH1 0x2
0x326 EXP
0x327 SUB
0x328 AND
0x329 BALANCE
0x32a PUSH1 0x40
0x32c MLOAD
0x32d PUSH1 0xe0
0x32f PUSH1 0x2
0x331 EXP
0x332 PUSH4 0xffffffff
0x337 DUP5
0x338 AND
0x339 MUL
0x33a DUP2
0x33b MSTORE
0x33c PUSH1 0x4
0x33e DUP2
0x33f ADD
0x340 SWAP2
0x341 SWAP1
0x342 SWAP2
0x343 MSTORE
0x344 PUSH1 0x24
0x346 ADD
0x347 PUSH1 0x0
0x349 PUSH1 0x40
0x34b MLOAD
0x34c DUP1
0x34d DUP4
0x34e SUB
0x34f DUP2
0x350 PUSH1 0x0
0x352 DUP8
0x353 DUP1
0x354 EXTCODESIZE
0x355 ISZERO
0x356 ISZERO
0x357 PUSH2 0x35f
0x35a JUMPI
---
0x311: V332 = 0x1
0x313: V333 = 0xa0
0x315: V334 = 0x2
0x317: V335 = EXP 0x2 0xa0
0x318: V336 = SUB 0x10000000000000000000000000000000000000000 0x1
0x319: V337 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0x31a: V338 = 0x2e1a7d4d
0x320: V339 = 0x1
0x322: V340 = 0xa0
0x324: V341 = 0x2
0x326: V342 = EXP 0x2 0xa0
0x327: V343 = SUB 0x10000000000000000000000000000000000000000 0x1
0x328: V344 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0x329: V345 = BALANCE V344
0x32a: V346 = 0x40
0x32c: V347 = M[0x40]
0x32d: V348 = 0xe0
0x32f: V349 = 0x2
0x331: V350 = EXP 0x2 0xe0
0x332: V351 = 0xffffffff
0x338: V352 = AND 0x2e1a7d4d 0xffffffff
0x339: V353 = MUL 0x2e1a7d4d 0x100000000000000000000000000000000000000000000000000000000
0x33b: M[V347] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
0x33c: V354 = 0x4
0x33f: V355 = ADD V347 0x4
0x343: M[V355] = V345
0x344: V356 = 0x24
0x346: V357 = ADD 0x24 V347
0x347: V358 = 0x0
0x349: V359 = 0x40
0x34b: V360 = M[0x40]
0x34e: V361 = SUB V357 V360
0x350: V362 = 0x0
0x354: V363 = EXTCODESIZE V337
0x355: V364 = ISZERO V363
0x356: V365 = ISZERO V364
0x357: V366 = 0x35f
0x35a: JUMPI 0x35f V365
---
Entry stack: [V12, 0x46, V72, V72, V275, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V337, 0x2e1a7d4d, V357, 0x0, V360, V361, V360, 0x0, V337]
Exit stack: [V12, 0x46, V72, V72, V275, S0, V337, 0x2e1a7d4d, V357, 0x0, V360, V361, V360, 0x0, V337]

================================

Block 0x35b
[0x35b:0x35e]
---
Predecessors: [0x310]
Successors: []
---
0x35b PUSH1 0x0
0x35d DUP1
0x35e REVERT
---
0x35b: V367 = 0x0
0x35e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x46, V72, V72, V275, S9, V337, 0x2e1a7d4d, V357, 0x0, V360, V361, V360, 0x0, V337]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x46, V72, V72, V275, S9, V337, 0x2e1a7d4d, V357, 0x0, V360, V361, V360, 0x0, V337]

================================

Block 0x35f
[0x35f:0x36b]
---
Predecessors: [0x310]
Successors: [0x36c, 0x370]
---
0x35f JUMPDEST
0x360 PUSH2 0x2c6
0x363 GAS
0x364 SUB
0x365 CALL
0x366 ISZERO
0x367 ISZERO
0x368 PUSH2 0x370
0x36b JUMPI
---
0x35f: JUMPDEST 
0x360: V368 = 0x2c6
0x363: V369 = GAS
0x364: V370 = SUB V369 0x2c6
0x365: V371 = CALL V370 V337 0x0 V360 V361 V360 0x0
0x366: V372 = ISZERO V371
0x367: V373 = ISZERO V372
0x368: V374 = 0x370
0x36b: JUMPI 0x370 V373
---
Entry stack: [V12, 0x46, V72, V72, V275, S9, V337, 0x2e1a7d4d, V357, 0x0, V360, V361, V360, 0x0, V337]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x46, V72, V72, V275, S9, V337, 0x2e1a7d4d, V357]

================================

Block 0x36c
[0x36c:0x36f]
---
Predecessors: [0x35f]
Successors: []
---
0x36c PUSH1 0x0
0x36e DUP1
0x36f REVERT
---
0x36c: V375 = 0x0
0x36f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x46, V72, V72, V275, S3, V337, 0x2e1a7d4d, V357]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x46, V72, V72, V275, S3, V337, 0x2e1a7d4d, V357]

================================

Block 0x370
[0x370:0x373]
---
Predecessors: [0x35f]
Successors: [0x374]
---
0x370 JUMPDEST
0x371 POP
0x372 POP
0x373 POP
---
0x370: JUMPDEST 
---
Entry stack: [V12, 0x46, V72, V72, V275, S3, V337, 0x2e1a7d4d, V357]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x46, V72, V72, V275, S3]

================================

Block 0x374
[0x374:0x374]
---
Predecessors: [0x2fc, 0x370]
Successors: [0x375]
---
0x374 JUMPDEST
---
0x374: JUMPDEST 
---
Entry stack: [V12, 0x46, V72, V72, V275, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x46, V72, V72, V275, S0]

================================

Block 0x375
[0x375:0x37a]
---
Predecessors: [0x374]
Successors: [0x46]
---
0x375 JUMPDEST
0x376 POP
0x377 POP
0x378 POP
0x379 POP
0x37a JUMP
---
0x375: JUMPDEST 
0x37a: JUMP 0x46
---
Entry stack: [V12, 0x46, V72, V72, V275, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V12]

================================

Block 0x37b
[0x37b:0x3ac]
---
Predecessors: []
Successors: []
---
0x37b STOP
0x37c LOG1
0x37d PUSH6 0x627a7a723058
0x384 SHA3
0x385 MISSING 0xd6
0x386 MISSING 0xfb
0x387 MISSING 0x4e
0x388 CALLDATALOAD
0x389 COINBASE
0x38a SWAP13
0x38b LOG3
0x38c COINBASE
0x38d PUSH31 0x6929d8c67d8b743a005896a9c07579b23d71de2f9752420029
---
0x37b: STOP 
0x37c: LOG S0 S1 S2
0x37d: V376 = 0x627a7a723058
0x384: V377 = SHA3 0x627a7a723058 S3
0x385: MISSING 0xd6
0x386: MISSING 0xfb
0x387: MISSING 0x4e
0x388: V378 = CALLDATALOAD S0
0x389: V379 = COINBASE
0x38b: LOG S12 V378 S1 S2 S3
0x38c: V380 = COINBASE
0x38d: V381 = 0x6929d8c67d8b743a005896a9c07579b23d71de2f9752420029
---
Entry stack: []
Stack pops: 0
Stack additions: [V377, 0x6929d8c67d8b743a005896a9c07579b23d71de2f9752420029, V380, S4, S5, S6, S7, S8, S9, S10, S11, V379]
Exit stack: []

================================

Function 0:
Public function signature: 0x300b50a
Entry block: 0x4a
Exit block: 0x5d
Body: 0x4a, 0x51, 0x55, 0x5d, 0xc5

Function 1:
Public function signature: 0x41c0e1b5
Entry block: 0x79
Exit block: 0xef
Body: 0x79, 0x80, 0x84, 0xd4, 0xeb, 0xef

Function 2:
Public function signature: 0x6aa3e64d
Entry block: 0x8e
Exit block: 0x48
Body: 0x46, 0x47, 0x48, 0x8e, 0x95, 0x99, 0xfe, 0x115, 0x119, 0x12c, 0x130, 0x169, 0x16d, 0x16e, 0x16f

Function 3:
Public function signature: 0x7b88eae1
Entry block: 0xaf
Exit block: 0x48
Body: 0x46, 0x47, 0x48, 0xaf, 0x172, 0x1af, 0x1b3, 0x1c0, 0x1c4, 0x20a, 0x20e, 0x21b, 0x21f, 0x25b, 0x25f, 0x26c, 0x270, 0x288, 0x289, 0x291, 0x29a, 0x2db, 0x2df, 0x2ec, 0x2f0, 0x2f4, 0x2fc, 0x310, 0x35b, 0x35f, 0x36c, 0x370, 0x374, 0x375

Function 4:
Public fallback function
Entry block: 0x46
Exit block: 0x48
Body: 0x46, 0x47, 0x48

