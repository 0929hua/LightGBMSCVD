Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x40]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x40
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x40
0xa: JUMPI 0x40 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x4b]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x41c0e1b5
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x4b
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x41c0e1b5
0x1a: V12 = EQ V10 0x41c0e1b5
0x1b: V13 = 0x4b
0x1e: JUMPI 0x4b V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0x75]
---
0x1f DUP1
0x20 PUSH4 0x8da5cb5b
0x25 EQ
0x26 PUSH2 0x75
0x29 JUMPI
---
0x20: V14 = 0x8da5cb5b
0x25: V15 = EQ 0x8da5cb5b V10
0x26: V16 = 0x75
0x29: JUMPI 0x75 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0x87]
---
0x2a DUP1
0x2b PUSH4 0xe4b2fb79
0x30 EQ
0x31 PUSH2 0x87
0x34 JUMPI
---
0x2b: V17 = 0xe4b2fb79
0x30: V18 = EQ 0xe4b2fb79 V10
0x31: V19 = 0x87
0x34: JUMPI 0x87 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0xbd]
---
0x35 DUP1
0x36 PUSH4 0xe97dcb62
0x3b EQ
0x3c PUSH2 0xbd
0x3f JUMPI
---
0x36: V20 = 0xe97dcb62
0x3b: V21 = EQ 0xe97dcb62 V10
0x3c: V22 = 0xbd
0x3f: JUMPI 0xbd V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x0, 0x35]
Successors: [0xc1]
---
0x40 JUMPDEST
0x41 PUSH2 0x102
0x44 PUSH2 0x104
0x47 PUSH2 0xc1
0x4a JUMP
---
0x40: JUMPDEST 
0x41: V23 = 0x102
0x44: V24 = 0x104
0x47: V25 = 0xc1
0x4a: JUMP 0xc1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x102, 0x104]
Exit stack: [V10, 0x102, 0x104]

================================

Block 0x4b
[0x4b:0x67]
---
Predecessors: [0xb]
Successors: [0x68, 0x104]
---
0x4b JUMPDEST
0x4c PUSH2 0x102
0x4f PUSH1 0xf
0x51 SLOAD
0x52 PUSH1 0x1
0x54 PUSH1 0xa0
0x56 PUSH1 0x2
0x58 EXP
0x59 SUB
0x5a SWAP1
0x5b DUP2
0x5c AND
0x5d CALLER
0x5e SWAP2
0x5f SWAP1
0x60 SWAP2
0x61 AND
0x62 EQ
0x63 ISZERO
0x64 PUSH2 0x104
0x67 JUMPI
---
0x4b: JUMPDEST 
0x4c: V26 = 0x102
0x4f: V27 = 0xf
0x51: V28 = S[0xf]
0x52: V29 = 0x1
0x54: V30 = 0xa0
0x56: V31 = 0x2
0x58: V32 = EXP 0x2 0xa0
0x59: V33 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5c: V34 = AND 0xffffffffffffffffffffffffffffffffffffffff V28
0x5d: V35 = CALLER
0x61: V36 = AND V35 0xffffffffffffffffffffffffffffffffffffffff
0x62: V37 = EQ V36 V34
0x63: V38 = ISZERO V37
0x64: V39 = 0x104
0x67: JUMPI 0x104 V38
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x102]
Exit stack: [V10, 0x102]

================================

Block 0x68
[0x68:0x74]
---
Predecessors: [0x4b]
Successors: []
---
0x68 PUSH1 0xf
0x6a SLOAD
0x6b PUSH1 0x1
0x6d PUSH1 0xa0
0x6f PUSH1 0x2
0x71 EXP
0x72 SUB
0x73 AND
0x74 SELFDESTRUCT
---
0x68: V40 = 0xf
0x6a: V41 = S[0xf]
0x6b: V42 = 0x1
0x6d: V43 = 0xa0
0x6f: V44 = 0x2
0x71: V45 = EXP 0x2 0xa0
0x72: V46 = SUB 0x10000000000000000000000000000000000000000 0x1
0x73: V47 = AND 0xffffffffffffffffffffffffffffffffffffffff V41
0x74: SELFDESTRUCT V47
---
Entry stack: [V10, 0x102]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x102]

================================

Block 0x75
[0x75:0x86]
---
Predecessors: [0x1f]
Successors: [0x106]
---
0x75 JUMPDEST
0x76 PUSH2 0x106
0x79 PUSH1 0xf
0x7b SLOAD
0x7c PUSH1 0x1
0x7e PUSH1 0xa0
0x80 PUSH1 0x2
0x82 EXP
0x83 SUB
0x84 AND
0x85 DUP2
0x86 JUMP
---
0x75: JUMPDEST 
0x76: V48 = 0x106
0x79: V49 = 0xf
0x7b: V50 = S[0xf]
0x7c: V51 = 0x1
0x7e: V52 = 0xa0
0x80: V53 = 0x2
0x82: V54 = EXP 0x2 0xa0
0x83: V55 = SUB 0x10000000000000000000000000000000000000000 0x1
0x84: V56 = AND 0xffffffffffffffffffffffffffffffffffffffff V50
0x86: JUMP 0x106
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x106, V56]
Exit stack: [V10, 0x106, V56]

================================

Block 0x87
[0x87:0x99]
---
Predecessors: [0x2a]
Successors: [0x9a]
---
0x87 JUMPDEST
0x88 PUSH2 0x123
0x8b PUSH1 0x4
0x8d CALLDATALOAD
0x8e PUSH1 0x0
0x90 DUP2
0x91 PUSH1 0x5
0x93 DUP2
0x94 LT
0x95 ISZERO
0x96 PUSH2 0x2
0x99 JUMPI
---
0x87: JUMPDEST 
0x88: V57 = 0x123
0x8b: V58 = 0x4
0x8d: V59 = CALLDATALOAD 0x4
0x8e: V60 = 0x0
0x91: V61 = 0x5
0x94: V62 = LT V59 0x5
0x95: V63 = ISZERO V62
0x96: V64 = 0x2
0x99: THROWI V63
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x123, V59, 0x0, V59]
Exit stack: [V10, 0x123, V59, 0x0, V59]

================================

Block 0x9a
[0x9a:0xbc]
---
Predecessors: [0x87]
Successors: [0x123]
---
0x9a POP
0x9b POP
0x9c PUSH1 0x3
0x9e MUL
0x9f DUP1
0xa0 SLOAD
0xa1 PUSH1 0x1
0xa3 DUP3
0xa4 ADD
0xa5 SLOAD
0xa6 PUSH1 0x2
0xa8 SWAP3
0xa9 SWAP1
0xaa SWAP3
0xab ADD
0xac SLOAD
0xad PUSH1 0x1
0xaf PUSH1 0xa0
0xb1 PUSH1 0x2
0xb3 EXP
0xb4 SUB
0xb5 SWAP2
0xb6 SWAP1
0xb7 SWAP2
0xb8 AND
0xb9 SWAP2
0xba SWAP1
0xbb DUP4
0xbc JUMP
---
0x9c: V65 = 0x3
0x9e: V66 = MUL 0x3 V59
0xa0: V67 = S[V66]
0xa1: V68 = 0x1
0xa4: V69 = ADD V66 0x1
0xa5: V70 = S[V69]
0xa6: V71 = 0x2
0xab: V72 = ADD 0x2 V66
0xac: V73 = S[V72]
0xad: V74 = 0x1
0xaf: V75 = 0xa0
0xb1: V76 = 0x2
0xb3: V77 = EXP 0x2 0xa0
0xb4: V78 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb8: V79 = AND 0xffffffffffffffffffffffffffffffffffffffff V67
0xbc: JUMP 0x123
---
Entry stack: [V10, 0x123, V59, 0x0, V59]
Stack pops: 4
Stack additions: [S3, V79, V70, V73]
Exit stack: [V10, 0x123, V79, V70, V73]

================================

Block 0xbd
[0xbd:0xc0]
---
Predecessors: [0x35]
Successors: [0xc1]
---
0xbd JUMPDEST
0xbe PUSH2 0x102
---
0xbd: JUMPDEST 
0xbe: V80 = 0x102
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x102]
Exit stack: [V10, 0x102]

================================

Block 0xc1
[0xc1:0xdd]
---
Predecessors: [0x40, 0xbd]
Successors: [0xde, 0x14c]
---
0xc1 JUMPDEST
0xc2 PUSH1 0x0
0xc4 PUSH1 0x0
0xc6 PUSH1 0x0
0xc8 PUSH1 0x0
0xca PUSH1 0x0
0xcc PUSH1 0x0
0xce PUSH8 0x16345785d8a0000
0xd7 CALLVALUE
0xd8 LT
0xd9 ISZERO
0xda PUSH2 0x14c
0xdd JUMPI
---
0xc1: JUMPDEST 
0xc2: V81 = 0x0
0xc4: V82 = 0x0
0xc6: V83 = 0x0
0xc8: V84 = 0x0
0xca: V85 = 0x0
0xcc: V86 = 0x0
0xce: V87 = 0x16345785d8a0000
0xd7: V88 = CALLVALUE
0xd8: V89 = LT V88 0x16345785d8a0000
0xd9: V90 = ISZERO V89
0xda: V91 = 0x14c
0xdd: JUMPI 0x14c V90
---
Entry stack: [V10, S1, {0x102, 0x104}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V10, S1, {0x102, 0x104}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xde
[0xde:0x101]
---
Predecessors: [0xc1]
Successors: [0x463]
---
0xde PUSH1 0x40
0xe0 MLOAD
0xe1 PUSH1 0x1
0xe3 PUSH1 0xa0
0xe5 PUSH1 0x2
0xe7 EXP
0xe8 SUB
0xe9 CALLER
0xea AND
0xeb SWAP1
0xec DUP3
0xed SWAP1
0xee CALLVALUE
0xef SWAP1
0xf0 DUP3
0xf1 DUP2
0xf2 DUP2
0xf3 DUP2
0xf4 DUP6
0xf5 DUP9
0xf6 DUP4
0xf7 CALL
0xf8 SWAP4
0xf9 POP
0xfa POP
0xfb POP
0xfc POP
0xfd POP
0xfe PUSH2 0x463
0x101 JUMP
---
0xde: V92 = 0x40
0xe0: V93 = M[0x40]
0xe1: V94 = 0x1
0xe3: V95 = 0xa0
0xe5: V96 = 0x2
0xe7: V97 = EXP 0x2 0xa0
0xe8: V98 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe9: V99 = CALLER
0xea: V100 = AND V99 0xffffffffffffffffffffffffffffffffffffffff
0xee: V101 = CALLVALUE
0xf7: V102 = CALL 0x0 V100 V101 V93 0x0 V93 0x0
0xfe: V103 = 0x463
0x101: JUMP 0x463
---
Entry stack: [V10, S7, {0x102, 0x104}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, S7, {0x102, 0x104}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x102
[0x102:0x103]
---
Predecessors: [0x104, 0x463]
Successors: []
---
0x102 JUMPDEST
0x103 STOP
---
0x102: JUMPDEST 
0x103: STOP 
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0x104
[0x104:0x105]
---
Predecessors: [0x4b, 0x463]
Successors: [0x102]
---
0x104 JUMPDEST
0x105 JUMP
---
0x104: JUMPDEST 
0x105: JUMP S0
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x106
[0x106:0x122]
---
Predecessors: [0x75]
Successors: []
---
0x106 JUMPDEST
0x107 PUSH1 0x40
0x109 DUP1
0x10a MLOAD
0x10b PUSH1 0x1
0x10d PUSH1 0xa0
0x10f PUSH1 0x2
0x111 EXP
0x112 SUB
0x113 SWAP3
0x114 SWAP1
0x115 SWAP3
0x116 AND
0x117 DUP3
0x118 MSTORE
0x119 MLOAD
0x11a SWAP1
0x11b DUP2
0x11c SWAP1
0x11d SUB
0x11e PUSH1 0x20
0x120 ADD
0x121 SWAP1
0x122 RETURN
---
0x106: JUMPDEST 
0x107: V104 = 0x40
0x10a: V105 = M[0x40]
0x10b: V106 = 0x1
0x10d: V107 = 0xa0
0x10f: V108 = 0x2
0x111: V109 = EXP 0x2 0xa0
0x112: V110 = SUB 0x10000000000000000000000000000000000000000 0x1
0x116: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0x118: M[V105] = V111
0x119: V112 = M[0x40]
0x11d: V113 = SUB V105 V112
0x11e: V114 = 0x20
0x120: V115 = ADD 0x20 V113
0x122: RETURN V112 V115
---
Entry stack: [V10, 0x106, V56]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x106]

================================

Block 0x123
[0x123:0x14b]
---
Predecessors: [0x9a]
Successors: []
---
0x123 JUMPDEST
0x124 PUSH1 0x40
0x126 DUP1
0x127 MLOAD
0x128 PUSH1 0x1
0x12a PUSH1 0xa0
0x12c PUSH1 0x2
0x12e EXP
0x12f SUB
0x130 SWAP5
0x131 SWAP1
0x132 SWAP5
0x133 AND
0x134 DUP5
0x135 MSTORE
0x136 PUSH1 0x20
0x138 DUP5
0x139 ADD
0x13a SWAP3
0x13b SWAP1
0x13c SWAP3
0x13d MSTORE
0x13e DUP3
0x13f DUP3
0x140 ADD
0x141 MSTORE
0x142 MLOAD
0x143 SWAP1
0x144 DUP2
0x145 SWAP1
0x146 SUB
0x147 PUSH1 0x60
0x149 ADD
0x14a SWAP1
0x14b RETURN
---
0x123: JUMPDEST 
0x124: V116 = 0x40
0x127: V117 = M[0x40]
0x128: V118 = 0x1
0x12a: V119 = 0xa0
0x12c: V120 = 0x2
0x12e: V121 = EXP 0x2 0xa0
0x12f: V122 = SUB 0x10000000000000000000000000000000000000000 0x1
0x133: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x135: M[V117] = V123
0x136: V124 = 0x20
0x139: V125 = ADD V117 0x20
0x13d: M[V125] = V70
0x140: V126 = ADD 0x40 V117
0x141: M[V126] = V73
0x142: V127 = M[0x40]
0x146: V128 = SUB V117 V127
0x147: V129 = 0x60
0x149: V130 = ADD 0x60 V128
0x14b: RETURN V127 V130
---
Entry stack: [V10, 0x123, V79, V70, V73]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x123]

================================

Block 0x14c
[0x14c:0x1bc]
---
Predecessors: [0xc1]
Successors: [0x1bd, 0x1c1]
---
0x14c JUMPDEST
0x14d PUSH1 0x40
0x14f MLOAD
0x150 PUSH1 0x64
0x152 PUSH1 0xa
0x154 CALLVALUE
0x155 MUL
0x156 DIV
0x157 SWAP7
0x158 POP
0x159 PUSH1 0x1
0x15b PUSH1 0xa0
0x15d PUSH1 0x2
0x15f EXP
0x160 SUB
0x161 CALLER
0x162 AND
0x163 SWAP1
0x164 PUSH1 0x0
0x166 SWAP1
0x167 DUP9
0x168 SWAP1
0x169 DUP3
0x16a DUP2
0x16b DUP2
0x16c DUP2
0x16d DUP6
0x16e DUP9
0x16f DUP4
0x170 CALL
0x171 POP
0x172 PUSH1 0xf
0x174 SLOAD
0x175 SWAP2
0x176 SWAP9
0x177 POP
0x178 PUSH1 0x1
0x17a PUSH1 0xa0
0x17c PUSH1 0x2
0x17e EXP
0x17f SUB
0x180 SWAP2
0x181 SWAP1
0x182 SWAP2
0x183 AND
0x184 SWAP3
0x185 POP
0x186 DUP8
0x187 SWAP1
0x188 DUP3
0x189 DUP2
0x18a DUP2
0x18b DUP2
0x18c DUP6
0x18d DUP9
0x18e DUP4
0x18f CALL
0x190 POP
0x191 POP
0x192 PUSH1 0xe
0x194 SLOAD
0x195 PUSH1 0xc
0x197 SLOAD
0x198 NUMBER
0x199 SWAP2
0x19a SWAP1
0x19b SWAP2
0x19c SUB
0x19d SWAP8
0x19e POP
0x19f PUSH1 0x1
0x1a1 SWAP7
0x1a2 POP
0x1a3 PUSH1 0x1
0x1a5 PUSH1 0xa0
0x1a7 PUSH1 0x2
0x1a9 EXP
0x1aa SUB
0x1ab SWAP1
0x1ac DUP2
0x1ad AND
0x1ae CALLER
0x1af SWAP1
0x1b0 SWAP2
0x1b1 AND
0x1b2 EQ
0x1b3 ISZERO
0x1b4 SWAP3
0x1b5 POP
0x1b6 PUSH2 0x1c1
0x1b9 SWAP2
0x1ba POP
0x1bb POP
0x1bc JUMPI
---
0x14c: JUMPDEST 
0x14d: V131 = 0x40
0x14f: V132 = M[0x40]
0x150: V133 = 0x64
0x152: V134 = 0xa
0x154: V135 = CALLVALUE
0x155: V136 = MUL V135 0xa
0x156: V137 = DIV V136 0x64
0x159: V138 = 0x1
0x15b: V139 = 0xa0
0x15d: V140 = 0x2
0x15f: V141 = EXP 0x2 0xa0
0x160: V142 = SUB 0x10000000000000000000000000000000000000000 0x1
0x161: V143 = CALLER
0x162: V144 = AND V143 0xffffffffffffffffffffffffffffffffffffffff
0x164: V145 = 0x0
0x170: V146 = CALL 0x0 V144 V137 V132 0x0 V132 0x0
0x172: V147 = 0xf
0x174: V148 = S[0xf]
0x178: V149 = 0x1
0x17a: V150 = 0xa0
0x17c: V151 = 0x2
0x17e: V152 = EXP 0x2 0xa0
0x17f: V153 = SUB 0x10000000000000000000000000000000000000000 0x1
0x183: V154 = AND 0xffffffffffffffffffffffffffffffffffffffff V148
0x18f: V155 = CALL 0x0 V154 V137 V132 0x0 V132 0x0
0x192: V156 = 0xe
0x194: V157 = S[0xe]
0x195: V158 = 0xc
0x197: V159 = S[0xc]
0x198: V160 = NUMBER
0x19c: V161 = SUB V160 V157
0x19f: V162 = 0x1
0x1a3: V163 = 0x1
0x1a5: V164 = 0xa0
0x1a7: V165 = 0x2
0x1a9: V166 = EXP 0x2 0xa0
0x1aa: V167 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ad: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff V159
0x1ae: V169 = CALLER
0x1b1: V170 = AND 0xffffffffffffffffffffffffffffffffffffffff V169
0x1b2: V171 = EQ V170 V168
0x1b3: V172 = ISZERO V171
0x1b6: V173 = 0x1c1
0x1bc: JUMPI 0x1c1 V172
---
Entry stack: [V10, S7, {0x102, 0x104}, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [V137, V137, V161, 0x1, S1, S0]
Exit stack: [V10, S7, {0x102, 0x104}, V137, V137, V161, 0x1, 0x0, 0x0]

================================

Block 0x1bd
[0x1bd:0x1c0]
---
Predecessors: [0x14c]
Successors: [0x1c1]
---
0x1bd PUSH1 0x0
0x1bf SWAP3
0x1c0 POP
---
0x1bd: V174 = 0x0
---
Entry stack: [V10, S7, {0x102, 0x104}, V137, V137, V161, 0x1, 0x0, 0x0]
Stack pops: 3
Stack additions: [0x0, S1, S0]
Exit stack: [V10, S7, {0x102, 0x104}, V137, V137, V161, 0x0, 0x0, 0x0]

================================

Block 0x1c1
[0x1c1:0x1d9]
---
Predecessors: [0x14c, 0x1bd]
Successors: [0x1da, 0x1de]
---
0x1c1 JUMPDEST
0x1c2 PUSH1 0x9
0x1c4 SLOAD
0x1c5 PUSH1 0x1
0x1c7 PUSH1 0xa0
0x1c9 PUSH1 0x2
0x1cb EXP
0x1cc SUB
0x1cd SWAP1
0x1ce DUP2
0x1cf AND
0x1d0 CALLER
0x1d1 SWAP1
0x1d2 SWAP2
0x1d3 AND
0x1d4 EQ
0x1d5 ISZERO
0x1d6 PUSH2 0x1de
0x1d9 JUMPI
---
0x1c1: JUMPDEST 
0x1c2: V175 = 0x9
0x1c4: V176 = S[0x9]
0x1c5: V177 = 0x1
0x1c7: V178 = 0xa0
0x1c9: V179 = 0x2
0x1cb: V180 = EXP 0x2 0xa0
0x1cc: V181 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1cf: V182 = AND 0xffffffffffffffffffffffffffffffffffffffff V176
0x1d0: V183 = CALLER
0x1d3: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V183
0x1d4: V185 = EQ V184 V182
0x1d5: V186 = ISZERO V185
0x1d6: V187 = 0x1de
0x1d9: JUMPI 0x1de V186
---
Entry stack: [V10, S7, {0x102, 0x104}, V137, V137, V161, {0x0, 0x1}, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S7, {0x102, 0x104}, V137, V137, V161, {0x0, 0x1}, 0x0, 0x0]

================================

Block 0x1da
[0x1da:0x1dd]
---
Predecessors: [0x1c1]
Successors: [0x1de]
---
0x1da PUSH1 0x0
0x1dc SWAP3
0x1dd POP
---
0x1da: V188 = 0x0
---
Entry stack: [V10, S7, {0x102, 0x104}, V137, V137, V161, {0x0, 0x1}, 0x0, 0x0]
Stack pops: 3
Stack additions: [0x0, S1, S0]
Exit stack: [V10, S7, {0x102, 0x104}, V137, V137, V161, 0x0, 0x0, 0x0]

================================

Block 0x1de
[0x1de:0x1f6]
---
Predecessors: [0x1c1, 0x1da]
Successors: [0x1f7, 0x1fb]
---
0x1de JUMPDEST
0x1df PUSH1 0x6
0x1e1 SLOAD
0x1e2 PUSH1 0x1
0x1e4 PUSH1 0xa0
0x1e6 PUSH1 0x2
0x1e8 EXP
0x1e9 SUB
0x1ea SWAP1
0x1eb DUP2
0x1ec AND
0x1ed CALLER
0x1ee SWAP1
0x1ef SWAP2
0x1f0 AND
0x1f1 EQ
0x1f2 ISZERO
0x1f3 PUSH2 0x1fb
0x1f6 JUMPI
---
0x1de: JUMPDEST 
0x1df: V189 = 0x6
0x1e1: V190 = S[0x6]
0x1e2: V191 = 0x1
0x1e4: V192 = 0xa0
0x1e6: V193 = 0x2
0x1e8: V194 = EXP 0x2 0xa0
0x1e9: V195 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ec: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff V190
0x1ed: V197 = CALLER
0x1f0: V198 = AND 0xffffffffffffffffffffffffffffffffffffffff V197
0x1f1: V199 = EQ V198 V196
0x1f2: V200 = ISZERO V199
0x1f3: V201 = 0x1fb
0x1f6: JUMPI 0x1fb V200
---
Entry stack: [V10, S7, {0x102, 0x104}, V137, V137, V161, {0x0, 0x1}, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S7, {0x102, 0x104}, V137, V137, V161, {0x0, 0x1}, 0x0, 0x0]

================================

Block 0x1f7
[0x1f7:0x1fa]
---
Predecessors: [0x1de]
Successors: [0x1fb]
---
0x1f7 PUSH1 0x0
0x1f9 SWAP3
0x1fa POP
---
0x1f7: V202 = 0x0
---
Entry stack: [V10, S7, {0x102, 0x104}, V137, V137, V161, {0x0, 0x1}, 0x0, 0x0]
Stack pops: 3
Stack additions: [0x0, S1, S0]
Exit stack: [V10, S7, {0x102, 0x104}, V137, V137, V161, 0x0, 0x0, 0x0]

================================

Block 0x1fb
[0x1fb:0x213]
---
Predecessors: [0x1de, 0x1f7]
Successors: [0x214, 0x218]
---
0x1fb JUMPDEST
0x1fc PUSH1 0x3
0x1fe SLOAD
0x1ff PUSH1 0x1
0x201 PUSH1 0xa0
0x203 PUSH1 0x2
0x205 EXP
0x206 SUB
0x207 SWAP1
0x208 DUP2
0x209 AND
0x20a CALLER
0x20b SWAP1
0x20c SWAP2
0x20d AND
0x20e EQ
0x20f ISZERO
0x210 PUSH2 0x218
0x213 JUMPI
---
0x1fb: JUMPDEST 
0x1fc: V203 = 0x3
0x1fe: V204 = S[0x3]
0x1ff: V205 = 0x1
0x201: V206 = 0xa0
0x203: V207 = 0x2
0x205: V208 = EXP 0x2 0xa0
0x206: V209 = SUB 0x10000000000000000000000000000000000000000 0x1
0x209: V210 = AND 0xffffffffffffffffffffffffffffffffffffffff V204
0x20a: V211 = CALLER
0x20d: V212 = AND 0xffffffffffffffffffffffffffffffffffffffff V211
0x20e: V213 = EQ V212 V210
0x20f: V214 = ISZERO V213
0x210: V215 = 0x218
0x213: JUMPI 0x218 V214
---
Entry stack: [V10, S7, {0x102, 0x104}, V137, V137, V161, {0x0, 0x1}, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S7, {0x102, 0x104}, V137, V137, V161, {0x0, 0x1}, 0x0, 0x0]

================================

Block 0x214
[0x214:0x217]
---
Predecessors: [0x1fb]
Successors: [0x218]
---
0x214 PUSH1 0x0
0x216 SWAP3
0x217 POP
---
0x214: V216 = 0x0
---
Entry stack: [V10, S7, {0x102, 0x104}, V137, V137, V161, {0x0, 0x1}, 0x0, 0x0]
Stack pops: 3
Stack additions: [0x0, S1, S0]
Exit stack: [V10, S7, {0x102, 0x104}, V137, V137, V161, 0x0, 0x0, 0x0]

================================

Block 0x218
[0x218:0x236]
---
Predecessors: [0x1fb, 0x214]
Successors: [0x237, 0x23b]
---
0x218 JUMPDEST
0x219 PUSH1 0x1
0x21b PUSH1 0xa0
0x21d PUSH1 0x2
0x21f EXP
0x220 SUB
0x221 CALLER
0x222 AND
0x223 PUSH1 0x0
0x225 DUP1
0x226 POP
0x227 SLOAD
0x228 PUSH1 0x1
0x22a PUSH1 0xa0
0x22c PUSH1 0x2
0x22e EXP
0x22f SUB
0x230 AND
0x231 EQ
0x232 ISZERO
0x233 PUSH2 0x23b
0x236 JUMPI
---
0x218: JUMPDEST 
0x219: V217 = 0x1
0x21b: V218 = 0xa0
0x21d: V219 = 0x2
0x21f: V220 = EXP 0x2 0xa0
0x220: V221 = SUB 0x10000000000000000000000000000000000000000 0x1
0x221: V222 = CALLER
0x222: V223 = AND V222 0xffffffffffffffffffffffffffffffffffffffff
0x223: V224 = 0x0
0x227: V225 = S[0x0]
0x228: V226 = 0x1
0x22a: V227 = 0xa0
0x22c: V228 = 0x2
0x22e: V229 = EXP 0x2 0xa0
0x22f: V230 = SUB 0x10000000000000000000000000000000000000000 0x1
0x230: V231 = AND 0xffffffffffffffffffffffffffffffffffffffff V225
0x231: V232 = EQ V231 V223
0x232: V233 = ISZERO V232
0x233: V234 = 0x23b
0x236: JUMPI 0x23b V233
---
Entry stack: [V10, S7, {0x102, 0x104}, V137, V137, V161, {0x0, 0x1}, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S7, {0x102, 0x104}, V137, V137, V161, {0x0, 0x1}, 0x0, 0x0]

================================

Block 0x237
[0x237:0x23a]
---
Predecessors: [0x218]
Successors: [0x23b]
---
0x237 PUSH1 0x0
0x239 SWAP3
0x23a POP
---
0x237: V235 = 0x0
---
Entry stack: [V10, S7, {0x102, 0x104}, V137, V137, V161, {0x0, 0x1}, 0x0, 0x0]
Stack pops: 3
Stack additions: [0x0, S1, S0]
Exit stack: [V10, S7, {0x102, 0x104}, V137, V137, V161, 0x0, 0x0, 0x0]

================================

Block 0x23b
[0x23b:0x250]
---
Predecessors: [0x218, 0x237]
Successors: [0x251, 0x256]
---
0x23b JUMPDEST
0x23c PUSH1 0xd
0x23e SLOAD
0x23f PUSH1 0x64
0x241 PUSH1 0x14
0x243 SWAP2
0x244 DUP3
0x245 MUL
0x246 DIV
0x247 SWAP3
0x248 POP
0x249 DUP5
0x24a LT
0x24b DUP1
0x24c ISZERO
0x24d PUSH2 0x256
0x250 JUMPI
---
0x23b: JUMPDEST 
0x23c: V236 = 0xd
0x23e: V237 = S[0xd]
0x23f: V238 = 0x64
0x241: V239 = 0x14
0x245: V240 = MUL 0x14 V237
0x246: V241 = DIV V240 0x64
0x24a: V242 = LT V161 0x14
0x24c: V243 = ISZERO V242
0x24d: V244 = 0x256
0x250: JUMPI 0x256 V243
---
Entry stack: [V10, S7, {0x102, 0x104}, V137, V137, V161, {0x0, 0x1}, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, V241, S0, V242]
Exit stack: [V10, S7, {0x102, 0x104}, V137, V137, V161, {0x0, 0x1}, V241, 0x0, V242]

================================

Block 0x251
[0x251:0x255]
---
Predecessors: [0x23b]
Successors: [0x256]
---
0x251 POP
0x252 DUP3
0x253 PUSH1 0x1
0x255 EQ
---
0x253: V245 = 0x1
0x255: V246 = EQ 0x1 {0x0, 0x1}
---
Entry stack: [V10, S8, {0x102, 0x104}, V137, V137, V161, {0x0, 0x1}, V241, 0x0, V242]
Stack pops: 4
Stack additions: [S3, S2, S1, V246]
Exit stack: [V10, S8, {0x102, 0x104}, V137, V137, V161, {0x0, 0x1}, V241, 0x0, V246]

================================

Block 0x256
[0x256:0x25b]
---
Predecessors: [0x23b, 0x251]
Successors: [0x25c, 0x264]
---
0x256 JUMPDEST
0x257 ISZERO
0x258 PUSH2 0x264
0x25b JUMPI
---
0x256: JUMPDEST 
0x257: V247 = ISZERO S0
0x258: V248 = 0x264
0x25b: JUMPI 0x264 V247
---
Entry stack: [V10, S8, {0x102, 0x104}, V137, V137, V161, {0x0, 0x1}, V241, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S8, {0x102, 0x104}, V137, V137, V161, {0x0, 0x1}, V241, 0x0]

================================

Block 0x25c
[0x25c:0x263]
---
Predecessors: [0x256]
Successors: [0x264]
---
0x25c PUSH1 0xd
0x25e SLOAD
0x25f PUSH1 0x2
0x261 MUL
0x262 SWAP2
0x263 POP
---
0x25c: V249 = 0xd
0x25e: V250 = S[0xd]
0x25f: V251 = 0x2
0x261: V252 = MUL 0x2 V250
---
Entry stack: [V10, S7, {0x102, 0x104}, V137, V137, V161, {0x0, 0x1}, V241, 0x0]
Stack pops: 2
Stack additions: [V252, S0]
Exit stack: [V10, S7, {0x102, 0x104}, V137, V137, V161, {0x0, 0x1}, V252, 0x0]

================================

Block 0x264
[0x264:0x26c]
---
Predecessors: [0x256, 0x25c]
Successors: [0x26d, 0x292]
---
0x264 JUMPDEST
0x265 PUSH1 0x0
0x267 DUP3
0x268 EQ
0x269 PUSH2 0x292
0x26c JUMPI
---
0x264: JUMPDEST 
0x265: V253 = 0x0
0x268: V254 = EQ S1 0x0
0x269: V255 = 0x292
0x26c: JUMPI 0x292 V254
---
Entry stack: [V10, S7, {0x102, 0x104}, V137, V137, V161, {0x0, 0x1}, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, S7, {0x102, 0x104}, V137, V137, V161, {0x0, 0x1}, S1, 0x0]

================================

Block 0x26d
[0x26d:0x291]
---
Predecessors: [0x264]
Successors: [0x292]
---
0x26d PUSH1 0xc
0x26f SLOAD
0x270 PUSH1 0x40
0x272 MLOAD
0x273 PUSH1 0x1
0x275 PUSH1 0xa0
0x277 PUSH1 0x2
0x279 EXP
0x27a SUB
0x27b SWAP2
0x27c SWAP1
0x27d SWAP2
0x27e AND
0x27f SWAP1
0x280 PUSH1 0x0
0x282 SWAP1
0x283 DUP5
0x284 SWAP1
0x285 DUP3
0x286 DUP2
0x287 DUP2
0x288 DUP2
0x289 DUP6
0x28a DUP9
0x28b DUP4
0x28c CALL
0x28d POP
0x28e POP
0x28f POP
0x290 POP
0x291 POP
---
0x26d: V256 = 0xc
0x26f: V257 = S[0xc]
0x270: V258 = 0x40
0x272: V259 = M[0x40]
0x273: V260 = 0x1
0x275: V261 = 0xa0
0x277: V262 = 0x2
0x279: V263 = EXP 0x2 0xa0
0x27a: V264 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27e: V265 = AND 0xffffffffffffffffffffffffffffffffffffffff V257
0x280: V266 = 0x0
0x28c: V267 = CALL 0x0 V265 S1 V259 0x0 V259 0x0
---
Entry stack: [V10, S7, {0x102, 0x104}, V137, V137, V161, {0x0, 0x1}, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, S7, {0x102, 0x104}, V137, V137, V161, {0x0, 0x1}, S1, 0x0]

================================

Block 0x292
[0x292:0x2d2]
---
Predecessors: [0x264, 0x26d]
Successors: [0x2d3, 0x2fd]
---
0x292 JUMPDEST
0x293 PUSH1 0xc
0x295 DUP1
0x296 SLOAD
0x297 PUSH1 0x9
0x299 SLOAD
0x29a PUSH1 0x1
0x29c PUSH1 0xa0
0x29e PUSH1 0x2
0x2a0 EXP
0x2a1 SUB
0x2a2 NOT
0x2a3 SWAP1
0x2a4 SWAP2
0x2a5 AND
0x2a6 PUSH1 0x1
0x2a8 PUSH1 0xa0
0x2aa PUSH1 0x2
0x2ac EXP
0x2ad SUB
0x2ae SWAP2
0x2af SWAP1
0x2b0 SWAP2
0x2b1 AND
0x2b2 OR
0x2b3 SWAP1
0x2b4 SSTORE
0x2b5 PUSH1 0xa
0x2b7 DUP1
0x2b8 SLOAD
0x2b9 PUSH1 0xd
0x2bb DUP2
0x2bc SWAP1
0x2bd SSTORE
0x2be PUSH1 0xb
0x2c0 SLOAD
0x2c1 PUSH1 0xe
0x2c3 SSTORE
0x2c4 PUSH1 0x64
0x2c6 SWAP2
0x2c7 MUL
0x2c8 DIV
0x2c9 SWAP6
0x2ca POP
0x2cb PUSH1 0x0
0x2cd DUP7
0x2ce EQ
0x2cf PUSH2 0x2fd
0x2d2 JUMPI
---
0x292: JUMPDEST 
0x293: V268 = 0xc
0x296: V269 = S[0xc]
0x297: V270 = 0x9
0x299: V271 = S[0x9]
0x29a: V272 = 0x1
0x29c: V273 = 0xa0
0x29e: V274 = 0x2
0x2a0: V275 = EXP 0x2 0xa0
0x2a1: V276 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a2: V277 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2a5: V278 = AND V269 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x2a6: V279 = 0x1
0x2a8: V280 = 0xa0
0x2aa: V281 = 0x2
0x2ac: V282 = EXP 0x2 0xa0
0x2ad: V283 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b1: V284 = AND 0xffffffffffffffffffffffffffffffffffffffff V271
0x2b2: V285 = OR V284 V278
0x2b4: S[0xc] = V285
0x2b5: V286 = 0xa
0x2b8: V287 = S[0xa]
0x2b9: V288 = 0xd
0x2bd: S[0xd] = V287
0x2be: V289 = 0xb
0x2c0: V290 = S[0xb]
0x2c1: V291 = 0xe
0x2c3: S[0xe] = V290
0x2c4: V292 = 0x64
0x2c7: V293 = MUL 0xa V287
0x2c8: V294 = DIV V293 0x64
0x2cb: V295 = 0x0
0x2ce: V296 = EQ V294 0x0
0x2cf: V297 = 0x2fd
0x2d2: JUMPI 0x2fd V296
---
Entry stack: [V10, S7, {0x102, 0x104}, V137, V137, V161, {0x0, 0x1}, S1, 0x0]
Stack pops: 6
Stack additions: [V294, S4, S3, S2, S1, S0]
Exit stack: [V10, S7, {0x102, 0x104}, V294, V137, V161, {0x0, 0x1}, S1, 0x0]

================================

Block 0x2d3
[0x2d3:0x2fc]
---
Predecessors: [0x292]
Successors: [0x2fd]
---
0x2d3 PUSH1 0x0
0x2d5 PUSH1 0x4
0x2d7 POP
0x2d8 PUSH1 0xc
0x2da SWAP1
0x2db POP
0x2dc PUSH1 0x40
0x2de MLOAD
0x2df SWAP1
0x2e0 SLOAD
0x2e1 PUSH1 0x1
0x2e3 PUSH1 0xa0
0x2e5 PUSH1 0x2
0x2e7 EXP
0x2e8 SUB
0x2e9 AND
0x2ea SWAP1
0x2eb PUSH1 0x0
0x2ed SWAP1
0x2ee DUP9
0x2ef SWAP1
0x2f0 DUP3
0x2f1 DUP2
0x2f2 DUP2
0x2f3 DUP2
0x2f4 DUP6
0x2f5 DUP9
0x2f6 DUP4
0x2f7 CALL
0x2f8 POP
0x2f9 POP
0x2fa POP
0x2fb POP
0x2fc POP
---
0x2d3: V298 = 0x0
0x2d5: V299 = 0x4
0x2d8: V300 = 0xc
0x2dc: V301 = 0x40
0x2de: V302 = M[0x40]
0x2e0: V303 = S[0xc]
0x2e1: V304 = 0x1
0x2e3: V305 = 0xa0
0x2e5: V306 = 0x2
0x2e7: V307 = EXP 0x2 0xa0
0x2e8: V308 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e9: V309 = AND 0xffffffffffffffffffffffffffffffffffffffff V303
0x2eb: V310 = 0x0
0x2f7: V311 = CALL 0x0 V309 V294 V302 0x0 V302 0x0
---
Entry stack: [V10, S7, {0x102, 0x104}, V294, V137, V161, {0x0, 0x1}, S1, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V10, S7, {0x102, 0x104}, V294, V137, V161, {0x0, 0x1}, S1, 0x0]

================================

Block 0x2fd
[0x2fd:0x33d]
---
Predecessors: [0x292, 0x2d3]
Successors: [0x33e, 0x368]
---
0x2fd JUMPDEST
0x2fe PUSH1 0x6
0x300 SLOAD
0x301 PUSH1 0x9
0x303 DUP1
0x304 SLOAD
0x305 PUSH1 0x1
0x307 PUSH1 0xa0
0x309 PUSH1 0x2
0x30b EXP
0x30c SUB
0x30d NOT
0x30e AND
0x30f PUSH1 0x1
0x311 PUSH1 0xa0
0x313 PUSH1 0x2
0x315 EXP
0x316 SUB
0x317 SWAP3
0x318 SWAP1
0x319 SWAP3
0x31a AND
0x31b SWAP2
0x31c SWAP1
0x31d SWAP2
0x31e OR
0x31f SWAP1
0x320 SSTORE
0x321 PUSH1 0x7
0x323 SLOAD
0x324 PUSH1 0xa
0x326 DUP2
0x327 DUP2
0x328 SSTORE
0x329 PUSH1 0x8
0x32b SLOAD
0x32c PUSH1 0xb
0x32e SSTORE
0x32f PUSH1 0x64
0x331 SWAP2
0x332 MUL
0x333 DIV
0x334 SWAP6
0x335 POP
0x336 PUSH1 0x0
0x338 DUP7
0x339 EQ
0x33a PUSH2 0x368
0x33d JUMPI
---
0x2fd: JUMPDEST 
0x2fe: V312 = 0x6
0x300: V313 = S[0x6]
0x301: V314 = 0x9
0x304: V315 = S[0x9]
0x305: V316 = 0x1
0x307: V317 = 0xa0
0x309: V318 = 0x2
0x30b: V319 = EXP 0x2 0xa0
0x30c: V320 = SUB 0x10000000000000000000000000000000000000000 0x1
0x30d: V321 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x30e: V322 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V315
0x30f: V323 = 0x1
0x311: V324 = 0xa0
0x313: V325 = 0x2
0x315: V326 = EXP 0x2 0xa0
0x316: V327 = SUB 0x10000000000000000000000000000000000000000 0x1
0x31a: V328 = AND 0xffffffffffffffffffffffffffffffffffffffff V313
0x31e: V329 = OR V328 V322
0x320: S[0x9] = V329
0x321: V330 = 0x7
0x323: V331 = S[0x7]
0x324: V332 = 0xa
0x328: S[0xa] = V331
0x329: V333 = 0x8
0x32b: V334 = S[0x8]
0x32c: V335 = 0xb
0x32e: S[0xb] = V334
0x32f: V336 = 0x64
0x332: V337 = MUL V331 0xa
0x333: V338 = DIV V337 0x64
0x336: V339 = 0x0
0x339: V340 = EQ V338 0x0
0x33a: V341 = 0x368
0x33d: JUMPI 0x368 V340
---
Entry stack: [V10, S7, {0x102, 0x104}, V294, V137, V161, {0x0, 0x1}, S1, 0x0]
Stack pops: 6
Stack additions: [V338, S4, S3, S2, S1, S0]
Exit stack: [V10, S7, {0x102, 0x104}, V338, V137, V161, {0x0, 0x1}, S1, 0x0]

================================

Block 0x33e
[0x33e:0x367]
---
Predecessors: [0x2fd]
Successors: [0x368]
---
0x33e PUSH1 0x0
0x340 PUSH1 0x3
0x342 POP
0x343 PUSH1 0x9
0x345 SWAP1
0x346 POP
0x347 PUSH1 0x40
0x349 MLOAD
0x34a SWAP1
0x34b SLOAD
0x34c PUSH1 0x1
0x34e PUSH1 0xa0
0x350 PUSH1 0x2
0x352 EXP
0x353 SUB
0x354 AND
0x355 SWAP1
0x356 PUSH1 0x0
0x358 SWAP1
0x359 DUP9
0x35a SWAP1
0x35b DUP3
0x35c DUP2
0x35d DUP2
0x35e DUP2
0x35f DUP6
0x360 DUP9
0x361 DUP4
0x362 CALL
0x363 POP
0x364 POP
0x365 POP
0x366 POP
0x367 POP
---
0x33e: V342 = 0x0
0x340: V343 = 0x3
0x343: V344 = 0x9
0x347: V345 = 0x40
0x349: V346 = M[0x40]
0x34b: V347 = S[0x9]
0x34c: V348 = 0x1
0x34e: V349 = 0xa0
0x350: V350 = 0x2
0x352: V351 = EXP 0x2 0xa0
0x353: V352 = SUB 0x10000000000000000000000000000000000000000 0x1
0x354: V353 = AND 0xffffffffffffffffffffffffffffffffffffffff V347
0x356: V354 = 0x0
0x362: V355 = CALL 0x0 V353 V338 V346 0x0 V346 0x0
---
Entry stack: [V10, S7, {0x102, 0x104}, V338, V137, V161, {0x0, 0x1}, S1, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V10, S7, {0x102, 0x104}, V338, V137, V161, {0x0, 0x1}, S1, 0x0]

================================

Block 0x368
[0x368:0x3ac]
---
Predecessors: [0x2fd, 0x33e]
Successors: [0x3ad, 0x3d7]
---
0x368 JUMPDEST
0x369 PUSH1 0x3
0x36b SLOAD
0x36c PUSH1 0x6
0x36e DUP1
0x36f SLOAD
0x370 PUSH1 0x1
0x372 PUSH1 0xa0
0x374 PUSH1 0x2
0x376 EXP
0x377 SUB
0x378 NOT
0x379 AND
0x37a PUSH1 0x1
0x37c PUSH1 0xa0
0x37e PUSH1 0x2
0x380 EXP
0x381 SUB
0x382 SWAP3
0x383 SWAP1
0x384 SWAP3
0x385 AND
0x386 SWAP2
0x387 SWAP1
0x388 SWAP2
0x389 OR
0x38a SWAP1
0x38b SSTORE
0x38c PUSH1 0x4
0x38e SLOAD
0x38f PUSH1 0x7
0x391 DUP2
0x392 SWAP1
0x393 SSTORE
0x394 PUSH1 0x5
0x396 SLOAD
0x397 PUSH1 0x8
0x399 SSTORE
0x39a PUSH1 0x64
0x39c PUSH1 0xa
0x39e SWAP2
0x39f SWAP1
0x3a0 SWAP2
0x3a1 MUL
0x3a2 DIV
0x3a3 SWAP6
0x3a4 POP
0x3a5 PUSH1 0x0
0x3a7 DUP7
0x3a8 EQ
0x3a9 PUSH2 0x3d7
0x3ac JUMPI
---
0x368: JUMPDEST 
0x369: V356 = 0x3
0x36b: V357 = S[0x3]
0x36c: V358 = 0x6
0x36f: V359 = S[0x6]
0x370: V360 = 0x1
0x372: V361 = 0xa0
0x374: V362 = 0x2
0x376: V363 = EXP 0x2 0xa0
0x377: V364 = SUB 0x10000000000000000000000000000000000000000 0x1
0x378: V365 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x379: V366 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V359
0x37a: V367 = 0x1
0x37c: V368 = 0xa0
0x37e: V369 = 0x2
0x380: V370 = EXP 0x2 0xa0
0x381: V371 = SUB 0x10000000000000000000000000000000000000000 0x1
0x385: V372 = AND 0xffffffffffffffffffffffffffffffffffffffff V357
0x389: V373 = OR V372 V366
0x38b: S[0x6] = V373
0x38c: V374 = 0x4
0x38e: V375 = S[0x4]
0x38f: V376 = 0x7
0x393: S[0x7] = V375
0x394: V377 = 0x5
0x396: V378 = S[0x5]
0x397: V379 = 0x8
0x399: S[0x8] = V378
0x39a: V380 = 0x64
0x39c: V381 = 0xa
0x3a1: V382 = MUL 0xa V375
0x3a2: V383 = DIV V382 0x64
0x3a5: V384 = 0x0
0x3a8: V385 = EQ V383 0x0
0x3a9: V386 = 0x3d7
0x3ac: JUMPI 0x3d7 V385
---
Entry stack: [V10, S7, {0x102, 0x104}, V338, V137, V161, {0x0, 0x1}, S1, 0x0]
Stack pops: 6
Stack additions: [V383, S4, S3, S2, S1, S0]
Exit stack: [V10, S7, {0x102, 0x104}, V383, V137, V161, {0x0, 0x1}, S1, 0x0]

================================

Block 0x3ad
[0x3ad:0x3d6]
---
Predecessors: [0x368]
Successors: [0x3d7]
---
0x3ad PUSH1 0x0
0x3af PUSH1 0x2
0x3b1 POP
0x3b2 PUSH1 0x6
0x3b4 SWAP1
0x3b5 POP
0x3b6 PUSH1 0x40
0x3b8 MLOAD
0x3b9 SWAP1
0x3ba SLOAD
0x3bb PUSH1 0x1
0x3bd PUSH1 0xa0
0x3bf PUSH1 0x2
0x3c1 EXP
0x3c2 SUB
0x3c3 AND
0x3c4 SWAP1
0x3c5 PUSH1 0x0
0x3c7 SWAP1
0x3c8 DUP9
0x3c9 SWAP1
0x3ca DUP3
0x3cb DUP2
0x3cc DUP2
0x3cd DUP2
0x3ce DUP6
0x3cf DUP9
0x3d0 DUP4
0x3d1 CALL
0x3d2 POP
0x3d3 POP
0x3d4 POP
0x3d5 POP
0x3d6 POP
---
0x3ad: V387 = 0x0
0x3af: V388 = 0x2
0x3b2: V389 = 0x6
0x3b6: V390 = 0x40
0x3b8: V391 = M[0x40]
0x3ba: V392 = S[0x6]
0x3bb: V393 = 0x1
0x3bd: V394 = 0xa0
0x3bf: V395 = 0x2
0x3c1: V396 = EXP 0x2 0xa0
0x3c2: V397 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c3: V398 = AND 0xffffffffffffffffffffffffffffffffffffffff V392
0x3c5: V399 = 0x0
0x3d1: V400 = CALL 0x0 V398 V383 V391 0x0 V391 0x0
---
Entry stack: [V10, S7, {0x102, 0x104}, V383, V137, V161, {0x0, 0x1}, S1, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V10, S7, {0x102, 0x104}, V383, V137, V161, {0x0, 0x1}, S1, 0x0]

================================

Block 0x3d7
[0x3d7:0x41a]
---
Predecessors: [0x368, 0x3ad]
Successors: [0x41b, 0x445]
---
0x3d7 JUMPDEST
0x3d8 PUSH1 0x0
0x3da DUP1
0x3db SLOAD
0x3dc PUSH1 0x3
0x3de DUP1
0x3df SLOAD
0x3e0 PUSH1 0x1
0x3e2 PUSH1 0xa0
0x3e4 PUSH1 0x2
0x3e6 EXP
0x3e7 SUB
0x3e8 NOT
0x3e9 AND
0x3ea PUSH1 0x1
0x3ec PUSH1 0xa0
0x3ee PUSH1 0x2
0x3f0 EXP
0x3f1 SUB
0x3f2 SWAP3
0x3f3 SWAP1
0x3f4 SWAP3
0x3f5 AND
0x3f6 SWAP2
0x3f7 SWAP1
0x3f8 SWAP2
0x3f9 OR
0x3fa SWAP1
0x3fb SSTORE
0x3fc PUSH1 0x1
0x3fe SLOAD
0x3ff PUSH1 0x4
0x401 DUP2
0x402 SWAP1
0x403 SSTORE
0x404 PUSH1 0x2
0x406 SLOAD
0x407 PUSH1 0x5
0x409 SSTORE
0x40a PUSH1 0x64
0x40c PUSH1 0xa
0x40e SWAP2
0x40f SWAP1
0x410 SWAP2
0x411 MUL
0x412 DIV
0x413 SWAP7
0x414 POP
0x415 DUP7
0x416 EQ
0x417 PUSH2 0x445
0x41a JUMPI
---
0x3d7: JUMPDEST 
0x3d8: V401 = 0x0
0x3db: V402 = S[0x0]
0x3dc: V403 = 0x3
0x3df: V404 = S[0x3]
0x3e0: V405 = 0x1
0x3e2: V406 = 0xa0
0x3e4: V407 = 0x2
0x3e6: V408 = EXP 0x2 0xa0
0x3e7: V409 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3e8: V410 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3e9: V411 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V404
0x3ea: V412 = 0x1
0x3ec: V413 = 0xa0
0x3ee: V414 = 0x2
0x3f0: V415 = EXP 0x2 0xa0
0x3f1: V416 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f5: V417 = AND 0xffffffffffffffffffffffffffffffffffffffff V402
0x3f9: V418 = OR V417 V411
0x3fb: S[0x3] = V418
0x3fc: V419 = 0x1
0x3fe: V420 = S[0x1]
0x3ff: V421 = 0x4
0x403: S[0x4] = V420
0x404: V422 = 0x2
0x406: V423 = S[0x2]
0x407: V424 = 0x5
0x409: S[0x5] = V423
0x40a: V425 = 0x64
0x40c: V426 = 0xa
0x411: V427 = MUL 0xa V420
0x412: V428 = DIV V427 0x64
0x416: V429 = EQ V428 0x0
0x417: V430 = 0x445
0x41a: JUMPI 0x445 V429
---
Entry stack: [V10, S7, {0x102, 0x104}, V383, V137, V161, {0x0, 0x1}, S1, 0x0]
Stack pops: 6
Stack additions: [V428, S4, S3, S2, S1, S0]
Exit stack: [V10, S7, {0x102, 0x104}, V428, V137, V161, {0x0, 0x1}, S1, 0x0]

================================

Block 0x41b
[0x41b:0x444]
---
Predecessors: [0x3d7]
Successors: [0x445]
---
0x41b PUSH1 0x0
0x41d PUSH1 0x1
0x41f POP
0x420 PUSH1 0x3
0x422 SWAP1
0x423 POP
0x424 PUSH1 0x40
0x426 MLOAD
0x427 SWAP1
0x428 SLOAD
0x429 PUSH1 0x1
0x42b PUSH1 0xa0
0x42d PUSH1 0x2
0x42f EXP
0x430 SUB
0x431 AND
0x432 SWAP1
0x433 PUSH1 0x0
0x435 SWAP1
0x436 DUP9
0x437 SWAP1
0x438 DUP3
0x439 DUP2
0x43a DUP2
0x43b DUP2
0x43c DUP6
0x43d DUP9
0x43e DUP4
0x43f CALL
0x440 POP
0x441 POP
0x442 POP
0x443 POP
0x444 POP
---
0x41b: V431 = 0x0
0x41d: V432 = 0x1
0x420: V433 = 0x3
0x424: V434 = 0x40
0x426: V435 = M[0x40]
0x428: V436 = S[0x3]
0x429: V437 = 0x1
0x42b: V438 = 0xa0
0x42d: V439 = 0x2
0x42f: V440 = EXP 0x2 0xa0
0x430: V441 = SUB 0x10000000000000000000000000000000000000000 0x1
0x431: V442 = AND 0xffffffffffffffffffffffffffffffffffffffff V436
0x433: V443 = 0x0
0x43f: V444 = CALL 0x0 V442 V428 V435 0x0 V435 0x0
---
Entry stack: [V10, S7, {0x102, 0x104}, V428, V137, V161, {0x0, 0x1}, S1, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V10, S7, {0x102, 0x104}, V428, V137, V161, {0x0, 0x1}, S1, 0x0]

================================

Block 0x445
[0x445:0x462]
---
Predecessors: [0x3d7, 0x41b]
Successors: [0x463]
---
0x445 JUMPDEST
0x446 POP
0x447 PUSH1 0x0
0x449 DUP1
0x44a SLOAD
0x44b PUSH1 0x1
0x44d PUSH1 0xa0
0x44f PUSH1 0x2
0x451 EXP
0x452 SUB
0x453 NOT
0x454 AND
0x455 CALLER
0x456 OR
0x457 SWAP1
0x458 SSTORE
0x459 CALLVALUE
0x45a PUSH1 0x1
0x45c DUP2
0x45d SWAP1
0x45e SSTORE
0x45f NUMBER
0x460 PUSH1 0x2
0x462 SSTORE
---
0x445: JUMPDEST 
0x447: V445 = 0x0
0x44a: V446 = S[0x0]
0x44b: V447 = 0x1
0x44d: V448 = 0xa0
0x44f: V449 = 0x2
0x451: V450 = EXP 0x2 0xa0
0x452: V451 = SUB 0x10000000000000000000000000000000000000000 0x1
0x453: V452 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x454: V453 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V446
0x455: V454 = CALLER
0x456: V455 = OR V454 V453
0x458: S[0x0] = V455
0x459: V456 = CALLVALUE
0x45a: V457 = 0x1
0x45e: S[0x1] = V456
0x45f: V458 = NUMBER
0x460: V459 = 0x2
0x462: S[0x2] = V458
---
Entry stack: [V10, S7, {0x102, 0x104}, V428, V137, V161, {0x0, 0x1}, S1, 0x0]
Stack pops: 1
Stack additions: [V456]
Exit stack: [V10, S7, {0x102, 0x104}, V428, V137, V161, {0x0, 0x1}, S1, V456]

================================

Block 0x463
[0x463:0x46a]
---
Predecessors: [0xde, 0x445]
Successors: [0x102, 0x104]
---
0x463 JUMPDEST
0x464 POP
0x465 POP
0x466 POP
0x467 POP
0x468 POP
0x469 POP
0x46a JUMP
---
0x463: JUMPDEST 
0x46a: JUMP {0x102, 0x104}
---
Entry stack: [V10, S7, {0x102, 0x104}, S5, S4, S3, {0x0, 0x1}, S1, S0]
Stack pops: 7
Stack additions: []
Exit stack: [V10, S7]

================================

Function 0:
Public function signature: 0x41c0e1b5
Entry block: 0x4b
Exit block: 0x102
Body: 0x4b, 0x68, 0x102, 0x104

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0x75
Exit block: 0x106
Body: 0x75, 0x106

Function 2:
Public function signature: 0xe4b2fb79
Entry block: 0x87
Exit block: 0x123
Body: 0x87, 0x9a, 0x123

Function 3:
Public function signature: 0xe97dcb62
Entry block: 0xbd
Exit block: 0x102
Body: 0xbd, 0xc1, 0xde, 0x102, 0x104, 0x14c, 0x1bd, 0x1c1, 0x1da, 0x1de, 0x1f7, 0x1fb, 0x214, 0x218, 0x237, 0x23b, 0x251, 0x256, 0x25c, 0x264, 0x26d, 0x292, 0x2d3, 0x2fd, 0x33e, 0x368, 0x3ad, 0x3d7, 0x41b, 0x445, 0x463

Function 4:
Public fallback function
Entry block: 0x40
Exit block: 0x102
Body: 0x40, 0xc1, 0xde, 0x102, 0x104, 0x14c, 0x1bd, 0x1c1, 0x1da, 0x1de, 0x1f7, 0x1fb, 0x214, 0x218, 0x237, 0x23b, 0x251, 0x256, 0x25c, 0x264, 0x26d, 0x292, 0x2d3, 0x2fd, 0x33e, 0x368, 0x3ad, 0x3d7, 0x41b, 0x445, 0x463

