Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x82]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x82
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x82
0xc: JUMPI 0x82 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x84]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x101e8952
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x84
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x101e8952
0x3b: V13 = EQ V11 0x101e8952
0x3c: V14 = 0x84
0x3f: JUMPI 0x84 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x98]
---
0x40 DUP1
0x41 PUSH4 0x33ea51a8
0x46 EQ
0x47 PUSH2 0x98
0x4a JUMPI
---
0x41: V15 = 0x33ea51a8
0x46: V16 = EQ 0x33ea51a8 V11
0x47: V17 = 0x98
0x4a: JUMPI 0x98 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xb7]
---
0x4b DUP1
0x4c PUSH4 0x35faa416
0x51 EQ
0x52 PUSH2 0xb7
0x55 JUMPI
---
0x4c: V18 = 0x35faa416
0x51: V19 = EQ 0x35faa416 V11
0x52: V20 = 0xb7
0x55: JUMPI 0xb7 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xca]
---
0x56 DUP1
0x57 PUSH4 0x5b8d02d7
0x5c EQ
0x5d PUSH2 0xca
0x60 JUMPI
---
0x57: V21 = 0x5b8d02d7
0x5c: V22 = EQ 0x5b8d02d7 V11
0x5d: V23 = 0xca
0x60: JUMPI 0xca V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0xf9]
---
0x61 DUP1
0x62 PUSH4 0x76be1585
0x67 EQ
0x68 PUSH2 0xf9
0x6b JUMPI
---
0x62: V24 = 0x76be1585
0x67: V25 = EQ 0x76be1585 V11
0x68: V26 = 0xf9
0x6b: JUMPI 0xf9 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x12c]
---
0x6c DUP1
0x6d PUSH4 0x87c95058
0x72 EQ
0x73 PUSH2 0x12c
0x76 JUMPI
---
0x6d: V27 = 0x87c95058
0x72: V28 = EQ 0x87c95058 V11
0x73: V29 = 0x12c
0x76: JUMPI 0x12c V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x150]
---
0x77 DUP1
0x78 PUSH4 0xf3f989ec
0x7d EQ
0x7e PUSH2 0x150
0x81 JUMPI
---
0x78: V30 = 0xf3f989ec
0x7d: V31 = EQ 0xf3f989ec V11
0x7e: V32 = 0x150
0x81: JUMPI 0x150 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x83]
---
Predecessors: [0x0, 0x77, 0x1e4, 0x211, 0x2b9, 0x308]
Successors: []
---
0x82 JUMPDEST
0x83 STOP
---
0x82: JUMPDEST 
0x83: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x84
[0x84:0x97]
---
Predecessors: [0xd]
Successors: [0x163]
---
0x84 JUMPDEST
0x85 PUSH2 0x82
0x88 PUSH1 0x1
0x8a PUSH1 0xa0
0x8c PUSH1 0x2
0x8e EXP
0x8f SUB
0x90 PUSH1 0x4
0x92 CALLDATALOAD
0x93 AND
0x94 PUSH2 0x163
0x97 JUMP
---
0x84: JUMPDEST 
0x85: V33 = 0x82
0x88: V34 = 0x1
0x8a: V35 = 0xa0
0x8c: V36 = 0x2
0x8e: V37 = EXP 0x2 0xa0
0x8f: V38 = SUB 0x10000000000000000000000000000000000000000 0x1
0x90: V39 = 0x4
0x92: V40 = CALLDATALOAD 0x4
0x93: V41 = AND V40 0xffffffffffffffffffffffffffffffffffffffff
0x94: V42 = 0x163
0x97: JUMP 0x163
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x82, V41]
Exit stack: [V11, 0x82, V41]

================================

Block 0x98
[0x98:0x9e]
---
Predecessors: [0x40]
Successors: [0x9f, 0xa3]
---
0x98 JUMPDEST
0x99 CALLVALUE
0x9a ISZERO
0x9b PUSH2 0xa3
0x9e JUMPI
---
0x98: JUMPDEST 
0x99: V43 = CALLVALUE
0x9a: V44 = ISZERO V43
0x9b: V45 = 0xa3
0x9e: JUMPI 0xa3 V44
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9f
[0x9f:0xa2]
---
Predecessors: [0x98]
Successors: []
---
0x9f PUSH1 0x0
0xa1 DUP1
0xa2 REVERT
---
0x9f: V46 = 0x0
0xa2: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa3
[0xa3:0xb6]
---
Predecessors: [0x98]
Successors: [0x1e9]
---
0xa3 JUMPDEST
0xa4 PUSH2 0x82
0xa7 PUSH1 0x1
0xa9 PUSH1 0xa0
0xab PUSH1 0x2
0xad EXP
0xae SUB
0xaf PUSH1 0x4
0xb1 CALLDATALOAD
0xb2 AND
0xb3 PUSH2 0x1e9
0xb6 JUMP
---
0xa3: JUMPDEST 
0xa4: V47 = 0x82
0xa7: V48 = 0x1
0xa9: V49 = 0xa0
0xab: V50 = 0x2
0xad: V51 = EXP 0x2 0xa0
0xae: V52 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaf: V53 = 0x4
0xb1: V54 = CALLDATALOAD 0x4
0xb2: V55 = AND V54 0xffffffffffffffffffffffffffffffffffffffff
0xb3: V56 = 0x1e9
0xb6: JUMP 0x1e9
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x82, V55]
Exit stack: [V11, 0x82, V55]

================================

Block 0xb7
[0xb7:0xbd]
---
Predecessors: [0x4b]
Successors: [0xbe, 0xc2]
---
0xb7 JUMPDEST
0xb8 CALLVALUE
0xb9 ISZERO
0xba PUSH2 0xc2
0xbd JUMPI
---
0xb7: JUMPDEST 
0xb8: V57 = CALLVALUE
0xb9: V58 = ISZERO V57
0xba: V59 = 0xc2
0xbd: JUMPI 0xc2 V58
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xbe
[0xbe:0xc1]
---
Predecessors: [0xb7]
Successors: []
---
0xbe PUSH1 0x0
0xc0 DUP1
0xc1 REVERT
---
0xbe: V60 = 0x0
0xc1: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc2
[0xc2:0xc9]
---
Predecessors: [0xb7]
Successors: [0x241]
---
0xc2 JUMPDEST
0xc3 PUSH2 0x82
0xc6 PUSH2 0x241
0xc9 JUMP
---
0xc2: JUMPDEST 
0xc3: V61 = 0x82
0xc6: V62 = 0x241
0xc9: JUMP 0x241
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x82]
Exit stack: [V11, 0x82]

================================

Block 0xca
[0xca:0xd0]
---
Predecessors: [0x56]
Successors: [0xd1, 0xd5]
---
0xca JUMPDEST
0xcb CALLVALUE
0xcc ISZERO
0xcd PUSH2 0xd5
0xd0 JUMPI
---
0xca: JUMPDEST 
0xcb: V63 = CALLVALUE
0xcc: V64 = ISZERO V63
0xcd: V65 = 0xd5
0xd0: JUMPI 0xd5 V64
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd1
[0xd1:0xd4]
---
Predecessors: [0xca]
Successors: []
---
0xd1 PUSH1 0x0
0xd3 DUP1
0xd4 REVERT
---
0xd1: V66 = 0x0
0xd4: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd5
[0xd5:0xdc]
---
Predecessors: [0xca]
Successors: [0x2bc]
---
0xd5 JUMPDEST
0xd6 PUSH2 0xdd
0xd9 PUSH2 0x2bc
0xdc JUMP
---
0xd5: JUMPDEST 
0xd6: V67 = 0xdd
0xd9: V68 = 0x2bc
0xdc: JUMP 0x2bc
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xdd]
Exit stack: [V11, 0xdd]

================================

Block 0xdd
[0xdd:0xf8]
---
Predecessors: [0x2bc]
Successors: []
---
0xdd JUMPDEST
0xde PUSH1 0x40
0xe0 MLOAD
0xe1 PUSH1 0x1
0xe3 PUSH1 0xa0
0xe5 PUSH1 0x2
0xe7 EXP
0xe8 SUB
0xe9 SWAP1
0xea SWAP2
0xeb AND
0xec DUP2
0xed MSTORE
0xee PUSH1 0x20
0xf0 ADD
0xf1 PUSH1 0x40
0xf3 MLOAD
0xf4 DUP1
0xf5 SWAP2
0xf6 SUB
0xf7 SWAP1
0xf8 RETURN
---
0xdd: JUMPDEST 
0xde: V69 = 0x40
0xe0: V70 = M[0x40]
0xe1: V71 = 0x1
0xe3: V72 = 0xa0
0xe5: V73 = 0x2
0xe7: V74 = EXP 0x2 0xa0
0xe8: V75 = SUB 0x10000000000000000000000000000000000000000 0x1
0xeb: V76 = AND V266 0xffffffffffffffffffffffffffffffffffffffff
0xed: M[V70] = V76
0xee: V77 = 0x20
0xf0: V78 = ADD 0x20 V70
0xf1: V79 = 0x40
0xf3: V80 = M[0x40]
0xf6: V81 = SUB V78 V80
0xf8: RETURN V80 V81
---
Entry stack: [V11, 0xdd, V266]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xdd]

================================

Block 0xf9
[0xf9:0xff]
---
Predecessors: [0x61]
Successors: [0x100, 0x104]
---
0xf9 JUMPDEST
0xfa CALLVALUE
0xfb ISZERO
0xfc PUSH2 0x104
0xff JUMPI
---
0xf9: JUMPDEST 
0xfa: V82 = CALLVALUE
0xfb: V83 = ISZERO V82
0xfc: V84 = 0x104
0xff: JUMPI 0x104 V83
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x100
[0x100:0x103]
---
Predecessors: [0xf9]
Successors: []
---
0x100 PUSH1 0x0
0x102 DUP1
0x103 REVERT
---
0x100: V85 = 0x0
0x103: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x104
[0x104:0x117]
---
Predecessors: [0xf9]
Successors: [0x2cb]
---
0x104 JUMPDEST
0x105 PUSH2 0x118
0x108 PUSH1 0x1
0x10a PUSH1 0xa0
0x10c PUSH1 0x2
0x10e EXP
0x10f SUB
0x110 PUSH1 0x4
0x112 CALLDATALOAD
0x113 AND
0x114 PUSH2 0x2cb
0x117 JUMP
---
0x104: JUMPDEST 
0x105: V86 = 0x118
0x108: V87 = 0x1
0x10a: V88 = 0xa0
0x10c: V89 = 0x2
0x10e: V90 = EXP 0x2 0xa0
0x10f: V91 = SUB 0x10000000000000000000000000000000000000000 0x1
0x110: V92 = 0x4
0x112: V93 = CALLDATALOAD 0x4
0x113: V94 = AND V93 0xffffffffffffffffffffffffffffffffffffffff
0x114: V95 = 0x2cb
0x117: JUMP 0x2cb
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x118, V94]
Exit stack: [V11, 0x118, V94]

================================

Block 0x118
[0x118:0x12b]
---
Predecessors: [0x2cb]
Successors: []
---
0x118 JUMPDEST
0x119 PUSH1 0x40
0x11b MLOAD
0x11c SWAP1
0x11d ISZERO
0x11e ISZERO
0x11f DUP2
0x120 MSTORE
0x121 PUSH1 0x20
0x123 ADD
0x124 PUSH1 0x40
0x126 MLOAD
0x127 DUP1
0x128 SWAP2
0x129 SUB
0x12a SWAP1
0x12b RETURN
---
0x118: JUMPDEST 
0x119: V96 = 0x40
0x11b: V97 = M[0x40]
0x11d: V98 = ISZERO V274
0x11e: V99 = ISZERO V98
0x120: M[V97] = V99
0x121: V100 = 0x20
0x123: V101 = ADD 0x20 V97
0x124: V102 = 0x40
0x126: V103 = M[0x40]
0x129: V104 = SUB V101 V103
0x12b: RETURN V103 V104
---
Entry stack: [V11, 0x118, V274]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x118]

================================

Block 0x12c
[0x12c:0x132]
---
Predecessors: [0x6c]
Successors: [0x133, 0x137]
---
0x12c JUMPDEST
0x12d CALLVALUE
0x12e ISZERO
0x12f PUSH2 0x137
0x132 JUMPI
---
0x12c: JUMPDEST 
0x12d: V105 = CALLVALUE
0x12e: V106 = ISZERO V105
0x12f: V107 = 0x137
0x132: JUMPI 0x137 V106
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x133
[0x133:0x136]
---
Predecessors: [0x12c]
Successors: []
---
0x133 PUSH1 0x0
0x135 DUP1
0x136 REVERT
---
0x133: V108 = 0x0
0x136: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x137
[0x137:0x14f]
---
Predecessors: [0x12c]
Successors: [0x2e0]
---
0x137 JUMPDEST
0x138 PUSH2 0x82
0x13b PUSH1 0x1
0x13d PUSH1 0xa0
0x13f PUSH1 0x2
0x141 EXP
0x142 SUB
0x143 PUSH1 0x4
0x145 CALLDATALOAD
0x146 AND
0x147 PUSH1 0x24
0x149 CALLDATALOAD
0x14a ISZERO
0x14b ISZERO
0x14c PUSH2 0x2e0
0x14f JUMP
---
0x137: JUMPDEST 
0x138: V109 = 0x82
0x13b: V110 = 0x1
0x13d: V111 = 0xa0
0x13f: V112 = 0x2
0x141: V113 = EXP 0x2 0xa0
0x142: V114 = SUB 0x10000000000000000000000000000000000000000 0x1
0x143: V115 = 0x4
0x145: V116 = CALLDATALOAD 0x4
0x146: V117 = AND V116 0xffffffffffffffffffffffffffffffffffffffff
0x147: V118 = 0x24
0x149: V119 = CALLDATALOAD 0x24
0x14a: V120 = ISZERO V119
0x14b: V121 = ISZERO V120
0x14c: V122 = 0x2e0
0x14f: JUMP 0x2e0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x82, V117, V121]
Exit stack: [V11, 0x82, V117, V121]

================================

Block 0x150
[0x150:0x156]
---
Predecessors: [0x77]
Successors: [0x157, 0x15b]
---
0x150 JUMPDEST
0x151 CALLVALUE
0x152 ISZERO
0x153 PUSH2 0x15b
0x156 JUMPI
---
0x150: JUMPDEST 
0x151: V123 = CALLVALUE
0x152: V124 = ISZERO V123
0x153: V125 = 0x15b
0x156: JUMPI 0x15b V124
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x157
[0x157:0x15a]
---
Predecessors: [0x150]
Successors: []
---
0x157 PUSH1 0x0
0x159 DUP1
0x15a REVERT
---
0x157: V126 = 0x0
0x15a: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x15b
[0x15b:0x162]
---
Predecessors: [0x150]
Successors: [0x334]
---
0x15b JUMPDEST
0x15c PUSH2 0x82
0x15f PUSH2 0x334
0x162 JUMP
---
0x15b: JUMPDEST 
0x15c: V127 = 0x82
0x15f: V128 = 0x334
0x162: JUMP 0x334
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x82]
Exit stack: [V11, 0x82]

================================

Block 0x163
[0x163:0x16e]
---
Predecessors: [0x84]
Successors: [0x16f, 0x173]
---
0x163 JUMPDEST
0x164 PUSH1 0x0
0x166 DUP1
0x167 CALLVALUE
0x168 DUP2
0x169 SWAP1
0x16a GT
0x16b PUSH2 0x173
0x16e JUMPI
---
0x163: JUMPDEST 
0x164: V129 = 0x0
0x167: V130 = CALLVALUE
0x16a: V131 = GT V130 0x0
0x16b: V132 = 0x173
0x16e: JUMPI 0x173 V131
---
Entry stack: [V11, 0x82, V41]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0x82, V41, 0x0, 0x0]

================================

Block 0x16f
[0x16f:0x172]
---
Predecessors: [0x163]
Successors: []
---
0x16f PUSH1 0x0
0x171 DUP1
0x172 REVERT
---
0x16f: V133 = 0x0
0x172: REVERT 0x0 0x0
---
Entry stack: [V11, 0x82, V41, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V41, 0x0, 0x0]

================================

Block 0x173
[0x173:0x17d]
---
Predecessors: [0x163]
Successors: [0x36a]
---
0x173 JUMPDEST
0x174 PUSH2 0x17e
0x177 CALLVALUE
0x178 PUSH1 0x8
0x17a PUSH2 0x36a
0x17d JUMP
---
0x173: JUMPDEST 
0x174: V134 = 0x17e
0x177: V135 = CALLVALUE
0x178: V136 = 0x8
0x17a: V137 = 0x36a
0x17d: JUMP 0x36a
---
Entry stack: [V11, 0x82, V41, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x17e, V135, 0x8]
Exit stack: [V11, 0x82, V41, 0x0, 0x0, 0x17e, V135, 0x8]

================================

Block 0x17e
[0x17e:0x18a]
---
Predecessors: [0x399]
Successors: [0x3a0]
---
0x17e JUMPDEST
0x17f SWAP2
0x180 POP
0x181 PUSH2 0x18b
0x184 DUP3
0x185 PUSH1 0x64
0x187 PUSH2 0x3a0
0x18a JUMP
---
0x17e: JUMPDEST 
0x181: V138 = 0x18b
0x185: V139 = 0x64
0x187: V140 = 0x3a0
0x18a: JUMP 0x3a0
---
Entry stack: [V11, 0x82, V41, 0x0, 0x0, S0]
Stack pops: 3
Stack additions: [S0, S1, 0x18b, S0, 0x64]
Exit stack: [V11, 0x82, V41, S0, 0x0, 0x18b, S0, 0x64]

================================

Block 0x18b
[0x18b:0x196]
---
Predecessors: [0x3ae]
Successors: [0x3b7]
---
0x18b JUMPDEST
0x18c SWAP2
0x18d POP
0x18e PUSH2 0x197
0x191 CALLVALUE
0x192 DUP4
0x193 PUSH2 0x3b7
0x196 JUMP
---
0x18b: JUMPDEST 
0x18e: V141 = 0x197
0x191: V142 = CALLVALUE
0x193: V143 = 0x3b7
0x196: JUMP 0x3b7
---
Entry stack: [V11, 0x82, V41, S2, 0x0, V356]
Stack pops: 3
Stack additions: [S0, S1, 0x197, V142, S0]
Exit stack: [V11, 0x82, V41, V356, 0x0, 0x197, V142, V356]

================================

Block 0x197
[0x197:0x1a1]
---
Predecessors: [0x3c3]
Successors: [0x1a2, 0x1a6]
---
0x197 JUMPDEST
0x198 SWAP1
0x199 POP
0x19a PUSH1 0x0
0x19c DUP3
0x19d GT
0x19e PUSH2 0x1a6
0x1a1 JUMPI
---
0x197: JUMPDEST 
0x19a: V144 = 0x0
0x19d: V145 = GT V356 0x0
0x19e: V146 = 0x1a6
0x1a1: JUMPI 0x1a6 V145
---
Entry stack: [V11, 0x82, V41, V356, 0x0, V361]
Stack pops: 3
Stack additions: [S2, S0]
Exit stack: [V11, 0x82, V41, V356, V361]

================================

Block 0x1a2
[0x1a2:0x1a5]
---
Predecessors: [0x197]
Successors: []
---
0x1a2 PUSH1 0x0
0x1a4 DUP1
0x1a5 REVERT
---
0x1a2: V147 = 0x0
0x1a5: REVERT 0x0 0x0
---
Entry stack: [V11, 0x82, V41, V356, V361]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V41, V356, V361]

================================

Block 0x1a6
[0x1a6:0x1ae]
---
Predecessors: [0x197]
Successors: [0x1af, 0x1b3]
---
0x1a6 JUMPDEST
0x1a7 PUSH1 0x0
0x1a9 DUP2
0x1aa GT
0x1ab PUSH2 0x1b3
0x1ae JUMPI
---
0x1a6: JUMPDEST 
0x1a7: V148 = 0x0
0x1aa: V149 = GT V361 0x0
0x1ab: V150 = 0x1b3
0x1ae: JUMPI 0x1b3 V149
---
Entry stack: [V11, 0x82, V41, V356, V361]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x82, V41, V356, V361]

================================

Block 0x1af
[0x1af:0x1b2]
---
Predecessors: [0x1a6]
Successors: []
---
0x1af PUSH1 0x0
0x1b1 DUP1
0x1b2 REVERT
---
0x1af: V151 = 0x0
0x1b2: REVERT 0x0 0x0
---
Entry stack: [V11, 0x82, V41, V356, V361]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V41, V356, V361]

================================

Block 0x1b3
[0x1b3:0x1df]
---
Predecessors: [0x1a6]
Successors: [0x1e0, 0x1e4]
---
0x1b3 JUMPDEST
0x1b4 PUSH1 0x1
0x1b6 PUSH1 0xa0
0x1b8 PUSH1 0x2
0x1ba EXP
0x1bb SUB
0x1bc DUP4
0x1bd AND
0x1be DUP2
0x1bf ISZERO
0x1c0 PUSH2 0x8fc
0x1c3 MUL
0x1c4 DUP3
0x1c5 PUSH1 0x40
0x1c7 MLOAD
0x1c8 PUSH1 0x0
0x1ca PUSH1 0x40
0x1cc MLOAD
0x1cd DUP1
0x1ce DUP4
0x1cf SUB
0x1d0 DUP2
0x1d1 DUP6
0x1d2 DUP9
0x1d3 DUP9
0x1d4 CALL
0x1d5 SWAP4
0x1d6 POP
0x1d7 POP
0x1d8 POP
0x1d9 POP
0x1da ISZERO
0x1db ISZERO
0x1dc PUSH2 0x1e4
0x1df JUMPI
---
0x1b3: JUMPDEST 
0x1b4: V152 = 0x1
0x1b6: V153 = 0xa0
0x1b8: V154 = 0x2
0x1ba: V155 = EXP 0x2 0xa0
0x1bb: V156 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1bd: V157 = AND V41 0xffffffffffffffffffffffffffffffffffffffff
0x1bf: V158 = ISZERO V361
0x1c0: V159 = 0x8fc
0x1c3: V160 = MUL 0x8fc V158
0x1c5: V161 = 0x40
0x1c7: V162 = M[0x40]
0x1c8: V163 = 0x0
0x1ca: V164 = 0x40
0x1cc: V165 = M[0x40]
0x1cf: V166 = SUB V162 V165
0x1d4: V167 = CALL V160 V157 V361 V165 V166 V165 0x0
0x1da: V168 = ISZERO V167
0x1db: V169 = ISZERO V168
0x1dc: V170 = 0x1e4
0x1df: JUMPI 0x1e4 V169
---
Entry stack: [V11, 0x82, V41, V356, V361]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x82, V41, V356, V361]

================================

Block 0x1e0
[0x1e0:0x1e3]
---
Predecessors: [0x1b3]
Successors: []
---
0x1e0 PUSH1 0x0
0x1e2 DUP1
0x1e3 REVERT
---
0x1e0: V171 = 0x0
0x1e3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x82, V41, V356, V361]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V41, V356, V361]

================================

Block 0x1e4
[0x1e4:0x1e8]
---
Predecessors: [0x1b3]
Successors: [0x82]
---
0x1e4 JUMPDEST
0x1e5 POP
0x1e6 POP
0x1e7 POP
0x1e8 JUMP
---
0x1e4: JUMPDEST 
0x1e8: JUMP 0x82
---
Entry stack: [V11, 0x82, V41, V356, V361]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x1e9
[0x1e9:0x20c]
---
Predecessors: [0xa3]
Successors: [0x20d, 0x211]
---
0x1e9 JUMPDEST
0x1ea CALLER
0x1eb PUSH1 0x1
0x1ed PUSH1 0xa0
0x1ef PUSH1 0x2
0x1f1 EXP
0x1f2 SUB
0x1f3 DUP2
0x1f4 AND
0x1f5 PUSH1 0x0
0x1f7 SWAP1
0x1f8 DUP2
0x1f9 MSTORE
0x1fa PUSH1 0x1
0x1fc PUSH1 0x20
0x1fe MSTORE
0x1ff PUSH1 0x40
0x201 SWAP1
0x202 SHA3
0x203 SLOAD
0x204 PUSH1 0xff
0x206 AND
0x207 ISZERO
0x208 ISZERO
0x209 PUSH2 0x211
0x20c JUMPI
---
0x1e9: JUMPDEST 
0x1ea: V172 = CALLER
0x1eb: V173 = 0x1
0x1ed: V174 = 0xa0
0x1ef: V175 = 0x2
0x1f1: V176 = EXP 0x2 0xa0
0x1f2: V177 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f4: V178 = AND V172 0xffffffffffffffffffffffffffffffffffffffff
0x1f5: V179 = 0x0
0x1f9: M[0x0] = V178
0x1fa: V180 = 0x1
0x1fc: V181 = 0x20
0x1fe: M[0x20] = 0x1
0x1ff: V182 = 0x40
0x202: V183 = SHA3 0x0 0x40
0x203: V184 = S[V183]
0x204: V185 = 0xff
0x206: V186 = AND 0xff V184
0x207: V187 = ISZERO V186
0x208: V188 = ISZERO V187
0x209: V189 = 0x211
0x20c: JUMPI 0x211 V188
---
Entry stack: [V11, 0x82, V55]
Stack pops: 0
Stack additions: [V172]
Exit stack: [V11, 0x82, V55, V172]

================================

Block 0x20d
[0x20d:0x210]
---
Predecessors: [0x1e9]
Successors: []
---
0x20d PUSH1 0x0
0x20f DUP1
0x210 REVERT
---
0x20d: V190 = 0x0
0x210: REVERT 0x0 0x0
---
Entry stack: [V11, 0x82, V55, V172]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V55, V172]

================================

Block 0x211
[0x211:0x240]
---
Predecessors: [0x1e9]
Successors: [0x82]
---
0x211 JUMPDEST
0x212 POP
0x213 PUSH1 0x0
0x215 DUP1
0x216 SLOAD
0x217 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22c NOT
0x22d AND
0x22e PUSH1 0x1
0x230 PUSH1 0xa0
0x232 PUSH1 0x2
0x234 EXP
0x235 SUB
0x236 SWAP3
0x237 SWAP1
0x238 SWAP3
0x239 AND
0x23a SWAP2
0x23b SWAP1
0x23c SWAP2
0x23d OR
0x23e SWAP1
0x23f SSTORE
0x240 JUMP
---
0x211: JUMPDEST 
0x213: V191 = 0x0
0x216: V192 = S[0x0]
0x217: V193 = 0xffffffffffffffffffffffffffffffffffffffff
0x22c: V194 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x22d: V195 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V192
0x22e: V196 = 0x1
0x230: V197 = 0xa0
0x232: V198 = 0x2
0x234: V199 = EXP 0x2 0xa0
0x235: V200 = SUB 0x10000000000000000000000000000000000000000 0x1
0x239: V201 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0x23d: V202 = OR V201 V195
0x23f: S[0x0] = V202
0x240: JUMP 0x82
---
Entry stack: [V11, 0x82, V55, V172]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x241
[0x241:0x264]
---
Predecessors: [0xc2]
Successors: [0x265, 0x269]
---
0x241 JUMPDEST
0x242 CALLER
0x243 PUSH1 0x1
0x245 PUSH1 0xa0
0x247 PUSH1 0x2
0x249 EXP
0x24a SUB
0x24b DUP2
0x24c AND
0x24d PUSH1 0x0
0x24f SWAP1
0x250 DUP2
0x251 MSTORE
0x252 PUSH1 0x1
0x254 PUSH1 0x20
0x256 MSTORE
0x257 PUSH1 0x40
0x259 SWAP1
0x25a SHA3
0x25b SLOAD
0x25c PUSH1 0xff
0x25e AND
0x25f ISZERO
0x260 ISZERO
0x261 PUSH2 0x269
0x264 JUMPI
---
0x241: JUMPDEST 
0x242: V203 = CALLER
0x243: V204 = 0x1
0x245: V205 = 0xa0
0x247: V206 = 0x2
0x249: V207 = EXP 0x2 0xa0
0x24a: V208 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24c: V209 = AND V203 0xffffffffffffffffffffffffffffffffffffffff
0x24d: V210 = 0x0
0x251: M[0x0] = V209
0x252: V211 = 0x1
0x254: V212 = 0x20
0x256: M[0x20] = 0x1
0x257: V213 = 0x40
0x25a: V214 = SHA3 0x0 0x40
0x25b: V215 = S[V214]
0x25c: V216 = 0xff
0x25e: V217 = AND 0xff V215
0x25f: V218 = ISZERO V217
0x260: V219 = ISZERO V218
0x261: V220 = 0x269
0x264: JUMPI 0x269 V219
---
Entry stack: [V11, 0x82]
Stack pops: 0
Stack additions: [V203]
Exit stack: [V11, 0x82, V203]

================================

Block 0x265
[0x265:0x268]
---
Predecessors: [0x241]
Successors: []
---
0x265 PUSH1 0x0
0x267 DUP1
0x268 REVERT
---
0x265: V221 = 0x0
0x268: REVERT 0x0 0x0
---
Entry stack: [V11, 0x82, V203]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V203]

================================

Block 0x269
[0x269:0x27b]
---
Predecessors: [0x241]
Successors: [0x27c, 0x280]
---
0x269 JUMPDEST
0x26a PUSH1 0x0
0x26c PUSH1 0x1
0x26e PUSH1 0xa0
0x270 PUSH1 0x2
0x272 EXP
0x273 SUB
0x274 ADDRESS
0x275 AND
0x276 BALANCE
0x277 GT
0x278 PUSH2 0x280
0x27b JUMPI
---
0x269: JUMPDEST 
0x26a: V222 = 0x0
0x26c: V223 = 0x1
0x26e: V224 = 0xa0
0x270: V225 = 0x2
0x272: V226 = EXP 0x2 0xa0
0x273: V227 = SUB 0x10000000000000000000000000000000000000000 0x1
0x274: V228 = ADDRESS
0x275: V229 = AND V228 0xffffffffffffffffffffffffffffffffffffffff
0x276: V230 = BALANCE V229
0x277: V231 = GT V230 0x0
0x278: V232 = 0x280
0x27b: JUMPI 0x280 V231
---
Entry stack: [V11, 0x82, V203]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V203]

================================

Block 0x27c
[0x27c:0x27f]
---
Predecessors: [0x269]
Successors: []
---
0x27c PUSH1 0x0
0x27e DUP1
0x27f REVERT
---
0x27c: V233 = 0x0
0x27f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x82, V203]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V203]

================================

Block 0x280
[0x280:0x2b4]
---
Predecessors: [0x269]
Successors: [0x2b5, 0x2b9]
---
0x280 JUMPDEST
0x281 PUSH1 0x0
0x283 SLOAD
0x284 PUSH1 0x1
0x286 PUSH1 0xa0
0x288 PUSH1 0x2
0x28a EXP
0x28b SUB
0x28c SWAP1
0x28d DUP2
0x28e AND
0x28f SWAP1
0x290 ADDRESS
0x291 AND
0x292 BALANCE
0x293 DUP1
0x294 ISZERO
0x295 PUSH2 0x8fc
0x298 MUL
0x299 SWAP1
0x29a PUSH1 0x40
0x29c MLOAD
0x29d PUSH1 0x0
0x29f PUSH1 0x40
0x2a1 MLOAD
0x2a2 DUP1
0x2a3 DUP4
0x2a4 SUB
0x2a5 DUP2
0x2a6 DUP6
0x2a7 DUP9
0x2a8 DUP9
0x2a9 CALL
0x2aa SWAP4
0x2ab POP
0x2ac POP
0x2ad POP
0x2ae POP
0x2af ISZERO
0x2b0 ISZERO
0x2b1 PUSH2 0x2b9
0x2b4 JUMPI
---
0x280: JUMPDEST 
0x281: V234 = 0x0
0x283: V235 = S[0x0]
0x284: V236 = 0x1
0x286: V237 = 0xa0
0x288: V238 = 0x2
0x28a: V239 = EXP 0x2 0xa0
0x28b: V240 = SUB 0x10000000000000000000000000000000000000000 0x1
0x28e: V241 = AND 0xffffffffffffffffffffffffffffffffffffffff V235
0x290: V242 = ADDRESS
0x291: V243 = AND V242 0xffffffffffffffffffffffffffffffffffffffff
0x292: V244 = BALANCE V243
0x294: V245 = ISZERO V244
0x295: V246 = 0x8fc
0x298: V247 = MUL 0x8fc V245
0x29a: V248 = 0x40
0x29c: V249 = M[0x40]
0x29d: V250 = 0x0
0x29f: V251 = 0x40
0x2a1: V252 = M[0x40]
0x2a4: V253 = SUB V249 V252
0x2a9: V254 = CALL V247 V241 V244 V252 V253 V252 0x0
0x2af: V255 = ISZERO V254
0x2b0: V256 = ISZERO V255
0x2b1: V257 = 0x2b9
0x2b4: JUMPI 0x2b9 V256
---
Entry stack: [V11, 0x82, V203]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V203]

================================

Block 0x2b5
[0x2b5:0x2b8]
---
Predecessors: [0x280]
Successors: []
---
0x2b5 PUSH1 0x0
0x2b7 DUP1
0x2b8 REVERT
---
0x2b5: V258 = 0x0
0x2b8: REVERT 0x0 0x0
---
Entry stack: [V11, 0x82, V203]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V203]

================================

Block 0x2b9
[0x2b9:0x2bb]
---
Predecessors: [0x280]
Successors: [0x82]
---
0x2b9 JUMPDEST
0x2ba POP
0x2bb JUMP
---
0x2b9: JUMPDEST 
0x2bb: JUMP 0x82
---
Entry stack: [V11, 0x82, V203]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x2bc
[0x2bc:0x2ca]
---
Predecessors: [0xd5]
Successors: [0xdd]
---
0x2bc JUMPDEST
0x2bd PUSH1 0x0
0x2bf SLOAD
0x2c0 PUSH1 0x1
0x2c2 PUSH1 0xa0
0x2c4 PUSH1 0x2
0x2c6 EXP
0x2c7 SUB
0x2c8 AND
0x2c9 DUP2
0x2ca JUMP
---
0x2bc: JUMPDEST 
0x2bd: V259 = 0x0
0x2bf: V260 = S[0x0]
0x2c0: V261 = 0x1
0x2c2: V262 = 0xa0
0x2c4: V263 = 0x2
0x2c6: V264 = EXP 0x2 0xa0
0x2c7: V265 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c8: V266 = AND 0xffffffffffffffffffffffffffffffffffffffff V260
0x2ca: JUMP 0xdd
---
Entry stack: [V11, 0xdd]
Stack pops: 1
Stack additions: [S0, V266]
Exit stack: [V11, 0xdd, V266]

================================

Block 0x2cb
[0x2cb:0x2df]
---
Predecessors: [0x104]
Successors: [0x118]
---
0x2cb JUMPDEST
0x2cc PUSH1 0x1
0x2ce PUSH1 0x20
0x2d0 MSTORE
0x2d1 PUSH1 0x0
0x2d3 SWAP1
0x2d4 DUP2
0x2d5 MSTORE
0x2d6 PUSH1 0x40
0x2d8 SWAP1
0x2d9 SHA3
0x2da SLOAD
0x2db PUSH1 0xff
0x2dd AND
0x2de DUP2
0x2df JUMP
---
0x2cb: JUMPDEST 
0x2cc: V267 = 0x1
0x2ce: V268 = 0x20
0x2d0: M[0x20] = 0x1
0x2d1: V269 = 0x0
0x2d5: M[0x0] = V94
0x2d6: V270 = 0x40
0x2d9: V271 = SHA3 0x0 0x40
0x2da: V272 = S[V271]
0x2db: V273 = 0xff
0x2dd: V274 = AND 0xff V272
0x2df: JUMP 0x118
---
Entry stack: [V11, 0x118, V94]
Stack pops: 2
Stack additions: [S1, V274]
Exit stack: [V11, 0x118, V274]

================================

Block 0x2e0
[0x2e0:0x303]
---
Predecessors: [0x137]
Successors: [0x304, 0x308]
---
0x2e0 JUMPDEST
0x2e1 CALLER
0x2e2 PUSH1 0x1
0x2e4 PUSH1 0xa0
0x2e6 PUSH1 0x2
0x2e8 EXP
0x2e9 SUB
0x2ea DUP2
0x2eb AND
0x2ec PUSH1 0x0
0x2ee SWAP1
0x2ef DUP2
0x2f0 MSTORE
0x2f1 PUSH1 0x1
0x2f3 PUSH1 0x20
0x2f5 MSTORE
0x2f6 PUSH1 0x40
0x2f8 SWAP1
0x2f9 SHA3
0x2fa SLOAD
0x2fb PUSH1 0xff
0x2fd AND
0x2fe ISZERO
0x2ff ISZERO
0x300 PUSH2 0x308
0x303 JUMPI
---
0x2e0: JUMPDEST 
0x2e1: V275 = CALLER
0x2e2: V276 = 0x1
0x2e4: V277 = 0xa0
0x2e6: V278 = 0x2
0x2e8: V279 = EXP 0x2 0xa0
0x2e9: V280 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2eb: V281 = AND V275 0xffffffffffffffffffffffffffffffffffffffff
0x2ec: V282 = 0x0
0x2f0: M[0x0] = V281
0x2f1: V283 = 0x1
0x2f3: V284 = 0x20
0x2f5: M[0x20] = 0x1
0x2f6: V285 = 0x40
0x2f9: V286 = SHA3 0x0 0x40
0x2fa: V287 = S[V286]
0x2fb: V288 = 0xff
0x2fd: V289 = AND 0xff V287
0x2fe: V290 = ISZERO V289
0x2ff: V291 = ISZERO V290
0x300: V292 = 0x308
0x303: JUMPI 0x308 V291
---
Entry stack: [V11, 0x82, V117, V121]
Stack pops: 0
Stack additions: [V275]
Exit stack: [V11, 0x82, V117, V121, V275]

================================

Block 0x304
[0x304:0x307]
---
Predecessors: [0x2e0]
Successors: []
---
0x304 PUSH1 0x0
0x306 DUP1
0x307 REVERT
---
0x304: V293 = 0x0
0x307: REVERT 0x0 0x0
---
Entry stack: [V11, 0x82, V117, V121, V275]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V117, V121, V275]

================================

Block 0x308
[0x308:0x333]
---
Predecessors: [0x2e0]
Successors: [0x82]
---
0x308 JUMPDEST
0x309 POP
0x30a PUSH1 0x1
0x30c PUSH1 0xa0
0x30e PUSH1 0x2
0x310 EXP
0x311 SUB
0x312 SWAP2
0x313 SWAP1
0x314 SWAP2
0x315 AND
0x316 PUSH1 0x0
0x318 SWAP1
0x319 DUP2
0x31a MSTORE
0x31b PUSH1 0x1
0x31d PUSH1 0x20
0x31f MSTORE
0x320 PUSH1 0x40
0x322 SWAP1
0x323 SHA3
0x324 DUP1
0x325 SLOAD
0x326 PUSH1 0xff
0x328 NOT
0x329 AND
0x32a SWAP2
0x32b ISZERO
0x32c ISZERO
0x32d SWAP2
0x32e SWAP1
0x32f SWAP2
0x330 OR
0x331 SWAP1
0x332 SSTORE
0x333 JUMP
---
0x308: JUMPDEST 
0x30a: V294 = 0x1
0x30c: V295 = 0xa0
0x30e: V296 = 0x2
0x310: V297 = EXP 0x2 0xa0
0x311: V298 = SUB 0x10000000000000000000000000000000000000000 0x1
0x315: V299 = AND 0xffffffffffffffffffffffffffffffffffffffff V117
0x316: V300 = 0x0
0x31a: M[0x0] = V299
0x31b: V301 = 0x1
0x31d: V302 = 0x20
0x31f: M[0x20] = 0x1
0x320: V303 = 0x40
0x323: V304 = SHA3 0x0 0x40
0x325: V305 = S[V304]
0x326: V306 = 0xff
0x328: V307 = NOT 0xff
0x329: V308 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V305
0x32b: V309 = ISZERO V121
0x32c: V310 = ISZERO V309
0x330: V311 = OR V310 V308
0x332: S[V304] = V311
0x333: JUMP 0x82
---
Entry stack: [V11, 0x82, V117, V121, V275]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x334
[0x334:0x357]
---
Predecessors: [0x15b]
Successors: [0x358, 0x35c]
---
0x334 JUMPDEST
0x335 CALLER
0x336 PUSH1 0x1
0x338 PUSH1 0xa0
0x33a PUSH1 0x2
0x33c EXP
0x33d SUB
0x33e DUP2
0x33f AND
0x340 PUSH1 0x0
0x342 SWAP1
0x343 DUP2
0x344 MSTORE
0x345 PUSH1 0x1
0x347 PUSH1 0x20
0x349 MSTORE
0x34a PUSH1 0x40
0x34c SWAP1
0x34d SHA3
0x34e SLOAD
0x34f PUSH1 0xff
0x351 AND
0x352 ISZERO
0x353 ISZERO
0x354 PUSH2 0x35c
0x357 JUMPI
---
0x334: JUMPDEST 
0x335: V312 = CALLER
0x336: V313 = 0x1
0x338: V314 = 0xa0
0x33a: V315 = 0x2
0x33c: V316 = EXP 0x2 0xa0
0x33d: V317 = SUB 0x10000000000000000000000000000000000000000 0x1
0x33f: V318 = AND V312 0xffffffffffffffffffffffffffffffffffffffff
0x340: V319 = 0x0
0x344: M[0x0] = V318
0x345: V320 = 0x1
0x347: V321 = 0x20
0x349: M[0x20] = 0x1
0x34a: V322 = 0x40
0x34d: V323 = SHA3 0x0 0x40
0x34e: V324 = S[V323]
0x34f: V325 = 0xff
0x351: V326 = AND 0xff V324
0x352: V327 = ISZERO V326
0x353: V328 = ISZERO V327
0x354: V329 = 0x35c
0x357: JUMPI 0x35c V328
---
Entry stack: [V11, 0x82]
Stack pops: 0
Stack additions: [V312]
Exit stack: [V11, 0x82, V312]

================================

Block 0x358
[0x358:0x35b]
---
Predecessors: [0x334]
Successors: []
---
0x358 PUSH1 0x0
0x35a DUP1
0x35b REVERT
---
0x358: V330 = 0x0
0x35b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x82, V312]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V312]

================================

Block 0x35c
[0x35c:0x369]
---
Predecessors: [0x334]
Successors: []
---
0x35c JUMPDEST
0x35d PUSH1 0x0
0x35f SLOAD
0x360 PUSH1 0x1
0x362 PUSH1 0xa0
0x364 PUSH1 0x2
0x366 EXP
0x367 SUB
0x368 AND
0x369 SELFDESTRUCT
---
0x35c: JUMPDEST 
0x35d: V331 = 0x0
0x35f: V332 = S[0x0]
0x360: V333 = 0x1
0x362: V334 = 0xa0
0x364: V335 = 0x2
0x366: V336 = EXP 0x2 0xa0
0x367: V337 = SUB 0x10000000000000000000000000000000000000000 0x1
0x368: V338 = AND 0xffffffffffffffffffffffffffffffffffffffff V332
0x369: SELFDESTRUCT V338
---
Entry stack: [V11, 0x82, V312]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V312]

================================

Block 0x36a
[0x36a:0x374]
---
Predecessors: [0x173]
Successors: [0x375, 0x37d]
---
0x36a JUMPDEST
0x36b PUSH1 0x0
0x36d DUP1
0x36e DUP4
0x36f ISZERO
0x370 ISZERO
0x371 PUSH2 0x37d
0x374 JUMPI
---
0x36a: JUMPDEST 
0x36b: V339 = 0x0
0x36f: V340 = ISZERO V135
0x370: V341 = ISZERO V340
0x371: V342 = 0x37d
0x374: JUMPI 0x37d V341
---
Entry stack: [V11, 0x82, V41, 0x0, 0x0, 0x17e, V135, 0x8]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0]
Exit stack: [V11, 0x82, V41, 0x0, 0x0, 0x17e, V135, 0x8, 0x0, 0x0]

================================

Block 0x375
[0x375:0x37c]
---
Predecessors: [0x36a]
Successors: [0x399]
---
0x375 PUSH1 0x0
0x377 SWAP2
0x378 POP
0x379 PUSH2 0x399
0x37c JUMP
---
0x375: V343 = 0x0
0x379: V344 = 0x399
0x37c: JUMP 0x399
---
Entry stack: [V11, 0x82, V41, 0x0, 0x0, 0x17e, V135, 0x8, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V11, 0x82, V41, 0x0, 0x0, 0x17e, V135, 0x8, 0x0, 0x0]

================================

Block 0x37d
[0x37d:0x38b]
---
Predecessors: [0x36a]
Successors: [0x38c, 0x38d]
---
0x37d JUMPDEST
0x37e POP
0x37f DUP3
0x380 DUP3
0x381 MUL
0x382 DUP3
0x383 DUP5
0x384 DUP3
0x385 DUP2
0x386 ISZERO
0x387 ISZERO
0x388 PUSH2 0x38d
0x38b JUMPI
---
0x37d: JUMPDEST 
0x381: V345 = MUL 0x8 V135
0x386: V346 = ISZERO V135
0x387: V347 = ISZERO V346
0x388: V348 = 0x38d
0x38b: JUMPI 0x38d V347
---
Entry stack: [V11, 0x82, V41, 0x0, 0x0, 0x17e, V135, 0x8, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, V345, S2, S3, V345]
Exit stack: [V11, 0x82, V41, 0x0, 0x0, 0x17e, V135, 0x8, 0x0, V345, 0x8, V135, V345]

================================

Block 0x38c
[0x38c:0x38c]
---
Predecessors: [0x37d]
Successors: []
---
0x38c INVALID
---
0x38c: INVALID 
---
Entry stack: [V11, 0x82, V41, 0x0, 0x0, 0x17e, V135, 0x8, 0x0, V345, 0x8, V135, V345]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V41, 0x0, 0x0, 0x17e, V135, 0x8, 0x0, V345, 0x8, V135, V345]

================================

Block 0x38d
[0x38d:0x393]
---
Predecessors: [0x37d]
Successors: [0x394, 0x395]
---
0x38d JUMPDEST
0x38e DIV
0x38f EQ
0x390 PUSH2 0x395
0x393 JUMPI
---
0x38d: JUMPDEST 
0x38e: V349 = DIV V345 V135
0x38f: V350 = EQ V349 0x8
0x390: V351 = 0x395
0x393: JUMPI 0x395 V350
---
Entry stack: [V11, 0x82, V41, 0x0, 0x0, 0x17e, V135, 0x8, 0x0, V345, 0x8, V135, V345]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x82, V41, 0x0, 0x0, 0x17e, V135, 0x8, 0x0, V345]

================================

Block 0x394
[0x394:0x394]
---
Predecessors: [0x38d]
Successors: []
---
0x394 INVALID
---
0x394: INVALID 
---
Entry stack: [V11, 0x82, V41, 0x0, 0x0, 0x17e, V135, 0x8, 0x0, V345]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V41, 0x0, 0x0, 0x17e, V135, 0x8, 0x0, V345]

================================

Block 0x395
[0x395:0x398]
---
Predecessors: [0x38d]
Successors: [0x399]
---
0x395 JUMPDEST
0x396 DUP1
0x397 SWAP2
0x398 POP
---
0x395: JUMPDEST 
---
Entry stack: [V11, 0x82, V41, 0x0, 0x0, 0x17e, V135, 0x8, 0x0, V345]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V11, 0x82, V41, 0x0, 0x0, 0x17e, V135, 0x8, V345, V345]

================================

Block 0x399
[0x399:0x39f]
---
Predecessors: [0x375, 0x395]
Successors: [0x17e]
---
0x399 JUMPDEST
0x39a POP
0x39b SWAP3
0x39c SWAP2
0x39d POP
0x39e POP
0x39f JUMP
---
0x399: JUMPDEST 
0x39f: JUMP 0x17e
---
Entry stack: [V11, 0x82, V41, 0x0, 0x0, 0x17e, V135, 0x8, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V11, 0x82, V41, 0x0, 0x0, S1]

================================

Block 0x3a0
[0x3a0:0x3ac]
---
Predecessors: [0x17e]
Successors: [0x3ad, 0x3ae]
---
0x3a0 JUMPDEST
0x3a1 PUSH1 0x0
0x3a3 DUP1
0x3a4 DUP3
0x3a5 DUP5
0x3a6 DUP2
0x3a7 ISZERO
0x3a8 ISZERO
0x3a9 PUSH2 0x3ae
0x3ac JUMPI
---
0x3a0: JUMPDEST 
0x3a1: V352 = 0x0
0x3a7: V353 = ISZERO 0x64
0x3a8: V354 = ISZERO 0x0
0x3a9: V355 = 0x3ae
0x3ac: JUMPI 0x3ae 0x1
---
Entry stack: [V11, 0x82, V41, S4, 0x0, 0x18b, S1, 0x64]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, S0, S1]
Exit stack: [V11, 0x82, V41, S4, 0x0, 0x18b, S1, 0x64, 0x0, 0x0, 0x64, S1]

================================

Block 0x3ad
[0x3ad:0x3ad]
---
Predecessors: [0x3a0]
Successors: []
---
0x3ad INVALID
---
0x3ad: INVALID 
---
Entry stack: [V11, 0x82, V41, S8, 0x0, 0x18b, S5, 0x64, 0x0, 0x0, 0x64, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V41, S8, 0x0, 0x18b, S5, 0x64, 0x0, 0x0, 0x64, S0]

================================

Block 0x3ae
[0x3ae:0x3b6]
---
Predecessors: [0x3a0]
Successors: [0x18b]
---
0x3ae JUMPDEST
0x3af DIV
0x3b0 SWAP5
0x3b1 SWAP4
0x3b2 POP
0x3b3 POP
0x3b4 POP
0x3b5 POP
0x3b6 JUMP
---
0x3ae: JUMPDEST 
0x3af: V356 = DIV S0 0x64
0x3b6: JUMP 0x18b
---
Entry stack: [V11, 0x82, V41, S8, 0x0, 0x18b, S5, 0x64, 0x0, 0x0, 0x64, S0]
Stack pops: 7
Stack additions: [V356]
Exit stack: [V11, 0x82, V41, S8, 0x0, V356]

================================

Block 0x3b7
[0x3b7:0x3c1]
---
Predecessors: [0x18b]
Successors: [0x3c2, 0x3c3]
---
0x3b7 JUMPDEST
0x3b8 PUSH1 0x0
0x3ba DUP3
0x3bb DUP3
0x3bc GT
0x3bd ISZERO
0x3be PUSH2 0x3c3
0x3c1 JUMPI
---
0x3b7: JUMPDEST 
0x3b8: V357 = 0x0
0x3bc: V358 = GT V356 V142
0x3bd: V359 = ISZERO V358
0x3be: V360 = 0x3c3
0x3c1: JUMPI 0x3c3 V359
---
Entry stack: [V11, 0x82, V41, V356, 0x0, 0x197, V142, V356]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V11, 0x82, V41, V356, 0x0, 0x197, V142, V356, 0x0]

================================

Block 0x3c2
[0x3c2:0x3c2]
---
Predecessors: [0x3b7]
Successors: []
---
0x3c2 INVALID
---
0x3c2: INVALID 
---
Entry stack: [V11, 0x82, V41, V356, 0x0, 0x197, V142, V356, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V41, V356, 0x0, 0x197, V142, V356, 0x0]

================================

Block 0x3c3
[0x3c3:0x3c8]
---
Predecessors: [0x3b7]
Successors: [0x197]
---
0x3c3 JUMPDEST
0x3c4 POP
0x3c5 SWAP1
0x3c6 SUB
0x3c7 SWAP1
0x3c8 JUMP
---
0x3c3: JUMPDEST 
0x3c6: V361 = SUB V142 V356
0x3c8: JUMP 0x197
---
Entry stack: [V11, 0x82, V41, V356, 0x0, 0x197, V142, V356, 0x0]
Stack pops: 4
Stack additions: [V361]
Exit stack: [V11, 0x82, V41, V356, 0x0, V361]

================================

Block 0x3c9
[0x3c9:0x3fc]
---
Predecessors: []
Successors: []
---
0x3c9 STOP
0x3ca LOG1
0x3cb PUSH6 0x627a7a723058
0x3d2 SHA3
0x3d3 POP
0x3d4 ADD
0x3d5 SHL
0x3d6 PUSH7 0xf673774acae89
0x3de MISSING 0xd0
0x3df OR
0x3e0 DUP10
0x3e1 PUSH27 0xe0311d4bd2c3a7b9ec682693da554e66cc0029
---
0x3c9: STOP 
0x3ca: LOG S0 S1 S2
0x3cb: V362 = 0x627a7a723058
0x3d2: V363 = SHA3 0x627a7a723058 S3
0x3d4: V364 = ADD S4 S5
0x3d5: V365 = SHL V364 S6
0x3d6: V366 = 0xf673774acae89
0x3de: MISSING 0xd0
0x3df: V367 = OR S0 S1
0x3e1: V368 = 0xe0311d4bd2c3a7b9ec682693da554e66cc0029
---
Entry stack: []
Stack pops: 0
Stack additions: [0xf673774acae89, V365, 0xe0311d4bd2c3a7b9ec682693da554e66cc0029, S10, V367, S2, S3, S4, S5, S6, S7, S8, S9, S10]
Exit stack: []

================================

Function 0:
Public function signature: 0x101e8952
Entry block: 0x84
Exit block: 0x82
Body: 0x82, 0x84, 0x163, 0x16f, 0x173, 0x17e, 0x18b, 0x197, 0x1a2, 0x1a6, 0x1af, 0x1b3, 0x1e0, 0x1e4, 0x36a, 0x375, 0x37d, 0x38c, 0x38d, 0x394, 0x395, 0x399, 0x3a0, 0x3ad, 0x3ae, 0x3b7, 0x3c2, 0x3c3

Function 1:
Public function signature: 0x33ea51a8
Entry block: 0x98
Exit block: 0x82
Body: 0x82, 0x98, 0x9f, 0xa3, 0x1e9, 0x20d, 0x211

Function 2:
Public function signature: 0x35faa416
Entry block: 0xb7
Exit block: 0x82
Body: 0x82, 0xb7, 0xbe, 0xc2, 0x241, 0x265, 0x269, 0x27c, 0x280, 0x2b5, 0x2b9

Function 3:
Public function signature: 0x5b8d02d7
Entry block: 0xca
Exit block: 0xdd
Body: 0xca, 0xd1, 0xd5, 0xdd, 0x2bc

Function 4:
Public function signature: 0x76be1585
Entry block: 0xf9
Exit block: 0x118
Body: 0xf9, 0x100, 0x104, 0x118, 0x2cb

Function 5:
Public function signature: 0x87c95058
Entry block: 0x12c
Exit block: 0x82
Body: 0x82, 0x12c, 0x133, 0x137, 0x2e0, 0x304, 0x308

Function 6:
Public function signature: 0xf3f989ec
Entry block: 0x150
Exit block: 0x358
Body: 0x150, 0x157, 0x15b, 0x334, 0x358, 0x35c

Function 7:
Public fallback function
Entry block: 0x82
Exit block: 0x82
Body: 0x82

