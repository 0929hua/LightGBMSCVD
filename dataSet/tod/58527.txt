Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x49]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x49
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x49
0xa: JUMPI 0x49 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0xd4]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x1500c464
0x38 DUP2
0x39 EQ
0x3a PUSH2 0xd4
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x1500c464
0x39: V12 = EQ V10 0x1500c464
0x3a: V13 = 0xd4
0x3d: JUMPI 0xd4 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0xea]
---
0x3e DUP1
0x3f PUSH4 0x41c0e1b5
0x44 EQ
0x45 PUSH2 0xea
0x48 JUMPI
---
0x3f: V14 = 0x41c0e1b5
0x44: V15 = EQ 0x41c0e1b5 V10
0x45: V16 = 0xea
0x48: JUMPI 0xea V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x4c]
---
Predecessors: [0x0, 0x3e]
Successors: [0x4d]
---
0x49 JUMPDEST
0x4a PUSH2 0xd2
---
0x49: JUMPDEST 
0x4a: V17 = 0xd2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xd2]
Exit stack: [V10, 0xd2]

================================

Block 0x4d
[0x4d:0x56]
---
Predecessors: [0x49]
Successors: [0x57, 0xcf]
---
0x4d JUMPDEST
0x4e PUSH1 0x0
0x50 CALLVALUE
0x51 GT
0x52 ISZERO
0x53 PUSH2 0xcf
0x56 JUMPI
---
0x4d: JUMPDEST 
0x4e: V18 = 0x0
0x50: V19 = CALLVALUE
0x51: V20 = GT V19 0x0
0x52: V21 = ISZERO V20
0x53: V22 = 0xcf
0x56: JUMPI 0xcf V21
---
Entry stack: [V10, 0xd2]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xd2]

================================

Block 0x57
[0x57:0x85]
---
Predecessors: [0x4d]
Successors: [0x86, 0x8a]
---
0x57 PUSH1 0x0
0x59 SLOAD
0x5a PUSH1 0x1
0x5c PUSH1 0xa0
0x5e PUSH1 0x2
0x60 EXP
0x61 SUB
0x62 AND
0x63 CALLVALUE
0x64 DUP1
0x65 ISZERO
0x66 PUSH2 0x8fc
0x69 MUL
0x6a SWAP1
0x6b PUSH1 0x40
0x6d MLOAD
0x6e PUSH1 0x0
0x70 PUSH1 0x40
0x72 MLOAD
0x73 DUP1
0x74 DUP4
0x75 SUB
0x76 DUP2
0x77 DUP6
0x78 DUP9
0x79 DUP9
0x7a CALL
0x7b SWAP4
0x7c POP
0x7d POP
0x7e POP
0x7f POP
0x80 ISZERO
0x81 ISZERO
0x82 PUSH2 0x8a
0x85 JUMPI
---
0x57: V23 = 0x0
0x59: V24 = S[0x0]
0x5a: V25 = 0x1
0x5c: V26 = 0xa0
0x5e: V27 = 0x2
0x60: V28 = EXP 0x2 0xa0
0x61: V29 = SUB 0x10000000000000000000000000000000000000000 0x1
0x62: V30 = AND 0xffffffffffffffffffffffffffffffffffffffff V24
0x63: V31 = CALLVALUE
0x65: V32 = ISZERO V31
0x66: V33 = 0x8fc
0x69: V34 = MUL 0x8fc V32
0x6b: V35 = 0x40
0x6d: V36 = M[0x40]
0x6e: V37 = 0x0
0x70: V38 = 0x40
0x72: V39 = M[0x40]
0x75: V40 = SUB V36 V39
0x7a: V41 = CALL V34 V30 V31 V39 V40 V39 0x0
0x80: V42 = ISZERO V41
0x81: V43 = ISZERO V42
0x82: V44 = 0x8a
0x85: JUMPI 0x8a V43
---
Entry stack: [V10, 0xd2]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xd2]

================================

Block 0x86
[0x86:0x89]
---
Predecessors: [0x57]
Successors: []
---
0x86 PUSH1 0x0
0x88 DUP1
0x89 REVERT
---
0x86: V45 = 0x0
0x89: REVERT 0x0 0x0
---
Entry stack: [V10, 0xd2]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xd2]

================================

Block 0x8a
[0x8a:0xce]
---
Predecessors: [0x57]
Successors: [0xcf]
---
0x8a JUMPDEST
0x8b PUSH32 0xf631de8433424fbdcfd8dd36670beaf4cbbabc53eb207ead9cffdfa958824dd9
0xac CALLER
0xad CALLVALUE
0xae PUSH1 0x40
0xb0 MLOAD
0xb1 PUSH1 0x1
0xb3 PUSH1 0xa0
0xb5 PUSH1 0x2
0xb7 EXP
0xb8 SUB
0xb9 SWAP1
0xba SWAP3
0xbb AND
0xbc DUP3
0xbd MSTORE
0xbe PUSH1 0x20
0xc0 DUP3
0xc1 ADD
0xc2 MSTORE
0xc3 PUSH1 0x40
0xc5 SWAP1
0xc6 DUP2
0xc7 ADD
0xc8 SWAP1
0xc9 MLOAD
0xca DUP1
0xcb SWAP2
0xcc SUB
0xcd SWAP1
0xce LOG1
---
0x8a: JUMPDEST 
0x8b: V46 = 0xf631de8433424fbdcfd8dd36670beaf4cbbabc53eb207ead9cffdfa958824dd9
0xac: V47 = CALLER
0xad: V48 = CALLVALUE
0xae: V49 = 0x40
0xb0: V50 = M[0x40]
0xb1: V51 = 0x1
0xb3: V52 = 0xa0
0xb5: V53 = 0x2
0xb7: V54 = EXP 0x2 0xa0
0xb8: V55 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbb: V56 = AND V47 0xffffffffffffffffffffffffffffffffffffffff
0xbd: M[V50] = V56
0xbe: V57 = 0x20
0xc1: V58 = ADD V50 0x20
0xc2: M[V58] = V48
0xc3: V59 = 0x40
0xc7: V60 = ADD 0x40 V50
0xc9: V61 = M[0x40]
0xcc: V62 = SUB V60 V61
0xce: LOG V61 V62 0xf631de8433424fbdcfd8dd36670beaf4cbbabc53eb207ead9cffdfa958824dd9
---
Entry stack: [V10, 0xd2]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xd2]

================================

Block 0xcf
[0xcf:0xcf]
---
Predecessors: [0x4d, 0x8a, 0x185]
Successors: [0xd0]
---
0xcf JUMPDEST
---
0xcf: JUMPDEST 
---
Entry stack: [V10, 0xd2]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xd2]

================================

Block 0xd0
[0xd0:0xd1]
---
Predecessors: [0xcf]
Successors: [0xd2]
---
0xd0 JUMPDEST
0xd1 JUMP
---
0xd0: JUMPDEST 
0xd1: JUMP 0xd2
---
Entry stack: [V10, 0xd2]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xd2
[0xd2:0xd3]
---
Predecessors: [0xd0, 0x182]
Successors: []
---
0xd2 JUMPDEST
0xd3 STOP
---
0xd2: JUMPDEST 
0xd3: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xd4
[0xd4:0xe7]
---
Predecessors: [0xb]
Successors: [0xff]
---
0xd4 JUMPDEST
0xd5 PUSH2 0xd2
0xd8 PUSH1 0x1
0xda PUSH1 0xa0
0xdc PUSH1 0x2
0xde EXP
0xdf SUB
0xe0 PUSH1 0x4
0xe2 CALLDATALOAD
0xe3 AND
0xe4 PUSH2 0xff
0xe7 JUMP
---
0xd4: JUMPDEST 
0xd5: V63 = 0xd2
0xd8: V64 = 0x1
0xda: V65 = 0xa0
0xdc: V66 = 0x2
0xde: V67 = EXP 0x2 0xa0
0xdf: V68 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe0: V69 = 0x4
0xe2: V70 = CALLDATALOAD 0x4
0xe3: V71 = AND V70 0xffffffffffffffffffffffffffffffffffffffff
0xe4: V72 = 0xff
0xe7: JUMP 0xff
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xd2, V71]
Exit stack: [V10, 0xd2, V71]

================================

Block 0xe8
[0xe8:0xe9]
---
Predecessors: []
Successors: []
---
0xe8 JUMPDEST
0xe9 STOP
---
0xe8: JUMPDEST 
0xe9: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xea
[0xea:0xf0]
---
Predecessors: [0x3e]
Successors: [0xf1, 0xf5]
---
0xea JUMPDEST
0xeb CALLVALUE
0xec ISZERO
0xed PUSH2 0xf5
0xf0 JUMPI
---
0xea: JUMPDEST 
0xeb: V73 = CALLVALUE
0xec: V74 = ISZERO V73
0xed: V75 = 0xf5
0xf0: JUMPI 0xf5 V74
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xf1
[0xf1:0xf4]
---
Predecessors: [0xea]
Successors: []
---
0xf1 PUSH1 0x0
0xf3 DUP1
0xf4 REVERT
---
0xf1: V76 = 0x0
0xf4: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xf5
[0xf5:0xfc]
---
Predecessors: [0xea]
Successors: [0x185]
---
0xf5 JUMPDEST
0xf6 PUSH2 0xd2
0xf9 PUSH2 0x185
0xfc JUMP
---
0xf5: JUMPDEST 
0xf6: V77 = 0xd2
0xf9: V78 = 0x185
0xfc: JUMP 0x185
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xd2]
Exit stack: [V10, 0xd2]

================================

Block 0xfd
[0xfd:0xfe]
---
Predecessors: []
Successors: []
---
0xfd JUMPDEST
0xfe STOP
---
0xfd: JUMPDEST 
0xfe: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xff
[0xff:0x108]
---
Predecessors: [0xd4]
Successors: [0x109, 0x181]
---
0xff JUMPDEST
0x100 PUSH1 0x0
0x102 CALLVALUE
0x103 GT
0x104 ISZERO
0x105 PUSH2 0x181
0x108 JUMPI
---
0xff: JUMPDEST 
0x100: V79 = 0x0
0x102: V80 = CALLVALUE
0x103: V81 = GT V80 0x0
0x104: V82 = ISZERO V81
0x105: V83 = 0x181
0x108: JUMPI 0x181 V82
---
Entry stack: [V10, 0xd2, V71]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xd2, V71]

================================

Block 0x109
[0x109:0x137]
---
Predecessors: [0xff]
Successors: [0x138, 0x13c]
---
0x109 PUSH1 0x0
0x10b SLOAD
0x10c PUSH1 0x1
0x10e PUSH1 0xa0
0x110 PUSH1 0x2
0x112 EXP
0x113 SUB
0x114 AND
0x115 CALLVALUE
0x116 DUP1
0x117 ISZERO
0x118 PUSH2 0x8fc
0x11b MUL
0x11c SWAP1
0x11d PUSH1 0x40
0x11f MLOAD
0x120 PUSH1 0x0
0x122 PUSH1 0x40
0x124 MLOAD
0x125 DUP1
0x126 DUP4
0x127 SUB
0x128 DUP2
0x129 DUP6
0x12a DUP9
0x12b DUP9
0x12c CALL
0x12d SWAP4
0x12e POP
0x12f POP
0x130 POP
0x131 POP
0x132 ISZERO
0x133 ISZERO
0x134 PUSH2 0x13c
0x137 JUMPI
---
0x109: V84 = 0x0
0x10b: V85 = S[0x0]
0x10c: V86 = 0x1
0x10e: V87 = 0xa0
0x110: V88 = 0x2
0x112: V89 = EXP 0x2 0xa0
0x113: V90 = SUB 0x10000000000000000000000000000000000000000 0x1
0x114: V91 = AND 0xffffffffffffffffffffffffffffffffffffffff V85
0x115: V92 = CALLVALUE
0x117: V93 = ISZERO V92
0x118: V94 = 0x8fc
0x11b: V95 = MUL 0x8fc V93
0x11d: V96 = 0x40
0x11f: V97 = M[0x40]
0x120: V98 = 0x0
0x122: V99 = 0x40
0x124: V100 = M[0x40]
0x127: V101 = SUB V97 V100
0x12c: V102 = CALL V95 V91 V92 V100 V101 V100 0x0
0x132: V103 = ISZERO V102
0x133: V104 = ISZERO V103
0x134: V105 = 0x13c
0x137: JUMPI 0x13c V104
---
Entry stack: [V10, 0xd2, V71]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xd2, V71]

================================

Block 0x138
[0x138:0x13b]
---
Predecessors: [0x109]
Successors: []
---
0x138 PUSH1 0x0
0x13a DUP1
0x13b REVERT
---
0x138: V106 = 0x0
0x13b: REVERT 0x0 0x0
---
Entry stack: [V10, 0xd2, V71]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xd2, V71]

================================

Block 0x13c
[0x13c:0x180]
---
Predecessors: [0x109]
Successors: [0x181]
---
0x13c JUMPDEST
0x13d PUSH32 0xf631de8433424fbdcfd8dd36670beaf4cbbabc53eb207ead9cffdfa958824dd9
0x15e DUP2
0x15f CALLVALUE
0x160 PUSH1 0x40
0x162 MLOAD
0x163 PUSH1 0x1
0x165 PUSH1 0xa0
0x167 PUSH1 0x2
0x169 EXP
0x16a SUB
0x16b SWAP1
0x16c SWAP3
0x16d AND
0x16e DUP3
0x16f MSTORE
0x170 PUSH1 0x20
0x172 DUP3
0x173 ADD
0x174 MSTORE
0x175 PUSH1 0x40
0x177 SWAP1
0x178 DUP2
0x179 ADD
0x17a SWAP1
0x17b MLOAD
0x17c DUP1
0x17d SWAP2
0x17e SUB
0x17f SWAP1
0x180 LOG1
---
0x13c: JUMPDEST 
0x13d: V107 = 0xf631de8433424fbdcfd8dd36670beaf4cbbabc53eb207ead9cffdfa958824dd9
0x15f: V108 = CALLVALUE
0x160: V109 = 0x40
0x162: V110 = M[0x40]
0x163: V111 = 0x1
0x165: V112 = 0xa0
0x167: V113 = 0x2
0x169: V114 = EXP 0x2 0xa0
0x16a: V115 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16d: V116 = AND V71 0xffffffffffffffffffffffffffffffffffffffff
0x16f: M[V110] = V116
0x170: V117 = 0x20
0x173: V118 = ADD V110 0x20
0x174: M[V118] = V108
0x175: V119 = 0x40
0x179: V120 = ADD 0x40 V110
0x17b: V121 = M[0x40]
0x17e: V122 = SUB V120 V121
0x180: LOG V121 V122 0xf631de8433424fbdcfd8dd36670beaf4cbbabc53eb207ead9cffdfa958824dd9
---
Entry stack: [V10, 0xd2, V71]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0xd2, V71]

================================

Block 0x181
[0x181:0x181]
---
Predecessors: [0xff, 0x13c]
Successors: [0x182]
---
0x181 JUMPDEST
---
0x181: JUMPDEST 
---
Entry stack: [V10, 0xd2, V71]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xd2, V71]

================================

Block 0x182
[0x182:0x184]
---
Predecessors: [0x181]
Successors: [0xd2]
---
0x182 JUMPDEST
0x183 POP
0x184 JUMP
---
0x182: JUMPDEST 
0x184: JUMP 0xd2
---
Entry stack: [V10, 0xd2, V71]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x185
[0x185:0x19c]
---
Predecessors: [0xf5]
Successors: [0xcf, 0x19d]
---
0x185 JUMPDEST
0x186 PUSH1 0x0
0x188 SLOAD
0x189 CALLER
0x18a PUSH1 0x1
0x18c PUSH1 0xa0
0x18e PUSH1 0x2
0x190 EXP
0x191 SUB
0x192 SWAP1
0x193 DUP2
0x194 AND
0x195 SWAP2
0x196 AND
0x197 EQ
0x198 ISZERO
0x199 PUSH2 0xcf
0x19c JUMPI
---
0x185: JUMPDEST 
0x186: V123 = 0x0
0x188: V124 = S[0x0]
0x189: V125 = CALLER
0x18a: V126 = 0x1
0x18c: V127 = 0xa0
0x18e: V128 = 0x2
0x190: V129 = EXP 0x2 0xa0
0x191: V130 = SUB 0x10000000000000000000000000000000000000000 0x1
0x194: V131 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x196: V132 = AND V124 0xffffffffffffffffffffffffffffffffffffffff
0x197: V133 = EQ V132 V131
0x198: V134 = ISZERO V133
0x199: V135 = 0xcf
0x19c: JUMPI 0xcf V134
---
Entry stack: [V10, 0xd2]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xd2]

================================

Block 0x19d
[0x19d:0x1a9]
---
Predecessors: [0x185]
Successors: []
---
0x19d PUSH1 0x0
0x19f SLOAD
0x1a0 PUSH1 0x1
0x1a2 PUSH1 0xa0
0x1a4 PUSH1 0x2
0x1a6 EXP
0x1a7 SUB
0x1a8 AND
0x1a9 SELFDESTRUCT
---
0x19d: V136 = 0x0
0x19f: V137 = S[0x0]
0x1a0: V138 = 0x1
0x1a2: V139 = 0xa0
0x1a4: V140 = 0x2
0x1a6: V141 = EXP 0x2 0xa0
0x1a7: V142 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a8: V143 = AND 0xffffffffffffffffffffffffffffffffffffffff V137
0x1a9: SELFDESTRUCT V143
---
Entry stack: [V10, 0xd2]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xd2]

================================

Block 0x1aa
[0x1aa:0x1aa]
---
Predecessors: []
Successors: [0x1ab]
---
0x1aa JUMPDEST
---
0x1aa: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1ab
[0x1ab:0x1eb]
---
Predecessors: [0x1aa]
Successors: []
---
0x1ab JUMPDEST
0x1ac JUMP
0x1ad STOP
0x1ae LOG1
0x1af PUSH6 0x627a7a723058
0x1b6 SHA3
0x1b7 PUSH17 0xbb92871d9367d775e7e17e27e693bc3c6c
0x1c9 CREATE
0x1ca MISSING 0xd2
0x1cb PUSH32 0x82b633e21f08869c62bb490029
---
0x1ab: JUMPDEST 
0x1ac: JUMP S0
0x1ad: STOP 
0x1ae: LOG S0 S1 S2
0x1af: V144 = 0x627a7a723058
0x1b6: V145 = SHA3 0x627a7a723058 S3
0x1b7: V146 = 0xbb92871d9367d775e7e17e27e693bc3c6c
0x1c9: V147 = CREATE 0xbb92871d9367d775e7e17e27e693bc3c6c V145 S4
0x1ca: MISSING 0xd2
0x1cb: V148 = 0x82b633e21f08869c62bb490029
---
Entry stack: []
Stack pops: 7
Stack additions: [0x82b633e21f08869c62bb490029]
Exit stack: []

================================

Function 0:
Public function signature: 0x1500c464
Entry block: 0xd4
Exit block: 0xd2
Body: 0xd2, 0xd4, 0xff, 0x109, 0x138, 0x13c, 0x181, 0x182

Function 1:
Public function signature: 0x41c0e1b5
Entry block: 0xea
Exit block: 0xd2
Body: 0xcf, 0xd0, 0xd2, 0xea, 0xf1, 0xf5, 0x185, 0x19d

Function 2:
Public fallback function
Entry block: 0x49
Exit block: 0xd2
Body: 0x49, 0x4d, 0x57, 0x86, 0x8a, 0xcf, 0xd0, 0xd2

