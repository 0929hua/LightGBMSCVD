Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x78]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x78
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x78
0xc: JUMPI 0x78 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x7d]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x1ddabf7a
0x3c EQ
0x3d PUSH2 0x7d
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x1ddabf7a
0x3c: V13 = EQ 0x1ddabf7a V11
0x3d: V14 = 0x7d
0x40: JUMPI 0x7d V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xd9]
---
0x41 DUP1
0x42 PUSH4 0x3ccfd60b
0x47 EQ
0x48 PUSH2 0xd9
0x4b JUMPI
---
0x42: V15 = 0x3ccfd60b
0x47: V16 = EQ 0x3ccfd60b V11
0x48: V17 = 0xd9
0x4b: JUMPI 0xd9 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xee]
---
0x4c DUP1
0x4d PUSH4 0x8da5cb5b
0x52 EQ
0x53 PUSH2 0xee
0x56 JUMPI
---
0x4d: V18 = 0x8da5cb5b
0x52: V19 = EQ 0x8da5cb5b V11
0x53: V20 = 0xee
0x56: JUMPI 0xee V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x143]
---
0x57 DUP1
0x58 PUSH4 0xd0e30db0
0x5d EQ
0x5e PUSH2 0x143
0x61 JUMPI
---
0x58: V21 = 0xd0e30db0
0x5d: V22 = EQ 0xd0e30db0 V11
0x5e: V23 = 0x143
0x61: JUMPI 0x143 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x14d]
---
0x62 DUP1
0x63 PUSH4 0xd7a1cfe1
0x68 EQ
0x69 PUSH2 0x14d
0x6c JUMPI
---
0x63: V24 = 0xd7a1cfe1
0x68: V25 = EQ 0xd7a1cfe1 V11
0x69: V26 = 0x14d
0x6c: JUMPI 0x14d V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x186]
---
0x6d DUP1
0x6e PUSH4 0xe0d5af94
0x73 EQ
0x74 PUSH2 0x186
0x77 JUMPI
---
0x6e: V27 = 0xe0d5af94
0x73: V28 = EQ 0xe0d5af94 V11
0x74: V29 = 0x186
0x77: JUMPI 0x186 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x7c]
---
Predecessors: [0x0, 0x6d]
Successors: []
---
0x78 JUMPDEST
0x79 PUSH1 0x0
0x7b DUP1
0x7c REVERT
---
0x78: JUMPDEST 
0x79: V30 = 0x0
0x7c: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7d
[0x7d:0x83]
---
Predecessors: [0xd]
Successors: [0x84, 0x88]
---
0x7d JUMPDEST
0x7e CALLVALUE
0x7f ISZERO
0x80 PUSH2 0x88
0x83 JUMPI
---
0x7d: JUMPDEST 
0x7e: V31 = CALLVALUE
0x7f: V32 = ISZERO V31
0x80: V33 = 0x88
0x83: JUMPI 0x88 V32
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x84
[0x84:0x87]
---
Predecessors: [0x7d]
Successors: []
---
0x84 PUSH1 0x0
0x86 DUP1
0x87 REVERT
---
0x84: V34 = 0x0
0x87: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x88
[0x88:0xb3]
---
Predecessors: [0x7d]
Successors: [0x19b]
---
0x88 JUMPDEST
0x89 PUSH2 0xb4
0x8c PUSH1 0x4
0x8e DUP1
0x8f DUP1
0x90 CALLDATALOAD
0x91 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa6 AND
0xa7 SWAP1
0xa8 PUSH1 0x20
0xaa ADD
0xab SWAP1
0xac SWAP2
0xad SWAP1
0xae POP
0xaf POP
0xb0 PUSH2 0x19b
0xb3 JUMP
---
0x88: JUMPDEST 
0x89: V35 = 0xb4
0x8c: V36 = 0x4
0x90: V37 = CALLDATALOAD 0x4
0x91: V38 = 0xffffffffffffffffffffffffffffffffffffffff
0xa6: V39 = AND 0xffffffffffffffffffffffffffffffffffffffff V37
0xa8: V40 = 0x20
0xaa: V41 = ADD 0x20 0x4
0xb0: V42 = 0x19b
0xb3: JUMP 0x19b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xb4, V39]
Exit stack: [V11, 0xb4, V39]

================================

Block 0xb4
[0xb4:0xd8]
---
Predecessors: [0x19b]
Successors: []
---
0xb4 JUMPDEST
0xb5 PUSH1 0x40
0xb7 MLOAD
0xb8 DUP1
0xb9 DUP4
0xba ISZERO
0xbb ISZERO
0xbc ISZERO
0xbd ISZERO
0xbe DUP2
0xbf MSTORE
0xc0 PUSH1 0x20
0xc2 ADD
0xc3 DUP3
0xc4 ISZERO
0xc5 ISZERO
0xc6 ISZERO
0xc7 ISZERO
0xc8 DUP2
0xc9 MSTORE
0xca PUSH1 0x20
0xcc ADD
0xcd SWAP3
0xce POP
0xcf POP
0xd0 POP
0xd1 PUSH1 0x40
0xd3 MLOAD
0xd4 DUP1
0xd5 SWAP2
0xd6 SUB
0xd7 SWAP1
0xd8 RETURN
---
0xb4: JUMPDEST 
0xb5: V43 = 0x40
0xb7: V44 = M[0x40]
0xba: V45 = ISZERO V118
0xbb: V46 = ISZERO V45
0xbc: V47 = ISZERO V46
0xbd: V48 = ISZERO V47
0xbf: M[V44] = V48
0xc0: V49 = 0x20
0xc2: V50 = ADD 0x20 V44
0xc4: V51 = ISZERO V127
0xc5: V52 = ISZERO V51
0xc6: V53 = ISZERO V52
0xc7: V54 = ISZERO V53
0xc9: M[V50] = V54
0xca: V55 = 0x20
0xcc: V56 = ADD 0x20 V50
0xd1: V57 = 0x40
0xd3: V58 = M[0x40]
0xd6: V59 = SUB V56 V58
0xd8: RETURN V58 V59
---
Entry stack: [V11, 0xb4, V118, V127]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0xb4]

================================

Block 0xd9
[0xd9:0xdf]
---
Predecessors: [0x41]
Successors: [0xe0, 0xe4]
---
0xd9 JUMPDEST
0xda CALLVALUE
0xdb ISZERO
0xdc PUSH2 0xe4
0xdf JUMPI
---
0xd9: JUMPDEST 
0xda: V60 = CALLVALUE
0xdb: V61 = ISZERO V60
0xdc: V62 = 0xe4
0xdf: JUMPI 0xe4 V61
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe0
[0xe0:0xe3]
---
Predecessors: [0xd9]
Successors: []
---
0xe0 PUSH1 0x0
0xe2 DUP1
0xe3 REVERT
---
0xe0: V63 = 0x0
0xe3: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe4
[0xe4:0xeb]
---
Predecessors: [0xd9]
Successors: [0x1d9]
---
0xe4 JUMPDEST
0xe5 PUSH2 0xec
0xe8 PUSH2 0x1d9
0xeb JUMP
---
0xe4: JUMPDEST 
0xe5: V64 = 0xec
0xe8: V65 = 0x1d9
0xeb: JUMP 0x1d9
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xec]
Exit stack: [V11, 0xec]

================================

Block 0xec
[0xec:0xed]
---
Predecessors: [0x28d]
Successors: []
---
0xec JUMPDEST
0xed STOP
---
0xec: JUMPDEST 
0xed: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xee
[0xee:0xf4]
---
Predecessors: [0x4c]
Successors: [0xf5, 0xf9]
---
0xee JUMPDEST
0xef CALLVALUE
0xf0 ISZERO
0xf1 PUSH2 0xf9
0xf4 JUMPI
---
0xee: JUMPDEST 
0xef: V66 = CALLVALUE
0xf0: V67 = ISZERO V66
0xf1: V68 = 0xf9
0xf4: JUMPI 0xf9 V67
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf5
[0xf5:0xf8]
---
Predecessors: [0xee]
Successors: []
---
0xf5 PUSH1 0x0
0xf7 DUP1
0xf8 REVERT
---
0xf5: V69 = 0x0
0xf8: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf9
[0xf9:0x100]
---
Predecessors: [0xee]
Successors: [0x321]
---
0xf9 JUMPDEST
0xfa PUSH2 0x101
0xfd PUSH2 0x321
0x100 JUMP
---
0xf9: JUMPDEST 
0xfa: V70 = 0x101
0xfd: V71 = 0x321
0x100: JUMP 0x321
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x101]
Exit stack: [V11, 0x101]

================================

Block 0x101
[0x101:0x142]
---
Predecessors: [0x321]
Successors: []
---
0x101 JUMPDEST
0x102 PUSH1 0x40
0x104 MLOAD
0x105 DUP1
0x106 DUP3
0x107 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11c AND
0x11d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x132 AND
0x133 DUP2
0x134 MSTORE
0x135 PUSH1 0x20
0x137 ADD
0x138 SWAP2
0x139 POP
0x13a POP
0x13b PUSH1 0x40
0x13d MLOAD
0x13e DUP1
0x13f SWAP2
0x140 SUB
0x141 SWAP1
0x142 RETURN
---
0x101: JUMPDEST 
0x102: V72 = 0x40
0x104: V73 = M[0x40]
0x107: V74 = 0xffffffffffffffffffffffffffffffffffffffff
0x11c: V75 = AND 0xffffffffffffffffffffffffffffffffffffffff V227
0x11d: V76 = 0xffffffffffffffffffffffffffffffffffffffff
0x132: V77 = AND 0xffffffffffffffffffffffffffffffffffffffff V75
0x134: M[V73] = V77
0x135: V78 = 0x20
0x137: V79 = ADD 0x20 V73
0x13b: V80 = 0x40
0x13d: V81 = M[0x40]
0x140: V82 = SUB V79 V81
0x142: RETURN V81 V82
---
Entry stack: [V11, 0x101, V227]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x101]

================================

Block 0x143
[0x143:0x14a]
---
Predecessors: [0x57]
Successors: [0x346]
---
0x143 JUMPDEST
0x144 PUSH2 0x14b
0x147 PUSH2 0x346
0x14a JUMP
---
0x143: JUMPDEST 
0x144: V83 = 0x14b
0x147: V84 = 0x346
0x14a: JUMP 0x346
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x14b]
Exit stack: [V11, 0x14b]

================================

Block 0x14b
[0x14b:0x14c]
---
Predecessors: [0x346]
Successors: []
---
0x14b JUMPDEST
0x14c STOP
---
0x14b: JUMPDEST 
0x14c: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x14d
[0x14d:0x153]
---
Predecessors: [0x62]
Successors: [0x154, 0x158]
---
0x14d JUMPDEST
0x14e CALLVALUE
0x14f ISZERO
0x150 PUSH2 0x158
0x153 JUMPI
---
0x14d: JUMPDEST 
0x14e: V85 = CALLVALUE
0x14f: V86 = ISZERO V85
0x150: V87 = 0x158
0x153: JUMPI 0x158 V86
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x154
[0x154:0x157]
---
Predecessors: [0x14d]
Successors: []
---
0x154 PUSH1 0x0
0x156 DUP1
0x157 REVERT
---
0x154: V88 = 0x0
0x157: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x158
[0x158:0x183]
---
Predecessors: [0x14d]
Successors: [0x348]
---
0x158 JUMPDEST
0x159 PUSH2 0x184
0x15c PUSH1 0x4
0x15e DUP1
0x15f DUP1
0x160 CALLDATALOAD
0x161 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x176 AND
0x177 SWAP1
0x178 PUSH1 0x20
0x17a ADD
0x17b SWAP1
0x17c SWAP2
0x17d SWAP1
0x17e POP
0x17f POP
0x180 PUSH2 0x348
0x183 JUMP
---
0x158: JUMPDEST 
0x159: V89 = 0x184
0x15c: V90 = 0x4
0x160: V91 = CALLDATALOAD 0x4
0x161: V92 = 0xffffffffffffffffffffffffffffffffffffffff
0x176: V93 = AND 0xffffffffffffffffffffffffffffffffffffffff V91
0x178: V94 = 0x20
0x17a: V95 = ADD 0x20 0x4
0x180: V96 = 0x348
0x183: JUMP 0x348
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x184, V93]
Exit stack: [V11, 0x184, V93]

================================

Block 0x184
[0x184:0x185]
---
Predecessors: [0x3a3]
Successors: []
---
0x184 JUMPDEST
0x185 STOP
---
0x184: JUMPDEST 
0x185: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x186
[0x186:0x18c]
---
Predecessors: [0x6d]
Successors: [0x18d, 0x191]
---
0x186 JUMPDEST
0x187 CALLVALUE
0x188 ISZERO
0x189 PUSH2 0x191
0x18c JUMPI
---
0x186: JUMPDEST 
0x187: V97 = CALLVALUE
0x188: V98 = ISZERO V97
0x189: V99 = 0x191
0x18c: JUMPI 0x191 V98
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x18d
[0x18d:0x190]
---
Predecessors: [0x186]
Successors: []
---
0x18d PUSH1 0x0
0x18f DUP1
0x190 REVERT
---
0x18d: V100 = 0x0
0x190: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x191
[0x191:0x198]
---
Predecessors: [0x186]
Successors: [0x400]
---
0x191 JUMPDEST
0x192 PUSH2 0x199
0x195 PUSH2 0x400
0x198 JUMP
---
0x191: JUMPDEST 
0x192: V101 = 0x199
0x195: V102 = 0x400
0x198: JUMP 0x400
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x199]
Exit stack: [V11, 0x199]

================================

Block 0x199
[0x199:0x19a]
---
Predecessors: [0x45b]
Successors: []
---
0x199 JUMPDEST
0x19a STOP
---
0x199: JUMPDEST 
0x19a: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x19b
[0x19b:0x1d8]
---
Predecessors: [0x88]
Successors: [0xb4]
---
0x19b JUMPDEST
0x19c PUSH1 0x1
0x19e PUSH1 0x20
0x1a0 MSTORE
0x1a1 DUP1
0x1a2 PUSH1 0x0
0x1a4 MSTORE
0x1a5 PUSH1 0x40
0x1a7 PUSH1 0x0
0x1a9 SHA3
0x1aa PUSH1 0x0
0x1ac SWAP2
0x1ad POP
0x1ae SWAP1
0x1af POP
0x1b0 DUP1
0x1b1 PUSH1 0x0
0x1b3 ADD
0x1b4 PUSH1 0x0
0x1b6 SWAP1
0x1b7 SLOAD
0x1b8 SWAP1
0x1b9 PUSH2 0x100
0x1bc EXP
0x1bd SWAP1
0x1be DIV
0x1bf PUSH1 0xff
0x1c1 AND
0x1c2 SWAP1
0x1c3 DUP1
0x1c4 PUSH1 0x0
0x1c6 ADD
0x1c7 PUSH1 0x1
0x1c9 SWAP1
0x1ca SLOAD
0x1cb SWAP1
0x1cc PUSH2 0x100
0x1cf EXP
0x1d0 SWAP1
0x1d1 DIV
0x1d2 PUSH1 0xff
0x1d4 AND
0x1d5 SWAP1
0x1d6 POP
0x1d7 DUP3
0x1d8 JUMP
---
0x19b: JUMPDEST 
0x19c: V103 = 0x1
0x19e: V104 = 0x20
0x1a0: M[0x20] = 0x1
0x1a2: V105 = 0x0
0x1a4: M[0x0] = V39
0x1a5: V106 = 0x40
0x1a7: V107 = 0x0
0x1a9: V108 = SHA3 0x0 0x40
0x1aa: V109 = 0x0
0x1b1: V110 = 0x0
0x1b3: V111 = ADD 0x0 V108
0x1b4: V112 = 0x0
0x1b7: V113 = S[V111]
0x1b9: V114 = 0x100
0x1bc: V115 = EXP 0x100 0x0
0x1be: V116 = DIV V113 0x1
0x1bf: V117 = 0xff
0x1c1: V118 = AND 0xff V116
0x1c4: V119 = 0x0
0x1c6: V120 = ADD 0x0 V108
0x1c7: V121 = 0x1
0x1ca: V122 = S[V120]
0x1cc: V123 = 0x100
0x1cf: V124 = EXP 0x100 0x1
0x1d1: V125 = DIV V122 0x100
0x1d2: V126 = 0xff
0x1d4: V127 = AND 0xff V125
0x1d8: JUMP 0xb4
---
Entry stack: [V11, 0xb4, V39]
Stack pops: 2
Stack additions: [S1, V118, V127]
Exit stack: [V11, 0xb4, V118, V127]

================================

Block 0x1d9
[0x1d9:0x22f]
---
Predecessors: [0xe4]
Successors: [0x230, 0x282]
---
0x1d9 JUMPDEST
0x1da PUSH1 0x1
0x1dc PUSH1 0x0
0x1de CALLER
0x1df PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f4 AND
0x1f5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20a AND
0x20b DUP2
0x20c MSTORE
0x20d PUSH1 0x20
0x20f ADD
0x210 SWAP1
0x211 DUP2
0x212 MSTORE
0x213 PUSH1 0x20
0x215 ADD
0x216 PUSH1 0x0
0x218 SHA3
0x219 PUSH1 0x0
0x21b ADD
0x21c PUSH1 0x0
0x21e SWAP1
0x21f SLOAD
0x220 SWAP1
0x221 PUSH2 0x100
0x224 EXP
0x225 SWAP1
0x226 DIV
0x227 PUSH1 0xff
0x229 AND
0x22a DUP1
0x22b ISZERO
0x22c PUSH2 0x282
0x22f JUMPI
---
0x1d9: JUMPDEST 
0x1da: V128 = 0x1
0x1dc: V129 = 0x0
0x1de: V130 = CALLER
0x1df: V131 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f4: V132 = AND 0xffffffffffffffffffffffffffffffffffffffff V130
0x1f5: V133 = 0xffffffffffffffffffffffffffffffffffffffff
0x20a: V134 = AND 0xffffffffffffffffffffffffffffffffffffffff V132
0x20c: M[0x0] = V134
0x20d: V135 = 0x20
0x20f: V136 = ADD 0x20 0x0
0x212: M[0x20] = 0x1
0x213: V137 = 0x20
0x215: V138 = ADD 0x20 0x20
0x216: V139 = 0x0
0x218: V140 = SHA3 0x0 0x40
0x219: V141 = 0x0
0x21b: V142 = ADD 0x0 V140
0x21c: V143 = 0x0
0x21f: V144 = S[V142]
0x221: V145 = 0x100
0x224: V146 = EXP 0x100 0x0
0x226: V147 = DIV V144 0x1
0x227: V148 = 0xff
0x229: V149 = AND 0xff V147
0x22b: V150 = ISZERO V149
0x22c: V151 = 0x282
0x22f: JUMPI 0x282 V150
---
Entry stack: [V11, 0xec]
Stack pops: 0
Stack additions: [V149]
Exit stack: [V11, 0xec, V149]

================================

Block 0x230
[0x230:0x281]
---
Predecessors: [0x1d9]
Successors: [0x282]
---
0x230 POP
0x231 PUSH1 0x1
0x233 PUSH1 0x0
0x235 CALLER
0x236 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24b AND
0x24c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x261 AND
0x262 DUP2
0x263 MSTORE
0x264 PUSH1 0x20
0x266 ADD
0x267 SWAP1
0x268 DUP2
0x269 MSTORE
0x26a PUSH1 0x20
0x26c ADD
0x26d PUSH1 0x0
0x26f SHA3
0x270 PUSH1 0x0
0x272 ADD
0x273 PUSH1 0x1
0x275 SWAP1
0x276 SLOAD
0x277 SWAP1
0x278 PUSH2 0x100
0x27b EXP
0x27c SWAP1
0x27d DIV
0x27e PUSH1 0xff
0x280 AND
0x281 ISZERO
---
0x231: V152 = 0x1
0x233: V153 = 0x0
0x235: V154 = CALLER
0x236: V155 = 0xffffffffffffffffffffffffffffffffffffffff
0x24b: V156 = AND 0xffffffffffffffffffffffffffffffffffffffff V154
0x24c: V157 = 0xffffffffffffffffffffffffffffffffffffffff
0x261: V158 = AND 0xffffffffffffffffffffffffffffffffffffffff V156
0x263: M[0x0] = V158
0x264: V159 = 0x20
0x266: V160 = ADD 0x20 0x0
0x269: M[0x20] = 0x1
0x26a: V161 = 0x20
0x26c: V162 = ADD 0x20 0x20
0x26d: V163 = 0x0
0x26f: V164 = SHA3 0x0 0x40
0x270: V165 = 0x0
0x272: V166 = ADD 0x0 V164
0x273: V167 = 0x1
0x276: V168 = S[V166]
0x278: V169 = 0x100
0x27b: V170 = EXP 0x100 0x1
0x27d: V171 = DIV V168 0x100
0x27e: V172 = 0xff
0x280: V173 = AND 0xff V171
0x281: V174 = ISZERO V173
---
Entry stack: [V11, 0xec, V149]
Stack pops: 1
Stack additions: [V174]
Exit stack: [V11, 0xec, V174]

================================

Block 0x282
[0x282:0x288]
---
Predecessors: [0x1d9, 0x230]
Successors: [0x289, 0x28d]
---
0x282 JUMPDEST
0x283 ISZERO
0x284 ISZERO
0x285 PUSH2 0x28d
0x288 JUMPI
---
0x282: JUMPDEST 
0x283: V175 = ISZERO S0
0x284: V176 = ISZERO V175
0x285: V177 = 0x28d
0x288: JUMPI 0x28d V176
---
Entry stack: [V11, 0xec, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xec]

================================

Block 0x289
[0x289:0x28c]
---
Predecessors: [0x282]
Successors: []
---
0x289 PUSH1 0x0
0x28b DUP1
0x28c REVERT
---
0x289: V178 = 0x0
0x28c: REVERT 0x0 0x0
---
Entry stack: [V11, 0xec]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xec]

================================

Block 0x28d
[0x28d:0x320]
---
Predecessors: [0x282]
Successors: [0xec]
---
0x28d JUMPDEST
0x28e PUSH1 0x1
0x290 DUP1
0x291 PUSH1 0x0
0x293 CALLER
0x294 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a9 AND
0x2aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2bf AND
0x2c0 DUP2
0x2c1 MSTORE
0x2c2 PUSH1 0x20
0x2c4 ADD
0x2c5 SWAP1
0x2c6 DUP2
0x2c7 MSTORE
0x2c8 PUSH1 0x20
0x2ca ADD
0x2cb PUSH1 0x0
0x2cd SHA3
0x2ce PUSH1 0x0
0x2d0 ADD
0x2d1 PUSH1 0x1
0x2d3 PUSH2 0x100
0x2d6 EXP
0x2d7 DUP2
0x2d8 SLOAD
0x2d9 DUP2
0x2da PUSH1 0xff
0x2dc MUL
0x2dd NOT
0x2de AND
0x2df SWAP1
0x2e0 DUP4
0x2e1 ISZERO
0x2e2 ISZERO
0x2e3 MUL
0x2e4 OR
0x2e5 SWAP1
0x2e6 SSTORE
0x2e7 POP
0x2e8 CALLER
0x2e9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2fe AND
0x2ff PUSH2 0x8fc
0x302 PUSH1 0x2
0x304 SLOAD
0x305 SWAP1
0x306 DUP2
0x307 ISZERO
0x308 MUL
0x309 SWAP1
0x30a PUSH1 0x40
0x30c MLOAD
0x30d PUSH1 0x0
0x30f PUSH1 0x40
0x311 MLOAD
0x312 DUP1
0x313 DUP4
0x314 SUB
0x315 DUP2
0x316 DUP6
0x317 DUP9
0x318 DUP9
0x319 CALL
0x31a SWAP4
0x31b POP
0x31c POP
0x31d POP
0x31e POP
0x31f POP
0x320 JUMP
---
0x28d: JUMPDEST 
0x28e: V179 = 0x1
0x291: V180 = 0x0
0x293: V181 = CALLER
0x294: V182 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a9: V183 = AND 0xffffffffffffffffffffffffffffffffffffffff V181
0x2aa: V184 = 0xffffffffffffffffffffffffffffffffffffffff
0x2bf: V185 = AND 0xffffffffffffffffffffffffffffffffffffffff V183
0x2c1: M[0x0] = V185
0x2c2: V186 = 0x20
0x2c4: V187 = ADD 0x20 0x0
0x2c7: M[0x20] = 0x1
0x2c8: V188 = 0x20
0x2ca: V189 = ADD 0x20 0x20
0x2cb: V190 = 0x0
0x2cd: V191 = SHA3 0x0 0x40
0x2ce: V192 = 0x0
0x2d0: V193 = ADD 0x0 V191
0x2d1: V194 = 0x1
0x2d3: V195 = 0x100
0x2d6: V196 = EXP 0x100 0x1
0x2d8: V197 = S[V193]
0x2da: V198 = 0xff
0x2dc: V199 = MUL 0xff 0x100
0x2dd: V200 = NOT 0xff00
0x2de: V201 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V197
0x2e1: V202 = ISZERO 0x1
0x2e2: V203 = ISZERO 0x0
0x2e3: V204 = MUL 0x1 0x100
0x2e4: V205 = OR 0x100 V201
0x2e6: S[V193] = V205
0x2e8: V206 = CALLER
0x2e9: V207 = 0xffffffffffffffffffffffffffffffffffffffff
0x2fe: V208 = AND 0xffffffffffffffffffffffffffffffffffffffff V206
0x2ff: V209 = 0x8fc
0x302: V210 = 0x2
0x304: V211 = S[0x2]
0x307: V212 = ISZERO V211
0x308: V213 = MUL V212 0x8fc
0x30a: V214 = 0x40
0x30c: V215 = M[0x40]
0x30d: V216 = 0x0
0x30f: V217 = 0x40
0x311: V218 = M[0x40]
0x314: V219 = SUB V215 V218
0x319: V220 = CALL V213 V208 V211 V218 V219 V218 0x0
0x320: JUMP 0xec
---
Entry stack: [V11, 0xec]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x321
[0x321:0x345]
---
Predecessors: [0xf9]
Successors: [0x101]
---
0x321 JUMPDEST
0x322 PUSH1 0x0
0x324 DUP1
0x325 SWAP1
0x326 SLOAD
0x327 SWAP1
0x328 PUSH2 0x100
0x32b EXP
0x32c SWAP1
0x32d DIV
0x32e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x343 AND
0x344 DUP2
0x345 JUMP
---
0x321: JUMPDEST 
0x322: V221 = 0x0
0x326: V222 = S[0x0]
0x328: V223 = 0x100
0x32b: V224 = EXP 0x100 0x0
0x32d: V225 = DIV V222 0x1
0x32e: V226 = 0xffffffffffffffffffffffffffffffffffffffff
0x343: V227 = AND 0xffffffffffffffffffffffffffffffffffffffff V225
0x345: JUMP 0x101
---
Entry stack: [V11, 0x101]
Stack pops: 1
Stack additions: [S0, V227]
Exit stack: [V11, 0x101, V227]

================================

Block 0x346
[0x346:0x347]
---
Predecessors: [0x143]
Successors: [0x14b]
---
0x346 JUMPDEST
0x347 JUMP
---
0x346: JUMPDEST 
0x347: JUMP 0x14b
---
Entry stack: [V11, 0x14b]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x348
[0x348:0x39e]
---
Predecessors: [0x158]
Successors: [0x39f, 0x3a3]
---
0x348 JUMPDEST
0x349 PUSH1 0x0
0x34b DUP1
0x34c SWAP1
0x34d SLOAD
0x34e SWAP1
0x34f PUSH2 0x100
0x352 EXP
0x353 SWAP1
0x354 DIV
0x355 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x36a AND
0x36b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x380 AND
0x381 CALLER
0x382 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x397 AND
0x398 EQ
0x399 ISZERO
0x39a ISZERO
0x39b PUSH2 0x3a3
0x39e JUMPI
---
0x348: JUMPDEST 
0x349: V228 = 0x0
0x34d: V229 = S[0x0]
0x34f: V230 = 0x100
0x352: V231 = EXP 0x100 0x0
0x354: V232 = DIV V229 0x1
0x355: V233 = 0xffffffffffffffffffffffffffffffffffffffff
0x36a: V234 = AND 0xffffffffffffffffffffffffffffffffffffffff V232
0x36b: V235 = 0xffffffffffffffffffffffffffffffffffffffff
0x380: V236 = AND 0xffffffffffffffffffffffffffffffffffffffff V234
0x381: V237 = CALLER
0x382: V238 = 0xffffffffffffffffffffffffffffffffffffffff
0x397: V239 = AND 0xffffffffffffffffffffffffffffffffffffffff V237
0x398: V240 = EQ V239 V236
0x399: V241 = ISZERO V240
0x39a: V242 = ISZERO V241
0x39b: V243 = 0x3a3
0x39e: JUMPI 0x3a3 V242
---
Entry stack: [V11, 0x184, V93]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x184, V93]

================================

Block 0x39f
[0x39f:0x3a2]
---
Predecessors: [0x348]
Successors: []
---
0x39f PUSH1 0x0
0x3a1 DUP1
0x3a2 REVERT
---
0x39f: V244 = 0x0
0x3a2: REVERT 0x0 0x0
---
Entry stack: [V11, 0x184, V93]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x184, V93]

================================

Block 0x3a3
[0x3a3:0x3ff]
---
Predecessors: [0x348]
Successors: [0x184]
---
0x3a3 JUMPDEST
0x3a4 PUSH1 0x1
0x3a6 DUP1
0x3a7 PUSH1 0x0
0x3a9 DUP4
0x3aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3bf AND
0x3c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d5 AND
0x3d6 DUP2
0x3d7 MSTORE
0x3d8 PUSH1 0x20
0x3da ADD
0x3db SWAP1
0x3dc DUP2
0x3dd MSTORE
0x3de PUSH1 0x20
0x3e0 ADD
0x3e1 PUSH1 0x0
0x3e3 SHA3
0x3e4 PUSH1 0x0
0x3e6 ADD
0x3e7 PUSH1 0x0
0x3e9 PUSH2 0x100
0x3ec EXP
0x3ed DUP2
0x3ee SLOAD
0x3ef DUP2
0x3f0 PUSH1 0xff
0x3f2 MUL
0x3f3 NOT
0x3f4 AND
0x3f5 SWAP1
0x3f6 DUP4
0x3f7 ISZERO
0x3f8 ISZERO
0x3f9 MUL
0x3fa OR
0x3fb SWAP1
0x3fc SSTORE
0x3fd POP
0x3fe POP
0x3ff JUMP
---
0x3a3: JUMPDEST 
0x3a4: V245 = 0x1
0x3a7: V246 = 0x0
0x3aa: V247 = 0xffffffffffffffffffffffffffffffffffffffff
0x3bf: V248 = AND 0xffffffffffffffffffffffffffffffffffffffff V93
0x3c0: V249 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d5: V250 = AND 0xffffffffffffffffffffffffffffffffffffffff V248
0x3d7: M[0x0] = V250
0x3d8: V251 = 0x20
0x3da: V252 = ADD 0x20 0x0
0x3dd: M[0x20] = 0x1
0x3de: V253 = 0x20
0x3e0: V254 = ADD 0x20 0x20
0x3e1: V255 = 0x0
0x3e3: V256 = SHA3 0x0 0x40
0x3e4: V257 = 0x0
0x3e6: V258 = ADD 0x0 V256
0x3e7: V259 = 0x0
0x3e9: V260 = 0x100
0x3ec: V261 = EXP 0x100 0x0
0x3ee: V262 = S[V258]
0x3f0: V263 = 0xff
0x3f2: V264 = MUL 0xff 0x1
0x3f3: V265 = NOT 0xff
0x3f4: V266 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V262
0x3f7: V267 = ISZERO 0x1
0x3f8: V268 = ISZERO 0x0
0x3f9: V269 = MUL 0x1 0x1
0x3fa: V270 = OR 0x1 V266
0x3fc: S[V258] = V270
0x3ff: JUMP 0x184
---
Entry stack: [V11, 0x184, V93]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x400
[0x400:0x456]
---
Predecessors: [0x191]
Successors: [0x457, 0x45b]
---
0x400 JUMPDEST
0x401 PUSH1 0x0
0x403 DUP1
0x404 SWAP1
0x405 SLOAD
0x406 SWAP1
0x407 PUSH2 0x100
0x40a EXP
0x40b SWAP1
0x40c DIV
0x40d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x422 AND
0x423 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x438 AND
0x439 CALLER
0x43a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x44f AND
0x450 EQ
0x451 ISZERO
0x452 ISZERO
0x453 PUSH2 0x45b
0x456 JUMPI
---
0x400: JUMPDEST 
0x401: V271 = 0x0
0x405: V272 = S[0x0]
0x407: V273 = 0x100
0x40a: V274 = EXP 0x100 0x0
0x40c: V275 = DIV V272 0x1
0x40d: V276 = 0xffffffffffffffffffffffffffffffffffffffff
0x422: V277 = AND 0xffffffffffffffffffffffffffffffffffffffff V275
0x423: V278 = 0xffffffffffffffffffffffffffffffffffffffff
0x438: V279 = AND 0xffffffffffffffffffffffffffffffffffffffff V277
0x439: V280 = CALLER
0x43a: V281 = 0xffffffffffffffffffffffffffffffffffffffff
0x44f: V282 = AND 0xffffffffffffffffffffffffffffffffffffffff V280
0x450: V283 = EQ V282 V279
0x451: V284 = ISZERO V283
0x452: V285 = ISZERO V284
0x453: V286 = 0x45b
0x456: JUMPI 0x45b V285
---
Entry stack: [V11, 0x199]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x199]

================================

Block 0x457
[0x457:0x45a]
---
Predecessors: [0x400]
Successors: []
---
0x457 PUSH1 0x0
0x459 DUP1
0x45a REVERT
---
0x457: V287 = 0x0
0x45a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x199]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x199]

================================

Block 0x45b
[0x45b:0x4ca]
---
Predecessors: [0x400]
Successors: [0x199]
---
0x45b JUMPDEST
0x45c PUSH1 0x0
0x45e DUP1
0x45f SWAP1
0x460 SLOAD
0x461 SWAP1
0x462 PUSH2 0x100
0x465 EXP
0x466 SWAP1
0x467 DIV
0x468 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x47d AND
0x47e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x493 AND
0x494 PUSH2 0x8fc
0x497 ADDRESS
0x498 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ad AND
0x4ae BALANCE
0x4af SWAP1
0x4b0 DUP2
0x4b1 ISZERO
0x4b2 MUL
0x4b3 SWAP1
0x4b4 PUSH1 0x40
0x4b6 MLOAD
0x4b7 PUSH1 0x0
0x4b9 PUSH1 0x40
0x4bb MLOAD
0x4bc DUP1
0x4bd DUP4
0x4be SUB
0x4bf DUP2
0x4c0 DUP6
0x4c1 DUP9
0x4c2 DUP9
0x4c3 CALL
0x4c4 SWAP4
0x4c5 POP
0x4c6 POP
0x4c7 POP
0x4c8 POP
0x4c9 POP
0x4ca JUMP
---
0x45b: JUMPDEST 
0x45c: V288 = 0x0
0x460: V289 = S[0x0]
0x462: V290 = 0x100
0x465: V291 = EXP 0x100 0x0
0x467: V292 = DIV V289 0x1
0x468: V293 = 0xffffffffffffffffffffffffffffffffffffffff
0x47d: V294 = AND 0xffffffffffffffffffffffffffffffffffffffff V292
0x47e: V295 = 0xffffffffffffffffffffffffffffffffffffffff
0x493: V296 = AND 0xffffffffffffffffffffffffffffffffffffffff V294
0x494: V297 = 0x8fc
0x497: V298 = ADDRESS
0x498: V299 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ad: V300 = AND 0xffffffffffffffffffffffffffffffffffffffff V298
0x4ae: V301 = BALANCE V300
0x4b1: V302 = ISZERO V301
0x4b2: V303 = MUL V302 0x8fc
0x4b4: V304 = 0x40
0x4b6: V305 = M[0x40]
0x4b7: V306 = 0x0
0x4b9: V307 = 0x40
0x4bb: V308 = M[0x40]
0x4be: V309 = SUB V305 V308
0x4c3: V310 = CALL V303 V296 V301 V308 V309 V308 0x0
0x4ca: JUMP 0x199
---
Entry stack: [V11, 0x199]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x4cb
[0x4cb:0x503]
---
Predecessors: []
Successors: []
---
0x4cb STOP
0x4cc LOG1
0x4cd PUSH6 0x627a7a723058
0x4d4 SHA3
0x4d5 SMOD
0x4d6 MISSING 0x5d
0x4d7 MISSING 0xe4
0x4d8 MISSING 0x46
0x4d9 MISSING 0xab
0x4da SHR
0x4db MISSING 0xfc
0x4dc MISSING 0xe7
0x4dd MISSING 0xe
0x4de ADD
0x4df MISSING 0xbc
0x4e0 MISSING 0xe9
0x4e1 MISSING 0xe4
0x4e2 GASLIMIT
0x4e3 PC
0x4e4 CALL
0x4e5 TIMESTAMP
0x4e6 SHA3
0x4e7 MISSING 0xdf
0x4e8 MISSING 0xfc
0x4e9 MISSING 0x49
0x4ea POP
0x4eb MISSING 0xae
0x4ec PUSH23 0x19de7a82f239bc140029
---
0x4cb: STOP 
0x4cc: LOG S0 S1 S2
0x4cd: V311 = 0x627a7a723058
0x4d4: V312 = SHA3 0x627a7a723058 S3
0x4d5: V313 = SMOD V312 S4
0x4d6: MISSING 0x5d
0x4d7: MISSING 0xe4
0x4d8: MISSING 0x46
0x4d9: MISSING 0xab
0x4da: V314 = SHR S0 S1
0x4db: MISSING 0xfc
0x4dc: MISSING 0xe7
0x4dd: MISSING 0xe
0x4de: V315 = ADD S0 S1
0x4df: MISSING 0xbc
0x4e0: MISSING 0xe9
0x4e1: MISSING 0xe4
0x4e2: V316 = GASLIMIT
0x4e3: V317 = PC
0x4e4: V318 = CALL V317 V316 S0 S1 S2 S3 S4
0x4e5: V319 = TIMESTAMP
0x4e6: V320 = SHA3 V319 V318
0x4e7: MISSING 0xdf
0x4e8: MISSING 0xfc
0x4e9: MISSING 0x49
0x4eb: MISSING 0xae
0x4ec: V321 = 0x19de7a82f239bc140029
---
Entry stack: []
Stack pops: 0
Stack additions: [V313, V314, V315, V320, 0x19de7a82f239bc140029]
Exit stack: []

================================

Function 0:
Public function signature: 0x1ddabf7a
Entry block: 0x7d
Exit block: 0xb4
Body: 0x7d, 0x84, 0x88, 0xb4, 0x19b

Function 1:
Public function signature: 0x3ccfd60b
Entry block: 0xd9
Exit block: 0xec
Body: 0xd9, 0xe0, 0xe4, 0xec, 0x1d9, 0x230, 0x282, 0x289, 0x28d

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0xee
Exit block: 0x101
Body: 0xee, 0xf5, 0xf9, 0x101, 0x321

Function 3:
Public function signature: 0xd0e30db0
Entry block: 0x143
Exit block: 0x14b
Body: 0x143, 0x14b, 0x346

Function 4:
Public function signature: 0xd7a1cfe1
Entry block: 0x14d
Exit block: 0x184
Body: 0x14d, 0x154, 0x158, 0x184, 0x348, 0x39f, 0x3a3

Function 5:
Public function signature: 0xe0d5af94
Entry block: 0x186
Exit block: 0x199
Body: 0x186, 0x18d, 0x191, 0x199, 0x400, 0x457, 0x45b

Function 6:
Public fallback function
Entry block: 0x78
Exit block: 0x78
Body: 0x78

