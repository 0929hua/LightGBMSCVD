Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x48]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x48
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x48
0xa: JUMPI 0x48 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x38]
---
Predecessors: [0x0]
Successors: [0x39, 0xe3]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e DUP1
0x2f PUSH4 0x41c0e1b5
0x34 EQ
0x35 PUSH2 0xe3
0x38 JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = 0x41c0e1b5
0x34: V10 = EQ 0x41c0e1b5 V8
0x35: V11 = 0xe3
0x38: JUMPI 0xe3 V10
---
Entry stack: []
Stack pops: 0
Stack additions: [V8]
Exit stack: [V8]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0xb]
Successors: [0x44, 0xf0]
---
0x39 DUP1
0x3a PUSH4 0xe5225381
0x3f EQ
0x40 PUSH2 0xf0
0x43 JUMPI
---
0x3a: V12 = 0xe5225381
0x3f: V13 = EQ 0xe5225381 V8
0x40: V14 = 0xf0
0x43: JUMPI 0xf0 V13
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x44
[0x44:0x47]
---
Predecessors: [0x39]
Successors: [0x48]
---
0x44 PUSH2 0x48
0x47 JUMP
---
0x44: V15 = 0x48
0x47: JUMP 0x48
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x48
[0x48:0x4b]
---
Predecessors: [0x0, 0x44]
Successors: [0x4c]
---
0x48 JUMPDEST
0x49 PUSH2 0xe1
---
0x48: JUMPDEST 
0x49: V16 = 0xe1
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xe1]
Exit stack: [V8, 0xe1]

================================

Block 0x4c
[0x4c:0x55]
---
Predecessors: [0x48]
Successors: [0x56, 0xde]
---
0x4c JUMPDEST
0x4d PUSH1 0x0
0x4f CALLVALUE
0x50 GT
0x51 ISZERO
0x52 PUSH2 0xde
0x55 JUMPI
---
0x4c: JUMPDEST 
0x4d: V17 = 0x0
0x4f: V18 = CALLVALUE
0x50: V19 = GT V18 0x0
0x51: V20 = ISZERO V19
0x52: V21 = 0xde
0x55: JUMPI 0xde V20
---
Entry stack: [V8, 0xe1]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xe1]

================================

Block 0x56
[0x56:0xdd]
---
Predecessors: [0x4c]
Successors: [0xde]
---
0x56 PUSH1 0x40
0x58 PUSH1 0x40
0x5a MLOAD
0x5b SWAP1
0x5c DUP2
0x5d ADD
0x5e PUSH1 0x40
0x60 MSTORE
0x61 DUP1
0x62 PUSH1 0x5
0x64 DUP2
0x65 MSTORE
0x66 PUSH1 0x20
0x68 ADD
0x69 PUSH32 0x59554e4249000000000000000000000000000000000000000000000000000000
0x8a DUP2
0x8b MSTORE
0x8c PUSH1 0x20
0x8e ADD
0x8f POP
0x90 CALLER
0x91 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa6 AND
0xa7 PUSH32 0x68051bc50b1ef1654bf1e6204b5f8fa9badcd038e00fa5b43f21f898fc2728ca
0xc8 CALLVALUE
0xc9 PUSH1 0x40
0xcb MLOAD
0xcc DUP1
0xcd DUP3
0xce DUP2
0xcf MSTORE
0xd0 PUSH1 0x20
0xd2 ADD
0xd3 SWAP2
0xd4 POP
0xd5 POP
0xd6 PUSH1 0x40
0xd8 MLOAD
0xd9 DUP1
0xda SWAP2
0xdb SUB
0xdc SWAP1
0xdd LOG3
---
0x56: V22 = 0x40
0x58: V23 = 0x40
0x5a: V24 = M[0x40]
0x5d: V25 = ADD V24 0x40
0x5e: V26 = 0x40
0x60: M[0x40] = V25
0x62: V27 = 0x5
0x65: M[V24] = 0x5
0x66: V28 = 0x20
0x68: V29 = ADD 0x20 V24
0x69: V30 = 0x59554e4249000000000000000000000000000000000000000000000000000000
0x8b: M[V29] = 0x59554e4249000000000000000000000000000000000000000000000000000000
0x8c: V31 = 0x20
0x8e: V32 = ADD 0x20 V29
0x90: V33 = CALLER
0x91: V34 = 0xffffffffffffffffffffffffffffffffffffffff
0xa6: V35 = AND 0xffffffffffffffffffffffffffffffffffffffff V33
0xa7: V36 = 0x68051bc50b1ef1654bf1e6204b5f8fa9badcd038e00fa5b43f21f898fc2728ca
0xc8: V37 = CALLVALUE
0xc9: V38 = 0x40
0xcb: V39 = M[0x40]
0xcf: M[V39] = V37
0xd0: V40 = 0x20
0xd2: V41 = ADD 0x20 V39
0xd6: V42 = 0x40
0xd8: V43 = M[0x40]
0xdb: V44 = SUB V41 V43
0xdd: LOG V43 V44 0x68051bc50b1ef1654bf1e6204b5f8fa9badcd038e00fa5b43f21f898fc2728ca V35 V24
---
Entry stack: [V8, 0xe1]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xe1]

================================

Block 0xde
[0xde:0xde]
---
Predecessors: [0x4c, 0x56]
Successors: [0xdf]
---
0xde JUMPDEST
---
0xde: JUMPDEST 
---
Entry stack: [V8, 0xe1]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xe1]

================================

Block 0xdf
[0xdf:0xe0]
---
Predecessors: [0xde]
Successors: [0xe1]
---
0xdf JUMPDEST
0xe0 JUMP
---
0xdf: JUMPDEST 
0xe0: JUMP 0xe1
---
Entry stack: [V8, 0xe1]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0xe1
[0xe1:0xe2]
---
Predecessors: [0xdf]
Successors: []
---
0xe1 JUMPDEST
0xe2 STOP
---
0xe1: JUMPDEST 
0xe2: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0xe3
[0xe3:0xed]
---
Predecessors: [0xb]
Successors: [0xfd]
---
0xe3 JUMPDEST
0xe4 PUSH2 0xee
0xe7 PUSH1 0x4
0xe9 POP
0xea PUSH2 0xfd
0xed JUMP
---
0xe3: JUMPDEST 
0xe4: V45 = 0xee
0xe7: V46 = 0x4
0xea: V47 = 0xfd
0xed: JUMP 0xfd
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xee]
Exit stack: [V8, 0xee]

================================

Block 0xee
[0xee:0xef]
---
Predecessors: [0x18f]
Successors: []
---
0xee JUMPDEST
0xef STOP
---
0xee: JUMPDEST 
0xef: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0xf0
[0xf0:0xfa]
---
Predecessors: [0x39]
Successors: [0x191]
---
0xf0 JUMPDEST
0xf1 PUSH2 0xfb
0xf4 PUSH1 0x4
0xf6 POP
0xf7 PUSH2 0x191
0xfa JUMP
---
0xf0: JUMPDEST 
0xf1: V48 = 0xfb
0xf4: V49 = 0x4
0xf7: V50 = 0x191
0xfa: JUMP 0x191
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xfb]
Exit stack: [V8, 0xfb]

================================

Block 0xfb
[0xfb:0xfc]
---
Predecessors: [0x255]
Successors: []
---
0xfb JUMPDEST
0xfc STOP
---
0xfb: JUMPDEST 
0xfc: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0xfd
[0xfd:0x153]
---
Predecessors: [0xe3]
Successors: [0x154, 0x18e]
---
0xfd JUMPDEST
0xfe PUSH1 0x0
0x100 PUSH1 0x0
0x102 SWAP1
0x103 SLOAD
0x104 SWAP1
0x105 PUSH2 0x100
0x108 EXP
0x109 SWAP1
0x10a DIV
0x10b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x120 AND
0x121 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x136 AND
0x137 CALLER
0x138 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14d AND
0x14e EQ
0x14f ISZERO
0x150 PUSH2 0x18e
0x153 JUMPI
---
0xfd: JUMPDEST 
0xfe: V51 = 0x0
0x100: V52 = 0x0
0x103: V53 = S[0x0]
0x105: V54 = 0x100
0x108: V55 = EXP 0x100 0x0
0x10a: V56 = DIV V53 0x1
0x10b: V57 = 0xffffffffffffffffffffffffffffffffffffffff
0x120: V58 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0x121: V59 = 0xffffffffffffffffffffffffffffffffffffffff
0x136: V60 = AND 0xffffffffffffffffffffffffffffffffffffffff V58
0x137: V61 = CALLER
0x138: V62 = 0xffffffffffffffffffffffffffffffffffffffff
0x14d: V63 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0x14e: V64 = EQ V63 V60
0x14f: V65 = ISZERO V64
0x150: V66 = 0x18e
0x153: JUMPI 0x18e V65
---
Entry stack: [V8, 0xee]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xee]

================================

Block 0x154
[0x154:0x18d]
---
Predecessors: [0xfd]
Successors: []
---
0x154 PUSH1 0x0
0x156 PUSH1 0x0
0x158 SWAP1
0x159 SLOAD
0x15a SWAP1
0x15b PUSH2 0x100
0x15e EXP
0x15f SWAP1
0x160 DIV
0x161 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x176 AND
0x177 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18c AND
0x18d SELFDESTRUCT
---
0x154: V67 = 0x0
0x156: V68 = 0x0
0x159: V69 = S[0x0]
0x15b: V70 = 0x100
0x15e: V71 = EXP 0x100 0x0
0x160: V72 = DIV V69 0x1
0x161: V73 = 0xffffffffffffffffffffffffffffffffffffffff
0x176: V74 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0x177: V75 = 0xffffffffffffffffffffffffffffffffffffffff
0x18c: V76 = AND 0xffffffffffffffffffffffffffffffffffffffff V74
0x18d: SELFDESTRUCT V76
---
Entry stack: [V8, 0xee]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xee]

================================

Block 0x18e
[0x18e:0x18e]
---
Predecessors: [0xfd]
Successors: [0x18f]
---
0x18e JUMPDEST
---
0x18e: JUMPDEST 
---
Entry stack: [V8, 0xee]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xee]

================================

Block 0x18f
[0x18f:0x190]
---
Predecessors: [0x18e]
Successors: [0xee]
---
0x18f JUMPDEST
0x190 JUMP
---
0x18f: JUMPDEST 
0x190: JUMP 0xee
---
Entry stack: [V8, 0xee]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0x191
[0x191:0x1e7]
---
Predecessors: [0xf0]
Successors: [0x1e8, 0x254]
---
0x191 JUMPDEST
0x192 PUSH1 0x0
0x194 PUSH1 0x0
0x196 SWAP1
0x197 SLOAD
0x198 SWAP1
0x199 PUSH2 0x100
0x19c EXP
0x19d SWAP1
0x19e DIV
0x19f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b4 AND
0x1b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ca AND
0x1cb CALLER
0x1cc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e1 AND
0x1e2 EQ
0x1e3 ISZERO
0x1e4 PUSH2 0x254
0x1e7 JUMPI
---
0x191: JUMPDEST 
0x192: V77 = 0x0
0x194: V78 = 0x0
0x197: V79 = S[0x0]
0x199: V80 = 0x100
0x19c: V81 = EXP 0x100 0x0
0x19e: V82 = DIV V79 0x1
0x19f: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b4: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V82
0x1b5: V85 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ca: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff V84
0x1cb: V87 = CALLER
0x1cc: V88 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e1: V89 = AND 0xffffffffffffffffffffffffffffffffffffffff V87
0x1e2: V90 = EQ V89 V86
0x1e3: V91 = ISZERO V90
0x1e4: V92 = 0x254
0x1e7: JUMPI 0x254 V91
---
Entry stack: [V8, 0xfb]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xfb]

================================

Block 0x1e8
[0x1e8:0x253]
---
Predecessors: [0x191]
Successors: [0x254]
---
0x1e8 PUSH1 0x0
0x1ea PUSH1 0x0
0x1ec SWAP1
0x1ed SLOAD
0x1ee SWAP1
0x1ef PUSH2 0x100
0x1f2 EXP
0x1f3 SWAP1
0x1f4 DIV
0x1f5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20a AND
0x20b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x220 AND
0x221 PUSH1 0x0
0x223 ADDRESS
0x224 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x239 AND
0x23a BALANCE
0x23b PUSH1 0x40
0x23d MLOAD
0x23e DUP1
0x23f SWAP1
0x240 POP
0x241 PUSH1 0x0
0x243 PUSH1 0x40
0x245 MLOAD
0x246 DUP1
0x247 DUP4
0x248 SUB
0x249 DUP2
0x24a DUP6
0x24b DUP9
0x24c DUP9
0x24d CALL
0x24e SWAP4
0x24f POP
0x250 POP
0x251 POP
0x252 POP
0x253 POP
---
0x1e8: V93 = 0x0
0x1ea: V94 = 0x0
0x1ed: V95 = S[0x0]
0x1ef: V96 = 0x100
0x1f2: V97 = EXP 0x100 0x0
0x1f4: V98 = DIV V95 0x1
0x1f5: V99 = 0xffffffffffffffffffffffffffffffffffffffff
0x20a: V100 = AND 0xffffffffffffffffffffffffffffffffffffffff V98
0x20b: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x220: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x221: V103 = 0x0
0x223: V104 = ADDRESS
0x224: V105 = 0xffffffffffffffffffffffffffffffffffffffff
0x239: V106 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x23a: V107 = BALANCE V106
0x23b: V108 = 0x40
0x23d: V109 = M[0x40]
0x241: V110 = 0x0
0x243: V111 = 0x40
0x245: V112 = M[0x40]
0x248: V113 = SUB V109 V112
0x24d: V114 = CALL 0x0 V102 V107 V112 V113 V112 0x0
---
Entry stack: [V8, 0xfb]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xfb]

================================

Block 0x254
[0x254:0x254]
---
Predecessors: [0x191, 0x1e8]
Successors: [0x255]
---
0x254 JUMPDEST
---
0x254: JUMPDEST 
---
Entry stack: [V8, 0xfb]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xfb]

================================

Block 0x255
[0x255:0x256]
---
Predecessors: [0x254]
Successors: [0xfb]
---
0x255 JUMPDEST
0x256 JUMP
---
0x255: JUMPDEST 
0x256: JUMP 0xfb
---
Entry stack: [V8, 0xfb]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Function 0:
Public function signature: 0x41c0e1b5
Entry block: 0xe3
Exit block: 0xee
Body: 0xe3, 0xee, 0xfd, 0x154, 0x18e, 0x18f

Function 1:
Public function signature: 0xe5225381
Entry block: 0xf0
Exit block: 0xfb
Body: 0xf0, 0xfb, 0x191, 0x1e8, 0x254, 0x255

Function 2:
Public fallback function
Entry block: 0x44
Exit block: 0xe1
Body: 0x44, 0x48, 0x4c, 0x56, 0xde, 0xdf, 0xe1

