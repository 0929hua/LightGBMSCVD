Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xbf]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xbf
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xbf
0xa: JUMPI 0xbf V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xc8]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x40045d8
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xc8
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x40045d8
0x20: V14 = EQ V12 0x40045d8
0x21: V15 = 0xc8
0x24: JUMPI 0xc8 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xe4]
---
0x25 DUP1
0x26 PUSH4 0x3a34f09a
0x2b EQ
0x2c PUSH2 0xe4
0x2f JUMPI
---
0x26: V16 = 0x3a34f09a
0x2b: V17 = EQ 0x3a34f09a V12
0x2c: V18 = 0xe4
0x2f: JUMPI 0xe4 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x122]
---
0x30 DUP1
0x31 PUSH4 0x4e3dc2f1
0x36 EQ
0x37 PUSH2 0x122
0x3a JUMPI
---
0x31: V19 = 0x4e3dc2f1
0x36: V20 = EQ 0x4e3dc2f1 V12
0x37: V21 = 0x122
0x3a: JUMPI 0x122 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x148]
---
0x3b DUP1
0x3c PUSH4 0x5c7b79f5
0x41 EQ
0x42 PUSH2 0x148
0x45 JUMPI
---
0x3c: V22 = 0x5c7b79f5
0x41: V23 = EQ 0x5c7b79f5 V12
0x42: V24 = 0x148
0x45: JUMPI 0x148 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x15d]
---
0x46 DUP1
0x47 PUSH4 0x61dfdae6
0x4c EQ
0x4d PUSH2 0x15d
0x50 JUMPI
---
0x47: V25 = 0x61dfdae6
0x4c: V26 = EQ 0x61dfdae6 V12
0x4d: V27 = 0x15d
0x50: JUMPI 0x15d V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x17b]
---
0x51 DUP1
0x52 PUSH4 0x6a199247
0x57 EQ
0x58 PUSH2 0x17b
0x5b JUMPI
---
0x52: V28 = 0x6a199247
0x57: V29 = EQ 0x6a199247 V12
0x58: V30 = 0x17b
0x5b: JUMPI 0x17b V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x19a]
---
0x5c DUP1
0x5d PUSH4 0x6dcea85f
0x62 EQ
0x63 PUSH2 0x19a
0x66 JUMPI
---
0x5d: V31 = 0x6dcea85f
0x62: V32 = EQ 0x6dcea85f V12
0x63: V33 = 0x19a
0x66: JUMPI 0x19a V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x1b8]
---
0x67 DUP1
0x68 PUSH4 0x819912a2
0x6d EQ
0x6e PUSH2 0x1b8
0x71 JUMPI
---
0x68: V34 = 0x819912a2
0x6d: V35 = EQ 0x819912a2 V12
0x6e: V36 = 0x1b8
0x71: JUMPI 0x1b8 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x1d6]
---
0x72 DUP1
0x73 PUSH4 0x9c0eff72
0x78 EQ
0x79 PUSH2 0x1d6
0x7c JUMPI
---
0x73: V37 = 0x9c0eff72
0x78: V38 = EQ 0x9c0eff72 V12
0x79: V39 = 0x1d6
0x7c: JUMPI 0x1d6 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x202]
---
0x7d DUP1
0x7e PUSH4 0xa04a0908
0x83 EQ
0x84 PUSH2 0x202
0x87 JUMPI
---
0x7e: V40 = 0xa04a0908
0x83: V41 = EQ 0xa04a0908 V12
0x84: V42 = 0x202
0x87: JUMPI 0x202 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x266]
---
0x88 DUP1
0x89 PUSH4 0xafd82067
0x8e EQ
0x8f PUSH2 0x266
0x92 JUMPI
---
0x89: V43 = 0xafd82067
0x8e: V44 = EQ 0xafd82067 V12
0x8f: V45 = 0x266
0x92: JUMPI 0x266 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x288]
---
0x93 DUP1
0x94 PUSH4 0xb3e05ec6
0x99 EQ
0x9a PUSH2 0x288
0x9d JUMPI
---
0x94: V46 = 0xb3e05ec6
0x99: V47 = EQ 0xb3e05ec6 V12
0x9a: V48 = 0x288
0x9d: JUMPI 0x288 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x29a]
---
0x9e DUP1
0x9f PUSH4 0xc5563720
0xa4 EQ
0xa5 PUSH2 0x29a
0xa8 JUMPI
---
0x9f: V49 = 0xc5563720
0xa4: V50 = EQ 0xc5563720 V12
0xa5: V51 = 0x29a
0xa8: JUMPI 0x29a V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x2ac]
---
0xa9 DUP1
0xaa PUSH4 0xd98e14bd
0xaf EQ
0xb0 PUSH2 0x2ac
0xb3 JUMPI
---
0xaa: V52 = 0xd98e14bd
0xaf: V53 = EQ 0xd98e14bd V12
0xb0: V54 = 0x2ac
0xb3: JUMPI 0x2ac V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x2d2]
---
0xb4 DUP1
0xb5 PUSH4 0xe29940b9
0xba EQ
0xbb PUSH2 0x2d2
0xbe JUMPI
---
0xb5: V55 = 0xe29940b9
0xba: V56 = EQ 0xe29940b9 V12
0xbb: V57 = 0x2d2
0xbe: JUMPI 0x2d2 V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc2]
---
Predecessors: [0x0, 0xb4]
Successors: [0xc3]
---
0xbf JUMPDEST
0xc0 PUSH2 0xc6
---
0xbf: JUMPDEST 
0xc0: V58 = 0xc6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc6]
Exit stack: [V12, 0xc6]

================================

Block 0xc3
[0xc3:0xc3]
---
Predecessors: [0xbf]
Successors: [0xc4]
---
0xc3 JUMPDEST
---
0xc3: JUMPDEST 
---
Entry stack: [V12, 0xc6]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc6]

================================

Block 0xc4
[0xc4:0xc5]
---
Predecessors: [0xc3]
Successors: [0xc6]
---
0xc4 JUMPDEST
0xc5 JUMP
---
0xc4: JUMPDEST 
0xc5: JUMP 0xc6
---
Entry stack: [V12, 0xc6]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xc6
[0xc6:0xc7]
---
Predecessors: [0xc4, 0x3d5, 0x4d2, 0x50d, 0x5ba, 0x5f4, 0x6ab]
Successors: []
---
0xc6 JUMPDEST
0xc7 STOP
---
0xc6: JUMPDEST 
0xc7: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xc8
[0xc8:0xe1]
---
Predecessors: [0xb]
Successors: [0x2e7]
---
0xc8 JUMPDEST
0xc9 PUSH2 0xc6
0xcc PUSH4 0xffffffff
0xd1 PUSH1 0x4
0xd3 CALLDATALOAD
0xd4 AND
0xd5 PUSH1 0x24
0xd7 CALLDATALOAD
0xd8 PUSH1 0x44
0xda CALLDATALOAD
0xdb PUSH1 0x64
0xdd CALLDATALOAD
0xde PUSH2 0x2e7
0xe1 JUMP
---
0xc8: JUMPDEST 
0xc9: V59 = 0xc6
0xcc: V60 = 0xffffffff
0xd1: V61 = 0x4
0xd3: V62 = CALLDATALOAD 0x4
0xd4: V63 = AND V62 0xffffffff
0xd5: V64 = 0x24
0xd7: V65 = CALLDATALOAD 0x24
0xd8: V66 = 0x44
0xda: V67 = CALLDATALOAD 0x44
0xdb: V68 = 0x64
0xdd: V69 = CALLDATALOAD 0x64
0xde: V70 = 0x2e7
0xe1: JUMP 0x2e7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc6, V63, V65, V67, V69]
Exit stack: [V12, 0xc6, V63, V65, V67, V69]

================================

Block 0xe2
[0xe2:0xe3]
---
Predecessors: []
Successors: []
---
0xe2 JUMPDEST
0xe3 STOP
---
0xe2: JUMPDEST 
0xe3: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xe4
[0xe4:0xea]
---
Predecessors: [0x25]
Successors: [0xeb, 0xec]
---
0xe4 JUMPDEST
0xe5 CALLVALUE
0xe6 ISZERO
0xe7 PUSH2 0xec
0xea JUMPI
---
0xe4: JUMPDEST 
0xe5: V71 = CALLVALUE
0xe6: V72 = ISZERO V71
0xe7: V73 = 0xec
0xea: JUMPI 0xec V72
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xeb
[0xeb:0xeb]
---
Predecessors: [0xe4]
Successors: []
---
0xeb INVALID
---
0xeb: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xec
[0xec:0x10b]
---
Predecessors: [0xe4]
Successors: [0x3de]
---
0xec JUMPDEST
0xed PUSH2 0x10c
0xf0 PUSH1 0xff
0xf2 PUSH1 0x4
0xf4 CALLDATALOAD
0xf5 DUP2
0xf6 AND
0xf7 SWAP1
0xf8 PUSH1 0x24
0xfa CALLDATALOAD
0xfb AND
0xfc PUSH1 0x1
0xfe PUSH1 0xa0
0x100 PUSH1 0x2
0x102 EXP
0x103 SUB
0x104 PUSH1 0x44
0x106 CALLDATALOAD
0x107 AND
0x108 PUSH2 0x3de
0x10b JUMP
---
0xec: JUMPDEST 
0xed: V74 = 0x10c
0xf0: V75 = 0xff
0xf2: V76 = 0x4
0xf4: V77 = CALLDATALOAD 0x4
0xf6: V78 = AND 0xff V77
0xf8: V79 = 0x24
0xfa: V80 = CALLDATALOAD 0x24
0xfb: V81 = AND V80 0xff
0xfc: V82 = 0x1
0xfe: V83 = 0xa0
0x100: V84 = 0x2
0x102: V85 = EXP 0x2 0xa0
0x103: V86 = SUB 0x10000000000000000000000000000000000000000 0x1
0x104: V87 = 0x44
0x106: V88 = CALLDATALOAD 0x44
0x107: V89 = AND V88 0xffffffffffffffffffffffffffffffffffffffff
0x108: V90 = 0x3de
0x10b: JUMP 0x3de
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x10c, V78, V81, V89]
Exit stack: [V12, 0x10c, V78, V81, V89]

================================

Block 0x10c
[0x10c:0x121]
---
Predecessors: [0x433, 0x43c, 0x89b]
Successors: []
---
0x10c JUMPDEST
0x10d PUSH1 0x40
0x10f DUP1
0x110 MLOAD
0x111 PUSH1 0xff
0x113 SWAP1
0x114 SWAP3
0x115 AND
0x116 DUP3
0x117 MSTORE
0x118 MLOAD
0x119 SWAP1
0x11a DUP2
0x11b SWAP1
0x11c SUB
0x11d PUSH1 0x20
0x11f ADD
0x120 SWAP1
0x121 RETURN
---
0x10c: JUMPDEST 
0x10d: V91 = 0x40
0x110: V92 = M[0x40]
0x111: V93 = 0xff
0x115: V94 = AND S0 0xff
0x117: M[V92] = V94
0x118: V95 = M[0x40]
0x11c: V96 = SUB V92 V95
0x11d: V97 = 0x20
0x11f: V98 = ADD 0x20 V96
0x121: RETURN V95 V98
---
Entry stack: [V12, 0xc6, V63, V65, V67, V69, V262, 0x0, S5, {0x276, 0x2fe}, 0x0, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xc6, V63, V65, V67, V69, V262, 0x0, S5, {0x276, 0x2fe}, 0x0, S2, S1]

================================

Block 0x122
[0x122:0x128]
---
Predecessors: [0x30]
Successors: [0x129, 0x12a]
---
0x122 JUMPDEST
0x123 CALLVALUE
0x124 ISZERO
0x125 PUSH2 0x12a
0x128 JUMPI
---
0x122: JUMPDEST 
0x123: V99 = CALLVALUE
0x124: V100 = ISZERO V99
0x125: V101 = 0x12a
0x128: JUMPI 0x12a V100
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x129
[0x129:0x129]
---
Predecessors: [0x122]
Successors: []
---
0x129 INVALID
---
0x129: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x12a
[0x12a:0x131]
---
Predecessors: [0x122]
Successors: [0x43c]
---
0x12a JUMPDEST
0x12b PUSH2 0x10c
0x12e PUSH2 0x43c
0x131 JUMP
---
0x12a: JUMPDEST 
0x12b: V102 = 0x10c
0x12e: V103 = 0x43c
0x131: JUMP 0x43c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x10c]
Exit stack: [V12, 0x10c]

================================

Block 0x132
[0x132:0x147]
---
Predecessors: []
Successors: []
---
0x132 JUMPDEST
0x133 PUSH1 0x40
0x135 DUP1
0x136 MLOAD
0x137 PUSH1 0xff
0x139 SWAP1
0x13a SWAP3
0x13b AND
0x13c DUP3
0x13d MSTORE
0x13e MLOAD
0x13f SWAP1
0x140 DUP2
0x141 SWAP1
0x142 SUB
0x143 PUSH1 0x20
0x145 ADD
0x146 SWAP1
0x147 RETURN
---
0x132: JUMPDEST 
0x133: V104 = 0x40
0x136: V105 = M[0x40]
0x137: V106 = 0xff
0x13b: V107 = AND S0 0xff
0x13d: M[V105] = V107
0x13e: V108 = M[0x40]
0x142: V109 = SUB V105 V108
0x143: V110 = 0x20
0x145: V111 = ADD 0x20 V109
0x147: RETURN V108 V111
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x148
[0x148:0x14e]
---
Predecessors: [0x3b]
Successors: [0x14f, 0x150]
---
0x148 JUMPDEST
0x149 CALLVALUE
0x14a ISZERO
0x14b PUSH2 0x150
0x14e JUMPI
---
0x148: JUMPDEST 
0x149: V112 = CALLVALUE
0x14a: V113 = ISZERO V112
0x14b: V114 = 0x150
0x14e: JUMPI 0x150 V113
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x14f
[0x14f:0x14f]
---
Predecessors: [0x148]
Successors: []
---
0x14f INVALID
---
0x14f: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x150
[0x150:0x15a]
---
Predecessors: [0x148]
Successors: [0x441]
---
0x150 JUMPDEST
0x151 PUSH2 0xc6
0x154 PUSH1 0x4
0x156 CALLDATALOAD
0x157 PUSH2 0x441
0x15a JUMP
---
0x150: JUMPDEST 
0x151: V115 = 0xc6
0x154: V116 = 0x4
0x156: V117 = CALLDATALOAD 0x4
0x157: V118 = 0x441
0x15a: JUMP 0x441
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc6, V117]
Exit stack: [V12, 0xc6, V117]

================================

Block 0x15b
[0x15b:0x15c]
---
Predecessors: []
Successors: []
---
0x15b JUMPDEST
0x15c STOP
---
0x15b: JUMPDEST 
0x15c: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x15d
[0x15d:0x163]
---
Predecessors: [0x46]
Successors: [0x164, 0x165]
---
0x15d JUMPDEST
0x15e CALLVALUE
0x15f ISZERO
0x160 PUSH2 0x165
0x163 JUMPI
---
0x15d: JUMPDEST 
0x15e: V119 = CALLVALUE
0x15f: V120 = ISZERO V119
0x160: V121 = 0x165
0x163: JUMPI 0x165 V120
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x164
[0x164:0x164]
---
Predecessors: [0x15d]
Successors: []
---
0x164 INVALID
---
0x164: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x165
[0x165:0x178]
---
Predecessors: [0x15d]
Successors: [0x4d6]
---
0x165 JUMPDEST
0x166 PUSH2 0xc6
0x169 PUSH1 0x1
0x16b PUSH1 0xa0
0x16d PUSH1 0x2
0x16f EXP
0x170 SUB
0x171 PUSH1 0x4
0x173 CALLDATALOAD
0x174 AND
0x175 PUSH2 0x4d6
0x178 JUMP
---
0x165: JUMPDEST 
0x166: V122 = 0xc6
0x169: V123 = 0x1
0x16b: V124 = 0xa0
0x16d: V125 = 0x2
0x16f: V126 = EXP 0x2 0xa0
0x170: V127 = SUB 0x10000000000000000000000000000000000000000 0x1
0x171: V128 = 0x4
0x173: V129 = CALLDATALOAD 0x4
0x174: V130 = AND V129 0xffffffffffffffffffffffffffffffffffffffff
0x175: V131 = 0x4d6
0x178: JUMP 0x4d6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc6, V130]
Exit stack: [V12, 0xc6, V130]

================================

Block 0x179
[0x179:0x17a]
---
Predecessors: []
Successors: []
---
0x179 JUMPDEST
0x17a STOP
---
0x179: JUMPDEST 
0x17a: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x17b
[0x17b:0x181]
---
Predecessors: [0x51]
Successors: [0x182, 0x183]
---
0x17b JUMPDEST
0x17c CALLVALUE
0x17d ISZERO
0x17e PUSH2 0x183
0x181 JUMPI
---
0x17b: JUMPDEST 
0x17c: V132 = CALLVALUE
0x17d: V133 = ISZERO V132
0x17e: V134 = 0x183
0x181: JUMPI 0x183 V133
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x182
[0x182:0x182]
---
Predecessors: [0x17b]
Successors: []
---
0x182 INVALID
---
0x182: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x183
[0x183:0x197]
---
Predecessors: [0x17b]
Successors: [0x510]
---
0x183 JUMPDEST
0x184 PUSH2 0xc6
0x187 PUSH8 0xffffffffffffffff
0x190 PUSH1 0x4
0x192 CALLDATALOAD
0x193 AND
0x194 PUSH2 0x510
0x197 JUMP
---
0x183: JUMPDEST 
0x184: V135 = 0xc6
0x187: V136 = 0xffffffffffffffff
0x190: V137 = 0x4
0x192: V138 = CALLDATALOAD 0x4
0x193: V139 = AND V138 0xffffffffffffffff
0x194: V140 = 0x510
0x197: JUMP 0x510
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc6, V139]
Exit stack: [V12, 0xc6, V139]

================================

Block 0x198
[0x198:0x199]
---
Predecessors: []
Successors: []
---
0x198 JUMPDEST
0x199 STOP
---
0x198: JUMPDEST 
0x199: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x19a
[0x19a:0x1a0]
---
Predecessors: [0x5c]
Successors: [0x1a1, 0x1a2]
---
0x19a JUMPDEST
0x19b CALLVALUE
0x19c ISZERO
0x19d PUSH2 0x1a2
0x1a0 JUMPI
---
0x19a: JUMPDEST 
0x19b: V141 = CALLVALUE
0x19c: V142 = ISZERO V141
0x19d: V143 = 0x1a2
0x1a0: JUMPI 0x1a2 V142
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a1
[0x1a1:0x1a1]
---
Predecessors: [0x19a]
Successors: []
---
0x1a1 INVALID
---
0x1a1: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a2
[0x1a2:0x1b5]
---
Predecessors: [0x19a]
Successors: [0x583]
---
0x1a2 JUMPDEST
0x1a3 PUSH2 0xc6
0x1a6 PUSH1 0x1
0x1a8 PUSH1 0xa0
0x1aa PUSH1 0x2
0x1ac EXP
0x1ad SUB
0x1ae PUSH1 0x4
0x1b0 CALLDATALOAD
0x1b1 AND
0x1b2 PUSH2 0x583
0x1b5 JUMP
---
0x1a2: JUMPDEST 
0x1a3: V144 = 0xc6
0x1a6: V145 = 0x1
0x1a8: V146 = 0xa0
0x1aa: V147 = 0x2
0x1ac: V148 = EXP 0x2 0xa0
0x1ad: V149 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ae: V150 = 0x4
0x1b0: V151 = CALLDATALOAD 0x4
0x1b1: V152 = AND V151 0xffffffffffffffffffffffffffffffffffffffff
0x1b2: V153 = 0x583
0x1b5: JUMP 0x583
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc6, V152]
Exit stack: [V12, 0xc6, V152]

================================

Block 0x1b6
[0x1b6:0x1b7]
---
Predecessors: []
Successors: []
---
0x1b6 JUMPDEST
0x1b7 STOP
---
0x1b6: JUMPDEST 
0x1b7: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1b8
[0x1b8:0x1be]
---
Predecessors: [0x67]
Successors: [0x1bf, 0x1c0]
---
0x1b8 JUMPDEST
0x1b9 CALLVALUE
0x1ba ISZERO
0x1bb PUSH2 0x1c0
0x1be JUMPI
---
0x1b8: JUMPDEST 
0x1b9: V154 = CALLVALUE
0x1ba: V155 = ISZERO V154
0x1bb: V156 = 0x1c0
0x1be: JUMPI 0x1c0 V155
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1bf
[0x1bf:0x1bf]
---
Predecessors: [0x1b8]
Successors: []
---
0x1bf INVALID
---
0x1bf: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1c0
[0x1c0:0x1d3]
---
Predecessors: [0x1b8]
Successors: [0x5bd]
---
0x1c0 JUMPDEST
0x1c1 PUSH2 0xc6
0x1c4 PUSH1 0x1
0x1c6 PUSH1 0xa0
0x1c8 PUSH1 0x2
0x1ca EXP
0x1cb SUB
0x1cc PUSH1 0x4
0x1ce CALLDATALOAD
0x1cf AND
0x1d0 PUSH2 0x5bd
0x1d3 JUMP
---
0x1c0: JUMPDEST 
0x1c1: V157 = 0xc6
0x1c4: V158 = 0x1
0x1c6: V159 = 0xa0
0x1c8: V160 = 0x2
0x1ca: V161 = EXP 0x2 0xa0
0x1cb: V162 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1cc: V163 = 0x4
0x1ce: V164 = CALLDATALOAD 0x4
0x1cf: V165 = AND V164 0xffffffffffffffffffffffffffffffffffffffff
0x1d0: V166 = 0x5bd
0x1d3: JUMP 0x5bd
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc6, V165]
Exit stack: [V12, 0xc6, V165]

================================

Block 0x1d4
[0x1d4:0x1d5]
---
Predecessors: []
Successors: []
---
0x1d4 JUMPDEST
0x1d5 STOP
---
0x1d4: JUMPDEST 
0x1d5: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1d6
[0x1d6:0x1dc]
---
Predecessors: [0x72]
Successors: [0x1dd, 0x1de]
---
0x1d6 JUMPDEST
0x1d7 CALLVALUE
0x1d8 ISZERO
0x1d9 PUSH2 0x1de
0x1dc JUMPI
---
0x1d6: JUMPDEST 
0x1d7: V167 = CALLVALUE
0x1d8: V168 = ISZERO V167
0x1d9: V169 = 0x1de
0x1dc: JUMPI 0x1de V168
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1dd
[0x1dd:0x1dd]
---
Predecessors: [0x1d6]
Successors: []
---
0x1dd INVALID
---
0x1dd: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1de
[0x1de:0x1e5]
---
Predecessors: [0x1d6]
Successors: [0x5f7]
---
0x1de JUMPDEST
0x1df PUSH2 0x1e6
0x1e2 PUSH2 0x5f7
0x1e5 JUMP
---
0x1de: JUMPDEST 
0x1df: V170 = 0x1e6
0x1e2: V171 = 0x5f7
0x1e5: JUMP 0x5f7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1e6]
Exit stack: [V12, 0x1e6]

================================

Block 0x1e6
[0x1e6:0x201]
---
Predecessors: [0x5f7]
Successors: []
---
0x1e6 JUMPDEST
0x1e7 PUSH1 0x40
0x1e9 DUP1
0x1ea MLOAD
0x1eb PUSH1 0x1
0x1ed PUSH1 0xa0
0x1ef PUSH1 0x2
0x1f1 EXP
0x1f2 SUB
0x1f3 SWAP1
0x1f4 SWAP3
0x1f5 AND
0x1f6 DUP3
0x1f7 MSTORE
0x1f8 MLOAD
0x1f9 SWAP1
0x1fa DUP2
0x1fb SWAP1
0x1fc SUB
0x1fd PUSH1 0x20
0x1ff ADD
0x200 SWAP1
0x201 RETURN
---
0x1e6: JUMPDEST 
0x1e7: V172 = 0x40
0x1ea: V173 = M[0x40]
0x1eb: V174 = 0x1
0x1ed: V175 = 0xa0
0x1ef: V176 = 0x2
0x1f1: V177 = EXP 0x2 0xa0
0x1f2: V178 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f5: V179 = AND V533 0xffffffffffffffffffffffffffffffffffffffff
0x1f7: M[V173] = V179
0x1f8: V180 = M[0x40]
0x1fc: V181 = SUB V173 V180
0x1fd: V182 = 0x20
0x1ff: V183 = ADD 0x20 V181
0x201: RETURN V180 V183
---
Entry stack: [V12, 0x1e6, V533]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1e6]

================================

Block 0x202
[0x202:0x208]
---
Predecessors: [0x7d]
Successors: [0x209, 0x20a]
---
0x202 JUMPDEST
0x203 CALLVALUE
0x204 ISZERO
0x205 PUSH2 0x20a
0x208 JUMPI
---
0x202: JUMPDEST 
0x203: V184 = CALLVALUE
0x204: V185 = ISZERO V184
0x205: V186 = 0x20a
0x208: JUMPI 0x20a V185
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x209
[0x209:0x209]
---
Predecessors: [0x202]
Successors: []
---
0x209 INVALID
---
0x209: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x20a
[0x20a:0x263]
---
Predecessors: [0x202]
Successors: [0x606]
---
0x20a JUMPDEST
0x20b PUSH1 0x40
0x20d DUP1
0x20e MLOAD
0x20f PUSH1 0x20
0x211 PUSH1 0x4
0x213 PUSH1 0x24
0x215 DUP1
0x216 CALLDATALOAD
0x217 DUP3
0x218 DUP2
0x219 ADD
0x21a CALLDATALOAD
0x21b PUSH1 0x1f
0x21d DUP2
0x21e ADD
0x21f DUP6
0x220 SWAP1
0x221 DIV
0x222 DUP6
0x223 MUL
0x224 DUP7
0x225 ADD
0x226 DUP6
0x227 ADD
0x228 SWAP1
0x229 SWAP7
0x22a MSTORE
0x22b DUP6
0x22c DUP6
0x22d MSTORE
0x22e PUSH2 0xc6
0x231 SWAP6
0x232 DUP4
0x233 CALLDATALOAD
0x234 PUSH1 0x1
0x236 PUSH1 0xa0
0x238 PUSH1 0x2
0x23a EXP
0x23b SUB
0x23c AND
0x23d SWAP6
0x23e SWAP4
0x23f SWAP5
0x240 PUSH1 0x44
0x242 SWAP5
0x243 SWAP4
0x244 SWAP3
0x245 SWAP1
0x246 SWAP3
0x247 ADD
0x248 SWAP2
0x249 DUP2
0x24a SWAP1
0x24b DUP5
0x24c ADD
0x24d DUP4
0x24e DUP3
0x24f DUP1
0x250 DUP3
0x251 DUP5
0x252 CALLDATACOPY
0x253 POP
0x254 SWAP5
0x255 SWAP7
0x256 POP
0x257 POP
0x258 SWAP4
0x259 CALLDATALOAD
0x25a SWAP4
0x25b POP
0x25c PUSH2 0x606
0x25f SWAP3
0x260 POP
0x261 POP
0x262 POP
0x263 JUMP
---
0x20a: JUMPDEST 
0x20b: V187 = 0x40
0x20e: V188 = M[0x40]
0x20f: V189 = 0x20
0x211: V190 = 0x4
0x213: V191 = 0x24
0x216: V192 = CALLDATALOAD 0x24
0x219: V193 = ADD V192 0x4
0x21a: V194 = CALLDATALOAD V193
0x21b: V195 = 0x1f
0x21e: V196 = ADD V194 0x1f
0x221: V197 = DIV V196 0x20
0x223: V198 = MUL 0x20 V197
0x225: V199 = ADD V188 V198
0x227: V200 = ADD 0x20 V199
0x22a: M[0x40] = V200
0x22d: M[V188] = V194
0x22e: V201 = 0xc6
0x233: V202 = CALLDATALOAD 0x4
0x234: V203 = 0x1
0x236: V204 = 0xa0
0x238: V205 = 0x2
0x23a: V206 = EXP 0x2 0xa0
0x23b: V207 = SUB 0x10000000000000000000000000000000000000000 0x1
0x23c: V208 = AND 0xffffffffffffffffffffffffffffffffffffffff V202
0x240: V209 = 0x44
0x247: V210 = ADD 0x24 V192
0x24c: V211 = ADD V188 0x20
0x252: CALLDATACOPY V211 V210 V194
0x259: V212 = CALLDATALOAD 0x44
0x25c: V213 = 0x606
0x263: JUMP 0x606
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc6, V208, V188, V212]
Exit stack: [V12, 0xc6, V208, V188, V212]

================================

Block 0x264
[0x264:0x265]
---
Predecessors: []
Successors: []
---
0x264 JUMPDEST
0x265 STOP
---
0x264: JUMPDEST 
0x265: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x266
[0x266:0x26c]
---
Predecessors: [0x88]
Successors: [0x26d, 0x26e]
---
0x266 JUMPDEST
0x267 CALLVALUE
0x268 ISZERO
0x269 PUSH2 0x26e
0x26c JUMPI
---
0x266: JUMPDEST 
0x267: V214 = CALLVALUE
0x268: V215 = ISZERO V214
0x269: V216 = 0x26e
0x26c: JUMPI 0x26e V215
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x26d
[0x26d:0x26d]
---
Predecessors: [0x266]
Successors: []
---
0x26d INVALID
---
0x26d: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x26e
[0x26e:0x275]
---
Predecessors: [0x266]
Successors: [0x6b0]
---
0x26e JUMPDEST
0x26f PUSH2 0x276
0x272 PUSH2 0x6b0
0x275 JUMP
---
0x26e: JUMPDEST 
0x26f: V217 = 0x276
0x272: V218 = 0x6b0
0x275: JUMP 0x6b0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x276]
Exit stack: [V12, 0x276]

================================

Block 0x276
[0x276:0x287]
---
Predecessors: [0x6de]
Successors: []
---
0x276 JUMPDEST
0x277 PUSH1 0x40
0x279 DUP1
0x27a MLOAD
0x27b SWAP2
0x27c DUP3
0x27d MSTORE
0x27e MLOAD
0x27f SWAP1
0x280 DUP2
0x281 SWAP1
0x282 SUB
0x283 PUSH1 0x20
0x285 ADD
0x286 SWAP1
0x287 RETURN
---
0x276: JUMPDEST 
0x277: V219 = 0x40
0x27a: V220 = M[0x40]
0x27d: M[V220] = S0
0x27e: V221 = M[0x40]
0x282: V222 = SUB V220 V221
0x283: V223 = 0x20
0x285: V224 = ADD 0x20 V222
0x287: RETURN V221 V224
---
Entry stack: [V12, 0xc6, V63, V65, V67, V69, V262, 0x0, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xc6, V63, V65, V67, V69, V262, 0x0, S1]

================================

Block 0x288
[0x288:0x28e]
---
Predecessors: [0x93]
Successors: [0x28f, 0x290]
---
0x288 JUMPDEST
0x289 CALLVALUE
0x28a ISZERO
0x28b PUSH2 0x290
0x28e JUMPI
---
0x288: JUMPDEST 
0x289: V225 = CALLVALUE
0x28a: V226 = ISZERO V225
0x28b: V227 = 0x290
0x28e: JUMPI 0x290 V226
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x28f
[0x28f:0x28f]
---
Predecessors: [0x288]
Successors: []
---
0x28f INVALID
---
0x28f: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x290
[0x290:0x297]
---
Predecessors: [0x288]
Successors: [0x6e3]
---
0x290 JUMPDEST
0x291 PUSH2 0xc6
0x294 PUSH2 0x6e3
0x297 JUMP
---
0x290: JUMPDEST 
0x291: V228 = 0xc6
0x294: V229 = 0x6e3
0x297: JUMP 0x6e3
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc6]
Exit stack: [V12, 0xc6]

================================

Block 0x298
[0x298:0x299]
---
Predecessors: []
Successors: []
---
0x298 JUMPDEST
0x299 STOP
---
0x298: JUMPDEST 
0x299: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x29a
[0x29a:0x2a0]
---
Predecessors: [0x9e]
Successors: [0x2a1, 0x2a2]
---
0x29a JUMPDEST
0x29b CALLVALUE
0x29c ISZERO
0x29d PUSH2 0x2a2
0x2a0 JUMPI
---
0x29a: JUMPDEST 
0x29b: V230 = CALLVALUE
0x29c: V231 = ISZERO V230
0x29d: V232 = 0x2a2
0x2a0: JUMPI 0x2a2 V231
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a1
[0x2a1:0x2a1]
---
Predecessors: [0x29a]
Successors: []
---
0x2a1 INVALID
---
0x2a1: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a2
[0x2a2:0x2a9]
---
Predecessors: [0x29a]
Successors: [0x88b]
---
0x2a2 JUMPDEST
0x2a3 PUSH2 0xc6
0x2a6 PUSH2 0x88b
0x2a9 JUMP
---
0x2a2: JUMPDEST 
0x2a3: V233 = 0xc6
0x2a6: V234 = 0x88b
0x2a9: JUMP 0x88b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc6]
Exit stack: [V12, 0xc6]

================================

Block 0x2aa
[0x2aa:0x2ab]
---
Predecessors: []
Successors: []
---
0x2aa JUMPDEST
0x2ab STOP
---
0x2aa: JUMPDEST 
0x2ab: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2ac
[0x2ac:0x2b2]
---
Predecessors: [0xa9]
Successors: [0x2b3, 0x2b4]
---
0x2ac JUMPDEST
0x2ad CALLVALUE
0x2ae ISZERO
0x2af PUSH2 0x2b4
0x2b2 JUMPI
---
0x2ac: JUMPDEST 
0x2ad: V235 = CALLVALUE
0x2ae: V236 = ISZERO V235
0x2af: V237 = 0x2b4
0x2b2: JUMPI 0x2b4 V236
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2b3
[0x2b3:0x2b3]
---
Predecessors: [0x2ac]
Successors: []
---
0x2b3 INVALID
---
0x2b3: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2b4
[0x2b4:0x2bb]
---
Predecessors: [0x2ac]
Successors: [0x89b]
---
0x2b4 JUMPDEST
0x2b5 PUSH2 0x10c
0x2b8 PUSH2 0x89b
0x2bb JUMP
---
0x2b4: JUMPDEST 
0x2b5: V238 = 0x10c
0x2b8: V239 = 0x89b
0x2bb: JUMP 0x89b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x10c]
Exit stack: [V12, 0x10c]

================================

Block 0x2bc
[0x2bc:0x2d1]
---
Predecessors: []
Successors: []
---
0x2bc JUMPDEST
0x2bd PUSH1 0x40
0x2bf DUP1
0x2c0 MLOAD
0x2c1 PUSH1 0xff
0x2c3 SWAP1
0x2c4 SWAP3
0x2c5 AND
0x2c6 DUP3
0x2c7 MSTORE
0x2c8 MLOAD
0x2c9 SWAP1
0x2ca DUP2
0x2cb SWAP1
0x2cc SUB
0x2cd PUSH1 0x20
0x2cf ADD
0x2d0 SWAP1
0x2d1 RETURN
---
0x2bc: JUMPDEST 
0x2bd: V240 = 0x40
0x2c0: V241 = M[0x40]
0x2c1: V242 = 0xff
0x2c5: V243 = AND S0 0xff
0x2c7: M[V241] = V243
0x2c8: V244 = M[0x40]
0x2cc: V245 = SUB V241 V244
0x2cd: V246 = 0x20
0x2cf: V247 = ADD 0x20 V245
0x2d1: RETURN V244 V247
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2d2
[0x2d2:0x2d8]
---
Predecessors: [0xb4]
Successors: [0x2d9, 0x2da]
---
0x2d2 JUMPDEST
0x2d3 CALLVALUE
0x2d4 ISZERO
0x2d5 PUSH2 0x2da
0x2d8 JUMPI
---
0x2d2: JUMPDEST 
0x2d3: V248 = CALLVALUE
0x2d4: V249 = ISZERO V248
0x2d5: V250 = 0x2da
0x2d8: JUMPI 0x2da V249
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2d9
[0x2d9:0x2d9]
---
Predecessors: [0x2d2]
Successors: []
---
0x2d9 INVALID
---
0x2d9: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2da
[0x2da:0x2e4]
---
Predecessors: [0x2d2]
Successors: [0x8a0]
---
0x2da JUMPDEST
0x2db PUSH2 0xc6
0x2de PUSH1 0x4
0x2e0 CALLDATALOAD
0x2e1 PUSH2 0x8a0
0x2e4 JUMP
---
0x2da: JUMPDEST 
0x2db: V251 = 0xc6
0x2de: V252 = 0x4
0x2e0: V253 = CALLDATALOAD 0x4
0x2e1: V254 = 0x8a0
0x2e4: JUMP 0x8a0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc6, V253]
Exit stack: [V12, 0xc6, V253]

================================

Block 0x2e5
[0x2e5:0x2e6]
---
Predecessors: []
Successors: []
---
0x2e5 JUMPDEST
0x2e6 STOP
---
0x2e5: JUMPDEST 
0x2e6: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2e7
[0x2e7:0x2fd]
---
Predecessors: [0xc8]
Successors: [0x6b0]
---
0x2e7 JUMPDEST
0x2e8 PUSH1 0x1
0x2ea SLOAD
0x2eb PUSH1 0x1
0x2ed PUSH1 0xa0
0x2ef PUSH1 0x2
0x2f1 EXP
0x2f2 SUB
0x2f3 AND
0x2f4 PUSH1 0x0
0x2f6 DUP1
0x2f7 PUSH2 0x2fe
0x2fa PUSH2 0x6b0
0x2fd JUMP
---
0x2e7: JUMPDEST 
0x2e8: V255 = 0x1
0x2ea: V256 = S[0x1]
0x2eb: V257 = 0x1
0x2ed: V258 = 0xa0
0x2ef: V259 = 0x2
0x2f1: V260 = EXP 0x2 0xa0
0x2f2: V261 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f3: V262 = AND 0xffffffffffffffffffffffffffffffffffffffff V256
0x2f4: V263 = 0x0
0x2f7: V264 = 0x2fe
0x2fa: V265 = 0x6b0
0x2fd: JUMP 0x6b0
---
Entry stack: [V12, 0xc6, V63, V65, V67, V69]
Stack pops: 0
Stack additions: [V262, 0x0, 0x0, 0x2fe]
Exit stack: [V12, 0xc6, V63, V65, V67, V69, V262, 0x0, 0x0, 0x2fe]

================================

Block 0x2fe
[0x2fe:0x307]
---
Predecessors: [0x6de]
Successors: [0x308, 0x3ce]
---
0x2fe JUMPDEST
0x2ff SWAP2
0x300 POP
0x301 DUP6
0x302 DUP3
0x303 LT
0x304 PUSH2 0x3ce
0x307 JUMPI
---
0x2fe: JUMPDEST 
0x303: V266 = LT S0 V65
0x304: V267 = 0x3ce
0x307: JUMPI 0x3ce V266
---
Entry stack: [V12, 0xc6, V63, V65, V67, V69, V262, 0x0, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S0, S1]
Exit stack: [V12, 0xc6, V63, V65, V67, V69, V262, S0, S1]

================================

Block 0x308
[0x308:0x30a]
---
Predecessors: [0x2fe]
Successors: [0x30b]
---
0x308 POP
0x309 PUSH1 0x0
---
0x309: V268 = 0x0
---
Entry stack: [V12, 0xc6, V63, V65, V67, V69, V262, S1, S0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, 0xc6, V63, V65, V67, V69, V262, S1, 0x0]

================================

Block 0x30b
[0x30b:0x313]
---
Predecessors: [0x308, 0x3c1]
Successors: [0x314, 0x3c9]
---
0x30b JUMPDEST
0x30c DUP5
0x30d DUP2
0x30e LT
0x30f ISZERO
0x310 PUSH2 0x3c9
0x313 JUMPI
---
0x30b: JUMPDEST 
0x30e: V269 = LT S0 V67
0x30f: V270 = ISZERO V269
0x310: V271 = 0x3c9
0x313: JUMPI 0x3c9 V270
---
Entry stack: [V12, 0xc6, V63, V65, V67, V69, V262, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V12, 0xc6, V63, V65, V67, V69, V262, S1, S0]

================================

Block 0x314
[0x314:0x3ac]
---
Predecessors: [0x30b]
Successors: [0x3ad, 0x3ae]
---
0x314 PUSH1 0x40
0x316 DUP1
0x317 MLOAD
0x318 PUSH32 0x681551d100000000000000000000000000000000000000000000000000000000
0x339 DUP2
0x33a MSTORE
0x33b PUSH4 0xffffffff
0x340 DUP10
0x341 AND
0x342 PUSH1 0x4
0x344 DUP1
0x345 DUP4
0x346 ADD
0x347 SWAP2
0x348 SWAP1
0x349 SWAP2
0x34a MSTORE
0x34b PUSH1 0x24
0x34d DUP3
0x34e ADD
0x34f DUP4
0x350 SWAP1
0x351 MSTORE
0x352 PUSH1 0x44
0x354 DUP3
0x355 ADD
0x356 MSTORE
0x357 PUSH32 0x6e616d6500000000000000000000000000000000000000000000000000000000
0x378 PUSH1 0x64
0x37a DUP3
0x37b ADD
0x37c MSTORE
0x37d SWAP1
0x37e MLOAD
0x37f PUSH1 0x1
0x381 PUSH1 0xa0
0x383 PUSH1 0x2
0x385 EXP
0x386 SUB
0x387 DUP6
0x388 AND
0x389 SWAP2
0x38a PUSH4 0x681551d1
0x38f SWAP2
0x390 DUP8
0x391 SWAP2
0x392 PUSH1 0x84
0x394 DUP1
0x395 DUP3
0x396 ADD
0x397 SWAP3
0x398 PUSH1 0x0
0x39a SWAP3
0x39b SWAP1
0x39c SWAP2
0x39d SWAP1
0x39e DUP3
0x39f SWAP1
0x3a0 SUB
0x3a1 ADD
0x3a2 DUP2
0x3a3 DUP6
0x3a4 DUP9
0x3a5 DUP1
0x3a6 EXTCODESIZE
0x3a7 ISZERO
0x3a8 ISZERO
0x3a9 PUSH2 0x3ae
0x3ac JUMPI
---
0x314: V272 = 0x40
0x317: V273 = M[0x40]
0x318: V274 = 0x681551d100000000000000000000000000000000000000000000000000000000
0x33a: M[V273] = 0x681551d100000000000000000000000000000000000000000000000000000000
0x33b: V275 = 0xffffffff
0x341: V276 = AND V63 0xffffffff
0x342: V277 = 0x4
0x346: V278 = ADD V273 0x4
0x34a: M[V278] = V276
0x34b: V279 = 0x24
0x34e: V280 = ADD V273 0x24
0x351: M[V280] = 0x40
0x352: V281 = 0x44
0x355: V282 = ADD V273 0x44
0x356: M[V282] = 0x4
0x357: V283 = 0x6e616d6500000000000000000000000000000000000000000000000000000000
0x378: V284 = 0x64
0x37b: V285 = ADD V273 0x64
0x37c: M[V285] = 0x6e616d6500000000000000000000000000000000000000000000000000000000
0x37e: V286 = M[0x40]
0x37f: V287 = 0x1
0x381: V288 = 0xa0
0x383: V289 = 0x2
0x385: V290 = EXP 0x2 0xa0
0x386: V291 = SUB 0x10000000000000000000000000000000000000000 0x1
0x388: V292 = AND V262 0xffffffffffffffffffffffffffffffffffffffff
0x38a: V293 = 0x681551d1
0x392: V294 = 0x84
0x396: V295 = ADD V273 0x84
0x398: V296 = 0x0
0x3a0: V297 = SUB V273 V286
0x3a1: V298 = ADD V297 0x84
0x3a6: V299 = EXTCODESIZE V292
0x3a7: V300 = ISZERO V299
0x3a8: V301 = ISZERO V300
0x3a9: V302 = 0x3ae
0x3ac: JUMPI 0x3ae V301
---
Entry stack: [V12, 0xc6, V63, V65, V67, V69, V262, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, V292, 0x681551d1, S3, V295, 0x0, V286, V298, V286, S3, V292]
Exit stack: [V12, 0xc6, V63, V65, V67, V69, V262, S1, S0, V292, 0x681551d1, V69, V295, 0x0, V286, V298, V286, V69, V292]

================================

Block 0x3ad
[0x3ad:0x3ad]
---
Predecessors: [0x314]
Successors: []
---
0x3ad INVALID
---
0x3ad: INVALID 
---
Entry stack: [V12, 0xc6, V63, V65, V67, V69, V262, S11, S10, V292, 0x681551d1, V69, V295, 0x0, V286, V298, V286, V69, V292]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc6, V63, V65, V67, V69, V262, S11, S10, V292, 0x681551d1, V69, V295, 0x0, V286, V298, V286, V69, V292]

================================

Block 0x3ae
[0x3ae:0x3ba]
---
Predecessors: [0x314]
Successors: [0x3bb, 0x3bc]
---
0x3ae JUMPDEST
0x3af PUSH2 0x235a
0x3b2 GAS
0x3b3 SUB
0x3b4 CALL
0x3b5 ISZERO
0x3b6 ISZERO
0x3b7 PUSH2 0x3bc
0x3ba JUMPI
---
0x3ae: JUMPDEST 
0x3af: V303 = 0x235a
0x3b2: V304 = GAS
0x3b3: V305 = SUB V304 0x235a
0x3b4: V306 = CALL V305 V292 V69 V286 V298 V286 0x0
0x3b5: V307 = ISZERO V306
0x3b6: V308 = ISZERO V307
0x3b7: V309 = 0x3bc
0x3ba: JUMPI 0x3bc V308
---
Entry stack: [V12, 0xc6, V63, V65, V67, V69, V262, S11, S10, V292, 0x681551d1, V69, V295, 0x0, V286, V298, V286, V69, V292]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xc6, V63, V65, V67, V69, V262, S11, S10, V292, 0x681551d1, V69, V295]

================================

Block 0x3bb
[0x3bb:0x3bb]
---
Predecessors: [0x3ae]
Successors: []
---
0x3bb INVALID
---
0x3bb: INVALID 
---
Entry stack: [V12, 0xc6, V63, V65, V67, V69, V262, S5, S4, V292, 0x681551d1, V69, V295]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc6, V63, V65, V67, V69, V262, S5, S4, V292, 0x681551d1, V69, V295]

================================

Block 0x3bc
[0x3bc:0x3c0]
---
Predecessors: [0x3ae]
Successors: [0x3c1]
---
0x3bc JUMPDEST
0x3bd POP
0x3be POP
0x3bf POP
0x3c0 POP
---
0x3bc: JUMPDEST 
---
Entry stack: [V12, 0xc6, V63, V65, V67, V69, V262, S5, S4, V292, 0x681551d1, V69, V295]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0xc6, V63, V65, V67, V69, V262, S5, S4]

================================

Block 0x3c1
[0x3c1:0x3c8]
---
Predecessors: [0x3bc]
Successors: [0x30b]
---
0x3c1 JUMPDEST
0x3c2 PUSH1 0x1
0x3c4 ADD
0x3c5 PUSH2 0x30b
0x3c8 JUMP
---
0x3c1: JUMPDEST 
0x3c2: V310 = 0x1
0x3c4: V311 = ADD 0x1 S0
0x3c5: V312 = 0x30b
0x3c8: JUMP 0x30b
---
Entry stack: [V12, 0xc6, V63, V65, V67, V69, V262, S1, S0]
Stack pops: 1
Stack additions: [V311]
Exit stack: [V12, 0xc6, V63, V65, V67, V69, V262, S1, V311]

================================

Block 0x3c9
[0x3c9:0x3cd]
---
Predecessors: [0x30b]
Successors: [0x3d4]
---
0x3c9 JUMPDEST
0x3ca PUSH2 0x3d4
0x3cd JUMP
---
0x3c9: JUMPDEST 
0x3ca: V313 = 0x3d4
0x3cd: JUMP 0x3d4
---
Entry stack: [V12, 0xc6, V63, V65, V67, V69, V262, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc6, V63, V65, V67, V69, V262, S1, S0]

================================

Block 0x3ce
[0x3ce:0x3d3]
---
Predecessors: [0x2fe]
Successors: []
---
0x3ce JUMPDEST
0x3cf PUSH1 0x0
0x3d1 PUSH1 0x0
0x3d3 REVERT
---
0x3ce: JUMPDEST 
0x3cf: V314 = 0x0
0x3d1: V315 = 0x0
0x3d3: REVERT 0x0 0x0
---
Entry stack: [V12, 0xc6, V63, V65, V67, V69, V262, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc6, V63, V65, V67, V69, V262, S1, S0]

================================

Block 0x3d4
[0x3d4:0x3d4]
---
Predecessors: [0x3c9]
Successors: [0x3d5]
---
0x3d4 JUMPDEST
---
0x3d4: JUMPDEST 
---
Entry stack: [V12, 0xc6, V63, V65, V67, V69, V262, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc6, V63, V65, V67, V69, V262, S1, S0]

================================

Block 0x3d5
[0x3d5:0x3dd]
---
Predecessors: [0x3d4]
Successors: [0xc6]
---
0x3d5 JUMPDEST
0x3d6 POP
0x3d7 POP
0x3d8 POP
0x3d9 POP
0x3da POP
0x3db POP
0x3dc POP
0x3dd JUMP
---
0x3d5: JUMPDEST 
0x3dd: JUMP 0xc6
---
Entry stack: [V12, 0xc6, V63, V65, V67, V69, V262, S1, S0]
Stack pops: 8
Stack additions: []
Exit stack: [V12]

================================

Block 0x3de
[0x3de:0x3f2]
---
Predecessors: [0xec, 0x6bf]
Successors: [0x3f3]
---
0x3de JUMPDEST
0x3df PUSH1 0x0
0x3e1 PUSH1 0x0
0x3e3 NOT
0x3e4 NUMBER
0x3e5 ADD
0x3e6 BLOCKHASH
0x3e7 PUSH1 0x1
0x3e9 PUSH1 0xa0
0x3eb PUSH1 0x2
0x3ed EXP
0x3ee SUB
0x3ef DUP4
0x3f0 AND
0x3f1 ADD
0x3f2 DUP2
---
0x3de: JUMPDEST 
0x3df: V316 = 0x0
0x3e1: V317 = 0x0
0x3e3: V318 = NOT 0x0
0x3e4: V319 = NUMBER
0x3e5: V320 = ADD V319 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x3e6: V321 = BLOCKHASH V320
0x3e7: V322 = 0x1
0x3e9: V323 = 0xa0
0x3eb: V324 = 0x2
0x3ed: V325 = EXP 0x2 0xa0
0x3ee: V326 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f0: V327 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x3f1: V328 = ADD V327 V321
---
Entry stack: [V12, 0xc6, V63, V65, V67, V69, V262, 0x0, S8, {0x276, 0x2fe}, 0x0, S5, S4, {0x10c, 0x6ca}, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x0, V328, 0x0]
Exit stack: [V12, 0xc6, V63, V65, V67, V69, V262, 0x0, S8, {0x276, 0x2fe}, 0x0, S5, S4, {0x10c, 0x6ca}, S2, S1, S0, 0x0, V328, 0x0]

================================

Block 0x3f3
[0x3f3:0x402]
---
Predecessors: [0x3de, 0x419]
Successors: [0x403, 0x40b]
---
0x3f3 JUMPDEST
0x3f4 DUP5
0x3f5 PUSH1 0xff
0x3f7 AND
0x3f8 DUP2
0x3f9 PUSH1 0xff
0x3fb AND
0x3fc LT
0x3fd DUP1
0x3fe ISZERO
0x3ff PUSH2 0x40b
0x402 JUMPI
---
0x3f3: JUMPDEST 
0x3f5: V329 = 0xff
0x3f7: V330 = AND 0xff S4
0x3f9: V331 = 0xff
0x3fb: V332 = AND 0xff S0
0x3fc: V333 = LT V332 V330
0x3fe: V334 = ISZERO V333
0x3ff: V335 = 0x40b
0x402: JUMPI 0x40b V334
---
Entry stack: [V12, 0xc6, V63, V65, V67, V69, V262, 0x0, S11, {0x276, 0x2fe}, 0x0, S8, S7, {0x10c, 0x6ca}, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V333]
Exit stack: [V12, 0xc6, V63, V65, V67, V69, V262, 0x0, S11, {0x276, 0x2fe}, 0x0, S8, S7, {0x10c, 0x6ca}, S5, S4, S3, S2, S1, S0, V333]

================================

Block 0x403
[0x403:0x40a]
---
Predecessors: [0x3f3]
Successors: [0x40b]
---
0x403 POP
0x404 PUSH1 0x6
0x406 DUP2
0x407 PUSH1 0xff
0x409 AND
0x40a LT
---
0x404: V336 = 0x6
0x407: V337 = 0xff
0x409: V338 = AND 0xff S1
0x40a: V339 = LT V338 0x6
---
Entry stack: [V12, 0xc6, V63, V65, V67, V69, V262, 0x0, S12, {0x276, 0x2fe}, 0x0, S9, S8, {0x10c, 0x6ca}, S6, S5, S4, S3, S2, S1, V333]
Stack pops: 2
Stack additions: [S1, V339]
Exit stack: [V12, 0xc6, V63, V65, V67, V69, V262, 0x0, S12, {0x276, 0x2fe}, 0x0, S9, S8, {0x10c, 0x6ca}, S6, S5, S4, S3, S2, S1, V339]

================================

Block 0x40b
[0x40b:0x410]
---
Predecessors: [0x3f3, 0x403]
Successors: [0x411, 0x421]
---
0x40b JUMPDEST
0x40c ISZERO
0x40d PUSH2 0x421
0x410 JUMPI
---
0x40b: JUMPDEST 
0x40c: V340 = ISZERO S0
0x40d: V341 = 0x421
0x410: JUMPI 0x421 V340
---
Entry stack: [V12, 0xc6, V63, V65, V67, V69, V262, 0x0, S12, {0x276, 0x2fe}, 0x0, S9, S8, {0x10c, 0x6ca}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xc6, V63, V65, V67, V69, V262, 0x0, S12, {0x276, 0x2fe}, 0x0, S9, S8, {0x10c, 0x6ca}, S6, S5, S4, S3, S2, S1]

================================

Block 0x411
[0x411:0x414]
---
Predecessors: [0x40b]
Successors: [0x415]
---
0x411 PUSH2 0x100
0x414 DUP3
---
0x411: V342 = 0x100
---
Entry stack: [V12, 0xc6, V63, V65, V67, V69, V262, 0x0, S11, {0x276, 0x2fe}, 0x0, S8, S7, {0x10c, 0x6ca}, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x100, S1]
Exit stack: [V12, 0xc6, V63, V65, V67, V69, V262, 0x0, S11, {0x276, 0x2fe}, 0x0, S8, S7, {0x10c, 0x6ca}, S5, S4, S3, S2, S1, S0, 0x100, S1]

================================

Block 0x415
[0x415:0x418]
---
Predecessors: [0x411]
Successors: [0x419]
---
0x415 JUMPDEST
0x416 DIV
0x417 SWAP2
0x418 POP
---
0x415: JUMPDEST 
0x416: V343 = DIV S0 0x100
---
Entry stack: [V12, 0xc6, V63, V65, V67, V69, V262, 0x0, S13, {0x276, 0x2fe}, 0x0, S10, S9, {0x10c, 0x6ca}, S7, S6, S5, S4, S3, S2, 0x100, S0]
Stack pops: 4
Stack additions: [V343, S2]
Exit stack: [V12, 0xc6, V63, V65, V67, V69, V262, 0x0, S13, {0x276, 0x2fe}, 0x0, S10, S9, {0x10c, 0x6ca}, S7, S6, S5, S4, V343, S2]

================================

Block 0x419
[0x419:0x420]
---
Predecessors: [0x415]
Successors: [0x3f3]
---
0x419 JUMPDEST
0x41a PUSH1 0x1
0x41c ADD
0x41d PUSH2 0x3f3
0x420 JUMP
---
0x419: JUMPDEST 
0x41a: V344 = 0x1
0x41c: V345 = ADD 0x1 S0
0x41d: V346 = 0x3f3
0x420: JUMP 0x3f3
---
Entry stack: [V12, 0xc6, V63, V65, V67, V69, V262, 0x0, S11, {0x276, 0x2fe}, 0x0, S8, S7, {0x10c, 0x6ca}, S5, S4, S3, S2, V343, S0]
Stack pops: 1
Stack additions: [V345]
Exit stack: [V12, 0xc6, V63, V65, V67, V69, V262, 0x0, S11, {0x276, 0x2fe}, 0x0, S8, S7, {0x10c, 0x6ca}, S5, S4, S3, S2, V343, V345]

================================

Block 0x421
[0x421:0x42d]
---
Predecessors: [0x40b]
Successors: [0x42e, 0x42f]
---
0x421 JUMPDEST
0x422 DUP6
0x423 PUSH1 0xff
0x425 AND
0x426 DUP3
0x427 DUP2
0x428 ISZERO
0x429 ISZERO
0x42a PUSH2 0x42f
0x42d JUMPI
---
0x421: JUMPDEST 
0x423: V347 = 0xff
0x425: V348 = AND 0xff S5
0x428: V349 = ISZERO V348
0x429: V350 = ISZERO V349
0x42a: V351 = 0x42f
0x42d: JUMPI 0x42f V350
---
Entry stack: [V12, 0xc6, V63, V65, V67, V69, V262, 0x0, S11, {0x276, 0x2fe}, 0x0, S8, S7, {0x10c, 0x6ca}, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, V348, S1]
Exit stack: [V12, 0xc6, V63, V65, V67, V69, V262, 0x0, S11, {0x276, 0x2fe}, 0x0, S8, S7, {0x10c, 0x6ca}, S5, S4, S3, S2, S1, S0, V348, S1]

================================

Block 0x42e
[0x42e:0x42e]
---
Predecessors: [0x421]
Successors: []
---
0x42e INVALID
---
0x42e: INVALID 
---
Entry stack: [V12, 0xc6, V63, V65, V67, V69, V262, 0x0, S13, {0x276, 0x2fe}, 0x0, S10, S9, {0x10c, 0x6ca}, S7, S6, S5, S4, S3, S2, V348, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc6, V63, V65, V67, V69, V262, 0x0, S13, {0x276, 0x2fe}, 0x0, S10, S9, {0x10c, 0x6ca}, S7, S6, S5, S4, S3, S2, V348, S0]

================================

Block 0x42f
[0x42f:0x432]
---
Predecessors: [0x421]
Successors: [0x433]
---
0x42f JUMPDEST
0x430 MOD
0x431 SWAP3
0x432 POP
---
0x42f: JUMPDEST 
0x430: V352 = MOD S0 V348
---
Entry stack: [V12, 0xc6, V63, V65, V67, V69, V262, 0x0, S13, {0x276, 0x2fe}, 0x0, S10, S9, {0x10c, 0x6ca}, S7, S6, S5, S4, S3, S2, V348, S0]
Stack pops: 5
Stack additions: [V352, S3, S2]
Exit stack: [V12, 0xc6, V63, V65, V67, V69, V262, 0x0, S13, {0x276, 0x2fe}, 0x0, S10, S9, {0x10c, 0x6ca}, S7, S6, S5, V352, S3, S2]

================================

Block 0x433
[0x433:0x43b]
---
Predecessors: [0x42f]
Successors: [0x10c, 0x6ca]
---
0x433 JUMPDEST
0x434 POP
0x435 POP
0x436 SWAP4
0x437 SWAP3
0x438 POP
0x439 POP
0x43a POP
0x43b JUMP
---
0x433: JUMPDEST 
0x43b: JUMP {0x10c, 0x6ca}
---
Entry stack: [V12, 0xc6, V63, V65, V67, V69, V262, 0x0, S11, {0x276, 0x2fe}, 0x0, S8, S7, {0x10c, 0x6ca}, S5, S4, S3, V352, S1, S0]
Stack pops: 7
Stack additions: [S2]
Exit stack: [V12, 0xc6, V63, V65, V67, V69, V262, 0x0, S11, {0x276, 0x2fe}, 0x0, S8, S7, V352]

================================

Block 0x43c
[0x43c:0x440]
---
Predecessors: [0x12a]
Successors: [0x10c]
---
0x43c JUMPDEST
0x43d PUSH1 0x20
0x43f DUP2
0x440 JUMP
---
0x43c: JUMPDEST 
0x43d: V353 = 0x20
0x440: JUMP 0x10c
---
Entry stack: [V12, 0x10c]
Stack pops: 1
Stack additions: [S0, 0x20]
Exit stack: [V12, 0x10c, 0x20]

================================

Block 0x441
[0x441:0x458]
---
Predecessors: [0x150]
Successors: [0x459, 0x45d]
---
0x441 JUMPDEST
0x442 PUSH1 0x0
0x444 DUP1
0x445 SLOAD
0x446 CALLER
0x447 PUSH1 0x1
0x449 PUSH1 0xa0
0x44b PUSH1 0x2
0x44d EXP
0x44e SUB
0x44f SWAP1
0x450 DUP2
0x451 AND
0x452 SWAP2
0x453 AND
0x454 EQ
0x455 PUSH2 0x45d
0x458 JUMPI
---
0x441: JUMPDEST 
0x442: V354 = 0x0
0x445: V355 = S[0x0]
0x446: V356 = CALLER
0x447: V357 = 0x1
0x449: V358 = 0xa0
0x44b: V359 = 0x2
0x44d: V360 = EXP 0x2 0xa0
0x44e: V361 = SUB 0x10000000000000000000000000000000000000000 0x1
0x451: V362 = AND 0xffffffffffffffffffffffffffffffffffffffff V356
0x453: V363 = AND V355 0xffffffffffffffffffffffffffffffffffffffff
0x454: V364 = EQ V363 V362
0x455: V365 = 0x45d
0x458: JUMPI 0x45d V364
---
Entry stack: [V12, 0xc6, V117]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0xc6, V117, 0x0]

================================

Block 0x459
[0x459:0x45c]
---
Predecessors: [0x441]
Successors: [0x4d2]
---
0x459 PUSH2 0x4d2
0x45c JUMP
---
0x459: V366 = 0x4d2
0x45c: JUMP 0x4d2
---
Entry stack: [V12, 0xc6, V117, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc6, V117, 0x0]

================================

Block 0x45d
[0x45d:0x4bf]
---
Predecessors: [0x441]
Successors: [0x4c0, 0x4c1]
---
0x45d JUMPDEST
0x45e POP
0x45f PUSH1 0x1
0x461 SLOAD
0x462 PUSH1 0x40
0x464 DUP1
0x465 MLOAD
0x466 PUSH32 0x5c7b79f500000000000000000000000000000000000000000000000000000000
0x487 DUP2
0x488 MSTORE
0x489 PUSH1 0x4
0x48b DUP2
0x48c ADD
0x48d DUP5
0x48e SWAP1
0x48f MSTORE
0x490 SWAP1
0x491 MLOAD
0x492 PUSH1 0x1
0x494 PUSH1 0xa0
0x496 PUSH1 0x2
0x498 EXP
0x499 SUB
0x49a SWAP1
0x49b SWAP3
0x49c AND
0x49d SWAP2
0x49e DUP3
0x49f SWAP2
0x4a0 PUSH4 0x5c7b79f5
0x4a5 SWAP2
0x4a6 PUSH1 0x24
0x4a8 DUP1
0x4a9 DUP4
0x4aa ADD
0x4ab SWAP3
0x4ac PUSH1 0x0
0x4ae SWAP3
0x4af SWAP2
0x4b0 SWAP1
0x4b1 DUP3
0x4b2 SWAP1
0x4b3 SUB
0x4b4 ADD
0x4b5 DUP2
0x4b6 DUP4
0x4b7 DUP8
0x4b8 DUP1
0x4b9 EXTCODESIZE
0x4ba ISZERO
0x4bb ISZERO
0x4bc PUSH2 0x4c1
0x4bf JUMPI
---
0x45d: JUMPDEST 
0x45f: V367 = 0x1
0x461: V368 = S[0x1]
0x462: V369 = 0x40
0x465: V370 = M[0x40]
0x466: V371 = 0x5c7b79f500000000000000000000000000000000000000000000000000000000
0x488: M[V370] = 0x5c7b79f500000000000000000000000000000000000000000000000000000000
0x489: V372 = 0x4
0x48c: V373 = ADD V370 0x4
0x48f: M[V373] = V117
0x491: V374 = M[0x40]
0x492: V375 = 0x1
0x494: V376 = 0xa0
0x496: V377 = 0x2
0x498: V378 = EXP 0x2 0xa0
0x499: V379 = SUB 0x10000000000000000000000000000000000000000 0x1
0x49c: V380 = AND V368 0xffffffffffffffffffffffffffffffffffffffff
0x4a0: V381 = 0x5c7b79f5
0x4a6: V382 = 0x24
0x4aa: V383 = ADD V370 0x24
0x4ac: V384 = 0x0
0x4b3: V385 = SUB V370 V374
0x4b4: V386 = ADD V385 0x24
0x4b9: V387 = EXTCODESIZE V380
0x4ba: V388 = ISZERO V387
0x4bb: V389 = ISZERO V388
0x4bc: V390 = 0x4c1
0x4bf: JUMPI 0x4c1 V389
---
Entry stack: [V12, 0xc6, V117, 0x0]
Stack pops: 2
Stack additions: [S1, V380, V380, 0x5c7b79f5, V383, 0x0, V374, V386, V374, 0x0, V380]
Exit stack: [V12, 0xc6, V117, V380, V380, 0x5c7b79f5, V383, 0x0, V374, V386, V374, 0x0, V380]

================================

Block 0x4c0
[0x4c0:0x4c0]
---
Predecessors: [0x45d]
Successors: []
---
0x4c0 INVALID
---
0x4c0: INVALID 
---
Entry stack: [V12, 0xc6, V117, V380, V380, 0x5c7b79f5, V383, 0x0, V374, V386, V374, 0x0, V380]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc6, V117, V380, V380, 0x5c7b79f5, V383, 0x0, V374, V386, V374, 0x0, V380]

================================

Block 0x4c1
[0x4c1:0x4cc]
---
Predecessors: [0x45d, 0x510]
Successors: [0x4cd, 0x4ce]
---
0x4c1 JUMPDEST
0x4c2 PUSH1 0x32
0x4c4 GAS
0x4c5 SUB
0x4c6 CALL
0x4c7 ISZERO
0x4c8 ISZERO
0x4c9 PUSH2 0x4ce
0x4cc JUMPI
---
0x4c1: JUMPDEST 
0x4c2: V391 = 0x32
0x4c4: V392 = GAS
0x4c5: V393 = SUB V392 0x32
0x4c6: V394 = CALL V393 S0 0x0 S2 S3 S4 0x0
0x4c7: V395 = ISZERO V394
0x4c8: V396 = ISZERO V395
0x4c9: V397 = 0x4ce
0x4cc: JUMPI 0x4ce V396
---
Entry stack: [V12, 0xc6, S10, S9, S8, {0x6228e95, 0x5c7b79f5}, S6, 0x0, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xc6, S10, S9, S8, {0x6228e95, 0x5c7b79f5}, S6]

================================

Block 0x4cd
[0x4cd:0x4cd]
---
Predecessors: [0x4c1]
Successors: []
---
0x4cd INVALID
---
0x4cd: INVALID 
---
Entry stack: [V12, 0xc6, S4, S3, S2, {0x6228e95, 0x5c7b79f5}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc6, S4, S3, S2, {0x6228e95, 0x5c7b79f5}, S0]

================================

Block 0x4ce
[0x4ce:0x4d1]
---
Predecessors: [0x4c1, 0x56e, 0x77a]
Successors: [0x4d2]
---
0x4ce JUMPDEST
0x4cf POP
0x4d0 POP
0x4d1 POP
---
0x4ce: JUMPDEST 
---
Entry stack: [V12, 0xc6, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xc6, S4, S3]

================================

Block 0x4d2
[0x4d2:0x4d5]
---
Predecessors: [0x459, 0x4ce]
Successors: [0xc6]
---
0x4d2 JUMPDEST
0x4d3 POP
0x4d4 POP
0x4d5 JUMP
---
0x4d2: JUMPDEST 
0x4d5: JUMP 0xc6
---
Entry stack: [V12, 0xc6, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x4d6
[0x4d6:0x4ec]
---
Predecessors: [0x165]
Successors: [0x4ed, 0x4f1]
---
0x4d6 JUMPDEST
0x4d7 PUSH1 0x0
0x4d9 SLOAD
0x4da CALLER
0x4db PUSH1 0x1
0x4dd PUSH1 0xa0
0x4df PUSH1 0x2
0x4e1 EXP
0x4e2 SUB
0x4e3 SWAP1
0x4e4 DUP2
0x4e5 AND
0x4e6 SWAP2
0x4e7 AND
0x4e8 EQ
0x4e9 PUSH2 0x4f1
0x4ec JUMPI
---
0x4d6: JUMPDEST 
0x4d7: V398 = 0x0
0x4d9: V399 = S[0x0]
0x4da: V400 = CALLER
0x4db: V401 = 0x1
0x4dd: V402 = 0xa0
0x4df: V403 = 0x2
0x4e1: V404 = EXP 0x2 0xa0
0x4e2: V405 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4e5: V406 = AND 0xffffffffffffffffffffffffffffffffffffffff V400
0x4e7: V407 = AND V399 0xffffffffffffffffffffffffffffffffffffffff
0x4e8: V408 = EQ V407 V406
0x4e9: V409 = 0x4f1
0x4ec: JUMPI 0x4f1 V408
---
Entry stack: [V12, 0xc6, V130]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc6, V130]

================================

Block 0x4ed
[0x4ed:0x4f0]
---
Predecessors: [0x4d6]
Successors: [0x50d]
---
0x4ed PUSH2 0x50d
0x4f0 JUMP
---
0x4ed: V410 = 0x50d
0x4f0: JUMP 0x50d
---
Entry stack: [V12, 0xc6, V130]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc6, V130]

================================

Block 0x4f1
[0x4f1:0x50c]
---
Predecessors: [0x4d6]
Successors: [0x50d]
---
0x4f1 JUMPDEST
0x4f2 PUSH1 0x3
0x4f4 DUP1
0x4f5 SLOAD
0x4f6 PUSH1 0x1
0x4f8 PUSH1 0xa0
0x4fa PUSH1 0x2
0x4fc EXP
0x4fd SUB
0x4fe NOT
0x4ff AND
0x500 PUSH1 0x1
0x502 PUSH1 0xa0
0x504 PUSH1 0x2
0x506 EXP
0x507 SUB
0x508 DUP4
0x509 AND
0x50a OR
0x50b SWAP1
0x50c SSTORE
---
0x4f1: JUMPDEST 
0x4f2: V411 = 0x3
0x4f5: V412 = S[0x3]
0x4f6: V413 = 0x1
0x4f8: V414 = 0xa0
0x4fa: V415 = 0x2
0x4fc: V416 = EXP 0x2 0xa0
0x4fd: V417 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4fe: V418 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x4ff: V419 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V412
0x500: V420 = 0x1
0x502: V421 = 0xa0
0x504: V422 = 0x2
0x506: V423 = EXP 0x2 0xa0
0x507: V424 = SUB 0x10000000000000000000000000000000000000000 0x1
0x509: V425 = AND V130 0xffffffffffffffffffffffffffffffffffffffff
0x50a: V426 = OR V425 V419
0x50c: S[0x3] = V426
---
Entry stack: [V12, 0xc6, V130]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xc6, V130]

================================

Block 0x50d
[0x50d:0x50f]
---
Predecessors: [0x4ed, 0x4f1, 0x59a, 0x5d4, 0x8d6, 0x8db]
Successors: [0xc6]
---
0x50d JUMPDEST
0x50e POP
0x50f JUMP
---
0x50d: JUMPDEST 
0x50f: JUMP 0xc6
---
Entry stack: [V12, 0xc6, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x510
[0x510:0x56c]
---
Predecessors: [0x183]
Successors: [0x4c1, 0x56d]
---
0x510 JUMPDEST
0x511 PUSH1 0x2
0x513 SLOAD
0x514 PUSH1 0x0
0x516 DUP1
0x517 SLOAD
0x518 PUSH1 0x40
0x51a DUP1
0x51b MLOAD
0x51c PUSH1 0xe0
0x51e PUSH1 0x2
0x520 EXP
0x521 PUSH4 0x6228e95
0x526 MUL
0x527 DUP2
0x528 MSTORE
0x529 PUSH8 0xffffffffffffffff
0x532 DUP7
0x533 AND
0x534 PUSH1 0x4
0x536 DUP3
0x537 ADD
0x538 MSTORE
0x539 PUSH1 0x1
0x53b PUSH1 0xa0
0x53d PUSH1 0x2
0x53f EXP
0x540 SUB
0x541 SWAP3
0x542 DUP4
0x543 AND
0x544 PUSH1 0x24
0x546 DUP3
0x547 ADD
0x548 MSTORE
0x549 SWAP1
0x54a MLOAD
0x54b SWAP2
0x54c SWAP1
0x54d SWAP4
0x54e AND
0x54f SWAP3
0x550 DUP4
0x551 SWAP3
0x552 PUSH4 0x6228e95
0x557 SWAP3
0x558 PUSH1 0x44
0x55a DUP1
0x55b DUP5
0x55c ADD
0x55d SWAP4
0x55e DUP3
0x55f SWAP1
0x560 SUB
0x561 ADD
0x562 DUP2
0x563 DUP4
0x564 DUP8
0x565 DUP1
0x566 EXTCODESIZE
0x567 ISZERO
0x568 ISZERO
0x569 PUSH2 0x4c1
0x56c JUMPI
---
0x510: JUMPDEST 
0x511: V427 = 0x2
0x513: V428 = S[0x2]
0x514: V429 = 0x0
0x517: V430 = S[0x0]
0x518: V431 = 0x40
0x51b: V432 = M[0x40]
0x51c: V433 = 0xe0
0x51e: V434 = 0x2
0x520: V435 = EXP 0x2 0xe0
0x521: V436 = 0x6228e95
0x526: V437 = MUL 0x6228e95 0x100000000000000000000000000000000000000000000000000000000
0x528: M[V432] = 0x6228e9500000000000000000000000000000000000000000000000000000000
0x529: V438 = 0xffffffffffffffff
0x533: V439 = AND V139 0xffffffffffffffff
0x534: V440 = 0x4
0x537: V441 = ADD V432 0x4
0x538: M[V441] = V439
0x539: V442 = 0x1
0x53b: V443 = 0xa0
0x53d: V444 = 0x2
0x53f: V445 = EXP 0x2 0xa0
0x540: V446 = SUB 0x10000000000000000000000000000000000000000 0x1
0x543: V447 = AND 0xffffffffffffffffffffffffffffffffffffffff V430
0x544: V448 = 0x24
0x547: V449 = ADD V432 0x24
0x548: M[V449] = V447
0x54a: V450 = M[0x40]
0x54e: V451 = AND V428 0xffffffffffffffffffffffffffffffffffffffff
0x552: V452 = 0x6228e95
0x558: V453 = 0x44
0x55c: V454 = ADD V432 0x44
0x560: V455 = SUB V432 V450
0x561: V456 = ADD V455 0x44
0x566: V457 = EXTCODESIZE V451
0x567: V458 = ISZERO V457
0x568: V459 = ISZERO V458
0x569: V460 = 0x4c1
0x56c: JUMPI 0x4c1 V459
---
Entry stack: [V12, 0xc6, V139]
Stack pops: 1
Stack additions: [S0, V451, V451, 0x6228e95, V454, 0x0, V450, V456, V450, 0x0, V451]
Exit stack: [V12, 0xc6, V139, V451, V451, 0x6228e95, V454, 0x0, V450, V456, V450, 0x0, V451]

================================

Block 0x56d
[0x56d:0x56d]
---
Predecessors: [0x510]
Successors: []
---
0x56d INVALID
---
0x56d: INVALID 
---
Entry stack: [V12, 0xc6, V139, V451, V451, 0x6228e95, V454, 0x0, V450, V456, V450, 0x0, V451]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc6, V139, V451, V451, 0x6228e95, V454, 0x0, V450, V456, V450, 0x0, V451]

================================

Block 0x56e
[0x56e:0x579]
---
Predecessors: []
Successors: [0x4ce, 0x57a]
---
0x56e JUMPDEST
0x56f PUSH1 0x32
0x571 GAS
0x572 SUB
0x573 CALL
0x574 ISZERO
0x575 ISZERO
0x576 PUSH2 0x4ce
0x579 JUMPI
---
0x56e: JUMPDEST 
0x56f: V461 = 0x32
0x571: V462 = GAS
0x572: V463 = SUB V462 0x32
0x573: V464 = CALL V463 S0 S1 S2 S3 S4 S5
0x574: V465 = ISZERO V464
0x575: V466 = ISZERO V465
0x576: V467 = 0x4ce
0x579: JUMPI 0x4ce V466
---
Entry stack: []
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0x57a
[0x57a:0x57e]
---
Predecessors: [0x56e]
Successors: [0x57f]
---
0x57a INVALID
0x57b JUMPDEST
0x57c POP
0x57d POP
0x57e POP
---
0x57a: INVALID 
0x57b: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x57f
[0x57f:0x582]
---
Predecessors: [0x57a]
Successors: []
Has unresolved jump.
---
0x57f JUMPDEST
0x580 POP
0x581 POP
0x582 JUMP
---
0x57f: JUMPDEST 
0x582: JUMP S2
---
Entry stack: []
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0x583
[0x583:0x599]
---
Predecessors: [0x1a2]
Successors: [0x59a, 0x59e]
---
0x583 JUMPDEST
0x584 PUSH1 0x0
0x586 SLOAD
0x587 CALLER
0x588 PUSH1 0x1
0x58a PUSH1 0xa0
0x58c PUSH1 0x2
0x58e EXP
0x58f SUB
0x590 SWAP1
0x591 DUP2
0x592 AND
0x593 SWAP2
0x594 AND
0x595 EQ
0x596 PUSH2 0x59e
0x599 JUMPI
---
0x583: JUMPDEST 
0x584: V468 = 0x0
0x586: V469 = S[0x0]
0x587: V470 = CALLER
0x588: V471 = 0x1
0x58a: V472 = 0xa0
0x58c: V473 = 0x2
0x58e: V474 = EXP 0x2 0xa0
0x58f: V475 = SUB 0x10000000000000000000000000000000000000000 0x1
0x592: V476 = AND 0xffffffffffffffffffffffffffffffffffffffff V470
0x594: V477 = AND V469 0xffffffffffffffffffffffffffffffffffffffff
0x595: V478 = EQ V477 V476
0x596: V479 = 0x59e
0x599: JUMPI 0x59e V478
---
Entry stack: [V12, 0xc6, V152]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc6, V152]

================================

Block 0x59a
[0x59a:0x59d]
---
Predecessors: [0x583]
Successors: [0x50d]
---
0x59a PUSH2 0x50d
0x59d JUMP
---
0x59a: V480 = 0x50d
0x59d: JUMP 0x50d
---
Entry stack: [V12, 0xc6, V152]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc6, V152]

================================

Block 0x59e
[0x59e:0x5b9]
---
Predecessors: [0x583]
Successors: [0x5ba]
---
0x59e JUMPDEST
0x59f PUSH1 0x2
0x5a1 DUP1
0x5a2 SLOAD
0x5a3 PUSH1 0x1
0x5a5 PUSH1 0xa0
0x5a7 PUSH1 0x2
0x5a9 EXP
0x5aa SUB
0x5ab NOT
0x5ac AND
0x5ad PUSH1 0x1
0x5af PUSH1 0xa0
0x5b1 PUSH1 0x2
0x5b3 EXP
0x5b4 SUB
0x5b5 DUP4
0x5b6 AND
0x5b7 OR
0x5b8 SWAP1
0x5b9 SSTORE
---
0x59e: JUMPDEST 
0x59f: V481 = 0x2
0x5a2: V482 = S[0x2]
0x5a3: V483 = 0x1
0x5a5: V484 = 0xa0
0x5a7: V485 = 0x2
0x5a9: V486 = EXP 0x2 0xa0
0x5aa: V487 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ab: V488 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x5ac: V489 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V482
0x5ad: V490 = 0x1
0x5af: V491 = 0xa0
0x5b1: V492 = 0x2
0x5b3: V493 = EXP 0x2 0xa0
0x5b4: V494 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5b6: V495 = AND V152 0xffffffffffffffffffffffffffffffffffffffff
0x5b7: V496 = OR V495 V489
0x5b9: S[0x2] = V496
---
Entry stack: [V12, 0xc6, V152]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xc6, V152]

================================

Block 0x5ba
[0x5ba:0x5bc]
---
Predecessors: [0x59e]
Successors: [0xc6]
---
0x5ba JUMPDEST
0x5bb POP
0x5bc JUMP
---
0x5ba: JUMPDEST 
0x5bc: JUMP 0xc6
---
Entry stack: [V12, 0xc6, V152]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x5bd
[0x5bd:0x5d3]
---
Predecessors: [0x1c0]
Successors: [0x5d4, 0x5d8]
---
0x5bd JUMPDEST
0x5be PUSH1 0x0
0x5c0 SLOAD
0x5c1 CALLER
0x5c2 PUSH1 0x1
0x5c4 PUSH1 0xa0
0x5c6 PUSH1 0x2
0x5c8 EXP
0x5c9 SUB
0x5ca SWAP1
0x5cb DUP2
0x5cc AND
0x5cd SWAP2
0x5ce AND
0x5cf EQ
0x5d0 PUSH2 0x5d8
0x5d3 JUMPI
---
0x5bd: JUMPDEST 
0x5be: V497 = 0x0
0x5c0: V498 = S[0x0]
0x5c1: V499 = CALLER
0x5c2: V500 = 0x1
0x5c4: V501 = 0xa0
0x5c6: V502 = 0x2
0x5c8: V503 = EXP 0x2 0xa0
0x5c9: V504 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5cc: V505 = AND 0xffffffffffffffffffffffffffffffffffffffff V499
0x5ce: V506 = AND V498 0xffffffffffffffffffffffffffffffffffffffff
0x5cf: V507 = EQ V506 V505
0x5d0: V508 = 0x5d8
0x5d3: JUMPI 0x5d8 V507
---
Entry stack: [V12, 0xc6, V165]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc6, V165]

================================

Block 0x5d4
[0x5d4:0x5d7]
---
Predecessors: [0x5bd]
Successors: [0x50d]
---
0x5d4 PUSH2 0x50d
0x5d7 JUMP
---
0x5d4: V509 = 0x50d
0x5d7: JUMP 0x50d
---
Entry stack: [V12, 0xc6, V165]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc6, V165]

================================

Block 0x5d8
[0x5d8:0x5f3]
---
Predecessors: [0x5bd]
Successors: [0x5f4]
---
0x5d8 JUMPDEST
0x5d9 PUSH1 0x1
0x5db DUP1
0x5dc SLOAD
0x5dd PUSH1 0x1
0x5df PUSH1 0xa0
0x5e1 PUSH1 0x2
0x5e3 EXP
0x5e4 SUB
0x5e5 NOT
0x5e6 AND
0x5e7 PUSH1 0x1
0x5e9 PUSH1 0xa0
0x5eb PUSH1 0x2
0x5ed EXP
0x5ee SUB
0x5ef DUP4
0x5f0 AND
0x5f1 OR
0x5f2 SWAP1
0x5f3 SSTORE
---
0x5d8: JUMPDEST 
0x5d9: V510 = 0x1
0x5dc: V511 = S[0x1]
0x5dd: V512 = 0x1
0x5df: V513 = 0xa0
0x5e1: V514 = 0x2
0x5e3: V515 = EXP 0x2 0xa0
0x5e4: V516 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5e5: V517 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x5e6: V518 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V511
0x5e7: V519 = 0x1
0x5e9: V520 = 0xa0
0x5eb: V521 = 0x2
0x5ed: V522 = EXP 0x2 0xa0
0x5ee: V523 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5f0: V524 = AND V165 0xffffffffffffffffffffffffffffffffffffffff
0x5f1: V525 = OR V524 V518
0x5f3: S[0x1] = V525
---
Entry stack: [V12, 0xc6, V165]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xc6, V165]

================================

Block 0x5f4
[0x5f4:0x5f6]
---
Predecessors: [0x5d8]
Successors: [0xc6]
---
0x5f4 JUMPDEST
0x5f5 POP
0x5f6 JUMP
---
0x5f4: JUMPDEST 
0x5f6: JUMP 0xc6
---
Entry stack: [V12, 0xc6, V165]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x5f7
[0x5f7:0x605]
---
Predecessors: [0x1de]
Successors: [0x1e6]
---
0x5f7 JUMPDEST
0x5f8 PUSH1 0x0
0x5fa SLOAD
0x5fb PUSH1 0x1
0x5fd PUSH1 0xa0
0x5ff PUSH1 0x2
0x601 EXP
0x602 SUB
0x603 AND
0x604 DUP2
0x605 JUMP
---
0x5f7: JUMPDEST 
0x5f8: V526 = 0x0
0x5fa: V527 = S[0x0]
0x5fb: V528 = 0x1
0x5fd: V529 = 0xa0
0x5ff: V530 = 0x2
0x601: V531 = EXP 0x2 0xa0
0x602: V532 = SUB 0x10000000000000000000000000000000000000000 0x1
0x603: V533 = AND 0xffffffffffffffffffffffffffffffffffffffff V527
0x605: JUMP 0x1e6
---
Entry stack: [V12, 0x1e6]
Stack pops: 1
Stack additions: [S0, V533]
Exit stack: [V12, 0x1e6, V533]

================================

Block 0x606
[0x606:0x61c]
---
Predecessors: [0x20a]
Successors: [0x61d, 0x621]
---
0x606 JUMPDEST
0x607 PUSH1 0x0
0x609 SLOAD
0x60a CALLER
0x60b PUSH1 0x1
0x60d PUSH1 0xa0
0x60f PUSH1 0x2
0x611 EXP
0x612 SUB
0x613 SWAP1
0x614 DUP2
0x615 AND
0x616 SWAP2
0x617 AND
0x618 EQ
0x619 PUSH2 0x621
0x61c JUMPI
---
0x606: JUMPDEST 
0x607: V534 = 0x0
0x609: V535 = S[0x0]
0x60a: V536 = CALLER
0x60b: V537 = 0x1
0x60d: V538 = 0xa0
0x60f: V539 = 0x2
0x611: V540 = EXP 0x2 0xa0
0x612: V541 = SUB 0x10000000000000000000000000000000000000000 0x1
0x615: V542 = AND 0xffffffffffffffffffffffffffffffffffffffff V536
0x617: V543 = AND V535 0xffffffffffffffffffffffffffffffffffffffff
0x618: V544 = EQ V543 V542
0x619: V545 = 0x621
0x61c: JUMPI 0x621 V544
---
Entry stack: [V12, 0xc6, V208, V188, V212]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc6, V208, V188, V212]

================================

Block 0x61d
[0x61d:0x620]
---
Predecessors: [0x606]
Successors: [0x6ab]
---
0x61d PUSH2 0x6ab
0x620 JUMP
---
0x61d: V546 = 0x6ab
0x620: JUMP 0x6ab
---
Entry stack: [V12, 0xc6, V208, V188, V212]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc6, V208, V188, V212]

================================

Block 0x621
[0x621:0x644]
---
Predecessors: [0x606]
Successors: [0x645, 0x665]
---
0x621 JUMPDEST
0x622 DUP3
0x623 PUSH1 0x1
0x625 PUSH1 0xa0
0x627 PUSH1 0x2
0x629 EXP
0x62a SUB
0x62b AND
0x62c DUP2
0x62d DUP4
0x62e PUSH1 0x40
0x630 MLOAD
0x631 DUP1
0x632 DUP3
0x633 DUP1
0x634 MLOAD
0x635 SWAP1
0x636 PUSH1 0x20
0x638 ADD
0x639 SWAP1
0x63a DUP1
0x63b DUP4
0x63c DUP4
0x63d PUSH1 0x0
0x63f DUP4
0x640 EQ
0x641 PUSH2 0x665
0x644 JUMPI
---
0x621: JUMPDEST 
0x623: V547 = 0x1
0x625: V548 = 0xa0
0x627: V549 = 0x2
0x629: V550 = EXP 0x2 0xa0
0x62a: V551 = SUB 0x10000000000000000000000000000000000000000 0x1
0x62b: V552 = AND 0xffffffffffffffffffffffffffffffffffffffff V208
0x62e: V553 = 0x40
0x630: V554 = M[0x40]
0x634: V555 = M[V188]
0x636: V556 = 0x20
0x638: V557 = ADD 0x20 V188
0x63d: V558 = 0x0
0x640: V559 = EQ V555 0x0
0x641: V560 = 0x665
0x644: JUMPI 0x665 V559
---
Entry stack: [V12, 0xc6, V208, V188, V212]
Stack pops: 3
Stack additions: [S2, S1, S0, V552, S0, S1, V554, V554, V557, V555, V555, V554, V557]
Exit stack: [V12, 0xc6, V208, V188, V212, V552, V212, V188, V554, V554, V557, V555, V555, V554, V557]

================================

Block 0x645
[0x645:0x652]
---
Predecessors: [0x621, 0x653]
Successors: [0x653, 0x665]
---
0x645 JUMPDEST
0x646 DUP1
0x647 MLOAD
0x648 DUP3
0x649 MSTORE
0x64a PUSH1 0x20
0x64c DUP4
0x64d GT
0x64e ISZERO
0x64f PUSH2 0x665
0x652 JUMPI
---
0x645: JUMPDEST 
0x647: V561 = M[S0]
0x649: M[S1] = V561
0x64a: V562 = 0x20
0x64d: V563 = GT S2 0x20
0x64e: V564 = ISZERO V563
0x64f: V565 = 0x665
0x652: JUMPI 0x665 V564
---
Entry stack: [V12, 0xc6, V208, V188, V212, V552, V212, V188, V554, V554, V557, V555, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0xc6, V208, V188, V212, V552, V212, V188, V554, V554, V557, V555, S2, S1, S0]

================================

Block 0x653
[0x653:0x664]
---
Predecessors: [0x645]
Successors: [0x645]
---
0x653 PUSH1 0x1f
0x655 NOT
0x656 SWAP1
0x657 SWAP3
0x658 ADD
0x659 SWAP2
0x65a PUSH1 0x20
0x65c SWAP2
0x65d DUP3
0x65e ADD
0x65f SWAP2
0x660 ADD
0x661 PUSH2 0x645
0x664 JUMP
---
0x653: V566 = 0x1f
0x655: V567 = NOT 0x1f
0x658: V568 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x65a: V569 = 0x20
0x65e: V570 = ADD 0x20 S1
0x660: V571 = ADD 0x20 S0
0x661: V572 = 0x645
0x664: JUMP 0x645
---
Entry stack: [V12, 0xc6, V208, V188, V212, V552, V212, V188, V554, V554, V557, V555, S2, S1, S0]
Stack pops: 3
Stack additions: [V568, V570, V571]
Exit stack: [V12, 0xc6, V208, V188, V212, V552, V212, V188, V554, V554, V557, V555, V568, V570, V571]

================================

Block 0x665
[0x665:0x677]
---
Predecessors: [0x621, 0x645]
Successors: [0x678, 0x691]
---
0x665 JUMPDEST
0x666 POP
0x667 POP
0x668 POP
0x669 SWAP1
0x66a POP
0x66b SWAP1
0x66c DUP2
0x66d ADD
0x66e SWAP1
0x66f PUSH1 0x1f
0x671 AND
0x672 DUP1
0x673 ISZERO
0x674 PUSH2 0x691
0x677 JUMPI
---
0x665: JUMPDEST 
0x66d: V573 = ADD V555 V554
0x66f: V574 = 0x1f
0x671: V575 = AND 0x1f V555
0x673: V576 = ISZERO V575
0x674: V577 = 0x691
0x677: JUMPI 0x691 V576
---
Entry stack: [V12, 0xc6, V208, V188, V212, V552, V212, V188, V554, V554, V557, V555, S2, S1, S0]
Stack pops: 6
Stack additions: [V573, V575]
Exit stack: [V12, 0xc6, V208, V188, V212, V552, V212, V188, V554, V573, V575]

================================

Block 0x678
[0x678:0x690]
---
Predecessors: [0x665]
Successors: [0x691]
---
0x678 DUP1
0x679 DUP3
0x67a SUB
0x67b DUP1
0x67c MLOAD
0x67d PUSH1 0x1
0x67f DUP4
0x680 PUSH1 0x20
0x682 SUB
0x683 PUSH2 0x100
0x686 EXP
0x687 SUB
0x688 NOT
0x689 AND
0x68a DUP2
0x68b MSTORE
0x68c PUSH1 0x20
0x68e ADD
0x68f SWAP2
0x690 POP
---
0x67a: V578 = SUB V573 V575
0x67c: V579 = M[V578]
0x67d: V580 = 0x1
0x680: V581 = 0x20
0x682: V582 = SUB 0x20 V575
0x683: V583 = 0x100
0x686: V584 = EXP 0x100 V582
0x687: V585 = SUB V584 0x1
0x688: V586 = NOT V585
0x689: V587 = AND V586 V579
0x68b: M[V578] = V587
0x68c: V588 = 0x20
0x68e: V589 = ADD 0x20 V578
---
Entry stack: [V12, 0xc6, V208, V188, V212, V552, V212, V188, V554, V573, V575]
Stack pops: 2
Stack additions: [V589, S0]
Exit stack: [V12, 0xc6, V208, V188, V212, V552, V212, V188, V554, V589, V575]

================================

Block 0x691
[0x691:0x6aa]
---
Predecessors: [0x665, 0x678]
Successors: [0x6ab]
---
0x691 JUMPDEST
0x692 POP
0x693 SWAP2
0x694 POP
0x695 POP
0x696 PUSH1 0x0
0x698 PUSH1 0x40
0x69a MLOAD
0x69b DUP1
0x69c DUP4
0x69d SUB
0x69e DUP2
0x69f DUP6
0x6a0 DUP8
0x6a1 PUSH2 0x8502
0x6a4 GAS
0x6a5 SUB
0x6a6 CALL
0x6a7 POP
0x6a8 POP
0x6a9 POP
0x6aa POP
---
0x691: JUMPDEST 
0x696: V590 = 0x0
0x698: V591 = 0x40
0x69a: V592 = M[0x40]
0x69d: V593 = SUB S1 V592
0x6a1: V594 = 0x8502
0x6a4: V595 = GAS
0x6a5: V596 = SUB V595 0x8502
0x6a6: V597 = CALL V596 V552 V212 V592 V593 V592 0x0
---
Entry stack: [V12, 0xc6, V208, V188, V212, V552, V212, V188, V554, S1, V575]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xc6, V208, V188, V212]

================================

Block 0x6ab
[0x6ab:0x6af]
---
Predecessors: [0x61d, 0x691]
Successors: [0xc6]
---
0x6ab JUMPDEST
0x6ac POP
0x6ad POP
0x6ae POP
0x6af JUMP
---
0x6ab: JUMPDEST 
0x6af: JUMP 0xc6
---
Entry stack: [V12, 0xc6, V208, V188, V212]
Stack pops: 4
Stack additions: []
Exit stack: [V12]

================================

Block 0x6b0
[0x6b0:0x6b4]
---
Predecessors: [0x26e, 0x2e7]
Successors: [0x6b5]
---
0x6b0 JUMPDEST
0x6b1 PUSH1 0x0
0x6b3 DUP1
0x6b4 DUP1
---
0x6b0: JUMPDEST 
0x6b1: V598 = 0x0
---
Entry stack: [V12, 0xc6, V63, V65, V67, V69, V262, 0x0, S1, {0x276, 0x2fe}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V12, 0xc6, V63, V65, V67, V69, V262, 0x0, S1, {0x276, 0x2fe}, 0x0, 0x0, 0x0]

================================

Block 0x6b5
[0x6b5:0x6be]
---
Predecessors: [0x6b0, 0x6d2]
Successors: [0x6bf, 0x6da]
---
0x6b5 JUMPDEST
0x6b6 PUSH1 0x6
0x6b8 DUP2
0x6b9 LT
0x6ba ISZERO
0x6bb PUSH2 0x6da
0x6be JUMPI
---
0x6b5: JUMPDEST 
0x6b6: V599 = 0x6
0x6b9: V600 = LT S0 0x6
0x6ba: V601 = ISZERO V600
0x6bb: V602 = 0x6da
0x6be: JUMPI 0x6da V601
---
Entry stack: [V12, 0xc6, V63, V65, V67, V69, V262, 0x0, S4, {0x276, 0x2fe}, 0x0, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xc6, V63, V65, V67, V69, V262, 0x0, S4, {0x276, 0x2fe}, 0x0, S1, S0]

================================

Block 0x6bf
[0x6bf:0x6c9]
---
Predecessors: [0x6b5]
Successors: [0x3de]
---
0x6bf PUSH2 0x6ca
0x6c2 PUSH1 0x20
0x6c4 DUP3
0x6c5 ADDRESS
0x6c6 PUSH2 0x3de
0x6c9 JUMP
---
0x6bf: V603 = 0x6ca
0x6c2: V604 = 0x20
0x6c5: V605 = ADDRESS
0x6c6: V606 = 0x3de
0x6c9: JUMP 0x3de
---
Entry stack: [V12, 0xc6, V63, V65, V67, V69, V262, 0x0, S4, {0x276, 0x2fe}, 0x0, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x6ca, 0x20, S0, V605]
Exit stack: [V12, 0xc6, V63, V65, V67, V69, V262, 0x0, S4, {0x276, 0x2fe}, 0x0, S1, S0, 0x6ca, 0x20, S0, V605]

================================

Block 0x6ca
[0x6ca:0x6d1]
---
Predecessors: [0x433]
Successors: [0x6d2]
---
0x6ca JUMPDEST
0x6cb PUSH1 0xff
0x6cd AND
0x6ce DUP3
0x6cf ADD
0x6d0 SWAP2
0x6d1 POP
---
0x6ca: JUMPDEST 
0x6cb: V607 = 0xff
0x6cd: V608 = AND 0xff S0
0x6cf: V609 = ADD S2 V608
---
Entry stack: [V12, 0xc6, V63, V65, V67, V69, V262, 0x0, S5, {0x276, 0x2fe}, 0x0, S2, S1, S0]
Stack pops: 3
Stack additions: [V609, S1]
Exit stack: [V12, 0xc6, V63, V65, V67, V69, V262, 0x0, S5, {0x276, 0x2fe}, 0x0, V609, S1]

================================

Block 0x6d2
[0x6d2:0x6d9]
---
Predecessors: [0x6ca]
Successors: [0x6b5]
---
0x6d2 JUMPDEST
0x6d3 PUSH1 0x1
0x6d5 ADD
0x6d6 PUSH2 0x6b5
0x6d9 JUMP
---
0x6d2: JUMPDEST 
0x6d3: V610 = 0x1
0x6d5: V611 = ADD 0x1 S0
0x6d6: V612 = 0x6b5
0x6d9: JUMP 0x6b5
---
Entry stack: [V12, 0xc6, V63, V65, V67, V69, V262, 0x0, S4, {0x276, 0x2fe}, 0x0, V609, S0]
Stack pops: 1
Stack additions: [V611]
Exit stack: [V12, 0xc6, V63, V65, V67, V69, V262, 0x0, S4, {0x276, 0x2fe}, 0x0, V609, V611]

================================

Block 0x6da
[0x6da:0x6dd]
---
Predecessors: [0x6b5]
Successors: [0x6de]
---
0x6da JUMPDEST
0x6db DUP2
0x6dc SWAP3
0x6dd POP
---
0x6da: JUMPDEST 
---
Entry stack: [V12, 0xc6, V63, V65, V67, V69, V262, 0x0, S4, {0x276, 0x2fe}, 0x0, S1, S0]
Stack pops: 3
Stack additions: [S1, S1, S0]
Exit stack: [V12, 0xc6, V63, V65, V67, V69, V262, 0x0, S4, {0x276, 0x2fe}, S1, S1, S0]

================================

Block 0x6de
[0x6de:0x6e2]
---
Predecessors: [0x6da]
Successors: [0x276, 0x2fe]
---
0x6de JUMPDEST
0x6df POP
0x6e0 POP
0x6e1 SWAP1
0x6e2 JUMP
---
0x6de: JUMPDEST 
0x6e2: JUMP {0x276, 0x2fe}
---
Entry stack: [V12, 0xc6, V63, V65, V67, V69, V262, 0x0, S4, {0x276, 0x2fe}, S2, S1, S0]
Stack pops: 4
Stack additions: [S2]
Exit stack: [V12, 0xc6, V63, V65, V67, V69, V262, 0x0, S4, S2]

================================

Block 0x6e3
[0x6e3:0x75a]
---
Predecessors: [0x290]
Successors: [0x75b, 0x75c]
---
0x6e3 JUMPDEST
0x6e4 PUSH1 0x3
0x6e6 SLOAD
0x6e7 PUSH1 0x2
0x6e9 SLOAD
0x6ea PUSH1 0x0
0x6ec DUP1
0x6ed SLOAD
0x6ee PUSH1 0x40
0x6f0 DUP1
0x6f1 MLOAD
0x6f2 PUSH1 0x20
0x6f4 SWAP1
0x6f5 DUP2
0x6f6 ADD
0x6f7 DUP5
0x6f8 SWAP1
0x6f9 MSTORE
0x6fa DUP2
0x6fb MLOAD
0x6fc PUSH32 0x47c17bac00000000000000000000000000000000000000000000000000000000
0x71d DUP2
0x71e MSTORE
0x71f PUSH1 0x1
0x721 PUSH1 0xa0
0x723 PUSH1 0x2
0x725 EXP
0x726 SUB
0x727 SWAP4
0x728 DUP5
0x729 AND
0x72a PUSH1 0x4
0x72c DUP3
0x72d ADD
0x72e MSTORE
0x72f SWAP2
0x730 MLOAD
0x731 SWAP6
0x732 DUP4
0x733 AND
0x734 SWAP6
0x735 SWAP3
0x736 SWAP1
0x737 SWAP5
0x738 AND
0x739 SWAP4
0x73a DUP4
0x73b SWAP3
0x73c DUP4
0x73d SWAP3
0x73e DUP8
0x73f SWAP3
0x740 PUSH4 0x47c17bac
0x745 SWAP3
0x746 PUSH1 0x24
0x748 DUP1
0x749 DUP5
0x74a ADD
0x74b SWAP4
0x74c DUP3
0x74d SWAP1
0x74e SUB
0x74f ADD
0x750 DUP2
0x751 DUP8
0x752 DUP8
0x753 DUP1
0x754 EXTCODESIZE
0x755 ISZERO
0x756 ISZERO
0x757 PUSH2 0x75c
0x75a JUMPI
---
0x6e3: JUMPDEST 
0x6e4: V613 = 0x3
0x6e6: V614 = S[0x3]
0x6e7: V615 = 0x2
0x6e9: V616 = S[0x2]
0x6ea: V617 = 0x0
0x6ed: V618 = S[0x0]
0x6ee: V619 = 0x40
0x6f1: V620 = M[0x40]
0x6f2: V621 = 0x20
0x6f6: V622 = ADD 0x20 V620
0x6f9: M[V622] = 0x0
0x6fb: V623 = M[0x40]
0x6fc: V624 = 0x47c17bac00000000000000000000000000000000000000000000000000000000
0x71e: M[V623] = 0x47c17bac00000000000000000000000000000000000000000000000000000000
0x71f: V625 = 0x1
0x721: V626 = 0xa0
0x723: V627 = 0x2
0x725: V628 = EXP 0x2 0xa0
0x726: V629 = SUB 0x10000000000000000000000000000000000000000 0x1
0x729: V630 = AND 0xffffffffffffffffffffffffffffffffffffffff V618
0x72a: V631 = 0x4
0x72d: V632 = ADD V623 0x4
0x72e: M[V632] = V630
0x730: V633 = M[0x40]
0x733: V634 = AND 0xffffffffffffffffffffffffffffffffffffffff V614
0x738: V635 = AND V616 0xffffffffffffffffffffffffffffffffffffffff
0x740: V636 = 0x47c17bac
0x746: V637 = 0x24
0x74a: V638 = ADD V623 0x24
0x74e: V639 = SUB V623 V633
0x74f: V640 = ADD V639 0x24
0x754: V641 = EXTCODESIZE V634
0x755: V642 = ISZERO V641
0x756: V643 = ISZERO V642
0x757: V644 = 0x75c
0x75a: JUMPI 0x75c V643
---
Entry stack: [V12, 0xc6]
Stack pops: 0
Stack additions: [V634, V635, 0x0, 0x0, 0x0, V634, 0x47c17bac, V638, 0x20, V633, V640, V633, 0x0, V634]
Exit stack: [V12, 0xc6, V634, V635, 0x0, 0x0, 0x0, V634, 0x47c17bac, V638, 0x20, V633, V640, V633, 0x0, V634]

================================

Block 0x75b
[0x75b:0x75b]
---
Predecessors: [0x6e3]
Successors: []
---
0x75b INVALID
---
0x75b: INVALID 
---
Entry stack: [V12, 0xc6, V634, V635, 0x0, 0x0, 0x0, V634, 0x47c17bac, V638, 0x20, V633, V640, V633, 0x0, V634]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc6, V634, V635, 0x0, 0x0, 0x0, V634, 0x47c17bac, V638, 0x20, V633, V640, V633, 0x0, V634]

================================

Block 0x75c
[0x75c:0x767]
---
Predecessors: [0x6e3]
Successors: [0x768, 0x769]
---
0x75c JUMPDEST
0x75d PUSH1 0x32
0x75f GAS
0x760 SUB
0x761 CALL
0x762 ISZERO
0x763 ISZERO
0x764 PUSH2 0x769
0x767 JUMPI
---
0x75c: JUMPDEST 
0x75d: V645 = 0x32
0x75f: V646 = GAS
0x760: V647 = SUB V646 0x32
0x761: V648 = CALL V647 V634 0x0 V633 V640 V633 0x20
0x762: V649 = ISZERO V648
0x763: V650 = ISZERO V649
0x764: V651 = 0x769
0x767: JUMPI 0x769 V650
---
Entry stack: [V12, 0xc6, V634, V635, 0x0, 0x0, 0x0, V634, 0x47c17bac, V638, 0x20, V633, V640, V633, 0x0, V634]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xc6, V634, V635, 0x0, 0x0, 0x0, V634, 0x47c17bac, V638]

================================

Block 0x768
[0x768:0x768]
---
Predecessors: [0x75c]
Successors: []
---
0x768 INVALID
---
0x768: INVALID 
---
Entry stack: [V12, 0xc6, V634, V635, 0x0, 0x0, 0x0, V634, 0x47c17bac, V638]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc6, V634, V635, 0x0, 0x0, 0x0, V634, 0x47c17bac, V638]

================================

Block 0x769
[0x769:0x779]
---
Predecessors: [0x75c]
Successors: [0x77a]
---
0x769 JUMPDEST
0x76a POP
0x76b POP
0x76c PUSH1 0x40
0x76e MLOAD
0x76f MLOAD
0x770 SWAP4
0x771 POP
0x772 POP
0x773 PUSH1 0x0
0x775 NOT
0x776 DUP4
0x777 ADD
0x778 SWAP2
0x779 POP
---
0x769: JUMPDEST 
0x76c: V652 = 0x40
0x76e: V653 = M[0x40]
0x76f: V654 = M[V653]
0x773: V655 = 0x0
0x775: V656 = NOT 0x0
0x777: V657 = ADD V654 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
---
Entry stack: [V12, 0xc6, V634, V635, 0x0, 0x0, 0x0, V634, 0x47c17bac, V638]
Stack pops: 6
Stack additions: [V654, V657, S3]
Exit stack: [V12, 0xc6, V634, V635, V654, V657, 0x0]

================================

Block 0x77a
[0x77a:0x783]
---
Predecessors: [0x769, 0x877]
Successors: [0x4ce, 0x784]
---
0x77a JUMPDEST
0x77b PUSH1 0x0
0x77d DUP3
0x77e GT
0x77f ISZERO
0x780 PUSH2 0x4ce
0x783 JUMPI
---
0x77a: JUMPDEST 
0x77b: V658 = 0x0
0x77e: V659 = GT S1 0x0
0x77f: V660 = ISZERO V659
0x780: V661 = 0x4ce
0x783: JUMPI 0x4ce V660
---
Entry stack: [V12, 0xc6, V634, V635, V654, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0xc6, V634, V635, V654, S1, S0]

================================

Block 0x784
[0x784:0x7f4]
---
Predecessors: [0x77a]
Successors: [0x7f5, 0x7f6]
---
0x784 PUSH1 0x0
0x786 DUP1
0x787 SLOAD
0x788 PUSH1 0x40
0x78a DUP1
0x78b MLOAD
0x78c PUSH1 0x20
0x78e SWAP1
0x78f DUP2
0x790 ADD
0x791 DUP5
0x792 SWAP1
0x793 MSTORE
0x794 DUP2
0x795 MLOAD
0x796 PUSH32 0x75fe2e3300000000000000000000000000000000000000000000000000000000
0x7b7 DUP2
0x7b8 MSTORE
0x7b9 PUSH1 0x1
0x7bb PUSH1 0xa0
0x7bd PUSH1 0x2
0x7bf EXP
0x7c0 SUB
0x7c1 SWAP4
0x7c2 DUP5
0x7c3 AND
0x7c4 PUSH1 0x4
0x7c6 DUP3
0x7c7 ADD
0x7c8 MSTORE
0x7c9 PUSH1 0x24
0x7cb DUP2
0x7cc ADD
0x7cd DUP8
0x7ce SWAP1
0x7cf MSTORE
0x7d0 SWAP2
0x7d1 MLOAD
0x7d2 SWAP3
0x7d3 DUP10
0x7d4 AND
0x7d5 SWAP4
0x7d6 PUSH4 0x75fe2e33
0x7db SWAP4
0x7dc PUSH1 0x44
0x7de DUP1
0x7df DUP6
0x7e0 ADD
0x7e1 SWAP5
0x7e2 SWAP2
0x7e3 SWAP3
0x7e4 SWAP2
0x7e5 DUP4
0x7e6 SWAP1
0x7e7 SUB
0x7e8 ADD
0x7e9 SWAP1
0x7ea DUP3
0x7eb SWAP1
0x7ec DUP8
0x7ed DUP1
0x7ee EXTCODESIZE
0x7ef ISZERO
0x7f0 ISZERO
0x7f1 PUSH2 0x7f6
0x7f4 JUMPI
---
0x784: V662 = 0x0
0x787: V663 = S[0x0]
0x788: V664 = 0x40
0x78b: V665 = M[0x40]
0x78c: V666 = 0x20
0x790: V667 = ADD 0x20 V665
0x793: M[V667] = 0x0
0x795: V668 = M[0x40]
0x796: V669 = 0x75fe2e3300000000000000000000000000000000000000000000000000000000
0x7b8: M[V668] = 0x75fe2e3300000000000000000000000000000000000000000000000000000000
0x7b9: V670 = 0x1
0x7bb: V671 = 0xa0
0x7bd: V672 = 0x2
0x7bf: V673 = EXP 0x2 0xa0
0x7c0: V674 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7c3: V675 = AND 0xffffffffffffffffffffffffffffffffffffffff V663
0x7c4: V676 = 0x4
0x7c7: V677 = ADD V668 0x4
0x7c8: M[V677] = V675
0x7c9: V678 = 0x24
0x7cc: V679 = ADD V668 0x24
0x7cf: M[V679] = S1
0x7d1: V680 = M[0x40]
0x7d4: V681 = AND V634 0xffffffffffffffffffffffffffffffffffffffff
0x7d6: V682 = 0x75fe2e33
0x7dc: V683 = 0x44
0x7e0: V684 = ADD V668 0x44
0x7e7: V685 = SUB V668 V680
0x7e8: V686 = ADD V685 0x44
0x7ee: V687 = EXTCODESIZE V681
0x7ef: V688 = ISZERO V687
0x7f0: V689 = ISZERO V688
0x7f1: V690 = 0x7f6
0x7f4: JUMPI 0x7f6 V689
---
Entry stack: [V12, 0xc6, V634, V635, V654, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V681, 0x75fe2e33, V684, 0x20, V680, V686, V680, 0x0, V681]
Exit stack: [V12, 0xc6, V634, V635, V654, S1, S0, V681, 0x75fe2e33, V684, 0x20, V680, V686, V680, 0x0, V681]

================================

Block 0x7f5
[0x7f5:0x7f5]
---
Predecessors: [0x784]
Successors: []
---
0x7f5 INVALID
---
0x7f5: INVALID 
---
Entry stack: [V12, 0xc6, V634, V635, V654, S10, S9, V681, 0x75fe2e33, V684, 0x20, V680, V686, V680, 0x0, V681]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc6, V634, V635, V654, S10, S9, V681, 0x75fe2e33, V684, 0x20, V680, V686, V680, 0x0, V681]

================================

Block 0x7f6
[0x7f6:0x801]
---
Predecessors: [0x784]
Successors: [0x802, 0x803]
---
0x7f6 JUMPDEST
0x7f7 PUSH1 0x32
0x7f9 GAS
0x7fa SUB
0x7fb CALL
0x7fc ISZERO
0x7fd ISZERO
0x7fe PUSH2 0x803
0x801 JUMPI
---
0x7f6: JUMPDEST 
0x7f7: V691 = 0x32
0x7f9: V692 = GAS
0x7fa: V693 = SUB V692 0x32
0x7fb: V694 = CALL V693 V681 0x0 V680 V686 V680 0x20
0x7fc: V695 = ISZERO V694
0x7fd: V696 = ISZERO V695
0x7fe: V697 = 0x803
0x801: JUMPI 0x803 V696
---
Entry stack: [V12, 0xc6, V634, V635, V654, S10, S9, V681, 0x75fe2e33, V684, 0x20, V680, V686, V680, 0x0, V681]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xc6, V634, V635, V654, S10, S9, V681, 0x75fe2e33, V684]

================================

Block 0x802
[0x802:0x802]
---
Predecessors: [0x7f6]
Successors: []
---
0x802 INVALID
---
0x802: INVALID 
---
Entry stack: [V12, 0xc6, V634, V635, V654, S4, S3, V681, 0x75fe2e33, V684]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc6, V634, V635, V654, S4, S3, V681, 0x75fe2e33, V684]

================================

Block 0x803
[0x803:0x864]
---
Predecessors: [0x7f6]
Successors: [0x865, 0x866]
---
0x803 JUMPDEST
0x804 POP
0x805 POP
0x806 PUSH1 0x40
0x808 DUP1
0x809 MLOAD
0x80a DUP1
0x80b MLOAD
0x80c PUSH1 0x0
0x80e DUP1
0x80f SLOAD
0x810 PUSH1 0xe0
0x812 PUSH1 0x2
0x814 EXP
0x815 PUSH4 0x6228e95
0x81a MUL
0x81b DUP5
0x81c MSTORE
0x81d PUSH8 0xffffffffffffffff
0x826 DUP4
0x827 AND
0x828 PUSH1 0x4
0x82a DUP6
0x82b ADD
0x82c MSTORE
0x82d PUSH1 0x1
0x82f PUSH1 0xa0
0x831 PUSH1 0x2
0x833 EXP
0x834 SUB
0x835 SWAP1
0x836 DUP2
0x837 AND
0x838 PUSH1 0x24
0x83a DUP6
0x83b ADD
0x83c MSTORE
0x83d SWAP4
0x83e MLOAD
0x83f SWAP2
0x840 SWAP6
0x841 POP
0x842 SWAP3
0x843 DUP9
0x844 AND
0x845 SWAP4
0x846 POP
0x847 PUSH4 0x6228e95
0x84c SWAP3
0x84d PUSH1 0x44
0x84f DUP1
0x850 DUP5
0x851 ADD
0x852 SWAP4
0x853 SWAP2
0x854 SWAP3
0x855 SWAP2
0x856 DUP3
0x857 SWAP1
0x858 SUB
0x859 ADD
0x85a DUP2
0x85b DUP4
0x85c DUP8
0x85d DUP1
0x85e EXTCODESIZE
0x85f ISZERO
0x860 ISZERO
0x861 PUSH2 0x866
0x864 JUMPI
---
0x803: JUMPDEST 
0x806: V698 = 0x40
0x809: V699 = M[0x40]
0x80b: V700 = M[V699]
0x80c: V701 = 0x0
0x80f: V702 = S[0x0]
0x810: V703 = 0xe0
0x812: V704 = 0x2
0x814: V705 = EXP 0x2 0xe0
0x815: V706 = 0x6228e95
0x81a: V707 = MUL 0x6228e95 0x100000000000000000000000000000000000000000000000000000000
0x81c: M[V699] = 0x6228e9500000000000000000000000000000000000000000000000000000000
0x81d: V708 = 0xffffffffffffffff
0x827: V709 = AND V700 0xffffffffffffffff
0x828: V710 = 0x4
0x82b: V711 = ADD V699 0x4
0x82c: M[V711] = V709
0x82d: V712 = 0x1
0x82f: V713 = 0xa0
0x831: V714 = 0x2
0x833: V715 = EXP 0x2 0xa0
0x834: V716 = SUB 0x10000000000000000000000000000000000000000 0x1
0x837: V717 = AND 0xffffffffffffffffffffffffffffffffffffffff V702
0x838: V718 = 0x24
0x83b: V719 = ADD V699 0x24
0x83c: M[V719] = V717
0x83e: V720 = M[0x40]
0x844: V721 = AND V635 0xffffffffffffffffffffffffffffffffffffffff
0x847: V722 = 0x6228e95
0x84d: V723 = 0x44
0x851: V724 = ADD V699 0x44
0x858: V725 = SUB V699 V720
0x859: V726 = ADD V725 0x44
0x85e: V727 = EXTCODESIZE V721
0x85f: V728 = ISZERO V727
0x860: V729 = ISZERO V728
0x861: V730 = 0x866
0x864: JUMPI 0x866 V729
---
Entry stack: [V12, 0xc6, V634, V635, V654, S4, S3, V681, 0x75fe2e33, V684]
Stack pops: 7
Stack additions: [S6, S5, S4, V700, V721, 0x6228e95, V724, 0x0, V720, V726, V720, 0x0, V721]
Exit stack: [V12, 0xc6, V634, V635, V654, S4, V700, V721, 0x6228e95, V724, 0x0, V720, V726, V720, 0x0, V721]

================================

Block 0x865
[0x865:0x865]
---
Predecessors: [0x803]
Successors: []
---
0x865 INVALID
---
0x865: INVALID 
---
Entry stack: [V12, 0xc6, V634, V635, V654, S10, V700, V721, 0x6228e95, V724, 0x0, V720, V726, V720, 0x0, V721]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc6, V634, V635, V654, S10, V700, V721, 0x6228e95, V724, 0x0, V720, V726, V720, 0x0, V721]

================================

Block 0x866
[0x866:0x871]
---
Predecessors: [0x803]
Successors: [0x872, 0x873]
---
0x866 JUMPDEST
0x867 PUSH1 0x32
0x869 GAS
0x86a SUB
0x86b CALL
0x86c ISZERO
0x86d ISZERO
0x86e PUSH2 0x873
0x871 JUMPI
---
0x866: JUMPDEST 
0x867: V731 = 0x32
0x869: V732 = GAS
0x86a: V733 = SUB V732 0x32
0x86b: V734 = CALL V733 V721 0x0 V720 V726 V720 0x0
0x86c: V735 = ISZERO V734
0x86d: V736 = ISZERO V735
0x86e: V737 = 0x873
0x871: JUMPI 0x873 V736
---
Entry stack: [V12, 0xc6, V634, V635, V654, S10, V700, V721, 0x6228e95, V724, 0x0, V720, V726, V720, 0x0, V721]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xc6, V634, V635, V654, S10, V700, V721, 0x6228e95, V724]

================================

Block 0x872
[0x872:0x872]
---
Predecessors: [0x866]
Successors: []
---
0x872 INVALID
---
0x872: INVALID 
---
Entry stack: [V12, 0xc6, V634, V635, V654, S4, V700, V721, 0x6228e95, V724]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc6, V634, V635, V654, S4, V700, V721, 0x6228e95, V724]

================================

Block 0x873
[0x873:0x876]
---
Predecessors: [0x866]
Successors: [0x877]
---
0x873 JUMPDEST
0x874 POP
0x875 POP
0x876 POP
---
0x873: JUMPDEST 
---
Entry stack: [V12, 0xc6, V634, V635, V654, S4, V700, V721, 0x6228e95, V724]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0xc6, V634, V635, V654, S4, V700]

================================

Block 0x877
[0x877:0x882]
---
Predecessors: [0x873]
Successors: [0x77a]
---
0x877 JUMPDEST
0x878 PUSH1 0x0
0x87a NOT
0x87b SWAP1
0x87c SWAP2
0x87d ADD
0x87e SWAP1
0x87f PUSH2 0x77a
0x882 JUMP
---
0x877: JUMPDEST 
0x878: V738 = 0x0
0x87a: V739 = NOT 0x0
0x87d: V740 = ADD S1 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x87f: V741 = 0x77a
0x882: JUMP 0x77a
---
Entry stack: [V12, 0xc6, V634, V635, V654, S1, V700]
Stack pops: 2
Stack additions: [V740, S0]
Exit stack: [V12, 0xc6, V634, V635, V654, V740, V700]

================================

Block 0x883
[0x883:0x883]
---
Predecessors: []
Successors: [0x884]
---
0x883 JUMPDEST
---
0x883: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x884
[0x884:0x88a]
---
Predecessors: [0x883]
Successors: []
Has unresolved jump.
---
0x884 JUMPDEST
0x885 POP
0x886 POP
0x887 POP
0x888 POP
0x889 POP
0x88a JUMP
---
0x884: JUMPDEST 
0x88a: JUMP S5
---
Entry stack: []
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0x88b
[0x88b:0x898]
---
Predecessors: [0x2a2]
Successors: []
---
0x88b JUMPDEST
0x88c PUSH1 0x0
0x88e SLOAD
0x88f PUSH1 0x1
0x891 PUSH1 0xa0
0x893 PUSH1 0x2
0x895 EXP
0x896 SUB
0x897 AND
0x898 SELFDESTRUCT
---
0x88b: JUMPDEST 
0x88c: V742 = 0x0
0x88e: V743 = S[0x0]
0x88f: V744 = 0x1
0x891: V745 = 0xa0
0x893: V746 = 0x2
0x895: V747 = EXP 0x2 0xa0
0x896: V748 = SUB 0x10000000000000000000000000000000000000000 0x1
0x897: V749 = AND 0xffffffffffffffffffffffffffffffffffffffff V743
0x898: SELFDESTRUCT V749
---
Entry stack: [V12, 0xc6]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc6]

================================

Block 0x899
[0x899:0x89a]
---
Predecessors: []
Successors: []
Has unresolved jump.
---
0x899 JUMPDEST
0x89a JUMP
---
0x899: JUMPDEST 
0x89a: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x89b
[0x89b:0x89f]
---
Predecessors: [0x2b4]
Successors: [0x10c]
---
0x89b JUMPDEST
0x89c PUSH1 0x6
0x89e DUP2
0x89f JUMP
---
0x89b: JUMPDEST 
0x89c: V750 = 0x6
0x89f: JUMP 0x10c
---
Entry stack: [V12, 0x10c]
Stack pops: 1
Stack additions: [S0, 0x6]
Exit stack: [V12, 0x10c, 0x6]

================================

Block 0x8a0
[0x8a0:0x8a6]
---
Predecessors: [0x2da]
Successors: [0x8a7, 0x8db]
---
0x8a0 JUMPDEST
0x8a1 DUP1
0x8a2 ISZERO
0x8a3 PUSH2 0x8db
0x8a6 JUMPI
---
0x8a0: JUMPDEST 
0x8a2: V751 = ISZERO V253
0x8a3: V752 = 0x8db
0x8a6: JUMPI 0x8db V751
---
Entry stack: [V12, 0xc6, V253]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xc6, V253]

================================

Block 0x8a7
[0x8a7:0x8d4]
---
Predecessors: [0x8a0]
Successors: [0x8d5, 0x8d6]
---
0x8a7 PUSH1 0x0
0x8a9 DUP1
0x8aa SLOAD
0x8ab PUSH1 0x40
0x8ad MLOAD
0x8ae PUSH1 0x1
0x8b0 PUSH1 0xa0
0x8b2 PUSH1 0x2
0x8b4 EXP
0x8b5 SUB
0x8b6 SWAP1
0x8b7 SWAP2
0x8b8 AND
0x8b9 SWAP2
0x8ba DUP4
0x8bb ISZERO
0x8bc PUSH2 0x8fc
0x8bf MUL
0x8c0 SWAP2
0x8c1 DUP5
0x8c2 SWAP2
0x8c3 DUP2
0x8c4 DUP2
0x8c5 DUP2
0x8c6 DUP6
0x8c7 DUP9
0x8c8 DUP9
0x8c9 CALL
0x8ca SWAP4
0x8cb POP
0x8cc POP
0x8cd POP
0x8ce POP
0x8cf ISZERO
0x8d0 ISZERO
0x8d1 PUSH2 0x8d6
0x8d4 JUMPI
---
0x8a7: V753 = 0x0
0x8aa: V754 = S[0x0]
0x8ab: V755 = 0x40
0x8ad: V756 = M[0x40]
0x8ae: V757 = 0x1
0x8b0: V758 = 0xa0
0x8b2: V759 = 0x2
0x8b4: V760 = EXP 0x2 0xa0
0x8b5: V761 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8b8: V762 = AND V754 0xffffffffffffffffffffffffffffffffffffffff
0x8bb: V763 = ISZERO V253
0x8bc: V764 = 0x8fc
0x8bf: V765 = MUL 0x8fc V763
0x8c9: V766 = CALL V765 V762 V253 V756 0x0 V756 0x0
0x8cf: V767 = ISZERO V766
0x8d0: V768 = ISZERO V767
0x8d1: V769 = 0x8d6
0x8d4: JUMPI 0x8d6 V768
---
Entry stack: [V12, 0xc6, V253]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xc6, V253]

================================

Block 0x8d5
[0x8d5:0x8d5]
---
Predecessors: [0x8a7]
Successors: []
---
0x8d5 INVALID
---
0x8d5: INVALID 
---
Entry stack: [V12, 0xc6, V253]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc6, V253]

================================

Block 0x8d6
[0x8d6:0x8da]
---
Predecessors: [0x8a7]
Successors: [0x50d]
---
0x8d6 JUMPDEST
0x8d7 PUSH2 0x50d
0x8da JUMP
---
0x8d6: JUMPDEST 
0x8d7: V770 = 0x50d
0x8da: JUMP 0x50d
---
Entry stack: [V12, 0xc6, V253]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc6, V253]

================================

Block 0x8db
[0x8db:0x90f]
---
Predecessors: [0x8a0]
Successors: [0x50d, 0x910]
---
0x8db JUMPDEST
0x8dc PUSH1 0x0
0x8de DUP1
0x8df SLOAD
0x8e0 PUSH1 0x40
0x8e2 MLOAD
0x8e3 PUSH1 0x1
0x8e5 PUSH1 0xa0
0x8e7 PUSH1 0x2
0x8e9 EXP
0x8ea SUB
0x8eb SWAP2
0x8ec DUP3
0x8ed AND
0x8ee SWAP3
0x8ef ADDRESS
0x8f0 SWAP1
0x8f1 SWAP3
0x8f2 AND
0x8f3 BALANCE
0x8f4 DUP1
0x8f5 ISZERO
0x8f6 PUSH2 0x8fc
0x8f9 MUL
0x8fa SWAP3
0x8fb SWAP1
0x8fc SWAP2
0x8fd SWAP1
0x8fe DUP2
0x8ff DUP2
0x900 DUP2
0x901 DUP6
0x902 DUP9
0x903 DUP9
0x904 CALL
0x905 SWAP4
0x906 POP
0x907 POP
0x908 POP
0x909 POP
0x90a ISZERO
0x90b ISZERO
0x90c PUSH2 0x50d
0x90f JUMPI
---
0x8db: JUMPDEST 
0x8dc: V771 = 0x0
0x8df: V772 = S[0x0]
0x8e0: V773 = 0x40
0x8e2: V774 = M[0x40]
0x8e3: V775 = 0x1
0x8e5: V776 = 0xa0
0x8e7: V777 = 0x2
0x8e9: V778 = EXP 0x2 0xa0
0x8ea: V779 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8ed: V780 = AND 0xffffffffffffffffffffffffffffffffffffffff V772
0x8ef: V781 = ADDRESS
0x8f2: V782 = AND 0xffffffffffffffffffffffffffffffffffffffff V781
0x8f3: V783 = BALANCE V782
0x8f5: V784 = ISZERO V783
0x8f6: V785 = 0x8fc
0x8f9: V786 = MUL 0x8fc V784
0x904: V787 = CALL V786 V780 V783 V774 0x0 V774 0x0
0x90a: V788 = ISZERO V787
0x90b: V789 = ISZERO V788
0x90c: V790 = 0x50d
0x90f: JUMPI 0x50d V789
---
Entry stack: [V12, 0xc6, V253]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc6, V253]

================================

Block 0x910
[0x910:0x910]
---
Predecessors: [0x8db]
Successors: []
---
0x910 INVALID
---
0x910: INVALID 
---
Entry stack: [V12, 0xc6, V253]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xc6, V253]

================================

Block 0x911
[0x911:0x911]
---
Predecessors: []
Successors: [0x912]
---
0x911 JUMPDEST
---
0x911: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x912
[0x912:0x912]
---
Predecessors: [0x911]
Successors: [0x913]
---
0x912 JUMPDEST
---
0x912: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x913
[0x913:0x941]
---
Predecessors: [0x912]
Successors: []
---
0x913 JUMPDEST
0x914 POP
0x915 JUMP
0x916 STOP
0x917 LOG1
0x918 PUSH6 0x627a7a723058
0x91f SHA3
0x920 SWAP5
0x921 MISSING 0xd8
0x922 CALLDATALOAD
0x923 MISSING 0xd
0x924 MISSING 0xfb
0x925 CALLDATACOPY
0x926 PUSH21 0xe917155e77b673de78675bb98e9b8c6e25aeb297c8
0x93c MISSING 0xd3
0x93d MISSING 0xae
0x93e MISSING 0xef
0x93f MISSING 0x21
0x940 STOP
0x941 MISSING 0x29
---
0x913: JUMPDEST 
0x915: JUMP S1
0x916: STOP 
0x917: LOG S0 S1 S2
0x918: V791 = 0x627a7a723058
0x91f: V792 = SHA3 0x627a7a723058 S3
0x921: MISSING 0xd8
0x922: V793 = CALLDATALOAD S0
0x923: MISSING 0xd
0x924: MISSING 0xfb
0x925: CALLDATACOPY S0 S1 S2
0x926: V794 = 0xe917155e77b673de78675bb98e9b8c6e25aeb297c8
0x93c: MISSING 0xd3
0x93d: MISSING 0xae
0x93e: MISSING 0xef
0x93f: MISSING 0x21
0x940: STOP 
0x941: MISSING 0x29
---
Entry stack: []
Stack pops: 1200
Stack additions: []
Exit stack: []

================================

Function 0:
Public function signature: 0x40045d8
Entry block: 0xc8
Exit block: 0xc6
Body: 0xc6, 0xc8, 0x2e7, 0x2fe, 0x308, 0x30b, 0x314, 0x3ad, 0x3ae, 0x3bb, 0x3bc, 0x3c1, 0x3c9, 0x3ce, 0x3d4, 0x3d5

Function 1:
Public function signature: 0x3a34f09a
Entry block: 0xe4
Exit block: 0x10c
Body: 0xe4, 0xeb, 0xec, 0x10c

Function 2:
Public function signature: 0x4e3dc2f1
Entry block: 0x122
Exit block: 0x10c
Body: 0x10c, 0x122, 0x129, 0x12a, 0x43c

Function 3:
Public function signature: 0x5c7b79f5
Entry block: 0x148
Exit block: 0xc6
Body: 0xc6, 0x148, 0x14f, 0x150, 0x441, 0x459, 0x45d, 0x4c0, 0x4c1, 0x4cd, 0x4ce, 0x4d2

Function 4:
Public function signature: 0x61dfdae6
Entry block: 0x15d
Exit block: 0xc6
Body: 0xc6, 0x15d, 0x164, 0x165, 0x4d6, 0x4ed, 0x4f1, 0x50d

Function 5:
Public function signature: 0x6a199247
Entry block: 0x17b
Exit block: 0xc6
Body: 0xc6, 0x17b, 0x182, 0x183, 0x4c1, 0x4cd, 0x4ce, 0x4d2, 0x510, 0x56d

Function 6:
Public function signature: 0x6dcea85f
Entry block: 0x19a
Exit block: 0xc6
Body: 0xc6, 0x19a, 0x1a1, 0x1a2, 0x50d, 0x583, 0x59a, 0x59e, 0x5ba

Function 7:
Public function signature: 0x819912a2
Entry block: 0x1b8
Exit block: 0xc6
Body: 0xc6, 0x1b8, 0x1bf, 0x1c0, 0x50d, 0x5bd, 0x5d4, 0x5d8, 0x5f4

Function 8:
Public function signature: 0x9c0eff72
Entry block: 0x1d6
Exit block: 0x1e6
Body: 0x1d6, 0x1dd, 0x1de, 0x1e6, 0x5f7

Function 9:
Public function signature: 0xa04a0908
Entry block: 0x202
Exit block: 0xc6
Body: 0xc6, 0x202, 0x209, 0x20a, 0x606, 0x61d, 0x621, 0x645, 0x653, 0x665, 0x678, 0x691, 0x6ab

Function 10:
Public function signature: 0xafd82067
Entry block: 0x266
Exit block: 0x276
Body: 0x266, 0x26d, 0x26e, 0x276

Function 11:
Public function signature: 0xb3e05ec6
Entry block: 0x288
Exit block: 0x872
Body: 0xc6, 0x288, 0x28f, 0x290, 0x4ce, 0x4d2, 0x6e3, 0x75b, 0x75c, 0x768, 0x769, 0x77a, 0x784, 0x7f5, 0x7f6, 0x802, 0x803, 0x865, 0x866, 0x872, 0x873, 0x877

Function 12:
Public function signature: 0xc5563720
Entry block: 0x29a
Exit block: 0x88b
Body: 0x29a, 0x2a1, 0x2a2, 0x88b

Function 13:
Public function signature: 0xd98e14bd
Entry block: 0x2ac
Exit block: 0x10c
Body: 0x10c, 0x2ac, 0x2b3, 0x2b4, 0x89b

Function 14:
Public function signature: 0xe29940b9
Entry block: 0x2d2
Exit block: 0xc6
Body: 0xc6, 0x2d2, 0x2d9, 0x2da, 0x50d, 0x8a0, 0x8a7, 0x8d5, 0x8d6, 0x8db, 0x910

Function 15:
Public fallback function
Entry block: 0xbf
Exit block: 0xc6
Body: 0xbf, 0xc3, 0xc4, 0xc6

Function 16:
Private function
Entry block: 0x3de
Exit block: 0x433
Body: 0x3de, 0x3f3, 0x403, 0x40b, 0x411, 0x415, 0x419, 0x421, 0x42f, 0x433

Function 17:
Private function
Entry block: 0x6b0
Exit block: 0x6de
Body: 0x6b0, 0x6b5, 0x6bf, 0x6ca, 0x6d2, 0x6da, 0x6de

