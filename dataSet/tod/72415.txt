Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xb4]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xb4
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xb4
0xa: JUMPI 0xb4 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xb8]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0xae5e739
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xb8
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0xae5e739
0x20: V14 = EQ V12 0xae5e739
0x21: V15 = 0xb8
0x24: JUMPI 0xb8 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xd9]
---
0x25 DUP1
0x26 PUSH4 0x1b5d7d3c
0x2b EQ
0x2c PUSH2 0xd9
0x2f JUMPI
---
0x26: V16 = 0x1b5d7d3c
0x2b: V17 = EQ 0x1b5d7d3c V12
0x2c: V18 = 0xd9
0x2f: JUMPI 0xd9 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x168]
---
0x30 DUP1
0x31 PUSH4 0x2e1a7d4d
0x36 EQ
0x37 PUSH2 0x168
0x3a JUMPI
---
0x31: V19 = 0x2e1a7d4d
0x36: V20 = EQ 0x2e1a7d4d V12
0x37: V21 = 0x168
0x3a: JUMPI 0x168 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x180]
---
0x3b DUP1
0x3c PUSH4 0x306837da
0x41 EQ
0x42 PUSH2 0x180
0x45 JUMPI
---
0x3c: V22 = 0x306837da
0x41: V23 = EQ 0x306837da V12
0x42: V24 = 0x180
0x45: JUMPI 0x180 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x1f7]
---
0x46 DUP1
0x47 PUSH4 0x405d0c2e
0x4c EQ
0x4d PUSH2 0x1f7
0x50 JUMPI
---
0x47: V25 = 0x405d0c2e
0x4c: V26 = EQ 0x405d0c2e V12
0x4d: V27 = 0x1f7
0x50: JUMPI 0x1f7 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x226]
---
0x51 DUP1
0x52 PUSH4 0x4cee79a1
0x57 EQ
0x58 PUSH2 0x226
0x5b JUMPI
---
0x52: V28 = 0x4cee79a1
0x57: V29 = EQ 0x4cee79a1 V12
0x58: V30 = 0x226
0x5b: JUMPI 0x226 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x29d]
---
0x5c DUP1
0x5d PUSH4 0x7180935c
0x62 EQ
0x63 PUSH2 0x29d
0x66 JUMPI
---
0x5d: V31 = 0x7180935c
0x62: V32 = EQ 0x7180935c V12
0x63: V33 = 0x29d
0x66: JUMPI 0x29d V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x329]
---
0x67 DUP1
0x68 PUSH4 0x8da5cb5b
0x6d EQ
0x6e PUSH2 0x329
0x71 JUMPI
---
0x68: V34 = 0x8da5cb5b
0x6d: V35 = EQ 0x8da5cb5b V12
0x6e: V36 = 0x329
0x71: JUMPI 0x329 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x358]
---
0x72 DUP1
0x73 PUSH4 0x99b8b927
0x78 EQ
0x79 PUSH2 0x358
0x7c JUMPI
---
0x73: V37 = 0x99b8b927
0x78: V38 = EQ 0x99b8b927 V12
0x79: V39 = 0x358
0x7c: JUMPI 0x358 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x3e9]
---
0x7d DUP1
0x7e PUSH4 0xb32a39ca
0x83 EQ
0x84 PUSH2 0x3e9
0x87 JUMPI
---
0x7e: V40 = 0xb32a39ca
0x83: V41 = EQ 0xb32a39ca V12
0x84: V42 = 0x3e9
0x87: JUMPI 0x3e9 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x477]
---
0x88 DUP1
0x89 PUSH4 0xc8617d22
0x8e EQ
0x8f PUSH2 0x477
0x92 JUMPI
---
0x89: V43 = 0xc8617d22
0x8e: V44 = EQ 0xc8617d22 V12
0x8f: V45 = 0x477
0x92: JUMPI 0x477 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x4a6]
---
0x93 DUP1
0x94 PUSH4 0xd0e30db0
0x99 EQ
0x9a PUSH2 0x4a6
0x9d JUMPI
---
0x94: V46 = 0xd0e30db0
0x99: V47 = EQ 0xd0e30db0 V12
0x9a: V48 = 0x4a6
0x9d: JUMPI 0x4a6 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x4b0]
---
0x9e DUP1
0x9f PUSH4 0xd2f7265a
0xa4 EQ
0xa5 PUSH2 0x4b0
0xa8 JUMPI
---
0x9f: V49 = 0xd2f7265a
0xa4: V50 = EQ 0xd2f7265a V12
0xa5: V51 = 0x4b0
0xa8: JUMPI 0x4b0 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x4df]
---
0xa9 DUP1
0xaa PUSH4 0xfe9fbb80
0xaf EQ
0xb0 PUSH2 0x4df
0xb3 JUMPI
---
0xaa: V52 = 0xfe9fbb80
0xaf: V53 = EQ 0xfe9fbb80 V12
0xb0: V54 = 0x4df
0xb3: JUMPI 0x4df V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xb4]
---
Predecessors: [0x0, 0xa9, 0x552, 0x777, 0x827, 0xf1b]
Successors: [0xb5]
---
0xb4 JUMPDEST
---
0xb4: JUMPDEST 
---
Entry stack: [V12, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S3, S2, S1, S0]

================================

Block 0xb5
[0xb5:0xb5]
---
Predecessors: [0xb4]
Successors: [0xb6]
---
0xb5 JUMPDEST
---
0xb5: JUMPDEST 
---
Entry stack: [V12, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S3, S2, S1, S0]

================================

Block 0xb6
[0xb6:0xb7]
---
Predecessors: [0xb5]
Successors: []
---
0xb6 JUMPDEST
0xb7 STOP
---
0xb6: JUMPDEST 
0xb7: STOP 
---
Entry stack: [V12, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S3, S2, S1, S0]

================================

Block 0xb8
[0xb8:0xbe]
---
Predecessors: [0xb]
Successors: [0xbf, 0xc3]
---
0xb8 JUMPDEST
0xb9 CALLVALUE
0xba ISZERO
0xbb PUSH2 0xc3
0xbe JUMPI
---
0xb8: JUMPDEST 
0xb9: V55 = CALLVALUE
0xba: V56 = ISZERO V55
0xbb: V57 = 0xc3
0xbe: JUMPI 0xc3 V56
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc2]
---
Predecessors: [0xb8]
Successors: []
---
0xbf PUSH1 0x0
0xc1 DUP1
0xc2 REVERT
---
0xbf: V58 = 0x0
0xc2: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xc3
[0xc3:0xd6]
---
Predecessors: [0xb8]
Successors: [0x512]
---
0xc3 JUMPDEST
0xc4 PUSH2 0xb4
0xc7 PUSH1 0x1
0xc9 PUSH1 0xa0
0xcb PUSH1 0x2
0xcd EXP
0xce SUB
0xcf PUSH1 0x4
0xd1 CALLDATALOAD
0xd2 AND
0xd3 PUSH2 0x512
0xd6 JUMP
---
0xc3: JUMPDEST 
0xc4: V59 = 0xb4
0xc7: V60 = 0x1
0xc9: V61 = 0xa0
0xcb: V62 = 0x2
0xcd: V63 = EXP 0x2 0xa0
0xce: V64 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcf: V65 = 0x4
0xd1: V66 = CALLDATALOAD 0x4
0xd2: V67 = AND V66 0xffffffffffffffffffffffffffffffffffffffff
0xd3: V68 = 0x512
0xd6: JUMP 0x512
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xb4, V67]
Exit stack: [V12, 0xb4, V67]

================================

Block 0xd7
[0xd7:0xd8]
---
Predecessors: []
Successors: []
---
0xd7 JUMPDEST
0xd8 STOP
---
0xd7: JUMPDEST 
0xd8: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd9
[0xd9:0xdf]
---
Predecessors: [0x25]
Successors: [0xe0, 0xe4]
---
0xd9 JUMPDEST
0xda CALLVALUE
0xdb ISZERO
0xdc PUSH2 0xe4
0xdf JUMPI
---
0xd9: JUMPDEST 
0xda: V69 = CALLVALUE
0xdb: V70 = ISZERO V69
0xdc: V71 = 0xe4
0xdf: JUMPI 0xe4 V70
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe0
[0xe0:0xe3]
---
Predecessors: [0xd9]
Successors: []
---
0xe0 PUSH1 0x0
0xe2 DUP1
0xe3 REVERT
---
0xe0: V72 = 0x0
0xe3: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe4
[0xe4:0x165]
---
Predecessors: [0xd9]
Successors: [0x555]
---
0xe4 JUMPDEST
0xe5 PUSH2 0xb4
0xe8 PUSH1 0x1
0xea PUSH1 0xa0
0xec PUSH1 0x2
0xee EXP
0xef SUB
0xf0 PUSH1 0x4
0xf2 DUP1
0xf3 CALLDATALOAD
0xf4 DUP3
0xf5 AND
0xf6 SWAP2
0xf7 PUSH1 0x24
0xf9 CALLDATALOAD
0xfa DUP2
0xfb AND
0xfc SWAP2
0xfd PUSH1 0x44
0xff CALLDATALOAD
0x100 SWAP1
0x101 SWAP2
0x102 AND
0x103 SWAP1
0x104 PUSH1 0xff
0x106 PUSH1 0x64
0x108 CALLDATALOAD
0x109 DUP2
0x10a AND
0x10b SWAP2
0x10c PUSH1 0x84
0x10e CALLDATALOAD
0x10f SWAP1
0x110 SWAP2
0x111 AND
0x112 SWAP1
0x113 PUSH2 0x124
0x116 PUSH1 0xa4
0x118 DUP3
0x119 PUSH1 0x80
0x11b PUSH1 0x40
0x11d MLOAD
0x11e SWAP1
0x11f DUP2
0x120 ADD
0x121 PUSH1 0x40
0x123 MSTORE
0x124 SWAP2
0x125 SWAP1
0x126 DUP3
0x127 DUP3
0x128 PUSH1 0x80
0x12a DUP1
0x12b DUP3
0x12c DUP5
0x12d CALLDATACOPY
0x12e DUP3
0x12f ADD
0x130 SWAP2
0x131 POP
0x132 POP
0x133 POP
0x134 POP
0x135 POP
0x136 SWAP2
0x137 SWAP1
0x138 DUP1
0x139 PUSH2 0x140
0x13c ADD
0x13d SWAP1
0x13e PUSH1 0xa
0x140 DUP1
0x141 PUSH1 0x20
0x143 MUL
0x144 PUSH1 0x40
0x146 MLOAD
0x147 SWAP1
0x148 DUP2
0x149 ADD
0x14a PUSH1 0x40
0x14c MSTORE
0x14d SWAP2
0x14e SWAP1
0x14f DUP3
0x150 DUP3
0x151 PUSH2 0x140
0x154 DUP1
0x155 DUP3
0x156 DUP5
0x157 CALLDATACOPY
0x158 POP
0x159 SWAP4
0x15a SWAP6
0x15b POP
0x15c PUSH2 0x555
0x15f SWAP5
0x160 POP
0x161 POP
0x162 POP
0x163 POP
0x164 POP
0x165 JUMP
---
0xe4: JUMPDEST 
0xe5: V73 = 0xb4
0xe8: V74 = 0x1
0xea: V75 = 0xa0
0xec: V76 = 0x2
0xee: V77 = EXP 0x2 0xa0
0xef: V78 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf0: V79 = 0x4
0xf3: V80 = CALLDATALOAD 0x4
0xf5: V81 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0xf7: V82 = 0x24
0xf9: V83 = CALLDATALOAD 0x24
0xfb: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V83
0xfd: V85 = 0x44
0xff: V86 = CALLDATALOAD 0x44
0x102: V87 = AND 0xffffffffffffffffffffffffffffffffffffffff V86
0x104: V88 = 0xff
0x106: V89 = 0x64
0x108: V90 = CALLDATALOAD 0x64
0x10a: V91 = AND 0xff V90
0x10c: V92 = 0x84
0x10e: V93 = CALLDATALOAD 0x84
0x111: V94 = AND 0xff V93
0x113: V95 = 0x124
0x116: V96 = 0xa4
0x119: V97 = 0x80
0x11b: V98 = 0x40
0x11d: V99 = M[0x40]
0x120: V100 = ADD V99 0x80
0x121: V101 = 0x40
0x123: M[0x40] = V100
0x128: V102 = 0x80
0x12d: CALLDATACOPY V99 0xa4 0x80
0x12f: V103 = ADD V99 0x80
0x139: V104 = 0x140
0x13c: V105 = ADD 0x140 0x124
0x13e: V106 = 0xa
0x141: V107 = 0x20
0x143: V108 = MUL 0x20 0xa
0x144: V109 = 0x40
0x146: V110 = M[0x40]
0x149: V111 = ADD V110 0x140
0x14a: V112 = 0x40
0x14c: M[0x40] = V111
0x151: V113 = 0x140
0x157: CALLDATACOPY V110 0x124 0x140
0x15c: V114 = 0x555
0x165: JUMP 0x555
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xb4, V81, V84, V87, V91, V94, V99, V110]
Exit stack: [V12, 0xb4, V81, V84, V87, V91, V94, V99, V110]

================================

Block 0x166
[0x166:0x167]
---
Predecessors: []
Successors: []
---
0x166 JUMPDEST
0x167 STOP
---
0x166: JUMPDEST 
0x167: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x168
[0x168:0x16e]
---
Predecessors: [0x30]
Successors: [0x16f, 0x173]
---
0x168 JUMPDEST
0x169 CALLVALUE
0x16a ISZERO
0x16b PUSH2 0x173
0x16e JUMPI
---
0x168: JUMPDEST 
0x169: V115 = CALLVALUE
0x16a: V116 = ISZERO V115
0x16b: V117 = 0x173
0x16e: JUMPI 0x173 V116
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x16f
[0x16f:0x172]
---
Predecessors: [0x168]
Successors: []
---
0x16f PUSH1 0x0
0x171 DUP1
0x172 REVERT
---
0x16f: V118 = 0x0
0x172: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x173
[0x173:0x17d]
---
Predecessors: [0x168]
Successors: [0x780]
---
0x173 JUMPDEST
0x174 PUSH2 0xb4
0x177 PUSH1 0x4
0x179 CALLDATALOAD
0x17a PUSH2 0x780
0x17d JUMP
---
0x173: JUMPDEST 
0x174: V119 = 0xb4
0x177: V120 = 0x4
0x179: V121 = CALLDATALOAD 0x4
0x17a: V122 = 0x780
0x17d: JUMP 0x780
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xb4, V121]
Exit stack: [V12, 0xb4, V121]

================================

Block 0x17e
[0x17e:0x17f]
---
Predecessors: []
Successors: []
---
0x17e JUMPDEST
0x17f STOP
---
0x17e: JUMPDEST 
0x17f: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x180
[0x180:0x186]
---
Predecessors: [0x3b]
Successors: [0x187, 0x18b]
---
0x180 JUMPDEST
0x181 CALLVALUE
0x182 ISZERO
0x183 PUSH2 0x18b
0x186 JUMPI
---
0x180: JUMPDEST 
0x181: V123 = CALLVALUE
0x182: V124 = ISZERO V123
0x183: V125 = 0x18b
0x186: JUMPI 0x18b V124
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x187
[0x187:0x18a]
---
Predecessors: [0x180]
Successors: []
---
0x187 PUSH1 0x0
0x189 DUP1
0x18a REVERT
---
0x187: V126 = 0x0
0x18a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x18b
[0x18b:0x1f4]
---
Predecessors: [0x180]
Successors: [0x82b]
---
0x18b JUMPDEST
0x18c PUSH2 0xb4
0x18f PUSH1 0x1
0x191 PUSH1 0xa0
0x193 PUSH1 0x2
0x195 EXP
0x196 SUB
0x197 PUSH1 0x4
0x199 DUP1
0x19a CALLDATALOAD
0x19b DUP3
0x19c AND
0x19d SWAP2
0x19e PUSH1 0x24
0x1a0 DUP1
0x1a1 CALLDATALOAD
0x1a2 SWAP1
0x1a3 SWAP2
0x1a4 AND
0x1a5 SWAP2
0x1a6 PUSH1 0xff
0x1a8 PUSH1 0x44
0x1aa CALLDATALOAD
0x1ab AND
0x1ac SWAP2
0x1ad PUSH1 0x64
0x1af CALLDATALOAD
0x1b0 SWAP2
0x1b1 PUSH1 0x84
0x1b3 CALLDATALOAD
0x1b4 SWAP2
0x1b5 PUSH1 0xc4
0x1b7 SWAP1
0x1b8 PUSH1 0xa4
0x1ba CALLDATALOAD
0x1bb SWAP1
0x1bc DUP2
0x1bd ADD
0x1be SWAP1
0x1bf DUP4
0x1c0 ADD
0x1c1 CALLDATALOAD
0x1c2 DUP1
0x1c3 PUSH1 0x20
0x1c5 DUP2
0x1c6 DUP2
0x1c7 MUL
0x1c8 ADD
0x1c9 PUSH1 0x40
0x1cb MLOAD
0x1cc SWAP1
0x1cd DUP2
0x1ce ADD
0x1cf PUSH1 0x40
0x1d1 MSTORE
0x1d2 DUP1
0x1d3 SWAP4
0x1d4 SWAP3
0x1d5 SWAP2
0x1d6 SWAP1
0x1d7 DUP2
0x1d8 DUP2
0x1d9 MSTORE
0x1da PUSH1 0x20
0x1dc ADD
0x1dd DUP4
0x1de DUP4
0x1df PUSH1 0x20
0x1e1 MUL
0x1e2 DUP1
0x1e3 DUP3
0x1e4 DUP5
0x1e5 CALLDATACOPY
0x1e6 POP
0x1e7 SWAP5
0x1e8 SWAP7
0x1e9 POP
0x1ea PUSH2 0x82b
0x1ed SWAP6
0x1ee POP
0x1ef POP
0x1f0 POP
0x1f1 POP
0x1f2 POP
0x1f3 POP
0x1f4 JUMP
---
0x18b: JUMPDEST 
0x18c: V127 = 0xb4
0x18f: V128 = 0x1
0x191: V129 = 0xa0
0x193: V130 = 0x2
0x195: V131 = EXP 0x2 0xa0
0x196: V132 = SUB 0x10000000000000000000000000000000000000000 0x1
0x197: V133 = 0x4
0x19a: V134 = CALLDATALOAD 0x4
0x19c: V135 = AND 0xffffffffffffffffffffffffffffffffffffffff V134
0x19e: V136 = 0x24
0x1a1: V137 = CALLDATALOAD 0x24
0x1a4: V138 = AND 0xffffffffffffffffffffffffffffffffffffffff V137
0x1a6: V139 = 0xff
0x1a8: V140 = 0x44
0x1aa: V141 = CALLDATALOAD 0x44
0x1ab: V142 = AND V141 0xff
0x1ad: V143 = 0x64
0x1af: V144 = CALLDATALOAD 0x64
0x1b1: V145 = 0x84
0x1b3: V146 = CALLDATALOAD 0x84
0x1b5: V147 = 0xc4
0x1b8: V148 = 0xa4
0x1ba: V149 = CALLDATALOAD 0xa4
0x1bd: V150 = ADD V149 0x24
0x1c0: V151 = ADD 0x4 V149
0x1c1: V152 = CALLDATALOAD V151
0x1c3: V153 = 0x20
0x1c7: V154 = MUL 0x20 V152
0x1c8: V155 = ADD V154 0x20
0x1c9: V156 = 0x40
0x1cb: V157 = M[0x40]
0x1ce: V158 = ADD V157 V155
0x1cf: V159 = 0x40
0x1d1: M[0x40] = V158
0x1d9: M[V157] = V152
0x1da: V160 = 0x20
0x1dc: V161 = ADD 0x20 V157
0x1df: V162 = 0x20
0x1e1: V163 = MUL 0x20 V152
0x1e5: CALLDATACOPY V161 V150 V163
0x1ea: V164 = 0x82b
0x1f4: JUMP 0x82b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xb4, V135, V138, V142, V144, V146, V157]
Exit stack: [V12, 0xb4, V135, V138, V142, V144, V146, V157]

================================

Block 0x1f5
[0x1f5:0x1f6]
---
Predecessors: []
Successors: []
---
0x1f5 JUMPDEST
0x1f6 STOP
---
0x1f5: JUMPDEST 
0x1f6: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1f7
[0x1f7:0x1fd]
---
Predecessors: [0x46]
Successors: [0x1fe, 0x202]
---
0x1f7 JUMPDEST
0x1f8 CALLVALUE
0x1f9 ISZERO
0x1fa PUSH2 0x202
0x1fd JUMPI
---
0x1f7: JUMPDEST 
0x1f8: V165 = CALLVALUE
0x1f9: V166 = ISZERO V165
0x1fa: V167 = 0x202
0x1fd: JUMPI 0x202 V166
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1fe
[0x1fe:0x201]
---
Predecessors: [0x1f7]
Successors: []
---
0x1fe PUSH1 0x0
0x200 DUP1
0x201 REVERT
---
0x1fe: V168 = 0x0
0x201: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x202
[0x202:0x209]
---
Predecessors: [0x1f7]
Successors: [0x9cc]
---
0x202 JUMPDEST
0x203 PUSH2 0x20a
0x206 PUSH2 0x9cc
0x209 JUMP
---
0x202: JUMPDEST 
0x203: V169 = 0x20a
0x206: V170 = 0x9cc
0x209: JUMP 0x9cc
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x20a]
Exit stack: [V12, 0x20a]

================================

Block 0x20a
[0x20a:0x225]
---
Predecessors: [0x9cc, 0xc91, 0xeb6, 0xf1e]
Successors: []
---
0x20a JUMPDEST
0x20b PUSH1 0x40
0x20d MLOAD
0x20e PUSH1 0x1
0x210 PUSH1 0xa0
0x212 PUSH1 0x2
0x214 EXP
0x215 SUB
0x216 SWAP1
0x217 SWAP2
0x218 AND
0x219 DUP2
0x21a MSTORE
0x21b PUSH1 0x20
0x21d ADD
0x21e PUSH1 0x40
0x220 MLOAD
0x221 DUP1
0x222 SWAP2
0x223 SUB
0x224 SWAP1
0x225 RETURN
---
0x20a: JUMPDEST 
0x20b: V171 = 0x40
0x20d: V172 = M[0x40]
0x20e: V173 = 0x1
0x210: V174 = 0xa0
0x212: V175 = 0x2
0x214: V176 = EXP 0x2 0xa0
0x215: V177 = SUB 0x10000000000000000000000000000000000000000 0x1
0x218: V178 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x21a: M[V172] = V178
0x21b: V179 = 0x20
0x21d: V180 = ADD 0x20 V172
0x21e: V181 = 0x40
0x220: V182 = M[0x40]
0x223: V183 = SUB V180 V182
0x225: RETURN V182 V183
---
Entry stack: [V12, 0x20a, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x20a]

================================

Block 0x226
[0x226:0x22c]
---
Predecessors: [0x51]
Successors: [0x22d, 0x231]
---
0x226 JUMPDEST
0x227 CALLVALUE
0x228 ISZERO
0x229 PUSH2 0x231
0x22c JUMPI
---
0x226: JUMPDEST 
0x227: V184 = CALLVALUE
0x228: V185 = ISZERO V184
0x229: V186 = 0x231
0x22c: JUMPI 0x231 V185
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x22d
[0x22d:0x230]
---
Predecessors: [0x226]
Successors: []
---
0x22d PUSH1 0x0
0x22f DUP1
0x230 REVERT
---
0x22d: V187 = 0x0
0x230: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x231
[0x231:0x29a]
---
Predecessors: [0x226]
Successors: [0x9db]
---
0x231 JUMPDEST
0x232 PUSH2 0xb4
0x235 PUSH1 0x1
0x237 PUSH1 0xa0
0x239 PUSH1 0x2
0x23b EXP
0x23c SUB
0x23d PUSH1 0x4
0x23f DUP1
0x240 CALLDATALOAD
0x241 DUP3
0x242 AND
0x243 SWAP2
0x244 PUSH1 0x24
0x246 DUP1
0x247 CALLDATALOAD
0x248 SWAP1
0x249 SWAP2
0x24a AND
0x24b SWAP2
0x24c PUSH1 0xff
0x24e PUSH1 0x44
0x250 CALLDATALOAD
0x251 AND
0x252 SWAP2
0x253 PUSH1 0x64
0x255 CALLDATALOAD
0x256 SWAP2
0x257 PUSH1 0x84
0x259 CALLDATALOAD
0x25a SWAP2
0x25b PUSH1 0xc4
0x25d SWAP1
0x25e PUSH1 0xa4
0x260 CALLDATALOAD
0x261 SWAP1
0x262 DUP2
0x263 ADD
0x264 SWAP1
0x265 DUP4
0x266 ADD
0x267 CALLDATALOAD
0x268 DUP1
0x269 PUSH1 0x20
0x26b DUP2
0x26c DUP2
0x26d MUL
0x26e ADD
0x26f PUSH1 0x40
0x271 MLOAD
0x272 SWAP1
0x273 DUP2
0x274 ADD
0x275 PUSH1 0x40
0x277 MSTORE
0x278 DUP1
0x279 SWAP4
0x27a SWAP3
0x27b SWAP2
0x27c SWAP1
0x27d DUP2
0x27e DUP2
0x27f MSTORE
0x280 PUSH1 0x20
0x282 ADD
0x283 DUP4
0x284 DUP4
0x285 PUSH1 0x20
0x287 MUL
0x288 DUP1
0x289 DUP3
0x28a DUP5
0x28b CALLDATACOPY
0x28c POP
0x28d SWAP5
0x28e SWAP7
0x28f POP
0x290 PUSH2 0x9db
0x293 SWAP6
0x294 POP
0x295 POP
0x296 POP
0x297 POP
0x298 POP
0x299 POP
0x29a JUMP
---
0x231: JUMPDEST 
0x232: V188 = 0xb4
0x235: V189 = 0x1
0x237: V190 = 0xa0
0x239: V191 = 0x2
0x23b: V192 = EXP 0x2 0xa0
0x23c: V193 = SUB 0x10000000000000000000000000000000000000000 0x1
0x23d: V194 = 0x4
0x240: V195 = CALLDATALOAD 0x4
0x242: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff V195
0x244: V197 = 0x24
0x247: V198 = CALLDATALOAD 0x24
0x24a: V199 = AND 0xffffffffffffffffffffffffffffffffffffffff V198
0x24c: V200 = 0xff
0x24e: V201 = 0x44
0x250: V202 = CALLDATALOAD 0x44
0x251: V203 = AND V202 0xff
0x253: V204 = 0x64
0x255: V205 = CALLDATALOAD 0x64
0x257: V206 = 0x84
0x259: V207 = CALLDATALOAD 0x84
0x25b: V208 = 0xc4
0x25e: V209 = 0xa4
0x260: V210 = CALLDATALOAD 0xa4
0x263: V211 = ADD V210 0x24
0x266: V212 = ADD 0x4 V210
0x267: V213 = CALLDATALOAD V212
0x269: V214 = 0x20
0x26d: V215 = MUL 0x20 V213
0x26e: V216 = ADD V215 0x20
0x26f: V217 = 0x40
0x271: V218 = M[0x40]
0x274: V219 = ADD V218 V216
0x275: V220 = 0x40
0x277: M[0x40] = V219
0x27f: M[V218] = V213
0x280: V221 = 0x20
0x282: V222 = ADD 0x20 V218
0x285: V223 = 0x20
0x287: V224 = MUL 0x20 V213
0x28b: CALLDATACOPY V222 V211 V224
0x290: V225 = 0x9db
0x29a: JUMP 0x9db
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xb4, V196, V199, V203, V205, V207, V218]
Exit stack: [V12, 0xb4, V196, V199, V203, V205, V207, V218]

================================

Block 0x29b
[0x29b:0x29c]
---
Predecessors: []
Successors: []
---
0x29b JUMPDEST
0x29c STOP
---
0x29b: JUMPDEST 
0x29c: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x29d
[0x29d:0x2a3]
---
Predecessors: [0x5c]
Successors: [0x2a4, 0x2a8]
---
0x29d JUMPDEST
0x29e CALLVALUE
0x29f ISZERO
0x2a0 PUSH2 0x2a8
0x2a3 JUMPI
---
0x29d: JUMPDEST 
0x29e: V226 = CALLVALUE
0x29f: V227 = ISZERO V226
0x2a0: V228 = 0x2a8
0x2a3: JUMPI 0x2a8 V227
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a4
[0x2a4:0x2a7]
---
Predecessors: [0x29d]
Successors: []
---
0x2a4 PUSH1 0x0
0x2a6 DUP1
0x2a7 REVERT
---
0x2a4: V229 = 0x0
0x2a7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a8
[0x2a8:0x316]
---
Predecessors: [0x29d]
Successors: [0xb5f]
---
0x2a8 JUMPDEST
0x2a9 PUSH2 0x317
0x2ac PUSH1 0x4
0x2ae DUP1
0x2af CALLDATALOAD
0x2b0 PUSH1 0x1
0x2b2 PUSH1 0xa0
0x2b4 PUSH1 0x2
0x2b6 EXP
0x2b7 SUB
0x2b8 SWAP1
0x2b9 DUP2
0x2ba AND
0x2bb SWAP2
0x2bc PUSH1 0x24
0x2be DUP1
0x2bf CALLDATALOAD
0x2c0 DUP4
0x2c1 AND
0x2c2 SWAP3
0x2c3 PUSH1 0x44
0x2c5 CALLDATALOAD
0x2c6 AND
0x2c7 SWAP2
0x2c8 PUSH1 0x64
0x2ca CALLDATALOAD
0x2cb PUSH1 0xff
0x2cd AND
0x2ce SWAP2
0x2cf PUSH1 0x84
0x2d1 CALLDATALOAD
0x2d2 SWAP2
0x2d3 PUSH1 0xa4
0x2d5 CALLDATALOAD
0x2d6 SWAP2
0x2d7 PUSH1 0xe4
0x2d9 SWAP1
0x2da PUSH1 0xc4
0x2dc CALLDATALOAD
0x2dd SWAP1
0x2de DUP2
0x2df ADD
0x2e0 SWAP1
0x2e1 DUP4
0x2e2 ADD
0x2e3 CALLDATALOAD
0x2e4 DUP1
0x2e5 PUSH1 0x20
0x2e7 DUP1
0x2e8 DUP3
0x2e9 MUL
0x2ea ADD
0x2eb PUSH1 0x40
0x2ed MLOAD
0x2ee SWAP1
0x2ef DUP2
0x2f0 ADD
0x2f1 PUSH1 0x40
0x2f3 MSTORE
0x2f4 DUP1
0x2f5 SWAP4
0x2f6 SWAP3
0x2f7 SWAP2
0x2f8 SWAP1
0x2f9 DUP2
0x2fa DUP2
0x2fb MSTORE
0x2fc PUSH1 0x20
0x2fe ADD
0x2ff DUP4
0x300 DUP4
0x301 PUSH1 0x20
0x303 MUL
0x304 DUP1
0x305 DUP3
0x306 DUP5
0x307 CALLDATACOPY
0x308 POP
0x309 SWAP5
0x30a SWAP7
0x30b POP
0x30c PUSH2 0xb5f
0x30f SWAP6
0x310 POP
0x311 POP
0x312 POP
0x313 POP
0x314 POP
0x315 POP
0x316 JUMP
---
0x2a8: JUMPDEST 
0x2a9: V230 = 0x317
0x2ac: V231 = 0x4
0x2af: V232 = CALLDATALOAD 0x4
0x2b0: V233 = 0x1
0x2b2: V234 = 0xa0
0x2b4: V235 = 0x2
0x2b6: V236 = EXP 0x2 0xa0
0x2b7: V237 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ba: V238 = AND 0xffffffffffffffffffffffffffffffffffffffff V232
0x2bc: V239 = 0x24
0x2bf: V240 = CALLDATALOAD 0x24
0x2c1: V241 = AND 0xffffffffffffffffffffffffffffffffffffffff V240
0x2c3: V242 = 0x44
0x2c5: V243 = CALLDATALOAD 0x44
0x2c6: V244 = AND V243 0xffffffffffffffffffffffffffffffffffffffff
0x2c8: V245 = 0x64
0x2ca: V246 = CALLDATALOAD 0x64
0x2cb: V247 = 0xff
0x2cd: V248 = AND 0xff V246
0x2cf: V249 = 0x84
0x2d1: V250 = CALLDATALOAD 0x84
0x2d3: V251 = 0xa4
0x2d5: V252 = CALLDATALOAD 0xa4
0x2d7: V253 = 0xe4
0x2da: V254 = 0xc4
0x2dc: V255 = CALLDATALOAD 0xc4
0x2df: V256 = ADD V255 0x24
0x2e2: V257 = ADD 0x4 V255
0x2e3: V258 = CALLDATALOAD V257
0x2e5: V259 = 0x20
0x2e9: V260 = MUL V258 0x20
0x2ea: V261 = ADD V260 0x20
0x2eb: V262 = 0x40
0x2ed: V263 = M[0x40]
0x2f0: V264 = ADD V263 V261
0x2f1: V265 = 0x40
0x2f3: M[0x40] = V264
0x2fb: M[V263] = V258
0x2fc: V266 = 0x20
0x2fe: V267 = ADD 0x20 V263
0x301: V268 = 0x20
0x303: V269 = MUL 0x20 V258
0x307: CALLDATACOPY V267 V256 V269
0x30c: V270 = 0xb5f
0x316: JUMP 0xb5f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x317, V238, V241, V244, V248, V250, V252, V263]
Exit stack: [V12, 0x317, V238, V241, V244, V248, V250, V252, V263]

================================

Block 0x317
[0x317:0x328]
---
Predecessors: [0xc85]
Successors: []
---
0x317 JUMPDEST
0x318 PUSH1 0x40
0x31a MLOAD
0x31b SWAP1
0x31c DUP2
0x31d MSTORE
0x31e PUSH1 0x20
0x320 ADD
0x321 PUSH1 0x40
0x323 MLOAD
0x324 DUP1
0x325 SWAP2
0x326 SUB
0x327 SWAP1
0x328 RETURN
---
0x317: JUMPDEST 
0x318: V271 = 0x40
0x31a: V272 = M[0x40]
0x31d: M[V272] = S0
0x31e: V273 = 0x20
0x320: V274 = ADD 0x20 V272
0x321: V275 = 0x40
0x323: V276 = M[0x40]
0x326: V277 = SUB V274 V276
0x328: RETURN V276 V277
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x329
[0x329:0x32f]
---
Predecessors: [0x67]
Successors: [0x330, 0x334]
---
0x329 JUMPDEST
0x32a CALLVALUE
0x32b ISZERO
0x32c PUSH2 0x334
0x32f JUMPI
---
0x329: JUMPDEST 
0x32a: V278 = CALLVALUE
0x32b: V279 = ISZERO V278
0x32c: V280 = 0x334
0x32f: JUMPI 0x334 V279
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x330
[0x330:0x333]
---
Predecessors: [0x329]
Successors: []
---
0x330 PUSH1 0x0
0x332 DUP1
0x333 REVERT
---
0x330: V281 = 0x0
0x333: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x334
[0x334:0x33b]
---
Predecessors: [0x329]
Successors: [0xc91]
---
0x334 JUMPDEST
0x335 PUSH2 0x20a
0x338 PUSH2 0xc91
0x33b JUMP
---
0x334: JUMPDEST 
0x335: V282 = 0x20a
0x338: V283 = 0xc91
0x33b: JUMP 0xc91
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x20a]
Exit stack: [V12, 0x20a]

================================

Block 0x33c
[0x33c:0x357]
---
Predecessors: []
Successors: []
---
0x33c JUMPDEST
0x33d PUSH1 0x40
0x33f MLOAD
0x340 PUSH1 0x1
0x342 PUSH1 0xa0
0x344 PUSH1 0x2
0x346 EXP
0x347 SUB
0x348 SWAP1
0x349 SWAP2
0x34a AND
0x34b DUP2
0x34c MSTORE
0x34d PUSH1 0x20
0x34f ADD
0x350 PUSH1 0x40
0x352 MLOAD
0x353 DUP1
0x354 SWAP2
0x355 SUB
0x356 SWAP1
0x357 RETURN
---
0x33c: JUMPDEST 
0x33d: V284 = 0x40
0x33f: V285 = M[0x40]
0x340: V286 = 0x1
0x342: V287 = 0xa0
0x344: V288 = 0x2
0x346: V289 = EXP 0x2 0xa0
0x347: V290 = SUB 0x10000000000000000000000000000000000000000 0x1
0x34a: V291 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x34c: M[V285] = V291
0x34d: V292 = 0x20
0x34f: V293 = ADD 0x20 V285
0x350: V294 = 0x40
0x352: V295 = M[0x40]
0x355: V296 = SUB V293 V295
0x357: RETURN V295 V296
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x358
[0x358:0x35e]
---
Predecessors: [0x72]
Successors: [0x35f, 0x363]
---
0x358 JUMPDEST
0x359 CALLVALUE
0x35a ISZERO
0x35b PUSH2 0x363
0x35e JUMPI
---
0x358: JUMPDEST 
0x359: V297 = CALLVALUE
0x35a: V298 = ISZERO V297
0x35b: V299 = 0x363
0x35e: JUMPI 0x363 V298
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x35f
[0x35f:0x362]
---
Predecessors: [0x358]
Successors: []
---
0x35f PUSH1 0x0
0x361 DUP1
0x362 REVERT
---
0x35f: V300 = 0x0
0x362: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x363
[0x363:0x3e6]
---
Predecessors: [0x358]
Successors: [0xca0]
---
0x363 JUMPDEST
0x364 PUSH2 0xb4
0x367 PUSH1 0x1
0x369 PUSH1 0xa0
0x36b PUSH1 0x2
0x36d EXP
0x36e SUB
0x36f PUSH1 0x4
0x371 DUP1
0x372 CALLDATALOAD
0x373 DUP3
0x374 AND
0x375 SWAP2
0x376 PUSH1 0x24
0x378 DUP1
0x379 CALLDATALOAD
0x37a DUP3
0x37b AND
0x37c SWAP3
0x37d PUSH1 0x44
0x37f CALLDATALOAD
0x380 SWAP1
0x381 SWAP3
0x382 AND
0x383 SWAP2
0x384 PUSH1 0xff
0x386 PUSH1 0x64
0x388 CALLDATALOAD
0x389 DUP2
0x38a AND
0x38b SWAP3
0x38c PUSH1 0x84
0x38e CALLDATALOAD
0x38f SWAP1
0x390 SWAP2
0x391 AND
0x392 SWAP2
0x393 PUSH1 0xa4
0x395 CALLDATALOAD
0x396 SWAP2
0x397 PUSH1 0xc4
0x399 CALLDATALOAD
0x39a SWAP2
0x39b PUSH1 0xe4
0x39d CALLDATALOAD
0x39e SWAP2
0x39f PUSH2 0x104
0x3a2 CALLDATALOAD
0x3a3 SWAP2
0x3a4 SWAP1
0x3a5 PUSH2 0x144
0x3a8 SWAP1
0x3a9 PUSH2 0x124
0x3ac CALLDATALOAD
0x3ad SWAP1
0x3ae DUP2
0x3af ADD
0x3b0 SWAP1
0x3b1 DUP4
0x3b2 ADD
0x3b3 CALLDATALOAD
0x3b4 DUP1
0x3b5 PUSH1 0x20
0x3b7 DUP2
0x3b8 DUP2
0x3b9 MUL
0x3ba ADD
0x3bb PUSH1 0x40
0x3bd MLOAD
0x3be SWAP1
0x3bf DUP2
0x3c0 ADD
0x3c1 PUSH1 0x40
0x3c3 MSTORE
0x3c4 DUP1
0x3c5 SWAP4
0x3c6 SWAP3
0x3c7 SWAP2
0x3c8 SWAP1
0x3c9 DUP2
0x3ca DUP2
0x3cb MSTORE
0x3cc PUSH1 0x20
0x3ce ADD
0x3cf DUP4
0x3d0 DUP4
0x3d1 PUSH1 0x20
0x3d3 MUL
0x3d4 DUP1
0x3d5 DUP3
0x3d6 DUP5
0x3d7 CALLDATACOPY
0x3d8 POP
0x3d9 SWAP5
0x3da SWAP7
0x3db POP
0x3dc PUSH2 0xca0
0x3df SWAP6
0x3e0 POP
0x3e1 POP
0x3e2 POP
0x3e3 POP
0x3e4 POP
0x3e5 POP
0x3e6 JUMP
---
0x363: JUMPDEST 
0x364: V301 = 0xb4
0x367: V302 = 0x1
0x369: V303 = 0xa0
0x36b: V304 = 0x2
0x36d: V305 = EXP 0x2 0xa0
0x36e: V306 = SUB 0x10000000000000000000000000000000000000000 0x1
0x36f: V307 = 0x4
0x372: V308 = CALLDATALOAD 0x4
0x374: V309 = AND 0xffffffffffffffffffffffffffffffffffffffff V308
0x376: V310 = 0x24
0x379: V311 = CALLDATALOAD 0x24
0x37b: V312 = AND 0xffffffffffffffffffffffffffffffffffffffff V311
0x37d: V313 = 0x44
0x37f: V314 = CALLDATALOAD 0x44
0x382: V315 = AND 0xffffffffffffffffffffffffffffffffffffffff V314
0x384: V316 = 0xff
0x386: V317 = 0x64
0x388: V318 = CALLDATALOAD 0x64
0x38a: V319 = AND 0xff V318
0x38c: V320 = 0x84
0x38e: V321 = CALLDATALOAD 0x84
0x391: V322 = AND 0xff V321
0x393: V323 = 0xa4
0x395: V324 = CALLDATALOAD 0xa4
0x397: V325 = 0xc4
0x399: V326 = CALLDATALOAD 0xc4
0x39b: V327 = 0xe4
0x39d: V328 = CALLDATALOAD 0xe4
0x39f: V329 = 0x104
0x3a2: V330 = CALLDATALOAD 0x104
0x3a5: V331 = 0x144
0x3a9: V332 = 0x124
0x3ac: V333 = CALLDATALOAD 0x124
0x3af: V334 = ADD V333 0x24
0x3b2: V335 = ADD 0x4 V333
0x3b3: V336 = CALLDATALOAD V335
0x3b5: V337 = 0x20
0x3b9: V338 = MUL 0x20 V336
0x3ba: V339 = ADD V338 0x20
0x3bb: V340 = 0x40
0x3bd: V341 = M[0x40]
0x3c0: V342 = ADD V341 V339
0x3c1: V343 = 0x40
0x3c3: M[0x40] = V342
0x3cb: M[V341] = V336
0x3cc: V344 = 0x20
0x3ce: V345 = ADD 0x20 V341
0x3d1: V346 = 0x20
0x3d3: V347 = MUL 0x20 V336
0x3d7: CALLDATACOPY V345 V334 V347
0x3dc: V348 = 0xca0
0x3e6: JUMP 0xca0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xb4, V309, V312, V315, V319, V322, V324, V326, V328, V330, V341]
Exit stack: [V12, 0xb4, V309, V312, V315, V319, V322, V324, V326, V328, V330, V341]

================================

Block 0x3e7
[0x3e7:0x3e8]
---
Predecessors: []
Successors: []
---
0x3e7 JUMPDEST
0x3e8 STOP
---
0x3e7: JUMPDEST 
0x3e8: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3e9
[0x3e9:0x3ef]
---
Predecessors: [0x7d]
Successors: [0x3f0, 0x3f4]
---
0x3e9 JUMPDEST
0x3ea CALLVALUE
0x3eb ISZERO
0x3ec PUSH2 0x3f4
0x3ef JUMPI
---
0x3e9: JUMPDEST 
0x3ea: V349 = CALLVALUE
0x3eb: V350 = ISZERO V349
0x3ec: V351 = 0x3f4
0x3ef: JUMPI 0x3f4 V350
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3f0
[0x3f0:0x3f3]
---
Predecessors: [0x3e9]
Successors: []
---
0x3f0 PUSH1 0x0
0x3f2 DUP1
0x3f3 REVERT
---
0x3f0: V352 = 0x0
0x3f3: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3f4
[0x3f4:0x462]
---
Predecessors: [0x3e9]
Successors: [0xd5c]
---
0x3f4 JUMPDEST
0x3f5 PUSH2 0x463
0x3f8 PUSH1 0x4
0x3fa DUP1
0x3fb CALLDATALOAD
0x3fc PUSH1 0x1
0x3fe PUSH1 0xa0
0x400 PUSH1 0x2
0x402 EXP
0x403 SUB
0x404 SWAP1
0x405 DUP2
0x406 AND
0x407 SWAP2
0x408 PUSH1 0x24
0x40a DUP1
0x40b CALLDATALOAD
0x40c DUP4
0x40d AND
0x40e SWAP3
0x40f PUSH1 0x44
0x411 CALLDATALOAD
0x412 AND
0x413 SWAP2
0x414 PUSH1 0x64
0x416 CALLDATALOAD
0x417 PUSH1 0xff
0x419 AND
0x41a SWAP2
0x41b PUSH1 0x84
0x41d CALLDATALOAD
0x41e SWAP2
0x41f PUSH1 0xa4
0x421 CALLDATALOAD
0x422 SWAP2
0x423 PUSH1 0xe4
0x425 SWAP1
0x426 PUSH1 0xc4
0x428 CALLDATALOAD
0x429 SWAP1
0x42a DUP2
0x42b ADD
0x42c SWAP1
0x42d DUP4
0x42e ADD
0x42f CALLDATALOAD
0x430 DUP1
0x431 PUSH1 0x20
0x433 DUP1
0x434 DUP3
0x435 MUL
0x436 ADD
0x437 PUSH1 0x40
0x439 MLOAD
0x43a SWAP1
0x43b DUP2
0x43c ADD
0x43d PUSH1 0x40
0x43f MSTORE
0x440 DUP1
0x441 SWAP4
0x442 SWAP3
0x443 SWAP2
0x444 SWAP1
0x445 DUP2
0x446 DUP2
0x447 MSTORE
0x448 PUSH1 0x20
0x44a ADD
0x44b DUP4
0x44c DUP4
0x44d PUSH1 0x20
0x44f MUL
0x450 DUP1
0x451 DUP3
0x452 DUP5
0x453 CALLDATACOPY
0x454 POP
0x455 SWAP5
0x456 SWAP7
0x457 POP
0x458 PUSH2 0xd5c
0x45b SWAP6
0x45c POP
0x45d POP
0x45e POP
0x45f POP
0x460 POP
0x461 POP
0x462 JUMP
---
0x3f4: JUMPDEST 
0x3f5: V353 = 0x463
0x3f8: V354 = 0x4
0x3fb: V355 = CALLDATALOAD 0x4
0x3fc: V356 = 0x1
0x3fe: V357 = 0xa0
0x400: V358 = 0x2
0x402: V359 = EXP 0x2 0xa0
0x403: V360 = SUB 0x10000000000000000000000000000000000000000 0x1
0x406: V361 = AND 0xffffffffffffffffffffffffffffffffffffffff V355
0x408: V362 = 0x24
0x40b: V363 = CALLDATALOAD 0x24
0x40d: V364 = AND 0xffffffffffffffffffffffffffffffffffffffff V363
0x40f: V365 = 0x44
0x411: V366 = CALLDATALOAD 0x44
0x412: V367 = AND V366 0xffffffffffffffffffffffffffffffffffffffff
0x414: V368 = 0x64
0x416: V369 = CALLDATALOAD 0x64
0x417: V370 = 0xff
0x419: V371 = AND 0xff V369
0x41b: V372 = 0x84
0x41d: V373 = CALLDATALOAD 0x84
0x41f: V374 = 0xa4
0x421: V375 = CALLDATALOAD 0xa4
0x423: V376 = 0xe4
0x426: V377 = 0xc4
0x428: V378 = CALLDATALOAD 0xc4
0x42b: V379 = ADD V378 0x24
0x42e: V380 = ADD 0x4 V378
0x42f: V381 = CALLDATALOAD V380
0x431: V382 = 0x20
0x435: V383 = MUL V381 0x20
0x436: V384 = ADD V383 0x20
0x437: V385 = 0x40
0x439: V386 = M[0x40]
0x43c: V387 = ADD V386 V384
0x43d: V388 = 0x40
0x43f: M[0x40] = V387
0x447: M[V386] = V381
0x448: V389 = 0x20
0x44a: V390 = ADD 0x20 V386
0x44d: V391 = 0x20
0x44f: V392 = MUL 0x20 V381
0x453: CALLDATACOPY V390 V379 V392
0x458: V393 = 0xd5c
0x462: JUMP 0xd5c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x463, V361, V364, V367, V371, V373, V375, V386]
Exit stack: [V12, 0x463, V361, V364, V367, V371, V373, V375, V386]

================================

Block 0x463
[0x463:0x476]
---
Predecessors: [0xc85, 0xf4a]
Successors: []
---
0x463 JUMPDEST
0x464 PUSH1 0x40
0x466 MLOAD
0x467 SWAP1
0x468 ISZERO
0x469 ISZERO
0x46a DUP2
0x46b MSTORE
0x46c PUSH1 0x20
0x46e ADD
0x46f PUSH1 0x40
0x471 MLOAD
0x472 DUP1
0x473 SWAP2
0x474 SUB
0x475 SWAP1
0x476 RETURN
---
0x463: JUMPDEST 
0x464: V394 = 0x40
0x466: V395 = M[0x40]
0x468: V396 = ISZERO S0
0x469: V397 = ISZERO V396
0x46b: M[V395] = V397
0x46c: V398 = 0x20
0x46e: V399 = ADD 0x20 V395
0x46f: V400 = 0x40
0x471: V401 = M[0x40]
0x474: V402 = SUB V399 V401
0x476: RETURN V401 V402
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x477
[0x477:0x47d]
---
Predecessors: [0x88]
Successors: [0x47e, 0x482]
---
0x477 JUMPDEST
0x478 CALLVALUE
0x479 ISZERO
0x47a PUSH2 0x482
0x47d JUMPI
---
0x477: JUMPDEST 
0x478: V403 = CALLVALUE
0x479: V404 = ISZERO V403
0x47a: V405 = 0x482
0x47d: JUMPI 0x482 V404
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x47e
[0x47e:0x481]
---
Predecessors: [0x477]
Successors: []
---
0x47e PUSH1 0x0
0x480 DUP1
0x481 REVERT
---
0x47e: V406 = 0x0
0x481: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x482
[0x482:0x489]
---
Predecessors: [0x477]
Successors: [0xeb6]
---
0x482 JUMPDEST
0x483 PUSH2 0x20a
0x486 PUSH2 0xeb6
0x489 JUMP
---
0x482: JUMPDEST 
0x483: V407 = 0x20a
0x486: V408 = 0xeb6
0x489: JUMP 0xeb6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x20a]
Exit stack: [V12, 0x20a]

================================

Block 0x48a
[0x48a:0x4a5]
---
Predecessors: []
Successors: []
---
0x48a JUMPDEST
0x48b PUSH1 0x40
0x48d MLOAD
0x48e PUSH1 0x1
0x490 PUSH1 0xa0
0x492 PUSH1 0x2
0x494 EXP
0x495 SUB
0x496 SWAP1
0x497 SWAP2
0x498 AND
0x499 DUP2
0x49a MSTORE
0x49b PUSH1 0x20
0x49d ADD
0x49e PUSH1 0x40
0x4a0 MLOAD
0x4a1 DUP1
0x4a2 SWAP2
0x4a3 SUB
0x4a4 SWAP1
0x4a5 RETURN
---
0x48a: JUMPDEST 
0x48b: V409 = 0x40
0x48d: V410 = M[0x40]
0x48e: V411 = 0x1
0x490: V412 = 0xa0
0x492: V413 = 0x2
0x494: V414 = EXP 0x2 0xa0
0x495: V415 = SUB 0x10000000000000000000000000000000000000000 0x1
0x498: V416 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x49a: M[V410] = V416
0x49b: V417 = 0x20
0x49d: V418 = ADD 0x20 V410
0x49e: V419 = 0x40
0x4a0: V420 = M[0x40]
0x4a3: V421 = SUB V418 V420
0x4a5: RETURN V420 V421
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4a6
[0x4a6:0x4ad]
---
Predecessors: [0x93]
Successors: [0xec5]
---
0x4a6 JUMPDEST
0x4a7 PUSH2 0xb4
0x4aa PUSH2 0xec5
0x4ad JUMP
---
0x4a6: JUMPDEST 
0x4a7: V422 = 0xb4
0x4aa: V423 = 0xec5
0x4ad: JUMP 0xec5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xb4]
Exit stack: [V12, 0xb4]

================================

Block 0x4ae
[0x4ae:0x4af]
---
Predecessors: []
Successors: []
---
0x4ae JUMPDEST
0x4af STOP
---
0x4ae: JUMPDEST 
0x4af: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x4b0
[0x4b0:0x4b6]
---
Predecessors: [0x9e]
Successors: [0x4b7, 0x4bb]
---
0x4b0 JUMPDEST
0x4b1 CALLVALUE
0x4b2 ISZERO
0x4b3 PUSH2 0x4bb
0x4b6 JUMPI
---
0x4b0: JUMPDEST 
0x4b1: V424 = CALLVALUE
0x4b2: V425 = ISZERO V424
0x4b3: V426 = 0x4bb
0x4b6: JUMPI 0x4bb V425
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4b7
[0x4b7:0x4ba]
---
Predecessors: [0x4b0]
Successors: []
---
0x4b7 PUSH1 0x0
0x4b9 DUP1
0x4ba REVERT
---
0x4b7: V427 = 0x0
0x4ba: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4bb
[0x4bb:0x4c2]
---
Predecessors: [0x4b0]
Successors: [0xf1e]
---
0x4bb JUMPDEST
0x4bc PUSH2 0x20a
0x4bf PUSH2 0xf1e
0x4c2 JUMP
---
0x4bb: JUMPDEST 
0x4bc: V428 = 0x20a
0x4bf: V429 = 0xf1e
0x4c2: JUMP 0xf1e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x20a]
Exit stack: [V12, 0x20a]

================================

Block 0x4c3
[0x4c3:0x4de]
---
Predecessors: []
Successors: []
---
0x4c3 JUMPDEST
0x4c4 PUSH1 0x40
0x4c6 MLOAD
0x4c7 PUSH1 0x1
0x4c9 PUSH1 0xa0
0x4cb PUSH1 0x2
0x4cd EXP
0x4ce SUB
0x4cf SWAP1
0x4d0 SWAP2
0x4d1 AND
0x4d2 DUP2
0x4d3 MSTORE
0x4d4 PUSH1 0x20
0x4d6 ADD
0x4d7 PUSH1 0x40
0x4d9 MLOAD
0x4da DUP1
0x4db SWAP2
0x4dc SUB
0x4dd SWAP1
0x4de RETURN
---
0x4c3: JUMPDEST 
0x4c4: V430 = 0x40
0x4c6: V431 = M[0x40]
0x4c7: V432 = 0x1
0x4c9: V433 = 0xa0
0x4cb: V434 = 0x2
0x4cd: V435 = EXP 0x2 0xa0
0x4ce: V436 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d1: V437 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x4d3: M[V431] = V437
0x4d4: V438 = 0x20
0x4d6: V439 = ADD 0x20 V431
0x4d7: V440 = 0x40
0x4d9: V441 = M[0x40]
0x4dc: V442 = SUB V439 V441
0x4de: RETURN V441 V442
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4df
[0x4df:0x4e5]
---
Predecessors: [0xa9]
Successors: [0x4e6, 0x4ea]
---
0x4df JUMPDEST
0x4e0 CALLVALUE
0x4e1 ISZERO
0x4e2 PUSH2 0x4ea
0x4e5 JUMPI
---
0x4df: JUMPDEST 
0x4e0: V443 = CALLVALUE
0x4e1: V444 = ISZERO V443
0x4e2: V445 = 0x4ea
0x4e5: JUMPI 0x4ea V444
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4e6
[0x4e6:0x4e9]
---
Predecessors: [0x4df]
Successors: []
---
0x4e6 PUSH1 0x0
0x4e8 DUP1
0x4e9 REVERT
---
0x4e6: V446 = 0x0
0x4e9: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4ea
[0x4ea:0x4fd]
---
Predecessors: [0x4df]
Successors: [0xf2d]
---
0x4ea JUMPDEST
0x4eb PUSH2 0x463
0x4ee PUSH1 0x1
0x4f0 PUSH1 0xa0
0x4f2 PUSH1 0x2
0x4f4 EXP
0x4f5 SUB
0x4f6 PUSH1 0x4
0x4f8 CALLDATALOAD
0x4f9 AND
0x4fa PUSH2 0xf2d
0x4fd JUMP
---
0x4ea: JUMPDEST 
0x4eb: V447 = 0x463
0x4ee: V448 = 0x1
0x4f0: V449 = 0xa0
0x4f2: V450 = 0x2
0x4f4: V451 = EXP 0x2 0xa0
0x4f5: V452 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f6: V453 = 0x4
0x4f8: V454 = CALLDATALOAD 0x4
0x4f9: V455 = AND V454 0xffffffffffffffffffffffffffffffffffffffff
0x4fa: V456 = 0xf2d
0x4fd: JUMP 0xf2d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x463, V455]
Exit stack: [V12, 0x463, V455]

================================

Block 0x4fe
[0x4fe:0x511]
---
Predecessors: []
Successors: []
---
0x4fe JUMPDEST
0x4ff PUSH1 0x40
0x501 MLOAD
0x502 SWAP1
0x503 ISZERO
0x504 ISZERO
0x505 DUP2
0x506 MSTORE
0x507 PUSH1 0x20
0x509 ADD
0x50a PUSH1 0x40
0x50c MLOAD
0x50d DUP1
0x50e SWAP2
0x50f SUB
0x510 SWAP1
0x511 RETURN
---
0x4fe: JUMPDEST 
0x4ff: V457 = 0x40
0x501: V458 = M[0x40]
0x503: V459 = ISZERO S0
0x504: V460 = ISZERO V459
0x506: M[V458] = V460
0x507: V461 = 0x20
0x509: V462 = ADD 0x20 V458
0x50a: V463 = 0x40
0x50c: V464 = M[0x40]
0x50f: V465 = SUB V462 V464
0x511: RETURN V464 V465
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x512
[0x512:0x528]
---
Predecessors: [0xc3]
Successors: [0x529, 0x52d]
---
0x512 JUMPDEST
0x513 PUSH1 0x3
0x515 SLOAD
0x516 CALLER
0x517 PUSH1 0x1
0x519 PUSH1 0xa0
0x51b PUSH1 0x2
0x51d EXP
0x51e SUB
0x51f SWAP1
0x520 DUP2
0x521 AND
0x522 SWAP2
0x523 AND
0x524 EQ
0x525 PUSH2 0x52d
0x528 JUMPI
---
0x512: JUMPDEST 
0x513: V466 = 0x3
0x515: V467 = S[0x3]
0x516: V468 = CALLER
0x517: V469 = 0x1
0x519: V470 = 0xa0
0x51b: V471 = 0x2
0x51d: V472 = EXP 0x2 0xa0
0x51e: V473 = SUB 0x10000000000000000000000000000000000000000 0x1
0x521: V474 = AND 0xffffffffffffffffffffffffffffffffffffffff V468
0x523: V475 = AND V467 0xffffffffffffffffffffffffffffffffffffffff
0x524: V476 = EQ V475 V474
0x525: V477 = 0x52d
0x528: JUMPI 0x52d V476
---
Entry stack: [V12, 0xb4, V67]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb4, V67]

================================

Block 0x529
[0x529:0x52c]
---
Predecessors: [0x512]
Successors: []
---
0x529 PUSH1 0x0
0x52b DUP1
0x52c REVERT
---
0x529: V478 = 0x0
0x52c: REVERT 0x0 0x0
---
Entry stack: [V12, 0xb4, V67]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb4, V67]

================================

Block 0x52d
[0x52d:0x550]
---
Predecessors: [0x512]
Successors: [0x551]
---
0x52d JUMPDEST
0x52e PUSH1 0x1
0x530 PUSH1 0xa0
0x532 PUSH1 0x2
0x534 EXP
0x535 SUB
0x536 DUP2
0x537 AND
0x538 PUSH1 0x0
0x53a SWAP1
0x53b DUP2
0x53c MSTORE
0x53d PUSH1 0x4
0x53f PUSH1 0x20
0x541 MSTORE
0x542 PUSH1 0x40
0x544 SWAP1
0x545 SHA3
0x546 DUP1
0x547 SLOAD
0x548 PUSH1 0xff
0x54a NOT
0x54b AND
0x54c PUSH1 0x1
0x54e OR
0x54f SWAP1
0x550 SSTORE
---
0x52d: JUMPDEST 
0x52e: V479 = 0x1
0x530: V480 = 0xa0
0x532: V481 = 0x2
0x534: V482 = EXP 0x2 0xa0
0x535: V483 = SUB 0x10000000000000000000000000000000000000000 0x1
0x537: V484 = AND V67 0xffffffffffffffffffffffffffffffffffffffff
0x538: V485 = 0x0
0x53c: M[0x0] = V484
0x53d: V486 = 0x4
0x53f: V487 = 0x20
0x541: M[0x20] = 0x4
0x542: V488 = 0x40
0x545: V489 = SHA3 0x0 0x40
0x547: V490 = S[V489]
0x548: V491 = 0xff
0x54a: V492 = NOT 0xff
0x54b: V493 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V490
0x54c: V494 = 0x1
0x54e: V495 = OR 0x1 V493
0x550: S[V489] = V495
---
Entry stack: [V12, 0xb4, V67]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xb4, V67]

================================

Block 0x551
[0x551:0x551]
---
Predecessors: [0x52d]
Successors: [0x552]
---
0x551 JUMPDEST
---
0x551: JUMPDEST 
---
Entry stack: [V12, 0xb4, V67]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb4, V67]

================================

Block 0x552
[0x552:0x554]
---
Predecessors: [0x551]
Successors: [0xb4]
---
0x552 JUMPDEST
0x553 POP
0x554 JUMP
---
0x552: JUMPDEST 
0x554: JUMP 0xb4
---
Entry stack: [V12, 0xb4, V67]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x555
[0x555:0x55d]
---
Predecessors: [0xe4]
Successors: [0xf2d]
---
0x555 JUMPDEST
0x556 PUSH2 0x55e
0x559 CALLER
0x55a PUSH2 0xf2d
0x55d JUMP
---
0x555: JUMPDEST 
0x556: V496 = 0x55e
0x559: V497 = CALLER
0x55a: V498 = 0xf2d
0x55d: JUMP 0xf2d
---
Entry stack: [V12, 0xb4, V81, V84, V87, V91, V94, V99, V110]
Stack pops: 0
Stack additions: [0x55e, V497]
Exit stack: [V12, 0xb4, V81, V84, V87, V91, V94, V99, V110, 0x55e, V497]

================================

Block 0x55e
[0x55e:0x564]
---
Predecessors: [0xf4a]
Successors: [0x565, 0x569]
---
0x55e JUMPDEST
0x55f ISZERO
0x560 ISZERO
0x561 PUSH2 0x569
0x564 JUMPI
---
0x55e: JUMPDEST 
0x55f: V499 = ISZERO S0
0x560: V500 = ISZERO V499
0x561: V501 = 0x569
0x564: JUMPI 0x569 V500
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x565
[0x565:0x568]
---
Predecessors: [0x55e]
Successors: [0x777]
---
0x565 PUSH2 0x777
0x568 JUMP
---
0x565: V502 = 0x777
0x568: JUMP 0x777
---
Entry stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x569
[0x569:0x585]
---
Predecessors: [0x55e]
Successors: [0x586]
---
0x569 JUMPDEST
0x56a PUSH1 0x1
0x56c SLOAD
0x56d PUSH1 0x2
0x56f SLOAD
0x570 PUSH1 0x1
0x572 PUSH1 0xa0
0x574 PUSH1 0x2
0x576 EXP
0x577 SUB
0x578 SWAP2
0x579 DUP3
0x57a AND
0x57b SWAP2
0x57c PUSH4 0xa19b14a
0x581 SWAP2
0x582 AND
0x583 DUP4
0x584 PUSH1 0x0
---
0x569: JUMPDEST 
0x56a: V503 = 0x1
0x56c: V504 = S[0x1]
0x56d: V505 = 0x2
0x56f: V506 = S[0x2]
0x570: V507 = 0x1
0x572: V508 = 0xa0
0x574: V509 = 0x2
0x576: V510 = EXP 0x2 0xa0
0x577: V511 = SUB 0x10000000000000000000000000000000000000000 0x1
0x57a: V512 = AND 0xffffffffffffffffffffffffffffffffffffffff V504
0x57c: V513 = 0xa19b14a
0x582: V514 = AND V506 0xffffffffffffffffffffffffffffffffffffffff
0x584: V515 = 0x0
---
Entry stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, V512, 0xa19b14a, V514, S0, 0x0]
Exit stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V512, 0xa19b14a, V514, S0, 0x0]

================================

Block 0x586
[0x586:0x58f]
---
Predecessors: [0x569]
Successors: [0x590]
---
0x586 JUMPDEST
0x587 PUSH1 0x20
0x589 MUL
0x58a ADD
0x58b MLOAD
0x58c DUP11
0x58d DUP6
0x58e PUSH1 0x2
---
0x586: JUMPDEST 
0x587: V516 = 0x20
0x589: V517 = MUL 0x20 0x0
0x58a: V518 = ADD 0x0 S1
0x58b: V519 = M[V518]
0x58e: V520 = 0x2
---
Entry stack: [V12, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V512, 0xa19b14a, V514, S1, 0x0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V519, S11, S5, 0x2]
Exit stack: [V12, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V512, 0xa19b14a, V514, V519, S11, S5, 0x2]

================================

Block 0x590
[0x590:0x598]
---
Predecessors: [0x586]
Successors: [0x599]
---
0x590 JUMPDEST
0x591 PUSH1 0x20
0x593 MUL
0x594 ADD
0x595 MLOAD
0x596 DUP7
0x597 PUSH1 0x4
---
0x590: JUMPDEST 
0x591: V521 = 0x20
0x593: V522 = MUL 0x20 0x2
0x594: V523 = ADD 0x40 S1
0x595: V524 = M[V523]
0x597: V525 = 0x4
---
Entry stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, V512, 0xa19b14a, V514, V519, S2, S1, 0x2]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, V524, S7, 0x4]
Exit stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, V512, 0xa19b14a, V514, V519, S2, V524, S7, 0x4]

================================

Block 0x599
[0x599:0x5a1]
---
Predecessors: [0x590]
Successors: [0x5a2]
---
0x599 JUMPDEST
0x59a PUSH1 0x20
0x59c MUL
0x59d ADD
0x59e MLOAD
0x59f DUP8
0x5a0 PUSH1 0x6
---
0x599: JUMPDEST 
0x59a: V526 = 0x20
0x59c: V527 = MUL 0x20 0x4
0x59d: V528 = ADD 0x80 S1
0x59e: V529 = M[V528]
0x5a0: V530 = 0x6
---
Entry stack: [V12, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, V512, 0xa19b14a, V514, V519, S3, V524, S1, 0x4]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, V529, S8, 0x6]
Exit stack: [V12, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, V512, 0xa19b14a, V514, V519, S3, V524, V529, S8, 0x6]

================================

Block 0x5a2
[0x5a2:0x5ac]
---
Predecessors: [0x599]
Successors: [0x5ad]
---
0x5a2 JUMPDEST
0x5a3 PUSH1 0x20
0x5a5 MUL
0x5a6 ADD
0x5a7 MLOAD
0x5a8 DUP14
0x5a9 DUP13
0x5aa DUP12
0x5ab PUSH1 0x0
---
0x5a2: JUMPDEST 
0x5a3: V531 = 0x20
0x5a5: V532 = MUL 0x20 0x6
0x5a6: V533 = ADD 0xc0 S1
0x5a7: V534 = M[V533]
0x5ab: V535 = 0x0
---
Entry stack: [V12, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V512, 0xa19b14a, V514, V519, S4, V524, V529, S1, 0x6]
Stack pops: 15
Stack additions: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V534, S14, S12, S10, 0x0]
Exit stack: [V12, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V512, 0xa19b14a, V514, V519, S4, V524, V529, V534, S14, S12, S10, 0x0]

================================

Block 0x5ad
[0x5ad:0x5b5]
---
Predecessors: [0x5a2]
Successors: [0x5b6]
---
0x5ad JUMPDEST
0x5ae PUSH1 0x20
0x5b0 MUL
0x5b1 ADD
0x5b2 MLOAD
0x5b3 DUP13
0x5b4 PUSH1 0x2
---
0x5ad: JUMPDEST 
0x5ae: V536 = 0x20
0x5b0: V537 = MUL 0x20 0x0
0x5b1: V538 = ADD 0x0 S1
0x5b2: V539 = M[V538]
0x5b4: V540 = 0x2
---
Entry stack: [V12, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, V512, 0xa19b14a, V514, V519, S7, V524, V529, V534, S3, S2, S1, 0x0]
Stack pops: 14
Stack additions: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V539, S13, 0x2]
Exit stack: [V12, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, V512, 0xa19b14a, V514, V519, S7, V524, V529, V534, S3, S2, V539, S13, 0x2]

================================

Block 0x5b6
[0x5b6:0x5be]
---
Predecessors: [0x5ad]
Successors: [0x5bf]
---
0x5b6 JUMPDEST
0x5b7 PUSH1 0x20
0x5b9 MUL
0x5ba ADD
0x5bb MLOAD
0x5bc DUP13
0x5bd PUSH1 0x8
---
0x5b6: JUMPDEST 
0x5b7: V541 = 0x20
0x5b9: V542 = MUL 0x20 0x2
0x5ba: V543 = ADD 0x40 S1
0x5bb: V544 = M[V543]
0x5bd: V545 = 0x8
---
Entry stack: [V12, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, V512, 0xa19b14a, V514, V519, S8, V524, V529, V534, S4, S3, V539, S1, 0x2]
Stack pops: 14
Stack additions: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V544, S13, 0x8]
Exit stack: [V12, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, V512, 0xa19b14a, V514, V519, S8, V524, V529, V534, S4, S3, V539, V544, S13, 0x8]

================================

Block 0x5bf
[0x5bf:0x653]
---
Predecessors: [0x5b6]
Successors: [0x654, 0x658]
---
0x5bf JUMPDEST
0x5c0 PUSH1 0x20
0x5c2 MUL
0x5c3 ADD
0x5c4 MLOAD
0x5c5 PUSH1 0x40
0x5c7 MLOAD
0x5c8 PUSH1 0xe0
0x5ca PUSH1 0x2
0x5cc EXP
0x5cd PUSH4 0xffffffff
0x5d2 DUP15
0x5d3 AND
0x5d4 MUL
0x5d5 DUP2
0x5d6 MSTORE
0x5d7 PUSH1 0x1
0x5d9 PUSH1 0xa0
0x5db PUSH1 0x2
0x5dd EXP
0x5de SUB
0x5df SWAP12
0x5e0 DUP13
0x5e1 AND
0x5e2 PUSH1 0x4
0x5e4 DUP3
0x5e5 ADD
0x5e6 MSTORE
0x5e7 PUSH1 0x24
0x5e9 DUP2
0x5ea ADD
0x5eb SWAP11
0x5ec SWAP1
0x5ed SWAP11
0x5ee MSTORE
0x5ef SWAP8
0x5f0 DUP11
0x5f1 AND
0x5f2 PUSH1 0x44
0x5f4 DUP11
0x5f5 ADD
0x5f6 MSTORE
0x5f7 PUSH1 0x64
0x5f9 DUP10
0x5fa ADD
0x5fb SWAP7
0x5fc SWAP1
0x5fd SWAP7
0x5fe MSTORE
0x5ff PUSH1 0x84
0x601 DUP9
0x602 ADD
0x603 SWAP5
0x604 SWAP1
0x605 SWAP5
0x606 MSTORE
0x607 PUSH1 0xa4
0x609 DUP8
0x60a ADD
0x60b SWAP3
0x60c SWAP1
0x60d SWAP3
0x60e MSTORE
0x60f SWAP1
0x610 SWAP6
0x611 AND
0x612 PUSH1 0xc4
0x614 DUP6
0x615 ADD
0x616 MSTORE
0x617 PUSH1 0xff
0x619 SWAP1
0x61a SWAP5
0x61b AND
0x61c PUSH1 0xe4
0x61e DUP5
0x61f ADD
0x620 MSTORE
0x621 PUSH2 0x104
0x624 DUP4
0x625 ADD
0x626 SWAP4
0x627 SWAP1
0x628 SWAP4
0x629 MSTORE
0x62a PUSH2 0x124
0x62d DUP3
0x62e ADD
0x62f SWAP3
0x630 SWAP1
0x631 SWAP3
0x632 MSTORE
0x633 PUSH2 0x144
0x636 DUP2
0x637 ADD
0x638 SWAP2
0x639 SWAP1
0x63a SWAP2
0x63b MSTORE
0x63c PUSH2 0x164
0x63f ADD
0x640 PUSH1 0x0
0x642 PUSH1 0x40
0x644 MLOAD
0x645 DUP1
0x646 DUP4
0x647 SUB
0x648 DUP2
0x649 PUSH1 0x0
0x64b DUP8
0x64c DUP1
0x64d EXTCODESIZE
0x64e ISZERO
0x64f ISZERO
0x650 PUSH2 0x658
0x653 JUMPI
---
0x5bf: JUMPDEST 
0x5c0: V546 = 0x20
0x5c2: V547 = MUL 0x20 0x8
0x5c3: V548 = ADD 0x100 S1
0x5c4: V549 = M[V548]
0x5c5: V550 = 0x40
0x5c7: V551 = M[0x40]
0x5c8: V552 = 0xe0
0x5ca: V553 = 0x2
0x5cc: V554 = EXP 0x2 0xe0
0x5cd: V555 = 0xffffffff
0x5d3: V556 = AND 0xa19b14a 0xffffffff
0x5d4: V557 = MUL 0xa19b14a 0x100000000000000000000000000000000000000000000000000000000
0x5d6: M[V551] = 0xa19b14a00000000000000000000000000000000000000000000000000000000
0x5d7: V558 = 0x1
0x5d9: V559 = 0xa0
0x5db: V560 = 0x2
0x5dd: V561 = EXP 0x2 0xa0
0x5de: V562 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5e1: V563 = AND 0xffffffffffffffffffffffffffffffffffffffff V514
0x5e2: V564 = 0x4
0x5e5: V565 = ADD V551 0x4
0x5e6: M[V565] = V563
0x5e7: V566 = 0x24
0x5ea: V567 = ADD V551 0x24
0x5ee: M[V567] = V519
0x5f1: V568 = AND 0xffffffffffffffffffffffffffffffffffffffff S9
0x5f2: V569 = 0x44
0x5f5: V570 = ADD V551 0x44
0x5f6: M[V570] = V568
0x5f7: V571 = 0x64
0x5fa: V572 = ADD V551 0x64
0x5fe: M[V572] = V524
0x5ff: V573 = 0x84
0x602: V574 = ADD V551 0x84
0x606: M[V574] = V529
0x607: V575 = 0xa4
0x60a: V576 = ADD V551 0xa4
0x60e: M[V576] = V534
0x611: V577 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x612: V578 = 0xc4
0x615: V579 = ADD V551 0xc4
0x616: M[V579] = V577
0x617: V580 = 0xff
0x61b: V581 = AND S4 0xff
0x61c: V582 = 0xe4
0x61f: V583 = ADD V551 0xe4
0x620: M[V583] = V581
0x621: V584 = 0x104
0x625: V585 = ADD V551 0x104
0x629: M[V585] = V539
0x62a: V586 = 0x124
0x62e: V587 = ADD V551 0x124
0x632: M[V587] = V544
0x633: V588 = 0x144
0x637: V589 = ADD V551 0x144
0x63b: M[V589] = V549
0x63c: V590 = 0x164
0x63f: V591 = ADD 0x164 V551
0x640: V592 = 0x0
0x642: V593 = 0x40
0x644: V594 = M[0x40]
0x647: V595 = SUB V591 V594
0x649: V596 = 0x0
0x64d: V597 = EXTCODESIZE V512
0x64e: V598 = ISZERO V597
0x64f: V599 = ISZERO V598
0x650: V600 = 0x658
0x653: JUMPI 0x658 V599
---
Entry stack: [V12, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, V512, 0xa19b14a, V514, V519, S9, V524, V529, V534, S5, S4, V539, V544, S1, 0x8]
Stack pops: 14
Stack additions: [S13, S12, V591, 0x0, V594, V595, V594, 0x0, S13]
Exit stack: [V12, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, V512, 0xa19b14a, V591, 0x0, V594, V595, V594, 0x0, V512]

================================

Block 0x654
[0x654:0x657]
---
Predecessors: [0x5bf]
Successors: []
---
0x654 PUSH1 0x0
0x656 DUP1
0x657 REVERT
---
0x654: V601 = 0x0
0x657: REVERT 0x0 0x0
---
Entry stack: [V12, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V512, 0xa19b14a, V591, 0x0, V594, V595, V594, 0x0, V512]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V512, 0xa19b14a, V591, 0x0, V594, V595, V594, 0x0, V512]

================================

Block 0x658
[0x658:0x664]
---
Predecessors: [0x5bf]
Successors: [0x665, 0x669]
---
0x658 JUMPDEST
0x659 PUSH2 0x2c6
0x65c GAS
0x65d SUB
0x65e CALL
0x65f ISZERO
0x660 ISZERO
0x661 PUSH2 0x669
0x664 JUMPI
---
0x658: JUMPDEST 
0x659: V602 = 0x2c6
0x65c: V603 = GAS
0x65d: V604 = SUB V603 0x2c6
0x65e: V605 = CALL V604 V512 0x0 V594 V595 V594 0x0
0x65f: V606 = ISZERO V605
0x660: V607 = ISZERO V606
0x661: V608 = 0x669
0x664: JUMPI 0x669 V607
---
Entry stack: [V12, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V512, 0xa19b14a, V591, 0x0, V594, V595, V594, 0x0, V512]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V512, 0xa19b14a, V591]

================================

Block 0x665
[0x665:0x668]
---
Predecessors: [0x658]
Successors: []
---
0x665 PUSH1 0x0
0x667 DUP1
0x668 REVERT
---
0x665: V609 = 0x0
0x668: REVERT 0x0 0x0
---
Entry stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V512, 0xa19b14a, V591]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V512, 0xa19b14a, V591]

================================

Block 0x669
[0x669:0x684]
---
Predecessors: [0x658]
Successors: [0x685]
---
0x669 JUMPDEST
0x66a POP
0x66b POP
0x66c PUSH1 0x1
0x66e DUP1
0x66f SLOAD
0x670 PUSH1 0x1
0x672 PUSH1 0xa0
0x674 PUSH1 0x2
0x676 EXP
0x677 SUB
0x678 AND
0x679 SWAP2
0x67a POP
0x67b PUSH4 0xa19b14a
0x680 SWAP1
0x681 DUP10
0x682 SWAP1
0x683 DUP5
0x684 SWAP1
---
0x669: JUMPDEST 
0x66c: V610 = 0x1
0x66f: V611 = S[0x1]
0x670: V612 = 0x1
0x672: V613 = 0xa0
0x674: V614 = 0x2
0x676: V615 = EXP 0x2 0xa0
0x677: V616 = SUB 0x10000000000000000000000000000000000000000 0x1
0x678: V617 = AND 0xffffffffffffffffffffffffffffffffffffffff V611
0x67b: V618 = 0xa19b14a
---
Entry stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V512, 0xa19b14a, V591]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, V617, 0xa19b14a, S9, S3, 0x1]
Exit stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V617, 0xa19b14a, S9, S3, 0x1]

================================

Block 0x685
[0x685:0x699]
---
Predecessors: [0x669]
Successors: [0x69a]
---
0x685 JUMPDEST
0x686 PUSH1 0x20
0x688 MUL
0x689 ADD
0x68a MLOAD
0x68b PUSH1 0x2
0x68d SLOAD
0x68e PUSH1 0x1
0x690 PUSH1 0xa0
0x692 PUSH1 0x2
0x694 EXP
0x695 SUB
0x696 AND
0x697 DUP6
0x698 PUSH1 0x3
---
0x685: JUMPDEST 
0x686: V619 = 0x20
0x688: V620 = MUL 0x20 0x1
0x689: V621 = ADD 0x20 S1
0x68a: V622 = M[V621]
0x68b: V623 = 0x2
0x68d: V624 = S[0x2]
0x68e: V625 = 0x1
0x690: V626 = 0xa0
0x692: V627 = 0x2
0x694: V628 = EXP 0x2 0xa0
0x695: V629 = SUB 0x10000000000000000000000000000000000000000 0x1
0x696: V630 = AND 0xffffffffffffffffffffffffffffffffffffffff V624
0x698: V631 = 0x3
---
Entry stack: [V12, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V617, 0xa19b14a, S2, S1, 0x1]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, V622, V630, S5, 0x3]
Exit stack: [V12, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V617, 0xa19b14a, S2, V622, V630, S5, 0x3]

================================

Block 0x69a
[0x69a:0x6a2]
---
Predecessors: [0x685]
Successors: [0x6a3]
---
0x69a JUMPDEST
0x69b PUSH1 0x20
0x69d MUL
0x69e ADD
0x69f MLOAD
0x6a0 DUP7
0x6a1 PUSH1 0x5
---
0x69a: JUMPDEST 
0x69b: V632 = 0x20
0x69d: V633 = MUL 0x20 0x3
0x69e: V634 = ADD 0x60 S1
0x69f: V635 = M[V634]
0x6a1: V636 = 0x5
---
Entry stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, V617, 0xa19b14a, S4, V622, V630, S1, 0x3]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, V635, S7, 0x5]
Exit stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, V617, 0xa19b14a, S4, V622, V630, V635, S7, 0x5]

================================

Block 0x6a3
[0x6a3:0x6ab]
---
Predecessors: [0x69a]
Successors: [0x6ac]
---
0x6a3 JUMPDEST
0x6a4 PUSH1 0x20
0x6a6 MUL
0x6a7 ADD
0x6a8 MLOAD
0x6a9 DUP8
0x6aa PUSH1 0x7
---
0x6a3: JUMPDEST 
0x6a4: V637 = 0x20
0x6a6: V638 = MUL 0x20 0x5
0x6a7: V639 = ADD 0xa0 S1
0x6a8: V640 = M[V639]
0x6aa: V641 = 0x7
---
Entry stack: [V12, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, V617, 0xa19b14a, S5, V622, V630, V635, S1, 0x5]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, V640, S8, 0x7]
Exit stack: [V12, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, V617, 0xa19b14a, S5, V622, V630, V635, V640, S8, 0x7]

================================

Block 0x6ac
[0x6ac:0x6b6]
---
Predecessors: [0x6a3]
Successors: [0x6b7]
---
0x6ac JUMPDEST
0x6ad PUSH1 0x20
0x6af MUL
0x6b0 ADD
0x6b1 MLOAD
0x6b2 DUP13
0x6b3 DUP12
0x6b4 DUP12
0x6b5 PUSH1 0x1
---
0x6ac: JUMPDEST 
0x6ad: V642 = 0x20
0x6af: V643 = MUL 0x20 0x7
0x6b0: V644 = ADD 0xe0 S1
0x6b1: V645 = M[V644]
0x6b5: V646 = 0x1
---
Entry stack: [V12, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V617, 0xa19b14a, S6, V622, V630, V635, V640, S1, 0x7]
Stack pops: 14
Stack additions: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V645, S13, S11, S10, 0x1]
Exit stack: [V12, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V617, 0xa19b14a, S6, V622, V630, V635, V640, V645, S13, S11, S10, 0x1]

================================

Block 0x6b7
[0x6b7:0x6bf]
---
Predecessors: [0x6ac]
Successors: [0x6c0]
---
0x6b7 JUMPDEST
0x6b8 PUSH1 0x20
0x6ba MUL
0x6bb ADD
0x6bc MLOAD
0x6bd DUP13
0x6be PUSH1 0x3
---
0x6b7: JUMPDEST 
0x6b8: V647 = 0x20
0x6ba: V648 = MUL 0x20 0x1
0x6bb: V649 = ADD 0x20 S1
0x6bc: V650 = M[V649]
0x6be: V651 = 0x3
---
Entry stack: [V12, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, V617, 0xa19b14a, S9, V622, V630, V635, V640, V645, S3, S2, S1, 0x1]
Stack pops: 14
Stack additions: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V650, S13, 0x3]
Exit stack: [V12, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, V617, 0xa19b14a, S9, V622, V630, V635, V640, V645, S3, S2, V650, S13, 0x3]

================================

Block 0x6c0
[0x6c0:0x6c8]
---
Predecessors: [0x6b7]
Successors: [0x6c9]
---
0x6c0 JUMPDEST
0x6c1 PUSH1 0x20
0x6c3 MUL
0x6c4 ADD
0x6c5 MLOAD
0x6c6 DUP13
0x6c7 PUSH1 0x9
---
0x6c0: JUMPDEST 
0x6c1: V652 = 0x20
0x6c3: V653 = MUL 0x20 0x3
0x6c4: V654 = ADD 0x60 S1
0x6c5: V655 = M[V654]
0x6c7: V656 = 0x9
---
Entry stack: [V12, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, V617, 0xa19b14a, S10, V622, V630, V635, V640, V645, S4, S3, V650, S1, 0x3]
Stack pops: 14
Stack additions: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V655, S13, 0x9]
Exit stack: [V12, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, V617, 0xa19b14a, S10, V622, V630, V635, V640, V645, S4, S3, V650, V655, S13, 0x9]

================================

Block 0x6c9
[0x6c9:0x75d]
---
Predecessors: [0x6c0]
Successors: [0x75e, 0x762]
---
0x6c9 JUMPDEST
0x6ca PUSH1 0x20
0x6cc MUL
0x6cd ADD
0x6ce MLOAD
0x6cf PUSH1 0x40
0x6d1 MLOAD
0x6d2 PUSH1 0xe0
0x6d4 PUSH1 0x2
0x6d6 EXP
0x6d7 PUSH4 0xffffffff
0x6dc DUP15
0x6dd AND
0x6de MUL
0x6df DUP2
0x6e0 MSTORE
0x6e1 PUSH1 0x1
0x6e3 PUSH1 0xa0
0x6e5 PUSH1 0x2
0x6e7 EXP
0x6e8 SUB
0x6e9 SWAP12
0x6ea DUP13
0x6eb AND
0x6ec PUSH1 0x4
0x6ee DUP3
0x6ef ADD
0x6f0 MSTORE
0x6f1 PUSH1 0x24
0x6f3 DUP2
0x6f4 ADD
0x6f5 SWAP11
0x6f6 SWAP1
0x6f7 SWAP11
0x6f8 MSTORE
0x6f9 SWAP8
0x6fa DUP11
0x6fb AND
0x6fc PUSH1 0x44
0x6fe DUP11
0x6ff ADD
0x700 MSTORE
0x701 PUSH1 0x64
0x703 DUP10
0x704 ADD
0x705 SWAP7
0x706 SWAP1
0x707 SWAP7
0x708 MSTORE
0x709 PUSH1 0x84
0x70b DUP9
0x70c ADD
0x70d SWAP5
0x70e SWAP1
0x70f SWAP5
0x710 MSTORE
0x711 PUSH1 0xa4
0x713 DUP8
0x714 ADD
0x715 SWAP3
0x716 SWAP1
0x717 SWAP3
0x718 MSTORE
0x719 SWAP1
0x71a SWAP6
0x71b AND
0x71c PUSH1 0xc4
0x71e DUP6
0x71f ADD
0x720 MSTORE
0x721 PUSH1 0xff
0x723 SWAP1
0x724 SWAP5
0x725 AND
0x726 PUSH1 0xe4
0x728 DUP5
0x729 ADD
0x72a MSTORE
0x72b PUSH2 0x104
0x72e DUP4
0x72f ADD
0x730 SWAP4
0x731 SWAP1
0x732 SWAP4
0x733 MSTORE
0x734 PUSH2 0x124
0x737 DUP3
0x738 ADD
0x739 SWAP3
0x73a SWAP1
0x73b SWAP3
0x73c MSTORE
0x73d PUSH2 0x144
0x740 DUP2
0x741 ADD
0x742 SWAP2
0x743 SWAP1
0x744 SWAP2
0x745 MSTORE
0x746 PUSH2 0x164
0x749 ADD
0x74a PUSH1 0x0
0x74c PUSH1 0x40
0x74e MLOAD
0x74f DUP1
0x750 DUP4
0x751 SUB
0x752 DUP2
0x753 PUSH1 0x0
0x755 DUP8
0x756 DUP1
0x757 EXTCODESIZE
0x758 ISZERO
0x759 ISZERO
0x75a PUSH2 0x762
0x75d JUMPI
---
0x6c9: JUMPDEST 
0x6ca: V657 = 0x20
0x6cc: V658 = MUL 0x20 0x9
0x6cd: V659 = ADD 0x120 S1
0x6ce: V660 = M[V659]
0x6cf: V661 = 0x40
0x6d1: V662 = M[0x40]
0x6d2: V663 = 0xe0
0x6d4: V664 = 0x2
0x6d6: V665 = EXP 0x2 0xe0
0x6d7: V666 = 0xffffffff
0x6dd: V667 = AND 0xa19b14a 0xffffffff
0x6de: V668 = MUL 0xa19b14a 0x100000000000000000000000000000000000000000000000000000000
0x6e0: M[V662] = 0xa19b14a00000000000000000000000000000000000000000000000000000000
0x6e1: V669 = 0x1
0x6e3: V670 = 0xa0
0x6e5: V671 = 0x2
0x6e7: V672 = EXP 0x2 0xa0
0x6e8: V673 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6eb: V674 = AND 0xffffffffffffffffffffffffffffffffffffffff S11
0x6ec: V675 = 0x4
0x6ef: V676 = ADD V662 0x4
0x6f0: M[V676] = V674
0x6f1: V677 = 0x24
0x6f4: V678 = ADD V662 0x24
0x6f8: M[V678] = V622
0x6fb: V679 = AND 0xffffffffffffffffffffffffffffffffffffffff V630
0x6fc: V680 = 0x44
0x6ff: V681 = ADD V662 0x44
0x700: M[V681] = V679
0x701: V682 = 0x64
0x704: V683 = ADD V662 0x64
0x708: M[V683] = V635
0x709: V684 = 0x84
0x70c: V685 = ADD V662 0x84
0x710: M[V685] = V640
0x711: V686 = 0xa4
0x714: V687 = ADD V662 0xa4
0x718: M[V687] = V645
0x71b: V688 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x71c: V689 = 0xc4
0x71f: V690 = ADD V662 0xc4
0x720: M[V690] = V688
0x721: V691 = 0xff
0x725: V692 = AND S4 0xff
0x726: V693 = 0xe4
0x729: V694 = ADD V662 0xe4
0x72a: M[V694] = V692
0x72b: V695 = 0x104
0x72f: V696 = ADD V662 0x104
0x733: M[V696] = V650
0x734: V697 = 0x124
0x738: V698 = ADD V662 0x124
0x73c: M[V698] = V655
0x73d: V699 = 0x144
0x741: V700 = ADD V662 0x144
0x745: M[V700] = V660
0x746: V701 = 0x164
0x749: V702 = ADD 0x164 V662
0x74a: V703 = 0x0
0x74c: V704 = 0x40
0x74e: V705 = M[0x40]
0x751: V706 = SUB V702 V705
0x753: V707 = 0x0
0x757: V708 = EXTCODESIZE V617
0x758: V709 = ISZERO V708
0x759: V710 = ISZERO V709
0x75a: V711 = 0x762
0x75d: JUMPI 0x762 V710
---
Entry stack: [V12, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, V617, 0xa19b14a, S11, V622, V630, V635, V640, V645, S5, S4, V650, V655, S1, 0x9]
Stack pops: 14
Stack additions: [S13, S12, V702, 0x0, V705, V706, V705, 0x0, S13]
Exit stack: [V12, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, V617, 0xa19b14a, V702, 0x0, V705, V706, V705, 0x0, V617]

================================

Block 0x75e
[0x75e:0x761]
---
Predecessors: [0x6c9]
Successors: []
---
0x75e PUSH1 0x0
0x760 DUP1
0x761 REVERT
---
0x75e: V712 = 0x0
0x761: REVERT 0x0 0x0
---
Entry stack: [V12, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V617, 0xa19b14a, V702, 0x0, V705, V706, V705, 0x0, V617]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V617, 0xa19b14a, V702, 0x0, V705, V706, V705, 0x0, V617]

================================

Block 0x762
[0x762:0x76e]
---
Predecessors: [0x6c9, 0x910, 0xaa2]
Successors: [0x76f, 0x773]
---
0x762 JUMPDEST
0x763 PUSH2 0x2c6
0x766 GAS
0x767 SUB
0x768 CALL
0x769 ISZERO
0x76a ISZERO
0x76b PUSH2 0x773
0x76e JUMPI
---
0x762: JUMPDEST 
0x763: V713 = 0x2c6
0x766: V714 = GAS
0x767: V715 = SUB V714 0x2c6
0x768: V716 = CALL V715 S0 0x0 S2 S3 S4 0x0
0x769: V717 = ISZERO V716
0x76a: V718 = ISZERO V717
0x76b: V719 = 0x773
0x76e: JUMPI 0x773 V718
---
Entry stack: [V12, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6]

================================

Block 0x76f
[0x76f:0x772]
---
Predecessors: [0x762]
Successors: []
---
0x76f PUSH1 0x0
0x771 DUP1
0x772 REVERT
---
0x76f: V720 = 0x0
0x772: REVERT 0x0 0x0
---
Entry stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x773
[0x773:0x776]
---
Predecessors: [0x762, 0x9ae, 0xb3d, 0xcda, 0xd00, 0xd14, 0x1087]
Successors: [0x777]
---
0x773 JUMPDEST
0x774 POP
0x775 POP
0x776 POP
---
0x773: JUMPDEST 
---
Entry stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3]

================================

Block 0x777
[0x777:0x77f]
---
Predecessors: [0x565, 0x773, 0x867, 0x87b, 0xa00, 0xa14]
Successors: [0xb4]
---
0x777 JUMPDEST
0x778 POP
0x779 POP
0x77a POP
0x77b POP
0x77c POP
0x77d POP
0x77e POP
0x77f JUMP
---
0x777: JUMPDEST 
0x77f: JUMP S7
---
Entry stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 8
Stack additions: []
Exit stack: [V12, S11, S10, S9, S8]

================================

Block 0x780
[0x780:0x799]
---
Predecessors: [0x173]
Successors: [0x79a, 0x79e]
---
0x780 JUMPDEST
0x781 PUSH1 0x3
0x783 SLOAD
0x784 PUSH1 0x0
0x786 SWAP1
0x787 CALLER
0x788 PUSH1 0x1
0x78a PUSH1 0xa0
0x78c PUSH1 0x2
0x78e EXP
0x78f SUB
0x790 SWAP1
0x791 DUP2
0x792 AND
0x793 SWAP2
0x794 AND
0x795 EQ
0x796 PUSH2 0x79e
0x799 JUMPI
---
0x780: JUMPDEST 
0x781: V721 = 0x3
0x783: V722 = S[0x3]
0x784: V723 = 0x0
0x787: V724 = CALLER
0x788: V725 = 0x1
0x78a: V726 = 0xa0
0x78c: V727 = 0x2
0x78e: V728 = EXP 0x2 0xa0
0x78f: V729 = SUB 0x10000000000000000000000000000000000000000 0x1
0x792: V730 = AND 0xffffffffffffffffffffffffffffffffffffffff V724
0x794: V731 = AND V722 0xffffffffffffffffffffffffffffffffffffffff
0x795: V732 = EQ V731 V730
0x796: V733 = 0x79e
0x799: JUMPI 0x79e V732
---
Entry stack: [V12, 0xb4, V121]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0xb4, V121, 0x0]

================================

Block 0x79a
[0x79a:0x79d]
---
Predecessors: [0x780]
Successors: []
---
0x79a PUSH1 0x0
0x79c DUP1
0x79d REVERT
---
0x79a: V734 = 0x0
0x79d: REVERT 0x0 0x0
---
Entry stack: [V12, 0xb4, V121, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb4, V121, 0x0]

================================

Block 0x79e
[0x79e:0x7e3]
---
Predecessors: [0x780]
Successors: [0x7e4, 0x7e8]
---
0x79e JUMPDEST
0x79f POP
0x7a0 PUSH1 0x0
0x7a2 SLOAD
0x7a3 PUSH1 0x1
0x7a5 PUSH1 0xa0
0x7a7 PUSH1 0x2
0x7a9 EXP
0x7aa SUB
0x7ab AND
0x7ac DUP1
0x7ad PUSH4 0x2e1a7d4d
0x7b2 DUP4
0x7b3 PUSH1 0x40
0x7b5 MLOAD
0x7b6 PUSH1 0xe0
0x7b8 PUSH1 0x2
0x7ba EXP
0x7bb PUSH4 0xffffffff
0x7c0 DUP5
0x7c1 AND
0x7c2 MUL
0x7c3 DUP2
0x7c4 MSTORE
0x7c5 PUSH1 0x4
0x7c7 DUP2
0x7c8 ADD
0x7c9 SWAP2
0x7ca SWAP1
0x7cb SWAP2
0x7cc MSTORE
0x7cd PUSH1 0x24
0x7cf ADD
0x7d0 PUSH1 0x0
0x7d2 PUSH1 0x40
0x7d4 MLOAD
0x7d5 DUP1
0x7d6 DUP4
0x7d7 SUB
0x7d8 DUP2
0x7d9 PUSH1 0x0
0x7db DUP8
0x7dc DUP1
0x7dd EXTCODESIZE
0x7de ISZERO
0x7df ISZERO
0x7e0 PUSH2 0x7e8
0x7e3 JUMPI
---
0x79e: JUMPDEST 
0x7a0: V735 = 0x0
0x7a2: V736 = S[0x0]
0x7a3: V737 = 0x1
0x7a5: V738 = 0xa0
0x7a7: V739 = 0x2
0x7a9: V740 = EXP 0x2 0xa0
0x7aa: V741 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7ab: V742 = AND 0xffffffffffffffffffffffffffffffffffffffff V736
0x7ad: V743 = 0x2e1a7d4d
0x7b3: V744 = 0x40
0x7b5: V745 = M[0x40]
0x7b6: V746 = 0xe0
0x7b8: V747 = 0x2
0x7ba: V748 = EXP 0x2 0xe0
0x7bb: V749 = 0xffffffff
0x7c1: V750 = AND 0x2e1a7d4d 0xffffffff
0x7c2: V751 = MUL 0x2e1a7d4d 0x100000000000000000000000000000000000000000000000000000000
0x7c4: M[V745] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
0x7c5: V752 = 0x4
0x7c8: V753 = ADD V745 0x4
0x7cc: M[V753] = V121
0x7cd: V754 = 0x24
0x7cf: V755 = ADD 0x24 V745
0x7d0: V756 = 0x0
0x7d2: V757 = 0x40
0x7d4: V758 = M[0x40]
0x7d7: V759 = SUB V755 V758
0x7d9: V760 = 0x0
0x7dd: V761 = EXTCODESIZE V742
0x7de: V762 = ISZERO V761
0x7df: V763 = ISZERO V762
0x7e0: V764 = 0x7e8
0x7e3: JUMPI 0x7e8 V763
---
Entry stack: [V12, 0xb4, V121, 0x0]
Stack pops: 2
Stack additions: [S1, V742, V742, 0x2e1a7d4d, V755, 0x0, V758, V759, V758, 0x0, V742]
Exit stack: [V12, 0xb4, V121, V742, V742, 0x2e1a7d4d, V755, 0x0, V758, V759, V758, 0x0, V742]

================================

Block 0x7e4
[0x7e4:0x7e7]
---
Predecessors: [0x79e]
Successors: []
---
0x7e4 PUSH1 0x0
0x7e6 DUP1
0x7e7 REVERT
---
0x7e4: V765 = 0x0
0x7e7: REVERT 0x0 0x0
---
Entry stack: [V12, 0xb4, V121, V742, V742, 0x2e1a7d4d, V755, 0x0, V758, V759, V758, 0x0, V742]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb4, V121, V742, V742, 0x2e1a7d4d, V755, 0x0, V758, V759, V758, 0x0, V742]

================================

Block 0x7e8
[0x7e8:0x7f4]
---
Predecessors: [0x79e]
Successors: [0x7f5, 0x7f9]
---
0x7e8 JUMPDEST
0x7e9 PUSH2 0x2c6
0x7ec GAS
0x7ed SUB
0x7ee CALL
0x7ef ISZERO
0x7f0 ISZERO
0x7f1 PUSH2 0x7f9
0x7f4 JUMPI
---
0x7e8: JUMPDEST 
0x7e9: V766 = 0x2c6
0x7ec: V767 = GAS
0x7ed: V768 = SUB V767 0x2c6
0x7ee: V769 = CALL V768 V742 0x0 V758 V759 V758 0x0
0x7ef: V770 = ISZERO V769
0x7f0: V771 = ISZERO V770
0x7f1: V772 = 0x7f9
0x7f4: JUMPI 0x7f9 V771
---
Entry stack: [V12, 0xb4, V121, V742, V742, 0x2e1a7d4d, V755, 0x0, V758, V759, V758, 0x0, V742]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xb4, V121, V742, V742, 0x2e1a7d4d, V755]

================================

Block 0x7f5
[0x7f5:0x7f8]
---
Predecessors: [0x7e8]
Successors: []
---
0x7f5 PUSH1 0x0
0x7f7 DUP1
0x7f8 REVERT
---
0x7f5: V773 = 0x0
0x7f8: REVERT 0x0 0x0
---
Entry stack: [V12, 0xb4, V121, V742, V742, 0x2e1a7d4d, V755]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb4, V121, V742, V742, 0x2e1a7d4d, V755]

================================

Block 0x7f9
[0x7f9:0x825]
---
Predecessors: [0x7e8]
Successors: [0x826]
---
0x7f9 JUMPDEST
0x7fa POP
0x7fb POP
0x7fc PUSH1 0x3
0x7fe SLOAD
0x7ff PUSH1 0x1
0x801 PUSH1 0xa0
0x803 PUSH1 0x2
0x805 EXP
0x806 SUB
0x807 AND
0x808 SWAP1
0x809 POP
0x80a DUP3
0x80b ISZERO
0x80c PUSH2 0x8fc
0x80f MUL
0x810 DUP4
0x811 PUSH1 0x40
0x813 MLOAD
0x814 PUSH1 0x0
0x816 PUSH1 0x40
0x818 MLOAD
0x819 DUP1
0x81a DUP4
0x81b SUB
0x81c DUP2
0x81d DUP6
0x81e DUP9
0x81f DUP9
0x820 CALL
0x821 POP
0x822 POP
0x823 POP
0x824 POP
0x825 POP
---
0x7f9: JUMPDEST 
0x7fc: V774 = 0x3
0x7fe: V775 = S[0x3]
0x7ff: V776 = 0x1
0x801: V777 = 0xa0
0x803: V778 = 0x2
0x805: V779 = EXP 0x2 0xa0
0x806: V780 = SUB 0x10000000000000000000000000000000000000000 0x1
0x807: V781 = AND 0xffffffffffffffffffffffffffffffffffffffff V775
0x80b: V782 = ISZERO V121
0x80c: V783 = 0x8fc
0x80f: V784 = MUL 0x8fc V782
0x811: V785 = 0x40
0x813: V786 = M[0x40]
0x814: V787 = 0x0
0x816: V788 = 0x40
0x818: V789 = M[0x40]
0x81b: V790 = SUB V786 V789
0x820: V791 = CALL V784 V781 V121 V789 V790 V789 0x0
---
Entry stack: [V12, 0xb4, V121, V742, V742, 0x2e1a7d4d, V755]
Stack pops: 5
Stack additions: [S4, S3]
Exit stack: [V12, 0xb4, V121, V742]

================================

Block 0x826
[0x826:0x826]
---
Predecessors: [0x7f9]
Successors: [0x827]
---
0x826 JUMPDEST
---
0x826: JUMPDEST 
---
Entry stack: [V12, 0xb4, V121, V742]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb4, V121, V742]

================================

Block 0x827
[0x827:0x82a]
---
Predecessors: [0x826]
Successors: [0xb4]
---
0x827 JUMPDEST
0x828 POP
0x829 POP
0x82a JUMP
---
0x827: JUMPDEST 
0x82a: JUMP 0xb4
---
Entry stack: [V12, 0xb4, V121, V742]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x82b
[0x82b:0x838]
---
Predecessors: [0x18b]
Successors: [0x839, 0x83a]
---
0x82b JUMPDEST
0x82c PUSH1 0x0
0x82e DUP2
0x82f PUSH1 0x9
0x831 DUP2
0x832 MLOAD
0x833 DUP2
0x834 LT
0x835 PUSH2 0x83a
0x838 JUMPI
---
0x82b: JUMPDEST 
0x82c: V792 = 0x0
0x82f: V793 = 0x9
0x832: V794 = M[V157]
0x834: V795 = LT 0x9 V794
0x835: V796 = 0x83a
0x838: JUMPI 0x83a V795
---
Entry stack: [V12, 0xb4, V135, V138, V142, V144, V146, V157]
Stack pops: 1
Stack additions: [S0, 0x0, S0, 0x9]
Exit stack: [V12, 0xb4, V135, V138, V142, V144, V146, V157, 0x0, V157, 0x9]

================================

Block 0x839
[0x839:0x839]
---
Predecessors: [0x82b]
Successors: []
---
0x839 INVALID
---
0x839: INVALID 
---
Entry stack: [V12, 0xb4, V135, V138, V142, V144, V146, V157, 0x0, V157, 0x9]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb4, V135, V138, V142, V144, V146, V157, 0x0, V157, 0x9]

================================

Block 0x83a
[0x83a:0x85f]
---
Predecessors: [0x82b]
Successors: [0xb5f]
---
0x83a JUMPDEST
0x83b SWAP1
0x83c PUSH1 0x20
0x83e ADD
0x83f SWAP1
0x840 PUSH1 0x20
0x842 MUL
0x843 ADD
0x844 MLOAD
0x845 PUSH1 0x2
0x847 SLOAD
0x848 PUSH2 0x860
0x84b SWAP1
0x84c DUP10
0x84d SWAP1
0x84e PUSH1 0x1
0x850 PUSH1 0xa0
0x852 PUSH1 0x2
0x854 EXP
0x855 SUB
0x856 AND
0x857 DUP10
0x858 DUP10
0x859 DUP10
0x85a DUP10
0x85b DUP10
0x85c PUSH2 0xb5f
0x85f JUMP
---
0x83a: JUMPDEST 
0x83c: V797 = 0x20
0x83e: V798 = ADD 0x20 V157
0x840: V799 = 0x20
0x842: V800 = MUL 0x20 0x9
0x843: V801 = ADD 0x120 V798
0x844: V802 = M[V801]
0x845: V803 = 0x2
0x847: V804 = S[0x2]
0x848: V805 = 0x860
0x84e: V806 = 0x1
0x850: V807 = 0xa0
0x852: V808 = 0x2
0x854: V809 = EXP 0x2 0xa0
0x855: V810 = SUB 0x10000000000000000000000000000000000000000 0x1
0x856: V811 = AND 0xffffffffffffffffffffffffffffffffffffffff V804
0x85c: V812 = 0xb5f
0x85f: JUMP 0xb5f
---
Entry stack: [V12, 0xb4, V135, V138, V142, V144, V146, V157, 0x0, V157, 0x9]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, V802, 0x860, S8, V811, S7, S6, S5, S4, S3]
Exit stack: [V12, 0xb4, V135, V138, V142, V144, V146, V157, 0x0, V802, 0x860, V135, V811, V138, V142, V144, V146, V157]

================================

Block 0x860
[0x860:0x866]
---
Predecessors: [0xc85]
Successors: [0x867, 0x86b]
---
0x860 JUMPDEST
0x861 LT
0x862 ISZERO
0x863 PUSH2 0x86b
0x866 JUMPI
---
0x860: JUMPDEST 
0x861: V813 = LT S0 S1
0x862: V814 = ISZERO V813
0x863: V815 = 0x86b
0x866: JUMPI 0x86b V814
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x867
[0x867:0x86a]
---
Predecessors: [0x860]
Successors: [0x777]
---
0x867 PUSH2 0x777
0x86a JUMP
---
0x867: V816 = 0x777
0x86a: JUMP 0x777
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x86b
[0x86b:0x873]
---
Predecessors: [0x860]
Successors: [0xf2d]
---
0x86b JUMPDEST
0x86c PUSH2 0x874
0x86f CALLER
0x870 PUSH2 0xf2d
0x873 JUMP
---
0x86b: JUMPDEST 
0x86c: V817 = 0x874
0x86f: V818 = CALLER
0x870: V819 = 0xf2d
0x873: JUMP 0xf2d
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x874, V818]
Exit stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x874, V818]

================================

Block 0x874
[0x874:0x87a]
---
Predecessors: [0xf4a]
Successors: [0x87b, 0x87f]
---
0x874 JUMPDEST
0x875 ISZERO
0x876 ISZERO
0x877 PUSH2 0x87f
0x87a JUMPI
---
0x874: JUMPDEST 
0x875: V820 = ISZERO V1489
0x876: V821 = ISZERO V820
0x877: V822 = 0x87f
0x87a: JUMPI 0x87f V821
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1489]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x87b
[0x87b:0x87e]
---
Predecessors: [0x874]
Successors: [0x777]
---
0x87b PUSH2 0x777
0x87e JUMP
---
0x87b: V823 = 0x777
0x87e: JUMP 0x777
---
Entry stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x87f
[0x87f:0x8a2]
---
Predecessors: [0x874]
Successors: [0x8a3, 0x8a4]
---
0x87f JUMPDEST
0x880 POP
0x881 PUSH1 0x0
0x883 DUP1
0x884 SLOAD
0x885 PUSH1 0x1
0x887 PUSH1 0xa0
0x889 PUSH1 0x2
0x88b EXP
0x88c SUB
0x88d AND
0x88e SWAP1
0x88f DUP2
0x890 SWAP1
0x891 PUSH4 0xa19b14a
0x896 SWAP1
0x897 DUP10
0x898 SWAP1
0x899 DUP6
0x89a SWAP1
0x89b DUP2
0x89c MLOAD
0x89d DUP2
0x89e LT
0x89f PUSH2 0x8a4
0x8a2 JUMPI
---
0x87f: JUMPDEST 
0x881: V824 = 0x0
0x884: V825 = S[0x0]
0x885: V826 = 0x1
0x887: V827 = 0xa0
0x889: V828 = 0x2
0x88b: V829 = EXP 0x2 0xa0
0x88c: V830 = SUB 0x10000000000000000000000000000000000000000 0x1
0x88d: V831 = AND 0xffffffffffffffffffffffffffffffffffffffff V825
0x891: V832 = 0xa19b14a
0x89c: V833 = M[S1]
0x89e: V834 = LT 0x0 V833
0x89f: V835 = 0x8a4
0x8a2: JUMPI 0x8a4 V834
---
Entry stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, V831, V831, 0xa19b14a, S6, S1, 0x0]
Exit stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V831, V831, 0xa19b14a, S6, S1, 0x0]

================================

Block 0x8a3
[0x8a3:0x8a3]
---
Predecessors: [0x87f]
Successors: []
---
0x8a3 INVALID
---
0x8a3: INVALID 
---
Entry stack: [V12, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, V831, V831, 0xa19b14a, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, V831, V831, 0xa19b14a, S2, S1, 0x0]

================================

Block 0x8a4
[0x8a4:0x8c5]
---
Predecessors: [0x87f]
Successors: [0x8c6, 0x8c7]
---
0x8a4 JUMPDEST
0x8a5 SWAP1
0x8a6 PUSH1 0x20
0x8a8 ADD
0x8a9 SWAP1
0x8aa PUSH1 0x20
0x8ac MUL
0x8ad ADD
0x8ae MLOAD
0x8af PUSH1 0x2
0x8b1 SLOAD
0x8b2 PUSH1 0x1
0x8b4 PUSH1 0xa0
0x8b6 PUSH1 0x2
0x8b8 EXP
0x8b9 SUB
0x8ba AND
0x8bb DUP7
0x8bc PUSH1 0x1
0x8be DUP2
0x8bf MLOAD
0x8c0 DUP2
0x8c1 LT
0x8c2 PUSH2 0x8c7
0x8c5 JUMPI
---
0x8a4: JUMPDEST 
0x8a6: V836 = 0x20
0x8a8: V837 = ADD 0x20 S1
0x8aa: V838 = 0x20
0x8ac: V839 = MUL 0x20 0x0
0x8ad: V840 = ADD 0x0 V837
0x8ae: V841 = M[V840]
0x8af: V842 = 0x2
0x8b1: V843 = S[0x2]
0x8b2: V844 = 0x1
0x8b4: V845 = 0xa0
0x8b6: V846 = 0x2
0x8b8: V847 = EXP 0x2 0xa0
0x8b9: V848 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8ba: V849 = AND 0xffffffffffffffffffffffffffffffffffffffff V843
0x8bc: V850 = 0x1
0x8bf: V851 = M[S6]
0x8c1: V852 = LT 0x1 V851
0x8c2: V853 = 0x8c7
0x8c5: JUMPI 0x8c7 V852
---
Entry stack: [V12, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, V831, V831, 0xa19b14a, S2, S1, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V841, V849, S6, 0x1]
Exit stack: [V12, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, V831, V831, 0xa19b14a, S2, V841, V849, S6, 0x1]

================================

Block 0x8c6
[0x8c6:0x8c6]
---
Predecessors: [0x8a4]
Successors: []
---
0x8c6 INVALID
---
0x8c6: INVALID 
---
Entry stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, V831, V831, 0xa19b14a, S4, V841, V849, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, V831, V831, 0xa19b14a, S4, V841, V849, S1, 0x1]

================================

Block 0x8c7
[0x8c7:0x8dc]
---
Predecessors: [0x8a4, 0xa42]
Successors: [0x8dd, 0x8de]
---
0x8c7 JUMPDEST
0x8c8 SWAP1
0x8c9 PUSH1 0x20
0x8cb ADD
0x8cc SWAP1
0x8cd PUSH1 0x20
0x8cf MUL
0x8d0 ADD
0x8d1 MLOAD
0x8d2 DUP8
0x8d3 PUSH1 0x2
0x8d5 DUP2
0x8d6 MLOAD
0x8d7 DUP2
0x8d8 LT
0x8d9 PUSH2 0x8de
0x8dc JUMPI
---
0x8c7: JUMPDEST 
0x8c9: V854 = 0x20
0x8cb: V855 = ADD 0x20 S1
0x8cd: V856 = 0x20
0x8cf: V857 = MUL 0x20 0x1
0x8d0: V858 = ADD 0x20 V855
0x8d1: V859 = M[V858]
0x8d3: V860 = 0x2
0x8d6: V861 = M[S8]
0x8d8: V862 = LT 0x2 V861
0x8d9: V863 = 0x8de
0x8dc: JUMPI 0x8de V862
---
Entry stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0xa19b14a, S4, S3, S2, S1, 0x1]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, V859, S8, 0x2]
Exit stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0xa19b14a, S4, S3, S2, V859, S8, 0x2]

================================

Block 0x8dd
[0x8dd:0x8dd]
---
Predecessors: [0x8c7]
Successors: []
---
0x8dd INVALID
---
0x8dd: INVALID 
---
Entry stack: [V12, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, 0xa19b14a, S5, S4, S3, V859, S1, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, 0xa19b14a, S5, S4, S3, V859, S1, 0x2]

================================

Block 0x8de
[0x8de:0x8f3]
---
Predecessors: [0x8c7, 0xa5a]
Successors: [0x8f4, 0x8f5]
---
0x8de JUMPDEST
0x8df SWAP1
0x8e0 PUSH1 0x20
0x8e2 ADD
0x8e3 SWAP1
0x8e4 PUSH1 0x20
0x8e6 MUL
0x8e7 ADD
0x8e8 MLOAD
0x8e9 DUP9
0x8ea PUSH1 0x3
0x8ec DUP2
0x8ed MLOAD
0x8ee DUP2
0x8ef LT
0x8f0 PUSH2 0x8f5
0x8f3 JUMPI
---
0x8de: JUMPDEST 
0x8e0: V864 = 0x20
0x8e2: V865 = ADD 0x20 S1
0x8e4: V866 = 0x20
0x8e6: V867 = MUL 0x20 0x2
0x8e7: V868 = ADD 0x40 V865
0x8e8: V869 = M[V868]
0x8ea: V870 = 0x3
0x8ed: V871 = M[S9]
0x8ef: V872 = LT 0x3 V871
0x8f0: V873 = 0x8f5
0x8f3: JUMPI 0x8f5 V872
---
Entry stack: [V12, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x2]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, V869, S9, 0x3]
Exit stack: [V12, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V869, S9, 0x3]

================================

Block 0x8f4
[0x8f4:0x8f4]
---
Predecessors: [0x8de]
Successors: []
---
0x8f4 INVALID
---
0x8f4: INVALID 
---
Entry stack: [V12, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V869, S1, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V869, S1, 0x3]

================================

Block 0x8f5
[0x8f5:0x90e]
---
Predecessors: [0x8de, 0xa70]
Successors: [0x90f, 0x910]
---
0x8f5 JUMPDEST
0x8f6 SWAP1
0x8f7 PUSH1 0x20
0x8f9 ADD
0x8fa SWAP1
0x8fb PUSH1 0x20
0x8fd MUL
0x8fe ADD
0x8ff MLOAD
0x900 DUP14
0x901 DUP14
0x902 DUP14
0x903 DUP14
0x904 DUP14
0x905 PUSH1 0x4
0x907 DUP2
0x908 MLOAD
0x909 DUP2
0x90a LT
0x90b PUSH2 0x910
0x90e JUMPI
---
0x8f5: JUMPDEST 
0x8f7: V874 = 0x20
0x8f9: V875 = ADD 0x20 S1
0x8fb: V876 = 0x20
0x8fd: V877 = MUL 0x20 0x3
0x8fe: V878 = ADD 0x60 V875
0x8ff: V879 = M[V878]
0x905: V880 = 0x4
0x908: V881 = M[S10]
0x90a: V882 = LT 0x4 V881
0x90b: V883 = 0x910
0x90e: JUMPI 0x910 V882
---
Entry stack: [V12, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x3]
Stack pops: 15
Stack additions: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V879, S14, S13, S12, S11, S10, 0x4]
Exit stack: [V12, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V879, S14, S13, S12, S11, S10, 0x4]

================================

Block 0x90f
[0x90f:0x90f]
---
Predecessors: [0x8f5]
Successors: []
---
0x90f INVALID
---
0x90f: INVALID 
---
Entry stack: [V12, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, V879, S5, S4, S3, S2, S1, 0x4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, V879, S5, S4, S3, S2, S1, 0x4]

================================

Block 0x910
[0x910:0x9a9]
---
Predecessors: [0x8f5, 0xa87]
Successors: [0x762, 0x9aa]
---
0x910 JUMPDEST
0x911 SWAP1
0x912 PUSH1 0x20
0x914 ADD
0x915 SWAP1
0x916 PUSH1 0x20
0x918 MUL
0x919 ADD
0x91a MLOAD
0x91b PUSH1 0x40
0x91d MLOAD
0x91e PUSH1 0xe0
0x920 PUSH1 0x2
0x922 EXP
0x923 PUSH4 0xffffffff
0x928 DUP15
0x929 AND
0x92a MUL
0x92b DUP2
0x92c MSTORE
0x92d PUSH1 0x1
0x92f PUSH1 0xa0
0x931 PUSH1 0x2
0x933 EXP
0x934 SUB
0x935 SWAP12
0x936 DUP13
0x937 AND
0x938 PUSH1 0x4
0x93a DUP3
0x93b ADD
0x93c MSTORE
0x93d PUSH1 0x24
0x93f DUP2
0x940 ADD
0x941 SWAP11
0x942 SWAP1
0x943 SWAP11
0x944 MSTORE
0x945 SWAP8
0x946 DUP11
0x947 AND
0x948 PUSH1 0x44
0x94a DUP11
0x94b ADD
0x94c MSTORE
0x94d PUSH1 0x64
0x94f DUP10
0x950 ADD
0x951 SWAP7
0x952 SWAP1
0x953 SWAP7
0x954 MSTORE
0x955 PUSH1 0x84
0x957 DUP9
0x958 ADD
0x959 SWAP5
0x95a SWAP1
0x95b SWAP5
0x95c MSTORE
0x95d PUSH1 0xa4
0x95f DUP8
0x960 ADD
0x961 SWAP3
0x962 SWAP1
0x963 SWAP3
0x964 MSTORE
0x965 SWAP1
0x966 SWAP6
0x967 AND
0x968 PUSH1 0xc4
0x96a DUP6
0x96b ADD
0x96c MSTORE
0x96d PUSH1 0xff
0x96f SWAP1
0x970 SWAP5
0x971 AND
0x972 PUSH1 0xe4
0x974 DUP5
0x975 ADD
0x976 MSTORE
0x977 PUSH2 0x104
0x97a DUP4
0x97b ADD
0x97c SWAP4
0x97d SWAP1
0x97e SWAP4
0x97f MSTORE
0x980 PUSH2 0x124
0x983 DUP3
0x984 ADD
0x985 SWAP3
0x986 SWAP1
0x987 SWAP3
0x988 MSTORE
0x989 PUSH2 0x144
0x98c DUP2
0x98d ADD
0x98e SWAP2
0x98f SWAP1
0x990 SWAP2
0x991 MSTORE
0x992 PUSH2 0x164
0x995 ADD
0x996 PUSH1 0x0
0x998 PUSH1 0x40
0x99a MLOAD
0x99b DUP1
0x99c DUP4
0x99d SUB
0x99e DUP2
0x99f PUSH1 0x0
0x9a1 DUP8
0x9a2 DUP1
0x9a3 EXTCODESIZE
0x9a4 ISZERO
0x9a5 ISZERO
0x9a6 PUSH2 0x762
0x9a9 JUMPI
---
0x910: JUMPDEST 
0x912: V884 = 0x20
0x914: V885 = ADD 0x20 S1
0x916: V886 = 0x20
0x918: V887 = MUL 0x20 0x4
0x919: V888 = ADD 0x80 V885
0x91a: V889 = M[V888]
0x91b: V890 = 0x40
0x91d: V891 = M[0x40]
0x91e: V892 = 0xe0
0x920: V893 = 0x2
0x922: V894 = EXP 0x2 0xe0
0x923: V895 = 0xffffffff
0x929: V896 = AND S12 0xffffffff
0x92a: V897 = MUL V896 0x100000000000000000000000000000000000000000000000000000000
0x92c: M[V891] = V897
0x92d: V898 = 0x1
0x92f: V899 = 0xa0
0x931: V900 = 0x2
0x933: V901 = EXP 0x2 0xa0
0x934: V902 = SUB 0x10000000000000000000000000000000000000000 0x1
0x937: V903 = AND 0xffffffffffffffffffffffffffffffffffffffff S11
0x938: V904 = 0x4
0x93b: V905 = ADD V891 0x4
0x93c: M[V905] = V903
0x93d: V906 = 0x24
0x940: V907 = ADD V891 0x24
0x944: M[V907] = S10
0x947: V908 = AND 0xffffffffffffffffffffffffffffffffffffffff S9
0x948: V909 = 0x44
0x94b: V910 = ADD V891 0x44
0x94c: M[V910] = V908
0x94d: V911 = 0x64
0x950: V912 = ADD V891 0x64
0x954: M[V912] = S8
0x955: V913 = 0x84
0x958: V914 = ADD V891 0x84
0x95c: M[V914] = S7
0x95d: V915 = 0xa4
0x960: V916 = ADD V891 0xa4
0x964: M[V916] = S6
0x967: V917 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x968: V918 = 0xc4
0x96b: V919 = ADD V891 0xc4
0x96c: M[V919] = V917
0x96d: V920 = 0xff
0x971: V921 = AND S4 0xff
0x972: V922 = 0xe4
0x975: V923 = ADD V891 0xe4
0x976: M[V923] = V921
0x977: V924 = 0x104
0x97b: V925 = ADD V891 0x104
0x97f: M[V925] = S3
0x980: V926 = 0x124
0x984: V927 = ADD V891 0x124
0x988: M[V927] = S2
0x989: V928 = 0x144
0x98d: V929 = ADD V891 0x144
0x991: M[V929] = V889
0x992: V930 = 0x164
0x995: V931 = ADD 0x164 V891
0x996: V932 = 0x0
0x998: V933 = 0x40
0x99a: V934 = M[0x40]
0x99d: V935 = SUB V931 V934
0x99f: V936 = 0x0
0x9a3: V937 = EXTCODESIZE S13
0x9a4: V938 = ISZERO V937
0x9a5: V939 = ISZERO V938
0x9a6: V940 = 0x762
0x9a9: JUMPI 0x762 V939
---
Entry stack: [V12, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x4]
Stack pops: 14
Stack additions: [S13, S12, V931, 0x0, V934, V935, V934, 0x0, S13]
Exit stack: [V12, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, V931, 0x0, V934, V935, V934, 0x0, S13]

================================

Block 0x9aa
[0x9aa:0x9ad]
---
Predecessors: [0x910]
Successors: []
---
0x9aa PUSH1 0x0
0x9ac DUP1
0x9ad REVERT
---
0x9aa: V941 = 0x0
0x9ad: REVERT 0x0 0x0
---
Entry stack: [V12, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, V931, 0x0, V934, V935, V934, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, V931, 0x0, V934, V935, V934, 0x0, S0]

================================

Block 0x9ae
[0x9ae:0x9ba]
---
Predecessors: []
Successors: [0x773, 0x9bb]
---
0x9ae JUMPDEST
0x9af PUSH2 0x2c6
0x9b2 GAS
0x9b3 SUB
0x9b4 CALL
0x9b5 ISZERO
0x9b6 ISZERO
0x9b7 PUSH2 0x773
0x9ba JUMPI
---
0x9ae: JUMPDEST 
0x9af: V942 = 0x2c6
0x9b2: V943 = GAS
0x9b3: V944 = SUB V943 0x2c6
0x9b4: V945 = CALL V944 S0 S1 S2 S3 S4 S5
0x9b5: V946 = ISZERO V945
0x9b6: V947 = ISZERO V946
0x9b7: V948 = 0x773
0x9ba: JUMPI 0x773 V947
---
Entry stack: []
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0x9bb
[0x9bb:0x9c2]
---
Predecessors: [0x9ae]
Successors: [0x9c3]
---
0x9bb PUSH1 0x0
0x9bd DUP1
0x9be REVERT
0x9bf JUMPDEST
0x9c0 POP
0x9c1 POP
0x9c2 POP
---
0x9bb: V949 = 0x0
0x9be: REVERT 0x0 0x0
0x9bf: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x9c3
[0x9c3:0x9cb]
---
Predecessors: [0x9bb]
Successors: []
Has unresolved jump.
---
0x9c3 JUMPDEST
0x9c4 POP
0x9c5 POP
0x9c6 POP
0x9c7 POP
0x9c8 POP
0x9c9 POP
0x9ca POP
0x9cb JUMP
---
0x9c3: JUMPDEST 
0x9cb: JUMP S7
---
Entry stack: []
Stack pops: 8
Stack additions: []
Exit stack: []

================================

Block 0x9cc
[0x9cc:0x9da]
---
Predecessors: [0x202]
Successors: [0x20a]
---
0x9cc JUMPDEST
0x9cd PUSH1 0x2
0x9cf SLOAD
0x9d0 PUSH1 0x1
0x9d2 PUSH1 0xa0
0x9d4 PUSH1 0x2
0x9d6 EXP
0x9d7 SUB
0x9d8 AND
0x9d9 DUP2
0x9da JUMP
---
0x9cc: JUMPDEST 
0x9cd: V950 = 0x2
0x9cf: V951 = S[0x2]
0x9d0: V952 = 0x1
0x9d2: V953 = 0xa0
0x9d4: V954 = 0x2
0x9d6: V955 = EXP 0x2 0xa0
0x9d7: V956 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9d8: V957 = AND 0xffffffffffffffffffffffffffffffffffffffff V951
0x9da: JUMP 0x20a
---
Entry stack: [V12, 0x20a]
Stack pops: 1
Stack additions: [S0, V957]
Exit stack: [V12, 0x20a, V957]

================================

Block 0x9db
[0x9db:0x9f8]
---
Predecessors: [0x231]
Successors: [0xd5c]
---
0x9db JUMPDEST
0x9dc PUSH1 0x2
0x9de SLOAD
0x9df PUSH1 0x0
0x9e1 SWAP1
0x9e2 PUSH2 0x9f9
0x9e5 SWAP1
0x9e6 PUSH1 0x1
0x9e8 PUSH1 0xa0
0x9ea PUSH1 0x2
0x9ec EXP
0x9ed SUB
0x9ee AND
0x9ef DUP9
0x9f0 DUP9
0x9f1 DUP9
0x9f2 DUP9
0x9f3 DUP9
0x9f4 DUP9
0x9f5 PUSH2 0xd5c
0x9f8 JUMP
---
0x9db: JUMPDEST 
0x9dc: V958 = 0x2
0x9de: V959 = S[0x2]
0x9df: V960 = 0x0
0x9e2: V961 = 0x9f9
0x9e6: V962 = 0x1
0x9e8: V963 = 0xa0
0x9ea: V964 = 0x2
0x9ec: V965 = EXP 0x2 0xa0
0x9ed: V966 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9ee: V967 = AND 0xffffffffffffffffffffffffffffffffffffffff V959
0x9f5: V968 = 0xd5c
0x9f8: JUMP 0xd5c
---
Entry stack: [V12, 0xb4, V196, V199, V203, V205, V207, V218]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, 0x0, 0x9f9, V967, S5, S4, S3, S2, S1, S0]
Exit stack: [V12, 0xb4, V196, V199, V203, V205, V207, V218, 0x0, 0x9f9, V967, V196, V199, V203, V205, V207, V218]

================================

Block 0x9f9
[0x9f9:0x9ff]
---
Predecessors: [0xc85]
Successors: [0xa00, 0xa04]
---
0x9f9 JUMPDEST
0x9fa ISZERO
0x9fb ISZERO
0x9fc PUSH2 0xa04
0x9ff JUMPI
---
0x9f9: JUMPDEST 
0x9fa: V969 = ISZERO S0
0x9fb: V970 = ISZERO V969
0x9fc: V971 = 0xa04
0x9ff: JUMPI 0xa04 V970
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0xa00
[0xa00:0xa03]
---
Predecessors: [0x9f9]
Successors: [0x777]
---
0xa00 PUSH2 0x777
0xa03 JUMP
---
0xa00: V972 = 0x777
0xa03: JUMP 0x777
---
Entry stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xa04
[0xa04:0xa0c]
---
Predecessors: [0x9f9]
Successors: [0xf2d]
---
0xa04 JUMPDEST
0xa05 PUSH2 0xa0d
0xa08 CALLER
0xa09 PUSH2 0xf2d
0xa0c JUMP
---
0xa04: JUMPDEST 
0xa05: V973 = 0xa0d
0xa08: V974 = CALLER
0xa09: V975 = 0xf2d
0xa0c: JUMP 0xf2d
---
Entry stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0xa0d, V974]
Exit stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0xa0d, V974]

================================

Block 0xa0d
[0xa0d:0xa13]
---
Predecessors: [0xf4a]
Successors: [0xa14, 0xa18]
---
0xa0d JUMPDEST
0xa0e ISZERO
0xa0f ISZERO
0xa10 PUSH2 0xa18
0xa13 JUMPI
---
0xa0d: JUMPDEST 
0xa0e: V976 = ISZERO S0
0xa0f: V977 = ISZERO V976
0xa10: V978 = 0xa18
0xa13: JUMPI 0xa18 V977
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0xa14
[0xa14:0xa17]
---
Predecessors: [0xa0d]
Successors: [0x777]
---
0xa14 PUSH2 0x777
0xa17 JUMP
---
0xa14: V979 = 0x777
0xa17: JUMP 0x777
---
Entry stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xa18
[0xa18:0xa40]
---
Predecessors: [0xa0d]
Successors: [0xa41, 0xa42]
---
0xa18 JUMPDEST
0xa19 POP
0xa1a PUSH1 0x0
0xa1c DUP1
0xa1d SLOAD
0xa1e PUSH1 0x2
0xa20 SLOAD
0xa21 PUSH1 0x1
0xa23 PUSH1 0xa0
0xa25 PUSH1 0x2
0xa27 EXP
0xa28 SUB
0xa29 SWAP2
0xa2a DUP3
0xa2b AND
0xa2c SWAP3
0xa2d DUP4
0xa2e SWAP3
0xa2f PUSH4 0xa19b14a
0xa34 SWAP3
0xa35 AND
0xa36 SWAP1
0xa37 DUP6
0xa38 SWAP1
0xa39 DUP2
0xa3a MLOAD
0xa3b DUP2
0xa3c LT
0xa3d PUSH2 0xa42
0xa40 JUMPI
---
0xa18: JUMPDEST 
0xa1a: V980 = 0x0
0xa1d: V981 = S[0x0]
0xa1e: V982 = 0x2
0xa20: V983 = S[0x2]
0xa21: V984 = 0x1
0xa23: V985 = 0xa0
0xa25: V986 = 0x2
0xa27: V987 = EXP 0x2 0xa0
0xa28: V988 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa2b: V989 = AND 0xffffffffffffffffffffffffffffffffffffffff V981
0xa2f: V990 = 0xa19b14a
0xa35: V991 = AND V983 0xffffffffffffffffffffffffffffffffffffffff
0xa3a: V992 = M[S1]
0xa3c: V993 = LT 0x0 V992
0xa3d: V994 = 0xa42
0xa40: JUMPI 0xa42 V993
---
Entry stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, V989, V989, 0xa19b14a, V991, S1, 0x0]
Exit stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V989, V989, 0xa19b14a, V991, S1, 0x0]

================================

Block 0xa41
[0xa41:0xa41]
---
Predecessors: [0xa18]
Successors: []
---
0xa41 INVALID
---
0xa41: INVALID 
---
Entry stack: [V12, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, V989, V989, 0xa19b14a, V991, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, V989, V989, 0xa19b14a, V991, S1, 0x0]

================================

Block 0xa42
[0xa42:0xa58]
---
Predecessors: [0xa18]
Successors: [0x8c7, 0xa59]
---
0xa42 JUMPDEST
0xa43 SWAP1
0xa44 PUSH1 0x20
0xa46 ADD
0xa47 SWAP1
0xa48 PUSH1 0x20
0xa4a MUL
0xa4b ADD
0xa4c MLOAD
0xa4d DUP11
0xa4e DUP7
0xa4f PUSH1 0x1
0xa51 DUP2
0xa52 MLOAD
0xa53 DUP2
0xa54 LT
0xa55 PUSH2 0x8c7
0xa58 JUMPI
---
0xa42: JUMPDEST 
0xa44: V995 = 0x20
0xa46: V996 = ADD 0x20 S1
0xa48: V997 = 0x20
0xa4a: V998 = MUL 0x20 0x0
0xa4b: V999 = ADD 0x0 V996
0xa4c: V1000 = M[V999]
0xa4f: V1001 = 0x1
0xa52: V1002 = M[S6]
0xa54: V1003 = LT 0x1 V1002
0xa55: V1004 = 0x8c7
0xa58: JUMPI 0x8c7 V1003
---
Entry stack: [V12, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, V989, V989, 0xa19b14a, V991, S1, 0x0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V1000, S11, S6, 0x1]
Exit stack: [V12, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, V989, V989, 0xa19b14a, V991, V1000, S11, S6, 0x1]

================================

Block 0xa59
[0xa59:0xa59]
---
Predecessors: [0xa42]
Successors: []
---
0xa59 INVALID
---
0xa59: INVALID 
---
Entry stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, V989, V989, 0xa19b14a, V991, V1000, S2, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, V989, V989, 0xa19b14a, V991, V1000, S2, S1, 0x1]

================================

Block 0xa5a
[0xa5a:0xa6f]
---
Predecessors: []
Successors: [0x8de, 0xa70]
---
0xa5a JUMPDEST
0xa5b SWAP1
0xa5c PUSH1 0x20
0xa5e ADD
0xa5f SWAP1
0xa60 PUSH1 0x20
0xa62 MUL
0xa63 ADD
0xa64 MLOAD
0xa65 DUP8
0xa66 PUSH1 0x2
0xa68 DUP2
0xa69 MLOAD
0xa6a DUP2
0xa6b LT
0xa6c PUSH2 0x8de
0xa6f JUMPI
---
0xa5a: JUMPDEST 
0xa5c: V1005 = 0x20
0xa5e: V1006 = ADD 0x20 S1
0xa60: V1007 = 0x20
0xa62: V1008 = MUL 0x20 S0
0xa63: V1009 = ADD V1008 V1006
0xa64: V1010 = M[V1009]
0xa66: V1011 = 0x2
0xa69: V1012 = M[S8]
0xa6b: V1013 = LT 0x2 V1012
0xa6c: V1014 = 0x8de
0xa6f: JUMPI 0x8de V1013
---
Entry stack: []
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, V1010, S8, 0x2]
Exit stack: [S8, S7, S6, S5, S4, S3, S2, V1010, S8, 0x2]

================================

Block 0xa70
[0xa70:0xa86]
---
Predecessors: [0xa5a]
Successors: [0x8f5, 0xa87]
---
0xa70 INVALID
0xa71 JUMPDEST
0xa72 SWAP1
0xa73 PUSH1 0x20
0xa75 ADD
0xa76 SWAP1
0xa77 PUSH1 0x20
0xa79 MUL
0xa7a ADD
0xa7b MLOAD
0xa7c DUP9
0xa7d PUSH1 0x3
0xa7f DUP2
0xa80 MLOAD
0xa81 DUP2
0xa82 LT
0xa83 PUSH2 0x8f5
0xa86 JUMPI
---
0xa70: INVALID 
0xa71: JUMPDEST 
0xa73: V1015 = 0x20
0xa75: V1016 = ADD 0x20 S1
0xa77: V1017 = 0x20
0xa79: V1018 = MUL 0x20 S0
0xa7a: V1019 = ADD V1018 V1016
0xa7b: V1020 = M[V1019]
0xa7d: V1021 = 0x3
0xa80: V1022 = M[S9]
0xa82: V1023 = LT 0x3 V1022
0xa83: V1024 = 0x8f5
0xa86: JUMPI 0x8f5 V1023
---
Entry stack: [S9, S8, S7, S6, S5, S4, S3, V1010, S1, 0x2]
Stack pops: 0
Stack additions: [0x3, S9, V1020, S2, S3, S4, S5, S6, S7, S8, S9]
Exit stack: []

================================

Block 0xa87
[0xa87:0xaa1]
---
Predecessors: [0xa70]
Successors: [0x910, 0xaa2]
---
0xa87 INVALID
0xa88 JUMPDEST
0xa89 SWAP1
0xa8a PUSH1 0x20
0xa8c ADD
0xa8d SWAP1
0xa8e PUSH1 0x20
0xa90 MUL
0xa91 ADD
0xa92 MLOAD
0xa93 DUP14
0xa94 DUP14
0xa95 DUP14
0xa96 DUP14
0xa97 DUP14
0xa98 PUSH1 0x4
0xa9a DUP2
0xa9b MLOAD
0xa9c DUP2
0xa9d LT
0xa9e PUSH2 0x910
0xaa1 JUMPI
---
0xa87: INVALID 
0xa88: JUMPDEST 
0xa8a: V1025 = 0x20
0xa8c: V1026 = ADD 0x20 S1
0xa8e: V1027 = 0x20
0xa90: V1028 = MUL 0x20 S0
0xa91: V1029 = ADD V1028 V1026
0xa92: V1030 = M[V1029]
0xa98: V1031 = 0x4
0xa9b: V1032 = M[S10]
0xa9d: V1033 = LT 0x4 V1032
0xa9e: V1034 = 0x910
0xaa1: JUMPI 0x910 V1033
---
Entry stack: [S10, S9, S8, S7, S6, S5, S4, S3, V1020, S1, 0x3]
Stack pops: 0
Stack additions: [0x4, S10, S11, S12, S13, S14, V1030, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14]
Exit stack: []

================================

Block 0xaa2
[0xaa2:0xb3c]
---
Predecessors: [0xa87]
Successors: [0x762, 0xb3d]
---
0xaa2 INVALID
0xaa3 JUMPDEST
0xaa4 SWAP1
0xaa5 PUSH1 0x20
0xaa7 ADD
0xaa8 SWAP1
0xaa9 PUSH1 0x20
0xaab MUL
0xaac ADD
0xaad MLOAD
0xaae PUSH1 0x40
0xab0 MLOAD
0xab1 PUSH1 0xe0
0xab3 PUSH1 0x2
0xab5 EXP
0xab6 PUSH4 0xffffffff
0xabb DUP15
0xabc AND
0xabd MUL
0xabe DUP2
0xabf MSTORE
0xac0 PUSH1 0x1
0xac2 PUSH1 0xa0
0xac4 PUSH1 0x2
0xac6 EXP
0xac7 SUB
0xac8 SWAP12
0xac9 DUP13
0xaca AND
0xacb PUSH1 0x4
0xacd DUP3
0xace ADD
0xacf MSTORE
0xad0 PUSH1 0x24
0xad2 DUP2
0xad3 ADD
0xad4 SWAP11
0xad5 SWAP1
0xad6 SWAP11
0xad7 MSTORE
0xad8 SWAP8
0xad9 DUP11
0xada AND
0xadb PUSH1 0x44
0xadd DUP11
0xade ADD
0xadf MSTORE
0xae0 PUSH1 0x64
0xae2 DUP10
0xae3 ADD
0xae4 SWAP7
0xae5 SWAP1
0xae6 SWAP7
0xae7 MSTORE
0xae8 PUSH1 0x84
0xaea DUP9
0xaeb ADD
0xaec SWAP5
0xaed SWAP1
0xaee SWAP5
0xaef MSTORE
0xaf0 PUSH1 0xa4
0xaf2 DUP8
0xaf3 ADD
0xaf4 SWAP3
0xaf5 SWAP1
0xaf6 SWAP3
0xaf7 MSTORE
0xaf8 SWAP1
0xaf9 SWAP6
0xafa AND
0xafb PUSH1 0xc4
0xafd DUP6
0xafe ADD
0xaff MSTORE
0xb00 PUSH1 0xff
0xb02 SWAP1
0xb03 SWAP5
0xb04 AND
0xb05 PUSH1 0xe4
0xb07 DUP5
0xb08 ADD
0xb09 MSTORE
0xb0a PUSH2 0x104
0xb0d DUP4
0xb0e ADD
0xb0f SWAP4
0xb10 SWAP1
0xb11 SWAP4
0xb12 MSTORE
0xb13 PUSH2 0x124
0xb16 DUP3
0xb17 ADD
0xb18 SWAP3
0xb19 SWAP1
0xb1a SWAP3
0xb1b MSTORE
0xb1c PUSH2 0x144
0xb1f DUP2
0xb20 ADD
0xb21 SWAP2
0xb22 SWAP1
0xb23 SWAP2
0xb24 MSTORE
0xb25 PUSH2 0x164
0xb28 ADD
0xb29 PUSH1 0x0
0xb2b PUSH1 0x40
0xb2d MLOAD
0xb2e DUP1
0xb2f DUP4
0xb30 SUB
0xb31 DUP2
0xb32 PUSH1 0x0
0xb34 DUP8
0xb35 DUP1
0xb36 EXTCODESIZE
0xb37 ISZERO
0xb38 ISZERO
0xb39 PUSH2 0x762
0xb3c JUMPI
---
0xaa2: INVALID 
0xaa3: JUMPDEST 
0xaa5: V1035 = 0x20
0xaa7: V1036 = ADD 0x20 S1
0xaa9: V1037 = 0x20
0xaab: V1038 = MUL 0x20 S0
0xaac: V1039 = ADD V1038 V1036
0xaad: V1040 = M[V1039]
0xaae: V1041 = 0x40
0xab0: V1042 = M[0x40]
0xab1: V1043 = 0xe0
0xab3: V1044 = 0x2
0xab5: V1045 = EXP 0x2 0xe0
0xab6: V1046 = 0xffffffff
0xabc: V1047 = AND S12 0xffffffff
0xabd: V1048 = MUL V1047 0x100000000000000000000000000000000000000000000000000000000
0xabf: M[V1042] = V1048
0xac0: V1049 = 0x1
0xac2: V1050 = 0xa0
0xac4: V1051 = 0x2
0xac6: V1052 = EXP 0x2 0xa0
0xac7: V1053 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaca: V1054 = AND 0xffffffffffffffffffffffffffffffffffffffff S11
0xacb: V1055 = 0x4
0xace: V1056 = ADD V1042 0x4
0xacf: M[V1056] = V1054
0xad0: V1057 = 0x24
0xad3: V1058 = ADD V1042 0x24
0xad7: M[V1058] = S10
0xada: V1059 = AND 0xffffffffffffffffffffffffffffffffffffffff S9
0xadb: V1060 = 0x44
0xade: V1061 = ADD V1042 0x44
0xadf: M[V1061] = V1059
0xae0: V1062 = 0x64
0xae3: V1063 = ADD V1042 0x64
0xae7: M[V1063] = S8
0xae8: V1064 = 0x84
0xaeb: V1065 = ADD V1042 0x84
0xaef: M[V1065] = S7
0xaf0: V1066 = 0xa4
0xaf3: V1067 = ADD V1042 0xa4
0xaf7: M[V1067] = S6
0xafa: V1068 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0xafb: V1069 = 0xc4
0xafe: V1070 = ADD V1042 0xc4
0xaff: M[V1070] = V1068
0xb00: V1071 = 0xff
0xb04: V1072 = AND S4 0xff
0xb05: V1073 = 0xe4
0xb08: V1074 = ADD V1042 0xe4
0xb09: M[V1074] = V1072
0xb0a: V1075 = 0x104
0xb0e: V1076 = ADD V1042 0x104
0xb12: M[V1076] = S3
0xb13: V1077 = 0x124
0xb17: V1078 = ADD V1042 0x124
0xb1b: M[V1078] = S2
0xb1c: V1079 = 0x144
0xb20: V1080 = ADD V1042 0x144
0xb24: M[V1080] = V1040
0xb25: V1081 = 0x164
0xb28: V1082 = ADD 0x164 V1042
0xb29: V1083 = 0x0
0xb2b: V1084 = 0x40
0xb2d: V1085 = M[0x40]
0xb30: V1086 = SUB V1082 V1085
0xb32: V1087 = 0x0
0xb36: V1088 = EXTCODESIZE S13
0xb37: V1089 = ISZERO V1088
0xb38: V1090 = ISZERO V1089
0xb39: V1091 = 0x762
0xb3c: JUMPI 0x762 V1090
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, V1030, S5, S4, S3, S2, S1, 0x4]
Stack pops: 0
Stack additions: [S13, 0x0, V1085, V1086, V1085, 0x0, V1082, S12, S13]
Exit stack: []

================================

Block 0xb3d
[0xb3d:0xb4d]
---
Predecessors: [0xaa2]
Successors: [0x773, 0xb4e]
---
0xb3d PUSH1 0x0
0xb3f DUP1
0xb40 REVERT
0xb41 JUMPDEST
0xb42 PUSH2 0x2c6
0xb45 GAS
0xb46 SUB
0xb47 CALL
0xb48 ISZERO
0xb49 ISZERO
0xb4a PUSH2 0x773
0xb4d JUMPI
---
0xb3d: V1092 = 0x0
0xb40: REVERT 0x0 0x0
0xb41: JUMPDEST 
0xb42: V1093 = 0x2c6
0xb45: V1094 = GAS
0xb46: V1095 = SUB V1094 0x2c6
0xb47: V1096 = CALL V1095 S0 S1 S2 S3 S4 S5
0xb48: V1097 = ISZERO V1096
0xb49: V1098 = ISZERO V1097
0xb4a: V1099 = 0x773
0xb4d: JUMPI 0x773 V1098
---
Entry stack: [S8, S7, V1082, 0x0, V1085, V1086, V1085, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb4e
[0xb4e:0xb55]
---
Predecessors: [0xb3d]
Successors: [0xb56]
---
0xb4e PUSH1 0x0
0xb50 DUP1
0xb51 REVERT
0xb52 JUMPDEST
0xb53 POP
0xb54 POP
0xb55 POP
---
0xb4e: V1100 = 0x0
0xb51: REVERT 0x0 0x0
0xb52: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb56
[0xb56:0xb5e]
---
Predecessors: [0xb4e]
Successors: []
Has unresolved jump.
---
0xb56 JUMPDEST
0xb57 POP
0xb58 POP
0xb59 POP
0xb5a POP
0xb5b POP
0xb5c POP
0xb5d POP
0xb5e JUMP
---
0xb56: JUMPDEST 
0xb5e: JUMP S7
---
Entry stack: []
Stack pops: 8
Stack additions: []
Exit stack: []

================================

Block 0xb5f
[0xb5f:0xb7e]
---
Predecessors: [0x2a8, 0x83a, 0xcad]
Successors: [0xb7f, 0xb80]
---
0xb5f JUMPDEST
0xb60 PUSH1 0x0
0xb62 DUP1
0xb63 SLOAD
0xb64 PUSH1 0x1
0xb66 PUSH1 0xa0
0xb68 PUSH1 0x2
0xb6a EXP
0xb6b SUB
0xb6c AND
0xb6d DUP1
0xb6e PUSH4 0xfb6e155f
0xb73 DUP11
0xb74 DUP6
0xb75 PUSH1 0x1
0xb77 DUP2
0xb78 MLOAD
0xb79 DUP2
0xb7a LT
0xb7b PUSH2 0xb80
0xb7e JUMPI
---
0xb5f: JUMPDEST 
0xb60: V1101 = 0x0
0xb63: V1102 = S[0x0]
0xb64: V1103 = 0x1
0xb66: V1104 = 0xa0
0xb68: V1105 = 0x2
0xb6a: V1106 = EXP 0x2 0xa0
0xb6b: V1107 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb6c: V1108 = AND 0xffffffffffffffffffffffffffffffffffffffff V1102
0xb6e: V1109 = 0xfb6e155f
0xb75: V1110 = 0x1
0xb78: V1111 = M[S0]
0xb7a: V1112 = LT 0x1 V1111
0xb7b: V1113 = 0xb80
0xb7e: JUMPI 0xb80 V1112
---
Entry stack: [V12, 0xb4, V309, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x317, 0x860, 0xcd3}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, 0x0, V1108, V1108, 0xfb6e155f, S6, S0, 0x1]
Exit stack: [V12, 0xb4, V309, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x317, 0x860, 0xcd3}, S6, S5, S4, S3, S2, S1, S0, 0x0, V1108, V1108, 0xfb6e155f, S6, S0, 0x1]

================================

Block 0xb7f
[0xb7f:0xb7f]
---
Predecessors: [0xb5f]
Successors: []
---
0xb7f INVALID
---
0xb7f: INVALID 
---
Entry stack: [V12, 0xb4, V309, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, {0x317, 0x860, 0xcd3}, S13, S12, S11, S10, S9, S8, S7, 0x0, V1108, V1108, 0xfb6e155f, S2, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb4, V309, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, {0x317, 0x860, 0xcd3}, S13, S12, S11, S10, S9, S8, S7, 0x0, V1108, V1108, 0xfb6e155f, S2, S1, 0x1]

================================

Block 0xb80
[0xb80:0xb96]
---
Predecessors: [0xb5f]
Successors: [0xb97, 0xb98]
---
0xb80 JUMPDEST
0xb81 SWAP1
0xb82 PUSH1 0x20
0xb84 ADD
0xb85 SWAP1
0xb86 PUSH1 0x20
0xb88 MUL
0xb89 ADD
0xb8a MLOAD
0xb8b DUP12
0xb8c DUP8
0xb8d PUSH1 0x3
0xb8f DUP2
0xb90 MLOAD
0xb91 DUP2
0xb92 LT
0xb93 PUSH2 0xb98
0xb96 JUMPI
---
0xb80: JUMPDEST 
0xb82: V1114 = 0x20
0xb84: V1115 = ADD 0x20 S1
0xb86: V1116 = 0x20
0xb88: V1117 = MUL 0x20 0x1
0xb89: V1118 = ADD 0x20 V1115
0xb8a: V1119 = M[V1118]
0xb8d: V1120 = 0x3
0xb90: V1121 = M[S7]
0xb92: V1122 = LT 0x3 V1121
0xb93: V1123 = 0xb98
0xb96: JUMPI 0xb98 V1122
---
Entry stack: [V12, 0xb4, V309, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, {0x317, 0x860, 0xcd3}, S13, S12, S11, S10, S9, S8, S7, 0x0, V1108, V1108, 0xfb6e155f, S2, S1, 0x1]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V1119, S12, S7, 0x3]
Exit stack: [V12, 0xb4, V309, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, {0x317, 0x860, 0xcd3}, S13, S12, S11, S10, S9, S8, S7, 0x0, V1108, V1108, 0xfb6e155f, S2, V1119, S12, S7, 0x3]

================================

Block 0xb97
[0xb97:0xb97]
---
Predecessors: [0xb80]
Successors: []
---
0xb97 INVALID
---
0xb97: INVALID 
---
Entry stack: [V12, 0xb4, V309, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, {0x317, 0x860, 0xcd3}, S15, S14, S13, S12, S11, S10, S9, 0x0, S7, S6, 0xfb6e155f, S4, V1119, S2, S1, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb4, V309, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, {0x317, 0x860, 0xcd3}, S15, S14, S13, S12, S11, S10, S9, 0x0, S7, S6, 0xfb6e155f, S4, V1119, S2, S1, 0x3]

================================

Block 0xb98
[0xb98:0xbad]
---
Predecessors: [0xb80]
Successors: [0xbae, 0xbaf]
---
0xb98 JUMPDEST
0xb99 SWAP1
0xb9a PUSH1 0x20
0xb9c ADD
0xb9d SWAP1
0xb9e PUSH1 0x20
0xba0 MUL
0xba1 ADD
0xba2 MLOAD
0xba3 DUP9
0xba4 PUSH1 0x5
0xba6 DUP2
0xba7 MLOAD
0xba8 DUP2
0xba9 LT
0xbaa PUSH2 0xbaf
0xbad JUMPI
---
0xb98: JUMPDEST 
0xb9a: V1124 = 0x20
0xb9c: V1125 = ADD 0x20 S1
0xb9e: V1126 = 0x20
0xba0: V1127 = MUL 0x20 0x3
0xba1: V1128 = ADD 0x60 V1125
0xba2: V1129 = M[V1128]
0xba4: V1130 = 0x5
0xba7: V1131 = M[S9]
0xba9: V1132 = LT 0x5 V1131
0xbaa: V1133 = 0xbaf
0xbad: JUMPI 0xbaf V1132
---
Entry stack: [V12, 0xb4, V309, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, {0x317, 0x860, 0xcd3}, S15, S14, S13, S12, S11, S10, S9, 0x0, S7, S6, 0xfb6e155f, S4, V1119, S2, S1, 0x3]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, V1129, S9, 0x5]
Exit stack: [V12, 0xb4, V309, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, {0x317, 0x860, 0xcd3}, S15, S14, S13, S12, S11, S10, S9, 0x0, S7, S6, 0xfb6e155f, S4, V1119, S2, V1129, S9, 0x5]

================================

Block 0xbae
[0xbae:0xbae]
---
Predecessors: [0xb98]
Successors: []
---
0xbae INVALID
---
0xbae: INVALID 
---
Entry stack: [V12, 0xb4, V309, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, {0x317, 0x860, 0xcd3}, S16, S15, S14, S13, S12, S11, S10, 0x0, S8, S7, 0xfb6e155f, S5, S4, S3, V1129, S1, 0x5]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb4, V309, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, {0x317, 0x860, 0xcd3}, S16, S15, S14, S13, S12, S11, S10, 0x0, S8, S7, 0xfb6e155f, S5, S4, S3, V1129, S1, 0x5]

================================

Block 0xbaf
[0xbaf:0xbc4]
---
Predecessors: [0xb98]
Successors: [0xbc5, 0xbc6]
---
0xbaf JUMPDEST
0xbb0 SWAP1
0xbb1 PUSH1 0x20
0xbb3 ADD
0xbb4 SWAP1
0xbb5 PUSH1 0x20
0xbb7 MUL
0xbb8 ADD
0xbb9 MLOAD
0xbba DUP10
0xbbb PUSH1 0x7
0xbbd DUP2
0xbbe MLOAD
0xbbf DUP2
0xbc0 LT
0xbc1 PUSH2 0xbc6
0xbc4 JUMPI
---
0xbaf: JUMPDEST 
0xbb1: V1134 = 0x20
0xbb3: V1135 = ADD 0x20 S1
0xbb5: V1136 = 0x20
0xbb7: V1137 = MUL 0x20 0x5
0xbb8: V1138 = ADD 0xa0 V1135
0xbb9: V1139 = M[V1138]
0xbbb: V1140 = 0x7
0xbbe: V1141 = M[S10]
0xbc0: V1142 = LT 0x7 V1141
0xbc1: V1143 = 0xbc6
0xbc4: JUMPI 0xbc6 V1142
---
Entry stack: [V12, 0xb4, V309, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, {0x317, 0x860, 0xcd3}, S16, S15, S14, S13, S12, S11, S10, 0x0, S8, S7, 0xfb6e155f, S5, S4, S3, V1129, S1, 0x5]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, V1139, S10, 0x7]
Exit stack: [V12, 0xb4, V309, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, {0x317, 0x860, 0xcd3}, S16, S15, S14, S13, S12, S11, S10, 0x0, S8, S7, 0xfb6e155f, S5, S4, S3, V1129, V1139, S10, 0x7]

================================

Block 0xbc5
[0xbc5:0xbc5]
---
Predecessors: [0xbaf]
Successors: []
---
0xbc5 INVALID
---
0xbc5: INVALID 
---
Entry stack: [V12, 0xb4, V309, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, {0x317, 0x860, 0xcd3}, S17, S16, S15, S14, S13, S12, S11, 0x0, S9, S8, 0xfb6e155f, S6, S5, S4, S3, V1139, S1, 0x7]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb4, V309, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, {0x317, 0x860, 0xcd3}, S17, S16, S15, S14, S13, S12, S11, 0x0, S9, S8, 0xfb6e155f, S6, S5, S4, S3, V1139, S1, 0x7]

================================

Block 0xbc6
[0xbc6:0xc63]
---
Predecessors: [0xbaf]
Successors: [0xc64, 0xc68]
---
0xbc6 JUMPDEST
0xbc7 SWAP1
0xbc8 PUSH1 0x20
0xbca ADD
0xbcb SWAP1
0xbcc PUSH1 0x20
0xbce MUL
0xbcf ADD
0xbd0 MLOAD
0xbd1 DUP15
0xbd2 DUP15
0xbd3 DUP15
0xbd4 DUP15
0xbd5 PUSH1 0x0
0xbd7 PUSH1 0x40
0xbd9 MLOAD
0xbda PUSH1 0x20
0xbdc ADD
0xbdd MSTORE
0xbde PUSH1 0x40
0xbe0 MLOAD
0xbe1 PUSH1 0xe0
0xbe3 PUSH1 0x2
0xbe5 EXP
0xbe6 PUSH4 0xffffffff
0xbeb DUP14
0xbec AND
0xbed MUL
0xbee DUP2
0xbef MSTORE
0xbf0 PUSH1 0x1
0xbf2 PUSH1 0xa0
0xbf4 PUSH1 0x2
0xbf6 EXP
0xbf7 SUB
0xbf8 SWAP11
0xbf9 DUP12
0xbfa AND
0xbfb PUSH1 0x4
0xbfd DUP3
0xbfe ADD
0xbff MSTORE
0xc00 PUSH1 0x24
0xc02 DUP2
0xc03 ADD
0xc04 SWAP10
0xc05 SWAP1
0xc06 SWAP10
0xc07 MSTORE
0xc08 SWAP7
0xc09 DUP10
0xc0a AND
0xc0b PUSH1 0x44
0xc0d DUP10
0xc0e ADD
0xc0f MSTORE
0xc10 PUSH1 0x64
0xc12 DUP9
0xc13 ADD
0xc14 SWAP6
0xc15 SWAP1
0xc16 SWAP6
0xc17 MSTORE
0xc18 PUSH1 0x84
0xc1a DUP8
0xc1b ADD
0xc1c SWAP4
0xc1d SWAP1
0xc1e SWAP4
0xc1f MSTORE
0xc20 PUSH1 0xa4
0xc22 DUP7
0xc23 ADD
0xc24 SWAP2
0xc25 SWAP1
0xc26 SWAP2
0xc27 MSTORE
0xc28 SWAP1
0xc29 SWAP5
0xc2a AND
0xc2b PUSH1 0xc4
0xc2d DUP5
0xc2e ADD
0xc2f MSTORE
0xc30 PUSH1 0xff
0xc32 SWAP1
0xc33 SWAP4
0xc34 AND
0xc35 PUSH1 0xe4
0xc37 DUP4
0xc38 ADD
0xc39 MSTORE
0xc3a PUSH2 0x104
0xc3d DUP3
0xc3e ADD
0xc3f SWAP3
0xc40 SWAP1
0xc41 SWAP3
0xc42 MSTORE
0xc43 PUSH2 0x124
0xc46 DUP2
0xc47 ADD
0xc48 SWAP2
0xc49 SWAP1
0xc4a SWAP2
0xc4b MSTORE
0xc4c PUSH2 0x144
0xc4f ADD
0xc50 PUSH1 0x20
0xc52 PUSH1 0x40
0xc54 MLOAD
0xc55 DUP1
0xc56 DUP4
0xc57 SUB
0xc58 DUP2
0xc59 PUSH1 0x0
0xc5b DUP8
0xc5c DUP1
0xc5d EXTCODESIZE
0xc5e ISZERO
0xc5f ISZERO
0xc60 PUSH2 0xc68
0xc63 JUMPI
---
0xbc6: JUMPDEST 
0xbc8: V1144 = 0x20
0xbca: V1145 = ADD 0x20 S1
0xbcc: V1146 = 0x20
0xbce: V1147 = MUL 0x20 0x7
0xbcf: V1148 = ADD 0xe0 V1145
0xbd0: V1149 = M[V1148]
0xbd5: V1150 = 0x0
0xbd7: V1151 = 0x40
0xbd9: V1152 = M[0x40]
0xbda: V1153 = 0x20
0xbdc: V1154 = ADD 0x20 V1152
0xbdd: M[V1154] = 0x0
0xbde: V1155 = 0x40
0xbe0: V1156 = M[0x40]
0xbe1: V1157 = 0xe0
0xbe3: V1158 = 0x2
0xbe5: V1159 = EXP 0x2 0xe0
0xbe6: V1160 = 0xffffffff
0xbec: V1161 = AND 0xfb6e155f 0xffffffff
0xbed: V1162 = MUL 0xfb6e155f 0x100000000000000000000000000000000000000000000000000000000
0xbef: M[V1156] = 0xfb6e155f00000000000000000000000000000000000000000000000000000000
0xbf0: V1163 = 0x1
0xbf2: V1164 = 0xa0
0xbf4: V1165 = 0x2
0xbf6: V1166 = EXP 0x2 0xa0
0xbf7: V1167 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbfa: V1168 = AND 0xffffffffffffffffffffffffffffffffffffffff S6
0xbfb: V1169 = 0x4
0xbfe: V1170 = ADD V1156 0x4
0xbff: M[V1170] = V1168
0xc00: V1171 = 0x24
0xc03: V1172 = ADD V1156 0x24
0xc07: M[V1172] = S5
0xc0a: V1173 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xc0b: V1174 = 0x44
0xc0e: V1175 = ADD V1156 0x44
0xc0f: M[V1175] = V1173
0xc10: V1176 = 0x64
0xc13: V1177 = ADD V1156 0x64
0xc17: M[V1177] = S3
0xc18: V1178 = 0x84
0xc1b: V1179 = ADD V1156 0x84
0xc1f: M[V1179] = V1139
0xc20: V1180 = 0xa4
0xc23: V1181 = ADD V1156 0xa4
0xc27: M[V1181] = V1149
0xc2a: V1182 = AND 0xffffffffffffffffffffffffffffffffffffffff S15
0xc2b: V1183 = 0xc4
0xc2e: V1184 = ADD V1156 0xc4
0xc2f: M[V1184] = V1182
0xc30: V1185 = 0xff
0xc34: V1186 = AND S14 0xff
0xc35: V1187 = 0xe4
0xc38: V1188 = ADD V1156 0xe4
0xc39: M[V1188] = V1186
0xc3a: V1189 = 0x104
0xc3e: V1190 = ADD V1156 0x104
0xc42: M[V1190] = S13
0xc43: V1191 = 0x124
0xc47: V1192 = ADD V1156 0x124
0xc4b: M[V1192] = S12
0xc4c: V1193 = 0x144
0xc4f: V1194 = ADD 0x144 V1156
0xc50: V1195 = 0x20
0xc52: V1196 = 0x40
0xc54: V1197 = M[0x40]
0xc57: V1198 = SUB V1194 V1197
0xc59: V1199 = 0x0
0xc5d: V1200 = EXTCODESIZE S8
0xc5e: V1201 = ISZERO V1200
0xc5f: V1202 = ISZERO V1201
0xc60: V1203 = 0xc68
0xc63: JUMPI 0xc68 V1202
---
Entry stack: [V12, 0xb4, V309, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, {0x317, 0x860, 0xcd3}, S17, S16, S15, S14, S13, S12, S11, 0x0, S9, S8, 0xfb6e155f, S6, S5, S4, S3, V1139, S1, 0x7]
Stack pops: 16
Stack additions: [S15, S14, S13, S12, S11, S10, S9, S8, S7, V1194, 0x20, V1197, V1198, V1197, 0x0, S8]
Exit stack: [V12, 0xb4, V309, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, {0x317, 0x860, 0xcd3}, S17, S16, S15, S14, S13, S12, S11, 0x0, S9, S8, 0xfb6e155f, V1194, 0x20, V1197, V1198, V1197, 0x0, S8]

================================

Block 0xc64
[0xc64:0xc67]
---
Predecessors: [0xbc6]
Successors: []
---
0xc64 PUSH1 0x0
0xc66 DUP1
0xc67 REVERT
---
0xc64: V1204 = 0x0
0xc67: REVERT 0x0 0x0
---
Entry stack: [V12, 0xb4, V309, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, {0x317, 0x860, 0xcd3}, S17, S16, S15, S14, S13, S12, S11, 0x0, S9, S8, 0xfb6e155f, V1194, 0x20, V1197, V1198, V1197, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb4, V309, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, {0x317, 0x860, 0xcd3}, S17, S16, S15, S14, S13, S12, S11, 0x0, S9, S8, 0xfb6e155f, V1194, 0x20, V1197, V1198, V1197, 0x0, S0]

================================

Block 0xc68
[0xc68:0xc74]
---
Predecessors: [0xbc6]
Successors: [0xc75, 0xc79]
---
0xc68 JUMPDEST
0xc69 PUSH2 0x2c6
0xc6c GAS
0xc6d SUB
0xc6e CALL
0xc6f ISZERO
0xc70 ISZERO
0xc71 PUSH2 0xc79
0xc74 JUMPI
---
0xc68: JUMPDEST 
0xc69: V1205 = 0x2c6
0xc6c: V1206 = GAS
0xc6d: V1207 = SUB V1206 0x2c6
0xc6e: V1208 = CALL V1207 S0 0x0 V1197 V1198 V1197 0x20
0xc6f: V1209 = ISZERO V1208
0xc70: V1210 = ISZERO V1209
0xc71: V1211 = 0xc79
0xc74: JUMPI 0xc79 V1210
---
Entry stack: [V12, 0xb4, V309, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, {0x317, 0x860, 0xcd3}, S17, S16, S15, S14, S13, S12, S11, 0x0, S9, S8, 0xfb6e155f, V1194, 0x20, V1197, V1198, V1197, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xb4, V309, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, {0x317, 0x860, 0xcd3}, S17, S16, S15, S14, S13, S12, S11, 0x0, S9, S8, 0xfb6e155f, V1194]

================================

Block 0xc75
[0xc75:0xc78]
---
Predecessors: [0xc68]
Successors: []
---
0xc75 PUSH1 0x0
0xc77 DUP1
0xc78 REVERT
---
0xc75: V1212 = 0x0
0xc78: REVERT 0x0 0x0
---
Entry stack: [V12, 0xb4, V309, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, {0x317, 0x860, 0xcd3}, S11, S10, S9, S8, S7, S6, S5, 0x0, S3, S2, 0xfb6e155f, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb4, V309, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, {0x317, 0x860, 0xcd3}, S11, S10, S9, S8, S7, S6, S5, 0x0, S3, S2, 0xfb6e155f, S0]

================================

Block 0xc79
[0xc79:0xc84]
---
Predecessors: [0xc68]
Successors: [0xc85]
---
0xc79 JUMPDEST
0xc7a POP
0xc7b POP
0xc7c POP
0xc7d PUSH1 0x40
0xc7f MLOAD
0xc80 DUP1
0xc81 MLOAD
0xc82 SWAP3
0xc83 POP
0xc84 POP
---
0xc79: JUMPDEST 
0xc7d: V1213 = 0x40
0xc7f: V1214 = M[0x40]
0xc81: V1215 = M[V1214]
---
Entry stack: [V12, 0xb4, V309, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, {0x317, 0x860, 0xcd3}, S11, S10, S9, S8, S7, S6, S5, 0x0, S3, S2, 0xfb6e155f, S0]
Stack pops: 5
Stack additions: [V1215, S3]
Exit stack: [V12, 0xb4, V309, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, {0x317, 0x860, 0xcd3}, S11, S10, S9, S8, S7, S6, S5, V1215, S3]

================================

Block 0xc85
[0xc85:0xc90]
---
Predecessors: [0xc79, 0xe94, 0xea5]
Successors: [0x317, 0x463, 0x860, 0x9f9, 0xcd3, 0xcf9]
---
0xc85 JUMPDEST
0xc86 POP
0xc87 SWAP8
0xc88 SWAP7
0xc89 POP
0xc8a POP
0xc8b POP
0xc8c POP
0xc8d POP
0xc8e POP
0xc8f POP
0xc90 JUMP
---
0xc85: JUMPDEST 
0xc90: JUMP {0x317, 0x463, 0x860, 0x9f9, 0xcd3, 0xcf9}
---
Entry stack: [V12, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, {0x317, 0x463, 0x860, 0x9f9, 0xcd3, 0xcf9}, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 10
Stack additions: [S1]
Exit stack: [V12, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S1]

================================

Block 0xc91
[0xc91:0xc9f]
---
Predecessors: [0x334]
Successors: [0x20a]
---
0xc91 JUMPDEST
0xc92 PUSH1 0x3
0xc94 SLOAD
0xc95 PUSH1 0x1
0xc97 PUSH1 0xa0
0xc99 PUSH1 0x2
0xc9b EXP
0xc9c SUB
0xc9d AND
0xc9e DUP2
0xc9f JUMP
---
0xc91: JUMPDEST 
0xc92: V1216 = 0x3
0xc94: V1217 = S[0x3]
0xc95: V1218 = 0x1
0xc97: V1219 = 0xa0
0xc99: V1220 = 0x2
0xc9b: V1221 = EXP 0x2 0xa0
0xc9c: V1222 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc9d: V1223 = AND 0xffffffffffffffffffffffffffffffffffffffff V1217
0xc9f: JUMP 0x20a
---
Entry stack: [V12, 0x20a]
Stack pops: 1
Stack additions: [S0, V1223]
Exit stack: [V12, 0x20a, V1223]

================================

Block 0xca0
[0xca0:0xcab]
---
Predecessors: [0x363]
Successors: [0xcac, 0xcad]
---
0xca0 JUMPDEST
0xca1 DUP1
0xca2 PUSH1 0x9
0xca4 DUP2
0xca5 MLOAD
0xca6 DUP2
0xca7 LT
0xca8 PUSH2 0xcad
0xcab JUMPI
---
0xca0: JUMPDEST 
0xca2: V1224 = 0x9
0xca5: V1225 = M[V341]
0xca7: V1226 = LT 0x9 V1225
0xca8: V1227 = 0xcad
0xcab: JUMPI 0xcad V1226
---
Entry stack: [V12, 0xb4, V309, V312, V315, V319, V322, V324, V326, V328, V330, V341]
Stack pops: 1
Stack additions: [S0, S0, 0x9]
Exit stack: [V12, 0xb4, V309, V312, V315, V319, V322, V324, V326, V328, V330, V341, V341, 0x9]

================================

Block 0xcac
[0xcac:0xcac]
---
Predecessors: [0xca0]
Successors: []
---
0xcac INVALID
---
0xcac: INVALID 
---
Entry stack: [V12, 0xb4, V309, V312, V315, V319, V322, V324, V326, V328, V330, V341, V341, 0x9]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb4, V309, V312, V315, V319, V322, V324, V326, V328, V330, V341, V341, 0x9]

================================

Block 0xcad
[0xcad:0xcd2]
---
Predecessors: [0xca0]
Successors: [0xb5f]
---
0xcad JUMPDEST
0xcae SWAP1
0xcaf PUSH1 0x20
0xcb1 ADD
0xcb2 SWAP1
0xcb3 PUSH1 0x20
0xcb5 MUL
0xcb6 ADD
0xcb7 MLOAD
0xcb8 PUSH1 0x2
0xcba SLOAD
0xcbb PUSH2 0xcd3
0xcbe SWAP1
0xcbf DUP13
0xcc0 SWAP1
0xcc1 PUSH1 0x1
0xcc3 PUSH1 0xa0
0xcc5 PUSH1 0x2
0xcc7 EXP
0xcc8 SUB
0xcc9 AND
0xcca DUP12
0xccb DUP11
0xccc DUP10
0xccd DUP9
0xcce DUP9
0xccf PUSH2 0xb5f
0xcd2 JUMP
---
0xcad: JUMPDEST 
0xcaf: V1228 = 0x20
0xcb1: V1229 = ADD 0x20 V341
0xcb3: V1230 = 0x20
0xcb5: V1231 = MUL 0x20 0x9
0xcb6: V1232 = ADD 0x120 V1229
0xcb7: V1233 = M[V1232]
0xcb8: V1234 = 0x2
0xcba: V1235 = S[0x2]
0xcbb: V1236 = 0xcd3
0xcc1: V1237 = 0x1
0xcc3: V1238 = 0xa0
0xcc5: V1239 = 0x2
0xcc7: V1240 = EXP 0x2 0xa0
0xcc8: V1241 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcc9: V1242 = AND 0xffffffffffffffffffffffffffffffffffffffff V1235
0xccf: V1243 = 0xb5f
0xcd2: JUMP 0xb5f
---
Entry stack: [V12, 0xb4, V309, V312, V315, V319, V322, V324, V326, V328, V330, V341, V341, 0x9]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V1233, 0xcd3, S11, V1242, S9, S7, S5, S3, S2]
Exit stack: [V12, 0xb4, V309, V312, V315, V319, V322, V324, V326, V328, V330, V341, V1233, 0xcd3, V309, V1242, V315, V322, V326, V330, V341]

================================

Block 0xcd3
[0xcd3:0xcd9]
---
Predecessors: [0xc85]
Successors: [0xcda, 0xcde]
---
0xcd3 JUMPDEST
0xcd4 LT
0xcd5 ISZERO
0xcd6 PUSH2 0xcde
0xcd9 JUMPI
---
0xcd3: JUMPDEST 
0xcd4: V1244 = LT S0 S1
0xcd5: V1245 = ISZERO V1244
0xcd6: V1246 = 0xcde
0xcd9: JUMPI 0xcde V1245
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0xcda
[0xcda:0xcdd]
---
Predecessors: [0xcd3]
Successors: [0x773]
---
0xcda PUSH2 0x773
0xcdd JUMP
---
0xcda: V1247 = 0x773
0xcdd: JUMP 0x773
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xcde
[0xcde:0xcf8]
---
Predecessors: [0xcd3]
Successors: [0xd5c]
---
0xcde JUMPDEST
0xcdf PUSH1 0x2
0xce1 SLOAD
0xce2 PUSH2 0xcf9
0xce5 SWAP1
0xce6 PUSH1 0x1
0xce8 PUSH1 0xa0
0xcea PUSH1 0x2
0xcec EXP
0xced SUB
0xcee AND
0xcef DUP12
0xcf0 DUP12
0xcf1 DUP11
0xcf2 DUP10
0xcf3 DUP9
0xcf4 DUP8
0xcf5 PUSH2 0xd5c
0xcf8 JUMP
---
0xcde: JUMPDEST 
0xcdf: V1248 = 0x2
0xce1: V1249 = S[0x2]
0xce2: V1250 = 0xcf9
0xce6: V1251 = 0x1
0xce8: V1252 = 0xa0
0xcea: V1253 = 0x2
0xcec: V1254 = EXP 0x2 0xa0
0xced: V1255 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcee: V1256 = AND 0xffffffffffffffffffffffffffffffffffffffff V1249
0xcf5: V1257 = 0xd5c
0xcf8: JUMP 0xd5c
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0xcf9, V1256, S9, S8, S6, S4, S2, S0]
Exit stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0xcf9, V1256, S9, S8, S6, S4, S2, S0]

================================

Block 0xcf9
[0xcf9:0xcff]
---
Predecessors: [0xc85]
Successors: [0xd00, 0xd04]
---
0xcf9 JUMPDEST
0xcfa ISZERO
0xcfb ISZERO
0xcfc PUSH2 0xd04
0xcff JUMPI
---
0xcf9: JUMPDEST 
0xcfa: V1258 = ISZERO S0
0xcfb: V1259 = ISZERO V1258
0xcfc: V1260 = 0xd04
0xcff: JUMPI 0xd04 V1259
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0xd00
[0xd00:0xd03]
---
Predecessors: [0xcf9]
Successors: [0x773]
---
0xd00 PUSH2 0x773
0xd03 JUMP
---
0xd00: V1261 = 0x773
0xd03: JUMP 0x773
---
Entry stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xd04
[0xd04:0xd0c]
---
Predecessors: [0xcf9]
Successors: [0xf2d]
---
0xd04 JUMPDEST
0xd05 PUSH2 0xd0d
0xd08 CALLER
0xd09 PUSH2 0xf2d
0xd0c JUMP
---
0xd04: JUMPDEST 
0xd05: V1262 = 0xd0d
0xd08: V1263 = CALLER
0xd09: V1264 = 0xf2d
0xd0c: JUMP 0xf2d
---
Entry stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0xd0d, V1263]
Exit stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0xd0d, V1263]

================================

Block 0xd0d
[0xd0d:0xd13]
---
Predecessors: [0xf4a]
Successors: [0xd14, 0xd18]
---
0xd0d JUMPDEST
0xd0e ISZERO
0xd0f ISZERO
0xd10 PUSH2 0xd18
0xd13 JUMPI
---
0xd0d: JUMPDEST 
0xd0e: V1265 = ISZERO S0
0xd0f: V1266 = ISZERO V1265
0xd10: V1267 = 0xd18
0xd13: JUMPI 0xd18 V1266
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0xd14
[0xd14:0xd17]
---
Predecessors: [0xd0d]
Successors: [0x773]
---
0xd14 PUSH2 0x773
0xd17 JUMP
---
0xd14: V1268 = 0x773
0xd17: JUMP 0x773
---
Entry stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xd18
[0xd18:0xd32]
---
Predecessors: [0xd0d]
Successors: [0xf4f]
---
0xd18 JUMPDEST
0xd19 PUSH1 0x2
0xd1b SLOAD
0xd1c PUSH2 0xd33
0xd1f SWAP1
0xd20 PUSH1 0x1
0xd22 PUSH1 0xa0
0xd24 PUSH1 0x2
0xd26 EXP
0xd27 SUB
0xd28 AND
0xd29 DUP12
0xd2a DUP12
0xd2b DUP11
0xd2c DUP10
0xd2d DUP9
0xd2e DUP8
0xd2f PUSH2 0xf4f
0xd32 JUMP
---
0xd18: JUMPDEST 
0xd19: V1269 = 0x2
0xd1b: V1270 = S[0x2]
0xd1c: V1271 = 0xd33
0xd20: V1272 = 0x1
0xd22: V1273 = 0xa0
0xd24: V1274 = 0x2
0xd26: V1275 = EXP 0x2 0xa0
0xd27: V1276 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd28: V1277 = AND 0xffffffffffffffffffffffffffffffffffffffff V1270
0xd2f: V1278 = 0xf4f
0xd32: JUMP 0xf4f
---
Entry stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0xd33, V1277, S9, S8, S6, S4, S2, S0]
Exit stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0xd33, V1277, S9, S8, S6, S4, S2, S0]

================================

Block 0xd33
[0xd33:0xd4e]
---
Predecessors: [0x1087]
Successors: [0x1091]
---
0xd33 JUMPDEST
0xd34 PUSH1 0x2
0xd36 SLOAD
0xd37 PUSH2 0x773
0xd3a SWAP1
0xd3b DUP12
0xd3c SWAP1
0xd3d PUSH1 0x1
0xd3f PUSH1 0xa0
0xd41 PUSH1 0x2
0xd43 EXP
0xd44 SUB
0xd45 AND
0xd46 DUP11
0xd47 DUP10
0xd48 DUP9
0xd49 DUP8
0xd4a DUP8
0xd4b PUSH2 0x1091
0xd4e JUMP
---
0xd33: JUMPDEST 
0xd34: V1279 = 0x2
0xd36: V1280 = S[0x2]
0xd37: V1281 = 0x773
0xd3d: V1282 = 0x1
0xd3f: V1283 = 0xa0
0xd41: V1284 = 0x2
0xd43: V1285 = EXP 0x2 0xa0
0xd44: V1286 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd45: V1287 = AND 0xffffffffffffffffffffffffffffffffffffffff V1280
0xd4b: V1288 = 0x1091
0xd4e: JUMP 0x1091
---
Entry stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x773, S9, V1287, S7, S5, S3, S1, S0]
Exit stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x773, S9, V1287, S7, S5, S3, S1, S0]

================================

Block 0xd4f
[0xd4f:0xd4f]
---
Predecessors: []
Successors: [0xd50]
---
0xd4f JUMPDEST
---
0xd4f: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd50
[0xd50:0xd5b]
---
Predecessors: [0xd4f]
Successors: []
Has unresolved jump.
---
0xd50 JUMPDEST
0xd51 POP
0xd52 POP
0xd53 POP
0xd54 POP
0xd55 POP
0xd56 POP
0xd57 POP
0xd58 POP
0xd59 POP
0xd5a POP
0xd5b JUMP
---
0xd50: JUMPDEST 
0xd5b: JUMP S10
---
Entry stack: []
Stack pops: 11
Stack additions: []
Exit stack: []

================================

Block 0xd5c
[0xd5c:0xd7a]
---
Predecessors: [0x3f4, 0x9db, 0xcde]
Successors: [0xd7b, 0xd7c]
---
0xd5c JUMPDEST
0xd5d PUSH1 0x0
0xd5f DUP1
0xd60 SLOAD
0xd61 PUSH1 0x1
0xd63 PUSH1 0xa0
0xd65 PUSH1 0x2
0xd67 EXP
0xd68 SUB
0xd69 AND
0xd6a DUP1
0xd6b PUSH4 0x6c86888b
0xd70 DUP11
0xd71 DUP6
0xd72 DUP6
0xd73 DUP2
0xd74 MLOAD
0xd75 DUP2
0xd76 LT
0xd77 PUSH2 0xd7c
0xd7a JUMPI
---
0xd5c: JUMPDEST 
0xd5d: V1289 = 0x0
0xd60: V1290 = S[0x0]
0xd61: V1291 = 0x1
0xd63: V1292 = 0xa0
0xd65: V1293 = 0x2
0xd67: V1294 = EXP 0x2 0xa0
0xd68: V1295 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd69: V1296 = AND 0xffffffffffffffffffffffffffffffffffffffff V1290
0xd6b: V1297 = 0x6c86888b
0xd74: V1298 = M[S0]
0xd76: V1299 = LT 0x0 V1298
0xd77: V1300 = 0xd7c
0xd7a: JUMPI 0xd7c V1299
---
Entry stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x463, 0x9f9, 0xcf9}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, 0x0, V1296, V1296, 0x6c86888b, S6, S0, 0x0]
Exit stack: [V12, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, {0x463, 0x9f9, 0xcf9}, S6, S5, S4, S3, S2, S1, S0, 0x0, V1296, V1296, 0x6c86888b, S6, S0, 0x0]

================================

Block 0xd7b
[0xd7b:0xd7b]
---
Predecessors: [0xd5c]
Successors: []
---
0xd7b INVALID
---
0xd7b: INVALID 
---
Entry stack: [V12, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, {0x463, 0x9f9, 0xcf9}, S13, S12, S11, S10, S9, S8, S7, 0x0, V1296, V1296, 0x6c86888b, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, {0x463, 0x9f9, 0xcf9}, S13, S12, S11, S10, S9, S8, S7, 0x0, V1296, V1296, 0x6c86888b, S2, S1, 0x0]

================================

Block 0xd7c
[0xd7c:0xd92]
---
Predecessors: [0xd5c]
Successors: [0xd93, 0xd94]
---
0xd7c JUMPDEST
0xd7d SWAP1
0xd7e PUSH1 0x20
0xd80 ADD
0xd81 SWAP1
0xd82 PUSH1 0x20
0xd84 MUL
0xd85 ADD
0xd86 MLOAD
0xd87 DUP12
0xd88 DUP8
0xd89 PUSH1 0x2
0xd8b DUP2
0xd8c MLOAD
0xd8d DUP2
0xd8e LT
0xd8f PUSH2 0xd94
0xd92 JUMPI
---
0xd7c: JUMPDEST 
0xd7e: V1301 = 0x20
0xd80: V1302 = ADD 0x20 S1
0xd82: V1303 = 0x20
0xd84: V1304 = MUL 0x20 0x0
0xd85: V1305 = ADD 0x0 V1302
0xd86: V1306 = M[V1305]
0xd89: V1307 = 0x2
0xd8c: V1308 = M[S7]
0xd8e: V1309 = LT 0x2 V1308
0xd8f: V1310 = 0xd94
0xd92: JUMPI 0xd94 V1309
---
Entry stack: [V12, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, {0x463, 0x9f9, 0xcf9}, S13, S12, S11, S10, S9, S8, S7, 0x0, V1296, V1296, 0x6c86888b, S2, S1, 0x0]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V1306, S12, S7, 0x2]
Exit stack: [V12, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, {0x463, 0x9f9, 0xcf9}, S13, S12, S11, S10, S9, S8, S7, 0x0, V1296, V1296, 0x6c86888b, S2, V1306, S12, S7, 0x2]

================================

Block 0xd93
[0xd93:0xd93]
---
Predecessors: [0xd7c]
Successors: []
---
0xd93 INVALID
---
0xd93: INVALID 
---
Entry stack: [V12, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, {0x463, 0x9f9, 0xcf9}, S15, S14, S13, S12, S11, S10, S9, 0x0, S7, S6, 0x6c86888b, S4, V1306, S2, S1, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, {0x463, 0x9f9, 0xcf9}, S15, S14, S13, S12, S11, S10, S9, 0x0, S7, S6, 0x6c86888b, S4, V1306, S2, S1, 0x2]

================================

Block 0xd94
[0xd94:0xda9]
---
Predecessors: [0xd7c]
Successors: [0xdaa, 0xdab]
---
0xd94 JUMPDEST
0xd95 SWAP1
0xd96 PUSH1 0x20
0xd98 ADD
0xd99 SWAP1
0xd9a PUSH1 0x20
0xd9c MUL
0xd9d ADD
0xd9e MLOAD
0xd9f DUP9
0xda0 PUSH1 0x4
0xda2 DUP2
0xda3 MLOAD
0xda4 DUP2
0xda5 LT
0xda6 PUSH2 0xdab
0xda9 JUMPI
---
0xd94: JUMPDEST 
0xd96: V1311 = 0x20
0xd98: V1312 = ADD 0x20 S1
0xd9a: V1313 = 0x20
0xd9c: V1314 = MUL 0x20 0x2
0xd9d: V1315 = ADD 0x40 V1312
0xd9e: V1316 = M[V1315]
0xda0: V1317 = 0x4
0xda3: V1318 = M[S9]
0xda5: V1319 = LT 0x4 V1318
0xda6: V1320 = 0xdab
0xda9: JUMPI 0xdab V1319
---
Entry stack: [V12, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, {0x463, 0x9f9, 0xcf9}, S15, S14, S13, S12, S11, S10, S9, 0x0, S7, S6, 0x6c86888b, S4, V1306, S2, S1, 0x2]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, V1316, S9, 0x4]
Exit stack: [V12, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, {0x463, 0x9f9, 0xcf9}, S15, S14, S13, S12, S11, S10, S9, 0x0, S7, S6, 0x6c86888b, S4, V1306, S2, V1316, S9, 0x4]

================================

Block 0xdaa
[0xdaa:0xdaa]
---
Predecessors: [0xd94]
Successors: []
---
0xdaa INVALID
---
0xdaa: INVALID 
---
Entry stack: [V12, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, {0x463, 0x9f9, 0xcf9}, S16, S15, S14, S13, S12, S11, S10, 0x0, S8, S7, 0x6c86888b, S5, S4, S3, V1316, S1, 0x4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, {0x463, 0x9f9, 0xcf9}, S16, S15, S14, S13, S12, S11, S10, 0x0, S8, S7, 0x6c86888b, S5, S4, S3, V1316, S1, 0x4]

================================

Block 0xdab
[0xdab:0xdc0]
---
Predecessors: [0xd94]
Successors: [0xdc1, 0xdc2]
---
0xdab JUMPDEST
0xdac SWAP1
0xdad PUSH1 0x20
0xdaf ADD
0xdb0 SWAP1
0xdb1 PUSH1 0x20
0xdb3 MUL
0xdb4 ADD
0xdb5 MLOAD
0xdb6 DUP10
0xdb7 PUSH1 0x6
0xdb9 DUP2
0xdba MLOAD
0xdbb DUP2
0xdbc LT
0xdbd PUSH2 0xdc2
0xdc0 JUMPI
---
0xdab: JUMPDEST 
0xdad: V1321 = 0x20
0xdaf: V1322 = ADD 0x20 S1
0xdb1: V1323 = 0x20
0xdb3: V1324 = MUL 0x20 0x4
0xdb4: V1325 = ADD 0x80 V1322
0xdb5: V1326 = M[V1325]
0xdb7: V1327 = 0x6
0xdba: V1328 = M[S10]
0xdbc: V1329 = LT 0x6 V1328
0xdbd: V1330 = 0xdc2
0xdc0: JUMPI 0xdc2 V1329
---
Entry stack: [V12, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, {0x463, 0x9f9, 0xcf9}, S16, S15, S14, S13, S12, S11, S10, 0x0, S8, S7, 0x6c86888b, S5, S4, S3, V1316, S1, 0x4]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, V1326, S10, 0x6]
Exit stack: [V12, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, {0x463, 0x9f9, 0xcf9}, S16, S15, S14, S13, S12, S11, S10, 0x0, S8, S7, 0x6c86888b, S5, S4, S3, V1316, V1326, S10, 0x6]

================================

Block 0xdc1
[0xdc1:0xdc1]
---
Predecessors: [0xdab]
Successors: []
---
0xdc1 INVALID
---
0xdc1: INVALID 
---
Entry stack: [V12, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, {0x463, 0x9f9, 0xcf9}, S17, S16, S15, S14, S13, S12, S11, 0x0, S9, S8, 0x6c86888b, S6, S5, S4, S3, V1326, S1, 0x6]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, {0x463, 0x9f9, 0xcf9}, S17, S16, S15, S14, S13, S12, S11, 0x0, S9, S8, 0x6c86888b, S6, S5, S4, S3, V1326, S1, 0x6]

================================

Block 0xdc2
[0xdc2:0xddb]
---
Predecessors: [0xdab]
Successors: [0xddc, 0xddd]
---
0xdc2 JUMPDEST
0xdc3 SWAP1
0xdc4 PUSH1 0x20
0xdc6 ADD
0xdc7 SWAP1
0xdc8 PUSH1 0x20
0xdca MUL
0xdcb ADD
0xdcc MLOAD
0xdcd DUP15
0xdce DUP15
0xdcf DUP15
0xdd0 DUP15
0xdd1 DUP15
0xdd2 PUSH1 0x8
0xdd4 DUP2
0xdd5 MLOAD
0xdd6 DUP2
0xdd7 LT
0xdd8 PUSH2 0xddd
0xddb JUMPI
---
0xdc2: JUMPDEST 
0xdc4: V1331 = 0x20
0xdc6: V1332 = ADD 0x20 S1
0xdc8: V1333 = 0x20
0xdca: V1334 = MUL 0x20 0x6
0xdcb: V1335 = ADD 0xc0 V1332
0xdcc: V1336 = M[V1335]
0xdd2: V1337 = 0x8
0xdd5: V1338 = M[S11]
0xdd7: V1339 = LT 0x8 V1338
0xdd8: V1340 = 0xddd
0xddb: JUMPI 0xddd V1339
---
Entry stack: [V12, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, {0x463, 0x9f9, 0xcf9}, S17, S16, S15, S14, S13, S12, S11, 0x0, S9, S8, 0x6c86888b, S6, S5, S4, S3, V1326, S1, 0x6]
Stack pops: 16
Stack additions: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V1336, S15, S14, S13, S12, S11, 0x8]
Exit stack: [V12, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, {0x463, 0x9f9, 0xcf9}, S17, S16, S15, S14, S13, S12, S11, 0x0, S9, S8, 0x6c86888b, S6, S5, S4, S3, V1326, V1336, S15, S14, S13, S12, S11, 0x8]

================================

Block 0xddc
[0xddc:0xddc]
---
Predecessors: [0xdc2]
Successors: []
---
0xddc INVALID
---
0xddc: INVALID 
---
Entry stack: [V12, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, {0x463, 0x9f9, 0xcf9}, S22, S21, S20, S19, S18, S17, S16, 0x0, S14, S13, 0x6c86888b, S11, S10, S9, S8, S7, V1336, S5, S4, S3, S2, S1, 0x8]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, {0x463, 0x9f9, 0xcf9}, S22, S21, S20, S19, S18, S17, S16, 0x0, S14, S13, 0x6c86888b, S11, S10, S9, S8, S7, V1336, S5, S4, S3, S2, S1, 0x8]

================================

Block 0xddd
[0xddd:0xe7e]
---
Predecessors: [0xdc2]
Successors: [0xe7f, 0xe83]
---
0xddd JUMPDEST
0xdde SWAP1
0xddf PUSH1 0x20
0xde1 ADD
0xde2 SWAP1
0xde3 PUSH1 0x20
0xde5 MUL
0xde6 ADD
0xde7 MLOAD
0xde8 ADDRESS
0xde9 PUSH1 0x0
0xdeb PUSH1 0x40
0xded MLOAD
0xdee PUSH1 0x20
0xdf0 ADD
0xdf1 MSTORE
0xdf2 PUSH1 0x40
0xdf4 MLOAD
0xdf5 PUSH1 0xe0
0xdf7 PUSH1 0x2
0xdf9 EXP
0xdfa PUSH4 0xffffffff
0xdff DUP16
0xe00 AND
0xe01 MUL
0xe02 DUP2
0xe03 MSTORE
0xe04 PUSH1 0x1
0xe06 PUSH1 0xa0
0xe08 PUSH1 0x2
0xe0a EXP
0xe0b SUB
0xe0c SWAP13
0xe0d DUP14
0xe0e AND
0xe0f PUSH1 0x4
0xe11 DUP3
0xe12 ADD
0xe13 MSTORE
0xe14 PUSH1 0x24
0xe16 DUP2
0xe17 ADD
0xe18 SWAP12
0xe19 SWAP1
0xe1a SWAP12
0xe1b MSTORE
0xe1c SWAP9
0xe1d DUP12
0xe1e AND
0xe1f PUSH1 0x44
0xe21 DUP12
0xe22 ADD
0xe23 MSTORE
0xe24 PUSH1 0x64
0xe26 DUP11
0xe27 ADD
0xe28 SWAP8
0xe29 SWAP1
0xe2a SWAP8
0xe2b MSTORE
0xe2c PUSH1 0x84
0xe2e DUP10
0xe2f ADD
0xe30 SWAP6
0xe31 SWAP1
0xe32 SWAP6
0xe33 MSTORE
0xe34 PUSH1 0xa4
0xe36 DUP9
0xe37 ADD
0xe38 SWAP4
0xe39 SWAP1
0xe3a SWAP4
0xe3b MSTORE
0xe3c SWAP1
0xe3d DUP8
0xe3e AND
0xe3f PUSH1 0xc4
0xe41 DUP8
0xe42 ADD
0xe43 MSTORE
0xe44 PUSH1 0xff
0xe46 AND
0xe47 PUSH1 0xe4
0xe49 DUP7
0xe4a ADD
0xe4b MSTORE
0xe4c PUSH2 0x104
0xe4f DUP6
0xe50 ADD
0xe51 MSTORE
0xe52 PUSH2 0x124
0xe55 DUP5
0xe56 ADD
0xe57 MSTORE
0xe58 PUSH2 0x144
0xe5b DUP4
0xe5c ADD
0xe5d MSTORE
0xe5e SWAP1
0xe5f SWAP2
0xe60 AND
0xe61 PUSH2 0x164
0xe64 DUP3
0xe65 ADD
0xe66 MSTORE
0xe67 PUSH2 0x184
0xe6a ADD
0xe6b PUSH1 0x20
0xe6d PUSH1 0x40
0xe6f MLOAD
0xe70 DUP1
0xe71 DUP4
0xe72 SUB
0xe73 DUP2
0xe74 PUSH1 0x0
0xe76 DUP8
0xe77 DUP1
0xe78 EXTCODESIZE
0xe79 ISZERO
0xe7a ISZERO
0xe7b PUSH2 0xe83
0xe7e JUMPI
---
0xddd: JUMPDEST 
0xddf: V1341 = 0x20
0xde1: V1342 = ADD 0x20 S1
0xde3: V1343 = 0x20
0xde5: V1344 = MUL 0x20 0x8
0xde6: V1345 = ADD 0x100 V1342
0xde7: V1346 = M[V1345]
0xde8: V1347 = ADDRESS
0xde9: V1348 = 0x0
0xdeb: V1349 = 0x40
0xded: V1350 = M[0x40]
0xdee: V1351 = 0x20
0xdf0: V1352 = ADD 0x20 V1350
0xdf1: M[V1352] = 0x0
0xdf2: V1353 = 0x40
0xdf4: V1354 = M[0x40]
0xdf5: V1355 = 0xe0
0xdf7: V1356 = 0x2
0xdf9: V1357 = EXP 0x2 0xe0
0xdfa: V1358 = 0xffffffff
0xe00: V1359 = AND 0x6c86888b 0xffffffff
0xe01: V1360 = MUL 0x6c86888b 0x100000000000000000000000000000000000000000000000000000000
0xe03: M[V1354] = 0x6c86888b00000000000000000000000000000000000000000000000000000000
0xe04: V1361 = 0x1
0xe06: V1362 = 0xa0
0xe08: V1363 = 0x2
0xe0a: V1364 = EXP 0x2 0xa0
0xe0b: V1365 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe0e: V1366 = AND 0xffffffffffffffffffffffffffffffffffffffff S11
0xe0f: V1367 = 0x4
0xe12: V1368 = ADD V1354 0x4
0xe13: M[V1368] = V1366
0xe14: V1369 = 0x24
0xe17: V1370 = ADD V1354 0x24
0xe1b: M[V1370] = S10
0xe1e: V1371 = AND 0xffffffffffffffffffffffffffffffffffffffff S9
0xe1f: V1372 = 0x44
0xe22: V1373 = ADD V1354 0x44
0xe23: M[V1373] = V1371
0xe24: V1374 = 0x64
0xe27: V1375 = ADD V1354 0x64
0xe2b: M[V1375] = S8
0xe2c: V1376 = 0x84
0xe2f: V1377 = ADD V1354 0x84
0xe33: M[V1377] = S7
0xe34: V1378 = 0xa4
0xe37: V1379 = ADD V1354 0xa4
0xe3b: M[V1379] = V1336
0xe3e: V1380 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0xe3f: V1381 = 0xc4
0xe42: V1382 = ADD V1354 0xc4
0xe43: M[V1382] = V1380
0xe44: V1383 = 0xff
0xe46: V1384 = AND 0xff S4
0xe47: V1385 = 0xe4
0xe4a: V1386 = ADD V1354 0xe4
0xe4b: M[V1386] = V1384
0xe4c: V1387 = 0x104
0xe50: V1388 = ADD V1354 0x104
0xe51: M[V1388] = S3
0xe52: V1389 = 0x124
0xe56: V1390 = ADD V1354 0x124
0xe57: M[V1390] = S2
0xe58: V1391 = 0x144
0xe5c: V1392 = ADD V1354 0x144
0xe5d: M[V1392] = V1346
0xe60: V1393 = AND 0xffffffffffffffffffffffffffffffffffffffff V1347
0xe61: V1394 = 0x164
0xe65: V1395 = ADD V1354 0x164
0xe66: M[V1395] = V1393
0xe67: V1396 = 0x184
0xe6a: V1397 = ADD 0x184 V1354
0xe6b: V1398 = 0x20
0xe6d: V1399 = 0x40
0xe6f: V1400 = M[0x40]
0xe72: V1401 = SUB V1397 V1400
0xe74: V1402 = 0x0
0xe78: V1403 = EXTCODESIZE S13
0xe79: V1404 = ISZERO V1403
0xe7a: V1405 = ISZERO V1404
0xe7b: V1406 = 0xe83
0xe7e: JUMPI 0xe83 V1405
---
Entry stack: [V12, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, {0x463, 0x9f9, 0xcf9}, S22, S21, S20, S19, S18, S17, S16, 0x0, S14, S13, 0x6c86888b, S11, S10, S9, S8, S7, V1336, S5, S4, S3, S2, S1, 0x8]
Stack pops: 14
Stack additions: [S13, S12, V1397, 0x20, V1400, V1401, V1400, 0x0, S13]
Exit stack: [V12, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, {0x463, 0x9f9, 0xcf9}, S22, S21, S20, S19, S18, S17, S16, 0x0, S14, S13, 0x6c86888b, V1397, 0x20, V1400, V1401, V1400, 0x0, S13]

================================

Block 0xe7f
[0xe7f:0xe82]
---
Predecessors: [0xddd]
Successors: []
---
0xe7f PUSH1 0x0
0xe81 DUP1
0xe82 REVERT
---
0xe7f: V1407 = 0x0
0xe82: REVERT 0x0 0x0
---
Entry stack: [V12, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, {0x463, 0x9f9, 0xcf9}, S17, S16, S15, S14, S13, S12, S11, 0x0, S9, S8, 0x6c86888b, V1397, 0x20, V1400, V1401, V1400, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, {0x463, 0x9f9, 0xcf9}, S17, S16, S15, S14, S13, S12, S11, 0x0, S9, S8, 0x6c86888b, V1397, 0x20, V1400, V1401, V1400, 0x0, S0]

================================

Block 0xe83
[0xe83:0xe8f]
---
Predecessors: [0xddd]
Successors: [0xe90, 0xe94]
---
0xe83 JUMPDEST
0xe84 PUSH2 0x2c6
0xe87 GAS
0xe88 SUB
0xe89 CALL
0xe8a ISZERO
0xe8b ISZERO
0xe8c PUSH2 0xe94
0xe8f JUMPI
---
0xe83: JUMPDEST 
0xe84: V1408 = 0x2c6
0xe87: V1409 = GAS
0xe88: V1410 = SUB V1409 0x2c6
0xe89: V1411 = CALL V1410 S0 0x0 V1400 V1401 V1400 0x20
0xe8a: V1412 = ISZERO V1411
0xe8b: V1413 = ISZERO V1412
0xe8c: V1414 = 0xe94
0xe8f: JUMPI 0xe94 V1413
---
Entry stack: [V12, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, {0x463, 0x9f9, 0xcf9}, S17, S16, S15, S14, S13, S12, S11, 0x0, S9, S8, 0x6c86888b, V1397, 0x20, V1400, V1401, V1400, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, {0x463, 0x9f9, 0xcf9}, S17, S16, S15, S14, S13, S12, S11, 0x0, S9, S8, 0x6c86888b, V1397]

================================

Block 0xe90
[0xe90:0xe93]
---
Predecessors: [0xe83]
Successors: []
---
0xe90 PUSH1 0x0
0xe92 DUP1
0xe93 REVERT
---
0xe90: V1415 = 0x0
0xe93: REVERT 0x0 0x0
---
Entry stack: [V12, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, {0x463, 0x9f9, 0xcf9}, S11, S10, S9, S8, S7, S6, S5, 0x0, S3, S2, 0x6c86888b, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, {0x463, 0x9f9, 0xcf9}, S11, S10, S9, S8, S7, S6, S5, 0x0, S3, S2, 0x6c86888b, S0]

================================

Block 0xe94
[0xe94:0xea4]
---
Predecessors: [0xe83]
Successors: [0xc85, 0xea5]
---
0xe94 JUMPDEST
0xe95 POP
0xe96 POP
0xe97 POP
0xe98 PUSH1 0x40
0xe9a MLOAD
0xe9b DUP1
0xe9c MLOAD
0xe9d SWAP1
0xe9e POP
0xe9f ISZERO
0xea0 ISZERO
0xea1 PUSH2 0xc85
0xea4 JUMPI
---
0xe94: JUMPDEST 
0xe98: V1416 = 0x40
0xe9a: V1417 = M[0x40]
0xe9c: V1418 = M[V1417]
0xe9f: V1419 = ISZERO V1418
0xea0: V1420 = ISZERO V1419
0xea1: V1421 = 0xc85
0xea4: JUMPI 0xc85 V1420
---
Entry stack: [V12, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, {0x463, 0x9f9, 0xcf9}, S11, S10, S9, S8, S7, S6, S5, 0x0, S3, S2, 0x6c86888b, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, {0x463, 0x9f9, 0xcf9}, S11, S10, S9, S8, S7, S6, S5, 0x0, S3]

================================

Block 0xea5
[0xea5:0xea8]
---
Predecessors: [0xe94]
Successors: [0xc85]
---
0xea5 PUSH2 0xc85
0xea8 JUMP
---
0xea5: V1422 = 0xc85
0xea8: JUMP 0xc85
---
Entry stack: [V12, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, {0x463, 0x9f9, 0xcf9}, S8, S7, S6, S5, S4, S3, S2, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, {0x463, 0x9f9, 0xcf9}, S8, S7, S6, S5, S4, S3, S2, 0x0, S0]

================================

Block 0xea9
[0xea9:0xea9]
---
Predecessors: []
Successors: [0xeaa]
---
0xea9 JUMPDEST
---
0xea9: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xeaa
[0xeaa:0xeb5]
---
Predecessors: [0xea9]
Successors: []
Has unresolved jump.
---
0xeaa JUMPDEST
0xeab POP
0xeac SWAP8
0xead SWAP7
0xeae POP
0xeaf POP
0xeb0 POP
0xeb1 POP
0xeb2 POP
0xeb3 POP
0xeb4 POP
0xeb5 JUMP
---
0xeaa: JUMPDEST 
0xeb5: JUMP S9
---
Entry stack: []
Stack pops: 10
Stack additions: [S1]
Exit stack: [S1]

================================

Block 0xeb6
[0xeb6:0xec4]
---
Predecessors: [0x482]
Successors: [0x20a]
---
0xeb6 JUMPDEST
0xeb7 PUSH1 0x0
0xeb9 SLOAD
0xeba PUSH1 0x1
0xebc PUSH1 0xa0
0xebe PUSH1 0x2
0xec0 EXP
0xec1 SUB
0xec2 AND
0xec3 DUP2
0xec4 JUMP
---
0xeb6: JUMPDEST 
0xeb7: V1423 = 0x0
0xeb9: V1424 = S[0x0]
0xeba: V1425 = 0x1
0xebc: V1426 = 0xa0
0xebe: V1427 = 0x2
0xec0: V1428 = EXP 0x2 0xa0
0xec1: V1429 = SUB 0x10000000000000000000000000000000000000000 0x1
0xec2: V1430 = AND 0xffffffffffffffffffffffffffffffffffffffff V1424
0xec4: JUMP 0x20a
---
Entry stack: [V12, 0x20a]
Stack pops: 1
Stack additions: [S0, V1430]
Exit stack: [V12, 0x20a, V1430]

================================

Block 0xec5
[0xec5:0xf00]
---
Predecessors: [0x4a6]
Successors: [0xf01, 0xf05]
---
0xec5 JUMPDEST
0xec6 PUSH1 0x0
0xec8 SLOAD
0xec9 PUSH1 0x1
0xecb PUSH1 0xa0
0xecd PUSH1 0x2
0xecf EXP
0xed0 SUB
0xed1 AND
0xed2 DUP1
0xed3 PUSH4 0xd0e30db0
0xed8 CALLVALUE
0xed9 PUSH1 0x40
0xedb MLOAD
0xedc DUP3
0xedd PUSH4 0xffffffff
0xee2 AND
0xee3 PUSH1 0xe0
0xee5 PUSH1 0x2
0xee7 EXP
0xee8 MUL
0xee9 DUP2
0xeea MSTORE
0xeeb PUSH1 0x4
0xeed ADD
0xeee PUSH1 0x0
0xef0 PUSH1 0x40
0xef2 MLOAD
0xef3 DUP1
0xef4 DUP4
0xef5 SUB
0xef6 DUP2
0xef7 DUP6
0xef8 DUP9
0xef9 DUP1
0xefa EXTCODESIZE
0xefb ISZERO
0xefc ISZERO
0xefd PUSH2 0xf05
0xf00 JUMPI
---
0xec5: JUMPDEST 
0xec6: V1431 = 0x0
0xec8: V1432 = S[0x0]
0xec9: V1433 = 0x1
0xecb: V1434 = 0xa0
0xecd: V1435 = 0x2
0xecf: V1436 = EXP 0x2 0xa0
0xed0: V1437 = SUB 0x10000000000000000000000000000000000000000 0x1
0xed1: V1438 = AND 0xffffffffffffffffffffffffffffffffffffffff V1432
0xed3: V1439 = 0xd0e30db0
0xed8: V1440 = CALLVALUE
0xed9: V1441 = 0x40
0xedb: V1442 = M[0x40]
0xedd: V1443 = 0xffffffff
0xee2: V1444 = AND 0xffffffff 0xd0e30db0
0xee3: V1445 = 0xe0
0xee5: V1446 = 0x2
0xee7: V1447 = EXP 0x2 0xe0
0xee8: V1448 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd0e30db0
0xeea: M[V1442] = 0xd0e30db000000000000000000000000000000000000000000000000000000000
0xeeb: V1449 = 0x4
0xeed: V1450 = ADD 0x4 V1442
0xeee: V1451 = 0x0
0xef0: V1452 = 0x40
0xef2: V1453 = M[0x40]
0xef5: V1454 = SUB V1450 V1453
0xefa: V1455 = EXTCODESIZE V1438
0xefb: V1456 = ISZERO V1455
0xefc: V1457 = ISZERO V1456
0xefd: V1458 = 0xf05
0xf00: JUMPI 0xf05 V1457
---
Entry stack: [V12, 0xb4]
Stack pops: 0
Stack additions: [V1438, V1438, 0xd0e30db0, V1440, V1450, 0x0, V1453, V1454, V1453, V1440, V1438]
Exit stack: [V12, 0xb4, V1438, V1438, 0xd0e30db0, V1440, V1450, 0x0, V1453, V1454, V1453, V1440, V1438]

================================

Block 0xf01
[0xf01:0xf04]
---
Predecessors: [0xec5]
Successors: []
---
0xf01 PUSH1 0x0
0xf03 DUP1
0xf04 REVERT
---
0xf01: V1459 = 0x0
0xf04: REVERT 0x0 0x0
---
Entry stack: [V12, 0xb4, V1438, V1438, 0xd0e30db0, V1440, V1450, 0x0, V1453, V1454, V1453, V1440, V1438]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb4, V1438, V1438, 0xd0e30db0, V1440, V1450, 0x0, V1453, V1454, V1453, V1440, V1438]

================================

Block 0xf05
[0xf05:0xf11]
---
Predecessors: [0xec5]
Successors: [0xf12, 0xf16]
---
0xf05 JUMPDEST
0xf06 PUSH2 0x25ee
0xf09 GAS
0xf0a SUB
0xf0b CALL
0xf0c ISZERO
0xf0d ISZERO
0xf0e PUSH2 0xf16
0xf11 JUMPI
---
0xf05: JUMPDEST 
0xf06: V1460 = 0x25ee
0xf09: V1461 = GAS
0xf0a: V1462 = SUB V1461 0x25ee
0xf0b: V1463 = CALL V1462 V1438 V1440 V1453 V1454 V1453 0x0
0xf0c: V1464 = ISZERO V1463
0xf0d: V1465 = ISZERO V1464
0xf0e: V1466 = 0xf16
0xf11: JUMPI 0xf16 V1465
---
Entry stack: [V12, 0xb4, V1438, V1438, 0xd0e30db0, V1440, V1450, 0x0, V1453, V1454, V1453, V1440, V1438]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xb4, V1438, V1438, 0xd0e30db0, V1440, V1450]

================================

Block 0xf12
[0xf12:0xf15]
---
Predecessors: [0xf05]
Successors: []
---
0xf12 PUSH1 0x0
0xf14 DUP1
0xf15 REVERT
---
0xf12: V1467 = 0x0
0xf15: REVERT 0x0 0x0
---
Entry stack: [V12, 0xb4, V1438, V1438, 0xd0e30db0, V1440, V1450]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xb4, V1438, V1438, 0xd0e30db0, V1440, V1450]

================================

Block 0xf16
[0xf16:0xf1a]
---
Predecessors: [0xf05]
Successors: [0xf1b]
---
0xf16 JUMPDEST
0xf17 POP
0xf18 POP
0xf19 POP
0xf1a POP
---
0xf16: JUMPDEST 
---
Entry stack: [V12, 0xb4, V1438, V1438, 0xd0e30db0, V1440, V1450]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0xb4, V1438]

================================

Block 0xf1b
[0xf1b:0xf1d]
---
Predecessors: [0xf16]
Successors: [0xb4]
---
0xf1b JUMPDEST
0xf1c POP
0xf1d JUMP
---
0xf1b: JUMPDEST 
0xf1d: JUMP 0xb4
---
Entry stack: [V12, 0xb4, V1438]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0xf1e
[0xf1e:0xf2c]
---
Predecessors: [0x4bb]
Successors: [0x20a]
---
0xf1e JUMPDEST
0xf1f PUSH1 0x1
0xf21 SLOAD
0xf22 PUSH1 0x1
0xf24 PUSH1 0xa0
0xf26 PUSH1 0x2
0xf28 EXP
0xf29 SUB
0xf2a AND
0xf2b DUP2
0xf2c JUMP
---
0xf1e: JUMPDEST 
0xf1f: V1468 = 0x1
0xf21: V1469 = S[0x1]
0xf22: V1470 = 0x1
0xf24: V1471 = 0xa0
0xf26: V1472 = 0x2
0xf28: V1473 = EXP 0x2 0xa0
0xf29: V1474 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf2a: V1475 = AND 0xffffffffffffffffffffffffffffffffffffffff V1469
0xf2c: JUMP 0x20a
---
Entry stack: [V12, 0x20a]
Stack pops: 1
Stack additions: [S0, V1475]
Exit stack: [V12, 0x20a, V1475]

================================

Block 0xf2d
[0xf2d:0xf49]
---
Predecessors: [0x4ea, 0x555, 0x86b, 0xa04, 0xd04]
Successors: [0xf4a]
---
0xf2d JUMPDEST
0xf2e PUSH1 0x1
0xf30 PUSH1 0xa0
0xf32 PUSH1 0x2
0xf34 EXP
0xf35 SUB
0xf36 DUP2
0xf37 AND
0xf38 PUSH1 0x0
0xf3a SWAP1
0xf3b DUP2
0xf3c MSTORE
0xf3d PUSH1 0x4
0xf3f PUSH1 0x20
0xf41 MSTORE
0xf42 PUSH1 0x40
0xf44 SWAP1
0xf45 SHA3
0xf46 SLOAD
0xf47 PUSH1 0xff
0xf49 AND
---
0xf2d: JUMPDEST 
0xf2e: V1476 = 0x1
0xf30: V1477 = 0xa0
0xf32: V1478 = 0x2
0xf34: V1479 = EXP 0x2 0xa0
0xf35: V1480 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf37: V1481 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xf38: V1482 = 0x0
0xf3c: M[0x0] = V1481
0xf3d: V1483 = 0x4
0xf3f: V1484 = 0x20
0xf41: M[0x20] = 0x4
0xf42: V1485 = 0x40
0xf45: V1486 = SHA3 0x0 0x40
0xf46: V1487 = S[V1486]
0xf47: V1488 = 0xff
0xf49: V1489 = AND 0xff V1487
---
Entry stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x463, 0x55e, 0x874, 0xa0d, 0xd0d}, S0]
Stack pops: 1
Stack additions: [S0, V1489]
Exit stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x463, 0x55e, 0x874, 0xa0d, 0xd0d}, S0, V1489]

================================

Block 0xf4a
[0xf4a:0xf4e]
---
Predecessors: [0xf2d]
Successors: [0x463, 0x55e, 0x874, 0xa0d, 0xd0d]
---
0xf4a JUMPDEST
0xf4b SWAP2
0xf4c SWAP1
0xf4d POP
0xf4e JUMP
---
0xf4a: JUMPDEST 
0xf4e: JUMP {0x463, 0x55e, 0x874, 0xa0d, 0xd0d}
---
Entry stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x463, 0x55e, 0x874, 0xa0d, 0xd0d}, S1, V1489]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V1489]

================================

Block 0xf4f
[0xf4f:0xf71]
---
Predecessors: [0xd18]
Successors: [0xf72, 0xf73]
---
0xf4f JUMPDEST
0xf50 PUSH1 0x0
0xf52 DUP1
0xf53 SLOAD
0xf54 PUSH1 0x1
0xf56 PUSH1 0xa0
0xf58 PUSH1 0x2
0xf5a EXP
0xf5b SUB
0xf5c AND
0xf5d SWAP1
0xf5e DUP2
0xf5f SWAP1
0xf60 PUSH4 0xa19b14a
0xf65 SWAP1
0xf66 DUP11
0xf67 SWAP1
0xf68 DUP6
0xf69 SWAP1
0xf6a DUP2
0xf6b MLOAD
0xf6c DUP2
0xf6d LT
0xf6e PUSH2 0xf73
0xf71 JUMPI
---
0xf4f: JUMPDEST 
0xf50: V1490 = 0x0
0xf53: V1491 = S[0x0]
0xf54: V1492 = 0x1
0xf56: V1493 = 0xa0
0xf58: V1494 = 0x2
0xf5a: V1495 = EXP 0x2 0xa0
0xf5b: V1496 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf5c: V1497 = AND 0xffffffffffffffffffffffffffffffffffffffff V1491
0xf60: V1498 = 0xa19b14a
0xf6b: V1499 = M[S0]
0xf6d: V1500 = LT 0x0 V1499
0xf6e: V1501 = 0xf73
0xf71: JUMPI 0xf73 V1500
---
Entry stack: [V12, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0xd33, V1277, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, V1497, V1497, 0xa19b14a, S6, S0, 0x0]
Exit stack: [V12, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0xd33, V1277, S5, S4, S3, S2, S1, S0, V1497, V1497, 0xa19b14a, V1277, S0, 0x0]

================================

Block 0xf72
[0xf72:0xf72]
---
Predecessors: [0xf4f]
Successors: []
---
0xf72 INVALID
---
0xf72: INVALID 
---
Entry stack: [V12, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, 0xd33, V1277, S11, S10, S9, S8, S7, S6, V1497, V1497, 0xa19b14a, V1277, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, 0xd33, V1277, S11, S10, S9, S8, S7, S6, V1497, V1497, 0xa19b14a, V1277, S1, 0x0]

================================

Block 0xf73
[0xf73:0xf89]
---
Predecessors: [0xf4f]
Successors: [0xf8a, 0xf8b]
---
0xf73 JUMPDEST
0xf74 SWAP1
0xf75 PUSH1 0x20
0xf77 ADD
0xf78 SWAP1
0xf79 PUSH1 0x20
0xf7b MUL
0xf7c ADD
0xf7d MLOAD
0xf7e DUP11
0xf7f DUP7
0xf80 PUSH1 0x2
0xf82 DUP2
0xf83 MLOAD
0xf84 DUP2
0xf85 LT
0xf86 PUSH2 0xf8b
0xf89 JUMPI
---
0xf73: JUMPDEST 
0xf75: V1502 = 0x20
0xf77: V1503 = ADD 0x20 S1
0xf79: V1504 = 0x20
0xf7b: V1505 = MUL 0x20 0x0
0xf7c: V1506 = ADD 0x0 V1503
0xf7d: V1507 = M[V1506]
0xf80: V1508 = 0x2
0xf83: V1509 = M[S6]
0xf85: V1510 = LT 0x2 V1509
0xf86: V1511 = 0xf8b
0xf89: JUMPI 0xf8b V1510
---
Entry stack: [V12, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, 0xd33, V1277, S11, S10, S9, S8, S7, S6, V1497, V1497, 0xa19b14a, V1277, S1, 0x0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V1507, S11, S6, 0x2]
Exit stack: [V12, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, 0xd33, V1277, S11, S10, S9, S8, S7, S6, V1497, V1497, 0xa19b14a, V1277, V1507, S11, S6, 0x2]

================================

Block 0xf8a
[0xf8a:0xf8a]
---
Predecessors: [0xf73]
Successors: []
---
0xf8a INVALID
---
0xf8a: INVALID 
---
Entry stack: [V12, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, 0xd33, V1277, S13, S12, S11, S10, S9, S8, V1497, V1497, 0xa19b14a, V1277, V1507, S2, S1, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, 0xd33, V1277, S13, S12, S11, S10, S9, S8, V1497, V1497, 0xa19b14a, V1277, V1507, S2, S1, 0x2]

================================

Block 0xf8b
[0xf8b:0xfa0]
---
Predecessors: [0xf73]
Successors: [0xfa1, 0xfa2]
---
0xf8b JUMPDEST
0xf8c SWAP1
0xf8d PUSH1 0x20
0xf8f ADD
0xf90 SWAP1
0xf91 PUSH1 0x20
0xf93 MUL
0xf94 ADD
0xf95 MLOAD
0xf96 DUP8
0xf97 PUSH1 0x4
0xf99 DUP2
0xf9a MLOAD
0xf9b DUP2
0xf9c LT
0xf9d PUSH2 0xfa2
0xfa0 JUMPI
---
0xf8b: JUMPDEST 
0xf8d: V1512 = 0x20
0xf8f: V1513 = ADD 0x20 S1
0xf91: V1514 = 0x20
0xf93: V1515 = MUL 0x20 0x2
0xf94: V1516 = ADD 0x40 V1513
0xf95: V1517 = M[V1516]
0xf97: V1518 = 0x4
0xf9a: V1519 = M[S8]
0xf9c: V1520 = LT 0x4 V1519
0xf9d: V1521 = 0xfa2
0xfa0: JUMPI 0xfa2 V1520
---
Entry stack: [V12, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, 0xd33, V1277, S13, S12, S11, S10, S9, S8, V1497, V1497, 0xa19b14a, V1277, V1507, S2, S1, 0x2]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, V1517, S8, 0x4]
Exit stack: [V12, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, 0xd33, V1277, S13, S12, S11, S10, S9, S8, V1497, V1497, 0xa19b14a, V1277, V1507, S2, V1517, S8, 0x4]

================================

Block 0xfa1
[0xfa1:0xfa1]
---
Predecessors: [0xf8b]
Successors: []
---
0xfa1 INVALID
---
0xfa1: INVALID 
---
Entry stack: [V12, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, 0xd33, V1277, S14, S13, S12, S11, S10, S9, V1497, V1497, 0xa19b14a, V1277, V1507, S3, V1517, S1, 0x4]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, 0xd33, V1277, S14, S13, S12, S11, S10, S9, V1497, V1497, 0xa19b14a, V1277, V1507, S3, V1517, S1, 0x4]

================================

Block 0xfa2
[0xfa2:0xfb7]
---
Predecessors: [0xf8b]
Successors: [0xfb8, 0xfb9]
---
0xfa2 JUMPDEST
0xfa3 SWAP1
0xfa4 PUSH1 0x20
0xfa6 ADD
0xfa7 SWAP1
0xfa8 PUSH1 0x20
0xfaa MUL
0xfab ADD
0xfac MLOAD
0xfad DUP9
0xfae PUSH1 0x6
0xfb0 DUP2
0xfb1 MLOAD
0xfb2 DUP2
0xfb3 LT
0xfb4 PUSH2 0xfb9
0xfb7 JUMPI
---
0xfa2: JUMPDEST 
0xfa4: V1522 = 0x20
0xfa6: V1523 = ADD 0x20 S1
0xfa8: V1524 = 0x20
0xfaa: V1525 = MUL 0x20 0x4
0xfab: V1526 = ADD 0x80 V1523
0xfac: V1527 = M[V1526]
0xfae: V1528 = 0x6
0xfb1: V1529 = M[S9]
0xfb3: V1530 = LT 0x6 V1529
0xfb4: V1531 = 0xfb9
0xfb7: JUMPI 0xfb9 V1530
---
Entry stack: [V12, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, 0xd33, V1277, S14, S13, S12, S11, S10, S9, V1497, V1497, 0xa19b14a, V1277, V1507, S3, V1517, S1, 0x4]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, V1527, S9, 0x6]
Exit stack: [V12, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, 0xd33, V1277, S14, S13, S12, S11, S10, S9, V1497, V1497, 0xa19b14a, V1277, V1507, S3, V1517, V1527, S9, 0x6]

================================

Block 0xfb8
[0xfb8:0xfb8]
---
Predecessors: [0xfa2]
Successors: []
---
0xfb8 INVALID
---
0xfb8: INVALID 
---
Entry stack: [V12, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, 0xd33, V1277, S15, S14, S13, S12, S11, S10, V1497, V1497, 0xa19b14a, V1277, V1507, S4, V1517, V1527, S1, 0x6]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, 0xd33, V1277, S15, S14, S13, S12, S11, S10, V1497, V1497, 0xa19b14a, V1277, V1507, S4, V1517, V1527, S1, 0x6]

================================

Block 0xfb9
[0xfb9:0xfd2]
---
Predecessors: [0xfa2]
Successors: [0xfd3, 0xfd4]
---
0xfb9 JUMPDEST
0xfba SWAP1
0xfbb PUSH1 0x20
0xfbd ADD
0xfbe SWAP1
0xfbf PUSH1 0x20
0xfc1 MUL
0xfc2 ADD
0xfc3 MLOAD
0xfc4 DUP14
0xfc5 DUP14
0xfc6 DUP14
0xfc7 DUP14
0xfc8 DUP14
0xfc9 PUSH1 0x8
0xfcb DUP2
0xfcc MLOAD
0xfcd DUP2
0xfce LT
0xfcf PUSH2 0xfd4
0xfd2 JUMPI
---
0xfb9: JUMPDEST 
0xfbb: V1532 = 0x20
0xfbd: V1533 = ADD 0x20 S1
0xfbf: V1534 = 0x20
0xfc1: V1535 = MUL 0x20 0x6
0xfc2: V1536 = ADD 0xc0 V1533
0xfc3: V1537 = M[V1536]
0xfc9: V1538 = 0x8
0xfcc: V1539 = M[S10]
0xfce: V1540 = LT 0x8 V1539
0xfcf: V1541 = 0xfd4
0xfd2: JUMPI 0xfd4 V1540
---
Entry stack: [V12, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, 0xd33, V1277, S15, S14, S13, S12, S11, S10, V1497, V1497, 0xa19b14a, V1277, V1507, S4, V1517, V1527, S1, 0x6]
Stack pops: 15
Stack additions: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V1537, S14, S13, S12, S11, S10, 0x8]
Exit stack: [V12, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, 0xd33, V1277, S15, S14, S13, S12, S11, S10, V1497, V1497, 0xa19b14a, V1277, V1507, S4, V1517, V1527, V1537, S14, S13, S12, S11, S10, 0x8]

================================

Block 0xfd3
[0xfd3:0xfd3]
---
Predecessors: [0xfb9]
Successors: []
---
0xfd3 INVALID
---
0xfd3: INVALID 
---
Entry stack: [V12, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, 0xd33, V1277, S20, S19, S18, S17, S16, S15, V1497, V1497, 0xa19b14a, V1277, V1507, S9, V1517, V1527, V1537, S5, S4, S3, S2, S1, 0x8]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, 0xd33, V1277, S20, S19, S18, S17, S16, S15, V1497, V1497, 0xa19b14a, V1277, V1507, S9, V1517, V1527, V1537, S5, S4, S3, S2, S1, 0x8]

================================

Block 0xfd4
[0xfd4:0x106d]
---
Predecessors: [0xfb9, 0x10f7]
Successors: [0x106e, 0x1072]
---
0xfd4 JUMPDEST
0xfd5 SWAP1
0xfd6 PUSH1 0x20
0xfd8 ADD
0xfd9 SWAP1
0xfda PUSH1 0x20
0xfdc MUL
0xfdd ADD
0xfde MLOAD
0xfdf PUSH1 0x40
0xfe1 MLOAD
0xfe2 PUSH1 0xe0
0xfe4 PUSH1 0x2
0xfe6 EXP
0xfe7 PUSH4 0xffffffff
0xfec DUP15
0xfed AND
0xfee MUL
0xfef DUP2
0xff0 MSTORE
0xff1 PUSH1 0x1
0xff3 PUSH1 0xa0
0xff5 PUSH1 0x2
0xff7 EXP
0xff8 SUB
0xff9 SWAP12
0xffa DUP13
0xffb AND
0xffc PUSH1 0x4
0xffe DUP3
0xfff ADD
0x1000 MSTORE
0x1001 PUSH1 0x24
0x1003 DUP2
0x1004 ADD
0x1005 SWAP11
0x1006 SWAP1
0x1007 SWAP11
0x1008 MSTORE
0x1009 SWAP8
0x100a DUP11
0x100b AND
0x100c PUSH1 0x44
0x100e DUP11
0x100f ADD
0x1010 MSTORE
0x1011 PUSH1 0x64
0x1013 DUP10
0x1014 ADD
0x1015 SWAP7
0x1016 SWAP1
0x1017 SWAP7
0x1018 MSTORE
0x1019 PUSH1 0x84
0x101b DUP9
0x101c ADD
0x101d SWAP5
0x101e SWAP1
0x101f SWAP5
0x1020 MSTORE
0x1021 PUSH1 0xa4
0x1023 DUP8
0x1024 ADD
0x1025 SWAP3
0x1026 SWAP1
0x1027 SWAP3
0x1028 MSTORE
0x1029 SWAP1
0x102a SWAP6
0x102b AND
0x102c PUSH1 0xc4
0x102e DUP6
0x102f ADD
0x1030 MSTORE
0x1031 PUSH1 0xff
0x1033 SWAP1
0x1034 SWAP5
0x1035 AND
0x1036 PUSH1 0xe4
0x1038 DUP5
0x1039 ADD
0x103a MSTORE
0x103b PUSH2 0x104
0x103e DUP4
0x103f ADD
0x1040 SWAP4
0x1041 SWAP1
0x1042 SWAP4
0x1043 MSTORE
0x1044 PUSH2 0x124
0x1047 DUP3
0x1048 ADD
0x1049 SWAP3
0x104a SWAP1
0x104b SWAP3
0x104c MSTORE
0x104d PUSH2 0x144
0x1050 DUP2
0x1051 ADD
0x1052 SWAP2
0x1053 SWAP1
0x1054 SWAP2
0x1055 MSTORE
0x1056 PUSH2 0x164
0x1059 ADD
0x105a PUSH1 0x0
0x105c PUSH1 0x40
0x105e MLOAD
0x105f DUP1
0x1060 DUP4
0x1061 SUB
0x1062 DUP2
0x1063 PUSH1 0x0
0x1065 DUP8
0x1066 DUP1
0x1067 EXTCODESIZE
0x1068 ISZERO
0x1069 ISZERO
0x106a PUSH2 0x1072
0x106d JUMPI
---
0xfd4: JUMPDEST 
0xfd6: V1542 = 0x20
0xfd8: V1543 = ADD 0x20 S1
0xfda: V1544 = 0x20
0xfdc: V1545 = MUL 0x20 {0x8, 0x9}
0xfdd: V1546 = ADD V1545 V1543
0xfde: V1547 = M[V1546]
0xfdf: V1548 = 0x40
0xfe1: V1549 = M[0x40]
0xfe2: V1550 = 0xe0
0xfe4: V1551 = 0x2
0xfe6: V1552 = EXP 0x2 0xe0
0xfe7: V1553 = 0xffffffff
0xfed: V1554 = AND 0xa19b14a 0xffffffff
0xfee: V1555 = MUL 0xa19b14a 0x100000000000000000000000000000000000000000000000000000000
0xff0: M[V1549] = 0xa19b14a00000000000000000000000000000000000000000000000000000000
0xff1: V1556 = 0x1
0xff3: V1557 = 0xa0
0xff5: V1558 = 0x2
0xff7: V1559 = EXP 0x2 0xa0
0xff8: V1560 = SUB 0x10000000000000000000000000000000000000000 0x1
0xffb: V1561 = AND 0xffffffffffffffffffffffffffffffffffffffff S11
0xffc: V1562 = 0x4
0xfff: V1563 = ADD V1549 0x4
0x1000: M[V1563] = V1561
0x1001: V1564 = 0x24
0x1004: V1565 = ADD V1549 0x24
0x1008: M[V1565] = S10
0x100b: V1566 = AND 0xffffffffffffffffffffffffffffffffffffffff S9
0x100c: V1567 = 0x44
0x100f: V1568 = ADD V1549 0x44
0x1010: M[V1568] = V1566
0x1011: V1569 = 0x64
0x1014: V1570 = ADD V1549 0x64
0x1018: M[V1570] = S8
0x1019: V1571 = 0x84
0x101c: V1572 = ADD V1549 0x84
0x1020: M[V1572] = S7
0x1021: V1573 = 0xa4
0x1024: V1574 = ADD V1549 0xa4
0x1028: M[V1574] = S6
0x102b: V1575 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x102c: V1576 = 0xc4
0x102f: V1577 = ADD V1549 0xc4
0x1030: M[V1577] = V1575
0x1031: V1578 = 0xff
0x1035: V1579 = AND S4 0xff
0x1036: V1580 = 0xe4
0x1039: V1581 = ADD V1549 0xe4
0x103a: M[V1581] = V1579
0x103b: V1582 = 0x104
0x103f: V1583 = ADD V1549 0x104
0x1043: M[V1583] = S3
0x1044: V1584 = 0x124
0x1048: V1585 = ADD V1549 0x124
0x104c: M[V1585] = S2
0x104d: V1586 = 0x144
0x1051: V1587 = ADD V1549 0x144
0x1055: M[V1587] = V1547
0x1056: V1588 = 0x164
0x1059: V1589 = ADD 0x164 V1549
0x105a: V1590 = 0x0
0x105c: V1591 = 0x40
0x105e: V1592 = M[0x40]
0x1061: V1593 = SUB V1589 V1592
0x1063: V1594 = 0x0
0x1067: V1595 = EXTCODESIZE S13
0x1068: V1596 = ISZERO V1595
0x1069: V1597 = ISZERO V1596
0x106a: V1598 = 0x1072
0x106d: JUMPI 0x1072 V1597
---
Entry stack: [V12, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, {0x773, 0xd33}, S21, S20, S19, S18, S17, S16, S15, S14, S13, 0xa19b14a, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x8, 0x9}]
Stack pops: 14
Stack additions: [S13, S12, V1589, 0x0, V1592, V1593, V1592, 0x0, S13]
Exit stack: [V12, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, {0x773, 0xd33}, S21, S20, S19, S18, S17, S16, S15, S14, S13, 0xa19b14a, V1589, 0x0, V1592, V1593, V1592, 0x0, S13]

================================

Block 0x106e
[0x106e:0x1071]
---
Predecessors: [0xfd4]
Successors: []
---
0x106e PUSH1 0x0
0x1070 DUP1
0x1071 REVERT
---
0x106e: V1599 = 0x0
0x1071: REVERT 0x0 0x0
---
Entry stack: [V12, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, {0x773, 0xd33}, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0xa19b14a, V1589, 0x0, V1592, V1593, V1592, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, {0x773, 0xd33}, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0xa19b14a, V1589, 0x0, V1592, V1593, V1592, 0x0, S0]

================================

Block 0x1072
[0x1072:0x107e]
---
Predecessors: [0xfd4, 0x1112]
Successors: [0x107f, 0x1083]
---
0x1072 JUMPDEST
0x1073 PUSH2 0x2c6
0x1076 GAS
0x1077 SUB
0x1078 CALL
0x1079 ISZERO
0x107a ISZERO
0x107b PUSH2 0x1083
0x107e JUMPI
---
0x1072: JUMPDEST 
0x1073: V1600 = 0x2c6
0x1076: V1601 = GAS
0x1077: V1602 = SUB V1601 0x2c6
0x1078: V1603 = CALL V1602 S0 0x0 S2 S3 S4 0x0
0x1079: V1604 = ISZERO V1603
0x107a: V1605 = ISZERO V1604
0x107b: V1606 = 0x1083
0x107e: JUMPI 0x1083 V1605
---
Entry stack: [V12, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, {0x773, 0xd33}, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, {0x773, 0xd33}, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6]

================================

Block 0x107f
[0x107f:0x1082]
---
Predecessors: [0x1072]
Successors: []
---
0x107f PUSH1 0x0
0x1081 DUP1
0x1082 REVERT
---
0x107f: V1607 = 0x0
0x1082: REVERT 0x0 0x0
---
Entry stack: [V12, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, {0x773, 0xd33}, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, {0x773, 0xd33}, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x1083
[0x1083:0x1086]
---
Predecessors: [0x1072, 0x11ac]
Successors: [0x1087]
---
0x1083 JUMPDEST
0x1084 POP
0x1085 POP
0x1086 POP
---
0x1083: JUMPDEST 
---
Entry stack: [V12, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, {0x773, 0xd33}, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, {0x773, 0xd33}, S10, S9, S8, S7, S6, S5, S4, S3]

================================

Block 0x1087
[0x1087:0x1090]
---
Predecessors: [0x1083]
Successors: [0x773, 0xd33]
---
0x1087 JUMPDEST
0x1088 POP
0x1089 POP
0x108a POP
0x108b POP
0x108c POP
0x108d POP
0x108e POP
0x108f POP
0x1090 JUMP
---
0x1087: JUMPDEST 
0x1090: JUMP {0x773, 0xd33}
---
Entry stack: [V12, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x773, 0xd33}, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 9
Stack additions: []
Exit stack: [V12, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9]

================================

Block 0x1091
[0x1091:0x10af]
---
Predecessors: [0xd33]
Successors: [0x10b0, 0x10b1]
---
0x1091 JUMPDEST
0x1092 PUSH1 0x0
0x1094 SLOAD
0x1095 PUSH1 0x1
0x1097 PUSH1 0xa0
0x1099 PUSH1 0x2
0x109b EXP
0x109c SUB
0x109d AND
0x109e DUP1
0x109f PUSH4 0xa19b14a
0x10a4 DUP10
0x10a5 DUP5
0x10a6 PUSH1 0x1
0x10a8 DUP2
0x10a9 MLOAD
0x10aa DUP2
0x10ab LT
0x10ac PUSH2 0x10b1
0x10af JUMPI
---
0x1091: JUMPDEST 
0x1092: V1608 = 0x0
0x1094: V1609 = S[0x0]
0x1095: V1610 = 0x1
0x1097: V1611 = 0xa0
0x1099: V1612 = 0x2
0x109b: V1613 = EXP 0x2 0xa0
0x109c: V1614 = SUB 0x10000000000000000000000000000000000000000 0x1
0x109d: V1615 = AND 0xffffffffffffffffffffffffffffffffffffffff V1609
0x109f: V1616 = 0xa19b14a
0x10a6: V1617 = 0x1
0x10a9: V1618 = M[S0]
0x10ab: V1619 = LT 0x1 V1618
0x10ac: V1620 = 0x10b1
0x10af: JUMPI 0x10b1 V1619
---
Entry stack: [V12, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0x773, S6, V1287, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, V1615, V1615, 0xa19b14a, S6, S0, 0x1]
Exit stack: [V12, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, 0x773, S6, V1287, S4, S3, S2, S1, S0, V1615, V1615, 0xa19b14a, S6, S0, 0x1]

================================

Block 0x10b0
[0x10b0:0x10b0]
---
Predecessors: [0x1091]
Successors: []
---
0x10b0 INVALID
---
0x10b0: INVALID 
---
Entry stack: [V12, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, 0x773, S12, V1287, S10, S9, S8, S7, S6, V1615, V1615, 0xa19b14a, S2, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, 0x773, S12, V1287, S10, S9, S8, S7, S6, V1615, V1615, 0xa19b14a, S2, S1, 0x1]

================================

Block 0x10b1
[0x10b1:0x10c7]
---
Predecessors: [0x1091]
Successors: [0x10c8, 0x10c9]
---
0x10b1 JUMPDEST
0x10b2 SWAP1
0x10b3 PUSH1 0x20
0x10b5 ADD
0x10b6 SWAP1
0x10b7 PUSH1 0x20
0x10b9 MUL
0x10ba ADD
0x10bb MLOAD
0x10bc DUP11
0x10bd DUP7
0x10be PUSH1 0x3
0x10c0 DUP2
0x10c1 MLOAD
0x10c2 DUP2
0x10c3 LT
0x10c4 PUSH2 0x10c9
0x10c7 JUMPI
---
0x10b1: JUMPDEST 
0x10b3: V1621 = 0x20
0x10b5: V1622 = ADD 0x20 S1
0x10b7: V1623 = 0x20
0x10b9: V1624 = MUL 0x20 0x1
0x10ba: V1625 = ADD 0x20 V1622
0x10bb: V1626 = M[V1625]
0x10be: V1627 = 0x3
0x10c1: V1628 = M[S6]
0x10c3: V1629 = LT 0x3 V1628
0x10c4: V1630 = 0x10c9
0x10c7: JUMPI 0x10c9 V1629
---
Entry stack: [V12, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, 0x773, S12, V1287, S10, S9, S8, S7, S6, V1615, V1615, 0xa19b14a, S2, S1, 0x1]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V1626, S11, S6, 0x3]
Exit stack: [V12, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, 0x773, S12, V1287, S10, S9, S8, S7, S6, V1615, V1615, 0xa19b14a, S2, V1626, V1287, S6, 0x3]

================================

Block 0x10c8
[0x10c8:0x10c8]
---
Predecessors: [0x10b1]
Successors: []
---
0x10c8 INVALID
---
0x10c8: INVALID 
---
Entry stack: [V12, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, 0x773, S14, V1287, S12, S11, S10, S9, S8, V1615, V1615, 0xa19b14a, S4, V1626, V1287, S1, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, 0x773, S14, V1287, S12, S11, S10, S9, S8, V1615, V1615, 0xa19b14a, S4, V1626, V1287, S1, 0x3]

================================

Block 0x10c9
[0x10c9:0x10de]
---
Predecessors: [0x10b1]
Successors: [0x10df, 0x10e0]
---
0x10c9 JUMPDEST
0x10ca SWAP1
0x10cb PUSH1 0x20
0x10cd ADD
0x10ce SWAP1
0x10cf PUSH1 0x20
0x10d1 MUL
0x10d2 ADD
0x10d3 MLOAD
0x10d4 DUP8
0x10d5 PUSH1 0x5
0x10d7 DUP2
0x10d8 MLOAD
0x10d9 DUP2
0x10da LT
0x10db PUSH2 0x10e0
0x10de JUMPI
---
0x10c9: JUMPDEST 
0x10cb: V1631 = 0x20
0x10cd: V1632 = ADD 0x20 S1
0x10cf: V1633 = 0x20
0x10d1: V1634 = MUL 0x20 0x3
0x10d2: V1635 = ADD 0x60 V1632
0x10d3: V1636 = M[V1635]
0x10d5: V1637 = 0x5
0x10d8: V1638 = M[S8]
0x10da: V1639 = LT 0x5 V1638
0x10db: V1640 = 0x10e0
0x10de: JUMPI 0x10e0 V1639
---
Entry stack: [V12, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, 0x773, S14, V1287, S12, S11, S10, S9, S8, V1615, V1615, 0xa19b14a, S4, V1626, V1287, S1, 0x3]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, V1636, S8, 0x5]
Exit stack: [V12, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, 0x773, S14, V1287, S12, S11, S10, S9, S8, V1615, V1615, 0xa19b14a, S4, V1626, V1287, V1636, S8, 0x5]

================================

Block 0x10df
[0x10df:0x10df]
---
Predecessors: [0x10c9]
Successors: []
---
0x10df INVALID
---
0x10df: INVALID 
---
Entry stack: [V12, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, 0x773, S15, V1287, S13, S12, S11, S10, S9, V1615, V1615, 0xa19b14a, S5, V1626, V1287, V1636, S1, 0x5]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, 0x773, S15, V1287, S13, S12, S11, S10, S9, V1615, V1615, 0xa19b14a, S5, V1626, V1287, V1636, S1, 0x5]

================================

Block 0x10e0
[0x10e0:0x10f5]
---
Predecessors: [0x10c9]
Successors: [0x10f6, 0x10f7]
---
0x10e0 JUMPDEST
0x10e1 SWAP1
0x10e2 PUSH1 0x20
0x10e4 ADD
0x10e5 SWAP1
0x10e6 PUSH1 0x20
0x10e8 MUL
0x10e9 ADD
0x10ea MLOAD
0x10eb DUP9
0x10ec PUSH1 0x7
0x10ee DUP2
0x10ef MLOAD
0x10f0 DUP2
0x10f1 LT
0x10f2 PUSH2 0x10f7
0x10f5 JUMPI
---
0x10e0: JUMPDEST 
0x10e2: V1641 = 0x20
0x10e4: V1642 = ADD 0x20 S1
0x10e6: V1643 = 0x20
0x10e8: V1644 = MUL 0x20 0x5
0x10e9: V1645 = ADD 0xa0 V1642
0x10ea: V1646 = M[V1645]
0x10ec: V1647 = 0x7
0x10ef: V1648 = M[S9]
0x10f1: V1649 = LT 0x7 V1648
0x10f2: V1650 = 0x10f7
0x10f5: JUMPI 0x10f7 V1649
---
Entry stack: [V12, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, 0x773, S15, V1287, S13, S12, S11, S10, S9, V1615, V1615, 0xa19b14a, S5, V1626, V1287, V1636, S1, 0x5]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, V1646, S9, 0x7]
Exit stack: [V12, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, 0x773, S15, V1287, S13, S12, S11, S10, S9, V1615, V1615, 0xa19b14a, S5, V1626, V1287, V1636, V1646, S9, 0x7]

================================

Block 0x10f6
[0x10f6:0x10f6]
---
Predecessors: [0x10e0]
Successors: []
---
0x10f6 INVALID
---
0x10f6: INVALID 
---
Entry stack: [V12, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, 0x773, S16, V1287, S14, S13, S12, S11, S10, V1615, V1615, 0xa19b14a, S6, V1626, V1287, V1636, V1646, S1, 0x7]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, 0x773, S16, V1287, S14, S13, S12, S11, S10, V1615, V1615, 0xa19b14a, S6, V1626, V1287, V1636, V1646, S1, 0x7]

================================

Block 0x10f7
[0x10f7:0x1110]
---
Predecessors: [0x10e0]
Successors: [0xfd4, 0x1111]
---
0x10f7 JUMPDEST
0x10f8 SWAP1
0x10f9 PUSH1 0x20
0x10fb ADD
0x10fc SWAP1
0x10fd PUSH1 0x20
0x10ff MUL
0x1100 ADD
0x1101 MLOAD
0x1102 DUP14
0x1103 DUP14
0x1104 DUP14
0x1105 DUP14
0x1106 DUP14
0x1107 PUSH1 0x9
0x1109 DUP2
0x110a MLOAD
0x110b DUP2
0x110c LT
0x110d PUSH2 0xfd4
0x1110 JUMPI
---
0x10f7: JUMPDEST 
0x10f9: V1651 = 0x20
0x10fb: V1652 = ADD 0x20 S1
0x10fd: V1653 = 0x20
0x10ff: V1654 = MUL 0x20 0x7
0x1100: V1655 = ADD 0xe0 V1652
0x1101: V1656 = M[V1655]
0x1107: V1657 = 0x9
0x110a: V1658 = M[S10]
0x110c: V1659 = LT 0x9 V1658
0x110d: V1660 = 0xfd4
0x1110: JUMPI 0xfd4 V1659
---
Entry stack: [V12, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, 0x773, S16, V1287, S14, S13, S12, S11, S10, V1615, V1615, 0xa19b14a, S6, V1626, V1287, V1636, V1646, S1, 0x7]
Stack pops: 15
Stack additions: [S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V1656, S14, S13, S12, S11, S10, 0x9]
Exit stack: [V12, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, 0x773, S16, V1287, S14, S13, S12, S11, S10, V1615, V1615, 0xa19b14a, S6, V1626, V1287, V1636, V1646, V1656, S14, S13, S12, S11, S10, 0x9]

================================

Block 0x1111
[0x1111:0x1111]
---
Predecessors: [0x10f7]
Successors: []
---
0x1111 INVALID
---
0x1111: INVALID 
---
Entry stack: [V12, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, 0x773, S21, V1287, S19, S18, S17, S16, S15, V1615, V1615, 0xa19b14a, S11, V1626, V1287, V1636, V1646, V1656, S5, S4, S3, S2, S1, 0x9]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S34, S33, S32, S31, S30, S29, S28, S27, S26, S25, S24, S23, 0x773, S21, V1287, S19, S18, S17, S16, S15, V1615, V1615, 0xa19b14a, S11, V1626, V1287, V1636, V1646, V1656, S5, S4, S3, S2, S1, 0x9]

================================

Block 0x1112
[0x1112:0x11ab]
---
Predecessors: []
Successors: [0x1072, 0x11ac]
---
0x1112 JUMPDEST
0x1113 SWAP1
0x1114 PUSH1 0x20
0x1116 ADD
0x1117 SWAP1
0x1118 PUSH1 0x20
0x111a MUL
0x111b ADD
0x111c MLOAD
0x111d PUSH1 0x40
0x111f MLOAD
0x1120 PUSH1 0xe0
0x1122 PUSH1 0x2
0x1124 EXP
0x1125 PUSH4 0xffffffff
0x112a DUP15
0x112b AND
0x112c MUL
0x112d DUP2
0x112e MSTORE
0x112f PUSH1 0x1
0x1131 PUSH1 0xa0
0x1133 PUSH1 0x2
0x1135 EXP
0x1136 SUB
0x1137 SWAP12
0x1138 DUP13
0x1139 AND
0x113a PUSH1 0x4
0x113c DUP3
0x113d ADD
0x113e MSTORE
0x113f PUSH1 0x24
0x1141 DUP2
0x1142 ADD
0x1143 SWAP11
0x1144 SWAP1
0x1145 SWAP11
0x1146 MSTORE
0x1147 SWAP8
0x1148 DUP11
0x1149 AND
0x114a PUSH1 0x44
0x114c DUP11
0x114d ADD
0x114e MSTORE
0x114f PUSH1 0x64
0x1151 DUP10
0x1152 ADD
0x1153 SWAP7
0x1154 SWAP1
0x1155 SWAP7
0x1156 MSTORE
0x1157 PUSH1 0x84
0x1159 DUP9
0x115a ADD
0x115b SWAP5
0x115c SWAP1
0x115d SWAP5
0x115e MSTORE
0x115f PUSH1 0xa4
0x1161 DUP8
0x1162 ADD
0x1163 SWAP3
0x1164 SWAP1
0x1165 SWAP3
0x1166 MSTORE
0x1167 SWAP1
0x1168 SWAP6
0x1169 AND
0x116a PUSH1 0xc4
0x116c DUP6
0x116d ADD
0x116e MSTORE
0x116f PUSH1 0xff
0x1171 SWAP1
0x1172 SWAP5
0x1173 AND
0x1174 PUSH1 0xe4
0x1176 DUP5
0x1177 ADD
0x1178 MSTORE
0x1179 PUSH2 0x104
0x117c DUP4
0x117d ADD
0x117e SWAP4
0x117f SWAP1
0x1180 SWAP4
0x1181 MSTORE
0x1182 PUSH2 0x124
0x1185 DUP3
0x1186 ADD
0x1187 SWAP3
0x1188 SWAP1
0x1189 SWAP3
0x118a MSTORE
0x118b PUSH2 0x144
0x118e DUP2
0x118f ADD
0x1190 SWAP2
0x1191 SWAP1
0x1192 SWAP2
0x1193 MSTORE
0x1194 PUSH2 0x164
0x1197 ADD
0x1198 PUSH1 0x0
0x119a PUSH1 0x40
0x119c MLOAD
0x119d DUP1
0x119e DUP4
0x119f SUB
0x11a0 DUP2
0x11a1 PUSH1 0x0
0x11a3 DUP8
0x11a4 DUP1
0x11a5 EXTCODESIZE
0x11a6 ISZERO
0x11a7 ISZERO
0x11a8 PUSH2 0x1072
0x11ab JUMPI
---
0x1112: JUMPDEST 
0x1114: V1661 = 0x20
0x1116: V1662 = ADD 0x20 S1
0x1118: V1663 = 0x20
0x111a: V1664 = MUL 0x20 S0
0x111b: V1665 = ADD V1664 V1662
0x111c: V1666 = M[V1665]
0x111d: V1667 = 0x40
0x111f: V1668 = M[0x40]
0x1120: V1669 = 0xe0
0x1122: V1670 = 0x2
0x1124: V1671 = EXP 0x2 0xe0
0x1125: V1672 = 0xffffffff
0x112b: V1673 = AND S12 0xffffffff
0x112c: V1674 = MUL V1673 0x100000000000000000000000000000000000000000000000000000000
0x112e: M[V1668] = V1674
0x112f: V1675 = 0x1
0x1131: V1676 = 0xa0
0x1133: V1677 = 0x2
0x1135: V1678 = EXP 0x2 0xa0
0x1136: V1679 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1139: V1680 = AND 0xffffffffffffffffffffffffffffffffffffffff S11
0x113a: V1681 = 0x4
0x113d: V1682 = ADD V1668 0x4
0x113e: M[V1682] = V1680
0x113f: V1683 = 0x24
0x1142: V1684 = ADD V1668 0x24
0x1146: M[V1684] = S10
0x1149: V1685 = AND 0xffffffffffffffffffffffffffffffffffffffff S9
0x114a: V1686 = 0x44
0x114d: V1687 = ADD V1668 0x44
0x114e: M[V1687] = V1685
0x114f: V1688 = 0x64
0x1152: V1689 = ADD V1668 0x64
0x1156: M[V1689] = S8
0x1157: V1690 = 0x84
0x115a: V1691 = ADD V1668 0x84
0x115e: M[V1691] = S7
0x115f: V1692 = 0xa4
0x1162: V1693 = ADD V1668 0xa4
0x1166: M[V1693] = S6
0x1169: V1694 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x116a: V1695 = 0xc4
0x116d: V1696 = ADD V1668 0xc4
0x116e: M[V1696] = V1694
0x116f: V1697 = 0xff
0x1173: V1698 = AND S4 0xff
0x1174: V1699 = 0xe4
0x1177: V1700 = ADD V1668 0xe4
0x1178: M[V1700] = V1698
0x1179: V1701 = 0x104
0x117d: V1702 = ADD V1668 0x104
0x1181: M[V1702] = S3
0x1182: V1703 = 0x124
0x1186: V1704 = ADD V1668 0x124
0x118a: M[V1704] = S2
0x118b: V1705 = 0x144
0x118f: V1706 = ADD V1668 0x144
0x1193: M[V1706] = V1666
0x1194: V1707 = 0x164
0x1197: V1708 = ADD 0x164 V1668
0x1198: V1709 = 0x0
0x119a: V1710 = 0x40
0x119c: V1711 = M[0x40]
0x119f: V1712 = SUB V1708 V1711
0x11a1: V1713 = 0x0
0x11a5: V1714 = EXTCODESIZE S13
0x11a6: V1715 = ISZERO V1714
0x11a7: V1716 = ISZERO V1715
0x11a8: V1717 = 0x1072
0x11ab: JUMPI 0x1072 V1716
---
Entry stack: []
Stack pops: 14
Stack additions: [S13, S12, V1708, 0x0, V1711, V1712, V1711, 0x0, S13]
Exit stack: [S13, S12, V1708, 0x0, V1711, V1712, V1711, 0x0, S13]

================================

Block 0x11ac
[0x11ac:0x11bc]
---
Predecessors: [0x1112]
Successors: [0x1083, 0x11bd]
---
0x11ac PUSH1 0x0
0x11ae DUP1
0x11af REVERT
0x11b0 JUMPDEST
0x11b1 PUSH2 0x2c6
0x11b4 GAS
0x11b5 SUB
0x11b6 CALL
0x11b7 ISZERO
0x11b8 ISZERO
0x11b9 PUSH2 0x1083
0x11bc JUMPI
---
0x11ac: V1718 = 0x0
0x11af: REVERT 0x0 0x0
0x11b0: JUMPDEST 
0x11b1: V1719 = 0x2c6
0x11b4: V1720 = GAS
0x11b5: V1721 = SUB V1720 0x2c6
0x11b6: V1722 = CALL V1721 S0 S1 S2 S3 S4 S5
0x11b7: V1723 = ISZERO V1722
0x11b8: V1724 = ISZERO V1723
0x11b9: V1725 = 0x1083
0x11bc: JUMPI 0x1083 V1724
---
Entry stack: [S8, S7, V1708, 0x0, V1711, V1712, V1711, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x11bd
[0x11bd:0x11c4]
---
Predecessors: [0x11ac]
Successors: [0x11c5]
---
0x11bd PUSH1 0x0
0x11bf DUP1
0x11c0 REVERT
0x11c1 JUMPDEST
0x11c2 POP
0x11c3 POP
0x11c4 POP
---
0x11bd: V1726 = 0x0
0x11c0: REVERT 0x0 0x0
0x11c1: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x11c5
[0x11c5:0x11fa]
---
Predecessors: [0x11bd]
Successors: []
---
0x11c5 JUMPDEST
0x11c6 POP
0x11c7 POP
0x11c8 POP
0x11c9 POP
0x11ca POP
0x11cb POP
0x11cc POP
0x11cd POP
0x11ce JUMP
0x11cf STOP
0x11d0 LOG1
0x11d1 PUSH6 0x627a7a723058
0x11d8 SHA3
0x11d9 MISSING 0xb0
0x11da MISSING 0xfb
0x11db MISSING 0xc7
0x11dc MISSING 0xa6
0x11dd MISSING 0x2d
0x11de MISSING 0xe8
0x11df MSIZE
0x11e0 MISSING 0xcf
0x11e1 MISSING 0xc3
0x11e2 MISSING 0xc3
0x11e3 MISSING 0xda
0x11e4 MISSING 0xb0
0x11e5 PUSH1 0x66
0x11e7 PUSH18 0xae756ec8547f2f5d8273efb994fd552d5300
0x11fa MISSING 0x29
---
0x11c5: JUMPDEST 
0x11ce: JUMP S8
0x11cf: STOP 
0x11d0: LOG S0 S1 S2
0x11d1: V1727 = 0x627a7a723058
0x11d8: V1728 = SHA3 0x627a7a723058 S3
0x11d9: MISSING 0xb0
0x11da: MISSING 0xfb
0x11db: MISSING 0xc7
0x11dc: MISSING 0xa6
0x11dd: MISSING 0x2d
0x11de: MISSING 0xe8
0x11df: V1729 = MSIZE
0x11e0: MISSING 0xcf
0x11e1: MISSING 0xc3
0x11e2: MISSING 0xc3
0x11e3: MISSING 0xda
0x11e4: MISSING 0xb0
0x11e5: V1730 = 0x66
0x11e7: V1731 = 0xae756ec8547f2f5d8273efb994fd552d5300
0x11fa: MISSING 0x29
---
Entry stack: []
Stack pops: 72688
Stack additions: [0xae756ec8547f2f5d8273efb994fd552d5300, 0x66]
Exit stack: []

================================

Function 0:
Public function signature: 0xae5e739
Entry block: 0xb8
Exit block: 0xb6
Body: 0xb4, 0xb5, 0xb6, 0xb8, 0xbf, 0xc3, 0x512, 0x529, 0x52d, 0x551, 0x552

Function 1:
Public function signature: 0x1b5d7d3c
Entry block: 0xd9
Exit block: 0x76f
Body: 0xb4, 0xb5, 0xb6, 0xd9, 0xe0, 0xe4, 0x555, 0x55e, 0x565, 0x569, 0x586, 0x590, 0x599, 0x5a2, 0x5ad, 0x5b6, 0x5bf, 0x654, 0x658, 0x665, 0x669, 0x685, 0x69a, 0x6a3, 0x6ac, 0x6b7, 0x6c0, 0x6c9, 0x75e, 0x762, 0x76f, 0x773, 0x777

Function 2:
Public function signature: 0x2e1a7d4d
Entry block: 0x168
Exit block: 0xb6
Body: 0xb4, 0xb5, 0xb6, 0x168, 0x16f, 0x173, 0x780, 0x79a, 0x79e, 0x7e4, 0x7e8, 0x7f5, 0x7f9, 0x826, 0x827

Function 3:
Public function signature: 0x306837da
Entry block: 0x180
Exit block: 0xb6
Body: 0xb4, 0xb5, 0xb6, 0x180, 0x187, 0x18b, 0x777, 0x82b, 0x839, 0x83a, 0x860, 0x867, 0x8a3

Function 4:
Public function signature: 0x405d0c2e
Entry block: 0x1f7
Exit block: 0x20a
Body: 0x1f7, 0x1fe, 0x202, 0x20a, 0x9cc

Function 5:
Public function signature: 0x4cee79a1
Entry block: 0x226
Exit block: 0x76f
Body: 0xb4, 0xb5, 0xb6, 0x226, 0x22d, 0x231, 0x762, 0x76f, 0x773, 0x777, 0x8c7, 0x8dd, 0x8de, 0x8f4, 0x8f5, 0x90f, 0x910, 0x9aa, 0x9db, 0x9f9, 0xa00, 0xa04, 0xa0d, 0xa14, 0xa18, 0xa41, 0xa42, 0xa59

Function 6:
Public function signature: 0x7180935c
Entry block: 0x29d
Exit block: 0x317
Body: 0x29d, 0x2a4, 0x2a8, 0x317

Function 7:
Public function signature: 0x8da5cb5b
Entry block: 0x329
Exit block: 0x20a
Body: 0x20a, 0x329, 0x330, 0x334, 0xc91

Function 8:
Public function signature: 0x99b8b927
Entry block: 0x358
Exit block: 0xb6
Body: 0xb4, 0xb5, 0xb6, 0x358, 0x35f, 0x363, 0x773, 0x777, 0x8a3, 0xca0, 0xcac, 0xcad, 0xcd3, 0xcda

Function 9:
Public function signature: 0xb32a39ca
Entry block: 0x3e9
Exit block: 0x463
Body: 0x3e9, 0x3f0, 0x3f4, 0x463

Function 10:
Public function signature: 0xc8617d22
Entry block: 0x477
Exit block: 0x20a
Body: 0x20a, 0x477, 0x47e, 0x482, 0xeb6

Function 11:
Public function signature: 0xd0e30db0
Entry block: 0x4a6
Exit block: 0xb6
Body: 0xb4, 0xb5, 0xb6, 0x4a6, 0xec5, 0xf01, 0xf05, 0xf12, 0xf16, 0xf1b

Function 12:
Public function signature: 0xd2f7265a
Entry block: 0x4b0
Exit block: 0x20a
Body: 0x20a, 0x4b0, 0x4b7, 0x4bb, 0xf1e

Function 13:
Public function signature: 0xfe9fbb80
Entry block: 0x4df
Exit block: 0x4e6
Body: 0x463, 0x4df, 0x4e6, 0x4ea

Function 14:
Public fallback function
Entry block: 0xb4
Exit block: 0xb6
Body: 0xb4, 0xb5, 0xb6

Function 15:
Private function
Entry block: 0xb5f
Exit block: 0xc85
Body: 0xb5f, 0xb80, 0xb98, 0xbaf, 0xbc6, 0xc68, 0xc79, 0xc85

Function 16:
Private function
Entry block: 0xd5c
Exit block: 0xc85
Body: 0x860, 0x86b, 0xc85, 0xcd3, 0xcde, 0xcf9, 0xd04, 0xd5c, 0xd7c, 0xd94, 0xdab, 0xdc2, 0xddd, 0xe83, 0xe94, 0xea5

Function 17:
Private function
Entry block: 0xf2d
Exit block: 0xf4a
Body: 0xf2d, 0xf4a

