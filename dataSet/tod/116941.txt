Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xe0]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xe0
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xe0
0xa: JUMPI 0xe0 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x108]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x10fe9ae8
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x108
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x10fe9ae8
0x20: V14 = EQ V12 0x10fe9ae8
0x21: V15 = 0x108
0x24: JUMPI 0x108 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x134]
---
0x25 DUP1
0x26 PUSH4 0x228cb733
0x2b EQ
0x2c PUSH2 0x134
0x2f JUMPI
---
0x26: V16 = 0x228cb733
0x2b: V17 = EQ 0x228cb733 V12
0x2c: V18 = 0x134
0x2f: JUMPI 0x134 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x156]
---
0x30 DUP1
0x31 PUSH4 0x26a4e8d2
0x36 EQ
0x37 PUSH2 0x156
0x3a JUMPI
---
0x31: V19 = 0x26a4e8d2
0x36: V20 = EQ 0x26a4e8d2 V12
0x37: V21 = 0x156
0x3a: JUMPI 0x156 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x174]
---
0x3b DUP1
0x3c PUSH4 0x2cd6f4ca
0x41 EQ
0x42 PUSH2 0x174
0x45 JUMPI
---
0x3c: V22 = 0x2cd6f4ca
0x41: V23 = EQ 0x2cd6f4ca V12
0x42: V24 = 0x174
0x45: JUMPI 0x174 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x1a0]
---
0x46 DUP1
0x47 PUSH4 0x4b136ba0
0x4c EQ
0x4d PUSH2 0x1a0
0x50 JUMPI
---
0x47: V25 = 0x4b136ba0
0x4c: V26 = EQ 0x4b136ba0 V12
0x4d: V27 = 0x1a0
0x50: JUMPI 0x1a0 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x1aa]
---
0x51 DUP1
0x52 PUSH4 0x55a373d6
0x57 EQ
0x58 PUSH2 0x1aa
0x5b JUMPI
---
0x52: V28 = 0x55a373d6
0x57: V29 = EQ 0x55a373d6 V12
0x58: V30 = 0x1aa
0x5b: JUMPI 0x1aa V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x1d6]
---
0x5c DUP1
0x5d PUSH4 0x582c6d70
0x62 EQ
0x63 PUSH2 0x1d6
0x66 JUMPI
---
0x5d: V31 = 0x582c6d70
0x62: V32 = EQ 0x582c6d70 V12
0x63: V33 = 0x1d6
0x66: JUMPI 0x1d6 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x1fa]
---
0x67 DUP1
0x68 PUSH4 0x6ad1fe02
0x6d EQ
0x6e PUSH2 0x1fa
0x71 JUMPI
---
0x68: V34 = 0x6ad1fe02
0x6d: V35 = EQ 0x6ad1fe02 V12
0x6e: V36 = 0x1fa
0x71: JUMPI 0x1fa V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x226]
---
0x72 DUP1
0x73 PUSH4 0x70a08231
0x78 EQ
0x79 PUSH2 0x226
0x7c JUMPI
---
0x73: V37 = 0x70a08231
0x78: V38 = EQ 0x70a08231 V12
0x79: V39 = 0x226
0x7c: JUMPI 0x226 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x254]
---
0x7d DUP1
0x7e PUSH4 0x8b424267
0x83 EQ
0x84 PUSH2 0x254
0x87 JUMPI
---
0x7e: V40 = 0x8b424267
0x83: V41 = EQ 0x8b424267 V12
0x84: V42 = 0x254
0x87: JUMPI 0x254 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x276]
---
0x88 DUP1
0x89 PUSH4 0x8da5cb5b
0x8e EQ
0x8f PUSH2 0x276
0x92 JUMPI
---
0x89: V43 = 0x8da5cb5b
0x8e: V44 = EQ 0x8da5cb5b V12
0x8f: V45 = 0x276
0x92: JUMPI 0x276 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x2a2]
---
0x93 DUP1
0x94 PUSH4 0xa6f2ae3a
0x99 EQ
0x9a PUSH2 0x2a2
0x9d JUMPI
---
0x94: V46 = 0xa6f2ae3a
0x99: V47 = EQ 0xa6f2ae3a V12
0x9a: V48 = 0x2a2
0x9d: JUMPI 0x2a2 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x2b4]
---
0x9e DUP1
0x9f PUSH4 0xad7a672f
0xa4 EQ
0xa5 PUSH2 0x2b4
0xa8 JUMPI
---
0x9f: V49 = 0xad7a672f
0xa4: V50 = EQ 0xad7a672f V12
0xa5: V51 = 0x2b4
0xa8: JUMPI 0x2b4 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x2d6]
---
0xa9 DUP1
0xaa PUSH4 0xd0e30db0
0xaf EQ
0xb0 PUSH2 0x2d6
0xb3 JUMPI
---
0xaa: V52 = 0xd0e30db0
0xaf: V53 = EQ 0xd0e30db0 V12
0xb0: V54 = 0x2d6
0xb3: JUMPI 0x2d6 V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x2e0]
---
0xb4 DUP1
0xb5 PUSH4 0xe086e5ec
0xba EQ
0xbb PUSH2 0x2e0
0xbe JUMPI
---
0xb5: V55 = 0xe086e5ec
0xba: V56 = EQ 0xe086e5ec V12
0xbb: V57 = 0x2e0
0xbe: JUMPI 0x2e0 V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x2ea]
---
0xbf DUP1
0xc0 PUSH4 0xf2fde38b
0xc5 EQ
0xc6 PUSH2 0x2ea
0xc9 JUMPI
---
0xc0: V58 = 0xf2fde38b
0xc5: V59 = EQ 0xf2fde38b V12
0xc6: V60 = 0x2ea
0xc9: JUMPI 0x2ea V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5, 0x308]
---
0xca DUP1
0xcb PUSH4 0xf8fb491f
0xd0 EQ
0xd1 PUSH2 0x308
0xd4 JUMPI
---
0xcb: V61 = 0xf8fb491f
0xd0: V62 = EQ 0xf8fb491f V12
0xd1: V63 = 0x308
0xd4: JUMPI 0x308 V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xdf]
---
Predecessors: [0xca]
Successors: [0xe0, 0x326]
---
0xd5 DUP1
0xd6 PUSH4 0xfc0c546a
0xdb EQ
0xdc PUSH2 0x326
0xdf JUMPI
---
0xd6: V64 = 0xfc0c546a
0xdb: V65 = EQ 0xfc0c546a V12
0xdc: V66 = 0x326
0xdf: JUMPI 0x326 V65
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xe0
[0xe0:0xe3]
---
Predecessors: [0x0, 0xd5]
Successors: [0xe4]
---
0xe0 JUMPDEST
0xe1 PUSH2 0x106
---
0xe0: JUMPDEST 
0xe1: V67 = 0x106
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x106]
Exit stack: [V12, 0x106]

================================

Block 0xe4
[0xe4:0xed]
---
Predecessors: [0xe0]
Successors: [0xee, 0xfa]
---
0xe4 JUMPDEST
0xe5 PUSH1 0x0
0xe7 CALLVALUE
0xe8 GT
0xe9 ISZERO
0xea PUSH2 0xfa
0xed JUMPI
---
0xe4: JUMPDEST 
0xe5: V68 = 0x0
0xe7: V69 = CALLVALUE
0xe8: V70 = GT V69 0x0
0xe9: V71 = ISZERO V70
0xea: V72 = 0xfa
0xed: JUMPI 0xfa V71
---
Entry stack: [V12, 0x106]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x106]

================================

Block 0xee
[0xee:0xf4]
---
Predecessors: [0xe4]
Successors: [0x352]
---
0xee PUSH2 0xf5
0xf1 PUSH2 0x352
0xf4 JUMP
---
0xee: V73 = 0xf5
0xf1: V74 = 0x352
0xf4: JUMP 0x352
---
Entry stack: [V12, 0x106]
Stack pops: 0
Stack additions: [0xf5]
Exit stack: [V12, 0x106, 0xf5]

================================

Block 0xf5
[0xf5:0xf9]
---
Predecessors: [0x3b2]
Successors: [0x102]
---
0xf5 JUMPDEST
0xf6 PUSH2 0x102
0xf9 JUMP
---
0xf5: JUMPDEST 
0xf6: V75 = 0x102
0xf9: JUMP 0x102
---
Entry stack: [V12, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S0]

================================

Block 0xfa
[0xfa:0x101]
---
Predecessors: [0xe4]
Successors: [0x3b6]
---
0xfa JUMPDEST
0xfb PUSH2 0x102
0xfe PUSH2 0x3b6
0x101 JUMP
---
0xfa: JUMPDEST 
0xfb: V76 = 0x102
0xfe: V77 = 0x3b6
0x101: JUMP 0x3b6
---
Entry stack: [V12, 0x106]
Stack pops: 0
Stack additions: [0x102]
Exit stack: [V12, 0x106, 0x102]

================================

Block 0x102
[0x102:0x102]
---
Predecessors: [0xf5, 0x4fa]
Successors: [0x103]
---
0x102 JUMPDEST
---
0x102: JUMPDEST 
---
Entry stack: [V12, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S0]

================================

Block 0x103
[0x103:0x103]
---
Predecessors: [0x102]
Successors: [0x104]
---
0x103 JUMPDEST
---
0x103: JUMPDEST 
---
Entry stack: [V12, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S0]

================================

Block 0x104
[0x104:0x105]
---
Predecessors: [0x103]
Successors: [0x106]
---
0x104 JUMPDEST
0x105 JUMP
---
0x104: JUMPDEST 
0x105: JUMP 0x106
---
Entry stack: [V12, 0x106]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x106
[0x106:0x107]
---
Predecessors: [0x104, 0x3b2, 0x4fa, 0x55f, 0x662, 0x6d9, 0x724, 0x760]
Successors: []
---
0x106 JUMPDEST
0x107 STOP
---
0x106: JUMPDEST 
0x107: STOP 
---
Entry stack: [V12, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S0]

================================

Block 0x108
[0x108:0x10e]
---
Predecessors: [0xb]
Successors: [0x10f, 0x110]
---
0x108 JUMPDEST
0x109 CALLVALUE
0x10a ISZERO
0x10b PUSH2 0x110
0x10e JUMPI
---
0x108: JUMPDEST 
0x109: V78 = CALLVALUE
0x10a: V79 = ISZERO V78
0x10b: V80 = 0x110
0x10e: JUMPI 0x110 V79
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x10f
[0x10f:0x10f]
---
Predecessors: [0x108]
Successors: []
---
0x10f INVALID
---
0x10f: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x110
[0x110:0x117]
---
Predecessors: [0x108]
Successors: [0x4fc]
---
0x110 JUMPDEST
0x111 PUSH2 0x118
0x114 PUSH2 0x4fc
0x117 JUMP
---
0x110: JUMPDEST 
0x111: V81 = 0x118
0x114: V82 = 0x4fc
0x117: JUMP 0x4fc
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x118]
Exit stack: [V12, 0x118]

================================

Block 0x118
[0x118:0x133]
---
Predecessors: [0x509, 0x56f, 0x572, 0x58a, 0x5be, 0x763]
Successors: []
---
0x118 JUMPDEST
0x119 PUSH1 0x40
0x11b DUP1
0x11c MLOAD
0x11d PUSH1 0x1
0x11f PUSH1 0xa0
0x121 PUSH1 0x2
0x123 EXP
0x124 SUB
0x125 SWAP1
0x126 SWAP3
0x127 AND
0x128 DUP3
0x129 MSTORE
0x12a MLOAD
0x12b SWAP1
0x12c DUP2
0x12d SWAP1
0x12e SUB
0x12f PUSH1 0x20
0x131 ADD
0x132 SWAP1
0x133 RETURN
---
0x118: JUMPDEST 
0x119: V83 = 0x40
0x11c: V84 = M[0x40]
0x11d: V85 = 0x1
0x11f: V86 = 0xa0
0x121: V87 = 0x2
0x123: V88 = EXP 0x2 0xa0
0x124: V89 = SUB 0x10000000000000000000000000000000000000000 0x1
0x127: V90 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x129: M[V84] = V90
0x12a: V91 = M[0x40]
0x12e: V92 = SUB V84 V91
0x12f: V93 = 0x20
0x131: V94 = ADD 0x20 V92
0x133: RETURN V91 V94
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x134
[0x134:0x13a]
---
Predecessors: [0x25]
Successors: [0x13b, 0x13c]
---
0x134 JUMPDEST
0x135 CALLVALUE
0x136 ISZERO
0x137 PUSH2 0x13c
0x13a JUMPI
---
0x134: JUMPDEST 
0x135: V95 = CALLVALUE
0x136: V96 = ISZERO V95
0x137: V97 = 0x13c
0x13a: JUMPI 0x13c V96
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x13b
[0x13b:0x13b]
---
Predecessors: [0x134]
Successors: []
---
0x13b INVALID
---
0x13b: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x13c
[0x13c:0x143]
---
Predecessors: [0x134]
Successors: [0x50c]
---
0x13c JUMPDEST
0x13d PUSH2 0x144
0x140 PUSH2 0x50c
0x143 JUMP
---
0x13c: JUMPDEST 
0x13d: V98 = 0x144
0x140: V99 = 0x50c
0x143: JUMP 0x50c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x144]
Exit stack: [V12, 0x144]

================================

Block 0x144
[0x144:0x155]
---
Predecessors: [0x50c, 0x5b3, 0x5b8, 0x664]
Successors: []
---
0x144 JUMPDEST
0x145 PUSH1 0x40
0x147 DUP1
0x148 MLOAD
0x149 SWAP2
0x14a DUP3
0x14b MSTORE
0x14c MLOAD
0x14d SWAP1
0x14e DUP2
0x14f SWAP1
0x150 SUB
0x151 PUSH1 0x20
0x153 ADD
0x154 SWAP1
0x155 RETURN
---
0x144: JUMPDEST 
0x145: V100 = 0x40
0x148: V101 = M[0x40]
0x14b: M[V101] = S0
0x14c: V102 = M[0x40]
0x150: V103 = SUB V101 V102
0x151: V104 = 0x20
0x153: V105 = ADD 0x20 V103
0x155: RETURN V102 V105
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x156
[0x156:0x15c]
---
Predecessors: [0x30]
Successors: [0x15d, 0x15e]
---
0x156 JUMPDEST
0x157 CALLVALUE
0x158 ISZERO
0x159 PUSH2 0x15e
0x15c JUMPI
---
0x156: JUMPDEST 
0x157: V106 = CALLVALUE
0x158: V107 = ISZERO V106
0x159: V108 = 0x15e
0x15c: JUMPI 0x15e V107
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x15d
[0x15d:0x15d]
---
Predecessors: [0x156]
Successors: []
---
0x15d INVALID
---
0x15d: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x15e
[0x15e:0x171]
---
Predecessors: [0x156]
Successors: [0x512]
---
0x15e JUMPDEST
0x15f PUSH2 0x106
0x162 PUSH1 0x1
0x164 PUSH1 0xa0
0x166 PUSH1 0x2
0x168 EXP
0x169 SUB
0x16a PUSH1 0x4
0x16c CALLDATALOAD
0x16d AND
0x16e PUSH2 0x512
0x171 JUMP
---
0x15e: JUMPDEST 
0x15f: V109 = 0x106
0x162: V110 = 0x1
0x164: V111 = 0xa0
0x166: V112 = 0x2
0x168: V113 = EXP 0x2 0xa0
0x169: V114 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16a: V115 = 0x4
0x16c: V116 = CALLDATALOAD 0x4
0x16d: V117 = AND V116 0xffffffffffffffffffffffffffffffffffffffff
0x16e: V118 = 0x512
0x171: JUMP 0x512
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x106, V117]
Exit stack: [V12, 0x106, V117]

================================

Block 0x172
[0x172:0x173]
---
Predecessors: []
Successors: []
---
0x172 JUMPDEST
0x173 STOP
---
0x172: JUMPDEST 
0x173: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x174
[0x174:0x17a]
---
Predecessors: [0x3b]
Successors: [0x17b, 0x17c]
---
0x174 JUMPDEST
0x175 CALLVALUE
0x176 ISZERO
0x177 PUSH2 0x17c
0x17a JUMPI
---
0x174: JUMPDEST 
0x175: V119 = CALLVALUE
0x176: V120 = ISZERO V119
0x177: V121 = 0x17c
0x17a: JUMPI 0x17c V120
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x17b
[0x17b:0x17b]
---
Predecessors: [0x174]
Successors: []
---
0x17b INVALID
---
0x17b: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x17c
[0x17c:0x183]
---
Predecessors: [0x174]
Successors: [0x562]
---
0x17c JUMPDEST
0x17d PUSH2 0x118
0x180 PUSH2 0x562
0x183 JUMP
---
0x17c: JUMPDEST 
0x17d: V122 = 0x118
0x180: V123 = 0x562
0x183: JUMP 0x562
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x118]
Exit stack: [V12, 0x118]

================================

Block 0x184
[0x184:0x19f]
---
Predecessors: []
Successors: []
---
0x184 JUMPDEST
0x185 PUSH1 0x40
0x187 DUP1
0x188 MLOAD
0x189 PUSH1 0x1
0x18b PUSH1 0xa0
0x18d PUSH1 0x2
0x18f EXP
0x190 SUB
0x191 SWAP1
0x192 SWAP3
0x193 AND
0x194 DUP3
0x195 MSTORE
0x196 MLOAD
0x197 SWAP1
0x198 DUP2
0x199 SWAP1
0x19a SUB
0x19b PUSH1 0x20
0x19d ADD
0x19e SWAP1
0x19f RETURN
---
0x184: JUMPDEST 
0x185: V124 = 0x40
0x188: V125 = M[0x40]
0x189: V126 = 0x1
0x18b: V127 = 0xa0
0x18d: V128 = 0x2
0x18f: V129 = EXP 0x2 0xa0
0x190: V130 = SUB 0x10000000000000000000000000000000000000000 0x1
0x193: V131 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x195: M[V125] = V131
0x196: V132 = M[0x40]
0x19a: V133 = SUB V125 V132
0x19b: V134 = 0x20
0x19d: V135 = ADD 0x20 V133
0x19f: RETURN V132 V135
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1a0
[0x1a0:0x1a7]
---
Predecessors: [0x46]
Successors: [0x3b6]
---
0x1a0 JUMPDEST
0x1a1 PUSH2 0x106
0x1a4 PUSH2 0x3b6
0x1a7 JUMP
---
0x1a0: JUMPDEST 
0x1a1: V136 = 0x106
0x1a4: V137 = 0x3b6
0x1a7: JUMP 0x3b6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x106]
Exit stack: [V12, 0x106]

================================

Block 0x1a8
[0x1a8:0x1a9]
---
Predecessors: []
Successors: []
---
0x1a8 JUMPDEST
0x1a9 STOP
---
0x1a8: JUMPDEST 
0x1a9: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1aa
[0x1aa:0x1b0]
---
Predecessors: [0x51]
Successors: [0x1b1, 0x1b2]
---
0x1aa JUMPDEST
0x1ab CALLVALUE
0x1ac ISZERO
0x1ad PUSH2 0x1b2
0x1b0 JUMPI
---
0x1aa: JUMPDEST 
0x1ab: V138 = CALLVALUE
0x1ac: V139 = ISZERO V138
0x1ad: V140 = 0x1b2
0x1b0: JUMPI 0x1b2 V139
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b1
[0x1b1:0x1b1]
---
Predecessors: [0x1aa]
Successors: []
---
0x1b1 INVALID
---
0x1b1: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b2
[0x1b2:0x1b9]
---
Predecessors: [0x1aa]
Successors: [0x572]
---
0x1b2 JUMPDEST
0x1b3 PUSH2 0x118
0x1b6 PUSH2 0x572
0x1b9 JUMP
---
0x1b2: JUMPDEST 
0x1b3: V141 = 0x118
0x1b6: V142 = 0x572
0x1b9: JUMP 0x572
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x118]
Exit stack: [V12, 0x118]

================================

Block 0x1ba
[0x1ba:0x1d5]
---
Predecessors: []
Successors: []
---
0x1ba JUMPDEST
0x1bb PUSH1 0x40
0x1bd DUP1
0x1be MLOAD
0x1bf PUSH1 0x1
0x1c1 PUSH1 0xa0
0x1c3 PUSH1 0x2
0x1c5 EXP
0x1c6 SUB
0x1c7 SWAP1
0x1c8 SWAP3
0x1c9 AND
0x1ca DUP3
0x1cb MSTORE
0x1cc MLOAD
0x1cd SWAP1
0x1ce DUP2
0x1cf SWAP1
0x1d0 SUB
0x1d1 PUSH1 0x20
0x1d3 ADD
0x1d4 SWAP1
0x1d5 RETURN
---
0x1ba: JUMPDEST 
0x1bb: V143 = 0x40
0x1be: V144 = M[0x40]
0x1bf: V145 = 0x1
0x1c1: V146 = 0xa0
0x1c3: V147 = 0x2
0x1c5: V148 = EXP 0x2 0xa0
0x1c6: V149 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c9: V150 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1cb: M[V144] = V150
0x1cc: V151 = M[0x40]
0x1d0: V152 = SUB V144 V151
0x1d1: V153 = 0x20
0x1d3: V154 = ADD 0x20 V152
0x1d5: RETURN V151 V154
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1d6
[0x1d6:0x1dc]
---
Predecessors: [0x5c]
Successors: [0x1dd, 0x1de]
---
0x1d6 JUMPDEST
0x1d7 CALLVALUE
0x1d8 ISZERO
0x1d9 PUSH2 0x1de
0x1dc JUMPI
---
0x1d6: JUMPDEST 
0x1d7: V155 = CALLVALUE
0x1d8: V156 = ISZERO V155
0x1d9: V157 = 0x1de
0x1dc: JUMPI 0x1de V156
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1dd
[0x1dd:0x1dd]
---
Predecessors: [0x1d6]
Successors: []
---
0x1dd INVALID
---
0x1dd: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1de
[0x1de:0x1e5]
---
Predecessors: [0x1d6]
Successors: [0x581]
---
0x1de JUMPDEST
0x1df PUSH2 0x1e6
0x1e2 PUSH2 0x581
0x1e5 JUMP
---
0x1de: JUMPDEST 
0x1df: V158 = 0x1e6
0x1e2: V159 = 0x581
0x1e5: JUMP 0x581
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1e6]
Exit stack: [V12, 0x1e6]

================================

Block 0x1e6
[0x1e6:0x1f9]
---
Predecessors: [0x581]
Successors: []
---
0x1e6 JUMPDEST
0x1e7 PUSH1 0x40
0x1e9 DUP1
0x1ea MLOAD
0x1eb SWAP2
0x1ec ISZERO
0x1ed ISZERO
0x1ee DUP3
0x1ef MSTORE
0x1f0 MLOAD
0x1f1 SWAP1
0x1f2 DUP2
0x1f3 SWAP1
0x1f4 SUB
0x1f5 PUSH1 0x20
0x1f7 ADD
0x1f8 SWAP1
0x1f9 RETURN
---
0x1e6: JUMPDEST 
0x1e7: V160 = 0x40
0x1ea: V161 = M[0x40]
0x1ec: V162 = ISZERO V531
0x1ed: V163 = ISZERO V162
0x1ef: M[V161] = V163
0x1f0: V164 = M[0x40]
0x1f4: V165 = SUB V161 V164
0x1f5: V166 = 0x20
0x1f7: V167 = ADD 0x20 V165
0x1f9: RETURN V164 V167
---
Entry stack: [V12, 0x1e6, V531]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1e6]

================================

Block 0x1fa
[0x1fa:0x200]
---
Predecessors: [0x67]
Successors: [0x201, 0x202]
---
0x1fa JUMPDEST
0x1fb CALLVALUE
0x1fc ISZERO
0x1fd PUSH2 0x202
0x200 JUMPI
---
0x1fa: JUMPDEST 
0x1fb: V168 = CALLVALUE
0x1fc: V169 = ISZERO V168
0x1fd: V170 = 0x202
0x200: JUMPI 0x202 V169
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x201
[0x201:0x201]
---
Predecessors: [0x1fa]
Successors: []
---
0x201 INVALID
---
0x201: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x202
[0x202:0x209]
---
Predecessors: [0x1fa]
Successors: [0x58a]
---
0x202 JUMPDEST
0x203 PUSH2 0x118
0x206 PUSH2 0x58a
0x209 JUMP
---
0x202: JUMPDEST 
0x203: V171 = 0x118
0x206: V172 = 0x58a
0x209: JUMP 0x58a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x118]
Exit stack: [V12, 0x118]

================================

Block 0x20a
[0x20a:0x225]
---
Predecessors: []
Successors: []
---
0x20a JUMPDEST
0x20b PUSH1 0x40
0x20d DUP1
0x20e MLOAD
0x20f PUSH1 0x1
0x211 PUSH1 0xa0
0x213 PUSH1 0x2
0x215 EXP
0x216 SUB
0x217 SWAP1
0x218 SWAP3
0x219 AND
0x21a DUP3
0x21b MSTORE
0x21c MLOAD
0x21d SWAP1
0x21e DUP2
0x21f SWAP1
0x220 SUB
0x221 PUSH1 0x20
0x223 ADD
0x224 SWAP1
0x225 RETURN
---
0x20a: JUMPDEST 
0x20b: V173 = 0x40
0x20e: V174 = M[0x40]
0x20f: V175 = 0x1
0x211: V176 = 0xa0
0x213: V177 = 0x2
0x215: V178 = EXP 0x2 0xa0
0x216: V179 = SUB 0x10000000000000000000000000000000000000000 0x1
0x219: V180 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x21b: M[V174] = V180
0x21c: V181 = M[0x40]
0x220: V182 = SUB V174 V181
0x221: V183 = 0x20
0x223: V184 = ADD 0x20 V182
0x225: RETURN V181 V184
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x226
[0x226:0x22c]
---
Predecessors: [0x72]
Successors: [0x22d, 0x22e]
---
0x226 JUMPDEST
0x227 CALLVALUE
0x228 ISZERO
0x229 PUSH2 0x22e
0x22c JUMPI
---
0x226: JUMPDEST 
0x227: V185 = CALLVALUE
0x228: V186 = ISZERO V185
0x229: V187 = 0x22e
0x22c: JUMPI 0x22e V186
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x22d
[0x22d:0x22d]
---
Predecessors: [0x226]
Successors: []
---
0x22d INVALID
---
0x22d: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x22e
[0x22e:0x241]
---
Predecessors: [0x226]
Successors: [0x599]
---
0x22e JUMPDEST
0x22f PUSH2 0x144
0x232 PUSH1 0x1
0x234 PUSH1 0xa0
0x236 PUSH1 0x2
0x238 EXP
0x239 SUB
0x23a PUSH1 0x4
0x23c CALLDATALOAD
0x23d AND
0x23e PUSH2 0x599
0x241 JUMP
---
0x22e: JUMPDEST 
0x22f: V188 = 0x144
0x232: V189 = 0x1
0x234: V190 = 0xa0
0x236: V191 = 0x2
0x238: V192 = EXP 0x2 0xa0
0x239: V193 = SUB 0x10000000000000000000000000000000000000000 0x1
0x23a: V194 = 0x4
0x23c: V195 = CALLDATALOAD 0x4
0x23d: V196 = AND V195 0xffffffffffffffffffffffffffffffffffffffff
0x23e: V197 = 0x599
0x241: JUMP 0x599
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x144, V196]
Exit stack: [V12, 0x144, V196]

================================

Block 0x242
[0x242:0x253]
---
Predecessors: []
Successors: []
---
0x242 JUMPDEST
0x243 PUSH1 0x40
0x245 DUP1
0x246 MLOAD
0x247 SWAP2
0x248 DUP3
0x249 MSTORE
0x24a MLOAD
0x24b SWAP1
0x24c DUP2
0x24d SWAP1
0x24e SUB
0x24f PUSH1 0x20
0x251 ADD
0x252 SWAP1
0x253 RETURN
---
0x242: JUMPDEST 
0x243: V198 = 0x40
0x246: V199 = M[0x40]
0x249: M[V199] = S0
0x24a: V200 = M[0x40]
0x24e: V201 = SUB V199 V200
0x24f: V202 = 0x20
0x251: V203 = ADD 0x20 V201
0x253: RETURN V200 V203
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x254
[0x254:0x25a]
---
Predecessors: [0x7d]
Successors: [0x25b, 0x25c]
---
0x254 JUMPDEST
0x255 CALLVALUE
0x256 ISZERO
0x257 PUSH2 0x25c
0x25a JUMPI
---
0x254: JUMPDEST 
0x255: V204 = CALLVALUE
0x256: V205 = ISZERO V204
0x257: V206 = 0x25c
0x25a: JUMPI 0x25c V205
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x25b
[0x25b:0x25b]
---
Predecessors: [0x254]
Successors: []
---
0x25b INVALID
---
0x25b: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x25c
[0x25c:0x263]
---
Predecessors: [0x254]
Successors: [0x5b8]
---
0x25c JUMPDEST
0x25d PUSH2 0x144
0x260 PUSH2 0x5b8
0x263 JUMP
---
0x25c: JUMPDEST 
0x25d: V207 = 0x144
0x260: V208 = 0x5b8
0x263: JUMP 0x5b8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x144]
Exit stack: [V12, 0x144]

================================

Block 0x264
[0x264:0x275]
---
Predecessors: []
Successors: []
---
0x264 JUMPDEST
0x265 PUSH1 0x40
0x267 DUP1
0x268 MLOAD
0x269 SWAP2
0x26a DUP3
0x26b MSTORE
0x26c MLOAD
0x26d SWAP1
0x26e DUP2
0x26f SWAP1
0x270 SUB
0x271 PUSH1 0x20
0x273 ADD
0x274 SWAP1
0x275 RETURN
---
0x264: JUMPDEST 
0x265: V209 = 0x40
0x268: V210 = M[0x40]
0x26b: M[V210] = S0
0x26c: V211 = M[0x40]
0x270: V212 = SUB V210 V211
0x271: V213 = 0x20
0x273: V214 = ADD 0x20 V212
0x275: RETURN V211 V214
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x276
[0x276:0x27c]
---
Predecessors: [0x88]
Successors: [0x27d, 0x27e]
---
0x276 JUMPDEST
0x277 CALLVALUE
0x278 ISZERO
0x279 PUSH2 0x27e
0x27c JUMPI
---
0x276: JUMPDEST 
0x277: V215 = CALLVALUE
0x278: V216 = ISZERO V215
0x279: V217 = 0x27e
0x27c: JUMPI 0x27e V216
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x27d
[0x27d:0x27d]
---
Predecessors: [0x276]
Successors: []
---
0x27d INVALID
---
0x27d: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x27e
[0x27e:0x285]
---
Predecessors: [0x276]
Successors: [0x5be]
---
0x27e JUMPDEST
0x27f PUSH2 0x118
0x282 PUSH2 0x5be
0x285 JUMP
---
0x27e: JUMPDEST 
0x27f: V218 = 0x118
0x282: V219 = 0x5be
0x285: JUMP 0x5be
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x118]
Exit stack: [V12, 0x118]

================================

Block 0x286
[0x286:0x2a1]
---
Predecessors: []
Successors: []
---
0x286 JUMPDEST
0x287 PUSH1 0x40
0x289 DUP1
0x28a MLOAD
0x28b PUSH1 0x1
0x28d PUSH1 0xa0
0x28f PUSH1 0x2
0x291 EXP
0x292 SUB
0x293 SWAP1
0x294 SWAP3
0x295 AND
0x296 DUP3
0x297 MSTORE
0x298 MLOAD
0x299 SWAP1
0x29a DUP2
0x29b SWAP1
0x29c SUB
0x29d PUSH1 0x20
0x29f ADD
0x2a0 SWAP1
0x2a1 RETURN
---
0x286: JUMPDEST 
0x287: V220 = 0x40
0x28a: V221 = M[0x40]
0x28b: V222 = 0x1
0x28d: V223 = 0xa0
0x28f: V224 = 0x2
0x291: V225 = EXP 0x2 0xa0
0x292: V226 = SUB 0x10000000000000000000000000000000000000000 0x1
0x295: V227 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x297: M[V221] = V227
0x298: V228 = M[0x40]
0x29c: V229 = SUB V221 V228
0x29d: V230 = 0x20
0x29f: V231 = ADD 0x20 V229
0x2a1: RETURN V228 V231
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2a2
[0x2a2:0x2a8]
---
Predecessors: [0x93]
Successors: [0x2a9, 0x2aa]
---
0x2a2 JUMPDEST
0x2a3 CALLVALUE
0x2a4 ISZERO
0x2a5 PUSH2 0x2aa
0x2a8 JUMPI
---
0x2a2: JUMPDEST 
0x2a3: V232 = CALLVALUE
0x2a4: V233 = ISZERO V232
0x2a5: V234 = 0x2aa
0x2a8: JUMPI 0x2aa V233
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a9
[0x2a9:0x2a9]
---
Predecessors: [0x2a2]
Successors: []
---
0x2a9 INVALID
---
0x2a9: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2aa
[0x2aa:0x2b1]
---
Predecessors: [0x2a2]
Successors: [0x5cd]
---
0x2aa JUMPDEST
0x2ab PUSH2 0x106
0x2ae PUSH2 0x5cd
0x2b1 JUMP
---
0x2aa: JUMPDEST 
0x2ab: V235 = 0x106
0x2ae: V236 = 0x5cd
0x2b1: JUMP 0x5cd
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x106]
Exit stack: [V12, 0x106]

================================

Block 0x2b2
[0x2b2:0x2b3]
---
Predecessors: []
Successors: []
---
0x2b2 JUMPDEST
0x2b3 STOP
---
0x2b2: JUMPDEST 
0x2b3: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2b4
[0x2b4:0x2ba]
---
Predecessors: [0x9e]
Successors: [0x2bb, 0x2bc]
---
0x2b4 JUMPDEST
0x2b5 CALLVALUE
0x2b6 ISZERO
0x2b7 PUSH2 0x2bc
0x2ba JUMPI
---
0x2b4: JUMPDEST 
0x2b5: V237 = CALLVALUE
0x2b6: V238 = ISZERO V237
0x2b7: V239 = 0x2bc
0x2ba: JUMPI 0x2bc V238
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2bb
[0x2bb:0x2bb]
---
Predecessors: [0x2b4]
Successors: []
---
0x2bb INVALID
---
0x2bb: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2bc
[0x2bc:0x2c3]
---
Predecessors: [0x2b4]
Successors: [0x664]
---
0x2bc JUMPDEST
0x2bd PUSH2 0x144
0x2c0 PUSH2 0x664
0x2c3 JUMP
---
0x2bc: JUMPDEST 
0x2bd: V240 = 0x144
0x2c0: V241 = 0x664
0x2c3: JUMP 0x664
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x144]
Exit stack: [V12, 0x144]

================================

Block 0x2c4
[0x2c4:0x2d5]
---
Predecessors: []
Successors: []
---
0x2c4 JUMPDEST
0x2c5 PUSH1 0x40
0x2c7 DUP1
0x2c8 MLOAD
0x2c9 SWAP2
0x2ca DUP3
0x2cb MSTORE
0x2cc MLOAD
0x2cd SWAP1
0x2ce DUP2
0x2cf SWAP1
0x2d0 SUB
0x2d1 PUSH1 0x20
0x2d3 ADD
0x2d4 SWAP1
0x2d5 RETURN
---
0x2c4: JUMPDEST 
0x2c5: V242 = 0x40
0x2c8: V243 = M[0x40]
0x2cb: M[V243] = S0
0x2cc: V244 = M[0x40]
0x2d0: V245 = SUB V243 V244
0x2d1: V246 = 0x20
0x2d3: V247 = ADD 0x20 V245
0x2d5: RETURN V244 V247
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2d6
[0x2d6:0x2dd]
---
Predecessors: [0xa9]
Successors: [0x352]
---
0x2d6 JUMPDEST
0x2d7 PUSH2 0x106
0x2da PUSH2 0x352
0x2dd JUMP
---
0x2d6: JUMPDEST 
0x2d7: V248 = 0x106
0x2da: V249 = 0x352
0x2dd: JUMP 0x352
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x106]
Exit stack: [V12, 0x106]

================================

Block 0x2de
[0x2de:0x2df]
---
Predecessors: []
Successors: []
---
0x2de JUMPDEST
0x2df STOP
---
0x2de: JUMPDEST 
0x2df: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2e0
[0x2e0:0x2e7]
---
Predecessors: [0xb4]
Successors: [0x66a]
---
0x2e0 JUMPDEST
0x2e1 PUSH2 0x106
0x2e4 PUSH2 0x66a
0x2e7 JUMP
---
0x2e0: JUMPDEST 
0x2e1: V250 = 0x106
0x2e4: V251 = 0x66a
0x2e7: JUMP 0x66a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x106]
Exit stack: [V12, 0x106]

================================

Block 0x2e8
[0x2e8:0x2e9]
---
Predecessors: []
Successors: []
---
0x2e8 JUMPDEST
0x2e9 STOP
---
0x2e8: JUMPDEST 
0x2e9: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2ea
[0x2ea:0x2f0]
---
Predecessors: [0xbf]
Successors: [0x2f1, 0x2f2]
---
0x2ea JUMPDEST
0x2eb CALLVALUE
0x2ec ISZERO
0x2ed PUSH2 0x2f2
0x2f0 JUMPI
---
0x2ea: JUMPDEST 
0x2eb: V252 = CALLVALUE
0x2ec: V253 = ISZERO V252
0x2ed: V254 = 0x2f2
0x2f0: JUMPI 0x2f2 V253
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2f1
[0x2f1:0x2f1]
---
Predecessors: [0x2ea]
Successors: []
---
0x2f1 INVALID
---
0x2f1: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2f2
[0x2f2:0x305]
---
Predecessors: [0x2ea]
Successors: [0x6db]
---
0x2f2 JUMPDEST
0x2f3 PUSH2 0x106
0x2f6 PUSH1 0x1
0x2f8 PUSH1 0xa0
0x2fa PUSH1 0x2
0x2fc EXP
0x2fd SUB
0x2fe PUSH1 0x4
0x300 CALLDATALOAD
0x301 AND
0x302 PUSH2 0x6db
0x305 JUMP
---
0x2f2: JUMPDEST 
0x2f3: V255 = 0x106
0x2f6: V256 = 0x1
0x2f8: V257 = 0xa0
0x2fa: V258 = 0x2
0x2fc: V259 = EXP 0x2 0xa0
0x2fd: V260 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2fe: V261 = 0x4
0x300: V262 = CALLDATALOAD 0x4
0x301: V263 = AND V262 0xffffffffffffffffffffffffffffffffffffffff
0x302: V264 = 0x6db
0x305: JUMP 0x6db
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x106, V263]
Exit stack: [V12, 0x106, V263]

================================

Block 0x306
[0x306:0x307]
---
Predecessors: []
Successors: []
---
0x306 JUMPDEST
0x307 STOP
---
0x306: JUMPDEST 
0x307: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x308
[0x308:0x30e]
---
Predecessors: [0xca]
Successors: [0x30f, 0x310]
---
0x308 JUMPDEST
0x309 CALLVALUE
0x30a ISZERO
0x30b PUSH2 0x310
0x30e JUMPI
---
0x308: JUMPDEST 
0x309: V265 = CALLVALUE
0x30a: V266 = ISZERO V265
0x30b: V267 = 0x310
0x30e: JUMPI 0x310 V266
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x30f
[0x30f:0x30f]
---
Predecessors: [0x308]
Successors: []
---
0x30f INVALID
---
0x30f: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x310
[0x310:0x323]
---
Predecessors: [0x308]
Successors: [0x727]
---
0x310 JUMPDEST
0x311 PUSH2 0x106
0x314 PUSH1 0x1
0x316 PUSH1 0xa0
0x318 PUSH1 0x2
0x31a EXP
0x31b SUB
0x31c PUSH1 0x4
0x31e CALLDATALOAD
0x31f AND
0x320 PUSH2 0x727
0x323 JUMP
---
0x310: JUMPDEST 
0x311: V268 = 0x106
0x314: V269 = 0x1
0x316: V270 = 0xa0
0x318: V271 = 0x2
0x31a: V272 = EXP 0x2 0xa0
0x31b: V273 = SUB 0x10000000000000000000000000000000000000000 0x1
0x31c: V274 = 0x4
0x31e: V275 = CALLDATALOAD 0x4
0x31f: V276 = AND V275 0xffffffffffffffffffffffffffffffffffffffff
0x320: V277 = 0x727
0x323: JUMP 0x727
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x106, V276]
Exit stack: [V12, 0x106, V276]

================================

Block 0x324
[0x324:0x325]
---
Predecessors: []
Successors: []
---
0x324 JUMPDEST
0x325 STOP
---
0x324: JUMPDEST 
0x325: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x326
[0x326:0x32c]
---
Predecessors: [0xd5]
Successors: [0x32d, 0x32e]
---
0x326 JUMPDEST
0x327 CALLVALUE
0x328 ISZERO
0x329 PUSH2 0x32e
0x32c JUMPI
---
0x326: JUMPDEST 
0x327: V278 = CALLVALUE
0x328: V279 = ISZERO V278
0x329: V280 = 0x32e
0x32c: JUMPI 0x32e V279
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x32d
[0x32d:0x32d]
---
Predecessors: [0x326]
Successors: []
---
0x32d INVALID
---
0x32d: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x32e
[0x32e:0x335]
---
Predecessors: [0x326]
Successors: [0x763]
---
0x32e JUMPDEST
0x32f PUSH2 0x118
0x332 PUSH2 0x763
0x335 JUMP
---
0x32e: JUMPDEST 
0x32f: V281 = 0x118
0x332: V282 = 0x763
0x335: JUMP 0x763
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x118]
Exit stack: [V12, 0x118]

================================

Block 0x336
[0x336:0x351]
---
Predecessors: []
Successors: []
---
0x336 JUMPDEST
0x337 PUSH1 0x40
0x339 DUP1
0x33a MLOAD
0x33b PUSH1 0x1
0x33d PUSH1 0xa0
0x33f PUSH1 0x2
0x341 EXP
0x342 SUB
0x343 SWAP1
0x344 SWAP3
0x345 AND
0x346 DUP3
0x347 MSTORE
0x348 MLOAD
0x349 SWAP1
0x34a DUP2
0x34b SWAP1
0x34c SUB
0x34d PUSH1 0x20
0x34f ADD
0x350 SWAP1
0x351 RETURN
---
0x336: JUMPDEST 
0x337: V283 = 0x40
0x33a: V284 = M[0x40]
0x33b: V285 = 0x1
0x33d: V286 = 0xa0
0x33f: V287 = 0x2
0x341: V288 = EXP 0x2 0xa0
0x342: V289 = SUB 0x10000000000000000000000000000000000000000 0x1
0x345: V290 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x347: M[V284] = V290
0x348: V291 = M[0x40]
0x34c: V292 = SUB V284 V291
0x34d: V293 = 0x20
0x34f: V294 = ADD 0x20 V292
0x351: RETURN V291 V294
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x352
[0x352:0x362]
---
Predecessors: [0xee, 0x2d6]
Successors: [0x363, 0x368]
---
0x352 JUMPDEST
0x353 PUSH1 0x3
0x355 SLOAD
0x356 PUSH1 0x0
0x358 SWAP1
0x359 DUP2
0x35a SWAP1
0x35b PUSH1 0xff
0x35d AND
0x35e ISZERO
0x35f PUSH2 0x368
0x362 JUMPI
---
0x352: JUMPDEST 
0x353: V295 = 0x3
0x355: V296 = S[0x3]
0x356: V297 = 0x0
0x35b: V298 = 0xff
0x35d: V299 = AND 0xff V296
0x35e: V300 = ISZERO V299
0x35f: V301 = 0x368
0x362: JUMPI 0x368 V300
---
Entry stack: [V12, S1, {0xf5, 0x106}]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, S1, {0xf5, 0x106}, 0x0, 0x0]

================================

Block 0x363
[0x363:0x367]
---
Predecessors: [0x352]
Successors: []
---
0x363 PUSH1 0x0
0x365 PUSH1 0x0
0x367 REVERT
---
0x363: V302 = 0x0
0x365: V303 = 0x0
0x367: REVERT 0x0 0x0
---
Entry stack: [V12, S3, {0xf5, 0x106}, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S3, {0xf5, 0x106}, 0x0, 0x0]

================================

Block 0x368
[0x368:0x371]
---
Predecessors: [0x352]
Successors: [0x372]
---
0x368 JUMPDEST
0x369 PUSH1 0x4
0x36b SLOAD
0x36c PUSH2 0x3e8
0x36f SWAP1
0x370 CALLVALUE
0x371 MUL
---
0x368: JUMPDEST 
0x369: V304 = 0x4
0x36b: V305 = S[0x4]
0x36c: V306 = 0x3e8
0x370: V307 = CALLVALUE
0x371: V308 = MUL V307 V305
---
Entry stack: [V12, S3, {0xf5, 0x106}, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x3e8, V308]
Exit stack: [V12, S3, {0xf5, 0x106}, 0x0, 0x0, 0x3e8, V308]

================================

Block 0x372
[0x372:0x3b0]
---
Predecessors: [0x368]
Successors: [0x3b1]
---
0x372 JUMPDEST
0x373 PUSH1 0x2
0x375 DUP1
0x376 SLOAD
0x377 SWAP3
0x378 SWAP1
0x379 SWAP2
0x37a DIV
0x37b SWAP2
0x37c DUP3
0x37d ADD
0x37e SWAP1
0x37f SSTORE
0x380 PUSH1 0x1
0x382 PUSH1 0xa0
0x384 PUSH1 0x2
0x386 EXP
0x387 SUB
0x388 CALLER
0x389 AND
0x38a PUSH1 0x0
0x38c SWAP1
0x38d DUP2
0x38e MSTORE
0x38f PUSH1 0x1
0x391 PUSH1 0x20
0x393 MSTORE
0x394 PUSH1 0x40
0x396 SWAP1
0x397 SHA3
0x398 DUP1
0x399 SLOAD
0x39a CALLVALUE
0x39b DUP4
0x39c SWAP1
0x39d SUB
0x39e SWAP1
0x39f DUP2
0x3a0 ADD
0x3a1 SWAP1
0x3a2 SWAP2
0x3a3 SSTORE
0x3a4 PUSH1 0x5
0x3a6 DUP1
0x3a7 SLOAD
0x3a8 DUP3
0x3a9 ADD
0x3aa SWAP1
0x3ab SSTORE
0x3ac SWAP1
0x3ad SWAP3
0x3ae POP
0x3af SWAP1
0x3b0 POP
---
0x372: JUMPDEST 
0x373: V309 = 0x2
0x376: V310 = S[0x2]
0x37a: V311 = DIV V308 0x3e8
0x37d: V312 = ADD V311 V310
0x37f: S[0x2] = V312
0x380: V313 = 0x1
0x382: V314 = 0xa0
0x384: V315 = 0x2
0x386: V316 = EXP 0x2 0xa0
0x387: V317 = SUB 0x10000000000000000000000000000000000000000 0x1
0x388: V318 = CALLER
0x389: V319 = AND V318 0xffffffffffffffffffffffffffffffffffffffff
0x38a: V320 = 0x0
0x38e: M[0x0] = V319
0x38f: V321 = 0x1
0x391: V322 = 0x20
0x393: M[0x20] = 0x1
0x394: V323 = 0x40
0x397: V324 = SHA3 0x0 0x40
0x399: V325 = S[V324]
0x39a: V326 = CALLVALUE
0x39d: V327 = SUB V326 V311
0x3a0: V328 = ADD V327 V325
0x3a3: S[V324] = V328
0x3a4: V329 = 0x5
0x3a7: V330 = S[0x5]
0x3a9: V331 = ADD V327 V330
0x3ab: S[0x5] = V331
---
Entry stack: [V12, S5, {0xf5, 0x106}, 0x0, 0x0, 0x3e8, V308]
Stack pops: 4
Stack additions: [V311, V327]
Exit stack: [V12, S5, {0xf5, 0x106}, V311, V327]

================================

Block 0x3b1
[0x3b1:0x3b1]
---
Predecessors: [0x372]
Successors: [0x3b2]
---
0x3b1 JUMPDEST
---
0x3b1: JUMPDEST 
---
Entry stack: [V12, S3, {0xf5, 0x106}, V311, V327]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S3, {0xf5, 0x106}, V311, V327]

================================

Block 0x3b2
[0x3b2:0x3b5]
---
Predecessors: [0x3b1]
Successors: [0xf5, 0x106]
---
0x3b2 JUMPDEST
0x3b3 POP
0x3b4 POP
0x3b5 JUMP
---
0x3b2: JUMPDEST 
0x3b5: JUMP {0xf5, 0x106}
---
Entry stack: [V12, S3, {0xf5, 0x106}, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, S3]

================================

Block 0x3b6
[0x3b6:0x3c2]
---
Predecessors: [0xfa, 0x1a0]
Successors: [0x3c3, 0x3c8]
---
0x3b6 JUMPDEST
0x3b7 PUSH1 0x3
0x3b9 SLOAD
0x3ba PUSH1 0xff
0x3bc AND
0x3bd ISZERO
0x3be ISZERO
0x3bf PUSH2 0x3c8
0x3c2 JUMPI
---
0x3b6: JUMPDEST 
0x3b7: V332 = 0x3
0x3b9: V333 = S[0x3]
0x3ba: V334 = 0xff
0x3bc: V335 = AND 0xff V333
0x3bd: V336 = ISZERO V335
0x3be: V337 = ISZERO V336
0x3bf: V338 = 0x3c8
0x3c2: JUMPI 0x3c8 V337
---
Entry stack: [V12, S1, {0x102, 0x106}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, {0x102, 0x106}]

================================

Block 0x3c3
[0x3c3:0x3c7]
---
Predecessors: [0x3b6]
Successors: []
---
0x3c3 PUSH1 0x0
0x3c5 PUSH1 0x0
0x3c7 REVERT
---
0x3c3: V339 = 0x0
0x3c5: V340 = 0x0
0x3c7: REVERT 0x0 0x0
---
Entry stack: [V12, S1, {0x102, 0x106}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, {0x102, 0x106}]

================================

Block 0x3c8
[0x3c8:0x3e1]
---
Predecessors: [0x3b6]
Successors: [0x3e2, 0x3e7]
---
0x3c8 JUMPDEST
0x3c9 PUSH1 0x6
0x3cb SLOAD
0x3cc PUSH1 0x8
0x3ce SLOAD
0x3cf PUSH1 0x1
0x3d1 PUSH1 0xa0
0x3d3 PUSH1 0x2
0x3d5 EXP
0x3d6 SUB
0x3d7 SWAP1
0x3d8 DUP2
0x3d9 AND
0x3da SWAP2
0x3db AND
0x3dc EQ
0x3dd ISZERO
0x3de PUSH2 0x3e7
0x3e1 JUMPI
---
0x3c8: JUMPDEST 
0x3c9: V341 = 0x6
0x3cb: V342 = S[0x6]
0x3cc: V343 = 0x8
0x3ce: V344 = S[0x8]
0x3cf: V345 = 0x1
0x3d1: V346 = 0xa0
0x3d3: V347 = 0x2
0x3d5: V348 = EXP 0x2 0xa0
0x3d6: V349 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d9: V350 = AND 0xffffffffffffffffffffffffffffffffffffffff V344
0x3db: V351 = AND V342 0xffffffffffffffffffffffffffffffffffffffff
0x3dc: V352 = EQ V351 V350
0x3dd: V353 = ISZERO V352
0x3de: V354 = 0x3e7
0x3e1: JUMPI 0x3e7 V353
---
Entry stack: [V12, S1, {0x102, 0x106}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, {0x102, 0x106}]

================================

Block 0x3e2
[0x3e2:0x3e6]
---
Predecessors: [0x3c8]
Successors: []
---
0x3e2 PUSH1 0x0
0x3e4 PUSH1 0x0
0x3e6 REVERT
---
0x3e2: V355 = 0x0
0x3e4: V356 = 0x0
0x3e6: REVERT 0x0 0x0
---
Entry stack: [V12, S1, {0x102, 0x106}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, {0x102, 0x106}]

================================

Block 0x3e7
[0x3e7:0x45a]
---
Predecessors: [0x3c8]
Successors: [0x45b, 0x45c]
---
0x3e7 JUMPDEST
0x3e8 PUSH1 0x9
0x3ea SLOAD
0x3eb PUSH1 0x5
0x3ed SLOAD
0x3ee CALLER
0x3ef PUSH1 0x1
0x3f1 PUSH1 0xa0
0x3f3 PUSH1 0x2
0x3f5 EXP
0x3f6 SUB
0x3f7 DUP2
0x3f8 DUP2
0x3f9 AND
0x3fa PUSH1 0x0
0x3fc SWAP1
0x3fd DUP2
0x3fe MSTORE
0x3ff PUSH1 0x1
0x401 PUSH1 0x20
0x403 SWAP1
0x404 DUP2
0x405 MSTORE
0x406 PUSH1 0x40
0x408 DUP1
0x409 DUP4
0x40a SHA3
0x40b SLOAD
0x40c DUP2
0x40d MLOAD
0x40e DUP4
0x40f ADD
0x410 DUP5
0x411 SWAP1
0x412 MSTORE
0x413 DUP2
0x414 MLOAD
0x415 PUSH1 0xe0
0x417 PUSH1 0x2
0x419 EXP
0x41a PUSH4 0x70a08231
0x41f MUL
0x420 DUP2
0x421 MSTORE
0x422 ADDRESS
0x423 DUP7
0x424 AND
0x425 PUSH1 0x4
0x427 DUP3
0x428 ADD
0x429 MSTORE
0x42a SWAP2
0x42b MLOAD
0x42c SWAP5
0x42d SWAP1
0x42e SWAP8
0x42f AND
0x430 SWAP7
0x431 PUSH4 0xa9059cbb
0x436 SWAP7
0x437 SWAP5
0x438 SWAP1
0x439 SWAP4
0x43a DUP9
0x43b SWAP4
0x43c PUSH4 0x70a08231
0x441 SWAP4
0x442 PUSH1 0x24
0x444 DUP1
0x445 DUP3
0x446 ADD
0x447 SWAP5
0x448 SWAP3
0x449 SWAP4
0x44a SWAP2
0x44b DUP4
0x44c SWAP1
0x44d SUB
0x44e ADD
0x44f SWAP1
0x450 DUP3
0x451 SWAP1
0x452 DUP8
0x453 DUP1
0x454 EXTCODESIZE
0x455 ISZERO
0x456 ISZERO
0x457 PUSH2 0x45c
0x45a JUMPI
---
0x3e7: JUMPDEST 
0x3e8: V357 = 0x9
0x3ea: V358 = S[0x9]
0x3eb: V359 = 0x5
0x3ed: V360 = S[0x5]
0x3ee: V361 = CALLER
0x3ef: V362 = 0x1
0x3f1: V363 = 0xa0
0x3f3: V364 = 0x2
0x3f5: V365 = EXP 0x2 0xa0
0x3f6: V366 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f9: V367 = AND 0xffffffffffffffffffffffffffffffffffffffff V361
0x3fa: V368 = 0x0
0x3fe: M[0x0] = V367
0x3ff: V369 = 0x1
0x401: V370 = 0x20
0x405: M[0x20] = 0x1
0x406: V371 = 0x40
0x40a: V372 = SHA3 0x0 0x40
0x40b: V373 = S[V372]
0x40d: V374 = M[0x40]
0x40f: V375 = ADD 0x20 V374
0x412: M[V375] = 0x0
0x414: V376 = M[0x40]
0x415: V377 = 0xe0
0x417: V378 = 0x2
0x419: V379 = EXP 0x2 0xe0
0x41a: V380 = 0x70a08231
0x41f: V381 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x421: M[V376] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x422: V382 = ADDRESS
0x424: V383 = AND 0xffffffffffffffffffffffffffffffffffffffff V382
0x425: V384 = 0x4
0x428: V385 = ADD V376 0x4
0x429: M[V385] = V383
0x42b: V386 = M[0x40]
0x42f: V387 = AND V358 0xffffffffffffffffffffffffffffffffffffffff
0x431: V388 = 0xa9059cbb
0x43c: V389 = 0x70a08231
0x442: V390 = 0x24
0x446: V391 = ADD V376 0x24
0x44d: V392 = SUB V376 V386
0x44e: V393 = ADD V392 0x24
0x454: V394 = EXTCODESIZE V387
0x455: V395 = ISZERO V394
0x456: V396 = ISZERO V395
0x457: V397 = 0x45c
0x45a: JUMPI 0x45c V396
---
Entry stack: [V12, S1, {0x102, 0x106}]
Stack pops: 0
Stack additions: [V387, 0xa9059cbb, V361, V360, V373, V387, 0x70a08231, V391, 0x20, V386, V393, V386, 0x0, V387]
Exit stack: [V12, S1, {0x102, 0x106}, V387, 0xa9059cbb, V361, V360, V373, V387, 0x70a08231, V391, 0x20, V386, V393, V386, 0x0, V387]

================================

Block 0x45b
[0x45b:0x45b]
---
Predecessors: [0x3e7]
Successors: []
---
0x45b INVALID
---
0x45b: INVALID 
---
Entry stack: [V12, S15, {0x102, 0x106}, V387, 0xa9059cbb, V361, V360, V373, V387, 0x70a08231, V391, 0x20, V386, V393, V386, 0x0, V387]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S15, {0x102, 0x106}, V387, 0xa9059cbb, V361, V360, V373, V387, 0x70a08231, V391, 0x20, V386, V393, V386, 0x0, V387]

================================

Block 0x45c
[0x45c:0x468]
---
Predecessors: [0x3e7]
Successors: [0x469, 0x46a]
---
0x45c JUMPDEST
0x45d PUSH2 0x2c6
0x460 GAS
0x461 SUB
0x462 CALL
0x463 ISZERO
0x464 ISZERO
0x465 PUSH2 0x46a
0x468 JUMPI
---
0x45c: JUMPDEST 
0x45d: V398 = 0x2c6
0x460: V399 = GAS
0x461: V400 = SUB V399 0x2c6
0x462: V401 = CALL V400 V387 0x0 V386 V393 V386 0x20
0x463: V402 = ISZERO V401
0x464: V403 = ISZERO V402
0x465: V404 = 0x46a
0x468: JUMPI 0x46a V403
---
Entry stack: [V12, S15, {0x102, 0x106}, V387, 0xa9059cbb, V361, V360, V373, V387, 0x70a08231, V391, 0x20, V386, V393, V386, 0x0, V387]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S15, {0x102, 0x106}, V387, 0xa9059cbb, V361, V360, V373, V387, 0x70a08231, V391]

================================

Block 0x469
[0x469:0x469]
---
Predecessors: [0x45c]
Successors: []
---
0x469 INVALID
---
0x469: INVALID 
---
Entry stack: [V12, S9, {0x102, 0x106}, S7, 0xa9059cbb, S5, S4, S3, S2, 0x70a08231, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S9, {0x102, 0x106}, S7, 0xa9059cbb, S5, S4, S3, S2, 0x70a08231, S0]

================================

Block 0x46a
[0x46a:0x47c]
---
Predecessors: [0x45c]
Successors: [0x47d, 0x47e]
---
0x46a JUMPDEST
0x46b POP
0x46c POP
0x46d POP
0x46e PUSH1 0x40
0x470 MLOAD
0x471 DUP1
0x472 MLOAD
0x473 SWAP1
0x474 POP
0x475 MUL
0x476 DUP2
0x477 ISZERO
0x478 ISZERO
0x479 PUSH2 0x47e
0x47c JUMPI
---
0x46a: JUMPDEST 
0x46e: V405 = 0x40
0x470: V406 = M[0x40]
0x472: V407 = M[V406]
0x475: V408 = MUL V407 S3
0x477: V409 = ISZERO S4
0x478: V410 = ISZERO V409
0x479: V411 = 0x47e
0x47c: JUMPI 0x47e V410
---
Entry stack: [V12, S9, {0x102, 0x106}, S7, 0xa9059cbb, S5, S4, S3, S2, 0x70a08231, S0]
Stack pops: 5
Stack additions: [S4, V408]
Exit stack: [V12, S9, {0x102, 0x106}, S7, 0xa9059cbb, S5, S4, V408]

================================

Block 0x47d
[0x47d:0x47d]
---
Predecessors: [0x46a]
Successors: []
---
0x47d INVALID
---
0x47d: INVALID 
---
Entry stack: [V12, S6, {0x102, 0x106}, S4, 0xa9059cbb, S2, S1, V408]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S6, {0x102, 0x106}, S4, 0xa9059cbb, S2, S1, V408]

================================

Block 0x47e
[0x47e:0x4cb]
---
Predecessors: [0x46a]
Successors: [0x4cc, 0x4cd]
---
0x47e JUMPDEST
0x47f DIV
0x480 PUSH1 0x40
0x482 MLOAD
0x483 DUP4
0x484 PUSH4 0xffffffff
0x489 AND
0x48a PUSH1 0xe0
0x48c PUSH1 0x2
0x48e EXP
0x48f MUL
0x490 DUP2
0x491 MSTORE
0x492 PUSH1 0x4
0x494 ADD
0x495 DUP1
0x496 DUP4
0x497 PUSH1 0x1
0x499 PUSH1 0xa0
0x49b PUSH1 0x2
0x49d EXP
0x49e SUB
0x49f AND
0x4a0 PUSH1 0x1
0x4a2 PUSH1 0xa0
0x4a4 PUSH1 0x2
0x4a6 EXP
0x4a7 SUB
0x4a8 AND
0x4a9 DUP2
0x4aa MSTORE
0x4ab PUSH1 0x20
0x4ad ADD
0x4ae DUP3
0x4af DUP2
0x4b0 MSTORE
0x4b1 PUSH1 0x20
0x4b3 ADD
0x4b4 SWAP3
0x4b5 POP
0x4b6 POP
0x4b7 POP
0x4b8 PUSH1 0x0
0x4ba PUSH1 0x40
0x4bc MLOAD
0x4bd DUP1
0x4be DUP4
0x4bf SUB
0x4c0 DUP2
0x4c1 PUSH1 0x0
0x4c3 DUP8
0x4c4 DUP1
0x4c5 EXTCODESIZE
0x4c6 ISZERO
0x4c7 ISZERO
0x4c8 PUSH2 0x4cd
0x4cb JUMPI
---
0x47e: JUMPDEST 
0x47f: V412 = DIV V408 S1
0x480: V413 = 0x40
0x482: V414 = M[0x40]
0x484: V415 = 0xffffffff
0x489: V416 = AND 0xffffffff 0xa9059cbb
0x48a: V417 = 0xe0
0x48c: V418 = 0x2
0x48e: V419 = EXP 0x2 0xe0
0x48f: V420 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x491: M[V414] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x492: V421 = 0x4
0x494: V422 = ADD 0x4 V414
0x497: V423 = 0x1
0x499: V424 = 0xa0
0x49b: V425 = 0x2
0x49d: V426 = EXP 0x2 0xa0
0x49e: V427 = SUB 0x10000000000000000000000000000000000000000 0x1
0x49f: V428 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x4a0: V429 = 0x1
0x4a2: V430 = 0xa0
0x4a4: V431 = 0x2
0x4a6: V432 = EXP 0x2 0xa0
0x4a7: V433 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4a8: V434 = AND 0xffffffffffffffffffffffffffffffffffffffff V428
0x4aa: M[V422] = V434
0x4ab: V435 = 0x20
0x4ad: V436 = ADD 0x20 V422
0x4b0: M[V436] = V412
0x4b1: V437 = 0x20
0x4b3: V438 = ADD 0x20 V436
0x4b8: V439 = 0x0
0x4ba: V440 = 0x40
0x4bc: V441 = M[0x40]
0x4bf: V442 = SUB V438 V441
0x4c1: V443 = 0x0
0x4c5: V444 = EXTCODESIZE S4
0x4c6: V445 = ISZERO V444
0x4c7: V446 = ISZERO V445
0x4c8: V447 = 0x4cd
0x4cb: JUMPI 0x4cd V446
---
Entry stack: [V12, S6, {0x102, 0x106}, S4, 0xa9059cbb, S2, S1, V408]
Stack pops: 5
Stack additions: [S4, S3, V438, 0x0, V441, V442, V441, 0x0, S4]
Exit stack: [V12, S6, {0x102, 0x106}, S4, 0xa9059cbb, V438, 0x0, V441, V442, V441, 0x0, S4]

================================

Block 0x4cc
[0x4cc:0x4cc]
---
Predecessors: [0x47e]
Successors: []
---
0x4cc INVALID
---
0x4cc: INVALID 
---
Entry stack: [V12, S10, {0x102, 0x106}, S8, 0xa9059cbb, V438, 0x0, V441, V442, V441, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S10, {0x102, 0x106}, S8, 0xa9059cbb, V438, 0x0, V441, V442, V441, 0x0, S0]

================================

Block 0x4cd
[0x4cd:0x4d9]
---
Predecessors: [0x47e]
Successors: [0x4da, 0x4db]
---
0x4cd JUMPDEST
0x4ce PUSH2 0x2c6
0x4d1 GAS
0x4d2 SUB
0x4d3 CALL
0x4d4 ISZERO
0x4d5 ISZERO
0x4d6 PUSH2 0x4db
0x4d9 JUMPI
---
0x4cd: JUMPDEST 
0x4ce: V448 = 0x2c6
0x4d1: V449 = GAS
0x4d2: V450 = SUB V449 0x2c6
0x4d3: V451 = CALL V450 S0 0x0 V441 V442 V441 0x0
0x4d4: V452 = ISZERO V451
0x4d5: V453 = ISZERO V452
0x4d6: V454 = 0x4db
0x4d9: JUMPI 0x4db V453
---
Entry stack: [V12, S10, {0x102, 0x106}, S8, 0xa9059cbb, V438, 0x0, V441, V442, V441, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S10, {0x102, 0x106}, S8, 0xa9059cbb, V438]

================================

Block 0x4da
[0x4da:0x4da]
---
Predecessors: [0x4cd]
Successors: []
---
0x4da INVALID
---
0x4da: INVALID 
---
Entry stack: [V12, S4, {0x102, 0x106}, S2, 0xa9059cbb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, {0x102, 0x106}, S2, 0xa9059cbb, S0]

================================

Block 0x4db
[0x4db:0x4f7]
---
Predecessors: [0x4cd]
Successors: [0x4f8]
---
0x4db JUMPDEST
0x4dc POP
0x4dd POP
0x4de POP
0x4df PUSH1 0x1
0x4e1 PUSH1 0xa0
0x4e3 PUSH1 0x2
0x4e5 EXP
0x4e6 SUB
0x4e7 CALLER
0x4e8 AND
0x4e9 PUSH1 0x0
0x4eb SWAP1
0x4ec DUP2
0x4ed MSTORE
0x4ee PUSH1 0x1
0x4f0 PUSH1 0x20
0x4f2 MSTORE
0x4f3 PUSH1 0x40
0x4f5 DUP2
0x4f6 SHA3
0x4f7 SSTORE
---
0x4db: JUMPDEST 
0x4df: V455 = 0x1
0x4e1: V456 = 0xa0
0x4e3: V457 = 0x2
0x4e5: V458 = EXP 0x2 0xa0
0x4e6: V459 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4e7: V460 = CALLER
0x4e8: V461 = AND V460 0xffffffffffffffffffffffffffffffffffffffff
0x4e9: V462 = 0x0
0x4ed: M[0x0] = V461
0x4ee: V463 = 0x1
0x4f0: V464 = 0x20
0x4f2: M[0x20] = 0x1
0x4f3: V465 = 0x40
0x4f6: V466 = SHA3 0x0 0x40
0x4f7: S[V466] = 0x0
---
Entry stack: [V12, S4, {0x102, 0x106}, S2, 0xa9059cbb, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, S4, {0x102, 0x106}]

================================

Block 0x4f8
[0x4f8:0x4f8]
---
Predecessors: [0x4db]
Successors: [0x4f9]
---
0x4f8 JUMPDEST
---
0x4f8: JUMPDEST 
---
Entry stack: [V12, S1, {0x102, 0x106}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, {0x102, 0x106}]

================================

Block 0x4f9
[0x4f9:0x4f9]
---
Predecessors: [0x4f8]
Successors: [0x4fa]
---
0x4f9 JUMPDEST
---
0x4f9: JUMPDEST 
---
Entry stack: [V12, S1, {0x102, 0x106}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, {0x102, 0x106}]

================================

Block 0x4fa
[0x4fa:0x4fb]
---
Predecessors: [0x4f9]
Successors: [0x102, 0x106]
---
0x4fa JUMPDEST
0x4fb JUMP
---
0x4fa: JUMPDEST 
0x4fb: JUMP {0x102, 0x106}
---
Entry stack: [V12, S1, {0x102, 0x106}]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x4fc
[0x4fc:0x508]
---
Predecessors: [0x110]
Successors: [0x509]
---
0x4fc JUMPDEST
0x4fd PUSH1 0x8
0x4ff SLOAD
0x500 PUSH1 0x1
0x502 PUSH1 0xa0
0x504 PUSH1 0x2
0x506 EXP
0x507 SUB
0x508 AND
---
0x4fc: JUMPDEST 
0x4fd: V467 = 0x8
0x4ff: V468 = S[0x8]
0x500: V469 = 0x1
0x502: V470 = 0xa0
0x504: V471 = 0x2
0x506: V472 = EXP 0x2 0xa0
0x507: V473 = SUB 0x10000000000000000000000000000000000000000 0x1
0x508: V474 = AND 0xffffffffffffffffffffffffffffffffffffffff V468
---
Entry stack: [V12, 0x118]
Stack pops: 0
Stack additions: [V474]
Exit stack: [V12, 0x118, V474]

================================

Block 0x509
[0x509:0x50b]
---
Predecessors: [0x4fc]
Successors: [0x118]
---
0x509 JUMPDEST
0x50a SWAP1
0x50b JUMP
---
0x509: JUMPDEST 
0x50b: JUMP 0x118
---
Entry stack: [V12, 0x118, V474]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, V474]

================================

Block 0x50c
[0x50c:0x511]
---
Predecessors: [0x13c]
Successors: [0x144]
---
0x50c JUMPDEST
0x50d PUSH1 0x2
0x50f SLOAD
0x510 DUP2
0x511 JUMP
---
0x50c: JUMPDEST 
0x50d: V475 = 0x2
0x50f: V476 = S[0x2]
0x511: JUMP 0x144
---
Entry stack: [V12, 0x144]
Stack pops: 1
Stack additions: [S0, V476]
Exit stack: [V12, 0x144, V476]

================================

Block 0x512
[0x512:0x528]
---
Predecessors: [0x15e]
Successors: [0x529, 0x52e]
---
0x512 JUMPDEST
0x513 PUSH1 0x0
0x515 SLOAD
0x516 CALLER
0x517 PUSH1 0x1
0x519 PUSH1 0xa0
0x51b PUSH1 0x2
0x51d EXP
0x51e SUB
0x51f SWAP1
0x520 DUP2
0x521 AND
0x522 SWAP2
0x523 AND
0x524 EQ
0x525 PUSH2 0x52e
0x528 JUMPI
---
0x512: JUMPDEST 
0x513: V477 = 0x0
0x515: V478 = S[0x0]
0x516: V479 = CALLER
0x517: V480 = 0x1
0x519: V481 = 0xa0
0x51b: V482 = 0x2
0x51d: V483 = EXP 0x2 0xa0
0x51e: V484 = SUB 0x10000000000000000000000000000000000000000 0x1
0x521: V485 = AND 0xffffffffffffffffffffffffffffffffffffffff V479
0x523: V486 = AND V478 0xffffffffffffffffffffffffffffffffffffffff
0x524: V487 = EQ V486 V485
0x525: V488 = 0x52e
0x528: JUMPI 0x52e V487
---
Entry stack: [V12, 0x106, V117]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x106, V117]

================================

Block 0x529
[0x529:0x52d]
---
Predecessors: [0x512]
Successors: []
---
0x529 PUSH1 0x0
0x52b PUSH1 0x0
0x52d REVERT
---
0x529: V489 = 0x0
0x52b: V490 = 0x0
0x52d: REVERT 0x0 0x0
---
Entry stack: [V12, 0x106, V117]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x106, V117]

================================

Block 0x52e
[0x52e:0x55d]
---
Predecessors: [0x512]
Successors: [0x55e]
---
0x52e JUMPDEST
0x52f PUSH1 0x8
0x531 DUP1
0x532 SLOAD
0x533 PUSH1 0x1
0x535 PUSH1 0xa0
0x537 PUSH1 0x2
0x539 EXP
0x53a SUB
0x53b DUP1
0x53c DUP5
0x53d AND
0x53e PUSH1 0x1
0x540 PUSH1 0xa0
0x542 PUSH1 0x2
0x544 EXP
0x545 SUB
0x546 NOT
0x547 SWAP3
0x548 DUP4
0x549 AND
0x54a OR
0x54b SWAP3
0x54c DUP4
0x54d SWAP1
0x54e SSTORE
0x54f PUSH1 0x9
0x551 DUP1
0x552 SLOAD
0x553 SWAP1
0x554 SWAP3
0x555 AND
0x556 SWAP3
0x557 AND
0x558 SWAP2
0x559 SWAP1
0x55a SWAP2
0x55b OR
0x55c SWAP1
0x55d SSTORE
---
0x52e: JUMPDEST 
0x52f: V491 = 0x8
0x532: V492 = S[0x8]
0x533: V493 = 0x1
0x535: V494 = 0xa0
0x537: V495 = 0x2
0x539: V496 = EXP 0x2 0xa0
0x53a: V497 = SUB 0x10000000000000000000000000000000000000000 0x1
0x53d: V498 = AND V117 0xffffffffffffffffffffffffffffffffffffffff
0x53e: V499 = 0x1
0x540: V500 = 0xa0
0x542: V501 = 0x2
0x544: V502 = EXP 0x2 0xa0
0x545: V503 = SUB 0x10000000000000000000000000000000000000000 0x1
0x546: V504 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x549: V505 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V492
0x54a: V506 = OR V505 V498
0x54e: S[0x8] = V506
0x54f: V507 = 0x9
0x552: V508 = S[0x9]
0x555: V509 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V508
0x557: V510 = AND V506 0xffffffffffffffffffffffffffffffffffffffff
0x55b: V511 = OR V510 V509
0x55d: S[0x9] = V511
---
Entry stack: [V12, 0x106, V117]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x106, V117]

================================

Block 0x55e
[0x55e:0x55e]
---
Predecessors: [0x52e, 0x6f7]
Successors: [0x55f]
---
0x55e JUMPDEST
---
0x55e: JUMPDEST 
---
Entry stack: [V12, 0x106, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x106, S0]

================================

Block 0x55f
[0x55f:0x561]
---
Predecessors: [0x55e]
Successors: [0x106]
---
0x55f JUMPDEST
0x560 POP
0x561 JUMP
---
0x55f: JUMPDEST 
0x561: JUMP 0x106
---
Entry stack: [V12, 0x106, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x562
[0x562:0x56e]
---
Predecessors: [0x17c]
Successors: [0x56f]
---
0x562 JUMPDEST
0x563 PUSH1 0x7
0x565 SLOAD
0x566 PUSH1 0x1
0x568 PUSH1 0xa0
0x56a PUSH1 0x2
0x56c EXP
0x56d SUB
0x56e AND
---
0x562: JUMPDEST 
0x563: V512 = 0x7
0x565: V513 = S[0x7]
0x566: V514 = 0x1
0x568: V515 = 0xa0
0x56a: V516 = 0x2
0x56c: V517 = EXP 0x2 0xa0
0x56d: V518 = SUB 0x10000000000000000000000000000000000000000 0x1
0x56e: V519 = AND 0xffffffffffffffffffffffffffffffffffffffff V513
---
Entry stack: [V12, 0x118]
Stack pops: 0
Stack additions: [V519]
Exit stack: [V12, 0x118, V519]

================================

Block 0x56f
[0x56f:0x571]
---
Predecessors: [0x562]
Successors: [0x118]
---
0x56f JUMPDEST
0x570 SWAP1
0x571 JUMP
---
0x56f: JUMPDEST 
0x571: JUMP 0x118
---
Entry stack: [V12, 0x118, V519]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, V519]

================================

Block 0x572
[0x572:0x580]
---
Predecessors: [0x1b2]
Successors: [0x118]
---
0x572 JUMPDEST
0x573 PUSH1 0x9
0x575 SLOAD
0x576 PUSH1 0x1
0x578 PUSH1 0xa0
0x57a PUSH1 0x2
0x57c EXP
0x57d SUB
0x57e AND
0x57f DUP2
0x580 JUMP
---
0x572: JUMPDEST 
0x573: V520 = 0x9
0x575: V521 = S[0x9]
0x576: V522 = 0x1
0x578: V523 = 0xa0
0x57a: V524 = 0x2
0x57c: V525 = EXP 0x2 0xa0
0x57d: V526 = SUB 0x10000000000000000000000000000000000000000 0x1
0x57e: V527 = AND 0xffffffffffffffffffffffffffffffffffffffff V521
0x580: JUMP 0x118
---
Entry stack: [V12, 0x118]
Stack pops: 1
Stack additions: [S0, V527]
Exit stack: [V12, 0x118, V527]

================================

Block 0x581
[0x581:0x589]
---
Predecessors: [0x1de]
Successors: [0x1e6]
---
0x581 JUMPDEST
0x582 PUSH1 0x3
0x584 SLOAD
0x585 PUSH1 0xff
0x587 AND
0x588 DUP2
0x589 JUMP
---
0x581: JUMPDEST 
0x582: V528 = 0x3
0x584: V529 = S[0x3]
0x585: V530 = 0xff
0x587: V531 = AND 0xff V529
0x589: JUMP 0x1e6
---
Entry stack: [V12, 0x1e6]
Stack pops: 1
Stack additions: [S0, V531]
Exit stack: [V12, 0x1e6, V531]

================================

Block 0x58a
[0x58a:0x598]
---
Predecessors: [0x202]
Successors: [0x118]
---
0x58a JUMPDEST
0x58b PUSH1 0x7
0x58d SLOAD
0x58e PUSH1 0x1
0x590 PUSH1 0xa0
0x592 PUSH1 0x2
0x594 EXP
0x595 SUB
0x596 AND
0x597 DUP2
0x598 JUMP
---
0x58a: JUMPDEST 
0x58b: V532 = 0x7
0x58d: V533 = S[0x7]
0x58e: V534 = 0x1
0x590: V535 = 0xa0
0x592: V536 = 0x2
0x594: V537 = EXP 0x2 0xa0
0x595: V538 = SUB 0x10000000000000000000000000000000000000000 0x1
0x596: V539 = AND 0xffffffffffffffffffffffffffffffffffffffff V533
0x598: JUMP 0x118
---
Entry stack: [V12, 0x118]
Stack pops: 1
Stack additions: [S0, V539]
Exit stack: [V12, 0x118, V539]

================================

Block 0x599
[0x599:0x5b2]
---
Predecessors: [0x22e]
Successors: [0x5b3]
---
0x599 JUMPDEST
0x59a PUSH1 0x1
0x59c PUSH1 0xa0
0x59e PUSH1 0x2
0x5a0 EXP
0x5a1 SUB
0x5a2 DUP2
0x5a3 AND
0x5a4 PUSH1 0x0
0x5a6 SWAP1
0x5a7 DUP2
0x5a8 MSTORE
0x5a9 PUSH1 0x1
0x5ab PUSH1 0x20
0x5ad MSTORE
0x5ae PUSH1 0x40
0x5b0 SWAP1
0x5b1 SHA3
0x5b2 SLOAD
---
0x599: JUMPDEST 
0x59a: V540 = 0x1
0x59c: V541 = 0xa0
0x59e: V542 = 0x2
0x5a0: V543 = EXP 0x2 0xa0
0x5a1: V544 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5a3: V545 = AND V196 0xffffffffffffffffffffffffffffffffffffffff
0x5a4: V546 = 0x0
0x5a8: M[0x0] = V545
0x5a9: V547 = 0x1
0x5ab: V548 = 0x20
0x5ad: M[0x20] = 0x1
0x5ae: V549 = 0x40
0x5b1: V550 = SHA3 0x0 0x40
0x5b2: V551 = S[V550]
---
Entry stack: [V12, 0x144, V196]
Stack pops: 1
Stack additions: [S0, V551]
Exit stack: [V12, 0x144, V196, V551]

================================

Block 0x5b3
[0x5b3:0x5b7]
---
Predecessors: [0x599]
Successors: [0x144]
---
0x5b3 JUMPDEST
0x5b4 SWAP2
0x5b5 SWAP1
0x5b6 POP
0x5b7 JUMP
---
0x5b3: JUMPDEST 
0x5b7: JUMP 0x144
---
Entry stack: [V12, 0x144, V196, V551]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, V551]

================================

Block 0x5b8
[0x5b8:0x5bd]
---
Predecessors: [0x25c]
Successors: [0x144]
---
0x5b8 JUMPDEST
0x5b9 PUSH1 0x4
0x5bb SLOAD
0x5bc DUP2
0x5bd JUMP
---
0x5b8: JUMPDEST 
0x5b9: V552 = 0x4
0x5bb: V553 = S[0x4]
0x5bd: JUMP 0x144
---
Entry stack: [V12, 0x144]
Stack pops: 1
Stack additions: [S0, V553]
Exit stack: [V12, 0x144, V553]

================================

Block 0x5be
[0x5be:0x5cc]
---
Predecessors: [0x27e]
Successors: [0x118]
---
0x5be JUMPDEST
0x5bf PUSH1 0x0
0x5c1 SLOAD
0x5c2 PUSH1 0x1
0x5c4 PUSH1 0xa0
0x5c6 PUSH1 0x2
0x5c8 EXP
0x5c9 SUB
0x5ca AND
0x5cb DUP2
0x5cc JUMP
---
0x5be: JUMPDEST 
0x5bf: V554 = 0x0
0x5c1: V555 = S[0x0]
0x5c2: V556 = 0x1
0x5c4: V557 = 0xa0
0x5c6: V558 = 0x2
0x5c8: V559 = EXP 0x2 0xa0
0x5c9: V560 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ca: V561 = AND 0xffffffffffffffffffffffffffffffffffffffff V555
0x5cc: JUMP 0x118
---
Entry stack: [V12, 0x118]
Stack pops: 1
Stack additions: [S0, V561]
Exit stack: [V12, 0x118, V561]

================================

Block 0x5cd
[0x5cd:0x5e6]
---
Predecessors: [0x2aa]
Successors: [0x5e7, 0x5ec]
---
0x5cd JUMPDEST
0x5ce PUSH1 0x6
0x5d0 SLOAD
0x5d1 PUSH1 0x7
0x5d3 SLOAD
0x5d4 PUSH1 0x1
0x5d6 PUSH1 0xa0
0x5d8 PUSH1 0x2
0x5da EXP
0x5db SUB
0x5dc SWAP1
0x5dd DUP2
0x5de AND
0x5df SWAP2
0x5e0 AND
0x5e1 EQ
0x5e2 ISZERO
0x5e3 PUSH2 0x5ec
0x5e6 JUMPI
---
0x5cd: JUMPDEST 
0x5ce: V562 = 0x6
0x5d0: V563 = S[0x6]
0x5d1: V564 = 0x7
0x5d3: V565 = S[0x7]
0x5d4: V566 = 0x1
0x5d6: V567 = 0xa0
0x5d8: V568 = 0x2
0x5da: V569 = EXP 0x2 0xa0
0x5db: V570 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5de: V571 = AND 0xffffffffffffffffffffffffffffffffffffffff V565
0x5e0: V572 = AND V563 0xffffffffffffffffffffffffffffffffffffffff
0x5e1: V573 = EQ V572 V571
0x5e2: V574 = ISZERO V573
0x5e3: V575 = 0x5ec
0x5e6: JUMPI 0x5ec V574
---
Entry stack: [V12, 0x106]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x106]

================================

Block 0x5e7
[0x5e7:0x5eb]
---
Predecessors: [0x5cd]
Successors: []
---
0x5e7 PUSH1 0x0
0x5e9 PUSH1 0x0
0x5eb REVERT
---
0x5e7: V576 = 0x0
0x5e9: V577 = 0x0
0x5eb: REVERT 0x0 0x0
---
Entry stack: [V12, 0x106]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x106]

================================

Block 0x5ec
[0x5ec:0x623]
---
Predecessors: [0x5cd]
Successors: [0x624, 0x625]
---
0x5ec JUMPDEST
0x5ed PUSH1 0x7
0x5ef SLOAD
0x5f0 PUSH1 0x2
0x5f2 SLOAD
0x5f3 PUSH1 0x40
0x5f5 MLOAD
0x5f6 PUSH1 0x1
0x5f8 PUSH1 0xa0
0x5fa PUSH1 0x2
0x5fc EXP
0x5fd SUB
0x5fe SWAP3
0x5ff DUP4
0x600 AND
0x601 SWAP3
0x602 ADDRESS
0x603 AND
0x604 BALANCE
0x605 SWAP2
0x606 SWAP1
0x607 SWAP2
0x608 SUB
0x609 DUP1
0x60a ISZERO
0x60b PUSH2 0x8fc
0x60e MUL
0x60f SWAP2
0x610 PUSH1 0x0
0x612 DUP2
0x613 DUP2
0x614 DUP2
0x615 DUP6
0x616 DUP9
0x617 DUP9
0x618 CALL
0x619 SWAP4
0x61a POP
0x61b POP
0x61c POP
0x61d POP
0x61e ISZERO
0x61f ISZERO
0x620 PUSH2 0x625
0x623 JUMPI
---
0x5ec: JUMPDEST 
0x5ed: V578 = 0x7
0x5ef: V579 = S[0x7]
0x5f0: V580 = 0x2
0x5f2: V581 = S[0x2]
0x5f3: V582 = 0x40
0x5f5: V583 = M[0x40]
0x5f6: V584 = 0x1
0x5f8: V585 = 0xa0
0x5fa: V586 = 0x2
0x5fc: V587 = EXP 0x2 0xa0
0x5fd: V588 = SUB 0x10000000000000000000000000000000000000000 0x1
0x600: V589 = AND 0xffffffffffffffffffffffffffffffffffffffff V579
0x602: V590 = ADDRESS
0x603: V591 = AND V590 0xffffffffffffffffffffffffffffffffffffffff
0x604: V592 = BALANCE V591
0x608: V593 = SUB V592 V581
0x60a: V594 = ISZERO V593
0x60b: V595 = 0x8fc
0x60e: V596 = MUL 0x8fc V594
0x610: V597 = 0x0
0x618: V598 = CALL V596 V589 V593 V583 0x0 V583 0x0
0x61e: V599 = ISZERO V598
0x61f: V600 = ISZERO V599
0x620: V601 = 0x625
0x623: JUMPI 0x625 V600
---
Entry stack: [V12, 0x106]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x106]

================================

Block 0x624
[0x624:0x624]
---
Predecessors: [0x5ec]
Successors: []
---
0x624 INVALID
---
0x624: INVALID 
---
Entry stack: [V12, 0x106]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x106]

================================

Block 0x625
[0x625:0x651]
---
Predecessors: [0x5ec]
Successors: [0x652, 0x653]
---
0x625 JUMPDEST
0x626 PUSH1 0x2
0x628 SLOAD
0x629 PUSH1 0x40
0x62b MLOAD
0x62c PUSH1 0x1
0x62e PUSH1 0xa0
0x630 PUSH1 0x2
0x632 EXP
0x633 SUB
0x634 CALLER
0x635 AND
0x636 SWAP2
0x637 DUP1
0x638 ISZERO
0x639 PUSH2 0x8fc
0x63c MUL
0x63d SWAP2
0x63e PUSH1 0x0
0x640 DUP2
0x641 DUP2
0x642 DUP2
0x643 DUP6
0x644 DUP9
0x645 DUP9
0x646 CALL
0x647 SWAP4
0x648 POP
0x649 POP
0x64a POP
0x64b POP
0x64c ISZERO
0x64d ISZERO
0x64e PUSH2 0x653
0x651 JUMPI
---
0x625: JUMPDEST 
0x626: V602 = 0x2
0x628: V603 = S[0x2]
0x629: V604 = 0x40
0x62b: V605 = M[0x40]
0x62c: V606 = 0x1
0x62e: V607 = 0xa0
0x630: V608 = 0x2
0x632: V609 = EXP 0x2 0xa0
0x633: V610 = SUB 0x10000000000000000000000000000000000000000 0x1
0x634: V611 = CALLER
0x635: V612 = AND V611 0xffffffffffffffffffffffffffffffffffffffff
0x638: V613 = ISZERO V603
0x639: V614 = 0x8fc
0x63c: V615 = MUL 0x8fc V613
0x63e: V616 = 0x0
0x646: V617 = CALL V615 V612 V603 V605 0x0 V605 0x0
0x64c: V618 = ISZERO V617
0x64d: V619 = ISZERO V618
0x64e: V620 = 0x653
0x651: JUMPI 0x653 V619
---
Entry stack: [V12, 0x106]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x106]

================================

Block 0x652
[0x652:0x652]
---
Predecessors: [0x625]
Successors: []
---
0x652 INVALID
---
0x652: INVALID 
---
Entry stack: [V12, 0x106]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x106]

================================

Block 0x653
[0x653:0x660]
---
Predecessors: [0x625]
Successors: [0x661]
---
0x653 JUMPDEST
0x654 PUSH1 0x3
0x656 DUP1
0x657 SLOAD
0x658 PUSH1 0xff
0x65a NOT
0x65b AND
0x65c PUSH1 0x1
0x65e OR
0x65f SWAP1
0x660 SSTORE
---
0x653: JUMPDEST 
0x654: V621 = 0x3
0x657: V622 = S[0x3]
0x658: V623 = 0xff
0x65a: V624 = NOT 0xff
0x65b: V625 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V622
0x65c: V626 = 0x1
0x65e: V627 = OR 0x1 V625
0x660: S[0x3] = V627
---
Entry stack: [V12, 0x106]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x106]

================================

Block 0x661
[0x661:0x661]
---
Predecessors: [0x653]
Successors: [0x662]
---
0x661 JUMPDEST
---
0x661: JUMPDEST 
---
Entry stack: [V12, 0x106]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x106]

================================

Block 0x662
[0x662:0x663]
---
Predecessors: [0x661]
Successors: [0x106]
---
0x662 JUMPDEST
0x663 JUMP
---
0x662: JUMPDEST 
0x663: JUMP 0x106
---
Entry stack: [V12, 0x106]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x664
[0x664:0x669]
---
Predecessors: [0x2bc]
Successors: [0x144]
---
0x664 JUMPDEST
0x665 PUSH1 0x5
0x667 SLOAD
0x668 DUP2
0x669 JUMP
---
0x664: JUMPDEST 
0x665: V628 = 0x5
0x667: V629 = S[0x5]
0x669: JUMP 0x144
---
Entry stack: [V12, 0x144]
Stack pops: 1
Stack additions: [S0, V629]
Exit stack: [V12, 0x144, V629]

================================

Block 0x66a
[0x66a:0x675]
---
Predecessors: [0x2e0]
Successors: [0x676, 0x67b]
---
0x66a JUMPDEST
0x66b PUSH1 0x3
0x66d SLOAD
0x66e PUSH1 0xff
0x670 AND
0x671 ISZERO
0x672 PUSH2 0x67b
0x675 JUMPI
---
0x66a: JUMPDEST 
0x66b: V630 = 0x3
0x66d: V631 = S[0x3]
0x66e: V632 = 0xff
0x670: V633 = AND 0xff V631
0x671: V634 = ISZERO V633
0x672: V635 = 0x67b
0x675: JUMPI 0x67b V634
---
Entry stack: [V12, 0x106]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x106]

================================

Block 0x676
[0x676:0x67a]
---
Predecessors: [0x66a]
Successors: []
---
0x676 PUSH1 0x0
0x678 PUSH1 0x0
0x67a REVERT
---
0x676: V636 = 0x0
0x678: V637 = 0x0
0x67a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x106]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x106]

================================

Block 0x67b
[0x67b:0x6b0]
---
Predecessors: [0x66a]
Successors: [0x6b1, 0x6b2]
---
0x67b JUMPDEST
0x67c PUSH1 0x1
0x67e PUSH1 0xa0
0x680 PUSH1 0x2
0x682 EXP
0x683 SUB
0x684 CALLER
0x685 AND
0x686 PUSH1 0x0
0x688 DUP2
0x689 DUP2
0x68a MSTORE
0x68b PUSH1 0x1
0x68d PUSH1 0x20
0x68f MSTORE
0x690 PUSH1 0x40
0x692 DUP1
0x693 DUP3
0x694 SHA3
0x695 SLOAD
0x696 SWAP1
0x697 MLOAD
0x698 DUP2
0x699 ISZERO
0x69a PUSH2 0x8fc
0x69d MUL
0x69e SWAP3
0x69f DUP2
0x6a0 DUP2
0x6a1 DUP2
0x6a2 DUP6
0x6a3 DUP9
0x6a4 DUP9
0x6a5 CALL
0x6a6 SWAP4
0x6a7 POP
0x6a8 POP
0x6a9 POP
0x6aa POP
0x6ab ISZERO
0x6ac ISZERO
0x6ad PUSH2 0x6b2
0x6b0 JUMPI
---
0x67b: JUMPDEST 
0x67c: V638 = 0x1
0x67e: V639 = 0xa0
0x680: V640 = 0x2
0x682: V641 = EXP 0x2 0xa0
0x683: V642 = SUB 0x10000000000000000000000000000000000000000 0x1
0x684: V643 = CALLER
0x685: V644 = AND V643 0xffffffffffffffffffffffffffffffffffffffff
0x686: V645 = 0x0
0x68a: M[0x0] = V644
0x68b: V646 = 0x1
0x68d: V647 = 0x20
0x68f: M[0x20] = 0x1
0x690: V648 = 0x40
0x694: V649 = SHA3 0x0 0x40
0x695: V650 = S[V649]
0x697: V651 = M[0x40]
0x699: V652 = ISZERO V650
0x69a: V653 = 0x8fc
0x69d: V654 = MUL 0x8fc V652
0x6a5: V655 = CALL V654 V644 V650 V651 0x0 V651 0x0
0x6ab: V656 = ISZERO V655
0x6ac: V657 = ISZERO V656
0x6ad: V658 = 0x6b2
0x6b0: JUMPI 0x6b2 V657
---
Entry stack: [V12, 0x106]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x106]

================================

Block 0x6b1
[0x6b1:0x6b1]
---
Predecessors: [0x67b]
Successors: []
---
0x6b1 INVALID
---
0x6b1: INVALID 
---
Entry stack: [V12, 0x106]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x106]

================================

Block 0x6b2
[0x6b2:0x6d7]
---
Predecessors: [0x67b]
Successors: [0x6d8]
---
0x6b2 JUMPDEST
0x6b3 PUSH1 0x1
0x6b5 PUSH1 0xa0
0x6b7 PUSH1 0x2
0x6b9 EXP
0x6ba SUB
0x6bb CALLER
0x6bc AND
0x6bd PUSH1 0x0
0x6bf SWAP1
0x6c0 DUP2
0x6c1 MSTORE
0x6c2 PUSH1 0x1
0x6c4 PUSH1 0x20
0x6c6 MSTORE
0x6c7 PUSH1 0x40
0x6c9 DUP2
0x6ca SHA3
0x6cb DUP1
0x6cc SLOAD
0x6cd PUSH1 0x5
0x6cf DUP1
0x6d0 SLOAD
0x6d1 SWAP2
0x6d2 SWAP1
0x6d3 SWAP2
0x6d4 SUB
0x6d5 SWAP1
0x6d6 SSTORE
0x6d7 SSTORE
---
0x6b2: JUMPDEST 
0x6b3: V659 = 0x1
0x6b5: V660 = 0xa0
0x6b7: V661 = 0x2
0x6b9: V662 = EXP 0x2 0xa0
0x6ba: V663 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6bb: V664 = CALLER
0x6bc: V665 = AND V664 0xffffffffffffffffffffffffffffffffffffffff
0x6bd: V666 = 0x0
0x6c1: M[0x0] = V665
0x6c2: V667 = 0x1
0x6c4: V668 = 0x20
0x6c6: M[0x20] = 0x1
0x6c7: V669 = 0x40
0x6ca: V670 = SHA3 0x0 0x40
0x6cc: V671 = S[V670]
0x6cd: V672 = 0x5
0x6d0: V673 = S[0x5]
0x6d4: V674 = SUB V673 V671
0x6d6: S[0x5] = V674
0x6d7: S[V670] = 0x0
---
Entry stack: [V12, 0x106]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x106]

================================

Block 0x6d8
[0x6d8:0x6d8]
---
Predecessors: [0x6b2]
Successors: [0x6d9]
---
0x6d8 JUMPDEST
---
0x6d8: JUMPDEST 
---
Entry stack: [V12, 0x106]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x106]

================================

Block 0x6d9
[0x6d9:0x6da]
---
Predecessors: [0x6d8]
Successors: [0x106]
---
0x6d9 JUMPDEST
0x6da JUMP
---
0x6d9: JUMPDEST 
0x6da: JUMP 0x106
---
Entry stack: [V12, 0x106]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x6db
[0x6db:0x6f1]
---
Predecessors: [0x2f2]
Successors: [0x6f2, 0x6f7]
---
0x6db JUMPDEST
0x6dc PUSH1 0x0
0x6de SLOAD
0x6df CALLER
0x6e0 PUSH1 0x1
0x6e2 PUSH1 0xa0
0x6e4 PUSH1 0x2
0x6e6 EXP
0x6e7 SUB
0x6e8 SWAP1
0x6e9 DUP2
0x6ea AND
0x6eb SWAP2
0x6ec AND
0x6ed EQ
0x6ee PUSH2 0x6f7
0x6f1 JUMPI
---
0x6db: JUMPDEST 
0x6dc: V675 = 0x0
0x6de: V676 = S[0x0]
0x6df: V677 = CALLER
0x6e0: V678 = 0x1
0x6e2: V679 = 0xa0
0x6e4: V680 = 0x2
0x6e6: V681 = EXP 0x2 0xa0
0x6e7: V682 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6ea: V683 = AND 0xffffffffffffffffffffffffffffffffffffffff V677
0x6ec: V684 = AND V676 0xffffffffffffffffffffffffffffffffffffffff
0x6ed: V685 = EQ V684 V683
0x6ee: V686 = 0x6f7
0x6f1: JUMPI 0x6f7 V685
---
Entry stack: [V12, 0x106, V263]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x106, V263]

================================

Block 0x6f2
[0x6f2:0x6f6]
---
Predecessors: [0x6db]
Successors: []
---
0x6f2 PUSH1 0x0
0x6f4 PUSH1 0x0
0x6f6 REVERT
---
0x6f2: V687 = 0x0
0x6f4: V688 = 0x0
0x6f6: REVERT 0x0 0x0
---
Entry stack: [V12, 0x106, V263]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x106, V263]

================================

Block 0x6f7
[0x6f7:0x706]
---
Predecessors: [0x6db]
Successors: [0x55e, 0x707]
---
0x6f7 JUMPDEST
0x6f8 PUSH1 0x1
0x6fa PUSH1 0xa0
0x6fc PUSH1 0x2
0x6fe EXP
0x6ff SUB
0x700 DUP2
0x701 AND
0x702 ISZERO
0x703 PUSH2 0x55e
0x706 JUMPI
---
0x6f7: JUMPDEST 
0x6f8: V689 = 0x1
0x6fa: V690 = 0xa0
0x6fc: V691 = 0x2
0x6fe: V692 = EXP 0x2 0xa0
0x6ff: V693 = SUB 0x10000000000000000000000000000000000000000 0x1
0x701: V694 = AND V263 0xffffffffffffffffffffffffffffffffffffffff
0x702: V695 = ISZERO V694
0x703: V696 = 0x55e
0x706: JUMPI 0x55e V695
---
Entry stack: [V12, 0x106, V263]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x106, V263]

================================

Block 0x707
[0x707:0x721]
---
Predecessors: [0x6f7]
Successors: [0x722]
---
0x707 PUSH1 0x0
0x709 DUP1
0x70a SLOAD
0x70b PUSH1 0x1
0x70d PUSH1 0xa0
0x70f PUSH1 0x2
0x711 EXP
0x712 SUB
0x713 NOT
0x714 AND
0x715 PUSH1 0x1
0x717 PUSH1 0xa0
0x719 PUSH1 0x2
0x71b EXP
0x71c SUB
0x71d DUP4
0x71e AND
0x71f OR
0x720 SWAP1
0x721 SSTORE
---
0x707: V697 = 0x0
0x70a: V698 = S[0x0]
0x70b: V699 = 0x1
0x70d: V700 = 0xa0
0x70f: V701 = 0x2
0x711: V702 = EXP 0x2 0xa0
0x712: V703 = SUB 0x10000000000000000000000000000000000000000 0x1
0x713: V704 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x714: V705 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V698
0x715: V706 = 0x1
0x717: V707 = 0xa0
0x719: V708 = 0x2
0x71b: V709 = EXP 0x2 0xa0
0x71c: V710 = SUB 0x10000000000000000000000000000000000000000 0x1
0x71e: V711 = AND V263 0xffffffffffffffffffffffffffffffffffffffff
0x71f: V712 = OR V711 V705
0x721: S[0x0] = V712
---
Entry stack: [V12, 0x106, V263]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x106, V263]

================================

Block 0x722
[0x722:0x722]
---
Predecessors: [0x707]
Successors: [0x723]
---
0x722 JUMPDEST
---
0x722: JUMPDEST 
---
Entry stack: [V12, 0x106, V263]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x106, V263]

================================

Block 0x723
[0x723:0x723]
---
Predecessors: [0x722]
Successors: [0x724]
---
0x723 JUMPDEST
---
0x723: JUMPDEST 
---
Entry stack: [V12, 0x106, V263]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x106, V263]

================================

Block 0x724
[0x724:0x726]
---
Predecessors: [0x723]
Successors: [0x106]
---
0x724 JUMPDEST
0x725 POP
0x726 JUMP
---
0x724: JUMPDEST 
0x726: JUMP 0x106
---
Entry stack: [V12, 0x106, V263]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x727
[0x727:0x73d]
---
Predecessors: [0x310]
Successors: [0x73e, 0x743]
---
0x727 JUMPDEST
0x728 PUSH1 0x0
0x72a SLOAD
0x72b CALLER
0x72c PUSH1 0x1
0x72e PUSH1 0xa0
0x730 PUSH1 0x2
0x732 EXP
0x733 SUB
0x734 SWAP1
0x735 DUP2
0x736 AND
0x737 SWAP2
0x738 AND
0x739 EQ
0x73a PUSH2 0x743
0x73d JUMPI
---
0x727: JUMPDEST 
0x728: V713 = 0x0
0x72a: V714 = S[0x0]
0x72b: V715 = CALLER
0x72c: V716 = 0x1
0x72e: V717 = 0xa0
0x730: V718 = 0x2
0x732: V719 = EXP 0x2 0xa0
0x733: V720 = SUB 0x10000000000000000000000000000000000000000 0x1
0x736: V721 = AND 0xffffffffffffffffffffffffffffffffffffffff V715
0x738: V722 = AND V714 0xffffffffffffffffffffffffffffffffffffffff
0x739: V723 = EQ V722 V721
0x73a: V724 = 0x743
0x73d: JUMPI 0x743 V723
---
Entry stack: [V12, 0x106, V276]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x106, V276]

================================

Block 0x73e
[0x73e:0x742]
---
Predecessors: [0x727]
Successors: []
---
0x73e PUSH1 0x0
0x740 PUSH1 0x0
0x742 REVERT
---
0x73e: V725 = 0x0
0x740: V726 = 0x0
0x742: REVERT 0x0 0x0
---
Entry stack: [V12, 0x106, V276]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x106, V276]

================================

Block 0x743
[0x743:0x75e]
---
Predecessors: [0x727]
Successors: [0x75f]
---
0x743 JUMPDEST
0x744 PUSH1 0x7
0x746 DUP1
0x747 SLOAD
0x748 PUSH1 0x1
0x74a PUSH1 0xa0
0x74c PUSH1 0x2
0x74e EXP
0x74f SUB
0x750 NOT
0x751 AND
0x752 PUSH1 0x1
0x754 PUSH1 0xa0
0x756 PUSH1 0x2
0x758 EXP
0x759 SUB
0x75a DUP4
0x75b AND
0x75c OR
0x75d SWAP1
0x75e SSTORE
---
0x743: JUMPDEST 
0x744: V727 = 0x7
0x747: V728 = S[0x7]
0x748: V729 = 0x1
0x74a: V730 = 0xa0
0x74c: V731 = 0x2
0x74e: V732 = EXP 0x2 0xa0
0x74f: V733 = SUB 0x10000000000000000000000000000000000000000 0x1
0x750: V734 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x751: V735 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V728
0x752: V736 = 0x1
0x754: V737 = 0xa0
0x756: V738 = 0x2
0x758: V739 = EXP 0x2 0xa0
0x759: V740 = SUB 0x10000000000000000000000000000000000000000 0x1
0x75b: V741 = AND V276 0xffffffffffffffffffffffffffffffffffffffff
0x75c: V742 = OR V741 V735
0x75e: S[0x7] = V742
---
Entry stack: [V12, 0x106, V276]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x106, V276]

================================

Block 0x75f
[0x75f:0x75f]
---
Predecessors: [0x743]
Successors: [0x760]
---
0x75f JUMPDEST
---
0x75f: JUMPDEST 
---
Entry stack: [V12, 0x106, V276]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x106, V276]

================================

Block 0x760
[0x760:0x762]
---
Predecessors: [0x75f]
Successors: [0x106]
---
0x760 JUMPDEST
0x761 POP
0x762 JUMP
---
0x760: JUMPDEST 
0x762: JUMP 0x106
---
Entry stack: [V12, 0x106, V276]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x763
[0x763:0x771]
---
Predecessors: [0x32e]
Successors: [0x118]
---
0x763 JUMPDEST
0x764 PUSH1 0x8
0x766 SLOAD
0x767 PUSH1 0x1
0x769 PUSH1 0xa0
0x76b PUSH1 0x2
0x76d EXP
0x76e SUB
0x76f AND
0x770 DUP2
0x771 JUMP
---
0x763: JUMPDEST 
0x764: V743 = 0x8
0x766: V744 = S[0x8]
0x767: V745 = 0x1
0x769: V746 = 0xa0
0x76b: V747 = 0x2
0x76d: V748 = EXP 0x2 0xa0
0x76e: V749 = SUB 0x10000000000000000000000000000000000000000 0x1
0x76f: V750 = AND 0xffffffffffffffffffffffffffffffffffffffff V744
0x771: JUMP 0x118
---
Entry stack: [V12, 0x118]
Stack pops: 1
Stack additions: [S0, V750]
Exit stack: [V12, 0x118, V750]

================================

Block 0x772
[0x772:0x79d]
---
Predecessors: []
Successors: []
---
0x772 STOP
0x773 LOG1
0x774 PUSH6 0x627a7a723058
0x77b SHA3
0x77c SSTORE
0x77d MISSING 0xf8
0x77e MISSING 0xf
0x77f MISSING 0xef
0x780 CALLDATACOPY
0x781 MISSING 0xc9
0x782 STOP
0x783 MISSING 0x22
0x784 MISSING 0xf8
0x785 MISSING 0xed
0x786 MISSING 0x48
0x787 DUP1
0x788 PUSH12 0x68f7f27480838b0f98db2d24
0x795 MISSING 0xed
0x796 PUSH3 0xd3bde1
0x79a MISSING 0xba
0x79b MISSING 0xed
0x79c STOP
0x79d MISSING 0x29
---
0x772: STOP 
0x773: LOG S0 S1 S2
0x774: V751 = 0x627a7a723058
0x77b: V752 = SHA3 0x627a7a723058 S3
0x77c: S[V752] = S4
0x77d: MISSING 0xf8
0x77e: MISSING 0xf
0x77f: MISSING 0xef
0x780: CALLDATACOPY S0 S1 S2
0x781: MISSING 0xc9
0x782: STOP 
0x783: MISSING 0x22
0x784: MISSING 0xf8
0x785: MISSING 0xed
0x786: MISSING 0x48
0x788: V753 = 0x68f7f27480838b0f98db2d24
0x795: MISSING 0xed
0x796: V754 = 0xd3bde1
0x79a: MISSING 0xba
0x79b: MISSING 0xed
0x79c: STOP 
0x79d: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0x68f7f27480838b0f98db2d24, S0, S0, 0xd3bde1]
Exit stack: []

================================

Function 0:
Public function signature: 0x10fe9ae8
Entry block: 0x108
Exit block: 0x118
Body: 0x108, 0x10f, 0x110, 0x118, 0x4fc, 0x509

Function 1:
Public function signature: 0x228cb733
Entry block: 0x134
Exit block: 0x144
Body: 0x134, 0x13b, 0x13c, 0x144, 0x50c

Function 2:
Public function signature: 0x26a4e8d2
Entry block: 0x156
Exit block: 0x106
Body: 0x106, 0x156, 0x15d, 0x15e, 0x512, 0x529, 0x52e, 0x55e, 0x55f

Function 3:
Public function signature: 0x2cd6f4ca
Entry block: 0x174
Exit block: 0x118
Body: 0x118, 0x174, 0x17b, 0x17c, 0x562, 0x56f

Function 4:
Public function signature: 0x4b136ba0
Entry block: 0x1a0
Exit block: 0x106
Body: 0x106, 0x1a0

Function 5:
Public function signature: 0x55a373d6
Entry block: 0x1aa
Exit block: 0x118
Body: 0x118, 0x1aa, 0x1b1, 0x1b2, 0x572

Function 6:
Public function signature: 0x582c6d70
Entry block: 0x1d6
Exit block: 0x1e6
Body: 0x1d6, 0x1dd, 0x1de, 0x1e6, 0x581

Function 7:
Public function signature: 0x6ad1fe02
Entry block: 0x1fa
Exit block: 0x118
Body: 0x118, 0x1fa, 0x201, 0x202, 0x58a

Function 8:
Public function signature: 0x70a08231
Entry block: 0x226
Exit block: 0x144
Body: 0x144, 0x226, 0x22d, 0x22e, 0x599, 0x5b3

Function 9:
Public function signature: 0x8b424267
Entry block: 0x254
Exit block: 0x144
Body: 0x144, 0x254, 0x25b, 0x25c, 0x5b8

Function 10:
Public function signature: 0x8da5cb5b
Entry block: 0x276
Exit block: 0x118
Body: 0x118, 0x276, 0x27d, 0x27e, 0x5be

Function 11:
Public function signature: 0xa6f2ae3a
Entry block: 0x2a2
Exit block: 0x106
Body: 0x106, 0x2a2, 0x2a9, 0x2aa, 0x5cd, 0x5e7, 0x5ec, 0x624, 0x625, 0x652, 0x653, 0x661, 0x662

Function 12:
Public function signature: 0xad7a672f
Entry block: 0x2b4
Exit block: 0x144
Body: 0x144, 0x2b4, 0x2bb, 0x2bc, 0x664

Function 13:
Public function signature: 0xd0e30db0
Entry block: 0x2d6
Exit block: 0x106
Body: 0x106, 0x2d6

Function 14:
Public function signature: 0xe086e5ec
Entry block: 0x2e0
Exit block: 0x106
Body: 0x106, 0x2e0, 0x66a, 0x676, 0x67b, 0x6b1, 0x6b2, 0x6d8, 0x6d9

Function 15:
Public function signature: 0xf2fde38b
Entry block: 0x2ea
Exit block: 0x106
Body: 0x106, 0x2ea, 0x2f1, 0x2f2, 0x55e, 0x55f, 0x6db, 0x6f2, 0x6f7, 0x707, 0x722, 0x723, 0x724

Function 16:
Public function signature: 0xf8fb491f
Entry block: 0x308
Exit block: 0x106
Body: 0x106, 0x308, 0x30f, 0x310, 0x727, 0x73e, 0x743, 0x75f, 0x760

Function 17:
Public function signature: 0xfc0c546a
Entry block: 0x326
Exit block: 0x118
Body: 0x118, 0x326, 0x32d, 0x32e, 0x763

Function 18:
Public fallback function
Entry block: 0xe0
Exit block: 0x106
Body: 0xe0, 0xe4, 0xee, 0xf5, 0xfa, 0x102, 0x103, 0x104, 0x106

Function 19:
Private function
Entry block: 0x3b6
Exit block: 0x4fa
Body: 0x3b6, 0x3c8, 0x3e7, 0x45c, 0x46a, 0x47e, 0x4cd, 0x4db, 0x4f8, 0x4f9, 0x4fa

Function 20:
Private function
Entry block: 0x352
Exit block: 0x3b2
Body: 0x352, 0x368, 0x372, 0x3b1, 0x3b2

