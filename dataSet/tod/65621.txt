Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x8b]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x8b
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x8b
0xa: JUMPI 0x8b V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x119]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x3ccfd60b
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x119
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x3ccfd60b
0x39: V12 = EQ V10 0x3ccfd60b
0x3a: V13 = 0x119
0x3d: JUMPI 0x119 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x12e]
---
0x3e DUP1
0x3f PUSH4 0x41c0e1b5
0x44 EQ
0x45 PUSH2 0x12e
0x48 JUMPI
---
0x3f: V14 = 0x41c0e1b5
0x44: V15 = EQ 0x41c0e1b5 V10
0x45: V16 = 0x12e
0x48: JUMPI 0x12e V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x143]
---
0x49 DUP1
0x4a PUSH4 0x79ba5097
0x4f EQ
0x50 PUSH2 0x143
0x53 JUMPI
---
0x4a: V17 = 0x79ba5097
0x4f: V18 = EQ 0x79ba5097 V10
0x50: V19 = 0x143
0x53: JUMPI 0x143 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x158]
---
0x54 DUP1
0x55 PUSH4 0x8da5cb5b
0x5a EQ
0x5b PUSH2 0x158
0x5e JUMPI
---
0x55: V20 = 0x8da5cb5b
0x5a: V21 = EQ 0x8da5cb5b V10
0x5b: V22 = 0x158
0x5e: JUMPI 0x158 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x187]
---
0x5f DUP1
0x60 PUSH4 0xb8363c8b
0x65 EQ
0x66 PUSH2 0x187
0x69 JUMPI
---
0x60: V23 = 0xb8363c8b
0x65: V24 = EQ 0xb8363c8b V10
0x66: V25 = 0x187
0x69: JUMPI 0x187 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x1b6]
---
0x6a DUP1
0x6b PUSH4 0xd4ee1d90
0x70 EQ
0x71 PUSH2 0x1b6
0x74 JUMPI
---
0x6b: V26 = 0xd4ee1d90
0x70: V27 = EQ 0xd4ee1d90 V10
0x71: V28 = 0x1b6
0x74: JUMPI 0x1b6 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x1e5]
---
0x75 DUP1
0x76 PUSH4 0xd7c31bf6
0x7b EQ
0x7c PUSH2 0x1e5
0x7f JUMPI
---
0x76: V29 = 0xd7c31bf6
0x7b: V30 = EQ 0xd7c31bf6 V10
0x7c: V31 = 0x1e5
0x7f: JUMPI 0x1e5 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x214]
---
0x80 DUP1
0x81 PUSH4 0xf2fde38b
0x86 EQ
0x87 PUSH2 0x214
0x8a JUMPI
---
0x81: V32 = 0xf2fde38b
0x86: V33 = EQ 0xf2fde38b V10
0x87: V34 = 0x214
0x8a: JUMPI 0x214 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x8b]
---
Predecessors: [0x0, 0x80]
Successors: [0x8c]
---
0x8b JUMPDEST
---
0x8b: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x8c
[0x8c:0x94]
---
Predecessors: [0x8b]
Successors: [0x95, 0x99]
---
0x8c JUMPDEST
0x8d PUSH1 0x0
0x8f CALLVALUE
0x90 GT
0x91 PUSH2 0x99
0x94 JUMPI
---
0x8c: JUMPDEST 
0x8d: V35 = 0x0
0x8f: V36 = CALLVALUE
0x90: V37 = GT V36 0x0
0x91: V38 = 0x99
0x94: JUMPI 0x99 V37
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x95
[0x95:0x98]
---
Predecessors: [0x8c]
Successors: []
---
0x95 PUSH1 0x0
0x97 DUP1
0x98 REVERT
---
0x95: V39 = 0x0
0x98: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x99
[0x99:0xff]
---
Predecessors: [0x8c]
Successors: [0x100, 0x104]
---
0x99 JUMPDEST
0x9a PUSH1 0x2
0x9c SLOAD
0x9d PUSH1 0x1
0x9f PUSH1 0xa0
0xa1 PUSH1 0x2
0xa3 EXP
0xa4 SUB
0xa5 AND
0xa6 PUSH4 0xfa6b129d
0xab CALLVALUE
0xac GAS
0xad SWAP1
0xae CALLER
0xaf PUSH1 0x40
0xb1 MLOAD
0xb2 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xd0 PUSH4 0xffffffff
0xd5 DUP7
0xd6 AND
0xd7 MUL
0xd8 DUP2
0xd9 MSTORE
0xda PUSH1 0x1
0xdc PUSH1 0xa0
0xde PUSH1 0x2
0xe0 EXP
0xe1 SUB
0xe2 SWAP1
0xe3 SWAP2
0xe4 AND
0xe5 PUSH1 0x4
0xe7 DUP3
0xe8 ADD
0xe9 MSTORE
0xea PUSH1 0x24
0xec ADD
0xed PUSH1 0x0
0xef PUSH1 0x40
0xf1 MLOAD
0xf2 DUP1
0xf3 DUP4
0xf4 SUB
0xf5 DUP2
0xf6 DUP6
0xf7 DUP10
0xf8 DUP1
0xf9 EXTCODESIZE
0xfa ISZERO
0xfb ISZERO
0xfc PUSH2 0x104
0xff JUMPI
---
0x99: JUMPDEST 
0x9a: V40 = 0x2
0x9c: V41 = S[0x2]
0x9d: V42 = 0x1
0x9f: V43 = 0xa0
0xa1: V44 = 0x2
0xa3: V45 = EXP 0x2 0xa0
0xa4: V46 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa5: V47 = AND 0xffffffffffffffffffffffffffffffffffffffff V41
0xa6: V48 = 0xfa6b129d
0xab: V49 = CALLVALUE
0xac: V50 = GAS
0xae: V51 = CALLER
0xaf: V52 = 0x40
0xb1: V53 = M[0x40]
0xb2: V54 = 0x100000000000000000000000000000000000000000000000000000000
0xd0: V55 = 0xffffffff
0xd6: V56 = AND 0xfa6b129d 0xffffffff
0xd7: V57 = MUL 0xfa6b129d 0x100000000000000000000000000000000000000000000000000000000
0xd9: M[V53] = 0xfa6b129d00000000000000000000000000000000000000000000000000000000
0xda: V58 = 0x1
0xdc: V59 = 0xa0
0xde: V60 = 0x2
0xe0: V61 = EXP 0x2 0xa0
0xe1: V62 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe4: V63 = AND V51 0xffffffffffffffffffffffffffffffffffffffff
0xe5: V64 = 0x4
0xe8: V65 = ADD V53 0x4
0xe9: M[V65] = V63
0xea: V66 = 0x24
0xec: V67 = ADD 0x24 V53
0xed: V68 = 0x0
0xef: V69 = 0x40
0xf1: V70 = M[0x40]
0xf4: V71 = SUB V67 V70
0xf9: V72 = EXTCODESIZE V47
0xfa: V73 = ISZERO V72
0xfb: V74 = ISZERO V73
0xfc: V75 = 0x104
0xff: JUMPI 0x104 V74
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [V47, 0xfa6b129d, V50, V49, V67, 0x0, V70, V71, V70, V49, V47]
Exit stack: [V10, V47, 0xfa6b129d, V50, V49, V67, 0x0, V70, V71, V70, V49, V47]

================================

Block 0x100
[0x100:0x103]
---
Predecessors: [0x99]
Successors: []
---
0x100 PUSH1 0x0
0x102 DUP1
0x103 REVERT
---
0x100: V76 = 0x0
0x103: REVERT 0x0 0x0
---
Entry stack: [V10, V47, 0xfa6b129d, V50, V49, V67, 0x0, V70, V71, V70, V49, V47]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V47, 0xfa6b129d, V50, V49, V67, 0x0, V70, V71, V70, V49, V47]

================================

Block 0x104
[0x104:0x10c]
---
Predecessors: [0x99]
Successors: [0x10d, 0x111]
---
0x104 JUMPDEST
0x105 DUP9
0x106 CALL
0x107 ISZERO
0x108 ISZERO
0x109 PUSH2 0x111
0x10c JUMPI
---
0x104: JUMPDEST 
0x106: V77 = CALL V50 V47 V49 V70 V71 V70 0x0
0x107: V78 = ISZERO V77
0x108: V79 = ISZERO V78
0x109: V80 = 0x111
0x10c: JUMPI 0x111 V79
---
Entry stack: [V10, V47, 0xfa6b129d, V50, V49, V67, 0x0, V70, V71, V70, V49, V47]
Stack pops: 9
Stack additions: [S8, S7, S6]
Exit stack: [V10, V47, 0xfa6b129d, V50, V49, V67]

================================

Block 0x10d
[0x10d:0x110]
---
Predecessors: [0x104]
Successors: []
---
0x10d PUSH1 0x0
0x10f DUP1
0x110 REVERT
---
0x10d: V81 = 0x0
0x110: REVERT 0x0 0x0
---
Entry stack: [V10, V47, 0xfa6b129d, V50, V49, V67]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V47, 0xfa6b129d, V50, V49, V67]

================================

Block 0x111
[0x111:0x116]
---
Predecessors: [0x104]
Successors: [0x117]
---
0x111 JUMPDEST
0x112 POP
0x113 POP
0x114 POP
0x115 POP
0x116 POP
---
0x111: JUMPDEST 
---
Entry stack: [V10, V47, 0xfa6b129d, V50, V49, V67]
Stack pops: 5
Stack additions: []
Exit stack: [V10]

================================

Block 0x117
[0x117:0x118]
---
Predecessors: [0x111, 0x28c, 0x35d, 0x3f8]
Successors: []
---
0x117 JUMPDEST
0x118 STOP
---
0x117: JUMPDEST 
0x118: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x119
[0x119:0x11f]
---
Predecessors: [0xb]
Successors: [0x120, 0x124]
---
0x119 JUMPDEST
0x11a CALLVALUE
0x11b ISZERO
0x11c PUSH2 0x124
0x11f JUMPI
---
0x119: JUMPDEST 
0x11a: V82 = CALLVALUE
0x11b: V83 = ISZERO V82
0x11c: V84 = 0x124
0x11f: JUMPI 0x124 V83
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x120
[0x120:0x123]
---
Predecessors: [0x119]
Successors: []
---
0x120 PUSH1 0x0
0x122 DUP1
0x123 REVERT
---
0x120: V85 = 0x0
0x123: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x124
[0x124:0x12b]
---
Predecessors: [0x119]
Successors: [0x235]
---
0x124 JUMPDEST
0x125 PUSH2 0x117
0x128 PUSH2 0x235
0x12b JUMP
---
0x124: JUMPDEST 
0x125: V86 = 0x117
0x128: V87 = 0x235
0x12b: JUMP 0x235
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x117]
Exit stack: [V10, 0x117]

================================

Block 0x12c
[0x12c:0x12d]
---
Predecessors: []
Successors: []
---
0x12c JUMPDEST
0x12d STOP
---
0x12c: JUMPDEST 
0x12d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x12e
[0x12e:0x134]
---
Predecessors: [0x3e]
Successors: [0x135, 0x139]
---
0x12e JUMPDEST
0x12f CALLVALUE
0x130 ISZERO
0x131 PUSH2 0x139
0x134 JUMPI
---
0x12e: JUMPDEST 
0x12f: V88 = CALLVALUE
0x130: V89 = ISZERO V88
0x131: V90 = 0x139
0x134: JUMPI 0x139 V89
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x135
[0x135:0x138]
---
Predecessors: [0x12e]
Successors: []
---
0x135 PUSH1 0x0
0x137 DUP1
0x138 REVERT
---
0x135: V91 = 0x0
0x138: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x139
[0x139:0x140]
---
Predecessors: [0x12e]
Successors: [0x28e]
---
0x139 JUMPDEST
0x13a PUSH2 0x117
0x13d PUSH2 0x28e
0x140 JUMP
---
0x139: JUMPDEST 
0x13a: V92 = 0x117
0x13d: V93 = 0x28e
0x140: JUMP 0x28e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x117]
Exit stack: [V10, 0x117]

================================

Block 0x141
[0x141:0x142]
---
Predecessors: []
Successors: []
---
0x141 JUMPDEST
0x142 STOP
---
0x141: JUMPDEST 
0x142: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x143
[0x143:0x149]
---
Predecessors: [0x49]
Successors: [0x14a, 0x14e]
---
0x143 JUMPDEST
0x144 CALLVALUE
0x145 ISZERO
0x146 PUSH2 0x14e
0x149 JUMPI
---
0x143: JUMPDEST 
0x144: V94 = CALLVALUE
0x145: V95 = ISZERO V94
0x146: V96 = 0x14e
0x149: JUMPI 0x14e V95
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x14a
[0x14a:0x14d]
---
Predecessors: [0x143]
Successors: []
---
0x14a PUSH1 0x0
0x14c DUP1
0x14d REVERT
---
0x14a: V97 = 0x0
0x14d: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x14e
[0x14e:0x155]
---
Predecessors: [0x143]
Successors: [0x2b7]
---
0x14e JUMPDEST
0x14f PUSH2 0x117
0x152 PUSH2 0x2b7
0x155 JUMP
---
0x14e: JUMPDEST 
0x14f: V98 = 0x117
0x152: V99 = 0x2b7
0x155: JUMP 0x2b7
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x117]
Exit stack: [V10, 0x117]

================================

Block 0x156
[0x156:0x157]
---
Predecessors: []
Successors: []
---
0x156 JUMPDEST
0x157 STOP
---
0x156: JUMPDEST 
0x157: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x158
[0x158:0x15e]
---
Predecessors: [0x54]
Successors: [0x15f, 0x163]
---
0x158 JUMPDEST
0x159 CALLVALUE
0x15a ISZERO
0x15b PUSH2 0x163
0x15e JUMPI
---
0x158: JUMPDEST 
0x159: V100 = CALLVALUE
0x15a: V101 = ISZERO V100
0x15b: V102 = 0x163
0x15e: JUMPI 0x163 V101
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x15f
[0x15f:0x162]
---
Predecessors: [0x158]
Successors: []
---
0x15f PUSH1 0x0
0x161 DUP1
0x162 REVERT
---
0x15f: V103 = 0x0
0x162: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x163
[0x163:0x16a]
---
Predecessors: [0x158]
Successors: [0x35f]
---
0x163 JUMPDEST
0x164 PUSH2 0x16b
0x167 PUSH2 0x35f
0x16a JUMP
---
0x163: JUMPDEST 
0x164: V104 = 0x16b
0x167: V105 = 0x35f
0x16a: JUMP 0x35f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x16b]
Exit stack: [V10, 0x16b]

================================

Block 0x16b
[0x16b:0x186]
---
Predecessors: [0x35f, 0x36e, 0x37d, 0x38c]
Successors: []
---
0x16b JUMPDEST
0x16c PUSH1 0x40
0x16e MLOAD
0x16f PUSH1 0x1
0x171 PUSH1 0xa0
0x173 PUSH1 0x2
0x175 EXP
0x176 SUB
0x177 SWAP1
0x178 SWAP2
0x179 AND
0x17a DUP2
0x17b MSTORE
0x17c PUSH1 0x20
0x17e ADD
0x17f PUSH1 0x40
0x181 MLOAD
0x182 DUP1
0x183 SWAP2
0x184 SUB
0x185 SWAP1
0x186 RETURN
---
0x16b: JUMPDEST 
0x16c: V106 = 0x40
0x16e: V107 = M[0x40]
0x16f: V108 = 0x1
0x171: V109 = 0xa0
0x173: V110 = 0x2
0x175: V111 = EXP 0x2 0xa0
0x176: V112 = SUB 0x10000000000000000000000000000000000000000 0x1
0x179: V113 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x17b: M[V107] = V113
0x17c: V114 = 0x20
0x17e: V115 = ADD 0x20 V107
0x17f: V116 = 0x40
0x181: V117 = M[0x40]
0x184: V118 = SUB V115 V117
0x186: RETURN V117 V118
---
Entry stack: [V10, 0x16b, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x16b]

================================

Block 0x187
[0x187:0x18d]
---
Predecessors: [0x5f]
Successors: [0x18e, 0x192]
---
0x187 JUMPDEST
0x188 CALLVALUE
0x189 ISZERO
0x18a PUSH2 0x192
0x18d JUMPI
---
0x187: JUMPDEST 
0x188: V119 = CALLVALUE
0x189: V120 = ISZERO V119
0x18a: V121 = 0x192
0x18d: JUMPI 0x192 V120
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x18e
[0x18e:0x191]
---
Predecessors: [0x187]
Successors: []
---
0x18e PUSH1 0x0
0x190 DUP1
0x191 REVERT
---
0x18e: V122 = 0x0
0x191: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x192
[0x192:0x199]
---
Predecessors: [0x187]
Successors: [0x36e]
---
0x192 JUMPDEST
0x193 PUSH2 0x16b
0x196 PUSH2 0x36e
0x199 JUMP
---
0x192: JUMPDEST 
0x193: V123 = 0x16b
0x196: V124 = 0x36e
0x199: JUMP 0x36e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x16b]
Exit stack: [V10, 0x16b]

================================

Block 0x19a
[0x19a:0x1b5]
---
Predecessors: []
Successors: []
---
0x19a JUMPDEST
0x19b PUSH1 0x40
0x19d MLOAD
0x19e PUSH1 0x1
0x1a0 PUSH1 0xa0
0x1a2 PUSH1 0x2
0x1a4 EXP
0x1a5 SUB
0x1a6 SWAP1
0x1a7 SWAP2
0x1a8 AND
0x1a9 DUP2
0x1aa MSTORE
0x1ab PUSH1 0x20
0x1ad ADD
0x1ae PUSH1 0x40
0x1b0 MLOAD
0x1b1 DUP1
0x1b2 SWAP2
0x1b3 SUB
0x1b4 SWAP1
0x1b5 RETURN
---
0x19a: JUMPDEST 
0x19b: V125 = 0x40
0x19d: V126 = M[0x40]
0x19e: V127 = 0x1
0x1a0: V128 = 0xa0
0x1a2: V129 = 0x2
0x1a4: V130 = EXP 0x2 0xa0
0x1a5: V131 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a8: V132 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1aa: M[V126] = V132
0x1ab: V133 = 0x20
0x1ad: V134 = ADD 0x20 V126
0x1ae: V135 = 0x40
0x1b0: V136 = M[0x40]
0x1b3: V137 = SUB V134 V136
0x1b5: RETURN V136 V137
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1b6
[0x1b6:0x1bc]
---
Predecessors: [0x6a]
Successors: [0x1bd, 0x1c1]
---
0x1b6 JUMPDEST
0x1b7 CALLVALUE
0x1b8 ISZERO
0x1b9 PUSH2 0x1c1
0x1bc JUMPI
---
0x1b6: JUMPDEST 
0x1b7: V138 = CALLVALUE
0x1b8: V139 = ISZERO V138
0x1b9: V140 = 0x1c1
0x1bc: JUMPI 0x1c1 V139
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1bd
[0x1bd:0x1c0]
---
Predecessors: [0x1b6]
Successors: []
---
0x1bd PUSH1 0x0
0x1bf DUP1
0x1c0 REVERT
---
0x1bd: V141 = 0x0
0x1c0: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1c1
[0x1c1:0x1c8]
---
Predecessors: [0x1b6]
Successors: [0x37d]
---
0x1c1 JUMPDEST
0x1c2 PUSH2 0x16b
0x1c5 PUSH2 0x37d
0x1c8 JUMP
---
0x1c1: JUMPDEST 
0x1c2: V142 = 0x16b
0x1c5: V143 = 0x37d
0x1c8: JUMP 0x37d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x16b]
Exit stack: [V10, 0x16b]

================================

Block 0x1c9
[0x1c9:0x1e4]
---
Predecessors: []
Successors: []
---
0x1c9 JUMPDEST
0x1ca PUSH1 0x40
0x1cc MLOAD
0x1cd PUSH1 0x1
0x1cf PUSH1 0xa0
0x1d1 PUSH1 0x2
0x1d3 EXP
0x1d4 SUB
0x1d5 SWAP1
0x1d6 SWAP2
0x1d7 AND
0x1d8 DUP2
0x1d9 MSTORE
0x1da PUSH1 0x20
0x1dc ADD
0x1dd PUSH1 0x40
0x1df MLOAD
0x1e0 DUP1
0x1e1 SWAP2
0x1e2 SUB
0x1e3 SWAP1
0x1e4 RETURN
---
0x1c9: JUMPDEST 
0x1ca: V144 = 0x40
0x1cc: V145 = M[0x40]
0x1cd: V146 = 0x1
0x1cf: V147 = 0xa0
0x1d1: V148 = 0x2
0x1d3: V149 = EXP 0x2 0xa0
0x1d4: V150 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d7: V151 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1d9: M[V145] = V151
0x1da: V152 = 0x20
0x1dc: V153 = ADD 0x20 V145
0x1dd: V154 = 0x40
0x1df: V155 = M[0x40]
0x1e2: V156 = SUB V153 V155
0x1e4: RETURN V155 V156
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1e5
[0x1e5:0x1eb]
---
Predecessors: [0x75]
Successors: [0x1ec, 0x1f0]
---
0x1e5 JUMPDEST
0x1e6 CALLVALUE
0x1e7 ISZERO
0x1e8 PUSH2 0x1f0
0x1eb JUMPI
---
0x1e5: JUMPDEST 
0x1e6: V157 = CALLVALUE
0x1e7: V158 = ISZERO V157
0x1e8: V159 = 0x1f0
0x1eb: JUMPI 0x1f0 V158
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ec
[0x1ec:0x1ef]
---
Predecessors: [0x1e5]
Successors: []
---
0x1ec PUSH1 0x0
0x1ee DUP1
0x1ef REVERT
---
0x1ec: V160 = 0x0
0x1ef: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1f0
[0x1f0:0x1f7]
---
Predecessors: [0x1e5]
Successors: [0x38c]
---
0x1f0 JUMPDEST
0x1f1 PUSH2 0x16b
0x1f4 PUSH2 0x38c
0x1f7 JUMP
---
0x1f0: JUMPDEST 
0x1f1: V161 = 0x16b
0x1f4: V162 = 0x38c
0x1f7: JUMP 0x38c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x16b]
Exit stack: [V10, 0x16b]

================================

Block 0x1f8
[0x1f8:0x213]
---
Predecessors: []
Successors: []
---
0x1f8 JUMPDEST
0x1f9 PUSH1 0x40
0x1fb MLOAD
0x1fc PUSH1 0x1
0x1fe PUSH1 0xa0
0x200 PUSH1 0x2
0x202 EXP
0x203 SUB
0x204 SWAP1
0x205 SWAP2
0x206 AND
0x207 DUP2
0x208 MSTORE
0x209 PUSH1 0x20
0x20b ADD
0x20c PUSH1 0x40
0x20e MLOAD
0x20f DUP1
0x210 SWAP2
0x211 SUB
0x212 SWAP1
0x213 RETURN
---
0x1f8: JUMPDEST 
0x1f9: V163 = 0x40
0x1fb: V164 = M[0x40]
0x1fc: V165 = 0x1
0x1fe: V166 = 0xa0
0x200: V167 = 0x2
0x202: V168 = EXP 0x2 0xa0
0x203: V169 = SUB 0x10000000000000000000000000000000000000000 0x1
0x206: V170 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x208: M[V164] = V170
0x209: V171 = 0x20
0x20b: V172 = ADD 0x20 V164
0x20c: V173 = 0x40
0x20e: V174 = M[0x40]
0x211: V175 = SUB V172 V174
0x213: RETURN V174 V175
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x214
[0x214:0x21a]
---
Predecessors: [0x80]
Successors: [0x21b, 0x21f]
---
0x214 JUMPDEST
0x215 CALLVALUE
0x216 ISZERO
0x217 PUSH2 0x21f
0x21a JUMPI
---
0x214: JUMPDEST 
0x215: V176 = CALLVALUE
0x216: V177 = ISZERO V176
0x217: V178 = 0x21f
0x21a: JUMPI 0x21f V177
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x21b
[0x21b:0x21e]
---
Predecessors: [0x214]
Successors: []
---
0x21b PUSH1 0x0
0x21d DUP1
0x21e REVERT
---
0x21b: V179 = 0x0
0x21e: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x21f
[0x21f:0x232]
---
Predecessors: [0x214]
Successors: [0x39b]
---
0x21f JUMPDEST
0x220 PUSH2 0x117
0x223 PUSH1 0x1
0x225 PUSH1 0xa0
0x227 PUSH1 0x2
0x229 EXP
0x22a SUB
0x22b PUSH1 0x4
0x22d CALLDATALOAD
0x22e AND
0x22f PUSH2 0x39b
0x232 JUMP
---
0x21f: JUMPDEST 
0x220: V180 = 0x117
0x223: V181 = 0x1
0x225: V182 = 0xa0
0x227: V183 = 0x2
0x229: V184 = EXP 0x2 0xa0
0x22a: V185 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22b: V186 = 0x4
0x22d: V187 = CALLDATALOAD 0x4
0x22e: V188 = AND V187 0xffffffffffffffffffffffffffffffffffffffff
0x22f: V189 = 0x39b
0x232: JUMP 0x39b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x117, V188]
Exit stack: [V10, 0x117, V188]

================================

Block 0x233
[0x233:0x234]
---
Predecessors: []
Successors: []
---
0x233 JUMPDEST
0x234 STOP
---
0x233: JUMPDEST 
0x234: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x235
[0x235:0x24b]
---
Predecessors: [0x124]
Successors: [0x24c, 0x24d]
---
0x235 JUMPDEST
0x236 PUSH1 0x0
0x238 SLOAD
0x239 CALLER
0x23a PUSH1 0x1
0x23c PUSH1 0xa0
0x23e PUSH1 0x2
0x240 EXP
0x241 SUB
0x242 SWAP1
0x243 DUP2
0x244 AND
0x245 SWAP2
0x246 AND
0x247 EQ
0x248 PUSH2 0x24d
0x24b JUMPI
---
0x235: JUMPDEST 
0x236: V190 = 0x0
0x238: V191 = S[0x0]
0x239: V192 = CALLER
0x23a: V193 = 0x1
0x23c: V194 = 0xa0
0x23e: V195 = 0x2
0x240: V196 = EXP 0x2 0xa0
0x241: V197 = SUB 0x10000000000000000000000000000000000000000 0x1
0x244: V198 = AND 0xffffffffffffffffffffffffffffffffffffffff V192
0x246: V199 = AND V191 0xffffffffffffffffffffffffffffffffffffffff
0x247: V200 = EQ V199 V198
0x248: V201 = 0x24d
0x24b: JUMPI 0x24d V200
---
Entry stack: [V10, 0x117]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x117]

================================

Block 0x24c
[0x24c:0x24c]
---
Predecessors: [0x235]
Successors: []
---
0x24c INVALID
---
0x24c: INVALID 
---
Entry stack: [V10, 0x117]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x117]

================================

Block 0x24d
[0x24d:0x285]
---
Predecessors: [0x235]
Successors: [0x286, 0x28a]
---
0x24d JUMPDEST
0x24e CALLER
0x24f PUSH1 0x1
0x251 PUSH1 0xa0
0x253 PUSH1 0x2
0x255 EXP
0x256 SUB
0x257 AND
0x258 PUSH2 0x8fc
0x25b ADDRESS
0x25c PUSH1 0x1
0x25e PUSH1 0xa0
0x260 PUSH1 0x2
0x262 EXP
0x263 SUB
0x264 AND
0x265 BALANCE
0x266 SWAP1
0x267 DUP2
0x268 ISZERO
0x269 MUL
0x26a SWAP1
0x26b PUSH1 0x40
0x26d MLOAD
0x26e PUSH1 0x0
0x270 PUSH1 0x40
0x272 MLOAD
0x273 DUP1
0x274 DUP4
0x275 SUB
0x276 DUP2
0x277 DUP6
0x278 DUP9
0x279 DUP9
0x27a CALL
0x27b SWAP4
0x27c POP
0x27d POP
0x27e POP
0x27f POP
0x280 ISZERO
0x281 ISZERO
0x282 PUSH2 0x28a
0x285 JUMPI
---
0x24d: JUMPDEST 
0x24e: V202 = CALLER
0x24f: V203 = 0x1
0x251: V204 = 0xa0
0x253: V205 = 0x2
0x255: V206 = EXP 0x2 0xa0
0x256: V207 = SUB 0x10000000000000000000000000000000000000000 0x1
0x257: V208 = AND 0xffffffffffffffffffffffffffffffffffffffff V202
0x258: V209 = 0x8fc
0x25b: V210 = ADDRESS
0x25c: V211 = 0x1
0x25e: V212 = 0xa0
0x260: V213 = 0x2
0x262: V214 = EXP 0x2 0xa0
0x263: V215 = SUB 0x10000000000000000000000000000000000000000 0x1
0x264: V216 = AND 0xffffffffffffffffffffffffffffffffffffffff V210
0x265: V217 = BALANCE V216
0x268: V218 = ISZERO V217
0x269: V219 = MUL V218 0x8fc
0x26b: V220 = 0x40
0x26d: V221 = M[0x40]
0x26e: V222 = 0x0
0x270: V223 = 0x40
0x272: V224 = M[0x40]
0x275: V225 = SUB V221 V224
0x27a: V226 = CALL V219 V208 V217 V224 V225 V224 0x0
0x280: V227 = ISZERO V226
0x281: V228 = ISZERO V227
0x282: V229 = 0x28a
0x285: JUMPI 0x28a V228
---
Entry stack: [V10, 0x117]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x117]

================================

Block 0x286
[0x286:0x289]
---
Predecessors: [0x24d]
Successors: []
---
0x286 PUSH1 0x0
0x288 DUP1
0x289 REVERT
---
0x286: V230 = 0x0
0x289: REVERT 0x0 0x0
---
Entry stack: [V10, 0x117]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x117]

================================

Block 0x28a
[0x28a:0x28a]
---
Predecessors: [0x24d]
Successors: [0x28b]
---
0x28a JUMPDEST
---
0x28a: JUMPDEST 
---
Entry stack: [V10, 0x117]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x117]

================================

Block 0x28b
[0x28b:0x28b]
---
Predecessors: [0x28a]
Successors: [0x28c]
---
0x28b JUMPDEST
---
0x28b: JUMPDEST 
---
Entry stack: [V10, 0x117]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x117]

================================

Block 0x28c
[0x28c:0x28d]
---
Predecessors: [0x28b]
Successors: [0x117]
---
0x28c JUMPDEST
0x28d JUMP
---
0x28c: JUMPDEST 
0x28d: JUMP 0x117
---
Entry stack: [V10, 0x117]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x28e
[0x28e:0x2a4]
---
Predecessors: [0x139]
Successors: [0x2a5, 0x2a6]
---
0x28e JUMPDEST
0x28f PUSH1 0x0
0x291 SLOAD
0x292 CALLER
0x293 PUSH1 0x1
0x295 PUSH1 0xa0
0x297 PUSH1 0x2
0x299 EXP
0x29a SUB
0x29b SWAP1
0x29c DUP2
0x29d AND
0x29e SWAP2
0x29f AND
0x2a0 EQ
0x2a1 PUSH2 0x2a6
0x2a4 JUMPI
---
0x28e: JUMPDEST 
0x28f: V231 = 0x0
0x291: V232 = S[0x0]
0x292: V233 = CALLER
0x293: V234 = 0x1
0x295: V235 = 0xa0
0x297: V236 = 0x2
0x299: V237 = EXP 0x2 0xa0
0x29a: V238 = SUB 0x10000000000000000000000000000000000000000 0x1
0x29d: V239 = AND 0xffffffffffffffffffffffffffffffffffffffff V233
0x29f: V240 = AND V232 0xffffffffffffffffffffffffffffffffffffffff
0x2a0: V241 = EQ V240 V239
0x2a1: V242 = 0x2a6
0x2a4: JUMPI 0x2a6 V241
---
Entry stack: [V10, 0x117]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x117]

================================

Block 0x2a5
[0x2a5:0x2a5]
---
Predecessors: [0x28e]
Successors: []
---
0x2a5 INVALID
---
0x2a5: INVALID 
---
Entry stack: [V10, 0x117]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x117]

================================

Block 0x2a6
[0x2a6:0x2b3]
---
Predecessors: [0x28e]
Successors: []
---
0x2a6 JUMPDEST
0x2a7 PUSH1 0x0
0x2a9 SLOAD
0x2aa PUSH1 0x1
0x2ac PUSH1 0xa0
0x2ae PUSH1 0x2
0x2b0 EXP
0x2b1 SUB
0x2b2 AND
0x2b3 SELFDESTRUCT
---
0x2a6: JUMPDEST 
0x2a7: V243 = 0x0
0x2a9: V244 = S[0x0]
0x2aa: V245 = 0x1
0x2ac: V246 = 0xa0
0x2ae: V247 = 0x2
0x2b0: V248 = EXP 0x2 0xa0
0x2b1: V249 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b2: V250 = AND 0xffffffffffffffffffffffffffffffffffffffff V244
0x2b3: SELFDESTRUCT V250
---
Entry stack: [V10, 0x117]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x117]

================================

Block 0x2b4
[0x2b4:0x2b4]
---
Predecessors: []
Successors: [0x2b5]
---
0x2b4 JUMPDEST
---
0x2b4: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2b5
[0x2b5:0x2b6]
---
Predecessors: [0x2b4]
Successors: []
Has unresolved jump.
---
0x2b5 JUMPDEST
0x2b6 JUMP
---
0x2b5: JUMPDEST 
0x2b6: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2b7
[0x2b7:0x2cd]
---
Predecessors: [0x14e]
Successors: [0x2ce, 0x2d2]
---
0x2b7 JUMPDEST
0x2b8 PUSH1 0x1
0x2ba SLOAD
0x2bb CALLER
0x2bc PUSH1 0x1
0x2be PUSH1 0xa0
0x2c0 PUSH1 0x2
0x2c2 EXP
0x2c3 SUB
0x2c4 SWAP1
0x2c5 DUP2
0x2c6 AND
0x2c7 SWAP2
0x2c8 AND
0x2c9 EQ
0x2ca PUSH2 0x2d2
0x2cd JUMPI
---
0x2b7: JUMPDEST 
0x2b8: V251 = 0x1
0x2ba: V252 = S[0x1]
0x2bb: V253 = CALLER
0x2bc: V254 = 0x1
0x2be: V255 = 0xa0
0x2c0: V256 = 0x2
0x2c2: V257 = EXP 0x2 0xa0
0x2c3: V258 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c6: V259 = AND 0xffffffffffffffffffffffffffffffffffffffff V253
0x2c8: V260 = AND V252 0xffffffffffffffffffffffffffffffffffffffff
0x2c9: V261 = EQ V260 V259
0x2ca: V262 = 0x2d2
0x2cd: JUMPI 0x2d2 V261
---
Entry stack: [V10, 0x117]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x117]

================================

Block 0x2ce
[0x2ce:0x2d1]
---
Predecessors: [0x2b7]
Successors: []
---
0x2ce PUSH1 0x0
0x2d0 DUP1
0x2d1 REVERT
---
0x2ce: V263 = 0x0
0x2d1: REVERT 0x0 0x0
---
Entry stack: [V10, 0x117]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x117]

================================

Block 0x2d2
[0x2d2:0x35c]
---
Predecessors: [0x2b7]
Successors: [0x35d]
---
0x2d2 JUMPDEST
0x2d3 PUSH1 0x0
0x2d5 SLOAD
0x2d6 PUSH1 0x1
0x2d8 SLOAD
0x2d9 PUSH32 0x343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a
0x2fa SWAP2
0x2fb PUSH1 0x1
0x2fd PUSH1 0xa0
0x2ff PUSH1 0x2
0x301 EXP
0x302 SUB
0x303 SWAP1
0x304 DUP2
0x305 AND
0x306 SWAP2
0x307 AND
0x308 PUSH1 0x40
0x30a MLOAD
0x30b PUSH1 0x1
0x30d PUSH1 0xa0
0x30f PUSH1 0x2
0x311 EXP
0x312 SUB
0x313 SWAP3
0x314 DUP4
0x315 AND
0x316 DUP2
0x317 MSTORE
0x318 SWAP2
0x319 AND
0x31a PUSH1 0x20
0x31c DUP3
0x31d ADD
0x31e MSTORE
0x31f PUSH1 0x40
0x321 SWAP1
0x322 DUP2
0x323 ADD
0x324 SWAP1
0x325 MLOAD
0x326 DUP1
0x327 SWAP2
0x328 SUB
0x329 SWAP1
0x32a LOG1
0x32b PUSH1 0x1
0x32d DUP1
0x32e SLOAD
0x32f PUSH1 0x0
0x331 DUP1
0x332 SLOAD
0x333 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x348 NOT
0x349 SWAP1
0x34a DUP2
0x34b AND
0x34c PUSH1 0x1
0x34e PUSH1 0xa0
0x350 PUSH1 0x2
0x352 EXP
0x353 SUB
0x354 DUP5
0x355 AND
0x356 OR
0x357 SWAP1
0x358 SWAP2
0x359 SSTORE
0x35a AND
0x35b SWAP1
0x35c SSTORE
---
0x2d2: JUMPDEST 
0x2d3: V264 = 0x0
0x2d5: V265 = S[0x0]
0x2d6: V266 = 0x1
0x2d8: V267 = S[0x1]
0x2d9: V268 = 0x343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a
0x2fb: V269 = 0x1
0x2fd: V270 = 0xa0
0x2ff: V271 = 0x2
0x301: V272 = EXP 0x2 0xa0
0x302: V273 = SUB 0x10000000000000000000000000000000000000000 0x1
0x305: V274 = AND 0xffffffffffffffffffffffffffffffffffffffff V265
0x307: V275 = AND V267 0xffffffffffffffffffffffffffffffffffffffff
0x308: V276 = 0x40
0x30a: V277 = M[0x40]
0x30b: V278 = 0x1
0x30d: V279 = 0xa0
0x30f: V280 = 0x2
0x311: V281 = EXP 0x2 0xa0
0x312: V282 = SUB 0x10000000000000000000000000000000000000000 0x1
0x315: V283 = AND 0xffffffffffffffffffffffffffffffffffffffff V274
0x317: M[V277] = V283
0x319: V284 = AND 0xffffffffffffffffffffffffffffffffffffffff V275
0x31a: V285 = 0x20
0x31d: V286 = ADD V277 0x20
0x31e: M[V286] = V284
0x31f: V287 = 0x40
0x323: V288 = ADD 0x40 V277
0x325: V289 = M[0x40]
0x328: V290 = SUB V288 V289
0x32a: LOG V289 V290 0x343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a
0x32b: V291 = 0x1
0x32e: V292 = S[0x1]
0x32f: V293 = 0x0
0x332: V294 = S[0x0]
0x333: V295 = 0xffffffffffffffffffffffffffffffffffffffff
0x348: V296 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x34b: V297 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V294
0x34c: V298 = 0x1
0x34e: V299 = 0xa0
0x350: V300 = 0x2
0x352: V301 = EXP 0x2 0xa0
0x353: V302 = SUB 0x10000000000000000000000000000000000000000 0x1
0x355: V303 = AND V292 0xffffffffffffffffffffffffffffffffffffffff
0x356: V304 = OR V303 V297
0x359: S[0x0] = V304
0x35a: V305 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V292
0x35c: S[0x1] = V305
---
Entry stack: [V10, 0x117]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x117]

================================

Block 0x35d
[0x35d:0x35e]
---
Predecessors: [0x2d2]
Successors: [0x117]
---
0x35d JUMPDEST
0x35e JUMP
---
0x35d: JUMPDEST 
0x35e: JUMP 0x117
---
Entry stack: [V10, 0x117]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x35f
[0x35f:0x36d]
---
Predecessors: [0x163]
Successors: [0x16b]
---
0x35f JUMPDEST
0x360 PUSH1 0x0
0x362 SLOAD
0x363 PUSH1 0x1
0x365 PUSH1 0xa0
0x367 PUSH1 0x2
0x369 EXP
0x36a SUB
0x36b AND
0x36c DUP2
0x36d JUMP
---
0x35f: JUMPDEST 
0x360: V306 = 0x0
0x362: V307 = S[0x0]
0x363: V308 = 0x1
0x365: V309 = 0xa0
0x367: V310 = 0x2
0x369: V311 = EXP 0x2 0xa0
0x36a: V312 = SUB 0x10000000000000000000000000000000000000000 0x1
0x36b: V313 = AND 0xffffffffffffffffffffffffffffffffffffffff V307
0x36d: JUMP 0x16b
---
Entry stack: [V10, 0x16b]
Stack pops: 1
Stack additions: [S0, V313]
Exit stack: [V10, 0x16b, V313]

================================

Block 0x36e
[0x36e:0x37c]
---
Predecessors: [0x192]
Successors: [0x16b]
---
0x36e JUMPDEST
0x36f PUSH1 0x2
0x371 SLOAD
0x372 PUSH1 0x1
0x374 PUSH1 0xa0
0x376 PUSH1 0x2
0x378 EXP
0x379 SUB
0x37a AND
0x37b DUP2
0x37c JUMP
---
0x36e: JUMPDEST 
0x36f: V314 = 0x2
0x371: V315 = S[0x2]
0x372: V316 = 0x1
0x374: V317 = 0xa0
0x376: V318 = 0x2
0x378: V319 = EXP 0x2 0xa0
0x379: V320 = SUB 0x10000000000000000000000000000000000000000 0x1
0x37a: V321 = AND 0xffffffffffffffffffffffffffffffffffffffff V315
0x37c: JUMP 0x16b
---
Entry stack: [V10, 0x16b]
Stack pops: 1
Stack additions: [S0, V321]
Exit stack: [V10, 0x16b, V321]

================================

Block 0x37d
[0x37d:0x38b]
---
Predecessors: [0x1c1]
Successors: [0x16b]
---
0x37d JUMPDEST
0x37e PUSH1 0x1
0x380 SLOAD
0x381 PUSH1 0x1
0x383 PUSH1 0xa0
0x385 PUSH1 0x2
0x387 EXP
0x388 SUB
0x389 AND
0x38a DUP2
0x38b JUMP
---
0x37d: JUMPDEST 
0x37e: V322 = 0x1
0x380: V323 = S[0x1]
0x381: V324 = 0x1
0x383: V325 = 0xa0
0x385: V326 = 0x2
0x387: V327 = EXP 0x2 0xa0
0x388: V328 = SUB 0x10000000000000000000000000000000000000000 0x1
0x389: V329 = AND 0xffffffffffffffffffffffffffffffffffffffff V323
0x38b: JUMP 0x16b
---
Entry stack: [V10, 0x16b]
Stack pops: 1
Stack additions: [S0, V329]
Exit stack: [V10, 0x16b, V329]

================================

Block 0x38c
[0x38c:0x39a]
---
Predecessors: [0x1f0]
Successors: [0x16b]
---
0x38c JUMPDEST
0x38d PUSH1 0x3
0x38f SLOAD
0x390 PUSH1 0x1
0x392 PUSH1 0xa0
0x394 PUSH1 0x2
0x396 EXP
0x397 SUB
0x398 AND
0x399 DUP2
0x39a JUMP
---
0x38c: JUMPDEST 
0x38d: V330 = 0x3
0x38f: V331 = S[0x3]
0x390: V332 = 0x1
0x392: V333 = 0xa0
0x394: V334 = 0x2
0x396: V335 = EXP 0x2 0xa0
0x397: V336 = SUB 0x10000000000000000000000000000000000000000 0x1
0x398: V337 = AND 0xffffffffffffffffffffffffffffffffffffffff V331
0x39a: JUMP 0x16b
---
Entry stack: [V10, 0x16b]
Stack pops: 1
Stack additions: [S0, V337]
Exit stack: [V10, 0x16b, V337]

================================

Block 0x39b
[0x39b:0x3b1]
---
Predecessors: [0x21f]
Successors: [0x3b2, 0x3b3]
---
0x39b JUMPDEST
0x39c PUSH1 0x0
0x39e SLOAD
0x39f CALLER
0x3a0 PUSH1 0x1
0x3a2 PUSH1 0xa0
0x3a4 PUSH1 0x2
0x3a6 EXP
0x3a7 SUB
0x3a8 SWAP1
0x3a9 DUP2
0x3aa AND
0x3ab SWAP2
0x3ac AND
0x3ad EQ
0x3ae PUSH2 0x3b3
0x3b1 JUMPI
---
0x39b: JUMPDEST 
0x39c: V338 = 0x0
0x39e: V339 = S[0x0]
0x39f: V340 = CALLER
0x3a0: V341 = 0x1
0x3a2: V342 = 0xa0
0x3a4: V343 = 0x2
0x3a6: V344 = EXP 0x2 0xa0
0x3a7: V345 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3aa: V346 = AND 0xffffffffffffffffffffffffffffffffffffffff V340
0x3ac: V347 = AND V339 0xffffffffffffffffffffffffffffffffffffffff
0x3ad: V348 = EQ V347 V346
0x3ae: V349 = 0x3b3
0x3b1: JUMPI 0x3b3 V348
---
Entry stack: [V10, 0x117, V188]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x117, V188]

================================

Block 0x3b2
[0x3b2:0x3b2]
---
Predecessors: [0x39b]
Successors: []
---
0x3b2 INVALID
---
0x3b2: INVALID 
---
Entry stack: [V10, 0x117, V188]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x117, V188]

================================

Block 0x3b3
[0x3b3:0x3c9]
---
Predecessors: [0x39b]
Successors: [0x3ca, 0x3ce]
---
0x3b3 JUMPDEST
0x3b4 PUSH1 0x0
0x3b6 SLOAD
0x3b7 PUSH1 0x1
0x3b9 PUSH1 0xa0
0x3bb PUSH1 0x2
0x3bd EXP
0x3be SUB
0x3bf DUP3
0x3c0 DUP2
0x3c1 AND
0x3c2 SWAP2
0x3c3 AND
0x3c4 EQ
0x3c5 ISZERO
0x3c6 PUSH2 0x3ce
0x3c9 JUMPI
---
0x3b3: JUMPDEST 
0x3b4: V350 = 0x0
0x3b6: V351 = S[0x0]
0x3b7: V352 = 0x1
0x3b9: V353 = 0xa0
0x3bb: V354 = 0x2
0x3bd: V355 = EXP 0x2 0xa0
0x3be: V356 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c1: V357 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x3c3: V358 = AND V351 0xffffffffffffffffffffffffffffffffffffffff
0x3c4: V359 = EQ V358 V357
0x3c5: V360 = ISZERO V359
0x3c6: V361 = 0x3ce
0x3c9: JUMPI 0x3ce V360
---
Entry stack: [V10, 0x117, V188]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x117, V188]

================================

Block 0x3ca
[0x3ca:0x3cd]
---
Predecessors: [0x3b3]
Successors: []
---
0x3ca PUSH1 0x0
0x3cc DUP1
0x3cd REVERT
---
0x3ca: V362 = 0x0
0x3cd: REVERT 0x0 0x0
---
Entry stack: [V10, 0x117, V188]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x117, V188]

================================

Block 0x3ce
[0x3ce:0x3f6]
---
Predecessors: [0x3b3]
Successors: [0x3f7]
---
0x3ce JUMPDEST
0x3cf PUSH1 0x1
0x3d1 DUP1
0x3d2 SLOAD
0x3d3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e8 NOT
0x3e9 AND
0x3ea PUSH1 0x1
0x3ec PUSH1 0xa0
0x3ee PUSH1 0x2
0x3f0 EXP
0x3f1 SUB
0x3f2 DUP4
0x3f3 AND
0x3f4 OR
0x3f5 SWAP1
0x3f6 SSTORE
---
0x3ce: JUMPDEST 
0x3cf: V363 = 0x1
0x3d2: V364 = S[0x1]
0x3d3: V365 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e8: V366 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3e9: V367 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V364
0x3ea: V368 = 0x1
0x3ec: V369 = 0xa0
0x3ee: V370 = 0x2
0x3f0: V371 = EXP 0x2 0xa0
0x3f1: V372 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f3: V373 = AND V188 0xffffffffffffffffffffffffffffffffffffffff
0x3f4: V374 = OR V373 V367
0x3f6: S[0x1] = V374
---
Entry stack: [V10, 0x117, V188]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x117, V188]

================================

Block 0x3f7
[0x3f7:0x3f7]
---
Predecessors: [0x3ce]
Successors: [0x3f8]
---
0x3f7 JUMPDEST
---
0x3f7: JUMPDEST 
---
Entry stack: [V10, 0x117, V188]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x117, V188]

================================

Block 0x3f8
[0x3f8:0x3fa]
---
Predecessors: [0x3f7]
Successors: [0x117]
---
0x3f8 JUMPDEST
0x3f9 POP
0x3fa JUMP
---
0x3f8: JUMPDEST 
0x3fa: JUMP 0x117
---
Entry stack: [V10, 0x117, V188]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x3fb
[0x3fb:0x40a]
---
Predecessors: []
Successors: [0x40b]
---
0x3fb STOP
0x3fc LOG1
0x3fd PUSH6 0x627a7a723058
0x404 SHA3
0x405 LOG0
0x406 MISSING 0xcd
0x407 SHR
0x408 STATICCALL
0x409 SWAP9
0x40a STATICCALL
---
0x3fb: STOP 
0x3fc: LOG S0 S1 S2
0x3fd: V375 = 0x627a7a723058
0x404: V376 = SHA3 0x627a7a723058 S3
0x405: LOG V376 S4
0x406: MISSING 0xcd
0x407: V377 = SHR S0 S1
0x408: V378 = STATICCALL V377 S2 S3 S4 S5 S6
0x40a: V379 = STATICCALL S15 S7 S8 S9 S10 S11
---
Entry stack: []
Stack pops: 0
Stack additions: [V379, S12, S13, S14, V378]
Exit stack: []

================================

Block 0x40b
[0x40b:0x43a]
---
Predecessors: [0x3fb]
Successors: []
---
0x40b JUMPDEST
0x40c MISSING 0x21
0x40d ISZERO
0x40e RETURN
0x40f MISSING 0xc0
0x410 MISSING 0xdb
0x411 MISSING 0x4b
0x412 MISSING 0xf6
0x413 MISSING 0xcd
0x414 SLT
0x415 MISSING 0xec
0x416 XOR
0x417 POP
0x418 MISSING 0x46
0x419 MISSING 0x27
0x41a SWAP14
0x41b PUSH31 0x187ab5f5720ec71c960029
---
0x40b: JUMPDEST 
0x40c: MISSING 0x21
0x40d: V380 = ISZERO S0
0x40e: RETURN V380 S1
0x40f: MISSING 0xc0
0x410: MISSING 0xdb
0x411: MISSING 0x4b
0x412: MISSING 0xf6
0x413: MISSING 0xcd
0x414: V381 = SLT S0 S1
0x415: MISSING 0xec
0x416: V382 = XOR S0 S1
0x418: MISSING 0x46
0x419: MISSING 0x27
0x41b: V383 = 0x187ab5f5720ec71c960029
---
Entry stack: [V378, S3, S2, S1, V379]
Stack pops: 0
Stack additions: [V381, 0x187ab5f5720ec71c960029, S14, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0x119
Exit block: 0x117
Body: 0x117, 0x119, 0x120, 0x124, 0x235, 0x24c, 0x24d, 0x286, 0x28a, 0x28b, 0x28c

Function 1:
Public function signature: 0x41c0e1b5
Entry block: 0x12e
Exit block: 0x2a5
Body: 0x12e, 0x135, 0x139, 0x28e, 0x2a5, 0x2a6

Function 2:
Public function signature: 0x79ba5097
Entry block: 0x143
Exit block: 0x117
Body: 0x117, 0x143, 0x14a, 0x14e, 0x2b7, 0x2ce, 0x2d2, 0x35d

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0x158
Exit block: 0x16b
Body: 0x158, 0x15f, 0x163, 0x16b, 0x35f

Function 4:
Public function signature: 0xb8363c8b
Entry block: 0x187
Exit block: 0x16b
Body: 0x16b, 0x187, 0x18e, 0x192, 0x36e

Function 5:
Public function signature: 0xd4ee1d90
Entry block: 0x1b6
Exit block: 0x16b
Body: 0x16b, 0x1b6, 0x1bd, 0x1c1, 0x37d

Function 6:
Public function signature: 0xd7c31bf6
Entry block: 0x1e5
Exit block: 0x16b
Body: 0x16b, 0x1e5, 0x1ec, 0x1f0, 0x38c

Function 7:
Public function signature: 0xf2fde38b
Entry block: 0x214
Exit block: 0x117
Body: 0x117, 0x214, 0x21b, 0x21f, 0x39b, 0x3b2, 0x3b3, 0x3ca, 0x3ce, 0x3f7, 0x3f8

Function 8:
Public fallback function
Entry block: 0x8b
Exit block: 0x117
Body: 0x8b, 0x8c, 0x95, 0x99, 0x100, 0x104, 0x10d, 0x111, 0x117

