Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x8d]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x8d
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x8d
0xc: JUMPI 0x8d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x8f]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x1aeaaae8
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x8f
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x1aeaaae8
0x3b: V13 = EQ V11 0x1aeaaae8
0x3c: V14 = 0x8f
0x3f: JUMPI 0x8f V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xa9]
---
0x40 DUP1
0x41 PUSH4 0x2e4d59c4
0x46 EQ
0x47 PUSH2 0xa9
0x4a JUMPI
---
0x41: V15 = 0x2e4d59c4
0x46: V16 = EQ 0x2e4d59c4 V11
0x47: V17 = 0xa9
0x4a: JUMPI 0xa9 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xdc]
---
0x4b DUP1
0x4c PUSH4 0x3ccfd60b
0x51 EQ
0x52 PUSH2 0xdc
0x55 JUMPI
---
0x4c: V18 = 0x3ccfd60b
0x51: V19 = EQ 0x3ccfd60b V11
0x52: V20 = 0xdc
0x55: JUMPI 0xdc V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xe4]
---
0x56 DUP1
0x57 PUSH4 0x49649fbf
0x5c EQ
0x5d PUSH2 0xe4
0x60 JUMPI
---
0x57: V21 = 0x49649fbf
0x5c: V22 = EQ 0x49649fbf V11
0x5d: V23 = 0xe4
0x60: JUMPI 0xe4 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0xf9]
---
0x61 DUP1
0x62 PUSH4 0x50883b2d
0x67 EQ
0x68 PUSH2 0xf9
0x6b JUMPI
---
0x62: V24 = 0x50883b2d
0x67: V25 = EQ 0x50883b2d V11
0x68: V26 = 0xf9
0x6b: JUMPI 0xf9 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x187]
---
0x6c DUP1
0x6d PUSH4 0x7fcff511
0x72 EQ
0x73 PUSH2 0x187
0x76 JUMPI
---
0x6d: V27 = 0x7fcff511
0x72: V28 = EQ 0x7fcff511 V11
0x73: V29 = 0x187
0x76: JUMPI 0x187 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x215]
---
0x77 DUP1
0x78 PUSH4 0x8da5cb5b
0x7d EQ
0x7e PUSH2 0x215
0x81 JUMPI
---
0x78: V30 = 0x8da5cb5b
0x7d: V31 = EQ 0x8da5cb5b V11
0x7e: V32 = 0x215
0x81: JUMPI 0x215 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x246]
---
0x82 DUP1
0x83 PUSH4 0xf2fde38b
0x88 EQ
0x89 PUSH2 0x246
0x8c JUMPI
---
0x83: V33 = 0xf2fde38b
0x88: V34 = EQ 0xf2fde38b V11
0x89: V35 = 0x246
0x8c: JUMPI 0x246 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x8e]
---
Predecessors: [0x0, 0x82, 0x2b7, 0x431, 0x4fb, 0x5b1, 0x716]
Successors: []
---
0x8d JUMPDEST
0x8e STOP
---
0x8d: JUMPDEST 
0x8e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x8f
[0x8f:0x96]
---
Predecessors: [0xd]
Successors: [0x97, 0x9b]
---
0x8f JUMPDEST
0x90 CALLVALUE
0x91 DUP1
0x92 ISZERO
0x93 PUSH2 0x9b
0x96 JUMPI
---
0x8f: JUMPDEST 
0x90: V36 = CALLVALUE
0x92: V37 = ISZERO V36
0x93: V38 = 0x9b
0x96: JUMPI 0x9b V37
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V36]
Exit stack: [V11, V36]

================================

Block 0x97
[0x97:0x9a]
---
Predecessors: [0x8f]
Successors: []
---
0x97 PUSH1 0x0
0x99 DUP1
0x9a REVERT
---
0x97: V39 = 0x0
0x9a: REVERT 0x0 0x0
---
Entry stack: [V11, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V36]

================================

Block 0x9b
[0x9b:0xa8]
---
Predecessors: [0x8f]
Successors: [0x267]
---
0x9b JUMPDEST
0x9c POP
0x9d PUSH2 0x8d
0xa0 PUSH1 0x4
0xa2 CALLDATALOAD
0xa3 ISZERO
0xa4 ISZERO
0xa5 PUSH2 0x267
0xa8 JUMP
---
0x9b: JUMPDEST 
0x9d: V40 = 0x8d
0xa0: V41 = 0x4
0xa2: V42 = CALLDATALOAD 0x4
0xa3: V43 = ISZERO V42
0xa4: V44 = ISZERO V43
0xa5: V45 = 0x267
0xa8: JUMP 0x267
---
Entry stack: [V11, V36]
Stack pops: 1
Stack additions: [0x8d, V44]
Exit stack: [V11, 0x8d, V44]

================================

Block 0xa9
[0xa9:0xb0]
---
Predecessors: [0x40]
Successors: [0xb1, 0xb5]
---
0xa9 JUMPDEST
0xaa CALLVALUE
0xab DUP1
0xac ISZERO
0xad PUSH2 0xb5
0xb0 JUMPI
---
0xa9: JUMPDEST 
0xaa: V46 = CALLVALUE
0xac: V47 = ISZERO V46
0xad: V48 = 0xb5
0xb0: JUMPI 0xb5 V47
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V46]
Exit stack: [V11, V46]

================================

Block 0xb1
[0xb1:0xb4]
---
Predecessors: [0xa9]
Successors: []
---
0xb1 PUSH1 0x0
0xb3 DUP1
0xb4 REVERT
---
0xb1: V49 = 0x0
0xb4: REVERT 0x0 0x0
---
Entry stack: [V11, V46]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V46]

================================

Block 0xb5
[0xb5:0xc9]
---
Predecessors: [0xa9]
Successors: [0x2f7]
---
0xb5 JUMPDEST
0xb6 POP
0xb7 PUSH2 0xca
0xba PUSH1 0x1
0xbc PUSH1 0xa0
0xbe PUSH1 0x2
0xc0 EXP
0xc1 SUB
0xc2 PUSH1 0x4
0xc4 CALLDATALOAD
0xc5 AND
0xc6 PUSH2 0x2f7
0xc9 JUMP
---
0xb5: JUMPDEST 
0xb7: V50 = 0xca
0xba: V51 = 0x1
0xbc: V52 = 0xa0
0xbe: V53 = 0x2
0xc0: V54 = EXP 0x2 0xa0
0xc1: V55 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc2: V56 = 0x4
0xc4: V57 = CALLDATALOAD 0x4
0xc5: V58 = AND V57 0xffffffffffffffffffffffffffffffffffffffff
0xc6: V59 = 0x2f7
0xc9: JUMP 0x2f7
---
Entry stack: [V11, V46]
Stack pops: 1
Stack additions: [0xca, V58]
Exit stack: [V11, 0xca, V58]

================================

Block 0xca
[0xca:0xdb]
---
Predecessors: [0x2f7]
Successors: []
---
0xca JUMPDEST
0xcb PUSH1 0x40
0xcd DUP1
0xce MLOAD
0xcf SWAP2
0xd0 DUP3
0xd1 MSTORE
0xd2 MLOAD
0xd3 SWAP1
0xd4 DUP2
0xd5 SWAP1
0xd6 SUB
0xd7 PUSH1 0x20
0xd9 ADD
0xda SWAP1
0xdb RETURN
---
0xca: JUMPDEST 
0xcb: V60 = 0x40
0xce: V61 = M[0x40]
0xd1: M[V61] = V226
0xd2: V62 = M[0x40]
0xd6: V63 = SUB V61 V62
0xd7: V64 = 0x20
0xd9: V65 = ADD 0x20 V63
0xdb: RETURN V62 V65
---
Entry stack: [V11, V226]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xdc
[0xdc:0xe3]
---
Predecessors: [0x4b]
Successors: [0x312]
---
0xdc JUMPDEST
0xdd PUSH2 0x8d
0xe0 PUSH2 0x312
0xe3 JUMP
---
0xdc: JUMPDEST 
0xdd: V66 = 0x8d
0xe0: V67 = 0x312
0xe3: JUMP 0x312
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x8d]
Exit stack: [V11, 0x8d]

================================

Block 0xe4
[0xe4:0xeb]
---
Predecessors: [0x56]
Successors: [0xec, 0xf0]
---
0xe4 JUMPDEST
0xe5 CALLVALUE
0xe6 DUP1
0xe7 ISZERO
0xe8 PUSH2 0xf0
0xeb JUMPI
---
0xe4: JUMPDEST 
0xe5: V68 = CALLVALUE
0xe7: V69 = ISZERO V68
0xe8: V70 = 0xf0
0xeb: JUMPI 0xf0 V69
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V68]
Exit stack: [V11, V68]

================================

Block 0xec
[0xec:0xef]
---
Predecessors: [0xe4]
Successors: []
---
0xec PUSH1 0x0
0xee DUP1
0xef REVERT
---
0xec: V71 = 0x0
0xef: REVERT 0x0 0x0
---
Entry stack: [V11, V68]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V68]

================================

Block 0xf0
[0xf0:0xf8]
---
Predecessors: [0xe4]
Successors: [0x470]
---
0xf0 JUMPDEST
0xf1 POP
0xf2 PUSH2 0x8d
0xf5 PUSH2 0x470
0xf8 JUMP
---
0xf0: JUMPDEST 
0xf2: V72 = 0x8d
0xf5: V73 = 0x470
0xf8: JUMP 0x470
---
Entry stack: [V11, V68]
Stack pops: 1
Stack additions: [0x8d]
Exit stack: [V11, 0x8d]

================================

Block 0xf9
[0xf9:0x100]
---
Predecessors: [0x61]
Successors: [0x101, 0x105]
---
0xf9 JUMPDEST
0xfa CALLVALUE
0xfb DUP1
0xfc ISZERO
0xfd PUSH2 0x105
0x100 JUMPI
---
0xf9: JUMPDEST 
0xfa: V74 = CALLVALUE
0xfc: V75 = ISZERO V74
0xfd: V76 = 0x105
0x100: JUMPI 0x105 V75
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V74]
Exit stack: [V11, V74]

================================

Block 0x101
[0x101:0x104]
---
Predecessors: [0xf9]
Successors: []
---
0x101 PUSH1 0x0
0x103 DUP1
0x104 REVERT
---
0x101: V77 = 0x0
0x104: REVERT 0x0 0x0
---
Entry stack: [V11, V74]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V74]

================================

Block 0x105
[0x105:0x186]
---
Predecessors: [0xf9]
Successors: [0x4fe]
---
0x105 JUMPDEST
0x106 POP
0x107 PUSH1 0x40
0x109 DUP1
0x10a MLOAD
0x10b PUSH1 0x20
0x10d PUSH1 0x4
0x10f DUP1
0x110 CALLDATALOAD
0x111 DUP1
0x112 DUP3
0x113 ADD
0x114 CALLDATALOAD
0x115 DUP4
0x116 DUP2
0x117 MUL
0x118 DUP1
0x119 DUP7
0x11a ADD
0x11b DUP6
0x11c ADD
0x11d SWAP1
0x11e SWAP7
0x11f MSTORE
0x120 DUP1
0x121 DUP6
0x122 MSTORE
0x123 PUSH2 0x8d
0x126 SWAP6
0x127 CALLDATASIZE
0x128 SWAP6
0x129 SWAP4
0x12a SWAP5
0x12b PUSH1 0x24
0x12d SWAP5
0x12e SWAP4
0x12f DUP6
0x130 ADD
0x131 SWAP3
0x132 SWAP2
0x133 DUP3
0x134 SWAP2
0x135 DUP6
0x136 ADD
0x137 SWAP1
0x138 DUP5
0x139 SWAP1
0x13a DUP1
0x13b DUP3
0x13c DUP5
0x13d CALLDATACOPY
0x13e POP
0x13f POP
0x140 PUSH1 0x40
0x142 DUP1
0x143 MLOAD
0x144 DUP8
0x145 CALLDATALOAD
0x146 DUP10
0x147 ADD
0x148 DUP1
0x149 CALLDATALOAD
0x14a PUSH1 0x20
0x14c DUP2
0x14d DUP2
0x14e MUL
0x14f DUP5
0x150 DUP2
0x151 ADD
0x152 DUP3
0x153 ADD
0x154 SWAP1
0x155 SWAP6
0x156 MSTORE
0x157 DUP2
0x158 DUP5
0x159 MSTORE
0x15a SWAP9
0x15b SWAP12
0x15c SWAP11
0x15d SWAP10
0x15e DUP10
0x15f ADD
0x160 SWAP9
0x161 SWAP3
0x162 SWAP8
0x163 POP
0x164 SWAP1
0x165 DUP3
0x166 ADD
0x167 SWAP6
0x168 POP
0x169 SWAP4
0x16a POP
0x16b DUP4
0x16c SWAP3
0x16d POP
0x16e DUP6
0x16f ADD
0x170 SWAP1
0x171 DUP5
0x172 SWAP1
0x173 DUP1
0x174 DUP3
0x175 DUP5
0x176 CALLDATACOPY
0x177 POP
0x178 SWAP5
0x179 SWAP8
0x17a POP
0x17b PUSH2 0x4fe
0x17e SWAP7
0x17f POP
0x180 POP
0x181 POP
0x182 POP
0x183 POP
0x184 POP
0x185 POP
0x186 JUMP
---
0x105: JUMPDEST 
0x107: V78 = 0x40
0x10a: V79 = M[0x40]
0x10b: V80 = 0x20
0x10d: V81 = 0x4
0x110: V82 = CALLDATALOAD 0x4
0x113: V83 = ADD 0x4 V82
0x114: V84 = CALLDATALOAD V83
0x117: V85 = MUL V84 0x20
0x11a: V86 = ADD V79 V85
0x11c: V87 = ADD 0x20 V86
0x11f: M[0x40] = V87
0x122: M[V79] = V84
0x123: V88 = 0x8d
0x127: V89 = CALLDATASIZE
0x12b: V90 = 0x24
0x130: V91 = ADD 0x24 V82
0x136: V92 = ADD V79 0x20
0x13d: CALLDATACOPY V92 V91 V85
0x140: V93 = 0x40
0x143: V94 = M[0x40]
0x145: V95 = CALLDATALOAD 0x24
0x147: V96 = ADD 0x4 V95
0x149: V97 = CALLDATALOAD V96
0x14a: V98 = 0x20
0x14e: V99 = MUL 0x20 V97
0x151: V100 = ADD V99 V94
0x153: V101 = ADD 0x20 V100
0x156: M[0x40] = V101
0x159: M[V94] = V97
0x15f: V102 = ADD 0x20 0x24
0x166: V103 = ADD 0x20 V96
0x16f: V104 = ADD V94 0x20
0x176: CALLDATACOPY V104 V103 V99
0x17b: V105 = 0x4fe
0x186: JUMP 0x4fe
---
Entry stack: [V11, V74]
Stack pops: 1
Stack additions: [0x8d, V79, V94]
Exit stack: [V11, 0x8d, V79, V94]

================================

Block 0x187
[0x187:0x18e]
---
Predecessors: [0x6c]
Successors: [0x18f, 0x193]
---
0x187 JUMPDEST
0x188 CALLVALUE
0x189 DUP1
0x18a ISZERO
0x18b PUSH2 0x193
0x18e JUMPI
---
0x187: JUMPDEST 
0x188: V106 = CALLVALUE
0x18a: V107 = ISZERO V106
0x18b: V108 = 0x193
0x18e: JUMPI 0x193 V107
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V106]
Exit stack: [V11, V106]

================================

Block 0x18f
[0x18f:0x192]
---
Predecessors: [0x187]
Successors: []
---
0x18f PUSH1 0x0
0x191 DUP1
0x192 REVERT
---
0x18f: V109 = 0x0
0x192: REVERT 0x0 0x0
---
Entry stack: [V11, V106]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V106]

================================

Block 0x193
[0x193:0x214]
---
Predecessors: [0x187]
Successors: [0x5b6]
---
0x193 JUMPDEST
0x194 POP
0x195 PUSH1 0x40
0x197 DUP1
0x198 MLOAD
0x199 PUSH1 0x20
0x19b PUSH1 0x4
0x19d DUP1
0x19e CALLDATALOAD
0x19f DUP1
0x1a0 DUP3
0x1a1 ADD
0x1a2 CALLDATALOAD
0x1a3 DUP4
0x1a4 DUP2
0x1a5 MUL
0x1a6 DUP1
0x1a7 DUP7
0x1a8 ADD
0x1a9 DUP6
0x1aa ADD
0x1ab SWAP1
0x1ac SWAP7
0x1ad MSTORE
0x1ae DUP1
0x1af DUP6
0x1b0 MSTORE
0x1b1 PUSH2 0x8d
0x1b4 SWAP6
0x1b5 CALLDATASIZE
0x1b6 SWAP6
0x1b7 SWAP4
0x1b8 SWAP5
0x1b9 PUSH1 0x24
0x1bb SWAP5
0x1bc SWAP4
0x1bd DUP6
0x1be ADD
0x1bf SWAP3
0x1c0 SWAP2
0x1c1 DUP3
0x1c2 SWAP2
0x1c3 DUP6
0x1c4 ADD
0x1c5 SWAP1
0x1c6 DUP5
0x1c7 SWAP1
0x1c8 DUP1
0x1c9 DUP3
0x1ca DUP5
0x1cb CALLDATACOPY
0x1cc POP
0x1cd POP
0x1ce PUSH1 0x40
0x1d0 DUP1
0x1d1 MLOAD
0x1d2 DUP8
0x1d3 CALLDATALOAD
0x1d4 DUP10
0x1d5 ADD
0x1d6 DUP1
0x1d7 CALLDATALOAD
0x1d8 PUSH1 0x20
0x1da DUP2
0x1db DUP2
0x1dc MUL
0x1dd DUP5
0x1de DUP2
0x1df ADD
0x1e0 DUP3
0x1e1 ADD
0x1e2 SWAP1
0x1e3 SWAP6
0x1e4 MSTORE
0x1e5 DUP2
0x1e6 DUP5
0x1e7 MSTORE
0x1e8 SWAP9
0x1e9 SWAP12
0x1ea SWAP11
0x1eb SWAP10
0x1ec DUP10
0x1ed ADD
0x1ee SWAP9
0x1ef SWAP3
0x1f0 SWAP8
0x1f1 POP
0x1f2 SWAP1
0x1f3 DUP3
0x1f4 ADD
0x1f5 SWAP6
0x1f6 POP
0x1f7 SWAP4
0x1f8 POP
0x1f9 DUP4
0x1fa SWAP3
0x1fb POP
0x1fc DUP6
0x1fd ADD
0x1fe SWAP1
0x1ff DUP5
0x200 SWAP1
0x201 DUP1
0x202 DUP3
0x203 DUP5
0x204 CALLDATACOPY
0x205 POP
0x206 SWAP5
0x207 SWAP8
0x208 POP
0x209 PUSH2 0x5b6
0x20c SWAP7
0x20d POP
0x20e POP
0x20f POP
0x210 POP
0x211 POP
0x212 POP
0x213 POP
0x214 JUMP
---
0x193: JUMPDEST 
0x195: V110 = 0x40
0x198: V111 = M[0x40]
0x199: V112 = 0x20
0x19b: V113 = 0x4
0x19e: V114 = CALLDATALOAD 0x4
0x1a1: V115 = ADD 0x4 V114
0x1a2: V116 = CALLDATALOAD V115
0x1a5: V117 = MUL V116 0x20
0x1a8: V118 = ADD V111 V117
0x1aa: V119 = ADD 0x20 V118
0x1ad: M[0x40] = V119
0x1b0: M[V111] = V116
0x1b1: V120 = 0x8d
0x1b5: V121 = CALLDATASIZE
0x1b9: V122 = 0x24
0x1be: V123 = ADD 0x24 V114
0x1c4: V124 = ADD V111 0x20
0x1cb: CALLDATACOPY V124 V123 V117
0x1ce: V125 = 0x40
0x1d1: V126 = M[0x40]
0x1d3: V127 = CALLDATALOAD 0x24
0x1d5: V128 = ADD 0x4 V127
0x1d7: V129 = CALLDATALOAD V128
0x1d8: V130 = 0x20
0x1dc: V131 = MUL 0x20 V129
0x1df: V132 = ADD V131 V126
0x1e1: V133 = ADD 0x20 V132
0x1e4: M[0x40] = V133
0x1e7: M[V126] = V129
0x1ed: V134 = ADD 0x20 0x24
0x1f4: V135 = ADD 0x20 V128
0x1fd: V136 = ADD V126 0x20
0x204: CALLDATACOPY V136 V135 V131
0x209: V137 = 0x5b6
0x214: JUMP 0x5b6
---
Entry stack: [V11, V106]
Stack pops: 1
Stack additions: [0x8d, V111, V126]
Exit stack: [V11, 0x8d, V111, V126]

================================

Block 0x215
[0x215:0x21c]
---
Predecessors: [0x77]
Successors: [0x21d, 0x221]
---
0x215 JUMPDEST
0x216 CALLVALUE
0x217 DUP1
0x218 ISZERO
0x219 PUSH2 0x221
0x21c JUMPI
---
0x215: JUMPDEST 
0x216: V138 = CALLVALUE
0x218: V139 = ISZERO V138
0x219: V140 = 0x221
0x21c: JUMPI 0x221 V139
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V138]
Exit stack: [V11, V138]

================================

Block 0x21d
[0x21d:0x220]
---
Predecessors: [0x215]
Successors: []
---
0x21d PUSH1 0x0
0x21f DUP1
0x220 REVERT
---
0x21d: V141 = 0x0
0x220: REVERT 0x0 0x0
---
Entry stack: [V11, V138]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V138]

================================

Block 0x221
[0x221:0x229]
---
Predecessors: [0x215]
Successors: [0x6a7]
---
0x221 JUMPDEST
0x222 POP
0x223 PUSH2 0x22a
0x226 PUSH2 0x6a7
0x229 JUMP
---
0x221: JUMPDEST 
0x223: V142 = 0x22a
0x226: V143 = 0x6a7
0x229: JUMP 0x6a7
---
Entry stack: [V11, V138]
Stack pops: 1
Stack additions: [0x22a]
Exit stack: [V11, 0x22a]

================================

Block 0x22a
[0x22a:0x245]
---
Predecessors: [0x6a7]
Successors: []
---
0x22a JUMPDEST
0x22b PUSH1 0x40
0x22d DUP1
0x22e MLOAD
0x22f PUSH1 0x1
0x231 PUSH1 0xa0
0x233 PUSH1 0x2
0x235 EXP
0x236 SUB
0x237 SWAP1
0x238 SWAP3
0x239 AND
0x23a DUP3
0x23b MSTORE
0x23c MLOAD
0x23d SWAP1
0x23e DUP2
0x23f SWAP1
0x240 SUB
0x241 PUSH1 0x20
0x243 ADD
0x244 SWAP1
0x245 RETURN
---
0x22a: JUMPDEST 
0x22b: V144 = 0x40
0x22e: V145 = M[0x40]
0x22f: V146 = 0x1
0x231: V147 = 0xa0
0x233: V148 = 0x2
0x235: V149 = EXP 0x2 0xa0
0x236: V150 = SUB 0x10000000000000000000000000000000000000000 0x1
0x239: V151 = AND V567 0xffffffffffffffffffffffffffffffffffffffff
0x23b: M[V145] = V151
0x23c: V152 = M[0x40]
0x240: V153 = SUB V145 V152
0x241: V154 = 0x20
0x243: V155 = ADD 0x20 V153
0x245: RETURN V152 V155
---
Entry stack: [V11, 0x22a, V567]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x22a]

================================

Block 0x246
[0x246:0x24d]
---
Predecessors: [0x82]
Successors: [0x24e, 0x252]
---
0x246 JUMPDEST
0x247 CALLVALUE
0x248 DUP1
0x249 ISZERO
0x24a PUSH2 0x252
0x24d JUMPI
---
0x246: JUMPDEST 
0x247: V156 = CALLVALUE
0x249: V157 = ISZERO V156
0x24a: V158 = 0x252
0x24d: JUMPI 0x252 V157
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V156]
Exit stack: [V11, V156]

================================

Block 0x24e
[0x24e:0x251]
---
Predecessors: [0x246]
Successors: []
---
0x24e PUSH1 0x0
0x250 DUP1
0x251 REVERT
---
0x24e: V159 = 0x0
0x251: REVERT 0x0 0x0
---
Entry stack: [V11, V156]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V156]

================================

Block 0x252
[0x252:0x266]
---
Predecessors: [0x246]
Successors: [0x6b6]
---
0x252 JUMPDEST
0x253 POP
0x254 PUSH2 0x8d
0x257 PUSH1 0x1
0x259 PUSH1 0xa0
0x25b PUSH1 0x2
0x25d EXP
0x25e SUB
0x25f PUSH1 0x4
0x261 CALLDATALOAD
0x262 AND
0x263 PUSH2 0x6b6
0x266 JUMP
---
0x252: JUMPDEST 
0x254: V160 = 0x8d
0x257: V161 = 0x1
0x259: V162 = 0xa0
0x25b: V163 = 0x2
0x25d: V164 = EXP 0x2 0xa0
0x25e: V165 = SUB 0x10000000000000000000000000000000000000000 0x1
0x25f: V166 = 0x4
0x261: V167 = CALLDATALOAD 0x4
0x262: V168 = AND V167 0xffffffffffffffffffffffffffffffffffffffff
0x263: V169 = 0x6b6
0x266: JUMP 0x6b6
---
Entry stack: [V11, V156]
Stack pops: 1
Stack additions: [0x8d, V168]
Exit stack: [V11, 0x8d, V168]

================================

Block 0x267
[0x267:0x279]
---
Predecessors: [0x9b]
Successors: [0x27a, 0x2b7]
---
0x267 JUMPDEST
0x268 PUSH1 0x0
0x26a SLOAD
0x26b PUSH1 0x1
0x26d PUSH1 0xa0
0x26f PUSH1 0x2
0x271 EXP
0x272 SUB
0x273 AND
0x274 CALLER
0x275 EQ
0x276 PUSH2 0x2b7
0x279 JUMPI
---
0x267: JUMPDEST 
0x268: V170 = 0x0
0x26a: V171 = S[0x0]
0x26b: V172 = 0x1
0x26d: V173 = 0xa0
0x26f: V174 = 0x2
0x271: V175 = EXP 0x2 0xa0
0x272: V176 = SUB 0x10000000000000000000000000000000000000000 0x1
0x273: V177 = AND 0xffffffffffffffffffffffffffffffffffffffff V171
0x274: V178 = CALLER
0x275: V179 = EQ V178 V177
0x276: V180 = 0x2b7
0x279: JUMPI 0x2b7 V179
---
Entry stack: [V11, 0x8d, V44]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V44]

================================

Block 0x27a
[0x27a:0x2b6]
---
Predecessors: [0x267]
Successors: []
---
0x27a PUSH1 0x40
0x27c DUP1
0x27d MLOAD
0x27e PUSH1 0xe5
0x280 PUSH1 0x2
0x282 EXP
0x283 PUSH3 0x461bcd
0x287 MUL
0x288 DUP2
0x289 MSTORE
0x28a PUSH1 0x20
0x28c PUSH1 0x4
0x28e DUP3
0x28f ADD
0x290 MSTORE
0x291 PUSH1 0xe
0x293 PUSH1 0x24
0x295 DUP3
0x296 ADD
0x297 MSTORE
0x298 PUSH1 0x0
0x29a DUP1
0x29b MLOAD
0x29c PUSH1 0x20
0x29e PUSH2 0x743
0x2a1 DUP4
0x2a2 CODECOPY
0x2a3 DUP2
0x2a4 MLOAD
0x2a5 SWAP2
0x2a6 MSTORE
0x2a7 PUSH1 0x44
0x2a9 DUP3
0x2aa ADD
0x2ab MSTORE
0x2ac SWAP1
0x2ad MLOAD
0x2ae SWAP1
0x2af DUP2
0x2b0 SWAP1
0x2b1 SUB
0x2b2 PUSH1 0x64
0x2b4 ADD
0x2b5 SWAP1
0x2b6 REVERT
---
0x27a: V181 = 0x40
0x27d: V182 = M[0x40]
0x27e: V183 = 0xe5
0x280: V184 = 0x2
0x282: V185 = EXP 0x2 0xe5
0x283: V186 = 0x461bcd
0x287: V187 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x289: M[V182] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x28a: V188 = 0x20
0x28c: V189 = 0x4
0x28f: V190 = ADD V182 0x4
0x290: M[V190] = 0x20
0x291: V191 = 0xe
0x293: V192 = 0x24
0x296: V193 = ADD V182 0x24
0x297: M[V193] = 0xe
0x298: V194 = 0x0
0x29b: V195 = M[0x0]
0x29c: V196 = 0x20
0x29e: V197 = 0x743
0x2a2: CODECOPY 0x0 0x743 0x20
0x2a4: V198 = M[0x0]
0x2a6: M[0x0] = V195
0x2a7: V199 = 0x44
0x2aa: V200 = ADD V182 0x44
0x2ab: M[V200] = V198
0x2ad: V201 = M[0x40]
0x2b1: V202 = SUB V182 V201
0x2b2: V203 = 0x64
0x2b4: V204 = ADD 0x64 V202
0x2b6: REVERT V201 V204
---
Entry stack: [V11, 0x8d, V44]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V44]

================================

Block 0x2b7
[0x2b7:0x2f6]
---
Predecessors: [0x267]
Successors: [0x8d]
---
0x2b7 JUMPDEST
0x2b8 PUSH1 0x0
0x2ba DUP1
0x2bb SLOAD
0x2bc SWAP2
0x2bd ISZERO
0x2be ISZERO
0x2bf PUSH21 0x10000000000000000000000000000000000000000
0x2d5 MUL
0x2d6 PUSH21 0xff0000000000000000000000000000000000000000
0x2ec NOT
0x2ed SWAP1
0x2ee SWAP3
0x2ef AND
0x2f0 SWAP2
0x2f1 SWAP1
0x2f2 SWAP2
0x2f3 OR
0x2f4 SWAP1
0x2f5 SSTORE
0x2f6 JUMP
---
0x2b7: JUMPDEST 
0x2b8: V205 = 0x0
0x2bb: V206 = S[0x0]
0x2bd: V207 = ISZERO V44
0x2be: V208 = ISZERO V207
0x2bf: V209 = 0x10000000000000000000000000000000000000000
0x2d5: V210 = MUL 0x10000000000000000000000000000000000000000 V208
0x2d6: V211 = 0xff0000000000000000000000000000000000000000
0x2ec: V212 = NOT 0xff0000000000000000000000000000000000000000
0x2ef: V213 = AND V206 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff
0x2f3: V214 = OR V213 V210
0x2f5: S[0x0] = V214
0x2f6: JUMP 0x8d
---
Entry stack: [V11, 0x8d, V44]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x2f7
[0x2f7:0x311]
---
Predecessors: [0xb5]
Successors: [0xca]
---
0x2f7 JUMPDEST
0x2f8 PUSH1 0x1
0x2fa PUSH1 0xa0
0x2fc PUSH1 0x2
0x2fe EXP
0x2ff SUB
0x300 AND
0x301 PUSH1 0x0
0x303 SWAP1
0x304 DUP2
0x305 MSTORE
0x306 PUSH1 0x1
0x308 PUSH1 0x20
0x30a MSTORE
0x30b PUSH1 0x40
0x30d SWAP1
0x30e SHA3
0x30f SLOAD
0x310 SWAP1
0x311 JUMP
---
0x2f7: JUMPDEST 
0x2f8: V215 = 0x1
0x2fa: V216 = 0xa0
0x2fc: V217 = 0x2
0x2fe: V218 = EXP 0x2 0xa0
0x2ff: V219 = SUB 0x10000000000000000000000000000000000000000 0x1
0x300: V220 = AND 0xffffffffffffffffffffffffffffffffffffffff V58
0x301: V221 = 0x0
0x305: M[0x0] = V220
0x306: V222 = 0x1
0x308: V223 = 0x20
0x30a: M[0x20] = 0x1
0x30b: V224 = 0x40
0x30e: V225 = SHA3 0x0 0x40
0x30f: V226 = S[V225]
0x311: JUMP 0xca
---
Entry stack: [V11, 0xca, V58]
Stack pops: 2
Stack additions: [V226]
Exit stack: [V11, V226]

================================

Block 0x312
[0x312:0x33a]
---
Predecessors: [0xdc]
Successors: [0x33b, 0x38a]
---
0x312 JUMPDEST
0x313 PUSH1 0x0
0x315 DUP1
0x316 SLOAD
0x317 PUSH21 0x10000000000000000000000000000000000000000
0x32d SWAP1
0x32e DIV
0x32f PUSH1 0xff
0x331 AND
0x332 ISZERO
0x333 ISZERO
0x334 PUSH1 0x1
0x336 EQ
0x337 PUSH2 0x38a
0x33a JUMPI
---
0x312: JUMPDEST 
0x313: V227 = 0x0
0x316: V228 = S[0x0]
0x317: V229 = 0x10000000000000000000000000000000000000000
0x32e: V230 = DIV V228 0x10000000000000000000000000000000000000000
0x32f: V231 = 0xff
0x331: V232 = AND 0xff V230
0x332: V233 = ISZERO V232
0x333: V234 = ISZERO V233
0x334: V235 = 0x1
0x336: V236 = EQ 0x1 V234
0x337: V237 = 0x38a
0x33a: JUMPI 0x38a V236
---
Entry stack: [V11, 0x8d]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x8d, 0x0]

================================

Block 0x33b
[0x33b:0x389]
---
Predecessors: [0x312]
Successors: []
---
0x33b PUSH1 0x40
0x33d DUP1
0x33e MLOAD
0x33f PUSH1 0xe5
0x341 PUSH1 0x2
0x343 EXP
0x344 PUSH3 0x461bcd
0x348 MUL
0x349 DUP2
0x34a MSTORE
0x34b PUSH1 0x20
0x34d PUSH1 0x4
0x34f DUP3
0x350 ADD
0x351 MSTORE
0x352 PUSH1 0x1e
0x354 PUSH1 0x24
0x356 DUP3
0x357 ADD
0x358 MSTORE
0x359 PUSH32 0x576169742061206d6f6d656e742c204920616d206e6f742072656164792e0000
0x37a PUSH1 0x44
0x37c DUP3
0x37d ADD
0x37e MSTORE
0x37f SWAP1
0x380 MLOAD
0x381 SWAP1
0x382 DUP2
0x383 SWAP1
0x384 SUB
0x385 PUSH1 0x64
0x387 ADD
0x388 SWAP1
0x389 REVERT
---
0x33b: V238 = 0x40
0x33e: V239 = M[0x40]
0x33f: V240 = 0xe5
0x341: V241 = 0x2
0x343: V242 = EXP 0x2 0xe5
0x344: V243 = 0x461bcd
0x348: V244 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x34a: M[V239] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x34b: V245 = 0x20
0x34d: V246 = 0x4
0x350: V247 = ADD V239 0x4
0x351: M[V247] = 0x20
0x352: V248 = 0x1e
0x354: V249 = 0x24
0x357: V250 = ADD V239 0x24
0x358: M[V250] = 0x1e
0x359: V251 = 0x576169742061206d6f6d656e742c204920616d206e6f742072656164792e0000
0x37a: V252 = 0x44
0x37d: V253 = ADD V239 0x44
0x37e: M[V253] = 0x576169742061206d6f6d656e742c204920616d206e6f742072656164792e0000
0x380: V254 = M[0x40]
0x384: V255 = SUB V239 V254
0x385: V256 = 0x64
0x387: V257 = ADD 0x64 V255
0x389: REVERT V254 V257
---
Entry stack: [V11, 0x8d, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, 0x0]

================================

Block 0x38a
[0x38a:0x39f]
---
Predecessors: [0x312]
Successors: [0x3a0, 0x3ef]
---
0x38a JUMPDEST
0x38b CALLER
0x38c PUSH1 0x0
0x38e SWAP1
0x38f DUP2
0x390 MSTORE
0x391 PUSH1 0x1
0x393 PUSH1 0x20
0x395 MSTORE
0x396 PUSH1 0x40
0x398 DUP2
0x399 SHA3
0x39a SLOAD
0x39b GT
0x39c PUSH2 0x3ef
0x39f JUMPI
---
0x38a: JUMPDEST 
0x38b: V258 = CALLER
0x38c: V259 = 0x0
0x390: M[0x0] = V258
0x391: V260 = 0x1
0x393: V261 = 0x20
0x395: M[0x20] = 0x1
0x396: V262 = 0x40
0x399: V263 = SHA3 0x0 0x40
0x39a: V264 = S[V263]
0x39b: V265 = GT V264 0x0
0x39c: V266 = 0x3ef
0x39f: JUMPI 0x3ef V265
---
Entry stack: [V11, 0x8d, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, 0x0]

================================

Block 0x3a0
[0x3a0:0x3ee]
---
Predecessors: [0x38a]
Successors: []
---
0x3a0 PUSH1 0x40
0x3a2 DUP1
0x3a3 MLOAD
0x3a4 PUSH1 0xe5
0x3a6 PUSH1 0x2
0x3a8 EXP
0x3a9 PUSH3 0x461bcd
0x3ad MUL
0x3ae DUP2
0x3af MSTORE
0x3b0 PUSH1 0x20
0x3b2 PUSH1 0x4
0x3b4 DUP3
0x3b5 ADD
0x3b6 MSTORE
0x3b7 PUSH1 0x14
0x3b9 PUSH1 0x24
0x3bb DUP3
0x3bc ADD
0x3bd MSTORE
0x3be PUSH32 0x596f7572207661756c7420697320656d7074792e000000000000000000000000
0x3df PUSH1 0x44
0x3e1 DUP3
0x3e2 ADD
0x3e3 MSTORE
0x3e4 SWAP1
0x3e5 MLOAD
0x3e6 SWAP1
0x3e7 DUP2
0x3e8 SWAP1
0x3e9 SUB
0x3ea PUSH1 0x64
0x3ec ADD
0x3ed SWAP1
0x3ee REVERT
---
0x3a0: V267 = 0x40
0x3a3: V268 = M[0x40]
0x3a4: V269 = 0xe5
0x3a6: V270 = 0x2
0x3a8: V271 = EXP 0x2 0xe5
0x3a9: V272 = 0x461bcd
0x3ad: V273 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x3af: M[V268] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x3b0: V274 = 0x20
0x3b2: V275 = 0x4
0x3b5: V276 = ADD V268 0x4
0x3b6: M[V276] = 0x20
0x3b7: V277 = 0x14
0x3b9: V278 = 0x24
0x3bc: V279 = ADD V268 0x24
0x3bd: M[V279] = 0x14
0x3be: V280 = 0x596f7572207661756c7420697320656d7074792e000000000000000000000000
0x3df: V281 = 0x44
0x3e2: V282 = ADD V268 0x44
0x3e3: M[V282] = 0x596f7572207661756c7420697320656d7074792e000000000000000000000000
0x3e5: V283 = M[0x40]
0x3e9: V284 = SUB V268 V283
0x3ea: V285 = 0x64
0x3ec: V286 = ADD 0x64 V284
0x3ee: REVERT V283 V286
---
Entry stack: [V11, 0x8d, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, 0x0]

================================

Block 0x3ef
[0x3ef:0x427]
---
Predecessors: [0x38a]
Successors: [0x428, 0x431]
---
0x3ef JUMPDEST
0x3f0 POP
0x3f1 CALLER
0x3f2 PUSH1 0x0
0x3f4 DUP2
0x3f5 DUP2
0x3f6 MSTORE
0x3f7 PUSH1 0x1
0x3f9 PUSH1 0x20
0x3fb MSTORE
0x3fc PUSH1 0x40
0x3fe DUP1
0x3ff DUP3
0x400 SHA3
0x401 DUP1
0x402 SLOAD
0x403 SWAP1
0x404 DUP4
0x405 SWAP1
0x406 SSTORE
0x407 SWAP1
0x408 MLOAD
0x409 SWAP1
0x40a SWAP3
0x40b SWAP2
0x40c DUP4
0x40d ISZERO
0x40e PUSH2 0x8fc
0x411 MUL
0x412 SWAP2
0x413 DUP5
0x414 SWAP2
0x415 DUP2
0x416 DUP2
0x417 DUP2
0x418 DUP6
0x419 DUP9
0x41a DUP9
0x41b CALL
0x41c SWAP4
0x41d POP
0x41e POP
0x41f POP
0x420 POP
0x421 ISZERO
0x422 DUP1
0x423 ISZERO
0x424 PUSH2 0x431
0x427 JUMPI
---
0x3ef: JUMPDEST 
0x3f1: V287 = CALLER
0x3f2: V288 = 0x0
0x3f6: M[0x0] = V287
0x3f7: V289 = 0x1
0x3f9: V290 = 0x20
0x3fb: M[0x20] = 0x1
0x3fc: V291 = 0x40
0x400: V292 = SHA3 0x0 0x40
0x402: V293 = S[V292]
0x406: S[V292] = 0x0
0x408: V294 = M[0x40]
0x40d: V295 = ISZERO V293
0x40e: V296 = 0x8fc
0x411: V297 = MUL 0x8fc V295
0x41b: V298 = CALL V297 V287 V293 V294 0x0 V294 0x0
0x421: V299 = ISZERO V298
0x423: V300 = ISZERO V299
0x424: V301 = 0x431
0x427: JUMPI 0x431 V300
---
Entry stack: [V11, 0x8d, 0x0]
Stack pops: 1
Stack additions: [V293, V299]
Exit stack: [V11, 0x8d, V293, V299]

================================

Block 0x428
[0x428:0x430]
---
Predecessors: [0x3ef]
Successors: []
---
0x428 RETURNDATASIZE
0x429 PUSH1 0x0
0x42b DUP1
0x42c RETURNDATACOPY
0x42d RETURNDATASIZE
0x42e PUSH1 0x0
0x430 REVERT
---
0x428: V302 = RETURNDATASIZE
0x429: V303 = 0x0
0x42c: RETURNDATACOPY 0x0 0x0 V302
0x42d: V304 = RETURNDATASIZE
0x42e: V305 = 0x0
0x430: REVERT 0x0 V304
---
Entry stack: [V11, 0x8d, V293, V299]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V293, V299]

================================

Block 0x431
[0x431:0x46f]
---
Predecessors: [0x3ef]
Successors: [0x8d]
---
0x431 JUMPDEST
0x432 POP
0x433 PUSH1 0x40
0x435 DUP1
0x436 MLOAD
0x437 CALLER
0x438 DUP2
0x439 MSTORE
0x43a PUSH1 0x20
0x43c DUP2
0x43d ADD
0x43e DUP4
0x43f SWAP1
0x440 MSTORE
0x441 DUP2
0x442 MLOAD
0x443 PUSH32 0xf74fad994845ef73476114306db4fb3ddeafc0141ecbc906ba670c6d1f037dc6
0x464 SWAP3
0x465 SWAP2
0x466 DUP2
0x467 SWAP1
0x468 SUB
0x469 SWAP1
0x46a SWAP2
0x46b ADD
0x46c SWAP1
0x46d LOG1
0x46e POP
0x46f JUMP
---
0x431: JUMPDEST 
0x433: V306 = 0x40
0x436: V307 = M[0x40]
0x437: V308 = CALLER
0x439: M[V307] = V308
0x43a: V309 = 0x20
0x43d: V310 = ADD V307 0x20
0x440: M[V310] = V293
0x442: V311 = M[0x40]
0x443: V312 = 0xf74fad994845ef73476114306db4fb3ddeafc0141ecbc906ba670c6d1f037dc6
0x468: V313 = SUB V307 V311
0x46b: V314 = ADD 0x40 V313
0x46d: LOG V311 V314 0xf74fad994845ef73476114306db4fb3ddeafc0141ecbc906ba670c6d1f037dc6
0x46f: JUMP 0x8d
---
Entry stack: [V11, 0x8d, V293, V299]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x470
[0x470:0x482]
---
Predecessors: [0xf0]
Successors: [0x483, 0x4c0]
---
0x470 JUMPDEST
0x471 PUSH1 0x0
0x473 SLOAD
0x474 PUSH1 0x1
0x476 PUSH1 0xa0
0x478 PUSH1 0x2
0x47a EXP
0x47b SUB
0x47c AND
0x47d CALLER
0x47e EQ
0x47f PUSH2 0x4c0
0x482 JUMPI
---
0x470: JUMPDEST 
0x471: V315 = 0x0
0x473: V316 = S[0x0]
0x474: V317 = 0x1
0x476: V318 = 0xa0
0x478: V319 = 0x2
0x47a: V320 = EXP 0x2 0xa0
0x47b: V321 = SUB 0x10000000000000000000000000000000000000000 0x1
0x47c: V322 = AND 0xffffffffffffffffffffffffffffffffffffffff V316
0x47d: V323 = CALLER
0x47e: V324 = EQ V323 V322
0x47f: V325 = 0x4c0
0x482: JUMPI 0x4c0 V324
---
Entry stack: [V11, 0x8d]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d]

================================

Block 0x483
[0x483:0x4bf]
---
Predecessors: [0x470]
Successors: []
---
0x483 PUSH1 0x40
0x485 DUP1
0x486 MLOAD
0x487 PUSH1 0xe5
0x489 PUSH1 0x2
0x48b EXP
0x48c PUSH3 0x461bcd
0x490 MUL
0x491 DUP2
0x492 MSTORE
0x493 PUSH1 0x20
0x495 PUSH1 0x4
0x497 DUP3
0x498 ADD
0x499 MSTORE
0x49a PUSH1 0xe
0x49c PUSH1 0x24
0x49e DUP3
0x49f ADD
0x4a0 MSTORE
0x4a1 PUSH1 0x0
0x4a3 DUP1
0x4a4 MLOAD
0x4a5 PUSH1 0x20
0x4a7 PUSH2 0x743
0x4aa DUP4
0x4ab CODECOPY
0x4ac DUP2
0x4ad MLOAD
0x4ae SWAP2
0x4af MSTORE
0x4b0 PUSH1 0x44
0x4b2 DUP3
0x4b3 ADD
0x4b4 MSTORE
0x4b5 SWAP1
0x4b6 MLOAD
0x4b7 SWAP1
0x4b8 DUP2
0x4b9 SWAP1
0x4ba SUB
0x4bb PUSH1 0x64
0x4bd ADD
0x4be SWAP1
0x4bf REVERT
---
0x483: V326 = 0x40
0x486: V327 = M[0x40]
0x487: V328 = 0xe5
0x489: V329 = 0x2
0x48b: V330 = EXP 0x2 0xe5
0x48c: V331 = 0x461bcd
0x490: V332 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x492: M[V327] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x493: V333 = 0x20
0x495: V334 = 0x4
0x498: V335 = ADD V327 0x4
0x499: M[V335] = 0x20
0x49a: V336 = 0xe
0x49c: V337 = 0x24
0x49f: V338 = ADD V327 0x24
0x4a0: M[V338] = 0xe
0x4a1: V339 = 0x0
0x4a4: V340 = M[0x0]
0x4a5: V341 = 0x20
0x4a7: V342 = 0x743
0x4ab: CODECOPY 0x0 0x743 0x20
0x4ad: V343 = M[0x0]
0x4af: M[0x0] = V340
0x4b0: V344 = 0x44
0x4b3: V345 = ADD V327 0x44
0x4b4: M[V345] = V343
0x4b6: V346 = M[0x40]
0x4ba: V347 = SUB V327 V346
0x4bb: V348 = 0x64
0x4bd: V349 = ADD 0x64 V347
0x4bf: REVERT V346 V349
---
Entry stack: [V11, 0x8d]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d]

================================

Block 0x4c0
[0x4c0:0x4f1]
---
Predecessors: [0x470]
Successors: [0x4f2, 0x4fb]
---
0x4c0 JUMPDEST
0x4c1 PUSH1 0x0
0x4c3 DUP1
0x4c4 SLOAD
0x4c5 PUSH1 0x40
0x4c7 MLOAD
0x4c8 PUSH1 0x1
0x4ca PUSH1 0xa0
0x4cc PUSH1 0x2
0x4ce EXP
0x4cf SUB
0x4d0 SWAP1
0x4d1 SWAP2
0x4d2 AND
0x4d3 SWAP2
0x4d4 ADDRESS
0x4d5 BALANCE
0x4d6 DUP1
0x4d7 ISZERO
0x4d8 PUSH2 0x8fc
0x4db MUL
0x4dc SWAP3
0x4dd SWAP1
0x4de SWAP2
0x4df DUP2
0x4e0 DUP2
0x4e1 DUP2
0x4e2 DUP6
0x4e3 DUP9
0x4e4 DUP9
0x4e5 CALL
0x4e6 SWAP4
0x4e7 POP
0x4e8 POP
0x4e9 POP
0x4ea POP
0x4eb ISZERO
0x4ec DUP1
0x4ed ISZERO
0x4ee PUSH2 0x4fb
0x4f1 JUMPI
---
0x4c0: JUMPDEST 
0x4c1: V350 = 0x0
0x4c4: V351 = S[0x0]
0x4c5: V352 = 0x40
0x4c7: V353 = M[0x40]
0x4c8: V354 = 0x1
0x4ca: V355 = 0xa0
0x4cc: V356 = 0x2
0x4ce: V357 = EXP 0x2 0xa0
0x4cf: V358 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d2: V359 = AND V351 0xffffffffffffffffffffffffffffffffffffffff
0x4d4: V360 = ADDRESS
0x4d5: V361 = BALANCE V360
0x4d7: V362 = ISZERO V361
0x4d8: V363 = 0x8fc
0x4db: V364 = MUL 0x8fc V362
0x4e5: V365 = CALL V364 V359 V361 V353 0x0 V353 0x0
0x4eb: V366 = ISZERO V365
0x4ed: V367 = ISZERO V366
0x4ee: V368 = 0x4fb
0x4f1: JUMPI 0x4fb V367
---
Entry stack: [V11, 0x8d]
Stack pops: 0
Stack additions: [V366]
Exit stack: [V11, 0x8d, V366]

================================

Block 0x4f2
[0x4f2:0x4fa]
---
Predecessors: [0x4c0]
Successors: []
---
0x4f2 RETURNDATASIZE
0x4f3 PUSH1 0x0
0x4f5 DUP1
0x4f6 RETURNDATACOPY
0x4f7 RETURNDATASIZE
0x4f8 PUSH1 0x0
0x4fa REVERT
---
0x4f2: V369 = RETURNDATASIZE
0x4f3: V370 = 0x0
0x4f6: RETURNDATACOPY 0x0 0x0 V369
0x4f7: V371 = RETURNDATASIZE
0x4f8: V372 = 0x0
0x4fa: REVERT 0x0 V371
---
Entry stack: [V11, 0x8d, V366]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V366]

================================

Block 0x4fb
[0x4fb:0x4fd]
---
Predecessors: [0x4c0, 0x706]
Successors: [0x8d]
---
0x4fb JUMPDEST
0x4fc POP
0x4fd JUMP
---
0x4fb: JUMPDEST 
0x4fd: JUMP 0x8d
---
Entry stack: [V11, 0x8d, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x4fe
[0x4fe:0x511]
---
Predecessors: [0x105]
Successors: [0x512, 0x54f]
---
0x4fe JUMPDEST
0x4ff PUSH1 0x0
0x501 DUP1
0x502 SLOAD
0x503 PUSH1 0x1
0x505 PUSH1 0xa0
0x507 PUSH1 0x2
0x509 EXP
0x50a SUB
0x50b AND
0x50c CALLER
0x50d EQ
0x50e PUSH2 0x54f
0x511 JUMPI
---
0x4fe: JUMPDEST 
0x4ff: V373 = 0x0
0x502: V374 = S[0x0]
0x503: V375 = 0x1
0x505: V376 = 0xa0
0x507: V377 = 0x2
0x509: V378 = EXP 0x2 0xa0
0x50a: V379 = SUB 0x10000000000000000000000000000000000000000 0x1
0x50b: V380 = AND 0xffffffffffffffffffffffffffffffffffffffff V374
0x50c: V381 = CALLER
0x50d: V382 = EQ V381 V380
0x50e: V383 = 0x54f
0x511: JUMPI 0x54f V382
---
Entry stack: [V11, 0x8d, V79, V94]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x8d, V79, V94, 0x0]

================================

Block 0x512
[0x512:0x54e]
---
Predecessors: [0x4fe]
Successors: []
---
0x512 PUSH1 0x40
0x514 DUP1
0x515 MLOAD
0x516 PUSH1 0xe5
0x518 PUSH1 0x2
0x51a EXP
0x51b PUSH3 0x461bcd
0x51f MUL
0x520 DUP2
0x521 MSTORE
0x522 PUSH1 0x20
0x524 PUSH1 0x4
0x526 DUP3
0x527 ADD
0x528 MSTORE
0x529 PUSH1 0xe
0x52b PUSH1 0x24
0x52d DUP3
0x52e ADD
0x52f MSTORE
0x530 PUSH1 0x0
0x532 DUP1
0x533 MLOAD
0x534 PUSH1 0x20
0x536 PUSH2 0x743
0x539 DUP4
0x53a CODECOPY
0x53b DUP2
0x53c MLOAD
0x53d SWAP2
0x53e MSTORE
0x53f PUSH1 0x44
0x541 DUP3
0x542 ADD
0x543 MSTORE
0x544 SWAP1
0x545 MLOAD
0x546 SWAP1
0x547 DUP2
0x548 SWAP1
0x549 SUB
0x54a PUSH1 0x64
0x54c ADD
0x54d SWAP1
0x54e REVERT
---
0x512: V384 = 0x40
0x515: V385 = M[0x40]
0x516: V386 = 0xe5
0x518: V387 = 0x2
0x51a: V388 = EXP 0x2 0xe5
0x51b: V389 = 0x461bcd
0x51f: V390 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x521: M[V385] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x522: V391 = 0x20
0x524: V392 = 0x4
0x527: V393 = ADD V385 0x4
0x528: M[V393] = 0x20
0x529: V394 = 0xe
0x52b: V395 = 0x24
0x52e: V396 = ADD V385 0x24
0x52f: M[V396] = 0xe
0x530: V397 = 0x0
0x533: V398 = M[0x0]
0x534: V399 = 0x20
0x536: V400 = 0x743
0x53a: CODECOPY 0x0 0x743 0x20
0x53c: V401 = M[0x0]
0x53e: M[0x0] = V398
0x53f: V402 = 0x44
0x542: V403 = ADD V385 0x44
0x543: M[V403] = V401
0x545: V404 = M[0x40]
0x549: V405 = SUB V385 V404
0x54a: V406 = 0x64
0x54c: V407 = ADD 0x64 V405
0x54e: REVERT V404 V407
---
Entry stack: [V11, 0x8d, V79, V94, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V79, V94, 0x0]

================================

Block 0x54f
[0x54f:0x552]
---
Predecessors: [0x4fe]
Successors: [0x553]
---
0x54f JUMPDEST
0x550 POP
0x551 PUSH1 0x0
---
0x54f: JUMPDEST 
0x551: V408 = 0x0
---
Entry stack: [V11, 0x8d, V79, V94, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x8d, V79, V94, 0x0]

================================

Block 0x553
[0x553:0x55c]
---
Predecessors: [0x54f, 0x586]
Successors: [0x55d, 0x5b1]
---
0x553 JUMPDEST
0x554 DUP3
0x555 MLOAD
0x556 DUP2
0x557 LT
0x558 ISZERO
0x559 PUSH2 0x5b1
0x55c JUMPI
---
0x553: JUMPDEST 
0x555: V409 = M[V79]
0x557: V410 = LT S0 V409
0x558: V411 = ISZERO V410
0x559: V412 = 0x5b1
0x55c: JUMPI 0x5b1 V411
---
Entry stack: [V11, 0x8d, V79, V94, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x8d, V79, V94, S0]

================================

Block 0x55d
[0x55d:0x568]
---
Predecessors: [0x553]
Successors: [0x569, 0x56a]
---
0x55d DUP2
0x55e DUP2
0x55f DUP2
0x560 MLOAD
0x561 DUP2
0x562 LT
0x563 ISZERO
0x564 ISZERO
0x565 PUSH2 0x56a
0x568 JUMPI
---
0x560: V413 = M[V94]
0x562: V414 = LT S0 V413
0x563: V415 = ISZERO V414
0x564: V416 = ISZERO V415
0x565: V417 = 0x56a
0x568: JUMPI 0x56a V416
---
Entry stack: [V11, 0x8d, V79, V94, S0]
Stack pops: 2
Stack additions: [S1, S0, S1, S0]
Exit stack: [V11, 0x8d, V79, V94, S0, V94, S0]

================================

Block 0x569
[0x569:0x569]
---
Predecessors: [0x55d]
Successors: []
---
0x569 INVALID
---
0x569: INVALID 
---
Entry stack: [V11, 0x8d, V79, V94, S2, V94, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V79, V94, S2, V94, S0]

================================

Block 0x56a
[0x56a:0x584]
---
Predecessors: [0x55d]
Successors: [0x585, 0x586]
---
0x56a JUMPDEST
0x56b SWAP1
0x56c PUSH1 0x20
0x56e ADD
0x56f SWAP1
0x570 PUSH1 0x20
0x572 MUL
0x573 ADD
0x574 MLOAD
0x575 PUSH1 0x1
0x577 PUSH1 0x0
0x579 DUP6
0x57a DUP5
0x57b DUP2
0x57c MLOAD
0x57d DUP2
0x57e LT
0x57f ISZERO
0x580 ISZERO
0x581 PUSH2 0x586
0x584 JUMPI
---
0x56a: JUMPDEST 
0x56c: V418 = 0x20
0x56e: V419 = ADD 0x20 V94
0x570: V420 = 0x20
0x572: V421 = MUL 0x20 S0
0x573: V422 = ADD V421 V419
0x574: V423 = M[V422]
0x575: V424 = 0x1
0x577: V425 = 0x0
0x57c: V426 = M[V79]
0x57e: V427 = LT S2 V426
0x57f: V428 = ISZERO V427
0x580: V429 = ISZERO V428
0x581: V430 = 0x586
0x584: JUMPI 0x586 V429
---
Entry stack: [V11, 0x8d, V79, V94, S2, V94, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, V423, 0x1, 0x0, S4, S2]
Exit stack: [V11, 0x8d, V79, V94, S2, V423, 0x1, 0x0, V79, S2]

================================

Block 0x585
[0x585:0x585]
---
Predecessors: [0x56a]
Successors: []
---
0x585 INVALID
---
0x585: INVALID 
---
Entry stack: [V11, 0x8d, V79, V94, S5, V423, 0x1, 0x0, V79, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V79, V94, S5, V423, 0x1, 0x0, V79, S0]

================================

Block 0x586
[0x586:0x5b0]
---
Predecessors: [0x56a]
Successors: [0x553]
---
0x586 JUMPDEST
0x587 PUSH1 0x20
0x589 SWAP1
0x58a DUP2
0x58b MUL
0x58c SWAP1
0x58d SWAP2
0x58e ADD
0x58f DUP2
0x590 ADD
0x591 MLOAD
0x592 PUSH1 0x1
0x594 PUSH1 0xa0
0x596 PUSH1 0x2
0x598 EXP
0x599 SUB
0x59a AND
0x59b DUP3
0x59c MSTORE
0x59d DUP2
0x59e ADD
0x59f SWAP2
0x5a0 SWAP1
0x5a1 SWAP2
0x5a2 MSTORE
0x5a3 PUSH1 0x40
0x5a5 ADD
0x5a6 PUSH1 0x0
0x5a8 SHA3
0x5a9 SSTORE
0x5aa PUSH1 0x1
0x5ac ADD
0x5ad PUSH2 0x553
0x5b0 JUMP
---
0x586: JUMPDEST 
0x587: V431 = 0x20
0x58b: V432 = MUL 0x20 S0
0x58e: V433 = ADD V79 V432
0x590: V434 = ADD 0x20 V433
0x591: V435 = M[V434]
0x592: V436 = 0x1
0x594: V437 = 0xa0
0x596: V438 = 0x2
0x598: V439 = EXP 0x2 0xa0
0x599: V440 = SUB 0x10000000000000000000000000000000000000000 0x1
0x59a: V441 = AND 0xffffffffffffffffffffffffffffffffffffffff V435
0x59c: M[0x0] = V441
0x59e: V442 = ADD 0x0 0x20
0x5a2: M[0x20] = 0x1
0x5a3: V443 = 0x40
0x5a5: V444 = ADD 0x40 0x0
0x5a6: V445 = 0x0
0x5a8: V446 = SHA3 0x0 0x40
0x5a9: S[V446] = V423
0x5aa: V447 = 0x1
0x5ac: V448 = ADD 0x1 S5
0x5ad: V449 = 0x553
0x5b0: JUMP 0x553
---
Entry stack: [V11, 0x8d, V79, V94, S5, V423, 0x1, 0x0, V79, S0]
Stack pops: 6
Stack additions: [V448]
Exit stack: [V11, 0x8d, V79, V94, V448]

================================

Block 0x5b1
[0x5b1:0x5b5]
---
Predecessors: [0x553, 0x60b]
Successors: [0x8d]
---
0x5b1 JUMPDEST
0x5b2 POP
0x5b3 POP
0x5b4 POP
0x5b5 JUMP
---
0x5b1: JUMPDEST 
0x5b5: JUMP 0x8d
---
Entry stack: [V11, 0x8d, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x5b6
[0x5b6:0x5c9]
---
Predecessors: [0x193]
Successors: [0x5ca, 0x607]
---
0x5b6 JUMPDEST
0x5b7 PUSH1 0x0
0x5b9 DUP1
0x5ba SLOAD
0x5bb PUSH1 0x1
0x5bd PUSH1 0xa0
0x5bf PUSH1 0x2
0x5c1 EXP
0x5c2 SUB
0x5c3 AND
0x5c4 CALLER
0x5c5 EQ
0x5c6 PUSH2 0x607
0x5c9 JUMPI
---
0x5b6: JUMPDEST 
0x5b7: V450 = 0x0
0x5ba: V451 = S[0x0]
0x5bb: V452 = 0x1
0x5bd: V453 = 0xa0
0x5bf: V454 = 0x2
0x5c1: V455 = EXP 0x2 0xa0
0x5c2: V456 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5c3: V457 = AND 0xffffffffffffffffffffffffffffffffffffffff V451
0x5c4: V458 = CALLER
0x5c5: V459 = EQ V458 V457
0x5c6: V460 = 0x607
0x5c9: JUMPI 0x607 V459
---
Entry stack: [V11, 0x8d, V111, V126]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x8d, V111, V126, 0x0]

================================

Block 0x5ca
[0x5ca:0x606]
---
Predecessors: [0x5b6]
Successors: []
---
0x5ca PUSH1 0x40
0x5cc DUP1
0x5cd MLOAD
0x5ce PUSH1 0xe5
0x5d0 PUSH1 0x2
0x5d2 EXP
0x5d3 PUSH3 0x461bcd
0x5d7 MUL
0x5d8 DUP2
0x5d9 MSTORE
0x5da PUSH1 0x20
0x5dc PUSH1 0x4
0x5de DUP3
0x5df ADD
0x5e0 MSTORE
0x5e1 PUSH1 0xe
0x5e3 PUSH1 0x24
0x5e5 DUP3
0x5e6 ADD
0x5e7 MSTORE
0x5e8 PUSH1 0x0
0x5ea DUP1
0x5eb MLOAD
0x5ec PUSH1 0x20
0x5ee PUSH2 0x743
0x5f1 DUP4
0x5f2 CODECOPY
0x5f3 DUP2
0x5f4 MLOAD
0x5f5 SWAP2
0x5f6 MSTORE
0x5f7 PUSH1 0x44
0x5f9 DUP3
0x5fa ADD
0x5fb MSTORE
0x5fc SWAP1
0x5fd MLOAD
0x5fe SWAP1
0x5ff DUP2
0x600 SWAP1
0x601 SUB
0x602 PUSH1 0x64
0x604 ADD
0x605 SWAP1
0x606 REVERT
---
0x5ca: V461 = 0x40
0x5cd: V462 = M[0x40]
0x5ce: V463 = 0xe5
0x5d0: V464 = 0x2
0x5d2: V465 = EXP 0x2 0xe5
0x5d3: V466 = 0x461bcd
0x5d7: V467 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x5d9: M[V462] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x5da: V468 = 0x20
0x5dc: V469 = 0x4
0x5df: V470 = ADD V462 0x4
0x5e0: M[V470] = 0x20
0x5e1: V471 = 0xe
0x5e3: V472 = 0x24
0x5e6: V473 = ADD V462 0x24
0x5e7: M[V473] = 0xe
0x5e8: V474 = 0x0
0x5eb: V475 = M[0x0]
0x5ec: V476 = 0x20
0x5ee: V477 = 0x743
0x5f2: CODECOPY 0x0 0x743 0x20
0x5f4: V478 = M[0x0]
0x5f6: M[0x0] = V475
0x5f7: V479 = 0x44
0x5fa: V480 = ADD V462 0x44
0x5fb: M[V480] = V478
0x5fd: V481 = M[0x40]
0x601: V482 = SUB V462 V481
0x602: V483 = 0x64
0x604: V484 = ADD 0x64 V482
0x606: REVERT V481 V484
---
Entry stack: [V11, 0x8d, V111, V126, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V111, V126, 0x0]

================================

Block 0x607
[0x607:0x60a]
---
Predecessors: [0x5b6]
Successors: [0x60b]
---
0x607 JUMPDEST
0x608 POP
0x609 PUSH1 0x0
---
0x607: JUMPDEST 
0x609: V485 = 0x0
---
Entry stack: [V11, 0x8d, V111, V126, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x8d, V111, V126, 0x0]

================================

Block 0x60b
[0x60b:0x614]
---
Predecessors: [0x607, 0x67c]
Successors: [0x5b1, 0x615]
---
0x60b JUMPDEST
0x60c DUP3
0x60d MLOAD
0x60e DUP2
0x60f LT
0x610 ISZERO
0x611 PUSH2 0x5b1
0x614 JUMPI
---
0x60b: JUMPDEST 
0x60d: V486 = M[V111]
0x60f: V487 = LT S0 V486
0x610: V488 = ISZERO V487
0x611: V489 = 0x5b1
0x614: JUMPI 0x5b1 V488
---
Entry stack: [V11, 0x8d, V111, V126, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x8d, V111, V126, S0]

================================

Block 0x615
[0x615:0x620]
---
Predecessors: [0x60b]
Successors: [0x621, 0x622]
---
0x615 DUP2
0x616 DUP2
0x617 DUP2
0x618 MLOAD
0x619 DUP2
0x61a LT
0x61b ISZERO
0x61c ISZERO
0x61d PUSH2 0x622
0x620 JUMPI
---
0x618: V490 = M[V126]
0x61a: V491 = LT S0 V490
0x61b: V492 = ISZERO V491
0x61c: V493 = ISZERO V492
0x61d: V494 = 0x622
0x620: JUMPI 0x622 V493
---
Entry stack: [V11, 0x8d, V111, V126, S0]
Stack pops: 2
Stack additions: [S1, S0, S1, S0]
Exit stack: [V11, 0x8d, V111, V126, S0, V126, S0]

================================

Block 0x621
[0x621:0x621]
---
Predecessors: [0x615]
Successors: []
---
0x621 INVALID
---
0x621: INVALID 
---
Entry stack: [V11, 0x8d, V111, V126, S2, V126, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V111, V126, S2, V126, S0]

================================

Block 0x622
[0x622:0x63c]
---
Predecessors: [0x615]
Successors: [0x63d, 0x63e]
---
0x622 JUMPDEST
0x623 SWAP1
0x624 PUSH1 0x20
0x626 ADD
0x627 SWAP1
0x628 PUSH1 0x20
0x62a MUL
0x62b ADD
0x62c MLOAD
0x62d PUSH1 0x1
0x62f PUSH1 0x0
0x631 DUP6
0x632 DUP5
0x633 DUP2
0x634 MLOAD
0x635 DUP2
0x636 LT
0x637 ISZERO
0x638 ISZERO
0x639 PUSH2 0x63e
0x63c JUMPI
---
0x622: JUMPDEST 
0x624: V495 = 0x20
0x626: V496 = ADD 0x20 V126
0x628: V497 = 0x20
0x62a: V498 = MUL 0x20 S0
0x62b: V499 = ADD V498 V496
0x62c: V500 = M[V499]
0x62d: V501 = 0x1
0x62f: V502 = 0x0
0x634: V503 = M[V111]
0x636: V504 = LT S2 V503
0x637: V505 = ISZERO V504
0x638: V506 = ISZERO V505
0x639: V507 = 0x63e
0x63c: JUMPI 0x63e V506
---
Entry stack: [V11, 0x8d, V111, V126, S2, V126, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, V500, 0x1, 0x0, S4, S2]
Exit stack: [V11, 0x8d, V111, V126, S2, V500, 0x1, 0x0, V111, S2]

================================

Block 0x63d
[0x63d:0x63d]
---
Predecessors: [0x622]
Successors: []
---
0x63d INVALID
---
0x63d: INVALID 
---
Entry stack: [V11, 0x8d, V111, V126, S5, V500, 0x1, 0x0, V111, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V111, V126, S5, V500, 0x1, 0x0, V111, S0]

================================

Block 0x63e
[0x63e:0x67a]
---
Predecessors: [0x622]
Successors: [0x67b, 0x67c]
---
0x63e JUMPDEST
0x63f SWAP1
0x640 PUSH1 0x20
0x642 ADD
0x643 SWAP1
0x644 PUSH1 0x20
0x646 MUL
0x647 ADD
0x648 MLOAD
0x649 PUSH1 0x1
0x64b PUSH1 0xa0
0x64d PUSH1 0x2
0x64f EXP
0x650 SUB
0x651 AND
0x652 PUSH1 0x1
0x654 PUSH1 0xa0
0x656 PUSH1 0x2
0x658 EXP
0x659 SUB
0x65a AND
0x65b DUP2
0x65c MSTORE
0x65d PUSH1 0x20
0x65f ADD
0x660 SWAP1
0x661 DUP2
0x662 MSTORE
0x663 PUSH1 0x20
0x665 ADD
0x666 PUSH1 0x0
0x668 SHA3
0x669 SLOAD
0x66a ADD
0x66b PUSH1 0x1
0x66d PUSH1 0x0
0x66f DUP6
0x670 DUP5
0x671 DUP2
0x672 MLOAD
0x673 DUP2
0x674 LT
0x675 ISZERO
0x676 ISZERO
0x677 PUSH2 0x67c
0x67a JUMPI
---
0x63e: JUMPDEST 
0x640: V508 = 0x20
0x642: V509 = ADD 0x20 V111
0x644: V510 = 0x20
0x646: V511 = MUL 0x20 S0
0x647: V512 = ADD V511 V509
0x648: V513 = M[V512]
0x649: V514 = 0x1
0x64b: V515 = 0xa0
0x64d: V516 = 0x2
0x64f: V517 = EXP 0x2 0xa0
0x650: V518 = SUB 0x10000000000000000000000000000000000000000 0x1
0x651: V519 = AND 0xffffffffffffffffffffffffffffffffffffffff V513
0x652: V520 = 0x1
0x654: V521 = 0xa0
0x656: V522 = 0x2
0x658: V523 = EXP 0x2 0xa0
0x659: V524 = SUB 0x10000000000000000000000000000000000000000 0x1
0x65a: V525 = AND 0xffffffffffffffffffffffffffffffffffffffff V519
0x65c: M[0x0] = V525
0x65d: V526 = 0x20
0x65f: V527 = ADD 0x20 0x0
0x662: M[0x20] = 0x1
0x663: V528 = 0x20
0x665: V529 = ADD 0x20 0x20
0x666: V530 = 0x0
0x668: V531 = SHA3 0x0 0x40
0x669: V532 = S[V531]
0x66a: V533 = ADD V532 V500
0x66b: V534 = 0x1
0x66d: V535 = 0x0
0x672: V536 = M[V111]
0x674: V537 = LT S5 V536
0x675: V538 = ISZERO V537
0x676: V539 = ISZERO V538
0x677: V540 = 0x67c
0x67a: JUMPI 0x67c V539
---
Entry stack: [V11, 0x8d, V111, V126, S5, V500, 0x1, 0x0, V111, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, V533, 0x1, 0x0, S7, S5]
Exit stack: [V11, 0x8d, V111, V126, S5, V533, 0x1, 0x0, V111, S5]

================================

Block 0x67b
[0x67b:0x67b]
---
Predecessors: [0x63e]
Successors: []
---
0x67b INVALID
---
0x67b: INVALID 
---
Entry stack: [V11, 0x8d, V111, V126, S5, V533, 0x1, 0x0, V111, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V111, V126, S5, V533, 0x1, 0x0, V111, S0]

================================

Block 0x67c
[0x67c:0x6a6]
---
Predecessors: [0x63e]
Successors: [0x60b]
---
0x67c JUMPDEST
0x67d PUSH1 0x20
0x67f SWAP1
0x680 DUP2
0x681 MUL
0x682 SWAP1
0x683 SWAP2
0x684 ADD
0x685 DUP2
0x686 ADD
0x687 MLOAD
0x688 PUSH1 0x1
0x68a PUSH1 0xa0
0x68c PUSH1 0x2
0x68e EXP
0x68f SUB
0x690 AND
0x691 DUP3
0x692 MSTORE
0x693 DUP2
0x694 ADD
0x695 SWAP2
0x696 SWAP1
0x697 SWAP2
0x698 MSTORE
0x699 PUSH1 0x40
0x69b ADD
0x69c PUSH1 0x0
0x69e SHA3
0x69f SSTORE
0x6a0 PUSH1 0x1
0x6a2 ADD
0x6a3 PUSH2 0x60b
0x6a6 JUMP
---
0x67c: JUMPDEST 
0x67d: V541 = 0x20
0x681: V542 = MUL 0x20 S0
0x684: V543 = ADD V111 V542
0x686: V544 = ADD 0x20 V543
0x687: V545 = M[V544]
0x688: V546 = 0x1
0x68a: V547 = 0xa0
0x68c: V548 = 0x2
0x68e: V549 = EXP 0x2 0xa0
0x68f: V550 = SUB 0x10000000000000000000000000000000000000000 0x1
0x690: V551 = AND 0xffffffffffffffffffffffffffffffffffffffff V545
0x692: M[0x0] = V551
0x694: V552 = ADD 0x0 0x20
0x698: M[0x20] = 0x1
0x699: V553 = 0x40
0x69b: V554 = ADD 0x40 0x0
0x69c: V555 = 0x0
0x69e: V556 = SHA3 0x0 0x40
0x69f: S[V556] = V533
0x6a0: V557 = 0x1
0x6a2: V558 = ADD 0x1 S5
0x6a3: V559 = 0x60b
0x6a6: JUMP 0x60b
---
Entry stack: [V11, 0x8d, V111, V126, S5, V533, 0x1, 0x0, V111, S0]
Stack pops: 6
Stack additions: [V558]
Exit stack: [V11, 0x8d, V111, V126, V558]

================================

Block 0x6a7
[0x6a7:0x6b5]
---
Predecessors: [0x221]
Successors: [0x22a]
---
0x6a7 JUMPDEST
0x6a8 PUSH1 0x0
0x6aa SLOAD
0x6ab PUSH1 0x1
0x6ad PUSH1 0xa0
0x6af PUSH1 0x2
0x6b1 EXP
0x6b2 SUB
0x6b3 AND
0x6b4 DUP2
0x6b5 JUMP
---
0x6a7: JUMPDEST 
0x6a8: V560 = 0x0
0x6aa: V561 = S[0x0]
0x6ab: V562 = 0x1
0x6ad: V563 = 0xa0
0x6af: V564 = 0x2
0x6b1: V565 = EXP 0x2 0xa0
0x6b2: V566 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6b3: V567 = AND 0xffffffffffffffffffffffffffffffffffffffff V561
0x6b5: JUMP 0x22a
---
Entry stack: [V11, 0x22a]
Stack pops: 1
Stack additions: [S0, V567]
Exit stack: [V11, 0x22a, V567]

================================

Block 0x6b6
[0x6b6:0x6c8]
---
Predecessors: [0x252]
Successors: [0x6c9, 0x706]
---
0x6b6 JUMPDEST
0x6b7 PUSH1 0x0
0x6b9 SLOAD
0x6ba PUSH1 0x1
0x6bc PUSH1 0xa0
0x6be PUSH1 0x2
0x6c0 EXP
0x6c1 SUB
0x6c2 AND
0x6c3 CALLER
0x6c4 EQ
0x6c5 PUSH2 0x706
0x6c8 JUMPI
---
0x6b6: JUMPDEST 
0x6b7: V568 = 0x0
0x6b9: V569 = S[0x0]
0x6ba: V570 = 0x1
0x6bc: V571 = 0xa0
0x6be: V572 = 0x2
0x6c0: V573 = EXP 0x2 0xa0
0x6c1: V574 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6c2: V575 = AND 0xffffffffffffffffffffffffffffffffffffffff V569
0x6c3: V576 = CALLER
0x6c4: V577 = EQ V576 V575
0x6c5: V578 = 0x706
0x6c8: JUMPI 0x706 V577
---
Entry stack: [V11, 0x8d, V168]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V168]

================================

Block 0x6c9
[0x6c9:0x705]
---
Predecessors: [0x6b6]
Successors: []
---
0x6c9 PUSH1 0x40
0x6cb DUP1
0x6cc MLOAD
0x6cd PUSH1 0xe5
0x6cf PUSH1 0x2
0x6d1 EXP
0x6d2 PUSH3 0x461bcd
0x6d6 MUL
0x6d7 DUP2
0x6d8 MSTORE
0x6d9 PUSH1 0x20
0x6db PUSH1 0x4
0x6dd DUP3
0x6de ADD
0x6df MSTORE
0x6e0 PUSH1 0xe
0x6e2 PUSH1 0x24
0x6e4 DUP3
0x6e5 ADD
0x6e6 MSTORE
0x6e7 PUSH1 0x0
0x6e9 DUP1
0x6ea MLOAD
0x6eb PUSH1 0x20
0x6ed PUSH2 0x743
0x6f0 DUP4
0x6f1 CODECOPY
0x6f2 DUP2
0x6f3 MLOAD
0x6f4 SWAP2
0x6f5 MSTORE
0x6f6 PUSH1 0x44
0x6f8 DUP3
0x6f9 ADD
0x6fa MSTORE
0x6fb SWAP1
0x6fc MLOAD
0x6fd SWAP1
0x6fe DUP2
0x6ff SWAP1
0x700 SUB
0x701 PUSH1 0x64
0x703 ADD
0x704 SWAP1
0x705 REVERT
---
0x6c9: V579 = 0x40
0x6cc: V580 = M[0x40]
0x6cd: V581 = 0xe5
0x6cf: V582 = 0x2
0x6d1: V583 = EXP 0x2 0xe5
0x6d2: V584 = 0x461bcd
0x6d6: V585 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x6d8: M[V580] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x6d9: V586 = 0x20
0x6db: V587 = 0x4
0x6de: V588 = ADD V580 0x4
0x6df: M[V588] = 0x20
0x6e0: V589 = 0xe
0x6e2: V590 = 0x24
0x6e5: V591 = ADD V580 0x24
0x6e6: M[V591] = 0xe
0x6e7: V592 = 0x0
0x6ea: V593 = M[0x0]
0x6eb: V594 = 0x20
0x6ed: V595 = 0x743
0x6f1: CODECOPY 0x0 0x743 0x20
0x6f3: V596 = M[0x0]
0x6f5: M[0x0] = V593
0x6f6: V597 = 0x44
0x6f9: V598 = ADD V580 0x44
0x6fa: M[V598] = V596
0x6fc: V599 = M[0x40]
0x700: V600 = SUB V580 V599
0x701: V601 = 0x64
0x703: V602 = ADD 0x64 V600
0x705: REVERT V599 V602
---
Entry stack: [V11, 0x8d, V168]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8d, V168]

================================

Block 0x706
[0x706:0x715]
---
Predecessors: [0x6b6]
Successors: [0x4fb, 0x716]
---
0x706 JUMPDEST
0x707 PUSH1 0x1
0x709 PUSH1 0xa0
0x70b PUSH1 0x2
0x70d EXP
0x70e SUB
0x70f DUP2
0x710 AND
0x711 ISZERO
0x712 PUSH2 0x4fb
0x715 JUMPI
---
0x706: JUMPDEST 
0x707: V603 = 0x1
0x709: V604 = 0xa0
0x70b: V605 = 0x2
0x70d: V606 = EXP 0x2 0xa0
0x70e: V607 = SUB 0x10000000000000000000000000000000000000000 0x1
0x710: V608 = AND V168 0xffffffffffffffffffffffffffffffffffffffff
0x711: V609 = ISZERO V608
0x712: V610 = 0x4fb
0x715: JUMPI 0x4fb V609
---
Entry stack: [V11, 0x8d, V168]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x8d, V168]

================================

Block 0x716
[0x716:0x741]
---
Predecessors: [0x706]
Successors: [0x8d]
---
0x716 PUSH1 0x0
0x718 DUP1
0x719 SLOAD
0x71a PUSH1 0x1
0x71c PUSH1 0xa0
0x71e PUSH1 0x2
0x720 EXP
0x721 SUB
0x722 DUP4
0x723 AND
0x724 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x739 NOT
0x73a SWAP1
0x73b SWAP2
0x73c AND
0x73d OR
0x73e SWAP1
0x73f SSTORE
0x740 POP
0x741 JUMP
---
0x716: V611 = 0x0
0x719: V612 = S[0x0]
0x71a: V613 = 0x1
0x71c: V614 = 0xa0
0x71e: V615 = 0x2
0x720: V616 = EXP 0x2 0xa0
0x721: V617 = SUB 0x10000000000000000000000000000000000000000 0x1
0x723: V618 = AND V168 0xffffffffffffffffffffffffffffffffffffffff
0x724: V619 = 0xffffffffffffffffffffffffffffffffffffffff
0x739: V620 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x73c: V621 = AND V612 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x73d: V622 = OR V621 V618
0x73f: S[0x0] = V622
0x741: JUMP 0x8d
---
Entry stack: [V11, 0x8d, V168]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x742
[0x742:0x78d]
---
Predecessors: []
Successors: []
---
0x742 STOP
0x743 PUSH16 0x6e6c7920666f72206f776e6572000000
0x754 STOP
0x755 STOP
0x756 STOP
0x757 STOP
0x758 STOP
0x759 STOP
0x75a STOP
0x75b STOP
0x75c STOP
0x75d STOP
0x75e STOP
0x75f STOP
0x760 STOP
0x761 STOP
0x762 STOP
0x763 LOG1
0x764 PUSH6 0x627a7a723058
0x76b SHA3
0x76c PUSH23 0xfbb8cb263910528a4f927cbae2a317c5c12e346ed1ac2f
0x784 SWAP6
0x785 SHR
0x786 MISSING 0xc4
0x787 MISSING 0xd7
0x788 MISSING 0xc0
0x789 DUP14
0x78a SWAP11
0x78b MISSING 0xa9
0x78c STOP
0x78d MISSING 0x29
---
0x742: STOP 
0x743: V623 = 0x6e6c7920666f72206f776e6572000000
0x754: STOP 
0x755: STOP 
0x756: STOP 
0x757: STOP 
0x758: STOP 
0x759: STOP 
0x75a: STOP 
0x75b: STOP 
0x75c: STOP 
0x75d: STOP 
0x75e: STOP 
0x75f: STOP 
0x760: STOP 
0x761: STOP 
0x762: STOP 
0x763: LOG S0 S1 S2
0x764: V624 = 0x627a7a723058
0x76b: V625 = SHA3 0x627a7a723058 S3
0x76c: V626 = 0xfbb8cb263910528a4f927cbae2a317c5c12e346ed1ac2f
0x785: V627 = SHR S8 V625
0x786: MISSING 0xc4
0x787: MISSING 0xd7
0x788: MISSING 0xc0
0x78b: MISSING 0xa9
0x78c: STOP 
0x78d: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0x6e6c7920666f72206f776e6572000000, V627, S4, S5, S6, S7, 0xfbb8cb263910528a4f927cbae2a317c5c12e346ed1ac2f, S10, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S13, S11, S12, S13]
Exit stack: []

================================

Function 0:
Public function signature: 0x1aeaaae8
Entry block: 0x8f
Exit block: 0x8d
Body: 0x8d, 0x8f, 0x97, 0x9b, 0x267, 0x27a, 0x2b7

Function 1:
Public function signature: 0x2e4d59c4
Entry block: 0xa9
Exit block: 0xca
Body: 0xa9, 0xb1, 0xb5, 0xca, 0x2f7

Function 2:
Public function signature: 0x3ccfd60b
Entry block: 0xdc
Exit block: 0x8d
Body: 0x8d, 0xdc, 0x312, 0x33b, 0x38a, 0x3a0, 0x3ef, 0x428, 0x431

Function 3:
Public function signature: 0x49649fbf
Entry block: 0xe4
Exit block: 0x8d
Body: 0x8d, 0xe4, 0xec, 0xf0, 0x470, 0x483, 0x4c0, 0x4f2, 0x4fb

Function 4:
Public function signature: 0x50883b2d
Entry block: 0xf9
Exit block: 0x585
Body: 0x8d, 0xf9, 0x101, 0x105, 0x4fe, 0x512, 0x54f, 0x553, 0x55d, 0x569, 0x56a, 0x585, 0x586, 0x5b1

Function 5:
Public function signature: 0x7fcff511
Entry block: 0x187
Exit block: 0x67b
Body: 0x8d, 0x187, 0x18f, 0x193, 0x5b1, 0x5b6, 0x5ca, 0x607, 0x60b, 0x615, 0x621, 0x622, 0x63d, 0x63e, 0x67b, 0x67c

Function 6:
Public function signature: 0x8da5cb5b
Entry block: 0x215
Exit block: 0x22a
Body: 0x215, 0x21d, 0x221, 0x22a, 0x6a7

Function 7:
Public function signature: 0xf2fde38b
Entry block: 0x246
Exit block: 0x8d
Body: 0x8d, 0x246, 0x24e, 0x252, 0x4fb, 0x6b6, 0x6c9, 0x706, 0x716

Function 8:
Public fallback function
Entry block: 0x8d
Exit block: 0x8d
Body: 0x8d

