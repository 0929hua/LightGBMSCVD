Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x78]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x78
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x78
0xc: JUMPI 0x78 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0xd1]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x1be19560
0x3c EQ
0x3d PUSH2 0xd1
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x1be19560
0x3c: V13 = EQ 0x1be19560 V11
0x3d: V14 = 0xd1
0x40: JUMPI 0xd1 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x114]
---
0x41 DUP1
0x42 PUSH4 0x6c91ba72
0x47 EQ
0x48 PUSH2 0x114
0x4b JUMPI
---
0x42: V15 = 0x6c91ba72
0x47: V16 = EQ 0x6c91ba72 V11
0x48: V17 = 0x114
0x4b: JUMPI 0x114 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x141]
---
0x4c DUP1
0x4d PUSH4 0x8da5cb5b
0x52 EQ
0x53 PUSH2 0x141
0x56 JUMPI
---
0x4d: V18 = 0x8da5cb5b
0x52: V19 = EQ 0x8da5cb5b V11
0x53: V20 = 0x141
0x56: JUMPI 0x141 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x198]
---
0x57 DUP1
0x58 PUSH4 0xb99152d0
0x5d EQ
0x5e PUSH2 0x198
0x61 JUMPI
---
0x58: V21 = 0xb99152d0
0x5d: V22 = EQ 0xb99152d0 V11
0x5e: V23 = 0x198
0x61: JUMPI 0x198 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x1ef]
---
0x62 DUP1
0x63 PUSH4 0xf244cb9c
0x68 EQ
0x69 PUSH2 0x1ef
0x6c JUMPI
---
0x63: V24 = 0xf244cb9c
0x68: V25 = EQ 0xf244cb9c V11
0x69: V26 = 0x1ef
0x6c: JUMPI 0x1ef V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x21e]
---
0x6d DUP1
0x6e PUSH4 0xf2fde38b
0x73 EQ
0x74 PUSH2 0x21e
0x77 JUMPI
---
0x6e: V27 = 0xf2fde38b
0x73: V28 = EQ 0xf2fde38b V11
0x74: V29 = 0x21e
0x77: JUMPI 0x21e V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0xce]
---
Predecessors: [0x0, 0x6d]
Successors: [0x261]
---
0x78 JUMPDEST
0x79 CALLER
0x7a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8f AND
0x90 PUSH32 0x1e57e3bb474320be3d2c77138f75b7c3941292d647f5f9634e33a8e94e0e069b
0xb1 CALLVALUE
0xb2 PUSH1 0x40
0xb4 MLOAD
0xb5 DUP1
0xb6 DUP3
0xb7 DUP2
0xb8 MSTORE
0xb9 PUSH1 0x20
0xbb ADD
0xbc SWAP2
0xbd POP
0xbe POP
0xbf PUSH1 0x40
0xc1 MLOAD
0xc2 DUP1
0xc3 SWAP2
0xc4 SUB
0xc5 SWAP1
0xc6 LOG2
0xc7 PUSH2 0xcf
0xca CALLVALUE
0xcb PUSH2 0x261
0xce JUMP
---
0x78: JUMPDEST 
0x79: V30 = CALLER
0x7a: V31 = 0xffffffffffffffffffffffffffffffffffffffff
0x8f: V32 = AND 0xffffffffffffffffffffffffffffffffffffffff V30
0x90: V33 = 0x1e57e3bb474320be3d2c77138f75b7c3941292d647f5f9634e33a8e94e0e069b
0xb1: V34 = CALLVALUE
0xb2: V35 = 0x40
0xb4: V36 = M[0x40]
0xb8: M[V36] = V34
0xb9: V37 = 0x20
0xbb: V38 = ADD 0x20 V36
0xbf: V39 = 0x40
0xc1: V40 = M[0x40]
0xc4: V41 = SUB V38 V40
0xc6: LOG V40 V41 0x1e57e3bb474320be3d2c77138f75b7c3941292d647f5f9634e33a8e94e0e069b V32
0xc7: V42 = 0xcf
0xca: V43 = CALLVALUE
0xcb: V44 = 0x261
0xce: JUMP 0x261
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xcf, V43]
Exit stack: [V11, 0xcf, V43]

================================

Block 0xcf
[0xcf:0xd0]
---
Predecessors: [0x2d7]
Successors: []
---
0xcf JUMPDEST
0xd0 STOP
---
0xcf: JUMPDEST 
0xd0: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd1
[0xd1:0xd8]
---
Predecessors: [0xd]
Successors: [0xd9, 0xdd]
---
0xd1 JUMPDEST
0xd2 CALLVALUE
0xd3 DUP1
0xd4 ISZERO
0xd5 PUSH2 0xdd
0xd8 JUMPI
---
0xd1: JUMPDEST 
0xd2: V45 = CALLVALUE
0xd4: V46 = ISZERO V45
0xd5: V47 = 0xdd
0xd8: JUMPI 0xdd V46
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V45]
Exit stack: [V11, V45]

================================

Block 0xd9
[0xd9:0xdc]
---
Predecessors: [0xd1]
Successors: []
---
0xd9 PUSH1 0x0
0xdb DUP1
0xdc REVERT
---
0xd9: V48 = 0x0
0xdc: REVERT 0x0 0x0
---
Entry stack: [V11, V45]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V45]

================================

Block 0xdd
[0xdd:0x111]
---
Predecessors: [0xd1]
Successors: [0x34a]
---
0xdd JUMPDEST
0xde POP
0xdf PUSH2 0x112
0xe2 PUSH1 0x4
0xe4 DUP1
0xe5 CALLDATASIZE
0xe6 SUB
0xe7 DUP2
0xe8 ADD
0xe9 SWAP1
0xea DUP1
0xeb DUP1
0xec CALLDATALOAD
0xed PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x102 AND
0x103 SWAP1
0x104 PUSH1 0x20
0x106 ADD
0x107 SWAP1
0x108 SWAP3
0x109 SWAP2
0x10a SWAP1
0x10b POP
0x10c POP
0x10d POP
0x10e PUSH2 0x34a
0x111 JUMP
---
0xdd: JUMPDEST 
0xdf: V49 = 0x112
0xe2: V50 = 0x4
0xe5: V51 = CALLDATASIZE
0xe6: V52 = SUB V51 0x4
0xe8: V53 = ADD 0x4 V52
0xec: V54 = CALLDATALOAD 0x4
0xed: V55 = 0xffffffffffffffffffffffffffffffffffffffff
0x102: V56 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0x104: V57 = 0x20
0x106: V58 = ADD 0x20 0x4
0x10e: V59 = 0x34a
0x111: JUMP 0x34a
---
Entry stack: [V11, V45]
Stack pops: 1
Stack additions: [0x112, V56]
Exit stack: [V11, 0x112, V56]

================================

Block 0x112
[0x112:0x113]
---
Predecessors: [0x580]
Successors: []
---
0x112 JUMPDEST
0x113 STOP
---
0x112: JUMPDEST 
0x113: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x114
[0x114:0x11b]
---
Predecessors: [0x41]
Successors: [0x11c, 0x120]
---
0x114 JUMPDEST
0x115 CALLVALUE
0x116 DUP1
0x117 ISZERO
0x118 PUSH2 0x120
0x11b JUMPI
---
0x114: JUMPDEST 
0x115: V60 = CALLVALUE
0x117: V61 = ISZERO V60
0x118: V62 = 0x120
0x11b: JUMPI 0x120 V61
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V60]
Exit stack: [V11, V60]

================================

Block 0x11c
[0x11c:0x11f]
---
Predecessors: [0x114]
Successors: []
---
0x11c PUSH1 0x0
0x11e DUP1
0x11f REVERT
---
0x11c: V63 = 0x0
0x11f: REVERT 0x0 0x0
---
Entry stack: [V11, V60]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V60]

================================

Block 0x120
[0x120:0x13e]
---
Predecessors: [0x114]
Successors: [0x261]
---
0x120 JUMPDEST
0x121 POP
0x122 PUSH2 0x13f
0x125 PUSH1 0x4
0x127 DUP1
0x128 CALLDATASIZE
0x129 SUB
0x12a DUP2
0x12b ADD
0x12c SWAP1
0x12d DUP1
0x12e DUP1
0x12f CALLDATALOAD
0x130 SWAP1
0x131 PUSH1 0x20
0x133 ADD
0x134 SWAP1
0x135 SWAP3
0x136 SWAP2
0x137 SWAP1
0x138 POP
0x139 POP
0x13a POP
0x13b PUSH2 0x261
0x13e JUMP
---
0x120: JUMPDEST 
0x122: V64 = 0x13f
0x125: V65 = 0x4
0x128: V66 = CALLDATASIZE
0x129: V67 = SUB V66 0x4
0x12b: V68 = ADD 0x4 V67
0x12f: V69 = CALLDATALOAD 0x4
0x131: V70 = 0x20
0x133: V71 = ADD 0x20 0x4
0x13b: V72 = 0x261
0x13e: JUMP 0x261
---
Entry stack: [V11, V60]
Stack pops: 1
Stack additions: [0x13f, V69]
Exit stack: [V11, 0x13f, V69]

================================

Block 0x13f
[0x13f:0x140]
---
Predecessors: [0x2d7]
Successors: []
---
0x13f JUMPDEST
0x140 STOP
---
0x13f: JUMPDEST 
0x140: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x141
[0x141:0x148]
---
Predecessors: [0x4c]
Successors: [0x149, 0x14d]
---
0x141 JUMPDEST
0x142 CALLVALUE
0x143 DUP1
0x144 ISZERO
0x145 PUSH2 0x14d
0x148 JUMPI
---
0x141: JUMPDEST 
0x142: V73 = CALLVALUE
0x144: V74 = ISZERO V73
0x145: V75 = 0x14d
0x148: JUMPI 0x14d V74
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V73]
Exit stack: [V11, V73]

================================

Block 0x149
[0x149:0x14c]
---
Predecessors: [0x141]
Successors: []
---
0x149 PUSH1 0x0
0x14b DUP1
0x14c REVERT
---
0x149: V76 = 0x0
0x14c: REVERT 0x0 0x0
---
Entry stack: [V11, V73]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V73]

================================

Block 0x14d
[0x14d:0x155]
---
Predecessors: [0x141]
Successors: [0x63a]
---
0x14d JUMPDEST
0x14e POP
0x14f PUSH2 0x156
0x152 PUSH2 0x63a
0x155 JUMP
---
0x14d: JUMPDEST 
0x14f: V77 = 0x156
0x152: V78 = 0x63a
0x155: JUMP 0x63a
---
Entry stack: [V11, V73]
Stack pops: 1
Stack additions: [0x156]
Exit stack: [V11, 0x156]

================================

Block 0x156
[0x156:0x197]
---
Predecessors: [0x63a]
Successors: []
---
0x156 JUMPDEST
0x157 PUSH1 0x40
0x159 MLOAD
0x15a DUP1
0x15b DUP3
0x15c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x171 AND
0x172 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x187 AND
0x188 DUP2
0x189 MSTORE
0x18a PUSH1 0x20
0x18c ADD
0x18d SWAP2
0x18e POP
0x18f POP
0x190 PUSH1 0x40
0x192 MLOAD
0x193 DUP1
0x194 SWAP2
0x195 SUB
0x196 SWAP1
0x197 RETURN
---
0x156: JUMPDEST 
0x157: V79 = 0x40
0x159: V80 = M[0x40]
0x15c: V81 = 0xffffffffffffffffffffffffffffffffffffffff
0x171: V82 = AND 0xffffffffffffffffffffffffffffffffffffffff V352
0x172: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x187: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V82
0x189: M[V80] = V84
0x18a: V85 = 0x20
0x18c: V86 = ADD 0x20 V80
0x190: V87 = 0x40
0x192: V88 = M[0x40]
0x195: V89 = SUB V86 V88
0x197: RETURN V88 V89
---
Entry stack: [V11, 0x156, V352]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x156]

================================

Block 0x198
[0x198:0x19f]
---
Predecessors: [0x57]
Successors: [0x1a0, 0x1a4]
---
0x198 JUMPDEST
0x199 CALLVALUE
0x19a DUP1
0x19b ISZERO
0x19c PUSH2 0x1a4
0x19f JUMPI
---
0x198: JUMPDEST 
0x199: V90 = CALLVALUE
0x19b: V91 = ISZERO V90
0x19c: V92 = 0x1a4
0x19f: JUMPI 0x1a4 V91
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V90]
Exit stack: [V11, V90]

================================

Block 0x1a0
[0x1a0:0x1a3]
---
Predecessors: [0x198]
Successors: []
---
0x1a0 PUSH1 0x0
0x1a2 DUP1
0x1a3 REVERT
---
0x1a0: V93 = 0x0
0x1a3: REVERT 0x0 0x0
---
Entry stack: [V11, V90]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V90]

================================

Block 0x1a4
[0x1a4:0x1d8]
---
Predecessors: [0x198]
Successors: [0x65f]
---
0x1a4 JUMPDEST
0x1a5 POP
0x1a6 PUSH2 0x1d9
0x1a9 PUSH1 0x4
0x1ab DUP1
0x1ac CALLDATASIZE
0x1ad SUB
0x1ae DUP2
0x1af ADD
0x1b0 SWAP1
0x1b1 DUP1
0x1b2 DUP1
0x1b3 CALLDATALOAD
0x1b4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c9 AND
0x1ca SWAP1
0x1cb PUSH1 0x20
0x1cd ADD
0x1ce SWAP1
0x1cf SWAP3
0x1d0 SWAP2
0x1d1 SWAP1
0x1d2 POP
0x1d3 POP
0x1d4 POP
0x1d5 PUSH2 0x65f
0x1d8 JUMP
---
0x1a4: JUMPDEST 
0x1a6: V94 = 0x1d9
0x1a9: V95 = 0x4
0x1ac: V96 = CALLDATASIZE
0x1ad: V97 = SUB V96 0x4
0x1af: V98 = ADD 0x4 V97
0x1b3: V99 = CALLDATALOAD 0x4
0x1b4: V100 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c9: V101 = AND 0xffffffffffffffffffffffffffffffffffffffff V99
0x1cb: V102 = 0x20
0x1cd: V103 = ADD 0x20 0x4
0x1d5: V104 = 0x65f
0x1d8: JUMP 0x65f
---
Entry stack: [V11, V90]
Stack pops: 1
Stack additions: [0x1d9, V101]
Exit stack: [V11, 0x1d9, V101]

================================

Block 0x1d9
[0x1d9:0x1ee]
---
Predecessors: [0x726]
Successors: []
---
0x1d9 JUMPDEST
0x1da PUSH1 0x40
0x1dc MLOAD
0x1dd DUP1
0x1de DUP3
0x1df DUP2
0x1e0 MSTORE
0x1e1 PUSH1 0x20
0x1e3 ADD
0x1e4 SWAP2
0x1e5 POP
0x1e6 POP
0x1e7 PUSH1 0x40
0x1e9 MLOAD
0x1ea DUP1
0x1eb SWAP2
0x1ec SUB
0x1ed SWAP1
0x1ee RETURN
---
0x1d9: JUMPDEST 
0x1da: V105 = 0x40
0x1dc: V106 = M[0x40]
0x1e0: M[V106] = V400
0x1e1: V107 = 0x20
0x1e3: V108 = ADD 0x20 V106
0x1e7: V109 = 0x40
0x1e9: V110 = M[0x40]
0x1ec: V111 = SUB V108 V110
0x1ee: RETURN V110 V111
---
Entry stack: [V11, V400]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1ef
[0x1ef:0x1f6]
---
Predecessors: [0x62]
Successors: [0x1f7, 0x1fb]
---
0x1ef JUMPDEST
0x1f0 CALLVALUE
0x1f1 DUP1
0x1f2 ISZERO
0x1f3 PUSH2 0x1fb
0x1f6 JUMPI
---
0x1ef: JUMPDEST 
0x1f0: V112 = CALLVALUE
0x1f2: V113 = ISZERO V112
0x1f3: V114 = 0x1fb
0x1f6: JUMPI 0x1fb V113
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V112]
Exit stack: [V11, V112]

================================

Block 0x1f7
[0x1f7:0x1fa]
---
Predecessors: [0x1ef]
Successors: []
---
0x1f7 PUSH1 0x0
0x1f9 DUP1
0x1fa REVERT
---
0x1f7: V115 = 0x0
0x1fa: REVERT 0x0 0x0
---
Entry stack: [V11, V112]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V112]

================================

Block 0x1fb
[0x1fb:0x203]
---
Predecessors: [0x1ef]
Successors: [0x73e]
---
0x1fb JUMPDEST
0x1fc POP
0x1fd PUSH2 0x204
0x200 PUSH2 0x73e
0x203 JUMP
---
0x1fb: JUMPDEST 
0x1fd: V116 = 0x204
0x200: V117 = 0x73e
0x203: JUMP 0x73e
---
Entry stack: [V11, V112]
Stack pops: 1
Stack additions: [0x204]
Exit stack: [V11, 0x204]

================================

Block 0x204
[0x204:0x21d]
---
Predecessors: [0x73e]
Successors: []
---
0x204 JUMPDEST
0x205 PUSH1 0x40
0x207 MLOAD
0x208 DUP1
0x209 DUP3
0x20a ISZERO
0x20b ISZERO
0x20c ISZERO
0x20d ISZERO
0x20e DUP2
0x20f MSTORE
0x210 PUSH1 0x20
0x212 ADD
0x213 SWAP2
0x214 POP
0x215 POP
0x216 PUSH1 0x40
0x218 MLOAD
0x219 DUP1
0x21a SWAP2
0x21b SUB
0x21c SWAP1
0x21d RETURN
---
0x204: JUMPDEST 
0x205: V118 = 0x40
0x207: V119 = M[0x40]
0x20a: V120 = ISZERO 0x1
0x20b: V121 = ISZERO 0x0
0x20c: V122 = ISZERO 0x1
0x20d: V123 = ISZERO 0x0
0x20f: M[V119] = 0x1
0x210: V124 = 0x20
0x212: V125 = ADD 0x20 V119
0x216: V126 = 0x40
0x218: V127 = M[0x40]
0x21b: V128 = SUB V125 V127
0x21d: RETURN V127 V128
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x21e
[0x21e:0x225]
---
Predecessors: [0x6d]
Successors: [0x226, 0x22a]
---
0x21e JUMPDEST
0x21f CALLVALUE
0x220 DUP1
0x221 ISZERO
0x222 PUSH2 0x22a
0x225 JUMPI
---
0x21e: JUMPDEST 
0x21f: V129 = CALLVALUE
0x221: V130 = ISZERO V129
0x222: V131 = 0x22a
0x225: JUMPI 0x22a V130
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V129]
Exit stack: [V11, V129]

================================

Block 0x226
[0x226:0x229]
---
Predecessors: [0x21e]
Successors: []
---
0x226 PUSH1 0x0
0x228 DUP1
0x229 REVERT
---
0x226: V132 = 0x0
0x229: REVERT 0x0 0x0
---
Entry stack: [V11, V129]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V129]

================================

Block 0x22a
[0x22a:0x25e]
---
Predecessors: [0x21e]
Successors: [0x747]
---
0x22a JUMPDEST
0x22b POP
0x22c PUSH2 0x25f
0x22f PUSH1 0x4
0x231 DUP1
0x232 CALLDATASIZE
0x233 SUB
0x234 DUP2
0x235 ADD
0x236 SWAP1
0x237 DUP1
0x238 DUP1
0x239 CALLDATALOAD
0x23a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24f AND
0x250 SWAP1
0x251 PUSH1 0x20
0x253 ADD
0x254 SWAP1
0x255 SWAP3
0x256 SWAP2
0x257 SWAP1
0x258 POP
0x259 POP
0x25a POP
0x25b PUSH2 0x747
0x25e JUMP
---
0x22a: JUMPDEST 
0x22c: V133 = 0x25f
0x22f: V134 = 0x4
0x232: V135 = CALLDATASIZE
0x233: V136 = SUB V135 0x4
0x235: V137 = ADD 0x4 V136
0x239: V138 = CALLDATALOAD 0x4
0x23a: V139 = 0xffffffffffffffffffffffffffffffffffffffff
0x24f: V140 = AND 0xffffffffffffffffffffffffffffffffffffffff V138
0x251: V141 = 0x20
0x253: V142 = ADD 0x20 0x4
0x25b: V143 = 0x747
0x25e: JUMP 0x747
---
Entry stack: [V11, V129]
Stack pops: 1
Stack additions: [0x25f, V140]
Exit stack: [V11, 0x25f, V140]

================================

Block 0x25f
[0x25f:0x260]
---
Predecessors: [0x7de]
Successors: []
---
0x25f JUMPDEST
0x260 STOP
---
0x25f: JUMPDEST 
0x260: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x261
[0x261:0x26b]
---
Predecessors: [0x78, 0x120]
Successors: [0x26c, 0x270]
---
0x261 JUMPDEST
0x262 PUSH1 0x0
0x264 DUP2
0x265 GT
0x266 ISZERO
0x267 ISZERO
0x268 PUSH2 0x270
0x26b JUMPI
---
0x261: JUMPDEST 
0x262: V144 = 0x0
0x265: V145 = GT S0 0x0
0x266: V146 = ISZERO V145
0x267: V147 = ISZERO V146
0x268: V148 = 0x270
0x26b: JUMPI 0x270 V147
---
Entry stack: [V11, {0xcf, 0x13f}, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, {0xcf, 0x13f}, S0]

================================

Block 0x26c
[0x26c:0x26f]
---
Predecessors: [0x261]
Successors: []
---
0x26c PUSH1 0x0
0x26e DUP1
0x26f REVERT
---
0x26c: V149 = 0x0
0x26f: REVERT 0x0 0x0
---
Entry stack: [V11, {0xcf, 0x13f}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0xcf, 0x13f}, S0]

================================

Block 0x270
[0x270:0x2cd]
---
Predecessors: [0x261]
Successors: [0x2ce, 0x2d7]
---
0x270 JUMPDEST
0x271 PUSH1 0x0
0x273 DUP1
0x274 SWAP1
0x275 SLOAD
0x276 SWAP1
0x277 PUSH2 0x100
0x27a EXP
0x27b SWAP1
0x27c DIV
0x27d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x292 AND
0x293 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a8 AND
0x2a9 PUSH2 0x8fc
0x2ac DUP3
0x2ad SWAP1
0x2ae DUP2
0x2af ISZERO
0x2b0 MUL
0x2b1 SWAP1
0x2b2 PUSH1 0x40
0x2b4 MLOAD
0x2b5 PUSH1 0x0
0x2b7 PUSH1 0x40
0x2b9 MLOAD
0x2ba DUP1
0x2bb DUP4
0x2bc SUB
0x2bd DUP2
0x2be DUP6
0x2bf DUP9
0x2c0 DUP9
0x2c1 CALL
0x2c2 SWAP4
0x2c3 POP
0x2c4 POP
0x2c5 POP
0x2c6 POP
0x2c7 ISZERO
0x2c8 DUP1
0x2c9 ISZERO
0x2ca PUSH2 0x2d7
0x2cd JUMPI
---
0x270: JUMPDEST 
0x271: V150 = 0x0
0x275: V151 = S[0x0]
0x277: V152 = 0x100
0x27a: V153 = EXP 0x100 0x0
0x27c: V154 = DIV V151 0x1
0x27d: V155 = 0xffffffffffffffffffffffffffffffffffffffff
0x292: V156 = AND 0xffffffffffffffffffffffffffffffffffffffff V154
0x293: V157 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a8: V158 = AND 0xffffffffffffffffffffffffffffffffffffffff V156
0x2a9: V159 = 0x8fc
0x2af: V160 = ISZERO S0
0x2b0: V161 = MUL V160 0x8fc
0x2b2: V162 = 0x40
0x2b4: V163 = M[0x40]
0x2b5: V164 = 0x0
0x2b7: V165 = 0x40
0x2b9: V166 = M[0x40]
0x2bc: V167 = SUB V163 V166
0x2c1: V168 = CALL V161 V158 S0 V166 V167 V166 0x0
0x2c7: V169 = ISZERO V168
0x2c9: V170 = ISZERO V169
0x2ca: V171 = 0x2d7
0x2cd: JUMPI 0x2d7 V170
---
Entry stack: [V11, {0xcf, 0x13f}, S0]
Stack pops: 1
Stack additions: [S0, V169]
Exit stack: [V11, {0xcf, 0x13f}, S0, V169]

================================

Block 0x2ce
[0x2ce:0x2d6]
---
Predecessors: [0x270]
Successors: []
---
0x2ce RETURNDATASIZE
0x2cf PUSH1 0x0
0x2d1 DUP1
0x2d2 RETURNDATACOPY
0x2d3 RETURNDATASIZE
0x2d4 PUSH1 0x0
0x2d6 REVERT
---
0x2ce: V172 = RETURNDATASIZE
0x2cf: V173 = 0x0
0x2d2: RETURNDATACOPY 0x0 0x0 V172
0x2d3: V174 = RETURNDATASIZE
0x2d4: V175 = 0x0
0x2d6: REVERT 0x0 V174
---
Entry stack: [V11, {0xcf, 0x13f}, S1, V169]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0xcf, 0x13f}, S1, V169]

================================

Block 0x2d7
[0x2d7:0x349]
---
Predecessors: [0x270]
Successors: [0xcf, 0x13f]
---
0x2d7 JUMPDEST
0x2d8 POP
0x2d9 PUSH1 0x0
0x2db DUP1
0x2dc SWAP1
0x2dd SLOAD
0x2de SWAP1
0x2df PUSH2 0x100
0x2e2 EXP
0x2e3 SWAP1
0x2e4 DIV
0x2e5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2fa AND
0x2fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x310 AND
0x311 PUSH32 0x6109e2559dfa766aaec7118351d48a523f0a4157f49c8d68749c8ac41318ad12
0x332 DUP3
0x333 PUSH1 0x40
0x335 MLOAD
0x336 DUP1
0x337 DUP3
0x338 DUP2
0x339 MSTORE
0x33a PUSH1 0x20
0x33c ADD
0x33d SWAP2
0x33e POP
0x33f POP
0x340 PUSH1 0x40
0x342 MLOAD
0x343 DUP1
0x344 SWAP2
0x345 SUB
0x346 SWAP1
0x347 LOG2
0x348 POP
0x349 JUMP
---
0x2d7: JUMPDEST 
0x2d9: V176 = 0x0
0x2dd: V177 = S[0x0]
0x2df: V178 = 0x100
0x2e2: V179 = EXP 0x100 0x0
0x2e4: V180 = DIV V177 0x1
0x2e5: V181 = 0xffffffffffffffffffffffffffffffffffffffff
0x2fa: V182 = AND 0xffffffffffffffffffffffffffffffffffffffff V180
0x2fb: V183 = 0xffffffffffffffffffffffffffffffffffffffff
0x310: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V182
0x311: V185 = 0x6109e2559dfa766aaec7118351d48a523f0a4157f49c8d68749c8ac41318ad12
0x333: V186 = 0x40
0x335: V187 = M[0x40]
0x339: M[V187] = S1
0x33a: V188 = 0x20
0x33c: V189 = ADD 0x20 V187
0x340: V190 = 0x40
0x342: V191 = M[0x40]
0x345: V192 = SUB V189 V191
0x347: LOG V191 V192 0x6109e2559dfa766aaec7118351d48a523f0a4157f49c8d68749c8ac41318ad12 V184
0x349: JUMP {0xcf, 0x13f}
---
Entry stack: [V11, {0xcf, 0x13f}, S1, V169]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x34a
[0x34a:0x3a3]
---
Predecessors: [0xdd]
Successors: [0x3a4, 0x3a8]
---
0x34a JUMPDEST
0x34b PUSH1 0x0
0x34d DUP1
0x34e PUSH1 0x0
0x350 DUP1
0x351 SWAP1
0x352 SLOAD
0x353 SWAP1
0x354 PUSH2 0x100
0x357 EXP
0x358 SWAP1
0x359 DIV
0x35a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x36f AND
0x370 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x385 AND
0x386 CALLER
0x387 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x39c AND
0x39d EQ
0x39e ISZERO
0x39f ISZERO
0x3a0 PUSH2 0x3a8
0x3a3 JUMPI
---
0x34a: JUMPDEST 
0x34b: V193 = 0x0
0x34e: V194 = 0x0
0x352: V195 = S[0x0]
0x354: V196 = 0x100
0x357: V197 = EXP 0x100 0x0
0x359: V198 = DIV V195 0x1
0x35a: V199 = 0xffffffffffffffffffffffffffffffffffffffff
0x36f: V200 = AND 0xffffffffffffffffffffffffffffffffffffffff V198
0x370: V201 = 0xffffffffffffffffffffffffffffffffffffffff
0x385: V202 = AND 0xffffffffffffffffffffffffffffffffffffffff V200
0x386: V203 = CALLER
0x387: V204 = 0xffffffffffffffffffffffffffffffffffffffff
0x39c: V205 = AND 0xffffffffffffffffffffffffffffffffffffffff V203
0x39d: V206 = EQ V205 V202
0x39e: V207 = ISZERO V206
0x39f: V208 = ISZERO V207
0x3a0: V209 = 0x3a8
0x3a3: JUMPI 0x3a8 V208
---
Entry stack: [V11, 0x112, V56]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0x112, V56, 0x0, 0x0]

================================

Block 0x3a4
[0x3a4:0x3a7]
---
Predecessors: [0x34a]
Successors: []
---
0x3a4 PUSH1 0x0
0x3a6 DUP1
0x3a7 REVERT
---
0x3a4: V210 = 0x0
0x3a7: REVERT 0x0 0x0
---
Entry stack: [V11, 0x112, V56, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x112, V56, 0x0, 0x0]

================================

Block 0x3a8
[0x3a8:0x441]
---
Predecessors: [0x34a]
Successors: [0x442, 0x446]
---
0x3a8 JUMPDEST
0x3a9 DUP3
0x3aa SWAP2
0x3ab POP
0x3ac DUP2
0x3ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c2 AND
0x3c3 PUSH4 0x70a08231
0x3c8 ADDRESS
0x3c9 PUSH1 0x40
0x3cb MLOAD
0x3cc DUP3
0x3cd PUSH4 0xffffffff
0x3d2 AND
0x3d3 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x3f1 MUL
0x3f2 DUP2
0x3f3 MSTORE
0x3f4 PUSH1 0x4
0x3f6 ADD
0x3f7 DUP1
0x3f8 DUP3
0x3f9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x40e AND
0x40f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x424 AND
0x425 DUP2
0x426 MSTORE
0x427 PUSH1 0x20
0x429 ADD
0x42a SWAP2
0x42b POP
0x42c POP
0x42d PUSH1 0x20
0x42f PUSH1 0x40
0x431 MLOAD
0x432 DUP1
0x433 DUP4
0x434 SUB
0x435 DUP2
0x436 PUSH1 0x0
0x438 DUP8
0x439 DUP1
0x43a EXTCODESIZE
0x43b ISZERO
0x43c DUP1
0x43d ISZERO
0x43e PUSH2 0x446
0x441 JUMPI
---
0x3a8: JUMPDEST 
0x3ad: V211 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c2: V212 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0x3c3: V213 = 0x70a08231
0x3c8: V214 = ADDRESS
0x3c9: V215 = 0x40
0x3cb: V216 = M[0x40]
0x3cd: V217 = 0xffffffff
0x3d2: V218 = AND 0xffffffff 0x70a08231
0x3d3: V219 = 0x100000000000000000000000000000000000000000000000000000000
0x3f1: V220 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x3f3: M[V216] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x3f4: V221 = 0x4
0x3f6: V222 = ADD 0x4 V216
0x3f9: V223 = 0xffffffffffffffffffffffffffffffffffffffff
0x40e: V224 = AND 0xffffffffffffffffffffffffffffffffffffffff V214
0x40f: V225 = 0xffffffffffffffffffffffffffffffffffffffff
0x424: V226 = AND 0xffffffffffffffffffffffffffffffffffffffff V224
0x426: M[V222] = V226
0x427: V227 = 0x20
0x429: V228 = ADD 0x20 V222
0x42d: V229 = 0x20
0x42f: V230 = 0x40
0x431: V231 = M[0x40]
0x434: V232 = SUB V228 V231
0x436: V233 = 0x0
0x43a: V234 = EXTCODESIZE V212
0x43b: V235 = ISZERO V234
0x43d: V236 = ISZERO V235
0x43e: V237 = 0x446
0x441: JUMPI 0x446 V236
---
Entry stack: [V11, 0x112, V56, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S2, S0, V212, 0x70a08231, V228, 0x20, V231, V232, V231, 0x0, V212, V235]
Exit stack: [V11, 0x112, V56, V56, 0x0, V212, 0x70a08231, V228, 0x20, V231, V232, V231, 0x0, V212, V235]

================================

Block 0x442
[0x442:0x445]
---
Predecessors: [0x3a8]
Successors: []
---
0x442 PUSH1 0x0
0x444 DUP1
0x445 REVERT
---
0x442: V238 = 0x0
0x445: REVERT 0x0 0x0
---
Entry stack: [V11, 0x112, V56, V56, 0x0, V212, 0x70a08231, V228, 0x20, V231, V232, V231, 0x0, V212, V235]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x112, V56, V56, 0x0, V212, 0x70a08231, V228, 0x20, V231, V232, V231, 0x0, V212, V235]

================================

Block 0x446
[0x446:0x450]
---
Predecessors: [0x3a8]
Successors: [0x451, 0x45a]
---
0x446 JUMPDEST
0x447 POP
0x448 GAS
0x449 CALL
0x44a ISZERO
0x44b DUP1
0x44c ISZERO
0x44d PUSH2 0x45a
0x450 JUMPI
---
0x446: JUMPDEST 
0x448: V239 = GAS
0x449: V240 = CALL V239 V212 0x0 V231 V232 V231 0x20
0x44a: V241 = ISZERO V240
0x44c: V242 = ISZERO V241
0x44d: V243 = 0x45a
0x450: JUMPI 0x45a V242
---
Entry stack: [V11, 0x112, V56, V56, 0x0, V212, 0x70a08231, V228, 0x20, V231, V232, V231, 0x0, V212, V235]
Stack pops: 7
Stack additions: [V241]
Exit stack: [V11, 0x112, V56, V56, 0x0, V212, 0x70a08231, V228, V241]

================================

Block 0x451
[0x451:0x459]
---
Predecessors: [0x446]
Successors: []
---
0x451 RETURNDATASIZE
0x452 PUSH1 0x0
0x454 DUP1
0x455 RETURNDATACOPY
0x456 RETURNDATASIZE
0x457 PUSH1 0x0
0x459 REVERT
---
0x451: V244 = RETURNDATASIZE
0x452: V245 = 0x0
0x455: RETURNDATACOPY 0x0 0x0 V244
0x456: V246 = RETURNDATASIZE
0x457: V247 = 0x0
0x459: REVERT 0x0 V246
---
Entry stack: [V11, 0x112, V56, V56, 0x0, V212, 0x70a08231, V228, V241]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x112, V56, V56, 0x0, V212, 0x70a08231, V228, V241]

================================

Block 0x45a
[0x45a:0x46b]
---
Predecessors: [0x446]
Successors: [0x46c, 0x470]
---
0x45a JUMPDEST
0x45b POP
0x45c POP
0x45d POP
0x45e POP
0x45f PUSH1 0x40
0x461 MLOAD
0x462 RETURNDATASIZE
0x463 PUSH1 0x20
0x465 DUP2
0x466 LT
0x467 ISZERO
0x468 PUSH2 0x470
0x46b JUMPI
---
0x45a: JUMPDEST 
0x45f: V248 = 0x40
0x461: V249 = M[0x40]
0x462: V250 = RETURNDATASIZE
0x463: V251 = 0x20
0x466: V252 = LT V250 0x20
0x467: V253 = ISZERO V252
0x468: V254 = 0x470
0x46b: JUMPI 0x470 V253
---
Entry stack: [V11, 0x112, V56, V56, 0x0, V212, 0x70a08231, V228, V241]
Stack pops: 4
Stack additions: [V249, V250]
Exit stack: [V11, 0x112, V56, V56, 0x0, V249, V250]

================================

Block 0x46c
[0x46c:0x46f]
---
Predecessors: [0x45a]
Successors: []
---
0x46c PUSH1 0x0
0x46e DUP1
0x46f REVERT
---
0x46c: V255 = 0x0
0x46f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x112, V56, V56, 0x0, V249, V250]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x112, V56, V56, 0x0, V249, V250]

================================

Block 0x470
[0x470:0x48d]
---
Predecessors: [0x45a]
Successors: [0x48e, 0x492]
---
0x470 JUMPDEST
0x471 DUP2
0x472 ADD
0x473 SWAP1
0x474 DUP1
0x475 DUP1
0x476 MLOAD
0x477 SWAP1
0x478 PUSH1 0x20
0x47a ADD
0x47b SWAP1
0x47c SWAP3
0x47d SWAP2
0x47e SWAP1
0x47f POP
0x480 POP
0x481 POP
0x482 SWAP1
0x483 POP
0x484 PUSH1 0x0
0x486 DUP2
0x487 GT
0x488 ISZERO
0x489 ISZERO
0x48a PUSH2 0x492
0x48d JUMPI
---
0x470: JUMPDEST 
0x472: V256 = ADD V249 V250
0x476: V257 = M[V249]
0x478: V258 = 0x20
0x47a: V259 = ADD 0x20 V249
0x484: V260 = 0x0
0x487: V261 = GT V257 0x0
0x488: V262 = ISZERO V261
0x489: V263 = ISZERO V262
0x48a: V264 = 0x492
0x48d: JUMPI 0x492 V263
---
Entry stack: [V11, 0x112, V56, V56, 0x0, V249, V250]
Stack pops: 3
Stack additions: [V257]
Exit stack: [V11, 0x112, V56, V56, V257]

================================

Block 0x48e
[0x48e:0x491]
---
Predecessors: [0x470]
Successors: []
---
0x48e PUSH1 0x0
0x490 DUP1
0x491 REVERT
---
0x48e: V265 = 0x0
0x491: REVERT 0x0 0x0
---
Entry stack: [V11, 0x112, V56, V56, V257]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x112, V56, V56, V257]

================================

Block 0x492
[0x492:0x551]
---
Predecessors: [0x470]
Successors: [0x552, 0x556]
---
0x492 JUMPDEST
0x493 DUP2
0x494 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4a9 AND
0x4aa PUSH4 0xa9059cbb
0x4af PUSH1 0x0
0x4b1 DUP1
0x4b2 SWAP1
0x4b3 SLOAD
0x4b4 SWAP1
0x4b5 PUSH2 0x100
0x4b8 EXP
0x4b9 SWAP1
0x4ba DIV
0x4bb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4d0 AND
0x4d1 DUP4
0x4d2 PUSH1 0x40
0x4d4 MLOAD
0x4d5 DUP4
0x4d6 PUSH4 0xffffffff
0x4db AND
0x4dc PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x4fa MUL
0x4fb DUP2
0x4fc MSTORE
0x4fd PUSH1 0x4
0x4ff ADD
0x500 DUP1
0x501 DUP4
0x502 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x517 AND
0x518 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x52d AND
0x52e DUP2
0x52f MSTORE
0x530 PUSH1 0x20
0x532 ADD
0x533 DUP3
0x534 DUP2
0x535 MSTORE
0x536 PUSH1 0x20
0x538 ADD
0x539 SWAP3
0x53a POP
0x53b POP
0x53c POP
0x53d PUSH1 0x20
0x53f PUSH1 0x40
0x541 MLOAD
0x542 DUP1
0x543 DUP4
0x544 SUB
0x545 DUP2
0x546 PUSH1 0x0
0x548 DUP8
0x549 DUP1
0x54a EXTCODESIZE
0x54b ISZERO
0x54c DUP1
0x54d ISZERO
0x54e PUSH2 0x556
0x551 JUMPI
---
0x492: JUMPDEST 
0x494: V266 = 0xffffffffffffffffffffffffffffffffffffffff
0x4a9: V267 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0x4aa: V268 = 0xa9059cbb
0x4af: V269 = 0x0
0x4b3: V270 = S[0x0]
0x4b5: V271 = 0x100
0x4b8: V272 = EXP 0x100 0x0
0x4ba: V273 = DIV V270 0x1
0x4bb: V274 = 0xffffffffffffffffffffffffffffffffffffffff
0x4d0: V275 = AND 0xffffffffffffffffffffffffffffffffffffffff V273
0x4d2: V276 = 0x40
0x4d4: V277 = M[0x40]
0x4d6: V278 = 0xffffffff
0x4db: V279 = AND 0xffffffff 0xa9059cbb
0x4dc: V280 = 0x100000000000000000000000000000000000000000000000000000000
0x4fa: V281 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x4fc: M[V277] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x4fd: V282 = 0x4
0x4ff: V283 = ADD 0x4 V277
0x502: V284 = 0xffffffffffffffffffffffffffffffffffffffff
0x517: V285 = AND 0xffffffffffffffffffffffffffffffffffffffff V275
0x518: V286 = 0xffffffffffffffffffffffffffffffffffffffff
0x52d: V287 = AND 0xffffffffffffffffffffffffffffffffffffffff V285
0x52f: M[V283] = V287
0x530: V288 = 0x20
0x532: V289 = ADD 0x20 V283
0x535: M[V289] = V257
0x536: V290 = 0x20
0x538: V291 = ADD 0x20 V289
0x53d: V292 = 0x20
0x53f: V293 = 0x40
0x541: V294 = M[0x40]
0x544: V295 = SUB V291 V294
0x546: V296 = 0x0
0x54a: V297 = EXTCODESIZE V267
0x54b: V298 = ISZERO V297
0x54d: V299 = ISZERO V298
0x54e: V300 = 0x556
0x551: JUMPI 0x556 V299
---
Entry stack: [V11, 0x112, V56, V56, V257]
Stack pops: 2
Stack additions: [S1, S0, V267, 0xa9059cbb, V291, 0x20, V294, V295, V294, 0x0, V267, V298]
Exit stack: [V11, 0x112, V56, V56, V257, V267, 0xa9059cbb, V291, 0x20, V294, V295, V294, 0x0, V267, V298]

================================

Block 0x552
[0x552:0x555]
---
Predecessors: [0x492]
Successors: []
---
0x552 PUSH1 0x0
0x554 DUP1
0x555 REVERT
---
0x552: V301 = 0x0
0x555: REVERT 0x0 0x0
---
Entry stack: [V11, 0x112, V56, V56, V257, V267, 0xa9059cbb, V291, 0x20, V294, V295, V294, 0x0, V267, V298]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x112, V56, V56, V257, V267, 0xa9059cbb, V291, 0x20, V294, V295, V294, 0x0, V267, V298]

================================

Block 0x556
[0x556:0x560]
---
Predecessors: [0x492]
Successors: [0x561, 0x56a]
---
0x556 JUMPDEST
0x557 POP
0x558 GAS
0x559 CALL
0x55a ISZERO
0x55b DUP1
0x55c ISZERO
0x55d PUSH2 0x56a
0x560 JUMPI
---
0x556: JUMPDEST 
0x558: V302 = GAS
0x559: V303 = CALL V302 V267 0x0 V294 V295 V294 0x20
0x55a: V304 = ISZERO V303
0x55c: V305 = ISZERO V304
0x55d: V306 = 0x56a
0x560: JUMPI 0x56a V305
---
Entry stack: [V11, 0x112, V56, V56, V257, V267, 0xa9059cbb, V291, 0x20, V294, V295, V294, 0x0, V267, V298]
Stack pops: 7
Stack additions: [V304]
Exit stack: [V11, 0x112, V56, V56, V257, V267, 0xa9059cbb, V291, V304]

================================

Block 0x561
[0x561:0x569]
---
Predecessors: [0x556]
Successors: []
---
0x561 RETURNDATASIZE
0x562 PUSH1 0x0
0x564 DUP1
0x565 RETURNDATACOPY
0x566 RETURNDATASIZE
0x567 PUSH1 0x0
0x569 REVERT
---
0x561: V307 = RETURNDATASIZE
0x562: V308 = 0x0
0x565: RETURNDATACOPY 0x0 0x0 V307
0x566: V309 = RETURNDATASIZE
0x567: V310 = 0x0
0x569: REVERT 0x0 V309
---
Entry stack: [V11, 0x112, V56, V56, V257, V267, 0xa9059cbb, V291, V304]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x112, V56, V56, V257, V267, 0xa9059cbb, V291, V304]

================================

Block 0x56a
[0x56a:0x57b]
---
Predecessors: [0x556]
Successors: [0x57c, 0x580]
---
0x56a JUMPDEST
0x56b POP
0x56c POP
0x56d POP
0x56e POP
0x56f PUSH1 0x40
0x571 MLOAD
0x572 RETURNDATASIZE
0x573 PUSH1 0x20
0x575 DUP2
0x576 LT
0x577 ISZERO
0x578 PUSH2 0x580
0x57b JUMPI
---
0x56a: JUMPDEST 
0x56f: V311 = 0x40
0x571: V312 = M[0x40]
0x572: V313 = RETURNDATASIZE
0x573: V314 = 0x20
0x576: V315 = LT V313 0x20
0x577: V316 = ISZERO V315
0x578: V317 = 0x580
0x57b: JUMPI 0x580 V316
---
Entry stack: [V11, 0x112, V56, V56, V257, V267, 0xa9059cbb, V291, V304]
Stack pops: 4
Stack additions: [V312, V313]
Exit stack: [V11, 0x112, V56, V56, V257, V312, V313]

================================

Block 0x57c
[0x57c:0x57f]
---
Predecessors: [0x56a]
Successors: []
---
0x57c PUSH1 0x0
0x57e DUP1
0x57f REVERT
---
0x57c: V318 = 0x0
0x57f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x112, V56, V56, V257, V312, V313]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x112, V56, V56, V257, V312, V313]

================================

Block 0x580
[0x580:0x639]
---
Predecessors: [0x56a]
Successors: [0x112]
---
0x580 JUMPDEST
0x581 DUP2
0x582 ADD
0x583 SWAP1
0x584 DUP1
0x585 DUP1
0x586 MLOAD
0x587 SWAP1
0x588 PUSH1 0x20
0x58a ADD
0x58b SWAP1
0x58c SWAP3
0x58d SWAP2
0x58e SWAP1
0x58f POP
0x590 POP
0x591 POP
0x592 POP
0x593 DUP3
0x594 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5a9 AND
0x5aa PUSH32 0x3ddb739c68dd901671f09fbe0bc2344c179ed55f8e8110a7c7a3c5665bd9518d
0x5cb PUSH1 0x0
0x5cd DUP1
0x5ce SWAP1
0x5cf SLOAD
0x5d0 SWAP1
0x5d1 PUSH2 0x100
0x5d4 EXP
0x5d5 SWAP1
0x5d6 DIV
0x5d7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5ec AND
0x5ed DUP4
0x5ee PUSH1 0x40
0x5f0 MLOAD
0x5f1 DUP1
0x5f2 DUP4
0x5f3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x608 AND
0x609 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x61e AND
0x61f DUP2
0x620 MSTORE
0x621 PUSH1 0x20
0x623 ADD
0x624 DUP3
0x625 DUP2
0x626 MSTORE
0x627 PUSH1 0x20
0x629 ADD
0x62a SWAP3
0x62b POP
0x62c POP
0x62d POP
0x62e PUSH1 0x40
0x630 MLOAD
0x631 DUP1
0x632 SWAP2
0x633 SUB
0x634 SWAP1
0x635 LOG2
0x636 POP
0x637 POP
0x638 POP
0x639 JUMP
---
0x580: JUMPDEST 
0x582: V319 = ADD V312 V313
0x586: V320 = M[V312]
0x588: V321 = 0x20
0x58a: V322 = ADD 0x20 V312
0x594: V323 = 0xffffffffffffffffffffffffffffffffffffffff
0x5a9: V324 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0x5aa: V325 = 0x3ddb739c68dd901671f09fbe0bc2344c179ed55f8e8110a7c7a3c5665bd9518d
0x5cb: V326 = 0x0
0x5cf: V327 = S[0x0]
0x5d1: V328 = 0x100
0x5d4: V329 = EXP 0x100 0x0
0x5d6: V330 = DIV V327 0x1
0x5d7: V331 = 0xffffffffffffffffffffffffffffffffffffffff
0x5ec: V332 = AND 0xffffffffffffffffffffffffffffffffffffffff V330
0x5ee: V333 = 0x40
0x5f0: V334 = M[0x40]
0x5f3: V335 = 0xffffffffffffffffffffffffffffffffffffffff
0x608: V336 = AND 0xffffffffffffffffffffffffffffffffffffffff V332
0x609: V337 = 0xffffffffffffffffffffffffffffffffffffffff
0x61e: V338 = AND 0xffffffffffffffffffffffffffffffffffffffff V336
0x620: M[V334] = V338
0x621: V339 = 0x20
0x623: V340 = ADD 0x20 V334
0x626: M[V340] = V257
0x627: V341 = 0x20
0x629: V342 = ADD 0x20 V340
0x62e: V343 = 0x40
0x630: V344 = M[0x40]
0x633: V345 = SUB V342 V344
0x635: LOG V344 V345 0x3ddb739c68dd901671f09fbe0bc2344c179ed55f8e8110a7c7a3c5665bd9518d V324
0x639: JUMP 0x112
---
Entry stack: [V11, 0x112, V56, V56, V257, V312, V313]
Stack pops: 6
Stack additions: []
Exit stack: [V11]

================================

Block 0x63a
[0x63a:0x65e]
---
Predecessors: [0x14d]
Successors: [0x156]
---
0x63a JUMPDEST
0x63b PUSH1 0x0
0x63d DUP1
0x63e SWAP1
0x63f SLOAD
0x640 SWAP1
0x641 PUSH2 0x100
0x644 EXP
0x645 SWAP1
0x646 DIV
0x647 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x65c AND
0x65d DUP2
0x65e JUMP
---
0x63a: JUMPDEST 
0x63b: V346 = 0x0
0x63f: V347 = S[0x0]
0x641: V348 = 0x100
0x644: V349 = EXP 0x100 0x0
0x646: V350 = DIV V347 0x1
0x647: V351 = 0xffffffffffffffffffffffffffffffffffffffff
0x65c: V352 = AND 0xffffffffffffffffffffffffffffffffffffffff V350
0x65e: JUMP 0x156
---
Entry stack: [V11, 0x156]
Stack pops: 1
Stack additions: [S0, V352]
Exit stack: [V11, 0x156, V352]

================================

Block 0x65f
[0x65f:0x6f7]
---
Predecessors: [0x1a4]
Successors: [0x6f8, 0x6fc]
---
0x65f JUMPDEST
0x660 PUSH1 0x0
0x662 DUP2
0x663 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x678 AND
0x679 PUSH4 0x70a08231
0x67e ADDRESS
0x67f PUSH1 0x40
0x681 MLOAD
0x682 DUP3
0x683 PUSH4 0xffffffff
0x688 AND
0x689 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x6a7 MUL
0x6a8 DUP2
0x6a9 MSTORE
0x6aa PUSH1 0x4
0x6ac ADD
0x6ad DUP1
0x6ae DUP3
0x6af PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6c4 AND
0x6c5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6da AND
0x6db DUP2
0x6dc MSTORE
0x6dd PUSH1 0x20
0x6df ADD
0x6e0 SWAP2
0x6e1 POP
0x6e2 POP
0x6e3 PUSH1 0x20
0x6e5 PUSH1 0x40
0x6e7 MLOAD
0x6e8 DUP1
0x6e9 DUP4
0x6ea SUB
0x6eb DUP2
0x6ec PUSH1 0x0
0x6ee DUP8
0x6ef DUP1
0x6f0 EXTCODESIZE
0x6f1 ISZERO
0x6f2 DUP1
0x6f3 ISZERO
0x6f4 PUSH2 0x6fc
0x6f7 JUMPI
---
0x65f: JUMPDEST 
0x660: V353 = 0x0
0x663: V354 = 0xffffffffffffffffffffffffffffffffffffffff
0x678: V355 = AND 0xffffffffffffffffffffffffffffffffffffffff V101
0x679: V356 = 0x70a08231
0x67e: V357 = ADDRESS
0x67f: V358 = 0x40
0x681: V359 = M[0x40]
0x683: V360 = 0xffffffff
0x688: V361 = AND 0xffffffff 0x70a08231
0x689: V362 = 0x100000000000000000000000000000000000000000000000000000000
0x6a7: V363 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x6a9: M[V359] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x6aa: V364 = 0x4
0x6ac: V365 = ADD 0x4 V359
0x6af: V366 = 0xffffffffffffffffffffffffffffffffffffffff
0x6c4: V367 = AND 0xffffffffffffffffffffffffffffffffffffffff V357
0x6c5: V368 = 0xffffffffffffffffffffffffffffffffffffffff
0x6da: V369 = AND 0xffffffffffffffffffffffffffffffffffffffff V367
0x6dc: M[V365] = V369
0x6dd: V370 = 0x20
0x6df: V371 = ADD 0x20 V365
0x6e3: V372 = 0x20
0x6e5: V373 = 0x40
0x6e7: V374 = M[0x40]
0x6ea: V375 = SUB V371 V374
0x6ec: V376 = 0x0
0x6f0: V377 = EXTCODESIZE V355
0x6f1: V378 = ISZERO V377
0x6f3: V379 = ISZERO V378
0x6f4: V380 = 0x6fc
0x6f7: JUMPI 0x6fc V379
---
Entry stack: [V11, 0x1d9, V101]
Stack pops: 1
Stack additions: [S0, 0x0, V355, 0x70a08231, V371, 0x20, V374, V375, V374, 0x0, V355, V378]
Exit stack: [V11, 0x1d9, V101, 0x0, V355, 0x70a08231, V371, 0x20, V374, V375, V374, 0x0, V355, V378]

================================

Block 0x6f8
[0x6f8:0x6fb]
---
Predecessors: [0x65f]
Successors: []
---
0x6f8 PUSH1 0x0
0x6fa DUP1
0x6fb REVERT
---
0x6f8: V381 = 0x0
0x6fb: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1d9, V101, 0x0, V355, 0x70a08231, V371, 0x20, V374, V375, V374, 0x0, V355, V378]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1d9, V101, 0x0, V355, 0x70a08231, V371, 0x20, V374, V375, V374, 0x0, V355, V378]

================================

Block 0x6fc
[0x6fc:0x706]
---
Predecessors: [0x65f]
Successors: [0x707, 0x710]
---
0x6fc JUMPDEST
0x6fd POP
0x6fe GAS
0x6ff CALL
0x700 ISZERO
0x701 DUP1
0x702 ISZERO
0x703 PUSH2 0x710
0x706 JUMPI
---
0x6fc: JUMPDEST 
0x6fe: V382 = GAS
0x6ff: V383 = CALL V382 V355 0x0 V374 V375 V374 0x20
0x700: V384 = ISZERO V383
0x702: V385 = ISZERO V384
0x703: V386 = 0x710
0x706: JUMPI 0x710 V385
---
Entry stack: [V11, 0x1d9, V101, 0x0, V355, 0x70a08231, V371, 0x20, V374, V375, V374, 0x0, V355, V378]
Stack pops: 7
Stack additions: [V384]
Exit stack: [V11, 0x1d9, V101, 0x0, V355, 0x70a08231, V371, V384]

================================

Block 0x707
[0x707:0x70f]
---
Predecessors: [0x6fc]
Successors: []
---
0x707 RETURNDATASIZE
0x708 PUSH1 0x0
0x70a DUP1
0x70b RETURNDATACOPY
0x70c RETURNDATASIZE
0x70d PUSH1 0x0
0x70f REVERT
---
0x707: V387 = RETURNDATASIZE
0x708: V388 = 0x0
0x70b: RETURNDATACOPY 0x0 0x0 V387
0x70c: V389 = RETURNDATASIZE
0x70d: V390 = 0x0
0x70f: REVERT 0x0 V389
---
Entry stack: [V11, 0x1d9, V101, 0x0, V355, 0x70a08231, V371, V384]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1d9, V101, 0x0, V355, 0x70a08231, V371, V384]

================================

Block 0x710
[0x710:0x721]
---
Predecessors: [0x6fc]
Successors: [0x722, 0x726]
---
0x710 JUMPDEST
0x711 POP
0x712 POP
0x713 POP
0x714 POP
0x715 PUSH1 0x40
0x717 MLOAD
0x718 RETURNDATASIZE
0x719 PUSH1 0x20
0x71b DUP2
0x71c LT
0x71d ISZERO
0x71e PUSH2 0x726
0x721 JUMPI
---
0x710: JUMPDEST 
0x715: V391 = 0x40
0x717: V392 = M[0x40]
0x718: V393 = RETURNDATASIZE
0x719: V394 = 0x20
0x71c: V395 = LT V393 0x20
0x71d: V396 = ISZERO V395
0x71e: V397 = 0x726
0x721: JUMPI 0x726 V396
---
Entry stack: [V11, 0x1d9, V101, 0x0, V355, 0x70a08231, V371, V384]
Stack pops: 4
Stack additions: [V392, V393]
Exit stack: [V11, 0x1d9, V101, 0x0, V392, V393]

================================

Block 0x722
[0x722:0x725]
---
Predecessors: [0x710]
Successors: []
---
0x722 PUSH1 0x0
0x724 DUP1
0x725 REVERT
---
0x722: V398 = 0x0
0x725: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1d9, V101, 0x0, V392, V393]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1d9, V101, 0x0, V392, V393]

================================

Block 0x726
[0x726:0x73d]
---
Predecessors: [0x710]
Successors: [0x1d9]
---
0x726 JUMPDEST
0x727 DUP2
0x728 ADD
0x729 SWAP1
0x72a DUP1
0x72b DUP1
0x72c MLOAD
0x72d SWAP1
0x72e PUSH1 0x20
0x730 ADD
0x731 SWAP1
0x732 SWAP3
0x733 SWAP2
0x734 SWAP1
0x735 POP
0x736 POP
0x737 POP
0x738 SWAP1
0x739 POP
0x73a SWAP2
0x73b SWAP1
0x73c POP
0x73d JUMP
---
0x726: JUMPDEST 
0x728: V399 = ADD V392 V393
0x72c: V400 = M[V392]
0x72e: V401 = 0x20
0x730: V402 = ADD 0x20 V392
0x73d: JUMP 0x1d9
---
Entry stack: [V11, 0x1d9, V101, 0x0, V392, V393]
Stack pops: 5
Stack additions: [V400]
Exit stack: [V11, V400]

================================

Block 0x73e
[0x73e:0x746]
---
Predecessors: [0x1fb]
Successors: [0x204]
---
0x73e JUMPDEST
0x73f PUSH1 0x0
0x741 PUSH1 0x1
0x743 SWAP1
0x744 POP
0x745 SWAP1
0x746 JUMP
---
0x73e: JUMPDEST 
0x73f: V403 = 0x0
0x741: V404 = 0x1
0x746: JUMP 0x204
---
Entry stack: [V11, 0x204]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x747
[0x747:0x79d]
---
Predecessors: [0x22a]
Successors: [0x79e, 0x7a2]
---
0x747 JUMPDEST
0x748 PUSH1 0x0
0x74a DUP1
0x74b SWAP1
0x74c SLOAD
0x74d SWAP1
0x74e PUSH2 0x100
0x751 EXP
0x752 SWAP1
0x753 DIV
0x754 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x769 AND
0x76a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x77f AND
0x780 CALLER
0x781 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x796 AND
0x797 EQ
0x798 ISZERO
0x799 ISZERO
0x79a PUSH2 0x7a2
0x79d JUMPI
---
0x747: JUMPDEST 
0x748: V405 = 0x0
0x74c: V406 = S[0x0]
0x74e: V407 = 0x100
0x751: V408 = EXP 0x100 0x0
0x753: V409 = DIV V406 0x1
0x754: V410 = 0xffffffffffffffffffffffffffffffffffffffff
0x769: V411 = AND 0xffffffffffffffffffffffffffffffffffffffff V409
0x76a: V412 = 0xffffffffffffffffffffffffffffffffffffffff
0x77f: V413 = AND 0xffffffffffffffffffffffffffffffffffffffff V411
0x780: V414 = CALLER
0x781: V415 = 0xffffffffffffffffffffffffffffffffffffffff
0x796: V416 = AND 0xffffffffffffffffffffffffffffffffffffffff V414
0x797: V417 = EQ V416 V413
0x798: V418 = ISZERO V417
0x799: V419 = ISZERO V418
0x79a: V420 = 0x7a2
0x79d: JUMPI 0x7a2 V419
---
Entry stack: [V11, 0x25f, V140]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x25f, V140]

================================

Block 0x79e
[0x79e:0x7a1]
---
Predecessors: [0x747]
Successors: []
---
0x79e PUSH1 0x0
0x7a0 DUP1
0x7a1 REVERT
---
0x79e: V421 = 0x0
0x7a1: REVERT 0x0 0x0
---
Entry stack: [V11, 0x25f, V140]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x25f, V140]

================================

Block 0x7a2
[0x7a2:0x7d9]
---
Predecessors: [0x747]
Successors: [0x7da, 0x7de]
---
0x7a2 JUMPDEST
0x7a3 PUSH1 0x0
0x7a5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7ba AND
0x7bb DUP2
0x7bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7d1 AND
0x7d2 EQ
0x7d3 ISZERO
0x7d4 ISZERO
0x7d5 ISZERO
0x7d6 PUSH2 0x7de
0x7d9 JUMPI
---
0x7a2: JUMPDEST 
0x7a3: V422 = 0x0
0x7a5: V423 = 0xffffffffffffffffffffffffffffffffffffffff
0x7ba: V424 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x7bc: V425 = 0xffffffffffffffffffffffffffffffffffffffff
0x7d1: V426 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x7d2: V427 = EQ V426 0x0
0x7d3: V428 = ISZERO V427
0x7d4: V429 = ISZERO V428
0x7d5: V430 = ISZERO V429
0x7d6: V431 = 0x7de
0x7d9: JUMPI 0x7de V430
---
Entry stack: [V11, 0x25f, V140]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x25f, V140]

================================

Block 0x7da
[0x7da:0x7dd]
---
Predecessors: [0x7a2]
Successors: []
---
0x7da PUSH1 0x0
0x7dc DUP1
0x7dd REVERT
---
0x7da: V432 = 0x0
0x7dd: REVERT 0x0 0x0
---
Entry stack: [V11, 0x25f, V140]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x25f, V140]

================================

Block 0x7de
[0x7de:0x89b]
---
Predecessors: [0x7a2]
Successors: [0x25f]
---
0x7de JUMPDEST
0x7df DUP1
0x7e0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7f5 AND
0x7f6 PUSH1 0x0
0x7f8 DUP1
0x7f9 SWAP1
0x7fa SLOAD
0x7fb SWAP1
0x7fc PUSH2 0x100
0x7ff EXP
0x800 SWAP1
0x801 DIV
0x802 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x817 AND
0x818 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x82d AND
0x82e PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x84f PUSH1 0x40
0x851 MLOAD
0x852 PUSH1 0x40
0x854 MLOAD
0x855 DUP1
0x856 SWAP2
0x857 SUB
0x858 SWAP1
0x859 LOG3
0x85a DUP1
0x85b PUSH1 0x0
0x85d DUP1
0x85e PUSH2 0x100
0x861 EXP
0x862 DUP2
0x863 SLOAD
0x864 DUP2
0x865 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x87a MUL
0x87b NOT
0x87c AND
0x87d SWAP1
0x87e DUP4
0x87f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x894 AND
0x895 MUL
0x896 OR
0x897 SWAP1
0x898 SSTORE
0x899 POP
0x89a POP
0x89b JUMP
---
0x7de: JUMPDEST 
0x7e0: V433 = 0xffffffffffffffffffffffffffffffffffffffff
0x7f5: V434 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x7f6: V435 = 0x0
0x7fa: V436 = S[0x0]
0x7fc: V437 = 0x100
0x7ff: V438 = EXP 0x100 0x0
0x801: V439 = DIV V436 0x1
0x802: V440 = 0xffffffffffffffffffffffffffffffffffffffff
0x817: V441 = AND 0xffffffffffffffffffffffffffffffffffffffff V439
0x818: V442 = 0xffffffffffffffffffffffffffffffffffffffff
0x82d: V443 = AND 0xffffffffffffffffffffffffffffffffffffffff V441
0x82e: V444 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x84f: V445 = 0x40
0x851: V446 = M[0x40]
0x852: V447 = 0x40
0x854: V448 = M[0x40]
0x857: V449 = SUB V446 V448
0x859: LOG V448 V449 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V443 V434
0x85b: V450 = 0x0
0x85e: V451 = 0x100
0x861: V452 = EXP 0x100 0x0
0x863: V453 = S[0x0]
0x865: V454 = 0xffffffffffffffffffffffffffffffffffffffff
0x87a: V455 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x87b: V456 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x87c: V457 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V453
0x87f: V458 = 0xffffffffffffffffffffffffffffffffffffffff
0x894: V459 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x895: V460 = MUL V459 0x1
0x896: V461 = OR V460 V457
0x898: S[0x0] = V461
0x89b: JUMP 0x25f
---
Entry stack: [V11, 0x25f, V140]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x89c
[0x89c:0x8c7]
---
Predecessors: []
Successors: []
---
0x89c STOP
0x89d LOG1
0x89e PUSH6 0x627a7a723058
0x8a5 SHA3
0x8a6 DUP14
0x8a7 MULMOD
0x8a8 MISSING 0xe8
0x8a9 DUP2
0x8aa MISSING 0xda
0x8ab MISSING 0xc9
0x8ac DIFFICULTY
0x8ad MISSING 0xdb
0x8ae SWAP16
0x8af DIV
0x8b0 MISSING 0x2c
0x8b1 MISSING 0xbe
0x8b2 MISSING 0xa5
0x8b3 MISSING 0xe2
0x8b4 NOT
0x8b5 MISSING 0x5f
0x8b6 SWAP6
0x8b7 MISSING 0xab
0x8b8 MISSING 0xc0
0x8b9 MISSING 0xe6
0x8ba MISSING 0x4e
0x8bb MISSING 0xd8
0x8bc NOT
0x8bd MISSING 0xaf
0x8be MISSING 0x2b
0x8bf GASLIMIT
0x8c0 MISSING 0xca
0x8c1 MISSING 0xa5
0x8c2 MISSING 0xbb
0x8c3 MISSING 0xcf
0x8c4 COINBASE
0x8c5 PUSH2 0x29
---
0x89c: STOP 
0x89d: LOG S0 S1 S2
0x89e: V462 = 0x627a7a723058
0x8a5: V463 = SHA3 0x627a7a723058 S3
0x8a7: V464 = MULMOD S16 V463 S4
0x8a8: MISSING 0xe8
0x8aa: MISSING 0xda
0x8ab: MISSING 0xc9
0x8ac: V465 = DIFFICULTY
0x8ad: MISSING 0xdb
0x8af: V466 = DIV S16 S1
0x8b0: MISSING 0x2c
0x8b1: MISSING 0xbe
0x8b2: MISSING 0xa5
0x8b3: MISSING 0xe2
0x8b4: V467 = NOT S0
0x8b5: MISSING 0x5f
0x8b7: MISSING 0xab
0x8b8: MISSING 0xc0
0x8b9: MISSING 0xe6
0x8ba: MISSING 0x4e
0x8bb: MISSING 0xd8
0x8bc: V468 = NOT S0
0x8bd: MISSING 0xaf
0x8be: MISSING 0x2b
0x8bf: V469 = GASLIMIT
0x8c0: MISSING 0xca
0x8c1: MISSING 0xa5
0x8c2: MISSING 0xbb
0x8c3: MISSING 0xcf
0x8c4: V470 = COINBASE
0x8c5: V471 = 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V464, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S1, S0, S1, V465, V466, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S0, V467, S6, S1, S2, S3, S4, S5, S0, V468, V469, 0x29, V470]
Exit stack: []

================================

Function 0:
Public function signature: 0x1be19560
Entry block: 0xd1
Exit block: 0x112
Body: 0xd1, 0xd9, 0xdd, 0x112, 0x34a, 0x3a4, 0x3a8, 0x442, 0x446, 0x451, 0x45a, 0x46c, 0x470, 0x48e, 0x492, 0x552, 0x556, 0x561, 0x56a, 0x57c, 0x580

Function 1:
Public function signature: 0x6c91ba72
Entry block: 0x114
Exit block: 0x13f
Body: 0x114, 0x11c, 0x120, 0x13f

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0x141
Exit block: 0x156
Body: 0x141, 0x149, 0x14d, 0x156, 0x63a

Function 3:
Public function signature: 0xb99152d0
Entry block: 0x198
Exit block: 0x1d9
Body: 0x198, 0x1a0, 0x1a4, 0x1d9, 0x65f, 0x6f8, 0x6fc, 0x707, 0x710, 0x722, 0x726

Function 4:
Public function signature: 0xf244cb9c
Entry block: 0x1ef
Exit block: 0x204
Body: 0x1ef, 0x1f7, 0x1fb, 0x204, 0x73e

Function 5:
Public function signature: 0xf2fde38b
Entry block: 0x21e
Exit block: 0x25f
Body: 0x21e, 0x226, 0x22a, 0x25f, 0x747, 0x79e, 0x7a2, 0x7da, 0x7de

Function 6:
Public fallback function
Entry block: 0x78
Exit block: 0xcf
Body: 0x78, 0xcf

Function 7:
Private function
Entry block: 0x261
Exit block: 0x2d7
Body: 0x261, 0x270, 0x2d7

