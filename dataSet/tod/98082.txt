Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x67]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x3191b6b6
0x3c EQ
0x3d PUSH2 0x67
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x3191b6b6
0x3c: V13 = EQ 0x3191b6b6 V11
0x3d: V14 = 0x67
0x40: JUMPI 0x67 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xbe]
---
0x41 DUP1
0x42 PUSH4 0x800bfd3a
0x47 EQ
0x48 PUSH2 0xbe
0x4b JUMPI
---
0x42: V15 = 0x800bfd3a
0x47: V16 = EQ 0x800bfd3a V11
0x48: V17 = 0xbe
0x4b: JUMPI 0xbe V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x115]
---
0x4c DUP1
0x4d PUSH4 0x833ec720
0x52 EQ
0x53 PUSH2 0x115
0x56 JUMPI
---
0x4d: V18 = 0x833ec720
0x52: V19 = EQ 0x833ec720 V11
0x53: V20 = 0x115
0x56: JUMPI 0x115 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x16c]
---
0x57 DUP1
0x58 PUSH4 0x9cb8a26a
0x5d EQ
0x5e PUSH2 0x16c
0x61 JUMPI
---
0x58: V21 = 0x9cb8a26a
0x5d: V22 = EQ 0x9cb8a26a V11
0x5e: V23 = 0x16c
0x61: JUMPI 0x16c V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x66]
---
Predecessors: [0x0, 0x57]
Successors: []
---
0x62 JUMPDEST
0x63 PUSH1 0x0
0x65 DUP1
0x66 REVERT
---
0x62: JUMPDEST 
0x63: V24 = 0x0
0x66: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x67
[0x67:0x6e]
---
Predecessors: [0xd]
Successors: [0x6f, 0x73]
---
0x67 JUMPDEST
0x68 CALLVALUE
0x69 DUP1
0x6a ISZERO
0x6b PUSH2 0x73
0x6e JUMPI
---
0x67: JUMPDEST 
0x68: V25 = CALLVALUE
0x6a: V26 = ISZERO V25
0x6b: V27 = 0x73
0x6e: JUMPI 0x73 V26
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V25]
Exit stack: [V11, V25]

================================

Block 0x6f
[0x6f:0x72]
---
Predecessors: [0x67]
Successors: []
---
0x6f PUSH1 0x0
0x71 DUP1
0x72 REVERT
---
0x6f: V28 = 0x0
0x72: REVERT 0x0 0x0
---
Entry stack: [V11, V25]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V25]

================================

Block 0x73
[0x73:0xa7]
---
Predecessors: [0x67]
Successors: [0x183]
---
0x73 JUMPDEST
0x74 POP
0x75 PUSH2 0xa8
0x78 PUSH1 0x4
0x7a DUP1
0x7b CALLDATASIZE
0x7c SUB
0x7d DUP2
0x7e ADD
0x7f SWAP1
0x80 DUP1
0x81 DUP1
0x82 CALLDATALOAD
0x83 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x98 AND
0x99 SWAP1
0x9a PUSH1 0x20
0x9c ADD
0x9d SWAP1
0x9e SWAP3
0x9f SWAP2
0xa0 SWAP1
0xa1 POP
0xa2 POP
0xa3 POP
0xa4 PUSH2 0x183
0xa7 JUMP
---
0x73: JUMPDEST 
0x75: V29 = 0xa8
0x78: V30 = 0x4
0x7b: V31 = CALLDATASIZE
0x7c: V32 = SUB V31 0x4
0x7e: V33 = ADD 0x4 V32
0x82: V34 = CALLDATALOAD 0x4
0x83: V35 = 0xffffffffffffffffffffffffffffffffffffffff
0x98: V36 = AND 0xffffffffffffffffffffffffffffffffffffffff V34
0x9a: V37 = 0x20
0x9c: V38 = ADD 0x20 0x4
0xa4: V39 = 0x183
0xa7: JUMP 0x183
---
Entry stack: [V11, V25]
Stack pops: 1
Stack additions: [0xa8, V36]
Exit stack: [V11, 0xa8, V36]

================================

Block 0xa8
[0xa8:0xbd]
---
Predecessors: [0x210]
Successors: []
---
0xa8 JUMPDEST
0xa9 PUSH1 0x40
0xab MLOAD
0xac DUP1
0xad DUP3
0xae DUP2
0xaf MSTORE
0xb0 PUSH1 0x20
0xb2 ADD
0xb3 SWAP2
0xb4 POP
0xb5 POP
0xb6 PUSH1 0x40
0xb8 MLOAD
0xb9 DUP1
0xba SWAP2
0xbb SUB
0xbc SWAP1
0xbd RETURN
---
0xa8: JUMPDEST 
0xa9: V40 = 0x40
0xab: V41 = M[0x40]
0xaf: M[V41] = S0
0xb0: V42 = 0x20
0xb2: V43 = ADD 0x20 V41
0xb6: V44 = 0x40
0xb8: V45 = M[0x40]
0xbb: V46 = SUB V43 V45
0xbd: RETURN V45 V46
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xbe
[0xbe:0xc5]
---
Predecessors: [0x41]
Successors: [0xc6, 0xca]
---
0xbe JUMPDEST
0xbf CALLVALUE
0xc0 DUP1
0xc1 ISZERO
0xc2 PUSH2 0xca
0xc5 JUMPI
---
0xbe: JUMPDEST 
0xbf: V47 = CALLVALUE
0xc1: V48 = ISZERO V47
0xc2: V49 = 0xca
0xc5: JUMPI 0xca V48
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V47]
Exit stack: [V11, V47]

================================

Block 0xc6
[0xc6:0xc9]
---
Predecessors: [0xbe]
Successors: []
---
0xc6 PUSH1 0x0
0xc8 DUP1
0xc9 REVERT
---
0xc6: V50 = 0x0
0xc9: REVERT 0x0 0x0
---
Entry stack: [V11, V47]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V47]

================================

Block 0xca
[0xca:0xfe]
---
Predecessors: [0xbe]
Successors: [0x215]
---
0xca JUMPDEST
0xcb POP
0xcc PUSH2 0xff
0xcf PUSH1 0x4
0xd1 DUP1
0xd2 CALLDATASIZE
0xd3 SUB
0xd4 DUP2
0xd5 ADD
0xd6 SWAP1
0xd7 DUP1
0xd8 DUP1
0xd9 CALLDATALOAD
0xda PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xef AND
0xf0 SWAP1
0xf1 PUSH1 0x20
0xf3 ADD
0xf4 SWAP1
0xf5 SWAP3
0xf6 SWAP2
0xf7 SWAP1
0xf8 POP
0xf9 POP
0xfa POP
0xfb PUSH2 0x215
0xfe JUMP
---
0xca: JUMPDEST 
0xcc: V51 = 0xff
0xcf: V52 = 0x4
0xd2: V53 = CALLDATASIZE
0xd3: V54 = SUB V53 0x4
0xd5: V55 = ADD 0x4 V54
0xd9: V56 = CALLDATALOAD 0x4
0xda: V57 = 0xffffffffffffffffffffffffffffffffffffffff
0xef: V58 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0xf1: V59 = 0x20
0xf3: V60 = ADD 0x20 0x4
0xfb: V61 = 0x215
0xfe: JUMP 0x215
---
Entry stack: [V11, V47]
Stack pops: 1
Stack additions: [0xff, V58]
Exit stack: [V11, 0xff, V58]

================================

Block 0xff
[0xff:0x114]
---
Predecessors: [0x2a6]
Successors: []
---
0xff JUMPDEST
0x100 PUSH1 0x40
0x102 MLOAD
0x103 DUP1
0x104 DUP3
0x105 DUP2
0x106 MSTORE
0x107 PUSH1 0x20
0x109 ADD
0x10a SWAP2
0x10b POP
0x10c POP
0x10d PUSH1 0x40
0x10f MLOAD
0x110 DUP1
0x111 SWAP2
0x112 SUB
0x113 SWAP1
0x114 RETURN
---
0xff: JUMPDEST 
0x100: V62 = 0x40
0x102: V63 = M[0x40]
0x106: M[V63] = S0
0x107: V64 = 0x20
0x109: V65 = ADD 0x20 V63
0x10d: V66 = 0x40
0x10f: V67 = M[0x40]
0x112: V68 = SUB V65 V67
0x114: RETURN V67 V68
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x115
[0x115:0x11c]
---
Predecessors: [0x4c]
Successors: [0x11d, 0x121]
---
0x115 JUMPDEST
0x116 CALLVALUE
0x117 DUP1
0x118 ISZERO
0x119 PUSH2 0x121
0x11c JUMPI
---
0x115: JUMPDEST 
0x116: V69 = CALLVALUE
0x118: V70 = ISZERO V69
0x119: V71 = 0x121
0x11c: JUMPI 0x121 V70
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V69]
Exit stack: [V11, V69]

================================

Block 0x11d
[0x11d:0x120]
---
Predecessors: [0x115]
Successors: []
---
0x11d PUSH1 0x0
0x11f DUP1
0x120 REVERT
---
0x11d: V72 = 0x0
0x120: REVERT 0x0 0x0
---
Entry stack: [V11, V69]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V69]

================================

Block 0x121
[0x121:0x155]
---
Predecessors: [0x115]
Successors: [0x2ab]
---
0x121 JUMPDEST
0x122 POP
0x123 PUSH2 0x156
0x126 PUSH1 0x4
0x128 DUP1
0x129 CALLDATASIZE
0x12a SUB
0x12b DUP2
0x12c ADD
0x12d SWAP1
0x12e DUP1
0x12f DUP1
0x130 CALLDATALOAD
0x131 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x146 AND
0x147 SWAP1
0x148 PUSH1 0x20
0x14a ADD
0x14b SWAP1
0x14c SWAP3
0x14d SWAP2
0x14e SWAP1
0x14f POP
0x150 POP
0x151 POP
0x152 PUSH2 0x2ab
0x155 JUMP
---
0x121: JUMPDEST 
0x123: V73 = 0x156
0x126: V74 = 0x4
0x129: V75 = CALLDATASIZE
0x12a: V76 = SUB V75 0x4
0x12c: V77 = ADD 0x4 V76
0x130: V78 = CALLDATALOAD 0x4
0x131: V79 = 0xffffffffffffffffffffffffffffffffffffffff
0x146: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x148: V81 = 0x20
0x14a: V82 = ADD 0x20 0x4
0x152: V83 = 0x2ab
0x155: JUMP 0x2ab
---
Entry stack: [V11, V69]
Stack pops: 1
Stack additions: [0x156, V80]
Exit stack: [V11, 0x156, V80]

================================

Block 0x156
[0x156:0x16b]
---
Predecessors: [0x34d]
Successors: []
---
0x156 JUMPDEST
0x157 PUSH1 0x40
0x159 MLOAD
0x15a DUP1
0x15b DUP3
0x15c DUP2
0x15d MSTORE
0x15e PUSH1 0x20
0x160 ADD
0x161 SWAP2
0x162 POP
0x163 POP
0x164 PUSH1 0x40
0x166 MLOAD
0x167 DUP1
0x168 SWAP2
0x169 SUB
0x16a SWAP1
0x16b RETURN
---
0x156: JUMPDEST 
0x157: V84 = 0x40
0x159: V85 = M[0x40]
0x15d: M[V85] = S0
0x15e: V86 = 0x20
0x160: V87 = ADD 0x20 V85
0x164: V88 = 0x40
0x166: V89 = M[0x40]
0x169: V90 = SUB V87 V89
0x16b: RETURN V89 V90
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x16c
[0x16c:0x173]
---
Predecessors: [0x57]
Successors: [0x174, 0x178]
---
0x16c JUMPDEST
0x16d CALLVALUE
0x16e DUP1
0x16f ISZERO
0x170 PUSH2 0x178
0x173 JUMPI
---
0x16c: JUMPDEST 
0x16d: V91 = CALLVALUE
0x16f: V92 = ISZERO V91
0x170: V93 = 0x178
0x173: JUMPI 0x178 V92
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V91]
Exit stack: [V11, V91]

================================

Block 0x174
[0x174:0x177]
---
Predecessors: [0x16c]
Successors: []
---
0x174 PUSH1 0x0
0x176 DUP1
0x177 REVERT
---
0x174: V94 = 0x0
0x177: REVERT 0x0 0x0
---
Entry stack: [V11, V91]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V91]

================================

Block 0x178
[0x178:0x180]
---
Predecessors: [0x16c]
Successors: [0x352]
---
0x178 JUMPDEST
0x179 POP
0x17a PUSH2 0x181
0x17d PUSH2 0x352
0x180 JUMP
---
0x178: JUMPDEST 
0x17a: V95 = 0x181
0x17d: V96 = 0x352
0x180: JUMP 0x352
---
Entry stack: [V11, V91]
Stack pops: 1
Stack additions: [0x181]
Exit stack: [V11, 0x181]

================================

Block 0x181
[0x181:0x182]
---
Predecessors: [0x3e1]
Successors: []
---
0x181 JUMPDEST
0x182 STOP
---
0x181: JUMPDEST 
0x182: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x183
[0x183:0x1da]
---
Predecessors: [0x73]
Successors: [0x1db, 0x210]
---
0x183 JUMPDEST
0x184 PUSH1 0x0
0x186 DUP1
0x187 PUSH1 0x0
0x189 SWAP1
0x18a SLOAD
0x18b SWAP1
0x18c PUSH2 0x100
0x18f EXP
0x190 SWAP1
0x191 DIV
0x192 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a7 AND
0x1a8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1bd AND
0x1be CALLER
0x1bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d4 AND
0x1d5 EQ
0x1d6 ISZERO
0x1d7 PUSH2 0x210
0x1da JUMPI
---
0x183: JUMPDEST 
0x184: V97 = 0x0
0x187: V98 = 0x0
0x18a: V99 = S[0x0]
0x18c: V100 = 0x100
0x18f: V101 = EXP 0x100 0x0
0x191: V102 = DIV V99 0x1
0x192: V103 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a7: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x1a8: V105 = 0xffffffffffffffffffffffffffffffffffffffff
0x1bd: V106 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x1be: V107 = CALLER
0x1bf: V108 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d4: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff V107
0x1d5: V110 = EQ V109 V106
0x1d6: V111 = ISZERO V110
0x1d7: V112 = 0x210
0x1da: JUMPI 0x210 V111
---
Entry stack: [V11, 0xa8, V36]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0xa8, V36, 0x0]

================================

Block 0x1db
[0x1db:0x20f]
---
Predecessors: [0x183]
Successors: [0x210]
---
0x1db DUP2
0x1dc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f1 AND
0x1f2 CALLVALUE
0x1f3 PUSH2 0x2710
0x1f6 SWAP1
0x1f7 PUSH1 0x40
0x1f9 MLOAD
0x1fa PUSH1 0x0
0x1fc PUSH1 0x40
0x1fe MLOAD
0x1ff DUP1
0x200 DUP4
0x201 SUB
0x202 DUP2
0x203 DUP6
0x204 DUP9
0x205 DUP9
0x206 CALL
0x207 SWAP4
0x208 POP
0x209 POP
0x20a POP
0x20b POP
0x20c POP
0x20d CALLVALUE
0x20e SWAP1
0x20f POP
---
0x1dc: V113 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f1: V114 = AND 0xffffffffffffffffffffffffffffffffffffffff V36
0x1f2: V115 = CALLVALUE
0x1f3: V116 = 0x2710
0x1f7: V117 = 0x40
0x1f9: V118 = M[0x40]
0x1fa: V119 = 0x0
0x1fc: V120 = 0x40
0x1fe: V121 = M[0x40]
0x201: V122 = SUB V118 V121
0x206: V123 = CALL 0x2710 V114 V115 V121 V122 V121 0x0
0x20d: V124 = CALLVALUE
---
Entry stack: [V11, 0xa8, V36, 0x0]
Stack pops: 2
Stack additions: [S1, V124]
Exit stack: [V11, 0xa8, V36, V124]

================================

Block 0x210
[0x210:0x214]
---
Predecessors: [0x183, 0x1db]
Successors: [0xa8]
---
0x210 JUMPDEST
0x211 SWAP2
0x212 SWAP1
0x213 POP
0x214 JUMP
---
0x210: JUMPDEST 
0x214: JUMP 0xa8
---
Entry stack: [V11, 0xa8, V36, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V11, S0]

================================

Block 0x215
[0x215:0x26c]
---
Predecessors: [0xca]
Successors: [0x26d, 0x2a6]
---
0x215 JUMPDEST
0x216 PUSH1 0x0
0x218 DUP1
0x219 PUSH1 0x0
0x21b SWAP1
0x21c SLOAD
0x21d SWAP1
0x21e PUSH2 0x100
0x221 EXP
0x222 SWAP1
0x223 DIV
0x224 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x239 AND
0x23a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24f AND
0x250 CALLER
0x251 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x266 AND
0x267 EQ
0x268 ISZERO
0x269 PUSH2 0x2a6
0x26c JUMPI
---
0x215: JUMPDEST 
0x216: V125 = 0x0
0x219: V126 = 0x0
0x21c: V127 = S[0x0]
0x21e: V128 = 0x100
0x221: V129 = EXP 0x100 0x0
0x223: V130 = DIV V127 0x1
0x224: V131 = 0xffffffffffffffffffffffffffffffffffffffff
0x239: V132 = AND 0xffffffffffffffffffffffffffffffffffffffff V130
0x23a: V133 = 0xffffffffffffffffffffffffffffffffffffffff
0x24f: V134 = AND 0xffffffffffffffffffffffffffffffffffffffff V132
0x250: V135 = CALLER
0x251: V136 = 0xffffffffffffffffffffffffffffffffffffffff
0x266: V137 = AND 0xffffffffffffffffffffffffffffffffffffffff V135
0x267: V138 = EQ V137 V134
0x268: V139 = ISZERO V138
0x269: V140 = 0x2a6
0x26c: JUMPI 0x2a6 V139
---
Entry stack: [V11, 0xff, V58]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0xff, V58, 0x0]

================================

Block 0x26d
[0x26d:0x2a5]
---
Predecessors: [0x215]
Successors: [0x2a6]
---
0x26d DUP2
0x26e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x283 AND
0x284 PUSH2 0x8fc
0x287 CALLVALUE
0x288 SWAP1
0x289 DUP2
0x28a ISZERO
0x28b MUL
0x28c SWAP1
0x28d PUSH1 0x40
0x28f MLOAD
0x290 PUSH1 0x0
0x292 PUSH1 0x40
0x294 MLOAD
0x295 DUP1
0x296 DUP4
0x297 SUB
0x298 DUP2
0x299 DUP6
0x29a DUP9
0x29b DUP9
0x29c CALL
0x29d SWAP4
0x29e POP
0x29f POP
0x2a0 POP
0x2a1 POP
0x2a2 POP
0x2a3 CALLVALUE
0x2a4 SWAP1
0x2a5 POP
---
0x26e: V141 = 0xffffffffffffffffffffffffffffffffffffffff
0x283: V142 = AND 0xffffffffffffffffffffffffffffffffffffffff V58
0x284: V143 = 0x8fc
0x287: V144 = CALLVALUE
0x28a: V145 = ISZERO V144
0x28b: V146 = MUL V145 0x8fc
0x28d: V147 = 0x40
0x28f: V148 = M[0x40]
0x290: V149 = 0x0
0x292: V150 = 0x40
0x294: V151 = M[0x40]
0x297: V152 = SUB V148 V151
0x29c: V153 = CALL V146 V142 V144 V151 V152 V151 0x0
0x2a3: V154 = CALLVALUE
---
Entry stack: [V11, 0xff, V58, 0x0]
Stack pops: 2
Stack additions: [S1, V154]
Exit stack: [V11, 0xff, V58, V154]

================================

Block 0x2a6
[0x2a6:0x2aa]
---
Predecessors: [0x215, 0x26d]
Successors: [0xff]
---
0x2a6 JUMPDEST
0x2a7 SWAP2
0x2a8 SWAP1
0x2a9 POP
0x2aa JUMP
---
0x2a6: JUMPDEST 
0x2aa: JUMP 0xff
---
Entry stack: [V11, 0xff, V58, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V11, S0]

================================

Block 0x2ab
[0x2ab:0x302]
---
Predecessors: [0x121]
Successors: [0x303, 0x34d]
---
0x2ab JUMPDEST
0x2ac PUSH1 0x0
0x2ae DUP1
0x2af PUSH1 0x0
0x2b1 SWAP1
0x2b2 SLOAD
0x2b3 SWAP1
0x2b4 PUSH2 0x100
0x2b7 EXP
0x2b8 SWAP1
0x2b9 DIV
0x2ba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2cf AND
0x2d0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e5 AND
0x2e6 CALLER
0x2e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2fc AND
0x2fd EQ
0x2fe ISZERO
0x2ff PUSH2 0x34d
0x302 JUMPI
---
0x2ab: JUMPDEST 
0x2ac: V155 = 0x0
0x2af: V156 = 0x0
0x2b2: V157 = S[0x0]
0x2b4: V158 = 0x100
0x2b7: V159 = EXP 0x100 0x0
0x2b9: V160 = DIV V157 0x1
0x2ba: V161 = 0xffffffffffffffffffffffffffffffffffffffff
0x2cf: V162 = AND 0xffffffffffffffffffffffffffffffffffffffff V160
0x2d0: V163 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e5: V164 = AND 0xffffffffffffffffffffffffffffffffffffffff V162
0x2e6: V165 = CALLER
0x2e7: V166 = 0xffffffffffffffffffffffffffffffffffffffff
0x2fc: V167 = AND 0xffffffffffffffffffffffffffffffffffffffff V165
0x2fd: V168 = EQ V167 V164
0x2fe: V169 = ISZERO V168
0x2ff: V170 = 0x34d
0x302: JUMPI 0x34d V169
---
Entry stack: [V11, 0x156, V80]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x156, V80, 0x0]

================================

Block 0x303
[0x303:0x33e]
---
Predecessors: [0x2ab]
Successors: [0x33f, 0x348]
---
0x303 DUP2
0x304 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x319 AND
0x31a PUSH2 0x8fc
0x31d CALLVALUE
0x31e SWAP1
0x31f DUP2
0x320 ISZERO
0x321 MUL
0x322 SWAP1
0x323 PUSH1 0x40
0x325 MLOAD
0x326 PUSH1 0x0
0x328 PUSH1 0x40
0x32a MLOAD
0x32b DUP1
0x32c DUP4
0x32d SUB
0x32e DUP2
0x32f DUP6
0x330 DUP9
0x331 DUP9
0x332 CALL
0x333 SWAP4
0x334 POP
0x335 POP
0x336 POP
0x337 POP
0x338 ISZERO
0x339 DUP1
0x33a ISZERO
0x33b PUSH2 0x348
0x33e JUMPI
---
0x304: V171 = 0xffffffffffffffffffffffffffffffffffffffff
0x319: V172 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0x31a: V173 = 0x8fc
0x31d: V174 = CALLVALUE
0x320: V175 = ISZERO V174
0x321: V176 = MUL V175 0x8fc
0x323: V177 = 0x40
0x325: V178 = M[0x40]
0x326: V179 = 0x0
0x328: V180 = 0x40
0x32a: V181 = M[0x40]
0x32d: V182 = SUB V178 V181
0x332: V183 = CALL V176 V172 V174 V181 V182 V181 0x0
0x338: V184 = ISZERO V183
0x33a: V185 = ISZERO V184
0x33b: V186 = 0x348
0x33e: JUMPI 0x348 V185
---
Entry stack: [V11, 0x156, V80, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V184]
Exit stack: [V11, 0x156, V80, 0x0, V184]

================================

Block 0x33f
[0x33f:0x347]
---
Predecessors: [0x303]
Successors: []
---
0x33f RETURNDATASIZE
0x340 PUSH1 0x0
0x342 DUP1
0x343 RETURNDATACOPY
0x344 RETURNDATASIZE
0x345 PUSH1 0x0
0x347 REVERT
---
0x33f: V187 = RETURNDATASIZE
0x340: V188 = 0x0
0x343: RETURNDATACOPY 0x0 0x0 V187
0x344: V189 = RETURNDATASIZE
0x345: V190 = 0x0
0x347: REVERT 0x0 V189
---
Entry stack: [V11, 0x156, V80, 0x0, V184]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x156, V80, 0x0, V184]

================================

Block 0x348
[0x348:0x34c]
---
Predecessors: [0x303]
Successors: [0x34d]
---
0x348 JUMPDEST
0x349 POP
0x34a CALLVALUE
0x34b SWAP1
0x34c POP
---
0x348: JUMPDEST 
0x34a: V191 = CALLVALUE
---
Entry stack: [V11, 0x156, V80, 0x0, V184]
Stack pops: 2
Stack additions: [V191]
Exit stack: [V11, 0x156, V80, V191]

================================

Block 0x34d
[0x34d:0x351]
---
Predecessors: [0x2ab, 0x348]
Successors: [0x156]
---
0x34d JUMPDEST
0x34e SWAP2
0x34f SWAP1
0x350 POP
0x351 JUMP
---
0x34d: JUMPDEST 
0x351: JUMP 0x156
---
Entry stack: [V11, 0x156, V80, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V11, S0]

================================

Block 0x352
[0x352:0x3a7]
---
Predecessors: [0x178]
Successors: [0x3a8, 0x3e1]
---
0x352 JUMPDEST
0x353 PUSH1 0x0
0x355 DUP1
0x356 SWAP1
0x357 SLOAD
0x358 SWAP1
0x359 PUSH2 0x100
0x35c EXP
0x35d SWAP1
0x35e DIV
0x35f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x374 AND
0x375 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x38a AND
0x38b CALLER
0x38c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a1 AND
0x3a2 EQ
0x3a3 ISZERO
0x3a4 PUSH2 0x3e1
0x3a7 JUMPI
---
0x352: JUMPDEST 
0x353: V192 = 0x0
0x357: V193 = S[0x0]
0x359: V194 = 0x100
0x35c: V195 = EXP 0x100 0x0
0x35e: V196 = DIV V193 0x1
0x35f: V197 = 0xffffffffffffffffffffffffffffffffffffffff
0x374: V198 = AND 0xffffffffffffffffffffffffffffffffffffffff V196
0x375: V199 = 0xffffffffffffffffffffffffffffffffffffffff
0x38a: V200 = AND 0xffffffffffffffffffffffffffffffffffffffff V198
0x38b: V201 = CALLER
0x38c: V202 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a1: V203 = AND 0xffffffffffffffffffffffffffffffffffffffff V201
0x3a2: V204 = EQ V203 V200
0x3a3: V205 = ISZERO V204
0x3a4: V206 = 0x3e1
0x3a7: JUMPI 0x3e1 V205
---
Entry stack: [V11, 0x181]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x181]

================================

Block 0x3a8
[0x3a8:0x3e0]
---
Predecessors: [0x352]
Successors: []
---
0x3a8 PUSH1 0x0
0x3aa DUP1
0x3ab SWAP1
0x3ac SLOAD
0x3ad SWAP1
0x3ae PUSH2 0x100
0x3b1 EXP
0x3b2 SWAP1
0x3b3 DIV
0x3b4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c9 AND
0x3ca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3df AND
0x3e0 SELFDESTRUCT
---
0x3a8: V207 = 0x0
0x3ac: V208 = S[0x0]
0x3ae: V209 = 0x100
0x3b1: V210 = EXP 0x100 0x0
0x3b3: V211 = DIV V208 0x1
0x3b4: V212 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c9: V213 = AND 0xffffffffffffffffffffffffffffffffffffffff V211
0x3ca: V214 = 0xffffffffffffffffffffffffffffffffffffffff
0x3df: V215 = AND 0xffffffffffffffffffffffffffffffffffffffff V213
0x3e0: SELFDESTRUCT V215
---
Entry stack: [V11, 0x181]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x181]

================================

Block 0x3e1
[0x3e1:0x3e2]
---
Predecessors: [0x352]
Successors: [0x181]
---
0x3e1 JUMPDEST
0x3e2 JUMP
---
0x3e1: JUMPDEST 
0x3e2: JUMP 0x181
---
Entry stack: [V11, 0x181]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x3e3
[0x3e3:0x419]
---
Predecessors: []
Successors: []
---
0x3e3 STOP
0x3e4 LOG1
0x3e5 PUSH6 0x627a7a723058
0x3ec SHA3
0x3ed MISSING 0x2a
0x3ee MISSING 0xd9
0x3ef EXTCODESIZE
0x3f0 SAR
0x3f1 SAR
0x3f2 MISSING 0xef
0x3f3 MSIZE
0x3f4 TIMESTAMP
0x3f5 MISSING 0xb8
0x3f6 SWAP11
0x3f7 PUSH16 0x6afd78760b15418e62df952acdfd1844
0x408 AND
0x409 GASLIMIT
0x40a LOG3
0x40b PUSH14 0x970029
---
0x3e3: STOP 
0x3e4: LOG S0 S1 S2
0x3e5: V216 = 0x627a7a723058
0x3ec: V217 = SHA3 0x627a7a723058 S3
0x3ed: MISSING 0x2a
0x3ee: MISSING 0xd9
0x3ef: V218 = EXTCODESIZE S0
0x3f0: V219 = SAR V218 S1
0x3f1: V220 = SAR V219 S2
0x3f2: MISSING 0xef
0x3f3: V221 = MSIZE
0x3f4: V222 = TIMESTAMP
0x3f5: MISSING 0xb8
0x3f7: V223 = 0x6afd78760b15418e62df952acdfd1844
0x408: V224 = AND 0x6afd78760b15418e62df952acdfd1844 S11
0x409: V225 = GASLIMIT
0x40a: LOG V225 V224 S1 S2 S3
0x40b: V226 = 0x970029
---
Entry stack: []
Stack pops: 0
Stack additions: [V217, V220, V222, V221, 0x970029, S4, S5, S6, S7, S8, S9, S10, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x3191b6b6
Entry block: 0x67
Exit block: 0xa8
Body: 0x67, 0x6f, 0x73, 0xa8, 0x183, 0x1db, 0x210

Function 1:
Public function signature: 0x800bfd3a
Entry block: 0xbe
Exit block: 0xff
Body: 0xbe, 0xc6, 0xca, 0xff, 0x215, 0x26d, 0x2a6

Function 2:
Public function signature: 0x833ec720
Entry block: 0x115
Exit block: 0x156
Body: 0x115, 0x11d, 0x121, 0x156, 0x2ab, 0x303, 0x33f, 0x348, 0x34d

Function 3:
Public function signature: 0x9cb8a26a
Entry block: 0x16c
Exit block: 0x181
Body: 0x16c, 0x174, 0x178, 0x181, 0x352, 0x3a8, 0x3e1

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x62
Body: 0x62

