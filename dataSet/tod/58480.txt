Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xa3]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xa3
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xa3
0xa: JUMPI 0xa3 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0xa5]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x13cf08b
0x19 DUP2
0x1a EQ
0x1b PUSH2 0xa5
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x13cf08b
0x1a: V12 = EQ V10 0x13cf08b
0x1b: V13 = 0xa5
0x1e: JUMPI 0xa5 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0x1aa]
---
0x1f DUP1
0x20 PUSH4 0x237e9492
0x25 EQ
0x26 PUSH2 0x1aa
0x29 JUMPI
---
0x20: V14 = 0x237e9492
0x25: V15 = EQ 0x237e9492 V10
0x26: V16 = 0x1aa
0x29: JUMPI 0x1aa V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0x2cf]
---
0x2a DUP1
0x2b PUSH4 0x2783ebda
0x30 EQ
0x31 PUSH2 0x2cf
0x34 JUMPI
---
0x2b: V17 = 0x2783ebda
0x30: V18 = EQ 0x2783ebda V10
0x31: V19 = 0x2cf
0x34: JUMPI 0x2cf V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0x2d8]
---
0x35 DUP1
0x36 PUSH4 0x27ebcf0e
0x3b EQ
0x3c PUSH2 0x2d8
0x3f JUMPI
---
0x36: V20 = 0x27ebcf0e
0x3b: V21 = EQ 0x27ebcf0e V10
0x3c: V22 = 0x2d8
0x3f: JUMPI 0x2d8 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x2ea]
---
0x40 DUP1
0x41 PUSH4 0x3f5a0bdd
0x46 EQ
0x47 PUSH2 0x2ea
0x4a JUMPI
---
0x41: V23 = 0x3f5a0bdd
0x46: V24 = EQ 0x3f5a0bdd V10
0x47: V25 = 0x2ea
0x4a: JUMPI 0x2ea V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x30c]
---
0x4b DUP1
0x4c PUSH4 0x52091047
0x51 EQ
0x52 PUSH2 0x30c
0x55 JUMPI
---
0x4c: V26 = 0x52091047
0x51: V27 = EQ 0x52091047 V10
0x52: V28 = 0x30c
0x55: JUMPI 0x30c V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x334]
---
0x56 DUP1
0x57 PUSH4 0x69bd3436
0x5c EQ
0x5d PUSH2 0x334
0x60 JUMPI
---
0x57: V29 = 0x69bd3436
0x5c: V30 = EQ 0x69bd3436 V10
0x5d: V31 = 0x334
0x60: JUMPI 0x334 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x33d]
---
0x61 DUP1
0x62 PUSH4 0x83876bc9
0x67 EQ
0x68 PUSH2 0x33d
0x6b JUMPI
---
0x62: V32 = 0x83876bc9
0x67: V33 = EQ 0x83876bc9 V10
0x68: V34 = 0x33d
0x6b: JUMPI 0x33d V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x43f]
---
0x6c DUP1
0x6d PUSH4 0x8da5cb5b
0x72 EQ
0x73 PUSH2 0x43f
0x76 JUMPI
---
0x6d: V35 = 0x8da5cb5b
0x72: V36 = EQ 0x8da5cb5b V10
0x73: V37 = 0x43f
0x76: JUMPI 0x43f V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x451]
---
0x77 DUP1
0x78 PUSH4 0xb9f256cd
0x7d EQ
0x7e PUSH2 0x451
0x81 JUMPI
---
0x78: V38 = 0xb9f256cd
0x7d: V39 = EQ 0xb9f256cd V10
0x7e: V40 = 0x451
0x81: JUMPI 0x451 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x550]
---
0x82 DUP1
0x83 PUSH4 0xc9d27afe
0x88 EQ
0x89 PUSH2 0x550
0x8c JUMPI
---
0x83: V41 = 0xc9d27afe
0x88: V42 = EQ 0xc9d27afe V10
0x89: V43 = 0x550
0x8c: JUMPI 0x550 V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x5cf]
---
0x8d DUP1
0x8e PUSH4 0xeceb2945
0x93 EQ
0x94 PUSH2 0x5cf
0x97 JUMPI
---
0x8e: V44 = 0xeceb2945
0x93: V45 = EQ 0xeceb2945 V10
0x94: V46 = 0x5cf
0x97: JUMPI 0x5cf V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x8d]
Successors: [0xa3, 0x6ab]
---
0x98 DUP1
0x99 PUSH4 0xf2fde38b
0x9e EQ
0x9f PUSH2 0x6ab
0xa2 JUMPI
---
0x99: V47 = 0xf2fde38b
0x9e: V48 = EQ 0xf2fde38b V10
0x9f: V49 = 0x6ab
0xa2: JUMPI 0x6ab V48
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa3
[0xa3:0xa4]
---
Predecessors: [0x0, 0x98, 0x7bd, 0x855]
Successors: []
---
0xa3 JUMPDEST
0xa4 STOP
---
0xa3: JUMPDEST 
0xa4: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xa5
[0xa5:0xb8]
---
Predecessors: [0xb]
Successors: [0xb9]
---
0xa5 JUMPDEST
0xa6 PUSH2 0x6cc
0xa9 PUSH1 0x4
0xab CALLDATALOAD
0xac PUSH1 0x3
0xae DUP1
0xaf SLOAD
0xb0 DUP3
0xb1 SWAP1
0xb2 DUP2
0xb3 LT
0xb4 ISZERO
0xb5 PUSH2 0x2
0xb8 JUMPI
---
0xa5: JUMPDEST 
0xa6: V50 = 0x6cc
0xa9: V51 = 0x4
0xab: V52 = CALLDATALOAD 0x4
0xac: V53 = 0x3
0xaf: V54 = S[0x3]
0xb3: V55 = LT V52 V54
0xb4: V56 = ISZERO V55
0xb5: V57 = 0x2
0xb8: THROWI V56
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x6cc, V52, 0x3, V52]
Exit stack: [V10, 0x6cc, V52, 0x3, V52]

================================

Block 0xb9
[0xb9:0x1a9]
---
Predecessors: [0xa5]
Successors: [0x6cc]
---
0xb9 POP
0xba PUSH1 0x0
0xbc MSTORE
0xbd PUSH32 0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85f
0xde PUSH1 0x8
0xe0 SWAP1
0xe1 SWAP2
0xe2 MUL
0xe3 SWAP1
0xe4 DUP2
0xe5 ADD
0xe6 SLOAD
0xe7 PUSH32 0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f860
0x108 DUP3
0x109 ADD
0x10a SLOAD
0x10b PUSH1 0x0
0x10d DUP1
0x10e MLOAD
0x10f PUSH1 0x20
0x111 PUSH2 0xf80
0x114 DUP4
0x115 CODECOPY
0x116 DUP2
0x117 MLOAD
0x118 SWAP2
0x119 MSTORE
0x11a DUP4
0x11b ADD
0x11c SLOAD
0x11d PUSH32 0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c
0x13e DUP5
0x13f ADD
0x140 SLOAD
0x141 PUSH32 0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85d
0x162 DUP6
0x163 ADD
0x164 SLOAD
0x165 PUSH1 0x1
0x167 PUSH1 0xa0
0x169 PUSH1 0x2
0x16b EXP
0x16c SUB
0x16d SWAP3
0x16e SWAP1
0x16f SWAP3
0x170 AND
0x171 SWAP5
0x172 SWAP1
0x173 SWAP4
0x174 SWAP2
0x175 SWAP3
0x176 PUSH32 0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85e
0x197 SWAP1
0x198 SWAP2
0x199 ADD
0x19a SWAP2
0x19b SWAP1
0x19c PUSH1 0xff
0x19e DUP2
0x19f DUP2
0x1a0 AND
0x1a1 SWAP2
0x1a2 PUSH2 0x100
0x1a5 SWAP1
0x1a6 DIV
0x1a7 AND
0x1a8 DUP8
0x1a9 JUMP
---
0xba: V58 = 0x0
0xbc: M[0x0] = 0x3
0xbd: V59 = 0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85f
0xde: V60 = 0x8
0xe2: V61 = MUL V52 0x8
0xe5: V62 = ADD V61 0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85f
0xe6: V63 = S[V62]
0xe7: V64 = 0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f860
0x109: V65 = ADD V61 0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f860
0x10a: V66 = S[V65]
0x10b: V67 = 0x0
0x10e: V68 = M[0x0]
0x10f: V69 = 0x20
0x111: V70 = 0xf80
0x115: CODECOPY 0x0 0xf80 0x20
0x117: V71 = M[0x0]
0x119: M[0x0] = V68
0x11b: V72 = ADD V61 V71
0x11c: V73 = S[V72]
0x11d: V74 = 0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c
0x13f: V75 = ADD V61 0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c
0x140: V76 = S[V75]
0x141: V77 = 0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85d
0x163: V78 = ADD V61 0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85d
0x164: V79 = S[V78]
0x165: V80 = 0x1
0x167: V81 = 0xa0
0x169: V82 = 0x2
0x16b: V83 = EXP 0x2 0xa0
0x16c: V84 = SUB 0x10000000000000000000000000000000000000000 0x1
0x170: V85 = AND 0xffffffffffffffffffffffffffffffffffffffff V73
0x176: V86 = 0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85e
0x199: V87 = ADD V61 0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85e
0x19c: V88 = 0xff
0x1a0: V89 = AND 0xff V66
0x1a2: V90 = 0x100
0x1a6: V91 = DIV V66 0x100
0x1a7: V92 = AND V91 0xff
0x1a9: JUMP 0x6cc
---
Entry stack: [V10, 0x6cc, V52, 0x3, V52]
Stack pops: 4
Stack additions: [S3, V85, V76, V79, V87, V63, V89, V92]
Exit stack: [V10, 0x6cc, V85, V76, V79, V87, V63, V89, V92]

================================

Block 0x1aa
[0x1aa:0x212]
---
Predecessors: [0x1f]
Successors: [0x213]
---
0x1aa JUMPDEST
0x1ab PUSH1 0x40
0x1ad DUP1
0x1ae MLOAD
0x1af PUSH1 0x20
0x1b1 PUSH1 0x24
0x1b3 DUP1
0x1b4 CALLDATALOAD
0x1b5 PUSH1 0x4
0x1b7 DUP2
0x1b8 DUP2
0x1b9 ADD
0x1ba CALLDATALOAD
0x1bb PUSH1 0x1f
0x1bd DUP2
0x1be ADD
0x1bf DUP6
0x1c0 SWAP1
0x1c1 DIV
0x1c2 DUP6
0x1c3 MUL
0x1c4 DUP7
0x1c5 ADD
0x1c6 DUP6
0x1c7 ADD
0x1c8 SWAP1
0x1c9 SWAP7
0x1ca MSTORE
0x1cb DUP6
0x1cc DUP6
0x1cd MSTORE
0x1ce PUSH2 0x78e
0x1d1 SWAP6
0x1d2 DUP2
0x1d3 CALLDATALOAD
0x1d4 SWAP6
0x1d5 SWAP2
0x1d6 SWAP5
0x1d7 PUSH1 0x44
0x1d9 SWAP5
0x1da SWAP3
0x1db SWAP4
0x1dc SWAP1
0x1dd SWAP3
0x1de ADD
0x1df SWAP2
0x1e0 DUP2
0x1e1 SWAP1
0x1e2 DUP5
0x1e3 ADD
0x1e4 DUP4
0x1e5 DUP3
0x1e6 DUP1
0x1e7 DUP3
0x1e8 DUP5
0x1e9 CALLDATACOPY
0x1ea POP
0x1eb SWAP5
0x1ec SWAP7
0x1ed POP
0x1ee POP
0x1ef POP
0x1f0 POP
0x1f1 POP
0x1f2 POP
0x1f3 POP
0x1f4 PUSH1 0x0
0x1f6 PUSH1 0x0
0x1f8 PUSH1 0x0
0x1fa PUSH1 0x0
0x1fc PUSH1 0x0
0x1fe PUSH1 0x0
0x200 PUSH1 0x0
0x202 PUSH1 0x0
0x204 PUSH1 0x3
0x206 PUSH1 0x0
0x208 POP
0x209 DUP11
0x20a DUP2
0x20b SLOAD
0x20c DUP2
0x20d LT
0x20e ISZERO
0x20f PUSH2 0x2
0x212 JUMPI
---
0x1aa: JUMPDEST 
0x1ab: V93 = 0x40
0x1ae: V94 = M[0x40]
0x1af: V95 = 0x20
0x1b1: V96 = 0x24
0x1b4: V97 = CALLDATALOAD 0x24
0x1b5: V98 = 0x4
0x1b9: V99 = ADD 0x4 V97
0x1ba: V100 = CALLDATALOAD V99
0x1bb: V101 = 0x1f
0x1be: V102 = ADD V100 0x1f
0x1c1: V103 = DIV V102 0x20
0x1c3: V104 = MUL 0x20 V103
0x1c5: V105 = ADD V94 V104
0x1c7: V106 = ADD 0x20 V105
0x1ca: M[0x40] = V106
0x1cd: M[V94] = V100
0x1ce: V107 = 0x78e
0x1d3: V108 = CALLDATALOAD 0x4
0x1d7: V109 = 0x44
0x1de: V110 = ADD 0x24 V97
0x1e3: V111 = ADD V94 0x20
0x1e9: CALLDATACOPY V111 V110 V100
0x1f4: V112 = 0x0
0x1f6: V113 = 0x0
0x1f8: V114 = 0x0
0x1fa: V115 = 0x0
0x1fc: V116 = 0x0
0x1fe: V117 = 0x0
0x200: V118 = 0x0
0x202: V119 = 0x0
0x204: V120 = 0x3
0x206: V121 = 0x0
0x20b: V122 = S[0x3]
0x20d: V123 = LT V108 V122
0x20e: V124 = ISZERO V123
0x20f: V125 = 0x2
0x212: THROWI V124
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x78e, V108, V94, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, V108]
Exit stack: [V10, 0x78e, V108, V94, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, V108]

================================

Block 0x213
[0x213:0x23a]
---
Predecessors: [0x1aa]
Successors: [0x23b, 0x244]
---
0x213 POP
0x214 DUP2
0x215 MSTORE
0x216 PUSH1 0x8
0x218 DUP11
0x219 MUL
0x21a PUSH1 0x0
0x21c DUP1
0x21d MLOAD
0x21e PUSH1 0x20
0x220 PUSH2 0xf80
0x223 DUP4
0x224 CODECOPY
0x225 DUP2
0x226 MLOAD
0x227 SWAP2
0x228 MSTORE
0x229 ADD
0x22a DUP2
0x22b POP
0x22c PUSH1 0x4
0x22e DUP2
0x22f ADD
0x230 SLOAD
0x231 SWAP1
0x232 SWAP8
0x233 POP
0x234 TIMESTAMP
0x235 LT
0x236 DUP1
0x237 PUSH2 0x244
0x23a JUMPI
---
0x215: M[0x0] = 0x3
0x216: V126 = 0x8
0x219: V127 = MUL V108 0x8
0x21a: V128 = 0x0
0x21d: V129 = M[0x0]
0x21e: V130 = 0x20
0x220: V131 = 0xf80
0x224: CODECOPY 0x0 0xf80 0x20
0x226: V132 = M[0x0]
0x228: M[0x0] = V129
0x229: V133 = ADD V132 V127
0x22c: V134 = 0x4
0x22f: V135 = ADD V133 0x4
0x230: V136 = S[V135]
0x234: V137 = TIMESTAMP
0x235: V138 = LT V137 V136
0x237: V139 = 0x244
0x23a: JUMPI 0x244 V138
---
Entry stack: [V10, 0x78e, V108, V94, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, V108]
Stack pops: 12
Stack additions: [S11, S10, S9, V133, S7, S6, S5, S4, S3, S2, V138]
Exit stack: [V10, 0x78e, V108, V94, 0x0, V133, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V138]

================================

Block 0x23b
[0x23b:0x243]
---
Predecessors: [0x213]
Successors: [0x244]
---
0x23b POP
0x23c PUSH1 0x5
0x23e DUP8
0x23f ADD
0x240 SLOAD
0x241 PUSH1 0xff
0x243 AND
---
0x23c: V140 = 0x5
0x23f: V141 = ADD V133 0x5
0x240: V142 = S[V141]
0x241: V143 = 0xff
0x243: V144 = AND 0xff V142
---
Entry stack: [V10, 0x78e, V108, V94, 0x0, V133, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V138]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, V144]
Exit stack: [V10, 0x78e, V108, V94, 0x0, V133, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V144]

================================

Block 0x244
[0x244:0x249]
---
Predecessors: [0x213, 0x23b]
Successors: [0x24a, 0x2c5]
---
0x244 JUMPDEST
0x245 DUP1
0x246 PUSH2 0x2c5
0x249 JUMPI
---
0x244: JUMPDEST 
0x246: V145 = 0x2c5
0x249: JUMPI 0x2c5 S0
---
Entry stack: [V10, 0x78e, V108, V94, 0x0, V133, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x78e, V108, V94, 0x0, V133, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, S0]

================================

Block 0x24a
[0x24a:0x2c4]
---
Predecessors: [0x244]
Successors: [0x2c5]
---
0x24a POP
0x24b DUP7
0x24c PUSH1 0x0
0x24e ADD
0x24f PUSH1 0x0
0x251 SWAP1
0x252 SLOAD
0x253 SWAP1
0x254 PUSH2 0x100
0x257 EXP
0x258 SWAP1
0x259 DIV
0x25a PUSH1 0x1
0x25c PUSH1 0xa0
0x25e PUSH1 0x2
0x260 EXP
0x261 SUB
0x262 AND
0x263 DUP8
0x264 PUSH1 0x1
0x266 ADD
0x267 PUSH1 0x0
0x269 POP
0x26a SLOAD
0x26b DUP11
0x26c PUSH1 0x40
0x26e MLOAD
0x26f DUP1
0x270 DUP5
0x271 PUSH1 0x1
0x273 PUSH1 0xa0
0x275 PUSH1 0x2
0x277 EXP
0x278 SUB
0x279 AND
0x27a PUSH1 0x60
0x27c PUSH1 0x2
0x27e EXP
0x27f MUL
0x280 DUP2
0x281 MSTORE
0x282 PUSH1 0x14
0x284 ADD
0x285 DUP4
0x286 DUP2
0x287 MSTORE
0x288 PUSH1 0x20
0x28a ADD
0x28b DUP3
0x28c DUP1
0x28d MLOAD
0x28e SWAP1
0x28f PUSH1 0x20
0x291 ADD
0x292 SWAP1
0x293 DUP1
0x294 DUP4
0x295 DUP4
0x296 DUP3
0x297 SWAP1
0x298 PUSH1 0x0
0x29a PUSH1 0x4
0x29c PUSH1 0x20
0x29e DUP5
0x29f PUSH1 0x1f
0x2a1 ADD
0x2a2 DIV
0x2a3 PUSH1 0xf
0x2a5 MUL
0x2a6 PUSH1 0x3
0x2a8 ADD
0x2a9 CALL
0x2aa POP
0x2ab SWAP1
0x2ac POP
0x2ad ADD
0x2ae SWAP4
0x2af POP
0x2b0 POP
0x2b1 POP
0x2b2 POP
0x2b3 PUSH1 0x40
0x2b5 MLOAD
0x2b6 DUP1
0x2b7 SWAP2
0x2b8 SUB
0x2b9 SWAP1
0x2ba SHA3
0x2bb DUP8
0x2bc PUSH1 0x2
0x2be ADD
0x2bf PUSH1 0x0
0x2c1 POP
0x2c2 SLOAD
0x2c3 EQ
0x2c4 ISZERO
---
0x24c: V146 = 0x0
0x24e: V147 = ADD 0x0 V133
0x24f: V148 = 0x0
0x252: V149 = S[V147]
0x254: V150 = 0x100
0x257: V151 = EXP 0x100 0x0
0x259: V152 = DIV V149 0x1
0x25a: V153 = 0x1
0x25c: V154 = 0xa0
0x25e: V155 = 0x2
0x260: V156 = EXP 0x2 0xa0
0x261: V157 = SUB 0x10000000000000000000000000000000000000000 0x1
0x262: V158 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0x264: V159 = 0x1
0x266: V160 = ADD 0x1 V133
0x267: V161 = 0x0
0x26a: V162 = S[V160]
0x26c: V163 = 0x40
0x26e: V164 = M[0x40]
0x271: V165 = 0x1
0x273: V166 = 0xa0
0x275: V167 = 0x2
0x277: V168 = EXP 0x2 0xa0
0x278: V169 = SUB 0x10000000000000000000000000000000000000000 0x1
0x279: V170 = AND 0xffffffffffffffffffffffffffffffffffffffff V158
0x27a: V171 = 0x60
0x27c: V172 = 0x2
0x27e: V173 = EXP 0x2 0x60
0x27f: V174 = MUL 0x1000000000000000000000000 V170
0x281: M[V164] = V174
0x282: V175 = 0x14
0x284: V176 = ADD 0x14 V164
0x287: M[V176] = V162
0x288: V177 = 0x20
0x28a: V178 = ADD 0x20 V176
0x28d: V179 = M[V94]
0x28f: V180 = 0x20
0x291: V181 = ADD 0x20 V94
0x298: V182 = 0x0
0x29a: V183 = 0x4
0x29c: V184 = 0x20
0x29f: V185 = 0x1f
0x2a1: V186 = ADD 0x1f V179
0x2a2: V187 = DIV V186 0x20
0x2a3: V188 = 0xf
0x2a5: V189 = MUL 0xf V187
0x2a6: V190 = 0x3
0x2a8: V191 = ADD 0x3 V189
0x2a9: V192 = CALL V191 0x4 0x0 V181 V179 V178 V179
0x2ad: V193 = ADD V179 V178
0x2b3: V194 = 0x40
0x2b5: V195 = M[0x40]
0x2b8: V196 = SUB V193 V195
0x2ba: V197 = SHA3 V195 V196
0x2bc: V198 = 0x2
0x2be: V199 = ADD 0x2 V133
0x2bf: V200 = 0x0
0x2c2: V201 = S[V199]
0x2c3: V202 = EQ V201 V197
0x2c4: V203 = ISZERO V202
---
Entry stack: [V10, 0x78e, V108, V94, 0x0, V133, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, S0]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, S1, V203]
Exit stack: [V10, 0x78e, V108, V94, 0x0, V133, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V203]

================================

Block 0x2c5
[0x2c5:0x2ca]
---
Predecessors: [0x244, 0x24a]
Successors: [0x2cb, 0xd6a]
---
0x2c5 JUMPDEST
0x2c6 ISZERO
0x2c7 PUSH2 0xd6a
0x2ca JUMPI
---
0x2c5: JUMPDEST 
0x2c6: V204 = ISZERO S0
0x2c7: V205 = 0xd6a
0x2ca: JUMPI 0xd6a V204
---
Entry stack: [V10, 0x78e, V108, V94, 0x0, V133, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x78e, V108, V94, 0x0, V133, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x2cb
[0x2cb:0x2ce]
---
Predecessors: [0x2c5]
Successors: []
---
0x2cb PUSH2 0x2
0x2ce JUMP
---
0x2cb: V206 = 0x2
0x2ce: THROW 
---
Entry stack: [V10, 0x78e, V108, V94, 0x0, V133, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x78e, V108, V94, 0x0, V133, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x2cf
[0x2cf:0x2d7]
---
Predecessors: [0x2a]
Successors: [0x78e]
---
0x2cf JUMPDEST
0x2d0 PUSH2 0x78e
0x2d3 PUSH1 0x1
0x2d5 SLOAD
0x2d6 DUP2
0x2d7 JUMP
---
0x2cf: JUMPDEST 
0x2d0: V207 = 0x78e
0x2d3: V208 = 0x1
0x2d5: V209 = S[0x1]
0x2d7: JUMP 0x78e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x78e, V209]
Exit stack: [V10, 0x78e, V209]

================================

Block 0x2d8
[0x2d8:0x2e9]
---
Predecessors: [0x35]
Successors: [0x7a0]
---
0x2d8 JUMPDEST
0x2d9 PUSH2 0x7a0
0x2dc PUSH1 0x4
0x2de SLOAD
0x2df PUSH1 0x1
0x2e1 PUSH1 0xa0
0x2e3 PUSH1 0x2
0x2e5 EXP
0x2e6 SUB
0x2e7 AND
0x2e8 DUP2
0x2e9 JUMP
---
0x2d8: JUMPDEST 
0x2d9: V210 = 0x7a0
0x2dc: V211 = 0x4
0x2de: V212 = S[0x4]
0x2df: V213 = 0x1
0x2e1: V214 = 0xa0
0x2e3: V215 = 0x2
0x2e5: V216 = EXP 0x2 0xa0
0x2e6: V217 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e7: V218 = AND 0xffffffffffffffffffffffffffffffffffffffff V212
0x2e9: JUMP 0x7a0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x7a0, V218]
Exit stack: [V10, 0x7a0, V218]

================================

Block 0x2ea
[0x2ea:0x307]
---
Predecessors: [0x40]
Successors: [0x308, 0x7d2]
---
0x2ea JUMPDEST
0x2eb PUSH2 0xa3
0x2ee PUSH1 0x4
0x2f0 CALLDATALOAD
0x2f1 PUSH1 0x0
0x2f3 SLOAD
0x2f4 PUSH1 0x1
0x2f6 PUSH1 0xa0
0x2f8 PUSH1 0x2
0x2fa EXP
0x2fb SUB
0x2fc SWAP1
0x2fd DUP2
0x2fe AND
0x2ff CALLER
0x300 SWAP1
0x301 SWAP2
0x302 AND
0x303 EQ
0x304 PUSH2 0x7d2
0x307 JUMPI
---
0x2ea: JUMPDEST 
0x2eb: V219 = 0xa3
0x2ee: V220 = 0x4
0x2f0: V221 = CALLDATALOAD 0x4
0x2f1: V222 = 0x0
0x2f3: V223 = S[0x0]
0x2f4: V224 = 0x1
0x2f6: V225 = 0xa0
0x2f8: V226 = 0x2
0x2fa: V227 = EXP 0x2 0xa0
0x2fb: V228 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2fe: V229 = AND 0xffffffffffffffffffffffffffffffffffffffff V223
0x2ff: V230 = CALLER
0x302: V231 = AND 0xffffffffffffffffffffffffffffffffffffffff V230
0x303: V232 = EQ V231 V229
0x304: V233 = 0x7d2
0x307: JUMPI 0x7d2 V232
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xa3, V221]
Exit stack: [V10, 0xa3, V221]

================================

Block 0x308
[0x308:0x30b]
---
Predecessors: [0x2ea]
Successors: []
---
0x308 PUSH2 0x2
0x30b JUMP
---
0x308: V234 = 0x2
0x30b: THROW 
---
Entry stack: [V10, 0xa3, V221]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3, V221]

================================

Block 0x30c
[0x30c:0x32f]
---
Predecessors: [0x4b]
Successors: [0x330, 0x7fe]
---
0x30c JUMPDEST
0x30d PUSH2 0xa3
0x310 PUSH1 0x4
0x312 CALLDATALOAD
0x313 PUSH1 0x24
0x315 CALLDATALOAD
0x316 PUSH1 0x44
0x318 CALLDATALOAD
0x319 PUSH1 0x0
0x31b SLOAD
0x31c PUSH1 0x1
0x31e PUSH1 0xa0
0x320 PUSH1 0x2
0x322 EXP
0x323 SUB
0x324 SWAP1
0x325 DUP2
0x326 AND
0x327 CALLER
0x328 SWAP1
0x329 SWAP2
0x32a AND
0x32b EQ
0x32c PUSH2 0x7fe
0x32f JUMPI
---
0x30c: JUMPDEST 
0x30d: V235 = 0xa3
0x310: V236 = 0x4
0x312: V237 = CALLDATALOAD 0x4
0x313: V238 = 0x24
0x315: V239 = CALLDATALOAD 0x24
0x316: V240 = 0x44
0x318: V241 = CALLDATALOAD 0x44
0x319: V242 = 0x0
0x31b: V243 = S[0x0]
0x31c: V244 = 0x1
0x31e: V245 = 0xa0
0x320: V246 = 0x2
0x322: V247 = EXP 0x2 0xa0
0x323: V248 = SUB 0x10000000000000000000000000000000000000000 0x1
0x326: V249 = AND 0xffffffffffffffffffffffffffffffffffffffff V243
0x327: V250 = CALLER
0x32a: V251 = AND 0xffffffffffffffffffffffffffffffffffffffff V250
0x32b: V252 = EQ V251 V249
0x32c: V253 = 0x7fe
0x32f: JUMPI 0x7fe V252
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xa3, V237, V239, V241]
Exit stack: [V10, 0xa3, V237, V239, V241]

================================

Block 0x330
[0x330:0x333]
---
Predecessors: [0x30c]
Successors: []
---
0x330 PUSH2 0x2
0x333 JUMP
---
0x330: V254 = 0x2
0x333: THROW 
---
Entry stack: [V10, 0xa3, V237, V239, V241]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3, V237, V239, V241]

================================

Block 0x334
[0x334:0x33c]
---
Predecessors: [0x56]
Successors: [0x78e]
---
0x334 JUMPDEST
0x335 PUSH2 0x78e
0x338 PUSH1 0x2
0x33a SLOAD
0x33b DUP2
0x33c JUMP
---
0x334: JUMPDEST 
0x335: V255 = 0x78e
0x338: V256 = 0x2
0x33a: V257 = S[0x2]
0x33c: JUMP 0x78e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x78e, V257]
Exit stack: [V10, 0x78e, V257]

================================

Block 0x33d
[0x33d:0x3c8]
---
Predecessors: [0x61]
Successors: [0x3c9]
---
0x33d JUMPDEST
0x33e PUSH1 0x40
0x340 DUP1
0x341 MLOAD
0x342 PUSH1 0x20
0x344 PUSH1 0x44
0x346 CALLDATALOAD
0x347 PUSH1 0x4
0x349 DUP2
0x34a DUP2
0x34b ADD
0x34c CALLDATALOAD
0x34d PUSH1 0x1f
0x34f DUP2
0x350 ADD
0x351 DUP5
0x352 SWAP1
0x353 DIV
0x354 DUP5
0x355 MUL
0x356 DUP6
0x357 ADD
0x358 DUP5
0x359 ADD
0x35a SWAP1
0x35b SWAP6
0x35c MSTORE
0x35d DUP5
0x35e DUP5
0x35f MSTORE
0x360 PUSH2 0x78e
0x363 SWAP5
0x364 DUP2
0x365 CALLDATALOAD
0x366 SWAP5
0x367 PUSH1 0x24
0x369 DUP1
0x36a CALLDATALOAD
0x36b SWAP6
0x36c SWAP4
0x36d SWAP5
0x36e PUSH1 0x64
0x370 SWAP5
0x371 SWAP3
0x372 SWAP4
0x373 SWAP2
0x374 ADD
0x375 SWAP2
0x376 DUP2
0x377 SWAP1
0x378 DUP5
0x379 ADD
0x37a DUP4
0x37b DUP3
0x37c DUP1
0x37d DUP3
0x37e DUP5
0x37f CALLDATACOPY
0x380 POP
0x381 POP
0x382 PUSH1 0x40
0x384 DUP1
0x385 MLOAD
0x386 PUSH1 0x20
0x388 SWAP8
0x389 CALLDATALOAD
0x38a DUP1
0x38b DUP11
0x38c ADD
0x38d CALLDATALOAD
0x38e PUSH1 0x1f
0x390 DUP2
0x391 ADD
0x392 DUP11
0x393 SWAP1
0x394 DIV
0x395 DUP11
0x396 MUL
0x397 DUP4
0x398 ADD
0x399 DUP11
0x39a ADD
0x39b SWAP1
0x39c SWAP4
0x39d MSTORE
0x39e DUP3
0x39f DUP3
0x3a0 MSTORE
0x3a1 SWAP7
0x3a2 SWAP9
0x3a3 SWAP8
0x3a4 PUSH1 0x84
0x3a6 SWAP8
0x3a7 SWAP2
0x3a8 SWAP7
0x3a9 POP
0x3aa PUSH1 0x24
0x3ac SWAP1
0x3ad SWAP2
0x3ae ADD
0x3af SWAP5
0x3b0 POP
0x3b1 SWAP1
0x3b2 SWAP3
0x3b3 POP
0x3b4 DUP3
0x3b5 SWAP2
0x3b6 POP
0x3b7 DUP5
0x3b8 ADD
0x3b9 DUP4
0x3ba DUP3
0x3bb DUP1
0x3bc DUP3
0x3bd DUP5
0x3be CALLDATACOPY
0x3bf POP
0x3c0 SWAP5
0x3c1 SWAP7
0x3c2 POP
0x3c3 POP
0x3c4 POP
0x3c5 POP
0x3c6 POP
0x3c7 POP
0x3c8 POP
---
0x33d: JUMPDEST 
0x33e: V258 = 0x40
0x341: V259 = M[0x40]
0x342: V260 = 0x20
0x344: V261 = 0x44
0x346: V262 = CALLDATALOAD 0x44
0x347: V263 = 0x4
0x34b: V264 = ADD 0x4 V262
0x34c: V265 = CALLDATALOAD V264
0x34d: V266 = 0x1f
0x350: V267 = ADD V265 0x1f
0x353: V268 = DIV V267 0x20
0x355: V269 = MUL 0x20 V268
0x357: V270 = ADD V259 V269
0x359: V271 = ADD 0x20 V270
0x35c: M[0x40] = V271
0x35f: M[V259] = V265
0x360: V272 = 0x78e
0x365: V273 = CALLDATALOAD 0x4
0x367: V274 = 0x24
0x36a: V275 = CALLDATALOAD 0x24
0x36e: V276 = 0x64
0x374: V277 = ADD 0x24 V262
0x379: V278 = ADD V259 0x20
0x37f: CALLDATACOPY V278 V277 V265
0x382: V279 = 0x40
0x385: V280 = M[0x40]
0x386: V281 = 0x20
0x389: V282 = CALLDATALOAD 0x64
0x38c: V283 = ADD 0x4 V282
0x38d: V284 = CALLDATALOAD V283
0x38e: V285 = 0x1f
0x391: V286 = ADD V284 0x1f
0x394: V287 = DIV V286 0x20
0x396: V288 = MUL 0x20 V287
0x398: V289 = ADD V280 V288
0x39a: V290 = ADD 0x20 V289
0x39d: M[0x40] = V290
0x3a0: M[V280] = V284
0x3a4: V291 = 0x84
0x3aa: V292 = 0x24
0x3ae: V293 = ADD V282 0x24
0x3b8: V294 = ADD V280 0x20
0x3be: CALLDATACOPY V294 V293 V284
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x78e, V273, V275, V259, V280]
Exit stack: [V10, 0x78e, V273, V275, V259, V280]

================================

Block 0x3c9
[0x3c9:0x42b]
---
Predecessors: [0x33d, 0x8c1]
Successors: [0x42c]
---
0x3c9 JUMPDEST
0x3ca PUSH1 0x0
0x3cc PUSH1 0x0
0x3ce PUSH1 0x4
0x3d0 PUSH1 0x0
0x3d2 SWAP1
0x3d3 SLOAD
0x3d4 SWAP1
0x3d5 PUSH2 0x100
0x3d8 EXP
0x3d9 SWAP1
0x3da DIV
0x3db PUSH1 0x1
0x3dd PUSH1 0xa0
0x3df PUSH1 0x2
0x3e1 EXP
0x3e2 SUB
0x3e3 AND
0x3e4 PUSH1 0x1
0x3e6 PUSH1 0xa0
0x3e8 PUSH1 0x2
0x3ea EXP
0x3eb SUB
0x3ec AND
0x3ed PUSH4 0x70a08231
0x3f2 CALLER
0x3f3 PUSH1 0x40
0x3f5 MLOAD
0x3f6 DUP3
0x3f7 PUSH1 0xe0
0x3f9 PUSH1 0x2
0x3fb EXP
0x3fc MUL
0x3fd DUP2
0x3fe MSTORE
0x3ff PUSH1 0x4
0x401 ADD
0x402 DUP1
0x403 DUP3
0x404 PUSH1 0x1
0x406 PUSH1 0xa0
0x408 PUSH1 0x2
0x40a EXP
0x40b SUB
0x40c AND
0x40d DUP2
0x40e MSTORE
0x40f PUSH1 0x20
0x411 ADD
0x412 SWAP2
0x413 POP
0x414 POP
0x415 PUSH1 0x20
0x417 PUSH1 0x40
0x419 MLOAD
0x41a DUP1
0x41b DUP4
0x41c SUB
0x41d DUP2
0x41e PUSH1 0x0
0x420 DUP8
0x421 PUSH2 0x61da
0x424 GAS
0x425 SUB
0x426 CALL
0x427 ISZERO
0x428 PUSH2 0x2
0x42b JUMPI
---
0x3c9: JUMPDEST 
0x3ca: V295 = 0x0
0x3cc: V296 = 0x0
0x3ce: V297 = 0x4
0x3d0: V298 = 0x0
0x3d3: V299 = S[0x4]
0x3d5: V300 = 0x100
0x3d8: V301 = EXP 0x100 0x0
0x3da: V302 = DIV V299 0x1
0x3db: V303 = 0x1
0x3dd: V304 = 0xa0
0x3df: V305 = 0x2
0x3e1: V306 = EXP 0x2 0xa0
0x3e2: V307 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3e3: V308 = AND 0xffffffffffffffffffffffffffffffffffffffff V302
0x3e4: V309 = 0x1
0x3e6: V310 = 0xa0
0x3e8: V311 = 0x2
0x3ea: V312 = EXP 0x2 0xa0
0x3eb: V313 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ec: V314 = AND 0xffffffffffffffffffffffffffffffffffffffff V308
0x3ed: V315 = 0x70a08231
0x3f2: V316 = CALLER
0x3f3: V317 = 0x40
0x3f5: V318 = M[0x40]
0x3f7: V319 = 0xe0
0x3f9: V320 = 0x2
0x3fb: V321 = EXP 0x2 0xe0
0x3fc: V322 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x3fe: M[V318] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x3ff: V323 = 0x4
0x401: V324 = ADD 0x4 V318
0x404: V325 = 0x1
0x406: V326 = 0xa0
0x408: V327 = 0x2
0x40a: V328 = EXP 0x2 0xa0
0x40b: V329 = SUB 0x10000000000000000000000000000000000000000 0x1
0x40c: V330 = AND 0xffffffffffffffffffffffffffffffffffffffff V316
0x40e: M[V324] = V330
0x40f: V331 = 0x20
0x411: V332 = ADD 0x20 V324
0x415: V333 = 0x20
0x417: V334 = 0x40
0x419: V335 = M[0x40]
0x41c: V336 = SUB V332 V335
0x41e: V337 = 0x0
0x421: V338 = 0x61da
0x424: V339 = GAS
0x425: V340 = SUB V339 0x61da
0x426: V341 = CALL V340 V314 0x0 V335 V336 V335 0x20
0x427: V342 = ISZERO V341
0x428: V343 = 0x2
0x42b: THROWI V342
---
Entry stack: [V10, 0x78e, V375, V377, V361, V382, S5, {0x78e, 0x8d7}, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x0, 0x0, V314, 0x70a08231, V332]
Exit stack: [V10, 0x78e, V375, V377, V361, V382, S5, {0x78e, 0x8d7}, S3, S2, S1, S0, 0x0, 0x0, V314, 0x70a08231, V332]

================================

Block 0x42c
[0x42c:0x43a]
---
Predecessors: [0x3c9]
Successors: [0x43b, 0x9c9]
---
0x42c POP
0x42d POP
0x42e PUSH1 0x40
0x430 MLOAD
0x431 MLOAD
0x432 DUP3
0x433 EQ
0x434 ISZERO
0x435 SWAP1
0x436 POP
0x437 PUSH2 0x9c9
0x43a JUMPI
---
0x42e: V344 = 0x40
0x430: V345 = M[0x40]
0x431: V346 = M[V345]
0x433: V347 = EQ 0x0 V346
0x434: V348 = ISZERO V347
0x437: V349 = 0x9c9
0x43a: JUMPI 0x9c9 V348
---
Entry stack: [V10, 0x78e, V375, V377, V361, V382, S10, {0x78e, 0x8d7}, S8, S7, S6, S5, 0x0, 0x0, V314, 0x70a08231, V332]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V10, 0x78e, V375, V377, V361, V382, S10, {0x78e, 0x8d7}, S8, S7, S6, S5, 0x0, 0x0]

================================

Block 0x43b
[0x43b:0x43e]
---
Predecessors: [0x42c]
Successors: []
---
0x43b PUSH2 0x2
0x43e JUMP
---
0x43b: V350 = 0x2
0x43e: THROW 
---
Entry stack: [V10, 0x78e, V375, V377, V361, V382, S7, {0x78e, 0x8d7}, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x78e, V375, V377, V361, V382, S7, {0x78e, 0x8d7}, S5, S4, S3, S2, 0x0, 0x0]

================================

Block 0x43f
[0x43f:0x450]
---
Predecessors: [0x6c]
Successors: [0x7a0]
---
0x43f JUMPDEST
0x440 PUSH2 0x7a0
0x443 PUSH1 0x0
0x445 SLOAD
0x446 PUSH1 0x1
0x448 PUSH1 0xa0
0x44a PUSH1 0x2
0x44c EXP
0x44d SUB
0x44e AND
0x44f DUP2
0x450 JUMP
---
0x43f: JUMPDEST 
0x440: V351 = 0x7a0
0x443: V352 = 0x0
0x445: V353 = S[0x0]
0x446: V354 = 0x1
0x448: V355 = 0xa0
0x44a: V356 = 0x2
0x44c: V357 = EXP 0x2 0xa0
0x44d: V358 = SUB 0x10000000000000000000000000000000000000000 0x1
0x44e: V359 = AND 0xffffffffffffffffffffffffffffffffffffffff V353
0x450: JUMP 0x7a0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x7a0, V359]
Exit stack: [V10, 0x7a0, V359]

================================

Block 0x451
[0x451:0x53c]
---
Predecessors: [0x77]
Successors: [0x53d]
---
0x451 JUMPDEST
0x452 PUSH1 0x40
0x454 DUP1
0x455 MLOAD
0x456 PUSH1 0x20
0x458 PUSH1 0x44
0x45a CALLDATALOAD
0x45b PUSH1 0x4
0x45d DUP2
0x45e DUP2
0x45f ADD
0x460 CALLDATALOAD
0x461 PUSH1 0x1f
0x463 DUP2
0x464 ADD
0x465 DUP5
0x466 SWAP1
0x467 DIV
0x468 DUP5
0x469 MUL
0x46a DUP6
0x46b ADD
0x46c DUP5
0x46d ADD
0x46e SWAP1
0x46f SWAP6
0x470 MSTORE
0x471 DUP5
0x472 DUP5
0x473 MSTORE
0x474 PUSH2 0x78e
0x477 SWAP5
0x478 DUP2
0x479 CALLDATALOAD
0x47a SWAP5
0x47b PUSH1 0x24
0x47d DUP1
0x47e CALLDATALOAD
0x47f SWAP6
0x480 SWAP4
0x481 SWAP5
0x482 PUSH1 0x64
0x484 SWAP5
0x485 SWAP3
0x486 SWAP4
0x487 SWAP2
0x488 ADD
0x489 SWAP2
0x48a DUP2
0x48b SWAP1
0x48c DUP5
0x48d ADD
0x48e DUP4
0x48f DUP3
0x490 DUP1
0x491 DUP3
0x492 DUP5
0x493 CALLDATACOPY
0x494 POP
0x495 POP
0x496 PUSH1 0x40
0x498 DUP1
0x499 MLOAD
0x49a PUSH1 0x20
0x49c SWAP8
0x49d CALLDATALOAD
0x49e DUP1
0x49f DUP11
0x4a0 ADD
0x4a1 CALLDATALOAD
0x4a2 PUSH1 0x1f
0x4a4 DUP2
0x4a5 ADD
0x4a6 DUP11
0x4a7 SWAP1
0x4a8 DIV
0x4a9 DUP11
0x4aa MUL
0x4ab DUP4
0x4ac ADD
0x4ad DUP11
0x4ae ADD
0x4af SWAP1
0x4b0 SWAP4
0x4b1 MSTORE
0x4b2 DUP3
0x4b3 DUP3
0x4b4 MSTORE
0x4b5 SWAP7
0x4b6 SWAP9
0x4b7 SWAP8
0x4b8 PUSH1 0x84
0x4ba SWAP8
0x4bb SWAP2
0x4bc SWAP7
0x4bd POP
0x4be PUSH1 0x24
0x4c0 SWAP1
0x4c1 SWAP2
0x4c2 ADD
0x4c3 SWAP5
0x4c4 POP
0x4c5 SWAP1
0x4c6 SWAP3
0x4c7 POP
0x4c8 DUP3
0x4c9 SWAP2
0x4ca POP
0x4cb DUP5
0x4cc ADD
0x4cd DUP4
0x4ce DUP3
0x4cf DUP1
0x4d0 DUP3
0x4d1 DUP5
0x4d2 CALLDATACOPY
0x4d3 POP
0x4d4 SWAP5
0x4d5 SWAP7
0x4d6 POP
0x4d7 POP
0x4d8 POP
0x4d9 POP
0x4da POP
0x4db POP
0x4dc POP
0x4dd PUSH1 0x0
0x4df PUSH1 0x4
0x4e1 PUSH1 0x0
0x4e3 SWAP1
0x4e4 SLOAD
0x4e5 SWAP1
0x4e6 PUSH2 0x100
0x4e9 EXP
0x4ea SWAP1
0x4eb DIV
0x4ec PUSH1 0x1
0x4ee PUSH1 0xa0
0x4f0 PUSH1 0x2
0x4f2 EXP
0x4f3 SUB
0x4f4 AND
0x4f5 PUSH1 0x1
0x4f7 PUSH1 0xa0
0x4f9 PUSH1 0x2
0x4fb EXP
0x4fc SUB
0x4fd AND
0x4fe PUSH4 0x70a08231
0x503 CALLER
0x504 PUSH1 0x40
0x506 MLOAD
0x507 DUP3
0x508 PUSH1 0xe0
0x50a PUSH1 0x2
0x50c EXP
0x50d MUL
0x50e DUP2
0x50f MSTORE
0x510 PUSH1 0x4
0x512 ADD
0x513 DUP1
0x514 DUP3
0x515 PUSH1 0x1
0x517 PUSH1 0xa0
0x519 PUSH1 0x2
0x51b EXP
0x51c SUB
0x51d AND
0x51e DUP2
0x51f MSTORE
0x520 PUSH1 0x20
0x522 ADD
0x523 SWAP2
0x524 POP
0x525 POP
0x526 PUSH1 0x20
0x528 PUSH1 0x40
0x52a MLOAD
0x52b DUP1
0x52c DUP4
0x52d SUB
0x52e DUP2
0x52f PUSH1 0x0
0x531 DUP8
0x532 PUSH2 0x61da
0x535 GAS
0x536 SUB
0x537 CALL
0x538 ISZERO
0x539 PUSH2 0x2
0x53c JUMPI
---
0x451: JUMPDEST 
0x452: V360 = 0x40
0x455: V361 = M[0x40]
0x456: V362 = 0x20
0x458: V363 = 0x44
0x45a: V364 = CALLDATALOAD 0x44
0x45b: V365 = 0x4
0x45f: V366 = ADD 0x4 V364
0x460: V367 = CALLDATALOAD V366
0x461: V368 = 0x1f
0x464: V369 = ADD V367 0x1f
0x467: V370 = DIV V369 0x20
0x469: V371 = MUL 0x20 V370
0x46b: V372 = ADD V361 V371
0x46d: V373 = ADD 0x20 V372
0x470: M[0x40] = V373
0x473: M[V361] = V367
0x474: V374 = 0x78e
0x479: V375 = CALLDATALOAD 0x4
0x47b: V376 = 0x24
0x47e: V377 = CALLDATALOAD 0x24
0x482: V378 = 0x64
0x488: V379 = ADD 0x24 V364
0x48d: V380 = ADD V361 0x20
0x493: CALLDATACOPY V380 V379 V367
0x496: V381 = 0x40
0x499: V382 = M[0x40]
0x49a: V383 = 0x20
0x49d: V384 = CALLDATALOAD 0x64
0x4a0: V385 = ADD 0x4 V384
0x4a1: V386 = CALLDATALOAD V385
0x4a2: V387 = 0x1f
0x4a5: V388 = ADD V386 0x1f
0x4a8: V389 = DIV V388 0x20
0x4aa: V390 = MUL 0x20 V389
0x4ac: V391 = ADD V382 V390
0x4ae: V392 = ADD 0x20 V391
0x4b1: M[0x40] = V392
0x4b4: M[V382] = V386
0x4b8: V393 = 0x84
0x4be: V394 = 0x24
0x4c2: V395 = ADD V384 0x24
0x4cc: V396 = ADD V382 0x20
0x4d2: CALLDATACOPY V396 V395 V386
0x4dd: V397 = 0x0
0x4df: V398 = 0x4
0x4e1: V399 = 0x0
0x4e4: V400 = S[0x4]
0x4e6: V401 = 0x100
0x4e9: V402 = EXP 0x100 0x0
0x4eb: V403 = DIV V400 0x1
0x4ec: V404 = 0x1
0x4ee: V405 = 0xa0
0x4f0: V406 = 0x2
0x4f2: V407 = EXP 0x2 0xa0
0x4f3: V408 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f4: V409 = AND 0xffffffffffffffffffffffffffffffffffffffff V403
0x4f5: V410 = 0x1
0x4f7: V411 = 0xa0
0x4f9: V412 = 0x2
0x4fb: V413 = EXP 0x2 0xa0
0x4fc: V414 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4fd: V415 = AND 0xffffffffffffffffffffffffffffffffffffffff V409
0x4fe: V416 = 0x70a08231
0x503: V417 = CALLER
0x504: V418 = 0x40
0x506: V419 = M[0x40]
0x508: V420 = 0xe0
0x50a: V421 = 0x2
0x50c: V422 = EXP 0x2 0xe0
0x50d: V423 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x50f: M[V419] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x510: V424 = 0x4
0x512: V425 = ADD 0x4 V419
0x515: V426 = 0x1
0x517: V427 = 0xa0
0x519: V428 = 0x2
0x51b: V429 = EXP 0x2 0xa0
0x51c: V430 = SUB 0x10000000000000000000000000000000000000000 0x1
0x51d: V431 = AND 0xffffffffffffffffffffffffffffffffffffffff V417
0x51f: M[V425] = V431
0x520: V432 = 0x20
0x522: V433 = ADD 0x20 V425
0x526: V434 = 0x20
0x528: V435 = 0x40
0x52a: V436 = M[0x40]
0x52d: V437 = SUB V433 V436
0x52f: V438 = 0x0
0x532: V439 = 0x61da
0x535: V440 = GAS
0x536: V441 = SUB V440 0x61da
0x537: V442 = CALL V441 V415 0x0 V436 V437 V436 0x20
0x538: V443 = ISZERO V442
0x539: V444 = 0x2
0x53c: THROWI V443
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x78e, V375, V377, V361, V382, 0x0, V415, 0x70a08231, V433]
Exit stack: [V10, 0x78e, V375, V377, V361, V382, 0x0, V415, 0x70a08231, V433]

================================

Block 0x53d
[0x53d:0x54b]
---
Predecessors: [0x451]
Successors: [0x54c, 0x8c1]
---
0x53d POP
0x53e POP
0x53f PUSH1 0x40
0x541 MLOAD
0x542 MLOAD
0x543 DUP3
0x544 EQ
0x545 ISZERO
0x546 SWAP1
0x547 POP
0x548 PUSH2 0x8c1
0x54b JUMPI
---
0x53f: V445 = 0x40
0x541: V446 = M[0x40]
0x542: V447 = M[V446]
0x544: V448 = EQ 0x0 V447
0x545: V449 = ISZERO V448
0x548: V450 = 0x8c1
0x54b: JUMPI 0x8c1 V449
---
Entry stack: [V10, 0x78e, V375, V377, V361, V382, 0x0, V415, 0x70a08231, V433]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V10, 0x78e, V375, V377, V361, V382, 0x0]

================================

Block 0x54c
[0x54c:0x54f]
---
Predecessors: [0x53d]
Successors: []
---
0x54c PUSH2 0x2
0x54f JUMP
---
0x54c: V451 = 0x2
0x54f: THROW 
---
Entry stack: [V10, 0x78e, V375, V377, V361, V382, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x78e, V375, V377, V361, V382, 0x0]

================================

Block 0x550
[0x550:0x5bb]
---
Predecessors: [0x82]
Successors: [0x5bc]
---
0x550 JUMPDEST
0x551 PUSH2 0x78e
0x554 PUSH1 0x4
0x556 CALLDATALOAD
0x557 PUSH1 0x24
0x559 CALLDATALOAD
0x55a PUSH1 0x0
0x55c PUSH1 0x0
0x55e PUSH1 0x4
0x560 PUSH1 0x0
0x562 SWAP1
0x563 SLOAD
0x564 SWAP1
0x565 PUSH2 0x100
0x568 EXP
0x569 SWAP1
0x56a DIV
0x56b PUSH1 0x1
0x56d PUSH1 0xa0
0x56f PUSH1 0x2
0x571 EXP
0x572 SUB
0x573 AND
0x574 PUSH1 0x1
0x576 PUSH1 0xa0
0x578 PUSH1 0x2
0x57a EXP
0x57b SUB
0x57c AND
0x57d PUSH4 0x70a08231
0x582 CALLER
0x583 PUSH1 0x40
0x585 MLOAD
0x586 DUP3
0x587 PUSH1 0xe0
0x589 PUSH1 0x2
0x58b EXP
0x58c MUL
0x58d DUP2
0x58e MSTORE
0x58f PUSH1 0x4
0x591 ADD
0x592 DUP1
0x593 DUP3
0x594 PUSH1 0x1
0x596 PUSH1 0xa0
0x598 PUSH1 0x2
0x59a EXP
0x59b SUB
0x59c AND
0x59d DUP2
0x59e MSTORE
0x59f PUSH1 0x20
0x5a1 ADD
0x5a2 SWAP2
0x5a3 POP
0x5a4 POP
0x5a5 PUSH1 0x20
0x5a7 PUSH1 0x40
0x5a9 MLOAD
0x5aa DUP1
0x5ab DUP4
0x5ac SUB
0x5ad DUP2
0x5ae PUSH1 0x0
0x5b0 DUP8
0x5b1 PUSH2 0x61da
0x5b4 GAS
0x5b5 SUB
0x5b6 CALL
0x5b7 ISZERO
0x5b8 PUSH2 0x2
0x5bb JUMPI
---
0x550: JUMPDEST 
0x551: V452 = 0x78e
0x554: V453 = 0x4
0x556: V454 = CALLDATALOAD 0x4
0x557: V455 = 0x24
0x559: V456 = CALLDATALOAD 0x24
0x55a: V457 = 0x0
0x55c: V458 = 0x0
0x55e: V459 = 0x4
0x560: V460 = 0x0
0x563: V461 = S[0x4]
0x565: V462 = 0x100
0x568: V463 = EXP 0x100 0x0
0x56a: V464 = DIV V461 0x1
0x56b: V465 = 0x1
0x56d: V466 = 0xa0
0x56f: V467 = 0x2
0x571: V468 = EXP 0x2 0xa0
0x572: V469 = SUB 0x10000000000000000000000000000000000000000 0x1
0x573: V470 = AND 0xffffffffffffffffffffffffffffffffffffffff V464
0x574: V471 = 0x1
0x576: V472 = 0xa0
0x578: V473 = 0x2
0x57a: V474 = EXP 0x2 0xa0
0x57b: V475 = SUB 0x10000000000000000000000000000000000000000 0x1
0x57c: V476 = AND 0xffffffffffffffffffffffffffffffffffffffff V470
0x57d: V477 = 0x70a08231
0x582: V478 = CALLER
0x583: V479 = 0x40
0x585: V480 = M[0x40]
0x587: V481 = 0xe0
0x589: V482 = 0x2
0x58b: V483 = EXP 0x2 0xe0
0x58c: V484 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x58e: M[V480] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x58f: V485 = 0x4
0x591: V486 = ADD 0x4 V480
0x594: V487 = 0x1
0x596: V488 = 0xa0
0x598: V489 = 0x2
0x59a: V490 = EXP 0x2 0xa0
0x59b: V491 = SUB 0x10000000000000000000000000000000000000000 0x1
0x59c: V492 = AND 0xffffffffffffffffffffffffffffffffffffffff V478
0x59e: M[V486] = V492
0x59f: V493 = 0x20
0x5a1: V494 = ADD 0x20 V486
0x5a5: V495 = 0x20
0x5a7: V496 = 0x40
0x5a9: V497 = M[0x40]
0x5ac: V498 = SUB V494 V497
0x5ae: V499 = 0x0
0x5b1: V500 = 0x61da
0x5b4: V501 = GAS
0x5b5: V502 = SUB V501 0x61da
0x5b6: V503 = CALL V502 V476 0x0 V497 V498 V497 0x20
0x5b7: V504 = ISZERO V503
0x5b8: V505 = 0x2
0x5bb: THROWI V504
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x78e, V454, V456, 0x0, 0x0, V476, 0x70a08231, V494]
Exit stack: [V10, 0x78e, V454, V456, 0x0, 0x0, V476, 0x70a08231, V494]

================================

Block 0x5bc
[0x5bc:0x5ca]
---
Predecessors: [0x550]
Successors: [0x5cb, 0xc0d]
---
0x5bc POP
0x5bd POP
0x5be PUSH1 0x40
0x5c0 MLOAD
0x5c1 MLOAD
0x5c2 DUP3
0x5c3 EQ
0x5c4 ISZERO
0x5c5 SWAP1
0x5c6 POP
0x5c7 PUSH2 0xc0d
0x5ca JUMPI
---
0x5be: V506 = 0x40
0x5c0: V507 = M[0x40]
0x5c1: V508 = M[V507]
0x5c3: V509 = EQ 0x0 V508
0x5c4: V510 = ISZERO V509
0x5c7: V511 = 0xc0d
0x5ca: JUMPI 0xc0d V510
---
Entry stack: [V10, 0x78e, V454, V456, 0x0, 0x0, V476, 0x70a08231, V494]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V10, 0x78e, V454, V456, 0x0, 0x0]

================================

Block 0x5cb
[0x5cb:0x5ce]
---
Predecessors: [0x5bc]
Successors: []
---
0x5cb PUSH2 0x2
0x5ce JUMP
---
0x5cb: V512 = 0x2
0x5ce: THROW 
---
Entry stack: [V10, 0x78e, V454, V456, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x78e, V454, V456, 0x0, 0x0]

================================

Block 0x5cf
[0x5cf:0x62f]
---
Predecessors: [0x8d]
Successors: [0x630]
---
0x5cf JUMPDEST
0x5d0 PUSH1 0x40
0x5d2 DUP1
0x5d3 MLOAD
0x5d4 PUSH1 0x20
0x5d6 PUSH1 0x64
0x5d8 CALLDATALOAD
0x5d9 PUSH1 0x4
0x5db DUP2
0x5dc DUP2
0x5dd ADD
0x5de CALLDATALOAD
0x5df PUSH1 0x1f
0x5e1 DUP2
0x5e2 ADD
0x5e3 DUP5
0x5e4 SWAP1
0x5e5 DIV
0x5e6 DUP5
0x5e7 MUL
0x5e8 DUP6
0x5e9 ADD
0x5ea DUP5
0x5eb ADD
0x5ec SWAP1
0x5ed SWAP6
0x5ee MSTORE
0x5ef DUP5
0x5f0 DUP5
0x5f1 MSTORE
0x5f2 PUSH2 0x78e
0x5f5 SWAP5
0x5f6 DUP2
0x5f7 CALLDATALOAD
0x5f8 SWAP5
0x5f9 PUSH1 0x24
0x5fb DUP1
0x5fc CALLDATALOAD
0x5fd SWAP6
0x5fe PUSH1 0x44
0x600 CALLDATALOAD
0x601 SWAP6
0x602 PUSH1 0x84
0x604 SWAP5
0x605 SWAP3
0x606 ADD
0x607 SWAP2
0x608 SWAP1
0x609 DUP2
0x60a SWAP1
0x60b DUP5
0x60c ADD
0x60d DUP4
0x60e DUP3
0x60f DUP1
0x610 DUP3
0x611 DUP5
0x612 CALLDATACOPY
0x613 POP
0x614 SWAP5
0x615 SWAP7
0x616 POP
0x617 POP
0x618 POP
0x619 POP
0x61a POP
0x61b POP
0x61c POP
0x61d PUSH1 0x0
0x61f PUSH1 0x0
0x621 PUSH1 0x3
0x623 PUSH1 0x0
0x625 POP
0x626 DUP7
0x627 DUP2
0x628 SLOAD
0x629 DUP2
0x62a LT
0x62b ISZERO
0x62c PUSH2 0x2
0x62f JUMPI
---
0x5cf: JUMPDEST 
0x5d0: V513 = 0x40
0x5d3: V514 = M[0x40]
0x5d4: V515 = 0x20
0x5d6: V516 = 0x64
0x5d8: V517 = CALLDATALOAD 0x64
0x5d9: V518 = 0x4
0x5dd: V519 = ADD 0x4 V517
0x5de: V520 = CALLDATALOAD V519
0x5df: V521 = 0x1f
0x5e2: V522 = ADD V520 0x1f
0x5e5: V523 = DIV V522 0x20
0x5e7: V524 = MUL 0x20 V523
0x5e9: V525 = ADD V514 V524
0x5eb: V526 = ADD 0x20 V525
0x5ee: M[0x40] = V526
0x5f1: M[V514] = V520
0x5f2: V527 = 0x78e
0x5f7: V528 = CALLDATALOAD 0x4
0x5f9: V529 = 0x24
0x5fc: V530 = CALLDATALOAD 0x24
0x5fe: V531 = 0x44
0x600: V532 = CALLDATALOAD 0x44
0x602: V533 = 0x84
0x606: V534 = ADD 0x24 V517
0x60c: V535 = ADD V514 0x20
0x612: CALLDATACOPY V535 V534 V520
0x61d: V536 = 0x0
0x61f: V537 = 0x0
0x621: V538 = 0x3
0x623: V539 = 0x0
0x628: V540 = S[0x3]
0x62a: V541 = LT V528 V540
0x62b: V542 = ISZERO V541
0x62c: V543 = 0x2
0x62f: THROWI V542
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x78e, V528, V530, V532, V514, 0x0, 0x0, 0x3, V528]
Exit stack: [V10, 0x78e, V528, V530, V532, V514, 0x0, 0x0, 0x3, V528]

================================

Block 0x630
[0x630:0x6aa]
---
Predecessors: [0x5cf]
Successors: [0x9c0]
---
0x630 SWAP1
0x631 DUP3
0x632 MSTORE
0x633 PUSH1 0x8
0x635 MUL
0x636 PUSH1 0x0
0x638 DUP1
0x639 MLOAD
0x63a PUSH1 0x20
0x63c PUSH2 0xf80
0x63f DUP4
0x640 CODECOPY
0x641 DUP2
0x642 MLOAD
0x643 SWAP2
0x644 MSTORE
0x645 ADD
0x646 DUP2
0x647 POP
0x648 SWAP1
0x649 POP
0x64a DUP5
0x64b DUP5
0x64c DUP5
0x64d PUSH1 0x40
0x64f MLOAD
0x650 DUP1
0x651 DUP5
0x652 PUSH1 0x1
0x654 PUSH1 0xa0
0x656 PUSH1 0x2
0x658 EXP
0x659 SUB
0x65a AND
0x65b PUSH1 0x60
0x65d PUSH1 0x2
0x65f EXP
0x660 MUL
0x661 DUP2
0x662 MSTORE
0x663 PUSH1 0x14
0x665 ADD
0x666 DUP4
0x667 DUP2
0x668 MSTORE
0x669 PUSH1 0x20
0x66b ADD
0x66c DUP3
0x66d DUP1
0x66e MLOAD
0x66f SWAP1
0x670 PUSH1 0x20
0x672 ADD
0x673 SWAP1
0x674 DUP1
0x675 DUP4
0x676 DUP4
0x677 DUP3
0x678 SWAP1
0x679 PUSH1 0x0
0x67b PUSH1 0x4
0x67d PUSH1 0x20
0x67f DUP5
0x680 PUSH1 0x1f
0x682 ADD
0x683 DIV
0x684 PUSH1 0xf
0x686 MUL
0x687 PUSH1 0x3
0x689 ADD
0x68a CALL
0x68b POP
0x68c SWAP1
0x68d POP
0x68e ADD
0x68f SWAP4
0x690 POP
0x691 POP
0x692 POP
0x693 POP
0x694 PUSH1 0x40
0x696 MLOAD
0x697 DUP1
0x698 SWAP2
0x699 SUB
0x69a SWAP1
0x69b SHA3
0x69c DUP2
0x69d PUSH1 0x2
0x69f ADD
0x6a0 PUSH1 0x0
0x6a2 POP
0x6a3 SLOAD
0x6a4 EQ
0x6a5 SWAP2
0x6a6 POP
0x6a7 PUSH2 0x9c0
0x6aa JUMP
---
0x632: M[0x0] = 0x3
0x633: V544 = 0x8
0x635: V545 = MUL 0x8 V528
0x636: V546 = 0x0
0x639: V547 = M[0x0]
0x63a: V548 = 0x20
0x63c: V549 = 0xf80
0x640: CODECOPY 0x0 0xf80 0x20
0x642: V550 = M[0x0]
0x644: M[0x0] = V547
0x645: V551 = ADD V550 V545
0x64d: V552 = 0x40
0x64f: V553 = M[0x40]
0x652: V554 = 0x1
0x654: V555 = 0xa0
0x656: V556 = 0x2
0x658: V557 = EXP 0x2 0xa0
0x659: V558 = SUB 0x10000000000000000000000000000000000000000 0x1
0x65a: V559 = AND 0xffffffffffffffffffffffffffffffffffffffff V530
0x65b: V560 = 0x60
0x65d: V561 = 0x2
0x65f: V562 = EXP 0x2 0x60
0x660: V563 = MUL 0x1000000000000000000000000 V559
0x662: M[V553] = V563
0x663: V564 = 0x14
0x665: V565 = ADD 0x14 V553
0x668: M[V565] = V532
0x669: V566 = 0x20
0x66b: V567 = ADD 0x20 V565
0x66e: V568 = M[V514]
0x670: V569 = 0x20
0x672: V570 = ADD 0x20 V514
0x679: V571 = 0x0
0x67b: V572 = 0x4
0x67d: V573 = 0x20
0x680: V574 = 0x1f
0x682: V575 = ADD 0x1f V568
0x683: V576 = DIV V575 0x20
0x684: V577 = 0xf
0x686: V578 = MUL 0xf V576
0x687: V579 = 0x3
0x689: V580 = ADD 0x3 V578
0x68a: V581 = CALL V580 0x4 0x0 V570 V568 V567 V568
0x68e: V582 = ADD V568 V567
0x694: V583 = 0x40
0x696: V584 = M[0x40]
0x699: V585 = SUB V582 V584
0x69b: V586 = SHA3 V584 V585
0x69d: V587 = 0x2
0x69f: V588 = ADD 0x2 V551
0x6a0: V589 = 0x0
0x6a3: V590 = S[V588]
0x6a4: V591 = EQ V590 V586
0x6a7: V592 = 0x9c0
0x6aa: JUMP 0x9c0
---
Entry stack: [V10, 0x78e, V528, V530, V532, V514, 0x0, 0x0, 0x3, V528]
Stack pops: 7
Stack additions: [S6, S5, S4, V591, V551]
Exit stack: [V10, 0x78e, V528, V530, V532, V514, V591, V551]

================================

Block 0x6ab
[0x6ab:0x6c7]
---
Predecessors: [0x98]
Successors: [0x6c8, 0x7bd]
---
0x6ab JUMPDEST
0x6ac PUSH2 0xa3
0x6af PUSH1 0x4
0x6b1 CALLDATALOAD
0x6b2 PUSH1 0x0
0x6b4 SLOAD
0x6b5 CALLER
0x6b6 PUSH1 0x1
0x6b8 PUSH1 0xa0
0x6ba PUSH1 0x2
0x6bc EXP
0x6bd SUB
0x6be SWAP1
0x6bf DUP2
0x6c0 AND
0x6c1 SWAP2
0x6c2 AND
0x6c3 EQ
0x6c4 PUSH2 0x7bd
0x6c7 JUMPI
---
0x6ab: JUMPDEST 
0x6ac: V593 = 0xa3
0x6af: V594 = 0x4
0x6b1: V595 = CALLDATALOAD 0x4
0x6b2: V596 = 0x0
0x6b4: V597 = S[0x0]
0x6b5: V598 = CALLER
0x6b6: V599 = 0x1
0x6b8: V600 = 0xa0
0x6ba: V601 = 0x2
0x6bc: V602 = EXP 0x2 0xa0
0x6bd: V603 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6c0: V604 = AND 0xffffffffffffffffffffffffffffffffffffffff V598
0x6c2: V605 = AND V597 0xffffffffffffffffffffffffffffffffffffffff
0x6c3: V606 = EQ V605 V604
0x6c4: V607 = 0x7bd
0x6c7: JUMPI 0x7bd V606
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xa3, V595]
Exit stack: [V10, 0xa3, V595]

================================

Block 0x6c8
[0x6c8:0x6cb]
---
Predecessors: [0x6ab]
Successors: []
---
0x6c8 PUSH2 0x2
0x6cb JUMP
---
0x6c8: V608 = 0x2
0x6cb: THROW 
---
Entry stack: [V10, 0xa3, V595]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3, V595]

================================

Block 0x6cc
[0x6cc:0x732]
---
Predecessors: [0xb9]
Successors: [0x733, 0x779]
---
0x6cc JUMPDEST
0x6cd PUSH1 0x40
0x6cf DUP1
0x6d0 MLOAD
0x6d1 PUSH1 0x1
0x6d3 PUSH1 0xa0
0x6d5 PUSH1 0x2
0x6d7 EXP
0x6d8 SUB
0x6d9 DUP10
0x6da AND
0x6db DUP2
0x6dc MSTORE
0x6dd PUSH1 0x20
0x6df DUP2
0x6e0 ADD
0x6e1 DUP9
0x6e2 SWAP1
0x6e3 MSTORE
0x6e4 SWAP1
0x6e5 DUP2
0x6e6 ADD
0x6e7 DUP7
0x6e8 SWAP1
0x6e9 MSTORE
0x6ea PUSH1 0x80
0x6ec DUP2
0x6ed ADD
0x6ee DUP5
0x6ef SWAP1
0x6f0 MSTORE
0x6f1 PUSH1 0xa0
0x6f3 DUP2
0x6f4 ADD
0x6f5 DUP4
0x6f6 SWAP1
0x6f7 MSTORE
0x6f8 PUSH1 0xc0
0x6fa DUP2
0x6fb ADD
0x6fc DUP3
0x6fd SWAP1
0x6fe MSTORE
0x6ff PUSH1 0xe0
0x701 PUSH1 0x60
0x703 DUP3
0x704 ADD
0x705 DUP2
0x706 DUP2
0x707 MSTORE
0x708 DUP7
0x709 SLOAD
0x70a PUSH1 0x2
0x70c PUSH1 0x1
0x70e DUP3
0x70f AND
0x710 ISZERO
0x711 PUSH2 0x100
0x714 SWAP1
0x715 DUP2
0x716 MUL
0x717 PUSH1 0x0
0x719 NOT
0x71a ADD
0x71b SWAP1
0x71c SWAP3
0x71d AND
0x71e DIV
0x71f SWAP3
0x720 DUP5
0x721 ADD
0x722 DUP4
0x723 SWAP1
0x724 MSTORE
0x725 SWAP1
0x726 SWAP2
0x727 SWAP1
0x728 DUP4
0x729 ADD
0x72a SWAP1
0x72b DUP8
0x72c SWAP1
0x72d DUP1
0x72e ISZERO
0x72f PUSH2 0x779
0x732 JUMPI
---
0x6cc: JUMPDEST 
0x6cd: V609 = 0x40
0x6d0: V610 = M[0x40]
0x6d1: V611 = 0x1
0x6d3: V612 = 0xa0
0x6d5: V613 = 0x2
0x6d7: V614 = EXP 0x2 0xa0
0x6d8: V615 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6da: V616 = AND V85 0xffffffffffffffffffffffffffffffffffffffff
0x6dc: M[V610] = V616
0x6dd: V617 = 0x20
0x6e0: V618 = ADD V610 0x20
0x6e3: M[V618] = V76
0x6e6: V619 = ADD V610 0x40
0x6e9: M[V619] = V79
0x6ea: V620 = 0x80
0x6ed: V621 = ADD V610 0x80
0x6f0: M[V621] = V63
0x6f1: V622 = 0xa0
0x6f4: V623 = ADD V610 0xa0
0x6f7: M[V623] = V89
0x6f8: V624 = 0xc0
0x6fb: V625 = ADD V610 0xc0
0x6fe: M[V625] = V92
0x6ff: V626 = 0xe0
0x701: V627 = 0x60
0x704: V628 = ADD V610 0x60
0x707: M[V628] = 0xe0
0x709: V629 = S[V87]
0x70a: V630 = 0x2
0x70c: V631 = 0x1
0x70f: V632 = AND V629 0x1
0x710: V633 = ISZERO V632
0x711: V634 = 0x100
0x716: V635 = MUL 0x100 V633
0x717: V636 = 0x0
0x719: V637 = NOT 0x0
0x71a: V638 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V635
0x71d: V639 = AND V629 V638
0x71e: V640 = DIV V639 0x2
0x721: V641 = ADD V610 0xe0
0x724: M[V641] = V640
0x729: V642 = ADD V610 0x100
0x72e: V643 = ISZERO V640
0x72f: V644 = 0x779
0x732: JUMPI 0x779 V643
---
Entry stack: [V10, 0x6cc, V85, V76, V79, V87, V63, V89, V92]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, V610, V628, V642, S3, V640]
Exit stack: [V10, 0x6cc, V85, V76, V79, V87, V63, V89, V92, V610, V628, V642, V87, V640]

================================

Block 0x733
[0x733:0x73a]
---
Predecessors: [0x6cc]
Successors: [0x73b, 0x74e]
---
0x733 DUP1
0x734 PUSH1 0x1f
0x736 LT
0x737 PUSH2 0x74e
0x73a JUMPI
---
0x734: V645 = 0x1f
0x736: V646 = LT 0x1f V640
0x737: V647 = 0x74e
0x73a: JUMPI 0x74e V646
---
Entry stack: [V10, 0x6cc, V85, V76, V79, V87, V63, V89, V92, V610, V628, V642, V87, V640]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x6cc, V85, V76, V79, V87, V63, V89, V92, V610, V628, V642, V87, V640]

================================

Block 0x73b
[0x73b:0x74d]
---
Predecessors: [0x733]
Successors: [0x779]
---
0x73b PUSH2 0x100
0x73e DUP1
0x73f DUP4
0x740 SLOAD
0x741 DIV
0x742 MUL
0x743 DUP4
0x744 MSTORE
0x745 SWAP2
0x746 PUSH1 0x20
0x748 ADD
0x749 SWAP2
0x74a PUSH2 0x779
0x74d JUMP
---
0x73b: V648 = 0x100
0x740: V649 = S[V87]
0x741: V650 = DIV V649 0x100
0x742: V651 = MUL V650 0x100
0x744: M[V642] = V651
0x746: V652 = 0x20
0x748: V653 = ADD 0x20 V642
0x74a: V654 = 0x779
0x74d: JUMP 0x779
---
Entry stack: [V10, 0x6cc, V85, V76, V79, V87, V63, V89, V92, V610, V628, V642, V87, V640]
Stack pops: 3
Stack additions: [V653, S1, S0]
Exit stack: [V10, 0x6cc, V85, V76, V79, V87, V63, V89, V92, V610, V628, V653, V87, V640]

================================

Block 0x74e
[0x74e:0x75b]
---
Predecessors: [0x733]
Successors: [0x75c]
---
0x74e JUMPDEST
0x74f DUP3
0x750 ADD
0x751 SWAP2
0x752 SWAP1
0x753 PUSH1 0x0
0x755 MSTORE
0x756 PUSH1 0x20
0x758 PUSH1 0x0
0x75a SHA3
0x75b SWAP1
---
0x74e: JUMPDEST 
0x750: V655 = ADD V642 V640
0x753: V656 = 0x0
0x755: M[0x0] = V87
0x756: V657 = 0x20
0x758: V658 = 0x0
0x75a: V659 = SHA3 0x0 0x20
---
Entry stack: [V10, 0x6cc, V85, V76, V79, V87, V63, V89, V92, V610, V628, V642, V87, V640]
Stack pops: 3
Stack additions: [V655, V659, S2]
Exit stack: [V10, 0x6cc, V85, V76, V79, V87, V63, V89, V92, V610, V628, V655, V659, V642]

================================

Block 0x75c
[0x75c:0x76f]
---
Predecessors: [0x74e, 0x75c]
Successors: [0x75c, 0x770]
---
0x75c JUMPDEST
0x75d DUP2
0x75e SLOAD
0x75f DUP2
0x760 MSTORE
0x761 SWAP1
0x762 PUSH1 0x1
0x764 ADD
0x765 SWAP1
0x766 PUSH1 0x20
0x768 ADD
0x769 DUP1
0x76a DUP4
0x76b GT
0x76c PUSH2 0x75c
0x76f JUMPI
---
0x75c: JUMPDEST 
0x75e: V660 = S[S1]
0x760: M[S0] = V660
0x762: V661 = 0x1
0x764: V662 = ADD 0x1 S1
0x766: V663 = 0x20
0x768: V664 = ADD 0x20 S0
0x76b: V665 = GT V655 V664
0x76c: V666 = 0x75c
0x76f: JUMPI 0x75c V665
---
Entry stack: [V10, 0x6cc, V85, V76, V79, V87, V63, V89, V92, V610, V628, V655, S1, S0]
Stack pops: 3
Stack additions: [S2, V662, V664]
Exit stack: [V10, 0x6cc, V85, V76, V79, V87, V63, V89, V92, V610, V628, V655, V662, V664]

================================

Block 0x770
[0x770:0x778]
---
Predecessors: [0x75c]
Successors: [0x779]
---
0x770 DUP3
0x771 SWAP1
0x772 SUB
0x773 PUSH1 0x1f
0x775 AND
0x776 DUP3
0x777 ADD
0x778 SWAP2
---
0x772: V667 = SUB V664 V655
0x773: V668 = 0x1f
0x775: V669 = AND 0x1f V667
0x777: V670 = ADD V655 V669
---
Entry stack: [V10, 0x6cc, V85, V76, V79, V87, V63, V89, V92, V610, V628, V655, V662, V664]
Stack pops: 3
Stack additions: [V670, S1, S2]
Exit stack: [V10, 0x6cc, V85, V76, V79, V87, V63, V89, V92, V610, V628, V670, V662, V655]

================================

Block 0x779
[0x779:0x78d]
---
Predecessors: [0x6cc, 0x73b, 0x770]
Successors: []
---
0x779 JUMPDEST
0x77a POP
0x77b POP
0x77c SWAP9
0x77d POP
0x77e POP
0x77f POP
0x780 POP
0x781 POP
0x782 POP
0x783 POP
0x784 POP
0x785 POP
0x786 PUSH1 0x40
0x788 MLOAD
0x789 DUP1
0x78a SWAP2
0x78b SUB
0x78c SWAP1
0x78d RETURN
---
0x779: JUMPDEST 
0x786: V671 = 0x40
0x788: V672 = M[0x40]
0x78b: V673 = SUB S2 V672
0x78d: RETURN V672 V673
---
Entry stack: [V10, 0x6cc, V85, V76, V79, V87, V63, V89, V92, V610, V628, S2, S1, S0]
Stack pops: 12
Stack additions: []
Exit stack: [V10, 0x6cc]

================================

Block 0x78e
[0x78e:0x79f]
---
Predecessors: [0x2cf, 0x334, 0x8d7, 0x9c0, 0xcc0, 0xf21]
Successors: []
---
0x78e JUMPDEST
0x78f PUSH1 0x40
0x791 DUP1
0x792 MLOAD
0x793 SWAP2
0x794 DUP3
0x795 MSTORE
0x796 MLOAD
0x797 SWAP1
0x798 DUP2
0x799 SWAP1
0x79a SUB
0x79b PUSH1 0x20
0x79d ADD
0x79e SWAP1
0x79f RETURN
---
0x78e: JUMPDEST 
0x78f: V674 = 0x40
0x792: V675 = M[0x40]
0x795: M[V675] = S0
0x796: V676 = M[0x40]
0x79a: V677 = SUB V675 V676
0x79b: V678 = 0x20
0x79d: V679 = ADD 0x20 V677
0x79f: RETURN V676 V679
---
Entry stack: [V10, 0x78e, V375, V377, V361, V382, S7, {0x78e, 0x8d7}, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x78e, V375, V377, V361, V382, S7, {0x78e, 0x8d7}, S5, S4, S3, S2, S1]

================================

Block 0x7a0
[0x7a0:0x7bc]
---
Predecessors: [0x2d8, 0x43f]
Successors: []
---
0x7a0 JUMPDEST
0x7a1 PUSH1 0x40
0x7a3 DUP1
0x7a4 MLOAD
0x7a5 PUSH1 0x1
0x7a7 PUSH1 0xa0
0x7a9 PUSH1 0x2
0x7ab EXP
0x7ac SUB
0x7ad SWAP3
0x7ae SWAP1
0x7af SWAP3
0x7b0 AND
0x7b1 DUP3
0x7b2 MSTORE
0x7b3 MLOAD
0x7b4 SWAP1
0x7b5 DUP2
0x7b6 SWAP1
0x7b7 SUB
0x7b8 PUSH1 0x20
0x7ba ADD
0x7bb SWAP1
0x7bc RETURN
---
0x7a0: JUMPDEST 
0x7a1: V680 = 0x40
0x7a4: V681 = M[0x40]
0x7a5: V682 = 0x1
0x7a7: V683 = 0xa0
0x7a9: V684 = 0x2
0x7ab: V685 = EXP 0x2 0xa0
0x7ac: V686 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7b0: V687 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x7b2: M[V681] = V687
0x7b3: V688 = M[0x40]
0x7b7: V689 = SUB V681 V688
0x7b8: V690 = 0x20
0x7ba: V691 = ADD 0x20 V689
0x7bc: RETURN V688 V691
---
Entry stack: [V10, 0x7a0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x7a0]

================================

Block 0x7bd
[0x7bd:0x7d1]
---
Predecessors: [0x6ab]
Successors: [0xa3]
---
0x7bd JUMPDEST
0x7be PUSH1 0x0
0x7c0 DUP1
0x7c1 SLOAD
0x7c2 PUSH1 0x1
0x7c4 PUSH1 0xa0
0x7c6 PUSH1 0x2
0x7c8 EXP
0x7c9 SUB
0x7ca NOT
0x7cb AND
0x7cc DUP3
0x7cd OR
0x7ce SWAP1
0x7cf SSTORE
0x7d0 POP
0x7d1 JUMP
---
0x7bd: JUMPDEST 
0x7be: V692 = 0x0
0x7c1: V693 = S[0x0]
0x7c2: V694 = 0x1
0x7c4: V695 = 0xa0
0x7c6: V696 = 0x2
0x7c8: V697 = EXP 0x2 0xa0
0x7c9: V698 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7ca: V699 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x7cb: V700 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V693
0x7cd: V701 = OR V595 V700
0x7cf: S[0x0] = V701
0x7d1: JUMP 0xa3
---
Entry stack: [V10, 0xa3, V595]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x7d2
[0x7d2:0x7e4]
---
Predecessors: [0x2ea]
Successors: [0x7e5, 0x7f2]
---
0x7d2 JUMPDEST
0x7d3 DUP1
0x7d4 PUSH1 0x1
0x7d6 PUSH1 0xa0
0x7d8 PUSH1 0x2
0x7da EXP
0x7db SUB
0x7dc AND
0x7dd PUSH1 0x0
0x7df EQ
0x7e0 ISZERO
0x7e1 PUSH2 0x7f2
0x7e4 JUMPI
---
0x7d2: JUMPDEST 
0x7d4: V702 = 0x1
0x7d6: V703 = 0xa0
0x7d8: V704 = 0x2
0x7da: V705 = EXP 0x2 0xa0
0x7db: V706 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7dc: V707 = AND 0xffffffffffffffffffffffffffffffffffffffff V221
0x7dd: V708 = 0x0
0x7df: V709 = EQ 0x0 V707
0x7e0: V710 = ISZERO V709
0x7e1: V711 = 0x7f2
0x7e4: JUMPI 0x7f2 V710
---
Entry stack: [V10, 0xa3, V221]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0xa3, V221]

================================

Block 0x7e5
[0x7e5:0x7f1]
---
Predecessors: [0x7d2]
Successors: [0x7f2]
---
0x7e5 POP
0x7e6 PUSH1 0x0
0x7e8 SLOAD
0x7e9 PUSH1 0x1
0x7eb PUSH1 0xa0
0x7ed PUSH1 0x2
0x7ef EXP
0x7f0 SUB
0x7f1 AND
---
0x7e6: V712 = 0x0
0x7e8: V713 = S[0x0]
0x7e9: V714 = 0x1
0x7eb: V715 = 0xa0
0x7ed: V716 = 0x2
0x7ef: V717 = EXP 0x2 0xa0
0x7f0: V718 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7f1: V719 = AND 0xffffffffffffffffffffffffffffffffffffffff V713
---
Entry stack: [V10, 0xa3, V221]
Stack pops: 1
Stack additions: [V719]
Exit stack: [V10, 0xa3, V719]

================================

Block 0x7f2
[0x7f2:0x7fd]
---
Predecessors: [0x7d2, 0x7e5]
Successors: []
---
0x7f2 JUMPDEST
0x7f3 DUP1
0x7f4 PUSH1 0x1
0x7f6 PUSH1 0xa0
0x7f8 PUSH1 0x2
0x7fa EXP
0x7fb SUB
0x7fc AND
0x7fd SELFDESTRUCT
---
0x7f2: JUMPDEST 
0x7f4: V720 = 0x1
0x7f6: V721 = 0xa0
0x7f8: V722 = 0x2
0x7fa: V723 = EXP 0x2 0xa0
0x7fb: V724 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7fc: V725 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x7fd: SELFDESTRUCT V725
---
Entry stack: [V10, 0xa3, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0xa3, S0]

================================

Block 0x7fe
[0x7fe:0x807]
---
Predecessors: [0x30c]
Successors: [0x808, 0x84b]
---
0x7fe JUMPDEST
0x7ff DUP2
0x800 PUSH1 0x0
0x802 EQ
0x803 DUP1
0x804 PUSH2 0x84b
0x807 JUMPI
---
0x7fe: JUMPDEST 
0x800: V726 = 0x0
0x802: V727 = EQ 0x0 V239
0x804: V728 = 0x84b
0x807: JUMPI 0x84b V727
---
Entry stack: [V10, 0xa3, V237, V239, V241]
Stack pops: 2
Stack additions: [S1, S0, V727]
Exit stack: [V10, 0xa3, V237, V239, V241, V727]

================================

Block 0x808
[0x808:0x840]
---
Predecessors: [0x7fe]
Successors: [0x841]
---
0x808 POP
0x809 DUP3
0x80a PUSH1 0x1
0x80c PUSH1 0xa0
0x80e PUSH1 0x2
0x810 EXP
0x811 SUB
0x812 AND
0x813 PUSH4 0x18160ddd
0x818 PUSH1 0x40
0x81a MLOAD
0x81b DUP2
0x81c PUSH1 0xe0
0x81e PUSH1 0x2
0x820 EXP
0x821 MUL
0x822 DUP2
0x823 MSTORE
0x824 PUSH1 0x4
0x826 ADD
0x827 DUP1
0x828 SWAP1
0x829 POP
0x82a PUSH1 0x20
0x82c PUSH1 0x40
0x82e MLOAD
0x82f DUP1
0x830 DUP4
0x831 SUB
0x832 DUP2
0x833 PUSH1 0x0
0x835 DUP8
0x836 PUSH2 0x61da
0x839 GAS
0x83a SUB
0x83b CALL
0x83c ISZERO
0x83d PUSH2 0x2
0x840 JUMPI
---
0x80a: V729 = 0x1
0x80c: V730 = 0xa0
0x80e: V731 = 0x2
0x810: V732 = EXP 0x2 0xa0
0x811: V733 = SUB 0x10000000000000000000000000000000000000000 0x1
0x812: V734 = AND 0xffffffffffffffffffffffffffffffffffffffff V237
0x813: V735 = 0x18160ddd
0x818: V736 = 0x40
0x81a: V737 = M[0x40]
0x81c: V738 = 0xe0
0x81e: V739 = 0x2
0x820: V740 = EXP 0x2 0xe0
0x821: V741 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x18160ddd
0x823: M[V737] = 0x18160ddd00000000000000000000000000000000000000000000000000000000
0x824: V742 = 0x4
0x826: V743 = ADD 0x4 V737
0x82a: V744 = 0x20
0x82c: V745 = 0x40
0x82e: V746 = M[0x40]
0x831: V747 = SUB V743 V746
0x833: V748 = 0x0
0x836: V749 = 0x61da
0x839: V750 = GAS
0x83a: V751 = SUB V750 0x61da
0x83b: V752 = CALL V751 V734 0x0 V746 V747 V746 0x20
0x83c: V753 = ISZERO V752
0x83d: V754 = 0x2
0x840: THROWI V753
---
Entry stack: [V10, 0xa3, V237, V239, V241, V727]
Stack pops: 4
Stack additions: [S3, S2, S1, V734, 0x18160ddd, V743]
Exit stack: [V10, 0xa3, V237, V239, V241, V734, 0x18160ddd, V743]

================================

Block 0x841
[0x841:0x84a]
---
Predecessors: [0x808]
Successors: [0x84b]
---
0x841 POP
0x842 POP
0x843 PUSH1 0x40
0x845 MLOAD
0x846 MLOAD
0x847 DUP4
0x848 GT
0x849 SWAP1
0x84a POP
---
0x843: V755 = 0x40
0x845: V756 = M[0x40]
0x846: V757 = M[V756]
0x848: V758 = GT V239 V757
---
Entry stack: [V10, 0xa3, V237, V239, V241, V734, 0x18160ddd, V743]
Stack pops: 5
Stack additions: [S4, S3, V758]
Exit stack: [V10, 0xa3, V237, V239, V241, V758]

================================

Block 0x84b
[0x84b:0x850]
---
Predecessors: [0x7fe, 0x841]
Successors: [0x851, 0x855]
---
0x84b JUMPDEST
0x84c ISZERO
0x84d PUSH2 0x855
0x850 JUMPI
---
0x84b: JUMPDEST 
0x84c: V759 = ISZERO S0
0x84d: V760 = 0x855
0x850: JUMPI 0x855 V759
---
Entry stack: [V10, 0xa3, V237, V239, V241, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xa3, V237, V239, V241]

================================

Block 0x851
[0x851:0x854]
---
Predecessors: [0x84b]
Successors: []
---
0x851 PUSH2 0x2
0x854 JUMP
---
0x851: V761 = 0x2
0x854: THROW 
---
Entry stack: [V10, 0xa3, V237, V239, V241]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xa3, V237, V239, V241]

================================

Block 0x855
[0x855:0x8c0]
---
Predecessors: [0x84b]
Successors: [0xa3]
---
0x855 JUMPDEST
0x856 PUSH1 0x4
0x858 DUP1
0x859 SLOAD
0x85a PUSH1 0x1
0x85c PUSH1 0xa0
0x85e PUSH1 0x2
0x860 EXP
0x861 SUB
0x862 NOT
0x863 AND
0x864 DUP5
0x865 OR
0x866 SWAP1
0x867 DUP2
0x868 SWAP1
0x869 SSTORE
0x86a PUSH1 0x1
0x86c DUP4
0x86d SWAP1
0x86e SSTORE
0x86f PUSH1 0x2
0x871 DUP3
0x872 SWAP1
0x873 SSTORE
0x874 PUSH1 0x40
0x876 DUP1
0x877 MLOAD
0x878 DUP5
0x879 DUP2
0x87a MSTORE
0x87b PUSH1 0x20
0x87d DUP2
0x87e ADD
0x87f DUP5
0x880 SWAP1
0x881 MSTORE
0x882 PUSH1 0x1
0x884 PUSH1 0xa0
0x886 PUSH1 0x2
0x888 EXP
0x889 SUB
0x88a SWAP3
0x88b SWAP1
0x88c SWAP3
0x88d AND
0x88e DUP3
0x88f DUP3
0x890 ADD
0x891 MSTORE
0x892 MLOAD
0x893 PUSH32 0x68259880819f96f54b67d672fefc666565de06099c91b57a689a42073ba090c9
0x8b4 SWAP2
0x8b5 DUP2
0x8b6 SWAP1
0x8b7 SUB
0x8b8 PUSH1 0x60
0x8ba ADD
0x8bb SWAP1
0x8bc LOG1
0x8bd POP
0x8be POP
0x8bf POP
0x8c0 JUMP
---
0x855: JUMPDEST 
0x856: V762 = 0x4
0x859: V763 = S[0x4]
0x85a: V764 = 0x1
0x85c: V765 = 0xa0
0x85e: V766 = 0x2
0x860: V767 = EXP 0x2 0xa0
0x861: V768 = SUB 0x10000000000000000000000000000000000000000 0x1
0x862: V769 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x863: V770 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V763
0x865: V771 = OR V237 V770
0x869: S[0x4] = V771
0x86a: V772 = 0x1
0x86e: S[0x1] = V239
0x86f: V773 = 0x2
0x873: S[0x2] = V241
0x874: V774 = 0x40
0x877: V775 = M[0x40]
0x87a: M[V775] = V239
0x87b: V776 = 0x20
0x87e: V777 = ADD V775 0x20
0x881: M[V777] = V241
0x882: V778 = 0x1
0x884: V779 = 0xa0
0x886: V780 = 0x2
0x888: V781 = EXP 0x2 0xa0
0x889: V782 = SUB 0x10000000000000000000000000000000000000000 0x1
0x88d: V783 = AND 0xffffffffffffffffffffffffffffffffffffffff V771
0x890: V784 = ADD 0x40 V775
0x891: M[V784] = V783
0x892: V785 = M[0x40]
0x893: V786 = 0x68259880819f96f54b67d672fefc666565de06099c91b57a689a42073ba090c9
0x8b7: V787 = SUB V775 V785
0x8b8: V788 = 0x60
0x8ba: V789 = ADD 0x60 V787
0x8bc: LOG V785 V789 0x68259880819f96f54b67d672fefc666565de06099c91b57a689a42073ba090c9
0x8c0: JUMP 0xa3
---
Entry stack: [V10, 0xa3, V237, V239, V241]
Stack pops: 4
Stack additions: []
Exit stack: [V10]

================================

Block 0x8c1
[0x8c1:0x8d6]
---
Predecessors: [0x53d]
Successors: [0x3c9]
---
0x8c1 JUMPDEST
0x8c2 PUSH2 0x8d7
0x8c5 DUP6
0x8c6 DUP6
0x8c7 PUSH8 0xde0b6b3a7640000
0x8d0 MUL
0x8d1 DUP6
0x8d2 DUP6
0x8d3 PUSH2 0x3c9
0x8d6 JUMP
---
0x8c1: JUMPDEST 
0x8c2: V790 = 0x8d7
0x8c7: V791 = 0xde0b6b3a7640000
0x8d0: V792 = MUL 0xde0b6b3a7640000 V377
0x8d3: V793 = 0x3c9
0x8d6: JUMP 0x3c9
---
Entry stack: [V10, 0x78e, V375, V377, V361, V382, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x8d7, S4, V792, S2, S1]
Exit stack: [V10, 0x78e, V375, V377, V361, V382, 0x0, 0x8d7, V375, V792, V361, V382]

================================

Block 0x8d7
[0x8d7:0x8df]
---
Predecessors: [0x8d7, 0x9c0, 0xcc0]
Successors: [0x78e, 0x8d7]
---
0x8d7 JUMPDEST
0x8d8 SWAP6
0x8d9 SWAP5
0x8da POP
0x8db POP
0x8dc POP
0x8dd POP
0x8de POP
0x8df JUMP
---
0x8d7: JUMPDEST 
0x8df: JUMP {0x78e, 0x8d7}
---
Entry stack: [V10, 0x78e, V375, V377, V361, V382, S7, {0x78e, 0x8d7}, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S0]
Exit stack: [V10, 0x78e, V375, V377, V361, V382, S7, S0]

================================

Block 0x8e0
[0x8e0:0x995]
---
Predecessors: [0xbd9]
Successors: [0x996, 0x9af]
---
0x8e0 JUMPDEST
0x8e1 POP
0x8e2 POP
0x8e3 PUSH1 0x2
0x8e5 SLOAD
0x8e6 PUSH1 0x3c
0x8e8 MUL
0x8e9 TIMESTAMP
0x8ea ADD
0x8eb PUSH1 0x4
0x8ed DUP3
0x8ee DUP2
0x8ef ADD
0x8f0 SWAP2
0x8f1 SWAP1
0x8f2 SWAP2
0x8f3 SSTORE
0x8f4 PUSH1 0x5
0x8f6 DUP3
0x8f7 ADD
0x8f8 DUP1
0x8f9 SLOAD
0x8fa PUSH2 0xffff
0x8fd NOT
0x8fe AND
0x8ff SWAP1
0x900 SSTORE
0x901 PUSH1 0x40
0x903 DUP1
0x904 MLOAD
0x905 DUP5
0x906 DUP2
0x907 MSTORE
0x908 PUSH1 0x1
0x90a PUSH1 0xa0
0x90c PUSH1 0x2
0x90e EXP
0x90f SUB
0x910 DUP10
0x911 AND
0x912 PUSH1 0x20
0x914 DUP3
0x915 DUP2
0x916 ADD
0x917 SWAP2
0x918 SWAP1
0x919 SWAP2
0x91a MSTORE
0x91b SWAP2
0x91c DUP2
0x91d ADD
0x91e DUP9
0x91f SWAP1
0x920 MSTORE
0x921 PUSH1 0x80
0x923 PUSH1 0x60
0x925 DUP3
0x926 ADD
0x927 DUP2
0x928 DUP2
0x929 MSTORE
0x92a DUP9
0x92b MLOAD
0x92c SWAP2
0x92d DUP4
0x92e ADD
0x92f SWAP2
0x930 SWAP1
0x931 SWAP2
0x932 MSTORE
0x933 DUP8
0x934 MLOAD
0x935 PUSH32 0x646fec02522b41e7125cfc859a64fd4f4cefd5dc3b6237ca0abe251ded1fa881
0x956 SWAP5
0x957 DUP8
0x958 SWAP5
0x959 DUP13
0x95a SWAP5
0x95b DUP13
0x95c SWAP5
0x95d DUP13
0x95e SWAP5
0x95f SWAP2
0x960 SWAP4
0x961 SWAP1
0x962 SWAP3
0x963 PUSH1 0xa0
0x965 DUP6
0x966 ADD
0x967 SWAP3
0x968 DUP7
0x969 DUP3
0x96a ADD
0x96b SWAP3
0x96c SWAP1
0x96d SWAP2
0x96e DUP3
0x96f SWAP2
0x970 DUP6
0x971 SWAP2
0x972 DUP4
0x973 SWAP2
0x974 DUP7
0x975 SWAP2
0x976 PUSH1 0x0
0x978 SWAP2
0x979 SWAP1
0x97a PUSH1 0x1f
0x97c DUP6
0x97d ADD
0x97e DIV
0x97f PUSH1 0xf
0x981 MUL
0x982 PUSH1 0x3
0x984 ADD
0x985 CALL
0x986 POP
0x987 SWAP1
0x988 POP
0x989 SWAP1
0x98a DUP2
0x98b ADD
0x98c SWAP1
0x98d PUSH1 0x1f
0x98f AND
0x990 DUP1
0x991 ISZERO
0x992 PUSH2 0x9af
0x995 JUMPI
---
0x8e0: JUMPDEST 
0x8e3: V794 = 0x2
0x8e5: V795 = S[0x2]
0x8e6: V796 = 0x3c
0x8e8: V797 = MUL 0x3c V795
0x8e9: V798 = TIMESTAMP
0x8ea: V799 = ADD V798 V797
0x8eb: V800 = 0x4
0x8ef: V801 = ADD 0x4 S2
0x8f3: S[V801] = V799
0x8f4: V802 = 0x5
0x8f7: V803 = ADD S2 0x5
0x8f9: V804 = S[V803]
0x8fa: V805 = 0xffff
0x8fd: V806 = NOT 0xffff
0x8fe: V807 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000 V804
0x900: S[V803] = V807
0x901: V808 = 0x40
0x904: V809 = M[0x40]
0x907: M[V809] = S3
0x908: V810 = 0x1
0x90a: V811 = 0xa0
0x90c: V812 = 0x2
0x90e: V813 = EXP 0x2 0xa0
0x90f: V814 = SUB 0x10000000000000000000000000000000000000000 0x1
0x911: V815 = AND S7 0xffffffffffffffffffffffffffffffffffffffff
0x912: V816 = 0x20
0x916: V817 = ADD 0x20 V809
0x91a: M[V817] = V815
0x91d: V818 = ADD V809 0x40
0x920: M[V818] = S6
0x921: V819 = 0x80
0x923: V820 = 0x60
0x926: V821 = ADD V809 0x60
0x929: M[V821] = 0x80
0x92b: V822 = M[S5]
0x92e: V823 = ADD V809 0x80
0x932: M[V823] = V822
0x934: V824 = M[S5]
0x935: V825 = 0x646fec02522b41e7125cfc859a64fd4f4cefd5dc3b6237ca0abe251ded1fa881
0x963: V826 = 0xa0
0x966: V827 = ADD V809 0xa0
0x96a: V828 = ADD 0x20 S5
0x976: V829 = 0x0
0x97a: V830 = 0x1f
0x97d: V831 = ADD V824 0x1f
0x97e: V832 = DIV V831 0x20
0x97f: V833 = 0xf
0x981: V834 = MUL 0xf V832
0x982: V835 = 0x3
0x984: V836 = ADD 0x3 V834
0x985: V837 = CALL V836 0x4 0x0 V828 V824 V827 V824
0x98b: V838 = ADD V824 V827
0x98d: V839 = 0x1f
0x98f: V840 = AND 0x1f V824
0x991: V841 = ISZERO V840
0x992: V842 = 0x9af
0x995: JUMPI 0x9af V841
---
Entry stack: [V10, 0x78e, V375, V377, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, 0x646fec02522b41e7125cfc859a64fd4f4cefd5dc3b6237ca0abe251ded1fa881, S3, S7, S6, S5, V809, V821, V838, V840]
Exit stack: [V10, 0x78e, V375, V377, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x646fec02522b41e7125cfc859a64fd4f4cefd5dc3b6237ca0abe251ded1fa881, S3, S7, S6, S5, V809, V821, V838, V840]

================================

Block 0x996
[0x996:0x9ae]
---
Predecessors: [0x8e0]
Successors: [0x9af]
---
0x996 DUP1
0x997 DUP3
0x998 SUB
0x999 DUP1
0x99a MLOAD
0x99b PUSH1 0x1
0x99d DUP4
0x99e PUSH1 0x20
0x9a0 SUB
0x9a1 PUSH2 0x100
0x9a4 EXP
0x9a5 SUB
0x9a6 NOT
0x9a7 AND
0x9a8 DUP2
0x9a9 MSTORE
0x9aa PUSH1 0x20
0x9ac ADD
0x9ad SWAP2
0x9ae POP
---
0x998: V843 = SUB V838 V840
0x99a: V844 = M[V843]
0x99b: V845 = 0x1
0x99e: V846 = 0x20
0x9a0: V847 = SUB 0x20 V840
0x9a1: V848 = 0x100
0x9a4: V849 = EXP 0x100 V847
0x9a5: V850 = SUB V849 0x1
0x9a6: V851 = NOT V850
0x9a7: V852 = AND V851 V844
0x9a9: M[V843] = V852
0x9aa: V853 = 0x20
0x9ac: V854 = ADD 0x20 V843
---
Entry stack: [V10, 0x78e, V375, V377, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, 0x646fec02522b41e7125cfc859a64fd4f4cefd5dc3b6237ca0abe251ded1fa881, S7, S6, S5, S4, V809, V821, V838, V840]
Stack pops: 2
Stack additions: [V854, S0]
Exit stack: [V10, 0x78e, V375, V377, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, 0x646fec02522b41e7125cfc859a64fd4f4cefd5dc3b6237ca0abe251ded1fa881, S7, S6, S5, S4, V809, V821, V854, V840]

================================

Block 0x9af
[0x9af:0x9bf]
---
Predecessors: [0x8e0, 0x996]
Successors: [0x9c0]
---
0x9af JUMPDEST
0x9b0 POP
0x9b1 SWAP6
0x9b2 POP
0x9b3 POP
0x9b4 POP
0x9b5 POP
0x9b6 POP
0x9b7 POP
0x9b8 PUSH1 0x40
0x9ba MLOAD
0x9bb DUP1
0x9bc SWAP2
0x9bd SUB
0x9be SWAP1
0x9bf LOG1
---
0x9af: JUMPDEST 
0x9b8: V855 = 0x40
0x9ba: V856 = M[0x40]
0x9bd: V857 = SUB S1 V856
0x9bf: LOG V856 V857 0x646fec02522b41e7125cfc859a64fd4f4cefd5dc3b6237ca0abe251ded1fa881
---
Entry stack: [V10, 0x78e, V375, V377, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, 0x646fec02522b41e7125cfc859a64fd4f4cefd5dc3b6237ca0abe251ded1fa881, S7, S6, S5, S4, V809, V821, S1, V840]
Stack pops: 9
Stack additions: []
Exit stack: [V10, 0x78e, V375, V377, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9]

================================

Block 0x9c0
[0x9c0:0x9c8]
---
Predecessors: [0x630, 0x9af]
Successors: [0x78e, 0x8d7]
---
0x9c0 JUMPDEST
0x9c1 POP
0x9c2 SWAP5
0x9c3 SWAP4
0x9c4 POP
0x9c5 POP
0x9c6 POP
0x9c7 POP
0x9c8 JUMP
---
0x9c0: JUMPDEST 
0x9c8: JUMP {0x0, 0x78e, 0x8d7}
---
Entry stack: [V10, 0x78e, V375, V377, V361, V382, S13, {0x78e, 0x8d7}, S11, S10, S9, S8, S7, {0x0, 0x78e, 0x8d7}, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S1]
Exit stack: [V10, 0x78e, V375, V377, V361, V382, S13, {0x78e, 0x8d7}, S11, S10, S9, S8, S7, S1]

================================

Block 0x9c9
[0x9c9:0x9e1]
---
Predecessors: [0x42c]
Successors: [0x9e2, 0xa00]
---
0x9c9 JUMPDEST
0x9ca PUSH1 0x3
0x9cc DUP1
0x9cd SLOAD
0x9ce PUSH1 0x1
0x9d0 DUP2
0x9d1 ADD
0x9d2 DUP1
0x9d3 DUP4
0x9d4 SSTORE
0x9d5 SWAP1
0x9d6 SWAP2
0x9d7 SWAP1
0x9d8 DUP3
0x9d9 DUP1
0x9da ISZERO
0x9db DUP3
0x9dc SWAP1
0x9dd GT
0x9de PUSH2 0xa00
0x9e1 JUMPI
---
0x9c9: JUMPDEST 
0x9ca: V858 = 0x3
0x9cd: V859 = S[0x3]
0x9ce: V860 = 0x1
0x9d1: V861 = ADD V859 0x1
0x9d4: S[0x3] = V861
0x9da: V862 = ISZERO V859
0x9dd: V863 = GT V862 V861
0x9de: V864 = 0xa00
0x9e1: JUMPI 0xa00 V863
---
Entry stack: [V10, 0x78e, V375, V377, V361, V382, S7, {0x78e, 0x8d7}, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: [V859, 0x3, V861, V859]
Exit stack: [V10, 0x78e, V375, V377, V361, V382, S7, {0x78e, 0x8d7}, S5, S4, S3, S2, 0x0, 0x0, V859, 0x3, V861, V859]

================================

Block 0x9e2
[0x9e2:0x9ff]
---
Predecessors: [0x9c9]
Successors: [0xb04]
---
0x9e2 PUSH1 0x8
0x9e4 MUL
0x9e5 DUP2
0x9e6 PUSH1 0x8
0x9e8 MUL
0x9e9 DUP4
0x9ea PUSH1 0x0
0x9ec MSTORE
0x9ed PUSH1 0x20
0x9ef PUSH1 0x0
0x9f1 SHA3
0x9f2 SWAP2
0x9f3 DUP3
0x9f4 ADD
0x9f5 SWAP2
0x9f6 ADD
0x9f7 PUSH2 0xa00
0x9fa SWAP2
0x9fb SWAP1
0x9fc PUSH2 0xb04
0x9ff JUMP
---
0x9e2: V865 = 0x8
0x9e4: V866 = MUL 0x8 V859
0x9e6: V867 = 0x8
0x9e8: V868 = MUL 0x8 V861
0x9ea: V869 = 0x0
0x9ec: M[0x0] = 0x3
0x9ed: V870 = 0x20
0x9ef: V871 = 0x0
0x9f1: V872 = SHA3 0x0 0x20
0x9f4: V873 = ADD V872 V866
0x9f6: V874 = ADD V872 V868
0x9f7: V875 = 0xa00
0x9fc: V876 = 0xb04
0x9ff: JUMP 0xb04
---
Entry stack: [V10, 0x78e, V375, V377, V361, V382, S11, {0x78e, 0x8d7}, S9, S8, S7, S6, 0x0, 0x0, V859, 0x3, V861, V859]
Stack pops: 3
Stack additions: [S2, S1, 0xa00, V873, V874]
Exit stack: [V10, 0x78e, V375, V377, V361, V382, S11, {0x78e, 0x8d7}, S9, S8, S7, S6, 0x0, 0x0, V859, 0x3, V861, 0xa00, V873, V874]

================================

Block 0xa00
[0xa00:0xa14]
---
Predecessors: [0x9c9, 0xbd9]
Successors: [0xa15]
---
0xa00 JUMPDEST
0xa01 POP
0xa02 POP
0xa03 PUSH1 0x3
0xa05 DUP1
0xa06 SLOAD
0xa07 SWAP3
0xa08 SWAP5
0xa09 POP
0xa0a SWAP2
0xa0b DUP5
0xa0c SWAP2
0xa0d POP
0xa0e DUP2
0xa0f LT
0xa10 ISZERO
0xa11 PUSH2 0x2
0xa14 JUMPI
---
0xa00: JUMPDEST 
0xa03: V877 = 0x3
0xa06: V878 = S[0x3]
0xa0f: V879 = LT S3 V878
0xa10: V880 = ISZERO V879
0xa11: V881 = 0x2
0xa14: THROWI V880
---
Entry stack: [V375, V377, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S3, S4, 0x3, S3]
Exit stack: [V375, V377, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S3, S4, 0x3, S3]

================================

Block 0xa15
[0xa15:0xae5]
---
Predecessors: [0xa00]
Successors: [0xae6, 0xbdd]
---
0xa15 SWAP1
0xa16 PUSH1 0x0
0xa18 MSTORE
0xa19 PUSH1 0x20
0xa1b PUSH1 0x0
0xa1d SHA3
0xa1e SWAP1
0xa1f PUSH1 0x8
0xa21 MUL
0xa22 ADD
0xa23 PUSH1 0x0
0xa25 POP
0xa26 DUP1
0xa27 SLOAD
0xa28 PUSH1 0x1
0xa2a PUSH1 0xa0
0xa2c PUSH1 0x2
0xa2e EXP
0xa2f SUB
0xa30 NOT
0xa31 AND
0xa32 DUP8
0xa33 OR
0xa34 DUP2
0xa35 SSTORE
0xa36 PUSH1 0x1
0xa38 DUP2
0xa39 ADD
0xa3a DUP7
0xa3b SWAP1
0xa3c SSTORE
0xa3d PUSH1 0x40
0xa3f MLOAD
0xa40 PUSH1 0x1
0xa42 PUSH1 0xa0
0xa44 PUSH1 0x2
0xa46 EXP
0xa47 SUB
0xa48 DUP9
0xa49 AND
0xa4a PUSH1 0x60
0xa4c PUSH1 0x2
0xa4e EXP
0xa4f MUL
0xa50 DUP2
0xa51 MSTORE
0xa52 PUSH1 0x14
0xa54 DUP2
0xa55 ADD
0xa56 DUP8
0xa57 SWAP1
0xa58 MSTORE
0xa59 DUP5
0xa5a MLOAD
0xa5b SWAP2
0xa5c SWAP3
0xa5d POP
0xa5e DUP8
0xa5f SWAP2
0xa60 DUP8
0xa61 SWAP2
0xa62 DUP7
0xa63 SWAP2
0xa64 PUSH1 0x34
0xa66 DUP3
0xa67 ADD
0xa68 SWAP1
0xa69 PUSH1 0x20
0xa6b DUP5
0xa6c DUP2
0xa6d ADD
0xa6e SWAP2
0xa6f SWAP1
0xa70 DUP2
0xa71 SWAP1
0xa72 DUP5
0xa73 SWAP1
0xa74 DUP3
0xa75 SWAP1
0xa76 DUP6
0xa77 SWAP1
0xa78 PUSH1 0x0
0xa7a SWAP1
0xa7b PUSH1 0x4
0xa7d SWAP1
0xa7e PUSH1 0x1f
0xa80 DUP6
0xa81 ADD
0xa82 DIV
0xa83 PUSH1 0xf
0xa85 MUL
0xa86 PUSH1 0x3
0xa88 ADD
0xa89 CALL
0xa8a POP
0xa8b SWAP1
0xa8c POP
0xa8d ADD
0xa8e SWAP4
0xa8f POP
0xa90 POP
0xa91 POP
0xa92 POP
0xa93 PUSH1 0x40
0xa95 MLOAD
0xa96 DUP1
0xa97 SWAP2
0xa98 SUB
0xa99 SWAP1
0xa9a SHA3
0xa9b DUP2
0xa9c PUSH1 0x2
0xa9e ADD
0xa9f PUSH1 0x0
0xaa1 POP
0xaa2 DUP2
0xaa3 SWAP1
0xaa4 SSTORE
0xaa5 POP
0xaa6 DUP4
0xaa7 DUP2
0xaa8 PUSH1 0x3
0xaaa ADD
0xaab PUSH1 0x0
0xaad POP
0xaae SWAP1
0xaaf DUP1
0xab0 MLOAD
0xab1 SWAP1
0xab2 PUSH1 0x20
0xab4 ADD
0xab5 SWAP1
0xab6 DUP3
0xab7 DUP1
0xab8 SLOAD
0xab9 PUSH1 0x1
0xabb DUP2
0xabc PUSH1 0x1
0xabe AND
0xabf ISZERO
0xac0 PUSH2 0x100
0xac3 MUL
0xac4 SUB
0xac5 AND
0xac6 PUSH1 0x2
0xac8 SWAP1
0xac9 DIV
0xaca SWAP1
0xacb PUSH1 0x0
0xacd MSTORE
0xace PUSH1 0x20
0xad0 PUSH1 0x0
0xad2 SHA3
0xad3 SWAP1
0xad4 PUSH1 0x1f
0xad6 ADD
0xad7 PUSH1 0x20
0xad9 SWAP1
0xada DIV
0xadb DUP2
0xadc ADD
0xadd SWAP3
0xade DUP3
0xadf PUSH1 0x1f
0xae1 LT
0xae2 PUSH2 0xbdd
0xae5 JUMPI
---
0xa16: V882 = 0x0
0xa18: M[0x0] = 0x3
0xa19: V883 = 0x20
0xa1b: V884 = 0x0
0xa1d: V885 = SHA3 0x0 0x20
0xa1f: V886 = 0x8
0xa21: V887 = MUL 0x8 S0
0xa22: V888 = ADD V887 V885
0xa23: V889 = 0x0
0xa27: V890 = S[V888]
0xa28: V891 = 0x1
0xa2a: V892 = 0xa0
0xa2c: V893 = 0x2
0xa2e: V894 = EXP 0x2 0xa0
0xa2f: V895 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa30: V896 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xa31: V897 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V890
0xa33: V898 = OR S7 V897
0xa35: S[V888] = V898
0xa36: V899 = 0x1
0xa39: V900 = ADD V888 0x1
0xa3c: S[V900] = S6
0xa3d: V901 = 0x40
0xa3f: V902 = M[0x40]
0xa40: V903 = 0x1
0xa42: V904 = 0xa0
0xa44: V905 = 0x2
0xa46: V906 = EXP 0x2 0xa0
0xa47: V907 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa49: V908 = AND S7 0xffffffffffffffffffffffffffffffffffffffff
0xa4a: V909 = 0x60
0xa4c: V910 = 0x2
0xa4e: V911 = EXP 0x2 0x60
0xa4f: V912 = MUL 0x1000000000000000000000000 V908
0xa51: M[V902] = V912
0xa52: V913 = 0x14
0xa55: V914 = ADD V902 0x14
0xa58: M[V914] = S6
0xa5a: V915 = M[S4]
0xa64: V916 = 0x34
0xa67: V917 = ADD V902 0x34
0xa69: V918 = 0x20
0xa6d: V919 = ADD 0x20 S4
0xa78: V920 = 0x0
0xa7b: V921 = 0x4
0xa7e: V922 = 0x1f
0xa81: V923 = ADD V915 0x1f
0xa82: V924 = DIV V923 0x20
0xa83: V925 = 0xf
0xa85: V926 = MUL 0xf V924
0xa86: V927 = 0x3
0xa88: V928 = ADD 0x3 V926
0xa89: V929 = CALL V928 0x4 0x0 V919 V915 V917 V915
0xa8d: V930 = ADD V915 V917
0xa93: V931 = 0x40
0xa95: V932 = M[0x40]
0xa98: V933 = SUB V930 V932
0xa9a: V934 = SHA3 V932 V933
0xa9c: V935 = 0x2
0xa9e: V936 = ADD 0x2 V888
0xa9f: V937 = 0x0
0xaa4: S[V936] = V934
0xaa8: V938 = 0x3
0xaaa: V939 = ADD 0x3 V888
0xaab: V940 = 0x0
0xab0: V941 = M[S5]
0xab2: V942 = 0x20
0xab4: V943 = ADD 0x20 S5
0xab8: V944 = S[V939]
0xab9: V945 = 0x1
0xabc: V946 = 0x1
0xabe: V947 = AND 0x1 V944
0xabf: V948 = ISZERO V947
0xac0: V949 = 0x100
0xac3: V950 = MUL 0x100 V948
0xac4: V951 = SUB V950 0x1
0xac5: V952 = AND V951 V944
0xac6: V953 = 0x2
0xac9: V954 = DIV V952 0x2
0xacb: V955 = 0x0
0xacd: M[0x0] = V939
0xace: V956 = 0x20
0xad0: V957 = 0x0
0xad2: V958 = SHA3 0x0 0x20
0xad4: V959 = 0x1f
0xad6: V960 = ADD 0x1f V954
0xad7: V961 = 0x20
0xada: V962 = DIV V960 0x20
0xadc: V963 = ADD V958 V962
0xadf: V964 = 0x1f
0xae1: V965 = LT 0x1f V941
0xae2: V966 = 0xbdd
0xae5: JUMPI 0xbdd V965
---
Entry stack: [V375, V377, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x3, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, V888, V939, V963, V941, V958, V943]
Exit stack: [S15, 0x78e, S13, S12, S11, S10, S9, {0x78e, 0x8d7}, S7, S6, S5, S4, S3, V888, V939, V963, V941, V958, V943]

================================

Block 0xae6
[0xae6:0xaf1]
---
Predecessors: [0xa15]
Successors: [0xaf2]
---
0xae6 DUP1
0xae7 MLOAD
0xae8 PUSH1 0xff
0xaea NOT
0xaeb AND
0xaec DUP4
0xaed DUP1
0xaee ADD
0xaef OR
0xaf0 DUP6
0xaf1 SSTORE
---
0xae7: V967 = M[V943]
0xae8: V968 = 0xff
0xaea: V969 = NOT 0xff
0xaeb: V970 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V967
0xaee: V971 = ADD V941 V941
0xaef: V972 = OR V971 V970
0xaf1: S[V939] = V972
---
Entry stack: [V10, 0x78e, V375, V377, V361, V382, S12, {0x78e, 0x8d7}, S10, S9, S8, S7, S6, V888, V939, V963, V941, V958, V943]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V10, 0x78e, V375, V377, V361, V382, S12, {0x78e, 0x8d7}, S10, S9, S8, S7, S6, V888, V939, V963, V941, V958, V943]

================================

Block 0xaf2
[0xaf2:0xafd]
---
Predecessors: [0xae6, 0xbdd, 0xbef]
Successors: [0xbc5]
---
0xaf2 JUMPDEST
0xaf3 POP
0xaf4 PUSH2 0x8e0
0xaf7 SWAP3
0xaf8 SWAP2
0xaf9 POP
0xafa PUSH2 0xbc5
0xafd JUMP
---
0xaf2: JUMPDEST 
0xaf4: V973 = 0x8e0
0xafa: V974 = 0xbc5
0xafd: JUMP 0xbc5
---
Entry stack: [V10, 0x78e, V375, V377, V361, V382, S12, {0x78e, 0x8d7}, S10, S9, S8, S7, S6, V888, V939, V963, S2, S1, S0]
Stack pops: 4
Stack additions: [0x8e0, S3, S1]
Exit stack: [V10, 0x78e, V375, V377, V361, V382, S12, {0x78e, 0x8d7}, S10, S9, S8, S7, S6, V888, V939, 0x8e0, V963, S1]

================================

Block 0xafe
[0xafe:0xb03]
---
Predecessors: [0xbd9]
Successors: [0xb04]
---
0xafe JUMPDEST
0xaff POP
0xb00 POP
0xb01 PUSH1 0x1
0xb03 ADD
---
0xafe: JUMPDEST 
0xb01: V975 = 0x1
0xb03: V976 = ADD 0x1 S2
---
Entry stack: [V10, 0x78e, V375, V377, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V976]
Exit stack: [V10, 0x78e, V375, V377, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V976]

================================

Block 0xb04
[0xb04:0xb0c]
---
Predecessors: [0x9e2, 0xafe]
Successors: [0xb0d, 0xbd9]
---
0xb04 JUMPDEST
0xb05 DUP1
0xb06 DUP3
0xb07 GT
0xb08 ISZERO
0xb09 PUSH2 0xbd9
0xb0c JUMPI
---
0xb04: JUMPDEST 
0xb07: V977 = GT S1 S0
0xb08: V978 = ISZERO V977
0xb09: V979 = 0xbd9
0xb0c: JUMPI 0xbd9 V978
---
Entry stack: [V10, 0x78e, V375, V377, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x78e, V375, V377, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xb0d
[0xb0d:0xb4d]
---
Predecessors: [0xb04]
Successors: [0xb4e, 0xbab]
---
0xb0d DUP1
0xb0e SLOAD
0xb0f PUSH1 0x1
0xb11 PUSH1 0xa0
0xb13 PUSH1 0x2
0xb15 EXP
0xb16 SUB
0xb17 NOT
0xb18 AND
0xb19 DUP2
0xb1a SSTORE
0xb1b PUSH1 0x0
0xb1d PUSH1 0x1
0xb1f DUP3
0xb20 DUP2
0xb21 ADD
0xb22 DUP3
0xb23 SWAP1
0xb24 SSTORE
0xb25 PUSH1 0x2
0xb27 DUP4
0xb28 DUP2
0xb29 ADD
0xb2a DUP4
0xb2b SWAP1
0xb2c SSTORE
0xb2d PUSH1 0x3
0xb2f DUP5
0xb30 ADD
0xb31 DUP1
0xb32 SLOAD
0xb33 DUP5
0xb34 DUP3
0xb35 SSTORE
0xb36 SWAP1
0xb37 SWAP3
0xb38 DUP2
0xb39 AND
0xb3a ISZERO
0xb3b PUSH2 0x100
0xb3e MUL
0xb3f PUSH1 0x0
0xb41 NOT
0xb42 ADD
0xb43 AND
0xb44 DIV
0xb45 PUSH1 0x1f
0xb47 DUP2
0xb48 SWAP1
0xb49 LT
0xb4a PUSH2 0xbab
0xb4d JUMPI
---
0xb0e: V980 = S[S0]
0xb0f: V981 = 0x1
0xb11: V982 = 0xa0
0xb13: V983 = 0x2
0xb15: V984 = EXP 0x2 0xa0
0xb16: V985 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb17: V986 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xb18: V987 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V980
0xb1a: S[S0] = V987
0xb1b: V988 = 0x0
0xb1d: V989 = 0x1
0xb21: V990 = ADD 0x1 S0
0xb24: S[V990] = 0x0
0xb25: V991 = 0x2
0xb29: V992 = ADD 0x2 S0
0xb2c: S[V992] = 0x0
0xb2d: V993 = 0x3
0xb30: V994 = ADD S0 0x3
0xb32: V995 = S[V994]
0xb35: S[V994] = 0x0
0xb39: V996 = AND V995 0x1
0xb3a: V997 = ISZERO V996
0xb3b: V998 = 0x100
0xb3e: V999 = MUL 0x100 V997
0xb3f: V1000 = 0x0
0xb41: V1001 = NOT 0x0
0xb42: V1002 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V999
0xb43: V1003 = AND V1002 V995
0xb44: V1004 = DIV V1003 0x2
0xb45: V1005 = 0x1f
0xb49: V1006 = LT 0x1f V1004
0xb4a: V1007 = 0xbab
0xb4d: JUMPI 0xbab V1006
---
Entry stack: [V10, 0x78e, V375, V377, V361, V382, S13, {0x78e, 0x8d7}, S11, S10, S9, S8, S7, {0x0, 0x78e, 0x8d7}, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x0, V994, V1004]
Exit stack: [V10, 0x78e, V375, V377, V361, V382, S13, {0x78e, 0x8d7}, S11, S10, S9, S8, S7, {0x0, 0x78e, 0x8d7}, S5, S4, S3, S2, S1, S0, 0x0, V994, V1004]

================================

Block 0xb4e
[0xb4e:0xb4e]
---
Predecessors: [0xb0d]
Successors: [0xb4f]
---
0xb4e POP
---
0xb4e: NOP 
---
Entry stack: [V10, 0x78e, V375, V377, V361, V382, S16, {0x78e, 0x8d7}, S14, S13, S12, S11, S10, {0x0, 0x78e, 0x8d7}, S8, S7, S6, S5, S4, S3, 0x0, V994, V1004]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x78e, V375, V377, V361, V382, S16, {0x78e, 0x8d7}, S14, S13, S12, S11, S10, {0x0, 0x78e, 0x8d7}, S8, S7, S6, S5, S4, S3, 0x0, V994]

================================

Block 0xb4f
[0xb4f:0xb7e]
---
Predecessors: [0xb4e, 0xbd9]
Successors: [0xb7f]
---
0xb4f JUMPDEST
0xb50 POP
0xb51 PUSH1 0x0
0xb53 PUSH1 0x4
0xb55 DUP4
0xb56 ADD
0xb57 DUP2
0xb58 SWAP1
0xb59 SSTORE
0xb5a PUSH1 0x5
0xb5c DUP4
0xb5d ADD
0xb5e DUP1
0xb5f SLOAD
0xb60 PUSH2 0xffff
0xb63 NOT
0xb64 AND
0xb65 SWAP1
0xb66 SSTORE
0xb67 PUSH1 0x6
0xb69 DUP4
0xb6a ADD
0xb6b DUP1
0xb6c SLOAD
0xb6d DUP3
0xb6e DUP3
0xb6f SSTORE
0xb70 SWAP1
0xb71 DUP3
0xb72 MSTORE
0xb73 PUSH1 0x20
0xb75 SWAP1
0xb76 SWAP2
0xb77 SHA3
0xb78 PUSH2 0xafe
0xb7b SWAP2
0xb7c DUP2
0xb7d ADD
0xb7e SWAP1
---
0xb4f: JUMPDEST 
0xb51: V1008 = 0x0
0xb53: V1009 = 0x4
0xb56: V1010 = ADD S2 0x4
0xb59: S[V1010] = 0x0
0xb5a: V1011 = 0x5
0xb5d: V1012 = ADD S2 0x5
0xb5f: V1013 = S[V1012]
0xb60: V1014 = 0xffff
0xb63: V1015 = NOT 0xffff
0xb64: V1016 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000 V1013
0xb66: S[V1012] = V1016
0xb67: V1017 = 0x6
0xb6a: V1018 = ADD S2 0x6
0xb6c: V1019 = S[V1018]
0xb6f: S[V1018] = 0x0
0xb72: M[0x0] = V1018
0xb73: V1020 = 0x20
0xb77: V1021 = SHA3 0x0 0x20
0xb78: V1022 = 0xafe
0xb7d: V1023 = ADD V1021 V1019
---
Entry stack: [V10, 0x78e, V375, V377, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, 0xafe, V1023, V1021]
Exit stack: [V10, 0x78e, V375, V377, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0xafe, V1023, V1021]

================================

Block 0xb7f
[0xb7f:0xb87]
---
Predecessors: [0xb4f, 0xb88, 0xc7d]
Successors: [0xb88, 0xbd9]
---
0xb7f JUMPDEST
0xb80 DUP1
0xb81 DUP3
0xb82 GT
0xb83 ISZERO
0xb84 PUSH2 0xbd9
0xb87 JUMPI
---
0xb7f: JUMPDEST 
0xb82: V1024 = GT S1 S0
0xb83: V1025 = ISZERO V1024
0xb84: V1026 = 0xbd9
0xb87: JUMPI 0xbd9 V1025
---
Entry stack: [V10, 0x78e, V375, V377, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0xafe, 0xc93}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x78e, V375, V377, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0xafe, 0xc93}, S1, S0]

================================

Block 0xb88
[0xb88:0xbaa]
---
Predecessors: [0xb7f]
Successors: [0xb7f]
---
0xb88 DUP1
0xb89 SLOAD
0xb8a PUSH21 0xffffffffffffffffffffffffffffffffffffffffff
0xba0 NOT
0xba1 AND
0xba2 DUP2
0xba3 SSTORE
0xba4 PUSH1 0x1
0xba6 ADD
0xba7 PUSH2 0xb7f
0xbaa JUMP
---
0xb89: V1027 = S[S0]
0xb8a: V1028 = 0xffffffffffffffffffffffffffffffffffffffffff
0xba0: V1029 = NOT 0xffffffffffffffffffffffffffffffffffffffffff
0xba1: V1030 = AND 0xffffffffffffffffffffff000000000000000000000000000000000000000000 V1027
0xba3: S[S0] = V1030
0xba4: V1031 = 0x1
0xba6: V1032 = ADD 0x1 S0
0xba7: V1033 = 0xb7f
0xbaa: JUMP 0xb7f
---
Entry stack: [V10, 0x78e, V375, V377, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0xafe, 0xc93}, S1, S0]
Stack pops: 1
Stack additions: [V1032]
Exit stack: [V10, 0x78e, V375, V377, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0xafe, 0xc93}, S1, V1032]

================================

Block 0xbab
[0xbab:0xbc4]
---
Predecessors: [0xb0d]
Successors: [0xbc5]
---
0xbab JUMPDEST
0xbac PUSH1 0x1f
0xbae ADD
0xbaf PUSH1 0x20
0xbb1 SWAP1
0xbb2 DIV
0xbb3 SWAP1
0xbb4 PUSH1 0x0
0xbb6 MSTORE
0xbb7 PUSH1 0x20
0xbb9 PUSH1 0x0
0xbbb SHA3
0xbbc SWAP1
0xbbd DUP2
0xbbe ADD
0xbbf SWAP1
0xbc0 PUSH2 0xb4f
0xbc3 SWAP2
0xbc4 SWAP1
---
0xbab: JUMPDEST 
0xbac: V1034 = 0x1f
0xbae: V1035 = ADD 0x1f V1004
0xbaf: V1036 = 0x20
0xbb2: V1037 = DIV V1035 0x20
0xbb4: V1038 = 0x0
0xbb6: M[0x0] = V994
0xbb7: V1039 = 0x20
0xbb9: V1040 = 0x0
0xbbb: V1041 = SHA3 0x0 0x20
0xbbe: V1042 = ADD V1041 V1037
0xbc0: V1043 = 0xb4f
---
Entry stack: [V10, 0x78e, V375, V377, V361, V382, S16, {0x78e, 0x8d7}, S14, S13, S12, S11, S10, {0x0, 0x78e, 0x8d7}, S8, S7, S6, S5, S4, S3, 0x0, V994, V1004]
Stack pops: 2
Stack additions: [0xb4f, V1042, V1041]
Exit stack: [V10, 0x78e, V375, V377, V361, V382, S16, {0x78e, 0x8d7}, S14, S13, S12, S11, S10, {0x0, 0x78e, 0x8d7}, S8, S7, S6, S5, S4, S3, 0x0, 0xb4f, V1042, V1041]

================================

Block 0xbc5
[0xbc5:0xbcd]
---
Predecessors: [0xaf2, 0xbab, 0xbce]
Successors: [0xbce, 0xbd9]
---
0xbc5 JUMPDEST
0xbc6 DUP1
0xbc7 DUP3
0xbc8 GT
0xbc9 ISZERO
0xbca PUSH2 0xbd9
0xbcd JUMPI
---
0xbc5: JUMPDEST 
0xbc8: V1044 = GT S1 S0
0xbc9: V1045 = ISZERO V1044
0xbca: V1046 = 0xbd9
0xbcd: JUMPI 0xbd9 V1045
---
Entry stack: [V10, 0x78e, V375, V377, V361, V382, S17, {0x78e, 0x8d7}, S15, S14, S13, S12, S11, {0x0, 0x78e, 0x8d7}, S9, S8, S7, S6, S5, S4, S3, {0x8e0, 0xb4f}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x78e, V375, V377, V361, V382, S17, {0x78e, 0x8d7}, S15, S14, S13, S12, S11, {0x0, 0x78e, 0x8d7}, S9, S8, S7, S6, S5, S4, S3, {0x8e0, 0xb4f}, S1, S0]

================================

Block 0xbce
[0xbce:0xbd8]
---
Predecessors: [0xbc5]
Successors: [0xbc5]
---
0xbce PUSH1 0x0
0xbd0 DUP2
0xbd1 SSTORE
0xbd2 PUSH1 0x1
0xbd4 ADD
0xbd5 PUSH2 0xbc5
0xbd8 JUMP
---
0xbce: V1047 = 0x0
0xbd1: S[S0] = 0x0
0xbd2: V1048 = 0x1
0xbd4: V1049 = ADD 0x1 S0
0xbd5: V1050 = 0xbc5
0xbd8: JUMP 0xbc5
---
Entry stack: [V10, 0x78e, V375, V377, V361, V382, S17, {0x78e, 0x8d7}, S15, S14, S13, S12, S11, {0x0, 0x78e, 0x8d7}, S9, S8, S7, S6, S5, S4, S3, {0x8e0, 0xb4f}, S1, S0]
Stack pops: 1
Stack additions: [V1049]
Exit stack: [V10, 0x78e, V375, V377, V361, V382, S17, {0x78e, 0x8d7}, S15, S14, S13, S12, S11, {0x0, 0x78e, 0x8d7}, S9, S8, S7, S6, S5, S4, S3, {0x8e0, 0xb4f}, S1, V1049]

================================

Block 0xbd9
[0xbd9:0xbdc]
---
Predecessors: [0xb04, 0xb7f, 0xbc5]
Successors: [0x8e0, 0xa00, 0xafe, 0xb4f, 0xc93]
---
0xbd9 JUMPDEST
0xbda POP
0xbdb SWAP1
0xbdc JUMP
---
0xbd9: JUMPDEST 
0xbdc: JUMP S2
---
Entry stack: [V10, 0x78e, V375, V377, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V10, 0x78e, V375, V377, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S1]

================================

Block 0xbdd
[0xbdd:0xbeb]
---
Predecessors: [0xa15]
Successors: [0xaf2, 0xbec]
---
0xbdd JUMPDEST
0xbde DUP3
0xbdf DUP1
0xbe0 ADD
0xbe1 PUSH1 0x1
0xbe3 ADD
0xbe4 DUP6
0xbe5 SSTORE
0xbe6 DUP3
0xbe7 ISZERO
0xbe8 PUSH2 0xaf2
0xbeb JUMPI
---
0xbdd: JUMPDEST 
0xbe0: V1051 = ADD V941 V941
0xbe1: V1052 = 0x1
0xbe3: V1053 = ADD 0x1 V1051
0xbe5: S[V939] = V1053
0xbe7: V1054 = ISZERO V941
0xbe8: V1055 = 0xaf2
0xbeb: JUMPI 0xaf2 V1054
---
Entry stack: [V10, 0x78e, V375, V377, V361, V382, S12, {0x78e, 0x8d7}, S10, S9, S8, S7, S6, V888, V939, V963, V941, V958, V943]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V10, 0x78e, V375, V377, V361, V382, S12, {0x78e, 0x8d7}, S10, S9, S8, S7, S6, V888, V939, V963, V941, V958, V943]

================================

Block 0xbec
[0xbec:0xbee]
---
Predecessors: [0xbdd]
Successors: [0xbef]
---
0xbec SWAP2
0xbed DUP3
0xbee ADD
---
0xbee: V1056 = ADD V943 V941
---
Entry stack: [V10, 0x78e, V375, V377, V361, V382, S12, {0x78e, 0x8d7}, S10, S9, S8, S7, S6, V888, V939, V963, V941, V958, V943]
Stack pops: 3
Stack additions: [S0, S1, V1056]
Exit stack: [V10, 0x78e, V375, V377, V361, V382, S12, {0x78e, 0x8d7}, S10, S9, S8, S7, S6, V888, V939, V963, V943, V958, V1056]

================================

Block 0xbef
[0xbef:0xbf7]
---
Predecessors: [0xbec, 0xbf8]
Successors: [0xaf2, 0xbf8]
---
0xbef JUMPDEST
0xbf0 DUP3
0xbf1 DUP2
0xbf2 GT
0xbf3 ISZERO
0xbf4 PUSH2 0xaf2
0xbf7 JUMPI
---
0xbef: JUMPDEST 
0xbf2: V1057 = GT V1056 S2
0xbf3: V1058 = ISZERO V1057
0xbf4: V1059 = 0xaf2
0xbf7: JUMPI 0xaf2 V1058
---
Entry stack: [V10, 0x78e, V375, V377, V361, V382, S12, {0x78e, 0x8d7}, S10, S9, S8, S7, S6, V888, V939, V963, S2, S1, V1056]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x78e, V375, V377, V361, V382, S12, {0x78e, 0x8d7}, S10, S9, S8, S7, S6, V888, V939, V963, S2, S1, V1056]

================================

Block 0xbf8
[0xbf8:0xc0c]
---
Predecessors: [0xbef]
Successors: [0xbef]
---
0xbf8 DUP3
0xbf9 MLOAD
0xbfa DUP3
0xbfb PUSH1 0x0
0xbfd POP
0xbfe SSTORE
0xbff SWAP2
0xc00 PUSH1 0x20
0xc02 ADD
0xc03 SWAP2
0xc04 SWAP1
0xc05 PUSH1 0x1
0xc07 ADD
0xc08 SWAP1
0xc09 PUSH2 0xbef
0xc0c JUMP
---
0xbf9: V1060 = M[S2]
0xbfb: V1061 = 0x0
0xbfe: S[S1] = V1060
0xc00: V1062 = 0x20
0xc02: V1063 = ADD 0x20 S2
0xc05: V1064 = 0x1
0xc07: V1065 = ADD 0x1 S1
0xc09: V1066 = 0xbef
0xc0c: JUMP 0xbef
---
Entry stack: [V10, 0x78e, V375, V377, V361, V382, S12, {0x78e, 0x8d7}, S10, S9, S8, S7, S6, V888, V939, V963, S2, S1, V1056]
Stack pops: 3
Stack additions: [V1063, V1065, S0]
Exit stack: [V10, 0x78e, V375, V377, V361, V382, S12, {0x78e, 0x8d7}, S10, S9, S8, S7, S6, V888, V939, V963, V1063, V1065, V1056]

================================

Block 0xc0d
[0xc0d:0xc1a]
---
Predecessors: [0x5bc]
Successors: [0xc1b]
---
0xc0d JUMPDEST
0xc0e PUSH1 0x3
0xc10 DUP1
0xc11 SLOAD
0xc12 DUP6
0xc13 SWAP1
0xc14 DUP2
0xc15 LT
0xc16 ISZERO
0xc17 PUSH2 0x2
0xc1a JUMPI
---
0xc0d: JUMPDEST 
0xc0e: V1067 = 0x3
0xc11: V1068 = S[0x3]
0xc15: V1069 = LT V454 V1068
0xc16: V1070 = ISZERO V1069
0xc17: V1071 = 0x2
0xc1a: THROWI V1070
---
Entry stack: [V10, 0x78e, V454, V456, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x3, S3]
Exit stack: [V10, 0x78e, V454, V456, 0x0, 0x0, 0x3, V454]

================================

Block 0xc1b
[0xc1b:0xc5d]
---
Predecessors: [0xc0d]
Successors: [0xc5e, 0xc62]
---
0xc1b PUSH1 0x0
0xc1d SWAP2
0xc1e DUP3
0xc1f MSTORE
0xc20 PUSH1 0x8
0xc22 MUL
0xc23 PUSH1 0x0
0xc25 DUP1
0xc26 MLOAD
0xc27 PUSH1 0x20
0xc29 PUSH2 0xf80
0xc2c DUP4
0xc2d CODECOPY
0xc2e DUP2
0xc2f MLOAD
0xc30 SWAP2
0xc31 MSTORE
0xc32 ADD
0xc33 SWAP1
0xc34 POP
0xc35 CALLER
0xc36 PUSH1 0x1
0xc38 PUSH1 0xa0
0xc3a PUSH1 0x2
0xc3c EXP
0xc3d SUB
0xc3e AND
0xc3f PUSH1 0x0
0xc41 SWAP1
0xc42 DUP2
0xc43 MSTORE
0xc44 PUSH1 0x7
0xc46 DUP3
0xc47 ADD
0xc48 PUSH1 0x20
0xc4a MSTORE
0xc4b PUSH1 0x40
0xc4d SWAP1
0xc4e SHA3
0xc4f SLOAD
0xc50 SWAP1
0xc51 SWAP2
0xc52 POP
0xc53 PUSH1 0xff
0xc55 AND
0xc56 PUSH1 0x1
0xc58 EQ
0xc59 ISZERO
0xc5a PUSH2 0xc62
0xc5d JUMPI
---
0xc1b: V1072 = 0x0
0xc1f: M[0x0] = 0x3
0xc20: V1073 = 0x8
0xc22: V1074 = MUL 0x8 V454
0xc23: V1075 = 0x0
0xc26: V1076 = M[0x0]
0xc27: V1077 = 0x20
0xc29: V1078 = 0xf80
0xc2d: CODECOPY 0x0 0xf80 0x20
0xc2f: V1079 = M[0x0]
0xc31: M[0x0] = V1076
0xc32: V1080 = ADD V1079 V1074
0xc35: V1081 = CALLER
0xc36: V1082 = 0x1
0xc38: V1083 = 0xa0
0xc3a: V1084 = 0x2
0xc3c: V1085 = EXP 0x2 0xa0
0xc3d: V1086 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc3e: V1087 = AND 0xffffffffffffffffffffffffffffffffffffffff V1081
0xc3f: V1088 = 0x0
0xc43: M[0x0] = V1087
0xc44: V1089 = 0x7
0xc47: V1090 = ADD V1080 0x7
0xc48: V1091 = 0x20
0xc4a: M[0x20] = V1090
0xc4b: V1092 = 0x40
0xc4e: V1093 = SHA3 0x0 0x40
0xc4f: V1094 = S[V1093]
0xc53: V1095 = 0xff
0xc55: V1096 = AND 0xff V1094
0xc56: V1097 = 0x1
0xc58: V1098 = EQ 0x1 V1096
0xc59: V1099 = ISZERO V1098
0xc5a: V1100 = 0xc62
0xc5d: JUMPI 0xc62 V1099
---
Entry stack: [V10, 0x78e, V454, V456, 0x0, 0x0, 0x3, V454]
Stack pops: 3
Stack additions: [V1080]
Exit stack: [V10, 0x78e, V454, V456, 0x0, V1080]

================================

Block 0xc5e
[0xc5e:0xc61]
---
Predecessors: [0xc1b]
Successors: []
---
0xc5e PUSH2 0x2
0xc61 JUMP
---
0xc5e: V1101 = 0x2
0xc61: THROW 
---
Entry stack: [V10, 0x78e, V454, V456, 0x0, V1080]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x78e, V454, V456, 0x0, V1080]

================================

Block 0xc62
[0xc62:0xc7c]
---
Predecessors: [0xc1b]
Successors: [0xc7d, 0xc93]
---
0xc62 JUMPDEST
0xc63 PUSH1 0x6
0xc65 DUP2
0xc66 ADD
0xc67 DUP1
0xc68 SLOAD
0xc69 PUSH1 0x1
0xc6b DUP2
0xc6c ADD
0xc6d DUP1
0xc6e DUP4
0xc6f SSTORE
0xc70 SWAP1
0xc71 SWAP2
0xc72 SWAP1
0xc73 DUP3
0xc74 DUP1
0xc75 ISZERO
0xc76 DUP3
0xc77 SWAP1
0xc78 GT
0xc79 PUSH2 0xc93
0xc7c JUMPI
---
0xc62: JUMPDEST 
0xc63: V1102 = 0x6
0xc66: V1103 = ADD V1080 0x6
0xc68: V1104 = S[V1103]
0xc69: V1105 = 0x1
0xc6c: V1106 = ADD V1104 0x1
0xc6f: S[V1103] = V1106
0xc75: V1107 = ISZERO V1104
0xc78: V1108 = GT V1107 V1106
0xc79: V1109 = 0xc93
0xc7c: JUMPI 0xc93 V1108
---
Entry stack: [V10, 0x78e, V454, V456, 0x0, V1080]
Stack pops: 1
Stack additions: [S0, V1104, V1103, V1106, V1104]
Exit stack: [V10, 0x78e, V454, V456, 0x0, V1080, V1104, V1103, V1106, V1104]

================================

Block 0xc7d
[0xc7d:0xc92]
---
Predecessors: [0xc62]
Successors: [0xb7f]
---
0xc7d PUSH1 0x0
0xc7f DUP4
0xc80 DUP2
0xc81 MSTORE
0xc82 PUSH1 0x20
0xc84 SWAP1
0xc85 SHA3
0xc86 PUSH2 0xc93
0xc89 SWAP2
0xc8a DUP2
0xc8b ADD
0xc8c SWAP1
0xc8d DUP4
0xc8e ADD
0xc8f PUSH2 0xb7f
0xc92 JUMP
---
0xc7d: V1110 = 0x0
0xc81: M[0x0] = V1103
0xc82: V1111 = 0x20
0xc85: V1112 = SHA3 0x0 0x20
0xc86: V1113 = 0xc93
0xc8b: V1114 = ADD V1112 V1104
0xc8e: V1115 = ADD V1106 V1112
0xc8f: V1116 = 0xb7f
0xc92: JUMP 0xb7f
---
Entry stack: [V10, 0x78e, V454, V456, 0x0, V1080, V1104, V1103, V1106, V1104]
Stack pops: 3
Stack additions: [S2, S1, 0xc93, V1114, V1115]
Exit stack: [V10, 0x78e, V454, V456, 0x0, V1080, V1104, V1103, V1106, 0xc93, V1114, V1115]

================================

Block 0xc93
[0xc93:0xcbf]
---
Predecessors: [0xbd9, 0xc62]
Successors: [0xcc0]
---
0xc93 JUMPDEST
0xc94 POP
0xc95 POP
0xc96 PUSH1 0x40
0xc98 DUP1
0xc99 MLOAD
0xc9a DUP1
0xc9b DUP3
0xc9c ADD
0xc9d SWAP1
0xc9e SWAP2
0xc9f MSTORE
0xca0 DUP6
0xca1 DUP2
0xca2 MSTORE
0xca3 CALLER
0xca4 PUSH1 0x20
0xca6 DUP3
0xca7 ADD
0xca8 MSTORE
0xca9 PUSH1 0x6
0xcab DUP5
0xcac ADD
0xcad DUP1
0xcae SLOAD
0xcaf SWAP4
0xcb0 SWAP6
0xcb1 POP
0xcb2 SWAP1
0xcb3 SWAP3
0xcb4 SWAP1
0xcb5 SWAP2
0xcb6 POP
0xcb7 DUP5
0xcb8 SWAP1
0xcb9 DUP2
0xcba LT
0xcbb ISZERO
0xcbc PUSH2 0x2
0xcbf JUMPI
---
0xc93: JUMPDEST 
0xc96: V1117 = 0x40
0xc99: V1118 = M[0x40]
0xc9c: V1119 = ADD 0x40 V1118
0xc9f: M[0x40] = V1119
0xca2: M[V1118] = S6
0xca3: V1120 = CALLER
0xca4: V1121 = 0x20
0xca7: V1122 = ADD V1118 0x20
0xca8: M[V1122] = V1120
0xca9: V1123 = 0x6
0xcac: V1124 = ADD S4 0x6
0xcae: V1125 = S[V1124]
0xcba: V1126 = LT S3 V1125
0xcbb: V1127 = ISZERO V1126
0xcbc: V1128 = 0x2
0xcbf: THROWI V1127
---
Entry stack: [V10, 0x78e, V375, V377, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S3, S4, V1118, V1124, S3]
Exit stack: [V10, 0x78e, V375, V377, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S3, S4, V1118, V1124, S3]

================================

Block 0xcc0
[0xcc0:0xd69]
---
Predecessors: [0xc93]
Successors: [0x78e, 0x8d7]
---
0xcc0 SWAP1
0xcc1 PUSH1 0x0
0xcc3 MSTORE
0xcc4 PUSH1 0x20
0xcc6 PUSH1 0x0
0xcc8 SHA3
0xcc9 SWAP1
0xcca ADD
0xccb PUSH1 0x0
0xccd POP
0xcce DUP2
0xccf MLOAD
0xcd0 DUP2
0xcd1 SLOAD
0xcd2 PUSH1 0x20
0xcd4 SWAP4
0xcd5 DUP5
0xcd6 ADD
0xcd7 MLOAD
0xcd8 PUSH2 0x100
0xcdb MUL
0xcdc PUSH1 0xff
0xcde NOT
0xcdf SWAP2
0xce0 DUP3
0xce1 AND
0xce2 SWAP1
0xce3 SWAP3
0xce4 OR
0xce5 PUSH21 0xffffffffffffffffffffffffffffffffffffffff00
0xcfb NOT
0xcfc AND
0xcfd SWAP2
0xcfe SWAP1
0xcff SWAP2
0xd00 OR
0xd01 SWAP1
0xd02 SWAP2
0xd03 SSTORE
0xd04 CALLER
0xd05 PUSH1 0x1
0xd07 PUSH1 0xa0
0xd09 PUSH1 0x2
0xd0b EXP
0xd0c SUB
0xd0d AND
0xd0e PUSH1 0x0
0xd10 DUP2
0xd11 DUP2
0xd12 MSTORE
0xd13 PUSH1 0x7
0xd15 DUP6
0xd16 ADD
0xd17 DUP5
0xd18 MSTORE
0xd19 PUSH1 0x40
0xd1b SWAP1
0xd1c DUP2
0xd1d SWAP1
0xd1e SHA3
0xd1f DUP1
0xd20 SLOAD
0xd21 SWAP1
0xd22 SWAP4
0xd23 AND
0xd24 PUSH1 0x1
0xd26 OR
0xd27 SWAP1
0xd28 SWAP3
0xd29 SSTORE
0xd2a DUP2
0xd2b MLOAD
0xd2c DUP8
0xd2d DUP2
0xd2e MSTORE
0xd2f SWAP3
0xd30 DUP4
0xd31 ADD
0xd32 DUP7
0xd33 SWAP1
0xd34 MSTORE
0xd35 DUP3
0xd36 DUP3
0xd37 ADD
0xd38 MSTORE
0xd39 MLOAD
0xd3a PUSH32 0x86abfce99b7dd908bec0169288797f85049ec73cbe046ed9de818fab3a497ae0
0xd5b SWAP2
0xd5c DUP2
0xd5d SWAP1
0xd5e SUB
0xd5f PUSH1 0x60
0xd61 ADD
0xd62 SWAP1
0xd63 LOG1
0xd64 POP
0xd65 SWAP3
0xd66 SWAP2
0xd67 POP
0xd68 POP
0xd69 JUMP
---
0xcc1: V1129 = 0x0
0xcc3: M[0x0] = V1124
0xcc4: V1130 = 0x20
0xcc6: V1131 = 0x0
0xcc8: V1132 = SHA3 0x0 0x20
0xcca: V1133 = ADD S0 V1132
0xccb: V1134 = 0x0
0xccf: V1135 = M[V1118]
0xcd1: V1136 = S[V1133]
0xcd2: V1137 = 0x20
0xcd6: V1138 = ADD 0x20 V1118
0xcd7: V1139 = M[V1138]
0xcd8: V1140 = 0x100
0xcdb: V1141 = MUL 0x100 V1139
0xcdc: V1142 = 0xff
0xcde: V1143 = NOT 0xff
0xce1: V1144 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1136
0xce4: V1145 = OR V1135 V1144
0xce5: V1146 = 0xffffffffffffffffffffffffffffffffffffffff00
0xcfb: V1147 = NOT 0xffffffffffffffffffffffffffffffffffffffff00
0xcfc: V1148 = AND 0xffffffffffffffffffffff0000000000000000000000000000000000000000ff V1145
0xd00: V1149 = OR V1148 V1141
0xd03: S[V1133] = V1149
0xd04: V1150 = CALLER
0xd05: V1151 = 0x1
0xd07: V1152 = 0xa0
0xd09: V1153 = 0x2
0xd0b: V1154 = EXP 0x2 0xa0
0xd0c: V1155 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd0d: V1156 = AND 0xffffffffffffffffffffffffffffffffffffffff V1150
0xd0e: V1157 = 0x0
0xd12: M[0x0] = V1156
0xd13: V1158 = 0x7
0xd16: V1159 = ADD S3 0x7
0xd18: M[0x20] = V1159
0xd19: V1160 = 0x40
0xd1e: V1161 = SHA3 0x0 0x40
0xd20: V1162 = S[V1161]
0xd23: V1163 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1162
0xd24: V1164 = 0x1
0xd26: V1165 = OR 0x1 V1163
0xd29: S[V1161] = V1165
0xd2b: V1166 = M[0x40]
0xd2e: M[V1166] = S6
0xd31: V1167 = ADD V1166 0x20
0xd34: M[V1167] = S5
0xd37: V1168 = ADD 0x40 V1166
0xd38: M[V1168] = V1156
0xd39: V1169 = M[0x40]
0xd3a: V1170 = 0x86abfce99b7dd908bec0169288797f85049ec73cbe046ed9de818fab3a497ae0
0xd5e: V1171 = SUB V1166 V1169
0xd5f: V1172 = 0x60
0xd61: V1173 = ADD 0x60 V1171
0xd63: LOG V1169 V1173 0x86abfce99b7dd908bec0169288797f85049ec73cbe046ed9de818fab3a497ae0
0xd69: JUMP S7
---
Entry stack: [V10, 0x78e, V375, V377, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V1118, V1124, S0]
Stack pops: 8
Stack additions: [S4]
Exit stack: [V10, 0x78e, V375, V377, S16, S15, S14, S13, S12, S11, S10, S9, S8, S4]

================================

Block 0xd6a
[0xd6a:0xd7a]
---
Predecessors: [0x2c5]
Successors: [0xd7b]
---
0xd6a JUMPDEST
0xd6b PUSH1 0x0
0xd6d SWAP6
0xd6e POP
0xd6f PUSH1 0x0
0xd71 SWAP5
0xd72 POP
0xd73 PUSH1 0x0
0xd75 SWAP4
0xd76 POP
0xd77 PUSH1 0x0
0xd79 SWAP3
0xd7a POP
---
0xd6a: JUMPDEST 
0xd6b: V1174 = 0x0
0xd6f: V1175 = 0x0
0xd73: V1176 = 0x0
0xd77: V1177 = 0x0
---
Entry stack: [V10, 0x78e, V108, V94, 0x0, V133, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [0x0, 0x0, 0x0, 0x0, S1, S0]
Exit stack: [V10, 0x78e, V108, V94, 0x0, V133, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xd7b
[0xd7b:0xd87]
---
Predecessors: [0xd6a, 0xe4b]
Successors: [0xd88, 0xe37]
---
0xd7b JUMPDEST
0xd7c PUSH1 0x6
0xd7e DUP8
0xd7f ADD
0xd80 SLOAD
0xd81 DUP4
0xd82 LT
0xd83 ISZERO
0xd84 PUSH2 0xe37
0xd87 JUMPI
---
0xd7b: JUMPDEST 
0xd7c: V1178 = 0x6
0xd7f: V1179 = ADD V133 0x6
0xd80: V1180 = S[V1179]
0xd82: V1181 = LT S2 V1180
0xd83: V1182 = ISZERO V1181
0xd84: V1183 = 0xe37
0xd87: JUMPI 0xe37 V1182
---
Entry stack: [V10, 0x78e, V108, V94, 0x0, V133, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V10, 0x78e, V108, V94, 0x0, V133, S5, S4, S3, S2, S1, S0]

================================

Block 0xd88
[0xd88:0xd96]
---
Predecessors: [0xd7b]
Successors: [0xd97]
---
0xd88 PUSH1 0x6
0xd8a DUP8
0xd8b ADD
0xd8c DUP1
0xd8d SLOAD
0xd8e DUP5
0xd8f SWAP1
0xd90 DUP2
0xd91 LT
0xd92 ISZERO
0xd93 PUSH2 0x2
0xd96 JUMPI
---
0xd88: V1184 = 0x6
0xd8b: V1185 = ADD V133 0x6
0xd8d: V1186 = S[V1185]
0xd91: V1187 = LT S2 V1186
0xd92: V1188 = ISZERO V1187
0xd93: V1189 = 0x2
0xd96: THROWI V1188
---
Entry stack: [V10, 0x78e, V108, V94, 0x0, V133, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, V1185, S2]
Exit stack: [V10, 0x78e, V108, V94, 0x0, V133, S5, S4, S3, S2, S1, S0, V1185, S2]

================================

Block 0xd97
[0xd97:0xe15]
---
Predecessors: [0xd88]
Successors: [0xe16]
---
0xd97 SWAP1
0xd98 PUSH1 0x0
0xd9a MSTORE
0xd9b PUSH1 0x20
0xd9d PUSH1 0x0
0xd9f SHA3
0xda0 SWAP1
0xda1 ADD
0xda2 PUSH1 0x0
0xda4 POP
0xda5 PUSH1 0x4
0xda7 DUP1
0xda8 SLOAD
0xda9 PUSH1 0x40
0xdab DUP1
0xdac MLOAD
0xdad DUP5
0xdae SLOAD
0xdaf PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0xdd0 DUP3
0xdd1 MSTORE
0xdd2 PUSH2 0x100
0xdd5 SWAP1
0xdd6 DIV
0xdd7 PUSH1 0x1
0xdd9 PUSH1 0xa0
0xddb PUSH1 0x2
0xddd EXP
0xdde SUB
0xddf SWAP1
0xde0 DUP2
0xde1 AND
0xde2 SWAP5
0xde3 DUP3
0xde4 ADD
0xde5 SWAP5
0xde6 SWAP1
0xde7 SWAP5
0xde8 MSTORE
0xde9 SWAP1
0xdea MLOAD
0xdeb SWAP4
0xdec SWAP6
0xded POP
0xdee SWAP2
0xdef AND
0xdf0 SWAP2
0xdf1 PUSH4 0x70a08231
0xdf6 SWAP2
0xdf7 PUSH1 0x24
0xdf9 DUP2
0xdfa DUP2
0xdfb ADD
0xdfc SWAP3
0xdfd PUSH1 0x20
0xdff SWAP3
0xe00 SWAP1
0xe01 SWAP2
0xe02 SWAP1
0xe03 DUP3
0xe04 SWAP1
0xe05 SUB
0xe06 ADD
0xe07 DUP2
0xe08 PUSH1 0x0
0xe0a DUP8
0xe0b PUSH2 0x61da
0xe0e GAS
0xe0f SUB
0xe10 CALL
0xe11 ISZERO
0xe12 PUSH2 0x2
0xe15 JUMPI
---
0xd98: V1190 = 0x0
0xd9a: M[0x0] = V1185
0xd9b: V1191 = 0x20
0xd9d: V1192 = 0x0
0xd9f: V1193 = SHA3 0x0 0x20
0xda1: V1194 = ADD S0 V1193
0xda2: V1195 = 0x0
0xda5: V1196 = 0x4
0xda8: V1197 = S[0x4]
0xda9: V1198 = 0x40
0xdac: V1199 = M[0x40]
0xdae: V1200 = S[V1194]
0xdaf: V1201 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xdd1: M[V1199] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xdd2: V1202 = 0x100
0xdd6: V1203 = DIV V1200 0x100
0xdd7: V1204 = 0x1
0xdd9: V1205 = 0xa0
0xddb: V1206 = 0x2
0xddd: V1207 = EXP 0x2 0xa0
0xdde: V1208 = SUB 0x10000000000000000000000000000000000000000 0x1
0xde1: V1209 = AND 0xffffffffffffffffffffffffffffffffffffffff V1203
0xde4: V1210 = ADD V1199 0x4
0xde8: M[V1210] = V1209
0xdea: V1211 = M[0x40]
0xdef: V1212 = AND 0xffffffffffffffffffffffffffffffffffffffff V1197
0xdf1: V1213 = 0x70a08231
0xdf7: V1214 = 0x24
0xdfb: V1215 = ADD 0x24 V1199
0xdfd: V1216 = 0x20
0xe05: V1217 = SUB V1199 V1211
0xe06: V1218 = ADD V1217 0x24
0xe08: V1219 = 0x0
0xe0b: V1220 = 0x61da
0xe0e: V1221 = GAS
0xe0f: V1222 = SUB V1221 0x61da
0xe10: V1223 = CALL V1222 V1212 0x0 V1211 V1218 V1211 0x20
0xe11: V1224 = ISZERO V1223
0xe12: V1225 = 0x2
0xe15: THROWI V1224
---
Entry stack: [V10, 0x78e, V108, V94, 0x0, V133, S7, S6, S5, S4, S3, S2, V1185, S0]
Stack pops: 4
Stack additions: [V1194, S2, V1212, 0x70a08231, V1215]
Exit stack: [V10, 0x78e, V108, V94, 0x0, V133, S7, S6, S5, S4, V1194, S2, V1212, 0x70a08231, V1215]

================================

Block 0xe16
[0xe16:0xe2e]
---
Predecessors: [0xd97]
Successors: [0xe2f, 0xe46]
---
0xe16 POP
0xe17 POP
0xe18 PUSH1 0x40
0xe1a MLOAD
0xe1b MLOAD
0xe1c DUP4
0xe1d SLOAD
0xe1e SWAP8
0xe1f DUP2
0xe20 ADD
0xe21 SWAP8
0xe22 SWAP1
0xe23 SWAP3
0xe24 POP
0xe25 PUSH1 0xff
0xe27 AND
0xe28 ISZERO
0xe29 SWAP1
0xe2a POP
0xe2b PUSH2 0xe46
0xe2e JUMPI
---
0xe18: V1226 = 0x40
0xe1a: V1227 = M[0x40]
0xe1b: V1228 = M[V1227]
0xe1d: V1229 = S[V1194]
0xe20: V1230 = ADD V1228 S8
0xe25: V1231 = 0xff
0xe27: V1232 = AND 0xff V1229
0xe28: V1233 = ISZERO V1232
0xe2b: V1234 = 0xe46
0xe2e: JUMPI 0xe46 V1233
---
Entry stack: [V10, 0x78e, V108, V94, 0x0, V133, S8, S7, S6, S5, V1194, S3, V1212, 0x70a08231, V1215]
Stack pops: 9
Stack additions: [V1230, S7, S6, S5, S4, V1228]
Exit stack: [V10, 0x78e, V108, V94, 0x0, V133, V1230, S7, S6, S5, V1194, V1228]

================================

Block 0xe2f
[0xe2f:0xe36]
---
Predecessors: [0xe16]
Successors: [0xe4b]
---
0xe2f SWAP4
0xe30 DUP5
0xe31 ADD
0xe32 SWAP4
0xe33 PUSH2 0xe4b
0xe36 JUMP
---
0xe31: V1235 = ADD V1228 S4
0xe33: V1236 = 0xe4b
0xe36: JUMP 0xe4b
---
Entry stack: [V10, 0x78e, V108, V94, 0x0, V133, V1230, S4, S3, S2, V1194, V1228]
Stack pops: 5
Stack additions: [V1235, S3, S2, S1, S0]
Exit stack: [V10, 0x78e, V108, V94, 0x0, V133, V1230, V1235, S3, S2, V1194, V1228]

================================

Block 0xe37
[0xe37:0xe41]
---
Predecessors: [0xd7b]
Successors: [0xe42, 0xe57]
---
0xe37 JUMPDEST
0xe38 PUSH1 0x1
0xe3a SLOAD
0xe3b DUP7
0xe3c LT
0xe3d ISZERO
0xe3e PUSH2 0xe57
0xe41 JUMPI
---
0xe37: JUMPDEST 
0xe38: V1237 = 0x1
0xe3a: V1238 = S[0x1]
0xe3c: V1239 = LT S5 V1238
0xe3d: V1240 = ISZERO V1239
0xe3e: V1241 = 0xe57
0xe41: JUMPI 0xe57 V1240
---
Entry stack: [V10, 0x78e, V108, V94, 0x0, V133, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V10, 0x78e, V108, V94, 0x0, V133, S5, S4, S3, S2, S1, S0]

================================

Block 0xe42
[0xe42:0xe45]
---
Predecessors: [0xe37]
Successors: []
---
0xe42 PUSH2 0x2
0xe45 JUMP
---
0xe42: V1242 = 0x2
0xe45: THROW 
---
Entry stack: [V10, 0x78e, V108, V94, 0x0, V133, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x78e, V108, V94, 0x0, V133, S5, S4, S3, S2, S1, S0]

================================

Block 0xe46
[0xe46:0xe4a]
---
Predecessors: [0xe16]
Successors: [0xe4b]
---
0xe46 JUMPDEST
0xe47 SWAP3
0xe48 DUP4
0xe49 ADD
0xe4a SWAP3
---
0xe46: JUMPDEST 
0xe49: V1243 = ADD V1228 S3
---
Entry stack: [V10, 0x78e, V108, V94, 0x0, V133, V1230, S4, S3, S2, V1194, V1228]
Stack pops: 4
Stack additions: [V1243, S2, S1, S0]
Exit stack: [V10, 0x78e, V108, V94, 0x0, V133, V1230, S4, V1243, S2, V1194, V1228]

================================

Block 0xe4b
[0xe4b:0xe56]
---
Predecessors: [0xe2f, 0xe46]
Successors: [0xd7b]
---
0xe4b JUMPDEST
0xe4c PUSH1 0x1
0xe4e SWAP3
0xe4f SWAP1
0xe50 SWAP3
0xe51 ADD
0xe52 SWAP2
0xe53 PUSH2 0xd7b
0xe56 JUMP
---
0xe4b: JUMPDEST 
0xe4c: V1244 = 0x1
0xe51: V1245 = ADD 0x1 S2
0xe53: V1246 = 0xd7b
0xe56: JUMP 0xd7b
---
Entry stack: [V10, 0x78e, V108, V94, 0x0, V133, V1230, S4, S3, S2, V1194, V1228]
Stack pops: 3
Stack additions: [V1245, S1, S0]
Exit stack: [V10, 0x78e, V108, V94, 0x0, V133, V1230, S4, S3, V1245, V1194, V1228]

================================

Block 0xe57
[0xe57:0xe5f]
---
Predecessors: [0xe37]
Successors: [0xe60, 0xf0c]
---
0xe57 JUMPDEST
0xe58 DUP4
0xe59 DUP6
0xe5a GT
0xe5b ISZERO
0xe5c PUSH2 0xf0c
0xe5f JUMPI
---
0xe57: JUMPDEST 
0xe5a: V1247 = GT S4 S3
0xe5b: V1248 = ISZERO V1247
0xe5c: V1249 = 0xf0c
0xe5f: JUMPI 0xf0c V1248
---
Entry stack: [V10, 0x78e, V108, V94, 0x0, V133, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V10, 0x78e, V108, V94, 0x0, V133, S5, S4, S3, S2, S1, S0]

================================

Block 0xe60
[0xe60:0xebc]
---
Predecessors: [0xe57]
Successors: [0xebd, 0xed6]
---
0xe60 DUP7
0xe61 PUSH1 0x0
0xe63 ADD
0xe64 PUSH1 0x0
0xe66 SWAP1
0xe67 SLOAD
0xe68 SWAP1
0xe69 PUSH2 0x100
0xe6c EXP
0xe6d SWAP1
0xe6e DIV
0xe6f PUSH1 0x1
0xe71 PUSH1 0xa0
0xe73 PUSH1 0x2
0xe75 EXP
0xe76 SUB
0xe77 AND
0xe78 PUSH1 0x1
0xe7a PUSH1 0xa0
0xe7c PUSH1 0x2
0xe7e EXP
0xe7f SUB
0xe80 AND
0xe81 DUP8
0xe82 PUSH1 0x1
0xe84 ADD
0xe85 PUSH1 0x0
0xe87 POP
0xe88 SLOAD
0xe89 DUP11
0xe8a PUSH1 0x40
0xe8c MLOAD
0xe8d DUP1
0xe8e DUP3
0xe8f DUP1
0xe90 MLOAD
0xe91 SWAP1
0xe92 PUSH1 0x20
0xe94 ADD
0xe95 SWAP1
0xe96 DUP1
0xe97 DUP4
0xe98 DUP4
0xe99 DUP3
0xe9a SWAP1
0xe9b PUSH1 0x0
0xe9d PUSH1 0x4
0xe9f PUSH1 0x20
0xea1 DUP5
0xea2 PUSH1 0x1f
0xea4 ADD
0xea5 DIV
0xea6 PUSH1 0xf
0xea8 MUL
0xea9 PUSH1 0x3
0xeab ADD
0xeac CALL
0xead POP
0xeae SWAP1
0xeaf POP
0xeb0 SWAP1
0xeb1 DUP2
0xeb2 ADD
0xeb3 SWAP1
0xeb4 PUSH1 0x1f
0xeb6 AND
0xeb7 DUP1
0xeb8 ISZERO
0xeb9 PUSH2 0xed6
0xebc JUMPI
---
0xe61: V1250 = 0x0
0xe63: V1251 = ADD 0x0 V133
0xe64: V1252 = 0x0
0xe67: V1253 = S[V1251]
0xe69: V1254 = 0x100
0xe6c: V1255 = EXP 0x100 0x0
0xe6e: V1256 = DIV V1253 0x1
0xe6f: V1257 = 0x1
0xe71: V1258 = 0xa0
0xe73: V1259 = 0x2
0xe75: V1260 = EXP 0x2 0xa0
0xe76: V1261 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe77: V1262 = AND 0xffffffffffffffffffffffffffffffffffffffff V1256
0xe78: V1263 = 0x1
0xe7a: V1264 = 0xa0
0xe7c: V1265 = 0x2
0xe7e: V1266 = EXP 0x2 0xa0
0xe7f: V1267 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe80: V1268 = AND 0xffffffffffffffffffffffffffffffffffffffff V1262
0xe82: V1269 = 0x1
0xe84: V1270 = ADD 0x1 V133
0xe85: V1271 = 0x0
0xe88: V1272 = S[V1270]
0xe8a: V1273 = 0x40
0xe8c: V1274 = M[0x40]
0xe90: V1275 = M[V94]
0xe92: V1276 = 0x20
0xe94: V1277 = ADD 0x20 V94
0xe9b: V1278 = 0x0
0xe9d: V1279 = 0x4
0xe9f: V1280 = 0x20
0xea2: V1281 = 0x1f
0xea4: V1282 = ADD 0x1f V1275
0xea5: V1283 = DIV V1282 0x20
0xea6: V1284 = 0xf
0xea8: V1285 = MUL 0xf V1283
0xea9: V1286 = 0x3
0xeab: V1287 = ADD 0x3 V1285
0xeac: V1288 = CALL V1287 0x4 0x0 V1277 V1275 V1274 V1275
0xeb2: V1289 = ADD V1275 V1274
0xeb4: V1290 = 0x1f
0xeb6: V1291 = AND 0x1f V1275
0xeb8: V1292 = ISZERO V1291
0xeb9: V1293 = 0xed6
0xebc: JUMPI 0xed6 V1292
---
Entry stack: [V10, 0x78e, V108, V94, 0x0, V133, S5, S4, S3, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S1, S0, V1268, V1272, S8, V1274, V1289, V1291]
Exit stack: [V10, 0x78e, V108, V94, 0x0, V133, S5, S4, S3, S2, S1, S0, V1268, V1272, V94, V1274, V1289, V1291]

================================

Block 0xebd
[0xebd:0xed5]
---
Predecessors: [0xe60]
Successors: [0xed6]
---
0xebd DUP1
0xebe DUP3
0xebf SUB
0xec0 DUP1
0xec1 MLOAD
0xec2 PUSH1 0x1
0xec4 DUP4
0xec5 PUSH1 0x20
0xec7 SUB
0xec8 PUSH2 0x100
0xecb EXP
0xecc SUB
0xecd NOT
0xece AND
0xecf DUP2
0xed0 MSTORE
0xed1 PUSH1 0x20
0xed3 ADD
0xed4 SWAP2
0xed5 POP
---
0xebf: V1294 = SUB V1289 V1291
0xec1: V1295 = M[V1294]
0xec2: V1296 = 0x1
0xec5: V1297 = 0x20
0xec7: V1298 = SUB 0x20 V1291
0xec8: V1299 = 0x100
0xecb: V1300 = EXP 0x100 V1298
0xecc: V1301 = SUB V1300 0x1
0xecd: V1302 = NOT V1301
0xece: V1303 = AND V1302 V1295
0xed0: M[V1294] = V1303
0xed1: V1304 = 0x20
0xed3: V1305 = ADD 0x20 V1294
---
Entry stack: [V10, 0x78e, V108, V94, 0x0, V133, S11, S10, S9, S8, S7, S6, V1268, V1272, V94, V1274, V1289, V1291]
Stack pops: 2
Stack additions: [V1305, S0]
Exit stack: [V10, 0x78e, V108, V94, 0x0, V133, S11, S10, S9, S8, S7, S6, V1268, V1272, V94, V1274, V1305, V1291]

================================

Block 0xed6
[0xed6:0xf0b]
---
Predecessors: [0xe60, 0xebd]
Successors: [0xf21]
---
0xed6 JUMPDEST
0xed7 POP
0xed8 SWAP2
0xed9 POP
0xeda POP
0xedb PUSH1 0x0
0xedd PUSH1 0x40
0xedf MLOAD
0xee0 DUP1
0xee1 DUP4
0xee2 SUB
0xee3 DUP2
0xee4 DUP6
0xee5 DUP8
0xee6 PUSH2 0x8502
0xee9 GAS
0xeea SUB
0xeeb CALL
0xeec POP
0xeed POP
0xeee POP
0xeef POP
0xef0 PUSH1 0x5
0xef2 DUP8
0xef3 ADD
0xef4 DUP1
0xef5 SLOAD
0xef6 PUSH1 0xff
0xef8 NOT
0xef9 AND
0xefa PUSH1 0x1
0xefc OR
0xefd PUSH2 0xff00
0xf00 NOT
0xf01 AND
0xf02 PUSH2 0x100
0xf05 OR
0xf06 SWAP1
0xf07 SSTORE
0xf08 PUSH2 0xf21
0xf0b JUMP
---
0xed6: JUMPDEST 
0xedb: V1306 = 0x0
0xedd: V1307 = 0x40
0xedf: V1308 = M[0x40]
0xee2: V1309 = SUB S1 V1308
0xee6: V1310 = 0x8502
0xee9: V1311 = GAS
0xeea: V1312 = SUB V1311 0x8502
0xeeb: V1313 = CALL V1312 V1268 V1272 V1308 V1309 V1308 0x0
0xef0: V1314 = 0x5
0xef3: V1315 = ADD V133 0x5
0xef5: V1316 = S[V1315]
0xef6: V1317 = 0xff
0xef8: V1318 = NOT 0xff
0xef9: V1319 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1316
0xefa: V1320 = 0x1
0xefc: V1321 = OR 0x1 V1319
0xefd: V1322 = 0xff00
0xf00: V1323 = NOT 0xff00
0xf01: V1324 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V1321
0xf02: V1325 = 0x100
0xf05: V1326 = OR 0x100 V1324
0xf07: S[V1315] = V1326
0xf08: V1327 = 0xf21
0xf0b: JUMP 0xf21
---
Entry stack: [V10, 0x78e, V108, V94, 0x0, V133, S11, S10, S9, S8, S7, S6, V1268, V1272, V94, V1274, S1, V1291]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6]
Exit stack: [V10, 0x78e, V108, V94, 0x0, V133, S11, S10, S9, S8, S7, S6]

================================

Block 0xf0c
[0xf0c:0xf20]
---
Predecessors: [0xe57]
Successors: [0xf21]
---
0xf0c JUMPDEST
0xf0d PUSH1 0x5
0xf0f DUP8
0xf10 ADD
0xf11 DUP1
0xf12 SLOAD
0xf13 PUSH1 0xff
0xf15 NOT
0xf16 AND
0xf17 PUSH1 0x1
0xf19 OR
0xf1a PUSH2 0xff00
0xf1d NOT
0xf1e AND
0xf1f SWAP1
0xf20 SSTORE
---
0xf0c: JUMPDEST 
0xf0d: V1328 = 0x5
0xf10: V1329 = ADD V133 0x5
0xf12: V1330 = S[V1329]
0xf13: V1331 = 0xff
0xf15: V1332 = NOT 0xff
0xf16: V1333 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1330
0xf17: V1334 = 0x1
0xf19: V1335 = OR 0x1 V1333
0xf1a: V1336 = 0xff00
0xf1d: V1337 = NOT 0xff00
0xf1e: V1338 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V1335
0xf20: S[V1329] = V1338
---
Entry stack: [V10, 0x78e, V108, V94, 0x0, V133, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V10, 0x78e, V108, V94, 0x0, V133, S5, S4, S3, S2, S1, S0]

================================

Block 0xf21
[0xf21:0xf7f]
---
Predecessors: [0xed6, 0xf0c]
Successors: [0x78e]
---
0xf21 JUMPDEST
0xf22 PUSH1 0x5
0xf24 DUP8
0xf25 ADD
0xf26 SLOAD
0xf27 PUSH1 0x40
0xf29 DUP1
0xf2a MLOAD
0xf2b DUP13
0xf2c DUP2
0xf2d MSTORE
0xf2e PUSH1 0x20
0xf30 DUP2
0xf31 ADD
0xf32 DUP9
0xf33 SWAP1
0xf34 MSTORE
0xf35 DUP1
0xf36 DUP3
0xf37 ADD
0xf38 DUP8
0xf39 SWAP1
0xf3a MSTORE
0xf3b PUSH2 0x100
0xf3e SWAP1
0xf3f SWAP3
0xf40 DIV
0xf41 PUSH1 0xff
0xf43 AND
0xf44 PUSH1 0x60
0xf46 DUP4
0xf47 ADD
0xf48 MSTORE
0xf49 MLOAD
0xf4a PUSH32 0x4bdc4ffee1d0e901f1c0270e9917651a82a81a109b5736b546a1b26668c55c0e
0xf6b SWAP2
0xf6c DUP2
0xf6d SWAP1
0xf6e SUB
0xf6f PUSH1 0x80
0xf71 ADD
0xf72 SWAP1
0xf73 LOG1
0xf74 POP
0xf75 POP
0xf76 POP
0xf77 POP
0xf78 POP
0xf79 POP
0xf7a POP
0xf7b SWAP3
0xf7c SWAP2
0xf7d POP
0xf7e POP
0xf7f JUMP
---
0xf21: JUMPDEST 
0xf22: V1339 = 0x5
0xf25: V1340 = ADD V133 0x5
0xf26: V1341 = S[V1340]
0xf27: V1342 = 0x40
0xf2a: V1343 = M[0x40]
0xf2d: M[V1343] = V108
0xf2e: V1344 = 0x20
0xf31: V1345 = ADD V1343 0x20
0xf34: M[V1345] = S4
0xf37: V1346 = ADD 0x40 V1343
0xf3a: M[V1346] = S3
0xf3b: V1347 = 0x100
0xf40: V1348 = DIV V1341 0x100
0xf41: V1349 = 0xff
0xf43: V1350 = AND 0xff V1348
0xf44: V1351 = 0x60
0xf47: V1352 = ADD V1343 0x60
0xf48: M[V1352] = V1350
0xf49: V1353 = M[0x40]
0xf4a: V1354 = 0x4bdc4ffee1d0e901f1c0270e9917651a82a81a109b5736b546a1b26668c55c0e
0xf6e: V1355 = SUB V1343 V1353
0xf6f: V1356 = 0x80
0xf71: V1357 = ADD 0x80 V1355
0xf73: LOG V1353 V1357 0x4bdc4ffee1d0e901f1c0270e9917651a82a81a109b5736b546a1b26668c55c0e
0xf7f: JUMP 0x78e
---
Entry stack: [V10, 0x78e, V108, V94, 0x0, V133, S5, S4, S3, S2, S1, S0]
Stack pops: 11
Stack additions: [S7]
Exit stack: [V10, 0x0]

================================

Block 0xf80
[0xf80:0xf81]
---
Predecessors: []
Successors: [0xf82]
Has unresolved jump.
---
0xf80 MISSING 0xc2
0xf81 JUMPI
---
0xf80: MISSING 0xc2
0xf81: JUMPI S0 S1
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xf82
[0xf82:0xfac]
---
Predecessors: [0xf80]
Successors: []
---
0xf82 GAS
0xf83 MISSING 0xe
0xf84 SWAP15
0xf85 MSIZE
0xf86 EXTCODECOPY
0xf87 STOP
0xf88 MISSING 0xf9
0xf89 MSIZE
0xf8a MISSING 0xf8
0xf8b MISSING 0xc9
0xf8c MISSING 0x2f
0xf8d SLT
0xf8e MISSING 0xdb
0xf8f MISSING 0x28
0xf90 PUSH10 0xc3395a3b0502d05e2516
0xf9b DIFFICULTY
0xf9c PUSH16 0x71f85b
---
0xf82: V1358 = GAS
0xf83: MISSING 0xe
0xf85: V1359 = MSIZE
0xf86: EXTCODECOPY V1359 S15 S1 S2
0xf87: STOP 
0xf88: MISSING 0xf9
0xf89: V1360 = MSIZE
0xf8a: MISSING 0xf8
0xf8b: MISSING 0xc9
0xf8c: MISSING 0x2f
0xf8d: V1361 = SLT S0 S1
0xf8e: MISSING 0xdb
0xf8f: MISSING 0x28
0xf90: V1362 = 0xc3395a3b0502d05e2516
0xf9b: V1363 = DIFFICULTY
0xf9c: V1364 = 0x71f85b
---
Entry stack: []
Stack pops: 0
Stack additions: [V1358, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S0, V1360, V1361, 0x71f85b, V1363, 0xc3395a3b0502d05e2516]
Exit stack: []

================================

Function 0:
Public function signature: 0x13cf08b
Entry block: 0xa5
Exit block: 0x779
Body: 0xa5, 0xb9, 0x6cc, 0x733, 0x73b, 0x74e, 0x75c, 0x770, 0x779

Function 1:
Public function signature: 0x237e9492
Entry block: 0x1aa
Exit block: 0x78e
Body: 0x1aa, 0x213, 0x23b, 0x244, 0x24a, 0x2c5, 0x2cb, 0x78e, 0xd6a, 0xd7b, 0xd88, 0xd97, 0xe16, 0xe2f, 0xe37, 0xe42, 0xe46, 0xe4b, 0xe57, 0xe60, 0xebd, 0xed6, 0xf0c, 0xf21

Function 2:
Public function signature: 0x2783ebda
Entry block: 0x2cf
Exit block: 0x78e
Body: 0x2cf, 0x78e

Function 3:
Public function signature: 0x27ebcf0e
Entry block: 0x2d8
Exit block: 0x7a0
Body: 0x2d8, 0x7a0

Function 4:
Public function signature: 0x3f5a0bdd
Entry block: 0x2ea
Exit block: 0x7f2
Body: 0x2ea, 0x308, 0x7d2, 0x7e5, 0x7f2

Function 5:
Public function signature: 0x52091047
Entry block: 0x30c
Exit block: 0xa3
Body: 0xa3, 0x30c, 0x330, 0x7fe, 0x808, 0x841, 0x84b, 0x851, 0x855

Function 6:
Public function signature: 0x69bd3436
Entry block: 0x334
Exit block: 0x78e
Body: 0x334, 0x78e

Function 7:
Public function signature: 0x83876bc9
Entry block: 0x33d
Exit block: 0x78e
Body: 0x33d, 0x78e

Function 8:
Public function signature: 0x8da5cb5b
Entry block: 0x43f
Exit block: 0x7a0
Body: 0x43f, 0x7a0

Function 9:
Public function signature: 0xb9f256cd
Entry block: 0x451
Exit block: 0x78e
Body: 0x451, 0x53d, 0x54c, 0x78e, 0x8c1, 0x8d7

Function 10:
Public function signature: 0xc9d27afe
Entry block: 0x550
Exit block: 0x78e
Body: 0x550, 0x5bc, 0x5cb, 0x78e, 0x8d7, 0xc0d, 0xc1b, 0xc5e, 0xc62, 0xc7d, 0xc93

Function 11:
Public function signature: 0xeceb2945
Entry block: 0x5cf
Exit block: 0x78e
Body: 0x5cf, 0x630, 0x78e

Function 12:
Public function signature: 0xf2fde38b
Entry block: 0x6ab
Exit block: 0xa3
Body: 0xa3, 0x6ab, 0x6c8, 0x7bd

Function 13:
Public fallback function
Entry block: 0xa3
Exit block: 0xa3
Body: 0xa3

Function 14:
Private function
Entry block: 0xb7f
Exit block: 0xbd9
Body: 0xa00, 0xa15, 0xae6, 0xaf2, 0xaf2, 0xaf2, 0xafe, 0xb04, 0xb0d, 0xb4e, 0xb4f, 0xb4f, 0xb7f, 0xb88, 0xbab, 0xbd9, 0xbdd, 0xbec, 0xbef, 0xbf8

Function 15:
Private function
Entry block: 0xbc5
Exit block: 0xbd9
Body: 0x8e0, 0xa00, 0xa15, 0xae6, 0xaf2, 0xaf2, 0xaf2, 0xafe, 0xb04, 0xb0d, 0xb4e, 0xb4f, 0xb7f, 0xb88, 0xbab, 0xbc5, 0xbce, 0xbd9, 0xbdd, 0xbec, 0xbef, 0xbf8

Function 16:
Private function
Entry block: 0x3c9
Exit block: 0xcc0
Body: 0x3c9, 0x42c, 0x8e0, 0x996, 0x9af, 0x9c0, 0x9c9, 0x9e2, 0xa00, 0xa15, 0xae6, 0xaf2, 0xaf2, 0xaf2, 0xafe, 0xb04, 0xb0d, 0xb4e, 0xb4f, 0xb4f, 0xb4f, 0xb7f, 0xb88, 0xbab, 0xbd9, 0xbdd, 0xbec, 0xbef, 0xbf8, 0xc93, 0xcc0

