Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x6c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x6c
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x6c
0xa: JUMPI 0x6c V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x77]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x13af4035
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x77
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x13af4035
0x1a: V12 = EQ V10 0x13af4035
0x1b: V13 = 0x77
0x1e: JUMPI 0x77 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0xac]
---
0x1f DUP1
0x20 PUSH4 0x35c1d349
0x25 EQ
0x26 PUSH2 0xac
0x29 JUMPI
---
0x20: V14 = 0x35c1d349
0x25: V15 = EQ 0x35c1d349 V10
0x26: V16 = 0xac
0x29: JUMPI 0xac V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0xfb]
---
0x2a DUP1
0x2b PUSH4 0x8da5cb5b
0x30 EQ
0x31 PUSH2 0xfb
0x34 JUMPI
---
0x2b: V17 = 0x8da5cb5b
0x30: V18 = EQ 0x8da5cb5b V10
0x31: V19 = 0xfb
0x34: JUMPI 0xfb V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0x10d]
---
0x35 DUP1
0x36 PUSH4 0x9003adfe
0x3b EQ
0x3c PUSH2 0x10d
0x3f JUMPI
---
0x36: V20 = 0x9003adfe
0x3b: V21 = EQ 0x9003adfe V10
0x3c: V22 = 0x10d
0x3f: JUMPI 0x10d V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x116]
---
0x40 DUP1
0x41 PUSH4 0xa60f3588
0x46 EQ
0x47 PUSH2 0x116
0x4a JUMPI
---
0x41: V23 = 0xa60f3588
0x46: V24 = EQ 0xa60f3588 V10
0x47: V25 = 0x116
0x4a: JUMPI 0x116 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x11f]
---
0x4b DUP1
0x4c PUSH4 0xb69ef8a8
0x51 EQ
0x52 PUSH2 0x11f
0x55 JUMPI
---
0x4c: V26 = 0xb69ef8a8
0x51: V27 = EQ 0xb69ef8a8 V10
0x52: V28 = 0x11f
0x55: JUMPI 0x11f V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x128]
---
0x56 DUP1
0x57 PUSH4 0xc8796572
0x5c EQ
0x5d PUSH2 0x128
0x60 JUMPI
---
0x57: V29 = 0xc8796572
0x5c: V30 = EQ 0xc8796572 V10
0x5d: V31 = 0x128
0x60: JUMPI 0x128 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x152]
---
0x61 DUP1
0x62 PUSH4 0xe97dcb62
0x67 EQ
0x68 PUSH2 0x152
0x6b JUMPI
---
0x62: V32 = 0xe97dcb62
0x67: V33 = EQ 0xe97dcb62 V10
0x68: V34 = 0x152
0x6b: JUMPI 0x152 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x0, 0x61]
Successors: [0x156]
---
0x6c JUMPDEST
0x6d PUSH2 0x190
0x70 PUSH2 0x150
0x73 PUSH2 0x156
0x76 JUMP
---
0x6c: JUMPDEST 
0x6d: V35 = 0x190
0x70: V36 = 0x150
0x73: V37 = 0x156
0x76: JUMP 0x156
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x190, 0x150]
Exit stack: [V10, 0x190, 0x150]

================================

Block 0x77
[0x77:0x96]
---
Predecessors: [0xb]
Successors: [0x97, 0xa9]
---
0x77 JUMPDEST
0x78 PUSH2 0x190
0x7b PUSH1 0x4
0x7d CALLDATALOAD
0x7e PUSH1 0x4
0x80 SLOAD
0x81 PUSH1 0x1
0x83 PUSH1 0xa0
0x85 PUSH1 0x2
0x87 EXP
0x88 SUB
0x89 SWAP1
0x8a DUP2
0x8b AND
0x8c CALLER
0x8d SWAP2
0x8e SWAP1
0x8f SWAP2
0x90 AND
0x91 EQ
0x92 ISZERO
0x93 PUSH2 0xa9
0x96 JUMPI
---
0x77: JUMPDEST 
0x78: V38 = 0x190
0x7b: V39 = 0x4
0x7d: V40 = CALLDATALOAD 0x4
0x7e: V41 = 0x4
0x80: V42 = S[0x4]
0x81: V43 = 0x1
0x83: V44 = 0xa0
0x85: V45 = 0x2
0x87: V46 = EXP 0x2 0xa0
0x88: V47 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8b: V48 = AND 0xffffffffffffffffffffffffffffffffffffffff V42
0x8c: V49 = CALLER
0x90: V50 = AND V49 0xffffffffffffffffffffffffffffffffffffffff
0x91: V51 = EQ V50 V48
0x92: V52 = ISZERO V51
0x93: V53 = 0xa9
0x96: JUMPI 0xa9 V52
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x190, V40]
Exit stack: [V10, 0x190, V40]

================================

Block 0x97
[0x97:0xa8]
---
Predecessors: [0x77]
Successors: [0xa9]
---
0x97 PUSH1 0x4
0x99 DUP1
0x9a SLOAD
0x9b PUSH1 0x1
0x9d PUSH1 0xa0
0x9f PUSH1 0x2
0xa1 EXP
0xa2 SUB
0xa3 NOT
0xa4 AND
0xa5 DUP3
0xa6 OR
0xa7 SWAP1
0xa8 SSTORE
---
0x97: V54 = 0x4
0x9a: V55 = S[0x4]
0x9b: V56 = 0x1
0x9d: V57 = 0xa0
0x9f: V58 = 0x2
0xa1: V59 = EXP 0x2 0xa0
0xa2: V60 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa3: V61 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xa4: V62 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V55
0xa6: V63 = OR V40 V62
0xa8: S[0x4] = V63
---
Entry stack: [V10, 0x190, V40]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x190, V40]

================================

Block 0xa9
[0xa9:0xab]
---
Predecessors: [0x77, 0x97]
Successors: [0x190]
---
0xa9 JUMPDEST
0xaa POP
0xab JUMP
---
0xa9: JUMPDEST 
0xab: JUMP 0x190
---
Entry stack: [V10, 0x190, V40]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0xac
[0xac:0xbf]
---
Predecessors: [0x1f]
Successors: [0xc0]
---
0xac JUMPDEST
0xad PUSH2 0x192
0xb0 PUSH1 0x4
0xb2 CALLDATALOAD
0xb3 PUSH1 0x0
0xb5 DUP1
0xb6 SLOAD
0xb7 DUP3
0xb8 SWAP1
0xb9 DUP2
0xba LT
0xbb ISZERO
0xbc PUSH2 0x2
0xbf JUMPI
---
0xac: JUMPDEST 
0xad: V64 = 0x192
0xb0: V65 = 0x4
0xb2: V66 = CALLDATALOAD 0x4
0xb3: V67 = 0x0
0xb6: V68 = S[0x0]
0xba: V69 = LT V66 V68
0xbb: V70 = ISZERO V69
0xbc: V71 = 0x2
0xbf: THROWI V70
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x192, V66, 0x0, V66]
Exit stack: [V10, 0x192, V66, 0x0, V66]

================================

Block 0xc0
[0xc0:0xfa]
---
Predecessors: [0xac]
Successors: [0x192]
---
0xc0 POP
0xc1 DUP1
0xc2 MSTORE
0xc3 PUSH1 0x2
0xc5 MUL
0xc6 PUSH1 0x0
0xc8 DUP1
0xc9 MLOAD
0xca PUSH1 0x20
0xcc PUSH2 0x43f
0xcf DUP4
0xd0 CODECOPY
0xd1 DUP2
0xd2 MLOAD
0xd3 SWAP2
0xd4 MSTORE
0xd5 DUP2
0xd6 ADD
0xd7 SLOAD
0xd8 PUSH1 0x0
0xda DUP1
0xdb MLOAD
0xdc PUSH1 0x20
0xde PUSH2 0x45f
0xe1 DUP4
0xe2 CODECOPY
0xe3 DUP2
0xe4 MLOAD
0xe5 SWAP2
0xe6 MSTORE
0xe7 SWAP2
0xe8 SWAP1
0xe9 SWAP2
0xea ADD
0xeb SLOAD
0xec PUSH1 0x1
0xee PUSH1 0xa0
0xf0 PUSH1 0x2
0xf2 EXP
0xf3 SUB
0xf4 SWAP2
0xf5 SWAP1
0xf6 SWAP2
0xf7 AND
0xf8 SWAP1
0xf9 DUP3
0xfa JUMP
---
0xc2: M[0x0] = 0x0
0xc3: V72 = 0x2
0xc5: V73 = MUL 0x2 V66
0xc6: V74 = 0x0
0xc9: V75 = M[0x0]
0xca: V76 = 0x20
0xcc: V77 = 0x43f
0xd0: CODECOPY 0x0 0x43f 0x20
0xd2: V78 = M[0x0]
0xd4: M[0x0] = V75
0xd6: V79 = ADD V73 V78
0xd7: V80 = S[V79]
0xd8: V81 = 0x0
0xdb: V82 = M[0x0]
0xdc: V83 = 0x20
0xde: V84 = 0x45f
0xe2: CODECOPY 0x0 0x45f 0x20
0xe4: V85 = M[0x0]
0xe6: M[0x0] = V82
0xea: V86 = ADD V85 V73
0xeb: V87 = S[V86]
0xec: V88 = 0x1
0xee: V89 = 0xa0
0xf0: V90 = 0x2
0xf2: V91 = EXP 0x2 0xa0
0xf3: V92 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf7: V93 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0xfa: JUMP 0x192
---
Entry stack: [V10, 0x192, V66, 0x0, V66]
Stack pops: 4
Stack additions: [S3, V93, V87]
Exit stack: [V10, 0x192, V93, V87]

================================

Block 0xfb
[0xfb:0x10c]
---
Predecessors: [0x2a]
Successors: [0x1b8]
---
0xfb JUMPDEST
0xfc PUSH2 0x1b8
0xff PUSH1 0x4
0x101 SLOAD
0x102 PUSH1 0x1
0x104 PUSH1 0xa0
0x106 PUSH1 0x2
0x108 EXP
0x109 SUB
0x10a AND
0x10b DUP2
0x10c JUMP
---
0xfb: JUMPDEST 
0xfc: V94 = 0x1b8
0xff: V95 = 0x4
0x101: V96 = S[0x4]
0x102: V97 = 0x1
0x104: V98 = 0xa0
0x106: V99 = 0x2
0x108: V100 = EXP 0x2 0xa0
0x109: V101 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10a: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x10c: JUMP 0x1b8
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b8, V102]
Exit stack: [V10, 0x1b8, V102]

================================

Block 0x10d
[0x10d:0x115]
---
Predecessors: [0x35]
Successors: [0x1d5]
---
0x10d JUMPDEST
0x10e PUSH2 0x1d5
0x111 PUSH1 0x2
0x113 SLOAD
0x114 DUP2
0x115 JUMP
---
0x10d: JUMPDEST 
0x10e: V103 = 0x1d5
0x111: V104 = 0x2
0x113: V105 = S[0x2]
0x115: JUMP 0x1d5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d5, V105]
Exit stack: [V10, 0x1d5, V105]

================================

Block 0x116
[0x116:0x11e]
---
Predecessors: [0x40]
Successors: [0x1d5]
---
0x116 JUMPDEST
0x117 PUSH2 0x1d5
0x11a PUSH1 0x1
0x11c SLOAD
0x11d DUP2
0x11e JUMP
---
0x116: JUMPDEST 
0x117: V106 = 0x1d5
0x11a: V107 = 0x1
0x11c: V108 = S[0x1]
0x11e: JUMP 0x1d5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d5, V108]
Exit stack: [V10, 0x1d5, V108]

================================

Block 0x11f
[0x11f:0x127]
---
Predecessors: [0x4b]
Successors: [0x1d5]
---
0x11f JUMPDEST
0x120 PUSH2 0x1d5
0x123 PUSH1 0x3
0x125 SLOAD
0x126 DUP2
0x127 JUMP
---
0x11f: JUMPDEST 
0x120: V109 = 0x1d5
0x123: V110 = 0x3
0x125: V111 = S[0x3]
0x127: JUMP 0x1d5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d5, V111]
Exit stack: [V10, 0x1d5, V111]

================================

Block 0x128
[0x128:0x144]
---
Predecessors: [0x56]
Successors: [0x145, 0x150]
---
0x128 JUMPDEST
0x129 PUSH2 0x190
0x12c PUSH1 0x4
0x12e SLOAD
0x12f PUSH1 0x1
0x131 PUSH1 0xa0
0x133 PUSH1 0x2
0x135 EXP
0x136 SUB
0x137 SWAP1
0x138 DUP2
0x139 AND
0x13a CALLER
0x13b SWAP2
0x13c SWAP1
0x13d SWAP2
0x13e AND
0x13f EQ
0x140 ISZERO
0x141 PUSH2 0x150
0x144 JUMPI
---
0x128: JUMPDEST 
0x129: V112 = 0x190
0x12c: V113 = 0x4
0x12e: V114 = S[0x4]
0x12f: V115 = 0x1
0x131: V116 = 0xa0
0x133: V117 = 0x2
0x135: V118 = EXP 0x2 0xa0
0x136: V119 = SUB 0x10000000000000000000000000000000000000000 0x1
0x139: V120 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x13a: V121 = CALLER
0x13e: V122 = AND V121 0xffffffffffffffffffffffffffffffffffffffff
0x13f: V123 = EQ V122 V120
0x140: V124 = ISZERO V123
0x141: V125 = 0x150
0x144: JUMPI 0x150 V124
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x190]
Exit stack: [V10, 0x190]

================================

Block 0x145
[0x145:0x14f]
---
Predecessors: [0x128]
Successors: [0x150, 0x1e7]
---
0x145 PUSH1 0x2
0x147 SLOAD
0x148 PUSH1 0x0
0x14a EQ
0x14b ISZERO
0x14c PUSH2 0x1e7
0x14f JUMPI
---
0x145: V126 = 0x2
0x147: V127 = S[0x2]
0x148: V128 = 0x0
0x14a: V129 = EQ 0x0 V127
0x14b: V130 = ISZERO V129
0x14c: V131 = 0x1e7
0x14f: JUMPI 0x1e7 V130
---
Entry stack: [V10, 0x190]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x190]

================================

Block 0x150
[0x150:0x151]
---
Predecessors: [0x128, 0x145, 0x18b]
Successors: [0x190]
---
0x150 JUMPDEST
0x151 JUMP
---
0x150: JUMPDEST 
0x151: JUMP S0
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x152
[0x152:0x155]
---
Predecessors: [0x61]
Successors: [0x156]
---
0x152 JUMPDEST
0x153 PUSH2 0x190
---
0x152: JUMPDEST 
0x153: V132 = 0x190
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x190]
Exit stack: [V10, 0x190]

================================

Block 0x156
[0x156:0x16b]
---
Predecessors: [0x6c, 0x152]
Successors: [0x16c, 0x212]
---
0x156 JUMPDEST
0x157 PUSH1 0x0
0x159 PUSH1 0x0
0x15b PUSH1 0x0
0x15d PUSH7 0x2386f26fc10000
0x165 CALLVALUE
0x166 LT
0x167 ISZERO
0x168 PUSH2 0x212
0x16b JUMPI
---
0x156: JUMPDEST 
0x157: V133 = 0x0
0x159: V134 = 0x0
0x15b: V135 = 0x0
0x15d: V136 = 0x2386f26fc10000
0x165: V137 = CALLVALUE
0x166: V138 = LT V137 0x2386f26fc10000
0x167: V139 = ISZERO V138
0x168: V140 = 0x212
0x16b: JUMPI 0x212 V139
---
Entry stack: [V10, S1, {0x150, 0x190}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V10, S1, {0x150, 0x190}, 0x0, 0x0, 0x0]

================================

Block 0x16c
[0x16c:0x18a]
---
Predecessors: [0x156]
Successors: [0x18b]
---
0x16c PUSH1 0x40
0x16e MLOAD
0x16f PUSH1 0x1
0x171 PUSH1 0xa0
0x173 PUSH1 0x2
0x175 EXP
0x176 SUB
0x177 CALLER
0x178 AND
0x179 SWAP1
0x17a DUP3
0x17b SWAP1
0x17c CALLVALUE
0x17d SWAP1
0x17e DUP3
0x17f DUP2
0x180 DUP2
0x181 DUP2
0x182 DUP6
0x183 DUP9
0x184 DUP4
0x185 CALL
0x186 POP
0x187 POP
0x188 POP
0x189 POP
0x18a POP
---
0x16c: V141 = 0x40
0x16e: V142 = M[0x40]
0x16f: V143 = 0x1
0x171: V144 = 0xa0
0x173: V145 = 0x2
0x175: V146 = EXP 0x2 0xa0
0x176: V147 = SUB 0x10000000000000000000000000000000000000000 0x1
0x177: V148 = CALLER
0x178: V149 = AND V148 0xffffffffffffffffffffffffffffffffffffffff
0x17c: V150 = CALLVALUE
0x185: V151 = CALL 0x0 V149 V150 V142 0x0 V142 0x0
---
Entry stack: [V10, S4, {0x150, 0x190}, 0x0, 0x0, 0x0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, S4, {0x150, 0x190}, 0x0, 0x0, 0x0]

================================

Block 0x18b
[0x18b:0x18f]
---
Predecessors: [0x16c, 0x35d]
Successors: [0x150, 0x190]
---
0x18b JUMPDEST
0x18c POP
0x18d POP
0x18e POP
0x18f JUMP
---
0x18b: JUMPDEST 
0x18f: JUMP {0x150, 0x190}
---
Entry stack: [V10, S4, {0x150, 0x190}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V10, S4]

================================

Block 0x190
[0x190:0x191]
---
Predecessors: [0xa9, 0x150, 0x18b, 0x1e7]
Successors: []
---
0x190 JUMPDEST
0x191 STOP
---
0x190: JUMPDEST 
0x191: STOP 
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0x192
[0x192:0x1b7]
---
Predecessors: [0xc0]
Successors: []
---
0x192 JUMPDEST
0x193 PUSH1 0x40
0x195 MLOAD
0x196 DUP1
0x197 DUP4
0x198 PUSH1 0x1
0x19a PUSH1 0xa0
0x19c PUSH1 0x2
0x19e EXP
0x19f SUB
0x1a0 AND
0x1a1 DUP2
0x1a2 MSTORE
0x1a3 PUSH1 0x20
0x1a5 ADD
0x1a6 DUP3
0x1a7 DUP2
0x1a8 MSTORE
0x1a9 PUSH1 0x20
0x1ab ADD
0x1ac SWAP3
0x1ad POP
0x1ae POP
0x1af POP
0x1b0 PUSH1 0x40
0x1b2 MLOAD
0x1b3 DUP1
0x1b4 SWAP2
0x1b5 SUB
0x1b6 SWAP1
0x1b7 RETURN
---
0x192: JUMPDEST 
0x193: V152 = 0x40
0x195: V153 = M[0x40]
0x198: V154 = 0x1
0x19a: V155 = 0xa0
0x19c: V156 = 0x2
0x19e: V157 = EXP 0x2 0xa0
0x19f: V158 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a0: V159 = AND 0xffffffffffffffffffffffffffffffffffffffff V93
0x1a2: M[V153] = V159
0x1a3: V160 = 0x20
0x1a5: V161 = ADD 0x20 V153
0x1a8: M[V161] = V87
0x1a9: V162 = 0x20
0x1ab: V163 = ADD 0x20 V161
0x1b0: V164 = 0x40
0x1b2: V165 = M[0x40]
0x1b5: V166 = SUB V163 V165
0x1b7: RETURN V165 V166
---
Entry stack: [V10, 0x192, V93, V87]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x192]

================================

Block 0x1b8
[0x1b8:0x1d4]
---
Predecessors: [0xfb]
Successors: []
---
0x1b8 JUMPDEST
0x1b9 PUSH1 0x40
0x1bb DUP1
0x1bc MLOAD
0x1bd PUSH1 0x1
0x1bf PUSH1 0xa0
0x1c1 PUSH1 0x2
0x1c3 EXP
0x1c4 SUB
0x1c5 SWAP3
0x1c6 SWAP1
0x1c7 SWAP3
0x1c8 AND
0x1c9 DUP3
0x1ca MSTORE
0x1cb MLOAD
0x1cc SWAP1
0x1cd DUP2
0x1ce SWAP1
0x1cf SUB
0x1d0 PUSH1 0x20
0x1d2 ADD
0x1d3 SWAP1
0x1d4 RETURN
---
0x1b8: JUMPDEST 
0x1b9: V167 = 0x40
0x1bc: V168 = M[0x40]
0x1bd: V169 = 0x1
0x1bf: V170 = 0xa0
0x1c1: V171 = 0x2
0x1c3: V172 = EXP 0x2 0xa0
0x1c4: V173 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c8: V174 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x1ca: M[V168] = V174
0x1cb: V175 = M[0x40]
0x1cf: V176 = SUB V168 V175
0x1d0: V177 = 0x20
0x1d2: V178 = ADD 0x20 V176
0x1d4: RETURN V175 V178
---
Entry stack: [V10, 0x1b8, V102]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1b8]

================================

Block 0x1d5
[0x1d5:0x1e6]
---
Predecessors: [0x10d, 0x116, 0x11f]
Successors: []
---
0x1d5 JUMPDEST
0x1d6 PUSH1 0x40
0x1d8 DUP1
0x1d9 MLOAD
0x1da SWAP2
0x1db DUP3
0x1dc MSTORE
0x1dd MLOAD
0x1de SWAP1
0x1df DUP2
0x1e0 SWAP1
0x1e1 SUB
0x1e2 PUSH1 0x20
0x1e4 ADD
0x1e5 SWAP1
0x1e6 RETURN
---
0x1d5: JUMPDEST 
0x1d6: V179 = 0x40
0x1d9: V180 = M[0x40]
0x1dc: M[V180] = S0
0x1dd: V181 = M[0x40]
0x1e1: V182 = SUB V180 V181
0x1e2: V183 = 0x20
0x1e4: V184 = ADD 0x20 V182
0x1e6: RETURN V181 V184
---
Entry stack: [V10, 0x1d5, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1d5]

================================

Block 0x1e7
[0x1e7:0x211]
---
Predecessors: [0x145]
Successors: [0x190]
---
0x1e7 JUMPDEST
0x1e8 PUSH1 0x4
0x1ea SLOAD
0x1eb PUSH1 0x2
0x1ed SLOAD
0x1ee PUSH1 0x40
0x1f0 MLOAD
0x1f1 PUSH1 0x1
0x1f3 PUSH1 0xa0
0x1f5 PUSH1 0x2
0x1f7 EXP
0x1f8 SUB
0x1f9 SWAP3
0x1fa SWAP1
0x1fb SWAP3
0x1fc AND
0x1fd SWAP2
0x1fe PUSH1 0x0
0x200 SWAP2
0x201 SWAP1
0x202 DUP3
0x203 DUP2
0x204 DUP2
0x205 DUP2
0x206 DUP6
0x207 DUP9
0x208 DUP4
0x209 CALL
0x20a POP
0x20b POP
0x20c POP
0x20d PUSH1 0x2
0x20f SSTORE
0x210 POP
0x211 JUMP
---
0x1e7: JUMPDEST 
0x1e8: V185 = 0x4
0x1ea: V186 = S[0x4]
0x1eb: V187 = 0x2
0x1ed: V188 = S[0x2]
0x1ee: V189 = 0x40
0x1f0: V190 = M[0x40]
0x1f1: V191 = 0x1
0x1f3: V192 = 0xa0
0x1f5: V193 = 0x2
0x1f7: V194 = EXP 0x2 0xa0
0x1f8: V195 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1fc: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff V186
0x1fe: V197 = 0x0
0x209: V198 = CALL 0x0 V196 V188 V190 0x0 V190 0x0
0x20d: V199 = 0x2
0x20f: S[0x2] = 0x0
0x211: JUMP 0x190
---
Entry stack: [V10, 0x190]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x212
[0x212:0x222]
---
Predecessors: [0x156]
Successors: [0x223, 0x25e]
---
0x212 JUMPDEST
0x213 PUSH8 0x29a2241af62c0000
0x21c CALLVALUE
0x21d GT
0x21e ISZERO
0x21f PUSH2 0x25e
0x222 JUMPI
---
0x212: JUMPDEST 
0x213: V200 = 0x29a2241af62c0000
0x21c: V201 = CALLVALUE
0x21d: V202 = GT V201 0x29a2241af62c0000
0x21e: V203 = ISZERO V202
0x21f: V204 = 0x25e
0x222: JUMPI 0x25e V203
---
Entry stack: [V10, S4, {0x150, 0x190}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, {0x150, 0x190}, 0x0, 0x0, 0x0]

================================

Block 0x223
[0x223:0x25d]
---
Predecessors: [0x212]
Successors: [0x262]
---
0x223 PUSH1 0x40
0x225 MLOAD
0x226 PUSH1 0x1
0x228 PUSH1 0xa0
0x22a PUSH1 0x2
0x22c EXP
0x22d SUB
0x22e CALLER
0x22f AND
0x230 SWAP1
0x231 PUSH1 0x0
0x233 SWAP1
0x234 PUSH8 0x29a2241af62bffff
0x23d NOT
0x23e CALLVALUE
0x23f ADD
0x240 SWAP1
0x241 DUP3
0x242 DUP2
0x243 DUP2
0x244 DUP2
0x245 DUP6
0x246 DUP9
0x247 DUP4
0x248 CALL
0x249 POP
0x24a PUSH8 0x29a2241af62c0000
0x253 SWAP7
0x254 POP
0x255 PUSH2 0x262
0x258 SWAP4
0x259 POP
0x25a POP
0x25b POP
0x25c POP
0x25d JUMP
---
0x223: V205 = 0x40
0x225: V206 = M[0x40]
0x226: V207 = 0x1
0x228: V208 = 0xa0
0x22a: V209 = 0x2
0x22c: V210 = EXP 0x2 0xa0
0x22d: V211 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22e: V212 = CALLER
0x22f: V213 = AND V212 0xffffffffffffffffffffffffffffffffffffffff
0x231: V214 = 0x0
0x234: V215 = 0x29a2241af62bffff
0x23d: V216 = NOT 0x29a2241af62bffff
0x23e: V217 = CALLVALUE
0x23f: V218 = ADD V217 0xffffffffffffffffffffffffffffffffffffffffffffffffd65ddbe509d40000
0x248: V219 = CALL 0x0 V213 V218 V206 0x0 V206 0x0
0x24a: V220 = 0x29a2241af62c0000
0x255: V221 = 0x262
0x25d: JUMP 0x262
---
Entry stack: [V10, S4, {0x150, 0x190}, 0x0, 0x0, 0x0]
Stack pops: 3
Stack additions: [0x29a2241af62c0000, S1, S0]
Exit stack: [V10, S4, {0x150, 0x190}, 0x29a2241af62c0000, 0x0, 0x0]

================================

Block 0x25e
[0x25e:0x261]
---
Predecessors: [0x212]
Successors: [0x262]
---
0x25e JUMPDEST
0x25f CALLVALUE
0x260 SWAP3
0x261 POP
---
0x25e: JUMPDEST 
0x25f: V222 = CALLVALUE
---
Entry stack: [V10, S4, {0x150, 0x190}, 0x0, 0x0, 0x0]
Stack pops: 3
Stack additions: [V222, S1, S0]
Exit stack: [V10, S4, {0x150, 0x190}, V222, 0x0, 0x0]

================================

Block 0x262
[0x262:0x27c]
---
Predecessors: [0x223, 0x25e]
Successors: [0x27d, 0x2bd]
---
0x262 JUMPDEST
0x263 PUSH1 0x0
0x265 DUP1
0x266 SLOAD
0x267 PUSH1 0x1
0x269 DUP2
0x26a ADD
0x26b DUP1
0x26c DUP4
0x26d SSTORE
0x26e SWAP1
0x26f SWAP4
0x270 POP
0x271 SWAP1
0x272 DUP2
0x273 DUP5
0x274 DUP1
0x275 ISZERO
0x276 DUP3
0x277 SWAP1
0x278 GT
0x279 PUSH2 0x2bd
0x27c JUMPI
---
0x262: JUMPDEST 
0x263: V223 = 0x0
0x266: V224 = S[0x0]
0x267: V225 = 0x1
0x26a: V226 = ADD V224 0x1
0x26d: S[0x0] = V226
0x275: V227 = ISZERO V224
0x278: V228 = GT V227 V226
0x279: V229 = 0x2bd
0x27c: JUMPI 0x2bd V228
---
Entry stack: [V10, S4, {0x150, 0x190}, S2, 0x0, 0x0]
Stack pops: 2
Stack additions: [V224, S0, V226, 0x0, V226, V224]
Exit stack: [V10, S4, {0x150, 0x190}, S2, V224, 0x0, V226, 0x0, V226, V224]

================================

Block 0x27d
[0x27d:0x296]
---
Predecessors: [0x262]
Successors: [0x297]
---
0x27d PUSH1 0x2
0x27f MUL
0x280 DUP2
0x281 PUSH1 0x2
0x283 MUL
0x284 DUP4
0x285 PUSH1 0x0
0x287 MSTORE
0x288 PUSH1 0x20
0x28a PUSH1 0x0
0x28c SHA3
0x28d SWAP2
0x28e DUP3
0x28f ADD
0x290 SWAP2
0x291 ADD
0x292 PUSH2 0x2bd
0x295 SWAP2
0x296 SWAP1
---
0x27d: V230 = 0x2
0x27f: V231 = MUL 0x2 V224
0x281: V232 = 0x2
0x283: V233 = MUL 0x2 V226
0x285: V234 = 0x0
0x287: M[0x0] = 0x0
0x288: V235 = 0x20
0x28a: V236 = 0x0
0x28c: V237 = SHA3 0x0 0x20
0x28f: V238 = ADD V237 V231
0x291: V239 = ADD V237 V233
0x292: V240 = 0x2bd
---
Entry stack: [V10, S8, {0x150, 0x190}, S6, V224, 0x0, V226, 0x0, V226, V224]
Stack pops: 3
Stack additions: [S2, S1, 0x2bd, V238, V239]
Exit stack: [V10, S8, {0x150, 0x190}, S6, V224, 0x0, V226, 0x0, V226, 0x2bd, V238, V239]

================================

Block 0x297
[0x297:0x29f]
---
Predecessors: [0x27d, 0x2a0]
Successors: [0x2a0, 0x33c]
---
0x297 JUMPDEST
0x298 DUP1
0x299 DUP3
0x29a GT
0x29b ISZERO
0x29c PUSH2 0x33c
0x29f JUMPI
---
0x297: JUMPDEST 
0x29a: V241 = GT V238 S0
0x29b: V242 = ISZERO V241
0x29c: V243 = 0x33c
0x29f: JUMPI 0x33c V242
---
Entry stack: [V10, S10, {0x150, 0x190}, S8, V224, 0x0, V226, 0x0, V226, 0x2bd, V238, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, S10, {0x150, 0x190}, S8, V224, 0x0, V226, 0x0, V226, 0x2bd, V238, S0]

================================

Block 0x2a0
[0x2a0:0x2bc]
---
Predecessors: [0x297]
Successors: [0x297]
---
0x2a0 DUP1
0x2a1 SLOAD
0x2a2 PUSH1 0x1
0x2a4 PUSH1 0xa0
0x2a6 PUSH1 0x2
0x2a8 EXP
0x2a9 SUB
0x2aa NOT
0x2ab AND
0x2ac DUP2
0x2ad SSTORE
0x2ae PUSH1 0x0
0x2b0 PUSH1 0x1
0x2b2 SWAP2
0x2b3 SWAP1
0x2b4 SWAP2
0x2b5 ADD
0x2b6 SWAP1
0x2b7 DUP2
0x2b8 SSTORE
0x2b9 PUSH2 0x297
0x2bc JUMP
---
0x2a1: V244 = S[S0]
0x2a2: V245 = 0x1
0x2a4: V246 = 0xa0
0x2a6: V247 = 0x2
0x2a8: V248 = EXP 0x2 0xa0
0x2a9: V249 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2aa: V250 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2ab: V251 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V244
0x2ad: S[S0] = V251
0x2ae: V252 = 0x0
0x2b0: V253 = 0x1
0x2b5: V254 = ADD 0x1 S0
0x2b8: S[V254] = 0x0
0x2b9: V255 = 0x297
0x2bc: JUMP 0x297
---
Entry stack: [V10, S10, {0x150, 0x190}, S8, V224, 0x0, V226, 0x0, V226, 0x2bd, V238, S0]
Stack pops: 1
Stack additions: [V254]
Exit stack: [V10, S10, {0x150, 0x190}, S8, V224, 0x0, V226, 0x0, V226, 0x2bd, V238, V254]

================================

Block 0x2bd
[0x2bd:0x2d1]
---
Predecessors: [0x262, 0x33c]
Successors: [0x2d2]
---
0x2bd JUMPDEST
0x2be POP
0x2bf POP
0x2c0 POP
0x2c1 POP
0x2c2 CALLER
0x2c3 PUSH1 0x0
0x2c5 PUSH1 0x0
0x2c7 POP
0x2c8 DUP4
0x2c9 DUP2
0x2ca SLOAD
0x2cb DUP2
0x2cc LT
0x2cd ISZERO
0x2ce PUSH2 0x2
0x2d1 JUMPI
---
0x2bd: JUMPDEST 
0x2c2: V256 = CALLER
0x2c3: V257 = 0x0
0x2c5: V258 = 0x0
0x2ca: V259 = S[0x0]
0x2cc: V260 = LT V224 V259
0x2cd: V261 = ISZERO V260
0x2ce: V262 = 0x2
0x2d1: THROWI V261
---
Entry stack: [V10, S8, {0x150, 0x190}, S6, V224, 0x0, V226, 0x0, V226, S0]
Stack pops: 6
Stack additions: [S5, S4, V256, 0x0, S5]
Exit stack: [V10, S8, {0x150, 0x190}, S6, V224, 0x0, V256, 0x0, V224]

================================

Block 0x2d2
[0x2d2:0x307]
---
Predecessors: [0x2bd]
Successors: [0x308]
---
0x2d2 DUP2
0x2d3 DUP1
0x2d4 MSTORE
0x2d5 PUSH1 0x2
0x2d7 MUL
0x2d8 PUSH1 0x0
0x2da DUP1
0x2db MLOAD
0x2dc PUSH1 0x20
0x2de PUSH2 0x43f
0x2e1 DUP4
0x2e2 CODECOPY
0x2e3 DUP2
0x2e4 MLOAD
0x2e5 SWAP2
0x2e6 MSTORE
0x2e7 ADD
0x2e8 DUP1
0x2e9 SLOAD
0x2ea PUSH1 0x1
0x2ec PUSH1 0xa0
0x2ee PUSH1 0x2
0x2f0 EXP
0x2f1 SUB
0x2f2 NOT
0x2f3 AND
0x2f4 SWAP1
0x2f5 SWAP3
0x2f6 OR
0x2f7 SWAP1
0x2f8 SWAP2
0x2f9 SSTORE
0x2fa DUP1
0x2fb SLOAD
0x2fc DUP5
0x2fd SWAP2
0x2fe SWAP1
0x2ff DUP5
0x300 SWAP1
0x301 DUP2
0x302 LT
0x303 ISZERO
0x304 PUSH2 0x2
0x307 JUMPI
---
0x2d4: M[0x0] = 0x0
0x2d5: V263 = 0x2
0x2d7: V264 = MUL 0x2 V224
0x2d8: V265 = 0x0
0x2db: V266 = M[0x0]
0x2dc: V267 = 0x20
0x2de: V268 = 0x43f
0x2e2: CODECOPY 0x0 0x43f 0x20
0x2e4: V269 = M[0x0]
0x2e6: M[0x0] = V266
0x2e7: V270 = ADD V269 V264
0x2e9: V271 = S[V270]
0x2ea: V272 = 0x1
0x2ec: V273 = 0xa0
0x2ee: V274 = 0x2
0x2f0: V275 = EXP 0x2 0xa0
0x2f1: V276 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f2: V277 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2f3: V278 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V271
0x2f6: V279 = OR V256 V278
0x2f9: S[V270] = V279
0x2fb: V280 = S[0x0]
0x302: V281 = LT V224 V280
0x303: V282 = ISZERO V281
0x304: V283 = 0x2
0x307: THROWI V282
---
Entry stack: [V10, S7, {0x150, 0x190}, S5, V224, 0x0, V256, 0x0, V224]
Stack pops: 6
Stack additions: [S5, S4, S3, S5, S1, S4]
Exit stack: [V10, S7, {0x150, 0x190}, S5, V224, 0x0, S5, 0x0, V224]

================================

Block 0x308
[0x308:0x324]
---
Predecessors: [0x2d2]
Successors: [0x325, 0x340]
---
0x308 PUSH1 0x2
0x30a MUL
0x30b PUSH1 0x0
0x30d DUP1
0x30e MLOAD
0x30f PUSH1 0x20
0x311 PUSH2 0x45f
0x314 DUP4
0x315 CODECOPY
0x316 DUP2
0x317 MLOAD
0x318 SWAP2
0x319 MSTORE
0x31a ADD
0x31b SWAP2
0x31c SWAP1
0x31d SWAP2
0x31e SSTORE
0x31f DUP3
0x320 EQ
0x321 PUSH2 0x340
0x324 JUMPI
---
0x308: V284 = 0x2
0x30a: V285 = MUL 0x2 V224
0x30b: V286 = 0x0
0x30e: V287 = M[0x0]
0x30f: V288 = 0x20
0x311: V289 = 0x45f
0x315: CODECOPY 0x0 0x45f 0x20
0x317: V290 = M[0x0]
0x319: M[0x0] = V287
0x31a: V291 = ADD V290 V285
0x31e: S[V291] = S2
0x320: V292 = EQ V224 0x0
0x321: V293 = 0x340
0x324: JUMPI 0x340 V292
---
Entry stack: [V10, S7, {0x150, 0x190}, S5, V224, 0x0, S2, 0x0, V224]
Stack pops: 5
Stack additions: [S4, S3]
Exit stack: [V10, S7, {0x150, 0x190}, S5, V224, 0x0]

================================

Block 0x325
[0x325:0x33b]
---
Predecessors: [0x308]
Successors: [0x349]
---
0x325 PUSH1 0x2
0x327 DUP1
0x328 SLOAD
0x329 PUSH1 0x32
0x32b DUP6
0x32c DIV
0x32d ADD
0x32e SWAP1
0x32f SSTORE
0x330 PUSH1 0x3
0x332 DUP1
0x333 SLOAD
0x334 DUP5
0x335 ADD
0x336 SWAP1
0x337 SSTORE
0x338 PUSH2 0x349
0x33b JUMP
---
0x325: V294 = 0x2
0x328: V295 = S[0x2]
0x329: V296 = 0x32
0x32c: V297 = DIV S2 0x32
0x32d: V298 = ADD V297 V295
0x32f: S[0x2] = V298
0x330: V299 = 0x3
0x333: V300 = S[0x3]
0x335: V301 = ADD S2 V300
0x337: S[0x3] = V301
0x338: V302 = 0x349
0x33b: JUMP 0x349
---
Entry stack: [V10, S4, {0x150, 0x190}, S2, V224, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, S4, {0x150, 0x190}, S2, V224, 0x0]

================================

Block 0x33c
[0x33c:0x33f]
---
Predecessors: [0x297]
Successors: [0x2bd]
---
0x33c JUMPDEST
0x33d POP
0x33e SWAP1
0x33f JUMP
---
0x33c: JUMPDEST 
0x33f: JUMP 0x2bd
---
Entry stack: [V10, S10, {0x150, 0x190}, S8, V224, 0x0, V226, 0x0, V226, 0x2bd, V238, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V10, S10, {0x150, 0x190}, S8, V224, 0x0, V226, 0x0, V226, V238]

================================

Block 0x340
[0x340:0x348]
---
Predecessors: [0x308]
Successors: [0x349]
---
0x340 JUMPDEST
0x341 PUSH1 0x2
0x343 DUP1
0x344 SLOAD
0x345 DUP5
0x346 ADD
0x347 SWAP1
0x348 SSTORE
---
0x340: JUMPDEST 
0x341: V303 = 0x2
0x344: V304 = S[0x2]
0x346: V305 = ADD S2 V304
0x348: S[0x2] = V305
---
Entry stack: [V10, S4, {0x150, 0x190}, S2, V224, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, S4, {0x150, 0x190}, S2, V224, 0x0]

================================

Block 0x349
[0x349:0x349]
---
Predecessors: [0x325, 0x340]
Successors: [0x34a]
---
0x349 JUMPDEST
---
0x349: JUMPDEST 
---
Entry stack: [V10, S4, {0x150, 0x190}, S2, V224, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, {0x150, 0x190}, S2, V224, 0x0]

================================

Block 0x34a
[0x34a:0x35c]
---
Predecessors: [0x349, 0x40a]
Successors: [0x35d]
---
0x34a JUMPDEST
0x34b PUSH1 0x1
0x34d SLOAD
0x34e PUSH1 0x0
0x350 DUP1
0x351 SLOAD
0x352 PUSH1 0x64
0x354 SWAP3
0x355 SWAP1
0x356 DUP2
0x357 LT
0x358 ISZERO
0x359 PUSH2 0x2
0x35c JUMPI
---
0x34a: JUMPDEST 
0x34b: V306 = 0x1
0x34d: V307 = S[0x1]
0x34e: V308 = 0x0
0x351: V309 = S[0x0]
0x352: V310 = 0x64
0x357: V311 = LT V307 V309
0x358: V312 = ISZERO V311
0x359: V313 = 0x2
0x35c: THROWI V312
---
Entry stack: [V10, S4, {0x150, 0x190}, S2, V224, S0]
Stack pops: 0
Stack additions: [0x64, 0x0, V307]
Exit stack: [V10, S4, {0x150, 0x190}, S2, V224, S0, 0x64, 0x0, V307]

================================

Block 0x35d
[0x35d:0x388]
---
Predecessors: [0x34a]
Successors: [0x18b, 0x389]
---
0x35d DUP2
0x35e DUP1
0x35f MSTORE
0x360 PUSH1 0x2
0x362 MUL
0x363 PUSH1 0x0
0x365 DUP1
0x366 MLOAD
0x367 PUSH1 0x20
0x369 PUSH2 0x43f
0x36c DUP4
0x36d CODECOPY
0x36e DUP2
0x36f MLOAD
0x370 SWAP2
0x371 MSTORE
0x372 ADD
0x373 SWAP1
0x374 POP
0x375 PUSH1 0x1
0x377 ADD
0x378 SLOAD
0x379 PUSH1 0x3
0x37b SLOAD
0x37c SWAP2
0x37d SWAP1
0x37e DIV
0x37f PUSH1 0xbc
0x381 MUL
0x382 SWAP1
0x383 GT
0x384 ISZERO
0x385 PUSH2 0x18b
0x388 JUMPI
---
0x35f: M[0x0] = 0x0
0x360: V314 = 0x2
0x362: V315 = MUL 0x2 V307
0x363: V316 = 0x0
0x366: V317 = M[0x0]
0x367: V318 = 0x20
0x369: V319 = 0x43f
0x36d: CODECOPY 0x0 0x43f 0x20
0x36f: V320 = M[0x0]
0x371: M[0x0] = V317
0x372: V321 = ADD V320 V315
0x375: V322 = 0x1
0x377: V323 = ADD 0x1 V321
0x378: V324 = S[V323]
0x379: V325 = 0x3
0x37b: V326 = S[0x3]
0x37e: V327 = DIV V324 0x64
0x37f: V328 = 0xbc
0x381: V329 = MUL 0xbc V327
0x383: V330 = GT V326 V329
0x384: V331 = ISZERO V330
0x385: V332 = 0x18b
0x388: JUMPI 0x18b V331
---
Entry stack: [V10, S7, {0x150, 0x190}, S5, V224, S3, 0x64, 0x0, V307]
Stack pops: 3
Stack additions: []
Exit stack: [V10, S7, {0x150, 0x190}, S5, V224, S3]

================================

Block 0x389
[0x389:0x39a]
---
Predecessors: [0x35d]
Successors: [0x39b]
---
0x389 PUSH1 0x1
0x38b SLOAD
0x38c PUSH1 0x0
0x38e DUP1
0x38f SLOAD
0x390 PUSH1 0x64
0x392 SWAP3
0x393 SWAP1
0x394 DUP2
0x395 LT
0x396 ISZERO
0x397 PUSH2 0x2
0x39a JUMPI
---
0x389: V333 = 0x1
0x38b: V334 = S[0x1]
0x38c: V335 = 0x0
0x38f: V336 = S[0x0]
0x390: V337 = 0x64
0x395: V338 = LT V334 V336
0x396: V339 = ISZERO V338
0x397: V340 = 0x2
0x39a: THROWI V339
---
Entry stack: [V10, S4, {0x150, 0x190}, S2, V224, S0]
Stack pops: 0
Stack additions: [0x64, 0x0, V334]
Exit stack: [V10, S4, {0x150, 0x190}, S2, V224, S0, 0x64, 0x0, V334]

================================

Block 0x39b
[0x39b:0x3c5]
---
Predecessors: [0x389]
Successors: [0x3c6]
---
0x39b PUSH1 0x2
0x39d MUL
0x39e PUSH1 0x0
0x3a0 DUP1
0x3a1 MLOAD
0x3a2 PUSH1 0x20
0x3a4 PUSH2 0x45f
0x3a7 DUP4
0x3a8 CODECOPY
0x3a9 DUP2
0x3aa MLOAD
0x3ab SWAP2
0x3ac MSTORE
0x3ad ADD
0x3ae SLOAD
0x3af PUSH1 0x1
0x3b1 SLOAD
0x3b2 DUP3
0x3b3 SLOAD
0x3b4 SWAP4
0x3b5 SWAP1
0x3b6 SWAP2
0x3b7 DIV
0x3b8 PUSH1 0x5f
0x3ba MUL
0x3bb SWAP4
0x3bc POP
0x3bd SWAP1
0x3be SWAP2
0x3bf DUP2
0x3c0 LT
0x3c1 ISZERO
0x3c2 PUSH2 0x2
0x3c5 JUMPI
---
0x39b: V341 = 0x2
0x39d: V342 = MUL 0x2 V334
0x39e: V343 = 0x0
0x3a1: V344 = M[0x0]
0x3a2: V345 = 0x20
0x3a4: V346 = 0x45f
0x3a8: CODECOPY 0x0 0x45f 0x20
0x3aa: V347 = M[0x0]
0x3ac: M[0x0] = V344
0x3ad: V348 = ADD V347 V342
0x3ae: V349 = S[V348]
0x3af: V350 = 0x1
0x3b1: V351 = S[0x1]
0x3b3: V352 = S[0x0]
0x3b7: V353 = DIV V349 0x64
0x3b8: V354 = 0x5f
0x3ba: V355 = MUL 0x5f V353
0x3c0: V356 = LT V351 V352
0x3c1: V357 = ISZERO V356
0x3c2: V358 = 0x2
0x3c5: THROWI V357
---
Entry stack: [V10, S7, {0x150, 0x190}, S5, V224, S3, 0x64, 0x0, V334]
Stack pops: 4
Stack additions: [V355, S1, V351]
Exit stack: [V10, S7, {0x150, 0x190}, S5, V224, V355, 0x0, V351]

================================

Block 0x3c6
[0x3c6:0x409]
---
Predecessors: [0x39b]
Successors: [0x40a]
---
0x3c6 PUSH1 0x2
0x3c8 MUL
0x3c9 PUSH1 0x0
0x3cb DUP1
0x3cc MLOAD
0x3cd PUSH1 0x20
0x3cf PUSH2 0x43f
0x3d2 DUP4
0x3d3 CODECOPY
0x3d4 DUP2
0x3d5 MLOAD
0x3d6 SWAP2
0x3d7 MSTORE
0x3d8 ADD
0x3d9 SLOAD
0x3da PUSH1 0x40
0x3dc MLOAD
0x3dd PUSH1 0x1
0x3df PUSH1 0xa0
0x3e1 PUSH1 0x2
0x3e3 EXP
0x3e4 SUB
0x3e5 SWAP2
0x3e6 SWAP1
0x3e7 SWAP2
0x3e8 AND
0x3e9 SWAP2
0x3ea SWAP1
0x3eb DUP4
0x3ec SWAP1
0x3ed DUP3
0x3ee DUP2
0x3ef DUP2
0x3f0 DUP2
0x3f1 DUP6
0x3f2 DUP9
0x3f3 DUP4
0x3f4 CALL
0x3f5 POP
0x3f6 POP
0x3f7 PUSH1 0x1
0x3f9 SLOAD
0x3fa DUP3
0x3fb SLOAD
0x3fc PUSH1 0x64
0x3fe SWAP5
0x3ff POP
0x400 SWAP1
0x401 SWAP2
0x402 POP
0x403 DUP2
0x404 LT
0x405 ISZERO
0x406 PUSH2 0x2
0x409 JUMPI
---
0x3c6: V359 = 0x2
0x3c8: V360 = MUL 0x2 V351
0x3c9: V361 = 0x0
0x3cc: V362 = M[0x0]
0x3cd: V363 = 0x20
0x3cf: V364 = 0x43f
0x3d3: CODECOPY 0x0 0x43f 0x20
0x3d5: V365 = M[0x0]
0x3d7: M[0x0] = V362
0x3d8: V366 = ADD V365 V360
0x3d9: V367 = S[V366]
0x3da: V368 = 0x40
0x3dc: V369 = M[0x40]
0x3dd: V370 = 0x1
0x3df: V371 = 0xa0
0x3e1: V372 = 0x2
0x3e3: V373 = EXP 0x2 0xa0
0x3e4: V374 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3e8: V375 = AND 0xffffffffffffffffffffffffffffffffffffffff V367
0x3f4: V376 = CALL 0x0 V375 V355 V369 0x0 V369 0x0
0x3f7: V377 = 0x1
0x3f9: V378 = S[0x1]
0x3fb: V379 = S[0x0]
0x3fc: V380 = 0x64
0x404: V381 = LT V378 V379
0x405: V382 = ISZERO V381
0x406: V383 = 0x2
0x409: THROWI V382
---
Entry stack: [V10, S6, {0x150, 0x190}, S4, V224, V355, 0x0, V351]
Stack pops: 3
Stack additions: [S2, 0x64, S1, V378]
Exit stack: [V10, S6, {0x150, 0x190}, S4, V224, V355, 0x64, 0x0, V378]

================================

Block 0x40a
[0x40a:0x43e]
---
Predecessors: [0x3c6]
Successors: [0x34a]
---
0x40a SWAP1
0x40b DUP1
0x40c MSTORE
0x40d PUSH1 0x3
0x40f DUP1
0x410 SLOAD
0x411 PUSH1 0x2
0x413 SWAP3
0x414 SWAP1
0x415 SWAP3
0x416 MUL
0x417 PUSH1 0x0
0x419 DUP1
0x41a MLOAD
0x41b PUSH1 0x20
0x41d PUSH2 0x45f
0x420 DUP4
0x421 CODECOPY
0x422 DUP2
0x423 MLOAD
0x424 SWAP2
0x425 MSTORE
0x426 ADD
0x427 SLOAD
0x428 SWAP3
0x429 SWAP1
0x42a SWAP3
0x42b DIV
0x42c PUSH1 0xbc
0x42e MUL
0x42f SWAP1
0x430 SUB
0x431 SWAP1
0x432 SSTORE
0x433 PUSH1 0x1
0x435 DUP1
0x436 SLOAD
0x437 DUP2
0x438 ADD
0x439 SWAP1
0x43a SSTORE
0x43b PUSH2 0x34a
0x43e JUMP
---
0x40c: M[0x0] = 0x0
0x40d: V384 = 0x3
0x410: V385 = S[0x3]
0x411: V386 = 0x2
0x416: V387 = MUL 0x2 V378
0x417: V388 = 0x0
0x41a: V389 = M[0x0]
0x41b: V390 = 0x20
0x41d: V391 = 0x45f
0x421: CODECOPY 0x0 0x45f 0x20
0x423: V392 = M[0x0]
0x425: M[0x0] = V389
0x426: V393 = ADD V392 V387
0x427: V394 = S[V393]
0x42b: V395 = DIV V394 0x64
0x42c: V396 = 0xbc
0x42e: V397 = MUL 0xbc V395
0x430: V398 = SUB V385 V397
0x432: S[0x3] = V398
0x433: V399 = 0x1
0x436: V400 = S[0x1]
0x438: V401 = ADD 0x1 V400
0x43a: S[0x1] = V401
0x43b: V402 = 0x34a
0x43e: JUMP 0x34a
---
Entry stack: [V10, S7, {0x150, 0x190}, S5, V224, V355, 0x64, 0x0, V378]
Stack pops: 3
Stack additions: []
Exit stack: [V10, S7, {0x150, 0x190}, S5, V224, V355]

================================

Block 0x43f
[0x43f:0x483]
---
Predecessors: []
Successors: []
---
0x43f MISSING 0x29
0x440 MISSING 0xd
0x441 MISSING 0xec
0x442 MISSING 0xd9
0x443 SLOAD
0x444 DUP12
0x445 PUSH3 0xa8d603
0x449 GASLIMIT
0x44a MISSING 0xa9
0x44b DUP9
0x44c CODESIZE
0x44d PUSH16 0xc84ba6bc95484008f6362f93160ef3e5
0x45e PUSH4 0x290decd9
0x463 SLOAD
0x464 DUP12
0x465 PUSH3 0xa8d603
0x469 GASLIMIT
0x46a MISSING 0xa9
0x46b DUP9
0x46c CODESIZE
0x46d PUSH16 0xc84ba6bc95484008f6362f93160ef3e5
0x47e PUSH5 0x0
---
0x43f: MISSING 0x29
0x440: MISSING 0xd
0x441: MISSING 0xec
0x442: MISSING 0xd9
0x443: V403 = S[S0]
0x445: V404 = 0xa8d603
0x449: V405 = GASLIMIT
0x44a: MISSING 0xa9
0x44c: V406 = CODESIZE
0x44d: V407 = 0xc84ba6bc95484008f6362f93160ef3e5
0x45e: V408 = 0x290decd9
0x463: V409 = S[0x290decd9]
0x465: V410 = 0xa8d603
0x469: V411 = GASLIMIT
0x46a: MISSING 0xa9
0x46c: V412 = CODESIZE
0x46d: V413 = 0xc84ba6bc95484008f6362f93160ef3e5
0x47e: V414 = 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: [V405, 0xa8d603, S11, V403, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, V411, 0xa8d603, S7, V409, 0xc84ba6bc95484008f6362f93160ef3e5, V406, S8, S0, S1, S2, S3, S4, S5, S6, S7, S8, 0x0, 0xc84ba6bc95484008f6362f93160ef3e5, V412, S8, S0, S1, S2, S3, S4, S5, S6, S7, S8]
Exit stack: []

================================

Function 0:
Public function signature: 0x13af4035
Entry block: 0x77
Exit block: 0x190
Body: 0x77, 0x97, 0xa9, 0x190

Function 1:
Public function signature: 0x35c1d349
Entry block: 0xac
Exit block: 0x192
Body: 0xac, 0xc0, 0x192

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0xfb
Exit block: 0x1b8
Body: 0xfb, 0x1b8

Function 3:
Public function signature: 0x9003adfe
Entry block: 0x10d
Exit block: 0x1d5
Body: 0x10d, 0x1d5

Function 4:
Public function signature: 0xa60f3588
Entry block: 0x116
Exit block: 0x1d5
Body: 0x116, 0x1d5

Function 5:
Public function signature: 0xb69ef8a8
Entry block: 0x11f
Exit block: 0x1d5
Body: 0x11f, 0x1d5

Function 6:
Public function signature: 0xc8796572
Entry block: 0x128
Exit block: 0x190
Body: 0x128, 0x145, 0x150, 0x190, 0x1e7

Function 7:
Public function signature: 0xe97dcb62
Entry block: 0x152
Exit block: 0x190
Body: 0x150, 0x152, 0x156, 0x16c, 0x18b, 0x190, 0x212, 0x223, 0x25e, 0x262, 0x27d, 0x297, 0x2a0, 0x2bd, 0x2d2, 0x308, 0x325, 0x33c, 0x340, 0x349, 0x34a, 0x35d, 0x389, 0x39b, 0x3c6, 0x40a

Function 8:
Public fallback function
Entry block: 0x6c
Exit block: 0x190
Body: 0x6c, 0x150, 0x156, 0x16c, 0x18b, 0x190, 0x212, 0x223, 0x25e, 0x262, 0x27d, 0x297, 0x2a0, 0x2bd, 0x2d2, 0x308, 0x325, 0x33c, 0x340, 0x349, 0x34a, 0x35d, 0x389, 0x39b, 0x3c6, 0x40a

