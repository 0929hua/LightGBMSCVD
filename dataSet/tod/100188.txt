Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x74]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x74
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x74
0xc: JUMPI 0x74 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x113]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x3ccfd60b
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x113
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x3ccfd60b
0x22: V15 = EQ V13 0x3ccfd60b
0x23: V16 = 0x113
0x26: JUMPI 0x113 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x128]
---
0x27 DUP1
0x28 PUSH4 0x718da7ee
0x2d EQ
0x2e PUSH2 0x128
0x31 JUMPI
---
0x28: V17 = 0x718da7ee
0x2d: V18 = EQ 0x718da7ee V13
0x2e: V19 = 0x128
0x31: JUMPI 0x128 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x147]
---
0x32 DUP1
0x33 PUSH4 0x79ba5097
0x38 EQ
0x39 PUSH2 0x147
0x3c JUMPI
---
0x33: V20 = 0x79ba5097
0x38: V21 = EQ 0x79ba5097 V13
0x39: V22 = 0x147
0x3c: JUMPI 0x147 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x15a]
---
0x3d DUP1
0x3e PUSH4 0x89476069
0x43 EQ
0x44 PUSH2 0x15a
0x47 JUMPI
---
0x3e: V23 = 0x89476069
0x43: V24 = EQ 0x89476069 V13
0x44: V25 = 0x15a
0x47: JUMPI 0x15a V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x179]
---
0x48 DUP1
0x49 PUSH4 0x8da5cb5b
0x4e EQ
0x4f PUSH2 0x179
0x52 JUMPI
---
0x49: V26 = 0x8da5cb5b
0x4e: V27 = EQ 0x8da5cb5b V13
0x4f: V28 = 0x179
0x52: JUMPI 0x179 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x1a8]
---
0x53 DUP1
0x54 PUSH4 0xd4ee1d90
0x59 EQ
0x5a PUSH2 0x1a8
0x5d JUMPI
---
0x54: V29 = 0xd4ee1d90
0x59: V30 = EQ 0xd4ee1d90 V13
0x5a: V31 = 0x1a8
0x5d: JUMPI 0x1a8 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x1bb]
---
0x5e DUP1
0x5f PUSH4 0xf2fde38b
0x64 EQ
0x65 PUSH2 0x1bb
0x68 JUMPI
---
0x5f: V32 = 0xf2fde38b
0x64: V33 = EQ 0xf2fde38b V13
0x65: V34 = 0x1bb
0x68: JUMPI 0x1bb V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x1da]
---
0x69 DUP1
0x6a PUSH4 0xf7260d3e
0x6f EQ
0x70 PUSH2 0x1da
0x73 JUMPI
---
0x6a: V35 = 0xf7260d3e
0x6f: V36 = EQ 0xf7260d3e V13
0x70: V37 = 0x1da
0x73: JUMPI 0x1da V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0xa3]
---
Predecessors: [0x0, 0x69]
Successors: [0xa4, 0xa8]
---
0x74 JUMPDEST
0x75 PUSH1 0x2
0x77 SLOAD
0x78 PUSH1 0x1
0x7a PUSH1 0xa0
0x7c PUSH1 0x2
0x7e EXP
0x7f SUB
0x80 AND
0x81 CALLVALUE
0x82 DUP1
0x83 ISZERO
0x84 PUSH2 0x8fc
0x87 MUL
0x88 SWAP1
0x89 PUSH1 0x40
0x8b MLOAD
0x8c PUSH1 0x0
0x8e PUSH1 0x40
0x90 MLOAD
0x91 DUP1
0x92 DUP4
0x93 SUB
0x94 DUP2
0x95 DUP6
0x96 DUP9
0x97 DUP9
0x98 CALL
0x99 SWAP4
0x9a POP
0x9b POP
0x9c POP
0x9d POP
0x9e ISZERO
0x9f ISZERO
0xa0 PUSH2 0xa8
0xa3 JUMPI
---
0x74: JUMPDEST 
0x75: V38 = 0x2
0x77: V39 = S[0x2]
0x78: V40 = 0x1
0x7a: V41 = 0xa0
0x7c: V42 = 0x2
0x7e: V43 = EXP 0x2 0xa0
0x7f: V44 = SUB 0x10000000000000000000000000000000000000000 0x1
0x80: V45 = AND 0xffffffffffffffffffffffffffffffffffffffff V39
0x81: V46 = CALLVALUE
0x83: V47 = ISZERO V46
0x84: V48 = 0x8fc
0x87: V49 = MUL 0x8fc V47
0x89: V50 = 0x40
0x8b: V51 = M[0x40]
0x8c: V52 = 0x0
0x8e: V53 = 0x40
0x90: V54 = M[0x40]
0x93: V55 = SUB V51 V54
0x98: V56 = CALL V49 V45 V46 V54 V55 V54 0x0
0x9e: V57 = ISZERO V56
0x9f: V58 = ISZERO V57
0xa0: V59 = 0xa8
0xa3: JUMPI 0xa8 V58
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xa4
[0xa4:0xa7]
---
Predecessors: [0x74]
Successors: []
---
0xa4 PUSH1 0x0
0xa6 DUP1
0xa7 REVERT
---
0xa4: V60 = 0x0
0xa7: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xa8
[0xa8:0x112]
---
Predecessors: [0x74]
Successors: []
---
0xa8 JUMPDEST
0xa9 PUSH32 0x69b31548dea9b3b707b4dff357d326e3e9348b24e7a6080a218a6edeeec48f9b
0xca CALLER
0xcb CALLVALUE
0xcc PUSH1 0x0
0xce CALLDATASIZE
0xcf PUSH1 0x40
0xd1 MLOAD
0xd2 PUSH1 0x1
0xd4 PUSH1 0xa0
0xd6 PUSH1 0x2
0xd8 EXP
0xd9 SUB
0xda DUP6
0xdb AND
0xdc DUP2
0xdd MSTORE
0xde PUSH1 0x20
0xe0 DUP2
0xe1 ADD
0xe2 DUP5
0xe3 SWAP1
0xe4 MSTORE
0xe5 PUSH1 0x60
0xe7 PUSH1 0x40
0xe9 DUP3
0xea ADD
0xeb DUP2
0xec DUP2
0xed MSTORE
0xee SWAP1
0xef DUP3
0xf0 ADD
0xf1 DUP4
0xf2 SWAP1
0xf3 MSTORE
0xf4 PUSH1 0x80
0xf6 DUP3
0xf7 ADD
0xf8 DUP5
0xf9 DUP5
0xfa DUP1
0xfb DUP3
0xfc DUP5
0xfd CALLDATACOPY
0xfe DUP3
0xff ADD
0x100 SWAP2
0x101 POP
0x102 POP
0x103 SWAP6
0x104 POP
0x105 POP
0x106 POP
0x107 POP
0x108 POP
0x109 POP
0x10a PUSH1 0x40
0x10c MLOAD
0x10d DUP1
0x10e SWAP2
0x10f SUB
0x110 SWAP1
0x111 LOG1
0x112 STOP
---
0xa8: JUMPDEST 
0xa9: V61 = 0x69b31548dea9b3b707b4dff357d326e3e9348b24e7a6080a218a6edeeec48f9b
0xca: V62 = CALLER
0xcb: V63 = CALLVALUE
0xcc: V64 = 0x0
0xce: V65 = CALLDATASIZE
0xcf: V66 = 0x40
0xd1: V67 = M[0x40]
0xd2: V68 = 0x1
0xd4: V69 = 0xa0
0xd6: V70 = 0x2
0xd8: V71 = EXP 0x2 0xa0
0xd9: V72 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdb: V73 = AND V62 0xffffffffffffffffffffffffffffffffffffffff
0xdd: M[V67] = V73
0xde: V74 = 0x20
0xe1: V75 = ADD V67 0x20
0xe4: M[V75] = V63
0xe5: V76 = 0x60
0xe7: V77 = 0x40
0xea: V78 = ADD V67 0x40
0xed: M[V78] = 0x60
0xf0: V79 = ADD V67 0x60
0xf3: M[V79] = V65
0xf4: V80 = 0x80
0xf7: V81 = ADD V67 0x80
0xfd: CALLDATACOPY V81 0x0 V65
0xff: V82 = ADD V81 V65
0x10a: V83 = 0x40
0x10c: V84 = M[0x40]
0x10f: V85 = SUB V82 V84
0x111: LOG V84 V85 0x69b31548dea9b3b707b4dff357d326e3e9348b24e7a6080a218a6edeeec48f9b
0x112: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x113
[0x113:0x119]
---
Predecessors: [0xd]
Successors: [0x11a, 0x11e]
---
0x113 JUMPDEST
0x114 CALLVALUE
0x115 ISZERO
0x116 PUSH2 0x11e
0x119 JUMPI
---
0x113: JUMPDEST 
0x114: V86 = CALLVALUE
0x115: V87 = ISZERO V86
0x116: V88 = 0x11e
0x119: JUMPI 0x11e V87
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x11a
[0x11a:0x11d]
---
Predecessors: [0x113]
Successors: []
---
0x11a PUSH1 0x0
0x11c DUP1
0x11d REVERT
---
0x11a: V89 = 0x0
0x11d: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x11e
[0x11e:0x125]
---
Predecessors: [0x113]
Successors: [0x1ed]
---
0x11e JUMPDEST
0x11f PUSH2 0x126
0x122 PUSH2 0x1ed
0x125 JUMP
---
0x11e: JUMPDEST 
0x11f: V90 = 0x126
0x122: V91 = 0x1ed
0x125: JUMP 0x1ed
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x126]
Exit stack: [V13, 0x126]

================================

Block 0x126
[0x126:0x127]
---
Predecessors: [0x226, 0x240, 0x2c3, 0x475, 0x4cb]
Successors: []
---
0x126 JUMPDEST
0x127 STOP
---
0x126: JUMPDEST 
0x127: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x128
[0x128:0x12e]
---
Predecessors: [0x27]
Successors: [0x12f, 0x133]
---
0x128 JUMPDEST
0x129 CALLVALUE
0x12a ISZERO
0x12b PUSH2 0x133
0x12e JUMPI
---
0x128: JUMPDEST 
0x129: V92 = CALLVALUE
0x12a: V93 = ISZERO V92
0x12b: V94 = 0x133
0x12e: JUMPI 0x133 V93
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x12f
[0x12f:0x132]
---
Predecessors: [0x128]
Successors: []
---
0x12f PUSH1 0x0
0x131 DUP1
0x132 REVERT
---
0x12f: V95 = 0x0
0x132: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x133
[0x133:0x146]
---
Predecessors: [0x128]
Successors: [0x228]
---
0x133 JUMPDEST
0x134 PUSH2 0x126
0x137 PUSH1 0x1
0x139 PUSH1 0xa0
0x13b PUSH1 0x2
0x13d EXP
0x13e SUB
0x13f PUSH1 0x4
0x141 CALLDATALOAD
0x142 AND
0x143 PUSH2 0x228
0x146 JUMP
---
0x133: JUMPDEST 
0x134: V96 = 0x126
0x137: V97 = 0x1
0x139: V98 = 0xa0
0x13b: V99 = 0x2
0x13d: V100 = EXP 0x2 0xa0
0x13e: V101 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13f: V102 = 0x4
0x141: V103 = CALLDATALOAD 0x4
0x142: V104 = AND V103 0xffffffffffffffffffffffffffffffffffffffff
0x143: V105 = 0x228
0x146: JUMP 0x228
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x126, V104]
Exit stack: [V13, 0x126, V104]

================================

Block 0x147
[0x147:0x14d]
---
Predecessors: [0x32]
Successors: [0x14e, 0x152]
---
0x147 JUMPDEST
0x148 CALLVALUE
0x149 ISZERO
0x14a PUSH2 0x152
0x14d JUMPI
---
0x147: JUMPDEST 
0x148: V106 = CALLVALUE
0x149: V107 = ISZERO V106
0x14a: V108 = 0x152
0x14d: JUMPI 0x152 V107
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x14e
[0x14e:0x151]
---
Predecessors: [0x147]
Successors: []
---
0x14e PUSH1 0x0
0x150 DUP1
0x151 REVERT
---
0x14e: V109 = 0x0
0x151: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x152
[0x152:0x159]
---
Predecessors: [0x147]
Successors: [0x2a8]
---
0x152 JUMPDEST
0x153 PUSH2 0x126
0x156 PUSH2 0x2a8
0x159 JUMP
---
0x152: JUMPDEST 
0x153: V110 = 0x126
0x156: V111 = 0x2a8
0x159: JUMP 0x2a8
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x126]
Exit stack: [V13, 0x126]

================================

Block 0x15a
[0x15a:0x160]
---
Predecessors: [0x3d]
Successors: [0x161, 0x165]
---
0x15a JUMPDEST
0x15b CALLVALUE
0x15c ISZERO
0x15d PUSH2 0x165
0x160 JUMPI
---
0x15a: JUMPDEST 
0x15b: V112 = CALLVALUE
0x15c: V113 = ISZERO V112
0x15d: V114 = 0x165
0x160: JUMPI 0x165 V113
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x161
[0x161:0x164]
---
Predecessors: [0x15a]
Successors: []
---
0x161 PUSH1 0x0
0x163 DUP1
0x164 REVERT
---
0x161: V115 = 0x0
0x164: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x165
[0x165:0x178]
---
Predecessors: [0x15a]
Successors: [0x34f]
---
0x165 JUMPDEST
0x166 PUSH2 0x126
0x169 PUSH1 0x1
0x16b PUSH1 0xa0
0x16d PUSH1 0x2
0x16f EXP
0x170 SUB
0x171 PUSH1 0x4
0x173 CALLDATALOAD
0x174 AND
0x175 PUSH2 0x34f
0x178 JUMP
---
0x165: JUMPDEST 
0x166: V116 = 0x126
0x169: V117 = 0x1
0x16b: V118 = 0xa0
0x16d: V119 = 0x2
0x16f: V120 = EXP 0x2 0xa0
0x170: V121 = SUB 0x10000000000000000000000000000000000000000 0x1
0x171: V122 = 0x4
0x173: V123 = CALLDATALOAD 0x4
0x174: V124 = AND V123 0xffffffffffffffffffffffffffffffffffffffff
0x175: V125 = 0x34f
0x178: JUMP 0x34f
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x126, V124]
Exit stack: [V13, 0x126, V124]

================================

Block 0x179
[0x179:0x17f]
---
Predecessors: [0x48]
Successors: [0x180, 0x184]
---
0x179 JUMPDEST
0x17a CALLVALUE
0x17b ISZERO
0x17c PUSH2 0x184
0x17f JUMPI
---
0x179: JUMPDEST 
0x17a: V126 = CALLVALUE
0x17b: V127 = ISZERO V126
0x17c: V128 = 0x184
0x17f: JUMPI 0x184 V127
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x180
[0x180:0x183]
---
Predecessors: [0x179]
Successors: []
---
0x180 PUSH1 0x0
0x182 DUP1
0x183 REVERT
---
0x180: V129 = 0x0
0x183: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x184
[0x184:0x18b]
---
Predecessors: [0x179]
Successors: [0x47a]
---
0x184 JUMPDEST
0x185 PUSH2 0x18c
0x188 PUSH2 0x47a
0x18b JUMP
---
0x184: JUMPDEST 
0x185: V130 = 0x18c
0x188: V131 = 0x47a
0x18b: JUMP 0x47a
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x18c]
Exit stack: [V13, 0x18c]

================================

Block 0x18c
[0x18c:0x1a7]
---
Predecessors: [0x47a, 0x489, 0x4fa]
Successors: []
---
0x18c JUMPDEST
0x18d PUSH1 0x40
0x18f MLOAD
0x190 PUSH1 0x1
0x192 PUSH1 0xa0
0x194 PUSH1 0x2
0x196 EXP
0x197 SUB
0x198 SWAP1
0x199 SWAP2
0x19a AND
0x19b DUP2
0x19c MSTORE
0x19d PUSH1 0x20
0x19f ADD
0x1a0 PUSH1 0x40
0x1a2 MLOAD
0x1a3 DUP1
0x1a4 SWAP2
0x1a5 SUB
0x1a6 SWAP1
0x1a7 RETURN
---
0x18c: JUMPDEST 
0x18d: V132 = 0x40
0x18f: V133 = M[0x40]
0x190: V134 = 0x1
0x192: V135 = 0xa0
0x194: V136 = 0x2
0x196: V137 = EXP 0x2 0xa0
0x197: V138 = SUB 0x10000000000000000000000000000000000000000 0x1
0x19a: V139 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x19c: M[V133] = V139
0x19d: V140 = 0x20
0x19f: V141 = ADD 0x20 V133
0x1a0: V142 = 0x40
0x1a2: V143 = M[0x40]
0x1a5: V144 = SUB V141 V143
0x1a7: RETURN V143 V144
---
Entry stack: [V13, 0x18c, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x18c]

================================

Block 0x1a8
[0x1a8:0x1ae]
---
Predecessors: [0x53]
Successors: [0x1af, 0x1b3]
---
0x1a8 JUMPDEST
0x1a9 CALLVALUE
0x1aa ISZERO
0x1ab PUSH2 0x1b3
0x1ae JUMPI
---
0x1a8: JUMPDEST 
0x1a9: V145 = CALLVALUE
0x1aa: V146 = ISZERO V145
0x1ab: V147 = 0x1b3
0x1ae: JUMPI 0x1b3 V146
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1af
[0x1af:0x1b2]
---
Predecessors: [0x1a8]
Successors: []
---
0x1af PUSH1 0x0
0x1b1 DUP1
0x1b2 REVERT
---
0x1af: V148 = 0x0
0x1b2: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1b3
[0x1b3:0x1ba]
---
Predecessors: [0x1a8]
Successors: [0x489]
---
0x1b3 JUMPDEST
0x1b4 PUSH2 0x18c
0x1b7 PUSH2 0x489
0x1ba JUMP
---
0x1b3: JUMPDEST 
0x1b4: V149 = 0x18c
0x1b7: V150 = 0x489
0x1ba: JUMP 0x489
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x18c]
Exit stack: [V13, 0x18c]

================================

Block 0x1bb
[0x1bb:0x1c1]
---
Predecessors: [0x5e]
Successors: [0x1c2, 0x1c6]
---
0x1bb JUMPDEST
0x1bc CALLVALUE
0x1bd ISZERO
0x1be PUSH2 0x1c6
0x1c1 JUMPI
---
0x1bb: JUMPDEST 
0x1bc: V151 = CALLVALUE
0x1bd: V152 = ISZERO V151
0x1be: V153 = 0x1c6
0x1c1: JUMPI 0x1c6 V152
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1c2
[0x1c2:0x1c5]
---
Predecessors: [0x1bb]
Successors: []
---
0x1c2 PUSH1 0x0
0x1c4 DUP1
0x1c5 REVERT
---
0x1c2: V154 = 0x0
0x1c5: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1c6
[0x1c6:0x1d9]
---
Predecessors: [0x1bb]
Successors: [0x498]
---
0x1c6 JUMPDEST
0x1c7 PUSH2 0x126
0x1ca PUSH1 0x1
0x1cc PUSH1 0xa0
0x1ce PUSH1 0x2
0x1d0 EXP
0x1d1 SUB
0x1d2 PUSH1 0x4
0x1d4 CALLDATALOAD
0x1d5 AND
0x1d6 PUSH2 0x498
0x1d9 JUMP
---
0x1c6: JUMPDEST 
0x1c7: V155 = 0x126
0x1ca: V156 = 0x1
0x1cc: V157 = 0xa0
0x1ce: V158 = 0x2
0x1d0: V159 = EXP 0x2 0xa0
0x1d1: V160 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d2: V161 = 0x4
0x1d4: V162 = CALLDATALOAD 0x4
0x1d5: V163 = AND V162 0xffffffffffffffffffffffffffffffffffffffff
0x1d6: V164 = 0x498
0x1d9: JUMP 0x498
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x126, V163]
Exit stack: [V13, 0x126, V163]

================================

Block 0x1da
[0x1da:0x1e0]
---
Predecessors: [0x69]
Successors: [0x1e1, 0x1e5]
---
0x1da JUMPDEST
0x1db CALLVALUE
0x1dc ISZERO
0x1dd PUSH2 0x1e5
0x1e0 JUMPI
---
0x1da: JUMPDEST 
0x1db: V165 = CALLVALUE
0x1dc: V166 = ISZERO V165
0x1dd: V167 = 0x1e5
0x1e0: JUMPI 0x1e5 V166
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1e1
[0x1e1:0x1e4]
---
Predecessors: [0x1da]
Successors: []
---
0x1e1 PUSH1 0x0
0x1e3 DUP1
0x1e4 REVERT
---
0x1e1: V168 = 0x0
0x1e4: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1e5
[0x1e5:0x1ec]
---
Predecessors: [0x1da]
Successors: [0x4fa]
---
0x1e5 JUMPDEST
0x1e6 PUSH2 0x18c
0x1e9 PUSH2 0x4fa
0x1ec JUMP
---
0x1e5: JUMPDEST 
0x1e6: V169 = 0x18c
0x1e9: V170 = 0x4fa
0x1ec: JUMP 0x4fa
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x18c]
Exit stack: [V13, 0x18c]

================================

Block 0x1ed
[0x1ed:0x221]
---
Predecessors: [0x11e]
Successors: [0x222, 0x226]
---
0x1ed JUMPDEST
0x1ee PUSH1 0x2
0x1f0 SLOAD
0x1f1 PUSH1 0x1
0x1f3 PUSH1 0xa0
0x1f5 PUSH1 0x2
0x1f7 EXP
0x1f8 SUB
0x1f9 SWAP1
0x1fa DUP2
0x1fb AND
0x1fc SWAP1
0x1fd ADDRESS
0x1fe AND
0x1ff BALANCE
0x200 DUP1
0x201 ISZERO
0x202 PUSH2 0x8fc
0x205 MUL
0x206 SWAP1
0x207 PUSH1 0x40
0x209 MLOAD
0x20a PUSH1 0x0
0x20c PUSH1 0x40
0x20e MLOAD
0x20f DUP1
0x210 DUP4
0x211 SUB
0x212 DUP2
0x213 DUP6
0x214 DUP9
0x215 DUP9
0x216 CALL
0x217 SWAP4
0x218 POP
0x219 POP
0x21a POP
0x21b POP
0x21c ISZERO
0x21d ISZERO
0x21e PUSH2 0x226
0x221 JUMPI
---
0x1ed: JUMPDEST 
0x1ee: V171 = 0x2
0x1f0: V172 = S[0x2]
0x1f1: V173 = 0x1
0x1f3: V174 = 0xa0
0x1f5: V175 = 0x2
0x1f7: V176 = EXP 0x2 0xa0
0x1f8: V177 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1fb: V178 = AND 0xffffffffffffffffffffffffffffffffffffffff V172
0x1fd: V179 = ADDRESS
0x1fe: V180 = AND V179 0xffffffffffffffffffffffffffffffffffffffff
0x1ff: V181 = BALANCE V180
0x201: V182 = ISZERO V181
0x202: V183 = 0x8fc
0x205: V184 = MUL 0x8fc V182
0x207: V185 = 0x40
0x209: V186 = M[0x40]
0x20a: V187 = 0x0
0x20c: V188 = 0x40
0x20e: V189 = M[0x40]
0x211: V190 = SUB V186 V189
0x216: V191 = CALL V184 V178 V181 V189 V190 V189 0x0
0x21c: V192 = ISZERO V191
0x21d: V193 = ISZERO V192
0x21e: V194 = 0x226
0x221: JUMPI 0x226 V193
---
Entry stack: [V13, 0x126]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x126]

================================

Block 0x222
[0x222:0x225]
---
Predecessors: [0x1ed]
Successors: []
---
0x222 PUSH1 0x0
0x224 DUP1
0x225 REVERT
---
0x222: V195 = 0x0
0x225: REVERT 0x0 0x0
---
Entry stack: [V13, 0x126]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x126]

================================

Block 0x226
[0x226:0x227]
---
Predecessors: [0x1ed]
Successors: [0x126]
---
0x226 JUMPDEST
0x227 JUMP
---
0x226: JUMPDEST 
0x227: JUMP 0x126
---
Entry stack: [V13, 0x126]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x228
[0x228:0x23e]
---
Predecessors: [0x133]
Successors: [0x23f, 0x240]
---
0x228 JUMPDEST
0x229 PUSH1 0x0
0x22b SLOAD
0x22c CALLER
0x22d PUSH1 0x1
0x22f PUSH1 0xa0
0x231 PUSH1 0x2
0x233 EXP
0x234 SUB
0x235 SWAP1
0x236 DUP2
0x237 AND
0x238 SWAP2
0x239 AND
0x23a EQ
0x23b PUSH2 0x240
0x23e JUMPI
---
0x228: JUMPDEST 
0x229: V196 = 0x0
0x22b: V197 = S[0x0]
0x22c: V198 = CALLER
0x22d: V199 = 0x1
0x22f: V200 = 0xa0
0x231: V201 = 0x2
0x233: V202 = EXP 0x2 0xa0
0x234: V203 = SUB 0x10000000000000000000000000000000000000000 0x1
0x237: V204 = AND 0xffffffffffffffffffffffffffffffffffffffff V198
0x239: V205 = AND V197 0xffffffffffffffffffffffffffffffffffffffff
0x23a: V206 = EQ V205 V204
0x23b: V207 = 0x240
0x23e: JUMPI 0x240 V206
---
Entry stack: [V13, 0x126, V104]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x126, V104]

================================

Block 0x23f
[0x23f:0x23f]
---
Predecessors: [0x228]
Successors: []
---
0x23f INVALID
---
0x23f: INVALID 
---
Entry stack: [V13, 0x126, V104]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x126, V104]

================================

Block 0x240
[0x240:0x2a7]
---
Predecessors: [0x228]
Successors: [0x126]
---
0x240 JUMPDEST
0x241 PUSH1 0x2
0x243 DUP1
0x244 SLOAD
0x245 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x25a NOT
0x25b AND
0x25c PUSH1 0x1
0x25e PUSH1 0xa0
0x260 PUSH1 0x2
0x262 EXP
0x263 SUB
0x264 DUP4
0x265 AND
0x266 OR
0x267 SWAP1
0x268 SSTORE
0x269 PUSH32 0x69c5cdd51e61f877902f231a29710a03eddc5b0288b60c61d2b870bdfed5c4de
0x28a DUP2
0x28b PUSH1 0x40
0x28d MLOAD
0x28e PUSH1 0x1
0x290 PUSH1 0xa0
0x292 PUSH1 0x2
0x294 EXP
0x295 SUB
0x296 SWAP1
0x297 SWAP2
0x298 AND
0x299 DUP2
0x29a MSTORE
0x29b PUSH1 0x20
0x29d ADD
0x29e PUSH1 0x40
0x2a0 MLOAD
0x2a1 DUP1
0x2a2 SWAP2
0x2a3 SUB
0x2a4 SWAP1
0x2a5 LOG1
0x2a6 POP
0x2a7 JUMP
---
0x240: JUMPDEST 
0x241: V208 = 0x2
0x244: V209 = S[0x2]
0x245: V210 = 0xffffffffffffffffffffffffffffffffffffffff
0x25a: V211 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x25b: V212 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V209
0x25c: V213 = 0x1
0x25e: V214 = 0xa0
0x260: V215 = 0x2
0x262: V216 = EXP 0x2 0xa0
0x263: V217 = SUB 0x10000000000000000000000000000000000000000 0x1
0x265: V218 = AND V104 0xffffffffffffffffffffffffffffffffffffffff
0x266: V219 = OR V218 V212
0x268: S[0x2] = V219
0x269: V220 = 0x69c5cdd51e61f877902f231a29710a03eddc5b0288b60c61d2b870bdfed5c4de
0x28b: V221 = 0x40
0x28d: V222 = M[0x40]
0x28e: V223 = 0x1
0x290: V224 = 0xa0
0x292: V225 = 0x2
0x294: V226 = EXP 0x2 0xa0
0x295: V227 = SUB 0x10000000000000000000000000000000000000000 0x1
0x298: V228 = AND V104 0xffffffffffffffffffffffffffffffffffffffff
0x29a: M[V222] = V228
0x29b: V229 = 0x20
0x29d: V230 = ADD 0x20 V222
0x29e: V231 = 0x40
0x2a0: V232 = M[0x40]
0x2a3: V233 = SUB V230 V232
0x2a5: LOG V232 V233 0x69c5cdd51e61f877902f231a29710a03eddc5b0288b60c61d2b870bdfed5c4de
0x2a7: JUMP 0x126
---
Entry stack: [V13, 0x126, V104]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x2a8
[0x2a8:0x2be]
---
Predecessors: [0x152]
Successors: [0x2bf, 0x2c3]
---
0x2a8 JUMPDEST
0x2a9 PUSH1 0x1
0x2ab SLOAD
0x2ac CALLER
0x2ad PUSH1 0x1
0x2af PUSH1 0xa0
0x2b1 PUSH1 0x2
0x2b3 EXP
0x2b4 SUB
0x2b5 SWAP1
0x2b6 DUP2
0x2b7 AND
0x2b8 SWAP2
0x2b9 AND
0x2ba EQ
0x2bb PUSH2 0x2c3
0x2be JUMPI
---
0x2a8: JUMPDEST 
0x2a9: V234 = 0x1
0x2ab: V235 = S[0x1]
0x2ac: V236 = CALLER
0x2ad: V237 = 0x1
0x2af: V238 = 0xa0
0x2b1: V239 = 0x2
0x2b3: V240 = EXP 0x2 0xa0
0x2b4: V241 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b7: V242 = AND 0xffffffffffffffffffffffffffffffffffffffff V236
0x2b9: V243 = AND V235 0xffffffffffffffffffffffffffffffffffffffff
0x2ba: V244 = EQ V243 V242
0x2bb: V245 = 0x2c3
0x2be: JUMPI 0x2c3 V244
---
Entry stack: [V13, 0x126]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x126]

================================

Block 0x2bf
[0x2bf:0x2c2]
---
Predecessors: [0x2a8]
Successors: []
---
0x2bf PUSH1 0x0
0x2c1 DUP1
0x2c2 REVERT
---
0x2bf: V246 = 0x0
0x2c2: REVERT 0x0 0x0
---
Entry stack: [V13, 0x126]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x126]

================================

Block 0x2c3
[0x2c3:0x34e]
---
Predecessors: [0x2a8]
Successors: [0x126]
---
0x2c3 JUMPDEST
0x2c4 PUSH1 0x0
0x2c6 SLOAD
0x2c7 PUSH1 0x1
0x2c9 SLOAD
0x2ca PUSH32 0x343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a
0x2eb SWAP2
0x2ec PUSH1 0x1
0x2ee PUSH1 0xa0
0x2f0 PUSH1 0x2
0x2f2 EXP
0x2f3 SUB
0x2f4 SWAP1
0x2f5 DUP2
0x2f6 AND
0x2f7 SWAP2
0x2f8 AND
0x2f9 PUSH1 0x40
0x2fb MLOAD
0x2fc PUSH1 0x1
0x2fe PUSH1 0xa0
0x300 PUSH1 0x2
0x302 EXP
0x303 SUB
0x304 SWAP3
0x305 DUP4
0x306 AND
0x307 DUP2
0x308 MSTORE
0x309 SWAP2
0x30a AND
0x30b PUSH1 0x20
0x30d DUP3
0x30e ADD
0x30f MSTORE
0x310 PUSH1 0x40
0x312 SWAP1
0x313 DUP2
0x314 ADD
0x315 SWAP1
0x316 MLOAD
0x317 DUP1
0x318 SWAP2
0x319 SUB
0x31a SWAP1
0x31b LOG1
0x31c PUSH1 0x1
0x31e DUP1
0x31f SLOAD
0x320 PUSH1 0x0
0x322 DUP1
0x323 SLOAD
0x324 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x339 NOT
0x33a SWAP1
0x33b DUP2
0x33c AND
0x33d PUSH1 0x1
0x33f PUSH1 0xa0
0x341 PUSH1 0x2
0x343 EXP
0x344 SUB
0x345 DUP5
0x346 AND
0x347 OR
0x348 SWAP1
0x349 SWAP2
0x34a SSTORE
0x34b AND
0x34c SWAP1
0x34d SSTORE
0x34e JUMP
---
0x2c3: JUMPDEST 
0x2c4: V247 = 0x0
0x2c6: V248 = S[0x0]
0x2c7: V249 = 0x1
0x2c9: V250 = S[0x1]
0x2ca: V251 = 0x343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a
0x2ec: V252 = 0x1
0x2ee: V253 = 0xa0
0x2f0: V254 = 0x2
0x2f2: V255 = EXP 0x2 0xa0
0x2f3: V256 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f6: V257 = AND 0xffffffffffffffffffffffffffffffffffffffff V248
0x2f8: V258 = AND V250 0xffffffffffffffffffffffffffffffffffffffff
0x2f9: V259 = 0x40
0x2fb: V260 = M[0x40]
0x2fc: V261 = 0x1
0x2fe: V262 = 0xa0
0x300: V263 = 0x2
0x302: V264 = EXP 0x2 0xa0
0x303: V265 = SUB 0x10000000000000000000000000000000000000000 0x1
0x306: V266 = AND 0xffffffffffffffffffffffffffffffffffffffff V257
0x308: M[V260] = V266
0x30a: V267 = AND 0xffffffffffffffffffffffffffffffffffffffff V258
0x30b: V268 = 0x20
0x30e: V269 = ADD V260 0x20
0x30f: M[V269] = V267
0x310: V270 = 0x40
0x314: V271 = ADD 0x40 V260
0x316: V272 = M[0x40]
0x319: V273 = SUB V271 V272
0x31b: LOG V272 V273 0x343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a
0x31c: V274 = 0x1
0x31f: V275 = S[0x1]
0x320: V276 = 0x0
0x323: V277 = S[0x0]
0x324: V278 = 0xffffffffffffffffffffffffffffffffffffffff
0x339: V279 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x33c: V280 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V277
0x33d: V281 = 0x1
0x33f: V282 = 0xa0
0x341: V283 = 0x2
0x343: V284 = EXP 0x2 0xa0
0x344: V285 = SUB 0x10000000000000000000000000000000000000000 0x1
0x346: V286 = AND V275 0xffffffffffffffffffffffffffffffffffffffff
0x347: V287 = OR V286 V280
0x34a: S[0x0] = V287
0x34b: V288 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V275
0x34d: S[0x1] = V288
0x34e: JUMP 0x126
---
Entry stack: [V13, 0x126]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x34f
[0x34f:0x368]
---
Predecessors: [0x165]
Successors: [0x369, 0x36a]
---
0x34f JUMPDEST
0x350 PUSH1 0x0
0x352 DUP1
0x353 SLOAD
0x354 DUP2
0x355 SWAP1
0x356 CALLER
0x357 PUSH1 0x1
0x359 PUSH1 0xa0
0x35b PUSH1 0x2
0x35d EXP
0x35e SUB
0x35f SWAP1
0x360 DUP2
0x361 AND
0x362 SWAP2
0x363 AND
0x364 EQ
0x365 PUSH2 0x36a
0x368 JUMPI
---
0x34f: JUMPDEST 
0x350: V289 = 0x0
0x353: V290 = S[0x0]
0x356: V291 = CALLER
0x357: V292 = 0x1
0x359: V293 = 0xa0
0x35b: V294 = 0x2
0x35d: V295 = EXP 0x2 0xa0
0x35e: V296 = SUB 0x10000000000000000000000000000000000000000 0x1
0x361: V297 = AND 0xffffffffffffffffffffffffffffffffffffffff V291
0x363: V298 = AND V290 0xffffffffffffffffffffffffffffffffffffffff
0x364: V299 = EQ V298 V297
0x365: V300 = 0x36a
0x368: JUMPI 0x36a V299
---
Entry stack: [V13, 0x126, V124]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V13, 0x126, V124, 0x0, 0x0]

================================

Block 0x369
[0x369:0x369]
---
Predecessors: [0x34f]
Successors: []
---
0x369 INVALID
---
0x369: INVALID 
---
Entry stack: [V13, 0x126, V124, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x126, V124, 0x0, 0x0]

================================

Block 0x36a
[0x36a:0x3bf]
---
Predecessors: [0x34f]
Successors: [0x3c0, 0x3c4]
---
0x36a JUMPDEST
0x36b DUP3
0x36c SWAP2
0x36d POP
0x36e DUP2
0x36f PUSH1 0x1
0x371 PUSH1 0xa0
0x373 PUSH1 0x2
0x375 EXP
0x376 SUB
0x377 AND
0x378 PUSH4 0x70a08231
0x37d ADDRESS
0x37e PUSH1 0x0
0x380 PUSH1 0x40
0x382 MLOAD
0x383 PUSH1 0x20
0x385 ADD
0x386 MSTORE
0x387 PUSH1 0x40
0x389 MLOAD
0x38a PUSH1 0xe0
0x38c PUSH1 0x2
0x38e EXP
0x38f PUSH4 0xffffffff
0x394 DUP5
0x395 AND
0x396 MUL
0x397 DUP2
0x398 MSTORE
0x399 PUSH1 0x1
0x39b PUSH1 0xa0
0x39d PUSH1 0x2
0x39f EXP
0x3a0 SUB
0x3a1 SWAP1
0x3a2 SWAP2
0x3a3 AND
0x3a4 PUSH1 0x4
0x3a6 DUP3
0x3a7 ADD
0x3a8 MSTORE
0x3a9 PUSH1 0x24
0x3ab ADD
0x3ac PUSH1 0x20
0x3ae PUSH1 0x40
0x3b0 MLOAD
0x3b1 DUP1
0x3b2 DUP4
0x3b3 SUB
0x3b4 DUP2
0x3b5 PUSH1 0x0
0x3b7 DUP8
0x3b8 DUP1
0x3b9 EXTCODESIZE
0x3ba ISZERO
0x3bb ISZERO
0x3bc PUSH2 0x3c4
0x3bf JUMPI
---
0x36a: JUMPDEST 
0x36f: V301 = 0x1
0x371: V302 = 0xa0
0x373: V303 = 0x2
0x375: V304 = EXP 0x2 0xa0
0x376: V305 = SUB 0x10000000000000000000000000000000000000000 0x1
0x377: V306 = AND 0xffffffffffffffffffffffffffffffffffffffff V124
0x378: V307 = 0x70a08231
0x37d: V308 = ADDRESS
0x37e: V309 = 0x0
0x380: V310 = 0x40
0x382: V311 = M[0x40]
0x383: V312 = 0x20
0x385: V313 = ADD 0x20 V311
0x386: M[V313] = 0x0
0x387: V314 = 0x40
0x389: V315 = M[0x40]
0x38a: V316 = 0xe0
0x38c: V317 = 0x2
0x38e: V318 = EXP 0x2 0xe0
0x38f: V319 = 0xffffffff
0x395: V320 = AND 0x70a08231 0xffffffff
0x396: V321 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x398: M[V315] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x399: V322 = 0x1
0x39b: V323 = 0xa0
0x39d: V324 = 0x2
0x39f: V325 = EXP 0x2 0xa0
0x3a0: V326 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a3: V327 = AND V308 0xffffffffffffffffffffffffffffffffffffffff
0x3a4: V328 = 0x4
0x3a7: V329 = ADD V315 0x4
0x3a8: M[V329] = V327
0x3a9: V330 = 0x24
0x3ab: V331 = ADD 0x24 V315
0x3ac: V332 = 0x20
0x3ae: V333 = 0x40
0x3b0: V334 = M[0x40]
0x3b3: V335 = SUB V331 V334
0x3b5: V336 = 0x0
0x3b9: V337 = EXTCODESIZE V306
0x3ba: V338 = ISZERO V337
0x3bb: V339 = ISZERO V338
0x3bc: V340 = 0x3c4
0x3bf: JUMPI 0x3c4 V339
---
Entry stack: [V13, 0x126, V124, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S2, S0, V306, 0x70a08231, V331, 0x20, V334, V335, V334, 0x0, V306]
Exit stack: [V13, 0x126, V124, V124, 0x0, V306, 0x70a08231, V331, 0x20, V334, V335, V334, 0x0, V306]

================================

Block 0x3c0
[0x3c0:0x3c3]
---
Predecessors: [0x36a]
Successors: []
---
0x3c0 PUSH1 0x0
0x3c2 DUP1
0x3c3 REVERT
---
0x3c0: V341 = 0x0
0x3c3: REVERT 0x0 0x0
---
Entry stack: [V13, 0x126, V124, V124, 0x0, V306, 0x70a08231, V331, 0x20, V334, V335, V334, 0x0, V306]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x126, V124, V124, 0x0, V306, 0x70a08231, V331, 0x20, V334, V335, V334, 0x0, V306]

================================

Block 0x3c4
[0x3c4:0x3d0]
---
Predecessors: [0x36a]
Successors: [0x3d1, 0x3d5]
---
0x3c4 JUMPDEST
0x3c5 PUSH2 0x2c6
0x3c8 GAS
0x3c9 SUB
0x3ca CALL
0x3cb ISZERO
0x3cc ISZERO
0x3cd PUSH2 0x3d5
0x3d0 JUMPI
---
0x3c4: JUMPDEST 
0x3c5: V342 = 0x2c6
0x3c8: V343 = GAS
0x3c9: V344 = SUB V343 0x2c6
0x3ca: V345 = CALL V344 V306 0x0 V334 V335 V334 0x20
0x3cb: V346 = ISZERO V345
0x3cc: V347 = ISZERO V346
0x3cd: V348 = 0x3d5
0x3d0: JUMPI 0x3d5 V347
---
Entry stack: [V13, 0x126, V124, V124, 0x0, V306, 0x70a08231, V331, 0x20, V334, V335, V334, 0x0, V306]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x126, V124, V124, 0x0, V306, 0x70a08231, V331]

================================

Block 0x3d1
[0x3d1:0x3d4]
---
Predecessors: [0x3c4]
Successors: []
---
0x3d1 PUSH1 0x0
0x3d3 DUP1
0x3d4 REVERT
---
0x3d1: V349 = 0x0
0x3d4: REVERT 0x0 0x0
---
Entry stack: [V13, 0x126, V124, V124, 0x0, V306, 0x70a08231, V331]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x126, V124, V124, 0x0, V306, 0x70a08231, V331]

================================

Block 0x3d5
[0x3d5:0x3e7]
---
Predecessors: [0x3c4]
Successors: [0x3e8, 0x3ec]
---
0x3d5 JUMPDEST
0x3d6 POP
0x3d7 POP
0x3d8 POP
0x3d9 PUSH1 0x40
0x3db MLOAD
0x3dc DUP1
0x3dd MLOAD
0x3de SWAP2
0x3df POP
0x3e0 POP
0x3e1 DUP1
0x3e2 ISZERO
0x3e3 ISZERO
0x3e4 PUSH2 0x3ec
0x3e7 JUMPI
---
0x3d5: JUMPDEST 
0x3d9: V350 = 0x40
0x3db: V351 = M[0x40]
0x3dd: V352 = M[V351]
0x3e2: V353 = ISZERO V352
0x3e3: V354 = ISZERO V353
0x3e4: V355 = 0x3ec
0x3e7: JUMPI 0x3ec V354
---
Entry stack: [V13, 0x126, V124, V124, 0x0, V306, 0x70a08231, V331]
Stack pops: 4
Stack additions: [V352]
Exit stack: [V13, 0x126, V124, V124, V352]

================================

Block 0x3e8
[0x3e8:0x3eb]
---
Predecessors: [0x3d5]
Successors: [0x475]
---
0x3e8 PUSH2 0x475
0x3eb JUMP
---
0x3e8: V356 = 0x475
0x3eb: JUMP 0x475
---
Entry stack: [V13, 0x126, V124, V124, V352]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x126, V124, V124, V352]

================================

Block 0x3ec
[0x3ec:0x44a]
---
Predecessors: [0x3d5]
Successors: [0x44b, 0x44f]
---
0x3ec JUMPDEST
0x3ed PUSH1 0x2
0x3ef SLOAD
0x3f0 PUSH1 0x1
0x3f2 PUSH1 0xa0
0x3f4 PUSH1 0x2
0x3f6 EXP
0x3f7 SUB
0x3f8 DUP1
0x3f9 DUP5
0x3fa AND
0x3fb SWAP2
0x3fc PUSH4 0xa9059cbb
0x401 SWAP2
0x402 AND
0x403 DUP4
0x404 PUSH1 0x0
0x406 PUSH1 0x40
0x408 MLOAD
0x409 PUSH1 0x20
0x40b ADD
0x40c MSTORE
0x40d PUSH1 0x40
0x40f MLOAD
0x410 PUSH1 0xe0
0x412 PUSH1 0x2
0x414 EXP
0x415 PUSH4 0xffffffff
0x41a DUP6
0x41b AND
0x41c MUL
0x41d DUP2
0x41e MSTORE
0x41f PUSH1 0x1
0x421 PUSH1 0xa0
0x423 PUSH1 0x2
0x425 EXP
0x426 SUB
0x427 SWAP1
0x428 SWAP3
0x429 AND
0x42a PUSH1 0x4
0x42c DUP4
0x42d ADD
0x42e MSTORE
0x42f PUSH1 0x24
0x431 DUP3
0x432 ADD
0x433 MSTORE
0x434 PUSH1 0x44
0x436 ADD
0x437 PUSH1 0x20
0x439 PUSH1 0x40
0x43b MLOAD
0x43c DUP1
0x43d DUP4
0x43e SUB
0x43f DUP2
0x440 PUSH1 0x0
0x442 DUP8
0x443 DUP1
0x444 EXTCODESIZE
0x445 ISZERO
0x446 ISZERO
0x447 PUSH2 0x44f
0x44a JUMPI
---
0x3ec: JUMPDEST 
0x3ed: V357 = 0x2
0x3ef: V358 = S[0x2]
0x3f0: V359 = 0x1
0x3f2: V360 = 0xa0
0x3f4: V361 = 0x2
0x3f6: V362 = EXP 0x2 0xa0
0x3f7: V363 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3fa: V364 = AND V124 0xffffffffffffffffffffffffffffffffffffffff
0x3fc: V365 = 0xa9059cbb
0x402: V366 = AND 0xffffffffffffffffffffffffffffffffffffffff V358
0x404: V367 = 0x0
0x406: V368 = 0x40
0x408: V369 = M[0x40]
0x409: V370 = 0x20
0x40b: V371 = ADD 0x20 V369
0x40c: M[V371] = 0x0
0x40d: V372 = 0x40
0x40f: V373 = M[0x40]
0x410: V374 = 0xe0
0x412: V375 = 0x2
0x414: V376 = EXP 0x2 0xe0
0x415: V377 = 0xffffffff
0x41b: V378 = AND 0xa9059cbb 0xffffffff
0x41c: V379 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x41e: M[V373] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x41f: V380 = 0x1
0x421: V381 = 0xa0
0x423: V382 = 0x2
0x425: V383 = EXP 0x2 0xa0
0x426: V384 = SUB 0x10000000000000000000000000000000000000000 0x1
0x429: V385 = AND V366 0xffffffffffffffffffffffffffffffffffffffff
0x42a: V386 = 0x4
0x42d: V387 = ADD V373 0x4
0x42e: M[V387] = V385
0x42f: V388 = 0x24
0x432: V389 = ADD V373 0x24
0x433: M[V389] = V352
0x434: V390 = 0x44
0x436: V391 = ADD 0x44 V373
0x437: V392 = 0x20
0x439: V393 = 0x40
0x43b: V394 = M[0x40]
0x43e: V395 = SUB V391 V394
0x440: V396 = 0x0
0x444: V397 = EXTCODESIZE V364
0x445: V398 = ISZERO V397
0x446: V399 = ISZERO V398
0x447: V400 = 0x44f
0x44a: JUMPI 0x44f V399
---
Entry stack: [V13, 0x126, V124, V124, V352]
Stack pops: 2
Stack additions: [S1, S0, V364, 0xa9059cbb, V391, 0x20, V394, V395, V394, 0x0, V364]
Exit stack: [V13, 0x126, V124, V124, V352, V364, 0xa9059cbb, V391, 0x20, V394, V395, V394, 0x0, V364]

================================

Block 0x44b
[0x44b:0x44e]
---
Predecessors: [0x3ec]
Successors: []
---
0x44b PUSH1 0x0
0x44d DUP1
0x44e REVERT
---
0x44b: V401 = 0x0
0x44e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x126, V124, V124, V352, V364, 0xa9059cbb, V391, 0x20, V394, V395, V394, 0x0, V364]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x126, V124, V124, V352, V364, 0xa9059cbb, V391, 0x20, V394, V395, V394, 0x0, V364]

================================

Block 0x44f
[0x44f:0x45b]
---
Predecessors: [0x3ec]
Successors: [0x45c, 0x460]
---
0x44f JUMPDEST
0x450 PUSH2 0x2c6
0x453 GAS
0x454 SUB
0x455 CALL
0x456 ISZERO
0x457 ISZERO
0x458 PUSH2 0x460
0x45b JUMPI
---
0x44f: JUMPDEST 
0x450: V402 = 0x2c6
0x453: V403 = GAS
0x454: V404 = SUB V403 0x2c6
0x455: V405 = CALL V404 V364 0x0 V394 V395 V394 0x20
0x456: V406 = ISZERO V405
0x457: V407 = ISZERO V406
0x458: V408 = 0x460
0x45b: JUMPI 0x460 V407
---
Entry stack: [V13, 0x126, V124, V124, V352, V364, 0xa9059cbb, V391, 0x20, V394, V395, V394, 0x0, V364]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x126, V124, V124, V352, V364, 0xa9059cbb, V391]

================================

Block 0x45c
[0x45c:0x45f]
---
Predecessors: [0x44f]
Successors: []
---
0x45c PUSH1 0x0
0x45e DUP1
0x45f REVERT
---
0x45c: V409 = 0x0
0x45f: REVERT 0x0 0x0
---
Entry stack: [V13, 0x126, V124, V124, V352, V364, 0xa9059cbb, V391]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x126, V124, V124, V352, V364, 0xa9059cbb, V391]

================================

Block 0x460
[0x460:0x470]
---
Predecessors: [0x44f]
Successors: [0x471, 0x475]
---
0x460 JUMPDEST
0x461 POP
0x462 POP
0x463 POP
0x464 PUSH1 0x40
0x466 MLOAD
0x467 DUP1
0x468 MLOAD
0x469 SWAP1
0x46a POP
0x46b ISZERO
0x46c ISZERO
0x46d PUSH2 0x475
0x470 JUMPI
---
0x460: JUMPDEST 
0x464: V410 = 0x40
0x466: V411 = M[0x40]
0x468: V412 = M[V411]
0x46b: V413 = ISZERO V412
0x46c: V414 = ISZERO V413
0x46d: V415 = 0x475
0x470: JUMPI 0x475 V414
---
Entry stack: [V13, 0x126, V124, V124, V352, V364, 0xa9059cbb, V391]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0x126, V124, V124, V352]

================================

Block 0x471
[0x471:0x474]
---
Predecessors: [0x460]
Successors: []
---
0x471 PUSH1 0x0
0x473 DUP1
0x474 REVERT
---
0x471: V416 = 0x0
0x474: REVERT 0x0 0x0
---
Entry stack: [V13, 0x126, V124, V124, V352]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x126, V124, V124, V352]

================================

Block 0x475
[0x475:0x479]
---
Predecessors: [0x3e8, 0x460]
Successors: [0x126]
---
0x475 JUMPDEST
0x476 POP
0x477 POP
0x478 POP
0x479 JUMP
---
0x475: JUMPDEST 
0x479: JUMP 0x126
---
Entry stack: [V13, 0x126, V124, V124, V352]
Stack pops: 4
Stack additions: []
Exit stack: [V13]

================================

Block 0x47a
[0x47a:0x488]
---
Predecessors: [0x184]
Successors: [0x18c]
---
0x47a JUMPDEST
0x47b PUSH1 0x0
0x47d SLOAD
0x47e PUSH1 0x1
0x480 PUSH1 0xa0
0x482 PUSH1 0x2
0x484 EXP
0x485 SUB
0x486 AND
0x487 DUP2
0x488 JUMP
---
0x47a: JUMPDEST 
0x47b: V417 = 0x0
0x47d: V418 = S[0x0]
0x47e: V419 = 0x1
0x480: V420 = 0xa0
0x482: V421 = 0x2
0x484: V422 = EXP 0x2 0xa0
0x485: V423 = SUB 0x10000000000000000000000000000000000000000 0x1
0x486: V424 = AND 0xffffffffffffffffffffffffffffffffffffffff V418
0x488: JUMP 0x18c
---
Entry stack: [V13, 0x18c]
Stack pops: 1
Stack additions: [S0, V424]
Exit stack: [V13, 0x18c, V424]

================================

Block 0x489
[0x489:0x497]
---
Predecessors: [0x1b3]
Successors: [0x18c]
---
0x489 JUMPDEST
0x48a PUSH1 0x1
0x48c SLOAD
0x48d PUSH1 0x1
0x48f PUSH1 0xa0
0x491 PUSH1 0x2
0x493 EXP
0x494 SUB
0x495 AND
0x496 DUP2
0x497 JUMP
---
0x489: JUMPDEST 
0x48a: V425 = 0x1
0x48c: V426 = S[0x1]
0x48d: V427 = 0x1
0x48f: V428 = 0xa0
0x491: V429 = 0x2
0x493: V430 = EXP 0x2 0xa0
0x494: V431 = SUB 0x10000000000000000000000000000000000000000 0x1
0x495: V432 = AND 0xffffffffffffffffffffffffffffffffffffffff V426
0x497: JUMP 0x18c
---
Entry stack: [V13, 0x18c]
Stack pops: 1
Stack additions: [S0, V432]
Exit stack: [V13, 0x18c, V432]

================================

Block 0x498
[0x498:0x4ae]
---
Predecessors: [0x1c6]
Successors: [0x4af, 0x4b0]
---
0x498 JUMPDEST
0x499 PUSH1 0x0
0x49b SLOAD
0x49c CALLER
0x49d PUSH1 0x1
0x49f PUSH1 0xa0
0x4a1 PUSH1 0x2
0x4a3 EXP
0x4a4 SUB
0x4a5 SWAP1
0x4a6 DUP2
0x4a7 AND
0x4a8 SWAP2
0x4a9 AND
0x4aa EQ
0x4ab PUSH2 0x4b0
0x4ae JUMPI
---
0x498: JUMPDEST 
0x499: V433 = 0x0
0x49b: V434 = S[0x0]
0x49c: V435 = CALLER
0x49d: V436 = 0x1
0x49f: V437 = 0xa0
0x4a1: V438 = 0x2
0x4a3: V439 = EXP 0x2 0xa0
0x4a4: V440 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4a7: V441 = AND 0xffffffffffffffffffffffffffffffffffffffff V435
0x4a9: V442 = AND V434 0xffffffffffffffffffffffffffffffffffffffff
0x4aa: V443 = EQ V442 V441
0x4ab: V444 = 0x4b0
0x4ae: JUMPI 0x4b0 V443
---
Entry stack: [V13, 0x126, V163]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x126, V163]

================================

Block 0x4af
[0x4af:0x4af]
---
Predecessors: [0x498]
Successors: []
---
0x4af INVALID
---
0x4af: INVALID 
---
Entry stack: [V13, 0x126, V163]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x126, V163]

================================

Block 0x4b0
[0x4b0:0x4c6]
---
Predecessors: [0x498]
Successors: [0x4c7, 0x4cb]
---
0x4b0 JUMPDEST
0x4b1 PUSH1 0x0
0x4b3 SLOAD
0x4b4 PUSH1 0x1
0x4b6 PUSH1 0xa0
0x4b8 PUSH1 0x2
0x4ba EXP
0x4bb SUB
0x4bc DUP3
0x4bd DUP2
0x4be AND
0x4bf SWAP2
0x4c0 AND
0x4c1 EQ
0x4c2 ISZERO
0x4c3 PUSH2 0x4cb
0x4c6 JUMPI
---
0x4b0: JUMPDEST 
0x4b1: V445 = 0x0
0x4b3: V446 = S[0x0]
0x4b4: V447 = 0x1
0x4b6: V448 = 0xa0
0x4b8: V449 = 0x2
0x4ba: V450 = EXP 0x2 0xa0
0x4bb: V451 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4be: V452 = AND 0xffffffffffffffffffffffffffffffffffffffff V163
0x4c0: V453 = AND V446 0xffffffffffffffffffffffffffffffffffffffff
0x4c1: V454 = EQ V453 V452
0x4c2: V455 = ISZERO V454
0x4c3: V456 = 0x4cb
0x4c6: JUMPI 0x4cb V455
---
Entry stack: [V13, 0x126, V163]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x126, V163]

================================

Block 0x4c7
[0x4c7:0x4ca]
---
Predecessors: [0x4b0]
Successors: []
---
0x4c7 PUSH1 0x0
0x4c9 DUP1
0x4ca REVERT
---
0x4c7: V457 = 0x0
0x4ca: REVERT 0x0 0x0
---
Entry stack: [V13, 0x126, V163]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x126, V163]

================================

Block 0x4cb
[0x4cb:0x4f9]
---
Predecessors: [0x4b0]
Successors: [0x126]
---
0x4cb JUMPDEST
0x4cc PUSH1 0x1
0x4ce DUP1
0x4cf SLOAD
0x4d0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4e5 NOT
0x4e6 AND
0x4e7 PUSH1 0x1
0x4e9 PUSH1 0xa0
0x4eb PUSH1 0x2
0x4ed EXP
0x4ee SUB
0x4ef SWAP3
0x4f0 SWAP1
0x4f1 SWAP3
0x4f2 AND
0x4f3 SWAP2
0x4f4 SWAP1
0x4f5 SWAP2
0x4f6 OR
0x4f7 SWAP1
0x4f8 SSTORE
0x4f9 JUMP
---
0x4cb: JUMPDEST 
0x4cc: V458 = 0x1
0x4cf: V459 = S[0x1]
0x4d0: V460 = 0xffffffffffffffffffffffffffffffffffffffff
0x4e5: V461 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x4e6: V462 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V459
0x4e7: V463 = 0x1
0x4e9: V464 = 0xa0
0x4eb: V465 = 0x2
0x4ed: V466 = EXP 0x2 0xa0
0x4ee: V467 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f2: V468 = AND 0xffffffffffffffffffffffffffffffffffffffff V163
0x4f6: V469 = OR V468 V462
0x4f8: S[0x1] = V469
0x4f9: JUMP 0x126
---
Entry stack: [V13, 0x126, V163]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x4fa
[0x4fa:0x508]
---
Predecessors: [0x1e5]
Successors: [0x18c]
---
0x4fa JUMPDEST
0x4fb PUSH1 0x2
0x4fd SLOAD
0x4fe PUSH1 0x1
0x500 PUSH1 0xa0
0x502 PUSH1 0x2
0x504 EXP
0x505 SUB
0x506 AND
0x507 DUP2
0x508 JUMP
---
0x4fa: JUMPDEST 
0x4fb: V470 = 0x2
0x4fd: V471 = S[0x2]
0x4fe: V472 = 0x1
0x500: V473 = 0xa0
0x502: V474 = 0x2
0x504: V475 = EXP 0x2 0xa0
0x505: V476 = SUB 0x10000000000000000000000000000000000000000 0x1
0x506: V477 = AND 0xffffffffffffffffffffffffffffffffffffffff V471
0x508: JUMP 0x18c
---
Entry stack: [V13, 0x18c]
Stack pops: 1
Stack additions: [S0, V477]
Exit stack: [V13, 0x18c, V477]

================================

Block 0x509
[0x509:0x534]
---
Predecessors: []
Successors: []
---
0x509 STOP
0x50a LOG1
0x50b PUSH6 0x627a7a723058
0x512 SHA3
0x513 LT
0x514 PUSH21 0x6fb973df5b33b006aeeeffd46b138f2f557380a8ed
0x52a MISSING 0x2f
0x52b MISSING 0xc2
0x52c MISSING 0xaf
0x52d MISSING 0xe2
0x52e MISSING 0xcf
0x52f SWAP1
0x530 MISSING 0xa5
0x531 MISSING 0xc
0x532 MISSING 0x22
0x533 STOP
0x534 MISSING 0x29
---
0x509: STOP 
0x50a: LOG S0 S1 S2
0x50b: V478 = 0x627a7a723058
0x512: V479 = SHA3 0x627a7a723058 S3
0x513: V480 = LT V479 S4
0x514: V481 = 0x6fb973df5b33b006aeeeffd46b138f2f557380a8ed
0x52a: MISSING 0x2f
0x52b: MISSING 0xc2
0x52c: MISSING 0xaf
0x52d: MISSING 0xe2
0x52e: MISSING 0xcf
0x530: MISSING 0xa5
0x531: MISSING 0xc
0x532: MISSING 0x22
0x533: STOP 
0x534: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0x6fb973df5b33b006aeeeffd46b138f2f557380a8ed, V480, S1, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0x113
Exit block: 0x126
Body: 0x113, 0x11a, 0x11e, 0x126, 0x1ed, 0x222, 0x226

Function 1:
Public function signature: 0x718da7ee
Entry block: 0x128
Exit block: 0x126
Body: 0x126, 0x128, 0x12f, 0x133, 0x228, 0x23f, 0x240

Function 2:
Public function signature: 0x79ba5097
Entry block: 0x147
Exit block: 0x126
Body: 0x126, 0x147, 0x14e, 0x152, 0x2a8, 0x2bf, 0x2c3

Function 3:
Public function signature: 0x89476069
Entry block: 0x15a
Exit block: 0x471
Body: 0x126, 0x15a, 0x161, 0x165, 0x34f, 0x369, 0x36a, 0x3c0, 0x3c4, 0x3d1, 0x3d5, 0x3e8, 0x3ec, 0x44b, 0x44f, 0x45c, 0x460, 0x471, 0x475

Function 4:
Public function signature: 0x8da5cb5b
Entry block: 0x179
Exit block: 0x18c
Body: 0x179, 0x180, 0x184, 0x18c, 0x47a

Function 5:
Public function signature: 0xd4ee1d90
Entry block: 0x1a8
Exit block: 0x18c
Body: 0x18c, 0x1a8, 0x1af, 0x1b3, 0x489

Function 6:
Public function signature: 0xf2fde38b
Entry block: 0x1bb
Exit block: 0x126
Body: 0x126, 0x1bb, 0x1c2, 0x1c6, 0x498, 0x4af, 0x4b0, 0x4c7, 0x4cb

Function 7:
Public function signature: 0xf7260d3e
Entry block: 0x1da
Exit block: 0x18c
Body: 0x18c, 0x1da, 0x1e1, 0x1e5, 0x4fa

Function 8:
Public fallback function
Entry block: 0x74
Exit block: 0xa8
Body: 0x74, 0xa4, 0xa8

