Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0xa2]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0xf090eb3
0x3c EQ
0x3d PUSH2 0xa2
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0xf090eb3
0x3c: V13 = EQ 0xf090eb3 V11
0x3d: V14 = 0xa2
0x40: JUMPI 0xa2 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xff]
---
0x41 DUP1
0x42 PUSH4 0x764b7708
0x47 EQ
0x48 PUSH2 0xff
0x4b JUMPI
---
0x42: V15 = 0x764b7708
0x47: V16 = EQ 0x764b7708 V11
0x48: V17 = 0xff
0x4b: JUMPI 0xff V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0xa1]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d PUSH1 0x1
0x4f DUP1
0x50 PUSH1 0x0
0x52 ADD
0x53 PUSH1 0x0
0x55 PUSH2 0x100
0x58 EXP
0x59 DUP2
0x5a SLOAD
0x5b DUP2
0x5c PUSH1 0xff
0x5e MUL
0x5f NOT
0x60 AND
0x61 SWAP1
0x62 DUP4
0x63 ISZERO
0x64 ISZERO
0x65 MUL
0x66 OR
0x67 SWAP1
0x68 SSTORE
0x69 POP
0x6a PUSH32 0xc42b1b598d857a09c633828abada7c92693ddfd3deb426997969dbb49d522d1a
0x8b CALLVALUE
0x8c PUSH1 0x40
0x8e MLOAD
0x8f DUP1
0x90 DUP3
0x91 DUP2
0x92 MSTORE
0x93 PUSH1 0x20
0x95 ADD
0x96 SWAP2
0x97 POP
0x98 POP
0x99 PUSH1 0x40
0x9b MLOAD
0x9c DUP1
0x9d SWAP2
0x9e SUB
0x9f SWAP1
0xa0 LOG1
0xa1 STOP
---
0x4c: JUMPDEST 
0x4d: V18 = 0x1
0x50: V19 = 0x0
0x52: V20 = ADD 0x0 0x1
0x53: V21 = 0x0
0x55: V22 = 0x100
0x58: V23 = EXP 0x100 0x0
0x5a: V24 = S[0x1]
0x5c: V25 = 0xff
0x5e: V26 = MUL 0xff 0x1
0x5f: V27 = NOT 0xff
0x60: V28 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V24
0x63: V29 = ISZERO 0x1
0x64: V30 = ISZERO 0x0
0x65: V31 = MUL 0x1 0x1
0x66: V32 = OR 0x1 V28
0x68: S[0x1] = V32
0x6a: V33 = 0xc42b1b598d857a09c633828abada7c92693ddfd3deb426997969dbb49d522d1a
0x8b: V34 = CALLVALUE
0x8c: V35 = 0x40
0x8e: V36 = M[0x40]
0x92: M[V36] = V34
0x93: V37 = 0x20
0x95: V38 = ADD 0x20 V36
0x99: V39 = 0x40
0x9b: V40 = M[0x40]
0x9e: V41 = SUB V38 V40
0xa0: LOG V40 V41 0xc42b1b598d857a09c633828abada7c92693ddfd3deb426997969dbb49d522d1a
0xa1: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa2
[0xa2:0xa8]
---
Predecessors: [0xd]
Successors: [0xa9, 0xad]
---
0xa2 JUMPDEST
0xa3 CALLVALUE
0xa4 ISZERO
0xa5 PUSH2 0xad
0xa8 JUMPI
---
0xa2: JUMPDEST 
0xa3: V42 = CALLVALUE
0xa4: V43 = ISZERO V42
0xa5: V44 = 0xad
0xa8: JUMPI 0xad V43
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa9
[0xa9:0xac]
---
Predecessors: [0xa2]
Successors: []
---
0xa9 PUSH1 0x0
0xab DUP1
0xac REVERT
---
0xa9: V45 = 0x0
0xac: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xad
[0xad:0xfc]
---
Predecessors: [0xa2]
Successors: [0x138]
---
0xad JUMPDEST
0xae PUSH2 0xfd
0xb1 PUSH1 0x4
0xb3 DUP1
0xb4 DUP1
0xb5 CALLDATALOAD
0xb6 SWAP1
0xb7 PUSH1 0x20
0xb9 ADD
0xba SWAP1
0xbb DUP3
0xbc ADD
0xbd DUP1
0xbe CALLDATALOAD
0xbf SWAP1
0xc0 PUSH1 0x20
0xc2 ADD
0xc3 SWAP1
0xc4 DUP1
0xc5 DUP1
0xc6 PUSH1 0x1f
0xc8 ADD
0xc9 PUSH1 0x20
0xcb DUP1
0xcc SWAP2
0xcd DIV
0xce MUL
0xcf PUSH1 0x20
0xd1 ADD
0xd2 PUSH1 0x40
0xd4 MLOAD
0xd5 SWAP1
0xd6 DUP2
0xd7 ADD
0xd8 PUSH1 0x40
0xda MSTORE
0xdb DUP1
0xdc SWAP4
0xdd SWAP3
0xde SWAP2
0xdf SWAP1
0xe0 DUP2
0xe1 DUP2
0xe2 MSTORE
0xe3 PUSH1 0x20
0xe5 ADD
0xe6 DUP4
0xe7 DUP4
0xe8 DUP1
0xe9 DUP3
0xea DUP5
0xeb CALLDATACOPY
0xec DUP3
0xed ADD
0xee SWAP2
0xef POP
0xf0 POP
0xf1 POP
0xf2 POP
0xf3 POP
0xf4 POP
0xf5 SWAP2
0xf6 SWAP1
0xf7 POP
0xf8 POP
0xf9 PUSH2 0x138
0xfc JUMP
---
0xad: JUMPDEST 
0xae: V46 = 0xfd
0xb1: V47 = 0x4
0xb5: V48 = CALLDATALOAD 0x4
0xb7: V49 = 0x20
0xb9: V50 = ADD 0x20 0x4
0xbc: V51 = ADD 0x4 V48
0xbe: V52 = CALLDATALOAD V51
0xc0: V53 = 0x20
0xc2: V54 = ADD 0x20 V51
0xc6: V55 = 0x1f
0xc8: V56 = ADD 0x1f V52
0xc9: V57 = 0x20
0xcd: V58 = DIV V56 0x20
0xce: V59 = MUL V58 0x20
0xcf: V60 = 0x20
0xd1: V61 = ADD 0x20 V59
0xd2: V62 = 0x40
0xd4: V63 = M[0x40]
0xd7: V64 = ADD V63 V61
0xd8: V65 = 0x40
0xda: M[0x40] = V64
0xe2: M[V63] = V52
0xe3: V66 = 0x20
0xe5: V67 = ADD 0x20 V63
0xeb: CALLDATACOPY V67 V54 V52
0xed: V68 = ADD V67 V52
0xf9: V69 = 0x138
0xfc: JUMP 0x138
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xfd, V63]
Exit stack: [V11, 0xfd, V63]

================================

Block 0xfd
[0xfd:0xfe]
---
Predecessors: [0x489]
Successors: []
---
0xfd JUMPDEST
0xfe STOP
---
0xfd: JUMPDEST 
0xfe: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xff
[0xff:0x105]
---
Predecessors: [0x41]
Successors: [0x106, 0x10a]
---
0xff JUMPDEST
0x100 CALLVALUE
0x101 ISZERO
0x102 PUSH2 0x10a
0x105 JUMPI
---
0xff: JUMPDEST 
0x100: V70 = CALLVALUE
0x101: V71 = ISZERO V70
0x102: V72 = 0x10a
0x105: JUMPI 0x10a V71
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x106
[0x106:0x109]
---
Predecessors: [0xff]
Successors: []
---
0x106 PUSH1 0x0
0x108 DUP1
0x109 REVERT
---
0x106: V73 = 0x0
0x109: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x10a
[0x10a:0x135]
---
Predecessors: [0xff]
Successors: [0x48c]
---
0x10a JUMPDEST
0x10b PUSH2 0x136
0x10e PUSH1 0x4
0x110 DUP1
0x111 DUP1
0x112 CALLDATALOAD
0x113 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x128 AND
0x129 SWAP1
0x12a PUSH1 0x20
0x12c ADD
0x12d SWAP1
0x12e SWAP2
0x12f SWAP1
0x130 POP
0x131 POP
0x132 PUSH2 0x48c
0x135 JUMP
---
0x10a: JUMPDEST 
0x10b: V74 = 0x136
0x10e: V75 = 0x4
0x112: V76 = CALLDATALOAD 0x4
0x113: V77 = 0xffffffffffffffffffffffffffffffffffffffff
0x128: V78 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0x12a: V79 = 0x20
0x12c: V80 = ADD 0x20 0x4
0x132: V81 = 0x48c
0x135: JUMP 0x48c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x136, V78]
Exit stack: [V11, 0x136, V78]

================================

Block 0x136
[0x136:0x137]
---
Predecessors: [0x712]
Successors: []
---
0x136 JUMPDEST
0x137 STOP
---
0x136: JUMPDEST 
0x137: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x138
[0x138:0x180]
---
Predecessors: [0xad]
Successors: [0x181, 0x1c5]
---
0x138 JUMPDEST
0x139 PUSH20 0xf80be359d919c8d2b175c499f654cef01ad812a9
0x14e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x163 AND
0x164 CALLER
0x165 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17a AND
0x17b EQ
0x17c DUP1
0x17d PUSH2 0x1c5
0x180 JUMPI
---
0x138: JUMPDEST 
0x139: V82 = 0xf80be359d919c8d2b175c499f654cef01ad812a9
0x14e: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x163: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff 0xf80be359d919c8d2b175c499f654cef01ad812a9
0x164: V85 = CALLER
0x165: V86 = 0xffffffffffffffffffffffffffffffffffffffff
0x17a: V87 = AND 0xffffffffffffffffffffffffffffffffffffffff V85
0x17b: V88 = EQ V87 0xf80be359d919c8d2b175c499f654cef01ad812a9
0x17d: V89 = 0x1c5
0x180: JUMPI 0x1c5 V88
---
Entry stack: [V11, 0xfd, V63]
Stack pops: 0
Stack additions: [V88]
Exit stack: [V11, 0xfd, V63, V88]

================================

Block 0x181
[0x181:0x1c4]
---
Predecessors: [0x138]
Successors: [0x1c5]
---
0x181 POP
0x182 PUSH20 0xb86e9975cf1955cc6c5403c8cc0f4a78f4e2a2af
0x197 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ac AND
0x1ad CALLER
0x1ae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c3 AND
0x1c4 EQ
---
0x182: V90 = 0xb86e9975cf1955cc6c5403c8cc0f4a78f4e2a2af
0x197: V91 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ac: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff 0xb86e9975cf1955cc6c5403c8cc0f4a78f4e2a2af
0x1ad: V93 = CALLER
0x1ae: V94 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c3: V95 = AND 0xffffffffffffffffffffffffffffffffffffffff V93
0x1c4: V96 = EQ V95 0xb86e9975cf1955cc6c5403c8cc0f4a78f4e2a2af
---
Entry stack: [V11, 0xfd, V63, V88]
Stack pops: 1
Stack additions: [V96]
Exit stack: [V11, 0xfd, V63, V96]

================================

Block 0x1c5
[0x1c5:0x1cb]
---
Predecessors: [0x138, 0x181]
Successors: [0x1cc, 0x1d0]
---
0x1c5 JUMPDEST
0x1c6 ISZERO
0x1c7 ISZERO
0x1c8 PUSH2 0x1d0
0x1cb JUMPI
---
0x1c5: JUMPDEST 
0x1c6: V97 = ISZERO S0
0x1c7: V98 = ISZERO V97
0x1c8: V99 = 0x1d0
0x1cb: JUMPI 0x1d0 V98
---
Entry stack: [V11, 0xfd, V63, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xfd, V63]

================================

Block 0x1cc
[0x1cc:0x1cf]
---
Predecessors: [0x1c5]
Successors: []
---
0x1cc PUSH1 0x0
0x1ce DUP1
0x1cf REVERT
---
0x1cc: V100 = 0x0
0x1cf: REVERT 0x0 0x0
---
Entry stack: [V11, 0xfd, V63]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xfd, V63]

================================

Block 0x1d0
[0x1d0:0x218]
---
Predecessors: [0x1c5]
Successors: [0x219, 0x32e]
---
0x1d0 JUMPDEST
0x1d1 PUSH20 0xf80be359d919c8d2b175c499f654cef01ad812a9
0x1e6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1fb AND
0x1fc CALLER
0x1fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x212 AND
0x213 EQ
0x214 ISZERO
0x215 PUSH2 0x32e
0x218 JUMPI
---
0x1d0: JUMPDEST 
0x1d1: V101 = 0xf80be359d919c8d2b175c499f654cef01ad812a9
0x1e6: V102 = 0xffffffffffffffffffffffffffffffffffffffff
0x1fb: V103 = AND 0xffffffffffffffffffffffffffffffffffffffff 0xf80be359d919c8d2b175c499f654cef01ad812a9
0x1fc: V104 = CALLER
0x1fd: V105 = 0xffffffffffffffffffffffffffffffffffffffff
0x212: V106 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x213: V107 = EQ V106 0xf80be359d919c8d2b175c499f654cef01ad812a9
0x214: V108 = ISZERO V107
0x215: V109 = 0x32e
0x218: JUMPI 0x32e V108
---
Entry stack: [V11, 0xfd, V63]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xfd, V63]

================================

Block 0x219
[0x219:0x25e]
---
Predecessors: [0x1d0]
Successors: [0x25f]
---
0x219 PUSH32 0x4650e446f68b2eed9b8744eecbae6e8cf7299c1d5c130f3ac3e00d4017370985
0x23a DUP2
0x23b PUSH1 0x40
0x23d MLOAD
0x23e DUP1
0x23f DUP1
0x240 PUSH1 0x20
0x242 ADD
0x243 DUP3
0x244 DUP2
0x245 SUB
0x246 DUP3
0x247 MSTORE
0x248 DUP4
0x249 DUP2
0x24a DUP2
0x24b MLOAD
0x24c DUP2
0x24d MSTORE
0x24e PUSH1 0x20
0x250 ADD
0x251 SWAP2
0x252 POP
0x253 DUP1
0x254 MLOAD
0x255 SWAP1
0x256 PUSH1 0x20
0x258 ADD
0x259 SWAP1
0x25a DUP1
0x25b DUP4
0x25c DUP4
0x25d PUSH1 0x0
---
0x219: V110 = 0x4650e446f68b2eed9b8744eecbae6e8cf7299c1d5c130f3ac3e00d4017370985
0x23b: V111 = 0x40
0x23d: V112 = M[0x40]
0x240: V113 = 0x20
0x242: V114 = ADD 0x20 V112
0x245: V115 = SUB V114 V112
0x247: M[V112] = V115
0x24b: V116 = M[V63]
0x24d: M[V114] = V116
0x24e: V117 = 0x20
0x250: V118 = ADD 0x20 V114
0x254: V119 = M[V63]
0x256: V120 = 0x20
0x258: V121 = ADD 0x20 V63
0x25d: V122 = 0x0
---
Entry stack: [V11, 0xfd, V63]
Stack pops: 1
Stack additions: [S0, 0x4650e446f68b2eed9b8744eecbae6e8cf7299c1d5c130f3ac3e00d4017370985, S0, V112, V112, V118, V121, V119, V119, V118, V121, 0x0]
Exit stack: [V11, 0xfd, V63, 0x4650e446f68b2eed9b8744eecbae6e8cf7299c1d5c130f3ac3e00d4017370985, V63, V112, V112, V118, V121, V119, V119, V118, V121, 0x0]

================================

Block 0x25f
[0x25f:0x267]
---
Predecessors: [0x219, 0x268]
Successors: [0x268, 0x27a]
---
0x25f JUMPDEST
0x260 DUP4
0x261 DUP2
0x262 LT
0x263 ISZERO
0x264 PUSH2 0x27a
0x267 JUMPI
---
0x25f: JUMPDEST 
0x262: V123 = LT S0 V119
0x263: V124 = ISZERO V123
0x264: V125 = 0x27a
0x267: JUMPI 0x27a V124
---
Entry stack: [V11, 0xfd, V63, 0x4650e446f68b2eed9b8744eecbae6e8cf7299c1d5c130f3ac3e00d4017370985, V63, V112, V112, V118, V121, V119, V119, V118, V121, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0xfd, V63, 0x4650e446f68b2eed9b8744eecbae6e8cf7299c1d5c130f3ac3e00d4017370985, V63, V112, V112, V118, V121, V119, V119, V118, V121, S0]

================================

Block 0x268
[0x268:0x279]
---
Predecessors: [0x25f]
Successors: [0x25f]
---
0x268 DUP1
0x269 DUP3
0x26a ADD
0x26b MLOAD
0x26c DUP2
0x26d DUP5
0x26e ADD
0x26f MSTORE
0x270 PUSH1 0x20
0x272 DUP2
0x273 ADD
0x274 SWAP1
0x275 POP
0x276 PUSH2 0x25f
0x279 JUMP
---
0x26a: V126 = ADD V121 S0
0x26b: V127 = M[V126]
0x26e: V128 = ADD V118 S0
0x26f: M[V128] = V127
0x270: V129 = 0x20
0x273: V130 = ADD S0 0x20
0x276: V131 = 0x25f
0x279: JUMP 0x25f
---
Entry stack: [V11, 0xfd, V63, 0x4650e446f68b2eed9b8744eecbae6e8cf7299c1d5c130f3ac3e00d4017370985, V63, V112, V112, V118, V121, V119, V119, V118, V121, S0]
Stack pops: 3
Stack additions: [S2, S1, V130]
Exit stack: [V11, 0xfd, V63, 0x4650e446f68b2eed9b8744eecbae6e8cf7299c1d5c130f3ac3e00d4017370985, V63, V112, V112, V118, V121, V119, V119, V118, V121, V130]

================================

Block 0x27a
[0x27a:0x28d]
---
Predecessors: [0x25f]
Successors: [0x28e, 0x2a7]
---
0x27a JUMPDEST
0x27b POP
0x27c POP
0x27d POP
0x27e POP
0x27f SWAP1
0x280 POP
0x281 SWAP1
0x282 DUP2
0x283 ADD
0x284 SWAP1
0x285 PUSH1 0x1f
0x287 AND
0x288 DUP1
0x289 ISZERO
0x28a PUSH2 0x2a7
0x28d JUMPI
---
0x27a: JUMPDEST 
0x283: V132 = ADD V119 V118
0x285: V133 = 0x1f
0x287: V134 = AND 0x1f V119
0x289: V135 = ISZERO V134
0x28a: V136 = 0x2a7
0x28d: JUMPI 0x2a7 V135
---
Entry stack: [V11, 0xfd, V63, 0x4650e446f68b2eed9b8744eecbae6e8cf7299c1d5c130f3ac3e00d4017370985, V63, V112, V112, V118, V121, V119, V119, V118, V121, S0]
Stack pops: 7
Stack additions: [V132, V134]
Exit stack: [V11, 0xfd, V63, 0x4650e446f68b2eed9b8744eecbae6e8cf7299c1d5c130f3ac3e00d4017370985, V63, V112, V112, V132, V134]

================================

Block 0x28e
[0x28e:0x2a6]
---
Predecessors: [0x27a]
Successors: [0x2a7]
---
0x28e DUP1
0x28f DUP3
0x290 SUB
0x291 DUP1
0x292 MLOAD
0x293 PUSH1 0x1
0x295 DUP4
0x296 PUSH1 0x20
0x298 SUB
0x299 PUSH2 0x100
0x29c EXP
0x29d SUB
0x29e NOT
0x29f AND
0x2a0 DUP2
0x2a1 MSTORE
0x2a2 PUSH1 0x20
0x2a4 ADD
0x2a5 SWAP2
0x2a6 POP
---
0x290: V137 = SUB V132 V134
0x292: V138 = M[V137]
0x293: V139 = 0x1
0x296: V140 = 0x20
0x298: V141 = SUB 0x20 V134
0x299: V142 = 0x100
0x29c: V143 = EXP 0x100 V141
0x29d: V144 = SUB V143 0x1
0x29e: V145 = NOT V144
0x29f: V146 = AND V145 V138
0x2a1: M[V137] = V146
0x2a2: V147 = 0x20
0x2a4: V148 = ADD 0x20 V137
---
Entry stack: [V11, 0xfd, V63, 0x4650e446f68b2eed9b8744eecbae6e8cf7299c1d5c130f3ac3e00d4017370985, V63, V112, V112, V132, V134]
Stack pops: 2
Stack additions: [V148, S0]
Exit stack: [V11, 0xfd, V63, 0x4650e446f68b2eed9b8744eecbae6e8cf7299c1d5c130f3ac3e00d4017370985, V63, V112, V112, V148, V134]

================================

Block 0x2a7
[0x2a7:0x32d]
---
Predecessors: [0x27a, 0x28e]
Successors: [0x489]
---
0x2a7 JUMPDEST
0x2a8 POP
0x2a9 SWAP3
0x2aa POP
0x2ab POP
0x2ac POP
0x2ad PUSH1 0x40
0x2af MLOAD
0x2b0 DUP1
0x2b1 SWAP2
0x2b2 SUB
0x2b3 SWAP1
0x2b4 LOG1
0x2b5 PUSH1 0x1
0x2b7 PUSH1 0x0
0x2b9 DUP1
0x2ba ADD
0x2bb PUSH1 0x0
0x2bd PUSH2 0x100
0x2c0 EXP
0x2c1 DUP2
0x2c2 SLOAD
0x2c3 DUP2
0x2c4 PUSH1 0xff
0x2c6 MUL
0x2c7 NOT
0x2c8 AND
0x2c9 SWAP1
0x2ca DUP4
0x2cb ISZERO
0x2cc ISZERO
0x2cd MUL
0x2ce OR
0x2cf SWAP1
0x2d0 SSTORE
0x2d1 POP
0x2d2 PUSH20 0xf80be359d919c8d2b175c499f654cef01ad812a9
0x2e7 PUSH1 0x2
0x2e9 PUSH1 0x0
0x2eb ADD
0x2ec PUSH1 0x0
0x2ee PUSH2 0x100
0x2f1 EXP
0x2f2 DUP2
0x2f3 SLOAD
0x2f4 DUP2
0x2f5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x30a MUL
0x30b NOT
0x30c AND
0x30d SWAP1
0x30e DUP4
0x30f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x324 AND
0x325 MUL
0x326 OR
0x327 SWAP1
0x328 SSTORE
0x329 POP
0x32a PUSH2 0x489
0x32d JUMP
---
0x2a7: JUMPDEST 
0x2ad: V149 = 0x40
0x2af: V150 = M[0x40]
0x2b2: V151 = SUB S1 V150
0x2b4: LOG V150 V151 0x4650e446f68b2eed9b8744eecbae6e8cf7299c1d5c130f3ac3e00d4017370985
0x2b5: V152 = 0x1
0x2b7: V153 = 0x0
0x2ba: V154 = ADD 0x0 0x0
0x2bb: V155 = 0x0
0x2bd: V156 = 0x100
0x2c0: V157 = EXP 0x100 0x0
0x2c2: V158 = S[0x0]
0x2c4: V159 = 0xff
0x2c6: V160 = MUL 0xff 0x1
0x2c7: V161 = NOT 0xff
0x2c8: V162 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V158
0x2cb: V163 = ISZERO 0x1
0x2cc: V164 = ISZERO 0x0
0x2cd: V165 = MUL 0x1 0x1
0x2ce: V166 = OR 0x1 V162
0x2d0: S[0x0] = V166
0x2d2: V167 = 0xf80be359d919c8d2b175c499f654cef01ad812a9
0x2e7: V168 = 0x2
0x2e9: V169 = 0x0
0x2eb: V170 = ADD 0x0 0x2
0x2ec: V171 = 0x0
0x2ee: V172 = 0x100
0x2f1: V173 = EXP 0x100 0x0
0x2f3: V174 = S[0x2]
0x2f5: V175 = 0xffffffffffffffffffffffffffffffffffffffff
0x30a: V176 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x30b: V177 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x30c: V178 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V174
0x30f: V179 = 0xffffffffffffffffffffffffffffffffffffffff
0x324: V180 = AND 0xffffffffffffffffffffffffffffffffffffffff 0xf80be359d919c8d2b175c499f654cef01ad812a9
0x325: V181 = MUL 0xf80be359d919c8d2b175c499f654cef01ad812a9 0x1
0x326: V182 = OR 0xf80be359d919c8d2b175c499f654cef01ad812a9 V178
0x328: S[0x2] = V182
0x32a: V183 = 0x489
0x32d: JUMP 0x489
---
Entry stack: [V11, 0xfd, V63, 0x4650e446f68b2eed9b8744eecbae6e8cf7299c1d5c130f3ac3e00d4017370985, V63, V112, V112, S1, V134]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0xfd, V63]

================================

Block 0x32e
[0x32e:0x376]
---
Predecessors: [0x1d0]
Successors: [0x377, 0x488]
---
0x32e JUMPDEST
0x32f PUSH20 0xb86e9975cf1955cc6c5403c8cc0f4a78f4e2a2af
0x344 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x359 AND
0x35a CALLER
0x35b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x370 AND
0x371 EQ
0x372 ISZERO
0x373 PUSH2 0x488
0x376 JUMPI
---
0x32e: JUMPDEST 
0x32f: V184 = 0xb86e9975cf1955cc6c5403c8cc0f4a78f4e2a2af
0x344: V185 = 0xffffffffffffffffffffffffffffffffffffffff
0x359: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff 0xb86e9975cf1955cc6c5403c8cc0f4a78f4e2a2af
0x35a: V187 = CALLER
0x35b: V188 = 0xffffffffffffffffffffffffffffffffffffffff
0x370: V189 = AND 0xffffffffffffffffffffffffffffffffffffffff V187
0x371: V190 = EQ V189 0xb86e9975cf1955cc6c5403c8cc0f4a78f4e2a2af
0x372: V191 = ISZERO V190
0x373: V192 = 0x488
0x376: JUMPI 0x488 V191
---
Entry stack: [V11, 0xfd, V63]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xfd, V63]

================================

Block 0x377
[0x377:0x3bc]
---
Predecessors: [0x32e]
Successors: [0x3bd]
---
0x377 PUSH32 0xaa0821cacb31b26b881b99bb33a3aba6a6130e1db3bca51a81691d53bd24cf1f
0x398 DUP2
0x399 PUSH1 0x40
0x39b MLOAD
0x39c DUP1
0x39d DUP1
0x39e PUSH1 0x20
0x3a0 ADD
0x3a1 DUP3
0x3a2 DUP2
0x3a3 SUB
0x3a4 DUP3
0x3a5 MSTORE
0x3a6 DUP4
0x3a7 DUP2
0x3a8 DUP2
0x3a9 MLOAD
0x3aa DUP2
0x3ab MSTORE
0x3ac PUSH1 0x20
0x3ae ADD
0x3af SWAP2
0x3b0 POP
0x3b1 DUP1
0x3b2 MLOAD
0x3b3 SWAP1
0x3b4 PUSH1 0x20
0x3b6 ADD
0x3b7 SWAP1
0x3b8 DUP1
0x3b9 DUP4
0x3ba DUP4
0x3bb PUSH1 0x0
---
0x377: V193 = 0xaa0821cacb31b26b881b99bb33a3aba6a6130e1db3bca51a81691d53bd24cf1f
0x399: V194 = 0x40
0x39b: V195 = M[0x40]
0x39e: V196 = 0x20
0x3a0: V197 = ADD 0x20 V195
0x3a3: V198 = SUB V197 V195
0x3a5: M[V195] = V198
0x3a9: V199 = M[V63]
0x3ab: M[V197] = V199
0x3ac: V200 = 0x20
0x3ae: V201 = ADD 0x20 V197
0x3b2: V202 = M[V63]
0x3b4: V203 = 0x20
0x3b6: V204 = ADD 0x20 V63
0x3bb: V205 = 0x0
---
Entry stack: [V11, 0xfd, V63]
Stack pops: 1
Stack additions: [S0, 0xaa0821cacb31b26b881b99bb33a3aba6a6130e1db3bca51a81691d53bd24cf1f, S0, V195, V195, V201, V204, V202, V202, V201, V204, 0x0]
Exit stack: [V11, 0xfd, V63, 0xaa0821cacb31b26b881b99bb33a3aba6a6130e1db3bca51a81691d53bd24cf1f, V63, V195, V195, V201, V204, V202, V202, V201, V204, 0x0]

================================

Block 0x3bd
[0x3bd:0x3c5]
---
Predecessors: [0x377, 0x3c6]
Successors: [0x3c6, 0x3d8]
---
0x3bd JUMPDEST
0x3be DUP4
0x3bf DUP2
0x3c0 LT
0x3c1 ISZERO
0x3c2 PUSH2 0x3d8
0x3c5 JUMPI
---
0x3bd: JUMPDEST 
0x3c0: V206 = LT S0 V202
0x3c1: V207 = ISZERO V206
0x3c2: V208 = 0x3d8
0x3c5: JUMPI 0x3d8 V207
---
Entry stack: [V11, 0xfd, V63, 0xaa0821cacb31b26b881b99bb33a3aba6a6130e1db3bca51a81691d53bd24cf1f, V63, V195, V195, V201, V204, V202, V202, V201, V204, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0xfd, V63, 0xaa0821cacb31b26b881b99bb33a3aba6a6130e1db3bca51a81691d53bd24cf1f, V63, V195, V195, V201, V204, V202, V202, V201, V204, S0]

================================

Block 0x3c6
[0x3c6:0x3d7]
---
Predecessors: [0x3bd]
Successors: [0x3bd]
---
0x3c6 DUP1
0x3c7 DUP3
0x3c8 ADD
0x3c9 MLOAD
0x3ca DUP2
0x3cb DUP5
0x3cc ADD
0x3cd MSTORE
0x3ce PUSH1 0x20
0x3d0 DUP2
0x3d1 ADD
0x3d2 SWAP1
0x3d3 POP
0x3d4 PUSH2 0x3bd
0x3d7 JUMP
---
0x3c8: V209 = ADD V204 S0
0x3c9: V210 = M[V209]
0x3cc: V211 = ADD V201 S0
0x3cd: M[V211] = V210
0x3ce: V212 = 0x20
0x3d1: V213 = ADD S0 0x20
0x3d4: V214 = 0x3bd
0x3d7: JUMP 0x3bd
---
Entry stack: [V11, 0xfd, V63, 0xaa0821cacb31b26b881b99bb33a3aba6a6130e1db3bca51a81691d53bd24cf1f, V63, V195, V195, V201, V204, V202, V202, V201, V204, S0]
Stack pops: 3
Stack additions: [S2, S1, V213]
Exit stack: [V11, 0xfd, V63, 0xaa0821cacb31b26b881b99bb33a3aba6a6130e1db3bca51a81691d53bd24cf1f, V63, V195, V195, V201, V204, V202, V202, V201, V204, V213]

================================

Block 0x3d8
[0x3d8:0x3eb]
---
Predecessors: [0x3bd]
Successors: [0x3ec, 0x405]
---
0x3d8 JUMPDEST
0x3d9 POP
0x3da POP
0x3db POP
0x3dc POP
0x3dd SWAP1
0x3de POP
0x3df SWAP1
0x3e0 DUP2
0x3e1 ADD
0x3e2 SWAP1
0x3e3 PUSH1 0x1f
0x3e5 AND
0x3e6 DUP1
0x3e7 ISZERO
0x3e8 PUSH2 0x405
0x3eb JUMPI
---
0x3d8: JUMPDEST 
0x3e1: V215 = ADD V202 V201
0x3e3: V216 = 0x1f
0x3e5: V217 = AND 0x1f V202
0x3e7: V218 = ISZERO V217
0x3e8: V219 = 0x405
0x3eb: JUMPI 0x405 V218
---
Entry stack: [V11, 0xfd, V63, 0xaa0821cacb31b26b881b99bb33a3aba6a6130e1db3bca51a81691d53bd24cf1f, V63, V195, V195, V201, V204, V202, V202, V201, V204, S0]
Stack pops: 7
Stack additions: [V215, V217]
Exit stack: [V11, 0xfd, V63, 0xaa0821cacb31b26b881b99bb33a3aba6a6130e1db3bca51a81691d53bd24cf1f, V63, V195, V195, V215, V217]

================================

Block 0x3ec
[0x3ec:0x404]
---
Predecessors: [0x3d8]
Successors: [0x405]
---
0x3ec DUP1
0x3ed DUP3
0x3ee SUB
0x3ef DUP1
0x3f0 MLOAD
0x3f1 PUSH1 0x1
0x3f3 DUP4
0x3f4 PUSH1 0x20
0x3f6 SUB
0x3f7 PUSH2 0x100
0x3fa EXP
0x3fb SUB
0x3fc NOT
0x3fd AND
0x3fe DUP2
0x3ff MSTORE
0x400 PUSH1 0x20
0x402 ADD
0x403 SWAP2
0x404 POP
---
0x3ee: V220 = SUB V215 V217
0x3f0: V221 = M[V220]
0x3f1: V222 = 0x1
0x3f4: V223 = 0x20
0x3f6: V224 = SUB 0x20 V217
0x3f7: V225 = 0x100
0x3fa: V226 = EXP 0x100 V224
0x3fb: V227 = SUB V226 0x1
0x3fc: V228 = NOT V227
0x3fd: V229 = AND V228 V221
0x3ff: M[V220] = V229
0x400: V230 = 0x20
0x402: V231 = ADD 0x20 V220
---
Entry stack: [V11, 0xfd, V63, 0xaa0821cacb31b26b881b99bb33a3aba6a6130e1db3bca51a81691d53bd24cf1f, V63, V195, V195, V215, V217]
Stack pops: 2
Stack additions: [V231, S0]
Exit stack: [V11, 0xfd, V63, 0xaa0821cacb31b26b881b99bb33a3aba6a6130e1db3bca51a81691d53bd24cf1f, V63, V195, V195, V231, V217]

================================

Block 0x405
[0x405:0x487]
---
Predecessors: [0x3d8, 0x3ec]
Successors: [0x488]
---
0x405 JUMPDEST
0x406 POP
0x407 SWAP3
0x408 POP
0x409 POP
0x40a POP
0x40b PUSH1 0x40
0x40d MLOAD
0x40e DUP1
0x40f SWAP2
0x410 SUB
0x411 SWAP1
0x412 LOG1
0x413 PUSH1 0x1
0x415 PUSH1 0x0
0x417 DUP1
0x418 ADD
0x419 PUSH1 0x1
0x41b PUSH2 0x100
0x41e EXP
0x41f DUP2
0x420 SLOAD
0x421 DUP2
0x422 PUSH1 0xff
0x424 MUL
0x425 NOT
0x426 AND
0x427 SWAP1
0x428 DUP4
0x429 ISZERO
0x42a ISZERO
0x42b MUL
0x42c OR
0x42d SWAP1
0x42e SSTORE
0x42f POP
0x430 PUSH20 0xb86e9975cf1955cc6c5403c8cc0f4a78f4e2a2af
0x445 PUSH1 0x2
0x447 PUSH1 0x1
0x449 ADD
0x44a PUSH1 0x0
0x44c PUSH2 0x100
0x44f EXP
0x450 DUP2
0x451 SLOAD
0x452 DUP2
0x453 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x468 MUL
0x469 NOT
0x46a AND
0x46b SWAP1
0x46c DUP4
0x46d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x482 AND
0x483 MUL
0x484 OR
0x485 SWAP1
0x486 SSTORE
0x487 POP
---
0x405: JUMPDEST 
0x40b: V232 = 0x40
0x40d: V233 = M[0x40]
0x410: V234 = SUB S1 V233
0x412: LOG V233 V234 0xaa0821cacb31b26b881b99bb33a3aba6a6130e1db3bca51a81691d53bd24cf1f
0x413: V235 = 0x1
0x415: V236 = 0x0
0x418: V237 = ADD 0x0 0x0
0x419: V238 = 0x1
0x41b: V239 = 0x100
0x41e: V240 = EXP 0x100 0x1
0x420: V241 = S[0x0]
0x422: V242 = 0xff
0x424: V243 = MUL 0xff 0x100
0x425: V244 = NOT 0xff00
0x426: V245 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V241
0x429: V246 = ISZERO 0x1
0x42a: V247 = ISZERO 0x0
0x42b: V248 = MUL 0x1 0x100
0x42c: V249 = OR 0x100 V245
0x42e: S[0x0] = V249
0x430: V250 = 0xb86e9975cf1955cc6c5403c8cc0f4a78f4e2a2af
0x445: V251 = 0x2
0x447: V252 = 0x1
0x449: V253 = ADD 0x1 0x2
0x44a: V254 = 0x0
0x44c: V255 = 0x100
0x44f: V256 = EXP 0x100 0x0
0x451: V257 = S[0x3]
0x453: V258 = 0xffffffffffffffffffffffffffffffffffffffff
0x468: V259 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x469: V260 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x46a: V261 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V257
0x46d: V262 = 0xffffffffffffffffffffffffffffffffffffffff
0x482: V263 = AND 0xffffffffffffffffffffffffffffffffffffffff 0xb86e9975cf1955cc6c5403c8cc0f4a78f4e2a2af
0x483: V264 = MUL 0xb86e9975cf1955cc6c5403c8cc0f4a78f4e2a2af 0x1
0x484: V265 = OR 0xb86e9975cf1955cc6c5403c8cc0f4a78f4e2a2af V261
0x486: S[0x3] = V265
---
Entry stack: [V11, 0xfd, V63, 0xaa0821cacb31b26b881b99bb33a3aba6a6130e1db3bca51a81691d53bd24cf1f, V63, V195, V195, S1, V217]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0xfd, V63]

================================

Block 0x488
[0x488:0x488]
---
Predecessors: [0x32e, 0x405]
Successors: [0x489]
---
0x488 JUMPDEST
---
0x488: JUMPDEST 
---
Entry stack: [V11, 0xfd, V63]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xfd, V63]

================================

Block 0x489
[0x489:0x48b]
---
Predecessors: [0x2a7, 0x488]
Successors: [0xfd]
---
0x489 JUMPDEST
0x48a POP
0x48b JUMP
---
0x489: JUMPDEST 
0x48b: JUMP 0xfd
---
Entry stack: [V11, 0xfd, V63]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x48c
[0x48c:0x4e5]
---
Predecessors: [0x10a]
Successors: [0x4e6, 0x53b]
---
0x48c JUMPDEST
0x48d PUSH1 0x2
0x48f PUSH1 0x0
0x491 ADD
0x492 PUSH1 0x0
0x494 SWAP1
0x495 SLOAD
0x496 SWAP1
0x497 PUSH2 0x100
0x49a EXP
0x49b SWAP1
0x49c DIV
0x49d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4b2 AND
0x4b3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c8 AND
0x4c9 CALLER
0x4ca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4df AND
0x4e0 EQ
0x4e1 DUP1
0x4e2 PUSH2 0x53b
0x4e5 JUMPI
---
0x48c: JUMPDEST 
0x48d: V266 = 0x2
0x48f: V267 = 0x0
0x491: V268 = ADD 0x0 0x2
0x492: V269 = 0x0
0x495: V270 = S[0x2]
0x497: V271 = 0x100
0x49a: V272 = EXP 0x100 0x0
0x49c: V273 = DIV V270 0x1
0x49d: V274 = 0xffffffffffffffffffffffffffffffffffffffff
0x4b2: V275 = AND 0xffffffffffffffffffffffffffffffffffffffff V273
0x4b3: V276 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c8: V277 = AND 0xffffffffffffffffffffffffffffffffffffffff V275
0x4c9: V278 = CALLER
0x4ca: V279 = 0xffffffffffffffffffffffffffffffffffffffff
0x4df: V280 = AND 0xffffffffffffffffffffffffffffffffffffffff V278
0x4e0: V281 = EQ V280 V277
0x4e2: V282 = 0x53b
0x4e5: JUMPI 0x53b V281
---
Entry stack: [V11, 0x136, V78]
Stack pops: 0
Stack additions: [V281]
Exit stack: [V11, 0x136, V78, V281]

================================

Block 0x4e6
[0x4e6:0x53a]
---
Predecessors: [0x48c]
Successors: [0x53b]
---
0x4e6 POP
0x4e7 PUSH1 0x2
0x4e9 PUSH1 0x1
0x4eb ADD
0x4ec PUSH1 0x0
0x4ee SWAP1
0x4ef SLOAD
0x4f0 SWAP1
0x4f1 PUSH2 0x100
0x4f4 EXP
0x4f5 SWAP1
0x4f6 DIV
0x4f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x50c AND
0x50d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x522 AND
0x523 CALLER
0x524 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x539 AND
0x53a EQ
---
0x4e7: V283 = 0x2
0x4e9: V284 = 0x1
0x4eb: V285 = ADD 0x1 0x2
0x4ec: V286 = 0x0
0x4ef: V287 = S[0x3]
0x4f1: V288 = 0x100
0x4f4: V289 = EXP 0x100 0x0
0x4f6: V290 = DIV V287 0x1
0x4f7: V291 = 0xffffffffffffffffffffffffffffffffffffffff
0x50c: V292 = AND 0xffffffffffffffffffffffffffffffffffffffff V290
0x50d: V293 = 0xffffffffffffffffffffffffffffffffffffffff
0x522: V294 = AND 0xffffffffffffffffffffffffffffffffffffffff V292
0x523: V295 = CALLER
0x524: V296 = 0xffffffffffffffffffffffffffffffffffffffff
0x539: V297 = AND 0xffffffffffffffffffffffffffffffffffffffff V295
0x53a: V298 = EQ V297 V294
---
Entry stack: [V11, 0x136, V78, V281]
Stack pops: 1
Stack additions: [V298]
Exit stack: [V11, 0x136, V78, V298]

================================

Block 0x53b
[0x53b:0x541]
---
Predecessors: [0x48c, 0x4e6]
Successors: [0x542, 0x546]
---
0x53b JUMPDEST
0x53c ISZERO
0x53d ISZERO
0x53e PUSH2 0x546
0x541 JUMPI
---
0x53b: JUMPDEST 
0x53c: V299 = ISZERO S0
0x53d: V300 = ISZERO V299
0x53e: V301 = 0x546
0x541: JUMPI 0x546 V300
---
Entry stack: [V11, 0x136, V78, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x136, V78]

================================

Block 0x542
[0x542:0x545]
---
Predecessors: [0x53b]
Successors: []
---
0x542 PUSH1 0x0
0x544 DUP1
0x545 REVERT
---
0x542: V302 = 0x0
0x545: REVERT 0x0 0x0
---
Entry stack: [V11, 0x136, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x136, V78]

================================

Block 0x546
[0x546:0x55f]
---
Predecessors: [0x53b]
Successors: [0x560, 0x564]
---
0x546 JUMPDEST
0x547 PUSH1 0x1
0x549 PUSH1 0x0
0x54b ADD
0x54c PUSH1 0x0
0x54e SWAP1
0x54f SLOAD
0x550 SWAP1
0x551 PUSH2 0x100
0x554 EXP
0x555 SWAP1
0x556 DIV
0x557 PUSH1 0xff
0x559 AND
0x55a ISZERO
0x55b ISZERO
0x55c PUSH2 0x564
0x55f JUMPI
---
0x546: JUMPDEST 
0x547: V303 = 0x1
0x549: V304 = 0x0
0x54b: V305 = ADD 0x0 0x1
0x54c: V306 = 0x0
0x54f: V307 = S[0x1]
0x551: V308 = 0x100
0x554: V309 = EXP 0x100 0x0
0x556: V310 = DIV V307 0x1
0x557: V311 = 0xff
0x559: V312 = AND 0xff V310
0x55a: V313 = ISZERO V312
0x55b: V314 = ISZERO V313
0x55c: V315 = 0x564
0x55f: JUMPI 0x564 V314
---
Entry stack: [V11, 0x136, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x136, V78]

================================

Block 0x560
[0x560:0x563]
---
Predecessors: [0x546]
Successors: []
---
0x560 PUSH1 0x0
0x562 DUP1
0x563 REVERT
---
0x560: V316 = 0x0
0x563: REVERT 0x0 0x0
---
Entry stack: [V11, 0x136, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x136, V78]

================================

Block 0x564
[0x564:0x56c]
---
Predecessors: [0x546]
Successors: [0x715]
---
0x564 JUMPDEST
0x565 PUSH2 0x56d
0x568 DUP2
0x569 PUSH2 0x715
0x56c JUMP
---
0x564: JUMPDEST 
0x565: V317 = 0x56d
0x569: V318 = 0x715
0x56c: JUMP 0x715
---
Entry stack: [V11, 0x136, V78]
Stack pops: 1
Stack additions: [S0, 0x56d, S0]
Exit stack: [V11, 0x136, V78, 0x56d, V78]

================================

Block 0x56d
[0x56d:0x5c6]
---
Predecessors: [0x994]
Successors: [0x5c7, 0x5e4]
---
0x56d JUMPDEST
0x56e PUSH1 0x2
0x570 PUSH1 0x0
0x572 ADD
0x573 PUSH1 0x0
0x575 SWAP1
0x576 SLOAD
0x577 SWAP1
0x578 PUSH2 0x100
0x57b EXP
0x57c SWAP1
0x57d DIV
0x57e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x593 AND
0x594 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5a9 AND
0x5aa CALLER
0x5ab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5c0 AND
0x5c1 EQ
0x5c2 ISZERO
0x5c3 PUSH2 0x5e4
0x5c6 JUMPI
---
0x56d: JUMPDEST 
0x56e: V319 = 0x2
0x570: V320 = 0x0
0x572: V321 = ADD 0x0 0x2
0x573: V322 = 0x0
0x576: V323 = S[0x2]
0x578: V324 = 0x100
0x57b: V325 = EXP 0x100 0x0
0x57d: V326 = DIV V323 0x1
0x57e: V327 = 0xffffffffffffffffffffffffffffffffffffffff
0x593: V328 = AND 0xffffffffffffffffffffffffffffffffffffffff V326
0x594: V329 = 0xffffffffffffffffffffffffffffffffffffffff
0x5a9: V330 = AND 0xffffffffffffffffffffffffffffffffffffffff V328
0x5aa: V331 = CALLER
0x5ab: V332 = 0xffffffffffffffffffffffffffffffffffffffff
0x5c0: V333 = AND 0xffffffffffffffffffffffffffffffffffffffff V331
0x5c1: V334 = EQ V333 V330
0x5c2: V335 = ISZERO V334
0x5c3: V336 = 0x5e4
0x5c6: JUMPI 0x5e4 V335
---
Entry stack: [V11, 0x136, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x136, V78]

================================

Block 0x5c7
[0x5c7:0x5e3]
---
Predecessors: [0x56d]
Successors: [0x5e4]
---
0x5c7 PUSH1 0x1
0x5c9 DUP1
0x5ca PUSH1 0x0
0x5cc ADD
0x5cd PUSH1 0x1
0x5cf PUSH2 0x100
0x5d2 EXP
0x5d3 DUP2
0x5d4 SLOAD
0x5d5 DUP2
0x5d6 PUSH1 0xff
0x5d8 MUL
0x5d9 NOT
0x5da AND
0x5db SWAP1
0x5dc DUP4
0x5dd ISZERO
0x5de ISZERO
0x5df MUL
0x5e0 OR
0x5e1 SWAP1
0x5e2 SSTORE
0x5e3 POP
---
0x5c7: V337 = 0x1
0x5ca: V338 = 0x0
0x5cc: V339 = ADD 0x0 0x1
0x5cd: V340 = 0x1
0x5cf: V341 = 0x100
0x5d2: V342 = EXP 0x100 0x1
0x5d4: V343 = S[0x1]
0x5d6: V344 = 0xff
0x5d8: V345 = MUL 0xff 0x100
0x5d9: V346 = NOT 0xff00
0x5da: V347 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V343
0x5dd: V348 = ISZERO 0x1
0x5de: V349 = ISZERO 0x0
0x5df: V350 = MUL 0x1 0x100
0x5e0: V351 = OR 0x100 V347
0x5e2: S[0x1] = V351
---
Entry stack: [V11, 0x136, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x136, V78]

================================

Block 0x5e4
[0x5e4:0x63d]
---
Predecessors: [0x56d, 0x5c7]
Successors: [0x63e, 0x65b]
---
0x5e4 JUMPDEST
0x5e5 PUSH1 0x2
0x5e7 PUSH1 0x1
0x5e9 ADD
0x5ea PUSH1 0x0
0x5ec SWAP1
0x5ed SLOAD
0x5ee SWAP1
0x5ef PUSH2 0x100
0x5f2 EXP
0x5f3 SWAP1
0x5f4 DIV
0x5f5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x60a AND
0x60b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x620 AND
0x621 CALLER
0x622 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x637 AND
0x638 EQ
0x639 ISZERO
0x63a PUSH2 0x65b
0x63d JUMPI
---
0x5e4: JUMPDEST 
0x5e5: V352 = 0x2
0x5e7: V353 = 0x1
0x5e9: V354 = ADD 0x1 0x2
0x5ea: V355 = 0x0
0x5ed: V356 = S[0x3]
0x5ef: V357 = 0x100
0x5f2: V358 = EXP 0x100 0x0
0x5f4: V359 = DIV V356 0x1
0x5f5: V360 = 0xffffffffffffffffffffffffffffffffffffffff
0x60a: V361 = AND 0xffffffffffffffffffffffffffffffffffffffff V359
0x60b: V362 = 0xffffffffffffffffffffffffffffffffffffffff
0x620: V363 = AND 0xffffffffffffffffffffffffffffffffffffffff V361
0x621: V364 = CALLER
0x622: V365 = 0xffffffffffffffffffffffffffffffffffffffff
0x637: V366 = AND 0xffffffffffffffffffffffffffffffffffffffff V364
0x638: V367 = EQ V366 V363
0x639: V368 = ISZERO V367
0x63a: V369 = 0x65b
0x63d: JUMPI 0x65b V368
---
Entry stack: [V11, 0x136, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x136, V78]

================================

Block 0x63e
[0x63e:0x65a]
---
Predecessors: [0x5e4]
Successors: [0x65b]
---
0x63e PUSH1 0x1
0x640 DUP1
0x641 PUSH1 0x0
0x643 ADD
0x644 PUSH1 0x2
0x646 PUSH2 0x100
0x649 EXP
0x64a DUP2
0x64b SLOAD
0x64c DUP2
0x64d PUSH1 0xff
0x64f MUL
0x650 NOT
0x651 AND
0x652 SWAP1
0x653 DUP4
0x654 ISZERO
0x655 ISZERO
0x656 MUL
0x657 OR
0x658 SWAP1
0x659 SSTORE
0x65a POP
---
0x63e: V370 = 0x1
0x641: V371 = 0x0
0x643: V372 = ADD 0x0 0x1
0x644: V373 = 0x2
0x646: V374 = 0x100
0x649: V375 = EXP 0x100 0x2
0x64b: V376 = S[0x1]
0x64d: V377 = 0xff
0x64f: V378 = MUL 0xff 0x10000
0x650: V379 = NOT 0xff0000
0x651: V380 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff V376
0x654: V381 = ISZERO 0x1
0x655: V382 = ISZERO 0x0
0x656: V383 = MUL 0x1 0x10000
0x657: V384 = OR 0x10000 V380
0x659: S[0x1] = V384
---
Entry stack: [V11, 0x136, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x136, V78]

================================

Block 0x65b
[0x65b:0x674]
---
Predecessors: [0x5e4, 0x63e]
Successors: [0x675, 0x689]
---
0x65b JUMPDEST
0x65c PUSH1 0x1
0x65e PUSH1 0x0
0x660 ADD
0x661 PUSH1 0x1
0x663 SWAP1
0x664 SLOAD
0x665 SWAP1
0x666 PUSH2 0x100
0x669 EXP
0x66a SWAP1
0x66b DIV
0x66c PUSH1 0xff
0x66e AND
0x66f DUP1
0x670 ISZERO
0x671 PUSH2 0x689
0x674 JUMPI
---
0x65b: JUMPDEST 
0x65c: V385 = 0x1
0x65e: V386 = 0x0
0x660: V387 = ADD 0x0 0x1
0x661: V388 = 0x1
0x664: V389 = S[0x1]
0x666: V390 = 0x100
0x669: V391 = EXP 0x100 0x1
0x66b: V392 = DIV V389 0x100
0x66c: V393 = 0xff
0x66e: V394 = AND 0xff V392
0x670: V395 = ISZERO V394
0x671: V396 = 0x689
0x674: JUMPI 0x689 V395
---
Entry stack: [V11, 0x136, V78]
Stack pops: 0
Stack additions: [V394]
Exit stack: [V11, 0x136, V78, V394]

================================

Block 0x675
[0x675:0x688]
---
Predecessors: [0x65b]
Successors: [0x689]
---
0x675 POP
0x676 PUSH1 0x1
0x678 PUSH1 0x0
0x67a ADD
0x67b PUSH1 0x2
0x67d SWAP1
0x67e SLOAD
0x67f SWAP1
0x680 PUSH2 0x100
0x683 EXP
0x684 SWAP1
0x685 DIV
0x686 PUSH1 0xff
0x688 AND
---
0x676: V397 = 0x1
0x678: V398 = 0x0
0x67a: V399 = ADD 0x0 0x1
0x67b: V400 = 0x2
0x67e: V401 = S[0x1]
0x680: V402 = 0x100
0x683: V403 = EXP 0x100 0x2
0x685: V404 = DIV V401 0x10000
0x686: V405 = 0xff
0x688: V406 = AND 0xff V404
---
Entry stack: [V11, 0x136, V78, V394]
Stack pops: 1
Stack additions: [V406]
Exit stack: [V11, 0x136, V78, V406]

================================

Block 0x689
[0x689:0x68e]
---
Predecessors: [0x65b, 0x675]
Successors: [0x68f, 0x712]
---
0x689 JUMPDEST
0x68a ISZERO
0x68b PUSH2 0x712
0x68e JUMPI
---
0x689: JUMPDEST 
0x68a: V407 = ISZERO S0
0x68b: V408 = 0x712
0x68e: JUMPI 0x712 V407
---
Entry stack: [V11, 0x136, V78, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x136, V78]

================================

Block 0x68f
[0x68f:0x695]
---
Predecessors: [0x689]
Successors: [0x997]
---
0x68f PUSH2 0x696
0x692 PUSH2 0x997
0x695 JUMP
---
0x68f: V409 = 0x696
0x692: V410 = 0x997
0x695: JUMP 0x997
---
Entry stack: [V11, 0x136, V78]
Stack pops: 0
Stack additions: [0x696]
Exit stack: [V11, 0x136, V78, 0x696]

================================

Block 0x696
[0x696:0x70c]
---
Predecessors: [0x997]
Successors: [0x70d, 0x711]
---
0x696 JUMPDEST
0x697 PUSH1 0x2
0x699 DUP1
0x69a ADD
0x69b PUSH1 0x0
0x69d SWAP1
0x69e SLOAD
0x69f SWAP1
0x6a0 PUSH2 0x100
0x6a3 EXP
0x6a4 SWAP1
0x6a5 DIV
0x6a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6bb AND
0x6bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6d1 AND
0x6d2 PUSH2 0x8fc
0x6d5 ADDRESS
0x6d6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6eb AND
0x6ec BALANCE
0x6ed SWAP1
0x6ee DUP2
0x6ef ISZERO
0x6f0 MUL
0x6f1 SWAP1
0x6f2 PUSH1 0x40
0x6f4 MLOAD
0x6f5 PUSH1 0x0
0x6f7 PUSH1 0x40
0x6f9 MLOAD
0x6fa DUP1
0x6fb DUP4
0x6fc SUB
0x6fd DUP2
0x6fe DUP6
0x6ff DUP9
0x700 DUP9
0x701 CALL
0x702 SWAP4
0x703 POP
0x704 POP
0x705 POP
0x706 POP
0x707 ISZERO
0x708 ISZERO
0x709 PUSH2 0x711
0x70c JUMPI
---
0x696: JUMPDEST 
0x697: V411 = 0x2
0x69a: V412 = ADD 0x2 0x2
0x69b: V413 = 0x0
0x69e: V414 = S[0x4]
0x6a0: V415 = 0x100
0x6a3: V416 = EXP 0x100 0x0
0x6a5: V417 = DIV V414 0x1
0x6a6: V418 = 0xffffffffffffffffffffffffffffffffffffffff
0x6bb: V419 = AND 0xffffffffffffffffffffffffffffffffffffffff V417
0x6bc: V420 = 0xffffffffffffffffffffffffffffffffffffffff
0x6d1: V421 = AND 0xffffffffffffffffffffffffffffffffffffffff V419
0x6d2: V422 = 0x8fc
0x6d5: V423 = ADDRESS
0x6d6: V424 = 0xffffffffffffffffffffffffffffffffffffffff
0x6eb: V425 = AND 0xffffffffffffffffffffffffffffffffffffffff V423
0x6ec: V426 = BALANCE V425
0x6ef: V427 = ISZERO V426
0x6f0: V428 = MUL V427 0x8fc
0x6f2: V429 = 0x40
0x6f4: V430 = M[0x40]
0x6f5: V431 = 0x0
0x6f7: V432 = 0x40
0x6f9: V433 = M[0x40]
0x6fc: V434 = SUB V430 V433
0x701: V435 = CALL V428 V421 V426 V433 V434 V433 0x0
0x707: V436 = ISZERO V435
0x708: V437 = ISZERO V436
0x709: V438 = 0x711
0x70c: JUMPI 0x711 V437
---
Entry stack: [V11, 0x136, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x136, V78]

================================

Block 0x70d
[0x70d:0x710]
---
Predecessors: [0x696]
Successors: []
---
0x70d PUSH1 0x0
0x70f DUP1
0x710 REVERT
---
0x70d: V439 = 0x0
0x710: REVERT 0x0 0x0
---
Entry stack: [V11, 0x136, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x136, V78]

================================

Block 0x711
[0x711:0x711]
---
Predecessors: [0x696]
Successors: [0x712]
---
0x711 JUMPDEST
---
0x711: JUMPDEST 
---
Entry stack: [V11, 0x136, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x136, V78]

================================

Block 0x712
[0x712:0x714]
---
Predecessors: [0x689, 0x711]
Successors: [0x136]
---
0x712 JUMPDEST
0x713 POP
0x714 JUMP
---
0x712: JUMPDEST 
0x714: JUMP 0x136
---
Entry stack: [V11, 0x136, V78]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x715
[0x715:0x76e]
---
Predecessors: [0x564]
Successors: [0x76f, 0x7b6]
---
0x715 JUMPDEST
0x716 PUSH1 0x0
0x718 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x72d AND
0x72e PUSH1 0x2
0x730 DUP1
0x731 ADD
0x732 PUSH1 0x0
0x734 SWAP1
0x735 SLOAD
0x736 SWAP1
0x737 PUSH2 0x100
0x73a EXP
0x73b SWAP1
0x73c DIV
0x73d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x752 AND
0x753 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x768 AND
0x769 EQ
0x76a ISZERO
0x76b PUSH2 0x7b6
0x76e JUMPI
---
0x715: JUMPDEST 
0x716: V440 = 0x0
0x718: V441 = 0xffffffffffffffffffffffffffffffffffffffff
0x72d: V442 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x72e: V443 = 0x2
0x731: V444 = ADD 0x2 0x2
0x732: V445 = 0x0
0x735: V446 = S[0x4]
0x737: V447 = 0x100
0x73a: V448 = EXP 0x100 0x0
0x73c: V449 = DIV V446 0x1
0x73d: V450 = 0xffffffffffffffffffffffffffffffffffffffff
0x752: V451 = AND 0xffffffffffffffffffffffffffffffffffffffff V449
0x753: V452 = 0xffffffffffffffffffffffffffffffffffffffff
0x768: V453 = AND 0xffffffffffffffffffffffffffffffffffffffff V451
0x769: V454 = EQ V453 0x0
0x76a: V455 = ISZERO V454
0x76b: V456 = 0x7b6
0x76e: JUMPI 0x7b6 V455
---
Entry stack: [V11, 0x136, V78, 0x56d, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x136, V78, 0x56d, V78]

================================

Block 0x76f
[0x76f:0x7b5]
---
Predecessors: [0x715]
Successors: [0x994]
---
0x76f DUP1
0x770 PUSH1 0x2
0x772 DUP1
0x773 ADD
0x774 PUSH1 0x0
0x776 PUSH2 0x100
0x779 EXP
0x77a DUP2
0x77b SLOAD
0x77c DUP2
0x77d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x792 MUL
0x793 NOT
0x794 AND
0x795 SWAP1
0x796 DUP4
0x797 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7ac AND
0x7ad MUL
0x7ae OR
0x7af SWAP1
0x7b0 SSTORE
0x7b1 POP
0x7b2 PUSH2 0x994
0x7b5 JUMP
---
0x770: V457 = 0x2
0x773: V458 = ADD 0x2 0x2
0x774: V459 = 0x0
0x776: V460 = 0x100
0x779: V461 = EXP 0x100 0x0
0x77b: V462 = S[0x4]
0x77d: V463 = 0xffffffffffffffffffffffffffffffffffffffff
0x792: V464 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x793: V465 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x794: V466 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V462
0x797: V467 = 0xffffffffffffffffffffffffffffffffffffffff
0x7ac: V468 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x7ad: V469 = MUL V468 0x1
0x7ae: V470 = OR V469 V466
0x7b0: S[0x4] = V470
0x7b2: V471 = 0x994
0x7b5: JUMP 0x994
---
Entry stack: [V11, 0x136, V78, 0x56d, V78]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x136, V78, 0x56d, V78]

================================

Block 0x7b6
[0x7b6:0x80f]
---
Predecessors: [0x715]
Successors: [0x810, 0x8d3]
---
0x7b6 JUMPDEST
0x7b7 PUSH1 0x2
0x7b9 PUSH1 0x0
0x7bb ADD
0x7bc PUSH1 0x0
0x7be SWAP1
0x7bf SLOAD
0x7c0 SWAP1
0x7c1 PUSH2 0x100
0x7c4 EXP
0x7c5 SWAP1
0x7c6 DIV
0x7c7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7dc AND
0x7dd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7f2 AND
0x7f3 CALLER
0x7f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x809 AND
0x80a EQ
0x80b ISZERO
0x80c PUSH2 0x8d3
0x80f JUMPI
---
0x7b6: JUMPDEST 
0x7b7: V472 = 0x2
0x7b9: V473 = 0x0
0x7bb: V474 = ADD 0x0 0x2
0x7bc: V475 = 0x0
0x7bf: V476 = S[0x2]
0x7c1: V477 = 0x100
0x7c4: V478 = EXP 0x100 0x0
0x7c6: V479 = DIV V476 0x1
0x7c7: V480 = 0xffffffffffffffffffffffffffffffffffffffff
0x7dc: V481 = AND 0xffffffffffffffffffffffffffffffffffffffff V479
0x7dd: V482 = 0xffffffffffffffffffffffffffffffffffffffff
0x7f2: V483 = AND 0xffffffffffffffffffffffffffffffffffffffff V481
0x7f3: V484 = CALLER
0x7f4: V485 = 0xffffffffffffffffffffffffffffffffffffffff
0x809: V486 = AND 0xffffffffffffffffffffffffffffffffffffffff V484
0x80a: V487 = EQ V486 V483
0x80b: V488 = ISZERO V487
0x80c: V489 = 0x8d3
0x80f: JUMPI 0x8d3 V488
---
Entry stack: [V11, 0x136, V78, 0x56d, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x136, V78, 0x56d, V78]

================================

Block 0x810
[0x810:0x827]
---
Predecessors: [0x7b6]
Successors: [0x828, 0x86f]
---
0x810 PUSH1 0x1
0x812 PUSH1 0x0
0x814 ADD
0x815 PUSH1 0x1
0x817 SWAP1
0x818 SLOAD
0x819 SWAP1
0x81a PUSH2 0x100
0x81d EXP
0x81e SWAP1
0x81f DIV
0x820 PUSH1 0xff
0x822 AND
0x823 ISZERO
0x824 PUSH2 0x86f
0x827 JUMPI
---
0x810: V490 = 0x1
0x812: V491 = 0x0
0x814: V492 = ADD 0x0 0x1
0x815: V493 = 0x1
0x818: V494 = S[0x1]
0x81a: V495 = 0x100
0x81d: V496 = EXP 0x100 0x1
0x81f: V497 = DIV V494 0x100
0x820: V498 = 0xff
0x822: V499 = AND 0xff V497
0x823: V500 = ISZERO V499
0x824: V501 = 0x86f
0x827: JUMPI 0x86f V500
---
Entry stack: [V11, 0x136, V78, 0x56d, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x136, V78, 0x56d, V78]

================================

Block 0x828
[0x828:0x86e]
---
Predecessors: [0x810]
Successors: [0x8ce]
---
0x828 DUP1
0x829 PUSH1 0x2
0x82b DUP1
0x82c ADD
0x82d PUSH1 0x0
0x82f PUSH2 0x100
0x832 EXP
0x833 DUP2
0x834 SLOAD
0x835 DUP2
0x836 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x84b MUL
0x84c NOT
0x84d AND
0x84e SWAP1
0x84f DUP4
0x850 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x865 AND
0x866 MUL
0x867 OR
0x868 SWAP1
0x869 SSTORE
0x86a POP
0x86b PUSH2 0x8ce
0x86e JUMP
---
0x829: V502 = 0x2
0x82c: V503 = ADD 0x2 0x2
0x82d: V504 = 0x0
0x82f: V505 = 0x100
0x832: V506 = EXP 0x100 0x0
0x834: V507 = S[0x4]
0x836: V508 = 0xffffffffffffffffffffffffffffffffffffffff
0x84b: V509 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x84c: V510 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x84d: V511 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V507
0x850: V512 = 0xffffffffffffffffffffffffffffffffffffffff
0x865: V513 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x866: V514 = MUL V513 0x1
0x867: V515 = OR V514 V511
0x869: S[0x4] = V515
0x86b: V516 = 0x8ce
0x86e: JUMP 0x8ce
---
Entry stack: [V11, 0x136, V78, 0x56d, V78]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x136, V78, 0x56d, V78]

================================

Block 0x86f
[0x86f:0x8c8]
---
Predecessors: [0x810]
Successors: [0x8c9, 0x8cd]
---
0x86f JUMPDEST
0x870 DUP1
0x871 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x886 AND
0x887 PUSH1 0x2
0x889 DUP1
0x88a ADD
0x88b PUSH1 0x0
0x88d SWAP1
0x88e SLOAD
0x88f SWAP1
0x890 PUSH2 0x100
0x893 EXP
0x894 SWAP1
0x895 DIV
0x896 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8ab AND
0x8ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8c1 AND
0x8c2 EQ
0x8c3 ISZERO
0x8c4 ISZERO
0x8c5 PUSH2 0x8cd
0x8c8 JUMPI
---
0x86f: JUMPDEST 
0x871: V517 = 0xffffffffffffffffffffffffffffffffffffffff
0x886: V518 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x887: V519 = 0x2
0x88a: V520 = ADD 0x2 0x2
0x88b: V521 = 0x0
0x88e: V522 = S[0x4]
0x890: V523 = 0x100
0x893: V524 = EXP 0x100 0x0
0x895: V525 = DIV V522 0x1
0x896: V526 = 0xffffffffffffffffffffffffffffffffffffffff
0x8ab: V527 = AND 0xffffffffffffffffffffffffffffffffffffffff V525
0x8ac: V528 = 0xffffffffffffffffffffffffffffffffffffffff
0x8c1: V529 = AND 0xffffffffffffffffffffffffffffffffffffffff V527
0x8c2: V530 = EQ V529 V518
0x8c3: V531 = ISZERO V530
0x8c4: V532 = ISZERO V531
0x8c5: V533 = 0x8cd
0x8c8: JUMPI 0x8cd V532
---
Entry stack: [V11, 0x136, V78, 0x56d, V78]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x136, V78, 0x56d, V78]

================================

Block 0x8c9
[0x8c9:0x8cc]
---
Predecessors: [0x86f]
Successors: []
---
0x8c9 PUSH1 0x0
0x8cb DUP1
0x8cc REVERT
---
0x8c9: V534 = 0x0
0x8cc: REVERT 0x0 0x0
---
Entry stack: [V11, 0x136, V78, 0x56d, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x136, V78, 0x56d, V78]

================================

Block 0x8cd
[0x8cd:0x8cd]
---
Predecessors: [0x86f]
Successors: [0x8ce]
---
0x8cd JUMPDEST
---
0x8cd: JUMPDEST 
---
Entry stack: [V11, 0x136, V78, 0x56d, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x136, V78, 0x56d, V78]

================================

Block 0x8ce
[0x8ce:0x8d2]
---
Predecessors: [0x828, 0x8cd]
Successors: [0x993]
---
0x8ce JUMPDEST
0x8cf PUSH2 0x993
0x8d2 JUMP
---
0x8ce: JUMPDEST 
0x8cf: V535 = 0x993
0x8d2: JUMP 0x993
---
Entry stack: [V11, 0x136, V78, 0x56d, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x136, V78, 0x56d, V78]

================================

Block 0x8d3
[0x8d3:0x8eb]
---
Predecessors: [0x7b6]
Successors: [0x8ec, 0x933]
---
0x8d3 JUMPDEST
0x8d4 PUSH1 0x1
0x8d6 PUSH1 0x0
0x8d8 ADD
0x8d9 PUSH1 0x2
0x8db SWAP1
0x8dc SLOAD
0x8dd SWAP1
0x8de PUSH2 0x100
0x8e1 EXP
0x8e2 SWAP1
0x8e3 DIV
0x8e4 PUSH1 0xff
0x8e6 AND
0x8e7 ISZERO
0x8e8 PUSH2 0x933
0x8eb JUMPI
---
0x8d3: JUMPDEST 
0x8d4: V536 = 0x1
0x8d6: V537 = 0x0
0x8d8: V538 = ADD 0x0 0x1
0x8d9: V539 = 0x2
0x8dc: V540 = S[0x1]
0x8de: V541 = 0x100
0x8e1: V542 = EXP 0x100 0x2
0x8e3: V543 = DIV V540 0x10000
0x8e4: V544 = 0xff
0x8e6: V545 = AND 0xff V543
0x8e7: V546 = ISZERO V545
0x8e8: V547 = 0x933
0x8eb: JUMPI 0x933 V546
---
Entry stack: [V11, 0x136, V78, 0x56d, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x136, V78, 0x56d, V78]

================================

Block 0x8ec
[0x8ec:0x932]
---
Predecessors: [0x8d3]
Successors: [0x992]
---
0x8ec DUP1
0x8ed PUSH1 0x2
0x8ef DUP1
0x8f0 ADD
0x8f1 PUSH1 0x0
0x8f3 PUSH2 0x100
0x8f6 EXP
0x8f7 DUP2
0x8f8 SLOAD
0x8f9 DUP2
0x8fa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x90f MUL
0x910 NOT
0x911 AND
0x912 SWAP1
0x913 DUP4
0x914 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x929 AND
0x92a MUL
0x92b OR
0x92c SWAP1
0x92d SSTORE
0x92e POP
0x92f PUSH2 0x992
0x932 JUMP
---
0x8ed: V548 = 0x2
0x8f0: V549 = ADD 0x2 0x2
0x8f1: V550 = 0x0
0x8f3: V551 = 0x100
0x8f6: V552 = EXP 0x100 0x0
0x8f8: V553 = S[0x4]
0x8fa: V554 = 0xffffffffffffffffffffffffffffffffffffffff
0x90f: V555 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x910: V556 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x911: V557 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V553
0x914: V558 = 0xffffffffffffffffffffffffffffffffffffffff
0x929: V559 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x92a: V560 = MUL V559 0x1
0x92b: V561 = OR V560 V557
0x92d: S[0x4] = V561
0x92f: V562 = 0x992
0x932: JUMP 0x992
---
Entry stack: [V11, 0x136, V78, 0x56d, V78]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x136, V78, 0x56d, V78]

================================

Block 0x933
[0x933:0x98c]
---
Predecessors: [0x8d3]
Successors: [0x98d, 0x991]
---
0x933 JUMPDEST
0x934 DUP1
0x935 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x94a AND
0x94b PUSH1 0x2
0x94d DUP1
0x94e ADD
0x94f PUSH1 0x0
0x951 SWAP1
0x952 SLOAD
0x953 SWAP1
0x954 PUSH2 0x100
0x957 EXP
0x958 SWAP1
0x959 DIV
0x95a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x96f AND
0x970 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x985 AND
0x986 EQ
0x987 ISZERO
0x988 ISZERO
0x989 PUSH2 0x991
0x98c JUMPI
---
0x933: JUMPDEST 
0x935: V563 = 0xffffffffffffffffffffffffffffffffffffffff
0x94a: V564 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x94b: V565 = 0x2
0x94e: V566 = ADD 0x2 0x2
0x94f: V567 = 0x0
0x952: V568 = S[0x4]
0x954: V569 = 0x100
0x957: V570 = EXP 0x100 0x0
0x959: V571 = DIV V568 0x1
0x95a: V572 = 0xffffffffffffffffffffffffffffffffffffffff
0x96f: V573 = AND 0xffffffffffffffffffffffffffffffffffffffff V571
0x970: V574 = 0xffffffffffffffffffffffffffffffffffffffff
0x985: V575 = AND 0xffffffffffffffffffffffffffffffffffffffff V573
0x986: V576 = EQ V575 V564
0x987: V577 = ISZERO V576
0x988: V578 = ISZERO V577
0x989: V579 = 0x991
0x98c: JUMPI 0x991 V578
---
Entry stack: [V11, 0x136, V78, 0x56d, V78]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x136, V78, 0x56d, V78]

================================

Block 0x98d
[0x98d:0x990]
---
Predecessors: [0x933]
Successors: []
---
0x98d PUSH1 0x0
0x98f DUP1
0x990 REVERT
---
0x98d: V580 = 0x0
0x990: REVERT 0x0 0x0
---
Entry stack: [V11, 0x136, V78, 0x56d, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x136, V78, 0x56d, V78]

================================

Block 0x991
[0x991:0x991]
---
Predecessors: [0x933]
Successors: [0x992]
---
0x991 JUMPDEST
---
0x991: JUMPDEST 
---
Entry stack: [V11, 0x136, V78, 0x56d, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x136, V78, 0x56d, V78]

================================

Block 0x992
[0x992:0x992]
---
Predecessors: [0x8ec, 0x991]
Successors: [0x993]
---
0x992 JUMPDEST
---
0x992: JUMPDEST 
---
Entry stack: [V11, 0x136, V78, 0x56d, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x136, V78, 0x56d, V78]

================================

Block 0x993
[0x993:0x993]
---
Predecessors: [0x8ce, 0x992]
Successors: [0x994]
---
0x993 JUMPDEST
---
0x993: JUMPDEST 
---
Entry stack: [V11, 0x136, V78, 0x56d, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x136, V78, 0x56d, V78]

================================

Block 0x994
[0x994:0x996]
---
Predecessors: [0x76f, 0x993]
Successors: [0x56d]
---
0x994 JUMPDEST
0x995 POP
0x996 JUMP
---
0x994: JUMPDEST 
0x996: JUMP 0x56d
---
Entry stack: [V11, 0x136, V78, 0x56d, V78]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x136, V78]

================================

Block 0x997
[0x997:0xa62]
---
Predecessors: [0x68f]
Successors: [0x696]
---
0x997 JUMPDEST
0x998 PUSH1 0x0
0x99a PUSH1 0x1
0x99c PUSH1 0x0
0x99e ADD
0x99f PUSH1 0x0
0x9a1 PUSH2 0x100
0x9a4 EXP
0x9a5 DUP2
0x9a6 SLOAD
0x9a7 DUP2
0x9a8 PUSH1 0xff
0x9aa MUL
0x9ab NOT
0x9ac AND
0x9ad SWAP1
0x9ae DUP4
0x9af ISZERO
0x9b0 ISZERO
0x9b1 MUL
0x9b2 OR
0x9b3 SWAP1
0x9b4 SSTORE
0x9b5 POP
0x9b6 PUSH1 0x0
0x9b8 PUSH1 0x1
0x9ba PUSH1 0x0
0x9bc ADD
0x9bd PUSH1 0x1
0x9bf PUSH2 0x100
0x9c2 EXP
0x9c3 DUP2
0x9c4 SLOAD
0x9c5 DUP2
0x9c6 PUSH1 0xff
0x9c8 MUL
0x9c9 NOT
0x9ca AND
0x9cb SWAP1
0x9cc DUP4
0x9cd ISZERO
0x9ce ISZERO
0x9cf MUL
0x9d0 OR
0x9d1 SWAP1
0x9d2 SSTORE
0x9d3 POP
0x9d4 PUSH1 0x0
0x9d6 PUSH1 0x1
0x9d8 PUSH1 0x0
0x9da ADD
0x9db PUSH1 0x2
0x9dd PUSH2 0x100
0x9e0 EXP
0x9e1 DUP2
0x9e2 SLOAD
0x9e3 DUP2
0x9e4 PUSH1 0xff
0x9e6 MUL
0x9e7 NOT
0x9e8 AND
0x9e9 SWAP1
0x9ea DUP4
0x9eb ISZERO
0x9ec ISZERO
0x9ed MUL
0x9ee OR
0x9ef SWAP1
0x9f0 SSTORE
0x9f1 POP
0x9f2 PUSH1 0x0
0x9f4 PUSH1 0x2
0x9f6 DUP1
0x9f7 ADD
0x9f8 PUSH1 0x0
0x9fa PUSH2 0x100
0x9fd EXP
0x9fe DUP2
0x9ff SLOAD
0xa00 DUP2
0xa01 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa16 MUL
0xa17 NOT
0xa18 AND
0xa19 SWAP1
0xa1a DUP4
0xa1b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa30 AND
0xa31 MUL
0xa32 OR
0xa33 SWAP1
0xa34 SSTORE
0xa35 POP
0xa36 PUSH32 0xdfd170376ffa7cefa5604d678edeba232c31db1f2041e6cd4b4eb50eac6b79d7
0xa57 PUSH1 0x40
0xa59 MLOAD
0xa5a PUSH1 0x40
0xa5c MLOAD
0xa5d DUP1
0xa5e SWAP2
0xa5f SUB
0xa60 SWAP1
0xa61 LOG1
0xa62 JUMP
---
0x997: JUMPDEST 
0x998: V581 = 0x0
0x99a: V582 = 0x1
0x99c: V583 = 0x0
0x99e: V584 = ADD 0x0 0x1
0x99f: V585 = 0x0
0x9a1: V586 = 0x100
0x9a4: V587 = EXP 0x100 0x0
0x9a6: V588 = S[0x1]
0x9a8: V589 = 0xff
0x9aa: V590 = MUL 0xff 0x1
0x9ab: V591 = NOT 0xff
0x9ac: V592 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V588
0x9af: V593 = ISZERO 0x0
0x9b0: V594 = ISZERO 0x1
0x9b1: V595 = MUL 0x0 0x1
0x9b2: V596 = OR 0x0 V592
0x9b4: S[0x1] = V596
0x9b6: V597 = 0x0
0x9b8: V598 = 0x1
0x9ba: V599 = 0x0
0x9bc: V600 = ADD 0x0 0x1
0x9bd: V601 = 0x1
0x9bf: V602 = 0x100
0x9c2: V603 = EXP 0x100 0x1
0x9c4: V604 = S[0x1]
0x9c6: V605 = 0xff
0x9c8: V606 = MUL 0xff 0x100
0x9c9: V607 = NOT 0xff00
0x9ca: V608 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V604
0x9cd: V609 = ISZERO 0x0
0x9ce: V610 = ISZERO 0x1
0x9cf: V611 = MUL 0x0 0x100
0x9d0: V612 = OR 0x0 V608
0x9d2: S[0x1] = V612
0x9d4: V613 = 0x0
0x9d6: V614 = 0x1
0x9d8: V615 = 0x0
0x9da: V616 = ADD 0x0 0x1
0x9db: V617 = 0x2
0x9dd: V618 = 0x100
0x9e0: V619 = EXP 0x100 0x2
0x9e2: V620 = S[0x1]
0x9e4: V621 = 0xff
0x9e6: V622 = MUL 0xff 0x10000
0x9e7: V623 = NOT 0xff0000
0x9e8: V624 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff V620
0x9eb: V625 = ISZERO 0x0
0x9ec: V626 = ISZERO 0x1
0x9ed: V627 = MUL 0x0 0x10000
0x9ee: V628 = OR 0x0 V624
0x9f0: S[0x1] = V628
0x9f2: V629 = 0x0
0x9f4: V630 = 0x2
0x9f7: V631 = ADD 0x2 0x2
0x9f8: V632 = 0x0
0x9fa: V633 = 0x100
0x9fd: V634 = EXP 0x100 0x0
0x9ff: V635 = S[0x4]
0xa01: V636 = 0xffffffffffffffffffffffffffffffffffffffff
0xa16: V637 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xa17: V638 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xa18: V639 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V635
0xa1b: V640 = 0xffffffffffffffffffffffffffffffffffffffff
0xa30: V641 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0xa31: V642 = MUL 0x0 0x1
0xa32: V643 = OR 0x0 V639
0xa34: S[0x4] = V643
0xa36: V644 = 0xdfd170376ffa7cefa5604d678edeba232c31db1f2041e6cd4b4eb50eac6b79d7
0xa57: V645 = 0x40
0xa59: V646 = M[0x40]
0xa5a: V647 = 0x40
0xa5c: V648 = M[0x40]
0xa5f: V649 = SUB V646 V648
0xa61: LOG V648 V649 0xdfd170376ffa7cefa5604d678edeba232c31db1f2041e6cd4b4eb50eac6b79d7
0xa62: JUMP 0x696
---
Entry stack: [V11, 0x136, V78, 0x696]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x136, V78]

================================

Block 0xa63
[0xa63:0xa95]
---
Predecessors: []
Successors: []
---
0xa63 STOP
0xa64 LOG1
0xa65 PUSH6 0x627a7a723058
0xa6c SHA3
0xa6d CALLER
0xa6e SWAP1
0xa6f MISSING 0xfb
0xa70 MISSING 0xe4
0xa71 JUMP
0xa72 MISSING 0xe6
0xa73 MISSING 0xad
0xa74 MISSING 0xd0
0xa75 ADDMOD
0xa76 MSTORE8
0xa77 MISSING 0xe1
0xa78 JUMPDEST
0xa79 MISSING 0x24
0xa7a CALLVALUE
0xa7b CALLDATACOPY
0xa7c MISSING 0xcd
0xa7d PUSH24 0x308402bb6765fa1d653f75acd01d2b0029
---
0xa63: STOP 
0xa64: LOG S0 S1 S2
0xa65: V650 = 0x627a7a723058
0xa6c: V651 = SHA3 0x627a7a723058 S3
0xa6d: V652 = CALLER
0xa6f: MISSING 0xfb
0xa70: MISSING 0xe4
0xa71: JUMP S0
0xa72: MISSING 0xe6
0xa73: MISSING 0xad
0xa74: MISSING 0xd0
0xa75: V653 = ADDMOD S0 S1 S2
0xa76: M8[V653] = S3
0xa77: MISSING 0xe1
0xa78: JUMPDEST 
0xa79: MISSING 0x24
0xa7a: V654 = CALLVALUE
0xa7b: CALLDATACOPY V654 S0 S1
0xa7c: MISSING 0xcd
0xa7d: V655 = 0x308402bb6765fa1d653f75acd01d2b0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V651, V652, 0x308402bb6765fa1d653f75acd01d2b0029]
Exit stack: []

================================

Function 0:
Public function signature: 0xf090eb3
Entry block: 0xa2
Exit block: 0xfd
Body: 0xa2, 0xa9, 0xad, 0xfd, 0x138, 0x181, 0x1c5, 0x1cc, 0x1d0, 0x219, 0x25f, 0x268, 0x27a, 0x28e, 0x2a7, 0x32e, 0x377, 0x3bd, 0x3c6, 0x3d8, 0x3ec, 0x405, 0x488, 0x489

Function 1:
Public function signature: 0x764b7708
Entry block: 0xff
Exit block: 0x70d
Body: 0xff, 0x106, 0x10a, 0x136, 0x48c, 0x4e6, 0x53b, 0x542, 0x546, 0x560, 0x564, 0x56d, 0x5c7, 0x5e4, 0x63e, 0x65b, 0x675, 0x689, 0x68f, 0x696, 0x70d, 0x711, 0x712, 0x715, 0x76f, 0x7b6, 0x810, 0x828, 0x86f, 0x8c9, 0x8cd, 0x8ce, 0x8d3, 0x8ec, 0x933, 0x98d, 0x991, 0x992, 0x993, 0x994, 0x997

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

