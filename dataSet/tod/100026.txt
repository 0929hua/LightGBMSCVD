Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x6b]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x6b
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x6b
0xa: JUMPI 0x6b V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x74]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x2c4e591b
0x3a EQ
0x3b PUSH2 0x74
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x2c4e591b
0x3a: V12 = EQ 0x2c4e591b V10
0x3b: V13 = 0x74
0x3e: JUMPI 0x74 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0xa0]
---
0x3f DUP1
0x40 PUSH4 0x793cd71e
0x45 EQ
0x46 PUSH2 0xa0
0x49 JUMPI
---
0x40: V14 = 0x793cd71e
0x45: V15 = EQ 0x793cd71e V10
0x46: V16 = 0xa0
0x49: JUMPI 0xa0 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0xb2]
---
0x4a DUP1
0x4b PUSH4 0x824cbd56
0x50 EQ
0x51 PUSH2 0xb2
0x54 JUMPI
---
0x4b: V17 = 0x824cbd56
0x50: V18 = EQ 0x824cbd56 V10
0x51: V19 = 0xb2
0x54: JUMPI 0xb2 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0xc4]
---
0x55 DUP1
0x56 PUSH4 0xf5632bf1
0x5b EQ
0x5c PUSH2 0xc4
0x5f JUMPI
---
0x56: V20 = 0xf5632bf1
0x5b: V21 = EQ 0xf5632bf1 V10
0x5c: V22 = 0xc4
0x5f: JUMPI 0xc4 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0xce]
---
0x60 DUP1
0x61 PUSH4 0xfe5e1853
0x66 EQ
0x67 PUSH2 0xce
0x6a JUMPI
---
0x61: V23 = 0xfe5e1853
0x66: V24 = EQ 0xfe5e1853 V10
0x67: V25 = 0xce
0x6a: JUMPI 0xce V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x6e]
---
Predecessors: [0x0, 0x60]
Successors: [0x6f]
---
0x6b JUMPDEST
0x6c PUSH2 0x72
---
0x6b: JUMPDEST 
0x6c: V26 = 0x72
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x72]
Exit stack: [V10, 0x72]

================================

Block 0x6f
[0x6f:0x6f]
---
Predecessors: [0x6b]
Successors: [0x70]
---
0x6f JUMPDEST
---
0x6f: JUMPDEST 
---
Entry stack: [V10, 0x72]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x72]

================================

Block 0x70
[0x70:0x71]
---
Predecessors: [0x6f]
Successors: [0x72]
---
0x70 JUMPDEST
0x71 JUMP
---
0x70: JUMPDEST 
0x71: JUMP 0x72
---
Entry stack: [V10, 0x72]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x72
[0x72:0x73]
---
Predecessors: [0x70]
Successors: []
---
0x72 JUMPDEST
0x73 STOP
---
0x72: JUMPDEST 
0x73: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x74
[0x74:0x7a]
---
Predecessors: [0xb]
Successors: [0x7b, 0x7c]
---
0x74 JUMPDEST
0x75 CALLVALUE
0x76 ISZERO
0x77 PUSH2 0x7c
0x7a JUMPI
---
0x74: JUMPDEST 
0x75: V27 = CALLVALUE
0x76: V28 = ISZERO V27
0x77: V29 = 0x7c
0x7a: JUMPI 0x7c V28
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x7b
[0x7b:0x7b]
---
Predecessors: [0x74]
Successors: []
---
0x7b INVALID
---
0x7b: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x7c
[0x7c:0x83]
---
Predecessors: [0x74]
Successors: [0xf4]
---
0x7c JUMPDEST
0x7d PUSH2 0x84
0x80 PUSH2 0xf4
0x83 JUMP
---
0x7c: JUMPDEST 
0x7d: V30 = 0x84
0x80: V31 = 0xf4
0x83: JUMP 0xf4
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x84]
Exit stack: [V10, 0x84]

================================

Block 0x84
[0x84:0x9f]
---
Predecessors: [0xf4]
Successors: []
---
0x84 JUMPDEST
0x85 PUSH1 0x40
0x87 MLOAD
0x88 DUP1
0x89 DUP3
0x8a PUSH1 0xff
0x8c AND
0x8d PUSH1 0xff
0x8f AND
0x90 DUP2
0x91 MSTORE
0x92 PUSH1 0x20
0x94 ADD
0x95 SWAP2
0x96 POP
0x97 POP
0x98 PUSH1 0x40
0x9a MLOAD
0x9b DUP1
0x9c SWAP2
0x9d SUB
0x9e SWAP1
0x9f RETURN
---
0x84: JUMPDEST 
0x85: V32 = 0x40
0x87: V33 = M[0x40]
0x8a: V34 = 0xff
0x8c: V35 = AND 0xff V74
0x8d: V36 = 0xff
0x8f: V37 = AND 0xff V35
0x91: M[V33] = V37
0x92: V38 = 0x20
0x94: V39 = ADD 0x20 V33
0x98: V40 = 0x40
0x9a: V41 = M[0x40]
0x9d: V42 = SUB V39 V41
0x9f: RETURN V41 V42
---
Entry stack: [V10, 0x84, V74]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x84]

================================

Block 0xa0
[0xa0:0xa6]
---
Predecessors: [0x3f]
Successors: [0xa7, 0xa8]
---
0xa0 JUMPDEST
0xa1 CALLVALUE
0xa2 ISZERO
0xa3 PUSH2 0xa8
0xa6 JUMPI
---
0xa0: JUMPDEST 
0xa1: V43 = CALLVALUE
0xa2: V44 = ISZERO V43
0xa3: V45 = 0xa8
0xa6: JUMPI 0xa8 V44
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xa7
[0xa7:0xa7]
---
Predecessors: [0xa0]
Successors: []
---
0xa7 INVALID
---
0xa7: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xa8
[0xa8:0xaf]
---
Predecessors: [0xa0]
Successors: [0x107]
---
0xa8 JUMPDEST
0xa9 PUSH2 0xb0
0xac PUSH2 0x107
0xaf JUMP
---
0xa8: JUMPDEST 
0xa9: V46 = 0xb0
0xac: V47 = 0x107
0xaf: JUMP 0x107
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xb0]
Exit stack: [V10, 0xb0]

================================

Block 0xb0
[0xb0:0xb1]
---
Predecessors: [0x184]
Successors: []
---
0xb0 JUMPDEST
0xb1 STOP
---
0xb0: JUMPDEST 
0xb1: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xb2
[0xb2:0xb8]
---
Predecessors: [0x4a]
Successors: [0xb9, 0xba]
---
0xb2 JUMPDEST
0xb3 CALLVALUE
0xb4 ISZERO
0xb5 PUSH2 0xba
0xb8 JUMPI
---
0xb2: JUMPDEST 
0xb3: V48 = CALLVALUE
0xb4: V49 = ISZERO V48
0xb5: V50 = 0xba
0xb8: JUMPI 0xba V49
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xb9
[0xb9:0xb9]
---
Predecessors: [0xb2]
Successors: []
---
0xb9 INVALID
---
0xb9: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xba
[0xba:0xc1]
---
Predecessors: [0xb2]
Successors: [0x186]
---
0xba JUMPDEST
0xbb PUSH2 0xc2
0xbe PUSH2 0x186
0xc1 JUMP
---
0xba: JUMPDEST 
0xbb: V51 = 0xc2
0xbe: V52 = 0x186
0xc1: JUMP 0x186
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xc2]
Exit stack: [V10, 0xc2]

================================

Block 0xc2
[0xc2:0xc3]
---
Predecessors: [0x1ea]
Successors: []
---
0xc2 JUMPDEST
0xc3 STOP
---
0xc2: JUMPDEST 
0xc3: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xc4
[0xc4:0xcb]
---
Predecessors: [0x55]
Successors: [0x1ec]
---
0xc4 JUMPDEST
0xc5 PUSH2 0xcc
0xc8 PUSH2 0x1ec
0xcb JUMP
---
0xc4: JUMPDEST 
0xc5: V53 = 0xcc
0xc8: V54 = 0x1ec
0xcb: JUMP 0x1ec
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xcc]
Exit stack: [V10, 0xcc]

================================

Block 0xcc
[0xcc:0xcd]
---
Predecessors: [0x307]
Successors: []
---
0xcc JUMPDEST
0xcd STOP
---
0xcc: JUMPDEST 
0xcd: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xce
[0xce:0xd4]
---
Predecessors: [0x60]
Successors: [0xd5, 0xd6]
---
0xce JUMPDEST
0xcf CALLVALUE
0xd0 ISZERO
0xd1 PUSH2 0xd6
0xd4 JUMPI
---
0xce: JUMPDEST 
0xcf: V55 = CALLVALUE
0xd0: V56 = ISZERO V55
0xd1: V57 = 0xd6
0xd4: JUMPI 0xd6 V56
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xd5
[0xd5:0xd5]
---
Predecessors: [0xce]
Successors: []
---
0xd5 INVALID
---
0xd5: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xd6
[0xd6:0xdd]
---
Predecessors: [0xce]
Successors: [0x30a]
---
0xd6 JUMPDEST
0xd7 PUSH2 0xde
0xda PUSH2 0x30a
0xdd JUMP
---
0xd6: JUMPDEST 
0xd7: V58 = 0xde
0xda: V59 = 0x30a
0xdd: JUMP 0x30a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xde]
Exit stack: [V10, 0xde]

================================

Block 0xde
[0xde:0xf3]
---
Predecessors: [0x30a]
Successors: []
---
0xde JUMPDEST
0xdf PUSH1 0x40
0xe1 MLOAD
0xe2 DUP1
0xe3 DUP3
0xe4 DUP2
0xe5 MSTORE
0xe6 PUSH1 0x20
0xe8 ADD
0xe9 SWAP2
0xea POP
0xeb POP
0xec PUSH1 0x40
0xee MLOAD
0xef DUP1
0xf0 SWAP2
0xf1 SUB
0xf2 SWAP1
0xf3 RETURN
---
0xde: JUMPDEST 
0xdf: V60 = 0x40
0xe1: V61 = M[0x40]
0xe5: M[V61] = V200
0xe6: V62 = 0x20
0xe8: V63 = ADD 0x20 V61
0xec: V64 = 0x40
0xee: V65 = M[0x40]
0xf1: V66 = SUB V63 V65
0xf3: RETURN V65 V66
---
Entry stack: [V10, 0xde, V200]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xde]

================================

Block 0xf4
[0xf4:0x106]
---
Predecessors: [0x7c]
Successors: [0x84]
---
0xf4 JUMPDEST
0xf5 PUSH1 0x4
0xf7 PUSH1 0x0
0xf9 SWAP1
0xfa SLOAD
0xfb SWAP1
0xfc PUSH2 0x100
0xff EXP
0x100 SWAP1
0x101 DIV
0x102 PUSH1 0xff
0x104 AND
0x105 DUP2
0x106 JUMP
---
0xf4: JUMPDEST 
0xf5: V67 = 0x4
0xf7: V68 = 0x0
0xfa: V69 = S[0x4]
0xfc: V70 = 0x100
0xff: V71 = EXP 0x100 0x0
0x101: V72 = DIV V69 0x1
0x102: V73 = 0xff
0x104: V74 = AND 0xff V72
0x106: JUMP 0x84
---
Entry stack: [V10, 0x84]
Stack pops: 1
Stack additions: [S0, V74]
Exit stack: [V10, 0x84, V74]

================================

Block 0x107
[0x107:0x17e]
---
Predecessors: [0xa8]
Successors: [0x17f, 0x183]
---
0x107 JUMPDEST
0x108 PUSH1 0x0
0x10a PUSH1 0x0
0x10c SWAP1
0x10d SLOAD
0x10e SWAP1
0x10f PUSH2 0x100
0x112 EXP
0x113 SWAP1
0x114 DIV
0x115 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12a AND
0x12b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x140 AND
0x141 PUSH2 0x8fc
0x144 ADDRESS
0x145 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15a AND
0x15b BALANCE
0x15c SWAP1
0x15d DUP2
0x15e ISZERO
0x15f MUL
0x160 SWAP1
0x161 PUSH1 0x40
0x163 MLOAD
0x164 DUP1
0x165 SWAP1
0x166 POP
0x167 PUSH1 0x0
0x169 PUSH1 0x40
0x16b MLOAD
0x16c DUP1
0x16d DUP4
0x16e SUB
0x16f DUP2
0x170 DUP6
0x171 DUP9
0x172 DUP9
0x173 CALL
0x174 SWAP4
0x175 POP
0x176 POP
0x177 POP
0x178 POP
0x179 ISZERO
0x17a ISZERO
0x17b PUSH2 0x183
0x17e JUMPI
---
0x107: JUMPDEST 
0x108: V75 = 0x0
0x10a: V76 = 0x0
0x10d: V77 = S[0x0]
0x10f: V78 = 0x100
0x112: V79 = EXP 0x100 0x0
0x114: V80 = DIV V77 0x1
0x115: V81 = 0xffffffffffffffffffffffffffffffffffffffff
0x12a: V82 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0x12b: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x140: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V82
0x141: V85 = 0x8fc
0x144: V86 = ADDRESS
0x145: V87 = 0xffffffffffffffffffffffffffffffffffffffff
0x15a: V88 = AND 0xffffffffffffffffffffffffffffffffffffffff V86
0x15b: V89 = BALANCE V88
0x15e: V90 = ISZERO V89
0x15f: V91 = MUL V90 0x8fc
0x161: V92 = 0x40
0x163: V93 = M[0x40]
0x167: V94 = 0x0
0x169: V95 = 0x40
0x16b: V96 = M[0x40]
0x16e: V97 = SUB V93 V96
0x173: V98 = CALL V91 V84 V89 V96 V97 V96 0x0
0x179: V99 = ISZERO V98
0x17a: V100 = ISZERO V99
0x17b: V101 = 0x183
0x17e: JUMPI 0x183 V100
---
Entry stack: [V10, 0xb0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0]

================================

Block 0x17f
[0x17f:0x182]
---
Predecessors: [0x107]
Successors: []
---
0x17f PUSH2 0x0
0x182 JUMP
---
0x17f: V102 = 0x0
0x182: THROW 
---
Entry stack: [V10, 0xb0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0]

================================

Block 0x183
[0x183:0x183]
---
Predecessors: [0x107]
Successors: [0x184]
---
0x183 JUMPDEST
---
0x183: JUMPDEST 
---
Entry stack: [V10, 0xb0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xb0]

================================

Block 0x184
[0x184:0x185]
---
Predecessors: [0x183]
Successors: [0xb0]
---
0x184 JUMPDEST
0x185 JUMP
---
0x184: JUMPDEST 
0x185: JUMP 0xb0
---
Entry stack: [V10, 0xb0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x186
[0x186:0x1e9]
---
Predecessors: [0xba]
Successors: [0x1ea]
---
0x186 JUMPDEST
0x187 PUSH1 0x2
0x189 PUSH1 0x0
0x18b SWAP1
0x18c SLOAD
0x18d SWAP1
0x18e PUSH2 0x100
0x191 EXP
0x192 SWAP1
0x193 DIV
0x194 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a9 AND
0x1aa PUSH1 0x1
0x1ac PUSH1 0x0
0x1ae PUSH2 0x100
0x1b1 EXP
0x1b2 DUP2
0x1b3 SLOAD
0x1b4 DUP2
0x1b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ca MUL
0x1cb NOT
0x1cc AND
0x1cd SWAP1
0x1ce DUP4
0x1cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e4 AND
0x1e5 MUL
0x1e6 OR
0x1e7 SWAP1
0x1e8 SSTORE
0x1e9 POP
---
0x186: JUMPDEST 
0x187: V103 = 0x2
0x189: V104 = 0x0
0x18c: V105 = S[0x2]
0x18e: V106 = 0x100
0x191: V107 = EXP 0x100 0x0
0x193: V108 = DIV V105 0x1
0x194: V109 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a9: V110 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x1aa: V111 = 0x1
0x1ac: V112 = 0x0
0x1ae: V113 = 0x100
0x1b1: V114 = EXP 0x100 0x0
0x1b3: V115 = S[0x1]
0x1b5: V116 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ca: V117 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x1cb: V118 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1cc: V119 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V115
0x1cf: V120 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e4: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x1e5: V122 = MUL V121 0x1
0x1e6: V123 = OR V122 V119
0x1e8: S[0x1] = V123
---
Entry stack: [V10, 0xc2]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc2]

================================

Block 0x1ea
[0x1ea:0x1eb]
---
Predecessors: [0x186]
Successors: [0xc2]
---
0x1ea JUMPDEST
0x1eb JUMP
---
0x1ea: JUMPDEST 
0x1eb: JUMP 0xc2
---
Entry stack: [V10, 0xc2]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ec
[0x1ec:0x2cd]
---
Predecessors: [0xc4]
Successors: [0x2ce, 0x2cf]
---
0x1ec JUMPDEST
0x1ed PUSH1 0x0
0x1ef CALLVALUE
0x1f0 PUSH1 0x3
0x1f2 PUSH1 0x0
0x1f4 DUP3
0x1f5 DUP3
0x1f6 SLOAD
0x1f7 ADD
0x1f8 SWAP3
0x1f9 POP
0x1fa POP
0x1fb DUP2
0x1fc SWAP1
0x1fd SSTORE
0x1fe POP
0x1ff PUSH1 0x4
0x201 PUSH1 0x0
0x203 DUP2
0x204 DUP2
0x205 SWAP1
0x206 SLOAD
0x207 SWAP1
0x208 PUSH2 0x100
0x20b EXP
0x20c SWAP1
0x20d DIV
0x20e PUSH1 0xff
0x210 AND
0x211 DUP1
0x212 SWAP3
0x213 SWAP2
0x214 SWAP1
0x215 PUSH1 0x1
0x217 ADD
0x218 SWAP2
0x219 SWAP1
0x21a PUSH2 0x100
0x21d EXP
0x21e DUP2
0x21f SLOAD
0x220 DUP2
0x221 PUSH1 0xff
0x223 MUL
0x224 NOT
0x225 AND
0x226 SWAP1
0x227 DUP4
0x228 PUSH1 0xff
0x22a AND
0x22b MUL
0x22c OR
0x22d SWAP1
0x22e SSTORE
0x22f POP
0x230 POP
0x231 ADDRESS
0x232 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x247 AND
0x248 BALANCE
0x249 SWAP1
0x24a POP
0x24b PUSH1 0x1
0x24d PUSH1 0x0
0x24f SWAP1
0x250 SLOAD
0x251 SWAP1
0x252 PUSH2 0x100
0x255 EXP
0x256 SWAP1
0x257 DIV
0x258 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x26d AND
0x26e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x283 AND
0x284 PUSH4 0x553df021
0x289 CALLVALUE
0x28a PUSH1 0x40
0x28c MLOAD
0x28d DUP3
0x28e PUSH4 0xffffffff
0x293 AND
0x294 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2b2 MUL
0x2b3 DUP2
0x2b4 MSTORE
0x2b5 PUSH1 0x4
0x2b7 ADD
0x2b8 DUP1
0x2b9 SWAP1
0x2ba POP
0x2bb PUSH1 0x0
0x2bd PUSH1 0x40
0x2bf MLOAD
0x2c0 DUP1
0x2c1 DUP4
0x2c2 SUB
0x2c3 DUP2
0x2c4 DUP6
0x2c5 DUP9
0x2c6 DUP1
0x2c7 EXTCODESIZE
0x2c8 ISZERO
0x2c9 ISZERO
0x2ca PUSH2 0x2cf
0x2cd JUMPI
---
0x1ec: JUMPDEST 
0x1ed: V124 = 0x0
0x1ef: V125 = CALLVALUE
0x1f0: V126 = 0x3
0x1f2: V127 = 0x0
0x1f6: V128 = S[0x3]
0x1f7: V129 = ADD V128 V125
0x1fd: S[0x3] = V129
0x1ff: V130 = 0x4
0x201: V131 = 0x0
0x206: V132 = S[0x4]
0x208: V133 = 0x100
0x20b: V134 = EXP 0x100 0x0
0x20d: V135 = DIV V132 0x1
0x20e: V136 = 0xff
0x210: V137 = AND 0xff V135
0x215: V138 = 0x1
0x217: V139 = ADD 0x1 V137
0x21a: V140 = 0x100
0x21d: V141 = EXP 0x100 0x0
0x21f: V142 = S[0x4]
0x221: V143 = 0xff
0x223: V144 = MUL 0xff 0x1
0x224: V145 = NOT 0xff
0x225: V146 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V142
0x228: V147 = 0xff
0x22a: V148 = AND 0xff V139
0x22b: V149 = MUL V148 0x1
0x22c: V150 = OR V149 V146
0x22e: S[0x4] = V150
0x231: V151 = ADDRESS
0x232: V152 = 0xffffffffffffffffffffffffffffffffffffffff
0x247: V153 = AND 0xffffffffffffffffffffffffffffffffffffffff V151
0x248: V154 = BALANCE V153
0x24b: V155 = 0x1
0x24d: V156 = 0x0
0x250: V157 = S[0x1]
0x252: V158 = 0x100
0x255: V159 = EXP 0x100 0x0
0x257: V160 = DIV V157 0x1
0x258: V161 = 0xffffffffffffffffffffffffffffffffffffffff
0x26d: V162 = AND 0xffffffffffffffffffffffffffffffffffffffff V160
0x26e: V163 = 0xffffffffffffffffffffffffffffffffffffffff
0x283: V164 = AND 0xffffffffffffffffffffffffffffffffffffffff V162
0x284: V165 = 0x553df021
0x289: V166 = CALLVALUE
0x28a: V167 = 0x40
0x28c: V168 = M[0x40]
0x28e: V169 = 0xffffffff
0x293: V170 = AND 0xffffffff 0x553df021
0x294: V171 = 0x100000000000000000000000000000000000000000000000000000000
0x2b2: V172 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x553df021
0x2b4: M[V168] = 0x553df02100000000000000000000000000000000000000000000000000000000
0x2b5: V173 = 0x4
0x2b7: V174 = ADD 0x4 V168
0x2bb: V175 = 0x0
0x2bd: V176 = 0x40
0x2bf: V177 = M[0x40]
0x2c2: V178 = SUB V174 V177
0x2c7: V179 = EXTCODESIZE V164
0x2c8: V180 = ISZERO V179
0x2c9: V181 = ISZERO V180
0x2ca: V182 = 0x2cf
0x2cd: JUMPI 0x2cf V181
---
Entry stack: [V10, 0xcc]
Stack pops: 0
Stack additions: [V154, V164, 0x553df021, V166, V174, 0x0, V177, V178, V177, V166, V164]
Exit stack: [V10, 0xcc, V154, V164, 0x553df021, V166, V174, 0x0, V177, V178, V177, V166, V164]

================================

Block 0x2ce
[0x2ce:0x2ce]
---
Predecessors: [0x1ec]
Successors: []
---
0x2ce INVALID
---
0x2ce: INVALID 
---
Entry stack: [V10, 0xcc, V154, V164, 0x553df021, V166, V174, 0x0, V177, V178, V177, V166, V164]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xcc, V154, V164, 0x553df021, V166, V174, 0x0, V177, V178, V177, V166, V164]

================================

Block 0x2cf
[0x2cf:0x2db]
---
Predecessors: [0x1ec]
Successors: [0x2dc, 0x2dd]
---
0x2cf JUMPDEST
0x2d0 PUSH2 0x235a
0x2d3 GAS
0x2d4 SUB
0x2d5 CALL
0x2d6 ISZERO
0x2d7 ISZERO
0x2d8 PUSH2 0x2dd
0x2db JUMPI
---
0x2cf: JUMPDEST 
0x2d0: V183 = 0x235a
0x2d3: V184 = GAS
0x2d4: V185 = SUB V184 0x235a
0x2d5: V186 = CALL V185 V164 V166 V177 V178 V177 0x0
0x2d6: V187 = ISZERO V186
0x2d7: V188 = ISZERO V187
0x2d8: V189 = 0x2dd
0x2db: JUMPI 0x2dd V188
---
Entry stack: [V10, 0xcc, V154, V164, 0x553df021, V166, V174, 0x0, V177, V178, V177, V166, V164]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xcc, V154, V164, 0x553df021, V166, V174]

================================

Block 0x2dc
[0x2dc:0x2dc]
---
Predecessors: [0x2cf]
Successors: []
---
0x2dc INVALID
---
0x2dc: INVALID 
---
Entry stack: [V10, 0xcc, V154, V164, 0x553df021, V166, V174]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xcc, V154, V164, 0x553df021, V166, V174]

================================

Block 0x2dd
[0x2dd:0x301]
---
Predecessors: [0x2cf]
Successors: [0x302, 0x306]
---
0x2dd JUMPDEST
0x2de POP
0x2df POP
0x2e0 POP
0x2e1 POP
0x2e2 DUP1
0x2e3 ADDRESS
0x2e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f9 AND
0x2fa BALANCE
0x2fb GT
0x2fc ISZERO
0x2fd ISZERO
0x2fe PUSH2 0x306
0x301 JUMPI
---
0x2dd: JUMPDEST 
0x2e3: V190 = ADDRESS
0x2e4: V191 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f9: V192 = AND 0xffffffffffffffffffffffffffffffffffffffff V190
0x2fa: V193 = BALANCE V192
0x2fb: V194 = GT V193 V154
0x2fc: V195 = ISZERO V194
0x2fd: V196 = ISZERO V195
0x2fe: V197 = 0x306
0x301: JUMPI 0x306 V196
---
Entry stack: [V10, 0xcc, V154, V164, 0x553df021, V166, V174]
Stack pops: 5
Stack additions: [S4]
Exit stack: [V10, 0xcc, V154]

================================

Block 0x302
[0x302:0x305]
---
Predecessors: [0x2dd]
Successors: []
---
0x302 PUSH2 0x0
0x305 JUMP
---
0x302: V198 = 0x0
0x305: THROW 
---
Entry stack: [V10, 0xcc, V154]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xcc, V154]

================================

Block 0x306
[0x306:0x306]
---
Predecessors: [0x2dd]
Successors: [0x307]
---
0x306 JUMPDEST
---
0x306: JUMPDEST 
---
Entry stack: [V10, 0xcc, V154]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xcc, V154]

================================

Block 0x307
[0x307:0x309]
---
Predecessors: [0x306]
Successors: [0xcc]
---
0x307 JUMPDEST
0x308 POP
0x309 JUMP
---
0x307: JUMPDEST 
0x309: JUMP 0xcc
---
Entry stack: [V10, 0xcc, V154]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x30a
[0x30a:0x30f]
---
Predecessors: [0xd6]
Successors: [0xde]
---
0x30a JUMPDEST
0x30b PUSH1 0x3
0x30d SLOAD
0x30e DUP2
0x30f JUMP
---
0x30a: JUMPDEST 
0x30b: V199 = 0x3
0x30d: V200 = S[0x3]
0x30f: JUMP 0xde
---
Entry stack: [V10, 0xde]
Stack pops: 1
Stack additions: [S0, V200]
Exit stack: [V10, 0xde, V200]

================================

Block 0x310
[0x310:0x33e]
---
Predecessors: []
Successors: []
---
0x310 STOP
0x311 LOG1
0x312 PUSH6 0x627a7a723058
0x319 SHA3
0x31a SHA3
0x31b SSTORE
0x31c MISSING 0x49
0x31d SWAP9
0x31e SWAP12
0x31f MISSING 0xe8
0x320 SWAP16
0x321 DUP4
0x322 XOR
0x323 MISSING 0x4d
0x324 MISSING 0x24
0x325 MISSING 0x4d
0x326 MISSING 0xe8
0x327 SWAP5
0x328 MISSING 0x25
0x329 ADD
0x32a DUP15
0x32b NUMBER
0x32c SELFDESTRUCT
0x32d MISSING 0xc5
0x32e SWAP12
0x32f MISSING 0x2d
0x330 XOR
0x331 NOT
0x332 MISSING 0x5d
0x333 PUSH11 0x7fc5cf82f18a0029
---
0x310: STOP 
0x311: LOG S0 S1 S2
0x312: V201 = 0x627a7a723058
0x319: V202 = SHA3 0x627a7a723058 S3
0x31a: V203 = SHA3 V202 S4
0x31b: S[V203] = S5
0x31c: MISSING 0x49
0x31f: MISSING 0xe8
0x322: V204 = XOR S3 S16
0x323: MISSING 0x4d
0x324: MISSING 0x24
0x325: MISSING 0x4d
0x326: MISSING 0xe8
0x328: MISSING 0x25
0x329: V205 = ADD S0 S1
0x32b: V206 = NUMBER
0x32c: SELFDESTRUCT V206
0x32d: MISSING 0xc5
0x32f: MISSING 0x2d
0x330: V207 = XOR S0 S1
0x331: V208 = NOT V207
0x332: MISSING 0x5d
0x333: V209 = 0x7fc5cf82f18a0029
---
Entry stack: []
Stack pops: 0
Stack additions: [S12, S1, S2, S3, S4, S5, S6, S7, S8, S0, S10, S11, S9, V204, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S0, S5, S1, S2, S3, S4, S0, S15, V205, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S12, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S0, V208, 0x7fc5cf82f18a0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x2c4e591b
Entry block: 0x74
Exit block: 0x84
Body: 0x74, 0x7b, 0x7c, 0x84, 0xf4

Function 1:
Public function signature: 0x793cd71e
Entry block: 0xa0
Exit block: 0xb0
Body: 0xa0, 0xa7, 0xa8, 0xb0, 0x107, 0x17f, 0x183, 0x184

Function 2:
Public function signature: 0x824cbd56
Entry block: 0xb2
Exit block: 0xc2
Body: 0xb2, 0xb9, 0xba, 0xc2, 0x186, 0x1ea

Function 3:
Public function signature: 0xf5632bf1
Entry block: 0xc4
Exit block: 0xcc
Body: 0xc4, 0xcc, 0x1ec, 0x2ce, 0x2cf, 0x2dc, 0x2dd, 0x302, 0x306, 0x307

Function 4:
Public function signature: 0xfe5e1853
Entry block: 0xce
Exit block: 0xde
Body: 0xce, 0xd5, 0xd6, 0xde, 0x30a

Function 5:
Public fallback function
Entry block: 0x6b
Exit block: 0x72
Body: 0x6b, 0x6f, 0x70, 0x72

