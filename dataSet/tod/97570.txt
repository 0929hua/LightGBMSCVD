Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x69]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x69
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x69
0xc: JUMPI 0x69 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x75]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x2c4e722e
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x75
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x2c4e722e
0x22: V15 = EQ V13 0x2c4e722e
0x23: V16 = 0x75
0x26: JUMPI 0x75 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x9a]
---
0x27 DUP1
0x28 PUSH4 0x475a9fa9
0x2d EQ
0x2e PUSH2 0x9a
0x31 JUMPI
---
0x28: V17 = 0x475a9fa9
0x2d: V18 = EQ 0x475a9fa9 V13
0x2e: V19 = 0x9a
0x31: JUMPI 0x9a V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0xbe]
---
0x32 DUP1
0x33 PUSH4 0x7a118fdc
0x38 EQ
0x39 PUSH2 0xbe
0x3c JUMPI
---
0x33: V20 = 0x7a118fdc
0x38: V21 = EQ 0x7a118fdc V13
0x39: V22 = 0xbe
0x3c: JUMPI 0xbe V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0xed]
---
0x3d DUP1
0x3e PUSH4 0x8da5cb5b
0x43 EQ
0x44 PUSH2 0xed
0x47 JUMPI
---
0x3e: V23 = 0x8da5cb5b
0x43: V24 = EQ 0x8da5cb5b V13
0x44: V25 = 0xed
0x47: JUMPI 0xed V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x100]
---
0x48 DUP1
0x49 PUSH4 0xec8ac4d8
0x4e EQ
0x4f PUSH2 0x100
0x52 JUMPI
---
0x49: V26 = 0xec8ac4d8
0x4e: V27 = EQ 0xec8ac4d8 V13
0x4f: V28 = 0x100
0x52: JUMPI 0x100 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x128]
---
0x53 DUP1
0x54 PUSH4 0xf2fde38b
0x59 EQ
0x5a PUSH2 0x128
0x5d JUMPI
---
0x54: V29 = 0xf2fde38b
0x59: V30 = EQ 0xf2fde38b V13
0x5a: V31 = 0x128
0x5d: JUMPI 0x128 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x147]
---
0x5e DUP1
0x5f PUSH4 0xfd1fc4a0
0x64 EQ
0x65 PUSH2 0x147
0x68 JUMPI
---
0x5f: V32 = 0xfd1fc4a0
0x64: V33 = EQ 0xfd1fc4a0 V13
0x65: V34 = 0x147
0x68: JUMPI 0x147 V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x71]
---
Predecessors: [0x0, 0x5e]
Successors: [0x198]
---
0x69 JUMPDEST
0x6a PUSH2 0x72
0x6d CALLER
0x6e PUSH2 0x198
0x71 JUMP
---
0x69: JUMPDEST 
0x6a: V35 = 0x72
0x6d: V36 = CALLER
0x6e: V37 = 0x198
0x71: JUMP 0x198
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x72, V36]
Exit stack: [V13, 0x72, V36]

================================

Block 0x72
[0x72:0x74]
---
Predecessors: [0x270]
Successors: []
---
0x72 JUMPDEST
0x73 POP
0x74 STOP
---
0x72: JUMPDEST 
0x74: STOP 
---
Entry stack: [V13, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x75
[0x75:0x7b]
---
Predecessors: [0xd]
Successors: [0x7c, 0x80]
---
0x75 JUMPDEST
0x76 CALLVALUE
0x77 ISZERO
0x78 PUSH2 0x80
0x7b JUMPI
---
0x75: JUMPDEST 
0x76: V38 = CALLVALUE
0x77: V39 = ISZERO V38
0x78: V40 = 0x80
0x7b: JUMPI 0x80 V39
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x7c
[0x7c:0x7f]
---
Predecessors: [0x75]
Successors: []
---
0x7c PUSH1 0x0
0x7e DUP1
0x7f REVERT
---
0x7c: V41 = 0x0
0x7f: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x80
[0x80:0x87]
---
Predecessors: [0x75]
Successors: [0x278]
---
0x80 JUMPDEST
0x81 PUSH2 0x88
0x84 PUSH2 0x278
0x87 JUMP
---
0x80: JUMPDEST 
0x81: V42 = 0x88
0x84: V43 = 0x278
0x87: JUMP 0x278
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x88]
Exit stack: [V13, 0x88]

================================

Block 0x88
[0x88:0x99]
---
Predecessors: [0x278]
Successors: []
---
0x88 JUMPDEST
0x89 PUSH1 0x40
0x8b MLOAD
0x8c SWAP1
0x8d DUP2
0x8e MSTORE
0x8f PUSH1 0x20
0x91 ADD
0x92 PUSH1 0x40
0x94 MLOAD
0x95 DUP1
0x96 SWAP2
0x97 SUB
0x98 SWAP1
0x99 RETURN
---
0x88: JUMPDEST 
0x89: V44 = 0x40
0x8b: V45 = M[0x40]
0x8e: M[V45] = V231
0x8f: V46 = 0x20
0x91: V47 = ADD 0x20 V45
0x92: V48 = 0x40
0x94: V49 = M[0x40]
0x97: V50 = SUB V47 V49
0x99: RETURN V49 V50
---
Entry stack: [V13, 0x88, V231]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x88]

================================

Block 0x9a
[0x9a:0xa0]
---
Predecessors: [0x27]
Successors: [0xa1, 0xa5]
---
0x9a JUMPDEST
0x9b CALLVALUE
0x9c ISZERO
0x9d PUSH2 0xa5
0xa0 JUMPI
---
0x9a: JUMPDEST 
0x9b: V51 = CALLVALUE
0x9c: V52 = ISZERO V51
0x9d: V53 = 0xa5
0xa0: JUMPI 0xa5 V52
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xa1
[0xa1:0xa4]
---
Predecessors: [0x9a]
Successors: []
---
0xa1 PUSH1 0x0
0xa3 DUP1
0xa4 REVERT
---
0xa1: V54 = 0x0
0xa4: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xa5
[0xa5:0xbb]
---
Predecessors: [0x9a]
Successors: [0x27e]
---
0xa5 JUMPDEST
0xa6 PUSH2 0xbc
0xa9 PUSH1 0x1
0xab PUSH1 0xa0
0xad PUSH1 0x2
0xaf EXP
0xb0 SUB
0xb1 PUSH1 0x4
0xb3 CALLDATALOAD
0xb4 AND
0xb5 PUSH1 0x24
0xb7 CALLDATALOAD
0xb8 PUSH2 0x27e
0xbb JUMP
---
0xa5: JUMPDEST 
0xa6: V55 = 0xbc
0xa9: V56 = 0x1
0xab: V57 = 0xa0
0xad: V58 = 0x2
0xaf: V59 = EXP 0x2 0xa0
0xb0: V60 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb1: V61 = 0x4
0xb3: V62 = CALLDATALOAD 0x4
0xb4: V63 = AND V62 0xffffffffffffffffffffffffffffffffffffffff
0xb5: V64 = 0x24
0xb7: V65 = CALLDATALOAD 0x24
0xb8: V66 = 0x27e
0xbb: JUMP 0x27e
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xbc, V63, V65]
Exit stack: [V13, 0xbc, V63, V65]

================================

Block 0xbc
[0xbc:0xbd]
---
Predecessors: [0x348, 0x3ad, 0x53d]
Successors: []
---
0xbc JUMPDEST
0xbd STOP
---
0xbc: JUMPDEST 
0xbd: STOP 
---
Entry stack: [V13, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S1, S0]

================================

Block 0xbe
[0xbe:0xc4]
---
Predecessors: [0x32]
Successors: [0xc5, 0xc9]
---
0xbe JUMPDEST
0xbf CALLVALUE
0xc0 ISZERO
0xc1 PUSH2 0xc9
0xc4 JUMPI
---
0xbe: JUMPDEST 
0xbf: V67 = CALLVALUE
0xc0: V68 = ISZERO V67
0xc1: V69 = 0xc9
0xc4: JUMPI 0xc9 V68
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xc5
[0xc5:0xc8]
---
Predecessors: [0xbe]
Successors: []
---
0xc5 PUSH1 0x0
0xc7 DUP1
0xc8 REVERT
---
0xc5: V70 = 0x0
0xc8: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xc9
[0xc9:0xd0]
---
Predecessors: [0xbe]
Successors: [0x356]
---
0xc9 JUMPDEST
0xca PUSH2 0xd1
0xcd PUSH2 0x356
0xd0 JUMP
---
0xc9: JUMPDEST 
0xca: V71 = 0xd1
0xcd: V72 = 0x356
0xd0: JUMP 0x356
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xd1]
Exit stack: [V13, 0xd1]

================================

Block 0xd1
[0xd1:0xec]
---
Predecessors: [0x356, 0x36e]
Successors: []
---
0xd1 JUMPDEST
0xd2 PUSH1 0x40
0xd4 MLOAD
0xd5 PUSH1 0x1
0xd7 PUSH1 0xa0
0xd9 PUSH1 0x2
0xdb EXP
0xdc SUB
0xdd SWAP1
0xde SWAP2
0xdf AND
0xe0 DUP2
0xe1 MSTORE
0xe2 PUSH1 0x20
0xe4 ADD
0xe5 PUSH1 0x40
0xe7 MLOAD
0xe8 DUP1
0xe9 SWAP2
0xea SUB
0xeb SWAP1
0xec RETURN
---
0xd1: JUMPDEST 
0xd2: V73 = 0x40
0xd4: V74 = M[0x40]
0xd5: V75 = 0x1
0xd7: V76 = 0xa0
0xd9: V77 = 0x2
0xdb: V78 = EXP 0x2 0xa0
0xdc: V79 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdf: V80 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xe1: M[V74] = V80
0xe2: V81 = 0x20
0xe4: V82 = ADD 0x20 V74
0xe5: V83 = 0x40
0xe7: V84 = M[0x40]
0xea: V85 = SUB V82 V84
0xec: RETURN V84 V85
---
Entry stack: [V13, 0xd1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xd1]

================================

Block 0xed
[0xed:0xf3]
---
Predecessors: [0x3d]
Successors: [0xf4, 0xf8]
---
0xed JUMPDEST
0xee CALLVALUE
0xef ISZERO
0xf0 PUSH2 0xf8
0xf3 JUMPI
---
0xed: JUMPDEST 
0xee: V86 = CALLVALUE
0xef: V87 = ISZERO V86
0xf0: V88 = 0xf8
0xf3: JUMPI 0xf8 V87
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xf4
[0xf4:0xf7]
---
Predecessors: [0xed]
Successors: []
---
0xf4 PUSH1 0x0
0xf6 DUP1
0xf7 REVERT
---
0xf4: V89 = 0x0
0xf7: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xf8
[0xf8:0xff]
---
Predecessors: [0xed]
Successors: [0x36e]
---
0xf8 JUMPDEST
0xf9 PUSH2 0xd1
0xfc PUSH2 0x36e
0xff JUMP
---
0xf8: JUMPDEST 
0xf9: V90 = 0xd1
0xfc: V91 = 0x36e
0xff: JUMP 0x36e
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xd1]
Exit stack: [V13, 0xd1]

================================

Block 0x100
[0x100:0x113]
---
Predecessors: [0x48]
Successors: [0x198]
---
0x100 JUMPDEST
0x101 PUSH2 0x114
0x104 PUSH1 0x1
0x106 PUSH1 0xa0
0x108 PUSH1 0x2
0x10a EXP
0x10b SUB
0x10c PUSH1 0x4
0x10e CALLDATALOAD
0x10f AND
0x110 PUSH2 0x198
0x113 JUMP
---
0x100: JUMPDEST 
0x101: V92 = 0x114
0x104: V93 = 0x1
0x106: V94 = 0xa0
0x108: V95 = 0x2
0x10a: V96 = EXP 0x2 0xa0
0x10b: V97 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10c: V98 = 0x4
0x10e: V99 = CALLDATALOAD 0x4
0x10f: V100 = AND V99 0xffffffffffffffffffffffffffffffffffffffff
0x110: V101 = 0x198
0x113: JUMP 0x198
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x114, V100]
Exit stack: [V13, 0x114, V100]

================================

Block 0x114
[0x114:0x127]
---
Predecessors: [0x270]
Successors: []
---
0x114 JUMPDEST
0x115 PUSH1 0x40
0x117 MLOAD
0x118 SWAP1
0x119 ISZERO
0x11a ISZERO
0x11b DUP2
0x11c MSTORE
0x11d PUSH1 0x20
0x11f ADD
0x120 PUSH1 0x40
0x122 MLOAD
0x123 DUP1
0x124 SWAP2
0x125 SUB
0x126 SWAP1
0x127 RETURN
---
0x114: JUMPDEST 
0x115: V102 = 0x40
0x117: V103 = M[0x40]
0x119: V104 = ISZERO 0x1
0x11a: V105 = ISZERO 0x0
0x11c: M[V103] = 0x1
0x11d: V106 = 0x20
0x11f: V107 = ADD 0x20 V103
0x120: V108 = 0x40
0x122: V109 = M[0x40]
0x125: V110 = SUB V107 V109
0x127: RETURN V109 V110
---
Entry stack: [V13, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x128
[0x128:0x12e]
---
Predecessors: [0x53]
Successors: [0x12f, 0x133]
---
0x128 JUMPDEST
0x129 CALLVALUE
0x12a ISZERO
0x12b PUSH2 0x133
0x12e JUMPI
---
0x128: JUMPDEST 
0x129: V111 = CALLVALUE
0x12a: V112 = ISZERO V111
0x12b: V113 = 0x133
0x12e: JUMPI 0x133 V112
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x12f
[0x12f:0x132]
---
Predecessors: [0x128]
Successors: []
---
0x12f PUSH1 0x0
0x131 DUP1
0x132 REVERT
---
0x12f: V114 = 0x0
0x132: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x133
[0x133:0x146]
---
Predecessors: [0x128]
Successors: [0x37d]
---
0x133 JUMPDEST
0x134 PUSH2 0xbc
0x137 PUSH1 0x1
0x139 PUSH1 0xa0
0x13b PUSH1 0x2
0x13d EXP
0x13e SUB
0x13f PUSH1 0x4
0x141 CALLDATALOAD
0x142 AND
0x143 PUSH2 0x37d
0x146 JUMP
---
0x133: JUMPDEST 
0x134: V115 = 0xbc
0x137: V116 = 0x1
0x139: V117 = 0xa0
0x13b: V118 = 0x2
0x13d: V119 = EXP 0x2 0xa0
0x13e: V120 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13f: V121 = 0x4
0x141: V122 = CALLDATALOAD 0x4
0x142: V123 = AND V122 0xffffffffffffffffffffffffffffffffffffffff
0x143: V124 = 0x37d
0x146: JUMP 0x37d
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xbc, V123]
Exit stack: [V13, 0xbc, V123]

================================

Block 0x147
[0x147:0x14d]
---
Predecessors: [0x5e]
Successors: [0x14e, 0x152]
---
0x147 JUMPDEST
0x148 CALLVALUE
0x149 ISZERO
0x14a PUSH2 0x152
0x14d JUMPI
---
0x147: JUMPDEST 
0x148: V125 = CALLVALUE
0x149: V126 = ISZERO V125
0x14a: V127 = 0x152
0x14d: JUMPI 0x152 V126
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x14e
[0x14e:0x151]
---
Predecessors: [0x147]
Successors: []
---
0x14e PUSH1 0x0
0x150 DUP1
0x151 REVERT
---
0x14e: V128 = 0x0
0x151: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x152
[0x152:0x197]
---
Predecessors: [0x147]
Successors: [0x42e]
---
0x152 JUMPDEST
0x153 PUSH2 0xbc
0x156 PUSH1 0x4
0x158 PUSH1 0x24
0x15a DUP2
0x15b CALLDATALOAD
0x15c DUP2
0x15d DUP2
0x15e ADD
0x15f SWAP1
0x160 DUP4
0x161 ADD
0x162 CALLDATALOAD
0x163 DUP1
0x164 PUSH1 0x20
0x166 DUP2
0x167 DUP2
0x168 MUL
0x169 ADD
0x16a PUSH1 0x40
0x16c MLOAD
0x16d SWAP1
0x16e DUP2
0x16f ADD
0x170 PUSH1 0x40
0x172 MSTORE
0x173 DUP1
0x174 SWAP4
0x175 SWAP3
0x176 SWAP2
0x177 SWAP1
0x178 DUP2
0x179 DUP2
0x17a MSTORE
0x17b PUSH1 0x20
0x17d ADD
0x17e DUP4
0x17f DUP4
0x180 PUSH1 0x20
0x182 MUL
0x183 DUP1
0x184 DUP3
0x185 DUP5
0x186 CALLDATACOPY
0x187 POP
0x188 SWAP5
0x189 SWAP7
0x18a POP
0x18b POP
0x18c SWAP4
0x18d CALLDATALOAD
0x18e SWAP4
0x18f POP
0x190 PUSH2 0x42e
0x193 SWAP3
0x194 POP
0x195 POP
0x196 POP
0x197 JUMP
---
0x152: JUMPDEST 
0x153: V129 = 0xbc
0x156: V130 = 0x4
0x158: V131 = 0x24
0x15b: V132 = CALLDATALOAD 0x4
0x15e: V133 = ADD V132 0x24
0x161: V134 = ADD 0x4 V132
0x162: V135 = CALLDATALOAD V134
0x164: V136 = 0x20
0x168: V137 = MUL 0x20 V135
0x169: V138 = ADD V137 0x20
0x16a: V139 = 0x40
0x16c: V140 = M[0x40]
0x16f: V141 = ADD V140 V138
0x170: V142 = 0x40
0x172: M[0x40] = V141
0x17a: M[V140] = V135
0x17b: V143 = 0x20
0x17d: V144 = ADD 0x20 V140
0x180: V145 = 0x20
0x182: V146 = MUL 0x20 V135
0x186: CALLDATACOPY V144 V133 V146
0x18d: V147 = CALLDATALOAD 0x24
0x190: V148 = 0x42e
0x197: JUMP 0x42e
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xbc, V140, V147]
Exit stack: [V13, 0xbc, V140, V147]

================================

Block 0x198
[0x198:0x1aa]
---
Predecessors: [0x69, 0x100]
Successors: [0x1ab, 0x1af]
---
0x198 JUMPDEST
0x199 PUSH1 0x0
0x19b PUSH1 0x1
0x19d PUSH1 0xa0
0x19f PUSH1 0x2
0x1a1 EXP
0x1a2 SUB
0x1a3 DUP3
0x1a4 AND
0x1a5 ISZERO
0x1a6 ISZERO
0x1a7 PUSH2 0x1af
0x1aa JUMPI
---
0x198: JUMPDEST 
0x199: V149 = 0x0
0x19b: V150 = 0x1
0x19d: V151 = 0xa0
0x19f: V152 = 0x2
0x1a1: V153 = EXP 0x2 0xa0
0x1a2: V154 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a4: V155 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1a5: V156 = ISZERO V155
0x1a6: V157 = ISZERO V156
0x1a7: V158 = 0x1af
0x1aa: JUMPI 0x1af V157
---
Entry stack: [V13, {0x72, 0x114}, S0]
Stack pops: 1
Stack additions: [S0, 0x0]
Exit stack: [V13, {0x72, 0x114}, S0, 0x0]

================================

Block 0x1ab
[0x1ab:0x1ae]
---
Predecessors: [0x198]
Successors: []
---
0x1ab PUSH1 0x0
0x1ad DUP1
0x1ae REVERT
---
0x1ab: V159 = 0x0
0x1ae: REVERT 0x0 0x0
---
Entry stack: [V13, {0x72, 0x114}, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, {0x72, 0x114}, S1, 0x0]

================================

Block 0x1af
[0x1af:0x1f3]
---
Predecessors: [0x198]
Successors: [0x542]
---
0x1af JUMPDEST
0x1b0 PUSH20 0x8b0c9f462c239c963d8760105cbc935c63d85680
0x1c5 PUSH1 0x1
0x1c7 PUSH1 0xa0
0x1c9 PUSH1 0x2
0x1cb EXP
0x1cc SUB
0x1cd AND
0x1ce PUSH4 0xa9059cbb
0x1d3 CALLER
0x1d4 PUSH2 0x200
0x1d7 PUSH8 0xde0b6b3a7640000
0x1e0 PUSH2 0x1f4
0x1e3 PUSH1 0x1
0x1e5 SLOAD
0x1e6 CALLVALUE
0x1e7 PUSH2 0x542
0x1ea SWAP1
0x1eb SWAP2
0x1ec SWAP1
0x1ed PUSH4 0xffffffff
0x1f2 AND
0x1f3 JUMP
---
0x1af: JUMPDEST 
0x1b0: V160 = 0x8b0c9f462c239c963d8760105cbc935c63d85680
0x1c5: V161 = 0x1
0x1c7: V162 = 0xa0
0x1c9: V163 = 0x2
0x1cb: V164 = EXP 0x2 0xa0
0x1cc: V165 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1cd: V166 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x8b0c9f462c239c963d8760105cbc935c63d85680
0x1ce: V167 = 0xa9059cbb
0x1d3: V168 = CALLER
0x1d4: V169 = 0x200
0x1d7: V170 = 0xde0b6b3a7640000
0x1e0: V171 = 0x1f4
0x1e3: V172 = 0x1
0x1e5: V173 = S[0x1]
0x1e6: V174 = CALLVALUE
0x1e7: V175 = 0x542
0x1ed: V176 = 0xffffffff
0x1f2: V177 = AND 0xffffffff 0x542
0x1f3: JUMP 0x542
---
Entry stack: [V13, {0x72, 0x114}, S1, 0x0]
Stack pops: 0
Stack additions: [0x8b0c9f462c239c963d8760105cbc935c63d85680, 0xa9059cbb, V168, 0x200, 0xde0b6b3a7640000, 0x1f4, V174, V173]
Exit stack: [V13, {0x72, 0x114}, S1, 0x0, 0x8b0c9f462c239c963d8760105cbc935c63d85680, 0xa9059cbb, V168, 0x200, 0xde0b6b3a7640000, 0x1f4, V174, V173]

================================

Block 0x1f4
[0x1f4:0x1ff]
---
Predecessors: [0x566]
Successors: [0x56d]
---
0x1f4 JUMPDEST
0x1f5 SWAP1
0x1f6 PUSH4 0xffffffff
0x1fb PUSH2 0x56d
0x1fe AND
0x1ff JUMP
---
0x1f4: JUMPDEST 
0x1f6: V178 = 0xffffffff
0x1fb: V179 = 0x56d
0x1fe: V180 = AND 0x56d 0xffffffff
0x1ff: JUMP 0x56d
---
Entry stack: [V13, S8, S7, S6, S5, S4, S3, {0x200, 0xa9059cbb}, S1, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [V13, S8, S7, S6, S5, S4, S3, {0x200, 0xa9059cbb}, S0, S1]

================================

Block 0x200
[0x200:0x247]
---
Predecessors: [0x57b]
Successors: [0x248, 0x24c]
---
0x200 JUMPDEST
0x201 PUSH1 0x0
0x203 PUSH1 0x40
0x205 MLOAD
0x206 PUSH1 0x20
0x208 ADD
0x209 MSTORE
0x20a PUSH1 0x40
0x20c MLOAD
0x20d PUSH1 0xe0
0x20f PUSH1 0x2
0x211 EXP
0x212 PUSH4 0xffffffff
0x217 DUP6
0x218 AND
0x219 MUL
0x21a DUP2
0x21b MSTORE
0x21c PUSH1 0x1
0x21e PUSH1 0xa0
0x220 PUSH1 0x2
0x222 EXP
0x223 SUB
0x224 SWAP1
0x225 SWAP3
0x226 AND
0x227 PUSH1 0x4
0x229 DUP4
0x22a ADD
0x22b MSTORE
0x22c PUSH1 0x24
0x22e DUP3
0x22f ADD
0x230 MSTORE
0x231 PUSH1 0x44
0x233 ADD
0x234 PUSH1 0x20
0x236 PUSH1 0x40
0x238 MLOAD
0x239 DUP1
0x23a DUP4
0x23b SUB
0x23c DUP2
0x23d PUSH1 0x0
0x23f DUP8
0x240 DUP1
0x241 EXTCODESIZE
0x242 ISZERO
0x243 ISZERO
0x244 PUSH2 0x24c
0x247 JUMPI
---
0x200: JUMPDEST 
0x201: V181 = 0x0
0x203: V182 = 0x40
0x205: V183 = M[0x40]
0x206: V184 = 0x20
0x208: V185 = ADD 0x20 V183
0x209: M[V185] = 0x0
0x20a: V186 = 0x40
0x20c: V187 = M[0x40]
0x20d: V188 = 0xe0
0x20f: V189 = 0x2
0x211: V190 = EXP 0x2 0xe0
0x212: V191 = 0xffffffff
0x218: V192 = AND S2 0xffffffff
0x219: V193 = MUL V192 0x100000000000000000000000000000000000000000000000000000000
0x21b: M[V187] = V193
0x21c: V194 = 0x1
0x21e: V195 = 0xa0
0x220: V196 = 0x2
0x222: V197 = EXP 0x2 0xa0
0x223: V198 = SUB 0x10000000000000000000000000000000000000000 0x1
0x226: V199 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x227: V200 = 0x4
0x22a: V201 = ADD V187 0x4
0x22b: M[V201] = V199
0x22c: V202 = 0x24
0x22f: V203 = ADD V187 0x24
0x230: M[V203] = V502
0x231: V204 = 0x44
0x233: V205 = ADD 0x44 V187
0x234: V206 = 0x20
0x236: V207 = 0x40
0x238: V208 = M[0x40]
0x23b: V209 = SUB V205 V208
0x23d: V210 = 0x0
0x241: V211 = EXTCODESIZE S3
0x242: V212 = ISZERO V211
0x243: V213 = ISZERO V212
0x244: V214 = 0x24c
0x247: JUMPI 0x24c V213
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, V502]
Stack pops: 4
Stack additions: [S3, S2, V205, 0x20, V208, V209, V208, 0x0, S3]
Exit stack: [V13, S6, S5, S4, S3, S2, V205, 0x20, V208, V209, V208, 0x0, S3]

================================

Block 0x248
[0x248:0x24b]
---
Predecessors: [0x200]
Successors: []
---
0x248 PUSH1 0x0
0x24a DUP1
0x24b REVERT
---
0x248: V215 = 0x0
0x24b: REVERT 0x0 0x0
---
Entry stack: [V13, S11, S10, S9, S8, S7, V205, 0x20, V208, V209, V208, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S11, S10, S9, S8, S7, V205, 0x20, V208, V209, V208, 0x0, S0]

================================

Block 0x24c
[0x24c:0x258]
---
Predecessors: [0x200]
Successors: [0x259, 0x25d]
---
0x24c JUMPDEST
0x24d PUSH2 0x2c6
0x250 GAS
0x251 SUB
0x252 CALL
0x253 ISZERO
0x254 ISZERO
0x255 PUSH2 0x25d
0x258 JUMPI
---
0x24c: JUMPDEST 
0x24d: V216 = 0x2c6
0x250: V217 = GAS
0x251: V218 = SUB V217 0x2c6
0x252: V219 = CALL V218 S0 0x0 V208 V209 V208 0x20
0x253: V220 = ISZERO V219
0x254: V221 = ISZERO V220
0x255: V222 = 0x25d
0x258: JUMPI 0x25d V221
---
Entry stack: [V13, S11, S10, S9, S8, S7, V205, 0x20, V208, V209, V208, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V13, S11, S10, S9, S8, S7, V205]

================================

Block 0x259
[0x259:0x25c]
---
Predecessors: [0x24c]
Successors: []
---
0x259 PUSH1 0x0
0x25b DUP1
0x25c REVERT
---
0x259: V223 = 0x0
0x25c: REVERT 0x0 0x0
---
Entry stack: [V13, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S5, S4, S3, S2, S1, S0]

================================

Block 0x25d
[0x25d:0x26f]
---
Predecessors: [0x24c]
Successors: [0x584]
---
0x25d JUMPDEST
0x25e POP
0x25f POP
0x260 POP
0x261 PUSH1 0x40
0x263 MLOAD
0x264 DUP1
0x265 MLOAD
0x266 SWAP1
0x267 POP
0x268 POP
0x269 PUSH2 0x270
0x26c PUSH2 0x584
0x26f JUMP
---
0x25d: JUMPDEST 
0x261: V224 = 0x40
0x263: V225 = M[0x40]
0x265: V226 = M[V225]
0x269: V227 = 0x270
0x26c: V228 = 0x584
0x26f: JUMP 0x584
---
Entry stack: [V13, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [0x270]
Exit stack: [V13, S5, S4, S3, 0x270]

================================

Block 0x270
[0x270:0x277]
---
Predecessors: [0x5bd]
Successors: [0x72, 0x114]
---
0x270 JUMPDEST
0x271 POP
0x272 PUSH1 0x1
0x274 SWAP2
0x275 SWAP1
0x276 POP
0x277 JUMP
---
0x270: JUMPDEST 
0x272: V229 = 0x1
0x277: JUMP S2
---
Entry stack: [V13, S2, S1, S0]
Stack pops: 3
Stack additions: [0x1]
Exit stack: [V13, 0x1]

================================

Block 0x278
[0x278:0x27d]
---
Predecessors: [0x80]
Successors: [0x88]
---
0x278 JUMPDEST
0x279 PUSH1 0x1
0x27b SLOAD
0x27c DUP2
0x27d JUMP
---
0x278: JUMPDEST 
0x279: V230 = 0x1
0x27b: V231 = S[0x1]
0x27d: JUMP 0x88
---
Entry stack: [V13, 0x88]
Stack pops: 1
Stack additions: [S0, V231]
Exit stack: [V13, 0x88, V231]

================================

Block 0x27e
[0x27e:0x294]
---
Predecessors: [0xa5]
Successors: [0x295, 0x299]
---
0x27e JUMPDEST
0x27f PUSH1 0x0
0x281 SLOAD
0x282 CALLER
0x283 PUSH1 0x1
0x285 PUSH1 0xa0
0x287 PUSH1 0x2
0x289 EXP
0x28a SUB
0x28b SWAP1
0x28c DUP2
0x28d AND
0x28e SWAP2
0x28f AND
0x290 EQ
0x291 PUSH2 0x299
0x294 JUMPI
---
0x27e: JUMPDEST 
0x27f: V232 = 0x0
0x281: V233 = S[0x0]
0x282: V234 = CALLER
0x283: V235 = 0x1
0x285: V236 = 0xa0
0x287: V237 = 0x2
0x289: V238 = EXP 0x2 0xa0
0x28a: V239 = SUB 0x10000000000000000000000000000000000000000 0x1
0x28d: V240 = AND 0xffffffffffffffffffffffffffffffffffffffff V234
0x28f: V241 = AND V233 0xffffffffffffffffffffffffffffffffffffffff
0x290: V242 = EQ V241 V240
0x291: V243 = 0x299
0x294: JUMPI 0x299 V242
---
Entry stack: [V13, 0xbc, V63, V65]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbc, V63, V65]

================================

Block 0x295
[0x295:0x298]
---
Predecessors: [0x27e]
Successors: []
---
0x295 PUSH1 0x0
0x297 DUP1
0x298 REVERT
---
0x295: V244 = 0x0
0x298: REVERT 0x0 0x0
---
Entry stack: [V13, 0xbc, V63, V65]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbc, V63, V65]

================================

Block 0x299
[0x299:0x2ab]
---
Predecessors: [0x27e]
Successors: [0x2ac, 0x2b1]
---
0x299 JUMPDEST
0x29a PUSH1 0x1
0x29c PUSH1 0xa0
0x29e PUSH1 0x2
0x2a0 EXP
0x2a1 SUB
0x2a2 DUP3
0x2a3 AND
0x2a4 ISZERO
0x2a5 DUP1
0x2a6 ISZERO
0x2a7 SWAP1
0x2a8 PUSH2 0x2b1
0x2ab JUMPI
---
0x299: JUMPDEST 
0x29a: V245 = 0x1
0x29c: V246 = 0xa0
0x29e: V247 = 0x2
0x2a0: V248 = EXP 0x2 0xa0
0x2a1: V249 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a3: V250 = AND V63 0xffffffffffffffffffffffffffffffffffffffff
0x2a4: V251 = ISZERO V250
0x2a6: V252 = ISZERO V251
0x2a8: V253 = 0x2b1
0x2ab: JUMPI 0x2b1 V251
---
Entry stack: [V13, 0xbc, V63, V65]
Stack pops: 2
Stack additions: [S1, S0, V252]
Exit stack: [V13, 0xbc, V63, V65, V252]

================================

Block 0x2ac
[0x2ac:0x2b0]
---
Predecessors: [0x299]
Successors: [0x2b1]
---
0x2ac POP
0x2ad PUSH1 0x0
0x2af DUP2
0x2b0 GT
---
0x2ad: V254 = 0x0
0x2b0: V255 = GT V65 0x0
---
Entry stack: [V13, 0xbc, V63, V65, V252]
Stack pops: 2
Stack additions: [S1, V255]
Exit stack: [V13, 0xbc, V63, V65, V255]

================================

Block 0x2b1
[0x2b1:0x2b7]
---
Predecessors: [0x299, 0x2ac]
Successors: [0x2b8, 0x2bc]
---
0x2b1 JUMPDEST
0x2b2 ISZERO
0x2b3 ISZERO
0x2b4 PUSH2 0x2bc
0x2b7 JUMPI
---
0x2b1: JUMPDEST 
0x2b2: V256 = ISZERO S0
0x2b3: V257 = ISZERO V256
0x2b4: V258 = 0x2bc
0x2b7: JUMPI 0x2bc V257
---
Entry stack: [V13, 0xbc, V63, V65, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xbc, V63, V65]

================================

Block 0x2b8
[0x2b8:0x2bb]
---
Predecessors: [0x2b1]
Successors: []
---
0x2b8 PUSH1 0x0
0x2ba DUP1
0x2bb REVERT
---
0x2b8: V259 = 0x0
0x2bb: REVERT 0x0 0x0
---
Entry stack: [V13, 0xbc, V63, V65]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbc, V63, V65]

================================

Block 0x2bc
[0x2bc:0x2ea]
---
Predecessors: [0x2b1]
Successors: [0x542]
---
0x2bc JUMPDEST
0x2bd PUSH20 0x8b0c9f462c239c963d8760105cbc935c63d85680
0x2d2 PUSH4 0xa9059cbb
0x2d7 DUP4
0x2d8 PUSH2 0x2eb
0x2db DUP5
0x2dc PUSH4 0x5f5e100
0x2e1 PUSH4 0xffffffff
0x2e6 PUSH2 0x542
0x2e9 AND
0x2ea JUMP
---
0x2bc: JUMPDEST 
0x2bd: V260 = 0x8b0c9f462c239c963d8760105cbc935c63d85680
0x2d2: V261 = 0xa9059cbb
0x2d8: V262 = 0x2eb
0x2dc: V263 = 0x5f5e100
0x2e1: V264 = 0xffffffff
0x2e6: V265 = 0x542
0x2e9: V266 = AND 0x542 0xffffffff
0x2ea: JUMP 0x542
---
Entry stack: [V13, 0xbc, V63, V65]
Stack pops: 2
Stack additions: [S1, S0, 0x8b0c9f462c239c963d8760105cbc935c63d85680, 0xa9059cbb, S1, 0x2eb, S0, 0x5f5e100]
Exit stack: [V13, 0xbc, V63, V65, 0x8b0c9f462c239c963d8760105cbc935c63d85680, 0xa9059cbb, V63, 0x2eb, V65, 0x5f5e100]

================================

Block 0x2eb
[0x2eb:0x332]
---
Predecessors: [0x566]
Successors: [0x333, 0x337]
---
0x2eb JUMPDEST
0x2ec PUSH1 0x0
0x2ee PUSH1 0x40
0x2f0 MLOAD
0x2f1 PUSH1 0x20
0x2f3 ADD
0x2f4 MSTORE
0x2f5 PUSH1 0x40
0x2f7 MLOAD
0x2f8 PUSH1 0xe0
0x2fa PUSH1 0x2
0x2fc EXP
0x2fd PUSH4 0xffffffff
0x302 DUP6
0x303 AND
0x304 MUL
0x305 DUP2
0x306 MSTORE
0x307 PUSH1 0x1
0x309 PUSH1 0xa0
0x30b PUSH1 0x2
0x30d EXP
0x30e SUB
0x30f SWAP1
0x310 SWAP3
0x311 AND
0x312 PUSH1 0x4
0x314 DUP4
0x315 ADD
0x316 MSTORE
0x317 PUSH1 0x24
0x319 DUP3
0x31a ADD
0x31b MSTORE
0x31c PUSH1 0x44
0x31e ADD
0x31f PUSH1 0x20
0x321 PUSH1 0x40
0x323 MLOAD
0x324 DUP1
0x325 DUP4
0x326 SUB
0x327 DUP2
0x328 PUSH1 0x0
0x32a DUP8
0x32b DUP1
0x32c EXTCODESIZE
0x32d ISZERO
0x32e ISZERO
0x32f PUSH2 0x337
0x332 JUMPI
---
0x2eb: JUMPDEST 
0x2ec: V267 = 0x0
0x2ee: V268 = 0x40
0x2f0: V269 = M[0x40]
0x2f1: V270 = 0x20
0x2f3: V271 = ADD 0x20 V269
0x2f4: M[V271] = 0x0
0x2f5: V272 = 0x40
0x2f7: V273 = M[0x40]
0x2f8: V274 = 0xe0
0x2fa: V275 = 0x2
0x2fc: V276 = EXP 0x2 0xe0
0x2fd: V277 = 0xffffffff
0x303: V278 = AND {0x200, 0xa9059cbb} 0xffffffff
0x304: V279 = MUL V278 0x100000000000000000000000000000000000000000000000000000000
0x306: M[V273] = V279
0x307: V280 = 0x1
0x309: V281 = 0xa0
0x30b: V282 = 0x2
0x30d: V283 = EXP 0x2 0xa0
0x30e: V284 = SUB 0x10000000000000000000000000000000000000000 0x1
0x311: V285 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x312: V286 = 0x4
0x315: V287 = ADD V273 0x4
0x316: M[V287] = V285
0x317: V288 = 0x24
0x31a: V289 = ADD V273 0x24
0x31b: M[V289] = S0
0x31c: V290 = 0x44
0x31e: V291 = ADD 0x44 V273
0x31f: V292 = 0x20
0x321: V293 = 0x40
0x323: V294 = M[0x40]
0x326: V295 = SUB V291 V294
0x328: V296 = 0x0
0x32c: V297 = EXTCODESIZE S3
0x32d: V298 = ISZERO V297
0x32e: V299 = ISZERO V298
0x32f: V300 = 0x337
0x332: JUMPI 0x337 V299
---
Entry stack: [V13, S8, S7, S6, S5, S4, S3, {0x200, 0xa9059cbb}, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, V291, 0x20, V294, V295, V294, 0x0, S3]
Exit stack: [V13, S8, S7, S6, S5, S4, S3, {0x200, 0xa9059cbb}, V291, 0x20, V294, V295, V294, 0x0, S3]

================================

Block 0x333
[0x333:0x336]
---
Predecessors: [0x2eb]
Successors: []
---
0x333 PUSH1 0x0
0x335 DUP1
0x336 REVERT
---
0x333: V301 = 0x0
0x336: REVERT 0x0 0x0
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, {0x200, 0xa9059cbb}, V291, 0x20, V294, V295, V294, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S13, S12, S11, S10, S9, S8, {0x200, 0xa9059cbb}, V291, 0x20, V294, V295, V294, 0x0, S0]

================================

Block 0x337
[0x337:0x343]
---
Predecessors: [0x2eb]
Successors: [0x344, 0x348]
---
0x337 JUMPDEST
0x338 PUSH2 0x2c6
0x33b GAS
0x33c SUB
0x33d CALL
0x33e ISZERO
0x33f ISZERO
0x340 PUSH2 0x348
0x343 JUMPI
---
0x337: JUMPDEST 
0x338: V302 = 0x2c6
0x33b: V303 = GAS
0x33c: V304 = SUB V303 0x2c6
0x33d: V305 = CALL V304 S0 0x0 V294 V295 V294 0x20
0x33e: V306 = ISZERO V305
0x33f: V307 = ISZERO V306
0x340: V308 = 0x348
0x343: JUMPI 0x348 V307
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, {0x200, 0xa9059cbb}, V291, 0x20, V294, V295, V294, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V13, S13, S12, S11, S10, S9, S8, {0x200, 0xa9059cbb}, V291]

================================

Block 0x344
[0x344:0x347]
---
Predecessors: [0x337]
Successors: []
---
0x344 PUSH1 0x0
0x346 DUP1
0x347 REVERT
---
0x344: V309 = 0x0
0x347: REVERT 0x0 0x0
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, {0x200, 0xa9059cbb}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S7, S6, S5, S4, S3, S2, {0x200, 0xa9059cbb}, S0]

================================

Block 0x348
[0x348:0x355]
---
Predecessors: [0x337]
Successors: [0xbc]
---
0x348 JUMPDEST
0x349 POP
0x34a POP
0x34b POP
0x34c PUSH1 0x40
0x34e MLOAD
0x34f DUP1
0x350 MLOAD
0x351 POP
0x352 POP
0x353 POP
0x354 POP
0x355 JUMP
---
0x348: JUMPDEST 
0x34c: V310 = 0x40
0x34e: V311 = M[0x40]
0x350: V312 = M[V311]
0x355: JUMP S5
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, {0x200, 0xa9059cbb}, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V13, S7, S6]

================================

Block 0x356
[0x356:0x36d]
---
Predecessors: [0xc9]
Successors: [0xd1]
---
0x356 JUMPDEST
0x357 PUSH20 0x8b0c9f462c239c963d8760105cbc935c63d85680
0x36c DUP2
0x36d JUMP
---
0x356: JUMPDEST 
0x357: V313 = 0x8b0c9f462c239c963d8760105cbc935c63d85680
0x36d: JUMP 0xd1
---
Entry stack: [V13, 0xd1]
Stack pops: 1
Stack additions: [S0, 0x8b0c9f462c239c963d8760105cbc935c63d85680]
Exit stack: [V13, 0xd1, 0x8b0c9f462c239c963d8760105cbc935c63d85680]

================================

Block 0x36e
[0x36e:0x37c]
---
Predecessors: [0xf8]
Successors: [0xd1]
---
0x36e JUMPDEST
0x36f PUSH1 0x0
0x371 SLOAD
0x372 PUSH1 0x1
0x374 PUSH1 0xa0
0x376 PUSH1 0x2
0x378 EXP
0x379 SUB
0x37a AND
0x37b DUP2
0x37c JUMP
---
0x36e: JUMPDEST 
0x36f: V314 = 0x0
0x371: V315 = S[0x0]
0x372: V316 = 0x1
0x374: V317 = 0xa0
0x376: V318 = 0x2
0x378: V319 = EXP 0x2 0xa0
0x379: V320 = SUB 0x10000000000000000000000000000000000000000 0x1
0x37a: V321 = AND 0xffffffffffffffffffffffffffffffffffffffff V315
0x37c: JUMP 0xd1
---
Entry stack: [V13, 0xd1]
Stack pops: 1
Stack additions: [S0, V321]
Exit stack: [V13, 0xd1, V321]

================================

Block 0x37d
[0x37d:0x393]
---
Predecessors: [0x133]
Successors: [0x394, 0x398]
---
0x37d JUMPDEST
0x37e PUSH1 0x0
0x380 SLOAD
0x381 CALLER
0x382 PUSH1 0x1
0x384 PUSH1 0xa0
0x386 PUSH1 0x2
0x388 EXP
0x389 SUB
0x38a SWAP1
0x38b DUP2
0x38c AND
0x38d SWAP2
0x38e AND
0x38f EQ
0x390 PUSH2 0x398
0x393 JUMPI
---
0x37d: JUMPDEST 
0x37e: V322 = 0x0
0x380: V323 = S[0x0]
0x381: V324 = CALLER
0x382: V325 = 0x1
0x384: V326 = 0xa0
0x386: V327 = 0x2
0x388: V328 = EXP 0x2 0xa0
0x389: V329 = SUB 0x10000000000000000000000000000000000000000 0x1
0x38c: V330 = AND 0xffffffffffffffffffffffffffffffffffffffff V324
0x38e: V331 = AND V323 0xffffffffffffffffffffffffffffffffffffffff
0x38f: V332 = EQ V331 V330
0x390: V333 = 0x398
0x393: JUMPI 0x398 V332
---
Entry stack: [V13, 0xbc, V123]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbc, V123]

================================

Block 0x394
[0x394:0x397]
---
Predecessors: [0x37d]
Successors: []
---
0x394 PUSH1 0x0
0x396 DUP1
0x397 REVERT
---
0x394: V334 = 0x0
0x397: REVERT 0x0 0x0
---
Entry stack: [V13, 0xbc, V123]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbc, V123]

================================

Block 0x398
[0x398:0x3a8]
---
Predecessors: [0x37d]
Successors: [0x3a9, 0x3ad]
---
0x398 JUMPDEST
0x399 PUSH1 0x1
0x39b PUSH1 0xa0
0x39d PUSH1 0x2
0x39f EXP
0x3a0 SUB
0x3a1 DUP2
0x3a2 AND
0x3a3 ISZERO
0x3a4 ISZERO
0x3a5 PUSH2 0x3ad
0x3a8 JUMPI
---
0x398: JUMPDEST 
0x399: V335 = 0x1
0x39b: V336 = 0xa0
0x39d: V337 = 0x2
0x39f: V338 = EXP 0x2 0xa0
0x3a0: V339 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a2: V340 = AND V123 0xffffffffffffffffffffffffffffffffffffffff
0x3a3: V341 = ISZERO V340
0x3a4: V342 = ISZERO V341
0x3a5: V343 = 0x3ad
0x3a8: JUMPI 0x3ad V342
---
Entry stack: [V13, 0xbc, V123]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0xbc, V123]

================================

Block 0x3a9
[0x3a9:0x3ac]
---
Predecessors: [0x398]
Successors: []
---
0x3a9 PUSH1 0x0
0x3ab DUP1
0x3ac REVERT
---
0x3a9: V344 = 0x0
0x3ac: REVERT 0x0 0x0
---
Entry stack: [V13, 0xbc, V123]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbc, V123]

================================

Block 0x3ad
[0x3ad:0x42d]
---
Predecessors: [0x398]
Successors: [0xbc]
---
0x3ad JUMPDEST
0x3ae PUSH1 0x0
0x3b0 SLOAD
0x3b1 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x3d2 SWAP1
0x3d3 PUSH1 0x1
0x3d5 PUSH1 0xa0
0x3d7 PUSH1 0x2
0x3d9 EXP
0x3da SUB
0x3db AND
0x3dc DUP3
0x3dd PUSH1 0x40
0x3df MLOAD
0x3e0 PUSH1 0x1
0x3e2 PUSH1 0xa0
0x3e4 PUSH1 0x2
0x3e6 EXP
0x3e7 SUB
0x3e8 SWAP3
0x3e9 DUP4
0x3ea AND
0x3eb DUP2
0x3ec MSTORE
0x3ed SWAP2
0x3ee AND
0x3ef PUSH1 0x20
0x3f1 DUP3
0x3f2 ADD
0x3f3 MSTORE
0x3f4 PUSH1 0x40
0x3f6 SWAP1
0x3f7 DUP2
0x3f8 ADD
0x3f9 SWAP1
0x3fa MLOAD
0x3fb DUP1
0x3fc SWAP2
0x3fd SUB
0x3fe SWAP1
0x3ff LOG1
0x400 PUSH1 0x0
0x402 DUP1
0x403 SLOAD
0x404 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x419 NOT
0x41a AND
0x41b PUSH1 0x1
0x41d PUSH1 0xa0
0x41f PUSH1 0x2
0x421 EXP
0x422 SUB
0x423 SWAP3
0x424 SWAP1
0x425 SWAP3
0x426 AND
0x427 SWAP2
0x428 SWAP1
0x429 SWAP2
0x42a OR
0x42b SWAP1
0x42c SSTORE
0x42d JUMP
---
0x3ad: JUMPDEST 
0x3ae: V345 = 0x0
0x3b0: V346 = S[0x0]
0x3b1: V347 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x3d3: V348 = 0x1
0x3d5: V349 = 0xa0
0x3d7: V350 = 0x2
0x3d9: V351 = EXP 0x2 0xa0
0x3da: V352 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3db: V353 = AND 0xffffffffffffffffffffffffffffffffffffffff V346
0x3dd: V354 = 0x40
0x3df: V355 = M[0x40]
0x3e0: V356 = 0x1
0x3e2: V357 = 0xa0
0x3e4: V358 = 0x2
0x3e6: V359 = EXP 0x2 0xa0
0x3e7: V360 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ea: V361 = AND 0xffffffffffffffffffffffffffffffffffffffff V353
0x3ec: M[V355] = V361
0x3ee: V362 = AND 0xffffffffffffffffffffffffffffffffffffffff V123
0x3ef: V363 = 0x20
0x3f2: V364 = ADD V355 0x20
0x3f3: M[V364] = V362
0x3f4: V365 = 0x40
0x3f8: V366 = ADD 0x40 V355
0x3fa: V367 = M[0x40]
0x3fd: V368 = SUB V366 V367
0x3ff: LOG V367 V368 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x400: V369 = 0x0
0x403: V370 = S[0x0]
0x404: V371 = 0xffffffffffffffffffffffffffffffffffffffff
0x419: V372 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x41a: V373 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V370
0x41b: V374 = 0x1
0x41d: V375 = 0xa0
0x41f: V376 = 0x2
0x421: V377 = EXP 0x2 0xa0
0x422: V378 = SUB 0x10000000000000000000000000000000000000000 0x1
0x426: V379 = AND 0xffffffffffffffffffffffffffffffffffffffff V123
0x42a: V380 = OR V379 V373
0x42c: S[0x0] = V380
0x42d: JUMP 0xbc
---
Entry stack: [V13, 0xbc, V123]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x42e
[0x42e:0x445]
---
Predecessors: [0x152]
Successors: [0x446, 0x44a]
---
0x42e JUMPDEST
0x42f PUSH1 0x0
0x431 DUP1
0x432 SLOAD
0x433 CALLER
0x434 PUSH1 0x1
0x436 PUSH1 0xa0
0x438 PUSH1 0x2
0x43a EXP
0x43b SUB
0x43c SWAP1
0x43d DUP2
0x43e AND
0x43f SWAP2
0x440 AND
0x441 EQ
0x442 PUSH2 0x44a
0x445 JUMPI
---
0x42e: JUMPDEST 
0x42f: V381 = 0x0
0x432: V382 = S[0x0]
0x433: V383 = CALLER
0x434: V384 = 0x1
0x436: V385 = 0xa0
0x438: V386 = 0x2
0x43a: V387 = EXP 0x2 0xa0
0x43b: V388 = SUB 0x10000000000000000000000000000000000000000 0x1
0x43e: V389 = AND 0xffffffffffffffffffffffffffffffffffffffff V383
0x440: V390 = AND V382 0xffffffffffffffffffffffffffffffffffffffff
0x441: V391 = EQ V390 V389
0x442: V392 = 0x44a
0x445: JUMPI 0x44a V391
---
Entry stack: [V13, 0xbc, V140, V147]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0xbc, V140, V147, 0x0]

================================

Block 0x446
[0x446:0x449]
---
Predecessors: [0x42e]
Successors: []
---
0x446 PUSH1 0x0
0x448 DUP1
0x449 REVERT
---
0x446: V393 = 0x0
0x449: REVERT 0x0 0x0
---
Entry stack: [V13, 0xbc, V140, V147, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbc, V140, V147, 0x0]

================================

Block 0x44a
[0x44a:0x453]
---
Predecessors: [0x42e]
Successors: [0x454, 0x458]
---
0x44a JUMPDEST
0x44b PUSH1 0x0
0x44d DUP4
0x44e MLOAD
0x44f GT
0x450 PUSH2 0x458
0x453 JUMPI
---
0x44a: JUMPDEST 
0x44b: V394 = 0x0
0x44e: V395 = M[V140]
0x44f: V396 = GT V395 0x0
0x450: V397 = 0x458
0x453: JUMPI 0x458 V396
---
Entry stack: [V13, 0xbc, V140, V147, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0xbc, V140, V147, 0x0]

================================

Block 0x454
[0x454:0x457]
---
Predecessors: [0x44a]
Successors: []
---
0x454 PUSH1 0x0
0x456 DUP1
0x457 REVERT
---
0x454: V398 = 0x0
0x457: REVERT 0x0 0x0
---
Entry stack: [V13, 0xbc, V140, V147, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xbc, V140, V147, 0x0]

================================

Block 0x458
[0x458:0x45b]
---
Predecessors: [0x44a]
Successors: [0x45c]
---
0x458 JUMPDEST
0x459 POP
0x45a PUSH1 0x0
---
0x458: JUMPDEST 
0x45a: V399 = 0x0
---
Entry stack: [V13, 0xbc, V140, V147, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V13, 0xbc, V140, V147, 0x0]

================================

Block 0x45c
[0x45c:0x465]
---
Predecessors: [0x458, 0x535]
Successors: [0x466, 0x53d]
---
0x45c JUMPDEST
0x45d DUP3
0x45e MLOAD
0x45f DUP2
0x460 LT
0x461 ISZERO
0x462 PUSH2 0x53d
0x465 JUMPI
---
0x45c: JUMPDEST 
0x45e: V400 = M[S2]
0x460: V401 = LT S0 V400
0x461: V402 = ISZERO V401
0x462: V403 = 0x53d
0x465: JUMPI 0x53d V402
---
Entry stack: [V13, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, S4, S3, S2, S1, S0]

================================

Block 0x466
[0x466:0x46f]
---
Predecessors: [0x45c]
Successors: [0x470, 0x471]
---
0x466 DUP3
0x467 DUP2
0x468 DUP2
0x469 MLOAD
0x46a DUP2
0x46b LT
0x46c PUSH2 0x471
0x46f JUMPI
---
0x469: V404 = M[S2]
0x46b: V405 = LT S0 V404
0x46c: V406 = 0x471
0x46f: JUMPI 0x471 V405
---
Entry stack: [V13, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, S2, S0]
Exit stack: [V13, S4, S3, S2, S1, S0, S2, S0]

================================

Block 0x470
[0x470:0x470]
---
Predecessors: [0x466]
Successors: []
---
0x470 INVALID
---
0x470: INVALID 
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x471
[0x471:0x489]
---
Predecessors: [0x466]
Successors: [0x48a, 0x535]
---
0x471 JUMPDEST
0x472 SWAP1
0x473 PUSH1 0x20
0x475 ADD
0x476 SWAP1
0x477 PUSH1 0x20
0x479 MUL
0x47a ADD
0x47b MLOAD
0x47c PUSH1 0x1
0x47e PUSH1 0xa0
0x480 PUSH1 0x2
0x482 EXP
0x483 SUB
0x484 AND
0x485 ISZERO
0x486 PUSH2 0x535
0x489 JUMPI
---
0x471: JUMPDEST 
0x473: V407 = 0x20
0x475: V408 = ADD 0x20 S1
0x477: V409 = 0x20
0x479: V410 = MUL 0x20 S0
0x47a: V411 = ADD V410 V408
0x47b: V412 = M[V411]
0x47c: V413 = 0x1
0x47e: V414 = 0xa0
0x480: V415 = 0x2
0x482: V416 = EXP 0x2 0xa0
0x483: V417 = SUB 0x10000000000000000000000000000000000000000 0x1
0x484: V418 = AND 0xffffffffffffffffffffffffffffffffffffffff V412
0x485: V419 = ISZERO V418
0x486: V420 = 0x535
0x489: JUMPI 0x535 V419
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V13, S6, S5, S4, S3, S2]

================================

Block 0x48a
[0x48a:0x4ad]
---
Predecessors: [0x471]
Successors: [0x4ae, 0x4af]
---
0x48a PUSH20 0x8b0c9f462c239c963d8760105cbc935c63d85680
0x49f PUSH4 0xa9059cbb
0x4a4 DUP5
0x4a5 DUP4
0x4a6 DUP2
0x4a7 MLOAD
0x4a8 DUP2
0x4a9 LT
0x4aa PUSH2 0x4af
0x4ad JUMPI
---
0x48a: V421 = 0x8b0c9f462c239c963d8760105cbc935c63d85680
0x49f: V422 = 0xa9059cbb
0x4a7: V423 = M[S2]
0x4a9: V424 = LT S0 V423
0x4aa: V425 = 0x4af
0x4ad: JUMPI 0x4af V424
---
Entry stack: [V13, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x8b0c9f462c239c963d8760105cbc935c63d85680, 0xa9059cbb, S2, S0]
Exit stack: [V13, S4, S3, S2, S1, S0, 0x8b0c9f462c239c963d8760105cbc935c63d85680, 0xa9059cbb, S2, S0]

================================

Block 0x4ae
[0x4ae:0x4ae]
---
Predecessors: [0x48a]
Successors: []
---
0x4ae INVALID
---
0x4ae: INVALID 
---
Entry stack: [V13, S8, S7, S6, S5, S4, 0x8b0c9f462c239c963d8760105cbc935c63d85680, 0xa9059cbb, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S8, S7, S6, S5, S4, 0x8b0c9f462c239c963d8760105cbc935c63d85680, 0xa9059cbb, S1, S0]

================================

Block 0x4af
[0x4af:0x4cc]
---
Predecessors: [0x48a]
Successors: [0x542]
---
0x4af JUMPDEST
0x4b0 SWAP1
0x4b1 PUSH1 0x20
0x4b3 ADD
0x4b4 SWAP1
0x4b5 PUSH1 0x20
0x4b7 MUL
0x4b8 ADD
0x4b9 MLOAD
0x4ba PUSH2 0x4cd
0x4bd DUP6
0x4be PUSH4 0x5f5e100
0x4c3 PUSH4 0xffffffff
0x4c8 PUSH2 0x542
0x4cb AND
0x4cc JUMP
---
0x4af: JUMPDEST 
0x4b1: V426 = 0x20
0x4b3: V427 = ADD 0x20 S1
0x4b5: V428 = 0x20
0x4b7: V429 = MUL 0x20 S0
0x4b8: V430 = ADD V429 V427
0x4b9: V431 = M[V430]
0x4ba: V432 = 0x4cd
0x4be: V433 = 0x5f5e100
0x4c3: V434 = 0xffffffff
0x4c8: V435 = 0x542
0x4cb: V436 = AND 0x542 0xffffffff
0x4cc: JUMP 0x542
---
Entry stack: [V13, S8, S7, S6, S5, S4, 0x8b0c9f462c239c963d8760105cbc935c63d85680, 0xa9059cbb, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, V431, 0x4cd, S5, 0x5f5e100]
Exit stack: [V13, S8, S7, S6, S5, S4, 0x8b0c9f462c239c963d8760105cbc935c63d85680, 0xa9059cbb, V431, 0x4cd, S5, 0x5f5e100]

================================

Block 0x4cd
[0x4cd:0x514]
---
Predecessors: [0x566]
Successors: [0x515, 0x519]
---
0x4cd JUMPDEST
0x4ce PUSH1 0x0
0x4d0 PUSH1 0x40
0x4d2 MLOAD
0x4d3 PUSH1 0x20
0x4d5 ADD
0x4d6 MSTORE
0x4d7 PUSH1 0x40
0x4d9 MLOAD
0x4da PUSH1 0xe0
0x4dc PUSH1 0x2
0x4de EXP
0x4df PUSH4 0xffffffff
0x4e4 DUP6
0x4e5 AND
0x4e6 MUL
0x4e7 DUP2
0x4e8 MSTORE
0x4e9 PUSH1 0x1
0x4eb PUSH1 0xa0
0x4ed PUSH1 0x2
0x4ef EXP
0x4f0 SUB
0x4f1 SWAP1
0x4f2 SWAP3
0x4f3 AND
0x4f4 PUSH1 0x4
0x4f6 DUP4
0x4f7 ADD
0x4f8 MSTORE
0x4f9 PUSH1 0x24
0x4fb DUP3
0x4fc ADD
0x4fd MSTORE
0x4fe PUSH1 0x44
0x500 ADD
0x501 PUSH1 0x20
0x503 PUSH1 0x40
0x505 MLOAD
0x506 DUP1
0x507 DUP4
0x508 SUB
0x509 DUP2
0x50a PUSH1 0x0
0x50c DUP8
0x50d DUP1
0x50e EXTCODESIZE
0x50f ISZERO
0x510 ISZERO
0x511 PUSH2 0x519
0x514 JUMPI
---
0x4cd: JUMPDEST 
0x4ce: V437 = 0x0
0x4d0: V438 = 0x40
0x4d2: V439 = M[0x40]
0x4d3: V440 = 0x20
0x4d5: V441 = ADD 0x20 V439
0x4d6: M[V441] = 0x0
0x4d7: V442 = 0x40
0x4d9: V443 = M[0x40]
0x4da: V444 = 0xe0
0x4dc: V445 = 0x2
0x4de: V446 = EXP 0x2 0xe0
0x4df: V447 = 0xffffffff
0x4e5: V448 = AND {0x200, 0xa9059cbb} 0xffffffff
0x4e6: V449 = MUL V448 0x100000000000000000000000000000000000000000000000000000000
0x4e8: M[V443] = V449
0x4e9: V450 = 0x1
0x4eb: V451 = 0xa0
0x4ed: V452 = 0x2
0x4ef: V453 = EXP 0x2 0xa0
0x4f0: V454 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f3: V455 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x4f4: V456 = 0x4
0x4f7: V457 = ADD V443 0x4
0x4f8: M[V457] = V455
0x4f9: V458 = 0x24
0x4fc: V459 = ADD V443 0x24
0x4fd: M[V459] = S0
0x4fe: V460 = 0x44
0x500: V461 = ADD 0x44 V443
0x501: V462 = 0x20
0x503: V463 = 0x40
0x505: V464 = M[0x40]
0x508: V465 = SUB V461 V464
0x50a: V466 = 0x0
0x50e: V467 = EXTCODESIZE S3
0x50f: V468 = ISZERO V467
0x510: V469 = ISZERO V468
0x511: V470 = 0x519
0x514: JUMPI 0x519 V469
---
Entry stack: [V13, S8, S7, S6, S5, S4, S3, {0x200, 0xa9059cbb}, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, V461, 0x20, V464, V465, V464, 0x0, S3]
Exit stack: [V13, S8, S7, S6, S5, S4, S3, {0x200, 0xa9059cbb}, V461, 0x20, V464, V465, V464, 0x0, S3]

================================

Block 0x515
[0x515:0x518]
---
Predecessors: [0x4cd]
Successors: []
---
0x515 PUSH1 0x0
0x517 DUP1
0x518 REVERT
---
0x515: V471 = 0x0
0x518: REVERT 0x0 0x0
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, {0x200, 0xa9059cbb}, V461, 0x20, V464, V465, V464, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S13, S12, S11, S10, S9, S8, {0x200, 0xa9059cbb}, V461, 0x20, V464, V465, V464, 0x0, S0]

================================

Block 0x519
[0x519:0x525]
---
Predecessors: [0x4cd]
Successors: [0x526, 0x52a]
---
0x519 JUMPDEST
0x51a PUSH2 0x2c6
0x51d GAS
0x51e SUB
0x51f CALL
0x520 ISZERO
0x521 ISZERO
0x522 PUSH2 0x52a
0x525 JUMPI
---
0x519: JUMPDEST 
0x51a: V472 = 0x2c6
0x51d: V473 = GAS
0x51e: V474 = SUB V473 0x2c6
0x51f: V475 = CALL V474 S0 0x0 V464 V465 V464 0x20
0x520: V476 = ISZERO V475
0x521: V477 = ISZERO V476
0x522: V478 = 0x52a
0x525: JUMPI 0x52a V477
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, {0x200, 0xa9059cbb}, V461, 0x20, V464, V465, V464, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V13, S13, S12, S11, S10, S9, S8, {0x200, 0xa9059cbb}, V461]

================================

Block 0x526
[0x526:0x529]
---
Predecessors: [0x519]
Successors: []
---
0x526 PUSH1 0x0
0x528 DUP1
0x529 REVERT
---
0x526: V479 = 0x0
0x529: REVERT 0x0 0x0
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, {0x200, 0xa9059cbb}, V461]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S7, S6, S5, S4, S3, S2, {0x200, 0xa9059cbb}, V461]

================================

Block 0x52a
[0x52a:0x534]
---
Predecessors: [0x519]
Successors: [0x535]
---
0x52a JUMPDEST
0x52b POP
0x52c POP
0x52d POP
0x52e PUSH1 0x40
0x530 MLOAD
0x531 DUP1
0x532 MLOAD
0x533 POP
0x534 POP
---
0x52a: JUMPDEST 
0x52e: V480 = 0x40
0x530: V481 = M[0x40]
0x532: V482 = M[V481]
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, {0x200, 0xa9059cbb}, V461]
Stack pops: 3
Stack additions: []
Exit stack: [V13, S7, S6, S5, S4, S3]

================================

Block 0x535
[0x535:0x53c]
---
Predecessors: [0x471, 0x52a]
Successors: [0x45c]
---
0x535 JUMPDEST
0x536 PUSH1 0x1
0x538 ADD
0x539 PUSH2 0x45c
0x53c JUMP
---
0x535: JUMPDEST 
0x536: V483 = 0x1
0x538: V484 = ADD 0x1 S0
0x539: V485 = 0x45c
0x53c: JUMP 0x45c
---
Entry stack: [V13, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V484]
Exit stack: [V13, S4, S3, S2, S1, V484]

================================

Block 0x53d
[0x53d:0x541]
---
Predecessors: [0x45c]
Successors: [0xbc]
---
0x53d JUMPDEST
0x53e POP
0x53f POP
0x540 POP
0x541 JUMP
---
0x53d: JUMPDEST 
0x541: JUMP S3
---
Entry stack: [V13, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V13, S4]

================================

Block 0x542
[0x542:0x54e]
---
Predecessors: [0x1af, 0x2bc, 0x4af]
Successors: [0x54f, 0x55e]
---
0x542 JUMPDEST
0x543 PUSH1 0x0
0x545 DUP3
0x546 DUP3
0x547 MUL
0x548 DUP4
0x549 ISZERO
0x54a DUP1
0x54b PUSH2 0x55e
0x54e JUMPI
---
0x542: JUMPDEST 
0x543: V486 = 0x0
0x547: V487 = MUL S0 S1
0x549: V488 = ISZERO S1
0x54b: V489 = 0x55e
0x54e: JUMPI 0x55e V488
---
Entry stack: [V13, S10, S9, S8, S7, S6, S5, {0x200, 0xa9059cbb}, S3, {0x1f4, 0x2eb, 0x4cd}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V487, V488]
Exit stack: [V13, S10, S9, S8, S7, S6, S5, {0x200, 0xa9059cbb}, S3, {0x1f4, 0x2eb, 0x4cd}, S1, S0, 0x0, V487, V488]

================================

Block 0x54f
[0x54f:0x559]
---
Predecessors: [0x542]
Successors: [0x55a, 0x55b]
---
0x54f POP
0x550 DUP3
0x551 DUP5
0x552 DUP3
0x553 DUP2
0x554 ISZERO
0x555 ISZERO
0x556 PUSH2 0x55b
0x559 JUMPI
---
0x554: V490 = ISZERO S4
0x555: V491 = ISZERO V490
0x556: V492 = 0x55b
0x559: JUMPI 0x55b V491
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, {0x200, 0xa9059cbb}, S6, {0x1f4, 0x2eb, 0x4cd}, S4, S3, 0x0, V487, V488]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S3, S4, S1]
Exit stack: [V13, S13, S12, S11, S10, S9, S8, {0x200, 0xa9059cbb}, S6, {0x1f4, 0x2eb, 0x4cd}, S4, S3, 0x0, V487, S3, S4, V487]

================================

Block 0x55a
[0x55a:0x55a]
---
Predecessors: [0x54f]
Successors: []
---
0x55a INVALID
---
0x55a: INVALID 
---
Entry stack: [V13, S15, S14, S13, S12, S11, S10, {0x200, 0xa9059cbb}, S8, {0x1f4, 0x2eb, 0x4cd}, S6, S5, 0x0, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S15, S14, S13, S12, S11, S10, {0x200, 0xa9059cbb}, S8, {0x1f4, 0x2eb, 0x4cd}, S6, S5, 0x0, S3, S2, S1, S0]

================================

Block 0x55b
[0x55b:0x55d]
---
Predecessors: [0x54f]
Successors: [0x55e]
---
0x55b JUMPDEST
0x55c DIV
0x55d EQ
---
0x55b: JUMPDEST 
0x55c: V493 = DIV S0 S1
0x55d: V494 = EQ V493 S2
---
Entry stack: [V13, S15, S14, S13, S12, S11, S10, {0x200, 0xa9059cbb}, S8, {0x1f4, 0x2eb, 0x4cd}, S6, S5, 0x0, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V494]
Exit stack: [V13, S15, S14, S13, S12, S11, S10, {0x200, 0xa9059cbb}, S8, {0x1f4, 0x2eb, 0x4cd}, S6, S5, 0x0, S3, V494]

================================

Block 0x55e
[0x55e:0x564]
---
Predecessors: [0x542, 0x55b]
Successors: [0x565, 0x566]
---
0x55e JUMPDEST
0x55f ISZERO
0x560 ISZERO
0x561 PUSH2 0x566
0x564 JUMPI
---
0x55e: JUMPDEST 
0x55f: V495 = ISZERO S0
0x560: V496 = ISZERO V495
0x561: V497 = 0x566
0x564: JUMPI 0x566 V496
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, {0x200, 0xa9059cbb}, S6, {0x1f4, 0x2eb, 0x4cd}, S4, S3, 0x0, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S13, S12, S11, S10, S9, S8, {0x200, 0xa9059cbb}, S6, {0x1f4, 0x2eb, 0x4cd}, S4, S3, 0x0, S1]

================================

Block 0x565
[0x565:0x565]
---
Predecessors: [0x55e]
Successors: []
---
0x565 INVALID
---
0x565: INVALID 
---
Entry stack: [V13, S12, S11, S10, S9, S8, S7, {0x200, 0xa9059cbb}, S5, {0x1f4, 0x2eb, 0x4cd}, S3, S2, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S12, S11, S10, S9, S8, S7, {0x200, 0xa9059cbb}, S5, {0x1f4, 0x2eb, 0x4cd}, S3, S2, 0x0, S0]

================================

Block 0x566
[0x566:0x56c]
---
Predecessors: [0x55e]
Successors: [0x1f4, 0x2eb, 0x4cd]
---
0x566 JUMPDEST
0x567 SWAP4
0x568 SWAP3
0x569 POP
0x56a POP
0x56b POP
0x56c JUMP
---
0x566: JUMPDEST 
0x56c: JUMP {0x1f4, 0x2eb, 0x4cd}
---
Entry stack: [V13, S12, S11, S10, S9, S8, S7, {0x200, 0xa9059cbb}, S5, {0x1f4, 0x2eb, 0x4cd}, S3, S2, 0x0, S0]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V13, S12, S11, S10, S9, S8, S7, {0x200, 0xa9059cbb}, S5, S0]

================================

Block 0x56d
[0x56d:0x579]
---
Predecessors: [0x1f4]
Successors: [0x57a, 0x57b]
---
0x56d JUMPDEST
0x56e PUSH1 0x0
0x570 DUP1
0x571 DUP3
0x572 DUP5
0x573 DUP2
0x574 ISZERO
0x575 ISZERO
0x576 PUSH2 0x57b
0x579 JUMPI
---
0x56d: JUMPDEST 
0x56e: V498 = 0x0
0x574: V499 = ISZERO S0
0x575: V500 = ISZERO V499
0x576: V501 = 0x57b
0x579: JUMPI 0x57b V500
---
Entry stack: [V13, S8, S7, S6, S5, S4, S3, {0x200, 0xa9059cbb}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, S0, S1]
Exit stack: [V13, S8, S7, S6, S5, S4, S3, {0x200, 0xa9059cbb}, S1, S0, 0x0, 0x0, S0, S1]

================================

Block 0x57a
[0x57a:0x57a]
---
Predecessors: [0x56d]
Successors: []
---
0x57a INVALID
---
0x57a: INVALID 
---
Entry stack: [V13, S12, S11, S10, S9, S8, S7, {0x200, 0xa9059cbb}, S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S12, S11, S10, S9, S8, S7, {0x200, 0xa9059cbb}, S5, S4, 0x0, 0x0, S1, S0]

================================

Block 0x57b
[0x57b:0x583]
---
Predecessors: [0x56d]
Successors: [0x200]
---
0x57b JUMPDEST
0x57c DIV
0x57d SWAP5
0x57e SWAP4
0x57f POP
0x580 POP
0x581 POP
0x582 POP
0x583 JUMP
---
0x57b: JUMPDEST 
0x57c: V502 = DIV S0 S1
0x583: THROW 
---
Entry stack: [V13, S12, S11, S10, S9, S8, S7, {0x200, 0xa9059cbb}, S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 7
Stack additions: [V502]
Exit stack: [V13, S12, S11, S10, S9, S8, S7, V502]

================================

Block 0x584
[0x584:0x5b8]
---
Predecessors: [0x25d]
Successors: [0x5b9, 0x5bd]
---
0x584 JUMPDEST
0x585 PUSH1 0x0
0x587 SLOAD
0x588 PUSH1 0x1
0x58a PUSH1 0xa0
0x58c PUSH1 0x2
0x58e EXP
0x58f SUB
0x590 SWAP1
0x591 DUP2
0x592 AND
0x593 SWAP1
0x594 ADDRESS
0x595 AND
0x596 BALANCE
0x597 DUP1
0x598 ISZERO
0x599 PUSH2 0x8fc
0x59c MUL
0x59d SWAP1
0x59e PUSH1 0x40
0x5a0 MLOAD
0x5a1 PUSH1 0x0
0x5a3 PUSH1 0x40
0x5a5 MLOAD
0x5a6 DUP1
0x5a7 DUP4
0x5a8 SUB
0x5a9 DUP2
0x5aa DUP6
0x5ab DUP9
0x5ac DUP9
0x5ad CALL
0x5ae SWAP4
0x5af POP
0x5b0 POP
0x5b1 POP
0x5b2 POP
0x5b3 ISZERO
0x5b4 ISZERO
0x5b5 PUSH2 0x5bd
0x5b8 JUMPI
---
0x584: JUMPDEST 
0x585: V503 = 0x0
0x587: V504 = S[0x0]
0x588: V505 = 0x1
0x58a: V506 = 0xa0
0x58c: V507 = 0x2
0x58e: V508 = EXP 0x2 0xa0
0x58f: V509 = SUB 0x10000000000000000000000000000000000000000 0x1
0x592: V510 = AND 0xffffffffffffffffffffffffffffffffffffffff V504
0x594: V511 = ADDRESS
0x595: V512 = AND V511 0xffffffffffffffffffffffffffffffffffffffff
0x596: V513 = BALANCE V512
0x598: V514 = ISZERO V513
0x599: V515 = 0x8fc
0x59c: V516 = MUL 0x8fc V514
0x59e: V517 = 0x40
0x5a0: V518 = M[0x40]
0x5a1: V519 = 0x0
0x5a3: V520 = 0x40
0x5a5: V521 = M[0x40]
0x5a8: V522 = SUB V518 V521
0x5ad: V523 = CALL V516 V510 V513 V521 V522 V521 0x0
0x5b3: V524 = ISZERO V523
0x5b4: V525 = ISZERO V524
0x5b5: V526 = 0x5bd
0x5b8: JUMPI 0x5bd V525
---
Entry stack: [V13, S3, S2, S1, 0x270]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S3, S2, S1, 0x270]

================================

Block 0x5b9
[0x5b9:0x5bc]
---
Predecessors: [0x584]
Successors: []
---
0x5b9 PUSH1 0x0
0x5bb DUP1
0x5bc REVERT
---
0x5b9: V527 = 0x0
0x5bc: REVERT 0x0 0x0
---
Entry stack: [V13, S3, S2, S1, 0x270]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S3, S2, S1, 0x270]

================================

Block 0x5bd
[0x5bd:0x5be]
---
Predecessors: [0x584]
Successors: [0x270]
---
0x5bd JUMPDEST
0x5be JUMP
---
0x5bd: JUMPDEST 
0x5be: JUMP 0x270
---
Entry stack: [V13, S3, S2, S1, 0x270]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S3, S2, S1]

================================

Block 0x5bf
[0x5bf:0x5ec]
---
Predecessors: []
Successors: []
---
0x5bf STOP
0x5c0 LOG1
0x5c1 PUSH6 0x627a7a723058
0x5c8 SHA3
0x5c9 MISSING 0xfb
0x5ca RETURNDATASIZE
0x5cb MISSING 0xa6
0x5cc MISSING 0xe5
0x5cd MISSING 0xd
0x5ce CALL
0x5cf SWAP14
0x5d0 MISSING 0xa7
0x5d1 MISSING 0xc8
0x5d2 MISSING 0xe1
0x5d3 MISSING 0xc8
0x5d4 CREATE2
0x5d5 MISSING 0xe
0x5d6 DUP13
0x5d7 CALLVALUE
0x5d8 MISSING 0x5e
0x5d9 SWAP1
0x5da JUMP
0x5db DUP6
0x5dc MISSING 0xeb
0x5dd PUSH15 0xad46b8559e62f59c3a719a0029
---
0x5bf: STOP 
0x5c0: LOG S0 S1 S2
0x5c1: V528 = 0x627a7a723058
0x5c8: V529 = SHA3 0x627a7a723058 S3
0x5c9: MISSING 0xfb
0x5ca: V530 = RETURNDATASIZE
0x5cb: MISSING 0xa6
0x5cc: MISSING 0xe5
0x5cd: MISSING 0xd
0x5ce: V531 = CALL S0 S1 S2 S3 S4 S5 S6
0x5d0: MISSING 0xa7
0x5d1: MISSING 0xc8
0x5d2: MISSING 0xe1
0x5d3: MISSING 0xc8
0x5d4: V532 = CREATE2 S0 S1 S2 S3
0x5d5: MISSING 0xe
0x5d7: V533 = CALLVALUE
0x5d8: MISSING 0x5e
0x5da: JUMP S1
0x5dc: MISSING 0xeb
0x5dd: V534 = 0xad46b8559e62f59c3a719a0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V529, V530, S20, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, V531, V532, V533, S12, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S0, S5, S0, S1, S2, S3, S4, S5, 0xad46b8559e62f59c3a719a0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x2c4e722e
Entry block: 0x75
Exit block: 0x88
Body: 0x75, 0x7c, 0x80, 0x88, 0x278

Function 1:
Public function signature: 0x475a9fa9
Entry block: 0x9a
Exit block: 0xbc
Body: 0x9a, 0xa1, 0xa5, 0xbc, 0x27e, 0x295, 0x299, 0x2ac, 0x2b1, 0x2b8, 0x2bc, 0x2eb, 0x333, 0x337, 0x344, 0x348

Function 2:
Public function signature: 0x7a118fdc
Entry block: 0xbe
Exit block: 0xd1
Body: 0xbe, 0xc5, 0xc9, 0xd1, 0x356

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0xed
Exit block: 0xd1
Body: 0xd1, 0xed, 0xf4, 0xf8, 0x36e

Function 4:
Public function signature: 0xec8ac4d8
Entry block: 0x100
Exit block: 0x114
Body: 0x100, 0x114

Function 5:
Public function signature: 0xf2fde38b
Entry block: 0x128
Exit block: 0xbc
Body: 0xbc, 0x128, 0x12f, 0x133, 0x37d, 0x394, 0x398, 0x3a9, 0x3ad

Function 6:
Public function signature: 0xfd1fc4a0
Entry block: 0x147
Exit block: 0x526
Body: 0xbc, 0x147, 0x14e, 0x152, 0x42e, 0x446, 0x44a, 0x454, 0x458, 0x45c, 0x466, 0x470, 0x471, 0x48a, 0x4ae, 0x4af, 0x4cd, 0x515, 0x519, 0x526, 0x52a, 0x535, 0x53d

Function 7:
Public fallback function
Entry block: 0x69
Exit block: 0x72
Body: 0x69, 0x72

Function 8:
Private function
Entry block: 0x198
Exit block: 0x270
Body: 0x198, 0x1af, 0x1f4, 0x200, 0x24c, 0x25d, 0x270, 0x56d, 0x57b, 0x584, 0x5bd

Function 9:
Private function
Entry block: 0x542
Exit block: 0x566
Body: 0x542, 0x54f, 0x55b, 0x55e, 0x566

