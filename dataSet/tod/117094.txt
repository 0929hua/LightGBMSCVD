Block 0x0
[0x0:0x32]
---
Predecessors: []
Successors: [0x33, 0x4f]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 DUP1
0x29 PUSH4 0x679dffb4
0x2e EQ
0x2f PUSH2 0x4f
0x32 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x29: V6 = 0x679dffb4
0x2e: V7 = EQ 0x679dffb4 V5
0x2f: V8 = 0x4f
0x32: JUMPI 0x4f V7
---
Entry stack: []
Stack pops: 0
Stack additions: [V5]
Exit stack: [V5]

================================

Block 0x33
[0x33:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x5e]
---
0x33 DUP1
0x34 PUSH4 0x6898f82b
0x39 EQ
0x3a PUSH2 0x5e
0x3d JUMPI
---
0x34: V9 = 0x6898f82b
0x39: V10 = EQ 0x6898f82b V5
0x3a: V11 = 0x5e
0x3d: JUMPI 0x5e V10
---
Entry stack: [V5]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V5]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0x33]
Successors: [0x49, 0x76]
---
0x3e DUP1
0x3f PUSH4 0xf71d96cb
0x44 EQ
0x45 PUSH2 0x76
0x48 JUMPI
---
0x3f: V12 = 0xf71d96cb
0x44: V13 = EQ 0xf71d96cb V5
0x45: V14 = 0x76
0x48: JUMPI 0x76 V13
---
Entry stack: [V5]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V5]

================================

Block 0x49
[0x49:0x4c]
---
Predecessors: [0x3e]
Successors: [0x4d]
---
0x49 PUSH2 0x4d
0x4c JUMP
---
0x49: V15 = 0x4d
0x4c: JUMP 0x4d
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x4d
[0x4d:0x4e]
---
Predecessors: [0x49]
Successors: []
---
0x4d JUMPDEST
0x4e STOP
---
0x4d: JUMPDEST 
0x4e: STOP 
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x4f
[0x4f:0x5b]
---
Predecessors: [0x0]
Successors: [0x200]
---
0x4f JUMPDEST
0x50 PUSH2 0x5c
0x53 PUSH1 0x4
0x55 DUP1
0x56 POP
0x57 POP
0x58 PUSH2 0x200
0x5b JUMP
---
0x4f: JUMPDEST 
0x50: V16 = 0x5c
0x53: V17 = 0x4
0x58: V18 = 0x200
0x5b: JUMP 0x200
---
Entry stack: [V5]
Stack pops: 0
Stack additions: [0x5c]
Exit stack: [V5, 0x5c]

================================

Block 0x5c
[0x5c:0x5d]
---
Predecessors: [0x2a7]
Successors: []
---
0x5c JUMPDEST
0x5d STOP
---
0x5c: JUMPDEST 
0x5d: STOP 
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x5e
[0x5e:0x73]
---
Predecessors: [0x33]
Successors: [0x10e]
---
0x5e JUMPDEST
0x5f PUSH2 0x74
0x62 PUSH1 0x4
0x64 DUP1
0x65 DUP1
0x66 CALLDATALOAD
0x67 SWAP1
0x68 PUSH1 0x20
0x6a ADD
0x6b SWAP1
0x6c SWAP2
0x6d SWAP1
0x6e POP
0x6f POP
0x70 PUSH2 0x10e
0x73 JUMP
---
0x5e: JUMPDEST 
0x5f: V19 = 0x74
0x62: V20 = 0x4
0x66: V21 = CALLDATALOAD 0x4
0x68: V22 = 0x20
0x6a: V23 = ADD 0x20 0x4
0x70: V24 = 0x10e
0x73: JUMP 0x10e
---
Entry stack: [V5]
Stack pops: 0
Stack additions: [0x74, V21]
Exit stack: [V5, 0x74, V21]

================================

Block 0x74
[0x74:0x75]
---
Predecessors: [0x1fd]
Successors: []
---
0x74 JUMPDEST
0x75 STOP
---
0x74: JUMPDEST 
0x75: STOP 
---
Entry stack: [V5]
Stack pops: 0
Stack additions: []
Exit stack: [V5]

================================

Block 0x76
[0x76:0x8b]
---
Predecessors: [0x3e]
Successors: [0xbf]
---
0x76 JUMPDEST
0x77 PUSH2 0x8c
0x7a PUSH1 0x4
0x7c DUP1
0x7d DUP1
0x7e CALLDATALOAD
0x7f SWAP1
0x80 PUSH1 0x20
0x82 ADD
0x83 SWAP1
0x84 SWAP2
0x85 SWAP1
0x86 POP
0x87 POP
0x88 PUSH2 0xbf
0x8b JUMP
---
0x76: JUMPDEST 
0x77: V25 = 0x8c
0x7a: V26 = 0x4
0x7e: V27 = CALLDATALOAD 0x4
0x80: V28 = 0x20
0x82: V29 = ADD 0x20 0x4
0x88: V30 = 0xbf
0x8b: JUMP 0xbf
---
Entry stack: [V5]
Stack pops: 0
Stack additions: [0x8c, V27]
Exit stack: [V5, 0x8c, V27]

================================

Block 0x8c
[0x8c:0xbe]
---
Predecessors: [0xd7]
Successors: []
---
0x8c JUMPDEST
0x8d PUSH1 0x40
0x8f MLOAD
0x90 DUP1
0x91 DUP4
0x92 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa7 AND
0xa8 DUP2
0xa9 MSTORE
0xaa PUSH1 0x20
0xac ADD
0xad DUP3
0xae DUP2
0xaf MSTORE
0xb0 PUSH1 0x20
0xb2 ADD
0xb3 SWAP3
0xb4 POP
0xb5 POP
0xb6 POP
0xb7 PUSH1 0x40
0xb9 MLOAD
0xba DUP1
0xbb SWAP2
0xbc SUB
0xbd SWAP1
0xbe RETURN
---
0x8c: JUMPDEST 
0x8d: V31 = 0x40
0x8f: V32 = M[0x40]
0x92: V33 = 0xffffffffffffffffffffffffffffffffffffffff
0xa7: V34 = AND 0xffffffffffffffffffffffffffffffffffffffff V60
0xa9: M[V32] = V34
0xaa: V35 = 0x20
0xac: V36 = ADD 0x20 V32
0xaf: M[V36] = V64
0xb0: V37 = 0x20
0xb2: V38 = ADD 0x20 V36
0xb7: V39 = 0x40
0xb9: V40 = M[0x40]
0xbc: V41 = SUB V38 V40
0xbe: RETURN V40 V41
---
Entry stack: [V5, 0x8c, V60, V64]
Stack pops: 2
Stack additions: []
Exit stack: [V5, 0x8c]

================================

Block 0xbf
[0xbf:0xce]
---
Predecessors: [0x76]
Successors: [0xcf]
---
0xbf JUMPDEST
0xc0 PUSH1 0x0
0xc2 PUSH1 0x0
0xc4 POP
0xc5 DUP2
0xc6 PUSH1 0x2
0xc8 DUP2
0xc9 LT
0xca ISZERO
0xcb PUSH2 0x2
0xce JUMPI
---
0xbf: JUMPDEST 
0xc0: V42 = 0x0
0xc2: V43 = 0x0
0xc6: V44 = 0x2
0xc9: V45 = LT V27 0x2
0xca: V46 = ISZERO V45
0xcb: V47 = 0x2
0xce: THROWI V46
---
Entry stack: [V5, 0x8c, V27]
Stack pops: 1
Stack additions: [S0, 0x0, S0]
Exit stack: [V5, 0x8c, V27, 0x0, V27]

================================

Block 0xcf
[0xcf:0xd6]
---
Predecessors: [0xbf]
Successors: [0xd7]
---
0xcf SWAP1
0xd0 SWAP1
0xd1 PUSH1 0x2
0xd3 MUL
0xd4 ADD
0xd5 PUSH1 0x0
---
0xd1: V48 = 0x2
0xd3: V49 = MUL 0x2 V27
0xd4: V50 = ADD V49 0x0
0xd5: V51 = 0x0
---
Entry stack: [V5, 0x8c, V27, 0x0, V27]
Stack pops: 2
Stack additions: [V50, 0x0]
Exit stack: [V5, 0x8c, V27, V50, 0x0]

================================

Block 0xd7
[0xd7:0x10d]
---
Predecessors: [0xcf]
Successors: [0x8c]
---
0xd7 JUMPDEST
0xd8 SWAP2
0xd9 POP
0xda SWAP1
0xdb POP
0xdc DUP1
0xdd PUSH1 0x0
0xdf ADD
0xe0 PUSH1 0x0
0xe2 SWAP1
0xe3 SLOAD
0xe4 SWAP1
0xe5 PUSH2 0x100
0xe8 EXP
0xe9 SWAP1
0xea DIV
0xeb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x100 AND
0x101 SWAP1
0x102 DUP1
0x103 PUSH1 0x1
0x105 ADD
0x106 PUSH1 0x0
0x108 POP
0x109 SLOAD
0x10a SWAP1
0x10b POP
0x10c DUP3
0x10d JUMP
---
0xd7: JUMPDEST 
0xdd: V52 = 0x0
0xdf: V53 = ADD 0x0 V50
0xe0: V54 = 0x0
0xe3: V55 = S[V53]
0xe5: V56 = 0x100
0xe8: V57 = EXP 0x100 0x0
0xea: V58 = DIV V55 0x1
0xeb: V59 = 0xffffffffffffffffffffffffffffffffffffffff
0x100: V60 = AND 0xffffffffffffffffffffffffffffffffffffffff V58
0x103: V61 = 0x1
0x105: V62 = ADD 0x1 V50
0x106: V63 = 0x0
0x109: V64 = S[V62]
0x10d: JUMP 0x8c
---
Entry stack: [V5, 0x8c, V27, V50, 0x0]
Stack pops: 4
Stack additions: [S3, V60, V64]
Exit stack: [V5, 0x8c, V60, V64]

================================

Block 0x10e
[0x10e:0x11f]
---
Predecessors: [0x5e]
Successors: [0x120, 0x124]
---
0x10e JUMPDEST
0x10f PUSH8 0xde0b6b3a7640000
0x118 CALLVALUE
0x119 EQ
0x11a ISZERO
0x11b ISZERO
0x11c PUSH2 0x124
0x11f JUMPI
---
0x10e: JUMPDEST 
0x10f: V65 = 0xde0b6b3a7640000
0x118: V66 = CALLVALUE
0x119: V67 = EQ V66 0xde0b6b3a7640000
0x11a: V68 = ISZERO V67
0x11b: V69 = ISZERO V68
0x11c: V70 = 0x124
0x11f: JUMPI 0x124 V69
---
Entry stack: [V5, 0x74, V21]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x74, V21]

================================

Block 0x120
[0x120:0x123]
---
Predecessors: [0x10e]
Successors: []
---
0x120 PUSH2 0x2
0x123 JUMP
---
0x120: V71 = 0x2
0x123: THROW 
---
Entry stack: [V5, 0x74, V21]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x74, V21]

================================

Block 0x124
[0x124:0x15e]
---
Predecessors: [0x10e]
Successors: [0x15f]
---
0x124 JUMPDEST
0x125 PUSH1 0x40
0x127 PUSH1 0x40
0x129 MLOAD
0x12a SWAP1
0x12b DUP2
0x12c ADD
0x12d PUSH1 0x40
0x12f MSTORE
0x130 DUP1
0x131 CALLER
0x132 DUP2
0x133 MSTORE
0x134 PUSH1 0x20
0x136 ADD
0x137 DUP3
0x138 DUP2
0x139 MSTORE
0x13a PUSH1 0x20
0x13c ADD
0x13d POP
0x13e PUSH1 0x0
0x140 PUSH1 0x0
0x142 POP
0x143 PUSH1 0x4
0x145 PUSH1 0x0
0x147 SWAP1
0x148 SLOAD
0x149 SWAP1
0x14a PUSH2 0x100
0x14d EXP
0x14e SWAP1
0x14f DIV
0x150 PUSH1 0xff
0x152 AND
0x153 PUSH1 0xff
0x155 AND
0x156 PUSH1 0x2
0x158 DUP2
0x159 LT
0x15a ISZERO
0x15b PUSH2 0x2
0x15e JUMPI
---
0x124: JUMPDEST 
0x125: V72 = 0x40
0x127: V73 = 0x40
0x129: V74 = M[0x40]
0x12c: V75 = ADD V74 0x40
0x12d: V76 = 0x40
0x12f: M[0x40] = V75
0x131: V77 = CALLER
0x133: M[V74] = V77
0x134: V78 = 0x20
0x136: V79 = ADD 0x20 V74
0x139: M[V79] = V21
0x13a: V80 = 0x20
0x13c: V81 = ADD 0x20 V79
0x13e: V82 = 0x0
0x140: V83 = 0x0
0x143: V84 = 0x4
0x145: V85 = 0x0
0x148: V86 = S[0x4]
0x14a: V87 = 0x100
0x14d: V88 = EXP 0x100 0x0
0x14f: V89 = DIV V86 0x1
0x150: V90 = 0xff
0x152: V91 = AND 0xff V89
0x153: V92 = 0xff
0x155: V93 = AND 0xff V91
0x156: V94 = 0x2
0x159: V95 = LT V93 0x2
0x15a: V96 = ISZERO V95
0x15b: V97 = 0x2
0x15e: THROWI V96
---
Entry stack: [V5, 0x74, V21]
Stack pops: 1
Stack additions: [S0, V74, 0x0, V93]
Exit stack: [V5, 0x74, V21, V74, 0x0, V93]

================================

Block 0x15f
[0x15f:0x166]
---
Predecessors: [0x124]
Successors: [0x167]
---
0x15f SWAP1
0x160 SWAP1
0x161 PUSH1 0x2
0x163 MUL
0x164 ADD
0x165 PUSH1 0x0
---
0x161: V98 = 0x2
0x163: V99 = MUL 0x2 V93
0x164: V100 = ADD V99 0x0
0x165: V101 = 0x0
---
Entry stack: [V5, 0x74, V21, V74, 0x0, V93]
Stack pops: 2
Stack additions: [V100, 0x0]
Exit stack: [V5, 0x74, V21, V74, V100, 0x0]

================================

Block 0x167
[0x167:0x1f3]
---
Predecessors: [0x15f]
Successors: [0x1f4, 0x1fc]
---
0x167 JUMPDEST
0x168 POP
0x169 PUSH1 0x0
0x16b DUP3
0x16c ADD
0x16d MLOAD
0x16e DUP2
0x16f PUSH1 0x0
0x171 ADD
0x172 PUSH1 0x0
0x174 PUSH2 0x100
0x177 EXP
0x178 DUP2
0x179 SLOAD
0x17a DUP2
0x17b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x190 MUL
0x191 NOT
0x192 AND
0x193 SWAP1
0x194 DUP4
0x195 MUL
0x196 OR
0x197 SWAP1
0x198 SSTORE
0x199 POP
0x19a PUSH1 0x20
0x19c DUP3
0x19d ADD
0x19e MLOAD
0x19f DUP2
0x1a0 PUSH1 0x1
0x1a2 ADD
0x1a3 PUSH1 0x0
0x1a5 POP
0x1a6 SSTORE
0x1a7 SWAP1
0x1a8 POP
0x1a9 POP
0x1aa PUSH1 0x4
0x1ac PUSH1 0x0
0x1ae DUP2
0x1af DUP2
0x1b0 SWAP1
0x1b1 SLOAD
0x1b2 SWAP1
0x1b3 PUSH2 0x100
0x1b6 EXP
0x1b7 SWAP1
0x1b8 DIV
0x1b9 PUSH1 0xff
0x1bb AND
0x1bc DUP1
0x1bd SWAP3
0x1be SWAP2
0x1bf SWAP1
0x1c0 PUSH1 0x1
0x1c2 ADD
0x1c3 SWAP2
0x1c4 SWAP1
0x1c5 PUSH2 0x100
0x1c8 EXP
0x1c9 DUP2
0x1ca SLOAD
0x1cb DUP2
0x1cc PUSH1 0xff
0x1ce MUL
0x1cf NOT
0x1d0 AND
0x1d1 SWAP1
0x1d2 DUP4
0x1d3 MUL
0x1d4 OR
0x1d5 SWAP1
0x1d6 SSTORE
0x1d7 POP
0x1d8 POP
0x1d9 PUSH1 0x2
0x1db PUSH1 0x4
0x1dd PUSH1 0x0
0x1df SWAP1
0x1e0 SLOAD
0x1e1 SWAP1
0x1e2 PUSH2 0x100
0x1e5 EXP
0x1e6 SWAP1
0x1e7 DIV
0x1e8 PUSH1 0xff
0x1ea AND
0x1eb PUSH1 0xff
0x1ed AND
0x1ee EQ
0x1ef ISZERO
0x1f0 PUSH2 0x1fc
0x1f3 JUMPI
---
0x167: JUMPDEST 
0x169: V102 = 0x0
0x16c: V103 = ADD V74 0x0
0x16d: V104 = M[V103]
0x16f: V105 = 0x0
0x171: V106 = ADD 0x0 V100
0x172: V107 = 0x0
0x174: V108 = 0x100
0x177: V109 = EXP 0x100 0x0
0x179: V110 = S[V106]
0x17b: V111 = 0xffffffffffffffffffffffffffffffffffffffff
0x190: V112 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x191: V113 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x192: V114 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V110
0x195: V115 = MUL V104 0x1
0x196: V116 = OR V115 V114
0x198: S[V106] = V116
0x19a: V117 = 0x20
0x19d: V118 = ADD V74 0x20
0x19e: V119 = M[V118]
0x1a0: V120 = 0x1
0x1a2: V121 = ADD 0x1 V100
0x1a3: V122 = 0x0
0x1a6: S[V121] = V119
0x1aa: V123 = 0x4
0x1ac: V124 = 0x0
0x1b1: V125 = S[0x4]
0x1b3: V126 = 0x100
0x1b6: V127 = EXP 0x100 0x0
0x1b8: V128 = DIV V125 0x1
0x1b9: V129 = 0xff
0x1bb: V130 = AND 0xff V128
0x1c0: V131 = 0x1
0x1c2: V132 = ADD 0x1 V130
0x1c5: V133 = 0x100
0x1c8: V134 = EXP 0x100 0x0
0x1ca: V135 = S[0x4]
0x1cc: V136 = 0xff
0x1ce: V137 = MUL 0xff 0x1
0x1cf: V138 = NOT 0xff
0x1d0: V139 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V135
0x1d3: V140 = MUL V132 0x1
0x1d4: V141 = OR V140 V139
0x1d6: S[0x4] = V141
0x1d9: V142 = 0x2
0x1db: V143 = 0x4
0x1dd: V144 = 0x0
0x1e0: V145 = S[0x4]
0x1e2: V146 = 0x100
0x1e5: V147 = EXP 0x100 0x0
0x1e7: V148 = DIV V145 0x1
0x1e8: V149 = 0xff
0x1ea: V150 = AND 0xff V148
0x1eb: V151 = 0xff
0x1ed: V152 = AND 0xff V150
0x1ee: V153 = EQ V152 0x2
0x1ef: V154 = ISZERO V153
0x1f0: V155 = 0x1fc
0x1f3: JUMPI 0x1fc V154
---
Entry stack: [V5, 0x74, V21, V74, V100, 0x0]
Stack pops: 3
Stack additions: []
Exit stack: [V5, 0x74, V21]

================================

Block 0x1f4
[0x1f4:0x1fa]
---
Predecessors: [0x167]
Successors: [0x2a9]
---
0x1f4 PUSH2 0x1fb
0x1f7 PUSH2 0x2a9
0x1fa JUMP
---
0x1f4: V156 = 0x1fb
0x1f7: V157 = 0x2a9
0x1fa: JUMP 0x2a9
---
Entry stack: [V5, 0x74, V21]
Stack pops: 0
Stack additions: [0x1fb]
Exit stack: [V5, 0x74, V21, 0x1fb]

================================

Block 0x1fb
[0x1fb:0x1fb]
---
Predecessors: [0x47f]
Successors: [0x1fc]
---
0x1fb JUMPDEST
---
0x1fb: JUMPDEST 
---
Entry stack: [V5, 0x74, V21]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x74, V21]

================================

Block 0x1fc
[0x1fc:0x1fc]
---
Predecessors: [0x167, 0x1fb]
Successors: [0x1fd]
---
0x1fc JUMPDEST
---
0x1fc: JUMPDEST 
---
Entry stack: [V5, 0x74, V21]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x74, V21]

================================

Block 0x1fd
[0x1fd:0x1ff]
---
Predecessors: [0x1fc]
Successors: [0x74]
---
0x1fd JUMPDEST
0x1fe POP
0x1ff JUMP
---
0x1fd: JUMPDEST 
0x1ff: JUMP 0x74
---
Entry stack: [V5, 0x74, V21]
Stack pops: 2
Stack additions: []
Exit stack: [V5]

================================

Block 0x200
[0x200:0x257]
---
Predecessors: [0x4f]
Successors: [0x258, 0x25c]
---
0x200 JUMPDEST
0x201 PUSH1 0x4
0x203 PUSH1 0x1
0x205 SWAP1
0x206 SLOAD
0x207 SWAP1
0x208 PUSH2 0x100
0x20b EXP
0x20c SWAP1
0x20d DIV
0x20e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x223 AND
0x224 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x239 AND
0x23a CALLER
0x23b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x250 AND
0x251 EQ
0x252 ISZERO
0x253 ISZERO
0x254 PUSH2 0x25c
0x257 JUMPI
---
0x200: JUMPDEST 
0x201: V158 = 0x4
0x203: V159 = 0x1
0x206: V160 = S[0x4]
0x208: V161 = 0x100
0x20b: V162 = EXP 0x100 0x1
0x20d: V163 = DIV V160 0x100
0x20e: V164 = 0xffffffffffffffffffffffffffffffffffffffff
0x223: V165 = AND 0xffffffffffffffffffffffffffffffffffffffff V163
0x224: V166 = 0xffffffffffffffffffffffffffffffffffffffff
0x239: V167 = AND 0xffffffffffffffffffffffffffffffffffffffff V165
0x23a: V168 = CALLER
0x23b: V169 = 0xffffffffffffffffffffffffffffffffffffffff
0x250: V170 = AND 0xffffffffffffffffffffffffffffffffffffffff V168
0x251: V171 = EQ V170 V167
0x252: V172 = ISZERO V171
0x253: V173 = ISZERO V172
0x254: V174 = 0x25c
0x257: JUMPI 0x25c V173
---
Entry stack: [V5, 0x5c]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x5c]

================================

Block 0x258
[0x258:0x25b]
---
Predecessors: [0x200]
Successors: []
---
0x258 PUSH2 0x2
0x25b JUMP
---
0x258: V175 = 0x2
0x25b: THROW 
---
Entry stack: [V5, 0x5c]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x5c]

================================

Block 0x25c
[0x25c:0x2a6]
---
Predecessors: [0x200]
Successors: [0x2a7]
---
0x25c JUMPDEST
0x25d CALLER
0x25e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x273 AND
0x274 PUSH1 0x0
0x276 ADDRESS
0x277 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28c AND
0x28d BALANCE
0x28e PUSH1 0x40
0x290 MLOAD
0x291 DUP1
0x292 SWAP1
0x293 POP
0x294 PUSH1 0x0
0x296 PUSH1 0x40
0x298 MLOAD
0x299 DUP1
0x29a DUP4
0x29b SUB
0x29c DUP2
0x29d DUP6
0x29e DUP9
0x29f DUP9
0x2a0 CALL
0x2a1 SWAP4
0x2a2 POP
0x2a3 POP
0x2a4 POP
0x2a5 POP
0x2a6 POP
---
0x25c: JUMPDEST 
0x25d: V176 = CALLER
0x25e: V177 = 0xffffffffffffffffffffffffffffffffffffffff
0x273: V178 = AND 0xffffffffffffffffffffffffffffffffffffffff V176
0x274: V179 = 0x0
0x276: V180 = ADDRESS
0x277: V181 = 0xffffffffffffffffffffffffffffffffffffffff
0x28c: V182 = AND 0xffffffffffffffffffffffffffffffffffffffff V180
0x28d: V183 = BALANCE V182
0x28e: V184 = 0x40
0x290: V185 = M[0x40]
0x294: V186 = 0x0
0x296: V187 = 0x40
0x298: V188 = M[0x40]
0x29b: V189 = SUB V185 V188
0x2a0: V190 = CALL 0x0 V178 V183 V188 V189 V188 0x0
---
Entry stack: [V5, 0x5c]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x5c]

================================

Block 0x2a7
[0x2a7:0x2a8]
---
Predecessors: [0x25c]
Successors: [0x5c]
---
0x2a7 JUMPDEST
0x2a8 JUMP
---
0x2a7: JUMPDEST 
0x2a8: JUMP 0x5c
---
Entry stack: [V5, 0x5c]
Stack pops: 1
Stack additions: []
Exit stack: [V5]

================================

Block 0x2a9
[0x2a9:0x2bb]
---
Predecessors: [0x1f4]
Successors: [0x2bc]
---
0x2a9 JUMPDEST
0x2aa PUSH1 0x0
0x2ac PUSH1 0x0
0x2ae PUSH1 0x0
0x2b0 POP
0x2b1 PUSH1 0x1
0x2b3 PUSH1 0x2
0x2b5 DUP2
0x2b6 LT
0x2b7 ISZERO
0x2b8 PUSH2 0x2
0x2bb JUMPI
---
0x2a9: JUMPDEST 
0x2aa: V191 = 0x0
0x2ac: V192 = 0x0
0x2ae: V193 = 0x0
0x2b1: V194 = 0x1
0x2b3: V195 = 0x2
0x2b6: V196 = LT 0x1 0x2
0x2b7: V197 = ISZERO 0x1
0x2b8: V198 = 0x2
0x2bb: THROWI 0x0
---
Entry stack: [V5, 0x74, V21, 0x1fb]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x1]
Exit stack: [V5, 0x74, V21, 0x1fb, 0x0, 0x0, 0x1]

================================

Block 0x2bc
[0x2bc:0x2c3]
---
Predecessors: [0x2a9]
Successors: [0x2c4]
---
0x2bc SWAP1
0x2bd SWAP1
0x2be PUSH1 0x2
0x2c0 MUL
0x2c1 ADD
0x2c2 PUSH1 0x0
---
0x2be: V199 = 0x2
0x2c0: V200 = MUL 0x2 0x1
0x2c1: V201 = ADD 0x2 0x0
0x2c2: V202 = 0x0
---
Entry stack: [V5, 0x74, V21, 0x1fb, 0x0, 0x0, 0x1]
Stack pops: 2
Stack additions: [0x2, 0x0]
Exit stack: [V5, 0x74, V21, 0x1fb, 0x0, 0x2, 0x0]

================================

Block 0x2c4
[0x2c4:0x2dc]
---
Predecessors: [0x2bc]
Successors: [0x2dd]
---
0x2c4 JUMPDEST
0x2c5 POP
0x2c6 PUSH1 0x1
0x2c8 ADD
0x2c9 PUSH1 0x0
0x2cb POP
0x2cc SLOAD
0x2cd PUSH1 0x0
0x2cf PUSH1 0x0
0x2d1 POP
0x2d2 PUSH1 0x0
0x2d4 PUSH1 0x2
0x2d6 DUP2
0x2d7 LT
0x2d8 ISZERO
0x2d9 PUSH2 0x2
0x2dc JUMPI
---
0x2c4: JUMPDEST 
0x2c6: V203 = 0x1
0x2c8: V204 = ADD 0x1 0x2
0x2c9: V205 = 0x0
0x2cc: V206 = S[0x3]
0x2cd: V207 = 0x0
0x2cf: V208 = 0x0
0x2d2: V209 = 0x0
0x2d4: V210 = 0x2
0x2d7: V211 = LT 0x0 0x2
0x2d8: V212 = ISZERO 0x1
0x2d9: V213 = 0x2
0x2dc: THROWI 0x0
---
Entry stack: [V5, 0x74, V21, 0x1fb, 0x0, 0x2, 0x0]
Stack pops: 2
Stack additions: [V206, 0x0, 0x0]
Exit stack: [V5, 0x74, V21, 0x1fb, 0x0, V206, 0x0, 0x0]

================================

Block 0x2dd
[0x2dd:0x2e4]
---
Predecessors: [0x2c4]
Successors: [0x2e5]
---
0x2dd SWAP1
0x2de SWAP1
0x2df PUSH1 0x2
0x2e1 MUL
0x2e2 ADD
0x2e3 PUSH1 0x0
---
0x2df: V214 = 0x2
0x2e1: V215 = MUL 0x2 0x0
0x2e2: V216 = ADD 0x0 0x0
0x2e3: V217 = 0x0
---
Entry stack: [V5, 0x74, V21, 0x1fb, 0x0, V206, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x0, 0x0]
Exit stack: [V5, 0x74, V21, 0x1fb, 0x0, V206, 0x0, 0x0]

================================

Block 0x2e5
[0x2e5:0x2fc]
---
Predecessors: [0x2dd]
Successors: [0x2fd, 0x379]
---
0x2e5 JUMPDEST
0x2e6 POP
0x2e7 PUSH1 0x1
0x2e9 ADD
0x2ea PUSH1 0x0
0x2ec POP
0x2ed SLOAD
0x2ee ADD
0x2ef SWAP1
0x2f0 POP
0x2f1 PUSH1 0x0
0x2f3 PUSH1 0x2
0x2f5 DUP3
0x2f6 MOD
0x2f7 EQ
0x2f8 ISZERO
0x2f9 PUSH2 0x379
0x2fc JUMPI
---
0x2e5: JUMPDEST 
0x2e7: V218 = 0x1
0x2e9: V219 = ADD 0x1 0x0
0x2ea: V220 = 0x0
0x2ed: V221 = S[0x1]
0x2ee: V222 = ADD V221 V206
0x2f1: V223 = 0x0
0x2f3: V224 = 0x2
0x2f6: V225 = MOD V222 0x2
0x2f7: V226 = EQ V225 0x0
0x2f8: V227 = ISZERO V226
0x2f9: V228 = 0x379
0x2fc: JUMPI 0x379 V227
---
Entry stack: [V5, 0x74, V21, 0x1fb, 0x0, V206, 0x0, 0x0]
Stack pops: 4
Stack additions: [V222]
Exit stack: [V5, 0x74, V21, 0x1fb, V222]

================================

Block 0x2fd
[0x2fd:0x30c]
---
Predecessors: [0x2e5]
Successors: [0x30d]
---
0x2fd PUSH1 0x0
0x2ff PUSH1 0x0
0x301 POP
0x302 PUSH1 0x0
0x304 PUSH1 0x2
0x306 DUP2
0x307 LT
0x308 ISZERO
0x309 PUSH2 0x2
0x30c JUMPI
---
0x2fd: V229 = 0x0
0x2ff: V230 = 0x0
0x302: V231 = 0x0
0x304: V232 = 0x2
0x307: V233 = LT 0x0 0x2
0x308: V234 = ISZERO 0x1
0x309: V235 = 0x2
0x30c: THROWI 0x0
---
Entry stack: [V5, 0x74, V21, 0x1fb, V222]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V5, 0x74, V21, 0x1fb, V222, 0x0, 0x0]

================================

Block 0x30d
[0x30d:0x314]
---
Predecessors: [0x2fd]
Successors: [0x315]
---
0x30d SWAP1
0x30e SWAP1
0x30f PUSH1 0x2
0x311 MUL
0x312 ADD
0x313 PUSH1 0x0
---
0x30f: V236 = 0x2
0x311: V237 = MUL 0x2 0x0
0x312: V238 = ADD 0x0 0x0
0x313: V239 = 0x0
---
Entry stack: [V5, 0x74, V21, 0x1fb, V222, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x0, 0x0]
Exit stack: [V5, 0x74, V21, 0x1fb, V222, 0x0, 0x0]

================================

Block 0x315
[0x315:0x378]
---
Predecessors: [0x30d]
Successors: [0x3f2]
---
0x315 JUMPDEST
0x316 POP
0x317 PUSH1 0x0
0x319 ADD
0x31a PUSH1 0x0
0x31c SWAP1
0x31d SLOAD
0x31e SWAP1
0x31f PUSH2 0x100
0x322 EXP
0x323 SWAP1
0x324 DIV
0x325 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x33a AND
0x33b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x350 AND
0x351 PUSH1 0x0
0x353 PUSH8 0x18fae27693b40000
0x35c PUSH1 0x40
0x35e MLOAD
0x35f DUP1
0x360 SWAP1
0x361 POP
0x362 PUSH1 0x0
0x364 PUSH1 0x40
0x366 MLOAD
0x367 DUP1
0x368 DUP4
0x369 SUB
0x36a DUP2
0x36b DUP6
0x36c DUP9
0x36d DUP9
0x36e CALL
0x36f SWAP4
0x370 POP
0x371 POP
0x372 POP
0x373 POP
0x374 POP
0x375 PUSH2 0x3f2
0x378 JUMP
---
0x315: JUMPDEST 
0x317: V240 = 0x0
0x319: V241 = ADD 0x0 0x0
0x31a: V242 = 0x0
0x31d: V243 = S[0x0]
0x31f: V244 = 0x100
0x322: V245 = EXP 0x100 0x0
0x324: V246 = DIV V243 0x1
0x325: V247 = 0xffffffffffffffffffffffffffffffffffffffff
0x33a: V248 = AND 0xffffffffffffffffffffffffffffffffffffffff V246
0x33b: V249 = 0xffffffffffffffffffffffffffffffffffffffff
0x350: V250 = AND 0xffffffffffffffffffffffffffffffffffffffff V248
0x351: V251 = 0x0
0x353: V252 = 0x18fae27693b40000
0x35c: V253 = 0x40
0x35e: V254 = M[0x40]
0x362: V255 = 0x0
0x364: V256 = 0x40
0x366: V257 = M[0x40]
0x369: V258 = SUB V254 V257
0x36e: V259 = CALL 0x0 V250 0x18fae27693b40000 V257 V258 V257 0x0
0x375: V260 = 0x3f2
0x378: JUMP 0x3f2
---
Entry stack: [V5, 0x74, V21, 0x1fb, V222, 0x0, 0x0]
Stack pops: 2
Stack additions: []
Exit stack: [V5, 0x74, V21, 0x1fb, V222]

================================

Block 0x379
[0x379:0x389]
---
Predecessors: [0x2e5]
Successors: [0x38a]
---
0x379 JUMPDEST
0x37a PUSH1 0x0
0x37c PUSH1 0x0
0x37e POP
0x37f PUSH1 0x1
0x381 PUSH1 0x2
0x383 DUP2
0x384 LT
0x385 ISZERO
0x386 PUSH2 0x2
0x389 JUMPI
---
0x379: JUMPDEST 
0x37a: V261 = 0x0
0x37c: V262 = 0x0
0x37f: V263 = 0x1
0x381: V264 = 0x2
0x384: V265 = LT 0x1 0x2
0x385: V266 = ISZERO 0x1
0x386: V267 = 0x2
0x389: THROWI 0x0
---
Entry stack: [V5, 0x74, V21, 0x1fb, V222]
Stack pops: 0
Stack additions: [0x0, 0x1]
Exit stack: [V5, 0x74, V21, 0x1fb, V222, 0x0, 0x1]

================================

Block 0x38a
[0x38a:0x391]
---
Predecessors: [0x379]
Successors: [0x392]
---
0x38a SWAP1
0x38b SWAP1
0x38c PUSH1 0x2
0x38e MUL
0x38f ADD
0x390 PUSH1 0x0
---
0x38c: V268 = 0x2
0x38e: V269 = MUL 0x2 0x1
0x38f: V270 = ADD 0x2 0x0
0x390: V271 = 0x0
---
Entry stack: [V5, 0x74, V21, 0x1fb, V222, 0x0, 0x1]
Stack pops: 2
Stack additions: [0x2, 0x0]
Exit stack: [V5, 0x74, V21, 0x1fb, V222, 0x2, 0x0]

================================

Block 0x392
[0x392:0x3f1]
---
Predecessors: [0x38a]
Successors: [0x3f2]
---
0x392 JUMPDEST
0x393 POP
0x394 PUSH1 0x0
0x396 ADD
0x397 PUSH1 0x0
0x399 SWAP1
0x39a SLOAD
0x39b SWAP1
0x39c PUSH2 0x100
0x39f EXP
0x3a0 SWAP1
0x3a1 DIV
0x3a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b7 AND
0x3b8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3cd AND
0x3ce PUSH1 0x0
0x3d0 PUSH8 0x18fae27693b40000
0x3d9 PUSH1 0x40
0x3db MLOAD
0x3dc DUP1
0x3dd SWAP1
0x3de POP
0x3df PUSH1 0x0
0x3e1 PUSH1 0x40
0x3e3 MLOAD
0x3e4 DUP1
0x3e5 DUP4
0x3e6 SUB
0x3e7 DUP2
0x3e8 DUP6
0x3e9 DUP9
0x3ea DUP9
0x3eb CALL
0x3ec SWAP4
0x3ed POP
0x3ee POP
0x3ef POP
0x3f0 POP
0x3f1 POP
---
0x392: JUMPDEST 
0x394: V272 = 0x0
0x396: V273 = ADD 0x0 0x2
0x397: V274 = 0x0
0x39a: V275 = S[0x2]
0x39c: V276 = 0x100
0x39f: V277 = EXP 0x100 0x0
0x3a1: V278 = DIV V275 0x1
0x3a2: V279 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b7: V280 = AND 0xffffffffffffffffffffffffffffffffffffffff V278
0x3b8: V281 = 0xffffffffffffffffffffffffffffffffffffffff
0x3cd: V282 = AND 0xffffffffffffffffffffffffffffffffffffffff V280
0x3ce: V283 = 0x0
0x3d0: V284 = 0x18fae27693b40000
0x3d9: V285 = 0x40
0x3db: V286 = M[0x40]
0x3df: V287 = 0x0
0x3e1: V288 = 0x40
0x3e3: V289 = M[0x40]
0x3e6: V290 = SUB V286 V289
0x3eb: V291 = CALL 0x0 V282 0x18fae27693b40000 V289 V290 V289 0x0
---
Entry stack: [V5, 0x74, V21, 0x1fb, V222, 0x2, 0x0]
Stack pops: 2
Stack additions: []
Exit stack: [V5, 0x74, V21, 0x1fb, V222]

================================

Block 0x3f2
[0x3f2:0x47e]
---
Predecessors: [0x315, 0x392]
Successors: [0x47f]
---
0x3f2 JUMPDEST
0x3f3 PUSH1 0x0
0x3f5 PUSH1 0x0
0x3f7 POP
0x3f8 PUSH1 0x0
0x3fa PUSH1 0x0
0x3fc DUP3
0x3fd ADD
0x3fe PUSH1 0x0
0x400 PUSH2 0x100
0x403 EXP
0x404 DUP2
0x405 SLOAD
0x406 SWAP1
0x407 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x41c MUL
0x41d NOT
0x41e AND
0x41f SWAP1
0x420 SSTORE
0x421 PUSH1 0x1
0x423 DUP3
0x424 ADD
0x425 PUSH1 0x0
0x427 POP
0x428 PUSH1 0x0
0x42a SWAP1
0x42b SSTORE
0x42c POP
0x42d PUSH1 0x2
0x42f ADD
0x430 PUSH1 0x0
0x432 PUSH1 0x0
0x434 DUP3
0x435 ADD
0x436 PUSH1 0x0
0x438 PUSH2 0x100
0x43b EXP
0x43c DUP2
0x43d SLOAD
0x43e SWAP1
0x43f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x454 MUL
0x455 NOT
0x456 AND
0x457 SWAP1
0x458 SSTORE
0x459 PUSH1 0x1
0x45b DUP3
0x45c ADD
0x45d PUSH1 0x0
0x45f POP
0x460 PUSH1 0x0
0x462 SWAP1
0x463 SSTORE
0x464 POP
0x465 POP
0x466 PUSH1 0x0
0x468 PUSH1 0x4
0x46a PUSH1 0x0
0x46c PUSH2 0x100
0x46f EXP
0x470 DUP2
0x471 SLOAD
0x472 DUP2
0x473 PUSH1 0xff
0x475 MUL
0x476 NOT
0x477 AND
0x478 SWAP1
0x479 DUP4
0x47a MUL
0x47b OR
0x47c SWAP1
0x47d SSTORE
0x47e POP
---
0x3f2: JUMPDEST 
0x3f3: V292 = 0x0
0x3f5: V293 = 0x0
0x3f8: V294 = 0x0
0x3fa: V295 = 0x0
0x3fd: V296 = ADD 0x0 0x0
0x3fe: V297 = 0x0
0x400: V298 = 0x100
0x403: V299 = EXP 0x100 0x0
0x405: V300 = S[0x0]
0x407: V301 = 0xffffffffffffffffffffffffffffffffffffffff
0x41c: V302 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x41d: V303 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x41e: V304 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V300
0x420: S[0x0] = V304
0x421: V305 = 0x1
0x424: V306 = ADD 0x0 0x1
0x425: V307 = 0x0
0x428: V308 = 0x0
0x42b: S[0x1] = 0x0
0x42d: V309 = 0x2
0x42f: V310 = ADD 0x2 0x0
0x430: V311 = 0x0
0x432: V312 = 0x0
0x435: V313 = ADD 0x2 0x0
0x436: V314 = 0x0
0x438: V315 = 0x100
0x43b: V316 = EXP 0x100 0x0
0x43d: V317 = S[0x2]
0x43f: V318 = 0xffffffffffffffffffffffffffffffffffffffff
0x454: V319 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x455: V320 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x456: V321 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V317
0x458: S[0x2] = V321
0x459: V322 = 0x1
0x45c: V323 = ADD 0x2 0x1
0x45d: V324 = 0x0
0x460: V325 = 0x0
0x463: S[0x3] = 0x0
0x466: V326 = 0x0
0x468: V327 = 0x4
0x46a: V328 = 0x0
0x46c: V329 = 0x100
0x46f: V330 = EXP 0x100 0x0
0x471: V331 = S[0x4]
0x473: V332 = 0xff
0x475: V333 = MUL 0xff 0x1
0x476: V334 = NOT 0xff
0x477: V335 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V331
0x47a: V336 = MUL 0x0 0x1
0x47b: V337 = OR 0x0 V335
0x47d: S[0x4] = V337
---
Entry stack: [V5, 0x74, V21, 0x1fb, V222]
Stack pops: 0
Stack additions: []
Exit stack: [V5, 0x74, V21, 0x1fb, V222]

================================

Block 0x47f
[0x47f:0x481]
---
Predecessors: [0x3f2]
Successors: [0x1fb]
---
0x47f JUMPDEST
0x480 POP
0x481 JUMP
---
0x47f: JUMPDEST 
0x481: JUMP 0x1fb
---
Entry stack: [V5, 0x74, V21, 0x1fb, V222]
Stack pops: 2
Stack additions: []
Exit stack: [V5, 0x74, V21]

================================

Function 0:
Public function signature: 0x679dffb4
Entry block: 0x4f
Exit block: 0x5c
Body: 0x4f, 0x5c, 0x200, 0x258, 0x25c, 0x2a7

Function 1:
Public function signature: 0x6898f82b
Entry block: 0x5e
Exit block: 0x74
Body: 0x5e, 0x74, 0x10e, 0x120, 0x124, 0x15f, 0x167, 0x1f4, 0x1fb, 0x1fc, 0x1fd, 0x2a9, 0x2bc, 0x2c4, 0x2dd, 0x2e5, 0x2fd, 0x30d, 0x315, 0x379, 0x38a, 0x392, 0x3f2, 0x47f

Function 2:
Public function signature: 0xf71d96cb
Entry block: 0x76
Exit block: 0x8c
Body: 0x76, 0x8c, 0xbf, 0xcf, 0xd7

Function 3:
Public fallback function
Entry block: 0x49
Exit block: 0x4d
Body: 0x49, 0x4d

