Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xd5]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xd5
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xd5
0xa: JUMPI 0xd5 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x467]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x356667f
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x467
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x356667f
0x20: V14 = EQ V12 0x356667f
0x21: V15 = 0x467
0x24: JUMPI 0x467 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x49a]
---
0x25 DUP1
0x26 PUSH4 0x6fdde03
0x2b EQ
0x2c PUSH2 0x49a
0x2f JUMPI
---
0x26: V16 = 0x6fdde03
0x2b: V17 = EQ 0x6fdde03 V12
0x2c: V18 = 0x49a
0x2f: JUMPI 0x49a V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x525]
---
0x30 DUP1
0x31 PUSH4 0x95ea7b3
0x36 EQ
0x37 PUSH2 0x525
0x3a JUMPI
---
0x31: V19 = 0x95ea7b3
0x36: V20 = EQ 0x95ea7b3 V12
0x37: V21 = 0x525
0x3a: JUMPI 0x525 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x55b]
---
0x3b DUP1
0x3c PUSH4 0xdcf4b8f
0x41 EQ
0x42 PUSH2 0x55b
0x45 JUMPI
---
0x3c: V22 = 0xdcf4b8f
0x41: V23 = EQ 0xdcf4b8f V12
0x42: V24 = 0x55b
0x45: JUMPI 0x55b V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x580]
---
0x46 DUP1
0x47 PUSH4 0x18160ddd
0x4c EQ
0x4d PUSH2 0x580
0x50 JUMPI
---
0x47: V25 = 0x18160ddd
0x4c: V26 = EQ 0x18160ddd V12
0x4d: V27 = 0x580
0x50: JUMPI 0x580 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x5a5]
---
0x51 DUP1
0x52 PUSH4 0x23b872dd
0x57 EQ
0x58 PUSH2 0x5a5
0x5b JUMPI
---
0x52: V28 = 0x23b872dd
0x57: V29 = EQ 0x23b872dd V12
0x58: V30 = 0x5a5
0x5b: JUMPI 0x5a5 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x5e1]
---
0x5c DUP1
0x5d PUSH4 0x313ce567
0x62 EQ
0x63 PUSH2 0x5e1
0x66 JUMPI
---
0x5d: V31 = 0x313ce567
0x62: V32 = EQ 0x313ce567 V12
0x63: V33 = 0x5e1
0x66: JUMPI 0x5e1 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x60a]
---
0x67 DUP1
0x68 PUSH4 0x41c0e1b5
0x6d EQ
0x6e PUSH2 0x60a
0x71 JUMPI
---
0x68: V34 = 0x41c0e1b5
0x6d: V35 = EQ 0x41c0e1b5 V12
0x6e: V36 = 0x60a
0x71: JUMPI 0x60a V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x61f]
---
0x72 DUP1
0x73 PUSH4 0x64acdb77
0x78 EQ
0x79 PUSH2 0x61f
0x7c JUMPI
---
0x73: V37 = 0x64acdb77
0x78: V38 = EQ 0x64acdb77 V12
0x79: V39 = 0x61f
0x7c: JUMPI 0x61f V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x634]
---
0x7d DUP1
0x7e PUSH4 0x70a08231
0x83 EQ
0x84 PUSH2 0x634
0x87 JUMPI
---
0x7e: V40 = 0x70a08231
0x83: V41 = EQ 0x70a08231 V12
0x84: V42 = 0x634
0x87: JUMPI 0x634 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x665]
---
0x88 DUP1
0x89 PUSH4 0x8f580996
0x8e EQ
0x8f PUSH2 0x665
0x92 JUMPI
---
0x89: V43 = 0x8f580996
0x8e: V44 = EQ 0x8f580996 V12
0x8f: V45 = 0x665
0x92: JUMPI 0x665 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x67a]
---
0x93 DUP1
0x94 PUSH4 0x95d89b41
0x99 EQ
0x9a PUSH2 0x67a
0x9d JUMPI
---
0x94: V46 = 0x95d89b41
0x99: V47 = EQ 0x95d89b41 V12
0x9a: V48 = 0x67a
0x9d: JUMPI 0x67a V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x705]
---
0x9e DUP1
0x9f PUSH4 0x98b01fe3
0xa4 EQ
0xa5 PUSH2 0x705
0xa8 JUMPI
---
0x9f: V49 = 0x98b01fe3
0xa4: V50 = EQ 0x98b01fe3 V12
0xa5: V51 = 0x705
0xa8: JUMPI 0x705 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x72a]
---
0xa9 DUP1
0xaa PUSH4 0xa9059cbb
0xaf EQ
0xb0 PUSH2 0x72a
0xb3 JUMPI
---
0xaa: V52 = 0xa9059cbb
0xaf: V53 = EQ 0xa9059cbb V12
0xb0: V54 = 0x72a
0xb3: JUMPI 0x72a V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x760]
---
0xb4 DUP1
0xb5 PUSH4 0xc59d4847
0xba EQ
0xbb PUSH2 0x760
0xbe JUMPI
---
0xb5: V55 = 0xc59d4847
0xba: V56 = EQ 0xc59d4847 V12
0xbb: V57 = 0x760
0xbe: JUMPI 0x760 V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x79f]
---
0xbf DUP1
0xc0 PUSH4 0xda040c0f
0xc5 EQ
0xc6 PUSH2 0x79f
0xc9 JUMPI
---
0xc0: V58 = 0xda040c0f
0xc5: V59 = EQ 0xda040c0f V12
0xc6: V60 = 0x79f
0xc9: JUMPI 0x79f V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5, 0x7c6]
---
0xca DUP1
0xcb PUSH4 0xdd62ed3e
0xd0 EQ
0xd1 PUSH2 0x7c6
0xd4 JUMPI
---
0xcb: V61 = 0xdd62ed3e
0xd0: V62 = EQ 0xdd62ed3e V12
0xd1: V63 = 0x7c6
0xd4: JUMPI 0x7c6 V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xd5]
---
Predecessors: [0x0, 0xca]
Successors: [0xd6]
---
0xd5 JUMPDEST
---
0xd5: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd6
[0xd6:0xf2]
---
Predecessors: [0xd5]
Successors: [0xf3, 0xf7]
---
0xd6 JUMPDEST
0xd7 PUSH1 0x0
0xd9 DUP1
0xda PUSH1 0x0
0xdc DUP1
0xdd PUSH1 0x0
0xdf PUSH1 0x14
0xe1 SWAP1
0xe2 SLOAD
0xe3 SWAP1
0xe4 PUSH2 0x100
0xe7 EXP
0xe8 SWAP1
0xe9 DIV
0xea PUSH1 0xff
0xec AND
0xed ISZERO
0xee ISZERO
0xef PUSH2 0xf7
0xf2 JUMPI
---
0xd6: JUMPDEST 
0xd7: V64 = 0x0
0xda: V65 = 0x0
0xdd: V66 = 0x0
0xdf: V67 = 0x14
0xe2: V68 = S[0x0]
0xe4: V69 = 0x100
0xe7: V70 = EXP 0x100 0x14
0xe9: V71 = DIV V68 0x10000000000000000000000000000000000000000
0xea: V72 = 0xff
0xec: V73 = AND 0xff V71
0xed: V74 = ISZERO V73
0xee: V75 = ISZERO V74
0xef: V76 = 0xf7
0xf2: JUMPI 0xf7 V75
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0]
Exit stack: [V12, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xf3
[0xf3:0xf6]
---
Predecessors: [0xd6]
Successors: []
---
0xf3 PUSH1 0x0
0xf5 DUP1
0xf6 REVERT
---
0xf3: V77 = 0x0
0xf6: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xf7
[0xf7:0xfe]
---
Predecessors: [0xd6]
Successors: [0xff, 0x103]
---
0xf7 JUMPDEST
0xf8 CALLVALUE
0xf9 ISZERO
0xfa ISZERO
0xfb PUSH2 0x103
0xfe JUMPI
---
0xf7: JUMPDEST 
0xf8: V78 = CALLVALUE
0xf9: V79 = ISZERO V78
0xfa: V80 = ISZERO V79
0xfb: V81 = 0x103
0xfe: JUMPI 0x103 V80
---
Entry stack: [V12, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xff
[0xff:0x102]
---
Predecessors: [0xf7]
Successors: [0x461]
---
0xff PUSH2 0x461
0x102 JUMP
---
0xff: V82 = 0x461
0x102: JUMP 0x461
---
Entry stack: [V12, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x103
[0x103:0x132]
---
Predecessors: [0xf7]
Successors: [0x133, 0x137]
---
0x103 JUMPDEST
0x104 PUSH1 0x0
0x106 SLOAD
0x107 PUSH1 0x1
0x109 PUSH1 0xa0
0x10b PUSH1 0x2
0x10d EXP
0x10e SUB
0x10f AND
0x110 CALLVALUE
0x111 DUP1
0x112 ISZERO
0x113 PUSH2 0x8fc
0x116 MUL
0x117 SWAP1
0x118 PUSH1 0x40
0x11a MLOAD
0x11b PUSH1 0x0
0x11d PUSH1 0x40
0x11f MLOAD
0x120 DUP1
0x121 DUP4
0x122 SUB
0x123 DUP2
0x124 DUP6
0x125 DUP9
0x126 DUP9
0x127 CALL
0x128 SWAP4
0x129 POP
0x12a POP
0x12b POP
0x12c POP
0x12d ISZERO
0x12e ISZERO
0x12f PUSH2 0x137
0x132 JUMPI
---
0x103: JUMPDEST 
0x104: V83 = 0x0
0x106: V84 = S[0x0]
0x107: V85 = 0x1
0x109: V86 = 0xa0
0x10b: V87 = 0x2
0x10d: V88 = EXP 0x2 0xa0
0x10e: V89 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10f: V90 = AND 0xffffffffffffffffffffffffffffffffffffffff V84
0x110: V91 = CALLVALUE
0x112: V92 = ISZERO V91
0x113: V93 = 0x8fc
0x116: V94 = MUL 0x8fc V92
0x118: V95 = 0x40
0x11a: V96 = M[0x40]
0x11b: V97 = 0x0
0x11d: V98 = 0x40
0x11f: V99 = M[0x40]
0x122: V100 = SUB V96 V99
0x127: V101 = CALL V94 V90 V91 V99 V100 V99 0x0
0x12d: V102 = ISZERO V101
0x12e: V103 = ISZERO V102
0x12f: V104 = 0x137
0x132: JUMPI 0x137 V103
---
Entry stack: [V12, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x133
[0x133:0x136]
---
Predecessors: [0x103]
Successors: []
---
0x133 PUSH1 0x0
0x135 DUP1
0x136 REVERT
---
0x133: V105 = 0x0
0x136: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x137
[0x137:0x157]
---
Predecessors: [0x103]
Successors: [0x158, 0x3fe]
---
0x137 JUMPDEST
0x138 PUSH1 0x3
0x13a DUP1
0x13b SLOAD
0x13c CALLVALUE
0x13d SWAP1
0x13e DUP2
0x13f ADD
0x140 SWAP1
0x141 SWAP2
0x142 SSTORE
0x143 PUSH2 0x2710
0x146 DUP2
0x147 MUL
0x148 SWAP5
0x149 POP
0x14a PUSH7 0x2386f26fc10000
0x152 SWAP1
0x153 LT
0x154 PUSH2 0x3fe
0x157 JUMPI
---
0x137: JUMPDEST 
0x138: V106 = 0x3
0x13b: V107 = S[0x3]
0x13c: V108 = CALLVALUE
0x13f: V109 = ADD V108 V107
0x142: S[0x3] = V109
0x143: V110 = 0x2710
0x147: V111 = MUL V108 0x2710
0x14a: V112 = 0x2386f26fc10000
0x153: V113 = LT V108 0x2386f26fc10000
0x154: V114 = 0x3fe
0x157: JUMPI 0x3fe V113
---
Entry stack: [V12, 0x0, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [V111, S2, S1, S0]
Exit stack: [V12, V111, 0x0, 0x0, 0x0]

================================

Block 0x158
[0x158:0x1b4]
---
Predecessors: [0x137]
Successors: [0x1b5, 0x1b9]
---
0x158 PUSH1 0x3
0x15a SLOAD
0x15b DUP5
0x15c ADD
0x15d SWAP4
0x15e POP
0x15f PUSH1 0x3
0x161 COINBASE
0x162 NUMBER
0x163 TIMESTAMP
0x164 PUSH1 0x0
0x166 PUSH1 0x40
0x168 MLOAD
0x169 PUSH1 0x20
0x16b ADD
0x16c MSTORE
0x16d PUSH1 0x40
0x16f MLOAD
0x170 PUSH1 0x1
0x172 PUSH1 0xa0
0x174 PUSH1 0x2
0x176 EXP
0x177 SUB
0x178 SWAP4
0x179 SWAP1
0x17a SWAP4
0x17b AND
0x17c PUSH13 0x1000000000000000000000000
0x18a MUL
0x18b DUP4
0x18c MSTORE
0x18d PUSH1 0x14
0x18f DUP4
0x190 ADD
0x191 SWAP2
0x192 SWAP1
0x193 SWAP2
0x194 MSTORE
0x195 PUSH1 0x34
0x197 DUP3
0x198 ADD
0x199 MSTORE
0x19a PUSH1 0x54
0x19c ADD
0x19d PUSH1 0x20
0x19f PUSH1 0x40
0x1a1 MLOAD
0x1a2 DUP1
0x1a3 DUP4
0x1a4 SUB
0x1a5 DUP2
0x1a6 PUSH1 0x0
0x1a8 DUP7
0x1a9 PUSH2 0x646e
0x1ac GAS
0x1ad SUB
0x1ae CALL
0x1af ISZERO
0x1b0 ISZERO
0x1b1 PUSH2 0x1b9
0x1b4 JUMPI
---
0x158: V115 = 0x3
0x15a: V116 = S[0x3]
0x15c: V117 = ADD V111 V116
0x15f: V118 = 0x3
0x161: V119 = COINBASE
0x162: V120 = NUMBER
0x163: V121 = TIMESTAMP
0x164: V122 = 0x0
0x166: V123 = 0x40
0x168: V124 = M[0x40]
0x169: V125 = 0x20
0x16b: V126 = ADD 0x20 V124
0x16c: M[V126] = 0x0
0x16d: V127 = 0x40
0x16f: V128 = M[0x40]
0x170: V129 = 0x1
0x172: V130 = 0xa0
0x174: V131 = 0x2
0x176: V132 = EXP 0x2 0xa0
0x177: V133 = SUB 0x10000000000000000000000000000000000000000 0x1
0x17b: V134 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x17c: V135 = 0x1000000000000000000000000
0x18a: V136 = MUL 0x1000000000000000000000000 V134
0x18c: M[V128] = V136
0x18d: V137 = 0x14
0x190: V138 = ADD V128 0x14
0x194: M[V138] = V120
0x195: V139 = 0x34
0x198: V140 = ADD V128 0x34
0x199: M[V140] = V121
0x19a: V141 = 0x54
0x19c: V142 = ADD 0x54 V128
0x19d: V143 = 0x20
0x19f: V144 = 0x40
0x1a1: V145 = M[0x40]
0x1a4: V146 = SUB V142 V145
0x1a6: V147 = 0x0
0x1a9: V148 = 0x646e
0x1ac: V149 = GAS
0x1ad: V150 = SUB V149 0x646e
0x1ae: V151 = CALL V150 0x3 0x0 V145 V146 V145 0x20
0x1af: V152 = ISZERO V151
0x1b0: V153 = ISZERO V152
0x1b1: V154 = 0x1b9
0x1b4: JUMPI 0x1b9 V153
---
Entry stack: [V12, V111, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [V117, S2, S1, S0, 0x3, V142]
Exit stack: [V12, V117, 0x0, 0x0, 0x0, 0x3, V142]

================================

Block 0x1b5
[0x1b5:0x1b8]
---
Predecessors: [0x158]
Successors: []
---
0x1b5 PUSH1 0x0
0x1b7 DUP1
0x1b8 REVERT
---
0x1b5: V155 = 0x0
0x1b8: REVERT 0x0 0x0
---
Entry stack: [V12, V117, 0x0, 0x0, 0x0, 0x3, V142]
Stack pops: 0
Stack additions: []
Exit stack: [V12, V117, 0x0, 0x0, 0x0, 0x3, V142]

================================

Block 0x1b9
[0x1b9:0x1d3]
---
Predecessors: [0x158]
Successors: [0x1d4]
---
0x1b9 JUMPDEST
0x1ba POP
0x1bb POP
0x1bc PUSH1 0x40
0x1be MLOAD
0x1bf MLOAD
0x1c0 PUSH13 0x1000000000000000000000000
0x1ce MUL
0x1cf SWAP3
0x1d0 POP
0x1d1 DUP3
0x1d2 PUSH1 0x0
---
0x1b9: JUMPDEST 
0x1bc: V156 = 0x40
0x1be: V157 = M[0x40]
0x1bf: V158 = M[V157]
0x1c0: V159 = 0x1000000000000000000000000
0x1ce: V160 = MUL 0x1000000000000000000000000 V158
0x1d2: V161 = 0x0
---
Entry stack: [V12, V117, 0x0, 0x0, 0x0, 0x3, V142]
Stack pops: 5
Stack additions: [V160, S3, S2, V160, 0x0]
Exit stack: [V12, V117, V160, 0x0, 0x0, V160, 0x0]

================================

Block 0x1d4
[0x1d4:0x20b]
---
Predecessors: [0x1b9]
Successors: [0x20c, 0x3fe]
---
0x1d4 JUMPDEST
0x1d5 BYTE
0x1d6 PUSH1 0xf8
0x1d8 PUSH1 0x2
0x1da EXP
0x1db MUL
0x1dc PUSH31 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x1fc NOT
0x1fd AND
0x1fe PUSH1 0x0
0x200 PUSH1 0xf8
0x202 PUSH1 0x2
0x204 EXP
0x205 MUL
0x206 EQ
0x207 ISZERO
0x208 PUSH2 0x3fe
0x20b JUMPI
---
0x1d4: JUMPDEST 
0x1d5: V162 = BYTE 0x0 V160
0x1d6: V163 = 0xf8
0x1d8: V164 = 0x2
0x1da: V165 = EXP 0x2 0xf8
0x1db: V166 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V162
0x1dc: V167 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x1fc: V168 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x1fd: V169 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 V166
0x1fe: V170 = 0x0
0x200: V171 = 0xf8
0x202: V172 = 0x2
0x204: V173 = EXP 0x2 0xf8
0x205: V174 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 0x0
0x206: V175 = EQ 0x0 V169
0x207: V176 = ISZERO V175
0x208: V177 = 0x3fe
0x20b: JUMPI 0x3fe V176
---
Entry stack: [V12, V117, V160, 0x0, 0x0, V160, 0x0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, V117, V160, 0x0, 0x0]

================================

Block 0x20c
[0x20c:0x20e]
---
Predecessors: [0x1d4]
Successors: [0x20f]
---
0x20c DUP3
0x20d PUSH1 0x1
---
0x20d: V178 = 0x1
---
Entry stack: [V12, V117, V160, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, S2, 0x1]
Exit stack: [V12, V117, V160, 0x0, 0x0, V160, 0x1]

================================

Block 0x20f
[0x20f:0x23e]
---
Predecessors: [0x20c]
Successors: [0x23f, 0x245]
---
0x20f JUMPDEST
0x210 BYTE
0x211 PUSH1 0xf8
0x213 PUSH1 0x2
0x215 EXP
0x216 MUL
0x217 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000
0x238 AND
0x239 ISZERO
0x23a ISZERO
0x23b PUSH2 0x245
0x23e JUMPI
---
0x20f: JUMPDEST 
0x210: V179 = BYTE 0x1 V160
0x211: V180 = 0xf8
0x213: V181 = 0x2
0x215: V182 = EXP 0x2 0xf8
0x216: V183 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V179
0x217: V184 = 0x8000000000000000000000000000000000000000000000000000000000000000
0x238: V185 = AND 0x8000000000000000000000000000000000000000000000000000000000000000 V183
0x239: V186 = ISZERO V185
0x23a: V187 = ISZERO V186
0x23b: V188 = 0x245
0x23e: JUMPI 0x245 V187
---
Entry stack: [V12, V117, V160, 0x0, 0x0, V160, 0x1]
Stack pops: 2
Stack additions: []
Exit stack: [V12, V117, V160, 0x0, 0x0]

================================

Block 0x23f
[0x23f:0x244]
---
Predecessors: [0x20f]
Successors: [0x248]
---
0x23f PUSH1 0x0
0x241 PUSH2 0x248
0x244 JUMP
---
0x23f: V189 = 0x0
0x241: V190 = 0x248
0x244: JUMP 0x248
---
Entry stack: [V12, V117, V160, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, V117, V160, 0x0, 0x0, 0x0]

================================

Block 0x245
[0x245:0x247]
---
Predecessors: [0x20f]
Successors: [0x248]
---
0x245 JUMPDEST
0x246 PUSH1 0x1
---
0x245: JUMPDEST 
0x246: V191 = 0x1
---
Entry stack: [V12, V117, V160, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V12, V117, V160, 0x0, 0x0, 0x1]

================================

Block 0x248
[0x248:0x24b]
---
Predecessors: [0x23f, 0x245]
Successors: [0x24c]
---
0x248 JUMPDEST
0x249 DUP4
0x24a PUSH1 0x1
---
0x248: JUMPDEST 
0x24a: V192 = 0x1
---
Entry stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S3, 0x1]
Exit stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, V160, 0x1]

================================

Block 0x24c
[0x24c:0x27b]
---
Predecessors: [0x248]
Successors: [0x27c, 0x282]
---
0x24c JUMPDEST
0x24d BYTE
0x24e PUSH1 0xf8
0x250 PUSH1 0x2
0x252 EXP
0x253 MUL
0x254 PUSH32 0x4000000000000000000000000000000000000000000000000000000000000000
0x275 AND
0x276 ISZERO
0x277 ISZERO
0x278 PUSH2 0x282
0x27b JUMPI
---
0x24c: JUMPDEST 
0x24d: V193 = BYTE 0x1 V160
0x24e: V194 = 0xf8
0x250: V195 = 0x2
0x252: V196 = EXP 0x2 0xf8
0x253: V197 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V193
0x254: V198 = 0x4000000000000000000000000000000000000000000000000000000000000000
0x275: V199 = AND 0x4000000000000000000000000000000000000000000000000000000000000000 V197
0x276: V200 = ISZERO V199
0x277: V201 = ISZERO V200
0x278: V202 = 0x282
0x27b: JUMPI 0x282 V201
---
Entry stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, V160, 0x1]
Stack pops: 2
Stack additions: []
Exit stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}]

================================

Block 0x27c
[0x27c:0x281]
---
Predecessors: [0x24c]
Successors: [0x285]
---
0x27c PUSH1 0x0
0x27e PUSH2 0x285
0x281 JUMP
---
0x27c: V203 = 0x0
0x27e: V204 = 0x285
0x281: JUMP 0x285
---
Entry stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, 0x0]

================================

Block 0x282
[0x282:0x284]
---
Predecessors: [0x24c]
Successors: [0x285]
---
0x282 JUMPDEST
0x283 PUSH1 0x1
---
0x282: JUMPDEST 
0x283: V205 = 0x1
---
Entry stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, 0x1]

================================

Block 0x285
[0x285:0x288]
---
Predecessors: [0x27c, 0x282]
Successors: [0x289]
---
0x285 JUMPDEST
0x286 DUP5
0x287 PUSH1 0x1
---
0x285: JUMPDEST 
0x287: V206 = 0x1
---
Entry stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S4, 0x1]
Exit stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, V160, 0x1]

================================

Block 0x289
[0x289:0x2b8]
---
Predecessors: [0x285]
Successors: [0x2b9, 0x2bf]
---
0x289 JUMPDEST
0x28a BYTE
0x28b PUSH1 0xf8
0x28d PUSH1 0x2
0x28f EXP
0x290 MUL
0x291 PUSH32 0x2000000000000000000000000000000000000000000000000000000000000000
0x2b2 AND
0x2b3 ISZERO
0x2b4 ISZERO
0x2b5 PUSH2 0x2bf
0x2b8 JUMPI
---
0x289: JUMPDEST 
0x28a: V207 = BYTE 0x1 V160
0x28b: V208 = 0xf8
0x28d: V209 = 0x2
0x28f: V210 = EXP 0x2 0xf8
0x290: V211 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V207
0x291: V212 = 0x2000000000000000000000000000000000000000000000000000000000000000
0x2b2: V213 = AND 0x2000000000000000000000000000000000000000000000000000000000000000 V211
0x2b3: V214 = ISZERO V213
0x2b4: V215 = ISZERO V214
0x2b5: V216 = 0x2bf
0x2b8: JUMPI 0x2bf V215
---
Entry stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, V160, 0x1]
Stack pops: 2
Stack additions: []
Exit stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}]

================================

Block 0x2b9
[0x2b9:0x2be]
---
Predecessors: [0x289]
Successors: [0x2c2]
---
0x2b9 PUSH1 0x0
0x2bb PUSH2 0x2c2
0x2be JUMP
---
0x2b9: V217 = 0x0
0x2bb: V218 = 0x2c2
0x2be: JUMP 0x2c2
---
Entry stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, 0x0]

================================

Block 0x2bf
[0x2bf:0x2c1]
---
Predecessors: [0x289]
Successors: [0x2c2]
---
0x2bf JUMPDEST
0x2c0 PUSH1 0x1
---
0x2bf: JUMPDEST 
0x2c0: V219 = 0x1
---
Entry stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, 0x1]

================================

Block 0x2c2
[0x2c2:0x2c5]
---
Predecessors: [0x2b9, 0x2bf]
Successors: [0x2c6]
---
0x2c2 JUMPDEST
0x2c3 DUP6
0x2c4 PUSH1 0x1
---
0x2c2: JUMPDEST 
0x2c4: V220 = 0x1
---
Entry stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, S5, 0x1]
Exit stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, V160, 0x1]

================================

Block 0x2c6
[0x2c6:0x2f5]
---
Predecessors: [0x2c2]
Successors: [0x2f6, 0x2fc]
---
0x2c6 JUMPDEST
0x2c7 BYTE
0x2c8 PUSH1 0xf8
0x2ca PUSH1 0x2
0x2cc EXP
0x2cd MUL
0x2ce PUSH32 0x1000000000000000000000000000000000000000000000000000000000000000
0x2ef AND
0x2f0 ISZERO
0x2f1 ISZERO
0x2f2 PUSH2 0x2fc
0x2f5 JUMPI
---
0x2c6: JUMPDEST 
0x2c7: V221 = BYTE 0x1 V160
0x2c8: V222 = 0xf8
0x2ca: V223 = 0x2
0x2cc: V224 = EXP 0x2 0xf8
0x2cd: V225 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V221
0x2ce: V226 = 0x1000000000000000000000000000000000000000000000000000000000000000
0x2ef: V227 = AND 0x1000000000000000000000000000000000000000000000000000000000000000 V225
0x2f0: V228 = ISZERO V227
0x2f1: V229 = ISZERO V228
0x2f2: V230 = 0x2fc
0x2f5: JUMPI 0x2fc V229
---
Entry stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, V160, 0x1]
Stack pops: 2
Stack additions: []
Exit stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}]

================================

Block 0x2f6
[0x2f6:0x2fb]
---
Predecessors: [0x2c6]
Successors: [0x2ff]
---
0x2f6 PUSH1 0x0
0x2f8 PUSH2 0x2ff
0x2fb JUMP
---
0x2f6: V231 = 0x0
0x2f8: V232 = 0x2ff
0x2fb: JUMP 0x2ff
---
Entry stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, 0x0]

================================

Block 0x2fc
[0x2fc:0x2fe]
---
Predecessors: [0x2c6]
Successors: [0x2ff]
---
0x2fc JUMPDEST
0x2fd PUSH1 0x1
---
0x2fc: JUMPDEST 
0x2fd: V233 = 0x1
---
Entry stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, 0x1]

================================

Block 0x2ff
[0x2ff:0x302]
---
Predecessors: [0x2f6, 0x2fc]
Successors: [0x303]
---
0x2ff JUMPDEST
0x300 DUP7
0x301 PUSH1 0x1
---
0x2ff: JUMPDEST 
0x301: V234 = 0x1
---
Entry stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, S6, 0x1]
Exit stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, V160, 0x1]

================================

Block 0x303
[0x303:0x332]
---
Predecessors: [0x2ff]
Successors: [0x333, 0x339]
---
0x303 JUMPDEST
0x304 BYTE
0x305 PUSH1 0xf8
0x307 PUSH1 0x2
0x309 EXP
0x30a MUL
0x30b PUSH32 0x800000000000000000000000000000000000000000000000000000000000000
0x32c AND
0x32d ISZERO
0x32e ISZERO
0x32f PUSH2 0x339
0x332 JUMPI
---
0x303: JUMPDEST 
0x304: V235 = BYTE 0x1 V160
0x305: V236 = 0xf8
0x307: V237 = 0x2
0x309: V238 = EXP 0x2 0xf8
0x30a: V239 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V235
0x30b: V240 = 0x800000000000000000000000000000000000000000000000000000000000000
0x32c: V241 = AND 0x800000000000000000000000000000000000000000000000000000000000000 V239
0x32d: V242 = ISZERO V241
0x32e: V243 = ISZERO V242
0x32f: V244 = 0x339
0x332: JUMPI 0x339 V243
---
Entry stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, V160, 0x1]
Stack pops: 2
Stack additions: []
Exit stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}]

================================

Block 0x333
[0x333:0x338]
---
Predecessors: [0x303]
Successors: [0x33c]
---
0x333 PUSH1 0x0
0x335 PUSH2 0x33c
0x338 JUMP
---
0x333: V245 = 0x0
0x335: V246 = 0x33c
0x338: JUMP 0x33c
---
Entry stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, 0x0]

================================

Block 0x339
[0x339:0x33b]
---
Predecessors: [0x303]
Successors: [0x33c]
---
0x339 JUMPDEST
0x33a PUSH1 0x1
---
0x339: JUMPDEST 
0x33a: V247 = 0x1
---
Entry stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, 0x1]

================================

Block 0x33c
[0x33c:0x33f]
---
Predecessors: [0x333, 0x339]
Successors: [0x340]
---
0x33c JUMPDEST
0x33d DUP8
0x33e PUSH1 0x1
---
0x33c: JUMPDEST 
0x33e: V248 = 0x1
---
Entry stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0, S7, 0x1]
Exit stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, V160, 0x1]

================================

Block 0x340
[0x340:0x36f]
---
Predecessors: [0x33c]
Successors: [0x370, 0x376]
---
0x340 JUMPDEST
0x341 BYTE
0x342 PUSH1 0xf8
0x344 PUSH1 0x2
0x346 EXP
0x347 MUL
0x348 PUSH32 0x400000000000000000000000000000000000000000000000000000000000000
0x369 AND
0x36a ISZERO
0x36b ISZERO
0x36c PUSH2 0x376
0x36f JUMPI
---
0x340: JUMPDEST 
0x341: V249 = BYTE 0x1 V160
0x342: V250 = 0xf8
0x344: V251 = 0x2
0x346: V252 = EXP 0x2 0xf8
0x347: V253 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V249
0x348: V254 = 0x400000000000000000000000000000000000000000000000000000000000000
0x369: V255 = AND 0x400000000000000000000000000000000000000000000000000000000000000 V253
0x36a: V256 = ISZERO V255
0x36b: V257 = ISZERO V256
0x36c: V258 = 0x376
0x36f: JUMPI 0x376 V257
---
Entry stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, V160, 0x1]
Stack pops: 2
Stack additions: []
Exit stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}]

================================

Block 0x370
[0x370:0x375]
---
Predecessors: [0x340]
Successors: [0x379]
---
0x370 PUSH1 0x0
0x372 PUSH2 0x379
0x375 JUMP
---
0x370: V259 = 0x0
0x372: V260 = 0x379
0x375: JUMP 0x379
---
Entry stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, 0x0]

================================

Block 0x376
[0x376:0x378]
---
Predecessors: [0x340]
Successors: [0x379]
---
0x376 JUMPDEST
0x377 PUSH1 0x1
---
0x376: JUMPDEST 
0x377: V261 = 0x1
---
Entry stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, 0x1]

================================

Block 0x379
[0x379:0x37c]
---
Predecessors: [0x370, 0x376]
Successors: [0x37d]
---
0x379 JUMPDEST
0x37a DUP9
0x37b PUSH1 0x1
---
0x379: JUMPDEST 
0x37b: V262 = 0x1
---
Entry stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S1, S0, S8, 0x1]
Exit stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, V160, 0x1]

================================

Block 0x37d
[0x37d:0x3ac]
---
Predecessors: [0x379]
Successors: [0x3ad, 0x3b3]
---
0x37d JUMPDEST
0x37e BYTE
0x37f PUSH1 0xf8
0x381 PUSH1 0x2
0x383 EXP
0x384 MUL
0x385 PUSH32 0x200000000000000000000000000000000000000000000000000000000000000
0x3a6 AND
0x3a7 ISZERO
0x3a8 ISZERO
0x3a9 PUSH2 0x3b3
0x3ac JUMPI
---
0x37d: JUMPDEST 
0x37e: V263 = BYTE 0x1 V160
0x37f: V264 = 0xf8
0x381: V265 = 0x2
0x383: V266 = EXP 0x2 0xf8
0x384: V267 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V263
0x385: V268 = 0x200000000000000000000000000000000000000000000000000000000000000
0x3a6: V269 = AND 0x200000000000000000000000000000000000000000000000000000000000000 V267
0x3a7: V270 = ISZERO V269
0x3a8: V271 = ISZERO V270
0x3a9: V272 = 0x3b3
0x3ac: JUMPI 0x3b3 V271
---
Entry stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, V160, 0x1]
Stack pops: 2
Stack additions: []
Exit stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}]

================================

Block 0x3ad
[0x3ad:0x3b2]
---
Predecessors: [0x37d]
Successors: [0x3b6]
---
0x3ad PUSH1 0x0
0x3af PUSH2 0x3b6
0x3b2 JUMP
---
0x3ad: V273 = 0x0
0x3af: V274 = 0x3b6
0x3b2: JUMP 0x3b6
---
Entry stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, 0x0]

================================

Block 0x3b3
[0x3b3:0x3b5]
---
Predecessors: [0x37d]
Successors: [0x3b6]
---
0x3b3 JUMPDEST
0x3b4 PUSH1 0x1
---
0x3b3: JUMPDEST 
0x3b4: V275 = 0x1
---
Entry stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, 0x1]

================================

Block 0x3b6
[0x3b6:0x3b9]
---
Predecessors: [0x3ad, 0x3b3]
Successors: [0x3ba]
---
0x3b6 JUMPDEST
0x3b7 DUP10
0x3b8 PUSH1 0x1
---
0x3b6: JUMPDEST 
0x3b8: V276 = 0x1
---
Entry stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, S9, 0x1]
Exit stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, V160, 0x1]

================================

Block 0x3ba
[0x3ba:0x3ca]
---
Predecessors: [0x3b6]
Successors: [0x3cb, 0x3d1]
---
0x3ba JUMPDEST
0x3bb BYTE
0x3bc PUSH1 0xf8
0x3be PUSH1 0x2
0x3c0 EXP
0x3c1 SWAP1
0x3c2 DUP2
0x3c3 MUL
0x3c4 AND
0x3c5 ISZERO
0x3c6 ISZERO
0x3c7 PUSH2 0x3d1
0x3ca JUMPI
---
0x3ba: JUMPDEST 
0x3bb: V277 = BYTE 0x1 V160
0x3bc: V278 = 0xf8
0x3be: V279 = 0x2
0x3c0: V280 = EXP 0x2 0xf8
0x3c3: V281 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V277
0x3c4: V282 = AND V281 0x100000000000000000000000000000000000000000000000000000000000000
0x3c5: V283 = ISZERO V282
0x3c6: V284 = ISZERO V283
0x3c7: V285 = 0x3d1
0x3ca: JUMPI 0x3d1 V284
---
Entry stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, V160, 0x1]
Stack pops: 2
Stack additions: []
Exit stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}]

================================

Block 0x3cb
[0x3cb:0x3d0]
---
Predecessors: [0x3ba]
Successors: [0x3d4]
---
0x3cb PUSH1 0x0
0x3cd PUSH2 0x3d4
0x3d0 JUMP
---
0x3cb: V286 = 0x0
0x3cd: V287 = 0x3d4
0x3d0: JUMP 0x3d4
---
Entry stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, 0x0]

================================

Block 0x3d1
[0x3d1:0x3d3]
---
Predecessors: [0x3ba]
Successors: [0x3d4]
---
0x3d1 JUMPDEST
0x3d2 PUSH1 0x1
---
0x3d1: JUMPDEST 
0x3d2: V288 = 0x1
---
Entry stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, 0x1]

================================

Block 0x3d4
[0x3d4:0x3fd]
---
Predecessors: [0x3cb, 0x3d1]
Successors: [0x3fe]
---
0x3d4 JUMPDEST
0x3d5 ADD
0x3d6 ADD
0x3d7 ADD
0x3d8 ADD
0x3d9 ADD
0x3da ADD
0x3db ADD
0x3dc SWAP2
0x3dd POP
0x3de DUP2
0x3df PUSH1 0xff
0x3e1 AND
0x3e2 CALLVALUE
0x3e3 PUSH1 0x64
0x3e5 MUL
0x3e6 MUL
0x3e7 SWAP1
0x3e8 POP
0x3e9 DUP1
0x3ea DUP5
0x3eb ADD
0x3ec SWAP4
0x3ed POP
0x3ee DUP1
0x3ef PUSH1 0x4
0x3f1 PUSH1 0x0
0x3f3 DUP3
0x3f4 DUP3
0x3f5 SLOAD
0x3f6 ADD
0x3f7 SWAP3
0x3f8 POP
0x3f9 POP
0x3fa DUP2
0x3fb SWAP1
0x3fc SSTORE
0x3fd POP
---
0x3d4: JUMPDEST 
0x3d5: V289 = ADD {0x0, 0x1} {0x0, 0x1}
0x3d6: V290 = ADD V289 {0x0, 0x1}
0x3d7: V291 = ADD V290 {0x0, 0x1}
0x3d8: V292 = ADD V291 {0x0, 0x1}
0x3d9: V293 = ADD V292 {0x0, 0x1}
0x3da: V294 = ADD V293 {0x0, 0x1}
0x3db: V295 = ADD V294 {0x0, 0x1}
0x3df: V296 = 0xff
0x3e1: V297 = AND 0xff V295
0x3e2: V298 = CALLVALUE
0x3e3: V299 = 0x64
0x3e5: V300 = MUL 0x64 V298
0x3e6: V301 = MUL V300 V297
0x3eb: V302 = ADD V117 V301
0x3ef: V303 = 0x4
0x3f1: V304 = 0x0
0x3f5: V305 = S[0x4]
0x3f6: V306 = ADD V305 V301
0x3fc: S[0x4] = V306
---
Entry stack: [V12, V117, V160, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}]
Stack pops: 12
Stack additions: [V302, S10, V295, V301]
Exit stack: [V12, V302, V160, V295, V301]

================================

Block 0x3fe
[0x3fe:0x3fe]
---
Predecessors: [0x137, 0x1d4, 0x3d4]
Successors: [0x3ff]
---
0x3fe JUMPDEST
---
0x3fe: JUMPDEST 
---
Entry stack: [V12, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S3, S2, S1, S0]

================================

Block 0x3ff
[0x3ff:0x460]
---
Predecessors: [0x3fe]
Successors: [0x461]
---
0x3ff JUMPDEST
0x400 PUSH1 0x5
0x402 DUP1
0x403 SLOAD
0x404 DUP6
0x405 ADD
0x406 SWAP1
0x407 SSTORE
0x408 PUSH1 0x1
0x40a PUSH1 0xa0
0x40c PUSH1 0x2
0x40e EXP
0x40f SUB
0x410 CALLER
0x411 DUP2
0x412 AND
0x413 PUSH1 0x0
0x415 DUP2
0x416 DUP2
0x417 MSTORE
0x418 PUSH1 0x1
0x41a PUSH1 0x20
0x41c MSTORE
0x41d PUSH1 0x40
0x41f SWAP1
0x420 DUP2
0x421 SWAP1
0x422 SHA3
0x423 DUP1
0x424 SLOAD
0x425 DUP9
0x426 ADD
0x427 SWAP1
0x428 SSTORE
0x429 SWAP1
0x42a SWAP2
0x42b ADDRESS
0x42c AND
0x42d SWAP1
0x42e PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x44f SWAP1
0x450 DUP8
0x451 SWAP1
0x452 MLOAD
0x453 SWAP1
0x454 DUP2
0x455 MSTORE
0x456 PUSH1 0x20
0x458 ADD
0x459 PUSH1 0x40
0x45b MLOAD
0x45c DUP1
0x45d SWAP2
0x45e SUB
0x45f SWAP1
0x460 LOG3
---
0x3ff: JUMPDEST 
0x400: V307 = 0x5
0x403: V308 = S[0x5]
0x405: V309 = ADD S3 V308
0x407: S[0x5] = V309
0x408: V310 = 0x1
0x40a: V311 = 0xa0
0x40c: V312 = 0x2
0x40e: V313 = EXP 0x2 0xa0
0x40f: V314 = SUB 0x10000000000000000000000000000000000000000 0x1
0x410: V315 = CALLER
0x412: V316 = AND 0xffffffffffffffffffffffffffffffffffffffff V315
0x413: V317 = 0x0
0x417: M[0x0] = V316
0x418: V318 = 0x1
0x41a: V319 = 0x20
0x41c: M[0x20] = 0x1
0x41d: V320 = 0x40
0x422: V321 = SHA3 0x0 0x40
0x424: V322 = S[V321]
0x426: V323 = ADD S3 V322
0x428: S[V321] = V323
0x42b: V324 = ADDRESS
0x42c: V325 = AND V324 0xffffffffffffffffffffffffffffffffffffffff
0x42e: V326 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x452: V327 = M[0x40]
0x455: M[V327] = S3
0x456: V328 = 0x20
0x458: V329 = ADD 0x20 V327
0x459: V330 = 0x40
0x45b: V331 = M[0x40]
0x45e: V332 = SUB V329 V331
0x460: LOG V331 V332 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V325 V316
---
Entry stack: [V12, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, S3, S2, S1, S0]

================================

Block 0x461
[0x461:0x466]
---
Predecessors: [0xff, 0x3ff]
Successors: []
---
0x461 JUMPDEST
0x462 POP
0x463 POP
0x464 POP
0x465 POP
0x466 STOP
---
0x461: JUMPDEST 
0x466: STOP 
---
Entry stack: [V12, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12]

================================

Block 0x467
[0x467:0x46d]
---
Predecessors: [0xb]
Successors: [0x46e, 0x472]
---
0x467 JUMPDEST
0x468 CALLVALUE
0x469 ISZERO
0x46a PUSH2 0x472
0x46d JUMPI
---
0x467: JUMPDEST 
0x468: V333 = CALLVALUE
0x469: V334 = ISZERO V333
0x46a: V335 = 0x472
0x46d: JUMPI 0x472 V334
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x46e
[0x46e:0x471]
---
Predecessors: [0x467]
Successors: []
---
0x46e PUSH1 0x0
0x470 DUP1
0x471 REVERT
---
0x46e: V336 = 0x0
0x471: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x472
[0x472:0x485]
---
Predecessors: [0x467]
Successors: [0x7fd]
---
0x472 JUMPDEST
0x473 PUSH2 0x486
0x476 PUSH1 0x1
0x478 PUSH1 0xa0
0x47a PUSH1 0x2
0x47c EXP
0x47d SUB
0x47e PUSH1 0x4
0x480 CALLDATALOAD
0x481 AND
0x482 PUSH2 0x7fd
0x485 JUMP
---
0x472: JUMPDEST 
0x473: V337 = 0x486
0x476: V338 = 0x1
0x478: V339 = 0xa0
0x47a: V340 = 0x2
0x47c: V341 = EXP 0x2 0xa0
0x47d: V342 = SUB 0x10000000000000000000000000000000000000000 0x1
0x47e: V343 = 0x4
0x480: V344 = CALLDATALOAD 0x4
0x481: V345 = AND V344 0xffffffffffffffffffffffffffffffffffffffff
0x482: V346 = 0x7fd
0x485: JUMP 0x7fd
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x486, V345]
Exit stack: [V12, 0x486, V345]

================================

Block 0x486
[0x486:0x499]
---
Predecessors: [0x915, 0xa04, 0xb3c, 0xd43, 0xd7a]
Successors: []
---
0x486 JUMPDEST
0x487 PUSH1 0x40
0x489 MLOAD
0x48a SWAP1
0x48b ISZERO
0x48c ISZERO
0x48d DUP2
0x48e MSTORE
0x48f PUSH1 0x20
0x491 ADD
0x492 PUSH1 0x40
0x494 MLOAD
0x495 DUP1
0x496 SWAP2
0x497 SUB
0x498 SWAP1
0x499 RETURN
---
0x486: JUMPDEST 
0x487: V347 = 0x40
0x489: V348 = M[0x40]
0x48b: V349 = ISZERO S0
0x48c: V350 = ISZERO V349
0x48e: M[V348] = V350
0x48f: V351 = 0x20
0x491: V352 = ADD 0x20 V348
0x492: V353 = 0x40
0x494: V354 = M[0x40]
0x497: V355 = SUB V352 V354
0x499: RETURN V354 V355
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x49a
[0x49a:0x4a0]
---
Predecessors: [0x25]
Successors: [0x4a1, 0x4a5]
---
0x49a JUMPDEST
0x49b CALLVALUE
0x49c ISZERO
0x49d PUSH2 0x4a5
0x4a0 JUMPI
---
0x49a: JUMPDEST 
0x49b: V356 = CALLVALUE
0x49c: V357 = ISZERO V356
0x49d: V358 = 0x4a5
0x4a0: JUMPI 0x4a5 V357
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4a1
[0x4a1:0x4a4]
---
Predecessors: [0x49a]
Successors: []
---
0x4a1 PUSH1 0x0
0x4a3 DUP1
0x4a4 REVERT
---
0x4a1: V359 = 0x0
0x4a4: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4a5
[0x4a5:0x4ac]
---
Predecessors: [0x49a]
Successors: [0x91c]
---
0x4a5 JUMPDEST
0x4a6 PUSH2 0x4ad
0x4a9 PUSH2 0x91c
0x4ac JUMP
---
0x4a5: JUMPDEST 
0x4a6: V360 = 0x4ad
0x4a9: V361 = 0x91c
0x4ac: JUMP 0x91c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x4ad]
Exit stack: [V12, 0x4ad]

================================

Block 0x4ad
[0x4ad:0x4d0]
---
Predecessors: [0x95b, 0xc63]
Successors: [0x4d1]
---
0x4ad JUMPDEST
0x4ae PUSH1 0x40
0x4b0 MLOAD
0x4b1 PUSH1 0x20
0x4b3 DUP1
0x4b4 DUP3
0x4b5 MSTORE
0x4b6 DUP2
0x4b7 SWAP1
0x4b8 DUP2
0x4b9 ADD
0x4ba DUP4
0x4bb DUP2
0x4bc DUP2
0x4bd MLOAD
0x4be DUP2
0x4bf MSTORE
0x4c0 PUSH1 0x20
0x4c2 ADD
0x4c3 SWAP2
0x4c4 POP
0x4c5 DUP1
0x4c6 MLOAD
0x4c7 SWAP1
0x4c8 PUSH1 0x20
0x4ca ADD
0x4cb SWAP1
0x4cc DUP1
0x4cd DUP4
0x4ce DUP4
0x4cf PUSH1 0x0
---
0x4ad: JUMPDEST 
0x4ae: V362 = 0x40
0x4b0: V363 = M[0x40]
0x4b1: V364 = 0x20
0x4b5: M[V363] = 0x20
0x4b9: V365 = ADD V363 0x20
0x4bd: V366 = M[S0]
0x4bf: M[V365] = V366
0x4c0: V367 = 0x20
0x4c2: V368 = ADD 0x20 V365
0x4c6: V369 = M[S0]
0x4c8: V370 = 0x20
0x4ca: V371 = ADD 0x20 S0
0x4cf: V372 = 0x0
---
Entry stack: [V12, S0]
Stack pops: 1
Stack additions: [S0, V363, V363, V368, V371, V369, V369, V368, V371, 0x0]
Exit stack: [V12, S0, V363, V363, V368, V371, V369, V369, V368, V371, 0x0]

================================

Block 0x4d1
[0x4d1:0x4d9]
---
Predecessors: [0x4ad, 0x4e2, 0x6c2]
Successors: [0x4da, 0x4ea]
---
0x4d1 JUMPDEST
0x4d2 DUP4
0x4d3 DUP2
0x4d4 LT
0x4d5 ISZERO
0x4d6 PUSH2 0x4ea
0x4d9 JUMPI
---
0x4d1: JUMPDEST 
0x4d4: V373 = LT S0 S3
0x4d5: V374 = ISZERO V373
0x4d6: V375 = 0x4ea
0x4d9: JUMPI 0x4ea V374
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x4da
[0x4da:0x4e1]
---
Predecessors: [0x4d1]
Successors: [0x4e2]
---
0x4da DUP1
0x4db DUP3
0x4dc ADD
0x4dd MLOAD
0x4de DUP2
0x4df DUP5
0x4e0 ADD
0x4e1 MSTORE
---
0x4dc: V376 = ADD S1 S0
0x4dd: V377 = M[V376]
0x4e0: V378 = ADD S2 S0
0x4e1: M[V378] = V377
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x4e2
[0x4e2:0x4e9]
---
Predecessors: [0x4da]
Successors: [0x4d1]
---
0x4e2 JUMPDEST
0x4e3 PUSH1 0x20
0x4e5 ADD
0x4e6 PUSH2 0x4d1
0x4e9 JUMP
---
0x4e2: JUMPDEST 
0x4e3: V379 = 0x20
0x4e5: V380 = ADD 0x20 S0
0x4e6: V381 = 0x4d1
0x4e9: JUMP 0x4d1
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V380]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, V380]

================================

Block 0x4ea
[0x4ea:0x4fd]
---
Predecessors: [0x4d1, 0x6b1]
Successors: [0x4fe, 0x517]
---
0x4ea JUMPDEST
0x4eb POP
0x4ec POP
0x4ed POP
0x4ee POP
0x4ef SWAP1
0x4f0 POP
0x4f1 SWAP1
0x4f2 DUP2
0x4f3 ADD
0x4f4 SWAP1
0x4f5 PUSH1 0x1f
0x4f7 AND
0x4f8 DUP1
0x4f9 ISZERO
0x4fa PUSH2 0x517
0x4fd JUMPI
---
0x4ea: JUMPDEST 
0x4f3: V382 = ADD S4 S6
0x4f5: V383 = 0x1f
0x4f7: V384 = AND 0x1f S4
0x4f9: V385 = ISZERO V384
0x4fa: V386 = 0x517
0x4fd: JUMPI 0x517 V385
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [V382, V384]
Exit stack: [V12, S9, S8, S7, V382, V384]

================================

Block 0x4fe
[0x4fe:0x516]
---
Predecessors: [0x4ea]
Successors: [0x517]
---
0x4fe DUP1
0x4ff DUP3
0x500 SUB
0x501 DUP1
0x502 MLOAD
0x503 PUSH1 0x1
0x505 DUP4
0x506 PUSH1 0x20
0x508 SUB
0x509 PUSH2 0x100
0x50c EXP
0x50d SUB
0x50e NOT
0x50f AND
0x510 DUP2
0x511 MSTORE
0x512 PUSH1 0x20
0x514 ADD
0x515 SWAP2
0x516 POP
---
0x500: V387 = SUB V382 V384
0x502: V388 = M[V387]
0x503: V389 = 0x1
0x506: V390 = 0x20
0x508: V391 = SUB 0x20 V384
0x509: V392 = 0x100
0x50c: V393 = EXP 0x100 V391
0x50d: V394 = SUB V393 0x1
0x50e: V395 = NOT V394
0x50f: V396 = AND V395 V388
0x511: M[V387] = V396
0x512: V397 = 0x20
0x514: V398 = ADD 0x20 V387
---
Entry stack: [V12, S4, S3, S2, V382, V384]
Stack pops: 2
Stack additions: [V398, S0]
Exit stack: [V12, S4, S3, S2, V398, V384]

================================

Block 0x517
[0x517:0x524]
---
Predecessors: [0x4ea, 0x4fe, 0x6ca]
Successors: []
---
0x517 JUMPDEST
0x518 POP
0x519 SWAP3
0x51a POP
0x51b POP
0x51c POP
0x51d PUSH1 0x40
0x51f MLOAD
0x520 DUP1
0x521 SWAP2
0x522 SUB
0x523 SWAP1
0x524 RETURN
---
0x517: JUMPDEST 
0x51d: V399 = 0x40
0x51f: V400 = M[0x40]
0x522: V401 = SUB S1 V400
0x524: RETURN V400 V401
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V12]

================================

Block 0x525
[0x525:0x52b]
---
Predecessors: [0x30]
Successors: [0x52c, 0x530]
---
0x525 JUMPDEST
0x526 CALLVALUE
0x527 ISZERO
0x528 PUSH2 0x530
0x52b JUMPI
---
0x525: JUMPDEST 
0x526: V402 = CALLVALUE
0x527: V403 = ISZERO V402
0x528: V404 = 0x530
0x52b: JUMPI 0x530 V403
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x52c
[0x52c:0x52f]
---
Predecessors: [0x525]
Successors: []
---
0x52c PUSH1 0x0
0x52e DUP1
0x52f REVERT
---
0x52c: V405 = 0x0
0x52f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x530
[0x530:0x546]
---
Predecessors: [0x525]
Successors: [0x95e]
---
0x530 JUMPDEST
0x531 PUSH2 0x486
0x534 PUSH1 0x1
0x536 PUSH1 0xa0
0x538 PUSH1 0x2
0x53a EXP
0x53b SUB
0x53c PUSH1 0x4
0x53e CALLDATALOAD
0x53f AND
0x540 PUSH1 0x24
0x542 CALLDATALOAD
0x543 PUSH2 0x95e
0x546 JUMP
---
0x530: JUMPDEST 
0x531: V406 = 0x486
0x534: V407 = 0x1
0x536: V408 = 0xa0
0x538: V409 = 0x2
0x53a: V410 = EXP 0x2 0xa0
0x53b: V411 = SUB 0x10000000000000000000000000000000000000000 0x1
0x53c: V412 = 0x4
0x53e: V413 = CALLDATALOAD 0x4
0x53f: V414 = AND V413 0xffffffffffffffffffffffffffffffffffffffff
0x540: V415 = 0x24
0x542: V416 = CALLDATALOAD 0x24
0x543: V417 = 0x95e
0x546: JUMP 0x95e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x486, V414, V416]
Exit stack: [V12, 0x486, V414, V416]

================================

Block 0x547
[0x547:0x55a]
---
Predecessors: []
Successors: []
---
0x547 JUMPDEST
0x548 PUSH1 0x40
0x54a MLOAD
0x54b SWAP1
0x54c ISZERO
0x54d ISZERO
0x54e DUP2
0x54f MSTORE
0x550 PUSH1 0x20
0x552 ADD
0x553 PUSH1 0x40
0x555 MLOAD
0x556 DUP1
0x557 SWAP2
0x558 SUB
0x559 SWAP1
0x55a RETURN
---
0x547: JUMPDEST 
0x548: V418 = 0x40
0x54a: V419 = M[0x40]
0x54c: V420 = ISZERO S0
0x54d: V421 = ISZERO V420
0x54f: M[V419] = V421
0x550: V422 = 0x20
0x552: V423 = ADD 0x20 V419
0x553: V424 = 0x40
0x555: V425 = M[0x40]
0x558: V426 = SUB V423 V425
0x55a: RETURN V425 V426
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x55b
[0x55b:0x561]
---
Predecessors: [0x3b]
Successors: [0x562, 0x566]
---
0x55b JUMPDEST
0x55c CALLVALUE
0x55d ISZERO
0x55e PUSH2 0x566
0x561 JUMPI
---
0x55b: JUMPDEST 
0x55c: V427 = CALLVALUE
0x55d: V428 = ISZERO V427
0x55e: V429 = 0x566
0x561: JUMPI 0x566 V428
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x562
[0x562:0x565]
---
Predecessors: [0x55b]
Successors: []
---
0x562 PUSH1 0x0
0x564 DUP1
0x565 REVERT
---
0x562: V430 = 0x0
0x565: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x566
[0x566:0x56d]
---
Predecessors: [0x55b]
Successors: [0xa0a]
---
0x566 JUMPDEST
0x567 PUSH2 0x56e
0x56a PUSH2 0xa0a
0x56d JUMP
---
0x566: JUMPDEST 
0x567: V431 = 0x56e
0x56a: V432 = 0xa0a
0x56d: JUMP 0xa0a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x56e]
Exit stack: [V12, 0x56e]

================================

Block 0x56e
[0x56e:0x57f]
---
Predecessors: [0xa0a, 0xa10, 0xbcc, 0xc66, 0xdc2]
Successors: []
---
0x56e JUMPDEST
0x56f PUSH1 0x40
0x571 MLOAD
0x572 SWAP1
0x573 DUP2
0x574 MSTORE
0x575 PUSH1 0x20
0x577 ADD
0x578 PUSH1 0x40
0x57a MLOAD
0x57b DUP1
0x57c SWAP2
0x57d SUB
0x57e SWAP1
0x57f RETURN
---
0x56e: JUMPDEST 
0x56f: V433 = 0x40
0x571: V434 = M[0x40]
0x574: M[V434] = S0
0x575: V435 = 0x20
0x577: V436 = ADD 0x20 V434
0x578: V437 = 0x40
0x57a: V438 = M[0x40]
0x57d: V439 = SUB V436 V438
0x57f: RETURN V438 V439
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x580
[0x580:0x586]
---
Predecessors: [0x46]
Successors: [0x587, 0x58b]
---
0x580 JUMPDEST
0x581 CALLVALUE
0x582 ISZERO
0x583 PUSH2 0x58b
0x586 JUMPI
---
0x580: JUMPDEST 
0x581: V440 = CALLVALUE
0x582: V441 = ISZERO V440
0x583: V442 = 0x58b
0x586: JUMPI 0x58b V441
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x587
[0x587:0x58a]
---
Predecessors: [0x580]
Successors: []
---
0x587 PUSH1 0x0
0x589 DUP1
0x58a REVERT
---
0x587: V443 = 0x0
0x58a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x58b
[0x58b:0x592]
---
Predecessors: [0x580]
Successors: [0xa10]
---
0x58b JUMPDEST
0x58c PUSH2 0x56e
0x58f PUSH2 0xa10
0x592 JUMP
---
0x58b: JUMPDEST 
0x58c: V444 = 0x56e
0x58f: V445 = 0xa10
0x592: JUMP 0xa10
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x56e]
Exit stack: [V12, 0x56e]

================================

Block 0x593
[0x593:0x5a4]
---
Predecessors: []
Successors: []
---
0x593 JUMPDEST
0x594 PUSH1 0x40
0x596 MLOAD
0x597 SWAP1
0x598 DUP2
0x599 MSTORE
0x59a PUSH1 0x20
0x59c ADD
0x59d PUSH1 0x40
0x59f MLOAD
0x5a0 DUP1
0x5a1 SWAP2
0x5a2 SUB
0x5a3 SWAP1
0x5a4 RETURN
---
0x593: JUMPDEST 
0x594: V446 = 0x40
0x596: V447 = M[0x40]
0x599: M[V447] = S0
0x59a: V448 = 0x20
0x59c: V449 = ADD 0x20 V447
0x59d: V450 = 0x40
0x59f: V451 = M[0x40]
0x5a2: V452 = SUB V449 V451
0x5a4: RETURN V451 V452
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x5a5
[0x5a5:0x5ab]
---
Predecessors: [0x51]
Successors: [0x5ac, 0x5b0]
---
0x5a5 JUMPDEST
0x5a6 CALLVALUE
0x5a7 ISZERO
0x5a8 PUSH2 0x5b0
0x5ab JUMPI
---
0x5a5: JUMPDEST 
0x5a6: V453 = CALLVALUE
0x5a7: V454 = ISZERO V453
0x5a8: V455 = 0x5b0
0x5ab: JUMPI 0x5b0 V454
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x5ac
[0x5ac:0x5af]
---
Predecessors: [0x5a5]
Successors: []
---
0x5ac PUSH1 0x0
0x5ae DUP1
0x5af REVERT
---
0x5ac: V456 = 0x0
0x5af: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x5b0
[0x5b0:0x5cc]
---
Predecessors: [0x5a5]
Successors: [0xa16]
---
0x5b0 JUMPDEST
0x5b1 PUSH2 0x486
0x5b4 PUSH1 0x1
0x5b6 PUSH1 0xa0
0x5b8 PUSH1 0x2
0x5ba EXP
0x5bb SUB
0x5bc PUSH1 0x4
0x5be CALLDATALOAD
0x5bf DUP2
0x5c0 AND
0x5c1 SWAP1
0x5c2 PUSH1 0x24
0x5c4 CALLDATALOAD
0x5c5 AND
0x5c6 PUSH1 0x44
0x5c8 CALLDATALOAD
0x5c9 PUSH2 0xa16
0x5cc JUMP
---
0x5b0: JUMPDEST 
0x5b1: V457 = 0x486
0x5b4: V458 = 0x1
0x5b6: V459 = 0xa0
0x5b8: V460 = 0x2
0x5ba: V461 = EXP 0x2 0xa0
0x5bb: V462 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5bc: V463 = 0x4
0x5be: V464 = CALLDATALOAD 0x4
0x5c0: V465 = AND 0xffffffffffffffffffffffffffffffffffffffff V464
0x5c2: V466 = 0x24
0x5c4: V467 = CALLDATALOAD 0x24
0x5c5: V468 = AND V467 0xffffffffffffffffffffffffffffffffffffffff
0x5c6: V469 = 0x44
0x5c8: V470 = CALLDATALOAD 0x44
0x5c9: V471 = 0xa16
0x5cc: JUMP 0xa16
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x486, V465, V468, V470]
Exit stack: [V12, 0x486, V465, V468, V470]

================================

Block 0x5cd
[0x5cd:0x5e0]
---
Predecessors: []
Successors: []
---
0x5cd JUMPDEST
0x5ce PUSH1 0x40
0x5d0 MLOAD
0x5d1 SWAP1
0x5d2 ISZERO
0x5d3 ISZERO
0x5d4 DUP2
0x5d5 MSTORE
0x5d6 PUSH1 0x20
0x5d8 ADD
0x5d9 PUSH1 0x40
0x5db MLOAD
0x5dc DUP1
0x5dd SWAP2
0x5de SUB
0x5df SWAP1
0x5e0 RETURN
---
0x5cd: JUMPDEST 
0x5ce: V472 = 0x40
0x5d0: V473 = M[0x40]
0x5d2: V474 = ISZERO S0
0x5d3: V475 = ISZERO V474
0x5d5: M[V473] = V475
0x5d6: V476 = 0x20
0x5d8: V477 = ADD 0x20 V473
0x5d9: V478 = 0x40
0x5db: V479 = M[0x40]
0x5de: V480 = SUB V477 V479
0x5e0: RETURN V479 V480
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x5e1
[0x5e1:0x5e7]
---
Predecessors: [0x5c]
Successors: [0x5e8, 0x5ec]
---
0x5e1 JUMPDEST
0x5e2 CALLVALUE
0x5e3 ISZERO
0x5e4 PUSH2 0x5ec
0x5e7 JUMPI
---
0x5e1: JUMPDEST 
0x5e2: V481 = CALLVALUE
0x5e3: V482 = ISZERO V481
0x5e4: V483 = 0x5ec
0x5e7: JUMPI 0x5ec V482
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x5e8
[0x5e8:0x5eb]
---
Predecessors: [0x5e1]
Successors: []
---
0x5e8 PUSH1 0x0
0x5ea DUP1
0x5eb REVERT
---
0x5e8: V484 = 0x0
0x5eb: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x5ec
[0x5ec:0x5f3]
---
Predecessors: [0x5e1]
Successors: [0xb48]
---
0x5ec JUMPDEST
0x5ed PUSH2 0x5f4
0x5f0 PUSH2 0xb48
0x5f3 JUMP
---
0x5ec: JUMPDEST 
0x5ed: V485 = 0x5f4
0x5f0: V486 = 0xb48
0x5f3: JUMP 0xb48
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x5f4]
Exit stack: [V12, 0x5f4]

================================

Block 0x5f4
[0x5f4:0x609]
---
Predecessors: [0xb4b]
Successors: []
---
0x5f4 JUMPDEST
0x5f5 PUSH1 0x40
0x5f7 MLOAD
0x5f8 PUSH1 0xff
0x5fa SWAP1
0x5fb SWAP2
0x5fc AND
0x5fd DUP2
0x5fe MSTORE
0x5ff PUSH1 0x20
0x601 ADD
0x602 PUSH1 0x40
0x604 MLOAD
0x605 DUP1
0x606 SWAP2
0x607 SUB
0x608 SWAP1
0x609 RETURN
---
0x5f4: JUMPDEST 
0x5f5: V487 = 0x40
0x5f7: V488 = M[0x40]
0x5f8: V489 = 0xff
0x5fc: V490 = AND 0x12 0xff
0x5fe: M[V488] = 0x12
0x5ff: V491 = 0x20
0x601: V492 = ADD 0x20 V488
0x602: V493 = 0x40
0x604: V494 = M[0x40]
0x607: V495 = SUB V492 V494
0x609: RETURN V494 V495
---
Entry stack: [V12, 0x12]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x60a
[0x60a:0x610]
---
Predecessors: [0x67]
Successors: [0x611, 0x615]
---
0x60a JUMPDEST
0x60b CALLVALUE
0x60c ISZERO
0x60d PUSH2 0x615
0x610 JUMPI
---
0x60a: JUMPDEST 
0x60b: V496 = CALLVALUE
0x60c: V497 = ISZERO V496
0x60d: V498 = 0x615
0x610: JUMPI 0x615 V497
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x611
[0x611:0x614]
---
Predecessors: [0x60a]
Successors: []
---
0x611 PUSH1 0x0
0x613 DUP1
0x614 REVERT
---
0x611: V499 = 0x0
0x614: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x615
[0x615:0x61c]
---
Predecessors: [0x60a]
Successors: [0xb4e]
---
0x615 JUMPDEST
0x616 PUSH2 0x61d
0x619 PUSH2 0xb4e
0x61c JUMP
---
0x615: JUMPDEST 
0x616: V500 = 0x61d
0x619: V501 = 0xb4e
0x61c: JUMP 0xb4e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x61d]
Exit stack: [V12, 0x61d]

================================

Block 0x61d
[0x61d:0x61e]
---
Predecessors: [0xb74, 0xbb0, 0xc22]
Successors: []
---
0x61d JUMPDEST
0x61e STOP
---
0x61d: JUMPDEST 
0x61e: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x61f
[0x61f:0x625]
---
Predecessors: [0x72]
Successors: [0x626, 0x62a]
---
0x61f JUMPDEST
0x620 CALLVALUE
0x621 ISZERO
0x622 PUSH2 0x62a
0x625 JUMPI
---
0x61f: JUMPDEST 
0x620: V502 = CALLVALUE
0x621: V503 = ISZERO V502
0x622: V504 = 0x62a
0x625: JUMPI 0x62a V503
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x626
[0x626:0x629]
---
Predecessors: [0x61f]
Successors: []
---
0x626 PUSH1 0x0
0x628 DUP1
0x629 REVERT
---
0x626: V505 = 0x0
0x629: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x62a
[0x62a:0x631]
---
Predecessors: [0x61f]
Successors: [0xb76]
---
0x62a JUMPDEST
0x62b PUSH2 0x61d
0x62e PUSH2 0xb76
0x631 JUMP
---
0x62a: JUMPDEST 
0x62b: V506 = 0x61d
0x62e: V507 = 0xb76
0x631: JUMP 0xb76
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x61d]
Exit stack: [V12, 0x61d]

================================

Block 0x632
[0x632:0x633]
---
Predecessors: []
Successors: []
---
0x632 JUMPDEST
0x633 STOP
---
0x632: JUMPDEST 
0x633: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x634
[0x634:0x63a]
---
Predecessors: [0x7d]
Successors: [0x63b, 0x63f]
---
0x634 JUMPDEST
0x635 CALLVALUE
0x636 ISZERO
0x637 PUSH2 0x63f
0x63a JUMPI
---
0x634: JUMPDEST 
0x635: V508 = CALLVALUE
0x636: V509 = ISZERO V508
0x637: V510 = 0x63f
0x63a: JUMPI 0x63f V509
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x63b
[0x63b:0x63e]
---
Predecessors: [0x634]
Successors: []
---
0x63b PUSH1 0x0
0x63d DUP1
0x63e REVERT
---
0x63b: V511 = 0x0
0x63e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x63f
[0x63f:0x652]
---
Predecessors: [0x634]
Successors: [0xbb2]
---
0x63f JUMPDEST
0x640 PUSH2 0x56e
0x643 PUSH1 0x1
0x645 PUSH1 0xa0
0x647 PUSH1 0x2
0x649 EXP
0x64a SUB
0x64b PUSH1 0x4
0x64d CALLDATALOAD
0x64e AND
0x64f PUSH2 0xbb2
0x652 JUMP
---
0x63f: JUMPDEST 
0x640: V512 = 0x56e
0x643: V513 = 0x1
0x645: V514 = 0xa0
0x647: V515 = 0x2
0x649: V516 = EXP 0x2 0xa0
0x64a: V517 = SUB 0x10000000000000000000000000000000000000000 0x1
0x64b: V518 = 0x4
0x64d: V519 = CALLDATALOAD 0x4
0x64e: V520 = AND V519 0xffffffffffffffffffffffffffffffffffffffff
0x64f: V521 = 0xbb2
0x652: JUMP 0xbb2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x56e, V520]
Exit stack: [V12, 0x56e, V520]

================================

Block 0x653
[0x653:0x664]
---
Predecessors: []
Successors: []
---
0x653 JUMPDEST
0x654 PUSH1 0x40
0x656 MLOAD
0x657 SWAP1
0x658 DUP2
0x659 MSTORE
0x65a PUSH1 0x20
0x65c ADD
0x65d PUSH1 0x40
0x65f MLOAD
0x660 DUP1
0x661 SWAP2
0x662 SUB
0x663 SWAP1
0x664 RETURN
---
0x653: JUMPDEST 
0x654: V522 = 0x40
0x656: V523 = M[0x40]
0x659: M[V523] = S0
0x65a: V524 = 0x20
0x65c: V525 = ADD 0x20 V523
0x65d: V526 = 0x40
0x65f: V527 = M[0x40]
0x662: V528 = SUB V525 V527
0x664: RETURN V527 V528
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x665
[0x665:0x66b]
---
Predecessors: [0x88]
Successors: [0x66c, 0x670]
---
0x665 JUMPDEST
0x666 CALLVALUE
0x667 ISZERO
0x668 PUSH2 0x670
0x66b JUMPI
---
0x665: JUMPDEST 
0x666: V529 = CALLVALUE
0x667: V530 = ISZERO V529
0x668: V531 = 0x670
0x66b: JUMPI 0x670 V530
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x66c
[0x66c:0x66f]
---
Predecessors: [0x665]
Successors: []
---
0x66c PUSH1 0x0
0x66e DUP1
0x66f REVERT
---
0x66c: V532 = 0x0
0x66f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x670
[0x670:0x677]
---
Predecessors: [0x665]
Successors: [0xbd1]
---
0x670 JUMPDEST
0x671 PUSH2 0x61d
0x674 PUSH2 0xbd1
0x677 JUMP
---
0x670: JUMPDEST 
0x671: V533 = 0x61d
0x674: V534 = 0xbd1
0x677: JUMP 0xbd1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x61d]
Exit stack: [V12, 0x61d]

================================

Block 0x678
[0x678:0x679]
---
Predecessors: []
Successors: []
---
0x678 JUMPDEST
0x679 STOP
---
0x678: JUMPDEST 
0x679: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x67a
[0x67a:0x680]
---
Predecessors: [0x93]
Successors: [0x681, 0x685]
---
0x67a JUMPDEST
0x67b CALLVALUE
0x67c ISZERO
0x67d PUSH2 0x685
0x680 JUMPI
---
0x67a: JUMPDEST 
0x67b: V535 = CALLVALUE
0x67c: V536 = ISZERO V535
0x67d: V537 = 0x685
0x680: JUMPI 0x685 V536
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x681
[0x681:0x684]
---
Predecessors: [0x67a]
Successors: []
---
0x681 PUSH1 0x0
0x683 DUP1
0x684 REVERT
---
0x681: V538 = 0x0
0x684: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x685
[0x685:0x68c]
---
Predecessors: [0x67a]
Successors: [0xc24]
---
0x685 JUMPDEST
0x686 PUSH2 0x4ad
0x689 PUSH2 0xc24
0x68c JUMP
---
0x685: JUMPDEST 
0x686: V539 = 0x4ad
0x689: V540 = 0xc24
0x68c: JUMP 0xc24
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x4ad]
Exit stack: [V12, 0x4ad]

================================

Block 0x68d
[0x68d:0x6b0]
---
Predecessors: []
Successors: [0x6b1]
---
0x68d JUMPDEST
0x68e PUSH1 0x40
0x690 MLOAD
0x691 PUSH1 0x20
0x693 DUP1
0x694 DUP3
0x695 MSTORE
0x696 DUP2
0x697 SWAP1
0x698 DUP2
0x699 ADD
0x69a DUP4
0x69b DUP2
0x69c DUP2
0x69d MLOAD
0x69e DUP2
0x69f MSTORE
0x6a0 PUSH1 0x20
0x6a2 ADD
0x6a3 SWAP2
0x6a4 POP
0x6a5 DUP1
0x6a6 MLOAD
0x6a7 SWAP1
0x6a8 PUSH1 0x20
0x6aa ADD
0x6ab SWAP1
0x6ac DUP1
0x6ad DUP4
0x6ae DUP4
0x6af PUSH1 0x0
---
0x68d: JUMPDEST 
0x68e: V541 = 0x40
0x690: V542 = M[0x40]
0x691: V543 = 0x20
0x695: M[V542] = 0x20
0x699: V544 = ADD V542 0x20
0x69d: V545 = M[S0]
0x69f: M[V544] = V545
0x6a0: V546 = 0x20
0x6a2: V547 = ADD 0x20 V544
0x6a6: V548 = M[S0]
0x6a8: V549 = 0x20
0x6aa: V550 = ADD 0x20 S0
0x6af: V551 = 0x0
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, V542, V542, V547, V550, V548, V548, V547, V550, 0x0]
Exit stack: [S0, V542, V542, V547, V550, V548, V548, V547, V550, 0x0]

================================

Block 0x6b1
[0x6b1:0x6b9]
---
Predecessors: [0x68d]
Successors: [0x4ea, 0x6ba]
---
0x6b1 JUMPDEST
0x6b2 DUP4
0x6b3 DUP2
0x6b4 LT
0x6b5 ISZERO
0x6b6 PUSH2 0x4ea
0x6b9 JUMPI
---
0x6b1: JUMPDEST 
0x6b4: V552 = LT 0x0 V548
0x6b5: V553 = ISZERO V552
0x6b6: V554 = 0x4ea
0x6b9: JUMPI 0x4ea V553
---
Entry stack: [S9, V542, V542, V547, V550, V548, V548, V547, V550, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V542, V542, V547, V550, V548, V548, V547, V550, 0x0]

================================

Block 0x6ba
[0x6ba:0x6c1]
---
Predecessors: [0x6b1]
Successors: [0x6c2]
---
0x6ba DUP1
0x6bb DUP3
0x6bc ADD
0x6bd MLOAD
0x6be DUP2
0x6bf DUP5
0x6c0 ADD
0x6c1 MSTORE
---
0x6bc: V555 = ADD V550 0x0
0x6bd: V556 = M[V555]
0x6c0: V557 = ADD V547 0x0
0x6c1: M[V557] = V556
---
Entry stack: [S9, V542, V542, V547, V550, V548, V548, V547, V550, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S9, V542, V542, V547, V550, V548, V548, V547, V550, 0x0]

================================

Block 0x6c2
[0x6c2:0x6c9]
---
Predecessors: [0x6ba]
Successors: [0x4d1]
---
0x6c2 JUMPDEST
0x6c3 PUSH1 0x20
0x6c5 ADD
0x6c6 PUSH2 0x4d1
0x6c9 JUMP
---
0x6c2: JUMPDEST 
0x6c3: V558 = 0x20
0x6c5: V559 = ADD 0x20 0x0
0x6c6: V560 = 0x4d1
0x6c9: JUMP 0x4d1
---
Entry stack: [S9, V542, V542, V547, V550, V548, V548, V547, V550, 0x0]
Stack pops: 1
Stack additions: [0x20]
Exit stack: [S9, V542, V542, V547, V550, V548, V548, V547, V550, 0x20]

================================

Block 0x6ca
[0x6ca:0x6dd]
---
Predecessors: []
Successors: [0x517, 0x6de]
---
0x6ca JUMPDEST
0x6cb POP
0x6cc POP
0x6cd POP
0x6ce POP
0x6cf SWAP1
0x6d0 POP
0x6d1 SWAP1
0x6d2 DUP2
0x6d3 ADD
0x6d4 SWAP1
0x6d5 PUSH1 0x1f
0x6d7 AND
0x6d8 DUP1
0x6d9 ISZERO
0x6da PUSH2 0x517
0x6dd JUMPI
---
0x6ca: JUMPDEST 
0x6d3: V561 = ADD S4 S6
0x6d5: V562 = 0x1f
0x6d7: V563 = AND 0x1f S4
0x6d9: V564 = ISZERO V563
0x6da: V565 = 0x517
0x6dd: JUMPI 0x517 V564
---
Entry stack: []
Stack pops: 7
Stack additions: [V561, V563]
Exit stack: [V561, V563]

================================

Block 0x6de
[0x6de:0x6f6]
---
Predecessors: [0x6ca]
Successors: [0x6f7]
---
0x6de DUP1
0x6df DUP3
0x6e0 SUB
0x6e1 DUP1
0x6e2 MLOAD
0x6e3 PUSH1 0x1
0x6e5 DUP4
0x6e6 PUSH1 0x20
0x6e8 SUB
0x6e9 PUSH2 0x100
0x6ec EXP
0x6ed SUB
0x6ee NOT
0x6ef AND
0x6f0 DUP2
0x6f1 MSTORE
0x6f2 PUSH1 0x20
0x6f4 ADD
0x6f5 SWAP2
0x6f6 POP
---
0x6e0: V566 = SUB V561 V563
0x6e2: V567 = M[V566]
0x6e3: V568 = 0x1
0x6e6: V569 = 0x20
0x6e8: V570 = SUB 0x20 V563
0x6e9: V571 = 0x100
0x6ec: V572 = EXP 0x100 V570
0x6ed: V573 = SUB V572 0x1
0x6ee: V574 = NOT V573
0x6ef: V575 = AND V574 V567
0x6f1: M[V566] = V575
0x6f2: V576 = 0x20
0x6f4: V577 = ADD 0x20 V566
---
Entry stack: [V561, V563]
Stack pops: 2
Stack additions: [V577, S0]
Exit stack: [V577, V563]

================================

Block 0x6f7
[0x6f7:0x704]
---
Predecessors: [0x6de]
Successors: []
---
0x6f7 JUMPDEST
0x6f8 POP
0x6f9 SWAP3
0x6fa POP
0x6fb POP
0x6fc POP
0x6fd PUSH1 0x40
0x6ff MLOAD
0x700 DUP1
0x701 SWAP2
0x702 SUB
0x703 SWAP1
0x704 RETURN
---
0x6f7: JUMPDEST 
0x6fd: V578 = 0x40
0x6ff: V579 = M[0x40]
0x702: V580 = SUB V577 V579
0x704: RETURN V579 V580
---
Entry stack: [V577, V563]
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0x705
[0x705:0x70b]
---
Predecessors: [0x9e]
Successors: [0x70c, 0x710]
---
0x705 JUMPDEST
0x706 CALLVALUE
0x707 ISZERO
0x708 PUSH2 0x710
0x70b JUMPI
---
0x705: JUMPDEST 
0x706: V581 = CALLVALUE
0x707: V582 = ISZERO V581
0x708: V583 = 0x710
0x70b: JUMPI 0x710 V582
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x70c
[0x70c:0x70f]
---
Predecessors: [0x705]
Successors: []
---
0x70c PUSH1 0x0
0x70e DUP1
0x70f REVERT
---
0x70c: V584 = 0x0
0x70f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x710
[0x710:0x717]
---
Predecessors: [0x705]
Successors: [0xc66]
---
0x710 JUMPDEST
0x711 PUSH2 0x56e
0x714 PUSH2 0xc66
0x717 JUMP
---
0x710: JUMPDEST 
0x711: V585 = 0x56e
0x714: V586 = 0xc66
0x717: JUMP 0xc66
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x56e]
Exit stack: [V12, 0x56e]

================================

Block 0x718
[0x718:0x729]
---
Predecessors: []
Successors: []
---
0x718 JUMPDEST
0x719 PUSH1 0x40
0x71b MLOAD
0x71c SWAP1
0x71d DUP2
0x71e MSTORE
0x71f PUSH1 0x20
0x721 ADD
0x722 PUSH1 0x40
0x724 MLOAD
0x725 DUP1
0x726 SWAP2
0x727 SUB
0x728 SWAP1
0x729 RETURN
---
0x718: JUMPDEST 
0x719: V587 = 0x40
0x71b: V588 = M[0x40]
0x71e: M[V588] = S0
0x71f: V589 = 0x20
0x721: V590 = ADD 0x20 V588
0x722: V591 = 0x40
0x724: V592 = M[0x40]
0x727: V593 = SUB V590 V592
0x729: RETURN V592 V593
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x72a
[0x72a:0x730]
---
Predecessors: [0xa9]
Successors: [0x731, 0x735]
---
0x72a JUMPDEST
0x72b CALLVALUE
0x72c ISZERO
0x72d PUSH2 0x735
0x730 JUMPI
---
0x72a: JUMPDEST 
0x72b: V594 = CALLVALUE
0x72c: V595 = ISZERO V594
0x72d: V596 = 0x735
0x730: JUMPI 0x735 V595
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x731
[0x731:0x734]
---
Predecessors: [0x72a]
Successors: []
---
0x731 PUSH1 0x0
0x733 DUP1
0x734 REVERT
---
0x731: V597 = 0x0
0x734: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x735
[0x735:0x74b]
---
Predecessors: [0x72a]
Successors: [0xc6c]
---
0x735 JUMPDEST
0x736 PUSH2 0x486
0x739 PUSH1 0x1
0x73b PUSH1 0xa0
0x73d PUSH1 0x2
0x73f EXP
0x740 SUB
0x741 PUSH1 0x4
0x743 CALLDATALOAD
0x744 AND
0x745 PUSH1 0x24
0x747 CALLDATALOAD
0x748 PUSH2 0xc6c
0x74b JUMP
---
0x735: JUMPDEST 
0x736: V598 = 0x486
0x739: V599 = 0x1
0x73b: V600 = 0xa0
0x73d: V601 = 0x2
0x73f: V602 = EXP 0x2 0xa0
0x740: V603 = SUB 0x10000000000000000000000000000000000000000 0x1
0x741: V604 = 0x4
0x743: V605 = CALLDATALOAD 0x4
0x744: V606 = AND V605 0xffffffffffffffffffffffffffffffffffffffff
0x745: V607 = 0x24
0x747: V608 = CALLDATALOAD 0x24
0x748: V609 = 0xc6c
0x74b: JUMP 0xc6c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x486, V606, V608]
Exit stack: [V12, 0x486, V606, V608]

================================

Block 0x74c
[0x74c:0x75f]
---
Predecessors: []
Successors: []
---
0x74c JUMPDEST
0x74d PUSH1 0x40
0x74f MLOAD
0x750 SWAP1
0x751 ISZERO
0x752 ISZERO
0x753 DUP2
0x754 MSTORE
0x755 PUSH1 0x20
0x757 ADD
0x758 PUSH1 0x40
0x75a MLOAD
0x75b DUP1
0x75c SWAP2
0x75d SUB
0x75e SWAP1
0x75f RETURN
---
0x74c: JUMPDEST 
0x74d: V610 = 0x40
0x74f: V611 = M[0x40]
0x751: V612 = ISZERO S0
0x752: V613 = ISZERO V612
0x754: M[V611] = V613
0x755: V614 = 0x20
0x757: V615 = ADD 0x20 V611
0x758: V616 = 0x40
0x75a: V617 = M[0x40]
0x75d: V618 = SUB V615 V617
0x75f: RETURN V617 V618
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x760
[0x760:0x766]
---
Predecessors: [0xb4]
Successors: [0x767, 0x76b]
---
0x760 JUMPDEST
0x761 CALLVALUE
0x762 ISZERO
0x763 PUSH2 0x76b
0x766 JUMPI
---
0x760: JUMPDEST 
0x761: V619 = CALLVALUE
0x762: V620 = ISZERO V619
0x763: V621 = 0x76b
0x766: JUMPI 0x76b V620
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x767
[0x767:0x76a]
---
Predecessors: [0x760]
Successors: []
---
0x767 PUSH1 0x0
0x769 DUP1
0x76a REVERT
---
0x767: V622 = 0x0
0x76a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x76b
[0x76b:0x772]
---
Predecessors: [0x760]
Successors: [0xd4c]
---
0x76b JUMPDEST
0x76c PUSH2 0x773
0x76f PUSH2 0xd4c
0x772 JUMP
---
0x76b: JUMPDEST 
0x76c: V623 = 0x773
0x76f: V624 = 0xd4c
0x772: JUMP 0xd4c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x773]
Exit stack: [V12, 0x773]

================================

Block 0x773
[0x773:0x79e]
---
Predecessors: [0xd74]
Successors: []
---
0x773 JUMPDEST
0x774 PUSH1 0x40
0x776 MLOAD
0x777 SWAP4
0x778 DUP5
0x779 MSTORE
0x77a PUSH1 0x20
0x77c DUP5
0x77d ADD
0x77e SWAP3
0x77f SWAP1
0x780 SWAP3
0x781 MSTORE
0x782 PUSH1 0x40
0x784 DUP1
0x785 DUP5
0x786 ADD
0x787 SWAP2
0x788 SWAP1
0x789 SWAP2
0x78a MSTORE
0x78b SWAP1
0x78c ISZERO
0x78d ISZERO
0x78e PUSH1 0x60
0x790 DUP4
0x791 ADD
0x792 MSTORE
0x793 PUSH1 0x80
0x795 SWAP1
0x796 SWAP2
0x797 ADD
0x798 SWAP1
0x799 MLOAD
0x79a DUP1
0x79b SWAP2
0x79c SUB
0x79d SWAP1
0x79e RETURN
---
0x773: JUMPDEST 
0x774: V625 = 0x40
0x776: V626 = M[0x40]
0x779: M[V626] = V1087
0x77a: V627 = 0x20
0x77d: V628 = ADD V626 0x20
0x781: M[V628] = V1089
0x782: V629 = 0x40
0x786: V630 = ADD V626 0x40
0x78a: M[V630] = V1091
0x78c: V631 = ISZERO V1097
0x78d: V632 = ISZERO V631
0x78e: V633 = 0x60
0x791: V634 = ADD V626 0x60
0x792: M[V634] = V632
0x793: V635 = 0x80
0x797: V636 = ADD V626 0x80
0x799: V637 = M[0x40]
0x79c: V638 = SUB V636 V637
0x79e: RETURN V637 V638
---
Entry stack: [V12, V1087, V1089, V1091, V1097]
Stack pops: 4
Stack additions: []
Exit stack: [V12]

================================

Block 0x79f
[0x79f:0x7a5]
---
Predecessors: [0xbf]
Successors: [0x7a6, 0x7aa]
---
0x79f JUMPDEST
0x7a0 CALLVALUE
0x7a1 ISZERO
0x7a2 PUSH2 0x7aa
0x7a5 JUMPI
---
0x79f: JUMPDEST 
0x7a0: V639 = CALLVALUE
0x7a1: V640 = ISZERO V639
0x7a2: V641 = 0x7aa
0x7a5: JUMPI 0x7aa V640
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7a6
[0x7a6:0x7a9]
---
Predecessors: [0x79f]
Successors: []
---
0x7a6 PUSH1 0x0
0x7a8 DUP1
0x7a9 REVERT
---
0x7a6: V642 = 0x0
0x7a9: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7aa
[0x7aa:0x7b1]
---
Predecessors: [0x79f]
Successors: [0xd7a]
---
0x7aa JUMPDEST
0x7ab PUSH2 0x486
0x7ae PUSH2 0xd7a
0x7b1 JUMP
---
0x7aa: JUMPDEST 
0x7ab: V643 = 0x486
0x7ae: V644 = 0xd7a
0x7b1: JUMP 0xd7a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x486]
Exit stack: [V12, 0x486]

================================

Block 0x7b2
[0x7b2:0x7c5]
---
Predecessors: []
Successors: []
---
0x7b2 JUMPDEST
0x7b3 PUSH1 0x40
0x7b5 MLOAD
0x7b6 SWAP1
0x7b7 ISZERO
0x7b8 ISZERO
0x7b9 DUP2
0x7ba MSTORE
0x7bb PUSH1 0x20
0x7bd ADD
0x7be PUSH1 0x40
0x7c0 MLOAD
0x7c1 DUP1
0x7c2 SWAP2
0x7c3 SUB
0x7c4 SWAP1
0x7c5 RETURN
---
0x7b2: JUMPDEST 
0x7b3: V645 = 0x40
0x7b5: V646 = M[0x40]
0x7b7: V647 = ISZERO S0
0x7b8: V648 = ISZERO V647
0x7ba: M[V646] = V648
0x7bb: V649 = 0x20
0x7bd: V650 = ADD 0x20 V646
0x7be: V651 = 0x40
0x7c0: V652 = M[0x40]
0x7c3: V653 = SUB V650 V652
0x7c5: RETURN V652 V653
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x7c6
[0x7c6:0x7cc]
---
Predecessors: [0xca]
Successors: [0x7cd, 0x7d1]
---
0x7c6 JUMPDEST
0x7c7 CALLVALUE
0x7c8 ISZERO
0x7c9 PUSH2 0x7d1
0x7cc JUMPI
---
0x7c6: JUMPDEST 
0x7c7: V654 = CALLVALUE
0x7c8: V655 = ISZERO V654
0x7c9: V656 = 0x7d1
0x7cc: JUMPI 0x7d1 V655
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7cd
[0x7cd:0x7d0]
---
Predecessors: [0x7c6]
Successors: []
---
0x7cd PUSH1 0x0
0x7cf DUP1
0x7d0 REVERT
---
0x7cd: V657 = 0x0
0x7d0: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7d1
[0x7d1:0x7ea]
---
Predecessors: [0x7c6]
Successors: [0xd9b]
---
0x7d1 JUMPDEST
0x7d2 PUSH2 0x56e
0x7d5 PUSH1 0x1
0x7d7 PUSH1 0xa0
0x7d9 PUSH1 0x2
0x7db EXP
0x7dc SUB
0x7dd PUSH1 0x4
0x7df CALLDATALOAD
0x7e0 DUP2
0x7e1 AND
0x7e2 SWAP1
0x7e3 PUSH1 0x24
0x7e5 CALLDATALOAD
0x7e6 AND
0x7e7 PUSH2 0xd9b
0x7ea JUMP
---
0x7d1: JUMPDEST 
0x7d2: V658 = 0x56e
0x7d5: V659 = 0x1
0x7d7: V660 = 0xa0
0x7d9: V661 = 0x2
0x7db: V662 = EXP 0x2 0xa0
0x7dc: V663 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7dd: V664 = 0x4
0x7df: V665 = CALLDATALOAD 0x4
0x7e1: V666 = AND 0xffffffffffffffffffffffffffffffffffffffff V665
0x7e3: V667 = 0x24
0x7e5: V668 = CALLDATALOAD 0x24
0x7e6: V669 = AND V668 0xffffffffffffffffffffffffffffffffffffffff
0x7e7: V670 = 0xd9b
0x7ea: JUMP 0xd9b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x56e, V666, V669]
Exit stack: [V12, 0x56e, V666, V669]

================================

Block 0x7eb
[0x7eb:0x7fc]
---
Predecessors: []
Successors: []
---
0x7eb JUMPDEST
0x7ec PUSH1 0x40
0x7ee MLOAD
0x7ef SWAP1
0x7f0 DUP2
0x7f1 MSTORE
0x7f2 PUSH1 0x20
0x7f4 ADD
0x7f5 PUSH1 0x40
0x7f7 MLOAD
0x7f8 DUP1
0x7f9 SWAP2
0x7fa SUB
0x7fb SWAP1
0x7fc RETURN
---
0x7eb: JUMPDEST 
0x7ec: V671 = 0x40
0x7ee: V672 = M[0x40]
0x7f1: M[V672] = S0
0x7f2: V673 = 0x20
0x7f4: V674 = ADD 0x20 V672
0x7f5: V675 = 0x40
0x7f7: V676 = M[0x40]
0x7fa: V677 = SUB V674 V676
0x7fc: RETURN V676 V677
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x7fd
[0x7fd:0x818]
---
Predecessors: [0x472]
Successors: [0x819, 0x81d]
---
0x7fd JUMPDEST
0x7fe PUSH1 0x0
0x800 DUP1
0x801 SLOAD
0x802 DUP2
0x803 SWAP1
0x804 DUP2
0x805 SWAP1
0x806 CALLER
0x807 PUSH1 0x1
0x809 PUSH1 0xa0
0x80b PUSH1 0x2
0x80d EXP
0x80e SUB
0x80f SWAP1
0x810 DUP2
0x811 AND
0x812 SWAP2
0x813 AND
0x814 EQ
0x815 PUSH2 0x81d
0x818 JUMPI
---
0x7fd: JUMPDEST 
0x7fe: V678 = 0x0
0x801: V679 = S[0x0]
0x806: V680 = CALLER
0x807: V681 = 0x1
0x809: V682 = 0xa0
0x80b: V683 = 0x2
0x80d: V684 = EXP 0x2 0xa0
0x80e: V685 = SUB 0x10000000000000000000000000000000000000000 0x1
0x811: V686 = AND 0xffffffffffffffffffffffffffffffffffffffff V680
0x813: V687 = AND V679 0xffffffffffffffffffffffffffffffffffffffff
0x814: V688 = EQ V687 V686
0x815: V689 = 0x81d
0x818: JUMPI 0x81d V688
---
Entry stack: [V12, 0x486, V345]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V12, 0x486, V345, 0x0, 0x0, 0x0]

================================

Block 0x819
[0x819:0x81c]
---
Predecessors: [0x7fd]
Successors: []
---
0x819 PUSH1 0x0
0x81b DUP1
0x81c REVERT
---
0x819: V690 = 0x0
0x81c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x486, V345, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x486, V345, 0x0, 0x0, 0x0]

================================

Block 0x81d
[0x81d:0x872]
---
Predecessors: [0x7fd]
Successors: [0x873, 0x877]
---
0x81d JUMPDEST
0x81e DUP4
0x81f SWAP2
0x820 POP
0x821 DUP2
0x822 PUSH1 0x1
0x824 PUSH1 0xa0
0x826 PUSH1 0x2
0x828 EXP
0x829 SUB
0x82a AND
0x82b PUSH4 0x70a08231
0x830 ADDRESS
0x831 PUSH1 0x0
0x833 PUSH1 0x40
0x835 MLOAD
0x836 PUSH1 0x20
0x838 ADD
0x839 MSTORE
0x83a PUSH1 0x40
0x83c MLOAD
0x83d PUSH1 0xe0
0x83f PUSH1 0x2
0x841 EXP
0x842 PUSH4 0xffffffff
0x847 DUP5
0x848 AND
0x849 MUL
0x84a DUP2
0x84b MSTORE
0x84c PUSH1 0x1
0x84e PUSH1 0xa0
0x850 PUSH1 0x2
0x852 EXP
0x853 SUB
0x854 SWAP1
0x855 SWAP2
0x856 AND
0x857 PUSH1 0x4
0x859 DUP3
0x85a ADD
0x85b MSTORE
0x85c PUSH1 0x24
0x85e ADD
0x85f PUSH1 0x20
0x861 PUSH1 0x40
0x863 MLOAD
0x864 DUP1
0x865 DUP4
0x866 SUB
0x867 DUP2
0x868 PUSH1 0x0
0x86a DUP8
0x86b DUP1
0x86c EXTCODESIZE
0x86d ISZERO
0x86e ISZERO
0x86f PUSH2 0x877
0x872 JUMPI
---
0x81d: JUMPDEST 
0x822: V691 = 0x1
0x824: V692 = 0xa0
0x826: V693 = 0x2
0x828: V694 = EXP 0x2 0xa0
0x829: V695 = SUB 0x10000000000000000000000000000000000000000 0x1
0x82a: V696 = AND 0xffffffffffffffffffffffffffffffffffffffff V345
0x82b: V697 = 0x70a08231
0x830: V698 = ADDRESS
0x831: V699 = 0x0
0x833: V700 = 0x40
0x835: V701 = M[0x40]
0x836: V702 = 0x20
0x838: V703 = ADD 0x20 V701
0x839: M[V703] = 0x0
0x83a: V704 = 0x40
0x83c: V705 = M[0x40]
0x83d: V706 = 0xe0
0x83f: V707 = 0x2
0x841: V708 = EXP 0x2 0xe0
0x842: V709 = 0xffffffff
0x848: V710 = AND 0x70a08231 0xffffffff
0x849: V711 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x84b: M[V705] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x84c: V712 = 0x1
0x84e: V713 = 0xa0
0x850: V714 = 0x2
0x852: V715 = EXP 0x2 0xa0
0x853: V716 = SUB 0x10000000000000000000000000000000000000000 0x1
0x856: V717 = AND V698 0xffffffffffffffffffffffffffffffffffffffff
0x857: V718 = 0x4
0x85a: V719 = ADD V705 0x4
0x85b: M[V719] = V717
0x85c: V720 = 0x24
0x85e: V721 = ADD 0x24 V705
0x85f: V722 = 0x20
0x861: V723 = 0x40
0x863: V724 = M[0x40]
0x866: V725 = SUB V721 V724
0x868: V726 = 0x0
0x86c: V727 = EXTCODESIZE V696
0x86d: V728 = ISZERO V727
0x86e: V729 = ISZERO V728
0x86f: V730 = 0x877
0x872: JUMPI 0x877 V729
---
Entry stack: [V12, 0x486, V345, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S3, S0, V696, 0x70a08231, V721, 0x20, V724, V725, V724, 0x0, V696]
Exit stack: [V12, 0x486, V345, 0x0, V345, 0x0, V696, 0x70a08231, V721, 0x20, V724, V725, V724, 0x0, V696]

================================

Block 0x873
[0x873:0x876]
---
Predecessors: [0x81d]
Successors: []
---
0x873 PUSH1 0x0
0x875 DUP1
0x876 REVERT
---
0x873: V731 = 0x0
0x876: REVERT 0x0 0x0
---
Entry stack: [V12, 0x486, V345, 0x0, V345, 0x0, V696, 0x70a08231, V721, 0x20, V724, V725, V724, 0x0, V696]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x486, V345, 0x0, V345, 0x0, V696, 0x70a08231, V721, 0x20, V724, V725, V724, 0x0, V696]

================================

Block 0x877
[0x877:0x883]
---
Predecessors: [0x81d]
Successors: [0x884, 0x888]
---
0x877 JUMPDEST
0x878 PUSH2 0x2c6
0x87b GAS
0x87c SUB
0x87d CALL
0x87e ISZERO
0x87f ISZERO
0x880 PUSH2 0x888
0x883 JUMPI
---
0x877: JUMPDEST 
0x878: V732 = 0x2c6
0x87b: V733 = GAS
0x87c: V734 = SUB V733 0x2c6
0x87d: V735 = CALL V734 V696 0x0 V724 V725 V724 0x20
0x87e: V736 = ISZERO V735
0x87f: V737 = ISZERO V736
0x880: V738 = 0x888
0x883: JUMPI 0x888 V737
---
Entry stack: [V12, 0x486, V345, 0x0, V345, 0x0, V696, 0x70a08231, V721, 0x20, V724, V725, V724, 0x0, V696]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x486, V345, 0x0, V345, 0x0, V696, 0x70a08231, V721]

================================

Block 0x884
[0x884:0x887]
---
Predecessors: [0x877]
Successors: []
---
0x884 PUSH1 0x0
0x886 DUP1
0x887 REVERT
---
0x884: V739 = 0x0
0x887: REVERT 0x0 0x0
---
Entry stack: [V12, 0x486, V345, 0x0, V345, 0x0, V696, 0x70a08231, V721]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x486, V345, 0x0, V345, 0x0, V696, 0x70a08231, V721]

================================

Block 0x888
[0x888:0x8f3]
---
Predecessors: [0x877]
Successors: [0x8f4, 0x8f8]
---
0x888 JUMPDEST
0x889 POP
0x88a POP
0x88b POP
0x88c PUSH1 0x40
0x88e MLOAD
0x88f DUP1
0x890 MLOAD
0x891 PUSH1 0x0
0x893 DUP1
0x894 SLOAD
0x895 SWAP2
0x896 SWAP4
0x897 POP
0x898 PUSH1 0x1
0x89a PUSH1 0xa0
0x89c PUSH1 0x2
0x89e EXP
0x89f SUB
0x8a0 DUP1
0x8a1 DUP7
0x8a2 AND
0x8a3 SWAP4
0x8a4 POP
0x8a5 PUSH4 0xa9059cbb
0x8aa SWAP3
0x8ab AND
0x8ac SWAP1
0x8ad DUP5
0x8ae SWAP1
0x8af PUSH1 0x40
0x8b1 MLOAD
0x8b2 PUSH1 0x20
0x8b4 ADD
0x8b5 MSTORE
0x8b6 PUSH1 0x40
0x8b8 MLOAD
0x8b9 PUSH1 0xe0
0x8bb PUSH1 0x2
0x8bd EXP
0x8be PUSH4 0xffffffff
0x8c3 DUP6
0x8c4 AND
0x8c5 MUL
0x8c6 DUP2
0x8c7 MSTORE
0x8c8 PUSH1 0x1
0x8ca PUSH1 0xa0
0x8cc PUSH1 0x2
0x8ce EXP
0x8cf SUB
0x8d0 SWAP1
0x8d1 SWAP3
0x8d2 AND
0x8d3 PUSH1 0x4
0x8d5 DUP4
0x8d6 ADD
0x8d7 MSTORE
0x8d8 PUSH1 0x24
0x8da DUP3
0x8db ADD
0x8dc MSTORE
0x8dd PUSH1 0x44
0x8df ADD
0x8e0 PUSH1 0x20
0x8e2 PUSH1 0x40
0x8e4 MLOAD
0x8e5 DUP1
0x8e6 DUP4
0x8e7 SUB
0x8e8 DUP2
0x8e9 PUSH1 0x0
0x8eb DUP8
0x8ec DUP1
0x8ed EXTCODESIZE
0x8ee ISZERO
0x8ef ISZERO
0x8f0 PUSH2 0x8f8
0x8f3 JUMPI
---
0x888: JUMPDEST 
0x88c: V740 = 0x40
0x88e: V741 = M[0x40]
0x890: V742 = M[V741]
0x891: V743 = 0x0
0x894: V744 = S[0x0]
0x898: V745 = 0x1
0x89a: V746 = 0xa0
0x89c: V747 = 0x2
0x89e: V748 = EXP 0x2 0xa0
0x89f: V749 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8a2: V750 = AND V345 0xffffffffffffffffffffffffffffffffffffffff
0x8a5: V751 = 0xa9059cbb
0x8ab: V752 = AND V744 0xffffffffffffffffffffffffffffffffffffffff
0x8af: V753 = 0x40
0x8b1: V754 = M[0x40]
0x8b2: V755 = 0x20
0x8b4: V756 = ADD 0x20 V754
0x8b5: M[V756] = 0x0
0x8b6: V757 = 0x40
0x8b8: V758 = M[0x40]
0x8b9: V759 = 0xe0
0x8bb: V760 = 0x2
0x8bd: V761 = EXP 0x2 0xe0
0x8be: V762 = 0xffffffff
0x8c4: V763 = AND 0xa9059cbb 0xffffffff
0x8c5: V764 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x8c7: M[V758] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x8c8: V765 = 0x1
0x8ca: V766 = 0xa0
0x8cc: V767 = 0x2
0x8ce: V768 = EXP 0x2 0xa0
0x8cf: V769 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8d2: V770 = AND V752 0xffffffffffffffffffffffffffffffffffffffff
0x8d3: V771 = 0x4
0x8d6: V772 = ADD V758 0x4
0x8d7: M[V772] = V770
0x8d8: V773 = 0x24
0x8db: V774 = ADD V758 0x24
0x8dc: M[V774] = V742
0x8dd: V775 = 0x44
0x8df: V776 = ADD 0x44 V758
0x8e0: V777 = 0x20
0x8e2: V778 = 0x40
0x8e4: V779 = M[0x40]
0x8e7: V780 = SUB V776 V779
0x8e9: V781 = 0x0
0x8ed: V782 = EXTCODESIZE V750
0x8ee: V783 = ISZERO V782
0x8ef: V784 = ISZERO V783
0x8f0: V785 = 0x8f8
0x8f3: JUMPI 0x8f8 V784
---
Entry stack: [V12, 0x486, V345, 0x0, V345, 0x0, V696, 0x70a08231, V721]
Stack pops: 5
Stack additions: [S4, V742, V750, 0xa9059cbb, V776, 0x20, V779, V780, V779, 0x0, V750]
Exit stack: [V12, 0x486, V345, 0x0, V345, V742, V750, 0xa9059cbb, V776, 0x20, V779, V780, V779, 0x0, V750]

================================

Block 0x8f4
[0x8f4:0x8f7]
---
Predecessors: [0x888]
Successors: []
---
0x8f4 PUSH1 0x0
0x8f6 DUP1
0x8f7 REVERT
---
0x8f4: V786 = 0x0
0x8f7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x486, V345, 0x0, V345, V742, V750, 0xa9059cbb, V776, 0x20, V779, V780, V779, 0x0, V750]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x486, V345, 0x0, V345, V742, V750, 0xa9059cbb, V776, 0x20, V779, V780, V779, 0x0, V750]

================================

Block 0x8f8
[0x8f8:0x904]
---
Predecessors: [0x888]
Successors: [0x905, 0x909]
---
0x8f8 JUMPDEST
0x8f9 PUSH2 0x2c6
0x8fc GAS
0x8fd SUB
0x8fe CALL
0x8ff ISZERO
0x900 ISZERO
0x901 PUSH2 0x909
0x904 JUMPI
---
0x8f8: JUMPDEST 
0x8f9: V787 = 0x2c6
0x8fc: V788 = GAS
0x8fd: V789 = SUB V788 0x2c6
0x8fe: V790 = CALL V789 V750 0x0 V779 V780 V779 0x20
0x8ff: V791 = ISZERO V790
0x900: V792 = ISZERO V791
0x901: V793 = 0x909
0x904: JUMPI 0x909 V792
---
Entry stack: [V12, 0x486, V345, 0x0, V345, V742, V750, 0xa9059cbb, V776, 0x20, V779, V780, V779, 0x0, V750]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x486, V345, 0x0, V345, V742, V750, 0xa9059cbb, V776]

================================

Block 0x905
[0x905:0x908]
---
Predecessors: [0x8f8]
Successors: []
---
0x905 PUSH1 0x0
0x907 DUP1
0x908 REVERT
---
0x905: V794 = 0x0
0x908: REVERT 0x0 0x0
---
Entry stack: [V12, 0x486, V345, 0x0, V345, V742, V750, 0xa9059cbb, V776]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x486, V345, 0x0, V345, V742, V750, 0xa9059cbb, V776]

================================

Block 0x909
[0x909:0x914]
---
Predecessors: [0x8f8]
Successors: [0x915]
---
0x909 JUMPDEST
0x90a POP
0x90b POP
0x90c POP
0x90d PUSH1 0x40
0x90f MLOAD
0x910 DUP1
0x911 MLOAD
0x912 SWAP4
0x913 POP
0x914 POP
---
0x909: JUMPDEST 
0x90d: V795 = 0x40
0x90f: V796 = M[0x40]
0x911: V797 = M[V796]
---
Entry stack: [V12, 0x486, V345, 0x0, V345, V742, V750, 0xa9059cbb, V776]
Stack pops: 6
Stack additions: [V797, S4, S3]
Exit stack: [V12, 0x486, V345, V797, V345, V742]

================================

Block 0x915
[0x915:0x91b]
---
Predecessors: [0x909]
Successors: [0x486]
---
0x915 JUMPDEST
0x916 POP
0x917 POP
0x918 SWAP2
0x919 SWAP1
0x91a POP
0x91b JUMP
---
0x915: JUMPDEST 
0x91b: JUMP 0x486
---
Entry stack: [V12, 0x486, V345, V797, V345, V742]
Stack pops: 5
Stack additions: [S2]
Exit stack: [V12, V797]

================================

Block 0x91c
[0x91c:0x923]
---
Predecessors: [0x4a5]
Successors: [0xdc8]
---
0x91c JUMPDEST
0x91d PUSH2 0x924
0x920 PUSH2 0xdc8
0x923 JUMP
---
0x91c: JUMPDEST 
0x91d: V798 = 0x924
0x920: V799 = 0xdc8
0x923: JUMP 0xdc8
---
Entry stack: [V12, 0x4ad]
Stack pops: 0
Stack additions: [0x924]
Exit stack: [V12, 0x4ad, 0x924]

================================

Block 0x924
[0x924:0x95a]
---
Predecessors: [0xdc8]
Successors: [0x95b]
---
0x924 JUMPDEST
0x925 PUSH1 0x40
0x927 DUP1
0x928 MLOAD
0x929 SWAP1
0x92a DUP2
0x92b ADD
0x92c PUSH1 0x40
0x92e MSTORE
0x92f PUSH1 0xa
0x931 DUP2
0x932 MSTORE
0x933 PUSH32 0x5468616e6b73436f696e00000000000000000000000000000000000000000000
0x954 PUSH1 0x20
0x956 DUP3
0x957 ADD
0x958 MSTORE
0x959 SWAP1
0x95a POP
---
0x924: JUMPDEST 
0x925: V800 = 0x40
0x928: V801 = M[0x40]
0x92b: V802 = ADD V801 0x40
0x92c: V803 = 0x40
0x92e: M[0x40] = V802
0x92f: V804 = 0xa
0x932: M[V801] = 0xa
0x933: V805 = 0x5468616e6b73436f696e00000000000000000000000000000000000000000000
0x954: V806 = 0x20
0x957: V807 = ADD V801 0x20
0x958: M[V807] = 0x5468616e6b73436f696e00000000000000000000000000000000000000000000
---
Entry stack: [V12, 0x4ad, V1120]
Stack pops: 1
Stack additions: [V801]
Exit stack: [V12, 0x4ad, V801]

================================

Block 0x95b
[0x95b:0x95d]
---
Predecessors: [0x924]
Successors: [0x4ad]
---
0x95b JUMPDEST
0x95c SWAP1
0x95d JUMP
---
0x95b: JUMPDEST 
0x95d: JUMP 0x4ad
---
Entry stack: [V12, 0x4ad, V801]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, V801]

================================

Block 0x95e
[0x95e:0x969]
---
Predecessors: [0x530]
Successors: [0x96a, 0x993]
---
0x95e JUMPDEST
0x95f PUSH1 0x0
0x961 DUP2
0x962 ISZERO
0x963 DUP1
0x964 ISZERO
0x965 SWAP1
0x966 PUSH2 0x993
0x969 JUMPI
---
0x95e: JUMPDEST 
0x95f: V808 = 0x0
0x962: V809 = ISZERO V416
0x964: V810 = ISZERO V809
0x966: V811 = 0x993
0x969: JUMPI 0x993 V809
---
Entry stack: [V12, 0x486, V414, V416]
Stack pops: 1
Stack additions: [S0, 0x0, V810]
Exit stack: [V12, 0x486, V414, V416, 0x0, V810]

================================

Block 0x96a
[0x96a:0x992]
---
Predecessors: [0x95e]
Successors: [0x993]
---
0x96a POP
0x96b PUSH1 0x1
0x96d PUSH1 0xa0
0x96f PUSH1 0x2
0x971 EXP
0x972 SUB
0x973 CALLER
0x974 DUP2
0x975 AND
0x976 PUSH1 0x0
0x978 SWAP1
0x979 DUP2
0x97a MSTORE
0x97b PUSH1 0x2
0x97d PUSH1 0x20
0x97f SWAP1
0x980 DUP2
0x981 MSTORE
0x982 PUSH1 0x40
0x984 DUP1
0x985 DUP4
0x986 SHA3
0x987 SWAP4
0x988 DUP8
0x989 AND
0x98a DUP4
0x98b MSTORE
0x98c SWAP3
0x98d SWAP1
0x98e MSTORE
0x98f SHA3
0x990 SLOAD
0x991 ISZERO
0x992 ISZERO
---
0x96b: V812 = 0x1
0x96d: V813 = 0xa0
0x96f: V814 = 0x2
0x971: V815 = EXP 0x2 0xa0
0x972: V816 = SUB 0x10000000000000000000000000000000000000000 0x1
0x973: V817 = CALLER
0x975: V818 = AND 0xffffffffffffffffffffffffffffffffffffffff V817
0x976: V819 = 0x0
0x97a: M[0x0] = V818
0x97b: V820 = 0x2
0x97d: V821 = 0x20
0x981: M[0x20] = 0x2
0x982: V822 = 0x40
0x986: V823 = SHA3 0x0 0x40
0x989: V824 = AND V414 0xffffffffffffffffffffffffffffffffffffffff
0x98b: M[0x0] = V824
0x98e: M[0x20] = V823
0x98f: V825 = SHA3 0x0 0x40
0x990: V826 = S[V825]
0x991: V827 = ISZERO V826
0x992: V828 = ISZERO V827
---
Entry stack: [V12, 0x486, V414, V416, 0x0, V810]
Stack pops: 4
Stack additions: [S3, S2, S1, V828]
Exit stack: [V12, 0x486, V414, V416, 0x0, V828]

================================

Block 0x993
[0x993:0x998]
---
Predecessors: [0x95e, 0x96a]
Successors: [0x999, 0x9a0]
---
0x993 JUMPDEST
0x994 ISZERO
0x995 PUSH2 0x9a0
0x998 JUMPI
---
0x993: JUMPDEST 
0x994: V829 = ISZERO S0
0x995: V830 = 0x9a0
0x998: JUMPI 0x9a0 V829
---
Entry stack: [V12, 0x486, V414, V416, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x486, V414, V416, 0x0]

================================

Block 0x999
[0x999:0x99f]
---
Predecessors: [0x993]
Successors: [0xa04]
---
0x999 POP
0x99a PUSH1 0x0
0x99c PUSH2 0xa04
0x99f JUMP
---
0x99a: V831 = 0x0
0x99c: V832 = 0xa04
0x99f: JUMP 0xa04
---
Entry stack: [V12, 0x486, V414, V416, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, 0x486, V414, V416, 0x0]

================================

Block 0x9a0
[0x9a0:0xa03]
---
Predecessors: [0x993]
Successors: [0xa04]
---
0x9a0 JUMPDEST
0x9a1 PUSH1 0x1
0x9a3 PUSH1 0xa0
0x9a5 PUSH1 0x2
0x9a7 EXP
0x9a8 SUB
0x9a9 CALLER
0x9aa DUP2
0x9ab AND
0x9ac PUSH1 0x0
0x9ae DUP2
0x9af DUP2
0x9b0 MSTORE
0x9b1 PUSH1 0x2
0x9b3 PUSH1 0x20
0x9b5 SWAP1
0x9b6 DUP2
0x9b7 MSTORE
0x9b8 PUSH1 0x40
0x9ba DUP1
0x9bb DUP4
0x9bc SHA3
0x9bd SWAP5
0x9be DUP9
0x9bf AND
0x9c0 DUP1
0x9c1 DUP5
0x9c2 MSTORE
0x9c3 SWAP5
0x9c4 SWAP1
0x9c5 SWAP2
0x9c6 MSTORE
0x9c7 SWAP1
0x9c8 DUP2
0x9c9 SWAP1
0x9ca SHA3
0x9cb DUP6
0x9cc SWAP1
0x9cd SSTORE
0x9ce PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x9ef SWAP1
0x9f0 DUP6
0x9f1 SWAP1
0x9f2 MLOAD
0x9f3 SWAP1
0x9f4 DUP2
0x9f5 MSTORE
0x9f6 PUSH1 0x20
0x9f8 ADD
0x9f9 PUSH1 0x40
0x9fb MLOAD
0x9fc DUP1
0x9fd SWAP2
0x9fe SUB
0x9ff SWAP1
0xa00 LOG3
0xa01 POP
0xa02 PUSH1 0x1
---
0x9a0: JUMPDEST 
0x9a1: V833 = 0x1
0x9a3: V834 = 0xa0
0x9a5: V835 = 0x2
0x9a7: V836 = EXP 0x2 0xa0
0x9a8: V837 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9a9: V838 = CALLER
0x9ab: V839 = AND 0xffffffffffffffffffffffffffffffffffffffff V838
0x9ac: V840 = 0x0
0x9b0: M[0x0] = V839
0x9b1: V841 = 0x2
0x9b3: V842 = 0x20
0x9b7: M[0x20] = 0x2
0x9b8: V843 = 0x40
0x9bc: V844 = SHA3 0x0 0x40
0x9bf: V845 = AND V414 0xffffffffffffffffffffffffffffffffffffffff
0x9c2: M[0x0] = V845
0x9c6: M[0x20] = V844
0x9ca: V846 = SHA3 0x0 0x40
0x9cd: S[V846] = V416
0x9ce: V847 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x9f2: V848 = M[0x40]
0x9f5: M[V848] = V416
0x9f6: V849 = 0x20
0x9f8: V850 = ADD 0x20 V848
0x9f9: V851 = 0x40
0x9fb: V852 = M[0x40]
0x9fe: V853 = SUB V850 V852
0xa00: LOG V852 V853 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V839 V845
0xa02: V854 = 0x1
---
Entry stack: [V12, 0x486, V414, V416, 0x0]
Stack pops: 3
Stack additions: [S2, S1, 0x1]
Exit stack: [V12, 0x486, V414, V416, 0x1]

================================

Block 0xa04
[0xa04:0xa09]
---
Predecessors: [0x999, 0x9a0]
Successors: [0x486]
---
0xa04 JUMPDEST
0xa05 SWAP3
0xa06 SWAP2
0xa07 POP
0xa08 POP
0xa09 JUMP
---
0xa04: JUMPDEST 
0xa09: JUMP 0x486
---
Entry stack: [V12, 0x486, V414, V416, {0x0, 0x1}]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, {0x0, 0x1}]

================================

Block 0xa0a
[0xa0a:0xa0f]
---
Predecessors: [0x566]
Successors: [0x56e]
---
0xa0a JUMPDEST
0xa0b PUSH1 0x3
0xa0d SLOAD
0xa0e DUP2
0xa0f JUMP
---
0xa0a: JUMPDEST 
0xa0b: V855 = 0x3
0xa0d: V856 = S[0x3]
0xa0f: JUMP 0x56e
---
Entry stack: [V12, 0x56e]
Stack pops: 1
Stack additions: [S0, V856]
Exit stack: [V12, 0x56e, V856]

================================

Block 0xa10
[0xa10:0xa15]
---
Predecessors: [0x58b]
Successors: [0x56e]
---
0xa10 JUMPDEST
0xa11 PUSH1 0x5
0xa13 SLOAD
0xa14 DUP2
0xa15 JUMP
---
0xa10: JUMPDEST 
0xa11: V857 = 0x5
0xa13: V858 = S[0x5]
0xa15: JUMP 0x56e
---
Entry stack: [V12, 0x56e]
Stack pops: 1
Stack additions: [S0, V858]
Exit stack: [V12, 0x56e, V858]

================================

Block 0xa16
[0xa16:0xa26]
---
Predecessors: [0x5b0]
Successors: [0xa27, 0xa2b]
---
0xa16 JUMPDEST
0xa17 PUSH1 0x0
0xa19 DUP1
0xa1a DUP1
0xa1b DUP1
0xa1c DUP1
0xa1d DUP1
0xa1e PUSH1 0x64
0xa20 CALLDATASIZE
0xa21 LT
0xa22 ISZERO
0xa23 PUSH2 0xa2b
0xa26 JUMPI
---
0xa16: JUMPDEST 
0xa17: V859 = 0x0
0xa1e: V860 = 0x64
0xa20: V861 = CALLDATASIZE
0xa21: V862 = LT V861 0x64
0xa22: V863 = ISZERO V862
0xa23: V864 = 0xa2b
0xa26: JUMPI 0xa2b V863
---
Entry stack: [V12, 0x486, V465, V468, V470]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V12, 0x486, V465, V468, V470, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xa27
[0xa27:0xa2a]
---
Predecessors: [0xa16]
Successors: []
---
0xa27 PUSH1 0x0
0xa29 DUP1
0xa2a REVERT
---
0xa27: V865 = 0x0
0xa2a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x486, V465, V468, V470, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x486, V465, V468, V470, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xa2b
[0xa2b:0xa32]
---
Predecessors: [0xa16]
Successors: [0xa33, 0xa3b]
---
0xa2b JUMPDEST
0xa2c DUP7
0xa2d ISZERO
0xa2e ISZERO
0xa2f PUSH2 0xa3b
0xa32 JUMPI
---
0xa2b: JUMPDEST 
0xa2d: V866 = ISZERO V470
0xa2e: V867 = ISZERO V866
0xa2f: V868 = 0xa3b
0xa32: JUMPI 0xa3b V867
---
Entry stack: [V12, 0x486, V465, V468, V470, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V12, 0x486, V465, V468, V470, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xa33
[0xa33:0xa3a]
---
Predecessors: [0xa2b]
Successors: [0xb3b]
---
0xa33 PUSH1 0x0
0xa35 SWAP6
0xa36 POP
0xa37 PUSH2 0xb3b
0xa3a JUMP
---
0xa33: V869 = 0x0
0xa37: V870 = 0xb3b
0xa3a: JUMP 0xb3b
---
Entry stack: [V12, 0x486, V465, V468, V470, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [0x0, S4, S3, S2, S1, S0]
Exit stack: [V12, 0x486, V465, V468, V470, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xa3b
[0xa3b:0xa97]
---
Predecessors: [0xa2b]
Successors: [0xa98, 0xa9a]
---
0xa3b JUMPDEST
0xa3c POP
0xa3d POP
0xa3e POP
0xa3f POP
0xa40 PUSH1 0x1
0xa42 PUSH1 0xa0
0xa44 PUSH1 0x2
0xa46 EXP
0xa47 SUB
0xa48 DUP6
0xa49 DUP2
0xa4a AND
0xa4b PUSH1 0x0
0xa4d SWAP1
0xa4e DUP2
0xa4f MSTORE
0xa50 PUSH1 0x1
0xa52 PUSH1 0x20
0xa54 DUP2
0xa55 DUP2
0xa56 MSTORE
0xa57 PUSH1 0x40
0xa59 DUP1
0xa5a DUP5
0xa5b SHA3
0xa5c SLOAD
0xa5d PUSH1 0x2
0xa5f DUP4
0xa60 MSTORE
0xa61 DUP2
0xa62 DUP6
0xa63 SHA3
0xa64 CALLER
0xa65 DUP8
0xa66 AND
0xa67 DUP7
0xa68 MSTORE
0xa69 DUP4
0xa6a MSTORE
0xa6b DUP2
0xa6c DUP6
0xa6d SHA3
0xa6e SLOAD
0xa6f SWAP6
0xa70 DUP11
0xa71 AND
0xa72 DUP6
0xa73 MSTORE
0xa74 SWAP3
0xa75 SWAP1
0xa76 SWAP2
0xa77 MSTORE
0xa78 SWAP1
0xa79 SWAP2
0xa7a SHA3
0xa7b SLOAD
0xa7c SWAP1
0xa7d SWAP3
0xa7e POP
0xa7f DUP5
0xa80 DUP4
0xa81 GT
0xa82 DUP1
0xa83 ISZERO
0xa84 SWAP2
0xa85 DUP7
0xa86 DUP5
0xa87 GT
0xa88 ISZERO
0xa89 SWAP2
0xa8a DUP8
0xa8b DUP3
0xa8c ADD
0xa8d SWAP2
0xa8e SWAP1
0xa8f SWAP2
0xa90 GT
0xa91 SWAP1
0xa92 DUP4
0xa93 SWAP1
0xa94 PUSH2 0xa9a
0xa97 JUMPI
---
0xa3b: JUMPDEST 
0xa40: V871 = 0x1
0xa42: V872 = 0xa0
0xa44: V873 = 0x2
0xa46: V874 = EXP 0x2 0xa0
0xa47: V875 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa4a: V876 = AND 0xffffffffffffffffffffffffffffffffffffffff V465
0xa4b: V877 = 0x0
0xa4f: M[0x0] = V876
0xa50: V878 = 0x1
0xa52: V879 = 0x20
0xa56: M[0x20] = 0x1
0xa57: V880 = 0x40
0xa5b: V881 = SHA3 0x0 0x40
0xa5c: V882 = S[V881]
0xa5d: V883 = 0x2
0xa60: M[0x20] = 0x2
0xa63: V884 = SHA3 0x0 0x40
0xa64: V885 = CALLER
0xa66: V886 = AND 0xffffffffffffffffffffffffffffffffffffffff V885
0xa68: M[0x0] = V886
0xa6a: M[0x20] = V884
0xa6d: V887 = SHA3 0x0 0x40
0xa6e: V888 = S[V887]
0xa71: V889 = AND V468 0xffffffffffffffffffffffffffffffffffffffff
0xa73: M[0x0] = V889
0xa77: M[0x20] = 0x1
0xa7a: V890 = SHA3 0x0 0x40
0xa7b: V891 = S[V890]
0xa81: V892 = GT V882 V470
0xa83: V893 = ISZERO V892
0xa87: V894 = GT V888 V470
0xa88: V895 = ISZERO V894
0xa8c: V896 = ADD V891 V470
0xa90: V897 = GT V896 V891
0xa94: V898 = 0xa9a
0xa97: JUMPI 0xa9a V892
---
Entry stack: [V12, 0x486, V465, V468, V470, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, V882, V888, V893, V895, V897, V893]
Exit stack: [V12, 0x486, V465, V468, V470, 0x0, V882, V888, V893, V895, V897, V893]

================================

Block 0xa98
[0xa98:0xa99]
---
Predecessors: [0xa3b]
Successors: [0xa9a]
---
0xa98 POP
0xa99 DUP2
---
0xa98: NOP 
---
Entry stack: [V12, 0x486, V465, V468, V470, 0x0, V882, V888, V893, V895, V897, V893]
Stack pops: 3
Stack additions: [S2, S1, S2]
Exit stack: [V12, 0x486, V465, V468, V470, 0x0, V882, V888, V893, V895, V897, V895]

================================

Block 0xa9a
[0xa9a:0xaa0]
---
Predecessors: [0xa3b, 0xa98]
Successors: [0xaa1, 0xaa4]
---
0xa9a JUMPDEST
0xa9b DUP1
0xa9c ISZERO
0xa9d PUSH2 0xaa4
0xaa0 JUMPI
---
0xa9a: JUMPDEST 
0xa9c: V899 = ISZERO S0
0xa9d: V900 = 0xaa4
0xaa0: JUMPI 0xaa4 V899
---
Entry stack: [V12, 0x486, V465, V468, V470, 0x0, V882, V888, V893, V895, V897, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x486, V465, V468, V470, 0x0, V882, V888, V893, V895, V897, S0]

================================

Block 0xaa1
[0xaa1:0xaa3]
---
Predecessors: [0xa9a]
Successors: [0xaa4]
---
0xaa1 POP
0xaa2 DUP1
0xaa3 ISZERO
---
0xaa3: V901 = ISZERO V897
---
Entry stack: [V12, 0x486, V465, V468, V470, 0x0, V882, V888, V893, V895, V897, S0]
Stack pops: 2
Stack additions: [S1, V901]
Exit stack: [V12, 0x486, V465, V468, V470, 0x0, V882, V888, V893, V895, V897, V901]

================================

Block 0xaa4
[0xaa4:0xaa9]
---
Predecessors: [0xa9a, 0xaa1]
Successors: [0xaaa, 0xb36]
---
0xaa4 JUMPDEST
0xaa5 ISZERO
0xaa6 PUSH2 0xb36
0xaa9 JUMPI
---
0xaa4: JUMPDEST 
0xaa5: V902 = ISZERO S0
0xaa6: V903 = 0xb36
0xaa9: JUMPI 0xb36 V902
---
Entry stack: [V12, 0x486, V465, V468, V470, 0x0, V882, V888, V893, V895, V897, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x486, V465, V468, V470, 0x0, V882, V888, V893, V895, V897]

================================

Block 0xaaa
[0xaaa:0xb35]
---
Predecessors: [0xaa4]
Successors: [0xb3b]
---
0xaaa PUSH1 0x1
0xaac PUSH1 0xa0
0xaae PUSH1 0x2
0xab0 EXP
0xab1 SUB
0xab2 DUP1
0xab3 DUP10
0xab4 AND
0xab5 PUSH1 0x0
0xab7 DUP2
0xab8 DUP2
0xab9 MSTORE
0xaba PUSH1 0x1
0xabc PUSH1 0x20
0xabe SWAP1
0xabf DUP2
0xac0 MSTORE
0xac1 PUSH1 0x40
0xac3 DUP1
0xac4 DUP4
0xac5 SHA3
0xac6 DUP1
0xac7 SLOAD
0xac8 DUP14
0xac9 ADD
0xaca SWAP1
0xacb SSTORE
0xacc DUP14
0xacd DUP6
0xace AND
0xacf DUP1
0xad0 DUP5
0xad1 MSTORE
0xad2 DUP2
0xad3 DUP5
0xad4 SHA3
0xad5 DUP1
0xad6 SLOAD
0xad7 DUP15
0xad8 SWAP1
0xad9 SUB
0xada SWAP1
0xadb SSTORE
0xadc PUSH1 0x2
0xade DUP4
0xadf MSTORE
0xae0 DUP2
0xae1 DUP5
0xae2 SHA3
0xae3 CALLER
0xae4 SWAP1
0xae5 SWAP7
0xae6 AND
0xae7 DUP5
0xae8 MSTORE
0xae9 SWAP5
0xaea SWAP1
0xaeb SWAP2
0xaec MSTORE
0xaed SWAP1
0xaee DUP2
0xaef SWAP1
0xaf0 SHA3
0xaf1 DUP1
0xaf2 SLOAD
0xaf3 DUP12
0xaf4 SWAP1
0xaf5 SUB
0xaf6 SWAP1
0xaf7 SSTORE
0xaf8 SWAP1
0xaf9 SWAP2
0xafa SWAP1
0xafb PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xb1c SWAP1
0xb1d DUP11
0xb1e SWAP1
0xb1f MLOAD
0xb20 SWAP1
0xb21 DUP2
0xb22 MSTORE
0xb23 PUSH1 0x20
0xb25 ADD
0xb26 PUSH1 0x40
0xb28 MLOAD
0xb29 DUP1
0xb2a SWAP2
0xb2b SUB
0xb2c SWAP1
0xb2d LOG3
0xb2e PUSH1 0x1
0xb30 SWAP6
0xb31 POP
0xb32 PUSH2 0xb3b
0xb35 JUMP
---
0xaaa: V904 = 0x1
0xaac: V905 = 0xa0
0xaae: V906 = 0x2
0xab0: V907 = EXP 0x2 0xa0
0xab1: V908 = SUB 0x10000000000000000000000000000000000000000 0x1
0xab4: V909 = AND V468 0xffffffffffffffffffffffffffffffffffffffff
0xab5: V910 = 0x0
0xab9: M[0x0] = V909
0xaba: V911 = 0x1
0xabc: V912 = 0x20
0xac0: M[0x20] = 0x1
0xac1: V913 = 0x40
0xac5: V914 = SHA3 0x0 0x40
0xac7: V915 = S[V914]
0xac9: V916 = ADD V470 V915
0xacb: S[V914] = V916
0xace: V917 = AND 0xffffffffffffffffffffffffffffffffffffffff V465
0xad1: M[0x0] = V917
0xad4: V918 = SHA3 0x0 0x40
0xad6: V919 = S[V918]
0xad9: V920 = SUB V919 V470
0xadb: S[V918] = V920
0xadc: V921 = 0x2
0xadf: M[0x20] = 0x2
0xae2: V922 = SHA3 0x0 0x40
0xae3: V923 = CALLER
0xae6: V924 = AND 0xffffffffffffffffffffffffffffffffffffffff V923
0xae8: M[0x0] = V924
0xaec: M[0x20] = V922
0xaf0: V925 = SHA3 0x0 0x40
0xaf2: V926 = S[V925]
0xaf5: V927 = SUB V926 V470
0xaf7: S[V925] = V927
0xafb: V928 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xb1f: V929 = M[0x40]
0xb22: M[V929] = V470
0xb23: V930 = 0x20
0xb25: V931 = ADD 0x20 V929
0xb26: V932 = 0x40
0xb28: V933 = M[0x40]
0xb2b: V934 = SUB V931 V933
0xb2d: LOG V933 V934 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V917 V909
0xb2e: V935 = 0x1
0xb32: V936 = 0xb3b
0xb35: JUMP 0xb3b
---
Entry stack: [V12, 0x486, V465, V468, V470, 0x0, V882, V888, V893, V895, V897]
Stack pops: 9
Stack additions: [S8, S7, S6, 0x1, S4, S3, S2, S1, S0]
Exit stack: [V12, 0x486, V465, V468, V470, 0x1, V882, V888, V893, V895, V897]

================================

Block 0xb36
[0xb36:0xb3a]
---
Predecessors: [0xaa4]
Successors: [0xb3b]
---
0xb36 JUMPDEST
0xb37 PUSH1 0x0
0xb39 SWAP6
0xb3a POP
---
0xb36: JUMPDEST 
0xb37: V937 = 0x0
---
Entry stack: [V12, 0x486, V465, V468, V470, 0x0, V882, V888, V893, V895, V897]
Stack pops: 6
Stack additions: [0x0, S4, S3, S2, S1, S0]
Exit stack: [V12, 0x486, V465, V468, V470, 0x0, V882, V888, V893, V895, V897]

================================

Block 0xb3b
[0xb3b:0xb3b]
---
Predecessors: [0xa33, 0xaaa, 0xb36]
Successors: [0xb3c]
---
0xb3b JUMPDEST
---
0xb3b: JUMPDEST 
---
Entry stack: [V12, 0x486, V465, V468, V470, {0x0, 0x1}, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x486, V465, V468, V470, {0x0, 0x1}, S4, S3, S2, S1, S0]

================================

Block 0xb3c
[0xb3c:0xb47]
---
Predecessors: [0xb3b]
Successors: [0x486]
---
0xb3c JUMPDEST
0xb3d POP
0xb3e POP
0xb3f POP
0xb40 POP
0xb41 POP
0xb42 SWAP4
0xb43 SWAP3
0xb44 POP
0xb45 POP
0xb46 POP
0xb47 JUMP
---
0xb3c: JUMPDEST 
0xb47: JUMP 0x486
---
Entry stack: [V12, 0x486, V465, V468, V470, {0x0, 0x1}, S4, S3, S2, S1, S0]
Stack pops: 10
Stack additions: [S5]
Exit stack: [V12, {0x0, 0x1}]

================================

Block 0xb48
[0xb48:0xb4a]
---
Predecessors: [0x5ec]
Successors: [0xb4b]
---
0xb48 JUMPDEST
0xb49 PUSH1 0x12
---
0xb48: JUMPDEST 
0xb49: V938 = 0x12
---
Entry stack: [V12, 0x5f4]
Stack pops: 0
Stack additions: [0x12]
Exit stack: [V12, 0x5f4, 0x12]

================================

Block 0xb4b
[0xb4b:0xb4d]
---
Predecessors: [0xb48]
Successors: [0x5f4]
---
0xb4b JUMPDEST
0xb4c SWAP1
0xb4d JUMP
---
0xb4b: JUMPDEST 
0xb4d: JUMP 0x5f4
---
Entry stack: [V12, 0x5f4, 0x12]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x12]

================================

Block 0xb4e
[0xb4e:0xb65]
---
Predecessors: [0x615]
Successors: [0xb66, 0xb73]
---
0xb4e JUMPDEST
0xb4f PUSH1 0x0
0xb51 SLOAD
0xb52 CALLER
0xb53 PUSH1 0x1
0xb55 PUSH1 0xa0
0xb57 PUSH1 0x2
0xb59 EXP
0xb5a SUB
0xb5b SWAP1
0xb5c DUP2
0xb5d AND
0xb5e SWAP2
0xb5f AND
0xb60 EQ
0xb61 ISZERO
0xb62 PUSH2 0xb73
0xb65 JUMPI
---
0xb4e: JUMPDEST 
0xb4f: V939 = 0x0
0xb51: V940 = S[0x0]
0xb52: V941 = CALLER
0xb53: V942 = 0x1
0xb55: V943 = 0xa0
0xb57: V944 = 0x2
0xb59: V945 = EXP 0x2 0xa0
0xb5a: V946 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb5d: V947 = AND 0xffffffffffffffffffffffffffffffffffffffff V941
0xb5f: V948 = AND V940 0xffffffffffffffffffffffffffffffffffffffff
0xb60: V949 = EQ V948 V947
0xb61: V950 = ISZERO V949
0xb62: V951 = 0xb73
0xb65: JUMPI 0xb73 V950
---
Entry stack: [V12, 0x61d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x61d]

================================

Block 0xb66
[0xb66:0xb72]
---
Predecessors: [0xb4e]
Successors: []
---
0xb66 PUSH1 0x0
0xb68 SLOAD
0xb69 PUSH1 0x1
0xb6b PUSH1 0xa0
0xb6d PUSH1 0x2
0xb6f EXP
0xb70 SUB
0xb71 AND
0xb72 SELFDESTRUCT
---
0xb66: V952 = 0x0
0xb68: V953 = S[0x0]
0xb69: V954 = 0x1
0xb6b: V955 = 0xa0
0xb6d: V956 = 0x2
0xb6f: V957 = EXP 0x2 0xa0
0xb70: V958 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb71: V959 = AND 0xffffffffffffffffffffffffffffffffffffffff V953
0xb72: SELFDESTRUCT V959
---
Entry stack: [V12, 0x61d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x61d]

================================

Block 0xb73
[0xb73:0xb73]
---
Predecessors: [0xb4e]
Successors: [0xb74]
---
0xb73 JUMPDEST
---
0xb73: JUMPDEST 
---
Entry stack: [V12, 0x61d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x61d]

================================

Block 0xb74
[0xb74:0xb75]
---
Predecessors: [0xb73]
Successors: [0x61d]
---
0xb74 JUMPDEST
0xb75 JUMP
---
0xb74: JUMPDEST 
0xb75: JUMP 0x61d
---
Entry stack: [V12, 0x61d]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xb76
[0xb76:0xb8c]
---
Predecessors: [0x62a]
Successors: [0xb8d, 0xb91]
---
0xb76 JUMPDEST
0xb77 PUSH1 0x0
0xb79 SLOAD
0xb7a CALLER
0xb7b PUSH1 0x1
0xb7d PUSH1 0xa0
0xb7f PUSH1 0x2
0xb81 EXP
0xb82 SUB
0xb83 SWAP1
0xb84 DUP2
0xb85 AND
0xb86 SWAP2
0xb87 AND
0xb88 EQ
0xb89 PUSH2 0xb91
0xb8c JUMPI
---
0xb76: JUMPDEST 
0xb77: V960 = 0x0
0xb79: V961 = S[0x0]
0xb7a: V962 = CALLER
0xb7b: V963 = 0x1
0xb7d: V964 = 0xa0
0xb7f: V965 = 0x2
0xb81: V966 = EXP 0x2 0xa0
0xb82: V967 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb85: V968 = AND 0xffffffffffffffffffffffffffffffffffffffff V962
0xb87: V969 = AND V961 0xffffffffffffffffffffffffffffffffffffffff
0xb88: V970 = EQ V969 V968
0xb89: V971 = 0xb91
0xb8c: JUMPI 0xb91 V970
---
Entry stack: [V12, 0x61d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x61d]

================================

Block 0xb8d
[0xb8d:0xb90]
---
Predecessors: [0xb76]
Successors: []
---
0xb8d PUSH1 0x0
0xb8f DUP1
0xb90 REVERT
---
0xb8d: V972 = 0x0
0xb90: REVERT 0x0 0x0
---
Entry stack: [V12, 0x61d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x61d]

================================

Block 0xb91
[0xb91:0xbaf]
---
Predecessors: [0xb76]
Successors: [0xbb0]
---
0xb91 JUMPDEST
0xb92 PUSH1 0x0
0xb94 DUP1
0xb95 SLOAD
0xb96 PUSH21 0xff0000000000000000000000000000000000000000
0xbac NOT
0xbad AND
0xbae SWAP1
0xbaf SSTORE
---
0xb91: JUMPDEST 
0xb92: V973 = 0x0
0xb95: V974 = S[0x0]
0xb96: V975 = 0xff0000000000000000000000000000000000000000
0xbac: V976 = NOT 0xff0000000000000000000000000000000000000000
0xbad: V977 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V974
0xbaf: S[0x0] = V977
---
Entry stack: [V12, 0x61d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x61d]

================================

Block 0xbb0
[0xbb0:0xbb1]
---
Predecessors: [0xb91]
Successors: [0x61d]
---
0xbb0 JUMPDEST
0xbb1 JUMP
---
0xbb0: JUMPDEST 
0xbb1: JUMP 0x61d
---
Entry stack: [V12, 0x61d]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xbb2
[0xbb2:0xbcb]
---
Predecessors: [0x63f]
Successors: [0xbcc]
---
0xbb2 JUMPDEST
0xbb3 PUSH1 0x1
0xbb5 PUSH1 0xa0
0xbb7 PUSH1 0x2
0xbb9 EXP
0xbba SUB
0xbbb DUP2
0xbbc AND
0xbbd PUSH1 0x0
0xbbf SWAP1
0xbc0 DUP2
0xbc1 MSTORE
0xbc2 PUSH1 0x1
0xbc4 PUSH1 0x20
0xbc6 MSTORE
0xbc7 PUSH1 0x40
0xbc9 SWAP1
0xbca SHA3
0xbcb SLOAD
---
0xbb2: JUMPDEST 
0xbb3: V978 = 0x1
0xbb5: V979 = 0xa0
0xbb7: V980 = 0x2
0xbb9: V981 = EXP 0x2 0xa0
0xbba: V982 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbbc: V983 = AND V520 0xffffffffffffffffffffffffffffffffffffffff
0xbbd: V984 = 0x0
0xbc1: M[0x0] = V983
0xbc2: V985 = 0x1
0xbc4: V986 = 0x20
0xbc6: M[0x20] = 0x1
0xbc7: V987 = 0x40
0xbca: V988 = SHA3 0x0 0x40
0xbcb: V989 = S[V988]
---
Entry stack: [V12, 0x56e, V520]
Stack pops: 1
Stack additions: [S0, V989]
Exit stack: [V12, 0x56e, V520, V989]

================================

Block 0xbcc
[0xbcc:0xbd0]
---
Predecessors: [0xbb2]
Successors: [0x56e]
---
0xbcc JUMPDEST
0xbcd SWAP2
0xbce SWAP1
0xbcf POP
0xbd0 JUMP
---
0xbcc: JUMPDEST 
0xbd0: JUMP 0x56e
---
Entry stack: [V12, 0x56e, V520, V989]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, V989]

================================

Block 0xbd1
[0xbd1:0xbe7]
---
Predecessors: [0x670]
Successors: [0xbe8, 0xbec]
---
0xbd1 JUMPDEST
0xbd2 PUSH1 0x0
0xbd4 SLOAD
0xbd5 CALLER
0xbd6 PUSH1 0x1
0xbd8 PUSH1 0xa0
0xbda PUSH1 0x2
0xbdc EXP
0xbdd SUB
0xbde SWAP1
0xbdf DUP2
0xbe0 AND
0xbe1 SWAP2
0xbe2 AND
0xbe3 EQ
0xbe4 PUSH2 0xbec
0xbe7 JUMPI
---
0xbd1: JUMPDEST 
0xbd2: V990 = 0x0
0xbd4: V991 = S[0x0]
0xbd5: V992 = CALLER
0xbd6: V993 = 0x1
0xbd8: V994 = 0xa0
0xbda: V995 = 0x2
0xbdc: V996 = EXP 0x2 0xa0
0xbdd: V997 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbe0: V998 = AND 0xffffffffffffffffffffffffffffffffffffffff V992
0xbe2: V999 = AND V991 0xffffffffffffffffffffffffffffffffffffffff
0xbe3: V1000 = EQ V999 V998
0xbe4: V1001 = 0xbec
0xbe7: JUMPI 0xbec V1000
---
Entry stack: [V12, 0x61d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x61d]

================================

Block 0xbe8
[0xbe8:0xbeb]
---
Predecessors: [0xbd1]
Successors: []
---
0xbe8 PUSH1 0x0
0xbea DUP1
0xbeb REVERT
---
0xbe8: V1002 = 0x0
0xbeb: REVERT 0x0 0x0
---
Entry stack: [V12, 0x61d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x61d]

================================

Block 0xbec
[0xbec:0xc21]
---
Predecessors: [0xbd1]
Successors: [0xc22]
---
0xbec JUMPDEST
0xbed PUSH1 0x0
0xbef DUP1
0xbf0 SLOAD
0xbf1 PUSH21 0xff0000000000000000000000000000000000000000
0xc07 NOT
0xc08 AND
0xc09 PUSH21 0x10000000000000000000000000000000000000000
0xc1f OR
0xc20 SWAP1
0xc21 SSTORE
---
0xbec: JUMPDEST 
0xbed: V1003 = 0x0
0xbf0: V1004 = S[0x0]
0xbf1: V1005 = 0xff0000000000000000000000000000000000000000
0xc07: V1006 = NOT 0xff0000000000000000000000000000000000000000
0xc08: V1007 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V1004
0xc09: V1008 = 0x10000000000000000000000000000000000000000
0xc1f: V1009 = OR 0x10000000000000000000000000000000000000000 V1007
0xc21: S[0x0] = V1009
---
Entry stack: [V12, 0x61d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x61d]

================================

Block 0xc22
[0xc22:0xc23]
---
Predecessors: [0xbec]
Successors: [0x61d]
---
0xc22 JUMPDEST
0xc23 JUMP
---
0xc22: JUMPDEST 
0xc23: JUMP 0x61d
---
Entry stack: [V12, 0x61d]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xc24
[0xc24:0xc2b]
---
Predecessors: [0x685]
Successors: [0xdc8]
---
0xc24 JUMPDEST
0xc25 PUSH2 0xc2c
0xc28 PUSH2 0xdc8
0xc2b JUMP
---
0xc24: JUMPDEST 
0xc25: V1010 = 0xc2c
0xc28: V1011 = 0xdc8
0xc2b: JUMP 0xdc8
---
Entry stack: [V12, 0x4ad]
Stack pops: 0
Stack additions: [0xc2c]
Exit stack: [V12, 0x4ad, 0xc2c]

================================

Block 0xc2c
[0xc2c:0xc62]
---
Predecessors: [0xdc8]
Successors: [0xc63]
---
0xc2c JUMPDEST
0xc2d PUSH1 0x40
0xc2f DUP1
0xc30 MLOAD
0xc31 SWAP1
0xc32 DUP2
0xc33 ADD
0xc34 PUSH1 0x40
0xc36 MSTORE
0xc37 PUSH1 0x6
0xc39 DUP2
0xc3a MSTORE
0xc3b PUSH32 0x5448414e4b530000000000000000000000000000000000000000000000000000
0xc5c PUSH1 0x20
0xc5e DUP3
0xc5f ADD
0xc60 MSTORE
0xc61 SWAP1
0xc62 POP
---
0xc2c: JUMPDEST 
0xc2d: V1012 = 0x40
0xc30: V1013 = M[0x40]
0xc33: V1014 = ADD V1013 0x40
0xc34: V1015 = 0x40
0xc36: M[0x40] = V1014
0xc37: V1016 = 0x6
0xc3a: M[V1013] = 0x6
0xc3b: V1017 = 0x5448414e4b530000000000000000000000000000000000000000000000000000
0xc5c: V1018 = 0x20
0xc5f: V1019 = ADD V1013 0x20
0xc60: M[V1019] = 0x5448414e4b530000000000000000000000000000000000000000000000000000
---
Entry stack: [V12, 0x4ad, V1120]
Stack pops: 1
Stack additions: [V1013]
Exit stack: [V12, 0x4ad, V1013]

================================

Block 0xc63
[0xc63:0xc65]
---
Predecessors: [0xc2c]
Successors: [0x4ad]
---
0xc63 JUMPDEST
0xc64 SWAP1
0xc65 JUMP
---
0xc63: JUMPDEST 
0xc65: JUMP 0x4ad
---
Entry stack: [V12, 0x4ad, V1013]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, V1013]

================================

Block 0xc66
[0xc66:0xc6b]
---
Predecessors: [0x710]
Successors: [0x56e]
---
0xc66 JUMPDEST
0xc67 PUSH1 0x4
0xc69 SLOAD
0xc6a DUP2
0xc6b JUMP
---
0xc66: JUMPDEST 
0xc67: V1020 = 0x4
0xc69: V1021 = S[0x4]
0xc6b: JUMP 0x56e
---
Entry stack: [V12, 0x56e]
Stack pops: 1
Stack additions: [S0, V1021]
Exit stack: [V12, 0x56e, V1021]

================================

Block 0xc6c
[0xc6c:0xc7a]
---
Predecessors: [0x735]
Successors: [0xc7b, 0xc7f]
---
0xc6c JUMPDEST
0xc6d PUSH1 0x0
0xc6f DUP1
0xc70 DUP1
0xc71 DUP1
0xc72 PUSH1 0x44
0xc74 CALLDATASIZE
0xc75 LT
0xc76 ISZERO
0xc77 PUSH2 0xc7f
0xc7a JUMPI
---
0xc6c: JUMPDEST 
0xc6d: V1022 = 0x0
0xc72: V1023 = 0x44
0xc74: V1024 = CALLDATASIZE
0xc75: V1025 = LT V1024 0x44
0xc76: V1026 = ISZERO V1025
0xc77: V1027 = 0xc7f
0xc7a: JUMPI 0xc7f V1026
---
Entry stack: [V12, 0x486, V606, V608]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0]
Exit stack: [V12, 0x486, V606, V608, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xc7b
[0xc7b:0xc7e]
---
Predecessors: [0xc6c]
Successors: []
---
0xc7b PUSH1 0x0
0xc7d DUP1
0xc7e REVERT
---
0xc7b: V1028 = 0x0
0xc7e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x486, V606, V608, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x486, V606, V608, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xc7f
[0xc7f:0xc86]
---
Predecessors: [0xc6c]
Successors: [0xc87, 0xc8f]
---
0xc7f JUMPDEST
0xc80 DUP5
0xc81 ISZERO
0xc82 ISZERO
0xc83 PUSH2 0xc8f
0xc86 JUMPI
---
0xc7f: JUMPDEST 
0xc81: V1029 = ISZERO V608
0xc82: V1030 = ISZERO V1029
0xc83: V1031 = 0xc8f
0xc86: JUMPI 0xc8f V1030
---
Entry stack: [V12, 0x486, V606, V608, 0x0, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V12, 0x486, V606, V608, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xc87
[0xc87:0xc8e]
---
Predecessors: [0xc7f]
Successors: [0xd42]
---
0xc87 PUSH1 0x0
0xc89 SWAP4
0xc8a POP
0xc8b PUSH2 0xd42
0xc8e JUMP
---
0xc87: V1032 = 0x0
0xc8b: V1033 = 0xd42
0xc8e: JUMP 0xd42
---
Entry stack: [V12, 0x486, V606, V608, 0x0, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [0x0, S2, S1, S0]
Exit stack: [V12, 0x486, V606, V608, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xc8f
[0xc8f:0xcc6]
---
Predecessors: [0xc7f]
Successors: [0xcc7, 0xcca]
---
0xc8f JUMPDEST
0xc90 POP
0xc91 POP
0xc92 POP
0xc93 PUSH1 0x1
0xc95 PUSH1 0xa0
0xc97 PUSH1 0x2
0xc99 EXP
0xc9a SUB
0xc9b CALLER
0xc9c DUP2
0xc9d AND
0xc9e PUSH1 0x0
0xca0 SWAP1
0xca1 DUP2
0xca2 MSTORE
0xca3 PUSH1 0x1
0xca5 PUSH1 0x20
0xca7 MSTORE
0xca8 PUSH1 0x40
0xcaa DUP1
0xcab DUP3
0xcac SHA3
0xcad SLOAD
0xcae SWAP3
0xcaf DUP7
0xcb0 AND
0xcb1 DUP3
0xcb2 MSTORE
0xcb3 SWAP1
0xcb4 SHA3
0xcb5 SLOAD
0xcb6 DUP4
0xcb7 DUP3
0xcb8 LT
0xcb9 DUP1
0xcba ISZERO
0xcbb SWAP2
0xcbc DUP1
0xcbd DUP7
0xcbe ADD
0xcbf LT
0xcc0 SWAP1
0xcc1 DUP3
0xcc2 SWAP1
0xcc3 PUSH2 0xcca
0xcc6 JUMPI
---
0xc8f: JUMPDEST 
0xc93: V1034 = 0x1
0xc95: V1035 = 0xa0
0xc97: V1036 = 0x2
0xc99: V1037 = EXP 0x2 0xa0
0xc9a: V1038 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc9b: V1039 = CALLER
0xc9d: V1040 = AND 0xffffffffffffffffffffffffffffffffffffffff V1039
0xc9e: V1041 = 0x0
0xca2: M[0x0] = V1040
0xca3: V1042 = 0x1
0xca5: V1043 = 0x20
0xca7: M[0x20] = 0x1
0xca8: V1044 = 0x40
0xcac: V1045 = SHA3 0x0 0x40
0xcad: V1046 = S[V1045]
0xcb0: V1047 = AND V606 0xffffffffffffffffffffffffffffffffffffffff
0xcb2: M[0x0] = V1047
0xcb4: V1048 = SHA3 0x0 0x40
0xcb5: V1049 = S[V1048]
0xcb8: V1050 = LT V1046 V608
0xcba: V1051 = ISZERO V1050
0xcbe: V1052 = ADD V608 V1049
0xcbf: V1053 = LT V1052 V1049
0xcc3: V1054 = 0xcca
0xcc6: JUMPI 0xcca V1050
---
Entry stack: [V12, 0x486, V606, V608, 0x0, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, V1046, V1051, V1053, V1051]
Exit stack: [V12, 0x486, V606, V608, 0x0, V1046, V1051, V1053, V1051]

================================

Block 0xcc7
[0xcc7:0xcc9]
---
Predecessors: [0xc8f]
Successors: [0xcca]
---
0xcc7 POP
0xcc8 DUP1
0xcc9 ISZERO
---
0xcc9: V1055 = ISZERO V1053
---
Entry stack: [V12, 0x486, V606, V608, 0x0, V1046, V1051, V1053, V1051]
Stack pops: 2
Stack additions: [S1, V1055]
Exit stack: [V12, 0x486, V606, V608, 0x0, V1046, V1051, V1053, V1055]

================================

Block 0xcca
[0xcca:0xccf]
---
Predecessors: [0xc8f, 0xcc7]
Successors: [0xcd0, 0xd3d]
---
0xcca JUMPDEST
0xccb ISZERO
0xccc PUSH2 0xd3d
0xccf JUMPI
---
0xcca: JUMPDEST 
0xccb: V1056 = ISZERO S0
0xccc: V1057 = 0xd3d
0xccf: JUMPI 0xd3d V1056
---
Entry stack: [V12, 0x486, V606, V608, 0x0, V1046, V1051, V1053, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x486, V606, V608, 0x0, V1046, V1051, V1053]

================================

Block 0xcd0
[0xcd0:0xd3c]
---
Predecessors: [0xcca]
Successors: [0xd42]
---
0xcd0 PUSH1 0x1
0xcd2 PUSH1 0xa0
0xcd4 PUSH1 0x2
0xcd6 EXP
0xcd7 SUB
0xcd8 CALLER
0xcd9 DUP2
0xcda AND
0xcdb PUSH1 0x0
0xcdd DUP2
0xcde DUP2
0xcdf MSTORE
0xce0 PUSH1 0x1
0xce2 PUSH1 0x20
0xce4 MSTORE
0xce5 PUSH1 0x40
0xce7 DUP1
0xce8 DUP3
0xce9 SHA3
0xcea DUP1
0xceb SLOAD
0xcec DUP11
0xced SWAP1
0xcee SUB
0xcef SWAP1
0xcf0 SSTORE
0xcf1 SWAP3
0xcf2 DUP10
0xcf3 AND
0xcf4 DUP1
0xcf5 DUP3
0xcf6 MSTORE
0xcf7 SWAP1
0xcf8 DUP4
0xcf9 SWAP1
0xcfa SHA3
0xcfb DUP1
0xcfc SLOAD
0xcfd DUP10
0xcfe ADD
0xcff SWAP1
0xd00 SSTORE
0xd01 SWAP2
0xd02 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xd23 SWAP1
0xd24 DUP9
0xd25 SWAP1
0xd26 MLOAD
0xd27 SWAP1
0xd28 DUP2
0xd29 MSTORE
0xd2a PUSH1 0x20
0xd2c ADD
0xd2d PUSH1 0x40
0xd2f MLOAD
0xd30 DUP1
0xd31 SWAP2
0xd32 SUB
0xd33 SWAP1
0xd34 LOG3
0xd35 PUSH1 0x1
0xd37 SWAP4
0xd38 POP
0xd39 PUSH2 0xd42
0xd3c JUMP
---
0xcd0: V1058 = 0x1
0xcd2: V1059 = 0xa0
0xcd4: V1060 = 0x2
0xcd6: V1061 = EXP 0x2 0xa0
0xcd7: V1062 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcd8: V1063 = CALLER
0xcda: V1064 = AND 0xffffffffffffffffffffffffffffffffffffffff V1063
0xcdb: V1065 = 0x0
0xcdf: M[0x0] = V1064
0xce0: V1066 = 0x1
0xce2: V1067 = 0x20
0xce4: M[0x20] = 0x1
0xce5: V1068 = 0x40
0xce9: V1069 = SHA3 0x0 0x40
0xceb: V1070 = S[V1069]
0xcee: V1071 = SUB V1070 V608
0xcf0: S[V1069] = V1071
0xcf3: V1072 = AND V606 0xffffffffffffffffffffffffffffffffffffffff
0xcf6: M[0x0] = V1072
0xcfa: V1073 = SHA3 0x0 0x40
0xcfc: V1074 = S[V1073]
0xcfe: V1075 = ADD V608 V1074
0xd00: S[V1073] = V1075
0xd02: V1076 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xd26: V1077 = M[0x40]
0xd29: M[V1077] = V608
0xd2a: V1078 = 0x20
0xd2c: V1079 = ADD 0x20 V1077
0xd2d: V1080 = 0x40
0xd2f: V1081 = M[0x40]
0xd32: V1082 = SUB V1079 V1081
0xd34: LOG V1081 V1082 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V1064 V1072
0xd35: V1083 = 0x1
0xd39: V1084 = 0xd42
0xd3c: JUMP 0xd42
---
Entry stack: [V12, 0x486, V606, V608, 0x0, V1046, V1051, V1053]
Stack pops: 6
Stack additions: [S5, S4, 0x1, S2, S1, S0]
Exit stack: [V12, 0x486, V606, V608, 0x1, V1046, V1051, V1053]

================================

Block 0xd3d
[0xd3d:0xd41]
---
Predecessors: [0xcca]
Successors: [0xd42]
---
0xd3d JUMPDEST
0xd3e PUSH1 0x0
0xd40 SWAP4
0xd41 POP
---
0xd3d: JUMPDEST 
0xd3e: V1085 = 0x0
---
Entry stack: [V12, 0x486, V606, V608, 0x0, V1046, V1051, V1053]
Stack pops: 4
Stack additions: [0x0, S2, S1, S0]
Exit stack: [V12, 0x486, V606, V608, 0x0, V1046, V1051, V1053]

================================

Block 0xd42
[0xd42:0xd42]
---
Predecessors: [0xc87, 0xcd0, 0xd3d]
Successors: [0xd43]
---
0xd42 JUMPDEST
---
0xd42: JUMPDEST 
---
Entry stack: [V12, 0x486, V606, V608, {0x0, 0x1}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x486, V606, V608, {0x0, 0x1}, S2, S1, S0]

================================

Block 0xd43
[0xd43:0xd4b]
---
Predecessors: [0xd42]
Successors: [0x486]
---
0xd43 JUMPDEST
0xd44 POP
0xd45 POP
0xd46 POP
0xd47 SWAP3
0xd48 SWAP2
0xd49 POP
0xd4a POP
0xd4b JUMP
---
0xd43: JUMPDEST 
0xd4b: JUMP 0x486
---
Entry stack: [V12, 0x486, V606, V608, {0x0, 0x1}, S2, S1, S0]
Stack pops: 7
Stack additions: [S3]
Exit stack: [V12, {0x0, 0x1}]

================================

Block 0xd4c
[0xd4c:0xd73]
---
Predecessors: [0x76b]
Successors: [0xd74]
---
0xd4c JUMPDEST
0xd4d PUSH1 0x3
0xd4f SLOAD
0xd50 PUSH1 0x5
0xd52 SLOAD
0xd53 PUSH1 0x4
0xd55 SLOAD
0xd56 PUSH1 0x0
0xd58 SLOAD
0xd59 PUSH21 0x10000000000000000000000000000000000000000
0xd6f SWAP1
0xd70 DIV
0xd71 PUSH1 0xff
0xd73 AND
---
0xd4c: JUMPDEST 
0xd4d: V1086 = 0x3
0xd4f: V1087 = S[0x3]
0xd50: V1088 = 0x5
0xd52: V1089 = S[0x5]
0xd53: V1090 = 0x4
0xd55: V1091 = S[0x4]
0xd56: V1092 = 0x0
0xd58: V1093 = S[0x0]
0xd59: V1094 = 0x10000000000000000000000000000000000000000
0xd70: V1095 = DIV V1093 0x10000000000000000000000000000000000000000
0xd71: V1096 = 0xff
0xd73: V1097 = AND 0xff V1095
---
Entry stack: [V12, 0x773]
Stack pops: 0
Stack additions: [V1087, V1089, V1091, V1097]
Exit stack: [V12, 0x773, V1087, V1089, V1091, V1097]

================================

Block 0xd74
[0xd74:0xd79]
---
Predecessors: [0xd4c]
Successors: [0x773]
---
0xd74 JUMPDEST
0xd75 SWAP1
0xd76 SWAP2
0xd77 SWAP3
0xd78 SWAP4
0xd79 JUMP
---
0xd74: JUMPDEST 
0xd79: JUMP 0x773
---
Entry stack: [V12, 0x773, V1087, V1089, V1091, V1097]
Stack pops: 5
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, V1087, V1089, V1091, V1097]

================================

Block 0xd7a
[0xd7a:0xd9a]
---
Predecessors: [0x7aa]
Successors: [0x486]
---
0xd7a JUMPDEST
0xd7b PUSH1 0x0
0xd7d SLOAD
0xd7e PUSH21 0x10000000000000000000000000000000000000000
0xd94 SWAP1
0xd95 DIV
0xd96 PUSH1 0xff
0xd98 AND
0xd99 DUP2
0xd9a JUMP
---
0xd7a: JUMPDEST 
0xd7b: V1098 = 0x0
0xd7d: V1099 = S[0x0]
0xd7e: V1100 = 0x10000000000000000000000000000000000000000
0xd95: V1101 = DIV V1099 0x10000000000000000000000000000000000000000
0xd96: V1102 = 0xff
0xd98: V1103 = AND 0xff V1101
0xd9a: JUMP 0x486
---
Entry stack: [V12, 0x486]
Stack pops: 1
Stack additions: [S0, V1103]
Exit stack: [V12, 0x486, V1103]

================================

Block 0xd9b
[0xd9b:0xdc1]
---
Predecessors: [0x7d1]
Successors: [0xdc2]
---
0xd9b JUMPDEST
0xd9c PUSH1 0x1
0xd9e PUSH1 0xa0
0xda0 PUSH1 0x2
0xda2 EXP
0xda3 SUB
0xda4 DUP1
0xda5 DUP4
0xda6 AND
0xda7 PUSH1 0x0
0xda9 SWAP1
0xdaa DUP2
0xdab MSTORE
0xdac PUSH1 0x2
0xdae PUSH1 0x20
0xdb0 SWAP1
0xdb1 DUP2
0xdb2 MSTORE
0xdb3 PUSH1 0x40
0xdb5 DUP1
0xdb6 DUP4
0xdb7 SHA3
0xdb8 SWAP4
0xdb9 DUP6
0xdba AND
0xdbb DUP4
0xdbc MSTORE
0xdbd SWAP3
0xdbe SWAP1
0xdbf MSTORE
0xdc0 SHA3
0xdc1 SLOAD
---
0xd9b: JUMPDEST 
0xd9c: V1104 = 0x1
0xd9e: V1105 = 0xa0
0xda0: V1106 = 0x2
0xda2: V1107 = EXP 0x2 0xa0
0xda3: V1108 = SUB 0x10000000000000000000000000000000000000000 0x1
0xda6: V1109 = AND V666 0xffffffffffffffffffffffffffffffffffffffff
0xda7: V1110 = 0x0
0xdab: M[0x0] = V1109
0xdac: V1111 = 0x2
0xdae: V1112 = 0x20
0xdb2: M[0x20] = 0x2
0xdb3: V1113 = 0x40
0xdb7: V1114 = SHA3 0x0 0x40
0xdba: V1115 = AND V669 0xffffffffffffffffffffffffffffffffffffffff
0xdbc: M[0x0] = V1115
0xdbf: M[0x20] = V1114
0xdc0: V1116 = SHA3 0x0 0x40
0xdc1: V1117 = S[V1116]
---
Entry stack: [V12, 0x56e, V666, V669]
Stack pops: 2
Stack additions: [S1, S0, V1117]
Exit stack: [V12, 0x56e, V666, V669, V1117]

================================

Block 0xdc2
[0xdc2:0xdc7]
---
Predecessors: [0xd9b]
Successors: [0x56e]
---
0xdc2 JUMPDEST
0xdc3 SWAP3
0xdc4 SWAP2
0xdc5 POP
0xdc6 POP
0xdc7 JUMP
---
0xdc2: JUMPDEST 
0xdc7: JUMP 0x56e
---
Entry stack: [V12, 0x56e, V666, V669, V1117]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, V1117]

================================

Block 0xdc8
[0xdc8:0xdd9]
---
Predecessors: [0x91c, 0xc24]
Successors: [0x924, 0xc2c]
---
0xdc8 JUMPDEST
0xdc9 PUSH1 0x20
0xdcb PUSH1 0x40
0xdcd MLOAD
0xdce SWAP1
0xdcf DUP2
0xdd0 ADD
0xdd1 PUSH1 0x40
0xdd3 MSTORE
0xdd4 PUSH1 0x0
0xdd6 DUP2
0xdd7 MSTORE
0xdd8 SWAP1
0xdd9 JUMP
---
0xdc8: JUMPDEST 
0xdc9: V1118 = 0x20
0xdcb: V1119 = 0x40
0xdcd: V1120 = M[0x40]
0xdd0: V1121 = ADD V1120 0x20
0xdd1: V1122 = 0x40
0xdd3: M[0x40] = V1121
0xdd4: V1123 = 0x0
0xdd7: M[V1120] = 0x0
0xdd9: JUMP {0x924, 0xc2c}
---
Entry stack: [V12, 0x4ad, {0x924, 0xc2c}]
Stack pops: 1
Stack additions: [V1120]
Exit stack: [V12, 0x4ad, V1120]

================================

Block 0xdda
[0xdda:0xe08]
---
Predecessors: []
Successors: []
---
0xdda STOP
0xddb LOG1
0xddc PUSH6 0x627a7a723058
0xde3 SHA3
0xde4 TIMESTAMP
0xde5 MISSING 0xd0
0xde6 MISSING 0xdf
0xde7 MISSING 0xac
0xde8 LOG2
0xde9 MISSING 0xca
0xdea MISSING 0xac
0xdeb MISSING 0xe7
0xdec DUP16
0xded MUL
0xdee GT
0xdef MISSING 0xdb
0xdf0 MISSING 0x21
0xdf1 MISSING 0xee
0xdf2 DUP4
0xdf3 PUSH21 0x4a6d61f0a840c95eeca261579634284f0029
---
0xdda: STOP 
0xddb: LOG S0 S1 S2
0xddc: V1124 = 0x627a7a723058
0xde3: V1125 = SHA3 0x627a7a723058 S3
0xde4: V1126 = TIMESTAMP
0xde5: MISSING 0xd0
0xde6: MISSING 0xdf
0xde7: MISSING 0xac
0xde8: LOG S0 S1 S2 S3
0xde9: MISSING 0xca
0xdea: MISSING 0xac
0xdeb: MISSING 0xe7
0xded: V1127 = MUL S15 S0
0xdee: V1128 = GT V1127 S1
0xdef: MISSING 0xdb
0xdf0: MISSING 0x21
0xdf1: MISSING 0xee
0xdf3: V1129 = 0x4a6d61f0a840c95eeca261579634284f0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V1126, V1125, V1128, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, 0x4a6d61f0a840c95eeca261579634284f0029, S3, S0, S1, S2, S3]
Exit stack: []

================================

Function 0:
Public function signature: 0x356667f
Entry block: 0x467
Exit block: 0x486
Body: 0x467, 0x46e, 0x472, 0x486, 0x7fd, 0x819, 0x81d, 0x873, 0x877, 0x884, 0x888, 0x8f4, 0x8f8, 0x905, 0x909, 0x915

Function 1:
Public function signature: 0x6fdde03
Entry block: 0x49a
Exit block: 0x517
Body: 0x49a, 0x4a1, 0x4a5, 0x4ad, 0x4d1, 0x4da, 0x4e2, 0x4ea, 0x4fe, 0x517, 0x91c, 0x924, 0x95b

Function 2:
Public function signature: 0x95ea7b3
Entry block: 0x525
Exit block: 0x486
Body: 0x486, 0x525, 0x52c, 0x530, 0x95e, 0x96a, 0x993, 0x999, 0x9a0, 0xa04

Function 3:
Public function signature: 0xdcf4b8f
Entry block: 0x55b
Exit block: 0x56e
Body: 0x55b, 0x562, 0x566, 0x56e, 0xa0a

Function 4:
Public function signature: 0x18160ddd
Entry block: 0x580
Exit block: 0x56e
Body: 0x56e, 0x580, 0x587, 0x58b, 0xa10

Function 5:
Public function signature: 0x23b872dd
Entry block: 0x5a5
Exit block: 0x486
Body: 0x486, 0x5a5, 0x5ac, 0x5b0, 0xa16, 0xa27, 0xa2b, 0xa33, 0xa3b, 0xa98, 0xa9a, 0xaa1, 0xaa4, 0xaaa, 0xb36, 0xb3b, 0xb3c

Function 6:
Public function signature: 0x313ce567
Entry block: 0x5e1
Exit block: 0x5f4
Body: 0x5e1, 0x5e8, 0x5ec, 0x5f4, 0xb48, 0xb4b

Function 7:
Public function signature: 0x41c0e1b5
Entry block: 0x60a
Exit block: 0x61d
Body: 0x60a, 0x611, 0x615, 0x61d, 0xb4e, 0xb66, 0xb73, 0xb74

Function 8:
Public function signature: 0x64acdb77
Entry block: 0x61f
Exit block: 0x61d
Body: 0x61d, 0x61f, 0x626, 0x62a, 0xb76, 0xb8d, 0xb91, 0xbb0

Function 9:
Public function signature: 0x70a08231
Entry block: 0x634
Exit block: 0x56e
Body: 0x56e, 0x634, 0x63b, 0x63f, 0xbb2, 0xbcc

Function 10:
Public function signature: 0x8f580996
Entry block: 0x665
Exit block: 0x61d
Body: 0x61d, 0x665, 0x66c, 0x670, 0xbd1, 0xbe8, 0xbec, 0xc22

Function 11:
Public function signature: 0x95d89b41
Entry block: 0x67a
Exit block: 0x517
Body: 0x4ad, 0x4d1, 0x4da, 0x4e2, 0x4ea, 0x4fe, 0x517, 0x67a, 0x681, 0x685, 0xc24, 0xc2c, 0xc63

Function 12:
Public function signature: 0x98b01fe3
Entry block: 0x705
Exit block: 0x56e
Body: 0x56e, 0x705, 0x70c, 0x710, 0xc66

Function 13:
Public function signature: 0xa9059cbb
Entry block: 0x72a
Exit block: 0x486
Body: 0x486, 0x72a, 0x731, 0x735, 0xc6c, 0xc7b, 0xc7f, 0xc87, 0xc8f, 0xcc7, 0xcca, 0xcd0, 0xd3d, 0xd42, 0xd43

Function 14:
Public function signature: 0xc59d4847
Entry block: 0x760
Exit block: 0x773
Body: 0x760, 0x767, 0x76b, 0x773, 0xd4c, 0xd74

Function 15:
Public function signature: 0xda040c0f
Entry block: 0x79f
Exit block: 0x486
Body: 0x486, 0x79f, 0x7a6, 0x7aa, 0xd7a

Function 16:
Public function signature: 0xdd62ed3e
Entry block: 0x7c6
Exit block: 0x56e
Body: 0x56e, 0x7c6, 0x7cd, 0x7d1, 0xd9b, 0xdc2

Function 17:
Public fallback function
Entry block: 0xd5
Exit block: 0x461
Body: 0xd5, 0xd6, 0xf3, 0xf7, 0xff, 0x103, 0x133, 0x137, 0x158, 0x1b5, 0x1b9, 0x1d4, 0x20c, 0x20f, 0x23f, 0x245, 0x248, 0x24c, 0x27c, 0x282, 0x285, 0x289, 0x2b9, 0x2bf, 0x2c2, 0x2c6, 0x2f6, 0x2fc, 0x2ff, 0x303, 0x333, 0x339, 0x33c, 0x340, 0x370, 0x376, 0x379, 0x37d, 0x3ad, 0x3b3, 0x3b6, 0x3ba, 0x3cb, 0x3d1, 0x3d4, 0x3fe, 0x3ff, 0x461

