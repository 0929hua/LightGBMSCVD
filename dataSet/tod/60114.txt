Block 0x0
[0x0:0x9]
---
Predecessors: []
Successors: [0xa, 0x3a]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH1 0x3a
0x9 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x3a
0x9: JUMPI 0x3a V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa
[0xa:0x36]
---
Predecessors: [0x0]
Successors: [0x37, 0xae]
---
0xa PUSH1 0x0
0xc CALLDATALOAD
0xd PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2b SWAP1
0x2c DIV
0x2d DUP1
0x2e PUSH4 0x986ccc7f
0x33 EQ
0x34 PUSH1 0xae
0x36 JUMPI
---
0xa: V5 = 0x0
0xc: V6 = CALLDATALOAD 0x0
0xd: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2c: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0x986ccc7f
0x33: V10 = EQ 0x986ccc7f V8
0x34: V11 = 0xae
0x36: JUMPI 0xae V10
---
Entry stack: []
Stack pops: 0
Stack additions: [V8]
Exit stack: [V8]

================================

Block 0x37
[0x37:0x39]
---
Predecessors: [0xa]
Successors: [0x3a]
---
0x37 PUSH1 0x3a
0x39 JUMP
---
0x37: V12 = 0x3a
0x39: JUMP 0x3a
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x3a
[0x3a:0x3c]
---
Predecessors: [0x0, 0x37]
Successors: [0x3d]
---
0x3a JUMPDEST
0x3b PUSH1 0xac
---
0x3a: JUMPDEST 
0x3b: V13 = 0xac
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xac]
Exit stack: [V8, 0xac]

================================

Block 0x3d
[0x3d:0xa9]
---
Predecessors: [0x3a]
Successors: [0xaa]
---
0x3d JUMPDEST
0x3e PUSH1 0x0
0x40 PUSH1 0x0
0x42 SWAP1
0x43 SLOAD
0x44 SWAP1
0x45 PUSH2 0x100
0x48 EXP
0x49 SWAP1
0x4a DIV
0x4b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x60 AND
0x61 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x76 AND
0x77 PUSH1 0x0
0x79 ADDRESS
0x7a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8f AND
0x90 BALANCE
0x91 PUSH1 0x40
0x93 MLOAD
0x94 DUP1
0x95 SWAP1
0x96 POP
0x97 PUSH1 0x0
0x99 PUSH1 0x40
0x9b MLOAD
0x9c DUP1
0x9d DUP4
0x9e SUB
0x9f DUP2
0xa0 DUP6
0xa1 DUP9
0xa2 DUP9
0xa3 CALL
0xa4 SWAP4
0xa5 POP
0xa6 POP
0xa7 POP
0xa8 POP
0xa9 POP
---
0x3d: JUMPDEST 
0x3e: V14 = 0x0
0x40: V15 = 0x0
0x43: V16 = S[0x0]
0x45: V17 = 0x100
0x48: V18 = EXP 0x100 0x0
0x4a: V19 = DIV V16 0x1
0x4b: V20 = 0xffffffffffffffffffffffffffffffffffffffff
0x60: V21 = AND 0xffffffffffffffffffffffffffffffffffffffff V19
0x61: V22 = 0xffffffffffffffffffffffffffffffffffffffff
0x76: V23 = AND 0xffffffffffffffffffffffffffffffffffffffff V21
0x77: V24 = 0x0
0x79: V25 = ADDRESS
0x7a: V26 = 0xffffffffffffffffffffffffffffffffffffffff
0x8f: V27 = AND 0xffffffffffffffffffffffffffffffffffffffff V25
0x90: V28 = BALANCE V27
0x91: V29 = 0x40
0x93: V30 = M[0x40]
0x97: V31 = 0x0
0x99: V32 = 0x40
0x9b: V33 = M[0x40]
0x9e: V34 = SUB V30 V33
0xa3: V35 = CALL 0x0 V23 V28 V33 V34 V33 0x0
---
Entry stack: [V8, 0xac]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xac]

================================

Block 0xaa
[0xaa:0xab]
---
Predecessors: [0x3d]
Successors: [0xac]
---
0xaa JUMPDEST
0xab JUMP
---
0xaa: JUMPDEST 
0xab: JUMP 0xac
---
Entry stack: [V8, 0xac]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0xac
[0xac:0xad]
---
Predecessors: [0xaa]
Successors: []
---
0xac JUMPDEST
0xad STOP
---
0xac: JUMPDEST 
0xad: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0xae
[0xae:0xc1]
---
Predecessors: [0xa]
Successors: [0xc4]
---
0xae JUMPDEST
0xaf PUSH1 0xc2
0xb1 PUSH1 0x4
0xb3 DUP1
0xb4 DUP1
0xb5 CALLDATALOAD
0xb6 SWAP1
0xb7 PUSH1 0x20
0xb9 ADD
0xba SWAP1
0xbb SWAP2
0xbc SWAP1
0xbd POP
0xbe POP
0xbf PUSH1 0xc4
0xc1 JUMP
---
0xae: JUMPDEST 
0xaf: V36 = 0xc2
0xb1: V37 = 0x4
0xb5: V38 = CALLDATALOAD 0x4
0xb7: V39 = 0x20
0xb9: V40 = ADD 0x20 0x4
0xbf: V41 = 0xc4
0xc1: JUMP 0xc4
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xc2, V38]
Exit stack: [V8, 0xc2, V38]

================================

Block 0xc2
[0xc2:0xc3]
---
Predecessors: [0xf0]
Successors: []
---
0xc2 JUMPDEST
0xc3 STOP
---
0xc2: JUMPDEST 
0xc3: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0xc4
[0xc4:0xef]
---
Predecessors: [0xae]
Successors: [0xf0]
---
0xc4 JUMPDEST
0xc5 DUP1
0xc6 PUSH1 0x0
0xc8 PUSH1 0x0
0xca PUSH2 0x100
0xcd EXP
0xce DUP2
0xcf SLOAD
0xd0 DUP2
0xd1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe6 MUL
0xe7 NOT
0xe8 AND
0xe9 SWAP1
0xea DUP4
0xeb MUL
0xec OR
0xed SWAP1
0xee SSTORE
0xef POP
---
0xc4: JUMPDEST 
0xc6: V42 = 0x0
0xc8: V43 = 0x0
0xca: V44 = 0x100
0xcd: V45 = EXP 0x100 0x0
0xcf: V46 = S[0x0]
0xd1: V47 = 0xffffffffffffffffffffffffffffffffffffffff
0xe6: V48 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xe7: V49 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xe8: V50 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V46
0xeb: V51 = MUL V38 0x1
0xec: V52 = OR V51 V50
0xee: S[0x0] = V52
---
Entry stack: [V8, 0xc2, V38]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8, 0xc2, V38]

================================

Block 0xf0
[0xf0:0xf2]
---
Predecessors: [0xc4]
Successors: [0xc2]
---
0xf0 JUMPDEST
0xf1 POP
0xf2 JUMP
---
0xf0: JUMPDEST 
0xf2: JUMP 0xc2
---
Entry stack: [V8, 0xc2, V38]
Stack pops: 2
Stack additions: []
Exit stack: [V8]

================================

Function 0:
Public function signature: 0x986ccc7f
Entry block: 0xae
Exit block: 0xc2
Body: 0xae, 0xc2, 0xc4, 0xf0

Function 1:
Public fallback function
Entry block: 0x37
Exit block: 0xac
Body: 0x37, 0x3a, 0x3d, 0xaa, 0xac

