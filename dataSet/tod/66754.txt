Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xbf]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xbf
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xbf
0xa: JUMPI 0xbf V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x263]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x13af4035
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x263
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x13af4035
0x20: V14 = EQ V12 0x13af4035
0x21: V15 = 0x263
0x24: JUMPI 0x263 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x281]
---
0x25 DUP1
0x26 PUSH4 0x3ccfd60b
0x2b EQ
0x2c PUSH2 0x281
0x2f JUMPI
---
0x26: V16 = 0x3ccfd60b
0x2b: V17 = EQ 0x3ccfd60b V12
0x2c: V18 = 0x281
0x2f: JUMPI 0x281 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x293]
---
0x30 DUP1
0x31 PUSH4 0x457f4d41
0x36 EQ
0x37 PUSH2 0x293
0x3a JUMPI
---
0x31: V19 = 0x457f4d41
0x36: V20 = EQ 0x457f4d41 V12
0x37: V21 = 0x293
0x3a: JUMPI 0x293 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x2bf]
---
0x3b DUP1
0x3c PUSH4 0x590e1ae3
0x41 EQ
0x42 PUSH2 0x2bf
0x45 JUMPI
---
0x3c: V22 = 0x590e1ae3
0x41: V23 = EQ 0x590e1ae3 V12
0x42: V24 = 0x2bf
0x45: JUMPI 0x2bf V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x2d1]
---
0x46 DUP1
0x47 PUSH4 0x79502c55
0x4c EQ
0x4d PUSH2 0x2d1
0x50 JUMPI
---
0x47: V25 = 0x79502c55
0x4c: V26 = EQ 0x79502c55 V12
0x4d: V27 = 0x2d1
0x50: JUMPI 0x2d1 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x322]
---
0x51 DUP1
0x52 PUSH4 0x83197ef0
0x57 EQ
0x58 PUSH2 0x322
0x5b JUMPI
---
0x52: V28 = 0x83197ef0
0x57: V29 = EQ 0x83197ef0 V12
0x58: V30 = 0x322
0x5b: JUMPI 0x322 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x334]
---
0x5c DUP1
0x5d PUSH4 0x890814f8
0x62 EQ
0x63 PUSH2 0x334
0x66 JUMPI
---
0x5d: V31 = 0x890814f8
0x62: V32 = EQ 0x890814f8 V12
0x63: V33 = 0x334
0x66: JUMPI 0x334 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x35c]
---
0x67 DUP1
0x68 PUSH4 0x8da5cb5b
0x6d EQ
0x6e PUSH2 0x35c
0x71 JUMPI
---
0x68: V34 = 0x8da5cb5b
0x6d: V35 = EQ 0x8da5cb5b V12
0x6e: V36 = 0x35c
0x71: JUMPI 0x35c V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x388]
---
0x72 DUP1
0x73 PUSH4 0x8f4ffcb1
0x78 EQ
0x79 PUSH2 0x388
0x7c JUMPI
---
0x73: V37 = 0x8f4ffcb1
0x78: V38 = EQ 0x8f4ffcb1 V12
0x79: V39 = 0x388
0x7c: JUMPI 0x388 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x3f6]
---
0x7d DUP1
0x7e PUSH4 0x943dfef1
0x83 EQ
0x84 PUSH2 0x3f6
0x87 JUMPI
---
0x7e: V40 = 0x943dfef1
0x83: V41 = EQ 0x943dfef1 V12
0x84: V42 = 0x3f6
0x87: JUMPI 0x3f6 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x422]
---
0x88 DUP1
0x89 PUSH4 0xad044f49
0x8e EQ
0x8f PUSH2 0x422
0x92 JUMPI
---
0x89: V43 = 0xad044f49
0x8e: V44 = EQ 0xad044f49 V12
0x8f: V45 = 0x422
0x92: JUMPI 0x422 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x444]
---
0x93 DUP1
0x94 PUSH4 0xb60d4288
0x99 EQ
0x9a PUSH2 0x444
0x9d JUMPI
---
0x94: V46 = 0xb60d4288
0x99: V47 = EQ 0xb60d4288 V12
0x9a: V48 = 0x444
0x9d: JUMPI 0x444 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x470]
---
0x9e DUP1
0x9f PUSH4 0xc65d15b9
0xa4 EQ
0xa5 PUSH2 0x470
0xa8 JUMPI
---
0x9f: V49 = 0xc65d15b9
0xa4: V50 = EQ 0xc65d15b9 V12
0xa5: V51 = 0x470
0xa8: JUMPI 0x470 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x500]
---
0xa9 DUP1
0xaa PUSH4 0xcc6cb19a
0xaf EQ
0xb0 PUSH2 0x500
0xb3 JUMPI
---
0xaa: V52 = 0xcc6cb19a
0xaf: V53 = EQ 0xcc6cb19a V12
0xb0: V54 = 0x500
0xb3: JUMPI 0x500 V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x52e]
---
0xb4 DUP1
0xb5 PUSH4 0xd31fdffd
0xba EQ
0xbb PUSH2 0x52e
0xbe JUMPI
---
0xb5: V55 = 0xd31fdffd
0xba: V56 = EQ 0xd31fdffd V12
0xbb: V57 = 0x52e
0xbe: JUMPI 0x52e V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc2]
---
Predecessors: [0x0, 0xb4]
Successors: [0xc3]
---
0xbf JUMPDEST
0xc0 PUSH2 0x261
---
0xbf: JUMPDEST 
0xc0: V58 = 0x261
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x261]
Exit stack: [V12, 0x261]

================================

Block 0xc3
[0xc3:0xd7]
---
Predecessors: [0xbf]
Successors: [0xd8, 0xde]
---
0xc3 JUMPDEST
0xc4 PUSH1 0x0
0xc6 PUSH1 0x0
0xc8 PUSH1 0x7
0xca PUSH1 0x3
0xcc ADD
0xcd SLOAD
0xce PUSH1 0x5
0xd0 SLOAD
0xd1 LT
0xd2 DUP1
0xd3 ISZERO
0xd4 PUSH2 0xde
0xd7 JUMPI
---
0xc3: JUMPDEST 
0xc4: V59 = 0x0
0xc6: V60 = 0x0
0xc8: V61 = 0x7
0xca: V62 = 0x3
0xcc: V63 = ADD 0x3 0x7
0xcd: V64 = S[0xa]
0xce: V65 = 0x5
0xd0: V66 = S[0x5]
0xd1: V67 = LT V66 V64
0xd3: V68 = ISZERO V67
0xd4: V69 = 0xde
0xd7: JUMPI 0xde V68
---
Entry stack: [V12, 0x261]
Stack pops: 0
Stack additions: [0x0, 0x0, V67]
Exit stack: [V12, 0x261, 0x0, 0x0, V67]

================================

Block 0xd8
[0xd8:0xdd]
---
Predecessors: [0xc3]
Successors: [0xde]
---
0xd8 POP
0xd9 PUSH1 0x7
0xdb SLOAD
0xdc NUMBER
0xdd GT
---
0xd9: V70 = 0x7
0xdb: V71 = S[0x7]
0xdc: V72 = NUMBER
0xdd: V73 = GT V72 V71
---
Entry stack: [V12, 0x261, 0x0, 0x0, V67]
Stack pops: 1
Stack additions: [V73]
Exit stack: [V12, 0x261, 0x0, 0x0, V73]

================================

Block 0xde
[0xde:0xe4]
---
Predecessors: [0xc3, 0xd8]
Successors: [0xe5, 0xeb]
---
0xde JUMPDEST
0xdf DUP1
0xe0 ISZERO
0xe1 PUSH2 0xeb
0xe4 JUMPI
---
0xde: JUMPDEST 
0xe0: V74 = ISZERO S0
0xe1: V75 = 0xeb
0xe4: JUMPI 0xeb V74
---
Entry stack: [V12, 0x261, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x261, 0x0, 0x0, S0]

================================

Block 0xe5
[0xe5:0xea]
---
Predecessors: [0xde]
Successors: [0xeb]
---
0xe5 POP
0xe6 PUSH1 0x8
0xe8 SLOAD
0xe9 NUMBER
0xea LT
---
0xe6: V76 = 0x8
0xe8: V77 = S[0x8]
0xe9: V78 = NUMBER
0xea: V79 = LT V78 V77
---
Entry stack: [V12, 0x261, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: [V79]
Exit stack: [V12, 0x261, 0x0, 0x0, V79]

================================

Block 0xeb
[0xeb:0xf4]
---
Predecessors: [0xde, 0xe5]
Successors: [0xf5, 0xf9]
---
0xeb JUMPDEST
0xec SWAP1
0xed POP
0xee DUP1
0xef ISZERO
0xf0 ISZERO
0xf1 PUSH2 0xf9
0xf4 JUMPI
---
0xeb: JUMPDEST 
0xef: V80 = ISZERO S0
0xf0: V81 = ISZERO V80
0xf1: V82 = 0xf9
0xf4: JUMPI 0xf9 V81
---
Entry stack: [V12, 0x261, 0x0, 0x0, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x261, 0x0, S0]

================================

Block 0xf5
[0xf5:0xf8]
---
Predecessors: [0xeb]
Successors: []
---
0xf5 PUSH2 0x0
0xf8 JUMP
---
0xf5: V83 = 0x0
0xf8: THROW 
---
Entry stack: [V12, 0x261, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x261, 0x0, S0]

================================

Block 0xf9
[0xf9:0x161]
---
Predecessors: [0xeb]
Successors: [0x54c]
---
0xf9 JUMPDEST
0xfa PUSH1 0x40
0xfc MLOAD
0xfd CALLVALUE
0xfe SWAP1
0xff PUSH1 0x1
0x101 PUSH1 0xa0
0x103 PUSH1 0x2
0x105 EXP
0x106 SUB
0x107 CALLER
0x108 AND
0x109 SWAP1
0x10a PUSH32 0xa419615bc8fda4c87663805ee2a3597a6d71c1d476911d9892f340d965bc7bf1
0x12b SWAP1
0x12c PUSH1 0x0
0x12e SWAP1
0x12f LOG3
0x130 PUSH1 0x5
0x132 DUP1
0x133 SLOAD
0x134 CALLVALUE
0x135 SWAP1
0x136 DUP2
0x137 ADD
0x138 SWAP1
0x139 SWAP2
0x13a SSTORE
0x13b PUSH1 0x1
0x13d PUSH1 0xa0
0x13f PUSH1 0x2
0x141 EXP
0x142 SUB
0x143 CALLER
0x144 AND
0x145 PUSH1 0x0
0x147 SWAP1
0x148 DUP2
0x149 MSTORE
0x14a PUSH1 0x4
0x14c PUSH1 0x20
0x14e MSTORE
0x14f PUSH1 0x40
0x151 SWAP1
0x152 SHA3
0x153 DUP1
0x154 SLOAD
0x155 DUP3
0x156 ADD
0x157 SWAP1
0x158 SSTORE
0x159 PUSH2 0x162
0x15c SWAP1
0x15d NUMBER
0x15e PUSH2 0x54c
0x161 JUMP
---
0xf9: JUMPDEST 
0xfa: V84 = 0x40
0xfc: V85 = M[0x40]
0xfd: V86 = CALLVALUE
0xff: V87 = 0x1
0x101: V88 = 0xa0
0x103: V89 = 0x2
0x105: V90 = EXP 0x2 0xa0
0x106: V91 = SUB 0x10000000000000000000000000000000000000000 0x1
0x107: V92 = CALLER
0x108: V93 = AND V92 0xffffffffffffffffffffffffffffffffffffffff
0x10a: V94 = 0xa419615bc8fda4c87663805ee2a3597a6d71c1d476911d9892f340d965bc7bf1
0x12c: V95 = 0x0
0x12f: LOG V85 0x0 0xa419615bc8fda4c87663805ee2a3597a6d71c1d476911d9892f340d965bc7bf1 V93 V86
0x130: V96 = 0x5
0x133: V97 = S[0x5]
0x134: V98 = CALLVALUE
0x137: V99 = ADD V98 V97
0x13a: S[0x5] = V99
0x13b: V100 = 0x1
0x13d: V101 = 0xa0
0x13f: V102 = 0x2
0x141: V103 = EXP 0x2 0xa0
0x142: V104 = SUB 0x10000000000000000000000000000000000000000 0x1
0x143: V105 = CALLER
0x144: V106 = AND V105 0xffffffffffffffffffffffffffffffffffffffff
0x145: V107 = 0x0
0x149: M[0x0] = V106
0x14a: V108 = 0x4
0x14c: V109 = 0x20
0x14e: M[0x20] = 0x4
0x14f: V110 = 0x40
0x152: V111 = SHA3 0x0 0x40
0x154: V112 = S[V111]
0x156: V113 = ADD V98 V112
0x158: S[V111] = V113
0x159: V114 = 0x162
0x15d: V115 = NUMBER
0x15e: V116 = 0x54c
0x161: JUMP 0x54c
---
Entry stack: [V12, 0x261, 0x0, S0]
Stack pops: 0
Stack additions: [0x162, V98, V115]
Exit stack: [V12, 0x261, 0x0, S0, 0x162, V98, V115]

================================

Block 0x162
[0x162:0x1c5]
---
Predecessors: [0x5ba]
Successors: [0x1c6, 0x1c7]
---
0x162 JUMPDEST
0x163 PUSH1 0x3
0x165 SLOAD
0x166 PUSH1 0x40
0x168 DUP1
0x169 MLOAD
0x16a PUSH32 0x58292a3d00000000000000000000000000000000000000000000000000000000
0x18b DUP2
0x18c MSTORE
0x18d PUSH1 0x4
0x18f DUP2
0x190 ADD
0x191 DUP5
0x192 SWAP1
0x193 MSTORE
0x194 SWAP1
0x195 MLOAD
0x196 SWAP3
0x197 SWAP5
0x198 POP
0x199 PUSH1 0x1
0x19b PUSH1 0xa0
0x19d PUSH1 0x2
0x19f EXP
0x1a0 SUB
0x1a1 SWAP1
0x1a2 SWAP2
0x1a3 AND
0x1a4 SWAP2
0x1a5 PUSH4 0x58292a3d
0x1aa SWAP2
0x1ab PUSH1 0x24
0x1ad DUP1
0x1ae DUP3
0x1af ADD
0x1b0 SWAP3
0x1b1 PUSH1 0x0
0x1b3 SWAP3
0x1b4 SWAP1
0x1b5 SWAP2
0x1b6 SWAP1
0x1b7 DUP3
0x1b8 SWAP1
0x1b9 SUB
0x1ba ADD
0x1bb DUP2
0x1bc DUP4
0x1bd DUP8
0x1be DUP1
0x1bf EXTCODESIZE
0x1c0 ISZERO
0x1c1 ISZERO
0x1c2 PUSH2 0x1c7
0x1c5 JUMPI
---
0x162: JUMPDEST 
0x163: V117 = 0x3
0x165: V118 = S[0x3]
0x166: V119 = 0x40
0x169: V120 = M[0x40]
0x16a: V121 = 0x58292a3d00000000000000000000000000000000000000000000000000000000
0x18c: M[V120] = 0x58292a3d00000000000000000000000000000000000000000000000000000000
0x18d: V122 = 0x4
0x190: V123 = ADD V120 0x4
0x193: M[V123] = S0
0x195: V124 = M[0x40]
0x199: V125 = 0x1
0x19b: V126 = 0xa0
0x19d: V127 = 0x2
0x19f: V128 = EXP 0x2 0xa0
0x1a0: V129 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a3: V130 = AND V118 0xffffffffffffffffffffffffffffffffffffffff
0x1a5: V131 = 0x58292a3d
0x1ab: V132 = 0x24
0x1af: V133 = ADD V120 0x24
0x1b1: V134 = 0x0
0x1b9: V135 = SUB V120 V124
0x1ba: V136 = ADD V135 0x24
0x1bf: V137 = EXTCODESIZE V130
0x1c0: V138 = ISZERO V137
0x1c1: V139 = ISZERO V138
0x1c2: V140 = 0x1c7
0x1c5: JUMPI 0x1c7 V139
---
Entry stack: [V12, 0x261, 0x0, S1, S0]
Stack pops: 3
Stack additions: [S0, S1, V130, 0x58292a3d, V133, 0x0, V124, V136, V124, 0x0, V130]
Exit stack: [V12, 0x261, S0, S1, V130, 0x58292a3d, V133, 0x0, V124, V136, V124, 0x0, V130]

================================

Block 0x1c6
[0x1c6:0x1c6]
---
Predecessors: [0x162]
Successors: []
---
0x1c6 INVALID
---
0x1c6: INVALID 
---
Entry stack: [V12, 0x261, S10, S9, V130, 0x58292a3d, V133, 0x0, V124, V136, V124, 0x0, V130]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x261, S10, S9, V130, 0x58292a3d, V133, 0x0, V124, V136, V124, 0x0, V130]

================================

Block 0x1c7
[0x1c7:0x1d2]
---
Predecessors: [0x162]
Successors: [0x1d3, 0x1d4]
---
0x1c7 JUMPDEST
0x1c8 PUSH1 0x32
0x1ca GAS
0x1cb SUB
0x1cc CALL
0x1cd ISZERO
0x1ce ISZERO
0x1cf PUSH2 0x1d4
0x1d2 JUMPI
---
0x1c7: JUMPDEST 
0x1c8: V141 = 0x32
0x1ca: V142 = GAS
0x1cb: V143 = SUB V142 0x32
0x1cc: V144 = CALL V143 V130 0x0 V124 V136 V124 0x0
0x1cd: V145 = ISZERO V144
0x1ce: V146 = ISZERO V145
0x1cf: V147 = 0x1d4
0x1d2: JUMPI 0x1d4 V146
---
Entry stack: [V12, 0x261, S10, S9, V130, 0x58292a3d, V133, 0x0, V124, V136, V124, 0x0, V130]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x261, S10, S9, V130, 0x58292a3d, V133]

================================

Block 0x1d3
[0x1d3:0x1d3]
---
Predecessors: [0x1c7]
Successors: []
---
0x1d3 INVALID
---
0x1d3: INVALID 
---
Entry stack: [V12, 0x261, S4, S3, V130, 0x58292a3d, V133]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x261, S4, S3, V130, 0x58292a3d, V133]

================================

Block 0x1d4
[0x1d4:0x249]
---
Predecessors: [0x1c7]
Successors: [0x24a, 0x24b]
---
0x1d4 JUMPDEST
0x1d5 POP
0x1d6 POP
0x1d7 PUSH1 0x3
0x1d9 SLOAD
0x1da PUSH1 0x40
0x1dc DUP1
0x1dd MLOAD
0x1de PUSH1 0x0
0x1e0 PUSH1 0x20
0x1e2 SWAP2
0x1e3 DUP3
0x1e4 ADD
0x1e5 DUP2
0x1e6 SWAP1
0x1e7 MSTORE
0x1e8 DUP3
0x1e9 MLOAD
0x1ea PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x20b DUP2
0x20c MSTORE
0x20d PUSH1 0x1
0x20f PUSH1 0xa0
0x211 PUSH1 0x2
0x213 EXP
0x214 SUB
0x215 CALLER
0x216 DUP2
0x217 AND
0x218 PUSH1 0x4
0x21a DUP4
0x21b ADD
0x21c MSTORE
0x21d PUSH1 0x24
0x21f DUP3
0x220 ADD
0x221 DUP10
0x222 SWAP1
0x223 MSTORE
0x224 SWAP4
0x225 MLOAD
0x226 SWAP4
0x227 SWAP1
0x228 SWAP5
0x229 AND
0x22a SWAP5
0x22b POP
0x22c PUSH4 0xa9059cbb
0x231 SWAP4
0x232 PUSH1 0x44
0x234 DUP1
0x235 DUP3
0x236 ADD
0x237 SWAP5
0x238 SWAP3
0x239 SWAP2
0x23a DUP4
0x23b SWAP1
0x23c SUB
0x23d ADD
0x23e SWAP1
0x23f DUP3
0x240 SWAP1
0x241 DUP8
0x242 DUP1
0x243 EXTCODESIZE
0x244 ISZERO
0x245 ISZERO
0x246 PUSH2 0x24b
0x249 JUMPI
---
0x1d4: JUMPDEST 
0x1d7: V148 = 0x3
0x1d9: V149 = S[0x3]
0x1da: V150 = 0x40
0x1dd: V151 = M[0x40]
0x1de: V152 = 0x0
0x1e0: V153 = 0x20
0x1e4: V154 = ADD 0x20 V151
0x1e7: M[V154] = 0x0
0x1e9: V155 = M[0x40]
0x1ea: V156 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x20c: M[V155] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x20d: V157 = 0x1
0x20f: V158 = 0xa0
0x211: V159 = 0x2
0x213: V160 = EXP 0x2 0xa0
0x214: V161 = SUB 0x10000000000000000000000000000000000000000 0x1
0x215: V162 = CALLER
0x217: V163 = AND 0xffffffffffffffffffffffffffffffffffffffff V162
0x218: V164 = 0x4
0x21b: V165 = ADD V155 0x4
0x21c: M[V165] = V163
0x21d: V166 = 0x24
0x220: V167 = ADD V155 0x24
0x223: M[V167] = S4
0x225: V168 = M[0x40]
0x229: V169 = AND V149 0xffffffffffffffffffffffffffffffffffffffff
0x22c: V170 = 0xa9059cbb
0x232: V171 = 0x44
0x236: V172 = ADD V155 0x44
0x23c: V173 = SUB V155 V168
0x23d: V174 = ADD V173 0x44
0x243: V175 = EXTCODESIZE V169
0x244: V176 = ISZERO V175
0x245: V177 = ISZERO V176
0x246: V178 = 0x24b
0x249: JUMPI 0x24b V177
---
Entry stack: [V12, 0x261, S4, S3, V130, 0x58292a3d, V133]
Stack pops: 5
Stack additions: [S4, S3, V169, 0xa9059cbb, V172, 0x20, V168, V174, V168, 0x0, V169]
Exit stack: [V12, 0x261, S4, S3, V169, 0xa9059cbb, V172, 0x20, V168, V174, V168, 0x0, V169]

================================

Block 0x24a
[0x24a:0x24a]
---
Predecessors: [0x1d4]
Successors: []
---
0x24a INVALID
---
0x24a: INVALID 
---
Entry stack: [V12, 0x261, S10, S9, V169, 0xa9059cbb, V172, 0x20, V168, V174, V168, 0x0, V169]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x261, S10, S9, V169, 0xa9059cbb, V172, 0x20, V168, V174, V168, 0x0, V169]

================================

Block 0x24b
[0x24b:0x256]
---
Predecessors: [0x1d4]
Successors: [0x257, 0x258]
---
0x24b JUMPDEST
0x24c PUSH1 0x32
0x24e GAS
0x24f SUB
0x250 CALL
0x251 ISZERO
0x252 ISZERO
0x253 PUSH2 0x258
0x256 JUMPI
---
0x24b: JUMPDEST 
0x24c: V179 = 0x32
0x24e: V180 = GAS
0x24f: V181 = SUB V180 0x32
0x250: V182 = CALL V181 V169 0x0 V168 V174 V168 0x20
0x251: V183 = ISZERO V182
0x252: V184 = ISZERO V183
0x253: V185 = 0x258
0x256: JUMPI 0x258 V184
---
Entry stack: [V12, 0x261, S10, S9, V169, 0xa9059cbb, V172, 0x20, V168, V174, V168, 0x0, V169]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x261, S10, S9, V169, 0xa9059cbb, V172]

================================

Block 0x257
[0x257:0x257]
---
Predecessors: [0x24b]
Successors: []
---
0x257 INVALID
---
0x257: INVALID 
---
Entry stack: [V12, 0x261, S4, S3, V169, 0xa9059cbb, V172]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x261, S4, S3, V169, 0xa9059cbb, V172]

================================

Block 0x258
[0x258:0x25b]
---
Predecessors: [0x24b]
Successors: [0x25c]
---
0x258 JUMPDEST
0x259 POP
0x25a POP
0x25b POP
---
0x258: JUMPDEST 
---
Entry stack: [V12, 0x261, S4, S3, V169, 0xa9059cbb, V172]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x261, S4, S3]

================================

Block 0x25c
[0x25c:0x25c]
---
Predecessors: [0x258, 0x6a7]
Successors: [0x25d]
---
0x25c JUMPDEST
---
0x25c: JUMPDEST 
---
Entry stack: [V12, 0x261, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x261, S1, S0]

================================

Block 0x25d
[0x25d:0x260]
---
Predecessors: [0x25c]
Successors: [0x261]
---
0x25d JUMPDEST
0x25e POP
0x25f POP
0x260 JUMP
---
0x25d: JUMPDEST 
0x260: JUMP 0x261
---
Entry stack: [V12, 0x261, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x261
[0x261:0x262]
---
Predecessors: [0x25d, 0x60a, 0x85a]
Successors: []
---
0x261 JUMPDEST
0x262 STOP
---
0x261: JUMPDEST 
0x262: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x263
[0x263:0x269]
---
Predecessors: [0xb]
Successors: [0x26a, 0x26b]
---
0x263 JUMPDEST
0x264 CALLVALUE
0x265 ISZERO
0x266 PUSH2 0x26b
0x269 JUMPI
---
0x263: JUMPDEST 
0x264: V186 = CALLVALUE
0x265: V187 = ISZERO V186
0x266: V188 = 0x26b
0x269: JUMPI 0x26b V187
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x26a
[0x26a:0x26a]
---
Predecessors: [0x263]
Successors: []
---
0x26a INVALID
---
0x26a: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x26b
[0x26b:0x27e]
---
Predecessors: [0x263]
Successors: [0x5c5]
---
0x26b JUMPDEST
0x26c PUSH2 0x261
0x26f PUSH1 0x1
0x271 PUSH1 0xa0
0x273 PUSH1 0x2
0x275 EXP
0x276 SUB
0x277 PUSH1 0x4
0x279 CALLDATALOAD
0x27a AND
0x27b PUSH2 0x5c5
0x27e JUMP
---
0x26b: JUMPDEST 
0x26c: V189 = 0x261
0x26f: V190 = 0x1
0x271: V191 = 0xa0
0x273: V192 = 0x2
0x275: V193 = EXP 0x2 0xa0
0x276: V194 = SUB 0x10000000000000000000000000000000000000000 0x1
0x277: V195 = 0x4
0x279: V196 = CALLDATALOAD 0x4
0x27a: V197 = AND V196 0xffffffffffffffffffffffffffffffffffffffff
0x27b: V198 = 0x5c5
0x27e: JUMP 0x5c5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x261, V197]
Exit stack: [V12, 0x261, V197]

================================

Block 0x27f
[0x27f:0x280]
---
Predecessors: []
Successors: []
---
0x27f JUMPDEST
0x280 STOP
---
0x27f: JUMPDEST 
0x280: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x281
[0x281:0x287]
---
Predecessors: [0x25]
Successors: [0x288, 0x289]
---
0x281 JUMPDEST
0x282 CALLVALUE
0x283 ISZERO
0x284 PUSH2 0x289
0x287 JUMPI
---
0x281: JUMPDEST 
0x282: V199 = CALLVALUE
0x283: V200 = ISZERO V199
0x284: V201 = 0x289
0x287: JUMPI 0x289 V200
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x288
[0x288:0x288]
---
Predecessors: [0x281]
Successors: []
---
0x288 INVALID
---
0x288: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x289
[0x289:0x290]
---
Predecessors: [0x281]
Successors: [0x60d]
---
0x289 JUMPDEST
0x28a PUSH2 0x261
0x28d PUSH2 0x60d
0x290 JUMP
---
0x289: JUMPDEST 
0x28a: V202 = 0x261
0x28d: V203 = 0x60d
0x290: JUMP 0x60d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x261]
Exit stack: [V12, 0x261]

================================

Block 0x291
[0x291:0x292]
---
Predecessors: []
Successors: []
---
0x291 JUMPDEST
0x292 STOP
---
0x291: JUMPDEST 
0x292: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x293
[0x293:0x299]
---
Predecessors: [0x30]
Successors: [0x29a, 0x29b]
---
0x293 JUMPDEST
0x294 CALLVALUE
0x295 ISZERO
0x296 PUSH2 0x29b
0x299 JUMPI
---
0x293: JUMPDEST 
0x294: V204 = CALLVALUE
0x295: V205 = ISZERO V204
0x296: V206 = 0x29b
0x299: JUMPI 0x29b V205
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x29a
[0x29a:0x29a]
---
Predecessors: [0x293]
Successors: []
---
0x29a INVALID
---
0x29a: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x29b
[0x29b:0x2a2]
---
Predecessors: [0x293]
Successors: [0x66f]
---
0x29b JUMPDEST
0x29c PUSH2 0x2a3
0x29f PUSH2 0x66f
0x2a2 JUMP
---
0x29b: JUMPDEST 
0x29c: V207 = 0x2a3
0x29f: V208 = 0x66f
0x2a2: JUMP 0x66f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2a3]
Exit stack: [V12, 0x2a3]

================================

Block 0x2a3
[0x2a3:0x2be]
---
Predecessors: [0x66f, 0x737, 0x751, 0x766]
Successors: []
---
0x2a3 JUMPDEST
0x2a4 PUSH1 0x40
0x2a6 DUP1
0x2a7 MLOAD
0x2a8 PUSH1 0x1
0x2aa PUSH1 0xa0
0x2ac PUSH1 0x2
0x2ae EXP
0x2af SUB
0x2b0 SWAP1
0x2b1 SWAP3
0x2b2 AND
0x2b3 DUP3
0x2b4 MSTORE
0x2b5 MLOAD
0x2b6 SWAP1
0x2b7 DUP2
0x2b8 SWAP1
0x2b9 SUB
0x2ba PUSH1 0x20
0x2bc ADD
0x2bd SWAP1
0x2be RETURN
---
0x2a3: JUMPDEST 
0x2a4: V209 = 0x40
0x2a7: V210 = M[0x40]
0x2a8: V211 = 0x1
0x2aa: V212 = 0xa0
0x2ac: V213 = 0x2
0x2ae: V214 = EXP 0x2 0xa0
0x2af: V215 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b2: V216 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x2b4: M[V210] = V216
0x2b5: V217 = M[0x40]
0x2b9: V218 = SUB V210 V217
0x2ba: V219 = 0x20
0x2bc: V220 = ADD 0x20 V218
0x2be: RETURN V217 V220
---
Entry stack: [V12, 0x2a3, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x2a3]

================================

Block 0x2bf
[0x2bf:0x2c5]
---
Predecessors: [0x3b]
Successors: [0x2c6, 0x2c7]
---
0x2bf JUMPDEST
0x2c0 CALLVALUE
0x2c1 ISZERO
0x2c2 PUSH2 0x2c7
0x2c5 JUMPI
---
0x2bf: JUMPDEST 
0x2c0: V221 = CALLVALUE
0x2c1: V222 = ISZERO V221
0x2c2: V223 = 0x2c7
0x2c5: JUMPI 0x2c7 V222
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c6
[0x2c6:0x2c6]
---
Predecessors: [0x2bf]
Successors: []
---
0x2c6 INVALID
---
0x2c6: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c7
[0x2c7:0x2ce]
---
Predecessors: [0x2bf]
Successors: [0x67e]
---
0x2c7 JUMPDEST
0x2c8 PUSH2 0x261
0x2cb PUSH2 0x67e
0x2ce JUMP
---
0x2c7: JUMPDEST 
0x2c8: V224 = 0x261
0x2cb: V225 = 0x67e
0x2ce: JUMP 0x67e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x261]
Exit stack: [V12, 0x261]

================================

Block 0x2cf
[0x2cf:0x2d0]
---
Predecessors: []
Successors: []
---
0x2cf JUMPDEST
0x2d0 STOP
---
0x2cf: JUMPDEST 
0x2d0: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2d1
[0x2d1:0x2d7]
---
Predecessors: [0x46]
Successors: [0x2d8, 0x2d9]
---
0x2d1 JUMPDEST
0x2d2 CALLVALUE
0x2d3 ISZERO
0x2d4 PUSH2 0x2d9
0x2d7 JUMPI
---
0x2d1: JUMPDEST 
0x2d2: V226 = CALLVALUE
0x2d3: V227 = ISZERO V226
0x2d4: V228 = 0x2d9
0x2d7: JUMPI 0x2d9 V227
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2d8
[0x2d8:0x2d8]
---
Predecessors: [0x2d1]
Successors: []
---
0x2d8 INVALID
---
0x2d8: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2d9
[0x2d9:0x2e0]
---
Predecessors: [0x2d1]
Successors: [0x6f2]
---
0x2d9 JUMPDEST
0x2da PUSH2 0x2e1
0x2dd PUSH2 0x6f2
0x2e0 JUMP
---
0x2d9: JUMPDEST 
0x2da: V229 = 0x2e1
0x2dd: V230 = 0x6f2
0x2e0: JUMP 0x6f2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2e1]
Exit stack: [V12, 0x2e1]

================================

Block 0x2e1
[0x2e1:0x321]
---
Predecessors: [0x6f2]
Successors: []
---
0x2e1 JUMPDEST
0x2e2 PUSH1 0x40
0x2e4 DUP1
0x2e5 MLOAD
0x2e6 SWAP9
0x2e7 DUP10
0x2e8 MSTORE
0x2e9 PUSH1 0x20
0x2eb DUP10
0x2ec ADD
0x2ed SWAP8
0x2ee SWAP1
0x2ef SWAP8
0x2f0 MSTORE
0x2f1 DUP8
0x2f2 DUP8
0x2f3 ADD
0x2f4 SWAP6
0x2f5 SWAP1
0x2f6 SWAP6
0x2f7 MSTORE
0x2f8 PUSH1 0x60
0x2fa DUP8
0x2fb ADD
0x2fc SWAP4
0x2fd SWAP1
0x2fe SWAP4
0x2ff MSTORE
0x300 PUSH1 0x80
0x302 DUP7
0x303 ADD
0x304 SWAP2
0x305 SWAP1
0x306 SWAP2
0x307 MSTORE
0x308 PUSH1 0xa0
0x30a DUP6
0x30b ADD
0x30c MSTORE
0x30d PUSH1 0xc0
0x30f DUP5
0x310 ADD
0x311 MSTORE
0x312 PUSH1 0xe0
0x314 DUP4
0x315 ADD
0x316 MSTORE
0x317 MLOAD
0x318 SWAP1
0x319 DUP2
0x31a SWAP1
0x31b SUB
0x31c PUSH2 0x100
0x31f ADD
0x320 SWAP1
0x321 RETURN
---
0x2e1: JUMPDEST 
0x2e2: V231 = 0x40
0x2e5: V232 = M[0x40]
0x2e8: M[V232] = V604
0x2e9: V233 = 0x20
0x2ec: V234 = ADD V232 0x20
0x2f0: M[V234] = V606
0x2f3: V235 = ADD 0x40 V232
0x2f7: M[V235] = V608
0x2f8: V236 = 0x60
0x2fb: V237 = ADD V232 0x60
0x2ff: M[V237] = V610
0x300: V238 = 0x80
0x303: V239 = ADD V232 0x80
0x307: M[V239] = V612
0x308: V240 = 0xa0
0x30b: V241 = ADD V232 0xa0
0x30c: M[V241] = V614
0x30d: V242 = 0xc0
0x310: V243 = ADD V232 0xc0
0x311: M[V243] = V616
0x312: V244 = 0xe0
0x315: V245 = ADD V232 0xe0
0x316: M[V245] = V618
0x317: V246 = M[0x40]
0x31b: V247 = SUB V232 V246
0x31c: V248 = 0x100
0x31f: V249 = ADD 0x100 V247
0x321: RETURN V246 V249
---
Entry stack: [V12, 0x2e1, V604, V606, V608, V610, V612, V614, V616, V618]
Stack pops: 8
Stack additions: []
Exit stack: [V12, 0x2e1]

================================

Block 0x322
[0x322:0x328]
---
Predecessors: [0x51]
Successors: [0x329, 0x32a]
---
0x322 JUMPDEST
0x323 CALLVALUE
0x324 ISZERO
0x325 PUSH2 0x32a
0x328 JUMPI
---
0x322: JUMPDEST 
0x323: V250 = CALLVALUE
0x324: V251 = ISZERO V250
0x325: V252 = 0x32a
0x328: JUMPI 0x32a V251
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x329
[0x329:0x329]
---
Predecessors: [0x322]
Successors: []
---
0x329 INVALID
---
0x329: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x32a
[0x32a:0x331]
---
Predecessors: [0x322]
Successors: [0x70d]
---
0x32a JUMPDEST
0x32b PUSH2 0x261
0x32e PUSH2 0x70d
0x331 JUMP
---
0x32a: JUMPDEST 
0x32b: V253 = 0x261
0x32e: V254 = 0x70d
0x331: JUMP 0x70d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x261]
Exit stack: [V12, 0x261]

================================

Block 0x332
[0x332:0x333]
---
Predecessors: []
Successors: []
---
0x332 JUMPDEST
0x333 STOP
---
0x332: JUMPDEST 
0x333: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x334
[0x334:0x33a]
---
Predecessors: [0x5c]
Successors: [0x33b, 0x33c]
---
0x334 JUMPDEST
0x335 CALLVALUE
0x336 ISZERO
0x337 PUSH2 0x33c
0x33a JUMPI
---
0x334: JUMPDEST 
0x335: V255 = CALLVALUE
0x336: V256 = ISZERO V255
0x337: V257 = 0x33c
0x33a: JUMPI 0x33c V256
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x33b
[0x33b:0x33b]
---
Predecessors: [0x334]
Successors: []
---
0x33b INVALID
---
0x33b: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x33c
[0x33c:0x349]
---
Predecessors: [0x334]
Successors: [0x54c]
---
0x33c JUMPDEST
0x33d PUSH2 0x34a
0x340 PUSH1 0x4
0x342 CALLDATALOAD
0x343 PUSH1 0x24
0x345 CALLDATALOAD
0x346 PUSH2 0x54c
0x349 JUMP
---
0x33c: JUMPDEST 
0x33d: V258 = 0x34a
0x340: V259 = 0x4
0x342: V260 = CALLDATALOAD 0x4
0x343: V261 = 0x24
0x345: V262 = CALLDATALOAD 0x24
0x346: V263 = 0x54c
0x349: JUMP 0x54c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x34a, V260, V262]
Exit stack: [V12, 0x34a, V260, V262]

================================

Block 0x34a
[0x34a:0x35b]
---
Predecessors: [0x5ba, 0x760, 0x803]
Successors: []
---
0x34a JUMPDEST
0x34b PUSH1 0x40
0x34d DUP1
0x34e MLOAD
0x34f SWAP2
0x350 DUP3
0x351 MSTORE
0x352 MLOAD
0x353 SWAP1
0x354 DUP2
0x355 SWAP1
0x356 SUB
0x357 PUSH1 0x20
0x359 ADD
0x35a SWAP1
0x35b RETURN
---
0x34a: JUMPDEST 
0x34b: V264 = 0x40
0x34e: V265 = M[0x40]
0x351: M[V265] = S0
0x352: V266 = M[0x40]
0x356: V267 = SUB V265 V266
0x357: V268 = 0x20
0x359: V269 = ADD 0x20 V267
0x35b: RETURN V266 V269
---
Entry stack: [V12, 0x261, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x261, S2, S1]

================================

Block 0x35c
[0x35c:0x362]
---
Predecessors: [0x67]
Successors: [0x363, 0x364]
---
0x35c JUMPDEST
0x35d CALLVALUE
0x35e ISZERO
0x35f PUSH2 0x364
0x362 JUMPI
---
0x35c: JUMPDEST 
0x35d: V270 = CALLVALUE
0x35e: V271 = ISZERO V270
0x35f: V272 = 0x364
0x362: JUMPI 0x364 V271
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x363
[0x363:0x363]
---
Predecessors: [0x35c]
Successors: []
---
0x363 INVALID
---
0x363: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x364
[0x364:0x36b]
---
Predecessors: [0x35c]
Successors: [0x737]
---
0x364 JUMPDEST
0x365 PUSH2 0x2a3
0x368 PUSH2 0x737
0x36b JUMP
---
0x364: JUMPDEST 
0x365: V273 = 0x2a3
0x368: V274 = 0x737
0x36b: JUMP 0x737
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2a3]
Exit stack: [V12, 0x2a3]

================================

Block 0x36c
[0x36c:0x387]
---
Predecessors: []
Successors: []
---
0x36c JUMPDEST
0x36d PUSH1 0x40
0x36f DUP1
0x370 MLOAD
0x371 PUSH1 0x1
0x373 PUSH1 0xa0
0x375 PUSH1 0x2
0x377 EXP
0x378 SUB
0x379 SWAP1
0x37a SWAP3
0x37b AND
0x37c DUP3
0x37d MSTORE
0x37e MLOAD
0x37f SWAP1
0x380 DUP2
0x381 SWAP1
0x382 SUB
0x383 PUSH1 0x20
0x385 ADD
0x386 SWAP1
0x387 RETURN
---
0x36c: JUMPDEST 
0x36d: V275 = 0x40
0x370: V276 = M[0x40]
0x371: V277 = 0x1
0x373: V278 = 0xa0
0x375: V279 = 0x2
0x377: V280 = EXP 0x2 0xa0
0x378: V281 = SUB 0x10000000000000000000000000000000000000000 0x1
0x37b: V282 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x37d: M[V276] = V282
0x37e: V283 = M[0x40]
0x382: V284 = SUB V276 V283
0x383: V285 = 0x20
0x385: V286 = ADD 0x20 V284
0x387: RETURN V283 V286
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x388
[0x388:0x38e]
---
Predecessors: [0x72]
Successors: [0x38f, 0x390]
---
0x388 JUMPDEST
0x389 CALLVALUE
0x38a ISZERO
0x38b PUSH2 0x390
0x38e JUMPI
---
0x388: JUMPDEST 
0x389: V287 = CALLVALUE
0x38a: V288 = ISZERO V287
0x38b: V289 = 0x390
0x38e: JUMPI 0x390 V288
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x38f
[0x38f:0x38f]
---
Predecessors: [0x388]
Successors: []
---
0x38f INVALID
---
0x38f: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x390
[0x390:0x3f3]
---
Predecessors: [0x388]
Successors: [0x746]
---
0x390 JUMPDEST
0x391 PUSH1 0x40
0x393 DUP1
0x394 MLOAD
0x395 PUSH1 0x20
0x397 PUSH1 0x4
0x399 PUSH1 0x64
0x39b CALLDATALOAD
0x39c DUP2
0x39d DUP2
0x39e ADD
0x39f CALLDATALOAD
0x3a0 PUSH1 0x1f
0x3a2 DUP2
0x3a3 ADD
0x3a4 DUP5
0x3a5 SWAP1
0x3a6 DIV
0x3a7 DUP5
0x3a8 MUL
0x3a9 DUP6
0x3aa ADD
0x3ab DUP5
0x3ac ADD
0x3ad SWAP1
0x3ae SWAP6
0x3af MSTORE
0x3b0 DUP5
0x3b1 DUP5
0x3b2 MSTORE
0x3b3 PUSH2 0x261
0x3b6 SWAP5
0x3b7 DUP3
0x3b8 CALLDATALOAD
0x3b9 PUSH1 0x1
0x3bb PUSH1 0xa0
0x3bd PUSH1 0x2
0x3bf EXP
0x3c0 SUB
0x3c1 SWAP1
0x3c2 DUP2
0x3c3 AND
0x3c4 SWAP6
0x3c5 PUSH1 0x24
0x3c7 DUP1
0x3c8 CALLDATALOAD
0x3c9 SWAP7
0x3ca PUSH1 0x44
0x3cc CALLDATALOAD
0x3cd SWAP1
0x3ce SWAP4
0x3cf AND
0x3d0 SWAP6
0x3d1 SWAP5
0x3d2 PUSH1 0x84
0x3d4 SWAP5
0x3d5 SWAP3
0x3d6 SWAP4
0x3d7 SWAP2
0x3d8 ADD
0x3d9 SWAP2
0x3da SWAP1
0x3db DUP2
0x3dc SWAP1
0x3dd DUP5
0x3de ADD
0x3df DUP4
0x3e0 DUP3
0x3e1 DUP1
0x3e2 DUP3
0x3e3 DUP5
0x3e4 CALLDATACOPY
0x3e5 POP
0x3e6 SWAP5
0x3e7 SWAP7
0x3e8 POP
0x3e9 PUSH2 0x746
0x3ec SWAP6
0x3ed POP
0x3ee POP
0x3ef POP
0x3f0 POP
0x3f1 POP
0x3f2 POP
0x3f3 JUMP
---
0x390: JUMPDEST 
0x391: V290 = 0x40
0x394: V291 = M[0x40]
0x395: V292 = 0x20
0x397: V293 = 0x4
0x399: V294 = 0x64
0x39b: V295 = CALLDATALOAD 0x64
0x39e: V296 = ADD V295 0x4
0x39f: V297 = CALLDATALOAD V296
0x3a0: V298 = 0x1f
0x3a3: V299 = ADD V297 0x1f
0x3a6: V300 = DIV V299 0x20
0x3a8: V301 = MUL 0x20 V300
0x3aa: V302 = ADD V291 V301
0x3ac: V303 = ADD 0x20 V302
0x3af: M[0x40] = V303
0x3b2: M[V291] = V297
0x3b3: V304 = 0x261
0x3b8: V305 = CALLDATALOAD 0x4
0x3b9: V306 = 0x1
0x3bb: V307 = 0xa0
0x3bd: V308 = 0x2
0x3bf: V309 = EXP 0x2 0xa0
0x3c0: V310 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c3: V311 = AND 0xffffffffffffffffffffffffffffffffffffffff V305
0x3c5: V312 = 0x24
0x3c8: V313 = CALLDATALOAD 0x24
0x3ca: V314 = 0x44
0x3cc: V315 = CALLDATALOAD 0x44
0x3cf: V316 = AND 0xffffffffffffffffffffffffffffffffffffffff V315
0x3d2: V317 = 0x84
0x3d8: V318 = ADD 0x24 V295
0x3de: V319 = ADD V291 0x20
0x3e4: CALLDATACOPY V319 V318 V297
0x3e9: V320 = 0x746
0x3f3: JUMP 0x746
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x261, V311, V313, V316, V291]
Exit stack: [V12, 0x261, V311, V313, V316, V291]

================================

Block 0x3f4
[0x3f4:0x3f5]
---
Predecessors: []
Successors: []
---
0x3f4 JUMPDEST
0x3f5 STOP
---
0x3f4: JUMPDEST 
0x3f5: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3f6
[0x3f6:0x3fc]
---
Predecessors: [0x7d]
Successors: [0x3fd, 0x3fe]
---
0x3f6 JUMPDEST
0x3f7 CALLVALUE
0x3f8 ISZERO
0x3f9 PUSH2 0x3fe
0x3fc JUMPI
---
0x3f6: JUMPDEST 
0x3f7: V321 = CALLVALUE
0x3f8: V322 = ISZERO V321
0x3f9: V323 = 0x3fe
0x3fc: JUMPI 0x3fe V322
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3fd
[0x3fd:0x3fd]
---
Predecessors: [0x3f6]
Successors: []
---
0x3fd INVALID
---
0x3fd: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3fe
[0x3fe:0x405]
---
Predecessors: [0x3f6]
Successors: [0x751]
---
0x3fe JUMPDEST
0x3ff PUSH2 0x2a3
0x402 PUSH2 0x751
0x405 JUMP
---
0x3fe: JUMPDEST 
0x3ff: V324 = 0x2a3
0x402: V325 = 0x751
0x405: JUMP 0x751
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2a3]
Exit stack: [V12, 0x2a3]

================================

Block 0x406
[0x406:0x421]
---
Predecessors: []
Successors: []
---
0x406 JUMPDEST
0x407 PUSH1 0x40
0x409 DUP1
0x40a MLOAD
0x40b PUSH1 0x1
0x40d PUSH1 0xa0
0x40f PUSH1 0x2
0x411 EXP
0x412 SUB
0x413 SWAP1
0x414 SWAP3
0x415 AND
0x416 DUP3
0x417 MSTORE
0x418 MLOAD
0x419 SWAP1
0x41a DUP2
0x41b SWAP1
0x41c SUB
0x41d PUSH1 0x20
0x41f ADD
0x420 SWAP1
0x421 RETURN
---
0x406: JUMPDEST 
0x407: V326 = 0x40
0x40a: V327 = M[0x40]
0x40b: V328 = 0x1
0x40d: V329 = 0xa0
0x40f: V330 = 0x2
0x411: V331 = EXP 0x2 0xa0
0x412: V332 = SUB 0x10000000000000000000000000000000000000000 0x1
0x415: V333 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x417: M[V327] = V333
0x418: V334 = M[0x40]
0x41c: V335 = SUB V327 V334
0x41d: V336 = 0x20
0x41f: V337 = ADD 0x20 V335
0x421: RETURN V334 V337
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x422
[0x422:0x428]
---
Predecessors: [0x88]
Successors: [0x429, 0x42a]
---
0x422 JUMPDEST
0x423 CALLVALUE
0x424 ISZERO
0x425 PUSH2 0x42a
0x428 JUMPI
---
0x422: JUMPDEST 
0x423: V338 = CALLVALUE
0x424: V339 = ISZERO V338
0x425: V340 = 0x42a
0x428: JUMPI 0x42a V339
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x429
[0x429:0x429]
---
Predecessors: [0x422]
Successors: []
---
0x429 INVALID
---
0x429: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x42a
[0x42a:0x431]
---
Predecessors: [0x422]
Successors: [0x760]
---
0x42a JUMPDEST
0x42b PUSH2 0x34a
0x42e PUSH2 0x760
0x431 JUMP
---
0x42a: JUMPDEST 
0x42b: V341 = 0x34a
0x42e: V342 = 0x760
0x431: JUMP 0x760
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x34a]
Exit stack: [V12, 0x34a]

================================

Block 0x432
[0x432:0x443]
---
Predecessors: []
Successors: []
---
0x432 JUMPDEST
0x433 PUSH1 0x40
0x435 DUP1
0x436 MLOAD
0x437 SWAP2
0x438 DUP3
0x439 MSTORE
0x43a MLOAD
0x43b SWAP1
0x43c DUP2
0x43d SWAP1
0x43e SUB
0x43f PUSH1 0x20
0x441 ADD
0x442 SWAP1
0x443 RETURN
---
0x432: JUMPDEST 
0x433: V343 = 0x40
0x436: V344 = M[0x40]
0x439: M[V344] = S0
0x43a: V345 = M[0x40]
0x43e: V346 = SUB V344 V345
0x43f: V347 = 0x20
0x441: V348 = ADD 0x20 V346
0x443: RETURN V345 V348
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x444
[0x444:0x44a]
---
Predecessors: [0x93]
Successors: [0x44b, 0x44c]
---
0x444 JUMPDEST
0x445 CALLVALUE
0x446 ISZERO
0x447 PUSH2 0x44c
0x44a JUMPI
---
0x444: JUMPDEST 
0x445: V349 = CALLVALUE
0x446: V350 = ISZERO V349
0x447: V351 = 0x44c
0x44a: JUMPI 0x44c V350
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x44b
[0x44b:0x44b]
---
Predecessors: [0x444]
Successors: []
---
0x44b INVALID
---
0x44b: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x44c
[0x44c:0x453]
---
Predecessors: [0x444]
Successors: [0x766]
---
0x44c JUMPDEST
0x44d PUSH2 0x2a3
0x450 PUSH2 0x766
0x453 JUMP
---
0x44c: JUMPDEST 
0x44d: V352 = 0x2a3
0x450: V353 = 0x766
0x453: JUMP 0x766
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2a3]
Exit stack: [V12, 0x2a3]

================================

Block 0x454
[0x454:0x46f]
---
Predecessors: []
Successors: []
---
0x454 JUMPDEST
0x455 PUSH1 0x40
0x457 DUP1
0x458 MLOAD
0x459 PUSH1 0x1
0x45b PUSH1 0xa0
0x45d PUSH1 0x2
0x45f EXP
0x460 SUB
0x461 SWAP1
0x462 SWAP3
0x463 AND
0x464 DUP3
0x465 MSTORE
0x466 MLOAD
0x467 SWAP1
0x468 DUP2
0x469 SWAP1
0x46a SUB
0x46b PUSH1 0x20
0x46d ADD
0x46e SWAP1
0x46f RETURN
---
0x454: JUMPDEST 
0x455: V354 = 0x40
0x458: V355 = M[0x40]
0x459: V356 = 0x1
0x45b: V357 = 0xa0
0x45d: V358 = 0x2
0x45f: V359 = EXP 0x2 0xa0
0x460: V360 = SUB 0x10000000000000000000000000000000000000000 0x1
0x463: V361 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x465: M[V355] = V361
0x466: V362 = M[0x40]
0x46a: V363 = SUB V355 V362
0x46b: V364 = 0x20
0x46d: V365 = ADD 0x20 V363
0x46f: RETURN V362 V365
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x470
[0x470:0x476]
---
Predecessors: [0x9e]
Successors: [0x477, 0x478]
---
0x470 JUMPDEST
0x471 CALLVALUE
0x472 ISZERO
0x473 PUSH2 0x478
0x476 JUMPI
---
0x470: JUMPDEST 
0x471: V366 = CALLVALUE
0x472: V367 = ISZERO V366
0x473: V368 = 0x478
0x476: JUMPI 0x478 V367
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x477
[0x477:0x477]
---
Predecessors: [0x470]
Successors: []
---
0x477 INVALID
---
0x477: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x478
[0x478:0x47f]
---
Predecessors: [0x470]
Successors: [0x775]
---
0x478 JUMPDEST
0x479 PUSH2 0x480
0x47c PUSH2 0x775
0x47f JUMP
---
0x478: JUMPDEST 
0x479: V369 = 0x480
0x47c: V370 = 0x775
0x47f: JUMP 0x775
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x480]
Exit stack: [V12, 0x480]

================================

Block 0x480
[0x480:0x4a5]
---
Predecessors: [0x7fb]
Successors: [0x4a6, 0x4c6]
---
0x480 JUMPDEST
0x481 PUSH1 0x40
0x483 DUP1
0x484 MLOAD
0x485 PUSH1 0x20
0x487 DUP1
0x488 DUP3
0x489 MSTORE
0x48a DUP4
0x48b MLOAD
0x48c DUP2
0x48d DUP4
0x48e ADD
0x48f MSTORE
0x490 DUP4
0x491 MLOAD
0x492 SWAP2
0x493 SWAP3
0x494 DUP4
0x495 SWAP3
0x496 SWAP1
0x497 DUP4
0x498 ADD
0x499 SWAP2
0x49a DUP6
0x49b ADD
0x49c SWAP1
0x49d DUP1
0x49e DUP4
0x49f DUP4
0x4a0 DUP3
0x4a1 ISZERO
0x4a2 PUSH2 0x4c6
0x4a5 JUMPI
---
0x480: JUMPDEST 
0x481: V371 = 0x40
0x484: V372 = M[0x40]
0x485: V373 = 0x20
0x489: M[V372] = 0x20
0x48b: V374 = M[V669]
0x48e: V375 = ADD V372 0x20
0x48f: M[V375] = V374
0x491: V376 = M[V669]
0x498: V377 = ADD V372 0x40
0x49b: V378 = ADD V669 0x20
0x4a1: V379 = ISZERO V376
0x4a2: V380 = 0x4c6
0x4a5: JUMPI 0x4c6 V379
---
Entry stack: [V12, 0x480, V669]
Stack pops: 1
Stack additions: [S0, V372, V372, V377, V378, V376, V376, V377, V378]
Exit stack: [V12, 0x480, V669, V372, V372, V377, V378, V376, V376, V377, V378]

================================

Block 0x4a6
[0x4a6:0x4b3]
---
Predecessors: [0x480, 0x4b4]
Successors: [0x4b4, 0x4c6]
---
0x4a6 JUMPDEST
0x4a7 DUP1
0x4a8 MLOAD
0x4a9 DUP3
0x4aa MSTORE
0x4ab PUSH1 0x20
0x4ad DUP4
0x4ae GT
0x4af ISZERO
0x4b0 PUSH2 0x4c6
0x4b3 JUMPI
---
0x4a6: JUMPDEST 
0x4a8: V381 = M[S0]
0x4aa: M[S1] = V381
0x4ab: V382 = 0x20
0x4ae: V383 = GT S2 0x20
0x4af: V384 = ISZERO V383
0x4b0: V385 = 0x4c6
0x4b3: JUMPI 0x4c6 V384
---
Entry stack: [V12, 0x480, V669, V372, V372, V377, V378, V376, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x480, V669, V372, V372, V377, V378, V376, S2, S1, S0]

================================

Block 0x4b4
[0x4b4:0x4c5]
---
Predecessors: [0x4a6]
Successors: [0x4a6]
---
0x4b4 PUSH1 0x1f
0x4b6 NOT
0x4b7 SWAP1
0x4b8 SWAP3
0x4b9 ADD
0x4ba SWAP2
0x4bb PUSH1 0x20
0x4bd SWAP2
0x4be DUP3
0x4bf ADD
0x4c0 SWAP2
0x4c1 ADD
0x4c2 PUSH2 0x4a6
0x4c5 JUMP
---
0x4b4: V386 = 0x1f
0x4b6: V387 = NOT 0x1f
0x4b9: V388 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x4bb: V389 = 0x20
0x4bf: V390 = ADD 0x20 S1
0x4c1: V391 = ADD 0x20 S0
0x4c2: V392 = 0x4a6
0x4c5: JUMP 0x4a6
---
Entry stack: [V12, 0x480, V669, V372, V372, V377, V378, V376, S2, S1, S0]
Stack pops: 3
Stack additions: [V388, V390, V391]
Exit stack: [V12, 0x480, V669, V372, V372, V377, V378, V376, V388, V390, V391]

================================

Block 0x4c6
[0x4c6:0x4d8]
---
Predecessors: [0x480, 0x4a6]
Successors: [0x4d9, 0x4f2]
---
0x4c6 JUMPDEST
0x4c7 POP
0x4c8 POP
0x4c9 POP
0x4ca SWAP1
0x4cb POP
0x4cc SWAP1
0x4cd DUP2
0x4ce ADD
0x4cf SWAP1
0x4d0 PUSH1 0x1f
0x4d2 AND
0x4d3 DUP1
0x4d4 ISZERO
0x4d5 PUSH2 0x4f2
0x4d8 JUMPI
---
0x4c6: JUMPDEST 
0x4ce: V393 = ADD V376 V377
0x4d0: V394 = 0x1f
0x4d2: V395 = AND 0x1f V376
0x4d4: V396 = ISZERO V395
0x4d5: V397 = 0x4f2
0x4d8: JUMPI 0x4f2 V396
---
Entry stack: [V12, 0x480, V669, V372, V372, V377, V378, V376, S2, S1, S0]
Stack pops: 6
Stack additions: [V393, V395]
Exit stack: [V12, 0x480, V669, V372, V372, V393, V395]

================================

Block 0x4d9
[0x4d9:0x4f1]
---
Predecessors: [0x4c6]
Successors: [0x4f2]
---
0x4d9 DUP1
0x4da DUP3
0x4db SUB
0x4dc DUP1
0x4dd MLOAD
0x4de PUSH1 0x1
0x4e0 DUP4
0x4e1 PUSH1 0x20
0x4e3 SUB
0x4e4 PUSH2 0x100
0x4e7 EXP
0x4e8 SUB
0x4e9 NOT
0x4ea AND
0x4eb DUP2
0x4ec MSTORE
0x4ed PUSH1 0x20
0x4ef ADD
0x4f0 SWAP2
0x4f1 POP
---
0x4db: V398 = SUB V393 V395
0x4dd: V399 = M[V398]
0x4de: V400 = 0x1
0x4e1: V401 = 0x20
0x4e3: V402 = SUB 0x20 V395
0x4e4: V403 = 0x100
0x4e7: V404 = EXP 0x100 V402
0x4e8: V405 = SUB V404 0x1
0x4e9: V406 = NOT V405
0x4ea: V407 = AND V406 V399
0x4ec: M[V398] = V407
0x4ed: V408 = 0x20
0x4ef: V409 = ADD 0x20 V398
---
Entry stack: [V12, 0x480, V669, V372, V372, V393, V395]
Stack pops: 2
Stack additions: [V409, S0]
Exit stack: [V12, 0x480, V669, V372, V372, V409, V395]

================================

Block 0x4f2
[0x4f2:0x4ff]
---
Predecessors: [0x4c6, 0x4d9]
Successors: []
---
0x4f2 JUMPDEST
0x4f3 POP
0x4f4 SWAP3
0x4f5 POP
0x4f6 POP
0x4f7 POP
0x4f8 PUSH1 0x40
0x4fa MLOAD
0x4fb DUP1
0x4fc SWAP2
0x4fd SUB
0x4fe SWAP1
0x4ff RETURN
---
0x4f2: JUMPDEST 
0x4f8: V410 = 0x40
0x4fa: V411 = M[0x40]
0x4fd: V412 = SUB S1 V411
0x4ff: RETURN V411 V412
---
Entry stack: [V12, 0x480, V669, V372, V372, S1, V395]
Stack pops: 5
Stack additions: []
Exit stack: [V12, 0x480]

================================

Block 0x500
[0x500:0x506]
---
Predecessors: [0xa9]
Successors: [0x507, 0x508]
---
0x500 JUMPDEST
0x501 CALLVALUE
0x502 ISZERO
0x503 PUSH2 0x508
0x506 JUMPI
---
0x500: JUMPDEST 
0x501: V413 = CALLVALUE
0x502: V414 = ISZERO V413
0x503: V415 = 0x508
0x506: JUMPI 0x508 V414
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x507
[0x507:0x507]
---
Predecessors: [0x500]
Successors: []
---
0x507 INVALID
---
0x507: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x508
[0x508:0x51b]
---
Predecessors: [0x500]
Successors: [0x803]
---
0x508 JUMPDEST
0x509 PUSH2 0x34a
0x50c PUSH1 0x1
0x50e PUSH1 0xa0
0x510 PUSH1 0x2
0x512 EXP
0x513 SUB
0x514 PUSH1 0x4
0x516 CALLDATALOAD
0x517 AND
0x518 PUSH2 0x803
0x51b JUMP
---
0x508: JUMPDEST 
0x509: V416 = 0x34a
0x50c: V417 = 0x1
0x50e: V418 = 0xa0
0x510: V419 = 0x2
0x512: V420 = EXP 0x2 0xa0
0x513: V421 = SUB 0x10000000000000000000000000000000000000000 0x1
0x514: V422 = 0x4
0x516: V423 = CALLDATALOAD 0x4
0x517: V424 = AND V423 0xffffffffffffffffffffffffffffffffffffffff
0x518: V425 = 0x803
0x51b: JUMP 0x803
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x34a, V424]
Exit stack: [V12, 0x34a, V424]

================================

Block 0x51c
[0x51c:0x52d]
---
Predecessors: []
Successors: []
---
0x51c JUMPDEST
0x51d PUSH1 0x40
0x51f DUP1
0x520 MLOAD
0x521 SWAP2
0x522 DUP3
0x523 MSTORE
0x524 MLOAD
0x525 SWAP1
0x526 DUP2
0x527 SWAP1
0x528 SUB
0x529 PUSH1 0x20
0x52b ADD
0x52c SWAP1
0x52d RETURN
---
0x51c: JUMPDEST 
0x51d: V426 = 0x40
0x520: V427 = M[0x40]
0x523: M[V427] = S0
0x524: V428 = M[0x40]
0x528: V429 = SUB V427 V428
0x529: V430 = 0x20
0x52b: V431 = ADD 0x20 V429
0x52d: RETURN V428 V431
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x52e
[0x52e:0x534]
---
Predecessors: [0xb4]
Successors: [0x535, 0x536]
---
0x52e JUMPDEST
0x52f CALLVALUE
0x530 ISZERO
0x531 PUSH2 0x536
0x534 JUMPI
---
0x52e: JUMPDEST 
0x52f: V432 = CALLVALUE
0x530: V433 = ISZERO V432
0x531: V434 = 0x536
0x534: JUMPI 0x536 V433
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x535
[0x535:0x535]
---
Predecessors: [0x52e]
Successors: []
---
0x535 INVALID
---
0x535: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x536
[0x536:0x549]
---
Predecessors: [0x52e]
Successors: [0x815]
---
0x536 JUMPDEST
0x537 PUSH2 0x261
0x53a PUSH1 0x1
0x53c PUSH1 0xa0
0x53e PUSH1 0x2
0x540 EXP
0x541 SUB
0x542 PUSH1 0x4
0x544 CALLDATALOAD
0x545 AND
0x546 PUSH2 0x815
0x549 JUMP
---
0x536: JUMPDEST 
0x537: V435 = 0x261
0x53a: V436 = 0x1
0x53c: V437 = 0xa0
0x53e: V438 = 0x2
0x540: V439 = EXP 0x2 0xa0
0x541: V440 = SUB 0x10000000000000000000000000000000000000000 0x1
0x542: V441 = 0x4
0x544: V442 = CALLDATALOAD 0x4
0x545: V443 = AND V442 0xffffffffffffffffffffffffffffffffffffffff
0x546: V444 = 0x815
0x549: JUMP 0x815
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x261, V443]
Exit stack: [V12, 0x261, V443]

================================

Block 0x54a
[0x54a:0x54b]
---
Predecessors: []
Successors: []
---
0x54a JUMPDEST
0x54b STOP
---
0x54a: JUMPDEST 
0x54b: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x54c
[0x54c:0x565]
---
Predecessors: [0xf9, 0x33c]
Successors: [0x566, 0x56c]
---
0x54c JUMPDEST
0x54d PUSH1 0x0
0x54f PUSH1 0x0
0x551 PUSH1 0x0
0x553 PUSH1 0x0
0x555 PUSH1 0x0
0x557 PUSH1 0x0
0x559 PUSH1 0x7
0x55b PUSH1 0x0
0x55d ADD
0x55e SLOAD
0x55f DUP8
0x560 LT
0x561 DUP1
0x562 PUSH2 0x56c
0x565 JUMPI
---
0x54c: JUMPDEST 
0x54d: V445 = 0x0
0x54f: V446 = 0x0
0x551: V447 = 0x0
0x553: V448 = 0x0
0x555: V449 = 0x0
0x557: V450 = 0x0
0x559: V451 = 0x7
0x55b: V452 = 0x0
0x55d: V453 = ADD 0x0 0x7
0x55e: V454 = S[0x7]
0x560: V455 = LT S0 V454
0x562: V456 = 0x56c
0x565: JUMPI 0x56c V455
---
Entry stack: [V12, 0x261, 0x0, S3, {0x162, 0x34a}, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V455]
Exit stack: [V12, 0x261, 0x0, S3, {0x162, 0x34a}, S1, S0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V455]

================================

Block 0x566
[0x566:0x56b]
---
Predecessors: [0x54c]
Successors: [0x56c]
---
0x566 POP
0x567 PUSH1 0x8
0x569 SLOAD
0x56a DUP8
0x56b GT
---
0x567: V457 = 0x8
0x569: V458 = S[0x8]
0x56b: V459 = GT S7 V458
---
Entry stack: [V12, 0x261, 0x0, S10, {0x162, 0x34a}, S8, S7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V455]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, V459]
Exit stack: [V12, 0x261, 0x0, S10, {0x162, 0x34a}, S8, S7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V459]

================================

Block 0x56c
[0x56c:0x571]
---
Predecessors: [0x54c, 0x566]
Successors: [0x572, 0x57a]
---
0x56c JUMPDEST
0x56d ISZERO
0x56e PUSH2 0x57a
0x571 JUMPI
---
0x56c: JUMPDEST 
0x56d: V460 = ISZERO S0
0x56e: V461 = 0x57a
0x571: JUMPI 0x57a V460
---
Entry stack: [V12, 0x261, 0x0, S10, {0x162, 0x34a}, S8, S7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x261, 0x0, S10, {0x162, 0x34a}, S8, S7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x572
[0x572:0x579]
---
Predecessors: [0x56c]
Successors: [0x5ba]
---
0x572 PUSH1 0x0
0x574 SWAP6
0x575 POP
0x576 PUSH2 0x5ba
0x579 JUMP
---
0x572: V462 = 0x0
0x576: V463 = 0x5ba
0x579: JUMP 0x5ba
---
Entry stack: [V12, 0x261, 0x0, S9, {0x162, 0x34a}, S7, S6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [0x0, S4, S3, S2, S1, S0]
Exit stack: [V12, 0x261, 0x0, S9, {0x162, 0x34a}, S7, S6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x57a
[0x57a:0x59c]
---
Predecessors: [0x56c]
Successors: [0x59d, 0x59e]
---
0x57a JUMPDEST
0x57b PUSH1 0xc
0x57d SLOAD
0x57e PUSH1 0x7
0x580 SLOAD
0x581 PUSH1 0xd
0x583 SLOAD
0x584 PUSH1 0xe
0x586 SLOAD
0x587 SWAP3
0x588 SWAP8
0x589 POP
0x58a SWAP1
0x58b SWAP6
0x58c POP
0x58d SWAP4
0x58e POP
0x58f SWAP2
0x590 POP
0x591 DUP2
0x592 DUP4
0x593 DUP6
0x594 DUP10
0x595 SUB
0x596 DUP2
0x597 ISZERO
0x598 ISZERO
0x599 PUSH2 0x59e
0x59c JUMPI
---
0x57a: JUMPDEST 
0x57b: V464 = 0xc
0x57d: V465 = S[0xc]
0x57e: V466 = 0x7
0x580: V467 = S[0x7]
0x581: V468 = 0xd
0x583: V469 = S[0xd]
0x584: V470 = 0xe
0x586: V471 = S[0xe]
0x595: V472 = SUB S6 V467
0x597: V473 = ISZERO V469
0x598: V474 = ISZERO V473
0x599: V475 = 0x59e
0x59c: JUMPI 0x59e V474
---
Entry stack: [V12, 0x261, 0x0, S9, {0x162, 0x34a}, S7, S6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 7
Stack additions: [S6, S5, V465, V467, V469, V471, S0, V471, V469, V472]
Exit stack: [V12, 0x261, 0x0, S9, {0x162, 0x34a}, S7, S6, 0x0, V465, V467, V469, V471, 0x0, V471, V469, V472]

================================

Block 0x59d
[0x59d:0x59d]
---
Predecessors: [0x57a]
Successors: []
---
0x59d INVALID
---
0x59d: INVALID 
---
Entry stack: [V12, 0x261, 0x0, S12, {0x162, 0x34a}, S10, S9, 0x0, V465, V467, V469, V471, 0x0, V471, V469, V472]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x261, 0x0, S12, {0x162, 0x34a}, S10, S9, 0x0, V465, V467, V469, V471, 0x0, V471, V469, V472]

================================

Block 0x59e
[0x59e:0x5b4]
---
Predecessors: [0x57a]
Successors: [0x5b5, 0x5b6]
---
0x59e JUMPDEST
0x59f DIV
0x5a0 MUL
0x5a1 DUP6
0x5a2 SUB
0x5a3 SWAP1
0x5a4 POP
0x5a5 PUSH1 0x7
0x5a7 PUSH1 0x4
0x5a9 ADD
0x5aa SLOAD
0x5ab DUP2
0x5ac DUP10
0x5ad MUL
0x5ae DUP2
0x5af ISZERO
0x5b0 ISZERO
0x5b1 PUSH2 0x5b6
0x5b4 JUMPI
---
0x59e: JUMPDEST 
0x59f: V476 = DIV V472 V469
0x5a0: V477 = MUL V476 V471
0x5a2: V478 = SUB V465 V477
0x5a5: V479 = 0x7
0x5a7: V480 = 0x4
0x5a9: V481 = ADD 0x4 0x7
0x5aa: V482 = S[0xb]
0x5ad: V483 = MUL S10 V478
0x5af: V484 = ISZERO V482
0x5b0: V485 = ISZERO V484
0x5b1: V486 = 0x5b6
0x5b4: JUMPI 0x5b6 V485
---
Entry stack: [V12, 0x261, 0x0, S12, {0x162, 0x34a}, S10, S9, 0x0, V465, V467, V469, V471, 0x0, V471, V469, V472]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, V478, V482, V483]
Exit stack: [V12, 0x261, 0x0, S12, {0x162, 0x34a}, S10, S9, 0x0, V465, V467, V469, V471, V478, V482, V483]

================================

Block 0x5b5
[0x5b5:0x5b5]
---
Predecessors: [0x59e]
Successors: []
---
0x5b5 INVALID
---
0x5b5: INVALID 
---
Entry stack: [V12, 0x261, 0x0, S11, {0x162, 0x34a}, S9, S8, 0x0, S6, S5, S4, S3, V478, V482, V483]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x261, 0x0, S11, {0x162, 0x34a}, S9, S8, 0x0, S6, S5, S4, S3, V478, V482, V483]

================================

Block 0x5b6
[0x5b6:0x5b9]
---
Predecessors: [0x59e]
Successors: [0x5ba]
---
0x5b6 JUMPDEST
0x5b7 DIV
0x5b8 SWAP6
0x5b9 POP
---
0x5b6: JUMPDEST 
0x5b7: V487 = DIV V483 V482
---
Entry stack: [V12, 0x261, 0x0, S11, {0x162, 0x34a}, S9, S8, 0x0, S6, S5, S4, S3, V478, V482, V483]
Stack pops: 8
Stack additions: [V487, S6, S5, S4, S3, S2]
Exit stack: [V12, 0x261, 0x0, S11, {0x162, 0x34a}, S9, S8, V487, S6, S5, S4, S3, V478]

================================

Block 0x5ba
[0x5ba:0x5c4]
---
Predecessors: [0x572, 0x5b6]
Successors: [0x162, 0x34a]
---
0x5ba JUMPDEST
0x5bb POP
0x5bc POP
0x5bd POP
0x5be POP
0x5bf POP
0x5c0 SWAP3
0x5c1 SWAP2
0x5c2 POP
0x5c3 POP
0x5c4 JUMP
---
0x5ba: JUMPDEST 
0x5c4: JUMP {0x162, 0x34a}
---
Entry stack: [V12, 0x261, 0x0, S9, {0x162, 0x34a}, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 9
Stack additions: [S5]
Exit stack: [V12, 0x261, 0x0, S9, S5]

================================

Block 0x5c5
[0x5c5:0x5db]
---
Predecessors: [0x26b]
Successors: [0x5dc, 0x5e0]
---
0x5c5 JUMPDEST
0x5c6 PUSH1 0x0
0x5c8 SLOAD
0x5c9 CALLER
0x5ca PUSH1 0x1
0x5cc PUSH1 0xa0
0x5ce PUSH1 0x2
0x5d0 EXP
0x5d1 SUB
0x5d2 SWAP1
0x5d3 DUP2
0x5d4 AND
0x5d5 SWAP2
0x5d6 AND
0x5d7 EQ
0x5d8 PUSH2 0x5e0
0x5db JUMPI
---
0x5c5: JUMPDEST 
0x5c6: V488 = 0x0
0x5c8: V489 = S[0x0]
0x5c9: V490 = CALLER
0x5ca: V491 = 0x1
0x5cc: V492 = 0xa0
0x5ce: V493 = 0x2
0x5d0: V494 = EXP 0x2 0xa0
0x5d1: V495 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5d4: V496 = AND 0xffffffffffffffffffffffffffffffffffffffff V490
0x5d6: V497 = AND V489 0xffffffffffffffffffffffffffffffffffffffff
0x5d7: V498 = EQ V497 V496
0x5d8: V499 = 0x5e0
0x5db: JUMPI 0x5e0 V498
---
Entry stack: [V12, 0x261, V197]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x261, V197]

================================

Block 0x5dc
[0x5dc:0x5df]
---
Predecessors: [0x5c5]
Successors: []
---
0x5dc PUSH2 0x0
0x5df JUMP
---
0x5dc: V500 = 0x0
0x5df: THROW 
---
Entry stack: [V12, 0x261, V197]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x261, V197]

================================

Block 0x5e0
[0x5e0:0x608]
---
Predecessors: [0x5c5]
Successors: [0x609]
---
0x5e0 JUMPDEST
0x5e1 PUSH1 0x0
0x5e3 DUP1
0x5e4 SLOAD
0x5e5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5fa NOT
0x5fb AND
0x5fc PUSH1 0x1
0x5fe PUSH1 0xa0
0x600 PUSH1 0x2
0x602 EXP
0x603 SUB
0x604 DUP4
0x605 AND
0x606 OR
0x607 SWAP1
0x608 SSTORE
---
0x5e0: JUMPDEST 
0x5e1: V501 = 0x0
0x5e4: V502 = S[0x0]
0x5e5: V503 = 0xffffffffffffffffffffffffffffffffffffffff
0x5fa: V504 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x5fb: V505 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V502
0x5fc: V506 = 0x1
0x5fe: V507 = 0xa0
0x600: V508 = 0x2
0x602: V509 = EXP 0x2 0xa0
0x603: V510 = SUB 0x10000000000000000000000000000000000000000 0x1
0x605: V511 = AND V197 0xffffffffffffffffffffffffffffffffffffffff
0x606: V512 = OR V511 V505
0x608: S[0x0] = V512
---
Entry stack: [V12, 0x261, V197]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x261, V197]

================================

Block 0x609
[0x609:0x609]
---
Predecessors: [0x5e0, 0x635]
Successors: [0x60a]
---
0x609 JUMPDEST
---
0x609: JUMPDEST 
---
Entry stack: [V12, 0x261, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x261, S0]

================================

Block 0x60a
[0x60a:0x60c]
---
Predecessors: [0x609]
Successors: [0x261]
---
0x60a JUMPDEST
0x60b POP
0x60c JUMP
---
0x60a: JUMPDEST 
0x60c: JUMP 0x261
---
Entry stack: [V12, 0x261, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x60d
[0x60d:0x620]
---
Predecessors: [0x289]
Successors: [0x621, 0x627]
---
0x60d JUMPDEST
0x60e PUSH1 0x0
0x610 PUSH1 0x7
0x612 PUSH1 0x2
0x614 ADD
0x615 SLOAD
0x616 PUSH1 0x5
0x618 SLOAD
0x619 LT
0x61a ISZERO
0x61b DUP1
0x61c ISZERO
0x61d PUSH2 0x627
0x620 JUMPI
---
0x60d: JUMPDEST 
0x60e: V513 = 0x0
0x610: V514 = 0x7
0x612: V515 = 0x2
0x614: V516 = ADD 0x2 0x7
0x615: V517 = S[0x9]
0x616: V518 = 0x5
0x618: V519 = S[0x5]
0x619: V520 = LT V519 V517
0x61a: V521 = ISZERO V520
0x61c: V522 = ISZERO V521
0x61d: V523 = 0x627
0x620: JUMPI 0x627 V522
---
Entry stack: [V12, 0x261]
Stack pops: 0
Stack additions: [0x0, V521]
Exit stack: [V12, 0x261, 0x0, V521]

================================

Block 0x621
[0x621:0x626]
---
Predecessors: [0x60d]
Successors: [0x627]
---
0x621 POP
0x622 PUSH1 0x8
0x624 SLOAD
0x625 NUMBER
0x626 GT
---
0x622: V524 = 0x8
0x624: V525 = S[0x8]
0x625: V526 = NUMBER
0x626: V527 = GT V526 V525
---
Entry stack: [V12, 0x261, 0x0, V521]
Stack pops: 1
Stack additions: [V527]
Exit stack: [V12, 0x261, 0x0, V527]

================================

Block 0x627
[0x627:0x630]
---
Predecessors: [0x60d, 0x621]
Successors: [0x631, 0x635]
---
0x627 JUMPDEST
0x628 SWAP1
0x629 POP
0x62a DUP1
0x62b ISZERO
0x62c ISZERO
0x62d PUSH2 0x635
0x630 JUMPI
---
0x627: JUMPDEST 
0x62b: V528 = ISZERO S0
0x62c: V529 = ISZERO V528
0x62d: V530 = 0x635
0x630: JUMPI 0x635 V529
---
Entry stack: [V12, 0x261, 0x0, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x261, S0]

================================

Block 0x631
[0x631:0x634]
---
Predecessors: [0x627]
Successors: []
---
0x631 PUSH2 0x0
0x634 JUMP
---
0x631: V531 = 0x0
0x634: THROW 
---
Entry stack: [V12, 0x261, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x261, S0]

================================

Block 0x635
[0x635:0x665]
---
Predecessors: [0x627]
Successors: [0x609, 0x666]
---
0x635 JUMPDEST
0x636 PUSH1 0x2
0x638 SLOAD
0x639 PUSH1 0x40
0x63b MLOAD
0x63c PUSH1 0x1
0x63e PUSH1 0xa0
0x640 PUSH1 0x2
0x642 EXP
0x643 SUB
0x644 SWAP2
0x645 DUP3
0x646 AND
0x647 SWAP2
0x648 ADDRESS
0x649 AND
0x64a BALANCE
0x64b DUP1
0x64c ISZERO
0x64d PUSH2 0x8fc
0x650 MUL
0x651 SWAP2
0x652 PUSH1 0x0
0x654 DUP2
0x655 DUP2
0x656 DUP2
0x657 DUP6
0x658 DUP9
0x659 DUP9
0x65a CALL
0x65b SWAP4
0x65c POP
0x65d POP
0x65e POP
0x65f POP
0x660 ISZERO
0x661 ISZERO
0x662 PUSH2 0x609
0x665 JUMPI
---
0x635: JUMPDEST 
0x636: V532 = 0x2
0x638: V533 = S[0x2]
0x639: V534 = 0x40
0x63b: V535 = M[0x40]
0x63c: V536 = 0x1
0x63e: V537 = 0xa0
0x640: V538 = 0x2
0x642: V539 = EXP 0x2 0xa0
0x643: V540 = SUB 0x10000000000000000000000000000000000000000 0x1
0x646: V541 = AND 0xffffffffffffffffffffffffffffffffffffffff V533
0x648: V542 = ADDRESS
0x649: V543 = AND V542 0xffffffffffffffffffffffffffffffffffffffff
0x64a: V544 = BALANCE V543
0x64c: V545 = ISZERO V544
0x64d: V546 = 0x8fc
0x650: V547 = MUL 0x8fc V545
0x652: V548 = 0x0
0x65a: V549 = CALL V547 V541 V544 V535 0x0 V535 0x0
0x660: V550 = ISZERO V549
0x661: V551 = ISZERO V550
0x662: V552 = 0x609
0x665: JUMPI 0x609 V551
---
Entry stack: [V12, 0x261, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x261, S0]

================================

Block 0x666
[0x666:0x669]
---
Predecessors: [0x635]
Successors: []
---
0x666 PUSH2 0x0
0x669 JUMP
---
0x666: V553 = 0x0
0x669: THROW 
---
Entry stack: [V12, 0x261, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x261, S0]

================================

Block 0x66a
[0x66a:0x66a]
---
Predecessors: []
Successors: [0x66b]
---
0x66a JUMPDEST
---
0x66a: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x66b
[0x66b:0x66b]
---
Predecessors: [0x66a]
Successors: [0x66c]
---
0x66b JUMPDEST
---
0x66b: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x66c
[0x66c:0x66e]
---
Predecessors: [0x66b]
Successors: []
Has unresolved jump.
---
0x66c JUMPDEST
0x66d POP
0x66e JUMP
---
0x66c: JUMPDEST 
0x66e: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x66f
[0x66f:0x67d]
---
Predecessors: [0x29b]
Successors: [0x2a3]
---
0x66f JUMPDEST
0x670 PUSH1 0x1
0x672 SLOAD
0x673 PUSH1 0x1
0x675 PUSH1 0xa0
0x677 PUSH1 0x2
0x679 EXP
0x67a SUB
0x67b AND
0x67c DUP2
0x67d JUMP
---
0x66f: JUMPDEST 
0x670: V554 = 0x1
0x672: V555 = S[0x1]
0x673: V556 = 0x1
0x675: V557 = 0xa0
0x677: V558 = 0x2
0x679: V559 = EXP 0x2 0xa0
0x67a: V560 = SUB 0x10000000000000000000000000000000000000000 0x1
0x67b: V561 = AND 0xffffffffffffffffffffffffffffffffffffffff V555
0x67d: JUMP 0x2a3
---
Entry stack: [V12, 0x2a3]
Stack pops: 1
Stack additions: [S0, V561]
Exit stack: [V12, 0x2a3, V561]

================================

Block 0x67e
[0x67e:0x692]
---
Predecessors: [0x2c7]
Successors: [0x693, 0x699]
---
0x67e JUMPDEST
0x67f PUSH1 0x0
0x681 PUSH1 0x0
0x683 PUSH1 0x7
0x685 PUSH1 0x2
0x687 ADD
0x688 SLOAD
0x689 PUSH1 0x5
0x68b SLOAD
0x68c LT
0x68d DUP1
0x68e ISZERO
0x68f PUSH2 0x699
0x692 JUMPI
---
0x67e: JUMPDEST 
0x67f: V562 = 0x0
0x681: V563 = 0x0
0x683: V564 = 0x7
0x685: V565 = 0x2
0x687: V566 = ADD 0x2 0x7
0x688: V567 = S[0x9]
0x689: V568 = 0x5
0x68b: V569 = S[0x5]
0x68c: V570 = LT V569 V567
0x68e: V571 = ISZERO V570
0x68f: V572 = 0x699
0x692: JUMPI 0x699 V571
---
Entry stack: [V12, 0x261]
Stack pops: 0
Stack additions: [0x0, 0x0, V570]
Exit stack: [V12, 0x261, 0x0, 0x0, V570]

================================

Block 0x693
[0x693:0x698]
---
Predecessors: [0x67e]
Successors: [0x699]
---
0x693 POP
0x694 PUSH1 0x8
0x696 SLOAD
0x697 NUMBER
0x698 GT
---
0x694: V573 = 0x8
0x696: V574 = S[0x8]
0x697: V575 = NUMBER
0x698: V576 = GT V575 V574
---
Entry stack: [V12, 0x261, 0x0, 0x0, V570]
Stack pops: 1
Stack additions: [V576]
Exit stack: [V12, 0x261, 0x0, 0x0, V576]

================================

Block 0x699
[0x699:0x6a2]
---
Predecessors: [0x67e, 0x693]
Successors: [0x6a3, 0x6a7]
---
0x699 JUMPDEST
0x69a SWAP1
0x69b POP
0x69c DUP1
0x69d ISZERO
0x69e ISZERO
0x69f PUSH2 0x6a7
0x6a2 JUMPI
---
0x699: JUMPDEST 
0x69d: V577 = ISZERO S0
0x69e: V578 = ISZERO V577
0x69f: V579 = 0x6a7
0x6a2: JUMPI 0x6a7 V578
---
Entry stack: [V12, 0x261, 0x0, 0x0, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x261, 0x0, S0]

================================

Block 0x6a3
[0x6a3:0x6a6]
---
Predecessors: [0x699]
Successors: []
---
0x6a3 PUSH2 0x0
0x6a6 JUMP
---
0x6a3: V580 = 0x0
0x6a6: THROW 
---
Entry stack: [V12, 0x261, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x261, 0x0, S0]

================================

Block 0x6a7
[0x6a7:0x6e7]
---
Predecessors: [0x699]
Successors: [0x25c, 0x6e8]
---
0x6a7 JUMPDEST
0x6a8 PUSH1 0x1
0x6aa PUSH1 0xa0
0x6ac PUSH1 0x2
0x6ae EXP
0x6af SUB
0x6b0 CALLER
0x6b1 AND
0x6b2 PUSH1 0x0
0x6b4 DUP2
0x6b5 DUP2
0x6b6 MSTORE
0x6b7 PUSH1 0x4
0x6b9 PUSH1 0x20
0x6bb MSTORE
0x6bc PUSH1 0x40
0x6be DUP1
0x6bf DUP3
0x6c0 SHA3
0x6c1 DUP1
0x6c2 SLOAD
0x6c3 SWAP1
0x6c4 DUP4
0x6c5 SWAP1
0x6c6 SSTORE
0x6c7 SWAP1
0x6c8 MLOAD
0x6c9 SWAP1
0x6ca SWAP5
0x6cb POP
0x6cc DUP5
0x6cd ISZERO
0x6ce PUSH2 0x8fc
0x6d1 MUL
0x6d2 SWAP2
0x6d3 DUP6
0x6d4 SWAP2
0x6d5 SWAP1
0x6d6 DUP2
0x6d7 DUP2
0x6d8 DUP2
0x6d9 DUP6
0x6da DUP9
0x6db DUP9
0x6dc CALL
0x6dd SWAP4
0x6de POP
0x6df POP
0x6e0 POP
0x6e1 POP
0x6e2 ISZERO
0x6e3 ISZERO
0x6e4 PUSH2 0x25c
0x6e7 JUMPI
---
0x6a7: JUMPDEST 
0x6a8: V581 = 0x1
0x6aa: V582 = 0xa0
0x6ac: V583 = 0x2
0x6ae: V584 = EXP 0x2 0xa0
0x6af: V585 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6b0: V586 = CALLER
0x6b1: V587 = AND V586 0xffffffffffffffffffffffffffffffffffffffff
0x6b2: V588 = 0x0
0x6b6: M[0x0] = V587
0x6b7: V589 = 0x4
0x6b9: V590 = 0x20
0x6bb: M[0x20] = 0x4
0x6bc: V591 = 0x40
0x6c0: V592 = SHA3 0x0 0x40
0x6c2: V593 = S[V592]
0x6c6: S[V592] = 0x0
0x6c8: V594 = M[0x40]
0x6cd: V595 = ISZERO V593
0x6ce: V596 = 0x8fc
0x6d1: V597 = MUL 0x8fc V595
0x6dc: V598 = CALL V597 V587 V593 V594 0x0 V594 0x0
0x6e2: V599 = ISZERO V598
0x6e3: V600 = ISZERO V599
0x6e4: V601 = 0x25c
0x6e7: JUMPI 0x25c V600
---
Entry stack: [V12, 0x261, 0x0, S0]
Stack pops: 2
Stack additions: [V593, S0]
Exit stack: [V12, 0x261, V593, S0]

================================

Block 0x6e8
[0x6e8:0x6eb]
---
Predecessors: [0x6a7]
Successors: []
---
0x6e8 PUSH2 0x0
0x6eb JUMP
---
0x6e8: V602 = 0x0
0x6eb: THROW 
---
Entry stack: [V12, 0x261, V593, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x261, V593, S0]

================================

Block 0x6ec
[0x6ec:0x6ec]
---
Predecessors: []
Successors: [0x6ed]
---
0x6ec JUMPDEST
---
0x6ec: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x6ed
[0x6ed:0x6ed]
---
Predecessors: [0x6ec]
Successors: [0x6ee]
---
0x6ed JUMPDEST
---
0x6ed: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x6ee
[0x6ee:0x6f1]
---
Predecessors: [0x6ed]
Successors: []
Has unresolved jump.
---
0x6ee JUMPDEST
0x6ef POP
0x6f0 POP
0x6f1 JUMP
---
0x6ee: JUMPDEST 
0x6f1: JUMP S2
---
Entry stack: []
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0x6f2
[0x6f2:0x70c]
---
Predecessors: [0x2d9]
Successors: [0x2e1]
---
0x6f2 JUMPDEST
0x6f3 PUSH1 0x7
0x6f5 SLOAD
0x6f6 PUSH1 0x8
0x6f8 SLOAD
0x6f9 PUSH1 0x9
0x6fb SLOAD
0x6fc PUSH1 0xa
0x6fe SLOAD
0x6ff PUSH1 0xb
0x701 SLOAD
0x702 PUSH1 0xc
0x704 SLOAD
0x705 PUSH1 0xd
0x707 SLOAD
0x708 PUSH1 0xe
0x70a SLOAD
0x70b DUP9
0x70c JUMP
---
0x6f2: JUMPDEST 
0x6f3: V603 = 0x7
0x6f5: V604 = S[0x7]
0x6f6: V605 = 0x8
0x6f8: V606 = S[0x8]
0x6f9: V607 = 0x9
0x6fb: V608 = S[0x9]
0x6fc: V609 = 0xa
0x6fe: V610 = S[0xa]
0x6ff: V611 = 0xb
0x701: V612 = S[0xb]
0x702: V613 = 0xc
0x704: V614 = S[0xc]
0x705: V615 = 0xd
0x707: V616 = S[0xd]
0x708: V617 = 0xe
0x70a: V618 = S[0xe]
0x70c: JUMP 0x2e1
---
Entry stack: [V12, 0x2e1]
Stack pops: 1
Stack additions: [S0, V604, V606, V608, V610, V612, V614, V616, V618]
Exit stack: [V12, 0x2e1, V604, V606, V608, V610, V612, V614, V616, V618]

================================

Block 0x70d
[0x70d:0x723]
---
Predecessors: [0x32a]
Successors: [0x724, 0x728]
---
0x70d JUMPDEST
0x70e PUSH1 0x1
0x710 SLOAD
0x711 CALLER
0x712 PUSH1 0x1
0x714 PUSH1 0xa0
0x716 PUSH1 0x2
0x718 EXP
0x719 SUB
0x71a SWAP1
0x71b DUP2
0x71c AND
0x71d SWAP2
0x71e AND
0x71f EQ
0x720 PUSH2 0x728
0x723 JUMPI
---
0x70d: JUMPDEST 
0x70e: V619 = 0x1
0x710: V620 = S[0x1]
0x711: V621 = CALLER
0x712: V622 = 0x1
0x714: V623 = 0xa0
0x716: V624 = 0x2
0x718: V625 = EXP 0x2 0xa0
0x719: V626 = SUB 0x10000000000000000000000000000000000000000 0x1
0x71c: V627 = AND 0xffffffffffffffffffffffffffffffffffffffff V621
0x71e: V628 = AND V620 0xffffffffffffffffffffffffffffffffffffffff
0x71f: V629 = EQ V628 V627
0x720: V630 = 0x728
0x723: JUMPI 0x728 V629
---
Entry stack: [V12, 0x261]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x261]

================================

Block 0x724
[0x724:0x727]
---
Predecessors: [0x70d]
Successors: []
---
0x724 PUSH2 0x0
0x727 JUMP
---
0x724: V631 = 0x0
0x727: THROW 
---
Entry stack: [V12, 0x261]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x261]

================================

Block 0x728
[0x728:0x733]
---
Predecessors: [0x70d]
Successors: []
---
0x728 JUMPDEST
0x729 CALLER
0x72a PUSH1 0x1
0x72c PUSH1 0xa0
0x72e PUSH1 0x2
0x730 EXP
0x731 SUB
0x732 AND
0x733 SELFDESTRUCT
---
0x728: JUMPDEST 
0x729: V632 = CALLER
0x72a: V633 = 0x1
0x72c: V634 = 0xa0
0x72e: V635 = 0x2
0x730: V636 = EXP 0x2 0xa0
0x731: V637 = SUB 0x10000000000000000000000000000000000000000 0x1
0x732: V638 = AND 0xffffffffffffffffffffffffffffffffffffffff V632
0x733: SELFDESTRUCT V638
---
Entry stack: [V12, 0x261]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x261]

================================

Block 0x734
[0x734:0x734]
---
Predecessors: []
Successors: [0x735]
---
0x734 JUMPDEST
---
0x734: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x735
[0x735:0x736]
---
Predecessors: [0x734]
Successors: []
Has unresolved jump.
---
0x735 JUMPDEST
0x736 JUMP
---
0x735: JUMPDEST 
0x736: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x737
[0x737:0x745]
---
Predecessors: [0x364]
Successors: [0x2a3]
---
0x737 JUMPDEST
0x738 PUSH1 0x0
0x73a SLOAD
0x73b PUSH1 0x1
0x73d PUSH1 0xa0
0x73f PUSH1 0x2
0x741 EXP
0x742 SUB
0x743 AND
0x744 DUP2
0x745 JUMP
---
0x737: JUMPDEST 
0x738: V639 = 0x0
0x73a: V640 = S[0x0]
0x73b: V641 = 0x1
0x73d: V642 = 0xa0
0x73f: V643 = 0x2
0x741: V644 = EXP 0x2 0xa0
0x742: V645 = SUB 0x10000000000000000000000000000000000000000 0x1
0x743: V646 = AND 0xffffffffffffffffffffffffffffffffffffffff V640
0x745: JUMP 0x2a3
---
Entry stack: [V12, 0x2a3]
Stack pops: 1
Stack additions: [S0, V646]
Exit stack: [V12, 0x2a3, V646]

================================

Block 0x746
[0x746:0x74a]
---
Predecessors: [0x390]
Successors: []
---
0x746 JUMPDEST
0x747 PUSH2 0x0
0x74a JUMP
---
0x746: JUMPDEST 
0x747: V647 = 0x0
0x74a: THROW 
---
Entry stack: [V12, 0x261, V311, V313, V316, V291]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x261, V311, V313, V316, V291]

================================

Block 0x74b
[0x74b:0x750]
---
Predecessors: []
Successors: []
Has unresolved jump.
---
0x74b JUMPDEST
0x74c POP
0x74d POP
0x74e POP
0x74f POP
0x750 JUMP
---
0x74b: JUMPDEST 
0x750: JUMP S4
---
Entry stack: []
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0x751
[0x751:0x75f]
---
Predecessors: [0x3fe]
Successors: [0x2a3]
---
0x751 JUMPDEST
0x752 PUSH1 0x3
0x754 SLOAD
0x755 PUSH1 0x1
0x757 PUSH1 0xa0
0x759 PUSH1 0x2
0x75b EXP
0x75c SUB
0x75d AND
0x75e DUP2
0x75f JUMP
---
0x751: JUMPDEST 
0x752: V648 = 0x3
0x754: V649 = S[0x3]
0x755: V650 = 0x1
0x757: V651 = 0xa0
0x759: V652 = 0x2
0x75b: V653 = EXP 0x2 0xa0
0x75c: V654 = SUB 0x10000000000000000000000000000000000000000 0x1
0x75d: V655 = AND 0xffffffffffffffffffffffffffffffffffffffff V649
0x75f: JUMP 0x2a3
---
Entry stack: [V12, 0x2a3]
Stack pops: 1
Stack additions: [S0, V655]
Exit stack: [V12, 0x2a3, V655]

================================

Block 0x760
[0x760:0x765]
---
Predecessors: [0x42a]
Successors: [0x34a]
---
0x760 JUMPDEST
0x761 PUSH1 0x5
0x763 SLOAD
0x764 DUP2
0x765 JUMP
---
0x760: JUMPDEST 
0x761: V656 = 0x5
0x763: V657 = S[0x5]
0x765: JUMP 0x34a
---
Entry stack: [V12, 0x34a]
Stack pops: 1
Stack additions: [S0, V657]
Exit stack: [V12, 0x34a, V657]

================================

Block 0x766
[0x766:0x774]
---
Predecessors: [0x44c]
Successors: [0x2a3]
---
0x766 JUMPDEST
0x767 PUSH1 0x2
0x769 SLOAD
0x76a PUSH1 0x1
0x76c PUSH1 0xa0
0x76e PUSH1 0x2
0x770 EXP
0x771 SUB
0x772 AND
0x773 DUP2
0x774 JUMP
---
0x766: JUMPDEST 
0x767: V658 = 0x2
0x769: V659 = S[0x2]
0x76a: V660 = 0x1
0x76c: V661 = 0xa0
0x76e: V662 = 0x2
0x770: V663 = EXP 0x2 0xa0
0x771: V664 = SUB 0x10000000000000000000000000000000000000000 0x1
0x772: V665 = AND 0xffffffffffffffffffffffffffffffffffffffff V659
0x774: JUMP 0x2a3
---
Entry stack: [V12, 0x2a3]
Stack pops: 1
Stack additions: [S0, V665]
Exit stack: [V12, 0x2a3, V665]

================================

Block 0x775
[0x775:0x7b4]
---
Predecessors: [0x478]
Successors: [0x7b5, 0x7fb]
---
0x775 JUMPDEST
0x776 PUSH1 0x6
0x778 DUP1
0x779 SLOAD
0x77a PUSH1 0x40
0x77c DUP1
0x77d MLOAD
0x77e PUSH1 0x20
0x780 PUSH1 0x2
0x782 PUSH1 0x1
0x784 DUP6
0x785 AND
0x786 ISZERO
0x787 PUSH2 0x100
0x78a MUL
0x78b PUSH1 0x0
0x78d NOT
0x78e ADD
0x78f SWAP1
0x790 SWAP5
0x791 AND
0x792 SWAP4
0x793 SWAP1
0x794 SWAP4
0x795 DIV
0x796 PUSH1 0x1f
0x798 DUP2
0x799 ADD
0x79a DUP5
0x79b SWAP1
0x79c DIV
0x79d DUP5
0x79e MUL
0x79f DUP3
0x7a0 ADD
0x7a1 DUP5
0x7a2 ADD
0x7a3 SWAP1
0x7a4 SWAP3
0x7a5 MSTORE
0x7a6 DUP2
0x7a7 DUP2
0x7a8 MSTORE
0x7a9 SWAP3
0x7aa SWAP2
0x7ab DUP4
0x7ac ADD
0x7ad DUP3
0x7ae DUP3
0x7af DUP1
0x7b0 ISZERO
0x7b1 PUSH2 0x7fb
0x7b4 JUMPI
---
0x775: JUMPDEST 
0x776: V666 = 0x6
0x779: V667 = S[0x6]
0x77a: V668 = 0x40
0x77d: V669 = M[0x40]
0x77e: V670 = 0x20
0x780: V671 = 0x2
0x782: V672 = 0x1
0x785: V673 = AND V667 0x1
0x786: V674 = ISZERO V673
0x787: V675 = 0x100
0x78a: V676 = MUL 0x100 V674
0x78b: V677 = 0x0
0x78d: V678 = NOT 0x0
0x78e: V679 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V676
0x791: V680 = AND V667 V679
0x795: V681 = DIV V680 0x2
0x796: V682 = 0x1f
0x799: V683 = ADD V681 0x1f
0x79c: V684 = DIV V683 0x20
0x79e: V685 = MUL 0x20 V684
0x7a0: V686 = ADD V669 V685
0x7a2: V687 = ADD 0x20 V686
0x7a5: M[0x40] = V687
0x7a8: M[V669] = V681
0x7ac: V688 = ADD V669 0x20
0x7b0: V689 = ISZERO V681
0x7b1: V690 = 0x7fb
0x7b4: JUMPI 0x7fb V689
---
Entry stack: [V12, 0x480]
Stack pops: 0
Stack additions: [V669, 0x6, V681, V688, 0x6, V681]
Exit stack: [V12, 0x480, V669, 0x6, V681, V688, 0x6, V681]

================================

Block 0x7b5
[0x7b5:0x7bc]
---
Predecessors: [0x775]
Successors: [0x7bd, 0x7d0]
---
0x7b5 DUP1
0x7b6 PUSH1 0x1f
0x7b8 LT
0x7b9 PUSH2 0x7d0
0x7bc JUMPI
---
0x7b6: V691 = 0x1f
0x7b8: V692 = LT 0x1f V681
0x7b9: V693 = 0x7d0
0x7bc: JUMPI 0x7d0 V692
---
Entry stack: [V12, 0x480, V669, 0x6, V681, V688, 0x6, V681]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x480, V669, 0x6, V681, V688, 0x6, V681]

================================

Block 0x7bd
[0x7bd:0x7cf]
---
Predecessors: [0x7b5]
Successors: [0x7fb]
---
0x7bd PUSH2 0x100
0x7c0 DUP1
0x7c1 DUP4
0x7c2 SLOAD
0x7c3 DIV
0x7c4 MUL
0x7c5 DUP4
0x7c6 MSTORE
0x7c7 SWAP2
0x7c8 PUSH1 0x20
0x7ca ADD
0x7cb SWAP2
0x7cc PUSH2 0x7fb
0x7cf JUMP
---
0x7bd: V694 = 0x100
0x7c2: V695 = S[0x6]
0x7c3: V696 = DIV V695 0x100
0x7c4: V697 = MUL V696 0x100
0x7c6: M[V688] = V697
0x7c8: V698 = 0x20
0x7ca: V699 = ADD 0x20 V688
0x7cc: V700 = 0x7fb
0x7cf: JUMP 0x7fb
---
Entry stack: [V12, 0x480, V669, 0x6, V681, V688, 0x6, V681]
Stack pops: 3
Stack additions: [V699, S1, S0]
Exit stack: [V12, 0x480, V669, 0x6, V681, V699, 0x6, V681]

================================

Block 0x7d0
[0x7d0:0x7dd]
---
Predecessors: [0x7b5]
Successors: [0x7de]
---
0x7d0 JUMPDEST
0x7d1 DUP3
0x7d2 ADD
0x7d3 SWAP2
0x7d4 SWAP1
0x7d5 PUSH1 0x0
0x7d7 MSTORE
0x7d8 PUSH1 0x20
0x7da PUSH1 0x0
0x7dc SHA3
0x7dd SWAP1
---
0x7d0: JUMPDEST 
0x7d2: V701 = ADD V688 V681
0x7d5: V702 = 0x0
0x7d7: M[0x0] = 0x6
0x7d8: V703 = 0x20
0x7da: V704 = 0x0
0x7dc: V705 = SHA3 0x0 0x20
---
Entry stack: [V12, 0x480, V669, 0x6, V681, V688, 0x6, V681]
Stack pops: 3
Stack additions: [V701, V705, S2]
Exit stack: [V12, 0x480, V669, 0x6, V681, V701, V705, V688]

================================

Block 0x7de
[0x7de:0x7f1]
---
Predecessors: [0x7d0, 0x7de]
Successors: [0x7de, 0x7f2]
---
0x7de JUMPDEST
0x7df DUP2
0x7e0 SLOAD
0x7e1 DUP2
0x7e2 MSTORE
0x7e3 SWAP1
0x7e4 PUSH1 0x1
0x7e6 ADD
0x7e7 SWAP1
0x7e8 PUSH1 0x20
0x7ea ADD
0x7eb DUP1
0x7ec DUP4
0x7ed GT
0x7ee PUSH2 0x7de
0x7f1 JUMPI
---
0x7de: JUMPDEST 
0x7e0: V706 = S[S1]
0x7e2: M[S0] = V706
0x7e4: V707 = 0x1
0x7e6: V708 = ADD 0x1 S1
0x7e8: V709 = 0x20
0x7ea: V710 = ADD 0x20 S0
0x7ed: V711 = GT V701 V710
0x7ee: V712 = 0x7de
0x7f1: JUMPI 0x7de V711
---
Entry stack: [V12, 0x480, V669, 0x6, V681, V701, S1, S0]
Stack pops: 3
Stack additions: [S2, V708, V710]
Exit stack: [V12, 0x480, V669, 0x6, V681, V701, V708, V710]

================================

Block 0x7f2
[0x7f2:0x7fa]
---
Predecessors: [0x7de]
Successors: [0x7fb]
---
0x7f2 DUP3
0x7f3 SWAP1
0x7f4 SUB
0x7f5 PUSH1 0x1f
0x7f7 AND
0x7f8 DUP3
0x7f9 ADD
0x7fa SWAP2
---
0x7f4: V713 = SUB V710 V701
0x7f5: V714 = 0x1f
0x7f7: V715 = AND 0x1f V713
0x7f9: V716 = ADD V701 V715
---
Entry stack: [V12, 0x480, V669, 0x6, V681, V701, V708, V710]
Stack pops: 3
Stack additions: [V716, S1, S2]
Exit stack: [V12, 0x480, V669, 0x6, V681, V716, V708, V701]

================================

Block 0x7fb
[0x7fb:0x802]
---
Predecessors: [0x775, 0x7bd, 0x7f2]
Successors: [0x480]
---
0x7fb JUMPDEST
0x7fc POP
0x7fd POP
0x7fe POP
0x7ff POP
0x800 POP
0x801 DUP2
0x802 JUMP
---
0x7fb: JUMPDEST 
0x802: JUMP 0x480
---
Entry stack: [V12, 0x480, V669, 0x6, V681, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V12, 0x480, V669]

================================

Block 0x803
[0x803:0x814]
---
Predecessors: [0x508]
Successors: [0x34a]
---
0x803 JUMPDEST
0x804 PUSH1 0x4
0x806 PUSH1 0x20
0x808 MSTORE
0x809 PUSH1 0x0
0x80b SWAP1
0x80c DUP2
0x80d MSTORE
0x80e PUSH1 0x40
0x810 SWAP1
0x811 SHA3
0x812 SLOAD
0x813 DUP2
0x814 JUMP
---
0x803: JUMPDEST 
0x804: V717 = 0x4
0x806: V718 = 0x20
0x808: M[0x20] = 0x4
0x809: V719 = 0x0
0x80d: M[0x0] = V424
0x80e: V720 = 0x40
0x811: V721 = SHA3 0x0 0x40
0x812: V722 = S[V721]
0x814: JUMP 0x34a
---
Entry stack: [V12, 0x34a, V424]
Stack pops: 2
Stack additions: [S1, V722]
Exit stack: [V12, 0x34a, V722]

================================

Block 0x815
[0x815:0x82b]
---
Predecessors: [0x536]
Successors: [0x82c, 0x830]
---
0x815 JUMPDEST
0x816 PUSH1 0x1
0x818 SLOAD
0x819 CALLER
0x81a PUSH1 0x1
0x81c PUSH1 0xa0
0x81e PUSH1 0x2
0x820 EXP
0x821 SUB
0x822 SWAP1
0x823 DUP2
0x824 AND
0x825 SWAP2
0x826 AND
0x827 EQ
0x828 PUSH2 0x830
0x82b JUMPI
---
0x815: JUMPDEST 
0x816: V723 = 0x1
0x818: V724 = S[0x1]
0x819: V725 = CALLER
0x81a: V726 = 0x1
0x81c: V727 = 0xa0
0x81e: V728 = 0x2
0x820: V729 = EXP 0x2 0xa0
0x821: V730 = SUB 0x10000000000000000000000000000000000000000 0x1
0x824: V731 = AND 0xffffffffffffffffffffffffffffffffffffffff V725
0x826: V732 = AND V724 0xffffffffffffffffffffffffffffffffffffffff
0x827: V733 = EQ V732 V731
0x828: V734 = 0x830
0x82b: JUMPI 0x830 V733
---
Entry stack: [V12, 0x261, V443]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x261, V443]

================================

Block 0x82c
[0x82c:0x82f]
---
Predecessors: [0x815]
Successors: []
---
0x82c PUSH2 0x0
0x82f JUMP
---
0x82c: V735 = 0x0
0x82f: THROW 
---
Entry stack: [V12, 0x261, V443]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x261, V443]

================================

Block 0x830
[0x830:0x858]
---
Predecessors: [0x815]
Successors: [0x859]
---
0x830 JUMPDEST
0x831 PUSH1 0x1
0x833 DUP1
0x834 SLOAD
0x835 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x84a NOT
0x84b AND
0x84c PUSH1 0x1
0x84e PUSH1 0xa0
0x850 PUSH1 0x2
0x852 EXP
0x853 SUB
0x854 DUP4
0x855 AND
0x856 OR
0x857 SWAP1
0x858 SSTORE
---
0x830: JUMPDEST 
0x831: V736 = 0x1
0x834: V737 = S[0x1]
0x835: V738 = 0xffffffffffffffffffffffffffffffffffffffff
0x84a: V739 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x84b: V740 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V737
0x84c: V741 = 0x1
0x84e: V742 = 0xa0
0x850: V743 = 0x2
0x852: V744 = EXP 0x2 0xa0
0x853: V745 = SUB 0x10000000000000000000000000000000000000000 0x1
0x855: V746 = AND V443 0xffffffffffffffffffffffffffffffffffffffff
0x856: V747 = OR V746 V740
0x858: S[0x1] = V747
---
Entry stack: [V12, 0x261, V443]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x261, V443]

================================

Block 0x859
[0x859:0x859]
---
Predecessors: [0x830]
Successors: [0x85a]
---
0x859 JUMPDEST
---
0x859: JUMPDEST 
---
Entry stack: [V12, 0x261, V443]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x261, V443]

================================

Block 0x85a
[0x85a:0x85c]
---
Predecessors: [0x859]
Successors: [0x261]
---
0x85a JUMPDEST
0x85b POP
0x85c JUMP
---
0x85a: JUMPDEST 
0x85c: JUMP 0x261
---
Entry stack: [V12, 0x261, V443]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x85d
[0x85d:0x8a1]
---
Predecessors: []
Successors: []
---
0x85d STOP
0x85e LOG1
0x85f PUSH6 0x627a7a723058
0x866 SHA3
0x867 MISSING 0xe7
0x868 MISSING 0xaa
0x869 SELFDESTRUCT
0x86a SWAP16
0x86b MISSING 0xd1
0x86c EXTCODECOPY
0x86d PUSH24 0xaafceda10e380512e5255bc1a265bdc9f24d87cd9ce5ab72
0x886 PUSH27 0x29
---
0x85d: STOP 
0x85e: LOG S0 S1 S2
0x85f: V748 = 0x627a7a723058
0x866: V749 = SHA3 0x627a7a723058 S3
0x867: MISSING 0xe7
0x868: MISSING 0xaa
0x869: SELFDESTRUCT S0
0x86b: MISSING 0xd1
0x86c: EXTCODECOPY S0 S1 S2 S3
0x86d: V750 = 0xaafceda10e380512e5255bc1a265bdc9f24d87cd9ce5ab72
0x886: V751 = 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V749, S16, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S0, 0x29, 0xaafceda10e380512e5255bc1a265bdc9f24d87cd9ce5ab72]
Exit stack: []

================================

Function 0:
Public function signature: 0x13af4035
Entry block: 0x263
Exit block: 0x261
Body: 0x261, 0x263, 0x26a, 0x26b, 0x5c5, 0x5dc, 0x5e0, 0x609, 0x60a

Function 1:
Public function signature: 0x3ccfd60b
Entry block: 0x281
Exit block: 0x261
Body: 0x261, 0x281, 0x288, 0x289, 0x609, 0x60a, 0x60d, 0x621, 0x627, 0x631, 0x635, 0x666

Function 2:
Public function signature: 0x457f4d41
Entry block: 0x293
Exit block: 0x2a3
Body: 0x293, 0x29a, 0x29b, 0x2a3, 0x66f

Function 3:
Public function signature: 0x590e1ae3
Entry block: 0x2bf
Exit block: 0x261
Body: 0x25c, 0x25d, 0x261, 0x2bf, 0x2c6, 0x2c7, 0x67e, 0x693, 0x699, 0x6a3, 0x6a7, 0x6e8

Function 4:
Public function signature: 0x79502c55
Entry block: 0x2d1
Exit block: 0x2e1
Body: 0x2d1, 0x2d8, 0x2d9, 0x2e1, 0x6f2

Function 5:
Public function signature: 0x83197ef0
Entry block: 0x322
Exit block: 0x724
Body: 0x322, 0x329, 0x32a, 0x70d, 0x724, 0x728

Function 6:
Public function signature: 0x890814f8
Entry block: 0x334
Exit block: 0x34a
Body: 0x334, 0x33b, 0x33c, 0x34a

Function 7:
Public function signature: 0x8da5cb5b
Entry block: 0x35c
Exit block: 0x2a3
Body: 0x2a3, 0x35c, 0x363, 0x364, 0x737

Function 8:
Public function signature: 0x8f4ffcb1
Entry block: 0x388
Exit block: 0x746
Body: 0x388, 0x38f, 0x390, 0x746

Function 9:
Public function signature: 0x943dfef1
Entry block: 0x3f6
Exit block: 0x2a3
Body: 0x2a3, 0x3f6, 0x3fd, 0x3fe, 0x751

Function 10:
Public function signature: 0xad044f49
Entry block: 0x422
Exit block: 0x34a
Body: 0x34a, 0x422, 0x429, 0x42a, 0x760

Function 11:
Public function signature: 0xb60d4288
Entry block: 0x444
Exit block: 0x2a3
Body: 0x2a3, 0x444, 0x44b, 0x44c, 0x766

Function 12:
Public function signature: 0xc65d15b9
Entry block: 0x470
Exit block: 0x4f2
Body: 0x470, 0x477, 0x478, 0x480, 0x4a6, 0x4b4, 0x4c6, 0x4d9, 0x4f2, 0x775, 0x7b5, 0x7bd, 0x7d0, 0x7de, 0x7f2, 0x7fb

Function 13:
Public function signature: 0xcc6cb19a
Entry block: 0x500
Exit block: 0x34a
Body: 0x34a, 0x500, 0x507, 0x508, 0x803

Function 14:
Public function signature: 0xd31fdffd
Entry block: 0x52e
Exit block: 0x261
Body: 0x261, 0x52e, 0x535, 0x536, 0x815, 0x82c, 0x830, 0x859, 0x85a

Function 15:
Public fallback function
Entry block: 0xbf
Exit block: 0x261
Body: 0xbf, 0xc3, 0xd8, 0xde, 0xe5, 0xeb, 0xf5, 0xf9, 0x162, 0x1c6, 0x1c7, 0x1d3, 0x1d4, 0x24a, 0x24b, 0x257, 0x258, 0x25c, 0x25d, 0x261

Function 16:
Private function
Entry block: 0x54c
Exit block: 0x5ba
Body: 0x54c, 0x566, 0x56c, 0x572, 0x57a, 0x59e, 0x5b6, 0x5ba

