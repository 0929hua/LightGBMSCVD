Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x5c]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x46b0e2ef
0x3c EQ
0x3d PUSH2 0x5c
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x46b0e2ef
0x3c: V13 = EQ 0x46b0e2ef V11
0x3d: V14 = 0x5c
0x40: JUMPI 0x5c V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x95]
---
0x41 DUP1
0x42 PUSH4 0x89e897ae
0x47 EQ
0x48 PUSH2 0x95
0x4b JUMPI
---
0x42: V15 = 0x89e897ae
0x47: V16 = EQ 0x89e897ae V11
0x48: V17 = 0x95
0x4b: JUMPI 0x95 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xc3]
---
0x4c DUP1
0x4d PUSH4 0x8da5cb5b
0x52 EQ
0x53 PUSH2 0xc3
0x56 JUMPI
---
0x4d: V18 = 0x8da5cb5b
0x52: V19 = EQ 0x8da5cb5b V11
0x53: V20 = 0xc3
0x56: JUMPI 0xc3 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x5b]
---
Predecessors: [0x0, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x57: JUMPDEST 
0x58: V21 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0x62]
---
Predecessors: [0xd]
Successors: [0x63, 0x67]
---
0x5c JUMPDEST
0x5d CALLVALUE
0x5e ISZERO
0x5f PUSH2 0x67
0x62 JUMPI
---
0x5c: JUMPDEST 
0x5d: V22 = CALLVALUE
0x5e: V23 = ISZERO V22
0x5f: V24 = 0x67
0x62: JUMPI 0x67 V23
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x63
[0x63:0x66]
---
Predecessors: [0x5c]
Successors: []
---
0x63 PUSH1 0x0
0x65 DUP1
0x66 REVERT
---
0x63: V25 = 0x0
0x66: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x67
[0x67:0x92]
---
Predecessors: [0x5c]
Successors: [0x118]
---
0x67 JUMPDEST
0x68 PUSH2 0x93
0x6b PUSH1 0x4
0x6d DUP1
0x6e DUP1
0x6f CALLDATALOAD
0x70 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x85 AND
0x86 SWAP1
0x87 PUSH1 0x20
0x89 ADD
0x8a SWAP1
0x8b SWAP2
0x8c SWAP1
0x8d POP
0x8e POP
0x8f PUSH2 0x118
0x92 JUMP
---
0x67: JUMPDEST 
0x68: V26 = 0x93
0x6b: V27 = 0x4
0x6f: V28 = CALLDATALOAD 0x4
0x70: V29 = 0xffffffffffffffffffffffffffffffffffffffff
0x85: V30 = AND 0xffffffffffffffffffffffffffffffffffffffff V28
0x87: V31 = 0x20
0x89: V32 = ADD 0x20 0x4
0x8f: V33 = 0x118
0x92: JUMP 0x118
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x93, V30]
Exit stack: [V11, 0x93, V30]

================================

Block 0x93
[0x93:0x94]
---
Predecessors: []
Successors: []
---
0x93 JUMPDEST
0x94 STOP
---
0x93: JUMPDEST 
0x94: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x95
[0x95:0xc0]
---
Predecessors: [0x41]
Successors: [0x1ad]
---
0x95 JUMPDEST
0x96 PUSH2 0xc1
0x99 PUSH1 0x4
0x9b DUP1
0x9c DUP1
0x9d CALLDATALOAD
0x9e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb3 AND
0xb4 SWAP1
0xb5 PUSH1 0x20
0xb7 ADD
0xb8 SWAP1
0xb9 SWAP2
0xba SWAP1
0xbb POP
0xbc POP
0xbd PUSH2 0x1ad
0xc0 JUMP
---
0x95: JUMPDEST 
0x96: V34 = 0xc1
0x99: V35 = 0x4
0x9d: V36 = CALLDATALOAD 0x4
0x9e: V37 = 0xffffffffffffffffffffffffffffffffffffffff
0xb3: V38 = AND 0xffffffffffffffffffffffffffffffffffffffff V36
0xb5: V39 = 0x20
0xb7: V40 = ADD 0x20 0x4
0xbd: V41 = 0x1ad
0xc0: JUMP 0x1ad
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xc1, V38]
Exit stack: [V11, 0xc1, V38]

================================

Block 0xc1
[0xc1:0xc2]
---
Predecessors: [0x21d]
Successors: []
---
0xc1 JUMPDEST
0xc2 STOP
---
0xc1: JUMPDEST 
0xc2: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc3
[0xc3:0xc9]
---
Predecessors: [0x4c]
Successors: [0xca, 0xce]
---
0xc3 JUMPDEST
0xc4 CALLVALUE
0xc5 ISZERO
0xc6 PUSH2 0xce
0xc9 JUMPI
---
0xc3: JUMPDEST 
0xc4: V42 = CALLVALUE
0xc5: V43 = ISZERO V42
0xc6: V44 = 0xce
0xc9: JUMPI 0xce V43
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xca
[0xca:0xcd]
---
Predecessors: [0xc3]
Successors: []
---
0xca PUSH1 0x0
0xcc DUP1
0xcd REVERT
---
0xca: V45 = 0x0
0xcd: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xce
[0xce:0xd5]
---
Predecessors: [0xc3]
Successors: [0x221]
---
0xce JUMPDEST
0xcf PUSH2 0xd6
0xd2 PUSH2 0x221
0xd5 JUMP
---
0xce: JUMPDEST 
0xcf: V46 = 0xd6
0xd2: V47 = 0x221
0xd5: JUMP 0x221
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xd6]
Exit stack: [V11, 0xd6]

================================

Block 0xd6
[0xd6:0x117]
---
Predecessors: [0x221]
Successors: []
---
0xd6 JUMPDEST
0xd7 PUSH1 0x40
0xd9 MLOAD
0xda DUP1
0xdb DUP3
0xdc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf1 AND
0xf2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x107 AND
0x108 DUP2
0x109 MSTORE
0x10a PUSH1 0x20
0x10c ADD
0x10d SWAP2
0x10e POP
0x10f POP
0x110 PUSH1 0x40
0x112 MLOAD
0x113 DUP1
0x114 SWAP2
0x115 SUB
0x116 SWAP1
0x117 RETURN
---
0xd6: JUMPDEST 
0xd7: V48 = 0x40
0xd9: V49 = M[0x40]
0xdc: V50 = 0xffffffffffffffffffffffffffffffffffffffff
0xf1: V51 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0xf2: V52 = 0xffffffffffffffffffffffffffffffffffffffff
0x107: V53 = AND 0xffffffffffffffffffffffffffffffffffffffff V51
0x109: M[V49] = V53
0x10a: V54 = 0x20
0x10c: V55 = ADD 0x20 V49
0x110: V56 = 0x40
0x112: V57 = M[0x40]
0x115: V58 = SUB V55 V57
0x117: RETURN V57 V58
---
Entry stack: [V11, 0xd6, V113]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xd6]

================================

Block 0x118
[0x118:0x16e]
---
Predecessors: [0x67]
Successors: [0x16f, 0x173]
---
0x118 JUMPDEST
0x119 PUSH1 0x0
0x11b DUP1
0x11c SWAP1
0x11d SLOAD
0x11e SWAP1
0x11f PUSH2 0x100
0x122 EXP
0x123 SWAP1
0x124 DIV
0x125 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13a AND
0x13b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x150 AND
0x151 CALLER
0x152 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x167 AND
0x168 EQ
0x169 ISZERO
0x16a ISZERO
0x16b PUSH2 0x173
0x16e JUMPI
---
0x118: JUMPDEST 
0x119: V59 = 0x0
0x11d: V60 = S[0x0]
0x11f: V61 = 0x100
0x122: V62 = EXP 0x100 0x0
0x124: V63 = DIV V60 0x1
0x125: V64 = 0xffffffffffffffffffffffffffffffffffffffff
0x13a: V65 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0x13b: V66 = 0xffffffffffffffffffffffffffffffffffffffff
0x150: V67 = AND 0xffffffffffffffffffffffffffffffffffffffff V65
0x151: V68 = CALLER
0x152: V69 = 0xffffffffffffffffffffffffffffffffffffffff
0x167: V70 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0x168: V71 = EQ V70 V67
0x169: V72 = ISZERO V71
0x16a: V73 = ISZERO V72
0x16b: V74 = 0x173
0x16e: JUMPI 0x173 V73
---
Entry stack: [V11, 0x93, V30]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x93, V30]

================================

Block 0x16f
[0x16f:0x172]
---
Predecessors: [0x118]
Successors: []
---
0x16f PUSH1 0x0
0x171 DUP1
0x172 REVERT
---
0x16f: V75 = 0x0
0x172: REVERT 0x0 0x0
---
Entry stack: [V11, 0x93, V30]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x93, V30]

================================

Block 0x173
[0x173:0x1ac]
---
Predecessors: [0x118]
Successors: []
---
0x173 JUMPDEST
0x174 PUSH1 0x0
0x176 DUP1
0x177 SWAP1
0x178 SLOAD
0x179 SWAP1
0x17a PUSH2 0x100
0x17d EXP
0x17e SWAP1
0x17f DIV
0x180 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x195 AND
0x196 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ab AND
0x1ac SELFDESTRUCT
---
0x173: JUMPDEST 
0x174: V76 = 0x0
0x178: V77 = S[0x0]
0x17a: V78 = 0x100
0x17d: V79 = EXP 0x100 0x0
0x17f: V80 = DIV V77 0x1
0x180: V81 = 0xffffffffffffffffffffffffffffffffffffffff
0x195: V82 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0x196: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ab: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V82
0x1ac: SELFDESTRUCT V84
---
Entry stack: [V11, 0x93, V30]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x93, V30]

================================

Block 0x1ad
[0x1ad:0x218]
---
Predecessors: [0x95]
Successors: [0x219, 0x21d]
---
0x1ad JUMPDEST
0x1ae PUSH1 0x0
0x1b0 PUSH20 0xc57f674e2deeb52b8407ee715b61fd510ef87f34
0x1c5 SWAP1
0x1c6 POP
0x1c7 DUP1
0x1c8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1dd AND
0x1de PUSH2 0x8fc
0x1e1 ADDRESS
0x1e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f7 AND
0x1f8 BALANCE
0x1f9 SWAP1
0x1fa DUP2
0x1fb ISZERO
0x1fc MUL
0x1fd SWAP1
0x1fe PUSH1 0x40
0x200 MLOAD
0x201 PUSH1 0x0
0x203 PUSH1 0x40
0x205 MLOAD
0x206 DUP1
0x207 DUP4
0x208 SUB
0x209 DUP2
0x20a DUP6
0x20b DUP9
0x20c DUP9
0x20d CALL
0x20e SWAP4
0x20f POP
0x210 POP
0x211 POP
0x212 POP
0x213 ISZERO
0x214 ISZERO
0x215 PUSH2 0x21d
0x218 JUMPI
---
0x1ad: JUMPDEST 
0x1ae: V85 = 0x0
0x1b0: V86 = 0xc57f674e2deeb52b8407ee715b61fd510ef87f34
0x1c8: V87 = 0xffffffffffffffffffffffffffffffffffffffff
0x1dd: V88 = AND 0xffffffffffffffffffffffffffffffffffffffff 0xc57f674e2deeb52b8407ee715b61fd510ef87f34
0x1de: V89 = 0x8fc
0x1e1: V90 = ADDRESS
0x1e2: V91 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f7: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff V90
0x1f8: V93 = BALANCE V92
0x1fb: V94 = ISZERO V93
0x1fc: V95 = MUL V94 0x8fc
0x1fe: V96 = 0x40
0x200: V97 = M[0x40]
0x201: V98 = 0x0
0x203: V99 = 0x40
0x205: V100 = M[0x40]
0x208: V101 = SUB V97 V100
0x20d: V102 = CALL V95 0xc57f674e2deeb52b8407ee715b61fd510ef87f34 V93 V100 V101 V100 0x0
0x213: V103 = ISZERO V102
0x214: V104 = ISZERO V103
0x215: V105 = 0x21d
0x218: JUMPI 0x21d V104
---
Entry stack: [V11, 0xc1, V38]
Stack pops: 0
Stack additions: [0xc57f674e2deeb52b8407ee715b61fd510ef87f34]
Exit stack: [V11, 0xc1, V38, 0xc57f674e2deeb52b8407ee715b61fd510ef87f34]

================================

Block 0x219
[0x219:0x21c]
---
Predecessors: [0x1ad]
Successors: []
---
0x219 PUSH1 0x0
0x21b DUP1
0x21c REVERT
---
0x219: V106 = 0x0
0x21c: REVERT 0x0 0x0
---
Entry stack: [V11, 0xc1, V38, 0xc57f674e2deeb52b8407ee715b61fd510ef87f34]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc1, V38, 0xc57f674e2deeb52b8407ee715b61fd510ef87f34]

================================

Block 0x21d
[0x21d:0x220]
---
Predecessors: [0x1ad]
Successors: [0xc1]
---
0x21d JUMPDEST
0x21e POP
0x21f POP
0x220 JUMP
---
0x21d: JUMPDEST 
0x220: JUMP 0xc1
---
Entry stack: [V11, 0xc1, V38, 0xc57f674e2deeb52b8407ee715b61fd510ef87f34]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x221
[0x221:0x245]
---
Predecessors: [0xce]
Successors: [0xd6]
---
0x221 JUMPDEST
0x222 PUSH1 0x0
0x224 DUP1
0x225 SWAP1
0x226 SLOAD
0x227 SWAP1
0x228 PUSH2 0x100
0x22b EXP
0x22c SWAP1
0x22d DIV
0x22e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x243 AND
0x244 DUP2
0x245 JUMP
---
0x221: JUMPDEST 
0x222: V107 = 0x0
0x226: V108 = S[0x0]
0x228: V109 = 0x100
0x22b: V110 = EXP 0x100 0x0
0x22d: V111 = DIV V108 0x1
0x22e: V112 = 0xffffffffffffffffffffffffffffffffffffffff
0x243: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x245: JUMP 0xd6
---
Entry stack: [V11, 0xd6]
Stack pops: 1
Stack additions: [S0, V113]
Exit stack: [V11, 0xd6, V113]

================================

Block 0x246
[0x246:0x284]
---
Predecessors: []
Successors: []
---
0x246 STOP
0x247 LOG1
0x248 PUSH6 0x627a7a723058
0x24f SHA3
0x250 CALLER
0x251 NOT
0x252 PUSH5 0x3ac9cb219f
0x258 SLOAD
0x259 MISSING 0xeb
0x25a NOT
0x25b MISSING 0xd4
0x25c SSTORE
0x25d DUP6
0x25e PUSH6 0xa2ae4729f65
0x265 PUSH31 0xc568af9b53622797089c0029
---
0x246: STOP 
0x247: LOG S0 S1 S2
0x248: V114 = 0x627a7a723058
0x24f: V115 = SHA3 0x627a7a723058 S3
0x250: V116 = CALLER
0x251: V117 = NOT V116
0x252: V118 = 0x3ac9cb219f
0x258: V119 = S[0x3ac9cb219f]
0x259: MISSING 0xeb
0x25a: V120 = NOT S0
0x25b: MISSING 0xd4
0x25c: S[S0] = S1
0x25e: V121 = 0xa2ae4729f65
0x265: V122 = 0xc568af9b53622797089c0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V119, V117, V115, V120, 0xc568af9b53622797089c0029, 0xa2ae4729f65, S7, S2, S3, S4, S5, S6, S7]
Exit stack: []

================================

Function 0:
Public function signature: 0x46b0e2ef
Entry block: 0x5c
Exit block: 0x173
Body: 0x5c, 0x63, 0x67, 0x118, 0x16f, 0x173

Function 1:
Public function signature: 0x89e897ae
Entry block: 0x95
Exit block: 0xc1
Body: 0x95, 0xc1, 0x1ad, 0x219, 0x21d

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0xc3
Exit block: 0xd6
Body: 0xc3, 0xca, 0xce, 0xd6, 0x221

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

