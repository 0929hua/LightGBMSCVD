Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x117]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x117
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x117
0xa: JUMPI 0x117 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x12c]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x21e0f228
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x12c
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x21e0f228
0x20: V14 = EQ V12 0x21e0f228
0x21: V15 = 0x12c
0x24: JUMPI 0x12c V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x159]
---
0x25 DUP1
0x26 PUSH4 0x28180023
0x2b EQ
0x2c PUSH2 0x159
0x2f JUMPI
---
0x26: V16 = 0x28180023
0x2b: V17 = EQ 0x28180023 V12
0x2c: V18 = 0x159
0x2f: JUMPI 0x159 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x17b]
---
0x30 DUP1
0x31 PUSH4 0x36b09474
0x36 EQ
0x37 PUSH2 0x17b
0x3a JUMPI
---
0x31: V19 = 0x36b09474
0x36: V20 = EQ 0x36b09474 V12
0x37: V21 = 0x17b
0x3a: JUMPI 0x17b V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x19f]
---
0x3b DUP1
0x3c PUSH4 0x3947050f
0x41 EQ
0x42 PUSH2 0x19f
0x45 JUMPI
---
0x3c: V22 = 0x3947050f
0x41: V23 = EQ 0x3947050f V12
0x42: V24 = 0x19f
0x45: JUMPI 0x19f V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x1a9]
---
0x46 DUP1
0x47 PUSH4 0x3a3bdf56
0x4c EQ
0x4d PUSH2 0x1a9
0x50 JUMPI
---
0x47: V25 = 0x3a3bdf56
0x4c: V26 = EQ 0x3a3bdf56 V12
0x4d: V27 = 0x1a9
0x50: JUMPI 0x1a9 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x1c7]
---
0x51 DUP1
0x52 PUSH4 0x3ccfd60b
0x57 EQ
0x58 PUSH2 0x1c7
0x5b JUMPI
---
0x52: V28 = 0x3ccfd60b
0x57: V29 = EQ 0x3ccfd60b V12
0x58: V30 = 0x1c7
0x5b: JUMPI 0x1c7 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x1d9]
---
0x5c DUP1
0x5d PUSH4 0x45f472fc
0x62 EQ
0x63 PUSH2 0x1d9
0x66 JUMPI
---
0x5d: V31 = 0x45f472fc
0x62: V32 = EQ 0x45f472fc V12
0x63: V33 = 0x1d9
0x66: JUMPI 0x1d9 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x1fb]
---
0x67 DUP1
0x68 PUSH4 0x5c49d96c
0x6d EQ
0x6e PUSH2 0x1fb
0x71 JUMPI
---
0x68: V34 = 0x5c49d96c
0x6d: V35 = EQ 0x5c49d96c V12
0x6e: V36 = 0x1fb
0x71: JUMPI 0x1fb V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x21d]
---
0x72 DUP1
0x73 PUSH4 0x5c76ca2d
0x78 EQ
0x79 PUSH2 0x21d
0x7c JUMPI
---
0x73: V37 = 0x5c76ca2d
0x78: V38 = EQ 0x5c76ca2d V12
0x79: V39 = 0x21d
0x7c: JUMPI 0x21d V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x241]
---
0x7d DUP1
0x7e PUSH4 0x6494d477
0x83 EQ
0x84 PUSH2 0x241
0x87 JUMPI
---
0x7e: V40 = 0x6494d477
0x83: V41 = EQ 0x6494d477 V12
0x84: V42 = 0x241
0x87: JUMPI 0x241 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x263]
---
0x88 DUP1
0x89 PUSH4 0x66fa2be9
0x8e EQ
0x8f PUSH2 0x263
0x92 JUMPI
---
0x89: V43 = 0x66fa2be9
0x8e: V44 = EQ 0x66fa2be9 V12
0x8f: V45 = 0x263
0x92: JUMPI 0x263 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x29f]
---
0x93 DUP1
0x94 PUSH4 0x70740ac9
0x99 EQ
0x9a PUSH2 0x29f
0x9d JUMPI
---
0x94: V46 = 0x70740ac9
0x99: V47 = EQ 0x70740ac9 V12
0x9a: V48 = 0x29f
0x9d: JUMPI 0x29f V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x2b1]
---
0x9e DUP1
0x9f PUSH4 0x719ce73e
0xa4 EQ
0xa5 PUSH2 0x2b1
0xa8 JUMPI
---
0x9f: V49 = 0x719ce73e
0xa4: V50 = EQ 0x719ce73e V12
0xa5: V51 = 0x2b1
0xa8: JUMPI 0x2b1 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x2d3]
---
0xa9 DUP1
0xaa PUSH4 0x7d2026cd
0xaf EQ
0xb0 PUSH2 0x2d3
0xb3 JUMPI
---
0xaa: V52 = 0x7d2026cd
0xaf: V53 = EQ 0x7d2026cd V12
0xb0: V54 = 0x2d3
0xb3: JUMPI 0x2d3 V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x2e5]
---
0xb4 DUP1
0xb5 PUSH4 0x825c3e36
0xba EQ
0xbb PUSH2 0x2e5
0xbe JUMPI
---
0xb5: V55 = 0x825c3e36
0xba: V56 = EQ 0x825c3e36 V12
0xbb: V57 = 0x2e5
0xbe: JUMPI 0x2e5 V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x300]
---
0xbf DUP1
0xc0 PUSH4 0x88279320
0xc5 EQ
0xc6 PUSH2 0x300
0xc9 JUMPI
---
0xc0: V58 = 0x88279320
0xc5: V59 = EQ 0x88279320 V12
0xc6: V60 = 0x300
0xc9: JUMPI 0x300 V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5, 0x322]
---
0xca DUP1
0xcb PUSH4 0xa2fb1175
0xd0 EQ
0xd1 PUSH2 0x322
0xd4 JUMPI
---
0xcb: V61 = 0xa2fb1175
0xd0: V62 = EQ 0xa2fb1175 V12
0xd1: V63 = 0x322
0xd4: JUMPI 0x322 V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xdf]
---
Predecessors: [0xca]
Successors: [0xe0, 0x351]
---
0xd5 DUP1
0xd6 PUSH4 0xa8492f46
0xdb EQ
0xdc PUSH2 0x351
0xdf JUMPI
---
0xd6: V64 = 0xa8492f46
0xdb: V65 = EQ 0xa8492f46 V12
0xdc: V66 = 0x351
0xdf: JUMPI 0x351 V65
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xe0
[0xe0:0xea]
---
Predecessors: [0xd5]
Successors: [0xeb, 0x368]
---
0xe0 DUP1
0xe1 PUSH4 0xb94bc7fe
0xe6 EQ
0xe7 PUSH2 0x368
0xea JUMPI
---
0xe1: V67 = 0xb94bc7fe
0xe6: V68 = EQ 0xb94bc7fe V12
0xe7: V69 = 0x368
0xea: JUMPI 0x368 V68
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xeb
[0xeb:0xf5]
---
Predecessors: [0xe0]
Successors: [0xf6, 0x395]
---
0xeb DUP1
0xec PUSH4 0xd5b2a01a
0xf1 EQ
0xf2 PUSH2 0x395
0xf5 JUMPI
---
0xec: V70 = 0xd5b2a01a
0xf1: V71 = EQ 0xd5b2a01a V12
0xf2: V72 = 0x395
0xf5: JUMPI 0x395 V71
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xf6
[0xf6:0x100]
---
Predecessors: [0xeb]
Successors: [0x101, 0x3b7]
---
0xf6 DUP1
0xf7 PUSH4 0xd6779b01
0xfc EQ
0xfd PUSH2 0x3b7
0x100 JUMPI
---
0xf7: V73 = 0xd6779b01
0xfc: V74 = EQ 0xd6779b01 V12
0xfd: V75 = 0x3b7
0x100: JUMPI 0x3b7 V74
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x101
[0x101:0x10b]
---
Predecessors: [0xf6]
Successors: [0x10c, 0x3e7]
---
0x101 DUP1
0x102 PUSH4 0xf2fde38b
0x107 EQ
0x108 PUSH2 0x3e7
0x10b JUMPI
---
0x102: V76 = 0xf2fde38b
0x107: V77 = EQ 0xf2fde38b V12
0x108: V78 = 0x3e7
0x10b: JUMPI 0x3e7 V77
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x10c
[0x10c:0x116]
---
Predecessors: [0x101]
Successors: [0x117, 0x405]
---
0x10c DUP1
0x10d PUSH4 0xfc0e74d1
0x112 EQ
0x113 PUSH2 0x405
0x116 JUMPI
---
0x10d: V79 = 0xfc0e74d1
0x112: V80 = EQ 0xfc0e74d1 V12
0x113: V81 = 0x405
0x116: JUMPI 0x405 V80
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x117
[0x117:0x11d]
---
Predecessors: [0x0, 0x10c]
Successors: [0x11e, 0x11f]
---
0x117 JUMPDEST
0x118 CALLVALUE
0x119 ISZERO
0x11a PUSH2 0x11f
0x11d JUMPI
---
0x117: JUMPDEST 
0x118: V82 = CALLVALUE
0x119: V83 = ISZERO V82
0x11a: V84 = 0x11f
0x11d: JUMPI 0x11f V83
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x11e
[0x11e:0x11e]
---
Predecessors: [0x117]
Successors: []
---
0x11e INVALID
---
0x11e: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x11f
[0x11f:0x122]
---
Predecessors: [0x117]
Successors: [0x123]
---
0x11f JUMPDEST
0x120 PUSH2 0x12a
---
0x11f: JUMPDEST 
0x120: V85 = 0x12a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12a]
Exit stack: [V12, 0x12a]

================================

Block 0x123
[0x123:0x127]
---
Predecessors: [0x11f]
Successors: []
---
0x123 JUMPDEST
0x124 PUSH2 0x0
0x127 JUMP
---
0x123: JUMPDEST 
0x124: V86 = 0x0
0x127: THROW 
---
Entry stack: [V12, 0x12a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a]

================================

Block 0x128
[0x128:0x129]
---
Predecessors: [0x5e2, 0x5e8, 0x772, 0xc5e]
Successors: [0x12a]
---
0x128 JUMPDEST
0x129 JUMP
---
0x128: JUMPDEST 
0x129: JUMP S0
---
Entry stack: [V12, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x12a
[0x12a:0x12b]
---
Predecessors: [0x128, 0x510, 0x8d7, 0xb0c, 0xc13, 0x102c]
Successors: []
---
0x12a JUMPDEST
0x12b STOP
---
0x12a: JUMPDEST 
0x12b: STOP 
---
Entry stack: [V12, 0x12a, V249, V253, S10, {0x12a, 0x8d3}, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, V249, V253, S10, {0x12a, 0x8d3}, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x12c
[0x12c:0x132]
---
Predecessors: [0xb]
Successors: [0x133, 0x134]
---
0x12c JUMPDEST
0x12d CALLVALUE
0x12e ISZERO
0x12f PUSH2 0x134
0x132 JUMPI
---
0x12c: JUMPDEST 
0x12d: V87 = CALLVALUE
0x12e: V88 = ISZERO V87
0x12f: V89 = 0x134
0x132: JUMPI 0x134 V88
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x133
[0x133:0x133]
---
Predecessors: [0x12c]
Successors: []
---
0x133 INVALID
---
0x133: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x134
[0x134:0x13b]
---
Predecessors: [0x12c]
Successors: [0x417]
---
0x134 JUMPDEST
0x135 PUSH2 0x13c
0x138 PUSH2 0x417
0x13b JUMP
---
0x134: JUMPDEST 
0x135: V90 = 0x13c
0x138: V91 = 0x417
0x13b: JUMP 0x417
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x13c]
Exit stack: [V12, 0x13c]

================================

Block 0x13c
[0x13c:0x158]
---
Predecessors: [0x417]
Successors: []
---
0x13c JUMPDEST
0x13d PUSH1 0x40
0x13f DUP1
0x140 MLOAD
0x141 PUSH1 0x1
0x143 PUSH1 0xe0
0x145 PUSH1 0x2
0x147 EXP
0x148 SUB
0x149 NOT
0x14a SWAP1
0x14b SWAP3
0x14c AND
0x14d DUP3
0x14e MSTORE
0x14f MLOAD
0x150 SWAP1
0x151 DUP2
0x152 SWAP1
0x153 SUB
0x154 PUSH1 0x20
0x156 ADD
0x157 SWAP1
0x158 RETURN
---
0x13c: JUMPDEST 
0x13d: V92 = 0x40
0x140: V93 = M[0x40]
0x141: V94 = 0x1
0x143: V95 = 0xe0
0x145: V96 = 0x2
0x147: V97 = EXP 0x2 0xe0
0x148: V98 = SUB 0x100000000000000000000000000000000000000000000000000000000 0x1
0x149: V99 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x14c: V100 = AND V370 0xffffffff00000000000000000000000000000000000000000000000000000000
0x14e: M[V93] = V100
0x14f: V101 = M[0x40]
0x153: V102 = SUB V93 V101
0x154: V103 = 0x20
0x156: V104 = ADD 0x20 V102
0x158: RETURN V101 V104
---
Entry stack: [V12, 0x13c, V370]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x13c]

================================

Block 0x159
[0x159:0x15f]
---
Predecessors: [0x25]
Successors: [0x160, 0x161]
---
0x159 JUMPDEST
0x15a CALLVALUE
0x15b ISZERO
0x15c PUSH2 0x161
0x15f JUMPI
---
0x159: JUMPDEST 
0x15a: V105 = CALLVALUE
0x15b: V106 = ISZERO V105
0x15c: V107 = 0x161
0x15f: JUMPI 0x161 V106
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x160
[0x160:0x160]
---
Predecessors: [0x159]
Successors: []
---
0x160 INVALID
---
0x160: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x161
[0x161:0x168]
---
Predecessors: [0x159]
Successors: [0x423]
---
0x161 JUMPDEST
0x162 PUSH2 0x169
0x165 PUSH2 0x423
0x168 JUMP
---
0x161: JUMPDEST 
0x162: V108 = 0x169
0x165: V109 = 0x423
0x168: JUMP 0x423
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x169]
Exit stack: [V12, 0x169]

================================

Block 0x169
[0x169:0x17a]
---
Predecessors: [0x423, 0x622, 0x628, 0x6ea, 0x7ba, 0x996, 0xbb3]
Successors: []
---
0x169 JUMPDEST
0x16a PUSH1 0x40
0x16c DUP1
0x16d MLOAD
0x16e SWAP2
0x16f DUP3
0x170 MSTORE
0x171 MLOAD
0x172 SWAP1
0x173 DUP2
0x174 SWAP1
0x175 SUB
0x176 PUSH1 0x20
0x178 ADD
0x179 SWAP1
0x17a RETURN
---
0x169: JUMPDEST 
0x16a: V110 = 0x40
0x16d: V111 = M[0x40]
0x170: M[V111] = S0
0x171: V112 = M[0x40]
0x175: V113 = SUB V111 V112
0x176: V114 = 0x20
0x178: V115 = ADD 0x20 V113
0x17a: RETURN V112 V115
---
Entry stack: [V12, 0x169, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x169]

================================

Block 0x17b
[0x17b:0x181]
---
Predecessors: [0x30]
Successors: [0x182, 0x183]
---
0x17b JUMPDEST
0x17c CALLVALUE
0x17d ISZERO
0x17e PUSH2 0x183
0x181 JUMPI
---
0x17b: JUMPDEST 
0x17c: V116 = CALLVALUE
0x17d: V117 = ISZERO V116
0x17e: V118 = 0x183
0x181: JUMPI 0x183 V117
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x182
[0x182:0x182]
---
Predecessors: [0x17b]
Successors: []
---
0x182 INVALID
---
0x182: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x183
[0x183:0x18a]
---
Predecessors: [0x17b]
Successors: [0x429]
---
0x183 JUMPDEST
0x184 PUSH2 0x18b
0x187 PUSH2 0x429
0x18a JUMP
---
0x183: JUMPDEST 
0x184: V119 = 0x18b
0x187: V120 = 0x429
0x18a: JUMP 0x429
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x18b]
Exit stack: [V12, 0x18b]

================================

Block 0x18b
[0x18b:0x19e]
---
Predecessors: [0x429, 0x6e5, 0xbaa, 0xbb9]
Successors: []
---
0x18b JUMPDEST
0x18c PUSH1 0x40
0x18e DUP1
0x18f MLOAD
0x190 SWAP2
0x191 ISZERO
0x192 ISZERO
0x193 DUP3
0x194 MSTORE
0x195 MLOAD
0x196 SWAP1
0x197 DUP2
0x198 SWAP1
0x199 SUB
0x19a PUSH1 0x20
0x19c ADD
0x19d SWAP1
0x19e RETURN
---
0x18b: JUMPDEST 
0x18c: V121 = 0x40
0x18f: V122 = M[0x40]
0x191: V123 = ISZERO S0
0x192: V124 = ISZERO V123
0x194: M[V122] = V124
0x195: V125 = M[0x40]
0x199: V126 = SUB V122 V125
0x19a: V127 = 0x20
0x19c: V128 = ADD 0x20 V126
0x19e: RETURN V125 V128
---
Entry stack: [V12, 0x12a, V249, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x12a, V249, S2, S1]

================================

Block 0x19f
[0x19f:0x1a6]
---
Predecessors: [0x3b]
Successors: [0x43a]
---
0x19f JUMPDEST
0x1a0 PUSH2 0x12a
0x1a3 PUSH2 0x43a
0x1a6 JUMP
---
0x19f: JUMPDEST 
0x1a0: V129 = 0x12a
0x1a3: V130 = 0x43a
0x1a6: JUMP 0x43a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12a]
Exit stack: [V12, 0x12a]

================================

Block 0x1a7
[0x1a7:0x1a8]
---
Predecessors: []
Successors: []
---
0x1a7 JUMPDEST
0x1a8 STOP
---
0x1a7: JUMPDEST 
0x1a8: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1a9
[0x1a9:0x1af]
---
Predecessors: [0x46]
Successors: [0x1b0, 0x1b1]
---
0x1a9 JUMPDEST
0x1aa CALLVALUE
0x1ab ISZERO
0x1ac PUSH2 0x1b1
0x1af JUMPI
---
0x1a9: JUMPDEST 
0x1aa: V131 = CALLVALUE
0x1ab: V132 = ISZERO V131
0x1ac: V133 = 0x1b1
0x1af: JUMPI 0x1b1 V132
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b0
[0x1b0:0x1b0]
---
Predecessors: [0x1a9]
Successors: []
---
0x1b0 INVALID
---
0x1b0: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b1
[0x1b1:0x1c4]
---
Predecessors: [0x1a9]
Successors: [0x514]
---
0x1b1 JUMPDEST
0x1b2 PUSH2 0x12a
0x1b5 PUSH1 0x1
0x1b7 PUSH1 0xa0
0x1b9 PUSH1 0x2
0x1bb EXP
0x1bc SUB
0x1bd PUSH1 0x4
0x1bf CALLDATALOAD
0x1c0 AND
0x1c1 PUSH2 0x514
0x1c4 JUMP
---
0x1b1: JUMPDEST 
0x1b2: V134 = 0x12a
0x1b5: V135 = 0x1
0x1b7: V136 = 0xa0
0x1b9: V137 = 0x2
0x1bb: V138 = EXP 0x2 0xa0
0x1bc: V139 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1bd: V140 = 0x4
0x1bf: V141 = CALLDATALOAD 0x4
0x1c0: V142 = AND V141 0xffffffffffffffffffffffffffffffffffffffff
0x1c1: V143 = 0x514
0x1c4: JUMP 0x514
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12a, V142]
Exit stack: [V12, 0x12a, V142]

================================

Block 0x1c5
[0x1c5:0x1c6]
---
Predecessors: []
Successors: []
---
0x1c5 JUMPDEST
0x1c6 STOP
---
0x1c5: JUMPDEST 
0x1c6: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1c7
[0x1c7:0x1cd]
---
Predecessors: [0x51]
Successors: [0x1ce, 0x1cf]
---
0x1c7 JUMPDEST
0x1c8 CALLVALUE
0x1c9 ISZERO
0x1ca PUSH2 0x1cf
0x1cd JUMPI
---
0x1c7: JUMPDEST 
0x1c8: V144 = CALLVALUE
0x1c9: V145 = ISZERO V144
0x1ca: V146 = 0x1cf
0x1cd: JUMPI 0x1cf V145
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ce
[0x1ce:0x1ce]
---
Predecessors: [0x1c7]
Successors: []
---
0x1ce INVALID
---
0x1ce: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1cf
[0x1cf:0x1d6]
---
Predecessors: [0x1c7]
Successors: [0x59a]
---
0x1cf JUMPDEST
0x1d0 PUSH2 0x12a
0x1d3 PUSH2 0x59a
0x1d6 JUMP
---
0x1cf: JUMPDEST 
0x1d0: V147 = 0x12a
0x1d3: V148 = 0x59a
0x1d6: JUMP 0x59a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12a]
Exit stack: [V12, 0x12a]

================================

Block 0x1d7
[0x1d7:0x1d8]
---
Predecessors: []
Successors: []
---
0x1d7 JUMPDEST
0x1d8 STOP
---
0x1d7: JUMPDEST 
0x1d8: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1d9
[0x1d9:0x1df]
---
Predecessors: [0x5c]
Successors: [0x1e0, 0x1e1]
---
0x1d9 JUMPDEST
0x1da CALLVALUE
0x1db ISZERO
0x1dc PUSH2 0x1e1
0x1df JUMPI
---
0x1d9: JUMPDEST 
0x1da: V149 = CALLVALUE
0x1db: V150 = ISZERO V149
0x1dc: V151 = 0x1e1
0x1df: JUMPI 0x1e1 V150
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e0
[0x1e0:0x1e0]
---
Predecessors: [0x1d9]
Successors: []
---
0x1e0 INVALID
---
0x1e0: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e1
[0x1e1:0x1e8]
---
Predecessors: [0x1d9]
Successors: [0x622]
---
0x1e1 JUMPDEST
0x1e2 PUSH2 0x169
0x1e5 PUSH2 0x622
0x1e8 JUMP
---
0x1e1: JUMPDEST 
0x1e2: V152 = 0x169
0x1e5: V153 = 0x622
0x1e8: JUMP 0x622
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x169]
Exit stack: [V12, 0x169]

================================

Block 0x1e9
[0x1e9:0x1fa]
---
Predecessors: []
Successors: []
---
0x1e9 JUMPDEST
0x1ea PUSH1 0x40
0x1ec DUP1
0x1ed MLOAD
0x1ee SWAP2
0x1ef DUP3
0x1f0 MSTORE
0x1f1 MLOAD
0x1f2 SWAP1
0x1f3 DUP2
0x1f4 SWAP1
0x1f5 SUB
0x1f6 PUSH1 0x20
0x1f8 ADD
0x1f9 SWAP1
0x1fa RETURN
---
0x1e9: JUMPDEST 
0x1ea: V154 = 0x40
0x1ed: V155 = M[0x40]
0x1f0: M[V155] = S0
0x1f1: V156 = M[0x40]
0x1f5: V157 = SUB V155 V156
0x1f6: V158 = 0x20
0x1f8: V159 = ADD 0x20 V157
0x1fa: RETURN V156 V159
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1fb
[0x1fb:0x201]
---
Predecessors: [0x67]
Successors: [0x202, 0x203]
---
0x1fb JUMPDEST
0x1fc CALLVALUE
0x1fd ISZERO
0x1fe PUSH2 0x203
0x201 JUMPI
---
0x1fb: JUMPDEST 
0x1fc: V160 = CALLVALUE
0x1fd: V161 = ISZERO V160
0x1fe: V162 = 0x203
0x201: JUMPI 0x203 V161
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x202
[0x202:0x202]
---
Predecessors: [0x1fb]
Successors: []
---
0x202 INVALID
---
0x202: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x203
[0x203:0x20a]
---
Predecessors: [0x1fb]
Successors: [0x628]
---
0x203 JUMPDEST
0x204 PUSH2 0x169
0x207 PUSH2 0x628
0x20a JUMP
---
0x203: JUMPDEST 
0x204: V163 = 0x169
0x207: V164 = 0x628
0x20a: JUMP 0x628
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x169]
Exit stack: [V12, 0x169]

================================

Block 0x20b
[0x20b:0x21c]
---
Predecessors: []
Successors: []
---
0x20b JUMPDEST
0x20c PUSH1 0x40
0x20e DUP1
0x20f MLOAD
0x210 SWAP2
0x211 DUP3
0x212 MSTORE
0x213 MLOAD
0x214 SWAP1
0x215 DUP2
0x216 SWAP1
0x217 SUB
0x218 PUSH1 0x20
0x21a ADD
0x21b SWAP1
0x21c RETURN
---
0x20b: JUMPDEST 
0x20c: V165 = 0x40
0x20f: V166 = M[0x40]
0x212: M[V166] = S0
0x213: V167 = M[0x40]
0x217: V168 = SUB V166 V167
0x218: V169 = 0x20
0x21a: V170 = ADD 0x20 V168
0x21c: RETURN V167 V170
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x21d
[0x21d:0x223]
---
Predecessors: [0x72]
Successors: [0x224, 0x225]
---
0x21d JUMPDEST
0x21e CALLVALUE
0x21f ISZERO
0x220 PUSH2 0x225
0x223 JUMPI
---
0x21d: JUMPDEST 
0x21e: V171 = CALLVALUE
0x21f: V172 = ISZERO V171
0x220: V173 = 0x225
0x223: JUMPI 0x225 V172
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x224
[0x224:0x224]
---
Predecessors: [0x21d]
Successors: []
---
0x224 INVALID
---
0x224: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x225
[0x225:0x22c]
---
Predecessors: [0x21d]
Successors: [0x62e]
---
0x225 JUMPDEST
0x226 PUSH2 0x18b
0x229 PUSH2 0x62e
0x22c JUMP
---
0x225: JUMPDEST 
0x226: V174 = 0x18b
0x229: V175 = 0x62e
0x22c: JUMP 0x62e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x18b]
Exit stack: [V12, 0x18b]

================================

Block 0x22d
[0x22d:0x240]
---
Predecessors: []
Successors: []
---
0x22d JUMPDEST
0x22e PUSH1 0x40
0x230 DUP1
0x231 MLOAD
0x232 SWAP2
0x233 ISZERO
0x234 ISZERO
0x235 DUP3
0x236 MSTORE
0x237 MLOAD
0x238 SWAP1
0x239 DUP2
0x23a SWAP1
0x23b SUB
0x23c PUSH1 0x20
0x23e ADD
0x23f SWAP1
0x240 RETURN
---
0x22d: JUMPDEST 
0x22e: V176 = 0x40
0x231: V177 = M[0x40]
0x233: V178 = ISZERO S0
0x234: V179 = ISZERO V178
0x236: M[V177] = V179
0x237: V180 = M[0x40]
0x23b: V181 = SUB V177 V180
0x23c: V182 = 0x20
0x23e: V183 = ADD 0x20 V181
0x240: RETURN V180 V183
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x241
[0x241:0x247]
---
Predecessors: [0x7d]
Successors: [0x248, 0x249]
---
0x241 JUMPDEST
0x242 CALLVALUE
0x243 ISZERO
0x244 PUSH2 0x249
0x247 JUMPI
---
0x241: JUMPDEST 
0x242: V184 = CALLVALUE
0x243: V185 = ISZERO V184
0x244: V186 = 0x249
0x247: JUMPI 0x249 V185
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x248
[0x248:0x248]
---
Predecessors: [0x241]
Successors: []
---
0x248 INVALID
---
0x248: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x249
[0x249:0x250]
---
Predecessors: [0x241]
Successors: [0x6ea]
---
0x249 JUMPDEST
0x24a PUSH2 0x169
0x24d PUSH2 0x6ea
0x250 JUMP
---
0x249: JUMPDEST 
0x24a: V187 = 0x169
0x24d: V188 = 0x6ea
0x250: JUMP 0x6ea
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x169]
Exit stack: [V12, 0x169]

================================

Block 0x251
[0x251:0x262]
---
Predecessors: []
Successors: []
---
0x251 JUMPDEST
0x252 PUSH1 0x40
0x254 DUP1
0x255 MLOAD
0x256 SWAP2
0x257 DUP3
0x258 MSTORE
0x259 MLOAD
0x25a SWAP1
0x25b DUP2
0x25c SWAP1
0x25d SUB
0x25e PUSH1 0x20
0x260 ADD
0x261 SWAP1
0x262 RETURN
---
0x251: JUMPDEST 
0x252: V189 = 0x40
0x255: V190 = M[0x40]
0x258: M[V190] = S0
0x259: V191 = M[0x40]
0x25d: V192 = SUB V190 V191
0x25e: V193 = 0x20
0x260: V194 = ADD 0x20 V192
0x262: RETURN V191 V194
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x263
[0x263:0x269]
---
Predecessors: [0x88]
Successors: [0x26a, 0x26b]
---
0x263 JUMPDEST
0x264 CALLVALUE
0x265 ISZERO
0x266 PUSH2 0x26b
0x269 JUMPI
---
0x263: JUMPDEST 
0x264: V195 = CALLVALUE
0x265: V196 = ISZERO V195
0x266: V197 = 0x26b
0x269: JUMPI 0x26b V196
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x26a
[0x26a:0x26a]
---
Predecessors: [0x263]
Successors: []
---
0x26a INVALID
---
0x26a: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x26b
[0x26b:0x282]
---
Predecessors: [0x263]
Successors: [0x6f0]
---
0x26b JUMPDEST
0x26c PUSH2 0x283
0x26f PUSH1 0x1
0x271 PUSH1 0xe0
0x273 PUSH1 0x2
0x275 EXP
0x276 SUB
0x277 NOT
0x278 PUSH1 0x4
0x27a CALLDATALOAD
0x27b AND
0x27c PUSH1 0x24
0x27e CALLDATALOAD
0x27f PUSH2 0x6f0
0x282 JUMP
---
0x26b: JUMPDEST 
0x26c: V198 = 0x283
0x26f: V199 = 0x1
0x271: V200 = 0xe0
0x273: V201 = 0x2
0x275: V202 = EXP 0x2 0xe0
0x276: V203 = SUB 0x100000000000000000000000000000000000000000000000000000000 0x1
0x277: V204 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x278: V205 = 0x4
0x27a: V206 = CALLDATALOAD 0x4
0x27b: V207 = AND V206 0xffffffff00000000000000000000000000000000000000000000000000000000
0x27c: V208 = 0x24
0x27e: V209 = CALLDATALOAD 0x24
0x27f: V210 = 0x6f0
0x282: JUMP 0x6f0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x283, V207, V209]
Exit stack: [V12, 0x283, V207, V209]

================================

Block 0x283
[0x283:0x29e]
---
Predecessors: [0x719, 0x9b8]
Successors: []
---
0x283 JUMPDEST
0x284 PUSH1 0x40
0x286 DUP1
0x287 MLOAD
0x288 PUSH1 0x1
0x28a PUSH1 0xa0
0x28c PUSH1 0x2
0x28e EXP
0x28f SUB
0x290 SWAP1
0x291 SWAP3
0x292 AND
0x293 DUP3
0x294 MSTORE
0x295 MLOAD
0x296 SWAP1
0x297 DUP2
0x298 SWAP1
0x299 SUB
0x29a PUSH1 0x20
0x29c ADD
0x29d SWAP1
0x29e RETURN
---
0x283: JUMPDEST 
0x284: V211 = 0x40
0x287: V212 = M[0x40]
0x288: V213 = 0x1
0x28a: V214 = 0xa0
0x28c: V215 = 0x2
0x28e: V216 = EXP 0x2 0xa0
0x28f: V217 = SUB 0x10000000000000000000000000000000000000000 0x1
0x292: V218 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x294: M[V212] = V218
0x295: V219 = M[0x40]
0x299: V220 = SUB V212 V219
0x29a: V221 = 0x20
0x29c: V222 = ADD 0x20 V220
0x29e: RETURN V219 V222
---
Entry stack: [V12, 0x283, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x283]

================================

Block 0x29f
[0x29f:0x2a5]
---
Predecessors: [0x93]
Successors: [0x2a6, 0x2a7]
---
0x29f JUMPDEST
0x2a0 CALLVALUE
0x2a1 ISZERO
0x2a2 PUSH2 0x2a7
0x2a5 JUMPI
---
0x29f: JUMPDEST 
0x2a0: V223 = CALLVALUE
0x2a1: V224 = ISZERO V223
0x2a2: V225 = 0x2a7
0x2a5: JUMPI 0x2a7 V224
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a6
[0x2a6:0x2a6]
---
Predecessors: [0x29f]
Successors: []
---
0x2a6 INVALID
---
0x2a6: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a7
[0x2a7:0x2ae]
---
Predecessors: [0x29f]
Successors: [0x732]
---
0x2a7 JUMPDEST
0x2a8 PUSH2 0x12a
0x2ab PUSH2 0x732
0x2ae JUMP
---
0x2a7: JUMPDEST 
0x2a8: V226 = 0x12a
0x2ab: V227 = 0x732
0x2ae: JUMP 0x732
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12a]
Exit stack: [V12, 0x12a]

================================

Block 0x2af
[0x2af:0x2b0]
---
Predecessors: []
Successors: []
---
0x2af JUMPDEST
0x2b0 STOP
---
0x2af: JUMPDEST 
0x2b0: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2b1
[0x2b1:0x2b7]
---
Predecessors: [0x9e]
Successors: [0x2b8, 0x2b9]
---
0x2b1 JUMPDEST
0x2b2 CALLVALUE
0x2b3 ISZERO
0x2b4 PUSH2 0x2b9
0x2b7 JUMPI
---
0x2b1: JUMPDEST 
0x2b2: V228 = CALLVALUE
0x2b3: V229 = ISZERO V228
0x2b4: V230 = 0x2b9
0x2b7: JUMPI 0x2b9 V229
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2b8
[0x2b8:0x2b8]
---
Predecessors: [0x2b1]
Successors: []
---
0x2b8 INVALID
---
0x2b8: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2b9
[0x2b9:0x2c0]
---
Predecessors: [0x2b1]
Successors: [0x7ba]
---
0x2b9 JUMPDEST
0x2ba PUSH2 0x169
0x2bd PUSH2 0x7ba
0x2c0 JUMP
---
0x2b9: JUMPDEST 
0x2ba: V231 = 0x169
0x2bd: V232 = 0x7ba
0x2c0: JUMP 0x7ba
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x169]
Exit stack: [V12, 0x169]

================================

Block 0x2c1
[0x2c1:0x2d2]
---
Predecessors: []
Successors: []
---
0x2c1 JUMPDEST
0x2c2 PUSH1 0x40
0x2c4 DUP1
0x2c5 MLOAD
0x2c6 SWAP2
0x2c7 DUP3
0x2c8 MSTORE
0x2c9 MLOAD
0x2ca SWAP1
0x2cb DUP2
0x2cc SWAP1
0x2cd SUB
0x2ce PUSH1 0x20
0x2d0 ADD
0x2d1 SWAP1
0x2d2 RETURN
---
0x2c1: JUMPDEST 
0x2c2: V233 = 0x40
0x2c5: V234 = M[0x40]
0x2c8: M[V234] = S0
0x2c9: V235 = M[0x40]
0x2cd: V236 = SUB V234 V235
0x2ce: V237 = 0x20
0x2d0: V238 = ADD 0x20 V236
0x2d2: RETURN V235 V238
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2d3
[0x2d3:0x2d9]
---
Predecessors: [0xa9]
Successors: [0x2da, 0x2db]
---
0x2d3 JUMPDEST
0x2d4 CALLVALUE
0x2d5 ISZERO
0x2d6 PUSH2 0x2db
0x2d9 JUMPI
---
0x2d3: JUMPDEST 
0x2d4: V239 = CALLVALUE
0x2d5: V240 = ISZERO V239
0x2d6: V241 = 0x2db
0x2d9: JUMPI 0x2db V240
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2da
[0x2da:0x2da]
---
Predecessors: [0x2d3]
Successors: []
---
0x2da INVALID
---
0x2da: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2db
[0x2db:0x2e2]
---
Predecessors: [0x2d3]
Successors: [0x7c0]
---
0x2db JUMPDEST
0x2dc PUSH2 0x12a
0x2df PUSH2 0x7c0
0x2e2 JUMP
---
0x2db: JUMPDEST 
0x2dc: V242 = 0x12a
0x2df: V243 = 0x7c0
0x2e2: JUMP 0x7c0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12a]
Exit stack: [V12, 0x12a]

================================

Block 0x2e3
[0x2e3:0x2e4]
---
Predecessors: []
Successors: []
---
0x2e3 JUMPDEST
0x2e4 STOP
---
0x2e3: JUMPDEST 
0x2e4: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2e5
[0x2e5:0x2eb]
---
Predecessors: [0xb4]
Successors: [0x2ec, 0x2ed]
---
0x2e5 JUMPDEST
0x2e6 CALLVALUE
0x2e7 ISZERO
0x2e8 PUSH2 0x2ed
0x2eb JUMPI
---
0x2e5: JUMPDEST 
0x2e6: V244 = CALLVALUE
0x2e7: V245 = ISZERO V244
0x2e8: V246 = 0x2ed
0x2eb: JUMPI 0x2ed V245
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ec
[0x2ec:0x2ec]
---
Predecessors: [0x2e5]
Successors: []
---
0x2ec INVALID
---
0x2ec: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ed
[0x2ed:0x2fd]
---
Predecessors: [0x2e5]
Successors: [0x8dc]
---
0x2ed JUMPDEST
0x2ee PUSH2 0x12a
0x2f1 PUSH1 0x4
0x2f3 CALLDATALOAD
0x2f4 PUSH1 0xff
0x2f6 PUSH1 0x24
0x2f8 CALLDATALOAD
0x2f9 AND
0x2fa PUSH2 0x8dc
0x2fd JUMP
---
0x2ed: JUMPDEST 
0x2ee: V247 = 0x12a
0x2f1: V248 = 0x4
0x2f3: V249 = CALLDATALOAD 0x4
0x2f4: V250 = 0xff
0x2f6: V251 = 0x24
0x2f8: V252 = CALLDATALOAD 0x24
0x2f9: V253 = AND V252 0xff
0x2fa: V254 = 0x8dc
0x2fd: JUMP 0x8dc
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12a, V249, V253]
Exit stack: [V12, 0x12a, V249, V253]

================================

Block 0x2fe
[0x2fe:0x2ff]
---
Predecessors: []
Successors: []
---
0x2fe JUMPDEST
0x2ff STOP
---
0x2fe: JUMPDEST 
0x2ff: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x300
[0x300:0x306]
---
Predecessors: [0xbf]
Successors: [0x307, 0x308]
---
0x300 JUMPDEST
0x301 CALLVALUE
0x302 ISZERO
0x303 PUSH2 0x308
0x306 JUMPI
---
0x300: JUMPDEST 
0x301: V255 = CALLVALUE
0x302: V256 = ISZERO V255
0x303: V257 = 0x308
0x306: JUMPI 0x308 V256
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x307
[0x307:0x307]
---
Predecessors: [0x300]
Successors: []
---
0x307 INVALID
---
0x307: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x308
[0x308:0x30f]
---
Predecessors: [0x300]
Successors: [0x996]
---
0x308 JUMPDEST
0x309 PUSH2 0x169
0x30c PUSH2 0x996
0x30f JUMP
---
0x308: JUMPDEST 
0x309: V258 = 0x169
0x30c: V259 = 0x996
0x30f: JUMP 0x996
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x169]
Exit stack: [V12, 0x169]

================================

Block 0x310
[0x310:0x321]
---
Predecessors: []
Successors: []
---
0x310 JUMPDEST
0x311 PUSH1 0x40
0x313 DUP1
0x314 MLOAD
0x315 SWAP2
0x316 DUP3
0x317 MSTORE
0x318 MLOAD
0x319 SWAP1
0x31a DUP2
0x31b SWAP1
0x31c SUB
0x31d PUSH1 0x20
0x31f ADD
0x320 SWAP1
0x321 RETURN
---
0x310: JUMPDEST 
0x311: V260 = 0x40
0x314: V261 = M[0x40]
0x317: M[V261] = S0
0x318: V262 = M[0x40]
0x31c: V263 = SUB V261 V262
0x31d: V264 = 0x20
0x31f: V265 = ADD 0x20 V263
0x321: RETURN V262 V265
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x322
[0x322:0x328]
---
Predecessors: [0xca]
Successors: [0x329, 0x32a]
---
0x322 JUMPDEST
0x323 CALLVALUE
0x324 ISZERO
0x325 PUSH2 0x32a
0x328 JUMPI
---
0x322: JUMPDEST 
0x323: V266 = CALLVALUE
0x324: V267 = ISZERO V266
0x325: V268 = 0x32a
0x328: JUMPI 0x32a V267
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x329
[0x329:0x329]
---
Predecessors: [0x322]
Successors: []
---
0x329 INVALID
---
0x329: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x32a
[0x32a:0x334]
---
Predecessors: [0x322]
Successors: [0x99c]
---
0x32a JUMPDEST
0x32b PUSH2 0x283
0x32e PUSH1 0x4
0x330 CALLDATALOAD
0x331 PUSH2 0x99c
0x334 JUMP
---
0x32a: JUMPDEST 
0x32b: V269 = 0x283
0x32e: V270 = 0x4
0x330: V271 = CALLDATALOAD 0x4
0x331: V272 = 0x99c
0x334: JUMP 0x99c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x283, V271]
Exit stack: [V12, 0x283, V271]

================================

Block 0x335
[0x335:0x350]
---
Predecessors: []
Successors: []
---
0x335 JUMPDEST
0x336 PUSH1 0x40
0x338 DUP1
0x339 MLOAD
0x33a PUSH1 0x1
0x33c PUSH1 0xa0
0x33e PUSH1 0x2
0x340 EXP
0x341 SUB
0x342 SWAP1
0x343 SWAP3
0x344 AND
0x345 DUP3
0x346 MSTORE
0x347 MLOAD
0x348 SWAP1
0x349 DUP2
0x34a SWAP1
0x34b SUB
0x34c PUSH1 0x20
0x34e ADD
0x34f SWAP1
0x350 RETURN
---
0x335: JUMPDEST 
0x336: V273 = 0x40
0x339: V274 = M[0x40]
0x33a: V275 = 0x1
0x33c: V276 = 0xa0
0x33e: V277 = 0x2
0x340: V278 = EXP 0x2 0xa0
0x341: V279 = SUB 0x10000000000000000000000000000000000000000 0x1
0x344: V280 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x346: M[V274] = V280
0x347: V281 = M[0x40]
0x34b: V282 = SUB V274 V281
0x34c: V283 = 0x20
0x34e: V284 = ADD 0x20 V282
0x350: RETURN V281 V284
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x351
[0x351:0x365]
---
Predecessors: [0xd5]
Successors: [0x9ce]
---
0x351 JUMPDEST
0x352 PUSH2 0x12a
0x355 PUSH1 0x1
0x357 PUSH1 0xe0
0x359 PUSH1 0x2
0x35b EXP
0x35c SUB
0x35d NOT
0x35e PUSH1 0x4
0x360 CALLDATALOAD
0x361 AND
0x362 PUSH2 0x9ce
0x365 JUMP
---
0x351: JUMPDEST 
0x352: V285 = 0x12a
0x355: V286 = 0x1
0x357: V287 = 0xe0
0x359: V288 = 0x2
0x35b: V289 = EXP 0x2 0xe0
0x35c: V290 = SUB 0x100000000000000000000000000000000000000000000000000000000 0x1
0x35d: V291 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x35e: V292 = 0x4
0x360: V293 = CALLDATALOAD 0x4
0x361: V294 = AND V293 0xffffffff00000000000000000000000000000000000000000000000000000000
0x362: V295 = 0x9ce
0x365: JUMP 0x9ce
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12a, V294]
Exit stack: [V12, 0x12a, V294]

================================

Block 0x366
[0x366:0x367]
---
Predecessors: []
Successors: []
---
0x366 JUMPDEST
0x367 STOP
---
0x366: JUMPDEST 
0x367: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x368
[0x368:0x36e]
---
Predecessors: [0xe0]
Successors: [0x36f, 0x370]
---
0x368 JUMPDEST
0x369 CALLVALUE
0x36a ISZERO
0x36b PUSH2 0x370
0x36e JUMPI
---
0x368: JUMPDEST 
0x369: V296 = CALLVALUE
0x36a: V297 = ISZERO V296
0x36b: V298 = 0x370
0x36e: JUMPI 0x370 V297
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x36f
[0x36f:0x36f]
---
Predecessors: [0x368]
Successors: []
---
0x36f INVALID
---
0x36f: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x370
[0x370:0x380]
---
Predecessors: [0x368]
Successors: [0xb10]
---
0x370 JUMPDEST
0x371 PUSH2 0x18b
0x374 PUSH1 0x4
0x376 CALLDATALOAD
0x377 PUSH1 0xff
0x379 PUSH1 0x24
0x37b CALLDATALOAD
0x37c AND
0x37d PUSH2 0xb10
0x380 JUMP
---
0x370: JUMPDEST 
0x371: V299 = 0x18b
0x374: V300 = 0x4
0x376: V301 = CALLDATALOAD 0x4
0x377: V302 = 0xff
0x379: V303 = 0x24
0x37b: V304 = CALLDATALOAD 0x24
0x37c: V305 = AND V304 0xff
0x37d: V306 = 0xb10
0x380: JUMP 0xb10
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x18b, V301, V305]
Exit stack: [V12, 0x18b, V301, V305]

================================

Block 0x381
[0x381:0x394]
---
Predecessors: []
Successors: []
---
0x381 JUMPDEST
0x382 PUSH1 0x40
0x384 DUP1
0x385 MLOAD
0x386 SWAP2
0x387 ISZERO
0x388 ISZERO
0x389 DUP3
0x38a MSTORE
0x38b MLOAD
0x38c SWAP1
0x38d DUP2
0x38e SWAP1
0x38f SUB
0x390 PUSH1 0x20
0x392 ADD
0x393 SWAP1
0x394 RETURN
---
0x381: JUMPDEST 
0x382: V307 = 0x40
0x385: V308 = M[0x40]
0x387: V309 = ISZERO S0
0x388: V310 = ISZERO V309
0x38a: M[V308] = V310
0x38b: V311 = M[0x40]
0x38f: V312 = SUB V308 V311
0x390: V313 = 0x20
0x392: V314 = ADD 0x20 V312
0x394: RETURN V311 V314
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x395
[0x395:0x39b]
---
Predecessors: [0xeb]
Successors: [0x39c, 0x39d]
---
0x395 JUMPDEST
0x396 CALLVALUE
0x397 ISZERO
0x398 PUSH2 0x39d
0x39b JUMPI
---
0x395: JUMPDEST 
0x396: V315 = CALLVALUE
0x397: V316 = ISZERO V315
0x398: V317 = 0x39d
0x39b: JUMPI 0x39d V316
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x39c
[0x39c:0x39c]
---
Predecessors: [0x395]
Successors: []
---
0x39c INVALID
---
0x39c: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x39d
[0x39d:0x3a4]
---
Predecessors: [0x395]
Successors: [0xbb3]
---
0x39d JUMPDEST
0x39e PUSH2 0x169
0x3a1 PUSH2 0xbb3
0x3a4 JUMP
---
0x39d: JUMPDEST 
0x39e: V318 = 0x169
0x3a1: V319 = 0xbb3
0x3a4: JUMP 0xbb3
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x169]
Exit stack: [V12, 0x169]

================================

Block 0x3a5
[0x3a5:0x3b6]
---
Predecessors: []
Successors: []
---
0x3a5 JUMPDEST
0x3a6 PUSH1 0x40
0x3a8 DUP1
0x3a9 MLOAD
0x3aa SWAP2
0x3ab DUP3
0x3ac MSTORE
0x3ad MLOAD
0x3ae SWAP1
0x3af DUP2
0x3b0 SWAP1
0x3b1 SUB
0x3b2 PUSH1 0x20
0x3b4 ADD
0x3b5 SWAP1
0x3b6 RETURN
---
0x3a5: JUMPDEST 
0x3a6: V320 = 0x40
0x3a9: V321 = M[0x40]
0x3ac: M[V321] = S0
0x3ad: V322 = M[0x40]
0x3b1: V323 = SUB V321 V322
0x3b2: V324 = 0x20
0x3b4: V325 = ADD 0x20 V323
0x3b6: RETURN V322 V325
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3b7
[0x3b7:0x3bd]
---
Predecessors: [0xf6]
Successors: [0x3be, 0x3bf]
---
0x3b7 JUMPDEST
0x3b8 CALLVALUE
0x3b9 ISZERO
0x3ba PUSH2 0x3bf
0x3bd JUMPI
---
0x3b7: JUMPDEST 
0x3b8: V326 = CALLVALUE
0x3b9: V327 = ISZERO V326
0x3ba: V328 = 0x3bf
0x3bd: JUMPI 0x3bf V327
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3be
[0x3be:0x3be]
---
Predecessors: [0x3b7]
Successors: []
---
0x3be INVALID
---
0x3be: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3bf
[0x3bf:0x3d2]
---
Predecessors: [0x3b7]
Successors: [0xbb9]
---
0x3bf JUMPDEST
0x3c0 PUSH2 0x18b
0x3c3 PUSH1 0x1
0x3c5 PUSH1 0xa0
0x3c7 PUSH1 0x2
0x3c9 EXP
0x3ca SUB
0x3cb PUSH1 0x4
0x3cd CALLDATALOAD
0x3ce AND
0x3cf PUSH2 0xbb9
0x3d2 JUMP
---
0x3bf: JUMPDEST 
0x3c0: V329 = 0x18b
0x3c3: V330 = 0x1
0x3c5: V331 = 0xa0
0x3c7: V332 = 0x2
0x3c9: V333 = EXP 0x2 0xa0
0x3ca: V334 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3cb: V335 = 0x4
0x3cd: V336 = CALLDATALOAD 0x4
0x3ce: V337 = AND V336 0xffffffffffffffffffffffffffffffffffffffff
0x3cf: V338 = 0xbb9
0x3d2: JUMP 0xbb9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x18b, V337]
Exit stack: [V12, 0x18b, V337]

================================

Block 0x3d3
[0x3d3:0x3e6]
---
Predecessors: []
Successors: []
---
0x3d3 JUMPDEST
0x3d4 PUSH1 0x40
0x3d6 DUP1
0x3d7 MLOAD
0x3d8 SWAP2
0x3d9 ISZERO
0x3da ISZERO
0x3db DUP3
0x3dc MSTORE
0x3dd MLOAD
0x3de SWAP1
0x3df DUP2
0x3e0 SWAP1
0x3e1 SUB
0x3e2 PUSH1 0x20
0x3e4 ADD
0x3e5 SWAP1
0x3e6 RETURN
---
0x3d3: JUMPDEST 
0x3d4: V339 = 0x40
0x3d7: V340 = M[0x40]
0x3d9: V341 = ISZERO S0
0x3da: V342 = ISZERO V341
0x3dc: M[V340] = V342
0x3dd: V343 = M[0x40]
0x3e1: V344 = SUB V340 V343
0x3e2: V345 = 0x20
0x3e4: V346 = ADD 0x20 V344
0x3e6: RETURN V343 V346
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3e7
[0x3e7:0x3ed]
---
Predecessors: [0x101]
Successors: [0x3ee, 0x3ef]
---
0x3e7 JUMPDEST
0x3e8 CALLVALUE
0x3e9 ISZERO
0x3ea PUSH2 0x3ef
0x3ed JUMPI
---
0x3e7: JUMPDEST 
0x3e8: V347 = CALLVALUE
0x3e9: V348 = ISZERO V347
0x3ea: V349 = 0x3ef
0x3ed: JUMPI 0x3ef V348
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3ee
[0x3ee:0x3ee]
---
Predecessors: [0x3e7]
Successors: []
---
0x3ee INVALID
---
0x3ee: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3ef
[0x3ef:0x402]
---
Predecessors: [0x3e7]
Successors: [0xbce]
---
0x3ef JUMPDEST
0x3f0 PUSH2 0x12a
0x3f3 PUSH1 0x1
0x3f5 PUSH1 0xa0
0x3f7 PUSH1 0x2
0x3f9 EXP
0x3fa SUB
0x3fb PUSH1 0x4
0x3fd CALLDATALOAD
0x3fe AND
0x3ff PUSH2 0xbce
0x402 JUMP
---
0x3ef: JUMPDEST 
0x3f0: V350 = 0x12a
0x3f3: V351 = 0x1
0x3f5: V352 = 0xa0
0x3f7: V353 = 0x2
0x3f9: V354 = EXP 0x2 0xa0
0x3fa: V355 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3fb: V356 = 0x4
0x3fd: V357 = CALLDATALOAD 0x4
0x3fe: V358 = AND V357 0xffffffffffffffffffffffffffffffffffffffff
0x3ff: V359 = 0xbce
0x402: JUMP 0xbce
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12a, V358]
Exit stack: [V12, 0x12a, V358]

================================

Block 0x403
[0x403:0x404]
---
Predecessors: []
Successors: []
---
0x403 JUMPDEST
0x404 STOP
---
0x403: JUMPDEST 
0x404: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x405
[0x405:0x40b]
---
Predecessors: [0x10c]
Successors: [0x40c, 0x40d]
---
0x405 JUMPDEST
0x406 CALLVALUE
0x407 ISZERO
0x408 PUSH2 0x40d
0x40b JUMPI
---
0x405: JUMPDEST 
0x406: V360 = CALLVALUE
0x407: V361 = ISZERO V360
0x408: V362 = 0x40d
0x40b: JUMPI 0x40d V361
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x40c
[0x40c:0x40c]
---
Predecessors: [0x405]
Successors: []
---
0x40c INVALID
---
0x40c: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x40d
[0x40d:0x414]
---
Predecessors: [0x405]
Successors: [0xc16]
---
0x40d JUMPDEST
0x40e PUSH2 0x12a
0x411 PUSH2 0xc16
0x414 JUMP
---
0x40d: JUMPDEST 
0x40e: V363 = 0x12a
0x411: V364 = 0xc16
0x414: JUMP 0xc16
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x12a]
Exit stack: [V12, 0x12a]

================================

Block 0x415
[0x415:0x416]
---
Predecessors: []
Successors: []
---
0x415 JUMPDEST
0x416 STOP
---
0x415: JUMPDEST 
0x416: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x417
[0x417:0x422]
---
Predecessors: [0x134]
Successors: [0x13c]
---
0x417 JUMPDEST
0x418 PUSH1 0x6
0x41a SLOAD
0x41b PUSH1 0xe0
0x41d PUSH1 0x2
0x41f EXP
0x420 MUL
0x421 DUP2
0x422 JUMP
---
0x417: JUMPDEST 
0x418: V365 = 0x6
0x41a: V366 = S[0x6]
0x41b: V367 = 0xe0
0x41d: V368 = 0x2
0x41f: V369 = EXP 0x2 0xe0
0x420: V370 = MUL 0x100000000000000000000000000000000000000000000000000000000 V366
0x422: JUMP 0x13c
---
Entry stack: [V12, 0x13c]
Stack pops: 1
Stack additions: [S0, V370]
Exit stack: [V12, 0x13c, V370]

================================

Block 0x423
[0x423:0x428]
---
Predecessors: [0x161]
Successors: [0x169]
---
0x423 JUMPDEST
0x424 PUSH1 0x5
0x426 SLOAD
0x427 DUP2
0x428 JUMP
---
0x423: JUMPDEST 
0x424: V371 = 0x5
0x426: V372 = S[0x5]
0x428: JUMP 0x169
---
Entry stack: [V12, 0x169]
Stack pops: 1
Stack additions: [S0, V372]
Exit stack: [V12, 0x169, V372]

================================

Block 0x429
[0x429:0x439]
---
Predecessors: [0x183]
Successors: [0x18b]
---
0x429 JUMPDEST
0x42a PUSH1 0x6
0x42c SLOAD
0x42d PUSH5 0x100000000
0x433 SWAP1
0x434 DIV
0x435 PUSH1 0xff
0x437 AND
0x438 DUP2
0x439 JUMP
---
0x429: JUMPDEST 
0x42a: V373 = 0x6
0x42c: V374 = S[0x6]
0x42d: V375 = 0x100000000
0x434: V376 = DIV V374 0x100000000
0x435: V377 = 0xff
0x437: V378 = AND 0xff V376
0x439: JUMP 0x18b
---
Entry stack: [V12, 0x18b]
Stack pops: 1
Stack additions: [S0, V378]
Exit stack: [V12, 0x18b, V378]

================================

Block 0x43a
[0x43a:0x448]
---
Predecessors: [0x19f]
Successors: [0x449, 0x44d]
---
0x43a JUMPDEST
0x43b PUSH1 0x0
0x43d PUSH1 0x0
0x43f PUSH1 0x5
0x441 SLOAD
0x442 NUMBER
0x443 GT
0x444 ISZERO
0x445 PUSH2 0x44d
0x448 JUMPI
---
0x43a: JUMPDEST 
0x43b: V379 = 0x0
0x43d: V380 = 0x0
0x43f: V381 = 0x5
0x441: V382 = S[0x5]
0x442: V383 = NUMBER
0x443: V384 = GT V383 V382
0x444: V385 = ISZERO V384
0x445: V386 = 0x44d
0x448: JUMPI 0x44d V385
---
Entry stack: [V12, 0x12a]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0x12a, 0x0, 0x0]

================================

Block 0x449
[0x449:0x44c]
---
Predecessors: [0x43a]
Successors: []
---
0x449 PUSH2 0x0
0x44c JUMP
---
0x449: V387 = 0x0
0x44c: THROW 
---
Entry stack: [V12, 0x12a, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, 0x0]

================================

Block 0x44d
[0x44d:0x45b]
---
Predecessors: [0x43a]
Successors: [0x45c, 0x460]
---
0x44d JUMPDEST
0x44e CALLVALUE
0x44f PUSH7 0x38d7ea4c68000
0x457 EQ
0x458 PUSH2 0x460
0x45b JUMPI
---
0x44d: JUMPDEST 
0x44e: V388 = CALLVALUE
0x44f: V389 = 0x38d7ea4c68000
0x457: V390 = EQ 0x38d7ea4c68000 V388
0x458: V391 = 0x460
0x45b: JUMPI 0x460 V390
---
Entry stack: [V12, 0x12a, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, 0x0]

================================

Block 0x45c
[0x45c:0x45f]
---
Predecessors: [0x44d]
Successors: []
---
0x45c PUSH2 0x0
0x45f JUMP
---
0x45c: V392 = 0x0
0x45f: THROW 
---
Entry stack: [V12, 0x12a, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, 0x0]

================================

Block 0x460
[0x460:0x467]
---
Predecessors: [0x44d]
Successors: [0xc76]
---
0x460 JUMPDEST
0x461 PUSH2 0x468
0x464 PUSH2 0xc76
0x467 JUMP
---
0x460: JUMPDEST 
0x461: V393 = 0x468
0x464: V394 = 0xc76
0x467: JUMP 0xc76
---
Entry stack: [V12, 0x12a, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x468]
Exit stack: [V12, 0x12a, 0x0, 0x0, 0x468]

================================

Block 0x468
[0x468:0x472]
---
Predecessors: [0xd55]
Successors: [0xd5b]
---
0x468 JUMPDEST
0x469 SWAP2
0x46a POP
0x46b PUSH2 0x473
0x46e DUP3
0x46f PUSH2 0xd5b
0x472 JUMP
---
0x468: JUMPDEST 
0x46b: V395 = 0x473
0x46f: V396 = 0xd5b
0x472: JUMP 0xd5b
---
Entry stack: [V12, 0x12a, V249, V253, S8, {0x12a, 0x8d3}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S0, S1, 0x473, S0]
Exit stack: [V12, 0x12a, V249, V253, S8, {0x12a, 0x8d3}, S6, S5, S4, S3, S0, S1, 0x473, S0]

================================

Block 0x473
[0x473:0x49f]
---
Predecessors: [0xe2a]
Successors: [0x1034]
---
0x473 JUMPDEST
0x474 PUSH1 0x1
0x476 PUSH1 0xe0
0x478 PUSH1 0x2
0x47a EXP
0x47b SUB
0x47c NOT
0x47d DUP2
0x47e AND
0x47f PUSH1 0x0
0x481 SWAP1
0x482 DUP2
0x483 MSTORE
0x484 PUSH1 0x9
0x486 PUSH1 0x20
0x488 MSTORE
0x489 PUSH1 0x40
0x48b SWAP1
0x48c SHA3
0x48d DUP1
0x48e SLOAD
0x48f SWAP2
0x490 SWAP3
0x491 POP
0x492 SWAP1
0x493 PUSH1 0x1
0x495 DUP2
0x496 ADD
0x497 PUSH2 0x4a0
0x49a DUP4
0x49b DUP3
0x49c PUSH2 0x1034
0x49f JUMP
---
0x473: JUMPDEST 
0x474: V397 = 0x1
0x476: V398 = 0xe0
0x478: V399 = 0x2
0x47a: V400 = EXP 0x2 0xe0
0x47b: V401 = SUB 0x100000000000000000000000000000000000000000000000000000000 0x1
0x47c: V402 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x47e: V403 = AND S0 0xffffffff00000000000000000000000000000000000000000000000000000000
0x47f: V404 = 0x0
0x483: M[0x0] = V403
0x484: V405 = 0x9
0x486: V406 = 0x20
0x488: M[0x20] = 0x9
0x489: V407 = 0x40
0x48c: V408 = SHA3 0x0 0x40
0x48e: V409 = S[V408]
0x493: V410 = 0x1
0x496: V411 = ADD V409 0x1
0x497: V412 = 0x4a0
0x49c: V413 = 0x1034
0x49f: JUMP 0x1034
---
Entry stack: [V12, 0x12a, V249, V253, S4, {0x12a, 0x8d3}, S2, S1, S0]
Stack pops: 2
Stack additions: [S0, V408, V409, V411, 0x4a0, V408, V411]
Exit stack: [V12, 0x12a, V249, V253, S4, {0x12a, 0x8d3}, S2, S0, V408, V409, V411, 0x4a0, V408, V411]

================================

Block 0x4a0
[0x4a0:0x4ad]
---
Predecessors: [0x8d7]
Successors: [0x4ae]
---
0x4a0 JUMPDEST
0x4a1 SWAP2
0x4a2 PUSH1 0x0
0x4a4 MSTORE
0x4a5 PUSH1 0x20
0x4a7 PUSH1 0x0
0x4a9 SHA3
0x4aa SWAP1
0x4ab ADD
0x4ac PUSH1 0x0
---
0x4a0: JUMPDEST 
0x4a2: V414 = 0x0
0x4a4: M[0x0] = S2
0x4a5: V415 = 0x20
0x4a7: V416 = 0x0
0x4a9: V417 = SHA3 0x0 0x20
0x4ab: V418 = ADD S1 V417
0x4ac: V419 = 0x0
---
Entry stack: [V12, 0x12a, V249, V253, S10, {0x12a, 0x8d3}, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S0, V418, 0x0]
Exit stack: [V12, 0x12a, V249, V253, S10, {0x12a, 0x8d3}, S8, S7, S6, S5, S4, S3, S0, V418, 0x0]

================================

Block 0x4ae
[0x4ae:0x50e]
---
Predecessors: [0x4a0]
Successors: [0x50f]
---
0x4ae JUMPDEST
0x4af DUP2
0x4b0 SLOAD
0x4b1 PUSH1 0x1
0x4b3 PUSH1 0xa0
0x4b5 PUSH1 0x2
0x4b7 EXP
0x4b8 SUB
0x4b9 CALLER
0x4ba DUP2
0x4bb AND
0x4bc PUSH2 0x100
0x4bf SWAP4
0x4c0 SWAP1
0x4c1 SWAP4
0x4c2 EXP
0x4c3 DUP4
0x4c4 DUP2
0x4c5 MUL
0x4c6 SWAP2
0x4c7 MUL
0x4c8 NOT
0x4c9 SWAP1
0x4ca SWAP2
0x4cb AND
0x4cc OR
0x4cd SWAP1
0x4ce SWAP2
0x4cf SSTORE
0x4d0 PUSH1 0xa
0x4d2 DUP1
0x4d3 SLOAD
0x4d4 PUSH1 0x1
0x4d6 ADD
0x4d7 SWAP1
0x4d8 SSTORE
0x4d9 PUSH1 0x40
0x4db MLOAD
0x4dc PUSH1 0x1
0x4de PUSH1 0xe0
0x4e0 PUSH1 0x2
0x4e2 EXP
0x4e3 SUB
0x4e4 NOT
0x4e5 DUP5
0x4e6 AND
0x4e7 SWAP3
0x4e8 POP
0x4e9 PUSH32 0xd3ebf454e78fe007cc3a3b4cc3a453e32fa124cfcc573e4b60f0c94fd2f0428e
0x50a SWAP1
0x50b PUSH1 0x0
0x50d SWAP1
0x50e LOG3
---
0x4ae: JUMPDEST 
0x4b0: V420 = S[V418]
0x4b1: V421 = 0x1
0x4b3: V422 = 0xa0
0x4b5: V423 = 0x2
0x4b7: V424 = EXP 0x2 0xa0
0x4b8: V425 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4b9: V426 = CALLER
0x4bb: V427 = AND 0xffffffffffffffffffffffffffffffffffffffff V426
0x4bc: V428 = 0x100
0x4c2: V429 = EXP 0x100 0x0
0x4c5: V430 = MUL 0x1 V427
0x4c7: V431 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x4c8: V432 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x4cb: V433 = AND V420 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x4cc: V434 = OR V433 V430
0x4cf: S[V418] = V434
0x4d0: V435 = 0xa
0x4d3: V436 = S[0xa]
0x4d4: V437 = 0x1
0x4d6: V438 = ADD 0x1 V436
0x4d8: S[0xa] = V438
0x4d9: V439 = 0x40
0x4db: V440 = M[0x40]
0x4dc: V441 = 0x1
0x4de: V442 = 0xe0
0x4e0: V443 = 0x2
0x4e2: V444 = EXP 0x2 0xe0
0x4e3: V445 = SUB 0x100000000000000000000000000000000000000000000000000000000 0x1
0x4e4: V446 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x4e6: V447 = AND S3 0xffffffff00000000000000000000000000000000000000000000000000000000
0x4e9: V448 = 0xd3ebf454e78fe007cc3a3b4cc3a453e32fa124cfcc573e4b60f0c94fd2f0428e
0x50b: V449 = 0x0
0x50e: LOG V440 0x0 0xd3ebf454e78fe007cc3a3b4cc3a453e32fa124cfcc573e4b60f0c94fd2f0428e V427 V447
---
Entry stack: [V12, 0x12a, V249, V253, S10, {0x12a, 0x8d3}, S8, S7, S6, S5, S4, S3, S2, V418, 0x0]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V12, 0x12a, V249, V253, S10, {0x12a, 0x8d3}, S8, S7, S6, S5, S4, S3]

================================

Block 0x50f
[0x50f:0x50f]
---
Predecessors: [0x4ae, 0x54b, 0x557]
Successors: [0x510]
---
0x50f JUMPDEST
---
0x50f: JUMPDEST 
---
Entry stack: [V12, 0x12a, V249, V253, S7, {0x12a, 0x8d3}, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, V249, V253, S7, {0x12a, 0x8d3}, S5, S4, S3, S2, S1, S0]

================================

Block 0x510
[0x510:0x513]
---
Predecessors: [0x50f]
Successors: [0x12a, 0x8d3]
---
0x510 JUMPDEST
0x511 POP
0x512 POP
0x513 JUMP
---
0x510: JUMPDEST 
0x513: JUMP S2
---
Entry stack: [V12, 0x12a, V249, V253, S7, {0x12a, 0x8d3}, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x12a, V249, V253, S7, {0x12a, 0x8d3}, S5, S4, S3]

================================

Block 0x514
[0x514:0x52d]
---
Predecessors: [0x1b1]
Successors: [0x52e, 0x532]
---
0x514 JUMPDEST
0x515 PUSH1 0x2
0x517 SLOAD
0x518 PUSH1 0x0
0x51a SWAP1
0x51b CALLER
0x51c PUSH1 0x1
0x51e PUSH1 0xa0
0x520 PUSH1 0x2
0x522 EXP
0x523 SUB
0x524 SWAP1
0x525 DUP2
0x526 AND
0x527 SWAP2
0x528 AND
0x529 EQ
0x52a PUSH2 0x532
0x52d JUMPI
---
0x514: JUMPDEST 
0x515: V450 = 0x2
0x517: V451 = S[0x2]
0x518: V452 = 0x0
0x51b: V453 = CALLER
0x51c: V454 = 0x1
0x51e: V455 = 0xa0
0x520: V456 = 0x2
0x522: V457 = EXP 0x2 0xa0
0x523: V458 = SUB 0x10000000000000000000000000000000000000000 0x1
0x526: V459 = AND 0xffffffffffffffffffffffffffffffffffffffff V453
0x528: V460 = AND V451 0xffffffffffffffffffffffffffffffffffffffff
0x529: V461 = EQ V460 V459
0x52a: V462 = 0x532
0x52d: JUMPI 0x532 V461
---
Entry stack: [V12, 0x12a, V142]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x12a, V142, 0x0]

================================

Block 0x52e
[0x52e:0x531]
---
Predecessors: [0x514]
Successors: []
---
0x52e PUSH2 0x0
0x531 JUMP
---
0x52e: V463 = 0x0
0x531: THROW 
---
Entry stack: [V12, 0x12a, V142, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, V142, 0x0]

================================

Block 0x532
[0x532:0x546]
---
Predecessors: [0x514]
Successors: [0x547, 0x54b]
---
0x532 JUMPDEST
0x533 PUSH1 0x6
0x535 SLOAD
0x536 PUSH5 0x100000000
0x53c SWAP1
0x53d DIV
0x53e PUSH1 0xff
0x540 AND
0x541 ISZERO
0x542 ISZERO
0x543 PUSH2 0x54b
0x546 JUMPI
---
0x532: JUMPDEST 
0x533: V464 = 0x6
0x535: V465 = S[0x6]
0x536: V466 = 0x100000000
0x53d: V467 = DIV V465 0x100000000
0x53e: V468 = 0xff
0x540: V469 = AND 0xff V467
0x541: V470 = ISZERO V469
0x542: V471 = ISZERO V470
0x543: V472 = 0x54b
0x546: JUMPI 0x54b V471
---
Entry stack: [V12, 0x12a, V142, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, V142, 0x0]

================================

Block 0x547
[0x547:0x54a]
---
Predecessors: [0x532]
Successors: []
---
0x547 PUSH2 0x0
0x54a JUMP
---
0x547: V473 = 0x0
0x54a: THROW 
---
Entry stack: [V12, 0x12a, V142, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, V142, 0x0]

================================

Block 0x54b
[0x54b:0x556]
---
Predecessors: [0x532]
Successors: [0x50f, 0x557]
---
0x54b JUMPDEST
0x54c PUSH1 0x0
0x54e PUSH1 0xd
0x550 SLOAD
0x551 GT
0x552 ISZERO
0x553 PUSH2 0x50f
0x556 JUMPI
---
0x54b: JUMPDEST 
0x54c: V474 = 0x0
0x54e: V475 = 0xd
0x550: V476 = S[0xd]
0x551: V477 = GT V476 0x0
0x552: V478 = ISZERO V477
0x553: V479 = 0x50f
0x556: JUMPI 0x50f V478
---
Entry stack: [V12, 0x12a, V142, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, V142, 0x0]

================================

Block 0x557
[0x557:0x58d]
---
Predecessors: [0x54b]
Successors: [0x50f, 0x58e]
---
0x557 POP
0x558 PUSH1 0xd
0x55a DUP1
0x55b SLOAD
0x55c PUSH1 0x0
0x55e SWAP2
0x55f DUP3
0x560 SWAP1
0x561 SSTORE
0x562 PUSH1 0x40
0x564 MLOAD
0x565 SWAP1
0x566 SWAP2
0x567 PUSH1 0x1
0x569 PUSH1 0xa0
0x56b PUSH1 0x2
0x56d EXP
0x56e SUB
0x56f DUP5
0x570 AND
0x571 SWAP2
0x572 DUP4
0x573 ISZERO
0x574 PUSH2 0x8fc
0x577 MUL
0x578 SWAP2
0x579 DUP5
0x57a SWAP2
0x57b SWAP1
0x57c DUP2
0x57d DUP2
0x57e DUP2
0x57f DUP6
0x580 DUP9
0x581 DUP9
0x582 CALL
0x583 SWAP4
0x584 POP
0x585 POP
0x586 POP
0x587 POP
0x588 ISZERO
0x589 ISZERO
0x58a PUSH2 0x50f
0x58d JUMPI
---
0x558: V480 = 0xd
0x55b: V481 = S[0xd]
0x55c: V482 = 0x0
0x561: S[0xd] = 0x0
0x562: V483 = 0x40
0x564: V484 = M[0x40]
0x567: V485 = 0x1
0x569: V486 = 0xa0
0x56b: V487 = 0x2
0x56d: V488 = EXP 0x2 0xa0
0x56e: V489 = SUB 0x10000000000000000000000000000000000000000 0x1
0x570: V490 = AND V142 0xffffffffffffffffffffffffffffffffffffffff
0x573: V491 = ISZERO V481
0x574: V492 = 0x8fc
0x577: V493 = MUL 0x8fc V491
0x582: V494 = CALL V493 V490 V481 V484 0x0 V484 0x0
0x588: V495 = ISZERO V494
0x589: V496 = ISZERO V495
0x58a: V497 = 0x50f
0x58d: JUMPI 0x50f V496
---
Entry stack: [V12, 0x12a, V142, 0x0]
Stack pops: 2
Stack additions: [S1, V481]
Exit stack: [V12, 0x12a, V142, V481]

================================

Block 0x58e
[0x58e:0x591]
---
Predecessors: [0x557]
Successors: []
---
0x58e PUSH2 0x0
0x591 JUMP
---
0x58e: V498 = 0x0
0x591: THROW 
---
Entry stack: [V12, 0x12a, V142, V481]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, V142, V481]

================================

Block 0x592
[0x592:0x592]
---
Predecessors: []
Successors: [0x593]
---
0x592 JUMPDEST
---
0x592: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x593
[0x593:0x593]
---
Predecessors: [0x592]
Successors: [0x594]
---
0x593 JUMPDEST
---
0x593: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x594
[0x594:0x594]
---
Predecessors: [0x593]
Successors: [0x595]
---
0x594 JUMPDEST
---
0x594: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x595
[0x595:0x595]
---
Predecessors: [0x594]
Successors: [0x596]
---
0x595 JUMPDEST
---
0x595: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x596
[0x596:0x599]
---
Predecessors: [0x595]
Successors: []
Has unresolved jump.
---
0x596 JUMPDEST
0x597 POP
0x598 POP
0x599 JUMP
---
0x596: JUMPDEST 
0x599: JUMP S2
---
Entry stack: []
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0x59a
[0x59a:0x5b0]
---
Predecessors: [0x1cf]
Successors: [0x5b1, 0x5b5]
---
0x59a JUMPDEST
0x59b PUSH1 0x2
0x59d SLOAD
0x59e CALLER
0x59f PUSH1 0x1
0x5a1 PUSH1 0xa0
0x5a3 PUSH1 0x2
0x5a5 EXP
0x5a6 SUB
0x5a7 SWAP1
0x5a8 DUP2
0x5a9 AND
0x5aa SWAP2
0x5ab AND
0x5ac EQ
0x5ad PUSH2 0x5b5
0x5b0 JUMPI
---
0x59a: JUMPDEST 
0x59b: V499 = 0x2
0x59d: V500 = S[0x2]
0x59e: V501 = CALLER
0x59f: V502 = 0x1
0x5a1: V503 = 0xa0
0x5a3: V504 = 0x2
0x5a5: V505 = EXP 0x2 0xa0
0x5a6: V506 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5a9: V507 = AND 0xffffffffffffffffffffffffffffffffffffffff V501
0x5ab: V508 = AND V500 0xffffffffffffffffffffffffffffffffffffffff
0x5ac: V509 = EQ V508 V507
0x5ad: V510 = 0x5b5
0x5b0: JUMPI 0x5b5 V509
---
Entry stack: [V12, 0x12a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a]

================================

Block 0x5b1
[0x5b1:0x5b4]
---
Predecessors: [0x59a]
Successors: []
---
0x5b1 PUSH2 0x0
0x5b4 JUMP
---
0x5b1: V511 = 0x0
0x5b4: THROW 
---
Entry stack: [V12, 0x12a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a]

================================

Block 0x5b5
[0x5b5:0x5c9]
---
Predecessors: [0x59a]
Successors: [0x5ca, 0x5ce]
---
0x5b5 JUMPDEST
0x5b6 PUSH1 0x6
0x5b8 SLOAD
0x5b9 PUSH5 0x100000000
0x5bf SWAP1
0x5c0 DIV
0x5c1 PUSH1 0xff
0x5c3 AND
0x5c4 ISZERO
0x5c5 ISZERO
0x5c6 PUSH2 0x5ce
0x5c9 JUMPI
---
0x5b5: JUMPDEST 
0x5b6: V512 = 0x6
0x5b8: V513 = S[0x6]
0x5b9: V514 = 0x100000000
0x5c0: V515 = DIV V513 0x100000000
0x5c1: V516 = 0xff
0x5c3: V517 = AND 0xff V515
0x5c4: V518 = ISZERO V517
0x5c5: V519 = ISZERO V518
0x5c6: V520 = 0x5ce
0x5c9: JUMPI 0x5ce V519
---
Entry stack: [V12, 0x12a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a]

================================

Block 0x5ca
[0x5ca:0x5cd]
---
Predecessors: [0x5b5]
Successors: []
---
0x5ca PUSH2 0x0
0x5cd JUMP
---
0x5ca: V521 = 0x0
0x5cd: THROW 
---
Entry stack: [V12, 0x12a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a]

================================

Block 0x5ce
[0x5ce:0x5d5]
---
Predecessors: [0x5b5]
Successors: [0x62e]
---
0x5ce JUMPDEST
0x5cf PUSH2 0x5d6
0x5d2 PUSH2 0x62e
0x5d5 JUMP
---
0x5ce: JUMPDEST 
0x5cf: V522 = 0x5d6
0x5d2: V523 = 0x62e
0x5d5: JUMP 0x62e
---
Entry stack: [V12, 0x12a]
Stack pops: 0
Stack additions: [0x5d6]
Exit stack: [V12, 0x12a, 0x5d6]

================================

Block 0x5d6
[0x5d6:0x5dc]
---
Predecessors: [0x6e5]
Successors: [0x5dd, 0x5e2]
---
0x5d6 JUMPDEST
0x5d7 DUP1
0x5d8 ISZERO
0x5d9 PUSH2 0x5e2
0x5dc JUMPI
---
0x5d6: JUMPDEST 
0x5d8: V524 = ISZERO S0
0x5d9: V525 = 0x5e2
0x5dc: JUMPI 0x5e2 V524
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, S1, S0]

================================

Block 0x5dd
[0x5dd:0x5e1]
---
Predecessors: [0x5d6]
Successors: [0x5e2]
---
0x5dd POP
0x5de PUSH1 0xd
0x5e0 SLOAD
0x5e1 ISZERO
---
0x5de: V526 = 0xd
0x5e0: V527 = S[0xd]
0x5e1: V528 = ISZERO V527
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: [V528]
Exit stack: [V12, S1, V528]

================================

Block 0x5e2
[0x5e2:0x5e7]
---
Predecessors: [0x5d6, 0x5dd]
Successors: [0x128, 0x5e8]
---
0x5e2 JUMPDEST
0x5e3 ISZERO
0x5e4 PUSH2 0x128
0x5e7 JUMPI
---
0x5e2: JUMPDEST 
0x5e3: V529 = ISZERO S0
0x5e4: V530 = 0x128
0x5e7: JUMPI 0x128 V529
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x5e8
[0x5e8:0x617]
---
Predecessors: [0x5e2]
Successors: [0x128, 0x618]
---
0x5e8 PUSH1 0x2
0x5ea SLOAD
0x5eb PUSH1 0x40
0x5ed MLOAD
0x5ee PUSH1 0x1
0x5f0 PUSH1 0xa0
0x5f2 PUSH1 0x2
0x5f4 EXP
0x5f5 SUB
0x5f6 SWAP2
0x5f7 DUP3
0x5f8 AND
0x5f9 SWAP2
0x5fa ADDRESS
0x5fb AND
0x5fc BALANCE
0x5fd DUP1
0x5fe ISZERO
0x5ff PUSH2 0x8fc
0x602 MUL
0x603 SWAP2
0x604 PUSH1 0x0
0x606 DUP2
0x607 DUP2
0x608 DUP2
0x609 DUP6
0x60a DUP9
0x60b DUP9
0x60c CALL
0x60d SWAP4
0x60e POP
0x60f POP
0x610 POP
0x611 POP
0x612 ISZERO
0x613 ISZERO
0x614 PUSH2 0x128
0x617 JUMPI
---
0x5e8: V531 = 0x2
0x5ea: V532 = S[0x2]
0x5eb: V533 = 0x40
0x5ed: V534 = M[0x40]
0x5ee: V535 = 0x1
0x5f0: V536 = 0xa0
0x5f2: V537 = 0x2
0x5f4: V538 = EXP 0x2 0xa0
0x5f5: V539 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5f8: V540 = AND 0xffffffffffffffffffffffffffffffffffffffff V532
0x5fa: V541 = ADDRESS
0x5fb: V542 = AND V541 0xffffffffffffffffffffffffffffffffffffffff
0x5fc: V543 = BALANCE V542
0x5fe: V544 = ISZERO V543
0x5ff: V545 = 0x8fc
0x602: V546 = MUL 0x8fc V544
0x604: V547 = 0x0
0x60c: V548 = CALL V546 V540 V543 V534 0x0 V534 0x0
0x612: V549 = ISZERO V548
0x613: V550 = ISZERO V549
0x614: V551 = 0x128
0x617: JUMPI 0x128 V550
---
Entry stack: [V12, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S0]

================================

Block 0x618
[0x618:0x61b]
---
Predecessors: [0x5e8]
Successors: []
---
0x618 PUSH2 0x0
0x61b JUMP
---
0x618: V552 = 0x0
0x61b: THROW 
---
Entry stack: [V12, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S0]

================================

Block 0x61c
[0x61c:0x61c]
---
Predecessors: []
Successors: [0x61d]
---
0x61c JUMPDEST
---
0x61c: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x61d
[0x61d:0x61d]
---
Predecessors: [0x61c]
Successors: [0x61e]
---
0x61d JUMPDEST
---
0x61d: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x61e
[0x61e:0x61e]
---
Predecessors: [0x61d]
Successors: [0x61f]
---
0x61e JUMPDEST
---
0x61e: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x61f
[0x61f:0x61f]
---
Predecessors: [0x61e]
Successors: [0x620]
---
0x61f JUMPDEST
---
0x61f: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x620
[0x620:0x621]
---
Predecessors: [0x61f]
Successors: []
Has unresolved jump.
---
0x620 JUMPDEST
0x621 JUMP
---
0x620: JUMPDEST 
0x621: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x622
[0x622:0x627]
---
Predecessors: [0x1e1]
Successors: [0x169]
---
0x622 JUMPDEST
0x623 PUSH1 0x4
0x625 SLOAD
0x626 DUP2
0x627 JUMP
---
0x622: JUMPDEST 
0x623: V553 = 0x4
0x625: V554 = S[0x4]
0x627: JUMP 0x169
---
Entry stack: [V12, 0x169]
Stack pops: 1
Stack additions: [S0, V554]
Exit stack: [V12, 0x169, V554]

================================

Block 0x628
[0x628:0x62d]
---
Predecessors: [0x203]
Successors: [0x169]
---
0x628 JUMPDEST
0x629 PUSH1 0xa
0x62b SLOAD
0x62c DUP2
0x62d JUMP
---
0x628: JUMPDEST 
0x629: V555 = 0xa
0x62b: V556 = S[0xa]
0x62d: JUMP 0x169
---
Entry stack: [V12, 0x169]
Stack pops: 1
Stack additions: [S0, V556]
Exit stack: [V12, 0x169, V556]

================================

Block 0x62e
[0x62e:0x649]
---
Predecessors: [0x225, 0x5ce, 0xc4a]
Successors: [0x64a, 0x652]
---
0x62e JUMPDEST
0x62f PUSH1 0x6
0x631 SLOAD
0x632 PUSH1 0x0
0x634 SWAP1
0x635 DUP2
0x636 SWAP1
0x637 DUP2
0x638 SWAP1
0x639 PUSH5 0x100000000
0x63f SWAP1
0x640 DIV
0x641 PUSH1 0xff
0x643 AND
0x644 ISZERO
0x645 ISZERO
0x646 PUSH2 0x652
0x649 JUMPI
---
0x62e: JUMPDEST 
0x62f: V557 = 0x6
0x631: V558 = S[0x6]
0x632: V559 = 0x0
0x639: V560 = 0x100000000
0x640: V561 = DIV V558 0x100000000
0x641: V562 = 0xff
0x643: V563 = AND 0xff V561
0x644: V564 = ISZERO V563
0x645: V565 = ISZERO V564
0x646: V566 = 0x652
0x649: JUMPI 0x652 V565
---
Entry stack: [V12, S1, {0x18b, 0x5d6, 0xc52}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V12, S1, {0x18b, 0x5d6, 0xc52}, 0x0, 0x0, 0x0]

================================

Block 0x64a
[0x64a:0x651]
---
Predecessors: [0x62e]
Successors: [0x6e4]
---
0x64a PUSH1 0x0
0x64c SWAP3
0x64d POP
0x64e PUSH2 0x6e4
0x651 JUMP
---
0x64a: V567 = 0x0
0x64e: V568 = 0x6e4
0x651: JUMP 0x6e4
---
Entry stack: [V12, S4, {0x18b, 0x5d6, 0xc52}, 0x0, 0x0, 0x0]
Stack pops: 3
Stack additions: [0x0, S1, S0]
Exit stack: [V12, S4, {0x18b, 0x5d6, 0xc52}, 0x0, 0x0, 0x0]

================================

Block 0x652
[0x652:0x65e]
---
Predecessors: [0x62e]
Successors: [0x65f, 0x6df]
---
0x652 JUMPDEST
0x653 PUSH1 0x7
0x655 SLOAD
0x656 PUSH1 0x0
0x658 SWAP1
0x659 GT
0x65a ISZERO
0x65b PUSH2 0x6df
0x65e JUMPI
---
0x652: JUMPDEST 
0x653: V569 = 0x7
0x655: V570 = S[0x7]
0x656: V571 = 0x0
0x659: V572 = GT V570 0x0
0x65a: V573 = ISZERO V572
0x65b: V574 = 0x6df
0x65e: JUMPI 0x6df V573
---
Entry stack: [V12, S4, {0x18b, 0x5d6, 0xc52}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, {0x18b, 0x5d6, 0xc52}, 0x0, 0x0, 0x0]

================================

Block 0x65f
[0x65f:0x665]
---
Predecessors: [0x652]
Successors: [0x666]
---
0x65f POP
0x660 PUSH1 0x1
0x662 SWAP1
0x663 POP
0x664 PUSH1 0x0
---
0x660: V575 = 0x1
0x664: V576 = 0x0
---
Entry stack: [V12, S4, {0x18b, 0x5d6, 0xc52}, 0x0, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x1, 0x0]
Exit stack: [V12, S4, {0x18b, 0x5d6, 0xc52}, 0x0, 0x1, 0x0]

================================

Block 0x666
[0x666:0x66d]
---
Predecessors: [0x65f, 0x6cf]
Successors: [0x66e, 0x674]
---
0x666 JUMPDEST
0x667 DUP2
0x668 DUP1
0x669 ISZERO
0x66a PUSH2 0x674
0x66d JUMPI
---
0x666: JUMPDEST 
0x669: V577 = ISZERO S1
0x66a: V578 = 0x674
0x66d: JUMPI 0x674 V577
---
Entry stack: [V12, S4, {0x18b, 0x5d6, 0xc52}, 0x0, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, S1]
Exit stack: [V12, S4, {0x18b, 0x5d6, 0xc52}, 0x0, S1, S0, S1]

================================

Block 0x66e
[0x66e:0x673]
---
Predecessors: [0x666]
Successors: [0x674]
---
0x66e POP
0x66f PUSH1 0x7
0x671 SLOAD
0x672 DUP2
0x673 LT
---
0x66f: V579 = 0x7
0x671: V580 = S[0x7]
0x673: V581 = LT S1 V580
---
Entry stack: [V12, S5, {0x18b, 0x5d6, 0xc52}, 0x0, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, V581]
Exit stack: [V12, S5, {0x18b, 0x5d6, 0xc52}, 0x0, S2, S1, V581]

================================

Block 0x674
[0x674:0x679]
---
Predecessors: [0x666, 0x66e]
Successors: [0x67a, 0x6d7]
---
0x674 JUMPDEST
0x675 ISZERO
0x676 PUSH2 0x6d7
0x679 JUMPI
---
0x674: JUMPDEST 
0x675: V582 = ISZERO S0
0x676: V583 = 0x6d7
0x679: JUMPI 0x6d7 V582
---
Entry stack: [V12, S5, {0x18b, 0x5d6, 0xc52}, 0x0, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S5, {0x18b, 0x5d6, 0xc52}, 0x0, S2, S1]

================================

Block 0x67a
[0x67a:0x680]
---
Predecessors: [0x674]
Successors: [0x681, 0x6cc]
---
0x67a DUP2
0x67b DUP1
0x67c ISZERO
0x67d PUSH2 0x6cc
0x680 JUMPI
---
0x67c: V584 = ISZERO S1
0x67d: V585 = 0x6cc
0x680: JUMPI 0x6cc V584
---
Entry stack: [V12, S4, {0x18b, 0x5d6, 0xc52}, 0x0, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, S1]
Exit stack: [V12, S4, {0x18b, 0x5d6, 0xc52}, 0x0, S1, S0, S1]

================================

Block 0x681
[0x681:0x692]
---
Predecessors: [0x67a]
Successors: [0x693, 0x694]
---
0x681 POP
0x682 PUSH1 0x8
0x684 PUSH1 0x0
0x686 PUSH1 0x7
0x688 DUP4
0x689 DUP2
0x68a SLOAD
0x68b DUP2
0x68c LT
0x68d ISZERO
0x68e ISZERO
0x68f PUSH2 0x694
0x692 JUMPI
---
0x682: V586 = 0x8
0x684: V587 = 0x0
0x686: V588 = 0x7
0x68a: V589 = S[0x7]
0x68c: V590 = LT S1 V589
0x68d: V591 = ISZERO V590
0x68e: V592 = ISZERO V591
0x68f: V593 = 0x694
0x692: JUMPI 0x694 V592
---
Entry stack: [V12, S5, {0x18b, 0x5d6, 0xc52}, 0x0, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, 0x8, 0x0, 0x7, S1]
Exit stack: [V12, S5, {0x18b, 0x5d6, 0xc52}, 0x0, S2, S1, 0x8, 0x0, 0x7, S1]

================================

Block 0x693
[0x693:0x693]
---
Predecessors: [0x681]
Successors: []
---
0x693 INVALID
---
0x693: INVALID 
---
Entry stack: [V12, S8, {0x18b, 0x5d6, 0xc52}, 0x0, S5, S4, 0x8, 0x0, 0x7, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, {0x18b, 0x5d6, 0xc52}, 0x0, S5, S4, 0x8, 0x0, 0x7, S0]

================================

Block 0x694
[0x694:0x6a1]
---
Predecessors: [0x681]
Successors: [0x6a2]
---
0x694 JUMPDEST
0x695 SWAP1
0x696 PUSH1 0x0
0x698 MSTORE
0x699 PUSH1 0x20
0x69b PUSH1 0x0
0x69d SHA3
0x69e SWAP1
0x69f ADD
0x6a0 PUSH1 0x0
---
0x694: JUMPDEST 
0x696: V594 = 0x0
0x698: M[0x0] = 0x7
0x699: V595 = 0x20
0x69b: V596 = 0x0
0x69d: V597 = SHA3 0x0 0x20
0x69f: V598 = ADD S0 V597
0x6a0: V599 = 0x0
---
Entry stack: [V12, S8, {0x18b, 0x5d6, 0xc52}, 0x0, S5, S4, 0x8, 0x0, 0x7, S0]
Stack pops: 2
Stack additions: [V598, 0x0]
Exit stack: [V12, S8, {0x18b, 0x5d6, 0xc52}, 0x0, S5, S4, 0x8, 0x0, V598, 0x0]

================================

Block 0x6a2
[0x6a2:0x6cb]
---
Predecessors: [0x694]
Successors: [0x6cc]
---
0x6a2 JUMPDEST
0x6a3 SWAP1
0x6a4 SLOAD
0x6a5 PUSH1 0x1
0x6a7 PUSH1 0xa0
0x6a9 PUSH1 0x2
0x6ab EXP
0x6ac SUB
0x6ad PUSH2 0x100
0x6b0 SWAP3
0x6b1 SWAP1
0x6b2 SWAP3
0x6b3 EXP
0x6b4 SWAP1
0x6b5 DIV
0x6b6 AND
0x6b7 DUP2
0x6b8 MSTORE
0x6b9 PUSH1 0x20
0x6bb DUP2
0x6bc ADD
0x6bd SWAP2
0x6be SWAP1
0x6bf SWAP2
0x6c0 MSTORE
0x6c1 PUSH1 0x40
0x6c3 ADD
0x6c4 PUSH1 0x0
0x6c6 SHA3
0x6c7 SLOAD
0x6c8 PUSH1 0xff
0x6ca AND
0x6cb ISZERO
---
0x6a2: JUMPDEST 
0x6a4: V600 = S[V598]
0x6a5: V601 = 0x1
0x6a7: V602 = 0xa0
0x6a9: V603 = 0x2
0x6ab: V604 = EXP 0x2 0xa0
0x6ac: V605 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6ad: V606 = 0x100
0x6b3: V607 = EXP 0x100 0x0
0x6b5: V608 = DIV V600 0x1
0x6b6: V609 = AND V608 0xffffffffffffffffffffffffffffffffffffffff
0x6b8: M[0x0] = V609
0x6b9: V610 = 0x20
0x6bc: V611 = ADD 0x0 0x20
0x6c0: M[0x20] = 0x8
0x6c1: V612 = 0x40
0x6c3: V613 = ADD 0x40 0x0
0x6c4: V614 = 0x0
0x6c6: V615 = SHA3 0x0 0x40
0x6c7: V616 = S[V615]
0x6c8: V617 = 0xff
0x6ca: V618 = AND 0xff V616
0x6cb: V619 = ISZERO V618
---
Entry stack: [V12, S8, {0x18b, 0x5d6, 0xc52}, 0x0, S5, S4, 0x8, 0x0, V598, 0x0]
Stack pops: 4
Stack additions: [V619]
Exit stack: [V12, S8, {0x18b, 0x5d6, 0xc52}, 0x0, S5, S4, V619]

================================

Block 0x6cc
[0x6cc:0x6ce]
---
Predecessors: [0x67a, 0x6a2]
Successors: [0x6cf]
---
0x6cc JUMPDEST
0x6cd SWAP2
0x6ce POP
---
0x6cc: JUMPDEST 
---
Entry stack: [V12, S5, {0x18b, 0x5d6, 0xc52}, 0x0, S2, S1, S0]
Stack pops: 3
Stack additions: [S0, S1]
Exit stack: [V12, S5, {0x18b, 0x5d6, 0xc52}, 0x0, S0, S1]

================================

Block 0x6cf
[0x6cf:0x6d6]
---
Predecessors: [0x6cc]
Successors: [0x666]
---
0x6cf JUMPDEST
0x6d0 PUSH1 0x1
0x6d2 ADD
0x6d3 PUSH2 0x666
0x6d6 JUMP
---
0x6cf: JUMPDEST 
0x6d0: V620 = 0x1
0x6d2: V621 = ADD 0x1 S0
0x6d3: V622 = 0x666
0x6d6: JUMP 0x666
---
Entry stack: [V12, S4, {0x18b, 0x5d6, 0xc52}, 0x0, S1, S0]
Stack pops: 1
Stack additions: [V621]
Exit stack: [V12, S4, {0x18b, 0x5d6, 0xc52}, 0x0, S1, V621]

================================

Block 0x6d7
[0x6d7:0x6de]
---
Predecessors: [0x674]
Successors: [0x6e4]
---
0x6d7 JUMPDEST
0x6d8 DUP2
0x6d9 SWAP3
0x6da POP
0x6db PUSH2 0x6e4
0x6de JUMP
---
0x6d7: JUMPDEST 
0x6db: V623 = 0x6e4
0x6de: JUMP 0x6e4
---
Entry stack: [V12, S4, {0x18b, 0x5d6, 0xc52}, 0x0, S1, S0]
Stack pops: 3
Stack additions: [S1, S1, S0]
Exit stack: [V12, S4, {0x18b, 0x5d6, 0xc52}, S1, S1, S0]

================================

Block 0x6df
[0x6df:0x6e3]
---
Predecessors: [0x652]
Successors: [0x6e4]
---
0x6df JUMPDEST
0x6e0 PUSH1 0x1
0x6e2 SWAP3
0x6e3 POP
---
0x6df: JUMPDEST 
0x6e0: V624 = 0x1
---
Entry stack: [V12, S4, {0x18b, 0x5d6, 0xc52}, 0x0, 0x0, 0x0]
Stack pops: 3
Stack additions: [0x1, S1, S0]
Exit stack: [V12, S4, {0x18b, 0x5d6, 0xc52}, 0x1, 0x0, 0x0]

================================

Block 0x6e4
[0x6e4:0x6e4]
---
Predecessors: [0x64a, 0x6d7, 0x6df]
Successors: [0x6e5]
---
0x6e4 JUMPDEST
---
0x6e4: JUMPDEST 
---
Entry stack: [V12, S4, {0x18b, 0x5d6, 0xc52}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, {0x18b, 0x5d6, 0xc52}, S2, S1, S0]

================================

Block 0x6e5
[0x6e5:0x6e9]
---
Predecessors: [0x6e4]
Successors: [0x18b, 0x5d6, 0xc52]
---
0x6e5 JUMPDEST
0x6e6 POP
0x6e7 POP
0x6e8 SWAP1
0x6e9 JUMP
---
0x6e5: JUMPDEST 
0x6e9: JUMP {0x18b, 0x5d6, 0xc52}
---
Entry stack: [V12, S4, {0x18b, 0x5d6, 0xc52}, S2, S1, S0]
Stack pops: 4
Stack additions: [S2]
Exit stack: [V12, S4, S2]

================================

Block 0x6ea
[0x6ea:0x6ef]
---
Predecessors: [0x249]
Successors: [0x169]
---
0x6ea JUMPDEST
0x6eb PUSH1 0x3
0x6ed SLOAD
0x6ee DUP2
0x6ef JUMP
---
0x6ea: JUMPDEST 
0x6eb: V625 = 0x3
0x6ed: V626 = S[0x3]
0x6ef: JUMP 0x169
---
Entry stack: [V12, 0x169]
Stack pops: 1
Stack additions: [S0, V626]
Exit stack: [V12, 0x169, V626]

================================

Block 0x6f0
[0x6f0:0x709]
---
Predecessors: [0x26b]
Successors: [0x70a, 0x70b]
---
0x6f0 JUMPDEST
0x6f1 PUSH1 0x9
0x6f3 PUSH1 0x20
0x6f5 MSTORE
0x6f6 DUP2
0x6f7 PUSH1 0x0
0x6f9 MSTORE
0x6fa PUSH1 0x40
0x6fc PUSH1 0x0
0x6fe SHA3
0x6ff DUP2
0x700 DUP2
0x701 SLOAD
0x702 DUP2
0x703 LT
0x704 ISZERO
0x705 ISZERO
0x706 PUSH2 0x70b
0x709 JUMPI
---
0x6f0: JUMPDEST 
0x6f1: V627 = 0x9
0x6f3: V628 = 0x20
0x6f5: M[0x20] = 0x9
0x6f7: V629 = 0x0
0x6f9: M[0x0] = V207
0x6fa: V630 = 0x40
0x6fc: V631 = 0x0
0x6fe: V632 = SHA3 0x0 0x40
0x701: V633 = S[V632]
0x703: V634 = LT V209 V633
0x704: V635 = ISZERO V634
0x705: V636 = ISZERO V635
0x706: V637 = 0x70b
0x709: JUMPI 0x70b V636
---
Entry stack: [V12, 0x283, V207, V209]
Stack pops: 2
Stack additions: [S1, S0, V632, S0]
Exit stack: [V12, 0x283, V207, V209, V632, V209]

================================

Block 0x70a
[0x70a:0x70a]
---
Predecessors: [0x6f0]
Successors: []
---
0x70a INVALID
---
0x70a: INVALID 
---
Entry stack: [V12, 0x283, V207, V209, V632, V209]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x283, V207, V209, V632, V209]

================================

Block 0x70b
[0x70b:0x718]
---
Predecessors: [0x6f0]
Successors: [0x719]
---
0x70b JUMPDEST
0x70c SWAP1
0x70d PUSH1 0x0
0x70f MSTORE
0x710 PUSH1 0x20
0x712 PUSH1 0x0
0x714 SHA3
0x715 SWAP1
0x716 ADD
0x717 PUSH1 0x0
---
0x70b: JUMPDEST 
0x70d: V638 = 0x0
0x70f: M[0x0] = V632
0x710: V639 = 0x20
0x712: V640 = 0x0
0x714: V641 = SHA3 0x0 0x20
0x716: V642 = ADD V209 V641
0x717: V643 = 0x0
---
Entry stack: [V12, 0x283, V207, V209, V632, V209]
Stack pops: 2
Stack additions: [V642, 0x0]
Exit stack: [V12, 0x283, V207, V209, V642, 0x0]

================================

Block 0x719
[0x719:0x731]
---
Predecessors: [0x70b]
Successors: [0x283]
---
0x719 JUMPDEST
0x71a SWAP2
0x71b POP
0x71c SWAP2
0x71d POP
0x71e SWAP1
0x71f SLOAD
0x720 SWAP1
0x721 PUSH2 0x100
0x724 EXP
0x725 SWAP1
0x726 DIV
0x727 PUSH1 0x1
0x729 PUSH1 0xa0
0x72b PUSH1 0x2
0x72d EXP
0x72e SUB
0x72f AND
0x730 DUP2
0x731 JUMP
---
0x719: JUMPDEST 
0x71f: V644 = S[V642]
0x721: V645 = 0x100
0x724: V646 = EXP 0x100 0x0
0x726: V647 = DIV V644 0x1
0x727: V648 = 0x1
0x729: V649 = 0xa0
0x72b: V650 = 0x2
0x72d: V651 = EXP 0x2 0xa0
0x72e: V652 = SUB 0x10000000000000000000000000000000000000000 0x1
0x72f: V653 = AND 0xffffffffffffffffffffffffffffffffffffffff V647
0x731: JUMP 0x283
---
Entry stack: [V12, 0x283, V207, V209, V642, 0x0]
Stack pops: 5
Stack additions: [S4, V653]
Exit stack: [V12, 0x283, V653]

================================

Block 0x732
[0x732:0x746]
---
Predecessors: [0x2a7]
Successors: [0x747, 0x74b]
---
0x732 JUMPDEST
0x733 PUSH1 0x6
0x735 SLOAD
0x736 PUSH5 0x100000000
0x73c SWAP1
0x73d DIV
0x73e PUSH1 0xff
0x740 AND
0x741 ISZERO
0x742 ISZERO
0x743 PUSH2 0x74b
0x746 JUMPI
---
0x732: JUMPDEST 
0x733: V654 = 0x6
0x735: V655 = S[0x6]
0x736: V656 = 0x100000000
0x73d: V657 = DIV V655 0x100000000
0x73e: V658 = 0xff
0x740: V659 = AND 0xff V657
0x741: V660 = ISZERO V659
0x742: V661 = ISZERO V660
0x743: V662 = 0x74b
0x746: JUMPI 0x74b V661
---
Entry stack: [V12, 0x12a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a]

================================

Block 0x747
[0x747:0x74a]
---
Predecessors: [0x732]
Successors: []
---
0x747 PUSH2 0x0
0x74a JUMP
---
0x747: V663 = 0x0
0x74a: THROW 
---
Entry stack: [V12, 0x12a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a]

================================

Block 0x74b
[0x74b:0x76d]
---
Predecessors: [0x732]
Successors: [0x76e, 0x772]
---
0x74b JUMPDEST
0x74c PUSH1 0x1
0x74e PUSH1 0xa0
0x750 PUSH1 0x2
0x752 EXP
0x753 SUB
0x754 CALLER
0x755 AND
0x756 PUSH1 0x0
0x758 SWAP1
0x759 DUP2
0x75a MSTORE
0x75b PUSH1 0x8
0x75d PUSH1 0x20
0x75f MSTORE
0x760 PUSH1 0x40
0x762 SWAP1
0x763 SHA3
0x764 SLOAD
0x765 PUSH1 0xff
0x767 AND
0x768 ISZERO
0x769 ISZERO
0x76a PUSH2 0x772
0x76d JUMPI
---
0x74b: JUMPDEST 
0x74c: V664 = 0x1
0x74e: V665 = 0xa0
0x750: V666 = 0x2
0x752: V667 = EXP 0x2 0xa0
0x753: V668 = SUB 0x10000000000000000000000000000000000000000 0x1
0x754: V669 = CALLER
0x755: V670 = AND V669 0xffffffffffffffffffffffffffffffffffffffff
0x756: V671 = 0x0
0x75a: M[0x0] = V670
0x75b: V672 = 0x8
0x75d: V673 = 0x20
0x75f: M[0x20] = 0x8
0x760: V674 = 0x40
0x763: V675 = SHA3 0x0 0x40
0x764: V676 = S[V675]
0x765: V677 = 0xff
0x767: V678 = AND 0xff V676
0x768: V679 = ISZERO V678
0x769: V680 = ISZERO V679
0x76a: V681 = 0x772
0x76d: JUMPI 0x772 V680
---
Entry stack: [V12, 0x12a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a]

================================

Block 0x76e
[0x76e:0x771]
---
Predecessors: [0x74b]
Successors: []
---
0x76e PUSH2 0x0
0x771 JUMP
---
0x76e: V682 = 0x0
0x771: THROW 
---
Entry stack: [V12, 0x12a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a]

================================

Block 0x772
[0x772:0x7b1]
---
Predecessors: [0x74b]
Successors: [0x128, 0x7b2]
---
0x772 JUMPDEST
0x773 PUSH1 0x1
0x775 PUSH1 0xa0
0x777 PUSH1 0x2
0x779 EXP
0x77a SUB
0x77b CALLER
0x77c AND
0x77d PUSH1 0x0
0x77f DUP2
0x780 DUP2
0x781 MSTORE
0x782 PUSH1 0x8
0x784 PUSH1 0x20
0x786 MSTORE
0x787 PUSH1 0x40
0x789 DUP1
0x78a DUP3
0x78b SHA3
0x78c DUP1
0x78d SLOAD
0x78e PUSH1 0xff
0x790 NOT
0x791 AND
0x792 SWAP1
0x793 SSTORE
0x794 PUSH1 0xc
0x796 SLOAD
0x797 SWAP1
0x798 MLOAD
0x799 DUP2
0x79a ISZERO
0x79b PUSH2 0x8fc
0x79e MUL
0x79f SWAP3
0x7a0 DUP2
0x7a1 DUP2
0x7a2 DUP2
0x7a3 DUP6
0x7a4 DUP9
0x7a5 DUP9
0x7a6 CALL
0x7a7 SWAP4
0x7a8 POP
0x7a9 POP
0x7aa POP
0x7ab POP
0x7ac ISZERO
0x7ad ISZERO
0x7ae PUSH2 0x128
0x7b1 JUMPI
---
0x772: JUMPDEST 
0x773: V683 = 0x1
0x775: V684 = 0xa0
0x777: V685 = 0x2
0x779: V686 = EXP 0x2 0xa0
0x77a: V687 = SUB 0x10000000000000000000000000000000000000000 0x1
0x77b: V688 = CALLER
0x77c: V689 = AND V688 0xffffffffffffffffffffffffffffffffffffffff
0x77d: V690 = 0x0
0x781: M[0x0] = V689
0x782: V691 = 0x8
0x784: V692 = 0x20
0x786: M[0x20] = 0x8
0x787: V693 = 0x40
0x78b: V694 = SHA3 0x0 0x40
0x78d: V695 = S[V694]
0x78e: V696 = 0xff
0x790: V697 = NOT 0xff
0x791: V698 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V695
0x793: S[V694] = V698
0x794: V699 = 0xc
0x796: V700 = S[0xc]
0x798: V701 = M[0x40]
0x79a: V702 = ISZERO V700
0x79b: V703 = 0x8fc
0x79e: V704 = MUL 0x8fc V702
0x7a6: V705 = CALL V704 V689 V700 V701 0x0 V701 0x0
0x7ac: V706 = ISZERO V705
0x7ad: V707 = ISZERO V706
0x7ae: V708 = 0x128
0x7b1: JUMPI 0x128 V707
---
Entry stack: [V12, 0x12a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a]

================================

Block 0x7b2
[0x7b2:0x7b5]
---
Predecessors: [0x772]
Successors: []
---
0x7b2 PUSH2 0x0
0x7b5 JUMP
---
0x7b2: V709 = 0x0
0x7b5: THROW 
---
Entry stack: [V12, 0x12a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a]

================================

Block 0x7b6
[0x7b6:0x7b6]
---
Predecessors: []
Successors: [0x7b7]
---
0x7b6 JUMPDEST
---
0x7b6: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x7b7
[0x7b7:0x7b7]
---
Predecessors: [0x7b6]
Successors: [0x7b8]
---
0x7b7 JUMPDEST
---
0x7b7: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x7b8
[0x7b8:0x7b9]
---
Predecessors: [0x7b7]
Successors: []
Has unresolved jump.
---
0x7b8 JUMPDEST
0x7b9 JUMP
---
0x7b8: JUMPDEST 
0x7b9: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x7ba
[0x7ba:0x7bf]
---
Predecessors: [0x2b9]
Successors: [0x169]
---
0x7ba JUMPDEST
0x7bb PUSH1 0xb
0x7bd SLOAD
0x7be DUP2
0x7bf JUMP
---
0x7ba: JUMPDEST 
0x7bb: V710 = 0xb
0x7bd: V711 = S[0xb]
0x7bf: JUMP 0x169
---
Entry stack: [V12, 0x169]
Stack pops: 1
Stack additions: [S0, V711]
Exit stack: [V12, 0x169, V711]

================================

Block 0x7c0
[0x7c0:0x7dd]
---
Predecessors: [0x2db]
Successors: [0x7de, 0x7e2]
---
0x7c0 JUMPDEST
0x7c1 PUSH1 0x2
0x7c3 SLOAD
0x7c4 PUSH1 0x0
0x7c6 SWAP1
0x7c7 DUP2
0x7c8 SWAP1
0x7c9 DUP2
0x7ca SWAP1
0x7cb CALLER
0x7cc PUSH1 0x1
0x7ce PUSH1 0xa0
0x7d0 PUSH1 0x2
0x7d2 EXP
0x7d3 SUB
0x7d4 SWAP1
0x7d5 DUP2
0x7d6 AND
0x7d7 SWAP2
0x7d8 AND
0x7d9 EQ
0x7da PUSH2 0x7e2
0x7dd JUMPI
---
0x7c0: JUMPDEST 
0x7c1: V712 = 0x2
0x7c3: V713 = S[0x2]
0x7c4: V714 = 0x0
0x7cb: V715 = CALLER
0x7cc: V716 = 0x1
0x7ce: V717 = 0xa0
0x7d0: V718 = 0x2
0x7d2: V719 = EXP 0x2 0xa0
0x7d3: V720 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7d6: V721 = AND 0xffffffffffffffffffffffffffffffffffffffff V715
0x7d8: V722 = AND V713 0xffffffffffffffffffffffffffffffffffffffff
0x7d9: V723 = EQ V722 V721
0x7da: V724 = 0x7e2
0x7dd: JUMPI 0x7e2 V723
---
Entry stack: [V12, 0x12a]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V12, 0x12a, 0x0, 0x0, 0x0]

================================

Block 0x7de
[0x7de:0x7e1]
---
Predecessors: [0x7c0]
Successors: []
---
0x7de PUSH2 0x0
0x7e1 JUMP
---
0x7de: V725 = 0x0
0x7e1: THROW 
---
Entry stack: [V12, 0x12a, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, 0x0, 0x0]

================================

Block 0x7e2
[0x7e2:0x7f6]
---
Predecessors: [0x7c0]
Successors: [0x7f7, 0x7fb]
---
0x7e2 JUMPDEST
0x7e3 PUSH1 0x6
0x7e5 SLOAD
0x7e6 PUSH5 0x100000000
0x7ec SWAP1
0x7ed DIV
0x7ee PUSH1 0xff
0x7f0 AND
0x7f1 ISZERO
0x7f2 ISZERO
0x7f3 PUSH2 0x7fb
0x7f6 JUMPI
---
0x7e2: JUMPDEST 
0x7e3: V726 = 0x6
0x7e5: V727 = S[0x6]
0x7e6: V728 = 0x100000000
0x7ed: V729 = DIV V727 0x100000000
0x7ee: V730 = 0xff
0x7f0: V731 = AND 0xff V729
0x7f1: V732 = ISZERO V731
0x7f2: V733 = ISZERO V732
0x7f3: V734 = 0x7fb
0x7f6: JUMPI 0x7fb V733
---
Entry stack: [V12, 0x12a, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, 0x0, 0x0]

================================

Block 0x7f7
[0x7f7:0x7fa]
---
Predecessors: [0x7e2]
Successors: []
---
0x7f7 PUSH2 0x0
0x7fa JUMP
---
0x7f7: V735 = 0x0
0x7fa: THROW 
---
Entry stack: [V12, 0x12a, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, 0x0, 0x0]

================================

Block 0x7fb
[0x7fb:0x807]
---
Predecessors: [0x7e2]
Successors: [0x808, 0x8d3]
---
0x7fb JUMPDEST
0x7fc PUSH1 0x7
0x7fe SLOAD
0x7ff PUSH1 0x0
0x801 SWAP1
0x802 GT
0x803 ISZERO
0x804 PUSH2 0x8d3
0x807 JUMPI
---
0x7fb: JUMPDEST 
0x7fc: V736 = 0x7
0x7fe: V737 = S[0x7]
0x7ff: V738 = 0x0
0x802: V739 = GT V737 0x0
0x803: V740 = ISZERO V739
0x804: V741 = 0x8d3
0x807: JUMPI 0x8d3 V740
---
Entry stack: [V12, 0x12a, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, 0x0, 0x0, 0x0]

================================

Block 0x808
[0x808:0x80b]
---
Predecessors: [0x7fb]
Successors: [0x80c]
---
0x808 PUSH1 0x0
0x80a SWAP3
0x80b POP
---
0x808: V742 = 0x0
---
Entry stack: [V12, 0x12a, 0x0, 0x0, 0x0]
Stack pops: 3
Stack additions: [0x0, S1, S0]
Exit stack: [V12, 0x12a, 0x0, 0x0, 0x0]

================================

Block 0x80c
[0x80c:0x816]
---
Predecessors: [0x808, 0x8c8]
Successors: [0x817, 0x8d3]
---
0x80c JUMPDEST
0x80d PUSH1 0x7
0x80f SLOAD
0x810 DUP4
0x811 LT
0x812 ISZERO
0x813 PUSH2 0x8d3
0x816 JUMPI
---
0x80c: JUMPDEST 
0x80d: V743 = 0x7
0x80f: V744 = S[0x7]
0x811: V745 = LT S2 V744
0x812: V746 = ISZERO V745
0x813: V747 = 0x8d3
0x816: JUMPI 0x8d3 V746
---
Entry stack: [V12, 0x12a, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x12a, S2, S1, S0]

================================

Block 0x817
[0x817:0x822]
---
Predecessors: [0x80c]
Successors: [0x823, 0x824]
---
0x817 PUSH1 0x7
0x819 DUP1
0x81a SLOAD
0x81b DUP5
0x81c SWAP1
0x81d DUP2
0x81e LT
0x81f PUSH2 0x824
0x822 JUMPI
---
0x817: V748 = 0x7
0x81a: V749 = S[0x7]
0x81e: V750 = LT S2 V749
0x81f: V751 = 0x824
0x822: JUMPI 0x824 V750
---
Entry stack: [V12, 0x12a, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x7, S2]
Exit stack: [V12, 0x12a, S2, S1, S0, 0x7, S2]

================================

Block 0x823
[0x823:0x823]
---
Predecessors: [0x817]
Successors: []
---
0x823 INVALID
---
0x823: INVALID 
---
Entry stack: [V12, 0x12a, S4, S3, S2, 0x7, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, S4, S3, S2, 0x7, S0]

================================

Block 0x824
[0x824:0x831]
---
Predecessors: [0x817]
Successors: [0x832]
---
0x824 JUMPDEST
0x825 SWAP1
0x826 PUSH1 0x0
0x828 MSTORE
0x829 PUSH1 0x20
0x82b PUSH1 0x0
0x82d SHA3
0x82e SWAP1
0x82f ADD
0x830 PUSH1 0x0
---
0x824: JUMPDEST 
0x826: V752 = 0x0
0x828: M[0x0] = 0x7
0x829: V753 = 0x20
0x82b: V754 = 0x0
0x82d: V755 = SHA3 0x0 0x20
0x82f: V756 = ADD S0 V755
0x830: V757 = 0x0
---
Entry stack: [V12, 0x12a, S4, S3, S2, 0x7, S0]
Stack pops: 2
Stack additions: [V756, 0x0]
Exit stack: [V12, 0x12a, S4, S3, S2, V756, 0x0]

================================

Block 0x832
[0x832:0x863]
---
Predecessors: [0x824]
Successors: [0x864, 0x8c6]
---
0x832 JUMPDEST
0x833 SWAP1
0x834 SLOAD
0x835 PUSH1 0x1
0x837 PUSH1 0xa0
0x839 PUSH1 0x2
0x83b EXP
0x83c SUB
0x83d PUSH2 0x100
0x840 SWAP3
0x841 SWAP1
0x842 SWAP3
0x843 EXP
0x844 SWAP1
0x845 DIV
0x846 AND
0x847 PUSH1 0x0
0x849 DUP2
0x84a DUP2
0x84b MSTORE
0x84c PUSH1 0x8
0x84e PUSH1 0x20
0x850 MSTORE
0x851 PUSH1 0x40
0x853 SWAP1
0x854 SHA3
0x855 SLOAD
0x856 SWAP1
0x857 SWAP3
0x858 POP
0x859 PUSH1 0xff
0x85b AND
0x85c SWAP1
0x85d POP
0x85e DUP1
0x85f ISZERO
0x860 PUSH2 0x8c6
0x863 JUMPI
---
0x832: JUMPDEST 
0x834: V758 = S[V756]
0x835: V759 = 0x1
0x837: V760 = 0xa0
0x839: V761 = 0x2
0x83b: V762 = EXP 0x2 0xa0
0x83c: V763 = SUB 0x10000000000000000000000000000000000000000 0x1
0x83d: V764 = 0x100
0x843: V765 = EXP 0x100 0x0
0x845: V766 = DIV V758 0x1
0x846: V767 = AND V766 0xffffffffffffffffffffffffffffffffffffffff
0x847: V768 = 0x0
0x84b: M[0x0] = V767
0x84c: V769 = 0x8
0x84e: V770 = 0x20
0x850: M[0x20] = 0x8
0x851: V771 = 0x40
0x854: V772 = SHA3 0x0 0x40
0x855: V773 = S[V772]
0x859: V774 = 0xff
0x85b: V775 = AND 0xff V773
0x85f: V776 = ISZERO V775
0x860: V777 = 0x8c6
0x863: JUMPI 0x8c6 V776
---
Entry stack: [V12, 0x12a, S4, S3, S2, V756, 0x0]
Stack pops: 4
Stack additions: [V767, V775]
Exit stack: [V12, 0x12a, S4, V767, V775]

================================

Block 0x864
[0x864:0x8a2]
---
Predecessors: [0x832]
Successors: [0x8a3, 0x8c6]
---
0x864 PUSH1 0x1
0x866 PUSH1 0xa0
0x868 PUSH1 0x2
0x86a EXP
0x86b SUB
0x86c DUP3
0x86d AND
0x86e PUSH1 0x0
0x870 DUP2
0x871 DUP2
0x872 MSTORE
0x873 PUSH1 0x8
0x875 PUSH1 0x20
0x877 MSTORE
0x878 PUSH1 0x40
0x87a DUP1
0x87b DUP3
0x87c SHA3
0x87d DUP1
0x87e SLOAD
0x87f PUSH1 0xff
0x881 NOT
0x882 AND
0x883 SWAP1
0x884 SSTORE
0x885 PUSH1 0xc
0x887 SLOAD
0x888 SWAP1
0x889 MLOAD
0x88a DUP2
0x88b ISZERO
0x88c PUSH2 0x8fc
0x88f MUL
0x890 SWAP3
0x891 DUP2
0x892 DUP2
0x893 DUP2
0x894 DUP6
0x895 DUP9
0x896 DUP9
0x897 CALL
0x898 SWAP4
0x899 POP
0x89a POP
0x89b POP
0x89c POP
0x89d ISZERO
0x89e ISZERO
0x89f PUSH2 0x8c6
0x8a2 JUMPI
---
0x864: V778 = 0x1
0x866: V779 = 0xa0
0x868: V780 = 0x2
0x86a: V781 = EXP 0x2 0xa0
0x86b: V782 = SUB 0x10000000000000000000000000000000000000000 0x1
0x86d: V783 = AND V767 0xffffffffffffffffffffffffffffffffffffffff
0x86e: V784 = 0x0
0x872: M[0x0] = V783
0x873: V785 = 0x8
0x875: V786 = 0x20
0x877: M[0x20] = 0x8
0x878: V787 = 0x40
0x87c: V788 = SHA3 0x0 0x40
0x87e: V789 = S[V788]
0x87f: V790 = 0xff
0x881: V791 = NOT 0xff
0x882: V792 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V789
0x884: S[V788] = V792
0x885: V793 = 0xc
0x887: V794 = S[0xc]
0x889: V795 = M[0x40]
0x88b: V796 = ISZERO V794
0x88c: V797 = 0x8fc
0x88f: V798 = MUL 0x8fc V796
0x897: V799 = CALL V798 V783 V794 V795 0x0 V795 0x0
0x89d: V800 = ISZERO V799
0x89e: V801 = ISZERO V800
0x89f: V802 = 0x8c6
0x8a2: JUMPI 0x8c6 V801
---
Entry stack: [V12, 0x12a, S2, V767, V775]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x12a, S2, V767, V775]

================================

Block 0x8a3
[0x8a3:0x8c5]
---
Predecessors: [0x864]
Successors: [0x8c6]
---
0x8a3 PUSH1 0x1
0x8a5 PUSH1 0xa0
0x8a7 PUSH1 0x2
0x8a9 EXP
0x8aa SUB
0x8ab DUP3
0x8ac AND
0x8ad PUSH1 0x0
0x8af SWAP1
0x8b0 DUP2
0x8b1 MSTORE
0x8b2 PUSH1 0x8
0x8b4 PUSH1 0x20
0x8b6 MSTORE
0x8b7 PUSH1 0x40
0x8b9 SWAP1
0x8ba SHA3
0x8bb DUP1
0x8bc SLOAD
0x8bd PUSH1 0xff
0x8bf NOT
0x8c0 AND
0x8c1 PUSH1 0x1
0x8c3 OR
0x8c4 SWAP1
0x8c5 SSTORE
---
0x8a3: V803 = 0x1
0x8a5: V804 = 0xa0
0x8a7: V805 = 0x2
0x8a9: V806 = EXP 0x2 0xa0
0x8aa: V807 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8ac: V808 = AND V767 0xffffffffffffffffffffffffffffffffffffffff
0x8ad: V809 = 0x0
0x8b1: M[0x0] = V808
0x8b2: V810 = 0x8
0x8b4: V811 = 0x20
0x8b6: M[0x20] = 0x8
0x8b7: V812 = 0x40
0x8ba: V813 = SHA3 0x0 0x40
0x8bc: V814 = S[V813]
0x8bd: V815 = 0xff
0x8bf: V816 = NOT 0xff
0x8c0: V817 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V814
0x8c1: V818 = 0x1
0x8c3: V819 = OR 0x1 V817
0x8c5: S[V813] = V819
---
Entry stack: [V12, 0x12a, S2, V767, V775]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x12a, S2, V767, V775]

================================

Block 0x8c6
[0x8c6:0x8c6]
---
Predecessors: [0x832, 0x864, 0x8a3]
Successors: [0x8c7]
---
0x8c6 JUMPDEST
---
0x8c6: JUMPDEST 
---
Entry stack: [V12, 0x12a, S2, V767, V775]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, S2, V767, V775]

================================

Block 0x8c7
[0x8c7:0x8c7]
---
Predecessors: [0x8c6]
Successors: [0x8c8]
---
0x8c7 JUMPDEST
---
0x8c7: JUMPDEST 
---
Entry stack: [V12, 0x12a, S2, V767, V775]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, S2, V767, V775]

================================

Block 0x8c8
[0x8c8:0x8d2]
---
Predecessors: [0x8c7]
Successors: [0x80c]
---
0x8c8 JUMPDEST
0x8c9 PUSH1 0x1
0x8cb SWAP1
0x8cc SWAP3
0x8cd ADD
0x8ce SWAP2
0x8cf PUSH2 0x80c
0x8d2 JUMP
---
0x8c8: JUMPDEST 
0x8c9: V820 = 0x1
0x8cd: V821 = ADD S2 0x1
0x8cf: V822 = 0x80c
0x8d2: JUMP 0x80c
---
Entry stack: [V12, 0x12a, S2, V767, V775]
Stack pops: 3
Stack additions: [V821, S1, S0]
Exit stack: [V12, 0x12a, V821, V767, V775]

================================

Block 0x8d3
[0x8d3:0x8d3]
---
Predecessors: [0x510, 0x7fb, 0x80c, 0x8d7, 0xb0c, 0x102c, 0x1034, 0x107c]
Successors: [0x8d4]
---
0x8d3 JUMPDEST
---
0x8d3: JUMPDEST 
---
Entry stack: [V12, 0x12a, V249, V253, S14, {0x12a, 0x8d3}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, V249, V253, S14, {0x12a, 0x8d3}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x8d4
[0x8d4:0x8d4]
---
Predecessors: [0x8d3]
Successors: [0x8d5]
---
0x8d4 JUMPDEST
---
0x8d4: JUMPDEST 
---
Entry stack: [V12, 0x12a, V249, V253, S14, {0x12a, 0x8d3}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, V249, V253, S14, {0x12a, 0x8d3}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x8d5
[0x8d5:0x8d5]
---
Predecessors: [0x8d4]
Successors: [0x8d6]
---
0x8d5 JUMPDEST
---
0x8d5: JUMPDEST 
---
Entry stack: [V12, 0x12a, V249, V253, S14, {0x12a, 0x8d3}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, V249, V253, S14, {0x12a, 0x8d3}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x8d6
[0x8d6:0x8d6]
---
Predecessors: [0x8d5]
Successors: [0x8d7]
---
0x8d6 JUMPDEST
---
0x8d6: JUMPDEST 
---
Entry stack: [V12, 0x12a, V249, V253, S14, {0x12a, 0x8d3}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, V249, V253, S14, {0x12a, 0x8d3}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x8d7
[0x8d7:0x8db]
---
Predecessors: [0x8d6]
Successors: [0x12a, 0x4a0, 0x8d3, 0xa8b, 0xf58]
---
0x8d7 JUMPDEST
0x8d8 POP
0x8d9 POP
0x8da POP
0x8db JUMP
---
0x8d7: JUMPDEST 
0x8db: JUMP S3
---
Entry stack: [V12, 0x12a, V249, V253, S14, {0x12a, 0x8d3}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x12a, V249, V253, S14, {0x12a, 0x8d3}, S12, S11, S10, S9, S8, S7, S6, S5, S4]

================================

Block 0x8dc
[0x8dc:0x8f5]
---
Predecessors: [0x2ed]
Successors: [0x8f6, 0x8fa]
---
0x8dc JUMPDEST
0x8dd PUSH1 0x2
0x8df SLOAD
0x8e0 PUSH1 0x0
0x8e2 SWAP1
0x8e3 CALLER
0x8e4 PUSH1 0x1
0x8e6 PUSH1 0xa0
0x8e8 PUSH1 0x2
0x8ea EXP
0x8eb SUB
0x8ec SWAP1
0x8ed DUP2
0x8ee AND
0x8ef SWAP2
0x8f0 AND
0x8f1 EQ
0x8f2 PUSH2 0x8fa
0x8f5 JUMPI
---
0x8dc: JUMPDEST 
0x8dd: V823 = 0x2
0x8df: V824 = S[0x2]
0x8e0: V825 = 0x0
0x8e3: V826 = CALLER
0x8e4: V827 = 0x1
0x8e6: V828 = 0xa0
0x8e8: V829 = 0x2
0x8ea: V830 = EXP 0x2 0xa0
0x8eb: V831 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8ee: V832 = AND 0xffffffffffffffffffffffffffffffffffffffff V826
0x8f0: V833 = AND V824 0xffffffffffffffffffffffffffffffffffffffff
0x8f1: V834 = EQ V833 V832
0x8f2: V835 = 0x8fa
0x8f5: JUMPI 0x8fa V834
---
Entry stack: [V12, 0x12a, V249, V253]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x12a, V249, V253, 0x0]

================================

Block 0x8f6
[0x8f6:0x8f9]
---
Predecessors: [0x8dc]
Successors: []
---
0x8f6 PUSH2 0x0
0x8f9 JUMP
---
0x8f6: V836 = 0x0
0x8f9: THROW 
---
Entry stack: [V12, 0x12a, V249, V253, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, V249, V253, 0x0]

================================

Block 0x8fa
[0x8fa:0x905]
---
Predecessors: [0x8dc]
Successors: [0x906, 0x915]
---
0x8fa JUMPDEST
0x8fb PUSH1 0x5
0x8fd SLOAD
0x8fe NUMBER
0x8ff GT
0x900 ISZERO
0x901 DUP1
0x902 PUSH2 0x915
0x905 JUMPI
---
0x8fa: JUMPDEST 
0x8fb: V837 = 0x5
0x8fd: V838 = S[0x5]
0x8fe: V839 = NUMBER
0x8ff: V840 = GT V839 V838
0x900: V841 = ISZERO V840
0x902: V842 = 0x915
0x905: JUMPI 0x915 V841
---
Entry stack: [V12, 0x12a, V249, V253, 0x0]
Stack pops: 0
Stack additions: [V841]
Exit stack: [V12, 0x12a, V249, V253, 0x0, V841]

================================

Block 0x906
[0x906:0x914]
---
Predecessors: [0x8fa]
Successors: [0x915]
---
0x906 POP
0x907 PUSH1 0x6
0x909 SLOAD
0x90a PUSH5 0x100000000
0x910 SWAP1
0x911 DIV
0x912 PUSH1 0xff
0x914 AND
---
0x907: V843 = 0x6
0x909: V844 = S[0x6]
0x90a: V845 = 0x100000000
0x911: V846 = DIV V844 0x100000000
0x912: V847 = 0xff
0x914: V848 = AND 0xff V846
---
Entry stack: [V12, 0x12a, V249, V253, 0x0, V841]
Stack pops: 1
Stack additions: [V848]
Exit stack: [V12, 0x12a, V249, V253, 0x0, V848]

================================

Block 0x915
[0x915:0x91a]
---
Predecessors: [0x8fa, 0x906]
Successors: [0x91b, 0x91f]
---
0x915 JUMPDEST
0x916 ISZERO
0x917 PUSH2 0x91f
0x91a JUMPI
---
0x915: JUMPDEST 
0x916: V849 = ISZERO S0
0x917: V850 = 0x91f
0x91a: JUMPI 0x91f V849
---
Entry stack: [V12, 0x12a, V249, V253, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x12a, V249, V253, 0x0]

================================

Block 0x91b
[0x91b:0x91e]
---
Predecessors: [0x915]
Successors: []
---
0x91b PUSH2 0x0
0x91e JUMP
---
0x91b: V851 = 0x0
0x91e: THROW 
---
Entry stack: [V12, 0x12a, V249, V253, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, V249, V253, 0x0]

================================

Block 0x91f
[0x91f:0x937]
---
Predecessors: [0x915]
Successors: [0x938, 0x93c]
---
0x91f JUMPDEST
0x920 PUSH1 0x6
0x922 SLOAD
0x923 PUSH5 0x100000000
0x929 SWAP1
0x92a DIV
0x92b PUSH1 0xff
0x92d AND
0x92e ISZERO
0x92f ISZERO
0x930 PUSH1 0x1
0x932 EQ
0x933 ISZERO
0x934 PUSH2 0x93c
0x937 JUMPI
---
0x91f: JUMPDEST 
0x920: V852 = 0x6
0x922: V853 = S[0x6]
0x923: V854 = 0x100000000
0x92a: V855 = DIV V853 0x100000000
0x92b: V856 = 0xff
0x92d: V857 = AND 0xff V855
0x92e: V858 = ISZERO V857
0x92f: V859 = ISZERO V858
0x930: V860 = 0x1
0x932: V861 = EQ 0x1 V859
0x933: V862 = ISZERO V861
0x934: V863 = 0x93c
0x937: JUMPI 0x93c V862
---
Entry stack: [V12, 0x12a, V249, V253, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, V249, V253, 0x0]

================================

Block 0x938
[0x938:0x93b]
---
Predecessors: [0x91f]
Successors: []
---
0x938 PUSH2 0x0
0x93b JUMP
---
0x938: V864 = 0x0
0x93b: THROW 
---
Entry stack: [V12, 0x12a, V249, V253, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, V249, V253, 0x0]

================================

Block 0x93c
[0x93c:0x945]
---
Predecessors: [0x91f]
Successors: [0xb10]
---
0x93c JUMPDEST
0x93d PUSH2 0x946
0x940 DUP4
0x941 DUP4
0x942 PUSH2 0xb10
0x945 JUMP
---
0x93c: JUMPDEST 
0x93d: V865 = 0x946
0x942: V866 = 0xb10
0x945: JUMP 0xb10
---
Entry stack: [V12, 0x12a, V249, V253, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x946, S2, S1]
Exit stack: [V12, 0x12a, V249, V253, 0x0, 0x946, V249, V253]

================================

Block 0x946
[0x946:0x94f]
---
Predecessors: [0xbaa]
Successors: [0x950, 0x954]
---
0x946 JUMPDEST
0x947 ISZERO
0x948 ISZERO
0x949 PUSH1 0x1
0x94b EQ
0x94c PUSH2 0x954
0x94f JUMPI
---
0x946: JUMPDEST 
0x947: V867 = ISZERO {0x0, 0x1}
0x948: V868 = ISZERO V867
0x949: V869 = 0x1
0x94b: V870 = EQ 0x1 V868
0x94c: V871 = 0x954
0x94f: JUMPI 0x954 V870
---
Entry stack: [V12, 0x12a, V249, V253, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x12a, V249, V253, S1]

================================

Block 0x950
[0x950:0x953]
---
Predecessors: [0x946]
Successors: []
---
0x950 PUSH2 0x0
0x953 JUMP
---
0x950: V872 = 0x0
0x953: THROW 
---
Entry stack: [V12, 0x12a, V249, V253, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, V249, V253, S0]

================================

Block 0x954
[0x954:0x988]
---
Predecessors: [0x946]
Successors: [0xd5b]
---
0x954 JUMPDEST
0x955 POP
0x956 PUSH1 0xa
0x958 SLOAD
0x959 PUSH1 0xe
0x95b SLOAD
0x95c PUSH1 0x40
0x95e DUP1
0x95f MLOAD
0x960 DUP6
0x961 DUP2
0x962 MSTORE
0x963 PUSH1 0x20
0x965 DUP2
0x966 ADD
0x967 SWAP4
0x968 SWAP1
0x969 SWAP4
0x96a MSTORE
0x96b DUP3
0x96c DUP2
0x96d ADD
0x96e SWAP2
0x96f SWAP1
0x970 SWAP2
0x971 MSTORE
0x972 MLOAD
0x973 SWAP1
0x974 DUP2
0x975 SWAP1
0x976 SUB
0x977 PUSH1 0x60
0x979 ADD
0x97a SWAP1
0x97b SHA3
0x97c PUSH2 0x8d3
0x97f DUP4
0x980 DUP4
0x981 PUSH2 0x989
0x984 DUP5
0x985 PUSH2 0xd5b
0x988 JUMP
---
0x954: JUMPDEST 
0x956: V873 = 0xa
0x958: V874 = S[0xa]
0x959: V875 = 0xe
0x95b: V876 = S[0xe]
0x95c: V877 = 0x40
0x95f: V878 = M[0x40]
0x962: M[V878] = V249
0x963: V879 = 0x20
0x966: V880 = ADD V878 0x20
0x96a: M[V880] = V874
0x96d: V881 = ADD 0x40 V878
0x971: M[V881] = V876
0x972: V882 = M[0x40]
0x976: V883 = SUB V878 V882
0x977: V884 = 0x60
0x979: V885 = ADD 0x60 V883
0x97b: V886 = SHA3 V882 V885
0x97c: V887 = 0x8d3
0x981: V888 = 0x989
0x985: V889 = 0xd5b
0x988: JUMP 0xd5b
---
Entry stack: [V12, 0x12a, V249, V253, S0]
Stack pops: 3
Stack additions: [S2, S1, V886, 0x8d3, S2, S1, 0x989, V886]
Exit stack: [V12, 0x12a, V249, V253, V886, 0x8d3, V249, V253, 0x989, V886]

================================

Block 0x989
[0x989:0x98d]
---
Predecessors: [0xe2a]
Successors: [0xe32]
---
0x989 JUMPDEST
0x98a PUSH2 0xe32
0x98d JUMP
---
0x989: JUMPDEST 
0x98a: V890 = 0xe32
0x98d: JUMP 0xe32
---
Entry stack: [V12, 0x12a, V249, V253, S4, {0x12a, 0x8d3}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, V249, V253, S4, {0x12a, 0x8d3}, S2, S1, S0]

================================

Block 0x98e
[0x98e:0x98e]
---
Predecessors: []
Successors: [0x98f]
---
0x98e JUMPDEST
---
0x98e: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x98f
[0x98f:0x98f]
---
Predecessors: [0x98e]
Successors: [0x990]
---
0x98f JUMPDEST
---
0x98f: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x990
[0x990:0x990]
---
Predecessors: [0x98f]
Successors: [0x991]
---
0x990 JUMPDEST
---
0x990: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x991
[0x991:0x995]
---
Predecessors: [0x990]
Successors: []
Has unresolved jump.
---
0x991 JUMPDEST
0x992 POP
0x993 POP
0x994 POP
0x995 JUMP
---
0x991: JUMPDEST 
0x995: JUMP S3
---
Entry stack: []
Stack pops: 4
Stack additions: []
Exit stack: []

================================

Block 0x996
[0x996:0x99b]
---
Predecessors: [0x308]
Successors: [0x169]
---
0x996 JUMPDEST
0x997 PUSH1 0xc
0x999 SLOAD
0x99a DUP2
0x99b JUMP
---
0x996: JUMPDEST 
0x997: V891 = 0xc
0x999: V892 = S[0xc]
0x99b: JUMP 0x169
---
Entry stack: [V12, 0x169]
Stack pops: 1
Stack additions: [S0, V892]
Exit stack: [V12, 0x169, V892]

================================

Block 0x99c
[0x99c:0x9a8]
---
Predecessors: [0x32a]
Successors: [0x9a9, 0x9aa]
---
0x99c JUMPDEST
0x99d PUSH1 0x7
0x99f DUP1
0x9a0 SLOAD
0x9a1 DUP3
0x9a2 SWAP1
0x9a3 DUP2
0x9a4 LT
0x9a5 PUSH2 0x9aa
0x9a8 JUMPI
---
0x99c: JUMPDEST 
0x99d: V893 = 0x7
0x9a0: V894 = S[0x7]
0x9a4: V895 = LT V271 V894
0x9a5: V896 = 0x9aa
0x9a8: JUMPI 0x9aa V895
---
Entry stack: [V12, 0x283, V271]
Stack pops: 1
Stack additions: [S0, 0x7, S0]
Exit stack: [V12, 0x283, V271, 0x7, V271]

================================

Block 0x9a9
[0x9a9:0x9a9]
---
Predecessors: [0x99c]
Successors: []
---
0x9a9 INVALID
---
0x9a9: INVALID 
---
Entry stack: [V12, 0x283, V271, 0x7, V271]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x283, V271, 0x7, V271]

================================

Block 0x9aa
[0x9aa:0x9b7]
---
Predecessors: [0x99c]
Successors: [0x9b8]
---
0x9aa JUMPDEST
0x9ab SWAP1
0x9ac PUSH1 0x0
0x9ae MSTORE
0x9af PUSH1 0x20
0x9b1 PUSH1 0x0
0x9b3 SHA3
0x9b4 SWAP1
0x9b5 ADD
0x9b6 PUSH1 0x0
---
0x9aa: JUMPDEST 
0x9ac: V897 = 0x0
0x9ae: M[0x0] = 0x7
0x9af: V898 = 0x20
0x9b1: V899 = 0x0
0x9b3: V900 = SHA3 0x0 0x20
0x9b5: V901 = ADD V271 V900
0x9b6: V902 = 0x0
---
Entry stack: [V12, 0x283, V271, 0x7, V271]
Stack pops: 2
Stack additions: [V901, 0x0]
Exit stack: [V12, 0x283, V271, V901, 0x0]

================================

Block 0x9b8
[0x9b8:0x9cd]
---
Predecessors: [0x9aa]
Successors: [0x283]
---
0x9b8 JUMPDEST
0x9b9 SWAP2
0x9ba POP
0x9bb SLOAD
0x9bc SWAP1
0x9bd PUSH2 0x100
0x9c0 EXP
0x9c1 SWAP1
0x9c2 DIV
0x9c3 PUSH1 0x1
0x9c5 PUSH1 0xa0
0x9c7 PUSH1 0x2
0x9c9 EXP
0x9ca SUB
0x9cb AND
0x9cc DUP2
0x9cd JUMP
---
0x9b8: JUMPDEST 
0x9bb: V903 = S[V901]
0x9bd: V904 = 0x100
0x9c0: V905 = EXP 0x100 0x0
0x9c2: V906 = DIV V903 0x1
0x9c3: V907 = 0x1
0x9c5: V908 = 0xa0
0x9c7: V909 = 0x2
0x9c9: V910 = EXP 0x2 0xa0
0x9ca: V911 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9cb: V912 = AND 0xffffffffffffffffffffffffffffffffffffffff V906
0x9cd: JUMP 0x283
---
Entry stack: [V12, 0x283, V271, V901, 0x0]
Stack pops: 4
Stack additions: [S3, V912]
Exit stack: [V12, 0x283, V912]

================================

Block 0x9ce
[0x9ce:0x9da]
---
Predecessors: [0x351]
Successors: [0x9db, 0x9df]
---
0x9ce JUMPDEST
0x9cf PUSH1 0x0
0x9d1 PUSH1 0x5
0x9d3 SLOAD
0x9d4 NUMBER
0x9d5 GT
0x9d6 ISZERO
0x9d7 PUSH2 0x9df
0x9da JUMPI
---
0x9ce: JUMPDEST 
0x9cf: V913 = 0x0
0x9d1: V914 = 0x5
0x9d3: V915 = S[0x5]
0x9d4: V916 = NUMBER
0x9d5: V917 = GT V916 V915
0x9d6: V918 = ISZERO V917
0x9d7: V919 = 0x9df
0x9da: JUMPI 0x9df V918
---
Entry stack: [V12, 0x12a, V294]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x12a, V294, 0x0]

================================

Block 0x9db
[0x9db:0x9de]
---
Predecessors: [0x9ce]
Successors: []
---
0x9db PUSH2 0x0
0x9de JUMP
---
0x9db: V920 = 0x0
0x9de: THROW 
---
Entry stack: [V12, 0x12a, V294, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, V294, 0x0]

================================

Block 0x9df
[0x9df:0x9ed]
---
Predecessors: [0x9ce]
Successors: [0x9ee, 0x9f2]
---
0x9df JUMPDEST
0x9e0 CALLVALUE
0x9e1 PUSH7 0x38d7ea4c68000
0x9e9 EQ
0x9ea PUSH2 0x9f2
0x9ed JUMPI
---
0x9df: JUMPDEST 
0x9e0: V921 = CALLVALUE
0x9e1: V922 = 0x38d7ea4c68000
0x9e9: V923 = EQ 0x38d7ea4c68000 V921
0x9ea: V924 = 0x9f2
0x9ed: JUMPI 0x9f2 V923
---
Entry stack: [V12, 0x12a, V294, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, V294, 0x0]

================================

Block 0x9ee
[0x9ee:0x9f1]
---
Predecessors: [0x9df]
Successors: []
---
0x9ee PUSH2 0x0
0x9f1 JUMP
---
0x9ee: V925 = 0x0
0x9f1: THROW 
---
Entry stack: [V12, 0x12a, V294, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, V294, 0x0]

================================

Block 0x9f2
[0x9f2:0x9f5]
---
Predecessors: [0x9df]
Successors: [0x9f6]
---
0x9f2 JUMPDEST
0x9f3 POP
0x9f4 PUSH1 0x0
---
0x9f2: JUMPDEST 
0x9f4: V926 = 0x0
---
Entry stack: [V12, 0x12a, V294, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, 0x12a, V294, 0x0]

================================

Block 0x9f6
[0x9f6:0xa02]
---
Predecessors: [0x9f2, 0xa5a]
Successors: [0xa03, 0xa62]
---
0x9f6 JUMPDEST
0x9f7 PUSH1 0x4
0x9f9 DUP2
0x9fa PUSH1 0xff
0x9fc AND
0x9fd LT
0x9fe ISZERO
0x9ff PUSH2 0xa62
0xa02 JUMPI
---
0x9f6: JUMPDEST 
0x9f7: V927 = 0x4
0x9fa: V928 = 0xff
0x9fc: V929 = AND 0xff S0
0x9fd: V930 = LT V929 0x4
0x9fe: V931 = ISZERO V930
0x9ff: V932 = 0xa62
0xa02: JUMPI 0xa62 V931
---
Entry stack: [V12, 0x12a, V294, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x12a, V294, S0]

================================

Block 0xa03
[0xa03:0xa0f]
---
Predecessors: [0x9f6]
Successors: [0xa10, 0xa11]
---
0xa03 DUP2
0xa04 PUSH1 0xff
0xa06 DUP3
0xa07 AND
0xa08 PUSH1 0x4
0xa0a DUP2
0xa0b LT
0xa0c PUSH2 0xa11
0xa0f JUMPI
---
0xa04: V933 = 0xff
0xa07: V934 = AND S0 0xff
0xa08: V935 = 0x4
0xa0b: V936 = LT V934 0x4
0xa0c: V937 = 0xa11
0xa0f: JUMPI 0xa11 V936
---
Entry stack: [V12, 0x12a, V294, S0]
Stack pops: 2
Stack additions: [S1, S0, S1, V934]
Exit stack: [V12, 0x12a, V294, S0, V294, V934]

================================

Block 0xa10
[0xa10:0xa10]
---
Predecessors: [0xa03]
Successors: []
---
0xa10 INVALID
---
0xa10: INVALID 
---
Entry stack: [V12, 0x12a, V294, S2, V294, V934]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, V294, S2, V294, V934]

================================

Block 0xa11
[0xa11:0xa39]
---
Predecessors: [0xa03]
Successors: [0xa3a, 0xa3b]
---
0xa11 JUMPDEST
0xa12 BYTE
0xa13 PUSH1 0xf8
0xa15 PUSH1 0x2
0xa17 EXP
0xa18 MUL
0xa19 PUSH1 0x1
0xa1b PUSH1 0xf8
0xa1d PUSH1 0x2
0xa1f EXP
0xa20 SUB
0xa21 NOT
0xa22 AND
0xa23 PUSH1 0x3f
0xa25 PUSH1 0xf8
0xa27 PUSH1 0x2
0xa29 EXP
0xa2a MUL
0xa2b DUP4
0xa2c DUP4
0xa2d PUSH1 0xff
0xa2f AND
0xa30 PUSH1 0x4
0xa32 DUP2
0xa33 LT
0xa34 ISZERO
0xa35 ISZERO
0xa36 PUSH2 0xa3b
0xa39 JUMPI
---
0xa11: JUMPDEST 
0xa12: V938 = BYTE V934 V294
0xa13: V939 = 0xf8
0xa15: V940 = 0x2
0xa17: V941 = EXP 0x2 0xf8
0xa18: V942 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V938
0xa19: V943 = 0x1
0xa1b: V944 = 0xf8
0xa1d: V945 = 0x2
0xa1f: V946 = EXP 0x2 0xf8
0xa20: V947 = SUB 0x100000000000000000000000000000000000000000000000000000000000000 0x1
0xa21: V948 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xa22: V949 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 V942
0xa23: V950 = 0x3f
0xa25: V951 = 0xf8
0xa27: V952 = 0x2
0xa29: V953 = EXP 0x2 0xf8
0xa2a: V954 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 0x3f
0xa2d: V955 = 0xff
0xa2f: V956 = AND 0xff S2
0xa30: V957 = 0x4
0xa33: V958 = LT V956 0x4
0xa34: V959 = ISZERO V958
0xa35: V960 = ISZERO V959
0xa36: V961 = 0xa3b
0xa39: JUMPI 0xa3b V960
---
Entry stack: [V12, 0x12a, V294, S2, V294, V934]
Stack pops: 4
Stack additions: [S3, S2, V949, 0x3f00000000000000000000000000000000000000000000000000000000000000, S3, V956]
Exit stack: [V12, 0x12a, V294, S2, V949, 0x3f00000000000000000000000000000000000000000000000000000000000000, V294, V956]

================================

Block 0xa3a
[0xa3a:0xa3a]
---
Predecessors: [0xa11]
Successors: []
---
0xa3a INVALID
---
0xa3a: INVALID 
---
Entry stack: [V12, 0x12a, V294, S4, V949, 0x3f00000000000000000000000000000000000000000000000000000000000000, V294, V956]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, V294, S4, V949, 0x3f00000000000000000000000000000000000000000000000000000000000000, V294, V956]

================================

Block 0xa3b
[0xa3b:0xa54]
---
Predecessors: [0xa11]
Successors: [0xa55, 0xa59]
---
0xa3b JUMPDEST
0xa3c BYTE
0xa3d PUSH1 0xf8
0xa3f PUSH1 0x2
0xa41 EXP
0xa42 MUL
0xa43 AND
0xa44 PUSH1 0x1
0xa46 PUSH1 0xf8
0xa48 PUSH1 0x2
0xa4a EXP
0xa4b SUB
0xa4c NOT
0xa4d AND
0xa4e EQ
0xa4f ISZERO
0xa50 ISZERO
0xa51 PUSH2 0xa59
0xa54 JUMPI
---
0xa3b: JUMPDEST 
0xa3c: V962 = BYTE V956 V294
0xa3d: V963 = 0xf8
0xa3f: V964 = 0x2
0xa41: V965 = EXP 0x2 0xf8
0xa42: V966 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V962
0xa43: V967 = AND V966 0x3f00000000000000000000000000000000000000000000000000000000000000
0xa44: V968 = 0x1
0xa46: V969 = 0xf8
0xa48: V970 = 0x2
0xa4a: V971 = EXP 0x2 0xf8
0xa4b: V972 = SUB 0x100000000000000000000000000000000000000000000000000000000000000 0x1
0xa4c: V973 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xa4d: V974 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 V967
0xa4e: V975 = EQ V974 V949
0xa4f: V976 = ISZERO V975
0xa50: V977 = ISZERO V976
0xa51: V978 = 0xa59
0xa54: JUMPI 0xa59 V977
---
Entry stack: [V12, 0x12a, V294, S4, V949, 0x3f00000000000000000000000000000000000000000000000000000000000000, V294, V956]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x12a, V294, S4]

================================

Block 0xa55
[0xa55:0xa58]
---
Predecessors: [0xa3b]
Successors: []
---
0xa55 PUSH2 0x0
0xa58 JUMP
---
0xa55: V979 = 0x0
0xa58: THROW 
---
Entry stack: [V12, 0x12a, V294, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, V294, S0]

================================

Block 0xa59
[0xa59:0xa59]
---
Predecessors: [0xa3b]
Successors: [0xa5a]
---
0xa59 JUMPDEST
---
0xa59: JUMPDEST 
---
Entry stack: [V12, 0x12a, V294, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, V294, S0]

================================

Block 0xa5a
[0xa5a:0xa61]
---
Predecessors: [0xa59]
Successors: [0x9f6]
---
0xa5a JUMPDEST
0xa5b PUSH1 0x1
0xa5d ADD
0xa5e PUSH2 0x9f6
0xa61 JUMP
---
0xa5a: JUMPDEST 
0xa5b: V980 = 0x1
0xa5d: V981 = ADD 0x1 S0
0xa5e: V982 = 0x9f6
0xa61: JUMP 0x9f6
---
Entry stack: [V12, 0x12a, V294, S0]
Stack pops: 1
Stack additions: [V981]
Exit stack: [V12, 0x12a, V294, V981]

================================

Block 0xa62
[0xa62:0xa8a]
---
Predecessors: [0x9f6]
Successors: [0x1034]
---
0xa62 JUMPDEST
0xa63 PUSH1 0x1
0xa65 PUSH1 0xe0
0xa67 PUSH1 0x2
0xa69 EXP
0xa6a SUB
0xa6b NOT
0xa6c DUP3
0xa6d AND
0xa6e PUSH1 0x0
0xa70 SWAP1
0xa71 DUP2
0xa72 MSTORE
0xa73 PUSH1 0x9
0xa75 PUSH1 0x20
0xa77 MSTORE
0xa78 PUSH1 0x40
0xa7a SWAP1
0xa7b SHA3
0xa7c DUP1
0xa7d SLOAD
0xa7e PUSH1 0x1
0xa80 DUP2
0xa81 ADD
0xa82 PUSH2 0xa8b
0xa85 DUP4
0xa86 DUP3
0xa87 PUSH2 0x1034
0xa8a JUMP
---
0xa62: JUMPDEST 
0xa63: V983 = 0x1
0xa65: V984 = 0xe0
0xa67: V985 = 0x2
0xa69: V986 = EXP 0x2 0xe0
0xa6a: V987 = SUB 0x100000000000000000000000000000000000000000000000000000000 0x1
0xa6b: V988 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xa6d: V989 = AND V294 0xffffffff00000000000000000000000000000000000000000000000000000000
0xa6e: V990 = 0x0
0xa72: M[0x0] = V989
0xa73: V991 = 0x9
0xa75: V992 = 0x20
0xa77: M[0x20] = 0x9
0xa78: V993 = 0x40
0xa7b: V994 = SHA3 0x0 0x40
0xa7d: V995 = S[V994]
0xa7e: V996 = 0x1
0xa81: V997 = ADD V995 0x1
0xa82: V998 = 0xa8b
0xa87: V999 = 0x1034
0xa8a: JUMP 0x1034
---
Entry stack: [V12, 0x12a, V294, S0]
Stack pops: 2
Stack additions: [S1, S0, V994, V995, V997, 0xa8b, V994, V997]
Exit stack: [V12, 0x12a, V294, S0, V994, V995, V997, 0xa8b, V994, V997]

================================

Block 0xa8b
[0xa8b:0xa98]
---
Predecessors: [0x8d7]
Successors: [0xa99]
---
0xa8b JUMPDEST
0xa8c SWAP2
0xa8d PUSH1 0x0
0xa8f MSTORE
0xa90 PUSH1 0x20
0xa92 PUSH1 0x0
0xa94 SHA3
0xa95 SWAP1
0xa96 ADD
0xa97 PUSH1 0x0
---
0xa8b: JUMPDEST 
0xa8d: V1000 = 0x0
0xa8f: M[0x0] = S2
0xa90: V1001 = 0x20
0xa92: V1002 = 0x0
0xa94: V1003 = SHA3 0x0 0x20
0xa96: V1004 = ADD S1 V1003
0xa97: V1005 = 0x0
---
Entry stack: [V12, 0x12a, V249, V253, S10, {0x12a, 0x8d3}, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S0, V1004, 0x0]
Exit stack: [V12, 0x12a, V249, V253, S10, {0x12a, 0x8d3}, S8, S7, S6, S5, S4, S3, S0, V1004, 0x0]

================================

Block 0xa99
[0xa99:0xac8]
---
Predecessors: [0xa8b]
Successors: [0xc76]
---
0xa99 JUMPDEST
0xa9a DUP2
0xa9b SLOAD
0xa9c PUSH1 0x1
0xa9e PUSH1 0xa0
0xaa0 PUSH1 0x2
0xaa2 EXP
0xaa3 SUB
0xaa4 CALLER
0xaa5 DUP2
0xaa6 AND
0xaa7 PUSH2 0x100
0xaaa SWAP4
0xaab SWAP1
0xaac SWAP4
0xaad EXP
0xaae SWAP3
0xaaf DUP4
0xab0 MUL
0xab1 SWAP3
0xab2 MUL
0xab3 NOT
0xab4 AND
0xab5 OR
0xab6 SWAP1
0xab7 SSTORE
0xab8 POP
0xab9 PUSH1 0xa
0xabb DUP1
0xabc SLOAD
0xabd PUSH1 0x1
0xabf ADD
0xac0 SWAP1
0xac1 SSTORE
0xac2 PUSH2 0xac9
0xac5 PUSH2 0xc76
0xac8 JUMP
---
0xa99: JUMPDEST 
0xa9b: V1006 = S[V1004]
0xa9c: V1007 = 0x1
0xa9e: V1008 = 0xa0
0xaa0: V1009 = 0x2
0xaa2: V1010 = EXP 0x2 0xa0
0xaa3: V1011 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaa4: V1012 = CALLER
0xaa6: V1013 = AND 0xffffffffffffffffffffffffffffffffffffffff V1012
0xaa7: V1014 = 0x100
0xaad: V1015 = EXP 0x100 0x0
0xab0: V1016 = MUL 0x1 V1013
0xab2: V1017 = MUL 0x1 0xffffffffffffffffffffffffffffffffffffffff
0xab3: V1018 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xab4: V1019 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1006
0xab5: V1020 = OR V1019 V1016
0xab7: S[V1004] = V1020
0xab9: V1021 = 0xa
0xabc: V1022 = S[0xa]
0xabd: V1023 = 0x1
0xabf: V1024 = ADD 0x1 V1022
0xac1: S[0xa] = V1024
0xac2: V1025 = 0xac9
0xac5: V1026 = 0xc76
0xac8: JUMP 0xc76
---
Entry stack: [V12, 0x12a, V249, V253, S10, {0x12a, 0x8d3}, S8, S7, S6, S5, S4, S3, S2, V1004, 0x0]
Stack pops: 3
Stack additions: [0xac9]
Exit stack: [V12, 0x12a, V249, V253, S10, {0x12a, 0x8d3}, S8, S7, S6, S5, S4, S3, 0xac9]

================================

Block 0xac9
[0xac9:0xb0a]
---
Predecessors: [0xd55]
Successors: [0xb0b]
---
0xac9 JUMPDEST
0xaca POP
0xacb PUSH1 0x40
0xacd MLOAD
0xace PUSH1 0x1
0xad0 PUSH1 0xe0
0xad2 PUSH1 0x2
0xad4 EXP
0xad5 SUB
0xad6 NOT
0xad7 DUP4
0xad8 AND
0xad9 SWAP1
0xada PUSH1 0x1
0xadc PUSH1 0xa0
0xade PUSH1 0x2
0xae0 EXP
0xae1 SUB
0xae2 CALLER
0xae3 AND
0xae4 SWAP1
0xae5 PUSH32 0xd3ebf454e78fe007cc3a3b4cc3a453e32fa124cfcc573e4b60f0c94fd2f0428e
0xb06 SWAP1
0xb07 PUSH1 0x0
0xb09 SWAP1
0xb0a LOG3
---
0xac9: JUMPDEST 
0xacb: V1027 = 0x40
0xacd: V1028 = M[0x40]
0xace: V1029 = 0x1
0xad0: V1030 = 0xe0
0xad2: V1031 = 0x2
0xad4: V1032 = EXP 0x2 0xe0
0xad5: V1033 = SUB 0x100000000000000000000000000000000000000000000000000000000 0x1
0xad6: V1034 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xad8: V1035 = AND S2 0xffffffff00000000000000000000000000000000000000000000000000000000
0xada: V1036 = 0x1
0xadc: V1037 = 0xa0
0xade: V1038 = 0x2
0xae0: V1039 = EXP 0x2 0xa0
0xae1: V1040 = SUB 0x10000000000000000000000000000000000000000 0x1
0xae2: V1041 = CALLER
0xae3: V1042 = AND V1041 0xffffffffffffffffffffffffffffffffffffffff
0xae5: V1043 = 0xd3ebf454e78fe007cc3a3b4cc3a453e32fa124cfcc573e4b60f0c94fd2f0428e
0xb07: V1044 = 0x0
0xb0a: LOG V1028 0x0 0xd3ebf454e78fe007cc3a3b4cc3a453e32fa124cfcc573e4b60f0c94fd2f0428e V1042 V1035
---
Entry stack: [V12, 0x12a, V249, V253, S8, {0x12a, 0x8d3}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1]
Exit stack: [V12, 0x12a, V249, V253, S8, {0x12a, 0x8d3}, S6, S5, S4, S3, S2, S1]

================================

Block 0xb0b
[0xb0b:0xb0b]
---
Predecessors: [0xac9]
Successors: [0xb0c]
---
0xb0b JUMPDEST
---
0xb0b: JUMPDEST 
---
Entry stack: [V12, 0x12a, V249, V253, S7, {0x12a, 0x8d3}, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, V249, V253, S7, {0x12a, 0x8d3}, S5, S4, S3, S2, S1, S0]

================================

Block 0xb0c
[0xb0c:0xb0f]
---
Predecessors: [0xb0b]
Successors: [0x12a, 0x8d3]
---
0xb0c JUMPDEST
0xb0d POP
0xb0e POP
0xb0f JUMP
---
0xb0c: JUMPDEST 
0xb0f: JUMP S2
---
Entry stack: [V12, 0x12a, V249, V253, S7, {0x12a, 0x8d3}, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x12a, V249, V253, S7, {0x12a, 0x8d3}, S5, S4, S3]

================================

Block 0xb10
[0xb10:0xb49]
---
Predecessors: [0x370, 0x93c]
Successors: [0xb4a, 0xb52]
---
0xb10 JUMPDEST
0xb11 PUSH1 0x40
0xb13 DUP1
0xb14 MLOAD
0xb15 DUP4
0xb16 DUP2
0xb17 MSTORE
0xb18 PUSH1 0xf8
0xb1a PUSH1 0x2
0xb1c EXP
0xb1d PUSH1 0xff
0xb1f DUP5
0xb20 AND
0xb21 MUL
0xb22 PUSH1 0x20
0xb24 DUP3
0xb25 ADD
0xb26 MSTORE
0xb27 PUSH1 0x21
0xb29 DUP2
0xb2a ADD
0xb2b DUP5
0xb2c SWAP1
0xb2d MSTORE
0xb2e SWAP1
0xb2f MLOAD
0xb30 SWAP1
0xb31 DUP2
0xb32 SWAP1
0xb33 SUB
0xb34 PUSH1 0x41
0xb36 ADD
0xb37 SWAP1
0xb38 SHA3
0xb39 PUSH1 0x4
0xb3b SLOAD
0xb3c PUSH1 0x0
0xb3e SWAP2
0xb3f SWAP1
0xb40 DUP3
0xb41 SWAP1
0xb42 DUP2
0xb43 SWAP1
0xb44 DUP4
0xb45 EQ
0xb46 PUSH2 0xb52
0xb49 JUMPI
---
0xb10: JUMPDEST 
0xb11: V1045 = 0x40
0xb14: V1046 = M[0x40]
0xb17: M[V1046] = S1
0xb18: V1047 = 0xf8
0xb1a: V1048 = 0x2
0xb1c: V1049 = EXP 0x2 0xf8
0xb1d: V1050 = 0xff
0xb20: V1051 = AND S0 0xff
0xb21: V1052 = MUL V1051 0x100000000000000000000000000000000000000000000000000000000000000
0xb22: V1053 = 0x20
0xb25: V1054 = ADD V1046 0x20
0xb26: M[V1054] = V1052
0xb27: V1055 = 0x21
0xb2a: V1056 = ADD V1046 0x21
0xb2d: M[V1056] = S1
0xb2f: V1057 = M[0x40]
0xb33: V1058 = SUB V1046 V1057
0xb34: V1059 = 0x41
0xb36: V1060 = ADD 0x41 V1058
0xb38: V1061 = SHA3 V1057 V1060
0xb39: V1062 = 0x4
0xb3b: V1063 = S[0x4]
0xb3c: V1064 = 0x0
0xb45: V1065 = EQ V1061 V1063
0xb46: V1066 = 0xb52
0xb49: JUMPI 0xb52 V1065
---
Entry stack: [V12, 0x12a, V249, V253, S3, {0x18b, 0x946}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1061, 0x0, 0x0]
Exit stack: [V12, 0x12a, V249, V253, S3, {0x18b, 0x946}, S1, S0, 0x0, V1061, 0x0, 0x0]

================================

Block 0xb4a
[0xb4a:0xb51]
---
Predecessors: [0xb10]
Successors: [0xbaa]
---
0xb4a PUSH1 0x0
0xb4c SWAP4
0xb4d POP
0xb4e PUSH2 0xbaa
0xb51 JUMP
---
0xb4a: V1067 = 0x0
0xb4e: V1068 = 0xbaa
0xb51: JUMP 0xbaa
---
Entry stack: [V12, 0x12a, V249, V253, S7, {0x18b, 0x946}, S5, S4, 0x0, V1061, 0x0, 0x0]
Stack pops: 4
Stack additions: [0x0, S2, S1, S0]
Exit stack: [V12, 0x12a, V249, V253, S7, {0x18b, 0x946}, S5, S4, 0x0, V1061, 0x0, 0x0]

================================

Block 0xb52
[0xb52:0xb68]
---
Predecessors: [0xb10]
Successors: [0xb69]
---
0xb52 JUMPDEST
0xb53 POP
0xb54 POP
0xb55 PUSH1 0x40
0xb57 DUP1
0xb58 MLOAD
0xb59 DUP6
0xb5a DUP2
0xb5b MSTORE
0xb5c SWAP1
0xb5d MLOAD
0xb5e SWAP1
0xb5f DUP2
0xb60 SWAP1
0xb61 SUB
0xb62 PUSH1 0x20
0xb64 ADD
0xb65 SWAP1
0xb66 SHA3
0xb67 PUSH1 0x1
---
0xb52: JUMPDEST 
0xb55: V1069 = 0x40
0xb58: V1070 = M[0x40]
0xb5b: M[V1070] = S5
0xb5d: V1071 = M[0x40]
0xb61: V1072 = SUB V1070 V1071
0xb62: V1073 = 0x20
0xb64: V1074 = ADD 0x20 V1072
0xb66: V1075 = SHA3 V1071 V1074
0xb67: V1076 = 0x1
---
Entry stack: [V12, 0x12a, V249, V253, S7, {0x18b, 0x946}, S5, S4, 0x0, V1061, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, V1075, 0x1]
Exit stack: [V12, 0x12a, V249, V253, S7, {0x18b, 0x946}, S5, S4, 0x0, V1061, V1075, 0x1]

================================

Block 0xb69
[0xb69:0xb77]
---
Predecessors: [0xb52, 0xb8b]
Successors: [0xb78, 0xb93]
---
0xb69 JUMPDEST
0xb6a DUP5
0xb6b PUSH1 0xff
0xb6d AND
0xb6e DUP2
0xb6f PUSH1 0xff
0xb71 AND
0xb72 LT
0xb73 ISZERO
0xb74 PUSH2 0xb93
0xb77 JUMPI
---
0xb69: JUMPDEST 
0xb6b: V1077 = 0xff
0xb6d: V1078 = AND 0xff S4
0xb6f: V1079 = 0xff
0xb71: V1080 = AND 0xff S0
0xb72: V1081 = LT V1080 V1078
0xb73: V1082 = ISZERO V1081
0xb74: V1083 = 0xb93
0xb77: JUMPI 0xb93 V1082
---
Entry stack: [V12, 0x12a, V249, V253, S7, {0x18b, 0x946}, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V12, 0x12a, V249, V253, S7, {0x18b, 0x946}, S5, S4, S3, S2, S1, S0]

================================

Block 0xb78
[0xb78:0xb8a]
---
Predecessors: [0xb69]
Successors: [0xb8b]
---
0xb78 PUSH1 0x40
0xb7a DUP1
0xb7b MLOAD
0xb7c SWAP3
0xb7d DUP4
0xb7e MSTORE
0xb7f MLOAD
0xb80 SWAP2
0xb81 DUP3
0xb82 SWAP1
0xb83 SUB
0xb84 PUSH1 0x20
0xb86 ADD
0xb87 SWAP1
0xb88 SWAP2
0xb89 SHA3
0xb8a SWAP1
---
0xb78: V1084 = 0x40
0xb7b: V1085 = M[0x40]
0xb7e: M[V1085] = S1
0xb7f: V1086 = M[0x40]
0xb83: V1087 = SUB V1085 V1086
0xb84: V1088 = 0x20
0xb86: V1089 = ADD 0x20 V1087
0xb89: V1090 = SHA3 V1086 V1089
---
Entry stack: [V12, 0x12a, V249, V253, S7, {0x18b, 0x946}, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [V1090, S0]
Exit stack: [V12, 0x12a, V249, V253, S7, {0x18b, 0x946}, S5, S4, S3, S2, V1090, S0]

================================

Block 0xb8b
[0xb8b:0xb92]
---
Predecessors: [0xb78]
Successors: [0xb69]
---
0xb8b JUMPDEST
0xb8c PUSH1 0x1
0xb8e ADD
0xb8f PUSH2 0xb69
0xb92 JUMP
---
0xb8b: JUMPDEST 
0xb8c: V1091 = 0x1
0xb8e: V1092 = ADD 0x1 S0
0xb8f: V1093 = 0xb69
0xb92: JUMP 0xb69
---
Entry stack: [V12, 0x12a, V249, V253, S7, {0x18b, 0x946}, S5, S4, S3, S2, V1090, S0]
Stack pops: 1
Stack additions: [V1092]
Exit stack: [V12, 0x12a, V249, V253, S7, {0x18b, 0x946}, S5, S4, S3, S2, V1090, V1092]

================================

Block 0xb93
[0xb93:0xb9c]
---
Predecessors: [0xb69]
Successors: [0xb9d, 0xba5]
---
0xb93 JUMPDEST
0xb94 PUSH1 0x3
0xb96 SLOAD
0xb97 DUP3
0xb98 EQ
0xb99 PUSH2 0xba5
0xb9c JUMPI
---
0xb93: JUMPDEST 
0xb94: V1094 = 0x3
0xb96: V1095 = S[0x3]
0xb98: V1096 = EQ S1 V1095
0xb99: V1097 = 0xba5
0xb9c: JUMPI 0xba5 V1096
---
Entry stack: [V12, 0x12a, V249, V253, S7, {0x18b, 0x946}, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x12a, V249, V253, S7, {0x18b, 0x946}, S5, S4, S3, S2, S1, S0]

================================

Block 0xb9d
[0xb9d:0xba4]
---
Predecessors: [0xb93]
Successors: [0xbaa]
---
0xb9d PUSH1 0x0
0xb9f SWAP4
0xba0 POP
0xba1 PUSH2 0xbaa
0xba4 JUMP
---
0xb9d: V1098 = 0x0
0xba1: V1099 = 0xbaa
0xba4: JUMP 0xbaa
---
Entry stack: [V12, 0x12a, V249, V253, S7, {0x18b, 0x946}, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [0x0, S2, S1, S0]
Exit stack: [V12, 0x12a, V249, V253, S7, {0x18b, 0x946}, S5, S4, 0x0, S2, S1, S0]

================================

Block 0xba5
[0xba5:0xba9]
---
Predecessors: [0xb93]
Successors: [0xbaa]
---
0xba5 JUMPDEST
0xba6 PUSH1 0x1
0xba8 SWAP4
0xba9 POP
---
0xba5: JUMPDEST 
0xba6: V1100 = 0x1
---
Entry stack: [V12, 0x12a, V249, V253, S7, {0x18b, 0x946}, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [0x1, S2, S1, S0]
Exit stack: [V12, 0x12a, V249, V253, S7, {0x18b, 0x946}, S5, S4, 0x1, S2, S1, S0]

================================

Block 0xbaa
[0xbaa:0xbb2]
---
Predecessors: [0xb4a, 0xb9d, 0xba5]
Successors: [0x18b, 0x946]
---
0xbaa JUMPDEST
0xbab POP
0xbac POP
0xbad POP
0xbae SWAP3
0xbaf SWAP2
0xbb0 POP
0xbb1 POP
0xbb2 JUMP
---
0xbaa: JUMPDEST 
0xbb2: JUMP {0x18b, 0x946}
---
Entry stack: [V12, 0x12a, V249, V253, S7, {0x18b, 0x946}, S5, S4, {0x0, 0x1}, S2, S1, S0]
Stack pops: 7
Stack additions: [S3]
Exit stack: [V12, 0x12a, V249, V253, S7, {0x0, 0x1}]

================================

Block 0xbb3
[0xbb3:0xbb8]
---
Predecessors: [0x39d]
Successors: [0x169]
---
0xbb3 JUMPDEST
0xbb4 PUSH1 0xd
0xbb6 SLOAD
0xbb7 DUP2
0xbb8 JUMP
---
0xbb3: JUMPDEST 
0xbb4: V1101 = 0xd
0xbb6: V1102 = S[0xd]
0xbb8: JUMP 0x169
---
Entry stack: [V12, 0x169]
Stack pops: 1
Stack additions: [S0, V1102]
Exit stack: [V12, 0x169, V1102]

================================

Block 0xbb9
[0xbb9:0xbcd]
---
Predecessors: [0x3bf]
Successors: [0x18b]
---
0xbb9 JUMPDEST
0xbba PUSH1 0x8
0xbbc PUSH1 0x20
0xbbe MSTORE
0xbbf PUSH1 0x0
0xbc1 SWAP1
0xbc2 DUP2
0xbc3 MSTORE
0xbc4 PUSH1 0x40
0xbc6 SWAP1
0xbc7 SHA3
0xbc8 SLOAD
0xbc9 PUSH1 0xff
0xbcb AND
0xbcc DUP2
0xbcd JUMP
---
0xbb9: JUMPDEST 
0xbba: V1103 = 0x8
0xbbc: V1104 = 0x20
0xbbe: M[0x20] = 0x8
0xbbf: V1105 = 0x0
0xbc3: M[0x0] = V337
0xbc4: V1106 = 0x40
0xbc7: V1107 = SHA3 0x0 0x40
0xbc8: V1108 = S[V1107]
0xbc9: V1109 = 0xff
0xbcb: V1110 = AND 0xff V1108
0xbcd: JUMP 0x18b
---
Entry stack: [V12, 0x18b, V337]
Stack pops: 2
Stack additions: [S1, V1110]
Exit stack: [V12, 0x18b, V1110]

================================

Block 0xbce
[0xbce:0xbe4]
---
Predecessors: [0x3ef]
Successors: [0xbe5, 0xbe9]
---
0xbce JUMPDEST
0xbcf PUSH1 0x2
0xbd1 SLOAD
0xbd2 CALLER
0xbd3 PUSH1 0x1
0xbd5 PUSH1 0xa0
0xbd7 PUSH1 0x2
0xbd9 EXP
0xbda SUB
0xbdb SWAP1
0xbdc DUP2
0xbdd AND
0xbde SWAP2
0xbdf AND
0xbe0 EQ
0xbe1 PUSH2 0xbe9
0xbe4 JUMPI
---
0xbce: JUMPDEST 
0xbcf: V1111 = 0x2
0xbd1: V1112 = S[0x2]
0xbd2: V1113 = CALLER
0xbd3: V1114 = 0x1
0xbd5: V1115 = 0xa0
0xbd7: V1116 = 0x2
0xbd9: V1117 = EXP 0x2 0xa0
0xbda: V1118 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbdd: V1119 = AND 0xffffffffffffffffffffffffffffffffffffffff V1113
0xbdf: V1120 = AND V1112 0xffffffffffffffffffffffffffffffffffffffff
0xbe0: V1121 = EQ V1120 V1119
0xbe1: V1122 = 0xbe9
0xbe4: JUMPI 0xbe9 V1121
---
Entry stack: [V12, 0x12a, V358]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, V358]

================================

Block 0xbe5
[0xbe5:0xbe8]
---
Predecessors: [0xbce]
Successors: []
---
0xbe5 PUSH2 0x0
0xbe8 JUMP
---
0xbe5: V1123 = 0x0
0xbe8: THROW 
---
Entry stack: [V12, 0x12a, V358]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, V358]

================================

Block 0xbe9
[0xbe9:0xc11]
---
Predecessors: [0xbce]
Successors: [0xc12]
---
0xbe9 JUMPDEST
0xbea PUSH1 0x2
0xbec DUP1
0xbed SLOAD
0xbee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc03 NOT
0xc04 AND
0xc05 PUSH1 0x1
0xc07 PUSH1 0xa0
0xc09 PUSH1 0x2
0xc0b EXP
0xc0c SUB
0xc0d DUP4
0xc0e AND
0xc0f OR
0xc10 SWAP1
0xc11 SSTORE
---
0xbe9: JUMPDEST 
0xbea: V1124 = 0x2
0xbed: V1125 = S[0x2]
0xbee: V1126 = 0xffffffffffffffffffffffffffffffffffffffff
0xc03: V1127 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xc04: V1128 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1125
0xc05: V1129 = 0x1
0xc07: V1130 = 0xa0
0xc09: V1131 = 0x2
0xc0b: V1132 = EXP 0x2 0xa0
0xc0c: V1133 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc0e: V1134 = AND V358 0xffffffffffffffffffffffffffffffffffffffff
0xc0f: V1135 = OR V1134 V1128
0xc11: S[0x2] = V1135
---
Entry stack: [V12, 0x12a, V358]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x12a, V358]

================================

Block 0xc12
[0xc12:0xc12]
---
Predecessors: [0xbe9]
Successors: [0xc13]
---
0xc12 JUMPDEST
---
0xc12: JUMPDEST 
---
Entry stack: [V12, 0x12a, V358]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, V358]

================================

Block 0xc13
[0xc13:0xc15]
---
Predecessors: [0xc12]
Successors: [0x12a]
---
0xc13 JUMPDEST
0xc14 POP
0xc15 JUMP
---
0xc13: JUMPDEST 
0xc15: JUMP 0x12a
---
Entry stack: [V12, 0x12a, V358]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0xc16
[0xc16:0xc2c]
---
Predecessors: [0x40d]
Successors: [0xc2d, 0xc31]
---
0xc16 JUMPDEST
0xc17 PUSH1 0x2
0xc19 SLOAD
0xc1a CALLER
0xc1b PUSH1 0x1
0xc1d PUSH1 0xa0
0xc1f PUSH1 0x2
0xc21 EXP
0xc22 SUB
0xc23 SWAP1
0xc24 DUP2
0xc25 AND
0xc26 SWAP2
0xc27 AND
0xc28 EQ
0xc29 PUSH2 0xc31
0xc2c JUMPI
---
0xc16: JUMPDEST 
0xc17: V1136 = 0x2
0xc19: V1137 = S[0x2]
0xc1a: V1138 = CALLER
0xc1b: V1139 = 0x1
0xc1d: V1140 = 0xa0
0xc1f: V1141 = 0x2
0xc21: V1142 = EXP 0x2 0xa0
0xc22: V1143 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc25: V1144 = AND 0xffffffffffffffffffffffffffffffffffffffff V1138
0xc27: V1145 = AND V1137 0xffffffffffffffffffffffffffffffffffffffff
0xc28: V1146 = EQ V1145 V1144
0xc29: V1147 = 0xc31
0xc2c: JUMPI 0xc31 V1146
---
Entry stack: [V12, 0x12a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a]

================================

Block 0xc2d
[0xc2d:0xc30]
---
Predecessors: [0xc16]
Successors: []
---
0xc2d PUSH2 0x0
0xc30 JUMP
---
0xc2d: V1148 = 0x0
0xc30: THROW 
---
Entry stack: [V12, 0x12a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a]

================================

Block 0xc31
[0xc31:0xc45]
---
Predecessors: [0xc16]
Successors: [0xc46, 0xc4a]
---
0xc31 JUMPDEST
0xc32 PUSH1 0x6
0xc34 SLOAD
0xc35 PUSH5 0x100000000
0xc3b SWAP1
0xc3c DIV
0xc3d PUSH1 0xff
0xc3f AND
0xc40 ISZERO
0xc41 ISZERO
0xc42 PUSH2 0xc4a
0xc45 JUMPI
---
0xc31: JUMPDEST 
0xc32: V1149 = 0x6
0xc34: V1150 = S[0x6]
0xc35: V1151 = 0x100000000
0xc3c: V1152 = DIV V1150 0x100000000
0xc3d: V1153 = 0xff
0xc3f: V1154 = AND 0xff V1152
0xc40: V1155 = ISZERO V1154
0xc41: V1156 = ISZERO V1155
0xc42: V1157 = 0xc4a
0xc45: JUMPI 0xc4a V1156
---
Entry stack: [V12, 0x12a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a]

================================

Block 0xc46
[0xc46:0xc49]
---
Predecessors: [0xc31]
Successors: []
---
0xc46 PUSH2 0x0
0xc49 JUMP
---
0xc46: V1158 = 0x0
0xc49: THROW 
---
Entry stack: [V12, 0x12a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a]

================================

Block 0xc4a
[0xc4a:0xc51]
---
Predecessors: [0xc31]
Successors: [0x62e]
---
0xc4a JUMPDEST
0xc4b PUSH2 0xc52
0xc4e PUSH2 0x62e
0xc51 JUMP
---
0xc4a: JUMPDEST 
0xc4b: V1159 = 0xc52
0xc4e: V1160 = 0x62e
0xc51: JUMP 0x62e
---
Entry stack: [V12, 0x12a]
Stack pops: 0
Stack additions: [0xc52]
Exit stack: [V12, 0x12a, 0xc52]

================================

Block 0xc52
[0xc52:0xc58]
---
Predecessors: [0x6e5]
Successors: [0xc59, 0xc5e]
---
0xc52 JUMPDEST
0xc53 DUP1
0xc54 ISZERO
0xc55 PUSH2 0xc5e
0xc58 JUMPI
---
0xc52: JUMPDEST 
0xc54: V1161 = ISZERO S0
0xc55: V1162 = 0xc5e
0xc58: JUMPI 0xc5e V1161
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, S1, S0]

================================

Block 0xc59
[0xc59:0xc5d]
---
Predecessors: [0xc52]
Successors: [0xc5e]
---
0xc59 POP
0xc5a PUSH1 0xd
0xc5c SLOAD
0xc5d ISZERO
---
0xc5a: V1163 = 0xd
0xc5c: V1164 = S[0xd]
0xc5d: V1165 = ISZERO V1164
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: [V1165]
Exit stack: [V12, S1, V1165]

================================

Block 0xc5e
[0xc5e:0xc63]
---
Predecessors: [0xc52, 0xc59]
Successors: [0x128, 0xc64]
---
0xc5e JUMPDEST
0xc5f ISZERO
0xc60 PUSH2 0x128
0xc63 JUMPI
---
0xc5e: JUMPDEST 
0xc5f: V1166 = ISZERO S0
0xc60: V1167 = 0x128
0xc63: JUMPI 0x128 V1166
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0xc64
[0xc64:0xc70]
---
Predecessors: [0xc5e]
Successors: []
---
0xc64 PUSH1 0x2
0xc66 SLOAD
0xc67 PUSH1 0x1
0xc69 PUSH1 0xa0
0xc6b PUSH1 0x2
0xc6d EXP
0xc6e SUB
0xc6f AND
0xc70 SELFDESTRUCT
---
0xc64: V1168 = 0x2
0xc66: V1169 = S[0x2]
0xc67: V1170 = 0x1
0xc69: V1171 = 0xa0
0xc6b: V1172 = 0x2
0xc6d: V1173 = EXP 0x2 0xa0
0xc6e: V1174 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc6f: V1175 = AND 0xffffffffffffffffffffffffffffffffffffffff V1169
0xc70: SELFDESTRUCT V1175
---
Entry stack: [V12, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S0]

================================

Block 0xc71
[0xc71:0xc71]
---
Predecessors: []
Successors: [0xc72]
---
0xc71 JUMPDEST
---
0xc71: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc72
[0xc72:0xc72]
---
Predecessors: [0xc71]
Successors: [0xc73]
---
0xc72 JUMPDEST
---
0xc72: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc73
[0xc73:0xc73]
---
Predecessors: [0xc72]
Successors: [0xc74]
---
0xc73 JUMPDEST
---
0xc73: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc74
[0xc74:0xc75]
---
Predecessors: [0xc73]
Successors: []
Has unresolved jump.
---
0xc74 JUMPDEST
0xc75 JUMP
---
0xc74: JUMPDEST 
0xc75: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xc76
[0xc76:0xce1]
---
Predecessors: [0x460, 0xa99]
Successors: [0xce2, 0xce3]
---
0xc76 JUMPDEST
0xc77 PUSH1 0x0
0xc79 PUSH1 0x0
0xc7b PUSH1 0x0
0xc7d PUSH1 0x0
0xc7f PUSH1 0x2
0xc81 CALLER
0xc82 NUMBER
0xc83 PUSH1 0xe
0xc85 SLOAD
0xc86 PUSH1 0x0
0xc88 PUSH1 0x40
0xc8a MLOAD
0xc8b PUSH1 0x20
0xc8d ADD
0xc8e MSTORE
0xc8f PUSH1 0x40
0xc91 MLOAD
0xc92 DUP1
0xc93 DUP5
0xc94 PUSH1 0x1
0xc96 PUSH1 0xa0
0xc98 PUSH1 0x2
0xc9a EXP
0xc9b SUB
0xc9c AND
0xc9d PUSH1 0x1
0xc9f PUSH1 0xa0
0xca1 PUSH1 0x2
0xca3 EXP
0xca4 SUB
0xca5 AND
0xca6 PUSH1 0x60
0xca8 PUSH1 0x2
0xcaa EXP
0xcab MUL
0xcac DUP2
0xcad MSTORE
0xcae PUSH1 0x14
0xcb0 ADD
0xcb1 DUP4
0xcb2 DUP2
0xcb3 MSTORE
0xcb4 PUSH1 0x20
0xcb6 ADD
0xcb7 DUP3
0xcb8 PUSH1 0x0
0xcba NOT
0xcbb AND
0xcbc PUSH1 0x0
0xcbe NOT
0xcbf AND
0xcc0 DUP2
0xcc1 MSTORE
0xcc2 PUSH1 0x20
0xcc4 ADD
0xcc5 SWAP4
0xcc6 POP
0xcc7 POP
0xcc8 POP
0xcc9 POP
0xcca PUSH1 0x20
0xccc PUSH1 0x40
0xcce MLOAD
0xccf DUP1
0xcd0 DUP4
0xcd1 SUB
0xcd2 DUP2
0xcd3 PUSH1 0x0
0xcd5 DUP7
0xcd6 PUSH2 0x61da
0xcd9 GAS
0xcda SUB
0xcdb CALL
0xcdc ISZERO
0xcdd ISZERO
0xcde PUSH2 0xce3
0xce1 JUMPI
---
0xc76: JUMPDEST 
0xc77: V1176 = 0x0
0xc79: V1177 = 0x0
0xc7b: V1178 = 0x0
0xc7d: V1179 = 0x0
0xc7f: V1180 = 0x2
0xc81: V1181 = CALLER
0xc82: V1182 = NUMBER
0xc83: V1183 = 0xe
0xc85: V1184 = S[0xe]
0xc86: V1185 = 0x0
0xc88: V1186 = 0x40
0xc8a: V1187 = M[0x40]
0xc8b: V1188 = 0x20
0xc8d: V1189 = ADD 0x20 V1187
0xc8e: M[V1189] = 0x0
0xc8f: V1190 = 0x40
0xc91: V1191 = M[0x40]
0xc94: V1192 = 0x1
0xc96: V1193 = 0xa0
0xc98: V1194 = 0x2
0xc9a: V1195 = EXP 0x2 0xa0
0xc9b: V1196 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc9c: V1197 = AND 0xffffffffffffffffffffffffffffffffffffffff V1181
0xc9d: V1198 = 0x1
0xc9f: V1199 = 0xa0
0xca1: V1200 = 0x2
0xca3: V1201 = EXP 0x2 0xa0
0xca4: V1202 = SUB 0x10000000000000000000000000000000000000000 0x1
0xca5: V1203 = AND 0xffffffffffffffffffffffffffffffffffffffff V1197
0xca6: V1204 = 0x60
0xca8: V1205 = 0x2
0xcaa: V1206 = EXP 0x2 0x60
0xcab: V1207 = MUL 0x1000000000000000000000000 V1203
0xcad: M[V1191] = V1207
0xcae: V1208 = 0x14
0xcb0: V1209 = ADD 0x14 V1191
0xcb3: M[V1209] = V1182
0xcb4: V1210 = 0x20
0xcb6: V1211 = ADD 0x20 V1209
0xcb8: V1212 = 0x0
0xcba: V1213 = NOT 0x0
0xcbb: V1214 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V1184
0xcbc: V1215 = 0x0
0xcbe: V1216 = NOT 0x0
0xcbf: V1217 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V1214
0xcc1: M[V1211] = V1217
0xcc2: V1218 = 0x20
0xcc4: V1219 = ADD 0x20 V1211
0xcca: V1220 = 0x20
0xccc: V1221 = 0x40
0xcce: V1222 = M[0x40]
0xcd1: V1223 = SUB V1219 V1222
0xcd3: V1224 = 0x0
0xcd6: V1225 = 0x61da
0xcd9: V1226 = GAS
0xcda: V1227 = SUB V1226 0x61da
0xcdb: V1228 = CALL V1227 0x2 0x0 V1222 V1223 V1222 0x20
0xcdc: V1229 = ISZERO V1228
0xcdd: V1230 = ISZERO V1229
0xcde: V1231 = 0xce3
0xce1: JUMPI 0xce3 V1230
---
Entry stack: [V12, 0x12a, V249, V253, S8, {0x12a, 0x8d3}, S6, S5, S4, S3, S2, S1, {0x468, 0xac9}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x2, V1219]
Exit stack: [V12, 0x12a, V249, V253, S8, {0x12a, 0x8d3}, S6, S5, S4, S3, S2, S1, {0x468, 0xac9}, 0x0, 0x0, 0x0, 0x0, 0x2, V1219]

================================

Block 0xce2
[0xce2:0xce2]
---
Predecessors: [0xc76]
Successors: []
---
0xce2 INVALID
---
0xce2: INVALID 
---
Entry stack: [V12, 0x12a, V249, V253, S14, {0x12a, 0x8d3}, S12, S11, S10, S9, S8, S7, {0x468, 0xac9}, 0x0, 0x0, 0x0, 0x0, 0x2, V1219]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, V249, V253, S14, {0x12a, 0x8d3}, S12, S11, S10, S9, S8, S7, {0x468, 0xac9}, 0x0, 0x0, 0x0, 0x0, 0x2, V1219]

================================

Block 0xce3
[0xce3:0xd54]
---
Predecessors: [0xc76]
Successors: [0xd55]
---
0xce3 JUMPDEST
0xce4 POP
0xce5 POP
0xce6 PUSH1 0x40
0xce8 DUP1
0xce9 MLOAD
0xcea DUP1
0xceb MLOAD
0xcec PUSH1 0xe
0xcee DUP1
0xcef SLOAD
0xcf0 NUMBER
0xcf1 DUP1
0xcf2 DUP6
0xcf3 MSTORE
0xcf4 PUSH1 0x0
0xcf6 NOT
0xcf7 PUSH1 0xff
0xcf9 SWAP1
0xcfa SWAP5
0xcfb AND
0xcfc SWAP1
0xcfd DUP2
0xcfe SWAP1
0xcff SUB
0xd00 SWAP4
0xd01 SWAP1
0xd02 SWAP4
0xd03 ADD
0xd04 DUP1
0xd05 BLOCKHASH
0xd06 PUSH1 0x20
0xd08 DUP1
0xd09 DUP8
0xd0a ADD
0xd0b SWAP2
0xd0c SWAP1
0xd0d SWAP2
0xd0e MSTORE
0xd0f PUSH1 0x60
0xd11 PUSH1 0x2
0xd13 EXP
0xd14 PUSH1 0x1
0xd16 PUSH1 0xa0
0xd18 PUSH1 0x2
0xd1a EXP
0xd1b SUB
0xd1c CALLER
0xd1d AND
0xd1e MUL
0xd1f DUP7
0xd20 DUP9
0xd21 ADD
0xd22 MSTORE
0xd23 PUSH1 0x54
0xd25 DUP7
0xd26 ADD
0xd27 DUP4
0xd28 SWAP1
0xd29 MSTORE
0xd2a DUP7
0xd2b MLOAD
0xd2c SWAP6
0xd2d DUP7
0xd2e SWAP1
0xd2f SUB
0xd30 PUSH1 0x74
0xd32 ADD
0xd33 DUP7
0xd34 SHA3
0xd35 SWAP3
0xd36 DUP7
0xd37 MSTORE
0xd38 DUP6
0xd39 ADD
0xd3a DUP3
0xd3b SWAP1
0xd3c MSTORE
0xd3d DUP6
0xd3e MLOAD
0xd3f SWAP5
0xd40 DUP6
0xd41 SWAP1
0xd42 SUB
0xd43 SWAP1
0xd44 SWAP6
0xd45 ADD
0xd46 SWAP1
0xd47 SWAP4
0xd48 SHA3
0xd49 SWAP1
0xd4a SSTORE
0xd4b SWAP1
0xd4c SWAP6
0xd4d POP
0xd4e SWAP4
0xd4f POP
0xd50 SWAP2
0xd51 POP
0xd52 DUP4
0xd53 SWAP1
0xd54 POP
---
0xce3: JUMPDEST 
0xce6: V1232 = 0x40
0xce9: V1233 = M[0x40]
0xceb: V1234 = M[V1233]
0xcec: V1235 = 0xe
0xcef: V1236 = S[0xe]
0xcf0: V1237 = NUMBER
0xcf3: M[V1233] = V1237
0xcf4: V1238 = 0x0
0xcf6: V1239 = NOT 0x0
0xcf7: V1240 = 0xff
0xcfb: V1241 = AND V1234 0xff
0xcff: V1242 = SUB V1237 V1241
0xd03: V1243 = ADD V1242 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xd05: V1244 = BLOCKHASH V1243
0xd06: V1245 = 0x20
0xd0a: V1246 = ADD V1233 0x20
0xd0e: M[V1246] = V1244
0xd0f: V1247 = 0x60
0xd11: V1248 = 0x2
0xd13: V1249 = EXP 0x2 0x60
0xd14: V1250 = 0x1
0xd16: V1251 = 0xa0
0xd18: V1252 = 0x2
0xd1a: V1253 = EXP 0x2 0xa0
0xd1b: V1254 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd1c: V1255 = CALLER
0xd1d: V1256 = AND V1255 0xffffffffffffffffffffffffffffffffffffffff
0xd1e: V1257 = MUL V1256 0x1000000000000000000000000
0xd21: V1258 = ADD 0x40 V1233
0xd22: M[V1258] = V1257
0xd23: V1259 = 0x54
0xd26: V1260 = ADD V1233 0x54
0xd29: M[V1260] = V1236
0xd2b: V1261 = M[0x40]
0xd2f: V1262 = SUB V1233 V1261
0xd30: V1263 = 0x74
0xd32: V1264 = ADD 0x74 V1262
0xd34: V1265 = SHA3 V1261 V1264
0xd37: M[V1261] = V1236
0xd39: V1266 = ADD V1261 0x20
0xd3c: M[V1266] = V1265
0xd3e: V1267 = M[0x40]
0xd42: V1268 = SUB V1261 V1267
0xd45: V1269 = ADD 0x40 V1268
0xd48: V1270 = SHA3 V1267 V1269
0xd4a: S[0xe] = V1270
---
Entry stack: [V12, 0x12a, V249, V253, S14, {0x12a, 0x8d3}, S12, S11, S10, S9, S8, S7, {0x468, 0xac9}, 0x0, 0x0, 0x0, 0x0, 0x2, V1219]
Stack pops: 6
Stack additions: [V1265, V1241, V1243, V1265]
Exit stack: [V12, 0x12a, V249, V253, S14, {0x12a, 0x8d3}, S12, S11, S10, S9, S8, S7, {0x468, 0xac9}, V1265, V1241, V1243, V1265]

================================

Block 0xd55
[0xd55:0xd5a]
---
Predecessors: [0xce3]
Successors: [0x468, 0xac9]
---
0xd55 JUMPDEST
0xd56 POP
0xd57 POP
0xd58 POP
0xd59 SWAP1
0xd5a JUMP
---
0xd55: JUMPDEST 
0xd5a: JUMP {0x468, 0xac9}
---
Entry stack: [V12, 0x12a, V249, V253, S12, {0x12a, 0x8d3}, S10, S9, S8, S7, S6, S5, {0x468, 0xac9}, V1265, V1241, V1243, V1265]
Stack pops: 5
Stack additions: [S3]
Exit stack: [V12, 0x12a, V249, V253, S12, {0x12a, 0x8d3}, S10, S9, S8, S7, S6, S5, V1265]

================================

Block 0xd5b
[0xd5b:0xd60]
---
Predecessors: [0x468, 0x954]
Successors: [0xd61]
---
0xd5b JUMPDEST
0xd5c PUSH1 0x0
0xd5e DUP1
0xd5f DUP1
0xd60 DUP1
---
0xd5b: JUMPDEST 
0xd5c: V1271 = 0x0
---
Entry stack: [V12, 0x12a, V249, V253, S9, {0x12a, 0x8d3}, S7, S6, S5, S4, S3, S2, {0x473, 0x989}, S0]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0]
Exit stack: [V12, 0x12a, V249, V253, S9, {0x12a, 0x8d3}, S7, S6, S5, S4, S3, S2, {0x473, 0x989}, S0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xd61
[0xd61:0xd6d]
---
Predecessors: [0xd5b, 0xe1e]
Successors: [0xd6e, 0xe26]
---
0xd61 JUMPDEST
0xd62 PUSH1 0x4
0xd64 DUP2
0xd65 PUSH1 0xff
0xd67 AND
0xd68 LT
0xd69 ISZERO
0xd6a PUSH2 0xe26
0xd6d JUMPI
---
0xd61: JUMPDEST 
0xd62: V1272 = 0x4
0xd65: V1273 = 0xff
0xd67: V1274 = AND 0xff S0
0xd68: V1275 = LT V1274 0x4
0xd69: V1276 = ISZERO V1275
0xd6a: V1277 = 0xe26
0xd6d: JUMPI 0xe26 V1276
---
Entry stack: [V12, 0x12a, V249, V253, S13, {0x12a, 0x8d3}, S11, S10, S9, S8, S7, S6, {0x473, 0x989}, S4, 0x0, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x12a, V249, V253, S13, {0x12a, 0x8d3}, S11, S10, S9, S8, S7, S6, {0x473, 0x989}, S4, 0x0, S2, S1, S0]

================================

Block 0xd6e
[0xd6e:0xd70]
---
Predecessors: [0xd61]
Successors: [0xd71]
---
0xd6e DUP5
0xd6f PUSH1 0x0
---
0xd6f: V1278 = 0x0
---
Entry stack: [V12, 0x12a, V249, V253, S9, {0x12a, 0x8d3}, S7, S6, {0x473, 0x989}, S4, 0x0, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S4, 0x0]
Exit stack: [V12, 0x12a, V249, V253, S9, {0x12a, 0x8d3}, S7, S6, {0x473, 0x989}, S4, 0x0, S2, S1, S0, S4, 0x0]

================================

Block 0xd71
[0xd71:0xdde]
---
Predecessors: [0xd6e]
Successors: [0xddf, 0xde0]
---
0xd71 JUMPDEST
0xd72 PUSH1 0x40
0xd74 DUP1
0xd75 MLOAD
0xd76 SWAP8
0xd77 DUP9
0xd78 MSTORE
0xd79 PUSH1 0x60
0xd7b PUSH1 0x2
0xd7d EXP
0xd7e PUSH1 0x1
0xd80 PUSH1 0xa0
0xd82 PUSH1 0x2
0xd84 EXP
0xd85 SUB
0xd86 CALLER
0xd87 AND
0xd88 MUL
0xd89 PUSH1 0x20
0xd8b DUP1
0xd8c DUP11
0xd8d ADD
0xd8e SWAP2
0xd8f SWAP1
0xd90 SWAP2
0xd91 MSTORE
0xd92 SWAP1
0xd93 MLOAD
0xd94 SWAP8
0xd95 DUP9
0xd96 SWAP1
0xd97 SUB
0xd98 PUSH1 0x34
0xd9a ADD
0xd9b SWAP1
0xd9c SWAP8
0xd9d SHA3
0xd9e SWAP7
0xd9f PUSH1 0x1f
0xda1 PUSH1 0xf8
0xda3 PUSH1 0x2
0xda5 EXP
0xda6 SWAP4
0xda7 SWAP1
0xda8 SWAP3
0xda9 BYTE
0xdaa DUP4
0xdab MUL
0xdac SWAP3
0xdad SWAP1
0xdae SWAP3
0xdaf DIV
0xdb0 AND
0xdb1 SWAP3
0xdb2 POP
0xdb3 PUSH32 0x3f00000000000000000000000000000000000000000000000000000000000000
0xdd4 SWAP1
0xdd5 DUP7
0xdd6 SWAP1
0xdd7 DUP5
0xdd8 SWAP1
0xdd9 DUP2
0xdda LT
0xddb PUSH2 0xde0
0xdde JUMPI
---
0xd71: JUMPDEST 
0xd72: V1279 = 0x40
0xd75: V1280 = M[0x40]
0xd78: M[V1280] = S6
0xd79: V1281 = 0x60
0xd7b: V1282 = 0x2
0xd7d: V1283 = EXP 0x2 0x60
0xd7e: V1284 = 0x1
0xd80: V1285 = 0xa0
0xd82: V1286 = 0x2
0xd84: V1287 = EXP 0x2 0xa0
0xd85: V1288 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd86: V1289 = CALLER
0xd87: V1290 = AND V1289 0xffffffffffffffffffffffffffffffffffffffff
0xd88: V1291 = MUL V1290 0x1000000000000000000000000
0xd89: V1292 = 0x20
0xd8d: V1293 = ADD V1280 0x20
0xd91: M[V1293] = V1291
0xd93: V1294 = M[0x40]
0xd97: V1295 = SUB V1280 V1294
0xd98: V1296 = 0x34
0xd9a: V1297 = ADD 0x34 V1295
0xd9d: V1298 = SHA3 V1294 V1297
0xd9f: V1299 = 0x1f
0xda1: V1300 = 0xf8
0xda3: V1301 = 0x2
0xda5: V1302 = EXP 0x2 0xf8
0xda9: V1303 = BYTE 0x0 S1
0xdab: V1304 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V1303
0xdaf: V1305 = DIV V1304 0x100000000000000000000000000000000000000000000000000000000000000
0xdb0: V1306 = AND V1305 0x1f
0xdb3: V1307 = 0x3f00000000000000000000000000000000000000000000000000000000000000
0xdda: V1308 = LT V1306 0x20
0xddb: V1309 = 0xde0
0xdde: JUMPI 0xde0 V1308
---
Entry stack: [V12, 0x12a, V249, V253, S11, {0x12a, 0x8d3}, S9, S8, {0x473, 0x989}, S6, 0x0, S4, S3, S2, S1, 0x0]
Stack pops: 7
Stack additions: [V1298, S5, S4, V1306, S2, 0x3f00000000000000000000000000000000000000000000000000000000000000, V1298, V1306]
Exit stack: [V12, 0x12a, V249, V253, S11, {0x12a, 0x8d3}, S9, S8, {0x473, 0x989}, V1298, 0x0, S4, V1306, S2, 0x3f00000000000000000000000000000000000000000000000000000000000000, V1298, V1306]

================================

Block 0xddf
[0xddf:0xddf]
---
Predecessors: [0xd71]
Successors: []
---
0xddf INVALID
---
0xddf: INVALID 
---
Entry stack: [V12, 0x12a, V249, V253, S12, {0x12a, 0x8d3}, S10, S9, {0x473, 0x989}, V1298, 0x0, S5, V1306, S3, 0x3f00000000000000000000000000000000000000000000000000000000000000, V1298, V1306]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, V249, V253, S12, {0x12a, 0x8d3}, S10, S9, {0x473, 0x989}, V1298, 0x0, S5, V1306, S3, 0x3f00000000000000000000000000000000000000000000000000000000000000, V1298, V1306]

================================

Block 0xde0
[0xde0:0xe1d]
---
Predecessors: [0xd71]
Successors: [0xe1e]
---
0xde0 JUMPDEST
0xde1 BYTE
0xde2 PUSH1 0xf8
0xde4 PUSH1 0x2
0xde6 EXP
0xde7 MUL
0xde8 AND
0xde9 PUSH1 0x1
0xdeb PUSH1 0xf8
0xded PUSH1 0x2
0xdef EXP
0xdf0 SUB
0xdf1 NOT
0xdf2 AND
0xdf3 PUSH1 0x8
0xdf5 DUP5
0xdf6 PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xe13 NOT
0xe14 AND
0xe15 SWAP1
0xe16 PUSH1 0x2
0xe18 EXP
0xe19 SWAP1
0xe1a DIV
0xe1b OR
0xe1c SWAP3
0xe1d POP
---
0xde0: JUMPDEST 
0xde1: V1310 = BYTE V1306 V1298
0xde2: V1311 = 0xf8
0xde4: V1312 = 0x2
0xde6: V1313 = EXP 0x2 0xf8
0xde7: V1314 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V1310
0xde8: V1315 = AND V1314 0x3f00000000000000000000000000000000000000000000000000000000000000
0xde9: V1316 = 0x1
0xdeb: V1317 = 0xf8
0xded: V1318 = 0x2
0xdef: V1319 = EXP 0x2 0xf8
0xdf0: V1320 = SUB 0x100000000000000000000000000000000000000000000000000000000000000 0x1
0xdf1: V1321 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xdf2: V1322 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 V1315
0xdf3: V1323 = 0x8
0xdf6: V1324 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xe13: V1325 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xe14: V1326 = AND 0xffffffff00000000000000000000000000000000000000000000000000000000 S5
0xe16: V1327 = 0x2
0xe18: V1328 = EXP 0x2 0x8
0xe1a: V1329 = DIV V1326 0x100
0xe1b: V1330 = OR V1329 V1322
---
Entry stack: [V12, 0x12a, V249, V253, S12, {0x12a, 0x8d3}, S10, S9, {0x473, 0x989}, V1298, 0x0, S5, V1306, S3, 0x3f00000000000000000000000000000000000000000000000000000000000000, V1298, V1306]
Stack pops: 6
Stack additions: [V1330, S4, S3]
Exit stack: [V12, 0x12a, V249, V253, S12, {0x12a, 0x8d3}, S10, S9, {0x473, 0x989}, V1298, 0x0, V1330, V1306, S3]

================================

Block 0xe1e
[0xe1e:0xe25]
---
Predecessors: [0xde0]
Successors: [0xd61]
---
0xe1e JUMPDEST
0xe1f PUSH1 0x1
0xe21 ADD
0xe22 PUSH2 0xd61
0xe25 JUMP
---
0xe1e: JUMPDEST 
0xe1f: V1331 = 0x1
0xe21: V1332 = ADD 0x1 S0
0xe22: V1333 = 0xd61
0xe25: JUMP 0xd61
---
Entry stack: [V12, 0x12a, V249, V253, S9, {0x12a, 0x8d3}, S7, S6, {0x473, 0x989}, V1298, 0x0, V1330, V1306, S0]
Stack pops: 1
Stack additions: [V1332]
Exit stack: [V12, 0x12a, V249, V253, S9, {0x12a, 0x8d3}, S7, S6, {0x473, 0x989}, V1298, 0x0, V1330, V1306, V1332]

================================

Block 0xe26
[0xe26:0xe29]
---
Predecessors: [0xd61]
Successors: [0xe2a]
---
0xe26 JUMPDEST
0xe27 DUP3
0xe28 SWAP4
0xe29 POP
---
0xe26: JUMPDEST 
---
Entry stack: [V12, 0x12a, V249, V253, S9, {0x12a, 0x8d3}, S7, S6, {0x473, 0x989}, S4, 0x0, S2, S1, S0]
Stack pops: 4
Stack additions: [S2, S2, S1, S0]
Exit stack: [V12, 0x12a, V249, V253, S9, {0x12a, 0x8d3}, S7, S6, {0x473, 0x989}, S4, S2, S2, S1, S0]

================================

Block 0xe2a
[0xe2a:0xe31]
---
Predecessors: [0xe26]
Successors: [0x473, 0x989]
---
0xe2a JUMPDEST
0xe2b POP
0xe2c POP
0xe2d POP
0xe2e SWAP2
0xe2f SWAP1
0xe30 POP
0xe31 JUMP
---
0xe2a: JUMPDEST 
0xe31: JUMP {0x473, 0x989}
---
Entry stack: [V12, 0x12a, V249, V253, S9, {0x12a, 0x8d3}, S7, S6, {0x473, 0x989}, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S3]
Exit stack: [V12, 0x12a, V249, V253, S9, {0x12a, 0x8d3}, S7, S6, S3]

================================

Block 0xe32
[0xe32:0xeed]
---
Predecessors: [0x989]
Successors: [0xeee, 0x102b]
---
0xe32 JUMPDEST
0xe33 PUSH1 0x6
0xe35 DUP1
0xe36 SLOAD
0xe37 PUSH5 0x100000000
0xe3d PUSH4 0xffffffff
0xe42 NOT
0xe43 SWAP1
0xe44 SWAP2
0xe45 AND
0xe46 PUSH1 0xe0
0xe48 PUSH1 0x2
0xe4a EXP
0xe4b DUP1
0xe4c DUP6
0xe4d DIV
0xe4e SWAP2
0xe4f SWAP1
0xe50 SWAP2
0xe51 OR
0xe52 PUSH5 0xff00000000
0xe58 NOT
0xe59 AND
0xe5a SWAP2
0xe5b SWAP1
0xe5c SWAP2
0xe5d OR
0xe5e SWAP2
0xe5f DUP3
0xe60 SWAP1
0xe61 SSTORE
0xe62 PUSH1 0x40
0xe64 DUP1
0xe65 MLOAD
0xe66 DUP7
0xe67 DUP2
0xe68 MSTORE
0xe69 PUSH1 0xff
0xe6b DUP7
0xe6c AND
0xe6d PUSH1 0x20
0xe6f DUP3
0xe70 ADD
0xe71 MSTORE
0xe72 ADDRESS
0xe73 PUSH1 0x1
0xe75 PUSH1 0xa0
0xe77 PUSH1 0x2
0xe79 EXP
0xe7a SUB
0xe7b AND
0xe7c BALANCE
0xe7d DUP2
0xe7e DUP4
0xe7f ADD
0xe80 MSTORE
0xe81 SWAP1
0xe82 MLOAD
0xe83 PUSH1 0x0
0xe85 SWAP4
0xe86 DUP5
0xe87 SWAP4
0xe88 DUP5
0xe89 SWAP4
0xe8a SWAP2
0xe8b MUL
0xe8c PUSH1 0x1
0xe8e PUSH1 0xe0
0xe90 PUSH1 0x2
0xe92 EXP
0xe93 SUB
0xe94 NOT
0xe95 AND
0xe96 SWAP2
0xe97 PUSH32 0xbdec5cceedfa16447f568590f26330080da275219b1b3202ba49d688b05115d2
0xeb8 SWAP2
0xeb9 PUSH1 0x60
0xebb SWAP1
0xebc DUP3
0xebd SWAP1
0xebe SUB
0xebf ADD
0xec0 SWAP1
0xec1 LOG2
0xec2 PUSH1 0x6
0xec4 SLOAD
0xec5 PUSH1 0xe0
0xec7 PUSH1 0x2
0xec9 EXP
0xeca MUL
0xecb PUSH1 0x1
0xecd PUSH1 0xe0
0xecf PUSH1 0x2
0xed1 EXP
0xed2 SUB
0xed3 NOT
0xed4 AND
0xed5 PUSH1 0x0
0xed7 SWAP1
0xed8 DUP2
0xed9 MSTORE
0xeda PUSH1 0x9
0xedc PUSH1 0x20
0xede MSTORE
0xedf PUSH1 0x40
0xee1 DUP2
0xee2 SHA3
0xee3 DUP1
0xee4 SLOAD
0xee5 SWAP1
0xee6 SWAP5
0xee7 POP
0xee8 GT
0xee9 ISZERO
0xeea PUSH2 0x102b
0xeed JUMPI
---
0xe32: JUMPDEST 
0xe33: V1334 = 0x6
0xe36: V1335 = S[0x6]
0xe37: V1336 = 0x100000000
0xe3d: V1337 = 0xffffffff
0xe42: V1338 = NOT 0xffffffff
0xe45: V1339 = AND V1335 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000
0xe46: V1340 = 0xe0
0xe48: V1341 = 0x2
0xe4a: V1342 = EXP 0x2 0xe0
0xe4d: V1343 = DIV S0 0x100000000000000000000000000000000000000000000000000000000
0xe51: V1344 = OR V1343 V1339
0xe52: V1345 = 0xff00000000
0xe58: V1346 = NOT 0xff00000000
0xe59: V1347 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffff V1344
0xe5d: V1348 = OR V1347 0x100000000
0xe61: S[0x6] = V1348
0xe62: V1349 = 0x40
0xe65: V1350 = M[0x40]
0xe68: M[V1350] = S2
0xe69: V1351 = 0xff
0xe6c: V1352 = AND S1 0xff
0xe6d: V1353 = 0x20
0xe70: V1354 = ADD V1350 0x20
0xe71: M[V1354] = V1352
0xe72: V1355 = ADDRESS
0xe73: V1356 = 0x1
0xe75: V1357 = 0xa0
0xe77: V1358 = 0x2
0xe79: V1359 = EXP 0x2 0xa0
0xe7a: V1360 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe7b: V1361 = AND 0xffffffffffffffffffffffffffffffffffffffff V1355
0xe7c: V1362 = BALANCE V1361
0xe7f: V1363 = ADD 0x40 V1350
0xe80: M[V1363] = V1362
0xe82: V1364 = M[0x40]
0xe83: V1365 = 0x0
0xe8b: V1366 = MUL V1348 0x100000000000000000000000000000000000000000000000000000000
0xe8c: V1367 = 0x1
0xe8e: V1368 = 0xe0
0xe90: V1369 = 0x2
0xe92: V1370 = EXP 0x2 0xe0
0xe93: V1371 = SUB 0x100000000000000000000000000000000000000000000000000000000 0x1
0xe94: V1372 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xe95: V1373 = AND 0xffffffff00000000000000000000000000000000000000000000000000000000 V1366
0xe97: V1374 = 0xbdec5cceedfa16447f568590f26330080da275219b1b3202ba49d688b05115d2
0xeb9: V1375 = 0x60
0xebe: V1376 = SUB V1350 V1364
0xebf: V1377 = ADD V1376 0x60
0xec1: LOG V1364 V1377 0xbdec5cceedfa16447f568590f26330080da275219b1b3202ba49d688b05115d2 V1373
0xec2: V1378 = 0x6
0xec4: V1379 = S[0x6]
0xec5: V1380 = 0xe0
0xec7: V1381 = 0x2
0xec9: V1382 = EXP 0x2 0xe0
0xeca: V1383 = MUL 0x100000000000000000000000000000000000000000000000000000000 V1379
0xecb: V1384 = 0x1
0xecd: V1385 = 0xe0
0xecf: V1386 = 0x2
0xed1: V1387 = EXP 0x2 0xe0
0xed2: V1388 = SUB 0x100000000000000000000000000000000000000000000000000000000 0x1
0xed3: V1389 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xed4: V1390 = AND 0xffffffff00000000000000000000000000000000000000000000000000000000 V1383
0xed5: V1391 = 0x0
0xed9: M[0x0] = V1390
0xeda: V1392 = 0x9
0xedc: V1393 = 0x20
0xede: M[0x20] = 0x9
0xedf: V1394 = 0x40
0xee2: V1395 = SHA3 0x0 0x40
0xee4: V1396 = S[V1395]
0xee8: V1397 = GT V1396 0x0
0xee9: V1398 = ISZERO V1397
0xeea: V1399 = 0x102b
0xeed: JUMPI 0x102b V1398
---
Entry stack: [V12, 0x12a, V249, V253, S4, {0x12a, 0x8d3}, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V1395, 0x0, 0x0]
Exit stack: [V12, 0x12a, V249, V253, S4, {0x12a, 0x8d3}, S2, S1, S0, V1395, 0x0, 0x0]

================================

Block 0xeee
[0xeee:0xef1]
---
Predecessors: [0xe32]
Successors: [0xef2]
---
0xeee PUSH1 0x0
0xef0 SWAP2
0xef1 POP
---
0xeee: V1400 = 0x0
---
Entry stack: [V12, 0x12a, V249, V253, S7, {0x12a, 0x8d3}, S5, S4, S3, V1395, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V12, 0x12a, V249, V253, S7, {0x12a, 0x8d3}, S5, S4, S3, V1395, 0x0, 0x0]

================================

Block 0xef2
[0xef2:0xefb]
---
Predecessors: [0xeee, 0xfe3]
Successors: [0xefc, 0xfee]
---
0xef2 JUMPDEST
0xef3 DUP3
0xef4 SLOAD
0xef5 DUP3
0xef6 LT
0xef7 ISZERO
0xef8 PUSH2 0xfee
0xefb JUMPI
---
0xef2: JUMPDEST 
0xef4: V1401 = S[S2]
0xef6: V1402 = LT S1 V1401
0xef7: V1403 = ISZERO V1402
0xef8: V1404 = 0xfee
0xefb: JUMPI 0xfee V1403
---
Entry stack: [V12, 0x12a, V249, V253, S7, {0x12a, 0x8d3}, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x12a, V249, V253, S7, {0x12a, 0x8d3}, S5, S4, S3, S2, S1, S0]

================================

Block 0xefc
[0xefc:0xf07]
---
Predecessors: [0xef2]
Successors: [0xf08, 0xf09]
---
0xefc DUP3
0xefd DUP3
0xefe DUP2
0xeff SLOAD
0xf00 DUP2
0xf01 LT
0xf02 ISZERO
0xf03 ISZERO
0xf04 PUSH2 0xf09
0xf07 JUMPI
---
0xeff: V1405 = S[S2]
0xf01: V1406 = LT S1 V1405
0xf02: V1407 = ISZERO V1406
0xf03: V1408 = ISZERO V1407
0xf04: V1409 = 0xf09
0xf07: JUMPI 0xf09 V1408
---
Entry stack: [V12, 0x12a, V249, V253, S7, {0x12a, 0x8d3}, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, S2, S1]
Exit stack: [V12, 0x12a, V249, V253, S7, {0x12a, 0x8d3}, S5, S4, S3, S2, S1, S0, S2, S1]

================================

Block 0xf08
[0xf08:0xf08]
---
Predecessors: [0xefc]
Successors: []
---
0xf08 INVALID
---
0xf08: INVALID 
---
Entry stack: [V12, 0x12a, V249, V253, S9, {0x12a, 0x8d3}, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, V249, V253, S9, {0x12a, 0x8d3}, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xf09
[0xf09:0xf16]
---
Predecessors: [0xefc]
Successors: [0xf17]
---
0xf09 JUMPDEST
0xf0a SWAP1
0xf0b PUSH1 0x0
0xf0d MSTORE
0xf0e PUSH1 0x20
0xf10 PUSH1 0x0
0xf12 SHA3
0xf13 SWAP1
0xf14 ADD
0xf15 PUSH1 0x0
---
0xf09: JUMPDEST 
0xf0b: V1410 = 0x0
0xf0d: M[0x0] = S1
0xf0e: V1411 = 0x20
0xf10: V1412 = 0x0
0xf12: V1413 = SHA3 0x0 0x20
0xf14: V1414 = ADD S0 V1413
0xf15: V1415 = 0x0
---
Entry stack: [V12, 0x12a, V249, V253, S9, {0x12a, 0x8d3}, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [V1414, 0x0]
Exit stack: [V12, 0x12a, V249, V253, S9, {0x12a, 0x8d3}, S7, S6, S5, S4, S3, S2, V1414, 0x0]

================================

Block 0xf17
[0xf17:0xf46]
---
Predecessors: [0xf09]
Successors: [0xf47, 0xfe2]
---
0xf17 JUMPDEST
0xf18 SWAP1
0xf19 SLOAD
0xf1a PUSH1 0x1
0xf1c PUSH1 0xa0
0xf1e PUSH1 0x2
0xf20 EXP
0xf21 SUB
0xf22 PUSH2 0x100
0xf25 SWAP3
0xf26 SWAP1
0xf27 SWAP3
0xf28 EXP
0xf29 SWAP1
0xf2a DIV
0xf2b AND
0xf2c PUSH1 0x0
0xf2e DUP2
0xf2f DUP2
0xf30 MSTORE
0xf31 PUSH1 0x8
0xf33 PUSH1 0x20
0xf35 MSTORE
0xf36 PUSH1 0x40
0xf38 SWAP1
0xf39 SHA3
0xf3a SLOAD
0xf3b SWAP1
0xf3c SWAP2
0xf3d POP
0xf3e PUSH1 0xff
0xf40 AND
0xf41 ISZERO
0xf42 ISZERO
0xf43 PUSH2 0xfe2
0xf46 JUMPI
---
0xf17: JUMPDEST 
0xf19: V1416 = S[V1414]
0xf1a: V1417 = 0x1
0xf1c: V1418 = 0xa0
0xf1e: V1419 = 0x2
0xf20: V1420 = EXP 0x2 0xa0
0xf21: V1421 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf22: V1422 = 0x100
0xf28: V1423 = EXP 0x100 0x0
0xf2a: V1424 = DIV V1416 0x1
0xf2b: V1425 = AND V1424 0xffffffffffffffffffffffffffffffffffffffff
0xf2c: V1426 = 0x0
0xf30: M[0x0] = V1425
0xf31: V1427 = 0x8
0xf33: V1428 = 0x20
0xf35: M[0x20] = 0x8
0xf36: V1429 = 0x40
0xf39: V1430 = SHA3 0x0 0x40
0xf3a: V1431 = S[V1430]
0xf3e: V1432 = 0xff
0xf40: V1433 = AND 0xff V1431
0xf41: V1434 = ISZERO V1433
0xf42: V1435 = ISZERO V1434
0xf43: V1436 = 0xfe2
0xf46: JUMPI 0xfe2 V1435
---
Entry stack: [V12, 0x12a, V249, V253, S9, {0x12a, 0x8d3}, S7, S6, S5, S4, S3, S2, V1414, 0x0]
Stack pops: 3
Stack additions: [V1425]
Exit stack: [V12, 0x12a, V249, V253, S9, {0x12a, 0x8d3}, S7, S6, S5, S4, S3, V1425]

================================

Block 0xf47
[0xf47:0xf57]
---
Predecessors: [0xf17]
Successors: [0x1034]
---
0xf47 PUSH1 0x7
0xf49 DUP1
0xf4a SLOAD
0xf4b PUSH1 0x1
0xf4d DUP2
0xf4e ADD
0xf4f PUSH2 0xf58
0xf52 DUP4
0xf53 DUP3
0xf54 PUSH2 0x1034
0xf57 JUMP
---
0xf47: V1437 = 0x7
0xf4a: V1438 = S[0x7]
0xf4b: V1439 = 0x1
0xf4e: V1440 = ADD V1438 0x1
0xf4f: V1441 = 0xf58
0xf54: V1442 = 0x1034
0xf57: JUMP 0x1034
---
Entry stack: [V12, 0x12a, V249, V253, S7, {0x12a, 0x8d3}, S5, S4, S3, S2, S1, V1425]
Stack pops: 0
Stack additions: [0x7, V1438, V1440, 0xf58, 0x7, V1440]
Exit stack: [V12, 0x12a, V249, V253, S7, {0x12a, 0x8d3}, S5, S4, S3, S2, S1, V1425, 0x7, V1438, V1440, 0xf58, 0x7, V1440]

================================

Block 0xf58
[0xf58:0xf65]
---
Predecessors: [0x8d7]
Successors: [0xf66]
---
0xf58 JUMPDEST
0xf59 SWAP2
0xf5a PUSH1 0x0
0xf5c MSTORE
0xf5d PUSH1 0x20
0xf5f PUSH1 0x0
0xf61 SHA3
0xf62 SWAP1
0xf63 ADD
0xf64 PUSH1 0x0
---
0xf58: JUMPDEST 
0xf5a: V1443 = 0x0
0xf5c: M[0x0] = S2
0xf5d: V1444 = 0x20
0xf5f: V1445 = 0x0
0xf61: V1446 = SHA3 0x0 0x20
0xf63: V1447 = ADD S1 V1446
0xf64: V1448 = 0x0
---
Entry stack: [V12, 0x12a, V249, V253, S10, {0x12a, 0x8d3}, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S0, V1447, 0x0]
Exit stack: [V12, 0x12a, V249, V253, S10, {0x12a, 0x8d3}, S8, S7, S6, S5, S4, S3, S0, V1447, 0x0]

================================

Block 0xf66
[0xf66:0xfe1]
---
Predecessors: [0xf58]
Successors: [0xfe2]
---
0xf66 JUMPDEST
0xf67 DUP2
0xf68 SLOAD
0xf69 PUSH1 0x1
0xf6b PUSH1 0xa0
0xf6d PUSH1 0x2
0xf6f EXP
0xf70 SUB
0xf71 DUP1
0xf72 DUP7
0xf73 AND
0xf74 PUSH2 0x100
0xf77 SWAP4
0xf78 SWAP1
0xf79 SWAP4
0xf7a EXP
0xf7b DUP4
0xf7c DUP2
0xf7d MUL
0xf7e SWAP2
0xf7f MUL
0xf80 NOT
0xf81 SWAP1
0xf82 SWAP2
0xf83 AND
0xf84 OR
0xf85 SWAP1
0xf86 SWAP2
0xf87 SSTORE
0xf88 PUSH1 0x0
0xf8a DUP2
0xf8b DUP2
0xf8c MSTORE
0xf8d PUSH1 0x8
0xf8f PUSH1 0x20
0xf91 MSTORE
0xf92 PUSH1 0x40
0xf94 DUP1
0xf95 DUP3
0xf96 SHA3
0xf97 DUP1
0xf98 SLOAD
0xf99 PUSH1 0xff
0xf9b NOT
0xf9c AND
0xf9d PUSH1 0x1
0xf9f OR
0xfa0 SWAP1
0xfa1 SSTORE
0xfa2 PUSH1 0x6
0xfa4 SLOAD
0xfa5 SWAP1
0xfa6 MLOAD
0xfa7 PUSH1 0x1
0xfa9 PUSH1 0xe0
0xfab PUSH1 0x2
0xfad EXP
0xfae SUB
0xfaf NOT
0xfb0 PUSH1 0xe0
0xfb2 PUSH1 0x2
0xfb4 EXP
0xfb5 SWAP1
0xfb6 SWAP3
0xfb7 MUL
0xfb8 SWAP2
0xfb9 SWAP1
0xfba SWAP2
0xfbb AND
0xfbc SWAP4
0xfbd POP
0xfbe PUSH32 0x345d116f453f37af02368f0e2ecffe16a2ae3f99b089f4c00355c1dfd36c6263
0xfdf SWAP2
0xfe0 SWAP1
0xfe1 LOG3
---
0xf66: JUMPDEST 
0xf68: V1449 = S[V1447]
0xf69: V1450 = 0x1
0xf6b: V1451 = 0xa0
0xf6d: V1452 = 0x2
0xf6f: V1453 = EXP 0x2 0xa0
0xf70: V1454 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf73: V1455 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0xf74: V1456 = 0x100
0xf7a: V1457 = EXP 0x100 0x0
0xf7d: V1458 = MUL 0x1 V1455
0xf7f: V1459 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xf80: V1460 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xf83: V1461 = AND V1449 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0xf84: V1462 = OR V1461 V1458
0xf87: S[V1447] = V1462
0xf88: V1463 = 0x0
0xf8c: M[0x0] = V1455
0xf8d: V1464 = 0x8
0xf8f: V1465 = 0x20
0xf91: M[0x20] = 0x8
0xf92: V1466 = 0x40
0xf96: V1467 = SHA3 0x0 0x40
0xf98: V1468 = S[V1467]
0xf99: V1469 = 0xff
0xf9b: V1470 = NOT 0xff
0xf9c: V1471 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1468
0xf9d: V1472 = 0x1
0xf9f: V1473 = OR 0x1 V1471
0xfa1: S[V1467] = V1473
0xfa2: V1474 = 0x6
0xfa4: V1475 = S[0x6]
0xfa6: V1476 = M[0x40]
0xfa7: V1477 = 0x1
0xfa9: V1478 = 0xe0
0xfab: V1479 = 0x2
0xfad: V1480 = EXP 0x2 0xe0
0xfae: V1481 = SUB 0x100000000000000000000000000000000000000000000000000000000 0x1
0xfaf: V1482 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xfb0: V1483 = 0xe0
0xfb2: V1484 = 0x2
0xfb4: V1485 = EXP 0x2 0xe0
0xfb7: V1486 = MUL V1475 0x100000000000000000000000000000000000000000000000000000000
0xfbb: V1487 = AND V1486 0xffffffff00000000000000000000000000000000000000000000000000000000
0xfbe: V1488 = 0x345d116f453f37af02368f0e2ecffe16a2ae3f99b089f4c00355c1dfd36c6263
0xfe1: LOG V1476 0x0 0x345d116f453f37af02368f0e2ecffe16a2ae3f99b089f4c00355c1dfd36c6263 V1455 V1487
---
Entry stack: [V12, 0x12a, V249, V253, S10, {0x12a, 0x8d3}, S8, S7, S6, S5, S4, S3, S2, V1447, 0x0]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V12, 0x12a, V249, V253, S10, {0x12a, 0x8d3}, S8, S7, S6, S5, S4, S3]

================================

Block 0xfe2
[0xfe2:0xfe2]
---
Predecessors: [0xf17, 0xf66]
Successors: [0xfe3]
---
0xfe2 JUMPDEST
---
0xfe2: JUMPDEST 
---
Entry stack: [V12, 0x12a, V249, V253, S7, {0x12a, 0x8d3}, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, V249, V253, S7, {0x12a, 0x8d3}, S5, S4, S3, S2, S1, S0]

================================

Block 0xfe3
[0xfe3:0xfed]
---
Predecessors: [0xfe2]
Successors: [0xef2]
---
0xfe3 JUMPDEST
0xfe4 PUSH1 0x1
0xfe6 SWAP1
0xfe7 SWAP2
0xfe8 ADD
0xfe9 SWAP1
0xfea PUSH2 0xef2
0xfed JUMP
---
0xfe3: JUMPDEST 
0xfe4: V1489 = 0x1
0xfe8: V1490 = ADD S1 0x1
0xfea: V1491 = 0xef2
0xfed: JUMP 0xef2
---
Entry stack: [V12, 0x12a, V249, V253, S7, {0x12a, 0x8d3}, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [V1490, S0]
Exit stack: [V12, 0x12a, V249, V253, S7, {0x12a, 0x8d3}, S5, S4, S3, S2, V1490, S0]

================================

Block 0xfee
[0xfee:0x1000]
---
Predecessors: [0xef2]
Successors: [0x1001]
---
0xfee JUMPDEST
0xfef PUSH2 0x3e8
0xff2 PUSH1 0x1
0xff4 PUSH1 0xa0
0xff6 PUSH1 0x2
0xff8 EXP
0xff9 SUB
0xffa ADDRESS
0xffb AND
0xffc BALANCE
0xffd PUSH2 0x3b6
0x1000 MUL
---
0xfee: JUMPDEST 
0xfef: V1492 = 0x3e8
0xff2: V1493 = 0x1
0xff4: V1494 = 0xa0
0xff6: V1495 = 0x2
0xff8: V1496 = EXP 0x2 0xa0
0xff9: V1497 = SUB 0x10000000000000000000000000000000000000000 0x1
0xffa: V1498 = ADDRESS
0xffb: V1499 = AND V1498 0xffffffffffffffffffffffffffffffffffffffff
0xffc: V1500 = BALANCE V1499
0xffd: V1501 = 0x3b6
0x1000: V1502 = MUL 0x3b6 V1500
---
Entry stack: [V12, 0x12a, V249, V253, S7, {0x12a, 0x8d3}, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x3e8, V1502]
Exit stack: [V12, 0x12a, V249, V253, S7, {0x12a, 0x8d3}, S5, S4, S3, S2, S1, S0, 0x3e8, V1502]

================================

Block 0x1001
[0x1001:0x1012]
---
Predecessors: [0xfee]
Successors: [0x1013, 0x1014]
---
0x1001 JUMPDEST
0x1002 DIV
0x1003 PUSH1 0xb
0x1005 DUP2
0x1006 SWAP1
0x1007 SSTORE
0x1008 PUSH1 0x7
0x100a SLOAD
0x100b SWAP1
0x100c DUP2
0x100d ISZERO
0x100e ISZERO
0x100f PUSH2 0x1014
0x1012 JUMPI
---
0x1001: JUMPDEST 
0x1002: V1503 = DIV V1502 0x3e8
0x1003: V1504 = 0xb
0x1007: S[0xb] = V1503
0x1008: V1505 = 0x7
0x100a: V1506 = S[0x7]
0x100d: V1507 = ISZERO V1506
0x100e: V1508 = ISZERO V1507
0x100f: V1509 = 0x1014
0x1012: JUMPI 0x1014 V1508
---
Entry stack: [V12, 0x12a, V249, V253, S9, {0x12a, 0x8d3}, S7, S6, S5, S4, S3, S2, 0x3e8, V1502]
Stack pops: 2
Stack additions: [V1506, V1503]
Exit stack: [V12, 0x12a, V249, V253, S9, {0x12a, 0x8d3}, S7, S6, S5, S4, S3, S2, V1506, V1503]

================================

Block 0x1013
[0x1013:0x1013]
---
Predecessors: [0x1001]
Successors: []
---
0x1013 INVALID
---
0x1013: INVALID 
---
Entry stack: [V12, 0x12a, V249, V253, S9, {0x12a, 0x8d3}, S7, S6, S5, S4, S3, S2, V1506, V1503]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, V249, V253, S9, {0x12a, 0x8d3}, S7, S6, S5, S4, S3, S2, V1506, V1503]

================================

Block 0x1014
[0x1014:0x102a]
---
Predecessors: [0x1001]
Successors: [0x102b]
---
0x1014 JUMPDEST
0x1015 DIV
0x1016 PUSH1 0xc
0x1018 SSTORE
0x1019 PUSH1 0xb
0x101b SLOAD
0x101c PUSH1 0x1
0x101e PUSH1 0xa0
0x1020 PUSH1 0x2
0x1022 EXP
0x1023 SUB
0x1024 ADDRESS
0x1025 AND
0x1026 BALANCE
0x1027 SUB
0x1028 PUSH1 0xd
0x102a SSTORE
---
0x1014: JUMPDEST 
0x1015: V1510 = DIV V1503 V1506
0x1016: V1511 = 0xc
0x1018: S[0xc] = V1510
0x1019: V1512 = 0xb
0x101b: V1513 = S[0xb]
0x101c: V1514 = 0x1
0x101e: V1515 = 0xa0
0x1020: V1516 = 0x2
0x1022: V1517 = EXP 0x2 0xa0
0x1023: V1518 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1024: V1519 = ADDRESS
0x1025: V1520 = AND V1519 0xffffffffffffffffffffffffffffffffffffffff
0x1026: V1521 = BALANCE V1520
0x1027: V1522 = SUB V1521 V1513
0x1028: V1523 = 0xd
0x102a: S[0xd] = V1522
---
Entry stack: [V12, 0x12a, V249, V253, S9, {0x12a, 0x8d3}, S7, S6, S5, S4, S3, S2, V1506, V1503]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x12a, V249, V253, S9, {0x12a, 0x8d3}, S7, S6, S5, S4, S3, S2]

================================

Block 0x102b
[0x102b:0x102b]
---
Predecessors: [0xe32, 0x1014]
Successors: [0x102c]
---
0x102b JUMPDEST
---
0x102b: JUMPDEST 
---
Entry stack: [V12, 0x12a, V249, V253, S7, {0x12a, 0x8d3}, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x12a, V249, V253, S7, {0x12a, 0x8d3}, S5, S4, S3, S2, S1, S0]

================================

Block 0x102c
[0x102c:0x1033]
---
Predecessors: [0x102b]
Successors: [0x12a, 0x8d3]
---
0x102c JUMPDEST
0x102d POP
0x102e POP
0x102f POP
0x1030 POP
0x1031 POP
0x1032 POP
0x1033 JUMP
---
0x102c: JUMPDEST 
0x1033: JUMP {0x12a, 0x8d3}
---
Entry stack: [V12, 0x12a, V249, V253, S7, {0x12a, 0x8d3}, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: []
Exit stack: [V12, 0x12a, V249, V253, S7]

================================

Block 0x1034
[0x1034:0x1041]
---
Predecessors: [0x473, 0xa62, 0xf47]
Successors: [0x8d3, 0x1042]
---
0x1034 JUMPDEST
0x1035 DUP2
0x1036 SLOAD
0x1037 DUP2
0x1038 DUP4
0x1039 SSTORE
0x103a DUP2
0x103b DUP2
0x103c ISZERO
0x103d GT
0x103e PUSH2 0x8d3
0x1041 JUMPI
---
0x1034: JUMPDEST 
0x1036: V1524 = S[S1]
0x1039: S[S1] = S0
0x103c: V1525 = ISZERO V1524
0x103d: V1526 = GT V1525 S0
0x103e: V1527 = 0x8d3
0x1041: JUMPI 0x8d3 V1526
---
Entry stack: [V12, 0x12a, V249, V253, S13, {0x12a, 0x8d3}, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x4a0, 0xa8b, 0xf58}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V1524]
Exit stack: [V12, 0x12a, V249, V253, S13, {0x12a, 0x8d3}, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x4a0, 0xa8b, 0xf58}, S1, S0, V1524]

================================

Block 0x1042
[0x1042:0x1057]
---
Predecessors: [0x1034]
Successors: [0x105e]
---
0x1042 PUSH1 0x0
0x1044 DUP4
0x1045 DUP2
0x1046 MSTORE
0x1047 PUSH1 0x20
0x1049 SWAP1
0x104a SHA3
0x104b PUSH2 0x8d3
0x104e SWAP2
0x104f DUP2
0x1050 ADD
0x1051 SWAP1
0x1052 DUP4
0x1053 ADD
0x1054 PUSH2 0x105e
0x1057 JUMP
---
0x1042: V1528 = 0x0
0x1046: M[0x0] = S2
0x1047: V1529 = 0x20
0x104a: V1530 = SHA3 0x0 0x20
0x104b: V1531 = 0x8d3
0x1050: V1532 = ADD V1530 V1524
0x1053: V1533 = ADD S1 V1530
0x1054: V1534 = 0x105e
0x1057: JUMP 0x105e
---
Entry stack: [V12, 0x12a, V249, V253, S14, {0x12a, 0x8d3}, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x4a0, 0xa8b, 0xf58}, S2, S1, V1524]
Stack pops: 3
Stack additions: [S2, S1, 0x8d3, V1532, V1533]
Exit stack: [V12, 0x12a, V249, V253, S14, {0x12a, 0x8d3}, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x4a0, 0xa8b, 0xf58}, S2, S1, 0x8d3, V1532, V1533]

================================

Block 0x1058
[0x1058:0x1058]
---
Predecessors: []
Successors: [0x1059]
---
0x1058 JUMPDEST
---
0x1058: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1059
[0x1059:0x105d]
---
Predecessors: [0x1058]
Successors: []
Has unresolved jump.
---
0x1059 JUMPDEST
0x105a POP
0x105b POP
0x105c POP
0x105d JUMP
---
0x1059: JUMPDEST 
0x105d: JUMP S3
---
Entry stack: []
Stack pops: 4
Stack additions: []
Exit stack: []

================================

Block 0x105e
[0x105e:0x1063]
---
Predecessors: [0x1042]
Successors: [0x1064]
---
0x105e JUMPDEST
0x105f PUSH2 0x107c
0x1062 SWAP2
0x1063 SWAP1
---
0x105e: JUMPDEST 
0x105f: V1535 = 0x107c
---
Entry stack: [V12, 0x12a, V249, V253, S16, {0x12a, 0x8d3}, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x4a0, 0xa8b, 0xf58}, S4, S3, 0x8d3, V1532, V1533]
Stack pops: 2
Stack additions: [0x107c, S1, S0]
Exit stack: [V12, 0x12a, V249, V253, S16, {0x12a, 0x8d3}, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x4a0, 0xa8b, 0xf58}, S4, S3, 0x8d3, 0x107c, V1532, V1533]

================================

Block 0x1064
[0x1064:0x106c]
---
Predecessors: [0x105e, 0x106d]
Successors: [0x106d, 0x1078]
---
0x1064 JUMPDEST
0x1065 DUP1
0x1066 DUP3
0x1067 GT
0x1068 ISZERO
0x1069 PUSH2 0x1078
0x106c JUMPI
---
0x1064: JUMPDEST 
0x1067: V1536 = GT V1532 S0
0x1068: V1537 = ISZERO V1536
0x1069: V1538 = 0x1078
0x106c: JUMPI 0x1078 V1537
---
Entry stack: [V12, 0x12a, V249, V253, S17, {0x12a, 0x8d3}, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x4a0, 0xa8b, 0xf58}, S5, S4, 0x8d3, 0x107c, V1532, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x12a, V249, V253, S17, {0x12a, 0x8d3}, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x4a0, 0xa8b, 0xf58}, S5, S4, 0x8d3, 0x107c, V1532, S0]

================================

Block 0x106d
[0x106d:0x1077]
---
Predecessors: [0x1064]
Successors: [0x1064]
---
0x106d PUSH1 0x0
0x106f DUP2
0x1070 SSTORE
0x1071 PUSH1 0x1
0x1073 ADD
0x1074 PUSH2 0x1064
0x1077 JUMP
---
0x106d: V1539 = 0x0
0x1070: S[S0] = 0x0
0x1071: V1540 = 0x1
0x1073: V1541 = ADD 0x1 S0
0x1074: V1542 = 0x1064
0x1077: JUMP 0x1064
---
Entry stack: [V12, 0x12a, V249, V253, S17, {0x12a, 0x8d3}, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x4a0, 0xa8b, 0xf58}, S5, S4, 0x8d3, 0x107c, V1532, S0]
Stack pops: 1
Stack additions: [V1541]
Exit stack: [V12, 0x12a, V249, V253, S17, {0x12a, 0x8d3}, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x4a0, 0xa8b, 0xf58}, S5, S4, 0x8d3, 0x107c, V1532, V1541]

================================

Block 0x1078
[0x1078:0x107b]
---
Predecessors: [0x1064]
Successors: [0x107c]
---
0x1078 JUMPDEST
0x1079 POP
0x107a SWAP1
0x107b JUMP
---
0x1078: JUMPDEST 
0x107b: JUMP 0x107c
---
Entry stack: [V12, 0x12a, V249, V253, S17, {0x12a, 0x8d3}, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x4a0, 0xa8b, 0xf58}, S5, S4, 0x8d3, 0x107c, V1532, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V12, 0x12a, V249, V253, S17, {0x12a, 0x8d3}, S15, S14, S13, S12, S11, S10, S9, S8, S7, {0x4a0, 0xa8b, 0xf58}, S5, S4, 0x8d3, V1532]

================================

Block 0x107c
[0x107c:0x107e]
---
Predecessors: [0x1078]
Successors: [0x8d3]
---
0x107c JUMPDEST
0x107d SWAP1
0x107e JUMP
---
0x107c: JUMPDEST 
0x107e: JUMP 0x8d3
---
Entry stack: [V12, 0x12a, V249, V253, S15, {0x12a, 0x8d3}, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x4a0, 0xa8b, 0xf58}, S3, S2, 0x8d3, V1532]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x12a, V249, V253, S15, {0x12a, 0x8d3}, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x4a0, 0xa8b, 0xf58}, S3, S2, V1532]

================================

Block 0x107f
[0x107f:0x10b3]
---
Predecessors: []
Successors: []
---
0x107f STOP
0x1080 LOG1
0x1081 PUSH6 0x627a7a723058
0x1088 SHA3
0x1089 MISSING 0xef
0x108a MISSING 0xae
0x108b GT
0x108c PUSH5 0xf7be688fd0
0x1092 MISSING 0x28
0x1093 COINBASE
0x1094 MISSING 0x26
0x1095 PUSH30 0x943a5f1ad85d02300b3dd8a6af7672c77d5f570029
---
0x107f: STOP 
0x1080: LOG S0 S1 S2
0x1081: V1543 = 0x627a7a723058
0x1088: V1544 = SHA3 0x627a7a723058 S3
0x1089: MISSING 0xef
0x108a: MISSING 0xae
0x108b: V1545 = GT S0 S1
0x108c: V1546 = 0xf7be688fd0
0x1092: MISSING 0x28
0x1093: V1547 = COINBASE
0x1094: MISSING 0x26
0x1095: V1548 = 0x943a5f1ad85d02300b3dd8a6af7672c77d5f570029
---
Entry stack: []
Stack pops: 0
Stack additions: [V1544, 0xf7be688fd0, V1545, V1547, 0x943a5f1ad85d02300b3dd8a6af7672c77d5f570029]
Exit stack: []

================================

Function 0:
Public function signature: 0x21e0f228
Entry block: 0x12c
Exit block: 0x13c
Body: 0x12c, 0x133, 0x134, 0x13c, 0x417

Function 1:
Public function signature: 0x28180023
Entry block: 0x159
Exit block: 0x169
Body: 0x159, 0x160, 0x161, 0x169, 0x423

Function 2:
Public function signature: 0x36b09474
Entry block: 0x17b
Exit block: 0x18b
Body: 0x17b, 0x182, 0x183, 0x18b, 0x429

Function 3:
Public function signature: 0x3947050f
Entry block: 0x19f
Exit block: 0x12a
Body: 0x12a, 0x19f, 0x43a, 0x449, 0x44d, 0x45c, 0x460, 0x468

Function 4:
Public function signature: 0x3a3bdf56
Entry block: 0x1a9
Exit block: 0x12a
Body: 0x12a, 0x1a9, 0x1b0, 0x1b1, 0x50f, 0x510, 0x514, 0x52e, 0x532, 0x547, 0x54b, 0x557, 0x58e

Function 5:
Public function signature: 0x3ccfd60b
Entry block: 0x1c7
Exit block: 0x618
Body: 0x128, 0x12a, 0x1c7, 0x1ce, 0x1cf, 0x59a, 0x5b1, 0x5b5, 0x5ca, 0x5ce, 0x5d6, 0x5dd, 0x5e2, 0x5e8, 0x618

Function 6:
Public function signature: 0x45f472fc
Entry block: 0x1d9
Exit block: 0x169
Body: 0x169, 0x1d9, 0x1e0, 0x1e1, 0x622

Function 7:
Public function signature: 0x5c49d96c
Entry block: 0x1fb
Exit block: 0x169
Body: 0x169, 0x1fb, 0x202, 0x203, 0x628

Function 8:
Public function signature: 0x5c76ca2d
Entry block: 0x21d
Exit block: 0x18b
Body: 0x18b, 0x21d, 0x224, 0x225

Function 9:
Public function signature: 0x6494d477
Entry block: 0x241
Exit block: 0x169
Body: 0x169, 0x241, 0x248, 0x249, 0x6ea

Function 10:
Public function signature: 0x66fa2be9
Entry block: 0x263
Exit block: 0x283
Body: 0x263, 0x26a, 0x26b, 0x283, 0x6f0, 0x70a, 0x70b, 0x719

Function 11:
Public function signature: 0x70740ac9
Entry block: 0x29f
Exit block: 0x12a
Body: 0x128, 0x12a, 0x29f, 0x2a6, 0x2a7, 0x732, 0x747, 0x74b, 0x76e, 0x772, 0x7b2

Function 12:
Public function signature: 0x719ce73e
Entry block: 0x2b1
Exit block: 0x169
Body: 0x169, 0x2b1, 0x2b8, 0x2b9, 0x7ba

Function 13:
Public function signature: 0x7d2026cd
Entry block: 0x2d3
Exit block: 0x823
Body: 0x12a, 0x2d3, 0x2da, 0x2db, 0x7c0, 0x7de, 0x7e2, 0x7f7, 0x7fb, 0x808, 0x80c, 0x817, 0x823, 0x824, 0x832, 0x864, 0x8a3, 0x8c6, 0x8c7, 0x8c8

Function 14:
Public function signature: 0x825c3e36
Entry block: 0x2e5
Exit block: 0x1013
Body: 0x12a, 0x2e5, 0x2ec, 0x2ed, 0x8dc, 0x8f6, 0x8fa, 0x906, 0x915, 0x91b, 0x91f, 0x938, 0x93c, 0x946, 0x950, 0x954, 0x989, 0xe32, 0xeee, 0xef2, 0xefc, 0xf08, 0xf09, 0xf17, 0xf47, 0xf58, 0xf66, 0xfe2, 0xfe3, 0xfee, 0x1001, 0x1013, 0x1014, 0x102b, 0x102c

Function 15:
Public function signature: 0x88279320
Entry block: 0x300
Exit block: 0x169
Body: 0x169, 0x300, 0x307, 0x308, 0x996

Function 16:
Public function signature: 0xa2fb1175
Entry block: 0x322
Exit block: 0x283
Body: 0x283, 0x322, 0x329, 0x32a, 0x99c, 0x9a9, 0x9aa, 0x9b8

Function 17:
Public function signature: 0xa8492f46
Entry block: 0x351
Exit block: 0x12a
Body: 0x12a, 0x351, 0x9ce, 0x9db, 0x9df, 0x9ee, 0x9f2, 0x9f6, 0xa03, 0xa10, 0xa11, 0xa3a, 0xa3b, 0xa55, 0xa59, 0xa5a, 0xa62, 0xa8b, 0xa99, 0xac9, 0xb0b, 0xb0c

Function 18:
Public function signature: 0xb94bc7fe
Entry block: 0x368
Exit block: 0x36f
Body: 0x18b, 0x368, 0x36f, 0x370

Function 19:
Public function signature: 0xd5b2a01a
Entry block: 0x395
Exit block: 0x169
Body: 0x169, 0x395, 0x39c, 0x39d, 0xbb3

Function 20:
Public function signature: 0xd6779b01
Entry block: 0x3b7
Exit block: 0x18b
Body: 0x18b, 0x3b7, 0x3be, 0x3bf, 0xbb9

Function 21:
Public function signature: 0xf2fde38b
Entry block: 0x3e7
Exit block: 0x12a
Body: 0x12a, 0x3e7, 0x3ee, 0x3ef, 0xbce, 0xbe5, 0xbe9, 0xc12, 0xc13

Function 22:
Public function signature: 0xfc0e74d1
Entry block: 0x405
Exit block: 0x12a
Body: 0x128, 0x12a, 0x405, 0x40c, 0x40d, 0xc16, 0xc2d, 0xc31, 0xc46, 0xc4a, 0xc52, 0xc59, 0xc5e, 0xc64

Function 23:
Public fallback function
Entry block: 0x117
Exit block: 0x123
Body: 0x117, 0x11e, 0x11f, 0x123

Function 24:
Private function
Entry block: 0xd5b
Exit block: 0xe2a
Body: 0xd5b, 0xd61, 0xd6e, 0xd71, 0xde0, 0xe1e, 0xe26, 0xe2a

Function 25:
Private function
Entry block: 0xb10
Exit block: 0xbaa
Body: 0xb10, 0xb4a, 0xb52, 0xb69, 0xb78, 0xb8b, 0xb93, 0xb9d, 0xba5, 0xbaa

Function 26:
Private function
Entry block: 0x62e
Exit block: 0x6e5
Body: 0x62e, 0x64a, 0x652, 0x65f, 0x666, 0x66e, 0x674, 0x67a, 0x681, 0x694, 0x6a2, 0x6cc, 0x6cf, 0x6d7, 0x6df, 0x6e4, 0x6e5

Function 27:
Private function
Entry block: 0xc76
Exit block: 0xd55
Body: 0xc76, 0xce3, 0xd55

Function 28:
Private function
Entry block: 0x1034
Exit block: 0x8d7
Body: 0x8d3, 0x8d4, 0x8d5, 0x8d6, 0x8d7, 0x1034, 0x1042, 0x105e, 0x1064, 0x106d, 0x1078, 0x107c

