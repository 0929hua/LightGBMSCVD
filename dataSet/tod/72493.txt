Block 0x0
[0x0:0x9]
---
Predecessors: []
Successors: [0xa, 0x1d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH1 0x1d
0x9 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x1d
0x9: JUMPI 0x1d V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa
[0xa:0x1c]
---
Predecessors: [0x0]
Successors: [0x1d, 0x6c]
---
0xa PUSH1 0xe0
0xc PUSH1 0x2
0xe EXP
0xf PUSH1 0x0
0x11 CALLDATALOAD
0x12 DIV
0x13 PUSH4 0x41c0e1b5
0x18 DUP2
0x19 EQ
0x1a PUSH1 0x6c
0x1c JUMPI
---
0xa: V5 = 0xe0
0xc: V6 = 0x2
0xe: V7 = EXP 0x2 0xe0
0xf: V8 = 0x0
0x11: V9 = CALLDATALOAD 0x0
0x12: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x13: V11 = 0x41c0e1b5
0x19: V12 = EQ V10 0x41c0e1b5
0x1a: V13 = 0x6c
0x1c: JUMPI 0x6c V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1d
[0x1d:0x6b]
---
Predecessors: [0x0, 0xa]
Successors: [0x92]
---
0x1d JUMPDEST
0x1e PUSH1 0x0
0x20 DUP1
0x21 SLOAD
0x22 PUSH1 0x92
0x24 SWAP2
0x25 PUSH1 0x2
0x27 CALLVALUE
0x28 SWAP1
0x29 DUP2
0x2a DIV
0x2b SWAP3
0x2c PUSH1 0x1
0x2e PUSH1 0xa0
0x30 PUSH1 0x2
0x32 EXP
0x33 SUB
0x34 AND
0x35 SWAP2
0x36 SWAP1
0x37 DUP4
0x38 SWAP1
0x39 SUB
0x3a PUSH1 0x60
0x3c DUP3
0x3d DUP2
0x3e DUP2
0x3f DUP2
0x40 DUP6
0x41 DUP9
0x42 DUP4
0x43 CALL
0x44 POP
0x45 POP
0x46 PUSH1 0x1
0x48 SLOAD
0x49 PUSH1 0x40
0x4b MLOAD
0x4c PUSH1 0x1
0x4e PUSH1 0xa0
0x50 PUSH1 0x2
0x52 EXP
0x53 SUB
0x54 SWAP2
0x55 SWAP1
0x56 SWAP2
0x57 AND
0x58 SWAP4
0x59 POP
0x5a DUP5
0x5b SWAP2
0x5c POP
0x5d DUP3
0x5e DUP2
0x5f DUP2
0x60 DUP2
0x61 DUP6
0x62 DUP9
0x63 DUP4
0x64 CALL
0x65 POP
0x66 POP
0x67 POP
0x68 POP
0x69 POP
0x6a POP
0x6b JUMP
---
0x1d: JUMPDEST 
0x1e: V14 = 0x0
0x21: V15 = S[0x0]
0x22: V16 = 0x92
0x25: V17 = 0x2
0x27: V18 = CALLVALUE
0x2a: V19 = DIV V18 0x2
0x2c: V20 = 0x1
0x2e: V21 = 0xa0
0x30: V22 = 0x2
0x32: V23 = EXP 0x2 0xa0
0x33: V24 = SUB 0x10000000000000000000000000000000000000000 0x1
0x34: V25 = AND 0xffffffffffffffffffffffffffffffffffffffff V15
0x39: V26 = SUB V18 V19
0x3a: V27 = 0x60
0x43: V28 = CALL 0x0 V25 V26 0x60 0x0 0x60 0x0
0x46: V29 = 0x1
0x48: V30 = S[0x1]
0x49: V31 = 0x40
0x4b: V32 = M[0x40]
0x4c: V33 = 0x1
0x4e: V34 = 0xa0
0x50: V35 = 0x2
0x52: V36 = EXP 0x2 0xa0
0x53: V37 = SUB 0x10000000000000000000000000000000000000000 0x1
0x57: V38 = AND 0xffffffffffffffffffffffffffffffffffffffff V30
0x64: V39 = CALL 0x0 V38 V19 V32 0x0 V32 0x0
0x6b: JUMP 0x92
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x6c
[0x6c:0x84]
---
Predecessors: [0xa]
Successors: [0x85, 0x94]
---
0x6c JUMPDEST
0x6d PUSH1 0x92
0x6f PUSH1 0x0
0x71 SLOAD
0x72 CALLER
0x73 PUSH1 0x1
0x75 PUSH1 0xa0
0x77 PUSH1 0x2
0x79 EXP
0x7a SUB
0x7b SWAP1
0x7c DUP2
0x7d AND
0x7e SWAP2
0x7f AND
0x80 EQ
0x81 ISZERO
0x82 PUSH1 0x94
0x84 JUMPI
---
0x6c: JUMPDEST 
0x6d: V40 = 0x92
0x6f: V41 = 0x0
0x71: V42 = S[0x0]
0x72: V43 = CALLER
0x73: V44 = 0x1
0x75: V45 = 0xa0
0x77: V46 = 0x2
0x79: V47 = EXP 0x2 0xa0
0x7a: V48 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7d: V49 = AND 0xffffffffffffffffffffffffffffffffffffffff V43
0x7f: V50 = AND V42 0xffffffffffffffffffffffffffffffffffffffff
0x80: V51 = EQ V50 V49
0x81: V52 = ISZERO V51
0x82: V53 = 0x94
0x84: JUMPI 0x94 V52
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x92]
Exit stack: [V10, 0x92]

================================

Block 0x85
[0x85:0x91]
---
Predecessors: [0x6c]
Successors: []
---
0x85 PUSH1 0x0
0x87 SLOAD
0x88 PUSH1 0x1
0x8a PUSH1 0xa0
0x8c PUSH1 0x2
0x8e EXP
0x8f SUB
0x90 AND
0x91 SELFDESTRUCT
---
0x85: V54 = 0x0
0x87: V55 = S[0x0]
0x88: V56 = 0x1
0x8a: V57 = 0xa0
0x8c: V58 = 0x2
0x8e: V59 = EXP 0x2 0xa0
0x8f: V60 = SUB 0x10000000000000000000000000000000000000000 0x1
0x90: V61 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0x91: SELFDESTRUCT V61
---
Entry stack: [V10, 0x92]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x92]

================================

Block 0x92
[0x92:0x93]
---
Predecessors: [0x1d, 0xb9]
Successors: []
---
0x92 JUMPDEST
0x93 STOP
---
0x92: JUMPDEST 
0x93: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x94
[0x94:0xab]
---
Predecessors: [0x6c]
Successors: [0xac, 0xb9]
---
0x94 JUMPDEST
0x95 PUSH1 0x1
0x97 SLOAD
0x98 PUSH1 0x1
0x9a PUSH1 0xa0
0x9c PUSH1 0x2
0x9e EXP
0x9f SUB
0xa0 SWAP1
0xa1 DUP2
0xa2 AND
0xa3 CALLER
0xa4 SWAP1
0xa5 SWAP2
0xa6 AND
0xa7 EQ
0xa8 ISZERO
0xa9 PUSH1 0xb9
0xab JUMPI
---
0x94: JUMPDEST 
0x95: V62 = 0x1
0x97: V63 = S[0x1]
0x98: V64 = 0x1
0x9a: V65 = 0xa0
0x9c: V66 = 0x2
0x9e: V67 = EXP 0x2 0xa0
0x9f: V68 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa2: V69 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0xa3: V70 = CALLER
0xa6: V71 = AND 0xffffffffffffffffffffffffffffffffffffffff V70
0xa7: V72 = EQ V71 V69
0xa8: V73 = ISZERO V72
0xa9: V74 = 0xb9
0xab: JUMPI 0xb9 V73
---
Entry stack: [V10, 0x92]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x92]

================================

Block 0xac
[0xac:0xb8]
---
Predecessors: [0x94]
Successors: []
---
0xac PUSH1 0x1
0xae SLOAD
0xaf PUSH1 0x1
0xb1 PUSH1 0xa0
0xb3 PUSH1 0x2
0xb5 EXP
0xb6 SUB
0xb7 AND
0xb8 SELFDESTRUCT
---
0xac: V75 = 0x1
0xae: V76 = S[0x1]
0xaf: V77 = 0x1
0xb1: V78 = 0xa0
0xb3: V79 = 0x2
0xb5: V80 = EXP 0x2 0xa0
0xb6: V81 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb7: V82 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0xb8: SELFDESTRUCT V82
---
Entry stack: [V10, 0x92]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x92]

================================

Block 0xb9
[0xb9:0xba]
---
Predecessors: [0x94]
Successors: [0x92]
---
0xb9 JUMPDEST
0xba JUMP
---
0xb9: JUMPDEST 
0xba: JUMP 0x92
---
Entry stack: [V10, 0x92]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Function 0:
Public function signature: 0x41c0e1b5
Entry block: 0x6c
Exit block: 0x92
Body: 0x6c, 0x85, 0x92, 0x94, 0xac, 0xb9

Function 1:
Public fallback function
Entry block: 0x1d
Exit block: 0x92
Body: 0x1d, 0x92

