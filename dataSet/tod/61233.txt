Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x7f]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x7f
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x7f
0xc: JUMPI 0x7f V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x81]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x59d2922
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x81
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x59d2922
0x22: V15 = EQ V13 0x59d2922
0x23: V16 = 0x81
0x26: JUMPI 0x81 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0xa5]
---
0x27 DUP1
0x28 PUSH4 0x18f8cf1d
0x2d EQ
0x2e PUSH2 0xa5
0x31 JUMPI
---
0x28: V17 = 0x18f8cf1d
0x2d: V18 = EQ 0x18f8cf1d V13
0x2e: V19 = 0xa5
0x31: JUMPI 0xa5 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0xad]
---
0x32 DUP1
0x33 PUSH4 0x3ccfd60b
0x38 EQ
0x39 PUSH2 0xad
0x3c JUMPI
---
0x33: V20 = 0x3ccfd60b
0x38: V21 = EQ 0x3ccfd60b V13
0x39: V22 = 0xad
0x3c: JUMPI 0xad V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0xc2]
---
0x3d DUP1
0x3e PUSH4 0x5c644ae8
0x43 EQ
0x44 PUSH2 0xc2
0x47 JUMPI
---
0x3e: V23 = 0x5c644ae8
0x43: V24 = EQ 0x5c644ae8 V13
0x44: V25 = 0xc2
0x47: JUMPI 0xc2 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0xd9]
---
0x48 DUP1
0x49 PUSH4 0x82fcb560
0x4e EQ
0x4f PUSH2 0xd9
0x52 JUMPI
---
0x49: V26 = 0x82fcb560
0x4e: V27 = EQ 0x82fcb560 V13
0x4f: V28 = 0xd9
0x52: JUMPI 0xd9 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x103]
---
0x53 DUP1
0x54 PUSH4 0xbf6001c3
0x59 EQ
0x5a PUSH2 0x103
0x5d JUMPI
---
0x54: V29 = 0xbf6001c3
0x59: V30 = EQ 0xbf6001c3 V13
0x5a: V31 = 0x103
0x5d: JUMPI 0x103 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x12d]
---
0x5e DUP1
0x5f PUSH4 0xc1e7ce6b
0x64 EQ
0x65 PUSH2 0x12d
0x68 JUMPI
---
0x5f: V32 = 0xc1e7ce6b
0x64: V33 = EQ 0xc1e7ce6b V13
0x65: V34 = 0x12d
0x68: JUMPI 0x12d V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x144]
---
0x69 DUP1
0x6a PUSH4 0xd12d7b46
0x6f EQ
0x70 PUSH2 0x144
0x73 JUMPI
---
0x6a: V35 = 0xd12d7b46
0x6f: V36 = EQ 0xd12d7b46 V13
0x70: V37 = 0x144
0x73: JUMPI 0x144 V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x15f]
---
0x74 DUP1
0x75 PUSH4 0xe2d4306b
0x7a EQ
0x7b PUSH2 0x15f
0x7e JUMPI
---
0x75: V38 = 0xe2d4306b
0x7a: V39 = EQ 0xe2d4306b V13
0x7b: V40 = 0x15f
0x7e: JUMPI 0x15f V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x80]
---
Predecessors: [0x0, 0x74, 0x212, 0x2d0, 0x2f2, 0x365, 0x425, 0x86f]
Successors: []
---
0x7f JUMPDEST
0x80 STOP
---
0x7f: JUMPDEST 
0x80: STOP 
---
Entry stack: [V13, 0x7f, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x81
[0x81:0xa4]
---
Predecessors: [0xd]
Successors: [0x183]
---
0x81 JUMPDEST
0x82 PUSH2 0x7f
0x85 PUSH1 0x1
0x87 PUSH1 0xa0
0x89 PUSH1 0x2
0x8b EXP
0x8c SUB
0x8d PUSH1 0x4
0x8f CALLDATALOAD
0x90 DUP2
0x91 AND
0x92 SWAP1
0x93 PUSH1 0x24
0x95 CALLDATALOAD
0x96 SWAP1
0x97 PUSH1 0x44
0x99 CALLDATALOAD
0x9a DUP2
0x9b AND
0x9c SWAP1
0x9d PUSH1 0x64
0x9f CALLDATALOAD
0xa0 AND
0xa1 PUSH2 0x183
0xa4 JUMP
---
0x81: JUMPDEST 
0x82: V41 = 0x7f
0x85: V42 = 0x1
0x87: V43 = 0xa0
0x89: V44 = 0x2
0x8b: V45 = EXP 0x2 0xa0
0x8c: V46 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8d: V47 = 0x4
0x8f: V48 = CALLDATALOAD 0x4
0x91: V49 = AND 0xffffffffffffffffffffffffffffffffffffffff V48
0x93: V50 = 0x24
0x95: V51 = CALLDATALOAD 0x24
0x97: V52 = 0x44
0x99: V53 = CALLDATALOAD 0x44
0x9b: V54 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0x9d: V55 = 0x64
0x9f: V56 = CALLDATALOAD 0x64
0xa0: V57 = AND V56 0xffffffffffffffffffffffffffffffffffffffff
0xa1: V58 = 0x183
0xa4: JUMP 0x183
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x7f, V49, V51, V54, V57]
Exit stack: [V13, 0x7f, V49, V51, V54, V57]

================================

Block 0xa5
[0xa5:0xac]
---
Predecessors: [0x27]
Successors: [0x21b]
---
0xa5 JUMPDEST
0xa6 PUSH2 0x7f
0xa9 PUSH2 0x21b
0xac JUMP
---
0xa5: JUMPDEST 
0xa6: V59 = 0x7f
0xa9: V60 = 0x21b
0xac: JUMP 0x21b
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x7f]
Exit stack: [V13, 0x7f]

================================

Block 0xad
[0xad:0xb4]
---
Predecessors: [0x32]
Successors: [0xb5, 0xb9]
---
0xad JUMPDEST
0xae CALLVALUE
0xaf DUP1
0xb0 ISZERO
0xb1 PUSH2 0xb9
0xb4 JUMPI
---
0xad: JUMPDEST 
0xae: V61 = CALLVALUE
0xb0: V62 = ISZERO V61
0xb1: V63 = 0xb9
0xb4: JUMPI 0xb9 V62
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V61]
Exit stack: [V13, V61]

================================

Block 0xb5
[0xb5:0xb8]
---
Predecessors: [0xad]
Successors: []
---
0xb5 PUSH1 0x0
0xb7 DUP1
0xb8 REVERT
---
0xb5: V64 = 0x0
0xb8: REVERT 0x0 0x0
---
Entry stack: [V13, V61]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V61]

================================

Block 0xb9
[0xb9:0xc1]
---
Predecessors: [0xad]
Successors: [0x2fc]
---
0xb9 JUMPDEST
0xba POP
0xbb PUSH2 0x7f
0xbe PUSH2 0x2fc
0xc1 JUMP
---
0xb9: JUMPDEST 
0xbb: V65 = 0x7f
0xbe: V66 = 0x2fc
0xc1: JUMP 0x2fc
---
Entry stack: [V13, V61]
Stack pops: 1
Stack additions: [0x7f]
Exit stack: [V13, 0x7f]

================================

Block 0xc2
[0xc2:0xd8]
---
Predecessors: [0x3d]
Successors: [0x368]
---
0xc2 JUMPDEST
0xc3 PUSH2 0x7f
0xc6 PUSH1 0x1
0xc8 PUSH1 0xa0
0xca PUSH1 0x2
0xcc EXP
0xcd SUB
0xce PUSH1 0x4
0xd0 CALLDATALOAD
0xd1 AND
0xd2 PUSH1 0x24
0xd4 CALLDATALOAD
0xd5 PUSH2 0x368
0xd8 JUMP
---
0xc2: JUMPDEST 
0xc3: V67 = 0x7f
0xc6: V68 = 0x1
0xc8: V69 = 0xa0
0xca: V70 = 0x2
0xcc: V71 = EXP 0x2 0xa0
0xcd: V72 = SUB 0x10000000000000000000000000000000000000000 0x1
0xce: V73 = 0x4
0xd0: V74 = CALLDATALOAD 0x4
0xd1: V75 = AND V74 0xffffffffffffffffffffffffffffffffffffffff
0xd2: V76 = 0x24
0xd4: V77 = CALLDATALOAD 0x24
0xd5: V78 = 0x368
0xd8: JUMP 0x368
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x7f, V75, V77]
Exit stack: [V13, 0x7f, V75, V77]

================================

Block 0xd9
[0xd9:0xe0]
---
Predecessors: [0x48]
Successors: [0xe1, 0xe5]
---
0xd9 JUMPDEST
0xda CALLVALUE
0xdb DUP1
0xdc ISZERO
0xdd PUSH2 0xe5
0xe0 JUMPI
---
0xd9: JUMPDEST 
0xda: V79 = CALLVALUE
0xdc: V80 = ISZERO V79
0xdd: V81 = 0xe5
0xe0: JUMPI 0xe5 V80
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V79]
Exit stack: [V13, V79]

================================

Block 0xe1
[0xe1:0xe4]
---
Predecessors: [0xd9]
Successors: []
---
0xe1 PUSH1 0x0
0xe3 DUP1
0xe4 REVERT
---
0xe1: V82 = 0x0
0xe4: REVERT 0x0 0x0
---
Entry stack: [V13, V79]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V79]

================================

Block 0xe5
[0xe5:0x102]
---
Predecessors: [0xd9]
Successors: [0x42d]
---
0xe5 JUMPDEST
0xe6 POP
0xe7 PUSH2 0x7f
0xea PUSH1 0x1
0xec PUSH1 0xa0
0xee PUSH1 0x2
0xf0 EXP
0xf1 SUB
0xf2 PUSH1 0x4
0xf4 CALLDATALOAD
0xf5 AND
0xf6 PUSH1 0x24
0xf8 CALLDATALOAD
0xf9 PUSH1 0x44
0xfb CALLDATALOAD
0xfc PUSH1 0x64
0xfe CALLDATALOAD
0xff PUSH2 0x42d
0x102 JUMP
---
0xe5: JUMPDEST 
0xe7: V83 = 0x7f
0xea: V84 = 0x1
0xec: V85 = 0xa0
0xee: V86 = 0x2
0xf0: V87 = EXP 0x2 0xa0
0xf1: V88 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf2: V89 = 0x4
0xf4: V90 = CALLDATALOAD 0x4
0xf5: V91 = AND V90 0xffffffffffffffffffffffffffffffffffffffff
0xf6: V92 = 0x24
0xf8: V93 = CALLDATALOAD 0x24
0xf9: V94 = 0x44
0xfb: V95 = CALLDATALOAD 0x44
0xfc: V96 = 0x64
0xfe: V97 = CALLDATALOAD 0x64
0xff: V98 = 0x42d
0x102: JUMP 0x42d
---
Entry stack: [V13, V79]
Stack pops: 1
Stack additions: [0x7f, V91, V93, V95, V97]
Exit stack: [V13, 0x7f, V91, V93, V95, V97]

================================

Block 0x103
[0x103:0x10a]
---
Predecessors: [0x53]
Successors: [0x10b, 0x10f]
---
0x103 JUMPDEST
0x104 CALLVALUE
0x105 DUP1
0x106 ISZERO
0x107 PUSH2 0x10f
0x10a JUMPI
---
0x103: JUMPDEST 
0x104: V99 = CALLVALUE
0x106: V100 = ISZERO V99
0x107: V101 = 0x10f
0x10a: JUMPI 0x10f V100
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V99]
Exit stack: [V13, V99]

================================

Block 0x10b
[0x10b:0x10e]
---
Predecessors: [0x103]
Successors: []
---
0x10b PUSH1 0x0
0x10d DUP1
0x10e REVERT
---
0x10b: V102 = 0x0
0x10e: REVERT 0x0 0x0
---
Entry stack: [V13, V99]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V99]

================================

Block 0x10f
[0x10f:0x12c]
---
Predecessors: [0x103]
Successors: [0x5cb]
---
0x10f JUMPDEST
0x110 POP
0x111 PUSH2 0x7f
0x114 PUSH1 0x1
0x116 PUSH1 0xa0
0x118 PUSH1 0x2
0x11a EXP
0x11b SUB
0x11c PUSH1 0x4
0x11e CALLDATALOAD
0x11f AND
0x120 PUSH1 0x24
0x122 CALLDATALOAD
0x123 PUSH1 0x44
0x125 CALLDATALOAD
0x126 PUSH1 0x64
0x128 CALLDATALOAD
0x129 PUSH2 0x5cb
0x12c JUMP
---
0x10f: JUMPDEST 
0x111: V103 = 0x7f
0x114: V104 = 0x1
0x116: V105 = 0xa0
0x118: V106 = 0x2
0x11a: V107 = EXP 0x2 0xa0
0x11b: V108 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11c: V109 = 0x4
0x11e: V110 = CALLDATALOAD 0x4
0x11f: V111 = AND V110 0xffffffffffffffffffffffffffffffffffffffff
0x120: V112 = 0x24
0x122: V113 = CALLDATALOAD 0x24
0x123: V114 = 0x44
0x125: V115 = CALLDATALOAD 0x44
0x126: V116 = 0x64
0x128: V117 = CALLDATALOAD 0x64
0x129: V118 = 0x5cb
0x12c: JUMP 0x5cb
---
Entry stack: [V13, V99]
Stack pops: 1
Stack additions: [0x7f, V111, V113, V115, V117]
Exit stack: [V13, 0x7f, V111, V113, V115, V117]

================================

Block 0x12d
[0x12d:0x143]
---
Predecessors: [0x5e]
Successors: [0x748]
---
0x12d JUMPDEST
0x12e PUSH2 0x7f
0x131 PUSH1 0x1
0x133 PUSH1 0xa0
0x135 PUSH1 0x2
0x137 EXP
0x138 SUB
0x139 PUSH1 0x4
0x13b CALLDATALOAD
0x13c AND
0x13d PUSH1 0x24
0x13f CALLDATALOAD
0x140 PUSH2 0x748
0x143 JUMP
---
0x12d: JUMPDEST 
0x12e: V119 = 0x7f
0x131: V120 = 0x1
0x133: V121 = 0xa0
0x135: V122 = 0x2
0x137: V123 = EXP 0x2 0xa0
0x138: V124 = SUB 0x10000000000000000000000000000000000000000 0x1
0x139: V125 = 0x4
0x13b: V126 = CALLDATALOAD 0x4
0x13c: V127 = AND V126 0xffffffffffffffffffffffffffffffffffffffff
0x13d: V128 = 0x24
0x13f: V129 = CALLDATALOAD 0x24
0x140: V130 = 0x748
0x143: JUMP 0x748
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x7f, V127, V129]
Exit stack: [V13, 0x7f, V127, V129]

================================

Block 0x144
[0x144:0x14b]
---
Predecessors: [0x69]
Successors: [0x14c, 0x150]
---
0x144 JUMPDEST
0x145 CALLVALUE
0x146 DUP1
0x147 ISZERO
0x148 PUSH2 0x150
0x14b JUMPI
---
0x144: JUMPDEST 
0x145: V131 = CALLVALUE
0x147: V132 = ISZERO V131
0x148: V133 = 0x150
0x14b: JUMPI 0x150 V132
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V131]
Exit stack: [V13, V131]

================================

Block 0x14c
[0x14c:0x14f]
---
Predecessors: [0x144]
Successors: []
---
0x14c PUSH1 0x0
0x14e DUP1
0x14f REVERT
---
0x14c: V134 = 0x0
0x14f: REVERT 0x0 0x0
---
Entry stack: [V13, V131]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V131]

================================

Block 0x150
[0x150:0x15e]
---
Predecessors: [0x144]
Successors: [0x791]
---
0x150 JUMPDEST
0x151 POP
0x152 PUSH2 0x7f
0x155 PUSH1 0x4
0x157 CALLDATALOAD
0x158 PUSH1 0x24
0x15a CALLDATALOAD
0x15b PUSH2 0x791
0x15e JUMP
---
0x150: JUMPDEST 
0x152: V135 = 0x7f
0x155: V136 = 0x4
0x157: V137 = CALLDATALOAD 0x4
0x158: V138 = 0x24
0x15a: V139 = CALLDATALOAD 0x24
0x15b: V140 = 0x791
0x15e: JUMP 0x791
---
Entry stack: [V13, V131]
Stack pops: 1
Stack additions: [0x7f, V137, V139]
Exit stack: [V13, 0x7f, V137, V139]

================================

Block 0x15f
[0x15f:0x182]
---
Predecessors: [0x74]
Successors: [0x874]
---
0x15f JUMPDEST
0x160 PUSH2 0x7f
0x163 PUSH1 0x1
0x165 PUSH1 0xa0
0x167 PUSH1 0x2
0x169 EXP
0x16a SUB
0x16b PUSH1 0x4
0x16d CALLDATALOAD
0x16e DUP2
0x16f AND
0x170 SWAP1
0x171 PUSH1 0x24
0x173 CALLDATALOAD
0x174 SWAP1
0x175 PUSH1 0x44
0x177 CALLDATALOAD
0x178 DUP2
0x179 AND
0x17a SWAP1
0x17b PUSH1 0x64
0x17d CALLDATALOAD
0x17e AND
0x17f PUSH2 0x874
0x182 JUMP
---
0x15f: JUMPDEST 
0x160: V141 = 0x7f
0x163: V142 = 0x1
0x165: V143 = 0xa0
0x167: V144 = 0x2
0x169: V145 = EXP 0x2 0xa0
0x16a: V146 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16b: V147 = 0x4
0x16d: V148 = CALLDATALOAD 0x4
0x16f: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V148
0x171: V150 = 0x24
0x173: V151 = CALLDATALOAD 0x24
0x175: V152 = 0x44
0x177: V153 = CALLDATALOAD 0x44
0x179: V154 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x17b: V155 = 0x64
0x17d: V156 = CALLDATALOAD 0x64
0x17e: V157 = AND V156 0xffffffffffffffffffffffffffffffffffffffff
0x17f: V158 = 0x874
0x182: JUMP 0x874
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x7f, V149, V151, V154, V157]
Exit stack: [V13, 0x7f, V149, V151, V154, V157]

================================

Block 0x183
[0x183:0x19b]
---
Predecessors: [0x81]
Successors: [0x19c, 0x1b4]
---
0x183 JUMPDEST
0x184 CALLER
0x185 PUSH1 0x0
0x187 SWAP1
0x188 DUP2
0x189 MSTORE
0x18a PUSH1 0x20
0x18c DUP2
0x18d SWAP1
0x18e MSTORE
0x18f PUSH1 0x40
0x191 SWAP1
0x192 SHA3
0x193 SLOAD
0x194 PUSH1 0xff
0x196 AND
0x197 DUP1
0x198 PUSH2 0x1b4
0x19b JUMPI
---
0x183: JUMPDEST 
0x184: V159 = CALLER
0x185: V160 = 0x0
0x189: M[0x0] = V159
0x18a: V161 = 0x20
0x18e: M[0x20] = 0x0
0x18f: V162 = 0x40
0x192: V163 = SHA3 0x0 0x40
0x193: V164 = S[V163]
0x194: V165 = 0xff
0x196: V166 = AND 0xff V164
0x198: V167 = 0x1b4
0x19b: JUMPI 0x1b4 V166
---
Entry stack: [V13, 0x7f, V49, V51, V54, V57]
Stack pops: 0
Stack additions: [V166]
Exit stack: [V13, 0x7f, V49, V51, V54, V57, V166]

================================

Block 0x19c
[0x19c:0x1b3]
---
Predecessors: [0x183]
Successors: [0x1b4]
---
0x19c POP
0x19d CALLER
0x19e PUSH20 0x825d5d0df3b2d59f69cc673f041ca91a296b8183
0x1b3 EQ
---
0x19d: V168 = CALLER
0x19e: V169 = 0x825d5d0df3b2d59f69cc673f041ca91a296b8183
0x1b3: V170 = EQ 0x825d5d0df3b2d59f69cc673f041ca91a296b8183 V168
---
Entry stack: [V13, 0x7f, V49, V51, V54, V57, V166]
Stack pops: 1
Stack additions: [V170]
Exit stack: [V13, 0x7f, V49, V51, V54, V57, V170]

================================

Block 0x1b4
[0x1b4:0x1ba]
---
Predecessors: [0x183, 0x19c]
Successors: [0x1bb, 0x1bf]
---
0x1b4 JUMPDEST
0x1b5 ISZERO
0x1b6 ISZERO
0x1b7 PUSH2 0x1bf
0x1ba JUMPI
---
0x1b4: JUMPDEST 
0x1b5: V171 = ISZERO S0
0x1b6: V172 = ISZERO V171
0x1b7: V173 = 0x1bf
0x1ba: JUMPI 0x1bf V172
---
Entry stack: [V13, 0x7f, V49, V51, V54, V57, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x7f, V49, V51, V54, V57]

================================

Block 0x1bb
[0x1bb:0x1be]
---
Predecessors: [0x1b4]
Successors: []
---
0x1bb PUSH1 0x0
0x1bd DUP1
0x1be REVERT
---
0x1bb: V174 = 0x0
0x1be: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V49, V51, V54, V57]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V49, V51, V54, V57]

================================

Block 0x1bf
[0x1bf:0x1cb]
---
Predecessors: [0x1b4]
Successors: [0xd91]
---
0x1bf JUMPDEST
0x1c0 CALLVALUE
0x1c1 DUP5
0x1c2 DUP5
0x1c3 DUP5
0x1c4 DUP5
0x1c5 PUSH2 0x1cc
0x1c8 PUSH2 0xd91
0x1cb JUMP
---
0x1bf: JUMPDEST 
0x1c0: V175 = CALLVALUE
0x1c5: V176 = 0x1cc
0x1c8: V177 = 0xd91
0x1cb: JUMP 0xd91
---
Entry stack: [V13, 0x7f, V49, V51, V54, V57]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V175, S3, S2, S1, S0, 0x1cc]
Exit stack: [V13, 0x7f, V49, V51, V54, V57, V175, V49, V51, V54, V57, 0x1cc]

================================

Block 0x1cc
[0x1cc:0x208]
---
Predecessors: [0xd91, 0xda0]
Successors: [0x209, 0x212]
---
0x1cc JUMPDEST
0x1cd PUSH1 0x1
0x1cf PUSH1 0xa0
0x1d1 PUSH1 0x2
0x1d3 EXP
0x1d4 SUB
0x1d5 SWAP5
0x1d6 DUP6
0x1d7 AND
0x1d8 DUP2
0x1d9 MSTORE
0x1da PUSH1 0x20
0x1dc DUP2
0x1dd ADD
0x1de SWAP4
0x1df SWAP1
0x1e0 SWAP4
0x1e1 MSTORE
0x1e2 SWAP1
0x1e3 DUP4
0x1e4 AND
0x1e5 PUSH1 0x40
0x1e7 DUP1
0x1e8 DUP5
0x1e9 ADD
0x1ea SWAP2
0x1eb SWAP1
0x1ec SWAP2
0x1ed MSTORE
0x1ee SWAP3
0x1ef AND
0x1f0 PUSH1 0x60
0x1f2 DUP3
0x1f3 ADD
0x1f4 MSTORE
0x1f5 SWAP1
0x1f6 MLOAD
0x1f7 SWAP1
0x1f8 DUP2
0x1f9 SWAP1
0x1fa SUB
0x1fb PUSH1 0x80
0x1fd ADD
0x1fe SWAP1
0x1ff DUP3
0x200 CREATE
0x201 DUP1
0x202 ISZERO
0x203 DUP1
0x204 ISZERO
0x205 PUSH2 0x212
0x208 JUMPI
---
0x1cc: JUMPDEST 
0x1cd: V178 = 0x1
0x1cf: V179 = 0xa0
0x1d1: V180 = 0x2
0x1d3: V181 = EXP 0x2 0xa0
0x1d4: V182 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d7: V183 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x1d9: M[S0] = V183
0x1da: V184 = 0x20
0x1dd: V185 = ADD S0 0x20
0x1e1: M[V185] = S3
0x1e4: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x1e5: V187 = 0x40
0x1e9: V188 = ADD S0 0x40
0x1ed: M[V188] = V186
0x1ef: V189 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x1f0: V190 = 0x60
0x1f3: V191 = ADD S0 0x60
0x1f4: M[V191] = V189
0x1f6: V192 = M[0x40]
0x1fa: V193 = SUB S0 V192
0x1fb: V194 = 0x80
0x1fd: V195 = ADD 0x80 V193
0x200: V196 = CREATE S5 V192 V195
0x202: V197 = ISZERO V196
0x204: V198 = ISZERO V197
0x205: V199 = 0x212
0x208: JUMPI 0x212 V198
---
Entry stack: [V13, 0x7f, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, V196, V197]
Exit stack: [V13, 0x7f, S9, S8, S7, S6, S5, V196, V197]

================================

Block 0x209
[0x209:0x211]
---
Predecessors: [0x1cc]
Successors: []
---
0x209 RETURNDATASIZE
0x20a PUSH1 0x0
0x20c DUP1
0x20d RETURNDATACOPY
0x20e RETURNDATASIZE
0x20f PUSH1 0x0
0x211 REVERT
---
0x209: V200 = RETURNDATASIZE
0x20a: V201 = 0x0
0x20d: RETURNDATACOPY 0x0 0x0 V200
0x20e: V202 = RETURNDATASIZE
0x20f: V203 = 0x0
0x211: REVERT 0x0 V202
---
Entry stack: [V13, 0x7f, S6, S5, S4, S3, S2, V196, V197]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, S6, S5, S4, S3, S2, V196, V197]

================================

Block 0x212
[0x212:0x21a]
---
Predecessors: [0x1cc]
Successors: [0x7f]
---
0x212 JUMPDEST
0x213 POP
0x214 POP
0x215 POP
0x216 POP
0x217 POP
0x218 POP
0x219 POP
0x21a JUMP
---
0x212: JUMPDEST 
0x21a: JUMP 0x7f
---
Entry stack: [V13, 0x7f, S6, S5, S4, S3, S2, V196, V197]
Stack pops: 8
Stack additions: []
Exit stack: [V13]

================================

Block 0x21b
[0x21b:0x233]
---
Predecessors: [0xa5]
Successors: [0x234, 0x24c]
---
0x21b JUMPDEST
0x21c CALLER
0x21d PUSH1 0x0
0x21f SWAP1
0x220 DUP2
0x221 MSTORE
0x222 PUSH1 0x20
0x224 DUP2
0x225 SWAP1
0x226 MSTORE
0x227 PUSH1 0x40
0x229 SWAP1
0x22a SHA3
0x22b SLOAD
0x22c PUSH1 0xff
0x22e AND
0x22f DUP1
0x230 PUSH2 0x24c
0x233 JUMPI
---
0x21b: JUMPDEST 
0x21c: V204 = CALLER
0x21d: V205 = 0x0
0x221: M[0x0] = V204
0x222: V206 = 0x20
0x226: M[0x20] = 0x0
0x227: V207 = 0x40
0x22a: V208 = SHA3 0x0 0x40
0x22b: V209 = S[V208]
0x22c: V210 = 0xff
0x22e: V211 = AND 0xff V209
0x230: V212 = 0x24c
0x233: JUMPI 0x24c V211
---
Entry stack: [V13, 0x7f]
Stack pops: 0
Stack additions: [V211]
Exit stack: [V13, 0x7f, V211]

================================

Block 0x234
[0x234:0x24b]
---
Predecessors: [0x21b]
Successors: [0x24c]
---
0x234 POP
0x235 CALLER
0x236 PUSH20 0x825d5d0df3b2d59f69cc673f041ca91a296b8183
0x24b EQ
---
0x235: V213 = CALLER
0x236: V214 = 0x825d5d0df3b2d59f69cc673f041ca91a296b8183
0x24b: V215 = EQ 0x825d5d0df3b2d59f69cc673f041ca91a296b8183 V213
---
Entry stack: [V13, 0x7f, V211]
Stack pops: 1
Stack additions: [V215]
Exit stack: [V13, 0x7f, V215]

================================

Block 0x24c
[0x24c:0x252]
---
Predecessors: [0x21b, 0x234]
Successors: [0x253, 0x257]
---
0x24c JUMPDEST
0x24d ISZERO
0x24e ISZERO
0x24f PUSH2 0x257
0x252 JUMPI
---
0x24c: JUMPDEST 
0x24d: V216 = ISZERO S0
0x24e: V217 = ISZERO V216
0x24f: V218 = 0x257
0x252: JUMPI 0x257 V217
---
Entry stack: [V13, 0x7f, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x7f]

================================

Block 0x253
[0x253:0x256]
---
Predecessors: [0x24c]
Successors: []
---
0x253 PUSH1 0x0
0x255 DUP1
0x256 REVERT
---
0x253: V219 = 0x0
0x256: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f]

================================

Block 0x257
[0x257:0x260]
---
Predecessors: [0x24c]
Successors: [0x261, 0x265]
---
0x257 JUMPDEST
0x258 PUSH1 0x1c
0x25a CALLDATASIZE
0x25b LT
0x25c ISZERO
0x25d PUSH2 0x265
0x260 JUMPI
---
0x257: JUMPDEST 
0x258: V220 = 0x1c
0x25a: V221 = CALLDATASIZE
0x25b: V222 = LT V221 0x1c
0x25c: V223 = ISZERO V222
0x25d: V224 = 0x265
0x260: JUMPI 0x265 V223
---
Entry stack: [V13, 0x7f]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f]

================================

Block 0x261
[0x261:0x264]
---
Predecessors: [0x257]
Successors: []
---
0x261 PUSH1 0x0
0x263 DUP1
0x264 REVERT
---
0x261: V225 = 0x0
0x264: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f]

================================

Block 0x265
[0x265:0x293]
---
Predecessors: [0x257]
Successors: [0x294, 0x2a0]
---
0x265 JUMPDEST
0x266 CALLDATASIZE
0x267 PUSH1 0x0
0x269 PUSH1 0x18
0x26b CALLDATACOPY
0x26c PUSH1 0x0
0x26e MLOAD
0x26f PUSH1 0xf
0x271 DUP2
0x272 AND
0x273 PUSH1 0xf0
0x275 DUP3
0x276 AND
0x277 PUSH1 0x1
0x279 PUSH1 0xa0
0x27b PUSH1 0x2
0x27d EXP
0x27e SUB
0x27f PUSH1 0x14
0x281 MLOAD
0x282 AND
0x283 PUSH1 0x34
0x285 PUSH1 0x1c
0x287 CALLDATASIZE
0x288 SUB
0x289 PUSH1 0x0
0x28b DUP6
0x28c PUSH1 0x0
0x28e DUP2
0x28f EQ
0x290 PUSH2 0x2a0
0x293 JUMPI
---
0x265: JUMPDEST 
0x266: V226 = CALLDATASIZE
0x267: V227 = 0x0
0x269: V228 = 0x18
0x26b: CALLDATACOPY 0x18 0x0 V226
0x26c: V229 = 0x0
0x26e: V230 = M[0x0]
0x26f: V231 = 0xf
0x272: V232 = AND V230 0xf
0x273: V233 = 0xf0
0x276: V234 = AND V230 0xf0
0x277: V235 = 0x1
0x279: V236 = 0xa0
0x27b: V237 = 0x2
0x27d: V238 = EXP 0x2 0xa0
0x27e: V239 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27f: V240 = 0x14
0x281: V241 = M[0x14]
0x282: V242 = AND V241 0xffffffffffffffffffffffffffffffffffffffff
0x283: V243 = 0x34
0x285: V244 = 0x1c
0x287: V245 = CALLDATASIZE
0x288: V246 = SUB V245 0x1c
0x289: V247 = 0x0
0x28c: V248 = 0x0
0x28f: V249 = EQ V232 0x0
0x290: V250 = 0x2a0
0x293: JUMPI 0x2a0 V249
---
Entry stack: [V13, 0x7f]
Stack pops: 0
Stack additions: [V230, V232, V234, V242, 0x34, V246, 0x0, V232]
Exit stack: [V13, 0x7f, V230, V232, V234, V242, 0x34, V246, 0x0, V232]

================================

Block 0x294
[0x294:0x29b]
---
Predecessors: [0x265]
Successors: [0x29c, 0x2b0]
---
0x294 PUSH1 0x1
0x296 DUP2
0x297 EQ
0x298 PUSH2 0x2b0
0x29b JUMPI
---
0x294: V251 = 0x1
0x297: V252 = EQ V232 0x1
0x298: V253 = 0x2b0
0x29b: JUMPI 0x2b0 V252
---
Entry stack: [V13, 0x7f, V230, V232, V234, V242, 0x34, V246, 0x0, V232]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x7f, V230, V232, V234, V242, 0x34, V246, 0x0, V232]

================================

Block 0x29c
[0x29c:0x29f]
---
Predecessors: [0x294]
Successors: []
---
0x29c PUSH1 0x0
0x29e DUP1
0x29f REVERT
---
0x29c: V254 = 0x0
0x29f: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V230, V232, V234, V242, 0x34, V246, 0x0, V232]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V230, V232, V234, V242, 0x34, V246, 0x0, V232]

================================

Block 0x2a0
[0x2a0:0x2af]
---
Predecessors: [0x265]
Successors: [0x2bb]
---
0x2a0 JUMPDEST
0x2a1 PUSH1 0x0
0x2a3 DUP1
0x2a4 DUP5
0x2a5 DUP7
0x2a6 CALLVALUE
0x2a7 DUP10
0x2a8 GAS
0x2a9 CALL
0x2aa SWAP2
0x2ab POP
0x2ac PUSH2 0x2bb
0x2af JUMP
---
0x2a0: JUMPDEST 
0x2a1: V255 = 0x0
0x2a6: V256 = CALLVALUE
0x2a8: V257 = GAS
0x2a9: V258 = CALL V257 V242 V256 0x34 V246 0x0 0x0
0x2ac: V259 = 0x2bb
0x2af: JUMP 0x2bb
---
Entry stack: [V13, 0x7f, V230, V232, V234, V242, 0x34, V246, 0x0, V232]
Stack pops: 5
Stack additions: [S4, S3, S2, V258, S0]
Exit stack: [V13, 0x7f, V230, V232, V234, V242, 0x34, V246, V258, V232]

================================

Block 0x2b0
[0x2b0:0x2ba]
---
Predecessors: [0x294]
Successors: [0x2bb]
---
0x2b0 JUMPDEST
0x2b1 PUSH1 0x0
0x2b3 DUP1
0x2b4 DUP5
0x2b5 DUP7
0x2b6 DUP9
0x2b7 GAS
0x2b8 DELEGATECALL
0x2b9 SWAP2
0x2ba POP
---
0x2b0: JUMPDEST 
0x2b1: V260 = 0x0
0x2b7: V261 = GAS
0x2b8: V262 = DELEGATECALL V261 V242 0x34 V246 0x0 0x0
---
Entry stack: [V13, 0x7f, V230, V232, V234, V242, 0x34, V246, 0x0, V232]
Stack pops: 5
Stack additions: [S4, S3, S2, V262, S0]
Exit stack: [V13, 0x7f, V230, V232, V234, V242, 0x34, V246, V262, V232]

================================

Block 0x2bb
[0x2bb:0x2c3]
---
Predecessors: [0x2a0, 0x2b0]
Successors: [0x2c4, 0x2d0]
---
0x2bb JUMPDEST
0x2bc POP
0x2bd DUP5
0x2be DUP1
0x2bf ISZERO
0x2c0 PUSH2 0x2d0
0x2c3 JUMPI
---
0x2bb: JUMPDEST 
0x2bf: V263 = ISZERO V234
0x2c0: V264 = 0x2d0
0x2c3: JUMPI 0x2d0 V263
---
Entry stack: [V13, 0x7f, V230, V232, V234, V242, 0x34, V246, S1, V232]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S5]
Exit stack: [V13, 0x7f, V230, V232, V234, V242, 0x34, V246, S1, V234]

================================

Block 0x2c4
[0x2c4:0x2cb]
---
Predecessors: [0x2bb]
Successors: [0x2cc, 0x2dc]
---
0x2c4 PUSH1 0x10
0x2c6 DUP2
0x2c7 EQ
0x2c8 PUSH2 0x2dc
0x2cb JUMPI
---
0x2c4: V265 = 0x10
0x2c7: V266 = EQ V234 0x10
0x2c8: V267 = 0x2dc
0x2cb: JUMPI 0x2dc V266
---
Entry stack: [V13, 0x7f, V230, V232, V234, V242, 0x34, V246, S1, V234]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x7f, V230, V232, V234, V242, 0x34, V246, S1, V234]

================================

Block 0x2cc
[0x2cc:0x2cf]
---
Predecessors: [0x2c4]
Successors: []
---
0x2cc PUSH1 0x0
0x2ce DUP1
0x2cf REVERT
---
0x2cc: V268 = 0x0
0x2cf: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V230, V232, V234, V242, 0x34, V246, S1, V234]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V230, V232, V234, V242, 0x34, V246, S1, V234]

================================

Block 0x2d0
[0x2d0:0x2d7]
---
Predecessors: [0x2bb]
Successors: [0x7f, 0x2d8]
---
0x2d0 JUMPDEST
0x2d1 DUP2
0x2d2 ISZERO
0x2d3 ISZERO
0x2d4 PUSH2 0x7f
0x2d7 JUMPI
---
0x2d0: JUMPDEST 
0x2d2: V269 = ISZERO S1
0x2d3: V270 = ISZERO V269
0x2d4: V271 = 0x7f
0x2d7: JUMPI 0x7f V270
---
Entry stack: [V13, 0x7f, V230, V232, V234, V242, 0x34, V246, S1, V234]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x7f, V230, V232, V234, V242, 0x34, V246, S1, V234]

================================

Block 0x2d8
[0x2d8:0x2db]
---
Predecessors: [0x2d0]
Successors: []
---
0x2d8 PUSH1 0x0
0x2da DUP1
0x2db REVERT
---
0x2d8: V272 = 0x0
0x2db: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V230, V232, V234, V242, 0x34, V246, S1, V234]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V230, V232, V234, V242, 0x34, V246, S1, V234]

================================

Block 0x2dc
[0x2dc:0x2e8]
---
Predecessors: [0x2c4]
Successors: [0x2e9, 0x2ed]
---
0x2dc JUMPDEST
0x2dd RETURNDATASIZE
0x2de PUSH1 0x0
0x2e0 DUP1
0x2e1 RETURNDATACOPY
0x2e2 DUP2
0x2e3 ISZERO
0x2e4 ISZERO
0x2e5 PUSH2 0x2ed
0x2e8 JUMPI
---
0x2dc: JUMPDEST 
0x2dd: V273 = RETURNDATASIZE
0x2de: V274 = 0x0
0x2e1: RETURNDATACOPY 0x0 0x0 V273
0x2e3: V275 = ISZERO S1
0x2e4: V276 = ISZERO V275
0x2e5: V277 = 0x2ed
0x2e8: JUMPI 0x2ed V276
---
Entry stack: [V13, 0x7f, V230, V232, V234, V242, 0x34, V246, S1, V234]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x7f, V230, V232, V234, V242, 0x34, V246, S1, V234]

================================

Block 0x2e9
[0x2e9:0x2ec]
---
Predecessors: [0x2dc]
Successors: []
---
0x2e9 RETURNDATASIZE
0x2ea PUSH1 0x0
0x2ec REVERT
---
0x2e9: V278 = RETURNDATASIZE
0x2ea: V279 = 0x0
0x2ec: REVERT 0x0 V278
---
Entry stack: [V13, 0x7f, V230, V232, V234, V242, 0x34, V246, S1, V234]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V230, V232, V234, V242, 0x34, V246, S1, V234]

================================

Block 0x2ed
[0x2ed:0x2f1]
---
Predecessors: [0x2dc]
Successors: []
---
0x2ed JUMPDEST
0x2ee RETURNDATASIZE
0x2ef PUSH1 0x0
0x2f1 RETURN
---
0x2ed: JUMPDEST 
0x2ee: V280 = RETURNDATASIZE
0x2ef: V281 = 0x0
0x2f1: RETURN 0x0 V280
---
Entry stack: [V13, 0x7f, V230, V232, V234, V242, 0x34, V246, S1, V234]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V230, V232, V234, V242, 0x34, V246, S1, V234]

================================

Block 0x2f2
[0x2f2:0x2fb]
---
Predecessors: [0x576, 0x5be, 0x714]
Successors: [0x7f]
---
0x2f2 JUMPDEST
0x2f3 POP
0x2f4 POP
0x2f5 POP
0x2f6 POP
0x2f7 POP
0x2f8 POP
0x2f9 POP
0x2fa POP
0x2fb JUMP
---
0x2f2: JUMPDEST 
0x2fb: JUMP 0x7f
---
Entry stack: [V13, 0x7f, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 9
Stack additions: []
Exit stack: [V13]

================================

Block 0x2fc
[0x2fc:0x314]
---
Predecessors: [0xb9]
Successors: [0x315, 0x32d]
---
0x2fc JUMPDEST
0x2fd CALLER
0x2fe PUSH1 0x0
0x300 SWAP1
0x301 DUP2
0x302 MSTORE
0x303 PUSH1 0x20
0x305 DUP2
0x306 SWAP1
0x307 MSTORE
0x308 PUSH1 0x40
0x30a SWAP1
0x30b SHA3
0x30c SLOAD
0x30d PUSH1 0xff
0x30f AND
0x310 DUP1
0x311 PUSH2 0x32d
0x314 JUMPI
---
0x2fc: JUMPDEST 
0x2fd: V282 = CALLER
0x2fe: V283 = 0x0
0x302: M[0x0] = V282
0x303: V284 = 0x20
0x307: M[0x20] = 0x0
0x308: V285 = 0x40
0x30b: V286 = SHA3 0x0 0x40
0x30c: V287 = S[V286]
0x30d: V288 = 0xff
0x30f: V289 = AND 0xff V287
0x311: V290 = 0x32d
0x314: JUMPI 0x32d V289
---
Entry stack: [V13, 0x7f]
Stack pops: 0
Stack additions: [V289]
Exit stack: [V13, 0x7f, V289]

================================

Block 0x315
[0x315:0x32c]
---
Predecessors: [0x2fc]
Successors: [0x32d]
---
0x315 POP
0x316 CALLER
0x317 PUSH20 0x825d5d0df3b2d59f69cc673f041ca91a296b8183
0x32c EQ
---
0x316: V291 = CALLER
0x317: V292 = 0x825d5d0df3b2d59f69cc673f041ca91a296b8183
0x32c: V293 = EQ 0x825d5d0df3b2d59f69cc673f041ca91a296b8183 V291
---
Entry stack: [V13, 0x7f, V289]
Stack pops: 1
Stack additions: [V293]
Exit stack: [V13, 0x7f, V293]

================================

Block 0x32d
[0x32d:0x333]
---
Predecessors: [0x2fc, 0x315]
Successors: [0x334, 0x338]
---
0x32d JUMPDEST
0x32e ISZERO
0x32f ISZERO
0x330 PUSH2 0x338
0x333 JUMPI
---
0x32d: JUMPDEST 
0x32e: V294 = ISZERO S0
0x32f: V295 = ISZERO V294
0x330: V296 = 0x338
0x333: JUMPI 0x338 V295
---
Entry stack: [V13, 0x7f, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x7f]

================================

Block 0x334
[0x334:0x337]
---
Predecessors: [0x32d]
Successors: []
---
0x334 PUSH1 0x0
0x336 DUP1
0x337 REVERT
---
0x334: V297 = 0x0
0x337: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f]

================================

Block 0x338
[0x338:0x35b]
---
Predecessors: [0x32d]
Successors: [0x35c, 0x365]
---
0x338 JUMPDEST
0x339 PUSH1 0x40
0x33b MLOAD
0x33c CALLER
0x33d SWAP1
0x33e ADDRESS
0x33f BALANCE
0x340 DUP1
0x341 ISZERO
0x342 PUSH2 0x8fc
0x345 MUL
0x346 SWAP2
0x347 PUSH1 0x0
0x349 DUP2
0x34a DUP2
0x34b DUP2
0x34c DUP6
0x34d DUP9
0x34e DUP9
0x34f CALL
0x350 SWAP4
0x351 POP
0x352 POP
0x353 POP
0x354 POP
0x355 ISZERO
0x356 DUP1
0x357 ISZERO
0x358 PUSH2 0x365
0x35b JUMPI
---
0x338: JUMPDEST 
0x339: V298 = 0x40
0x33b: V299 = M[0x40]
0x33c: V300 = CALLER
0x33e: V301 = ADDRESS
0x33f: V302 = BALANCE V301
0x341: V303 = ISZERO V302
0x342: V304 = 0x8fc
0x345: V305 = MUL 0x8fc V303
0x347: V306 = 0x0
0x34f: V307 = CALL V305 V300 V302 V299 0x0 V299 0x0
0x355: V308 = ISZERO V307
0x357: V309 = ISZERO V308
0x358: V310 = 0x365
0x35b: JUMPI 0x365 V309
---
Entry stack: [V13, 0x7f]
Stack pops: 0
Stack additions: [V308]
Exit stack: [V13, 0x7f, V308]

================================

Block 0x35c
[0x35c:0x364]
---
Predecessors: [0x338]
Successors: []
---
0x35c RETURNDATASIZE
0x35d PUSH1 0x0
0x35f DUP1
0x360 RETURNDATACOPY
0x361 RETURNDATASIZE
0x362 PUSH1 0x0
0x364 REVERT
---
0x35c: V311 = RETURNDATASIZE
0x35d: V312 = 0x0
0x360: RETURNDATACOPY 0x0 0x0 V311
0x361: V313 = RETURNDATASIZE
0x362: V314 = 0x0
0x364: REVERT 0x0 V313
---
Entry stack: [V13, 0x7f, V308]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V308]

================================

Block 0x365
[0x365:0x367]
---
Predecessors: [0x338]
Successors: [0x7f]
---
0x365 JUMPDEST
0x366 POP
0x367 JUMP
---
0x365: JUMPDEST 
0x367: JUMP 0x7f
---
Entry stack: [V13, 0x7f, V308]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x368
[0x368:0x3b5]
---
Predecessors: [0xc2]
Successors: [0x3b6, 0x3ba]
---
0x368 JUMPDEST
0x369 DUP2
0x36a PUSH1 0x1
0x36c PUSH1 0xa0
0x36e PUSH1 0x2
0x370 EXP
0x371 SUB
0x372 AND
0x373 PUSH4 0x8f38f309
0x378 CALLVALUE
0x379 DUP4
0x37a PUSH1 0x1
0x37c PUSH1 0x40
0x37e MLOAD
0x37f DUP5
0x380 PUSH4 0xffffffff
0x385 AND
0x386 PUSH1 0xe0
0x388 PUSH1 0x2
0x38a EXP
0x38b MUL
0x38c DUP2
0x38d MSTORE
0x38e PUSH1 0x4
0x390 ADD
0x391 DUP1
0x392 DUP4
0x393 DUP2
0x394 MSTORE
0x395 PUSH1 0x20
0x397 ADD
0x398 DUP3
0x399 DUP2
0x39a MSTORE
0x39b PUSH1 0x20
0x39d ADD
0x39e SWAP3
0x39f POP
0x3a0 POP
0x3a1 POP
0x3a2 PUSH1 0x0
0x3a4 PUSH1 0x40
0x3a6 MLOAD
0x3a7 DUP1
0x3a8 DUP4
0x3a9 SUB
0x3aa DUP2
0x3ab DUP6
0x3ac DUP9
0x3ad DUP1
0x3ae EXTCODESIZE
0x3af ISZERO
0x3b0 DUP1
0x3b1 ISZERO
0x3b2 PUSH2 0x3ba
0x3b5 JUMPI
---
0x368: JUMPDEST 
0x36a: V315 = 0x1
0x36c: V316 = 0xa0
0x36e: V317 = 0x2
0x370: V318 = EXP 0x2 0xa0
0x371: V319 = SUB 0x10000000000000000000000000000000000000000 0x1
0x372: V320 = AND 0xffffffffffffffffffffffffffffffffffffffff V75
0x373: V321 = 0x8f38f309
0x378: V322 = CALLVALUE
0x37a: V323 = 0x1
0x37c: V324 = 0x40
0x37e: V325 = M[0x40]
0x380: V326 = 0xffffffff
0x385: V327 = AND 0xffffffff 0x8f38f309
0x386: V328 = 0xe0
0x388: V329 = 0x2
0x38a: V330 = EXP 0x2 0xe0
0x38b: V331 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x8f38f309
0x38d: M[V325] = 0x8f38f30900000000000000000000000000000000000000000000000000000000
0x38e: V332 = 0x4
0x390: V333 = ADD 0x4 V325
0x394: M[V333] = V77
0x395: V334 = 0x20
0x397: V335 = ADD 0x20 V333
0x39a: M[V335] = 0x1
0x39b: V336 = 0x20
0x39d: V337 = ADD 0x20 V335
0x3a2: V338 = 0x0
0x3a4: V339 = 0x40
0x3a6: V340 = M[0x40]
0x3a9: V341 = SUB V337 V340
0x3ae: V342 = EXTCODESIZE V320
0x3af: V343 = ISZERO V342
0x3b1: V344 = ISZERO V343
0x3b2: V345 = 0x3ba
0x3b5: JUMPI 0x3ba V344
---
Entry stack: [V13, 0x7f, V75, V77]
Stack pops: 2
Stack additions: [S1, S0, V320, 0x8f38f309, V322, V337, 0x0, V340, V341, V340, V322, V320, V343]
Exit stack: [V13, 0x7f, V75, V77, V320, 0x8f38f309, V322, V337, 0x0, V340, V341, V340, V322, V320, V343]

================================

Block 0x3b6
[0x3b6:0x3b9]
---
Predecessors: [0x368]
Successors: []
---
0x3b6 PUSH1 0x0
0x3b8 DUP1
0x3b9 REVERT
---
0x3b6: V346 = 0x0
0x3b9: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V75, V77, V320, 0x8f38f309, V322, V337, 0x0, V340, V341, V340, V322, V320, V343]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V75, V77, V320, 0x8f38f309, V322, V337, 0x0, V340, V341, V340, V322, V320, V343]

================================

Block 0x3ba
[0x3ba:0x3c4]
---
Predecessors: [0x368, 0x748]
Successors: [0x3c5, 0x3ce]
---
0x3ba JUMPDEST
0x3bb POP
0x3bc GAS
0x3bd CALL
0x3be ISZERO
0x3bf DUP1
0x3c0 ISZERO
0x3c1 PUSH2 0x3ce
0x3c4 JUMPI
---
0x3ba: JUMPDEST 
0x3bc: V347 = GAS
0x3bd: V348 = CALL V347 S1 S2 S3 S4 S5 0x0
0x3be: V349 = ISZERO V348
0x3c0: V350 = ISZERO V349
0x3c1: V351 = 0x3ce
0x3c4: JUMPI 0x3ce V350
---
Entry stack: [V13, 0x7f, S12, S11, S10, {0x8f38f309, 0xcd133c8f}, S8, S7, 0x0, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [V349]
Exit stack: [V13, 0x7f, S12, S11, S10, {0x8f38f309, 0xcd133c8f}, S8, S7, V349]

================================

Block 0x3c5
[0x3c5:0x3cd]
---
Predecessors: [0x3ba]
Successors: []
---
0x3c5 RETURNDATASIZE
0x3c6 PUSH1 0x0
0x3c8 DUP1
0x3c9 RETURNDATACOPY
0x3ca RETURNDATASIZE
0x3cb PUSH1 0x0
0x3cd REVERT
---
0x3c5: V352 = RETURNDATASIZE
0x3c6: V353 = 0x0
0x3c9: RETURNDATACOPY 0x0 0x0 V352
0x3ca: V354 = RETURNDATASIZE
0x3cb: V355 = 0x0
0x3cd: REVERT 0x0 V354
---
Entry stack: [V13, 0x7f, S6, S5, S4, {0x8f38f309, 0xcd133c8f}, S2, S1, V349]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, S6, S5, S4, {0x8f38f309, 0xcd133c8f}, S2, S1, V349]

================================

Block 0x3ce
[0x3ce:0x40c]
---
Predecessors: [0x3ba]
Successors: [0x40d, 0x411]
---
0x3ce JUMPDEST
0x3cf POP
0x3d0 POP
0x3d1 POP
0x3d2 POP
0x3d3 POP
0x3d4 DUP2
0x3d5 PUSH1 0x1
0x3d7 PUSH1 0xa0
0x3d9 PUSH1 0x2
0x3db EXP
0x3dc SUB
0x3dd AND
0x3de PUSH4 0x3ccfd60b
0x3e3 PUSH1 0x40
0x3e5 MLOAD
0x3e6 DUP2
0x3e7 PUSH4 0xffffffff
0x3ec AND
0x3ed PUSH1 0xe0
0x3ef PUSH1 0x2
0x3f1 EXP
0x3f2 MUL
0x3f3 DUP2
0x3f4 MSTORE
0x3f5 PUSH1 0x4
0x3f7 ADD
0x3f8 PUSH1 0x0
0x3fa PUSH1 0x40
0x3fc MLOAD
0x3fd DUP1
0x3fe DUP4
0x3ff SUB
0x400 DUP2
0x401 PUSH1 0x0
0x403 DUP8
0x404 DUP1
0x405 EXTCODESIZE
0x406 ISZERO
0x407 DUP1
0x408 ISZERO
0x409 PUSH2 0x411
0x40c JUMPI
---
0x3ce: JUMPDEST 
0x3d5: V356 = 0x1
0x3d7: V357 = 0xa0
0x3d9: V358 = 0x2
0x3db: V359 = EXP 0x2 0xa0
0x3dc: V360 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3dd: V361 = AND 0xffffffffffffffffffffffffffffffffffffffff S6
0x3de: V362 = 0x3ccfd60b
0x3e3: V363 = 0x40
0x3e5: V364 = M[0x40]
0x3e7: V365 = 0xffffffff
0x3ec: V366 = AND 0xffffffff 0x3ccfd60b
0x3ed: V367 = 0xe0
0x3ef: V368 = 0x2
0x3f1: V369 = EXP 0x2 0xe0
0x3f2: V370 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x3ccfd60b
0x3f4: M[V364] = 0x3ccfd60b00000000000000000000000000000000000000000000000000000000
0x3f5: V371 = 0x4
0x3f7: V372 = ADD 0x4 V364
0x3f8: V373 = 0x0
0x3fa: V374 = 0x40
0x3fc: V375 = M[0x40]
0x3ff: V376 = SUB V372 V375
0x401: V377 = 0x0
0x405: V378 = EXTCODESIZE V361
0x406: V379 = ISZERO V378
0x408: V380 = ISZERO V379
0x409: V381 = 0x411
0x40c: JUMPI 0x411 V380
---
Entry stack: [V13, 0x7f, S6, S5, S4, {0x8f38f309, 0xcd133c8f}, S2, S1, V349]
Stack pops: 7
Stack additions: [S6, S5, V361, 0x3ccfd60b, V372, 0x0, V375, V376, V375, 0x0, V361, V379]
Exit stack: [V13, 0x7f, S6, S5, V361, 0x3ccfd60b, V372, 0x0, V375, V376, V375, 0x0, V361, V379]

================================

Block 0x40d
[0x40d:0x410]
---
Predecessors: [0x3ce]
Successors: []
---
0x40d PUSH1 0x0
0x40f DUP1
0x410 REVERT
---
0x40d: V382 = 0x0
0x410: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, S11, S10, V361, 0x3ccfd60b, V372, 0x0, V375, V376, V375, 0x0, V361, V379]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, S11, S10, V361, 0x3ccfd60b, V372, 0x0, V375, V376, V375, 0x0, V361, V379]

================================

Block 0x411
[0x411:0x41b]
---
Predecessors: [0x3ce]
Successors: [0x41c, 0x425]
---
0x411 JUMPDEST
0x412 POP
0x413 GAS
0x414 CALL
0x415 ISZERO
0x416 DUP1
0x417 ISZERO
0x418 PUSH2 0x425
0x41b JUMPI
---
0x411: JUMPDEST 
0x413: V383 = GAS
0x414: V384 = CALL V383 V361 0x0 V375 V376 V375 0x0
0x415: V385 = ISZERO V384
0x417: V386 = ISZERO V385
0x418: V387 = 0x425
0x41b: JUMPI 0x425 V386
---
Entry stack: [V13, 0x7f, S11, S10, V361, 0x3ccfd60b, V372, 0x0, V375, V376, V375, 0x0, V361, V379]
Stack pops: 7
Stack additions: [V385]
Exit stack: [V13, 0x7f, S11, S10, V361, 0x3ccfd60b, V372, V385]

================================

Block 0x41c
[0x41c:0x424]
---
Predecessors: [0x411]
Successors: []
---
0x41c RETURNDATASIZE
0x41d PUSH1 0x0
0x41f DUP1
0x420 RETURNDATACOPY
0x421 RETURNDATASIZE
0x422 PUSH1 0x0
0x424 REVERT
---
0x41c: V388 = RETURNDATASIZE
0x41d: V389 = 0x0
0x420: RETURNDATACOPY 0x0 0x0 V388
0x421: V390 = RETURNDATASIZE
0x422: V391 = 0x0
0x424: REVERT 0x0 V390
---
Entry stack: [V13, 0x7f, S5, S4, V361, 0x3ccfd60b, V372, V385]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, S5, S4, V361, 0x3ccfd60b, V372, V385]

================================

Block 0x425
[0x425:0x42c]
---
Predecessors: [0x411]
Successors: [0x7f]
---
0x425 JUMPDEST
0x426 POP
0x427 POP
0x428 POP
0x429 POP
0x42a POP
0x42b POP
0x42c JUMP
---
0x425: JUMPDEST 
0x42c: JUMP 0x7f
---
Entry stack: [V13, 0x7f, S5, S4, V361, 0x3ccfd60b, V372, V385]
Stack pops: 7
Stack additions: []
Exit stack: [V13]

================================

Block 0x42d
[0x42d:0x44b]
---
Predecessors: [0xe5]
Successors: [0x44c, 0x464]
---
0x42d JUMPDEST
0x42e CALLER
0x42f PUSH1 0x0
0x431 SWAP1
0x432 DUP2
0x433 MSTORE
0x434 PUSH1 0x20
0x436 DUP2
0x437 SWAP1
0x438 MSTORE
0x439 PUSH1 0x40
0x43b DUP2
0x43c SHA3
0x43d SLOAD
0x43e DUP2
0x43f SWAP1
0x440 DUP2
0x441 SWAP1
0x442 DUP2
0x443 SWAP1
0x444 PUSH1 0xff
0x446 AND
0x447 DUP1
0x448 PUSH2 0x464
0x44b JUMPI
---
0x42d: JUMPDEST 
0x42e: V392 = CALLER
0x42f: V393 = 0x0
0x433: M[0x0] = V392
0x434: V394 = 0x20
0x438: M[0x20] = 0x0
0x439: V395 = 0x40
0x43c: V396 = SHA3 0x0 0x40
0x43d: V397 = S[V396]
0x444: V398 = 0xff
0x446: V399 = AND 0xff V397
0x448: V400 = 0x464
0x44b: JUMPI 0x464 V399
---
Entry stack: [V13, 0x7f, V91, V93, V95, V97]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, V399]
Exit stack: [V13, 0x7f, V91, V93, V95, V97, 0x0, 0x0, 0x0, 0x0, V399]

================================

Block 0x44c
[0x44c:0x463]
---
Predecessors: [0x42d]
Successors: [0x464]
---
0x44c POP
0x44d CALLER
0x44e PUSH20 0x825d5d0df3b2d59f69cc673f041ca91a296b8183
0x463 EQ
---
0x44d: V401 = CALLER
0x44e: V402 = 0x825d5d0df3b2d59f69cc673f041ca91a296b8183
0x463: V403 = EQ 0x825d5d0df3b2d59f69cc673f041ca91a296b8183 V401
---
Entry stack: [V13, 0x7f, V91, V93, V95, V97, 0x0, 0x0, 0x0, 0x0, V399]
Stack pops: 1
Stack additions: [V403]
Exit stack: [V13, 0x7f, V91, V93, V95, V97, 0x0, 0x0, 0x0, 0x0, V403]

================================

Block 0x464
[0x464:0x46a]
---
Predecessors: [0x42d, 0x44c]
Successors: [0x46b, 0x46f]
---
0x464 JUMPDEST
0x465 ISZERO
0x466 ISZERO
0x467 PUSH2 0x46f
0x46a JUMPI
---
0x464: JUMPDEST 
0x465: V404 = ISZERO S0
0x466: V405 = ISZERO V404
0x467: V406 = 0x46f
0x46a: JUMPI 0x46f V405
---
Entry stack: [V13, 0x7f, V91, V93, V95, V97, 0x0, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x7f, V91, V93, V95, V97, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x46b
[0x46b:0x46e]
---
Predecessors: [0x464]
Successors: []
---
0x46b PUSH1 0x0
0x46d DUP1
0x46e REVERT
---
0x46b: V407 = 0x0
0x46e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V91, V93, V95, V97, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V91, V93, V95, V97, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x46f
[0x46f:0x4a8]
---
Predecessors: [0x464]
Successors: [0x4a9, 0x4ad]
---
0x46f JUMPDEST
0x470 DUP8
0x471 PUSH1 0x1
0x473 PUSH1 0xa0
0x475 PUSH1 0x2
0x477 EXP
0x478 SUB
0x479 AND
0x47a PUSH4 0xd87574e0
0x47f PUSH1 0x40
0x481 MLOAD
0x482 DUP2
0x483 PUSH4 0xffffffff
0x488 AND
0x489 PUSH1 0xe0
0x48b PUSH1 0x2
0x48d EXP
0x48e MUL
0x48f DUP2
0x490 MSTORE
0x491 PUSH1 0x4
0x493 ADD
0x494 PUSH1 0x20
0x496 PUSH1 0x40
0x498 MLOAD
0x499 DUP1
0x49a DUP4
0x49b SUB
0x49c DUP2
0x49d PUSH1 0x0
0x49f DUP8
0x4a0 DUP1
0x4a1 EXTCODESIZE
0x4a2 ISZERO
0x4a3 DUP1
0x4a4 ISZERO
0x4a5 PUSH2 0x4ad
0x4a8 JUMPI
---
0x46f: JUMPDEST 
0x471: V408 = 0x1
0x473: V409 = 0xa0
0x475: V410 = 0x2
0x477: V411 = EXP 0x2 0xa0
0x478: V412 = SUB 0x10000000000000000000000000000000000000000 0x1
0x479: V413 = AND 0xffffffffffffffffffffffffffffffffffffffff V91
0x47a: V414 = 0xd87574e0
0x47f: V415 = 0x40
0x481: V416 = M[0x40]
0x483: V417 = 0xffffffff
0x488: V418 = AND 0xffffffff 0xd87574e0
0x489: V419 = 0xe0
0x48b: V420 = 0x2
0x48d: V421 = EXP 0x2 0xe0
0x48e: V422 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd87574e0
0x490: M[V416] = 0xd87574e000000000000000000000000000000000000000000000000000000000
0x491: V423 = 0x4
0x493: V424 = ADD 0x4 V416
0x494: V425 = 0x20
0x496: V426 = 0x40
0x498: V427 = M[0x40]
0x49b: V428 = SUB V424 V427
0x49d: V429 = 0x0
0x4a1: V430 = EXTCODESIZE V413
0x4a2: V431 = ISZERO V430
0x4a4: V432 = ISZERO V431
0x4a5: V433 = 0x4ad
0x4a8: JUMPI 0x4ad V432
---
Entry stack: [V13, 0x7f, V91, V93, V95, V97, 0x0, 0x0, 0x0, 0x0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0, V413, 0xd87574e0, V424, 0x20, V427, V428, V427, 0x0, V413, V431]
Exit stack: [V13, 0x7f, V91, V93, V95, V97, 0x0, 0x0, 0x0, 0x0, V413, 0xd87574e0, V424, 0x20, V427, V428, V427, 0x0, V413, V431]

================================

Block 0x4a9
[0x4a9:0x4ac]
---
Predecessors: [0x46f]
Successors: []
---
0x4a9 PUSH1 0x0
0x4ab DUP1
0x4ac REVERT
---
0x4a9: V434 = 0x0
0x4ac: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V91, V93, V95, V97, 0x0, 0x0, 0x0, 0x0, V413, 0xd87574e0, V424, 0x20, V427, V428, V427, 0x0, V413, V431]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V91, V93, V95, V97, 0x0, 0x0, 0x0, 0x0, V413, 0xd87574e0, V424, 0x20, V427, V428, V427, 0x0, V413, V431]

================================

Block 0x4ad
[0x4ad:0x4b7]
---
Predecessors: [0x46f]
Successors: [0x4b8, 0x4c1]
---
0x4ad JUMPDEST
0x4ae POP
0x4af GAS
0x4b0 CALL
0x4b1 ISZERO
0x4b2 DUP1
0x4b3 ISZERO
0x4b4 PUSH2 0x4c1
0x4b7 JUMPI
---
0x4ad: JUMPDEST 
0x4af: V435 = GAS
0x4b0: V436 = CALL V435 V413 0x0 V427 V428 V427 0x20
0x4b1: V437 = ISZERO V436
0x4b3: V438 = ISZERO V437
0x4b4: V439 = 0x4c1
0x4b7: JUMPI 0x4c1 V438
---
Entry stack: [V13, 0x7f, V91, V93, V95, V97, 0x0, 0x0, 0x0, 0x0, V413, 0xd87574e0, V424, 0x20, V427, V428, V427, 0x0, V413, V431]
Stack pops: 7
Stack additions: [V437]
Exit stack: [V13, 0x7f, V91, V93, V95, V97, 0x0, 0x0, 0x0, 0x0, V413, 0xd87574e0, V424, V437]

================================

Block 0x4b8
[0x4b8:0x4c0]
---
Predecessors: [0x4ad]
Successors: []
---
0x4b8 RETURNDATASIZE
0x4b9 PUSH1 0x0
0x4bb DUP1
0x4bc RETURNDATACOPY
0x4bd RETURNDATASIZE
0x4be PUSH1 0x0
0x4c0 REVERT
---
0x4b8: V440 = RETURNDATASIZE
0x4b9: V441 = 0x0
0x4bc: RETURNDATACOPY 0x0 0x0 V440
0x4bd: V442 = RETURNDATASIZE
0x4be: V443 = 0x0
0x4c0: REVERT 0x0 V442
---
Entry stack: [V13, 0x7f, V91, V93, V95, V97, 0x0, 0x0, 0x0, 0x0, V413, 0xd87574e0, V424, V437]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V91, V93, V95, V97, 0x0, 0x0, 0x0, 0x0, V413, 0xd87574e0, V424, V437]

================================

Block 0x4c1
[0x4c1:0x4d2]
---
Predecessors: [0x4ad]
Successors: [0x4d3, 0x4d7]
---
0x4c1 JUMPDEST
0x4c2 POP
0x4c3 POP
0x4c4 POP
0x4c5 POP
0x4c6 PUSH1 0x40
0x4c8 MLOAD
0x4c9 RETURNDATASIZE
0x4ca PUSH1 0x20
0x4cc DUP2
0x4cd LT
0x4ce ISZERO
0x4cf PUSH2 0x4d7
0x4d2 JUMPI
---
0x4c1: JUMPDEST 
0x4c6: V444 = 0x40
0x4c8: V445 = M[0x40]
0x4c9: V446 = RETURNDATASIZE
0x4ca: V447 = 0x20
0x4cd: V448 = LT V446 0x20
0x4ce: V449 = ISZERO V448
0x4cf: V450 = 0x4d7
0x4d2: JUMPI 0x4d7 V449
---
Entry stack: [V13, 0x7f, V91, V93, V95, V97, 0x0, 0x0, 0x0, 0x0, V413, 0xd87574e0, V424, V437]
Stack pops: 4
Stack additions: [V445, V446]
Exit stack: [V13, 0x7f, V91, V93, V95, V97, 0x0, 0x0, 0x0, 0x0, V445, V446]

================================

Block 0x4d3
[0x4d3:0x4d6]
---
Predecessors: [0x4c1]
Successors: []
---
0x4d3 PUSH1 0x0
0x4d5 DUP1
0x4d6 REVERT
---
0x4d3: V451 = 0x0
0x4d6: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V91, V93, V95, V97, 0x0, 0x0, 0x0, 0x0, V445, V446]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V91, V93, V95, V97, 0x0, 0x0, 0x0, 0x0, V445, V446]

================================

Block 0x4d7
[0x4d7:0x4e3]
---
Predecessors: [0x4c1]
Successors: [0x4e4, 0x4e8]
---
0x4d7 JUMPDEST
0x4d8 POP
0x4d9 MLOAD
0x4da SWAP4
0x4db POP
0x4dc DUP6
0x4dd DUP5
0x4de LT
0x4df ISZERO
0x4e0 PUSH2 0x4e8
0x4e3 JUMPI
---
0x4d7: JUMPDEST 
0x4d9: V452 = M[V445]
0x4de: V453 = LT V452 V95
0x4df: V454 = ISZERO V453
0x4e0: V455 = 0x4e8
0x4e3: JUMPI 0x4e8 V454
---
Entry stack: [V13, 0x7f, V91, V93, V95, V97, 0x0, 0x0, 0x0, 0x0, V445, V446]
Stack pops: 8
Stack additions: [S7, S6, V452, S4, S3, S2]
Exit stack: [V13, 0x7f, V91, V93, V95, V97, V452, 0x0, 0x0, 0x0]

================================

Block 0x4e4
[0x4e4:0x4e7]
---
Predecessors: [0x4d7]
Successors: []
---
0x4e4 PUSH1 0x0
0x4e6 DUP1
0x4e7 REVERT
---
0x4e4: V456 = 0x0
0x4e7: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V91, V93, V95, V97, V452, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V91, V93, V95, V97, V452, 0x0, 0x0, 0x0]

================================

Block 0x4e8
[0x4e8:0x521]
---
Predecessors: [0x4d7]
Successors: [0x522, 0x526]
---
0x4e8 JUMPDEST
0x4e9 DUP8
0x4ea PUSH1 0x1
0x4ec PUSH1 0xa0
0x4ee PUSH1 0x2
0x4f0 EXP
0x4f1 SUB
0x4f2 AND
0x4f3 PUSH4 0x11a09ae7
0x4f8 PUSH1 0x40
0x4fa MLOAD
0x4fb DUP2
0x4fc PUSH4 0xffffffff
0x501 AND
0x502 PUSH1 0xe0
0x504 PUSH1 0x2
0x506 EXP
0x507 MUL
0x508 DUP2
0x509 MSTORE
0x50a PUSH1 0x4
0x50c ADD
0x50d PUSH1 0x20
0x50f PUSH1 0x40
0x511 MLOAD
0x512 DUP1
0x513 DUP4
0x514 SUB
0x515 DUP2
0x516 PUSH1 0x0
0x518 DUP8
0x519 DUP1
0x51a EXTCODESIZE
0x51b ISZERO
0x51c DUP1
0x51d ISZERO
0x51e PUSH2 0x526
0x521 JUMPI
---
0x4e8: JUMPDEST 
0x4ea: V457 = 0x1
0x4ec: V458 = 0xa0
0x4ee: V459 = 0x2
0x4f0: V460 = EXP 0x2 0xa0
0x4f1: V461 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f2: V462 = AND 0xffffffffffffffffffffffffffffffffffffffff V91
0x4f3: V463 = 0x11a09ae7
0x4f8: V464 = 0x40
0x4fa: V465 = M[0x40]
0x4fc: V466 = 0xffffffff
0x501: V467 = AND 0xffffffff 0x11a09ae7
0x502: V468 = 0xe0
0x504: V469 = 0x2
0x506: V470 = EXP 0x2 0xe0
0x507: V471 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x11a09ae7
0x509: M[V465] = 0x11a09ae700000000000000000000000000000000000000000000000000000000
0x50a: V472 = 0x4
0x50c: V473 = ADD 0x4 V465
0x50d: V474 = 0x20
0x50f: V475 = 0x40
0x511: V476 = M[0x40]
0x514: V477 = SUB V473 V476
0x516: V478 = 0x0
0x51a: V479 = EXTCODESIZE V462
0x51b: V480 = ISZERO V479
0x51d: V481 = ISZERO V480
0x51e: V482 = 0x526
0x521: JUMPI 0x526 V481
---
Entry stack: [V13, 0x7f, V91, V93, V95, V97, V452, 0x0, 0x0, 0x0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0, V462, 0x11a09ae7, V473, 0x20, V476, V477, V476, 0x0, V462, V480]
Exit stack: [V13, 0x7f, V91, V93, V95, V97, V452, 0x0, 0x0, 0x0, V462, 0x11a09ae7, V473, 0x20, V476, V477, V476, 0x0, V462, V480]

================================

Block 0x522
[0x522:0x525]
---
Predecessors: [0x4e8]
Successors: []
---
0x522 PUSH1 0x0
0x524 DUP1
0x525 REVERT
---
0x522: V483 = 0x0
0x525: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V91, V93, V95, V97, V452, 0x0, 0x0, 0x0, V462, 0x11a09ae7, V473, 0x20, V476, V477, V476, 0x0, V462, V480]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V91, V93, V95, V97, V452, 0x0, 0x0, 0x0, V462, 0x11a09ae7, V473, 0x20, V476, V477, V476, 0x0, V462, V480]

================================

Block 0x526
[0x526:0x530]
---
Predecessors: [0x4e8]
Successors: [0x531, 0x53a]
---
0x526 JUMPDEST
0x527 POP
0x528 GAS
0x529 CALL
0x52a ISZERO
0x52b DUP1
0x52c ISZERO
0x52d PUSH2 0x53a
0x530 JUMPI
---
0x526: JUMPDEST 
0x528: V484 = GAS
0x529: V485 = CALL V484 V462 0x0 V476 V477 V476 0x20
0x52a: V486 = ISZERO V485
0x52c: V487 = ISZERO V486
0x52d: V488 = 0x53a
0x530: JUMPI 0x53a V487
---
Entry stack: [V13, 0x7f, V91, V93, V95, V97, V452, 0x0, 0x0, 0x0, V462, 0x11a09ae7, V473, 0x20, V476, V477, V476, 0x0, V462, V480]
Stack pops: 7
Stack additions: [V486]
Exit stack: [V13, 0x7f, V91, V93, V95, V97, V452, 0x0, 0x0, 0x0, V462, 0x11a09ae7, V473, V486]

================================

Block 0x531
[0x531:0x539]
---
Predecessors: [0x526]
Successors: []
---
0x531 RETURNDATASIZE
0x532 PUSH1 0x0
0x534 DUP1
0x535 RETURNDATACOPY
0x536 RETURNDATASIZE
0x537 PUSH1 0x0
0x539 REVERT
---
0x531: V489 = RETURNDATASIZE
0x532: V490 = 0x0
0x535: RETURNDATACOPY 0x0 0x0 V489
0x536: V491 = RETURNDATASIZE
0x537: V492 = 0x0
0x539: REVERT 0x0 V491
---
Entry stack: [V13, 0x7f, V91, V93, V95, V97, V452, 0x0, 0x0, 0x0, V462, 0x11a09ae7, V473, V486]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V91, V93, V95, V97, V452, 0x0, 0x0, 0x0, V462, 0x11a09ae7, V473, V486]

================================

Block 0x53a
[0x53a:0x54b]
---
Predecessors: [0x526]
Successors: [0x54c, 0x550]
---
0x53a JUMPDEST
0x53b POP
0x53c POP
0x53d POP
0x53e POP
0x53f PUSH1 0x40
0x541 MLOAD
0x542 RETURNDATASIZE
0x543 PUSH1 0x20
0x545 DUP2
0x546 LT
0x547 ISZERO
0x548 PUSH2 0x550
0x54b JUMPI
---
0x53a: JUMPDEST 
0x53f: V493 = 0x40
0x541: V494 = M[0x40]
0x542: V495 = RETURNDATASIZE
0x543: V496 = 0x20
0x546: V497 = LT V495 0x20
0x547: V498 = ISZERO V497
0x548: V499 = 0x550
0x54b: JUMPI 0x550 V498
---
Entry stack: [V13, 0x7f, V91, V93, V95, V97, V452, 0x0, 0x0, 0x0, V462, 0x11a09ae7, V473, V486]
Stack pops: 4
Stack additions: [V494, V495]
Exit stack: [V13, 0x7f, V91, V93, V95, V97, V452, 0x0, 0x0, 0x0, V494, V495]

================================

Block 0x54c
[0x54c:0x54f]
---
Predecessors: [0x53a]
Successors: []
---
0x54c PUSH1 0x0
0x54e DUP1
0x54f REVERT
---
0x54c: V500 = 0x0
0x54f: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V91, V93, V95, V97, V452, 0x0, 0x0, 0x0, V494, V495]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V91, V93, V95, V97, V452, 0x0, 0x0, 0x0, V494, V495]

================================

Block 0x550
[0x550:0x55c]
---
Predecessors: [0x53a]
Successors: [0x55d, 0x561]
---
0x550 JUMPDEST
0x551 POP
0x552 MLOAD
0x553 SWAP3
0x554 POP
0x555 DUP5
0x556 DUP4
0x557 LT
0x558 ISZERO
0x559 PUSH2 0x561
0x55c JUMPI
---
0x550: JUMPDEST 
0x552: V501 = M[V494]
0x557: V502 = LT V501 V97
0x558: V503 = ISZERO V502
0x559: V504 = 0x561
0x55c: JUMPI 0x561 V503
---
Entry stack: [V13, 0x7f, V91, V93, V95, V97, V452, 0x0, 0x0, 0x0, V494, V495]
Stack pops: 7
Stack additions: [S6, S5, V501, S3, S2]
Exit stack: [V13, 0x7f, V91, V93, V95, V97, V452, V501, 0x0, 0x0]

================================

Block 0x55d
[0x55d:0x560]
---
Predecessors: [0x550]
Successors: []
---
0x55d PUSH1 0x0
0x55f DUP1
0x560 REVERT
---
0x55d: V505 = 0x0
0x560: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V91, V93, V95, V97, V452, V501, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V91, V93, V95, V97, V452, V501, 0x0, 0x0]

================================

Block 0x561
[0x561:0x56e]
---
Predecessors: [0x550]
Successors: [0x8bd]
---
0x561 JUMPDEST
0x562 PUSH1 0x1
0x564 SWAP1
0x565 SWAP3
0x566 ADD
0x567 SWAP2
0x568 PUSH2 0x56f
0x56b PUSH2 0x8bd
0x56e JUMP
---
0x561: JUMPDEST 
0x562: V506 = 0x1
0x566: V507 = ADD V501 0x1
0x568: V508 = 0x56f
0x56b: V509 = 0x8bd
0x56e: JUMP 0x8bd
---
Entry stack: [V13, 0x7f, V91, V93, V95, V97, V452, V501, 0x0, 0x0]
Stack pops: 3
Stack additions: [V507, S1, S0, 0x56f]
Exit stack: [V13, 0x7f, V91, V93, V95, V97, V452, V507, 0x0, 0x0, 0x56f]

================================

Block 0x56f
[0x56f:0x575]
---
Predecessors: [0x968]
Successors: [0x576]
---
0x56f JUMPDEST
0x570 SWAP2
0x571 POP
0x572 PUSH1 0x0
0x574 SWAP1
0x575 POP
---
0x56f: JUMPDEST 
0x572: V510 = 0x0
---
Entry stack: [V13, 0x7f, S8, S7, S6, S5, S4, S3, 0x0, 0x0, V873]
Stack pops: 3
Stack additions: [S0, 0x0]
Exit stack: [V13, 0x7f, S8, S7, S6, S5, S4, S3, V873, 0x0]

================================

Block 0x576
[0x576:0x580]
---
Predecessors: [0x56f, 0x5c3]
Successors: [0x2f2, 0x581]
---
0x576 JUMPDEST
0x577 PUSH2 0x3e8
0x57a DUP2
0x57b LT
0x57c ISZERO
0x57d PUSH2 0x2f2
0x580 JUMPI
---
0x576: JUMPDEST 
0x577: V511 = 0x3e8
0x57b: V512 = LT S0 0x3e8
0x57c: V513 = ISZERO V512
0x57d: V514 = 0x2f2
0x580: JUMPI 0x2f2 V513
---
Entry stack: [V13, 0x7f, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x7f, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x581
[0x581:0x590]
---
Predecessors: [0x576]
Successors: [0x591, 0x592]
---
0x581 PUSH2 0x5ae
0x584 PUSH1 0x4
0x586 DUP3
0x587 DUP2
0x588 SLOAD
0x589 DUP2
0x58a LT
0x58b ISZERO
0x58c ISZERO
0x58d PUSH2 0x592
0x590 JUMPI
---
0x581: V515 = 0x5ae
0x584: V516 = 0x4
0x588: V517 = S[0x4]
0x58a: V518 = LT S0 V517
0x58b: V519 = ISZERO V518
0x58c: V520 = ISZERO V519
0x58d: V521 = 0x592
0x590: JUMPI 0x592 V520
---
Entry stack: [V13, 0x7f, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x5ae, 0x4, S0]
Exit stack: [V13, 0x7f, S7, S6, S5, S4, S3, S2, S1, S0, 0x5ae, 0x4, S0]

================================

Block 0x591
[0x591:0x591]
---
Predecessors: [0x581]
Successors: []
---
0x591 INVALID
---
0x591: INVALID 
---
Entry stack: [V13, 0x7f, S10, S9, S8, S7, S6, S5, S4, S3, 0x5ae, 0x4, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, S10, S9, S8, S7, S6, S5, S4, S3, 0x5ae, 0x4, S0]

================================

Block 0x592
[0x592:0x5ad]
---
Predecessors: [0x581, 0x71f]
Successors: [0x974]
---
0x592 JUMPDEST
0x593 PUSH1 0x0
0x595 SWAP2
0x596 DUP3
0x597 MSTORE
0x598 PUSH1 0x20
0x59a SWAP1
0x59b SWAP2
0x59c SHA3
0x59d ADD
0x59e SLOAD
0x59f PUSH1 0x1
0x5a1 PUSH1 0xa0
0x5a3 PUSH1 0x2
0x5a5 EXP
0x5a6 SUB
0x5a7 AND
0x5a8 DUP4
0x5a9 DUP6
0x5aa PUSH2 0x974
0x5ad JUMP
---
0x592: JUMPDEST 
0x593: V522 = 0x0
0x597: M[0x0] = 0x4
0x598: V523 = 0x20
0x59c: V524 = SHA3 0x0 0x20
0x59d: V525 = ADD V524 S0
0x59e: V526 = S[V525]
0x59f: V527 = 0x1
0x5a1: V528 = 0xa0
0x5a3: V529 = 0x2
0x5a5: V530 = EXP 0x2 0xa0
0x5a6: V531 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5a7: V532 = AND 0xffffffffffffffffffffffffffffffffffffffff V526
0x5aa: V533 = 0x974
0x5ad: JUMP 0x974
---
Entry stack: [V13, 0x7f, S10, S9, S8, S7, S6, S5, S4, S3, {0x5ae, 0x730}, 0x4, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, V532, S4, S5]
Exit stack: [V13, 0x7f, S10, S9, S8, S7, S6, S5, S4, S3, {0x5ae, 0x730}, V532, S4, S5]

================================

Block 0x5ae
[0x5ae:0x5b3]
---
Predecessors: [0xa6f]
Successors: [0x5b4, 0x5c3]
---
0x5ae JUMPDEST
0x5af ISZERO
0x5b0 PUSH2 0x5c3
0x5b3 JUMPI
---
0x5ae: JUMPDEST 
0x5af: V534 = ISZERO V991
0x5b0: V535 = 0x5c3
0x5b3: JUMPI 0x5c3 V534
---
Entry stack: [V13, 0x7f, S8, S7, S6, S5, S4, S3, S2, S1, V991]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x7f, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x5b4
[0x5b4:0x5bd]
---
Predecessors: [0x5ae]
Successors: [0xab0]
---
0x5b4 PUSH2 0x5be
0x5b7 DUP9
0x5b8 DUP9
0x5b9 DUP4
0x5ba PUSH2 0xab0
0x5bd JUMP
---
0x5b4: V536 = 0x5be
0x5ba: V537 = 0xab0
0x5bd: JUMP 0xab0
---
Entry stack: [V13, 0x7f, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0, 0x5be, S7, S6, S0]
Exit stack: [V13, 0x7f, S7, S6, S5, S4, S3, S2, S1, S0, 0x5be, S7, S6, S0]

================================

Block 0x5be
[0x5be:0x5c2]
---
Predecessors: [0xbd1]
Successors: [0x2f2]
---
0x5be JUMPDEST
0x5bf PUSH2 0x2f2
0x5c2 JUMP
---
0x5be: JUMPDEST 
0x5bf: V538 = 0x2f2
0x5c2: JUMP 0x2f2
---
Entry stack: [V13, 0x7f, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x5c3
[0x5c3:0x5ca]
---
Predecessors: [0x5ae]
Successors: [0x576]
---
0x5c3 JUMPDEST
0x5c4 PUSH1 0x1
0x5c6 ADD
0x5c7 PUSH2 0x576
0x5ca JUMP
---
0x5c3: JUMPDEST 
0x5c4: V539 = 0x1
0x5c6: V540 = ADD 0x1 S0
0x5c7: V541 = 0x576
0x5ca: JUMP 0x576
---
Entry stack: [V13, 0x7f, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V540]
Exit stack: [V13, 0x7f, S7, S6, S5, S4, S3, S2, S1, V540]

================================

Block 0x5cb
[0x5cb:0x5e9]
---
Predecessors: [0x10f]
Successors: [0x5ea, 0x602]
---
0x5cb JUMPDEST
0x5cc CALLER
0x5cd PUSH1 0x0
0x5cf SWAP1
0x5d0 DUP2
0x5d1 MSTORE
0x5d2 PUSH1 0x20
0x5d4 DUP2
0x5d5 SWAP1
0x5d6 MSTORE
0x5d7 PUSH1 0x40
0x5d9 DUP2
0x5da SHA3
0x5db SLOAD
0x5dc DUP2
0x5dd SWAP1
0x5de DUP2
0x5df SWAP1
0x5e0 DUP2
0x5e1 SWAP1
0x5e2 PUSH1 0xff
0x5e4 AND
0x5e5 DUP1
0x5e6 PUSH2 0x602
0x5e9 JUMPI
---
0x5cb: JUMPDEST 
0x5cc: V542 = CALLER
0x5cd: V543 = 0x0
0x5d1: M[0x0] = V542
0x5d2: V544 = 0x20
0x5d6: M[0x20] = 0x0
0x5d7: V545 = 0x40
0x5da: V546 = SHA3 0x0 0x40
0x5db: V547 = S[V546]
0x5e2: V548 = 0xff
0x5e4: V549 = AND 0xff V547
0x5e6: V550 = 0x602
0x5e9: JUMPI 0x602 V549
---
Entry stack: [V13, 0x7f, V111, V113, V115, V117]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, V549]
Exit stack: [V13, 0x7f, V111, V113, V115, V117, 0x0, 0x0, 0x0, 0x0, V549]

================================

Block 0x5ea
[0x5ea:0x601]
---
Predecessors: [0x5cb]
Successors: [0x602]
---
0x5ea POP
0x5eb CALLER
0x5ec PUSH20 0x825d5d0df3b2d59f69cc673f041ca91a296b8183
0x601 EQ
---
0x5eb: V551 = CALLER
0x5ec: V552 = 0x825d5d0df3b2d59f69cc673f041ca91a296b8183
0x601: V553 = EQ 0x825d5d0df3b2d59f69cc673f041ca91a296b8183 V551
---
Entry stack: [V13, 0x7f, V111, V113, V115, V117, 0x0, 0x0, 0x0, 0x0, V549]
Stack pops: 1
Stack additions: [V553]
Exit stack: [V13, 0x7f, V111, V113, V115, V117, 0x0, 0x0, 0x0, 0x0, V553]

================================

Block 0x602
[0x602:0x608]
---
Predecessors: [0x5cb, 0x5ea]
Successors: [0x609, 0x60d]
---
0x602 JUMPDEST
0x603 ISZERO
0x604 ISZERO
0x605 PUSH2 0x60d
0x608 JUMPI
---
0x602: JUMPDEST 
0x603: V554 = ISZERO S0
0x604: V555 = ISZERO V554
0x605: V556 = 0x60d
0x608: JUMPI 0x60d V555
---
Entry stack: [V13, 0x7f, V111, V113, V115, V117, 0x0, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x7f, V111, V113, V115, V117, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x609
[0x609:0x60c]
---
Predecessors: [0x602]
Successors: []
---
0x609 PUSH1 0x0
0x60b DUP1
0x60c REVERT
---
0x609: V557 = 0x0
0x60c: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V111, V113, V115, V117, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V111, V113, V115, V117, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x60d
[0x60d:0x646]
---
Predecessors: [0x602]
Successors: [0x647, 0x64b]
---
0x60d JUMPDEST
0x60e DUP8
0x60f PUSH1 0x1
0x611 PUSH1 0xa0
0x613 PUSH1 0x2
0x615 EXP
0x616 SUB
0x617 AND
0x618 PUSH4 0xd87574e0
0x61d PUSH1 0x40
0x61f MLOAD
0x620 DUP2
0x621 PUSH4 0xffffffff
0x626 AND
0x627 PUSH1 0xe0
0x629 PUSH1 0x2
0x62b EXP
0x62c MUL
0x62d DUP2
0x62e MSTORE
0x62f PUSH1 0x4
0x631 ADD
0x632 PUSH1 0x20
0x634 PUSH1 0x40
0x636 MLOAD
0x637 DUP1
0x638 DUP4
0x639 SUB
0x63a DUP2
0x63b PUSH1 0x0
0x63d DUP8
0x63e DUP1
0x63f EXTCODESIZE
0x640 ISZERO
0x641 DUP1
0x642 ISZERO
0x643 PUSH2 0x64b
0x646 JUMPI
---
0x60d: JUMPDEST 
0x60f: V558 = 0x1
0x611: V559 = 0xa0
0x613: V560 = 0x2
0x615: V561 = EXP 0x2 0xa0
0x616: V562 = SUB 0x10000000000000000000000000000000000000000 0x1
0x617: V563 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x618: V564 = 0xd87574e0
0x61d: V565 = 0x40
0x61f: V566 = M[0x40]
0x621: V567 = 0xffffffff
0x626: V568 = AND 0xffffffff 0xd87574e0
0x627: V569 = 0xe0
0x629: V570 = 0x2
0x62b: V571 = EXP 0x2 0xe0
0x62c: V572 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd87574e0
0x62e: M[V566] = 0xd87574e000000000000000000000000000000000000000000000000000000000
0x62f: V573 = 0x4
0x631: V574 = ADD 0x4 V566
0x632: V575 = 0x20
0x634: V576 = 0x40
0x636: V577 = M[0x40]
0x639: V578 = SUB V574 V577
0x63b: V579 = 0x0
0x63f: V580 = EXTCODESIZE V563
0x640: V581 = ISZERO V580
0x642: V582 = ISZERO V581
0x643: V583 = 0x64b
0x646: JUMPI 0x64b V582
---
Entry stack: [V13, 0x7f, V111, V113, V115, V117, 0x0, 0x0, 0x0, 0x0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0, V563, 0xd87574e0, V574, 0x20, V577, V578, V577, 0x0, V563, V581]
Exit stack: [V13, 0x7f, V111, V113, V115, V117, 0x0, 0x0, 0x0, 0x0, V563, 0xd87574e0, V574, 0x20, V577, V578, V577, 0x0, V563, V581]

================================

Block 0x647
[0x647:0x64a]
---
Predecessors: [0x60d]
Successors: []
---
0x647 PUSH1 0x0
0x649 DUP1
0x64a REVERT
---
0x647: V584 = 0x0
0x64a: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V111, V113, V115, V117, 0x0, 0x0, 0x0, 0x0, V563, 0xd87574e0, V574, 0x20, V577, V578, V577, 0x0, V563, V581]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V111, V113, V115, V117, 0x0, 0x0, 0x0, 0x0, V563, 0xd87574e0, V574, 0x20, V577, V578, V577, 0x0, V563, V581]

================================

Block 0x64b
[0x64b:0x655]
---
Predecessors: [0x60d]
Successors: [0x656, 0x65f]
---
0x64b JUMPDEST
0x64c POP
0x64d GAS
0x64e CALL
0x64f ISZERO
0x650 DUP1
0x651 ISZERO
0x652 PUSH2 0x65f
0x655 JUMPI
---
0x64b: JUMPDEST 
0x64d: V585 = GAS
0x64e: V586 = CALL V585 V563 0x0 V577 V578 V577 0x20
0x64f: V587 = ISZERO V586
0x651: V588 = ISZERO V587
0x652: V589 = 0x65f
0x655: JUMPI 0x65f V588
---
Entry stack: [V13, 0x7f, V111, V113, V115, V117, 0x0, 0x0, 0x0, 0x0, V563, 0xd87574e0, V574, 0x20, V577, V578, V577, 0x0, V563, V581]
Stack pops: 7
Stack additions: [V587]
Exit stack: [V13, 0x7f, V111, V113, V115, V117, 0x0, 0x0, 0x0, 0x0, V563, 0xd87574e0, V574, V587]

================================

Block 0x656
[0x656:0x65e]
---
Predecessors: [0x64b]
Successors: []
---
0x656 RETURNDATASIZE
0x657 PUSH1 0x0
0x659 DUP1
0x65a RETURNDATACOPY
0x65b RETURNDATASIZE
0x65c PUSH1 0x0
0x65e REVERT
---
0x656: V590 = RETURNDATASIZE
0x657: V591 = 0x0
0x65a: RETURNDATACOPY 0x0 0x0 V590
0x65b: V592 = RETURNDATASIZE
0x65c: V593 = 0x0
0x65e: REVERT 0x0 V592
---
Entry stack: [V13, 0x7f, V111, V113, V115, V117, 0x0, 0x0, 0x0, 0x0, V563, 0xd87574e0, V574, V587]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V111, V113, V115, V117, 0x0, 0x0, 0x0, 0x0, V563, 0xd87574e0, V574, V587]

================================

Block 0x65f
[0x65f:0x670]
---
Predecessors: [0x64b]
Successors: [0x671, 0x675]
---
0x65f JUMPDEST
0x660 POP
0x661 POP
0x662 POP
0x663 POP
0x664 PUSH1 0x40
0x666 MLOAD
0x667 RETURNDATASIZE
0x668 PUSH1 0x20
0x66a DUP2
0x66b LT
0x66c ISZERO
0x66d PUSH2 0x675
0x670 JUMPI
---
0x65f: JUMPDEST 
0x664: V594 = 0x40
0x666: V595 = M[0x40]
0x667: V596 = RETURNDATASIZE
0x668: V597 = 0x20
0x66b: V598 = LT V596 0x20
0x66c: V599 = ISZERO V598
0x66d: V600 = 0x675
0x670: JUMPI 0x675 V599
---
Entry stack: [V13, 0x7f, V111, V113, V115, V117, 0x0, 0x0, 0x0, 0x0, V563, 0xd87574e0, V574, V587]
Stack pops: 4
Stack additions: [V595, V596]
Exit stack: [V13, 0x7f, V111, V113, V115, V117, 0x0, 0x0, 0x0, 0x0, V595, V596]

================================

Block 0x671
[0x671:0x674]
---
Predecessors: [0x65f]
Successors: []
---
0x671 PUSH1 0x0
0x673 DUP1
0x674 REVERT
---
0x671: V601 = 0x0
0x674: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V111, V113, V115, V117, 0x0, 0x0, 0x0, 0x0, V595, V596]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V111, V113, V115, V117, 0x0, 0x0, 0x0, 0x0, V595, V596]

================================

Block 0x675
[0x675:0x681]
---
Predecessors: [0x65f]
Successors: [0x682, 0x686]
---
0x675 JUMPDEST
0x676 POP
0x677 MLOAD
0x678 SWAP4
0x679 POP
0x67a DUP6
0x67b DUP5
0x67c LT
0x67d ISZERO
0x67e PUSH2 0x686
0x681 JUMPI
---
0x675: JUMPDEST 
0x677: V602 = M[V595]
0x67c: V603 = LT V602 V115
0x67d: V604 = ISZERO V603
0x67e: V605 = 0x686
0x681: JUMPI 0x686 V604
---
Entry stack: [V13, 0x7f, V111, V113, V115, V117, 0x0, 0x0, 0x0, 0x0, V595, V596]
Stack pops: 8
Stack additions: [S7, S6, V602, S4, S3, S2]
Exit stack: [V13, 0x7f, V111, V113, V115, V117, V602, 0x0, 0x0, 0x0]

================================

Block 0x682
[0x682:0x685]
---
Predecessors: [0x675]
Successors: []
---
0x682 PUSH1 0x0
0x684 DUP1
0x685 REVERT
---
0x682: V606 = 0x0
0x685: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V111, V113, V115, V117, V602, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V111, V113, V115, V117, V602, 0x0, 0x0, 0x0]

================================

Block 0x686
[0x686:0x6bf]
---
Predecessors: [0x675]
Successors: [0x6c0, 0x6c4]
---
0x686 JUMPDEST
0x687 DUP8
0x688 PUSH1 0x1
0x68a PUSH1 0xa0
0x68c PUSH1 0x2
0x68e EXP
0x68f SUB
0x690 AND
0x691 PUSH4 0x11a09ae7
0x696 PUSH1 0x40
0x698 MLOAD
0x699 DUP2
0x69a PUSH4 0xffffffff
0x69f AND
0x6a0 PUSH1 0xe0
0x6a2 PUSH1 0x2
0x6a4 EXP
0x6a5 MUL
0x6a6 DUP2
0x6a7 MSTORE
0x6a8 PUSH1 0x4
0x6aa ADD
0x6ab PUSH1 0x20
0x6ad PUSH1 0x40
0x6af MLOAD
0x6b0 DUP1
0x6b1 DUP4
0x6b2 SUB
0x6b3 DUP2
0x6b4 PUSH1 0x0
0x6b6 DUP8
0x6b7 DUP1
0x6b8 EXTCODESIZE
0x6b9 ISZERO
0x6ba DUP1
0x6bb ISZERO
0x6bc PUSH2 0x6c4
0x6bf JUMPI
---
0x686: JUMPDEST 
0x688: V607 = 0x1
0x68a: V608 = 0xa0
0x68c: V609 = 0x2
0x68e: V610 = EXP 0x2 0xa0
0x68f: V611 = SUB 0x10000000000000000000000000000000000000000 0x1
0x690: V612 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x691: V613 = 0x11a09ae7
0x696: V614 = 0x40
0x698: V615 = M[0x40]
0x69a: V616 = 0xffffffff
0x69f: V617 = AND 0xffffffff 0x11a09ae7
0x6a0: V618 = 0xe0
0x6a2: V619 = 0x2
0x6a4: V620 = EXP 0x2 0xe0
0x6a5: V621 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x11a09ae7
0x6a7: M[V615] = 0x11a09ae700000000000000000000000000000000000000000000000000000000
0x6a8: V622 = 0x4
0x6aa: V623 = ADD 0x4 V615
0x6ab: V624 = 0x20
0x6ad: V625 = 0x40
0x6af: V626 = M[0x40]
0x6b2: V627 = SUB V623 V626
0x6b4: V628 = 0x0
0x6b8: V629 = EXTCODESIZE V612
0x6b9: V630 = ISZERO V629
0x6bb: V631 = ISZERO V630
0x6bc: V632 = 0x6c4
0x6bf: JUMPI 0x6c4 V631
---
Entry stack: [V13, 0x7f, V111, V113, V115, V117, V602, 0x0, 0x0, 0x0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0, V612, 0x11a09ae7, V623, 0x20, V626, V627, V626, 0x0, V612, V630]
Exit stack: [V13, 0x7f, V111, V113, V115, V117, V602, 0x0, 0x0, 0x0, V612, 0x11a09ae7, V623, 0x20, V626, V627, V626, 0x0, V612, V630]

================================

Block 0x6c0
[0x6c0:0x6c3]
---
Predecessors: [0x686]
Successors: []
---
0x6c0 PUSH1 0x0
0x6c2 DUP1
0x6c3 REVERT
---
0x6c0: V633 = 0x0
0x6c3: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V111, V113, V115, V117, V602, 0x0, 0x0, 0x0, V612, 0x11a09ae7, V623, 0x20, V626, V627, V626, 0x0, V612, V630]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V111, V113, V115, V117, V602, 0x0, 0x0, 0x0, V612, 0x11a09ae7, V623, 0x20, V626, V627, V626, 0x0, V612, V630]

================================

Block 0x6c4
[0x6c4:0x6ce]
---
Predecessors: [0x686]
Successors: [0x6cf, 0x6d8]
---
0x6c4 JUMPDEST
0x6c5 POP
0x6c6 GAS
0x6c7 CALL
0x6c8 ISZERO
0x6c9 DUP1
0x6ca ISZERO
0x6cb PUSH2 0x6d8
0x6ce JUMPI
---
0x6c4: JUMPDEST 
0x6c6: V634 = GAS
0x6c7: V635 = CALL V634 V612 0x0 V626 V627 V626 0x20
0x6c8: V636 = ISZERO V635
0x6ca: V637 = ISZERO V636
0x6cb: V638 = 0x6d8
0x6ce: JUMPI 0x6d8 V637
---
Entry stack: [V13, 0x7f, V111, V113, V115, V117, V602, 0x0, 0x0, 0x0, V612, 0x11a09ae7, V623, 0x20, V626, V627, V626, 0x0, V612, V630]
Stack pops: 7
Stack additions: [V636]
Exit stack: [V13, 0x7f, V111, V113, V115, V117, V602, 0x0, 0x0, 0x0, V612, 0x11a09ae7, V623, V636]

================================

Block 0x6cf
[0x6cf:0x6d7]
---
Predecessors: [0x6c4]
Successors: []
---
0x6cf RETURNDATASIZE
0x6d0 PUSH1 0x0
0x6d2 DUP1
0x6d3 RETURNDATACOPY
0x6d4 RETURNDATASIZE
0x6d5 PUSH1 0x0
0x6d7 REVERT
---
0x6cf: V639 = RETURNDATASIZE
0x6d0: V640 = 0x0
0x6d3: RETURNDATACOPY 0x0 0x0 V639
0x6d4: V641 = RETURNDATASIZE
0x6d5: V642 = 0x0
0x6d7: REVERT 0x0 V641
---
Entry stack: [V13, 0x7f, V111, V113, V115, V117, V602, 0x0, 0x0, 0x0, V612, 0x11a09ae7, V623, V636]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V111, V113, V115, V117, V602, 0x0, 0x0, 0x0, V612, 0x11a09ae7, V623, V636]

================================

Block 0x6d8
[0x6d8:0x6e9]
---
Predecessors: [0x6c4]
Successors: [0x6ea, 0x6ee]
---
0x6d8 JUMPDEST
0x6d9 POP
0x6da POP
0x6db POP
0x6dc POP
0x6dd PUSH1 0x40
0x6df MLOAD
0x6e0 RETURNDATASIZE
0x6e1 PUSH1 0x20
0x6e3 DUP2
0x6e4 LT
0x6e5 ISZERO
0x6e6 PUSH2 0x6ee
0x6e9 JUMPI
---
0x6d8: JUMPDEST 
0x6dd: V643 = 0x40
0x6df: V644 = M[0x40]
0x6e0: V645 = RETURNDATASIZE
0x6e1: V646 = 0x20
0x6e4: V647 = LT V645 0x20
0x6e5: V648 = ISZERO V647
0x6e6: V649 = 0x6ee
0x6e9: JUMPI 0x6ee V648
---
Entry stack: [V13, 0x7f, V111, V113, V115, V117, V602, 0x0, 0x0, 0x0, V612, 0x11a09ae7, V623, V636]
Stack pops: 4
Stack additions: [V644, V645]
Exit stack: [V13, 0x7f, V111, V113, V115, V117, V602, 0x0, 0x0, 0x0, V644, V645]

================================

Block 0x6ea
[0x6ea:0x6ed]
---
Predecessors: [0x6d8]
Successors: []
---
0x6ea PUSH1 0x0
0x6ec DUP1
0x6ed REVERT
---
0x6ea: V650 = 0x0
0x6ed: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V111, V113, V115, V117, V602, 0x0, 0x0, 0x0, V644, V645]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V111, V113, V115, V117, V602, 0x0, 0x0, 0x0, V644, V645]

================================

Block 0x6ee
[0x6ee:0x6fa]
---
Predecessors: [0x6d8]
Successors: [0x6fb, 0x6ff]
---
0x6ee JUMPDEST
0x6ef POP
0x6f0 MLOAD
0x6f1 SWAP3
0x6f2 POP
0x6f3 DUP5
0x6f4 DUP4
0x6f5 LT
0x6f6 ISZERO
0x6f7 PUSH2 0x6ff
0x6fa JUMPI
---
0x6ee: JUMPDEST 
0x6f0: V651 = M[V644]
0x6f5: V652 = LT V651 V117
0x6f6: V653 = ISZERO V652
0x6f7: V654 = 0x6ff
0x6fa: JUMPI 0x6ff V653
---
Entry stack: [V13, 0x7f, V111, V113, V115, V117, V602, 0x0, 0x0, 0x0, V644, V645]
Stack pops: 7
Stack additions: [S6, S5, V651, S3, S2]
Exit stack: [V13, 0x7f, V111, V113, V115, V117, V602, V651, 0x0, 0x0]

================================

Block 0x6fb
[0x6fb:0x6fe]
---
Predecessors: [0x6ee]
Successors: []
---
0x6fb PUSH1 0x0
0x6fd DUP1
0x6fe REVERT
---
0x6fb: V655 = 0x0
0x6fe: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V111, V113, V115, V117, V602, V651, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V111, V113, V115, V117, V602, V651, 0x0, 0x0]

================================

Block 0x6ff
[0x6ff:0x70c]
---
Predecessors: [0x6ee]
Successors: [0x8bd]
---
0x6ff JUMPDEST
0x700 PUSH1 0x1
0x702 SWAP1
0x703 SWAP3
0x704 ADD
0x705 SWAP2
0x706 PUSH2 0x70d
0x709 PUSH2 0x8bd
0x70c JUMP
---
0x6ff: JUMPDEST 
0x700: V656 = 0x1
0x704: V657 = ADD V651 0x1
0x706: V658 = 0x70d
0x709: V659 = 0x8bd
0x70c: JUMP 0x8bd
---
Entry stack: [V13, 0x7f, V111, V113, V115, V117, V602, V651, 0x0, 0x0]
Stack pops: 3
Stack additions: [V657, S1, S0, 0x70d]
Exit stack: [V13, 0x7f, V111, V113, V115, V117, V602, V657, 0x0, 0x0, 0x70d]

================================

Block 0x70d
[0x70d:0x713]
---
Predecessors: [0x968]
Successors: [0x714]
---
0x70d JUMPDEST
0x70e SWAP2
0x70f POP
0x710 PUSH1 0x0
0x712 SWAP1
0x713 POP
---
0x70d: JUMPDEST 
0x710: V660 = 0x0
---
Entry stack: [V13, 0x7f, S8, S7, S6, S5, S4, S3, 0x0, 0x0, V873]
Stack pops: 3
Stack additions: [S0, 0x0]
Exit stack: [V13, 0x7f, S8, S7, S6, S5, S4, S3, V873, 0x0]

================================

Block 0x714
[0x714:0x71e]
---
Predecessors: [0x70d, 0x740]
Successors: [0x2f2, 0x71f]
---
0x714 JUMPDEST
0x715 PUSH2 0x3e8
0x718 DUP2
0x719 LT
0x71a ISZERO
0x71b PUSH2 0x2f2
0x71e JUMPI
---
0x714: JUMPDEST 
0x715: V661 = 0x3e8
0x719: V662 = LT S0 0x3e8
0x71a: V663 = ISZERO V662
0x71b: V664 = 0x2f2
0x71e: JUMPI 0x2f2 V663
---
Entry stack: [V13, 0x7f, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x7f, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x71f
[0x71f:0x72e]
---
Predecessors: [0x714]
Successors: [0x592, 0x72f]
---
0x71f PUSH2 0x730
0x722 PUSH1 0x4
0x724 DUP3
0x725 DUP2
0x726 SLOAD
0x727 DUP2
0x728 LT
0x729 ISZERO
0x72a ISZERO
0x72b PUSH2 0x592
0x72e JUMPI
---
0x71f: V665 = 0x730
0x722: V666 = 0x4
0x726: V667 = S[0x4]
0x728: V668 = LT S0 V667
0x729: V669 = ISZERO V668
0x72a: V670 = ISZERO V669
0x72b: V671 = 0x592
0x72e: JUMPI 0x592 V670
---
Entry stack: [V13, 0x7f, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x730, 0x4, S0]
Exit stack: [V13, 0x7f, S7, S6, S5, S4, S3, S2, S1, S0, 0x730, 0x4, S0]

================================

Block 0x72f
[0x72f:0x72f]
---
Predecessors: [0x71f]
Successors: []
---
0x72f INVALID
---
0x72f: INVALID 
---
Entry stack: [V13, 0x7f, S10, S9, S8, S7, S6, S5, S4, S3, 0x730, 0x4, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, S10, S9, S8, S7, S6, S5, S4, S3, 0x730, 0x4, S0]

================================

Block 0x730
[0x730:0x735]
---
Predecessors: [0xa6f]
Successors: [0x736, 0x740]
---
0x730 JUMPDEST
0x731 ISZERO
0x732 PUSH2 0x740
0x735 JUMPI
---
0x730: JUMPDEST 
0x731: V672 = ISZERO V991
0x732: V673 = 0x740
0x735: JUMPI 0x740 V672
---
Entry stack: [V13, 0x7f, S8, S7, S6, S5, S4, S3, S2, S1, V991]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x7f, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x736
[0x736:0x73f]
---
Predecessors: [0x730]
Successors: [0xc07]
---
0x736 PUSH2 0x5be
0x739 DUP9
0x73a DUP9
0x73b DUP4
0x73c PUSH2 0xc07
0x73f JUMP
---
0x736: V674 = 0x5be
0x73c: V675 = 0xc07
0x73f: JUMP 0xc07
---
Entry stack: [V13, 0x7f, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0, 0x5be, S7, S6, S0]
Exit stack: [V13, 0x7f, S7, S6, S5, S4, S3, S2, S1, S0, 0x5be, S7, S6, S0]

================================

Block 0x740
[0x740:0x747]
---
Predecessors: [0x730]
Successors: [0x714]
---
0x740 JUMPDEST
0x741 PUSH1 0x1
0x743 ADD
0x744 PUSH2 0x714
0x747 JUMP
---
0x740: JUMPDEST 
0x741: V676 = 0x1
0x743: V677 = ADD 0x1 S0
0x744: V678 = 0x714
0x747: JUMP 0x714
---
Entry stack: [V13, 0x7f, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V677]
Exit stack: [V13, 0x7f, S7, S6, S5, S4, S3, S2, S1, V677]

================================

Block 0x748
[0x748:0x78c]
---
Predecessors: [0x12d]
Successors: [0x3ba, 0x78d]
---
0x748 JUMPDEST
0x749 DUP2
0x74a PUSH1 0x1
0x74c PUSH1 0xa0
0x74e PUSH1 0x2
0x750 EXP
0x751 SUB
0x752 AND
0x753 PUSH4 0xcd133c8f
0x758 CALLVALUE
0x759 DUP4
0x75a PUSH1 0x40
0x75c MLOAD
0x75d DUP4
0x75e PUSH4 0xffffffff
0x763 AND
0x764 PUSH1 0xe0
0x766 PUSH1 0x2
0x768 EXP
0x769 MUL
0x76a DUP2
0x76b MSTORE
0x76c PUSH1 0x4
0x76e ADD
0x76f DUP1
0x770 DUP3
0x771 DUP2
0x772 MSTORE
0x773 PUSH1 0x20
0x775 ADD
0x776 SWAP2
0x777 POP
0x778 POP
0x779 PUSH1 0x0
0x77b PUSH1 0x40
0x77d MLOAD
0x77e DUP1
0x77f DUP4
0x780 SUB
0x781 DUP2
0x782 DUP6
0x783 DUP9
0x784 DUP1
0x785 EXTCODESIZE
0x786 ISZERO
0x787 DUP1
0x788 ISZERO
0x789 PUSH2 0x3ba
0x78c JUMPI
---
0x748: JUMPDEST 
0x74a: V679 = 0x1
0x74c: V680 = 0xa0
0x74e: V681 = 0x2
0x750: V682 = EXP 0x2 0xa0
0x751: V683 = SUB 0x10000000000000000000000000000000000000000 0x1
0x752: V684 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x753: V685 = 0xcd133c8f
0x758: V686 = CALLVALUE
0x75a: V687 = 0x40
0x75c: V688 = M[0x40]
0x75e: V689 = 0xffffffff
0x763: V690 = AND 0xffffffff 0xcd133c8f
0x764: V691 = 0xe0
0x766: V692 = 0x2
0x768: V693 = EXP 0x2 0xe0
0x769: V694 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xcd133c8f
0x76b: M[V688] = 0xcd133c8f00000000000000000000000000000000000000000000000000000000
0x76c: V695 = 0x4
0x76e: V696 = ADD 0x4 V688
0x772: M[V696] = V129
0x773: V697 = 0x20
0x775: V698 = ADD 0x20 V696
0x779: V699 = 0x0
0x77b: V700 = 0x40
0x77d: V701 = M[0x40]
0x780: V702 = SUB V698 V701
0x785: V703 = EXTCODESIZE V684
0x786: V704 = ISZERO V703
0x788: V705 = ISZERO V704
0x789: V706 = 0x3ba
0x78c: JUMPI 0x3ba V705
---
Entry stack: [V13, 0x7f, V127, V129]
Stack pops: 2
Stack additions: [S1, S0, V684, 0xcd133c8f, V686, V698, 0x0, V701, V702, V701, V686, V684, V704]
Exit stack: [V13, 0x7f, V127, V129, V684, 0xcd133c8f, V686, V698, 0x0, V701, V702, V701, V686, V684, V704]

================================

Block 0x78d
[0x78d:0x790]
---
Predecessors: [0x748]
Successors: []
---
0x78d PUSH1 0x0
0x78f DUP1
0x790 REVERT
---
0x78d: V707 = 0x0
0x790: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V127, V129, V684, 0xcd133c8f, V686, V698, 0x0, V701, V702, V701, V686, V684, V704]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V127, V129, V684, 0xcd133c8f, V686, V698, 0x0, V701, V702, V701, V686, V684, V704]

================================

Block 0x791
[0x791:0x7a9]
---
Predecessors: [0x150]
Successors: [0x7aa, 0x7c2]
---
0x791 JUMPDEST
0x792 CALLER
0x793 PUSH1 0x0
0x795 SWAP1
0x796 DUP2
0x797 MSTORE
0x798 PUSH1 0x20
0x79a DUP2
0x79b SWAP1
0x79c MSTORE
0x79d PUSH1 0x40
0x79f DUP2
0x7a0 SHA3
0x7a1 SLOAD
0x7a2 PUSH1 0xff
0x7a4 AND
0x7a5 DUP1
0x7a6 PUSH2 0x7c2
0x7a9 JUMPI
---
0x791: JUMPDEST 
0x792: V708 = CALLER
0x793: V709 = 0x0
0x797: M[0x0] = V708
0x798: V710 = 0x20
0x79c: M[0x20] = 0x0
0x79d: V711 = 0x40
0x7a0: V712 = SHA3 0x0 0x40
0x7a1: V713 = S[V712]
0x7a2: V714 = 0xff
0x7a4: V715 = AND 0xff V713
0x7a6: V716 = 0x7c2
0x7a9: JUMPI 0x7c2 V715
---
Entry stack: [V13, 0x7f, V137, V139]
Stack pops: 0
Stack additions: [0x0, V715]
Exit stack: [V13, 0x7f, V137, V139, 0x0, V715]

================================

Block 0x7aa
[0x7aa:0x7c1]
---
Predecessors: [0x791]
Successors: [0x7c2]
---
0x7aa POP
0x7ab CALLER
0x7ac PUSH20 0x825d5d0df3b2d59f69cc673f041ca91a296b8183
0x7c1 EQ
---
0x7ab: V717 = CALLER
0x7ac: V718 = 0x825d5d0df3b2d59f69cc673f041ca91a296b8183
0x7c1: V719 = EQ 0x825d5d0df3b2d59f69cc673f041ca91a296b8183 V717
---
Entry stack: [V13, 0x7f, V137, V139, 0x0, V715]
Stack pops: 1
Stack additions: [V719]
Exit stack: [V13, 0x7f, V137, V139, 0x0, V719]

================================

Block 0x7c2
[0x7c2:0x7c8]
---
Predecessors: [0x791, 0x7aa]
Successors: [0x7c9, 0x7cd]
---
0x7c2 JUMPDEST
0x7c3 ISZERO
0x7c4 ISZERO
0x7c5 PUSH2 0x7cd
0x7c8 JUMPI
---
0x7c2: JUMPDEST 
0x7c3: V720 = ISZERO S0
0x7c4: V721 = ISZERO V720
0x7c5: V722 = 0x7cd
0x7c8: JUMPI 0x7cd V721
---
Entry stack: [V13, 0x7f, V137, V139, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x7f, V137, V139, 0x0]

================================

Block 0x7c9
[0x7c9:0x7cc]
---
Predecessors: [0x7c2]
Successors: []
---
0x7c9 PUSH1 0x0
0x7cb DUP1
0x7cc REVERT
---
0x7c9: V723 = 0x0
0x7cc: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V137, V139, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V137, V139, 0x0]

================================

Block 0x7cd
[0x7cd:0x7cf]
---
Predecessors: [0x7c2]
Successors: [0x7d0]
---
0x7cd JUMPDEST
0x7ce POP
0x7cf DUP2
---
0x7cd: JUMPDEST 
---
Entry stack: [V13, 0x7f, V137, V139, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S2]
Exit stack: [V13, 0x7f, V137, V139, V137]

================================

Block 0x7d0
[0x7d0:0x7d8]
---
Predecessors: [0x7cd, 0x831]
Successors: [0x7d9, 0x86f]
---
0x7d0 JUMPDEST
0x7d1 DUP2
0x7d2 DUP2
0x7d3 LT
0x7d4 ISZERO
0x7d5 PUSH2 0x86f
0x7d8 JUMPI
---
0x7d0: JUMPDEST 
0x7d3: V724 = LT S0 S1
0x7d4: V725 = ISZERO V724
0x7d5: V726 = 0x86f
0x7d8: JUMPI 0x86f V725
---
Entry stack: [V13, 0x7f, S14, S13, S12, S11, S10, S9, S8, S7, 0x5be, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x7f, S14, S13, S12, S11, S10, S9, S8, S7, 0x5be, S5, S4, S3, S2, S1, S0]

================================

Block 0x7d9
[0x7d9:0x7e8]
---
Predecessors: [0x7d0]
Successors: [0x7e9, 0x7ea]
---
0x7d9 PUSH2 0x823
0x7dc PUSH1 0x2
0x7de DUP3
0x7df DUP2
0x7e0 SLOAD
0x7e1 DUP2
0x7e2 LT
0x7e3 ISZERO
0x7e4 ISZERO
0x7e5 PUSH2 0x7ea
0x7e8 JUMPI
---
0x7d9: V727 = 0x823
0x7dc: V728 = 0x2
0x7e0: V729 = S[0x2]
0x7e2: V730 = LT S0 V729
0x7e3: V731 = ISZERO V730
0x7e4: V732 = ISZERO V731
0x7e5: V733 = 0x7ea
0x7e8: JUMPI 0x7ea V732
---
Entry stack: [V13, 0x7f, S14, S13, S12, S11, S10, S9, S8, S7, 0x5be, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x823, 0x2, S0]
Exit stack: [V13, 0x7f, S14, S13, S12, S11, S10, S9, S8, S7, 0x5be, S5, S4, S3, S2, S1, S0, 0x823, 0x2, S0]

================================

Block 0x7e9
[0x7e9:0x7e9]
---
Predecessors: [0x7d9]
Successors: []
---
0x7e9 INVALID
---
0x7e9: INVALID 
---
Entry stack: [V13, 0x7f, S17, S16, S15, S14, S13, S12, S11, S10, 0x5be, S8, S7, S6, S5, S4, S3, 0x823, 0x2, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, S17, S16, S15, S14, S13, S12, S11, S10, 0x5be, S8, S7, S6, S5, S4, S3, 0x823, 0x2, S0]

================================

Block 0x7ea
[0x7ea:0x80e]
---
Predecessors: [0x7d9]
Successors: [0x80f, 0x810]
---
0x7ea JUMPDEST
0x7eb PUSH1 0x0
0x7ed SWAP2
0x7ee DUP3
0x7ef MSTORE
0x7f0 PUSH1 0x20
0x7f2 SWAP1
0x7f3 SWAP2
0x7f4 SHA3
0x7f5 ADD
0x7f6 SLOAD
0x7f7 PUSH1 0x3
0x7f9 DUP1
0x7fa SLOAD
0x7fb PUSH1 0x1
0x7fd PUSH1 0xa0
0x7ff PUSH1 0x2
0x801 EXP
0x802 SUB
0x803 SWAP1
0x804 SWAP3
0x805 AND
0x806 SWAP2
0x807 DUP5
0x808 SWAP1
0x809 DUP2
0x80a LT
0x80b PUSH2 0x810
0x80e JUMPI
---
0x7ea: JUMPDEST 
0x7eb: V734 = 0x0
0x7ef: M[0x0] = 0x2
0x7f0: V735 = 0x20
0x7f4: V736 = SHA3 0x0 0x20
0x7f5: V737 = ADD V736 S0
0x7f6: V738 = S[V737]
0x7f7: V739 = 0x3
0x7fa: V740 = S[0x3]
0x7fb: V741 = 0x1
0x7fd: V742 = 0xa0
0x7ff: V743 = 0x2
0x801: V744 = EXP 0x2 0xa0
0x802: V745 = SUB 0x10000000000000000000000000000000000000000 0x1
0x805: V746 = AND V738 0xffffffffffffffffffffffffffffffffffffffff
0x80a: V747 = LT S3 V740
0x80b: V748 = 0x810
0x80e: JUMPI 0x810 V747
---
Entry stack: [V13, 0x7f, S17, S16, S15, S14, S13, S12, S11, S10, 0x5be, S8, S7, S6, S5, S4, S3, 0x823, 0x2, S0]
Stack pops: 4
Stack additions: [S3, S2, V746, 0x3, S3]
Exit stack: [V13, 0x7f, S17, S16, S15, S14, S13, S12, S11, S10, 0x5be, S8, S7, S6, S5, S4, S3, 0x823, V746, 0x3, S3]

================================

Block 0x80f
[0x80f:0x80f]
---
Predecessors: [0x7ea]
Successors: []
---
0x80f INVALID
---
0x80f: INVALID 
---
Entry stack: [V13, 0x7f, S18, S17, S16, S15, S14, S13, S12, S11, 0x5be, S9, S8, S7, S6, S5, S4, 0x823, V746, 0x3, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, S18, S17, S16, S15, S14, S13, S12, S11, 0x5be, S9, S8, S7, S6, S5, S4, 0x823, V746, 0x3, S0]

================================

Block 0x810
[0x810:0x822]
---
Predecessors: [0x7ea]
Successors: [0xc24]
---
0x810 JUMPDEST
0x811 SWAP1
0x812 PUSH1 0x0
0x814 MSTORE
0x815 PUSH1 0x20
0x817 PUSH1 0x0
0x819 SHA3
0x81a ADD
0x81b SLOAD
0x81c PUSH1 0x1
0x81e ADD
0x81f PUSH2 0xc24
0x822 JUMP
---
0x810: JUMPDEST 
0x812: V749 = 0x0
0x814: M[0x0] = 0x3
0x815: V750 = 0x20
0x817: V751 = 0x0
0x819: V752 = SHA3 0x0 0x20
0x81a: V753 = ADD V752 S0
0x81b: V754 = S[V753]
0x81c: V755 = 0x1
0x81e: V756 = ADD 0x1 V754
0x81f: V757 = 0xc24
0x822: JUMP 0xc24
---
Entry stack: [V13, 0x7f, S18, S17, S16, S15, S14, S13, S12, S11, 0x5be, S9, S8, S7, S6, S5, S4, 0x823, V746, 0x3, S0]
Stack pops: 2
Stack additions: [V756]
Exit stack: [V13, 0x7f, S18, S17, S16, S15, S14, S13, S12, S11, 0x5be, S9, S8, S7, S6, S5, S4, 0x823, V746, V756]

================================

Block 0x823
[0x823:0x82f]
---
Predecessors: [0xd1a]
Successors: [0x830, 0x831]
---
0x823 JUMPDEST
0x824 PUSH1 0x4
0x826 DUP1
0x827 SLOAD
0x828 DUP4
0x829 SWAP1
0x82a DUP2
0x82b LT
0x82c PUSH2 0x831
0x82f JUMPI
---
0x823: JUMPDEST 
0x824: V758 = 0x4
0x827: V759 = S[0x4]
0x82b: V760 = LT S1 V759
0x82c: V761 = 0x831
0x82f: JUMPI 0x831 V760
---
Entry stack: [V13, 0x7f, S15, S14, S13, S12, S11, S10, S9, S8, 0x5be, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x4, S1]
Exit stack: [V13, 0x7f, S15, S14, S13, S12, S11, S10, S9, S8, 0x5be, S6, S5, S4, S3, S2, S1, S0, 0x4, S1]

================================

Block 0x830
[0x830:0x830]
---
Predecessors: [0x823]
Successors: []
---
0x830 INVALID
---
0x830: INVALID 
---
Entry stack: [V13, 0x7f, S17, S16, S15, S14, S13, S12, S11, S10, 0x5be, S8, S7, S6, S5, S4, S3, S2, 0x4, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, S17, S16, S15, S14, S13, S12, S11, S10, 0x5be, S8, S7, S6, S5, S4, S3, S2, 0x4, S0]

================================

Block 0x831
[0x831:0x86e]
---
Predecessors: [0x823]
Successors: [0x7d0]
---
0x831 JUMPDEST
0x832 PUSH1 0x0
0x834 SWAP2
0x835 DUP3
0x836 MSTORE
0x837 PUSH1 0x20
0x839 SWAP1
0x83a SWAP2
0x83b SHA3
0x83c ADD
0x83d DUP1
0x83e SLOAD
0x83f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x854 NOT
0x855 AND
0x856 PUSH1 0x1
0x858 PUSH1 0xa0
0x85a PUSH1 0x2
0x85c EXP
0x85d SUB
0x85e SWAP3
0x85f SWAP1
0x860 SWAP3
0x861 AND
0x862 SWAP2
0x863 SWAP1
0x864 SWAP2
0x865 OR
0x866 SWAP1
0x867 SSTORE
0x868 PUSH1 0x1
0x86a ADD
0x86b PUSH2 0x7d0
0x86e JUMP
---
0x831: JUMPDEST 
0x832: V762 = 0x0
0x836: M[0x0] = 0x4
0x837: V763 = 0x20
0x83b: V764 = SHA3 0x0 0x20
0x83c: V765 = ADD V764 S0
0x83e: V766 = S[V765]
0x83f: V767 = 0xffffffffffffffffffffffffffffffffffffffff
0x854: V768 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x855: V769 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V766
0x856: V770 = 0x1
0x858: V771 = 0xa0
0x85a: V772 = 0x2
0x85c: V773 = EXP 0x2 0xa0
0x85d: V774 = SUB 0x10000000000000000000000000000000000000000 0x1
0x861: V775 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x865: V776 = OR V775 V769
0x867: S[V765] = V776
0x868: V777 = 0x1
0x86a: V778 = ADD 0x1 S3
0x86b: V779 = 0x7d0
0x86e: JUMP 0x7d0
---
Entry stack: [V13, 0x7f, S17, S16, S15, S14, S13, S12, S11, S10, 0x5be, S8, S7, S6, S5, S4, S3, S2, 0x4, S0]
Stack pops: 4
Stack additions: [V778]
Exit stack: [V13, 0x7f, S17, S16, S15, S14, S13, S12, S11, S10, 0x5be, S8, S7, S6, S5, S4, V778]

================================

Block 0x86f
[0x86f:0x873]
---
Predecessors: [0x7d0]
Successors: [0x7f]
---
0x86f JUMPDEST
0x870 POP
0x871 POP
0x872 POP
0x873 JUMP
---
0x86f: JUMPDEST 
0x873: JUMP S3
---
Entry stack: [V13, 0x7f, S14, S13, S12, S11, S10, S9, S8, S7, 0x5be, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V13, 0x7f, S14, S13, S12, S11, S10, S9, S8, S7, 0x5be, S5, S4]

================================

Block 0x874
[0x874:0x88c]
---
Predecessors: [0x15f]
Successors: [0x88d, 0x8a5]
---
0x874 JUMPDEST
0x875 CALLER
0x876 PUSH1 0x0
0x878 SWAP1
0x879 DUP2
0x87a MSTORE
0x87b PUSH1 0x20
0x87d DUP2
0x87e SWAP1
0x87f MSTORE
0x880 PUSH1 0x40
0x882 SWAP1
0x883 SHA3
0x884 SLOAD
0x885 PUSH1 0xff
0x887 AND
0x888 DUP1
0x889 PUSH2 0x8a5
0x88c JUMPI
---
0x874: JUMPDEST 
0x875: V780 = CALLER
0x876: V781 = 0x0
0x87a: M[0x0] = V780
0x87b: V782 = 0x20
0x87f: M[0x20] = 0x0
0x880: V783 = 0x40
0x883: V784 = SHA3 0x0 0x40
0x884: V785 = S[V784]
0x885: V786 = 0xff
0x887: V787 = AND 0xff V785
0x889: V788 = 0x8a5
0x88c: JUMPI 0x8a5 V787
---
Entry stack: [V13, 0x7f, V149, V151, V154, V157]
Stack pops: 0
Stack additions: [V787]
Exit stack: [V13, 0x7f, V149, V151, V154, V157, V787]

================================

Block 0x88d
[0x88d:0x8a4]
---
Predecessors: [0x874]
Successors: [0x8a5]
---
0x88d POP
0x88e CALLER
0x88f PUSH20 0x825d5d0df3b2d59f69cc673f041ca91a296b8183
0x8a4 EQ
---
0x88e: V789 = CALLER
0x88f: V790 = 0x825d5d0df3b2d59f69cc673f041ca91a296b8183
0x8a4: V791 = EQ 0x825d5d0df3b2d59f69cc673f041ca91a296b8183 V789
---
Entry stack: [V13, 0x7f, V149, V151, V154, V157, V787]
Stack pops: 1
Stack additions: [V791]
Exit stack: [V13, 0x7f, V149, V151, V154, V157, V791]

================================

Block 0x8a5
[0x8a5:0x8ab]
---
Predecessors: [0x874, 0x88d]
Successors: [0x8ac, 0x8b0]
---
0x8a5 JUMPDEST
0x8a6 ISZERO
0x8a7 ISZERO
0x8a8 PUSH2 0x8b0
0x8ab JUMPI
---
0x8a5: JUMPDEST 
0x8a6: V792 = ISZERO S0
0x8a7: V793 = ISZERO V792
0x8a8: V794 = 0x8b0
0x8ab: JUMPI 0x8b0 V793
---
Entry stack: [V13, 0x7f, V149, V151, V154, V157, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x7f, V149, V151, V154, V157]

================================

Block 0x8ac
[0x8ac:0x8af]
---
Predecessors: [0x8a5]
Successors: []
---
0x8ac PUSH1 0x0
0x8ae DUP1
0x8af REVERT
---
0x8ac: V795 = 0x0
0x8af: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, V149, V151, V154, V157]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, V149, V151, V154, V157]

================================

Block 0x8b0
[0x8b0:0x8bc]
---
Predecessors: [0x8a5]
Successors: [0xda0]
---
0x8b0 JUMPDEST
0x8b1 CALLVALUE
0x8b2 DUP5
0x8b3 DUP5
0x8b4 DUP5
0x8b5 DUP5
0x8b6 PUSH2 0x1cc
0x8b9 PUSH2 0xda0
0x8bc JUMP
---
0x8b0: JUMPDEST 
0x8b1: V796 = CALLVALUE
0x8b6: V797 = 0x1cc
0x8b9: V798 = 0xda0
0x8bc: JUMP 0xda0
---
Entry stack: [V13, 0x7f, V149, V151, V154, V157]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V796, S3, S2, S1, S0, 0x1cc]
Exit stack: [V13, 0x7f, V149, V151, V154, V157, V796, V149, V151, V154, V157, 0x1cc]

================================

Block 0x8bd
[0x8bd:0x912]
---
Predecessors: [0x561, 0x6ff]
Successors: [0x913]
---
0x8bd JUMPDEST
0x8be PUSH1 0x0
0x8c0 NUMBER
0x8c1 GASLIMIT
0x8c2 TIMESTAMP
0x8c3 COINBASE
0x8c4 PUSH1 0x40
0x8c6 MLOAD
0x8c7 PUSH1 0x20
0x8c9 ADD
0x8ca DUP1
0x8cb DUP3
0x8cc PUSH1 0x1
0x8ce PUSH1 0xa0
0x8d0 PUSH1 0x2
0x8d2 EXP
0x8d3 SUB
0x8d4 AND
0x8d5 PUSH1 0x1
0x8d7 PUSH1 0xa0
0x8d9 PUSH1 0x2
0x8db EXP
0x8dc SUB
0x8dd AND
0x8de PUSH13 0x1000000000000000000000000
0x8ec MUL
0x8ed DUP2
0x8ee MSTORE
0x8ef PUSH1 0x14
0x8f1 ADD
0x8f2 SWAP2
0x8f3 POP
0x8f4 POP
0x8f5 PUSH1 0x40
0x8f7 MLOAD
0x8f8 PUSH1 0x20
0x8fa DUP2
0x8fb DUP4
0x8fc SUB
0x8fd SUB
0x8fe DUP2
0x8ff MSTORE
0x900 SWAP1
0x901 PUSH1 0x40
0x903 MSTORE
0x904 PUSH1 0x40
0x906 MLOAD
0x907 DUP1
0x908 DUP3
0x909 DUP1
0x90a MLOAD
0x90b SWAP1
0x90c PUSH1 0x20
0x90e ADD
0x90f SWAP1
0x910 DUP1
0x911 DUP4
0x912 DUP4
---
0x8bd: JUMPDEST 
0x8be: V799 = 0x0
0x8c0: V800 = NUMBER
0x8c1: V801 = GASLIMIT
0x8c2: V802 = TIMESTAMP
0x8c3: V803 = COINBASE
0x8c4: V804 = 0x40
0x8c6: V805 = M[0x40]
0x8c7: V806 = 0x20
0x8c9: V807 = ADD 0x20 V805
0x8cc: V808 = 0x1
0x8ce: V809 = 0xa0
0x8d0: V810 = 0x2
0x8d2: V811 = EXP 0x2 0xa0
0x8d3: V812 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8d4: V813 = AND 0xffffffffffffffffffffffffffffffffffffffff V803
0x8d5: V814 = 0x1
0x8d7: V815 = 0xa0
0x8d9: V816 = 0x2
0x8db: V817 = EXP 0x2 0xa0
0x8dc: V818 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8dd: V819 = AND 0xffffffffffffffffffffffffffffffffffffffff V813
0x8de: V820 = 0x1000000000000000000000000
0x8ec: V821 = MUL 0x1000000000000000000000000 V819
0x8ee: M[V807] = V821
0x8ef: V822 = 0x14
0x8f1: V823 = ADD 0x14 V807
0x8f5: V824 = 0x40
0x8f7: V825 = M[0x40]
0x8f8: V826 = 0x20
0x8fc: V827 = SUB V823 V825
0x8fd: V828 = SUB V827 0x20
0x8ff: M[V825] = V828
0x901: V829 = 0x40
0x903: M[0x40] = V823
0x904: V830 = 0x40
0x906: V831 = M[0x40]
0x90a: V832 = M[V825]
0x90c: V833 = 0x20
0x90e: V834 = ADD 0x20 V825
---
Entry stack: [V13, 0x7f, S8, S7, S6, S5, S4, S3, 0x0, 0x0, {0x56f, 0x70d}]
Stack pops: 0
Stack additions: [0x0, V800, V801, V802, V825, V831, V831, V834, V832, V832, V831, V834]
Exit stack: [V13, 0x7f, S8, S7, S6, S5, S4, S3, 0x0, 0x0, {0x56f, 0x70d}, 0x0, V800, V801, V802, V825, V831, V831, V834, V832, V832, V831, V834]

================================

Block 0x913
[0x913:0x91b]
---
Predecessors: [0x8bd, 0x91c]
Successors: [0x91c, 0x932]
---
0x913 JUMPDEST
0x914 PUSH1 0x20
0x916 DUP4
0x917 LT
0x918 PUSH2 0x932
0x91b JUMPI
---
0x913: JUMPDEST 
0x914: V835 = 0x20
0x917: V836 = LT S2 0x20
0x918: V837 = 0x932
0x91b: JUMPI 0x932 V836
---
Entry stack: [V13, 0x7f, S20, S19, S18, S17, S16, S15, 0x0, 0x0, {0x56f, 0x70d}, 0x0, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x7f, S20, S19, S18, S17, S16, S15, 0x0, 0x0, {0x56f, 0x70d}, 0x0, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x91c
[0x91c:0x931]
---
Predecessors: [0x913]
Successors: [0x913]
---
0x91c DUP1
0x91d MLOAD
0x91e DUP3
0x91f MSTORE
0x920 PUSH1 0x1f
0x922 NOT
0x923 SWAP1
0x924 SWAP3
0x925 ADD
0x926 SWAP2
0x927 PUSH1 0x20
0x929 SWAP2
0x92a DUP3
0x92b ADD
0x92c SWAP2
0x92d ADD
0x92e PUSH2 0x913
0x931 JUMP
---
0x91d: V838 = M[S0]
0x91f: M[S1] = V838
0x920: V839 = 0x1f
0x922: V840 = NOT 0x1f
0x925: V841 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x927: V842 = 0x20
0x92b: V843 = ADD 0x20 S1
0x92d: V844 = ADD 0x20 S0
0x92e: V845 = 0x913
0x931: JUMP 0x913
---
Entry stack: [V13, 0x7f, S20, S19, S18, S17, S16, S15, 0x0, 0x0, {0x56f, 0x70d}, 0x0, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V841, V843, V844]
Exit stack: [V13, 0x7f, S20, S19, S18, S17, S16, S15, 0x0, 0x0, {0x56f, 0x70d}, 0x0, S10, S9, S8, S7, S6, S5, S4, S3, V841, V843, V844]

================================

Block 0x932
[0x932:0x966]
---
Predecessors: [0x913]
Successors: [0x967, 0x968]
---
0x932 JUMPDEST
0x933 MLOAD
0x934 DUP2
0x935 MLOAD
0x936 PUSH1 0x20
0x938 SWAP4
0x939 SWAP1
0x93a SWAP4
0x93b SUB
0x93c PUSH2 0x100
0x93f EXP
0x940 PUSH1 0x0
0x942 NOT
0x943 ADD
0x944 DUP1
0x945 NOT
0x946 SWAP1
0x947 SWAP2
0x948 AND
0x949 SWAP3
0x94a AND
0x94b SWAP2
0x94c SWAP1
0x94d SWAP2
0x94e OR
0x94f SWAP1
0x950 MSTORE
0x951 PUSH1 0x40
0x953 MLOAD
0x954 SWAP3
0x955 ADD
0x956 DUP3
0x957 SWAP1
0x958 SUB
0x959 SWAP1
0x95a SWAP2
0x95b SHA3
0x95c SWAP3
0x95d POP
0x95e POP
0x95f POP
0x960 DUP2
0x961 ISZERO
0x962 ISZERO
0x963 PUSH2 0x968
0x966 JUMPI
---
0x932: JUMPDEST 
0x933: V846 = M[S0]
0x935: V847 = M[S1]
0x936: V848 = 0x20
0x93b: V849 = SUB 0x20 S2
0x93c: V850 = 0x100
0x93f: V851 = EXP 0x100 V849
0x940: V852 = 0x0
0x942: V853 = NOT 0x0
0x943: V854 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V851
0x945: V855 = NOT V854
0x948: V856 = AND V846 V855
0x94a: V857 = AND V847 V854
0x94e: V858 = OR V857 V856
0x950: M[S1] = V858
0x951: V859 = 0x40
0x953: V860 = M[0x40]
0x955: V861 = ADD S5 S3
0x958: V862 = SUB V861 V860
0x95b: V863 = SHA3 V860 V862
0x961: V864 = ISZERO S8
0x962: V865 = ISZERO V864
0x963: V866 = 0x968
0x966: JUMPI 0x968 V865
---
Entry stack: [V13, 0x7f, S20, S19, S18, S17, S16, S15, 0x0, 0x0, {0x56f, 0x70d}, 0x0, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, V863]
Exit stack: [V13, 0x7f, S20, S19, S18, S17, S16, S15, 0x0, 0x0, {0x56f, 0x70d}, 0x0, S10, S9, S8, V863]

================================

Block 0x967
[0x967:0x967]
---
Predecessors: [0x932]
Successors: []
---
0x967 INVALID
---
0x967: INVALID 
---
Entry stack: [V13, 0x7f, S13, S12, S11, S10, S9, S8, 0x0, 0x0, {0x56f, 0x70d}, 0x0, S3, S2, S1, V863]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, S13, S12, S11, S10, S9, S8, 0x0, 0x0, {0x56f, 0x70d}, 0x0, S3, S2, S1, V863]

================================

Block 0x968
[0x968:0x973]
---
Predecessors: [0x932]
Successors: [0x56f, 0x70d]
---
0x968 JUMPDEST
0x969 DIV
0x96a DIFFICULTY
0x96b TIMESTAMP
0x96c ADD
0x96d ADD
0x96e ADD
0x96f ADD
0x970 SWAP1
0x971 POP
0x972 SWAP1
0x973 JUMP
---
0x968: JUMPDEST 
0x969: V867 = DIV V863 S1
0x96a: V868 = DIFFICULTY
0x96b: V869 = TIMESTAMP
0x96c: V870 = ADD V869 V868
0x96d: V871 = ADD V870 V867
0x96e: V872 = ADD V871 S2
0x96f: V873 = ADD V872 S3
0x973: JUMP {0x56f, 0x70d}
---
Entry stack: [V13, 0x7f, S13, S12, S11, S10, S9, S8, 0x0, 0x0, {0x56f, 0x70d}, 0x0, S3, S2, S1, V863]
Stack pops: 6
Stack additions: [V873]
Exit stack: [V13, 0x7f, S13, S12, S11, S10, S9, S8, 0x0, 0x0, V873]

================================

Block 0x974
[0x974:0x9c9]
---
Predecessors: [0x592]
Successors: [0x9ca]
---
0x974 JUMPDEST
0x975 PUSH1 0x0
0x977 DUP1
0x978 DUP4
0x979 TIMESTAMP
0x97a DUP7
0x97b PUSH1 0x40
0x97d MLOAD
0x97e PUSH1 0x20
0x980 ADD
0x981 DUP1
0x982 DUP3
0x983 PUSH1 0x1
0x985 PUSH1 0xa0
0x987 PUSH1 0x2
0x989 EXP
0x98a SUB
0x98b AND
0x98c PUSH1 0x1
0x98e PUSH1 0xa0
0x990 PUSH1 0x2
0x992 EXP
0x993 SUB
0x994 AND
0x995 PUSH13 0x1000000000000000000000000
0x9a3 MUL
0x9a4 DUP2
0x9a5 MSTORE
0x9a6 PUSH1 0x14
0x9a8 ADD
0x9a9 SWAP2
0x9aa POP
0x9ab POP
0x9ac PUSH1 0x40
0x9ae MLOAD
0x9af PUSH1 0x20
0x9b1 DUP2
0x9b2 DUP4
0x9b3 SUB
0x9b4 SUB
0x9b5 DUP2
0x9b6 MSTORE
0x9b7 SWAP1
0x9b8 PUSH1 0x40
0x9ba MSTORE
0x9bb PUSH1 0x40
0x9bd MLOAD
0x9be DUP1
0x9bf DUP3
0x9c0 DUP1
0x9c1 MLOAD
0x9c2 SWAP1
0x9c3 PUSH1 0x20
0x9c5 ADD
0x9c6 SWAP1
0x9c7 DUP1
0x9c8 DUP4
0x9c9 DUP4
---
0x974: JUMPDEST 
0x975: V874 = 0x0
0x979: V875 = TIMESTAMP
0x97b: V876 = 0x40
0x97d: V877 = M[0x40]
0x97e: V878 = 0x20
0x980: V879 = ADD 0x20 V877
0x983: V880 = 0x1
0x985: V881 = 0xa0
0x987: V882 = 0x2
0x989: V883 = EXP 0x2 0xa0
0x98a: V884 = SUB 0x10000000000000000000000000000000000000000 0x1
0x98b: V885 = AND 0xffffffffffffffffffffffffffffffffffffffff V532
0x98c: V886 = 0x1
0x98e: V887 = 0xa0
0x990: V888 = 0x2
0x992: V889 = EXP 0x2 0xa0
0x993: V890 = SUB 0x10000000000000000000000000000000000000000 0x1
0x994: V891 = AND 0xffffffffffffffffffffffffffffffffffffffff V885
0x995: V892 = 0x1000000000000000000000000
0x9a3: V893 = MUL 0x1000000000000000000000000 V891
0x9a5: M[V879] = V893
0x9a6: V894 = 0x14
0x9a8: V895 = ADD 0x14 V879
0x9ac: V896 = 0x40
0x9ae: V897 = M[0x40]
0x9af: V898 = 0x20
0x9b3: V899 = SUB V895 V897
0x9b4: V900 = SUB V899 0x20
0x9b6: M[V897] = V900
0x9b8: V901 = 0x40
0x9ba: M[0x40] = V895
0x9bb: V902 = 0x40
0x9bd: V903 = M[0x40]
0x9c1: V904 = M[V897]
0x9c3: V905 = 0x20
0x9c5: V906 = ADD 0x20 V897
---
Entry stack: [V13, 0x7f, S11, S10, S9, S8, S7, S6, S5, S4, {0x5ae, 0x730}, V532, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, 0x0, S1, V875, V897, V903, V903, V906, V904, V904, V903, V906]
Exit stack: [V13, 0x7f, S11, S10, S9, S8, S7, S6, S5, S4, {0x5ae, 0x730}, V532, S1, S0, 0x0, 0x0, S1, V875, V897, V903, V903, V906, V904, V904, V903, V906]

================================

Block 0x9ca
[0x9ca:0x9d2]
---
Predecessors: [0x974, 0x9d3]
Successors: [0x9d3, 0x9e9]
---
0x9ca JUMPDEST
0x9cb PUSH1 0x20
0x9cd DUP4
0x9ce LT
0x9cf PUSH2 0x9e9
0x9d2 JUMPI
---
0x9ca: JUMPDEST 
0x9cb: V907 = 0x20
0x9ce: V908 = LT S2 0x20
0x9cf: V909 = 0x9e9
0x9d2: JUMPI 0x9e9 V908
---
Entry stack: [V13, 0x7f, S23, S22, S21, S20, S19, S18, S17, S16, {0x5ae, 0x730}, S14, S13, S12, 0x0, 0x0, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x7f, S23, S22, S21, S20, S19, S18, S17, S16, {0x5ae, 0x730}, S14, S13, S12, 0x0, 0x0, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x9d3
[0x9d3:0x9e8]
---
Predecessors: [0x9ca]
Successors: [0x9ca]
---
0x9d3 DUP1
0x9d4 MLOAD
0x9d5 DUP3
0x9d6 MSTORE
0x9d7 PUSH1 0x1f
0x9d9 NOT
0x9da SWAP1
0x9db SWAP3
0x9dc ADD
0x9dd SWAP2
0x9de PUSH1 0x20
0x9e0 SWAP2
0x9e1 DUP3
0x9e2 ADD
0x9e3 SWAP2
0x9e4 ADD
0x9e5 PUSH2 0x9ca
0x9e8 JUMP
---
0x9d4: V910 = M[S0]
0x9d6: M[S1] = V910
0x9d7: V911 = 0x1f
0x9d9: V912 = NOT 0x1f
0x9dc: V913 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x9de: V914 = 0x20
0x9e2: V915 = ADD 0x20 S1
0x9e4: V916 = ADD 0x20 S0
0x9e5: V917 = 0x9ca
0x9e8: JUMP 0x9ca
---
Entry stack: [V13, 0x7f, S23, S22, S21, S20, S19, S18, S17, S16, {0x5ae, 0x730}, S14, S13, S12, 0x0, 0x0, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V913, V915, V916]
Exit stack: [V13, 0x7f, S23, S22, S21, S20, S19, S18, S17, S16, {0x5ae, 0x730}, S14, S13, S12, 0x0, 0x0, S9, S8, S7, S6, S5, S4, S3, V913, V915, V916]

================================

Block 0x9e9
[0x9e9:0xa1d]
---
Predecessors: [0x9ca]
Successors: [0xa1e, 0xa1f]
---
0x9e9 JUMPDEST
0x9ea MLOAD
0x9eb DUP2
0x9ec MLOAD
0x9ed PUSH1 0x20
0x9ef SWAP4
0x9f0 SWAP1
0x9f1 SWAP4
0x9f2 SUB
0x9f3 PUSH2 0x100
0x9f6 EXP
0x9f7 PUSH1 0x0
0x9f9 NOT
0x9fa ADD
0x9fb DUP1
0x9fc NOT
0x9fd SWAP1
0x9fe SWAP2
0x9ff AND
0xa00 SWAP3
0xa01 AND
0xa02 SWAP2
0xa03 SWAP1
0xa04 SWAP2
0xa05 OR
0xa06 SWAP1
0xa07 MSTORE
0xa08 PUSH1 0x40
0xa0a MLOAD
0xa0b SWAP3
0xa0c ADD
0xa0d DUP3
0xa0e SWAP1
0xa0f SUB
0xa10 SWAP1
0xa11 SWAP2
0xa12 SHA3
0xa13 SWAP3
0xa14 POP
0xa15 POP
0xa16 POP
0xa17 DUP2
0xa18 ISZERO
0xa19 ISZERO
0xa1a PUSH2 0xa1f
0xa1d JUMPI
---
0x9e9: JUMPDEST 
0x9ea: V918 = M[S0]
0x9ec: V919 = M[S1]
0x9ed: V920 = 0x20
0x9f2: V921 = SUB 0x20 S2
0x9f3: V922 = 0x100
0x9f6: V923 = EXP 0x100 V921
0x9f7: V924 = 0x0
0x9f9: V925 = NOT 0x0
0x9fa: V926 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V923
0x9fc: V927 = NOT V926
0x9ff: V928 = AND V918 V927
0xa01: V929 = AND V919 V926
0xa05: V930 = OR V929 V928
0xa07: M[S1] = V930
0xa08: V931 = 0x40
0xa0a: V932 = M[0x40]
0xa0c: V933 = ADD S5 S3
0xa0f: V934 = SUB V933 V932
0xa12: V935 = SHA3 V932 V934
0xa18: V936 = ISZERO S8
0xa19: V937 = ISZERO V936
0xa1a: V938 = 0xa1f
0xa1d: JUMPI 0xa1f V937
---
Entry stack: [V13, 0x7f, S23, S22, S21, S20, S19, S18, S17, S16, {0x5ae, 0x730}, S14, S13, S12, 0x0, 0x0, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, V935]
Exit stack: [V13, 0x7f, S23, S22, S21, S20, S19, S18, S17, S16, {0x5ae, 0x730}, S14, S13, S12, 0x0, 0x0, S9, S8, V935]

================================

Block 0xa1e
[0xa1e:0xa1e]
---
Predecessors: [0x9e9]
Successors: []
---
0xa1e INVALID
---
0xa1e: INVALID 
---
Entry stack: [V13, 0x7f, S16, S15, S14, S13, S12, S11, S10, S9, {0x5ae, 0x730}, S7, S6, S5, 0x0, 0x0, S2, S1, V935]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, S16, S15, S14, S13, S12, S11, S10, S9, {0x5ae, 0x730}, S7, S6, S5, 0x0, 0x0, S2, S1, V935]

================================

Block 0xa1f
[0xa1f:0xa4f]
---
Predecessors: [0x9e9]
Successors: [0xa50]
---
0xa1f JUMPDEST
0xa20 DIV
0xa21 ADD
0xa22 PUSH1 0x40
0xa24 MLOAD
0xa25 PUSH1 0x20
0xa27 ADD
0xa28 DUP1
0xa29 DUP3
0xa2a DUP2
0xa2b MSTORE
0xa2c PUSH1 0x20
0xa2e ADD
0xa2f SWAP2
0xa30 POP
0xa31 POP
0xa32 PUSH1 0x40
0xa34 MLOAD
0xa35 PUSH1 0x20
0xa37 DUP2
0xa38 DUP4
0xa39 SUB
0xa3a SUB
0xa3b DUP2
0xa3c MSTORE
0xa3d SWAP1
0xa3e PUSH1 0x40
0xa40 MSTORE
0xa41 PUSH1 0x40
0xa43 MLOAD
0xa44 DUP1
0xa45 DUP3
0xa46 DUP1
0xa47 MLOAD
0xa48 SWAP1
0xa49 PUSH1 0x20
0xa4b ADD
0xa4c SWAP1
0xa4d DUP1
0xa4e DUP4
0xa4f DUP4
---
0xa1f: JUMPDEST 
0xa20: V939 = DIV V935 S1
0xa21: V940 = ADD V939 S2
0xa22: V941 = 0x40
0xa24: V942 = M[0x40]
0xa25: V943 = 0x20
0xa27: V944 = ADD 0x20 V942
0xa2b: M[V944] = V940
0xa2c: V945 = 0x20
0xa2e: V946 = ADD 0x20 V944
0xa32: V947 = 0x40
0xa34: V948 = M[0x40]
0xa35: V949 = 0x20
0xa39: V950 = SUB V946 V948
0xa3a: V951 = SUB V950 0x20
0xa3c: M[V948] = V951
0xa3e: V952 = 0x40
0xa40: M[0x40] = V946
0xa41: V953 = 0x40
0xa43: V954 = M[0x40]
0xa47: V955 = M[V948]
0xa49: V956 = 0x20
0xa4b: V957 = ADD 0x20 V948
---
Entry stack: [V13, 0x7f, S16, S15, S14, S13, S12, S11, S10, S9, {0x5ae, 0x730}, S7, S6, S5, 0x0, 0x0, S2, S1, V935]
Stack pops: 3
Stack additions: [V948, V954, V954, V957, V955, V955, V954, V957]
Exit stack: [V13, 0x7f, S16, S15, S14, S13, S12, S11, S10, S9, {0x5ae, 0x730}, S7, S6, S5, 0x0, 0x0, V948, V954, V954, V957, V955, V955, V954, V957]

================================

Block 0xa50
[0xa50:0xa58]
---
Predecessors: [0xa1f, 0xa59]
Successors: [0xa59, 0xa6f]
---
0xa50 JUMPDEST
0xa51 PUSH1 0x20
0xa53 DUP4
0xa54 LT
0xa55 PUSH2 0xa6f
0xa58 JUMPI
---
0xa50: JUMPDEST 
0xa51: V958 = 0x20
0xa54: V959 = LT S2 0x20
0xa55: V960 = 0xa6f
0xa58: JUMPI 0xa6f V959
---
Entry stack: [V13, 0x7f, S21, S20, S19, S18, S17, S16, S15, S14, {0x5ae, 0x730}, S12, S11, S10, 0x0, 0x0, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x7f, S21, S20, S19, S18, S17, S16, S15, S14, {0x5ae, 0x730}, S12, S11, S10, 0x0, 0x0, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xa59
[0xa59:0xa6e]
---
Predecessors: [0xa50]
Successors: [0xa50]
---
0xa59 DUP1
0xa5a MLOAD
0xa5b DUP3
0xa5c MSTORE
0xa5d PUSH1 0x1f
0xa5f NOT
0xa60 SWAP1
0xa61 SWAP3
0xa62 ADD
0xa63 SWAP2
0xa64 PUSH1 0x20
0xa66 SWAP2
0xa67 DUP3
0xa68 ADD
0xa69 SWAP2
0xa6a ADD
0xa6b PUSH2 0xa50
0xa6e JUMP
---
0xa5a: V961 = M[S0]
0xa5c: M[S1] = V961
0xa5d: V962 = 0x1f
0xa5f: V963 = NOT 0x1f
0xa62: V964 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0xa64: V965 = 0x20
0xa68: V966 = ADD 0x20 S1
0xa6a: V967 = ADD 0x20 S0
0xa6b: V968 = 0xa50
0xa6e: JUMP 0xa50
---
Entry stack: [V13, 0x7f, S21, S20, S19, S18, S17, S16, S15, S14, {0x5ae, 0x730}, S12, S11, S10, 0x0, 0x0, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V964, V966, V967]
Exit stack: [V13, 0x7f, S21, S20, S19, S18, S17, S16, S15, S14, {0x5ae, 0x730}, S12, S11, S10, 0x0, 0x0, S7, S6, S5, S4, S3, V964, V966, V967]

================================

Block 0xa6f
[0xa6f:0xaaf]
---
Predecessors: [0xa50]
Successors: [0x5ae, 0x730]
---
0xa6f JUMPDEST
0xa70 MLOAD
0xa71 DUP2
0xa72 MLOAD
0xa73 PUSH1 0x20
0xa75 SWAP4
0xa76 SWAP1
0xa77 SWAP4
0xa78 SUB
0xa79 PUSH2 0x100
0xa7c EXP
0xa7d PUSH1 0x0
0xa7f NOT
0xa80 ADD
0xa81 DUP1
0xa82 NOT
0xa83 SWAP1
0xa84 SWAP2
0xa85 AND
0xa86 SWAP3
0xa87 AND
0xa88 SWAP2
0xa89 SWAP1
0xa8a SWAP2
0xa8b OR
0xa8c SWAP1
0xa8d MSTORE
0xa8e PUSH1 0x40
0xa90 MLOAD
0xa91 SWAP3
0xa92 ADD
0xa93 DUP3
0xa94 SWAP1
0xa95 SUB
0xa96 SWAP1
0xa97 SWAP2
0xa98 SHA3
0xa99 PUSH2 0x3e8
0xa9c DUP1
0xa9d DUP3
0xa9e DIV
0xa9f MUL
0xaa0 SWAP1
0xaa1 SUB
0xaa2 SWAP6
0xaa3 SWAP1
0xaa4 SWAP6
0xaa5 LT
0xaa6 SWAP8
0xaa7 SWAP7
0xaa8 POP
0xaa9 POP
0xaaa POP
0xaab POP
0xaac POP
0xaad POP
0xaae POP
0xaaf JUMP
---
0xa6f: JUMPDEST 
0xa70: V969 = M[S0]
0xa72: V970 = M[S1]
0xa73: V971 = 0x20
0xa78: V972 = SUB 0x20 S2
0xa79: V973 = 0x100
0xa7c: V974 = EXP 0x100 V972
0xa7d: V975 = 0x0
0xa7f: V976 = NOT 0x0
0xa80: V977 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V974
0xa82: V978 = NOT V977
0xa85: V979 = AND V969 V978
0xa87: V980 = AND V970 V977
0xa8b: V981 = OR V980 V979
0xa8d: M[S1] = V981
0xa8e: V982 = 0x40
0xa90: V983 = M[0x40]
0xa92: V984 = ADD S5 S3
0xa95: V985 = SUB V984 V983
0xa98: V986 = SHA3 V983 V985
0xa99: V987 = 0x3e8
0xa9e: V988 = DIV V986 0x3e8
0xa9f: V989 = MUL V988 0x3e8
0xaa1: V990 = SUB V986 V989
0xaa5: V991 = LT V990 S10
0xaaf: JUMP {0x5ae, 0x730}
---
Entry stack: [V13, 0x7f, S21, S20, S19, S18, S17, S16, S15, S14, {0x5ae, 0x730}, S12, S11, S10, 0x0, 0x0, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 14
Stack additions: [V991]
Exit stack: [V13, 0x7f, S21, S20, S19, S18, S17, S16, S15, S14, V991]

================================

Block 0xab0
[0xab0:0xacc]
---
Predecessors: [0x5b4]
Successors: [0xd21]
---
0xab0 JUMPDEST
0xab1 PUSH1 0x1
0xab3 SLOAD
0xab4 ADDRESS
0xab5 BALANCE
0xab6 SWAP1
0xab7 PUSH1 0x0
0xab9 SWAP1
0xaba DUP2
0xabb SWAP1
0xabc PUSH2 0xacd
0xabf SWAP1
0xac0 PUSH1 0x1
0xac2 PUSH1 0xa0
0xac4 PUSH1 0x2
0xac6 EXP
0xac7 SUB
0xac8 AND
0xac9 PUSH2 0xd21
0xacc JUMP
---
0xab0: JUMPDEST 
0xab1: V992 = 0x1
0xab3: V993 = S[0x1]
0xab4: V994 = ADDRESS
0xab5: V995 = BALANCE V994
0xab7: V996 = 0x0
0xabc: V997 = 0xacd
0xac0: V998 = 0x1
0xac2: V999 = 0xa0
0xac4: V1000 = 0x2
0xac6: V1001 = EXP 0x2 0xa0
0xac7: V1002 = SUB 0x10000000000000000000000000000000000000000 0x1
0xac8: V1003 = AND 0xffffffffffffffffffffffffffffffffffffffff V993
0xac9: V1004 = 0xd21
0xacc: JUMP 0xd21
---
Entry stack: [V13, 0x7f, S11, S10, S9, S8, S7, S6, S5, S4, 0x5be, S2, S1, S0]
Stack pops: 0
Stack additions: [V995, 0x0, 0x0, 0xacd, V1003]
Exit stack: [V13, 0x7f, S11, S10, S9, S8, S7, S6, S5, S4, 0x5be, S2, S1, S0, V995, 0x0, 0x0, 0xacd, V1003]

================================

Block 0xacd
[0xacd:0xadc]
---
Predecessors: [0xd21, 0xd59]
Successors: [0xadd, 0xade]
---
0xacd JUMPDEST
0xace SWAP2
0xacf POP
0xad0 PUSH1 0x2
0xad2 DUP5
0xad3 DUP2
0xad4 SLOAD
0xad5 DUP2
0xad6 LT
0xad7 ISZERO
0xad8 ISZERO
0xad9 PUSH2 0xade
0xadc JUMPI
---
0xacd: JUMPDEST 
0xad0: V1005 = 0x2
0xad4: V1006 = S[0x2]
0xad6: V1007 = LT S4 V1006
0xad7: V1008 = ISZERO V1007
0xad8: V1009 = ISZERO V1008
0xad9: V1010 = 0xade
0xadc: JUMPI 0xade V1009
---
Entry stack: [V13, 0x7f, S15, S14, S13, S12, S11, S10, S9, S8, 0x5be, S6, S5, S4, S3, 0x0, 0x0, S0]
Stack pops: 5
Stack additions: [S4, S3, S0, S1, 0x2, S4]
Exit stack: [V13, 0x7f, S15, S14, S13, S12, S11, S10, S9, S8, 0x5be, S6, S5, S4, S3, S0, 0x0, 0x2, S4]

================================

Block 0xadd
[0xadd:0xadd]
---
Predecessors: [0xacd]
Successors: []
---
0xadd INVALID
---
0xadd: INVALID 
---
Entry stack: [V13, 0x7f, S16, S15, S14, S13, S12, S11, S10, S9, 0x5be, S7, S6, S5, S4, S3, 0x0, 0x2, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, S16, S15, S14, S13, S12, S11, S10, S9, 0x5be, S7, S6, S5, S4, S3, 0x0, 0x2, S0]

================================

Block 0xade
[0xade:0xb45]
---
Predecessors: [0xacd]
Successors: [0xb46, 0xb4a]
---
0xade JUMPDEST
0xadf PUSH1 0x0
0xae1 SWAP2
0xae2 DUP3
0xae3 MSTORE
0xae4 PUSH1 0x20
0xae6 DUP1
0xae7 DUP4
0xae8 SHA3
0xae9 SWAP1
0xaea SWAP2
0xaeb ADD
0xaec SLOAD
0xaed PUSH1 0x1
0xaef SLOAD
0xaf0 PUSH1 0x40
0xaf2 DUP1
0xaf3 MLOAD
0xaf4 DUP8
0xaf5 DUP2
0xaf6 MSTORE
0xaf7 PUSH1 0x1
0xaf9 PUSH1 0xa0
0xafb PUSH1 0x2
0xafd EXP
0xafe SUB
0xaff DUP13
0xb00 DUP2
0xb01 AND
0xb02 SWAP6
0xb03 DUP3
0xb04 ADD
0xb05 SWAP6
0xb06 SWAP1
0xb07 SWAP6
0xb08 MSTORE
0xb09 DUP1
0xb0a DUP3
0xb0b ADD
0xb0c DUP12
0xb0d SWAP1
0xb0e MSTORE
0xb0f SWAP2
0xb10 DUP5
0xb11 AND
0xb12 PUSH1 0x60
0xb14 DUP4
0xb15 ADD
0xb16 MSTORE
0xb17 ADDRESS
0xb18 PUSH1 0x80
0xb1a DUP4
0xb1b ADD
0xb1c MSTORE
0xb1d MLOAD
0xb1e SWAP3
0xb1f SWAP1
0xb20 SWAP2
0xb21 AND
0xb22 SWAP3
0xb23 PUSH8 0x16345785d8a0000
0xb2c SWAP3
0xb2d PUSH1 0xa0
0xb2f DUP1
0xb30 DUP5
0xb31 ADD
0xb32 SWAP4
0xb33 DUP3
0xb34 SWAP1
0xb35 SUB
0xb36 ADD
0xb37 DUP2
0xb38 DUP6
0xb39 DUP8
0xb3a GAS
0xb3b CALL
0xb3c SWAP3
0xb3d POP
0xb3e POP
0xb3f POP
0xb40 ISZERO
0xb41 ISZERO
0xb42 PUSH2 0xb4a
0xb45 JUMPI
---
0xade: JUMPDEST 
0xadf: V1011 = 0x0
0xae3: M[0x0] = 0x2
0xae4: V1012 = 0x20
0xae8: V1013 = SHA3 0x0 0x20
0xaeb: V1014 = ADD S0 V1013
0xaec: V1015 = S[V1014]
0xaed: V1016 = 0x1
0xaef: V1017 = S[0x1]
0xaf0: V1018 = 0x40
0xaf3: V1019 = M[0x40]
0xaf6: M[V1019] = S3
0xaf7: V1020 = 0x1
0xaf9: V1021 = 0xa0
0xafb: V1022 = 0x2
0xafd: V1023 = EXP 0x2 0xa0
0xafe: V1024 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb01: V1025 = AND 0xffffffffffffffffffffffffffffffffffffffff S7
0xb04: V1026 = ADD V1019 0x20
0xb08: M[V1026] = V1025
0xb0b: V1027 = ADD 0x40 V1019
0xb0e: M[V1027] = S6
0xb11: V1028 = AND 0xffffffffffffffffffffffffffffffffffffffff V1017
0xb12: V1029 = 0x60
0xb15: V1030 = ADD V1019 0x60
0xb16: M[V1030] = V1028
0xb17: V1031 = ADDRESS
0xb18: V1032 = 0x80
0xb1b: V1033 = ADD V1019 0x80
0xb1c: M[V1033] = V1031
0xb1d: V1034 = M[0x40]
0xb21: V1035 = AND V1015 0xffffffffffffffffffffffffffffffffffffffff
0xb23: V1036 = 0x16345785d8a0000
0xb2d: V1037 = 0xa0
0xb31: V1038 = ADD V1019 0xa0
0xb35: V1039 = SUB V1019 V1034
0xb36: V1040 = ADD V1039 0xa0
0xb3a: V1041 = GAS
0xb3b: V1042 = CALL V1041 V1035 0x16345785d8a0000 V1034 V1040 V1034 0x0
0xb40: V1043 = ISZERO V1042
0xb41: V1044 = ISZERO V1043
0xb42: V1045 = 0xb4a
0xb45: JUMPI 0xb4a V1044
---
Entry stack: [V13, 0x7f, S16, S15, S14, S13, S12, S11, S10, S9, 0x5be, S7, S6, S5, S4, S3, 0x0, 0x2, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2]
Exit stack: [V13, 0x7f, S16, S15, S14, S13, S12, S11, S10, S9, 0x5be, S7, S6, S5, S4, S3, 0x0]

================================

Block 0xb46
[0xb46:0xb49]
---
Predecessors: [0xade]
Successors: []
---
0xb46 PUSH1 0x0
0xb48 DUP1
0xb49 REVERT
---
0xb46: V1046 = 0x0
0xb49: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, S14, S13, S12, S11, S10, S9, S8, S7, 0x5be, S5, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, S14, S13, S12, S11, S10, S9, S8, S7, 0x5be, S5, S4, S3, S2, S1, 0x0]

================================

Block 0xb4a
[0xb4a:0xb52]
---
Predecessors: [0xade]
Successors: [0xb53, 0xb57]
---
0xb4a JUMPDEST
0xb4b ADDRESS
0xb4c BALANCE
0xb4d DUP4
0xb4e LT
0xb4f PUSH2 0xb57
0xb52 JUMPI
---
0xb4a: JUMPDEST 
0xb4b: V1047 = ADDRESS
0xb4c: V1048 = BALANCE V1047
0xb4e: V1049 = LT S2 V1048
0xb4f: V1050 = 0xb57
0xb52: JUMPI 0xb57 V1049
---
Entry stack: [V13, 0x7f, S14, S13, S12, S11, S10, S9, S8, S7, 0x5be, S5, S4, S3, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x7f, S14, S13, S12, S11, S10, S9, S8, S7, 0x5be, S5, S4, S3, S2, S1, 0x0]

================================

Block 0xb53
[0xb53:0xb56]
---
Predecessors: [0xb4a]
Successors: []
---
0xb53 PUSH1 0x0
0xb55 DUP1
0xb56 REVERT
---
0xb53: V1051 = 0x0
0xb56: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, S14, S13, S12, S11, S10, S9, S8, S7, 0x5be, S5, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, S14, S13, S12, S11, S10, S9, S8, S7, 0x5be, S5, S4, S3, S2, S1, 0x0]

================================

Block 0xb57
[0xb57:0xb63]
---
Predecessors: [0xb4a]
Successors: [0xb64, 0xb65]
---
0xb57 JUMPDEST
0xb58 PUSH1 0x3
0xb5a DUP1
0xb5b SLOAD
0xb5c DUP6
0xb5d SWAP1
0xb5e DUP2
0xb5f LT
0xb60 PUSH2 0xb65
0xb63 JUMPI
---
0xb57: JUMPDEST 
0xb58: V1052 = 0x3
0xb5b: V1053 = S[0x3]
0xb5f: V1054 = LT S3 V1053
0xb60: V1055 = 0xb65
0xb63: JUMPI 0xb65 V1054
---
Entry stack: [V13, 0x7f, S14, S13, S12, S11, S10, S9, S8, S7, 0x5be, S5, S4, S3, S2, S1, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x3, S3]
Exit stack: [V13, 0x7f, S14, S13, S12, S11, S10, S9, S8, S7, 0x5be, S5, S4, S3, S2, S1, 0x0, 0x3, S3]

================================

Block 0xb64
[0xb64:0xb64]
---
Predecessors: [0xb57]
Successors: []
---
0xb64 INVALID
---
0xb64: INVALID 
---
Entry stack: [V13, 0x7f, S16, S15, S14, S13, S12, S11, S10, S9, 0x5be, S7, S6, S5, S4, S3, 0x0, 0x3, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, S16, S15, S14, S13, S12, S11, S10, S9, 0x5be, S7, S6, S5, S4, S3, 0x0, 0x3, S0]

================================

Block 0xb65
[0xb65:0xb83]
---
Predecessors: [0xb57]
Successors: [0xb84, 0xb85]
---
0xb65 JUMPDEST
0xb66 SWAP1
0xb67 PUSH1 0x0
0xb69 MSTORE
0xb6a PUSH1 0x20
0xb6c PUSH1 0x0
0xb6e SHA3
0xb6f ADD
0xb70 SLOAD
0xb71 SWAP1
0xb72 POP
0xb73 DUP1
0xb74 PUSH1 0x1
0xb76 ADD
0xb77 PUSH1 0x3
0xb79 DUP6
0xb7a DUP2
0xb7b SLOAD
0xb7c DUP2
0xb7d LT
0xb7e ISZERO
0xb7f ISZERO
0xb80 PUSH2 0xb85
0xb83 JUMPI
---
0xb65: JUMPDEST 
0xb67: V1056 = 0x0
0xb69: M[0x0] = 0x3
0xb6a: V1057 = 0x20
0xb6c: V1058 = 0x0
0xb6e: V1059 = SHA3 0x0 0x20
0xb6f: V1060 = ADD V1059 S0
0xb70: V1061 = S[V1060]
0xb74: V1062 = 0x1
0xb76: V1063 = ADD 0x1 V1061
0xb77: V1064 = 0x3
0xb7b: V1065 = S[0x3]
0xb7d: V1066 = LT S5 V1065
0xb7e: V1067 = ISZERO V1066
0xb7f: V1068 = ISZERO V1067
0xb80: V1069 = 0xb85
0xb83: JUMPI 0xb85 V1068
---
Entry stack: [V13, 0x7f, S16, S15, S14, S13, S12, S11, S10, S9, 0x5be, S7, S6, S5, S4, S3, 0x0, 0x3, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, V1061, V1063, 0x3, S5]
Exit stack: [V13, 0x7f, S16, S15, S14, S13, S12, S11, S10, S9, 0x5be, S7, S6, S5, S4, S3, V1061, V1063, 0x3, S5]

================================

Block 0xb84
[0xb84:0xb84]
---
Predecessors: [0xb65]
Successors: []
---
0xb84 INVALID
---
0xb84: INVALID 
---
Entry stack: [V13, 0x7f, S17, S16, S15, S14, S13, S12, S11, S10, 0x5be, S8, S7, S6, S5, S4, V1061, V1063, 0x3, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, S17, S16, S15, S14, S13, S12, S11, S10, 0x5be, S8, S7, S6, S5, S4, V1061, V1063, 0x3, S0]

================================

Block 0xb85
[0xb85:0xba3]
---
Predecessors: [0xb65]
Successors: [0xba4, 0xba5]
---
0xb85 JUMPDEST
0xb86 SWAP1
0xb87 PUSH1 0x0
0xb89 MSTORE
0xb8a PUSH1 0x20
0xb8c PUSH1 0x0
0xb8e SHA3
0xb8f ADD
0xb90 DUP2
0xb91 SWAP1
0xb92 SSTORE
0xb93 POP
0xb94 PUSH2 0xbc3
0xb97 PUSH1 0x2
0xb99 DUP6
0xb9a DUP2
0xb9b SLOAD
0xb9c DUP2
0xb9d LT
0xb9e ISZERO
0xb9f ISZERO
0xba0 PUSH2 0xba5
0xba3 JUMPI
---
0xb85: JUMPDEST 
0xb87: V1070 = 0x0
0xb89: M[0x0] = 0x3
0xb8a: V1071 = 0x20
0xb8c: V1072 = 0x0
0xb8e: V1073 = SHA3 0x0 0x20
0xb8f: V1074 = ADD V1073 S0
0xb92: S[V1074] = V1063
0xb94: V1075 = 0xbc3
0xb97: V1076 = 0x2
0xb9b: V1077 = S[0x2]
0xb9d: V1078 = LT S6 V1077
0xb9e: V1079 = ISZERO V1078
0xb9f: V1080 = ISZERO V1079
0xba0: V1081 = 0xba5
0xba3: JUMPI 0xba5 V1080
---
Entry stack: [V13, 0x7f, S17, S16, S15, S14, S13, S12, S11, S10, 0x5be, S8, S7, S6, S5, S4, V1061, V1063, 0x3, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, 0xbc3, 0x2, S6]
Exit stack: [V13, 0x7f, S17, S16, S15, S14, S13, S12, S11, S10, 0x5be, S8, S7, S6, S5, S4, V1061, 0xbc3, 0x2, S6]

================================

Block 0xba4
[0xba4:0xba4]
---
Predecessors: [0xb85]
Successors: []
---
0xba4 INVALID
---
0xba4: INVALID 
---
Entry stack: [V13, 0x7f, S17, S16, S15, S14, S13, S12, S11, S10, 0x5be, S8, S7, S6, S5, S4, V1061, 0xbc3, 0x2, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, S17, S16, S15, S14, S13, S12, S11, S10, 0x5be, S8, S7, S6, S5, S4, V1061, 0xbc3, 0x2, S0]

================================

Block 0xba5
[0xba5:0xbc2]
---
Predecessors: [0xb85]
Successors: [0xc24]
---
0xba5 JUMPDEST
0xba6 PUSH1 0x0
0xba8 SWAP2
0xba9 DUP3
0xbaa MSTORE
0xbab PUSH1 0x20
0xbad SWAP1
0xbae SWAP2
0xbaf SHA3
0xbb0 ADD
0xbb1 SLOAD
0xbb2 PUSH1 0x1
0xbb4 PUSH1 0xa0
0xbb6 PUSH1 0x2
0xbb8 EXP
0xbb9 SUB
0xbba AND
0xbbb PUSH1 0x2
0xbbd DUP4
0xbbe ADD
0xbbf PUSH2 0xc24
0xbc2 JUMP
---
0xba5: JUMPDEST 
0xba6: V1082 = 0x0
0xbaa: M[0x0] = 0x2
0xbab: V1083 = 0x20
0xbaf: V1084 = SHA3 0x0 0x20
0xbb0: V1085 = ADD V1084 S0
0xbb1: V1086 = S[V1085]
0xbb2: V1087 = 0x1
0xbb4: V1088 = 0xa0
0xbb6: V1089 = 0x2
0xbb8: V1090 = EXP 0x2 0xa0
0xbb9: V1091 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbba: V1092 = AND 0xffffffffffffffffffffffffffffffffffffffff V1086
0xbbb: V1093 = 0x2
0xbbe: V1094 = ADD V1061 0x2
0xbbf: V1095 = 0xc24
0xbc2: JUMP 0xc24
---
Entry stack: [V13, 0x7f, S17, S16, S15, S14, S13, S12, S11, S10, 0x5be, S8, S7, S6, S5, S4, V1061, 0xbc3, 0x2, S0]
Stack pops: 4
Stack additions: [S3, S2, V1092, V1094]
Exit stack: [V13, 0x7f, S17, S16, S15, S14, S13, S12, S11, S10, 0x5be, S8, S7, S6, S5, S4, V1061, 0xbc3, V1092, V1094]

================================

Block 0xbc3
[0xbc3:0xbcf]
---
Predecessors: [0xd1a]
Successors: [0xbd0, 0xbd1]
---
0xbc3 JUMPDEST
0xbc4 PUSH1 0x4
0xbc6 DUP1
0xbc7 SLOAD
0xbc8 DUP7
0xbc9 SWAP1
0xbca DUP2
0xbcb LT
0xbcc PUSH2 0xbd1
0xbcf JUMPI
---
0xbc3: JUMPDEST 
0xbc4: V1096 = 0x4
0xbc7: V1097 = S[0x4]
0xbcb: V1098 = LT S4 V1097
0xbcc: V1099 = 0xbd1
0xbcf: JUMPI 0xbd1 V1098
---
Entry stack: [V13, 0x7f, S15, S14, S13, S12, S11, S10, S9, S8, 0x5be, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x4, S4]
Exit stack: [V13, 0x7f, S15, S14, S13, S12, S11, S10, S9, S8, 0x5be, S6, S5, S4, S3, S2, S1, S0, 0x4, S4]

================================

Block 0xbd0
[0xbd0:0xbd0]
---
Predecessors: [0xbc3]
Successors: []
---
0xbd0 INVALID
---
0xbd0: INVALID 
---
Entry stack: [V13, 0x7f, S17, S16, S15, S14, S13, S12, S11, S10, 0x5be, S8, S7, S6, S5, S4, S3, S2, 0x4, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, S17, S16, S15, S14, S13, S12, S11, S10, 0x5be, S8, S7, S6, S5, S4, S3, S2, 0x4, S0]

================================

Block 0xbd1
[0xbd1:0xc06]
---
Predecessors: [0xbc3]
Successors: [0x5be]
---
0xbd1 JUMPDEST
0xbd2 SWAP1
0xbd3 PUSH1 0x0
0xbd5 MSTORE
0xbd6 PUSH1 0x20
0xbd8 PUSH1 0x0
0xbda SHA3
0xbdb ADD
0xbdc PUSH1 0x0
0xbde PUSH2 0x100
0xbe1 EXP
0xbe2 DUP2
0xbe3 SLOAD
0xbe4 DUP2
0xbe5 PUSH1 0x1
0xbe7 PUSH1 0xa0
0xbe9 PUSH1 0x2
0xbeb EXP
0xbec SUB
0xbed MUL
0xbee NOT
0xbef AND
0xbf0 SWAP1
0xbf1 DUP4
0xbf2 PUSH1 0x1
0xbf4 PUSH1 0xa0
0xbf6 PUSH1 0x2
0xbf8 EXP
0xbf9 SUB
0xbfa AND
0xbfb MUL
0xbfc OR
0xbfd SWAP1
0xbfe SSTORE
0xbff POP
0xc00 POP
0xc01 POP
0xc02 POP
0xc03 POP
0xc04 POP
0xc05 POP
0xc06 JUMP
---
0xbd1: JUMPDEST 
0xbd3: V1100 = 0x0
0xbd5: M[0x0] = 0x4
0xbd6: V1101 = 0x20
0xbd8: V1102 = 0x0
0xbda: V1103 = SHA3 0x0 0x20
0xbdb: V1104 = ADD V1103 S0
0xbdc: V1105 = 0x0
0xbde: V1106 = 0x100
0xbe1: V1107 = EXP 0x100 0x0
0xbe3: V1108 = S[V1104]
0xbe5: V1109 = 0x1
0xbe7: V1110 = 0xa0
0xbe9: V1111 = 0x2
0xbeb: V1112 = EXP 0x2 0xa0
0xbec: V1113 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbed: V1114 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xbee: V1115 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xbef: V1116 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1108
0xbf2: V1117 = 0x1
0xbf4: V1118 = 0xa0
0xbf6: V1119 = 0x2
0xbf8: V1120 = EXP 0x2 0xa0
0xbf9: V1121 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbfa: V1122 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xbfb: V1123 = MUL V1122 0x1
0xbfc: V1124 = OR V1123 V1116
0xbfe: S[V1104] = V1124
0xc06: JUMP 0x5be
---
Entry stack: [V13, 0x7f, S17, S16, S15, S14, S13, S12, S11, S10, 0x5be, S8, S7, S6, S5, S4, S3, S2, 0x4, S0]
Stack pops: 10
Stack additions: []
Exit stack: [V13, 0x7f, S17, S16, S15, S14, S13, S12, S11, S10]

================================

Block 0xc07
[0xc07:0xc23]
---
Predecessors: [0x736]
Successors: [0xd59]
---
0xc07 JUMPDEST
0xc08 PUSH1 0x1
0xc0a SLOAD
0xc0b ADDRESS
0xc0c BALANCE
0xc0d SWAP1
0xc0e PUSH1 0x0
0xc10 SWAP1
0xc11 DUP2
0xc12 SWAP1
0xc13 PUSH2 0xacd
0xc16 SWAP1
0xc17 PUSH1 0x1
0xc19 PUSH1 0xa0
0xc1b PUSH1 0x2
0xc1d EXP
0xc1e SUB
0xc1f AND
0xc20 PUSH2 0xd59
0xc23 JUMP
---
0xc07: JUMPDEST 
0xc08: V1125 = 0x1
0xc0a: V1126 = S[0x1]
0xc0b: V1127 = ADDRESS
0xc0c: V1128 = BALANCE V1127
0xc0e: V1129 = 0x0
0xc13: V1130 = 0xacd
0xc17: V1131 = 0x1
0xc19: V1132 = 0xa0
0xc1b: V1133 = 0x2
0xc1d: V1134 = EXP 0x2 0xa0
0xc1e: V1135 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc1f: V1136 = AND 0xffffffffffffffffffffffffffffffffffffffff V1126
0xc20: V1137 = 0xd59
0xc23: JUMP 0xd59
---
Entry stack: [V13, 0x7f, S11, S10, S9, S8, S7, S6, S5, S4, 0x5be, S2, S1, S0]
Stack pops: 0
Stack additions: [V1128, 0x0, 0x0, 0xacd, V1136]
Exit stack: [V13, 0x7f, S11, S10, S9, S8, S7, S6, S5, S4, 0x5be, S2, S1, S0, V1128, 0x0, 0x0, 0xacd, V1136]

================================

Block 0xc24
[0xc24:0xc30]
---
Predecessors: [0x810, 0xba5]
Successors: [0xc31, 0xc5e]
---
0xc24 JUMPDEST
0xc25 PUSH1 0x0
0xc27 DUP1
0xc28 PUSH1 0x80
0xc2a DUP4
0xc2b LT
0xc2c ISZERO
0xc2d PUSH2 0xc5e
0xc30 JUMPI
---
0xc24: JUMPDEST 
0xc25: V1138 = 0x0
0xc28: V1139 = 0x80
0xc2b: V1140 = LT S0 0x80
0xc2c: V1141 = ISZERO V1140
0xc2d: V1142 = 0xc5e
0xc30: JUMPI 0xc5e V1141
---
Entry stack: [V13, 0x7f, S17, S16, S15, S14, S13, S12, S11, S10, 0x5be, S8, S7, S6, S5, S4, S3, {0x823, 0xbc3}, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0]
Exit stack: [V13, 0x7f, S17, S16, S15, S14, S13, S12, S11, S10, 0x5be, S8, S7, S6, S5, S4, S3, {0x823, 0xbc3}, S1, S0, 0x0, 0x0]

================================

Block 0xc31
[0xc31:0xc5d]
---
Predecessors: [0xc24]
Successors: [0xd1a]
---
0xc31 POP
0xc32 PUSH23 0xd694000000000000000000000000000000000000000000
0xc4a PUSH2 0x100
0xc4d DUP5
0xc4e MUL
0xc4f DUP4
0xc50 OR
0xc51 OR
0xc52 PUSH1 0x0
0xc54 MSTORE
0xc55 PUSH1 0x17
0xc57 PUSH1 0x9
0xc59 SHA3
0xc5a PUSH2 0xd1a
0xc5d JUMP
---
0xc32: V1143 = 0xd694000000000000000000000000000000000000000000
0xc4a: V1144 = 0x100
0xc4e: V1145 = MUL S3 0x100
0xc50: V1146 = OR S2 V1145
0xc51: V1147 = OR V1146 0xd694000000000000000000000000000000000000000000
0xc52: V1148 = 0x0
0xc54: M[0x0] = V1147
0xc55: V1149 = 0x17
0xc57: V1150 = 0x9
0xc59: V1151 = SHA3 0x9 0x17
0xc5a: V1152 = 0xd1a
0xc5d: JUMP 0xd1a
---
Entry stack: [V13, 0x7f, S19, S18, S17, S16, S15, S14, S13, S12, 0x5be, S10, S9, S8, S7, S6, S5, {0x823, 0xbc3}, S3, S2, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, V1151]
Exit stack: [V13, 0x7f, S19, S18, S17, S16, S15, S14, S13, S12, 0x5be, S10, S9, S8, S7, S6, S5, {0x823, 0xbc3}, S3, S2, 0x0, V1151]

================================

Block 0xc5e
[0xc5e:0xc68]
---
Predecessors: [0xc24]
Successors: [0xc69, 0xc98]
---
0xc5e JUMPDEST
0xc5f PUSH2 0x100
0xc62 DUP4
0xc63 LT
0xc64 ISZERO
0xc65 PUSH2 0xc98
0xc68 JUMPI
---
0xc5e: JUMPDEST 
0xc5f: V1153 = 0x100
0xc63: V1154 = LT S2 0x100
0xc64: V1155 = ISZERO V1154
0xc65: V1156 = 0xc98
0xc68: JUMPI 0xc98 V1155
---
Entry stack: [V13, 0x7f, S19, S18, S17, S16, S15, S14, S13, S12, 0x5be, S10, S9, S8, S7, S6, S5, {0x823, 0xbc3}, S3, S2, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x7f, S19, S18, S17, S16, S15, S14, S13, S12, 0x5be, S10, S9, S8, S7, S6, S5, {0x823, 0xbc3}, S3, S2, 0x0, 0x0]

================================

Block 0xc69
[0xc69:0xc97]
---
Predecessors: [0xc5e]
Successors: [0xd1a]
---
0xc69 POP
0xc6a PUSH24 0xd79400000000000000000000000000000000000000008100
0xc83 PUSH3 0x10000
0xc87 DUP5
0xc88 MUL
0xc89 DUP4
0xc8a OR
0xc8b OR
0xc8c PUSH1 0x0
0xc8e MSTORE
0xc8f PUSH1 0x18
0xc91 PUSH1 0x8
0xc93 SHA3
0xc94 PUSH2 0xd1a
0xc97 JUMP
---
0xc6a: V1157 = 0xd79400000000000000000000000000000000000000008100
0xc83: V1158 = 0x10000
0xc88: V1159 = MUL S3 0x10000
0xc8a: V1160 = OR S2 V1159
0xc8b: V1161 = OR V1160 0xd79400000000000000000000000000000000000000008100
0xc8c: V1162 = 0x0
0xc8e: M[0x0] = V1161
0xc8f: V1163 = 0x18
0xc91: V1164 = 0x8
0xc93: V1165 = SHA3 0x8 0x18
0xc94: V1166 = 0xd1a
0xc97: JUMP 0xd1a
---
Entry stack: [V13, 0x7f, S19, S18, S17, S16, S15, S14, S13, S12, 0x5be, S10, S9, S8, S7, S6, S5, {0x823, 0xbc3}, S3, S2, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, V1165]
Exit stack: [V13, 0x7f, S19, S18, S17, S16, S15, S14, S13, S12, 0x5be, S10, S9, S8, S7, S6, S5, {0x823, 0xbc3}, S3, S2, 0x0, V1165]

================================

Block 0xc98
[0xc98:0xca3]
---
Predecessors: [0xc5e]
Successors: [0xca4, 0xcd5]
---
0xc98 JUMPDEST
0xc99 PUSH3 0x10000
0xc9d DUP4
0xc9e LT
0xc9f ISZERO
0xca0 PUSH2 0xcd5
0xca3 JUMPI
---
0xc98: JUMPDEST 
0xc99: V1167 = 0x10000
0xc9e: V1168 = LT S2 0x10000
0xc9f: V1169 = ISZERO V1168
0xca0: V1170 = 0xcd5
0xca3: JUMPI 0xcd5 V1169
---
Entry stack: [V13, 0x7f, S19, S18, S17, S16, S15, S14, S13, S12, 0x5be, S10, S9, S8, S7, S6, S5, {0x823, 0xbc3}, S3, S2, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x7f, S19, S18, S17, S16, S15, S14, S13, S12, 0x5be, S10, S9, S8, S7, S6, S5, {0x823, 0xbc3}, S3, S2, 0x0, 0x0]

================================

Block 0xca4
[0xca4:0xcd4]
---
Predecessors: [0xc98]
Successors: [0xd1a]
---
0xca4 POP
0xca5 PUSH25 0xd8940000000000000000000000000000000000000000820000
0xcbf PUSH4 0x1000000
0xcc4 DUP5
0xcc5 MUL
0xcc6 DUP4
0xcc7 OR
0xcc8 OR
0xcc9 PUSH1 0x0
0xccb MSTORE
0xccc PUSH1 0x19
0xcce PUSH1 0x7
0xcd0 SHA3
0xcd1 PUSH2 0xd1a
0xcd4 JUMP
---
0xca5: V1171 = 0xd8940000000000000000000000000000000000000000820000
0xcbf: V1172 = 0x1000000
0xcc5: V1173 = MUL S3 0x1000000
0xcc7: V1174 = OR S2 V1173
0xcc8: V1175 = OR V1174 0xd8940000000000000000000000000000000000000000820000
0xcc9: V1176 = 0x0
0xccb: M[0x0] = V1175
0xccc: V1177 = 0x19
0xcce: V1178 = 0x7
0xcd0: V1179 = SHA3 0x7 0x19
0xcd1: V1180 = 0xd1a
0xcd4: JUMP 0xd1a
---
Entry stack: [V13, 0x7f, S19, S18, S17, S16, S15, S14, S13, S12, 0x5be, S10, S9, S8, S7, S6, S5, {0x823, 0xbc3}, S3, S2, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, V1179]
Exit stack: [V13, 0x7f, S19, S18, S17, S16, S15, S14, S13, S12, 0x5be, S10, S9, S8, S7, S6, S5, {0x823, 0xbc3}, S3, S2, 0x0, V1179]

================================

Block 0xcd5
[0xcd5:0xce1]
---
Predecessors: [0xc98]
Successors: [0xce2, 0xd15]
---
0xcd5 JUMPDEST
0xcd6 PUSH4 0x1000000
0xcdb DUP4
0xcdc LT
0xcdd ISZERO
0xcde PUSH2 0xd15
0xce1 JUMPI
---
0xcd5: JUMPDEST 
0xcd6: V1181 = 0x1000000
0xcdc: V1182 = LT S2 0x1000000
0xcdd: V1183 = ISZERO V1182
0xcde: V1184 = 0xd15
0xce1: JUMPI 0xd15 V1183
---
Entry stack: [V13, 0x7f, S19, S18, S17, S16, S15, S14, S13, S12, 0x5be, S10, S9, S8, S7, S6, S5, {0x823, 0xbc3}, S3, S2, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x7f, S19, S18, S17, S16, S15, S14, S13, S12, 0x5be, S10, S9, S8, S7, S6, S5, {0x823, 0xbc3}, S3, S2, 0x0, 0x0]

================================

Block 0xce2
[0xce2:0xd14]
---
Predecessors: [0xcd5]
Successors: [0xd1a]
---
0xce2 POP
0xce3 PUSH26 0xd994000000000000000000000000000000000000000083000000
0xcfe PUSH5 0x100000000
0xd04 DUP5
0xd05 MUL
0xd06 DUP4
0xd07 OR
0xd08 OR
0xd09 PUSH1 0x0
0xd0b MSTORE
0xd0c PUSH1 0x1a
0xd0e PUSH1 0x6
0xd10 SHA3
0xd11 PUSH2 0xd1a
0xd14 JUMP
---
0xce3: V1185 = 0xd994000000000000000000000000000000000000000083000000
0xcfe: V1186 = 0x100000000
0xd05: V1187 = MUL S3 0x100000000
0xd07: V1188 = OR S2 V1187
0xd08: V1189 = OR V1188 0xd994000000000000000000000000000000000000000083000000
0xd09: V1190 = 0x0
0xd0b: M[0x0] = V1189
0xd0c: V1191 = 0x1a
0xd0e: V1192 = 0x6
0xd10: V1193 = SHA3 0x6 0x1a
0xd11: V1194 = 0xd1a
0xd14: JUMP 0xd1a
---
Entry stack: [V13, 0x7f, S19, S18, S17, S16, S15, S14, S13, S12, 0x5be, S10, S9, S8, S7, S6, S5, {0x823, 0xbc3}, S3, S2, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, V1193]
Exit stack: [V13, 0x7f, S19, S18, S17, S16, S15, S14, S13, S12, 0x5be, S10, S9, S8, S7, S6, S5, {0x823, 0xbc3}, S3, S2, 0x0, V1193]

================================

Block 0xd15
[0xd15:0xd19]
---
Predecessors: [0xcd5]
Successors: []
---
0xd15 JUMPDEST
0xd16 PUSH1 0x0
0xd18 DUP1
0xd19 REVERT
---
0xd15: JUMPDEST 
0xd16: V1195 = 0x0
0xd19: REVERT 0x0 0x0
---
Entry stack: [V13, 0x7f, S19, S18, S17, S16, S15, S14, S13, S12, 0x5be, S10, S9, S8, S7, S6, S5, {0x823, 0xbc3}, S3, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x7f, S19, S18, S17, S16, S15, S14, S13, S12, 0x5be, S10, S9, S8, S7, S6, S5, {0x823, 0xbc3}, S3, S2, 0x0, 0x0]

================================

Block 0xd1a
[0xd1a:0xd20]
---
Predecessors: [0xc31, 0xc69, 0xca4, 0xce2]
Successors: [0x823, 0xbc3]
---
0xd1a JUMPDEST
0xd1b SWAP4
0xd1c SWAP3
0xd1d POP
0xd1e POP
0xd1f POP
0xd20 JUMP
---
0xd1a: JUMPDEST 
0xd20: JUMP {0x823, 0xbc3}
---
Entry stack: [V13, 0x7f, S19, S18, S17, S16, S15, S14, S13, S12, 0x5be, S10, S9, S8, S7, S6, S5, {0x823, 0xbc3}, S3, S2, 0x0, S0]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V13, 0x7f, S19, S18, S17, S16, S15, S14, S13, S12, 0x5be, S10, S9, S8, S7, S6, S5, S0]

================================

Block 0xd21
[0xd21:0xd58]
---
Predecessors: [0xab0]
Successors: [0xacd]
---
0xd21 JUMPDEST
0xd22 PUSH32 0x18f8cf1d000000010000000000000000000000000000000000000000e2d4306b
0xd43 PUSH1 0x1
0xd45 PUSH1 0xa0
0xd47 PUSH1 0x2
0xd49 EXP
0xd4a SUB
0xd4b SWAP2
0xd4c SWAP1
0xd4d SWAP2
0xd4e AND
0xd4f PUSH5 0x100000000
0xd55 MUL
0xd56 OR
0xd57 SWAP1
0xd58 JUMP
---
0xd21: JUMPDEST 
0xd22: V1196 = 0x18f8cf1d000000010000000000000000000000000000000000000000e2d4306b
0xd43: V1197 = 0x1
0xd45: V1198 = 0xa0
0xd47: V1199 = 0x2
0xd49: V1200 = EXP 0x2 0xa0
0xd4a: V1201 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd4e: V1202 = AND 0xffffffffffffffffffffffffffffffffffffffff V1003
0xd4f: V1203 = 0x100000000
0xd55: V1204 = MUL 0x100000000 V1202
0xd56: V1205 = OR V1204 0x18f8cf1d000000010000000000000000000000000000000000000000e2d4306b
0xd58: JUMP 0xacd
---
Entry stack: [V13, 0x7f, S16, S15, S14, S13, S12, S11, S10, S9, 0x5be, S7, S6, S5, V995, 0x0, 0x0, 0xacd, V1003]
Stack pops: 2
Stack additions: [V1205]
Exit stack: [V13, 0x7f, S16, S15, S14, S13, S12, S11, S10, S9, 0x5be, S7, S6, S5, V995, 0x0, 0x0, V1205]

================================

Block 0xd59
[0xd59:0xd90]
---
Predecessors: [0xc07]
Successors: [0xacd]
---
0xd59 JUMPDEST
0xd5a PUSH32 0x18f8cf1d000000010000000000000000000000000000000000000000059d2922
0xd7b PUSH1 0x1
0xd7d PUSH1 0xa0
0xd7f PUSH1 0x2
0xd81 EXP
0xd82 SUB
0xd83 SWAP2
0xd84 SWAP1
0xd85 SWAP2
0xd86 AND
0xd87 PUSH5 0x100000000
0xd8d MUL
0xd8e OR
0xd8f SWAP1
0xd90 JUMP
---
0xd59: JUMPDEST 
0xd5a: V1206 = 0x18f8cf1d000000010000000000000000000000000000000000000000059d2922
0xd7b: V1207 = 0x1
0xd7d: V1208 = 0xa0
0xd7f: V1209 = 0x2
0xd81: V1210 = EXP 0x2 0xa0
0xd82: V1211 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd86: V1212 = AND 0xffffffffffffffffffffffffffffffffffffffff V1136
0xd87: V1213 = 0x100000000
0xd8d: V1214 = MUL 0x100000000 V1212
0xd8e: V1215 = OR V1214 0x18f8cf1d000000010000000000000000000000000000000000000000059d2922
0xd90: JUMP 0xacd
---
Entry stack: [V13, 0x7f, S16, S15, S14, S13, S12, S11, S10, S9, 0x5be, S7, S6, S5, V1128, 0x0, 0x0, 0xacd, V1136]
Stack pops: 2
Stack additions: [V1215]
Exit stack: [V13, 0x7f, S16, S15, S14, S13, S12, S11, S10, S9, 0x5be, S7, S6, S5, V1128, 0x0, 0x0, V1215]

================================

Block 0xd91
[0xd91:0xd9f]
---
Predecessors: [0x1bf]
Successors: [0x1cc]
---
0xd91 JUMPDEST
0xd92 PUSH1 0x40
0xd94 MLOAD
0xd95 PUSH1 0x99
0xd97 DUP1
0xd98 PUSH2 0xdb0
0xd9b DUP4
0xd9c CODECOPY
0xd9d ADD
0xd9e SWAP1
0xd9f JUMP
---
0xd91: JUMPDEST 
0xd92: V1216 = 0x40
0xd94: V1217 = M[0x40]
0xd95: V1218 = 0x99
0xd98: V1219 = 0xdb0
0xd9c: CODECOPY V1217 0xdb0 0x99
0xd9d: V1220 = ADD 0x99 V1217
0xd9f: JUMP 0x1cc
---
Entry stack: [V13, 0x7f, V49, V51, V54, V57, V175, V49, V51, V54, V57, 0x1cc]
Stack pops: 1
Stack additions: [V1220]
Exit stack: [V13, 0x7f, V49, V51, V54, V57, V175, V49, V51, V54, V57, V1220]

================================

Block 0xda0
[0xda0:0xdae]
---
Predecessors: [0x8b0]
Successors: [0x1cc]
---
0xda0 JUMPDEST
0xda1 PUSH1 0x40
0xda3 MLOAD
0xda4 PUSH1 0x99
0xda6 DUP1
0xda7 PUSH2 0xe49
0xdaa DUP4
0xdab CODECOPY
0xdac ADD
0xdad SWAP1
0xdae JUMP
---
0xda0: JUMPDEST 
0xda1: V1221 = 0x40
0xda3: V1222 = M[0x40]
0xda4: V1223 = 0x99
0xda7: V1224 = 0xe49
0xdab: CODECOPY V1222 0xe49 0x99
0xdac: V1225 = ADD 0x99 V1222
0xdae: JUMP 0x1cc
---
Entry stack: [V13, 0x7f, V149, V151, V154, V157, V796, V149, V151, V154, V157, 0x1cc]
Stack pops: 1
Stack additions: [V1225]
Exit stack: [V13, 0x7f, V149, V151, V154, V157, V796, V149, V151, V154, V157, V1225]

================================

Block 0xdaf
[0xdaf:0xf1b]
---
Predecessors: []
Successors: []
---
0xdaf STOP
0xdb0 PUSH1 0x80
0xdb2 PUSH1 0x40
0xdb4 MSTORE
0xdb5 PUSH1 0x40
0xdb7 MLOAD
0xdb8 PUSH1 0x80
0xdba DUP1
0xdbb PUSH1 0x99
0xdbd DUP4
0xdbe CODECOPY
0xdbf DUP2
0xdc0 ADD
0xdc1 PUSH1 0x40
0xdc3 DUP2
0xdc4 DUP2
0xdc5 MSTORE
0xdc6 DUP3
0xdc7 MLOAD
0xdc8 PUSH1 0x20
0xdca DUP5
0xdcb ADD
0xdcc MLOAD
0xdcd DUP3
0xdce DUP6
0xdcf ADD
0xdd0 MLOAD
0xdd1 PUSH1 0x60
0xdd3 SWAP1
0xdd4 SWAP6
0xdd5 ADD
0xdd6 MLOAD
0xdd7 PUSH32 0x5c644ae800000000000000000000000000000000000000000000000000000000
0xdf8 DUP6
0xdf9 MSTORE
0xdfa PUSH1 0x1
0xdfc PUSH1 0xa0
0xdfe PUSH1 0x2
0xe00 EXP
0xe01 SUB
0xe02 DUP1
0xe03 DUP5
0xe04 AND
0xe05 PUSH1 0x4
0xe07 DUP8
0xe08 ADD
0xe09 MSTORE
0xe0a PUSH1 0x24
0xe0c DUP7
0xe0d ADD
0xe0e DUP4
0xe0f SWAP1
0xe10 MSTORE
0xe11 SWAP4
0xe12 MLOAD
0xe13 SWAP3
0xe14 SWAP6
0xe15 SWAP2
0xe16 SWAP5
0xe17 SWAP2
0xe18 SWAP4
0xe19 SWAP1
0xe1a SWAP3
0xe1b SWAP1
0xe1c DUP5
0xe1d AND
0xe1e SWAP2
0xe1f PUSH4 0x5c644ae8
0xe24 SWAP2
0xe25 PUSH1 0x44
0xe27 DUP1
0xe28 DUP4
0xe29 ADD
0xe2a SWAP3
0xe2b PUSH1 0x0
0xe2d SWAP3
0xe2e SWAP2
0xe2f SWAP1
0xe30 DUP3
0xe31 SWAP1
0xe32 SUB
0xe33 ADD
0xe34 DUP2
0xe35 DUP7
0xe36 GAS
0xe37 DELEGATECALL
0xe38 SWAP3
0xe39 POP
0xe3a POP
0xe3b POP
0xe3c POP
0xe3d DUP1
0xe3e PUSH1 0x1
0xe40 PUSH1 0xa0
0xe42 PUSH1 0x2
0xe44 EXP
0xe45 SUB
0xe46 AND
0xe47 SELFDESTRUCT
0xe48 STOP
0xe49 PUSH1 0x80
0xe4b PUSH1 0x40
0xe4d MSTORE
0xe4e PUSH1 0x40
0xe50 MLOAD
0xe51 PUSH1 0x80
0xe53 DUP1
0xe54 PUSH1 0x99
0xe56 DUP4
0xe57 CODECOPY
0xe58 DUP2
0xe59 ADD
0xe5a PUSH1 0x40
0xe5c DUP2
0xe5d DUP2
0xe5e MSTORE
0xe5f DUP3
0xe60 MLOAD
0xe61 PUSH1 0x20
0xe63 DUP5
0xe64 ADD
0xe65 MLOAD
0xe66 DUP3
0xe67 DUP6
0xe68 ADD
0xe69 MLOAD
0xe6a PUSH1 0x60
0xe6c SWAP1
0xe6d SWAP6
0xe6e ADD
0xe6f MLOAD
0xe70 PUSH32 0xc1e7ce6b00000000000000000000000000000000000000000000000000000000
0xe91 DUP6
0xe92 MSTORE
0xe93 PUSH1 0x1
0xe95 PUSH1 0xa0
0xe97 PUSH1 0x2
0xe99 EXP
0xe9a SUB
0xe9b DUP1
0xe9c DUP5
0xe9d AND
0xe9e PUSH1 0x4
0xea0 DUP8
0xea1 ADD
0xea2 MSTORE
0xea3 PUSH1 0x24
0xea5 DUP7
0xea6 ADD
0xea7 DUP4
0xea8 SWAP1
0xea9 MSTORE
0xeaa SWAP4
0xeab MLOAD
0xeac SWAP3
0xead SWAP6
0xeae SWAP2
0xeaf SWAP5
0xeb0 SWAP2
0xeb1 SWAP4
0xeb2 SWAP1
0xeb3 SWAP3
0xeb4 SWAP1
0xeb5 DUP5
0xeb6 AND
0xeb7 SWAP2
0xeb8 PUSH4 0xc1e7ce6b
0xebd SWAP2
0xebe PUSH1 0x44
0xec0 DUP1
0xec1 DUP4
0xec2 ADD
0xec3 SWAP3
0xec4 PUSH1 0x0
0xec6 SWAP3
0xec7 SWAP2
0xec8 SWAP1
0xec9 DUP3
0xeca SWAP1
0xecb SUB
0xecc ADD
0xecd DUP2
0xece DUP7
0xecf GAS
0xed0 DELEGATECALL
0xed1 SWAP3
0xed2 POP
0xed3 POP
0xed4 POP
0xed5 POP
0xed6 DUP1
0xed7 PUSH1 0x1
0xed9 PUSH1 0xa0
0xedb PUSH1 0x2
0xedd EXP
0xede SUB
0xedf AND
0xee0 SELFDESTRUCT
0xee1 STOP
0xee2 LOG1
0xee3 PUSH6 0x627a7a723058
0xeea SHA3
0xeeb MISSING 0xe3
0xeec MISSING 0xba
0xeed PUSH17 0xa320c0b921bf9e3df3f82f2a09900adb35
0xeff MISSING 0xc0
0xf00 PUSH27 0x2a2862658ba04c7a012d0029
---
0xdaf: STOP 
0xdb0: V1226 = 0x80
0xdb2: V1227 = 0x40
0xdb4: M[0x40] = 0x80
0xdb5: V1228 = 0x40
0xdb7: V1229 = M[0x40]
0xdb8: V1230 = 0x80
0xdbb: V1231 = 0x99
0xdbe: CODECOPY V1229 0x99 0x80
0xdc0: V1232 = ADD V1229 0x80
0xdc1: V1233 = 0x40
0xdc5: M[0x40] = V1232
0xdc7: V1234 = M[V1229]
0xdc8: V1235 = 0x20
0xdcb: V1236 = ADD V1229 0x20
0xdcc: V1237 = M[V1236]
0xdcf: V1238 = ADD V1229 0x40
0xdd0: V1239 = M[V1238]
0xdd1: V1240 = 0x60
0xdd5: V1241 = ADD V1229 0x60
0xdd6: V1242 = M[V1241]
0xdd7: V1243 = 0x5c644ae800000000000000000000000000000000000000000000000000000000
0xdf9: M[V1232] = 0x5c644ae800000000000000000000000000000000000000000000000000000000
0xdfa: V1244 = 0x1
0xdfc: V1245 = 0xa0
0xdfe: V1246 = 0x2
0xe00: V1247 = EXP 0x2 0xa0
0xe01: V1248 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe04: V1249 = AND V1234 0xffffffffffffffffffffffffffffffffffffffff
0xe05: V1250 = 0x4
0xe08: V1251 = ADD V1232 0x4
0xe09: M[V1251] = V1249
0xe0a: V1252 = 0x24
0xe0d: V1253 = ADD V1232 0x24
0xe10: M[V1253] = V1237
0xe12: V1254 = M[0x40]
0xe1d: V1255 = AND V1239 0xffffffffffffffffffffffffffffffffffffffff
0xe1f: V1256 = 0x5c644ae8
0xe25: V1257 = 0x44
0xe29: V1258 = ADD V1232 0x44
0xe2b: V1259 = 0x0
0xe32: V1260 = SUB V1232 V1254
0xe33: V1261 = ADD V1260 0x44
0xe36: V1262 = GAS
0xe37: V1263 = DELEGATECALL V1262 V1255 V1254 V1261 V1254 0x0
0xe3e: V1264 = 0x1
0xe40: V1265 = 0xa0
0xe42: V1266 = 0x2
0xe44: V1267 = EXP 0x2 0xa0
0xe45: V1268 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe46: V1269 = AND 0xffffffffffffffffffffffffffffffffffffffff V1242
0xe47: SELFDESTRUCT V1269
0xe48: STOP 
0xe49: V1270 = 0x80
0xe4b: V1271 = 0x40
0xe4d: M[0x40] = 0x80
0xe4e: V1272 = 0x40
0xe50: V1273 = M[0x40]
0xe51: V1274 = 0x80
0xe54: V1275 = 0x99
0xe57: CODECOPY V1273 0x99 0x80
0xe59: V1276 = ADD V1273 0x80
0xe5a: V1277 = 0x40
0xe5e: M[0x40] = V1276
0xe60: V1278 = M[V1273]
0xe61: V1279 = 0x20
0xe64: V1280 = ADD V1273 0x20
0xe65: V1281 = M[V1280]
0xe68: V1282 = ADD V1273 0x40
0xe69: V1283 = M[V1282]
0xe6a: V1284 = 0x60
0xe6e: V1285 = ADD V1273 0x60
0xe6f: V1286 = M[V1285]
0xe70: V1287 = 0xc1e7ce6b00000000000000000000000000000000000000000000000000000000
0xe92: M[V1276] = 0xc1e7ce6b00000000000000000000000000000000000000000000000000000000
0xe93: V1288 = 0x1
0xe95: V1289 = 0xa0
0xe97: V1290 = 0x2
0xe99: V1291 = EXP 0x2 0xa0
0xe9a: V1292 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe9d: V1293 = AND V1278 0xffffffffffffffffffffffffffffffffffffffff
0xe9e: V1294 = 0x4
0xea1: V1295 = ADD V1276 0x4
0xea2: M[V1295] = V1293
0xea3: V1296 = 0x24
0xea6: V1297 = ADD V1276 0x24
0xea9: M[V1297] = V1281
0xeab: V1298 = M[0x40]
0xeb6: V1299 = AND V1283 0xffffffffffffffffffffffffffffffffffffffff
0xeb8: V1300 = 0xc1e7ce6b
0xebe: V1301 = 0x44
0xec2: V1302 = ADD V1276 0x44
0xec4: V1303 = 0x0
0xecb: V1304 = SUB V1276 V1298
0xecc: V1305 = ADD V1304 0x44
0xecf: V1306 = GAS
0xed0: V1307 = DELEGATECALL V1306 V1299 V1298 V1305 V1298 0x0
0xed7: V1308 = 0x1
0xed9: V1309 = 0xa0
0xedb: V1310 = 0x2
0xedd: V1311 = EXP 0x2 0xa0
0xede: V1312 = SUB 0x10000000000000000000000000000000000000000 0x1
0xedf: V1313 = AND 0xffffffffffffffffffffffffffffffffffffffff V1286
0xee0: SELFDESTRUCT V1313
0xee1: STOP 
0xee2: LOG S0 S1 S2
0xee3: V1314 = 0x627a7a723058
0xeea: V1315 = SHA3 0x627a7a723058 S3
0xeeb: MISSING 0xe3
0xeec: MISSING 0xba
0xeed: V1316 = 0xa320c0b921bf9e3df3f82f2a09900adb35
0xeff: MISSING 0xc0
0xf00: V1317 = 0x2a2862658ba04c7a012d0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V1242, V1239, V1237, V1234, V1286, V1283, V1281, V1278, V1315, 0xa320c0b921bf9e3df3f82f2a09900adb35, 0x2a2862658ba04c7a012d0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x59d2922
Entry block: 0x81
Exit block: 0x7f
Body: 0x7f, 0x81, 0x183, 0x19c, 0x1b4, 0x1bb, 0x1bf, 0x1cc, 0x209, 0x212, 0xd91

Function 1:
Public function signature: 0x18f8cf1d
Entry block: 0xa5
Exit block: 0x2ed
Body: 0x7f, 0xa5, 0x21b, 0x234, 0x24c, 0x253, 0x257, 0x261, 0x265, 0x294, 0x29c, 0x2a0, 0x2b0, 0x2bb, 0x2c4, 0x2cc, 0x2d0, 0x2d8, 0x2dc, 0x2e9, 0x2ed

Function 2:
Public function signature: 0x3ccfd60b
Entry block: 0xad
Exit block: 0x7f
Body: 0x7f, 0xad, 0xb5, 0xb9, 0x2fc, 0x315, 0x32d, 0x334, 0x338, 0x35c, 0x365

Function 3:
Public function signature: 0x5c644ae8
Entry block: 0xc2
Exit block: 0x7f
Body: 0x7f, 0xc2, 0x368, 0x3b6, 0x3ba, 0x3c5, 0x3ce, 0x40d, 0x411, 0x41c, 0x425

Function 4:
Public function signature: 0x82fcb560
Entry block: 0xd9
Exit block: 0x80f
Body: 0x7f, 0xd9, 0xe1, 0xe5, 0x2f2, 0x42d, 0x44c, 0x464, 0x46b, 0x46f, 0x4a9, 0x4ad, 0x4b8, 0x4c1, 0x4d3, 0x4d7, 0x4e4, 0x4e8, 0x522, 0x526, 0x531, 0x53a, 0x54c, 0x550, 0x55d, 0x561, 0x56f, 0x576, 0x581, 0x5ae, 0x5b4, 0x5be, 0x5c3, 0x7d0, 0x7d9, 0x7e9, 0x7ea, 0x80f, 0x810, 0x823, 0x830, 0x831, 0x86f, 0xab0, 0xacd, 0xadd, 0xade, 0xb46, 0xb4a, 0xb53, 0xb57, 0xb64, 0xb65, 0xb84, 0xb85, 0xba4, 0xba5, 0xbc3, 0xbd0, 0xbd1, 0xc24, 0xc31, 0xc5e, 0xc69, 0xc98, 0xca4, 0xcd5, 0xce2, 0xd15, 0xd1a, 0xd21

Function 5:
Public function signature: 0xbf6001c3
Entry block: 0x103
Exit block: 0x80f
Body: 0x7f, 0x103, 0x10b, 0x10f, 0x2f2, 0x5be, 0x5cb, 0x5ea, 0x602, 0x609, 0x60d, 0x647, 0x64b, 0x656, 0x65f, 0x671, 0x675, 0x682, 0x686, 0x6c0, 0x6c4, 0x6cf, 0x6d8, 0x6ea, 0x6ee, 0x6fb, 0x6ff, 0x70d, 0x714, 0x71f, 0x730, 0x736, 0x740, 0x7d0, 0x7d9, 0x7e9, 0x7ea, 0x80f, 0x810, 0x823, 0x830, 0x831, 0x86f, 0xacd, 0xadd, 0xade, 0xb46, 0xb4a, 0xb53, 0xb57, 0xb64, 0xb65, 0xb84, 0xb85, 0xba4, 0xba5, 0xbc3, 0xbd0, 0xbd1, 0xc07, 0xc24, 0xc31, 0xc5e, 0xc69, 0xc98, 0xca4, 0xcd5, 0xce2, 0xd15, 0xd1a, 0xd59

Function 6:
Public function signature: 0xc1e7ce6b
Entry block: 0x12d
Exit block: 0x7f
Body: 0x7f, 0x12d, 0x3ba, 0x3c5, 0x3ce, 0x40d, 0x411, 0x41c, 0x425, 0x748, 0x78d

Function 7:
Public function signature: 0xd12d7b46
Entry block: 0x144
Exit block: 0x7f
Body: 0x7f, 0x144, 0x14c, 0x150, 0x2f2, 0x5be, 0x791, 0x7aa, 0x7c2, 0x7c9, 0x7cd, 0x7d0, 0x7d9, 0x7e9, 0x7ea, 0x80f, 0x810, 0x823, 0x830, 0x831, 0x86f, 0xbc3, 0xbd0, 0xbd1, 0xc24, 0xc31, 0xc5e, 0xc69, 0xc98, 0xca4, 0xcd5, 0xce2, 0xd15, 0xd1a

Function 8:
Public function signature: 0xe2d4306b
Entry block: 0x15f
Exit block: 0x7f
Body: 0x7f, 0x15f, 0x1cc, 0x209, 0x212, 0x874, 0x88d, 0x8a5, 0x8ac, 0x8b0, 0xda0

Function 9:
Public fallback function
Entry block: 0x7f
Exit block: 0x7f
Body: 0x7f

Function 10:
Private function
Entry block: 0x592
Exit block: 0xa6f
Body: 0x592, 0x974, 0x9ca, 0x9d3, 0x9e9, 0xa1f, 0xa50, 0xa59, 0xa6f

Function 11:
Private function
Entry block: 0x8bd
Exit block: 0x968
Body: 0x8bd, 0x913, 0x91c, 0x932, 0x968

