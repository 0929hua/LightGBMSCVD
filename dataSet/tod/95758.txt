Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x67]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x67
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x67
0xa: JUMPI 0x67 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x7a]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x2b68b9c6
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x7a
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x2b68b9c6
0x20: V14 = EQ V12 0x2b68b9c6
0x21: V15 = 0x7a
0x24: JUMPI 0x7a V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x8f]
---
0x25 DUP1
0x26 PUSH4 0x3ccfd60b
0x2b EQ
0x2c PUSH2 0x8f
0x2f JUMPI
---
0x26: V16 = 0x3ccfd60b
0x2b: V17 = EQ 0x3ccfd60b V12
0x2c: V18 = 0x8f
0x2f: JUMPI 0x8f V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0xa4]
---
0x30 DUP1
0x31 PUSH4 0x6fb7fc8b
0x36 EQ
0x37 PUSH2 0xa4
0x3a JUMPI
---
0x31: V19 = 0x6fb7fc8b
0x36: V20 = EQ 0x6fb7fc8b V12
0x37: V21 = 0xa4
0x3a: JUMPI 0xa4 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x15f]
---
0x3b DUP1
0x3c PUSH4 0x77a7d968
0x41 EQ
0x42 PUSH2 0x15f
0x45 JUMPI
---
0x3c: V22 = 0x77a7d968
0x41: V23 = EQ 0x77a7d968 V12
0x42: V24 = 0x15f
0x45: JUMPI 0x15f V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x210]
---
0x46 DUP1
0x47 PUSH4 0x9e281a98
0x4c EQ
0x4d PUSH2 0x210
0x50 JUMPI
---
0x47: V25 = 0x9e281a98
0x4c: V26 = EQ 0x9e281a98 V12
0x4d: V27 = 0x210
0x50: JUMPI 0x210 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x234]
---
0x51 DUP1
0x52 PUSH4 0xcac7fc71
0x57 EQ
0x58 PUSH2 0x234
0x5b JUMPI
---
0x52: V28 = 0xcac7fc71
0x57: V29 = EQ 0xcac7fc71 V12
0x58: V30 = 0x234
0x5b: JUMPI 0x234 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x2ef]
---
0x5c DUP1
0x5d PUSH4 0xf851a440
0x62 EQ
0x63 PUSH2 0x2ef
0x66 JUMPI
---
0x5d: V31 = 0xf851a440
0x62: V32 = EQ 0xf851a440 V12
0x63: V33 = 0x2ef
0x66: JUMPI 0x2ef V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x6d]
---
Predecessors: [0x0, 0x5c]
Successors: [0x6e, 0x72]
---
0x67 JUMPDEST
0x68 CALLVALUE
0x69 ISZERO
0x6a PUSH2 0x72
0x6d JUMPI
---
0x67: JUMPDEST 
0x68: V34 = CALLVALUE
0x69: V35 = ISZERO V34
0x6a: V36 = 0x72
0x6d: JUMPI 0x72 V35
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x6e
[0x6e:0x71]
---
Predecessors: [0x67]
Successors: []
---
0x6e PUSH1 0x0
0x70 DUP1
0x71 REVERT
---
0x6e: V37 = 0x0
0x71: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x72
[0x72:0x72]
---
Predecessors: [0x67]
Successors: [0x73]
---
0x72 JUMPDEST
---
0x72: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x73
[0x73:0x77]
---
Predecessors: [0x72]
Successors: []
---
0x73 JUMPDEST
0x74 PUSH1 0x0
0x76 DUP1
0x77 REVERT
---
0x73: JUMPDEST 
0x74: V38 = 0x0
0x77: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x78
[0x78:0x79]
---
Predecessors: [0x344, 0x3fb, 0x806]
Successors: []
---
0x78 JUMPDEST
0x79 STOP
---
0x78: JUMPDEST 
0x79: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x7a
[0x7a:0x80]
---
Predecessors: [0xb]
Successors: [0x81, 0x85]
---
0x7a JUMPDEST
0x7b CALLVALUE
0x7c ISZERO
0x7d PUSH2 0x85
0x80 JUMPI
---
0x7a: JUMPDEST 
0x7b: V39 = CALLVALUE
0x7c: V40 = ISZERO V39
0x7d: V41 = 0x85
0x80: JUMPI 0x85 V40
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x81
[0x81:0x84]
---
Predecessors: [0x7a]
Successors: []
---
0x81 PUSH1 0x0
0x83 DUP1
0x84 REVERT
---
0x81: V42 = 0x0
0x84: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x85
[0x85:0x8c]
---
Predecessors: [0x7a]
Successors: [0x31e]
---
0x85 JUMPDEST
0x86 PUSH2 0x78
0x89 PUSH2 0x31e
0x8c JUMP
---
0x85: JUMPDEST 
0x86: V43 = 0x78
0x89: V44 = 0x31e
0x8c: JUMP 0x31e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x78]
Exit stack: [V12, 0x78]

================================

Block 0x8d
[0x8d:0x8e]
---
Predecessors: []
Successors: []
---
0x8d JUMPDEST
0x8e STOP
---
0x8d: JUMPDEST 
0x8e: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x8f
[0x8f:0x95]
---
Predecessors: [0x25]
Successors: [0x96, 0x9a]
---
0x8f JUMPDEST
0x90 CALLVALUE
0x91 ISZERO
0x92 PUSH2 0x9a
0x95 JUMPI
---
0x8f: JUMPDEST 
0x90: V45 = CALLVALUE
0x91: V46 = ISZERO V45
0x92: V47 = 0x9a
0x95: JUMPI 0x9a V46
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x96
[0x96:0x99]
---
Predecessors: [0x8f]
Successors: []
---
0x96 PUSH1 0x0
0x98 DUP1
0x99 REVERT
---
0x96: V48 = 0x0
0x99: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9a
[0x9a:0xa1]
---
Predecessors: [0x8f]
Successors: [0x346]
---
0x9a JUMPDEST
0x9b PUSH2 0x78
0x9e PUSH2 0x346
0xa1 JUMP
---
0x9a: JUMPDEST 
0x9b: V49 = 0x78
0x9e: V50 = 0x346
0xa1: JUMP 0x346
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x78]
Exit stack: [V12, 0x78]

================================

Block 0xa2
[0xa2:0xa3]
---
Predecessors: []
Successors: []
---
0xa2 JUMPDEST
0xa3 STOP
---
0xa2: JUMPDEST 
0xa3: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa4
[0xa4:0xaa]
---
Predecessors: [0x30]
Successors: [0xab, 0xaf]
---
0xa4 JUMPDEST
0xa5 CALLVALUE
0xa6 ISZERO
0xa7 PUSH2 0xaf
0xaa JUMPI
---
0xa4: JUMPDEST 
0xa5: V51 = CALLVALUE
0xa6: V52 = ISZERO V51
0xa7: V53 = 0xaf
0xaa: JUMPI 0xaf V52
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xab
[0xab:0xae]
---
Predecessors: [0xa4]
Successors: []
---
0xab PUSH1 0x0
0xad DUP1
0xae REVERT
---
0xab: V54 = 0x0
0xae: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xaf
[0xaf:0x10a]
---
Predecessors: [0xa4]
Successors: [0x3fe]
---
0xaf JUMPDEST
0xb0 PUSH2 0x10b
0xb3 PUSH1 0x1
0xb5 PUSH1 0xa0
0xb7 PUSH1 0x2
0xb9 EXP
0xba SUB
0xbb PUSH1 0x4
0xbd DUP1
0xbe CALLDATALOAD
0xbf DUP3
0xc0 AND
0xc1 SWAP2
0xc2 PUSH1 0x24
0xc4 DUP1
0xc5 CALLDATALOAD
0xc6 SWAP1
0xc7 SWAP2
0xc8 AND
0xc9 SWAP2
0xca SWAP1
0xcb PUSH1 0x64
0xcd SWAP1
0xce PUSH1 0x44
0xd0 CALLDATALOAD
0xd1 SWAP1
0xd2 DUP2
0xd3 ADD
0xd4 SWAP1
0xd5 DUP4
0xd6 ADD
0xd7 CALLDATALOAD
0xd8 DUP1
0xd9 PUSH1 0x20
0xdb DUP2
0xdc DUP2
0xdd MUL
0xde ADD
0xdf PUSH1 0x40
0xe1 MLOAD
0xe2 SWAP1
0xe3 DUP2
0xe4 ADD
0xe5 PUSH1 0x40
0xe7 MSTORE
0xe8 DUP1
0xe9 SWAP4
0xea SWAP3
0xeb SWAP2
0xec SWAP1
0xed DUP2
0xee DUP2
0xef MSTORE
0xf0 PUSH1 0x20
0xf2 ADD
0xf3 DUP4
0xf4 DUP4
0xf5 PUSH1 0x20
0xf7 MUL
0xf8 DUP1
0xf9 DUP3
0xfa DUP5
0xfb CALLDATACOPY
0xfc POP
0xfd SWAP5
0xfe SWAP7
0xff POP
0x100 PUSH2 0x3fe
0x103 SWAP6
0x104 POP
0x105 POP
0x106 POP
0x107 POP
0x108 POP
0x109 POP
0x10a JUMP
---
0xaf: JUMPDEST 
0xb0: V55 = 0x10b
0xb3: V56 = 0x1
0xb5: V57 = 0xa0
0xb7: V58 = 0x2
0xb9: V59 = EXP 0x2 0xa0
0xba: V60 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbb: V61 = 0x4
0xbe: V62 = CALLDATALOAD 0x4
0xc0: V63 = AND 0xffffffffffffffffffffffffffffffffffffffff V62
0xc2: V64 = 0x24
0xc5: V65 = CALLDATALOAD 0x24
0xc8: V66 = AND 0xffffffffffffffffffffffffffffffffffffffff V65
0xcb: V67 = 0x64
0xce: V68 = 0x44
0xd0: V69 = CALLDATALOAD 0x44
0xd3: V70 = ADD V69 0x24
0xd6: V71 = ADD 0x4 V69
0xd7: V72 = CALLDATALOAD V71
0xd9: V73 = 0x20
0xdd: V74 = MUL 0x20 V72
0xde: V75 = ADD V74 0x20
0xdf: V76 = 0x40
0xe1: V77 = M[0x40]
0xe4: V78 = ADD V77 V75
0xe5: V79 = 0x40
0xe7: M[0x40] = V78
0xef: M[V77] = V72
0xf0: V80 = 0x20
0xf2: V81 = ADD 0x20 V77
0xf5: V82 = 0x20
0xf7: V83 = MUL 0x20 V72
0xfb: CALLDATACOPY V81 V70 V83
0x100: V84 = 0x3fe
0x10a: JUMP 0x3fe
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x10b, V63, V66, V77]
Exit stack: [V12, 0x10b, V63, V66, V77]

================================

Block 0x10b
[0x10b:0x131]
---
Predecessors: [0x508, 0x662, 0x9cd]
Successors: [0x132]
---
0x10b JUMPDEST
0x10c PUSH1 0x40
0x10e MLOAD
0x10f PUSH1 0x20
0x111 DUP1
0x112 DUP3
0x113 MSTORE
0x114 DUP2
0x115 SWAP1
0x116 DUP2
0x117 ADD
0x118 DUP4
0x119 DUP2
0x11a DUP2
0x11b MLOAD
0x11c DUP2
0x11d MSTORE
0x11e PUSH1 0x20
0x120 ADD
0x121 SWAP2
0x122 POP
0x123 DUP1
0x124 MLOAD
0x125 SWAP1
0x126 PUSH1 0x20
0x128 ADD
0x129 SWAP1
0x12a PUSH1 0x20
0x12c MUL
0x12d DUP1
0x12e DUP4
0x12f DUP4
0x130 PUSH1 0x0
---
0x10b: JUMPDEST 
0x10c: V85 = 0x40
0x10e: V86 = M[0x40]
0x10f: V87 = 0x20
0x113: M[V86] = 0x20
0x117: V88 = ADD V86 0x20
0x11b: V89 = M[S0]
0x11d: M[V88] = V89
0x11e: V90 = 0x20
0x120: V91 = ADD 0x20 V88
0x124: V92 = M[S0]
0x126: V93 = 0x20
0x128: V94 = ADD 0x20 S0
0x12a: V95 = 0x20
0x12c: V96 = MUL 0x20 V92
0x130: V97 = 0x0
---
Entry stack: [V12, S0]
Stack pops: 1
Stack additions: [S0, V86, V86, V91, V94, V96, V96, V91, V94, 0x0]
Exit stack: [V12, S0, V86, V86, V91, V94, V96, V96, V91, V94, 0x0]

================================

Block 0x132
[0x132:0x13a]
---
Predecessors: [0x10b, 0x143, 0x1f4, 0x2d3]
Successors: [0x13b, 0x14b]
---
0x132 JUMPDEST
0x133 DUP4
0x134 DUP2
0x135 LT
0x136 ISZERO
0x137 PUSH2 0x14b
0x13a JUMPI
---
0x132: JUMPDEST 
0x135: V98 = LT S0 S3
0x136: V99 = ISZERO V98
0x137: V100 = 0x14b
0x13a: JUMPI 0x14b V99
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x13b
[0x13b:0x142]
---
Predecessors: [0x132]
Successors: [0x143]
---
0x13b DUP1
0x13c DUP3
0x13d ADD
0x13e MLOAD
0x13f DUP2
0x140 DUP5
0x141 ADD
0x142 MSTORE
---
0x13d: V101 = ADD S1 S0
0x13e: V102 = M[V101]
0x141: V103 = ADD S2 S0
0x142: M[V103] = V102
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x143
[0x143:0x14a]
---
Predecessors: [0x13b]
Successors: [0x132]
---
0x143 JUMPDEST
0x144 PUSH1 0x20
0x146 ADD
0x147 PUSH2 0x132
0x14a JUMP
---
0x143: JUMPDEST 
0x144: V104 = 0x20
0x146: V105 = ADD 0x20 S0
0x147: V106 = 0x132
0x14a: JUMP 0x132
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V105]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, V105]

================================

Block 0x14b
[0x14b:0x15e]
---
Predecessors: [0x132, 0x1e3, 0x2c2]
Successors: []
---
0x14b JUMPDEST
0x14c POP
0x14d POP
0x14e POP
0x14f POP
0x150 SWAP1
0x151 POP
0x152 ADD
0x153 SWAP3
0x154 POP
0x155 POP
0x156 POP
0x157 PUSH1 0x40
0x159 MLOAD
0x15a DUP1
0x15b SWAP2
0x15c SUB
0x15d SWAP1
0x15e RETURN
---
0x14b: JUMPDEST 
0x152: V107 = ADD S4 S6
0x157: V108 = 0x40
0x159: V109 = M[0x40]
0x15c: V110 = SUB V107 V109
0x15e: RETURN V109 V110
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 10
Stack additions: []
Exit stack: [V12]

================================

Block 0x15f
[0x15f:0x165]
---
Predecessors: [0x3b]
Successors: [0x166, 0x16a]
---
0x15f JUMPDEST
0x160 CALLVALUE
0x161 ISZERO
0x162 PUSH2 0x16a
0x165 JUMPI
---
0x15f: JUMPDEST 
0x160: V111 = CALLVALUE
0x161: V112 = ISZERO V111
0x162: V113 = 0x16a
0x165: JUMPI 0x16a V112
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x166
[0x166:0x169]
---
Predecessors: [0x15f]
Successors: []
---
0x166 PUSH1 0x0
0x168 DUP1
0x169 REVERT
---
0x166: V114 = 0x0
0x169: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x16a
[0x16a:0x1bb]
---
Predecessors: [0x15f]
Successors: [0x512]
---
0x16a JUMPDEST
0x16b PUSH2 0x10b
0x16e PUSH1 0x4
0x170 DUP1
0x171 CALLDATALOAD
0x172 PUSH1 0x1
0x174 PUSH1 0xa0
0x176 PUSH1 0x2
0x178 EXP
0x179 SUB
0x17a AND
0x17b SWAP1
0x17c PUSH1 0x44
0x17e PUSH1 0x24
0x180 DUP1
0x181 CALLDATALOAD
0x182 SWAP1
0x183 DUP2
0x184 ADD
0x185 SWAP1
0x186 DUP4
0x187 ADD
0x188 CALLDATALOAD
0x189 DUP1
0x18a PUSH1 0x20
0x18c DUP1
0x18d DUP3
0x18e MUL
0x18f ADD
0x190 PUSH1 0x40
0x192 MLOAD
0x193 SWAP1
0x194 DUP2
0x195 ADD
0x196 PUSH1 0x40
0x198 MSTORE
0x199 DUP1
0x19a SWAP4
0x19b SWAP3
0x19c SWAP2
0x19d SWAP1
0x19e DUP2
0x19f DUP2
0x1a0 MSTORE
0x1a1 PUSH1 0x20
0x1a3 ADD
0x1a4 DUP4
0x1a5 DUP4
0x1a6 PUSH1 0x20
0x1a8 MUL
0x1a9 DUP1
0x1aa DUP3
0x1ab DUP5
0x1ac CALLDATACOPY
0x1ad POP
0x1ae SWAP5
0x1af SWAP7
0x1b0 POP
0x1b1 PUSH2 0x512
0x1b4 SWAP6
0x1b5 POP
0x1b6 POP
0x1b7 POP
0x1b8 POP
0x1b9 POP
0x1ba POP
0x1bb JUMP
---
0x16a: JUMPDEST 
0x16b: V115 = 0x10b
0x16e: V116 = 0x4
0x171: V117 = CALLDATALOAD 0x4
0x172: V118 = 0x1
0x174: V119 = 0xa0
0x176: V120 = 0x2
0x178: V121 = EXP 0x2 0xa0
0x179: V122 = SUB 0x10000000000000000000000000000000000000000 0x1
0x17a: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V117
0x17c: V124 = 0x44
0x17e: V125 = 0x24
0x181: V126 = CALLDATALOAD 0x24
0x184: V127 = ADD V126 0x24
0x187: V128 = ADD 0x4 V126
0x188: V129 = CALLDATALOAD V128
0x18a: V130 = 0x20
0x18e: V131 = MUL V129 0x20
0x18f: V132 = ADD V131 0x20
0x190: V133 = 0x40
0x192: V134 = M[0x40]
0x195: V135 = ADD V134 V132
0x196: V136 = 0x40
0x198: M[0x40] = V135
0x1a0: M[V134] = V129
0x1a1: V137 = 0x20
0x1a3: V138 = ADD 0x20 V134
0x1a6: V139 = 0x20
0x1a8: V140 = MUL 0x20 V129
0x1ac: CALLDATACOPY V138 V127 V140
0x1b1: V141 = 0x512
0x1bb: JUMP 0x512
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x10b, V123, V134]
Exit stack: [V12, 0x10b, V123, V134]

================================

Block 0x1bc
[0x1bc:0x1e2]
---
Predecessors: []
Successors: [0x1e3]
---
0x1bc JUMPDEST
0x1bd PUSH1 0x40
0x1bf MLOAD
0x1c0 PUSH1 0x20
0x1c2 DUP1
0x1c3 DUP3
0x1c4 MSTORE
0x1c5 DUP2
0x1c6 SWAP1
0x1c7 DUP2
0x1c8 ADD
0x1c9 DUP4
0x1ca DUP2
0x1cb DUP2
0x1cc MLOAD
0x1cd DUP2
0x1ce MSTORE
0x1cf PUSH1 0x20
0x1d1 ADD
0x1d2 SWAP2
0x1d3 POP
0x1d4 DUP1
0x1d5 MLOAD
0x1d6 SWAP1
0x1d7 PUSH1 0x20
0x1d9 ADD
0x1da SWAP1
0x1db PUSH1 0x20
0x1dd MUL
0x1de DUP1
0x1df DUP4
0x1e0 DUP4
0x1e1 PUSH1 0x0
---
0x1bc: JUMPDEST 
0x1bd: V142 = 0x40
0x1bf: V143 = M[0x40]
0x1c0: V144 = 0x20
0x1c4: M[V143] = 0x20
0x1c8: V145 = ADD V143 0x20
0x1cc: V146 = M[S0]
0x1ce: M[V145] = V146
0x1cf: V147 = 0x20
0x1d1: V148 = ADD 0x20 V145
0x1d5: V149 = M[S0]
0x1d7: V150 = 0x20
0x1d9: V151 = ADD 0x20 S0
0x1db: V152 = 0x20
0x1dd: V153 = MUL 0x20 V149
0x1e1: V154 = 0x0
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, V143, V143, V148, V151, V153, V153, V148, V151, 0x0]
Exit stack: [S0, V143, V143, V148, V151, V153, V153, V148, V151, 0x0]

================================

Block 0x1e3
[0x1e3:0x1eb]
---
Predecessors: [0x1bc]
Successors: [0x14b, 0x1ec]
---
0x1e3 JUMPDEST
0x1e4 DUP4
0x1e5 DUP2
0x1e6 LT
0x1e7 ISZERO
0x1e8 PUSH2 0x14b
0x1eb JUMPI
---
0x1e3: JUMPDEST 
0x1e6: V155 = LT 0x0 V153
0x1e7: V156 = ISZERO V155
0x1e8: V157 = 0x14b
0x1eb: JUMPI 0x14b V156
---
Entry stack: [S9, V143, V143, V148, V151, V153, V153, V148, V151, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V143, V143, V148, V151, V153, V153, V148, V151, 0x0]

================================

Block 0x1ec
[0x1ec:0x1f3]
---
Predecessors: [0x1e3]
Successors: [0x1f4]
---
0x1ec DUP1
0x1ed DUP3
0x1ee ADD
0x1ef MLOAD
0x1f0 DUP2
0x1f1 DUP5
0x1f2 ADD
0x1f3 MSTORE
---
0x1ee: V158 = ADD V151 0x0
0x1ef: V159 = M[V158]
0x1f2: V160 = ADD V148 0x0
0x1f3: M[V160] = V159
---
Entry stack: [S9, V143, V143, V148, V151, V153, V153, V148, V151, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S9, V143, V143, V148, V151, V153, V153, V148, V151, 0x0]

================================

Block 0x1f4
[0x1f4:0x1fb]
---
Predecessors: [0x1ec]
Successors: [0x132]
---
0x1f4 JUMPDEST
0x1f5 PUSH1 0x20
0x1f7 ADD
0x1f8 PUSH2 0x132
0x1fb JUMP
---
0x1f4: JUMPDEST 
0x1f5: V161 = 0x20
0x1f7: V162 = ADD 0x20 0x0
0x1f8: V163 = 0x132
0x1fb: JUMP 0x132
---
Entry stack: [S9, V143, V143, V148, V151, V153, V153, V148, V151, 0x0]
Stack pops: 1
Stack additions: [0x20]
Exit stack: [S9, V143, V143, V148, V151, V153, V153, V148, V151, 0x20]

================================

Block 0x1fc
[0x1fc:0x20f]
---
Predecessors: []
Successors: []
---
0x1fc JUMPDEST
0x1fd POP
0x1fe POP
0x1ff POP
0x200 POP
0x201 SWAP1
0x202 POP
0x203 ADD
0x204 SWAP3
0x205 POP
0x206 POP
0x207 POP
0x208 PUSH1 0x40
0x20a MLOAD
0x20b DUP1
0x20c SWAP2
0x20d SUB
0x20e SWAP1
0x20f RETURN
---
0x1fc: JUMPDEST 
0x203: V164 = ADD S4 S6
0x208: V165 = 0x40
0x20a: V166 = M[0x40]
0x20d: V167 = SUB V164 V166
0x20f: RETURN V166 V167
---
Entry stack: []
Stack pops: 10
Stack additions: []
Exit stack: []

================================

Block 0x210
[0x210:0x216]
---
Predecessors: [0x46]
Successors: [0x217, 0x21b]
---
0x210 JUMPDEST
0x211 CALLVALUE
0x212 ISZERO
0x213 PUSH2 0x21b
0x216 JUMPI
---
0x210: JUMPDEST 
0x211: V168 = CALLVALUE
0x212: V169 = ISZERO V168
0x213: V170 = 0x21b
0x216: JUMPI 0x21b V169
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x217
[0x217:0x21a]
---
Predecessors: [0x210]
Successors: []
---
0x217 PUSH1 0x0
0x219 DUP1
0x21a REVERT
---
0x217: V171 = 0x0
0x21a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x21b
[0x21b:0x231]
---
Predecessors: [0x210]
Successors: [0x66b]
---
0x21b JUMPDEST
0x21c PUSH2 0x78
0x21f PUSH1 0x1
0x221 PUSH1 0xa0
0x223 PUSH1 0x2
0x225 EXP
0x226 SUB
0x227 PUSH1 0x4
0x229 CALLDATALOAD
0x22a AND
0x22b PUSH1 0x24
0x22d CALLDATALOAD
0x22e PUSH2 0x66b
0x231 JUMP
---
0x21b: JUMPDEST 
0x21c: V172 = 0x78
0x21f: V173 = 0x1
0x221: V174 = 0xa0
0x223: V175 = 0x2
0x225: V176 = EXP 0x2 0xa0
0x226: V177 = SUB 0x10000000000000000000000000000000000000000 0x1
0x227: V178 = 0x4
0x229: V179 = CALLDATALOAD 0x4
0x22a: V180 = AND V179 0xffffffffffffffffffffffffffffffffffffffff
0x22b: V181 = 0x24
0x22d: V182 = CALLDATALOAD 0x24
0x22e: V183 = 0x66b
0x231: JUMP 0x66b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x78, V180, V182]
Exit stack: [V12, 0x78, V180, V182]

================================

Block 0x232
[0x232:0x233]
---
Predecessors: []
Successors: []
---
0x232 JUMPDEST
0x233 STOP
---
0x232: JUMPDEST 
0x233: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x234
[0x234:0x23a]
---
Predecessors: [0x51]
Successors: [0x23b, 0x23f]
---
0x234 JUMPDEST
0x235 CALLVALUE
0x236 ISZERO
0x237 PUSH2 0x23f
0x23a JUMPI
---
0x234: JUMPDEST 
0x235: V184 = CALLVALUE
0x236: V185 = ISZERO V184
0x237: V186 = 0x23f
0x23a: JUMPI 0x23f V185
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x23b
[0x23b:0x23e]
---
Predecessors: [0x234]
Successors: []
---
0x23b PUSH1 0x0
0x23d DUP1
0x23e REVERT
---
0x23b: V187 = 0x0
0x23e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x23f
[0x23f:0x29a]
---
Predecessors: [0x234]
Successors: [0x80b]
---
0x23f JUMPDEST
0x240 PUSH2 0x10b
0x243 PUSH1 0x1
0x245 PUSH1 0xa0
0x247 PUSH1 0x2
0x249 EXP
0x24a SUB
0x24b PUSH1 0x4
0x24d DUP1
0x24e CALLDATALOAD
0x24f DUP3
0x250 AND
0x251 SWAP2
0x252 PUSH1 0x24
0x254 DUP1
0x255 CALLDATALOAD
0x256 SWAP1
0x257 SWAP2
0x258 AND
0x259 SWAP2
0x25a SWAP1
0x25b PUSH1 0x64
0x25d SWAP1
0x25e PUSH1 0x44
0x260 CALLDATALOAD
0x261 SWAP1
0x262 DUP2
0x263 ADD
0x264 SWAP1
0x265 DUP4
0x266 ADD
0x267 CALLDATALOAD
0x268 DUP1
0x269 PUSH1 0x20
0x26b DUP2
0x26c DUP2
0x26d MUL
0x26e ADD
0x26f PUSH1 0x40
0x271 MLOAD
0x272 SWAP1
0x273 DUP2
0x274 ADD
0x275 PUSH1 0x40
0x277 MSTORE
0x278 DUP1
0x279 SWAP4
0x27a SWAP3
0x27b SWAP2
0x27c SWAP1
0x27d DUP2
0x27e DUP2
0x27f MSTORE
0x280 PUSH1 0x20
0x282 ADD
0x283 DUP4
0x284 DUP4
0x285 PUSH1 0x20
0x287 MUL
0x288 DUP1
0x289 DUP3
0x28a DUP5
0x28b CALLDATACOPY
0x28c POP
0x28d SWAP5
0x28e SWAP7
0x28f POP
0x290 PUSH2 0x80b
0x293 SWAP6
0x294 POP
0x295 POP
0x296 POP
0x297 POP
0x298 POP
0x299 POP
0x29a JUMP
---
0x23f: JUMPDEST 
0x240: V188 = 0x10b
0x243: V189 = 0x1
0x245: V190 = 0xa0
0x247: V191 = 0x2
0x249: V192 = EXP 0x2 0xa0
0x24a: V193 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24b: V194 = 0x4
0x24e: V195 = CALLDATALOAD 0x4
0x250: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff V195
0x252: V197 = 0x24
0x255: V198 = CALLDATALOAD 0x24
0x258: V199 = AND 0xffffffffffffffffffffffffffffffffffffffff V198
0x25b: V200 = 0x64
0x25e: V201 = 0x44
0x260: V202 = CALLDATALOAD 0x44
0x263: V203 = ADD V202 0x24
0x266: V204 = ADD 0x4 V202
0x267: V205 = CALLDATALOAD V204
0x269: V206 = 0x20
0x26d: V207 = MUL 0x20 V205
0x26e: V208 = ADD V207 0x20
0x26f: V209 = 0x40
0x271: V210 = M[0x40]
0x274: V211 = ADD V210 V208
0x275: V212 = 0x40
0x277: M[0x40] = V211
0x27f: M[V210] = V205
0x280: V213 = 0x20
0x282: V214 = ADD 0x20 V210
0x285: V215 = 0x20
0x287: V216 = MUL 0x20 V205
0x28b: CALLDATACOPY V214 V203 V216
0x290: V217 = 0x80b
0x29a: JUMP 0x80b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x10b, V196, V199, V210]
Exit stack: [V12, 0x10b, V196, V199, V210]

================================

Block 0x29b
[0x29b:0x2c1]
---
Predecessors: []
Successors: [0x2c2]
---
0x29b JUMPDEST
0x29c PUSH1 0x40
0x29e MLOAD
0x29f PUSH1 0x20
0x2a1 DUP1
0x2a2 DUP3
0x2a3 MSTORE
0x2a4 DUP2
0x2a5 SWAP1
0x2a6 DUP2
0x2a7 ADD
0x2a8 DUP4
0x2a9 DUP2
0x2aa DUP2
0x2ab MLOAD
0x2ac DUP2
0x2ad MSTORE
0x2ae PUSH1 0x20
0x2b0 ADD
0x2b1 SWAP2
0x2b2 POP
0x2b3 DUP1
0x2b4 MLOAD
0x2b5 SWAP1
0x2b6 PUSH1 0x20
0x2b8 ADD
0x2b9 SWAP1
0x2ba PUSH1 0x20
0x2bc MUL
0x2bd DUP1
0x2be DUP4
0x2bf DUP4
0x2c0 PUSH1 0x0
---
0x29b: JUMPDEST 
0x29c: V218 = 0x40
0x29e: V219 = M[0x40]
0x29f: V220 = 0x20
0x2a3: M[V219] = 0x20
0x2a7: V221 = ADD V219 0x20
0x2ab: V222 = M[S0]
0x2ad: M[V221] = V222
0x2ae: V223 = 0x20
0x2b0: V224 = ADD 0x20 V221
0x2b4: V225 = M[S0]
0x2b6: V226 = 0x20
0x2b8: V227 = ADD 0x20 S0
0x2ba: V228 = 0x20
0x2bc: V229 = MUL 0x20 V225
0x2c0: V230 = 0x0
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, V219, V219, V224, V227, V229, V229, V224, V227, 0x0]
Exit stack: [S0, V219, V219, V224, V227, V229, V229, V224, V227, 0x0]

================================

Block 0x2c2
[0x2c2:0x2ca]
---
Predecessors: [0x29b]
Successors: [0x14b, 0x2cb]
---
0x2c2 JUMPDEST
0x2c3 DUP4
0x2c4 DUP2
0x2c5 LT
0x2c6 ISZERO
0x2c7 PUSH2 0x14b
0x2ca JUMPI
---
0x2c2: JUMPDEST 
0x2c5: V231 = LT 0x0 V229
0x2c6: V232 = ISZERO V231
0x2c7: V233 = 0x14b
0x2ca: JUMPI 0x14b V232
---
Entry stack: [S9, V219, V219, V224, V227, V229, V229, V224, V227, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V219, V219, V224, V227, V229, V229, V224, V227, 0x0]

================================

Block 0x2cb
[0x2cb:0x2d2]
---
Predecessors: [0x2c2]
Successors: [0x2d3]
---
0x2cb DUP1
0x2cc DUP3
0x2cd ADD
0x2ce MLOAD
0x2cf DUP2
0x2d0 DUP5
0x2d1 ADD
0x2d2 MSTORE
---
0x2cd: V234 = ADD V227 0x0
0x2ce: V235 = M[V234]
0x2d1: V236 = ADD V224 0x0
0x2d2: M[V236] = V235
---
Entry stack: [S9, V219, V219, V224, V227, V229, V229, V224, V227, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S9, V219, V219, V224, V227, V229, V229, V224, V227, 0x0]

================================

Block 0x2d3
[0x2d3:0x2da]
---
Predecessors: [0x2cb]
Successors: [0x132]
---
0x2d3 JUMPDEST
0x2d4 PUSH1 0x20
0x2d6 ADD
0x2d7 PUSH2 0x132
0x2da JUMP
---
0x2d3: JUMPDEST 
0x2d4: V237 = 0x20
0x2d6: V238 = ADD 0x20 0x0
0x2d7: V239 = 0x132
0x2da: JUMP 0x132
---
Entry stack: [S9, V219, V219, V224, V227, V229, V229, V224, V227, 0x0]
Stack pops: 1
Stack additions: [0x20]
Exit stack: [S9, V219, V219, V224, V227, V229, V229, V224, V227, 0x20]

================================

Block 0x2db
[0x2db:0x2ee]
---
Predecessors: []
Successors: []
---
0x2db JUMPDEST
0x2dc POP
0x2dd POP
0x2de POP
0x2df POP
0x2e0 SWAP1
0x2e1 POP
0x2e2 ADD
0x2e3 SWAP3
0x2e4 POP
0x2e5 POP
0x2e6 POP
0x2e7 PUSH1 0x40
0x2e9 MLOAD
0x2ea DUP1
0x2eb SWAP2
0x2ec SUB
0x2ed SWAP1
0x2ee RETURN
---
0x2db: JUMPDEST 
0x2e2: V240 = ADD S4 S6
0x2e7: V241 = 0x40
0x2e9: V242 = M[0x40]
0x2ec: V243 = SUB V240 V242
0x2ee: RETURN V242 V243
---
Entry stack: []
Stack pops: 10
Stack additions: []
Exit stack: []

================================

Block 0x2ef
[0x2ef:0x2f5]
---
Predecessors: [0x5c]
Successors: [0x2f6, 0x2fa]
---
0x2ef JUMPDEST
0x2f0 CALLVALUE
0x2f1 ISZERO
0x2f2 PUSH2 0x2fa
0x2f5 JUMPI
---
0x2ef: JUMPDEST 
0x2f0: V244 = CALLVALUE
0x2f1: V245 = ISZERO V244
0x2f2: V246 = 0x2fa
0x2f5: JUMPI 0x2fa V245
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2f6
[0x2f6:0x2f9]
---
Predecessors: [0x2ef]
Successors: []
---
0x2f6 PUSH1 0x0
0x2f8 DUP1
0x2f9 REVERT
---
0x2f6: V247 = 0x0
0x2f9: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2fa
[0x2fa:0x301]
---
Predecessors: [0x2ef]
Successors: [0x9d9]
---
0x2fa JUMPDEST
0x2fb PUSH2 0x302
0x2fe PUSH2 0x9d9
0x301 JUMP
---
0x2fa: JUMPDEST 
0x2fb: V248 = 0x302
0x2fe: V249 = 0x9d9
0x301: JUMP 0x9d9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x302]
Exit stack: [V12, 0x302]

================================

Block 0x302
[0x302:0x31d]
---
Predecessors: [0x9d9]
Successors: []
---
0x302 JUMPDEST
0x303 PUSH1 0x40
0x305 MLOAD
0x306 PUSH1 0x1
0x308 PUSH1 0xa0
0x30a PUSH1 0x2
0x30c EXP
0x30d SUB
0x30e SWAP1
0x30f SWAP2
0x310 AND
0x311 DUP2
0x312 MSTORE
0x313 PUSH1 0x20
0x315 ADD
0x316 PUSH1 0x40
0x318 MLOAD
0x319 DUP1
0x31a SWAP2
0x31b SUB
0x31c SWAP1
0x31d RETURN
---
0x302: JUMPDEST 
0x303: V250 = 0x40
0x305: V251 = M[0x40]
0x306: V252 = 0x1
0x308: V253 = 0xa0
0x30a: V254 = 0x2
0x30c: V255 = EXP 0x2 0xa0
0x30d: V256 = SUB 0x10000000000000000000000000000000000000000 0x1
0x310: V257 = AND V932 0xffffffffffffffffffffffffffffffffffffffff
0x312: M[V251] = V257
0x313: V258 = 0x20
0x315: V259 = ADD 0x20 V251
0x316: V260 = 0x40
0x318: V261 = M[0x40]
0x31b: V262 = SUB V259 V261
0x31d: RETURN V261 V262
---
Entry stack: [V12, 0x302, V932]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x302]

================================

Block 0x31e
[0x31e:0x335]
---
Predecessors: [0x85]
Successors: [0x336, 0x343]
---
0x31e JUMPDEST
0x31f PUSH1 0x0
0x321 SLOAD
0x322 CALLER
0x323 PUSH1 0x1
0x325 PUSH1 0xa0
0x327 PUSH1 0x2
0x329 EXP
0x32a SUB
0x32b SWAP1
0x32c DUP2
0x32d AND
0x32e SWAP2
0x32f AND
0x330 EQ
0x331 ISZERO
0x332 PUSH2 0x343
0x335 JUMPI
---
0x31e: JUMPDEST 
0x31f: V263 = 0x0
0x321: V264 = S[0x0]
0x322: V265 = CALLER
0x323: V266 = 0x1
0x325: V267 = 0xa0
0x327: V268 = 0x2
0x329: V269 = EXP 0x2 0xa0
0x32a: V270 = SUB 0x10000000000000000000000000000000000000000 0x1
0x32d: V271 = AND 0xffffffffffffffffffffffffffffffffffffffff V265
0x32f: V272 = AND V264 0xffffffffffffffffffffffffffffffffffffffff
0x330: V273 = EQ V272 V271
0x331: V274 = ISZERO V273
0x332: V275 = 0x343
0x335: JUMPI 0x343 V274
---
Entry stack: [V12, 0x78]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x78]

================================

Block 0x336
[0x336:0x342]
---
Predecessors: [0x31e]
Successors: []
---
0x336 PUSH1 0x0
0x338 SLOAD
0x339 PUSH1 0x1
0x33b PUSH1 0xa0
0x33d PUSH1 0x2
0x33f EXP
0x340 SUB
0x341 AND
0x342 SELFDESTRUCT
---
0x336: V276 = 0x0
0x338: V277 = S[0x0]
0x339: V278 = 0x1
0x33b: V279 = 0xa0
0x33d: V280 = 0x2
0x33f: V281 = EXP 0x2 0xa0
0x340: V282 = SUB 0x10000000000000000000000000000000000000000 0x1
0x341: V283 = AND 0xffffffffffffffffffffffffffffffffffffffff V277
0x342: SELFDESTRUCT V283
---
Entry stack: [V12, 0x78]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x78]

================================

Block 0x343
[0x343:0x343]
---
Predecessors: [0x31e]
Successors: [0x344]
---
0x343 JUMPDEST
---
0x343: JUMPDEST 
---
Entry stack: [V12, 0x78]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x78]

================================

Block 0x344
[0x344:0x345]
---
Predecessors: [0x343]
Successors: [0x78]
---
0x344 JUMPDEST
0x345 JUMP
---
0x344: JUMPDEST 
0x345: JUMP 0x78
---
Entry stack: [V12, 0x78]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x346
[0x346:0x35e]
---
Predecessors: [0x9a]
Successors: [0x35f, 0x3fa]
---
0x346 JUMPDEST
0x347 PUSH1 0x0
0x349 DUP1
0x34a SLOAD
0x34b CALLER
0x34c PUSH1 0x1
0x34e PUSH1 0xa0
0x350 PUSH1 0x2
0x352 EXP
0x353 SUB
0x354 SWAP1
0x355 DUP2
0x356 AND
0x357 SWAP2
0x358 AND
0x359 EQ
0x35a ISZERO
0x35b PUSH2 0x3fa
0x35e JUMPI
---
0x346: JUMPDEST 
0x347: V284 = 0x0
0x34a: V285 = S[0x0]
0x34b: V286 = CALLER
0x34c: V287 = 0x1
0x34e: V288 = 0xa0
0x350: V289 = 0x2
0x352: V290 = EXP 0x2 0xa0
0x353: V291 = SUB 0x10000000000000000000000000000000000000000 0x1
0x356: V292 = AND 0xffffffffffffffffffffffffffffffffffffffff V286
0x358: V293 = AND V285 0xffffffffffffffffffffffffffffffffffffffff
0x359: V294 = EQ V293 V292
0x35a: V295 = ISZERO V294
0x35b: V296 = 0x3fa
0x35e: JUMPI 0x3fa V295
---
Entry stack: [V12, 0x78]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x78, 0x0]

================================

Block 0x35f
[0x35f:0x397]
---
Predecessors: [0x346]
Successors: [0x398, 0x39c]
---
0x35f POP
0x360 PUSH1 0x0
0x362 SLOAD
0x363 PUSH1 0x1
0x365 PUSH1 0xa0
0x367 PUSH1 0x2
0x369 EXP
0x36a SUB
0x36b ADDRESS
0x36c DUP2
0x36d AND
0x36e DUP1
0x36f BALANCE
0x370 SWAP3
0x371 SWAP1
0x372 SWAP2
0x373 AND
0x374 SWAP1
0x375 BALANCE
0x376 DUP1
0x377 ISZERO
0x378 PUSH2 0x8fc
0x37b MUL
0x37c SWAP1
0x37d PUSH1 0x40
0x37f MLOAD
0x380 PUSH1 0x0
0x382 PUSH1 0x40
0x384 MLOAD
0x385 DUP1
0x386 DUP4
0x387 SUB
0x388 DUP2
0x389 DUP6
0x38a DUP9
0x38b DUP9
0x38c CALL
0x38d SWAP4
0x38e POP
0x38f POP
0x390 POP
0x391 POP
0x392 ISZERO
0x393 ISZERO
0x394 PUSH2 0x39c
0x397 JUMPI
---
0x360: V297 = 0x0
0x362: V298 = S[0x0]
0x363: V299 = 0x1
0x365: V300 = 0xa0
0x367: V301 = 0x2
0x369: V302 = EXP 0x2 0xa0
0x36a: V303 = SUB 0x10000000000000000000000000000000000000000 0x1
0x36b: V304 = ADDRESS
0x36d: V305 = AND 0xffffffffffffffffffffffffffffffffffffffff V304
0x36f: V306 = BALANCE V305
0x373: V307 = AND 0xffffffffffffffffffffffffffffffffffffffff V298
0x375: V308 = BALANCE V305
0x377: V309 = ISZERO V308
0x378: V310 = 0x8fc
0x37b: V311 = MUL 0x8fc V309
0x37d: V312 = 0x40
0x37f: V313 = M[0x40]
0x380: V314 = 0x0
0x382: V315 = 0x40
0x384: V316 = M[0x40]
0x387: V317 = SUB V313 V316
0x38c: V318 = CALL V311 V307 V308 V316 V317 V316 0x0
0x392: V319 = ISZERO V318
0x393: V320 = ISZERO V319
0x394: V321 = 0x39c
0x397: JUMPI 0x39c V320
---
Entry stack: [V12, 0x78, 0x0]
Stack pops: 1
Stack additions: [V306]
Exit stack: [V12, 0x78, V306]

================================

Block 0x398
[0x398:0x39b]
---
Predecessors: [0x35f]
Successors: []
---
0x398 PUSH1 0x0
0x39a DUP1
0x39b REVERT
---
0x398: V322 = 0x0
0x39b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x78, V306]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x78, V306]

================================

Block 0x39c
[0x39c:0x3f9]
---
Predecessors: [0x35f]
Successors: [0x3fa]
---
0x39c JUMPDEST
0x39d PUSH1 0x0
0x39f DUP1
0x3a0 SLOAD
0x3a1 PUSH32 0x9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb
0x3c2 SWAP2
0x3c3 SWAP1
0x3c4 PUSH1 0x1
0x3c6 PUSH1 0xa0
0x3c8 PUSH1 0x2
0x3ca EXP
0x3cb SUB
0x3cc AND
0x3cd DUP4
0x3ce PUSH1 0x40
0x3d0 MLOAD
0x3d1 PUSH1 0x1
0x3d3 PUSH1 0xa0
0x3d5 PUSH1 0x2
0x3d7 EXP
0x3d8 SUB
0x3d9 SWAP4
0x3da DUP5
0x3db AND
0x3dc DUP2
0x3dd MSTORE
0x3de SWAP2
0x3df SWAP1
0x3e0 SWAP3
0x3e1 AND
0x3e2 PUSH1 0x20
0x3e4 DUP3
0x3e5 ADD
0x3e6 MSTORE
0x3e7 PUSH1 0x40
0x3e9 DUP1
0x3ea DUP3
0x3eb ADD
0x3ec SWAP3
0x3ed SWAP1
0x3ee SWAP3
0x3ef MSTORE
0x3f0 PUSH1 0x60
0x3f2 ADD
0x3f3 SWAP1
0x3f4 MLOAD
0x3f5 DUP1
0x3f6 SWAP2
0x3f7 SUB
0x3f8 SWAP1
0x3f9 LOG1
---
0x39c: JUMPDEST 
0x39d: V323 = 0x0
0x3a0: V324 = S[0x0]
0x3a1: V325 = 0x9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb
0x3c4: V326 = 0x1
0x3c6: V327 = 0xa0
0x3c8: V328 = 0x2
0x3ca: V329 = EXP 0x2 0xa0
0x3cb: V330 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3cc: V331 = AND 0xffffffffffffffffffffffffffffffffffffffff V324
0x3ce: V332 = 0x40
0x3d0: V333 = M[0x40]
0x3d1: V334 = 0x1
0x3d3: V335 = 0xa0
0x3d5: V336 = 0x2
0x3d7: V337 = EXP 0x2 0xa0
0x3d8: V338 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3db: V339 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x3dd: M[V333] = 0x0
0x3e1: V340 = AND 0xffffffffffffffffffffffffffffffffffffffff V331
0x3e2: V341 = 0x20
0x3e5: V342 = ADD V333 0x20
0x3e6: M[V342] = V340
0x3e7: V343 = 0x40
0x3eb: V344 = ADD V333 0x40
0x3ef: M[V344] = V306
0x3f0: V345 = 0x60
0x3f2: V346 = ADD 0x60 V333
0x3f4: V347 = M[0x40]
0x3f7: V348 = SUB V346 V347
0x3f9: LOG V347 V348 0x9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb
---
Entry stack: [V12, 0x78, V306]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x78, V306]

================================

Block 0x3fa
[0x3fa:0x3fa]
---
Predecessors: [0x346, 0x39c]
Successors: [0x3fb]
---
0x3fa JUMPDEST
---
0x3fa: JUMPDEST 
---
Entry stack: [V12, 0x78, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x78, S0]

================================

Block 0x3fb
[0x3fb:0x3fd]
---
Predecessors: [0x3fa]
Successors: [0x78]
---
0x3fb JUMPDEST
0x3fc POP
0x3fd JUMP
---
0x3fb: JUMPDEST 
0x3fd: JUMP 0x78
---
Entry stack: [V12, 0x78, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x3fe
[0x3fe:0x405]
---
Predecessors: [0xaf]
Successors: [0x9e8]
---
0x3fe JUMPDEST
0x3ff PUSH2 0x406
0x402 PUSH2 0x9e8
0x405 JUMP
---
0x3fe: JUMPDEST 
0x3ff: V349 = 0x406
0x402: V350 = 0x9e8
0x405: JUMP 0x9e8
---
Entry stack: [V12, 0x10b, V63, V66, V77]
Stack pops: 0
Stack additions: [0x406]
Exit stack: [V12, 0x10b, V63, V66, V77, 0x406]

================================

Block 0x406
[0x406:0x40f]
---
Predecessors: [0x9e8]
Successors: [0x9e8]
---
0x406 JUMPDEST
0x407 PUSH1 0x0
0x409 PUSH2 0x410
0x40c PUSH2 0x9e8
0x40f JUMP
---
0x406: JUMPDEST 
0x407: V351 = 0x0
0x409: V352 = 0x410
0x40c: V353 = 0x9e8
0x40f: JUMP 0x9e8
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, V935]
Stack pops: 0
Stack additions: [0x0, 0x410]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, V935, 0x0, 0x410]

================================

Block 0x410
[0x410:0x41a]
---
Predecessors: [0x9e8]
Successors: [0x41b, 0x41f]
---
0x410 JUMPDEST
0x411 PUSH1 0x0
0x413 DUP1
0x414 DUP6
0x415 MLOAD
0x416 GT
0x417 PUSH2 0x41f
0x41a JUMPI
---
0x410: JUMPDEST 
0x411: V354 = 0x0
0x415: V355 = M[S3]
0x416: V356 = GT V355 0x0
0x417: V357 = 0x41f
0x41a: JUMPI 0x41f V356
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, V935]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x0]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, V935, 0x0]

================================

Block 0x41b
[0x41b:0x41e]
---
Predecessors: [0x410]
Successors: []
---
0x41b PUSH1 0x0
0x41d DUP1
0x41e REVERT
---
0x41b: V358 = 0x0
0x41e: REVERT 0x0 0x0
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, V935, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, V935, 0x0]

================================

Block 0x41f
[0x41f:0x431]
---
Predecessors: [0x410]
Successors: [0x432, 0x434]
---
0x41f JUMPDEST
0x420 DUP7
0x421 SWAP3
0x422 POP
0x423 DUP5
0x424 MLOAD
0x425 PUSH1 0x2
0x427 MUL
0x428 PUSH1 0x40
0x42a MLOAD
0x42b DUP1
0x42c MSIZE
0x42d LT
0x42e PUSH2 0x434
0x431 JUMPI
---
0x41f: JUMPDEST 
0x424: V359 = M[S4]
0x425: V360 = 0x2
0x427: V361 = MUL 0x2 V359
0x428: V362 = 0x40
0x42a: V363 = M[0x40]
0x42c: V364 = MSIZE
0x42d: V365 = LT V364 V363
0x42e: V366 = 0x434
0x431: JUMPI 0x434 V365
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, V935, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S6, S1, S0, V361, V363]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S6, V935, 0x0, V361, V363]

================================

Block 0x432
[0x432:0x433]
---
Predecessors: [0x41f]
Successors: [0x434]
---
0x432 POP
0x433 MSIZE
---
0x433: V367 = MSIZE
---
Entry stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, V935, 0x0, V361, V363]
Stack pops: 1
Stack additions: [V367]
Exit stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, V935, 0x0, V361, V367]

================================

Block 0x434
[0x434:0x444]
---
Predecessors: [0x41f, 0x432]
Successors: [0x445]
---
0x434 JUMPDEST
0x435 SWAP1
0x436 DUP1
0x437 DUP3
0x438 MSTORE
0x439 DUP1
0x43a PUSH1 0x20
0x43c MUL
0x43d PUSH1 0x20
0x43f ADD
0x440 DUP3
0x441 ADD
0x442 PUSH1 0x40
0x444 MSTORE
---
0x434: JUMPDEST 
0x438: M[S0] = V361
0x43a: V368 = 0x20
0x43c: V369 = MUL 0x20 V361
0x43d: V370 = 0x20
0x43f: V371 = ADD 0x20 V369
0x441: V372 = ADD S0 V371
0x442: V373 = 0x40
0x444: M[0x40] = V372
---
Entry stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, V935, 0x0, V361, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, V935, 0x0, S0, V361]

================================

Block 0x445
[0x445:0x44c]
---
Predecessors: [0x434]
Successors: [0x44d]
---
0x445 JUMPDEST
0x446 POP
0x447 SWAP2
0x448 POP
0x449 PUSH1 0x0
0x44b SWAP1
0x44c POP
---
0x445: JUMPDEST 
0x449: V374 = 0x0
---
Entry stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, V935, 0x0, S1, V361]
Stack pops: 4
Stack additions: [S1, 0x0]
Exit stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S1, 0x0]

================================

Block 0x44d
[0x44d:0x456]
---
Predecessors: [0x445, 0x4fc]
Successors: [0x457, 0x504]
---
0x44d JUMPDEST
0x44e DUP5
0x44f MLOAD
0x450 DUP2
0x451 LT
0x452 ISZERO
0x453 PUSH2 0x504
0x456 JUMPI
---
0x44d: JUMPDEST 
0x44f: V375 = M[S4]
0x451: V376 = LT S0 V375
0x452: V377 = ISZERO V376
0x453: V378 = 0x504
0x456: JUMPI 0x504 V377
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x457
[0x457:0x46f]
---
Predecessors: [0x44d]
Successors: [0x470, 0x471]
---
0x457 DUP3
0x458 PUSH1 0x1
0x45a PUSH1 0xa0
0x45c PUSH1 0x2
0x45e EXP
0x45f SUB
0x460 AND
0x461 PUSH4 0xf7888aec
0x466 DUP7
0x467 DUP4
0x468 DUP2
0x469 MLOAD
0x46a DUP2
0x46b LT
0x46c PUSH2 0x471
0x46f JUMPI
---
0x458: V379 = 0x1
0x45a: V380 = 0xa0
0x45c: V381 = 0x2
0x45e: V382 = EXP 0x2 0xa0
0x45f: V383 = SUB 0x10000000000000000000000000000000000000000 0x1
0x460: V384 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x461: V385 = 0xf7888aec
0x469: V386 = M[S4]
0x46b: V387 = LT S0 V386
0x46c: V388 = 0x471
0x46f: JUMPI 0x471 V387
---
Entry stack: [V12, 0x10b, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V384, 0xf7888aec, S4, S0]
Exit stack: [V12, 0x10b, S6, S5, S4, S3, S2, S1, S0, V384, 0xf7888aec, S4, S0]

================================

Block 0x470
[0x470:0x470]
---
Predecessors: [0x457]
Successors: []
---
0x470 INVALID
---
0x470: INVALID 
---
Entry stack: [V12, 0x10b, S10, S9, S8, S7, S6, S5, S4, V384, 0xf7888aec, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10b, S10, S9, S8, S7, S6, S5, S4, V384, 0xf7888aec, S1, S0]

================================

Block 0x471
[0x471:0x4c5]
---
Predecessors: [0x457]
Successors: [0x4c6, 0x4ca]
---
0x471 JUMPDEST
0x472 SWAP1
0x473 PUSH1 0x20
0x475 ADD
0x476 SWAP1
0x477 PUSH1 0x20
0x479 MUL
0x47a ADD
0x47b MLOAD
0x47c DUP9
0x47d PUSH1 0x0
0x47f PUSH1 0x40
0x481 MLOAD
0x482 PUSH1 0x20
0x484 ADD
0x485 MSTORE
0x486 PUSH1 0x40
0x488 MLOAD
0x489 PUSH1 0xe0
0x48b PUSH1 0x2
0x48d EXP
0x48e PUSH4 0xffffffff
0x493 DUP6
0x494 AND
0x495 MUL
0x496 DUP2
0x497 MSTORE
0x498 PUSH1 0x1
0x49a PUSH1 0xa0
0x49c PUSH1 0x2
0x49e EXP
0x49f SUB
0x4a0 SWAP3
0x4a1 DUP4
0x4a2 AND
0x4a3 PUSH1 0x4
0x4a5 DUP3
0x4a6 ADD
0x4a7 MSTORE
0x4a8 SWAP2
0x4a9 AND
0x4aa PUSH1 0x24
0x4ac DUP3
0x4ad ADD
0x4ae MSTORE
0x4af PUSH1 0x44
0x4b1 ADD
0x4b2 PUSH1 0x20
0x4b4 PUSH1 0x40
0x4b6 MLOAD
0x4b7 DUP1
0x4b8 DUP4
0x4b9 SUB
0x4ba DUP2
0x4bb PUSH1 0x0
0x4bd DUP8
0x4be DUP1
0x4bf EXTCODESIZE
0x4c0 ISZERO
0x4c1 ISZERO
0x4c2 PUSH2 0x4ca
0x4c5 JUMPI
---
0x471: JUMPDEST 
0x473: V389 = 0x20
0x475: V390 = ADD 0x20 S1
0x477: V391 = 0x20
0x479: V392 = MUL 0x20 S0
0x47a: V393 = ADD V392 V390
0x47b: V394 = M[V393]
0x47d: V395 = 0x0
0x47f: V396 = 0x40
0x481: V397 = M[0x40]
0x482: V398 = 0x20
0x484: V399 = ADD 0x20 V397
0x485: M[V399] = 0x0
0x486: V400 = 0x40
0x488: V401 = M[0x40]
0x489: V402 = 0xe0
0x48b: V403 = 0x2
0x48d: V404 = EXP 0x2 0xe0
0x48e: V405 = 0xffffffff
0x494: V406 = AND 0xf7888aec 0xffffffff
0x495: V407 = MUL 0xf7888aec 0x100000000000000000000000000000000000000000000000000000000
0x497: M[V401] = 0xf7888aec00000000000000000000000000000000000000000000000000000000
0x498: V408 = 0x1
0x49a: V409 = 0xa0
0x49c: V410 = 0x2
0x49e: V411 = EXP 0x2 0xa0
0x49f: V412 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4a2: V413 = AND 0xffffffffffffffffffffffffffffffffffffffff V394
0x4a3: V414 = 0x4
0x4a6: V415 = ADD V401 0x4
0x4a7: M[V415] = V413
0x4a9: V416 = AND 0xffffffffffffffffffffffffffffffffffffffff S9
0x4aa: V417 = 0x24
0x4ad: V418 = ADD V401 0x24
0x4ae: M[V418] = V416
0x4af: V419 = 0x44
0x4b1: V420 = ADD 0x44 V401
0x4b2: V421 = 0x20
0x4b4: V422 = 0x40
0x4b6: V423 = M[0x40]
0x4b9: V424 = SUB V420 V423
0x4bb: V425 = 0x0
0x4bf: V426 = EXTCODESIZE V384
0x4c0: V427 = ISZERO V426
0x4c1: V428 = ISZERO V427
0x4c2: V429 = 0x4ca
0x4c5: JUMPI 0x4ca V428
---
Entry stack: [V12, 0x10b, S10, S9, S8, S7, S6, S5, S4, V384, 0xf7888aec, S1, S0]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S2, V420, 0x20, V423, V424, V423, 0x0, S3]
Exit stack: [V12, 0x10b, S10, S9, S8, S7, S6, S5, S4, V384, 0xf7888aec, V420, 0x20, V423, V424, V423, 0x0, V384]

================================

Block 0x4c6
[0x4c6:0x4c9]
---
Predecessors: [0x471]
Successors: []
---
0x4c6 PUSH1 0x0
0x4c8 DUP1
0x4c9 REVERT
---
0x4c6: V430 = 0x0
0x4c9: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10b, S15, S14, S13, S12, S11, S10, S9, V384, 0xf7888aec, V420, 0x20, V423, V424, V423, 0x0, V384]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10b, S15, S14, S13, S12, S11, S10, S9, V384, 0xf7888aec, V420, 0x20, V423, V424, V423, 0x0, V384]

================================

Block 0x4ca
[0x4ca:0x4d6]
---
Predecessors: [0x471]
Successors: [0x4d7, 0x4db]
---
0x4ca JUMPDEST
0x4cb PUSH2 0x2c6
0x4ce GAS
0x4cf SUB
0x4d0 CALL
0x4d1 ISZERO
0x4d2 ISZERO
0x4d3 PUSH2 0x4db
0x4d6 JUMPI
---
0x4ca: JUMPDEST 
0x4cb: V431 = 0x2c6
0x4ce: V432 = GAS
0x4cf: V433 = SUB V432 0x2c6
0x4d0: V434 = CALL V433 V384 0x0 V423 V424 V423 0x20
0x4d1: V435 = ISZERO V434
0x4d2: V436 = ISZERO V435
0x4d3: V437 = 0x4db
0x4d6: JUMPI 0x4db V436
---
Entry stack: [V12, 0x10b, S15, S14, S13, S12, S11, S10, S9, V384, 0xf7888aec, V420, 0x20, V423, V424, V423, 0x0, V384]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x10b, S15, S14, S13, S12, S11, S10, S9, V384, 0xf7888aec, V420]

================================

Block 0x4d7
[0x4d7:0x4da]
---
Predecessors: [0x4ca]
Successors: []
---
0x4d7 PUSH1 0x0
0x4d9 DUP1
0x4da REVERT
---
0x4d7: V438 = 0x0
0x4da: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10b, S9, S8, S7, S6, S5, S4, S3, V384, 0xf7888aec, V420]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10b, S9, S8, S7, S6, S5, S4, S3, V384, 0xf7888aec, V420]

================================

Block 0x4db
[0x4db:0x4ef]
---
Predecessors: [0x4ca]
Successors: [0x4f0, 0x4f1]
---
0x4db JUMPDEST
0x4dc POP
0x4dd POP
0x4de POP
0x4df PUSH1 0x40
0x4e1 MLOAD
0x4e2 DUP1
0x4e3 MLOAD
0x4e4 SWAP1
0x4e5 POP
0x4e6 DUP3
0x4e7 DUP3
0x4e8 DUP2
0x4e9 MLOAD
0x4ea DUP2
0x4eb LT
0x4ec PUSH2 0x4f1
0x4ef JUMPI
---
0x4db: JUMPDEST 
0x4df: V439 = 0x40
0x4e1: V440 = M[0x40]
0x4e3: V441 = M[V440]
0x4e9: V442 = M[S4]
0x4eb: V443 = LT S3 V442
0x4ec: V444 = 0x4f1
0x4ef: JUMPI 0x4f1 V443
---
Entry stack: [V12, 0x10b, S9, S8, S7, S6, S5, S4, S3, V384, 0xf7888aec, V420]
Stack pops: 5
Stack additions: [S4, S3, V441, S4, S3]
Exit stack: [V12, 0x10b, S9, S8, S7, S6, S5, S4, S3, V441, S4, S3]

================================

Block 0x4f0
[0x4f0:0x4f0]
---
Predecessors: [0x4db]
Successors: []
---
0x4f0 INVALID
---
0x4f0: INVALID 
---
Entry stack: [V12, 0x10b, S9, S8, S7, S6, S5, S4, S3, V441, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10b, S9, S8, S7, S6, S5, S4, S3, V441, S1, S0]

================================

Block 0x4f1
[0x4f1:0x4fb]
---
Predecessors: [0x4db]
Successors: [0x4fc]
---
0x4f1 JUMPDEST
0x4f2 PUSH1 0x20
0x4f4 SWAP1
0x4f5 DUP2
0x4f6 MUL
0x4f7 SWAP1
0x4f8 SWAP2
0x4f9 ADD
0x4fa ADD
0x4fb MSTORE
---
0x4f1: JUMPDEST 
0x4f2: V445 = 0x20
0x4f6: V446 = MUL 0x20 S0
0x4f9: V447 = ADD S1 V446
0x4fa: V448 = ADD V447 0x20
0x4fb: M[V448] = V441
---
Entry stack: [V12, 0x10b, S9, S8, S7, S6, S5, S4, S3, V441, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x10b, S9, S8, S7, S6, S5, S4, S3]

================================

Block 0x4fc
[0x4fc:0x503]
---
Predecessors: [0x4f1]
Successors: [0x44d]
---
0x4fc JUMPDEST
0x4fd PUSH1 0x1
0x4ff ADD
0x500 PUSH2 0x44d
0x503 JUMP
---
0x4fc: JUMPDEST 
0x4fd: V449 = 0x1
0x4ff: V450 = ADD 0x1 S0
0x500: V451 = 0x44d
0x503: JUMP 0x44d
---
Entry stack: [V12, 0x10b, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V450]
Exit stack: [V12, 0x10b, S6, S5, S4, S3, S2, S1, V450]

================================

Block 0x504
[0x504:0x507]
---
Predecessors: [0x44d]
Successors: [0x508]
---
0x504 JUMPDEST
0x505 DUP2
0x506 SWAP4
0x507 POP
---
0x504: JUMPDEST 
---
Entry stack: [V12, 0x10b, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S1, S2, S1, S0]
Exit stack: [V12, 0x10b, S6, S5, S4, S1, S2, S1, S0]

================================

Block 0x508
[0x508:0x511]
---
Predecessors: [0x504]
Successors: [0x10b]
---
0x508 JUMPDEST
0x509 POP
0x50a POP
0x50b POP
0x50c SWAP4
0x50d SWAP3
0x50e POP
0x50f POP
0x510 POP
0x511 JUMP
---
0x508: JUMPDEST 
0x511: JUMP 0x10b
---
Entry stack: [V12, 0x10b, V63, V66, V77, S3, V63, S1, S0]
Stack pops: 8
Stack additions: [S3]
Exit stack: [V12, S3]

================================

Block 0x512
[0x512:0x519]
---
Predecessors: [0x16a]
Successors: [0x9e8]
---
0x512 JUMPDEST
0x513 PUSH2 0x51a
0x516 PUSH2 0x9e8
0x519 JUMP
---
0x512: JUMPDEST 
0x513: V452 = 0x51a
0x516: V453 = 0x9e8
0x519: JUMP 0x9e8
---
Entry stack: [V12, 0x10b, V123, V134]
Stack pops: 0
Stack additions: [0x51a]
Exit stack: [V12, 0x10b, V123, V134, 0x51a]

================================

Block 0x51a
[0x51a:0x521]
---
Predecessors: [0x9e8]
Successors: [0x9e8]
---
0x51a JUMPDEST
0x51b PUSH2 0x522
0x51e PUSH2 0x9e8
0x521 JUMP
---
0x51a: JUMPDEST 
0x51b: V454 = 0x522
0x51e: V455 = 0x9e8
0x521: JUMP 0x9e8
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, V935]
Stack pops: 0
Stack additions: [0x522]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, V935, 0x522]

================================

Block 0x522
[0x522:0x52e]
---
Predecessors: [0x9e8]
Successors: [0x52f, 0x533]
---
0x522 JUMPDEST
0x523 PUSH1 0x0
0x525 DUP1
0x526 PUSH1 0x0
0x528 DUP6
0x529 MLOAD
0x52a GT
0x52b PUSH2 0x533
0x52e JUMPI
---
0x522: JUMPDEST 
0x523: V456 = 0x0
0x526: V457 = 0x0
0x529: V458 = M[S2]
0x52a: V459 = GT V458 0x0
0x52b: V460 = 0x533
0x52e: JUMPI 0x533 V459
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, V935]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, 0x0]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, V935, 0x0, 0x0]

================================

Block 0x52f
[0x52f:0x532]
---
Predecessors: [0x522]
Successors: []
---
0x52f PUSH1 0x0
0x531 DUP1
0x532 REVERT
---
0x52f: V461 = 0x0
0x532: REVERT 0x0 0x0
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, V935, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, V935, 0x0, 0x0]

================================

Block 0x533
[0x533:0x542]
---
Predecessors: [0x522]
Successors: [0x543, 0x545]
---
0x533 JUMPDEST
0x534 DUP5
0x535 MLOAD
0x536 PUSH1 0x2
0x538 MUL
0x539 PUSH1 0x40
0x53b MLOAD
0x53c DUP1
0x53d MSIZE
0x53e LT
0x53f PUSH2 0x545
0x542 JUMPI
---
0x533: JUMPDEST 
0x535: V462 = M[S4]
0x536: V463 = 0x2
0x538: V464 = MUL 0x2 V462
0x539: V465 = 0x40
0x53b: V466 = M[0x40]
0x53d: V467 = MSIZE
0x53e: V468 = LT V467 V466
0x53f: V469 = 0x545
0x542: JUMPI 0x545 V468
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, V935, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V464, V466]
Exit stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, V935, 0x0, 0x0, V464, V466]

================================

Block 0x543
[0x543:0x544]
---
Predecessors: [0x533]
Successors: [0x545]
---
0x543 POP
0x544 MSIZE
---
0x544: V470 = MSIZE
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, V935, 0x0, 0x0, V464, V466]
Stack pops: 1
Stack additions: [V470]
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, V935, 0x0, 0x0, V464, V470]

================================

Block 0x545
[0x545:0x555]
---
Predecessors: [0x533, 0x543]
Successors: [0x556]
---
0x545 JUMPDEST
0x546 SWAP1
0x547 DUP1
0x548 DUP3
0x549 MSTORE
0x54a DUP1
0x54b PUSH1 0x20
0x54d MUL
0x54e PUSH1 0x20
0x550 ADD
0x551 DUP3
0x552 ADD
0x553 PUSH1 0x40
0x555 MSTORE
---
0x545: JUMPDEST 
0x549: M[S0] = V464
0x54b: V471 = 0x20
0x54d: V472 = MUL 0x20 V464
0x54e: V473 = 0x20
0x550: V474 = ADD 0x20 V472
0x552: V475 = ADD S0 V474
0x553: V476 = 0x40
0x555: M[0x40] = V475
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, V935, 0x0, 0x0, V464, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, V935, 0x0, 0x0, S0, V464]

================================

Block 0x556
[0x556:0x55d]
---
Predecessors: [0x545]
Successors: [0x55e]
---
0x556 JUMPDEST
0x557 POP
0x558 SWAP3
0x559 POP
0x55a PUSH1 0x0
0x55c SWAP2
0x55d POP
---
0x556: JUMPDEST 
0x55a: V477 = 0x0
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, V935, 0x0, 0x0, S1, V464]
Stack pops: 5
Stack additions: [S1, 0x0, S2]
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S1, 0x0, 0x0]

================================

Block 0x55e
[0x55e:0x567]
---
Predecessors: [0x556, 0x653]
Successors: [0x568, 0x65e]
---
0x55e JUMPDEST
0x55f DUP5
0x560 MLOAD
0x561 DUP3
0x562 LT
0x563 ISZERO
0x564 PUSH2 0x65e
0x567 JUMPI
---
0x55e: JUMPDEST 
0x560: V478 = M[S4]
0x562: V479 = LT S1 V478
0x563: V480 = ISZERO V479
0x564: V481 = 0x65e
0x567: JUMPI 0x65e V480
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x568
[0x568:0x571]
---
Predecessors: [0x55e]
Successors: [0x572, 0x573]
---
0x568 DUP5
0x569 DUP3
0x56a DUP2
0x56b MLOAD
0x56c DUP2
0x56d LT
0x56e PUSH2 0x573
0x571 JUMPI
---
0x56b: V482 = M[S4]
0x56d: V483 = LT S1 V482
0x56e: V484 = 0x573
0x571: JUMPI 0x573 V483
---
Entry stack: [V12, 0x10b, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S4, S1]
Exit stack: [V12, 0x10b, S7, S6, S5, S4, S3, S2, S1, S0, S4, S1]

================================

Block 0x572
[0x572:0x572]
---
Predecessors: [0x568]
Successors: []
---
0x572 INVALID
---
0x572: INVALID 
---
Entry stack: [V12, 0x10b, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10b, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x573
[0x573:0x58b]
---
Predecessors: [0x568]
Successors: [0x58c, 0x630]
---
0x573 JUMPDEST
0x574 SWAP1
0x575 PUSH1 0x20
0x577 ADD
0x578 SWAP1
0x579 PUSH1 0x20
0x57b MUL
0x57c ADD
0x57d MLOAD
0x57e PUSH1 0x1
0x580 PUSH1 0xa0
0x582 PUSH1 0x2
0x584 EXP
0x585 SUB
0x586 AND
0x587 ISZERO
0x588 PUSH2 0x630
0x58b JUMPI
---
0x573: JUMPDEST 
0x575: V485 = 0x20
0x577: V486 = ADD 0x20 S1
0x579: V487 = 0x20
0x57b: V488 = MUL 0x20 S0
0x57c: V489 = ADD V488 V486
0x57d: V490 = M[V489]
0x57e: V491 = 0x1
0x580: V492 = 0xa0
0x582: V493 = 0x2
0x584: V494 = EXP 0x2 0xa0
0x585: V495 = SUB 0x10000000000000000000000000000000000000000 0x1
0x586: V496 = AND 0xffffffffffffffffffffffffffffffffffffffff V490
0x587: V497 = ISZERO V496
0x588: V498 = 0x630
0x58b: JUMPI 0x630 V497
---
Entry stack: [V12, 0x10b, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x10b, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x58c
[0x58c:0x595]
---
Predecessors: [0x573]
Successors: [0x596, 0x597]
---
0x58c DUP5
0x58d DUP3
0x58e DUP2
0x58f MLOAD
0x590 DUP2
0x591 LT
0x592 PUSH2 0x597
0x595 JUMPI
---
0x58f: V499 = M[S4]
0x591: V500 = LT S1 V499
0x592: V501 = 0x597
0x595: JUMPI 0x597 V500
---
Entry stack: [V12, 0x10b, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S4, S1]
Exit stack: [V12, 0x10b, S7, S6, S5, S4, S3, S2, S1, S0, S4, S1]

================================

Block 0x596
[0x596:0x596]
---
Predecessors: [0x58c]
Successors: []
---
0x596 INVALID
---
0x596: INVALID 
---
Entry stack: [V12, 0x10b, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10b, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x597
[0x597:0x5f5]
---
Predecessors: [0x58c]
Successors: [0x5f6, 0x5fa]
---
0x597 JUMPDEST
0x598 SWAP1
0x599 PUSH1 0x20
0x59b ADD
0x59c SWAP1
0x59d PUSH1 0x20
0x59f MUL
0x5a0 ADD
0x5a1 MLOAD
0x5a2 SWAP1
0x5a3 POP
0x5a4 DUP1
0x5a5 PUSH1 0x1
0x5a7 PUSH1 0xa0
0x5a9 PUSH1 0x2
0x5ab EXP
0x5ac SUB
0x5ad AND
0x5ae PUSH4 0x70a08231
0x5b3 DUP8
0x5b4 PUSH1 0x0
0x5b6 PUSH1 0x40
0x5b8 MLOAD
0x5b9 PUSH1 0x20
0x5bb ADD
0x5bc MSTORE
0x5bd PUSH1 0x40
0x5bf MLOAD
0x5c0 PUSH1 0xe0
0x5c2 PUSH1 0x2
0x5c4 EXP
0x5c5 PUSH4 0xffffffff
0x5ca DUP5
0x5cb AND
0x5cc MUL
0x5cd DUP2
0x5ce MSTORE
0x5cf PUSH1 0x1
0x5d1 PUSH1 0xa0
0x5d3 PUSH1 0x2
0x5d5 EXP
0x5d6 SUB
0x5d7 SWAP1
0x5d8 SWAP2
0x5d9 AND
0x5da PUSH1 0x4
0x5dc DUP3
0x5dd ADD
0x5de MSTORE
0x5df PUSH1 0x24
0x5e1 ADD
0x5e2 PUSH1 0x20
0x5e4 PUSH1 0x40
0x5e6 MLOAD
0x5e7 DUP1
0x5e8 DUP4
0x5e9 SUB
0x5ea DUP2
0x5eb PUSH1 0x0
0x5ed DUP8
0x5ee DUP1
0x5ef EXTCODESIZE
0x5f0 ISZERO
0x5f1 ISZERO
0x5f2 PUSH2 0x5fa
0x5f5 JUMPI
---
0x597: JUMPDEST 
0x599: V502 = 0x20
0x59b: V503 = ADD 0x20 S1
0x59d: V504 = 0x20
0x59f: V505 = MUL 0x20 S0
0x5a0: V506 = ADD V505 V503
0x5a1: V507 = M[V506]
0x5a5: V508 = 0x1
0x5a7: V509 = 0xa0
0x5a9: V510 = 0x2
0x5ab: V511 = EXP 0x2 0xa0
0x5ac: V512 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ad: V513 = AND 0xffffffffffffffffffffffffffffffffffffffff V507
0x5ae: V514 = 0x70a08231
0x5b4: V515 = 0x0
0x5b6: V516 = 0x40
0x5b8: V517 = M[0x40]
0x5b9: V518 = 0x20
0x5bb: V519 = ADD 0x20 V517
0x5bc: M[V519] = 0x0
0x5bd: V520 = 0x40
0x5bf: V521 = M[0x40]
0x5c0: V522 = 0xe0
0x5c2: V523 = 0x2
0x5c4: V524 = EXP 0x2 0xe0
0x5c5: V525 = 0xffffffff
0x5cb: V526 = AND 0x70a08231 0xffffffff
0x5cc: V527 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x5ce: M[V521] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x5cf: V528 = 0x1
0x5d1: V529 = 0xa0
0x5d3: V530 = 0x2
0x5d5: V531 = EXP 0x2 0xa0
0x5d6: V532 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5d9: V533 = AND S7 0xffffffffffffffffffffffffffffffffffffffff
0x5da: V534 = 0x4
0x5dd: V535 = ADD V521 0x4
0x5de: M[V535] = V533
0x5df: V536 = 0x24
0x5e1: V537 = ADD 0x24 V521
0x5e2: V538 = 0x20
0x5e4: V539 = 0x40
0x5e6: V540 = M[0x40]
0x5e9: V541 = SUB V537 V540
0x5eb: V542 = 0x0
0x5ef: V543 = EXTCODESIZE V513
0x5f0: V544 = ISZERO V543
0x5f1: V545 = ISZERO V544
0x5f2: V546 = 0x5fa
0x5f5: JUMPI 0x5fa V545
---
Entry stack: [V12, 0x10b, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, V507, V513, 0x70a08231, V537, 0x20, V540, V541, V540, 0x0, V513]
Exit stack: [V12, 0x10b, S9, S8, S7, S6, S5, S4, S3, V507, V513, 0x70a08231, V537, 0x20, V540, V541, V540, 0x0, V513]

================================

Block 0x5f6
[0x5f6:0x5f9]
---
Predecessors: [0x597]
Successors: []
---
0x5f6 PUSH1 0x0
0x5f8 DUP1
0x5f9 REVERT
---
0x5f6: V547 = 0x0
0x5f9: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10b, S16, S15, S14, S13, S12, S11, S10, V507, V513, 0x70a08231, V537, 0x20, V540, V541, V540, 0x0, V513]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10b, S16, S15, S14, S13, S12, S11, S10, V507, V513, 0x70a08231, V537, 0x20, V540, V541, V540, 0x0, V513]

================================

Block 0x5fa
[0x5fa:0x606]
---
Predecessors: [0x597]
Successors: [0x607, 0x60b]
---
0x5fa JUMPDEST
0x5fb PUSH2 0x2c6
0x5fe GAS
0x5ff SUB
0x600 CALL
0x601 ISZERO
0x602 ISZERO
0x603 PUSH2 0x60b
0x606 JUMPI
---
0x5fa: JUMPDEST 
0x5fb: V548 = 0x2c6
0x5fe: V549 = GAS
0x5ff: V550 = SUB V549 0x2c6
0x600: V551 = CALL V550 V513 0x0 V540 V541 V540 0x20
0x601: V552 = ISZERO V551
0x602: V553 = ISZERO V552
0x603: V554 = 0x60b
0x606: JUMPI 0x60b V553
---
Entry stack: [V12, 0x10b, S16, S15, S14, S13, S12, S11, S10, V507, V513, 0x70a08231, V537, 0x20, V540, V541, V540, 0x0, V513]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x10b, S16, S15, S14, S13, S12, S11, S10, V507, V513, 0x70a08231, V537]

================================

Block 0x607
[0x607:0x60a]
---
Predecessors: [0x5fa]
Successors: []
---
0x607 PUSH1 0x0
0x609 DUP1
0x60a REVERT
---
0x607: V555 = 0x0
0x60a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10b, S10, S9, S8, S7, S6, S5, S4, V507, V513, 0x70a08231, V537]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10b, S10, S9, S8, S7, S6, S5, S4, V507, V513, 0x70a08231, V537]

================================

Block 0x60b
[0x60b:0x61f]
---
Predecessors: [0x5fa]
Successors: [0x620, 0x621]
---
0x60b JUMPDEST
0x60c POP
0x60d POP
0x60e POP
0x60f PUSH1 0x40
0x611 MLOAD
0x612 DUP1
0x613 MLOAD
0x614 SWAP1
0x615 POP
0x616 DUP4
0x617 DUP4
0x618 DUP2
0x619 MLOAD
0x61a DUP2
0x61b LT
0x61c PUSH2 0x621
0x61f JUMPI
---
0x60b: JUMPDEST 
0x60f: V556 = 0x40
0x611: V557 = M[0x40]
0x613: V558 = M[V557]
0x619: V559 = M[S5]
0x61b: V560 = LT S4 V559
0x61c: V561 = 0x621
0x61f: JUMPI 0x621 V560
---
Entry stack: [V12, 0x10b, S10, S9, S8, S7, S6, S5, S4, V507, V513, 0x70a08231, V537]
Stack pops: 6
Stack additions: [S5, S4, S3, V558, S5, S4]
Exit stack: [V12, 0x10b, S10, S9, S8, S7, S6, S5, S4, V507, V558, S5, S4]

================================

Block 0x620
[0x620:0x620]
---
Predecessors: [0x60b]
Successors: []
---
0x620 INVALID
---
0x620: INVALID 
---
Entry stack: [V12, 0x10b, S10, S9, S8, S7, S6, S5, S4, V507, V558, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10b, S10, S9, S8, S7, S6, S5, S4, V507, V558, S1, S0]

================================

Block 0x621
[0x621:0x62f]
---
Predecessors: [0x60b]
Successors: [0x652]
---
0x621 JUMPDEST
0x622 PUSH1 0x20
0x624 SWAP1
0x625 DUP2
0x626 MUL
0x627 SWAP1
0x628 SWAP2
0x629 ADD
0x62a ADD
0x62b MSTORE
0x62c PUSH2 0x652
0x62f JUMP
---
0x621: JUMPDEST 
0x622: V562 = 0x20
0x626: V563 = MUL 0x20 S0
0x629: V564 = ADD S1 V563
0x62a: V565 = ADD V564 0x20
0x62b: M[V565] = V558
0x62c: V566 = 0x652
0x62f: JUMP 0x652
---
Entry stack: [V12, 0x10b, S10, S9, S8, S7, S6, S5, S4, V507, V558, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x10b, S10, S9, S8, S7, S6, S5, S4, V507]

================================

Block 0x630
[0x630:0x645]
---
Predecessors: [0x573]
Successors: [0x646, 0x647]
---
0x630 JUMPDEST
0x631 DUP6
0x632 PUSH1 0x1
0x634 PUSH1 0xa0
0x636 PUSH1 0x2
0x638 EXP
0x639 SUB
0x63a AND
0x63b BALANCE
0x63c DUP4
0x63d DUP4
0x63e DUP2
0x63f MLOAD
0x640 DUP2
0x641 LT
0x642 PUSH2 0x647
0x645 JUMPI
---
0x630: JUMPDEST 
0x632: V567 = 0x1
0x634: V568 = 0xa0
0x636: V569 = 0x2
0x638: V570 = EXP 0x2 0xa0
0x639: V571 = SUB 0x10000000000000000000000000000000000000000 0x1
0x63a: V572 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x63b: V573 = BALANCE V572
0x63f: V574 = M[S2]
0x641: V575 = LT S1 V574
0x642: V576 = 0x647
0x645: JUMPI 0x647 V575
---
Entry stack: [V12, 0x10b, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, V573, S2, S1]
Exit stack: [V12, 0x10b, S7, S6, S5, S4, S3, S2, S1, S0, V573, S2, S1]

================================

Block 0x646
[0x646:0x646]
---
Predecessors: [0x630]
Successors: []
---
0x646 INVALID
---
0x646: INVALID 
---
Entry stack: [V12, 0x10b, S10, S9, S8, S7, S6, S5, S4, S3, V573, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10b, S10, S9, S8, S7, S6, S5, S4, S3, V573, S1, S0]

================================

Block 0x647
[0x647:0x651]
---
Predecessors: [0x630]
Successors: [0x652]
---
0x647 JUMPDEST
0x648 PUSH1 0x20
0x64a SWAP1
0x64b DUP2
0x64c MUL
0x64d SWAP1
0x64e SWAP2
0x64f ADD
0x650 ADD
0x651 MSTORE
---
0x647: JUMPDEST 
0x648: V577 = 0x20
0x64c: V578 = MUL 0x20 S0
0x64f: V579 = ADD S1 V578
0x650: V580 = ADD V579 0x20
0x651: M[V580] = V573
---
Entry stack: [V12, 0x10b, S10, S9, S8, S7, S6, S5, S4, S3, V573, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x10b, S10, S9, S8, S7, S6, S5, S4, S3]

================================

Block 0x652
[0x652:0x652]
---
Predecessors: [0x621, 0x647]
Successors: [0x653]
---
0x652 JUMPDEST
---
0x652: JUMPDEST 
---
Entry stack: [V12, 0x10b, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10b, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x653
[0x653:0x65d]
---
Predecessors: [0x652]
Successors: [0x55e]
---
0x653 JUMPDEST
0x654 PUSH1 0x1
0x656 SWAP1
0x657 SWAP2
0x658 ADD
0x659 SWAP1
0x65a PUSH2 0x55e
0x65d JUMP
---
0x653: JUMPDEST 
0x654: V581 = 0x1
0x658: V582 = ADD S1 0x1
0x65a: V583 = 0x55e
0x65d: JUMP 0x55e
---
Entry stack: [V12, 0x10b, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [V582, S0]
Exit stack: [V12, 0x10b, S7, S6, S5, S4, S3, S2, V582, S0]

================================

Block 0x65e
[0x65e:0x661]
---
Predecessors: [0x55e]
Successors: [0x662]
---
0x65e JUMPDEST
0x65f DUP3
0x660 SWAP4
0x661 POP
---
0x65e: JUMPDEST 
---
Entry stack: [V12, 0x10b, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S2, S2, S1, S0]
Exit stack: [V12, 0x10b, S7, S6, S5, S4, S2, S2, S1, S0]

================================

Block 0x662
[0x662:0x66a]
---
Predecessors: [0x65e]
Successors: [0x10b]
---
0x662 JUMPDEST
0x663 POP
0x664 POP
0x665 POP
0x666 SWAP3
0x667 SWAP2
0x668 POP
0x669 POP
0x66a JUMP
---
0x662: JUMPDEST 
0x66a: JUMP 0x10b
---
Entry stack: [V12, 0x10b, V123, V134, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S3]
Exit stack: [V12, S3]

================================

Block 0x66b
[0x66b:0x683]
---
Predecessors: [0x21b]
Successors: [0x684, 0x805]
---
0x66b JUMPDEST
0x66c PUSH1 0x0
0x66e DUP1
0x66f SLOAD
0x670 CALLER
0x671 PUSH1 0x1
0x673 PUSH1 0xa0
0x675 PUSH1 0x2
0x677 EXP
0x678 SUB
0x679 SWAP1
0x67a DUP2
0x67b AND
0x67c SWAP2
0x67d AND
0x67e EQ
0x67f ISZERO
0x680 PUSH2 0x805
0x683 JUMPI
---
0x66b: JUMPDEST 
0x66c: V584 = 0x0
0x66f: V585 = S[0x0]
0x670: V586 = CALLER
0x671: V587 = 0x1
0x673: V588 = 0xa0
0x675: V589 = 0x2
0x677: V590 = EXP 0x2 0xa0
0x678: V591 = SUB 0x10000000000000000000000000000000000000000 0x1
0x67b: V592 = AND 0xffffffffffffffffffffffffffffffffffffffff V586
0x67d: V593 = AND V585 0xffffffffffffffffffffffffffffffffffffffff
0x67e: V594 = EQ V593 V592
0x67f: V595 = ISZERO V594
0x680: V596 = 0x805
0x683: JUMPI 0x805 V595
---
Entry stack: [V12, 0x78, V180, V182]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x78, V180, V182, 0x0]

================================

Block 0x684
[0x684:0x693]
---
Predecessors: [0x66b]
Successors: [0x694, 0x695]
---
0x684 PUSH1 0x1
0x686 PUSH1 0xa0
0x688 PUSH1 0x2
0x68a EXP
0x68b SUB
0x68c DUP4
0x68d AND
0x68e ISZERO
0x68f ISZERO
0x690 PUSH2 0x695
0x693 JUMPI
---
0x684: V597 = 0x1
0x686: V598 = 0xa0
0x688: V599 = 0x2
0x68a: V600 = EXP 0x2 0xa0
0x68b: V601 = SUB 0x10000000000000000000000000000000000000000 0x1
0x68d: V602 = AND V180 0xffffffffffffffffffffffffffffffffffffffff
0x68e: V603 = ISZERO V602
0x68f: V604 = ISZERO V603
0x690: V605 = 0x695
0x693: JUMPI 0x695 V604
---
Entry stack: [V12, 0x78, V180, V182, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x78, V180, V182, 0x0]

================================

Block 0x694
[0x694:0x694]
---
Predecessors: [0x684]
Successors: []
---
0x694 INVALID
---
0x694: INVALID 
---
Entry stack: [V12, 0x78, V180, V182, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x78, V180, V182, 0x0]

================================

Block 0x695
[0x695:0x6ef]
---
Predecessors: [0x684]
Successors: [0x6f0, 0x6f4]
---
0x695 JUMPDEST
0x696 POP
0x697 DUP2
0x698 PUSH1 0x1
0x69a PUSH1 0xa0
0x69c PUSH1 0x2
0x69e EXP
0x69f SUB
0x6a0 DUP2
0x6a1 AND
0x6a2 PUSH4 0x95ea7b3
0x6a7 ADDRESS
0x6a8 DUP5
0x6a9 PUSH1 0x0
0x6ab PUSH1 0x40
0x6ad MLOAD
0x6ae PUSH1 0x20
0x6b0 ADD
0x6b1 MSTORE
0x6b2 PUSH1 0x40
0x6b4 MLOAD
0x6b5 PUSH1 0xe0
0x6b7 PUSH1 0x2
0x6b9 EXP
0x6ba PUSH4 0xffffffff
0x6bf DUP6
0x6c0 AND
0x6c1 MUL
0x6c2 DUP2
0x6c3 MSTORE
0x6c4 PUSH1 0x1
0x6c6 PUSH1 0xa0
0x6c8 PUSH1 0x2
0x6ca EXP
0x6cb SUB
0x6cc SWAP1
0x6cd SWAP3
0x6ce AND
0x6cf PUSH1 0x4
0x6d1 DUP4
0x6d2 ADD
0x6d3 MSTORE
0x6d4 PUSH1 0x24
0x6d6 DUP3
0x6d7 ADD
0x6d8 MSTORE
0x6d9 PUSH1 0x44
0x6db ADD
0x6dc PUSH1 0x20
0x6de PUSH1 0x40
0x6e0 MLOAD
0x6e1 DUP1
0x6e2 DUP4
0x6e3 SUB
0x6e4 DUP2
0x6e5 PUSH1 0x0
0x6e7 DUP8
0x6e8 DUP1
0x6e9 EXTCODESIZE
0x6ea ISZERO
0x6eb ISZERO
0x6ec PUSH2 0x6f4
0x6ef JUMPI
---
0x695: JUMPDEST 
0x698: V606 = 0x1
0x69a: V607 = 0xa0
0x69c: V608 = 0x2
0x69e: V609 = EXP 0x2 0xa0
0x69f: V610 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6a1: V611 = AND V180 0xffffffffffffffffffffffffffffffffffffffff
0x6a2: V612 = 0x95ea7b3
0x6a7: V613 = ADDRESS
0x6a9: V614 = 0x0
0x6ab: V615 = 0x40
0x6ad: V616 = M[0x40]
0x6ae: V617 = 0x20
0x6b0: V618 = ADD 0x20 V616
0x6b1: M[V618] = 0x0
0x6b2: V619 = 0x40
0x6b4: V620 = M[0x40]
0x6b5: V621 = 0xe0
0x6b7: V622 = 0x2
0x6b9: V623 = EXP 0x2 0xe0
0x6ba: V624 = 0xffffffff
0x6c0: V625 = AND 0x95ea7b3 0xffffffff
0x6c1: V626 = MUL 0x95ea7b3 0x100000000000000000000000000000000000000000000000000000000
0x6c3: M[V620] = 0x95ea7b300000000000000000000000000000000000000000000000000000000
0x6c4: V627 = 0x1
0x6c6: V628 = 0xa0
0x6c8: V629 = 0x2
0x6ca: V630 = EXP 0x2 0xa0
0x6cb: V631 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6ce: V632 = AND V613 0xffffffffffffffffffffffffffffffffffffffff
0x6cf: V633 = 0x4
0x6d2: V634 = ADD V620 0x4
0x6d3: M[V634] = V632
0x6d4: V635 = 0x24
0x6d7: V636 = ADD V620 0x24
0x6d8: M[V636] = V182
0x6d9: V637 = 0x44
0x6db: V638 = ADD 0x44 V620
0x6dc: V639 = 0x20
0x6de: V640 = 0x40
0x6e0: V641 = M[0x40]
0x6e3: V642 = SUB V638 V641
0x6e5: V643 = 0x0
0x6e9: V644 = EXTCODESIZE V611
0x6ea: V645 = ISZERO V644
0x6eb: V646 = ISZERO V645
0x6ec: V647 = 0x6f4
0x6ef: JUMPI 0x6f4 V646
---
Entry stack: [V12, 0x78, V180, V182, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S2, V611, 0x95ea7b3, V638, 0x20, V641, V642, V641, 0x0, V611]
Exit stack: [V12, 0x78, V180, V182, V180, V611, 0x95ea7b3, V638, 0x20, V641, V642, V641, 0x0, V611]

================================

Block 0x6f0
[0x6f0:0x6f3]
---
Predecessors: [0x695]
Successors: []
---
0x6f0 PUSH1 0x0
0x6f2 DUP1
0x6f3 REVERT
---
0x6f0: V648 = 0x0
0x6f3: REVERT 0x0 0x0
---
Entry stack: [V12, 0x78, V180, V182, V180, V611, 0x95ea7b3, V638, 0x20, V641, V642, V641, 0x0, V611]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x78, V180, V182, V180, V611, 0x95ea7b3, V638, 0x20, V641, V642, V641, 0x0, V611]

================================

Block 0x6f4
[0x6f4:0x700]
---
Predecessors: [0x695]
Successors: [0x701, 0x705]
---
0x6f4 JUMPDEST
0x6f5 PUSH2 0x2c6
0x6f8 GAS
0x6f9 SUB
0x6fa CALL
0x6fb ISZERO
0x6fc ISZERO
0x6fd PUSH2 0x705
0x700 JUMPI
---
0x6f4: JUMPDEST 
0x6f5: V649 = 0x2c6
0x6f8: V650 = GAS
0x6f9: V651 = SUB V650 0x2c6
0x6fa: V652 = CALL V651 V611 0x0 V641 V642 V641 0x20
0x6fb: V653 = ISZERO V652
0x6fc: V654 = ISZERO V653
0x6fd: V655 = 0x705
0x700: JUMPI 0x705 V654
---
Entry stack: [V12, 0x78, V180, V182, V180, V611, 0x95ea7b3, V638, 0x20, V641, V642, V641, 0x0, V611]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x78, V180, V182, V180, V611, 0x95ea7b3, V638]

================================

Block 0x701
[0x701:0x704]
---
Predecessors: [0x6f4]
Successors: []
---
0x701 PUSH1 0x0
0x703 DUP1
0x704 REVERT
---
0x701: V656 = 0x0
0x704: REVERT 0x0 0x0
---
Entry stack: [V12, 0x78, V180, V182, V180, V611, 0x95ea7b3, V638]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x78, V180, V182, V180, V611, 0x95ea7b3, V638]

================================

Block 0x705
[0x705:0x77c]
---
Predecessors: [0x6f4]
Successors: [0x77d, 0x781]
---
0x705 JUMPDEST
0x706 POP
0x707 POP
0x708 POP
0x709 PUSH1 0x40
0x70b MLOAD
0x70c DUP1
0x70d MLOAD
0x70e POP
0x70f POP
0x710 PUSH1 0x0
0x712 DUP1
0x713 SLOAD
0x714 PUSH1 0x1
0x716 PUSH1 0xa0
0x718 PUSH1 0x2
0x71a EXP
0x71b SUB
0x71c DUP1
0x71d DUP5
0x71e AND
0x71f SWAP3
0x720 PUSH4 0x23b872dd
0x725 SWAP3
0x726 ADDRESS
0x727 SWAP3
0x728 AND
0x729 SWAP1
0x72a DUP7
0x72b SWAP1
0x72c PUSH1 0x40
0x72e MLOAD
0x72f PUSH1 0x20
0x731 ADD
0x732 MSTORE
0x733 PUSH1 0x40
0x735 MLOAD
0x736 PUSH1 0xe0
0x738 PUSH1 0x2
0x73a EXP
0x73b PUSH4 0xffffffff
0x740 DUP7
0x741 AND
0x742 MUL
0x743 DUP2
0x744 MSTORE
0x745 PUSH1 0x1
0x747 PUSH1 0xa0
0x749 PUSH1 0x2
0x74b EXP
0x74c SUB
0x74d SWAP4
0x74e DUP5
0x74f AND
0x750 PUSH1 0x4
0x752 DUP3
0x753 ADD
0x754 MSTORE
0x755 SWAP2
0x756 SWAP1
0x757 SWAP3
0x758 AND
0x759 PUSH1 0x24
0x75b DUP3
0x75c ADD
0x75d MSTORE
0x75e PUSH1 0x44
0x760 DUP2
0x761 ADD
0x762 SWAP2
0x763 SWAP1
0x764 SWAP2
0x765 MSTORE
0x766 PUSH1 0x64
0x768 ADD
0x769 PUSH1 0x20
0x76b PUSH1 0x40
0x76d MLOAD
0x76e DUP1
0x76f DUP4
0x770 SUB
0x771 DUP2
0x772 PUSH1 0x0
0x774 DUP8
0x775 DUP1
0x776 EXTCODESIZE
0x777 ISZERO
0x778 ISZERO
0x779 PUSH2 0x781
0x77c JUMPI
---
0x705: JUMPDEST 
0x709: V657 = 0x40
0x70b: V658 = M[0x40]
0x70d: V659 = M[V658]
0x710: V660 = 0x0
0x713: V661 = S[0x0]
0x714: V662 = 0x1
0x716: V663 = 0xa0
0x718: V664 = 0x2
0x71a: V665 = EXP 0x2 0xa0
0x71b: V666 = SUB 0x10000000000000000000000000000000000000000 0x1
0x71e: V667 = AND V180 0xffffffffffffffffffffffffffffffffffffffff
0x720: V668 = 0x23b872dd
0x726: V669 = ADDRESS
0x728: V670 = AND 0xffffffffffffffffffffffffffffffffffffffff V661
0x72c: V671 = 0x40
0x72e: V672 = M[0x40]
0x72f: V673 = 0x20
0x731: V674 = ADD 0x20 V672
0x732: M[V674] = 0x0
0x733: V675 = 0x40
0x735: V676 = M[0x40]
0x736: V677 = 0xe0
0x738: V678 = 0x2
0x73a: V679 = EXP 0x2 0xe0
0x73b: V680 = 0xffffffff
0x741: V681 = AND 0x23b872dd 0xffffffff
0x742: V682 = MUL 0x23b872dd 0x100000000000000000000000000000000000000000000000000000000
0x744: M[V676] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x745: V683 = 0x1
0x747: V684 = 0xa0
0x749: V685 = 0x2
0x74b: V686 = EXP 0x2 0xa0
0x74c: V687 = SUB 0x10000000000000000000000000000000000000000 0x1
0x74f: V688 = AND 0xffffffffffffffffffffffffffffffffffffffff V669
0x750: V689 = 0x4
0x753: V690 = ADD V676 0x4
0x754: M[V690] = V688
0x758: V691 = AND 0xffffffffffffffffffffffffffffffffffffffff V670
0x759: V692 = 0x24
0x75c: V693 = ADD V676 0x24
0x75d: M[V693] = V691
0x75e: V694 = 0x44
0x761: V695 = ADD V676 0x44
0x765: M[V695] = V182
0x766: V696 = 0x64
0x768: V697 = ADD 0x64 V676
0x769: V698 = 0x20
0x76b: V699 = 0x40
0x76d: V700 = M[0x40]
0x770: V701 = SUB V697 V700
0x772: V702 = 0x0
0x776: V703 = EXTCODESIZE V667
0x777: V704 = ISZERO V703
0x778: V705 = ISZERO V704
0x779: V706 = 0x781
0x77c: JUMPI 0x781 V705
---
Entry stack: [V12, 0x78, V180, V182, V180, V611, 0x95ea7b3, V638]
Stack pops: 5
Stack additions: [S4, S3, V667, 0x23b872dd, V697, 0x20, V700, V701, V700, 0x0, V667]
Exit stack: [V12, 0x78, V180, V182, V180, V667, 0x23b872dd, V697, 0x20, V700, V701, V700, 0x0, V667]

================================

Block 0x77d
[0x77d:0x780]
---
Predecessors: [0x705]
Successors: []
---
0x77d PUSH1 0x0
0x77f DUP1
0x780 REVERT
---
0x77d: V707 = 0x0
0x780: REVERT 0x0 0x0
---
Entry stack: [V12, 0x78, V180, V182, V180, V667, 0x23b872dd, V697, 0x20, V700, V701, V700, 0x0, V667]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x78, V180, V182, V180, V667, 0x23b872dd, V697, 0x20, V700, V701, V700, 0x0, V667]

================================

Block 0x781
[0x781:0x78d]
---
Predecessors: [0x705]
Successors: [0x78e, 0x792]
---
0x781 JUMPDEST
0x782 PUSH2 0x2c6
0x785 GAS
0x786 SUB
0x787 CALL
0x788 ISZERO
0x789 ISZERO
0x78a PUSH2 0x792
0x78d JUMPI
---
0x781: JUMPDEST 
0x782: V708 = 0x2c6
0x785: V709 = GAS
0x786: V710 = SUB V709 0x2c6
0x787: V711 = CALL V710 V667 0x0 V700 V701 V700 0x20
0x788: V712 = ISZERO V711
0x789: V713 = ISZERO V712
0x78a: V714 = 0x792
0x78d: JUMPI 0x792 V713
---
Entry stack: [V12, 0x78, V180, V182, V180, V667, 0x23b872dd, V697, 0x20, V700, V701, V700, 0x0, V667]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x78, V180, V182, V180, V667, 0x23b872dd, V697]

================================

Block 0x78e
[0x78e:0x791]
---
Predecessors: [0x781]
Successors: []
---
0x78e PUSH1 0x0
0x790 DUP1
0x791 REVERT
---
0x78e: V715 = 0x0
0x791: REVERT 0x0 0x0
---
Entry stack: [V12, 0x78, V180, V182, V180, V667, 0x23b872dd, V697]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x78, V180, V182, V180, V667, 0x23b872dd, V697]

================================

Block 0x792
[0x792:0x7a2]
---
Predecessors: [0x781]
Successors: [0x7a3, 0x7a7]
---
0x792 JUMPDEST
0x793 POP
0x794 POP
0x795 POP
0x796 PUSH1 0x40
0x798 MLOAD
0x799 DUP1
0x79a MLOAD
0x79b SWAP1
0x79c POP
0x79d ISZERO
0x79e ISZERO
0x79f PUSH2 0x7a7
0x7a2 JUMPI
---
0x792: JUMPDEST 
0x796: V716 = 0x40
0x798: V717 = M[0x40]
0x79a: V718 = M[V717]
0x79d: V719 = ISZERO V718
0x79e: V720 = ISZERO V719
0x79f: V721 = 0x7a7
0x7a2: JUMPI 0x7a7 V720
---
Entry stack: [V12, 0x78, V180, V182, V180, V667, 0x23b872dd, V697]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x78, V180, V182, V180]

================================

Block 0x7a3
[0x7a3:0x7a6]
---
Predecessors: [0x792]
Successors: []
---
0x7a3 PUSH1 0x0
0x7a5 DUP1
0x7a6 REVERT
---
0x7a3: V722 = 0x0
0x7a6: REVERT 0x0 0x0
---
Entry stack: [V12, 0x78, V180, V182, V180]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x78, V180, V182, V180]

================================

Block 0x7a7
[0x7a7:0x804]
---
Predecessors: [0x792]
Successors: [0x805]
---
0x7a7 JUMPDEST
0x7a8 PUSH1 0x0
0x7aa SLOAD
0x7ab PUSH32 0x9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb
0x7cc SWAP1
0x7cd DUP5
0x7ce SWAP1
0x7cf PUSH1 0x1
0x7d1 PUSH1 0xa0
0x7d3 PUSH1 0x2
0x7d5 EXP
0x7d6 SUB
0x7d7 AND
0x7d8 DUP5
0x7d9 PUSH1 0x40
0x7db MLOAD
0x7dc PUSH1 0x1
0x7de PUSH1 0xa0
0x7e0 PUSH1 0x2
0x7e2 EXP
0x7e3 SUB
0x7e4 SWAP4
0x7e5 DUP5
0x7e6 AND
0x7e7 DUP2
0x7e8 MSTORE
0x7e9 SWAP2
0x7ea SWAP1
0x7eb SWAP3
0x7ec AND
0x7ed PUSH1 0x20
0x7ef DUP3
0x7f0 ADD
0x7f1 MSTORE
0x7f2 PUSH1 0x40
0x7f4 DUP1
0x7f5 DUP3
0x7f6 ADD
0x7f7 SWAP3
0x7f8 SWAP1
0x7f9 SWAP3
0x7fa MSTORE
0x7fb PUSH1 0x60
0x7fd ADD
0x7fe SWAP1
0x7ff MLOAD
0x800 DUP1
0x801 SWAP2
0x802 SUB
0x803 SWAP1
0x804 LOG1
---
0x7a7: JUMPDEST 
0x7a8: V723 = 0x0
0x7aa: V724 = S[0x0]
0x7ab: V725 = 0x9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb
0x7cf: V726 = 0x1
0x7d1: V727 = 0xa0
0x7d3: V728 = 0x2
0x7d5: V729 = EXP 0x2 0xa0
0x7d6: V730 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7d7: V731 = AND 0xffffffffffffffffffffffffffffffffffffffff V724
0x7d9: V732 = 0x40
0x7db: V733 = M[0x40]
0x7dc: V734 = 0x1
0x7de: V735 = 0xa0
0x7e0: V736 = 0x2
0x7e2: V737 = EXP 0x2 0xa0
0x7e3: V738 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7e6: V739 = AND 0xffffffffffffffffffffffffffffffffffffffff V180
0x7e8: M[V733] = V739
0x7ec: V740 = AND 0xffffffffffffffffffffffffffffffffffffffff V731
0x7ed: V741 = 0x20
0x7f0: V742 = ADD V733 0x20
0x7f1: M[V742] = V740
0x7f2: V743 = 0x40
0x7f6: V744 = ADD V733 0x40
0x7fa: M[V744] = V182
0x7fb: V745 = 0x60
0x7fd: V746 = ADD 0x60 V733
0x7ff: V747 = M[0x40]
0x802: V748 = SUB V746 V747
0x804: LOG V747 V748 0x9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb
---
Entry stack: [V12, 0x78, V180, V182, V180]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x78, V180, V182, V180]

================================

Block 0x805
[0x805:0x805]
---
Predecessors: [0x66b, 0x7a7]
Successors: [0x806]
---
0x805 JUMPDEST
---
0x805: JUMPDEST 
---
Entry stack: [V12, 0x78, V180, V182, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x78, V180, V182, S0]

================================

Block 0x806
[0x806:0x80a]
---
Predecessors: [0x805]
Successors: [0x78]
---
0x806 JUMPDEST
0x807 POP
0x808 POP
0x809 POP
0x80a JUMP
---
0x806: JUMPDEST 
0x80a: JUMP 0x78
---
Entry stack: [V12, 0x78, V180, V182, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12]

================================

Block 0x80b
[0x80b:0x812]
---
Predecessors: [0x23f]
Successors: [0x9e8]
---
0x80b JUMPDEST
0x80c PUSH2 0x813
0x80f PUSH2 0x9e8
0x812 JUMP
---
0x80b: JUMPDEST 
0x80c: V749 = 0x813
0x80f: V750 = 0x9e8
0x812: JUMP 0x9e8
---
Entry stack: [V12, 0x10b, V196, V199, V210]
Stack pops: 0
Stack additions: [0x813]
Exit stack: [V12, 0x10b, V196, V199, V210, 0x813]

================================

Block 0x813
[0x813:0x81c]
---
Predecessors: [0x9e8]
Successors: [0x9e8]
---
0x813 JUMPDEST
0x814 PUSH1 0x0
0x816 PUSH2 0x81d
0x819 PUSH2 0x9e8
0x81c JUMP
---
0x813: JUMPDEST 
0x814: V751 = 0x0
0x816: V752 = 0x81d
0x819: V753 = 0x9e8
0x81c: JUMP 0x9e8
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, V935]
Stack pops: 0
Stack additions: [0x0, 0x81d]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, V935, 0x0, 0x81d]

================================

Block 0x81d
[0x81d:0x82a]
---
Predecessors: [0x9e8]
Successors: [0x82b, 0x82f]
---
0x81d JUMPDEST
0x81e PUSH1 0x0
0x820 DUP1
0x821 PUSH1 0x0
0x823 DUP1
0x824 DUP8
0x825 MLOAD
0x826 GT
0x827 PUSH2 0x82f
0x82a JUMPI
---
0x81d: JUMPDEST 
0x81e: V754 = 0x0
0x821: V755 = 0x0
0x825: V756 = M[S3]
0x826: V757 = GT V756 0x0
0x827: V758 = 0x82f
0x82a: JUMPI 0x82f V757
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, V935]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x0, 0x0, 0x0]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, V935, 0x0, 0x0, 0x0]

================================

Block 0x82b
[0x82b:0x82e]
---
Predecessors: [0x81d]
Successors: []
---
0x82b PUSH1 0x0
0x82d DUP1
0x82e REVERT
---
0x82b: V759 = 0x0
0x82e: REVERT 0x0 0x0
---
Entry stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, V935, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, V935, 0x0, 0x0, 0x0]

================================

Block 0x82f
[0x82f:0x841]
---
Predecessors: [0x81d]
Successors: [0x842, 0x844]
---
0x82f JUMPDEST
0x830 DUP9
0x831 SWAP5
0x832 POP
0x833 DUP7
0x834 MLOAD
0x835 PUSH1 0x2
0x837 MUL
0x838 PUSH1 0x40
0x83a MLOAD
0x83b DUP1
0x83c MSIZE
0x83d LT
0x83e PUSH2 0x844
0x841 JUMPI
---
0x82f: JUMPDEST 
0x834: V760 = M[S6]
0x835: V761 = 0x2
0x837: V762 = MUL 0x2 V760
0x838: V763 = 0x40
0x83a: V764 = M[0x40]
0x83c: V765 = MSIZE
0x83d: V766 = LT V765 V764
0x83e: V767 = 0x844
0x841: JUMPI 0x844 V766
---
Entry stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, V935, 0x0, 0x0, 0x0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S8, S3, S2, S1, S0, V762, V764]
Exit stack: [V12, S11, S10, S9, S8, S7, S6, S5, S8, V935, 0x0, 0x0, 0x0, V762, V764]

================================

Block 0x842
[0x842:0x843]
---
Predecessors: [0x82f]
Successors: [0x844]
---
0x842 POP
0x843 MSIZE
---
0x843: V768 = MSIZE
---
Entry stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, V935, 0x0, 0x0, 0x0, V762, V764]
Stack pops: 1
Stack additions: [V768]
Exit stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, V935, 0x0, 0x0, 0x0, V762, V768]

================================

Block 0x844
[0x844:0x854]
---
Predecessors: [0x82f, 0x842]
Successors: [0x855]
---
0x844 JUMPDEST
0x845 SWAP1
0x846 DUP1
0x847 DUP3
0x848 MSTORE
0x849 DUP1
0x84a PUSH1 0x20
0x84c MUL
0x84d PUSH1 0x20
0x84f ADD
0x850 DUP3
0x851 ADD
0x852 PUSH1 0x40
0x854 MSTORE
---
0x844: JUMPDEST 
0x848: M[S0] = V762
0x84a: V769 = 0x20
0x84c: V770 = MUL 0x20 V762
0x84d: V771 = 0x20
0x84f: V772 = ADD 0x20 V770
0x851: V773 = ADD S0 V772
0x852: V774 = 0x40
0x854: M[0x40] = V773
---
Entry stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, V935, 0x0, 0x0, 0x0, V762, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, V935, 0x0, 0x0, 0x0, S0, V762]

================================

Block 0x855
[0x855:0x860]
---
Predecessors: [0x844]
Successors: [0x861]
---
0x855 JUMPDEST
0x856 POP
0x857 SWAP4
0x858 POP
0x859 PUSH1 0x0
0x85b SWAP3
0x85c POP
0x85d PUSH1 0x0
0x85f SWAP2
0x860 POP
---
0x855: JUMPDEST 
0x859: V775 = 0x0
0x85d: V776 = 0x0
---
Entry stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, V935, 0x0, 0x0, 0x0, S1, V762]
Stack pops: 6
Stack additions: [S1, 0x0, 0x0, S2]
Exit stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S1, 0x0, 0x0, 0x0]

================================

Block 0x861
[0x861:0x86a]
---
Predecessors: [0x855, 0x9be]
Successors: [0x86b, 0x9c9]
---
0x861 JUMPDEST
0x862 DUP7
0x863 MLOAD
0x864 DUP3
0x865 LT
0x866 ISZERO
0x867 PUSH2 0x9c9
0x86a JUMPI
---
0x861: JUMPDEST 
0x863: V777 = M[S6]
0x865: V778 = LT S1 V777
0x866: V779 = ISZERO V778
0x867: V780 = 0x9c9
0x86a: JUMPI 0x9c9 V779
---
Entry stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x86b
[0x86b:0x883]
---
Predecessors: [0x861]
Successors: [0x884, 0x885]
---
0x86b DUP5
0x86c PUSH1 0x1
0x86e PUSH1 0xa0
0x870 PUSH1 0x2
0x872 EXP
0x873 SUB
0x874 AND
0x875 PUSH4 0xf7888aec
0x87a DUP9
0x87b DUP5
0x87c DUP2
0x87d MLOAD
0x87e DUP2
0x87f LT
0x880 PUSH2 0x885
0x883 JUMPI
---
0x86c: V781 = 0x1
0x86e: V782 = 0xa0
0x870: V783 = 0x2
0x872: V784 = EXP 0x2 0xa0
0x873: V785 = SUB 0x10000000000000000000000000000000000000000 0x1
0x874: V786 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x875: V787 = 0xf7888aec
0x87d: V788 = M[S6]
0x87f: V789 = LT S1 V788
0x880: V790 = 0x885
0x883: JUMPI 0x885 V789
---
Entry stack: [V12, 0x10b, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, V786, 0xf7888aec, S6, S1]
Exit stack: [V12, 0x10b, S8, S7, S6, S5, S4, S3, S2, S1, S0, V786, 0xf7888aec, S6, S1]

================================

Block 0x884
[0x884:0x884]
---
Predecessors: [0x86b]
Successors: []
---
0x884 INVALID
---
0x884: INVALID 
---
Entry stack: [V12, 0x10b, S12, S11, S10, S9, S8, S7, S6, S5, S4, V786, 0xf7888aec, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10b, S12, S11, S10, S9, S8, S7, S6, S5, S4, V786, 0xf7888aec, S1, S0]

================================

Block 0x885
[0x885:0x8d9]
---
Predecessors: [0x86b]
Successors: [0x8da, 0x8de]
---
0x885 JUMPDEST
0x886 SWAP1
0x887 PUSH1 0x20
0x889 ADD
0x88a SWAP1
0x88b PUSH1 0x20
0x88d MUL
0x88e ADD
0x88f MLOAD
0x890 DUP11
0x891 PUSH1 0x0
0x893 PUSH1 0x40
0x895 MLOAD
0x896 PUSH1 0x20
0x898 ADD
0x899 MSTORE
0x89a PUSH1 0x40
0x89c MLOAD
0x89d PUSH1 0xe0
0x89f PUSH1 0x2
0x8a1 EXP
0x8a2 PUSH4 0xffffffff
0x8a7 DUP6
0x8a8 AND
0x8a9 MUL
0x8aa DUP2
0x8ab MSTORE
0x8ac PUSH1 0x1
0x8ae PUSH1 0xa0
0x8b0 PUSH1 0x2
0x8b2 EXP
0x8b3 SUB
0x8b4 SWAP3
0x8b5 DUP4
0x8b6 AND
0x8b7 PUSH1 0x4
0x8b9 DUP3
0x8ba ADD
0x8bb MSTORE
0x8bc SWAP2
0x8bd AND
0x8be PUSH1 0x24
0x8c0 DUP3
0x8c1 ADD
0x8c2 MSTORE
0x8c3 PUSH1 0x44
0x8c5 ADD
0x8c6 PUSH1 0x20
0x8c8 PUSH1 0x40
0x8ca MLOAD
0x8cb DUP1
0x8cc DUP4
0x8cd SUB
0x8ce DUP2
0x8cf PUSH1 0x0
0x8d1 DUP8
0x8d2 DUP1
0x8d3 EXTCODESIZE
0x8d4 ISZERO
0x8d5 ISZERO
0x8d6 PUSH2 0x8de
0x8d9 JUMPI
---
0x885: JUMPDEST 
0x887: V791 = 0x20
0x889: V792 = ADD 0x20 S1
0x88b: V793 = 0x20
0x88d: V794 = MUL 0x20 S0
0x88e: V795 = ADD V794 V792
0x88f: V796 = M[V795]
0x891: V797 = 0x0
0x893: V798 = 0x40
0x895: V799 = M[0x40]
0x896: V800 = 0x20
0x898: V801 = ADD 0x20 V799
0x899: M[V801] = 0x0
0x89a: V802 = 0x40
0x89c: V803 = M[0x40]
0x89d: V804 = 0xe0
0x89f: V805 = 0x2
0x8a1: V806 = EXP 0x2 0xe0
0x8a2: V807 = 0xffffffff
0x8a8: V808 = AND 0xf7888aec 0xffffffff
0x8a9: V809 = MUL 0xf7888aec 0x100000000000000000000000000000000000000000000000000000000
0x8ab: M[V803] = 0xf7888aec00000000000000000000000000000000000000000000000000000000
0x8ac: V810 = 0x1
0x8ae: V811 = 0xa0
0x8b0: V812 = 0x2
0x8b2: V813 = EXP 0x2 0xa0
0x8b3: V814 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8b6: V815 = AND 0xffffffffffffffffffffffffffffffffffffffff V796
0x8b7: V816 = 0x4
0x8ba: V817 = ADD V803 0x4
0x8bb: M[V817] = V815
0x8bd: V818 = AND 0xffffffffffffffffffffffffffffffffffffffff S11
0x8be: V819 = 0x24
0x8c1: V820 = ADD V803 0x24
0x8c2: M[V820] = V818
0x8c3: V821 = 0x44
0x8c5: V822 = ADD 0x44 V803
0x8c6: V823 = 0x20
0x8c8: V824 = 0x40
0x8ca: V825 = M[0x40]
0x8cd: V826 = SUB V822 V825
0x8cf: V827 = 0x0
0x8d3: V828 = EXTCODESIZE V786
0x8d4: V829 = ISZERO V828
0x8d5: V830 = ISZERO V829
0x8d6: V831 = 0x8de
0x8d9: JUMPI 0x8de V830
---
Entry stack: [V12, 0x10b, S12, S11, S10, S9, S8, S7, S6, S5, S4, V786, 0xf7888aec, S1, S0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V822, 0x20, V825, V826, V825, 0x0, S3]
Exit stack: [V12, 0x10b, S12, S11, S10, S9, S8, S7, S6, S5, S4, V786, 0xf7888aec, V822, 0x20, V825, V826, V825, 0x0, V786]

================================

Block 0x8da
[0x8da:0x8dd]
---
Predecessors: [0x885]
Successors: []
---
0x8da PUSH1 0x0
0x8dc DUP1
0x8dd REVERT
---
0x8da: V832 = 0x0
0x8dd: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10b, S17, S16, S15, S14, S13, S12, S11, S10, S9, V786, 0xf7888aec, V822, 0x20, V825, V826, V825, 0x0, V786]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10b, S17, S16, S15, S14, S13, S12, S11, S10, S9, V786, 0xf7888aec, V822, 0x20, V825, V826, V825, 0x0, V786]

================================

Block 0x8de
[0x8de:0x8ea]
---
Predecessors: [0x885]
Successors: [0x8eb, 0x8ef]
---
0x8de JUMPDEST
0x8df PUSH2 0x2c6
0x8e2 GAS
0x8e3 SUB
0x8e4 CALL
0x8e5 ISZERO
0x8e6 ISZERO
0x8e7 PUSH2 0x8ef
0x8ea JUMPI
---
0x8de: JUMPDEST 
0x8df: V833 = 0x2c6
0x8e2: V834 = GAS
0x8e3: V835 = SUB V834 0x2c6
0x8e4: V836 = CALL V835 V786 0x0 V825 V826 V825 0x20
0x8e5: V837 = ISZERO V836
0x8e6: V838 = ISZERO V837
0x8e7: V839 = 0x8ef
0x8ea: JUMPI 0x8ef V838
---
Entry stack: [V12, 0x10b, S17, S16, S15, S14, S13, S12, S11, S10, S9, V786, 0xf7888aec, V822, 0x20, V825, V826, V825, 0x0, V786]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x10b, S17, S16, S15, S14, S13, S12, S11, S10, S9, V786, 0xf7888aec, V822]

================================

Block 0x8eb
[0x8eb:0x8ee]
---
Predecessors: [0x8de]
Successors: []
---
0x8eb PUSH1 0x0
0x8ed DUP1
0x8ee REVERT
---
0x8eb: V840 = 0x0
0x8ee: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10b, S11, S10, S9, S8, S7, S6, S5, S4, S3, V786, 0xf7888aec, V822]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10b, S11, S10, S9, S8, S7, S6, S5, S4, S3, V786, 0xf7888aec, V822]

================================

Block 0x8ef
[0x8ef:0x903]
---
Predecessors: [0x8de]
Successors: [0x904, 0x905]
---
0x8ef JUMPDEST
0x8f0 POP
0x8f1 POP
0x8f2 POP
0x8f3 PUSH1 0x40
0x8f5 MLOAD
0x8f6 DUP1
0x8f7 MLOAD
0x8f8 SWAP1
0x8f9 POP
0x8fa DUP5
0x8fb DUP5
0x8fc DUP2
0x8fd MLOAD
0x8fe DUP2
0x8ff LT
0x900 PUSH2 0x905
0x903 JUMPI
---
0x8ef: JUMPDEST 
0x8f3: V841 = 0x40
0x8f5: V842 = M[0x40]
0x8f7: V843 = M[V842]
0x8fd: V844 = M[S6]
0x8ff: V845 = LT S5 V844
0x900: V846 = 0x905
0x903: JUMPI 0x905 V845
---
Entry stack: [V12, 0x10b, S11, S10, S9, S8, S7, S6, S5, S4, S3, V786, 0xf7888aec, V822]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, V843, S6, S5]
Exit stack: [V12, 0x10b, S11, S10, S9, S8, S7, S6, S5, S4, S3, V843, S6, S5]

================================

Block 0x904
[0x904:0x904]
---
Predecessors: [0x8ef]
Successors: []
---
0x904 INVALID
---
0x904: INVALID 
---
Entry stack: [V12, 0x10b, S11, S10, S9, S8, S7, S6, S5, S4, S3, V843, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10b, S11, S10, S9, S8, S7, S6, S5, S4, S3, V843, S1, S0]

================================

Block 0x905
[0x905:0x920]
---
Predecessors: [0x8ef]
Successors: [0x921, 0x922]
---
0x905 JUMPDEST
0x906 PUSH1 0x20
0x908 SWAP1
0x909 DUP2
0x90a MUL
0x90b SWAP1
0x90c SWAP2
0x90d ADD
0x90e ADD
0x90f MSTORE
0x910 PUSH1 0x1
0x912 SWAP3
0x913 SWAP1
0x914 SWAP3
0x915 ADD
0x916 SWAP2
0x917 DUP7
0x918 DUP3
0x919 DUP2
0x91a MLOAD
0x91b DUP2
0x91c LT
0x91d PUSH2 0x922
0x920 JUMPI
---
0x905: JUMPDEST 
0x906: V847 = 0x20
0x90a: V848 = MUL 0x20 S0
0x90d: V849 = ADD S1 V848
0x90e: V850 = ADD V849 0x20
0x90f: M[V850] = V843
0x910: V851 = 0x1
0x915: V852 = ADD 0x1 S5
0x91a: V853 = M[S9]
0x91c: V854 = LT S4 V853
0x91d: V855 = 0x922
0x920: JUMPI 0x922 V854
---
Entry stack: [V12, 0x10b, S11, S10, S9, S8, S7, S6, S5, S4, S3, V843, S1, S0]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, V852, S4, S3, S9, S4]
Exit stack: [V12, 0x10b, S11, S10, S9, S8, S7, S6, V852, S4, S3, S9, S4]

================================

Block 0x921
[0x921:0x921]
---
Predecessors: [0x905]
Successors: []
---
0x921 INVALID
---
0x921: INVALID 
---
Entry stack: [V12, 0x10b, S10, S9, S8, S7, S6, S5, V852, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10b, S10, S9, S8, S7, S6, S5, V852, S3, S2, S1, S0]

================================

Block 0x922
[0x922:0x980]
---
Predecessors: [0x905]
Successors: [0x981, 0x985]
---
0x922 JUMPDEST
0x923 SWAP1
0x924 PUSH1 0x20
0x926 ADD
0x927 SWAP1
0x928 PUSH1 0x20
0x92a MUL
0x92b ADD
0x92c MLOAD
0x92d SWAP1
0x92e POP
0x92f DUP1
0x930 PUSH1 0x1
0x932 PUSH1 0xa0
0x934 PUSH1 0x2
0x936 EXP
0x937 SUB
0x938 AND
0x939 PUSH4 0x70a08231
0x93e DUP10
0x93f PUSH1 0x0
0x941 PUSH1 0x40
0x943 MLOAD
0x944 PUSH1 0x20
0x946 ADD
0x947 MSTORE
0x948 PUSH1 0x40
0x94a MLOAD
0x94b PUSH1 0xe0
0x94d PUSH1 0x2
0x94f EXP
0x950 PUSH4 0xffffffff
0x955 DUP5
0x956 AND
0x957 MUL
0x958 DUP2
0x959 MSTORE
0x95a PUSH1 0x1
0x95c PUSH1 0xa0
0x95e PUSH1 0x2
0x960 EXP
0x961 SUB
0x962 SWAP1
0x963 SWAP2
0x964 AND
0x965 PUSH1 0x4
0x967 DUP3
0x968 ADD
0x969 MSTORE
0x96a PUSH1 0x24
0x96c ADD
0x96d PUSH1 0x20
0x96f PUSH1 0x40
0x971 MLOAD
0x972 DUP1
0x973 DUP4
0x974 SUB
0x975 DUP2
0x976 PUSH1 0x0
0x978 DUP8
0x979 DUP1
0x97a EXTCODESIZE
0x97b ISZERO
0x97c ISZERO
0x97d PUSH2 0x985
0x980 JUMPI
---
0x922: JUMPDEST 
0x924: V856 = 0x20
0x926: V857 = ADD 0x20 S1
0x928: V858 = 0x20
0x92a: V859 = MUL 0x20 S0
0x92b: V860 = ADD V859 V857
0x92c: V861 = M[V860]
0x930: V862 = 0x1
0x932: V863 = 0xa0
0x934: V864 = 0x2
0x936: V865 = EXP 0x2 0xa0
0x937: V866 = SUB 0x10000000000000000000000000000000000000000 0x1
0x938: V867 = AND 0xffffffffffffffffffffffffffffffffffffffff V861
0x939: V868 = 0x70a08231
0x93f: V869 = 0x0
0x941: V870 = 0x40
0x943: V871 = M[0x40]
0x944: V872 = 0x20
0x946: V873 = ADD 0x20 V871
0x947: M[V873] = 0x0
0x948: V874 = 0x40
0x94a: V875 = M[0x40]
0x94b: V876 = 0xe0
0x94d: V877 = 0x2
0x94f: V878 = EXP 0x2 0xe0
0x950: V879 = 0xffffffff
0x956: V880 = AND 0x70a08231 0xffffffff
0x957: V881 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x959: M[V875] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x95a: V882 = 0x1
0x95c: V883 = 0xa0
0x95e: V884 = 0x2
0x960: V885 = EXP 0x2 0xa0
0x961: V886 = SUB 0x10000000000000000000000000000000000000000 0x1
0x964: V887 = AND S9 0xffffffffffffffffffffffffffffffffffffffff
0x965: V888 = 0x4
0x968: V889 = ADD V875 0x4
0x969: M[V889] = V887
0x96a: V890 = 0x24
0x96c: V891 = ADD 0x24 V875
0x96d: V892 = 0x20
0x96f: V893 = 0x40
0x971: V894 = M[0x40]
0x974: V895 = SUB V891 V894
0x976: V896 = 0x0
0x97a: V897 = EXTCODESIZE V867
0x97b: V898 = ISZERO V897
0x97c: V899 = ISZERO V898
0x97d: V900 = 0x985
0x980: JUMPI 0x985 V899
---
Entry stack: [V12, 0x10b, S10, S9, S8, S7, S6, S5, V852, S3, S2, S1, S0]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, V861, V867, 0x70a08231, V891, 0x20, V894, V895, V894, 0x0, V867]
Exit stack: [V12, 0x10b, S10, S9, S8, S7, S6, S5, V852, S3, V861, V867, 0x70a08231, V891, 0x20, V894, V895, V894, 0x0, V867]

================================

Block 0x981
[0x981:0x984]
---
Predecessors: [0x922]
Successors: []
---
0x981 PUSH1 0x0
0x983 DUP1
0x984 REVERT
---
0x981: V901 = 0x0
0x984: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10b, S17, S16, S15, S14, S13, S12, V852, S10, V861, V867, 0x70a08231, V891, 0x20, V894, V895, V894, 0x0, V867]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10b, S17, S16, S15, S14, S13, S12, V852, S10, V861, V867, 0x70a08231, V891, 0x20, V894, V895, V894, 0x0, V867]

================================

Block 0x985
[0x985:0x991]
---
Predecessors: [0x922]
Successors: [0x992, 0x996]
---
0x985 JUMPDEST
0x986 PUSH2 0x2c6
0x989 GAS
0x98a SUB
0x98b CALL
0x98c ISZERO
0x98d ISZERO
0x98e PUSH2 0x996
0x991 JUMPI
---
0x985: JUMPDEST 
0x986: V902 = 0x2c6
0x989: V903 = GAS
0x98a: V904 = SUB V903 0x2c6
0x98b: V905 = CALL V904 V867 0x0 V894 V895 V894 0x20
0x98c: V906 = ISZERO V905
0x98d: V907 = ISZERO V906
0x98e: V908 = 0x996
0x991: JUMPI 0x996 V907
---
Entry stack: [V12, 0x10b, S17, S16, S15, S14, S13, S12, V852, S10, V861, V867, 0x70a08231, V891, 0x20, V894, V895, V894, 0x0, V867]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x10b, S17, S16, S15, S14, S13, S12, V852, S10, V861, V867, 0x70a08231, V891]

================================

Block 0x992
[0x992:0x995]
---
Predecessors: [0x985]
Successors: []
---
0x992 PUSH1 0x0
0x994 DUP1
0x995 REVERT
---
0x992: V909 = 0x0
0x995: REVERT 0x0 0x0
---
Entry stack: [V12, 0x10b, S11, S10, S9, S8, S7, S6, V852, S4, V861, V867, 0x70a08231, V891]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10b, S11, S10, S9, S8, S7, S6, V852, S4, V861, V867, 0x70a08231, V891]

================================

Block 0x996
[0x996:0x9aa]
---
Predecessors: [0x985]
Successors: [0x9ab, 0x9ac]
---
0x996 JUMPDEST
0x997 POP
0x998 POP
0x999 POP
0x99a PUSH1 0x40
0x99c MLOAD
0x99d DUP1
0x99e MLOAD
0x99f SWAP1
0x9a0 POP
0x9a1 DUP5
0x9a2 DUP5
0x9a3 DUP2
0x9a4 MLOAD
0x9a5 DUP2
0x9a6 LT
0x9a7 PUSH2 0x9ac
0x9aa JUMPI
---
0x996: JUMPDEST 
0x99a: V910 = 0x40
0x99c: V911 = M[0x40]
0x99e: V912 = M[V911]
0x9a4: V913 = M[S6]
0x9a6: V914 = LT V852 V913
0x9a7: V915 = 0x9ac
0x9aa: JUMPI 0x9ac V914
---
Entry stack: [V12, 0x10b, S11, S10, S9, S8, S7, S6, V852, S4, V861, V867, 0x70a08231, V891]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, V912, S6, S5]
Exit stack: [V12, 0x10b, S11, S10, S9, S8, S7, S6, V852, S4, V861, V912, S6, V852]

================================

Block 0x9ab
[0x9ab:0x9ab]
---
Predecessors: [0x996]
Successors: []
---
0x9ab INVALID
---
0x9ab: INVALID 
---
Entry stack: [V12, 0x10b, S11, S10, S9, S8, S7, S6, V852, S4, V861, V912, S1, V852]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10b, S11, S10, S9, S8, S7, S6, V852, S4, V861, V912, S1, V852]

================================

Block 0x9ac
[0x9ac:0x9bd]
---
Predecessors: [0x996]
Successors: [0x9be]
---
0x9ac JUMPDEST
0x9ad PUSH1 0x20
0x9af SWAP1
0x9b0 DUP2
0x9b1 MUL
0x9b2 SWAP1
0x9b3 SWAP2
0x9b4 ADD
0x9b5 ADD
0x9b6 MSTORE
0x9b7 PUSH1 0x1
0x9b9 SWAP3
0x9ba SWAP1
0x9bb SWAP3
0x9bc ADD
0x9bd SWAP2
---
0x9ac: JUMPDEST 
0x9ad: V916 = 0x20
0x9b1: V917 = MUL 0x20 V852
0x9b4: V918 = ADD S1 V917
0x9b5: V919 = ADD V918 0x20
0x9b6: M[V919] = V912
0x9b7: V920 = 0x1
0x9bc: V921 = ADD 0x1 V852
---
Entry stack: [V12, 0x10b, S11, S10, S9, S8, S7, S6, V852, S4, V861, V912, S1, V852]
Stack pops: 6
Stack additions: [V921, S4, S3]
Exit stack: [V12, 0x10b, S11, S10, S9, S8, S7, S6, V921, S4, V861]

================================

Block 0x9be
[0x9be:0x9c8]
---
Predecessors: [0x9ac]
Successors: [0x861]
---
0x9be JUMPDEST
0x9bf PUSH1 0x1
0x9c1 SWAP1
0x9c2 SWAP2
0x9c3 ADD
0x9c4 SWAP1
0x9c5 PUSH2 0x861
0x9c8 JUMP
---
0x9be: JUMPDEST 
0x9bf: V922 = 0x1
0x9c3: V923 = ADD S1 0x1
0x9c5: V924 = 0x861
0x9c8: JUMP 0x861
---
Entry stack: [V12, 0x10b, S8, S7, S6, S5, S4, S3, V921, S1, V861]
Stack pops: 2
Stack additions: [V923, S0]
Exit stack: [V12, 0x10b, S8, S7, S6, S5, S4, S3, V921, V923, V861]

================================

Block 0x9c9
[0x9c9:0x9cc]
---
Predecessors: [0x861]
Successors: [0x9cd]
---
0x9c9 JUMPDEST
0x9ca DUP4
0x9cb SWAP6
0x9cc POP
---
0x9c9: JUMPDEST 
---
Entry stack: [V12, 0x10b, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S3, S4, S3, S2, S1, S0]
Exit stack: [V12, 0x10b, S8, S7, S6, S3, S4, S3, S2, S1, S0]

================================

Block 0x9cd
[0x9cd:0x9d8]
---
Predecessors: [0x9c9]
Successors: [0x10b]
---
0x9cd JUMPDEST
0x9ce POP
0x9cf POP
0x9d0 POP
0x9d1 POP
0x9d2 POP
0x9d3 SWAP4
0x9d4 SWAP3
0x9d5 POP
0x9d6 POP
0x9d7 POP
0x9d8 JUMP
---
0x9cd: JUMPDEST 
0x9d8: JUMP 0x10b
---
Entry stack: [V12, 0x10b, V196, V199, V210, S5, V196, S3, S2, S1, S0]
Stack pops: 10
Stack additions: [S5]
Exit stack: [V12, S5]

================================

Block 0x9d9
[0x9d9:0x9e7]
---
Predecessors: [0x2fa]
Successors: [0x302]
---
0x9d9 JUMPDEST
0x9da PUSH1 0x0
0x9dc SLOAD
0x9dd PUSH1 0x1
0x9df PUSH1 0xa0
0x9e1 PUSH1 0x2
0x9e3 EXP
0x9e4 SUB
0x9e5 AND
0x9e6 DUP2
0x9e7 JUMP
---
0x9d9: JUMPDEST 
0x9da: V925 = 0x0
0x9dc: V926 = S[0x0]
0x9dd: V927 = 0x1
0x9df: V928 = 0xa0
0x9e1: V929 = 0x2
0x9e3: V930 = EXP 0x2 0xa0
0x9e4: V931 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9e5: V932 = AND 0xffffffffffffffffffffffffffffffffffffffff V926
0x9e7: JUMP 0x302
---
Entry stack: [V12, 0x302]
Stack pops: 1
Stack additions: [S0, V932]
Exit stack: [V12, 0x302, V932]

================================

Block 0x9e8
[0x9e8:0x9f9]
---
Predecessors: [0x3fe, 0x406, 0x512, 0x51a, 0x80b, 0x813]
Successors: [0x406, 0x410, 0x51a, 0x522, 0x813, 0x81d]
---
0x9e8 JUMPDEST
0x9e9 PUSH1 0x20
0x9eb PUSH1 0x40
0x9ed MLOAD
0x9ee SWAP1
0x9ef DUP2
0x9f0 ADD
0x9f1 PUSH1 0x40
0x9f3 MSTORE
0x9f4 PUSH1 0x0
0x9f6 DUP2
0x9f7 MSTORE
0x9f8 SWAP1
0x9f9 JUMP
---
0x9e8: JUMPDEST 
0x9e9: V933 = 0x20
0x9eb: V934 = 0x40
0x9ed: V935 = M[0x40]
0x9f0: V936 = ADD V935 0x20
0x9f1: V937 = 0x40
0x9f3: M[0x40] = V936
0x9f4: V938 = 0x0
0x9f7: M[V935] = 0x0
0x9f9: JUMP {0x406, 0x410, 0x51a, 0x522, 0x813, 0x81d}
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x406, 0x410, 0x51a, 0x522, 0x813, 0x81d}]
Stack pops: 1
Stack additions: [V935]
Exit stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V935]

================================

Block 0x9fa
[0x9fa:0xa29]
---
Predecessors: []
Successors: []
---
0x9fa STOP
0x9fb LOG1
0x9fc PUSH6 0x627a7a723058
0xa03 SHA3
0xa04 MISSING 0xe9
0xa05 MISSING 0xed
0xa06 SWAP1
0xa07 SWAP2
0xa08 MISSING 0x49
0xa09 MISSING 0xae
0xa0a STOP
0xa0b MISSING 0xc
0xa0c DUP8
0xa0d PUSH28 0xa27c9ba93a52ab3cf2912c27932ea219cb0936d344fd0029
---
0x9fa: STOP 
0x9fb: LOG S0 S1 S2
0x9fc: V939 = 0x627a7a723058
0xa03: V940 = SHA3 0x627a7a723058 S3
0xa04: MISSING 0xe9
0xa05: MISSING 0xed
0xa08: MISSING 0x49
0xa09: MISSING 0xae
0xa0a: STOP 
0xa0b: MISSING 0xc
0xa0d: V941 = 0xa27c9ba93a52ab3cf2912c27932ea219cb0936d344fd0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V940, S2, S0, S1, 0xa27c9ba93a52ab3cf2912c27932ea219cb0936d344fd0029, S7, S0, S1, S2, S3, S4, S5, S6, S7]
Exit stack: []

================================

Function 0:
Public function signature: 0x2b68b9c6
Entry block: 0x7a
Exit block: 0x78
Body: 0x78, 0x7a, 0x81, 0x85, 0x31e, 0x336, 0x343, 0x344

Function 1:
Public function signature: 0x3ccfd60b
Entry block: 0x8f
Exit block: 0x78
Body: 0x78, 0x8f, 0x96, 0x9a, 0x346, 0x35f, 0x398, 0x39c, 0x3fa, 0x3fb

Function 2:
Public function signature: 0x6fb7fc8b
Entry block: 0xa4
Exit block: 0x9ab
Body: 0xa4, 0xab, 0xaf, 0x10b, 0x132, 0x13b, 0x143, 0x14b, 0x3fe, 0x406, 0x410, 0x41b, 0x41f, 0x432, 0x434, 0x445, 0x44d, 0x457, 0x470, 0x471, 0x4c6, 0x4ca, 0x4d7, 0x4db, 0x4f0, 0x4f1, 0x4fc, 0x504, 0x508, 0x51a, 0x522, 0x52f, 0x533, 0x543, 0x545, 0x556, 0x55e, 0x568, 0x572, 0x573, 0x58c, 0x596, 0x597, 0x5f6, 0x5fa, 0x607, 0x60b, 0x620, 0x621, 0x630, 0x646, 0x647, 0x652, 0x653, 0x65e, 0x662, 0x813, 0x81d, 0x82b, 0x82f, 0x842, 0x844, 0x855, 0x861, 0x86b, 0x884, 0x885, 0x8da, 0x8de, 0x8eb, 0x8ef, 0x904, 0x905, 0x921, 0x922, 0x981, 0x985, 0x992, 0x996, 0x9ab, 0x9ac, 0x9be, 0x9c9, 0x9cd, 0x9e8

Function 3:
Public function signature: 0x77a7d968
Entry block: 0x15f
Exit block: 0x9ab
Body: 0x10b, 0x132, 0x13b, 0x143, 0x14b, 0x15f, 0x166, 0x16a, 0x406, 0x410, 0x41b, 0x41f, 0x432, 0x434, 0x445, 0x44d, 0x457, 0x470, 0x471, 0x4c6, 0x4ca, 0x4d7, 0x4db, 0x4f0, 0x4f1, 0x4fc, 0x504, 0x508, 0x512, 0x51a, 0x522, 0x52f, 0x533, 0x543, 0x545, 0x556, 0x55e, 0x568, 0x572, 0x573, 0x58c, 0x596, 0x597, 0x5f6, 0x5fa, 0x607, 0x60b, 0x620, 0x621, 0x630, 0x646, 0x647, 0x652, 0x653, 0x65e, 0x662, 0x813, 0x81d, 0x82b, 0x82f, 0x842, 0x844, 0x855, 0x861, 0x86b, 0x884, 0x885, 0x8da, 0x8de, 0x8eb, 0x8ef, 0x904, 0x905, 0x921, 0x922, 0x981, 0x985, 0x992, 0x996, 0x9ab, 0x9ac, 0x9be, 0x9c9, 0x9cd, 0x9e8

Function 4:
Public function signature: 0x9e281a98
Entry block: 0x210
Exit block: 0x7a3
Body: 0x78, 0x210, 0x217, 0x21b, 0x66b, 0x684, 0x694, 0x695, 0x6f0, 0x6f4, 0x701, 0x705, 0x77d, 0x781, 0x78e, 0x792, 0x7a3, 0x7a7, 0x805, 0x806

Function 5:
Public function signature: 0xcac7fc71
Entry block: 0x234
Exit block: 0x9ab
Body: 0x10b, 0x132, 0x13b, 0x143, 0x14b, 0x234, 0x23b, 0x23f, 0x406, 0x410, 0x41b, 0x41f, 0x432, 0x434, 0x445, 0x44d, 0x457, 0x470, 0x471, 0x4c6, 0x4ca, 0x4d7, 0x4db, 0x4f0, 0x4f1, 0x4fc, 0x504, 0x508, 0x51a, 0x522, 0x52f, 0x533, 0x543, 0x545, 0x556, 0x55e, 0x568, 0x572, 0x573, 0x58c, 0x596, 0x597, 0x5f6, 0x5fa, 0x607, 0x60b, 0x620, 0x621, 0x630, 0x646, 0x647, 0x652, 0x653, 0x65e, 0x662, 0x80b, 0x813, 0x81d, 0x82b, 0x82f, 0x842, 0x844, 0x855, 0x861, 0x86b, 0x884, 0x885, 0x8da, 0x8de, 0x8eb, 0x8ef, 0x904, 0x905, 0x921, 0x922, 0x981, 0x985, 0x992, 0x996, 0x9ab, 0x9ac, 0x9be, 0x9c9, 0x9cd, 0x9e8

Function 6:
Public function signature: 0xf851a440
Entry block: 0x2ef
Exit block: 0x302
Body: 0x2ef, 0x2f6, 0x2fa, 0x302, 0x9d9

Function 7:
Public fallback function
Entry block: 0x67
Exit block: 0x73
Body: 0x67, 0x6e, 0x72, 0x73

