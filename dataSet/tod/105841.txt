Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x4e]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x8f72f576
0x3c EQ
0x3d PUSH2 0x4e
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x8f72f576
0x3c: V13 = EQ 0x8f72f576 V11
0x3d: V14 = 0x4e
0x40: JUMPI 0x4e V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x66]
---
0x41 DUP1
0x42 PUSH4 0x9d87cb3d
0x47 EQ
0x48 PUSH2 0x66
0x4b JUMPI
---
0x42: V15 = 0x9d87cb3d
0x47: V16 = EQ 0x9d87cb3d V11
0x48: V17 = 0x66
0x4b: JUMPI 0x66 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x4d]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d STOP
---
0x4c: JUMPDEST 
0x4d: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4e
[0x4e:0x63]
---
Predecessors: [0xd]
Successors: [0x7e]
---
0x4e JUMPDEST
0x4f PUSH2 0x64
0x52 PUSH1 0x4
0x54 DUP1
0x55 DUP1
0x56 CALLDATALOAD
0x57 SWAP1
0x58 PUSH1 0x20
0x5a ADD
0x5b SWAP1
0x5c SWAP2
0x5d SWAP1
0x5e POP
0x5f POP
0x60 PUSH2 0x7e
0x63 JUMP
---
0x4e: JUMPDEST 
0x4f: V18 = 0x64
0x52: V19 = 0x4
0x56: V20 = CALLDATALOAD 0x4
0x58: V21 = 0x20
0x5a: V22 = ADD 0x20 0x4
0x60: V23 = 0x7e
0x63: JUMP 0x7e
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x64, V20]
Exit stack: [V11, 0x64, V20]

================================

Block 0x64
[0x64:0x65]
---
Predecessors: [0x137]
Successors: []
---
0x64 JUMPDEST
0x65 STOP
---
0x64: JUMPDEST 
0x65: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x66
[0x66:0x7b]
---
Predecessors: [0x41]
Successors: [0x13a]
---
0x66 JUMPDEST
0x67 PUSH2 0x7c
0x6a PUSH1 0x4
0x6c DUP1
0x6d DUP1
0x6e CALLDATALOAD
0x6f SWAP1
0x70 PUSH1 0x20
0x72 ADD
0x73 SWAP1
0x74 SWAP2
0x75 SWAP1
0x76 POP
0x77 POP
0x78 PUSH2 0x13a
0x7b JUMP
---
0x66: JUMPDEST 
0x67: V24 = 0x7c
0x6a: V25 = 0x4
0x6e: V26 = CALLDATALOAD 0x4
0x70: V27 = 0x20
0x72: V28 = ADD 0x20 0x4
0x78: V29 = 0x13a
0x7b: JUMP 0x13a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x7c, V26]
Exit stack: [V11, 0x7c, V26]

================================

Block 0x7c
[0x7c:0x7d]
---
Predecessors: [0x323]
Successors: []
---
0x7c JUMPDEST
0x7d STOP
---
0x7c: JUMPDEST 
0x7d: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7e
[0x7e:0xd4]
---
Predecessors: [0x4e]
Successors: [0xd5, 0x137]
---
0x7e JUMPDEST
0x7f PUSH1 0x4
0x81 PUSH1 0x0
0x83 SWAP1
0x84 SLOAD
0x85 SWAP1
0x86 PUSH2 0x100
0x89 EXP
0x8a SWAP1
0x8b DIV
0x8c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa1 AND
0xa2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb7 AND
0xb8 CALLER
0xb9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xce AND
0xcf EQ
0xd0 ISZERO
0xd1 PUSH2 0x137
0xd4 JUMPI
---
0x7e: JUMPDEST 
0x7f: V30 = 0x4
0x81: V31 = 0x0
0x84: V32 = S[0x4]
0x86: V33 = 0x100
0x89: V34 = EXP 0x100 0x0
0x8b: V35 = DIV V32 0x1
0x8c: V36 = 0xffffffffffffffffffffffffffffffffffffffff
0xa1: V37 = AND 0xffffffffffffffffffffffffffffffffffffffff V35
0xa2: V38 = 0xffffffffffffffffffffffffffffffffffffffff
0xb7: V39 = AND 0xffffffffffffffffffffffffffffffffffffffff V37
0xb8: V40 = CALLER
0xb9: V41 = 0xffffffffffffffffffffffffffffffffffffffff
0xce: V42 = AND 0xffffffffffffffffffffffffffffffffffffffff V40
0xcf: V43 = EQ V42 V39
0xd0: V44 = ISZERO V43
0xd1: V45 = 0x137
0xd4: JUMPI 0x137 V44
---
Entry stack: [V11, 0x64, V20]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x64, V20]

================================

Block 0xd5
[0xd5:0x131]
---
Predecessors: [0x7e]
Successors: [0x132, 0x136]
---
0xd5 PUSH1 0x4
0xd7 PUSH1 0x0
0xd9 SWAP1
0xda SLOAD
0xdb SWAP1
0xdc PUSH2 0x100
0xdf EXP
0xe0 SWAP1
0xe1 DIV
0xe2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf7 AND
0xf8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10d AND
0x10e PUSH2 0x8fc
0x111 DUP3
0x112 SWAP1
0x113 DUP2
0x114 ISZERO
0x115 MUL
0x116 SWAP1
0x117 PUSH1 0x40
0x119 MLOAD
0x11a PUSH1 0x0
0x11c PUSH1 0x40
0x11e MLOAD
0x11f DUP1
0x120 DUP4
0x121 SUB
0x122 DUP2
0x123 DUP6
0x124 DUP9
0x125 DUP9
0x126 CALL
0x127 SWAP4
0x128 POP
0x129 POP
0x12a POP
0x12b POP
0x12c ISZERO
0x12d ISZERO
0x12e PUSH2 0x136
0x131 JUMPI
---
0xd5: V46 = 0x4
0xd7: V47 = 0x0
0xda: V48 = S[0x4]
0xdc: V49 = 0x100
0xdf: V50 = EXP 0x100 0x0
0xe1: V51 = DIV V48 0x1
0xe2: V52 = 0xffffffffffffffffffffffffffffffffffffffff
0xf7: V53 = AND 0xffffffffffffffffffffffffffffffffffffffff V51
0xf8: V54 = 0xffffffffffffffffffffffffffffffffffffffff
0x10d: V55 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0x10e: V56 = 0x8fc
0x114: V57 = ISZERO V20
0x115: V58 = MUL V57 0x8fc
0x117: V59 = 0x40
0x119: V60 = M[0x40]
0x11a: V61 = 0x0
0x11c: V62 = 0x40
0x11e: V63 = M[0x40]
0x121: V64 = SUB V60 V63
0x126: V65 = CALL V58 V55 V20 V63 V64 V63 0x0
0x12c: V66 = ISZERO V65
0x12d: V67 = ISZERO V66
0x12e: V68 = 0x136
0x131: JUMPI 0x136 V67
---
Entry stack: [V11, 0x64, V20]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x64, V20]

================================

Block 0x132
[0x132:0x135]
---
Predecessors: [0xd5]
Successors: []
---
0x132 PUSH1 0x0
0x134 DUP1
0x135 REVERT
---
0x132: V69 = 0x0
0x135: REVERT 0x0 0x0
---
Entry stack: [V11, 0x64, V20]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x64, V20]

================================

Block 0x136
[0x136:0x136]
---
Predecessors: [0xd5]
Successors: [0x137]
---
0x136 JUMPDEST
---
0x136: JUMPDEST 
---
Entry stack: [V11, 0x64, V20]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x64, V20]

================================

Block 0x137
[0x137:0x139]
---
Predecessors: [0x7e, 0x136]
Successors: [0x64]
---
0x137 JUMPDEST
0x138 POP
0x139 JUMP
---
0x137: JUMPDEST 
0x139: JUMP 0x64
---
Entry stack: [V11, 0x64, V20]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x13a
[0x13a:0x196]
---
Predecessors: [0x66]
Successors: [0x197, 0x19b]
---
0x13a JUMPDEST
0x13b PUSH1 0x0
0x13d DUP1
0x13e SWAP1
0x13f SLOAD
0x140 SWAP1
0x141 PUSH2 0x100
0x144 EXP
0x145 SWAP1
0x146 DIV
0x147 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15c AND
0x15d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x172 AND
0x173 PUSH2 0x8fc
0x176 DUP3
0x177 SWAP1
0x178 DUP2
0x179 ISZERO
0x17a MUL
0x17b SWAP1
0x17c PUSH1 0x40
0x17e MLOAD
0x17f PUSH1 0x0
0x181 PUSH1 0x40
0x183 MLOAD
0x184 DUP1
0x185 DUP4
0x186 SUB
0x187 DUP2
0x188 DUP6
0x189 DUP9
0x18a DUP9
0x18b CALL
0x18c SWAP4
0x18d POP
0x18e POP
0x18f POP
0x190 POP
0x191 ISZERO
0x192 ISZERO
0x193 PUSH2 0x19b
0x196 JUMPI
---
0x13a: JUMPDEST 
0x13b: V70 = 0x0
0x13f: V71 = S[0x0]
0x141: V72 = 0x100
0x144: V73 = EXP 0x100 0x0
0x146: V74 = DIV V71 0x1
0x147: V75 = 0xffffffffffffffffffffffffffffffffffffffff
0x15c: V76 = AND 0xffffffffffffffffffffffffffffffffffffffff V74
0x15d: V77 = 0xffffffffffffffffffffffffffffffffffffffff
0x172: V78 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0x173: V79 = 0x8fc
0x179: V80 = ISZERO V26
0x17a: V81 = MUL V80 0x8fc
0x17c: V82 = 0x40
0x17e: V83 = M[0x40]
0x17f: V84 = 0x0
0x181: V85 = 0x40
0x183: V86 = M[0x40]
0x186: V87 = SUB V83 V86
0x18b: V88 = CALL V81 V78 V26 V86 V87 V86 0x0
0x191: V89 = ISZERO V88
0x192: V90 = ISZERO V89
0x193: V91 = 0x19b
0x196: JUMPI 0x19b V90
---
Entry stack: [V11, 0x7c, V26]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x7c, V26]

================================

Block 0x197
[0x197:0x19a]
---
Predecessors: [0x13a]
Successors: []
---
0x197 PUSH1 0x0
0x199 DUP1
0x19a REVERT
---
0x197: V92 = 0x0
0x19a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x7c, V26]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7c, V26]

================================

Block 0x19b
[0x19b:0x1f8]
---
Predecessors: [0x13a]
Successors: [0x1f9, 0x1fd]
---
0x19b JUMPDEST
0x19c PUSH1 0x4
0x19e PUSH1 0x0
0x1a0 SWAP1
0x1a1 SLOAD
0x1a2 SWAP1
0x1a3 PUSH2 0x100
0x1a6 EXP
0x1a7 SWAP1
0x1a8 DIV
0x1a9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1be AND
0x1bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d4 AND
0x1d5 PUSH2 0x8fc
0x1d8 DUP3
0x1d9 SWAP1
0x1da DUP2
0x1db ISZERO
0x1dc MUL
0x1dd SWAP1
0x1de PUSH1 0x40
0x1e0 MLOAD
0x1e1 PUSH1 0x0
0x1e3 PUSH1 0x40
0x1e5 MLOAD
0x1e6 DUP1
0x1e7 DUP4
0x1e8 SUB
0x1e9 DUP2
0x1ea DUP6
0x1eb DUP9
0x1ec DUP9
0x1ed CALL
0x1ee SWAP4
0x1ef POP
0x1f0 POP
0x1f1 POP
0x1f2 POP
0x1f3 ISZERO
0x1f4 ISZERO
0x1f5 PUSH2 0x1fd
0x1f8 JUMPI
---
0x19b: JUMPDEST 
0x19c: V93 = 0x4
0x19e: V94 = 0x0
0x1a1: V95 = S[0x4]
0x1a3: V96 = 0x100
0x1a6: V97 = EXP 0x100 0x0
0x1a8: V98 = DIV V95 0x1
0x1a9: V99 = 0xffffffffffffffffffffffffffffffffffffffff
0x1be: V100 = AND 0xffffffffffffffffffffffffffffffffffffffff V98
0x1bf: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d4: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x1d5: V103 = 0x8fc
0x1db: V104 = ISZERO V26
0x1dc: V105 = MUL V104 0x8fc
0x1de: V106 = 0x40
0x1e0: V107 = M[0x40]
0x1e1: V108 = 0x0
0x1e3: V109 = 0x40
0x1e5: V110 = M[0x40]
0x1e8: V111 = SUB V107 V110
0x1ed: V112 = CALL V105 V102 V26 V110 V111 V110 0x0
0x1f3: V113 = ISZERO V112
0x1f4: V114 = ISZERO V113
0x1f5: V115 = 0x1fd
0x1f8: JUMPI 0x1fd V114
---
Entry stack: [V11, 0x7c, V26]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x7c, V26]

================================

Block 0x1f9
[0x1f9:0x1fc]
---
Predecessors: [0x19b]
Successors: []
---
0x1f9 PUSH1 0x0
0x1fb DUP1
0x1fc REVERT
---
0x1f9: V116 = 0x0
0x1fc: REVERT 0x0 0x0
---
Entry stack: [V11, 0x7c, V26]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7c, V26]

================================

Block 0x1fd
[0x1fd:0x25a]
---
Predecessors: [0x19b]
Successors: [0x25b, 0x25f]
---
0x1fd JUMPDEST
0x1fe PUSH1 0x2
0x200 PUSH1 0x0
0x202 SWAP1
0x203 SLOAD
0x204 SWAP1
0x205 PUSH2 0x100
0x208 EXP
0x209 SWAP1
0x20a DIV
0x20b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x220 AND
0x221 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x236 AND
0x237 PUSH2 0x8fc
0x23a DUP3
0x23b SWAP1
0x23c DUP2
0x23d ISZERO
0x23e MUL
0x23f SWAP1
0x240 PUSH1 0x40
0x242 MLOAD
0x243 PUSH1 0x0
0x245 PUSH1 0x40
0x247 MLOAD
0x248 DUP1
0x249 DUP4
0x24a SUB
0x24b DUP2
0x24c DUP6
0x24d DUP9
0x24e DUP9
0x24f CALL
0x250 SWAP4
0x251 POP
0x252 POP
0x253 POP
0x254 POP
0x255 ISZERO
0x256 ISZERO
0x257 PUSH2 0x25f
0x25a JUMPI
---
0x1fd: JUMPDEST 
0x1fe: V117 = 0x2
0x200: V118 = 0x0
0x203: V119 = S[0x2]
0x205: V120 = 0x100
0x208: V121 = EXP 0x100 0x0
0x20a: V122 = DIV V119 0x1
0x20b: V123 = 0xffffffffffffffffffffffffffffffffffffffff
0x220: V124 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x221: V125 = 0xffffffffffffffffffffffffffffffffffffffff
0x236: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V124
0x237: V127 = 0x8fc
0x23d: V128 = ISZERO V26
0x23e: V129 = MUL V128 0x8fc
0x240: V130 = 0x40
0x242: V131 = M[0x40]
0x243: V132 = 0x0
0x245: V133 = 0x40
0x247: V134 = M[0x40]
0x24a: V135 = SUB V131 V134
0x24f: V136 = CALL V129 V126 V26 V134 V135 V134 0x0
0x255: V137 = ISZERO V136
0x256: V138 = ISZERO V137
0x257: V139 = 0x25f
0x25a: JUMPI 0x25f V138
---
Entry stack: [V11, 0x7c, V26]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x7c, V26]

================================

Block 0x25b
[0x25b:0x25e]
---
Predecessors: [0x1fd]
Successors: []
---
0x25b PUSH1 0x0
0x25d DUP1
0x25e REVERT
---
0x25b: V140 = 0x0
0x25e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x7c, V26]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7c, V26]

================================

Block 0x25f
[0x25f:0x2bc]
---
Predecessors: [0x1fd]
Successors: [0x2bd, 0x2c1]
---
0x25f JUMPDEST
0x260 PUSH1 0x3
0x262 PUSH1 0x0
0x264 SWAP1
0x265 SLOAD
0x266 SWAP1
0x267 PUSH2 0x100
0x26a EXP
0x26b SWAP1
0x26c DIV
0x26d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x282 AND
0x283 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x298 AND
0x299 PUSH2 0x8fc
0x29c DUP3
0x29d SWAP1
0x29e DUP2
0x29f ISZERO
0x2a0 MUL
0x2a1 SWAP1
0x2a2 PUSH1 0x40
0x2a4 MLOAD
0x2a5 PUSH1 0x0
0x2a7 PUSH1 0x40
0x2a9 MLOAD
0x2aa DUP1
0x2ab DUP4
0x2ac SUB
0x2ad DUP2
0x2ae DUP6
0x2af DUP9
0x2b0 DUP9
0x2b1 CALL
0x2b2 SWAP4
0x2b3 POP
0x2b4 POP
0x2b5 POP
0x2b6 POP
0x2b7 ISZERO
0x2b8 ISZERO
0x2b9 PUSH2 0x2c1
0x2bc JUMPI
---
0x25f: JUMPDEST 
0x260: V141 = 0x3
0x262: V142 = 0x0
0x265: V143 = S[0x3]
0x267: V144 = 0x100
0x26a: V145 = EXP 0x100 0x0
0x26c: V146 = DIV V143 0x1
0x26d: V147 = 0xffffffffffffffffffffffffffffffffffffffff
0x282: V148 = AND 0xffffffffffffffffffffffffffffffffffffffff V146
0x283: V149 = 0xffffffffffffffffffffffffffffffffffffffff
0x298: V150 = AND 0xffffffffffffffffffffffffffffffffffffffff V148
0x299: V151 = 0x8fc
0x29f: V152 = ISZERO V26
0x2a0: V153 = MUL V152 0x8fc
0x2a2: V154 = 0x40
0x2a4: V155 = M[0x40]
0x2a5: V156 = 0x0
0x2a7: V157 = 0x40
0x2a9: V158 = M[0x40]
0x2ac: V159 = SUB V155 V158
0x2b1: V160 = CALL V153 V150 V26 V158 V159 V158 0x0
0x2b7: V161 = ISZERO V160
0x2b8: V162 = ISZERO V161
0x2b9: V163 = 0x2c1
0x2bc: JUMPI 0x2c1 V162
---
Entry stack: [V11, 0x7c, V26]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x7c, V26]

================================

Block 0x2bd
[0x2bd:0x2c0]
---
Predecessors: [0x25f]
Successors: []
---
0x2bd PUSH1 0x0
0x2bf DUP1
0x2c0 REVERT
---
0x2bd: V164 = 0x0
0x2c0: REVERT 0x0 0x0
---
Entry stack: [V11, 0x7c, V26]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7c, V26]

================================

Block 0x2c1
[0x2c1:0x31e]
---
Predecessors: [0x25f]
Successors: [0x31f, 0x323]
---
0x2c1 JUMPDEST
0x2c2 PUSH1 0x1
0x2c4 PUSH1 0x0
0x2c6 SWAP1
0x2c7 SLOAD
0x2c8 SWAP1
0x2c9 PUSH2 0x100
0x2cc EXP
0x2cd SWAP1
0x2ce DIV
0x2cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e4 AND
0x2e5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2fa AND
0x2fb PUSH2 0x8fc
0x2fe DUP3
0x2ff SWAP1
0x300 DUP2
0x301 ISZERO
0x302 MUL
0x303 SWAP1
0x304 PUSH1 0x40
0x306 MLOAD
0x307 PUSH1 0x0
0x309 PUSH1 0x40
0x30b MLOAD
0x30c DUP1
0x30d DUP4
0x30e SUB
0x30f DUP2
0x310 DUP6
0x311 DUP9
0x312 DUP9
0x313 CALL
0x314 SWAP4
0x315 POP
0x316 POP
0x317 POP
0x318 POP
0x319 ISZERO
0x31a ISZERO
0x31b PUSH2 0x323
0x31e JUMPI
---
0x2c1: JUMPDEST 
0x2c2: V165 = 0x1
0x2c4: V166 = 0x0
0x2c7: V167 = S[0x1]
0x2c9: V168 = 0x100
0x2cc: V169 = EXP 0x100 0x0
0x2ce: V170 = DIV V167 0x1
0x2cf: V171 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e4: V172 = AND 0xffffffffffffffffffffffffffffffffffffffff V170
0x2e5: V173 = 0xffffffffffffffffffffffffffffffffffffffff
0x2fa: V174 = AND 0xffffffffffffffffffffffffffffffffffffffff V172
0x2fb: V175 = 0x8fc
0x301: V176 = ISZERO V26
0x302: V177 = MUL V176 0x8fc
0x304: V178 = 0x40
0x306: V179 = M[0x40]
0x307: V180 = 0x0
0x309: V181 = 0x40
0x30b: V182 = M[0x40]
0x30e: V183 = SUB V179 V182
0x313: V184 = CALL V177 V174 V26 V182 V183 V182 0x0
0x319: V185 = ISZERO V184
0x31a: V186 = ISZERO V185
0x31b: V187 = 0x323
0x31e: JUMPI 0x323 V186
---
Entry stack: [V11, 0x7c, V26]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x7c, V26]

================================

Block 0x31f
[0x31f:0x322]
---
Predecessors: [0x2c1]
Successors: []
---
0x31f PUSH1 0x0
0x321 DUP1
0x322 REVERT
---
0x31f: V188 = 0x0
0x322: REVERT 0x0 0x0
---
Entry stack: [V11, 0x7c, V26]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7c, V26]

================================

Block 0x323
[0x323:0x325]
---
Predecessors: [0x2c1]
Successors: [0x7c]
---
0x323 JUMPDEST
0x324 POP
0x325 JUMP
---
0x323: JUMPDEST 
0x325: JUMP 0x7c
---
Entry stack: [V11, 0x7c, V26]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x326
[0x326:0x353]
---
Predecessors: []
Successors: []
---
0x326 STOP
0x327 LOG1
0x328 PUSH6 0x627a7a723058
0x32f SHA3
0x330 MSIZE
0x331 SHL
0x332 PUSH2 0x9972
0x335 MISSING 0xe7
0x336 DUP4
0x337 PUSH28 0x220c9f26857f944ff13bdf15545f052f69484446b7307d850029
---
0x326: STOP 
0x327: LOG S0 S1 S2
0x328: V189 = 0x627a7a723058
0x32f: V190 = SHA3 0x627a7a723058 S3
0x330: V191 = MSIZE
0x331: V192 = SHL V191 V190
0x332: V193 = 0x9972
0x335: MISSING 0xe7
0x337: V194 = 0x220c9f26857f944ff13bdf15545f052f69484446b7307d850029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x9972, V192, 0x220c9f26857f944ff13bdf15545f052f69484446b7307d850029, S3, S0, S1, S2, S3]
Exit stack: []

================================

Function 0:
Public function signature: 0x8f72f576
Entry block: 0x4e
Exit block: 0x132
Body: 0x4e, 0x64, 0x7e, 0xd5, 0x132, 0x136, 0x137

Function 1:
Public function signature: 0x9d87cb3d
Entry block: 0x66
Exit block: 0x7c
Body: 0x66, 0x7c, 0x13a, 0x197, 0x19b, 0x1f9, 0x1fd, 0x25b, 0x25f, 0x2bd, 0x2c1, 0x31f, 0x323

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

