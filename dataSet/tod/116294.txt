Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x10f]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x10f
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x10f
0xa: JUMPI 0x10f V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x120]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x2f58015
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x120
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x2f58015
0x39: V12 = EQ V10 0x2f58015
0x3a: V13 = 0x120
0x3d: JUMPI 0x120 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x132]
---
0x3e DUP1
0x3f PUSH4 0x6fdde03
0x44 EQ
0x45 PUSH2 0x132
0x48 JUMPI
---
0x3f: V14 = 0x6fdde03
0x44: V15 = EQ 0x6fdde03 V10
0x45: V16 = 0x132
0x48: JUMPI 0x132 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x1c2]
---
0x49 DUP1
0x4a PUSH4 0x27e235e3
0x4f EQ
0x50 PUSH2 0x1c2
0x53 JUMPI
---
0x4a: V17 = 0x27e235e3
0x4f: V18 = EQ 0x27e235e3 V10
0x50: V19 = 0x1c2
0x53: JUMPI 0x1c2 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x1f0]
---
0x54 DUP1
0x55 PUSH4 0x313ce567
0x5a EQ
0x5b PUSH2 0x1f0
0x5e JUMPI
---
0x55: V20 = 0x313ce567
0x5a: V21 = EQ 0x313ce567 V10
0x5b: V22 = 0x1f0
0x5e: JUMPI 0x1f0 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x216]
---
0x5f DUP1
0x60 PUSH4 0x3ccfd60b
0x65 EQ
0x66 PUSH2 0x216
0x69 JUMPI
---
0x60: V23 = 0x3ccfd60b
0x65: V24 = EQ 0x3ccfd60b V10
0x66: V25 = 0x216
0x69: JUMPI 0x216 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x228]
---
0x6a DUP1
0x6b PUSH4 0x41c0e1b5
0x70 EQ
0x71 PUSH2 0x228
0x74 JUMPI
---
0x6b: V26 = 0x41c0e1b5
0x70: V27 = EQ 0x41c0e1b5 V10
0x71: V28 = 0x228
0x74: JUMPI 0x228 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x23a]
---
0x75 DUP1
0x76 PUSH4 0x434f5f27
0x7b EQ
0x7c PUSH2 0x23a
0x7f JUMPI
---
0x76: V29 = 0x434f5f27
0x7b: V30 = EQ 0x434f5f27 V10
0x7c: V31 = 0x23a
0x7f: JUMPI 0x23a V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x26a]
---
0x80 DUP1
0x81 PUSH4 0x5259347d
0x86 EQ
0x87 PUSH2 0x26a
0x8a JUMPI
---
0x81: V32 = 0x5259347d
0x86: V33 = EQ 0x5259347d V10
0x87: V34 = 0x26a
0x8a: JUMPI 0x26a V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x95]
---
Predecessors: [0x80]
Successors: [0x96, 0x274]
---
0x8b DUP1
0x8c PUSH4 0x62f5ed61
0x91 EQ
0x92 PUSH2 0x274
0x95 JUMPI
---
0x8c: V35 = 0x62f5ed61
0x91: V36 = EQ 0x62f5ed61 V10
0x92: V37 = 0x274
0x95: JUMPI 0x274 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x96
[0x96:0xa0]
---
Predecessors: [0x8b]
Successors: [0xa1, 0x27e]
---
0x96 DUP1
0x97 PUSH4 0x6360fc3f
0x9c EQ
0x9d PUSH2 0x27e
0xa0 JUMPI
---
0x97: V38 = 0x6360fc3f
0x9c: V39 = EQ 0x6360fc3f V10
0x9d: V40 = 0x27e
0xa0: JUMPI 0x27e V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa1
[0xa1:0xab]
---
Predecessors: [0x96]
Successors: [0xac, 0x2a2]
---
0xa1 DUP1
0xa2 PUSH4 0x70144f8f
0xa7 EQ
0xa8 PUSH2 0x2a2
0xab JUMPI
---
0xa2: V41 = 0x70144f8f
0xa7: V42 = EQ 0x70144f8f V10
0xa8: V43 = 0x2a2
0xab: JUMPI 0x2a2 V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xac
[0xac:0xb6]
---
Predecessors: [0xa1]
Successors: [0xb7, 0x2b4]
---
0xac DUP1
0xad PUSH4 0x70a08231
0xb2 EQ
0xb3 PUSH2 0x2b4
0xb6 JUMPI
---
0xad: V44 = 0x70a08231
0xb2: V45 = EQ 0x70a08231 V10
0xb3: V46 = 0x2b4
0xb6: JUMPI 0x2b4 V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xb7
[0xb7:0xc1]
---
Predecessors: [0xac]
Successors: [0xc2, 0x2e2]
---
0xb7 DUP1
0xb8 PUSH4 0x87612102
0xbd EQ
0xbe PUSH2 0x2e2
0xc1 JUMPI
---
0xb8: V47 = 0x87612102
0xbd: V48 = EQ 0x87612102 V10
0xbe: V49 = 0x2e2
0xc1: JUMPI 0x2e2 V48
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xc2
[0xc2:0xcc]
---
Predecessors: [0xb7]
Successors: [0xcd, 0x2ec]
---
0xc2 DUP1
0xc3 PUSH4 0x943dfef1
0xc8 EQ
0xc9 PUSH2 0x2ec
0xcc JUMPI
---
0xc3: V50 = 0x943dfef1
0xc8: V51 = EQ 0x943dfef1 V10
0xc9: V52 = 0x2ec
0xcc: JUMPI 0x2ec V51
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xcd
[0xcd:0xd7]
---
Predecessors: [0xc2]
Successors: [0xd8, 0x30e]
---
0xcd DUP1
0xce PUSH4 0x95d89b41
0xd3 EQ
0xd4 PUSH2 0x30e
0xd7 JUMPI
---
0xce: V53 = 0x95d89b41
0xd3: V54 = EQ 0x95d89b41 V10
0xd4: V55 = 0x30e
0xd7: JUMPI 0x30e V54
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xd8
[0xd8:0xe2]
---
Predecessors: [0xcd]
Successors: [0xe3, 0x39e]
---
0xd8 DUP1
0xd9 PUSH4 0xa089feea
0xde EQ
0xdf PUSH2 0x39e
0xe2 JUMPI
---
0xd9: V56 = 0xa089feea
0xde: V57 = EQ 0xa089feea V10
0xdf: V58 = 0x39e
0xe2: JUMPI 0x39e V57
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xe3
[0xe3:0xed]
---
Predecessors: [0xd8]
Successors: [0xee, 0x3c2]
---
0xe3 DUP1
0xe4 PUSH4 0xa0ef91df
0xe9 EQ
0xea PUSH2 0x3c2
0xed JUMPI
---
0xe4: V59 = 0xa0ef91df
0xe9: V60 = EQ 0xa0ef91df V10
0xea: V61 = 0x3c2
0xed: JUMPI 0x3c2 V60
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xee
[0xee:0xf8]
---
Predecessors: [0xe3]
Successors: [0xf9, 0x3d4]
---
0xee DUP1
0xef PUSH4 0xa9059cbb
0xf4 EQ
0xf5 PUSH2 0x3d4
0xf8 JUMPI
---
0xef: V62 = 0xa9059cbb
0xf4: V63 = EQ 0xa9059cbb V10
0xf5: V64 = 0x3d4
0xf8: JUMPI 0x3d4 V63
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xf9
[0xf9:0x103]
---
Predecessors: [0xee]
Successors: [0x104, 0x3f5]
---
0xf9 DUP1
0xfa PUSH4 0xc3dac9a1
0xff EQ
0x100 PUSH2 0x3f5
0x103 JUMPI
---
0xfa: V65 = 0xc3dac9a1
0xff: V66 = EQ 0xc3dac9a1 V10
0x100: V67 = 0x3f5
0x103: JUMPI 0x3f5 V66
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x104
[0x104:0x10e]
---
Predecessors: [0xf9]
Successors: [0x10f, 0x417]
---
0x104 DUP1
0x105 PUSH4 0xfc0c546a
0x10a EQ
0x10b PUSH2 0x417
0x10e JUMPI
---
0x105: V68 = 0xfc0c546a
0x10a: V69 = EQ 0xfc0c546a V10
0x10b: V70 = 0x417
0x10e: JUMPI 0x417 V69
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x10f
[0x10f:0x112]
---
Predecessors: [0x0, 0x104]
Successors: [0x113]
---
0x10f JUMPDEST
0x110 PUSH2 0x11e
---
0x10f: JUMPDEST 
0x110: V71 = 0x11e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x11e]
Exit stack: [V10, 0x11e]

================================

Block 0x113
[0x113:0x11a]
---
Predecessors: [0x10f]
Successors: [0x443]
---
0x113 JUMPDEST
0x114 PUSH2 0x11b
0x117 PUSH2 0x443
0x11a JUMP
---
0x113: JUMPDEST 
0x114: V72 = 0x11b
0x117: V73 = 0x443
0x11a: JUMP 0x443
---
Entry stack: [V10, 0x11e]
Stack pops: 0
Stack additions: [0x11b]
Exit stack: [V10, 0x11e, 0x11b]

================================

Block 0x11b
[0x11b:0x11b]
---
Predecessors: [0x11c, 0x593, 0x5da, 0x5e8, 0x6d9, 0x6de, 0x6fc, 0xb56]
Successors: [0x11c]
---
0x11b JUMPDEST
---
0x11b: JUMPDEST 
---
Entry stack: [V10, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, S0]

================================

Block 0x11c
[0x11c:0x11d]
---
Predecessors: [0x11b]
Successors: [0x11b, 0x11e]
---
0x11c JUMPDEST
0x11d JUMP
---
0x11c: JUMPDEST 
0x11d: JUMP S0
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x11e
[0x11e:0x11f]
---
Predecessors: [0x11c, 0x5da, 0x9a7, 0xa35, 0xa6a, 0xa9b, 0xc42]
Successors: []
---
0x11e JUMPDEST
0x11f STOP
---
0x11e: JUMPDEST 
0x11f: STOP 
---
Entry stack: [V10, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, S0]

================================

Block 0x120
[0x120:0x126]
---
Predecessors: [0xb]
Successors: [0x127, 0x128]
---
0x120 JUMPDEST
0x121 CALLVALUE
0x122 ISZERO
0x123 PUSH2 0x128
0x126 JUMPI
---
0x120: JUMPDEST 
0x121: V74 = CALLVALUE
0x122: V75 = ISZERO V74
0x123: V76 = 0x128
0x126: JUMPI 0x128 V75
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x127
[0x127:0x127]
---
Predecessors: [0x120]
Successors: []
---
0x127 INVALID
---
0x127: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x128
[0x128:0x12f]
---
Predecessors: [0x120]
Successors: [0x5dc]
---
0x128 JUMPDEST
0x129 PUSH2 0x11e
0x12c PUSH2 0x5dc
0x12f JUMP
---
0x128: JUMPDEST 
0x129: V77 = 0x11e
0x12c: V78 = 0x5dc
0x12f: JUMP 0x5dc
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x11e]
Exit stack: [V10, 0x11e]

================================

Block 0x130
[0x130:0x131]
---
Predecessors: []
Successors: []
---
0x130 JUMPDEST
0x131 STOP
---
0x130: JUMPDEST 
0x131: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x132
[0x132:0x138]
---
Predecessors: [0x3e]
Successors: [0x139, 0x13a]
---
0x132 JUMPDEST
0x133 CALLVALUE
0x134 ISZERO
0x135 PUSH2 0x13a
0x138 JUMPI
---
0x132: JUMPDEST 
0x133: V79 = CALLVALUE
0x134: V80 = ISZERO V79
0x135: V81 = 0x13a
0x138: JUMPI 0x13a V80
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x139
[0x139:0x139]
---
Predecessors: [0x132]
Successors: []
---
0x139 INVALID
---
0x139: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x13a
[0x13a:0x141]
---
Predecessors: [0x132]
Successors: [0x72e]
---
0x13a JUMPDEST
0x13b PUSH2 0x142
0x13e PUSH2 0x72e
0x141 JUMP
---
0x13a: JUMPDEST 
0x13b: V82 = 0x142
0x13e: V83 = 0x72e
0x141: JUMP 0x72e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x142]
Exit stack: [V10, 0x142]

================================

Block 0x142
[0x142:0x167]
---
Predecessors: [0x7b4]
Successors: [0x168, 0x188]
---
0x142 JUMPDEST
0x143 PUSH1 0x40
0x145 DUP1
0x146 MLOAD
0x147 PUSH1 0x20
0x149 DUP1
0x14a DUP3
0x14b MSTORE
0x14c DUP4
0x14d MLOAD
0x14e DUP2
0x14f DUP4
0x150 ADD
0x151 MSTORE
0x152 DUP4
0x153 MLOAD
0x154 SWAP2
0x155 SWAP3
0x156 DUP4
0x157 SWAP3
0x158 SWAP1
0x159 DUP4
0x15a ADD
0x15b SWAP2
0x15c DUP6
0x15d ADD
0x15e SWAP1
0x15f DUP1
0x160 DUP4
0x161 DUP4
0x162 DUP3
0x163 ISZERO
0x164 PUSH2 0x188
0x167 JUMPI
---
0x142: JUMPDEST 
0x143: V84 = 0x40
0x146: V85 = M[0x40]
0x147: V86 = 0x20
0x14b: M[V85] = 0x20
0x14d: V87 = M[S0]
0x150: V88 = ADD V85 0x20
0x151: M[V88] = V87
0x153: V89 = M[S0]
0x15a: V90 = ADD V85 0x40
0x15d: V91 = ADD S0 0x20
0x163: V92 = ISZERO V89
0x164: V93 = 0x188
0x167: JUMPI 0x188 V92
---
Entry stack: [V10, 0x142, S0]
Stack pops: 1
Stack additions: [S0, V85, V85, V90, V91, V89, V89, V90, V91]
Exit stack: [V10, 0x142, S0, V85, V85, V90, V91, V89, V89, V90, V91]

================================

Block 0x168
[0x168:0x175]
---
Predecessors: [0x142, 0x176, 0x352]
Successors: [0x176, 0x188]
---
0x168 JUMPDEST
0x169 DUP1
0x16a MLOAD
0x16b DUP3
0x16c MSTORE
0x16d PUSH1 0x20
0x16f DUP4
0x170 GT
0x171 ISZERO
0x172 PUSH2 0x188
0x175 JUMPI
---
0x168: JUMPDEST 
0x16a: V94 = M[S0]
0x16c: M[S1] = V94
0x16d: V95 = 0x20
0x170: V96 = GT S2 0x20
0x171: V97 = ISZERO V96
0x172: V98 = 0x188
0x175: JUMPI 0x188 V97
---
Entry stack: [V10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x176
[0x176:0x187]
---
Predecessors: [0x168]
Successors: [0x168]
---
0x176 PUSH1 0x1f
0x178 NOT
0x179 SWAP1
0x17a SWAP3
0x17b ADD
0x17c SWAP2
0x17d PUSH1 0x20
0x17f SWAP2
0x180 DUP3
0x181 ADD
0x182 SWAP2
0x183 ADD
0x184 PUSH2 0x168
0x187 JUMP
---
0x176: V99 = 0x1f
0x178: V100 = NOT 0x1f
0x17b: V101 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x17d: V102 = 0x20
0x181: V103 = ADD 0x20 S1
0x183: V104 = ADD 0x20 S0
0x184: V105 = 0x168
0x187: JUMP 0x168
---
Entry stack: [V10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V101, V103, V104]
Exit stack: [V10, S9, S8, S7, S6, S5, S4, S3, V101, V103, V104]

================================

Block 0x188
[0x188:0x19a]
---
Predecessors: [0x142, 0x168, 0x31e, 0x344]
Successors: [0x19b, 0x1b4]
---
0x188 JUMPDEST
0x189 POP
0x18a POP
0x18b POP
0x18c SWAP1
0x18d POP
0x18e SWAP1
0x18f DUP2
0x190 ADD
0x191 SWAP1
0x192 PUSH1 0x1f
0x194 AND
0x195 DUP1
0x196 ISZERO
0x197 PUSH2 0x1b4
0x19a JUMPI
---
0x188: JUMPDEST 
0x190: V106 = ADD S3 S5
0x192: V107 = 0x1f
0x194: V108 = AND 0x1f S3
0x196: V109 = ISZERO V108
0x197: V110 = 0x1b4
0x19a: JUMPI 0x1b4 V109
---
Entry stack: [V10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [V106, V108]
Exit stack: [V10, S9, S8, S7, S6, V106, V108]

================================

Block 0x19b
[0x19b:0x1b3]
---
Predecessors: [0x188]
Successors: [0x1b4]
---
0x19b DUP1
0x19c DUP3
0x19d SUB
0x19e DUP1
0x19f MLOAD
0x1a0 PUSH1 0x1
0x1a2 DUP4
0x1a3 PUSH1 0x20
0x1a5 SUB
0x1a6 PUSH2 0x100
0x1a9 EXP
0x1aa SUB
0x1ab NOT
0x1ac AND
0x1ad DUP2
0x1ae MSTORE
0x1af PUSH1 0x20
0x1b1 ADD
0x1b2 SWAP2
0x1b3 POP
---
0x19d: V111 = SUB V106 V108
0x19f: V112 = M[V111]
0x1a0: V113 = 0x1
0x1a3: V114 = 0x20
0x1a5: V115 = SUB 0x20 V108
0x1a6: V116 = 0x100
0x1a9: V117 = EXP 0x100 V115
0x1aa: V118 = SUB V117 0x1
0x1ab: V119 = NOT V118
0x1ac: V120 = AND V119 V112
0x1ae: M[V111] = V120
0x1af: V121 = 0x20
0x1b1: V122 = ADD 0x20 V111
---
Entry stack: [V10, S5, S4, S3, S2, V106, V108]
Stack pops: 2
Stack additions: [V122, S0]
Exit stack: [V10, S5, S4, S3, S2, V122, V108]

================================

Block 0x1b4
[0x1b4:0x1c1]
---
Predecessors: [0x188, 0x19b, 0x364]
Successors: []
---
0x1b4 JUMPDEST
0x1b5 POP
0x1b6 SWAP3
0x1b7 POP
0x1b8 POP
0x1b9 POP
0x1ba PUSH1 0x40
0x1bc MLOAD
0x1bd DUP1
0x1be SWAP2
0x1bf SUB
0x1c0 SWAP1
0x1c1 RETURN
---
0x1b4: JUMPDEST 
0x1ba: V123 = 0x40
0x1bc: V124 = M[0x40]
0x1bf: V125 = SUB S1 V124
0x1c1: RETURN V124 V125
---
Entry stack: [V10, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V10, S5]

================================

Block 0x1c2
[0x1c2:0x1c8]
---
Predecessors: [0x49]
Successors: [0x1c9, 0x1ca]
---
0x1c2 JUMPDEST
0x1c3 CALLVALUE
0x1c4 ISZERO
0x1c5 PUSH2 0x1ca
0x1c8 JUMPI
---
0x1c2: JUMPDEST 
0x1c3: V126 = CALLVALUE
0x1c4: V127 = ISZERO V126
0x1c5: V128 = 0x1ca
0x1c8: JUMPI 0x1ca V127
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1c9
[0x1c9:0x1c9]
---
Predecessors: [0x1c2]
Successors: []
---
0x1c9 INVALID
---
0x1c9: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ca
[0x1ca:0x1dd]
---
Predecessors: [0x1c2]
Successors: [0x7bc]
---
0x1ca JUMPDEST
0x1cb PUSH2 0x1de
0x1ce PUSH1 0x1
0x1d0 PUSH1 0xa0
0x1d2 PUSH1 0x2
0x1d4 EXP
0x1d5 SUB
0x1d6 PUSH1 0x4
0x1d8 CALLDATALOAD
0x1d9 AND
0x1da PUSH2 0x7bc
0x1dd JUMP
---
0x1ca: JUMPDEST 
0x1cb: V129 = 0x1de
0x1ce: V130 = 0x1
0x1d0: V131 = 0xa0
0x1d2: V132 = 0x2
0x1d4: V133 = EXP 0x2 0xa0
0x1d5: V134 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d6: V135 = 0x4
0x1d8: V136 = CALLDATALOAD 0x4
0x1d9: V137 = AND V136 0xffffffffffffffffffffffffffffffffffffffff
0x1da: V138 = 0x7bc
0x1dd: JUMP 0x7bc
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1de, V137]
Exit stack: [V10, 0x1de, V137]

================================

Block 0x1de
[0x1de:0x1ef]
---
Predecessors: [0x7bc, 0xa6c, 0xa9d, 0xc46]
Successors: []
---
0x1de JUMPDEST
0x1df PUSH1 0x40
0x1e1 DUP1
0x1e2 MLOAD
0x1e3 SWAP2
0x1e4 DUP3
0x1e5 MSTORE
0x1e6 MLOAD
0x1e7 SWAP1
0x1e8 DUP2
0x1e9 SWAP1
0x1ea SUB
0x1eb PUSH1 0x20
0x1ed ADD
0x1ee SWAP1
0x1ef RETURN
---
0x1de: JUMPDEST 
0x1df: V139 = 0x40
0x1e2: V140 = M[0x40]
0x1e5: M[V140] = S0
0x1e6: V141 = M[0x40]
0x1ea: V142 = SUB V140 V141
0x1eb: V143 = 0x20
0x1ed: V144 = ADD 0x20 V142
0x1ef: RETURN V141 V144
---
Entry stack: [V10, 0x1de, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1de]

================================

Block 0x1f0
[0x1f0:0x1f6]
---
Predecessors: [0x54]
Successors: [0x1f7, 0x1f8]
---
0x1f0 JUMPDEST
0x1f1 CALLVALUE
0x1f2 ISZERO
0x1f3 PUSH2 0x1f8
0x1f6 JUMPI
---
0x1f0: JUMPDEST 
0x1f1: V145 = CALLVALUE
0x1f2: V146 = ISZERO V145
0x1f3: V147 = 0x1f8
0x1f6: JUMPI 0x1f8 V146
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1f7
[0x1f7:0x1f7]
---
Predecessors: [0x1f0]
Successors: []
---
0x1f7 INVALID
---
0x1f7: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1f8
[0x1f8:0x1ff]
---
Predecessors: [0x1f0]
Successors: [0x7ce]
---
0x1f8 JUMPDEST
0x1f9 PUSH2 0x200
0x1fc PUSH2 0x7ce
0x1ff JUMP
---
0x1f8: JUMPDEST 
0x1f9: V148 = 0x200
0x1fc: V149 = 0x7ce
0x1ff: JUMP 0x7ce
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x200]
Exit stack: [V10, 0x200]

================================

Block 0x200
[0x200:0x215]
---
Predecessors: [0x7ce]
Successors: []
---
0x200 JUMPDEST
0x201 PUSH1 0x40
0x203 DUP1
0x204 MLOAD
0x205 PUSH1 0xff
0x207 SWAP1
0x208 SWAP3
0x209 AND
0x20a DUP3
0x20b MSTORE
0x20c MLOAD
0x20d SWAP1
0x20e DUP2
0x20f SWAP1
0x210 SUB
0x211 PUSH1 0x20
0x213 ADD
0x214 SWAP1
0x215 RETURN
---
0x200: JUMPDEST 
0x201: V150 = 0x40
0x204: V151 = M[0x40]
0x205: V152 = 0xff
0x209: V153 = AND V674 0xff
0x20b: M[V151] = V153
0x20c: V154 = M[0x40]
0x210: V155 = SUB V151 V154
0x211: V156 = 0x20
0x213: V157 = ADD 0x20 V155
0x215: RETURN V154 V157
---
Entry stack: [V10, 0x200, V674]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x200]

================================

Block 0x216
[0x216:0x21c]
---
Predecessors: [0x5f]
Successors: [0x21d, 0x21e]
---
0x216 JUMPDEST
0x217 CALLVALUE
0x218 ISZERO
0x219 PUSH2 0x21e
0x21c JUMPI
---
0x216: JUMPDEST 
0x217: V158 = CALLVALUE
0x218: V159 = ISZERO V158
0x219: V160 = 0x21e
0x21c: JUMPI 0x21e V159
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x21d
[0x21d:0x21d]
---
Predecessors: [0x216]
Successors: []
---
0x21d INVALID
---
0x21d: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x21e
[0x21e:0x225]
---
Predecessors: [0x216]
Successors: [0x7d7]
---
0x21e JUMPDEST
0x21f PUSH2 0x11e
0x222 PUSH2 0x7d7
0x225 JUMP
---
0x21e: JUMPDEST 
0x21f: V161 = 0x11e
0x222: V162 = 0x7d7
0x225: JUMP 0x7d7
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x11e]
Exit stack: [V10, 0x11e]

================================

Block 0x226
[0x226:0x227]
---
Predecessors: []
Successors: []
---
0x226 JUMPDEST
0x227 STOP
---
0x226: JUMPDEST 
0x227: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x228
[0x228:0x22e]
---
Predecessors: [0x6a]
Successors: [0x22f, 0x230]
---
0x228 JUMPDEST
0x229 CALLVALUE
0x22a ISZERO
0x22b PUSH2 0x230
0x22e JUMPI
---
0x228: JUMPDEST 
0x229: V163 = CALLVALUE
0x22a: V164 = ISZERO V163
0x22b: V165 = 0x230
0x22e: JUMPI 0x230 V164
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x22f
[0x22f:0x22f]
---
Predecessors: [0x228]
Successors: []
---
0x22f INVALID
---
0x22f: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x230
[0x230:0x237]
---
Predecessors: [0x228]
Successors: [0x9ac]
---
0x230 JUMPDEST
0x231 PUSH2 0x11e
0x234 PUSH2 0x9ac
0x237 JUMP
---
0x230: JUMPDEST 
0x231: V166 = 0x11e
0x234: V167 = 0x9ac
0x237: JUMP 0x9ac
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x11e]
Exit stack: [V10, 0x11e]

================================

Block 0x238
[0x238:0x239]
---
Predecessors: []
Successors: []
---
0x238 JUMPDEST
0x239 STOP
---
0x238: JUMPDEST 
0x239: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x23a
[0x23a:0x240]
---
Predecessors: [0x75]
Successors: [0x241, 0x242]
---
0x23a JUMPDEST
0x23b CALLVALUE
0x23c ISZERO
0x23d PUSH2 0x242
0x240 JUMPI
---
0x23a: JUMPDEST 
0x23b: V168 = CALLVALUE
0x23c: V169 = ISZERO V168
0x23d: V170 = 0x242
0x240: JUMPI 0x242 V169
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x241
[0x241:0x241]
---
Predecessors: [0x23a]
Successors: []
---
0x241 INVALID
---
0x241: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x242
[0x242:0x255]
---
Predecessors: [0x23a]
Successors: [0x9d9]
---
0x242 JUMPDEST
0x243 PUSH2 0x256
0x246 PUSH1 0x1
0x248 PUSH1 0xa0
0x24a PUSH1 0x2
0x24c EXP
0x24d SUB
0x24e PUSH1 0x4
0x250 CALLDATALOAD
0x251 AND
0x252 PUSH2 0x9d9
0x255 JUMP
---
0x242: JUMPDEST 
0x243: V171 = 0x256
0x246: V172 = 0x1
0x248: V173 = 0xa0
0x24a: V174 = 0x2
0x24c: V175 = EXP 0x2 0xa0
0x24d: V176 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24e: V177 = 0x4
0x250: V178 = CALLDATALOAD 0x4
0x251: V179 = AND V178 0xffffffffffffffffffffffffffffffffffffffff
0x252: V180 = 0x9d9
0x255: JUMP 0x9d9
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x256, V179]
Exit stack: [V10, 0x256, V179]

================================

Block 0x256
[0x256:0x269]
---
Predecessors: [0x9d9, 0xa37, 0xb31]
Successors: []
---
0x256 JUMPDEST
0x257 PUSH1 0x40
0x259 DUP1
0x25a MLOAD
0x25b SWAP2
0x25c ISZERO
0x25d ISZERO
0x25e DUP3
0x25f MSTORE
0x260 MLOAD
0x261 SWAP1
0x262 DUP2
0x263 SWAP1
0x264 SUB
0x265 PUSH1 0x20
0x267 ADD
0x268 SWAP1
0x269 RETURN
---
0x256: JUMPDEST 
0x257: V181 = 0x40
0x25a: V182 = M[0x40]
0x25c: V183 = ISZERO S0
0x25d: V184 = ISZERO V183
0x25f: M[V182] = V184
0x260: V185 = M[0x40]
0x264: V186 = SUB V182 V185
0x265: V187 = 0x20
0x267: V188 = ADD 0x20 V186
0x269: RETURN V185 V188
---
Entry stack: [V10, 0x256, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x256]

================================

Block 0x26a
[0x26a:0x271]
---
Predecessors: [0x80]
Successors: [0x443]
---
0x26a JUMPDEST
0x26b PUSH2 0x11e
0x26e PUSH2 0x443
0x271 JUMP
---
0x26a: JUMPDEST 
0x26b: V189 = 0x11e
0x26e: V190 = 0x443
0x271: JUMP 0x443
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x11e]
Exit stack: [V10, 0x11e]

================================

Block 0x272
[0x272:0x273]
---
Predecessors: []
Successors: []
---
0x272 JUMPDEST
0x273 STOP
---
0x272: JUMPDEST 
0x273: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x274
[0x274:0x27b]
---
Predecessors: [0x8b]
Successors: [0x9ee]
---
0x274 JUMPDEST
0x275 PUSH2 0x11e
0x278 PUSH2 0x9ee
0x27b JUMP
---
0x274: JUMPDEST 
0x275: V191 = 0x11e
0x278: V192 = 0x9ee
0x27b: JUMP 0x9ee
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x11e]
Exit stack: [V10, 0x11e]

================================

Block 0x27c
[0x27c:0x27d]
---
Predecessors: []
Successors: []
---
0x27c JUMPDEST
0x27d STOP
---
0x27c: JUMPDEST 
0x27d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x27e
[0x27e:0x284]
---
Predecessors: [0x96]
Successors: [0x285, 0x286]
---
0x27e JUMPDEST
0x27f CALLVALUE
0x280 ISZERO
0x281 PUSH2 0x286
0x284 JUMPI
---
0x27e: JUMPDEST 
0x27f: V193 = CALLVALUE
0x280: V194 = ISZERO V193
0x281: V195 = 0x286
0x284: JUMPI 0x286 V194
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x285
[0x285:0x285]
---
Predecessors: [0x27e]
Successors: []
---
0x285 INVALID
---
0x285: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x286
[0x286:0x28d]
---
Predecessors: [0x27e]
Successors: [0xa37]
---
0x286 JUMPDEST
0x287 PUSH2 0x256
0x28a PUSH2 0xa37
0x28d JUMP
---
0x286: JUMPDEST 
0x287: V196 = 0x256
0x28a: V197 = 0xa37
0x28d: JUMP 0xa37
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x256]
Exit stack: [V10, 0x256]

================================

Block 0x28e
[0x28e:0x2a1]
---
Predecessors: []
Successors: []
---
0x28e JUMPDEST
0x28f PUSH1 0x40
0x291 DUP1
0x292 MLOAD
0x293 SWAP2
0x294 ISZERO
0x295 ISZERO
0x296 DUP3
0x297 MSTORE
0x298 MLOAD
0x299 SWAP1
0x29a DUP2
0x29b SWAP1
0x29c SUB
0x29d PUSH1 0x20
0x29f ADD
0x2a0 SWAP1
0x2a1 RETURN
---
0x28e: JUMPDEST 
0x28f: V198 = 0x40
0x292: V199 = M[0x40]
0x294: V200 = ISZERO S0
0x295: V201 = ISZERO V200
0x297: M[V199] = V201
0x298: V202 = M[0x40]
0x29c: V203 = SUB V199 V202
0x29d: V204 = 0x20
0x29f: V205 = ADD 0x20 V203
0x2a1: RETURN V202 V205
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2a2
[0x2a2:0x2a8]
---
Predecessors: [0xa1]
Successors: [0x2a9, 0x2aa]
---
0x2a2 JUMPDEST
0x2a3 CALLVALUE
0x2a4 ISZERO
0x2a5 PUSH2 0x2aa
0x2a8 JUMPI
---
0x2a2: JUMPDEST 
0x2a3: V206 = CALLVALUE
0x2a4: V207 = ISZERO V206
0x2a5: V208 = 0x2aa
0x2a8: JUMPI 0x2aa V207
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2a9
[0x2a9:0x2a9]
---
Predecessors: [0x2a2]
Successors: []
---
0x2a9 INVALID
---
0x2a9: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2aa
[0x2aa:0x2b1]
---
Predecessors: [0x2a2]
Successors: [0xa40]
---
0x2aa JUMPDEST
0x2ab PUSH2 0x11e
0x2ae PUSH2 0xa40
0x2b1 JUMP
---
0x2aa: JUMPDEST 
0x2ab: V209 = 0x11e
0x2ae: V210 = 0xa40
0x2b1: JUMP 0xa40
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x11e]
Exit stack: [V10, 0x11e]

================================

Block 0x2b2
[0x2b2:0x2b3]
---
Predecessors: []
Successors: []
---
0x2b2 JUMPDEST
0x2b3 STOP
---
0x2b2: JUMPDEST 
0x2b3: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2b4
[0x2b4:0x2ba]
---
Predecessors: [0xac]
Successors: [0x2bb, 0x2bc]
---
0x2b4 JUMPDEST
0x2b5 CALLVALUE
0x2b6 ISZERO
0x2b7 PUSH2 0x2bc
0x2ba JUMPI
---
0x2b4: JUMPDEST 
0x2b5: V211 = CALLVALUE
0x2b6: V212 = ISZERO V211
0x2b7: V213 = 0x2bc
0x2ba: JUMPI 0x2bc V212
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2bb
[0x2bb:0x2bb]
---
Predecessors: [0x2b4]
Successors: []
---
0x2bb INVALID
---
0x2bb: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2bc
[0x2bc:0x2cf]
---
Predecessors: [0x2b4]
Successors: [0xa6c]
---
0x2bc JUMPDEST
0x2bd PUSH2 0x1de
0x2c0 PUSH1 0x1
0x2c2 PUSH1 0xa0
0x2c4 PUSH1 0x2
0x2c6 EXP
0x2c7 SUB
0x2c8 PUSH1 0x4
0x2ca CALLDATALOAD
0x2cb AND
0x2cc PUSH2 0xa6c
0x2cf JUMP
---
0x2bc: JUMPDEST 
0x2bd: V214 = 0x1de
0x2c0: V215 = 0x1
0x2c2: V216 = 0xa0
0x2c4: V217 = 0x2
0x2c6: V218 = EXP 0x2 0xa0
0x2c7: V219 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c8: V220 = 0x4
0x2ca: V221 = CALLDATALOAD 0x4
0x2cb: V222 = AND V221 0xffffffffffffffffffffffffffffffffffffffff
0x2cc: V223 = 0xa6c
0x2cf: JUMP 0xa6c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1de, V222]
Exit stack: [V10, 0x1de, V222]

================================

Block 0x2d0
[0x2d0:0x2e1]
---
Predecessors: []
Successors: []
---
0x2d0 JUMPDEST
0x2d1 PUSH1 0x40
0x2d3 DUP1
0x2d4 MLOAD
0x2d5 SWAP2
0x2d6 DUP3
0x2d7 MSTORE
0x2d8 MLOAD
0x2d9 SWAP1
0x2da DUP2
0x2db SWAP1
0x2dc SUB
0x2dd PUSH1 0x20
0x2df ADD
0x2e0 SWAP1
0x2e1 RETURN
---
0x2d0: JUMPDEST 
0x2d1: V224 = 0x40
0x2d4: V225 = M[0x40]
0x2d7: M[V225] = S0
0x2d8: V226 = M[0x40]
0x2dc: V227 = SUB V225 V226
0x2dd: V228 = 0x20
0x2df: V229 = ADD 0x20 V227
0x2e1: RETURN V226 V229
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2e2
[0x2e2:0x2e9]
---
Predecessors: [0xb7]
Successors: [0xa7e]
---
0x2e2 JUMPDEST
0x2e3 PUSH2 0x11e
0x2e6 PUSH2 0xa7e
0x2e9 JUMP
---
0x2e2: JUMPDEST 
0x2e3: V230 = 0x11e
0x2e6: V231 = 0xa7e
0x2e9: JUMP 0xa7e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x11e]
Exit stack: [V10, 0x11e]

================================

Block 0x2ea
[0x2ea:0x2eb]
---
Predecessors: []
Successors: []
---
0x2ea JUMPDEST
0x2eb STOP
---
0x2ea: JUMPDEST 
0x2eb: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2ec
[0x2ec:0x2f2]
---
Predecessors: [0xc2]
Successors: [0x2f3, 0x2f4]
---
0x2ec JUMPDEST
0x2ed CALLVALUE
0x2ee ISZERO
0x2ef PUSH2 0x2f4
0x2f2 JUMPI
---
0x2ec: JUMPDEST 
0x2ed: V232 = CALLVALUE
0x2ee: V233 = ISZERO V232
0x2ef: V234 = 0x2f4
0x2f2: JUMPI 0x2f4 V233
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2f3
[0x2f3:0x2f3]
---
Predecessors: [0x2ec]
Successors: []
---
0x2f3 INVALID
---
0x2f3: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2f4
[0x2f4:0x2fb]
---
Predecessors: [0x2ec]
Successors: [0xa9d]
---
0x2f4 JUMPDEST
0x2f5 PUSH2 0x1de
0x2f8 PUSH2 0xa9d
0x2fb JUMP
---
0x2f4: JUMPDEST 
0x2f5: V235 = 0x1de
0x2f8: V236 = 0xa9d
0x2fb: JUMP 0xa9d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1de]
Exit stack: [V10, 0x1de]

================================

Block 0x2fc
[0x2fc:0x30d]
---
Predecessors: []
Successors: []
---
0x2fc JUMPDEST
0x2fd PUSH1 0x40
0x2ff DUP1
0x300 MLOAD
0x301 SWAP2
0x302 DUP3
0x303 MSTORE
0x304 MLOAD
0x305 SWAP1
0x306 DUP2
0x307 SWAP1
0x308 SUB
0x309 PUSH1 0x20
0x30b ADD
0x30c SWAP1
0x30d RETURN
---
0x2fc: JUMPDEST 
0x2fd: V237 = 0x40
0x300: V238 = M[0x40]
0x303: M[V238] = S0
0x304: V239 = M[0x40]
0x308: V240 = SUB V238 V239
0x309: V241 = 0x20
0x30b: V242 = ADD 0x20 V240
0x30d: RETURN V239 V242
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x30e
[0x30e:0x314]
---
Predecessors: [0xcd]
Successors: [0x315, 0x316]
---
0x30e JUMPDEST
0x30f CALLVALUE
0x310 ISZERO
0x311 PUSH2 0x316
0x314 JUMPI
---
0x30e: JUMPDEST 
0x30f: V243 = CALLVALUE
0x310: V244 = ISZERO V243
0x311: V245 = 0x316
0x314: JUMPI 0x316 V244
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x315
[0x315:0x315]
---
Predecessors: [0x30e]
Successors: []
---
0x315 INVALID
---
0x315: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x316
[0x316:0x31d]
---
Predecessors: [0x30e]
Successors: [0xaa3]
---
0x316 JUMPDEST
0x317 PUSH2 0x142
0x31a PUSH2 0xaa3
0x31d JUMP
---
0x316: JUMPDEST 
0x317: V246 = 0x142
0x31a: V247 = 0xaa3
0x31d: JUMP 0xaa3
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x142]
Exit stack: [V10, 0x142]

================================

Block 0x31e
[0x31e:0x343]
---
Predecessors: []
Successors: [0x188, 0x344]
---
0x31e JUMPDEST
0x31f PUSH1 0x40
0x321 DUP1
0x322 MLOAD
0x323 PUSH1 0x20
0x325 DUP1
0x326 DUP3
0x327 MSTORE
0x328 DUP4
0x329 MLOAD
0x32a DUP2
0x32b DUP4
0x32c ADD
0x32d MSTORE
0x32e DUP4
0x32f MLOAD
0x330 SWAP2
0x331 SWAP3
0x332 DUP4
0x333 SWAP3
0x334 SWAP1
0x335 DUP4
0x336 ADD
0x337 SWAP2
0x338 DUP6
0x339 ADD
0x33a SWAP1
0x33b DUP1
0x33c DUP4
0x33d DUP4
0x33e DUP3
0x33f ISZERO
0x340 PUSH2 0x188
0x343 JUMPI
---
0x31e: JUMPDEST 
0x31f: V248 = 0x40
0x322: V249 = M[0x40]
0x323: V250 = 0x20
0x327: M[V249] = 0x20
0x329: V251 = M[S0]
0x32c: V252 = ADD V249 0x20
0x32d: M[V252] = V251
0x32f: V253 = M[S0]
0x336: V254 = ADD V249 0x40
0x339: V255 = ADD S0 0x20
0x33f: V256 = ISZERO V253
0x340: V257 = 0x188
0x343: JUMPI 0x188 V256
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, V249, V249, V254, V255, V253, V253, V254, V255]
Exit stack: [S0, V249, V249, V254, V255, V253, V253, V254, V255]

================================

Block 0x344
[0x344:0x351]
---
Predecessors: [0x31e]
Successors: [0x188, 0x352]
---
0x344 JUMPDEST
0x345 DUP1
0x346 MLOAD
0x347 DUP3
0x348 MSTORE
0x349 PUSH1 0x20
0x34b DUP4
0x34c GT
0x34d ISZERO
0x34e PUSH2 0x188
0x351 JUMPI
---
0x344: JUMPDEST 
0x346: V258 = M[V255]
0x348: M[V254] = V258
0x349: V259 = 0x20
0x34c: V260 = GT V253 0x20
0x34d: V261 = ISZERO V260
0x34e: V262 = 0x188
0x351: JUMPI 0x188 V261
---
Entry stack: [S8, V249, V249, V254, V255, V253, V253, V254, V255]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S8, V249, V249, V254, V255, V253, V253, V254, V255]

================================

Block 0x352
[0x352:0x363]
---
Predecessors: [0x344]
Successors: [0x168]
---
0x352 PUSH1 0x1f
0x354 NOT
0x355 SWAP1
0x356 SWAP3
0x357 ADD
0x358 SWAP2
0x359 PUSH1 0x20
0x35b SWAP2
0x35c DUP3
0x35d ADD
0x35e SWAP2
0x35f ADD
0x360 PUSH2 0x168
0x363 JUMP
---
0x352: V263 = 0x1f
0x354: V264 = NOT 0x1f
0x357: V265 = ADD V253 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x359: V266 = 0x20
0x35d: V267 = ADD 0x20 V254
0x35f: V268 = ADD 0x20 V255
0x360: V269 = 0x168
0x363: JUMP 0x168
---
Entry stack: [S8, V249, V249, V254, V255, V253, V253, V254, V255]
Stack pops: 3
Stack additions: [V265, V267, V268]
Exit stack: [S8, V249, V249, V254, V255, V253, V265, V267, V268]

================================

Block 0x364
[0x364:0x376]
---
Predecessors: []
Successors: [0x1b4, 0x377]
---
0x364 JUMPDEST
0x365 POP
0x366 POP
0x367 POP
0x368 SWAP1
0x369 POP
0x36a SWAP1
0x36b DUP2
0x36c ADD
0x36d SWAP1
0x36e PUSH1 0x1f
0x370 AND
0x371 DUP1
0x372 ISZERO
0x373 PUSH2 0x1b4
0x376 JUMPI
---
0x364: JUMPDEST 
0x36c: V270 = ADD S3 S5
0x36e: V271 = 0x1f
0x370: V272 = AND 0x1f S3
0x372: V273 = ISZERO V272
0x373: V274 = 0x1b4
0x376: JUMPI 0x1b4 V273
---
Entry stack: []
Stack pops: 6
Stack additions: [V270, V272]
Exit stack: [V270, V272]

================================

Block 0x377
[0x377:0x38f]
---
Predecessors: [0x364]
Successors: [0x390]
---
0x377 DUP1
0x378 DUP3
0x379 SUB
0x37a DUP1
0x37b MLOAD
0x37c PUSH1 0x1
0x37e DUP4
0x37f PUSH1 0x20
0x381 SUB
0x382 PUSH2 0x100
0x385 EXP
0x386 SUB
0x387 NOT
0x388 AND
0x389 DUP2
0x38a MSTORE
0x38b PUSH1 0x20
0x38d ADD
0x38e SWAP2
0x38f POP
---
0x379: V275 = SUB V270 V272
0x37b: V276 = M[V275]
0x37c: V277 = 0x1
0x37f: V278 = 0x20
0x381: V279 = SUB 0x20 V272
0x382: V280 = 0x100
0x385: V281 = EXP 0x100 V279
0x386: V282 = SUB V281 0x1
0x387: V283 = NOT V282
0x388: V284 = AND V283 V276
0x38a: M[V275] = V284
0x38b: V285 = 0x20
0x38d: V286 = ADD 0x20 V275
---
Entry stack: [V270, V272]
Stack pops: 2
Stack additions: [V286, S0]
Exit stack: [V286, V272]

================================

Block 0x390
[0x390:0x39d]
---
Predecessors: [0x377]
Successors: []
---
0x390 JUMPDEST
0x391 POP
0x392 SWAP3
0x393 POP
0x394 POP
0x395 POP
0x396 PUSH1 0x40
0x398 MLOAD
0x399 DUP1
0x39a SWAP2
0x39b SUB
0x39c SWAP1
0x39d RETURN
---
0x390: JUMPDEST 
0x396: V287 = 0x40
0x398: V288 = M[0x40]
0x39b: V289 = SUB V286 V288
0x39d: RETURN V288 V289
---
Entry stack: [V286, V272]
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0x39e
[0x39e:0x3a4]
---
Predecessors: [0xd8]
Successors: [0x3a5, 0x3a6]
---
0x39e JUMPDEST
0x39f CALLVALUE
0x3a0 ISZERO
0x3a1 PUSH2 0x3a6
0x3a4 JUMPI
---
0x39e: JUMPDEST 
0x39f: V290 = CALLVALUE
0x3a0: V291 = ISZERO V290
0x3a1: V292 = 0x3a6
0x3a4: JUMPI 0x3a6 V291
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3a5
[0x3a5:0x3a5]
---
Predecessors: [0x39e]
Successors: []
---
0x3a5 INVALID
---
0x3a5: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3a6
[0x3a6:0x3ad]
---
Predecessors: [0x39e]
Successors: [0xb31]
---
0x3a6 JUMPDEST
0x3a7 PUSH2 0x256
0x3aa PUSH2 0xb31
0x3ad JUMP
---
0x3a6: JUMPDEST 
0x3a7: V293 = 0x256
0x3aa: V294 = 0xb31
0x3ad: JUMP 0xb31
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x256]
Exit stack: [V10, 0x256]

================================

Block 0x3ae
[0x3ae:0x3c1]
---
Predecessors: []
Successors: []
---
0x3ae JUMPDEST
0x3af PUSH1 0x40
0x3b1 DUP1
0x3b2 MLOAD
0x3b3 SWAP2
0x3b4 ISZERO
0x3b5 ISZERO
0x3b6 DUP3
0x3b7 MSTORE
0x3b8 MLOAD
0x3b9 SWAP1
0x3ba DUP2
0x3bb SWAP1
0x3bc SUB
0x3bd PUSH1 0x20
0x3bf ADD
0x3c0 SWAP1
0x3c1 RETURN
---
0x3ae: JUMPDEST 
0x3af: V295 = 0x40
0x3b2: V296 = M[0x40]
0x3b4: V297 = ISZERO S0
0x3b5: V298 = ISZERO V297
0x3b7: M[V296] = V298
0x3b8: V299 = M[0x40]
0x3bc: V300 = SUB V296 V299
0x3bd: V301 = 0x20
0x3bf: V302 = ADD 0x20 V300
0x3c1: RETURN V299 V302
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3c2
[0x3c2:0x3c8]
---
Predecessors: [0xe3]
Successors: [0x3c9, 0x3ca]
---
0x3c2 JUMPDEST
0x3c3 CALLVALUE
0x3c4 ISZERO
0x3c5 PUSH2 0x3ca
0x3c8 JUMPI
---
0x3c2: JUMPDEST 
0x3c3: V303 = CALLVALUE
0x3c4: V304 = ISZERO V303
0x3c5: V305 = 0x3ca
0x3c8: JUMPI 0x3ca V304
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3c9
[0x3c9:0x3c9]
---
Predecessors: [0x3c2]
Successors: []
---
0x3c9 INVALID
---
0x3c9: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3ca
[0x3ca:0x3d1]
---
Predecessors: [0x3c2]
Successors: [0xb3a]
---
0x3ca JUMPDEST
0x3cb PUSH2 0x11e
0x3ce PUSH2 0xb3a
0x3d1 JUMP
---
0x3ca: JUMPDEST 
0x3cb: V306 = 0x11e
0x3ce: V307 = 0xb3a
0x3d1: JUMP 0xb3a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x11e]
Exit stack: [V10, 0x11e]

================================

Block 0x3d2
[0x3d2:0x3d3]
---
Predecessors: []
Successors: []
---
0x3d2 JUMPDEST
0x3d3 STOP
---
0x3d2: JUMPDEST 
0x3d3: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3d4
[0x3d4:0x3da]
---
Predecessors: [0xee]
Successors: [0x3db, 0x3dc]
---
0x3d4 JUMPDEST
0x3d5 CALLVALUE
0x3d6 ISZERO
0x3d7 PUSH2 0x3dc
0x3da JUMPI
---
0x3d4: JUMPDEST 
0x3d5: V308 = CALLVALUE
0x3d6: V309 = ISZERO V308
0x3d7: V310 = 0x3dc
0x3da: JUMPI 0x3dc V309
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3db
[0x3db:0x3db]
---
Predecessors: [0x3d4]
Successors: []
---
0x3db INVALID
---
0x3db: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3dc
[0x3dc:0x3f2]
---
Predecessors: [0x3d4]
Successors: [0xb8b]
---
0x3dc JUMPDEST
0x3dd PUSH2 0x11e
0x3e0 PUSH1 0x1
0x3e2 PUSH1 0xa0
0x3e4 PUSH1 0x2
0x3e6 EXP
0x3e7 SUB
0x3e8 PUSH1 0x4
0x3ea CALLDATALOAD
0x3eb AND
0x3ec PUSH1 0x24
0x3ee CALLDATALOAD
0x3ef PUSH2 0xb8b
0x3f2 JUMP
---
0x3dc: JUMPDEST 
0x3dd: V311 = 0x11e
0x3e0: V312 = 0x1
0x3e2: V313 = 0xa0
0x3e4: V314 = 0x2
0x3e6: V315 = EXP 0x2 0xa0
0x3e7: V316 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3e8: V317 = 0x4
0x3ea: V318 = CALLDATALOAD 0x4
0x3eb: V319 = AND V318 0xffffffffffffffffffffffffffffffffffffffff
0x3ec: V320 = 0x24
0x3ee: V321 = CALLDATALOAD 0x24
0x3ef: V322 = 0xb8b
0x3f2: JUMP 0xb8b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x11e, V319, V321]
Exit stack: [V10, 0x11e, V319, V321]

================================

Block 0x3f3
[0x3f3:0x3f4]
---
Predecessors: []
Successors: []
---
0x3f3 JUMPDEST
0x3f4 STOP
---
0x3f3: JUMPDEST 
0x3f4: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3f5
[0x3f5:0x3fb]
---
Predecessors: [0xf9]
Successors: [0x3fc, 0x3fd]
---
0x3f5 JUMPDEST
0x3f6 CALLVALUE
0x3f7 ISZERO
0x3f8 PUSH2 0x3fd
0x3fb JUMPI
---
0x3f5: JUMPDEST 
0x3f6: V323 = CALLVALUE
0x3f7: V324 = ISZERO V323
0x3f8: V325 = 0x3fd
0x3fb: JUMPI 0x3fd V324
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3fc
[0x3fc:0x3fc]
---
Predecessors: [0x3f5]
Successors: []
---
0x3fc INVALID
---
0x3fc: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3fd
[0x3fd:0x404]
---
Predecessors: [0x3f5]
Successors: [0xc46]
---
0x3fd JUMPDEST
0x3fe PUSH2 0x1de
0x401 PUSH2 0xc46
0x404 JUMP
---
0x3fd: JUMPDEST 
0x3fe: V326 = 0x1de
0x401: V327 = 0xc46
0x404: JUMP 0xc46
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1de]
Exit stack: [V10, 0x1de]

================================

Block 0x405
[0x405:0x416]
---
Predecessors: []
Successors: []
---
0x405 JUMPDEST
0x406 PUSH1 0x40
0x408 DUP1
0x409 MLOAD
0x40a SWAP2
0x40b DUP3
0x40c MSTORE
0x40d MLOAD
0x40e SWAP1
0x40f DUP2
0x410 SWAP1
0x411 SUB
0x412 PUSH1 0x20
0x414 ADD
0x415 SWAP1
0x416 RETURN
---
0x405: JUMPDEST 
0x406: V328 = 0x40
0x409: V329 = M[0x40]
0x40c: M[V329] = S0
0x40d: V330 = M[0x40]
0x411: V331 = SUB V329 V330
0x412: V332 = 0x20
0x414: V333 = ADD 0x20 V331
0x416: RETURN V330 V333
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x417
[0x417:0x41d]
---
Predecessors: [0x104]
Successors: [0x41e, 0x41f]
---
0x417 JUMPDEST
0x418 CALLVALUE
0x419 ISZERO
0x41a PUSH2 0x41f
0x41d JUMPI
---
0x417: JUMPDEST 
0x418: V334 = CALLVALUE
0x419: V335 = ISZERO V334
0x41a: V336 = 0x41f
0x41d: JUMPI 0x41f V335
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x41e
[0x41e:0x41e]
---
Predecessors: [0x417]
Successors: []
---
0x41e INVALID
---
0x41e: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x41f
[0x41f:0x426]
---
Predecessors: [0x417]
Successors: [0xc4c]
---
0x41f JUMPDEST
0x420 PUSH2 0x427
0x423 PUSH2 0xc4c
0x426 JUMP
---
0x41f: JUMPDEST 
0x420: V337 = 0x427
0x423: V338 = 0xc4c
0x426: JUMP 0xc4c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x427]
Exit stack: [V10, 0x427]

================================

Block 0x427
[0x427:0x442]
---
Predecessors: [0xc4c]
Successors: []
---
0x427 JUMPDEST
0x428 PUSH1 0x40
0x42a DUP1
0x42b MLOAD
0x42c PUSH1 0x1
0x42e PUSH1 0xa0
0x430 PUSH1 0x2
0x432 EXP
0x433 SUB
0x434 SWAP1
0x435 SWAP3
0x436 AND
0x437 DUP3
0x438 MSTORE
0x439 MLOAD
0x43a SWAP1
0x43b DUP2
0x43c SWAP1
0x43d SUB
0x43e PUSH1 0x20
0x440 ADD
0x441 SWAP1
0x442 RETURN
---
0x427: JUMPDEST 
0x428: V339 = 0x40
0x42b: V340 = M[0x40]
0x42c: V341 = 0x1
0x42e: V342 = 0xa0
0x430: V343 = 0x2
0x432: V344 = EXP 0x2 0xa0
0x433: V345 = SUB 0x10000000000000000000000000000000000000000 0x1
0x436: V346 = AND V1089 0xffffffffffffffffffffffffffffffffffffffff
0x438: M[V340] = V346
0x439: V347 = M[0x40]
0x43d: V348 = SUB V340 V347
0x43e: V349 = 0x20
0x440: V350 = ADD 0x20 V348
0x442: RETURN V347 V350
---
Entry stack: [V10, 0x427, V1089]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x427]

================================

Block 0x443
[0x443:0x451]
---
Predecessors: [0x113, 0x26a]
Successors: [0x452, 0x598]
---
0x443 JUMPDEST
0x444 PUSH7 0x38d7ea4c68000
0x44c CALLVALUE
0x44d GT
0x44e PUSH2 0x598
0x451 JUMPI
---
0x443: JUMPDEST 
0x444: V351 = 0x38d7ea4c68000
0x44c: V352 = CALLVALUE
0x44d: V353 = GT V352 0x38d7ea4c68000
0x44e: V354 = 0x598
0x451: JUMPI 0x598 V353
---
Entry stack: [V10, S1, {0x11b, 0x11e}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0x11b, 0x11e}]

================================

Block 0x452
[0x452:0x45c]
---
Predecessors: [0x443]
Successors: [0x45d, 0x58a]
---
0x452 PUSH1 0x3
0x454 SLOAD
0x455 PUSH1 0xff
0x457 AND
0x458 ISZERO
0x459 PUSH2 0x58a
0x45c JUMPI
---
0x452: V355 = 0x3
0x454: V356 = S[0x3]
0x455: V357 = 0xff
0x457: V358 = AND 0xff V356
0x458: V359 = ISZERO V358
0x459: V360 = 0x58a
0x45c: JUMPI 0x58a V359
---
Entry stack: [V10, S1, {0x11b, 0x11e}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0x11b, 0x11e}]

================================

Block 0x45d
[0x45d:0x4be]
---
Predecessors: [0x452]
Successors: [0x4bf, 0x4c0]
---
0x45d PUSH1 0x11
0x45f SLOAD
0x460 PUSH1 0x40
0x462 DUP1
0x463 MLOAD
0x464 PUSH1 0x0
0x466 PUSH1 0x20
0x468 SWAP2
0x469 DUP3
0x46a ADD
0x46b DUP2
0x46c SWAP1
0x46d MSTORE
0x46e DUP3
0x46f MLOAD
0x470 PUSH32 0xec81b48300000000000000000000000000000000000000000000000000000000
0x491 DUP2
0x492 MSTORE
0x493 SWAP3
0x494 MLOAD
0x495 PUSH1 0x1
0x497 PUSH1 0xa0
0x499 PUSH1 0x2
0x49b EXP
0x49c SUB
0x49d SWAP1
0x49e SWAP5
0x49f AND
0x4a0 SWAP4
0x4a1 PUSH4 0xec81b483
0x4a6 SWAP4
0x4a7 PUSH1 0x4
0x4a9 DUP1
0x4aa DUP3
0x4ab ADD
0x4ac SWAP5
0x4ad SWAP4
0x4ae SWAP2
0x4af DUP4
0x4b0 SWAP1
0x4b1 SUB
0x4b2 ADD
0x4b3 SWAP1
0x4b4 DUP3
0x4b5 SWAP1
0x4b6 DUP8
0x4b7 DUP1
0x4b8 EXTCODESIZE
0x4b9 ISZERO
0x4ba ISZERO
0x4bb PUSH2 0x4c0
0x4be JUMPI
---
0x45d: V361 = 0x11
0x45f: V362 = S[0x11]
0x460: V363 = 0x40
0x463: V364 = M[0x40]
0x464: V365 = 0x0
0x466: V366 = 0x20
0x46a: V367 = ADD 0x20 V364
0x46d: M[V367] = 0x0
0x46f: V368 = M[0x40]
0x470: V369 = 0xec81b48300000000000000000000000000000000000000000000000000000000
0x492: M[V368] = 0xec81b48300000000000000000000000000000000000000000000000000000000
0x494: V370 = M[0x40]
0x495: V371 = 0x1
0x497: V372 = 0xa0
0x499: V373 = 0x2
0x49b: V374 = EXP 0x2 0xa0
0x49c: V375 = SUB 0x10000000000000000000000000000000000000000 0x1
0x49f: V376 = AND V362 0xffffffffffffffffffffffffffffffffffffffff
0x4a1: V377 = 0xec81b483
0x4a7: V378 = 0x4
0x4ab: V379 = ADD V368 0x4
0x4b1: V380 = SUB V368 V370
0x4b2: V381 = ADD V380 0x4
0x4b8: V382 = EXTCODESIZE V376
0x4b9: V383 = ISZERO V382
0x4ba: V384 = ISZERO V383
0x4bb: V385 = 0x4c0
0x4be: JUMPI 0x4c0 V384
---
Entry stack: [V10, S1, {0x11b, 0x11e}]
Stack pops: 0
Stack additions: [V376, 0xec81b483, V379, 0x20, V370, V381, V370, 0x0, V376]
Exit stack: [V10, S1, {0x11b, 0x11e}, V376, 0xec81b483, V379, 0x20, V370, V381, V370, 0x0, V376]

================================

Block 0x4bf
[0x4bf:0x4bf]
---
Predecessors: [0x45d]
Successors: []
---
0x4bf INVALID
---
0x4bf: INVALID 
---
Entry stack: [V10, S10, {0x11b, 0x11e}, V376, 0xec81b483, V379, 0x20, V370, V381, V370, 0x0, V376]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S10, {0x11b, 0x11e}, V376, 0xec81b483, V379, 0x20, V370, V381, V370, 0x0, V376]

================================

Block 0x4c0
[0x4c0:0x4cc]
---
Predecessors: [0x45d]
Successors: [0x4cd, 0x4ce]
---
0x4c0 JUMPDEST
0x4c1 PUSH2 0x2c6
0x4c4 GAS
0x4c5 SUB
0x4c6 CALL
0x4c7 ISZERO
0x4c8 ISZERO
0x4c9 PUSH2 0x4ce
0x4cc JUMPI
---
0x4c0: JUMPDEST 
0x4c1: V386 = 0x2c6
0x4c4: V387 = GAS
0x4c5: V388 = SUB V387 0x2c6
0x4c6: V389 = CALL V388 V376 0x0 V370 V381 V370 0x20
0x4c7: V390 = ISZERO V389
0x4c8: V391 = ISZERO V390
0x4c9: V392 = 0x4ce
0x4cc: JUMPI 0x4ce V391
---
Entry stack: [V10, S10, {0x11b, 0x11e}, V376, 0xec81b483, V379, 0x20, V370, V381, V370, 0x0, V376]
Stack pops: 6
Stack additions: []
Exit stack: [V10, S10, {0x11b, 0x11e}, V376, 0xec81b483, V379]

================================

Block 0x4cd
[0x4cd:0x4cd]
---
Predecessors: [0x4c0]
Successors: []
---
0x4cd INVALID
---
0x4cd: INVALID 
---
Entry stack: [V10, S4, {0x11b, 0x11e}, V376, 0xec81b483, V379]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, {0x11b, 0x11e}, V376, 0xec81b483, V379]

================================

Block 0x4ce
[0x4ce:0x539]
---
Predecessors: [0x4c0]
Successors: [0x53a, 0x53b]
---
0x4ce JUMPDEST
0x4cf POP
0x4d0 POP
0x4d1 PUSH1 0x40
0x4d3 DUP1
0x4d4 MLOAD
0x4d5 DUP1
0x4d6 MLOAD
0x4d7 PUSH1 0x11
0x4d9 SLOAD
0x4da PUSH1 0x0
0x4dc PUSH1 0x20
0x4de SWAP4
0x4df DUP5
0x4e0 ADD
0x4e1 DUP2
0x4e2 SWAP1
0x4e3 MSTORE
0x4e4 DUP5
0x4e5 MLOAD
0x4e6 PUSH32 0xa4625af00000000000000000000000000000000000000000000000000000000
0x507 DUP2
0x508 MSTORE
0x509 SWAP5
0x50a MLOAD
0x50b SWAP3
0x50c SWAP6
0x50d POP
0x50e PUSH1 0x1
0x510 PUSH1 0xa0
0x512 PUSH1 0x2
0x514 EXP
0x515 SUB
0x516 SWAP1
0x517 SWAP2
0x518 AND
0x519 SWAP4
0x51a PUSH4 0xa4625af
0x51f SWAP4
0x520 PUSH1 0x4
0x522 DUP1
0x523 DUP4
0x524 ADD
0x525 SWAP5
0x526 SWAP2
0x527 SWAP4
0x528 SWAP2
0x529 SWAP3
0x52a DUP4
0x52b SWAP1
0x52c SUB
0x52d ADD
0x52e SWAP1
0x52f DUP3
0x530 SWAP1
0x531 DUP8
0x532 DUP1
0x533 EXTCODESIZE
0x534 ISZERO
0x535 ISZERO
0x536 PUSH2 0x53b
0x539 JUMPI
---
0x4ce: JUMPDEST 
0x4d1: V393 = 0x40
0x4d4: V394 = M[0x40]
0x4d6: V395 = M[V394]
0x4d7: V396 = 0x11
0x4d9: V397 = S[0x11]
0x4da: V398 = 0x0
0x4dc: V399 = 0x20
0x4e0: V400 = ADD 0x20 V394
0x4e3: M[V400] = 0x0
0x4e5: V401 = M[0x40]
0x4e6: V402 = 0xa4625af00000000000000000000000000000000000000000000000000000000
0x508: M[V401] = 0xa4625af00000000000000000000000000000000000000000000000000000000
0x50a: V403 = M[0x40]
0x50e: V404 = 0x1
0x510: V405 = 0xa0
0x512: V406 = 0x2
0x514: V407 = EXP 0x2 0xa0
0x515: V408 = SUB 0x10000000000000000000000000000000000000000 0x1
0x518: V409 = AND V397 0xffffffffffffffffffffffffffffffffffffffff
0x51a: V410 = 0xa4625af
0x520: V411 = 0x4
0x524: V412 = ADD V401 0x4
0x52c: V413 = SUB V401 V403
0x52d: V414 = ADD V413 0x4
0x533: V415 = EXTCODESIZE V409
0x534: V416 = ISZERO V415
0x535: V417 = ISZERO V416
0x536: V418 = 0x53b
0x539: JUMPI 0x53b V417
---
Entry stack: [V10, S4, {0x11b, 0x11e}, V376, 0xec81b483, V379]
Stack pops: 3
Stack additions: [V395, V409, 0xa4625af, V412, 0x20, V403, V414, V403, 0x0, V409]
Exit stack: [V10, S4, {0x11b, 0x11e}, V395, V409, 0xa4625af, V412, 0x20, V403, V414, V403, 0x0, V409]

================================

Block 0x53a
[0x53a:0x53a]
---
Predecessors: [0x4ce]
Successors: []
---
0x53a INVALID
---
0x53a: INVALID 
---
Entry stack: [V10, S11, {0x11b, 0x11e}, V395, V409, 0xa4625af, V412, 0x20, V403, V414, V403, 0x0, V409]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S11, {0x11b, 0x11e}, V395, V409, 0xa4625af, V412, 0x20, V403, V414, V403, 0x0, V409]

================================

Block 0x53b
[0x53b:0x547]
---
Predecessors: [0x4ce]
Successors: [0x548, 0x549]
---
0x53b JUMPDEST
0x53c PUSH2 0x2c6
0x53f GAS
0x540 SUB
0x541 CALL
0x542 ISZERO
0x543 ISZERO
0x544 PUSH2 0x549
0x547 JUMPI
---
0x53b: JUMPDEST 
0x53c: V419 = 0x2c6
0x53f: V420 = GAS
0x540: V421 = SUB V420 0x2c6
0x541: V422 = CALL V421 V409 0x0 V403 V414 V403 0x20
0x542: V423 = ISZERO V422
0x543: V424 = ISZERO V423
0x544: V425 = 0x549
0x547: JUMPI 0x549 V424
---
Entry stack: [V10, S11, {0x11b, 0x11e}, V395, V409, 0xa4625af, V412, 0x20, V403, V414, V403, 0x0, V409]
Stack pops: 6
Stack additions: []
Exit stack: [V10, S11, {0x11b, 0x11e}, V395, V409, 0xa4625af, V412]

================================

Block 0x548
[0x548:0x548]
---
Predecessors: [0x53b]
Successors: []
---
0x548 INVALID
---
0x548: INVALID 
---
Entry stack: [V10, S5, {0x11b, 0x11e}, V395, V409, 0xa4625af, V412]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, {0x11b, 0x11e}, V395, V409, 0xa4625af, V412]

================================

Block 0x549
[0x549:0x559]
---
Predecessors: [0x53b]
Successors: [0x55a, 0x55f]
---
0x549 JUMPDEST
0x54a POP
0x54b POP
0x54c PUSH1 0x40
0x54e MLOAD
0x54f MLOAD
0x550 SWAP2
0x551 SWAP1
0x552 SWAP2
0x553 LT
0x554 SWAP1
0x555 POP
0x556 PUSH2 0x55f
0x559 JUMPI
---
0x549: JUMPDEST 
0x54c: V426 = 0x40
0x54e: V427 = M[0x40]
0x54f: V428 = M[V427]
0x553: V429 = LT V428 V395
0x556: V430 = 0x55f
0x559: JUMPI 0x55f V429
---
Entry stack: [V10, S5, {0x11b, 0x11e}, V395, V409, 0xa4625af, V412]
Stack pops: 4
Stack additions: []
Exit stack: [V10, S5, {0x11b, 0x11e}]

================================

Block 0x55a
[0x55a:0x55e]
---
Predecessors: [0x549]
Successors: []
---
0x55a PUSH1 0x0
0x55c PUSH1 0x0
0x55e REVERT
---
0x55a: V431 = 0x0
0x55c: V432 = 0x0
0x55e: REVERT 0x0 0x0
---
Entry stack: [V10, S1, {0x11b, 0x11e}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0x11b, 0x11e}]

================================

Block 0x55f
[0x55f:0x589]
---
Predecessors: [0x549]
Successors: [0x592]
---
0x55f JUMPDEST
0x560 PUSH1 0x1
0x562 PUSH1 0xa0
0x564 PUSH1 0x2
0x566 EXP
0x567 SUB
0x568 CALLER
0x569 AND
0x56a PUSH1 0x0
0x56c SWAP1
0x56d DUP2
0x56e MSTORE
0x56f PUSH1 0x1
0x571 PUSH1 0x20
0x573 DUP2
0x574 SWAP1
0x575 MSTORE
0x576 PUSH1 0x40
0x578 SWAP1
0x579 SWAP2
0x57a SHA3
0x57b DUP1
0x57c SLOAD
0x57d PUSH1 0xff
0x57f NOT
0x580 AND
0x581 SWAP1
0x582 SWAP2
0x583 OR
0x584 SWAP1
0x585 SSTORE
0x586 PUSH2 0x592
0x589 JUMP
---
0x55f: JUMPDEST 
0x560: V433 = 0x1
0x562: V434 = 0xa0
0x564: V435 = 0x2
0x566: V436 = EXP 0x2 0xa0
0x567: V437 = SUB 0x10000000000000000000000000000000000000000 0x1
0x568: V438 = CALLER
0x569: V439 = AND V438 0xffffffffffffffffffffffffffffffffffffffff
0x56a: V440 = 0x0
0x56e: M[0x0] = V439
0x56f: V441 = 0x1
0x571: V442 = 0x20
0x575: M[0x20] = 0x1
0x576: V443 = 0x40
0x57a: V444 = SHA3 0x0 0x40
0x57c: V445 = S[V444]
0x57d: V446 = 0xff
0x57f: V447 = NOT 0xff
0x580: V448 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V445
0x583: V449 = OR 0x1 V448
0x585: S[V444] = V449
0x586: V450 = 0x592
0x589: JUMP 0x592
---
Entry stack: [V10, S1, {0x11b, 0x11e}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0x11b, 0x11e}]

================================

Block 0x58a
[0x58a:0x591]
---
Predecessors: [0x452]
Successors: [0x7d7]
---
0x58a JUMPDEST
0x58b PUSH2 0x592
0x58e PUSH2 0x7d7
0x591 JUMP
---
0x58a: JUMPDEST 
0x58b: V451 = 0x592
0x58e: V452 = 0x7d7
0x591: JUMP 0x7d7
---
Entry stack: [V10, S1, {0x11b, 0x11e}]
Stack pops: 0
Stack additions: [0x592]
Exit stack: [V10, S1, {0x11b, 0x11e}, 0x592]

================================

Block 0x592
[0x592:0x592]
---
Predecessors: [0x55f, 0x6ac, 0x9a7]
Successors: [0x593]
---
0x592 JUMPDEST
---
0x592: JUMPDEST 
---
Entry stack: [V10, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, S0]

================================

Block 0x593
[0x593:0x597]
---
Predecessors: [0x592]
Successors: [0x11b]
---
0x593 JUMPDEST
0x594 PUSH2 0x11b
0x597 JUMP
---
0x593: JUMPDEST 
0x594: V453 = 0x11b
0x597: JUMP 0x11b
---
Entry stack: [V10, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, S0]

================================

Block 0x598
[0x598:0x5a3]
---
Predecessors: [0x443]
Successors: [0x5a4, 0x5a9]
---
0x598 JUMPDEST
0x599 PUSH1 0x5
0x59b SLOAD
0x59c PUSH1 0xff
0x59e AND
0x59f ISZERO
0x5a0 PUSH2 0x5a9
0x5a3 JUMPI
---
0x598: JUMPDEST 
0x599: V454 = 0x5
0x59b: V455 = S[0x5]
0x59c: V456 = 0xff
0x59e: V457 = AND 0xff V455
0x59f: V458 = ISZERO V457
0x5a0: V459 = 0x5a9
0x5a3: JUMPI 0x5a9 V458
---
Entry stack: [V10, S1, {0x11b, 0x11e}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0x11b, 0x11e}]

================================

Block 0x5a4
[0x5a4:0x5a8]
---
Predecessors: [0x598]
Successors: []
---
0x5a4 PUSH1 0x0
0x5a6 PUSH1 0x0
0x5a8 REVERT
---
0x5a4: V460 = 0x0
0x5a6: V461 = 0x0
0x5a8: REVERT 0x0 0x0
---
Entry stack: [V10, S1, {0x11b, 0x11e}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0x11b, 0x11e}]

================================

Block 0x5a9
[0x5a9:0x5b4]
---
Predecessors: [0x598]
Successors: [0x5b5, 0x5ba]
---
0x5a9 JUMPDEST
0x5aa PUSH1 0x3
0x5ac SLOAD
0x5ad PUSH1 0xff
0x5af AND
0x5b0 ISZERO
0x5b1 PUSH2 0x5ba
0x5b4 JUMPI
---
0x5a9: JUMPDEST 
0x5aa: V462 = 0x3
0x5ac: V463 = S[0x3]
0x5ad: V464 = 0xff
0x5af: V465 = AND 0xff V463
0x5b0: V466 = ISZERO V465
0x5b1: V467 = 0x5ba
0x5b4: JUMPI 0x5ba V466
---
Entry stack: [V10, S1, {0x11b, 0x11e}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0x11b, 0x11e}]

================================

Block 0x5b5
[0x5b5:0x5b9]
---
Predecessors: [0x5a9]
Successors: []
---
0x5b5 PUSH1 0x0
0x5b7 PUSH1 0x0
0x5b9 REVERT
---
0x5b5: V468 = 0x0
0x5b7: V469 = 0x0
0x5b9: REVERT 0x0 0x0
---
Entry stack: [V10, S1, {0x11b, 0x11e}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0x11b, 0x11e}]

================================

Block 0x5ba
[0x5ba:0x5d8]
---
Predecessors: [0x5a9]
Successors: [0x5d9]
---
0x5ba JUMPDEST
0x5bb PUSH1 0x1
0x5bd PUSH1 0xa0
0x5bf PUSH1 0x2
0x5c1 EXP
0x5c2 SUB
0x5c3 CALLER
0x5c4 AND
0x5c5 PUSH1 0x0
0x5c7 SWAP1
0x5c8 DUP2
0x5c9 MSTORE
0x5ca PUSH1 0x20
0x5cc DUP2
0x5cd SWAP1
0x5ce MSTORE
0x5cf PUSH1 0x40
0x5d1 SWAP1
0x5d2 SHA3
0x5d3 DUP1
0x5d4 SLOAD
0x5d5 CALLVALUE
0x5d6 ADD
0x5d7 SWAP1
0x5d8 SSTORE
---
0x5ba: JUMPDEST 
0x5bb: V470 = 0x1
0x5bd: V471 = 0xa0
0x5bf: V472 = 0x2
0x5c1: V473 = EXP 0x2 0xa0
0x5c2: V474 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5c3: V475 = CALLER
0x5c4: V476 = AND V475 0xffffffffffffffffffffffffffffffffffffffff
0x5c5: V477 = 0x0
0x5c9: M[0x0] = V476
0x5ca: V478 = 0x20
0x5ce: M[0x20] = 0x0
0x5cf: V479 = 0x40
0x5d2: V480 = SHA3 0x0 0x40
0x5d4: V481 = S[V480]
0x5d5: V482 = CALLVALUE
0x5d6: V483 = ADD V482 V481
0x5d8: S[V480] = V483
---
Entry stack: [V10, S1, {0x11b, 0x11e}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0x11b, 0x11e}]

================================

Block 0x5d9
[0x5d9:0x5d9]
---
Predecessors: [0x5ba]
Successors: [0x5da]
---
0x5d9 JUMPDEST
---
0x5d9: JUMPDEST 
---
Entry stack: [V10, S1, {0x11b, 0x11e}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0x11b, 0x11e}]

================================

Block 0x5da
[0x5da:0x5db]
---
Predecessors: [0x5d9]
Successors: [0x11b, 0x11e]
---
0x5da JUMPDEST
0x5db JUMP
---
0x5da: JUMPDEST 
0x5db: JUMP {0x11b, 0x11e}
---
Entry stack: [V10, S1, {0x11b, 0x11e}]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x5dc
[0x5dc:0x5e7]
---
Predecessors: [0x128]
Successors: [0x5e8, 0x5ec]
---
0x5dc JUMPDEST
0x5dd PUSH1 0x3
0x5df SLOAD
0x5e0 PUSH1 0xff
0x5e2 AND
0x5e3 ISZERO
0x5e4 PUSH2 0x5ec
0x5e7 JUMPI
---
0x5dc: JUMPDEST 
0x5dd: V484 = 0x3
0x5df: V485 = S[0x3]
0x5e0: V486 = 0xff
0x5e2: V487 = AND 0xff V485
0x5e3: V488 = ISZERO V487
0x5e4: V489 = 0x5ec
0x5e7: JUMPI 0x5ec V488
---
Entry stack: [V10, 0x11e]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x11e]

================================

Block 0x5e8
[0x5e8:0x5eb]
---
Predecessors: [0x5dc]
Successors: [0x11b]
---
0x5e8 PUSH2 0x11b
0x5eb JUMP
---
0x5e8: V490 = 0x11b
0x5eb: JUMP 0x11b
---
Entry stack: [V10, 0x11e]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x11e]

================================

Block 0x5ec
[0x5ec:0x5f7]
---
Predecessors: [0x5dc]
Successors: [0x5f8, 0x5fd]
---
0x5ec JUMPDEST
0x5ed PUSH1 0x5
0x5ef SLOAD
0x5f0 PUSH1 0xff
0x5f2 AND
0x5f3 ISZERO
0x5f4 PUSH2 0x5fd
0x5f7 JUMPI
---
0x5ec: JUMPDEST 
0x5ed: V491 = 0x5
0x5ef: V492 = S[0x5]
0x5f0: V493 = 0xff
0x5f2: V494 = AND 0xff V492
0x5f3: V495 = ISZERO V494
0x5f4: V496 = 0x5fd
0x5f7: JUMPI 0x5fd V495
---
Entry stack: [V10, 0x11e]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x11e]

================================

Block 0x5f8
[0x5f8:0x5fc]
---
Predecessors: [0x5ec]
Successors: []
---
0x5f8 PUSH1 0x0
0x5fa PUSH1 0x0
0x5fc REVERT
---
0x5f8: V497 = 0x0
0x5fa: V498 = 0x0
0x5fc: REVERT 0x0 0x0
---
Entry stack: [V10, 0x11e]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x11e]

================================

Block 0x5fd
[0x5fd:0x683]
---
Predecessors: [0x5ec]
Successors: [0x684, 0x685]
---
0x5fd JUMPDEST
0x5fe PUSH1 0x3
0x600 DUP1
0x601 SLOAD
0x602 PUSH1 0xff
0x604 NOT
0x605 AND
0x606 PUSH1 0x1
0x608 OR
0x609 SWAP1
0x60a SSTORE
0x60b PUSH3 0x15180
0x60f TIMESTAMP
0x610 ADD
0x611 PUSH1 0x4
0x613 SWAP1
0x614 DUP2
0x615 SSTORE
0x616 PUSH1 0x11
0x618 SLOAD
0x619 PUSH1 0x2
0x61b SLOAD
0x61c PUSH1 0x40
0x61e DUP1
0x61f MLOAD
0x620 PUSH32 0xf48c305400000000000000000000000000000000000000000000000000000000
0x641 DUP2
0x642 MSTORE
0x643 ADDRESS
0x644 PUSH1 0x1
0x646 PUSH1 0xa0
0x648 PUSH1 0x2
0x64a EXP
0x64b SUB
0x64c SWAP1
0x64d DUP2
0x64e AND
0x64f SWAP6
0x650 DUP3
0x651 ADD
0x652 DUP7
0x653 SWAP1
0x654 MSTORE
0x655 SWAP2
0x656 MLOAD
0x657 SWAP2
0x658 SWAP1
0x659 SWAP4
0x65a AND
0x65b SWAP4
0x65c PUSH4 0xf48c3054
0x661 SWAP4
0x662 SWAP1
0x663 BALANCE
0x664 SWAP3
0x665 SWAP1
0x666 SWAP3
0x667 SUB
0x668 SWAP2
0x669 PUSH1 0x24
0x66b DUP1
0x66c DUP3
0x66d ADD
0x66e SWAP3
0x66f PUSH1 0x0
0x671 SWAP3
0x672 SWAP1
0x673 SWAP2
0x674 SWAP1
0x675 DUP3
0x676 SWAP1
0x677 SUB
0x678 ADD
0x679 DUP2
0x67a DUP6
0x67b DUP9
0x67c DUP1
0x67d EXTCODESIZE
0x67e ISZERO
0x67f ISZERO
0x680 PUSH2 0x685
0x683 JUMPI
---
0x5fd: JUMPDEST 
0x5fe: V499 = 0x3
0x601: V500 = S[0x3]
0x602: V501 = 0xff
0x604: V502 = NOT 0xff
0x605: V503 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V500
0x606: V504 = 0x1
0x608: V505 = OR 0x1 V503
0x60a: S[0x3] = V505
0x60b: V506 = 0x15180
0x60f: V507 = TIMESTAMP
0x610: V508 = ADD V507 0x15180
0x611: V509 = 0x4
0x615: S[0x4] = V508
0x616: V510 = 0x11
0x618: V511 = S[0x11]
0x619: V512 = 0x2
0x61b: V513 = S[0x2]
0x61c: V514 = 0x40
0x61f: V515 = M[0x40]
0x620: V516 = 0xf48c305400000000000000000000000000000000000000000000000000000000
0x642: M[V515] = 0xf48c305400000000000000000000000000000000000000000000000000000000
0x643: V517 = ADDRESS
0x644: V518 = 0x1
0x646: V519 = 0xa0
0x648: V520 = 0x2
0x64a: V521 = EXP 0x2 0xa0
0x64b: V522 = SUB 0x10000000000000000000000000000000000000000 0x1
0x64e: V523 = AND 0xffffffffffffffffffffffffffffffffffffffff V517
0x651: V524 = ADD V515 0x4
0x654: M[V524] = V523
0x656: V525 = M[0x40]
0x65a: V526 = AND V511 0xffffffffffffffffffffffffffffffffffffffff
0x65c: V527 = 0xf48c3054
0x663: V528 = BALANCE V523
0x667: V529 = SUB V528 V513
0x669: V530 = 0x24
0x66d: V531 = ADD V515 0x24
0x66f: V532 = 0x0
0x677: V533 = SUB V515 V525
0x678: V534 = ADD V533 0x24
0x67d: V535 = EXTCODESIZE V526
0x67e: V536 = ISZERO V535
0x67f: V537 = ISZERO V536
0x680: V538 = 0x685
0x683: JUMPI 0x685 V537
---
Entry stack: [V10, 0x11e]
Stack pops: 0
Stack additions: [V526, 0xf48c3054, V529, V531, 0x0, V525, V534, V525, V529, V526]
Exit stack: [V10, 0x11e, V526, 0xf48c3054, V529, V531, 0x0, V525, V534, V525, V529, V526]

================================

Block 0x684
[0x684:0x684]
---
Predecessors: [0x5fd]
Successors: []
---
0x684 INVALID
---
0x684: INVALID 
---
Entry stack: [V10, 0x11e, V526, 0xf48c3054, V529, V531, 0x0, V525, V534, V525, V529, V526]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x11e, V526, 0xf48c3054, V529, V531, 0x0, V525, V534, V525, V529, V526]

================================

Block 0x685
[0x685:0x691]
---
Predecessors: [0x5fd]
Successors: [0x692, 0x693]
---
0x685 JUMPDEST
0x686 PUSH2 0x25ee
0x689 GAS
0x68a SUB
0x68b CALL
0x68c ISZERO
0x68d ISZERO
0x68e PUSH2 0x693
0x691 JUMPI
---
0x685: JUMPDEST 
0x686: V539 = 0x25ee
0x689: V540 = GAS
0x68a: V541 = SUB V540 0x25ee
0x68b: V542 = CALL V541 V526 V529 V525 V534 V525 0x0
0x68c: V543 = ISZERO V542
0x68d: V544 = ISZERO V543
0x68e: V545 = 0x693
0x691: JUMPI 0x693 V544
---
Entry stack: [V10, 0x11e, V526, 0xf48c3054, V529, V531, 0x0, V525, V534, V525, V529, V526]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x11e, V526, 0xf48c3054, V529, V531]

================================

Block 0x692
[0x692:0x692]
---
Predecessors: [0x685]
Successors: []
---
0x692 INVALID
---
0x692: INVALID 
---
Entry stack: [V10, 0x11e, V526, 0xf48c3054, V529, V531]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x11e, V526, 0xf48c3054, V529, V531]

================================

Block 0x693
[0x693:0x6ab]
---
Predecessors: [0x685]
Successors: [0x6ac, 0x6de]
---
0x693 JUMPDEST
0x694 POP
0x695 POP
0x696 POP
0x697 POP
0x698 PUSH1 0xe
0x69a SLOAD
0x69b ADDRESS
0x69c PUSH1 0x1
0x69e PUSH1 0xa0
0x6a0 PUSH1 0x2
0x6a2 EXP
0x6a3 SUB
0x6a4 AND
0x6a5 BALANCE
0x6a6 GT
0x6a7 ISZERO
0x6a8 PUSH2 0x6de
0x6ab JUMPI
---
0x693: JUMPDEST 
0x698: V546 = 0xe
0x69a: V547 = S[0xe]
0x69b: V548 = ADDRESS
0x69c: V549 = 0x1
0x69e: V550 = 0xa0
0x6a0: V551 = 0x2
0x6a2: V552 = EXP 0x2 0xa0
0x6a3: V553 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6a4: V554 = AND 0xffffffffffffffffffffffffffffffffffffffff V548
0x6a5: V555 = BALANCE V554
0x6a6: V556 = GT V555 V547
0x6a7: V557 = ISZERO V556
0x6a8: V558 = 0x6de
0x6ab: JUMPI 0x6de V557
---
Entry stack: [V10, 0x11e, V526, 0xf48c3054, V529, V531]
Stack pops: 4
Stack additions: []
Exit stack: [V10, 0x11e]

================================

Block 0x6ac
[0x6ac:0x6d7]
---
Predecessors: [0x693]
Successors: [0x592, 0x6d8]
---
0x6ac PUSH1 0x2
0x6ae SLOAD
0x6af PUSH1 0x40
0x6b1 MLOAD
0x6b2 PUSH1 0x1
0x6b4 PUSH1 0xa0
0x6b6 PUSH1 0x2
0x6b8 EXP
0x6b9 SUB
0x6ba CALLER
0x6bb AND
0x6bc SWAP2
0x6bd DUP1
0x6be ISZERO
0x6bf PUSH2 0x8fc
0x6c2 MUL
0x6c3 SWAP2
0x6c4 PUSH1 0x0
0x6c6 DUP2
0x6c7 DUP2
0x6c8 DUP2
0x6c9 DUP6
0x6ca DUP9
0x6cb DUP9
0x6cc CALL
0x6cd SWAP4
0x6ce POP
0x6cf POP
0x6d0 POP
0x6d1 POP
0x6d2 ISZERO
0x6d3 ISZERO
0x6d4 PUSH2 0x592
0x6d7 JUMPI
---
0x6ac: V559 = 0x2
0x6ae: V560 = S[0x2]
0x6af: V561 = 0x40
0x6b1: V562 = M[0x40]
0x6b2: V563 = 0x1
0x6b4: V564 = 0xa0
0x6b6: V565 = 0x2
0x6b8: V566 = EXP 0x2 0xa0
0x6b9: V567 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6ba: V568 = CALLER
0x6bb: V569 = AND V568 0xffffffffffffffffffffffffffffffffffffffff
0x6be: V570 = ISZERO V560
0x6bf: V571 = 0x8fc
0x6c2: V572 = MUL 0x8fc V570
0x6c4: V573 = 0x0
0x6cc: V574 = CALL V572 V569 V560 V562 0x0 V562 0x0
0x6d2: V575 = ISZERO V574
0x6d3: V576 = ISZERO V575
0x6d4: V577 = 0x592
0x6d7: JUMPI 0x592 V576
---
Entry stack: [V10, 0x11e]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x11e]

================================

Block 0x6d8
[0x6d8:0x6d8]
---
Predecessors: [0x6ac]
Successors: []
---
0x6d8 INVALID
---
0x6d8: INVALID 
---
Entry stack: [V10, 0x11e]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x11e]

================================

Block 0x6d9
[0x6d9:0x6dd]
---
Predecessors: []
Successors: [0x11b]
---
0x6d9 JUMPDEST
0x6da PUSH2 0x11b
0x6dd JUMP
---
0x6d9: JUMPDEST 
0x6da: V578 = 0x11b
0x6dd: JUMP 0x11b
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x6de
[0x6de:0x6fb]
---
Predecessors: [0x693]
Successors: [0x11b, 0x6fc]
---
0x6de JUMPDEST
0x6df PUSH3 0xbdd80
0x6e3 TIMESTAMP
0x6e4 ADD
0x6e5 PUSH1 0x4
0x6e7 SSTORE
0x6e8 PUSH1 0xe
0x6ea SLOAD
0x6eb PUSH1 0x1
0x6ed PUSH1 0xa0
0x6ef PUSH1 0x2
0x6f1 EXP
0x6f2 SUB
0x6f3 ADDRESS
0x6f4 AND
0x6f5 BALANCE
0x6f6 GT
0x6f7 ISZERO
0x6f8 PUSH2 0x11b
0x6fb JUMPI
---
0x6de: JUMPDEST 
0x6df: V579 = 0xbdd80
0x6e3: V580 = TIMESTAMP
0x6e4: V581 = ADD V580 0xbdd80
0x6e5: V582 = 0x4
0x6e7: S[0x4] = V581
0x6e8: V583 = 0xe
0x6ea: V584 = S[0xe]
0x6eb: V585 = 0x1
0x6ed: V586 = 0xa0
0x6ef: V587 = 0x2
0x6f1: V588 = EXP 0x2 0xa0
0x6f2: V589 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6f3: V590 = ADDRESS
0x6f4: V591 = AND V590 0xffffffffffffffffffffffffffffffffffffffff
0x6f5: V592 = BALANCE V591
0x6f6: V593 = GT V592 V584
0x6f7: V594 = ISZERO V593
0x6f8: V595 = 0x11b
0x6fb: JUMPI 0x11b V594
---
Entry stack: [V10, 0x11e]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x11e]

================================

Block 0x6fc
[0x6fc:0x727]
---
Predecessors: [0x6de]
Successors: [0x11b, 0x728]
---
0x6fc PUSH1 0x2
0x6fe SLOAD
0x6ff PUSH1 0x40
0x701 MLOAD
0x702 PUSH1 0x1
0x704 PUSH1 0xa0
0x706 PUSH1 0x2
0x708 EXP
0x709 SUB
0x70a CALLER
0x70b AND
0x70c SWAP2
0x70d DUP1
0x70e ISZERO
0x70f PUSH2 0x8fc
0x712 MUL
0x713 SWAP2
0x714 PUSH1 0x0
0x716 DUP2
0x717 DUP2
0x718 DUP2
0x719 DUP6
0x71a DUP9
0x71b DUP9
0x71c CALL
0x71d SWAP4
0x71e POP
0x71f POP
0x720 POP
0x721 POP
0x722 ISZERO
0x723 ISZERO
0x724 PUSH2 0x11b
0x727 JUMPI
---
0x6fc: V596 = 0x2
0x6fe: V597 = S[0x2]
0x6ff: V598 = 0x40
0x701: V599 = M[0x40]
0x702: V600 = 0x1
0x704: V601 = 0xa0
0x706: V602 = 0x2
0x708: V603 = EXP 0x2 0xa0
0x709: V604 = SUB 0x10000000000000000000000000000000000000000 0x1
0x70a: V605 = CALLER
0x70b: V606 = AND V605 0xffffffffffffffffffffffffffffffffffffffff
0x70e: V607 = ISZERO V597
0x70f: V608 = 0x8fc
0x712: V609 = MUL 0x8fc V607
0x714: V610 = 0x0
0x71c: V611 = CALL V609 V606 V597 V599 0x0 V599 0x0
0x722: V612 = ISZERO V611
0x723: V613 = ISZERO V612
0x724: V614 = 0x11b
0x727: JUMPI 0x11b V613
---
Entry stack: [V10, 0x11e]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x11e]

================================

Block 0x728
[0x728:0x728]
---
Predecessors: [0x6fc]
Successors: []
---
0x728 INVALID
---
0x728: INVALID 
---
Entry stack: [V10, 0x11e]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x11e]

================================

Block 0x729
[0x729:0x729]
---
Predecessors: []
Successors: [0x72a]
---
0x729 JUMPDEST
---
0x729: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x72a
[0x72a:0x72a]
---
Predecessors: [0x729]
Successors: [0x72b]
---
0x72a JUMPDEST
---
0x72a: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x72b
[0x72b:0x72b]
---
Predecessors: [0x72a]
Successors: [0x72c]
---
0x72b JUMPDEST
---
0x72b: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x72c
[0x72c:0x72d]
---
Predecessors: [0x72b]
Successors: []
Has unresolved jump.
---
0x72c JUMPDEST
0x72d JUMP
---
0x72c: JUMPDEST 
0x72d: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x72e
[0x72e:0x76d]
---
Predecessors: [0x13a]
Successors: [0x76e, 0x7b4]
---
0x72e JUMPDEST
0x72f PUSH1 0x6
0x731 DUP1
0x732 SLOAD
0x733 PUSH1 0x40
0x735 DUP1
0x736 MLOAD
0x737 PUSH1 0x20
0x739 PUSH1 0x2
0x73b PUSH1 0x1
0x73d DUP6
0x73e AND
0x73f ISZERO
0x740 PUSH2 0x100
0x743 MUL
0x744 PUSH1 0x0
0x746 NOT
0x747 ADD
0x748 SWAP1
0x749 SWAP5
0x74a AND
0x74b SWAP4
0x74c SWAP1
0x74d SWAP4
0x74e DIV
0x74f PUSH1 0x1f
0x751 DUP2
0x752 ADD
0x753 DUP5
0x754 SWAP1
0x755 DIV
0x756 DUP5
0x757 MUL
0x758 DUP3
0x759 ADD
0x75a DUP5
0x75b ADD
0x75c SWAP1
0x75d SWAP3
0x75e MSTORE
0x75f DUP2
0x760 DUP2
0x761 MSTORE
0x762 SWAP3
0x763 SWAP2
0x764 DUP4
0x765 ADD
0x766 DUP3
0x767 DUP3
0x768 DUP1
0x769 ISZERO
0x76a PUSH2 0x7b4
0x76d JUMPI
---
0x72e: JUMPDEST 
0x72f: V615 = 0x6
0x732: V616 = S[0x6]
0x733: V617 = 0x40
0x736: V618 = M[0x40]
0x737: V619 = 0x20
0x739: V620 = 0x2
0x73b: V621 = 0x1
0x73e: V622 = AND V616 0x1
0x73f: V623 = ISZERO V622
0x740: V624 = 0x100
0x743: V625 = MUL 0x100 V623
0x744: V626 = 0x0
0x746: V627 = NOT 0x0
0x747: V628 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V625
0x74a: V629 = AND V616 V628
0x74e: V630 = DIV V629 0x2
0x74f: V631 = 0x1f
0x752: V632 = ADD V630 0x1f
0x755: V633 = DIV V632 0x20
0x757: V634 = MUL 0x20 V633
0x759: V635 = ADD V618 V634
0x75b: V636 = ADD 0x20 V635
0x75e: M[0x40] = V636
0x761: M[V618] = V630
0x765: V637 = ADD V618 0x20
0x769: V638 = ISZERO V630
0x76a: V639 = 0x7b4
0x76d: JUMPI 0x7b4 V638
---
Entry stack: [V10, 0x142]
Stack pops: 0
Stack additions: [V618, 0x6, V630, V637, 0x6, V630]
Exit stack: [V10, 0x142, V618, 0x6, V630, V637, 0x6, V630]

================================

Block 0x76e
[0x76e:0x775]
---
Predecessors: [0x72e]
Successors: [0x776, 0x789]
---
0x76e DUP1
0x76f PUSH1 0x1f
0x771 LT
0x772 PUSH2 0x789
0x775 JUMPI
---
0x76f: V640 = 0x1f
0x771: V641 = LT 0x1f V630
0x772: V642 = 0x789
0x775: JUMPI 0x789 V641
---
Entry stack: [V10, 0x142, V618, 0x6, V630, V637, 0x6, V630]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x142, V618, 0x6, V630, V637, 0x6, V630]

================================

Block 0x776
[0x776:0x788]
---
Predecessors: [0x76e]
Successors: [0x7b4]
---
0x776 PUSH2 0x100
0x779 DUP1
0x77a DUP4
0x77b SLOAD
0x77c DIV
0x77d MUL
0x77e DUP4
0x77f MSTORE
0x780 SWAP2
0x781 PUSH1 0x20
0x783 ADD
0x784 SWAP2
0x785 PUSH2 0x7b4
0x788 JUMP
---
0x776: V643 = 0x100
0x77b: V644 = S[0x6]
0x77c: V645 = DIV V644 0x100
0x77d: V646 = MUL V645 0x100
0x77f: M[V637] = V646
0x781: V647 = 0x20
0x783: V648 = ADD 0x20 V637
0x785: V649 = 0x7b4
0x788: JUMP 0x7b4
---
Entry stack: [V10, 0x142, V618, 0x6, V630, V637, 0x6, V630]
Stack pops: 3
Stack additions: [V648, S1, S0]
Exit stack: [V10, 0x142, V618, 0x6, V630, V648, 0x6, V630]

================================

Block 0x789
[0x789:0x796]
---
Predecessors: [0x76e, 0xae3]
Successors: [0x797]
---
0x789 JUMPDEST
0x78a DUP3
0x78b ADD
0x78c SWAP2
0x78d SWAP1
0x78e PUSH1 0x0
0x790 MSTORE
0x791 PUSH1 0x20
0x793 PUSH1 0x0
0x795 SHA3
0x796 SWAP1
---
0x789: JUMPDEST 
0x78b: V650 = ADD S2 S0
0x78e: V651 = 0x0
0x790: M[0x0] = {0x6, 0x7}
0x791: V652 = 0x20
0x793: V653 = 0x0
0x795: V654 = SHA3 0x0 0x20
---
Entry stack: [V10, 0x142, S5, {0x6, 0x7}, S3, S2, {0x6, 0x7}, S0]
Stack pops: 3
Stack additions: [V650, V654, S2]
Exit stack: [V10, 0x142, S5, {0x6, 0x7}, S3, V650, V654, S2]

================================

Block 0x797
[0x797:0x7aa]
---
Predecessors: [0x789, 0x797, 0xb0c]
Successors: [0x797, 0x7ab]
---
0x797 JUMPDEST
0x798 DUP2
0x799 SLOAD
0x79a DUP2
0x79b MSTORE
0x79c SWAP1
0x79d PUSH1 0x1
0x79f ADD
0x7a0 SWAP1
0x7a1 PUSH1 0x20
0x7a3 ADD
0x7a4 DUP1
0x7a5 DUP4
0x7a6 GT
0x7a7 PUSH2 0x797
0x7aa JUMPI
---
0x797: JUMPDEST 
0x799: V655 = S[S1]
0x79b: M[S0] = V655
0x79d: V656 = 0x1
0x79f: V657 = ADD 0x1 S1
0x7a1: V658 = 0x20
0x7a3: V659 = ADD 0x20 S0
0x7a6: V660 = GT S2 V659
0x7a7: V661 = 0x797
0x7aa: JUMPI 0x797 V660
---
Entry stack: [V10, 0x142, S5, {0x6, 0x7}, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, V657, V659]
Exit stack: [V10, 0x142, S5, {0x6, 0x7}, S3, S2, V657, V659]

================================

Block 0x7ab
[0x7ab:0x7b3]
---
Predecessors: [0x797]
Successors: [0x7b4]
---
0x7ab DUP3
0x7ac SWAP1
0x7ad SUB
0x7ae PUSH1 0x1f
0x7b0 AND
0x7b1 DUP3
0x7b2 ADD
0x7b3 SWAP2
---
0x7ad: V662 = SUB V659 S2
0x7ae: V663 = 0x1f
0x7b0: V664 = AND 0x1f V662
0x7b2: V665 = ADD S2 V664
---
Entry stack: [V10, 0x142, S5, {0x6, 0x7}, S3, S2, V657, V659]
Stack pops: 3
Stack additions: [V665, S1, S2]
Exit stack: [V10, 0x142, S5, {0x6, 0x7}, S3, V665, V657, S2]

================================

Block 0x7b4
[0x7b4:0x7bb]
---
Predecessors: [0x72e, 0x776, 0x7ab, 0xaa3, 0xaeb]
Successors: [0x142]
---
0x7b4 JUMPDEST
0x7b5 POP
0x7b6 POP
0x7b7 POP
0x7b8 POP
0x7b9 POP
0x7ba DUP2
0x7bb JUMP
---
0x7b4: JUMPDEST 
0x7bb: JUMP 0x142
---
Entry stack: [V10, 0x142, S5, {0x6, 0x7}, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V10, 0x142, S5]

================================

Block 0x7bc
[0x7bc:0x7cd]
---
Predecessors: [0x1ca]
Successors: [0x1de]
---
0x7bc JUMPDEST
0x7bd PUSH1 0x0
0x7bf PUSH1 0x20
0x7c1 DUP2
0x7c2 SWAP1
0x7c3 MSTORE
0x7c4 SWAP1
0x7c5 DUP2
0x7c6 MSTORE
0x7c7 PUSH1 0x40
0x7c9 SWAP1
0x7ca SHA3
0x7cb SLOAD
0x7cc DUP2
0x7cd JUMP
---
0x7bc: JUMPDEST 
0x7bd: V666 = 0x0
0x7bf: V667 = 0x20
0x7c3: M[0x20] = 0x0
0x7c6: M[0x0] = V137
0x7c7: V668 = 0x40
0x7ca: V669 = SHA3 0x0 0x40
0x7cb: V670 = S[V669]
0x7cd: JUMP 0x1de
---
Entry stack: [V10, 0x1de, V137]
Stack pops: 2
Stack additions: [S1, V670]
Exit stack: [V10, 0x1de, V670]

================================

Block 0x7ce
[0x7ce:0x7d6]
---
Predecessors: [0x1f8]
Successors: [0x200]
---
0x7ce JUMPDEST
0x7cf PUSH1 0x8
0x7d1 SLOAD
0x7d2 PUSH1 0xff
0x7d4 AND
0x7d5 DUP2
0x7d6 JUMP
---
0x7ce: JUMPDEST 
0x7cf: V671 = 0x8
0x7d1: V672 = S[0x8]
0x7d2: V673 = 0xff
0x7d4: V674 = AND 0xff V672
0x7d6: JUMP 0x200
---
Entry stack: [V10, 0x200]
Stack pops: 1
Stack additions: [S0, V674]
Exit stack: [V10, 0x200, V674]

================================

Block 0x7d7
[0x7d7:0x7ea]
---
Predecessors: [0x21e, 0x58a]
Successors: [0x7eb, 0x831]
---
0x7d7 JUMPDEST
0x7d8 PUSH1 0x3
0x7da SLOAD
0x7db PUSH1 0x0
0x7dd SWAP1
0x7de DUP2
0x7df SWAP1
0x7e0 DUP2
0x7e1 SWAP1
0x7e2 PUSH1 0xff
0x7e4 AND
0x7e5 ISZERO
0x7e6 ISZERO
0x7e7 PUSH2 0x831
0x7ea JUMPI
---
0x7d7: JUMPDEST 
0x7d8: V675 = 0x3
0x7da: V676 = S[0x3]
0x7db: V677 = 0x0
0x7e2: V678 = 0xff
0x7e4: V679 = AND 0xff V676
0x7e5: V680 = ISZERO V679
0x7e6: V681 = ISZERO V680
0x7e7: V682 = 0x831
0x7ea: JUMPI 0x831 V681
---
Entry stack: [V10, S2, S1, {0x11e, 0x592}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V10, S2, S1, {0x11e, 0x592}, 0x0, 0x0, 0x0]

================================

Block 0x7eb
[0x7eb:0x82a]
---
Predecessors: [0x7d7]
Successors: [0x82b, 0x82c]
---
0x7eb PUSH1 0x1
0x7ed PUSH1 0xa0
0x7ef PUSH1 0x2
0x7f1 EXP
0x7f2 SUB
0x7f3 CALLER
0x7f4 AND
0x7f5 PUSH1 0x0
0x7f7 DUP2
0x7f8 DUP2
0x7f9 MSTORE
0x7fa PUSH1 0x20
0x7fc DUP2
0x7fd SWAP1
0x7fe MSTORE
0x7ff PUSH1 0x40
0x801 DUP1
0x802 DUP3
0x803 SHA3
0x804 DUP1
0x805 SLOAD
0x806 SWAP1
0x807 DUP4
0x808 SWAP1
0x809 SSTORE
0x80a SWAP1
0x80b MLOAD
0x80c SWAP1
0x80d SWAP6
0x80e POP
0x80f DUP6
0x810 ISZERO
0x811 PUSH2 0x8fc
0x814 MUL
0x815 SWAP2
0x816 DUP7
0x817 SWAP2
0x818 SWAP1
0x819 DUP2
0x81a DUP2
0x81b DUP2
0x81c DUP6
0x81d DUP9
0x81e DUP9
0x81f CALL
0x820 SWAP4
0x821 POP
0x822 POP
0x823 POP
0x824 POP
0x825 ISZERO
0x826 ISZERO
0x827 PUSH2 0x82c
0x82a JUMPI
---
0x7eb: V683 = 0x1
0x7ed: V684 = 0xa0
0x7ef: V685 = 0x2
0x7f1: V686 = EXP 0x2 0xa0
0x7f2: V687 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7f3: V688 = CALLER
0x7f4: V689 = AND V688 0xffffffffffffffffffffffffffffffffffffffff
0x7f5: V690 = 0x0
0x7f9: M[0x0] = V689
0x7fa: V691 = 0x20
0x7fe: M[0x20] = 0x0
0x7ff: V692 = 0x40
0x803: V693 = SHA3 0x0 0x40
0x805: V694 = S[V693]
0x809: S[V693] = 0x0
0x80b: V695 = M[0x40]
0x810: V696 = ISZERO V694
0x811: V697 = 0x8fc
0x814: V698 = MUL 0x8fc V696
0x81f: V699 = CALL V698 V689 V694 V695 0x0 V695 0x0
0x825: V700 = ISZERO V699
0x826: V701 = ISZERO V700
0x827: V702 = 0x82c
0x82a: JUMPI 0x82c V701
---
Entry stack: [V10, S5, S4, {0x11e, 0x592}, 0x0, 0x0, 0x0]
Stack pops: 3
Stack additions: [V694, S1, S0]
Exit stack: [V10, S5, S4, {0x11e, 0x592}, V694, 0x0, 0x0]

================================

Block 0x82b
[0x82b:0x82b]
---
Predecessors: [0x7eb]
Successors: []
---
0x82b INVALID
---
0x82b: INVALID 
---
Entry stack: [V10, S5, S4, {0x11e, 0x592}, V694, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, S4, {0x11e, 0x592}, V694, 0x0, 0x0]

================================

Block 0x82c
[0x82c:0x830]
---
Predecessors: [0x7eb]
Successors: [0x9a5]
---
0x82c JUMPDEST
0x82d PUSH2 0x9a5
0x830 JUMP
---
0x82c: JUMPDEST 
0x82d: V703 = 0x9a5
0x830: JUMP 0x9a5
---
Entry stack: [V10, S5, S4, {0x11e, 0x592}, V694, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, S4, {0x11e, 0x592}, V694, 0x0, 0x0]

================================

Block 0x831
[0x831:0x869]
---
Predecessors: [0x7d7]
Successors: [0x86a, 0x90c]
---
0x831 JUMPDEST
0x832 POP
0x833 POP
0x834 PUSH1 0x9
0x836 SLOAD
0x837 PUSH1 0x1
0x839 PUSH1 0xa0
0x83b PUSH1 0x2
0x83d EXP
0x83e SUB
0x83f CALLER
0x840 AND
0x841 PUSH1 0x0
0x843 SWAP1
0x844 DUP2
0x845 MSTORE
0x846 PUSH1 0x20
0x848 DUP2
0x849 DUP2
0x84a MSTORE
0x84b PUSH1 0x40
0x84d DUP1
0x84e DUP4
0x84f SHA3
0x850 DUP1
0x851 SLOAD
0x852 SWAP1
0x853 DUP5
0x854 SWAP1
0x855 SSTORE
0x856 PUSH1 0x1
0x858 SWAP1
0x859 SWAP3
0x85a MSTORE
0x85b DUP3
0x85c SHA3
0x85d SLOAD
0x85e SWAP3
0x85f MUL
0x860 SWAP2
0x861 PUSH1 0xff
0x863 AND
0x864 ISZERO
0x865 ISZERO
0x866 PUSH2 0x90c
0x869 JUMPI
---
0x831: JUMPDEST 
0x834: V704 = 0x9
0x836: V705 = S[0x9]
0x837: V706 = 0x1
0x839: V707 = 0xa0
0x83b: V708 = 0x2
0x83d: V709 = EXP 0x2 0xa0
0x83e: V710 = SUB 0x10000000000000000000000000000000000000000 0x1
0x83f: V711 = CALLER
0x840: V712 = AND V711 0xffffffffffffffffffffffffffffffffffffffff
0x841: V713 = 0x0
0x845: M[0x0] = V712
0x846: V714 = 0x20
0x84a: M[0x20] = 0x0
0x84b: V715 = 0x40
0x84f: V716 = SHA3 0x0 0x40
0x851: V717 = S[V716]
0x855: S[V716] = 0x0
0x856: V718 = 0x1
0x85a: M[0x20] = 0x1
0x85c: V719 = SHA3 0x0 0x40
0x85d: V720 = S[V719]
0x85f: V721 = MUL V705 V717
0x861: V722 = 0xff
0x863: V723 = AND 0xff V720
0x864: V724 = ISZERO V723
0x865: V725 = ISZERO V724
0x866: V726 = 0x90c
0x869: JUMPI 0x90c V725
---
Entry stack: [V10, S5, S4, {0x11e, 0x592}, 0x0, 0x0, 0x0]
Stack pops: 2
Stack additions: [V721, 0x0]
Exit stack: [V10, S5, S4, {0x11e, 0x592}, 0x0, V721, 0x0]

================================

Block 0x86a
[0x86a:0x86c]
---
Predecessors: [0x831]
Successors: [0x86d]
---
0x86a PUSH1 0x64
0x86c DUP3
---
0x86a: V727 = 0x64
---
Entry stack: [V10, S5, S4, {0x11e, 0x592}, 0x0, V721, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0x64, S1]
Exit stack: [V10, S5, S4, {0x11e, 0x592}, 0x0, V721, 0x0, 0x64, V721]

================================

Block 0x86d
[0x86d:0x8e8]
---
Predecessors: [0x86a]
Successors: [0x8e9, 0x8ea]
---
0x86d JUMPDEST
0x86e PUSH1 0x11
0x870 SLOAD
0x871 PUSH1 0x12
0x873 SLOAD
0x874 PUSH1 0x40
0x876 DUP1
0x877 MLOAD
0x878 PUSH1 0x0
0x87a PUSH1 0x20
0x87c SWAP2
0x87d DUP3
0x87e ADD
0x87f DUP2
0x880 SWAP1
0x881 MSTORE
0x882 DUP3
0x883 MLOAD
0x884 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x8a5 DUP2
0x8a6 MSTORE
0x8a7 PUSH1 0x1
0x8a9 PUSH1 0xa0
0x8ab PUSH1 0x2
0x8ad EXP
0x8ae SUB
0x8af SWAP5
0x8b0 DUP6
0x8b1 AND
0x8b2 PUSH1 0x4
0x8b4 DUP3
0x8b5 ADD
0x8b6 MSTORE
0x8b7 SWAP7
0x8b8 SWAP1
0x8b9 SWAP6
0x8ba DIV
0x8bb PUSH1 0x24
0x8bd DUP8
0x8be ADD
0x8bf DUP2
0x8c0 SWAP1
0x8c1 MSTORE
0x8c2 SWAP2
0x8c3 MLOAD
0x8c4 SWAP2
0x8c5 SWAP7
0x8c6 POP
0x8c7 SWAP2
0x8c8 SWAP1
0x8c9 SWAP3
0x8ca AND
0x8cb SWAP4
0x8cc PUSH4 0xa9059cbb
0x8d1 SWAP4
0x8d2 PUSH1 0x44
0x8d4 DUP1
0x8d5 DUP4
0x8d6 ADD
0x8d7 SWAP5
0x8d8 SWAP3
0x8d9 DUP4
0x8da SWAP1
0x8db SUB
0x8dc ADD
0x8dd SWAP1
0x8de DUP3
0x8df SWAP1
0x8e0 DUP8
0x8e1 DUP1
0x8e2 EXTCODESIZE
0x8e3 ISZERO
0x8e4 ISZERO
0x8e5 PUSH2 0x8ea
0x8e8 JUMPI
---
0x86d: JUMPDEST 
0x86e: V728 = 0x11
0x870: V729 = S[0x11]
0x871: V730 = 0x12
0x873: V731 = S[0x12]
0x874: V732 = 0x40
0x877: V733 = M[0x40]
0x878: V734 = 0x0
0x87a: V735 = 0x20
0x87e: V736 = ADD 0x20 V733
0x881: M[V736] = 0x0
0x883: V737 = M[0x40]
0x884: V738 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x8a6: M[V737] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x8a7: V739 = 0x1
0x8a9: V740 = 0xa0
0x8ab: V741 = 0x2
0x8ad: V742 = EXP 0x2 0xa0
0x8ae: V743 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8b1: V744 = AND 0xffffffffffffffffffffffffffffffffffffffff V731
0x8b2: V745 = 0x4
0x8b5: V746 = ADD V737 0x4
0x8b6: M[V746] = V744
0x8ba: V747 = DIV V721 0x64
0x8bb: V748 = 0x24
0x8be: V749 = ADD V737 0x24
0x8c1: M[V749] = V747
0x8c3: V750 = M[0x40]
0x8ca: V751 = AND V729 0xffffffffffffffffffffffffffffffffffffffff
0x8cc: V752 = 0xa9059cbb
0x8d2: V753 = 0x44
0x8d6: V754 = ADD V737 0x44
0x8db: V755 = SUB V737 V750
0x8dc: V756 = ADD V755 0x44
0x8e2: V757 = EXTCODESIZE V751
0x8e3: V758 = ISZERO V757
0x8e4: V759 = ISZERO V758
0x8e5: V760 = 0x8ea
0x8e8: JUMPI 0x8ea V759
---
Entry stack: [V10, S7, S6, {0x11e, 0x592}, 0x0, V721, 0x0, 0x64, V721]
Stack pops: 3
Stack additions: [V747, V751, 0xa9059cbb, V754, 0x20, V750, V756, V750, 0x0, V751]
Exit stack: [V10, S7, S6, {0x11e, 0x592}, 0x0, V721, V747, V751, 0xa9059cbb, V754, 0x20, V750, V756, V750, 0x0, V751]

================================

Block 0x8e9
[0x8e9:0x8e9]
---
Predecessors: [0x86d]
Successors: []
---
0x8e9 INVALID
---
0x8e9: INVALID 
---
Entry stack: [V10, S14, S13, {0x11e, 0x592}, 0x0, V721, V747, V751, 0xa9059cbb, V754, 0x20, V750, V756, V750, 0x0, V751]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S14, S13, {0x11e, 0x592}, 0x0, V721, V747, V751, 0xa9059cbb, V754, 0x20, V750, V756, V750, 0x0, V751]

================================

Block 0x8ea
[0x8ea:0x8f6]
---
Predecessors: [0x86d]
Successors: [0x8f7, 0x8f8]
---
0x8ea JUMPDEST
0x8eb PUSH2 0x2c6
0x8ee GAS
0x8ef SUB
0x8f0 CALL
0x8f1 ISZERO
0x8f2 ISZERO
0x8f3 PUSH2 0x8f8
0x8f6 JUMPI
---
0x8ea: JUMPDEST 
0x8eb: V761 = 0x2c6
0x8ee: V762 = GAS
0x8ef: V763 = SUB V762 0x2c6
0x8f0: V764 = CALL V763 V751 0x0 V750 V756 V750 0x20
0x8f1: V765 = ISZERO V764
0x8f2: V766 = ISZERO V765
0x8f3: V767 = 0x8f8
0x8f6: JUMPI 0x8f8 V766
---
Entry stack: [V10, S14, S13, {0x11e, 0x592}, 0x0, V721, V747, V751, 0xa9059cbb, V754, 0x20, V750, V756, V750, 0x0, V751]
Stack pops: 6
Stack additions: []
Exit stack: [V10, S14, S13, {0x11e, 0x592}, 0x0, V721, V747, V751, 0xa9059cbb, V754]

================================

Block 0x8f7
[0x8f7:0x8f7]
---
Predecessors: [0x8ea]
Successors: []
---
0x8f7 INVALID
---
0x8f7: INVALID 
---
Entry stack: [V10, S8, S7, {0x11e, 0x592}, 0x0, V721, V747, V751, 0xa9059cbb, V754]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S8, S7, {0x11e, 0x592}, 0x0, V721, V747, V751, 0xa9059cbb, V754]

================================

Block 0x8f8
[0x8f8:0x906]
---
Predecessors: [0x8ea]
Successors: [0x907, 0x90c]
---
0x8f8 JUMPDEST
0x8f9 POP
0x8fa POP
0x8fb PUSH1 0x40
0x8fd MLOAD
0x8fe MLOAD
0x8ff ISZERO
0x900 ISZERO
0x901 SWAP1
0x902 POP
0x903 PUSH2 0x90c
0x906 JUMPI
---
0x8f8: JUMPDEST 
0x8fb: V768 = 0x40
0x8fd: V769 = M[0x40]
0x8fe: V770 = M[V769]
0x8ff: V771 = ISZERO V770
0x900: V772 = ISZERO V771
0x903: V773 = 0x90c
0x906: JUMPI 0x90c V772
---
Entry stack: [V10, S8, S7, {0x11e, 0x592}, 0x0, V721, V747, V751, 0xa9059cbb, V754]
Stack pops: 3
Stack additions: []
Exit stack: [V10, S8, S7, {0x11e, 0x592}, 0x0, V721, V747]

================================

Block 0x907
[0x907:0x90b]
---
Predecessors: [0x8f8]
Successors: []
---
0x907 PUSH1 0x0
0x909 PUSH1 0x0
0x90b REVERT
---
0x907: V774 = 0x0
0x909: V775 = 0x0
0x90b: REVERT 0x0 0x0
---
Entry stack: [V10, S5, S4, {0x11e, 0x592}, 0x0, V721, V747]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, S4, {0x11e, 0x592}, 0x0, V721, V747]

================================

Block 0x90c
[0x90c:0x90c]
---
Predecessors: [0x831, 0x8f8]
Successors: [0x90d]
---
0x90c JUMPDEST
---
0x90c: JUMPDEST 
---
Entry stack: [V10, S5, S4, {0x11e, 0x592}, 0x0, V721, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, S4, {0x11e, 0x592}, 0x0, V721, S0]

================================

Block 0x90d
[0x90d:0x981]
---
Predecessors: [0x90c]
Successors: [0x982, 0x983]
---
0x90d JUMPDEST
0x90e PUSH1 0x11
0x910 SLOAD
0x911 PUSH1 0x40
0x913 DUP1
0x914 MLOAD
0x915 PUSH1 0x0
0x917 PUSH1 0x20
0x919 SWAP2
0x91a DUP3
0x91b ADD
0x91c DUP2
0x91d SWAP1
0x91e MSTORE
0x91f DUP3
0x920 MLOAD
0x921 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x942 DUP2
0x943 MSTORE
0x944 PUSH1 0x1
0x946 PUSH1 0xa0
0x948 PUSH1 0x2
0x94a EXP
0x94b SUB
0x94c CALLER
0x94d DUP2
0x94e AND
0x94f PUSH1 0x4
0x951 DUP4
0x952 ADD
0x953 MSTORE
0x954 DUP7
0x955 DUP9
0x956 SUB
0x957 PUSH1 0x24
0x959 DUP4
0x95a ADD
0x95b MSTORE
0x95c SWAP4
0x95d MLOAD
0x95e SWAP4
0x95f SWAP1
0x960 SWAP5
0x961 AND
0x962 SWAP4
0x963 PUSH4 0xa9059cbb
0x968 SWAP4
0x969 PUSH1 0x44
0x96b DUP1
0x96c DUP4
0x96d ADD
0x96e SWAP5
0x96f SWAP4
0x970 SWAP2
0x971 SWAP3
0x972 DUP4
0x973 SWAP1
0x974 SUB
0x975 ADD
0x976 SWAP1
0x977 DUP3
0x978 SWAP1
0x979 DUP8
0x97a DUP1
0x97b EXTCODESIZE
0x97c ISZERO
0x97d ISZERO
0x97e PUSH2 0x983
0x981 JUMPI
---
0x90d: JUMPDEST 
0x90e: V776 = 0x11
0x910: V777 = S[0x11]
0x911: V778 = 0x40
0x914: V779 = M[0x40]
0x915: V780 = 0x0
0x917: V781 = 0x20
0x91b: V782 = ADD 0x20 V779
0x91e: M[V782] = 0x0
0x920: V783 = M[0x40]
0x921: V784 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x943: M[V783] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x944: V785 = 0x1
0x946: V786 = 0xa0
0x948: V787 = 0x2
0x94a: V788 = EXP 0x2 0xa0
0x94b: V789 = SUB 0x10000000000000000000000000000000000000000 0x1
0x94c: V790 = CALLER
0x94e: V791 = AND 0xffffffffffffffffffffffffffffffffffffffff V790
0x94f: V792 = 0x4
0x952: V793 = ADD V783 0x4
0x953: M[V793] = V791
0x956: V794 = SUB S1 S0
0x957: V795 = 0x24
0x95a: V796 = ADD V783 0x24
0x95b: M[V796] = V794
0x95d: V797 = M[0x40]
0x961: V798 = AND V777 0xffffffffffffffffffffffffffffffffffffffff
0x963: V799 = 0xa9059cbb
0x969: V800 = 0x44
0x96d: V801 = ADD V783 0x44
0x974: V802 = SUB V783 V797
0x975: V803 = ADD V802 0x44
0x97b: V804 = EXTCODESIZE V798
0x97c: V805 = ISZERO V804
0x97d: V806 = ISZERO V805
0x97e: V807 = 0x983
0x981: JUMPI 0x983 V806
---
Entry stack: [V10, S5, S4, {0x11e, 0x592}, 0x0, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V798, 0xa9059cbb, V801, 0x20, V797, V803, V797, 0x0, V798]
Exit stack: [V10, S5, S4, {0x11e, 0x592}, 0x0, S1, S0, V798, 0xa9059cbb, V801, 0x20, V797, V803, V797, 0x0, V798]

================================

Block 0x982
[0x982:0x982]
---
Predecessors: [0x90d]
Successors: []
---
0x982 INVALID
---
0x982: INVALID 
---
Entry stack: [V10, S14, S13, {0x11e, 0x592}, 0x0, S10, S9, V798, 0xa9059cbb, V801, 0x20, V797, V803, V797, 0x0, V798]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S14, S13, {0x11e, 0x592}, 0x0, S10, S9, V798, 0xa9059cbb, V801, 0x20, V797, V803, V797, 0x0, V798]

================================

Block 0x983
[0x983:0x98f]
---
Predecessors: [0x90d]
Successors: [0x990, 0x991]
---
0x983 JUMPDEST
0x984 PUSH2 0x2c6
0x987 GAS
0x988 SUB
0x989 CALL
0x98a ISZERO
0x98b ISZERO
0x98c PUSH2 0x991
0x98f JUMPI
---
0x983: JUMPDEST 
0x984: V808 = 0x2c6
0x987: V809 = GAS
0x988: V810 = SUB V809 0x2c6
0x989: V811 = CALL V810 V798 0x0 V797 V803 V797 0x20
0x98a: V812 = ISZERO V811
0x98b: V813 = ISZERO V812
0x98c: V814 = 0x991
0x98f: JUMPI 0x991 V813
---
Entry stack: [V10, S14, S13, {0x11e, 0x592}, 0x0, S10, S9, V798, 0xa9059cbb, V801, 0x20, V797, V803, V797, 0x0, V798]
Stack pops: 6
Stack additions: []
Exit stack: [V10, S14, S13, {0x11e, 0x592}, 0x0, S10, S9, V798, 0xa9059cbb, V801]

================================

Block 0x990
[0x990:0x990]
---
Predecessors: [0x983]
Successors: []
---
0x990 INVALID
---
0x990: INVALID 
---
Entry stack: [V10, S8, S7, {0x11e, 0x592}, 0x0, S4, S3, S2, 0xa9059cbb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S8, S7, {0x11e, 0x592}, 0x0, S4, S3, S2, 0xa9059cbb, S0]

================================

Block 0x991
[0x991:0x99f]
---
Predecessors: [0x983]
Successors: [0x9a0, 0x9a5]
---
0x991 JUMPDEST
0x992 POP
0x993 POP
0x994 PUSH1 0x40
0x996 MLOAD
0x997 MLOAD
0x998 ISZERO
0x999 ISZERO
0x99a SWAP1
0x99b POP
0x99c PUSH2 0x9a5
0x99f JUMPI
---
0x991: JUMPDEST 
0x994: V815 = 0x40
0x996: V816 = M[0x40]
0x997: V817 = M[V816]
0x998: V818 = ISZERO V817
0x999: V819 = ISZERO V818
0x99c: V820 = 0x9a5
0x99f: JUMPI 0x9a5 V819
---
Entry stack: [V10, S8, S7, {0x11e, 0x592}, 0x0, S4, S3, S2, 0xa9059cbb, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V10, S8, S7, {0x11e, 0x592}, 0x0, S4, S3]

================================

Block 0x9a0
[0x9a0:0x9a4]
---
Predecessors: [0x991]
Successors: []
---
0x9a0 PUSH1 0x0
0x9a2 PUSH1 0x0
0x9a4 REVERT
---
0x9a0: V821 = 0x0
0x9a2: V822 = 0x0
0x9a4: REVERT 0x0 0x0
---
Entry stack: [V10, S5, S4, {0x11e, 0x592}, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, S4, {0x11e, 0x592}, 0x0, S1, S0]

================================

Block 0x9a5
[0x9a5:0x9a5]
---
Predecessors: [0x82c, 0x991]
Successors: [0x9a6]
---
0x9a5 JUMPDEST
---
0x9a5: JUMPDEST 
---
Entry stack: [V10, S5, S4, {0x11e, 0x592}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, S4, {0x11e, 0x592}, S2, S1, S0]

================================

Block 0x9a6
[0x9a6:0x9a6]
---
Predecessors: [0x9a5]
Successors: [0x9a7]
---
0x9a6 JUMPDEST
---
0x9a6: JUMPDEST 
---
Entry stack: [V10, S5, S4, {0x11e, 0x592}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S5, S4, {0x11e, 0x592}, S2, S1, S0]

================================

Block 0x9a7
[0x9a7:0x9ab]
---
Predecessors: [0x9a6]
Successors: [0x11e, 0x592]
---
0x9a7 JUMPDEST
0x9a8 POP
0x9a9 POP
0x9aa POP
0x9ab JUMP
---
0x9a7: JUMPDEST 
0x9ab: JUMP {0x11e, 0x592}
---
Entry stack: [V10, S5, S4, {0x11e, 0x592}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V10, S5, S4]

================================

Block 0x9ac
[0x9ac:0x9c2]
---
Predecessors: [0x230]
Successors: [0x9c3, 0x9c8]
---
0x9ac JUMPDEST
0x9ad PUSH1 0x12
0x9af SLOAD
0x9b0 CALLER
0x9b1 PUSH1 0x1
0x9b3 PUSH1 0xa0
0x9b5 PUSH1 0x2
0x9b7 EXP
0x9b8 SUB
0x9b9 SWAP1
0x9ba DUP2
0x9bb AND
0x9bc SWAP2
0x9bd AND
0x9be EQ
0x9bf PUSH2 0x9c8
0x9c2 JUMPI
---
0x9ac: JUMPDEST 
0x9ad: V823 = 0x12
0x9af: V824 = S[0x12]
0x9b0: V825 = CALLER
0x9b1: V826 = 0x1
0x9b3: V827 = 0xa0
0x9b5: V828 = 0x2
0x9b7: V829 = EXP 0x2 0xa0
0x9b8: V830 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9bb: V831 = AND 0xffffffffffffffffffffffffffffffffffffffff V825
0x9bd: V832 = AND V824 0xffffffffffffffffffffffffffffffffffffffff
0x9be: V833 = EQ V832 V831
0x9bf: V834 = 0x9c8
0x9c2: JUMPI 0x9c8 V833
---
Entry stack: [V10, 0x11e]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x11e]

================================

Block 0x9c3
[0x9c3:0x9c7]
---
Predecessors: [0x9ac]
Successors: []
---
0x9c3 PUSH1 0x0
0x9c5 PUSH1 0x0
0x9c7 REVERT
---
0x9c3: V835 = 0x0
0x9c5: V836 = 0x0
0x9c7: REVERT 0x0 0x0
---
Entry stack: [V10, 0x11e]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x11e]

================================

Block 0x9c8
[0x9c8:0x9d5]
---
Predecessors: [0x9ac]
Successors: []
---
0x9c8 JUMPDEST
0x9c9 PUSH1 0x12
0x9cb SLOAD
0x9cc PUSH1 0x1
0x9ce PUSH1 0xa0
0x9d0 PUSH1 0x2
0x9d2 EXP
0x9d3 SUB
0x9d4 AND
0x9d5 SELFDESTRUCT
---
0x9c8: JUMPDEST 
0x9c9: V837 = 0x12
0x9cb: V838 = S[0x12]
0x9cc: V839 = 0x1
0x9ce: V840 = 0xa0
0x9d0: V841 = 0x2
0x9d2: V842 = EXP 0x2 0xa0
0x9d3: V843 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9d4: V844 = AND 0xffffffffffffffffffffffffffffffffffffffff V838
0x9d5: SELFDESTRUCT V844
---
Entry stack: [V10, 0x11e]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x11e]

================================

Block 0x9d6
[0x9d6:0x9d6]
---
Predecessors: []
Successors: [0x9d7]
---
0x9d6 JUMPDEST
---
0x9d6: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x9d7
[0x9d7:0x9d8]
---
Predecessors: [0x9d6]
Successors: []
Has unresolved jump.
---
0x9d7 JUMPDEST
0x9d8 JUMP
---
0x9d7: JUMPDEST 
0x9d8: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x9d9
[0x9d9:0x9ed]
---
Predecessors: [0x242]
Successors: [0x256]
---
0x9d9 JUMPDEST
0x9da PUSH1 0x1
0x9dc PUSH1 0x20
0x9de MSTORE
0x9df PUSH1 0x0
0x9e1 SWAP1
0x9e2 DUP2
0x9e3 MSTORE
0x9e4 PUSH1 0x40
0x9e6 SWAP1
0x9e7 SHA3
0x9e8 SLOAD
0x9e9 PUSH1 0xff
0x9eb AND
0x9ec DUP2
0x9ed JUMP
---
0x9d9: JUMPDEST 
0x9da: V845 = 0x1
0x9dc: V846 = 0x20
0x9de: M[0x20] = 0x1
0x9df: V847 = 0x0
0x9e3: M[0x0] = V179
0x9e4: V848 = 0x40
0x9e7: V849 = SHA3 0x0 0x40
0x9e8: V850 = S[V849]
0x9e9: V851 = 0xff
0x9eb: V852 = AND 0xff V850
0x9ed: JUMP 0x256
---
Entry stack: [V10, 0x256, V179]
Stack pops: 2
Stack additions: [S1, V852]
Exit stack: [V10, 0x256, V852]

================================

Block 0x9ee
[0x9ee:0xa04]
---
Predecessors: [0x274]
Successors: [0xa05, 0xa0a]
---
0x9ee JUMPDEST
0x9ef PUSH1 0x12
0x9f1 SLOAD
0x9f2 CALLER
0x9f3 PUSH1 0x1
0x9f5 PUSH1 0xa0
0x9f7 PUSH1 0x2
0x9f9 EXP
0x9fa SUB
0x9fb SWAP1
0x9fc DUP2
0x9fd AND
0x9fe SWAP2
0x9ff AND
0xa00 EQ
0xa01 PUSH2 0xa0a
0xa04 JUMPI
---
0x9ee: JUMPDEST 
0x9ef: V853 = 0x12
0x9f1: V854 = S[0x12]
0x9f2: V855 = CALLER
0x9f3: V856 = 0x1
0x9f5: V857 = 0xa0
0x9f7: V858 = 0x2
0x9f9: V859 = EXP 0x2 0xa0
0x9fa: V860 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9fd: V861 = AND 0xffffffffffffffffffffffffffffffffffffffff V855
0x9ff: V862 = AND V854 0xffffffffffffffffffffffffffffffffffffffff
0xa00: V863 = EQ V862 V861
0xa01: V864 = 0xa0a
0xa04: JUMPI 0xa0a V863
---
Entry stack: [V10, 0x11e]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x11e]

================================

Block 0xa05
[0xa05:0xa09]
---
Predecessors: [0x9ee]
Successors: []
---
0xa05 PUSH1 0x0
0xa07 PUSH1 0x0
0xa09 REVERT
---
0xa05: V865 = 0x0
0xa07: V866 = 0x0
0xa09: REVERT 0x0 0x0
---
Entry stack: [V10, 0x11e]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x11e]

================================

Block 0xa0a
[0xa0a:0xa15]
---
Predecessors: [0x9ee]
Successors: [0xa16, 0xa1b]
---
0xa0a JUMPDEST
0xa0b PUSH1 0x5
0xa0d SLOAD
0xa0e PUSH1 0xff
0xa10 AND
0xa11 ISZERO
0xa12 PUSH2 0xa1b
0xa15 JUMPI
---
0xa0a: JUMPDEST 
0xa0b: V867 = 0x5
0xa0d: V868 = S[0x5]
0xa0e: V869 = 0xff
0xa10: V870 = AND 0xff V868
0xa11: V871 = ISZERO V870
0xa12: V872 = 0xa1b
0xa15: JUMPI 0xa1b V871
---
Entry stack: [V10, 0x11e]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x11e]

================================

Block 0xa16
[0xa16:0xa1a]
---
Predecessors: [0xa0a]
Successors: []
---
0xa16 PUSH1 0x0
0xa18 PUSH1 0x0
0xa1a REVERT
---
0xa16: V873 = 0x0
0xa18: V874 = 0x0
0xa1a: REVERT 0x0 0x0
---
Entry stack: [V10, 0x11e]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x11e]

================================

Block 0xa1b
[0xa1b:0xa26]
---
Predecessors: [0xa0a]
Successors: [0xa27, 0xa2c]
---
0xa1b JUMPDEST
0xa1c PUSH1 0x3
0xa1e SLOAD
0xa1f PUSH1 0xff
0xa21 AND
0xa22 ISZERO
0xa23 PUSH2 0xa2c
0xa26 JUMPI
---
0xa1b: JUMPDEST 
0xa1c: V875 = 0x3
0xa1e: V876 = S[0x3]
0xa1f: V877 = 0xff
0xa21: V878 = AND 0xff V876
0xa22: V879 = ISZERO V878
0xa23: V880 = 0xa2c
0xa26: JUMPI 0xa2c V879
---
Entry stack: [V10, 0x11e]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x11e]

================================

Block 0xa27
[0xa27:0xa2b]
---
Predecessors: [0xa1b]
Successors: []
---
0xa27 PUSH1 0x0
0xa29 PUSH1 0x0
0xa2b REVERT
---
0xa27: V881 = 0x0
0xa29: V882 = 0x0
0xa2b: REVERT 0x0 0x0
---
Entry stack: [V10, 0x11e]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x11e]

================================

Block 0xa2c
[0xa2c:0xa34]
---
Predecessors: [0xa1b]
Successors: [0xa35]
---
0xa2c JUMPDEST
0xa2d PUSH1 0x2
0xa2f DUP1
0xa30 SLOAD
0xa31 CALLVALUE
0xa32 ADD
0xa33 SWAP1
0xa34 SSTORE
---
0xa2c: JUMPDEST 
0xa2d: V883 = 0x2
0xa30: V884 = S[0x2]
0xa31: V885 = CALLVALUE
0xa32: V886 = ADD V885 V884
0xa34: S[0x2] = V886
---
Entry stack: [V10, 0x11e]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x11e]

================================

Block 0xa35
[0xa35:0xa36]
---
Predecessors: [0xa2c]
Successors: [0x11e]
---
0xa35 JUMPDEST
0xa36 JUMP
---
0xa35: JUMPDEST 
0xa36: JUMP 0x11e
---
Entry stack: [V10, 0x11e]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xa37
[0xa37:0xa3f]
---
Predecessors: [0x286]
Successors: [0x256]
---
0xa37 JUMPDEST
0xa38 PUSH1 0x3
0xa3a SLOAD
0xa3b PUSH1 0xff
0xa3d AND
0xa3e DUP2
0xa3f JUMP
---
0xa37: JUMPDEST 
0xa38: V887 = 0x3
0xa3a: V888 = S[0x3]
0xa3b: V889 = 0xff
0xa3d: V890 = AND 0xff V888
0xa3f: JUMP 0x256
---
Entry stack: [V10, 0x256]
Stack pops: 1
Stack additions: [S0, V890]
Exit stack: [V10, 0x256, V890]

================================

Block 0xa40
[0xa40:0xa56]
---
Predecessors: [0x2aa]
Successors: [0xa57, 0xa5c]
---
0xa40 JUMPDEST
0xa41 PUSH1 0x12
0xa43 SLOAD
0xa44 CALLER
0xa45 PUSH1 0x1
0xa47 PUSH1 0xa0
0xa49 PUSH1 0x2
0xa4b EXP
0xa4c SUB
0xa4d SWAP1
0xa4e DUP2
0xa4f AND
0xa50 SWAP2
0xa51 AND
0xa52 EQ
0xa53 PUSH2 0xa5c
0xa56 JUMPI
---
0xa40: JUMPDEST 
0xa41: V891 = 0x12
0xa43: V892 = S[0x12]
0xa44: V893 = CALLER
0xa45: V894 = 0x1
0xa47: V895 = 0xa0
0xa49: V896 = 0x2
0xa4b: V897 = EXP 0x2 0xa0
0xa4c: V898 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa4f: V899 = AND 0xffffffffffffffffffffffffffffffffffffffff V893
0xa51: V900 = AND V892 0xffffffffffffffffffffffffffffffffffffffff
0xa52: V901 = EQ V900 V899
0xa53: V902 = 0xa5c
0xa56: JUMPI 0xa5c V901
---
Entry stack: [V10, 0x11e]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x11e]

================================

Block 0xa57
[0xa57:0xa5b]
---
Predecessors: [0xa40]
Successors: []
---
0xa57 PUSH1 0x0
0xa59 PUSH1 0x0
0xa5b REVERT
---
0xa57: V903 = 0x0
0xa59: V904 = 0x0
0xa5b: REVERT 0x0 0x0
---
Entry stack: [V10, 0x11e]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x11e]

================================

Block 0xa5c
[0xa5c:0xa69]
---
Predecessors: [0xa40]
Successors: [0xa6a]
---
0xa5c JUMPDEST
0xa5d PUSH1 0x5
0xa5f DUP1
0xa60 SLOAD
0xa61 PUSH1 0xff
0xa63 NOT
0xa64 AND
0xa65 PUSH1 0x1
0xa67 OR
0xa68 SWAP1
0xa69 SSTORE
---
0xa5c: JUMPDEST 
0xa5d: V905 = 0x5
0xa60: V906 = S[0x5]
0xa61: V907 = 0xff
0xa63: V908 = NOT 0xff
0xa64: V909 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V906
0xa65: V910 = 0x1
0xa67: V911 = OR 0x1 V909
0xa69: S[0x5] = V911
---
Entry stack: [V10, 0x11e]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x11e]

================================

Block 0xa6a
[0xa6a:0xa6b]
---
Predecessors: [0xa5c]
Successors: [0x11e]
---
0xa6a JUMPDEST
0xa6b JUMP
---
0xa6a: JUMPDEST 
0xa6b: JUMP 0x11e
---
Entry stack: [V10, 0x11e]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xa6c
[0xa6c:0xa7d]
---
Predecessors: [0x2bc]
Successors: [0x1de]
---
0xa6c JUMPDEST
0xa6d PUSH1 0x13
0xa6f PUSH1 0x20
0xa71 MSTORE
0xa72 PUSH1 0x0
0xa74 SWAP1
0xa75 DUP2
0xa76 MSTORE
0xa77 PUSH1 0x40
0xa79 SWAP1
0xa7a SHA3
0xa7b SLOAD
0xa7c DUP2
0xa7d JUMP
---
0xa6c: JUMPDEST 
0xa6d: V912 = 0x13
0xa6f: V913 = 0x20
0xa71: M[0x20] = 0x13
0xa72: V914 = 0x0
0xa76: M[0x0] = V222
0xa77: V915 = 0x40
0xa7a: V916 = SHA3 0x0 0x40
0xa7b: V917 = S[V916]
0xa7d: JUMP 0x1de
---
Entry stack: [V10, 0x1de, V222]
Stack pops: 2
Stack additions: [S1, V917]
Exit stack: [V10, 0x1de, V917]

================================

Block 0xa7e
[0xa7e:0xa85]
---
Predecessors: [0x2e2]
Successors: [0xa86, 0xa8b]
---
0xa7e JUMPDEST
0xa7f CALLVALUE
0xa80 ISZERO
0xa81 ISZERO
0xa82 PUSH2 0xa8b
0xa85 JUMPI
---
0xa7e: JUMPDEST 
0xa7f: V918 = CALLVALUE
0xa80: V919 = ISZERO V918
0xa81: V920 = ISZERO V919
0xa82: V921 = 0xa8b
0xa85: JUMPI 0xa8b V920
---
Entry stack: [V10, 0x11e]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x11e]

================================

Block 0xa86
[0xa86:0xa8a]
---
Predecessors: [0xa7e]
Successors: []
---
0xa86 PUSH1 0x0
0xa88 PUSH1 0x0
0xa8a REVERT
---
0xa86: V922 = 0x0
0xa88: V923 = 0x0
0xa8a: REVERT 0x0 0x0
---
Entry stack: [V10, 0x11e]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x11e]

================================

Block 0xa8b
[0xa8b:0xa96]
---
Predecessors: [0xa7e]
Successors: [0xc5b]
---
0xa8b JUMPDEST
0xa8c PUSH2 0xa97
0xa8f PUSH1 0x10
0xa91 SLOAD
0xa92 CALLVALUE
0xa93 PUSH2 0xc5b
0xa96 JUMP
---
0xa8b: JUMPDEST 
0xa8c: V924 = 0xa97
0xa8f: V925 = 0x10
0xa91: V926 = S[0x10]
0xa92: V927 = CALLVALUE
0xa93: V928 = 0xc5b
0xa96: JUMP 0xc5b
---
Entry stack: [V10, 0x11e]
Stack pops: 0
Stack additions: [0xa97, V926, V927]
Exit stack: [V10, 0x11e, 0xa97, V926, V927]

================================

Block 0xa97
[0xa97:0xa9a]
---
Predecessors: [0xc7c]
Successors: [0xa9b]
---
0xa97 JUMPDEST
0xa98 PUSH1 0x10
0xa9a SSTORE
---
0xa97: JUMPDEST 
0xa98: V929 = 0x10
0xa9a: S[0x10] = V1091
---
Entry stack: [V10, 0x11e, V1091]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x11e]

================================

Block 0xa9b
[0xa9b:0xa9c]
---
Predecessors: [0xa97]
Successors: [0x11e]
---
0xa9b JUMPDEST
0xa9c JUMP
---
0xa9b: JUMPDEST 
0xa9c: JUMP 0x11e
---
Entry stack: [V10, 0x11e]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xa9d
[0xa9d:0xaa2]
---
Predecessors: [0x2f4]
Successors: [0x1de]
---
0xa9d JUMPDEST
0xa9e PUSH1 0x2
0xaa0 SLOAD
0xaa1 DUP2
0xaa2 JUMP
---
0xa9d: JUMPDEST 
0xa9e: V930 = 0x2
0xaa0: V931 = S[0x2]
0xaa2: JUMP 0x1de
---
Entry stack: [V10, 0x1de]
Stack pops: 1
Stack additions: [S0, V931]
Exit stack: [V10, 0x1de, V931]

================================

Block 0xaa3
[0xaa3:0xae2]
---
Predecessors: [0x316]
Successors: [0x7b4, 0xae3]
---
0xaa3 JUMPDEST
0xaa4 PUSH1 0x7
0xaa6 DUP1
0xaa7 SLOAD
0xaa8 PUSH1 0x40
0xaaa DUP1
0xaab MLOAD
0xaac PUSH1 0x20
0xaae PUSH1 0x2
0xab0 PUSH1 0x1
0xab2 DUP6
0xab3 AND
0xab4 ISZERO
0xab5 PUSH2 0x100
0xab8 MUL
0xab9 PUSH1 0x0
0xabb NOT
0xabc ADD
0xabd SWAP1
0xabe SWAP5
0xabf AND
0xac0 SWAP4
0xac1 SWAP1
0xac2 SWAP4
0xac3 DIV
0xac4 PUSH1 0x1f
0xac6 DUP2
0xac7 ADD
0xac8 DUP5
0xac9 SWAP1
0xaca DIV
0xacb DUP5
0xacc MUL
0xacd DUP3
0xace ADD
0xacf DUP5
0xad0 ADD
0xad1 SWAP1
0xad2 SWAP3
0xad3 MSTORE
0xad4 DUP2
0xad5 DUP2
0xad6 MSTORE
0xad7 SWAP3
0xad8 SWAP2
0xad9 DUP4
0xada ADD
0xadb DUP3
0xadc DUP3
0xadd DUP1
0xade ISZERO
0xadf PUSH2 0x7b4
0xae2 JUMPI
---
0xaa3: JUMPDEST 
0xaa4: V932 = 0x7
0xaa7: V933 = S[0x7]
0xaa8: V934 = 0x40
0xaab: V935 = M[0x40]
0xaac: V936 = 0x20
0xaae: V937 = 0x2
0xab0: V938 = 0x1
0xab3: V939 = AND V933 0x1
0xab4: V940 = ISZERO V939
0xab5: V941 = 0x100
0xab8: V942 = MUL 0x100 V940
0xab9: V943 = 0x0
0xabb: V944 = NOT 0x0
0xabc: V945 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V942
0xabf: V946 = AND V933 V945
0xac3: V947 = DIV V946 0x2
0xac4: V948 = 0x1f
0xac7: V949 = ADD V947 0x1f
0xaca: V950 = DIV V949 0x20
0xacc: V951 = MUL 0x20 V950
0xace: V952 = ADD V935 V951
0xad0: V953 = ADD 0x20 V952
0xad3: M[0x40] = V953
0xad6: M[V935] = V947
0xada: V954 = ADD V935 0x20
0xade: V955 = ISZERO V947
0xadf: V956 = 0x7b4
0xae2: JUMPI 0x7b4 V955
---
Entry stack: [V10, 0x142]
Stack pops: 0
Stack additions: [V935, 0x7, V947, V954, 0x7, V947]
Exit stack: [V10, 0x142, V935, 0x7, V947, V954, 0x7, V947]

================================

Block 0xae3
[0xae3:0xaea]
---
Predecessors: [0xaa3]
Successors: [0x789, 0xaeb]
---
0xae3 DUP1
0xae4 PUSH1 0x1f
0xae6 LT
0xae7 PUSH2 0x789
0xaea JUMPI
---
0xae4: V957 = 0x1f
0xae6: V958 = LT 0x1f V947
0xae7: V959 = 0x789
0xaea: JUMPI 0x789 V958
---
Entry stack: [V10, 0x142, V935, 0x7, V947, V954, 0x7, V947]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x142, V935, 0x7, V947, V954, 0x7, V947]

================================

Block 0xaeb
[0xaeb:0xafd]
---
Predecessors: [0xae3]
Successors: [0x7b4]
---
0xaeb PUSH2 0x100
0xaee DUP1
0xaef DUP4
0xaf0 SLOAD
0xaf1 DIV
0xaf2 MUL
0xaf3 DUP4
0xaf4 MSTORE
0xaf5 SWAP2
0xaf6 PUSH1 0x20
0xaf8 ADD
0xaf9 SWAP2
0xafa PUSH2 0x7b4
0xafd JUMP
---
0xaeb: V960 = 0x100
0xaf0: V961 = S[0x7]
0xaf1: V962 = DIV V961 0x100
0xaf2: V963 = MUL V962 0x100
0xaf4: M[V954] = V963
0xaf6: V964 = 0x20
0xaf8: V965 = ADD 0x20 V954
0xafa: V966 = 0x7b4
0xafd: JUMP 0x7b4
---
Entry stack: [V10, 0x142, V935, 0x7, V947, V954, 0x7, V947]
Stack pops: 3
Stack additions: [V965, S1, S0]
Exit stack: [V10, 0x142, V935, 0x7, V947, V965, 0x7, V947]

================================

Block 0xafe
[0xafe:0xb0b]
---
Predecessors: []
Successors: [0xb0c]
---
0xafe JUMPDEST
0xaff DUP3
0xb00 ADD
0xb01 SWAP2
0xb02 SWAP1
0xb03 PUSH1 0x0
0xb05 MSTORE
0xb06 PUSH1 0x20
0xb08 PUSH1 0x0
0xb0a SHA3
0xb0b SWAP1
---
0xafe: JUMPDEST 
0xb00: V967 = ADD S2 S0
0xb03: V968 = 0x0
0xb05: M[0x0] = S1
0xb06: V969 = 0x20
0xb08: V970 = 0x0
0xb0a: V971 = SHA3 0x0 0x20
---
Entry stack: []
Stack pops: 3
Stack additions: [V967, V971, S2]
Exit stack: [V967, V971, S2]

================================

Block 0xb0c
[0xb0c:0xb1f]
---
Predecessors: [0xafe]
Successors: [0x797, 0xb20]
---
0xb0c JUMPDEST
0xb0d DUP2
0xb0e SLOAD
0xb0f DUP2
0xb10 MSTORE
0xb11 SWAP1
0xb12 PUSH1 0x1
0xb14 ADD
0xb15 SWAP1
0xb16 PUSH1 0x20
0xb18 ADD
0xb19 DUP1
0xb1a DUP4
0xb1b GT
0xb1c PUSH2 0x797
0xb1f JUMPI
---
0xb0c: JUMPDEST 
0xb0e: V972 = S[V971]
0xb10: M[S0] = V972
0xb12: V973 = 0x1
0xb14: V974 = ADD 0x1 V971
0xb16: V975 = 0x20
0xb18: V976 = ADD 0x20 S0
0xb1b: V977 = GT V967 V976
0xb1c: V978 = 0x797
0xb1f: JUMPI 0x797 V977
---
Entry stack: [V967, V971, S0]
Stack pops: 3
Stack additions: [S2, V974, V976]
Exit stack: [V967, V974, V976]

================================

Block 0xb20
[0xb20:0xb28]
---
Predecessors: [0xb0c]
Successors: [0xb29]
---
0xb20 DUP3
0xb21 SWAP1
0xb22 SUB
0xb23 PUSH1 0x1f
0xb25 AND
0xb26 DUP3
0xb27 ADD
0xb28 SWAP2
---
0xb22: V979 = SUB V976 V967
0xb23: V980 = 0x1f
0xb25: V981 = AND 0x1f V979
0xb27: V982 = ADD V967 V981
---
Entry stack: [V967, V974, V976]
Stack pops: 3
Stack additions: [V982, S1, S2]
Exit stack: [V982, V974, V967]

================================

Block 0xb29
[0xb29:0xb30]
---
Predecessors: [0xb20]
Successors: []
Has unresolved jump.
---
0xb29 JUMPDEST
0xb2a POP
0xb2b POP
0xb2c POP
0xb2d POP
0xb2e POP
0xb2f DUP2
0xb30 JUMP
---
0xb29: JUMPDEST 
0xb30: JUMP S6
---
Entry stack: [V982, V974, V967]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [S3, S2]

================================

Block 0xb31
[0xb31:0xb39]
---
Predecessors: [0x3a6]
Successors: [0x256]
---
0xb31 JUMPDEST
0xb32 PUSH1 0x5
0xb34 SLOAD
0xb35 PUSH1 0xff
0xb37 AND
0xb38 DUP2
0xb39 JUMP
---
0xb31: JUMPDEST 
0xb32: V983 = 0x5
0xb34: V984 = S[0x5]
0xb35: V985 = 0xff
0xb37: V986 = AND 0xff V984
0xb39: JUMP 0x256
---
Entry stack: [V10, 0x256]
Stack pops: 1
Stack additions: [S0, V986]
Exit stack: [V10, 0x256, V986]

================================

Block 0xb3a
[0xb3a:0xb50]
---
Predecessors: [0x3ca]
Successors: [0xb51, 0xb56]
---
0xb3a JUMPDEST
0xb3b PUSH1 0x12
0xb3d SLOAD
0xb3e CALLER
0xb3f PUSH1 0x1
0xb41 PUSH1 0xa0
0xb43 PUSH1 0x2
0xb45 EXP
0xb46 SUB
0xb47 SWAP1
0xb48 DUP2
0xb49 AND
0xb4a SWAP2
0xb4b AND
0xb4c EQ
0xb4d PUSH2 0xb56
0xb50 JUMPI
---
0xb3a: JUMPDEST 
0xb3b: V987 = 0x12
0xb3d: V988 = S[0x12]
0xb3e: V989 = CALLER
0xb3f: V990 = 0x1
0xb41: V991 = 0xa0
0xb43: V992 = 0x2
0xb45: V993 = EXP 0x2 0xa0
0xb46: V994 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb49: V995 = AND 0xffffffffffffffffffffffffffffffffffffffff V989
0xb4b: V996 = AND V988 0xffffffffffffffffffffffffffffffffffffffff
0xb4c: V997 = EQ V996 V995
0xb4d: V998 = 0xb56
0xb50: JUMPI 0xb56 V997
---
Entry stack: [V10, 0x11e]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x11e]

================================

Block 0xb51
[0xb51:0xb55]
---
Predecessors: [0xb3a]
Successors: []
---
0xb51 PUSH1 0x0
0xb53 PUSH1 0x0
0xb55 REVERT
---
0xb51: V999 = 0x0
0xb53: V1000 = 0x0
0xb55: REVERT 0x0 0x0
---
Entry stack: [V10, 0x11e]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x11e]

================================

Block 0xb56
[0xb56:0xb85]
---
Predecessors: [0xb3a]
Successors: [0x11b, 0xb86]
---
0xb56 JUMPDEST
0xb57 PUSH1 0x40
0xb59 MLOAD
0xb5a PUSH1 0x1
0xb5c PUSH1 0xa0
0xb5e PUSH1 0x2
0xb60 EXP
0xb61 SUB
0xb62 CALLER
0xb63 DUP2
0xb64 AND
0xb65 SWAP2
0xb66 ADDRESS
0xb67 SWAP1
0xb68 SWAP2
0xb69 AND
0xb6a BALANCE
0xb6b DUP1
0xb6c ISZERO
0xb6d PUSH2 0x8fc
0xb70 MUL
0xb71 SWAP2
0xb72 PUSH1 0x0
0xb74 DUP2
0xb75 DUP2
0xb76 DUP2
0xb77 DUP6
0xb78 DUP9
0xb79 DUP9
0xb7a CALL
0xb7b SWAP4
0xb7c POP
0xb7d POP
0xb7e POP
0xb7f POP
0xb80 ISZERO
0xb81 ISZERO
0xb82 PUSH2 0x11b
0xb85 JUMPI
---
0xb56: JUMPDEST 
0xb57: V1001 = 0x40
0xb59: V1002 = M[0x40]
0xb5a: V1003 = 0x1
0xb5c: V1004 = 0xa0
0xb5e: V1005 = 0x2
0xb60: V1006 = EXP 0x2 0xa0
0xb61: V1007 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb62: V1008 = CALLER
0xb64: V1009 = AND 0xffffffffffffffffffffffffffffffffffffffff V1008
0xb66: V1010 = ADDRESS
0xb69: V1011 = AND 0xffffffffffffffffffffffffffffffffffffffff V1010
0xb6a: V1012 = BALANCE V1011
0xb6c: V1013 = ISZERO V1012
0xb6d: V1014 = 0x8fc
0xb70: V1015 = MUL 0x8fc V1013
0xb72: V1016 = 0x0
0xb7a: V1017 = CALL V1015 V1009 V1012 V1002 0x0 V1002 0x0
0xb80: V1018 = ISZERO V1017
0xb81: V1019 = ISZERO V1018
0xb82: V1020 = 0x11b
0xb85: JUMPI 0x11b V1019
---
Entry stack: [V10, 0x11e]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x11e]

================================

Block 0xb86
[0xb86:0xb86]
---
Predecessors: [0xb56]
Successors: []
---
0xb86 INVALID
---
0xb86: INVALID 
---
Entry stack: [V10, 0x11e]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x11e]

================================

Block 0xb87
[0xb87:0xb87]
---
Predecessors: []
Successors: [0xb88]
---
0xb87 JUMPDEST
---
0xb87: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb88
[0xb88:0xb88]
---
Predecessors: [0xb87]
Successors: [0xb89]
---
0xb88 JUMPDEST
---
0xb88: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb89
[0xb89:0xb8a]
---
Predecessors: [0xb88]
Successors: []
Has unresolved jump.
---
0xb89 JUMPDEST
0xb8a JUMP
---
0xb89: JUMPDEST 
0xb8a: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xb8b
[0xb8b:0xbac]
---
Predecessors: [0x3dc]
Successors: [0xbad, 0xbb2]
---
0xb8b JUMPDEST
0xb8c PUSH1 0x1
0xb8e PUSH1 0xa0
0xb90 PUSH1 0x2
0xb92 EXP
0xb93 SUB
0xb94 CALLER
0xb95 AND
0xb96 PUSH1 0x0
0xb98 SWAP1
0xb99 DUP2
0xb9a MSTORE
0xb9b PUSH1 0x13
0xb9d PUSH1 0x20
0xb9f MSTORE
0xba0 PUSH1 0x40
0xba2 SWAP1
0xba3 SHA3
0xba4 SLOAD
0xba5 DUP2
0xba6 SWAP1
0xba7 LT
0xba8 ISZERO
0xba9 PUSH2 0xbb2
0xbac JUMPI
---
0xb8b: JUMPDEST 
0xb8c: V1021 = 0x1
0xb8e: V1022 = 0xa0
0xb90: V1023 = 0x2
0xb92: V1024 = EXP 0x2 0xa0
0xb93: V1025 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb94: V1026 = CALLER
0xb95: V1027 = AND V1026 0xffffffffffffffffffffffffffffffffffffffff
0xb96: V1028 = 0x0
0xb9a: M[0x0] = V1027
0xb9b: V1029 = 0x13
0xb9d: V1030 = 0x20
0xb9f: M[0x20] = 0x13
0xba0: V1031 = 0x40
0xba3: V1032 = SHA3 0x0 0x40
0xba4: V1033 = S[V1032]
0xba7: V1034 = LT V1033 V321
0xba8: V1035 = ISZERO V1034
0xba9: V1036 = 0xbb2
0xbac: JUMPI 0xbb2 V1035
---
Entry stack: [V10, 0x11e, V319, V321]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x11e, V319, V321]

================================

Block 0xbad
[0xbad:0xbb1]
---
Predecessors: [0xb8b]
Successors: []
---
0xbad PUSH1 0x0
0xbaf PUSH1 0x0
0xbb1 REVERT
---
0xbad: V1037 = 0x0
0xbaf: V1038 = 0x0
0xbb1: REVERT 0x0 0x0
---
Entry stack: [V10, 0x11e, V319, V321]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x11e, V319, V321]

================================

Block 0xbb2
[0xbb2:0xbd4]
---
Predecessors: [0xb8b]
Successors: [0xbd5, 0xbda]
---
0xbb2 JUMPDEST
0xbb3 PUSH1 0x1
0xbb5 PUSH1 0xa0
0xbb7 PUSH1 0x2
0xbb9 EXP
0xbba SUB
0xbbb DUP3
0xbbc AND
0xbbd PUSH1 0x0
0xbbf SWAP1
0xbc0 DUP2
0xbc1 MSTORE
0xbc2 PUSH1 0x13
0xbc4 PUSH1 0x20
0xbc6 MSTORE
0xbc7 PUSH1 0x40
0xbc9 SWAP1
0xbca SHA3
0xbcb SLOAD
0xbcc DUP2
0xbcd DUP2
0xbce ADD
0xbcf LT
0xbd0 ISZERO
0xbd1 PUSH2 0xbda
0xbd4 JUMPI
---
0xbb2: JUMPDEST 
0xbb3: V1039 = 0x1
0xbb5: V1040 = 0xa0
0xbb7: V1041 = 0x2
0xbb9: V1042 = EXP 0x2 0xa0
0xbba: V1043 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbbc: V1044 = AND V319 0xffffffffffffffffffffffffffffffffffffffff
0xbbd: V1045 = 0x0
0xbc1: M[0x0] = V1044
0xbc2: V1046 = 0x13
0xbc4: V1047 = 0x20
0xbc6: M[0x20] = 0x13
0xbc7: V1048 = 0x40
0xbca: V1049 = SHA3 0x0 0x40
0xbcb: V1050 = S[V1049]
0xbce: V1051 = ADD V1050 V321
0xbcf: V1052 = LT V1051 V1050
0xbd0: V1053 = ISZERO V1052
0xbd1: V1054 = 0xbda
0xbd4: JUMPI 0xbda V1053
---
Entry stack: [V10, 0x11e, V319, V321]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x11e, V319, V321]

================================

Block 0xbd5
[0xbd5:0xbd9]
---
Predecessors: [0xbb2]
Successors: []
---
0xbd5 PUSH1 0x0
0xbd7 PUSH1 0x0
0xbd9 REVERT
---
0xbd5: V1055 = 0x0
0xbd7: V1056 = 0x0
0xbd9: REVERT 0x0 0x0
---
Entry stack: [V10, 0x11e, V319, V321]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x11e, V319, V321]

================================

Block 0xbda
[0xbda:0xc41]
---
Predecessors: [0xbb2]
Successors: [0xc42]
---
0xbda JUMPDEST
0xbdb PUSH1 0x1
0xbdd PUSH1 0xa0
0xbdf PUSH1 0x2
0xbe1 EXP
0xbe2 SUB
0xbe3 CALLER
0xbe4 DUP2
0xbe5 AND
0xbe6 PUSH1 0x0
0xbe8 DUP2
0xbe9 DUP2
0xbea MSTORE
0xbeb PUSH1 0x13
0xbed PUSH1 0x20
0xbef SWAP1
0xbf0 DUP2
0xbf1 MSTORE
0xbf2 PUSH1 0x40
0xbf4 DUP1
0xbf5 DUP4
0xbf6 SHA3
0xbf7 DUP1
0xbf8 SLOAD
0xbf9 DUP8
0xbfa SWAP1
0xbfb SUB
0xbfc SWAP1
0xbfd SSTORE
0xbfe SWAP4
0xbff DUP7
0xc00 AND
0xc01 DUP1
0xc02 DUP4
0xc03 MSTORE
0xc04 SWAP2
0xc05 DUP5
0xc06 SWAP1
0xc07 SHA3
0xc08 DUP1
0xc09 SLOAD
0xc0a DUP7
0xc0b ADD
0xc0c SWAP1
0xc0d SSTORE
0xc0e DUP4
0xc0f MLOAD
0xc10 DUP6
0xc11 DUP2
0xc12 MSTORE
0xc13 SWAP4
0xc14 MLOAD
0xc15 SWAP2
0xc16 SWAP4
0xc17 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xc38 SWAP3
0xc39 SWAP1
0xc3a DUP2
0xc3b SWAP1
0xc3c SUB
0xc3d SWAP1
0xc3e SWAP2
0xc3f ADD
0xc40 SWAP1
0xc41 LOG3
---
0xbda: JUMPDEST 
0xbdb: V1057 = 0x1
0xbdd: V1058 = 0xa0
0xbdf: V1059 = 0x2
0xbe1: V1060 = EXP 0x2 0xa0
0xbe2: V1061 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbe3: V1062 = CALLER
0xbe5: V1063 = AND 0xffffffffffffffffffffffffffffffffffffffff V1062
0xbe6: V1064 = 0x0
0xbea: M[0x0] = V1063
0xbeb: V1065 = 0x13
0xbed: V1066 = 0x20
0xbf1: M[0x20] = 0x13
0xbf2: V1067 = 0x40
0xbf6: V1068 = SHA3 0x0 0x40
0xbf8: V1069 = S[V1068]
0xbfb: V1070 = SUB V1069 V321
0xbfd: S[V1068] = V1070
0xc00: V1071 = AND V319 0xffffffffffffffffffffffffffffffffffffffff
0xc03: M[0x0] = V1071
0xc07: V1072 = SHA3 0x0 0x40
0xc09: V1073 = S[V1072]
0xc0b: V1074 = ADD V321 V1073
0xc0d: S[V1072] = V1074
0xc0f: V1075 = M[0x40]
0xc12: M[V1075] = V321
0xc14: V1076 = M[0x40]
0xc17: V1077 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xc3c: V1078 = SUB V1075 V1076
0xc3f: V1079 = ADD 0x20 V1078
0xc41: LOG V1076 V1079 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V1063 V1071
---
Entry stack: [V10, 0x11e, V319, V321]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x11e, V319, V321]

================================

Block 0xc42
[0xc42:0xc45]
---
Predecessors: [0xbda]
Successors: [0x11e]
---
0xc42 JUMPDEST
0xc43 POP
0xc44 POP
0xc45 JUMP
---
0xc42: JUMPDEST 
0xc45: JUMP 0x11e
---
Entry stack: [V10, 0x11e, V319, V321]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0xc46
[0xc46:0xc4b]
---
Predecessors: [0x3fd]
Successors: [0x1de]
---
0xc46 JUMPDEST
0xc47 PUSH1 0x4
0xc49 SLOAD
0xc4a DUP2
0xc4b JUMP
---
0xc46: JUMPDEST 
0xc47: V1080 = 0x4
0xc49: V1081 = S[0x4]
0xc4b: JUMP 0x1de
---
Entry stack: [V10, 0x1de]
Stack pops: 1
Stack additions: [S0, V1081]
Exit stack: [V10, 0x1de, V1081]

================================

Block 0xc4c
[0xc4c:0xc5a]
---
Predecessors: [0x41f]
Successors: [0x427]
---
0xc4c JUMPDEST
0xc4d PUSH1 0x11
0xc4f SLOAD
0xc50 PUSH1 0x1
0xc52 PUSH1 0xa0
0xc54 PUSH1 0x2
0xc56 EXP
0xc57 SUB
0xc58 AND
0xc59 DUP2
0xc5a JUMP
---
0xc4c: JUMPDEST 
0xc4d: V1082 = 0x11
0xc4f: V1083 = S[0x11]
0xc50: V1084 = 0x1
0xc52: V1085 = 0xa0
0xc54: V1086 = 0x2
0xc56: V1087 = EXP 0x2 0xa0
0xc57: V1088 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc58: V1089 = AND 0xffffffffffffffffffffffffffffffffffffffff V1083
0xc5a: JUMP 0x427
---
Entry stack: [V10, 0x427]
Stack pops: 1
Stack additions: [S0, V1089]
Exit stack: [V10, 0x427, V1089]

================================

Block 0xc5b
[0xc5b:0xc6d]
---
Predecessors: [0xa8b]
Successors: [0xc6e, 0xc73]
---
0xc5b JUMPDEST
0xc5c PUSH1 0x0
0xc5e DUP3
0xc5f DUP3
0xc60 ADD
0xc61 PUSH2 0xc78
0xc64 DUP5
0xc65 DUP3
0xc66 LT
0xc67 DUP1
0xc68 ISZERO
0xc69 SWAP1
0xc6a PUSH2 0xc73
0xc6d JUMPI
---
0xc5b: JUMPDEST 
0xc5c: V1090 = 0x0
0xc60: V1091 = ADD V927 V926
0xc61: V1092 = 0xc78
0xc66: V1093 = LT V1091 V926
0xc68: V1094 = ISZERO V1093
0xc6a: V1095 = 0xc73
0xc6d: JUMPI 0xc73 V1093
---
Entry stack: [V10, 0x11e, 0xa97, V926, V927]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1091, 0xc78, V1094]
Exit stack: [V10, 0x11e, 0xa97, V926, V927, 0x0, V1091, 0xc78, V1094]

================================

Block 0xc6e
[0xc6e:0xc72]
---
Predecessors: [0xc5b]
Successors: [0xc73]
---
0xc6e POP
0xc6f DUP4
0xc70 DUP3
0xc71 LT
0xc72 ISZERO
---
0xc71: V1096 = LT V1091 V927
0xc72: V1097 = ISZERO V1096
---
Entry stack: [V10, 0x11e, 0xa97, V926, V927, 0x0, V1091, 0xc78, V1094]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V1097]
Exit stack: [V10, 0x11e, 0xa97, V926, V927, 0x0, V1091, 0xc78, V1097]

================================

Block 0xc73
[0xc73:0xc77]
---
Predecessors: [0xc5b, 0xc6e]
Successors: [0xc83]
---
0xc73 JUMPDEST
0xc74 PUSH2 0xc83
0xc77 JUMP
---
0xc73: JUMPDEST 
0xc74: V1098 = 0xc83
0xc77: JUMP 0xc83
---
Entry stack: [V10, 0x11e, 0xa97, V926, V927, 0x0, V1091, 0xc78, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x11e, 0xa97, V926, V927, 0x0, V1091, 0xc78, S0]

================================

Block 0xc78
[0xc78:0xc7b]
---
Predecessors: [0xc91]
Successors: [0xc7c]
---
0xc78 JUMPDEST
0xc79 DUP1
0xc7a SWAP2
0xc7b POP
---
0xc78: JUMPDEST 
---
Entry stack: [V10, 0x11e, 0xa97, V926, V927, 0x0, V1091]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V10, 0x11e, 0xa97, V926, V927, V1091, V1091]

================================

Block 0xc7c
[0xc7c:0xc82]
---
Predecessors: [0xc78]
Successors: [0xa97]
---
0xc7c JUMPDEST
0xc7d POP
0xc7e SWAP3
0xc7f SWAP2
0xc80 POP
0xc81 POP
0xc82 JUMP
---
0xc7c: JUMPDEST 
0xc82: JUMP 0xa97
---
Entry stack: [V10, 0x11e, 0xa97, V926, V927, V1091, V1091]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V10, 0x11e, V1091]

================================

Block 0xc83
[0xc83:0xc8a]
---
Predecessors: [0xc73]
Successors: [0xc8b, 0xc90]
---
0xc83 JUMPDEST
0xc84 DUP1
0xc85 ISZERO
0xc86 ISZERO
0xc87 PUSH2 0xc90
0xc8a JUMPI
---
0xc83: JUMPDEST 
0xc85: V1099 = ISZERO S0
0xc86: V1100 = ISZERO V1099
0xc87: V1101 = 0xc90
0xc8a: JUMPI 0xc90 V1100
---
Entry stack: [V10, 0x11e, 0xa97, V926, V927, 0x0, V1091, 0xc78, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x11e, 0xa97, V926, V927, 0x0, V1091, 0xc78, S0]

================================

Block 0xc8b
[0xc8b:0xc8f]
---
Predecessors: [0xc83]
Successors: []
---
0xc8b PUSH1 0x0
0xc8d PUSH1 0x0
0xc8f REVERT
---
0xc8b: V1102 = 0x0
0xc8d: V1103 = 0x0
0xc8f: REVERT 0x0 0x0
---
Entry stack: [V10, 0x11e, 0xa97, V926, V927, 0x0, V1091, 0xc78, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x11e, 0xa97, V926, V927, 0x0, V1091, 0xc78, S0]

================================

Block 0xc90
[0xc90:0xc90]
---
Predecessors: [0xc83]
Successors: [0xc91]
---
0xc90 JUMPDEST
---
0xc90: JUMPDEST 
---
Entry stack: [V10, 0x11e, 0xa97, V926, V927, 0x0, V1091, 0xc78, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x11e, 0xa97, V926, V927, 0x0, V1091, 0xc78, S0]

================================

Block 0xc91
[0xc91:0xc93]
---
Predecessors: [0xc90]
Successors: [0xc78]
---
0xc91 JUMPDEST
0xc92 POP
0xc93 JUMP
---
0xc91: JUMPDEST 
0xc93: JUMP 0xc78
---
Entry stack: [V10, 0x11e, 0xa97, V926, V927, 0x0, V1091, 0xc78, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x11e, 0xa97, V926, V927, 0x0, V1091]

================================

Block 0xc94
[0xc94:0xccf]
---
Predecessors: []
Successors: []
---
0xc94 STOP
0xc95 LOG1
0xc96 PUSH6 0x627a7a723058
0xc9d SHA3
0xc9e PUSH3 0x77a00b
0xca2 SWAP2
0xca3 MSTORE
0xca4 DUP12
0xca5 MISSING 0x5e
0xca6 MISSING 0xfb
0xca7 PUSH19 0xa67c950fcfa36484e8e88aa15fe0a93c644871
0xcbb PUSH20 0x77fc0029
---
0xc94: STOP 
0xc95: LOG S0 S1 S2
0xc96: V1104 = 0x627a7a723058
0xc9d: V1105 = SHA3 0x627a7a723058 S3
0xc9e: V1106 = 0x77a00b
0xca3: M[S4] = V1105
0xca5: MISSING 0x5e
0xca6: MISSING 0xfb
0xca7: V1107 = 0xa67c950fcfa36484e8e88aa15fe0a93c644871
0xcbb: V1108 = 0x77fc0029
---
Entry stack: []
Stack pops: 0
Stack additions: [S15, 0x77a00b, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, 0x77fc0029, 0xa67c950fcfa36484e8e88aa15fe0a93c644871]
Exit stack: []

================================

Function 0:
Public function signature: 0x2f58015
Entry block: 0x120
Exit block: 0x728
Body: 0x11b, 0x11c, 0x11e, 0x120, 0x127, 0x128, 0x5dc, 0x5e8, 0x5ec, 0x5f8, 0x5fd, 0x684, 0x685, 0x692, 0x693, 0x6ac, 0x6d8, 0x6de, 0x6fc, 0x728

Function 1:
Public function signature: 0x6fdde03
Entry block: 0x132
Exit block: 0x1b4
Body: 0x132, 0x139, 0x13a, 0x142, 0x168, 0x176, 0x188, 0x19b, 0x1b4, 0x72e, 0x76e, 0x776, 0x789, 0x797, 0x7ab, 0x7b4

Function 2:
Public function signature: 0x27e235e3
Entry block: 0x1c2
Exit block: 0x1de
Body: 0x1c2, 0x1c9, 0x1ca, 0x1de, 0x7bc

Function 3:
Public function signature: 0x313ce567
Entry block: 0x1f0
Exit block: 0x200
Body: 0x1f0, 0x1f7, 0x1f8, 0x200, 0x7ce

Function 4:
Public function signature: 0x3ccfd60b
Entry block: 0x216
Exit block: 0x21d
Body: 0x11e, 0x216, 0x21d, 0x21e

Function 5:
Public function signature: 0x41c0e1b5
Entry block: 0x228
Exit block: 0x9c8
Body: 0x228, 0x22f, 0x230, 0x9ac, 0x9c3, 0x9c8

Function 6:
Public function signature: 0x434f5f27
Entry block: 0x23a
Exit block: 0x256
Body: 0x23a, 0x241, 0x242, 0x256, 0x9d9

Function 7:
Public function signature: 0x5259347d
Entry block: 0x26a
Exit block: 0x11e
Body: 0x11e, 0x26a

Function 8:
Public function signature: 0x62f5ed61
Entry block: 0x274
Exit block: 0x11e
Body: 0x11e, 0x274, 0x9ee, 0xa05, 0xa0a, 0xa16, 0xa1b, 0xa27, 0xa2c, 0xa35

Function 9:
Public function signature: 0x6360fc3f
Entry block: 0x27e
Exit block: 0x256
Body: 0x256, 0x27e, 0x285, 0x286, 0xa37

Function 10:
Public function signature: 0x70144f8f
Entry block: 0x2a2
Exit block: 0x11e
Body: 0x11e, 0x2a2, 0x2a9, 0x2aa, 0xa40, 0xa57, 0xa5c, 0xa6a

Function 11:
Public function signature: 0x70a08231
Entry block: 0x2b4
Exit block: 0x1de
Body: 0x1de, 0x2b4, 0x2bb, 0x2bc, 0xa6c

Function 12:
Public function signature: 0x87612102
Entry block: 0x2e2
Exit block: 0x11e
Body: 0x11e, 0x2e2, 0xa7e, 0xa86, 0xa8b, 0xa97, 0xa9b, 0xc5b, 0xc6e, 0xc73, 0xc78, 0xc7c, 0xc83, 0xc8b, 0xc90, 0xc91

Function 13:
Public function signature: 0x943dfef1
Entry block: 0x2ec
Exit block: 0x1de
Body: 0x1de, 0x2ec, 0x2f3, 0x2f4, 0xa9d

Function 14:
Public function signature: 0x95d89b41
Entry block: 0x30e
Exit block: 0x1b4
Body: 0x142, 0x168, 0x176, 0x188, 0x19b, 0x1b4, 0x30e, 0x315, 0x316, 0x789, 0x797, 0x7ab, 0x7b4, 0xaa3, 0xae3, 0xaeb

Function 15:
Public function signature: 0xa089feea
Entry block: 0x39e
Exit block: 0x256
Body: 0x256, 0x39e, 0x3a5, 0x3a6, 0xb31

Function 16:
Public function signature: 0xa0ef91df
Entry block: 0x3c2
Exit block: 0x11e
Body: 0x11b, 0x11c, 0x11e, 0x3c2, 0x3c9, 0x3ca, 0xb3a, 0xb51, 0xb56, 0xb86

Function 17:
Public function signature: 0xa9059cbb
Entry block: 0x3d4
Exit block: 0x11e
Body: 0x11e, 0x3d4, 0x3db, 0x3dc, 0xb8b, 0xbad, 0xbb2, 0xbd5, 0xbda, 0xc42

Function 18:
Public function signature: 0xc3dac9a1
Entry block: 0x3f5
Exit block: 0x1de
Body: 0x1de, 0x3f5, 0x3fc, 0x3fd, 0xc46

Function 19:
Public function signature: 0xfc0c546a
Entry block: 0x417
Exit block: 0x427
Body: 0x417, 0x41e, 0x41f, 0x427, 0xc4c

Function 20:
Public fallback function
Entry block: 0x10f
Exit block: 0x11e
Body: 0x10f, 0x113, 0x11b, 0x11c, 0x11e

Function 21:
Private function
Entry block: 0x7d7
Exit block: 0x9a7
Body: 0x7d7, 0x7eb, 0x82c, 0x831, 0x86a, 0x86d, 0x8ea, 0x8f8, 0x90c, 0x90d, 0x983, 0x991, 0x9a5, 0x9a6, 0x9a7

Function 22:
Private function
Entry block: 0x443
Exit block: 0x5da
Body: 0x443, 0x452, 0x45d, 0x4c0, 0x4ce, 0x53b, 0x549, 0x55f, 0x58a, 0x592, 0x593, 0x598, 0x5a9, 0x5ba, 0x5d9, 0x5da

