Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x4a]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x4a
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x4a
0xa: JUMPI 0x4a V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x129]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0xbc2e2aec
0x3a EQ
0x3b PUSH2 0x129
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0xbc2e2aec
0x3a: V12 = EQ 0xbc2e2aec V10
0x3b: V13 = 0x129
0x3e: JUMPI 0x129 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x17e]
---
0x3f DUP1
0x40 PUSH4 0xf0964241
0x45 EQ
0x46 PUSH2 0x17e
0x49 JUMPI
---
0x40: V14 = 0xf0964241
0x45: V15 = EQ 0xf0964241 V10
0x46: V16 = 0x17e
0x49: JUMPI 0x17e V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x4a]
---
Predecessors: [0x0, 0x3f]
Successors: [0x4b]
---
0x4a JUMPDEST
---
0x4a: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x90]
---
Predecessors: [0x4a]
Successors: [0x91, 0x92]
---
0x4b JUMPDEST
0x4c PUSH1 0x0
0x4e DUP1
0x4f SWAP1
0x50 SLOAD
0x51 SWAP1
0x52 PUSH2 0x100
0x55 EXP
0x56 SWAP1
0x57 DIV
0x58 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6d AND
0x6e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x83 AND
0x84 PUSH2 0x8fc
0x87 PUSH1 0x2
0x89 CALLVALUE
0x8a DUP2
0x8b ISZERO
0x8c ISZERO
0x8d PUSH2 0x92
0x90 JUMPI
---
0x4b: JUMPDEST 
0x4c: V17 = 0x0
0x50: V18 = S[0x0]
0x52: V19 = 0x100
0x55: V20 = EXP 0x100 0x0
0x57: V21 = DIV V18 0x1
0x58: V22 = 0xffffffffffffffffffffffffffffffffffffffff
0x6d: V23 = AND 0xffffffffffffffffffffffffffffffffffffffff V21
0x6e: V24 = 0xffffffffffffffffffffffffffffffffffffffff
0x83: V25 = AND 0xffffffffffffffffffffffffffffffffffffffff V23
0x84: V26 = 0x8fc
0x87: V27 = 0x2
0x89: V28 = CALLVALUE
0x8b: V29 = ISZERO 0x2
0x8c: V30 = ISZERO 0x0
0x8d: V31 = 0x92
0x90: JUMPI 0x92 0x1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [V25, 0x8fc, 0x2, V28]
Exit stack: [V10, V25, 0x8fc, 0x2, V28]

================================

Block 0x91
[0x91:0x91]
---
Predecessors: [0x4b]
Successors: []
---
0x91 INVALID
---
0x91: INVALID 
---
Entry stack: [V10, V25, 0x8fc, 0x2, V28]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V25, 0x8fc, 0x2, V28]

================================

Block 0x92
[0x92:0xb3]
---
Predecessors: [0x4b]
Successors: [0xb4, 0xb8]
---
0x92 JUMPDEST
0x93 DIV
0x94 SWAP1
0x95 DUP2
0x96 ISZERO
0x97 MUL
0x98 SWAP1
0x99 PUSH1 0x40
0x9b MLOAD
0x9c PUSH1 0x0
0x9e PUSH1 0x40
0xa0 MLOAD
0xa1 DUP1
0xa2 DUP4
0xa3 SUB
0xa4 DUP2
0xa5 DUP6
0xa6 DUP9
0xa7 DUP9
0xa8 CALL
0xa9 SWAP4
0xaa POP
0xab POP
0xac POP
0xad POP
0xae ISZERO
0xaf ISZERO
0xb0 PUSH2 0xb8
0xb3 JUMPI
---
0x92: JUMPDEST 
0x93: V32 = DIV V28 0x2
0x96: V33 = ISZERO V32
0x97: V34 = MUL V33 0x8fc
0x99: V35 = 0x40
0x9b: V36 = M[0x40]
0x9c: V37 = 0x0
0x9e: V38 = 0x40
0xa0: V39 = M[0x40]
0xa3: V40 = SUB V36 V39
0xa8: V41 = CALL V34 V25 V32 V39 V40 V39 0x0
0xae: V42 = ISZERO V41
0xaf: V43 = ISZERO V42
0xb0: V44 = 0xb8
0xb3: JUMPI 0xb8 V43
---
Entry stack: [V10, V25, 0x8fc, 0x2, V28]
Stack pops: 4
Stack additions: []
Exit stack: [V10]

================================

Block 0xb4
[0xb4:0xb7]
---
Predecessors: [0x92]
Successors: []
---
0xb4 PUSH1 0x0
0xb6 DUP1
0xb7 REVERT
---
0xb4: V45 = 0x0
0xb7: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xb8
[0xb8:0xfe]
---
Predecessors: [0x92]
Successors: [0xff, 0x100]
---
0xb8 JUMPDEST
0xb9 PUSH1 0x1
0xbb PUSH1 0x0
0xbd SWAP1
0xbe SLOAD
0xbf SWAP1
0xc0 PUSH2 0x100
0xc3 EXP
0xc4 SWAP1
0xc5 DIV
0xc6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdb AND
0xdc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf1 AND
0xf2 PUSH2 0x8fc
0xf5 PUSH1 0x2
0xf7 CALLVALUE
0xf8 DUP2
0xf9 ISZERO
0xfa ISZERO
0xfb PUSH2 0x100
0xfe JUMPI
---
0xb8: JUMPDEST 
0xb9: V46 = 0x1
0xbb: V47 = 0x0
0xbe: V48 = S[0x1]
0xc0: V49 = 0x100
0xc3: V50 = EXP 0x100 0x0
0xc5: V51 = DIV V48 0x1
0xc6: V52 = 0xffffffffffffffffffffffffffffffffffffffff
0xdb: V53 = AND 0xffffffffffffffffffffffffffffffffffffffff V51
0xdc: V54 = 0xffffffffffffffffffffffffffffffffffffffff
0xf1: V55 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0xf2: V56 = 0x8fc
0xf5: V57 = 0x2
0xf7: V58 = CALLVALUE
0xf9: V59 = ISZERO 0x2
0xfa: V60 = ISZERO 0x0
0xfb: V61 = 0x100
0xfe: JUMPI 0x100 0x1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [V55, 0x8fc, 0x2, V58]
Exit stack: [V10, V55, 0x8fc, 0x2, V58]

================================

Block 0xff
[0xff:0xff]
---
Predecessors: [0xb8]
Successors: []
---
0xff INVALID
---
0xff: INVALID 
---
Entry stack: [V10, V55, 0x8fc, 0x2, V58]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V55, 0x8fc, 0x2, V58]

================================

Block 0x100
[0x100:0x121]
---
Predecessors: [0xb8]
Successors: [0x122, 0x126]
---
0x100 JUMPDEST
0x101 DIV
0x102 SWAP1
0x103 DUP2
0x104 ISZERO
0x105 MUL
0x106 SWAP1
0x107 PUSH1 0x40
0x109 MLOAD
0x10a PUSH1 0x0
0x10c PUSH1 0x40
0x10e MLOAD
0x10f DUP1
0x110 DUP4
0x111 SUB
0x112 DUP2
0x113 DUP6
0x114 DUP9
0x115 DUP9
0x116 CALL
0x117 SWAP4
0x118 POP
0x119 POP
0x11a POP
0x11b POP
0x11c ISZERO
0x11d ISZERO
0x11e PUSH2 0x126
0x121 JUMPI
---
0x100: JUMPDEST 
0x101: V62 = DIV V58 0x2
0x104: V63 = ISZERO V62
0x105: V64 = MUL V63 0x8fc
0x107: V65 = 0x40
0x109: V66 = M[0x40]
0x10a: V67 = 0x0
0x10c: V68 = 0x40
0x10e: V69 = M[0x40]
0x111: V70 = SUB V66 V69
0x116: V71 = CALL V64 V55 V62 V69 V70 V69 0x0
0x11c: V72 = ISZERO V71
0x11d: V73 = ISZERO V72
0x11e: V74 = 0x126
0x121: JUMPI 0x126 V73
---
Entry stack: [V10, V55, 0x8fc, 0x2, V58]
Stack pops: 4
Stack additions: []
Exit stack: [V10]

================================

Block 0x122
[0x122:0x125]
---
Predecessors: [0x100]
Successors: []
---
0x122 PUSH1 0x0
0x124 DUP1
0x125 REVERT
---
0x122: V75 = 0x0
0x125: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x126
[0x126:0x126]
---
Predecessors: [0x100]
Successors: [0x127]
---
0x126 JUMPDEST
---
0x126: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x127
[0x127:0x128]
---
Predecessors: [0x126]
Successors: []
---
0x127 JUMPDEST
0x128 STOP
---
0x127: JUMPDEST 
0x128: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x129
[0x129:0x12f]
---
Predecessors: [0xb]
Successors: [0x130, 0x134]
---
0x129 JUMPDEST
0x12a CALLVALUE
0x12b ISZERO
0x12c PUSH2 0x134
0x12f JUMPI
---
0x129: JUMPDEST 
0x12a: V76 = CALLVALUE
0x12b: V77 = ISZERO V76
0x12c: V78 = 0x134
0x12f: JUMPI 0x134 V77
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x130
[0x130:0x133]
---
Predecessors: [0x129]
Successors: []
---
0x130 PUSH1 0x0
0x132 DUP1
0x133 REVERT
---
0x130: V79 = 0x0
0x133: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x134
[0x134:0x13b]
---
Predecessors: [0x129]
Successors: [0x1d3]
---
0x134 JUMPDEST
0x135 PUSH2 0x13c
0x138 PUSH2 0x1d3
0x13b JUMP
---
0x134: JUMPDEST 
0x135: V80 = 0x13c
0x138: V81 = 0x1d3
0x13b: JUMP 0x1d3
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x13c]
Exit stack: [V10, 0x13c]

================================

Block 0x13c
[0x13c:0x17d]
---
Predecessors: [0x1d3]
Successors: []
---
0x13c JUMPDEST
0x13d PUSH1 0x40
0x13f MLOAD
0x140 DUP1
0x141 DUP3
0x142 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x157 AND
0x158 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16d AND
0x16e DUP2
0x16f MSTORE
0x170 PUSH1 0x20
0x172 ADD
0x173 SWAP2
0x174 POP
0x175 POP
0x176 PUSH1 0x40
0x178 MLOAD
0x179 DUP1
0x17a SWAP2
0x17b SUB
0x17c SWAP1
0x17d RETURN
---
0x13c: JUMPDEST 
0x13d: V82 = 0x40
0x13f: V83 = M[0x40]
0x142: V84 = 0xffffffffffffffffffffffffffffffffffffffff
0x157: V85 = AND 0xffffffffffffffffffffffffffffffffffffffff V117
0x158: V86 = 0xffffffffffffffffffffffffffffffffffffffff
0x16d: V87 = AND 0xffffffffffffffffffffffffffffffffffffffff V85
0x16f: M[V83] = V87
0x170: V88 = 0x20
0x172: V89 = ADD 0x20 V83
0x176: V90 = 0x40
0x178: V91 = M[0x40]
0x17b: V92 = SUB V89 V91
0x17d: RETURN V91 V92
---
Entry stack: [V10, 0x13c, V117]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x13c]

================================

Block 0x17e
[0x17e:0x184]
---
Predecessors: [0x3f]
Successors: [0x185, 0x189]
---
0x17e JUMPDEST
0x17f CALLVALUE
0x180 ISZERO
0x181 PUSH2 0x189
0x184 JUMPI
---
0x17e: JUMPDEST 
0x17f: V93 = CALLVALUE
0x180: V94 = ISZERO V93
0x181: V95 = 0x189
0x184: JUMPI 0x189 V94
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x185
[0x185:0x188]
---
Predecessors: [0x17e]
Successors: []
---
0x185 PUSH1 0x0
0x187 DUP1
0x188 REVERT
---
0x185: V96 = 0x0
0x188: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x189
[0x189:0x190]
---
Predecessors: [0x17e]
Successors: [0x1f9]
---
0x189 JUMPDEST
0x18a PUSH2 0x191
0x18d PUSH2 0x1f9
0x190 JUMP
---
0x189: JUMPDEST 
0x18a: V97 = 0x191
0x18d: V98 = 0x1f9
0x190: JUMP 0x1f9
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x191]
Exit stack: [V10, 0x191]

================================

Block 0x191
[0x191:0x1d2]
---
Predecessors: [0x1f9]
Successors: []
---
0x191 JUMPDEST
0x192 PUSH1 0x40
0x194 MLOAD
0x195 DUP1
0x196 DUP3
0x197 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ac AND
0x1ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c2 AND
0x1c3 DUP2
0x1c4 MSTORE
0x1c5 PUSH1 0x20
0x1c7 ADD
0x1c8 SWAP2
0x1c9 POP
0x1ca POP
0x1cb PUSH1 0x40
0x1cd MLOAD
0x1ce DUP1
0x1cf SWAP2
0x1d0 SUB
0x1d1 SWAP1
0x1d2 RETURN
---
0x191: JUMPDEST 
0x192: V99 = 0x40
0x194: V100 = M[0x40]
0x197: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ac: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V124
0x1ad: V103 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c2: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x1c4: M[V100] = V104
0x1c5: V105 = 0x20
0x1c7: V106 = ADD 0x20 V100
0x1cb: V107 = 0x40
0x1cd: V108 = M[0x40]
0x1d0: V109 = SUB V106 V108
0x1d2: RETURN V108 V109
---
Entry stack: [V10, 0x191, V124]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x191]

================================

Block 0x1d3
[0x1d3:0x1f8]
---
Predecessors: [0x134]
Successors: [0x13c]
---
0x1d3 JUMPDEST
0x1d4 PUSH1 0x1
0x1d6 PUSH1 0x0
0x1d8 SWAP1
0x1d9 SLOAD
0x1da SWAP1
0x1db PUSH2 0x100
0x1de EXP
0x1df SWAP1
0x1e0 DIV
0x1e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f6 AND
0x1f7 DUP2
0x1f8 JUMP
---
0x1d3: JUMPDEST 
0x1d4: V110 = 0x1
0x1d6: V111 = 0x0
0x1d9: V112 = S[0x1]
0x1db: V113 = 0x100
0x1de: V114 = EXP 0x100 0x0
0x1e0: V115 = DIV V112 0x1
0x1e1: V116 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f6: V117 = AND 0xffffffffffffffffffffffffffffffffffffffff V115
0x1f8: JUMP 0x13c
---
Entry stack: [V10, 0x13c]
Stack pops: 1
Stack additions: [S0, V117]
Exit stack: [V10, 0x13c, V117]

================================

Block 0x1f9
[0x1f9:0x21d]
---
Predecessors: [0x189]
Successors: [0x191]
---
0x1f9 JUMPDEST
0x1fa PUSH1 0x0
0x1fc DUP1
0x1fd SWAP1
0x1fe SLOAD
0x1ff SWAP1
0x200 PUSH2 0x100
0x203 EXP
0x204 SWAP1
0x205 DIV
0x206 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21b AND
0x21c DUP2
0x21d JUMP
---
0x1f9: JUMPDEST 
0x1fa: V118 = 0x0
0x1fe: V119 = S[0x0]
0x200: V120 = 0x100
0x203: V121 = EXP 0x100 0x0
0x205: V122 = DIV V119 0x1
0x206: V123 = 0xffffffffffffffffffffffffffffffffffffffff
0x21b: V124 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x21d: JUMP 0x191
---
Entry stack: [V10, 0x191]
Stack pops: 1
Stack additions: [S0, V124]
Exit stack: [V10, 0x191, V124]

================================

Block 0x21e
[0x21e:0x249]
---
Predecessors: []
Successors: []
---
0x21e STOP
0x21f LOG1
0x220 PUSH6 0x627a7a723058
0x227 SHA3
0x228 PUSH28 0xd73dadcda09653a510c9094169cd8f2c511a5f7624fcf79816d6c8cf
0x245 MISSING 0xd4
0x246 DUP16
0x247 LOG1
0x248 STOP
0x249 MISSING 0x29
---
0x21e: STOP 
0x21f: LOG S0 S1 S2
0x220: V125 = 0x627a7a723058
0x227: V126 = SHA3 0x627a7a723058 S3
0x228: V127 = 0xd73dadcda09653a510c9094169cd8f2c511a5f7624fcf79816d6c8cf
0x245: MISSING 0xd4
0x247: LOG S15 S0 S1
0x248: STOP 
0x249: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0xd73dadcda09653a510c9094169cd8f2c511a5f7624fcf79816d6c8cf, V126, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15]
Exit stack: []

================================

Function 0:
Public function signature: 0xbc2e2aec
Entry block: 0x129
Exit block: 0x13c
Body: 0x129, 0x130, 0x134, 0x13c, 0x1d3

Function 1:
Public function signature: 0xf0964241
Entry block: 0x17e
Exit block: 0x191
Body: 0x17e, 0x185, 0x189, 0x191, 0x1f9

Function 2:
Public fallback function
Entry block: 0x4a
Exit block: 0x127
Body: 0x4a, 0x4b, 0x91, 0x92, 0xb4, 0xb8, 0xff, 0x100, 0x122, 0x126, 0x127

