Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x82]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x82
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x82
0xc: JUMPI 0x82 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x8d]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH3 0xce8e3e
0x3b EQ
0x3c PUSH2 0x8d
0x3f JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0xce8e3e
0x3b: V13 = EQ 0xce8e3e V11
0x3c: V14 = 0x8d
0x3f: JUMPI 0x8d V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xf7]
---
0x40 DUP1
0x41 PUSH4 0x474a68e
0x46 EQ
0x47 PUSH2 0xf7
0x4a JUMPI
---
0x41: V15 = 0x474a68e
0x46: V16 = EQ 0x474a68e V11
0x47: V17 = 0xf7
0x4a: JUMPI 0xf7 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x125]
---
0x4b DUP1
0x4c PUSH4 0x12065fe0
0x51 EQ
0x52 PUSH2 0x125
0x55 JUMPI
---
0x4c: V18 = 0x12065fe0
0x51: V19 = EQ 0x12065fe0 V11
0x52: V20 = 0x125
0x55: JUMPI 0x125 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x14e]
---
0x56 DUP1
0x57 PUSH4 0x590e1ae3
0x5c EQ
0x5d PUSH2 0x14e
0x60 JUMPI
---
0x57: V21 = 0x590e1ae3
0x5c: V22 = EQ 0x590e1ae3 V11
0x5d: V23 = 0x14e
0x60: JUMPI 0x14e V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x163]
---
0x61 DUP1
0x62 PUSH4 0x8da5cb5b
0x67 EQ
0x68 PUSH2 0x163
0x6b JUMPI
---
0x62: V24 = 0x8da5cb5b
0x67: V25 = EQ 0x8da5cb5b V11
0x68: V26 = 0x163
0x6b: JUMPI 0x163 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x1b8]
---
0x6c DUP1
0x6d PUSH4 0xad1fef9c
0x72 EQ
0x73 PUSH2 0x1b8
0x76 JUMPI
---
0x6d: V27 = 0xad1fef9c
0x72: V28 = EQ 0xad1fef9c V11
0x73: V29 = 0x1b8
0x76: JUMPI 0x1b8 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x1e1]
---
0x77 DUP1
0x78 PUSH4 0xcd85f845
0x7d EQ
0x7e PUSH2 0x1e1
0x81 JUMPI
---
0x78: V30 = 0xcd85f845
0x7d: V31 = EQ 0xcd85f845 V11
0x7e: V32 = 0x1e1
0x81: JUMPI 0x1e1 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8a]
---
Predecessors: [0x0, 0x77]
Successors: [0x21a]
---
0x82 JUMPDEST
0x83 PUSH2 0x8b
0x86 CALLER
0x87 PUSH2 0x21a
0x8a JUMP
---
0x82: JUMPDEST 
0x83: V33 = 0x8b
0x86: V34 = CALLER
0x87: V35 = 0x21a
0x8a: JUMP 0x21a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x8b, V34]
Exit stack: [V11, 0x8b, V34]

================================

Block 0x8b
[0x8b:0x8c]
---
Predecessors: [0x272]
Successors: []
---
0x8b JUMPDEST
0x8c STOP
---
0x8b: JUMPDEST 
0x8c: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x93]
---
Predecessors: [0xd]
Successors: [0x94, 0x98]
---
0x8d JUMPDEST
0x8e CALLVALUE
0x8f ISZERO
0x90 PUSH2 0x98
0x93 JUMPI
---
0x8d: JUMPDEST 
0x8e: V36 = CALLVALUE
0x8f: V37 = ISZERO V36
0x90: V38 = 0x98
0x93: JUMPI 0x98 V37
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x94
[0x94:0x97]
---
Predecessors: [0x8d]
Successors: []
---
0x94 PUSH1 0x0
0x96 DUP1
0x97 REVERT
---
0x94: V39 = 0x0
0x97: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x98
[0x98:0x9f]
---
Predecessors: [0x8d]
Successors: [0x2d4]
---
0x98 JUMPDEST
0x99 PUSH2 0xa0
0x9c PUSH2 0x2d4
0x9f JUMP
---
0x98: JUMPDEST 
0x99: V40 = 0xa0
0x9c: V41 = 0x2d4
0x9f: JUMP 0x2d4
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa0]
Exit stack: [V11, 0xa0]

================================

Block 0xa0
[0xa0:0xc7]
---
Predecessors: [0x35e]
Successors: [0xc8]
---
0xa0 JUMPDEST
0xa1 PUSH1 0x40
0xa3 MLOAD
0xa4 DUP1
0xa5 DUP1
0xa6 PUSH1 0x20
0xa8 ADD
0xa9 DUP3
0xaa DUP2
0xab SUB
0xac DUP3
0xad MSTORE
0xae DUP4
0xaf DUP2
0xb0 DUP2
0xb1 MLOAD
0xb2 DUP2
0xb3 MSTORE
0xb4 PUSH1 0x20
0xb6 ADD
0xb7 SWAP2
0xb8 POP
0xb9 DUP1
0xba MLOAD
0xbb SWAP1
0xbc PUSH1 0x20
0xbe ADD
0xbf SWAP1
0xc0 PUSH1 0x20
0xc2 MUL
0xc3 DUP1
0xc4 DUP4
0xc5 DUP4
0xc6 PUSH1 0x0
---
0xa0: JUMPDEST 
0xa1: V42 = 0x40
0xa3: V43 = M[0x40]
0xa6: V44 = 0x20
0xa8: V45 = ADD 0x20 V43
0xab: V46 = SUB V45 V43
0xad: M[V43] = V46
0xb1: V47 = M[V188]
0xb3: M[V45] = V47
0xb4: V48 = 0x20
0xb6: V49 = ADD 0x20 V45
0xba: V50 = M[V188]
0xbc: V51 = 0x20
0xbe: V52 = ADD 0x20 V188
0xc0: V53 = 0x20
0xc2: V54 = MUL 0x20 V50
0xc6: V55 = 0x0
---
Entry stack: [V11, V188]
Stack pops: 1
Stack additions: [S0, V43, V43, V49, V52, V54, V54, V49, V52, 0x0]
Exit stack: [V11, V188, V43, V43, V49, V52, V54, V54, V49, V52, 0x0]

================================

Block 0xc8
[0xc8:0xd0]
---
Predecessors: [0xa0, 0xd1]
Successors: [0xd1, 0xe3]
---
0xc8 JUMPDEST
0xc9 DUP4
0xca DUP2
0xcb LT
0xcc ISZERO
0xcd PUSH2 0xe3
0xd0 JUMPI
---
0xc8: JUMPDEST 
0xcb: V56 = LT S0 V54
0xcc: V57 = ISZERO V56
0xcd: V58 = 0xe3
0xd0: JUMPI 0xe3 V57
---
Entry stack: [V11, V188, V43, V43, V49, V52, V54, V54, V49, V52, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, V188, V43, V43, V49, V52, V54, V54, V49, V52, S0]

================================

Block 0xd1
[0xd1:0xe2]
---
Predecessors: [0xc8]
Successors: [0xc8]
---
0xd1 DUP1
0xd2 DUP3
0xd3 ADD
0xd4 MLOAD
0xd5 DUP2
0xd6 DUP5
0xd7 ADD
0xd8 MSTORE
0xd9 PUSH1 0x20
0xdb DUP2
0xdc ADD
0xdd SWAP1
0xde POP
0xdf PUSH2 0xc8
0xe2 JUMP
---
0xd3: V59 = ADD V52 S0
0xd4: V60 = M[V59]
0xd7: V61 = ADD V49 S0
0xd8: M[V61] = V60
0xd9: V62 = 0x20
0xdc: V63 = ADD S0 0x20
0xdf: V64 = 0xc8
0xe2: JUMP 0xc8
---
Entry stack: [V11, V188, V43, V43, V49, V52, V54, V54, V49, V52, S0]
Stack pops: 3
Stack additions: [S2, S1, V63]
Exit stack: [V11, V188, V43, V43, V49, V52, V54, V54, V49, V52, V63]

================================

Block 0xe3
[0xe3:0xf6]
---
Predecessors: [0xc8]
Successors: []
---
0xe3 JUMPDEST
0xe4 POP
0xe5 POP
0xe6 POP
0xe7 POP
0xe8 SWAP1
0xe9 POP
0xea ADD
0xeb SWAP3
0xec POP
0xed POP
0xee POP
0xef PUSH1 0x40
0xf1 MLOAD
0xf2 DUP1
0xf3 SWAP2
0xf4 SUB
0xf5 SWAP1
0xf6 RETURN
---
0xe3: JUMPDEST 
0xea: V65 = ADD V54 V49
0xef: V66 = 0x40
0xf1: V67 = M[0x40]
0xf4: V68 = SUB V65 V67
0xf6: RETURN V67 V68
---
Entry stack: [V11, V188, V43, V43, V49, V52, V54, V54, V49, V52, S0]
Stack pops: 10
Stack additions: []
Exit stack: [V11]

================================

Block 0xf7
[0xf7:0x122]
---
Predecessors: [0x40]
Successors: [0x21a]
---
0xf7 JUMPDEST
0xf8 PUSH2 0x123
0xfb PUSH1 0x4
0xfd DUP1
0xfe DUP1
0xff CALLDATALOAD
0x100 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x115 AND
0x116 SWAP1
0x117 PUSH1 0x20
0x119 ADD
0x11a SWAP1
0x11b SWAP2
0x11c SWAP1
0x11d POP
0x11e POP
0x11f PUSH2 0x21a
0x122 JUMP
---
0xf7: JUMPDEST 
0xf8: V69 = 0x123
0xfb: V70 = 0x4
0xff: V71 = CALLDATALOAD 0x4
0x100: V72 = 0xffffffffffffffffffffffffffffffffffffffff
0x115: V73 = AND 0xffffffffffffffffffffffffffffffffffffffff V71
0x117: V74 = 0x20
0x119: V75 = ADD 0x20 0x4
0x11f: V76 = 0x21a
0x122: JUMP 0x21a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x123, V73]
Exit stack: [V11, 0x123, V73]

================================

Block 0x123
[0x123:0x124]
---
Predecessors: [0x272]
Successors: []
---
0x123 JUMPDEST
0x124 STOP
---
0x123: JUMPDEST 
0x124: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x125
[0x125:0x12b]
---
Predecessors: [0x4b]
Successors: [0x12c, 0x130]
---
0x125 JUMPDEST
0x126 CALLVALUE
0x127 ISZERO
0x128 PUSH2 0x130
0x12b JUMPI
---
0x125: JUMPDEST 
0x126: V77 = CALLVALUE
0x127: V78 = ISZERO V77
0x128: V79 = 0x130
0x12b: JUMPI 0x130 V78
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x12c
[0x12c:0x12f]
---
Predecessors: [0x125]
Successors: []
---
0x12c PUSH1 0x0
0x12e DUP1
0x12f REVERT
---
0x12c: V80 = 0x0
0x12f: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x130
[0x130:0x137]
---
Predecessors: [0x125]
Successors: [0x368]
---
0x130 JUMPDEST
0x131 PUSH2 0x138
0x134 PUSH2 0x368
0x137 JUMP
---
0x130: JUMPDEST 
0x131: V81 = 0x138
0x134: V82 = 0x368
0x137: JUMP 0x368
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x138]
Exit stack: [V11, 0x138]

================================

Block 0x138
[0x138:0x14d]
---
Predecessors: [0x368]
Successors: []
---
0x138 JUMPDEST
0x139 PUSH1 0x40
0x13b MLOAD
0x13c DUP1
0x13d DUP3
0x13e DUP2
0x13f MSTORE
0x140 PUSH1 0x20
0x142 ADD
0x143 SWAP2
0x144 POP
0x145 POP
0x146 PUSH1 0x40
0x148 MLOAD
0x149 DUP1
0x14a SWAP2
0x14b SUB
0x14c SWAP1
0x14d RETURN
---
0x138: JUMPDEST 
0x139: V83 = 0x40
0x13b: V84 = M[0x40]
0x13f: M[V84] = V220
0x140: V85 = 0x20
0x142: V86 = ADD 0x20 V84
0x146: V87 = 0x40
0x148: V88 = M[0x40]
0x14b: V89 = SUB V86 V88
0x14d: RETURN V88 V89
---
Entry stack: [V11, V220]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x14e
[0x14e:0x154]
---
Predecessors: [0x56]
Successors: [0x155, 0x159]
---
0x14e JUMPDEST
0x14f CALLVALUE
0x150 ISZERO
0x151 PUSH2 0x159
0x154 JUMPI
---
0x14e: JUMPDEST 
0x14f: V90 = CALLVALUE
0x150: V91 = ISZERO V90
0x151: V92 = 0x159
0x154: JUMPI 0x159 V91
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x155
[0x155:0x158]
---
Predecessors: [0x14e]
Successors: []
---
0x155 PUSH1 0x0
0x157 DUP1
0x158 REVERT
---
0x155: V93 = 0x0
0x158: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x159
[0x159:0x160]
---
Predecessors: [0x14e]
Successors: [0x372]
---
0x159 JUMPDEST
0x15a PUSH2 0x161
0x15d PUSH2 0x372
0x160 JUMP
---
0x159: JUMPDEST 
0x15a: V94 = 0x161
0x15d: V95 = 0x372
0x160: JUMP 0x372
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x161]
Exit stack: [V11, 0x161]

================================

Block 0x161
[0x161:0x162]
---
Predecessors: [0x4d8]
Successors: []
---
0x161 JUMPDEST
0x162 STOP
---
0x161: JUMPDEST 
0x162: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x163
[0x163:0x169]
---
Predecessors: [0x61]
Successors: [0x16a, 0x16e]
---
0x163 JUMPDEST
0x164 CALLVALUE
0x165 ISZERO
0x166 PUSH2 0x16e
0x169 JUMPI
---
0x163: JUMPDEST 
0x164: V96 = CALLVALUE
0x165: V97 = ISZERO V96
0x166: V98 = 0x16e
0x169: JUMPI 0x16e V97
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x16a
[0x16a:0x16d]
---
Predecessors: [0x163]
Successors: []
---
0x16a PUSH1 0x0
0x16c DUP1
0x16d REVERT
---
0x16a: V99 = 0x0
0x16d: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x16e
[0x16e:0x175]
---
Predecessors: [0x163]
Successors: [0x4db]
---
0x16e JUMPDEST
0x16f PUSH2 0x176
0x172 PUSH2 0x4db
0x175 JUMP
---
0x16e: JUMPDEST 
0x16f: V100 = 0x176
0x172: V101 = 0x4db
0x175: JUMP 0x4db
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x176]
Exit stack: [V11, 0x176]

================================

Block 0x176
[0x176:0x1b7]
---
Predecessors: [0x4db]
Successors: []
---
0x176 JUMPDEST
0x177 PUSH1 0x40
0x179 MLOAD
0x17a DUP1
0x17b DUP3
0x17c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x191 AND
0x192 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a7 AND
0x1a8 DUP2
0x1a9 MSTORE
0x1aa PUSH1 0x20
0x1ac ADD
0x1ad SWAP2
0x1ae POP
0x1af POP
0x1b0 PUSH1 0x40
0x1b2 MLOAD
0x1b3 DUP1
0x1b4 SWAP2
0x1b5 SUB
0x1b6 SWAP1
0x1b7 RETURN
---
0x176: JUMPDEST 
0x177: V102 = 0x40
0x179: V103 = M[0x40]
0x17c: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x191: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V316
0x192: V106 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a7: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V105
0x1a9: M[V103] = V107
0x1aa: V108 = 0x20
0x1ac: V109 = ADD 0x20 V103
0x1b0: V110 = 0x40
0x1b2: V111 = M[0x40]
0x1b5: V112 = SUB V109 V111
0x1b7: RETURN V111 V112
---
Entry stack: [V11, 0x176, V316]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x176]

================================

Block 0x1b8
[0x1b8:0x1be]
---
Predecessors: [0x6c]
Successors: [0x1bf, 0x1c3]
---
0x1b8 JUMPDEST
0x1b9 CALLVALUE
0x1ba ISZERO
0x1bb PUSH2 0x1c3
0x1be JUMPI
---
0x1b8: JUMPDEST 
0x1b9: V113 = CALLVALUE
0x1ba: V114 = ISZERO V113
0x1bb: V115 = 0x1c3
0x1be: JUMPI 0x1c3 V114
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1bf
[0x1bf:0x1c2]
---
Predecessors: [0x1b8]
Successors: []
---
0x1bf PUSH1 0x0
0x1c1 DUP1
0x1c2 REVERT
---
0x1bf: V116 = 0x0
0x1c2: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1c3
[0x1c3:0x1ca]
---
Predecessors: [0x1b8]
Successors: [0x500]
---
0x1c3 JUMPDEST
0x1c4 PUSH2 0x1cb
0x1c7 PUSH2 0x500
0x1ca JUMP
---
0x1c3: JUMPDEST 
0x1c4: V117 = 0x1cb
0x1c7: V118 = 0x500
0x1ca: JUMP 0x500
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1cb]
Exit stack: [V11, 0x1cb]

================================

Block 0x1cb
[0x1cb:0x1e0]
---
Predecessors: [0x514]
Successors: []
---
0x1cb JUMPDEST
0x1cc PUSH1 0x40
0x1ce MLOAD
0x1cf DUP1
0x1d0 DUP3
0x1d1 DUP2
0x1d2 MSTORE
0x1d3 PUSH1 0x20
0x1d5 ADD
0x1d6 SWAP2
0x1d7 POP
0x1d8 POP
0x1d9 PUSH1 0x40
0x1db MLOAD
0x1dc DUP1
0x1dd SWAP2
0x1de SUB
0x1df SWAP1
0x1e0 RETURN
---
0x1cb: JUMPDEST 
0x1cc: V119 = 0x40
0x1ce: V120 = M[0x40]
0x1d2: M[V120] = V325
0x1d3: V121 = 0x20
0x1d5: V122 = ADD 0x20 V120
0x1d9: V123 = 0x40
0x1db: V124 = M[0x40]
0x1de: V125 = SUB V122 V124
0x1e0: RETURN V124 V125
---
Entry stack: [V11, V325]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1e1
[0x1e1:0x1e7]
---
Predecessors: [0x77]
Successors: [0x1e8, 0x1ec]
---
0x1e1 JUMPDEST
0x1e2 CALLVALUE
0x1e3 ISZERO
0x1e4 PUSH2 0x1ec
0x1e7 JUMPI
---
0x1e1: JUMPDEST 
0x1e2: V126 = CALLVALUE
0x1e3: V127 = ISZERO V126
0x1e4: V128 = 0x1ec
0x1e7: JUMPI 0x1ec V127
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1e8
[0x1e8:0x1eb]
---
Predecessors: [0x1e1]
Successors: []
---
0x1e8 PUSH1 0x0
0x1ea DUP1
0x1eb REVERT
---
0x1e8: V129 = 0x0
0x1eb: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1ec
[0x1ec:0x217]
---
Predecessors: [0x1e1]
Successors: [0x51a]
---
0x1ec JUMPDEST
0x1ed PUSH2 0x218
0x1f0 PUSH1 0x4
0x1f2 DUP1
0x1f3 DUP1
0x1f4 CALLDATALOAD
0x1f5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20a AND
0x20b SWAP1
0x20c PUSH1 0x20
0x20e ADD
0x20f SWAP1
0x210 SWAP2
0x211 SWAP1
0x212 POP
0x213 POP
0x214 PUSH2 0x51a
0x217 JUMP
---
0x1ec: JUMPDEST 
0x1ed: V130 = 0x218
0x1f0: V131 = 0x4
0x1f4: V132 = CALLDATALOAD 0x4
0x1f5: V133 = 0xffffffffffffffffffffffffffffffffffffffff
0x20a: V134 = AND 0xffffffffffffffffffffffffffffffffffffffff V132
0x20c: V135 = 0x20
0x20e: V136 = ADD 0x20 0x4
0x214: V137 = 0x51a
0x217: JUMP 0x51a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x218, V134]
Exit stack: [V11, 0x218, V134]

================================

Block 0x218
[0x218:0x219]
---
Predecessors: [0x5b2]
Successors: []
---
0x218 JUMPDEST
0x219 STOP
---
0x218: JUMPDEST 
0x219: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x21a
[0x21a:0x271]
---
Predecessors: [0x82, 0xf7]
Successors: [0x5b5]
---
0x21a JUMPDEST
0x21b CALLVALUE
0x21c PUSH1 0x3
0x21e PUSH1 0x0
0x220 DUP4
0x221 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x236 AND
0x237 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24c AND
0x24d DUP2
0x24e MSTORE
0x24f PUSH1 0x20
0x251 ADD
0x252 SWAP1
0x253 DUP2
0x254 MSTORE
0x255 PUSH1 0x20
0x257 ADD
0x258 PUSH1 0x0
0x25a SHA3
0x25b DUP2
0x25c SWAP1
0x25d SSTORE
0x25e POP
0x25f PUSH1 0x1
0x261 DUP1
0x262 SLOAD
0x263 DUP1
0x264 PUSH1 0x1
0x266 ADD
0x267 DUP3
0x268 DUP2
0x269 PUSH2 0x272
0x26c SWAP2
0x26d SWAP1
0x26e PUSH2 0x5b5
0x271 JUMP
---
0x21a: JUMPDEST 
0x21b: V138 = CALLVALUE
0x21c: V139 = 0x3
0x21e: V140 = 0x0
0x221: V141 = 0xffffffffffffffffffffffffffffffffffffffff
0x236: V142 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x237: V143 = 0xffffffffffffffffffffffffffffffffffffffff
0x24c: V144 = AND 0xffffffffffffffffffffffffffffffffffffffff V142
0x24e: M[0x0] = V144
0x24f: V145 = 0x20
0x251: V146 = ADD 0x20 0x0
0x254: M[0x20] = 0x3
0x255: V147 = 0x20
0x257: V148 = ADD 0x20 0x20
0x258: V149 = 0x0
0x25a: V150 = SHA3 0x0 0x40
0x25d: S[V150] = V138
0x25f: V151 = 0x1
0x262: V152 = S[0x1]
0x264: V153 = 0x1
0x266: V154 = ADD 0x1 V152
0x269: V155 = 0x272
0x26e: V156 = 0x5b5
0x271: JUMP 0x5b5
---
Entry stack: [V11, {0x8b, 0x123}, S0]
Stack pops: 1
Stack additions: [S0, 0x1, V152, V154, 0x272, 0x1, V154]
Exit stack: [V11, {0x8b, 0x123}, S0, 0x1, V152, V154, 0x272, 0x1, V154]

================================

Block 0x272
[0x272:0x2d3]
---
Predecessors: [0x5dc]
Successors: [0x8b, 0x123]
---
0x272 JUMPDEST
0x273 SWAP2
0x274 PUSH1 0x0
0x276 MSTORE
0x277 PUSH1 0x20
0x279 PUSH1 0x0
0x27b SHA3
0x27c SWAP1
0x27d ADD
0x27e PUSH1 0x0
0x280 DUP4
0x281 SWAP1
0x282 SWAP2
0x283 SWAP1
0x284 SWAP2
0x285 PUSH2 0x100
0x288 EXP
0x289 DUP2
0x28a SLOAD
0x28b DUP2
0x28c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a1 MUL
0x2a2 NOT
0x2a3 AND
0x2a4 SWAP1
0x2a5 DUP4
0x2a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2bb AND
0x2bc MUL
0x2bd OR
0x2be SWAP1
0x2bf SSTORE
0x2c0 POP
0x2c1 POP
0x2c2 CALLVALUE
0x2c3 PUSH1 0x2
0x2c5 PUSH1 0x0
0x2c7 DUP3
0x2c8 DUP3
0x2c9 SLOAD
0x2ca ADD
0x2cb SWAP3
0x2cc POP
0x2cd POP
0x2ce DUP2
0x2cf SWAP1
0x2d0 SSTORE
0x2d1 POP
0x2d2 POP
0x2d3 JUMP
---
0x272: JUMPDEST 
0x274: V157 = 0x0
0x276: M[0x0] = 0x1
0x277: V158 = 0x20
0x279: V159 = 0x0
0x27b: V160 = SHA3 0x0 0x20
0x27d: V161 = ADD S1 V160
0x27e: V162 = 0x0
0x285: V163 = 0x100
0x288: V164 = EXP 0x100 0x0
0x28a: V165 = S[V161]
0x28c: V166 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a1: V167 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x2a2: V168 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2a3: V169 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V165
0x2a6: V170 = 0xffffffffffffffffffffffffffffffffffffffff
0x2bb: V171 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x2bc: V172 = MUL V171 0x1
0x2bd: V173 = OR V172 V169
0x2bf: S[V161] = V173
0x2c2: V174 = CALLVALUE
0x2c3: V175 = 0x2
0x2c5: V176 = 0x0
0x2c9: V177 = S[0x2]
0x2ca: V178 = ADD V177 V174
0x2d0: S[0x2] = V178
0x2d3: JUMP {0x8b, 0x123}
---
Entry stack: [V11, {0x8b, 0x123}, S3, 0x1, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x2d4
[0x2d4:0x2db]
---
Predecessors: [0x98]
Successors: [0x5e1]
---
0x2d4 JUMPDEST
0x2d5 PUSH2 0x2dc
0x2d8 PUSH2 0x5e1
0x2db JUMP
---
0x2d4: JUMPDEST 
0x2d5: V179 = 0x2dc
0x2d8: V180 = 0x5e1
0x2db: JUMP 0x5e1
---
Entry stack: [V11, 0xa0]
Stack pops: 0
Stack additions: [0x2dc]
Exit stack: [V11, 0xa0, 0x2dc]

================================

Block 0x2dc
[0x2dc:0x303]
---
Predecessors: [0x5e1]
Successors: [0x304, 0x35e]
---
0x2dc JUMPDEST
0x2dd PUSH1 0x1
0x2df DUP1
0x2e0 SLOAD
0x2e1 DUP1
0x2e2 PUSH1 0x20
0x2e4 MUL
0x2e5 PUSH1 0x20
0x2e7 ADD
0x2e8 PUSH1 0x40
0x2ea MLOAD
0x2eb SWAP1
0x2ec DUP2
0x2ed ADD
0x2ee PUSH1 0x40
0x2f0 MSTORE
0x2f1 DUP1
0x2f2 SWAP3
0x2f3 SWAP2
0x2f4 SWAP1
0x2f5 DUP2
0x2f6 DUP2
0x2f7 MSTORE
0x2f8 PUSH1 0x20
0x2fa ADD
0x2fb DUP3
0x2fc DUP1
0x2fd SLOAD
0x2fe DUP1
0x2ff ISZERO
0x300 PUSH2 0x35e
0x303 JUMPI
---
0x2dc: JUMPDEST 
0x2dd: V181 = 0x1
0x2e0: V182 = S[0x1]
0x2e2: V183 = 0x20
0x2e4: V184 = MUL 0x20 V182
0x2e5: V185 = 0x20
0x2e7: V186 = ADD 0x20 V184
0x2e8: V187 = 0x40
0x2ea: V188 = M[0x40]
0x2ed: V189 = ADD V188 V186
0x2ee: V190 = 0x40
0x2f0: M[0x40] = V189
0x2f7: M[V188] = V182
0x2f8: V191 = 0x20
0x2fa: V192 = ADD 0x20 V188
0x2fd: V193 = S[0x1]
0x2ff: V194 = ISZERO V193
0x300: V195 = 0x35e
0x303: JUMPI 0x35e V194
---
Entry stack: [V11, 0xa0, V373]
Stack pops: 0
Stack additions: [V188, 0x1, V182, V192, 0x1, V193]
Exit stack: [V11, 0xa0, V373, V188, 0x1, V182, V192, 0x1, V193]

================================

Block 0x304
[0x304:0x313]
---
Predecessors: [0x2dc]
Successors: [0x314]
---
0x304 PUSH1 0x20
0x306 MUL
0x307 DUP3
0x308 ADD
0x309 SWAP2
0x30a SWAP1
0x30b PUSH1 0x0
0x30d MSTORE
0x30e PUSH1 0x20
0x310 PUSH1 0x0
0x312 SHA3
0x313 SWAP1
---
0x304: V196 = 0x20
0x306: V197 = MUL 0x20 V193
0x308: V198 = ADD V192 V197
0x30b: V199 = 0x0
0x30d: M[0x0] = 0x1
0x30e: V200 = 0x20
0x310: V201 = 0x0
0x312: V202 = SHA3 0x0 0x20
---
Entry stack: [V11, 0xa0, V373, V188, 0x1, V182, V192, 0x1, V193]
Stack pops: 3
Stack additions: [V198, V202, S2]
Exit stack: [V11, 0xa0, V373, V188, 0x1, V182, V198, V202, V192]

================================

Block 0x314
[0x314:0x35d]
---
Predecessors: [0x304, 0x314]
Successors: [0x314, 0x35e]
---
0x314 JUMPDEST
0x315 DUP2
0x316 PUSH1 0x0
0x318 SWAP1
0x319 SLOAD
0x31a SWAP1
0x31b PUSH2 0x100
0x31e EXP
0x31f SWAP1
0x320 DIV
0x321 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x336 AND
0x337 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x34c AND
0x34d DUP2
0x34e MSTORE
0x34f PUSH1 0x20
0x351 ADD
0x352 SWAP1
0x353 PUSH1 0x1
0x355 ADD
0x356 SWAP1
0x357 DUP1
0x358 DUP4
0x359 GT
0x35a PUSH2 0x314
0x35d JUMPI
---
0x314: JUMPDEST 
0x316: V203 = 0x0
0x319: V204 = S[S1]
0x31b: V205 = 0x100
0x31e: V206 = EXP 0x100 0x0
0x320: V207 = DIV V204 0x1
0x321: V208 = 0xffffffffffffffffffffffffffffffffffffffff
0x336: V209 = AND 0xffffffffffffffffffffffffffffffffffffffff V207
0x337: V210 = 0xffffffffffffffffffffffffffffffffffffffff
0x34c: V211 = AND 0xffffffffffffffffffffffffffffffffffffffff V209
0x34e: M[S0] = V211
0x34f: V212 = 0x20
0x351: V213 = ADD 0x20 S0
0x353: V214 = 0x1
0x355: V215 = ADD 0x1 S1
0x359: V216 = GT V198 V213
0x35a: V217 = 0x314
0x35d: JUMPI 0x314 V216
---
Entry stack: [V11, 0xa0, V373, V188, 0x1, V182, V198, S1, S0]
Stack pops: 3
Stack additions: [S2, V215, V213]
Exit stack: [V11, 0xa0, V373, V188, 0x1, V182, V198, V215, V213]

================================

Block 0x35e
[0x35e:0x367]
---
Predecessors: [0x2dc, 0x314]
Successors: [0xa0]
---
0x35e JUMPDEST
0x35f POP
0x360 POP
0x361 POP
0x362 POP
0x363 POP
0x364 SWAP1
0x365 POP
0x366 SWAP1
0x367 JUMP
---
0x35e: JUMPDEST 
0x367: JUMP 0xa0
---
Entry stack: [V11, 0xa0, V373, V188, 0x1, V182, S2, S1, S0]
Stack pops: 8
Stack additions: [S5]
Exit stack: [V11, V188]

================================

Block 0x368
[0x368:0x371]
---
Predecessors: [0x130]
Successors: [0x138]
---
0x368 JUMPDEST
0x369 PUSH1 0x0
0x36b PUSH1 0x2
0x36d SLOAD
0x36e SWAP1
0x36f POP
0x370 SWAP1
0x371 JUMP
---
0x368: JUMPDEST 
0x369: V218 = 0x0
0x36b: V219 = 0x2
0x36d: V220 = S[0x2]
0x371: JUMP 0x138
---
Entry stack: [V11, 0x138]
Stack pops: 1
Stack additions: [V220]
Exit stack: [V11, V220]

================================

Block 0x372
[0x372:0x3c9]
---
Predecessors: [0x159]
Successors: [0x3ca, 0x4d8]
---
0x372 JUMPDEST
0x373 PUSH1 0x0
0x375 DUP1
0x376 PUSH1 0x0
0x378 SWAP1
0x379 SLOAD
0x37a SWAP1
0x37b PUSH2 0x100
0x37e EXP
0x37f SWAP1
0x380 DIV
0x381 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x396 AND
0x397 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ac AND
0x3ad CALLER
0x3ae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c3 AND
0x3c4 EQ
0x3c5 ISZERO
0x3c6 PUSH2 0x4d8
0x3c9 JUMPI
---
0x372: JUMPDEST 
0x373: V221 = 0x0
0x376: V222 = 0x0
0x379: V223 = S[0x0]
0x37b: V224 = 0x100
0x37e: V225 = EXP 0x100 0x0
0x380: V226 = DIV V223 0x1
0x381: V227 = 0xffffffffffffffffffffffffffffffffffffffff
0x396: V228 = AND 0xffffffffffffffffffffffffffffffffffffffff V226
0x397: V229 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ac: V230 = AND 0xffffffffffffffffffffffffffffffffffffffff V228
0x3ad: V231 = CALLER
0x3ae: V232 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c3: V233 = AND 0xffffffffffffffffffffffffffffffffffffffff V231
0x3c4: V234 = EQ V233 V230
0x3c5: V235 = ISZERO V234
0x3c6: V236 = 0x4d8
0x3c9: JUMPI 0x4d8 V235
---
Entry stack: [V11, 0x161]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x161, 0x0]

================================

Block 0x3ca
[0x3ca:0x3d7]
---
Predecessors: [0x372, 0x4ca]
Successors: [0x3d8, 0x4d7]
---
0x3ca JUMPDEST
0x3cb PUSH1 0x1
0x3cd DUP1
0x3ce SLOAD
0x3cf SWAP1
0x3d0 POP
0x3d1 DUP2
0x3d2 LT
0x3d3 ISZERO
0x3d4 PUSH2 0x4d7
0x3d7 JUMPI
---
0x3ca: JUMPDEST 
0x3cb: V237 = 0x1
0x3ce: V238 = S[0x1]
0x3d2: V239 = LT S0 V238
0x3d3: V240 = ISZERO V239
0x3d4: V241 = 0x4d7
0x3d7: JUMPI 0x4d7 V240
---
Entry stack: [V11, 0x161, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x161, S0]

================================

Block 0x3d8
[0x3d8:0x3e4]
---
Predecessors: [0x3ca]
Successors: [0x3e5, 0x3e6]
---
0x3d8 PUSH1 0x1
0x3da DUP2
0x3db DUP2
0x3dc SLOAD
0x3dd DUP2
0x3de LT
0x3df ISZERO
0x3e0 ISZERO
0x3e1 PUSH2 0x3e6
0x3e4 JUMPI
---
0x3d8: V242 = 0x1
0x3dc: V243 = S[0x1]
0x3de: V244 = LT S0 V243
0x3df: V245 = ISZERO V244
0x3e0: V246 = ISZERO V245
0x3e1: V247 = 0x3e6
0x3e4: JUMPI 0x3e6 V246
---
Entry stack: [V11, 0x161, S0]
Stack pops: 1
Stack additions: [S0, 0x1, S0]
Exit stack: [V11, 0x161, S0, 0x1, S0]

================================

Block 0x3e5
[0x3e5:0x3e5]
---
Predecessors: [0x3d8]
Successors: []
---
0x3e5 INVALID
---
0x3e5: INVALID 
---
Entry stack: [V11, 0x161, S2, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x161, S2, 0x1, S0]

================================

Block 0x3e6
[0x3e6:0x43c]
---
Predecessors: [0x3d8]
Successors: [0x43d, 0x43e]
---
0x3e6 JUMPDEST
0x3e7 SWAP1
0x3e8 PUSH1 0x0
0x3ea MSTORE
0x3eb PUSH1 0x20
0x3ed PUSH1 0x0
0x3ef SHA3
0x3f0 SWAP1
0x3f1 ADD
0x3f2 PUSH1 0x0
0x3f4 SWAP1
0x3f5 SLOAD
0x3f6 SWAP1
0x3f7 PUSH2 0x100
0x3fa EXP
0x3fb SWAP1
0x3fc DIV
0x3fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x412 AND
0x413 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x428 AND
0x429 PUSH2 0x8fc
0x42c PUSH1 0x3
0x42e PUSH1 0x0
0x430 PUSH1 0x1
0x432 DUP6
0x433 DUP2
0x434 SLOAD
0x435 DUP2
0x436 LT
0x437 ISZERO
0x438 ISZERO
0x439 PUSH2 0x43e
0x43c JUMPI
---
0x3e6: JUMPDEST 
0x3e8: V248 = 0x0
0x3ea: M[0x0] = 0x1
0x3eb: V249 = 0x20
0x3ed: V250 = 0x0
0x3ef: V251 = SHA3 0x0 0x20
0x3f1: V252 = ADD S0 V251
0x3f2: V253 = 0x0
0x3f5: V254 = S[V252]
0x3f7: V255 = 0x100
0x3fa: V256 = EXP 0x100 0x0
0x3fc: V257 = DIV V254 0x1
0x3fd: V258 = 0xffffffffffffffffffffffffffffffffffffffff
0x412: V259 = AND 0xffffffffffffffffffffffffffffffffffffffff V257
0x413: V260 = 0xffffffffffffffffffffffffffffffffffffffff
0x428: V261 = AND 0xffffffffffffffffffffffffffffffffffffffff V259
0x429: V262 = 0x8fc
0x42c: V263 = 0x3
0x42e: V264 = 0x0
0x430: V265 = 0x1
0x434: V266 = S[0x1]
0x436: V267 = LT S2 V266
0x437: V268 = ISZERO V267
0x438: V269 = ISZERO V268
0x439: V270 = 0x43e
0x43c: JUMPI 0x43e V269
---
Entry stack: [V11, 0x161, S2, 0x1, S0]
Stack pops: 3
Stack additions: [S2, V261, 0x8fc, 0x3, 0x0, 0x1, S2]
Exit stack: [V11, 0x161, S2, V261, 0x8fc, 0x3, 0x0, 0x1, S2]

================================

Block 0x43d
[0x43d:0x43d]
---
Predecessors: [0x3e6]
Successors: []
---
0x43d INVALID
---
0x43d: INVALID 
---
Entry stack: [V11, 0x161, S6, V261, 0x8fc, 0x3, 0x0, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x161, S6, V261, 0x8fc, 0x3, 0x0, 0x1, S0]

================================

Block 0x43e
[0x43e:0x4c5]
---
Predecessors: [0x3e6]
Successors: [0x4c6, 0x4ca]
---
0x43e JUMPDEST
0x43f SWAP1
0x440 PUSH1 0x0
0x442 MSTORE
0x443 PUSH1 0x20
0x445 PUSH1 0x0
0x447 SHA3
0x448 SWAP1
0x449 ADD
0x44a PUSH1 0x0
0x44c SWAP1
0x44d SLOAD
0x44e SWAP1
0x44f PUSH2 0x100
0x452 EXP
0x453 SWAP1
0x454 DIV
0x455 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x46a AND
0x46b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x480 AND
0x481 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x496 AND
0x497 DUP2
0x498 MSTORE
0x499 PUSH1 0x20
0x49b ADD
0x49c SWAP1
0x49d DUP2
0x49e MSTORE
0x49f PUSH1 0x20
0x4a1 ADD
0x4a2 PUSH1 0x0
0x4a4 SHA3
0x4a5 SLOAD
0x4a6 SWAP1
0x4a7 DUP2
0x4a8 ISZERO
0x4a9 MUL
0x4aa SWAP1
0x4ab PUSH1 0x40
0x4ad MLOAD
0x4ae PUSH1 0x0
0x4b0 PUSH1 0x40
0x4b2 MLOAD
0x4b3 DUP1
0x4b4 DUP4
0x4b5 SUB
0x4b6 DUP2
0x4b7 DUP6
0x4b8 DUP9
0x4b9 DUP9
0x4ba CALL
0x4bb SWAP4
0x4bc POP
0x4bd POP
0x4be POP
0x4bf POP
0x4c0 ISZERO
0x4c1 ISZERO
0x4c2 PUSH2 0x4ca
0x4c5 JUMPI
---
0x43e: JUMPDEST 
0x440: V271 = 0x0
0x442: M[0x0] = 0x1
0x443: V272 = 0x20
0x445: V273 = 0x0
0x447: V274 = SHA3 0x0 0x20
0x449: V275 = ADD S0 V274
0x44a: V276 = 0x0
0x44d: V277 = S[V275]
0x44f: V278 = 0x100
0x452: V279 = EXP 0x100 0x0
0x454: V280 = DIV V277 0x1
0x455: V281 = 0xffffffffffffffffffffffffffffffffffffffff
0x46a: V282 = AND 0xffffffffffffffffffffffffffffffffffffffff V280
0x46b: V283 = 0xffffffffffffffffffffffffffffffffffffffff
0x480: V284 = AND 0xffffffffffffffffffffffffffffffffffffffff V282
0x481: V285 = 0xffffffffffffffffffffffffffffffffffffffff
0x496: V286 = AND 0xffffffffffffffffffffffffffffffffffffffff V284
0x498: M[0x0] = V286
0x499: V287 = 0x20
0x49b: V288 = ADD 0x20 0x0
0x49e: M[0x20] = 0x3
0x49f: V289 = 0x20
0x4a1: V290 = ADD 0x20 0x20
0x4a2: V291 = 0x0
0x4a4: V292 = SHA3 0x0 0x40
0x4a5: V293 = S[V292]
0x4a8: V294 = ISZERO V293
0x4a9: V295 = MUL V294 0x8fc
0x4ab: V296 = 0x40
0x4ad: V297 = M[0x40]
0x4ae: V298 = 0x0
0x4b0: V299 = 0x40
0x4b2: V300 = M[0x40]
0x4b5: V301 = SUB V297 V300
0x4ba: V302 = CALL V295 V261 V293 V300 V301 V300 0x0
0x4c0: V303 = ISZERO V302
0x4c1: V304 = ISZERO V303
0x4c2: V305 = 0x4ca
0x4c5: JUMPI 0x4ca V304
---
Entry stack: [V11, 0x161, S6, V261, 0x8fc, 0x3, 0x0, 0x1, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x161, S6]

================================

Block 0x4c6
[0x4c6:0x4c9]
---
Predecessors: [0x43e]
Successors: []
---
0x4c6 PUSH1 0x0
0x4c8 DUP1
0x4c9 REVERT
---
0x4c6: V306 = 0x0
0x4c9: REVERT 0x0 0x0
---
Entry stack: [V11, 0x161, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x161, S0]

================================

Block 0x4ca
[0x4ca:0x4d6]
---
Predecessors: [0x43e]
Successors: [0x3ca]
---
0x4ca JUMPDEST
0x4cb DUP1
0x4cc DUP1
0x4cd PUSH1 0x1
0x4cf ADD
0x4d0 SWAP2
0x4d1 POP
0x4d2 POP
0x4d3 PUSH2 0x3ca
0x4d6 JUMP
---
0x4ca: JUMPDEST 
0x4cd: V307 = 0x1
0x4cf: V308 = ADD 0x1 S0
0x4d3: V309 = 0x3ca
0x4d6: JUMP 0x3ca
---
Entry stack: [V11, 0x161, S0]
Stack pops: 1
Stack additions: [V308]
Exit stack: [V11, 0x161, V308]

================================

Block 0x4d7
[0x4d7:0x4d7]
---
Predecessors: [0x3ca]
Successors: [0x4d8]
---
0x4d7 JUMPDEST
---
0x4d7: JUMPDEST 
---
Entry stack: [V11, 0x161, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x161, S0]

================================

Block 0x4d8
[0x4d8:0x4da]
---
Predecessors: [0x372, 0x4d7]
Successors: [0x161]
---
0x4d8 JUMPDEST
0x4d9 POP
0x4da JUMP
---
0x4d8: JUMPDEST 
0x4da: JUMP 0x161
---
Entry stack: [V11, 0x161, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x4db
[0x4db:0x4ff]
---
Predecessors: [0x16e]
Successors: [0x176]
---
0x4db JUMPDEST
0x4dc PUSH1 0x0
0x4de DUP1
0x4df SWAP1
0x4e0 SLOAD
0x4e1 SWAP1
0x4e2 PUSH2 0x100
0x4e5 EXP
0x4e6 SWAP1
0x4e7 DIV
0x4e8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4fd AND
0x4fe DUP2
0x4ff JUMP
---
0x4db: JUMPDEST 
0x4dc: V310 = 0x0
0x4e0: V311 = S[0x0]
0x4e2: V312 = 0x100
0x4e5: V313 = EXP 0x100 0x0
0x4e7: V314 = DIV V311 0x1
0x4e8: V315 = 0xffffffffffffffffffffffffffffffffffffffff
0x4fd: V316 = AND 0xffffffffffffffffffffffffffffffffffffffff V314
0x4ff: JUMP 0x176
---
Entry stack: [V11, 0x176]
Stack pops: 1
Stack additions: [S0, V316]
Exit stack: [V11, 0x176, V316]

================================

Block 0x500
[0x500:0x512]
---
Predecessors: [0x1c3]
Successors: [0x513, 0x514]
---
0x500 JUMPDEST
0x501 PUSH1 0x0
0x503 PUSH1 0x1
0x505 DUP1
0x506 SLOAD
0x507 SWAP1
0x508 POP
0x509 PUSH1 0x2
0x50b SLOAD
0x50c DUP2
0x50d ISZERO
0x50e ISZERO
0x50f PUSH2 0x514
0x512 JUMPI
---
0x500: JUMPDEST 
0x501: V317 = 0x0
0x503: V318 = 0x1
0x506: V319 = S[0x1]
0x509: V320 = 0x2
0x50b: V321 = S[0x2]
0x50d: V322 = ISZERO V319
0x50e: V323 = ISZERO V322
0x50f: V324 = 0x514
0x512: JUMPI 0x514 V323
---
Entry stack: [V11, 0x1cb]
Stack pops: 0
Stack additions: [0x0, V319, V321]
Exit stack: [V11, 0x1cb, 0x0, V319, V321]

================================

Block 0x513
[0x513:0x513]
---
Predecessors: [0x500]
Successors: []
---
0x513 INVALID
---
0x513: INVALID 
---
Entry stack: [V11, 0x1cb, 0x0, V319, V321]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1cb, 0x0, V319, V321]

================================

Block 0x514
[0x514:0x519]
---
Predecessors: [0x500]
Successors: [0x1cb]
---
0x514 JUMPDEST
0x515 DIV
0x516 SWAP1
0x517 POP
0x518 SWAP1
0x519 JUMP
---
0x514: JUMPDEST 
0x515: V325 = DIV V321 V319
0x519: JUMP 0x1cb
---
Entry stack: [V11, 0x1cb, 0x0, V319, V321]
Stack pops: 4
Stack additions: [V325]
Exit stack: [V11, V325]

================================

Block 0x51a
[0x51a:0x56f]
---
Predecessors: [0x1ec]
Successors: [0x570, 0x5b2]
---
0x51a JUMPDEST
0x51b PUSH1 0x0
0x51d DUP1
0x51e SWAP1
0x51f SLOAD
0x520 SWAP1
0x521 PUSH2 0x100
0x524 EXP
0x525 SWAP1
0x526 DIV
0x527 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x53c AND
0x53d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x552 AND
0x553 CALLER
0x554 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x569 AND
0x56a EQ
0x56b ISZERO
0x56c PUSH2 0x5b2
0x56f JUMPI
---
0x51a: JUMPDEST 
0x51b: V326 = 0x0
0x51f: V327 = S[0x0]
0x521: V328 = 0x100
0x524: V329 = EXP 0x100 0x0
0x526: V330 = DIV V327 0x1
0x527: V331 = 0xffffffffffffffffffffffffffffffffffffffff
0x53c: V332 = AND 0xffffffffffffffffffffffffffffffffffffffff V330
0x53d: V333 = 0xffffffffffffffffffffffffffffffffffffffff
0x552: V334 = AND 0xffffffffffffffffffffffffffffffffffffffff V332
0x553: V335 = CALLER
0x554: V336 = 0xffffffffffffffffffffffffffffffffffffffff
0x569: V337 = AND 0xffffffffffffffffffffffffffffffffffffffff V335
0x56a: V338 = EQ V337 V334
0x56b: V339 = ISZERO V338
0x56c: V340 = 0x5b2
0x56f: JUMPI 0x5b2 V339
---
Entry stack: [V11, 0x218, V134]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x218, V134]

================================

Block 0x570
[0x570:0x5ac]
---
Predecessors: [0x51a]
Successors: [0x5ad, 0x5b1]
---
0x570 DUP1
0x571 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x586 AND
0x587 PUSH2 0x8fc
0x58a PUSH1 0x2
0x58c SLOAD
0x58d SWAP1
0x58e DUP2
0x58f ISZERO
0x590 MUL
0x591 SWAP1
0x592 PUSH1 0x40
0x594 MLOAD
0x595 PUSH1 0x0
0x597 PUSH1 0x40
0x599 MLOAD
0x59a DUP1
0x59b DUP4
0x59c SUB
0x59d DUP2
0x59e DUP6
0x59f DUP9
0x5a0 DUP9
0x5a1 CALL
0x5a2 SWAP4
0x5a3 POP
0x5a4 POP
0x5a5 POP
0x5a6 POP
0x5a7 ISZERO
0x5a8 ISZERO
0x5a9 PUSH2 0x5b1
0x5ac JUMPI
---
0x571: V341 = 0xffffffffffffffffffffffffffffffffffffffff
0x586: V342 = AND 0xffffffffffffffffffffffffffffffffffffffff V134
0x587: V343 = 0x8fc
0x58a: V344 = 0x2
0x58c: V345 = S[0x2]
0x58f: V346 = ISZERO V345
0x590: V347 = MUL V346 0x8fc
0x592: V348 = 0x40
0x594: V349 = M[0x40]
0x595: V350 = 0x0
0x597: V351 = 0x40
0x599: V352 = M[0x40]
0x59c: V353 = SUB V349 V352
0x5a1: V354 = CALL V347 V342 V345 V352 V353 V352 0x0
0x5a7: V355 = ISZERO V354
0x5a8: V356 = ISZERO V355
0x5a9: V357 = 0x5b1
0x5ac: JUMPI 0x5b1 V356
---
Entry stack: [V11, 0x218, V134]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x218, V134]

================================

Block 0x5ad
[0x5ad:0x5b0]
---
Predecessors: [0x570]
Successors: []
---
0x5ad PUSH1 0x0
0x5af DUP1
0x5b0 REVERT
---
0x5ad: V358 = 0x0
0x5b0: REVERT 0x0 0x0
---
Entry stack: [V11, 0x218, V134]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x218, V134]

================================

Block 0x5b1
[0x5b1:0x5b1]
---
Predecessors: [0x570]
Successors: [0x5b2]
---
0x5b1 JUMPDEST
---
0x5b1: JUMPDEST 
---
Entry stack: [V11, 0x218, V134]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x218, V134]

================================

Block 0x5b2
[0x5b2:0x5b4]
---
Predecessors: [0x51a, 0x5b1]
Successors: [0x218]
---
0x5b2 JUMPDEST
0x5b3 POP
0x5b4 JUMP
---
0x5b2: JUMPDEST 
0x5b4: JUMP 0x218
---
Entry stack: [V11, 0x218, V134]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x5b5
[0x5b5:0x5c2]
---
Predecessors: [0x21a]
Successors: [0x5c3, 0x5dc]
---
0x5b5 JUMPDEST
0x5b6 DUP2
0x5b7 SLOAD
0x5b8 DUP2
0x5b9 DUP4
0x5ba SSTORE
0x5bb DUP2
0x5bc DUP2
0x5bd ISZERO
0x5be GT
0x5bf PUSH2 0x5dc
0x5c2 JUMPI
---
0x5b5: JUMPDEST 
0x5b7: V359 = S[0x1]
0x5ba: S[0x1] = V154
0x5bd: V360 = ISZERO V359
0x5be: V361 = GT V360 V154
0x5bf: V362 = 0x5dc
0x5c2: JUMPI 0x5dc V361
---
Entry stack: [V11, {0x8b, 0x123}, S6, 0x1, V152, V154, 0x272, 0x1, V154]
Stack pops: 2
Stack additions: [S1, S0, V359]
Exit stack: [V11, {0x8b, 0x123}, S6, 0x1, V152, V154, 0x272, 0x1, V154, V359]

================================

Block 0x5c3
[0x5c3:0x5da]
---
Predecessors: [0x5b5]
Successors: [0x5f5]
---
0x5c3 DUP2
0x5c4 DUP4
0x5c5 PUSH1 0x0
0x5c7 MSTORE
0x5c8 PUSH1 0x20
0x5ca PUSH1 0x0
0x5cc SHA3
0x5cd SWAP2
0x5ce DUP3
0x5cf ADD
0x5d0 SWAP2
0x5d1 ADD
0x5d2 PUSH2 0x5db
0x5d5 SWAP2
0x5d6 SWAP1
0x5d7 PUSH2 0x5f5
0x5da JUMP
---
0x5c5: V363 = 0x0
0x5c7: M[0x0] = 0x1
0x5c8: V364 = 0x20
0x5ca: V365 = 0x0
0x5cc: V366 = SHA3 0x0 0x20
0x5cf: V367 = ADD V366 V359
0x5d1: V368 = ADD V366 V154
0x5d2: V369 = 0x5db
0x5d7: V370 = 0x5f5
0x5da: JUMP 0x5f5
---
Entry stack: [V11, {0x8b, 0x123}, S7, 0x1, V152, V154, 0x272, 0x1, V154, V359]
Stack pops: 3
Stack additions: [S2, S1, 0x5db, V367, V368]
Exit stack: [V11, {0x8b, 0x123}, S7, 0x1, V152, V154, 0x272, 0x1, V154, 0x5db, V367, V368]

================================

Block 0x5db
[0x5db:0x5db]
---
Predecessors: [0x617]
Successors: [0x5dc]
---
0x5db JUMPDEST
---
0x5db: JUMPDEST 
---
Entry stack: [V11, {0x8b, 0x123}, S7, 0x1, S5, S4, 0x272, 0x1, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x8b, 0x123}, S7, 0x1, S5, S4, 0x272, 0x1, S1, S0]

================================

Block 0x5dc
[0x5dc:0x5e0]
---
Predecessors: [0x5b5, 0x5db]
Successors: [0x272]
---
0x5dc JUMPDEST
0x5dd POP
0x5de POP
0x5df POP
0x5e0 JUMP
---
0x5dc: JUMPDEST 
0x5e0: JUMP 0x272
---
Entry stack: [V11, {0x8b, 0x123}, S7, 0x1, S5, S4, 0x272, 0x1, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, {0x8b, 0x123}, S7, 0x1, S5, S4]

================================

Block 0x5e1
[0x5e1:0x5f4]
---
Predecessors: [0x2d4]
Successors: [0x2dc]
---
0x5e1 JUMPDEST
0x5e2 PUSH1 0x20
0x5e4 PUSH1 0x40
0x5e6 MLOAD
0x5e7 SWAP1
0x5e8 DUP2
0x5e9 ADD
0x5ea PUSH1 0x40
0x5ec MSTORE
0x5ed DUP1
0x5ee PUSH1 0x0
0x5f0 DUP2
0x5f1 MSTORE
0x5f2 POP
0x5f3 SWAP1
0x5f4 JUMP
---
0x5e1: JUMPDEST 
0x5e2: V371 = 0x20
0x5e4: V372 = 0x40
0x5e6: V373 = M[0x40]
0x5e9: V374 = ADD V373 0x20
0x5ea: V375 = 0x40
0x5ec: M[0x40] = V374
0x5ee: V376 = 0x0
0x5f1: M[V373] = 0x0
0x5f4: JUMP 0x2dc
---
Entry stack: [V11, 0xa0, 0x2dc]
Stack pops: 1
Stack additions: [V373]
Exit stack: [V11, 0xa0, V373]

================================

Block 0x5f5
[0x5f5:0x5fa]
---
Predecessors: [0x5c3]
Successors: [0x5fb]
---
0x5f5 JUMPDEST
0x5f6 PUSH2 0x617
0x5f9 SWAP2
0x5fa SWAP1
---
0x5f5: JUMPDEST 
0x5f6: V377 = 0x617
---
Entry stack: [V11, {0x8b, 0x123}, S9, 0x1, S7, S6, 0x272, 0x1, S3, 0x5db, V367, V368]
Stack pops: 2
Stack additions: [0x617, S1, S0]
Exit stack: [V11, {0x8b, 0x123}, S9, 0x1, S7, S6, 0x272, 0x1, S3, 0x5db, 0x617, V367, V368]

================================

Block 0x5fb
[0x5fb:0x603]
---
Predecessors: [0x5f5, 0x604]
Successors: [0x604, 0x613]
---
0x5fb JUMPDEST
0x5fc DUP1
0x5fd DUP3
0x5fe GT
0x5ff ISZERO
0x600 PUSH2 0x613
0x603 JUMPI
---
0x5fb: JUMPDEST 
0x5fe: V378 = GT S1 S0
0x5ff: V379 = ISZERO V378
0x600: V380 = 0x613
0x603: JUMPI 0x613 V379
---
Entry stack: [V11, {0x8b, 0x123}, S10, 0x1, S8, S7, 0x272, 0x1, S4, 0x5db, 0x617, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, {0x8b, 0x123}, S10, 0x1, S8, S7, 0x272, 0x1, S4, 0x5db, 0x617, S1, S0]

================================

Block 0x604
[0x604:0x612]
---
Predecessors: [0x5fb]
Successors: [0x5fb]
---
0x604 PUSH1 0x0
0x606 DUP2
0x607 PUSH1 0x0
0x609 SWAP1
0x60a SSTORE
0x60b POP
0x60c PUSH1 0x1
0x60e ADD
0x60f PUSH2 0x5fb
0x612 JUMP
---
0x604: V381 = 0x0
0x607: V382 = 0x0
0x60a: S[S0] = 0x0
0x60c: V383 = 0x1
0x60e: V384 = ADD 0x1 S0
0x60f: V385 = 0x5fb
0x612: JUMP 0x5fb
---
Entry stack: [V11, {0x8b, 0x123}, S10, 0x1, S8, S7, 0x272, 0x1, S4, 0x5db, 0x617, S1, S0]
Stack pops: 1
Stack additions: [V384]
Exit stack: [V11, {0x8b, 0x123}, S10, 0x1, S8, S7, 0x272, 0x1, S4, 0x5db, 0x617, S1, V384]

================================

Block 0x613
[0x613:0x616]
---
Predecessors: [0x5fb]
Successors: [0x617]
---
0x613 JUMPDEST
0x614 POP
0x615 SWAP1
0x616 JUMP
---
0x613: JUMPDEST 
0x616: JUMP 0x617
---
Entry stack: [V11, {0x8b, 0x123}, S10, 0x1, S8, S7, 0x272, 0x1, S4, 0x5db, 0x617, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, {0x8b, 0x123}, S10, 0x1, S8, S7, 0x272, 0x1, S4, 0x5db, S1]

================================

Block 0x617
[0x617:0x619]
---
Predecessors: [0x613]
Successors: [0x5db]
---
0x617 JUMPDEST
0x618 SWAP1
0x619 JUMP
---
0x617: JUMPDEST 
0x619: JUMP 0x5db
---
Entry stack: [V11, {0x8b, 0x123}, S8, 0x1, S6, S5, 0x272, 0x1, S2, 0x5db, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, {0x8b, 0x123}, S8, 0x1, S6, S5, 0x272, 0x1, S2, S0]

================================

Block 0x61a
[0x61a:0x645]
---
Predecessors: []
Successors: []
---
0x61a STOP
0x61b LOG1
0x61c PUSH6 0x627a7a723058
0x623 SHA3
0x624 MISSING 0xcc
0x625 MISSING 0x26
0x626 PUSH31 0x1aac4153fffe361e955112352d25aa9f87a33245b5f9240b64f2d09bd30029
---
0x61a: STOP 
0x61b: LOG S0 S1 S2
0x61c: V386 = 0x627a7a723058
0x623: V387 = SHA3 0x627a7a723058 S3
0x624: MISSING 0xcc
0x625: MISSING 0x26
0x626: V388 = 0x1aac4153fffe361e955112352d25aa9f87a33245b5f9240b64f2d09bd30029
---
Entry stack: []
Stack pops: 0
Stack additions: [V387, 0x1aac4153fffe361e955112352d25aa9f87a33245b5f9240b64f2d09bd30029]
Exit stack: []

================================

Function 0:
Public function signature: 0xce8e3e
Entry block: 0x8d
Exit block: 0xe3
Body: 0x8d, 0x94, 0x98, 0xa0, 0xc8, 0xd1, 0xe3, 0x2d4, 0x2dc, 0x304, 0x314, 0x35e, 0x5e1

Function 1:
Public function signature: 0x474a68e
Entry block: 0xf7
Exit block: 0x123
Body: 0xf7, 0x123

Function 2:
Public function signature: 0x12065fe0
Entry block: 0x125
Exit block: 0x138
Body: 0x125, 0x12c, 0x130, 0x138, 0x368

Function 3:
Public function signature: 0x590e1ae3
Entry block: 0x14e
Exit block: 0x4c6
Body: 0x14e, 0x155, 0x159, 0x161, 0x372, 0x3ca, 0x3d8, 0x3e5, 0x3e6, 0x43d, 0x43e, 0x4c6, 0x4ca, 0x4d7, 0x4d8

Function 4:
Public function signature: 0x8da5cb5b
Entry block: 0x163
Exit block: 0x176
Body: 0x163, 0x16a, 0x16e, 0x176, 0x4db

Function 5:
Public function signature: 0xad1fef9c
Entry block: 0x1b8
Exit block: 0x1cb
Body: 0x1b8, 0x1bf, 0x1c3, 0x1cb, 0x500, 0x513, 0x514

Function 6:
Public function signature: 0xcd85f845
Entry block: 0x1e1
Exit block: 0x5ad
Body: 0x1e1, 0x1e8, 0x1ec, 0x218, 0x51a, 0x570, 0x5ad, 0x5b1, 0x5b2

Function 7:
Public fallback function
Entry block: 0x82
Exit block: 0x8b
Body: 0x82, 0x8b

Function 8:
Private function
Entry block: 0x21a
Exit block: 0x272
Body: 0x21a, 0x272, 0x5b5, 0x5c3, 0x5db, 0x5dc, 0x5f5, 0x5fb, 0x604, 0x613, 0x617

