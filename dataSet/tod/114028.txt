Block 0x0
[0x0:0x38]
---
Predecessors: []
Successors: [0x39, 0x5c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 PUSH4 0xffffffff
0x2d AND
0x2e DUP1
0x2f PUSH4 0x3429e35c
0x34 EQ
0x35 PUSH2 0x5c
0x38 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x28: V6 = 0xffffffff
0x2d: V7 = AND 0xffffffff V5
0x2f: V8 = 0x3429e35c
0x34: V9 = EQ 0x3429e35c V7
0x35: V10 = 0x5c
0x38: JUMPI 0x5c V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0x0]
Successors: [0x44, 0xae]
---
0x39 DUP1
0x3a PUSH4 0x3ccfd60b
0x3f EQ
0x40 PUSH2 0xae
0x43 JUMPI
---
0x3a: V11 = 0x3ccfd60b
0x3f: V12 = EQ 0x3ccfd60b V7
0x40: V13 = 0xae
0x43: JUMPI 0xae V12
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x44
[0x44:0x4e]
---
Predecessors: [0x39]
Successors: [0x4f, 0xd8]
---
0x44 DUP1
0x45 PUSH4 0x41c0e1b5
0x4a EQ
0x4b PUSH2 0xd8
0x4e JUMPI
---
0x45: V14 = 0x41c0e1b5
0x4a: V15 = EQ 0x41c0e1b5 V7
0x4b: V16 = 0xd8
0x4e: JUMPI 0xd8 V15
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x4f
[0x4f:0x59]
---
Predecessors: [0x44]
Successors: [0x5a, 0xea]
---
0x4f DUP1
0x50 PUSH4 0xd60f8f4d
0x55 EQ
0x56 PUSH2 0xea
0x59 JUMPI
---
0x50: V17 = 0xd60f8f4d
0x55: V18 = EQ 0xd60f8f4d V7
0x56: V19 = 0xea
0x59: JUMPI 0xea V18
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x5a
[0x5a:0x5b]
---
Predecessors: [0x4f]
Successors: []
---
0x5a JUMPDEST
0x5b INVALID
---
0x5a: JUMPDEST 
0x5b: INVALID 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x5c
[0x5c:0x62]
---
Predecessors: [0x0]
Successors: [0x63, 0x64]
---
0x5c JUMPDEST
0x5d CALLVALUE
0x5e ISZERO
0x5f PUSH2 0x64
0x62 JUMPI
---
0x5c: JUMPDEST 
0x5d: V20 = CALLVALUE
0x5e: V21 = ISZERO V20
0x5f: V22 = 0x64
0x62: JUMPI 0x64 V21
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x63
[0x63:0x63]
---
Predecessors: [0x5c]
Successors: []
---
0x63 INVALID
---
0x63: INVALID 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x64
[0x64:0x6b]
---
Predecessors: [0x5c]
Successors: [0x144]
---
0x64 JUMPDEST
0x65 PUSH2 0x6c
0x68 PUSH2 0x144
0x6b JUMP
---
0x64: JUMPDEST 
0x65: V23 = 0x6c
0x68: V24 = 0x144
0x6b: JUMP 0x144
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x6c]
Exit stack: [V7, 0x6c]

================================

Block 0x6c
[0x6c:0xad]
---
Predecessors: [0x144]
Successors: []
---
0x6c JUMPDEST
0x6d PUSH1 0x40
0x6f MLOAD
0x70 DUP1
0x71 DUP3
0x72 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x87 AND
0x88 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9d AND
0x9e DUP2
0x9f MSTORE
0xa0 PUSH1 0x20
0xa2 ADD
0xa3 SWAP2
0xa4 POP
0xa5 POP
0xa6 PUSH1 0x40
0xa8 MLOAD
0xa9 DUP1
0xaa SWAP2
0xab SUB
0xac SWAP1
0xad RETURN
---
0x6c: JUMPDEST 
0x6d: V25 = 0x40
0x6f: V26 = M[0x40]
0x72: V27 = 0xffffffffffffffffffffffffffffffffffffffff
0x87: V28 = AND 0xffffffffffffffffffffffffffffffffffffffff V91
0x88: V29 = 0xffffffffffffffffffffffffffffffffffffffff
0x9d: V30 = AND 0xffffffffffffffffffffffffffffffffffffffff V28
0x9f: M[V26] = V30
0xa0: V31 = 0x20
0xa2: V32 = ADD 0x20 V26
0xa6: V33 = 0x40
0xa8: V34 = M[0x40]
0xab: V35 = SUB V32 V34
0xad: RETURN V34 V35
---
Entry stack: [V7, 0x6c, V91]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0x6c]

================================

Block 0xae
[0xae:0xb4]
---
Predecessors: [0x39]
Successors: [0xb5, 0xb6]
---
0xae JUMPDEST
0xaf CALLVALUE
0xb0 ISZERO
0xb1 PUSH2 0xb6
0xb4 JUMPI
---
0xae: JUMPDEST 
0xaf: V36 = CALLVALUE
0xb0: V37 = ISZERO V36
0xb1: V38 = 0xb6
0xb4: JUMPI 0xb6 V37
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xb5
[0xb5:0xb5]
---
Predecessors: [0xae]
Successors: []
---
0xb5 INVALID
---
0xb5: INVALID 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xb6
[0xb6:0xbd]
---
Predecessors: [0xae]
Successors: [0x16a]
---
0xb6 JUMPDEST
0xb7 PUSH2 0xbe
0xba PUSH2 0x16a
0xbd JUMP
---
0xb6: JUMPDEST 
0xb7: V39 = 0xbe
0xba: V40 = 0x16a
0xbd: JUMP 0x16a
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0xbe]
Exit stack: [V7, 0xbe]

================================

Block 0xbe
[0xbe:0xd7]
---
Predecessors: [0x1e4]
Successors: []
---
0xbe JUMPDEST
0xbf PUSH1 0x40
0xc1 MLOAD
0xc2 DUP1
0xc3 DUP3
0xc4 ISZERO
0xc5 ISZERO
0xc6 ISZERO
0xc7 ISZERO
0xc8 DUP2
0xc9 MSTORE
0xca PUSH1 0x20
0xcc ADD
0xcd SWAP2
0xce POP
0xcf POP
0xd0 PUSH1 0x40
0xd2 MLOAD
0xd3 DUP1
0xd4 SWAP2
0xd5 SUB
0xd6 SWAP1
0xd7 RETURN
---
0xbe: JUMPDEST 
0xbf: V41 = 0x40
0xc1: V42 = M[0x40]
0xc4: V43 = ISZERO 0x0
0xc5: V44 = ISZERO 0x1
0xc6: V45 = ISZERO 0x0
0xc7: V46 = ISZERO 0x1
0xc9: M[V42] = 0x0
0xca: V47 = 0x20
0xcc: V48 = ADD 0x20 V42
0xd0: V49 = 0x40
0xd2: V50 = M[0x40]
0xd5: V51 = SUB V48 V50
0xd7: RETURN V50 V51
---
Entry stack: [V7, 0x0]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Block 0xd8
[0xd8:0xde]
---
Predecessors: [0x44]
Successors: [0xdf, 0xe0]
---
0xd8 JUMPDEST
0xd9 CALLVALUE
0xda ISZERO
0xdb PUSH2 0xe0
0xde JUMPI
---
0xd8: JUMPDEST 
0xd9: V52 = CALLVALUE
0xda: V53 = ISZERO V52
0xdb: V54 = 0xe0
0xde: JUMPI 0xe0 V53
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xdf
[0xdf:0xdf]
---
Predecessors: [0xd8]
Successors: []
---
0xdf INVALID
---
0xdf: INVALID 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xe0
[0xe0:0xe7]
---
Predecessors: [0xd8]
Successors: [0x1e8]
---
0xe0 JUMPDEST
0xe1 PUSH2 0xe8
0xe4 PUSH2 0x1e8
0xe7 JUMP
---
0xe0: JUMPDEST 
0xe1: V55 = 0xe8
0xe4: V56 = 0x1e8
0xe7: JUMP 0x1e8
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0xe8]
Exit stack: [V7, 0xe8]

================================

Block 0xe8
[0xe8:0xe9]
---
Predecessors: [0x27a]
Successors: []
---
0xe8 JUMPDEST
0xe9 STOP
---
0xe8: JUMPDEST 
0xe9: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xea
[0xea:0xf0]
---
Predecessors: [0x4f]
Successors: [0xf1, 0xf2]
---
0xea JUMPDEST
0xeb CALLVALUE
0xec ISZERO
0xed PUSH2 0xf2
0xf0 JUMPI
---
0xea: JUMPDEST 
0xeb: V57 = CALLVALUE
0xec: V58 = ISZERO V57
0xed: V59 = 0xf2
0xf0: JUMPI 0xf2 V58
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xf1
[0xf1:0xf1]
---
Predecessors: [0xea]
Successors: []
---
0xf1 INVALID
---
0xf1: INVALID 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xf2
[0xf2:0x141]
---
Predecessors: [0xea]
Successors: [0x27c]
---
0xf2 JUMPDEST
0xf3 PUSH2 0x142
0xf6 PUSH1 0x4
0xf8 DUP1
0xf9 DUP1
0xfa CALLDATALOAD
0xfb SWAP1
0xfc PUSH1 0x20
0xfe ADD
0xff SWAP1
0x100 DUP3
0x101 ADD
0x102 DUP1
0x103 CALLDATALOAD
0x104 SWAP1
0x105 PUSH1 0x20
0x107 ADD
0x108 SWAP1
0x109 DUP1
0x10a DUP1
0x10b PUSH1 0x1f
0x10d ADD
0x10e PUSH1 0x20
0x110 DUP1
0x111 SWAP2
0x112 DIV
0x113 MUL
0x114 PUSH1 0x20
0x116 ADD
0x117 PUSH1 0x40
0x119 MLOAD
0x11a SWAP1
0x11b DUP2
0x11c ADD
0x11d PUSH1 0x40
0x11f MSTORE
0x120 DUP1
0x121 SWAP4
0x122 SWAP3
0x123 SWAP2
0x124 SWAP1
0x125 DUP2
0x126 DUP2
0x127 MSTORE
0x128 PUSH1 0x20
0x12a ADD
0x12b DUP4
0x12c DUP4
0x12d DUP1
0x12e DUP3
0x12f DUP5
0x130 CALLDATACOPY
0x131 DUP3
0x132 ADD
0x133 SWAP2
0x134 POP
0x135 POP
0x136 POP
0x137 POP
0x138 POP
0x139 POP
0x13a SWAP2
0x13b SWAP1
0x13c POP
0x13d POP
0x13e PUSH2 0x27c
0x141 JUMP
---
0xf2: JUMPDEST 
0xf3: V60 = 0x142
0xf6: V61 = 0x4
0xfa: V62 = CALLDATALOAD 0x4
0xfc: V63 = 0x20
0xfe: V64 = ADD 0x20 0x4
0x101: V65 = ADD 0x4 V62
0x103: V66 = CALLDATALOAD V65
0x105: V67 = 0x20
0x107: V68 = ADD 0x20 V65
0x10b: V69 = 0x1f
0x10d: V70 = ADD 0x1f V66
0x10e: V71 = 0x20
0x112: V72 = DIV V70 0x20
0x113: V73 = MUL V72 0x20
0x114: V74 = 0x20
0x116: V75 = ADD 0x20 V73
0x117: V76 = 0x40
0x119: V77 = M[0x40]
0x11c: V78 = ADD V77 V75
0x11d: V79 = 0x40
0x11f: M[0x40] = V78
0x127: M[V77] = V66
0x128: V80 = 0x20
0x12a: V81 = ADD 0x20 V77
0x130: CALLDATACOPY V81 V68 V66
0x132: V82 = ADD V81 V66
0x13e: V83 = 0x27c
0x141: JUMP 0x27c
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x142, V77]
Exit stack: [V7, 0x142, V77]

================================

Block 0x142
[0x142:0x143]
---
Predecessors: [0x36f]
Successors: []
---
0x142 JUMPDEST
0x143 STOP
---
0x142: JUMPDEST 
0x143: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x144
[0x144:0x169]
---
Predecessors: [0x64]
Successors: [0x6c]
---
0x144 JUMPDEST
0x145 PUSH1 0x0
0x147 PUSH1 0x0
0x149 SWAP1
0x14a SLOAD
0x14b SWAP1
0x14c PUSH2 0x100
0x14f EXP
0x150 SWAP1
0x151 DIV
0x152 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x167 AND
0x168 DUP2
0x169 JUMP
---
0x144: JUMPDEST 
0x145: V84 = 0x0
0x147: V85 = 0x0
0x14a: V86 = S[0x0]
0x14c: V87 = 0x100
0x14f: V88 = EXP 0x100 0x0
0x151: V89 = DIV V86 0x1
0x152: V90 = 0xffffffffffffffffffffffffffffffffffffffff
0x167: V91 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0x169: JUMP 0x6c
---
Entry stack: [V7, 0x6c]
Stack pops: 1
Stack additions: [S0, V91]
Exit stack: [V7, 0x6c, V91]

================================

Block 0x16a
[0x16a:0x1e3]
---
Predecessors: [0xb6]
Successors: [0x1e4]
---
0x16a JUMPDEST
0x16b PUSH1 0x0
0x16d PUSH1 0x0
0x16f ADDRESS
0x170 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x185 AND
0x186 BALANCE
0x187 SWAP1
0x188 POP
0x189 PUSH1 0x0
0x18b PUSH1 0x0
0x18d SWAP1
0x18e SLOAD
0x18f SWAP1
0x190 PUSH2 0x100
0x193 EXP
0x194 SWAP1
0x195 DIV
0x196 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ab AND
0x1ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c1 AND
0x1c2 PUSH2 0x8fc
0x1c5 DUP3
0x1c6 SWAP1
0x1c7 DUP2
0x1c8 ISZERO
0x1c9 MUL
0x1ca SWAP1
0x1cb PUSH1 0x40
0x1cd MLOAD
0x1ce DUP1
0x1cf SWAP1
0x1d0 POP
0x1d1 PUSH1 0x0
0x1d3 PUSH1 0x40
0x1d5 MLOAD
0x1d6 DUP1
0x1d7 DUP4
0x1d8 SUB
0x1d9 DUP2
0x1da DUP6
0x1db DUP9
0x1dc DUP9
0x1dd CALL
0x1de SWAP4
0x1df POP
0x1e0 POP
0x1e1 POP
0x1e2 POP
0x1e3 POP
---
0x16a: JUMPDEST 
0x16b: V92 = 0x0
0x16d: V93 = 0x0
0x16f: V94 = ADDRESS
0x170: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x185: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x186: V97 = BALANCE V96
0x189: V98 = 0x0
0x18b: V99 = 0x0
0x18e: V100 = S[0x0]
0x190: V101 = 0x100
0x193: V102 = EXP 0x100 0x0
0x195: V103 = DIV V100 0x1
0x196: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ab: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x1ac: V106 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c1: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V105
0x1c2: V108 = 0x8fc
0x1c8: V109 = ISZERO V97
0x1c9: V110 = MUL V109 0x8fc
0x1cb: V111 = 0x40
0x1cd: V112 = M[0x40]
0x1d1: V113 = 0x0
0x1d3: V114 = 0x40
0x1d5: V115 = M[0x40]
0x1d8: V116 = SUB V112 V115
0x1dd: V117 = CALL V110 V107 V97 V115 V116 V115 0x0
---
Entry stack: [V7, 0xbe]
Stack pops: 0
Stack additions: [0x0, V97]
Exit stack: [V7, 0xbe, 0x0, V97]

================================

Block 0x1e4
[0x1e4:0x1e7]
---
Predecessors: [0x16a]
Successors: [0xbe]
---
0x1e4 JUMPDEST
0x1e5 POP
0x1e6 SWAP1
0x1e7 JUMP
---
0x1e4: JUMPDEST 
0x1e7: JUMP 0xbe
---
Entry stack: [V7, 0xbe, 0x0, V97]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V7, 0x0]

================================

Block 0x1e8
[0x1e8:0x23e]
---
Predecessors: [0xe0]
Successors: [0x23f, 0x279]
---
0x1e8 JUMPDEST
0x1e9 PUSH1 0x0
0x1eb PUSH1 0x0
0x1ed SWAP1
0x1ee SLOAD
0x1ef SWAP1
0x1f0 PUSH2 0x100
0x1f3 EXP
0x1f4 SWAP1
0x1f5 DIV
0x1f6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20b AND
0x20c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x221 AND
0x222 CALLER
0x223 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x238 AND
0x239 EQ
0x23a ISZERO
0x23b PUSH2 0x279
0x23e JUMPI
---
0x1e8: JUMPDEST 
0x1e9: V118 = 0x0
0x1eb: V119 = 0x0
0x1ee: V120 = S[0x0]
0x1f0: V121 = 0x100
0x1f3: V122 = EXP 0x100 0x0
0x1f5: V123 = DIV V120 0x1
0x1f6: V124 = 0xffffffffffffffffffffffffffffffffffffffff
0x20b: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V123
0x20c: V126 = 0xffffffffffffffffffffffffffffffffffffffff
0x221: V127 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x222: V128 = CALLER
0x223: V129 = 0xffffffffffffffffffffffffffffffffffffffff
0x238: V130 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x239: V131 = EQ V130 V127
0x23a: V132 = ISZERO V131
0x23b: V133 = 0x279
0x23e: JUMPI 0x279 V132
---
Entry stack: [V7, 0xe8]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xe8]

================================

Block 0x23f
[0x23f:0x278]
---
Predecessors: [0x1e8]
Successors: []
---
0x23f PUSH1 0x0
0x241 PUSH1 0x0
0x243 SWAP1
0x244 SLOAD
0x245 SWAP1
0x246 PUSH2 0x100
0x249 EXP
0x24a SWAP1
0x24b DIV
0x24c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x261 AND
0x262 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x277 AND
0x278 SELFDESTRUCT
---
0x23f: V134 = 0x0
0x241: V135 = 0x0
0x244: V136 = S[0x0]
0x246: V137 = 0x100
0x249: V138 = EXP 0x100 0x0
0x24b: V139 = DIV V136 0x1
0x24c: V140 = 0xffffffffffffffffffffffffffffffffffffffff
0x261: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x262: V142 = 0xffffffffffffffffffffffffffffffffffffffff
0x277: V143 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0x278: SELFDESTRUCT V143
---
Entry stack: [V7, 0xe8]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xe8]

================================

Block 0x279
[0x279:0x279]
---
Predecessors: [0x1e8]
Successors: [0x27a]
---
0x279 JUMPDEST
---
0x279: JUMPDEST 
---
Entry stack: [V7, 0xe8]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xe8]

================================

Block 0x27a
[0x27a:0x27b]
---
Predecessors: [0x279]
Successors: [0xe8]
---
0x27a JUMPDEST
0x27b JUMP
---
0x27a: JUMPDEST 
0x27b: JUMP 0xe8
---
Entry stack: [V7, 0xe8]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Block 0x27c
[0x27c:0x28b]
---
Predecessors: [0xf2]
Successors: [0x28c, 0x290]
---
0x27c JUMPDEST
0x27d PUSH7 0x2386f26fc10000
0x285 CALLVALUE
0x286 LT
0x287 ISZERO
0x288 PUSH2 0x290
0x28b JUMPI
---
0x27c: JUMPDEST 
0x27d: V144 = 0x2386f26fc10000
0x285: V145 = CALLVALUE
0x286: V146 = LT V145 0x2386f26fc10000
0x287: V147 = ISZERO V146
0x288: V148 = 0x290
0x28b: JUMPI 0x290 V147
---
Entry stack: [V7, 0x142, V77]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x142, V77]

================================

Block 0x28c
[0x28c:0x28f]
---
Predecessors: [0x27c]
Successors: []
---
0x28c PUSH2 0x0
0x28f JUMP
---
0x28c: V149 = 0x0
0x28f: THROW 
---
Entry stack: [V7, 0x142, V77]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x142, V77]

================================

Block 0x290
[0x290:0x30f]
---
Predecessors: [0x27c]
Successors: [0x310, 0x334]
---
0x290 JUMPDEST
0x291 PUSH32 0x8b286a9d9b4898ba2256953026b13d2b6a757d5903ac77c5ad4c23c4f6056682
0x2b2 CALLER
0x2b3 DUP3
0x2b4 PUSH1 0x40
0x2b6 MLOAD
0x2b7 DUP1
0x2b8 DUP4
0x2b9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ce AND
0x2cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e4 AND
0x2e5 DUP2
0x2e6 MSTORE
0x2e7 PUSH1 0x20
0x2e9 ADD
0x2ea DUP1
0x2eb PUSH1 0x20
0x2ed ADD
0x2ee DUP3
0x2ef DUP2
0x2f0 SUB
0x2f1 DUP3
0x2f2 MSTORE
0x2f3 DUP4
0x2f4 DUP2
0x2f5 DUP2
0x2f6 MLOAD
0x2f7 DUP2
0x2f8 MSTORE
0x2f9 PUSH1 0x20
0x2fb ADD
0x2fc SWAP2
0x2fd POP
0x2fe DUP1
0x2ff MLOAD
0x300 SWAP1
0x301 PUSH1 0x20
0x303 ADD
0x304 SWAP1
0x305 DUP1
0x306 DUP4
0x307 DUP4
0x308 PUSH1 0x0
0x30a DUP4
0x30b EQ
0x30c PUSH2 0x334
0x30f JUMPI
---
0x290: JUMPDEST 
0x291: V150 = 0x8b286a9d9b4898ba2256953026b13d2b6a757d5903ac77c5ad4c23c4f6056682
0x2b2: V151 = CALLER
0x2b4: V152 = 0x40
0x2b6: V153 = M[0x40]
0x2b9: V154 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ce: V155 = AND 0xffffffffffffffffffffffffffffffffffffffff V151
0x2cf: V156 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e4: V157 = AND 0xffffffffffffffffffffffffffffffffffffffff V155
0x2e6: M[V153] = V157
0x2e7: V158 = 0x20
0x2e9: V159 = ADD 0x20 V153
0x2eb: V160 = 0x20
0x2ed: V161 = ADD 0x20 V159
0x2f0: V162 = SUB V161 V153
0x2f2: M[V159] = V162
0x2f6: V163 = M[V77]
0x2f8: M[V161] = V163
0x2f9: V164 = 0x20
0x2fb: V165 = ADD 0x20 V161
0x2ff: V166 = M[V77]
0x301: V167 = 0x20
0x303: V168 = ADD 0x20 V77
0x308: V169 = 0x0
0x30b: V170 = EQ V166 0x0
0x30c: V171 = 0x334
0x30f: JUMPI 0x334 V170
---
Entry stack: [V7, 0x142, V77]
Stack pops: 1
Stack additions: [S0, 0x8b286a9d9b4898ba2256953026b13d2b6a757d5903ac77c5ad4c23c4f6056682, V151, S0, V153, V159, V165, V168, V166, V166, V165, V168]
Exit stack: [V7, 0x142, V77, 0x8b286a9d9b4898ba2256953026b13d2b6a757d5903ac77c5ad4c23c4f6056682, V151, V77, V153, V159, V165, V168, V166, V166, V165, V168]

================================

Block 0x310
[0x310:0x31d]
---
Predecessors: [0x290, 0x31e]
Successors: [0x31e, 0x334]
---
0x310 JUMPDEST
0x311 DUP1
0x312 MLOAD
0x313 DUP3
0x314 MSTORE
0x315 PUSH1 0x20
0x317 DUP4
0x318 GT
0x319 ISZERO
0x31a PUSH2 0x334
0x31d JUMPI
---
0x310: JUMPDEST 
0x312: V172 = M[S0]
0x314: M[S1] = V172
0x315: V173 = 0x20
0x318: V174 = GT S2 0x20
0x319: V175 = ISZERO V174
0x31a: V176 = 0x334
0x31d: JUMPI 0x334 V175
---
Entry stack: [V7, 0x142, V77, 0x8b286a9d9b4898ba2256953026b13d2b6a757d5903ac77c5ad4c23c4f6056682, V151, V77, V153, V159, V165, V168, V166, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V7, 0x142, V77, 0x8b286a9d9b4898ba2256953026b13d2b6a757d5903ac77c5ad4c23c4f6056682, V151, V77, V153, V159, V165, V168, V166, S2, S1, S0]

================================

Block 0x31e
[0x31e:0x333]
---
Predecessors: [0x310]
Successors: [0x310]
---
0x31e PUSH1 0x20
0x320 DUP3
0x321 ADD
0x322 SWAP2
0x323 POP
0x324 PUSH1 0x20
0x326 DUP2
0x327 ADD
0x328 SWAP1
0x329 POP
0x32a PUSH1 0x20
0x32c DUP4
0x32d SUB
0x32e SWAP3
0x32f POP
0x330 PUSH2 0x310
0x333 JUMP
---
0x31e: V177 = 0x20
0x321: V178 = ADD S1 0x20
0x324: V179 = 0x20
0x327: V180 = ADD S0 0x20
0x32a: V181 = 0x20
0x32d: V182 = SUB S2 0x20
0x330: V183 = 0x310
0x333: JUMP 0x310
---
Entry stack: [V7, 0x142, V77, 0x8b286a9d9b4898ba2256953026b13d2b6a757d5903ac77c5ad4c23c4f6056682, V151, V77, V153, V159, V165, V168, V166, S2, S1, S0]
Stack pops: 3
Stack additions: [V182, V178, V180]
Exit stack: [V7, 0x142, V77, 0x8b286a9d9b4898ba2256953026b13d2b6a757d5903ac77c5ad4c23c4f6056682, V151, V77, V153, V159, V165, V168, V166, V182, V178, V180]

================================

Block 0x334
[0x334:0x346]
---
Predecessors: [0x290, 0x310]
Successors: [0x347, 0x360]
---
0x334 JUMPDEST
0x335 POP
0x336 POP
0x337 POP
0x338 SWAP1
0x339 POP
0x33a SWAP1
0x33b DUP2
0x33c ADD
0x33d SWAP1
0x33e PUSH1 0x1f
0x340 AND
0x341 DUP1
0x342 ISZERO
0x343 PUSH2 0x360
0x346 JUMPI
---
0x334: JUMPDEST 
0x33c: V184 = ADD V166 V165
0x33e: V185 = 0x1f
0x340: V186 = AND 0x1f V166
0x342: V187 = ISZERO V186
0x343: V188 = 0x360
0x346: JUMPI 0x360 V187
---
Entry stack: [V7, 0x142, V77, 0x8b286a9d9b4898ba2256953026b13d2b6a757d5903ac77c5ad4c23c4f6056682, V151, V77, V153, V159, V165, V168, V166, S2, S1, S0]
Stack pops: 6
Stack additions: [V184, V186]
Exit stack: [V7, 0x142, V77, 0x8b286a9d9b4898ba2256953026b13d2b6a757d5903ac77c5ad4c23c4f6056682, V151, V77, V153, V159, V184, V186]

================================

Block 0x347
[0x347:0x35f]
---
Predecessors: [0x334]
Successors: [0x360]
---
0x347 DUP1
0x348 DUP3
0x349 SUB
0x34a DUP1
0x34b MLOAD
0x34c PUSH1 0x1
0x34e DUP4
0x34f PUSH1 0x20
0x351 SUB
0x352 PUSH2 0x100
0x355 EXP
0x356 SUB
0x357 NOT
0x358 AND
0x359 DUP2
0x35a MSTORE
0x35b PUSH1 0x20
0x35d ADD
0x35e SWAP2
0x35f POP
---
0x349: V189 = SUB V184 V186
0x34b: V190 = M[V189]
0x34c: V191 = 0x1
0x34f: V192 = 0x20
0x351: V193 = SUB 0x20 V186
0x352: V194 = 0x100
0x355: V195 = EXP 0x100 V193
0x356: V196 = SUB V195 0x1
0x357: V197 = NOT V196
0x358: V198 = AND V197 V190
0x35a: M[V189] = V198
0x35b: V199 = 0x20
0x35d: V200 = ADD 0x20 V189
---
Entry stack: [V7, 0x142, V77, 0x8b286a9d9b4898ba2256953026b13d2b6a757d5903ac77c5ad4c23c4f6056682, V151, V77, V153, V159, V184, V186]
Stack pops: 2
Stack additions: [V200, S0]
Exit stack: [V7, 0x142, V77, 0x8b286a9d9b4898ba2256953026b13d2b6a757d5903ac77c5ad4c23c4f6056682, V151, V77, V153, V159, V200, V186]

================================

Block 0x360
[0x360:0x36e]
---
Predecessors: [0x334, 0x347]
Successors: [0x36f]
---
0x360 JUMPDEST
0x361 POP
0x362 SWAP4
0x363 POP
0x364 POP
0x365 POP
0x366 POP
0x367 PUSH1 0x40
0x369 MLOAD
0x36a DUP1
0x36b SWAP2
0x36c SUB
0x36d SWAP1
0x36e LOG1
---
0x360: JUMPDEST 
0x367: V201 = 0x40
0x369: V202 = M[0x40]
0x36c: V203 = SUB S1 V202
0x36e: LOG V202 V203 0x8b286a9d9b4898ba2256953026b13d2b6a757d5903ac77c5ad4c23c4f6056682
---
Entry stack: [V7, 0x142, V77, 0x8b286a9d9b4898ba2256953026b13d2b6a757d5903ac77c5ad4c23c4f6056682, V151, V77, V153, V159, S1, V186]
Stack pops: 7
Stack additions: []
Exit stack: [V7, 0x142, V77]

================================

Block 0x36f
[0x36f:0x371]
---
Predecessors: [0x360]
Successors: [0x142]
---
0x36f JUMPDEST
0x370 POP
0x371 JUMP
---
0x36f: JUMPDEST 
0x371: JUMP 0x142
---
Entry stack: [V7, 0x142, V77]
Stack pops: 2
Stack additions: []
Exit stack: [V7]

================================

Block 0x372
[0x372:0x39d]
---
Predecessors: []
Successors: []
---
0x372 STOP
0x373 LOG1
0x374 PUSH6 0x627a7a723058
0x37b SHA3
0x37c SWAP6
0x37d CREATE2
0x37e PUSH24 0x41bc9007a5ceb34f49d46d4030f781409bd0536db8ac42de
0x397 MISSING 0xb1
0x398 CALLDATALOAD
0x399 ADDRESS
0x39a STOP
0x39b MISSING 0x27
0x39c STOP
0x39d MISSING 0x29
---
0x372: STOP 
0x373: LOG S0 S1 S2
0x374: V204 = 0x627a7a723058
0x37b: V205 = SHA3 0x627a7a723058 S3
0x37d: V206 = CREATE2 S9 S4 S5 S6
0x37e: V207 = 0x41bc9007a5ceb34f49d46d4030f781409bd0536db8ac42de
0x397: MISSING 0xb1
0x398: V208 = CALLDATALOAD S0
0x399: V209 = ADDRESS
0x39a: STOP 
0x39b: MISSING 0x27
0x39c: STOP 
0x39d: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0x41bc9007a5ceb34f49d46d4030f781409bd0536db8ac42de, V206, S7, S8, V205, V209, V208]
Exit stack: []

================================

Function 0:
Public function signature: 0x3429e35c
Entry block: 0x5c
Exit block: 0x6c
Body: 0x5c, 0x63, 0x64, 0x6c, 0x144

Function 1:
Public function signature: 0x3ccfd60b
Entry block: 0xae
Exit block: 0xbe
Body: 0xae, 0xb5, 0xb6, 0xbe, 0x16a, 0x1e4

Function 2:
Public function signature: 0x41c0e1b5
Entry block: 0xd8
Exit block: 0xe8
Body: 0xd8, 0xdf, 0xe0, 0xe8, 0x1e8, 0x23f, 0x279, 0x27a

Function 3:
Public function signature: 0xd60f8f4d
Entry block: 0xea
Exit block: 0x142
Body: 0xea, 0xf1, 0xf2, 0x142, 0x27c, 0x28c, 0x290, 0x310, 0x31e, 0x334, 0x347, 0x360, 0x36f

Function 4:
Public fallback function
Entry block: 0x5a
Exit block: 0x5a
Body: 0x5a

