Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x4e]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0xd1ed437
0x3c EQ
0x3d PUSH2 0x4e
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0xd1ed437
0x3c: V13 = EQ 0xd1ed437 V11
0x3d: V14 = 0x4e
0x40: JUMPI 0x4e V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xa6]
---
0x41 DUP1
0x42 PUSH4 0x99d5a3e6
0x47 EQ
0x48 PUSH2 0xa6
0x4b JUMPI
---
0x42: V15 = 0x99d5a3e6
0x47: V16 = EQ 0x99d5a3e6 V11
0x48: V17 = 0xa6
0x4b: JUMPI 0xa6 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x4d]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d STOP
---
0x4c: JUMPDEST 
0x4d: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4e
[0x4e:0x54]
---
Predecessors: [0xd]
Successors: [0x55, 0x59]
---
0x4e JUMPDEST
0x4f CALLVALUE
0x50 ISZERO
0x51 PUSH2 0x59
0x54 JUMPI
---
0x4e: JUMPDEST 
0x4f: V18 = CALLVALUE
0x50: V19 = ISZERO V18
0x51: V20 = 0x59
0x54: JUMPI 0x59 V19
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x55
[0x55:0x58]
---
Predecessors: [0x4e]
Successors: []
---
0x55 PUSH1 0x0
0x57 DUP1
0x58 REVERT
---
0x55: V21 = 0x0
0x58: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x59
[0x59:0xa3]
---
Predecessors: [0x4e]
Successors: [0xbb]
---
0x59 JUMPDEST
0x5a PUSH2 0xa4
0x5d PUSH1 0x4
0x5f DUP1
0x60 DUP1
0x61 CALLDATALOAD
0x62 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x77 AND
0x78 SWAP1
0x79 PUSH1 0x20
0x7b ADD
0x7c SWAP1
0x7d SWAP2
0x7e SWAP1
0x7f DUP1
0x80 CALLDATALOAD
0x81 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x96 AND
0x97 SWAP1
0x98 PUSH1 0x20
0x9a ADD
0x9b SWAP1
0x9c SWAP2
0x9d SWAP1
0x9e POP
0x9f POP
0xa0 PUSH2 0xbb
0xa3 JUMP
---
0x59: JUMPDEST 
0x5a: V22 = 0xa4
0x5d: V23 = 0x4
0x61: V24 = CALLDATALOAD 0x4
0x62: V25 = 0xffffffffffffffffffffffffffffffffffffffff
0x77: V26 = AND 0xffffffffffffffffffffffffffffffffffffffff V24
0x79: V27 = 0x20
0x7b: V28 = ADD 0x20 0x4
0x80: V29 = CALLDATALOAD 0x24
0x81: V30 = 0xffffffffffffffffffffffffffffffffffffffff
0x96: V31 = AND 0xffffffffffffffffffffffffffffffffffffffff V29
0x98: V32 = 0x20
0x9a: V33 = ADD 0x20 0x24
0xa0: V34 = 0xbb
0xa3: JUMP 0xbb
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa4, V26, V31]
Exit stack: [V11, 0xa4, V26, V31]

================================

Block 0xa4
[0xa4:0xa5]
---
Predecessors: [0x100]
Successors: []
---
0xa4 JUMPDEST
0xa5 STOP
---
0xa4: JUMPDEST 
0xa5: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa6
[0xa6:0xac]
---
Predecessors: [0x41]
Successors: [0xad, 0xb1]
---
0xa6 JUMPDEST
0xa7 CALLVALUE
0xa8 ISZERO
0xa9 PUSH2 0xb1
0xac JUMPI
---
0xa6: JUMPDEST 
0xa7: V35 = CALLVALUE
0xa8: V36 = ISZERO V35
0xa9: V37 = 0xb1
0xac: JUMPI 0xb1 V36
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xad
[0xad:0xb0]
---
Predecessors: [0xa6]
Successors: []
---
0xad PUSH1 0x0
0xaf DUP1
0xb0 REVERT
---
0xad: V38 = 0x0
0xb0: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb1
[0xb1:0xb8]
---
Predecessors: [0xa6]
Successors: [0x1e7]
---
0xb1 JUMPDEST
0xb2 PUSH2 0xb9
0xb5 PUSH2 0x1e7
0xb8 JUMP
---
0xb1: JUMPDEST 
0xb2: V39 = 0xb9
0xb5: V40 = 0x1e7
0xb8: JUMP 0x1e7
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xb9]
Exit stack: [V11, 0xb9]

================================

Block 0xb9
[0xb9:0xba]
---
Predecessors: []
Successors: []
---
0xb9 JUMPDEST
0xba STOP
---
0xb9: JUMPDEST 
0xba: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xbb
[0xbb:0xfb]
---
Predecessors: [0x59]
Successors: [0xfc, 0x100]
---
0xbb JUMPDEST
0xbc DUP1
0xbd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd2 AND
0xd3 PUSH2 0x8fc
0xd6 PUSH5 0xe8d4a51000
0xdc SWAP1
0xdd DUP2
0xde ISZERO
0xdf MUL
0xe0 SWAP1
0xe1 PUSH1 0x40
0xe3 MLOAD
0xe4 PUSH1 0x0
0xe6 PUSH1 0x40
0xe8 MLOAD
0xe9 DUP1
0xea DUP4
0xeb SUB
0xec DUP2
0xed DUP6
0xee DUP9
0xef DUP9
0xf0 CALL
0xf1 SWAP4
0xf2 POP
0xf3 POP
0xf4 POP
0xf5 POP
0xf6 ISZERO
0xf7 ISZERO
0xf8 PUSH2 0x100
0xfb JUMPI
---
0xbb: JUMPDEST 
0xbd: V41 = 0xffffffffffffffffffffffffffffffffffffffff
0xd2: V42 = AND 0xffffffffffffffffffffffffffffffffffffffff V31
0xd3: V43 = 0x8fc
0xd6: V44 = 0xe8d4a51000
0xde: V45 = ISZERO 0xe8d4a51000
0xdf: V46 = MUL 0x0 0x8fc
0xe1: V47 = 0x40
0xe3: V48 = M[0x40]
0xe4: V49 = 0x0
0xe6: V50 = 0x40
0xe8: V51 = M[0x40]
0xeb: V52 = SUB V48 V51
0xf0: V53 = CALL 0x0 V42 0xe8d4a51000 V51 V52 V51 0x0
0xf6: V54 = ISZERO V53
0xf7: V55 = ISZERO V54
0xf8: V56 = 0x100
0xfb: JUMPI 0x100 V55
---
Entry stack: [V11, 0xa4, V26, V31]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xa4, V26, V31]

================================

Block 0xfc
[0xfc:0xff]
---
Predecessors: [0xbb]
Successors: []
---
0xfc PUSH1 0x0
0xfe DUP1
0xff REVERT
---
0xfc: V57 = 0x0
0xff: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa4, V26, V31]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa4, V26, V31]

================================

Block 0x100
[0x100:0x1e6]
---
Predecessors: [0xbb]
Successors: [0xa4]
---
0x100 JUMPDEST
0x101 DUP2
0x102 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x117 AND
0x118 PUSH1 0x40
0x11a MLOAD
0x11b DUP1
0x11c DUP1
0x11d PUSH32 0x7265286164647265737329000000000000000000000000000000000000000000
0x13e DUP2
0x13f MSTORE
0x140 POP
0x141 PUSH1 0xb
0x143 ADD
0x144 SWAP1
0x145 POP
0x146 PUSH1 0x40
0x148 MLOAD
0x149 DUP1
0x14a SWAP2
0x14b SUB
0x14c SWAP1
0x14d SHA3
0x14e PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x16c SWAP1
0x16d DIV
0x16e DUP3
0x16f PUSH1 0x40
0x171 MLOAD
0x172 DUP3
0x173 PUSH4 0xffffffff
0x178 AND
0x179 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x197 MUL
0x198 DUP2
0x199 MSTORE
0x19a PUSH1 0x4
0x19c ADD
0x19d DUP1
0x19e DUP3
0x19f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b4 AND
0x1b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ca AND
0x1cb DUP2
0x1cc MSTORE
0x1cd PUSH1 0x20
0x1cf ADD
0x1d0 SWAP2
0x1d1 POP
0x1d2 POP
0x1d3 PUSH1 0x0
0x1d5 PUSH1 0x40
0x1d7 MLOAD
0x1d8 DUP1
0x1d9 DUP4
0x1da SUB
0x1db DUP2
0x1dc DUP7
0x1dd GAS
0x1de DELEGATECALL
0x1df SWAP3
0x1e0 POP
0x1e1 POP
0x1e2 POP
0x1e3 POP
0x1e4 POP
0x1e5 POP
0x1e6 JUMP
---
0x100: JUMPDEST 
0x102: V58 = 0xffffffffffffffffffffffffffffffffffffffff
0x117: V59 = AND 0xffffffffffffffffffffffffffffffffffffffff V26
0x118: V60 = 0x40
0x11a: V61 = M[0x40]
0x11d: V62 = 0x7265286164647265737329000000000000000000000000000000000000000000
0x13f: M[V61] = 0x7265286164647265737329000000000000000000000000000000000000000000
0x141: V63 = 0xb
0x143: V64 = ADD 0xb V61
0x146: V65 = 0x40
0x148: V66 = M[0x40]
0x14b: V67 = SUB V64 V66
0x14d: V68 = SHA3 V66 V67
0x14e: V69 = 0x100000000000000000000000000000000000000000000000000000000
0x16d: V70 = DIV V68 0x100000000000000000000000000000000000000000000000000000000
0x16f: V71 = 0x40
0x171: V72 = M[0x40]
0x173: V73 = 0xffffffff
0x178: V74 = AND 0xffffffff V70
0x179: V75 = 0x100000000000000000000000000000000000000000000000000000000
0x197: V76 = MUL 0x100000000000000000000000000000000000000000000000000000000 V74
0x199: M[V72] = V76
0x19a: V77 = 0x4
0x19c: V78 = ADD 0x4 V72
0x19f: V79 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b4: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V31
0x1b5: V81 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ca: V82 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0x1cc: M[V78] = V82
0x1cd: V83 = 0x20
0x1cf: V84 = ADD 0x20 V78
0x1d3: V85 = 0x0
0x1d5: V86 = 0x40
0x1d7: V87 = M[0x40]
0x1da: V88 = SUB V84 V87
0x1dd: V89 = GAS
0x1de: V90 = DELEGATECALL V89 V59 V87 V88 V87 0x0
0x1e6: JUMP 0xa4
---
Entry stack: [V11, 0xa4, V26, V31]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x1e7
[0x1e7:0x213]
---
Predecessors: [0xb1]
Successors: []
---
0x1e7 JUMPDEST
0x1e8 PUSH20 0xdc41b95d774dddf3b2b196548f114965cc8eb023
0x1fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x212 AND
0x213 SELFDESTRUCT
---
0x1e7: JUMPDEST 
0x1e8: V91 = 0xdc41b95d774dddf3b2b196548f114965cc8eb023
0x1fd: V92 = 0xffffffffffffffffffffffffffffffffffffffff
0x212: V93 = AND 0xffffffffffffffffffffffffffffffffffffffff 0xdc41b95d774dddf3b2b196548f114965cc8eb023
0x213: SELFDESTRUCT 0xdc41b95d774dddf3b2b196548f114965cc8eb023
---
Entry stack: [V11, 0xb9]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb9]

================================

Block 0x214
[0x214:0x243]
---
Predecessors: []
Successors: []
---
0x214 STOP
0x215 LOG1
0x216 PUSH6 0x627a7a723058
0x21d SHA3
0x21e CALLVALUE
0x21f MISSING 0xba
0x220 MISSING 0xc0
0x221 REVERT
0x222 SWAP15
0x223 SWAP2
0x224 CALL
0x225 DUP15
0x226 MISSING 0xe0
0x227 MISSING 0xb6
0x228 PUSH4 0x3afabe23
0x22d DUP4
0x22e CODECOPY
0x22f LOG1
0x230 MISSING 0xc1
0x231 PUSH2 0xc15b
0x234 MISSING 0xe7
0x235 PUSH14 0xfe2a6ea747c85b4a0029
---
0x214: STOP 
0x215: LOG S0 S1 S2
0x216: V94 = 0x627a7a723058
0x21d: V95 = SHA3 0x627a7a723058 S3
0x21e: V96 = CALLVALUE
0x21f: MISSING 0xba
0x220: MISSING 0xc0
0x221: REVERT S0 S1
0x224: V97 = CALL S2 S1 S15 S3 S4 S5 S6
0x226: MISSING 0xe0
0x227: MISSING 0xb6
0x228: V98 = 0x3afabe23
0x22e: CODECOPY S2 0x3afabe23 S0
0x22f: LOG S1 S2 S3
0x230: MISSING 0xc1
0x231: V99 = 0xc15b
0x234: MISSING 0xe7
0x235: V100 = 0xfe2a6ea747c85b4a0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V96, V95, S20, V97, S7, S8, S9, S10, S11, S12, S13, S14, S0, S16, S17, S18, S19, S20, 0xc15b, 0xfe2a6ea747c85b4a0029]
Exit stack: []

================================

Function 0:
Public function signature: 0xd1ed437
Entry block: 0x4e
Exit block: 0xa4
Body: 0x4e, 0x55, 0x59, 0xa4, 0xbb, 0xfc, 0x100

Function 1:
Public function signature: 0x99d5a3e6
Entry block: 0xa6
Exit block: 0x1e7
Body: 0xa6, 0xad, 0xb1, 0x1e7

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

