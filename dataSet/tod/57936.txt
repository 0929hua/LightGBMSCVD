Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x56]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x56
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x56
0xc: JUMPI 0x56 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x95]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x49649fbf
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x95
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x49649fbf
0x3b: V13 = EQ V11 0x49649fbf
0x3c: V14 = 0x95
0x3f: JUMPI 0x95 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xbc]
---
0x40 DUP1
0x41 PUSH4 0x8da5cb5b
0x46 EQ
0x47 PUSH2 0xbc
0x4a JUMPI
---
0x41: V15 = 0x8da5cb5b
0x46: V16 = EQ 0x8da5cb5b V11
0x47: V17 = 0xbc
0x4a: JUMPI 0xbc V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xeb]
---
0x4b DUP1
0x4c PUSH4 0xc1075329
0x51 EQ
0x52 PUSH2 0xeb
0x55 JUMPI
---
0x4c: V18 = 0xc1075329
0x51: V19 = EQ 0xc1075329 V11
0x52: V20 = 0xeb
0x55: JUMPI 0xeb V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x94]
---
Predecessors: [0x0, 0x4b]
Successors: []
---
0x56 JUMPDEST
0x57 CALLER
0x58 PUSH1 0x1
0x5a PUSH1 0xa0
0x5c PUSH1 0x2
0x5e EXP
0x5f SUB
0x60 AND
0x61 PUSH32 0xf32a9f77675fd5917534c7746608fd3e309eac68fbdcbf5925e24ca97a704396
0x82 CALLVALUE
0x83 PUSH1 0x40
0x85 MLOAD
0x86 SWAP1
0x87 DUP2
0x88 MSTORE
0x89 PUSH1 0x20
0x8b ADD
0x8c PUSH1 0x40
0x8e MLOAD
0x8f DUP1
0x90 SWAP2
0x91 SUB
0x92 SWAP1
0x93 LOG2
0x94 STOP
---
0x56: JUMPDEST 
0x57: V21 = CALLER
0x58: V22 = 0x1
0x5a: V23 = 0xa0
0x5c: V24 = 0x2
0x5e: V25 = EXP 0x2 0xa0
0x5f: V26 = SUB 0x10000000000000000000000000000000000000000 0x1
0x60: V27 = AND 0xffffffffffffffffffffffffffffffffffffffff V21
0x61: V28 = 0xf32a9f77675fd5917534c7746608fd3e309eac68fbdcbf5925e24ca97a704396
0x82: V29 = CALLVALUE
0x83: V30 = 0x40
0x85: V31 = M[0x40]
0x88: M[V31] = V29
0x89: V32 = 0x20
0x8b: V33 = ADD 0x20 V31
0x8c: V34 = 0x40
0x8e: V35 = M[0x40]
0x91: V36 = SUB V33 V35
0x93: LOG V35 V36 0xf32a9f77675fd5917534c7746608fd3e309eac68fbdcbf5925e24ca97a704396 V27
0x94: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x95
[0x95:0x9b]
---
Predecessors: [0xd]
Successors: [0x9c, 0xa0]
---
0x95 JUMPDEST
0x96 CALLVALUE
0x97 ISZERO
0x98 PUSH2 0xa0
0x9b JUMPI
---
0x95: JUMPDEST 
0x96: V37 = CALLVALUE
0x97: V38 = ISZERO V37
0x98: V39 = 0xa0
0x9b: JUMPI 0xa0 V38
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9c
[0x9c:0x9f]
---
Predecessors: [0x95]
Successors: []
---
0x9c PUSH1 0x0
0x9e DUP1
0x9f REVERT
---
0x9c: V40 = 0x0
0x9f: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa0
[0xa0:0xa7]
---
Predecessors: [0x95]
Successors: [0x10d]
---
0xa0 JUMPDEST
0xa1 PUSH2 0xa8
0xa4 PUSH2 0x10d
0xa7 JUMP
---
0xa0: JUMPDEST 
0xa1: V41 = 0xa8
0xa4: V42 = 0x10d
0xa7: JUMP 0x10d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa8]
Exit stack: [V11, 0xa8]

================================

Block 0xa8
[0xa8:0xbb]
---
Predecessors: [0x134, 0x1c8]
Successors: []
---
0xa8 JUMPDEST
0xa9 PUSH1 0x40
0xab MLOAD
0xac SWAP1
0xad ISZERO
0xae ISZERO
0xaf DUP2
0xb0 MSTORE
0xb1 PUSH1 0x20
0xb3 ADD
0xb4 PUSH1 0x40
0xb6 MLOAD
0xb7 DUP1
0xb8 SWAP2
0xb9 SUB
0xba SWAP1
0xbb RETURN
---
0xa8: JUMPDEST 
0xa9: V43 = 0x40
0xab: V44 = M[0x40]
0xad: V45 = ISZERO {0x0, 0x1}
0xae: V46 = ISZERO V45
0xb0: M[V44] = V46
0xb1: V47 = 0x20
0xb3: V48 = ADD 0x20 V44
0xb4: V49 = 0x40
0xb6: V50 = M[0x40]
0xb9: V51 = SUB V48 V50
0xbb: RETURN V50 V51
---
Entry stack: [V11, 0xa8, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xa8, S1]

================================

Block 0xbc
[0xbc:0xc2]
---
Predecessors: [0x40]
Successors: [0xc3, 0xc7]
---
0xbc JUMPDEST
0xbd CALLVALUE
0xbe ISZERO
0xbf PUSH2 0xc7
0xc2 JUMPI
---
0xbc: JUMPDEST 
0xbd: V52 = CALLVALUE
0xbe: V53 = ISZERO V52
0xbf: V54 = 0xc7
0xc2: JUMPI 0xc7 V53
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc3
[0xc3:0xc6]
---
Predecessors: [0xbc]
Successors: []
---
0xc3 PUSH1 0x0
0xc5 DUP1
0xc6 REVERT
---
0xc3: V55 = 0x0
0xc6: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc7
[0xc7:0xce]
---
Predecessors: [0xbc]
Successors: [0x139]
---
0xc7 JUMPDEST
0xc8 PUSH2 0xcf
0xcb PUSH2 0x139
0xce JUMP
---
0xc7: JUMPDEST 
0xc8: V56 = 0xcf
0xcb: V57 = 0x139
0xce: JUMP 0x139
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xcf]
Exit stack: [V11, 0xcf]

================================

Block 0xcf
[0xcf:0xea]
---
Predecessors: [0x139]
Successors: []
---
0xcf JUMPDEST
0xd0 PUSH1 0x40
0xd2 MLOAD
0xd3 PUSH1 0x1
0xd5 PUSH1 0xa0
0xd7 PUSH1 0x2
0xd9 EXP
0xda SUB
0xdb SWAP1
0xdc SWAP2
0xdd AND
0xde DUP2
0xdf MSTORE
0xe0 PUSH1 0x20
0xe2 ADD
0xe3 PUSH1 0x40
0xe5 MLOAD
0xe6 DUP1
0xe7 SWAP2
0xe8 SUB
0xe9 SWAP1
0xea RETURN
---
0xcf: JUMPDEST 
0xd0: V58 = 0x40
0xd2: V59 = M[0x40]
0xd3: V60 = 0x1
0xd5: V61 = 0xa0
0xd7: V62 = 0x2
0xd9: V63 = EXP 0x2 0xa0
0xda: V64 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdd: V65 = AND V111 0xffffffffffffffffffffffffffffffffffffffff
0xdf: M[V59] = V65
0xe0: V66 = 0x20
0xe2: V67 = ADD 0x20 V59
0xe3: V68 = 0x40
0xe5: V69 = M[0x40]
0xe8: V70 = SUB V67 V69
0xea: RETURN V69 V70
---
Entry stack: [V11, 0xcf, V111]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xcf]

================================

Block 0xeb
[0xeb:0xf1]
---
Predecessors: [0x4b]
Successors: [0xf2, 0xf6]
---
0xeb JUMPDEST
0xec CALLVALUE
0xed ISZERO
0xee PUSH2 0xf6
0xf1 JUMPI
---
0xeb: JUMPDEST 
0xec: V71 = CALLVALUE
0xed: V72 = ISZERO V71
0xee: V73 = 0xf6
0xf1: JUMPI 0xf6 V72
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf2
[0xf2:0xf5]
---
Predecessors: [0xeb]
Successors: []
---
0xf2 PUSH1 0x0
0xf4 DUP1
0xf5 REVERT
---
0xf2: V74 = 0x0
0xf5: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf6
[0xf6:0x10c]
---
Predecessors: [0xeb]
Successors: [0x148]
---
0xf6 JUMPDEST
0xf7 PUSH2 0xa8
0xfa PUSH1 0x1
0xfc PUSH1 0xa0
0xfe PUSH1 0x2
0x100 EXP
0x101 SUB
0x102 PUSH1 0x4
0x104 CALLDATALOAD
0x105 AND
0x106 PUSH1 0x24
0x108 CALLDATALOAD
0x109 PUSH2 0x148
0x10c JUMP
---
0xf6: JUMPDEST 
0xf7: V75 = 0xa8
0xfa: V76 = 0x1
0xfc: V77 = 0xa0
0xfe: V78 = 0x2
0x100: V79 = EXP 0x2 0xa0
0x101: V80 = SUB 0x10000000000000000000000000000000000000000 0x1
0x102: V81 = 0x4
0x104: V82 = CALLDATALOAD 0x4
0x105: V83 = AND V82 0xffffffffffffffffffffffffffffffffffffffff
0x106: V84 = 0x24
0x108: V85 = CALLDATALOAD 0x24
0x109: V86 = 0x148
0x10c: JUMP 0x148
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa8, V83, V85]
Exit stack: [V11, 0xa8, V83, V85]

================================

Block 0x10d
[0x10d:0x124]
---
Predecessors: [0xa0]
Successors: [0x125, 0x129]
---
0x10d JUMPDEST
0x10e PUSH1 0x0
0x110 DUP1
0x111 SLOAD
0x112 CALLER
0x113 PUSH1 0x1
0x115 PUSH1 0xa0
0x117 PUSH1 0x2
0x119 EXP
0x11a SUB
0x11b SWAP1
0x11c DUP2
0x11d AND
0x11e SWAP2
0x11f AND
0x120 EQ
0x121 PUSH2 0x129
0x124 JUMPI
---
0x10d: JUMPDEST 
0x10e: V87 = 0x0
0x111: V88 = S[0x0]
0x112: V89 = CALLER
0x113: V90 = 0x1
0x115: V91 = 0xa0
0x117: V92 = 0x2
0x119: V93 = EXP 0x2 0xa0
0x11a: V94 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11d: V95 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0x11f: V96 = AND V88 0xffffffffffffffffffffffffffffffffffffffff
0x120: V97 = EQ V96 V95
0x121: V98 = 0x129
0x124: JUMPI 0x129 V97
---
Entry stack: [V11, 0xa8]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0xa8, 0x0]

================================

Block 0x125
[0x125:0x128]
---
Predecessors: [0x10d]
Successors: []
---
0x125 PUSH1 0x0
0x127 DUP1
0x128 REVERT
---
0x125: V99 = 0x0
0x128: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa8, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa8, 0x0]

================================

Block 0x129
[0x129:0x133]
---
Predecessors: [0x10d]
Successors: [0x148]
---
0x129 JUMPDEST
0x12a PUSH2 0x134
0x12d CALLER
0x12e PUSH1 0x0
0x130 PUSH2 0x148
0x133 JUMP
---
0x129: JUMPDEST 
0x12a: V100 = 0x134
0x12d: V101 = CALLER
0x12e: V102 = 0x0
0x130: V103 = 0x148
0x133: JUMP 0x148
---
Entry stack: [V11, 0xa8, 0x0]
Stack pops: 0
Stack additions: [0x134, V101, 0x0]
Exit stack: [V11, 0xa8, 0x0, 0x134, V101, 0x0]

================================

Block 0x134
[0x134:0x138]
---
Predecessors: [0x1c8]
Successors: [0xa8]
---
0x134 JUMPDEST
0x135 SWAP1
0x136 POP
0x137 SWAP1
0x138 JUMP
---
0x134: JUMPDEST 
0x138: JUMP 0xa8
---
Entry stack: [V11, 0xa8, S1, {0x0, 0x1}]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V11, {0x0, 0x1}]

================================

Block 0x139
[0x139:0x147]
---
Predecessors: [0xc7]
Successors: [0xcf]
---
0x139 JUMPDEST
0x13a PUSH1 0x0
0x13c SLOAD
0x13d PUSH1 0x1
0x13f PUSH1 0xa0
0x141 PUSH1 0x2
0x143 EXP
0x144 SUB
0x145 AND
0x146 DUP2
0x147 JUMP
---
0x139: JUMPDEST 
0x13a: V104 = 0x0
0x13c: V105 = S[0x0]
0x13d: V106 = 0x1
0x13f: V107 = 0xa0
0x141: V108 = 0x2
0x143: V109 = EXP 0x2 0xa0
0x144: V110 = SUB 0x10000000000000000000000000000000000000000 0x1
0x145: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V105
0x147: JUMP 0xcf
---
Entry stack: [V11, 0xcf]
Stack pops: 1
Stack additions: [S0, V111]
Exit stack: [V11, 0xcf, V111]

================================

Block 0x148
[0x148:0x15f]
---
Predecessors: [0xf6, 0x129]
Successors: [0x160, 0x164]
---
0x148 JUMPDEST
0x149 PUSH1 0x0
0x14b DUP1
0x14c SLOAD
0x14d CALLER
0x14e PUSH1 0x1
0x150 PUSH1 0xa0
0x152 PUSH1 0x2
0x154 EXP
0x155 SUB
0x156 SWAP1
0x157 DUP2
0x158 AND
0x159 SWAP2
0x15a AND
0x15b EQ
0x15c PUSH2 0x164
0x15f JUMPI
---
0x148: JUMPDEST 
0x149: V112 = 0x0
0x14c: V113 = S[0x0]
0x14d: V114 = CALLER
0x14e: V115 = 0x1
0x150: V116 = 0xa0
0x152: V117 = 0x2
0x154: V118 = EXP 0x2 0xa0
0x155: V119 = SUB 0x10000000000000000000000000000000000000000 0x1
0x158: V120 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x15a: V121 = AND V113 0xffffffffffffffffffffffffffffffffffffffff
0x15b: V122 = EQ V121 V120
0x15c: V123 = 0x164
0x15f: JUMPI 0x164 V122
---
Entry stack: [V11, 0xa8, S3, {0xa8, 0x134}, S1, S0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0xa8, S3, {0xa8, 0x134}, S1, S0, 0x0]

================================

Block 0x160
[0x160:0x163]
---
Predecessors: [0x148]
Successors: []
---
0x160 PUSH1 0x0
0x162 DUP1
0x163 REVERT
---
0x160: V124 = 0x0
0x163: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa8, S4, {0xa8, 0x134}, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa8, S4, {0xa8, 0x134}, S2, S1, 0x0]

================================

Block 0x164
[0x164:0x176]
---
Predecessors: [0x148]
Successors: [0x177, 0x1c4]
---
0x164 JUMPDEST
0x165 PUSH1 0x1
0x167 PUSH1 0xa0
0x169 PUSH1 0x2
0x16b EXP
0x16c SUB
0x16d ADDRESS
0x16e AND
0x16f BALANCE
0x170 DUP3
0x171 SWAP1
0x172 LT
0x173 PUSH2 0x1c4
0x176 JUMPI
---
0x164: JUMPDEST 
0x165: V125 = 0x1
0x167: V126 = 0xa0
0x169: V127 = 0x2
0x16b: V128 = EXP 0x2 0xa0
0x16c: V129 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16d: V130 = ADDRESS
0x16e: V131 = AND V130 0xffffffffffffffffffffffffffffffffffffffff
0x16f: V132 = BALANCE V131
0x172: V133 = LT V132 S1
0x173: V134 = 0x1c4
0x176: JUMPI 0x1c4 V133
---
Entry stack: [V11, 0xa8, S4, {0xa8, 0x134}, S2, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0xa8, S4, {0xa8, 0x134}, S2, S1, 0x0]

================================

Block 0x177
[0x177:0x17d]
---
Predecessors: [0x164]
Successors: [0x17e, 0x18b]
---
0x177 DUP2
0x178 ISZERO
0x179 ISZERO
0x17a PUSH2 0x18b
0x17d JUMPI
---
0x178: V135 = ISZERO S1
0x179: V136 = ISZERO V135
0x17a: V137 = 0x18b
0x17d: JUMPI 0x18b V136
---
Entry stack: [V11, 0xa8, S4, {0xa8, 0x134}, S2, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0xa8, S4, {0xa8, 0x134}, S2, S1, 0x0]

================================

Block 0x17e
[0x17e:0x18a]
---
Predecessors: [0x177]
Successors: [0x18b]
---
0x17e ADDRESS
0x17f PUSH1 0x1
0x181 PUSH1 0xa0
0x183 PUSH1 0x2
0x185 EXP
0x186 SUB
0x187 AND
0x188 BALANCE
0x189 SWAP2
0x18a POP
---
0x17e: V138 = ADDRESS
0x17f: V139 = 0x1
0x181: V140 = 0xa0
0x183: V141 = 0x2
0x185: V142 = EXP 0x2 0xa0
0x186: V143 = SUB 0x10000000000000000000000000000000000000000 0x1
0x187: V144 = AND 0xffffffffffffffffffffffffffffffffffffffff V138
0x188: V145 = BALANCE V144
---
Entry stack: [V11, 0xa8, S4, {0xa8, 0x134}, S2, S1, 0x0]
Stack pops: 2
Stack additions: [V145, S0]
Exit stack: [V11, 0xa8, S4, {0xa8, 0x134}, S2, V145, 0x0]

================================

Block 0x18b
[0x18b:0x1b7]
---
Predecessors: [0x177, 0x17e]
Successors: [0x1b8, 0x1bc]
---
0x18b JUMPDEST
0x18c PUSH1 0x1
0x18e PUSH1 0xa0
0x190 PUSH1 0x2
0x192 EXP
0x193 SUB
0x194 DUP4
0x195 AND
0x196 DUP3
0x197 ISZERO
0x198 PUSH2 0x8fc
0x19b MUL
0x19c DUP4
0x19d PUSH1 0x40
0x19f MLOAD
0x1a0 PUSH1 0x0
0x1a2 PUSH1 0x40
0x1a4 MLOAD
0x1a5 DUP1
0x1a6 DUP4
0x1a7 SUB
0x1a8 DUP2
0x1a9 DUP6
0x1aa DUP9
0x1ab DUP9
0x1ac CALL
0x1ad SWAP4
0x1ae POP
0x1af POP
0x1b0 POP
0x1b1 POP
0x1b2 ISZERO
0x1b3 ISZERO
0x1b4 PUSH2 0x1bc
0x1b7 JUMPI
---
0x18b: JUMPDEST 
0x18c: V146 = 0x1
0x18e: V147 = 0xa0
0x190: V148 = 0x2
0x192: V149 = EXP 0x2 0xa0
0x193: V150 = SUB 0x10000000000000000000000000000000000000000 0x1
0x195: V151 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x197: V152 = ISZERO S1
0x198: V153 = 0x8fc
0x19b: V154 = MUL 0x8fc V152
0x19d: V155 = 0x40
0x19f: V156 = M[0x40]
0x1a0: V157 = 0x0
0x1a2: V158 = 0x40
0x1a4: V159 = M[0x40]
0x1a7: V160 = SUB V156 V159
0x1ac: V161 = CALL V154 V151 S1 V159 V160 V159 0x0
0x1b2: V162 = ISZERO V161
0x1b3: V163 = ISZERO V162
0x1b4: V164 = 0x1bc
0x1b7: JUMPI 0x1bc V163
---
Entry stack: [V11, 0xa8, S4, {0xa8, 0x134}, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0xa8, S4, {0xa8, 0x134}, S2, S1, 0x0]

================================

Block 0x1b8
[0x1b8:0x1bb]
---
Predecessors: [0x18b]
Successors: []
---
0x1b8 PUSH1 0x0
0x1ba DUP1
0x1bb REVERT
---
0x1b8: V165 = 0x0
0x1bb: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa8, S4, {0xa8, 0x134}, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa8, S4, {0xa8, 0x134}, S2, S1, 0x0]

================================

Block 0x1bc
[0x1bc:0x1c3]
---
Predecessors: [0x18b]
Successors: [0x1c8]
---
0x1bc JUMPDEST
0x1bd POP
0x1be PUSH1 0x1
0x1c0 PUSH2 0x1c8
0x1c3 JUMP
---
0x1bc: JUMPDEST 
0x1be: V166 = 0x1
0x1c0: V167 = 0x1c8
0x1c3: JUMP 0x1c8
---
Entry stack: [V11, 0xa8, S4, {0xa8, 0x134}, S2, S1, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V11, 0xa8, S4, {0xa8, 0x134}, S2, S1, 0x1]

================================

Block 0x1c4
[0x1c4:0x1c7]
---
Predecessors: [0x164]
Successors: [0x1c8]
---
0x1c4 JUMPDEST
0x1c5 POP
0x1c6 PUSH1 0x0
---
0x1c4: JUMPDEST 
0x1c6: V168 = 0x0
---
Entry stack: [V11, 0xa8, S4, {0xa8, 0x134}, S2, S1, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0xa8, S4, {0xa8, 0x134}, S2, S1, 0x0]

================================

Block 0x1c8
[0x1c8:0x1cd]
---
Predecessors: [0x1bc, 0x1c4]
Successors: [0xa8, 0x134]
---
0x1c8 JUMPDEST
0x1c9 SWAP3
0x1ca SWAP2
0x1cb POP
0x1cc POP
0x1cd JUMP
---
0x1c8: JUMPDEST 
0x1cd: JUMP {0xa8, 0x134}
---
Entry stack: [V11, 0xa8, S4, {0xa8, 0x134}, S2, S1, {0x0, 0x1}]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V11, 0xa8, S4, {0x0, 0x1}]

================================

Block 0x1ce
[0x1ce:0x1f9]
---
Predecessors: []
Successors: []
---
0x1ce STOP
0x1cf LOG1
0x1d0 PUSH6 0x627a7a723058
0x1d7 SHA3
0x1d8 SELFDESTRUCT
0x1d9 SLT
0x1da CALLER
0x1db GASPRICE
0x1dc PUSH26 0xecbbd352d581544d7b1f802d2dd615b9cabc2ec8123c5c4e7ede
0x1f7 DUP10
0x1f8 STOP
0x1f9 MISSING 0x29
---
0x1ce: STOP 
0x1cf: LOG S0 S1 S2
0x1d0: V169 = 0x627a7a723058
0x1d7: V170 = SHA3 0x627a7a723058 S3
0x1d8: SELFDESTRUCT V170
0x1d9: V171 = SLT S0 S1
0x1da: V172 = CALLER
0x1db: V173 = GASPRICE
0x1dc: V174 = 0xecbbd352d581544d7b1f802d2dd615b9cabc2ec8123c5c4e7ede
0x1f8: STOP 
0x1f9: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S7, 0xecbbd352d581544d7b1f802d2dd615b9cabc2ec8123c5c4e7ede, V173, V172, V171, S2, S3, S4, S5, S6, S7]
Exit stack: []

================================

Function 0:
Public function signature: 0x49649fbf
Entry block: 0x95
Exit block: 0xa8
Body: 0x95, 0x9c, 0xa0, 0xa8, 0x10d, 0x125, 0x129, 0x134

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0xbc
Exit block: 0xcf
Body: 0xbc, 0xc3, 0xc7, 0xcf, 0x139

Function 2:
Public function signature: 0xc1075329
Entry block: 0xeb
Exit block: 0xa8
Body: 0xa8, 0xeb, 0xf2, 0xf6

Function 3:
Public fallback function
Entry block: 0x56
Exit block: 0x56
Body: 0x56

Function 4:
Private function
Entry block: 0x148
Exit block: 0x1c8
Body: 0x148, 0x164, 0x177, 0x17e, 0x18b, 0x1bc, 0x1c4, 0x1c8

