Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x76]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x76
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x76
0xa: JUMPI 0x76 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x78]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x3429e35c
0x3a EQ
0x3b PUSH2 0x78
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x3429e35c
0x3a: V12 = EQ 0x3429e35c V10
0x3b: V13 = 0x78
0x3e: JUMPI 0x78 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0xca]
---
0x3f DUP1
0x40 PUSH4 0x3ccfd60b
0x45 EQ
0x46 PUSH2 0xca
0x49 JUMPI
---
0x40: V14 = 0x3ccfd60b
0x45: V15 = EQ 0x3ccfd60b V10
0x46: V16 = 0xca
0x49: JUMPI 0xca V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0xf4]
---
0x4a DUP1
0x4b PUSH4 0x41c0e1b5
0x50 EQ
0x51 PUSH2 0xf4
0x54 JUMPI
---
0x4b: V17 = 0x41c0e1b5
0x50: V18 = EQ 0x41c0e1b5 V10
0x51: V19 = 0xf4
0x54: JUMPI 0xf4 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x106]
---
0x55 DUP1
0x56 PUSH4 0xd60f8f4d
0x5b EQ
0x5c PUSH2 0x106
0x5f JUMPI
---
0x56: V20 = 0xd60f8f4d
0x5b: V21 = EQ 0xd60f8f4d V10
0x5c: V22 = 0x106
0x5f: JUMPI 0x106 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x16c]
---
0x60 DUP1
0x61 PUSH4 0xddca3f43
0x66 EQ
0x67 PUSH2 0x16c
0x6a JUMPI
---
0x61: V23 = 0xddca3f43
0x66: V24 = EQ 0xddca3f43 V10
0x67: V25 = 0x16c
0x6a: JUMPI 0x16c V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x60]
Successors: [0x76, 0x192]
---
0x6b DUP1
0x6c PUSH4 0xe273602e
0x71 EQ
0x72 PUSH2 0x192
0x75 JUMPI
---
0x6c: V26 = 0xe273602e
0x71: V27 = EQ 0xe273602e V10
0x72: V28 = 0x192
0x75: JUMPI 0x192 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x76
[0x76:0x77]
---
Predecessors: [0x0, 0x6b]
Successors: []
---
0x76 JUMPDEST
0x77 INVALID
---
0x76: JUMPDEST 
0x77: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x78
[0x78:0x7e]
---
Predecessors: [0xb]
Successors: [0x7f, 0x80]
---
0x78 JUMPDEST
0x79 CALLVALUE
0x7a ISZERO
0x7b PUSH2 0x80
0x7e JUMPI
---
0x78: JUMPDEST 
0x79: V29 = CALLVALUE
0x7a: V30 = ISZERO V29
0x7b: V31 = 0x80
0x7e: JUMPI 0x80 V30
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x7f
[0x7f:0x7f]
---
Predecessors: [0x78]
Successors: []
---
0x7f INVALID
---
0x7f: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x80
[0x80:0x87]
---
Predecessors: [0x78]
Successors: [0x1b8]
---
0x80 JUMPDEST
0x81 PUSH2 0x88
0x84 PUSH2 0x1b8
0x87 JUMP
---
0x80: JUMPDEST 
0x81: V32 = 0x88
0x84: V33 = 0x1b8
0x87: JUMP 0x1b8
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x88]
Exit stack: [V10, 0x88]

================================

Block 0x88
[0x88:0xc9]
---
Predecessors: [0x1b8]
Successors: []
---
0x88 JUMPDEST
0x89 PUSH1 0x40
0x8b MLOAD
0x8c DUP1
0x8d DUP3
0x8e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa3 AND
0xa4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb9 AND
0xba DUP2
0xbb MSTORE
0xbc PUSH1 0x20
0xbe ADD
0xbf SWAP2
0xc0 POP
0xc1 POP
0xc2 PUSH1 0x40
0xc4 MLOAD
0xc5 DUP1
0xc6 SWAP2
0xc7 SUB
0xc8 SWAP1
0xc9 RETURN
---
0x88: JUMPDEST 
0x89: V34 = 0x40
0x8b: V35 = M[0x40]
0x8e: V36 = 0xffffffffffffffffffffffffffffffffffffffff
0xa3: V37 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0xa4: V38 = 0xffffffffffffffffffffffffffffffffffffffff
0xb9: V39 = AND 0xffffffffffffffffffffffffffffffffffffffff V37
0xbb: M[V35] = V39
0xbc: V40 = 0x20
0xbe: V41 = ADD 0x20 V35
0xc2: V42 = 0x40
0xc4: V43 = M[0x40]
0xc7: V44 = SUB V41 V43
0xc9: RETURN V43 V44
---
Entry stack: [V10, 0x88, V128]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x88]

================================

Block 0xca
[0xca:0xd0]
---
Predecessors: [0x3f]
Successors: [0xd1, 0xd2]
---
0xca JUMPDEST
0xcb CALLVALUE
0xcc ISZERO
0xcd PUSH2 0xd2
0xd0 JUMPI
---
0xca: JUMPDEST 
0xcb: V45 = CALLVALUE
0xcc: V46 = ISZERO V45
0xcd: V47 = 0xd2
0xd0: JUMPI 0xd2 V46
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xd1
[0xd1:0xd1]
---
Predecessors: [0xca]
Successors: []
---
0xd1 INVALID
---
0xd1: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xd2
[0xd2:0xd9]
---
Predecessors: [0xca]
Successors: [0x1de]
---
0xd2 JUMPDEST
0xd3 PUSH2 0xda
0xd6 PUSH2 0x1de
0xd9 JUMP
---
0xd2: JUMPDEST 
0xd3: V48 = 0xda
0xd6: V49 = 0x1de
0xd9: JUMP 0x1de
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xda]
Exit stack: [V10, 0xda]

================================

Block 0xda
[0xda:0xf3]
---
Predecessors: [0x258]
Successors: []
---
0xda JUMPDEST
0xdb PUSH1 0x40
0xdd MLOAD
0xde DUP1
0xdf DUP3
0xe0 ISZERO
0xe1 ISZERO
0xe2 ISZERO
0xe3 ISZERO
0xe4 DUP2
0xe5 MSTORE
0xe6 PUSH1 0x20
0xe8 ADD
0xe9 SWAP2
0xea POP
0xeb POP
0xec PUSH1 0x40
0xee MLOAD
0xef DUP1
0xf0 SWAP2
0xf1 SUB
0xf2 SWAP1
0xf3 RETURN
---
0xda: JUMPDEST 
0xdb: V50 = 0x40
0xdd: V51 = M[0x40]
0xe0: V52 = ISZERO 0x0
0xe1: V53 = ISZERO 0x1
0xe2: V54 = ISZERO 0x0
0xe3: V55 = ISZERO 0x1
0xe5: M[V51] = 0x0
0xe6: V56 = 0x20
0xe8: V57 = ADD 0x20 V51
0xec: V58 = 0x40
0xee: V59 = M[0x40]
0xf1: V60 = SUB V57 V59
0xf3: RETURN V59 V60
---
Entry stack: [V10, 0x0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xf4
[0xf4:0xfa]
---
Predecessors: [0x4a]
Successors: [0xfb, 0xfc]
---
0xf4 JUMPDEST
0xf5 CALLVALUE
0xf6 ISZERO
0xf7 PUSH2 0xfc
0xfa JUMPI
---
0xf4: JUMPDEST 
0xf5: V61 = CALLVALUE
0xf6: V62 = ISZERO V61
0xf7: V63 = 0xfc
0xfa: JUMPI 0xfc V62
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xfb
[0xfb:0xfb]
---
Predecessors: [0xf4]
Successors: []
---
0xfb INVALID
---
0xfb: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xfc
[0xfc:0x103]
---
Predecessors: [0xf4]
Successors: [0x25c]
---
0xfc JUMPDEST
0xfd PUSH2 0x104
0x100 PUSH2 0x25c
0x103 JUMP
---
0xfc: JUMPDEST 
0xfd: V64 = 0x104
0x100: V65 = 0x25c
0x103: JUMP 0x25c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x104]
Exit stack: [V10, 0x104]

================================

Block 0x104
[0x104:0x105]
---
Predecessors: [0x2ee]
Successors: []
---
0x104 JUMPDEST
0x105 STOP
---
0x104: JUMPDEST 
0x105: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x106
[0x106:0x155]
---
Predecessors: [0x55]
Successors: [0x2f0]
---
0x106 JUMPDEST
0x107 PUSH2 0x156
0x10a PUSH1 0x4
0x10c DUP1
0x10d DUP1
0x10e CALLDATALOAD
0x10f SWAP1
0x110 PUSH1 0x20
0x112 ADD
0x113 SWAP1
0x114 DUP3
0x115 ADD
0x116 DUP1
0x117 CALLDATALOAD
0x118 SWAP1
0x119 PUSH1 0x20
0x11b ADD
0x11c SWAP1
0x11d DUP1
0x11e DUP1
0x11f PUSH1 0x1f
0x121 ADD
0x122 PUSH1 0x20
0x124 DUP1
0x125 SWAP2
0x126 DIV
0x127 MUL
0x128 PUSH1 0x20
0x12a ADD
0x12b PUSH1 0x40
0x12d MLOAD
0x12e SWAP1
0x12f DUP2
0x130 ADD
0x131 PUSH1 0x40
0x133 MSTORE
0x134 DUP1
0x135 SWAP4
0x136 SWAP3
0x137 SWAP2
0x138 SWAP1
0x139 DUP2
0x13a DUP2
0x13b MSTORE
0x13c PUSH1 0x20
0x13e ADD
0x13f DUP4
0x140 DUP4
0x141 DUP1
0x142 DUP3
0x143 DUP5
0x144 CALLDATACOPY
0x145 DUP3
0x146 ADD
0x147 SWAP2
0x148 POP
0x149 POP
0x14a POP
0x14b POP
0x14c POP
0x14d POP
0x14e SWAP2
0x14f SWAP1
0x150 POP
0x151 POP
0x152 PUSH2 0x2f0
0x155 JUMP
---
0x106: JUMPDEST 
0x107: V66 = 0x156
0x10a: V67 = 0x4
0x10e: V68 = CALLDATALOAD 0x4
0x110: V69 = 0x20
0x112: V70 = ADD 0x20 0x4
0x115: V71 = ADD 0x4 V68
0x117: V72 = CALLDATALOAD V71
0x119: V73 = 0x20
0x11b: V74 = ADD 0x20 V71
0x11f: V75 = 0x1f
0x121: V76 = ADD 0x1f V72
0x122: V77 = 0x20
0x126: V78 = DIV V76 0x20
0x127: V79 = MUL V78 0x20
0x128: V80 = 0x20
0x12a: V81 = ADD 0x20 V79
0x12b: V82 = 0x40
0x12d: V83 = M[0x40]
0x130: V84 = ADD V83 V81
0x131: V85 = 0x40
0x133: M[0x40] = V84
0x13b: M[V83] = V72
0x13c: V86 = 0x20
0x13e: V87 = ADD 0x20 V83
0x144: CALLDATACOPY V87 V74 V72
0x146: V88 = ADD V87 V72
0x152: V89 = 0x2f0
0x155: JUMP 0x2f0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x156, V83]
Exit stack: [V10, 0x156, V83]

================================

Block 0x156
[0x156:0x16b]
---
Predecessors: [0x3e0]
Successors: []
---
0x156 JUMPDEST
0x157 PUSH1 0x40
0x159 MLOAD
0x15a DUP1
0x15b DUP3
0x15c DUP2
0x15d MSTORE
0x15e PUSH1 0x20
0x160 ADD
0x161 SWAP2
0x162 POP
0x163 POP
0x164 PUSH1 0x40
0x166 MLOAD
0x167 DUP1
0x168 SWAP2
0x169 SUB
0x16a SWAP1
0x16b RETURN
---
0x156: JUMPDEST 
0x157: V90 = 0x40
0x159: V91 = M[0x40]
0x15d: M[V91] = V241
0x15e: V92 = 0x20
0x160: V93 = ADD 0x20 V91
0x164: V94 = 0x40
0x166: V95 = M[0x40]
0x169: V96 = SUB V93 V95
0x16b: RETURN V95 V96
---
Entry stack: [V10, V241]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x16c
[0x16c:0x172]
---
Predecessors: [0x60]
Successors: [0x173, 0x174]
---
0x16c JUMPDEST
0x16d CALLVALUE
0x16e ISZERO
0x16f PUSH2 0x174
0x172 JUMPI
---
0x16c: JUMPDEST 
0x16d: V97 = CALLVALUE
0x16e: V98 = ISZERO V97
0x16f: V99 = 0x174
0x172: JUMPI 0x174 V98
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x173
[0x173:0x173]
---
Predecessors: [0x16c]
Successors: []
---
0x173 INVALID
---
0x173: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x174
[0x174:0x17b]
---
Predecessors: [0x16c]
Successors: [0x3e5]
---
0x174 JUMPDEST
0x175 PUSH2 0x17c
0x178 PUSH2 0x3e5
0x17b JUMP
---
0x174: JUMPDEST 
0x175: V100 = 0x17c
0x178: V101 = 0x3e5
0x17b: JUMP 0x3e5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x17c]
Exit stack: [V10, 0x17c]

================================

Block 0x17c
[0x17c:0x191]
---
Predecessors: [0x3e5]
Successors: []
---
0x17c JUMPDEST
0x17d PUSH1 0x40
0x17f MLOAD
0x180 DUP1
0x181 DUP3
0x182 DUP2
0x183 MSTORE
0x184 PUSH1 0x20
0x186 ADD
0x187 SWAP2
0x188 POP
0x189 POP
0x18a PUSH1 0x40
0x18c MLOAD
0x18d DUP1
0x18e SWAP2
0x18f SUB
0x190 SWAP1
0x191 RETURN
---
0x17c: JUMPDEST 
0x17d: V102 = 0x40
0x17f: V103 = M[0x40]
0x183: M[V103] = V243
0x184: V104 = 0x20
0x186: V105 = ADD 0x20 V103
0x18a: V106 = 0x40
0x18c: V107 = M[0x40]
0x18f: V108 = SUB V105 V107
0x191: RETURN V107 V108
---
Entry stack: [V10, 0x17c, V243]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x17c]

================================

Block 0x192
[0x192:0x198]
---
Predecessors: [0x6b]
Successors: [0x199, 0x19a]
---
0x192 JUMPDEST
0x193 CALLVALUE
0x194 ISZERO
0x195 PUSH2 0x19a
0x198 JUMPI
---
0x192: JUMPDEST 
0x193: V109 = CALLVALUE
0x194: V110 = ISZERO V109
0x195: V111 = 0x19a
0x198: JUMPI 0x19a V110
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x199
[0x199:0x199]
---
Predecessors: [0x192]
Successors: []
---
0x199 INVALID
---
0x199: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x19a
[0x19a:0x1a1]
---
Predecessors: [0x192]
Successors: [0x3eb]
---
0x19a JUMPDEST
0x19b PUSH2 0x1a2
0x19e PUSH2 0x3eb
0x1a1 JUMP
---
0x19a: JUMPDEST 
0x19b: V112 = 0x1a2
0x19e: V113 = 0x3eb
0x1a1: JUMP 0x3eb
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1a2]
Exit stack: [V10, 0x1a2]

================================

Block 0x1a2
[0x1a2:0x1b7]
---
Predecessors: [0x3f3]
Successors: []
---
0x1a2 JUMPDEST
0x1a3 PUSH1 0x40
0x1a5 MLOAD
0x1a6 DUP1
0x1a7 DUP3
0x1a8 DUP2
0x1a9 MSTORE
0x1aa PUSH1 0x20
0x1ac ADD
0x1ad SWAP2
0x1ae POP
0x1af POP
0x1b0 PUSH1 0x40
0x1b2 MLOAD
0x1b3 DUP1
0x1b4 SWAP2
0x1b5 SUB
0x1b6 SWAP1
0x1b7 RETURN
---
0x1a2: JUMPDEST 
0x1a3: V114 = 0x40
0x1a5: V115 = M[0x40]
0x1a9: M[V115] = V246
0x1aa: V116 = 0x20
0x1ac: V117 = ADD 0x20 V115
0x1b0: V118 = 0x40
0x1b2: V119 = M[0x40]
0x1b5: V120 = SUB V117 V119
0x1b7: RETURN V119 V120
---
Entry stack: [V10, V246]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x1b8
[0x1b8:0x1dd]
---
Predecessors: [0x80]
Successors: [0x88]
---
0x1b8 JUMPDEST
0x1b9 PUSH1 0x0
0x1bb PUSH1 0x0
0x1bd SWAP1
0x1be SLOAD
0x1bf SWAP1
0x1c0 PUSH2 0x100
0x1c3 EXP
0x1c4 SWAP1
0x1c5 DIV
0x1c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1db AND
0x1dc DUP2
0x1dd JUMP
---
0x1b8: JUMPDEST 
0x1b9: V121 = 0x0
0x1bb: V122 = 0x0
0x1be: V123 = S[0x0]
0x1c0: V124 = 0x100
0x1c3: V125 = EXP 0x100 0x0
0x1c5: V126 = DIV V123 0x1
0x1c6: V127 = 0xffffffffffffffffffffffffffffffffffffffff
0x1db: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x1dd: JUMP 0x88
---
Entry stack: [V10, 0x88]
Stack pops: 1
Stack additions: [S0, V128]
Exit stack: [V10, 0x88, V128]

================================

Block 0x1de
[0x1de:0x257]
---
Predecessors: [0xd2]
Successors: [0x258]
---
0x1de JUMPDEST
0x1df PUSH1 0x0
0x1e1 PUSH1 0x0
0x1e3 ADDRESS
0x1e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f9 AND
0x1fa BALANCE
0x1fb SWAP1
0x1fc POP
0x1fd PUSH1 0x0
0x1ff PUSH1 0x0
0x201 SWAP1
0x202 SLOAD
0x203 SWAP1
0x204 PUSH2 0x100
0x207 EXP
0x208 SWAP1
0x209 DIV
0x20a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21f AND
0x220 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x235 AND
0x236 PUSH2 0x8fc
0x239 DUP3
0x23a SWAP1
0x23b DUP2
0x23c ISZERO
0x23d MUL
0x23e SWAP1
0x23f PUSH1 0x40
0x241 MLOAD
0x242 DUP1
0x243 SWAP1
0x244 POP
0x245 PUSH1 0x0
0x247 PUSH1 0x40
0x249 MLOAD
0x24a DUP1
0x24b DUP4
0x24c SUB
0x24d DUP2
0x24e DUP6
0x24f DUP9
0x250 DUP9
0x251 CALL
0x252 SWAP4
0x253 POP
0x254 POP
0x255 POP
0x256 POP
0x257 POP
---
0x1de: JUMPDEST 
0x1df: V129 = 0x0
0x1e1: V130 = 0x0
0x1e3: V131 = ADDRESS
0x1e4: V132 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f9: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff V131
0x1fa: V134 = BALANCE V133
0x1fd: V135 = 0x0
0x1ff: V136 = 0x0
0x202: V137 = S[0x0]
0x204: V138 = 0x100
0x207: V139 = EXP 0x100 0x0
0x209: V140 = DIV V137 0x1
0x20a: V141 = 0xffffffffffffffffffffffffffffffffffffffff
0x21f: V142 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x220: V143 = 0xffffffffffffffffffffffffffffffffffffffff
0x235: V144 = AND 0xffffffffffffffffffffffffffffffffffffffff V142
0x236: V145 = 0x8fc
0x23c: V146 = ISZERO V134
0x23d: V147 = MUL V146 0x8fc
0x23f: V148 = 0x40
0x241: V149 = M[0x40]
0x245: V150 = 0x0
0x247: V151 = 0x40
0x249: V152 = M[0x40]
0x24c: V153 = SUB V149 V152
0x251: V154 = CALL V147 V144 V134 V152 V153 V152 0x0
---
Entry stack: [V10, 0xda]
Stack pops: 0
Stack additions: [0x0, V134]
Exit stack: [V10, 0xda, 0x0, V134]

================================

Block 0x258
[0x258:0x25b]
---
Predecessors: [0x1de]
Successors: [0xda]
---
0x258 JUMPDEST
0x259 POP
0x25a SWAP1
0x25b JUMP
---
0x258: JUMPDEST 
0x25b: JUMP 0xda
---
Entry stack: [V10, 0xda, 0x0, V134]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V10, 0x0]

================================

Block 0x25c
[0x25c:0x2b2]
---
Predecessors: [0xfc]
Successors: [0x2b3, 0x2ed]
---
0x25c JUMPDEST
0x25d PUSH1 0x0
0x25f PUSH1 0x0
0x261 SWAP1
0x262 SLOAD
0x263 SWAP1
0x264 PUSH2 0x100
0x267 EXP
0x268 SWAP1
0x269 DIV
0x26a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27f AND
0x280 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x295 AND
0x296 CALLER
0x297 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ac AND
0x2ad EQ
0x2ae ISZERO
0x2af PUSH2 0x2ed
0x2b2 JUMPI
---
0x25c: JUMPDEST 
0x25d: V155 = 0x0
0x25f: V156 = 0x0
0x262: V157 = S[0x0]
0x264: V158 = 0x100
0x267: V159 = EXP 0x100 0x0
0x269: V160 = DIV V157 0x1
0x26a: V161 = 0xffffffffffffffffffffffffffffffffffffffff
0x27f: V162 = AND 0xffffffffffffffffffffffffffffffffffffffff V160
0x280: V163 = 0xffffffffffffffffffffffffffffffffffffffff
0x295: V164 = AND 0xffffffffffffffffffffffffffffffffffffffff V162
0x296: V165 = CALLER
0x297: V166 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ac: V167 = AND 0xffffffffffffffffffffffffffffffffffffffff V165
0x2ad: V168 = EQ V167 V164
0x2ae: V169 = ISZERO V168
0x2af: V170 = 0x2ed
0x2b2: JUMPI 0x2ed V169
---
Entry stack: [V10, 0x104]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x104]

================================

Block 0x2b3
[0x2b3:0x2ec]
---
Predecessors: [0x25c]
Successors: []
---
0x2b3 PUSH1 0x0
0x2b5 PUSH1 0x0
0x2b7 SWAP1
0x2b8 SLOAD
0x2b9 SWAP1
0x2ba PUSH2 0x100
0x2bd EXP
0x2be SWAP1
0x2bf DIV
0x2c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d5 AND
0x2d6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2eb AND
0x2ec SELFDESTRUCT
---
0x2b3: V171 = 0x0
0x2b5: V172 = 0x0
0x2b8: V173 = S[0x0]
0x2ba: V174 = 0x100
0x2bd: V175 = EXP 0x100 0x0
0x2bf: V176 = DIV V173 0x1
0x2c0: V177 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d5: V178 = AND 0xffffffffffffffffffffffffffffffffffffffff V176
0x2d6: V179 = 0xffffffffffffffffffffffffffffffffffffffff
0x2eb: V180 = AND 0xffffffffffffffffffffffffffffffffffffffff V178
0x2ec: SELFDESTRUCT V180
---
Entry stack: [V10, 0x104]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x104]

================================

Block 0x2ed
[0x2ed:0x2ed]
---
Predecessors: [0x25c]
Successors: [0x2ee]
---
0x2ed JUMPDEST
---
0x2ed: JUMPDEST 
---
Entry stack: [V10, 0x104]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x104]

================================

Block 0x2ee
[0x2ee:0x2ef]
---
Predecessors: [0x2ed]
Successors: [0x104]
---
0x2ee JUMPDEST
0x2ef JUMP
---
0x2ee: JUMPDEST 
0x2ef: JUMP 0x104
---
Entry stack: [V10, 0x104]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x2f0
[0x2f0:0x37b]
---
Predecessors: [0x106]
Successors: [0x37c, 0x3a0]
---
0x2f0 JUMPDEST
0x2f1 PUSH1 0x0
0x2f3 PUSH1 0x64
0x2f5 CALLVALUE
0x2f6 MUL
0x2f7 PUSH1 0x1
0x2f9 DUP2
0x2fa SWAP1
0x2fb SSTORE
0x2fc POP
0x2fd PUSH32 0x8b286a9d9b4898ba2256953026b13d2b6a757d5903ac77c5ad4c23c4f6056682
0x31e CALLER
0x31f DUP4
0x320 PUSH1 0x40
0x322 MLOAD
0x323 DUP1
0x324 DUP4
0x325 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x33a AND
0x33b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x350 AND
0x351 DUP2
0x352 MSTORE
0x353 PUSH1 0x20
0x355 ADD
0x356 DUP1
0x357 PUSH1 0x20
0x359 ADD
0x35a DUP3
0x35b DUP2
0x35c SUB
0x35d DUP3
0x35e MSTORE
0x35f DUP4
0x360 DUP2
0x361 DUP2
0x362 MLOAD
0x363 DUP2
0x364 MSTORE
0x365 PUSH1 0x20
0x367 ADD
0x368 SWAP2
0x369 POP
0x36a DUP1
0x36b MLOAD
0x36c SWAP1
0x36d PUSH1 0x20
0x36f ADD
0x370 SWAP1
0x371 DUP1
0x372 DUP4
0x373 DUP4
0x374 PUSH1 0x0
0x376 DUP4
0x377 EQ
0x378 PUSH2 0x3a0
0x37b JUMPI
---
0x2f0: JUMPDEST 
0x2f1: V181 = 0x0
0x2f3: V182 = 0x64
0x2f5: V183 = CALLVALUE
0x2f6: V184 = MUL V183 0x64
0x2f7: V185 = 0x1
0x2fb: S[0x1] = V184
0x2fd: V186 = 0x8b286a9d9b4898ba2256953026b13d2b6a757d5903ac77c5ad4c23c4f6056682
0x31e: V187 = CALLER
0x320: V188 = 0x40
0x322: V189 = M[0x40]
0x325: V190 = 0xffffffffffffffffffffffffffffffffffffffff
0x33a: V191 = AND 0xffffffffffffffffffffffffffffffffffffffff V187
0x33b: V192 = 0xffffffffffffffffffffffffffffffffffffffff
0x350: V193 = AND 0xffffffffffffffffffffffffffffffffffffffff V191
0x352: M[V189] = V193
0x353: V194 = 0x20
0x355: V195 = ADD 0x20 V189
0x357: V196 = 0x20
0x359: V197 = ADD 0x20 V195
0x35c: V198 = SUB V197 V189
0x35e: M[V195] = V198
0x362: V199 = M[V83]
0x364: M[V197] = V199
0x365: V200 = 0x20
0x367: V201 = ADD 0x20 V197
0x36b: V202 = M[V83]
0x36d: V203 = 0x20
0x36f: V204 = ADD 0x20 V83
0x374: V205 = 0x0
0x377: V206 = EQ V202 0x0
0x378: V207 = 0x3a0
0x37b: JUMPI 0x3a0 V206
---
Entry stack: [V10, 0x156, V83]
Stack pops: 1
Stack additions: [S0, 0x0, 0x8b286a9d9b4898ba2256953026b13d2b6a757d5903ac77c5ad4c23c4f6056682, V187, S0, V189, V195, V201, V204, V202, V202, V201, V204]
Exit stack: [V10, 0x156, V83, 0x0, 0x8b286a9d9b4898ba2256953026b13d2b6a757d5903ac77c5ad4c23c4f6056682, V187, V83, V189, V195, V201, V204, V202, V202, V201, V204]

================================

Block 0x37c
[0x37c:0x389]
---
Predecessors: [0x2f0, 0x38a]
Successors: [0x38a, 0x3a0]
---
0x37c JUMPDEST
0x37d DUP1
0x37e MLOAD
0x37f DUP3
0x380 MSTORE
0x381 PUSH1 0x20
0x383 DUP4
0x384 GT
0x385 ISZERO
0x386 PUSH2 0x3a0
0x389 JUMPI
---
0x37c: JUMPDEST 
0x37e: V208 = M[S0]
0x380: M[S1] = V208
0x381: V209 = 0x20
0x384: V210 = GT S2 0x20
0x385: V211 = ISZERO V210
0x386: V212 = 0x3a0
0x389: JUMPI 0x3a0 V211
---
Entry stack: [V10, 0x156, V83, 0x0, 0x8b286a9d9b4898ba2256953026b13d2b6a757d5903ac77c5ad4c23c4f6056682, V187, V83, V189, V195, V201, V204, V202, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x156, V83, 0x0, 0x8b286a9d9b4898ba2256953026b13d2b6a757d5903ac77c5ad4c23c4f6056682, V187, V83, V189, V195, V201, V204, V202, S2, S1, S0]

================================

Block 0x38a
[0x38a:0x39f]
---
Predecessors: [0x37c]
Successors: [0x37c]
---
0x38a PUSH1 0x20
0x38c DUP3
0x38d ADD
0x38e SWAP2
0x38f POP
0x390 PUSH1 0x20
0x392 DUP2
0x393 ADD
0x394 SWAP1
0x395 POP
0x396 PUSH1 0x20
0x398 DUP4
0x399 SUB
0x39a SWAP3
0x39b POP
0x39c PUSH2 0x37c
0x39f JUMP
---
0x38a: V213 = 0x20
0x38d: V214 = ADD S1 0x20
0x390: V215 = 0x20
0x393: V216 = ADD S0 0x20
0x396: V217 = 0x20
0x399: V218 = SUB S2 0x20
0x39c: V219 = 0x37c
0x39f: JUMP 0x37c
---
Entry stack: [V10, 0x156, V83, 0x0, 0x8b286a9d9b4898ba2256953026b13d2b6a757d5903ac77c5ad4c23c4f6056682, V187, V83, V189, V195, V201, V204, V202, S2, S1, S0]
Stack pops: 3
Stack additions: [V218, V214, V216]
Exit stack: [V10, 0x156, V83, 0x0, 0x8b286a9d9b4898ba2256953026b13d2b6a757d5903ac77c5ad4c23c4f6056682, V187, V83, V189, V195, V201, V204, V202, V218, V214, V216]

================================

Block 0x3a0
[0x3a0:0x3b2]
---
Predecessors: [0x2f0, 0x37c]
Successors: [0x3b3, 0x3cc]
---
0x3a0 JUMPDEST
0x3a1 POP
0x3a2 POP
0x3a3 POP
0x3a4 SWAP1
0x3a5 POP
0x3a6 SWAP1
0x3a7 DUP2
0x3a8 ADD
0x3a9 SWAP1
0x3aa PUSH1 0x1f
0x3ac AND
0x3ad DUP1
0x3ae ISZERO
0x3af PUSH2 0x3cc
0x3b2 JUMPI
---
0x3a0: JUMPDEST 
0x3a8: V220 = ADD V202 V201
0x3aa: V221 = 0x1f
0x3ac: V222 = AND 0x1f V202
0x3ae: V223 = ISZERO V222
0x3af: V224 = 0x3cc
0x3b2: JUMPI 0x3cc V223
---
Entry stack: [V10, 0x156, V83, 0x0, 0x8b286a9d9b4898ba2256953026b13d2b6a757d5903ac77c5ad4c23c4f6056682, V187, V83, V189, V195, V201, V204, V202, S2, S1, S0]
Stack pops: 6
Stack additions: [V220, V222]
Exit stack: [V10, 0x156, V83, 0x0, 0x8b286a9d9b4898ba2256953026b13d2b6a757d5903ac77c5ad4c23c4f6056682, V187, V83, V189, V195, V220, V222]

================================

Block 0x3b3
[0x3b3:0x3cb]
---
Predecessors: [0x3a0]
Successors: [0x3cc]
---
0x3b3 DUP1
0x3b4 DUP3
0x3b5 SUB
0x3b6 DUP1
0x3b7 MLOAD
0x3b8 PUSH1 0x1
0x3ba DUP4
0x3bb PUSH1 0x20
0x3bd SUB
0x3be PUSH2 0x100
0x3c1 EXP
0x3c2 SUB
0x3c3 NOT
0x3c4 AND
0x3c5 DUP2
0x3c6 MSTORE
0x3c7 PUSH1 0x20
0x3c9 ADD
0x3ca SWAP2
0x3cb POP
---
0x3b5: V225 = SUB V220 V222
0x3b7: V226 = M[V225]
0x3b8: V227 = 0x1
0x3bb: V228 = 0x20
0x3bd: V229 = SUB 0x20 V222
0x3be: V230 = 0x100
0x3c1: V231 = EXP 0x100 V229
0x3c2: V232 = SUB V231 0x1
0x3c3: V233 = NOT V232
0x3c4: V234 = AND V233 V226
0x3c6: M[V225] = V234
0x3c7: V235 = 0x20
0x3c9: V236 = ADD 0x20 V225
---
Entry stack: [V10, 0x156, V83, 0x0, 0x8b286a9d9b4898ba2256953026b13d2b6a757d5903ac77c5ad4c23c4f6056682, V187, V83, V189, V195, V220, V222]
Stack pops: 2
Stack additions: [V236, S0]
Exit stack: [V10, 0x156, V83, 0x0, 0x8b286a9d9b4898ba2256953026b13d2b6a757d5903ac77c5ad4c23c4f6056682, V187, V83, V189, V195, V236, V222]

================================

Block 0x3cc
[0x3cc:0x3df]
---
Predecessors: [0x3a0, 0x3b3]
Successors: [0x3e0]
---
0x3cc JUMPDEST
0x3cd POP
0x3ce SWAP4
0x3cf POP
0x3d0 POP
0x3d1 POP
0x3d2 POP
0x3d3 PUSH1 0x40
0x3d5 MLOAD
0x3d6 DUP1
0x3d7 SWAP2
0x3d8 SUB
0x3d9 SWAP1
0x3da LOG1
0x3db PUSH1 0x1
0x3dd SLOAD
0x3de SWAP1
0x3df POP
---
0x3cc: JUMPDEST 
0x3d3: V237 = 0x40
0x3d5: V238 = M[0x40]
0x3d8: V239 = SUB S1 V238
0x3da: LOG V238 V239 0x8b286a9d9b4898ba2256953026b13d2b6a757d5903ac77c5ad4c23c4f6056682
0x3db: V240 = 0x1
0x3dd: V241 = S[0x1]
---
Entry stack: [V10, 0x156, V83, 0x0, 0x8b286a9d9b4898ba2256953026b13d2b6a757d5903ac77c5ad4c23c4f6056682, V187, V83, V189, V195, S1, V222]
Stack pops: 8
Stack additions: [V241]
Exit stack: [V10, 0x156, V83, V241]

================================

Block 0x3e0
[0x3e0:0x3e4]
---
Predecessors: [0x3cc]
Successors: [0x156]
---
0x3e0 JUMPDEST
0x3e1 SWAP2
0x3e2 SWAP1
0x3e3 POP
0x3e4 JUMP
---
0x3e0: JUMPDEST 
0x3e4: JUMP 0x156
---
Entry stack: [V10, 0x156, V83, V241]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, V241]

================================

Block 0x3e5
[0x3e5:0x3ea]
---
Predecessors: [0x174]
Successors: [0x17c]
---
0x3e5 JUMPDEST
0x3e6 PUSH1 0x1
0x3e8 SLOAD
0x3e9 DUP2
0x3ea JUMP
---
0x3e5: JUMPDEST 
0x3e6: V242 = 0x1
0x3e8: V243 = S[0x1]
0x3ea: JUMP 0x17c
---
Entry stack: [V10, 0x17c]
Stack pops: 1
Stack additions: [S0, V243]
Exit stack: [V10, 0x17c, V243]

================================

Block 0x3eb
[0x3eb:0x3f2]
---
Predecessors: [0x19a]
Successors: [0x3f3]
---
0x3eb JUMPDEST
0x3ec PUSH1 0x0
0x3ee PUSH1 0x1
0x3f0 SLOAD
0x3f1 SWAP1
0x3f2 POP
---
0x3eb: JUMPDEST 
0x3ec: V244 = 0x0
0x3ee: V245 = 0x1
0x3f0: V246 = S[0x1]
---
Entry stack: [V10, 0x1a2]
Stack pops: 0
Stack additions: [V246]
Exit stack: [V10, 0x1a2, V246]

================================

Block 0x3f3
[0x3f3:0x3f5]
---
Predecessors: [0x3eb]
Successors: [0x1a2]
---
0x3f3 JUMPDEST
0x3f4 SWAP1
0x3f5 JUMP
---
0x3f3: JUMPDEST 
0x3f5: JUMP 0x1a2
---
Entry stack: [V10, 0x1a2, V246]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, V246]

================================

Block 0x3f6
[0x3f6:0x430]
---
Predecessors: []
Successors: []
---
0x3f6 STOP
0x3f7 LOG1
0x3f8 PUSH6 0x627a7a723058
0x3ff SHA3
0x400 MISSING 0xd4
0x401 MISSING 0xd2
0x402 CALLDATASIZE
0x403 MISSING 0xb2
0x404 MISSING 0xcc
0x405 PUSH4 0x253f91d6
0x40a MUL
0x40b MISSING 0xab
0x40c MISSING 0x26
0x40d CALLVALUE
0x40e DUP10
0x40f MISSING 0x26
0x410 MISSING 0x2e
0x411 MISSING 0x23
0x412 MISSING 0xca
0x413 PUSH29 0x7aa370a6915d297d5781968f0029
---
0x3f6: STOP 
0x3f7: LOG S0 S1 S2
0x3f8: V247 = 0x627a7a723058
0x3ff: V248 = SHA3 0x627a7a723058 S3
0x400: MISSING 0xd4
0x401: MISSING 0xd2
0x402: V249 = CALLDATASIZE
0x403: MISSING 0xb2
0x404: MISSING 0xcc
0x405: V250 = 0x253f91d6
0x40a: V251 = MUL 0x253f91d6 S0
0x40b: MISSING 0xab
0x40c: MISSING 0x26
0x40d: V252 = CALLVALUE
0x40f: MISSING 0x26
0x410: MISSING 0x2e
0x411: MISSING 0x23
0x412: MISSING 0xca
0x413: V253 = 0x7aa370a6915d297d5781968f0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V248, V249, V251, S8, V252, S0, S1, S2, S3, S4, S5, S6, S7, S8, 0x7aa370a6915d297d5781968f0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x3429e35c
Entry block: 0x78
Exit block: 0x88
Body: 0x78, 0x7f, 0x80, 0x88, 0x1b8

Function 1:
Public function signature: 0x3ccfd60b
Entry block: 0xca
Exit block: 0xda
Body: 0xca, 0xd1, 0xd2, 0xda, 0x1de, 0x258

Function 2:
Public function signature: 0x41c0e1b5
Entry block: 0xf4
Exit block: 0x104
Body: 0xf4, 0xfb, 0xfc, 0x104, 0x25c, 0x2b3, 0x2ed, 0x2ee

Function 3:
Public function signature: 0xd60f8f4d
Entry block: 0x106
Exit block: 0x156
Body: 0x106, 0x156, 0x2f0, 0x37c, 0x38a, 0x3a0, 0x3b3, 0x3cc, 0x3e0

Function 4:
Public function signature: 0xddca3f43
Entry block: 0x16c
Exit block: 0x17c
Body: 0x16c, 0x173, 0x174, 0x17c, 0x3e5

Function 5:
Public function signature: 0xe273602e
Entry block: 0x192
Exit block: 0x1a2
Body: 0x192, 0x199, 0x19a, 0x1a2, 0x3eb, 0x3f3

Function 6:
Public fallback function
Entry block: 0x76
Exit block: 0x76
Body: 0x76

