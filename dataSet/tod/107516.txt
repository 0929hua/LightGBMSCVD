Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x30]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x30
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x30
0xa: JUMPI 0x30 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x84]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x41c0e1b5
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x84
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x41c0e1b5
0x20: V14 = EQ V12 0x41c0e1b5
0x21: V15 = 0x84
0x24: JUMPI 0x84 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x96]
---
0x25 DUP1
0x26 PUSH4 0xe5225381
0x2b EQ
0x2c PUSH2 0x96
0x2f JUMPI
---
0x26: V16 = 0xe5225381
0x2b: V17 = EQ 0xe5225381 V12
0x2c: V18 = 0x96
0x2f: JUMPI 0x96 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x33]
---
Predecessors: [0x0, 0x25]
Successors: [0x34]
---
0x30 JUMPDEST
0x31 PUSH2 0x82
---
0x30: JUMPDEST 
0x31: V19 = 0x82
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x82]
Exit stack: [V12, 0x82]

================================

Block 0x34
[0x34:0x3d]
---
Predecessors: [0x30]
Successors: [0x3e, 0x7f]
---
0x34 JUMPDEST
0x35 PUSH1 0x0
0x37 CALLVALUE
0x38 GT
0x39 ISZERO
0x3a PUSH2 0x7f
0x3d JUMPI
---
0x34: JUMPDEST 
0x35: V20 = 0x0
0x37: V21 = CALLVALUE
0x38: V22 = GT V21 0x0
0x39: V23 = ISZERO V22
0x3a: V24 = 0x7f
0x3d: JUMPI 0x7f V23
---
Entry stack: [V12, 0x82]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x82]

================================

Block 0x3e
[0x3e:0x7e]
---
Predecessors: [0x34]
Successors: [0x7f]
---
0x3e PUSH1 0x40
0x40 DUP1
0x41 MLOAD
0x42 CALLVALUE
0x43 DUP2
0x44 MSTORE
0x45 SWAP1
0x46 MLOAD
0x47 PUSH1 0x58
0x49 SWAP2
0x4a PUSH1 0x1
0x4c PUSH1 0xa0
0x4e PUSH1 0x2
0x50 EXP
0x51 SUB
0x52 CALLER
0x53 AND
0x54 SWAP2
0x55 PUSH32 0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15
0x76 SWAP2
0x77 DUP2
0x78 SWAP1
0x79 SUB
0x7a PUSH1 0x20
0x7c ADD
0x7d SWAP1
0x7e LOG3
---
0x3e: V25 = 0x40
0x41: V26 = M[0x40]
0x42: V27 = CALLVALUE
0x44: M[V26] = V27
0x46: V28 = M[0x40]
0x47: V29 = 0x58
0x4a: V30 = 0x1
0x4c: V31 = 0xa0
0x4e: V32 = 0x2
0x50: V33 = EXP 0x2 0xa0
0x51: V34 = SUB 0x10000000000000000000000000000000000000000 0x1
0x52: V35 = CALLER
0x53: V36 = AND V35 0xffffffffffffffffffffffffffffffffffffffff
0x55: V37 = 0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15
0x79: V38 = SUB V26 V28
0x7a: V39 = 0x20
0x7c: V40 = ADD 0x20 V38
0x7e: LOG V28 V40 0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15 V36 0x58
---
Entry stack: [V12, 0x82]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x82]

================================

Block 0x7f
[0x7f:0x7f]
---
Predecessors: [0x34, 0x3e, 0xa8, 0xd0]
Successors: [0x80]
---
0x7f JUMPDEST
---
0x7f: JUMPDEST 
---
Entry stack: [V12, 0x82]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x82]

================================

Block 0x80
[0x80:0x81]
---
Predecessors: [0x7f]
Successors: [0x82]
---
0x80 JUMPDEST
0x81 JUMP
---
0x80: JUMPDEST 
0x81: JUMP 0x82
---
Entry stack: [V12, 0x82]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x82
[0x82:0x83]
---
Predecessors: [0x80, 0x117]
Successors: []
---
0x82 JUMPDEST
0x83 STOP
---
0x82: JUMPDEST 
0x83: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x84
[0x84:0x8a]
---
Predecessors: [0xb]
Successors: [0x8b, 0x8c]
---
0x84 JUMPDEST
0x85 CALLVALUE
0x86 ISZERO
0x87 PUSH2 0x8c
0x8a JUMPI
---
0x84: JUMPDEST 
0x85: V41 = CALLVALUE
0x86: V42 = ISZERO V41
0x87: V43 = 0x8c
0x8a: JUMPI 0x8c V42
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8b
[0x8b:0x8b]
---
Predecessors: [0x84]
Successors: []
---
0x8b INVALID
---
0x8b: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8c
[0x8c:0x93]
---
Predecessors: [0x84]
Successors: [0xa8]
---
0x8c JUMPDEST
0x8d PUSH2 0x82
0x90 PUSH2 0xa8
0x93 JUMP
---
0x8c: JUMPDEST 
0x8d: V44 = 0x82
0x90: V45 = 0xa8
0x93: JUMP 0xa8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x82]
Exit stack: [V12, 0x82]

================================

Block 0x94
[0x94:0x95]
---
Predecessors: []
Successors: []
---
0x94 JUMPDEST
0x95 STOP
---
0x94: JUMPDEST 
0x95: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x96
[0x96:0x9c]
---
Predecessors: [0x25]
Successors: [0x9d, 0x9e]
---
0x96 JUMPDEST
0x97 CALLVALUE
0x98 ISZERO
0x99 PUSH2 0x9e
0x9c JUMPI
---
0x96: JUMPDEST 
0x97: V46 = CALLVALUE
0x98: V47 = ISZERO V46
0x99: V48 = 0x9e
0x9c: JUMPI 0x9e V47
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9d
[0x9d:0x9d]
---
Predecessors: [0x96]
Successors: []
---
0x9d INVALID
---
0x9d: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa5]
---
Predecessors: [0x96]
Successors: [0xd0]
---
0x9e JUMPDEST
0x9f PUSH2 0x82
0xa2 PUSH2 0xd0
0xa5 JUMP
---
0x9e: JUMPDEST 
0x9f: V49 = 0x82
0xa2: V50 = 0xd0
0xa5: JUMP 0xd0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x82]
Exit stack: [V12, 0x82]

================================

Block 0xa6
[0xa6:0xa7]
---
Predecessors: []
Successors: []
---
0xa6 JUMPDEST
0xa7 STOP
---
0xa6: JUMPDEST 
0xa7: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa8
[0xa8:0xbf]
---
Predecessors: [0x8c]
Successors: [0x7f, 0xc0]
---
0xa8 JUMPDEST
0xa9 PUSH1 0x0
0xab SLOAD
0xac CALLER
0xad PUSH1 0x1
0xaf PUSH1 0xa0
0xb1 PUSH1 0x2
0xb3 EXP
0xb4 SUB
0xb5 SWAP1
0xb6 DUP2
0xb7 AND
0xb8 SWAP2
0xb9 AND
0xba EQ
0xbb ISZERO
0xbc PUSH2 0x7f
0xbf JUMPI
---
0xa8: JUMPDEST 
0xa9: V51 = 0x0
0xab: V52 = S[0x0]
0xac: V53 = CALLER
0xad: V54 = 0x1
0xaf: V55 = 0xa0
0xb1: V56 = 0x2
0xb3: V57 = EXP 0x2 0xa0
0xb4: V58 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb7: V59 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0xb9: V60 = AND V52 0xffffffffffffffffffffffffffffffffffffffff
0xba: V61 = EQ V60 V59
0xbb: V62 = ISZERO V61
0xbc: V63 = 0x7f
0xbf: JUMPI 0x7f V62
---
Entry stack: [V12, 0x82]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x82]

================================

Block 0xc0
[0xc0:0xcc]
---
Predecessors: [0xa8]
Successors: []
---
0xc0 PUSH1 0x0
0xc2 SLOAD
0xc3 PUSH1 0x1
0xc5 PUSH1 0xa0
0xc7 PUSH1 0x2
0xc9 EXP
0xca SUB
0xcb AND
0xcc SELFDESTRUCT
---
0xc0: V64 = 0x0
0xc2: V65 = S[0x0]
0xc3: V66 = 0x1
0xc5: V67 = 0xa0
0xc7: V68 = 0x2
0xc9: V69 = EXP 0x2 0xa0
0xca: V70 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcb: V71 = AND 0xffffffffffffffffffffffffffffffffffffffff V65
0xcc: SELFDESTRUCT V71
---
Entry stack: [V12, 0x82]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x82]

================================

Block 0xcd
[0xcd:0xcd]
---
Predecessors: []
Successors: [0xce]
---
0xcd JUMPDEST
---
0xcd: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xce
[0xce:0xcf]
---
Predecessors: [0xcd]
Successors: []
Has unresolved jump.
---
0xce JUMPDEST
0xcf JUMP
---
0xce: JUMPDEST 
0xcf: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xd0
[0xd0:0xe7]
---
Predecessors: [0x9e]
Successors: [0x7f, 0xe8]
---
0xd0 JUMPDEST
0xd1 PUSH1 0x0
0xd3 SLOAD
0xd4 CALLER
0xd5 PUSH1 0x1
0xd7 PUSH1 0xa0
0xd9 PUSH1 0x2
0xdb EXP
0xdc SUB
0xdd SWAP1
0xde DUP2
0xdf AND
0xe0 SWAP2
0xe1 AND
0xe2 EQ
0xe3 ISZERO
0xe4 PUSH2 0x7f
0xe7 JUMPI
---
0xd0: JUMPDEST 
0xd1: V72 = 0x0
0xd3: V73 = S[0x0]
0xd4: V74 = CALLER
0xd5: V75 = 0x1
0xd7: V76 = 0xa0
0xd9: V77 = 0x2
0xdb: V78 = EXP 0x2 0xa0
0xdc: V79 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdf: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V74
0xe1: V81 = AND V73 0xffffffffffffffffffffffffffffffffffffffff
0xe2: V82 = EQ V81 V80
0xe3: V83 = ISZERO V82
0xe4: V84 = 0x7f
0xe7: JUMPI 0x7f V83
---
Entry stack: [V12, 0x82]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x82]

================================

Block 0xe8
[0xe8:0x115]
---
Predecessors: [0xd0]
Successors: [0x116]
---
0xe8 PUSH1 0x0
0xea DUP1
0xeb SLOAD
0xec PUSH1 0x40
0xee MLOAD
0xef PUSH1 0x1
0xf1 PUSH1 0xa0
0xf3 PUSH1 0x2
0xf5 EXP
0xf6 SUB
0xf7 SWAP2
0xf8 DUP3
0xf9 AND
0xfa SWAP3
0xfb ADDRESS
0xfc SWAP1
0xfd SWAP3
0xfe AND
0xff BALANCE
0x100 DUP1
0x101 ISZERO
0x102 PUSH2 0x8fc
0x105 MUL
0x106 SWAP3
0x107 SWAP1
0x108 SWAP2
0x109 SWAP1
0x10a DUP2
0x10b DUP2
0x10c DUP2
0x10d DUP6
0x10e DUP9
0x10f DUP9
0x110 CALL
0x111 POP
0x112 POP
0x113 POP
0x114 POP
0x115 POP
---
0xe8: V85 = 0x0
0xeb: V86 = S[0x0]
0xec: V87 = 0x40
0xee: V88 = M[0x40]
0xef: V89 = 0x1
0xf1: V90 = 0xa0
0xf3: V91 = 0x2
0xf5: V92 = EXP 0x2 0xa0
0xf6: V93 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf9: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V86
0xfb: V95 = ADDRESS
0xfe: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0xff: V97 = BALANCE V96
0x101: V98 = ISZERO V97
0x102: V99 = 0x8fc
0x105: V100 = MUL 0x8fc V98
0x110: V101 = CALL V100 V94 V97 V88 0x0 V88 0x0
---
Entry stack: [V12, 0x82]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x82]

================================

Block 0x116
[0x116:0x116]
---
Predecessors: [0xe8]
Successors: [0x117]
---
0x116 JUMPDEST
---
0x116: JUMPDEST 
---
Entry stack: [V12, 0x82]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x82]

================================

Block 0x117
[0x117:0x118]
---
Predecessors: [0x116]
Successors: [0x82]
---
0x117 JUMPDEST
0x118 JUMP
---
0x117: JUMPDEST 
0x118: JUMP 0x82
---
Entry stack: [V12, 0x82]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x119
[0x119:0x15f]
---
Predecessors: []
Successors: []
---
0x119 STOP
0x11a LOG1
0x11b PUSH6 0x627a7a723058
0x122 SHA3
0x123 MISSING 0xce
0x124 LOG2
0x125 PUSH1 0xf7
0x127 MISSING 0xd3
0x128 MOD
0x129 MISSING 0xa6
0x12a EXP
0x12b DUP16
0x12c MISSING 0xe0
0x12d MISSING 0xa9
0x12e MISSING 0x4a
0x12f ADDMOD
0x130 DUP11
0x131 MISSING 0xe0
0x132 JUMP
0x133 DELEGATECALL
0x134 SWAP2
0x135 MISSING 0xfc
0x136 CODECOPY
0x137 MISSING 0xad
0x138 SIGNEXTEND
0x139 CALLDATACOPY
0x13a MISSING 0x29
0x13b MISSING 0xa8
0x13c JUMPDEST
0x13d ISZERO
0x13e CALLER
0x13f MISSING 0x5d
0x140 COINBASE
0x141 LOG0
0x142 PUSH29 0x29
---
0x119: STOP 
0x11a: LOG S0 S1 S2
0x11b: V102 = 0x627a7a723058
0x122: V103 = SHA3 0x627a7a723058 S3
0x123: MISSING 0xce
0x124: LOG S0 S1 S2 S3
0x125: V104 = 0xf7
0x127: MISSING 0xd3
0x128: V105 = MOD S0 S1
0x129: MISSING 0xa6
0x12a: V106 = EXP S0 S1
0x12c: MISSING 0xe0
0x12d: MISSING 0xa9
0x12e: MISSING 0x4a
0x12f: V107 = ADDMOD S0 S1 S2
0x131: MISSING 0xe0
0x132: JUMP S0
0x133: V108 = DELEGATECALL S0 S1 S2 S3 S4 S5
0x135: MISSING 0xfc
0x136: CODECOPY S0 S1 S2
0x137: MISSING 0xad
0x138: V109 = SIGNEXTEND S0 S1
0x139: CALLDATACOPY V109 S2 S3
0x13a: MISSING 0x29
0x13b: MISSING 0xa8
0x13c: JUMPDEST 
0x13d: V110 = ISZERO S0
0x13e: V111 = CALLER
0x13f: MISSING 0x5d
0x140: V112 = COINBASE
0x141: LOG V112 S0
0x142: V113 = 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V103, 0xf7, V105, S16, V106, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S12, V107, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S7, S6, V108, V111, V110, 0x29]
Exit stack: []

================================

Function 0:
Public function signature: 0x41c0e1b5
Entry block: 0x84
Exit block: 0x82
Body: 0x7f, 0x80, 0x82, 0x84, 0x8b, 0x8c, 0xa8, 0xc0

Function 1:
Public function signature: 0xe5225381
Entry block: 0x96
Exit block: 0x82
Body: 0x7f, 0x80, 0x82, 0x96, 0x9d, 0x9e, 0xd0, 0xe8, 0x116, 0x117

Function 2:
Public fallback function
Entry block: 0x30
Exit block: 0x82
Body: 0x30, 0x34, 0x3e, 0x7f, 0x80, 0x82

