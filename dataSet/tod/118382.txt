Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6d]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6d
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6d
0xc: JUMPI 0x6d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x81]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x2e1a7d4d
0x3c EQ
0x3d PUSH2 0x81
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x2e1a7d4d
0x3c: V13 = EQ 0x2e1a7d4d V11
0x3d: V14 = 0x81
0x40: JUMPI 0x81 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xae]
---
0x41 DUP1
0x42 PUSH4 0x4506e935
0x47 EQ
0x48 PUSH2 0xae
0x4b JUMPI
---
0x42: V15 = 0x4506e935
0x47: V16 = EQ 0x4506e935 V11
0x48: V17 = 0xae
0x4b: JUMPI 0xae V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xd9]
---
0x4c DUP1
0x4d PUSH4 0x853828b6
0x52 EQ
0x53 PUSH2 0xd9
0x56 JUMPI
---
0x4d: V18 = 0x853828b6
0x52: V19 = EQ 0x853828b6 V11
0x53: V20 = 0xd9
0x56: JUMPI 0xd9 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0xf0]
---
0x57 DUP1
0x58 PUSH4 0x8da5cb5b
0x5d EQ
0x5e PUSH2 0xf0
0x61 JUMPI
---
0x58: V21 = 0x8da5cb5b
0x5d: V22 = EQ 0x8da5cb5b V11
0x5e: V23 = 0xf0
0x61: JUMPI 0xf0 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x147]
---
0x62 DUP1
0x63 PUSH4 0xf8025049
0x68 EQ
0x69 PUSH2 0x147
0x6c JUMPI
---
0x63: V24 = 0xf8025049
0x68: V25 = EQ 0xf8025049 V11
0x69: V26 = 0x147
0x6c: JUMPI 0x147 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x80]
---
Predecessors: [0x0, 0x62]
Successors: []
---
0x6d JUMPDEST
0x6e PUSH1 0x1
0x70 PUSH1 0x0
0x72 DUP2
0x73 SLOAD
0x74 DUP1
0x75 SWAP3
0x76 SWAP2
0x77 SWAP1
0x78 PUSH1 0x1
0x7a ADD
0x7b SWAP2
0x7c SWAP1
0x7d POP
0x7e SSTORE
0x7f POP
0x80 STOP
---
0x6d: JUMPDEST 
0x6e: V27 = 0x1
0x70: V28 = 0x0
0x73: V29 = S[0x1]
0x78: V30 = 0x1
0x7a: V31 = ADD 0x1 V29
0x7e: S[0x1] = V31
0x80: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x81
[0x81:0x88]
---
Predecessors: [0xd]
Successors: [0x89, 0x8d]
---
0x81 JUMPDEST
0x82 CALLVALUE
0x83 DUP1
0x84 ISZERO
0x85 PUSH2 0x8d
0x88 JUMPI
---
0x81: JUMPDEST 
0x82: V32 = CALLVALUE
0x84: V33 = ISZERO V32
0x85: V34 = 0x8d
0x88: JUMPI 0x8d V33
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V32]
Exit stack: [V11, V32]

================================

Block 0x89
[0x89:0x8c]
---
Predecessors: [0x81]
Successors: []
---
0x89 PUSH1 0x0
0x8b DUP1
0x8c REVERT
---
0x89: V35 = 0x0
0x8c: REVERT 0x0 0x0
---
Entry stack: [V11, V32]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V32]

================================

Block 0x8d
[0x8d:0xab]
---
Predecessors: [0x81]
Successors: [0x1da]
---
0x8d JUMPDEST
0x8e POP
0x8f PUSH2 0xac
0x92 PUSH1 0x4
0x94 DUP1
0x95 CALLDATASIZE
0x96 SUB
0x97 DUP2
0x98 ADD
0x99 SWAP1
0x9a DUP1
0x9b DUP1
0x9c CALLDATALOAD
0x9d SWAP1
0x9e PUSH1 0x20
0xa0 ADD
0xa1 SWAP1
0xa2 SWAP3
0xa3 SWAP2
0xa4 SWAP1
0xa5 POP
0xa6 POP
0xa7 POP
0xa8 PUSH2 0x1da
0xab JUMP
---
0x8d: JUMPDEST 
0x8f: V36 = 0xac
0x92: V37 = 0x4
0x95: V38 = CALLDATASIZE
0x96: V39 = SUB V38 0x4
0x98: V40 = ADD 0x4 V39
0x9c: V41 = CALLDATALOAD 0x4
0x9e: V42 = 0x20
0xa0: V43 = ADD 0x20 0x4
0xa8: V44 = 0x1da
0xab: JUMP 0x1da
---
Entry stack: [V11, V32]
Stack pops: 1
Stack additions: [0xac, V41]
Exit stack: [V11, 0xac, V41]

================================

Block 0xac
[0xac:0xad]
---
Predecessors: [0x27b]
Successors: []
---
0xac JUMPDEST
0xad STOP
---
0xac: JUMPDEST 
0xad: STOP 
---
Entry stack: [V11, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S0]

================================

Block 0xae
[0xae:0xb5]
---
Predecessors: [0x41]
Successors: [0xb6, 0xba]
---
0xae JUMPDEST
0xaf CALLVALUE
0xb0 DUP1
0xb1 ISZERO
0xb2 PUSH2 0xba
0xb5 JUMPI
---
0xae: JUMPDEST 
0xaf: V45 = CALLVALUE
0xb1: V46 = ISZERO V45
0xb2: V47 = 0xba
0xb5: JUMPI 0xba V46
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V45]
Exit stack: [V11, V45]

================================

Block 0xb6
[0xb6:0xb9]
---
Predecessors: [0xae]
Successors: []
---
0xb6 PUSH1 0x0
0xb8 DUP1
0xb9 REVERT
---
0xb6: V48 = 0x0
0xb9: REVERT 0x0 0x0
---
Entry stack: [V11, V45]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V45]

================================

Block 0xba
[0xba:0xc2]
---
Predecessors: [0xae]
Successors: [0x27f]
---
0xba JUMPDEST
0xbb POP
0xbc PUSH2 0xc3
0xbf PUSH2 0x27f
0xc2 JUMP
---
0xba: JUMPDEST 
0xbc: V49 = 0xc3
0xbf: V50 = 0x27f
0xc2: JUMP 0x27f
---
Entry stack: [V11, V45]
Stack pops: 1
Stack additions: [0xc3]
Exit stack: [V11, 0xc3]

================================

Block 0xc3
[0xc3:0xd8]
---
Predecessors: [0x27f]
Successors: []
---
0xc3 JUMPDEST
0xc4 PUSH1 0x40
0xc6 MLOAD
0xc7 DUP1
0xc8 DUP3
0xc9 DUP2
0xca MSTORE
0xcb PUSH1 0x20
0xcd ADD
0xce SWAP2
0xcf POP
0xd0 POP
0xd1 PUSH1 0x40
0xd3 MLOAD
0xd4 DUP1
0xd5 SWAP2
0xd6 SUB
0xd7 SWAP1
0xd8 RETURN
---
0xc3: JUMPDEST 
0xc4: V51 = 0x40
0xc6: V52 = M[0x40]
0xca: M[V52] = V158
0xcb: V53 = 0x20
0xcd: V54 = ADD 0x20 V52
0xd1: V55 = 0x40
0xd3: V56 = M[0x40]
0xd6: V57 = SUB V54 V56
0xd8: RETURN V56 V57
---
Entry stack: [V11, 0xc3, V158]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xc3]

================================

Block 0xd9
[0xd9:0xe0]
---
Predecessors: [0x4c]
Successors: [0xe1, 0xe5]
---
0xd9 JUMPDEST
0xda CALLVALUE
0xdb DUP1
0xdc ISZERO
0xdd PUSH2 0xe5
0xe0 JUMPI
---
0xd9: JUMPDEST 
0xda: V58 = CALLVALUE
0xdc: V59 = ISZERO V58
0xdd: V60 = 0xe5
0xe0: JUMPI 0xe5 V59
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V58]
Exit stack: [V11, V58]

================================

Block 0xe1
[0xe1:0xe4]
---
Predecessors: [0xd9]
Successors: []
---
0xe1 PUSH1 0x0
0xe3 DUP1
0xe4 REVERT
---
0xe1: V61 = 0x0
0xe4: REVERT 0x0 0x0
---
Entry stack: [V11, V58]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V58]

================================

Block 0xe5
[0xe5:0xed]
---
Predecessors: [0xd9]
Successors: [0x285]
---
0xe5 JUMPDEST
0xe6 POP
0xe7 PUSH2 0xee
0xea PUSH2 0x285
0xed JUMP
---
0xe5: JUMPDEST 
0xe7: V62 = 0xee
0xea: V63 = 0x285
0xed: JUMP 0x285
---
Entry stack: [V11, V58]
Stack pops: 1
Stack additions: [0xee]
Exit stack: [V11, 0xee]

================================

Block 0xee
[0xee:0xef]
---
Predecessors: [0x300]
Successors: []
---
0xee JUMPDEST
0xef STOP
---
0xee: JUMPDEST 
0xef: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf0
[0xf0:0xf7]
---
Predecessors: [0x57]
Successors: [0xf8, 0xfc]
---
0xf0 JUMPDEST
0xf1 CALLVALUE
0xf2 DUP1
0xf3 ISZERO
0xf4 PUSH2 0xfc
0xf7 JUMPI
---
0xf0: JUMPDEST 
0xf1: V64 = CALLVALUE
0xf3: V65 = ISZERO V64
0xf4: V66 = 0xfc
0xf7: JUMPI 0xfc V65
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V64]
Exit stack: [V11, V64]

================================

Block 0xf8
[0xf8:0xfb]
---
Predecessors: [0xf0]
Successors: []
---
0xf8 PUSH1 0x0
0xfa DUP1
0xfb REVERT
---
0xf8: V67 = 0x0
0xfb: REVERT 0x0 0x0
---
Entry stack: [V11, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V64]

================================

Block 0xfc
[0xfc:0x104]
---
Predecessors: [0xf0]
Successors: [0x302]
---
0xfc JUMPDEST
0xfd POP
0xfe PUSH2 0x105
0x101 PUSH2 0x302
0x104 JUMP
---
0xfc: JUMPDEST 
0xfe: V68 = 0x105
0x101: V69 = 0x302
0x104: JUMP 0x302
---
Entry stack: [V11, V64]
Stack pops: 1
Stack additions: [0x105]
Exit stack: [V11, 0x105]

================================

Block 0x105
[0x105:0x146]
---
Predecessors: [0x302]
Successors: []
---
0x105 JUMPDEST
0x106 PUSH1 0x40
0x108 MLOAD
0x109 DUP1
0x10a DUP3
0x10b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x120 AND
0x121 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x136 AND
0x137 DUP2
0x138 MSTORE
0x139 PUSH1 0x20
0x13b ADD
0x13c SWAP2
0x13d POP
0x13e POP
0x13f PUSH1 0x40
0x141 MLOAD
0x142 DUP1
0x143 SWAP2
0x144 SUB
0x145 SWAP1
0x146 RETURN
---
0x105: JUMPDEST 
0x106: V70 = 0x40
0x108: V71 = M[0x40]
0x10b: V72 = 0xffffffffffffffffffffffffffffffffffffffff
0x120: V73 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x121: V74 = 0xffffffffffffffffffffffffffffffffffffffff
0x136: V75 = AND 0xffffffffffffffffffffffffffffffffffffffff V73
0x138: M[V71] = V75
0x139: V76 = 0x20
0x13b: V77 = ADD 0x20 V71
0x13f: V78 = 0x40
0x141: V79 = M[0x40]
0x144: V80 = SUB V77 V79
0x146: RETURN V79 V80
---
Entry stack: [V11, 0x105, V188]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x105]

================================

Block 0x147
[0x147:0x14e]
---
Predecessors: [0x62]
Successors: [0x14f, 0x153]
---
0x147 JUMPDEST
0x148 CALLVALUE
0x149 DUP1
0x14a ISZERO
0x14b PUSH2 0x153
0x14e JUMPI
---
0x147: JUMPDEST 
0x148: V81 = CALLVALUE
0x14a: V82 = ISZERO V81
0x14b: V83 = 0x153
0x14e: JUMPI 0x153 V82
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V81]
Exit stack: [V11, V81]

================================

Block 0x14f
[0x14f:0x152]
---
Predecessors: [0x147]
Successors: []
---
0x14f PUSH1 0x0
0x151 DUP1
0x152 REVERT
---
0x14f: V84 = 0x0
0x152: REVERT 0x0 0x0
---
Entry stack: [V11, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V81]

================================

Block 0x153
[0x153:0x1d7]
---
Predecessors: [0x147]
Successors: [0x327]
---
0x153 JUMPDEST
0x154 POP
0x155 PUSH2 0x1d8
0x158 PUSH1 0x4
0x15a DUP1
0x15b CALLDATASIZE
0x15c SUB
0x15d DUP2
0x15e ADD
0x15f SWAP1
0x160 DUP1
0x161 DUP1
0x162 CALLDATALOAD
0x163 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x178 AND
0x179 SWAP1
0x17a PUSH1 0x20
0x17c ADD
0x17d SWAP1
0x17e SWAP3
0x17f SWAP2
0x180 SWAP1
0x181 DUP1
0x182 CALLDATALOAD
0x183 SWAP1
0x184 PUSH1 0x20
0x186 ADD
0x187 SWAP1
0x188 SWAP3
0x189 SWAP2
0x18a SWAP1
0x18b DUP1
0x18c CALLDATALOAD
0x18d SWAP1
0x18e PUSH1 0x20
0x190 ADD
0x191 SWAP1
0x192 DUP3
0x193 ADD
0x194 DUP1
0x195 CALLDATALOAD
0x196 SWAP1
0x197 PUSH1 0x20
0x199 ADD
0x19a SWAP1
0x19b DUP1
0x19c DUP1
0x19d PUSH1 0x1f
0x19f ADD
0x1a0 PUSH1 0x20
0x1a2 DUP1
0x1a3 SWAP2
0x1a4 DIV
0x1a5 MUL
0x1a6 PUSH1 0x20
0x1a8 ADD
0x1a9 PUSH1 0x40
0x1ab MLOAD
0x1ac SWAP1
0x1ad DUP2
0x1ae ADD
0x1af PUSH1 0x40
0x1b1 MSTORE
0x1b2 DUP1
0x1b3 SWAP4
0x1b4 SWAP3
0x1b5 SWAP2
0x1b6 SWAP1
0x1b7 DUP2
0x1b8 DUP2
0x1b9 MSTORE
0x1ba PUSH1 0x20
0x1bc ADD
0x1bd DUP4
0x1be DUP4
0x1bf DUP1
0x1c0 DUP3
0x1c1 DUP5
0x1c2 CALLDATACOPY
0x1c3 DUP3
0x1c4 ADD
0x1c5 SWAP2
0x1c6 POP
0x1c7 POP
0x1c8 POP
0x1c9 POP
0x1ca POP
0x1cb POP
0x1cc SWAP2
0x1cd SWAP3
0x1ce SWAP2
0x1cf SWAP3
0x1d0 SWAP1
0x1d1 POP
0x1d2 POP
0x1d3 POP
0x1d4 PUSH2 0x327
0x1d7 JUMP
---
0x153: JUMPDEST 
0x155: V85 = 0x1d8
0x158: V86 = 0x4
0x15b: V87 = CALLDATASIZE
0x15c: V88 = SUB V87 0x4
0x15e: V89 = ADD 0x4 V88
0x162: V90 = CALLDATALOAD 0x4
0x163: V91 = 0xffffffffffffffffffffffffffffffffffffffff
0x178: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff V90
0x17a: V93 = 0x20
0x17c: V94 = ADD 0x20 0x4
0x182: V95 = CALLDATALOAD 0x24
0x184: V96 = 0x20
0x186: V97 = ADD 0x20 0x24
0x18c: V98 = CALLDATALOAD 0x44
0x18e: V99 = 0x20
0x190: V100 = ADD 0x20 0x44
0x193: V101 = ADD 0x4 V98
0x195: V102 = CALLDATALOAD V101
0x197: V103 = 0x20
0x199: V104 = ADD 0x20 V101
0x19d: V105 = 0x1f
0x19f: V106 = ADD 0x1f V102
0x1a0: V107 = 0x20
0x1a4: V108 = DIV V106 0x20
0x1a5: V109 = MUL V108 0x20
0x1a6: V110 = 0x20
0x1a8: V111 = ADD 0x20 V109
0x1a9: V112 = 0x40
0x1ab: V113 = M[0x40]
0x1ae: V114 = ADD V113 V111
0x1af: V115 = 0x40
0x1b1: M[0x40] = V114
0x1b9: M[V113] = V102
0x1ba: V116 = 0x20
0x1bc: V117 = ADD 0x20 V113
0x1c2: CALLDATACOPY V117 V104 V102
0x1c4: V118 = ADD V117 V102
0x1d4: V119 = 0x327
0x1d7: JUMP 0x327
---
Entry stack: [V11, V81]
Stack pops: 1
Stack additions: [0x1d8, V92, V95, V113]
Exit stack: [V11, 0x1d8, V92, V95, V113]

================================

Block 0x1d8
[0x1d8:0x1d9]
---
Predecessors: [0x3f5]
Successors: []
---
0x1d8 JUMPDEST
0x1d9 STOP
---
0x1d8: JUMPDEST 
0x1d9: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1da
[0x1da:0x230]
---
Predecessors: [0x8d, 0x2e0]
Successors: [0x231, 0x235]
---
0x1da JUMPDEST
0x1db PUSH1 0x0
0x1dd DUP1
0x1de SWAP1
0x1df SLOAD
0x1e0 SWAP1
0x1e1 PUSH2 0x100
0x1e4 EXP
0x1e5 SWAP1
0x1e6 DIV
0x1e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1fc AND
0x1fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x212 AND
0x213 CALLER
0x214 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x229 AND
0x22a EQ
0x22b ISZERO
0x22c ISZERO
0x22d PUSH2 0x235
0x230 JUMPI
---
0x1da: JUMPDEST 
0x1db: V120 = 0x0
0x1df: V121 = S[0x0]
0x1e1: V122 = 0x100
0x1e4: V123 = EXP 0x100 0x0
0x1e6: V124 = DIV V121 0x1
0x1e7: V125 = 0xffffffffffffffffffffffffffffffffffffffff
0x1fc: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V124
0x1fd: V127 = 0xffffffffffffffffffffffffffffffffffffffff
0x212: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x213: V129 = CALLER
0x214: V130 = 0xffffffffffffffffffffffffffffffffffffffff
0x229: V131 = AND 0xffffffffffffffffffffffffffffffffffffffff V129
0x22a: V132 = EQ V131 V128
0x22b: V133 = ISZERO V132
0x22c: V134 = ISZERO V133
0x22d: V135 = 0x235
0x230: JUMPI 0x235 V134
---
Entry stack: [V11, S2, {0xac, 0x300}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S2, {0xac, 0x300}, S0]

================================

Block 0x231
[0x231:0x234]
---
Predecessors: [0x1da]
Successors: []
---
0x231 PUSH1 0x0
0x233 DUP1
0x234 REVERT
---
0x231: V136 = 0x0
0x234: REVERT 0x0 0x0
---
Entry stack: [V11, S2, {0xac, 0x300}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S2, {0xac, 0x300}, S0]

================================

Block 0x235
[0x235:0x271]
---
Predecessors: [0x1da]
Successors: [0x272, 0x27b]
---
0x235 JUMPDEST
0x236 CALLER
0x237 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24c AND
0x24d PUSH2 0x8fc
0x250 DUP3
0x251 SWAP1
0x252 DUP2
0x253 ISZERO
0x254 MUL
0x255 SWAP1
0x256 PUSH1 0x40
0x258 MLOAD
0x259 PUSH1 0x0
0x25b PUSH1 0x40
0x25d MLOAD
0x25e DUP1
0x25f DUP4
0x260 SUB
0x261 DUP2
0x262 DUP6
0x263 DUP9
0x264 DUP9
0x265 CALL
0x266 SWAP4
0x267 POP
0x268 POP
0x269 POP
0x26a POP
0x26b ISZERO
0x26c DUP1
0x26d ISZERO
0x26e PUSH2 0x27b
0x271 JUMPI
---
0x235: JUMPDEST 
0x236: V137 = CALLER
0x237: V138 = 0xffffffffffffffffffffffffffffffffffffffff
0x24c: V139 = AND 0xffffffffffffffffffffffffffffffffffffffff V137
0x24d: V140 = 0x8fc
0x253: V141 = ISZERO S0
0x254: V142 = MUL V141 0x8fc
0x256: V143 = 0x40
0x258: V144 = M[0x40]
0x259: V145 = 0x0
0x25b: V146 = 0x40
0x25d: V147 = M[0x40]
0x260: V148 = SUB V144 V147
0x265: V149 = CALL V142 V139 S0 V147 V148 V147 0x0
0x26b: V150 = ISZERO V149
0x26d: V151 = ISZERO V150
0x26e: V152 = 0x27b
0x271: JUMPI 0x27b V151
---
Entry stack: [V11, S2, {0xac, 0x300}, S0]
Stack pops: 1
Stack additions: [S0, V150]
Exit stack: [V11, S2, {0xac, 0x300}, S0, V150]

================================

Block 0x272
[0x272:0x27a]
---
Predecessors: [0x235]
Successors: []
---
0x272 RETURNDATASIZE
0x273 PUSH1 0x0
0x275 DUP1
0x276 RETURNDATACOPY
0x277 RETURNDATASIZE
0x278 PUSH1 0x0
0x27a REVERT
---
0x272: V153 = RETURNDATASIZE
0x273: V154 = 0x0
0x276: RETURNDATACOPY 0x0 0x0 V153
0x277: V155 = RETURNDATASIZE
0x278: V156 = 0x0
0x27a: REVERT 0x0 V155
---
Entry stack: [V11, S3, {0xac, 0x300}, S1, V150]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S3, {0xac, 0x300}, S1, V150]

================================

Block 0x27b
[0x27b:0x27e]
---
Predecessors: [0x235]
Successors: [0xac, 0x300]
---
0x27b JUMPDEST
0x27c POP
0x27d POP
0x27e JUMP
---
0x27b: JUMPDEST 
0x27e: JUMP {0xac, 0x300}
---
Entry stack: [V11, S3, {0xac, 0x300}, S1, V150]
Stack pops: 3
Stack additions: []
Exit stack: [V11, S3]

================================

Block 0x27f
[0x27f:0x284]
---
Predecessors: [0xba]
Successors: [0xc3]
---
0x27f JUMPDEST
0x280 PUSH1 0x1
0x282 SLOAD
0x283 DUP2
0x284 JUMP
---
0x27f: JUMPDEST 
0x280: V157 = 0x1
0x282: V158 = S[0x1]
0x284: JUMP 0xc3
---
Entry stack: [V11, 0xc3]
Stack pops: 1
Stack additions: [S0, V158]
Exit stack: [V11, 0xc3, V158]

================================

Block 0x285
[0x285:0x2db]
---
Predecessors: [0xe5]
Successors: [0x2dc, 0x2e0]
---
0x285 JUMPDEST
0x286 PUSH1 0x0
0x288 DUP1
0x289 SWAP1
0x28a SLOAD
0x28b SWAP1
0x28c PUSH2 0x100
0x28f EXP
0x290 SWAP1
0x291 DIV
0x292 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a7 AND
0x2a8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2bd AND
0x2be CALLER
0x2bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d4 AND
0x2d5 EQ
0x2d6 ISZERO
0x2d7 ISZERO
0x2d8 PUSH2 0x2e0
0x2db JUMPI
---
0x285: JUMPDEST 
0x286: V159 = 0x0
0x28a: V160 = S[0x0]
0x28c: V161 = 0x100
0x28f: V162 = EXP 0x100 0x0
0x291: V163 = DIV V160 0x1
0x292: V164 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a7: V165 = AND 0xffffffffffffffffffffffffffffffffffffffff V163
0x2a8: V166 = 0xffffffffffffffffffffffffffffffffffffffff
0x2bd: V167 = AND 0xffffffffffffffffffffffffffffffffffffffff V165
0x2be: V168 = CALLER
0x2bf: V169 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d4: V170 = AND 0xffffffffffffffffffffffffffffffffffffffff V168
0x2d5: V171 = EQ V170 V167
0x2d6: V172 = ISZERO V171
0x2d7: V173 = ISZERO V172
0x2d8: V174 = 0x2e0
0x2db: JUMPI 0x2e0 V173
---
Entry stack: [V11, 0xee]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xee]

================================

Block 0x2dc
[0x2dc:0x2df]
---
Predecessors: [0x285]
Successors: []
---
0x2dc PUSH1 0x0
0x2de DUP1
0x2df REVERT
---
0x2dc: V175 = 0x0
0x2df: REVERT 0x0 0x0
---
Entry stack: [V11, 0xee]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xee]

================================

Block 0x2e0
[0x2e0:0x2ff]
---
Predecessors: [0x285]
Successors: [0x1da]
---
0x2e0 JUMPDEST
0x2e1 PUSH2 0x300
0x2e4 ADDRESS
0x2e5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2fa AND
0x2fb BALANCE
0x2fc PUSH2 0x1da
0x2ff JUMP
---
0x2e0: JUMPDEST 
0x2e1: V176 = 0x300
0x2e4: V177 = ADDRESS
0x2e5: V178 = 0xffffffffffffffffffffffffffffffffffffffff
0x2fa: V179 = AND 0xffffffffffffffffffffffffffffffffffffffff V177
0x2fb: V180 = BALANCE V179
0x2fc: V181 = 0x1da
0x2ff: JUMP 0x1da
---
Entry stack: [V11, 0xee]
Stack pops: 0
Stack additions: [0x300, V180]
Exit stack: [V11, 0xee, 0x300, V180]

================================

Block 0x300
[0x300:0x301]
---
Predecessors: [0x27b]
Successors: [0xee]
---
0x300 JUMPDEST
0x301 JUMP
---
0x300: JUMPDEST 
0x301: JUMP S0
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x302
[0x302:0x326]
---
Predecessors: [0xfc]
Successors: [0x105]
---
0x302 JUMPDEST
0x303 PUSH1 0x0
0x305 DUP1
0x306 SWAP1
0x307 SLOAD
0x308 SWAP1
0x309 PUSH2 0x100
0x30c EXP
0x30d SWAP1
0x30e DIV
0x30f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x324 AND
0x325 DUP2
0x326 JUMP
---
0x302: JUMPDEST 
0x303: V182 = 0x0
0x307: V183 = S[0x0]
0x309: V184 = 0x100
0x30c: V185 = EXP 0x100 0x0
0x30e: V186 = DIV V183 0x1
0x30f: V187 = 0xffffffffffffffffffffffffffffffffffffffff
0x324: V188 = AND 0xffffffffffffffffffffffffffffffffffffffff V186
0x326: JUMP 0x105
---
Entry stack: [V11, 0x105]
Stack pops: 1
Stack additions: [S0, V188]
Exit stack: [V11, 0x105, V188]

================================

Block 0x327
[0x327:0x37d]
---
Predecessors: [0x153]
Successors: [0x37e, 0x382]
---
0x327 JUMPDEST
0x328 PUSH1 0x0
0x32a DUP1
0x32b SWAP1
0x32c SLOAD
0x32d SWAP1
0x32e PUSH2 0x100
0x331 EXP
0x332 SWAP1
0x333 DIV
0x334 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x349 AND
0x34a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x35f AND
0x360 CALLER
0x361 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x376 AND
0x377 EQ
0x378 ISZERO
0x379 ISZERO
0x37a PUSH2 0x382
0x37d JUMPI
---
0x327: JUMPDEST 
0x328: V189 = 0x0
0x32c: V190 = S[0x0]
0x32e: V191 = 0x100
0x331: V192 = EXP 0x100 0x0
0x333: V193 = DIV V190 0x1
0x334: V194 = 0xffffffffffffffffffffffffffffffffffffffff
0x349: V195 = AND 0xffffffffffffffffffffffffffffffffffffffff V193
0x34a: V196 = 0xffffffffffffffffffffffffffffffffffffffff
0x35f: V197 = AND 0xffffffffffffffffffffffffffffffffffffffff V195
0x360: V198 = CALLER
0x361: V199 = 0xffffffffffffffffffffffffffffffffffffffff
0x376: V200 = AND 0xffffffffffffffffffffffffffffffffffffffff V198
0x377: V201 = EQ V200 V197
0x378: V202 = ISZERO V201
0x379: V203 = ISZERO V202
0x37a: V204 = 0x382
0x37d: JUMPI 0x382 V203
---
Entry stack: [V11, 0x1d8, V92, V95, V113]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1d8, V92, V95, V113]

================================

Block 0x37e
[0x37e:0x381]
---
Predecessors: [0x327]
Successors: []
---
0x37e PUSH1 0x0
0x380 DUP1
0x381 REVERT
---
0x37e: V205 = 0x0
0x381: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1d8, V92, V95, V113]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1d8, V92, V95, V113]

================================

Block 0x382
[0x382:0x3ac]
---
Predecessors: [0x327]
Successors: [0x3ad]
---
0x382 JUMPDEST
0x383 DUP3
0x384 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x399 AND
0x39a DUP3
0x39b DUP3
0x39c PUSH1 0x40
0x39e MLOAD
0x39f DUP1
0x3a0 DUP3
0x3a1 DUP1
0x3a2 MLOAD
0x3a3 SWAP1
0x3a4 PUSH1 0x20
0x3a6 ADD
0x3a7 SWAP1
0x3a8 DUP1
0x3a9 DUP4
0x3aa DUP4
0x3ab PUSH1 0x0
---
0x382: JUMPDEST 
0x384: V206 = 0xffffffffffffffffffffffffffffffffffffffff
0x399: V207 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x39c: V208 = 0x40
0x39e: V209 = M[0x40]
0x3a2: V210 = M[V113]
0x3a4: V211 = 0x20
0x3a6: V212 = ADD 0x20 V113
0x3ab: V213 = 0x0
---
Entry stack: [V11, 0x1d8, V92, V95, V113]
Stack pops: 3
Stack additions: [S2, S1, S0, V207, S1, S0, V209, V209, V212, V210, V210, V209, V212, 0x0]
Exit stack: [V11, 0x1d8, V92, V95, V113, V207, V95, V113, V209, V209, V212, V210, V210, V209, V212, 0x0]

================================

Block 0x3ad
[0x3ad:0x3b5]
---
Predecessors: [0x382, 0x3b6]
Successors: [0x3b6, 0x3c8]
---
0x3ad JUMPDEST
0x3ae DUP4
0x3af DUP2
0x3b0 LT
0x3b1 ISZERO
0x3b2 PUSH2 0x3c8
0x3b5 JUMPI
---
0x3ad: JUMPDEST 
0x3b0: V214 = LT S0 V210
0x3b1: V215 = ISZERO V214
0x3b2: V216 = 0x3c8
0x3b5: JUMPI 0x3c8 V215
---
Entry stack: [V11, 0x1d8, V92, V95, V113, V207, V95, V113, V209, V209, V212, V210, V210, V209, V212, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x1d8, V92, V95, V113, V207, V95, V113, V209, V209, V212, V210, V210, V209, V212, S0]

================================

Block 0x3b6
[0x3b6:0x3c7]
---
Predecessors: [0x3ad]
Successors: [0x3ad]
---
0x3b6 DUP1
0x3b7 DUP3
0x3b8 ADD
0x3b9 MLOAD
0x3ba DUP2
0x3bb DUP5
0x3bc ADD
0x3bd MSTORE
0x3be PUSH1 0x20
0x3c0 DUP2
0x3c1 ADD
0x3c2 SWAP1
0x3c3 POP
0x3c4 PUSH2 0x3ad
0x3c7 JUMP
---
0x3b8: V217 = ADD V212 S0
0x3b9: V218 = M[V217]
0x3bc: V219 = ADD V209 S0
0x3bd: M[V219] = V218
0x3be: V220 = 0x20
0x3c1: V221 = ADD S0 0x20
0x3c4: V222 = 0x3ad
0x3c7: JUMP 0x3ad
---
Entry stack: [V11, 0x1d8, V92, V95, V113, V207, V95, V113, V209, V209, V212, V210, V210, V209, V212, S0]
Stack pops: 3
Stack additions: [S2, S1, V221]
Exit stack: [V11, 0x1d8, V92, V95, V113, V207, V95, V113, V209, V209, V212, V210, V210, V209, V212, V221]

================================

Block 0x3c8
[0x3c8:0x3db]
---
Predecessors: [0x3ad]
Successors: [0x3dc, 0x3f5]
---
0x3c8 JUMPDEST
0x3c9 POP
0x3ca POP
0x3cb POP
0x3cc POP
0x3cd SWAP1
0x3ce POP
0x3cf SWAP1
0x3d0 DUP2
0x3d1 ADD
0x3d2 SWAP1
0x3d3 PUSH1 0x1f
0x3d5 AND
0x3d6 DUP1
0x3d7 ISZERO
0x3d8 PUSH2 0x3f5
0x3db JUMPI
---
0x3c8: JUMPDEST 
0x3d1: V223 = ADD V210 V209
0x3d3: V224 = 0x1f
0x3d5: V225 = AND 0x1f V210
0x3d7: V226 = ISZERO V225
0x3d8: V227 = 0x3f5
0x3db: JUMPI 0x3f5 V226
---
Entry stack: [V11, 0x1d8, V92, V95, V113, V207, V95, V113, V209, V209, V212, V210, V210, V209, V212, S0]
Stack pops: 7
Stack additions: [V223, V225]
Exit stack: [V11, 0x1d8, V92, V95, V113, V207, V95, V113, V209, V223, V225]

================================

Block 0x3dc
[0x3dc:0x3f4]
---
Predecessors: [0x3c8]
Successors: [0x3f5]
---
0x3dc DUP1
0x3dd DUP3
0x3de SUB
0x3df DUP1
0x3e0 MLOAD
0x3e1 PUSH1 0x1
0x3e3 DUP4
0x3e4 PUSH1 0x20
0x3e6 SUB
0x3e7 PUSH2 0x100
0x3ea EXP
0x3eb SUB
0x3ec NOT
0x3ed AND
0x3ee DUP2
0x3ef MSTORE
0x3f0 PUSH1 0x20
0x3f2 ADD
0x3f3 SWAP2
0x3f4 POP
---
0x3de: V228 = SUB V223 V225
0x3e0: V229 = M[V228]
0x3e1: V230 = 0x1
0x3e4: V231 = 0x20
0x3e6: V232 = SUB 0x20 V225
0x3e7: V233 = 0x100
0x3ea: V234 = EXP 0x100 V232
0x3eb: V235 = SUB V234 0x1
0x3ec: V236 = NOT V235
0x3ed: V237 = AND V236 V229
0x3ef: M[V228] = V237
0x3f0: V238 = 0x20
0x3f2: V239 = ADD 0x20 V228
---
Entry stack: [V11, 0x1d8, V92, V95, V113, V207, V95, V113, V209, V223, V225]
Stack pops: 2
Stack additions: [V239, S0]
Exit stack: [V11, 0x1d8, V92, V95, V113, V207, V95, V113, V209, V239, V225]

================================

Block 0x3f5
[0x3f5:0x40f]
---
Predecessors: [0x3c8, 0x3dc]
Successors: [0x1d8]
---
0x3f5 JUMPDEST
0x3f6 POP
0x3f7 SWAP2
0x3f8 POP
0x3f9 POP
0x3fa PUSH1 0x0
0x3fc PUSH1 0x40
0x3fe MLOAD
0x3ff DUP1
0x400 DUP4
0x401 SUB
0x402 DUP2
0x403 DUP6
0x404 DUP8
0x405 GAS
0x406 CALL
0x407 SWAP3
0x408 POP
0x409 POP
0x40a POP
0x40b POP
0x40c POP
0x40d POP
0x40e POP
0x40f JUMP
---
0x3f5: JUMPDEST 
0x3fa: V240 = 0x0
0x3fc: V241 = 0x40
0x3fe: V242 = M[0x40]
0x401: V243 = SUB S1 V242
0x405: V244 = GAS
0x406: V245 = CALL V244 V207 V95 V242 V243 V242 0x0
0x40f: JUMP 0x1d8
---
Entry stack: [V11, 0x1d8, V92, V95, V113, V207, V95, V113, V209, S1, V225]
Stack pops: 10
Stack additions: []
Exit stack: [V11]

================================

Block 0x410
[0x410:0x43b]
---
Predecessors: []
Successors: []
---
0x410 STOP
0x411 LOG1
0x412 PUSH6 0x627a7a723058
0x419 SHA3
0x41a MISSING 0xd7
0x41b SWAP13
0x41c MISSING 0x22
0x41d MISSING 0xcb
0x41e PUSH22 0xffea3fd746f562887a64735db41e413d5f08e76b7140
0x435 MISSING 0xd5
0x436 SWAP12
0x437 DIV
0x438 MSTORE8
0x439 LOG3
0x43a STOP
0x43b MISSING 0x29
---
0x410: STOP 
0x411: LOG S0 S1 S2
0x412: V246 = 0x627a7a723058
0x419: V247 = SHA3 0x627a7a723058 S3
0x41a: MISSING 0xd7
0x41c: MISSING 0x22
0x41d: MISSING 0xcb
0x41e: V248 = 0xffea3fd746f562887a64735db41e413d5f08e76b7140
0x435: MISSING 0xd5
0x437: V249 = DIV S12 S1
0x438: M8[V249] = S2
0x439: LOG S3 S4 S5 S6 S7
0x43a: STOP 
0x43b: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V247, S13, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S0, 0xffea3fd746f562887a64735db41e413d5f08e76b7140, S8, S9, S10, S11, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x2e1a7d4d
Entry block: 0x81
Exit block: 0x89
Body: 0x81, 0x89, 0x8d, 0xac

Function 1:
Public function signature: 0x4506e935
Entry block: 0xae
Exit block: 0xc3
Body: 0xae, 0xb6, 0xba, 0xc3, 0x27f

Function 2:
Public function signature: 0x853828b6
Entry block: 0xd9
Exit block: 0xee
Body: 0xd9, 0xe1, 0xe5, 0xee, 0x285, 0x2dc, 0x2e0, 0x300

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0xf0
Exit block: 0x105
Body: 0xf0, 0xf8, 0xfc, 0x105, 0x302

Function 4:
Public function signature: 0xf8025049
Entry block: 0x147
Exit block: 0x1d8
Body: 0x147, 0x14f, 0x153, 0x1d8, 0x327, 0x37e, 0x382, 0x3ad, 0x3b6, 0x3c8, 0x3dc, 0x3f5

Function 5:
Public fallback function
Entry block: 0x6d
Exit block: 0x6d
Body: 0x6d

Function 6:
Private function
Entry block: 0x1da
Exit block: 0x27b
Body: 0x1da, 0x235, 0x27b

