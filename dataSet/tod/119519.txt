Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x80]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x80
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x80
0xa: JUMPI 0x80 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x85]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x8551a53
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x85
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x8551a53
0x39: V12 = EQ V10 0x8551a53
0x3a: V13 = 0x85
0x3d: JUMPI 0x85 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0xb4]
---
0x3e DUP1
0x3f PUSH4 0x35a063b4
0x44 EQ
0x45 PUSH2 0xb4
0x48 JUMPI
---
0x3f: V14 = 0x35a063b4
0x44: V15 = EQ 0x35a063b4 V10
0x45: V16 = 0xb4
0x48: JUMPI 0xb4 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0xc9]
---
0x49 DUP1
0x4a PUSH4 0x3fa4f245
0x4f EQ
0x50 PUSH2 0xc9
0x53 JUMPI
---
0x4a: V17 = 0x3fa4f245
0x4f: V18 = EQ 0x3fa4f245 V10
0x50: V19 = 0xc9
0x53: JUMPI 0xc9 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0xee]
---
0x54 DUP1
0x55 PUSH4 0x7150d8ae
0x5a EQ
0x5b PUSH2 0xee
0x5e JUMPI
---
0x55: V20 = 0x7150d8ae
0x5a: V21 = EQ 0x7150d8ae V10
0x5b: V22 = 0xee
0x5e: JUMPI 0xee V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x11d]
---
0x5f DUP1
0x60 PUSH4 0x73fac6f0
0x65 EQ
0x66 PUSH2 0x11d
0x69 JUMPI
---
0x60: V23 = 0x73fac6f0
0x65: V24 = EQ 0x73fac6f0 V10
0x66: V25 = 0x11d
0x69: JUMPI 0x11d V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x132]
---
0x6a DUP1
0x6b PUSH4 0xc19d93fb
0x70 EQ
0x71 PUSH2 0x132
0x74 JUMPI
---
0x6b: V26 = 0xc19d93fb
0x70: V27 = EQ 0xc19d93fb V10
0x71: V28 = 0x132
0x74: JUMPI 0x132 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x169]
---
0x75 DUP1
0x76 PUSH4 0xd6960697
0x7b EQ
0x7c PUSH2 0x169
0x7f JUMPI
---
0x76: V29 = 0xd6960697
0x7b: V30 = EQ 0xd6960697 V10
0x7c: V31 = 0x169
0x7f: JUMPI 0x169 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x84]
---
Predecessors: [0x0, 0x75]
Successors: []
---
0x80 JUMPDEST
0x81 PUSH1 0x0
0x83 DUP1
0x84 REVERT
---
0x80: JUMPDEST 
0x81: V32 = 0x0
0x84: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x85
[0x85:0x8b]
---
Predecessors: [0xb]
Successors: [0x8c, 0x90]
---
0x85 JUMPDEST
0x86 CALLVALUE
0x87 ISZERO
0x88 PUSH2 0x90
0x8b JUMPI
---
0x85: JUMPDEST 
0x86: V33 = CALLVALUE
0x87: V34 = ISZERO V33
0x88: V35 = 0x90
0x8b: JUMPI 0x90 V34
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x8c
[0x8c:0x8f]
---
Predecessors: [0x85]
Successors: []
---
0x8c PUSH1 0x0
0x8e DUP1
0x8f REVERT
---
0x8c: V36 = 0x0
0x8f: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x90
[0x90:0x97]
---
Predecessors: [0x85]
Successors: [0x173]
---
0x90 JUMPDEST
0x91 PUSH2 0x98
0x94 PUSH2 0x173
0x97 JUMP
---
0x90: JUMPDEST 
0x91: V37 = 0x98
0x94: V38 = 0x173
0x97: JUMP 0x173
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x98]
Exit stack: [V10, 0x98]

================================

Block 0x98
[0x98:0xb3]
---
Predecessors: [0x173, 0x25e]
Successors: []
---
0x98 JUMPDEST
0x99 PUSH1 0x40
0x9b MLOAD
0x9c PUSH1 0x1
0x9e PUSH1 0xa0
0xa0 PUSH1 0x2
0xa2 EXP
0xa3 SUB
0xa4 SWAP1
0xa5 SWAP2
0xa6 AND
0xa7 DUP2
0xa8 MSTORE
0xa9 PUSH1 0x20
0xab ADD
0xac PUSH1 0x40
0xae MLOAD
0xaf DUP1
0xb0 SWAP2
0xb1 SUB
0xb2 SWAP1
0xb3 RETURN
---
0x98: JUMPDEST 
0x99: V39 = 0x40
0x9b: V40 = M[0x40]
0x9c: V41 = 0x1
0x9e: V42 = 0xa0
0xa0: V43 = 0x2
0xa2: V44 = EXP 0x2 0xa0
0xa3: V45 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa6: V46 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xa8: M[V40] = V46
0xa9: V47 = 0x20
0xab: V48 = ADD 0x20 V40
0xac: V49 = 0x40
0xae: V50 = M[0x40]
0xb1: V51 = SUB V48 V50
0xb3: RETURN V50 V51
---
Entry stack: [V10, 0x98, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x98]

================================

Block 0xb4
[0xb4:0xba]
---
Predecessors: [0x3e]
Successors: [0xbb, 0xbf]
---
0xb4 JUMPDEST
0xb5 CALLVALUE
0xb6 ISZERO
0xb7 PUSH2 0xbf
0xba JUMPI
---
0xb4: JUMPDEST 
0xb5: V52 = CALLVALUE
0xb6: V53 = ISZERO V52
0xb7: V54 = 0xbf
0xba: JUMPI 0xbf V53
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xbb
[0xbb:0xbe]
---
Predecessors: [0xb4]
Successors: []
---
0xbb PUSH1 0x0
0xbd DUP1
0xbe REVERT
---
0xbb: V55 = 0x0
0xbe: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xbf
[0xbf:0xc6]
---
Predecessors: [0xb4]
Successors: [0x182]
---
0xbf JUMPDEST
0xc0 PUSH2 0xc7
0xc3 PUSH2 0x182
0xc6 JUMP
---
0xbf: JUMPDEST 
0xc0: V56 = 0xc7
0xc3: V57 = 0x182
0xc6: JUMP 0x182
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xc7]
Exit stack: [V10, 0xc7]

================================

Block 0xc7
[0xc7:0xc8]
---
Predecessors: [0x256, 0x447]
Successors: []
---
0xc7 JUMPDEST
0xc8 STOP
---
0xc7: JUMPDEST 
0xc8: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xc9
[0xc9:0xcf]
---
Predecessors: [0x49]
Successors: [0xd0, 0xd4]
---
0xc9 JUMPDEST
0xca CALLVALUE
0xcb ISZERO
0xcc PUSH2 0xd4
0xcf JUMPI
---
0xc9: JUMPDEST 
0xca: V58 = CALLVALUE
0xcb: V59 = ISZERO V58
0xcc: V60 = 0xd4
0xcf: JUMPI 0xd4 V59
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xd0
[0xd0:0xd3]
---
Predecessors: [0xc9]
Successors: []
---
0xd0 PUSH1 0x0
0xd2 DUP1
0xd3 REVERT
---
0xd0: V61 = 0x0
0xd3: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xd4
[0xd4:0xdb]
---
Predecessors: [0xc9]
Successors: [0x258]
---
0xd4 JUMPDEST
0xd5 PUSH2 0xdc
0xd8 PUSH2 0x258
0xdb JUMP
---
0xd4: JUMPDEST 
0xd5: V62 = 0xdc
0xd8: V63 = 0x258
0xdb: JUMP 0x258
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xdc]
Exit stack: [V10, 0xdc]

================================

Block 0xdc
[0xdc:0xed]
---
Predecessors: [0x258]
Successors: []
---
0xdc JUMPDEST
0xdd PUSH1 0x40
0xdf MLOAD
0xe0 SWAP1
0xe1 DUP2
0xe2 MSTORE
0xe3 PUSH1 0x20
0xe5 ADD
0xe6 PUSH1 0x40
0xe8 MLOAD
0xe9 DUP1
0xea SWAP2
0xeb SUB
0xec SWAP1
0xed RETURN
---
0xdc: JUMPDEST 
0xdd: V64 = 0x40
0xdf: V65 = M[0x40]
0xe2: M[V65] = V195
0xe3: V66 = 0x20
0xe5: V67 = ADD 0x20 V65
0xe6: V68 = 0x40
0xe8: V69 = M[0x40]
0xeb: V70 = SUB V67 V69
0xed: RETURN V69 V70
---
Entry stack: [V10, 0xdc, V195]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xdc]

================================

Block 0xee
[0xee:0xf4]
---
Predecessors: [0x54]
Successors: [0xf5, 0xf9]
---
0xee JUMPDEST
0xef CALLVALUE
0xf0 ISZERO
0xf1 PUSH2 0xf9
0xf4 JUMPI
---
0xee: JUMPDEST 
0xef: V71 = CALLVALUE
0xf0: V72 = ISZERO V71
0xf1: V73 = 0xf9
0xf4: JUMPI 0xf9 V72
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xf5
[0xf5:0xf8]
---
Predecessors: [0xee]
Successors: []
---
0xf5 PUSH1 0x0
0xf7 DUP1
0xf8 REVERT
---
0xf5: V74 = 0x0
0xf8: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xf9
[0xf9:0x100]
---
Predecessors: [0xee]
Successors: [0x25e]
---
0xf9 JUMPDEST
0xfa PUSH2 0x98
0xfd PUSH2 0x25e
0x100 JUMP
---
0xf9: JUMPDEST 
0xfa: V75 = 0x98
0xfd: V76 = 0x25e
0x100: JUMP 0x25e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x98]
Exit stack: [V10, 0x98]

================================

Block 0x101
[0x101:0x11c]
---
Predecessors: []
Successors: []
---
0x101 JUMPDEST
0x102 PUSH1 0x40
0x104 MLOAD
0x105 PUSH1 0x1
0x107 PUSH1 0xa0
0x109 PUSH1 0x2
0x10b EXP
0x10c SUB
0x10d SWAP1
0x10e SWAP2
0x10f AND
0x110 DUP2
0x111 MSTORE
0x112 PUSH1 0x20
0x114 ADD
0x115 PUSH1 0x40
0x117 MLOAD
0x118 DUP1
0x119 SWAP2
0x11a SUB
0x11b SWAP1
0x11c RETURN
---
0x101: JUMPDEST 
0x102: V77 = 0x40
0x104: V78 = M[0x40]
0x105: V79 = 0x1
0x107: V80 = 0xa0
0x109: V81 = 0x2
0x10b: V82 = EXP 0x2 0xa0
0x10c: V83 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10f: V84 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x111: M[V78] = V84
0x112: V85 = 0x20
0x114: V86 = ADD 0x20 V78
0x115: V87 = 0x40
0x117: V88 = M[0x40]
0x11a: V89 = SUB V86 V88
0x11c: RETURN V88 V89
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x11d
[0x11d:0x123]
---
Predecessors: [0x5f]
Successors: [0x124, 0x128]
---
0x11d JUMPDEST
0x11e CALLVALUE
0x11f ISZERO
0x120 PUSH2 0x128
0x123 JUMPI
---
0x11d: JUMPDEST 
0x11e: V90 = CALLVALUE
0x11f: V91 = ISZERO V90
0x120: V92 = 0x128
0x123: JUMPI 0x128 V91
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x124
[0x124:0x127]
---
Predecessors: [0x11d]
Successors: []
---
0x124 PUSH1 0x0
0x126 DUP1
0x127 REVERT
---
0x124: V93 = 0x0
0x127: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x128
[0x128:0x12f]
---
Predecessors: [0x11d]
Successors: [0x26d]
---
0x128 JUMPDEST
0x129 PUSH2 0xc7
0x12c PUSH2 0x26d
0x12f JUMP
---
0x128: JUMPDEST 
0x129: V94 = 0xc7
0x12c: V95 = 0x26d
0x12f: JUMP 0x26d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xc7]
Exit stack: [V10, 0xc7]

================================

Block 0x130
[0x130:0x131]
---
Predecessors: []
Successors: []
---
0x130 JUMPDEST
0x131 STOP
---
0x130: JUMPDEST 
0x131: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x132
[0x132:0x138]
---
Predecessors: [0x6a]
Successors: [0x139, 0x13d]
---
0x132 JUMPDEST
0x133 CALLVALUE
0x134 ISZERO
0x135 PUSH2 0x13d
0x138 JUMPI
---
0x132: JUMPDEST 
0x133: V96 = CALLVALUE
0x134: V97 = ISZERO V96
0x135: V98 = 0x13d
0x138: JUMPI 0x13d V97
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x139
[0x139:0x13c]
---
Predecessors: [0x132]
Successors: []
---
0x139 PUSH1 0x0
0x13b DUP1
0x13c REVERT
---
0x139: V99 = 0x0
0x13c: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x13d
[0x13d:0x144]
---
Predecessors: [0x132]
Successors: [0x37c]
---
0x13d JUMPDEST
0x13e PUSH2 0x145
0x141 PUSH2 0x37c
0x144 JUMP
---
0x13d: JUMPDEST 
0x13e: V100 = 0x145
0x141: V101 = 0x37c
0x144: JUMP 0x37c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x145]
Exit stack: [V10, 0x145]

================================

Block 0x145
[0x145:0x153]
---
Predecessors: [0x37c]
Successors: [0x154, 0x155]
---
0x145 JUMPDEST
0x146 PUSH1 0x40
0x148 MLOAD
0x149 DUP1
0x14a DUP3
0x14b PUSH1 0x2
0x14d DUP2
0x14e GT
0x14f ISZERO
0x150 PUSH2 0x155
0x153 JUMPI
---
0x145: JUMPDEST 
0x146: V102 = 0x40
0x148: V103 = M[0x40]
0x14b: V104 = 0x2
0x14e: V105 = GT V304 0x2
0x14f: V106 = ISZERO V105
0x150: V107 = 0x155
0x153: JUMPI 0x155 V106
---
Entry stack: [V10, 0x145, V304]
Stack pops: 1
Stack additions: [S0, V103, V103, S0]
Exit stack: [V10, 0x145, V304, V103, V103, V304]

================================

Block 0x154
[0x154:0x154]
---
Predecessors: [0x145]
Successors: []
---
0x154 INVALID
---
0x154: INVALID 
---
Entry stack: [V10, 0x145, V304, V103, V103, V304]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x145, V304, V103, V103, V304]

================================

Block 0x155
[0x155:0x168]
---
Predecessors: [0x145]
Successors: []
---
0x155 JUMPDEST
0x156 PUSH1 0xff
0x158 AND
0x159 DUP2
0x15a MSTORE
0x15b PUSH1 0x20
0x15d ADD
0x15e SWAP2
0x15f POP
0x160 POP
0x161 PUSH1 0x40
0x163 MLOAD
0x164 DUP1
0x165 SWAP2
0x166 SUB
0x167 SWAP1
0x168 RETURN
---
0x155: JUMPDEST 
0x156: V108 = 0xff
0x158: V109 = AND 0xff V304
0x15a: M[V103] = V109
0x15b: V110 = 0x20
0x15d: V111 = ADD 0x20 V103
0x161: V112 = 0x40
0x163: V113 = M[0x40]
0x166: V114 = SUB V111 V113
0x168: RETURN V113 V114
---
Entry stack: [V10, 0x145, V304, V103, V103, V304]
Stack pops: 4
Stack additions: []
Exit stack: [V10, 0x145]

================================

Block 0x169
[0x169:0x170]
---
Predecessors: [0x75]
Successors: [0x38c]
---
0x169 JUMPDEST
0x16a PUSH2 0xc7
0x16d PUSH2 0x38c
0x170 JUMP
---
0x169: JUMPDEST 
0x16a: V115 = 0xc7
0x16d: V116 = 0x38c
0x170: JUMP 0x38c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xc7]
Exit stack: [V10, 0xc7]

================================

Block 0x171
[0x171:0x172]
---
Predecessors: []
Successors: []
---
0x171 JUMPDEST
0x172 STOP
---
0x171: JUMPDEST 
0x172: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x173
[0x173:0x181]
---
Predecessors: [0x90]
Successors: [0x98]
---
0x173 JUMPDEST
0x174 PUSH1 0x1
0x176 SLOAD
0x177 PUSH1 0x1
0x179 PUSH1 0xa0
0x17b PUSH1 0x2
0x17d EXP
0x17e SUB
0x17f AND
0x180 DUP2
0x181 JUMP
---
0x173: JUMPDEST 
0x174: V117 = 0x1
0x176: V118 = S[0x1]
0x177: V119 = 0x1
0x179: V120 = 0xa0
0x17b: V121 = 0x2
0x17d: V122 = EXP 0x2 0xa0
0x17e: V123 = SUB 0x10000000000000000000000000000000000000000 0x1
0x17f: V124 = AND 0xffffffffffffffffffffffffffffffffffffffff V118
0x181: JUMP 0x98
---
Entry stack: [V10, 0x98]
Stack pops: 1
Stack additions: [S0, V124]
Exit stack: [V10, 0x98, V124]

================================

Block 0x182
[0x182:0x198]
---
Predecessors: [0xbf]
Successors: [0x199, 0x19d]
---
0x182 JUMPDEST
0x183 PUSH1 0x1
0x185 SLOAD
0x186 CALLER
0x187 PUSH1 0x1
0x189 PUSH1 0xa0
0x18b PUSH1 0x2
0x18d EXP
0x18e SUB
0x18f SWAP1
0x190 DUP2
0x191 AND
0x192 SWAP2
0x193 AND
0x194 EQ
0x195 PUSH2 0x19d
0x198 JUMPI
---
0x182: JUMPDEST 
0x183: V125 = 0x1
0x185: V126 = S[0x1]
0x186: V127 = CALLER
0x187: V128 = 0x1
0x189: V129 = 0xa0
0x18b: V130 = 0x2
0x18d: V131 = EXP 0x2 0xa0
0x18e: V132 = SUB 0x10000000000000000000000000000000000000000 0x1
0x191: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x193: V134 = AND V126 0xffffffffffffffffffffffffffffffffffffffff
0x194: V135 = EQ V134 V133
0x195: V136 = 0x19d
0x198: JUMPI 0x19d V135
---
Entry stack: [V10, 0xc7]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc7]

================================

Block 0x199
[0x199:0x19c]
---
Predecessors: [0x182]
Successors: []
---
0x199 PUSH1 0x0
0x19b DUP1
0x19c REVERT
---
0x199: V137 = 0x0
0x19c: REVERT 0x0 0x0
---
Entry stack: [V10, 0xc7]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc7]

================================

Block 0x19d
[0x19d:0x1a0]
---
Predecessors: [0x182]
Successors: [0x1a1]
---
0x19d JUMPDEST
0x19e PUSH1 0x0
0x1a0 DUP1
---
0x19d: JUMPDEST 
0x19e: V138 = 0x0
---
Entry stack: [V10, 0xc7]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V10, 0xc7, 0x0, 0x0]

================================

Block 0x1a1
[0x1a1:0x1b7]
---
Predecessors: [0x19d]
Successors: [0x1b8, 0x1b9]
---
0x1a1 JUMPDEST
0x1a2 PUSH1 0x2
0x1a4 DUP1
0x1a5 SLOAD
0x1a6 PUSH1 0xa0
0x1a8 PUSH1 0x2
0x1aa EXP
0x1ab SWAP1
0x1ac DIV
0x1ad PUSH1 0xff
0x1af AND
0x1b0 SWAP1
0x1b1 DUP2
0x1b2 GT
0x1b3 ISZERO
0x1b4 PUSH2 0x1b9
0x1b7 JUMPI
---
0x1a1: JUMPDEST 
0x1a2: V139 = 0x2
0x1a5: V140 = S[0x2]
0x1a6: V141 = 0xa0
0x1a8: V142 = 0x2
0x1aa: V143 = EXP 0x2 0xa0
0x1ac: V144 = DIV V140 0x10000000000000000000000000000000000000000
0x1ad: V145 = 0xff
0x1af: V146 = AND 0xff V144
0x1b2: V147 = GT V146 0x2
0x1b3: V148 = ISZERO V147
0x1b4: V149 = 0x1b9
0x1b7: JUMPI 0x1b9 V148
---
Entry stack: [V10, 0xc7, 0x0, 0x0]
Stack pops: 0
Stack additions: [V146]
Exit stack: [V10, 0xc7, 0x0, 0x0, V146]

================================

Block 0x1b8
[0x1b8:0x1b8]
---
Predecessors: [0x1a1]
Successors: []
---
0x1b8 INVALID
---
0x1b8: INVALID 
---
Entry stack: [V10, 0xc7, 0x0, 0x0, V146]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc7, 0x0, 0x0, V146]

================================

Block 0x1b9
[0x1b9:0x1be]
---
Predecessors: [0x1a1]
Successors: [0x1bf, 0x1c3]
---
0x1b9 JUMPDEST
0x1ba EQ
0x1bb PUSH2 0x1c3
0x1be JUMPI
---
0x1b9: JUMPDEST 
0x1ba: V150 = EQ V146 0x0
0x1bb: V151 = 0x1c3
0x1be: JUMPI 0x1c3 V150
---
Entry stack: [V10, 0xc7, 0x0, 0x0, V146]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0xc7, 0x0]

================================

Block 0x1bf
[0x1bf:0x1c2]
---
Predecessors: [0x1b9]
Successors: []
---
0x1bf PUSH1 0x0
0x1c1 DUP1
0x1c2 REVERT
---
0x1bf: V152 = 0x0
0x1c2: REVERT 0x0 0x0
---
Entry stack: [V10, 0xc7, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc7, 0x0]

================================

Block 0x1c3
[0x1c3:0x213]
---
Predecessors: [0x1b9]
Successors: [0x214]
---
0x1c3 JUMPDEST
0x1c4 PUSH32 0x72c874aeff0b183a56e2b79c71b46e1aed4dee5e09862134b8821ba2fddbf8bf
0x1e5 PUSH1 0x40
0x1e7 MLOAD
0x1e8 PUSH1 0x40
0x1ea MLOAD
0x1eb DUP1
0x1ec SWAP2
0x1ed SUB
0x1ee SWAP1
0x1ef LOG1
0x1f0 PUSH1 0x2
0x1f2 DUP1
0x1f3 SLOAD
0x1f4 DUP2
0x1f5 SWAP1
0x1f6 PUSH21 0xff0000000000000000000000000000000000000000
0x20c NOT
0x20d AND
0x20e PUSH1 0xa0
0x210 PUSH1 0x2
0x212 EXP
0x213 DUP3
---
0x1c3: JUMPDEST 
0x1c4: V153 = 0x72c874aeff0b183a56e2b79c71b46e1aed4dee5e09862134b8821ba2fddbf8bf
0x1e5: V154 = 0x40
0x1e7: V155 = M[0x40]
0x1e8: V156 = 0x40
0x1ea: V157 = M[0x40]
0x1ed: V158 = SUB V155 V157
0x1ef: LOG V157 V158 0x72c874aeff0b183a56e2b79c71b46e1aed4dee5e09862134b8821ba2fddbf8bf
0x1f0: V159 = 0x2
0x1f3: V160 = S[0x2]
0x1f6: V161 = 0xff0000000000000000000000000000000000000000
0x20c: V162 = NOT 0xff0000000000000000000000000000000000000000
0x20d: V163 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V160
0x20e: V164 = 0xa0
0x210: V165 = 0x2
0x212: V166 = EXP 0x2 0xa0
---
Entry stack: [V10, 0xc7, 0x0]
Stack pops: 0
Stack additions: [0x2, 0x2, V163, 0x10000000000000000000000000000000000000000, 0x2]
Exit stack: [V10, 0xc7, 0x0, 0x2, 0x2, V163, 0x10000000000000000000000000000000000000000, 0x2]

================================

Block 0x214
[0x214:0x24d]
---
Predecessors: [0x1c3]
Successors: [0x24e, 0x252]
---
0x214 JUMPDEST
0x215 MUL
0x216 OR
0x217 SWAP1
0x218 SSTORE
0x219 POP
0x21a PUSH1 0x1
0x21c SLOAD
0x21d PUSH1 0x1
0x21f PUSH1 0xa0
0x221 PUSH1 0x2
0x223 EXP
0x224 SUB
0x225 SWAP1
0x226 DUP2
0x227 AND
0x228 SWAP1
0x229 ADDRESS
0x22a AND
0x22b BALANCE
0x22c DUP1
0x22d ISZERO
0x22e PUSH2 0x8fc
0x231 MUL
0x232 SWAP1
0x233 PUSH1 0x40
0x235 MLOAD
0x236 PUSH1 0x0
0x238 PUSH1 0x40
0x23a MLOAD
0x23b DUP1
0x23c DUP4
0x23d SUB
0x23e DUP2
0x23f DUP6
0x240 DUP9
0x241 DUP9
0x242 CALL
0x243 SWAP4
0x244 POP
0x245 POP
0x246 POP
0x247 POP
0x248 ISZERO
0x249 ISZERO
0x24a PUSH2 0x252
0x24d JUMPI
---
0x214: JUMPDEST 
0x215: V167 = MUL 0x2 0x10000000000000000000000000000000000000000
0x216: V168 = OR 0x20000000000000000000000000000000000000000 V163
0x218: S[0x2] = V168
0x21a: V169 = 0x1
0x21c: V170 = S[0x1]
0x21d: V171 = 0x1
0x21f: V172 = 0xa0
0x221: V173 = 0x2
0x223: V174 = EXP 0x2 0xa0
0x224: V175 = SUB 0x10000000000000000000000000000000000000000 0x1
0x227: V176 = AND 0xffffffffffffffffffffffffffffffffffffffff V170
0x229: V177 = ADDRESS
0x22a: V178 = AND V177 0xffffffffffffffffffffffffffffffffffffffff
0x22b: V179 = BALANCE V178
0x22d: V180 = ISZERO V179
0x22e: V181 = 0x8fc
0x231: V182 = MUL 0x8fc V180
0x233: V183 = 0x40
0x235: V184 = M[0x40]
0x236: V185 = 0x0
0x238: V186 = 0x40
0x23a: V187 = M[0x40]
0x23d: V188 = SUB V184 V187
0x242: V189 = CALL V182 V176 V179 V187 V188 V187 0x0
0x248: V190 = ISZERO V189
0x249: V191 = ISZERO V190
0x24a: V192 = 0x252
0x24d: JUMPI 0x252 V191
---
Entry stack: [V10, 0xc7, 0x0, 0x2, 0x2, V163, 0x10000000000000000000000000000000000000000, 0x2]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0xc7, 0x0]

================================

Block 0x24e
[0x24e:0x251]
---
Predecessors: [0x214]
Successors: []
---
0x24e PUSH1 0x0
0x250 DUP1
0x251 REVERT
---
0x24e: V193 = 0x0
0x251: REVERT 0x0 0x0
---
Entry stack: [V10, 0xc7, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc7, 0x0]

================================

Block 0x252
[0x252:0x252]
---
Predecessors: [0x214, 0x33d]
Successors: [0x253]
---
0x252 JUMPDEST
---
0x252: JUMPDEST 
---
Entry stack: [V10, 0xc7, {0x0, 0x1}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc7, {0x0, 0x1}]

================================

Block 0x253
[0x253:0x253]
---
Predecessors: [0x252]
Successors: [0x254]
---
0x253 JUMPDEST
---
0x253: JUMPDEST 
---
Entry stack: [V10, 0xc7, {0x0, 0x1}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc7, {0x0, 0x1}]

================================

Block 0x254
[0x254:0x255]
---
Predecessors: [0x253]
Successors: [0x256]
---
0x254 JUMPDEST
0x255 POP
---
0x254: JUMPDEST 
---
Entry stack: [V10, 0xc7, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xc7]

================================

Block 0x256
[0x256:0x257]
---
Predecessors: [0x254]
Successors: [0xc7]
---
0x256 JUMPDEST
0x257 JUMP
---
0x256: JUMPDEST 
0x257: JUMP 0xc7
---
Entry stack: [V10, 0xc7]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x258
[0x258:0x25d]
---
Predecessors: [0xd4]
Successors: [0xdc]
---
0x258 JUMPDEST
0x259 PUSH1 0x0
0x25b SLOAD
0x25c DUP2
0x25d JUMP
---
0x258: JUMPDEST 
0x259: V194 = 0x0
0x25b: V195 = S[0x0]
0x25d: JUMP 0xdc
---
Entry stack: [V10, 0xdc]
Stack pops: 1
Stack additions: [S0, V195]
Exit stack: [V10, 0xdc, V195]

================================

Block 0x25e
[0x25e:0x26c]
---
Predecessors: [0xf9]
Successors: [0x98]
---
0x25e JUMPDEST
0x25f PUSH1 0x2
0x261 SLOAD
0x262 PUSH1 0x1
0x264 PUSH1 0xa0
0x266 PUSH1 0x2
0x268 EXP
0x269 SUB
0x26a AND
0x26b DUP2
0x26c JUMP
---
0x25e: JUMPDEST 
0x25f: V196 = 0x2
0x261: V197 = S[0x2]
0x262: V198 = 0x1
0x264: V199 = 0xa0
0x266: V200 = 0x2
0x268: V201 = EXP 0x2 0xa0
0x269: V202 = SUB 0x10000000000000000000000000000000000000000 0x1
0x26a: V203 = AND 0xffffffffffffffffffffffffffffffffffffffff V197
0x26c: JUMP 0x98
---
Entry stack: [V10, 0x98]
Stack pops: 1
Stack additions: [S0, V203]
Exit stack: [V10, 0x98, V203]

================================

Block 0x26d
[0x26d:0x283]
---
Predecessors: [0x128]
Successors: [0x284, 0x288]
---
0x26d JUMPDEST
0x26e PUSH1 0x2
0x270 SLOAD
0x271 CALLER
0x272 PUSH1 0x1
0x274 PUSH1 0xa0
0x276 PUSH1 0x2
0x278 EXP
0x279 SUB
0x27a SWAP1
0x27b DUP2
0x27c AND
0x27d SWAP2
0x27e AND
0x27f EQ
0x280 PUSH2 0x288
0x283 JUMPI
---
0x26d: JUMPDEST 
0x26e: V204 = 0x2
0x270: V205 = S[0x2]
0x271: V206 = CALLER
0x272: V207 = 0x1
0x274: V208 = 0xa0
0x276: V209 = 0x2
0x278: V210 = EXP 0x2 0xa0
0x279: V211 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27c: V212 = AND 0xffffffffffffffffffffffffffffffffffffffff V206
0x27e: V213 = AND V205 0xffffffffffffffffffffffffffffffffffffffff
0x27f: V214 = EQ V213 V212
0x280: V215 = 0x288
0x283: JUMPI 0x288 V214
---
Entry stack: [V10, 0xc7]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc7]

================================

Block 0x284
[0x284:0x287]
---
Predecessors: [0x26d]
Successors: []
---
0x284 PUSH1 0x0
0x286 DUP1
0x287 REVERT
---
0x284: V216 = 0x0
0x287: REVERT 0x0 0x0
---
Entry stack: [V10, 0xc7]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc7]

================================

Block 0x288
[0x288:0x28b]
---
Predecessors: [0x26d]
Successors: [0x28c]
---
0x288 JUMPDEST
0x289 PUSH1 0x1
0x28b DUP1
---
0x288: JUMPDEST 
0x289: V217 = 0x1
---
Entry stack: [V10, 0xc7]
Stack pops: 0
Stack additions: [0x1, 0x1]
Exit stack: [V10, 0xc7, 0x1, 0x1]

================================

Block 0x28c
[0x28c:0x2a2]
---
Predecessors: [0x288]
Successors: [0x2a3, 0x2a4]
---
0x28c JUMPDEST
0x28d PUSH1 0x2
0x28f DUP1
0x290 SLOAD
0x291 PUSH1 0xa0
0x293 PUSH1 0x2
0x295 EXP
0x296 SWAP1
0x297 DIV
0x298 PUSH1 0xff
0x29a AND
0x29b SWAP1
0x29c DUP2
0x29d GT
0x29e ISZERO
0x29f PUSH2 0x2a4
0x2a2 JUMPI
---
0x28c: JUMPDEST 
0x28d: V218 = 0x2
0x290: V219 = S[0x2]
0x291: V220 = 0xa0
0x293: V221 = 0x2
0x295: V222 = EXP 0x2 0xa0
0x297: V223 = DIV V219 0x10000000000000000000000000000000000000000
0x298: V224 = 0xff
0x29a: V225 = AND 0xff V223
0x29d: V226 = GT V225 0x2
0x29e: V227 = ISZERO V226
0x29f: V228 = 0x2a4
0x2a2: JUMPI 0x2a4 V227
---
Entry stack: [V10, 0xc7, 0x1, 0x1]
Stack pops: 0
Stack additions: [V225]
Exit stack: [V10, 0xc7, 0x1, 0x1, V225]

================================

Block 0x2a3
[0x2a3:0x2a3]
---
Predecessors: [0x28c]
Successors: []
---
0x2a3 INVALID
---
0x2a3: INVALID 
---
Entry stack: [V10, 0xc7, 0x1, 0x1, V225]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc7, 0x1, 0x1, V225]

================================

Block 0x2a4
[0x2a4:0x2a9]
---
Predecessors: [0x28c]
Successors: [0x2aa, 0x2ae]
---
0x2a4 JUMPDEST
0x2a5 EQ
0x2a6 PUSH2 0x2ae
0x2a9 JUMPI
---
0x2a4: JUMPDEST 
0x2a5: V229 = EQ V225 0x1
0x2a6: V230 = 0x2ae
0x2a9: JUMPI 0x2ae V229
---
Entry stack: [V10, 0xc7, 0x1, 0x1, V225]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0xc7, 0x1]

================================

Block 0x2aa
[0x2aa:0x2ad]
---
Predecessors: [0x2a4]
Successors: []
---
0x2aa PUSH1 0x0
0x2ac DUP1
0x2ad REVERT
---
0x2aa: V231 = 0x0
0x2ad: REVERT 0x0 0x0
---
Entry stack: [V10, 0xc7, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc7, 0x1]

================================

Block 0x2ae
[0x2ae:0x2fe]
---
Predecessors: [0x2a4]
Successors: [0x2ff]
---
0x2ae JUMPDEST
0x2af PUSH32 0xe89152acd703c9d8c7d28829d443260b411454d45394e7995815140c8cbcbcf7
0x2d0 PUSH1 0x40
0x2d2 MLOAD
0x2d3 PUSH1 0x40
0x2d5 MLOAD
0x2d6 DUP1
0x2d7 SWAP2
0x2d8 SUB
0x2d9 SWAP1
0x2da LOG1
0x2db PUSH1 0x2
0x2dd DUP1
0x2de SLOAD
0x2df DUP2
0x2e0 SWAP1
0x2e1 PUSH21 0xff0000000000000000000000000000000000000000
0x2f7 NOT
0x2f8 AND
0x2f9 PUSH1 0xa0
0x2fb PUSH1 0x2
0x2fd EXP
0x2fe DUP3
---
0x2ae: JUMPDEST 
0x2af: V232 = 0xe89152acd703c9d8c7d28829d443260b411454d45394e7995815140c8cbcbcf7
0x2d0: V233 = 0x40
0x2d2: V234 = M[0x40]
0x2d3: V235 = 0x40
0x2d5: V236 = M[0x40]
0x2d8: V237 = SUB V234 V236
0x2da: LOG V236 V237 0xe89152acd703c9d8c7d28829d443260b411454d45394e7995815140c8cbcbcf7
0x2db: V238 = 0x2
0x2de: V239 = S[0x2]
0x2e1: V240 = 0xff0000000000000000000000000000000000000000
0x2f7: V241 = NOT 0xff0000000000000000000000000000000000000000
0x2f8: V242 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V239
0x2f9: V243 = 0xa0
0x2fb: V244 = 0x2
0x2fd: V245 = EXP 0x2 0xa0
---
Entry stack: [V10, 0xc7, 0x1]
Stack pops: 0
Stack additions: [0x2, 0x2, V242, 0x10000000000000000000000000000000000000000, 0x2]
Exit stack: [V10, 0xc7, 0x1, 0x2, 0x2, V242, 0x10000000000000000000000000000000000000000, 0x2]

================================

Block 0x2ff
[0x2ff:0x338]
---
Predecessors: [0x2ae]
Successors: [0x339, 0x33d]
---
0x2ff JUMPDEST
0x300 MUL
0x301 OR
0x302 SWAP1
0x303 SSTORE
0x304 POP
0x305 PUSH1 0x2
0x307 SLOAD
0x308 PUSH1 0x0
0x30a SLOAD
0x30b PUSH1 0x1
0x30d PUSH1 0xa0
0x30f PUSH1 0x2
0x311 EXP
0x312 SUB
0x313 SWAP1
0x314 SWAP2
0x315 AND
0x316 SWAP1
0x317 DUP1
0x318 ISZERO
0x319 PUSH2 0x8fc
0x31c MUL
0x31d SWAP1
0x31e PUSH1 0x40
0x320 MLOAD
0x321 PUSH1 0x0
0x323 PUSH1 0x40
0x325 MLOAD
0x326 DUP1
0x327 DUP4
0x328 SUB
0x329 DUP2
0x32a DUP6
0x32b DUP9
0x32c DUP9
0x32d CALL
0x32e SWAP4
0x32f POP
0x330 POP
0x331 POP
0x332 POP
0x333 ISZERO
0x334 ISZERO
0x335 PUSH2 0x33d
0x338 JUMPI
---
0x2ff: JUMPDEST 
0x300: V246 = MUL 0x2 0x10000000000000000000000000000000000000000
0x301: V247 = OR 0x20000000000000000000000000000000000000000 V242
0x303: S[0x2] = V247
0x305: V248 = 0x2
0x307: V249 = S[0x2]
0x308: V250 = 0x0
0x30a: V251 = S[0x0]
0x30b: V252 = 0x1
0x30d: V253 = 0xa0
0x30f: V254 = 0x2
0x311: V255 = EXP 0x2 0xa0
0x312: V256 = SUB 0x10000000000000000000000000000000000000000 0x1
0x315: V257 = AND V249 0xffffffffffffffffffffffffffffffffffffffff
0x318: V258 = ISZERO V251
0x319: V259 = 0x8fc
0x31c: V260 = MUL 0x8fc V258
0x31e: V261 = 0x40
0x320: V262 = M[0x40]
0x321: V263 = 0x0
0x323: V264 = 0x40
0x325: V265 = M[0x40]
0x328: V266 = SUB V262 V265
0x32d: V267 = CALL V260 V257 V251 V265 V266 V265 0x0
0x333: V268 = ISZERO V267
0x334: V269 = ISZERO V268
0x335: V270 = 0x33d
0x338: JUMPI 0x33d V269
---
Entry stack: [V10, 0xc7, 0x1, 0x2, 0x2, V242, 0x10000000000000000000000000000000000000000, 0x2]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0xc7, 0x1]

================================

Block 0x339
[0x339:0x33c]
---
Predecessors: [0x2ff]
Successors: []
---
0x339 PUSH1 0x0
0x33b DUP1
0x33c REVERT
---
0x339: V271 = 0x0
0x33c: REVERT 0x0 0x0
---
Entry stack: [V10, 0xc7, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc7, 0x1]

================================

Block 0x33d
[0x33d:0x371]
---
Predecessors: [0x2ff]
Successors: [0x252, 0x372]
---
0x33d JUMPDEST
0x33e PUSH1 0x1
0x340 SLOAD
0x341 PUSH1 0x1
0x343 PUSH1 0xa0
0x345 PUSH1 0x2
0x347 EXP
0x348 SUB
0x349 SWAP1
0x34a DUP2
0x34b AND
0x34c SWAP1
0x34d ADDRESS
0x34e AND
0x34f BALANCE
0x350 DUP1
0x351 ISZERO
0x352 PUSH2 0x8fc
0x355 MUL
0x356 SWAP1
0x357 PUSH1 0x40
0x359 MLOAD
0x35a PUSH1 0x0
0x35c PUSH1 0x40
0x35e MLOAD
0x35f DUP1
0x360 DUP4
0x361 SUB
0x362 DUP2
0x363 DUP6
0x364 DUP9
0x365 DUP9
0x366 CALL
0x367 SWAP4
0x368 POP
0x369 POP
0x36a POP
0x36b POP
0x36c ISZERO
0x36d ISZERO
0x36e PUSH2 0x252
0x371 JUMPI
---
0x33d: JUMPDEST 
0x33e: V272 = 0x1
0x340: V273 = S[0x1]
0x341: V274 = 0x1
0x343: V275 = 0xa0
0x345: V276 = 0x2
0x347: V277 = EXP 0x2 0xa0
0x348: V278 = SUB 0x10000000000000000000000000000000000000000 0x1
0x34b: V279 = AND 0xffffffffffffffffffffffffffffffffffffffff V273
0x34d: V280 = ADDRESS
0x34e: V281 = AND V280 0xffffffffffffffffffffffffffffffffffffffff
0x34f: V282 = BALANCE V281
0x351: V283 = ISZERO V282
0x352: V284 = 0x8fc
0x355: V285 = MUL 0x8fc V283
0x357: V286 = 0x40
0x359: V287 = M[0x40]
0x35a: V288 = 0x0
0x35c: V289 = 0x40
0x35e: V290 = M[0x40]
0x361: V291 = SUB V287 V290
0x366: V292 = CALL V285 V279 V282 V290 V291 V290 0x0
0x36c: V293 = ISZERO V292
0x36d: V294 = ISZERO V293
0x36e: V295 = 0x252
0x371: JUMPI 0x252 V294
---
Entry stack: [V10, 0xc7, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc7, 0x1]

================================

Block 0x372
[0x372:0x375]
---
Predecessors: [0x33d]
Successors: []
---
0x372 PUSH1 0x0
0x374 DUP1
0x375 REVERT
---
0x372: V296 = 0x0
0x375: REVERT 0x0 0x0
---
Entry stack: [V10, 0xc7, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc7, 0x1]

================================

Block 0x376
[0x376:0x376]
---
Predecessors: []
Successors: [0x377]
---
0x376 JUMPDEST
---
0x376: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x377
[0x377:0x377]
---
Predecessors: [0x376]
Successors: [0x378]
---
0x377 JUMPDEST
---
0x377: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x378
[0x378:0x379]
---
Predecessors: [0x377]
Successors: [0x37a]
---
0x378 JUMPDEST
0x379 POP
---
0x378: JUMPDEST 
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x37a
[0x37a:0x37b]
---
Predecessors: [0x378]
Successors: []
Has unresolved jump.
---
0x37a JUMPDEST
0x37b JUMP
---
0x37a: JUMPDEST 
0x37b: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x37c
[0x37c:0x38b]
---
Predecessors: [0x13d]
Successors: [0x145]
---
0x37c JUMPDEST
0x37d PUSH1 0x2
0x37f SLOAD
0x380 PUSH1 0xa0
0x382 PUSH1 0x2
0x384 EXP
0x385 SWAP1
0x386 DIV
0x387 PUSH1 0xff
0x389 AND
0x38a DUP2
0x38b JUMP
---
0x37c: JUMPDEST 
0x37d: V297 = 0x2
0x37f: V298 = S[0x2]
0x380: V299 = 0xa0
0x382: V300 = 0x2
0x384: V301 = EXP 0x2 0xa0
0x386: V302 = DIV V298 0x10000000000000000000000000000000000000000
0x387: V303 = 0xff
0x389: V304 = AND 0xff V302
0x38b: JUMP 0x145
---
Entry stack: [V10, 0x145]
Stack pops: 1
Stack additions: [S0, V304]
Exit stack: [V10, 0x145, V304]

================================

Block 0x38c
[0x38c:0x38f]
---
Predecessors: [0x169]
Successors: [0x390]
---
0x38c JUMPDEST
0x38d PUSH1 0x0
0x38f DUP1
---
0x38c: JUMPDEST 
0x38d: V305 = 0x0
---
Entry stack: [V10, 0xc7]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V10, 0xc7, 0x0, 0x0]

================================

Block 0x390
[0x390:0x3a6]
---
Predecessors: [0x38c]
Successors: [0x3a7, 0x3a8]
---
0x390 JUMPDEST
0x391 PUSH1 0x2
0x393 DUP1
0x394 SLOAD
0x395 PUSH1 0xa0
0x397 PUSH1 0x2
0x399 EXP
0x39a SWAP1
0x39b DIV
0x39c PUSH1 0xff
0x39e AND
0x39f SWAP1
0x3a0 DUP2
0x3a1 GT
0x3a2 ISZERO
0x3a3 PUSH2 0x3a8
0x3a6 JUMPI
---
0x390: JUMPDEST 
0x391: V306 = 0x2
0x394: V307 = S[0x2]
0x395: V308 = 0xa0
0x397: V309 = 0x2
0x399: V310 = EXP 0x2 0xa0
0x39b: V311 = DIV V307 0x10000000000000000000000000000000000000000
0x39c: V312 = 0xff
0x39e: V313 = AND 0xff V311
0x3a1: V314 = GT V313 0x2
0x3a2: V315 = ISZERO V314
0x3a3: V316 = 0x3a8
0x3a6: JUMPI 0x3a8 V315
---
Entry stack: [V10, 0xc7, 0x0, 0x0]
Stack pops: 0
Stack additions: [V313]
Exit stack: [V10, 0xc7, 0x0, 0x0, V313]

================================

Block 0x3a7
[0x3a7:0x3a7]
---
Predecessors: [0x390]
Successors: []
---
0x3a7 INVALID
---
0x3a7: INVALID 
---
Entry stack: [V10, 0xc7, 0x0, 0x0, V313]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc7, 0x0, 0x0, V313]

================================

Block 0x3a8
[0x3a8:0x3ad]
---
Predecessors: [0x390]
Successors: [0x3ae, 0x3b2]
---
0x3a8 JUMPDEST
0x3a9 EQ
0x3aa PUSH2 0x3b2
0x3ad JUMPI
---
0x3a8: JUMPDEST 
0x3a9: V317 = EQ V313 0x0
0x3aa: V318 = 0x3b2
0x3ad: JUMPI 0x3b2 V317
---
Entry stack: [V10, 0xc7, 0x0, 0x0, V313]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0xc7, 0x0]

================================

Block 0x3ae
[0x3ae:0x3b1]
---
Predecessors: [0x3a8]
Successors: []
---
0x3ae PUSH1 0x0
0x3b0 DUP1
0x3b1 REVERT
---
0x3ae: V319 = 0x0
0x3b1: REVERT 0x0 0x0
---
Entry stack: [V10, 0xc7, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc7, 0x0]

================================

Block 0x3b2
[0x3b2:0x3c1]
---
Predecessors: [0x3a8]
Successors: [0x3c2, 0x3c6]
---
0x3b2 JUMPDEST
0x3b3 PUSH1 0x0
0x3b5 SLOAD
0x3b6 PUSH1 0x2
0x3b8 MUL
0x3b9 CALLVALUE
0x3ba EQ
0x3bb DUP1
0x3bc ISZERO
0x3bd ISZERO
0x3be PUSH2 0x3c6
0x3c1 JUMPI
---
0x3b2: JUMPDEST 
0x3b3: V320 = 0x0
0x3b5: V321 = S[0x0]
0x3b6: V322 = 0x2
0x3b8: V323 = MUL 0x2 V321
0x3b9: V324 = CALLVALUE
0x3ba: V325 = EQ V324 V323
0x3bc: V326 = ISZERO V325
0x3bd: V327 = ISZERO V326
0x3be: V328 = 0x3c6
0x3c1: JUMPI 0x3c6 V327
---
Entry stack: [V10, 0xc7, 0x0]
Stack pops: 0
Stack additions: [V325]
Exit stack: [V10, 0xc7, 0x0, V325]

================================

Block 0x3c2
[0x3c2:0x3c5]
---
Predecessors: [0x3b2]
Successors: []
---
0x3c2 PUSH1 0x0
0x3c4 DUP1
0x3c5 REVERT
---
0x3c2: V329 = 0x0
0x3c5: REVERT 0x0 0x0
---
Entry stack: [V10, 0xc7, 0x0, V325]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc7, 0x0, V325]

================================

Block 0x3c6
[0x3c6:0x43d]
---
Predecessors: [0x3b2]
Successors: [0x43e]
---
0x3c6 JUMPDEST
0x3c7 PUSH32 0xd5d55c8a68912e9a110618df8d5e2e83b8d83211c57a8ddd1203df92885dc881
0x3e8 PUSH1 0x40
0x3ea MLOAD
0x3eb PUSH1 0x40
0x3ed MLOAD
0x3ee DUP1
0x3ef SWAP2
0x3f0 SUB
0x3f1 SWAP1
0x3f2 LOG1
0x3f3 PUSH1 0x2
0x3f5 DUP1
0x3f6 SLOAD
0x3f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x40c NOT
0x40d AND
0x40e CALLER
0x40f PUSH1 0x1
0x411 PUSH1 0xa0
0x413 PUSH1 0x2
0x415 EXP
0x416 SUB
0x417 AND
0x418 OR
0x419 DUP1
0x41a DUP3
0x41b SSTORE
0x41c PUSH1 0x1
0x41e SWAP2
0x41f SWAP1
0x420 PUSH21 0xff0000000000000000000000000000000000000000
0x436 NOT
0x437 AND
0x438 PUSH1 0xa0
0x43a PUSH1 0x2
0x43c EXP
0x43d DUP4
---
0x3c6: JUMPDEST 
0x3c7: V330 = 0xd5d55c8a68912e9a110618df8d5e2e83b8d83211c57a8ddd1203df92885dc881
0x3e8: V331 = 0x40
0x3ea: V332 = M[0x40]
0x3eb: V333 = 0x40
0x3ed: V334 = M[0x40]
0x3f0: V335 = SUB V332 V334
0x3f2: LOG V334 V335 0xd5d55c8a68912e9a110618df8d5e2e83b8d83211c57a8ddd1203df92885dc881
0x3f3: V336 = 0x2
0x3f6: V337 = S[0x2]
0x3f7: V338 = 0xffffffffffffffffffffffffffffffffffffffff
0x40c: V339 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x40d: V340 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V337
0x40e: V341 = CALLER
0x40f: V342 = 0x1
0x411: V343 = 0xa0
0x413: V344 = 0x2
0x415: V345 = EXP 0x2 0xa0
0x416: V346 = SUB 0x10000000000000000000000000000000000000000 0x1
0x417: V347 = AND 0xffffffffffffffffffffffffffffffffffffffff V341
0x418: V348 = OR V347 V340
0x41b: S[0x2] = V348
0x41c: V349 = 0x1
0x420: V350 = 0xff0000000000000000000000000000000000000000
0x436: V351 = NOT 0xff0000000000000000000000000000000000000000
0x437: V352 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V348
0x438: V353 = 0xa0
0x43a: V354 = 0x2
0x43c: V355 = EXP 0x2 0xa0
---
Entry stack: [V10, 0xc7, 0x0, V325]
Stack pops: 0
Stack additions: [0x1, 0x2, V352, 0x10000000000000000000000000000000000000000, 0x1]
Exit stack: [V10, 0xc7, 0x0, V325, 0x1, 0x2, V352, 0x10000000000000000000000000000000000000000, 0x1]

================================

Block 0x43e
[0x43e:0x443]
---
Predecessors: [0x3c6]
Successors: [0x444]
---
0x43e JUMPDEST
0x43f MUL
0x440 OR
0x441 SWAP1
0x442 SSTORE
0x443 POP
---
0x43e: JUMPDEST 
0x43f: V356 = MUL 0x1 0x10000000000000000000000000000000000000000
0x440: V357 = OR 0x10000000000000000000000000000000000000000 V352
0x442: S[0x2] = V357
---
Entry stack: [V10, 0xc7, 0x0, V325, 0x1, 0x2, V352, 0x10000000000000000000000000000000000000000, 0x1]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0xc7, 0x0, V325]

================================

Block 0x444
[0x444:0x444]
---
Predecessors: [0x43e]
Successors: [0x445]
---
0x444 JUMPDEST
---
0x444: JUMPDEST 
---
Entry stack: [V10, 0xc7, 0x0, V325]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xc7, 0x0, V325]

================================

Block 0x445
[0x445:0x446]
---
Predecessors: [0x444]
Successors: [0x447]
---
0x445 JUMPDEST
0x446 POP
---
0x445: JUMPDEST 
---
Entry stack: [V10, 0xc7, 0x0, V325]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xc7, 0x0]

================================

Block 0x447
[0x447:0x449]
---
Predecessors: [0x445]
Successors: [0xc7]
---
0x447 JUMPDEST
0x448 POP
0x449 JUMP
---
0x447: JUMPDEST 
0x449: JUMP 0xc7
---
Entry stack: [V10, 0xc7, 0x0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x44a
[0x44a:0x488]
---
Predecessors: []
Successors: []
---
0x44a STOP
0x44b LOG1
0x44c PUSH6 0x627a7a723058
0x453 SHA3
0x454 ORIGIN
0x455 SWAP12
0x456 SWAP8
0x457 MISSING 0xb2
0x458 SWAP7
0x459 MISSING 0xfc
0x45a BLOCKHASH
0x45b MISSING 0xc2
0x45c MISSING 0x2c
0x45d MISSING 0xd6
0x45e PUSH7 0x1f0f93500de3f1
0x466 MISSING 0xb4
0x467 NUMBER
0x468 MISSING 0xc5
0x469 SMOD
0x46a MULMOD
0x46b SWAP10
0x46c PUSH28 0x7d77712335dd00029
---
0x44a: STOP 
0x44b: LOG S0 S1 S2
0x44c: V358 = 0x627a7a723058
0x453: V359 = SHA3 0x627a7a723058 S3
0x454: V360 = ORIGIN
0x457: MISSING 0xb2
0x459: MISSING 0xfc
0x45a: V361 = BLOCKHASH S0
0x45b: MISSING 0xc2
0x45c: MISSING 0x2c
0x45d: MISSING 0xd6
0x45e: V362 = 0x1f0f93500de3f1
0x466: MISSING 0xb4
0x467: V363 = NUMBER
0x468: MISSING 0xc5
0x469: V364 = SMOD S0 S1
0x46a: V365 = MULMOD V364 S2 S3
0x46c: V366 = 0x7d77712335dd00029
---
Entry stack: []
Stack pops: 0
Stack additions: [S10, V359, S4, S5, S6, S7, S8, S9, S14, S11, S12, S13, V360, S7, S1, S2, S3, S4, S5, S6, S0, V361, 0x1f0f93500de3f1, V363, 0x7d77712335dd00029, S13, S4, S5, S6, S7, S8, S9, S10, S11, S12, V365]
Exit stack: []

================================

Function 0:
Public function signature: 0x8551a53
Entry block: 0x85
Exit block: 0x98
Body: 0x85, 0x8c, 0x90, 0x98, 0x173

Function 1:
Public function signature: 0x35a063b4
Entry block: 0xb4
Exit block: 0xc7
Body: 0xb4, 0xbb, 0xbf, 0xc7, 0x182, 0x199, 0x19d, 0x1a1, 0x1b8, 0x1b9, 0x1bf, 0x1c3, 0x214, 0x24e, 0x252, 0x253, 0x254, 0x256

Function 2:
Public function signature: 0x3fa4f245
Entry block: 0xc9
Exit block: 0xdc
Body: 0xc9, 0xd0, 0xd4, 0xdc, 0x258

Function 3:
Public function signature: 0x7150d8ae
Entry block: 0xee
Exit block: 0x98
Body: 0x98, 0xee, 0xf5, 0xf9, 0x25e

Function 4:
Public function signature: 0x73fac6f0
Entry block: 0x11d
Exit block: 0xc7
Body: 0xc7, 0x11d, 0x124, 0x128, 0x252, 0x253, 0x254, 0x256, 0x26d, 0x284, 0x288, 0x28c, 0x2a3, 0x2a4, 0x2aa, 0x2ae, 0x2ff, 0x339, 0x33d, 0x372

Function 5:
Public function signature: 0xc19d93fb
Entry block: 0x132
Exit block: 0x155
Body: 0x132, 0x139, 0x13d, 0x145, 0x154, 0x155, 0x37c

Function 6:
Public function signature: 0xd6960697
Entry block: 0x169
Exit block: 0xc7
Body: 0xc7, 0x169, 0x38c, 0x390, 0x3a7, 0x3a8, 0x3ae, 0x3b2, 0x3c2, 0x3c6, 0x43e, 0x444, 0x445, 0x447

Function 7:
Public fallback function
Entry block: 0x80
Exit block: 0x80
Body: 0x80

