Block 0x0
[0x0:0x9]
---
Predecessors: []
Successors: [0xa, 0x1d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH1 0x1d
0x9 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x1d
0x9: JUMPI 0x1d V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa
[0xa:0x1c]
---
Predecessors: [0x0]
Successors: [0x1d, 0x4f]
---
0xa PUSH1 0xe0
0xc PUSH1 0x2
0xe EXP
0xf PUSH1 0x0
0x11 CALLDATALOAD
0x12 DIV
0x13 PUSH4 0xc96cd46f
0x18 DUP2
0x19 EQ
0x1a PUSH1 0x4f
0x1c JUMPI
---
0xa: V5 = 0xe0
0xc: V6 = 0x2
0xe: V7 = EXP 0x2 0xe0
0xf: V8 = 0x0
0x11: V9 = CALLDATALOAD 0x0
0x12: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x13: V11 = 0xc96cd46f
0x19: V12 = EQ V10 0xc96cd46f
0x1a: V13 = 0x4f
0x1c: JUMPI 0x4f V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1d
[0x1d:0x2a]
---
Predecessors: [0x0, 0xa]
Successors: [0x2b, 0x83]
---
0x1d JUMPDEST
0x1e PUSH1 0x81
0x20 PUSH1 0x0
0x22 SLOAD
0x23 PUSH1 0xff
0x25 AND
0x26 ISZERO
0x27 ISZERO
0x28 PUSH1 0x83
0x2a JUMPI
---
0x1d: JUMPDEST 
0x1e: V14 = 0x81
0x20: V15 = 0x0
0x22: V16 = S[0x0]
0x23: V17 = 0xff
0x25: V18 = AND 0xff V16
0x26: V19 = ISZERO V18
0x27: V20 = ISZERO V19
0x28: V21 = 0x83
0x2a: JUMPI 0x83 V20
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x81]
Exit stack: [V10, 0x81]

================================

Block 0x2b
[0x2b:0x4b]
---
Predecessors: [0x1d]
Successors: [0x4c, 0xb3]
---
0x2b PUSH1 0x1
0x2d PUSH1 0xa0
0x2f PUSH1 0x2
0x31 EXP
0x32 SUB
0x33 CALLER
0x34 AND
0x35 PUSH1 0x0
0x37 CALLVALUE
0x38 PUSH1 0x60
0x3a DUP3
0x3b DUP2
0x3c DUP2
0x3d DUP2
0x3e DUP6
0x3f DUP9
0x40 DUP4
0x41 CALL
0x42 SWAP4
0x43 POP
0x44 POP
0x45 POP
0x46 POP
0x47 ISZERO
0x48 ISZERO
0x49 PUSH1 0xb3
0x4b JUMPI
---
0x2b: V22 = 0x1
0x2d: V23 = 0xa0
0x2f: V24 = 0x2
0x31: V25 = EXP 0x2 0xa0
0x32: V26 = SUB 0x10000000000000000000000000000000000000000 0x1
0x33: V27 = CALLER
0x34: V28 = AND V27 0xffffffffffffffffffffffffffffffffffffffff
0x35: V29 = 0x0
0x37: V30 = CALLVALUE
0x38: V31 = 0x60
0x41: V32 = CALL 0x0 V28 V30 0x60 0x0 0x60 0x0
0x47: V33 = ISZERO V32
0x48: V34 = ISZERO V33
0x49: V35 = 0xb3
0x4b: JUMPI 0xb3 V34
---
Entry stack: [V10, 0x81]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x81]

================================

Block 0x4c
[0x4c:0x4e]
---
Predecessors: [0x2b]
Successors: []
---
0x4c PUSH1 0x2
0x4e JUMP
---
0x4c: V36 = 0x2
0x4e: THROW 
---
Entry stack: [V10, 0x81]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x81]

================================

Block 0x4f
[0x4f:0x6e]
---
Predecessors: [0xa]
Successors: [0x6f, 0xb3]
---
0x4f JUMPDEST
0x50 PUSH1 0x81
0x52 PUSH1 0x0
0x54 SLOAD
0x55 PUSH2 0x100
0x58 SWAP1
0x59 DIV
0x5a PUSH1 0x1
0x5c PUSH1 0xa0
0x5e PUSH1 0x2
0x60 EXP
0x61 SUB
0x62 SWAP1
0x63 DUP2
0x64 AND
0x65 CALLER
0x66 SWAP2
0x67 SWAP1
0x68 SWAP2
0x69 AND
0x6a EQ
0x6b ISZERO
0x6c PUSH1 0xb3
0x6e JUMPI
---
0x4f: JUMPDEST 
0x50: V37 = 0x81
0x52: V38 = 0x0
0x54: V39 = S[0x0]
0x55: V40 = 0x100
0x59: V41 = DIV V39 0x100
0x5a: V42 = 0x1
0x5c: V43 = 0xa0
0x5e: V44 = 0x2
0x60: V45 = EXP 0x2 0xa0
0x61: V46 = SUB 0x10000000000000000000000000000000000000000 0x1
0x64: V47 = AND 0xffffffffffffffffffffffffffffffffffffffff V41
0x65: V48 = CALLER
0x69: V49 = AND V48 0xffffffffffffffffffffffffffffffffffffffff
0x6a: V50 = EQ V49 V47
0x6b: V51 = ISZERO V50
0x6c: V52 = 0xb3
0x6e: JUMPI 0xb3 V51
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x81]
Exit stack: [V10, 0x81]

================================

Block 0x6f
[0x6f:0x80]
---
Predecessors: [0x4f]
Successors: []
---
0x6f PUSH1 0x0
0x71 SLOAD
0x72 PUSH2 0x100
0x75 SWAP1
0x76 DIV
0x77 PUSH1 0x1
0x79 PUSH1 0xa0
0x7b PUSH1 0x2
0x7d EXP
0x7e SUB
0x7f AND
0x80 SELFDESTRUCT
---
0x6f: V53 = 0x0
0x71: V54 = S[0x0]
0x72: V55 = 0x100
0x76: V56 = DIV V54 0x100
0x77: V57 = 0x1
0x79: V58 = 0xa0
0x7b: V59 = 0x2
0x7d: V60 = EXP 0x2 0xa0
0x7e: V61 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7f: V62 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0x80: SELFDESTRUCT V62
---
Entry stack: [V10, 0x81]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x81]

================================

Block 0x81
[0x81:0x82]
---
Predecessors: [0xb3]
Successors: []
---
0x81 JUMPDEST
0x82 STOP
---
0x81: JUMPDEST 
0x82: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x83
[0x83:0xaf]
---
Predecessors: [0x1d]
Successors: [0xb0, 0xb3]
---
0x83 JUMPDEST
0x84 PUSH20 0xfe950a9a07bccd873cce06c56f0dc515e0ba6248
0x99 PUSH1 0x0
0x9b CALLVALUE
0x9c PUSH1 0x60
0x9e DUP3
0x9f DUP2
0xa0 DUP2
0xa1 DUP2
0xa2 DUP6
0xa3 DUP9
0xa4 DUP4
0xa5 CALL
0xa6 SWAP4
0xa7 POP
0xa8 POP
0xa9 POP
0xaa POP
0xab ISZERO
0xac ISZERO
0xad PUSH1 0xb3
0xaf JUMPI
---
0x83: JUMPDEST 
0x84: V63 = 0xfe950a9a07bccd873cce06c56f0dc515e0ba6248
0x99: V64 = 0x0
0x9b: V65 = CALLVALUE
0x9c: V66 = 0x60
0xa5: V67 = CALL 0x0 0xfe950a9a07bccd873cce06c56f0dc515e0ba6248 V65 0x60 0x0 0x60 0x0
0xab: V68 = ISZERO V67
0xac: V69 = ISZERO V68
0xad: V70 = 0xb3
0xaf: JUMPI 0xb3 V69
---
Entry stack: [V10, 0x81]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x81]

================================

Block 0xb0
[0xb0:0xb2]
---
Predecessors: [0x83]
Successors: []
---
0xb0 PUSH1 0x2
0xb2 JUMP
---
0xb0: V71 = 0x2
0xb2: THROW 
---
Entry stack: [V10, 0x81]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x81]

================================

Block 0xb3
[0xb3:0xb4]
---
Predecessors: [0x2b, 0x4f, 0x83]
Successors: [0x81]
---
0xb3 JUMPDEST
0xb4 JUMP
---
0xb3: JUMPDEST 
0xb4: JUMP 0x81
---
Entry stack: [V10, 0x81]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Function 0:
Public function signature: 0xc96cd46f
Entry block: 0x4f
Exit block: 0x81
Body: 0x4f, 0x6f, 0x81, 0xb3

Function 1:
Public fallback function
Entry block: 0x1d
Exit block: 0x81
Body: 0x1d, 0x2b, 0x4c, 0x81, 0x83, 0xb0, 0xb3

