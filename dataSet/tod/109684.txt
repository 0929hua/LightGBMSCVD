Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x5b]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x5b
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x5b
0xc: JUMPI 0x5b V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x39]
---
Predecessors: [0x0]
Successors: [0x3a, 0x5d]
---
0xd PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2b PUSH1 0x0
0x2d CALLDATALOAD
0x2e DIV
0x2f PUSH4 0x32e5535a
0x34 DUP2
0x35 EQ
0x36 PUSH2 0x5d
0x39 JUMPI
---
0xd: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2b: V7 = 0x0
0x2d: V8 = CALLDATALOAD 0x0
0x2e: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x2f: V10 = 0x32e5535a
0x35: V11 = EQ V9 0x32e5535a
0x36: V12 = 0x5d
0x39: JUMPI 0x5d V11
---
Entry stack: []
Stack pops: 0
Stack additions: [V9]
Exit stack: [V9]

================================

Block 0x3a
[0x3a:0x44]
---
Predecessors: [0xd]
Successors: [0x45, 0xfc]
---
0x3a DUP1
0x3b PUSH4 0x3ccfd60b
0x40 EQ
0x41 PUSH2 0xfc
0x44 JUMPI
---
0x3b: V13 = 0x3ccfd60b
0x40: V14 = EQ 0x3ccfd60b V9
0x41: V15 = 0xfc
0x44: JUMPI 0xfc V14
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x45
[0x45:0x4f]
---
Predecessors: [0x3a]
Successors: [0x50, 0x111]
---
0x45 DUP1
0x46 PUSH4 0x41c0e1b5
0x4b EQ
0x4c PUSH2 0x111
0x4f JUMPI
---
0x46: V16 = 0x41c0e1b5
0x4b: V17 = EQ 0x41c0e1b5 V9
0x4c: V18 = 0x111
0x4f: JUMPI 0x111 V17
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x50
[0x50:0x5a]
---
Predecessors: [0x45]
Successors: [0x5b, 0x126]
---
0x50 DUP1
0x51 PUSH4 0x527d8f12
0x56 EQ
0x57 PUSH2 0x126
0x5a JUMPI
---
0x51: V19 = 0x527d8f12
0x56: V20 = EQ 0x527d8f12 V9
0x57: V21 = 0x126
0x5a: JUMPI 0x126 V20
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x5b
[0x5b:0x5c]
---
Predecessors: [0x0, 0x50, 0x1c9, 0x373]
Successors: []
---
0x5b JUMPDEST
0x5c STOP
---
0x5b: JUMPDEST 
0x5c: STOP 
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x5d
[0x5d:0x64]
---
Predecessors: [0xd]
Successors: [0x65, 0x69]
---
0x5d JUMPDEST
0x5e CALLVALUE
0x5f DUP1
0x60 ISZERO
0x61 PUSH2 0x69
0x64 JUMPI
---
0x5d: JUMPDEST 
0x5e: V22 = CALLVALUE
0x60: V23 = ISZERO V22
0x61: V24 = 0x69
0x64: JUMPI 0x69 V23
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V22]
Exit stack: [V9, V22]

================================

Block 0x65
[0x65:0x68]
---
Predecessors: [0x5d]
Successors: []
---
0x65 PUSH1 0x0
0x67 DUP1
0x68 REVERT
---
0x65: V25 = 0x0
0x68: REVERT 0x0 0x0
---
Entry stack: [V9, V22]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V22]

================================

Block 0x69
[0x69:0x7b]
---
Predecessors: [0x5d]
Successors: [0x7c, 0x80]
---
0x69 JUMPDEST
0x6a POP
0x6b PUSH2 0x87
0x6e PUSH1 0x4
0x70 DUP1
0x71 CALLDATASIZE
0x72 SUB
0x73 PUSH1 0x20
0x75 DUP2
0x76 LT
0x77 ISZERO
0x78 PUSH2 0x80
0x7b JUMPI
---
0x69: JUMPDEST 
0x6b: V26 = 0x87
0x6e: V27 = 0x4
0x71: V28 = CALLDATASIZE
0x72: V29 = SUB V28 0x4
0x73: V30 = 0x20
0x76: V31 = LT V29 0x20
0x77: V32 = ISZERO V31
0x78: V33 = 0x80
0x7b: JUMPI 0x80 V32
---
Entry stack: [V9, V22]
Stack pops: 1
Stack additions: [0x87, 0x4, V29]
Exit stack: [V9, 0x87, 0x4, V29]

================================

Block 0x7c
[0x7c:0x7f]
---
Predecessors: [0x69]
Successors: []
---
0x7c PUSH1 0x0
0x7e DUP1
0x7f REVERT
---
0x7c: V34 = 0x0
0x7f: REVERT 0x0 0x0
---
Entry stack: [V9, 0x87, 0x4, V29]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x87, 0x4, V29]

================================

Block 0x80
[0x80:0x86]
---
Predecessors: [0x69]
Successors: [0x14b]
---
0x80 JUMPDEST
0x81 POP
0x82 CALLDATALOAD
0x83 PUSH2 0x14b
0x86 JUMP
---
0x80: JUMPDEST 
0x82: V35 = CALLDATALOAD 0x4
0x83: V36 = 0x14b
0x86: JUMP 0x14b
---
Entry stack: [V9, 0x87, 0x4, V29]
Stack pops: 2
Stack additions: [V35]
Exit stack: [V9, 0x87, V35]

================================

Block 0x87
[0x87:0xa8]
---
Predecessors: [0x171]
Successors: [0xa9]
---
0x87 JUMPDEST
0x88 PUSH1 0x40
0x8a DUP1
0x8b MLOAD
0x8c PUSH1 0x20
0x8e DUP1
0x8f DUP3
0x90 MSTORE
0x91 DUP4
0x92 MLOAD
0x93 DUP2
0x94 DUP4
0x95 ADD
0x96 MSTORE
0x97 DUP4
0x98 MLOAD
0x99 SWAP2
0x9a SWAP3
0x9b DUP4
0x9c SWAP3
0x9d SWAP1
0x9e DUP4
0x9f ADD
0xa0 SWAP2
0xa1 DUP6
0xa2 ADD
0xa3 SWAP1
0xa4 DUP1
0xa5 DUP4
0xa6 DUP4
0xa7 PUSH1 0x0
---
0x87: JUMPDEST 
0x88: V37 = 0x40
0x8b: V38 = M[0x40]
0x8c: V39 = 0x20
0x90: M[V38] = 0x20
0x92: V40 = M[S0]
0x95: V41 = ADD V38 0x20
0x96: M[V41] = V40
0x98: V42 = M[S0]
0x9f: V43 = ADD V38 0x40
0xa2: V44 = ADD S0 0x20
0xa7: V45 = 0x0
---
Entry stack: [V9, 0x5b, V96, V101, S1, S0]
Stack pops: 1
Stack additions: [S0, V38, V38, V43, V44, V42, V42, V43, V44, 0x0]
Exit stack: [V9, 0x5b, V96, V101, S1, S0, V38, V38, V43, V44, V42, V42, V43, V44, 0x0]

================================

Block 0xa9
[0xa9:0xb1]
---
Predecessors: [0x87, 0xb2]
Successors: [0xb2, 0xc1]
---
0xa9 JUMPDEST
0xaa DUP4
0xab DUP2
0xac LT
0xad ISZERO
0xae PUSH2 0xc1
0xb1 JUMPI
---
0xa9: JUMPDEST 
0xac: V46 = LT S0 V42
0xad: V47 = ISZERO V46
0xae: V48 = 0xc1
0xb1: JUMPI 0xc1 V47
---
Entry stack: [V9, 0x5b, V96, V101, S10, S9, V38, V38, V43, V44, V42, V42, V43, V44, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V9, 0x5b, V96, V101, S10, S9, V38, V38, V43, V44, V42, V42, V43, V44, S0]

================================

Block 0xb2
[0xb2:0xc0]
---
Predecessors: [0xa9]
Successors: [0xa9]
---
0xb2 DUP2
0xb3 DUP2
0xb4 ADD
0xb5 MLOAD
0xb6 DUP4
0xb7 DUP3
0xb8 ADD
0xb9 MSTORE
0xba PUSH1 0x20
0xbc ADD
0xbd PUSH2 0xa9
0xc0 JUMP
---
0xb4: V49 = ADD S0 V44
0xb5: V50 = M[V49]
0xb8: V51 = ADD S0 V43
0xb9: M[V51] = V50
0xba: V52 = 0x20
0xbc: V53 = ADD 0x20 S0
0xbd: V54 = 0xa9
0xc0: JUMP 0xa9
---
Entry stack: [V9, 0x5b, V96, V101, S10, S9, V38, V38, V43, V44, V42, V42, V43, V44, S0]
Stack pops: 3
Stack additions: [S2, S1, V53]
Exit stack: [V9, 0x5b, V96, V101, S10, S9, V38, V38, V43, V44, V42, V42, V43, V44, V53]

================================

Block 0xc1
[0xc1:0xd4]
---
Predecessors: [0xa9]
Successors: [0xd5, 0xee]
---
0xc1 JUMPDEST
0xc2 POP
0xc3 POP
0xc4 POP
0xc5 POP
0xc6 SWAP1
0xc7 POP
0xc8 SWAP1
0xc9 DUP2
0xca ADD
0xcb SWAP1
0xcc PUSH1 0x1f
0xce AND
0xcf DUP1
0xd0 ISZERO
0xd1 PUSH2 0xee
0xd4 JUMPI
---
0xc1: JUMPDEST 
0xca: V55 = ADD V42 V43
0xcc: V56 = 0x1f
0xce: V57 = AND 0x1f V42
0xd0: V58 = ISZERO V57
0xd1: V59 = 0xee
0xd4: JUMPI 0xee V58
---
Entry stack: [V9, 0x5b, V96, V101, S10, S9, V38, V38, V43, V44, V42, V42, V43, V44, S0]
Stack pops: 7
Stack additions: [V55, V57]
Exit stack: [V9, 0x5b, V96, V101, S10, S9, V38, V38, V55, V57]

================================

Block 0xd5
[0xd5:0xed]
---
Predecessors: [0xc1]
Successors: [0xee]
---
0xd5 DUP1
0xd6 DUP3
0xd7 SUB
0xd8 DUP1
0xd9 MLOAD
0xda PUSH1 0x1
0xdc DUP4
0xdd PUSH1 0x20
0xdf SUB
0xe0 PUSH2 0x100
0xe3 EXP
0xe4 SUB
0xe5 NOT
0xe6 AND
0xe7 DUP2
0xe8 MSTORE
0xe9 PUSH1 0x20
0xeb ADD
0xec SWAP2
0xed POP
---
0xd7: V60 = SUB V55 V57
0xd9: V61 = M[V60]
0xda: V62 = 0x1
0xdd: V63 = 0x20
0xdf: V64 = SUB 0x20 V57
0xe0: V65 = 0x100
0xe3: V66 = EXP 0x100 V64
0xe4: V67 = SUB V66 0x1
0xe5: V68 = NOT V67
0xe6: V69 = AND V68 V61
0xe8: M[V60] = V69
0xe9: V70 = 0x20
0xeb: V71 = ADD 0x20 V60
---
Entry stack: [V9, 0x5b, V96, V101, S5, S4, V38, V38, V55, V57]
Stack pops: 2
Stack additions: [V71, S0]
Exit stack: [V9, 0x5b, V96, V101, S5, S4, V38, V38, V71, V57]

================================

Block 0xee
[0xee:0xfb]
---
Predecessors: [0xc1, 0xd5]
Successors: []
---
0xee JUMPDEST
0xef POP
0xf0 SWAP3
0xf1 POP
0xf2 POP
0xf3 POP
0xf4 PUSH1 0x40
0xf6 MLOAD
0xf7 DUP1
0xf8 SWAP2
0xf9 SUB
0xfa SWAP1
0xfb RETURN
---
0xee: JUMPDEST 
0xf4: V72 = 0x40
0xf6: V73 = M[0x40]
0xf9: V74 = SUB S1 V73
0xfb: RETURN V73 V74
---
Entry stack: [V9, 0x5b, V96, V101, S5, S4, V38, V38, S1, V57]
Stack pops: 5
Stack additions: []
Exit stack: [V9, 0x5b, V96, V101, S5]

================================

Block 0xfc
[0xfc:0x103]
---
Predecessors: [0x3a]
Successors: [0x104, 0x108]
---
0xfc JUMPDEST
0xfd CALLVALUE
0xfe DUP1
0xff ISZERO
0x100 PUSH2 0x108
0x103 JUMPI
---
0xfc: JUMPDEST 
0xfd: V75 = CALLVALUE
0xff: V76 = ISZERO V75
0x100: V77 = 0x108
0x103: JUMPI 0x108 V76
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V75]
Exit stack: [V9, V75]

================================

Block 0x104
[0x104:0x107]
---
Predecessors: [0xfc]
Successors: []
---
0x104 PUSH1 0x0
0x106 DUP1
0x107 REVERT
---
0x104: V78 = 0x0
0x107: REVERT 0x0 0x0
---
Entry stack: [V9, V75]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V75]

================================

Block 0x108
[0x108:0x110]
---
Predecessors: [0xfc]
Successors: [0x178]
---
0x108 JUMPDEST
0x109 POP
0x10a PUSH2 0x5b
0x10d PUSH2 0x178
0x110 JUMP
---
0x108: JUMPDEST 
0x10a: V79 = 0x5b
0x10d: V80 = 0x178
0x110: JUMP 0x178
---
Entry stack: [V9, V75]
Stack pops: 1
Stack additions: [0x5b]
Exit stack: [V9, 0x5b]

================================

Block 0x111
[0x111:0x118]
---
Predecessors: [0x45]
Successors: [0x119, 0x11d]
---
0x111 JUMPDEST
0x112 CALLVALUE
0x113 DUP1
0x114 ISZERO
0x115 PUSH2 0x11d
0x118 JUMPI
---
0x111: JUMPDEST 
0x112: V81 = CALLVALUE
0x114: V82 = ISZERO V81
0x115: V83 = 0x11d
0x118: JUMPI 0x11d V82
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V81]
Exit stack: [V9, V81]

================================

Block 0x119
[0x119:0x11c]
---
Predecessors: [0x111]
Successors: []
---
0x119 PUSH1 0x0
0x11b DUP1
0x11c REVERT
---
0x119: V84 = 0x0
0x11c: REVERT 0x0 0x0
---
Entry stack: [V9, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V81]

================================

Block 0x11d
[0x11d:0x125]
---
Predecessors: [0x111]
Successors: [0x1cc]
---
0x11d JUMPDEST
0x11e POP
0x11f PUSH2 0x5b
0x122 PUSH2 0x1cc
0x125 JUMP
---
0x11d: JUMPDEST 
0x11f: V85 = 0x5b
0x122: V86 = 0x1cc
0x125: JUMP 0x1cc
---
Entry stack: [V9, V81]
Stack pops: 1
Stack additions: [0x5b]
Exit stack: [V9, 0x5b]

================================

Block 0x126
[0x126:0x137]
---
Predecessors: [0x50]
Successors: [0x138, 0x13c]
---
0x126 JUMPDEST
0x127 PUSH2 0x5b
0x12a PUSH1 0x4
0x12c DUP1
0x12d CALLDATASIZE
0x12e SUB
0x12f PUSH1 0x40
0x131 DUP2
0x132 LT
0x133 ISZERO
0x134 PUSH2 0x13c
0x137 JUMPI
---
0x126: JUMPDEST 
0x127: V87 = 0x5b
0x12a: V88 = 0x4
0x12d: V89 = CALLDATASIZE
0x12e: V90 = SUB V89 0x4
0x12f: V91 = 0x40
0x132: V92 = LT V90 0x40
0x133: V93 = ISZERO V92
0x134: V94 = 0x13c
0x137: JUMPI 0x13c V93
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [0x5b, 0x4, V90]
Exit stack: [V9, 0x5b, 0x4, V90]

================================

Block 0x138
[0x138:0x13b]
---
Predecessors: [0x126]
Successors: []
---
0x138 PUSH1 0x0
0x13a DUP1
0x13b REVERT
---
0x138: V95 = 0x0
0x13b: REVERT 0x0 0x0
---
Entry stack: [V9, 0x5b, 0x4, V90]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x5b, 0x4, V90]

================================

Block 0x13c
[0x13c:0x14a]
---
Predecessors: [0x126]
Successors: [0x1f1]
---
0x13c JUMPDEST
0x13d POP
0x13e DUP1
0x13f CALLDATALOAD
0x140 SWAP1
0x141 PUSH1 0x20
0x143 ADD
0x144 CALLDATALOAD
0x145 ISZERO
0x146 ISZERO
0x147 PUSH2 0x1f1
0x14a JUMP
---
0x13c: JUMPDEST 
0x13f: V96 = CALLDATALOAD 0x4
0x141: V97 = 0x20
0x143: V98 = ADD 0x20 0x4
0x144: V99 = CALLDATALOAD 0x24
0x145: V100 = ISZERO V99
0x146: V101 = ISZERO V100
0x147: V102 = 0x1f1
0x14a: JUMP 0x1f1
---
Entry stack: [V9, 0x5b, 0x4, V90]
Stack pops: 2
Stack additions: [V96, V101]
Exit stack: [V9, 0x5b, V96, V101]

================================

Block 0x14b
[0x14b:0x165]
---
Predecessors: [0x80, 0x208]
Successors: [0x37b]
---
0x14b JUMPDEST
0x14c PUSH1 0x0
0x14e DUP1
0x14f SLOAD
0x150 PUSH1 0x60
0x152 SWAP2
0x153 SWAP1
0x154 PUSH2 0x166
0x157 SWAP1
0x158 PUSH1 0x1
0x15a PUSH1 0xa0
0x15c PUSH1 0x2
0x15e EXP
0x15f SUB
0x160 AND
0x161 DUP5
0x162 PUSH2 0x37b
0x165 JUMP
---
0x14b: JUMPDEST 
0x14c: V103 = 0x0
0x14f: V104 = S[0x0]
0x150: V105 = 0x60
0x154: V106 = 0x166
0x158: V107 = 0x1
0x15a: V108 = 0xa0
0x15c: V109 = 0x2
0x15e: V110 = EXP 0x2 0xa0
0x15f: V111 = SUB 0x10000000000000000000000000000000000000000 0x1
0x160: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x162: V113 = 0x37b
0x165: JUMP 0x37b
---
Entry stack: [V9, 0x5b, V96, V101, S2, {0x87, 0x213}, S0]
Stack pops: 1
Stack additions: [S0, 0x60, 0x0, 0x166, V112, S0]
Exit stack: [V9, 0x5b, V96, V101, S2, {0x87, 0x213}, S0, 0x60, 0x0, 0x166, V112, S0]

================================

Block 0x166
[0x166:0x170]
---
Predecessors: [0x7c4]
Successors: [0x7ca]
---
0x166 JUMPDEST
0x167 SWAP1
0x168 POP
0x169 PUSH2 0x171
0x16c DUP2
0x16d PUSH2 0x7ca
0x170 JUMP
---
0x166: JUMPDEST 
0x169: V114 = 0x171
0x16d: V115 = 0x7ca
0x170: JUMP 0x7ca
---
Entry stack: [V9, 0x5b, V96, V101, S5, {0x87, 0x213}, S3, 0x60, 0x0, S0]
Stack pops: 2
Stack additions: [S0, 0x171, S0]
Exit stack: [V9, 0x5b, V96, V101, S5, {0x87, 0x213}, S3, 0x60, S0, 0x171, S0]

================================

Block 0x171
[0x171:0x177]
---
Predecessors: [0xa6a]
Successors: [0x87, 0x213]
---
0x171 JUMPDEST
0x172 SWAP4
0x173 SWAP3
0x174 POP
0x175 POP
0x176 POP
0x177 JUMP
---
0x171: JUMPDEST 
0x177: JUMP {0x87, 0x213}
---
Entry stack: [V9, 0x5b, V96, V101, S5, {0x87, 0x213}, S3, 0x60, S1, S0]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V9, 0x5b, V96, V101, S5, S0]

================================

Block 0x178
[0x178:0x18a]
---
Predecessors: [0x108]
Successors: [0x18b, 0x18f]
---
0x178 JUMPDEST
0x179 PUSH1 0x1
0x17b SLOAD
0x17c PUSH1 0x1
0x17e PUSH1 0xa0
0x180 PUSH1 0x2
0x182 EXP
0x183 SUB
0x184 AND
0x185 CALLER
0x186 EQ
0x187 PUSH2 0x18f
0x18a JUMPI
---
0x178: JUMPDEST 
0x179: V116 = 0x1
0x17b: V117 = S[0x1]
0x17c: V118 = 0x1
0x17e: V119 = 0xa0
0x180: V120 = 0x2
0x182: V121 = EXP 0x2 0xa0
0x183: V122 = SUB 0x10000000000000000000000000000000000000000 0x1
0x184: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V117
0x185: V124 = CALLER
0x186: V125 = EQ V124 V123
0x187: V126 = 0x18f
0x18a: JUMPI 0x18f V125
---
Entry stack: [V9, 0x5b]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x5b]

================================

Block 0x18b
[0x18b:0x18e]
---
Predecessors: [0x178]
Successors: []
---
0x18b PUSH1 0x0
0x18d DUP1
0x18e REVERT
---
0x18b: V127 = 0x0
0x18e: REVERT 0x0 0x0
---
Entry stack: [V9, 0x5b]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x5b]

================================

Block 0x18f
[0x18f:0x1bf]
---
Predecessors: [0x178]
Successors: [0x1c0, 0x1c9]
---
0x18f JUMPDEST
0x190 PUSH1 0x1
0x192 SLOAD
0x193 PUSH1 0x40
0x195 MLOAD
0x196 PUSH1 0x1
0x198 PUSH1 0xa0
0x19a PUSH1 0x2
0x19c EXP
0x19d SUB
0x19e SWAP1
0x19f SWAP2
0x1a0 AND
0x1a1 SWAP1
0x1a2 ADDRESS
0x1a3 BALANCE
0x1a4 DUP1
0x1a5 ISZERO
0x1a6 PUSH2 0x8fc
0x1a9 MUL
0x1aa SWAP2
0x1ab PUSH1 0x0
0x1ad DUP2
0x1ae DUP2
0x1af DUP2
0x1b0 DUP6
0x1b1 DUP9
0x1b2 DUP9
0x1b3 CALL
0x1b4 SWAP4
0x1b5 POP
0x1b6 POP
0x1b7 POP
0x1b8 POP
0x1b9 ISZERO
0x1ba DUP1
0x1bb ISZERO
0x1bc PUSH2 0x1c9
0x1bf JUMPI
---
0x18f: JUMPDEST 
0x190: V128 = 0x1
0x192: V129 = S[0x1]
0x193: V130 = 0x40
0x195: V131 = M[0x40]
0x196: V132 = 0x1
0x198: V133 = 0xa0
0x19a: V134 = 0x2
0x19c: V135 = EXP 0x2 0xa0
0x19d: V136 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a0: V137 = AND V129 0xffffffffffffffffffffffffffffffffffffffff
0x1a2: V138 = ADDRESS
0x1a3: V139 = BALANCE V138
0x1a5: V140 = ISZERO V139
0x1a6: V141 = 0x8fc
0x1a9: V142 = MUL 0x8fc V140
0x1ab: V143 = 0x0
0x1b3: V144 = CALL V142 V137 V139 V131 0x0 V131 0x0
0x1b9: V145 = ISZERO V144
0x1bb: V146 = ISZERO V145
0x1bc: V147 = 0x1c9
0x1bf: JUMPI 0x1c9 V146
---
Entry stack: [V9, 0x5b]
Stack pops: 0
Stack additions: [V145]
Exit stack: [V9, 0x5b, V145]

================================

Block 0x1c0
[0x1c0:0x1c8]
---
Predecessors: [0x18f]
Successors: []
---
0x1c0 RETURNDATASIZE
0x1c1 PUSH1 0x0
0x1c3 DUP1
0x1c4 RETURNDATACOPY
0x1c5 RETURNDATASIZE
0x1c6 PUSH1 0x0
0x1c8 REVERT
---
0x1c0: V148 = RETURNDATASIZE
0x1c1: V149 = 0x0
0x1c4: RETURNDATACOPY 0x0 0x0 V148
0x1c5: V150 = RETURNDATASIZE
0x1c6: V151 = 0x0
0x1c8: REVERT 0x0 V150
---
Entry stack: [V9, 0x5b, V145]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x5b, V145]

================================

Block 0x1c9
[0x1c9:0x1cb]
---
Predecessors: [0x18f]
Successors: [0x5b]
---
0x1c9 JUMPDEST
0x1ca POP
0x1cb JUMP
---
0x1c9: JUMPDEST 
0x1cb: JUMP 0x5b
---
Entry stack: [V9, 0x5b, V145]
Stack pops: 2
Stack additions: []
Exit stack: [V9]

================================

Block 0x1cc
[0x1cc:0x1de]
---
Predecessors: [0x11d]
Successors: [0x1df, 0x1e3]
---
0x1cc JUMPDEST
0x1cd PUSH1 0x1
0x1cf SLOAD
0x1d0 PUSH1 0x1
0x1d2 PUSH1 0xa0
0x1d4 PUSH1 0x2
0x1d6 EXP
0x1d7 SUB
0x1d8 AND
0x1d9 CALLER
0x1da EQ
0x1db PUSH2 0x1e3
0x1de JUMPI
---
0x1cc: JUMPDEST 
0x1cd: V152 = 0x1
0x1cf: V153 = S[0x1]
0x1d0: V154 = 0x1
0x1d2: V155 = 0xa0
0x1d4: V156 = 0x2
0x1d6: V157 = EXP 0x2 0xa0
0x1d7: V158 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d8: V159 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x1d9: V160 = CALLER
0x1da: V161 = EQ V160 V159
0x1db: V162 = 0x1e3
0x1de: JUMPI 0x1e3 V161
---
Entry stack: [V9, 0x5b]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x5b]

================================

Block 0x1df
[0x1df:0x1e2]
---
Predecessors: [0x1cc]
Successors: []
---
0x1df PUSH1 0x0
0x1e1 DUP1
0x1e2 REVERT
---
0x1df: V163 = 0x0
0x1e2: REVERT 0x0 0x0
---
Entry stack: [V9, 0x5b]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x5b]

================================

Block 0x1e3
[0x1e3:0x1f0]
---
Predecessors: [0x1cc]
Successors: []
---
0x1e3 JUMPDEST
0x1e4 PUSH1 0x1
0x1e6 SLOAD
0x1e7 PUSH1 0x1
0x1e9 PUSH1 0xa0
0x1eb PUSH1 0x2
0x1ed EXP
0x1ee SUB
0x1ef AND
0x1f0 SELFDESTRUCT
---
0x1e3: JUMPDEST 
0x1e4: V164 = 0x1
0x1e6: V165 = S[0x1]
0x1e7: V166 = 0x1
0x1e9: V167 = 0xa0
0x1eb: V168 = 0x2
0x1ed: V169 = EXP 0x2 0xa0
0x1ee: V170 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ef: V171 = AND 0xffffffffffffffffffffffffffffffffffffffff V165
0x1f0: SELFDESTRUCT V171
---
Entry stack: [V9, 0x5b]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x5b]

================================

Block 0x1f1
[0x1f1:0x203]
---
Predecessors: [0x13c]
Successors: [0x204, 0x208]
---
0x1f1 JUMPDEST
0x1f2 PUSH1 0x1
0x1f4 SLOAD
0x1f5 PUSH1 0x1
0x1f7 PUSH1 0xa0
0x1f9 PUSH1 0x2
0x1fb EXP
0x1fc SUB
0x1fd AND
0x1fe CALLER
0x1ff EQ
0x200 PUSH2 0x208
0x203 JUMPI
---
0x1f1: JUMPDEST 
0x1f2: V172 = 0x1
0x1f4: V173 = S[0x1]
0x1f5: V174 = 0x1
0x1f7: V175 = 0xa0
0x1f9: V176 = 0x2
0x1fb: V177 = EXP 0x2 0xa0
0x1fc: V178 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1fd: V179 = AND 0xffffffffffffffffffffffffffffffffffffffff V173
0x1fe: V180 = CALLER
0x1ff: V181 = EQ V180 V179
0x200: V182 = 0x208
0x203: JUMPI 0x208 V181
---
Entry stack: [V9, 0x5b, V96, V101]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x5b, V96, V101]

================================

Block 0x204
[0x204:0x207]
---
Predecessors: [0x1f1]
Successors: []
---
0x204 PUSH1 0x0
0x206 DUP1
0x207 REVERT
---
0x204: V183 = 0x0
0x207: REVERT 0x0 0x0
---
Entry stack: [V9, 0x5b, V96, V101]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x5b, V96, V101]

================================

Block 0x208
[0x208:0x212]
---
Predecessors: [0x1f1]
Successors: [0x14b]
---
0x208 JUMPDEST
0x209 PUSH1 0x60
0x20b PUSH2 0x213
0x20e DUP4
0x20f PUSH2 0x14b
0x212 JUMP
---
0x208: JUMPDEST 
0x209: V184 = 0x60
0x20b: V185 = 0x213
0x20f: V186 = 0x14b
0x212: JUMP 0x14b
---
Entry stack: [V9, 0x5b, V96, V101]
Stack pops: 2
Stack additions: [S1, S0, 0x60, 0x213, S1]
Exit stack: [V9, 0x5b, V96, V101, 0x60, 0x213, V96]

================================

Block 0x213
[0x213:0x295]
---
Predecessors: [0x171]
Successors: [0x296]
---
0x213 JUMPDEST
0x214 PUSH1 0x0
0x216 DUP1
0x217 SLOAD
0x218 PUSH1 0x40
0x21a DUP1
0x21b MLOAD
0x21c PUSH32 0xb07a0d0400000000000000000000000000000000000000000000000000000000
0x23d DUP2
0x23e MSTORE
0x23f PUSH1 0x4
0x241 DUP2
0x242 ADD
0x243 SWAP2
0x244 DUP3
0x245 MSTORE
0x246 DUP5
0x247 MLOAD
0x248 PUSH1 0x44
0x24a DUP3
0x24b ADD
0x24c MSTORE
0x24d DUP5
0x24e MLOAD
0x24f SWAP5
0x250 SWAP6
0x251 POP
0x252 PUSH3 0x2ac543
0x256 PUSH3 0x186a0
0x25a PUSH1 0x1
0x25c PUSH1 0xa0
0x25e PUSH1 0x2
0x260 EXP
0x261 SUB
0x262 SWAP1
0x263 SWAP5
0x264 AND
0x265 DUP1
0x266 BALANCE
0x267 SWAP5
0x268 SWAP1
0x269 SWAP5
0x26a MUL
0x26b DIV
0x26c SWAP5
0x26d SWAP3
0x26e SWAP4
0x26f ADDRESS
0x270 BALANCE
0x271 SWAP4
0x272 DUP6
0x273 SWAP4
0x274 PUSH4 0xb07a0d04
0x279 SWAP4
0x27a DUP9
0x27b SWAP4
0x27c DUP11
0x27d SWAP4
0x27e DUP4
0x27f SWAP3
0x280 PUSH1 0x24
0x282 DUP2
0x283 ADD
0x284 SWAP3
0x285 PUSH1 0x64
0x287 SWAP1
0x288 SWAP2
0x289 ADD
0x28a SWAP2
0x28b PUSH1 0x20
0x28d DUP8
0x28e ADD
0x28f SWAP2
0x290 DUP2
0x291 SWAP1
0x292 DUP5
0x293 SWAP1
0x294 DUP5
0x295 SWAP1
---
0x213: JUMPDEST 
0x214: V187 = 0x0
0x217: V188 = S[0x0]
0x218: V189 = 0x40
0x21b: V190 = M[0x40]
0x21c: V191 = 0xb07a0d0400000000000000000000000000000000000000000000000000000000
0x23e: M[V190] = 0xb07a0d0400000000000000000000000000000000000000000000000000000000
0x23f: V192 = 0x4
0x242: V193 = ADD V190 0x4
0x245: M[V193] = 0x40
0x247: V194 = M[S0]
0x248: V195 = 0x44
0x24b: V196 = ADD V190 0x44
0x24c: M[V196] = V194
0x24e: V197 = M[S0]
0x252: V198 = 0x2ac543
0x256: V199 = 0x186a0
0x25a: V200 = 0x1
0x25c: V201 = 0xa0
0x25e: V202 = 0x2
0x260: V203 = EXP 0x2 0xa0
0x261: V204 = SUB 0x10000000000000000000000000000000000000000 0x1
0x264: V205 = AND V188 0xffffffffffffffffffffffffffffffffffffffff
0x266: V206 = BALANCE V205
0x26a: V207 = MUL V206 0x186a0
0x26b: V208 = DIV V207 0x2ac543
0x26f: V209 = ADDRESS
0x270: V210 = BALANCE V209
0x274: V211 = 0xb07a0d04
0x280: V212 = 0x24
0x283: V213 = ADD V190 0x24
0x285: V214 = 0x64
0x289: V215 = ADD V190 0x64
0x28b: V216 = 0x20
0x28e: V217 = ADD S0 0x20
---
Entry stack: [V9, 0x5b, V96, V101, S1, S0]
Stack pops: 2
Stack additions: [S0, V208, V205, V210, V205, 0xb07a0d04, V208, S0, V193, V193, V213, V215, V217, V197, V197, V215, V217, 0x0]
Exit stack: [V9, 0x5b, V96, V101, S0, V208, V205, V210, V205, 0xb07a0d04, V208, S0, V193, V193, V213, V215, V217, V197, V197, V215, V217, 0x0]

================================

Block 0x296
[0x296:0x29e]
---
Predecessors: [0x213, 0x29f]
Successors: [0x29f, 0x2ae]
---
0x296 JUMPDEST
0x297 DUP4
0x298 DUP2
0x299 LT
0x29a ISZERO
0x29b PUSH2 0x2ae
0x29e JUMPI
---
0x296: JUMPDEST 
0x299: V218 = LT S0 V197
0x29a: V219 = ISZERO V218
0x29b: V220 = 0x2ae
0x29e: JUMPI 0x2ae V219
---
Entry stack: [V9, 0x5b, V96, V101, S17, V208, V205, V210, V205, 0xb07a0d04, V208, S10, V193, V193, V213, V215, V217, V197, V197, V215, V217, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V9, 0x5b, V96, V101, S17, V208, V205, V210, V205, 0xb07a0d04, V208, S10, V193, V193, V213, V215, V217, V197, V197, V215, V217, S0]

================================

Block 0x29f
[0x29f:0x2ad]
---
Predecessors: [0x296]
Successors: [0x296]
---
0x29f DUP2
0x2a0 DUP2
0x2a1 ADD
0x2a2 MLOAD
0x2a3 DUP4
0x2a4 DUP3
0x2a5 ADD
0x2a6 MSTORE
0x2a7 PUSH1 0x20
0x2a9 ADD
0x2aa PUSH2 0x296
0x2ad JUMP
---
0x2a1: V221 = ADD S0 V217
0x2a2: V222 = M[V221]
0x2a5: V223 = ADD S0 V215
0x2a6: M[V223] = V222
0x2a7: V224 = 0x20
0x2a9: V225 = ADD 0x20 S0
0x2aa: V226 = 0x296
0x2ad: JUMP 0x296
---
Entry stack: [V9, 0x5b, V96, V101, S17, V208, V205, V210, V205, 0xb07a0d04, V208, S10, V193, V193, V213, V215, V217, V197, V197, V215, V217, S0]
Stack pops: 3
Stack additions: [S2, S1, V225]
Exit stack: [V9, 0x5b, V96, V101, S17, V208, V205, V210, V205, 0xb07a0d04, V208, S10, V193, V193, V213, V215, V217, V197, V197, V215, V217, V225]

================================

Block 0x2ae
[0x2ae:0x2c1]
---
Predecessors: [0x296]
Successors: [0x2c2, 0x2db]
---
0x2ae JUMPDEST
0x2af POP
0x2b0 POP
0x2b1 POP
0x2b2 POP
0x2b3 SWAP1
0x2b4 POP
0x2b5 SWAP1
0x2b6 DUP2
0x2b7 ADD
0x2b8 SWAP1
0x2b9 PUSH1 0x1f
0x2bb AND
0x2bc DUP1
0x2bd ISZERO
0x2be PUSH2 0x2db
0x2c1 JUMPI
---
0x2ae: JUMPDEST 
0x2b7: V227 = ADD V197 V215
0x2b9: V228 = 0x1f
0x2bb: V229 = AND 0x1f V197
0x2bd: V230 = ISZERO V229
0x2be: V231 = 0x2db
0x2c1: JUMPI 0x2db V230
---
Entry stack: [V9, 0x5b, V96, V101, S17, V208, V205, V210, V205, 0xb07a0d04, V208, S10, V193, V193, V213, V215, V217, V197, V197, V215, V217, S0]
Stack pops: 7
Stack additions: [V227, V229]
Exit stack: [V9, 0x5b, V96, V101, S17, V208, V205, V210, V205, 0xb07a0d04, V208, S10, V193, V193, V213, V227, V229]

================================

Block 0x2c2
[0x2c2:0x2da]
---
Predecessors: [0x2ae]
Successors: [0x2db]
---
0x2c2 DUP1
0x2c3 DUP3
0x2c4 SUB
0x2c5 DUP1
0x2c6 MLOAD
0x2c7 PUSH1 0x1
0x2c9 DUP4
0x2ca PUSH1 0x20
0x2cc SUB
0x2cd PUSH2 0x100
0x2d0 EXP
0x2d1 SUB
0x2d2 NOT
0x2d3 AND
0x2d4 DUP2
0x2d5 MSTORE
0x2d6 PUSH1 0x20
0x2d8 ADD
0x2d9 SWAP2
0x2da POP
---
0x2c4: V232 = SUB V227 V229
0x2c6: V233 = M[V232]
0x2c7: V234 = 0x1
0x2ca: V235 = 0x20
0x2cc: V236 = SUB 0x20 V229
0x2cd: V237 = 0x100
0x2d0: V238 = EXP 0x100 V236
0x2d1: V239 = SUB V238 0x1
0x2d2: V240 = NOT V239
0x2d3: V241 = AND V240 V233
0x2d5: M[V232] = V241
0x2d6: V242 = 0x20
0x2d8: V243 = ADD 0x20 V232
---
Entry stack: [V9, 0x5b, V96, V101, S12, V208, V205, V210, V205, 0xb07a0d04, V208, S5, V193, V193, V213, V227, V229]
Stack pops: 2
Stack additions: [V243, S0]
Exit stack: [V9, 0x5b, V96, V101, S12, V208, V205, V210, V205, 0xb07a0d04, V208, S5, V193, V193, V213, V243, V229]

================================

Block 0x2db
[0x2db:0x304]
---
Predecessors: [0x2ae, 0x2c2]
Successors: [0x305, 0x309]
---
0x2db JUMPDEST
0x2dc POP
0x2dd DUP4
0x2de DUP2
0x2df SUB
0x2e0 DUP3
0x2e1 MSTORE
0x2e2 PUSH1 0x0
0x2e4 DUP2
0x2e5 MSTORE
0x2e6 PUSH1 0x20
0x2e8 ADD
0x2e9 PUSH1 0x20
0x2eb ADD
0x2ec SWAP4
0x2ed POP
0x2ee POP
0x2ef POP
0x2f0 POP
0x2f1 PUSH1 0x0
0x2f3 PUSH1 0x40
0x2f5 MLOAD
0x2f6 DUP1
0x2f7 DUP4
0x2f8 SUB
0x2f9 DUP2
0x2fa DUP6
0x2fb DUP9
0x2fc DUP1
0x2fd EXTCODESIZE
0x2fe ISZERO
0x2ff DUP1
0x300 ISZERO
0x301 PUSH2 0x309
0x304 JUMPI
---
0x2db: JUMPDEST 
0x2df: V244 = SUB S1 V193
0x2e1: M[V213] = V244
0x2e2: V245 = 0x0
0x2e5: M[S1] = 0x0
0x2e6: V246 = 0x20
0x2e8: V247 = ADD 0x20 S1
0x2e9: V248 = 0x20
0x2eb: V249 = ADD 0x20 V247
0x2f1: V250 = 0x0
0x2f3: V251 = 0x40
0x2f5: V252 = M[0x40]
0x2f8: V253 = SUB V249 V252
0x2fd: V254 = EXTCODESIZE V205
0x2fe: V255 = ISZERO V254
0x300: V256 = ISZERO V255
0x301: V257 = 0x309
0x304: JUMPI 0x309 V256
---
Entry stack: [V9, 0x5b, V96, V101, S12, V208, V205, V210, V205, 0xb07a0d04, V208, S5, V193, V193, V213, S1, V229]
Stack pops: 9
Stack additions: [S8, S7, S6, V249, 0x0, V252, V253, V252, S6, S8, V255]
Exit stack: [V9, 0x5b, V96, V101, S12, V208, V205, V210, V205, 0xb07a0d04, V208, V249, 0x0, V252, V253, V252, V208, V205, V255]

================================

Block 0x305
[0x305:0x308]
---
Predecessors: [0x2db]
Successors: []
---
0x305 PUSH1 0x0
0x307 DUP1
0x308 REVERT
---
0x305: V258 = 0x0
0x308: REVERT 0x0 0x0
---
Entry stack: [V9, 0x5b, V96, V101, S14, V208, V205, V210, V205, 0xb07a0d04, V208, V249, 0x0, V252, V253, V252, V208, V205, V255]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x5b, V96, V101, S14, V208, V205, V210, V205, 0xb07a0d04, V208, V249, 0x0, V252, V253, V252, V208, V205, V255]

================================

Block 0x309
[0x309:0x313]
---
Predecessors: [0x2db]
Successors: [0x314, 0x31d]
---
0x309 JUMPDEST
0x30a POP
0x30b GAS
0x30c CALL
0x30d ISZERO
0x30e DUP1
0x30f ISZERO
0x310 PUSH2 0x31d
0x313 JUMPI
---
0x309: JUMPDEST 
0x30b: V259 = GAS
0x30c: V260 = CALL V259 V205 V208 V252 V253 V252 0x0
0x30d: V261 = ISZERO V260
0x30f: V262 = ISZERO V261
0x310: V263 = 0x31d
0x313: JUMPI 0x31d V262
---
Entry stack: [V9, 0x5b, V96, V101, S14, V208, V205, V210, V205, 0xb07a0d04, V208, V249, 0x0, V252, V253, V252, V208, V205, V255]
Stack pops: 7
Stack additions: [V261]
Exit stack: [V9, 0x5b, V96, V101, S14, V208, V205, V210, V205, 0xb07a0d04, V208, V249, V261]

================================

Block 0x314
[0x314:0x31c]
---
Predecessors: [0x309]
Successors: []
---
0x314 RETURNDATASIZE
0x315 PUSH1 0x0
0x317 DUP1
0x318 RETURNDATACOPY
0x319 RETURNDATASIZE
0x31a PUSH1 0x0
0x31c REVERT
---
0x314: V264 = RETURNDATASIZE
0x315: V265 = 0x0
0x318: RETURNDATACOPY 0x0 0x0 V264
0x319: V266 = RETURNDATASIZE
0x31a: V267 = 0x0
0x31c: REVERT 0x0 V266
---
Entry stack: [V9, 0x5b, V96, V101, S8, V208, V205, V210, V205, 0xb07a0d04, V208, V249, V261]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x5b, V96, V101, S8, V208, V205, V210, V205, 0xb07a0d04, V208, V249, V261]

================================

Block 0x31d
[0x31d:0x32b]
---
Predecessors: [0x309]
Successors: [0x32c, 0x330]
---
0x31d JUMPDEST
0x31e POP
0x31f POP
0x320 POP
0x321 POP
0x322 ADDRESS
0x323 BALANCE
0x324 DUP3
0x325 LT
0x326 SWAP1
0x327 POP
0x328 PUSH2 0x330
0x32b JUMPI
---
0x31d: JUMPDEST 
0x322: V268 = ADDRESS
0x323: V269 = BALANCE V268
0x325: V270 = LT V210 V269
0x328: V271 = 0x330
0x32b: JUMPI 0x330 V270
---
Entry stack: [V9, 0x5b, V96, V101, S8, V208, V205, V210, V205, 0xb07a0d04, V208, V249, V261]
Stack pops: 6
Stack additions: [S5]
Exit stack: [V9, 0x5b, V96, V101, S8, V208, V205, V210]

================================

Block 0x32c
[0x32c:0x32f]
---
Predecessors: [0x31d]
Successors: []
---
0x32c PUSH1 0x0
0x32e DUP1
0x32f REVERT
---
0x32c: V272 = 0x0
0x32f: REVERT 0x0 0x0
---
Entry stack: [V9, 0x5b, V96, V101, S3, V208, V205, V210]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x5b, V96, V101, S3, V208, V205, V210]

================================

Block 0x330
[0x330:0x337]
---
Predecessors: [0x31d]
Successors: [0x338, 0x373]
---
0x330 JUMPDEST
0x331 DUP5
0x332 ISZERO
0x333 ISZERO
0x334 PUSH2 0x373
0x337 JUMPI
---
0x330: JUMPDEST 
0x332: V273 = ISZERO V101
0x333: V274 = ISZERO V273
0x334: V275 = 0x373
0x337: JUMPI 0x373 V274
---
Entry stack: [V9, 0x5b, V96, V101, S3, V208, V205, V210]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V9, 0x5b, V96, V101, S3, V208, V205, V210]

================================

Block 0x338
[0x338:0x367]
---
Predecessors: [0x330]
Successors: [0x368, 0x371]
---
0x338 PUSH1 0x1
0x33a SLOAD
0x33b PUSH1 0x40
0x33d MLOAD
0x33e PUSH1 0x1
0x340 PUSH1 0xa0
0x342 PUSH1 0x2
0x344 EXP
0x345 SUB
0x346 SWAP1
0x347 SWAP2
0x348 AND
0x349 SWAP1
0x34a ADDRESS
0x34b BALANCE
0x34c DUP1
0x34d ISZERO
0x34e PUSH2 0x8fc
0x351 MUL
0x352 SWAP2
0x353 PUSH1 0x0
0x355 DUP2
0x356 DUP2
0x357 DUP2
0x358 DUP6
0x359 DUP9
0x35a DUP9
0x35b CALL
0x35c SWAP4
0x35d POP
0x35e POP
0x35f POP
0x360 POP
0x361 ISZERO
0x362 DUP1
0x363 ISZERO
0x364 PUSH2 0x371
0x367 JUMPI
---
0x338: V276 = 0x1
0x33a: V277 = S[0x1]
0x33b: V278 = 0x40
0x33d: V279 = M[0x40]
0x33e: V280 = 0x1
0x340: V281 = 0xa0
0x342: V282 = 0x2
0x344: V283 = EXP 0x2 0xa0
0x345: V284 = SUB 0x10000000000000000000000000000000000000000 0x1
0x348: V285 = AND V277 0xffffffffffffffffffffffffffffffffffffffff
0x34a: V286 = ADDRESS
0x34b: V287 = BALANCE V286
0x34d: V288 = ISZERO V287
0x34e: V289 = 0x8fc
0x351: V290 = MUL 0x8fc V288
0x353: V291 = 0x0
0x35b: V292 = CALL V290 V285 V287 V279 0x0 V279 0x0
0x361: V293 = ISZERO V292
0x363: V294 = ISZERO V293
0x364: V295 = 0x371
0x367: JUMPI 0x371 V294
---
Entry stack: [V9, 0x5b, V96, V101, S3, V208, V205, V210]
Stack pops: 0
Stack additions: [V293]
Exit stack: [V9, 0x5b, V96, V101, S3, V208, V205, V210, V293]

================================

Block 0x368
[0x368:0x370]
---
Predecessors: [0x338]
Successors: []
---
0x368 RETURNDATASIZE
0x369 PUSH1 0x0
0x36b DUP1
0x36c RETURNDATACOPY
0x36d RETURNDATASIZE
0x36e PUSH1 0x0
0x370 REVERT
---
0x368: V296 = RETURNDATASIZE
0x369: V297 = 0x0
0x36c: RETURNDATACOPY 0x0 0x0 V296
0x36d: V298 = RETURNDATASIZE
0x36e: V299 = 0x0
0x370: REVERT 0x0 V298
---
Entry stack: [V9, 0x5b, V96, V101, S4, V208, V205, V210, V293]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x5b, V96, V101, S4, V208, V205, V210, V293]

================================

Block 0x371
[0x371:0x372]
---
Predecessors: [0x338]
Successors: [0x373]
---
0x371 JUMPDEST
0x372 POP
---
0x371: JUMPDEST 
---
Entry stack: [V9, 0x5b, V96, V101, S4, V208, V205, V210, V293]
Stack pops: 1
Stack additions: []
Exit stack: [V9, 0x5b, V96, V101, S4, V208, V205, V210]

================================

Block 0x373
[0x373:0x37a]
---
Predecessors: [0x330, 0x371]
Successors: [0x5b]
---
0x373 JUMPDEST
0x374 POP
0x375 POP
0x376 POP
0x377 POP
0x378 POP
0x379 POP
0x37a JUMP
---
0x373: JUMPDEST 
0x37a: JUMP 0x5b
---
Entry stack: [V9, 0x5b, V96, V101, S3, V208, V205, V210]
Stack pops: 7
Stack additions: []
Exit stack: [V9]

================================

Block 0x37b
[0x37b:0x384]
---
Predecessors: [0x14b]
Successors: [0x385, 0x420]
---
0x37b JUMPDEST
0x37c PUSH1 0x0
0x37e DUP2
0x37f ISZERO
0x380 ISZERO
0x381 PUSH2 0x420
0x384 JUMPI
---
0x37b: JUMPDEST 
0x37c: V300 = 0x0
0x37f: V301 = ISZERO S0
0x380: V302 = ISZERO V301
0x381: V303 = 0x420
0x384: JUMPI 0x420 V302
---
Entry stack: [V9, 0x5b, V96, V101, S7, {0x87, 0x213}, S5, 0x60, 0x0, 0x166, V112, S0]
Stack pops: 1
Stack additions: [S0, 0x0]
Exit stack: [V9, 0x5b, V96, V101, S7, {0x87, 0x213}, S5, 0x60, 0x0, 0x166, V112, S0, 0x0]

================================

Block 0x385
[0x385:0x41f]
---
Predecessors: [0x37b]
Successors: [0x7c4]
---
0x385 POP
0x386 PUSH1 0x40
0x388 DUP1
0x389 MLOAD
0x38a PUSH32 0xd600000000000000000000000000000000000000000000000000000000000000
0x3ab PUSH1 0x20
0x3ad DUP1
0x3ae DUP4
0x3af ADD
0x3b0 SWAP2
0x3b1 SWAP1
0x3b2 SWAP2
0x3b3 MSTORE
0x3b4 PUSH1 0xfa
0x3b6 PUSH1 0x2
0x3b8 EXP
0x3b9 PUSH1 0x25
0x3bb MUL
0x3bc PUSH1 0x21
0x3be DUP4
0x3bf ADD
0x3c0 MSTORE
0x3c1 PUSH13 0x1000000000000000000000000
0x3cf PUSH1 0x1
0x3d1 PUSH1 0xa0
0x3d3 PUSH1 0x2
0x3d5 EXP
0x3d6 SUB
0x3d7 DUP7
0x3d8 AND
0x3d9 MUL
0x3da PUSH1 0x22
0x3dc DUP4
0x3dd ADD
0x3de MSTORE
0x3df PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000
0x400 PUSH1 0x36
0x402 DUP4
0x403 ADD
0x404 MSTORE
0x405 DUP3
0x406 MLOAD
0x407 PUSH1 0x17
0x409 DUP2
0x40a DUP5
0x40b SUB
0x40c ADD
0x40d DUP2
0x40e MSTORE
0x40f PUSH1 0x37
0x411 SWAP1
0x412 SWAP3
0x413 ADD
0x414 SWAP1
0x415 SWAP3
0x416 MSTORE
0x417 DUP1
0x418 MLOAD
0x419 SWAP2
0x41a ADD
0x41b SHA3
0x41c PUSH2 0x7c4
0x41f JUMP
---
0x386: V304 = 0x40
0x389: V305 = M[0x40]
0x38a: V306 = 0xd600000000000000000000000000000000000000000000000000000000000000
0x3ab: V307 = 0x20
0x3af: V308 = ADD V305 0x20
0x3b3: M[V308] = 0xd600000000000000000000000000000000000000000000000000000000000000
0x3b4: V309 = 0xfa
0x3b6: V310 = 0x2
0x3b8: V311 = EXP 0x2 0xfa
0x3b9: V312 = 0x25
0x3bb: V313 = MUL 0x25 0x400000000000000000000000000000000000000000000000000000000000000
0x3bc: V314 = 0x21
0x3bf: V315 = ADD V305 0x21
0x3c0: M[V315] = 0x9400000000000000000000000000000000000000000000000000000000000000
0x3c1: V316 = 0x1000000000000000000000000
0x3cf: V317 = 0x1
0x3d1: V318 = 0xa0
0x3d3: V319 = 0x2
0x3d5: V320 = EXP 0x2 0xa0
0x3d6: V321 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d8: V322 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x3d9: V323 = MUL V322 0x1000000000000000000000000
0x3da: V324 = 0x22
0x3dd: V325 = ADD V305 0x22
0x3de: M[V325] = V323
0x3df: V326 = 0x8000000000000000000000000000000000000000000000000000000000000000
0x400: V327 = 0x36
0x403: V328 = ADD V305 0x36
0x404: M[V328] = 0x8000000000000000000000000000000000000000000000000000000000000000
0x406: V329 = M[0x40]
0x407: V330 = 0x17
0x40b: V331 = SUB V305 V329
0x40c: V332 = ADD V331 0x17
0x40e: M[V329] = V332
0x40f: V333 = 0x37
0x413: V334 = ADD V305 0x37
0x416: M[0x40] = V334
0x418: V335 = M[V329]
0x41a: V336 = ADD 0x20 V329
0x41b: V337 = SHA3 V336 V335
0x41c: V338 = 0x7c4
0x41f: JUMP 0x7c4
---
Entry stack: [V9, 0x5b, V96, V101, S8, {0x87, 0x213}, S6, 0x60, 0x0, 0x166, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V337]
Exit stack: [V9, 0x5b, V96, V101, S8, {0x87, 0x213}, S6, 0x60, 0x0, 0x166, S2, S1, V337]

================================

Block 0x420
[0x420:0x428]
---
Predecessors: [0x37b]
Successors: [0x429, 0x4ad]
---
0x420 JUMPDEST
0x421 PUSH1 0x7f
0x423 DUP3
0x424 GT
0x425 PUSH2 0x4ad
0x428 JUMPI
---
0x420: JUMPDEST 
0x421: V339 = 0x7f
0x424: V340 = GT S1 0x7f
0x425: V341 = 0x4ad
0x428: JUMPI 0x4ad V340
---
Entry stack: [V9, 0x5b, V96, V101, S8, {0x87, 0x213}, S6, 0x60, 0x0, 0x166, V112, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V9, 0x5b, V96, V101, S8, {0x87, 0x213}, S6, 0x60, 0x0, 0x166, V112, S1, 0x0]

================================

Block 0x429
[0x429:0x4ac]
---
Predecessors: [0x420]
Successors: [0x7c4]
---
0x429 POP
0x42a PUSH1 0x40
0x42c DUP1
0x42d MLOAD
0x42e PUSH32 0xd600000000000000000000000000000000000000000000000000000000000000
0x44f PUSH1 0x20
0x451 DUP1
0x452 DUP4
0x453 ADD
0x454 SWAP2
0x455 SWAP1
0x456 SWAP2
0x457 MSTORE
0x458 PUSH1 0xfa
0x45a PUSH1 0x2
0x45c EXP
0x45d PUSH1 0x25
0x45f MUL
0x460 PUSH1 0x21
0x462 DUP4
0x463 ADD
0x464 MSTORE
0x465 PUSH13 0x1000000000000000000000000
0x473 PUSH1 0x1
0x475 PUSH1 0xa0
0x477 PUSH1 0x2
0x479 EXP
0x47a SUB
0x47b DUP7
0x47c AND
0x47d MUL
0x47e PUSH1 0x22
0x480 DUP4
0x481 ADD
0x482 MSTORE
0x483 PUSH1 0xff
0x485 DUP5
0x486 AND
0x487 PUSH1 0xf8
0x489 PUSH1 0x2
0x48b EXP
0x48c MUL
0x48d PUSH1 0x36
0x48f DUP4
0x490 ADD
0x491 MSTORE
0x492 DUP3
0x493 MLOAD
0x494 PUSH1 0x17
0x496 DUP2
0x497 DUP5
0x498 SUB
0x499 ADD
0x49a DUP2
0x49b MSTORE
0x49c PUSH1 0x37
0x49e SWAP1
0x49f SWAP3
0x4a0 ADD
0x4a1 SWAP1
0x4a2 SWAP3
0x4a3 MSTORE
0x4a4 DUP1
0x4a5 MLOAD
0x4a6 SWAP2
0x4a7 ADD
0x4a8 SHA3
0x4a9 PUSH2 0x7c4
0x4ac JUMP
---
0x42a: V342 = 0x40
0x42d: V343 = M[0x40]
0x42e: V344 = 0xd600000000000000000000000000000000000000000000000000000000000000
0x44f: V345 = 0x20
0x453: V346 = ADD V343 0x20
0x457: M[V346] = 0xd600000000000000000000000000000000000000000000000000000000000000
0x458: V347 = 0xfa
0x45a: V348 = 0x2
0x45c: V349 = EXP 0x2 0xfa
0x45d: V350 = 0x25
0x45f: V351 = MUL 0x25 0x400000000000000000000000000000000000000000000000000000000000000
0x460: V352 = 0x21
0x463: V353 = ADD V343 0x21
0x464: M[V353] = 0x9400000000000000000000000000000000000000000000000000000000000000
0x465: V354 = 0x1000000000000000000000000
0x473: V355 = 0x1
0x475: V356 = 0xa0
0x477: V357 = 0x2
0x479: V358 = EXP 0x2 0xa0
0x47a: V359 = SUB 0x10000000000000000000000000000000000000000 0x1
0x47c: V360 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x47d: V361 = MUL V360 0x1000000000000000000000000
0x47e: V362 = 0x22
0x481: V363 = ADD V343 0x22
0x482: M[V363] = V361
0x483: V364 = 0xff
0x486: V365 = AND S1 0xff
0x487: V366 = 0xf8
0x489: V367 = 0x2
0x48b: V368 = EXP 0x2 0xf8
0x48c: V369 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V365
0x48d: V370 = 0x36
0x490: V371 = ADD V343 0x36
0x491: M[V371] = V369
0x493: V372 = M[0x40]
0x494: V373 = 0x17
0x498: V374 = SUB V343 V372
0x499: V375 = ADD V374 0x17
0x49b: M[V372] = V375
0x49c: V376 = 0x37
0x4a0: V377 = ADD V343 0x37
0x4a3: M[0x40] = V377
0x4a5: V378 = M[V372]
0x4a7: V379 = ADD 0x20 V372
0x4a8: V380 = SHA3 V379 V378
0x4a9: V381 = 0x7c4
0x4ac: JUMP 0x7c4
---
Entry stack: [V9, 0x5b, V96, V101, S8, {0x87, 0x213}, S6, 0x60, 0x0, 0x166, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V380]
Exit stack: [V9, 0x5b, V96, V101, S8, {0x87, 0x213}, S6, 0x60, 0x0, 0x166, S2, S1, V380]

================================

Block 0x4ad
[0x4ad:0x4b5]
---
Predecessors: [0x420]
Successors: [0x4b6, 0x560]
---
0x4ad JUMPDEST
0x4ae PUSH1 0xff
0x4b0 DUP3
0x4b1 GT
0x4b2 PUSH2 0x560
0x4b5 JUMPI
---
0x4ad: JUMPDEST 
0x4ae: V382 = 0xff
0x4b1: V383 = GT S1 0xff
0x4b2: V384 = 0x560
0x4b5: JUMPI 0x560 V383
---
Entry stack: [V9, 0x5b, V96, V101, S8, {0x87, 0x213}, S6, 0x60, 0x0, 0x166, S2, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V9, 0x5b, V96, V101, S8, {0x87, 0x213}, S6, 0x60, 0x0, 0x166, S2, S1, 0x0]

================================

Block 0x4b6
[0x4b6:0x55f]
---
Predecessors: [0x4ad]
Successors: [0x7c4]
---
0x4b6 POP
0x4b7 PUSH1 0x40
0x4b9 DUP1
0x4ba MLOAD
0x4bb PUSH32 0xd700000000000000000000000000000000000000000000000000000000000000
0x4dc PUSH1 0x20
0x4de DUP1
0x4df DUP4
0x4e0 ADD
0x4e1 SWAP2
0x4e2 SWAP1
0x4e3 SWAP2
0x4e4 MSTORE
0x4e5 PUSH1 0xfa
0x4e7 PUSH1 0x2
0x4e9 EXP
0x4ea PUSH1 0x25
0x4ec MUL
0x4ed PUSH1 0x21
0x4ef DUP4
0x4f0 ADD
0x4f1 MSTORE
0x4f2 PUSH13 0x1000000000000000000000000
0x500 PUSH1 0x1
0x502 PUSH1 0xa0
0x504 PUSH1 0x2
0x506 EXP
0x507 SUB
0x508 DUP7
0x509 AND
0x50a MUL
0x50b PUSH1 0x22
0x50d DUP4
0x50e ADD
0x50f MSTORE
0x510 PUSH32 0x8100000000000000000000000000000000000000000000000000000000000000
0x531 PUSH1 0x36
0x533 DUP4
0x534 ADD
0x535 MSTORE
0x536 PUSH1 0xff
0x538 DUP5
0x539 AND
0x53a PUSH1 0xf8
0x53c PUSH1 0x2
0x53e EXP
0x53f MUL
0x540 PUSH1 0x37
0x542 DUP4
0x543 ADD
0x544 MSTORE
0x545 DUP3
0x546 MLOAD
0x547 PUSH1 0x18
0x549 DUP2
0x54a DUP5
0x54b SUB
0x54c ADD
0x54d DUP2
0x54e MSTORE
0x54f PUSH1 0x38
0x551 SWAP1
0x552 SWAP3
0x553 ADD
0x554 SWAP1
0x555 SWAP3
0x556 MSTORE
0x557 DUP1
0x558 MLOAD
0x559 SWAP2
0x55a ADD
0x55b SHA3
0x55c PUSH2 0x7c4
0x55f JUMP
---
0x4b7: V385 = 0x40
0x4ba: V386 = M[0x40]
0x4bb: V387 = 0xd700000000000000000000000000000000000000000000000000000000000000
0x4dc: V388 = 0x20
0x4e0: V389 = ADD V386 0x20
0x4e4: M[V389] = 0xd700000000000000000000000000000000000000000000000000000000000000
0x4e5: V390 = 0xfa
0x4e7: V391 = 0x2
0x4e9: V392 = EXP 0x2 0xfa
0x4ea: V393 = 0x25
0x4ec: V394 = MUL 0x25 0x400000000000000000000000000000000000000000000000000000000000000
0x4ed: V395 = 0x21
0x4f0: V396 = ADD V386 0x21
0x4f1: M[V396] = 0x9400000000000000000000000000000000000000000000000000000000000000
0x4f2: V397 = 0x1000000000000000000000000
0x500: V398 = 0x1
0x502: V399 = 0xa0
0x504: V400 = 0x2
0x506: V401 = EXP 0x2 0xa0
0x507: V402 = SUB 0x10000000000000000000000000000000000000000 0x1
0x509: V403 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x50a: V404 = MUL V403 0x1000000000000000000000000
0x50b: V405 = 0x22
0x50e: V406 = ADD V386 0x22
0x50f: M[V406] = V404
0x510: V407 = 0x8100000000000000000000000000000000000000000000000000000000000000
0x531: V408 = 0x36
0x534: V409 = ADD V386 0x36
0x535: M[V409] = 0x8100000000000000000000000000000000000000000000000000000000000000
0x536: V410 = 0xff
0x539: V411 = AND S1 0xff
0x53a: V412 = 0xf8
0x53c: V413 = 0x2
0x53e: V414 = EXP 0x2 0xf8
0x53f: V415 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V411
0x540: V416 = 0x37
0x543: V417 = ADD V386 0x37
0x544: M[V417] = V415
0x546: V418 = M[0x40]
0x547: V419 = 0x18
0x54b: V420 = SUB V386 V418
0x54c: V421 = ADD V420 0x18
0x54e: M[V418] = V421
0x54f: V422 = 0x38
0x553: V423 = ADD V386 0x38
0x556: M[0x40] = V423
0x558: V424 = M[V418]
0x55a: V425 = ADD 0x20 V418
0x55b: V426 = SHA3 V425 V424
0x55c: V427 = 0x7c4
0x55f: JUMP 0x7c4
---
Entry stack: [V9, 0x5b, V96, V101, S8, {0x87, 0x213}, S6, 0x60, 0x0, 0x166, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V426]
Exit stack: [V9, 0x5b, V96, V101, S8, {0x87, 0x213}, S6, 0x60, 0x0, 0x166, S2, S1, V426]

================================

Block 0x560
[0x560:0x569]
---
Predecessors: [0x4ad]
Successors: [0x56a, 0x630]
---
0x560 JUMPDEST
0x561 PUSH2 0xffff
0x564 DUP3
0x565 GT
0x566 PUSH2 0x630
0x569 JUMPI
---
0x560: JUMPDEST 
0x561: V428 = 0xffff
0x565: V429 = GT S1 0xffff
0x566: V430 = 0x630
0x569: JUMPI 0x630 V429
---
Entry stack: [V9, 0x5b, V96, V101, S8, {0x87, 0x213}, S6, 0x60, 0x0, 0x166, S2, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V9, 0x5b, V96, V101, S8, {0x87, 0x213}, S6, 0x60, 0x0, 0x166, S2, S1, 0x0]

================================

Block 0x56a
[0x56a:0x62f]
---
Predecessors: [0x560]
Successors: [0x7c4]
---
0x56a POP
0x56b PUSH1 0x40
0x56d DUP1
0x56e MLOAD
0x56f PUSH32 0xd800000000000000000000000000000000000000000000000000000000000000
0x590 PUSH1 0x20
0x592 DUP1
0x593 DUP4
0x594 ADD
0x595 SWAP2
0x596 SWAP1
0x597 SWAP2
0x598 MSTORE
0x599 PUSH1 0xfa
0x59b PUSH1 0x2
0x59d EXP
0x59e PUSH1 0x25
0x5a0 MUL
0x5a1 PUSH1 0x21
0x5a3 DUP4
0x5a4 ADD
0x5a5 MSTORE
0x5a6 PUSH13 0x1000000000000000000000000
0x5b4 PUSH1 0x1
0x5b6 PUSH1 0xa0
0x5b8 PUSH1 0x2
0x5ba EXP
0x5bb SUB
0x5bc DUP7
0x5bd AND
0x5be MUL
0x5bf PUSH1 0x22
0x5c1 DUP4
0x5c2 ADD
0x5c3 MSTORE
0x5c4 PUSH32 0x8200000000000000000000000000000000000000000000000000000000000000
0x5e5 PUSH1 0x36
0x5e7 DUP4
0x5e8 ADD
0x5e9 MSTORE
0x5ea PUSH31 0x1000000000000000000000000000000000000000000000000000000000000
0x60a PUSH2 0xffff
0x60d DUP6
0x60e AND
0x60f MUL
0x610 PUSH1 0x37
0x612 DUP4
0x613 ADD
0x614 MSTORE
0x615 DUP3
0x616 MLOAD
0x617 PUSH1 0x19
0x619 DUP2
0x61a DUP5
0x61b SUB
0x61c ADD
0x61d DUP2
0x61e MSTORE
0x61f PUSH1 0x39
0x621 SWAP1
0x622 SWAP3
0x623 ADD
0x624 SWAP1
0x625 SWAP3
0x626 MSTORE
0x627 DUP1
0x628 MLOAD
0x629 SWAP2
0x62a ADD
0x62b SHA3
0x62c PUSH2 0x7c4
0x62f JUMP
---
0x56b: V431 = 0x40
0x56e: V432 = M[0x40]
0x56f: V433 = 0xd800000000000000000000000000000000000000000000000000000000000000
0x590: V434 = 0x20
0x594: V435 = ADD V432 0x20
0x598: M[V435] = 0xd800000000000000000000000000000000000000000000000000000000000000
0x599: V436 = 0xfa
0x59b: V437 = 0x2
0x59d: V438 = EXP 0x2 0xfa
0x59e: V439 = 0x25
0x5a0: V440 = MUL 0x25 0x400000000000000000000000000000000000000000000000000000000000000
0x5a1: V441 = 0x21
0x5a4: V442 = ADD V432 0x21
0x5a5: M[V442] = 0x9400000000000000000000000000000000000000000000000000000000000000
0x5a6: V443 = 0x1000000000000000000000000
0x5b4: V444 = 0x1
0x5b6: V445 = 0xa0
0x5b8: V446 = 0x2
0x5ba: V447 = EXP 0x2 0xa0
0x5bb: V448 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5bd: V449 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x5be: V450 = MUL V449 0x1000000000000000000000000
0x5bf: V451 = 0x22
0x5c2: V452 = ADD V432 0x22
0x5c3: M[V452] = V450
0x5c4: V453 = 0x8200000000000000000000000000000000000000000000000000000000000000
0x5e5: V454 = 0x36
0x5e8: V455 = ADD V432 0x36
0x5e9: M[V455] = 0x8200000000000000000000000000000000000000000000000000000000000000
0x5ea: V456 = 0x1000000000000000000000000000000000000000000000000000000000000
0x60a: V457 = 0xffff
0x60e: V458 = AND S1 0xffff
0x60f: V459 = MUL V458 0x1000000000000000000000000000000000000000000000000000000000000
0x610: V460 = 0x37
0x613: V461 = ADD V432 0x37
0x614: M[V461] = V459
0x616: V462 = M[0x40]
0x617: V463 = 0x19
0x61b: V464 = SUB V432 V462
0x61c: V465 = ADD V464 0x19
0x61e: M[V462] = V465
0x61f: V466 = 0x39
0x623: V467 = ADD V432 0x39
0x626: M[0x40] = V467
0x628: V468 = M[V462]
0x62a: V469 = ADD 0x20 V462
0x62b: V470 = SHA3 V469 V468
0x62c: V471 = 0x7c4
0x62f: JUMP 0x7c4
---
Entry stack: [V9, 0x5b, V96, V101, S8, {0x87, 0x213}, S6, 0x60, 0x0, 0x166, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V470]
Exit stack: [V9, 0x5b, V96, V101, S8, {0x87, 0x213}, S6, 0x60, 0x0, 0x166, S2, S1, V470]

================================

Block 0x630
[0x630:0x63a]
---
Predecessors: [0x560]
Successors: [0x63b, 0x701]
---
0x630 JUMPDEST
0x631 PUSH3 0xffffff
0x635 DUP3
0x636 GT
0x637 PUSH2 0x701
0x63a JUMPI
---
0x630: JUMPDEST 
0x631: V472 = 0xffffff
0x636: V473 = GT S1 0xffffff
0x637: V474 = 0x701
0x63a: JUMPI 0x701 V473
---
Entry stack: [V9, 0x5b, V96, V101, S8, {0x87, 0x213}, S6, 0x60, 0x0, 0x166, S2, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V9, 0x5b, V96, V101, S8, {0x87, 0x213}, S6, 0x60, 0x0, 0x166, S2, S1, 0x0]

================================

Block 0x63b
[0x63b:0x700]
---
Predecessors: [0x630]
Successors: [0x7c4]
---
0x63b POP
0x63c PUSH1 0x40
0x63e DUP1
0x63f MLOAD
0x640 PUSH32 0xd900000000000000000000000000000000000000000000000000000000000000
0x661 PUSH1 0x20
0x663 DUP1
0x664 DUP4
0x665 ADD
0x666 SWAP2
0x667 SWAP1
0x668 SWAP2
0x669 MSTORE
0x66a PUSH1 0xfa
0x66c PUSH1 0x2
0x66e EXP
0x66f PUSH1 0x25
0x671 MUL
0x672 PUSH1 0x21
0x674 DUP4
0x675 ADD
0x676 MSTORE
0x677 PUSH13 0x1000000000000000000000000
0x685 PUSH1 0x1
0x687 PUSH1 0xa0
0x689 PUSH1 0x2
0x68b EXP
0x68c SUB
0x68d DUP7
0x68e AND
0x68f MUL
0x690 PUSH1 0x22
0x692 DUP4
0x693 ADD
0x694 MSTORE
0x695 PUSH32 0x8300000000000000000000000000000000000000000000000000000000000000
0x6b6 PUSH1 0x36
0x6b8 DUP4
0x6b9 ADD
0x6ba MSTORE
0x6bb PUSH30 0x10000000000000000000000000000000000000000000000000000000000
0x6da PUSH3 0xffffff
0x6de DUP6
0x6df AND
0x6e0 MUL
0x6e1 PUSH1 0x37
0x6e3 DUP4
0x6e4 ADD
0x6e5 MSTORE
0x6e6 DUP3
0x6e7 MLOAD
0x6e8 PUSH1 0x1a
0x6ea DUP2
0x6eb DUP5
0x6ec SUB
0x6ed ADD
0x6ee DUP2
0x6ef MSTORE
0x6f0 PUSH1 0x3a
0x6f2 SWAP1
0x6f3 SWAP3
0x6f4 ADD
0x6f5 SWAP1
0x6f6 SWAP3
0x6f7 MSTORE
0x6f8 DUP1
0x6f9 MLOAD
0x6fa SWAP2
0x6fb ADD
0x6fc SHA3
0x6fd PUSH2 0x7c4
0x700 JUMP
---
0x63c: V475 = 0x40
0x63f: V476 = M[0x40]
0x640: V477 = 0xd900000000000000000000000000000000000000000000000000000000000000
0x661: V478 = 0x20
0x665: V479 = ADD V476 0x20
0x669: M[V479] = 0xd900000000000000000000000000000000000000000000000000000000000000
0x66a: V480 = 0xfa
0x66c: V481 = 0x2
0x66e: V482 = EXP 0x2 0xfa
0x66f: V483 = 0x25
0x671: V484 = MUL 0x25 0x400000000000000000000000000000000000000000000000000000000000000
0x672: V485 = 0x21
0x675: V486 = ADD V476 0x21
0x676: M[V486] = 0x9400000000000000000000000000000000000000000000000000000000000000
0x677: V487 = 0x1000000000000000000000000
0x685: V488 = 0x1
0x687: V489 = 0xa0
0x689: V490 = 0x2
0x68b: V491 = EXP 0x2 0xa0
0x68c: V492 = SUB 0x10000000000000000000000000000000000000000 0x1
0x68e: V493 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x68f: V494 = MUL V493 0x1000000000000000000000000
0x690: V495 = 0x22
0x693: V496 = ADD V476 0x22
0x694: M[V496] = V494
0x695: V497 = 0x8300000000000000000000000000000000000000000000000000000000000000
0x6b6: V498 = 0x36
0x6b9: V499 = ADD V476 0x36
0x6ba: M[V499] = 0x8300000000000000000000000000000000000000000000000000000000000000
0x6bb: V500 = 0x10000000000000000000000000000000000000000000000000000000000
0x6da: V501 = 0xffffff
0x6df: V502 = AND S1 0xffffff
0x6e0: V503 = MUL V502 0x10000000000000000000000000000000000000000000000000000000000
0x6e1: V504 = 0x37
0x6e4: V505 = ADD V476 0x37
0x6e5: M[V505] = V503
0x6e7: V506 = M[0x40]
0x6e8: V507 = 0x1a
0x6ec: V508 = SUB V476 V506
0x6ed: V509 = ADD V508 0x1a
0x6ef: M[V506] = V509
0x6f0: V510 = 0x3a
0x6f4: V511 = ADD V476 0x3a
0x6f7: M[0x40] = V511
0x6f9: V512 = M[V506]
0x6fb: V513 = ADD 0x20 V506
0x6fc: V514 = SHA3 V513 V512
0x6fd: V515 = 0x7c4
0x700: JUMP 0x7c4
---
Entry stack: [V9, 0x5b, V96, V101, S8, {0x87, 0x213}, S6, 0x60, 0x0, 0x166, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V514]
Exit stack: [V9, 0x5b, V96, V101, S8, {0x87, 0x213}, S6, 0x60, 0x0, 0x166, S2, S1, V514]

================================

Block 0x701
[0x701:0x7c3]
---
Predecessors: [0x630]
Successors: [0x7c4]
---
0x701 JUMPDEST
0x702 POP
0x703 PUSH1 0x40
0x705 DUP1
0x706 MLOAD
0x707 PUSH32 0xda00000000000000000000000000000000000000000000000000000000000000
0x728 PUSH1 0x20
0x72a DUP1
0x72b DUP4
0x72c ADD
0x72d SWAP2
0x72e SWAP1
0x72f SWAP2
0x730 MSTORE
0x731 PUSH1 0xfa
0x733 PUSH1 0x2
0x735 EXP
0x736 PUSH1 0x25
0x738 MUL
0x739 PUSH1 0x21
0x73b DUP4
0x73c ADD
0x73d MSTORE
0x73e PUSH13 0x1000000000000000000000000
0x74c PUSH1 0x1
0x74e PUSH1 0xa0
0x750 PUSH1 0x2
0x752 EXP
0x753 SUB
0x754 DUP7
0x755 AND
0x756 MUL
0x757 PUSH1 0x22
0x759 DUP4
0x75a ADD
0x75b MSTORE
0x75c PUSH32 0x8400000000000000000000000000000000000000000000000000000000000000
0x77d PUSH1 0x36
0x77f DUP4
0x780 ADD
0x781 MSTORE
0x782 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x7a0 PUSH4 0xffffffff
0x7a5 DUP6
0x7a6 AND
0x7a7 MUL
0x7a8 PUSH1 0x37
0x7aa DUP4
0x7ab ADD
0x7ac MSTORE
0x7ad DUP3
0x7ae MLOAD
0x7af PUSH1 0x1b
0x7b1 DUP2
0x7b2 DUP5
0x7b3 SUB
0x7b4 ADD
0x7b5 DUP2
0x7b6 MSTORE
0x7b7 PUSH1 0x3b
0x7b9 SWAP1
0x7ba SWAP3
0x7bb ADD
0x7bc SWAP1
0x7bd SWAP3
0x7be MSTORE
0x7bf DUP1
0x7c0 MLOAD
0x7c1 SWAP2
0x7c2 ADD
0x7c3 SHA3
---
0x701: JUMPDEST 
0x703: V516 = 0x40
0x706: V517 = M[0x40]
0x707: V518 = 0xda00000000000000000000000000000000000000000000000000000000000000
0x728: V519 = 0x20
0x72c: V520 = ADD V517 0x20
0x730: M[V520] = 0xda00000000000000000000000000000000000000000000000000000000000000
0x731: V521 = 0xfa
0x733: V522 = 0x2
0x735: V523 = EXP 0x2 0xfa
0x736: V524 = 0x25
0x738: V525 = MUL 0x25 0x400000000000000000000000000000000000000000000000000000000000000
0x739: V526 = 0x21
0x73c: V527 = ADD V517 0x21
0x73d: M[V527] = 0x9400000000000000000000000000000000000000000000000000000000000000
0x73e: V528 = 0x1000000000000000000000000
0x74c: V529 = 0x1
0x74e: V530 = 0xa0
0x750: V531 = 0x2
0x752: V532 = EXP 0x2 0xa0
0x753: V533 = SUB 0x10000000000000000000000000000000000000000 0x1
0x755: V534 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x756: V535 = MUL V534 0x1000000000000000000000000
0x757: V536 = 0x22
0x75a: V537 = ADD V517 0x22
0x75b: M[V537] = V535
0x75c: V538 = 0x8400000000000000000000000000000000000000000000000000000000000000
0x77d: V539 = 0x36
0x780: V540 = ADD V517 0x36
0x781: M[V540] = 0x8400000000000000000000000000000000000000000000000000000000000000
0x782: V541 = 0x100000000000000000000000000000000000000000000000000000000
0x7a0: V542 = 0xffffffff
0x7a6: V543 = AND S1 0xffffffff
0x7a7: V544 = MUL V543 0x100000000000000000000000000000000000000000000000000000000
0x7a8: V545 = 0x37
0x7ab: V546 = ADD V517 0x37
0x7ac: M[V546] = V544
0x7ae: V547 = M[0x40]
0x7af: V548 = 0x1b
0x7b3: V549 = SUB V517 V547
0x7b4: V550 = ADD V549 0x1b
0x7b6: M[V547] = V550
0x7b7: V551 = 0x3b
0x7bb: V552 = ADD V517 0x3b
0x7be: M[0x40] = V552
0x7c0: V553 = M[V547]
0x7c2: V554 = ADD 0x20 V547
0x7c3: V555 = SHA3 V554 V553
---
Entry stack: [V9, 0x5b, V96, V101, S8, {0x87, 0x213}, S6, 0x60, 0x0, 0x166, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V555]
Exit stack: [V9, 0x5b, V96, V101, S8, {0x87, 0x213}, S6, 0x60, 0x0, 0x166, S2, S1, V555]

================================

Block 0x7c4
[0x7c4:0x7c9]
---
Predecessors: [0x385, 0x429, 0x4b6, 0x56a, 0x63b, 0x701]
Successors: [0x166]
---
0x7c4 JUMPDEST
0x7c5 SWAP3
0x7c6 SWAP2
0x7c7 POP
0x7c8 POP
0x7c9 JUMP
---
0x7c4: JUMPDEST 
0x7c9: JUMP 0x166
---
Entry stack: [V9, 0x5b, V96, V101, S8, {0x87, 0x213}, S6, 0x60, 0x0, 0x166, S2, S1, S0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V9, 0x5b, V96, V101, S8, {0x87, 0x213}, S6, 0x60, 0x0, S0]

================================

Block 0x7ca
[0x7ca:0x85c]
---
Predecessors: [0x166]
Successors: [0x85d, 0x85e]
---
0x7ca JUMPDEST
0x7cb PUSH1 0x40
0x7cd DUP1
0x7ce MLOAD
0x7cf DUP1
0x7d0 DUP3
0x7d1 ADD
0x7d2 DUP3
0x7d3 MSTORE
0x7d4 PUSH1 0x10
0x7d6 DUP2
0x7d7 MSTORE
0x7d8 PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000
0x7f9 PUSH1 0x20
0x7fb DUP3
0x7fc ADD
0x7fd MSTORE
0x7fe DUP2
0x7ff MLOAD
0x800 PUSH1 0x5
0x802 DUP1
0x803 DUP3
0x804 MSTORE
0x805 DUP2
0x806 DUP5
0x807 ADD
0x808 SWAP1
0x809 SWAP4
0x80a MSTORE
0x80b PUSH1 0x60
0x80d SWAP3
0x80e DUP4
0x80f SWAP2
0x810 SWAP1
0x811 PUSH1 0x20
0x813 DUP3
0x814 ADD
0x815 DUP2
0x816 DUP1
0x817 CODESIZE
0x818 DUP4
0x819 CODECOPY
0x81a POP
0x81b POP
0x81c DUP4
0x81d MLOAD
0x81e SWAP2
0x81f SWAP3
0x820 POP
0x821 DUP4
0x822 SWAP2
0x823 PUSH1 0xff
0x825 PUSH1 0xf8
0x827 PUSH1 0x2
0x829 EXP
0x82a PUSH32 0xf00000000000000000000000000000000000000000000000000000000000000
0x84b PUSH1 0x1d
0x84d DUP11
0x84e SWAP1
0x84f BYTE
0x850 DUP3
0x851 MUL
0x852 AND
0x853 DIV
0x854 AND
0x855 SWAP2
0x856 POP
0x857 DUP2
0x858 LT
0x859 PUSH2 0x85e
0x85c JUMPI
---
0x7ca: JUMPDEST 
0x7cb: V556 = 0x40
0x7ce: V557 = M[0x40]
0x7d1: V558 = ADD 0x40 V557
0x7d3: M[0x40] = V558
0x7d4: V559 = 0x10
0x7d7: M[V557] = 0x10
0x7d8: V560 = 0x3031323334353637383961626364656600000000000000000000000000000000
0x7f9: V561 = 0x20
0x7fc: V562 = ADD V557 0x20
0x7fd: M[V562] = 0x3031323334353637383961626364656600000000000000000000000000000000
0x7ff: V563 = M[0x40]
0x800: V564 = 0x5
0x804: M[V563] = 0x5
0x807: V565 = ADD 0x40 V563
0x80a: M[0x40] = V565
0x80b: V566 = 0x60
0x811: V567 = 0x20
0x814: V568 = ADD V563 0x20
0x817: V569 = CODESIZE
0x819: CODECOPY V568 V569 0x5
0x81d: V570 = M[V557]
0x823: V571 = 0xff
0x825: V572 = 0xf8
0x827: V573 = 0x2
0x829: V574 = EXP 0x2 0xf8
0x82a: V575 = 0xf00000000000000000000000000000000000000000000000000000000000000
0x84b: V576 = 0x1d
0x84f: V577 = BYTE 0x1d S0
0x851: V578 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V577
0x852: V579 = AND V578 0xf00000000000000000000000000000000000000000000000000000000000000
0x853: V580 = DIV V579 0x100000000000000000000000000000000000000000000000000000000000000
0x854: V581 = AND V580 0xff
0x858: V582 = LT V581 V570
0x859: V583 = 0x85e
0x85c: JUMPI 0x85e V582
---
Entry stack: [V9, 0x5b, V96, V101, S6, {0x87, 0x213}, S4, 0x60, S2, 0x171, S0]
Stack pops: 1
Stack additions: [S0, 0x60, V557, V563, V557, V581]
Exit stack: [V9, 0x5b, V96, V101, S6, {0x87, 0x213}, S4, 0x60, S2, 0x171, S0, 0x60, V557, V563, V557, V581]

================================

Block 0x85d
[0x85d:0x85d]
---
Predecessors: [0x7ca]
Successors: []
---
0x85d INVALID
---
0x85d: INVALID 
---
Entry stack: [V9, 0x5b, V96, V101, S11, {0x87, 0x213}, S9, 0x60, S7, 0x171, S5, 0x60, V557, V563, V557, V581]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x5b, V96, V101, S11, {0x87, 0x213}, S9, 0x60, S7, 0x171, S5, 0x60, V557, V563, V557, V581]

================================

Block 0x85e
[0x85e:0x87e]
---
Predecessors: [0x7ca]
Successors: [0x87f, 0x880]
---
0x85e JUMPDEST
0x85f SWAP1
0x860 PUSH1 0x20
0x862 ADD
0x863 ADD
0x864 MLOAD
0x865 PUSH1 0xf8
0x867 PUSH1 0x2
0x869 EXP
0x86a SWAP1
0x86b DIV
0x86c PUSH1 0xf8
0x86e PUSH1 0x2
0x870 EXP
0x871 MUL
0x872 DUP2
0x873 PUSH1 0x0
0x875 DUP2
0x876 MLOAD
0x877 DUP2
0x878 LT
0x879 ISZERO
0x87a ISZERO
0x87b PUSH2 0x880
0x87e JUMPI
---
0x85e: JUMPDEST 
0x860: V584 = 0x20
0x862: V585 = ADD 0x20 V557
0x863: V586 = ADD V585 V581
0x864: V587 = M[V586]
0x865: V588 = 0xf8
0x867: V589 = 0x2
0x869: V590 = EXP 0x2 0xf8
0x86b: V591 = DIV V587 0x100000000000000000000000000000000000000000000000000000000000000
0x86c: V592 = 0xf8
0x86e: V593 = 0x2
0x870: V594 = EXP 0x2 0xf8
0x871: V595 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V591
0x873: V596 = 0x0
0x876: V597 = M[V563]
0x878: V598 = LT 0x0 V597
0x879: V599 = ISZERO V598
0x87a: V600 = ISZERO V599
0x87b: V601 = 0x880
0x87e: JUMPI 0x880 V600
---
Entry stack: [V9, 0x5b, V96, V101, S11, {0x87, 0x213}, S9, 0x60, S7, 0x171, S5, 0x60, V557, V563, V557, V581]
Stack pops: 3
Stack additions: [S2, V595, S2, 0x0]
Exit stack: [V9, 0x5b, V96, V101, S11, {0x87, 0x213}, S9, 0x60, S7, 0x171, S5, 0x60, V557, V563, V595, V563, 0x0]

================================

Block 0x87f
[0x87f:0x87f]
---
Predecessors: [0x85e]
Successors: []
---
0x87f INVALID
---
0x87f: INVALID 
---
Entry stack: [V9, 0x5b, V96, V101, S12, {0x87, 0x213}, S10, 0x60, S8, 0x171, S6, 0x60, S4, S3, V595, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x5b, V96, V101, S12, {0x87, 0x213}, S10, 0x60, S8, 0x171, S6, 0x60, S4, S3, V595, S1, 0x0]

================================

Block 0x880
[0x880:0x8d8]
---
Predecessors: [0x85e]
Successors: [0x8d9, 0x8da]
---
0x880 JUMPDEST
0x881 SWAP1
0x882 PUSH1 0x20
0x884 ADD
0x885 ADD
0x886 SWAP1
0x887 PUSH1 0x1
0x889 PUSH1 0xf8
0x88b PUSH1 0x2
0x88d EXP
0x88e SUB
0x88f NOT
0x890 AND
0x891 SWAP1
0x892 DUP2
0x893 PUSH1 0x0
0x895 BYTE
0x896 SWAP1
0x897 MSTORE8
0x898 POP
0x899 DUP2
0x89a MLOAD
0x89b DUP3
0x89c SWAP1
0x89d PUSH1 0xff
0x89f PUSH1 0xf8
0x8a1 PUSH1 0x2
0x8a3 EXP
0x8a4 PUSH1 0x10
0x8a6 PUSH32 0xff00000000000000000000000000000000000000000000000000000000000000
0x8c7 PUSH1 0x1e
0x8c9 DUP11
0x8ca SWAP1
0x8cb BYTE
0x8cc DUP4
0x8cd MUL
0x8ce AND
0x8cf DIV
0x8d0 DIV
0x8d1 AND
0x8d2 SWAP1
0x8d3 DUP2
0x8d4 LT
0x8d5 PUSH2 0x8da
0x8d8 JUMPI
---
0x880: JUMPDEST 
0x882: V602 = 0x20
0x884: V603 = ADD 0x20 S1
0x885: V604 = ADD V603 0x0
0x887: V605 = 0x1
0x889: V606 = 0xf8
0x88b: V607 = 0x2
0x88d: V608 = EXP 0x2 0xf8
0x88e: V609 = SUB 0x100000000000000000000000000000000000000000000000000000000000000 0x1
0x88f: V610 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x890: V611 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 V595
0x893: V612 = 0x0
0x895: V613 = BYTE 0x0 V611
0x897: M8[V604] = V613
0x89a: V614 = M[S4]
0x89d: V615 = 0xff
0x89f: V616 = 0xf8
0x8a1: V617 = 0x2
0x8a3: V618 = EXP 0x2 0xf8
0x8a4: V619 = 0x10
0x8a6: V620 = 0xff00000000000000000000000000000000000000000000000000000000000000
0x8c7: V621 = 0x1e
0x8cb: V622 = BYTE 0x1e S6
0x8cd: V623 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V622
0x8ce: V624 = AND V623 0xff00000000000000000000000000000000000000000000000000000000000000
0x8cf: V625 = DIV V624 0x10
0x8d0: V626 = DIV V625 0x100000000000000000000000000000000000000000000000000000000000000
0x8d1: V627 = AND V626 0xff
0x8d4: V628 = LT V627 V614
0x8d5: V629 = 0x8da
0x8d8: JUMPI 0x8da V628
---
Entry stack: [V9, 0x5b, V96, V101, S12, {0x87, 0x213}, S10, 0x60, S8, 0x171, S6, 0x60, S4, S3, V595, S1, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S4, V627]
Exit stack: [V9, 0x5b, V96, V101, S12, {0x87, 0x213}, S10, 0x60, S8, 0x171, S6, 0x60, S4, S3, S4, V627]

================================

Block 0x8d9
[0x8d9:0x8d9]
---
Predecessors: [0x880]
Successors: []
---
0x8d9 INVALID
---
0x8d9: INVALID 
---
Entry stack: [V9, 0x5b, V96, V101, S11, {0x87, 0x213}, S9, 0x60, S7, 0x171, S5, 0x60, S3, S2, S1, V627]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x5b, V96, V101, S11, {0x87, 0x213}, S9, 0x60, S7, 0x171, S5, 0x60, S3, S2, S1, V627]

================================

Block 0x8da
[0x8da:0x8fa]
---
Predecessors: [0x880]
Successors: [0x8fb, 0x8fc]
---
0x8da JUMPDEST
0x8db SWAP1
0x8dc PUSH1 0x20
0x8de ADD
0x8df ADD
0x8e0 MLOAD
0x8e1 PUSH1 0xf8
0x8e3 PUSH1 0x2
0x8e5 EXP
0x8e6 SWAP1
0x8e7 DIV
0x8e8 PUSH1 0xf8
0x8ea PUSH1 0x2
0x8ec EXP
0x8ed MUL
0x8ee DUP2
0x8ef PUSH1 0x1
0x8f1 DUP2
0x8f2 MLOAD
0x8f3 DUP2
0x8f4 LT
0x8f5 ISZERO
0x8f6 ISZERO
0x8f7 PUSH2 0x8fc
0x8fa JUMPI
---
0x8da: JUMPDEST 
0x8dc: V630 = 0x20
0x8de: V631 = ADD 0x20 S1
0x8df: V632 = ADD V631 V627
0x8e0: V633 = M[V632]
0x8e1: V634 = 0xf8
0x8e3: V635 = 0x2
0x8e5: V636 = EXP 0x2 0xf8
0x8e7: V637 = DIV V633 0x100000000000000000000000000000000000000000000000000000000000000
0x8e8: V638 = 0xf8
0x8ea: V639 = 0x2
0x8ec: V640 = EXP 0x2 0xf8
0x8ed: V641 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V637
0x8ef: V642 = 0x1
0x8f2: V643 = M[S2]
0x8f4: V644 = LT 0x1 V643
0x8f5: V645 = ISZERO V644
0x8f6: V646 = ISZERO V645
0x8f7: V647 = 0x8fc
0x8fa: JUMPI 0x8fc V646
---
Entry stack: [V9, 0x5b, V96, V101, S11, {0x87, 0x213}, S9, 0x60, S7, 0x171, S5, 0x60, S3, S2, S1, V627]
Stack pops: 3
Stack additions: [S2, V641, S2, 0x1]
Exit stack: [V9, 0x5b, V96, V101, S11, {0x87, 0x213}, S9, 0x60, S7, 0x171, S5, 0x60, S3, S2, V641, S2, 0x1]

================================

Block 0x8fb
[0x8fb:0x8fb]
---
Predecessors: [0x8da]
Successors: []
---
0x8fb INVALID
---
0x8fb: INVALID 
---
Entry stack: [V9, 0x5b, V96, V101, S12, {0x87, 0x213}, S10, 0x60, S8, 0x171, S6, 0x60, S4, S3, V641, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x5b, V96, V101, S12, {0x87, 0x213}, S10, 0x60, S8, 0x171, S6, 0x60, S4, S3, V641, S1, 0x1]

================================

Block 0x8fc
[0x8fc:0x951]
---
Predecessors: [0x8da]
Successors: [0x952, 0x953]
---
0x8fc JUMPDEST
0x8fd SWAP1
0x8fe PUSH1 0x20
0x900 ADD
0x901 ADD
0x902 SWAP1
0x903 PUSH1 0x1
0x905 PUSH1 0xf8
0x907 PUSH1 0x2
0x909 EXP
0x90a SUB
0x90b NOT
0x90c AND
0x90d SWAP1
0x90e DUP2
0x90f PUSH1 0x0
0x911 BYTE
0x912 SWAP1
0x913 MSTORE8
0x914 POP
0x915 DUP2
0x916 MLOAD
0x917 DUP3
0x918 SWAP1
0x919 PUSH1 0xff
0x91b PUSH1 0xf8
0x91d PUSH1 0x2
0x91f EXP
0x920 PUSH32 0xf00000000000000000000000000000000000000000000000000000000000000
0x941 PUSH1 0x1e
0x943 DUP10
0x944 SWAP1
0x945 BYTE
0x946 DUP3
0x947 MUL
0x948 AND
0x949 DIV
0x94a AND
0x94b SWAP1
0x94c DUP2
0x94d LT
0x94e PUSH2 0x953
0x951 JUMPI
---
0x8fc: JUMPDEST 
0x8fe: V648 = 0x20
0x900: V649 = ADD 0x20 S1
0x901: V650 = ADD V649 0x1
0x903: V651 = 0x1
0x905: V652 = 0xf8
0x907: V653 = 0x2
0x909: V654 = EXP 0x2 0xf8
0x90a: V655 = SUB 0x100000000000000000000000000000000000000000000000000000000000000 0x1
0x90b: V656 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x90c: V657 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 V641
0x90f: V658 = 0x0
0x911: V659 = BYTE 0x0 V657
0x913: M8[V650] = V659
0x916: V660 = M[S4]
0x919: V661 = 0xff
0x91b: V662 = 0xf8
0x91d: V663 = 0x2
0x91f: V664 = EXP 0x2 0xf8
0x920: V665 = 0xf00000000000000000000000000000000000000000000000000000000000000
0x941: V666 = 0x1e
0x945: V667 = BYTE 0x1e S6
0x947: V668 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V667
0x948: V669 = AND V668 0xf00000000000000000000000000000000000000000000000000000000000000
0x949: V670 = DIV V669 0x100000000000000000000000000000000000000000000000000000000000000
0x94a: V671 = AND V670 0xff
0x94d: V672 = LT V671 V660
0x94e: V673 = 0x953
0x951: JUMPI 0x953 V672
---
Entry stack: [V9, 0x5b, V96, V101, S12, {0x87, 0x213}, S10, 0x60, S8, 0x171, S6, 0x60, S4, S3, V641, S1, 0x1]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S4, V671]
Exit stack: [V9, 0x5b, V96, V101, S12, {0x87, 0x213}, S10, 0x60, S8, 0x171, S6, 0x60, S4, S3, S4, V671]

================================

Block 0x952
[0x952:0x952]
---
Predecessors: [0x8fc]
Successors: []
---
0x952 INVALID
---
0x952: INVALID 
---
Entry stack: [V9, 0x5b, V96, V101, S11, {0x87, 0x213}, S9, 0x60, S7, 0x171, S5, 0x60, S3, S2, S1, V671]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x5b, V96, V101, S11, {0x87, 0x213}, S9, 0x60, S7, 0x171, S5, 0x60, S3, S2, S1, V671]

================================

Block 0x953
[0x953:0x973]
---
Predecessors: [0x8fc]
Successors: [0x974, 0x975]
---
0x953 JUMPDEST
0x954 SWAP1
0x955 PUSH1 0x20
0x957 ADD
0x958 ADD
0x959 MLOAD
0x95a PUSH1 0xf8
0x95c PUSH1 0x2
0x95e EXP
0x95f SWAP1
0x960 DIV
0x961 PUSH1 0xf8
0x963 PUSH1 0x2
0x965 EXP
0x966 MUL
0x967 DUP2
0x968 PUSH1 0x2
0x96a DUP2
0x96b MLOAD
0x96c DUP2
0x96d LT
0x96e ISZERO
0x96f ISZERO
0x970 PUSH2 0x975
0x973 JUMPI
---
0x953: JUMPDEST 
0x955: V674 = 0x20
0x957: V675 = ADD 0x20 S1
0x958: V676 = ADD V675 V671
0x959: V677 = M[V676]
0x95a: V678 = 0xf8
0x95c: V679 = 0x2
0x95e: V680 = EXP 0x2 0xf8
0x960: V681 = DIV V677 0x100000000000000000000000000000000000000000000000000000000000000
0x961: V682 = 0xf8
0x963: V683 = 0x2
0x965: V684 = EXP 0x2 0xf8
0x966: V685 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V681
0x968: V686 = 0x2
0x96b: V687 = M[S2]
0x96d: V688 = LT 0x2 V687
0x96e: V689 = ISZERO V688
0x96f: V690 = ISZERO V689
0x970: V691 = 0x975
0x973: JUMPI 0x975 V690
---
Entry stack: [V9, 0x5b, V96, V101, S11, {0x87, 0x213}, S9, 0x60, S7, 0x171, S5, 0x60, S3, S2, S1, V671]
Stack pops: 3
Stack additions: [S2, V685, S2, 0x2]
Exit stack: [V9, 0x5b, V96, V101, S11, {0x87, 0x213}, S9, 0x60, S7, 0x171, S5, 0x60, S3, S2, V685, S2, 0x2]

================================

Block 0x974
[0x974:0x974]
---
Predecessors: [0x953]
Successors: []
---
0x974 INVALID
---
0x974: INVALID 
---
Entry stack: [V9, 0x5b, V96, V101, S12, {0x87, 0x213}, S10, 0x60, S8, 0x171, S6, 0x60, S4, S3, V685, S1, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x5b, V96, V101, S12, {0x87, 0x213}, S10, 0x60, S8, 0x171, S6, 0x60, S4, S3, V685, S1, 0x2]

================================

Block 0x975
[0x975:0x9cd]
---
Predecessors: [0x953]
Successors: [0x9ce, 0x9cf]
---
0x975 JUMPDEST
0x976 SWAP1
0x977 PUSH1 0x20
0x979 ADD
0x97a ADD
0x97b SWAP1
0x97c PUSH1 0x1
0x97e PUSH1 0xf8
0x980 PUSH1 0x2
0x982 EXP
0x983 SUB
0x984 NOT
0x985 AND
0x986 SWAP1
0x987 DUP2
0x988 PUSH1 0x0
0x98a BYTE
0x98b SWAP1
0x98c MSTORE8
0x98d POP
0x98e DUP2
0x98f MLOAD
0x990 DUP3
0x991 SWAP1
0x992 PUSH1 0xff
0x994 PUSH1 0xf8
0x996 PUSH1 0x2
0x998 EXP
0x999 PUSH1 0x10
0x99b PUSH32 0xff00000000000000000000000000000000000000000000000000000000000000
0x9bc PUSH1 0x1f
0x9be DUP11
0x9bf SWAP1
0x9c0 BYTE
0x9c1 DUP4
0x9c2 MUL
0x9c3 AND
0x9c4 DIV
0x9c5 DIV
0x9c6 AND
0x9c7 SWAP1
0x9c8 DUP2
0x9c9 LT
0x9ca PUSH2 0x9cf
0x9cd JUMPI
---
0x975: JUMPDEST 
0x977: V692 = 0x20
0x979: V693 = ADD 0x20 S1
0x97a: V694 = ADD V693 0x2
0x97c: V695 = 0x1
0x97e: V696 = 0xf8
0x980: V697 = 0x2
0x982: V698 = EXP 0x2 0xf8
0x983: V699 = SUB 0x100000000000000000000000000000000000000000000000000000000000000 0x1
0x984: V700 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x985: V701 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 V685
0x988: V702 = 0x0
0x98a: V703 = BYTE 0x0 V701
0x98c: M8[V694] = V703
0x98f: V704 = M[S4]
0x992: V705 = 0xff
0x994: V706 = 0xf8
0x996: V707 = 0x2
0x998: V708 = EXP 0x2 0xf8
0x999: V709 = 0x10
0x99b: V710 = 0xff00000000000000000000000000000000000000000000000000000000000000
0x9bc: V711 = 0x1f
0x9c0: V712 = BYTE 0x1f S6
0x9c2: V713 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V712
0x9c3: V714 = AND V713 0xff00000000000000000000000000000000000000000000000000000000000000
0x9c4: V715 = DIV V714 0x10
0x9c5: V716 = DIV V715 0x100000000000000000000000000000000000000000000000000000000000000
0x9c6: V717 = AND V716 0xff
0x9c9: V718 = LT V717 V704
0x9ca: V719 = 0x9cf
0x9cd: JUMPI 0x9cf V718
---
Entry stack: [V9, 0x5b, V96, V101, S12, {0x87, 0x213}, S10, 0x60, S8, 0x171, S6, 0x60, S4, S3, V685, S1, 0x2]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S4, V717]
Exit stack: [V9, 0x5b, V96, V101, S12, {0x87, 0x213}, S10, 0x60, S8, 0x171, S6, 0x60, S4, S3, S4, V717]

================================

Block 0x9ce
[0x9ce:0x9ce]
---
Predecessors: [0x975]
Successors: []
---
0x9ce INVALID
---
0x9ce: INVALID 
---
Entry stack: [V9, 0x5b, V96, V101, S11, {0x87, 0x213}, S9, 0x60, S7, 0x171, S5, 0x60, S3, S2, S1, V717]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x5b, V96, V101, S11, {0x87, 0x213}, S9, 0x60, S7, 0x171, S5, 0x60, S3, S2, S1, V717]

================================

Block 0x9cf
[0x9cf:0x9ef]
---
Predecessors: [0x975]
Successors: [0x9f0, 0x9f1]
---
0x9cf JUMPDEST
0x9d0 SWAP1
0x9d1 PUSH1 0x20
0x9d3 ADD
0x9d4 ADD
0x9d5 MLOAD
0x9d6 PUSH1 0xf8
0x9d8 PUSH1 0x2
0x9da EXP
0x9db SWAP1
0x9dc DIV
0x9dd PUSH1 0xf8
0x9df PUSH1 0x2
0x9e1 EXP
0x9e2 MUL
0x9e3 DUP2
0x9e4 PUSH1 0x3
0x9e6 DUP2
0x9e7 MLOAD
0x9e8 DUP2
0x9e9 LT
0x9ea ISZERO
0x9eb ISZERO
0x9ec PUSH2 0x9f1
0x9ef JUMPI
---
0x9cf: JUMPDEST 
0x9d1: V720 = 0x20
0x9d3: V721 = ADD 0x20 S1
0x9d4: V722 = ADD V721 V717
0x9d5: V723 = M[V722]
0x9d6: V724 = 0xf8
0x9d8: V725 = 0x2
0x9da: V726 = EXP 0x2 0xf8
0x9dc: V727 = DIV V723 0x100000000000000000000000000000000000000000000000000000000000000
0x9dd: V728 = 0xf8
0x9df: V729 = 0x2
0x9e1: V730 = EXP 0x2 0xf8
0x9e2: V731 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V727
0x9e4: V732 = 0x3
0x9e7: V733 = M[S2]
0x9e9: V734 = LT 0x3 V733
0x9ea: V735 = ISZERO V734
0x9eb: V736 = ISZERO V735
0x9ec: V737 = 0x9f1
0x9ef: JUMPI 0x9f1 V736
---
Entry stack: [V9, 0x5b, V96, V101, S11, {0x87, 0x213}, S9, 0x60, S7, 0x171, S5, 0x60, S3, S2, S1, V717]
Stack pops: 3
Stack additions: [S2, V731, S2, 0x3]
Exit stack: [V9, 0x5b, V96, V101, S11, {0x87, 0x213}, S9, 0x60, S7, 0x171, S5, 0x60, S3, S2, V731, S2, 0x3]

================================

Block 0x9f0
[0x9f0:0x9f0]
---
Predecessors: [0x9cf]
Successors: []
---
0x9f0 INVALID
---
0x9f0: INVALID 
---
Entry stack: [V9, 0x5b, V96, V101, S12, {0x87, 0x213}, S10, 0x60, S8, 0x171, S6, 0x60, S4, S3, V731, S1, 0x3]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x5b, V96, V101, S12, {0x87, 0x213}, S10, 0x60, S8, 0x171, S6, 0x60, S4, S3, V731, S1, 0x3]

================================

Block 0x9f1
[0x9f1:0xa46]
---
Predecessors: [0x9cf]
Successors: [0xa47, 0xa48]
---
0x9f1 JUMPDEST
0x9f2 SWAP1
0x9f3 PUSH1 0x20
0x9f5 ADD
0x9f6 ADD
0x9f7 SWAP1
0x9f8 PUSH1 0x1
0x9fa PUSH1 0xf8
0x9fc PUSH1 0x2
0x9fe EXP
0x9ff SUB
0xa00 NOT
0xa01 AND
0xa02 SWAP1
0xa03 DUP2
0xa04 PUSH1 0x0
0xa06 BYTE
0xa07 SWAP1
0xa08 MSTORE8
0xa09 POP
0xa0a DUP2
0xa0b MLOAD
0xa0c DUP3
0xa0d SWAP1
0xa0e PUSH1 0xff
0xa10 PUSH1 0xf8
0xa12 PUSH1 0x2
0xa14 EXP
0xa15 PUSH32 0xf00000000000000000000000000000000000000000000000000000000000000
0xa36 PUSH1 0x1f
0xa38 DUP10
0xa39 SWAP1
0xa3a BYTE
0xa3b DUP3
0xa3c MUL
0xa3d AND
0xa3e DIV
0xa3f AND
0xa40 SWAP1
0xa41 DUP2
0xa42 LT
0xa43 PUSH2 0xa48
0xa46 JUMPI
---
0x9f1: JUMPDEST 
0x9f3: V738 = 0x20
0x9f5: V739 = ADD 0x20 S1
0x9f6: V740 = ADD V739 0x3
0x9f8: V741 = 0x1
0x9fa: V742 = 0xf8
0x9fc: V743 = 0x2
0x9fe: V744 = EXP 0x2 0xf8
0x9ff: V745 = SUB 0x100000000000000000000000000000000000000000000000000000000000000 0x1
0xa00: V746 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xa01: V747 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 V731
0xa04: V748 = 0x0
0xa06: V749 = BYTE 0x0 V747
0xa08: M8[V740] = V749
0xa0b: V750 = M[S4]
0xa0e: V751 = 0xff
0xa10: V752 = 0xf8
0xa12: V753 = 0x2
0xa14: V754 = EXP 0x2 0xf8
0xa15: V755 = 0xf00000000000000000000000000000000000000000000000000000000000000
0xa36: V756 = 0x1f
0xa3a: V757 = BYTE 0x1f S6
0xa3c: V758 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V757
0xa3d: V759 = AND V758 0xf00000000000000000000000000000000000000000000000000000000000000
0xa3e: V760 = DIV V759 0x100000000000000000000000000000000000000000000000000000000000000
0xa3f: V761 = AND V760 0xff
0xa42: V762 = LT V761 V750
0xa43: V763 = 0xa48
0xa46: JUMPI 0xa48 V762
---
Entry stack: [V9, 0x5b, V96, V101, S12, {0x87, 0x213}, S10, 0x60, S8, 0x171, S6, 0x60, S4, S3, V731, S1, 0x3]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S4, V761]
Exit stack: [V9, 0x5b, V96, V101, S12, {0x87, 0x213}, S10, 0x60, S8, 0x171, S6, 0x60, S4, S3, S4, V761]

================================

Block 0xa47
[0xa47:0xa47]
---
Predecessors: [0x9f1]
Successors: []
---
0xa47 INVALID
---
0xa47: INVALID 
---
Entry stack: [V9, 0x5b, V96, V101, S11, {0x87, 0x213}, S9, 0x60, S7, 0x171, S5, 0x60, S3, S2, S1, V761]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x5b, V96, V101, S11, {0x87, 0x213}, S9, 0x60, S7, 0x171, S5, 0x60, S3, S2, S1, V761]

================================

Block 0xa48
[0xa48:0xa68]
---
Predecessors: [0x9f1]
Successors: [0xa69, 0xa6a]
---
0xa48 JUMPDEST
0xa49 SWAP1
0xa4a PUSH1 0x20
0xa4c ADD
0xa4d ADD
0xa4e MLOAD
0xa4f PUSH1 0xf8
0xa51 PUSH1 0x2
0xa53 EXP
0xa54 SWAP1
0xa55 DIV
0xa56 PUSH1 0xf8
0xa58 PUSH1 0x2
0xa5a EXP
0xa5b MUL
0xa5c DUP2
0xa5d PUSH1 0x4
0xa5f DUP2
0xa60 MLOAD
0xa61 DUP2
0xa62 LT
0xa63 ISZERO
0xa64 ISZERO
0xa65 PUSH2 0xa6a
0xa68 JUMPI
---
0xa48: JUMPDEST 
0xa4a: V764 = 0x20
0xa4c: V765 = ADD 0x20 S1
0xa4d: V766 = ADD V765 V761
0xa4e: V767 = M[V766]
0xa4f: V768 = 0xf8
0xa51: V769 = 0x2
0xa53: V770 = EXP 0x2 0xf8
0xa55: V771 = DIV V767 0x100000000000000000000000000000000000000000000000000000000000000
0xa56: V772 = 0xf8
0xa58: V773 = 0x2
0xa5a: V774 = EXP 0x2 0xf8
0xa5b: V775 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V771
0xa5d: V776 = 0x4
0xa60: V777 = M[S2]
0xa62: V778 = LT 0x4 V777
0xa63: V779 = ISZERO V778
0xa64: V780 = ISZERO V779
0xa65: V781 = 0xa6a
0xa68: JUMPI 0xa6a V780
---
Entry stack: [V9, 0x5b, V96, V101, S11, {0x87, 0x213}, S9, 0x60, S7, 0x171, S5, 0x60, S3, S2, S1, V761]
Stack pops: 3
Stack additions: [S2, V775, S2, 0x4]
Exit stack: [V9, 0x5b, V96, V101, S11, {0x87, 0x213}, S9, 0x60, S7, 0x171, S5, 0x60, S3, S2, V775, S2, 0x4]

================================

Block 0xa69
[0xa69:0xa69]
---
Predecessors: [0xa48]
Successors: []
---
0xa69 INVALID
---
0xa69: INVALID 
---
Entry stack: [V9, 0x5b, V96, V101, S12, {0x87, 0x213}, S10, 0x60, S8, 0x171, S6, 0x60, S4, S3, V775, S1, 0x4]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x5b, V96, V101, S12, {0x87, 0x213}, S10, 0x60, S8, 0x171, S6, 0x60, S4, S3, V775, S1, 0x4]

================================

Block 0xa6a
[0xa6a:0xa88]
---
Predecessors: [0xa48]
Successors: [0x171]
---
0xa6a JUMPDEST
0xa6b SWAP1
0xa6c PUSH1 0x20
0xa6e ADD
0xa6f ADD
0xa70 SWAP1
0xa71 PUSH1 0x1
0xa73 PUSH1 0xf8
0xa75 PUSH1 0x2
0xa77 EXP
0xa78 SUB
0xa79 NOT
0xa7a AND
0xa7b SWAP1
0xa7c DUP2
0xa7d PUSH1 0x0
0xa7f BYTE
0xa80 SWAP1
0xa81 MSTORE8
0xa82 POP
0xa83 SWAP4
0xa84 SWAP3
0xa85 POP
0xa86 POP
0xa87 POP
0xa88 JUMP
---
0xa6a: JUMPDEST 
0xa6c: V782 = 0x20
0xa6e: V783 = ADD 0x20 S1
0xa6f: V784 = ADD V783 0x4
0xa71: V785 = 0x1
0xa73: V786 = 0xf8
0xa75: V787 = 0x2
0xa77: V788 = EXP 0x2 0xf8
0xa78: V789 = SUB 0x100000000000000000000000000000000000000000000000000000000000000 0x1
0xa79: V790 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xa7a: V791 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 V775
0xa7d: V792 = 0x0
0xa7f: V793 = BYTE 0x0 V791
0xa81: M8[V784] = V793
0xa88: JUMP 0x171
---
Entry stack: [V9, 0x5b, V96, V101, S12, {0x87, 0x213}, S10, 0x60, S8, 0x171, S6, 0x60, S4, S3, V775, S1, 0x4]
Stack pops: 8
Stack additions: [S3]
Exit stack: [V9, 0x5b, V96, V101, S12, {0x87, 0x213}, S10, 0x60, S8, S3]

================================

Block 0xa89
[0xa89:0xab4]
---
Predecessors: []
Successors: []
---
0xa89 INVALID
0xa8a LOG1
0xa8b PUSH6 0x627a7a723058
0xa92 SHA3
0xa93 PUSH1 0xf4
0xa95 DUP11
0xa96 MISSING 0x5c
0xa97 PUSH29 0x64b7a51cbf4c1d9cec08ad31eaaa7e9809edff0aaeca2abfedfeb00029
---
0xa89: INVALID 
0xa8a: LOG S0 S1 S2
0xa8b: V794 = 0x627a7a723058
0xa92: V795 = SHA3 0x627a7a723058 S3
0xa93: V796 = 0xf4
0xa96: MISSING 0x5c
0xa97: V797 = 0x64b7a51cbf4c1d9cec08ad31eaaa7e9809edff0aaeca2abfedfeb00029
---
Entry stack: []
Stack pops: 0
Stack additions: [S12, 0xf4, V795, S4, S5, S6, S7, S8, S9, S10, S11, S12, 0x64b7a51cbf4c1d9cec08ad31eaaa7e9809edff0aaeca2abfedfeb00029]
Exit stack: []

================================

Function 0:
Public function signature: 0x32e5535a
Entry block: 0x5d
Exit block: 0x368
Body: 0x5b, 0x5d, 0x65, 0x69, 0x7c, 0x80, 0x87, 0xa9, 0xb2, 0xc1, 0xd5, 0xee, 0x14b, 0x166, 0x171, 0x213, 0x296, 0x29f, 0x2ae, 0x2c2, 0x2db, 0x305, 0x309, 0x314, 0x31d, 0x32c, 0x330, 0x338, 0x368, 0x371, 0x373, 0x37b, 0x385, 0x420, 0x429, 0x4ad, 0x4b6, 0x560, 0x56a, 0x630, 0x63b, 0x701, 0x7c4, 0x7ca, 0x85d, 0x85e, 0x87f, 0x880, 0x8d9, 0x8da, 0x8fb, 0x8fc, 0x952, 0x953, 0x974, 0x975, 0x9ce, 0x9cf, 0x9f0, 0x9f1, 0xa47, 0xa48, 0xa69, 0xa6a

Function 1:
Public function signature: 0x3ccfd60b
Entry block: 0xfc
Exit block: 0x5b
Body: 0x5b, 0xfc, 0x104, 0x108, 0x178, 0x18b, 0x18f, 0x1c0, 0x1c9

Function 2:
Public function signature: 0x41c0e1b5
Entry block: 0x111
Exit block: 0x1e3
Body: 0x111, 0x119, 0x11d, 0x1cc, 0x1df, 0x1e3

Function 3:
Public function signature: 0x527d8f12
Entry block: 0x126
Exit block: 0x368
Body: 0x5b, 0x87, 0xa9, 0xb2, 0xc1, 0xd5, 0xee, 0x126, 0x138, 0x13c, 0x14b, 0x166, 0x171, 0x1f1, 0x204, 0x208, 0x213, 0x296, 0x29f, 0x2ae, 0x2c2, 0x2db, 0x305, 0x309, 0x314, 0x31d, 0x32c, 0x330, 0x338, 0x368, 0x371, 0x373, 0x37b, 0x385, 0x420, 0x429, 0x4ad, 0x4b6, 0x560, 0x56a, 0x630, 0x63b, 0x701, 0x7c4, 0x7ca, 0x85d, 0x85e, 0x87f, 0x880, 0x8d9, 0x8da, 0x8fb, 0x8fc, 0x952, 0x953, 0x974, 0x975, 0x9ce, 0x9cf, 0x9f0, 0x9f1, 0xa47, 0xa48, 0xa69, 0xa6a

Function 4:
Public fallback function
Entry block: 0x5b
Exit block: 0x5b
Body: 0x5b

