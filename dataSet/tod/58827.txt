Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x95]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x95
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x95
0xc: JUMPI 0x95 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x1ae]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x144fa6d7
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x1ae
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x144fa6d7
0x22: V15 = EQ V13 0x144fa6d7
0x23: V16 = 0x1ae
0x26: JUMPI 0x1ae V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x1cf]
---
0x27 DUP1
0x28 PUSH4 0x18c378cd
0x2d EQ
0x2e PUSH2 0x1cf
0x31 JUMPI
---
0x28: V17 = 0x18c378cd
0x2d: V18 = EQ 0x18c378cd V13
0x2e: V19 = 0x1cf
0x31: JUMPI 0x1cf V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x1ee]
---
0x32 DUP1
0x33 PUSH4 0x3ccfd60b
0x38 EQ
0x39 PUSH2 0x1ee
0x3c JUMPI
---
0x33: V20 = 0x3ccfd60b
0x38: V21 = EQ 0x3ccfd60b V13
0x39: V22 = 0x1ee
0x3c: JUMPI 0x1ee V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x201]
---
0x3d DUP1
0x3e PUSH4 0x41c0e1b5
0x43 EQ
0x44 PUSH2 0x201
0x47 JUMPI
---
0x3e: V23 = 0x41c0e1b5
0x43: V24 = EQ 0x41c0e1b5 V13
0x44: V25 = 0x201
0x47: JUMPI 0x201 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x214]
---
0x48 DUP1
0x49 PUSH4 0x489e0951
0x4e EQ
0x4f PUSH2 0x214
0x52 JUMPI
---
0x49: V26 = 0x489e0951
0x4e: V27 = EQ 0x489e0951 V13
0x4f: V28 = 0x214
0x52: JUMPI 0x214 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x243]
---
0x53 DUP1
0x54 PUSH4 0x49df728c
0x59 EQ
0x5a PUSH2 0x243
0x5d JUMPI
---
0x54: V29 = 0x49df728c
0x59: V30 = EQ 0x49df728c V13
0x5a: V31 = 0x243
0x5d: JUMPI 0x243 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x276]
---
0x5e DUP1
0x5f PUSH4 0x776d1a01
0x64 EQ
0x65 PUSH2 0x276
0x68 JUMPI
---
0x5f: V32 = 0x776d1a01
0x64: V33 = EQ 0x776d1a01 V13
0x65: V34 = 0x276
0x68: JUMPI 0x276 V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x295]
---
0x69 DUP1
0x6a PUSH4 0x8da5cb5b
0x6f EQ
0x70 PUSH2 0x295
0x73 JUMPI
---
0x6a: V35 = 0x8da5cb5b
0x6f: V36 = EQ 0x8da5cb5b V13
0x70: V37 = 0x295
0x73: JUMPI 0x295 V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x2a8]
---
0x74 DUP1
0x75 PUSH4 0xd4b83992
0x7a EQ
0x7b PUSH2 0x2a8
0x7e JUMPI
---
0x75: V38 = 0xd4b83992
0x7a: V39 = EQ 0xd4b83992 V13
0x7b: V40 = 0x2a8
0x7e: JUMPI 0x2a8 V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x89]
---
Predecessors: [0x74]
Successors: [0x8a, 0x2bb]
---
0x7f DUP1
0x80 PUSH4 0xf2fde38b
0x85 EQ
0x86 PUSH2 0x2bb
0x89 JUMPI
---
0x80: V41 = 0xf2fde38b
0x85: V42 = EQ 0xf2fde38b V13
0x86: V43 = 0x2bb
0x89: JUMPI 0x2bb V42
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x8a
[0x8a:0x94]
---
Predecessors: [0x7f]
Successors: [0x95, 0x2da]
---
0x8a DUP1
0x8b PUSH4 0xfc0c546a
0x90 EQ
0x91 PUSH2 0x2da
0x94 JUMPI
---
0x8b: V44 = 0xfc0c546a
0x90: V45 = EQ 0xfc0c546a V13
0x91: V46 = 0x2da
0x94: JUMPI 0x2da V45
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x95
[0x95:0xa5]
---
Predecessors: [0x0, 0x8a]
Successors: [0xa6, 0xa7]
---
0x95 JUMPDEST
0x96 PUSH1 0x0
0x98 DUP1
0x99 PUSH1 0x0
0x9b PUSH2 0xe9fc
0x9e GAS
0x9f DUP2
0xa0 ISZERO
0xa1 ISZERO
0xa2 PUSH2 0xa7
0xa5 JUMPI
---
0x95: JUMPDEST 
0x96: V47 = 0x0
0x99: V48 = 0x0
0x9b: V49 = 0xe9fc
0x9e: V50 = GAS
0xa0: V51 = ISZERO 0xe9fc
0xa1: V52 = ISZERO 0x0
0xa2: V53 = 0xa7
0xa5: JUMPI 0xa7 0x1
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0xe9fc, V50]
Exit stack: [V13, 0x0, 0x0, 0x0, 0xe9fc, V50]

================================

Block 0xa6
[0xa6:0xa6]
---
Predecessors: [0x95]
Successors: []
---
0xa6 INVALID
---
0xa6: INVALID 
---
Entry stack: [V13, 0x0, 0x0, 0x0, 0xe9fc, V50]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x0, 0x0, 0x0, 0xe9fc, V50]

================================

Block 0xa7
[0xa7:0x116]
---
Predecessors: [0x95]
Successors: [0x117, 0x11b]
---
0xa7 JUMPDEST
0xa8 PUSH1 0x1
0xaa SLOAD
0xab PUSH1 0x2
0xad SLOAD
0xae SWAP3
0xaf SWAP1
0xb0 SWAP2
0xb1 DIV
0xb2 PUSH2 0xe9fc
0xb5 PUSH1 0x1
0xb7 PUSH1 0xa0
0xb9 PUSH1 0x2
0xbb EXP
0xbc SUB
0xbd SWAP3
0xbe DUP4
0xbf AND
0xc0 DUP1
0xc1 BALANCE
0xc2 SWAP2
0xc3 SWAP1
0xc4 SWAP2
0xc5 DIV
0xc6 SWAP2
0xc7 SWAP1
0xc8 SWAP2
0xc9 ADD
0xca SWAP6
0xcb POP
0xcc SWAP2
0xcd AND
0xce SWAP1
0xcf PUSH4 0x70a08231
0xd4 SWAP1
0xd5 PUSH1 0x0
0xd7 PUSH1 0x40
0xd9 MLOAD
0xda PUSH1 0x20
0xdc ADD
0xdd MSTORE
0xde PUSH1 0x40
0xe0 MLOAD
0xe1 PUSH1 0xe0
0xe3 PUSH1 0x2
0xe5 EXP
0xe6 PUSH4 0xffffffff
0xeb DUP5
0xec AND
0xed MUL
0xee DUP2
0xef MSTORE
0xf0 PUSH1 0x1
0xf2 PUSH1 0xa0
0xf4 PUSH1 0x2
0xf6 EXP
0xf7 SUB
0xf8 SWAP1
0xf9 SWAP2
0xfa AND
0xfb PUSH1 0x4
0xfd DUP3
0xfe ADD
0xff MSTORE
0x100 PUSH1 0x24
0x102 ADD
0x103 PUSH1 0x20
0x105 PUSH1 0x40
0x107 MLOAD
0x108 DUP1
0x109 DUP4
0x10a SUB
0x10b DUP2
0x10c PUSH1 0x0
0x10e DUP8
0x10f DUP1
0x110 EXTCODESIZE
0x111 ISZERO
0x112 ISZERO
0x113 PUSH2 0x11b
0x116 JUMPI
---
0xa7: JUMPDEST 
0xa8: V54 = 0x1
0xaa: V55 = S[0x1]
0xab: V56 = 0x2
0xad: V57 = S[0x2]
0xb1: V58 = DIV V50 0xe9fc
0xb2: V59 = 0xe9fc
0xb5: V60 = 0x1
0xb7: V61 = 0xa0
0xb9: V62 = 0x2
0xbb: V63 = EXP 0x2 0xa0
0xbc: V64 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbf: V65 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0xc1: V66 = BALANCE V65
0xc5: V67 = DIV V66 0xe9fc
0xc9: V68 = ADD V67 V58
0xcd: V69 = AND V57 0xffffffffffffffffffffffffffffffffffffffff
0xcf: V70 = 0x70a08231
0xd5: V71 = 0x0
0xd7: V72 = 0x40
0xd9: V73 = M[0x40]
0xda: V74 = 0x20
0xdc: V75 = ADD 0x20 V73
0xdd: M[V75] = 0x0
0xde: V76 = 0x40
0xe0: V77 = M[0x40]
0xe1: V78 = 0xe0
0xe3: V79 = 0x2
0xe5: V80 = EXP 0x2 0xe0
0xe6: V81 = 0xffffffff
0xec: V82 = AND 0x70a08231 0xffffffff
0xed: V83 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0xef: M[V77] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xf0: V84 = 0x1
0xf2: V85 = 0xa0
0xf4: V86 = 0x2
0xf6: V87 = EXP 0x2 0xa0
0xf7: V88 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfa: V89 = AND V65 0xffffffffffffffffffffffffffffffffffffffff
0xfb: V90 = 0x4
0xfe: V91 = ADD V77 0x4
0xff: M[V91] = V89
0x100: V92 = 0x24
0x102: V93 = ADD 0x24 V77
0x103: V94 = 0x20
0x105: V95 = 0x40
0x107: V96 = M[0x40]
0x10a: V97 = SUB V93 V96
0x10c: V98 = 0x0
0x110: V99 = EXTCODESIZE V69
0x111: V100 = ISZERO V99
0x112: V101 = ISZERO V100
0x113: V102 = 0x11b
0x116: JUMPI 0x11b V101
---
Entry stack: [V13, 0x0, 0x0, 0x0, 0xe9fc, V50]
Stack pops: 5
Stack additions: [V68, S3, S2, V69, 0x70a08231, V93, 0x20, V96, V97, V96, 0x0, V69]
Exit stack: [V13, V68, 0x0, 0x0, V69, 0x70a08231, V93, 0x20, V96, V97, V96, 0x0, V69]

================================

Block 0x117
[0x117:0x11a]
---
Predecessors: [0xa7]
Successors: []
---
0x117 PUSH1 0x0
0x119 DUP1
0x11a REVERT
---
0x117: V103 = 0x0
0x11a: REVERT 0x0 0x0
---
Entry stack: [V13, V68, 0x0, 0x0, V69, 0x70a08231, V93, 0x20, V96, V97, V96, 0x0, V69]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V68, 0x0, 0x0, V69, 0x70a08231, V93, 0x20, V96, V97, V96, 0x0, V69]

================================

Block 0x11b
[0x11b:0x127]
---
Predecessors: [0xa7]
Successors: [0x128, 0x12c]
---
0x11b JUMPDEST
0x11c PUSH2 0x2c6
0x11f GAS
0x120 SUB
0x121 CALL
0x122 ISZERO
0x123 ISZERO
0x124 PUSH2 0x12c
0x127 JUMPI
---
0x11b: JUMPDEST 
0x11c: V104 = 0x2c6
0x11f: V105 = GAS
0x120: V106 = SUB V105 0x2c6
0x121: V107 = CALL V106 V69 0x0 V96 V97 V96 0x20
0x122: V108 = ISZERO V107
0x123: V109 = ISZERO V108
0x124: V110 = 0x12c
0x127: JUMPI 0x12c V109
---
Entry stack: [V13, V68, 0x0, 0x0, V69, 0x70a08231, V93, 0x20, V96, V97, V96, 0x0, V69]
Stack pops: 6
Stack additions: []
Exit stack: [V13, V68, 0x0, 0x0, V69, 0x70a08231, V93]

================================

Block 0x128
[0x128:0x12b]
---
Predecessors: [0x11b]
Successors: []
---
0x128 PUSH1 0x0
0x12a DUP1
0x12b REVERT
---
0x128: V111 = 0x0
0x12b: REVERT 0x0 0x0
---
Entry stack: [V13, V68, 0x0, 0x0, V69, 0x70a08231, V93]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V68, 0x0, 0x0, V69, 0x70a08231, V93]

================================

Block 0x12c
[0x12c:0x13b]
---
Predecessors: [0x11b]
Successors: [0x13c]
---
0x12c JUMPDEST
0x12d POP
0x12e POP
0x12f POP
0x130 PUSH1 0x40
0x132 MLOAD
0x133 DUP1
0x134 MLOAD
0x135 SWAP3
0x136 POP
0x137 PUSH1 0x0
0x139 SWAP2
0x13a POP
0x13b POP
---
0x12c: JUMPDEST 
0x130: V112 = 0x40
0x132: V113 = M[0x40]
0x134: V114 = M[V113]
0x137: V115 = 0x0
---
Entry stack: [V13, V68, 0x0, 0x0, V69, 0x70a08231, V93]
Stack pops: 5
Stack additions: [V114, 0x0]
Exit stack: [V13, V68, V114, 0x0]

================================

Block 0x13c
[0x13c:0x144]
---
Predecessors: [0x12c, 0x145]
Successors: [0x145, 0x1a9]
---
0x13c JUMPDEST
0x13d DUP3
0x13e DUP2
0x13f LT
0x140 ISZERO
0x141 PUSH2 0x1a9
0x144 JUMPI
---
0x13c: JUMPDEST 
0x13f: V116 = LT S0 V68
0x140: V117 = ISZERO V116
0x141: V118 = 0x1a9
0x144: JUMPI 0x1a9 V117
---
Entry stack: [V13, V68, V114, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, V68, V114, S0]

================================

Block 0x145
[0x145:0x1a8]
---
Predecessors: [0x13c]
Successors: [0x13c]
---
0x145 PUSH1 0x2
0x147 SLOAD
0x148 PUSH1 0x3
0x14a SLOAD
0x14b PUSH1 0x1
0x14d PUSH1 0xa0
0x14f PUSH1 0x2
0x151 EXP
0x152 SUB
0x153 SWAP2
0x154 DUP3
0x155 AND
0x156 SWAP2
0x157 PUSH4 0xa9059cbb
0x15c SWAP2
0x15d PUSH2 0xe998
0x160 SWAP2
0x161 AND
0x162 DUP6
0x163 PUSH1 0x40
0x165 MLOAD
0x166 PUSH1 0xe0
0x168 PUSH1 0x2
0x16a EXP
0x16b PUSH4 0xffffffff
0x170 DUP7
0x171 AND
0x172 MUL
0x173 DUP2
0x174 MSTORE
0x175 PUSH1 0x1
0x177 PUSH1 0xa0
0x179 PUSH1 0x2
0x17b EXP
0x17c SUB
0x17d SWAP1
0x17e SWAP3
0x17f AND
0x180 PUSH1 0x4
0x182 DUP4
0x183 ADD
0x184 MSTORE
0x185 PUSH1 0x24
0x187 DUP3
0x188 ADD
0x189 MSTORE
0x18a PUSH1 0x44
0x18c ADD
0x18d PUSH1 0x0
0x18f PUSH1 0x40
0x191 MLOAD
0x192 DUP1
0x193 DUP4
0x194 SUB
0x195 DUP2
0x196 DUP8
0x197 DUP7
0x198 DELEGATECALL
0x199 POP
0x19a POP
0x19b PUSH1 0x1
0x19d SWAP1
0x19e SWAP4
0x19f ADD
0x1a0 SWAP3
0x1a1 POP
0x1a2 PUSH2 0x13c
0x1a5 SWAP2
0x1a6 POP
0x1a7 POP
0x1a8 JUMP
---
0x145: V119 = 0x2
0x147: V120 = S[0x2]
0x148: V121 = 0x3
0x14a: V122 = S[0x3]
0x14b: V123 = 0x1
0x14d: V124 = 0xa0
0x14f: V125 = 0x2
0x151: V126 = EXP 0x2 0xa0
0x152: V127 = SUB 0x10000000000000000000000000000000000000000 0x1
0x155: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V120
0x157: V129 = 0xa9059cbb
0x15d: V130 = 0xe998
0x161: V131 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x163: V132 = 0x40
0x165: V133 = M[0x40]
0x166: V134 = 0xe0
0x168: V135 = 0x2
0x16a: V136 = EXP 0x2 0xe0
0x16b: V137 = 0xffffffff
0x171: V138 = AND 0xa9059cbb 0xffffffff
0x172: V139 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x174: M[V133] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x175: V140 = 0x1
0x177: V141 = 0xa0
0x179: V142 = 0x2
0x17b: V143 = EXP 0x2 0xa0
0x17c: V144 = SUB 0x10000000000000000000000000000000000000000 0x1
0x17f: V145 = AND V131 0xffffffffffffffffffffffffffffffffffffffff
0x180: V146 = 0x4
0x183: V147 = ADD V133 0x4
0x184: M[V147] = V145
0x185: V148 = 0x24
0x188: V149 = ADD V133 0x24
0x189: M[V149] = V114
0x18a: V150 = 0x44
0x18c: V151 = ADD 0x44 V133
0x18d: V152 = 0x0
0x18f: V153 = 0x40
0x191: V154 = M[0x40]
0x194: V155 = SUB V151 V154
0x198: V156 = DELEGATECALL 0xe998 V128 V154 V155 V154 0x0
0x19b: V157 = 0x1
0x19f: V158 = ADD S0 0x1
0x1a2: V159 = 0x13c
0x1a8: JUMP 0x13c
---
Entry stack: [V13, V68, V114, S0]
Stack pops: 2
Stack additions: [S1, V158]
Exit stack: [V13, V68, V114, V158]

================================

Block 0x1a9
[0x1a9:0x1ad]
---
Predecessors: [0x13c]
Successors: []
---
0x1a9 JUMPDEST
0x1aa POP
0x1ab POP
0x1ac POP
0x1ad STOP
---
0x1a9: JUMPDEST 
0x1ad: STOP 
---
Entry stack: [V13, V68, V114, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V13]

================================

Block 0x1ae
[0x1ae:0x1b4]
---
Predecessors: [0xd]
Successors: [0x1b5, 0x1b9]
---
0x1ae JUMPDEST
0x1af CALLVALUE
0x1b0 ISZERO
0x1b1 PUSH2 0x1b9
0x1b4 JUMPI
---
0x1ae: JUMPDEST 
0x1af: V160 = CALLVALUE
0x1b0: V161 = ISZERO V160
0x1b1: V162 = 0x1b9
0x1b4: JUMPI 0x1b9 V161
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1b5
[0x1b5:0x1b8]
---
Predecessors: [0x1ae]
Successors: []
---
0x1b5 PUSH1 0x0
0x1b7 DUP1
0x1b8 REVERT
---
0x1b5: V163 = 0x0
0x1b8: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1b9
[0x1b9:0x1cc]
---
Predecessors: [0x1ae]
Successors: [0x2ed]
---
0x1b9 JUMPDEST
0x1ba PUSH2 0x1cd
0x1bd PUSH1 0x1
0x1bf PUSH1 0xa0
0x1c1 PUSH1 0x2
0x1c3 EXP
0x1c4 SUB
0x1c5 PUSH1 0x4
0x1c7 CALLDATALOAD
0x1c8 AND
0x1c9 PUSH2 0x2ed
0x1cc JUMP
---
0x1b9: JUMPDEST 
0x1ba: V164 = 0x1cd
0x1bd: V165 = 0x1
0x1bf: V166 = 0xa0
0x1c1: V167 = 0x2
0x1c3: V168 = EXP 0x2 0xa0
0x1c4: V169 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c5: V170 = 0x4
0x1c7: V171 = CALLDATALOAD 0x4
0x1c8: V172 = AND V171 0xffffffffffffffffffffffffffffffffffffffff
0x1c9: V173 = 0x2ed
0x1cc: JUMP 0x2ed
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1cd, V172]
Exit stack: [V13, 0x1cd, V172]

================================

Block 0x1cd
[0x1cd:0x1ce]
---
Predecessors: [0x308, 0x352, 0x3d9, 0x550, 0x5b8]
Successors: []
---
0x1cd JUMPDEST
0x1ce STOP
---
0x1cd: JUMPDEST 
0x1ce: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1cf
[0x1cf:0x1d5]
---
Predecessors: [0x27]
Successors: [0x1d6, 0x1da]
---
0x1cf JUMPDEST
0x1d0 CALLVALUE
0x1d1 ISZERO
0x1d2 PUSH2 0x1da
0x1d5 JUMPI
---
0x1cf: JUMPDEST 
0x1d0: V174 = CALLVALUE
0x1d1: V175 = ISZERO V174
0x1d2: V176 = 0x1da
0x1d5: JUMPI 0x1da V175
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1d6
[0x1d6:0x1d9]
---
Predecessors: [0x1cf]
Successors: []
---
0x1d6 PUSH1 0x0
0x1d8 DUP1
0x1d9 REVERT
---
0x1d6: V177 = 0x0
0x1d9: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1da
[0x1da:0x1ed]
---
Predecessors: [0x1cf]
Successors: [0x337]
---
0x1da JUMPDEST
0x1db PUSH2 0x1cd
0x1de PUSH1 0x1
0x1e0 PUSH1 0xa0
0x1e2 PUSH1 0x2
0x1e4 EXP
0x1e5 SUB
0x1e6 PUSH1 0x4
0x1e8 CALLDATALOAD
0x1e9 AND
0x1ea PUSH2 0x337
0x1ed JUMP
---
0x1da: JUMPDEST 
0x1db: V178 = 0x1cd
0x1de: V179 = 0x1
0x1e0: V180 = 0xa0
0x1e2: V181 = 0x2
0x1e4: V182 = EXP 0x2 0xa0
0x1e5: V183 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e6: V184 = 0x4
0x1e8: V185 = CALLDATALOAD 0x4
0x1e9: V186 = AND V185 0xffffffffffffffffffffffffffffffffffffffff
0x1ea: V187 = 0x337
0x1ed: JUMP 0x337
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1cd, V186]
Exit stack: [V13, 0x1cd, V186]

================================

Block 0x1ee
[0x1ee:0x1f4]
---
Predecessors: [0x32]
Successors: [0x1f5, 0x1f9]
---
0x1ee JUMPDEST
0x1ef CALLVALUE
0x1f0 ISZERO
0x1f1 PUSH2 0x1f9
0x1f4 JUMPI
---
0x1ee: JUMPDEST 
0x1ef: V188 = CALLVALUE
0x1f0: V189 = ISZERO V188
0x1f1: V190 = 0x1f9
0x1f4: JUMPI 0x1f9 V189
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1f5
[0x1f5:0x1f8]
---
Predecessors: [0x1ee]
Successors: []
---
0x1f5 PUSH1 0x0
0x1f7 DUP1
0x1f8 REVERT
---
0x1f5: V191 = 0x0
0x1f8: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1f9
[0x1f9:0x200]
---
Predecessors: [0x1ee]
Successors: [0x381]
---
0x1f9 JUMPDEST
0x1fa PUSH2 0x1cd
0x1fd PUSH2 0x381
0x200 JUMP
---
0x1f9: JUMPDEST 
0x1fa: V192 = 0x1cd
0x1fd: V193 = 0x381
0x200: JUMP 0x381
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1cd]
Exit stack: [V13, 0x1cd]

================================

Block 0x201
[0x201:0x207]
---
Predecessors: [0x3d]
Successors: [0x208, 0x20c]
---
0x201 JUMPDEST
0x202 CALLVALUE
0x203 ISZERO
0x204 PUSH2 0x20c
0x207 JUMPI
---
0x201: JUMPDEST 
0x202: V194 = CALLVALUE
0x203: V195 = ISZERO V194
0x204: V196 = 0x20c
0x207: JUMPI 0x20c V195
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x208
[0x208:0x20b]
---
Predecessors: [0x201]
Successors: []
---
0x208 PUSH1 0x0
0x20a DUP1
0x20b REVERT
---
0x208: V197 = 0x0
0x20b: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x20c
[0x20c:0x213]
---
Predecessors: [0x201]
Successors: [0x3db]
---
0x20c JUMPDEST
0x20d PUSH2 0x1cd
0x210 PUSH2 0x3db
0x213 JUMP
---
0x20c: JUMPDEST 
0x20d: V198 = 0x1cd
0x210: V199 = 0x3db
0x213: JUMP 0x3db
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1cd]
Exit stack: [V13, 0x1cd]

================================

Block 0x214
[0x214:0x21a]
---
Predecessors: [0x48]
Successors: [0x21b, 0x21f]
---
0x214 JUMPDEST
0x215 CALLVALUE
0x216 ISZERO
0x217 PUSH2 0x21f
0x21a JUMPI
---
0x214: JUMPDEST 
0x215: V200 = CALLVALUE
0x216: V201 = ISZERO V200
0x217: V202 = 0x21f
0x21a: JUMPI 0x21f V201
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x21b
[0x21b:0x21e]
---
Predecessors: [0x214]
Successors: []
---
0x21b PUSH1 0x0
0x21d DUP1
0x21e REVERT
---
0x21b: V203 = 0x0
0x21e: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x21f
[0x21f:0x226]
---
Predecessors: [0x214]
Successors: [0x402]
---
0x21f JUMPDEST
0x220 PUSH2 0x227
0x223 PUSH2 0x402
0x226 JUMP
---
0x21f: JUMPDEST 
0x220: V204 = 0x227
0x223: V205 = 0x402
0x226: JUMP 0x402
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x227]
Exit stack: [V13, 0x227]

================================

Block 0x227
[0x227:0x242]
---
Predecessors: [0x402, 0x57f, 0x58e, 0x5e7]
Successors: []
---
0x227 JUMPDEST
0x228 PUSH1 0x40
0x22a MLOAD
0x22b PUSH1 0x1
0x22d PUSH1 0xa0
0x22f PUSH1 0x2
0x231 EXP
0x232 SUB
0x233 SWAP1
0x234 SWAP2
0x235 AND
0x236 DUP2
0x237 MSTORE
0x238 PUSH1 0x20
0x23a ADD
0x23b PUSH1 0x40
0x23d MLOAD
0x23e DUP1
0x23f SWAP2
0x240 SUB
0x241 SWAP1
0x242 RETURN
---
0x227: JUMPDEST 
0x228: V206 = 0x40
0x22a: V207 = M[0x40]
0x22b: V208 = 0x1
0x22d: V209 = 0xa0
0x22f: V210 = 0x2
0x231: V211 = EXP 0x2 0xa0
0x232: V212 = SUB 0x10000000000000000000000000000000000000000 0x1
0x235: V213 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x237: M[V207] = V213
0x238: V214 = 0x20
0x23a: V215 = ADD 0x20 V207
0x23b: V216 = 0x40
0x23d: V217 = M[0x40]
0x240: V218 = SUB V215 V217
0x242: RETURN V217 V218
---
Entry stack: [V13, 0x227, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x227]

================================

Block 0x243
[0x243:0x249]
---
Predecessors: [0x53]
Successors: [0x24a, 0x24e]
---
0x243 JUMPDEST
0x244 CALLVALUE
0x245 ISZERO
0x246 PUSH2 0x24e
0x249 JUMPI
---
0x243: JUMPDEST 
0x244: V219 = CALLVALUE
0x245: V220 = ISZERO V219
0x246: V221 = 0x24e
0x249: JUMPI 0x24e V220
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x24a
[0x24a:0x24d]
---
Predecessors: [0x243]
Successors: []
---
0x24a PUSH1 0x0
0x24c DUP1
0x24d REVERT
---
0x24a: V222 = 0x0
0x24d: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x24e
[0x24e:0x261]
---
Predecessors: [0x243]
Successors: [0x411]
---
0x24e JUMPDEST
0x24f PUSH2 0x262
0x252 PUSH1 0x1
0x254 PUSH1 0xa0
0x256 PUSH1 0x2
0x258 EXP
0x259 SUB
0x25a PUSH1 0x4
0x25c CALLDATALOAD
0x25d AND
0x25e PUSH2 0x411
0x261 JUMP
---
0x24e: JUMPDEST 
0x24f: V223 = 0x262
0x252: V224 = 0x1
0x254: V225 = 0xa0
0x256: V226 = 0x2
0x258: V227 = EXP 0x2 0xa0
0x259: V228 = SUB 0x10000000000000000000000000000000000000000 0x1
0x25a: V229 = 0x4
0x25c: V230 = CALLDATALOAD 0x4
0x25d: V231 = AND V230 0xffffffffffffffffffffffffffffffffffffffff
0x25e: V232 = 0x411
0x261: JUMP 0x411
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x262, V231]
Exit stack: [V13, 0x262, V231]

================================

Block 0x262
[0x262:0x275]
---
Predecessors: [0x52f]
Successors: []
---
0x262 JUMPDEST
0x263 PUSH1 0x40
0x265 MLOAD
0x266 SWAP1
0x267 ISZERO
0x268 ISZERO
0x269 DUP2
0x26a MSTORE
0x26b PUSH1 0x20
0x26d ADD
0x26e PUSH1 0x40
0x270 MLOAD
0x271 DUP1
0x272 SWAP2
0x273 SUB
0x274 SWAP1
0x275 RETURN
---
0x262: JUMPDEST 
0x263: V233 = 0x40
0x265: V234 = M[0x40]
0x267: V235 = ISZERO S0
0x268: V236 = ISZERO V235
0x26a: M[V234] = V236
0x26b: V237 = 0x20
0x26d: V238 = ADD 0x20 V234
0x26e: V239 = 0x40
0x270: V240 = M[0x40]
0x273: V241 = SUB V238 V240
0x275: RETURN V240 V241
---
Entry stack: [V13, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x276
[0x276:0x27c]
---
Predecessors: [0x5e]
Successors: [0x27d, 0x281]
---
0x276 JUMPDEST
0x277 CALLVALUE
0x278 ISZERO
0x279 PUSH2 0x281
0x27c JUMPI
---
0x276: JUMPDEST 
0x277: V242 = CALLVALUE
0x278: V243 = ISZERO V242
0x279: V244 = 0x281
0x27c: JUMPI 0x281 V243
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x27d
[0x27d:0x280]
---
Predecessors: [0x276]
Successors: []
---
0x27d PUSH1 0x0
0x27f DUP1
0x280 REVERT
---
0x27d: V245 = 0x0
0x280: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x281
[0x281:0x294]
---
Predecessors: [0x276]
Successors: [0x535]
---
0x281 JUMPDEST
0x282 PUSH2 0x1cd
0x285 PUSH1 0x1
0x287 PUSH1 0xa0
0x289 PUSH1 0x2
0x28b EXP
0x28c SUB
0x28d PUSH1 0x4
0x28f CALLDATALOAD
0x290 AND
0x291 PUSH2 0x535
0x294 JUMP
---
0x281: JUMPDEST 
0x282: V246 = 0x1cd
0x285: V247 = 0x1
0x287: V248 = 0xa0
0x289: V249 = 0x2
0x28b: V250 = EXP 0x2 0xa0
0x28c: V251 = SUB 0x10000000000000000000000000000000000000000 0x1
0x28d: V252 = 0x4
0x28f: V253 = CALLDATALOAD 0x4
0x290: V254 = AND V253 0xffffffffffffffffffffffffffffffffffffffff
0x291: V255 = 0x535
0x294: JUMP 0x535
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1cd, V254]
Exit stack: [V13, 0x1cd, V254]

================================

Block 0x295
[0x295:0x29b]
---
Predecessors: [0x69]
Successors: [0x29c, 0x2a0]
---
0x295 JUMPDEST
0x296 CALLVALUE
0x297 ISZERO
0x298 PUSH2 0x2a0
0x29b JUMPI
---
0x295: JUMPDEST 
0x296: V256 = CALLVALUE
0x297: V257 = ISZERO V256
0x298: V258 = 0x2a0
0x29b: JUMPI 0x2a0 V257
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x29c
[0x29c:0x29f]
---
Predecessors: [0x295]
Successors: []
---
0x29c PUSH1 0x0
0x29e DUP1
0x29f REVERT
---
0x29c: V259 = 0x0
0x29f: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2a0
[0x2a0:0x2a7]
---
Predecessors: [0x295]
Successors: [0x57f]
---
0x2a0 JUMPDEST
0x2a1 PUSH2 0x227
0x2a4 PUSH2 0x57f
0x2a7 JUMP
---
0x2a0: JUMPDEST 
0x2a1: V260 = 0x227
0x2a4: V261 = 0x57f
0x2a7: JUMP 0x57f
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x227]
Exit stack: [V13, 0x227]

================================

Block 0x2a8
[0x2a8:0x2ae]
---
Predecessors: [0x74]
Successors: [0x2af, 0x2b3]
---
0x2a8 JUMPDEST
0x2a9 CALLVALUE
0x2aa ISZERO
0x2ab PUSH2 0x2b3
0x2ae JUMPI
---
0x2a8: JUMPDEST 
0x2a9: V262 = CALLVALUE
0x2aa: V263 = ISZERO V262
0x2ab: V264 = 0x2b3
0x2ae: JUMPI 0x2b3 V263
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2af
[0x2af:0x2b2]
---
Predecessors: [0x2a8]
Successors: []
---
0x2af PUSH1 0x0
0x2b1 DUP1
0x2b2 REVERT
---
0x2af: V265 = 0x0
0x2b2: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2b3
[0x2b3:0x2ba]
---
Predecessors: [0x2a8]
Successors: [0x58e]
---
0x2b3 JUMPDEST
0x2b4 PUSH2 0x227
0x2b7 PUSH2 0x58e
0x2ba JUMP
---
0x2b3: JUMPDEST 
0x2b4: V266 = 0x227
0x2b7: V267 = 0x58e
0x2ba: JUMP 0x58e
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x227]
Exit stack: [V13, 0x227]

================================

Block 0x2bb
[0x2bb:0x2c1]
---
Predecessors: [0x7f]
Successors: [0x2c2, 0x2c6]
---
0x2bb JUMPDEST
0x2bc CALLVALUE
0x2bd ISZERO
0x2be PUSH2 0x2c6
0x2c1 JUMPI
---
0x2bb: JUMPDEST 
0x2bc: V268 = CALLVALUE
0x2bd: V269 = ISZERO V268
0x2be: V270 = 0x2c6
0x2c1: JUMPI 0x2c6 V269
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2c2
[0x2c2:0x2c5]
---
Predecessors: [0x2bb]
Successors: []
---
0x2c2 PUSH1 0x0
0x2c4 DUP1
0x2c5 REVERT
---
0x2c2: V271 = 0x0
0x2c5: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2c6
[0x2c6:0x2d9]
---
Predecessors: [0x2bb]
Successors: [0x59d]
---
0x2c6 JUMPDEST
0x2c7 PUSH2 0x1cd
0x2ca PUSH1 0x1
0x2cc PUSH1 0xa0
0x2ce PUSH1 0x2
0x2d0 EXP
0x2d1 SUB
0x2d2 PUSH1 0x4
0x2d4 CALLDATALOAD
0x2d5 AND
0x2d6 PUSH2 0x59d
0x2d9 JUMP
---
0x2c6: JUMPDEST 
0x2c7: V272 = 0x1cd
0x2ca: V273 = 0x1
0x2cc: V274 = 0xa0
0x2ce: V275 = 0x2
0x2d0: V276 = EXP 0x2 0xa0
0x2d1: V277 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d2: V278 = 0x4
0x2d4: V279 = CALLDATALOAD 0x4
0x2d5: V280 = AND V279 0xffffffffffffffffffffffffffffffffffffffff
0x2d6: V281 = 0x59d
0x2d9: JUMP 0x59d
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1cd, V280]
Exit stack: [V13, 0x1cd, V280]

================================

Block 0x2da
[0x2da:0x2e0]
---
Predecessors: [0x8a]
Successors: [0x2e1, 0x2e5]
---
0x2da JUMPDEST
0x2db CALLVALUE
0x2dc ISZERO
0x2dd PUSH2 0x2e5
0x2e0 JUMPI
---
0x2da: JUMPDEST 
0x2db: V282 = CALLVALUE
0x2dc: V283 = ISZERO V282
0x2dd: V284 = 0x2e5
0x2e0: JUMPI 0x2e5 V283
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2e1
[0x2e1:0x2e4]
---
Predecessors: [0x2da]
Successors: []
---
0x2e1 PUSH1 0x0
0x2e3 DUP1
0x2e4 REVERT
---
0x2e1: V285 = 0x0
0x2e4: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2e5
[0x2e5:0x2ec]
---
Predecessors: [0x2da]
Successors: [0x5e7]
---
0x2e5 JUMPDEST
0x2e6 PUSH2 0x227
0x2e9 PUSH2 0x5e7
0x2ec JUMP
---
0x2e5: JUMPDEST 
0x2e6: V286 = 0x227
0x2e9: V287 = 0x5e7
0x2ec: JUMP 0x5e7
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x227]
Exit stack: [V13, 0x227]

================================

Block 0x2ed
[0x2ed:0x303]
---
Predecessors: [0x1b9]
Successors: [0x304, 0x308]
---
0x2ed JUMPDEST
0x2ee PUSH1 0x0
0x2f0 SLOAD
0x2f1 CALLER
0x2f2 PUSH1 0x1
0x2f4 PUSH1 0xa0
0x2f6 PUSH1 0x2
0x2f8 EXP
0x2f9 SUB
0x2fa SWAP1
0x2fb DUP2
0x2fc AND
0x2fd SWAP2
0x2fe AND
0x2ff EQ
0x300 PUSH2 0x308
0x303 JUMPI
---
0x2ed: JUMPDEST 
0x2ee: V288 = 0x0
0x2f0: V289 = S[0x0]
0x2f1: V290 = CALLER
0x2f2: V291 = 0x1
0x2f4: V292 = 0xa0
0x2f6: V293 = 0x2
0x2f8: V294 = EXP 0x2 0xa0
0x2f9: V295 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2fc: V296 = AND 0xffffffffffffffffffffffffffffffffffffffff V290
0x2fe: V297 = AND V289 0xffffffffffffffffffffffffffffffffffffffff
0x2ff: V298 = EQ V297 V296
0x300: V299 = 0x308
0x303: JUMPI 0x308 V298
---
Entry stack: [V13, 0x1cd, V172]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1cd, V172]

================================

Block 0x304
[0x304:0x307]
---
Predecessors: [0x2ed]
Successors: []
---
0x304 PUSH1 0x0
0x306 DUP1
0x307 REVERT
---
0x304: V300 = 0x0
0x307: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1cd, V172]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1cd, V172]

================================

Block 0x308
[0x308:0x336]
---
Predecessors: [0x2ed]
Successors: [0x1cd]
---
0x308 JUMPDEST
0x309 PUSH1 0x2
0x30b DUP1
0x30c SLOAD
0x30d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x322 NOT
0x323 AND
0x324 PUSH1 0x1
0x326 PUSH1 0xa0
0x328 PUSH1 0x2
0x32a EXP
0x32b SUB
0x32c SWAP3
0x32d SWAP1
0x32e SWAP3
0x32f AND
0x330 SWAP2
0x331 SWAP1
0x332 SWAP2
0x333 OR
0x334 SWAP1
0x335 SSTORE
0x336 JUMP
---
0x308: JUMPDEST 
0x309: V301 = 0x2
0x30c: V302 = S[0x2]
0x30d: V303 = 0xffffffffffffffffffffffffffffffffffffffff
0x322: V304 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x323: V305 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V302
0x324: V306 = 0x1
0x326: V307 = 0xa0
0x328: V308 = 0x2
0x32a: V309 = EXP 0x2 0xa0
0x32b: V310 = SUB 0x10000000000000000000000000000000000000000 0x1
0x32f: V311 = AND 0xffffffffffffffffffffffffffffffffffffffff V172
0x333: V312 = OR V311 V305
0x335: S[0x2] = V312
0x336: JUMP 0x1cd
---
Entry stack: [V13, 0x1cd, V172]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x337
[0x337:0x34d]
---
Predecessors: [0x1da]
Successors: [0x34e, 0x352]
---
0x337 JUMPDEST
0x338 PUSH1 0x0
0x33a SLOAD
0x33b CALLER
0x33c PUSH1 0x1
0x33e PUSH1 0xa0
0x340 PUSH1 0x2
0x342 EXP
0x343 SUB
0x344 SWAP1
0x345 DUP2
0x346 AND
0x347 SWAP2
0x348 AND
0x349 EQ
0x34a PUSH2 0x352
0x34d JUMPI
---
0x337: JUMPDEST 
0x338: V313 = 0x0
0x33a: V314 = S[0x0]
0x33b: V315 = CALLER
0x33c: V316 = 0x1
0x33e: V317 = 0xa0
0x340: V318 = 0x2
0x342: V319 = EXP 0x2 0xa0
0x343: V320 = SUB 0x10000000000000000000000000000000000000000 0x1
0x346: V321 = AND 0xffffffffffffffffffffffffffffffffffffffff V315
0x348: V322 = AND V314 0xffffffffffffffffffffffffffffffffffffffff
0x349: V323 = EQ V322 V321
0x34a: V324 = 0x352
0x34d: JUMPI 0x352 V323
---
Entry stack: [V13, 0x1cd, V186]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1cd, V186]

================================

Block 0x34e
[0x34e:0x351]
---
Predecessors: [0x337]
Successors: []
---
0x34e PUSH1 0x0
0x350 DUP1
0x351 REVERT
---
0x34e: V325 = 0x0
0x351: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1cd, V186]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1cd, V186]

================================

Block 0x352
[0x352:0x380]
---
Predecessors: [0x337]
Successors: [0x1cd]
---
0x352 JUMPDEST
0x353 PUSH1 0x3
0x355 DUP1
0x356 SLOAD
0x357 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x36c NOT
0x36d AND
0x36e PUSH1 0x1
0x370 PUSH1 0xa0
0x372 PUSH1 0x2
0x374 EXP
0x375 SUB
0x376 SWAP3
0x377 SWAP1
0x378 SWAP3
0x379 AND
0x37a SWAP2
0x37b SWAP1
0x37c SWAP2
0x37d OR
0x37e SWAP1
0x37f SSTORE
0x380 JUMP
---
0x352: JUMPDEST 
0x353: V326 = 0x3
0x356: V327 = S[0x3]
0x357: V328 = 0xffffffffffffffffffffffffffffffffffffffff
0x36c: V329 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x36d: V330 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V327
0x36e: V331 = 0x1
0x370: V332 = 0xa0
0x372: V333 = 0x2
0x374: V334 = EXP 0x2 0xa0
0x375: V335 = SUB 0x10000000000000000000000000000000000000000 0x1
0x379: V336 = AND 0xffffffffffffffffffffffffffffffffffffffff V186
0x37d: V337 = OR V336 V330
0x37f: S[0x3] = V337
0x380: JUMP 0x1cd
---
Entry stack: [V13, 0x1cd, V186]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x381
[0x381:0x397]
---
Predecessors: [0x1f9]
Successors: [0x398, 0x39c]
---
0x381 JUMPDEST
0x382 PUSH1 0x0
0x384 SLOAD
0x385 CALLER
0x386 PUSH1 0x1
0x388 PUSH1 0xa0
0x38a PUSH1 0x2
0x38c EXP
0x38d SUB
0x38e SWAP1
0x38f DUP2
0x390 AND
0x391 SWAP2
0x392 AND
0x393 EQ
0x394 PUSH2 0x39c
0x397 JUMPI
---
0x381: JUMPDEST 
0x382: V338 = 0x0
0x384: V339 = S[0x0]
0x385: V340 = CALLER
0x386: V341 = 0x1
0x388: V342 = 0xa0
0x38a: V343 = 0x2
0x38c: V344 = EXP 0x2 0xa0
0x38d: V345 = SUB 0x10000000000000000000000000000000000000000 0x1
0x390: V346 = AND 0xffffffffffffffffffffffffffffffffffffffff V340
0x392: V347 = AND V339 0xffffffffffffffffffffffffffffffffffffffff
0x393: V348 = EQ V347 V346
0x394: V349 = 0x39c
0x397: JUMPI 0x39c V348
---
Entry stack: [V13, 0x1cd]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1cd]

================================

Block 0x398
[0x398:0x39b]
---
Predecessors: [0x381]
Successors: []
---
0x398 PUSH1 0x0
0x39a DUP1
0x39b REVERT
---
0x398: V350 = 0x0
0x39b: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1cd]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1cd]

================================

Block 0x39c
[0x39c:0x3d4]
---
Predecessors: [0x381]
Successors: [0x3d5, 0x3d9]
---
0x39c JUMPDEST
0x39d CALLER
0x39e PUSH1 0x1
0x3a0 PUSH1 0xa0
0x3a2 PUSH1 0x2
0x3a4 EXP
0x3a5 SUB
0x3a6 AND
0x3a7 PUSH2 0x8fc
0x3aa ADDRESS
0x3ab PUSH1 0x1
0x3ad PUSH1 0xa0
0x3af PUSH1 0x2
0x3b1 EXP
0x3b2 SUB
0x3b3 AND
0x3b4 BALANCE
0x3b5 SWAP1
0x3b6 DUP2
0x3b7 ISZERO
0x3b8 MUL
0x3b9 SWAP1
0x3ba PUSH1 0x40
0x3bc MLOAD
0x3bd PUSH1 0x0
0x3bf PUSH1 0x40
0x3c1 MLOAD
0x3c2 DUP1
0x3c3 DUP4
0x3c4 SUB
0x3c5 DUP2
0x3c6 DUP6
0x3c7 DUP9
0x3c8 DUP9
0x3c9 CALL
0x3ca SWAP4
0x3cb POP
0x3cc POP
0x3cd POP
0x3ce POP
0x3cf ISZERO
0x3d0 ISZERO
0x3d1 PUSH2 0x3d9
0x3d4 JUMPI
---
0x39c: JUMPDEST 
0x39d: V351 = CALLER
0x39e: V352 = 0x1
0x3a0: V353 = 0xa0
0x3a2: V354 = 0x2
0x3a4: V355 = EXP 0x2 0xa0
0x3a5: V356 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a6: V357 = AND 0xffffffffffffffffffffffffffffffffffffffff V351
0x3a7: V358 = 0x8fc
0x3aa: V359 = ADDRESS
0x3ab: V360 = 0x1
0x3ad: V361 = 0xa0
0x3af: V362 = 0x2
0x3b1: V363 = EXP 0x2 0xa0
0x3b2: V364 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b3: V365 = AND 0xffffffffffffffffffffffffffffffffffffffff V359
0x3b4: V366 = BALANCE V365
0x3b7: V367 = ISZERO V366
0x3b8: V368 = MUL V367 0x8fc
0x3ba: V369 = 0x40
0x3bc: V370 = M[0x40]
0x3bd: V371 = 0x0
0x3bf: V372 = 0x40
0x3c1: V373 = M[0x40]
0x3c4: V374 = SUB V370 V373
0x3c9: V375 = CALL V368 V357 V366 V373 V374 V373 0x0
0x3cf: V376 = ISZERO V375
0x3d0: V377 = ISZERO V376
0x3d1: V378 = 0x3d9
0x3d4: JUMPI 0x3d9 V377
---
Entry stack: [V13, 0x1cd]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1cd]

================================

Block 0x3d5
[0x3d5:0x3d8]
---
Predecessors: [0x39c]
Successors: []
---
0x3d5 PUSH1 0x0
0x3d7 DUP1
0x3d8 REVERT
---
0x3d5: V379 = 0x0
0x3d8: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1cd]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1cd]

================================

Block 0x3d9
[0x3d9:0x3da]
---
Predecessors: [0x39c]
Successors: [0x1cd]
---
0x3d9 JUMPDEST
0x3da JUMP
---
0x3d9: JUMPDEST 
0x3da: JUMP 0x1cd
---
Entry stack: [V13, 0x1cd]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x3db
[0x3db:0x3f1]
---
Predecessors: [0x20c]
Successors: [0x3f2, 0x3f6]
---
0x3db JUMPDEST
0x3dc PUSH1 0x0
0x3de SLOAD
0x3df CALLER
0x3e0 PUSH1 0x1
0x3e2 PUSH1 0xa0
0x3e4 PUSH1 0x2
0x3e6 EXP
0x3e7 SUB
0x3e8 SWAP1
0x3e9 DUP2
0x3ea AND
0x3eb SWAP2
0x3ec AND
0x3ed EQ
0x3ee PUSH2 0x3f6
0x3f1 JUMPI
---
0x3db: JUMPDEST 
0x3dc: V380 = 0x0
0x3de: V381 = S[0x0]
0x3df: V382 = CALLER
0x3e0: V383 = 0x1
0x3e2: V384 = 0xa0
0x3e4: V385 = 0x2
0x3e6: V386 = EXP 0x2 0xa0
0x3e7: V387 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ea: V388 = AND 0xffffffffffffffffffffffffffffffffffffffff V382
0x3ec: V389 = AND V381 0xffffffffffffffffffffffffffffffffffffffff
0x3ed: V390 = EQ V389 V388
0x3ee: V391 = 0x3f6
0x3f1: JUMPI 0x3f6 V390
---
Entry stack: [V13, 0x1cd]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1cd]

================================

Block 0x3f2
[0x3f2:0x3f5]
---
Predecessors: [0x3db]
Successors: []
---
0x3f2 PUSH1 0x0
0x3f4 DUP1
0x3f5 REVERT
---
0x3f2: V392 = 0x0
0x3f5: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1cd]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1cd]

================================

Block 0x3f6
[0x3f6:0x401]
---
Predecessors: [0x3db]
Successors: []
---
0x3f6 JUMPDEST
0x3f7 CALLER
0x3f8 PUSH1 0x1
0x3fa PUSH1 0xa0
0x3fc PUSH1 0x2
0x3fe EXP
0x3ff SUB
0x400 AND
0x401 SELFDESTRUCT
---
0x3f6: JUMPDEST 
0x3f7: V393 = CALLER
0x3f8: V394 = 0x1
0x3fa: V395 = 0xa0
0x3fc: V396 = 0x2
0x3fe: V397 = EXP 0x2 0xa0
0x3ff: V398 = SUB 0x10000000000000000000000000000000000000000 0x1
0x400: V399 = AND 0xffffffffffffffffffffffffffffffffffffffff V393
0x401: SELFDESTRUCT V399
---
Entry stack: [V13, 0x1cd]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1cd]

================================

Block 0x402
[0x402:0x410]
---
Predecessors: [0x21f]
Successors: [0x227]
---
0x402 JUMPDEST
0x403 PUSH1 0x3
0x405 SLOAD
0x406 PUSH1 0x1
0x408 PUSH1 0xa0
0x40a PUSH1 0x2
0x40c EXP
0x40d SUB
0x40e AND
0x40f DUP2
0x410 JUMP
---
0x402: JUMPDEST 
0x403: V400 = 0x3
0x405: V401 = S[0x3]
0x406: V402 = 0x1
0x408: V403 = 0xa0
0x40a: V404 = 0x2
0x40c: V405 = EXP 0x2 0xa0
0x40d: V406 = SUB 0x10000000000000000000000000000000000000000 0x1
0x40e: V407 = AND 0xffffffffffffffffffffffffffffffffffffffff V401
0x410: JUMP 0x227
---
Entry stack: [V13, 0x227]
Stack pops: 1
Stack additions: [S0, V407]
Exit stack: [V13, 0x227, V407]

================================

Block 0x411
[0x411:0x42a]
---
Predecessors: [0x24e]
Successors: [0x42b, 0x42f]
---
0x411 JUMPDEST
0x412 PUSH1 0x0
0x414 DUP1
0x415 SLOAD
0x416 DUP2
0x417 SWAP1
0x418 CALLER
0x419 PUSH1 0x1
0x41b PUSH1 0xa0
0x41d PUSH1 0x2
0x41f EXP
0x420 SUB
0x421 SWAP1
0x422 DUP2
0x423 AND
0x424 SWAP2
0x425 AND
0x426 EQ
0x427 PUSH2 0x42f
0x42a JUMPI
---
0x411: JUMPDEST 
0x412: V408 = 0x0
0x415: V409 = S[0x0]
0x418: V410 = CALLER
0x419: V411 = 0x1
0x41b: V412 = 0xa0
0x41d: V413 = 0x2
0x41f: V414 = EXP 0x2 0xa0
0x420: V415 = SUB 0x10000000000000000000000000000000000000000 0x1
0x423: V416 = AND 0xffffffffffffffffffffffffffffffffffffffff V410
0x425: V417 = AND V409 0xffffffffffffffffffffffffffffffffffffffff
0x426: V418 = EQ V417 V416
0x427: V419 = 0x42f
0x42a: JUMPI 0x42f V418
---
Entry stack: [V13, 0x262, V231]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V13, 0x262, V231, 0x0, 0x0]

================================

Block 0x42b
[0x42b:0x42e]
---
Predecessors: [0x411]
Successors: []
---
0x42b PUSH1 0x0
0x42d DUP1
0x42e REVERT
---
0x42b: V420 = 0x0
0x42e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x262, V231, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x262, V231, 0x0, 0x0]

================================

Block 0x42f
[0x42f:0x481]
---
Predecessors: [0x411]
Successors: [0x482, 0x486]
---
0x42f JUMPDEST
0x430 DUP3
0x431 PUSH1 0x1
0x433 PUSH1 0xa0
0x435 PUSH1 0x2
0x437 EXP
0x438 SUB
0x439 AND
0x43a PUSH4 0x70a08231
0x43f ADDRESS
0x440 PUSH1 0x0
0x442 PUSH1 0x40
0x444 MLOAD
0x445 PUSH1 0x20
0x447 ADD
0x448 MSTORE
0x449 PUSH1 0x40
0x44b MLOAD
0x44c PUSH1 0xe0
0x44e PUSH1 0x2
0x450 EXP
0x451 PUSH4 0xffffffff
0x456 DUP5
0x457 AND
0x458 MUL
0x459 DUP2
0x45a MSTORE
0x45b PUSH1 0x1
0x45d PUSH1 0xa0
0x45f PUSH1 0x2
0x461 EXP
0x462 SUB
0x463 SWAP1
0x464 SWAP2
0x465 AND
0x466 PUSH1 0x4
0x468 DUP3
0x469 ADD
0x46a MSTORE
0x46b PUSH1 0x24
0x46d ADD
0x46e PUSH1 0x20
0x470 PUSH1 0x40
0x472 MLOAD
0x473 DUP1
0x474 DUP4
0x475 SUB
0x476 DUP2
0x477 PUSH1 0x0
0x479 DUP8
0x47a DUP1
0x47b EXTCODESIZE
0x47c ISZERO
0x47d ISZERO
0x47e PUSH2 0x486
0x481 JUMPI
---
0x42f: JUMPDEST 
0x431: V421 = 0x1
0x433: V422 = 0xa0
0x435: V423 = 0x2
0x437: V424 = EXP 0x2 0xa0
0x438: V425 = SUB 0x10000000000000000000000000000000000000000 0x1
0x439: V426 = AND 0xffffffffffffffffffffffffffffffffffffffff V231
0x43a: V427 = 0x70a08231
0x43f: V428 = ADDRESS
0x440: V429 = 0x0
0x442: V430 = 0x40
0x444: V431 = M[0x40]
0x445: V432 = 0x20
0x447: V433 = ADD 0x20 V431
0x448: M[V433] = 0x0
0x449: V434 = 0x40
0x44b: V435 = M[0x40]
0x44c: V436 = 0xe0
0x44e: V437 = 0x2
0x450: V438 = EXP 0x2 0xe0
0x451: V439 = 0xffffffff
0x457: V440 = AND 0x70a08231 0xffffffff
0x458: V441 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x45a: M[V435] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x45b: V442 = 0x1
0x45d: V443 = 0xa0
0x45f: V444 = 0x2
0x461: V445 = EXP 0x2 0xa0
0x462: V446 = SUB 0x10000000000000000000000000000000000000000 0x1
0x465: V447 = AND V428 0xffffffffffffffffffffffffffffffffffffffff
0x466: V448 = 0x4
0x469: V449 = ADD V435 0x4
0x46a: M[V449] = V447
0x46b: V450 = 0x24
0x46d: V451 = ADD 0x24 V435
0x46e: V452 = 0x20
0x470: V453 = 0x40
0x472: V454 = M[0x40]
0x475: V455 = SUB V451 V454
0x477: V456 = 0x0
0x47b: V457 = EXTCODESIZE V426
0x47c: V458 = ISZERO V457
0x47d: V459 = ISZERO V458
0x47e: V460 = 0x486
0x481: JUMPI 0x486 V459
---
Entry stack: [V13, 0x262, V231, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V426, 0x70a08231, V451, 0x20, V454, V455, V454, 0x0, V426]
Exit stack: [V13, 0x262, V231, 0x0, 0x0, V426, 0x70a08231, V451, 0x20, V454, V455, V454, 0x0, V426]

================================

Block 0x482
[0x482:0x485]
---
Predecessors: [0x42f]
Successors: []
---
0x482 PUSH1 0x0
0x484 DUP1
0x485 REVERT
---
0x482: V461 = 0x0
0x485: REVERT 0x0 0x0
---
Entry stack: [V13, 0x262, V231, 0x0, 0x0, V426, 0x70a08231, V451, 0x20, V454, V455, V454, 0x0, V426]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x262, V231, 0x0, 0x0, V426, 0x70a08231, V451, 0x20, V454, V455, V454, 0x0, V426]

================================

Block 0x486
[0x486:0x492]
---
Predecessors: [0x42f]
Successors: [0x493, 0x497]
---
0x486 JUMPDEST
0x487 PUSH2 0x2c6
0x48a GAS
0x48b SUB
0x48c CALL
0x48d ISZERO
0x48e ISZERO
0x48f PUSH2 0x497
0x492 JUMPI
---
0x486: JUMPDEST 
0x487: V462 = 0x2c6
0x48a: V463 = GAS
0x48b: V464 = SUB V463 0x2c6
0x48c: V465 = CALL V464 V426 0x0 V454 V455 V454 0x20
0x48d: V466 = ISZERO V465
0x48e: V467 = ISZERO V466
0x48f: V468 = 0x497
0x492: JUMPI 0x497 V467
---
Entry stack: [V13, 0x262, V231, 0x0, 0x0, V426, 0x70a08231, V451, 0x20, V454, V455, V454, 0x0, V426]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x262, V231, 0x0, 0x0, V426, 0x70a08231, V451]

================================

Block 0x493
[0x493:0x496]
---
Predecessors: [0x486]
Successors: []
---
0x493 PUSH1 0x0
0x495 DUP1
0x496 REVERT
---
0x493: V469 = 0x0
0x496: REVERT 0x0 0x0
---
Entry stack: [V13, 0x262, V231, 0x0, 0x0, V426, 0x70a08231, V451]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x262, V231, 0x0, 0x0, V426, 0x70a08231, V451]

================================

Block 0x497
[0x497:0x4ab]
---
Predecessors: [0x486]
Successors: [0x4ac, 0x52a]
---
0x497 JUMPDEST
0x498 POP
0x499 POP
0x49a POP
0x49b PUSH1 0x40
0x49d MLOAD
0x49e DUP1
0x49f MLOAD
0x4a0 SWAP2
0x4a1 POP
0x4a2 POP
0x4a3 PUSH1 0x0
0x4a5 DUP2
0x4a6 GT
0x4a7 ISZERO
0x4a8 PUSH2 0x52a
0x4ab JUMPI
---
0x497: JUMPDEST 
0x49b: V470 = 0x40
0x49d: V471 = M[0x40]
0x49f: V472 = M[V471]
0x4a3: V473 = 0x0
0x4a6: V474 = GT V472 0x0
0x4a7: V475 = ISZERO V474
0x4a8: V476 = 0x52a
0x4ab: JUMPI 0x52a V475
---
Entry stack: [V13, 0x262, V231, 0x0, 0x0, V426, 0x70a08231, V451]
Stack pops: 4
Stack additions: [V472]
Exit stack: [V13, 0x262, V231, 0x0, V472]

================================

Block 0x4ac
[0x4ac:0x503]
---
Predecessors: [0x497]
Successors: [0x504, 0x508]
---
0x4ac DUP3
0x4ad PUSH1 0x1
0x4af PUSH1 0xa0
0x4b1 PUSH1 0x2
0x4b3 EXP
0x4b4 SUB
0x4b5 AND
0x4b6 PUSH4 0xa9059cbb
0x4bb CALLER
0x4bc DUP4
0x4bd PUSH1 0x0
0x4bf PUSH1 0x40
0x4c1 MLOAD
0x4c2 PUSH1 0x20
0x4c4 ADD
0x4c5 MSTORE
0x4c6 PUSH1 0x40
0x4c8 MLOAD
0x4c9 PUSH1 0xe0
0x4cb PUSH1 0x2
0x4cd EXP
0x4ce PUSH4 0xffffffff
0x4d3 DUP6
0x4d4 AND
0x4d5 MUL
0x4d6 DUP2
0x4d7 MSTORE
0x4d8 PUSH1 0x1
0x4da PUSH1 0xa0
0x4dc PUSH1 0x2
0x4de EXP
0x4df SUB
0x4e0 SWAP1
0x4e1 SWAP3
0x4e2 AND
0x4e3 PUSH1 0x4
0x4e5 DUP4
0x4e6 ADD
0x4e7 MSTORE
0x4e8 PUSH1 0x24
0x4ea DUP3
0x4eb ADD
0x4ec MSTORE
0x4ed PUSH1 0x44
0x4ef ADD
0x4f0 PUSH1 0x20
0x4f2 PUSH1 0x40
0x4f4 MLOAD
0x4f5 DUP1
0x4f6 DUP4
0x4f7 SUB
0x4f8 DUP2
0x4f9 PUSH1 0x0
0x4fb DUP8
0x4fc DUP1
0x4fd EXTCODESIZE
0x4fe ISZERO
0x4ff ISZERO
0x500 PUSH2 0x508
0x503 JUMPI
---
0x4ad: V477 = 0x1
0x4af: V478 = 0xa0
0x4b1: V479 = 0x2
0x4b3: V480 = EXP 0x2 0xa0
0x4b4: V481 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4b5: V482 = AND 0xffffffffffffffffffffffffffffffffffffffff V231
0x4b6: V483 = 0xa9059cbb
0x4bb: V484 = CALLER
0x4bd: V485 = 0x0
0x4bf: V486 = 0x40
0x4c1: V487 = M[0x40]
0x4c2: V488 = 0x20
0x4c4: V489 = ADD 0x20 V487
0x4c5: M[V489] = 0x0
0x4c6: V490 = 0x40
0x4c8: V491 = M[0x40]
0x4c9: V492 = 0xe0
0x4cb: V493 = 0x2
0x4cd: V494 = EXP 0x2 0xe0
0x4ce: V495 = 0xffffffff
0x4d4: V496 = AND 0xa9059cbb 0xffffffff
0x4d5: V497 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x4d7: M[V491] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x4d8: V498 = 0x1
0x4da: V499 = 0xa0
0x4dc: V500 = 0x2
0x4de: V501 = EXP 0x2 0xa0
0x4df: V502 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4e2: V503 = AND V484 0xffffffffffffffffffffffffffffffffffffffff
0x4e3: V504 = 0x4
0x4e6: V505 = ADD V491 0x4
0x4e7: M[V505] = V503
0x4e8: V506 = 0x24
0x4eb: V507 = ADD V491 0x24
0x4ec: M[V507] = V472
0x4ed: V508 = 0x44
0x4ef: V509 = ADD 0x44 V491
0x4f0: V510 = 0x20
0x4f2: V511 = 0x40
0x4f4: V512 = M[0x40]
0x4f7: V513 = SUB V509 V512
0x4f9: V514 = 0x0
0x4fd: V515 = EXTCODESIZE V482
0x4fe: V516 = ISZERO V515
0x4ff: V517 = ISZERO V516
0x500: V518 = 0x508
0x503: JUMPI 0x508 V517
---
Entry stack: [V13, 0x262, V231, 0x0, V472]
Stack pops: 3
Stack additions: [S2, S1, S0, V482, 0xa9059cbb, V509, 0x20, V512, V513, V512, 0x0, V482]
Exit stack: [V13, 0x262, V231, 0x0, V472, V482, 0xa9059cbb, V509, 0x20, V512, V513, V512, 0x0, V482]

================================

Block 0x504
[0x504:0x507]
---
Predecessors: [0x4ac]
Successors: []
---
0x504 PUSH1 0x0
0x506 DUP1
0x507 REVERT
---
0x504: V519 = 0x0
0x507: REVERT 0x0 0x0
---
Entry stack: [V13, 0x262, V231, 0x0, V472, V482, 0xa9059cbb, V509, 0x20, V512, V513, V512, 0x0, V482]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x262, V231, 0x0, V472, V482, 0xa9059cbb, V509, 0x20, V512, V513, V512, 0x0, V482]

================================

Block 0x508
[0x508:0x514]
---
Predecessors: [0x4ac]
Successors: [0x515, 0x519]
---
0x508 JUMPDEST
0x509 PUSH2 0x2c6
0x50c GAS
0x50d SUB
0x50e CALL
0x50f ISZERO
0x510 ISZERO
0x511 PUSH2 0x519
0x514 JUMPI
---
0x508: JUMPDEST 
0x509: V520 = 0x2c6
0x50c: V521 = GAS
0x50d: V522 = SUB V521 0x2c6
0x50e: V523 = CALL V522 V482 0x0 V512 V513 V512 0x20
0x50f: V524 = ISZERO V523
0x510: V525 = ISZERO V524
0x511: V526 = 0x519
0x514: JUMPI 0x519 V525
---
Entry stack: [V13, 0x262, V231, 0x0, V472, V482, 0xa9059cbb, V509, 0x20, V512, V513, V512, 0x0, V482]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x262, V231, 0x0, V472, V482, 0xa9059cbb, V509]

================================

Block 0x515
[0x515:0x518]
---
Predecessors: [0x508]
Successors: []
---
0x515 PUSH1 0x0
0x517 DUP1
0x518 REVERT
---
0x515: V527 = 0x0
0x518: REVERT 0x0 0x0
---
Entry stack: [V13, 0x262, V231, 0x0, V472, V482, 0xa9059cbb, V509]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x262, V231, 0x0, V472, V482, 0xa9059cbb, V509]

================================

Block 0x519
[0x519:0x529]
---
Predecessors: [0x508]
Successors: [0x52f]
---
0x519 JUMPDEST
0x51a POP
0x51b POP
0x51c POP
0x51d PUSH1 0x40
0x51f MLOAD
0x520 DUP1
0x521 MLOAD
0x522 SWAP1
0x523 POP
0x524 SWAP2
0x525 POP
0x526 PUSH2 0x52f
0x529 JUMP
---
0x519: JUMPDEST 
0x51d: V528 = 0x40
0x51f: V529 = M[0x40]
0x521: V530 = M[V529]
0x526: V531 = 0x52f
0x529: JUMP 0x52f
---
Entry stack: [V13, 0x262, V231, 0x0, V472, V482, 0xa9059cbb, V509]
Stack pops: 5
Stack additions: [V530, S3]
Exit stack: [V13, 0x262, V231, V530, V472]

================================

Block 0x52a
[0x52a:0x52e]
---
Predecessors: [0x497]
Successors: [0x52f]
---
0x52a JUMPDEST
0x52b PUSH1 0x0
0x52d SWAP2
0x52e POP
---
0x52a: JUMPDEST 
0x52b: V532 = 0x0
---
Entry stack: [V13, 0x262, V231, 0x0, V472]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V13, 0x262, V231, 0x0, V472]

================================

Block 0x52f
[0x52f:0x534]
---
Predecessors: [0x519, 0x52a]
Successors: [0x262]
---
0x52f JUMPDEST
0x530 POP
0x531 SWAP2
0x532 SWAP1
0x533 POP
0x534 JUMP
---
0x52f: JUMPDEST 
0x534: JUMP 0x262
---
Entry stack: [V13, 0x262, V231, S1, V472]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V13, S1]

================================

Block 0x535
[0x535:0x54b]
---
Predecessors: [0x281]
Successors: [0x54c, 0x550]
---
0x535 JUMPDEST
0x536 PUSH1 0x0
0x538 SLOAD
0x539 CALLER
0x53a PUSH1 0x1
0x53c PUSH1 0xa0
0x53e PUSH1 0x2
0x540 EXP
0x541 SUB
0x542 SWAP1
0x543 DUP2
0x544 AND
0x545 SWAP2
0x546 AND
0x547 EQ
0x548 PUSH2 0x550
0x54b JUMPI
---
0x535: JUMPDEST 
0x536: V533 = 0x0
0x538: V534 = S[0x0]
0x539: V535 = CALLER
0x53a: V536 = 0x1
0x53c: V537 = 0xa0
0x53e: V538 = 0x2
0x540: V539 = EXP 0x2 0xa0
0x541: V540 = SUB 0x10000000000000000000000000000000000000000 0x1
0x544: V541 = AND 0xffffffffffffffffffffffffffffffffffffffff V535
0x546: V542 = AND V534 0xffffffffffffffffffffffffffffffffffffffff
0x547: V543 = EQ V542 V541
0x548: V544 = 0x550
0x54b: JUMPI 0x550 V543
---
Entry stack: [V13, 0x1cd, V254]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1cd, V254]

================================

Block 0x54c
[0x54c:0x54f]
---
Predecessors: [0x535]
Successors: []
---
0x54c PUSH1 0x0
0x54e DUP1
0x54f REVERT
---
0x54c: V545 = 0x0
0x54f: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1cd, V254]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1cd, V254]

================================

Block 0x550
[0x550:0x57e]
---
Predecessors: [0x535]
Successors: [0x1cd]
---
0x550 JUMPDEST
0x551 PUSH1 0x1
0x553 DUP1
0x554 SLOAD
0x555 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x56a NOT
0x56b AND
0x56c PUSH1 0x1
0x56e PUSH1 0xa0
0x570 PUSH1 0x2
0x572 EXP
0x573 SUB
0x574 SWAP3
0x575 SWAP1
0x576 SWAP3
0x577 AND
0x578 SWAP2
0x579 SWAP1
0x57a SWAP2
0x57b OR
0x57c SWAP1
0x57d SSTORE
0x57e JUMP
---
0x550: JUMPDEST 
0x551: V546 = 0x1
0x554: V547 = S[0x1]
0x555: V548 = 0xffffffffffffffffffffffffffffffffffffffff
0x56a: V549 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x56b: V550 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V547
0x56c: V551 = 0x1
0x56e: V552 = 0xa0
0x570: V553 = 0x2
0x572: V554 = EXP 0x2 0xa0
0x573: V555 = SUB 0x10000000000000000000000000000000000000000 0x1
0x577: V556 = AND 0xffffffffffffffffffffffffffffffffffffffff V254
0x57b: V557 = OR V556 V550
0x57d: S[0x1] = V557
0x57e: JUMP 0x1cd
---
Entry stack: [V13, 0x1cd, V254]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x57f
[0x57f:0x58d]
---
Predecessors: [0x2a0]
Successors: [0x227]
---
0x57f JUMPDEST
0x580 PUSH1 0x0
0x582 SLOAD
0x583 PUSH1 0x1
0x585 PUSH1 0xa0
0x587 PUSH1 0x2
0x589 EXP
0x58a SUB
0x58b AND
0x58c DUP2
0x58d JUMP
---
0x57f: JUMPDEST 
0x580: V558 = 0x0
0x582: V559 = S[0x0]
0x583: V560 = 0x1
0x585: V561 = 0xa0
0x587: V562 = 0x2
0x589: V563 = EXP 0x2 0xa0
0x58a: V564 = SUB 0x10000000000000000000000000000000000000000 0x1
0x58b: V565 = AND 0xffffffffffffffffffffffffffffffffffffffff V559
0x58d: JUMP 0x227
---
Entry stack: [V13, 0x227]
Stack pops: 1
Stack additions: [S0, V565]
Exit stack: [V13, 0x227, V565]

================================

Block 0x58e
[0x58e:0x59c]
---
Predecessors: [0x2b3]
Successors: [0x227]
---
0x58e JUMPDEST
0x58f PUSH1 0x1
0x591 SLOAD
0x592 PUSH1 0x1
0x594 PUSH1 0xa0
0x596 PUSH1 0x2
0x598 EXP
0x599 SUB
0x59a AND
0x59b DUP2
0x59c JUMP
---
0x58e: JUMPDEST 
0x58f: V566 = 0x1
0x591: V567 = S[0x1]
0x592: V568 = 0x1
0x594: V569 = 0xa0
0x596: V570 = 0x2
0x598: V571 = EXP 0x2 0xa0
0x599: V572 = SUB 0x10000000000000000000000000000000000000000 0x1
0x59a: V573 = AND 0xffffffffffffffffffffffffffffffffffffffff V567
0x59c: JUMP 0x227
---
Entry stack: [V13, 0x227]
Stack pops: 1
Stack additions: [S0, V573]
Exit stack: [V13, 0x227, V573]

================================

Block 0x59d
[0x59d:0x5b3]
---
Predecessors: [0x2c6]
Successors: [0x5b4, 0x5b8]
---
0x59d JUMPDEST
0x59e PUSH1 0x0
0x5a0 SLOAD
0x5a1 CALLER
0x5a2 PUSH1 0x1
0x5a4 PUSH1 0xa0
0x5a6 PUSH1 0x2
0x5a8 EXP
0x5a9 SUB
0x5aa SWAP1
0x5ab DUP2
0x5ac AND
0x5ad SWAP2
0x5ae AND
0x5af EQ
0x5b0 PUSH2 0x5b8
0x5b3 JUMPI
---
0x59d: JUMPDEST 
0x59e: V574 = 0x0
0x5a0: V575 = S[0x0]
0x5a1: V576 = CALLER
0x5a2: V577 = 0x1
0x5a4: V578 = 0xa0
0x5a6: V579 = 0x2
0x5a8: V580 = EXP 0x2 0xa0
0x5a9: V581 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ac: V582 = AND 0xffffffffffffffffffffffffffffffffffffffff V576
0x5ae: V583 = AND V575 0xffffffffffffffffffffffffffffffffffffffff
0x5af: V584 = EQ V583 V582
0x5b0: V585 = 0x5b8
0x5b3: JUMPI 0x5b8 V584
---
Entry stack: [V13, 0x1cd, V280]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1cd, V280]

================================

Block 0x5b4
[0x5b4:0x5b7]
---
Predecessors: [0x59d]
Successors: []
---
0x5b4 PUSH1 0x0
0x5b6 DUP1
0x5b7 REVERT
---
0x5b4: V586 = 0x0
0x5b7: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1cd, V280]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1cd, V280]

================================

Block 0x5b8
[0x5b8:0x5e6]
---
Predecessors: [0x59d]
Successors: [0x1cd]
---
0x5b8 JUMPDEST
0x5b9 PUSH1 0x0
0x5bb DUP1
0x5bc SLOAD
0x5bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d2 NOT
0x5d3 AND
0x5d4 PUSH1 0x1
0x5d6 PUSH1 0xa0
0x5d8 PUSH1 0x2
0x5da EXP
0x5db SUB
0x5dc SWAP3
0x5dd SWAP1
0x5de SWAP3
0x5df AND
0x5e0 SWAP2
0x5e1 SWAP1
0x5e2 SWAP2
0x5e3 OR
0x5e4 SWAP1
0x5e5 SSTORE
0x5e6 JUMP
---
0x5b8: JUMPDEST 
0x5b9: V587 = 0x0
0x5bc: V588 = S[0x0]
0x5bd: V589 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d2: V590 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x5d3: V591 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V588
0x5d4: V592 = 0x1
0x5d6: V593 = 0xa0
0x5d8: V594 = 0x2
0x5da: V595 = EXP 0x2 0xa0
0x5db: V596 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5df: V597 = AND 0xffffffffffffffffffffffffffffffffffffffff V280
0x5e3: V598 = OR V597 V591
0x5e5: S[0x0] = V598
0x5e6: JUMP 0x1cd
---
Entry stack: [V13, 0x1cd, V280]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x5e7
[0x5e7:0x5f5]
---
Predecessors: [0x2e5]
Successors: [0x227]
---
0x5e7 JUMPDEST
0x5e8 PUSH1 0x2
0x5ea SLOAD
0x5eb PUSH1 0x1
0x5ed PUSH1 0xa0
0x5ef PUSH1 0x2
0x5f1 EXP
0x5f2 SUB
0x5f3 AND
0x5f4 DUP2
0x5f5 JUMP
---
0x5e7: JUMPDEST 
0x5e8: V599 = 0x2
0x5ea: V600 = S[0x2]
0x5eb: V601 = 0x1
0x5ed: V602 = 0xa0
0x5ef: V603 = 0x2
0x5f1: V604 = EXP 0x2 0xa0
0x5f2: V605 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5f3: V606 = AND 0xffffffffffffffffffffffffffffffffffffffff V600
0x5f5: JUMP 0x227
---
Entry stack: [V13, 0x227]
Stack pops: 1
Stack additions: [S0, V606]
Exit stack: [V13, 0x227, V606]

================================

Block 0x5f6
[0x5f6:0x628]
---
Predecessors: []
Successors: []
---
0x5f6 STOP
0x5f7 LOG1
0x5f8 PUSH6 0x627a7a723058
0x5ff SHA3
0x600 GAS
0x601 MISSING 0x4c
0x602 STATICCALL
0x603 MISSING 0xe5
0x604 SLOAD
0x605 EXTCODEHASH
0x606 MISSING 0xe3
0x607 CALLCODE
0x608 STOP
0x609 DUP9
0x60a PUSH30 0xbeb75f5f87a563b33f38f75e571118f3887902ce710029
---
0x5f6: STOP 
0x5f7: LOG S0 S1 S2
0x5f8: V607 = 0x627a7a723058
0x5ff: V608 = SHA3 0x627a7a723058 S3
0x600: V609 = GAS
0x601: MISSING 0x4c
0x602: V610 = STATICCALL S0 S1 S2 S3 S4 S5
0x603: MISSING 0xe5
0x604: V611 = S[S0]
0x605: V612 = EXTCODEHASH V611
0x606: MISSING 0xe3
0x607: V613 = CALLCODE S0 S1 S2 S3 S4 S5 S6
0x608: STOP 
0x60a: V614 = 0xbeb75f5f87a563b33f38f75e571118f3887902ce710029
---
Entry stack: []
Stack pops: 0
Stack additions: [V609, V608, V610, V612, V613, 0xbeb75f5f87a563b33f38f75e571118f3887902ce710029, S8, S0, S1, S2, S3, S4, S5, S6, S7, S8]
Exit stack: []

================================

Function 0:
Public function signature: 0x144fa6d7
Entry block: 0x1ae
Exit block: 0x1cd
Body: 0x1ae, 0x1b5, 0x1b9, 0x1cd, 0x2ed, 0x304, 0x308

Function 1:
Public function signature: 0x18c378cd
Entry block: 0x1cf
Exit block: 0x1cd
Body: 0x1cd, 0x1cf, 0x1d6, 0x1da, 0x337, 0x34e, 0x352

Function 2:
Public function signature: 0x3ccfd60b
Entry block: 0x1ee
Exit block: 0x1cd
Body: 0x1cd, 0x1ee, 0x1f5, 0x1f9, 0x381, 0x398, 0x39c, 0x3d5, 0x3d9

Function 3:
Public function signature: 0x41c0e1b5
Entry block: 0x201
Exit block: 0x3f2
Body: 0x201, 0x208, 0x20c, 0x3db, 0x3f2, 0x3f6

Function 4:
Public function signature: 0x489e0951
Entry block: 0x214
Exit block: 0x227
Body: 0x214, 0x21b, 0x21f, 0x227, 0x402

Function 5:
Public function signature: 0x49df728c
Entry block: 0x243
Exit block: 0x515
Body: 0x243, 0x24a, 0x24e, 0x262, 0x411, 0x42b, 0x42f, 0x482, 0x486, 0x493, 0x497, 0x4ac, 0x504, 0x508, 0x515, 0x519, 0x52a, 0x52f

Function 6:
Public function signature: 0x776d1a01
Entry block: 0x276
Exit block: 0x1cd
Body: 0x1cd, 0x276, 0x27d, 0x281, 0x535, 0x54c, 0x550

Function 7:
Public function signature: 0x8da5cb5b
Entry block: 0x295
Exit block: 0x227
Body: 0x227, 0x295, 0x29c, 0x2a0, 0x57f

Function 8:
Public function signature: 0xd4b83992
Entry block: 0x2a8
Exit block: 0x227
Body: 0x227, 0x2a8, 0x2af, 0x2b3, 0x58e

Function 9:
Public function signature: 0xf2fde38b
Entry block: 0x2bb
Exit block: 0x1cd
Body: 0x1cd, 0x2bb, 0x2c2, 0x2c6, 0x59d, 0x5b4, 0x5b8

Function 10:
Public function signature: 0xfc0c546a
Entry block: 0x2da
Exit block: 0x227
Body: 0x227, 0x2da, 0x2e1, 0x2e5, 0x5e7

Function 11:
Public fallback function
Entry block: 0x95
Exit block: 0x1a9
Body: 0x95, 0xa6, 0xa7, 0x117, 0x11b, 0x128, 0x12c, 0x13c, 0x145, 0x1a9

