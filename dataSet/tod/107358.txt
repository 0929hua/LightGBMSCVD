Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x6a]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x6a
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x6a
0xa: JUMPI 0x6a V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x143]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x41c0e1b5
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x143
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x41c0e1b5
0x39: V12 = EQ V10 0x41c0e1b5
0x3a: V13 = 0x143
0x3d: JUMPI 0x143 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x158]
---
0x3e DUP1
0x3f PUSH4 0x82d38954
0x44 EQ
0x45 PUSH2 0x158
0x48 JUMPI
---
0x3f: V14 = 0x82d38954
0x44: V15 = EQ 0x82d38954 V10
0x45: V16 = 0x158
0x48: JUMPI 0x158 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x1a4]
---
0x49 DUP1
0x4a PUSH4 0xbee62db0
0x4f EQ
0x50 PUSH2 0x1a4
0x53 JUMPI
---
0x4a: V17 = 0xbee62db0
0x4f: V18 = EQ 0xbee62db0 V10
0x50: V19 = 0x1a4
0x53: JUMPI 0x1a4 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x1e7]
---
0x54 DUP1
0x55 PUSH4 0xcc1a2865
0x5a EQ
0x5b PUSH2 0x1e7
0x5e JUMPI
---
0x55: V20 = 0xcc1a2865
0x5a: V21 = EQ 0xcc1a2865 V10
0x5b: V22 = 0x1e7
0x5e: JUMPI 0x1e7 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x219]
---
0x5f DUP1
0x60 PUSH4 0xd14d42ba
0x65 EQ
0x66 PUSH2 0x219
0x69 JUMPI
---
0x60: V23 = 0xd14d42ba
0x65: V24 = EQ 0xd14d42ba V10
0x66: V25 = 0x219
0x69: JUMPI 0x219 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x6d]
---
Predecessors: [0x0, 0x5f]
Successors: [0x6e]
---
0x6a JUMPDEST
0x6b PUSH2 0x141
---
0x6a: JUMPDEST 
0x6b: V26 = 0x141
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x141]
Exit stack: [V10, 0x141]

================================

Block 0x6e
[0x6e:0xc8]
---
Predecessors: [0x6a]
Successors: [0x3cf]
---
0x6e JUMPDEST
0x6f CALLER
0x70 PUSH32 0xc03310113d9049acec0aaf4912da8777e763325d466d3300ae7a1234acc59467
0x91 DUP2
0x92 CALLVALUE
0x93 PUSH1 0x40
0x95 MLOAD
0x96 PUSH1 0x1
0x98 PUSH1 0xa0
0x9a PUSH1 0x2
0x9c EXP
0x9d SUB
0x9e SWAP1
0x9f SWAP3
0xa0 AND
0xa1 DUP3
0xa2 MSTORE
0xa3 PUSH1 0x20
0xa5 DUP3
0xa6 ADD
0xa7 MSTORE
0xa8 PUSH1 0x40
0xaa SWAP1
0xab DUP2
0xac ADD
0xad SWAP1
0xae MLOAD
0xaf DUP1
0xb0 SWAP2
0xb1 SUB
0xb2 SWAP1
0xb3 LOG1
0xb4 PUSH1 0x1
0xb6 PUSH1 0x4
0xb8 DUP1
0xb9 SLOAD
0xba DUP1
0xbb PUSH1 0x1
0xbd ADD
0xbe DUP3
0xbf DUP2
0xc0 PUSH2 0xc9
0xc3 SWAP2
0xc4 SWAP1
0xc5 PUSH2 0x3cf
0xc8 JUMP
---
0x6e: JUMPDEST 
0x6f: V27 = CALLER
0x70: V28 = 0xc03310113d9049acec0aaf4912da8777e763325d466d3300ae7a1234acc59467
0x92: V29 = CALLVALUE
0x93: V30 = 0x40
0x95: V31 = M[0x40]
0x96: V32 = 0x1
0x98: V33 = 0xa0
0x9a: V34 = 0x2
0x9c: V35 = EXP 0x2 0xa0
0x9d: V36 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa0: V37 = AND V27 0xffffffffffffffffffffffffffffffffffffffff
0xa2: M[V31] = V37
0xa3: V38 = 0x20
0xa6: V39 = ADD V31 0x20
0xa7: M[V39] = V29
0xa8: V40 = 0x40
0xac: V41 = ADD 0x40 V31
0xae: V42 = M[0x40]
0xb1: V43 = SUB V41 V42
0xb3: LOG V42 V43 0xc03310113d9049acec0aaf4912da8777e763325d466d3300ae7a1234acc59467
0xb4: V44 = 0x1
0xb6: V45 = 0x4
0xb9: V46 = S[0x4]
0xbb: V47 = 0x1
0xbd: V48 = ADD 0x1 V46
0xc0: V49 = 0xc9
0xc5: V50 = 0x3cf
0xc8: JUMP 0x3cf
---
Entry stack: [V10, 0x141]
Stack pops: 0
Stack additions: [V27, 0x1, 0x4, V46, V48, 0xc9, 0x4, V48]
Exit stack: [V10, 0x141, V27, 0x1, 0x4, V46, V48, 0xc9, 0x4, V48]

================================

Block 0xc9
[0xc9:0xd6]
---
Predecessors: [0x3f4]
Successors: [0xd7]
---
0xc9 JUMPDEST
0xca SWAP2
0xcb PUSH1 0x0
0xcd MSTORE
0xce PUSH1 0x20
0xd0 PUSH1 0x0
0xd2 SHA3
0xd3 SWAP1
0xd4 ADD
0xd5 PUSH1 0x0
---
0xc9: JUMPDEST 
0xcb: V51 = 0x0
0xcd: M[0x0] = 0x4
0xce: V52 = 0x20
0xd0: V53 = 0x0
0xd2: V54 = SHA3 0x0 0x20
0xd4: V55 = ADD V46 V54
0xd5: V56 = 0x0
---
Entry stack: [V10, 0x141, V27, 0x1, 0x4, V46, V48]
Stack pops: 3
Stack additions: [S0, V55, 0x0]
Exit stack: [V10, 0x141, V27, 0x1, V48, V55, 0x0]

================================

Block 0xd7
[0xd7:0x13d]
---
Predecessors: [0xc9]
Successors: [0x13e]
---
0xd7 JUMPDEST
0xd8 DUP2
0xd9 SLOAD
0xda PUSH2 0x100
0xdd SWAP2
0xde SWAP1
0xdf SWAP2
0xe0 EXP
0xe1 PUSH1 0x1
0xe3 PUSH1 0xa0
0xe5 PUSH1 0x2
0xe7 EXP
0xe8 SUB
0xe9 DUP2
0xea DUP2
0xeb MUL
0xec NOT
0xed SWAP1
0xee SWAP3
0xef AND
0xf0 DUP7
0xf1 DUP4
0xf2 AND
0xf3 SWAP2
0xf4 DUP3
0xf5 MUL
0xf6 OR
0xf7 SWAP1
0xf8 SWAP3
0xf9 SSTORE
0xfa PUSH1 0x0
0xfc SWAP2
0xfd DUP3
0xfe MSTORE
0xff PUSH1 0x2
0x101 PUSH1 0x20
0x103 DUP2
0x104 SWAP1
0x105 MSTORE
0x106 PUSH1 0x40
0x108 SWAP1
0x109 SWAP3
0x10a SHA3
0x10b SWAP4
0x10c SWAP1
0x10d SWAP3
0x10e SUB
0x10f DUP4
0x110 SSTORE
0x111 CALLVALUE
0x112 PUSH1 0x1
0x114 DUP5
0x115 ADD
0x116 SSTORE
0x117 SWAP2
0x118 SWAP1
0x119 SWAP2
0x11a ADD
0x11b DUP1
0x11c SLOAD
0x11d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x132 NOT
0x133 AND
0x134 CALLER
0x135 SWAP1
0x136 SWAP3
0x137 AND
0x138 SWAP2
0x139 SWAP1
0x13a SWAP2
0x13b OR
0x13c SWAP1
0x13d SSTORE
---
0xd7: JUMPDEST 
0xd9: V57 = S[V55]
0xda: V58 = 0x100
0xe0: V59 = EXP 0x100 0x0
0xe1: V60 = 0x1
0xe3: V61 = 0xa0
0xe5: V62 = 0x2
0xe7: V63 = EXP 0x2 0xa0
0xe8: V64 = SUB 0x10000000000000000000000000000000000000000 0x1
0xeb: V65 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xec: V66 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xef: V67 = AND V57 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0xf2: V68 = AND 0xffffffffffffffffffffffffffffffffffffffff V27
0xf5: V69 = MUL V68 0x1
0xf6: V70 = OR V69 V67
0xf9: S[V55] = V70
0xfa: V71 = 0x0
0xfe: M[0x0] = V68
0xff: V72 = 0x2
0x101: V73 = 0x20
0x105: M[0x20] = 0x2
0x106: V74 = 0x40
0x10a: V75 = SHA3 0x0 0x40
0x10e: V76 = SUB V48 0x1
0x110: S[V75] = V76
0x111: V77 = CALLVALUE
0x112: V78 = 0x1
0x115: V79 = ADD V75 0x1
0x116: S[V79] = V77
0x11a: V80 = ADD 0x2 V75
0x11c: V81 = S[V80]
0x11d: V82 = 0xffffffffffffffffffffffffffffffffffffffff
0x132: V83 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x133: V84 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V81
0x134: V85 = CALLER
0x137: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff V85
0x13b: V87 = OR V86 V84
0x13d: S[V80] = V87
---
Entry stack: [V10, 0x141, V27, 0x1, V48, V55, 0x0]
Stack pops: 5
Stack additions: [S4]
Exit stack: [V10, 0x141, V27]

================================

Block 0x13e
[0x13e:0x140]
---
Predecessors: [0xd7]
Successors: [0x141]
---
0x13e JUMPDEST
0x13f POP
0x140 JUMP
---
0x13e: JUMPDEST 
0x140: JUMP 0x141
---
Entry stack: [V10, 0x141, V27]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x141
[0x141:0x142]
---
Predecessors: [0x13e, 0x2a6]
Successors: []
---
0x141 JUMPDEST
0x142 STOP
---
0x141: JUMPDEST 
0x142: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x143
[0x143:0x149]
---
Predecessors: [0xb]
Successors: [0x14a, 0x14e]
---
0x143 JUMPDEST
0x144 CALLVALUE
0x145 ISZERO
0x146 PUSH2 0x14e
0x149 JUMPI
---
0x143: JUMPDEST 
0x144: V88 = CALLVALUE
0x145: V89 = ISZERO V88
0x146: V90 = 0x14e
0x149: JUMPI 0x14e V89
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x14a
[0x14a:0x14d]
---
Predecessors: [0x143]
Successors: []
---
0x14a PUSH1 0x0
0x14c DUP1
0x14d REVERT
---
0x14a: V91 = 0x0
0x14d: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x14e
[0x14e:0x155]
---
Predecessors: [0x143]
Successors: [0x280]
---
0x14e JUMPDEST
0x14f PUSH2 0x141
0x152 PUSH2 0x280
0x155 JUMP
---
0x14e: JUMPDEST 
0x14f: V92 = 0x141
0x152: V93 = 0x280
0x155: JUMP 0x280
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x141]
Exit stack: [V10, 0x141]

================================

Block 0x156
[0x156:0x157]
---
Predecessors: []
Successors: []
---
0x156 JUMPDEST
0x157 STOP
---
0x156: JUMPDEST 
0x157: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x158
[0x158:0x15e]
---
Predecessors: [0x3e]
Successors: [0x15f, 0x163]
---
0x158 JUMPDEST
0x159 CALLVALUE
0x15a ISZERO
0x15b PUSH2 0x163
0x15e JUMPI
---
0x158: JUMPDEST 
0x159: V94 = CALLVALUE
0x15a: V95 = ISZERO V94
0x15b: V96 = 0x163
0x15e: JUMPI 0x163 V95
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x15f
[0x15f:0x162]
---
Predecessors: [0x158]
Successors: []
---
0x15f PUSH1 0x0
0x161 DUP1
0x162 REVERT
---
0x15f: V97 = 0x0
0x162: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x163
[0x163:0x176]
---
Predecessors: [0x158]
Successors: [0x2a8]
---
0x163 JUMPDEST
0x164 PUSH2 0x177
0x167 PUSH1 0x1
0x169 PUSH1 0xa0
0x16b PUSH1 0x2
0x16d EXP
0x16e SUB
0x16f PUSH1 0x4
0x171 CALLDATALOAD
0x172 AND
0x173 PUSH2 0x2a8
0x176 JUMP
---
0x163: JUMPDEST 
0x164: V98 = 0x177
0x167: V99 = 0x1
0x169: V100 = 0xa0
0x16b: V101 = 0x2
0x16d: V102 = EXP 0x2 0xa0
0x16e: V103 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16f: V104 = 0x4
0x171: V105 = CALLDATALOAD 0x4
0x172: V106 = AND V105 0xffffffffffffffffffffffffffffffffffffffff
0x173: V107 = 0x2a8
0x176: JUMP 0x2a8
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x177, V106]
Exit stack: [V10, 0x177, V106]

================================

Block 0x177
[0x177:0x1a3]
---
Predecessors: [0x2a8, 0x2d1]
Successors: []
---
0x177 JUMPDEST
0x178 PUSH1 0x40
0x17a MLOAD
0x17b SWAP3
0x17c DUP4
0x17d MSTORE
0x17e PUSH1 0x20
0x180 DUP4
0x181 ADD
0x182 SWAP2
0x183 SWAP1
0x184 SWAP2
0x185 MSTORE
0x186 PUSH1 0x1
0x188 PUSH1 0xa0
0x18a PUSH1 0x2
0x18c EXP
0x18d SUB
0x18e AND
0x18f PUSH1 0x40
0x191 DUP1
0x192 DUP4
0x193 ADD
0x194 SWAP2
0x195 SWAP1
0x196 SWAP2
0x197 MSTORE
0x198 PUSH1 0x60
0x19a SWAP1
0x19b SWAP2
0x19c ADD
0x19d SWAP1
0x19e MLOAD
0x19f DUP1
0x1a0 SWAP2
0x1a1 SUB
0x1a2 SWAP1
0x1a3 RETURN
---
0x177: JUMPDEST 
0x178: V108 = 0x40
0x17a: V109 = M[0x40]
0x17d: M[V109] = S2
0x17e: V110 = 0x20
0x181: V111 = ADD V109 0x20
0x185: M[V111] = S1
0x186: V112 = 0x1
0x188: V113 = 0xa0
0x18a: V114 = 0x2
0x18c: V115 = EXP 0x2 0xa0
0x18d: V116 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18e: V117 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x18f: V118 = 0x40
0x193: V119 = ADD V109 0x40
0x197: M[V119] = V117
0x198: V120 = 0x60
0x19c: V121 = ADD V109 0x60
0x19e: V122 = M[0x40]
0x1a1: V123 = SUB V121 V122
0x1a3: RETURN V122 V123
---
Entry stack: [V10, 0x177, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x177]

================================

Block 0x1a4
[0x1a4:0x1aa]
---
Predecessors: [0x49]
Successors: [0x1ab, 0x1af]
---
0x1a4 JUMPDEST
0x1a5 CALLVALUE
0x1a6 ISZERO
0x1a7 PUSH2 0x1af
0x1aa JUMPI
---
0x1a4: JUMPDEST 
0x1a5: V124 = CALLVALUE
0x1a6: V125 = ISZERO V124
0x1a7: V126 = 0x1af
0x1aa: JUMPI 0x1af V125
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ab
[0x1ab:0x1ae]
---
Predecessors: [0x1a4]
Successors: []
---
0x1ab PUSH1 0x0
0x1ad DUP1
0x1ae REVERT
---
0x1ab: V127 = 0x0
0x1ae: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1af
[0x1af:0x1b9]
---
Predecessors: [0x1a4]
Successors: [0x2d1]
---
0x1af JUMPDEST
0x1b0 PUSH2 0x177
0x1b3 PUSH1 0x4
0x1b5 CALLDATALOAD
0x1b6 PUSH2 0x2d1
0x1b9 JUMP
---
0x1af: JUMPDEST 
0x1b0: V128 = 0x177
0x1b3: V129 = 0x4
0x1b5: V130 = CALLDATALOAD 0x4
0x1b6: V131 = 0x2d1
0x1b9: JUMP 0x2d1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x177, V130]
Exit stack: [V10, 0x177, V130]

================================

Block 0x1ba
[0x1ba:0x1e6]
---
Predecessors: []
Successors: []
---
0x1ba JUMPDEST
0x1bb PUSH1 0x40
0x1bd MLOAD
0x1be SWAP3
0x1bf DUP4
0x1c0 MSTORE
0x1c1 PUSH1 0x20
0x1c3 DUP4
0x1c4 ADD
0x1c5 SWAP2
0x1c6 SWAP1
0x1c7 SWAP2
0x1c8 MSTORE
0x1c9 PUSH1 0x1
0x1cb PUSH1 0xa0
0x1cd PUSH1 0x2
0x1cf EXP
0x1d0 SUB
0x1d1 AND
0x1d2 PUSH1 0x40
0x1d4 DUP1
0x1d5 DUP4
0x1d6 ADD
0x1d7 SWAP2
0x1d8 SWAP1
0x1d9 SWAP2
0x1da MSTORE
0x1db PUSH1 0x60
0x1dd SWAP1
0x1de SWAP2
0x1df ADD
0x1e0 SWAP1
0x1e1 MLOAD
0x1e2 DUP1
0x1e3 SWAP2
0x1e4 SUB
0x1e5 SWAP1
0x1e6 RETURN
---
0x1ba: JUMPDEST 
0x1bb: V132 = 0x40
0x1bd: V133 = M[0x40]
0x1c0: M[V133] = S2
0x1c1: V134 = 0x20
0x1c4: V135 = ADD V133 0x20
0x1c8: M[V135] = S1
0x1c9: V136 = 0x1
0x1cb: V137 = 0xa0
0x1cd: V138 = 0x2
0x1cf: V139 = EXP 0x2 0xa0
0x1d0: V140 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d1: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x1d2: V142 = 0x40
0x1d6: V143 = ADD V133 0x40
0x1da: M[V143] = V141
0x1db: V144 = 0x60
0x1df: V145 = ADD V133 0x60
0x1e1: V146 = M[0x40]
0x1e4: V147 = SUB V145 V146
0x1e6: RETURN V146 V147
---
Entry stack: []
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0x1e7
[0x1e7:0x1ed]
---
Predecessors: [0x54]
Successors: [0x1ee, 0x1f2]
---
0x1e7 JUMPDEST
0x1e8 CALLVALUE
0x1e9 ISZERO
0x1ea PUSH2 0x1f2
0x1ed JUMPI
---
0x1e7: JUMPDEST 
0x1e8: V148 = CALLVALUE
0x1e9: V149 = ISZERO V148
0x1ea: V150 = 0x1f2
0x1ed: JUMPI 0x1f2 V149
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ee
[0x1ee:0x1f1]
---
Predecessors: [0x1e7]
Successors: []
---
0x1ee PUSH1 0x0
0x1f0 DUP1
0x1f1 REVERT
---
0x1ee: V151 = 0x0
0x1f1: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1f2
[0x1f2:0x1fc]
---
Predecessors: [0x1e7]
Successors: [0x2fb]
---
0x1f2 JUMPDEST
0x1f3 PUSH2 0x1fd
0x1f6 PUSH1 0x4
0x1f8 CALLDATALOAD
0x1f9 PUSH2 0x2fb
0x1fc JUMP
---
0x1f2: JUMPDEST 
0x1f3: V152 = 0x1fd
0x1f6: V153 = 0x4
0x1f8: V154 = CALLDATALOAD 0x4
0x1f9: V155 = 0x2fb
0x1fc: JUMP 0x2fb
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1fd, V154]
Exit stack: [V10, 0x1fd, V154]

================================

Block 0x1fd
[0x1fd:0x218]
---
Predecessors: [0x317]
Successors: []
---
0x1fd JUMPDEST
0x1fe PUSH1 0x40
0x200 MLOAD
0x201 PUSH1 0x1
0x203 PUSH1 0xa0
0x205 PUSH1 0x2
0x207 EXP
0x208 SUB
0x209 SWAP1
0x20a SWAP2
0x20b AND
0x20c DUP2
0x20d MSTORE
0x20e PUSH1 0x20
0x210 ADD
0x211 PUSH1 0x40
0x213 MLOAD
0x214 DUP1
0x215 SWAP2
0x216 SUB
0x217 SWAP1
0x218 RETURN
---
0x1fd: JUMPDEST 
0x1fe: V156 = 0x40
0x200: V157 = M[0x40]
0x201: V158 = 0x1
0x203: V159 = 0xa0
0x205: V160 = 0x2
0x207: V161 = EXP 0x2 0xa0
0x208: V162 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20b: V163 = AND V276 0xffffffffffffffffffffffffffffffffffffffff
0x20d: M[V157] = V163
0x20e: V164 = 0x20
0x210: V165 = ADD 0x20 V157
0x211: V166 = 0x40
0x213: V167 = M[0x40]
0x216: V168 = SUB V165 V167
0x218: RETURN V167 V168
---
Entry stack: [V10, 0x1fd, V276]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1fd]

================================

Block 0x219
[0x219:0x21f]
---
Predecessors: [0x5f]
Successors: [0x220, 0x224]
---
0x219 JUMPDEST
0x21a CALLVALUE
0x21b ISZERO
0x21c PUSH2 0x224
0x21f JUMPI
---
0x219: JUMPDEST 
0x21a: V169 = CALLVALUE
0x21b: V170 = ISZERO V169
0x21c: V171 = 0x224
0x21f: JUMPI 0x224 V170
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x220
[0x220:0x223]
---
Predecessors: [0x219]
Successors: []
---
0x220 PUSH1 0x0
0x222 DUP1
0x223 REVERT
---
0x220: V172 = 0x0
0x223: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x224
[0x224:0x22b]
---
Predecessors: [0x219]
Successors: [0x32d]
---
0x224 JUMPDEST
0x225 PUSH2 0x22c
0x228 PUSH2 0x32d
0x22b JUMP
---
0x224: JUMPDEST 
0x225: V173 = 0x22c
0x228: V174 = 0x32d
0x22b: JUMP 0x32d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x22c]
Exit stack: [V10, 0x22c]

================================

Block 0x22c
[0x22c:0x252]
---
Predecessors: [0x3cc]
Successors: [0x253]
---
0x22c JUMPDEST
0x22d PUSH1 0x40
0x22f MLOAD
0x230 PUSH1 0x20
0x232 DUP1
0x233 DUP3
0x234 MSTORE
0x235 DUP2
0x236 SWAP1
0x237 DUP2
0x238 ADD
0x239 DUP4
0x23a DUP2
0x23b DUP2
0x23c MLOAD
0x23d DUP2
0x23e MSTORE
0x23f PUSH1 0x20
0x241 ADD
0x242 SWAP2
0x243 POP
0x244 DUP1
0x245 MLOAD
0x246 SWAP1
0x247 PUSH1 0x20
0x249 ADD
0x24a SWAP1
0x24b PUSH1 0x20
0x24d MUL
0x24e DUP1
0x24f DUP4
0x250 DUP4
0x251 PUSH1 0x0
---
0x22c: JUMPDEST 
0x22d: V175 = 0x40
0x22f: V176 = M[0x40]
0x230: V177 = 0x20
0x234: M[V176] = 0x20
0x238: V178 = ADD V176 0x20
0x23c: V179 = M[S0]
0x23e: M[V178] = V179
0x23f: V180 = 0x20
0x241: V181 = ADD 0x20 V178
0x245: V182 = M[S0]
0x247: V183 = 0x20
0x249: V184 = ADD 0x20 S0
0x24b: V185 = 0x20
0x24d: V186 = MUL 0x20 V182
0x251: V187 = 0x0
---
Entry stack: [V10, 0x141, V27, 0x1, 0x4, V46, V48, 0xc9, 0x4, S1, S0]
Stack pops: 1
Stack additions: [S0, V176, V176, V181, V184, V186, V186, V181, V184, 0x0]
Exit stack: [V10, 0x141, V27, 0x1, 0x4, V46, V48, 0xc9, 0x4, S1, S0, V176, V176, V181, V184, V186, V186, V181, V184, 0x0]

================================

Block 0x253
[0x253:0x25b]
---
Predecessors: [0x22c, 0x264]
Successors: [0x25c, 0x26c]
---
0x253 JUMPDEST
0x254 DUP4
0x255 DUP2
0x256 LT
0x257 ISZERO
0x258 PUSH2 0x26c
0x25b JUMPI
---
0x253: JUMPDEST 
0x256: V188 = LT S0 V186
0x257: V189 = ISZERO V188
0x258: V190 = 0x26c
0x25b: JUMPI 0x26c V189
---
Entry stack: [V10, 0x141, V27, 0x1, 0x4, V46, V48, 0xc9, 0x4, S10, S9, V176, V176, V181, V184, V186, V186, V181, V184, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x141, V27, 0x1, 0x4, V46, V48, 0xc9, 0x4, S10, S9, V176, V176, V181, V184, V186, V186, V181, V184, S0]

================================

Block 0x25c
[0x25c:0x263]
---
Predecessors: [0x253]
Successors: [0x264]
---
0x25c DUP1
0x25d DUP3
0x25e ADD
0x25f MLOAD
0x260 DUP2
0x261 DUP5
0x262 ADD
0x263 MSTORE
---
0x25e: V191 = ADD V184 S0
0x25f: V192 = M[V191]
0x262: V193 = ADD V181 S0
0x263: M[V193] = V192
---
Entry stack: [V10, 0x141, V27, 0x1, 0x4, V46, V48, 0xc9, 0x4, S10, S9, V176, V176, V181, V184, V186, V186, V181, V184, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x141, V27, 0x1, 0x4, V46, V48, 0xc9, 0x4, S10, S9, V176, V176, V181, V184, V186, V186, V181, V184, S0]

================================

Block 0x264
[0x264:0x26b]
---
Predecessors: [0x25c]
Successors: [0x253]
---
0x264 JUMPDEST
0x265 PUSH1 0x20
0x267 ADD
0x268 PUSH2 0x253
0x26b JUMP
---
0x264: JUMPDEST 
0x265: V194 = 0x20
0x267: V195 = ADD 0x20 S0
0x268: V196 = 0x253
0x26b: JUMP 0x253
---
Entry stack: [V10, 0x141, V27, 0x1, 0x4, V46, V48, 0xc9, 0x4, S10, S9, V176, V176, V181, V184, V186, V186, V181, V184, S0]
Stack pops: 1
Stack additions: [V195]
Exit stack: [V10, 0x141, V27, 0x1, 0x4, V46, V48, 0xc9, 0x4, S10, S9, V176, V176, V181, V184, V186, V186, V181, V184, V195]

================================

Block 0x26c
[0x26c:0x27f]
---
Predecessors: [0x253]
Successors: []
---
0x26c JUMPDEST
0x26d POP
0x26e POP
0x26f POP
0x270 POP
0x271 SWAP1
0x272 POP
0x273 ADD
0x274 SWAP3
0x275 POP
0x276 POP
0x277 POP
0x278 PUSH1 0x40
0x27a MLOAD
0x27b DUP1
0x27c SWAP2
0x27d SUB
0x27e SWAP1
0x27f RETURN
---
0x26c: JUMPDEST 
0x273: V197 = ADD V186 V181
0x278: V198 = 0x40
0x27a: V199 = M[0x40]
0x27d: V200 = SUB V197 V199
0x27f: RETURN V199 V200
---
Entry stack: [V10, 0x141, V27, 0x1, 0x4, V46, V48, 0xc9, 0x4, S10, S9, V176, V176, V181, V184, V186, V186, V181, V184, S0]
Stack pops: 10
Stack additions: []
Exit stack: [V10, 0x141, V27, 0x1, 0x4, V46, V48, 0xc9, 0x4, S10]

================================

Block 0x280
[0x280:0x297]
---
Predecessors: [0x14e]
Successors: [0x298, 0x2a5]
---
0x280 JUMPDEST
0x281 PUSH1 0x0
0x283 SLOAD
0x284 CALLER
0x285 PUSH1 0x1
0x287 PUSH1 0xa0
0x289 PUSH1 0x2
0x28b EXP
0x28c SUB
0x28d SWAP1
0x28e DUP2
0x28f AND
0x290 SWAP2
0x291 AND
0x292 EQ
0x293 ISZERO
0x294 PUSH2 0x2a5
0x297 JUMPI
---
0x280: JUMPDEST 
0x281: V201 = 0x0
0x283: V202 = S[0x0]
0x284: V203 = CALLER
0x285: V204 = 0x1
0x287: V205 = 0xa0
0x289: V206 = 0x2
0x28b: V207 = EXP 0x2 0xa0
0x28c: V208 = SUB 0x10000000000000000000000000000000000000000 0x1
0x28f: V209 = AND 0xffffffffffffffffffffffffffffffffffffffff V203
0x291: V210 = AND V202 0xffffffffffffffffffffffffffffffffffffffff
0x292: V211 = EQ V210 V209
0x293: V212 = ISZERO V211
0x294: V213 = 0x2a5
0x297: JUMPI 0x2a5 V212
---
Entry stack: [V10, 0x141]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x141]

================================

Block 0x298
[0x298:0x2a4]
---
Predecessors: [0x280]
Successors: []
---
0x298 PUSH1 0x0
0x29a SLOAD
0x29b PUSH1 0x1
0x29d PUSH1 0xa0
0x29f PUSH1 0x2
0x2a1 EXP
0x2a2 SUB
0x2a3 AND
0x2a4 SELFDESTRUCT
---
0x298: V214 = 0x0
0x29a: V215 = S[0x0]
0x29b: V216 = 0x1
0x29d: V217 = 0xa0
0x29f: V218 = 0x2
0x2a1: V219 = EXP 0x2 0xa0
0x2a2: V220 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a3: V221 = AND 0xffffffffffffffffffffffffffffffffffffffff V215
0x2a4: SELFDESTRUCT V221
---
Entry stack: [V10, 0x141]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x141]

================================

Block 0x2a5
[0x2a5:0x2a5]
---
Predecessors: [0x280]
Successors: [0x2a6]
---
0x2a5 JUMPDEST
---
0x2a5: JUMPDEST 
---
Entry stack: [V10, 0x141]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x141]

================================

Block 0x2a6
[0x2a6:0x2a7]
---
Predecessors: [0x2a5]
Successors: [0x141]
---
0x2a6 JUMPDEST
0x2a7 JUMP
---
0x2a6: JUMPDEST 
0x2a7: JUMP 0x141
---
Entry stack: [V10, 0x141]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x2a8
[0x2a8:0x2d0]
---
Predecessors: [0x163]
Successors: [0x177]
---
0x2a8 JUMPDEST
0x2a9 PUSH1 0x2
0x2ab PUSH1 0x20
0x2ad DUP2
0x2ae SWAP1
0x2af MSTORE
0x2b0 PUSH1 0x0
0x2b2 SWAP2
0x2b3 DUP3
0x2b4 MSTORE
0x2b5 PUSH1 0x40
0x2b7 SWAP1
0x2b8 SWAP2
0x2b9 SHA3
0x2ba DUP1
0x2bb SLOAD
0x2bc PUSH1 0x1
0x2be DUP3
0x2bf ADD
0x2c0 SLOAD
0x2c1 SWAP2
0x2c2 SWAP1
0x2c3 SWAP3
0x2c4 ADD
0x2c5 SLOAD
0x2c6 PUSH1 0x1
0x2c8 PUSH1 0xa0
0x2ca PUSH1 0x2
0x2cc EXP
0x2cd SUB
0x2ce AND
0x2cf DUP4
0x2d0 JUMP
---
0x2a8: JUMPDEST 
0x2a9: V222 = 0x2
0x2ab: V223 = 0x20
0x2af: M[0x20] = 0x2
0x2b0: V224 = 0x0
0x2b4: M[0x0] = V106
0x2b5: V225 = 0x40
0x2b9: V226 = SHA3 0x0 0x40
0x2bb: V227 = S[V226]
0x2bc: V228 = 0x1
0x2bf: V229 = ADD V226 0x1
0x2c0: V230 = S[V229]
0x2c4: V231 = ADD 0x2 V226
0x2c5: V232 = S[V231]
0x2c6: V233 = 0x1
0x2c8: V234 = 0xa0
0x2ca: V235 = 0x2
0x2cc: V236 = EXP 0x2 0xa0
0x2cd: V237 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ce: V238 = AND 0xffffffffffffffffffffffffffffffffffffffff V232
0x2d0: JUMP 0x177
---
Entry stack: [V10, 0x177, V106]
Stack pops: 2
Stack additions: [S1, V227, V230, V238]
Exit stack: [V10, 0x177, V227, V230, V238]

================================

Block 0x2d1
[0x2d1:0x2fa]
---
Predecessors: [0x1af]
Successors: [0x177]
---
0x2d1 JUMPDEST
0x2d2 PUSH1 0x3
0x2d4 PUSH1 0x20
0x2d6 MSTORE
0x2d7 PUSH1 0x0
0x2d9 SWAP1
0x2da DUP2
0x2db MSTORE
0x2dc PUSH1 0x40
0x2de SWAP1
0x2df SHA3
0x2e0 DUP1
0x2e1 SLOAD
0x2e2 PUSH1 0x1
0x2e4 DUP3
0x2e5 ADD
0x2e6 SLOAD
0x2e7 PUSH1 0x2
0x2e9 SWAP1
0x2ea SWAP3
0x2eb ADD
0x2ec SLOAD
0x2ed SWAP1
0x2ee SWAP2
0x2ef SWAP1
0x2f0 PUSH1 0x1
0x2f2 PUSH1 0xa0
0x2f4 PUSH1 0x2
0x2f6 EXP
0x2f7 SUB
0x2f8 AND
0x2f9 DUP4
0x2fa JUMP
---
0x2d1: JUMPDEST 
0x2d2: V239 = 0x3
0x2d4: V240 = 0x20
0x2d6: M[0x20] = 0x3
0x2d7: V241 = 0x0
0x2db: M[0x0] = V130
0x2dc: V242 = 0x40
0x2df: V243 = SHA3 0x0 0x40
0x2e1: V244 = S[V243]
0x2e2: V245 = 0x1
0x2e5: V246 = ADD V243 0x1
0x2e6: V247 = S[V246]
0x2e7: V248 = 0x2
0x2eb: V249 = ADD V243 0x2
0x2ec: V250 = S[V249]
0x2f0: V251 = 0x1
0x2f2: V252 = 0xa0
0x2f4: V253 = 0x2
0x2f6: V254 = EXP 0x2 0xa0
0x2f7: V255 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f8: V256 = AND 0xffffffffffffffffffffffffffffffffffffffff V250
0x2fa: JUMP 0x177
---
Entry stack: [V10, 0x177, V130]
Stack pops: 2
Stack additions: [S1, V244, V247, V256]
Exit stack: [V10, 0x177, V244, V247, V256]

================================

Block 0x2fb
[0x2fb:0x307]
---
Predecessors: [0x1f2]
Successors: [0x308, 0x309]
---
0x2fb JUMPDEST
0x2fc PUSH1 0x4
0x2fe DUP1
0x2ff SLOAD
0x300 DUP3
0x301 SWAP1
0x302 DUP2
0x303 LT
0x304 PUSH2 0x309
0x307 JUMPI
---
0x2fb: JUMPDEST 
0x2fc: V257 = 0x4
0x2ff: V258 = S[0x4]
0x303: V259 = LT V154 V258
0x304: V260 = 0x309
0x307: JUMPI 0x309 V259
---
Entry stack: [V10, 0x1fd, V154]
Stack pops: 1
Stack additions: [S0, 0x4, S0]
Exit stack: [V10, 0x1fd, V154, 0x4, V154]

================================

Block 0x308
[0x308:0x308]
---
Predecessors: [0x2fb]
Successors: []
---
0x308 INVALID
---
0x308: INVALID 
---
Entry stack: [V10, 0x1fd, V154, 0x4, V154]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1fd, V154, 0x4, V154]

================================

Block 0x309
[0x309:0x316]
---
Predecessors: [0x2fb]
Successors: [0x317]
---
0x309 JUMPDEST
0x30a SWAP1
0x30b PUSH1 0x0
0x30d MSTORE
0x30e PUSH1 0x20
0x310 PUSH1 0x0
0x312 SHA3
0x313 SWAP1
0x314 ADD
0x315 PUSH1 0x0
---
0x309: JUMPDEST 
0x30b: V261 = 0x0
0x30d: M[0x0] = 0x4
0x30e: V262 = 0x20
0x310: V263 = 0x0
0x312: V264 = SHA3 0x0 0x20
0x314: V265 = ADD V154 V264
0x315: V266 = 0x0
---
Entry stack: [V10, 0x1fd, V154, 0x4, V154]
Stack pops: 2
Stack additions: [V265, 0x0]
Exit stack: [V10, 0x1fd, V154, V265, 0x0]

================================

Block 0x317
[0x317:0x32c]
---
Predecessors: [0x309]
Successors: [0x1fd]
---
0x317 JUMPDEST
0x318 SWAP2
0x319 POP
0x31a SLOAD
0x31b SWAP1
0x31c PUSH2 0x100
0x31f EXP
0x320 SWAP1
0x321 DIV
0x322 PUSH1 0x1
0x324 PUSH1 0xa0
0x326 PUSH1 0x2
0x328 EXP
0x329 SUB
0x32a AND
0x32b DUP2
0x32c JUMP
---
0x317: JUMPDEST 
0x31a: V267 = S[V265]
0x31c: V268 = 0x100
0x31f: V269 = EXP 0x100 0x0
0x321: V270 = DIV V267 0x1
0x322: V271 = 0x1
0x324: V272 = 0xa0
0x326: V273 = 0x2
0x328: V274 = EXP 0x2 0xa0
0x329: V275 = SUB 0x10000000000000000000000000000000000000000 0x1
0x32a: V276 = AND 0xffffffffffffffffffffffffffffffffffffffff V270
0x32c: JUMP 0x1fd
---
Entry stack: [V10, 0x1fd, V154, V265, 0x0]
Stack pops: 4
Stack additions: [S3, V276]
Exit stack: [V10, 0x1fd, V276]

================================

Block 0x32d
[0x32d:0x334]
---
Predecessors: [0x224]
Successors: [0x3f9]
---
0x32d JUMPDEST
0x32e PUSH2 0x335
0x331 PUSH2 0x3f9
0x334 JUMP
---
0x32d: JUMPDEST 
0x32e: V277 = 0x335
0x331: V278 = 0x3f9
0x334: JUMP 0x3f9
---
Entry stack: [V10, 0x22c]
Stack pops: 0
Stack additions: [0x335]
Exit stack: [V10, 0x22c, 0x335]

================================

Block 0x335
[0x335:0x369]
---
Predecessors: [0x3f9]
Successors: [0x36a, 0x36e]
---
0x335 JUMPDEST
0x336 PUSH1 0x0
0x338 SLOAD
0x339 PUSH1 0x1
0x33b PUSH1 0xa0
0x33d PUSH1 0x2
0x33f EXP
0x340 SUB
0x341 SWAP1
0x342 DUP2
0x343 AND
0x344 SWAP1
0x345 ADDRESS
0x346 AND
0x347 BALANCE
0x348 DUP1
0x349 ISZERO
0x34a PUSH2 0x8fc
0x34d MUL
0x34e SWAP1
0x34f PUSH1 0x40
0x351 MLOAD
0x352 PUSH1 0x0
0x354 PUSH1 0x40
0x356 MLOAD
0x357 DUP1
0x358 DUP4
0x359 SUB
0x35a DUP2
0x35b DUP6
0x35c DUP9
0x35d DUP9
0x35e CALL
0x35f SWAP4
0x360 POP
0x361 POP
0x362 POP
0x363 POP
0x364 ISZERO
0x365 ISZERO
0x366 PUSH2 0x36e
0x369 JUMPI
---
0x335: JUMPDEST 
0x336: V279 = 0x0
0x338: V280 = S[0x0]
0x339: V281 = 0x1
0x33b: V282 = 0xa0
0x33d: V283 = 0x2
0x33f: V284 = EXP 0x2 0xa0
0x340: V285 = SUB 0x10000000000000000000000000000000000000000 0x1
0x343: V286 = AND 0xffffffffffffffffffffffffffffffffffffffff V280
0x345: V287 = ADDRESS
0x346: V288 = AND V287 0xffffffffffffffffffffffffffffffffffffffff
0x347: V289 = BALANCE V288
0x349: V290 = ISZERO V289
0x34a: V291 = 0x8fc
0x34d: V292 = MUL 0x8fc V290
0x34f: V293 = 0x40
0x351: V294 = M[0x40]
0x352: V295 = 0x0
0x354: V296 = 0x40
0x356: V297 = M[0x40]
0x359: V298 = SUB V294 V297
0x35e: V299 = CALL V292 V286 V289 V297 V298 V297 0x0
0x364: V300 = ISZERO V299
0x365: V301 = ISZERO V300
0x366: V302 = 0x36e
0x369: JUMPI 0x36e V301
---
Entry stack: [V10, 0x22c, V352]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x22c, V352]

================================

Block 0x36a
[0x36a:0x36d]
---
Predecessors: [0x335]
Successors: []
---
0x36a PUSH1 0x0
0x36c DUP1
0x36d REVERT
---
0x36a: V303 = 0x0
0x36d: REVERT 0x0 0x0
---
Entry stack: [V10, 0x22c, V352]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x22c, V352]

================================

Block 0x36e
[0x36e:0x395]
---
Predecessors: [0x335]
Successors: [0x396, 0x3c4]
---
0x36e JUMPDEST
0x36f PUSH1 0x4
0x371 DUP1
0x372 SLOAD
0x373 DUP1
0x374 PUSH1 0x20
0x376 MUL
0x377 PUSH1 0x20
0x379 ADD
0x37a PUSH1 0x40
0x37c MLOAD
0x37d SWAP1
0x37e DUP2
0x37f ADD
0x380 PUSH1 0x40
0x382 MSTORE
0x383 DUP1
0x384 SWAP3
0x385 SWAP2
0x386 SWAP1
0x387 DUP2
0x388 DUP2
0x389 MSTORE
0x38a PUSH1 0x20
0x38c ADD
0x38d DUP3
0x38e DUP1
0x38f SLOAD
0x390 DUP1
0x391 ISZERO
0x392 PUSH2 0x3c4
0x395 JUMPI
---
0x36e: JUMPDEST 
0x36f: V304 = 0x4
0x372: V305 = S[0x4]
0x374: V306 = 0x20
0x376: V307 = MUL 0x20 V305
0x377: V308 = 0x20
0x379: V309 = ADD 0x20 V307
0x37a: V310 = 0x40
0x37c: V311 = M[0x40]
0x37f: V312 = ADD V311 V309
0x380: V313 = 0x40
0x382: M[0x40] = V312
0x389: M[V311] = V305
0x38a: V314 = 0x20
0x38c: V315 = ADD 0x20 V311
0x38f: V316 = S[0x4]
0x391: V317 = ISZERO V316
0x392: V318 = 0x3c4
0x395: JUMPI 0x3c4 V317
---
Entry stack: [V10, 0x22c, V352]
Stack pops: 0
Stack additions: [V311, 0x4, V305, V315, 0x4, V316]
Exit stack: [V10, 0x22c, V352, V311, 0x4, V305, V315, 0x4, V316]

================================

Block 0x396
[0x396:0x3a5]
---
Predecessors: [0x36e]
Successors: [0x3a6]
---
0x396 PUSH1 0x20
0x398 MUL
0x399 DUP3
0x39a ADD
0x39b SWAP2
0x39c SWAP1
0x39d PUSH1 0x0
0x39f MSTORE
0x3a0 PUSH1 0x20
0x3a2 PUSH1 0x0
0x3a4 SHA3
0x3a5 SWAP1
---
0x396: V319 = 0x20
0x398: V320 = MUL 0x20 V316
0x39a: V321 = ADD V315 V320
0x39d: V322 = 0x0
0x39f: M[0x0] = 0x4
0x3a0: V323 = 0x20
0x3a2: V324 = 0x0
0x3a4: V325 = SHA3 0x0 0x20
---
Entry stack: [V10, 0x22c, V352, V311, 0x4, V305, V315, 0x4, V316]
Stack pops: 3
Stack additions: [V321, V325, S2]
Exit stack: [V10, 0x22c, V352, V311, 0x4, V305, V321, V325, V315]

================================

Block 0x3a6
[0x3a6:0x3c3]
---
Predecessors: [0x396, 0x3a6]
Successors: [0x3a6, 0x3c4]
---
0x3a6 JUMPDEST
0x3a7 DUP2
0x3a8 SLOAD
0x3a9 PUSH1 0x1
0x3ab PUSH1 0xa0
0x3ad PUSH1 0x2
0x3af EXP
0x3b0 SUB
0x3b1 AND
0x3b2 DUP2
0x3b3 MSTORE
0x3b4 PUSH1 0x1
0x3b6 SWAP1
0x3b7 SWAP2
0x3b8 ADD
0x3b9 SWAP1
0x3ba PUSH1 0x20
0x3bc ADD
0x3bd DUP1
0x3be DUP4
0x3bf GT
0x3c0 PUSH2 0x3a6
0x3c3 JUMPI
---
0x3a6: JUMPDEST 
0x3a8: V326 = S[S1]
0x3a9: V327 = 0x1
0x3ab: V328 = 0xa0
0x3ad: V329 = 0x2
0x3af: V330 = EXP 0x2 0xa0
0x3b0: V331 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b1: V332 = AND 0xffffffffffffffffffffffffffffffffffffffff V326
0x3b3: M[S0] = V332
0x3b4: V333 = 0x1
0x3b8: V334 = ADD S1 0x1
0x3ba: V335 = 0x20
0x3bc: V336 = ADD 0x20 S0
0x3bf: V337 = GT V321 V336
0x3c0: V338 = 0x3a6
0x3c3: JUMPI 0x3a6 V337
---
Entry stack: [V10, 0x22c, V352, V311, 0x4, V305, V321, S1, S0]
Stack pops: 3
Stack additions: [S2, V334, V336]
Exit stack: [V10, 0x22c, V352, V311, 0x4, V305, V321, V334, V336]

================================

Block 0x3c4
[0x3c4:0x3cb]
---
Predecessors: [0x36e, 0x3a6]
Successors: [0x3cc]
---
0x3c4 JUMPDEST
0x3c5 POP
0x3c6 POP
0x3c7 POP
0x3c8 POP
0x3c9 POP
0x3ca SWAP1
0x3cb POP
---
0x3c4: JUMPDEST 
---
Entry stack: [V10, 0x22c, V352, V311, 0x4, V305, S2, S1, S0]
Stack pops: 7
Stack additions: [S5]
Exit stack: [V10, 0x22c, V311]

================================

Block 0x3cc
[0x3cc:0x3ce]
---
Predecessors: [0x3c4, 0x425]
Successors: [0x22c, 0x3f3]
---
0x3cc JUMPDEST
0x3cd SWAP1
0x3ce JUMP
---
0x3cc: JUMPDEST 
0x3ce: JUMP {0x22c, 0x3f3}
---
Entry stack: [V10, 0x141, V27, 0x1, 0x4, V46, V48, 0xc9, 0x4, S2, {0x22c, 0x3f3}, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, 0x141, V27, 0x1, 0x4, V46, V48, 0xc9, 0x4, S2, S0]

================================

Block 0x3cf
[0x3cf:0x3dc]
---
Predecessors: [0x6e]
Successors: [0x3dd, 0x3f3]
---
0x3cf JUMPDEST
0x3d0 DUP2
0x3d1 SLOAD
0x3d2 DUP2
0x3d3 DUP4
0x3d4 SSTORE
0x3d5 DUP2
0x3d6 DUP2
0x3d7 ISZERO
0x3d8 GT
0x3d9 PUSH2 0x3f3
0x3dc JUMPI
---
0x3cf: JUMPDEST 
0x3d1: V339 = S[0x4]
0x3d4: S[0x4] = V48
0x3d7: V340 = ISZERO V339
0x3d8: V341 = GT V340 V48
0x3d9: V342 = 0x3f3
0x3dc: JUMPI 0x3f3 V341
---
Entry stack: [V10, 0x141, V27, 0x1, 0x4, V46, V48, 0xc9, 0x4, V48]
Stack pops: 2
Stack additions: [S1, S0, V339]
Exit stack: [V10, 0x141, V27, 0x1, 0x4, V46, V48, 0xc9, 0x4, V48, V339]

================================

Block 0x3dd
[0x3dd:0x3f2]
---
Predecessors: [0x3cf]
Successors: [0x40b]
---
0x3dd PUSH1 0x0
0x3df DUP4
0x3e0 DUP2
0x3e1 MSTORE
0x3e2 PUSH1 0x20
0x3e4 SWAP1
0x3e5 SHA3
0x3e6 PUSH2 0x3f3
0x3e9 SWAP2
0x3ea DUP2
0x3eb ADD
0x3ec SWAP1
0x3ed DUP4
0x3ee ADD
0x3ef PUSH2 0x40b
0x3f2 JUMP
---
0x3dd: V343 = 0x0
0x3e1: M[0x0] = 0x4
0x3e2: V344 = 0x20
0x3e5: V345 = SHA3 0x0 0x20
0x3e6: V346 = 0x3f3
0x3eb: V347 = ADD V345 V339
0x3ee: V348 = ADD V48 V345
0x3ef: V349 = 0x40b
0x3f2: JUMP 0x40b
---
Entry stack: [V10, 0x141, V27, 0x1, 0x4, V46, V48, 0xc9, 0x4, V48, V339]
Stack pops: 3
Stack additions: [S2, S1, 0x3f3, V347, V348]
Exit stack: [V10, 0x141, V27, 0x1, 0x4, V46, V48, 0xc9, 0x4, V48, 0x3f3, V347, V348]

================================

Block 0x3f3
[0x3f3:0x3f3]
---
Predecessors: [0x3cc, 0x3cf]
Successors: [0x3f4]
---
0x3f3 JUMPDEST
---
0x3f3: JUMPDEST 
---
Entry stack: [V10, 0x141, V27, 0x1, 0x4, V46, V48, 0xc9, 0x4, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x141, V27, 0x1, 0x4, V46, V48, 0xc9, 0x4, S1, S0]

================================

Block 0x3f4
[0x3f4:0x3f8]
---
Predecessors: [0x3f3]
Successors: [0xc9]
---
0x3f4 JUMPDEST
0x3f5 POP
0x3f6 POP
0x3f7 POP
0x3f8 JUMP
---
0x3f4: JUMPDEST 
0x3f8: JUMP 0xc9
---
Entry stack: [V10, 0x141, V27, 0x1, 0x4, V46, V48, 0xc9, 0x4, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V10, 0x141, V27, 0x1, 0x4, V46, V48]

================================

Block 0x3f9
[0x3f9:0x40a]
---
Predecessors: [0x32d]
Successors: [0x335]
---
0x3f9 JUMPDEST
0x3fa PUSH1 0x20
0x3fc PUSH1 0x40
0x3fe MLOAD
0x3ff SWAP1
0x400 DUP2
0x401 ADD
0x402 PUSH1 0x40
0x404 MSTORE
0x405 PUSH1 0x0
0x407 DUP2
0x408 MSTORE
0x409 SWAP1
0x40a JUMP
---
0x3f9: JUMPDEST 
0x3fa: V350 = 0x20
0x3fc: V351 = 0x40
0x3fe: V352 = M[0x40]
0x401: V353 = ADD V352 0x20
0x402: V354 = 0x40
0x404: M[0x40] = V353
0x405: V355 = 0x0
0x408: M[V352] = 0x0
0x40a: JUMP 0x335
---
Entry stack: [V10, 0x22c, 0x335]
Stack pops: 1
Stack additions: [V352]
Exit stack: [V10, 0x22c, V352]

================================

Block 0x40b
[0x40b:0x410]
---
Predecessors: [0x3dd]
Successors: [0x411]
---
0x40b JUMPDEST
0x40c PUSH2 0x3cc
0x40f SWAP2
0x410 SWAP1
---
0x40b: JUMPDEST 
0x40c: V356 = 0x3cc
---
Entry stack: [V10, 0x141, V27, 0x1, 0x4, V46, V48, 0xc9, 0x4, V48, 0x3f3, V347, V348]
Stack pops: 2
Stack additions: [0x3cc, S1, S0]
Exit stack: [V10, 0x141, V27, 0x1, 0x4, V46, V48, 0xc9, 0x4, V48, 0x3f3, 0x3cc, V347, V348]

================================

Block 0x411
[0x411:0x419]
---
Predecessors: [0x40b, 0x41a]
Successors: [0x41a, 0x425]
---
0x411 JUMPDEST
0x412 DUP1
0x413 DUP3
0x414 GT
0x415 ISZERO
0x416 PUSH2 0x425
0x419 JUMPI
---
0x411: JUMPDEST 
0x414: V357 = GT V347 S0
0x415: V358 = ISZERO V357
0x416: V359 = 0x425
0x419: JUMPI 0x425 V358
---
Entry stack: [V10, 0x141, V27, 0x1, 0x4, V46, V48, 0xc9, 0x4, V48, 0x3f3, 0x3cc, V347, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x141, V27, 0x1, 0x4, V46, V48, 0xc9, 0x4, V48, 0x3f3, 0x3cc, V347, S0]

================================

Block 0x41a
[0x41a:0x424]
---
Predecessors: [0x411]
Successors: [0x411]
---
0x41a PUSH1 0x0
0x41c DUP2
0x41d SSTORE
0x41e PUSH1 0x1
0x420 ADD
0x421 PUSH2 0x411
0x424 JUMP
---
0x41a: V360 = 0x0
0x41d: S[S0] = 0x0
0x41e: V361 = 0x1
0x420: V362 = ADD 0x1 S0
0x421: V363 = 0x411
0x424: JUMP 0x411
---
Entry stack: [V10, 0x141, V27, 0x1, 0x4, V46, V48, 0xc9, 0x4, V48, 0x3f3, 0x3cc, V347, S0]
Stack pops: 1
Stack additions: [V362]
Exit stack: [V10, 0x141, V27, 0x1, 0x4, V46, V48, 0xc9, 0x4, V48, 0x3f3, 0x3cc, V347, V362]

================================

Block 0x425
[0x425:0x428]
---
Predecessors: [0x411]
Successors: [0x3cc]
---
0x425 JUMPDEST
0x426 POP
0x427 SWAP1
0x428 JUMP
---
0x425: JUMPDEST 
0x428: JUMP 0x3cc
---
Entry stack: [V10, 0x141, V27, 0x1, 0x4, V46, V48, 0xc9, 0x4, V48, 0x3f3, 0x3cc, V347, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V10, 0x141, V27, 0x1, 0x4, V46, V48, 0xc9, 0x4, V48, 0x3f3, V347]

================================

Block 0x429
[0x429:0x457]
---
Predecessors: []
Successors: []
---
0x429 JUMPDEST
0x42a SWAP1
0x42b JUMP
0x42c STOP
0x42d LOG1
0x42e PUSH6 0x627a7a723058
0x435 SHA3
0x436 MISSING 0xf6
0x437 MISSING 0xe8
0x438 MISSING 0xf6
0x439 MSTORE8
0x43a CODESIZE
0x43b PUSH6 0x78b244a2cb8
0x442 NUMBER
0x443 MISSING 0x2a
0x444 NUMBER
0x445 MISSING 0xc7
0x446 EQ
0x447 MISSING 0xa8
0x448 MISSING 0xac
0x449 DUP9
0x44a DIV
0x44b JUMP
0x44c MISSING 0xb3
0x44d MISSING 0x2a
0x44e MUL
0x44f MISSING 0x2d
0x450 MISSING 0xd1
0x451 MISSING 0xe
0x452 MISSING 0xc0
0x453 MISSING 0xea
0x454 PC
0x455 CODESIZE
0x456 STOP
0x457 MISSING 0x29
---
0x429: JUMPDEST 
0x42b: JUMP S1
0x42c: STOP 
0x42d: LOG S0 S1 S2
0x42e: V364 = 0x627a7a723058
0x435: V365 = SHA3 0x627a7a723058 S3
0x436: MISSING 0xf6
0x437: MISSING 0xe8
0x438: MISSING 0xf6
0x439: M8[S0] = S1
0x43a: V366 = CODESIZE
0x43b: V367 = 0x78b244a2cb8
0x442: V368 = NUMBER
0x443: MISSING 0x2a
0x444: V369 = NUMBER
0x445: MISSING 0xc7
0x446: V370 = EQ S0 S1
0x447: MISSING 0xa8
0x448: MISSING 0xac
0x44a: V371 = DIV S8 S0
0x44b: JUMP V371
0x44c: MISSING 0xb3
0x44d: MISSING 0x2a
0x44e: V372 = MUL S0 S1
0x44f: MISSING 0x2d
0x450: MISSING 0xd1
0x451: MISSING 0xe
0x452: MISSING 0xc0
0x453: MISSING 0xea
0x454: V373 = PC
0x455: V374 = CODESIZE
0x456: STOP 
0x457: MISSING 0x29
---
Entry stack: []
Stack pops: 343006
Stack additions: []
Exit stack: []

================================

Function 0:
Public function signature: 0x41c0e1b5
Entry block: 0x143
Exit block: 0x141
Body: 0x141, 0x143, 0x14a, 0x14e, 0x280, 0x298, 0x2a5, 0x2a6

Function 1:
Public function signature: 0x82d38954
Entry block: 0x158
Exit block: 0x177
Body: 0x158, 0x15f, 0x163, 0x177, 0x2a8

Function 2:
Public function signature: 0xbee62db0
Entry block: 0x1a4
Exit block: 0x177
Body: 0x177, 0x1a4, 0x1ab, 0x1af, 0x2d1

Function 3:
Public function signature: 0xcc1a2865
Entry block: 0x1e7
Exit block: 0x1fd
Body: 0x1e7, 0x1ee, 0x1f2, 0x1fd, 0x2fb, 0x308, 0x309, 0x317

Function 4:
Public function signature: 0xd14d42ba
Entry block: 0x219
Exit block: 0x141
Body: 0xc9, 0xd7, 0x13e, 0x141, 0x219, 0x220, 0x224, 0x22c, 0x253, 0x25c, 0x264, 0x26c, 0x32d, 0x335, 0x36a, 0x36e, 0x396, 0x3a6, 0x3c4, 0x3cc, 0x3f3, 0x3f4, 0x3f9

Function 5:
Public fallback function
Entry block: 0x6a
Exit block: 0x26c
Body: 0x6a, 0x6e, 0xc9, 0xd7, 0x13e, 0x141, 0x22c, 0x253, 0x25c, 0x264, 0x26c, 0x3cc, 0x3cf, 0x3dd, 0x3f3, 0x3f4, 0x40b, 0x411, 0x41a, 0x425

