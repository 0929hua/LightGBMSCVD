Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4b]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4b
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4b
0xc: JUMPI 0x4b V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x50]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x6d4ce63c
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x50
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x6d4ce63c
0x3b: V13 = EQ V11 0x6d4ce63c
0x3c: V14 = 0x50
0x3f: JUMPI 0x50 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x67]
---
0x40 DUP1
0x41 PUSH4 0xfeba894c
0x46 EQ
0x47 PUSH2 0x67
0x4a JUMPI
---
0x41: V15 = 0xfeba894c
0x46: V16 = EQ 0xfeba894c V11
0x47: V17 = 0x67
0x4a: JUMPI 0x67 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x4f]
---
Predecessors: [0x0, 0x40]
Successors: []
---
0x4b JUMPDEST
0x4c PUSH1 0x0
0x4e DUP1
0x4f REVERT
---
0x4b: JUMPDEST 
0x4c: V18 = 0x0
0x4f: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x50
[0x50:0x57]
---
Predecessors: [0xd]
Successors: [0x58, 0x5c]
---
0x50 JUMPDEST
0x51 CALLVALUE
0x52 DUP1
0x53 ISZERO
0x54 PUSH2 0x5c
0x57 JUMPI
---
0x50: JUMPDEST 
0x51: V19 = CALLVALUE
0x53: V20 = ISZERO V19
0x54: V21 = 0x5c
0x57: JUMPI 0x5c V20
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V19]
Exit stack: [V11, V19]

================================

Block 0x58
[0x58:0x5b]
---
Predecessors: [0x50]
Successors: []
---
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x58: V22 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11, V19]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V19]

================================

Block 0x5c
[0x5c:0x64]
---
Predecessors: [0x50]
Successors: [0x6f]
---
0x5c JUMPDEST
0x5d POP
0x5e PUSH2 0x65
0x61 PUSH2 0x6f
0x64 JUMP
---
0x5c: JUMPDEST 
0x5e: V23 = 0x65
0x61: V24 = 0x6f
0x64: JUMP 0x6f
---
Entry stack: [V11, V19]
Stack pops: 1
Stack additions: [0x65]
Exit stack: [V11, 0x65]

================================

Block 0x65
[0x65:0x66]
---
Predecessors: [0xaa, 0x30a]
Successors: []
---
0x65 JUMPDEST
0x66 STOP
---
0x65: JUMPDEST 
0x66: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x67
[0x67:0x6e]
---
Predecessors: [0x40]
Successors: [0xad]
---
0x67 JUMPDEST
0x68 PUSH2 0x65
0x6b PUSH2 0xad
0x6e JUMP
---
0x67: JUMPDEST 
0x68: V25 = 0x65
0x6b: V26 = 0xad
0x6e: JUMP 0xad
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x65]
Exit stack: [V11, 0x65]

================================

Block 0x6f
[0x6f:0xa0]
---
Predecessors: [0x5c]
Successors: [0xa1, 0xaa]
---
0x6f JUMPDEST
0x70 PUSH1 0x0
0x72 DUP1
0x73 SLOAD
0x74 PUSH1 0x40
0x76 MLOAD
0x77 PUSH1 0x1
0x79 PUSH1 0xa0
0x7b PUSH1 0x2
0x7d EXP
0x7e SUB
0x7f SWAP1
0x80 SWAP2
0x81 AND
0x82 SWAP2
0x83 ADDRESS
0x84 BALANCE
0x85 DUP1
0x86 ISZERO
0x87 PUSH2 0x8fc
0x8a MUL
0x8b SWAP3
0x8c SWAP1
0x8d SWAP2
0x8e DUP2
0x8f DUP2
0x90 DUP2
0x91 DUP6
0x92 DUP9
0x93 DUP9
0x94 CALL
0x95 SWAP4
0x96 POP
0x97 POP
0x98 POP
0x99 POP
0x9a ISZERO
0x9b DUP1
0x9c ISZERO
0x9d PUSH2 0xaa
0xa0 JUMPI
---
0x6f: JUMPDEST 
0x70: V27 = 0x0
0x73: V28 = S[0x0]
0x74: V29 = 0x40
0x76: V30 = M[0x40]
0x77: V31 = 0x1
0x79: V32 = 0xa0
0x7b: V33 = 0x2
0x7d: V34 = EXP 0x2 0xa0
0x7e: V35 = SUB 0x10000000000000000000000000000000000000000 0x1
0x81: V36 = AND V28 0xffffffffffffffffffffffffffffffffffffffff
0x83: V37 = ADDRESS
0x84: V38 = BALANCE V37
0x86: V39 = ISZERO V38
0x87: V40 = 0x8fc
0x8a: V41 = MUL 0x8fc V39
0x94: V42 = CALL V41 V36 V38 V30 0x0 V30 0x0
0x9a: V43 = ISZERO V42
0x9c: V44 = ISZERO V43
0x9d: V45 = 0xaa
0xa0: JUMPI 0xaa V44
---
Entry stack: [V11, 0x65]
Stack pops: 0
Stack additions: [V43]
Exit stack: [V11, 0x65, V43]

================================

Block 0xa1
[0xa1:0xa9]
---
Predecessors: [0x6f]
Successors: []
---
0xa1 RETURNDATASIZE
0xa2 PUSH1 0x0
0xa4 DUP1
0xa5 RETURNDATACOPY
0xa6 RETURNDATASIZE
0xa7 PUSH1 0x0
0xa9 REVERT
---
0xa1: V46 = RETURNDATASIZE
0xa2: V47 = 0x0
0xa5: RETURNDATACOPY 0x0 0x0 V46
0xa6: V48 = RETURNDATASIZE
0xa7: V49 = 0x0
0xa9: REVERT 0x0 V48
---
Entry stack: [V11, 0x65, V43]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x65, V43]

================================

Block 0xaa
[0xaa:0xac]
---
Predecessors: [0x6f]
Successors: [0x65]
---
0xaa JUMPDEST
0xab POP
0xac JUMP
---
0xaa: JUMPDEST 
0xac: JUMP 0x65
---
Entry stack: [V11, 0x65, V43]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0xad
[0xad:0xc8]
---
Predecessors: [0x67]
Successors: [0xc9, 0xd5]
---
0xad JUMPDEST
0xae PUSH1 0x0
0xb0 DUP1
0xb1 SLOAD
0xb2 DUP2
0xb3 SWAP1
0xb4 DUP2
0xb5 SWAP1
0xb6 DUP2
0xb7 SWAP1
0xb8 PUSH1 0x1
0xba PUSH1 0xa0
0xbc PUSH1 0x2
0xbe EXP
0xbf SUB
0xc0 AND
0xc1 CALLER
0xc2 EQ
0xc3 DUP1
0xc4 ISZERO
0xc5 PUSH2 0xd5
0xc8 JUMPI
---
0xad: JUMPDEST 
0xae: V50 = 0x0
0xb1: V51 = S[0x0]
0xb8: V52 = 0x1
0xba: V53 = 0xa0
0xbc: V54 = 0x2
0xbe: V55 = EXP 0x2 0xa0
0xbf: V56 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc0: V57 = AND 0xffffffffffffffffffffffffffffffffffffffff V51
0xc1: V58 = CALLER
0xc2: V59 = EQ V58 V57
0xc4: V60 = ISZERO V59
0xc5: V61 = 0xd5
0xc8: JUMPI 0xd5 V60
---
Entry stack: [V11, 0x65]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, V59]
Exit stack: [V11, 0x65, 0x0, 0x0, 0x0, 0x0, V59]

================================

Block 0xc9
[0xc9:0xd4]
---
Predecessors: [0xad]
Successors: [0xd5]
---
0xc9 POP
0xca CALLVALUE
0xcb PUSH8 0x16345785d8a0000
0xd4 EQ
---
0xca: V62 = CALLVALUE
0xcb: V63 = 0x16345785d8a0000
0xd4: V64 = EQ 0x16345785d8a0000 V62
---
Entry stack: [V11, 0x65, 0x0, 0x0, 0x0, 0x0, V59]
Stack pops: 1
Stack additions: [V64]
Exit stack: [V11, 0x65, 0x0, 0x0, 0x0, 0x0, V64]

================================

Block 0xd5
[0xd5:0xdb]
---
Predecessors: [0xad, 0xc9]
Successors: [0xdc, 0xe0]
---
0xd5 JUMPDEST
0xd6 ISZERO
0xd7 ISZERO
0xd8 PUSH2 0xe0
0xdb JUMPI
---
0xd5: JUMPDEST 
0xd6: V65 = ISZERO S0
0xd7: V66 = ISZERO V65
0xd8: V67 = 0xe0
0xdb: JUMPI 0xe0 V66
---
Entry stack: [V11, 0x65, 0x0, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x65, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xdc
[0xdc:0xdf]
---
Predecessors: [0xd5]
Successors: []
---
0xdc PUSH1 0x0
0xde DUP1
0xdf REVERT
---
0xdc: V68 = 0x0
0xdf: REVERT 0x0 0x0
---
Entry stack: [V11, 0x65, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x65, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xe0
[0xe0:0x147]
---
Predecessors: [0xd5]
Successors: [0x148, 0x14c]
---
0xe0 JUMPDEST
0xe1 PUSH1 0x1
0xe3 PUSH1 0x0
0xe5 SWAP1
0xe6 SLOAD
0xe7 SWAP1
0xe8 PUSH2 0x100
0xeb EXP
0xec SWAP1
0xed DIV
0xee PUSH1 0x1
0xf0 PUSH1 0xa0
0xf2 PUSH1 0x2
0xf4 EXP
0xf5 SUB
0xf6 AND
0xf7 PUSH1 0x1
0xf9 PUSH1 0xa0
0xfb PUSH1 0x2
0xfd EXP
0xfe SUB
0xff AND
0x100 PUSH4 0xd87574e0
0x105 PUSH1 0x40
0x107 MLOAD
0x108 DUP2
0x109 PUSH4 0xffffffff
0x10e AND
0x10f PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x12d MUL
0x12e DUP2
0x12f MSTORE
0x130 PUSH1 0x4
0x132 ADD
0x133 PUSH1 0x20
0x135 PUSH1 0x40
0x137 MLOAD
0x138 DUP1
0x139 DUP4
0x13a SUB
0x13b DUP2
0x13c PUSH1 0x0
0x13e DUP8
0x13f DUP1
0x140 EXTCODESIZE
0x141 ISZERO
0x142 DUP1
0x143 ISZERO
0x144 PUSH2 0x14c
0x147 JUMPI
---
0xe0: JUMPDEST 
0xe1: V69 = 0x1
0xe3: V70 = 0x0
0xe6: V71 = S[0x1]
0xe8: V72 = 0x100
0xeb: V73 = EXP 0x100 0x0
0xed: V74 = DIV V71 0x1
0xee: V75 = 0x1
0xf0: V76 = 0xa0
0xf2: V77 = 0x2
0xf4: V78 = EXP 0x2 0xa0
0xf5: V79 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf6: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V74
0xf7: V81 = 0x1
0xf9: V82 = 0xa0
0xfb: V83 = 0x2
0xfd: V84 = EXP 0x2 0xa0
0xfe: V85 = SUB 0x10000000000000000000000000000000000000000 0x1
0xff: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0x100: V87 = 0xd87574e0
0x105: V88 = 0x40
0x107: V89 = M[0x40]
0x109: V90 = 0xffffffff
0x10e: V91 = AND 0xffffffff 0xd87574e0
0x10f: V92 = 0x100000000000000000000000000000000000000000000000000000000
0x12d: V93 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd87574e0
0x12f: M[V89] = 0xd87574e000000000000000000000000000000000000000000000000000000000
0x130: V94 = 0x4
0x132: V95 = ADD 0x4 V89
0x133: V96 = 0x20
0x135: V97 = 0x40
0x137: V98 = M[0x40]
0x13a: V99 = SUB V95 V98
0x13c: V100 = 0x0
0x140: V101 = EXTCODESIZE V86
0x141: V102 = ISZERO V101
0x143: V103 = ISZERO V102
0x144: V104 = 0x14c
0x147: JUMPI 0x14c V103
---
Entry stack: [V11, 0x65, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V86, 0xd87574e0, V95, 0x20, V98, V99, V98, 0x0, V86, V102]
Exit stack: [V11, 0x65, 0x0, 0x0, 0x0, 0x0, V86, 0xd87574e0, V95, 0x20, V98, V99, V98, 0x0, V86, V102]

================================

Block 0x148
[0x148:0x14b]
---
Predecessors: [0xe0]
Successors: []
---
0x148 PUSH1 0x0
0x14a DUP1
0x14b REVERT
---
0x148: V105 = 0x0
0x14b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x65, 0x0, 0x0, 0x0, 0x0, V86, 0xd87574e0, V95, 0x20, V98, V99, V98, 0x0, V86, V102]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x65, 0x0, 0x0, 0x0, 0x0, V86, 0xd87574e0, V95, 0x20, V98, V99, V98, 0x0, V86, V102]

================================

Block 0x14c
[0x14c:0x156]
---
Predecessors: [0xe0]
Successors: [0x157, 0x160]
---
0x14c JUMPDEST
0x14d POP
0x14e GAS
0x14f CALL
0x150 ISZERO
0x151 DUP1
0x152 ISZERO
0x153 PUSH2 0x160
0x156 JUMPI
---
0x14c: JUMPDEST 
0x14e: V106 = GAS
0x14f: V107 = CALL V106 V86 0x0 V98 V99 V98 0x20
0x150: V108 = ISZERO V107
0x152: V109 = ISZERO V108
0x153: V110 = 0x160
0x156: JUMPI 0x160 V109
---
Entry stack: [V11, 0x65, 0x0, 0x0, 0x0, 0x0, V86, 0xd87574e0, V95, 0x20, V98, V99, V98, 0x0, V86, V102]
Stack pops: 7
Stack additions: [V108]
Exit stack: [V11, 0x65, 0x0, 0x0, 0x0, 0x0, V86, 0xd87574e0, V95, V108]

================================

Block 0x157
[0x157:0x15f]
---
Predecessors: [0x14c]
Successors: []
---
0x157 RETURNDATASIZE
0x158 PUSH1 0x0
0x15a DUP1
0x15b RETURNDATACOPY
0x15c RETURNDATASIZE
0x15d PUSH1 0x0
0x15f REVERT
---
0x157: V111 = RETURNDATASIZE
0x158: V112 = 0x0
0x15b: RETURNDATACOPY 0x0 0x0 V111
0x15c: V113 = RETURNDATASIZE
0x15d: V114 = 0x0
0x15f: REVERT 0x0 V113
---
Entry stack: [V11, 0x65, 0x0, 0x0, 0x0, 0x0, V86, 0xd87574e0, V95, V108]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x65, 0x0, 0x0, 0x0, 0x0, V86, 0xd87574e0, V95, V108]

================================

Block 0x160
[0x160:0x171]
---
Predecessors: [0x14c]
Successors: [0x172, 0x176]
---
0x160 JUMPDEST
0x161 POP
0x162 POP
0x163 POP
0x164 POP
0x165 PUSH1 0x40
0x167 MLOAD
0x168 RETURNDATASIZE
0x169 PUSH1 0x20
0x16b DUP2
0x16c LT
0x16d ISZERO
0x16e PUSH2 0x176
0x171 JUMPI
---
0x160: JUMPDEST 
0x165: V115 = 0x40
0x167: V116 = M[0x40]
0x168: V117 = RETURNDATASIZE
0x169: V118 = 0x20
0x16c: V119 = LT V117 0x20
0x16d: V120 = ISZERO V119
0x16e: V121 = 0x176
0x171: JUMPI 0x176 V120
---
Entry stack: [V11, 0x65, 0x0, 0x0, 0x0, 0x0, V86, 0xd87574e0, V95, V108]
Stack pops: 4
Stack additions: [V116, V117]
Exit stack: [V11, 0x65, 0x0, 0x0, 0x0, 0x0, V116, V117]

================================

Block 0x172
[0x172:0x175]
---
Predecessors: [0x160]
Successors: []
---
0x172 PUSH1 0x0
0x174 DUP1
0x175 REVERT
---
0x172: V122 = 0x0
0x175: REVERT 0x0 0x0
---
Entry stack: [V11, 0x65, 0x0, 0x0, 0x0, 0x0, V116, V117]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x65, 0x0, 0x0, 0x0, 0x0, V116, V117]

================================

Block 0x176
[0x176:0x1d6]
---
Predecessors: [0x160]
Successors: [0x1d7, 0x1db]
---
0x176 JUMPDEST
0x177 POP
0x178 MLOAD
0x179 PUSH1 0x1
0x17b SLOAD
0x17c PUSH1 0x40
0x17e DUP1
0x17f MLOAD
0x180 PUSH32 0x11a09ae700000000000000000000000000000000000000000000000000000000
0x1a1 DUP2
0x1a2 MSTORE
0x1a3 SWAP1
0x1a4 MLOAD
0x1a5 SWAP3
0x1a6 SWAP7
0x1a7 POP
0x1a8 PUSH1 0x1
0x1aa PUSH1 0xa0
0x1ac PUSH1 0x2
0x1ae EXP
0x1af SUB
0x1b0 SWAP1
0x1b1 SWAP2
0x1b2 AND
0x1b3 SWAP2
0x1b4 PUSH4 0x11a09ae7
0x1b9 SWAP2
0x1ba PUSH1 0x4
0x1bc DUP1
0x1bd DUP3
0x1be ADD
0x1bf SWAP3
0x1c0 PUSH1 0x20
0x1c2 SWAP3
0x1c3 SWAP1
0x1c4 SWAP2
0x1c5 SWAP1
0x1c6 DUP3
0x1c7 SWAP1
0x1c8 SUB
0x1c9 ADD
0x1ca DUP2
0x1cb PUSH1 0x0
0x1cd DUP8
0x1ce DUP1
0x1cf EXTCODESIZE
0x1d0 ISZERO
0x1d1 DUP1
0x1d2 ISZERO
0x1d3 PUSH2 0x1db
0x1d6 JUMPI
---
0x176: JUMPDEST 
0x178: V123 = M[V116]
0x179: V124 = 0x1
0x17b: V125 = S[0x1]
0x17c: V126 = 0x40
0x17f: V127 = M[0x40]
0x180: V128 = 0x11a09ae700000000000000000000000000000000000000000000000000000000
0x1a2: M[V127] = 0x11a09ae700000000000000000000000000000000000000000000000000000000
0x1a4: V129 = M[0x40]
0x1a8: V130 = 0x1
0x1aa: V131 = 0xa0
0x1ac: V132 = 0x2
0x1ae: V133 = EXP 0x2 0xa0
0x1af: V134 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b2: V135 = AND V125 0xffffffffffffffffffffffffffffffffffffffff
0x1b4: V136 = 0x11a09ae7
0x1ba: V137 = 0x4
0x1be: V138 = ADD V127 0x4
0x1c0: V139 = 0x20
0x1c8: V140 = SUB V127 V129
0x1c9: V141 = ADD V140 0x4
0x1cb: V142 = 0x0
0x1cf: V143 = EXTCODESIZE V135
0x1d0: V144 = ISZERO V143
0x1d2: V145 = ISZERO V144
0x1d3: V146 = 0x1db
0x1d6: JUMPI 0x1db V145
---
Entry stack: [V11, 0x65, 0x0, 0x0, 0x0, 0x0, V116, V117]
Stack pops: 6
Stack additions: [V123, S4, S3, S2, V135, 0x11a09ae7, V138, 0x20, V129, V141, V129, 0x0, V135, V144]
Exit stack: [V11, 0x65, V123, 0x0, 0x0, 0x0, V135, 0x11a09ae7, V138, 0x20, V129, V141, V129, 0x0, V135, V144]

================================

Block 0x1d7
[0x1d7:0x1da]
---
Predecessors: [0x176]
Successors: []
---
0x1d7 PUSH1 0x0
0x1d9 DUP1
0x1da REVERT
---
0x1d7: V147 = 0x0
0x1da: REVERT 0x0 0x0
---
Entry stack: [V11, 0x65, V123, 0x0, 0x0, 0x0, V135, 0x11a09ae7, V138, 0x20, V129, V141, V129, 0x0, V135, V144]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x65, V123, 0x0, 0x0, 0x0, V135, 0x11a09ae7, V138, 0x20, V129, V141, V129, 0x0, V135, V144]

================================

Block 0x1db
[0x1db:0x1e5]
---
Predecessors: [0x176]
Successors: [0x1e6, 0x1ef]
---
0x1db JUMPDEST
0x1dc POP
0x1dd GAS
0x1de CALL
0x1df ISZERO
0x1e0 DUP1
0x1e1 ISZERO
0x1e2 PUSH2 0x1ef
0x1e5 JUMPI
---
0x1db: JUMPDEST 
0x1dd: V148 = GAS
0x1de: V149 = CALL V148 V135 0x0 V129 V141 V129 0x20
0x1df: V150 = ISZERO V149
0x1e1: V151 = ISZERO V150
0x1e2: V152 = 0x1ef
0x1e5: JUMPI 0x1ef V151
---
Entry stack: [V11, 0x65, V123, 0x0, 0x0, 0x0, V135, 0x11a09ae7, V138, 0x20, V129, V141, V129, 0x0, V135, V144]
Stack pops: 7
Stack additions: [V150]
Exit stack: [V11, 0x65, V123, 0x0, 0x0, 0x0, V135, 0x11a09ae7, V138, V150]

================================

Block 0x1e6
[0x1e6:0x1ee]
---
Predecessors: [0x1db]
Successors: []
---
0x1e6 RETURNDATASIZE
0x1e7 PUSH1 0x0
0x1e9 DUP1
0x1ea RETURNDATACOPY
0x1eb RETURNDATASIZE
0x1ec PUSH1 0x0
0x1ee REVERT
---
0x1e6: V153 = RETURNDATASIZE
0x1e7: V154 = 0x0
0x1ea: RETURNDATACOPY 0x0 0x0 V153
0x1eb: V155 = RETURNDATASIZE
0x1ec: V156 = 0x0
0x1ee: REVERT 0x0 V155
---
Entry stack: [V11, 0x65, V123, 0x0, 0x0, 0x0, V135, 0x11a09ae7, V138, V150]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x65, V123, 0x0, 0x0, 0x0, V135, 0x11a09ae7, V138, V150]

================================

Block 0x1ef
[0x1ef:0x200]
---
Predecessors: [0x1db]
Successors: [0x201, 0x205]
---
0x1ef JUMPDEST
0x1f0 POP
0x1f1 POP
0x1f2 POP
0x1f3 POP
0x1f4 PUSH1 0x40
0x1f6 MLOAD
0x1f7 RETURNDATASIZE
0x1f8 PUSH1 0x20
0x1fa DUP2
0x1fb LT
0x1fc ISZERO
0x1fd PUSH2 0x205
0x200 JUMPI
---
0x1ef: JUMPDEST 
0x1f4: V157 = 0x40
0x1f6: V158 = M[0x40]
0x1f7: V159 = RETURNDATASIZE
0x1f8: V160 = 0x20
0x1fb: V161 = LT V159 0x20
0x1fc: V162 = ISZERO V161
0x1fd: V163 = 0x205
0x200: JUMPI 0x205 V162
---
Entry stack: [V11, 0x65, V123, 0x0, 0x0, 0x0, V135, 0x11a09ae7, V138, V150]
Stack pops: 4
Stack additions: [V158, V159]
Exit stack: [V11, 0x65, V123, 0x0, 0x0, 0x0, V158, V159]

================================

Block 0x201
[0x201:0x204]
---
Predecessors: [0x1ef]
Successors: []
---
0x201 PUSH1 0x0
0x203 DUP1
0x204 REVERT
---
0x201: V164 = 0x0
0x204: REVERT 0x0 0x0
---
Entry stack: [V11, 0x65, V123, 0x0, 0x0, 0x0, V158, V159]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x65, V123, 0x0, 0x0, 0x0, V158, V159]

================================

Block 0x205
[0x205:0x219]
---
Predecessors: [0x1ef]
Successors: [0x21a, 0x21e]
---
0x205 JUMPDEST
0x206 POP
0x207 MLOAD
0x208 SWAP3
0x209 POP
0x20a PUSH8 0x429d069189e0000
0x213 DUP5
0x214 LT
0x215 ISZERO
0x216 PUSH2 0x21e
0x219 JUMPI
---
0x205: JUMPDEST 
0x207: V165 = M[V158]
0x20a: V166 = 0x429d069189e0000
0x214: V167 = LT V123 0x429d069189e0000
0x215: V168 = ISZERO V167
0x216: V169 = 0x21e
0x219: JUMPI 0x21e V168
---
Entry stack: [V11, 0x65, V123, 0x0, 0x0, 0x0, V158, V159]
Stack pops: 6
Stack additions: [S5, V165, S3, S2]
Exit stack: [V11, 0x65, V123, V165, 0x0, 0x0]

================================

Block 0x21a
[0x21a:0x21d]
---
Predecessors: [0x205]
Successors: []
---
0x21a PUSH1 0x0
0x21c DUP1
0x21d REVERT
---
0x21a: V170 = 0x0
0x21d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x65, V123, V165, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x65, V123, V165, 0x0, 0x0]

================================

Block 0x21e
[0x21e:0x231]
---
Predecessors: [0x205]
Successors: [0x232]
---
0x21e JUMPDEST
0x21f POP
0x220 POP
0x221 PUSH1 0x0
0x223 DUP1
0x224 SLOAD
0x225 PUSH1 0x1
0x227 PUSH1 0xa0
0x229 PUSH1 0x2
0x22b EXP
0x22c SUB
0x22d AND
0x22e BALANCE
0x22f CALLVALUE
0x230 ADD
0x231 SWAP1
---
0x21e: JUMPDEST 
0x221: V171 = 0x0
0x224: V172 = S[0x0]
0x225: V173 = 0x1
0x227: V174 = 0xa0
0x229: V175 = 0x2
0x22b: V176 = EXP 0x2 0xa0
0x22c: V177 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22d: V178 = AND 0xffffffffffffffffffffffffffffffffffffffff V172
0x22e: V179 = BALANCE V178
0x22f: V180 = CALLVALUE
0x230: V181 = ADD V180 V179
---
Entry stack: [V11, 0x65, V123, V165, 0x0, 0x0]
Stack pops: 2
Stack additions: [V181, 0x0]
Exit stack: [V11, 0x65, V123, V165, V181, 0x0]

================================

Block 0x232
[0x232:0x23c]
---
Predecessors: [0x21e, 0x2ea]
Successors: [0x23d, 0x2f2]
---
0x232 JUMPDEST
0x233 PUSH1 0x2
0x235 SLOAD
0x236 DUP2
0x237 LT
0x238 ISZERO
0x239 PUSH2 0x2f2
0x23c JUMPI
---
0x232: JUMPDEST 
0x233: V182 = 0x2
0x235: V183 = S[0x2]
0x237: V184 = LT S0 V183
0x238: V185 = ISZERO V184
0x239: V186 = 0x2f2
0x23c: JUMPI 0x2f2 V185
---
Entry stack: [V11, 0x65, V123, V165, V181, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x65, V123, V165, V181, S0]

================================

Block 0x23d
[0x23d:0x248]
---
Predecessors: [0x232]
Successors: [0x249, 0x24a]
---
0x23d PUSH1 0x2
0x23f DUP1
0x240 SLOAD
0x241 DUP3
0x242 SWAP1
0x243 DUP2
0x244 LT
0x245 PUSH2 0x24a
0x248 JUMPI
---
0x23d: V187 = 0x2
0x240: V188 = S[0x2]
0x244: V189 = LT S0 V188
0x245: V190 = 0x24a
0x248: JUMPI 0x24a V189
---
Entry stack: [V11, 0x65, V123, V165, V181, S0]
Stack pops: 1
Stack additions: [S0, 0x2, S0]
Exit stack: [V11, 0x65, V123, V165, V181, S0, 0x2, S0]

================================

Block 0x249
[0x249:0x249]
---
Predecessors: [0x23d]
Successors: []
---
0x249 INVALID
---
0x249: INVALID 
---
Entry stack: [V11, 0x65, V123, V165, V181, S2, 0x2, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x65, V123, V165, V181, S2, 0x2, S0]

================================

Block 0x24a
[0x24a:0x2b1]
---
Predecessors: [0x23d]
Successors: [0x2b2, 0x2b6]
---
0x24a JUMPDEST
0x24b PUSH1 0x0
0x24d SWAP2
0x24e DUP3
0x24f MSTORE
0x250 PUSH1 0x20
0x252 DUP3
0x253 SHA3
0x254 ADD
0x255 SLOAD
0x256 PUSH1 0x40
0x258 DUP1
0x259 MLOAD
0x25a PUSH32 0x2f955a100000000000000000000000000000000000000000000000000000000
0x27b DUP2
0x27c MSTORE
0x27d PUSH1 0x4
0x27f DUP2
0x280 ADD
0x281 DUP8
0x282 SWAP1
0x283 MSTORE
0x284 SWAP1
0x285 MLOAD
0x286 PUSH1 0x1
0x288 PUSH1 0xa0
0x28a PUSH1 0x2
0x28c EXP
0x28d SUB
0x28e SWAP1
0x28f SWAP3
0x290 AND
0x291 SWAP3
0x292 PUSH4 0x2f955a1
0x297 SWAP3
0x298 CALLVALUE
0x299 SWAP3
0x29a PUSH1 0x24
0x29c DUP1
0x29d DUP3
0x29e ADD
0x29f SWAP4
0x2a0 SWAP3
0x2a1 SWAP2
0x2a2 DUP3
0x2a3 SWAP1
0x2a4 SUB
0x2a5 ADD
0x2a6 DUP2
0x2a7 DUP6
0x2a8 DUP9
0x2a9 DUP1
0x2aa EXTCODESIZE
0x2ab ISZERO
0x2ac DUP1
0x2ad ISZERO
0x2ae PUSH2 0x2b6
0x2b1 JUMPI
---
0x24a: JUMPDEST 
0x24b: V191 = 0x0
0x24f: M[0x0] = 0x2
0x250: V192 = 0x20
0x253: V193 = SHA3 0x0 0x20
0x254: V194 = ADD V193 S0
0x255: V195 = S[V194]
0x256: V196 = 0x40
0x259: V197 = M[0x40]
0x25a: V198 = 0x2f955a100000000000000000000000000000000000000000000000000000000
0x27c: M[V197] = 0x2f955a100000000000000000000000000000000000000000000000000000000
0x27d: V199 = 0x4
0x280: V200 = ADD V197 0x4
0x283: M[V200] = V165
0x285: V201 = M[0x40]
0x286: V202 = 0x1
0x288: V203 = 0xa0
0x28a: V204 = 0x2
0x28c: V205 = EXP 0x2 0xa0
0x28d: V206 = SUB 0x10000000000000000000000000000000000000000 0x1
0x290: V207 = AND V195 0xffffffffffffffffffffffffffffffffffffffff
0x292: V208 = 0x2f955a1
0x298: V209 = CALLVALUE
0x29a: V210 = 0x24
0x29e: V211 = ADD V197 0x24
0x2a4: V212 = SUB V197 V201
0x2a5: V213 = ADD V212 0x24
0x2aa: V214 = EXTCODESIZE V207
0x2ab: V215 = ISZERO V214
0x2ad: V216 = ISZERO V215
0x2ae: V217 = 0x2b6
0x2b1: JUMPI 0x2b6 V216
---
Entry stack: [V11, 0x65, V123, V165, V181, S2, 0x2, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, V207, 0x2f955a1, V209, V211, 0x0, V201, V213, V201, V209, V207, V215]
Exit stack: [V11, 0x65, V123, V165, V181, S2, V207, 0x2f955a1, V209, V211, 0x0, V201, V213, V201, V209, V207, V215]

================================

Block 0x2b2
[0x2b2:0x2b5]
---
Predecessors: [0x24a]
Successors: []
---
0x2b2 PUSH1 0x0
0x2b4 DUP1
0x2b5 REVERT
---
0x2b2: V218 = 0x0
0x2b5: REVERT 0x0 0x0
---
Entry stack: [V11, 0x65, V123, V165, V181, S11, V207, 0x2f955a1, V209, V211, 0x0, V201, V213, V201, V209, V207, V215]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x65, V123, V165, V181, S11, V207, 0x2f955a1, V209, V211, 0x0, V201, V213, V201, V209, V207, V215]

================================

Block 0x2b6
[0x2b6:0x2c0]
---
Predecessors: [0x24a]
Successors: [0x2c1, 0x2ca]
---
0x2b6 JUMPDEST
0x2b7 POP
0x2b8 GAS
0x2b9 CALL
0x2ba ISZERO
0x2bb DUP1
0x2bc ISZERO
0x2bd PUSH2 0x2ca
0x2c0 JUMPI
---
0x2b6: JUMPDEST 
0x2b8: V219 = GAS
0x2b9: V220 = CALL V219 V207 V209 V201 V213 V201 0x0
0x2ba: V221 = ISZERO V220
0x2bc: V222 = ISZERO V221
0x2bd: V223 = 0x2ca
0x2c0: JUMPI 0x2ca V222
---
Entry stack: [V11, 0x65, V123, V165, V181, S11, V207, 0x2f955a1, V209, V211, 0x0, V201, V213, V201, V209, V207, V215]
Stack pops: 7
Stack additions: [V221]
Exit stack: [V11, 0x65, V123, V165, V181, S11, V207, 0x2f955a1, V209, V211, V221]

================================

Block 0x2c1
[0x2c1:0x2c9]
---
Predecessors: [0x2b6]
Successors: []
---
0x2c1 RETURNDATASIZE
0x2c2 PUSH1 0x0
0x2c4 DUP1
0x2c5 RETURNDATACOPY
0x2c6 RETURNDATASIZE
0x2c7 PUSH1 0x0
0x2c9 REVERT
---
0x2c1: V224 = RETURNDATASIZE
0x2c2: V225 = 0x0
0x2c5: RETURNDATACOPY 0x0 0x0 V224
0x2c6: V226 = RETURNDATASIZE
0x2c7: V227 = 0x0
0x2c9: REVERT 0x0 V226
---
Entry stack: [V11, 0x65, V123, V165, V181, S5, V207, 0x2f955a1, V209, V211, V221]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x65, V123, V165, V181, S5, V207, 0x2f955a1, V209, V211, V221]

================================

Block 0x2ca
[0x2ca:0x2e5]
---
Predecessors: [0x2b6]
Successors: [0x2e6, 0x2ea]
---
0x2ca JUMPDEST
0x2cb POP
0x2cc POP
0x2cd PUSH1 0x0
0x2cf SLOAD
0x2d0 PUSH1 0x1
0x2d2 PUSH1 0xa0
0x2d4 PUSH1 0x2
0x2d6 EXP
0x2d7 SUB
0x2d8 AND
0x2d9 BALANCE
0x2da DUP6
0x2db LT
0x2dc ISZERO
0x2dd SWAP3
0x2de POP
0x2df PUSH2 0x2ea
0x2e2 SWAP2
0x2e3 POP
0x2e4 POP
0x2e5 JUMPI
---
0x2ca: JUMPDEST 
0x2cd: V228 = 0x0
0x2cf: V229 = S[0x0]
0x2d0: V230 = 0x1
0x2d2: V231 = 0xa0
0x2d4: V232 = 0x2
0x2d6: V233 = EXP 0x2 0xa0
0x2d7: V234 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d8: V235 = AND 0xffffffffffffffffffffffffffffffffffffffff V229
0x2d9: V236 = BALANCE V235
0x2db: V237 = LT V181 V236
0x2dc: V238 = ISZERO V237
0x2df: V239 = 0x2ea
0x2e5: JUMPI 0x2ea V238
---
Entry stack: [V11, 0x65, V123, V165, V181, S5, V207, 0x2f955a1, V209, V211, V221]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V11, 0x65, V123, V165, V181, S5]

================================

Block 0x2e6
[0x2e6:0x2e9]
---
Predecessors: [0x2ca]
Successors: [0x2f2]
---
0x2e6 PUSH2 0x2f2
0x2e9 JUMP
---
0x2e6: V240 = 0x2f2
0x2e9: JUMP 0x2f2
---
Entry stack: [V11, 0x65, V123, V165, V181, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x65, V123, V165, V181, S0]

================================

Block 0x2ea
[0x2ea:0x2f1]
---
Predecessors: [0x2ca]
Successors: [0x232]
---
0x2ea JUMPDEST
0x2eb PUSH1 0x1
0x2ed ADD
0x2ee PUSH2 0x232
0x2f1 JUMP
---
0x2ea: JUMPDEST 
0x2eb: V241 = 0x1
0x2ed: V242 = ADD 0x1 S0
0x2ee: V243 = 0x232
0x2f1: JUMP 0x232
---
Entry stack: [V11, 0x65, V123, V165, V181, S0]
Stack pops: 1
Stack additions: [V242]
Exit stack: [V11, 0x65, V123, V165, V181, V242]

================================

Block 0x2f2
[0x2f2:0x305]
---
Predecessors: [0x232, 0x2e6]
Successors: [0x306, 0x30a]
---
0x2f2 JUMPDEST
0x2f3 PUSH1 0x0
0x2f5 SLOAD
0x2f6 PUSH1 0x1
0x2f8 PUSH1 0xa0
0x2fa PUSH1 0x2
0x2fc EXP
0x2fd SUB
0x2fe AND
0x2ff BALANCE
0x300 DUP3
0x301 LT
0x302 PUSH2 0x30a
0x305 JUMPI
---
0x2f2: JUMPDEST 
0x2f3: V244 = 0x0
0x2f5: V245 = S[0x0]
0x2f6: V246 = 0x1
0x2f8: V247 = 0xa0
0x2fa: V248 = 0x2
0x2fc: V249 = EXP 0x2 0xa0
0x2fd: V250 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2fe: V251 = AND 0xffffffffffffffffffffffffffffffffffffffff V245
0x2ff: V252 = BALANCE V251
0x301: V253 = LT V181 V252
0x302: V254 = 0x30a
0x305: JUMPI 0x30a V253
---
Entry stack: [V11, 0x65, V123, V165, V181, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x65, V123, V165, V181, S0]

================================

Block 0x306
[0x306:0x309]
---
Predecessors: [0x2f2]
Successors: []
---
0x306 PUSH1 0x0
0x308 DUP1
0x309 REVERT
---
0x306: V255 = 0x0
0x309: REVERT 0x0 0x0
---
Entry stack: [V11, 0x65, V123, V165, V181, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x65, V123, V165, V181, S0]

================================

Block 0x30a
[0x30a:0x30f]
---
Predecessors: [0x2f2]
Successors: [0x65]
---
0x30a JUMPDEST
0x30b POP
0x30c POP
0x30d POP
0x30e POP
0x30f JUMP
---
0x30a: JUMPDEST 
0x30f: JUMP 0x65
---
Entry stack: [V11, 0x65, V123, V165, V181, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x310
[0x310:0x33b]
---
Predecessors: []
Successors: []
---
0x310 STOP
0x311 LOG1
0x312 PUSH6 0x627a7a723058
0x319 SHA3
0x31a DUP9
0x31b MISSING 0xe0
0x31c SWAP3
0x31d MISSING 0xdd
0x31e MISSING 0x2a
0x31f MISSING 0xd2
0x320 MISSING 0xd3
0x321 MISSING 0xac
0x322 MISSING 0x25
0x323 MISSING 0xb5
0x324 MISSING 0xae
0x325 CODECOPY
0x326 MISSING 0xc
0x327 PUSH20 0xa5b0125f55185e4bcc39ee3e526e5e6756fa0029
---
0x310: STOP 
0x311: LOG S0 S1 S2
0x312: V256 = 0x627a7a723058
0x319: V257 = SHA3 0x627a7a723058 S3
0x31b: MISSING 0xe0
0x31d: MISSING 0xdd
0x31e: MISSING 0x2a
0x31f: MISSING 0xd2
0x320: MISSING 0xd3
0x321: MISSING 0xac
0x322: MISSING 0x25
0x323: MISSING 0xb5
0x324: MISSING 0xae
0x325: CODECOPY S0 S1 S2
0x326: MISSING 0xc
0x327: V258 = 0xa5b0125f55185e4bcc39ee3e526e5e6756fa0029
---
Entry stack: []
Stack pops: 0
Stack additions: [S11, V257, S4, S5, S6, S7, S8, S9, S10, S11, S3, S1, S2, S0, 0xa5b0125f55185e4bcc39ee3e526e5e6756fa0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x6d4ce63c
Entry block: 0x50
Exit block: 0x65
Body: 0x50, 0x58, 0x5c, 0x65, 0x6f, 0xa1, 0xaa

Function 1:
Public function signature: 0xfeba894c
Entry block: 0x67
Exit block: 0x2c1
Body: 0x65, 0x67, 0xad, 0xc9, 0xd5, 0xdc, 0xe0, 0x148, 0x14c, 0x157, 0x160, 0x172, 0x176, 0x1d7, 0x1db, 0x1e6, 0x1ef, 0x201, 0x205, 0x21a, 0x21e, 0x232, 0x23d, 0x249, 0x24a, 0x2b2, 0x2b6, 0x2c1, 0x2ca, 0x2e6, 0x2ea, 0x2f2, 0x306, 0x30a

Function 2:
Public fallback function
Entry block: 0x4b
Exit block: 0x4b
Body: 0x4b

