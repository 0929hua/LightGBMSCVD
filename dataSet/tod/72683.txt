Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x67]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x3191b6b6
0x3c EQ
0x3d PUSH2 0x67
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x3191b6b6
0x3c: V13 = EQ 0x3191b6b6 V11
0x3d: V14 = 0x67
0x40: JUMPI 0x67 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xb1]
---
0x41 DUP1
0x42 PUSH4 0x800bfd3a
0x47 EQ
0x48 PUSH2 0xb1
0x4b JUMPI
---
0x42: V15 = 0x800bfd3a
0x47: V16 = EQ 0x800bfd3a V11
0x48: V17 = 0xb1
0x4b: JUMPI 0xb1 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xfb]
---
0x4c DUP1
0x4d PUSH4 0x833ec720
0x52 EQ
0x53 PUSH2 0xfb
0x56 JUMPI
---
0x4d: V18 = 0x833ec720
0x52: V19 = EQ 0x833ec720 V11
0x53: V20 = 0xfb
0x56: JUMPI 0xfb V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x145]
---
0x57 DUP1
0x58 PUSH4 0x9cb8a26a
0x5d EQ
0x5e PUSH2 0x145
0x61 JUMPI
---
0x58: V21 = 0x9cb8a26a
0x5d: V22 = EQ 0x9cb8a26a V11
0x5e: V23 = 0x145
0x61: JUMPI 0x145 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x66]
---
Predecessors: [0x0, 0x57]
Successors: []
---
0x62 JUMPDEST
0x63 PUSH1 0x0
0x65 DUP1
0x66 REVERT
---
0x62: JUMPDEST 
0x63: V24 = 0x0
0x66: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x67
[0x67:0x9a]
---
Predecessors: [0xd]
Successors: [0x15c]
---
0x67 JUMPDEST
0x68 PUSH2 0x9b
0x6b PUSH1 0x4
0x6d DUP1
0x6e CALLDATASIZE
0x6f SUB
0x70 DUP2
0x71 ADD
0x72 SWAP1
0x73 DUP1
0x74 DUP1
0x75 CALLDATALOAD
0x76 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8b AND
0x8c SWAP1
0x8d PUSH1 0x20
0x8f ADD
0x90 SWAP1
0x91 SWAP3
0x92 SWAP2
0x93 SWAP1
0x94 POP
0x95 POP
0x96 POP
0x97 PUSH2 0x15c
0x9a JUMP
---
0x67: JUMPDEST 
0x68: V25 = 0x9b
0x6b: V26 = 0x4
0x6e: V27 = CALLDATASIZE
0x6f: V28 = SUB V27 0x4
0x71: V29 = ADD 0x4 V28
0x75: V30 = CALLDATALOAD 0x4
0x76: V31 = 0xffffffffffffffffffffffffffffffffffffffff
0x8b: V32 = AND 0xffffffffffffffffffffffffffffffffffffffff V30
0x8d: V33 = 0x20
0x8f: V34 = ADD 0x20 0x4
0x97: V35 = 0x15c
0x9a: JUMP 0x15c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x9b, V32]
Exit stack: [V11, 0x9b, V32]

================================

Block 0x9b
[0x9b:0xb0]
---
Predecessors: [0x1d5]
Successors: []
---
0x9b JUMPDEST
0x9c PUSH1 0x40
0x9e MLOAD
0x9f DUP1
0xa0 DUP3
0xa1 DUP2
0xa2 MSTORE
0xa3 PUSH1 0x20
0xa5 ADD
0xa6 SWAP2
0xa7 POP
0xa8 POP
0xa9 PUSH1 0x40
0xab MLOAD
0xac DUP1
0xad SWAP2
0xae SUB
0xaf SWAP1
0xb0 RETURN
---
0x9b: JUMPDEST 
0x9c: V36 = 0x40
0x9e: V37 = M[0x40]
0xa2: M[V37] = S0
0xa3: V38 = 0x20
0xa5: V39 = ADD 0x20 V37
0xa9: V40 = 0x40
0xab: V41 = M[0x40]
0xae: V42 = SUB V39 V41
0xb0: RETURN V41 V42
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xb1
[0xb1:0xe4]
---
Predecessors: [0x41]
Successors: [0x1da]
---
0xb1 JUMPDEST
0xb2 PUSH2 0xe5
0xb5 PUSH1 0x4
0xb7 DUP1
0xb8 CALLDATASIZE
0xb9 SUB
0xba DUP2
0xbb ADD
0xbc SWAP1
0xbd DUP1
0xbe DUP1
0xbf CALLDATALOAD
0xc0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd5 AND
0xd6 SWAP1
0xd7 PUSH1 0x20
0xd9 ADD
0xda SWAP1
0xdb SWAP3
0xdc SWAP2
0xdd SWAP1
0xde POP
0xdf POP
0xe0 POP
0xe1 PUSH2 0x1da
0xe4 JUMP
---
0xb1: JUMPDEST 
0xb2: V43 = 0xe5
0xb5: V44 = 0x4
0xb8: V45 = CALLDATASIZE
0xb9: V46 = SUB V45 0x4
0xbb: V47 = ADD 0x4 V46
0xbf: V48 = CALLDATALOAD 0x4
0xc0: V49 = 0xffffffffffffffffffffffffffffffffffffffff
0xd5: V50 = AND 0xffffffffffffffffffffffffffffffffffffffff V48
0xd7: V51 = 0x20
0xd9: V52 = ADD 0x20 0x4
0xe1: V53 = 0x1da
0xe4: JUMP 0x1da
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe5, V50]
Exit stack: [V11, 0xe5, V50]

================================

Block 0xe5
[0xe5:0xfa]
---
Predecessors: [0x26b]
Successors: []
---
0xe5 JUMPDEST
0xe6 PUSH1 0x40
0xe8 MLOAD
0xe9 DUP1
0xea DUP3
0xeb DUP2
0xec MSTORE
0xed PUSH1 0x20
0xef ADD
0xf0 SWAP2
0xf1 POP
0xf2 POP
0xf3 PUSH1 0x40
0xf5 MLOAD
0xf6 DUP1
0xf7 SWAP2
0xf8 SUB
0xf9 SWAP1
0xfa RETURN
---
0xe5: JUMPDEST 
0xe6: V54 = 0x40
0xe8: V55 = M[0x40]
0xec: M[V55] = S0
0xed: V56 = 0x20
0xef: V57 = ADD 0x20 V55
0xf3: V58 = 0x40
0xf5: V59 = M[0x40]
0xf8: V60 = SUB V57 V59
0xfa: RETURN V59 V60
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xfb
[0xfb:0x12e]
---
Predecessors: [0x4c]
Successors: [0x270]
---
0xfb JUMPDEST
0xfc PUSH2 0x12f
0xff PUSH1 0x4
0x101 DUP1
0x102 CALLDATASIZE
0x103 SUB
0x104 DUP2
0x105 ADD
0x106 SWAP1
0x107 DUP1
0x108 DUP1
0x109 CALLDATALOAD
0x10a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11f AND
0x120 SWAP1
0x121 PUSH1 0x20
0x123 ADD
0x124 SWAP1
0x125 SWAP3
0x126 SWAP2
0x127 SWAP1
0x128 POP
0x129 POP
0x12a POP
0x12b PUSH2 0x270
0x12e JUMP
---
0xfb: JUMPDEST 
0xfc: V61 = 0x12f
0xff: V62 = 0x4
0x102: V63 = CALLDATASIZE
0x103: V64 = SUB V63 0x4
0x105: V65 = ADD 0x4 V64
0x109: V66 = CALLDATALOAD 0x4
0x10a: V67 = 0xffffffffffffffffffffffffffffffffffffffff
0x11f: V68 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0x121: V69 = 0x20
0x123: V70 = ADD 0x20 0x4
0x12b: V71 = 0x270
0x12e: JUMP 0x270
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x12f, V68]
Exit stack: [V11, 0x12f, V68]

================================

Block 0x12f
[0x12f:0x144]
---
Predecessors: [0x312]
Successors: []
---
0x12f JUMPDEST
0x130 PUSH1 0x40
0x132 MLOAD
0x133 DUP1
0x134 DUP3
0x135 DUP2
0x136 MSTORE
0x137 PUSH1 0x20
0x139 ADD
0x13a SWAP2
0x13b POP
0x13c POP
0x13d PUSH1 0x40
0x13f MLOAD
0x140 DUP1
0x141 SWAP2
0x142 SUB
0x143 SWAP1
0x144 RETURN
---
0x12f: JUMPDEST 
0x130: V72 = 0x40
0x132: V73 = M[0x40]
0x136: M[V73] = S0
0x137: V74 = 0x20
0x139: V75 = ADD 0x20 V73
0x13d: V76 = 0x40
0x13f: V77 = M[0x40]
0x142: V78 = SUB V75 V77
0x144: RETURN V77 V78
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x145
[0x145:0x14c]
---
Predecessors: [0x57]
Successors: [0x14d, 0x151]
---
0x145 JUMPDEST
0x146 CALLVALUE
0x147 DUP1
0x148 ISZERO
0x149 PUSH2 0x151
0x14c JUMPI
---
0x145: JUMPDEST 
0x146: V79 = CALLVALUE
0x148: V80 = ISZERO V79
0x149: V81 = 0x151
0x14c: JUMPI 0x151 V80
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V79]
Exit stack: [V11, V79]

================================

Block 0x14d
[0x14d:0x150]
---
Predecessors: [0x145]
Successors: []
---
0x14d PUSH1 0x0
0x14f DUP1
0x150 REVERT
---
0x14d: V82 = 0x0
0x150: REVERT 0x0 0x0
---
Entry stack: [V11, V79]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V79]

================================

Block 0x151
[0x151:0x159]
---
Predecessors: [0x145]
Successors: [0x317]
---
0x151 JUMPDEST
0x152 POP
0x153 PUSH2 0x15a
0x156 PUSH2 0x317
0x159 JUMP
---
0x151: JUMPDEST 
0x153: V83 = 0x15a
0x156: V84 = 0x317
0x159: JUMP 0x317
---
Entry stack: [V11, V79]
Stack pops: 1
Stack additions: [0x15a]
Exit stack: [V11, 0x15a]

================================

Block 0x15a
[0x15a:0x15b]
---
Predecessors: [0x3a6]
Successors: []
---
0x15a JUMPDEST
0x15b STOP
---
0x15a: JUMPDEST 
0x15b: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x15c
[0x15c:0x1b3]
---
Predecessors: [0x67]
Successors: [0x1b4, 0x1d5]
---
0x15c JUMPDEST
0x15d PUSH1 0x0
0x15f DUP1
0x160 PUSH1 0x0
0x162 SWAP1
0x163 SLOAD
0x164 SWAP1
0x165 PUSH2 0x100
0x168 EXP
0x169 SWAP1
0x16a DIV
0x16b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x180 AND
0x181 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x196 AND
0x197 CALLER
0x198 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ad AND
0x1ae EQ
0x1af ISZERO
0x1b0 PUSH2 0x1d5
0x1b3 JUMPI
---
0x15c: JUMPDEST 
0x15d: V85 = 0x0
0x160: V86 = 0x0
0x163: V87 = S[0x0]
0x165: V88 = 0x100
0x168: V89 = EXP 0x100 0x0
0x16a: V90 = DIV V87 0x1
0x16b: V91 = 0xffffffffffffffffffffffffffffffffffffffff
0x180: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff V90
0x181: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x196: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x197: V95 = CALLER
0x198: V96 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ad: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0x1ae: V98 = EQ V97 V94
0x1af: V99 = ISZERO V98
0x1b0: V100 = 0x1d5
0x1b3: JUMPI 0x1d5 V99
---
Entry stack: [V11, 0x9b, V32]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x9b, V32, 0x0]

================================

Block 0x1b4
[0x1b4:0x1d4]
---
Predecessors: [0x15c]
Successors: [0x1d5]
---
0x1b4 DUP2
0x1b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ca AND
0x1cb CALLVALUE
0x1cc PUSH1 0x1
0x1ce SWAP1
0x1cf POP
0x1d0 POP
0x1d1 POP
0x1d2 CALLVALUE
0x1d3 SWAP1
0x1d4 POP
---
0x1b5: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ca: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V32
0x1cb: V103 = CALLVALUE
0x1cc: V104 = 0x1
0x1d2: V105 = CALLVALUE
---
Entry stack: [V11, 0x9b, V32, 0x0]
Stack pops: 2
Stack additions: [S1, V105]
Exit stack: [V11, 0x9b, V32, V105]

================================

Block 0x1d5
[0x1d5:0x1d9]
---
Predecessors: [0x15c, 0x1b4]
Successors: [0x9b]
---
0x1d5 JUMPDEST
0x1d6 SWAP2
0x1d7 SWAP1
0x1d8 POP
0x1d9 JUMP
---
0x1d5: JUMPDEST 
0x1d9: JUMP 0x9b
---
Entry stack: [V11, 0x9b, V32, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V11, S0]

================================

Block 0x1da
[0x1da:0x231]
---
Predecessors: [0xb1]
Successors: [0x232, 0x26b]
---
0x1da JUMPDEST
0x1db PUSH1 0x0
0x1dd DUP1
0x1de PUSH1 0x0
0x1e0 SWAP1
0x1e1 SLOAD
0x1e2 SWAP1
0x1e3 PUSH2 0x100
0x1e6 EXP
0x1e7 SWAP1
0x1e8 DIV
0x1e9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1fe AND
0x1ff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x214 AND
0x215 CALLER
0x216 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22b AND
0x22c EQ
0x22d ISZERO
0x22e PUSH2 0x26b
0x231 JUMPI
---
0x1da: JUMPDEST 
0x1db: V106 = 0x0
0x1de: V107 = 0x0
0x1e1: V108 = S[0x0]
0x1e3: V109 = 0x100
0x1e6: V110 = EXP 0x100 0x0
0x1e8: V111 = DIV V108 0x1
0x1e9: V112 = 0xffffffffffffffffffffffffffffffffffffffff
0x1fe: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x1ff: V114 = 0xffffffffffffffffffffffffffffffffffffffff
0x214: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x215: V116 = CALLER
0x216: V117 = 0xffffffffffffffffffffffffffffffffffffffff
0x22b: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0x22c: V119 = EQ V118 V115
0x22d: V120 = ISZERO V119
0x22e: V121 = 0x26b
0x231: JUMPI 0x26b V120
---
Entry stack: [V11, 0xe5, V50]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0xe5, V50, 0x0]

================================

Block 0x232
[0x232:0x26a]
---
Predecessors: [0x1da]
Successors: [0x26b]
---
0x232 DUP2
0x233 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x248 AND
0x249 PUSH2 0x8fc
0x24c CALLVALUE
0x24d SWAP1
0x24e DUP2
0x24f ISZERO
0x250 MUL
0x251 SWAP1
0x252 PUSH1 0x40
0x254 MLOAD
0x255 PUSH1 0x0
0x257 PUSH1 0x40
0x259 MLOAD
0x25a DUP1
0x25b DUP4
0x25c SUB
0x25d DUP2
0x25e DUP6
0x25f DUP9
0x260 DUP9
0x261 CALL
0x262 SWAP4
0x263 POP
0x264 POP
0x265 POP
0x266 POP
0x267 POP
0x268 CALLVALUE
0x269 SWAP1
0x26a POP
---
0x233: V122 = 0xffffffffffffffffffffffffffffffffffffffff
0x248: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V50
0x249: V124 = 0x8fc
0x24c: V125 = CALLVALUE
0x24f: V126 = ISZERO V125
0x250: V127 = MUL V126 0x8fc
0x252: V128 = 0x40
0x254: V129 = M[0x40]
0x255: V130 = 0x0
0x257: V131 = 0x40
0x259: V132 = M[0x40]
0x25c: V133 = SUB V129 V132
0x261: V134 = CALL V127 V123 V125 V132 V133 V132 0x0
0x268: V135 = CALLVALUE
---
Entry stack: [V11, 0xe5, V50, 0x0]
Stack pops: 2
Stack additions: [S1, V135]
Exit stack: [V11, 0xe5, V50, V135]

================================

Block 0x26b
[0x26b:0x26f]
---
Predecessors: [0x1da, 0x232]
Successors: [0xe5]
---
0x26b JUMPDEST
0x26c SWAP2
0x26d SWAP1
0x26e POP
0x26f JUMP
---
0x26b: JUMPDEST 
0x26f: JUMP 0xe5
---
Entry stack: [V11, 0xe5, V50, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V11, S0]

================================

Block 0x270
[0x270:0x2c7]
---
Predecessors: [0xfb]
Successors: [0x2c8, 0x312]
---
0x270 JUMPDEST
0x271 PUSH1 0x0
0x273 DUP1
0x274 PUSH1 0x0
0x276 SWAP1
0x277 SLOAD
0x278 SWAP1
0x279 PUSH2 0x100
0x27c EXP
0x27d SWAP1
0x27e DIV
0x27f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x294 AND
0x295 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2aa AND
0x2ab CALLER
0x2ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c1 AND
0x2c2 EQ
0x2c3 ISZERO
0x2c4 PUSH2 0x312
0x2c7 JUMPI
---
0x270: JUMPDEST 
0x271: V136 = 0x0
0x274: V137 = 0x0
0x277: V138 = S[0x0]
0x279: V139 = 0x100
0x27c: V140 = EXP 0x100 0x0
0x27e: V141 = DIV V138 0x1
0x27f: V142 = 0xffffffffffffffffffffffffffffffffffffffff
0x294: V143 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0x295: V144 = 0xffffffffffffffffffffffffffffffffffffffff
0x2aa: V145 = AND 0xffffffffffffffffffffffffffffffffffffffff V143
0x2ab: V146 = CALLER
0x2ac: V147 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c1: V148 = AND 0xffffffffffffffffffffffffffffffffffffffff V146
0x2c2: V149 = EQ V148 V145
0x2c3: V150 = ISZERO V149
0x2c4: V151 = 0x312
0x2c7: JUMPI 0x312 V150
---
Entry stack: [V11, 0x12f, V68]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x12f, V68, 0x0]

================================

Block 0x2c8
[0x2c8:0x303]
---
Predecessors: [0x270]
Successors: [0x304, 0x30d]
---
0x2c8 DUP2
0x2c9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2de AND
0x2df PUSH2 0x8fc
0x2e2 CALLVALUE
0x2e3 SWAP1
0x2e4 DUP2
0x2e5 ISZERO
0x2e6 MUL
0x2e7 SWAP1
0x2e8 PUSH1 0x40
0x2ea MLOAD
0x2eb PUSH1 0x0
0x2ed PUSH1 0x40
0x2ef MLOAD
0x2f0 DUP1
0x2f1 DUP4
0x2f2 SUB
0x2f3 DUP2
0x2f4 DUP6
0x2f5 DUP9
0x2f6 DUP9
0x2f7 CALL
0x2f8 SWAP4
0x2f9 POP
0x2fa POP
0x2fb POP
0x2fc POP
0x2fd ISZERO
0x2fe DUP1
0x2ff ISZERO
0x300 PUSH2 0x30d
0x303 JUMPI
---
0x2c9: V152 = 0xffffffffffffffffffffffffffffffffffffffff
0x2de: V153 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0x2df: V154 = 0x8fc
0x2e2: V155 = CALLVALUE
0x2e5: V156 = ISZERO V155
0x2e6: V157 = MUL V156 0x8fc
0x2e8: V158 = 0x40
0x2ea: V159 = M[0x40]
0x2eb: V160 = 0x0
0x2ed: V161 = 0x40
0x2ef: V162 = M[0x40]
0x2f2: V163 = SUB V159 V162
0x2f7: V164 = CALL V157 V153 V155 V162 V163 V162 0x0
0x2fd: V165 = ISZERO V164
0x2ff: V166 = ISZERO V165
0x300: V167 = 0x30d
0x303: JUMPI 0x30d V166
---
Entry stack: [V11, 0x12f, V68, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V165]
Exit stack: [V11, 0x12f, V68, 0x0, V165]

================================

Block 0x304
[0x304:0x30c]
---
Predecessors: [0x2c8]
Successors: []
---
0x304 RETURNDATASIZE
0x305 PUSH1 0x0
0x307 DUP1
0x308 RETURNDATACOPY
0x309 RETURNDATASIZE
0x30a PUSH1 0x0
0x30c REVERT
---
0x304: V168 = RETURNDATASIZE
0x305: V169 = 0x0
0x308: RETURNDATACOPY 0x0 0x0 V168
0x309: V170 = RETURNDATASIZE
0x30a: V171 = 0x0
0x30c: REVERT 0x0 V170
---
Entry stack: [V11, 0x12f, V68, 0x0, V165]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x12f, V68, 0x0, V165]

================================

Block 0x30d
[0x30d:0x311]
---
Predecessors: [0x2c8]
Successors: [0x312]
---
0x30d JUMPDEST
0x30e POP
0x30f CALLVALUE
0x310 SWAP1
0x311 POP
---
0x30d: JUMPDEST 
0x30f: V172 = CALLVALUE
---
Entry stack: [V11, 0x12f, V68, 0x0, V165]
Stack pops: 2
Stack additions: [V172]
Exit stack: [V11, 0x12f, V68, V172]

================================

Block 0x312
[0x312:0x316]
---
Predecessors: [0x270, 0x30d]
Successors: [0x12f]
---
0x312 JUMPDEST
0x313 SWAP2
0x314 SWAP1
0x315 POP
0x316 JUMP
---
0x312: JUMPDEST 
0x316: JUMP 0x12f
---
Entry stack: [V11, 0x12f, V68, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V11, S0]

================================

Block 0x317
[0x317:0x36c]
---
Predecessors: [0x151]
Successors: [0x36d, 0x3a6]
---
0x317 JUMPDEST
0x318 PUSH1 0x0
0x31a DUP1
0x31b SWAP1
0x31c SLOAD
0x31d SWAP1
0x31e PUSH2 0x100
0x321 EXP
0x322 SWAP1
0x323 DIV
0x324 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x339 AND
0x33a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x34f AND
0x350 CALLER
0x351 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x366 AND
0x367 EQ
0x368 ISZERO
0x369 PUSH2 0x3a6
0x36c JUMPI
---
0x317: JUMPDEST 
0x318: V173 = 0x0
0x31c: V174 = S[0x0]
0x31e: V175 = 0x100
0x321: V176 = EXP 0x100 0x0
0x323: V177 = DIV V174 0x1
0x324: V178 = 0xffffffffffffffffffffffffffffffffffffffff
0x339: V179 = AND 0xffffffffffffffffffffffffffffffffffffffff V177
0x33a: V180 = 0xffffffffffffffffffffffffffffffffffffffff
0x34f: V181 = AND 0xffffffffffffffffffffffffffffffffffffffff V179
0x350: V182 = CALLER
0x351: V183 = 0xffffffffffffffffffffffffffffffffffffffff
0x366: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V182
0x367: V185 = EQ V184 V181
0x368: V186 = ISZERO V185
0x369: V187 = 0x3a6
0x36c: JUMPI 0x3a6 V186
---
Entry stack: [V11, 0x15a]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x15a]

================================

Block 0x36d
[0x36d:0x3a5]
---
Predecessors: [0x317]
Successors: []
---
0x36d PUSH1 0x0
0x36f DUP1
0x370 SWAP1
0x371 SLOAD
0x372 SWAP1
0x373 PUSH2 0x100
0x376 EXP
0x377 SWAP1
0x378 DIV
0x379 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x38e AND
0x38f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a4 AND
0x3a5 SELFDESTRUCT
---
0x36d: V188 = 0x0
0x371: V189 = S[0x0]
0x373: V190 = 0x100
0x376: V191 = EXP 0x100 0x0
0x378: V192 = DIV V189 0x1
0x379: V193 = 0xffffffffffffffffffffffffffffffffffffffff
0x38e: V194 = AND 0xffffffffffffffffffffffffffffffffffffffff V192
0x38f: V195 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a4: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff V194
0x3a5: SELFDESTRUCT V196
---
Entry stack: [V11, 0x15a]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x15a]

================================

Block 0x3a6
[0x3a6:0x3a7]
---
Predecessors: [0x317]
Successors: [0x15a]
---
0x3a6 JUMPDEST
0x3a7 JUMP
---
0x3a6: JUMPDEST 
0x3a7: JUMP 0x15a
---
Entry stack: [V11, 0x15a]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x3a8
[0x3a8:0x3d3]
---
Predecessors: []
Successors: []
---
0x3a8 STOP
0x3a9 LOG1
0x3aa PUSH6 0x627a7a723058
0x3b1 SHA3
0x3b2 MISSING 0xb6
0x3b3 MISSING 0x5c
0x3b4 PC
0x3b5 PUSH28 0x5214c2802840479d6d01dca4be9f754cfac258dfec7fd1a6779daba1
0x3d2 STOP
0x3d3 MISSING 0x29
---
0x3a8: STOP 
0x3a9: LOG S0 S1 S2
0x3aa: V197 = 0x627a7a723058
0x3b1: V198 = SHA3 0x627a7a723058 S3
0x3b2: MISSING 0xb6
0x3b3: MISSING 0x5c
0x3b4: V199 = PC
0x3b5: V200 = 0x5214c2802840479d6d01dca4be9f754cfac258dfec7fd1a6779daba1
0x3d2: STOP 
0x3d3: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V198, 0x5214c2802840479d6d01dca4be9f754cfac258dfec7fd1a6779daba1, V199]
Exit stack: []

================================

Function 0:
Public function signature: 0x3191b6b6
Entry block: 0x67
Exit block: 0x9b
Body: 0x67, 0x9b, 0x15c, 0x1b4, 0x1d5

Function 1:
Public function signature: 0x800bfd3a
Entry block: 0xb1
Exit block: 0xe5
Body: 0xb1, 0xe5, 0x1da, 0x232, 0x26b

Function 2:
Public function signature: 0x833ec720
Entry block: 0xfb
Exit block: 0x12f
Body: 0xfb, 0x12f, 0x270, 0x2c8, 0x304, 0x30d, 0x312

Function 3:
Public function signature: 0x9cb8a26a
Entry block: 0x145
Exit block: 0x15a
Body: 0x145, 0x14d, 0x151, 0x15a, 0x317, 0x36d, 0x3a6

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x62
Body: 0x62

