Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x10f]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x10f
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x10f
0xa: JUMPI 0x10f V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x114]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0xaf4187d
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x114
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0xaf4187d
0x39: V12 = EQ V10 0xaf4187d
0x3a: V13 = 0x114
0x3d: JUMPI 0x114 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x14b]
---
0x3e DUP1
0x3f PUSH4 0x18160ddd
0x44 EQ
0x45 PUSH2 0x14b
0x48 JUMPI
---
0x3f: V14 = 0x18160ddd
0x44: V15 = EQ 0x18160ddd V10
0x45: V16 = 0x14b
0x48: JUMPI 0x14b V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x170]
---
0x49 DUP1
0x4a PUSH4 0x1d0d35f5
0x4f EQ
0x50 PUSH2 0x170
0x53 JUMPI
---
0x4a: V17 = 0x1d0d35f5
0x4f: V18 = EQ 0x1d0d35f5 V10
0x50: V19 = 0x170
0x53: JUMPI 0x170 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x1a3]
---
0x54 DUP1
0x55 PUSH4 0x253da8bd
0x5a EQ
0x5b PUSH2 0x1a3
0x5e JUMPI
---
0x55: V20 = 0x253da8bd
0x5a: V21 = EQ 0x253da8bd V10
0x5b: V22 = 0x1a3
0x5e: JUMPI 0x1a3 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x1c8]
---
0x5f DUP1
0x60 PUSH4 0x35e09095
0x65 EQ
0x66 PUSH2 0x1c8
0x69 JUMPI
---
0x60: V23 = 0x35e09095
0x65: V24 = EQ 0x35e09095 V10
0x66: V25 = 0x1c8
0x69: JUMPI 0x1c8 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x1f2]
---
0x6a DUP1
0x6b PUSH4 0x3cb5d100
0x70 EQ
0x71 PUSH2 0x1f2
0x74 JUMPI
---
0x6b: V26 = 0x3cb5d100
0x70: V27 = EQ 0x3cb5d100 V10
0x71: V28 = 0x1f2
0x74: JUMPI 0x1f2 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x224]
---
0x75 DUP1
0x76 PUSH4 0x41c0e1b5
0x7b EQ
0x7c PUSH2 0x224
0x7f JUMPI
---
0x76: V29 = 0x41c0e1b5
0x7b: V30 = EQ 0x41c0e1b5 V10
0x7c: V31 = 0x224
0x7f: JUMPI 0x224 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x239]
---
0x80 DUP1
0x81 PUSH4 0x486581ea
0x86 EQ
0x87 PUSH2 0x239
0x8a JUMPI
---
0x81: V32 = 0x486581ea
0x86: V33 = EQ 0x486581ea V10
0x87: V34 = 0x239
0x8a: JUMPI 0x239 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x95]
---
Predecessors: [0x80]
Successors: [0x96, 0x25a]
---
0x8b DUP1
0x8c PUSH4 0x66e7ea0f
0x91 EQ
0x92 PUSH2 0x25a
0x95 JUMPI
---
0x8c: V35 = 0x66e7ea0f
0x91: V36 = EQ 0x66e7ea0f V10
0x92: V37 = 0x25a
0x95: JUMPI 0x25a V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x96
[0x96:0xa0]
---
Predecessors: [0x8b]
Successors: [0xa1, 0x290]
---
0x96 DUP1
0x97 PUSH4 0x91ef14b4
0x9c EQ
0x9d PUSH2 0x290
0xa0 JUMPI
---
0x97: V38 = 0x91ef14b4
0x9c: V39 = EQ 0x91ef14b4 V10
0x9d: V40 = 0x290
0xa0: JUMPI 0x290 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa1
[0xa1:0xab]
---
Predecessors: [0x96]
Successors: [0xac, 0x2cc]
---
0xa1 DUP1
0xa2 PUSH4 0xa8ee49fe
0xa7 EQ
0xa8 PUSH2 0x2cc
0xab JUMPI
---
0xa2: V41 = 0xa8ee49fe
0xa7: V42 = EQ 0xa8ee49fe V10
0xa8: V43 = 0x2cc
0xab: JUMPI 0x2cc V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xac
[0xac:0xb6]
---
Predecessors: [0xa1]
Successors: [0xb7, 0x2ff]
---
0xac DUP1
0xad PUSH4 0xaba00859
0xb2 EQ
0xb3 PUSH2 0x2ff
0xb6 JUMPI
---
0xad: V44 = 0xaba00859
0xb2: V45 = EQ 0xaba00859 V10
0xb3: V46 = 0x2ff
0xb6: JUMPI 0x2ff V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xb7
[0xb7:0xc1]
---
Predecessors: [0xac]
Successors: [0xc2, 0x335]
---
0xb7 DUP1
0xb8 PUSH4 0xb1662d58
0xbd EQ
0xbe PUSH2 0x335
0xc1 JUMPI
---
0xb8: V47 = 0xb1662d58
0xbd: V48 = EQ 0xb1662d58 V10
0xbe: V49 = 0x335
0xc1: JUMPI 0x335 V48
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xc2
[0xc2:0xcc]
---
Predecessors: [0xb7]
Successors: [0xcd, 0x389]
---
0xc2 DUP1
0xc3 PUSH4 0xb5de8d4c
0xc8 EQ
0xc9 PUSH2 0x389
0xcc JUMPI
---
0xc3: V50 = 0xb5de8d4c
0xc8: V51 = EQ 0xb5de8d4c V10
0xc9: V52 = 0x389
0xcc: JUMPI 0x389 V51
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xcd
[0xcd:0xd7]
---
Predecessors: [0xc2]
Successors: [0xd8, 0x3bc]
---
0xcd DUP1
0xce PUSH4 0xc296302a
0xd3 EQ
0xd4 PUSH2 0x3bc
0xd7 JUMPI
---
0xce: V53 = 0xc296302a
0xd3: V54 = EQ 0xc296302a V10
0xd4: V55 = 0x3bc
0xd7: JUMPI 0x3bc V54
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xd8
[0xd8:0xe2]
---
Predecessors: [0xcd]
Successors: [0xe3, 0x3dd]
---
0xd8 DUP1
0xd9 PUSH4 0xc4e41b22
0xde EQ
0xdf PUSH2 0x3dd
0xe2 JUMPI
---
0xd9: V56 = 0xc4e41b22
0xde: V57 = EQ 0xc4e41b22 V10
0xdf: V58 = 0x3dd
0xe2: JUMPI 0x3dd V57
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xe3
[0xe3:0xed]
---
Predecessors: [0xd8]
Successors: [0xee, 0x402]
---
0xe3 DUP1
0xe4 PUSH4 0xebf0c717
0xe9 EQ
0xea PUSH2 0x402
0xed JUMPI
---
0xe4: V59 = 0xebf0c717
0xe9: V60 = EQ 0xebf0c717 V10
0xea: V61 = 0x402
0xed: JUMPI 0x402 V60
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xee
[0xee:0xf8]
---
Predecessors: [0xe3]
Successors: [0xf9, 0x431]
---
0xee DUP1
0xef PUSH4 0xecfc5964
0xf4 EQ
0xf5 PUSH2 0x431
0xf8 JUMPI
---
0xef: V62 = 0xecfc5964
0xf4: V63 = EQ 0xecfc5964 V10
0xf5: V64 = 0x431
0xf8: JUMPI 0x431 V63
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xf9
[0xf9:0x103]
---
Predecessors: [0xee]
Successors: [0x104, 0x45b]
---
0xf9 DUP1
0xfa PUSH4 0xf8b2cb4f
0xff EQ
0x100 PUSH2 0x45b
0x103 JUMPI
---
0xfa: V65 = 0xf8b2cb4f
0xff: V66 = EQ 0xf8b2cb4f V10
0x100: V67 = 0x45b
0x103: JUMPI 0x45b V66
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x104
[0x104:0x10e]
---
Predecessors: [0xf9]
Successors: [0x10f, 0x48c]
---
0x104 DUP1
0x105 PUSH4 0xfcfdf7c5
0x10a EQ
0x10b PUSH2 0x48c
0x10e JUMPI
---
0x105: V68 = 0xfcfdf7c5
0x10a: V69 = EQ 0xfcfdf7c5 V10
0x10b: V70 = 0x48c
0x10e: JUMPI 0x48c V69
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x10f
[0x10f:0x113]
---
Predecessors: [0x0, 0x104]
Successors: []
---
0x10f JUMPDEST
0x110 PUSH1 0x0
0x112 DUP1
0x113 REVERT
---
0x10f: JUMPDEST 
0x110: V71 = 0x0
0x113: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x114
[0x114:0x11a]
---
Predecessors: [0xb]
Successors: [0x11b, 0x11f]
---
0x114 JUMPDEST
0x115 CALLVALUE
0x116 ISZERO
0x117 PUSH2 0x11f
0x11a JUMPI
---
0x114: JUMPDEST 
0x115: V72 = CALLVALUE
0x116: V73 = ISZERO V72
0x117: V74 = 0x11f
0x11a: JUMPI 0x11f V73
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x11b
[0x11b:0x11e]
---
Predecessors: [0x114]
Successors: []
---
0x11b PUSH1 0x0
0x11d DUP1
0x11e REVERT
---
0x11b: V75 = 0x0
0x11e: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x11f
[0x11f:0x138]
---
Predecessors: [0x114]
Successors: [0x4c8]
---
0x11f JUMPDEST
0x120 PUSH2 0x139
0x123 PUSH1 0x1
0x125 PUSH1 0xa0
0x127 PUSH1 0x2
0x129 EXP
0x12a SUB
0x12b PUSH1 0x4
0x12d CALLDATALOAD
0x12e DUP2
0x12f AND
0x130 SWAP1
0x131 PUSH1 0x24
0x133 CALLDATALOAD
0x134 AND
0x135 PUSH2 0x4c8
0x138 JUMP
---
0x11f: JUMPDEST 
0x120: V76 = 0x139
0x123: V77 = 0x1
0x125: V78 = 0xa0
0x127: V79 = 0x2
0x129: V80 = EXP 0x2 0xa0
0x12a: V81 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12b: V82 = 0x4
0x12d: V83 = CALLDATALOAD 0x4
0x12f: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V83
0x131: V85 = 0x24
0x133: V86 = CALLDATALOAD 0x24
0x134: V87 = AND V86 0xffffffffffffffffffffffffffffffffffffffff
0x135: V88 = 0x4c8
0x138: JUMP 0x4c8
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x139, V84, V87]
Exit stack: [V10, 0x139, V84, V87]

================================

Block 0x139
[0x139:0x14a]
---
Predecessors: [0x4ef, 0x4f5, 0x570, 0x9c8, 0xa2e]
Successors: []
---
0x139 JUMPDEST
0x13a PUSH1 0x40
0x13c MLOAD
0x13d SWAP1
0x13e DUP2
0x13f MSTORE
0x140 PUSH1 0x20
0x142 ADD
0x143 PUSH1 0x40
0x145 MLOAD
0x146 DUP1
0x147 SWAP2
0x148 SUB
0x149 SWAP1
0x14a RETURN
---
0x139: JUMPDEST 
0x13a: V89 = 0x40
0x13c: V90 = M[0x40]
0x13f: M[V90] = S0
0x140: V91 = 0x20
0x142: V92 = ADD 0x20 V90
0x143: V93 = 0x40
0x145: V94 = M[0x40]
0x148: V95 = SUB V92 V94
0x14a: RETURN V94 V95
---
Entry stack: [V10, 0x18f, V215, S12, {0x0, 0x18f}, S10, S9, S8, 0x1, 0x4, V998, V1000, 0xabc, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x18f, V215, S12, {0x0, 0x18f}, S10, S9, S8, 0x1, 0x4, V998, V1000, 0xabc, S2, S1]

================================

Block 0x14b
[0x14b:0x151]
---
Predecessors: [0x3e]
Successors: [0x152, 0x156]
---
0x14b JUMPDEST
0x14c CALLVALUE
0x14d ISZERO
0x14e PUSH2 0x156
0x151 JUMPI
---
0x14b: JUMPDEST 
0x14c: V96 = CALLVALUE
0x14d: V97 = ISZERO V96
0x14e: V98 = 0x156
0x151: JUMPI 0x156 V97
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x152
[0x152:0x155]
---
Predecessors: [0x14b]
Successors: []
---
0x152 PUSH1 0x0
0x154 DUP1
0x155 REVERT
---
0x152: V99 = 0x0
0x155: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x156
[0x156:0x15d]
---
Predecessors: [0x14b]
Successors: [0x4f5]
---
0x156 JUMPDEST
0x157 PUSH2 0x139
0x15a PUSH2 0x4f5
0x15d JUMP
---
0x156: JUMPDEST 
0x157: V100 = 0x139
0x15a: V101 = 0x4f5
0x15d: JUMP 0x4f5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x139]
Exit stack: [V10, 0x139]

================================

Block 0x15e
[0x15e:0x16f]
---
Predecessors: []
Successors: []
---
0x15e JUMPDEST
0x15f PUSH1 0x40
0x161 MLOAD
0x162 SWAP1
0x163 DUP2
0x164 MSTORE
0x165 PUSH1 0x20
0x167 ADD
0x168 PUSH1 0x40
0x16a MLOAD
0x16b DUP1
0x16c SWAP2
0x16d SUB
0x16e SWAP1
0x16f RETURN
---
0x15e: JUMPDEST 
0x15f: V102 = 0x40
0x161: V103 = M[0x40]
0x164: M[V103] = S0
0x165: V104 = 0x20
0x167: V105 = ADD 0x20 V103
0x168: V106 = 0x40
0x16a: V107 = M[0x40]
0x16d: V108 = SUB V105 V107
0x16f: RETURN V107 V108
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x170
[0x170:0x176]
---
Predecessors: [0x49]
Successors: [0x177, 0x17b]
---
0x170 JUMPDEST
0x171 CALLVALUE
0x172 ISZERO
0x173 PUSH2 0x17b
0x176 JUMPI
---
0x170: JUMPDEST 
0x171: V109 = CALLVALUE
0x172: V110 = ISZERO V109
0x173: V111 = 0x17b
0x176: JUMPI 0x17b V110
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x177
[0x177:0x17a]
---
Predecessors: [0x170]
Successors: []
---
0x177 PUSH1 0x0
0x179 DUP1
0x17a REVERT
---
0x177: V112 = 0x0
0x17a: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x17b
[0x17b:0x18e]
---
Predecessors: [0x170]
Successors: [0x4fb]
---
0x17b JUMPDEST
0x17c PUSH2 0x18f
0x17f PUSH1 0x1
0x181 PUSH1 0xa0
0x183 PUSH1 0x2
0x185 EXP
0x186 SUB
0x187 PUSH1 0x4
0x189 CALLDATALOAD
0x18a AND
0x18b PUSH2 0x4fb
0x18e JUMP
---
0x17b: JUMPDEST 
0x17c: V113 = 0x18f
0x17f: V114 = 0x1
0x181: V115 = 0xa0
0x183: V116 = 0x2
0x185: V117 = EXP 0x2 0xa0
0x186: V118 = SUB 0x10000000000000000000000000000000000000000 0x1
0x187: V119 = 0x4
0x189: V120 = CALLDATALOAD 0x4
0x18a: V121 = AND V120 0xffffffffffffffffffffffffffffffffffffffff
0x18b: V122 = 0x4fb
0x18e: JUMP 0x4fb
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x18f, V121]
Exit stack: [V10, 0x18f, V121]

================================

Block 0x18f
[0x18f:0x1a2]
---
Predecessors: [0x567, 0x5a9, 0x759, 0x7b6, 0x7bd, 0x8cc, 0x977, 0xa0f, 0xa8e]
Successors: []
---
0x18f JUMPDEST
0x190 PUSH1 0x40
0x192 MLOAD
0x193 SWAP1
0x194 ISZERO
0x195 ISZERO
0x196 DUP2
0x197 MSTORE
0x198 PUSH1 0x20
0x19a ADD
0x19b PUSH1 0x40
0x19d MLOAD
0x19e DUP1
0x19f SWAP2
0x1a0 SUB
0x1a1 SWAP1
0x1a2 RETURN
---
0x18f: JUMPDEST 
0x190: V123 = 0x40
0x192: V124 = M[0x40]
0x194: V125 = ISZERO S0
0x195: V126 = ISZERO V125
0x197: M[V124] = V126
0x198: V127 = 0x20
0x19a: V128 = ADD 0x20 V124
0x19b: V129 = 0x40
0x19d: V130 = M[0x40]
0x1a0: V131 = SUB V128 V130
0x1a2: RETURN V130 V131
---
Entry stack: [V10, 0x18f, V215, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x18f, V215, S5, S4, S3, S2, S1]

================================

Block 0x1a3
[0x1a3:0x1a9]
---
Predecessors: [0x54]
Successors: [0x1aa, 0x1ae]
---
0x1a3 JUMPDEST
0x1a4 CALLVALUE
0x1a5 ISZERO
0x1a6 PUSH2 0x1ae
0x1a9 JUMPI
---
0x1a3: JUMPDEST 
0x1a4: V132 = CALLVALUE
0x1a5: V133 = ISZERO V132
0x1a6: V134 = 0x1ae
0x1a9: JUMPI 0x1ae V133
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1aa
[0x1aa:0x1ad]
---
Predecessors: [0x1a3]
Successors: []
---
0x1aa PUSH1 0x0
0x1ac DUP1
0x1ad REVERT
---
0x1aa: V135 = 0x0
0x1ad: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ae
[0x1ae:0x1b5]
---
Predecessors: [0x1a3]
Successors: [0x56c]
---
0x1ae JUMPDEST
0x1af PUSH2 0x139
0x1b2 PUSH2 0x56c
0x1b5 JUMP
---
0x1ae: JUMPDEST 
0x1af: V136 = 0x139
0x1b2: V137 = 0x56c
0x1b5: JUMP 0x56c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x139]
Exit stack: [V10, 0x139]

================================

Block 0x1b6
[0x1b6:0x1c7]
---
Predecessors: []
Successors: []
---
0x1b6 JUMPDEST
0x1b7 PUSH1 0x40
0x1b9 MLOAD
0x1ba SWAP1
0x1bb DUP2
0x1bc MSTORE
0x1bd PUSH1 0x20
0x1bf ADD
0x1c0 PUSH1 0x40
0x1c2 MLOAD
0x1c3 DUP1
0x1c4 SWAP2
0x1c5 SUB
0x1c6 SWAP1
0x1c7 RETURN
---
0x1b6: JUMPDEST 
0x1b7: V138 = 0x40
0x1b9: V139 = M[0x40]
0x1bc: M[V139] = S0
0x1bd: V140 = 0x20
0x1bf: V141 = ADD 0x20 V139
0x1c0: V142 = 0x40
0x1c2: V143 = M[0x40]
0x1c5: V144 = SUB V141 V143
0x1c7: RETURN V143 V144
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1c8
[0x1c8:0x1ce]
---
Predecessors: [0x5f]
Successors: [0x1cf, 0x1d3]
---
0x1c8 JUMPDEST
0x1c9 CALLVALUE
0x1ca ISZERO
0x1cb PUSH2 0x1d3
0x1ce JUMPI
---
0x1c8: JUMPDEST 
0x1c9: V145 = CALLVALUE
0x1ca: V146 = ISZERO V145
0x1cb: V147 = 0x1d3
0x1ce: JUMPI 0x1d3 V146
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1cf
[0x1cf:0x1d2]
---
Predecessors: [0x1c8]
Successors: []
---
0x1cf PUSH1 0x0
0x1d1 DUP1
0x1d2 REVERT
---
0x1cf: V148 = 0x0
0x1d2: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d3
[0x1d3:0x1dd]
---
Predecessors: [0x1c8]
Successors: [0x573]
---
0x1d3 JUMPDEST
0x1d4 PUSH2 0x18f
0x1d7 PUSH1 0x4
0x1d9 CALLDATALOAD
0x1da PUSH2 0x573
0x1dd JUMP
---
0x1d3: JUMPDEST 
0x1d4: V149 = 0x18f
0x1d7: V150 = 0x4
0x1d9: V151 = CALLDATALOAD 0x4
0x1da: V152 = 0x573
0x1dd: JUMP 0x573
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x18f, V151]
Exit stack: [V10, 0x18f, V151]

================================

Block 0x1de
[0x1de:0x1f1]
---
Predecessors: []
Successors: []
---
0x1de JUMPDEST
0x1df PUSH1 0x40
0x1e1 MLOAD
0x1e2 SWAP1
0x1e3 ISZERO
0x1e4 ISZERO
0x1e5 DUP2
0x1e6 MSTORE
0x1e7 PUSH1 0x20
0x1e9 ADD
0x1ea PUSH1 0x40
0x1ec MLOAD
0x1ed DUP1
0x1ee SWAP2
0x1ef SUB
0x1f0 SWAP1
0x1f1 RETURN
---
0x1de: JUMPDEST 
0x1df: V153 = 0x40
0x1e1: V154 = M[0x40]
0x1e3: V155 = ISZERO S0
0x1e4: V156 = ISZERO V155
0x1e6: M[V154] = V156
0x1e7: V157 = 0x20
0x1e9: V158 = ADD 0x20 V154
0x1ea: V159 = 0x40
0x1ec: V160 = M[0x40]
0x1ef: V161 = SUB V158 V160
0x1f1: RETURN V160 V161
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1f2
[0x1f2:0x1f8]
---
Predecessors: [0x6a]
Successors: [0x1f9, 0x1fd]
---
0x1f2 JUMPDEST
0x1f3 CALLVALUE
0x1f4 ISZERO
0x1f5 PUSH2 0x1fd
0x1f8 JUMPI
---
0x1f2: JUMPDEST 
0x1f3: V162 = CALLVALUE
0x1f4: V163 = ISZERO V162
0x1f5: V164 = 0x1fd
0x1f8: JUMPI 0x1fd V163
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1f9
[0x1f9:0x1fc]
---
Predecessors: [0x1f2]
Successors: []
---
0x1f9 PUSH1 0x0
0x1fb DUP1
0x1fc REVERT
---
0x1f9: V165 = 0x0
0x1fc: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1fd
[0x1fd:0x207]
---
Predecessors: [0x1f2]
Successors: [0x5ae]
---
0x1fd JUMPDEST
0x1fe PUSH2 0x208
0x201 PUSH1 0x4
0x203 CALLDATALOAD
0x204 PUSH2 0x5ae
0x207 JUMP
---
0x1fd: JUMPDEST 
0x1fe: V166 = 0x208
0x201: V167 = 0x4
0x203: V168 = CALLDATALOAD 0x4
0x204: V169 = 0x5ae
0x207: JUMP 0x5ae
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x208, V168]
Exit stack: [V10, 0x208, V168]

================================

Block 0x208
[0x208:0x223]
---
Predecessors: [0x5ca, 0x9cb]
Successors: []
---
0x208 JUMPDEST
0x209 PUSH1 0x40
0x20b MLOAD
0x20c PUSH1 0x1
0x20e PUSH1 0xa0
0x210 PUSH1 0x2
0x212 EXP
0x213 SUB
0x214 SWAP1
0x215 SWAP2
0x216 AND
0x217 DUP2
0x218 MSTORE
0x219 PUSH1 0x20
0x21b ADD
0x21c PUSH1 0x40
0x21e MLOAD
0x21f DUP1
0x220 SWAP2
0x221 SUB
0x222 SWAP1
0x223 RETURN
---
0x208: JUMPDEST 
0x209: V170 = 0x40
0x20b: V171 = M[0x40]
0x20c: V172 = 0x1
0x20e: V173 = 0xa0
0x210: V174 = 0x2
0x212: V175 = EXP 0x2 0xa0
0x213: V176 = SUB 0x10000000000000000000000000000000000000000 0x1
0x216: V177 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x218: M[V171] = V177
0x219: V178 = 0x20
0x21b: V179 = ADD 0x20 V171
0x21c: V180 = 0x40
0x21e: V181 = M[0x40]
0x221: V182 = SUB V179 V181
0x223: RETURN V181 V182
---
Entry stack: [V10, 0x208, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x208]

================================

Block 0x224
[0x224:0x22a]
---
Predecessors: [0x75]
Successors: [0x22b, 0x22f]
---
0x224 JUMPDEST
0x225 CALLVALUE
0x226 ISZERO
0x227 PUSH2 0x22f
0x22a JUMPI
---
0x224: JUMPDEST 
0x225: V183 = CALLVALUE
0x226: V184 = ISZERO V183
0x227: V185 = 0x22f
0x22a: JUMPI 0x22f V184
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x22b
[0x22b:0x22e]
---
Predecessors: [0x224]
Successors: []
---
0x22b PUSH1 0x0
0x22d DUP1
0x22e REVERT
---
0x22b: V186 = 0x0
0x22e: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x22f
[0x22f:0x236]
---
Predecessors: [0x224]
Successors: [0x5e0]
---
0x22f JUMPDEST
0x230 PUSH2 0x237
0x233 PUSH2 0x5e0
0x236 JUMP
---
0x22f: JUMPDEST 
0x230: V187 = 0x237
0x233: V188 = 0x5e0
0x236: JUMP 0x5e0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x237]
Exit stack: [V10, 0x237]

================================

Block 0x237
[0x237:0x238]
---
Predecessors: [0x666, 0x9c1]
Successors: []
---
0x237 JUMPDEST
0x238 STOP
---
0x237: JUMPDEST 
0x238: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x239
[0x239:0x23f]
---
Predecessors: [0x80]
Successors: [0x240, 0x244]
---
0x239 JUMPDEST
0x23a CALLVALUE
0x23b ISZERO
0x23c PUSH2 0x244
0x23f JUMPI
---
0x239: JUMPDEST 
0x23a: V189 = CALLVALUE
0x23b: V190 = ISZERO V189
0x23c: V191 = 0x244
0x23f: JUMPI 0x244 V190
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x240
[0x240:0x243]
---
Predecessors: [0x239]
Successors: []
---
0x240 PUSH1 0x0
0x242 DUP1
0x243 REVERT
---
0x240: V192 = 0x0
0x243: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x244
[0x244:0x257]
---
Predecessors: [0x239]
Successors: [0x60c]
---
0x244 JUMPDEST
0x245 PUSH2 0x237
0x248 PUSH1 0x1
0x24a PUSH1 0xa0
0x24c PUSH1 0x2
0x24e EXP
0x24f SUB
0x250 PUSH1 0x4
0x252 CALLDATALOAD
0x253 AND
0x254 PUSH2 0x60c
0x257 JUMP
---
0x244: JUMPDEST 
0x245: V193 = 0x237
0x248: V194 = 0x1
0x24a: V195 = 0xa0
0x24c: V196 = 0x2
0x24e: V197 = EXP 0x2 0xa0
0x24f: V198 = SUB 0x10000000000000000000000000000000000000000 0x1
0x250: V199 = 0x4
0x252: V200 = CALLDATALOAD 0x4
0x253: V201 = AND V200 0xffffffffffffffffffffffffffffffffffffffff
0x254: V202 = 0x60c
0x257: JUMP 0x60c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x237, V201]
Exit stack: [V10, 0x237, V201]

================================

Block 0x258
[0x258:0x259]
---
Predecessors: []
Successors: []
---
0x258 JUMPDEST
0x259 STOP
---
0x258: JUMPDEST 
0x259: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x25a
[0x25a:0x260]
---
Predecessors: [0x8b]
Successors: [0x261, 0x265]
---
0x25a JUMPDEST
0x25b CALLVALUE
0x25c ISZERO
0x25d PUSH2 0x265
0x260 JUMPI
---
0x25a: JUMPDEST 
0x25b: V203 = CALLVALUE
0x25c: V204 = ISZERO V203
0x25d: V205 = 0x265
0x260: JUMPI 0x265 V204
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x261
[0x261:0x264]
---
Predecessors: [0x25a]
Successors: []
---
0x261 PUSH1 0x0
0x263 DUP1
0x264 REVERT
---
0x261: V206 = 0x0
0x264: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x265
[0x265:0x27b]
---
Predecessors: [0x25a]
Successors: [0x669]
---
0x265 JUMPDEST
0x266 PUSH2 0x18f
0x269 PUSH1 0x1
0x26b PUSH1 0xa0
0x26d PUSH1 0x2
0x26f EXP
0x270 SUB
0x271 PUSH1 0x4
0x273 CALLDATALOAD
0x274 AND
0x275 PUSH1 0x24
0x277 CALLDATALOAD
0x278 PUSH2 0x669
0x27b JUMP
---
0x265: JUMPDEST 
0x266: V207 = 0x18f
0x269: V208 = 0x1
0x26b: V209 = 0xa0
0x26d: V210 = 0x2
0x26f: V211 = EXP 0x2 0xa0
0x270: V212 = SUB 0x10000000000000000000000000000000000000000 0x1
0x271: V213 = 0x4
0x273: V214 = CALLDATALOAD 0x4
0x274: V215 = AND V214 0xffffffffffffffffffffffffffffffffffffffff
0x275: V216 = 0x24
0x277: V217 = CALLDATALOAD 0x24
0x278: V218 = 0x669
0x27b: JUMP 0x669
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x18f, V215, V217]
Exit stack: [V10, 0x18f, V215, V217]

================================

Block 0x27c
[0x27c:0x28f]
---
Predecessors: []
Successors: []
---
0x27c JUMPDEST
0x27d PUSH1 0x40
0x27f MLOAD
0x280 SWAP1
0x281 ISZERO
0x282 ISZERO
0x283 DUP2
0x284 MSTORE
0x285 PUSH1 0x20
0x287 ADD
0x288 PUSH1 0x40
0x28a MLOAD
0x28b DUP1
0x28c SWAP2
0x28d SUB
0x28e SWAP1
0x28f RETURN
---
0x27c: JUMPDEST 
0x27d: V219 = 0x40
0x27f: V220 = M[0x40]
0x281: V221 = ISZERO S0
0x282: V222 = ISZERO V221
0x284: M[V220] = V222
0x285: V223 = 0x20
0x287: V224 = ADD 0x20 V220
0x288: V225 = 0x40
0x28a: V226 = M[0x40]
0x28d: V227 = SUB V224 V226
0x28f: RETURN V226 V227
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x290
[0x290:0x296]
---
Predecessors: [0x96]
Successors: [0x297, 0x29b]
---
0x290 JUMPDEST
0x291 CALLVALUE
0x292 ISZERO
0x293 PUSH2 0x29b
0x296 JUMPI
---
0x290: JUMPDEST 
0x291: V228 = CALLVALUE
0x292: V229 = ISZERO V228
0x293: V230 = 0x29b
0x296: JUMPI 0x29b V229
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x297
[0x297:0x29a]
---
Predecessors: [0x290]
Successors: []
---
0x297 PUSH1 0x0
0x299 DUP1
0x29a REVERT
---
0x297: V231 = 0x0
0x29a: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x29b
[0x29b:0x2b7]
---
Predecessors: [0x290]
Successors: [0x75f]
---
0x29b JUMPDEST
0x29c PUSH2 0x18f
0x29f PUSH1 0x1
0x2a1 PUSH1 0xa0
0x2a3 PUSH1 0x2
0x2a5 EXP
0x2a6 SUB
0x2a7 PUSH1 0x4
0x2a9 CALLDATALOAD
0x2aa DUP2
0x2ab AND
0x2ac SWAP1
0x2ad PUSH1 0x24
0x2af CALLDATALOAD
0x2b0 AND
0x2b1 PUSH1 0x44
0x2b3 CALLDATALOAD
0x2b4 PUSH2 0x75f
0x2b7 JUMP
---
0x29b: JUMPDEST 
0x29c: V232 = 0x18f
0x29f: V233 = 0x1
0x2a1: V234 = 0xa0
0x2a3: V235 = 0x2
0x2a5: V236 = EXP 0x2 0xa0
0x2a6: V237 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a7: V238 = 0x4
0x2a9: V239 = CALLDATALOAD 0x4
0x2ab: V240 = AND 0xffffffffffffffffffffffffffffffffffffffff V239
0x2ad: V241 = 0x24
0x2af: V242 = CALLDATALOAD 0x24
0x2b0: V243 = AND V242 0xffffffffffffffffffffffffffffffffffffffff
0x2b1: V244 = 0x44
0x2b3: V245 = CALLDATALOAD 0x44
0x2b4: V246 = 0x75f
0x2b7: JUMP 0x75f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x18f, V240, V243, V245]
Exit stack: [V10, 0x18f, V240, V243, V245]

================================

Block 0x2b8
[0x2b8:0x2cb]
---
Predecessors: []
Successors: []
---
0x2b8 JUMPDEST
0x2b9 PUSH1 0x40
0x2bb MLOAD
0x2bc SWAP1
0x2bd ISZERO
0x2be ISZERO
0x2bf DUP2
0x2c0 MSTORE
0x2c1 PUSH1 0x20
0x2c3 ADD
0x2c4 PUSH1 0x40
0x2c6 MLOAD
0x2c7 DUP1
0x2c8 SWAP2
0x2c9 SUB
0x2ca SWAP1
0x2cb RETURN
---
0x2b8: JUMPDEST 
0x2b9: V247 = 0x40
0x2bb: V248 = M[0x40]
0x2bd: V249 = ISZERO S0
0x2be: V250 = ISZERO V249
0x2c0: M[V248] = V250
0x2c1: V251 = 0x20
0x2c3: V252 = ADD 0x20 V248
0x2c4: V253 = 0x40
0x2c6: V254 = M[0x40]
0x2c9: V255 = SUB V252 V254
0x2cb: RETURN V254 V255
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2cc
[0x2cc:0x2d2]
---
Predecessors: [0xa1]
Successors: [0x2d3, 0x2d7]
---
0x2cc JUMPDEST
0x2cd CALLVALUE
0x2ce ISZERO
0x2cf PUSH2 0x2d7
0x2d2 JUMPI
---
0x2cc: JUMPDEST 
0x2cd: V256 = CALLVALUE
0x2ce: V257 = ISZERO V256
0x2cf: V258 = 0x2d7
0x2d2: JUMPI 0x2d7 V257
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2d3
[0x2d3:0x2d6]
---
Predecessors: [0x2cc]
Successors: []
---
0x2d3 PUSH1 0x0
0x2d5 DUP1
0x2d6 REVERT
---
0x2d3: V259 = 0x0
0x2d6: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2d7
[0x2d7:0x2ea]
---
Predecessors: [0x2cc]
Successors: [0x7bd]
---
0x2d7 JUMPDEST
0x2d8 PUSH2 0x18f
0x2db PUSH1 0x1
0x2dd PUSH1 0xa0
0x2df PUSH1 0x2
0x2e1 EXP
0x2e2 SUB
0x2e3 PUSH1 0x4
0x2e5 CALLDATALOAD
0x2e6 AND
0x2e7 PUSH2 0x7bd
0x2ea JUMP
---
0x2d7: JUMPDEST 
0x2d8: V260 = 0x18f
0x2db: V261 = 0x1
0x2dd: V262 = 0xa0
0x2df: V263 = 0x2
0x2e1: V264 = EXP 0x2 0xa0
0x2e2: V265 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e3: V266 = 0x4
0x2e5: V267 = CALLDATALOAD 0x4
0x2e6: V268 = AND V267 0xffffffffffffffffffffffffffffffffffffffff
0x2e7: V269 = 0x7bd
0x2ea: JUMP 0x7bd
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x18f, V268]
Exit stack: [V10, 0x18f, V268]

================================

Block 0x2eb
[0x2eb:0x2fe]
---
Predecessors: []
Successors: []
---
0x2eb JUMPDEST
0x2ec PUSH1 0x40
0x2ee MLOAD
0x2ef SWAP1
0x2f0 ISZERO
0x2f1 ISZERO
0x2f2 DUP2
0x2f3 MSTORE
0x2f4 PUSH1 0x20
0x2f6 ADD
0x2f7 PUSH1 0x40
0x2f9 MLOAD
0x2fa DUP1
0x2fb SWAP2
0x2fc SUB
0x2fd SWAP1
0x2fe RETURN
---
0x2eb: JUMPDEST 
0x2ec: V270 = 0x40
0x2ee: V271 = M[0x40]
0x2f0: V272 = ISZERO S0
0x2f1: V273 = ISZERO V272
0x2f3: M[V271] = V273
0x2f4: V274 = 0x20
0x2f6: V275 = ADD 0x20 V271
0x2f7: V276 = 0x40
0x2f9: V277 = M[0x40]
0x2fc: V278 = SUB V275 V277
0x2fe: RETURN V277 V278
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2ff
[0x2ff:0x305]
---
Predecessors: [0xac]
Successors: [0x306, 0x30a]
---
0x2ff JUMPDEST
0x300 CALLVALUE
0x301 ISZERO
0x302 PUSH2 0x30a
0x305 JUMPI
---
0x2ff: JUMPDEST 
0x300: V279 = CALLVALUE
0x301: V280 = ISZERO V279
0x302: V281 = 0x30a
0x305: JUMPI 0x30a V280
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x306
[0x306:0x309]
---
Predecessors: [0x2ff]
Successors: []
---
0x306 PUSH1 0x0
0x308 DUP1
0x309 REVERT
---
0x306: V282 = 0x0
0x309: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x30a
[0x30a:0x320]
---
Predecessors: [0x2ff]
Successors: [0x7d2]
---
0x30a JUMPDEST
0x30b PUSH2 0x18f
0x30e PUSH1 0x1
0x310 PUSH1 0xa0
0x312 PUSH1 0x2
0x314 EXP
0x315 SUB
0x316 PUSH1 0x4
0x318 CALLDATALOAD
0x319 AND
0x31a PUSH1 0x24
0x31c CALLDATALOAD
0x31d PUSH2 0x7d2
0x320 JUMP
---
0x30a: JUMPDEST 
0x30b: V283 = 0x18f
0x30e: V284 = 0x1
0x310: V285 = 0xa0
0x312: V286 = 0x2
0x314: V287 = EXP 0x2 0xa0
0x315: V288 = SUB 0x10000000000000000000000000000000000000000 0x1
0x316: V289 = 0x4
0x318: V290 = CALLDATALOAD 0x4
0x319: V291 = AND V290 0xffffffffffffffffffffffffffffffffffffffff
0x31a: V292 = 0x24
0x31c: V293 = CALLDATALOAD 0x24
0x31d: V294 = 0x7d2
0x320: JUMP 0x7d2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x18f, V291, V293]
Exit stack: [V10, 0x18f, V291, V293]

================================

Block 0x321
[0x321:0x334]
---
Predecessors: []
Successors: []
---
0x321 JUMPDEST
0x322 PUSH1 0x40
0x324 MLOAD
0x325 SWAP1
0x326 ISZERO
0x327 ISZERO
0x328 DUP2
0x329 MSTORE
0x32a PUSH1 0x20
0x32c ADD
0x32d PUSH1 0x40
0x32f MLOAD
0x330 DUP1
0x331 SWAP2
0x332 SUB
0x333 SWAP1
0x334 RETURN
---
0x321: JUMPDEST 
0x322: V295 = 0x40
0x324: V296 = M[0x40]
0x326: V297 = ISZERO S0
0x327: V298 = ISZERO V297
0x329: M[V296] = V298
0x32a: V299 = 0x20
0x32c: V300 = ADD 0x20 V296
0x32d: V301 = 0x40
0x32f: V302 = M[0x40]
0x332: V303 = SUB V300 V302
0x334: RETURN V302 V303
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x335
[0x335:0x33b]
---
Predecessors: [0xb7]
Successors: [0x33c, 0x340]
---
0x335 JUMPDEST
0x336 CALLVALUE
0x337 ISZERO
0x338 PUSH2 0x340
0x33b JUMPI
---
0x335: JUMPDEST 
0x336: V304 = CALLVALUE
0x337: V305 = ISZERO V304
0x338: V306 = 0x340
0x33b: JUMPI 0x340 V305
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x33c
[0x33c:0x33f]
---
Predecessors: [0x335]
Successors: []
---
0x33c PUSH1 0x0
0x33e DUP1
0x33f REVERT
---
0x33c: V307 = 0x0
0x33f: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x340
[0x340:0x358]
---
Predecessors: [0x335]
Successors: [0x8d2]
---
0x340 JUMPDEST
0x341 PUSH2 0x359
0x344 PUSH1 0x1
0x346 PUSH1 0xa0
0x348 PUSH1 0x2
0x34a EXP
0x34b SUB
0x34c PUSH1 0x4
0x34e CALLDATALOAD
0x34f AND
0x350 PUSH1 0x24
0x352 CALLDATALOAD
0x353 ISZERO
0x354 ISZERO
0x355 PUSH2 0x8d2
0x358 JUMP
---
0x340: JUMPDEST 
0x341: V308 = 0x359
0x344: V309 = 0x1
0x346: V310 = 0xa0
0x348: V311 = 0x2
0x34a: V312 = EXP 0x2 0xa0
0x34b: V313 = SUB 0x10000000000000000000000000000000000000000 0x1
0x34c: V314 = 0x4
0x34e: V315 = CALLDATALOAD 0x4
0x34f: V316 = AND V315 0xffffffffffffffffffffffffffffffffffffffff
0x350: V317 = 0x24
0x352: V318 = CALLDATALOAD 0x24
0x353: V319 = ISZERO V318
0x354: V320 = ISZERO V319
0x355: V321 = 0x8d2
0x358: JUMP 0x8d2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x359, V316, V320]
Exit stack: [V10, 0x359, V316, V320]

================================

Block 0x359
[0x359:0x388]
---
Predecessors: [0x953]
Successors: []
---
0x359 JUMPDEST
0x35a PUSH1 0x40
0x35c MLOAD
0x35d SWAP3
0x35e ISZERO
0x35f ISZERO
0x360 DUP4
0x361 MSTORE
0x362 PUSH1 0x1
0x364 PUSH1 0xa0
0x366 PUSH1 0x2
0x368 EXP
0x369 SUB
0x36a SWAP1
0x36b SWAP2
0x36c AND
0x36d PUSH1 0x20
0x36f DUP4
0x370 ADD
0x371 MSTORE
0x372 ISZERO
0x373 ISZERO
0x374 PUSH1 0x40
0x376 DUP1
0x377 DUP4
0x378 ADD
0x379 SWAP2
0x37a SWAP1
0x37b SWAP2
0x37c MSTORE
0x37d PUSH1 0x60
0x37f SWAP1
0x380 SWAP2
0x381 ADD
0x382 SWAP1
0x383 MLOAD
0x384 DUP1
0x385 SWAP2
0x386 SUB
0x387 SWAP1
0x388 RETURN
---
0x359: JUMPDEST 
0x35a: V322 = 0x40
0x35c: V323 = M[0x40]
0x35e: V324 = ISZERO 0x1
0x35f: V325 = ISZERO 0x0
0x361: M[V323] = 0x1
0x362: V326 = 0x1
0x364: V327 = 0xa0
0x366: V328 = 0x2
0x368: V329 = EXP 0x2 0xa0
0x369: V330 = SUB 0x10000000000000000000000000000000000000000 0x1
0x36c: V331 = AND V316 0xffffffffffffffffffffffffffffffffffffffff
0x36d: V332 = 0x20
0x370: V333 = ADD V323 0x20
0x371: M[V333] = V331
0x372: V334 = ISZERO V320
0x373: V335 = ISZERO V334
0x374: V336 = 0x40
0x378: V337 = ADD V323 0x40
0x37c: M[V337] = V335
0x37d: V338 = 0x60
0x381: V339 = ADD V323 0x60
0x383: V340 = M[0x40]
0x386: V341 = SUB V339 V340
0x388: RETURN V340 V341
---
Entry stack: [V10, 0x1, V316, V320]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x389
[0x389:0x38f]
---
Predecessors: [0xc2]
Successors: [0x390, 0x394]
---
0x389 JUMPDEST
0x38a CALLVALUE
0x38b ISZERO
0x38c PUSH2 0x394
0x38f JUMPI
---
0x389: JUMPDEST 
0x38a: V342 = CALLVALUE
0x38b: V343 = ISZERO V342
0x38c: V344 = 0x394
0x38f: JUMPI 0x394 V343
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x390
[0x390:0x393]
---
Predecessors: [0x389]
Successors: []
---
0x390 PUSH1 0x0
0x392 DUP1
0x393 REVERT
---
0x390: V345 = 0x0
0x393: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x394
[0x394:0x3a7]
---
Predecessors: [0x389]
Successors: [0x95a]
---
0x394 JUMPDEST
0x395 PUSH2 0x18f
0x398 PUSH1 0x1
0x39a PUSH1 0xa0
0x39c PUSH1 0x2
0x39e EXP
0x39f SUB
0x3a0 PUSH1 0x4
0x3a2 CALLDATALOAD
0x3a3 AND
0x3a4 PUSH2 0x95a
0x3a7 JUMP
---
0x394: JUMPDEST 
0x395: V346 = 0x18f
0x398: V347 = 0x1
0x39a: V348 = 0xa0
0x39c: V349 = 0x2
0x39e: V350 = EXP 0x2 0xa0
0x39f: V351 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a0: V352 = 0x4
0x3a2: V353 = CALLDATALOAD 0x4
0x3a3: V354 = AND V353 0xffffffffffffffffffffffffffffffffffffffff
0x3a4: V355 = 0x95a
0x3a7: JUMP 0x95a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x18f, V354]
Exit stack: [V10, 0x18f, V354]

================================

Block 0x3a8
[0x3a8:0x3bb]
---
Predecessors: []
Successors: []
---
0x3a8 JUMPDEST
0x3a9 PUSH1 0x40
0x3ab MLOAD
0x3ac SWAP1
0x3ad ISZERO
0x3ae ISZERO
0x3af DUP2
0x3b0 MSTORE
0x3b1 PUSH1 0x20
0x3b3 ADD
0x3b4 PUSH1 0x40
0x3b6 MLOAD
0x3b7 DUP1
0x3b8 SWAP2
0x3b9 SUB
0x3ba SWAP1
0x3bb RETURN
---
0x3a8: JUMPDEST 
0x3a9: V356 = 0x40
0x3ab: V357 = M[0x40]
0x3ad: V358 = ISZERO S0
0x3ae: V359 = ISZERO V358
0x3b0: M[V357] = V359
0x3b1: V360 = 0x20
0x3b3: V361 = ADD 0x20 V357
0x3b4: V362 = 0x40
0x3b6: V363 = M[0x40]
0x3b9: V364 = SUB V361 V363
0x3bb: RETURN V363 V364
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3bc
[0x3bc:0x3c2]
---
Predecessors: [0xcd]
Successors: [0x3c3, 0x3c7]
---
0x3bc JUMPDEST
0x3bd CALLVALUE
0x3be ISZERO
0x3bf PUSH2 0x3c7
0x3c2 JUMPI
---
0x3bc: JUMPDEST 
0x3bd: V365 = CALLVALUE
0x3be: V366 = ISZERO V365
0x3bf: V367 = 0x3c7
0x3c2: JUMPI 0x3c7 V366
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3c3
[0x3c3:0x3c6]
---
Predecessors: [0x3bc]
Successors: []
---
0x3c3 PUSH1 0x0
0x3c5 DUP1
0x3c6 REVERT
---
0x3c3: V368 = 0x0
0x3c6: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3c7
[0x3c7:0x3da]
---
Predecessors: [0x3bc]
Successors: [0x97c]
---
0x3c7 JUMPDEST
0x3c8 PUSH2 0x237
0x3cb PUSH1 0x1
0x3cd PUSH1 0xa0
0x3cf PUSH1 0x2
0x3d1 EXP
0x3d2 SUB
0x3d3 PUSH1 0x4
0x3d5 CALLDATALOAD
0x3d6 AND
0x3d7 PUSH2 0x97c
0x3da JUMP
---
0x3c7: JUMPDEST 
0x3c8: V369 = 0x237
0x3cb: V370 = 0x1
0x3cd: V371 = 0xa0
0x3cf: V372 = 0x2
0x3d1: V373 = EXP 0x2 0xa0
0x3d2: V374 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d3: V375 = 0x4
0x3d5: V376 = CALLDATALOAD 0x4
0x3d6: V377 = AND V376 0xffffffffffffffffffffffffffffffffffffffff
0x3d7: V378 = 0x97c
0x3da: JUMP 0x97c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x237, V377]
Exit stack: [V10, 0x237, V377]

================================

Block 0x3db
[0x3db:0x3dc]
---
Predecessors: []
Successors: []
---
0x3db JUMPDEST
0x3dc STOP
---
0x3db: JUMPDEST 
0x3dc: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3dd
[0x3dd:0x3e3]
---
Predecessors: [0xd8]
Successors: [0x3e4, 0x3e8]
---
0x3dd JUMPDEST
0x3de CALLVALUE
0x3df ISZERO
0x3e0 PUSH2 0x3e8
0x3e3 JUMPI
---
0x3dd: JUMPDEST 
0x3de: V379 = CALLVALUE
0x3df: V380 = ISZERO V379
0x3e0: V381 = 0x3e8
0x3e3: JUMPI 0x3e8 V380
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3e4
[0x3e4:0x3e7]
---
Predecessors: [0x3dd]
Successors: []
---
0x3e4 PUSH1 0x0
0x3e6 DUP1
0x3e7 REVERT
---
0x3e4: V382 = 0x0
0x3e7: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3e8
[0x3e8:0x3ef]
---
Predecessors: [0x3dd]
Successors: [0x9c4]
---
0x3e8 JUMPDEST
0x3e9 PUSH2 0x139
0x3ec PUSH2 0x9c4
0x3ef JUMP
---
0x3e8: JUMPDEST 
0x3e9: V383 = 0x139
0x3ec: V384 = 0x9c4
0x3ef: JUMP 0x9c4
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x139]
Exit stack: [V10, 0x139]

================================

Block 0x3f0
[0x3f0:0x401]
---
Predecessors: []
Successors: []
---
0x3f0 JUMPDEST
0x3f1 PUSH1 0x40
0x3f3 MLOAD
0x3f4 SWAP1
0x3f5 DUP2
0x3f6 MSTORE
0x3f7 PUSH1 0x20
0x3f9 ADD
0x3fa PUSH1 0x40
0x3fc MLOAD
0x3fd DUP1
0x3fe SWAP2
0x3ff SUB
0x400 SWAP1
0x401 RETURN
---
0x3f0: JUMPDEST 
0x3f1: V385 = 0x40
0x3f3: V386 = M[0x40]
0x3f6: M[V386] = S0
0x3f7: V387 = 0x20
0x3f9: V388 = ADD 0x20 V386
0x3fa: V389 = 0x40
0x3fc: V390 = M[0x40]
0x3ff: V391 = SUB V388 V390
0x401: RETURN V390 V391
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x402
[0x402:0x408]
---
Predecessors: [0xe3]
Successors: [0x409, 0x40d]
---
0x402 JUMPDEST
0x403 CALLVALUE
0x404 ISZERO
0x405 PUSH2 0x40d
0x408 JUMPI
---
0x402: JUMPDEST 
0x403: V392 = CALLVALUE
0x404: V393 = ISZERO V392
0x405: V394 = 0x40d
0x408: JUMPI 0x40d V393
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x409
[0x409:0x40c]
---
Predecessors: [0x402]
Successors: []
---
0x409 PUSH1 0x0
0x40b DUP1
0x40c REVERT
---
0x409: V395 = 0x0
0x40c: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x40d
[0x40d:0x414]
---
Predecessors: [0x402]
Successors: [0x9cb]
---
0x40d JUMPDEST
0x40e PUSH2 0x208
0x411 PUSH2 0x9cb
0x414 JUMP
---
0x40d: JUMPDEST 
0x40e: V396 = 0x208
0x411: V397 = 0x9cb
0x414: JUMP 0x9cb
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x208]
Exit stack: [V10, 0x208]

================================

Block 0x415
[0x415:0x430]
---
Predecessors: []
Successors: []
---
0x415 JUMPDEST
0x416 PUSH1 0x40
0x418 MLOAD
0x419 PUSH1 0x1
0x41b PUSH1 0xa0
0x41d PUSH1 0x2
0x41f EXP
0x420 SUB
0x421 SWAP1
0x422 SWAP2
0x423 AND
0x424 DUP2
0x425 MSTORE
0x426 PUSH1 0x20
0x428 ADD
0x429 PUSH1 0x40
0x42b MLOAD
0x42c DUP1
0x42d SWAP2
0x42e SUB
0x42f SWAP1
0x430 RETURN
---
0x415: JUMPDEST 
0x416: V398 = 0x40
0x418: V399 = M[0x40]
0x419: V400 = 0x1
0x41b: V401 = 0xa0
0x41d: V402 = 0x2
0x41f: V403 = EXP 0x2 0xa0
0x420: V404 = SUB 0x10000000000000000000000000000000000000000 0x1
0x423: V405 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x425: M[V399] = V405
0x426: V406 = 0x20
0x428: V407 = ADD 0x20 V399
0x429: V408 = 0x40
0x42b: V409 = M[0x40]
0x42e: V410 = SUB V407 V409
0x430: RETURN V409 V410
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x431
[0x431:0x437]
---
Predecessors: [0xee]
Successors: [0x438, 0x43c]
---
0x431 JUMPDEST
0x432 CALLVALUE
0x433 ISZERO
0x434 PUSH2 0x43c
0x437 JUMPI
---
0x431: JUMPDEST 
0x432: V411 = CALLVALUE
0x433: V412 = ISZERO V411
0x434: V413 = 0x43c
0x437: JUMPI 0x43c V412
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x438
[0x438:0x43b]
---
Predecessors: [0x431]
Successors: []
---
0x438 PUSH1 0x0
0x43a DUP1
0x43b REVERT
---
0x438: V414 = 0x0
0x43b: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x43c
[0x43c:0x446]
---
Predecessors: [0x431]
Successors: [0x9da]
---
0x43c JUMPDEST
0x43d PUSH2 0x18f
0x440 PUSH1 0x4
0x442 CALLDATALOAD
0x443 PUSH2 0x9da
0x446 JUMP
---
0x43c: JUMPDEST 
0x43d: V415 = 0x18f
0x440: V416 = 0x4
0x442: V417 = CALLDATALOAD 0x4
0x443: V418 = 0x9da
0x446: JUMP 0x9da
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x18f, V417]
Exit stack: [V10, 0x18f, V417]

================================

Block 0x447
[0x447:0x45a]
---
Predecessors: []
Successors: []
---
0x447 JUMPDEST
0x448 PUSH1 0x40
0x44a MLOAD
0x44b SWAP1
0x44c ISZERO
0x44d ISZERO
0x44e DUP2
0x44f MSTORE
0x450 PUSH1 0x20
0x452 ADD
0x453 PUSH1 0x40
0x455 MLOAD
0x456 DUP1
0x457 SWAP2
0x458 SUB
0x459 SWAP1
0x45a RETURN
---
0x447: JUMPDEST 
0x448: V419 = 0x40
0x44a: V420 = M[0x40]
0x44c: V421 = ISZERO S0
0x44d: V422 = ISZERO V421
0x44f: M[V420] = V422
0x450: V423 = 0x20
0x452: V424 = ADD 0x20 V420
0x453: V425 = 0x40
0x455: V426 = M[0x40]
0x458: V427 = SUB V424 V426
0x45a: RETURN V426 V427
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x45b
[0x45b:0x461]
---
Predecessors: [0xf9]
Successors: [0x462, 0x466]
---
0x45b JUMPDEST
0x45c CALLVALUE
0x45d ISZERO
0x45e PUSH2 0x466
0x461 JUMPI
---
0x45b: JUMPDEST 
0x45c: V428 = CALLVALUE
0x45d: V429 = ISZERO V428
0x45e: V430 = 0x466
0x461: JUMPI 0x466 V429
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x462
[0x462:0x465]
---
Predecessors: [0x45b]
Successors: []
---
0x462 PUSH1 0x0
0x464 DUP1
0x465 REVERT
---
0x462: V431 = 0x0
0x465: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x466
[0x466:0x479]
---
Predecessors: [0x45b]
Successors: [0xa14]
---
0x466 JUMPDEST
0x467 PUSH2 0x139
0x46a PUSH1 0x1
0x46c PUSH1 0xa0
0x46e PUSH1 0x2
0x470 EXP
0x471 SUB
0x472 PUSH1 0x4
0x474 CALLDATALOAD
0x475 AND
0x476 PUSH2 0xa14
0x479 JUMP
---
0x466: JUMPDEST 
0x467: V432 = 0x139
0x46a: V433 = 0x1
0x46c: V434 = 0xa0
0x46e: V435 = 0x2
0x470: V436 = EXP 0x2 0xa0
0x471: V437 = SUB 0x10000000000000000000000000000000000000000 0x1
0x472: V438 = 0x4
0x474: V439 = CALLDATALOAD 0x4
0x475: V440 = AND V439 0xffffffffffffffffffffffffffffffffffffffff
0x476: V441 = 0xa14
0x479: JUMP 0xa14
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x139, V440]
Exit stack: [V10, 0x139, V440]

================================

Block 0x47a
[0x47a:0x48b]
---
Predecessors: []
Successors: []
---
0x47a JUMPDEST
0x47b PUSH1 0x40
0x47d MLOAD
0x47e SWAP1
0x47f DUP2
0x480 MSTORE
0x481 PUSH1 0x20
0x483 ADD
0x484 PUSH1 0x40
0x486 MLOAD
0x487 DUP1
0x488 SWAP2
0x489 SUB
0x48a SWAP1
0x48b RETURN
---
0x47a: JUMPDEST 
0x47b: V442 = 0x40
0x47d: V443 = M[0x40]
0x480: M[V443] = S0
0x481: V444 = 0x20
0x483: V445 = ADD 0x20 V443
0x484: V446 = 0x40
0x486: V447 = M[0x40]
0x489: V448 = SUB V445 V447
0x48b: RETURN V447 V448
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x48c
[0x48c:0x492]
---
Predecessors: [0x104]
Successors: [0x493, 0x497]
---
0x48c JUMPDEST
0x48d CALLVALUE
0x48e ISZERO
0x48f PUSH2 0x497
0x492 JUMPI
---
0x48c: JUMPDEST 
0x48d: V449 = CALLVALUE
0x48e: V450 = ISZERO V449
0x48f: V451 = 0x497
0x492: JUMPI 0x497 V450
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x493
[0x493:0x496]
---
Predecessors: [0x48c]
Successors: []
---
0x493 PUSH1 0x0
0x495 DUP1
0x496 REVERT
---
0x493: V452 = 0x0
0x496: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x497
[0x497:0x4b3]
---
Predecessors: [0x48c]
Successors: [0xa33]
---
0x497 JUMPDEST
0x498 PUSH2 0x18f
0x49b PUSH1 0x1
0x49d PUSH1 0xa0
0x49f PUSH1 0x2
0x4a1 EXP
0x4a2 SUB
0x4a3 PUSH1 0x4
0x4a5 CALLDATALOAD
0x4a6 DUP2
0x4a7 AND
0x4a8 SWAP1
0x4a9 PUSH1 0x24
0x4ab CALLDATALOAD
0x4ac AND
0x4ad PUSH1 0x44
0x4af CALLDATALOAD
0x4b0 PUSH2 0xa33
0x4b3 JUMP
---
0x497: JUMPDEST 
0x498: V453 = 0x18f
0x49b: V454 = 0x1
0x49d: V455 = 0xa0
0x49f: V456 = 0x2
0x4a1: V457 = EXP 0x2 0xa0
0x4a2: V458 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4a3: V459 = 0x4
0x4a5: V460 = CALLDATALOAD 0x4
0x4a7: V461 = AND 0xffffffffffffffffffffffffffffffffffffffff V460
0x4a9: V462 = 0x24
0x4ab: V463 = CALLDATALOAD 0x24
0x4ac: V464 = AND V463 0xffffffffffffffffffffffffffffffffffffffff
0x4ad: V465 = 0x44
0x4af: V466 = CALLDATALOAD 0x44
0x4b0: V467 = 0xa33
0x4b3: JUMP 0xa33
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x18f, V461, V464, V466]
Exit stack: [V10, 0x18f, V461, V464, V466]

================================

Block 0x4b4
[0x4b4:0x4c7]
---
Predecessors: []
Successors: []
---
0x4b4 JUMPDEST
0x4b5 PUSH1 0x40
0x4b7 MLOAD
0x4b8 SWAP1
0x4b9 ISZERO
0x4ba ISZERO
0x4bb DUP2
0x4bc MSTORE
0x4bd PUSH1 0x20
0x4bf ADD
0x4c0 PUSH1 0x40
0x4c2 MLOAD
0x4c3 DUP1
0x4c4 SWAP2
0x4c5 SUB
0x4c6 SWAP1
0x4c7 RETURN
---
0x4b4: JUMPDEST 
0x4b5: V468 = 0x40
0x4b7: V469 = M[0x40]
0x4b9: V470 = ISZERO S0
0x4ba: V471 = ISZERO V470
0x4bc: M[V469] = V471
0x4bd: V472 = 0x20
0x4bf: V473 = ADD 0x20 V469
0x4c0: V474 = 0x40
0x4c2: V475 = M[0x40]
0x4c5: V476 = SUB V473 V475
0x4c7: RETURN V475 V476
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4c8
[0x4c8:0x4ee]
---
Predecessors: [0x11f]
Successors: [0x4ef]
---
0x4c8 JUMPDEST
0x4c9 PUSH1 0x1
0x4cb PUSH1 0xa0
0x4cd PUSH1 0x2
0x4cf EXP
0x4d0 SUB
0x4d1 DUP1
0x4d2 DUP4
0x4d3 AND
0x4d4 PUSH1 0x0
0x4d6 SWAP1
0x4d7 DUP2
0x4d8 MSTORE
0x4d9 PUSH1 0x3
0x4db PUSH1 0x20
0x4dd SWAP1
0x4de DUP2
0x4df MSTORE
0x4e0 PUSH1 0x40
0x4e2 DUP1
0x4e3 DUP4
0x4e4 SHA3
0x4e5 SWAP4
0x4e6 DUP6
0x4e7 AND
0x4e8 DUP4
0x4e9 MSTORE
0x4ea SWAP3
0x4eb SWAP1
0x4ec MSTORE
0x4ed SHA3
0x4ee SLOAD
---
0x4c8: JUMPDEST 
0x4c9: V477 = 0x1
0x4cb: V478 = 0xa0
0x4cd: V479 = 0x2
0x4cf: V480 = EXP 0x2 0xa0
0x4d0: V481 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d3: V482 = AND V84 0xffffffffffffffffffffffffffffffffffffffff
0x4d4: V483 = 0x0
0x4d8: M[0x0] = V482
0x4d9: V484 = 0x3
0x4db: V485 = 0x20
0x4df: M[0x20] = 0x3
0x4e0: V486 = 0x40
0x4e4: V487 = SHA3 0x0 0x40
0x4e7: V488 = AND V87 0xffffffffffffffffffffffffffffffffffffffff
0x4e9: M[0x0] = V488
0x4ec: M[0x20] = V487
0x4ed: V489 = SHA3 0x0 0x40
0x4ee: V490 = S[V489]
---
Entry stack: [V10, 0x139, V84, V87]
Stack pops: 2
Stack additions: [S1, S0, V490]
Exit stack: [V10, 0x139, V84, V87, V490]

================================

Block 0x4ef
[0x4ef:0x4f4]
---
Predecessors: [0x4c8]
Successors: [0x139]
---
0x4ef JUMPDEST
0x4f0 SWAP3
0x4f1 SWAP2
0x4f2 POP
0x4f3 POP
0x4f4 JUMP
---
0x4ef: JUMPDEST 
0x4f4: JUMP 0x139
---
Entry stack: [V10, 0x139, V84, V87, V490]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, V490]

================================

Block 0x4f5
[0x4f5:0x4fa]
---
Predecessors: [0x156]
Successors: [0x139]
---
0x4f5 JUMPDEST
0x4f6 PUSH1 0x1
0x4f8 SLOAD
0x4f9 DUP2
0x4fa JUMP
---
0x4f5: JUMPDEST 
0x4f6: V491 = 0x1
0x4f8: V492 = S[0x1]
0x4fa: JUMP 0x139
---
Entry stack: [V10, 0x139]
Stack pops: 1
Stack additions: [S0, V492]
Exit stack: [V10, 0x139, V492]

================================

Block 0x4fb
[0x4fb:0x507]
---
Predecessors: [0x17b, 0x7fc, 0xa95]
Successors: [0x508, 0x50f]
---
0x4fb JUMPDEST
0x4fc PUSH1 0x4
0x4fe SLOAD
0x4ff PUSH1 0x0
0x501 SWAP1
0x502 ISZERO
0x503 ISZERO
0x504 PUSH2 0x50f
0x507 JUMPI
---
0x4fb: JUMPDEST 
0x4fc: V493 = 0x4
0x4fe: V494 = S[0x4]
0x4ff: V495 = 0x0
0x502: V496 = ISZERO V494
0x503: V497 = ISZERO V496
0x504: V498 = 0x50f
0x507: JUMPI 0x50f V497
---
Entry stack: [V10, 0x18f, V215, S6, {0x0, 0x18f}, S4, S3, S2, {0x18f, 0x805, 0xaa0}, S0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x18f, V215, S6, {0x0, 0x18f}, S4, S3, S2, {0x18f, 0x805, 0xaa0}, S0, 0x0]

================================

Block 0x508
[0x508:0x50e]
---
Predecessors: [0x4fb]
Successors: [0x567]
---
0x508 POP
0x509 PUSH1 0x0
0x50b PUSH2 0x567
0x50e JUMP
---
0x509: V499 = 0x0
0x50b: V500 = 0x567
0x50e: JUMP 0x567
---
Entry stack: [V10, 0x18f, V215, S7, {0x0, 0x18f}, S5, S4, S3, {0x18f, 0x805, 0xaa0}, S1, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0x18f, V215, S7, {0x0, 0x18f}, S5, S4, S3, {0x18f, 0x805, 0xaa0}, S1, 0x0]

================================

Block 0x50f
[0x50f:0x538]
---
Predecessors: [0x4fb]
Successors: [0x539, 0x53a]
---
0x50f JUMPDEST
0x510 PUSH1 0x1
0x512 PUSH1 0xa0
0x514 PUSH1 0x2
0x516 EXP
0x517 SUB
0x518 DUP3
0x519 AND
0x51a PUSH1 0x0
0x51c DUP2
0x51d DUP2
0x51e MSTORE
0x51f PUSH1 0x5
0x521 PUSH1 0x20
0x523 MSTORE
0x524 PUSH1 0x40
0x526 SWAP1
0x527 SHA3
0x528 PUSH1 0x1
0x52a ADD
0x52b SLOAD
0x52c PUSH1 0x4
0x52e DUP1
0x52f SLOAD
0x530 SWAP1
0x531 SWAP2
0x532 SWAP1
0x533 DUP2
0x534 LT
0x535 PUSH2 0x53a
0x538 JUMPI
---
0x50f: JUMPDEST 
0x510: V501 = 0x1
0x512: V502 = 0xa0
0x514: V503 = 0x2
0x516: V504 = EXP 0x2 0xa0
0x517: V505 = SUB 0x10000000000000000000000000000000000000000 0x1
0x519: V506 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x51a: V507 = 0x0
0x51e: M[0x0] = V506
0x51f: V508 = 0x5
0x521: V509 = 0x20
0x523: M[0x20] = 0x5
0x524: V510 = 0x40
0x527: V511 = SHA3 0x0 0x40
0x528: V512 = 0x1
0x52a: V513 = ADD 0x1 V511
0x52b: V514 = S[V513]
0x52c: V515 = 0x4
0x52f: V516 = S[0x4]
0x534: V517 = LT V514 V516
0x535: V518 = 0x53a
0x538: JUMPI 0x53a V517
---
Entry stack: [V10, 0x18f, V215, S7, {0x0, 0x18f}, S5, S4, S3, {0x18f, 0x805, 0xaa0}, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V506, 0x4, V514]
Exit stack: [V10, 0x18f, V215, S7, {0x0, 0x18f}, S5, S4, S3, {0x18f, 0x805, 0xaa0}, S1, 0x0, V506, 0x4, V514]

================================

Block 0x539
[0x539:0x539]
---
Predecessors: [0x50f]
Successors: []
---
0x539 INVALID
---
0x539: INVALID 
---
Entry stack: [V10, 0x18f, V215, S10, {0x0, 0x18f}, S8, S7, S6, {0x18f, 0x805, 0xaa0}, S4, 0x0, V506, 0x4, V514]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x18f, V215, S10, {0x0, 0x18f}, S8, S7, S6, {0x18f, 0x805, 0xaa0}, S4, 0x0, V506, 0x4, V514]

================================

Block 0x53a
[0x53a:0x547]
---
Predecessors: [0x50f]
Successors: [0x548]
---
0x53a JUMPDEST
0x53b SWAP1
0x53c PUSH1 0x0
0x53e MSTORE
0x53f PUSH1 0x20
0x541 PUSH1 0x0
0x543 SHA3
0x544 SWAP1
0x545 ADD
0x546 PUSH1 0x0
---
0x53a: JUMPDEST 
0x53c: V519 = 0x0
0x53e: M[0x0] = 0x4
0x53f: V520 = 0x20
0x541: V521 = 0x0
0x543: V522 = SHA3 0x0 0x20
0x545: V523 = ADD V514 V522
0x546: V524 = 0x0
---
Entry stack: [V10, 0x18f, V215, S10, {0x0, 0x18f}, S8, S7, S6, {0x18f, 0x805, 0xaa0}, S4, 0x0, V506, 0x4, V514]
Stack pops: 2
Stack additions: [V523, 0x0]
Exit stack: [V10, 0x18f, V215, S10, {0x0, 0x18f}, S8, S7, S6, {0x18f, 0x805, 0xaa0}, S4, 0x0, V506, V523, 0x0]

================================

Block 0x548
[0x548:0x566]
---
Predecessors: [0x53a]
Successors: [0x567]
---
0x548 JUMPDEST
0x549 SWAP1
0x54a SLOAD
0x54b SWAP1
0x54c PUSH2 0x100
0x54f EXP
0x550 SWAP1
0x551 DIV
0x552 PUSH1 0x1
0x554 PUSH1 0xa0
0x556 PUSH1 0x2
0x558 EXP
0x559 SUB
0x55a AND
0x55b PUSH1 0x1
0x55d PUSH1 0xa0
0x55f PUSH1 0x2
0x561 EXP
0x562 SUB
0x563 AND
0x564 EQ
0x565 SWAP1
0x566 POP
---
0x548: JUMPDEST 
0x54a: V525 = S[V523]
0x54c: V526 = 0x100
0x54f: V527 = EXP 0x100 0x0
0x551: V528 = DIV V525 0x1
0x552: V529 = 0x1
0x554: V530 = 0xa0
0x556: V531 = 0x2
0x558: V532 = EXP 0x2 0xa0
0x559: V533 = SUB 0x10000000000000000000000000000000000000000 0x1
0x55a: V534 = AND 0xffffffffffffffffffffffffffffffffffffffff V528
0x55b: V535 = 0x1
0x55d: V536 = 0xa0
0x55f: V537 = 0x2
0x561: V538 = EXP 0x2 0xa0
0x562: V539 = SUB 0x10000000000000000000000000000000000000000 0x1
0x563: V540 = AND 0xffffffffffffffffffffffffffffffffffffffff V534
0x564: V541 = EQ V540 S2
---
Entry stack: [V10, 0x18f, V215, S10, {0x0, 0x18f}, S8, S7, S6, {0x18f, 0x805, 0xaa0}, S4, 0x0, S2, V523, 0x0]
Stack pops: 4
Stack additions: [V541]
Exit stack: [V10, 0x18f, V215, S10, {0x0, 0x18f}, S8, S7, S6, {0x18f, 0x805, 0xaa0}, S4, V541]

================================

Block 0x567
[0x567:0x56b]
---
Predecessors: [0x508, 0x548]
Successors: [0x18f, 0x805, 0xaa0]
---
0x567 JUMPDEST
0x568 SWAP2
0x569 SWAP1
0x56a POP
0x56b JUMP
---
0x567: JUMPDEST 
0x56b: JUMP {0x18f, 0x805, 0xaa0}
---
Entry stack: [V10, 0x18f, V215, S7, {0x0, 0x18f}, S5, S4, S3, {0x18f, 0x805, 0xaa0}, S1, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, 0x18f, V215, S7, {0x0, 0x18f}, S5, S4, S3, S0]

================================

Block 0x56c
[0x56c:0x56f]
---
Predecessors: [0x1ae]
Successors: [0x570]
---
0x56c JUMPDEST
0x56d PUSH1 0x4
0x56f SLOAD
---
0x56c: JUMPDEST 
0x56d: V542 = 0x4
0x56f: V543 = S[0x4]
---
Entry stack: [V10, 0x139]
Stack pops: 0
Stack additions: [V543]
Exit stack: [V10, 0x139, V543]

================================

Block 0x570
[0x570:0x572]
---
Predecessors: [0x56c, 0xb9c]
Successors: [0x139, 0xb7c]
---
0x570 JUMPDEST
0x571 SWAP1
0x572 JUMP
---
0x570: JUMPDEST 
0x572: JUMP {0x139, 0xb7c}
---
Entry stack: [V10, 0x18f, V215, S13, {0x0, 0x18f}, S11, S10, S9, 0x1, 0x4, V998, V1000, 0xabc, 0x4, S2, {0x139, 0xb7c}, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, 0x18f, V215, S13, {0x0, 0x18f}, S11, S10, S9, 0x1, 0x4, V998, V1000, 0xabc, 0x4, S2, S0]

================================

Block 0x573
[0x573:0x598]
---
Predecessors: [0x1d3]
Successors: [0x599, 0x59d]
---
0x573 JUMPDEST
0x574 PUSH1 0x1
0x576 PUSH1 0xa0
0x578 PUSH1 0x2
0x57a EXP
0x57b SUB
0x57c CALLER
0x57d AND
0x57e PUSH1 0x0
0x580 SWAP1
0x581 DUP2
0x582 MSTORE
0x583 PUSH1 0x2
0x585 PUSH1 0x20
0x587 MSTORE
0x588 PUSH1 0x40
0x58a DUP2
0x58b SHA3
0x58c SLOAD
0x58d PUSH1 0xff
0x58f AND
0x590 ISZERO
0x591 ISZERO
0x592 PUSH1 0x1
0x594 EQ
0x595 PUSH2 0x59d
0x598 JUMPI
---
0x573: JUMPDEST 
0x574: V544 = 0x1
0x576: V545 = 0xa0
0x578: V546 = 0x2
0x57a: V547 = EXP 0x2 0xa0
0x57b: V548 = SUB 0x10000000000000000000000000000000000000000 0x1
0x57c: V549 = CALLER
0x57d: V550 = AND V549 0xffffffffffffffffffffffffffffffffffffffff
0x57e: V551 = 0x0
0x582: M[0x0] = V550
0x583: V552 = 0x2
0x585: V553 = 0x20
0x587: M[0x20] = 0x2
0x588: V554 = 0x40
0x58b: V555 = SHA3 0x0 0x40
0x58c: V556 = S[V555]
0x58d: V557 = 0xff
0x58f: V558 = AND 0xff V556
0x590: V559 = ISZERO V558
0x591: V560 = ISZERO V559
0x592: V561 = 0x1
0x594: V562 = EQ 0x1 V560
0x595: V563 = 0x59d
0x598: JUMPI 0x59d V562
---
Entry stack: [V10, 0x18f, V151]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x18f, V151, 0x0]

================================

Block 0x599
[0x599:0x59c]
---
Predecessors: [0x573]
Successors: []
---
0x599 PUSH1 0x0
0x59b DUP1
0x59c REVERT
---
0x599: V564 = 0x0
0x59c: REVERT 0x0 0x0
---
Entry stack: [V10, 0x18f, V151, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x18f, V151, 0x0]

================================

Block 0x59d
[0x59d:0x5a7]
---
Predecessors: [0x573]
Successors: [0x5a8]
---
0x59d JUMPDEST
0x59e POP
0x59f PUSH1 0x1
0x5a1 DUP1
0x5a2 SLOAD
0x5a3 DUP3
0x5a4 SWAP1
0x5a5 SUB
0x5a6 DUP2
0x5a7 SSTORE
---
0x59d: JUMPDEST 
0x59f: V565 = 0x1
0x5a2: V566 = S[0x1]
0x5a5: V567 = SUB V566 V151
0x5a7: S[0x1] = V567
---
Entry stack: [V10, 0x18f, V151, 0x0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V10, 0x18f, V151, 0x1]

================================

Block 0x5a8
[0x5a8:0x5a8]
---
Predecessors: [0x59d]
Successors: [0x5a9]
---
0x5a8 JUMPDEST
---
0x5a8: JUMPDEST 
---
Entry stack: [V10, 0x18f, V151, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x18f, V151, 0x1]

================================

Block 0x5a9
[0x5a9:0x5ad]
---
Predecessors: [0x5a8]
Successors: [0x18f]
---
0x5a9 JUMPDEST
0x5aa SWAP2
0x5ab SWAP1
0x5ac POP
0x5ad JUMP
---
0x5a9: JUMPDEST 
0x5ad: JUMP 0x18f
---
Entry stack: [V10, 0x18f, V151, 0x1]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, 0x1]

================================

Block 0x5ae
[0x5ae:0x5ba]
---
Predecessors: [0x1fd]
Successors: [0x5bb, 0x5bc]
---
0x5ae JUMPDEST
0x5af PUSH1 0x4
0x5b1 DUP1
0x5b2 SLOAD
0x5b3 DUP3
0x5b4 SWAP1
0x5b5 DUP2
0x5b6 LT
0x5b7 PUSH2 0x5bc
0x5ba JUMPI
---
0x5ae: JUMPDEST 
0x5af: V568 = 0x4
0x5b2: V569 = S[0x4]
0x5b6: V570 = LT V168 V569
0x5b7: V571 = 0x5bc
0x5ba: JUMPI 0x5bc V570
---
Entry stack: [V10, 0x208, V168]
Stack pops: 1
Stack additions: [S0, 0x4, S0]
Exit stack: [V10, 0x208, V168, 0x4, V168]

================================

Block 0x5bb
[0x5bb:0x5bb]
---
Predecessors: [0x5ae]
Successors: []
---
0x5bb INVALID
---
0x5bb: INVALID 
---
Entry stack: [V10, 0x208, V168, 0x4, V168]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x208, V168, 0x4, V168]

================================

Block 0x5bc
[0x5bc:0x5c9]
---
Predecessors: [0x5ae]
Successors: [0x5ca]
---
0x5bc JUMPDEST
0x5bd SWAP1
0x5be PUSH1 0x0
0x5c0 MSTORE
0x5c1 PUSH1 0x20
0x5c3 PUSH1 0x0
0x5c5 SHA3
0x5c6 SWAP1
0x5c7 ADD
0x5c8 PUSH1 0x0
---
0x5bc: JUMPDEST 
0x5be: V572 = 0x0
0x5c0: M[0x0] = 0x4
0x5c1: V573 = 0x20
0x5c3: V574 = 0x0
0x5c5: V575 = SHA3 0x0 0x20
0x5c7: V576 = ADD V168 V575
0x5c8: V577 = 0x0
---
Entry stack: [V10, 0x208, V168, 0x4, V168]
Stack pops: 2
Stack additions: [V576, 0x0]
Exit stack: [V10, 0x208, V168, V576, 0x0]

================================

Block 0x5ca
[0x5ca:0x5df]
---
Predecessors: [0x5bc]
Successors: [0x208]
---
0x5ca JUMPDEST
0x5cb SWAP2
0x5cc POP
0x5cd SLOAD
0x5ce SWAP1
0x5cf PUSH2 0x100
0x5d2 EXP
0x5d3 SWAP1
0x5d4 DIV
0x5d5 PUSH1 0x1
0x5d7 PUSH1 0xa0
0x5d9 PUSH1 0x2
0x5db EXP
0x5dc SUB
0x5dd AND
0x5de DUP2
0x5df JUMP
---
0x5ca: JUMPDEST 
0x5cd: V578 = S[V576]
0x5cf: V579 = 0x100
0x5d2: V580 = EXP 0x100 0x0
0x5d4: V581 = DIV V578 0x1
0x5d5: V582 = 0x1
0x5d7: V583 = 0xa0
0x5d9: V584 = 0x2
0x5db: V585 = EXP 0x2 0xa0
0x5dc: V586 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5dd: V587 = AND 0xffffffffffffffffffffffffffffffffffffffff V581
0x5df: JUMP 0x208
---
Entry stack: [V10, 0x208, V168, V576, 0x0]
Stack pops: 4
Stack additions: [S3, V587]
Exit stack: [V10, 0x208, V587]

================================

Block 0x5e0
[0x5e0:0x5f6]
---
Predecessors: [0x22f]
Successors: [0x5f7, 0x5fb]
---
0x5e0 JUMPDEST
0x5e1 PUSH1 0x0
0x5e3 SLOAD
0x5e4 CALLER
0x5e5 PUSH1 0x1
0x5e7 PUSH1 0xa0
0x5e9 PUSH1 0x2
0x5eb EXP
0x5ec SUB
0x5ed SWAP1
0x5ee DUP2
0x5ef AND
0x5f0 SWAP2
0x5f1 AND
0x5f2 EQ
0x5f3 PUSH2 0x5fb
0x5f6 JUMPI
---
0x5e0: JUMPDEST 
0x5e1: V588 = 0x0
0x5e3: V589 = S[0x0]
0x5e4: V590 = CALLER
0x5e5: V591 = 0x1
0x5e7: V592 = 0xa0
0x5e9: V593 = 0x2
0x5eb: V594 = EXP 0x2 0xa0
0x5ec: V595 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ef: V596 = AND 0xffffffffffffffffffffffffffffffffffffffff V590
0x5f1: V597 = AND V589 0xffffffffffffffffffffffffffffffffffffffff
0x5f2: V598 = EQ V597 V596
0x5f3: V599 = 0x5fb
0x5f6: JUMPI 0x5fb V598
---
Entry stack: [V10, 0x237]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x237]

================================

Block 0x5f7
[0x5f7:0x5fa]
---
Predecessors: [0x5e0]
Successors: []
---
0x5f7 PUSH1 0x0
0x5f9 DUP1
0x5fa REVERT
---
0x5f7: V600 = 0x0
0x5fa: REVERT 0x0 0x0
---
Entry stack: [V10, 0x237]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x237]

================================

Block 0x5fb
[0x5fb:0x608]
---
Predecessors: [0x5e0]
Successors: []
---
0x5fb JUMPDEST
0x5fc PUSH1 0x0
0x5fe SLOAD
0x5ff PUSH1 0x1
0x601 PUSH1 0xa0
0x603 PUSH1 0x2
0x605 EXP
0x606 SUB
0x607 AND
0x608 SELFDESTRUCT
---
0x5fb: JUMPDEST 
0x5fc: V601 = 0x0
0x5fe: V602 = S[0x0]
0x5ff: V603 = 0x1
0x601: V604 = 0xa0
0x603: V605 = 0x2
0x605: V606 = EXP 0x2 0xa0
0x606: V607 = SUB 0x10000000000000000000000000000000000000000 0x1
0x607: V608 = AND 0xffffffffffffffffffffffffffffffffffffffff V602
0x608: SELFDESTRUCT V608
---
Entry stack: [V10, 0x237]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x237]

================================

Block 0x609
[0x609:0x609]
---
Predecessors: []
Successors: [0x60a]
---
0x609 JUMPDEST
---
0x609: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x60a
[0x60a:0x60b]
---
Predecessors: [0x609]
Successors: []
Has unresolved jump.
---
0x60a JUMPDEST
0x60b JUMP
---
0x60a: JUMPDEST 
0x60b: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x60c
[0x60c:0x622]
---
Predecessors: [0x244]
Successors: [0x623, 0x627]
---
0x60c JUMPDEST
0x60d PUSH1 0x0
0x60f SLOAD
0x610 CALLER
0x611 PUSH1 0x1
0x613 PUSH1 0xa0
0x615 PUSH1 0x2
0x617 EXP
0x618 SUB
0x619 SWAP1
0x61a DUP2
0x61b AND
0x61c SWAP2
0x61d AND
0x61e EQ
0x61f PUSH2 0x627
0x622 JUMPI
---
0x60c: JUMPDEST 
0x60d: V609 = 0x0
0x60f: V610 = S[0x0]
0x610: V611 = CALLER
0x611: V612 = 0x1
0x613: V613 = 0xa0
0x615: V614 = 0x2
0x617: V615 = EXP 0x2 0xa0
0x618: V616 = SUB 0x10000000000000000000000000000000000000000 0x1
0x61b: V617 = AND 0xffffffffffffffffffffffffffffffffffffffff V611
0x61d: V618 = AND V610 0xffffffffffffffffffffffffffffffffffffffff
0x61e: V619 = EQ V618 V617
0x61f: V620 = 0x627
0x622: JUMPI 0x627 V619
---
Entry stack: [V10, 0x237, V201]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x237, V201]

================================

Block 0x623
[0x623:0x626]
---
Predecessors: [0x60c]
Successors: []
---
0x623 PUSH1 0x0
0x625 DUP1
0x626 REVERT
---
0x623: V621 = 0x0
0x626: REVERT 0x0 0x0
---
Entry stack: [V10, 0x237, V201]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x237, V201]

================================

Block 0x627
[0x627:0x65f]
---
Predecessors: [0x60c]
Successors: [0x660, 0x664]
---
0x627 JUMPDEST
0x628 DUP1
0x629 PUSH1 0x1
0x62b PUSH1 0xa0
0x62d PUSH1 0x2
0x62f EXP
0x630 SUB
0x631 AND
0x632 PUSH2 0x8fc
0x635 ADDRESS
0x636 PUSH1 0x1
0x638 PUSH1 0xa0
0x63a PUSH1 0x2
0x63c EXP
0x63d SUB
0x63e AND
0x63f BALANCE
0x640 SWAP1
0x641 DUP2
0x642 ISZERO
0x643 MUL
0x644 SWAP1
0x645 PUSH1 0x40
0x647 MLOAD
0x648 PUSH1 0x0
0x64a PUSH1 0x40
0x64c MLOAD
0x64d DUP1
0x64e DUP4
0x64f SUB
0x650 DUP2
0x651 DUP6
0x652 DUP9
0x653 DUP9
0x654 CALL
0x655 SWAP4
0x656 POP
0x657 POP
0x658 POP
0x659 POP
0x65a ISZERO
0x65b ISZERO
0x65c PUSH2 0x664
0x65f JUMPI
---
0x627: JUMPDEST 
0x629: V622 = 0x1
0x62b: V623 = 0xa0
0x62d: V624 = 0x2
0x62f: V625 = EXP 0x2 0xa0
0x630: V626 = SUB 0x10000000000000000000000000000000000000000 0x1
0x631: V627 = AND 0xffffffffffffffffffffffffffffffffffffffff V201
0x632: V628 = 0x8fc
0x635: V629 = ADDRESS
0x636: V630 = 0x1
0x638: V631 = 0xa0
0x63a: V632 = 0x2
0x63c: V633 = EXP 0x2 0xa0
0x63d: V634 = SUB 0x10000000000000000000000000000000000000000 0x1
0x63e: V635 = AND 0xffffffffffffffffffffffffffffffffffffffff V629
0x63f: V636 = BALANCE V635
0x642: V637 = ISZERO V636
0x643: V638 = MUL V637 0x8fc
0x645: V639 = 0x40
0x647: V640 = M[0x40]
0x648: V641 = 0x0
0x64a: V642 = 0x40
0x64c: V643 = M[0x40]
0x64f: V644 = SUB V640 V643
0x654: V645 = CALL V638 V627 V636 V643 V644 V643 0x0
0x65a: V646 = ISZERO V645
0x65b: V647 = ISZERO V646
0x65c: V648 = 0x664
0x65f: JUMPI 0x664 V647
---
Entry stack: [V10, 0x237, V201]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x237, V201]

================================

Block 0x660
[0x660:0x663]
---
Predecessors: [0x627]
Successors: []
---
0x660 PUSH1 0x0
0x662 DUP1
0x663 REVERT
---
0x660: V649 = 0x0
0x663: REVERT 0x0 0x0
---
Entry stack: [V10, 0x237, V201]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x237, V201]

================================

Block 0x664
[0x664:0x664]
---
Predecessors: [0x627]
Successors: [0x665]
---
0x664 JUMPDEST
---
0x664: JUMPDEST 
---
Entry stack: [V10, 0x237, V201]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x237, V201]

================================

Block 0x665
[0x665:0x665]
---
Predecessors: [0x664]
Successors: [0x666]
---
0x665 JUMPDEST
---
0x665: JUMPDEST 
---
Entry stack: [V10, 0x237, V201]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x237, V201]

================================

Block 0x666
[0x666:0x668]
---
Predecessors: [0x665]
Successors: [0x237]
---
0x666 JUMPDEST
0x667 POP
0x668 JUMP
---
0x666: JUMPDEST 
0x668: JUMP 0x237
---
Entry stack: [V10, 0x237, V201]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x669
[0x669:0x68e]
---
Predecessors: [0x265]
Successors: [0x68f, 0x693]
---
0x669 JUMPDEST
0x66a PUSH1 0x1
0x66c PUSH1 0xa0
0x66e PUSH1 0x2
0x670 EXP
0x671 SUB
0x672 CALLER
0x673 AND
0x674 PUSH1 0x0
0x676 SWAP1
0x677 DUP2
0x678 MSTORE
0x679 PUSH1 0x2
0x67b PUSH1 0x20
0x67d MSTORE
0x67e PUSH1 0x40
0x680 DUP2
0x681 SHA3
0x682 SLOAD
0x683 PUSH1 0xff
0x685 AND
0x686 ISZERO
0x687 ISZERO
0x688 PUSH1 0x1
0x68a EQ
0x68b PUSH2 0x693
0x68e JUMPI
---
0x669: JUMPDEST 
0x66a: V650 = 0x1
0x66c: V651 = 0xa0
0x66e: V652 = 0x2
0x670: V653 = EXP 0x2 0xa0
0x671: V654 = SUB 0x10000000000000000000000000000000000000000 0x1
0x672: V655 = CALLER
0x673: V656 = AND V655 0xffffffffffffffffffffffffffffffffffffffff
0x674: V657 = 0x0
0x678: M[0x0] = V656
0x679: V658 = 0x2
0x67b: V659 = 0x20
0x67d: M[0x20] = 0x2
0x67e: V660 = 0x40
0x681: V661 = SHA3 0x0 0x40
0x682: V662 = S[V661]
0x683: V663 = 0xff
0x685: V664 = AND 0xff V662
0x686: V665 = ISZERO V664
0x687: V666 = ISZERO V665
0x688: V667 = 0x1
0x68a: V668 = EQ 0x1 V666
0x68b: V669 = 0x693
0x68e: JUMPI 0x693 V668
---
Entry stack: [V10, 0x18f, V215, V217]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x18f, V215, V217, 0x0]

================================

Block 0x68f
[0x68f:0x692]
---
Predecessors: [0x669]
Successors: []
---
0x68f PUSH1 0x0
0x691 DUP1
0x692 REVERT
---
0x68f: V670 = 0x0
0x692: REVERT 0x0 0x0
---
Entry stack: [V10, 0x18f, V215, V217, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x18f, V215, V217, 0x0]

================================

Block 0x693
[0x693:0x69b]
---
Predecessors: [0x669]
Successors: [0xa95]
---
0x693 JUMPDEST
0x694 PUSH2 0x69c
0x697 DUP4
0x698 PUSH2 0xa95
0x69b JUMP
---
0x693: JUMPDEST 
0x694: V671 = 0x69c
0x698: V672 = 0xa95
0x69b: JUMP 0xa95
---
Entry stack: [V10, 0x18f, V215, V217, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x69c, S2]
Exit stack: [V10, 0x18f, V215, V217, 0x0, 0x69c, V215]

================================

Block 0x69c
[0x69c:0x6c5]
---
Predecessors: [0xb22]
Successors: [0xb27]
---
0x69c JUMPDEST
0x69d POP
0x69e PUSH1 0x1
0x6a0 PUSH1 0xa0
0x6a2 PUSH1 0x2
0x6a4 EXP
0x6a5 SUB
0x6a6 DUP4
0x6a7 AND
0x6a8 PUSH1 0x0
0x6aa SWAP1
0x6ab DUP2
0x6ac MSTORE
0x6ad PUSH1 0x5
0x6af PUSH1 0x20
0x6b1 MSTORE
0x6b2 PUSH1 0x40
0x6b4 SWAP1
0x6b5 SHA3
0x6b6 SLOAD
0x6b7 PUSH2 0x6c6
0x6ba SWAP1
0x6bb DUP4
0x6bc PUSH4 0xffffffff
0x6c1 PUSH2 0xb27
0x6c4 AND
0x6c5 JUMP
---
0x69c: JUMPDEST 
0x69e: V673 = 0x1
0x6a0: V674 = 0xa0
0x6a2: V675 = 0x2
0x6a4: V676 = EXP 0x2 0xa0
0x6a5: V677 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6a7: V678 = AND V215 0xffffffffffffffffffffffffffffffffffffffff
0x6a8: V679 = 0x0
0x6ac: M[0x0] = V678
0x6ad: V680 = 0x5
0x6af: V681 = 0x20
0x6b1: M[0x20] = 0x5
0x6b2: V682 = 0x40
0x6b5: V683 = SHA3 0x0 0x40
0x6b6: V684 = S[V683]
0x6b7: V685 = 0x6c6
0x6bc: V686 = 0xffffffff
0x6c1: V687 = 0xb27
0x6c4: V688 = AND 0xb27 0xffffffff
0x6c5: JUMP 0xb27
---
Entry stack: [V10, 0x18f, V215, S2, {0x0, 0x18f}, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, 0x6c6, V684, S2]
Exit stack: [V10, 0x18f, V215, S2, {0x0, 0x18f}, 0x6c6, V684, S2]

================================

Block 0x6c6
[0x6c6:0x757]
---
Predecessors: [0xb3a]
Successors: [0x758]
---
0x6c6 JUMPDEST
0x6c7 PUSH1 0x1
0x6c9 PUSH1 0xa0
0x6cb PUSH1 0x2
0x6cd EXP
0x6ce SUB
0x6cf DUP1
0x6d0 DUP6
0x6d1 AND
0x6d2 PUSH1 0x0
0x6d4 DUP2
0x6d5 DUP2
0x6d6 MSTORE
0x6d7 PUSH1 0x5
0x6d9 PUSH1 0x20
0x6db MSTORE
0x6dc PUSH1 0x40
0x6de SWAP1
0x6df DUP2
0x6e0 SWAP1
0x6e1 SHA3
0x6e2 SWAP4
0x6e3 SWAP1
0x6e4 SWAP4
0x6e5 SSTORE
0x6e6 SWAP2
0x6e7 CALLER
0x6e8 SWAP1
0x6e9 SWAP2
0x6ea AND
0x6eb SWAP1
0x6ec PUSH32 0x99affe65171b929cf897471b0e82d82c6cc3406b53fdbc068ea3b174e7713176
0x70d SWAP1
0x70e DUP6
0x70f SWAP1
0x710 MLOAD
0x711 SWAP1
0x712 DUP2
0x713 MSTORE
0x714 PUSH1 0x40
0x716 PUSH1 0x20
0x718 DUP3
0x719 ADD
0x71a DUP2
0x71b SWAP1
0x71c MSTORE
0x71d PUSH1 0x1
0x71f DUP2
0x720 DUP4
0x721 ADD
0x722 MSTORE
0x723 PUSH32 0x2b00000000000000000000000000000000000000000000000000000000000000
0x744 PUSH1 0x60
0x746 DUP4
0x747 ADD
0x748 MSTORE
0x749 PUSH1 0x80
0x74b SWAP1
0x74c SWAP2
0x74d ADD
0x74e SWAP1
0x74f MLOAD
0x750 DUP1
0x751 SWAP2
0x752 SUB
0x753 SWAP1
0x754 LOG3
0x755 POP
0x756 PUSH1 0x1
---
0x6c6: JUMPDEST 
0x6c7: V689 = 0x1
0x6c9: V690 = 0xa0
0x6cb: V691 = 0x2
0x6cd: V692 = EXP 0x2 0xa0
0x6ce: V693 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6d1: V694 = AND V215 0xffffffffffffffffffffffffffffffffffffffff
0x6d2: V695 = 0x0
0x6d6: M[0x0] = V694
0x6d7: V696 = 0x5
0x6d9: V697 = 0x20
0x6db: M[0x20] = 0x5
0x6dc: V698 = 0x40
0x6e1: V699 = SHA3 0x0 0x40
0x6e5: S[V699] = V1046
0x6e7: V700 = CALLER
0x6ea: V701 = AND 0xffffffffffffffffffffffffffffffffffffffff V700
0x6ec: V702 = 0x99affe65171b929cf897471b0e82d82c6cc3406b53fdbc068ea3b174e7713176
0x710: V703 = M[0x40]
0x713: M[V703] = S2
0x714: V704 = 0x40
0x716: V705 = 0x20
0x719: V706 = ADD V703 0x20
0x71c: M[V706] = 0x40
0x71d: V707 = 0x1
0x721: V708 = ADD V703 0x40
0x722: M[V708] = 0x1
0x723: V709 = 0x2b00000000000000000000000000000000000000000000000000000000000000
0x744: V710 = 0x60
0x747: V711 = ADD V703 0x60
0x748: M[V711] = 0x2b00000000000000000000000000000000000000000000000000000000000000
0x749: V712 = 0x80
0x74d: V713 = ADD V703 0x80
0x74f: V714 = M[0x40]
0x752: V715 = SUB V713 V714
0x754: LOG V714 V715 0x99affe65171b929cf897471b0e82d82c6cc3406b53fdbc068ea3b174e7713176 V701 V694
0x756: V716 = 0x1
---
Entry stack: [V10, 0x18f, V215, S2, {0x0, 0x18f}, V1046]
Stack pops: 4
Stack additions: [S3, S2, 0x1]
Exit stack: [V10, 0x18f, V215, S2, 0x1]

================================

Block 0x758
[0x758:0x758]
---
Predecessors: [0x6c6]
Successors: [0x759]
---
0x758 JUMPDEST
---
0x758: JUMPDEST 
---
Entry stack: [V10, 0x18f, V215, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x18f, V215, S1, 0x1]

================================

Block 0x759
[0x759:0x75e]
---
Predecessors: [0x758]
Successors: [0x18f]
---
0x759 JUMPDEST
0x75a SWAP3
0x75b SWAP2
0x75c POP
0x75d POP
0x75e JUMP
---
0x759: JUMPDEST 
0x75e: JUMP 0x18f
---
Entry stack: [V10, 0x18f, V215, S1, 0x1]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, 0x1]

================================

Block 0x75f
[0x75f:0x784]
---
Predecessors: [0x29b]
Successors: [0x785, 0x789]
---
0x75f JUMPDEST
0x760 PUSH1 0x1
0x762 PUSH1 0xa0
0x764 PUSH1 0x2
0x766 EXP
0x767 SUB
0x768 CALLER
0x769 AND
0x76a PUSH1 0x0
0x76c SWAP1
0x76d DUP2
0x76e MSTORE
0x76f PUSH1 0x2
0x771 PUSH1 0x20
0x773 MSTORE
0x774 PUSH1 0x40
0x776 DUP2
0x777 SHA3
0x778 SLOAD
0x779 PUSH1 0xff
0x77b AND
0x77c ISZERO
0x77d ISZERO
0x77e PUSH1 0x1
0x780 EQ
0x781 PUSH2 0x789
0x784 JUMPI
---
0x75f: JUMPDEST 
0x760: V717 = 0x1
0x762: V718 = 0xa0
0x764: V719 = 0x2
0x766: V720 = EXP 0x2 0xa0
0x767: V721 = SUB 0x10000000000000000000000000000000000000000 0x1
0x768: V722 = CALLER
0x769: V723 = AND V722 0xffffffffffffffffffffffffffffffffffffffff
0x76a: V724 = 0x0
0x76e: M[0x0] = V723
0x76f: V725 = 0x2
0x771: V726 = 0x20
0x773: M[0x20] = 0x2
0x774: V727 = 0x40
0x777: V728 = SHA3 0x0 0x40
0x778: V729 = S[V728]
0x779: V730 = 0xff
0x77b: V731 = AND 0xff V729
0x77c: V732 = ISZERO V731
0x77d: V733 = ISZERO V732
0x77e: V734 = 0x1
0x780: V735 = EQ 0x1 V733
0x781: V736 = 0x789
0x784: JUMPI 0x789 V735
---
Entry stack: [V10, 0x18f, V240, V243, V245]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x18f, V240, V243, V245, 0x0]

================================

Block 0x785
[0x785:0x788]
---
Predecessors: [0x75f]
Successors: []
---
0x785 PUSH1 0x0
0x787 DUP1
0x788 REVERT
---
0x785: V737 = 0x0
0x788: REVERT 0x0 0x0
---
Entry stack: [V10, 0x18f, V240, V243, V245, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x18f, V240, V243, V245, 0x0]

================================

Block 0x789
[0x789:0x7b4]
---
Predecessors: [0x75f]
Successors: [0x7b5]
---
0x789 JUMPDEST
0x78a POP
0x78b PUSH1 0x1
0x78d PUSH1 0xa0
0x78f PUSH1 0x2
0x791 EXP
0x792 SUB
0x793 DUP1
0x794 DUP5
0x795 AND
0x796 PUSH1 0x0
0x798 SWAP1
0x799 DUP2
0x79a MSTORE
0x79b PUSH1 0x3
0x79d PUSH1 0x20
0x79f SWAP1
0x7a0 DUP2
0x7a1 MSTORE
0x7a2 PUSH1 0x40
0x7a4 DUP1
0x7a5 DUP4
0x7a6 SHA3
0x7a7 SWAP4
0x7a8 DUP7
0x7a9 AND
0x7aa DUP4
0x7ab MSTORE
0x7ac SWAP3
0x7ad SWAP1
0x7ae MSTORE
0x7af SHA3
0x7b0 DUP2
0x7b1 SWAP1
0x7b2 SSTORE
0x7b3 PUSH1 0x1
---
0x789: JUMPDEST 
0x78b: V738 = 0x1
0x78d: V739 = 0xa0
0x78f: V740 = 0x2
0x791: V741 = EXP 0x2 0xa0
0x792: V742 = SUB 0x10000000000000000000000000000000000000000 0x1
0x795: V743 = AND V240 0xffffffffffffffffffffffffffffffffffffffff
0x796: V744 = 0x0
0x79a: M[0x0] = V743
0x79b: V745 = 0x3
0x79d: V746 = 0x20
0x7a1: M[0x20] = 0x3
0x7a2: V747 = 0x40
0x7a6: V748 = SHA3 0x0 0x40
0x7a9: V749 = AND V243 0xffffffffffffffffffffffffffffffffffffffff
0x7ab: M[0x0] = V749
0x7ae: M[0x20] = V748
0x7af: V750 = SHA3 0x0 0x40
0x7b2: S[V750] = V245
0x7b3: V751 = 0x1
---
Entry stack: [V10, 0x18f, V240, V243, V245, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, 0x1]
Exit stack: [V10, 0x18f, V240, V243, V245, 0x1]

================================

Block 0x7b5
[0x7b5:0x7b5]
---
Predecessors: [0x789]
Successors: [0x7b6]
---
0x7b5 JUMPDEST
---
0x7b5: JUMPDEST 
---
Entry stack: [V10, 0x18f, V240, V243, V245, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x18f, V240, V243, V245, 0x1]

================================

Block 0x7b6
[0x7b6:0x7bc]
---
Predecessors: [0x7b5]
Successors: [0x18f]
---
0x7b6 JUMPDEST
0x7b7 SWAP4
0x7b8 SWAP3
0x7b9 POP
0x7ba POP
0x7bb POP
0x7bc JUMP
---
0x7b6: JUMPDEST 
0x7bc: JUMP 0x18f
---
Entry stack: [V10, 0x18f, V240, V243, V245, 0x1]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V10, 0x1]

================================

Block 0x7bd
[0x7bd:0x7d1]
---
Predecessors: [0x2d7]
Successors: [0x18f]
---
0x7bd JUMPDEST
0x7be PUSH1 0x2
0x7c0 PUSH1 0x20
0x7c2 MSTORE
0x7c3 PUSH1 0x0
0x7c5 SWAP1
0x7c6 DUP2
0x7c7 MSTORE
0x7c8 PUSH1 0x40
0x7ca SWAP1
0x7cb SHA3
0x7cc SLOAD
0x7cd PUSH1 0xff
0x7cf AND
0x7d0 DUP2
0x7d1 JUMP
---
0x7bd: JUMPDEST 
0x7be: V752 = 0x2
0x7c0: V753 = 0x20
0x7c2: M[0x20] = 0x2
0x7c3: V754 = 0x0
0x7c7: M[0x0] = V268
0x7c8: V755 = 0x40
0x7cb: V756 = SHA3 0x0 0x40
0x7cc: V757 = S[V756]
0x7cd: V758 = 0xff
0x7cf: V759 = AND 0xff V757
0x7d1: JUMP 0x18f
---
Entry stack: [V10, 0x18f, V268]
Stack pops: 2
Stack additions: [S1, V759]
Exit stack: [V10, 0x18f, V759]

================================

Block 0x7d2
[0x7d2:0x7f7]
---
Predecessors: [0x30a]
Successors: [0x7f8, 0x7fc]
---
0x7d2 JUMPDEST
0x7d3 PUSH1 0x1
0x7d5 PUSH1 0xa0
0x7d7 PUSH1 0x2
0x7d9 EXP
0x7da SUB
0x7db CALLER
0x7dc AND
0x7dd PUSH1 0x0
0x7df SWAP1
0x7e0 DUP2
0x7e1 MSTORE
0x7e2 PUSH1 0x2
0x7e4 PUSH1 0x20
0x7e6 MSTORE
0x7e7 PUSH1 0x40
0x7e9 DUP2
0x7ea SHA3
0x7eb SLOAD
0x7ec PUSH1 0xff
0x7ee AND
0x7ef ISZERO
0x7f0 ISZERO
0x7f1 PUSH1 0x1
0x7f3 EQ
0x7f4 PUSH2 0x7fc
0x7f7 JUMPI
---
0x7d2: JUMPDEST 
0x7d3: V760 = 0x1
0x7d5: V761 = 0xa0
0x7d7: V762 = 0x2
0x7d9: V763 = EXP 0x2 0xa0
0x7da: V764 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7db: V765 = CALLER
0x7dc: V766 = AND V765 0xffffffffffffffffffffffffffffffffffffffff
0x7dd: V767 = 0x0
0x7e1: M[0x0] = V766
0x7e2: V768 = 0x2
0x7e4: V769 = 0x20
0x7e6: M[0x20] = 0x2
0x7e7: V770 = 0x40
0x7ea: V771 = SHA3 0x0 0x40
0x7eb: V772 = S[V771]
0x7ec: V773 = 0xff
0x7ee: V774 = AND 0xff V772
0x7ef: V775 = ISZERO V774
0x7f0: V776 = ISZERO V775
0x7f1: V777 = 0x1
0x7f3: V778 = EQ 0x1 V776
0x7f4: V779 = 0x7fc
0x7f7: JUMPI 0x7fc V778
---
Entry stack: [V10, 0x18f, V291, V293]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x18f, V291, V293, 0x0]

================================

Block 0x7f8
[0x7f8:0x7fb]
---
Predecessors: [0x7d2]
Successors: []
---
0x7f8 PUSH1 0x0
0x7fa DUP1
0x7fb REVERT
---
0x7f8: V780 = 0x0
0x7fb: REVERT 0x0 0x0
---
Entry stack: [V10, 0x18f, V291, V293, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x18f, V291, V293, 0x0]

================================

Block 0x7fc
[0x7fc:0x804]
---
Predecessors: [0x7d2]
Successors: [0x4fb]
---
0x7fc JUMPDEST
0x7fd PUSH2 0x805
0x800 DUP4
0x801 PUSH2 0x4fb
0x804 JUMP
---
0x7fc: JUMPDEST 
0x7fd: V781 = 0x805
0x801: V782 = 0x4fb
0x804: JUMP 0x4fb
---
Entry stack: [V10, 0x18f, V291, V293, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x805, S2]
Exit stack: [V10, 0x18f, V291, V293, 0x0, 0x805, V291]

================================

Block 0x805
[0x805:0x80b]
---
Predecessors: [0x567]
Successors: [0x80c, 0x810]
---
0x805 JUMPDEST
0x806 ISZERO
0x807 ISZERO
0x808 PUSH2 0x810
0x80b JUMPI
---
0x805: JUMPDEST 
0x806: V783 = ISZERO S0
0x807: V784 = ISZERO V783
0x808: V785 = 0x810
0x80b: JUMPI 0x810 V784
---
Entry stack: [V10, 0x18f, V215, S5, {0x0, 0x18f}, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x18f, V215, S5, {0x0, 0x18f}, S3, S2, S1]

================================

Block 0x80c
[0x80c:0x80f]
---
Predecessors: [0x805]
Successors: []
---
0x80c PUSH1 0x0
0x80e DUP1
0x80f REVERT
---
0x80c: V786 = 0x0
0x80f: REVERT 0x0 0x0
---
Entry stack: [V10, 0x18f, V215, S4, {0x0, 0x18f}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x18f, V215, S4, {0x0, 0x18f}, S2, S1, S0]

================================

Block 0x810
[0x810:0x838]
---
Predecessors: [0x805]
Successors: [0xb41]
---
0x810 JUMPDEST
0x811 PUSH1 0x1
0x813 PUSH1 0xa0
0x815 PUSH1 0x2
0x817 EXP
0x818 SUB
0x819 DUP4
0x81a AND
0x81b PUSH1 0x0
0x81d SWAP1
0x81e DUP2
0x81f MSTORE
0x820 PUSH1 0x5
0x822 PUSH1 0x20
0x824 MSTORE
0x825 PUSH1 0x40
0x827 SWAP1
0x828 SHA3
0x829 SLOAD
0x82a PUSH2 0x839
0x82d SWAP1
0x82e DUP4
0x82f PUSH4 0xffffffff
0x834 PUSH2 0xb41
0x837 AND
0x838 JUMP
---
0x810: JUMPDEST 
0x811: V787 = 0x1
0x813: V788 = 0xa0
0x815: V789 = 0x2
0x817: V790 = EXP 0x2 0xa0
0x818: V791 = SUB 0x10000000000000000000000000000000000000000 0x1
0x81a: V792 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x81b: V793 = 0x0
0x81f: M[0x0] = V792
0x820: V794 = 0x5
0x822: V795 = 0x20
0x824: M[0x20] = 0x5
0x825: V796 = 0x40
0x828: V797 = SHA3 0x0 0x40
0x829: V798 = S[V797]
0x82a: V799 = 0x839
0x82f: V800 = 0xffffffff
0x834: V801 = 0xb41
0x837: V802 = AND 0xb41 0xffffffff
0x838: JUMP 0xb41
---
Entry stack: [V10, 0x18f, V215, S4, {0x0, 0x18f}, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x839, V798, S1]
Exit stack: [V10, 0x18f, V215, S4, {0x0, 0x18f}, S2, S1, S0, 0x839, V798, S1]

================================

Block 0x839
[0x839:0x8ca]
---
Predecessors: [0xb52]
Successors: [0x8cb]
---
0x839 JUMPDEST
0x83a PUSH1 0x1
0x83c PUSH1 0xa0
0x83e PUSH1 0x2
0x840 EXP
0x841 SUB
0x842 DUP1
0x843 DUP6
0x844 AND
0x845 PUSH1 0x0
0x847 DUP2
0x848 DUP2
0x849 MSTORE
0x84a PUSH1 0x5
0x84c PUSH1 0x20
0x84e MSTORE
0x84f PUSH1 0x40
0x851 SWAP1
0x852 DUP2
0x853 SWAP1
0x854 SHA3
0x855 SWAP4
0x856 SWAP1
0x857 SWAP4
0x858 SSTORE
0x859 SWAP2
0x85a CALLER
0x85b SWAP1
0x85c SWAP2
0x85d AND
0x85e SWAP1
0x85f PUSH32 0x99affe65171b929cf897471b0e82d82c6cc3406b53fdbc068ea3b174e7713176
0x880 SWAP1
0x881 DUP6
0x882 SWAP1
0x883 MLOAD
0x884 SWAP1
0x885 DUP2
0x886 MSTORE
0x887 PUSH1 0x40
0x889 PUSH1 0x20
0x88b DUP3
0x88c ADD
0x88d DUP2
0x88e SWAP1
0x88f MSTORE
0x890 PUSH1 0x1
0x892 DUP2
0x893 DUP4
0x894 ADD
0x895 MSTORE
0x896 PUSH32 0x2d00000000000000000000000000000000000000000000000000000000000000
0x8b7 PUSH1 0x60
0x8b9 DUP4
0x8ba ADD
0x8bb MSTORE
0x8bc PUSH1 0x80
0x8be SWAP1
0x8bf SWAP2
0x8c0 ADD
0x8c1 SWAP1
0x8c2 MLOAD
0x8c3 DUP1
0x8c4 SWAP2
0x8c5 SUB
0x8c6 SWAP1
0x8c7 LOG3
0x8c8 POP
0x8c9 PUSH1 0x1
---
0x839: JUMPDEST 
0x83a: V803 = 0x1
0x83c: V804 = 0xa0
0x83e: V805 = 0x2
0x840: V806 = EXP 0x2 0xa0
0x841: V807 = SUB 0x10000000000000000000000000000000000000000 0x1
0x844: V808 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x845: V809 = 0x0
0x849: M[0x0] = V808
0x84a: V810 = 0x5
0x84c: V811 = 0x20
0x84e: M[0x20] = 0x5
0x84f: V812 = 0x40
0x854: V813 = SHA3 0x0 0x40
0x858: S[V813] = S0
0x85a: V814 = CALLER
0x85d: V815 = AND 0xffffffffffffffffffffffffffffffffffffffff V814
0x85f: V816 = 0x99affe65171b929cf897471b0e82d82c6cc3406b53fdbc068ea3b174e7713176
0x883: V817 = M[0x40]
0x886: M[V817] = S2
0x887: V818 = 0x40
0x889: V819 = 0x20
0x88c: V820 = ADD V817 0x20
0x88f: M[V820] = 0x40
0x890: V821 = 0x1
0x894: V822 = ADD V817 0x40
0x895: M[V822] = 0x1
0x896: V823 = 0x2d00000000000000000000000000000000000000000000000000000000000000
0x8b7: V824 = 0x60
0x8ba: V825 = ADD V817 0x60
0x8bb: M[V825] = 0x2d00000000000000000000000000000000000000000000000000000000000000
0x8bc: V826 = 0x80
0x8c0: V827 = ADD V817 0x80
0x8c2: V828 = M[0x40]
0x8c5: V829 = SUB V827 V828
0x8c7: LOG V828 V829 0x99affe65171b929cf897471b0e82d82c6cc3406b53fdbc068ea3b174e7713176 V815 V808
0x8c9: V830 = 0x1
---
Entry stack: [V10, 0x18f, V215, S5, {0x0, 0x18f}, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, 0x1]
Exit stack: [V10, 0x18f, V215, S5, {0x0, 0x18f}, S3, S2, 0x1]

================================

Block 0x8cb
[0x8cb:0x8cb]
---
Predecessors: [0x839]
Successors: [0x8cc]
---
0x8cb JUMPDEST
---
0x8cb: JUMPDEST 
---
Entry stack: [V10, 0x18f, V215, S4, {0x0, 0x18f}, S2, S1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x18f, V215, S4, {0x0, 0x18f}, S2, S1, 0x1]

================================

Block 0x8cc
[0x8cc:0x8d1]
---
Predecessors: [0x8cb]
Successors: [0x18f]
---
0x8cc JUMPDEST
0x8cd SWAP3
0x8ce SWAP2
0x8cf POP
0x8d0 POP
0x8d1 JUMP
---
0x8cc: JUMPDEST 
0x8d1: JUMP {0x0, 0x18f}
---
Entry stack: [V10, 0x18f, V215, S4, {0x0, 0x18f}, S2, S1, 0x1]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, 0x18f, V215, S4, 0x1]

================================

Block 0x8d2
[0x8d2:0x8ed]
---
Predecessors: [0x340]
Successors: [0x8ee, 0x8f2]
---
0x8d2 JUMPDEST
0x8d3 PUSH1 0x0
0x8d5 DUP1
0x8d6 SLOAD
0x8d7 DUP2
0x8d8 SWAP1
0x8d9 DUP2
0x8da SWAP1
0x8db CALLER
0x8dc PUSH1 0x1
0x8de PUSH1 0xa0
0x8e0 PUSH1 0x2
0x8e2 EXP
0x8e3 SUB
0x8e4 SWAP1
0x8e5 DUP2
0x8e6 AND
0x8e7 SWAP2
0x8e8 AND
0x8e9 EQ
0x8ea PUSH2 0x8f2
0x8ed JUMPI
---
0x8d2: JUMPDEST 
0x8d3: V831 = 0x0
0x8d6: V832 = S[0x0]
0x8db: V833 = CALLER
0x8dc: V834 = 0x1
0x8de: V835 = 0xa0
0x8e0: V836 = 0x2
0x8e2: V837 = EXP 0x2 0xa0
0x8e3: V838 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8e6: V839 = AND 0xffffffffffffffffffffffffffffffffffffffff V833
0x8e8: V840 = AND V832 0xffffffffffffffffffffffffffffffffffffffff
0x8e9: V841 = EQ V840 V839
0x8ea: V842 = 0x8f2
0x8ed: JUMPI 0x8f2 V841
---
Entry stack: [V10, 0x359, V316, V320]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V10, 0x359, V316, V320, 0x0, 0x0, 0x0]

================================

Block 0x8ee
[0x8ee:0x8f1]
---
Predecessors: [0x8d2]
Successors: []
---
0x8ee PUSH1 0x0
0x8f0 DUP1
0x8f1 REVERT
---
0x8ee: V843 = 0x0
0x8f1: REVERT 0x0 0x0
---
Entry stack: [V10, 0x359, V316, V320, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x359, V316, V320, 0x0, 0x0, 0x0]

================================

Block 0x8f2
[0x8f2:0x951]
---
Predecessors: [0x8d2]
Successors: [0x952]
---
0x8f2 JUMPDEST
0x8f3 PUSH1 0x1
0x8f5 PUSH1 0xa0
0x8f7 PUSH1 0x2
0x8f9 EXP
0x8fa SUB
0x8fb DUP6
0x8fc AND
0x8fd PUSH1 0x0
0x8ff DUP2
0x900 DUP2
0x901 MSTORE
0x902 PUSH1 0x2
0x904 PUSH1 0x20
0x906 MSTORE
0x907 PUSH1 0x40
0x909 SWAP1
0x90a DUP2
0x90b SWAP1
0x90c SHA3
0x90d DUP1
0x90e SLOAD
0x90f PUSH1 0xff
0x911 NOT
0x912 AND
0x913 DUP8
0x914 ISZERO
0x915 ISZERO
0x916 SWAP1
0x917 DUP2
0x918 OR
0x919 SWAP1
0x91a SWAP2
0x91b SSTORE
0x91c SWAP2
0x91d SWAP1
0x91e PUSH32 0x96bf850214e832f3d463d74cdf933b2aa73175e078496bd11f5e8afaeb2bbb9c
0x93f SWAP1
0x940 MLOAD
0x941 PUSH1 0x40
0x943 MLOAD
0x944 DUP1
0x945 SWAP2
0x946 SUB
0x947 SWAP1
0x948 LOG3
0x949 POP
0x94a PUSH1 0x1
0x94c SWAP2
0x94d POP
0x94e DUP4
0x94f SWAP1
0x950 POP
0x951 DUP3
---
0x8f2: JUMPDEST 
0x8f3: V844 = 0x1
0x8f5: V845 = 0xa0
0x8f7: V846 = 0x2
0x8f9: V847 = EXP 0x2 0xa0
0x8fa: V848 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8fc: V849 = AND V316 0xffffffffffffffffffffffffffffffffffffffff
0x8fd: V850 = 0x0
0x901: M[0x0] = V849
0x902: V851 = 0x2
0x904: V852 = 0x20
0x906: M[0x20] = 0x2
0x907: V853 = 0x40
0x90c: V854 = SHA3 0x0 0x40
0x90e: V855 = S[V854]
0x90f: V856 = 0xff
0x911: V857 = NOT 0xff
0x912: V858 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V855
0x914: V859 = ISZERO V320
0x915: V860 = ISZERO V859
0x918: V861 = OR V860 V858
0x91b: S[V854] = V861
0x91e: V862 = 0x96bf850214e832f3d463d74cdf933b2aa73175e078496bd11f5e8afaeb2bbb9c
0x940: V863 = M[0x40]
0x941: V864 = 0x40
0x943: V865 = M[0x40]
0x946: V866 = SUB V863 V865
0x948: LOG V865 V866 0x96bf850214e832f3d463d74cdf933b2aa73175e078496bd11f5e8afaeb2bbb9c V849 V860
0x94a: V867 = 0x1
---
Entry stack: [V10, 0x359, V316, V320, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, 0x1, S4, S3]
Exit stack: [V10, 0x359, V316, V320, 0x1, V316, V320]

================================

Block 0x952
[0x952:0x952]
---
Predecessors: [0x8f2]
Successors: [0x953]
---
0x952 JUMPDEST
---
0x952: JUMPDEST 
---
Entry stack: [V10, 0x359, V316, V320, 0x1, V316, V320]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x359, V316, V320, 0x1, V316, V320]

================================

Block 0x953
[0x953:0x959]
---
Predecessors: [0x952]
Successors: [0x359]
---
0x953 JUMPDEST
0x954 SWAP3
0x955 POP
0x956 SWAP3
0x957 POP
0x958 SWAP3
0x959 JUMP
---
0x953: JUMPDEST 
0x959: JUMP 0x359
---
Entry stack: [V10, 0x359, V316, V320, 0x1, V316, V320]
Stack pops: 6
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x1, V316, V320]

================================

Block 0x95a
[0x95a:0x976]
---
Predecessors: [0x394]
Successors: [0x977]
---
0x95a JUMPDEST
0x95b PUSH1 0x1
0x95d PUSH1 0xa0
0x95f PUSH1 0x2
0x961 EXP
0x962 SUB
0x963 DUP2
0x964 AND
0x965 PUSH1 0x0
0x967 SWAP1
0x968 DUP2
0x969 MSTORE
0x96a PUSH1 0x2
0x96c PUSH1 0x20
0x96e MSTORE
0x96f PUSH1 0x40
0x971 SWAP1
0x972 SHA3
0x973 SLOAD
0x974 PUSH1 0xff
0x976 AND
---
0x95a: JUMPDEST 
0x95b: V868 = 0x1
0x95d: V869 = 0xa0
0x95f: V870 = 0x2
0x961: V871 = EXP 0x2 0xa0
0x962: V872 = SUB 0x10000000000000000000000000000000000000000 0x1
0x964: V873 = AND V354 0xffffffffffffffffffffffffffffffffffffffff
0x965: V874 = 0x0
0x969: M[0x0] = V873
0x96a: V875 = 0x2
0x96c: V876 = 0x20
0x96e: M[0x20] = 0x2
0x96f: V877 = 0x40
0x972: V878 = SHA3 0x0 0x40
0x973: V879 = S[V878]
0x974: V880 = 0xff
0x976: V881 = AND 0xff V879
---
Entry stack: [V10, 0x18f, V354]
Stack pops: 1
Stack additions: [S0, V881]
Exit stack: [V10, 0x18f, V354, V881]

================================

Block 0x977
[0x977:0x97b]
---
Predecessors: [0x95a]
Successors: [0x18f]
---
0x977 JUMPDEST
0x978 SWAP2
0x979 SWAP1
0x97a POP
0x97b JUMP
---
0x977: JUMPDEST 
0x97b: JUMP 0x18f
---
Entry stack: [V10, 0x18f, V354, V881]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, V881]

================================

Block 0x97c
[0x97c:0x992]
---
Predecessors: [0x3c7]
Successors: [0x993, 0x997]
---
0x97c JUMPDEST
0x97d PUSH1 0x0
0x97f SLOAD
0x980 CALLER
0x981 PUSH1 0x1
0x983 PUSH1 0xa0
0x985 PUSH1 0x2
0x987 EXP
0x988 SUB
0x989 SWAP1
0x98a DUP2
0x98b AND
0x98c SWAP2
0x98d AND
0x98e EQ
0x98f PUSH2 0x997
0x992 JUMPI
---
0x97c: JUMPDEST 
0x97d: V882 = 0x0
0x97f: V883 = S[0x0]
0x980: V884 = CALLER
0x981: V885 = 0x1
0x983: V886 = 0xa0
0x985: V887 = 0x2
0x987: V888 = EXP 0x2 0xa0
0x988: V889 = SUB 0x10000000000000000000000000000000000000000 0x1
0x98b: V890 = AND 0xffffffffffffffffffffffffffffffffffffffff V884
0x98d: V891 = AND V883 0xffffffffffffffffffffffffffffffffffffffff
0x98e: V892 = EQ V891 V890
0x98f: V893 = 0x997
0x992: JUMPI 0x997 V892
---
Entry stack: [V10, 0x237, V377]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x237, V377]

================================

Block 0x993
[0x993:0x996]
---
Predecessors: [0x97c]
Successors: []
---
0x993 PUSH1 0x0
0x995 DUP1
0x996 REVERT
---
0x993: V894 = 0x0
0x996: REVERT 0x0 0x0
---
Entry stack: [V10, 0x237, V377]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x237, V377]

================================

Block 0x997
[0x997:0x9bf]
---
Predecessors: [0x97c]
Successors: [0x9c0]
---
0x997 JUMPDEST
0x998 PUSH1 0x0
0x99a DUP1
0x99b SLOAD
0x99c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9b1 NOT
0x9b2 AND
0x9b3 PUSH1 0x1
0x9b5 PUSH1 0xa0
0x9b7 PUSH1 0x2
0x9b9 EXP
0x9ba SUB
0x9bb DUP4
0x9bc AND
0x9bd OR
0x9be SWAP1
0x9bf SSTORE
---
0x997: JUMPDEST 
0x998: V895 = 0x0
0x99b: V896 = S[0x0]
0x99c: V897 = 0xffffffffffffffffffffffffffffffffffffffff
0x9b1: V898 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x9b2: V899 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V896
0x9b3: V900 = 0x1
0x9b5: V901 = 0xa0
0x9b7: V902 = 0x2
0x9b9: V903 = EXP 0x2 0xa0
0x9ba: V904 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9bc: V905 = AND V377 0xffffffffffffffffffffffffffffffffffffffff
0x9bd: V906 = OR V905 V899
0x9bf: S[0x0] = V906
---
Entry stack: [V10, 0x237, V377]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x237, V377]

================================

Block 0x9c0
[0x9c0:0x9c0]
---
Predecessors: [0x997]
Successors: [0x9c1]
---
0x9c0 JUMPDEST
---
0x9c0: JUMPDEST 
---
Entry stack: [V10, 0x237, V377]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x237, V377]

================================

Block 0x9c1
[0x9c1:0x9c3]
---
Predecessors: [0x9c0]
Successors: [0x237]
---
0x9c1 JUMPDEST
0x9c2 POP
0x9c3 JUMP
---
0x9c1: JUMPDEST 
0x9c3: JUMP 0x237
---
Entry stack: [V10, 0x237, V377]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x9c4
[0x9c4:0x9c7]
---
Predecessors: [0x3e8]
Successors: [0x9c8]
---
0x9c4 JUMPDEST
0x9c5 PUSH1 0x1
0x9c7 SLOAD
---
0x9c4: JUMPDEST 
0x9c5: V907 = 0x1
0x9c7: V908 = S[0x1]
---
Entry stack: [V10, 0x139]
Stack pops: 0
Stack additions: [V908]
Exit stack: [V10, 0x139, V908]

================================

Block 0x9c8
[0x9c8:0x9ca]
---
Predecessors: [0x9c4]
Successors: [0x139]
---
0x9c8 JUMPDEST
0x9c9 SWAP1
0x9ca JUMP
---
0x9c8: JUMPDEST 
0x9ca: JUMP 0x139
---
Entry stack: [V10, 0x139, V908]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, V908]

================================

Block 0x9cb
[0x9cb:0x9d9]
---
Predecessors: [0x40d]
Successors: [0x208]
---
0x9cb JUMPDEST
0x9cc PUSH1 0x0
0x9ce SLOAD
0x9cf PUSH1 0x1
0x9d1 PUSH1 0xa0
0x9d3 PUSH1 0x2
0x9d5 EXP
0x9d6 SUB
0x9d7 AND
0x9d8 DUP2
0x9d9 JUMP
---
0x9cb: JUMPDEST 
0x9cc: V909 = 0x0
0x9ce: V910 = S[0x0]
0x9cf: V911 = 0x1
0x9d1: V912 = 0xa0
0x9d3: V913 = 0x2
0x9d5: V914 = EXP 0x2 0xa0
0x9d6: V915 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9d7: V916 = AND 0xffffffffffffffffffffffffffffffffffffffff V910
0x9d9: JUMP 0x208
---
Entry stack: [V10, 0x208]
Stack pops: 1
Stack additions: [S0, V916]
Exit stack: [V10, 0x208, V916]

================================

Block 0x9da
[0x9da:0x9ff]
---
Predecessors: [0x43c]
Successors: [0xa00, 0xa04]
---
0x9da JUMPDEST
0x9db PUSH1 0x1
0x9dd PUSH1 0xa0
0x9df PUSH1 0x2
0x9e1 EXP
0x9e2 SUB
0x9e3 CALLER
0x9e4 AND
0x9e5 PUSH1 0x0
0x9e7 SWAP1
0x9e8 DUP2
0x9e9 MSTORE
0x9ea PUSH1 0x2
0x9ec PUSH1 0x20
0x9ee MSTORE
0x9ef PUSH1 0x40
0x9f1 DUP2
0x9f2 SHA3
0x9f3 SLOAD
0x9f4 PUSH1 0xff
0x9f6 AND
0x9f7 ISZERO
0x9f8 ISZERO
0x9f9 PUSH1 0x1
0x9fb EQ
0x9fc PUSH2 0xa04
0x9ff JUMPI
---
0x9da: JUMPDEST 
0x9db: V917 = 0x1
0x9dd: V918 = 0xa0
0x9df: V919 = 0x2
0x9e1: V920 = EXP 0x2 0xa0
0x9e2: V921 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9e3: V922 = CALLER
0x9e4: V923 = AND V922 0xffffffffffffffffffffffffffffffffffffffff
0x9e5: V924 = 0x0
0x9e9: M[0x0] = V923
0x9ea: V925 = 0x2
0x9ec: V926 = 0x20
0x9ee: M[0x20] = 0x2
0x9ef: V927 = 0x40
0x9f2: V928 = SHA3 0x0 0x40
0x9f3: V929 = S[V928]
0x9f4: V930 = 0xff
0x9f6: V931 = AND 0xff V929
0x9f7: V932 = ISZERO V931
0x9f8: V933 = ISZERO V932
0x9f9: V934 = 0x1
0x9fb: V935 = EQ 0x1 V933
0x9fc: V936 = 0xa04
0x9ff: JUMPI 0xa04 V935
---
Entry stack: [V10, 0x18f, V417]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x18f, V417, 0x0]

================================

Block 0xa00
[0xa00:0xa03]
---
Predecessors: [0x9da]
Successors: []
---
0xa00 PUSH1 0x0
0xa02 DUP1
0xa03 REVERT
---
0xa00: V937 = 0x0
0xa03: REVERT 0x0 0x0
---
Entry stack: [V10, 0x18f, V417, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x18f, V417, 0x0]

================================

Block 0xa04
[0xa04:0xa0d]
---
Predecessors: [0x9da]
Successors: [0xa0e]
---
0xa04 JUMPDEST
0xa05 POP
0xa06 PUSH1 0x1
0xa08 DUP1
0xa09 SLOAD
0xa0a DUP3
0xa0b ADD
0xa0c DUP2
0xa0d SSTORE
---
0xa04: JUMPDEST 
0xa06: V938 = 0x1
0xa09: V939 = S[0x1]
0xa0b: V940 = ADD V417 V939
0xa0d: S[0x1] = V940
---
Entry stack: [V10, 0x18f, V417, 0x0]
Stack pops: 2
Stack additions: [S1, 0x1]
Exit stack: [V10, 0x18f, V417, 0x1]

================================

Block 0xa0e
[0xa0e:0xa0e]
---
Predecessors: [0xa04]
Successors: [0xa0f]
---
0xa0e JUMPDEST
---
0xa0e: JUMPDEST 
---
Entry stack: [V10, 0x18f, V417, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x18f, V417, 0x1]

================================

Block 0xa0f
[0xa0f:0xa13]
---
Predecessors: [0xa0e]
Successors: [0x18f]
---
0xa0f JUMPDEST
0xa10 SWAP2
0xa11 SWAP1
0xa12 POP
0xa13 JUMP
---
0xa0f: JUMPDEST 
0xa13: JUMP 0x18f
---
Entry stack: [V10, 0x18f, V417, 0x1]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, 0x1]

================================

Block 0xa14
[0xa14:0xa2d]
---
Predecessors: [0x466]
Successors: [0xa2e]
---
0xa14 JUMPDEST
0xa15 PUSH1 0x1
0xa17 PUSH1 0xa0
0xa19 PUSH1 0x2
0xa1b EXP
0xa1c SUB
0xa1d DUP2
0xa1e AND
0xa1f PUSH1 0x0
0xa21 SWAP1
0xa22 DUP2
0xa23 MSTORE
0xa24 PUSH1 0x5
0xa26 PUSH1 0x20
0xa28 MSTORE
0xa29 PUSH1 0x40
0xa2b SWAP1
0xa2c SHA3
0xa2d SLOAD
---
0xa14: JUMPDEST 
0xa15: V941 = 0x1
0xa17: V942 = 0xa0
0xa19: V943 = 0x2
0xa1b: V944 = EXP 0x2 0xa0
0xa1c: V945 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa1e: V946 = AND V440 0xffffffffffffffffffffffffffffffffffffffff
0xa1f: V947 = 0x0
0xa23: M[0x0] = V946
0xa24: V948 = 0x5
0xa26: V949 = 0x20
0xa28: M[0x20] = 0x5
0xa29: V950 = 0x40
0xa2c: V951 = SHA3 0x0 0x40
0xa2d: V952 = S[V951]
---
Entry stack: [V10, 0x139, V440]
Stack pops: 1
Stack additions: [S0, V952]
Exit stack: [V10, 0x139, V440, V952]

================================

Block 0xa2e
[0xa2e:0xa32]
---
Predecessors: [0xa14]
Successors: [0x139]
---
0xa2e JUMPDEST
0xa2f SWAP2
0xa30 SWAP1
0xa31 POP
0xa32 JUMP
---
0xa2e: JUMPDEST 
0xa32: JUMP 0x139
---
Entry stack: [V10, 0x139, V440, V952]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, V952]

================================

Block 0xa33
[0xa33:0xa58]
---
Predecessors: [0x497]
Successors: [0xa59, 0xa5d]
---
0xa33 JUMPDEST
0xa34 PUSH1 0x1
0xa36 PUSH1 0xa0
0xa38 PUSH1 0x2
0xa3a EXP
0xa3b SUB
0xa3c CALLER
0xa3d AND
0xa3e PUSH1 0x0
0xa40 SWAP1
0xa41 DUP2
0xa42 MSTORE
0xa43 PUSH1 0x2
0xa45 PUSH1 0x20
0xa47 MSTORE
0xa48 PUSH1 0x40
0xa4a DUP2
0xa4b SHA3
0xa4c SLOAD
0xa4d PUSH1 0xff
0xa4f AND
0xa50 ISZERO
0xa51 ISZERO
0xa52 PUSH1 0x1
0xa54 EQ
0xa55 PUSH2 0xa5d
0xa58 JUMPI
---
0xa33: JUMPDEST 
0xa34: V953 = 0x1
0xa36: V954 = 0xa0
0xa38: V955 = 0x2
0xa3a: V956 = EXP 0x2 0xa0
0xa3b: V957 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa3c: V958 = CALLER
0xa3d: V959 = AND V958 0xffffffffffffffffffffffffffffffffffffffff
0xa3e: V960 = 0x0
0xa42: M[0x0] = V959
0xa43: V961 = 0x2
0xa45: V962 = 0x20
0xa47: M[0x20] = 0x2
0xa48: V963 = 0x40
0xa4b: V964 = SHA3 0x0 0x40
0xa4c: V965 = S[V964]
0xa4d: V966 = 0xff
0xa4f: V967 = AND 0xff V965
0xa50: V968 = ISZERO V967
0xa51: V969 = ISZERO V968
0xa52: V970 = 0x1
0xa54: V971 = EQ 0x1 V969
0xa55: V972 = 0xa5d
0xa58: JUMPI 0xa5d V971
---
Entry stack: [V10, 0x18f, V461, V464, V466]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x18f, V461, V464, V466, 0x0]

================================

Block 0xa59
[0xa59:0xa5c]
---
Predecessors: [0xa33]
Successors: []
---
0xa59 PUSH1 0x0
0xa5b DUP1
0xa5c REVERT
---
0xa59: V973 = 0x0
0xa5c: REVERT 0x0 0x0
---
Entry stack: [V10, 0x18f, V461, V464, V466, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x18f, V461, V464, V466, 0x0]

================================

Block 0xa5d
[0xa5d:0xa8c]
---
Predecessors: [0xa33]
Successors: [0xa8d]
---
0xa5d JUMPDEST
0xa5e POP
0xa5f PUSH1 0x1
0xa61 PUSH1 0xa0
0xa63 PUSH1 0x2
0xa65 EXP
0xa66 SUB
0xa67 DUP1
0xa68 DUP5
0xa69 AND
0xa6a PUSH1 0x0
0xa6c SWAP1
0xa6d DUP2
0xa6e MSTORE
0xa6f PUSH1 0x3
0xa71 PUSH1 0x20
0xa73 SWAP1
0xa74 DUP2
0xa75 MSTORE
0xa76 PUSH1 0x40
0xa78 DUP1
0xa79 DUP4
0xa7a SHA3
0xa7b SWAP4
0xa7c DUP7
0xa7d AND
0xa7e DUP4
0xa7f MSTORE
0xa80 SWAP3
0xa81 SWAP1
0xa82 MSTORE
0xa83 SHA3
0xa84 DUP1
0xa85 SLOAD
0xa86 DUP3
0xa87 SWAP1
0xa88 SUB
0xa89 SWAP1
0xa8a SSTORE
0xa8b PUSH1 0x1
---
0xa5d: JUMPDEST 
0xa5f: V974 = 0x1
0xa61: V975 = 0xa0
0xa63: V976 = 0x2
0xa65: V977 = EXP 0x2 0xa0
0xa66: V978 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa69: V979 = AND V461 0xffffffffffffffffffffffffffffffffffffffff
0xa6a: V980 = 0x0
0xa6e: M[0x0] = V979
0xa6f: V981 = 0x3
0xa71: V982 = 0x20
0xa75: M[0x20] = 0x3
0xa76: V983 = 0x40
0xa7a: V984 = SHA3 0x0 0x40
0xa7d: V985 = AND V464 0xffffffffffffffffffffffffffffffffffffffff
0xa7f: M[0x0] = V985
0xa82: M[0x20] = V984
0xa83: V986 = SHA3 0x0 0x40
0xa85: V987 = S[V986]
0xa88: V988 = SUB V987 V466
0xa8a: S[V986] = V988
0xa8b: V989 = 0x1
---
Entry stack: [V10, 0x18f, V461, V464, V466, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, 0x1]
Exit stack: [V10, 0x18f, V461, V464, V466, 0x1]

================================

Block 0xa8d
[0xa8d:0xa8d]
---
Predecessors: [0xa5d]
Successors: [0xa8e]
---
0xa8d JUMPDEST
---
0xa8d: JUMPDEST 
---
Entry stack: [V10, 0x18f, V461, V464, V466, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x18f, V461, V464, V466, 0x1]

================================

Block 0xa8e
[0xa8e:0xa94]
---
Predecessors: [0xa8d]
Successors: [0x18f]
---
0xa8e JUMPDEST
0xa8f SWAP4
0xa90 SWAP3
0xa91 POP
0xa92 POP
0xa93 POP
0xa94 JUMP
---
0xa8e: JUMPDEST 
0xa94: JUMP 0x18f
---
Entry stack: [V10, 0x18f, V461, V464, V466, 0x1]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V10, 0x1]

================================

Block 0xa95
[0xa95:0xa9f]
---
Predecessors: [0x693]
Successors: [0x4fb]
---
0xa95 JUMPDEST
0xa96 PUSH1 0x0
0xa98 PUSH2 0xaa0
0xa9b DUP3
0xa9c PUSH2 0x4fb
0xa9f JUMP
---
0xa95: JUMPDEST 
0xa96: V990 = 0x0
0xa98: V991 = 0xaa0
0xa9c: V992 = 0x4fb
0xa9f: JUMP 0x4fb
---
Entry stack: [V10, 0x18f, V215, V217, 0x0, 0x69c, V215]
Stack pops: 1
Stack additions: [S0, 0x0, 0xaa0, S0]
Exit stack: [V10, 0x18f, V215, V217, 0x0, 0x69c, V215, 0x0, 0xaa0, V215]

================================

Block 0xaa0
[0xaa0:0xaa6]
---
Predecessors: [0x567]
Successors: [0xaa7, 0xb04]
---
0xaa0 JUMPDEST
0xaa1 ISZERO
0xaa2 ISZERO
0xaa3 PUSH2 0xb04
0xaa6 JUMPI
---
0xaa0: JUMPDEST 
0xaa1: V993 = ISZERO S0
0xaa2: V994 = ISZERO V993
0xaa3: V995 = 0xb04
0xaa6: JUMPI 0xb04 V994
---
Entry stack: [V10, 0x18f, V215, S5, {0x0, 0x18f}, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x18f, V215, S5, {0x0, 0x18f}, S3, S2, S1]

================================

Block 0xaa7
[0xaa7:0xabb]
---
Predecessors: [0xaa0]
Successors: [0xb58]
---
0xaa7 PUSH1 0x1
0xaa9 PUSH1 0x4
0xaab DUP1
0xaac SLOAD
0xaad DUP1
0xaae PUSH1 0x1
0xab0 ADD
0xab1 DUP3
0xab2 DUP2
0xab3 PUSH2 0xabc
0xab6 SWAP2
0xab7 SWAP1
0xab8 PUSH2 0xb58
0xabb JUMP
---
0xaa7: V996 = 0x1
0xaa9: V997 = 0x4
0xaac: V998 = S[0x4]
0xaae: V999 = 0x1
0xab0: V1000 = ADD 0x1 V998
0xab3: V1001 = 0xabc
0xab8: V1002 = 0xb58
0xabb: JUMP 0xb58
---
Entry stack: [V10, 0x18f, V215, S4, {0x0, 0x18f}, S2, S1, S0]
Stack pops: 0
Stack additions: [0x1, 0x4, V998, V1000, 0xabc, 0x4, V1000]
Exit stack: [V10, 0x18f, V215, S4, {0x0, 0x18f}, S2, S1, S0, 0x1, 0x4, V998, V1000, 0xabc, 0x4, V1000]

================================

Block 0xabc
[0xabc:0xac9]
---
Predecessors: [0xb7d]
Successors: [0xaca]
---
0xabc JUMPDEST
0xabd SWAP2
0xabe PUSH1 0x0
0xac0 MSTORE
0xac1 PUSH1 0x20
0xac3 PUSH1 0x0
0xac5 SHA3
0xac6 SWAP1
0xac7 ADD
0xac8 PUSH1 0x0
---
0xabc: JUMPDEST 
0xabe: V1003 = 0x0
0xac0: M[0x0] = 0x4
0xac1: V1004 = 0x20
0xac3: V1005 = 0x0
0xac5: V1006 = SHA3 0x0 0x20
0xac7: V1007 = ADD V998 V1006
0xac8: V1008 = 0x0
---
Entry stack: [V10, 0x18f, V215, S8, {0x0, 0x18f}, S6, S5, S4, 0x1, 0x4, V998, V1000]
Stack pops: 3
Stack additions: [S0, V1007, 0x0]
Exit stack: [V10, 0x18f, V215, S8, {0x0, 0x18f}, S6, S5, S4, 0x1, V1000, V1007, 0x0]

================================

Block 0xaca
[0xaca:0xb03]
---
Predecessors: [0xabc]
Successors: [0xb04]
---
0xaca JUMPDEST
0xacb DUP2
0xacc SLOAD
0xacd PUSH1 0x1
0xacf PUSH1 0xa0
0xad1 PUSH1 0x2
0xad3 EXP
0xad4 SUB
0xad5 DUP1
0xad6 DUP9
0xad7 AND
0xad8 PUSH2 0x100
0xadb SWAP4
0xadc SWAP1
0xadd SWAP4
0xade EXP
0xadf DUP4
0xae0 DUP2
0xae1 MUL
0xae2 SWAP2
0xae3 MUL
0xae4 NOT
0xae5 SWAP1
0xae6 SWAP2
0xae7 AND
0xae8 OR
0xae9 SWAP1
0xaea SWAP2
0xaeb SSTORE
0xaec PUSH1 0x0
0xaee SWAP1
0xaef DUP2
0xaf0 MSTORE
0xaf1 PUSH1 0x5
0xaf3 PUSH1 0x20
0xaf5 MSTORE
0xaf6 PUSH1 0x40
0xaf8 SWAP1
0xaf9 SHA3
0xafa SWAP2
0xafb SWAP1
0xafc SUB
0xafd PUSH1 0x1
0xaff SWAP2
0xb00 SWAP1
0xb01 SWAP2
0xb02 ADD
0xb03 SSTORE
---
0xaca: JUMPDEST 
0xacc: V1009 = S[V1007]
0xacd: V1010 = 0x1
0xacf: V1011 = 0xa0
0xad1: V1012 = 0x2
0xad3: V1013 = EXP 0x2 0xa0
0xad4: V1014 = SUB 0x10000000000000000000000000000000000000000 0x1
0xad7: V1015 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0xad8: V1016 = 0x100
0xade: V1017 = EXP 0x100 0x0
0xae1: V1018 = MUL 0x1 V1015
0xae3: V1019 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xae4: V1020 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xae7: V1021 = AND V1009 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0xae8: V1022 = OR V1021 V1018
0xaeb: S[V1007] = V1022
0xaec: V1023 = 0x0
0xaf0: M[0x0] = V1015
0xaf1: V1024 = 0x5
0xaf3: V1025 = 0x20
0xaf5: M[0x20] = 0x5
0xaf6: V1026 = 0x40
0xaf9: V1027 = SHA3 0x0 0x40
0xafc: V1028 = SUB V1000 0x1
0xafd: V1029 = 0x1
0xb02: V1030 = ADD 0x1 V1027
0xb03: S[V1030] = V1028
---
Entry stack: [V10, 0x18f, V215, S8, {0x0, 0x18f}, S6, S5, S4, 0x1, V1000, V1007, 0x0]
Stack pops: 6
Stack additions: [S5, S4]
Exit stack: [V10, 0x18f, V215, S8, {0x0, 0x18f}, S6, S5, S4]

================================

Block 0xb04
[0xb04:0xb21]
---
Predecessors: [0xaa0, 0xaca]
Successors: [0xb22]
---
0xb04 JUMPDEST
0xb05 POP
0xb06 PUSH1 0x1
0xb08 PUSH1 0xa0
0xb0a PUSH1 0x2
0xb0c EXP
0xb0d SUB
0xb0e DUP2
0xb0f AND
0xb10 PUSH1 0x0
0xb12 SWAP1
0xb13 DUP2
0xb14 MSTORE
0xb15 PUSH1 0x5
0xb17 PUSH1 0x20
0xb19 MSTORE
0xb1a PUSH1 0x40
0xb1c SWAP1
0xb1d SHA3
0xb1e PUSH1 0x1
0xb20 ADD
0xb21 SLOAD
---
0xb04: JUMPDEST 
0xb06: V1031 = 0x1
0xb08: V1032 = 0xa0
0xb0a: V1033 = 0x2
0xb0c: V1034 = EXP 0x2 0xa0
0xb0d: V1035 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb0f: V1036 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0xb10: V1037 = 0x0
0xb14: M[0x0] = V1036
0xb15: V1038 = 0x5
0xb17: V1039 = 0x20
0xb19: M[0x20] = 0x5
0xb1a: V1040 = 0x40
0xb1d: V1041 = SHA3 0x0 0x40
0xb1e: V1042 = 0x1
0xb20: V1043 = ADD 0x1 V1041
0xb21: V1044 = S[V1043]
---
Entry stack: [V10, 0x18f, V215, S4, {0x0, 0x18f}, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, V1044]
Exit stack: [V10, 0x18f, V215, S4, {0x0, 0x18f}, S2, S1, V1044]

================================

Block 0xb22
[0xb22:0xb26]
---
Predecessors: [0xb04]
Successors: [0x69c]
---
0xb22 JUMPDEST
0xb23 SWAP2
0xb24 SWAP1
0xb25 POP
0xb26 JUMP
---
0xb22: JUMPDEST 
0xb26: JUMP S2
---
Entry stack: [V10, 0x18f, V215, S4, {0x0, 0x18f}, S2, S1, V1044]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, 0x18f, V215, S4, {0x0, 0x18f}, V1044]

================================

Block 0xb27
[0xb27:0xb34]
---
Predecessors: [0x69c]
Successors: [0xb35, 0xb36]
---
0xb27 JUMPDEST
0xb28 PUSH1 0x0
0xb2a DUP3
0xb2b DUP3
0xb2c ADD
0xb2d DUP4
0xb2e DUP2
0xb2f LT
0xb30 ISZERO
0xb31 PUSH2 0xb36
0xb34 JUMPI
---
0xb27: JUMPDEST 
0xb28: V1045 = 0x0
0xb2c: V1046 = ADD S0 V684
0xb2f: V1047 = LT V1046 V684
0xb30: V1048 = ISZERO V1047
0xb31: V1049 = 0xb36
0xb34: JUMPI 0xb36 V1048
---
Entry stack: [V10, 0x18f, V215, S4, {0x0, 0x18f}, 0x6c6, V684, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1046]
Exit stack: [V10, 0x18f, V215, S4, {0x0, 0x18f}, 0x6c6, V684, S0, 0x0, V1046]

================================

Block 0xb35
[0xb35:0xb35]
---
Predecessors: [0xb27]
Successors: []
---
0xb35 INVALID
---
0xb35: INVALID 
---
Entry stack: [V10, 0x18f, V215, S6, {0x0, 0x18f}, 0x6c6, V684, S2, 0x0, V1046]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x18f, V215, S6, {0x0, 0x18f}, 0x6c6, V684, S2, 0x0, V1046]

================================

Block 0xb36
[0xb36:0xb39]
---
Predecessors: [0xb27]
Successors: [0xb3a]
---
0xb36 JUMPDEST
0xb37 DUP1
0xb38 SWAP2
0xb39 POP
---
0xb36: JUMPDEST 
---
Entry stack: [V10, 0x18f, V215, S6, {0x0, 0x18f}, 0x6c6, V684, S2, 0x0, V1046]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V10, 0x18f, V215, S6, {0x0, 0x18f}, 0x6c6, V684, S2, V1046, V1046]

================================

Block 0xb3a
[0xb3a:0xb40]
---
Predecessors: [0xb36]
Successors: [0x6c6]
---
0xb3a JUMPDEST
0xb3b POP
0xb3c SWAP3
0xb3d SWAP2
0xb3e POP
0xb3f POP
0xb40 JUMP
---
0xb3a: JUMPDEST 
0xb40: JUMP 0x6c6
---
Entry stack: [V10, 0x18f, V215, S6, {0x0, 0x18f}, 0x6c6, V684, S2, V1046, V1046]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V10, 0x18f, V215, S6, {0x0, 0x18f}, V1046]

================================

Block 0xb41
[0xb41:0xb4b]
---
Predecessors: [0x810]
Successors: [0xb4c, 0xb4d]
---
0xb41 JUMPDEST
0xb42 PUSH1 0x0
0xb44 DUP3
0xb45 DUP3
0xb46 GT
0xb47 ISZERO
0xb48 PUSH2 0xb4d
0xb4b JUMPI
---
0xb41: JUMPDEST 
0xb42: V1050 = 0x0
0xb46: V1051 = GT S0 V798
0xb47: V1052 = ISZERO V1051
0xb48: V1053 = 0xb4d
0xb4b: JUMPI 0xb4d V1052
---
Entry stack: [V10, 0x18f, V215, S7, {0x0, 0x18f}, S5, S4, S3, 0x839, V798, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V10, 0x18f, V215, S7, {0x0, 0x18f}, S5, S4, S3, 0x839, V798, S0, 0x0]

================================

Block 0xb4c
[0xb4c:0xb4c]
---
Predecessors: [0xb41]
Successors: []
---
0xb4c INVALID
---
0xb4c: INVALID 
---
Entry stack: [V10, 0x18f, V215, S8, {0x0, 0x18f}, S6, S5, S4, 0x839, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x18f, V215, S8, {0x0, 0x18f}, S6, S5, S4, 0x839, S2, S1, 0x0]

================================

Block 0xb4d
[0xb4d:0xb51]
---
Predecessors: [0xb41]
Successors: [0xb52]
---
0xb4d JUMPDEST
0xb4e POP
0xb4f DUP1
0xb50 DUP3
0xb51 SUB
---
0xb4d: JUMPDEST 
0xb51: V1054 = SUB S2 S1
---
Entry stack: [V10, 0x18f, V215, S8, {0x0, 0x18f}, S6, S5, S4, 0x839, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V1054]
Exit stack: [V10, 0x18f, V215, S8, {0x0, 0x18f}, S6, S5, S4, 0x839, S2, S1, V1054]

================================

Block 0xb52
[0xb52:0xb57]
---
Predecessors: [0xb4d]
Successors: [0x839]
---
0xb52 JUMPDEST
0xb53 SWAP3
0xb54 SWAP2
0xb55 POP
0xb56 POP
0xb57 JUMP
---
0xb52: JUMPDEST 
0xb57: JUMP 0x839
---
Entry stack: [V10, 0x18f, V215, S8, {0x0, 0x18f}, S6, S5, S4, 0x839, S2, S1, V1054]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, 0x18f, V215, S8, {0x0, 0x18f}, S6, S5, S4, V1054]

================================

Block 0xb58
[0xb58:0xb65]
---
Predecessors: [0xaa7]
Successors: [0xb66, 0xb7c]
---
0xb58 JUMPDEST
0xb59 DUP2
0xb5a SLOAD
0xb5b DUP2
0xb5c DUP4
0xb5d SSTORE
0xb5e DUP2
0xb5f DUP2
0xb60 ISZERO
0xb61 GT
0xb62 PUSH2 0xb7c
0xb65 JUMPI
---
0xb58: JUMPDEST 
0xb5a: V1055 = S[0x4]
0xb5d: S[0x4] = V1000
0xb60: V1056 = ISZERO V1055
0xb61: V1057 = GT V1056 V1000
0xb62: V1058 = 0xb7c
0xb65: JUMPI 0xb7c V1057
---
Entry stack: [V10, 0x18f, V215, S11, {0x0, 0x18f}, S9, S8, S7, 0x1, 0x4, V998, V1000, 0xabc, 0x4, V1000]
Stack pops: 2
Stack additions: [S1, S0, V1055]
Exit stack: [V10, 0x18f, V215, S11, {0x0, 0x18f}, S9, S8, S7, 0x1, 0x4, V998, V1000, 0xabc, 0x4, V1000, V1055]

================================

Block 0xb66
[0xb66:0xb7b]
---
Predecessors: [0xb58]
Successors: [0xb82]
---
0xb66 PUSH1 0x0
0xb68 DUP4
0xb69 DUP2
0xb6a MSTORE
0xb6b PUSH1 0x20
0xb6d SWAP1
0xb6e SHA3
0xb6f PUSH2 0xb7c
0xb72 SWAP2
0xb73 DUP2
0xb74 ADD
0xb75 SWAP1
0xb76 DUP4
0xb77 ADD
0xb78 PUSH2 0xb82
0xb7b JUMP
---
0xb66: V1059 = 0x0
0xb6a: M[0x0] = 0x4
0xb6b: V1060 = 0x20
0xb6e: V1061 = SHA3 0x0 0x20
0xb6f: V1062 = 0xb7c
0xb74: V1063 = ADD V1061 V1055
0xb77: V1064 = ADD V1000 V1061
0xb78: V1065 = 0xb82
0xb7b: JUMP 0xb82
---
Entry stack: [V10, 0x18f, V215, S12, {0x0, 0x18f}, S10, S9, S8, 0x1, 0x4, V998, V1000, 0xabc, 0x4, V1000, V1055]
Stack pops: 3
Stack additions: [S2, S1, 0xb7c, V1063, V1064]
Exit stack: [V10, 0x18f, V215, S12, {0x0, 0x18f}, S10, S9, S8, 0x1, 0x4, V998, V1000, 0xabc, 0x4, V1000, 0xb7c, V1063, V1064]

================================

Block 0xb7c
[0xb7c:0xb7c]
---
Predecessors: [0x570, 0xb58]
Successors: [0xb7d]
---
0xb7c JUMPDEST
---
0xb7c: JUMPDEST 
---
Entry stack: [V10, 0x18f, V215, S12, {0x0, 0x18f}, S10, S9, S8, 0x1, 0x4, V998, V1000, 0xabc, 0x4, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x18f, V215, S12, {0x0, 0x18f}, S10, S9, S8, 0x1, 0x4, V998, V1000, 0xabc, 0x4, S1, S0]

================================

Block 0xb7d
[0xb7d:0xb81]
---
Predecessors: [0xb7c]
Successors: [0xabc]
---
0xb7d JUMPDEST
0xb7e POP
0xb7f POP
0xb80 POP
0xb81 JUMP
---
0xb7d: JUMPDEST 
0xb81: JUMP 0xabc
---
Entry stack: [V10, 0x18f, V215, S12, {0x0, 0x18f}, S10, S9, S8, 0x1, 0x4, V998, V1000, 0xabc, 0x4, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V10, 0x18f, V215, S12, {0x0, 0x18f}, S10, S9, S8, 0x1, 0x4, V998, V1000]

================================

Block 0xb82
[0xb82:0xb87]
---
Predecessors: [0xb66]
Successors: [0xb88]
---
0xb82 JUMPDEST
0xb83 PUSH2 0x570
0xb86 SWAP2
0xb87 SWAP1
---
0xb82: JUMPDEST 
0xb83: V1066 = 0x570
---
Entry stack: [V10, 0x18f, V215, S14, {0x0, 0x18f}, S12, S11, S10, 0x1, 0x4, V998, V1000, 0xabc, 0x4, V1000, 0xb7c, V1063, V1064]
Stack pops: 2
Stack additions: [0x570, S1, S0]
Exit stack: [V10, 0x18f, V215, S14, {0x0, 0x18f}, S12, S11, S10, 0x1, 0x4, V998, V1000, 0xabc, 0x4, V1000, 0xb7c, 0x570, V1063, V1064]

================================

Block 0xb88
[0xb88:0xb90]
---
Predecessors: [0xb82, 0xb91]
Successors: [0xb91, 0xb9c]
---
0xb88 JUMPDEST
0xb89 DUP1
0xb8a DUP3
0xb8b GT
0xb8c ISZERO
0xb8d PUSH2 0xb9c
0xb90 JUMPI
---
0xb88: JUMPDEST 
0xb8b: V1067 = GT V1063 S0
0xb8c: V1068 = ISZERO V1067
0xb8d: V1069 = 0xb9c
0xb90: JUMPI 0xb9c V1068
---
Entry stack: [V10, 0x18f, V215, S15, {0x0, 0x18f}, S13, S12, S11, 0x1, 0x4, V998, V1000, 0xabc, 0x4, V1000, 0xb7c, 0x570, V1063, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x18f, V215, S15, {0x0, 0x18f}, S13, S12, S11, 0x1, 0x4, V998, V1000, 0xabc, 0x4, V1000, 0xb7c, 0x570, V1063, S0]

================================

Block 0xb91
[0xb91:0xb9b]
---
Predecessors: [0xb88]
Successors: [0xb88]
---
0xb91 PUSH1 0x0
0xb93 DUP2
0xb94 SSTORE
0xb95 PUSH1 0x1
0xb97 ADD
0xb98 PUSH2 0xb88
0xb9b JUMP
---
0xb91: V1070 = 0x0
0xb94: S[S0] = 0x0
0xb95: V1071 = 0x1
0xb97: V1072 = ADD 0x1 S0
0xb98: V1073 = 0xb88
0xb9b: JUMP 0xb88
---
Entry stack: [V10, 0x18f, V215, S15, {0x0, 0x18f}, S13, S12, S11, 0x1, 0x4, V998, V1000, 0xabc, 0x4, V1000, 0xb7c, 0x570, V1063, S0]
Stack pops: 1
Stack additions: [V1072]
Exit stack: [V10, 0x18f, V215, S15, {0x0, 0x18f}, S13, S12, S11, 0x1, 0x4, V998, V1000, 0xabc, 0x4, V1000, 0xb7c, 0x570, V1063, V1072]

================================

Block 0xb9c
[0xb9c:0xb9f]
---
Predecessors: [0xb88]
Successors: [0x570]
---
0xb9c JUMPDEST
0xb9d POP
0xb9e SWAP1
0xb9f JUMP
---
0xb9c: JUMPDEST 
0xb9f: JUMP 0x570
---
Entry stack: [V10, 0x18f, V215, S15, {0x0, 0x18f}, S13, S12, S11, 0x1, 0x4, V998, V1000, 0xabc, 0x4, V1000, 0xb7c, 0x570, V1063, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V10, 0x18f, V215, S15, {0x0, 0x18f}, S13, S12, S11, 0x1, 0x4, V998, V1000, 0xabc, 0x4, V1000, 0xb7c, V1063]

================================

Block 0xba0
[0xba0:0xbd9]
---
Predecessors: []
Successors: []
---
0xba0 JUMPDEST
0xba1 SWAP1
0xba2 JUMP
0xba3 STOP
0xba4 LOG1
0xba5 PUSH6 0x627a7a723058
0xbac SHA3
0xbad MISSING 0x27
0xbae SLOAD
0xbaf EXTCODESIZE
0xbb0 MSTORE8
0xbb1 MISSING 0x2f
0xbb2 MISSING 0x4f
0xbb3 MISSING 0xac
0xbb4 MISSING 0xd6
0xbb5 MOD
0xbb6 MISSING 0xe4
0xbb7 MISSING 0xfc
0xbb8 MISSING 0xc4
0xbb9 PUSH1 0x39
0xbbb MISSING 0xf9
0xbbc ADD
0xbbd DUP5
0xbbe SWAP1
0xbbf EXTCODECOPY
0xbc0 MISSING 0x25
0xbc1 EXP
0xbc2 PUSH23 0x5ed337da42af0c605c6f0029
---
0xba0: JUMPDEST 
0xba2: JUMP S1
0xba3: STOP 
0xba4: LOG S0 S1 S2
0xba5: V1074 = 0x627a7a723058
0xbac: V1075 = SHA3 0x627a7a723058 S3
0xbad: MISSING 0x27
0xbae: V1076 = S[S0]
0xbaf: V1077 = EXTCODESIZE V1076
0xbb0: M8[V1077] = S1
0xbb1: MISSING 0x2f
0xbb2: MISSING 0x4f
0xbb3: MISSING 0xac
0xbb4: MISSING 0xd6
0xbb5: V1078 = MOD S0 S1
0xbb6: MISSING 0xe4
0xbb7: MISSING 0xfc
0xbb8: MISSING 0xc4
0xbb9: V1079 = 0x39
0xbbb: MISSING 0xf9
0xbbc: V1080 = ADD S0 S1
0xbbf: EXTCODECOPY V1080 S5 S2 S3
0xbc0: MISSING 0x25
0xbc1: V1081 = EXP S0 S1
0xbc2: V1082 = 0x5ed337da42af0c605c6f0029
---
Entry stack: []
Stack pops: 5612
Stack additions: [0x5ed337da42af0c605c6f0029, V1081]
Exit stack: []

================================

Function 0:
Public function signature: 0xaf4187d
Entry block: 0x114
Exit block: 0x139
Body: 0x114, 0x11b, 0x11f, 0x139, 0x4c8, 0x4ef

Function 1:
Public function signature: 0x18160ddd
Entry block: 0x14b
Exit block: 0x139
Body: 0x139, 0x14b, 0x152, 0x156, 0x4f5

Function 2:
Public function signature: 0x1d0d35f5
Entry block: 0x170
Exit block: 0x18f
Body: 0x170, 0x177, 0x17b, 0x18f

Function 3:
Public function signature: 0x253da8bd
Entry block: 0x1a3
Exit block: 0x18f
Body: 0x139, 0x18f, 0x1a3, 0x1aa, 0x1ae, 0x56c, 0x570, 0x69c, 0x6c6, 0x758, 0x759, 0xabc, 0xaca, 0xb04, 0xb22, 0xb27, 0xb35, 0xb36, 0xb3a, 0xb7c, 0xb7d

Function 4:
Public function signature: 0x35e09095
Entry block: 0x1c8
Exit block: 0x18f
Body: 0x18f, 0x1c8, 0x1cf, 0x1d3, 0x573, 0x599, 0x59d, 0x5a8, 0x5a9

Function 5:
Public function signature: 0x3cb5d100
Entry block: 0x1f2
Exit block: 0x208
Body: 0x1f2, 0x1f9, 0x1fd, 0x208, 0x5ae, 0x5bb, 0x5bc, 0x5ca

Function 6:
Public function signature: 0x41c0e1b5
Entry block: 0x224
Exit block: 0x5fb
Body: 0x224, 0x22b, 0x22f, 0x5e0, 0x5f7, 0x5fb

Function 7:
Public function signature: 0x486581ea
Entry block: 0x239
Exit block: 0x237
Body: 0x237, 0x239, 0x240, 0x244, 0x60c, 0x623, 0x627, 0x660, 0x664, 0x665, 0x666

Function 8:
Public function signature: 0x66e7ea0f
Entry block: 0x25a
Exit block: 0x18f
Body: 0x139, 0x18f, 0x25a, 0x261, 0x265, 0x570, 0x669, 0x68f, 0x693, 0x69c, 0x6c6, 0x758, 0x759, 0xa95, 0xaa0, 0xaa7, 0xabc, 0xaca, 0xb04, 0xb22, 0xb27, 0xb35, 0xb36, 0xb3a, 0xb58, 0xb66, 0xb7c, 0xb7d, 0xb82, 0xb88, 0xb91, 0xb9c

Function 9:
Public function signature: 0x91ef14b4
Entry block: 0x290
Exit block: 0x18f
Body: 0x18f, 0x290, 0x297, 0x29b, 0x75f, 0x785, 0x789, 0x7b5, 0x7b6

Function 10:
Public function signature: 0xa8ee49fe
Entry block: 0x2cc
Exit block: 0x18f
Body: 0x18f, 0x2cc, 0x2d3, 0x2d7, 0x7bd

Function 11:
Public function signature: 0xaba00859
Entry block: 0x2ff
Exit block: 0x18f
Body: 0x18f, 0x2ff, 0x306, 0x30a, 0x7d2, 0x7f8, 0x7fc, 0x805, 0x80c, 0x810, 0x839, 0x8cb, 0x8cc, 0xb41, 0xb4c, 0xb4d, 0xb52

Function 12:
Public function signature: 0xb1662d58
Entry block: 0x335
Exit block: 0x359
Body: 0x335, 0x33c, 0x340, 0x359, 0x8d2, 0x8ee, 0x8f2, 0x952, 0x953

Function 13:
Public function signature: 0xb5de8d4c
Entry block: 0x389
Exit block: 0x18f
Body: 0x18f, 0x389, 0x390, 0x394, 0x95a, 0x977

Function 14:
Public function signature: 0xc296302a
Entry block: 0x3bc
Exit block: 0x237
Body: 0x237, 0x3bc, 0x3c3, 0x3c7, 0x97c, 0x993, 0x997, 0x9c0, 0x9c1

Function 15:
Public function signature: 0xc4e41b22
Entry block: 0x3dd
Exit block: 0x139
Body: 0x139, 0x3dd, 0x3e4, 0x3e8, 0x9c4, 0x9c8

Function 16:
Public function signature: 0xebf0c717
Entry block: 0x402
Exit block: 0x208
Body: 0x208, 0x402, 0x409, 0x40d, 0x9cb

Function 17:
Public function signature: 0xecfc5964
Entry block: 0x431
Exit block: 0x18f
Body: 0x18f, 0x431, 0x438, 0x43c, 0x9da, 0xa00, 0xa04, 0xa0e, 0xa0f

Function 18:
Public function signature: 0xf8b2cb4f
Entry block: 0x45b
Exit block: 0x139
Body: 0x139, 0x45b, 0x462, 0x466, 0xa14, 0xa2e

Function 19:
Public function signature: 0xfcfdf7c5
Entry block: 0x48c
Exit block: 0x18f
Body: 0x18f, 0x48c, 0x493, 0x497, 0xa33, 0xa59, 0xa5d, 0xa8d, 0xa8e

Function 20:
Public fallback function
Entry block: 0x10f
Exit block: 0x10f
Body: 0x10f

Function 21:
Private function
Entry block: 0x4fb
Exit block: 0x567
Body: 0x4fb, 0x508, 0x50f, 0x53a, 0x548, 0x567

