Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xa8]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xa8
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xa8
0xa: JUMPI 0xa8 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x23]
---
Predecessors: [0x0]
Successors: [0x24, 0xad]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH3 0x5b4487
0x1e DUP2
0x1f EQ
0x20 PUSH2 0xad
0x23 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x5b4487
0x1f: V14 = EQ V12 0x5b4487
0x20: V15 = 0xad
0x23: JUMPI 0xad V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x24
[0x24:0x2e]
---
Predecessors: [0xb]
Successors: [0x2f, 0xd2]
---
0x24 DUP1
0x25 PUSH4 0x954c478
0x2a EQ
0x2b PUSH2 0xd2
0x2e JUMPI
---
0x25: V16 = 0x954c478
0x2a: V17 = EQ 0x954c478 V12
0x2b: V18 = 0xd2
0x2e: JUMPI 0xd2 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x2f
[0x2f:0x39]
---
Predecessors: [0x24]
Successors: [0x3a, 0x102]
---
0x2f DUP1
0x30 PUSH4 0x1a7a9ad7
0x35 EQ
0x36 PUSH2 0x102
0x39 JUMPI
---
0x30: V19 = 0x1a7a9ad7
0x35: V20 = EQ 0x1a7a9ad7 V12
0x36: V21 = 0x102
0x39: JUMPI 0x102 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3a
[0x3a:0x44]
---
Predecessors: [0x2f]
Successors: [0x45, 0x117]
---
0x3a DUP1
0x3b PUSH4 0x377ed13c
0x40 EQ
0x41 PUSH2 0x117
0x44 JUMPI
---
0x3b: V22 = 0x377ed13c
0x40: V23 = EQ 0x377ed13c V12
0x41: V24 = 0x117
0x44: JUMPI 0x117 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x45
[0x45:0x4f]
---
Predecessors: [0x3a]
Successors: [0x50, 0x138]
---
0x45 DUP1
0x46 PUSH4 0x6103d70b
0x4b EQ
0x4c PUSH2 0x138
0x4f JUMPI
---
0x46: V25 = 0x6103d70b
0x4b: V26 = EQ 0x6103d70b V12
0x4c: V27 = 0x138
0x4f: JUMPI 0x138 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x50
[0x50:0x5a]
---
Predecessors: [0x45]
Successors: [0x5b, 0x14d]
---
0x50 DUP1
0x51 PUSH4 0x83197ef0
0x56 EQ
0x57 PUSH2 0x14d
0x5a JUMPI
---
0x51: V28 = 0x83197ef0
0x56: V29 = EQ 0x83197ef0 V12
0x57: V30 = 0x14d
0x5a: JUMPI 0x14d V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5b
[0x5b:0x65]
---
Predecessors: [0x50]
Successors: [0x66, 0x162]
---
0x5b DUP1
0x5c PUSH4 0x8da5cb5b
0x61 EQ
0x62 PUSH2 0x162
0x65 JUMPI
---
0x5c: V31 = 0x8da5cb5b
0x61: V32 = EQ 0x8da5cb5b V12
0x62: V33 = 0x162
0x65: JUMPI 0x162 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x66
[0x66:0x70]
---
Predecessors: [0x5b]
Successors: [0x71, 0x191]
---
0x66 DUP1
0x67 PUSH4 0x9ad2fc8b
0x6c EQ
0x6d PUSH2 0x191
0x70 JUMPI
---
0x67: V34 = 0x9ad2fc8b
0x6c: V35 = EQ 0x9ad2fc8b V12
0x6d: V36 = 0x191
0x70: JUMPI 0x191 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x71
[0x71:0x7b]
---
Predecessors: [0x66]
Successors: [0x7c, 0x1df]
---
0x71 DUP1
0x72 PUSH4 0xaeabc062
0x77 EQ
0x78 PUSH2 0x1df
0x7b JUMPI
---
0x72: V37 = 0xaeabc062
0x77: V38 = EQ 0xaeabc062 V12
0x78: V39 = 0x1df
0x7b: JUMPI 0x1df V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7c
[0x7c:0x86]
---
Predecessors: [0x71]
Successors: [0x87, 0x200]
---
0x7c DUP1
0x7d PUSH4 0xe2982c21
0x82 EQ
0x83 PUSH2 0x200
0x86 JUMPI
---
0x7d: V40 = 0xe2982c21
0x82: V41 = EQ 0xe2982c21 V12
0x83: V42 = 0x200
0x86: JUMPI 0x200 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x87
[0x87:0x91]
---
Predecessors: [0x7c]
Successors: [0x92, 0x231]
---
0x87 DUP1
0x88 PUSH4 0xf2fde38b
0x8d EQ
0x8e PUSH2 0x231
0x91 JUMPI
---
0x88: V43 = 0xf2fde38b
0x8d: V44 = EQ 0xf2fde38b V12
0x8e: V45 = 0x231
0x91: JUMPI 0x231 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x92
[0x92:0x9c]
---
Predecessors: [0x87]
Successors: [0x9d, 0x252]
---
0x92 DUP1
0x93 PUSH4 0xf4de7548
0x98 EQ
0x99 PUSH2 0x252
0x9c JUMPI
---
0x93: V46 = 0xf4de7548
0x98: V47 = EQ 0xf4de7548 V12
0x99: V48 = 0x252
0x9c: JUMPI 0x252 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9d
[0x9d:0xa7]
---
Predecessors: [0x92]
Successors: [0xa8, 0x285]
---
0x9d DUP1
0x9e PUSH4 0xf5074f41
0xa3 EQ
0xa4 PUSH2 0x285
0xa7 JUMPI
---
0x9e: V49 = 0xf5074f41
0xa3: V50 = EQ 0xf5074f41 V12
0xa4: V51 = 0x285
0xa7: JUMPI 0x285 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa8
[0xa8:0xac]
---
Predecessors: [0x0, 0x9d]
Successors: []
---
0xa8 JUMPDEST
0xa9 PUSH1 0x0
0xab DUP1
0xac REVERT
---
0xa8: JUMPDEST 
0xa9: V52 = 0x0
0xac: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xad
[0xad:0xb3]
---
Predecessors: [0xb]
Successors: [0xb4, 0xb8]
---
0xad JUMPDEST
0xae CALLVALUE
0xaf ISZERO
0xb0 PUSH2 0xb8
0xb3 JUMPI
---
0xad: JUMPDEST 
0xae: V53 = CALLVALUE
0xaf: V54 = ISZERO V53
0xb0: V55 = 0xb8
0xb3: JUMPI 0xb8 V54
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xb7]
---
Predecessors: [0xad]
Successors: []
---
0xb4 PUSH1 0x0
0xb6 DUP1
0xb7 REVERT
---
0xb4: V56 = 0x0
0xb7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb8
[0xb8:0xbf]
---
Predecessors: [0xad]
Successors: [0x2a6]
---
0xb8 JUMPDEST
0xb9 PUSH2 0xc0
0xbc PUSH2 0x2a6
0xbf JUMP
---
0xb8: JUMPDEST 
0xb9: V57 = 0xc0
0xbc: V58 = 0x2a6
0xbf: JUMP 0x2a6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc0]
Exit stack: [V12, 0xc0]

================================

Block 0xc0
[0xc0:0xd1]
---
Predecessors: [0x2a6, 0x399, 0x6de, 0x72d]
Successors: []
---
0xc0 JUMPDEST
0xc1 PUSH1 0x40
0xc3 MLOAD
0xc4 SWAP1
0xc5 DUP2
0xc6 MSTORE
0xc7 PUSH1 0x20
0xc9 ADD
0xca PUSH1 0x40
0xcc MLOAD
0xcd DUP1
0xce SWAP2
0xcf SUB
0xd0 SWAP1
0xd1 RETURN
---
0xc0: JUMPDEST 
0xc1: V59 = 0x40
0xc3: V60 = M[0x40]
0xc6: M[V60] = S0
0xc7: V61 = 0x20
0xc9: V62 = ADD 0x20 V60
0xca: V63 = 0x40
0xcc: V64 = M[0x40]
0xcf: V65 = SUB V62 V64
0xd1: RETURN V64 V65
---
Entry stack: [V12, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S5, S4, S3, S2, S1]

================================

Block 0xd2
[0xd2:0xd8]
---
Predecessors: [0x24]
Successors: [0xd9, 0xdd]
---
0xd2 JUMPDEST
0xd3 CALLVALUE
0xd4 ISZERO
0xd5 PUSH2 0xdd
0xd8 JUMPI
---
0xd2: JUMPDEST 
0xd3: V66 = CALLVALUE
0xd4: V67 = ISZERO V66
0xd5: V68 = 0xdd
0xd8: JUMPI 0xdd V67
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd9
[0xd9:0xdc]
---
Predecessors: [0xd2]
Successors: []
---
0xd9 PUSH1 0x0
0xdb DUP1
0xdc REVERT
---
0xd9: V69 = 0x0
0xdc: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xdd
[0xdd:0xef]
---
Predecessors: [0xd2]
Successors: [0x2ac]
---
0xdd JUMPDEST
0xde PUSH2 0xc0
0xe1 PUSH3 0xffffff
0xe5 PUSH1 0x4
0xe7 CALLDATALOAD
0xe8 AND
0xe9 PUSH1 0x24
0xeb CALLDATALOAD
0xec PUSH2 0x2ac
0xef JUMP
---
0xdd: JUMPDEST 
0xde: V70 = 0xc0
0xe1: V71 = 0xffffff
0xe5: V72 = 0x4
0xe7: V73 = CALLDATALOAD 0x4
0xe8: V74 = AND V73 0xffffff
0xe9: V75 = 0x24
0xeb: V76 = CALLDATALOAD 0x24
0xec: V77 = 0x2ac
0xef: JUMP 0x2ac
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc0, V74, V76]
Exit stack: [V12, 0xc0, V74, V76]

================================

Block 0xf0
[0xf0:0x101]
---
Predecessors: []
Successors: []
---
0xf0 JUMPDEST
0xf1 PUSH1 0x40
0xf3 MLOAD
0xf4 SWAP1
0xf5 DUP2
0xf6 MSTORE
0xf7 PUSH1 0x20
0xf9 ADD
0xfa PUSH1 0x40
0xfc MLOAD
0xfd DUP1
0xfe SWAP2
0xff SUB
0x100 SWAP1
0x101 RETURN
---
0xf0: JUMPDEST 
0xf1: V78 = 0x40
0xf3: V79 = M[0x40]
0xf6: M[V79] = S0
0xf7: V80 = 0x20
0xf9: V81 = ADD 0x20 V79
0xfa: V82 = 0x40
0xfc: V83 = M[0x40]
0xff: V84 = SUB V81 V83
0x101: RETURN V83 V84
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x102
[0x102:0x114]
---
Predecessors: [0x2f]
Successors: [0x39f]
---
0x102 JUMPDEST
0x103 PUSH2 0x115
0x106 PUSH3 0xffffff
0x10a PUSH1 0x4
0x10c CALLDATALOAD
0x10d AND
0x10e PUSH1 0x24
0x110 CALLDATALOAD
0x111 PUSH2 0x39f
0x114 JUMP
---
0x102: JUMPDEST 
0x103: V85 = 0x115
0x106: V86 = 0xffffff
0x10a: V87 = 0x4
0x10c: V88 = CALLDATALOAD 0x4
0x10d: V89 = AND V88 0xffffff
0x10e: V90 = 0x24
0x110: V91 = CALLDATALOAD 0x24
0x111: V92 = 0x39f
0x114: JUMP 0x39f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x115, V89, V91]
Exit stack: [V12, 0x115, V89, V91]

================================

Block 0x115
[0x115:0x116]
---
Predecessors: [0x4ae, 0x4f8, 0x591, 0x72a, 0x794, 0x8a7]
Successors: []
---
0x115 JUMPDEST
0x116 STOP
---
0x115: JUMPDEST 
0x116: STOP 
---
Entry stack: [V12, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S0]

================================

Block 0x117
[0x117:0x11d]
---
Predecessors: [0x3a]
Successors: [0x11e, 0x122]
---
0x117 JUMPDEST
0x118 CALLVALUE
0x119 ISZERO
0x11a PUSH2 0x122
0x11d JUMPI
---
0x117: JUMPDEST 
0x118: V93 = CALLVALUE
0x119: V94 = ISZERO V93
0x11a: V95 = 0x122
0x11d: JUMPI 0x122 V94
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x11e
[0x11e:0x121]
---
Predecessors: [0x117]
Successors: []
---
0x11e PUSH1 0x0
0x120 DUP1
0x121 REVERT
---
0x11e: V96 = 0x0
0x121: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x122
[0x122:0x135]
---
Predecessors: [0x117]
Successors: [0x4b3]
---
0x122 JUMPDEST
0x123 PUSH2 0x115
0x126 PUSH1 0x1
0x128 PUSH1 0xa0
0x12a PUSH1 0x2
0x12c EXP
0x12d SUB
0x12e PUSH1 0x4
0x130 CALLDATALOAD
0x131 AND
0x132 PUSH2 0x4b3
0x135 JUMP
---
0x122: JUMPDEST 
0x123: V97 = 0x115
0x126: V98 = 0x1
0x128: V99 = 0xa0
0x12a: V100 = 0x2
0x12c: V101 = EXP 0x2 0xa0
0x12d: V102 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12e: V103 = 0x4
0x130: V104 = CALLDATALOAD 0x4
0x131: V105 = AND V104 0xffffffffffffffffffffffffffffffffffffffff
0x132: V106 = 0x4b3
0x135: JUMP 0x4b3
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x115, V105]
Exit stack: [V12, 0x115, V105]

================================

Block 0x136
[0x136:0x137]
---
Predecessors: []
Successors: []
---
0x136 JUMPDEST
0x137 STOP
---
0x136: JUMPDEST 
0x137: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x138
[0x138:0x13e]
---
Predecessors: [0x45]
Successors: [0x13f, 0x143]
---
0x138 JUMPDEST
0x139 CALLVALUE
0x13a ISZERO
0x13b PUSH2 0x143
0x13e JUMPI
---
0x138: JUMPDEST 
0x139: V107 = CALLVALUE
0x13a: V108 = ISZERO V107
0x13b: V109 = 0x143
0x13e: JUMPI 0x143 V108
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x13f
[0x13f:0x142]
---
Predecessors: [0x138]
Successors: []
---
0x13f PUSH1 0x0
0x141 DUP1
0x142 REVERT
---
0x13f: V110 = 0x0
0x142: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x143
[0x143:0x14a]
---
Predecessors: [0x138]
Successors: [0x4fb]
---
0x143 JUMPDEST
0x144 PUSH2 0x115
0x147 PUSH2 0x4fb
0x14a JUMP
---
0x143: JUMPDEST 
0x144: V111 = 0x115
0x147: V112 = 0x4fb
0x14a: JUMP 0x4fb
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x115]
Exit stack: [V12, 0x115]

================================

Block 0x14b
[0x14b:0x14c]
---
Predecessors: []
Successors: []
---
0x14b JUMPDEST
0x14c STOP
---
0x14b: JUMPDEST 
0x14c: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x14d
[0x14d:0x153]
---
Predecessors: [0x50]
Successors: [0x154, 0x158]
---
0x14d JUMPDEST
0x14e CALLVALUE
0x14f ISZERO
0x150 PUSH2 0x158
0x153 JUMPI
---
0x14d: JUMPDEST 
0x14e: V113 = CALLVALUE
0x14f: V114 = ISZERO V113
0x150: V115 = 0x158
0x153: JUMPI 0x158 V114
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x154
[0x154:0x157]
---
Predecessors: [0x14d]
Successors: []
---
0x154 PUSH1 0x0
0x156 DUP1
0x157 REVERT
---
0x154: V116 = 0x0
0x157: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x158
[0x158:0x15f]
---
Predecessors: [0x14d]
Successors: [0x595]
---
0x158 JUMPDEST
0x159 PUSH2 0x115
0x15c PUSH2 0x595
0x15f JUMP
---
0x158: JUMPDEST 
0x159: V117 = 0x115
0x15c: V118 = 0x595
0x15f: JUMP 0x595
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x115]
Exit stack: [V12, 0x115]

================================

Block 0x160
[0x160:0x161]
---
Predecessors: []
Successors: []
---
0x160 JUMPDEST
0x161 STOP
---
0x160: JUMPDEST 
0x161: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x162
[0x162:0x168]
---
Predecessors: [0x5b]
Successors: [0x169, 0x16d]
---
0x162 JUMPDEST
0x163 CALLVALUE
0x164 ISZERO
0x165 PUSH2 0x16d
0x168 JUMPI
---
0x162: JUMPDEST 
0x163: V119 = CALLVALUE
0x164: V120 = ISZERO V119
0x165: V121 = 0x16d
0x168: JUMPI 0x16d V120
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x169
[0x169:0x16c]
---
Predecessors: [0x162]
Successors: []
---
0x169 PUSH1 0x0
0x16b DUP1
0x16c REVERT
---
0x169: V122 = 0x0
0x16c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x16d
[0x16d:0x174]
---
Predecessors: [0x162]
Successors: [0x5c1]
---
0x16d JUMPDEST
0x16e PUSH2 0x175
0x171 PUSH2 0x5c1
0x174 JUMP
---
0x16d: JUMPDEST 
0x16e: V123 = 0x175
0x171: V124 = 0x5c1
0x174: JUMP 0x5c1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x175]
Exit stack: [V12, 0x175]

================================

Block 0x175
[0x175:0x190]
---
Predecessors: [0x5c1]
Successors: []
---
0x175 JUMPDEST
0x176 PUSH1 0x40
0x178 MLOAD
0x179 PUSH1 0x1
0x17b PUSH1 0xa0
0x17d PUSH1 0x2
0x17f EXP
0x180 SUB
0x181 SWAP1
0x182 SWAP2
0x183 AND
0x184 DUP2
0x185 MSTORE
0x186 PUSH1 0x20
0x188 ADD
0x189 PUSH1 0x40
0x18b MLOAD
0x18c DUP1
0x18d SWAP2
0x18e SUB
0x18f SWAP1
0x190 RETURN
---
0x175: JUMPDEST 
0x176: V125 = 0x40
0x178: V126 = M[0x40]
0x179: V127 = 0x1
0x17b: V128 = 0xa0
0x17d: V129 = 0x2
0x17f: V130 = EXP 0x2 0xa0
0x180: V131 = SUB 0x10000000000000000000000000000000000000000 0x1
0x183: V132 = AND V565 0xffffffffffffffffffffffffffffffffffffffff
0x185: M[V126] = V132
0x186: V133 = 0x20
0x188: V134 = ADD 0x20 V126
0x189: V135 = 0x40
0x18b: V136 = M[0x40]
0x18e: V137 = SUB V134 V136
0x190: RETURN V136 V137
---
Entry stack: [V12, 0x175, V565]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x175]

================================

Block 0x191
[0x191:0x197]
---
Predecessors: [0x66]
Successors: [0x198, 0x19c]
---
0x191 JUMPDEST
0x192 CALLVALUE
0x193 ISZERO
0x194 PUSH2 0x19c
0x197 JUMPI
---
0x191: JUMPDEST 
0x192: V138 = CALLVALUE
0x193: V139 = ISZERO V138
0x194: V140 = 0x19c
0x197: JUMPI 0x19c V139
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x198
[0x198:0x19b]
---
Predecessors: [0x191]
Successors: []
---
0x198 PUSH1 0x0
0x19a DUP1
0x19b REVERT
---
0x198: V141 = 0x0
0x19b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x19c
[0x19c:0x1cc]
---
Predecessors: [0x191]
Successors: [0x5d0]
---
0x19c JUMPDEST
0x19d PUSH2 0xc0
0x1a0 PUSH3 0xffffff
0x1a4 PUSH1 0x4
0x1a6 CALLDATALOAD
0x1a7 AND
0x1a8 PUSH21 0xffffffffffffffffffffffffffffffffffffffffff
0x1be NOT
0x1bf PUSH1 0x24
0x1c1 CALLDATALOAD
0x1c2 DUP2
0x1c3 AND
0x1c4 SWAP1
0x1c5 PUSH1 0x44
0x1c7 CALLDATALOAD
0x1c8 AND
0x1c9 PUSH2 0x5d0
0x1cc JUMP
---
0x19c: JUMPDEST 
0x19d: V142 = 0xc0
0x1a0: V143 = 0xffffff
0x1a4: V144 = 0x4
0x1a6: V145 = CALLDATALOAD 0x4
0x1a7: V146 = AND V145 0xffffff
0x1a8: V147 = 0xffffffffffffffffffffffffffffffffffffffffff
0x1be: V148 = NOT 0xffffffffffffffffffffffffffffffffffffffffff
0x1bf: V149 = 0x24
0x1c1: V150 = CALLDATALOAD 0x24
0x1c3: V151 = AND 0xffffffffffffffffffffff000000000000000000000000000000000000000000 V150
0x1c5: V152 = 0x44
0x1c7: V153 = CALLDATALOAD 0x44
0x1c8: V154 = AND V153 0xffffffffffffffffffffff000000000000000000000000000000000000000000
0x1c9: V155 = 0x5d0
0x1cc: JUMP 0x5d0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc0, V146, V151, V154]
Exit stack: [V12, 0xc0, V146, V151, V154]

================================

Block 0x1cd
[0x1cd:0x1de]
---
Predecessors: []
Successors: []
---
0x1cd JUMPDEST
0x1ce PUSH1 0x40
0x1d0 MLOAD
0x1d1 SWAP1
0x1d2 DUP2
0x1d3 MSTORE
0x1d4 PUSH1 0x20
0x1d6 ADD
0x1d7 PUSH1 0x40
0x1d9 MLOAD
0x1da DUP1
0x1db SWAP2
0x1dc SUB
0x1dd SWAP1
0x1de RETURN
---
0x1cd: JUMPDEST 
0x1ce: V156 = 0x40
0x1d0: V157 = M[0x40]
0x1d3: M[V157] = S0
0x1d4: V158 = 0x20
0x1d6: V159 = ADD 0x20 V157
0x1d7: V160 = 0x40
0x1d9: V161 = M[0x40]
0x1dc: V162 = SUB V159 V161
0x1de: RETURN V161 V162
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1df
[0x1df:0x1e5]
---
Predecessors: [0x71]
Successors: [0x1e6, 0x1ea]
---
0x1df JUMPDEST
0x1e0 CALLVALUE
0x1e1 ISZERO
0x1e2 PUSH2 0x1ea
0x1e5 JUMPI
---
0x1df: JUMPDEST 
0x1e0: V163 = CALLVALUE
0x1e1: V164 = ISZERO V163
0x1e2: V165 = 0x1ea
0x1e5: JUMPI 0x1ea V164
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e6
[0x1e6:0x1e9]
---
Predecessors: [0x1df]
Successors: []
---
0x1e6 PUSH1 0x0
0x1e8 DUP1
0x1e9 REVERT
---
0x1e6: V166 = 0x0
0x1e9: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ea
[0x1ea:0x1fd]
---
Predecessors: [0x1df]
Successors: [0x6e5]
---
0x1ea JUMPDEST
0x1eb PUSH2 0x115
0x1ee PUSH1 0x1
0x1f0 PUSH1 0xa0
0x1f2 PUSH1 0x2
0x1f4 EXP
0x1f5 SUB
0x1f6 PUSH1 0x4
0x1f8 CALLDATALOAD
0x1f9 AND
0x1fa PUSH2 0x6e5
0x1fd JUMP
---
0x1ea: JUMPDEST 
0x1eb: V167 = 0x115
0x1ee: V168 = 0x1
0x1f0: V169 = 0xa0
0x1f2: V170 = 0x2
0x1f4: V171 = EXP 0x2 0xa0
0x1f5: V172 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f6: V173 = 0x4
0x1f8: V174 = CALLDATALOAD 0x4
0x1f9: V175 = AND V174 0xffffffffffffffffffffffffffffffffffffffff
0x1fa: V176 = 0x6e5
0x1fd: JUMP 0x6e5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x115, V175]
Exit stack: [V12, 0x115, V175]

================================

Block 0x1fe
[0x1fe:0x1ff]
---
Predecessors: []
Successors: []
---
0x1fe JUMPDEST
0x1ff STOP
---
0x1fe: JUMPDEST 
0x1ff: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x200
[0x200:0x206]
---
Predecessors: [0x7c]
Successors: [0x207, 0x20b]
---
0x200 JUMPDEST
0x201 CALLVALUE
0x202 ISZERO
0x203 PUSH2 0x20b
0x206 JUMPI
---
0x200: JUMPDEST 
0x201: V177 = CALLVALUE
0x202: V178 = ISZERO V177
0x203: V179 = 0x20b
0x206: JUMPI 0x20b V178
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x207
[0x207:0x20a]
---
Predecessors: [0x200]
Successors: []
---
0x207 PUSH1 0x0
0x209 DUP1
0x20a REVERT
---
0x207: V180 = 0x0
0x20a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x20b
[0x20b:0x21e]
---
Predecessors: [0x200]
Successors: [0x72d]
---
0x20b JUMPDEST
0x20c PUSH2 0xc0
0x20f PUSH1 0x1
0x211 PUSH1 0xa0
0x213 PUSH1 0x2
0x215 EXP
0x216 SUB
0x217 PUSH1 0x4
0x219 CALLDATALOAD
0x21a AND
0x21b PUSH2 0x72d
0x21e JUMP
---
0x20b: JUMPDEST 
0x20c: V181 = 0xc0
0x20f: V182 = 0x1
0x211: V183 = 0xa0
0x213: V184 = 0x2
0x215: V185 = EXP 0x2 0xa0
0x216: V186 = SUB 0x10000000000000000000000000000000000000000 0x1
0x217: V187 = 0x4
0x219: V188 = CALLDATALOAD 0x4
0x21a: V189 = AND V188 0xffffffffffffffffffffffffffffffffffffffff
0x21b: V190 = 0x72d
0x21e: JUMP 0x72d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc0, V189]
Exit stack: [V12, 0xc0, V189]

================================

Block 0x21f
[0x21f:0x230]
---
Predecessors: []
Successors: []
---
0x21f JUMPDEST
0x220 PUSH1 0x40
0x222 MLOAD
0x223 SWAP1
0x224 DUP2
0x225 MSTORE
0x226 PUSH1 0x20
0x228 ADD
0x229 PUSH1 0x40
0x22b MLOAD
0x22c DUP1
0x22d SWAP2
0x22e SUB
0x22f SWAP1
0x230 RETURN
---
0x21f: JUMPDEST 
0x220: V191 = 0x40
0x222: V192 = M[0x40]
0x225: M[V192] = S0
0x226: V193 = 0x20
0x228: V194 = ADD 0x20 V192
0x229: V195 = 0x40
0x22b: V196 = M[0x40]
0x22e: V197 = SUB V194 V196
0x230: RETURN V196 V197
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x231
[0x231:0x237]
---
Predecessors: [0x87]
Successors: [0x238, 0x23c]
---
0x231 JUMPDEST
0x232 CALLVALUE
0x233 ISZERO
0x234 PUSH2 0x23c
0x237 JUMPI
---
0x231: JUMPDEST 
0x232: V198 = CALLVALUE
0x233: V199 = ISZERO V198
0x234: V200 = 0x23c
0x237: JUMPI 0x23c V199
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x238
[0x238:0x23b]
---
Predecessors: [0x231]
Successors: []
---
0x238 PUSH1 0x0
0x23a DUP1
0x23b REVERT
---
0x238: V201 = 0x0
0x23b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x23c
[0x23c:0x24f]
---
Predecessors: [0x231]
Successors: [0x73f]
---
0x23c JUMPDEST
0x23d PUSH2 0x115
0x240 PUSH1 0x1
0x242 PUSH1 0xa0
0x244 PUSH1 0x2
0x246 EXP
0x247 SUB
0x248 PUSH1 0x4
0x24a CALLDATALOAD
0x24b AND
0x24c PUSH2 0x73f
0x24f JUMP
---
0x23c: JUMPDEST 
0x23d: V202 = 0x115
0x240: V203 = 0x1
0x242: V204 = 0xa0
0x244: V205 = 0x2
0x246: V206 = EXP 0x2 0xa0
0x247: V207 = SUB 0x10000000000000000000000000000000000000000 0x1
0x248: V208 = 0x4
0x24a: V209 = CALLDATALOAD 0x4
0x24b: V210 = AND V209 0xffffffffffffffffffffffffffffffffffffffff
0x24c: V211 = 0x73f
0x24f: JUMP 0x73f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x115, V210]
Exit stack: [V12, 0x115, V210]

================================

Block 0x250
[0x250:0x251]
---
Predecessors: []
Successors: []
---
0x250 JUMPDEST
0x251 STOP
---
0x250: JUMPDEST 
0x251: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x252
[0x252:0x282]
---
Predecessors: [0x92]
Successors: [0x797]
---
0x252 JUMPDEST
0x253 PUSH2 0x115
0x256 PUSH3 0xffffff
0x25a PUSH1 0x4
0x25c CALLDATALOAD
0x25d AND
0x25e PUSH21 0xffffffffffffffffffffffffffffffffffffffffff
0x274 NOT
0x275 PUSH1 0x24
0x277 CALLDATALOAD
0x278 DUP2
0x279 AND
0x27a SWAP1
0x27b PUSH1 0x44
0x27d CALLDATALOAD
0x27e AND
0x27f PUSH2 0x797
0x282 JUMP
---
0x252: JUMPDEST 
0x253: V212 = 0x115
0x256: V213 = 0xffffff
0x25a: V214 = 0x4
0x25c: V215 = CALLDATALOAD 0x4
0x25d: V216 = AND V215 0xffffff
0x25e: V217 = 0xffffffffffffffffffffffffffffffffffffffffff
0x274: V218 = NOT 0xffffffffffffffffffffffffffffffffffffffffff
0x275: V219 = 0x24
0x277: V220 = CALLDATALOAD 0x24
0x279: V221 = AND 0xffffffffffffffffffffff000000000000000000000000000000000000000000 V220
0x27b: V222 = 0x44
0x27d: V223 = CALLDATALOAD 0x44
0x27e: V224 = AND V223 0xffffffffffffffffffffff000000000000000000000000000000000000000000
0x27f: V225 = 0x797
0x282: JUMP 0x797
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x115, V216, V221, V224]
Exit stack: [V12, 0x115, V216, V221, V224]

================================

Block 0x283
[0x283:0x284]
---
Predecessors: []
Successors: []
---
0x283 JUMPDEST
0x284 STOP
---
0x283: JUMPDEST 
0x284: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x285
[0x285:0x28b]
---
Predecessors: [0x9d]
Successors: [0x28c, 0x290]
---
0x285 JUMPDEST
0x286 CALLVALUE
0x287 ISZERO
0x288 PUSH2 0x290
0x28b JUMPI
---
0x285: JUMPDEST 
0x286: V226 = CALLVALUE
0x287: V227 = ISZERO V226
0x288: V228 = 0x290
0x28b: JUMPI 0x290 V227
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x28c
[0x28c:0x28f]
---
Predecessors: [0x285]
Successors: []
---
0x28c PUSH1 0x0
0x28e DUP1
0x28f REVERT
---
0x28c: V229 = 0x0
0x28f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x290
[0x290:0x2a3]
---
Predecessors: [0x285]
Successors: [0x8ad]
---
0x290 JUMPDEST
0x291 PUSH2 0x115
0x294 PUSH1 0x1
0x296 PUSH1 0xa0
0x298 PUSH1 0x2
0x29a EXP
0x29b SUB
0x29c PUSH1 0x4
0x29e CALLDATALOAD
0x29f AND
0x2a0 PUSH2 0x8ad
0x2a3 JUMP
---
0x290: JUMPDEST 
0x291: V230 = 0x115
0x294: V231 = 0x1
0x296: V232 = 0xa0
0x298: V233 = 0x2
0x29a: V234 = EXP 0x2 0xa0
0x29b: V235 = SUB 0x10000000000000000000000000000000000000000 0x1
0x29c: V236 = 0x4
0x29e: V237 = CALLDATALOAD 0x4
0x29f: V238 = AND V237 0xffffffffffffffffffffffffffffffffffffffff
0x2a0: V239 = 0x8ad
0x2a3: JUMP 0x8ad
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x115, V238]
Exit stack: [V12, 0x115, V238]

================================

Block 0x2a4
[0x2a4:0x2a5]
---
Predecessors: []
Successors: []
---
0x2a4 JUMPDEST
0x2a5 STOP
---
0x2a4: JUMPDEST 
0x2a5: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2a6
[0x2a6:0x2ab]
---
Predecessors: [0xb8]
Successors: [0xc0]
---
0x2a6 JUMPDEST
0x2a7 PUSH1 0x2
0x2a9 SLOAD
0x2aa DUP2
0x2ab JUMP
---
0x2a6: JUMPDEST 
0x2a7: V240 = 0x2
0x2a9: V241 = S[0x2]
0x2ab: JUMP 0xc0
---
Entry stack: [V12, 0xc0]
Stack pops: 1
Stack additions: [S0, V241]
Exit stack: [V12, 0xc0, V241]

================================

Block 0x2ac
[0x2ac:0x304]
---
Predecessors: [0xdd, 0x497]
Successors: [0x305, 0x309]
---
0x2ac JUMPDEST
0x2ad PUSH1 0x4
0x2af SLOAD
0x2b0 PUSH1 0x0
0x2b2 SWAP1
0x2b3 PUSH1 0x1
0x2b5 PUSH1 0xa0
0x2b7 PUSH1 0x2
0x2b9 EXP
0x2ba SUB
0x2bb AND
0x2bc PUSH4 0x489c3507
0x2c1 DUP5
0x2c2 DUP5
0x2c3 DUP5
0x2c4 PUSH1 0x40
0x2c6 MLOAD
0x2c7 PUSH1 0x20
0x2c9 ADD
0x2ca MSTORE
0x2cb PUSH1 0x40
0x2cd MLOAD
0x2ce PUSH1 0xe0
0x2d0 PUSH1 0x2
0x2d2 EXP
0x2d3 PUSH4 0xffffffff
0x2d8 DUP6
0x2d9 AND
0x2da MUL
0x2db DUP2
0x2dc MSTORE
0x2dd PUSH3 0xffffff
0x2e1 SWAP1
0x2e2 SWAP3
0x2e3 AND
0x2e4 PUSH1 0x4
0x2e6 DUP4
0x2e7 ADD
0x2e8 MSTORE
0x2e9 PUSH1 0x24
0x2eb DUP3
0x2ec ADD
0x2ed MSTORE
0x2ee PUSH1 0x44
0x2f0 ADD
0x2f1 PUSH1 0x20
0x2f3 PUSH1 0x40
0x2f5 MLOAD
0x2f6 DUP1
0x2f7 DUP4
0x2f8 SUB
0x2f9 DUP2
0x2fa PUSH1 0x0
0x2fc DUP8
0x2fd DUP1
0x2fe EXTCODESIZE
0x2ff ISZERO
0x300 ISZERO
0x301 PUSH2 0x309
0x304 JUMPI
---
0x2ac: JUMPDEST 
0x2ad: V242 = 0x4
0x2af: V243 = S[0x4]
0x2b0: V244 = 0x0
0x2b3: V245 = 0x1
0x2b5: V246 = 0xa0
0x2b7: V247 = 0x2
0x2b9: V248 = EXP 0x2 0xa0
0x2ba: V249 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2bb: V250 = AND 0xffffffffffffffffffffffffffffffffffffffff V243
0x2bc: V251 = 0x489c3507
0x2c4: V252 = 0x40
0x2c6: V253 = M[0x40]
0x2c7: V254 = 0x20
0x2c9: V255 = ADD 0x20 V253
0x2ca: M[V255] = 0x0
0x2cb: V256 = 0x40
0x2cd: V257 = M[0x40]
0x2ce: V258 = 0xe0
0x2d0: V259 = 0x2
0x2d2: V260 = EXP 0x2 0xe0
0x2d3: V261 = 0xffffffff
0x2d9: V262 = AND 0x489c3507 0xffffffff
0x2da: V263 = MUL 0x489c3507 0x100000000000000000000000000000000000000000000000000000000
0x2dc: M[V257] = 0x489c350700000000000000000000000000000000000000000000000000000000
0x2dd: V264 = 0xffffff
0x2e3: V265 = AND S1 0xffffff
0x2e4: V266 = 0x4
0x2e7: V267 = ADD V257 0x4
0x2e8: M[V267] = V265
0x2e9: V268 = 0x24
0x2ec: V269 = ADD V257 0x24
0x2ed: M[V269] = S0
0x2ee: V270 = 0x44
0x2f0: V271 = ADD 0x44 V257
0x2f1: V272 = 0x20
0x2f3: V273 = 0x40
0x2f5: V274 = M[0x40]
0x2f8: V275 = SUB V271 V274
0x2fa: V276 = 0x0
0x2fe: V277 = EXTCODESIZE V250
0x2ff: V278 = ISZERO V277
0x300: V279 = ISZERO V278
0x301: V280 = 0x309
0x304: JUMPI 0x309 V279
---
Entry stack: [V12, 0x115, V89, V91, S3, {0xc0, 0x4a1}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V250, 0x489c3507, V271, 0x20, V274, V275, V274, 0x0, V250]
Exit stack: [V12, 0x115, V89, V91, S3, {0xc0, 0x4a1}, S1, S0, 0x0, V250, 0x489c3507, V271, 0x20, V274, V275, V274, 0x0, V250]

================================

Block 0x305
[0x305:0x308]
---
Predecessors: [0x2ac]
Successors: []
---
0x305 PUSH1 0x0
0x307 DUP1
0x308 REVERT
---
0x305: V281 = 0x0
0x308: REVERT 0x0 0x0
---
Entry stack: [V12, 0x115, V89, V91, S13, {0xc0, 0x4a1}, S11, S10, 0x0, V250, 0x489c3507, V271, 0x20, V274, V275, V274, 0x0, V250]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x115, V89, V91, S13, {0xc0, 0x4a1}, S11, S10, 0x0, V250, 0x489c3507, V271, 0x20, V274, V275, V274, 0x0, V250]

================================

Block 0x309
[0x309:0x315]
---
Predecessors: [0x2ac]
Successors: [0x316, 0x31a]
---
0x309 JUMPDEST
0x30a PUSH2 0x2c6
0x30d GAS
0x30e SUB
0x30f CALL
0x310 ISZERO
0x311 ISZERO
0x312 PUSH2 0x31a
0x315 JUMPI
---
0x309: JUMPDEST 
0x30a: V282 = 0x2c6
0x30d: V283 = GAS
0x30e: V284 = SUB V283 0x2c6
0x30f: V285 = CALL V284 V250 0x0 V274 V275 V274 0x20
0x310: V286 = ISZERO V285
0x311: V287 = ISZERO V286
0x312: V288 = 0x31a
0x315: JUMPI 0x31a V287
---
Entry stack: [V12, 0x115, V89, V91, S13, {0xc0, 0x4a1}, S11, S10, 0x0, V250, 0x489c3507, V271, 0x20, V274, V275, V274, 0x0, V250]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x115, V89, V91, S13, {0xc0, 0x4a1}, S11, S10, 0x0, V250, 0x489c3507, V271]

================================

Block 0x316
[0x316:0x319]
---
Predecessors: [0x309]
Successors: []
---
0x316 PUSH1 0x0
0x318 DUP1
0x319 REVERT
---
0x316: V289 = 0x0
0x319: REVERT 0x0 0x0
---
Entry stack: [V12, 0x115, V89, V91, S7, {0xc0, 0x4a1}, S5, S4, 0x0, S2, 0x489c3507, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x115, V89, V91, S7, {0xc0, 0x4a1}, S5, S4, 0x0, S2, 0x489c3507, S0]

================================

Block 0x31a
[0x31a:0x375]
---
Predecessors: [0x309]
Successors: [0x376, 0x37a]
---
0x31a JUMPDEST
0x31b POP
0x31c POP
0x31d POP
0x31e PUSH1 0x40
0x320 MLOAD
0x321 DUP1
0x322 MLOAD
0x323 PUSH1 0x4
0x325 SLOAD
0x326 SWAP1
0x327 SWAP2
0x328 POP
0x329 PUSH1 0x1
0x32b PUSH1 0xa0
0x32d PUSH1 0x2
0x32f EXP
0x330 SUB
0x331 AND
0x332 PUSH4 0xfe407f4f
0x337 DUP6
0x338 PUSH1 0x0
0x33a PUSH1 0x40
0x33c MLOAD
0x33d PUSH1 0x20
0x33f ADD
0x340 MSTORE
0x341 PUSH1 0x40
0x343 MLOAD
0x344 PUSH1 0xe0
0x346 PUSH1 0x2
0x348 EXP
0x349 PUSH4 0xffffffff
0x34e DUP5
0x34f AND
0x350 MUL
0x351 DUP2
0x352 MSTORE
0x353 PUSH3 0xffffff
0x357 SWAP1
0x358 SWAP2
0x359 AND
0x35a PUSH1 0x4
0x35c DUP3
0x35d ADD
0x35e MSTORE
0x35f PUSH1 0x24
0x361 ADD
0x362 PUSH1 0x20
0x364 PUSH1 0x40
0x366 MLOAD
0x367 DUP1
0x368 DUP4
0x369 SUB
0x36a DUP2
0x36b PUSH1 0x0
0x36d DUP8
0x36e DUP1
0x36f EXTCODESIZE
0x370 ISZERO
0x371 ISZERO
0x372 PUSH2 0x37a
0x375 JUMPI
---
0x31a: JUMPDEST 
0x31e: V290 = 0x40
0x320: V291 = M[0x40]
0x322: V292 = M[V291]
0x323: V293 = 0x4
0x325: V294 = S[0x4]
0x329: V295 = 0x1
0x32b: V296 = 0xa0
0x32d: V297 = 0x2
0x32f: V298 = EXP 0x2 0xa0
0x330: V299 = SUB 0x10000000000000000000000000000000000000000 0x1
0x331: V300 = AND 0xffffffffffffffffffffffffffffffffffffffff V294
0x332: V301 = 0xfe407f4f
0x338: V302 = 0x0
0x33a: V303 = 0x40
0x33c: V304 = M[0x40]
0x33d: V305 = 0x20
0x33f: V306 = ADD 0x20 V304
0x340: M[V306] = 0x0
0x341: V307 = 0x40
0x343: V308 = M[0x40]
0x344: V309 = 0xe0
0x346: V310 = 0x2
0x348: V311 = EXP 0x2 0xe0
0x349: V312 = 0xffffffff
0x34f: V313 = AND 0xfe407f4f 0xffffffff
0x350: V314 = MUL 0xfe407f4f 0x100000000000000000000000000000000000000000000000000000000
0x352: M[V308] = 0xfe407f4f00000000000000000000000000000000000000000000000000000000
0x353: V315 = 0xffffff
0x359: V316 = AND S5 0xffffff
0x35a: V317 = 0x4
0x35d: V318 = ADD V308 0x4
0x35e: M[V318] = V316
0x35f: V319 = 0x24
0x361: V320 = ADD 0x24 V308
0x362: V321 = 0x20
0x364: V322 = 0x40
0x366: V323 = M[0x40]
0x369: V324 = SUB V320 V323
0x36b: V325 = 0x0
0x36f: V326 = EXTCODESIZE V300
0x370: V327 = ISZERO V326
0x371: V328 = ISZERO V327
0x372: V329 = 0x37a
0x375: JUMPI 0x37a V328
---
Entry stack: [V12, 0x115, V89, V91, S7, {0xc0, 0x4a1}, S5, S4, 0x0, S2, 0x489c3507, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, V292, V300, 0xfe407f4f, V320, 0x20, V323, V324, V323, 0x0, V300]
Exit stack: [V12, 0x115, V89, V91, S7, {0xc0, 0x4a1}, S5, S4, 0x0, V292, V300, 0xfe407f4f, V320, 0x20, V323, V324, V323, 0x0, V300]

================================

Block 0x376
[0x376:0x379]
---
Predecessors: [0x31a]
Successors: []
---
0x376 PUSH1 0x0
0x378 DUP1
0x379 REVERT
---
0x376: V330 = 0x0
0x379: REVERT 0x0 0x0
---
Entry stack: [V12, 0x115, V89, V91, S14, {0xc0, 0x4a1}, S12, S11, 0x0, V292, V300, 0xfe407f4f, V320, 0x20, V323, V324, V323, 0x0, V300]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x115, V89, V91, S14, {0xc0, 0x4a1}, S12, S11, 0x0, V292, V300, 0xfe407f4f, V320, 0x20, V323, V324, V323, 0x0, V300]

================================

Block 0x37a
[0x37a:0x386]
---
Predecessors: [0x31a]
Successors: [0x387, 0x38b]
---
0x37a JUMPDEST
0x37b PUSH2 0x2c6
0x37e GAS
0x37f SUB
0x380 CALL
0x381 ISZERO
0x382 ISZERO
0x383 PUSH2 0x38b
0x386 JUMPI
---
0x37a: JUMPDEST 
0x37b: V331 = 0x2c6
0x37e: V332 = GAS
0x37f: V333 = SUB V332 0x2c6
0x380: V334 = CALL V333 V300 0x0 V323 V324 V323 0x20
0x381: V335 = ISZERO V334
0x382: V336 = ISZERO V335
0x383: V337 = 0x38b
0x386: JUMPI 0x38b V336
---
Entry stack: [V12, 0x115, V89, V91, S14, {0xc0, 0x4a1}, S12, S11, 0x0, V292, V300, 0xfe407f4f, V320, 0x20, V323, V324, V323, 0x0, V300]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x115, V89, V91, S14, {0xc0, 0x4a1}, S12, S11, 0x0, V292, V300, 0xfe407f4f, V320]

================================

Block 0x387
[0x387:0x38a]
---
Predecessors: [0x37a]
Successors: []
---
0x387 PUSH1 0x0
0x389 DUP1
0x38a REVERT
---
0x387: V338 = 0x0
0x38a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x115, V89, V91, S8, {0xc0, 0x4a1}, S6, S5, 0x0, S3, S2, 0xfe407f4f, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x115, V89, V91, S8, {0xc0, 0x4a1}, S6, S5, 0x0, S3, S2, 0xfe407f4f, S0]

================================

Block 0x38b
[0x38b:0x398]
---
Predecessors: [0x37a]
Successors: [0x399]
---
0x38b JUMPDEST
0x38c POP
0x38d POP
0x38e POP
0x38f PUSH1 0x40
0x391 MLOAD
0x392 DUP1
0x393 MLOAD
0x394 SWAP1
0x395 POP
0x396 ADD
0x397 SWAP1
0x398 POP
---
0x38b: JUMPDEST 
0x38f: V339 = 0x40
0x391: V340 = M[0x40]
0x393: V341 = M[V340]
0x396: V342 = ADD V341 S3
---
Entry stack: [V12, 0x115, V89, V91, S8, {0xc0, 0x4a1}, S6, S5, 0x0, S3, S2, 0xfe407f4f, S0]
Stack pops: 5
Stack additions: [V342]
Exit stack: [V12, 0x115, V89, V91, S8, {0xc0, 0x4a1}, S6, S5, V342]

================================

Block 0x399
[0x399:0x39e]
---
Predecessors: [0x38b]
Successors: [0xc0, 0x4a1]
---
0x399 JUMPDEST
0x39a SWAP3
0x39b SWAP2
0x39c POP
0x39d POP
0x39e JUMP
---
0x399: JUMPDEST 
0x39e: JUMP {0xc0, 0x4a1}
---
Entry stack: [V12, 0x115, V89, V91, S4, {0xc0, 0x4a1}, S2, S1, V342]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, 0x115, V89, V91, S4, V342]

================================

Block 0x39f
[0x39f:0x3f1]
---
Predecessors: [0x102]
Successors: [0x3f2, 0x3f6]
---
0x39f JUMPDEST
0x3a0 PUSH1 0x4
0x3a2 SLOAD
0x3a3 PUSH1 0x0
0x3a5 SWAP1
0x3a6 PUSH1 0x1
0x3a8 PUSH1 0xa0
0x3aa PUSH1 0x2
0x3ac EXP
0x3ad SUB
0x3ae AND
0x3af PUSH4 0x29d68b00
0x3b4 DUP5
0x3b5 DUP4
0x3b6 PUSH1 0x40
0x3b8 MLOAD
0x3b9 PUSH1 0x20
0x3bb ADD
0x3bc MSTORE
0x3bd PUSH1 0x40
0x3bf MLOAD
0x3c0 PUSH1 0xe0
0x3c2 PUSH1 0x2
0x3c4 EXP
0x3c5 PUSH4 0xffffffff
0x3ca DUP5
0x3cb AND
0x3cc MUL
0x3cd DUP2
0x3ce MSTORE
0x3cf PUSH3 0xffffff
0x3d3 SWAP1
0x3d4 SWAP2
0x3d5 AND
0x3d6 PUSH1 0x4
0x3d8 DUP3
0x3d9 ADD
0x3da MSTORE
0x3db PUSH1 0x24
0x3dd ADD
0x3de PUSH1 0x20
0x3e0 PUSH1 0x40
0x3e2 MLOAD
0x3e3 DUP1
0x3e4 DUP4
0x3e5 SUB
0x3e6 DUP2
0x3e7 PUSH1 0x0
0x3e9 DUP8
0x3ea DUP1
0x3eb EXTCODESIZE
0x3ec ISZERO
0x3ed ISZERO
0x3ee PUSH2 0x3f6
0x3f1 JUMPI
---
0x39f: JUMPDEST 
0x3a0: V343 = 0x4
0x3a2: V344 = S[0x4]
0x3a3: V345 = 0x0
0x3a6: V346 = 0x1
0x3a8: V347 = 0xa0
0x3aa: V348 = 0x2
0x3ac: V349 = EXP 0x2 0xa0
0x3ad: V350 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ae: V351 = AND 0xffffffffffffffffffffffffffffffffffffffff V344
0x3af: V352 = 0x29d68b00
0x3b6: V353 = 0x40
0x3b8: V354 = M[0x40]
0x3b9: V355 = 0x20
0x3bb: V356 = ADD 0x20 V354
0x3bc: M[V356] = 0x0
0x3bd: V357 = 0x40
0x3bf: V358 = M[0x40]
0x3c0: V359 = 0xe0
0x3c2: V360 = 0x2
0x3c4: V361 = EXP 0x2 0xe0
0x3c5: V362 = 0xffffffff
0x3cb: V363 = AND 0x29d68b00 0xffffffff
0x3cc: V364 = MUL 0x29d68b00 0x100000000000000000000000000000000000000000000000000000000
0x3ce: M[V358] = 0x29d68b0000000000000000000000000000000000000000000000000000000000
0x3cf: V365 = 0xffffff
0x3d5: V366 = AND V89 0xffffff
0x3d6: V367 = 0x4
0x3d9: V368 = ADD V358 0x4
0x3da: M[V368] = V366
0x3db: V369 = 0x24
0x3dd: V370 = ADD 0x24 V358
0x3de: V371 = 0x20
0x3e0: V372 = 0x40
0x3e2: V373 = M[0x40]
0x3e5: V374 = SUB V370 V373
0x3e7: V375 = 0x0
0x3eb: V376 = EXTCODESIZE V351
0x3ec: V377 = ISZERO V376
0x3ed: V378 = ISZERO V377
0x3ee: V379 = 0x3f6
0x3f1: JUMPI 0x3f6 V378
---
Entry stack: [V12, 0x115, V89, V91]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V351, 0x29d68b00, V370, 0x20, V373, V374, V373, 0x0, V351]
Exit stack: [V12, 0x115, V89, V91, 0x0, V351, 0x29d68b00, V370, 0x20, V373, V374, V373, 0x0, V351]

================================

Block 0x3f2
[0x3f2:0x3f5]
---
Predecessors: [0x39f]
Successors: []
---
0x3f2 PUSH1 0x0
0x3f4 DUP1
0x3f5 REVERT
---
0x3f2: V380 = 0x0
0x3f5: REVERT 0x0 0x0
---
Entry stack: [V12, 0x115, V89, V91, 0x0, V351, 0x29d68b00, V370, 0x20, V373, V374, V373, 0x0, V351]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x115, V89, V91, 0x0, V351, 0x29d68b00, V370, 0x20, V373, V374, V373, 0x0, V351]

================================

Block 0x3f6
[0x3f6:0x402]
---
Predecessors: [0x39f]
Successors: [0x403, 0x407]
---
0x3f6 JUMPDEST
0x3f7 PUSH2 0x2c6
0x3fa GAS
0x3fb SUB
0x3fc CALL
0x3fd ISZERO
0x3fe ISZERO
0x3ff PUSH2 0x407
0x402 JUMPI
---
0x3f6: JUMPDEST 
0x3f7: V381 = 0x2c6
0x3fa: V382 = GAS
0x3fb: V383 = SUB V382 0x2c6
0x3fc: V384 = CALL V383 V351 0x0 V373 V374 V373 0x20
0x3fd: V385 = ISZERO V384
0x3fe: V386 = ISZERO V385
0x3ff: V387 = 0x407
0x402: JUMPI 0x407 V386
---
Entry stack: [V12, 0x115, V89, V91, 0x0, V351, 0x29d68b00, V370, 0x20, V373, V374, V373, 0x0, V351]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x115, V89, V91, 0x0, V351, 0x29d68b00, V370]

================================

Block 0x403
[0x403:0x406]
---
Predecessors: [0x3f6]
Successors: []
---
0x403 PUSH1 0x0
0x405 DUP1
0x406 REVERT
---
0x403: V388 = 0x0
0x406: REVERT 0x0 0x0
---
Entry stack: [V12, 0x115, V89, V91, 0x0, V351, 0x29d68b00, V370]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x115, V89, V91, 0x0, V351, 0x29d68b00, V370]

================================

Block 0x407
[0x407:0x417]
---
Predecessors: [0x3f6]
Successors: [0x418, 0x41c]
---
0x407 JUMPDEST
0x408 POP
0x409 POP
0x40a POP
0x40b PUSH1 0x40
0x40d MLOAD
0x40e DUP1
0x40f MLOAD
0x410 SWAP1
0x411 POP
0x412 ISZERO
0x413 ISZERO
0x414 PUSH2 0x41c
0x417 JUMPI
---
0x407: JUMPDEST 
0x40b: V389 = 0x40
0x40d: V390 = M[0x40]
0x40f: V391 = M[V390]
0x412: V392 = ISZERO V391
0x413: V393 = ISZERO V392
0x414: V394 = 0x41c
0x417: JUMPI 0x41c V393
---
Entry stack: [V12, 0x115, V89, V91, 0x0, V351, 0x29d68b00, V370]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x115, V89, V91, 0x0]

================================

Block 0x418
[0x418:0x41b]
---
Predecessors: [0x407]
Successors: []
---
0x418 PUSH1 0x0
0x41a DUP1
0x41b REVERT
---
0x418: V395 = 0x0
0x41b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x115, V89, V91, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x115, V89, V91, 0x0]

================================

Block 0x41c
[0x41c:0x46c]
---
Predecessors: [0x407]
Successors: [0x46d, 0x471]
---
0x41c JUMPDEST
0x41d PUSH1 0x4
0x41f SLOAD
0x420 PUSH1 0x1
0x422 PUSH1 0xa0
0x424 PUSH1 0x2
0x426 EXP
0x427 SUB
0x428 AND
0x429 PUSH4 0xb5254419
0x42e DUP5
0x42f PUSH1 0x0
0x431 PUSH1 0x40
0x433 MLOAD
0x434 PUSH1 0x20
0x436 ADD
0x437 MSTORE
0x438 PUSH1 0x40
0x43a MLOAD
0x43b PUSH1 0xe0
0x43d PUSH1 0x2
0x43f EXP
0x440 PUSH4 0xffffffff
0x445 DUP5
0x446 AND
0x447 MUL
0x448 DUP2
0x449 MSTORE
0x44a PUSH3 0xffffff
0x44e SWAP1
0x44f SWAP2
0x450 AND
0x451 PUSH1 0x4
0x453 DUP3
0x454 ADD
0x455 MSTORE
0x456 PUSH1 0x24
0x458 ADD
0x459 PUSH1 0x20
0x45b PUSH1 0x40
0x45d MLOAD
0x45e DUP1
0x45f DUP4
0x460 SUB
0x461 DUP2
0x462 PUSH1 0x0
0x464 DUP8
0x465 DUP1
0x466 EXTCODESIZE
0x467 ISZERO
0x468 ISZERO
0x469 PUSH2 0x471
0x46c JUMPI
---
0x41c: JUMPDEST 
0x41d: V396 = 0x4
0x41f: V397 = S[0x4]
0x420: V398 = 0x1
0x422: V399 = 0xa0
0x424: V400 = 0x2
0x426: V401 = EXP 0x2 0xa0
0x427: V402 = SUB 0x10000000000000000000000000000000000000000 0x1
0x428: V403 = AND 0xffffffffffffffffffffffffffffffffffffffff V397
0x429: V404 = 0xb5254419
0x42f: V405 = 0x0
0x431: V406 = 0x40
0x433: V407 = M[0x40]
0x434: V408 = 0x20
0x436: V409 = ADD 0x20 V407
0x437: M[V409] = 0x0
0x438: V410 = 0x40
0x43a: V411 = M[0x40]
0x43b: V412 = 0xe0
0x43d: V413 = 0x2
0x43f: V414 = EXP 0x2 0xe0
0x440: V415 = 0xffffffff
0x446: V416 = AND 0xb5254419 0xffffffff
0x447: V417 = MUL 0xb5254419 0x100000000000000000000000000000000000000000000000000000000
0x449: M[V411] = 0xb525441900000000000000000000000000000000000000000000000000000000
0x44a: V418 = 0xffffff
0x450: V419 = AND V89 0xffffff
0x451: V420 = 0x4
0x454: V421 = ADD V411 0x4
0x455: M[V421] = V419
0x456: V422 = 0x24
0x458: V423 = ADD 0x24 V411
0x459: V424 = 0x20
0x45b: V425 = 0x40
0x45d: V426 = M[0x40]
0x460: V427 = SUB V423 V426
0x462: V428 = 0x0
0x466: V429 = EXTCODESIZE V403
0x467: V430 = ISZERO V429
0x468: V431 = ISZERO V430
0x469: V432 = 0x471
0x46c: JUMPI 0x471 V431
---
Entry stack: [V12, 0x115, V89, V91, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V403, 0xb5254419, V423, 0x20, V426, V427, V426, 0x0, V403]
Exit stack: [V12, 0x115, V89, V91, 0x0, V403, 0xb5254419, V423, 0x20, V426, V427, V426, 0x0, V403]

================================

Block 0x46d
[0x46d:0x470]
---
Predecessors: [0x41c]
Successors: []
---
0x46d PUSH1 0x0
0x46f DUP1
0x470 REVERT
---
0x46d: V433 = 0x0
0x470: REVERT 0x0 0x0
---
Entry stack: [V12, 0x115, V89, V91, 0x0, V403, 0xb5254419, V423, 0x20, V426, V427, V426, 0x0, V403]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x115, V89, V91, 0x0, V403, 0xb5254419, V423, 0x20, V426, V427, V426, 0x0, V403]

================================

Block 0x471
[0x471:0x47d]
---
Predecessors: [0x41c]
Successors: [0x47e, 0x482]
---
0x471 JUMPDEST
0x472 PUSH2 0x2c6
0x475 GAS
0x476 SUB
0x477 CALL
0x478 ISZERO
0x479 ISZERO
0x47a PUSH2 0x482
0x47d JUMPI
---
0x471: JUMPDEST 
0x472: V434 = 0x2c6
0x475: V435 = GAS
0x476: V436 = SUB V435 0x2c6
0x477: V437 = CALL V436 V403 0x0 V426 V427 V426 0x20
0x478: V438 = ISZERO V437
0x479: V439 = ISZERO V438
0x47a: V440 = 0x482
0x47d: JUMPI 0x482 V439
---
Entry stack: [V12, 0x115, V89, V91, 0x0, V403, 0xb5254419, V423, 0x20, V426, V427, V426, 0x0, V403]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x115, V89, V91, 0x0, V403, 0xb5254419, V423]

================================

Block 0x47e
[0x47e:0x481]
---
Predecessors: [0x471]
Successors: []
---
0x47e PUSH1 0x0
0x480 DUP1
0x481 REVERT
---
0x47e: V441 = 0x0
0x481: REVERT 0x0 0x0
---
Entry stack: [V12, 0x115, V89, V91, 0x0, V403, 0xb5254419, V423]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x115, V89, V91, 0x0, V403, 0xb5254419, V423]

================================

Block 0x482
[0x482:0x492]
---
Predecessors: [0x471]
Successors: [0x493, 0x497]
---
0x482 JUMPDEST
0x483 POP
0x484 POP
0x485 POP
0x486 PUSH1 0x40
0x488 MLOAD
0x489 DUP1
0x48a MLOAD
0x48b SWAP1
0x48c POP
0x48d ISZERO
0x48e ISZERO
0x48f PUSH2 0x497
0x492 JUMPI
---
0x482: JUMPDEST 
0x486: V442 = 0x40
0x488: V443 = M[0x40]
0x48a: V444 = M[V443]
0x48d: V445 = ISZERO V444
0x48e: V446 = ISZERO V445
0x48f: V447 = 0x497
0x492: JUMPI 0x497 V446
---
Entry stack: [V12, 0x115, V89, V91, 0x0, V403, 0xb5254419, V423]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x115, V89, V91, 0x0]

================================

Block 0x493
[0x493:0x496]
---
Predecessors: [0x482]
Successors: []
---
0x493 PUSH1 0x0
0x495 DUP1
0x496 REVERT
---
0x493: V448 = 0x0
0x496: REVERT 0x0 0x0
---
Entry stack: [V12, 0x115, V89, V91, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x115, V89, V91, 0x0]

================================

Block 0x497
[0x497:0x4a0]
---
Predecessors: [0x482]
Successors: [0x2ac]
---
0x497 JUMPDEST
0x498 PUSH2 0x4a1
0x49b DUP4
0x49c DUP4
0x49d PUSH2 0x2ac
0x4a0 JUMP
---
0x497: JUMPDEST 
0x498: V449 = 0x4a1
0x49d: V450 = 0x2ac
0x4a0: JUMP 0x2ac
---
Entry stack: [V12, 0x115, V89, V91, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x4a1, S2, S1]
Exit stack: [V12, 0x115, V89, V91, 0x0, 0x4a1, V89, V91]

================================

Block 0x4a1
[0x4a1:0x4ac]
---
Predecessors: [0x399]
Successors: [0x8d8]
---
0x4a1 JUMPDEST
0x4a2 SWAP1
0x4a3 POP
0x4a4 PUSH2 0x4ad
0x4a7 DUP4
0x4a8 DUP3
0x4a9 PUSH2 0x8d8
0x4ac JUMP
---
0x4a1: JUMPDEST 
0x4a4: V451 = 0x4ad
0x4a9: V452 = 0x8d8
0x4ac: JUMP 0x8d8
---
Entry stack: [V12, 0x115, V89, V91, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S0, 0x4ad, S3, S0]
Exit stack: [V12, 0x115, V89, V91, S0, 0x4ad, V89, S0]

================================

Block 0x4ad
[0x4ad:0x4ad]
---
Predecessors: [0xa93]
Successors: [0x4ae]
---
0x4ad JUMPDEST
---
0x4ad: JUMPDEST 
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, S3, S2, S1, S0]

================================

Block 0x4ae
[0x4ae:0x4b2]
---
Predecessors: [0x4ad]
Successors: [0x115]
---
0x4ae JUMPDEST
0x4af POP
0x4b0 POP
0x4b1 POP
0x4b2 JUMP
---
0x4ae: JUMPDEST 
0x4b2: JUMP S3
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12, S4]

================================

Block 0x4b3
[0x4b3:0x4c9]
---
Predecessors: [0x122]
Successors: [0x4ca, 0x4ce]
---
0x4b3 JUMPDEST
0x4b4 PUSH1 0x0
0x4b6 SLOAD
0x4b7 CALLER
0x4b8 PUSH1 0x1
0x4ba PUSH1 0xa0
0x4bc PUSH1 0x2
0x4be EXP
0x4bf SUB
0x4c0 SWAP1
0x4c1 DUP2
0x4c2 AND
0x4c3 SWAP2
0x4c4 AND
0x4c5 EQ
0x4c6 PUSH2 0x4ce
0x4c9 JUMPI
---
0x4b3: JUMPDEST 
0x4b4: V453 = 0x0
0x4b6: V454 = S[0x0]
0x4b7: V455 = CALLER
0x4b8: V456 = 0x1
0x4ba: V457 = 0xa0
0x4bc: V458 = 0x2
0x4be: V459 = EXP 0x2 0xa0
0x4bf: V460 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c2: V461 = AND 0xffffffffffffffffffffffffffffffffffffffff V455
0x4c4: V462 = AND V454 0xffffffffffffffffffffffffffffffffffffffff
0x4c5: V463 = EQ V462 V461
0x4c6: V464 = 0x4ce
0x4c9: JUMPI 0x4ce V463
---
Entry stack: [V12, 0x115, V105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x115, V105]

================================

Block 0x4ca
[0x4ca:0x4cd]
---
Predecessors: [0x4b3]
Successors: []
---
0x4ca PUSH1 0x0
0x4cc DUP1
0x4cd REVERT
---
0x4ca: V465 = 0x0
0x4cd: REVERT 0x0 0x0
---
Entry stack: [V12, 0x115, V105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x115, V105]

================================

Block 0x4ce
[0x4ce:0x4f6]
---
Predecessors: [0x4b3]
Successors: [0x4f7]
---
0x4ce JUMPDEST
0x4cf PUSH1 0x3
0x4d1 DUP1
0x4d2 SLOAD
0x4d3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4e8 NOT
0x4e9 AND
0x4ea PUSH1 0x1
0x4ec PUSH1 0xa0
0x4ee PUSH1 0x2
0x4f0 EXP
0x4f1 SUB
0x4f2 DUP4
0x4f3 AND
0x4f4 OR
0x4f5 SWAP1
0x4f6 SSTORE
---
0x4ce: JUMPDEST 
0x4cf: V466 = 0x3
0x4d2: V467 = S[0x3]
0x4d3: V468 = 0xffffffffffffffffffffffffffffffffffffffff
0x4e8: V469 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x4e9: V470 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V467
0x4ea: V471 = 0x1
0x4ec: V472 = 0xa0
0x4ee: V473 = 0x2
0x4f0: V474 = EXP 0x2 0xa0
0x4f1: V475 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f3: V476 = AND V105 0xffffffffffffffffffffffffffffffffffffffff
0x4f4: V477 = OR V476 V470
0x4f6: S[0x3] = V477
---
Entry stack: [V12, 0x115, V105]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x115, V105]

================================

Block 0x4f7
[0x4f7:0x4f7]
---
Predecessors: [0x4ce, 0x75a]
Successors: [0x4f8]
---
0x4f7 JUMPDEST
---
0x4f7: JUMPDEST 
---
Entry stack: [V12, 0x115, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x115, S0]

================================

Block 0x4f8
[0x4f8:0x4fa]
---
Predecessors: [0x4f7]
Successors: [0x115]
---
0x4f8 JUMPDEST
0x4f9 POP
0x4fa JUMP
---
0x4f8: JUMPDEST 
0x4fa: JUMP 0x115
---
Entry stack: [V12, 0x115, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x4fb
[0x4fb:0x51c]
---
Predecessors: [0x143]
Successors: [0x51d, 0x521]
---
0x4fb JUMPDEST
0x4fc CALLER
0x4fd PUSH1 0x1
0x4ff PUSH1 0xa0
0x501 PUSH1 0x2
0x503 EXP
0x504 SUB
0x505 DUP2
0x506 AND
0x507 PUSH1 0x0
0x509 SWAP1
0x50a DUP2
0x50b MSTORE
0x50c PUSH1 0x1
0x50e PUSH1 0x20
0x510 MSTORE
0x511 PUSH1 0x40
0x513 SWAP1
0x514 SHA3
0x515 SLOAD
0x516 DUP1
0x517 ISZERO
0x518 ISZERO
0x519 PUSH2 0x521
0x51c JUMPI
---
0x4fb: JUMPDEST 
0x4fc: V478 = CALLER
0x4fd: V479 = 0x1
0x4ff: V480 = 0xa0
0x501: V481 = 0x2
0x503: V482 = EXP 0x2 0xa0
0x504: V483 = SUB 0x10000000000000000000000000000000000000000 0x1
0x506: V484 = AND V478 0xffffffffffffffffffffffffffffffffffffffff
0x507: V485 = 0x0
0x50b: M[0x0] = V484
0x50c: V486 = 0x1
0x50e: V487 = 0x20
0x510: M[0x20] = 0x1
0x511: V488 = 0x40
0x514: V489 = SHA3 0x0 0x40
0x515: V490 = S[V489]
0x517: V491 = ISZERO V490
0x518: V492 = ISZERO V491
0x519: V493 = 0x521
0x51c: JUMPI 0x521 V492
---
Entry stack: [V12, 0x115]
Stack pops: 0
Stack additions: [V478, V490]
Exit stack: [V12, 0x115, V478, V490]

================================

Block 0x51d
[0x51d:0x520]
---
Predecessors: [0x4fb]
Successors: []
---
0x51d PUSH1 0x0
0x51f DUP1
0x520 REVERT
---
0x51d: V494 = 0x0
0x520: REVERT 0x0 0x0
---
Entry stack: [V12, 0x115, V478, V490]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x115, V478, V490]

================================

Block 0x521
[0x521:0x534]
---
Predecessors: [0x4fb]
Successors: [0x535, 0x539]
---
0x521 JUMPDEST
0x522 PUSH1 0x1
0x524 PUSH1 0xa0
0x526 PUSH1 0x2
0x528 EXP
0x529 SUB
0x52a ADDRESS
0x52b AND
0x52c BALANCE
0x52d DUP2
0x52e SWAP1
0x52f LT
0x530 ISZERO
0x531 PUSH2 0x539
0x534 JUMPI
---
0x521: JUMPDEST 
0x522: V495 = 0x1
0x524: V496 = 0xa0
0x526: V497 = 0x2
0x528: V498 = EXP 0x2 0xa0
0x529: V499 = SUB 0x10000000000000000000000000000000000000000 0x1
0x52a: V500 = ADDRESS
0x52b: V501 = AND V500 0xffffffffffffffffffffffffffffffffffffffff
0x52c: V502 = BALANCE V501
0x52f: V503 = LT V502 V490
0x530: V504 = ISZERO V503
0x531: V505 = 0x539
0x534: JUMPI 0x539 V504
---
Entry stack: [V12, 0x115, V478, V490]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x115, V478, V490]

================================

Block 0x535
[0x535:0x538]
---
Predecessors: [0x521]
Successors: []
---
0x535 PUSH1 0x0
0x537 DUP1
0x538 REVERT
---
0x535: V506 = 0x0
0x538: REVERT 0x0 0x0
---
Entry stack: [V12, 0x115, V478, V490]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x115, V478, V490]

================================

Block 0x539
[0x539:0x54b]
---
Predecessors: [0x521]
Successors: [0xa98]
---
0x539 JUMPDEST
0x53a PUSH1 0x2
0x53c SLOAD
0x53d PUSH2 0x54c
0x540 SWAP1
0x541 DUP3
0x542 PUSH4 0xffffffff
0x547 PUSH2 0xa98
0x54a AND
0x54b JUMP
---
0x539: JUMPDEST 
0x53a: V507 = 0x2
0x53c: V508 = S[0x2]
0x53d: V509 = 0x54c
0x542: V510 = 0xffffffff
0x547: V511 = 0xa98
0x54a: V512 = AND 0xa98 0xffffffff
0x54b: JUMP 0xa98
---
Entry stack: [V12, 0x115, V478, V490]
Stack pops: 1
Stack additions: [S0, 0x54c, V508, S0]
Exit stack: [V12, 0x115, V478, V490, 0x54c, V508, V490]

================================

Block 0x54c
[0x54c:0x58e]
---
Predecessors: [0xaa9]
Successors: [0x58f, 0x590]
---
0x54c JUMPDEST
0x54d PUSH1 0x2
0x54f SSTORE
0x550 PUSH1 0x1
0x552 PUSH1 0xa0
0x554 PUSH1 0x2
0x556 EXP
0x557 SUB
0x558 DUP3
0x559 AND
0x55a PUSH1 0x0
0x55c DUP2
0x55d DUP2
0x55e MSTORE
0x55f PUSH1 0x1
0x561 PUSH1 0x20
0x563 MSTORE
0x564 PUSH1 0x40
0x566 DUP1
0x567 DUP3
0x568 SHA3
0x569 SWAP2
0x56a SWAP1
0x56b SWAP2
0x56c SSTORE
0x56d DUP3
0x56e ISZERO
0x56f PUSH2 0x8fc
0x572 MUL
0x573 SWAP1
0x574 DUP4
0x575 SWAP1
0x576 MLOAD
0x577 PUSH1 0x0
0x579 PUSH1 0x40
0x57b MLOAD
0x57c DUP1
0x57d DUP4
0x57e SUB
0x57f DUP2
0x580 DUP6
0x581 DUP9
0x582 DUP9
0x583 CALL
0x584 SWAP4
0x585 POP
0x586 POP
0x587 POP
0x588 POP
0x589 ISZERO
0x58a ISZERO
0x58b PUSH2 0x590
0x58e JUMPI
---
0x54c: JUMPDEST 
0x54d: V513 = 0x2
0x54f: S[0x2] = V1034
0x550: V514 = 0x1
0x552: V515 = 0xa0
0x554: V516 = 0x2
0x556: V517 = EXP 0x2 0xa0
0x557: V518 = SUB 0x10000000000000000000000000000000000000000 0x1
0x559: V519 = AND V478 0xffffffffffffffffffffffffffffffffffffffff
0x55a: V520 = 0x0
0x55e: M[0x0] = V519
0x55f: V521 = 0x1
0x561: V522 = 0x20
0x563: M[0x20] = 0x1
0x564: V523 = 0x40
0x568: V524 = SHA3 0x0 0x40
0x56c: S[V524] = 0x0
0x56e: V525 = ISZERO V490
0x56f: V526 = 0x8fc
0x572: V527 = MUL 0x8fc V525
0x576: V528 = M[0x40]
0x577: V529 = 0x0
0x579: V530 = 0x40
0x57b: V531 = M[0x40]
0x57e: V532 = SUB V528 V531
0x583: V533 = CALL V527 V519 V490 V531 V532 V531 0x0
0x589: V534 = ISZERO V533
0x58a: V535 = ISZERO V534
0x58b: V536 = 0x590
0x58e: JUMPI 0x590 V535
---
Entry stack: [V12, 0x115, V478, V490, V1034]
Stack pops: 3
Stack additions: [S2, S1]
Exit stack: [V12, 0x115, V478, V490]

================================

Block 0x58f
[0x58f:0x58f]
---
Predecessors: [0x54c]
Successors: []
---
0x58f INVALID
---
0x58f: INVALID 
---
Entry stack: [V12, 0x115, V478, V490]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x115, V478, V490]

================================

Block 0x590
[0x590:0x590]
---
Predecessors: [0x54c]
Successors: [0x591]
---
0x590 JUMPDEST
---
0x590: JUMPDEST 
---
Entry stack: [V12, 0x115, V478, V490]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x115, V478, V490]

================================

Block 0x591
[0x591:0x594]
---
Predecessors: [0x590]
Successors: [0x115]
---
0x591 JUMPDEST
0x592 POP
0x593 POP
0x594 JUMP
---
0x591: JUMPDEST 
0x594: JUMP 0x115
---
Entry stack: [V12, 0x115, V478, V490]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x595
[0x595:0x5ab]
---
Predecessors: [0x158]
Successors: [0x5ac, 0x5b0]
---
0x595 JUMPDEST
0x596 PUSH1 0x0
0x598 SLOAD
0x599 CALLER
0x59a PUSH1 0x1
0x59c PUSH1 0xa0
0x59e PUSH1 0x2
0x5a0 EXP
0x5a1 SUB
0x5a2 SWAP1
0x5a3 DUP2
0x5a4 AND
0x5a5 SWAP2
0x5a6 AND
0x5a7 EQ
0x5a8 PUSH2 0x5b0
0x5ab JUMPI
---
0x595: JUMPDEST 
0x596: V537 = 0x0
0x598: V538 = S[0x0]
0x599: V539 = CALLER
0x59a: V540 = 0x1
0x59c: V541 = 0xa0
0x59e: V542 = 0x2
0x5a0: V543 = EXP 0x2 0xa0
0x5a1: V544 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5a4: V545 = AND 0xffffffffffffffffffffffffffffffffffffffff V539
0x5a6: V546 = AND V538 0xffffffffffffffffffffffffffffffffffffffff
0x5a7: V547 = EQ V546 V545
0x5a8: V548 = 0x5b0
0x5ab: JUMPI 0x5b0 V547
---
Entry stack: [V12, 0x115]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x115]

================================

Block 0x5ac
[0x5ac:0x5af]
---
Predecessors: [0x595]
Successors: []
---
0x5ac PUSH1 0x0
0x5ae DUP1
0x5af REVERT
---
0x5ac: V549 = 0x0
0x5af: REVERT 0x0 0x0
---
Entry stack: [V12, 0x115]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x115]

================================

Block 0x5b0
[0x5b0:0x5bd]
---
Predecessors: [0x595]
Successors: []
---
0x5b0 JUMPDEST
0x5b1 PUSH1 0x0
0x5b3 SLOAD
0x5b4 PUSH1 0x1
0x5b6 PUSH1 0xa0
0x5b8 PUSH1 0x2
0x5ba EXP
0x5bb SUB
0x5bc AND
0x5bd SELFDESTRUCT
---
0x5b0: JUMPDEST 
0x5b1: V550 = 0x0
0x5b3: V551 = S[0x0]
0x5b4: V552 = 0x1
0x5b6: V553 = 0xa0
0x5b8: V554 = 0x2
0x5ba: V555 = EXP 0x2 0xa0
0x5bb: V556 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5bc: V557 = AND 0xffffffffffffffffffffffffffffffffffffffff V551
0x5bd: SELFDESTRUCT V557
---
Entry stack: [V12, 0x115]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x115]

================================

Block 0x5be
[0x5be:0x5be]
---
Predecessors: []
Successors: [0x5bf]
---
0x5be JUMPDEST
---
0x5be: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x5bf
[0x5bf:0x5c0]
---
Predecessors: [0x5be]
Successors: []
Has unresolved jump.
---
0x5bf JUMPDEST
0x5c0 JUMP
---
0x5bf: JUMPDEST 
0x5c0: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x5c1
[0x5c1:0x5cf]
---
Predecessors: [0x16d]
Successors: [0x175]
---
0x5c1 JUMPDEST
0x5c2 PUSH1 0x0
0x5c4 SLOAD
0x5c5 PUSH1 0x1
0x5c7 PUSH1 0xa0
0x5c9 PUSH1 0x2
0x5cb EXP
0x5cc SUB
0x5cd AND
0x5ce DUP2
0x5cf JUMP
---
0x5c1: JUMPDEST 
0x5c2: V558 = 0x0
0x5c4: V559 = S[0x0]
0x5c5: V560 = 0x1
0x5c7: V561 = 0xa0
0x5c9: V562 = 0x2
0x5cb: V563 = EXP 0x2 0xa0
0x5cc: V564 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5cd: V565 = AND 0xffffffffffffffffffffffffffffffffffffffff V559
0x5cf: JUMP 0x175
---
Entry stack: [V12, 0x175]
Stack pops: 1
Stack additions: [S0, V565]
Exit stack: [V12, 0x175, V565]

================================

Block 0x5d0
[0x5d0:0x649]
---
Predecessors: [0x19c, 0x88f]
Successors: [0x64a, 0x64e]
---
0x5d0 JUMPDEST
0x5d1 PUSH1 0x4
0x5d3 SLOAD
0x5d4 PUSH1 0x0
0x5d6 SWAP1
0x5d7 PUSH1 0x1
0x5d9 PUSH1 0xa0
0x5db PUSH1 0x2
0x5dd EXP
0x5de SUB
0x5df AND
0x5e0 PUSH4 0xe68d4c3a
0x5e5 DUP6
0x5e6 DUP6
0x5e7 DUP6
0x5e8 DUP6
0x5e9 PUSH1 0x40
0x5eb MLOAD
0x5ec PUSH1 0x20
0x5ee ADD
0x5ef MSTORE
0x5f0 PUSH1 0x40
0x5f2 MLOAD
0x5f3 PUSH1 0xe0
0x5f5 PUSH1 0x2
0x5f7 EXP
0x5f8 PUSH4 0xffffffff
0x5fd DUP7
0x5fe AND
0x5ff MUL
0x600 DUP2
0x601 MSTORE
0x602 PUSH3 0xffffff
0x606 SWAP1
0x607 SWAP4
0x608 AND
0x609 PUSH1 0x4
0x60b DUP5
0x60c ADD
0x60d MSTORE
0x60e PUSH21 0xffffffffffffffffffffffffffffffffffffffffff
0x624 NOT
0x625 SWAP2
0x626 DUP3
0x627 AND
0x628 PUSH1 0x24
0x62a DUP5
0x62b ADD
0x62c MSTORE
0x62d AND
0x62e PUSH1 0x44
0x630 DUP3
0x631 ADD
0x632 MSTORE
0x633 PUSH1 0x64
0x635 ADD
0x636 PUSH1 0x20
0x638 PUSH1 0x40
0x63a MLOAD
0x63b DUP1
0x63c DUP4
0x63d SUB
0x63e DUP2
0x63f PUSH1 0x0
0x641 DUP8
0x642 DUP1
0x643 EXTCODESIZE
0x644 ISZERO
0x645 ISZERO
0x646 PUSH2 0x64e
0x649 JUMPI
---
0x5d0: JUMPDEST 
0x5d1: V566 = 0x4
0x5d3: V567 = S[0x4]
0x5d4: V568 = 0x0
0x5d7: V569 = 0x1
0x5d9: V570 = 0xa0
0x5db: V571 = 0x2
0x5dd: V572 = EXP 0x2 0xa0
0x5de: V573 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5df: V574 = AND 0xffffffffffffffffffffffffffffffffffffffff V567
0x5e0: V575 = 0xe68d4c3a
0x5e9: V576 = 0x40
0x5eb: V577 = M[0x40]
0x5ec: V578 = 0x20
0x5ee: V579 = ADD 0x20 V577
0x5ef: M[V579] = 0x0
0x5f0: V580 = 0x40
0x5f2: V581 = M[0x40]
0x5f3: V582 = 0xe0
0x5f5: V583 = 0x2
0x5f7: V584 = EXP 0x2 0xe0
0x5f8: V585 = 0xffffffff
0x5fe: V586 = AND 0xe68d4c3a 0xffffffff
0x5ff: V587 = MUL 0xe68d4c3a 0x100000000000000000000000000000000000000000000000000000000
0x601: M[V581] = 0xe68d4c3a00000000000000000000000000000000000000000000000000000000
0x602: V588 = 0xffffff
0x608: V589 = AND S2 0xffffff
0x609: V590 = 0x4
0x60c: V591 = ADD V581 0x4
0x60d: M[V591] = V589
0x60e: V592 = 0xffffffffffffffffffffffffffffffffffffffffff
0x624: V593 = NOT 0xffffffffffffffffffffffffffffffffffffffffff
0x627: V594 = AND 0xffffffffffffffffffffff000000000000000000000000000000000000000000 S1
0x628: V595 = 0x24
0x62b: V596 = ADD V581 0x24
0x62c: M[V596] = V594
0x62d: V597 = AND S0 0xffffffffffffffffffffff000000000000000000000000000000000000000000
0x62e: V598 = 0x44
0x631: V599 = ADD V581 0x44
0x632: M[V599] = V597
0x633: V600 = 0x64
0x635: V601 = ADD 0x64 V581
0x636: V602 = 0x20
0x638: V603 = 0x40
0x63a: V604 = M[0x40]
0x63d: V605 = SUB V601 V604
0x63f: V606 = 0x0
0x643: V607 = EXTCODESIZE V574
0x644: V608 = ISZERO V607
0x645: V609 = ISZERO V608
0x646: V610 = 0x64e
0x649: JUMPI 0x64e V609
---
Entry stack: [V12, 0x115, V216, V221, V224, S4, {0xc0, 0x89a}, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, V574, 0xe68d4c3a, V601, 0x20, V604, V605, V604, 0x0, V574]
Exit stack: [V12, 0x115, V216, V221, V224, S4, {0xc0, 0x89a}, S2, S1, S0, 0x0, V574, 0xe68d4c3a, V601, 0x20, V604, V605, V604, 0x0, V574]

================================

Block 0x64a
[0x64a:0x64d]
---
Predecessors: [0x5d0]
Successors: []
---
0x64a PUSH1 0x0
0x64c DUP1
0x64d REVERT
---
0x64a: V611 = 0x0
0x64d: REVERT 0x0 0x0
---
Entry stack: [V12, 0x115, V216, V221, V224, S14, {0xc0, 0x89a}, S12, S11, S10, 0x0, V574, 0xe68d4c3a, V601, 0x20, V604, V605, V604, 0x0, V574]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x115, V216, V221, V224, S14, {0xc0, 0x89a}, S12, S11, S10, 0x0, V574, 0xe68d4c3a, V601, 0x20, V604, V605, V604, 0x0, V574]

================================

Block 0x64e
[0x64e:0x65a]
---
Predecessors: [0x5d0]
Successors: [0x65b, 0x65f]
---
0x64e JUMPDEST
0x64f PUSH2 0x2c6
0x652 GAS
0x653 SUB
0x654 CALL
0x655 ISZERO
0x656 ISZERO
0x657 PUSH2 0x65f
0x65a JUMPI
---
0x64e: JUMPDEST 
0x64f: V612 = 0x2c6
0x652: V613 = GAS
0x653: V614 = SUB V613 0x2c6
0x654: V615 = CALL V614 V574 0x0 V604 V605 V604 0x20
0x655: V616 = ISZERO V615
0x656: V617 = ISZERO V616
0x657: V618 = 0x65f
0x65a: JUMPI 0x65f V617
---
Entry stack: [V12, 0x115, V216, V221, V224, S14, {0xc0, 0x89a}, S12, S11, S10, 0x0, V574, 0xe68d4c3a, V601, 0x20, V604, V605, V604, 0x0, V574]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x115, V216, V221, V224, S14, {0xc0, 0x89a}, S12, S11, S10, 0x0, V574, 0xe68d4c3a, V601]

================================

Block 0x65b
[0x65b:0x65e]
---
Predecessors: [0x64e]
Successors: []
---
0x65b PUSH1 0x0
0x65d DUP1
0x65e REVERT
---
0x65b: V619 = 0x0
0x65e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x115, V216, V221, V224, S8, {0xc0, 0x89a}, S6, S5, S4, 0x0, S2, 0xe68d4c3a, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x115, V216, V221, V224, S8, {0xc0, 0x89a}, S6, S5, S4, 0x0, S2, 0xe68d4c3a, S0]

================================

Block 0x65f
[0x65f:0x6ba]
---
Predecessors: [0x64e]
Successors: [0x6bb, 0x6bf]
---
0x65f JUMPDEST
0x660 POP
0x661 POP
0x662 POP
0x663 PUSH1 0x40
0x665 MLOAD
0x666 DUP1
0x667 MLOAD
0x668 PUSH1 0x4
0x66a SLOAD
0x66b SWAP1
0x66c SWAP2
0x66d POP
0x66e PUSH1 0x1
0x670 PUSH1 0xa0
0x672 PUSH1 0x2
0x674 EXP
0x675 SUB
0x676 AND
0x677 PUSH4 0xfe407f4f
0x67c DUP7
0x67d PUSH1 0x0
0x67f PUSH1 0x40
0x681 MLOAD
0x682 PUSH1 0x20
0x684 ADD
0x685 MSTORE
0x686 PUSH1 0x40
0x688 MLOAD
0x689 PUSH1 0xe0
0x68b PUSH1 0x2
0x68d EXP
0x68e PUSH4 0xffffffff
0x693 DUP5
0x694 AND
0x695 MUL
0x696 DUP2
0x697 MSTORE
0x698 PUSH3 0xffffff
0x69c SWAP1
0x69d SWAP2
0x69e AND
0x69f PUSH1 0x4
0x6a1 DUP3
0x6a2 ADD
0x6a3 MSTORE
0x6a4 PUSH1 0x24
0x6a6 ADD
0x6a7 PUSH1 0x20
0x6a9 PUSH1 0x40
0x6ab MLOAD
0x6ac DUP1
0x6ad DUP4
0x6ae SUB
0x6af DUP2
0x6b0 PUSH1 0x0
0x6b2 DUP8
0x6b3 DUP1
0x6b4 EXTCODESIZE
0x6b5 ISZERO
0x6b6 ISZERO
0x6b7 PUSH2 0x6bf
0x6ba JUMPI
---
0x65f: JUMPDEST 
0x663: V620 = 0x40
0x665: V621 = M[0x40]
0x667: V622 = M[V621]
0x668: V623 = 0x4
0x66a: V624 = S[0x4]
0x66e: V625 = 0x1
0x670: V626 = 0xa0
0x672: V627 = 0x2
0x674: V628 = EXP 0x2 0xa0
0x675: V629 = SUB 0x10000000000000000000000000000000000000000 0x1
0x676: V630 = AND 0xffffffffffffffffffffffffffffffffffffffff V624
0x677: V631 = 0xfe407f4f
0x67d: V632 = 0x0
0x67f: V633 = 0x40
0x681: V634 = M[0x40]
0x682: V635 = 0x20
0x684: V636 = ADD 0x20 V634
0x685: M[V636] = 0x0
0x686: V637 = 0x40
0x688: V638 = M[0x40]
0x689: V639 = 0xe0
0x68b: V640 = 0x2
0x68d: V641 = EXP 0x2 0xe0
0x68e: V642 = 0xffffffff
0x694: V643 = AND 0xfe407f4f 0xffffffff
0x695: V644 = MUL 0xfe407f4f 0x100000000000000000000000000000000000000000000000000000000
0x697: M[V638] = 0xfe407f4f00000000000000000000000000000000000000000000000000000000
0x698: V645 = 0xffffff
0x69e: V646 = AND S6 0xffffff
0x69f: V647 = 0x4
0x6a2: V648 = ADD V638 0x4
0x6a3: M[V648] = V646
0x6a4: V649 = 0x24
0x6a6: V650 = ADD 0x24 V638
0x6a7: V651 = 0x20
0x6a9: V652 = 0x40
0x6ab: V653 = M[0x40]
0x6ae: V654 = SUB V650 V653
0x6b0: V655 = 0x0
0x6b4: V656 = EXTCODESIZE V630
0x6b5: V657 = ISZERO V656
0x6b6: V658 = ISZERO V657
0x6b7: V659 = 0x6bf
0x6ba: JUMPI 0x6bf V658
---
Entry stack: [V12, 0x115, V216, V221, V224, S8, {0xc0, 0x89a}, S6, S5, S4, 0x0, S2, 0xe68d4c3a, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, V622, V630, 0xfe407f4f, V650, 0x20, V653, V654, V653, 0x0, V630]
Exit stack: [V12, 0x115, V216, V221, V224, S8, {0xc0, 0x89a}, S6, S5, S4, 0x0, V622, V630, 0xfe407f4f, V650, 0x20, V653, V654, V653, 0x0, V630]

================================

Block 0x6bb
[0x6bb:0x6be]
---
Predecessors: [0x65f]
Successors: []
---
0x6bb PUSH1 0x0
0x6bd DUP1
0x6be REVERT
---
0x6bb: V660 = 0x0
0x6be: REVERT 0x0 0x0
---
Entry stack: [V12, 0x115, V216, V221, V224, S15, {0xc0, 0x89a}, S13, S12, S11, 0x0, V622, V630, 0xfe407f4f, V650, 0x20, V653, V654, V653, 0x0, V630]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x115, V216, V221, V224, S15, {0xc0, 0x89a}, S13, S12, S11, 0x0, V622, V630, 0xfe407f4f, V650, 0x20, V653, V654, V653, 0x0, V630]

================================

Block 0x6bf
[0x6bf:0x6cb]
---
Predecessors: [0x65f]
Successors: [0x6cc, 0x6d0]
---
0x6bf JUMPDEST
0x6c0 PUSH2 0x2c6
0x6c3 GAS
0x6c4 SUB
0x6c5 CALL
0x6c6 ISZERO
0x6c7 ISZERO
0x6c8 PUSH2 0x6d0
0x6cb JUMPI
---
0x6bf: JUMPDEST 
0x6c0: V661 = 0x2c6
0x6c3: V662 = GAS
0x6c4: V663 = SUB V662 0x2c6
0x6c5: V664 = CALL V663 V630 0x0 V653 V654 V653 0x20
0x6c6: V665 = ISZERO V664
0x6c7: V666 = ISZERO V665
0x6c8: V667 = 0x6d0
0x6cb: JUMPI 0x6d0 V666
---
Entry stack: [V12, 0x115, V216, V221, V224, S15, {0xc0, 0x89a}, S13, S12, S11, 0x0, V622, V630, 0xfe407f4f, V650, 0x20, V653, V654, V653, 0x0, V630]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x115, V216, V221, V224, S15, {0xc0, 0x89a}, S13, S12, S11, 0x0, V622, V630, 0xfe407f4f, V650]

================================

Block 0x6cc
[0x6cc:0x6cf]
---
Predecessors: [0x6bf]
Successors: []
---
0x6cc PUSH1 0x0
0x6ce DUP1
0x6cf REVERT
---
0x6cc: V668 = 0x0
0x6cf: REVERT 0x0 0x0
---
Entry stack: [V12, 0x115, V216, V221, V224, S9, {0xc0, 0x89a}, S7, S6, S5, 0x0, S3, S2, 0xfe407f4f, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x115, V216, V221, V224, S9, {0xc0, 0x89a}, S7, S6, S5, 0x0, S3, S2, 0xfe407f4f, S0]

================================

Block 0x6d0
[0x6d0:0x6dd]
---
Predecessors: [0x6bf]
Successors: [0x6de]
---
0x6d0 JUMPDEST
0x6d1 POP
0x6d2 POP
0x6d3 POP
0x6d4 PUSH1 0x40
0x6d6 MLOAD
0x6d7 DUP1
0x6d8 MLOAD
0x6d9 SWAP1
0x6da POP
0x6db ADD
0x6dc SWAP1
0x6dd POP
---
0x6d0: JUMPDEST 
0x6d4: V669 = 0x40
0x6d6: V670 = M[0x40]
0x6d8: V671 = M[V670]
0x6db: V672 = ADD V671 S3
---
Entry stack: [V12, 0x115, V216, V221, V224, S9, {0xc0, 0x89a}, S7, S6, S5, 0x0, S3, S2, 0xfe407f4f, S0]
Stack pops: 5
Stack additions: [V672]
Exit stack: [V12, 0x115, V216, V221, V224, S9, {0xc0, 0x89a}, S7, S6, S5, V672]

================================

Block 0x6de
[0x6de:0x6e4]
---
Predecessors: [0x6d0]
Successors: [0xc0, 0x89a]
---
0x6de JUMPDEST
0x6df SWAP4
0x6e0 SWAP3
0x6e1 POP
0x6e2 POP
0x6e3 POP
0x6e4 JUMP
---
0x6de: JUMPDEST 
0x6e4: JUMP {0xc0, 0x89a}
---
Entry stack: [V12, 0x115, V216, V221, V224, S5, {0xc0, 0x89a}, S3, S2, S1, V672]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V12, 0x115, V216, V221, V224, S5, V672]

================================

Block 0x6e5
[0x6e5:0x6fb]
---
Predecessors: [0x1ea]
Successors: [0x6fc, 0x700]
---
0x6e5 JUMPDEST
0x6e6 PUSH1 0x0
0x6e8 SLOAD
0x6e9 CALLER
0x6ea PUSH1 0x1
0x6ec PUSH1 0xa0
0x6ee PUSH1 0x2
0x6f0 EXP
0x6f1 SUB
0x6f2 SWAP1
0x6f3 DUP2
0x6f4 AND
0x6f5 SWAP2
0x6f6 AND
0x6f7 EQ
0x6f8 PUSH2 0x700
0x6fb JUMPI
---
0x6e5: JUMPDEST 
0x6e6: V673 = 0x0
0x6e8: V674 = S[0x0]
0x6e9: V675 = CALLER
0x6ea: V676 = 0x1
0x6ec: V677 = 0xa0
0x6ee: V678 = 0x2
0x6f0: V679 = EXP 0x2 0xa0
0x6f1: V680 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6f4: V681 = AND 0xffffffffffffffffffffffffffffffffffffffff V675
0x6f6: V682 = AND V674 0xffffffffffffffffffffffffffffffffffffffff
0x6f7: V683 = EQ V682 V681
0x6f8: V684 = 0x700
0x6fb: JUMPI 0x700 V683
---
Entry stack: [V12, 0x115, V175]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x115, V175]

================================

Block 0x6fc
[0x6fc:0x6ff]
---
Predecessors: [0x6e5]
Successors: []
---
0x6fc PUSH1 0x0
0x6fe DUP1
0x6ff REVERT
---
0x6fc: V685 = 0x0
0x6ff: REVERT 0x0 0x0
---
Entry stack: [V12, 0x115, V175]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x115, V175]

================================

Block 0x700
[0x700:0x728]
---
Predecessors: [0x6e5]
Successors: [0x729]
---
0x700 JUMPDEST
0x701 PUSH1 0x4
0x703 DUP1
0x704 SLOAD
0x705 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x71a NOT
0x71b AND
0x71c PUSH1 0x1
0x71e PUSH1 0xa0
0x720 PUSH1 0x2
0x722 EXP
0x723 SUB
0x724 DUP4
0x725 AND
0x726 OR
0x727 SWAP1
0x728 SSTORE
---
0x700: JUMPDEST 
0x701: V686 = 0x4
0x704: V687 = S[0x4]
0x705: V688 = 0xffffffffffffffffffffffffffffffffffffffff
0x71a: V689 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x71b: V690 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V687
0x71c: V691 = 0x1
0x71e: V692 = 0xa0
0x720: V693 = 0x2
0x722: V694 = EXP 0x2 0xa0
0x723: V695 = SUB 0x10000000000000000000000000000000000000000 0x1
0x725: V696 = AND V175 0xffffffffffffffffffffffffffffffffffffffff
0x726: V697 = OR V696 V690
0x728: S[0x4] = V697
---
Entry stack: [V12, 0x115, V175]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x115, V175]

================================

Block 0x729
[0x729:0x729]
---
Predecessors: [0x700]
Successors: [0x72a]
---
0x729 JUMPDEST
---
0x729: JUMPDEST 
---
Entry stack: [V12, 0x115, V175]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x115, V175]

================================

Block 0x72a
[0x72a:0x72c]
---
Predecessors: [0x729]
Successors: [0x115]
---
0x72a JUMPDEST
0x72b POP
0x72c JUMP
---
0x72a: JUMPDEST 
0x72c: JUMP 0x115
---
Entry stack: [V12, 0x115, V175]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x72d
[0x72d:0x73e]
---
Predecessors: [0x20b]
Successors: [0xc0]
---
0x72d JUMPDEST
0x72e PUSH1 0x1
0x730 PUSH1 0x20
0x732 MSTORE
0x733 PUSH1 0x0
0x735 SWAP1
0x736 DUP2
0x737 MSTORE
0x738 PUSH1 0x40
0x73a SWAP1
0x73b SHA3
0x73c SLOAD
0x73d DUP2
0x73e JUMP
---
0x72d: JUMPDEST 
0x72e: V698 = 0x1
0x730: V699 = 0x20
0x732: M[0x20] = 0x1
0x733: V700 = 0x0
0x737: M[0x0] = V189
0x738: V701 = 0x40
0x73b: V702 = SHA3 0x0 0x40
0x73c: V703 = S[V702]
0x73e: JUMP 0xc0
---
Entry stack: [V12, 0xc0, V189]
Stack pops: 2
Stack additions: [S1, V703]
Exit stack: [V12, 0xc0, V703]

================================

Block 0x73f
[0x73f:0x755]
---
Predecessors: [0x23c]
Successors: [0x756, 0x75a]
---
0x73f JUMPDEST
0x740 PUSH1 0x0
0x742 SLOAD
0x743 CALLER
0x744 PUSH1 0x1
0x746 PUSH1 0xa0
0x748 PUSH1 0x2
0x74a EXP
0x74b SUB
0x74c SWAP1
0x74d DUP2
0x74e AND
0x74f SWAP2
0x750 AND
0x751 EQ
0x752 PUSH2 0x75a
0x755 JUMPI
---
0x73f: JUMPDEST 
0x740: V704 = 0x0
0x742: V705 = S[0x0]
0x743: V706 = CALLER
0x744: V707 = 0x1
0x746: V708 = 0xa0
0x748: V709 = 0x2
0x74a: V710 = EXP 0x2 0xa0
0x74b: V711 = SUB 0x10000000000000000000000000000000000000000 0x1
0x74e: V712 = AND 0xffffffffffffffffffffffffffffffffffffffff V706
0x750: V713 = AND V705 0xffffffffffffffffffffffffffffffffffffffff
0x751: V714 = EQ V713 V712
0x752: V715 = 0x75a
0x755: JUMPI 0x75a V714
---
Entry stack: [V12, 0x115, V210]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x115, V210]

================================

Block 0x756
[0x756:0x759]
---
Predecessors: [0x73f]
Successors: []
---
0x756 PUSH1 0x0
0x758 DUP1
0x759 REVERT
---
0x756: V716 = 0x0
0x759: REVERT 0x0 0x0
---
Entry stack: [V12, 0x115, V210]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x115, V210]

================================

Block 0x75a
[0x75a:0x769]
---
Predecessors: [0x73f]
Successors: [0x4f7, 0x76a]
---
0x75a JUMPDEST
0x75b PUSH1 0x1
0x75d PUSH1 0xa0
0x75f PUSH1 0x2
0x761 EXP
0x762 SUB
0x763 DUP2
0x764 AND
0x765 ISZERO
0x766 PUSH2 0x4f7
0x769 JUMPI
---
0x75a: JUMPDEST 
0x75b: V717 = 0x1
0x75d: V718 = 0xa0
0x75f: V719 = 0x2
0x761: V720 = EXP 0x2 0xa0
0x762: V721 = SUB 0x10000000000000000000000000000000000000000 0x1
0x764: V722 = AND V210 0xffffffffffffffffffffffffffffffffffffffff
0x765: V723 = ISZERO V722
0x766: V724 = 0x4f7
0x769: JUMPI 0x4f7 V723
---
Entry stack: [V12, 0x115, V210]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x115, V210]

================================

Block 0x76a
[0x76a:0x791]
---
Predecessors: [0x75a]
Successors: [0x792]
---
0x76a PUSH1 0x0
0x76c DUP1
0x76d SLOAD
0x76e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x783 NOT
0x784 AND
0x785 PUSH1 0x1
0x787 PUSH1 0xa0
0x789 PUSH1 0x2
0x78b EXP
0x78c SUB
0x78d DUP4
0x78e AND
0x78f OR
0x790 SWAP1
0x791 SSTORE
---
0x76a: V725 = 0x0
0x76d: V726 = S[0x0]
0x76e: V727 = 0xffffffffffffffffffffffffffffffffffffffff
0x783: V728 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x784: V729 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V726
0x785: V730 = 0x1
0x787: V731 = 0xa0
0x789: V732 = 0x2
0x78b: V733 = EXP 0x2 0xa0
0x78c: V734 = SUB 0x10000000000000000000000000000000000000000 0x1
0x78e: V735 = AND V210 0xffffffffffffffffffffffffffffffffffffffff
0x78f: V736 = OR V735 V729
0x791: S[0x0] = V736
---
Entry stack: [V12, 0x115, V210]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x115, V210]

================================

Block 0x792
[0x792:0x792]
---
Predecessors: [0x76a]
Successors: [0x793]
---
0x792 JUMPDEST
---
0x792: JUMPDEST 
---
Entry stack: [V12, 0x115, V210]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x115, V210]

================================

Block 0x793
[0x793:0x793]
---
Predecessors: [0x792]
Successors: [0x794]
---
0x793 JUMPDEST
---
0x793: JUMPDEST 
---
Entry stack: [V12, 0x115, V210]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x115, V210]

================================

Block 0x794
[0x794:0x796]
---
Predecessors: [0x793]
Successors: [0x115]
---
0x794 JUMPDEST
0x795 POP
0x796 JUMP
---
0x794: JUMPDEST 
0x796: JUMP 0x115
---
Entry stack: [V12, 0x115, V210]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x797
[0x797:0x7e9]
---
Predecessors: [0x252]
Successors: [0x7ea, 0x7ee]
---
0x797 JUMPDEST
0x798 PUSH1 0x4
0x79a SLOAD
0x79b PUSH1 0x0
0x79d SWAP1
0x79e PUSH1 0x1
0x7a0 PUSH1 0xa0
0x7a2 PUSH1 0x2
0x7a4 EXP
0x7a5 SUB
0x7a6 AND
0x7a7 PUSH4 0x29d68b00
0x7ac DUP6
0x7ad DUP4
0x7ae PUSH1 0x40
0x7b0 MLOAD
0x7b1 PUSH1 0x20
0x7b3 ADD
0x7b4 MSTORE
0x7b5 PUSH1 0x40
0x7b7 MLOAD
0x7b8 PUSH1 0xe0
0x7ba PUSH1 0x2
0x7bc EXP
0x7bd PUSH4 0xffffffff
0x7c2 DUP5
0x7c3 AND
0x7c4 MUL
0x7c5 DUP2
0x7c6 MSTORE
0x7c7 PUSH3 0xffffff
0x7cb SWAP1
0x7cc SWAP2
0x7cd AND
0x7ce PUSH1 0x4
0x7d0 DUP3
0x7d1 ADD
0x7d2 MSTORE
0x7d3 PUSH1 0x24
0x7d5 ADD
0x7d6 PUSH1 0x20
0x7d8 PUSH1 0x40
0x7da MLOAD
0x7db DUP1
0x7dc DUP4
0x7dd SUB
0x7de DUP2
0x7df PUSH1 0x0
0x7e1 DUP8
0x7e2 DUP1
0x7e3 EXTCODESIZE
0x7e4 ISZERO
0x7e5 ISZERO
0x7e6 PUSH2 0x7ee
0x7e9 JUMPI
---
0x797: JUMPDEST 
0x798: V737 = 0x4
0x79a: V738 = S[0x4]
0x79b: V739 = 0x0
0x79e: V740 = 0x1
0x7a0: V741 = 0xa0
0x7a2: V742 = 0x2
0x7a4: V743 = EXP 0x2 0xa0
0x7a5: V744 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7a6: V745 = AND 0xffffffffffffffffffffffffffffffffffffffff V738
0x7a7: V746 = 0x29d68b00
0x7ae: V747 = 0x40
0x7b0: V748 = M[0x40]
0x7b1: V749 = 0x20
0x7b3: V750 = ADD 0x20 V748
0x7b4: M[V750] = 0x0
0x7b5: V751 = 0x40
0x7b7: V752 = M[0x40]
0x7b8: V753 = 0xe0
0x7ba: V754 = 0x2
0x7bc: V755 = EXP 0x2 0xe0
0x7bd: V756 = 0xffffffff
0x7c3: V757 = AND 0x29d68b00 0xffffffff
0x7c4: V758 = MUL 0x29d68b00 0x100000000000000000000000000000000000000000000000000000000
0x7c6: M[V752] = 0x29d68b0000000000000000000000000000000000000000000000000000000000
0x7c7: V759 = 0xffffff
0x7cd: V760 = AND V216 0xffffff
0x7ce: V761 = 0x4
0x7d1: V762 = ADD V752 0x4
0x7d2: M[V762] = V760
0x7d3: V763 = 0x24
0x7d5: V764 = ADD 0x24 V752
0x7d6: V765 = 0x20
0x7d8: V766 = 0x40
0x7da: V767 = M[0x40]
0x7dd: V768 = SUB V764 V767
0x7df: V769 = 0x0
0x7e3: V770 = EXTCODESIZE V745
0x7e4: V771 = ISZERO V770
0x7e5: V772 = ISZERO V771
0x7e6: V773 = 0x7ee
0x7e9: JUMPI 0x7ee V772
---
Entry stack: [V12, 0x115, V216, V221, V224]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, V745, 0x29d68b00, V764, 0x20, V767, V768, V767, 0x0, V745]
Exit stack: [V12, 0x115, V216, V221, V224, 0x0, V745, 0x29d68b00, V764, 0x20, V767, V768, V767, 0x0, V745]

================================

Block 0x7ea
[0x7ea:0x7ed]
---
Predecessors: [0x797]
Successors: []
---
0x7ea PUSH1 0x0
0x7ec DUP1
0x7ed REVERT
---
0x7ea: V774 = 0x0
0x7ed: REVERT 0x0 0x0
---
Entry stack: [V12, 0x115, V216, V221, V224, 0x0, V745, 0x29d68b00, V764, 0x20, V767, V768, V767, 0x0, V745]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x115, V216, V221, V224, 0x0, V745, 0x29d68b00, V764, 0x20, V767, V768, V767, 0x0, V745]

================================

Block 0x7ee
[0x7ee:0x7fa]
---
Predecessors: [0x797]
Successors: [0x7fb, 0x7ff]
---
0x7ee JUMPDEST
0x7ef PUSH2 0x2c6
0x7f2 GAS
0x7f3 SUB
0x7f4 CALL
0x7f5 ISZERO
0x7f6 ISZERO
0x7f7 PUSH2 0x7ff
0x7fa JUMPI
---
0x7ee: JUMPDEST 
0x7ef: V775 = 0x2c6
0x7f2: V776 = GAS
0x7f3: V777 = SUB V776 0x2c6
0x7f4: V778 = CALL V777 V745 0x0 V767 V768 V767 0x20
0x7f5: V779 = ISZERO V778
0x7f6: V780 = ISZERO V779
0x7f7: V781 = 0x7ff
0x7fa: JUMPI 0x7ff V780
---
Entry stack: [V12, 0x115, V216, V221, V224, 0x0, V745, 0x29d68b00, V764, 0x20, V767, V768, V767, 0x0, V745]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x115, V216, V221, V224, 0x0, V745, 0x29d68b00, V764]

================================

Block 0x7fb
[0x7fb:0x7fe]
---
Predecessors: [0x7ee]
Successors: []
---
0x7fb PUSH1 0x0
0x7fd DUP1
0x7fe REVERT
---
0x7fb: V782 = 0x0
0x7fe: REVERT 0x0 0x0
---
Entry stack: [V12, 0x115, V216, V221, V224, 0x0, V745, 0x29d68b00, V764]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x115, V216, V221, V224, 0x0, V745, 0x29d68b00, V764]

================================

Block 0x7ff
[0x7ff:0x80f]
---
Predecessors: [0x7ee]
Successors: [0x810, 0x814]
---
0x7ff JUMPDEST
0x800 POP
0x801 POP
0x802 POP
0x803 PUSH1 0x40
0x805 MLOAD
0x806 DUP1
0x807 MLOAD
0x808 SWAP1
0x809 POP
0x80a ISZERO
0x80b ISZERO
0x80c PUSH2 0x814
0x80f JUMPI
---
0x7ff: JUMPDEST 
0x803: V783 = 0x40
0x805: V784 = M[0x40]
0x807: V785 = M[V784]
0x80a: V786 = ISZERO V785
0x80b: V787 = ISZERO V786
0x80c: V788 = 0x814
0x80f: JUMPI 0x814 V787
---
Entry stack: [V12, 0x115, V216, V221, V224, 0x0, V745, 0x29d68b00, V764]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x115, V216, V221, V224, 0x0]

================================

Block 0x810
[0x810:0x813]
---
Predecessors: [0x7ff]
Successors: []
---
0x810 PUSH1 0x0
0x812 DUP1
0x813 REVERT
---
0x810: V789 = 0x0
0x813: REVERT 0x0 0x0
---
Entry stack: [V12, 0x115, V216, V221, V224, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x115, V216, V221, V224, 0x0]

================================

Block 0x814
[0x814:0x864]
---
Predecessors: [0x7ff]
Successors: [0x865, 0x869]
---
0x814 JUMPDEST
0x815 PUSH1 0x4
0x817 SLOAD
0x818 PUSH1 0x1
0x81a PUSH1 0xa0
0x81c PUSH1 0x2
0x81e EXP
0x81f SUB
0x820 AND
0x821 PUSH4 0xb5254419
0x826 DUP6
0x827 PUSH1 0x0
0x829 PUSH1 0x40
0x82b MLOAD
0x82c PUSH1 0x20
0x82e ADD
0x82f MSTORE
0x830 PUSH1 0x40
0x832 MLOAD
0x833 PUSH1 0xe0
0x835 PUSH1 0x2
0x837 EXP
0x838 PUSH4 0xffffffff
0x83d DUP5
0x83e AND
0x83f MUL
0x840 DUP2
0x841 MSTORE
0x842 PUSH3 0xffffff
0x846 SWAP1
0x847 SWAP2
0x848 AND
0x849 PUSH1 0x4
0x84b DUP3
0x84c ADD
0x84d MSTORE
0x84e PUSH1 0x24
0x850 ADD
0x851 PUSH1 0x20
0x853 PUSH1 0x40
0x855 MLOAD
0x856 DUP1
0x857 DUP4
0x858 SUB
0x859 DUP2
0x85a PUSH1 0x0
0x85c DUP8
0x85d DUP1
0x85e EXTCODESIZE
0x85f ISZERO
0x860 ISZERO
0x861 PUSH2 0x869
0x864 JUMPI
---
0x814: JUMPDEST 
0x815: V790 = 0x4
0x817: V791 = S[0x4]
0x818: V792 = 0x1
0x81a: V793 = 0xa0
0x81c: V794 = 0x2
0x81e: V795 = EXP 0x2 0xa0
0x81f: V796 = SUB 0x10000000000000000000000000000000000000000 0x1
0x820: V797 = AND 0xffffffffffffffffffffffffffffffffffffffff V791
0x821: V798 = 0xb5254419
0x827: V799 = 0x0
0x829: V800 = 0x40
0x82b: V801 = M[0x40]
0x82c: V802 = 0x20
0x82e: V803 = ADD 0x20 V801
0x82f: M[V803] = 0x0
0x830: V804 = 0x40
0x832: V805 = M[0x40]
0x833: V806 = 0xe0
0x835: V807 = 0x2
0x837: V808 = EXP 0x2 0xe0
0x838: V809 = 0xffffffff
0x83e: V810 = AND 0xb5254419 0xffffffff
0x83f: V811 = MUL 0xb5254419 0x100000000000000000000000000000000000000000000000000000000
0x841: M[V805] = 0xb525441900000000000000000000000000000000000000000000000000000000
0x842: V812 = 0xffffff
0x848: V813 = AND V216 0xffffff
0x849: V814 = 0x4
0x84c: V815 = ADD V805 0x4
0x84d: M[V815] = V813
0x84e: V816 = 0x24
0x850: V817 = ADD 0x24 V805
0x851: V818 = 0x20
0x853: V819 = 0x40
0x855: V820 = M[0x40]
0x858: V821 = SUB V817 V820
0x85a: V822 = 0x0
0x85e: V823 = EXTCODESIZE V797
0x85f: V824 = ISZERO V823
0x860: V825 = ISZERO V824
0x861: V826 = 0x869
0x864: JUMPI 0x869 V825
---
Entry stack: [V12, 0x115, V216, V221, V224, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V797, 0xb5254419, V817, 0x20, V820, V821, V820, 0x0, V797]
Exit stack: [V12, 0x115, V216, V221, V224, 0x0, V797, 0xb5254419, V817, 0x20, V820, V821, V820, 0x0, V797]

================================

Block 0x865
[0x865:0x868]
---
Predecessors: [0x814]
Successors: []
---
0x865 PUSH1 0x0
0x867 DUP1
0x868 REVERT
---
0x865: V827 = 0x0
0x868: REVERT 0x0 0x0
---
Entry stack: [V12, 0x115, V216, V221, V224, 0x0, V797, 0xb5254419, V817, 0x20, V820, V821, V820, 0x0, V797]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x115, V216, V221, V224, 0x0, V797, 0xb5254419, V817, 0x20, V820, V821, V820, 0x0, V797]

================================

Block 0x869
[0x869:0x875]
---
Predecessors: [0x814]
Successors: [0x876, 0x87a]
---
0x869 JUMPDEST
0x86a PUSH2 0x2c6
0x86d GAS
0x86e SUB
0x86f CALL
0x870 ISZERO
0x871 ISZERO
0x872 PUSH2 0x87a
0x875 JUMPI
---
0x869: JUMPDEST 
0x86a: V828 = 0x2c6
0x86d: V829 = GAS
0x86e: V830 = SUB V829 0x2c6
0x86f: V831 = CALL V830 V797 0x0 V820 V821 V820 0x20
0x870: V832 = ISZERO V831
0x871: V833 = ISZERO V832
0x872: V834 = 0x87a
0x875: JUMPI 0x87a V833
---
Entry stack: [V12, 0x115, V216, V221, V224, 0x0, V797, 0xb5254419, V817, 0x20, V820, V821, V820, 0x0, V797]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x115, V216, V221, V224, 0x0, V797, 0xb5254419, V817]

================================

Block 0x876
[0x876:0x879]
---
Predecessors: [0x869]
Successors: []
---
0x876 PUSH1 0x0
0x878 DUP1
0x879 REVERT
---
0x876: V835 = 0x0
0x879: REVERT 0x0 0x0
---
Entry stack: [V12, 0x115, V216, V221, V224, 0x0, V797, 0xb5254419, V817]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x115, V216, V221, V224, 0x0, V797, 0xb5254419, V817]

================================

Block 0x87a
[0x87a:0x88a]
---
Predecessors: [0x869]
Successors: [0x88b, 0x88f]
---
0x87a JUMPDEST
0x87b POP
0x87c POP
0x87d POP
0x87e PUSH1 0x40
0x880 MLOAD
0x881 DUP1
0x882 MLOAD
0x883 SWAP1
0x884 POP
0x885 ISZERO
0x886 ISZERO
0x887 PUSH2 0x88f
0x88a JUMPI
---
0x87a: JUMPDEST 
0x87e: V836 = 0x40
0x880: V837 = M[0x40]
0x882: V838 = M[V837]
0x885: V839 = ISZERO V838
0x886: V840 = ISZERO V839
0x887: V841 = 0x88f
0x88a: JUMPI 0x88f V840
---
Entry stack: [V12, 0x115, V216, V221, V224, 0x0, V797, 0xb5254419, V817]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x115, V216, V221, V224, 0x0]

================================

Block 0x88b
[0x88b:0x88e]
---
Predecessors: [0x87a]
Successors: []
---
0x88b PUSH1 0x0
0x88d DUP1
0x88e REVERT
---
0x88b: V842 = 0x0
0x88e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x115, V216, V221, V224, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x115, V216, V221, V224, 0x0]

================================

Block 0x88f
[0x88f:0x899]
---
Predecessors: [0x87a]
Successors: [0x5d0]
---
0x88f JUMPDEST
0x890 PUSH2 0x89a
0x893 DUP5
0x894 DUP5
0x895 DUP5
0x896 PUSH2 0x5d0
0x899 JUMP
---
0x88f: JUMPDEST 
0x890: V843 = 0x89a
0x896: V844 = 0x5d0
0x899: JUMP 0x5d0
---
Entry stack: [V12, 0x115, V216, V221, V224, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x89a, S3, S2, S1]
Exit stack: [V12, 0x115, V216, V221, V224, 0x0, 0x89a, V216, V221, V224]

================================

Block 0x89a
[0x89a:0x8a5]
---
Predecessors: [0x6de]
Successors: [0x8d8]
---
0x89a JUMPDEST
0x89b SWAP1
0x89c POP
0x89d PUSH2 0x8a6
0x8a0 DUP5
0x8a1 DUP3
0x8a2 PUSH2 0x8d8
0x8a5 JUMP
---
0x89a: JUMPDEST 
0x89d: V845 = 0x8a6
0x8a2: V846 = 0x8d8
0x8a5: JUMP 0x8d8
---
Entry stack: [V12, 0x115, V216, V221, V224, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S0, 0x8a6, S4, S0]
Exit stack: [V12, 0x115, V216, V221, V224, S0, 0x8a6, V216, S0]

================================

Block 0x8a6
[0x8a6:0x8a6]
---
Predecessors: [0xa93]
Successors: [0x8a7]
---
0x8a6 JUMPDEST
---
0x8a6: JUMPDEST 
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S4, S3, S2, S1, S0]

================================

Block 0x8a7
[0x8a7:0x8ac]
---
Predecessors: [0x8a6]
Successors: [0x115]
---
0x8a7 JUMPDEST
0x8a8 POP
0x8a9 POP
0x8aa POP
0x8ab POP
0x8ac JUMP
---
0x8a7: JUMPDEST 
0x8ac: JUMP S4
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V12]

================================

Block 0x8ad
[0x8ad:0x8c3]
---
Predecessors: [0x290]
Successors: [0x8c4, 0x8c8]
---
0x8ad JUMPDEST
0x8ae PUSH1 0x0
0x8b0 SLOAD
0x8b1 CALLER
0x8b2 PUSH1 0x1
0x8b4 PUSH1 0xa0
0x8b6 PUSH1 0x2
0x8b8 EXP
0x8b9 SUB
0x8ba SWAP1
0x8bb DUP2
0x8bc AND
0x8bd SWAP2
0x8be AND
0x8bf EQ
0x8c0 PUSH2 0x8c8
0x8c3 JUMPI
---
0x8ad: JUMPDEST 
0x8ae: V847 = 0x0
0x8b0: V848 = S[0x0]
0x8b1: V849 = CALLER
0x8b2: V850 = 0x1
0x8b4: V851 = 0xa0
0x8b6: V852 = 0x2
0x8b8: V853 = EXP 0x2 0xa0
0x8b9: V854 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8bc: V855 = AND 0xffffffffffffffffffffffffffffffffffffffff V849
0x8be: V856 = AND V848 0xffffffffffffffffffffffffffffffffffffffff
0x8bf: V857 = EQ V856 V855
0x8c0: V858 = 0x8c8
0x8c3: JUMPI 0x8c8 V857
---
Entry stack: [V12, 0x115, V238]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x115, V238]

================================

Block 0x8c4
[0x8c4:0x8c7]
---
Predecessors: [0x8ad]
Successors: []
---
0x8c4 PUSH1 0x0
0x8c6 DUP1
0x8c7 REVERT
---
0x8c4: V859 = 0x0
0x8c7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x115, V238]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x115, V238]

================================

Block 0x8c8
[0x8c8:0x8d3]
---
Predecessors: [0x8ad]
Successors: []
---
0x8c8 JUMPDEST
0x8c9 DUP1
0x8ca PUSH1 0x1
0x8cc PUSH1 0xa0
0x8ce PUSH1 0x2
0x8d0 EXP
0x8d1 SUB
0x8d2 AND
0x8d3 SELFDESTRUCT
---
0x8c8: JUMPDEST 
0x8ca: V860 = 0x1
0x8cc: V861 = 0xa0
0x8ce: V862 = 0x2
0x8d0: V863 = EXP 0x2 0xa0
0x8d1: V864 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8d2: V865 = AND 0xffffffffffffffffffffffffffffffffffffffff V238
0x8d3: SELFDESTRUCT V865
---
Entry stack: [V12, 0x115, V238]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x115, V238]

================================

Block 0x8d4
[0x8d4:0x8d4]
---
Predecessors: []
Successors: [0x8d5]
---
0x8d4 JUMPDEST
---
0x8d4: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x8d5
[0x8d5:0x8d7]
---
Predecessors: [0x8d4]
Successors: []
Has unresolved jump.
---
0x8d5 JUMPDEST
0x8d6 POP
0x8d7 JUMP
---
0x8d5: JUMPDEST 
0x8d7: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x8d8
[0x8d8:0x8e3]
---
Predecessors: [0x4a1, 0x89a]
Successors: [0x8e4, 0x8e8]
---
0x8d8 JUMPDEST
0x8d9 PUSH1 0x0
0x8db CALLVALUE
0x8dc DUP3
0x8dd SWAP1
0x8de LT
0x8df ISZERO
0x8e0 PUSH2 0x8e8
0x8e3 JUMPI
---
0x8d8: JUMPDEST 
0x8d9: V866 = 0x0
0x8db: V867 = CALLVALUE
0x8de: V868 = LT V867 S0
0x8df: V869 = ISZERO V868
0x8e0: V870 = 0x8e8
0x8e3: JUMPI 0x8e8 V869
---
Entry stack: [V12, S7, S6, S5, S4, S3, {0x4ad, 0x8a6}, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x0]
Exit stack: [V12, S7, S6, S5, S4, S3, {0x4ad, 0x8a6}, S1, S0, 0x0]

================================

Block 0x8e4
[0x8e4:0x8e7]
---
Predecessors: [0x8d8]
Successors: []
---
0x8e4 PUSH1 0x0
0x8e6 DUP1
0x8e7 REVERT
---
0x8e4: V871 = 0x0
0x8e7: REVERT 0x0 0x0
---
Entry stack: [V12, S8, S7, S6, S5, S4, {0x4ad, 0x8a6}, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, S4, {0x4ad, 0x8a6}, S2, S1, 0x0]

================================

Block 0x8e8
[0x8e8:0x93a]
---
Predecessors: [0x8d8]
Successors: [0x93b, 0x93f]
---
0x8e8 JUMPDEST
0x8e9 POP
0x8ea PUSH1 0x3
0x8ec SLOAD
0x8ed PUSH1 0x1
0x8ef PUSH1 0xa0
0x8f1 PUSH1 0x2
0x8f3 EXP
0x8f4 SUB
0x8f5 AND
0x8f6 DUP1
0x8f7 PUSH4 0x6e07d77
0x8fc DUP5
0x8fd PUSH1 0x0
0x8ff PUSH1 0x40
0x901 MLOAD
0x902 PUSH1 0x20
0x904 ADD
0x905 MSTORE
0x906 PUSH1 0x40
0x908 MLOAD
0x909 PUSH1 0xe0
0x90b PUSH1 0x2
0x90d EXP
0x90e PUSH4 0xffffffff
0x913 DUP5
0x914 AND
0x915 MUL
0x916 DUP2
0x917 MSTORE
0x918 PUSH3 0xffffff
0x91c SWAP1
0x91d SWAP2
0x91e AND
0x91f PUSH1 0x4
0x921 DUP3
0x922 ADD
0x923 MSTORE
0x924 PUSH1 0x24
0x926 ADD
0x927 PUSH1 0x20
0x929 PUSH1 0x40
0x92b MLOAD
0x92c DUP1
0x92d DUP4
0x92e SUB
0x92f DUP2
0x930 PUSH1 0x0
0x932 DUP8
0x933 DUP1
0x934 EXTCODESIZE
0x935 ISZERO
0x936 ISZERO
0x937 PUSH2 0x93f
0x93a JUMPI
---
0x8e8: JUMPDEST 
0x8ea: V872 = 0x3
0x8ec: V873 = S[0x3]
0x8ed: V874 = 0x1
0x8ef: V875 = 0xa0
0x8f1: V876 = 0x2
0x8f3: V877 = EXP 0x2 0xa0
0x8f4: V878 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8f5: V879 = AND 0xffffffffffffffffffffffffffffffffffffffff V873
0x8f7: V880 = 0x6e07d77
0x8fd: V881 = 0x0
0x8ff: V882 = 0x40
0x901: V883 = M[0x40]
0x902: V884 = 0x20
0x904: V885 = ADD 0x20 V883
0x905: M[V885] = 0x0
0x906: V886 = 0x40
0x908: V887 = M[0x40]
0x909: V888 = 0xe0
0x90b: V889 = 0x2
0x90d: V890 = EXP 0x2 0xe0
0x90e: V891 = 0xffffffff
0x914: V892 = AND 0x6e07d77 0xffffffff
0x915: V893 = MUL 0x6e07d77 0x100000000000000000000000000000000000000000000000000000000
0x917: M[V887] = 0x6e07d7700000000000000000000000000000000000000000000000000000000
0x918: V894 = 0xffffff
0x91e: V895 = AND S2 0xffffff
0x91f: V896 = 0x4
0x922: V897 = ADD V887 0x4
0x923: M[V897] = V895
0x924: V898 = 0x24
0x926: V899 = ADD 0x24 V887
0x927: V900 = 0x20
0x929: V901 = 0x40
0x92b: V902 = M[0x40]
0x92e: V903 = SUB V899 V902
0x930: V904 = 0x0
0x934: V905 = EXTCODESIZE V879
0x935: V906 = ISZERO V905
0x936: V907 = ISZERO V906
0x937: V908 = 0x93f
0x93a: JUMPI 0x93f V907
---
Entry stack: [V12, S8, S7, S6, S5, S4, {0x4ad, 0x8a6}, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V879, V879, 0x6e07d77, V899, 0x20, V902, V903, V902, 0x0, V879]
Exit stack: [V12, S8, S7, S6, S5, S4, {0x4ad, 0x8a6}, S2, S1, V879, V879, 0x6e07d77, V899, 0x20, V902, V903, V902, 0x0, V879]

================================

Block 0x93b
[0x93b:0x93e]
---
Predecessors: [0x8e8]
Successors: []
---
0x93b PUSH1 0x0
0x93d DUP1
0x93e REVERT
---
0x93b: V909 = 0x0
0x93e: REVERT 0x0 0x0
---
Entry stack: [V12, S17, S16, S15, S14, S13, {0x4ad, 0x8a6}, S11, S10, V879, V879, 0x6e07d77, V899, 0x20, V902, V903, V902, 0x0, V879]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S17, S16, S15, S14, S13, {0x4ad, 0x8a6}, S11, S10, V879, V879, 0x6e07d77, V899, 0x20, V902, V903, V902, 0x0, V879]

================================

Block 0x93f
[0x93f:0x94b]
---
Predecessors: [0x8e8]
Successors: [0x94c, 0x950]
---
0x93f JUMPDEST
0x940 PUSH2 0x2c6
0x943 GAS
0x944 SUB
0x945 CALL
0x946 ISZERO
0x947 ISZERO
0x948 PUSH2 0x950
0x94b JUMPI
---
0x93f: JUMPDEST 
0x940: V910 = 0x2c6
0x943: V911 = GAS
0x944: V912 = SUB V911 0x2c6
0x945: V913 = CALL V912 V879 0x0 V902 V903 V902 0x20
0x946: V914 = ISZERO V913
0x947: V915 = ISZERO V914
0x948: V916 = 0x950
0x94b: JUMPI 0x950 V915
---
Entry stack: [V12, S17, S16, S15, S14, S13, {0x4ad, 0x8a6}, S11, S10, V879, V879, 0x6e07d77, V899, 0x20, V902, V903, V902, 0x0, V879]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S17, S16, S15, S14, S13, {0x4ad, 0x8a6}, S11, S10, V879, V879, 0x6e07d77, V899]

================================

Block 0x94c
[0x94c:0x94f]
---
Predecessors: [0x93f]
Successors: []
---
0x94c PUSH1 0x0
0x94e DUP1
0x94f REVERT
---
0x94c: V917 = 0x0
0x94f: REVERT 0x0 0x0
---
Entry stack: [V12, S11, S10, S9, S8, S7, {0x4ad, 0x8a6}, S5, S4, S3, S2, 0x6e07d77, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S11, S10, S9, S8, S7, {0x4ad, 0x8a6}, S5, S4, S3, S2, 0x6e07d77, S0]

================================

Block 0x950
[0x950:0x985]
---
Predecessors: [0x93f]
Successors: [0x986, 0x98a]
---
0x950 JUMPDEST
0x951 POP
0x952 POP
0x953 POP
0x954 PUSH1 0x40
0x956 MLOAD
0x957 DUP1
0x958 MLOAD
0x959 PUSH1 0x1
0x95b PUSH1 0xa0
0x95d PUSH1 0x2
0x95f EXP
0x960 SUB
0x961 AND
0x962 SWAP1
0x963 POP
0x964 DUP3
0x965 ISZERO
0x966 PUSH2 0x8fc
0x969 MUL
0x96a DUP4
0x96b PUSH1 0x40
0x96d MLOAD
0x96e PUSH1 0x0
0x970 PUSH1 0x40
0x972 MLOAD
0x973 DUP1
0x974 DUP4
0x975 SUB
0x976 DUP2
0x977 DUP6
0x978 DUP9
0x979 DUP9
0x97a CALL
0x97b SWAP4
0x97c POP
0x97d POP
0x97e POP
0x97f POP
0x980 ISZERO
0x981 ISZERO
0x982 PUSH2 0x98a
0x985 JUMPI
---
0x950: JUMPDEST 
0x954: V918 = 0x40
0x956: V919 = M[0x40]
0x958: V920 = M[V919]
0x959: V921 = 0x1
0x95b: V922 = 0xa0
0x95d: V923 = 0x2
0x95f: V924 = EXP 0x2 0xa0
0x960: V925 = SUB 0x10000000000000000000000000000000000000000 0x1
0x961: V926 = AND 0xffffffffffffffffffffffffffffffffffffffff V920
0x965: V927 = ISZERO S4
0x966: V928 = 0x8fc
0x969: V929 = MUL 0x8fc V927
0x96b: V930 = 0x40
0x96d: V931 = M[0x40]
0x96e: V932 = 0x0
0x970: V933 = 0x40
0x972: V934 = M[0x40]
0x975: V935 = SUB V931 V934
0x97a: V936 = CALL V929 V926 S4 V934 V935 V934 0x0
0x980: V937 = ISZERO V936
0x981: V938 = ISZERO V937
0x982: V939 = 0x98a
0x985: JUMPI 0x98a V938
---
Entry stack: [V12, S11, S10, S9, S8, S7, {0x4ad, 0x8a6}, S5, S4, S3, S2, 0x6e07d77, S0]
Stack pops: 5
Stack additions: [S4, S3]
Exit stack: [V12, S11, S10, S9, S8, S7, {0x4ad, 0x8a6}, S5, S4, S3]

================================

Block 0x986
[0x986:0x989]
---
Predecessors: [0x950]
Successors: []
---
0x986 PUSH1 0x0
0x988 DUP1
0x989 REVERT
---
0x986: V940 = 0x0
0x989: REVERT 0x0 0x0
---
Entry stack: [V12, S8, S7, S6, S5, S4, {0x4ad, 0x8a6}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, S4, {0x4ad, 0x8a6}, S2, S1, S0]

================================

Block 0x98a
[0x98a:0x9de]
---
Predecessors: [0x950]
Successors: [0x9df, 0x9e3]
---
0x98a JUMPDEST
0x98b DUP1
0x98c PUSH1 0x1
0x98e PUSH1 0xa0
0x990 PUSH1 0x2
0x992 EXP
0x993 SUB
0x994 AND
0x995 PUSH4 0x26bf576a
0x99a DUP5
0x99b CALLER
0x99c PUSH1 0x40
0x99e MLOAD
0x99f PUSH1 0xe0
0x9a1 PUSH1 0x2
0x9a3 EXP
0x9a4 PUSH4 0xffffffff
0x9a9 DUP6
0x9aa AND
0x9ab MUL
0x9ac DUP2
0x9ad MSTORE
0x9ae PUSH3 0xffffff
0x9b2 SWAP1
0x9b3 SWAP3
0x9b4 AND
0x9b5 PUSH1 0x4
0x9b7 DUP4
0x9b8 ADD
0x9b9 MSTORE
0x9ba PUSH1 0x1
0x9bc PUSH1 0xa0
0x9be PUSH1 0x2
0x9c0 EXP
0x9c1 SUB
0x9c2 AND
0x9c3 PUSH1 0x24
0x9c5 DUP3
0x9c6 ADD
0x9c7 MSTORE
0x9c8 PUSH1 0x44
0x9ca ADD
0x9cb PUSH1 0x0
0x9cd PUSH1 0x40
0x9cf MLOAD
0x9d0 DUP1
0x9d1 DUP4
0x9d2 SUB
0x9d3 DUP2
0x9d4 PUSH1 0x0
0x9d6 DUP8
0x9d7 DUP1
0x9d8 EXTCODESIZE
0x9d9 ISZERO
0x9da ISZERO
0x9db PUSH2 0x9e3
0x9de JUMPI
---
0x98a: JUMPDEST 
0x98c: V941 = 0x1
0x98e: V942 = 0xa0
0x990: V943 = 0x2
0x992: V944 = EXP 0x2 0xa0
0x993: V945 = SUB 0x10000000000000000000000000000000000000000 0x1
0x994: V946 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x995: V947 = 0x26bf576a
0x99b: V948 = CALLER
0x99c: V949 = 0x40
0x99e: V950 = M[0x40]
0x99f: V951 = 0xe0
0x9a1: V952 = 0x2
0x9a3: V953 = EXP 0x2 0xe0
0x9a4: V954 = 0xffffffff
0x9aa: V955 = AND 0x26bf576a 0xffffffff
0x9ab: V956 = MUL 0x26bf576a 0x100000000000000000000000000000000000000000000000000000000
0x9ad: M[V950] = 0x26bf576a00000000000000000000000000000000000000000000000000000000
0x9ae: V957 = 0xffffff
0x9b4: V958 = AND S2 0xffffff
0x9b5: V959 = 0x4
0x9b8: V960 = ADD V950 0x4
0x9b9: M[V960] = V958
0x9ba: V961 = 0x1
0x9bc: V962 = 0xa0
0x9be: V963 = 0x2
0x9c0: V964 = EXP 0x2 0xa0
0x9c1: V965 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9c2: V966 = AND 0xffffffffffffffffffffffffffffffffffffffff V948
0x9c3: V967 = 0x24
0x9c6: V968 = ADD V950 0x24
0x9c7: M[V968] = V966
0x9c8: V969 = 0x44
0x9ca: V970 = ADD 0x44 V950
0x9cb: V971 = 0x0
0x9cd: V972 = 0x40
0x9cf: V973 = M[0x40]
0x9d2: V974 = SUB V970 V973
0x9d4: V975 = 0x0
0x9d8: V976 = EXTCODESIZE V946
0x9d9: V977 = ISZERO V976
0x9da: V978 = ISZERO V977
0x9db: V979 = 0x9e3
0x9de: JUMPI 0x9e3 V978
---
Entry stack: [V12, S8, S7, S6, S5, S4, {0x4ad, 0x8a6}, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V946, 0x26bf576a, V970, 0x0, V973, V974, V973, 0x0, V946]
Exit stack: [V12, S8, S7, S6, S5, S4, {0x4ad, 0x8a6}, S2, S1, S0, V946, 0x26bf576a, V970, 0x0, V973, V974, V973, 0x0, V946]

================================

Block 0x9df
[0x9df:0x9e2]
---
Predecessors: [0x98a]
Successors: []
---
0x9df PUSH1 0x0
0x9e1 DUP1
0x9e2 REVERT
---
0x9df: V980 = 0x0
0x9e2: REVERT 0x0 0x0
---
Entry stack: [V12, S17, S16, S15, S14, S13, {0x4ad, 0x8a6}, S11, S10, S9, V946, 0x26bf576a, V970, 0x0, V973, V974, V973, 0x0, V946]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S17, S16, S15, S14, S13, {0x4ad, 0x8a6}, S11, S10, S9, V946, 0x26bf576a, V970, 0x0, V973, V974, V973, 0x0, V946]

================================

Block 0x9e3
[0x9e3:0x9ef]
---
Predecessors: [0x98a]
Successors: [0x9f0, 0x9f4]
---
0x9e3 JUMPDEST
0x9e4 PUSH2 0x2c6
0x9e7 GAS
0x9e8 SUB
0x9e9 CALL
0x9ea ISZERO
0x9eb ISZERO
0x9ec PUSH2 0x9f4
0x9ef JUMPI
---
0x9e3: JUMPDEST 
0x9e4: V981 = 0x2c6
0x9e7: V982 = GAS
0x9e8: V983 = SUB V982 0x2c6
0x9e9: V984 = CALL V983 V946 0x0 V973 V974 V973 0x0
0x9ea: V985 = ISZERO V984
0x9eb: V986 = ISZERO V985
0x9ec: V987 = 0x9f4
0x9ef: JUMPI 0x9f4 V986
---
Entry stack: [V12, S17, S16, S15, S14, S13, {0x4ad, 0x8a6}, S11, S10, S9, V946, 0x26bf576a, V970, 0x0, V973, V974, V973, 0x0, V946]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S17, S16, S15, S14, S13, {0x4ad, 0x8a6}, S11, S10, S9, V946, 0x26bf576a, V970]

================================

Block 0x9f0
[0x9f0:0x9f3]
---
Predecessors: [0x9e3]
Successors: []
---
0x9f0 PUSH1 0x0
0x9f2 DUP1
0x9f3 REVERT
---
0x9f0: V988 = 0x0
0x9f3: REVERT 0x0 0x0
---
Entry stack: [V12, S11, S10, S9, S8, S7, {0x4ad, 0x8a6}, S5, S4, S3, S2, 0x26bf576a, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S11, S10, S9, S8, S7, {0x4ad, 0x8a6}, S5, S4, S3, S2, 0x26bf576a, S0]

================================

Block 0x9f4
[0x9f4:0xa48]
---
Predecessors: [0x9e3]
Successors: [0xaaf]
---
0x9f4 JUMPDEST
0x9f5 POP
0x9f6 POP
0x9f7 POP
0x9f8 PUSH32 0xfbd2f544956cd49df3ba51f37dfcf65bf87effb3da1d190782b5afeb08a5386
0xa19 CALLER
0xa1a DUP4
0xa1b CALLVALUE
0xa1c SUB
0xa1d PUSH1 0x40
0xa1f MLOAD
0xa20 PUSH1 0x1
0xa22 PUSH1 0xa0
0xa24 PUSH1 0x2
0xa26 EXP
0xa27 SUB
0xa28 SWAP1
0xa29 SWAP3
0xa2a AND
0xa2b DUP3
0xa2c MSTORE
0xa2d PUSH1 0x20
0xa2f DUP3
0xa30 ADD
0xa31 MSTORE
0xa32 PUSH1 0x40
0xa34 SWAP1
0xa35 DUP2
0xa36 ADD
0xa37 SWAP1
0xa38 MLOAD
0xa39 DUP1
0xa3a SWAP2
0xa3b SUB
0xa3c SWAP1
0xa3d LOG1
0xa3e PUSH2 0xa49
0xa41 CALLER
0xa42 DUP4
0xa43 CALLVALUE
0xa44 SUB
0xa45 PUSH2 0xaaf
0xa48 JUMP
---
0x9f4: JUMPDEST 
0x9f8: V989 = 0xfbd2f544956cd49df3ba51f37dfcf65bf87effb3da1d190782b5afeb08a5386
0xa19: V990 = CALLER
0xa1b: V991 = CALLVALUE
0xa1c: V992 = SUB V991 S4
0xa1d: V993 = 0x40
0xa1f: V994 = M[0x40]
0xa20: V995 = 0x1
0xa22: V996 = 0xa0
0xa24: V997 = 0x2
0xa26: V998 = EXP 0x2 0xa0
0xa27: V999 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa2a: V1000 = AND V990 0xffffffffffffffffffffffffffffffffffffffff
0xa2c: M[V994] = V1000
0xa2d: V1001 = 0x20
0xa30: V1002 = ADD V994 0x20
0xa31: M[V1002] = V992
0xa32: V1003 = 0x40
0xa36: V1004 = ADD 0x40 V994
0xa38: V1005 = M[0x40]
0xa3b: V1006 = SUB V1004 V1005
0xa3d: LOG V1005 V1006 0xfbd2f544956cd49df3ba51f37dfcf65bf87effb3da1d190782b5afeb08a5386
0xa3e: V1007 = 0xa49
0xa41: V1008 = CALLER
0xa43: V1009 = CALLVALUE
0xa44: V1010 = SUB V1009 S4
0xa45: V1011 = 0xaaf
0xa48: JUMP 0xaaf
---
Entry stack: [V12, S11, S10, S9, S8, S7, {0x4ad, 0x8a6}, S5, S4, S3, S2, 0x26bf576a, S0]
Stack pops: 5
Stack additions: [S4, S3, 0xa49, V1008, V1010]
Exit stack: [V12, S11, S10, S9, S8, S7, {0x4ad, 0x8a6}, S5, S4, S3, 0xa49, V1008, V1010]

================================

Block 0xa49
[0xa49:0xa92]
---
Predecessors: [0xb08]
Successors: [0xa93]
---
0xa49 JUMPDEST
0xa4a PUSH32 0x3a22d8eeac2ce8076694d03a4e6171c1a47e8d018cb950be460912b37650ec0f
0xa6b DUP4
0xa6c CALLER
0xa6d PUSH1 0x40
0xa6f MLOAD
0xa70 PUSH3 0xffffff
0xa74 SWAP1
0xa75 SWAP3
0xa76 AND
0xa77 DUP3
0xa78 MSTORE
0xa79 PUSH1 0x1
0xa7b PUSH1 0xa0
0xa7d PUSH1 0x2
0xa7f EXP
0xa80 SUB
0xa81 AND
0xa82 PUSH1 0x20
0xa84 DUP3
0xa85 ADD
0xa86 MSTORE
0xa87 PUSH1 0x40
0xa89 SWAP1
0xa8a DUP2
0xa8b ADD
0xa8c SWAP1
0xa8d MLOAD
0xa8e DUP1
0xa8f SWAP2
0xa90 SUB
0xa91 SWAP1
0xa92 LOG1
---
0xa49: JUMPDEST 
0xa4a: V1012 = 0x3a22d8eeac2ce8076694d03a4e6171c1a47e8d018cb950be460912b37650ec0f
0xa6c: V1013 = CALLER
0xa6d: V1014 = 0x40
0xa6f: V1015 = M[0x40]
0xa70: V1016 = 0xffffff
0xa76: V1017 = AND S2 0xffffff
0xa78: M[V1015] = V1017
0xa79: V1018 = 0x1
0xa7b: V1019 = 0xa0
0xa7d: V1020 = 0x2
0xa7f: V1021 = EXP 0x2 0xa0
0xa80: V1022 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa81: V1023 = AND 0xffffffffffffffffffffffffffffffffffffffff V1013
0xa82: V1024 = 0x20
0xa85: V1025 = ADD V1015 0x20
0xa86: M[V1025] = V1023
0xa87: V1026 = 0x40
0xa8b: V1027 = ADD 0x40 V1015
0xa8d: V1028 = M[0x40]
0xa90: V1029 = SUB V1027 V1028
0xa92: LOG V1028 V1029 0x3a22d8eeac2ce8076694d03a4e6171c1a47e8d018cb950be460912b37650ec0f
---
Entry stack: [V12, S8, S7, S6, S5, S4, {0x4ad, 0x8a6}, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, S8, S7, S6, S5, S4, {0x4ad, 0x8a6}, S2, S1, S0]

================================

Block 0xa93
[0xa93:0xa97]
---
Predecessors: [0xa49]
Successors: [0x4ad, 0x8a6]
---
0xa93 JUMPDEST
0xa94 POP
0xa95 POP
0xa96 POP
0xa97 JUMP
---
0xa93: JUMPDEST 
0xa97: JUMP {0x4ad, 0x8a6}
---
Entry stack: [V12, S8, S7, S6, S5, S4, {0x4ad, 0x8a6}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, S4]

================================

Block 0xa98
[0xa98:0xaa2]
---
Predecessors: [0x539]
Successors: [0xaa3, 0xaa4]
---
0xa98 JUMPDEST
0xa99 PUSH1 0x0
0xa9b DUP3
0xa9c DUP3
0xa9d GT
0xa9e ISZERO
0xa9f PUSH2 0xaa4
0xaa2 JUMPI
---
0xa98: JUMPDEST 
0xa99: V1030 = 0x0
0xa9d: V1031 = GT V490 V508
0xa9e: V1032 = ISZERO V1031
0xa9f: V1033 = 0xaa4
0xaa2: JUMPI 0xaa4 V1032
---
Entry stack: [V12, 0x115, V478, V490, 0x54c, V508, V490]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V12, 0x115, V478, V490, 0x54c, V508, V490, 0x0]

================================

Block 0xaa3
[0xaa3:0xaa3]
---
Predecessors: [0xa98]
Successors: []
---
0xaa3 INVALID
---
0xaa3: INVALID 
---
Entry stack: [V12, 0x115, V478, V490, 0x54c, V508, V490, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x115, V478, V490, 0x54c, V508, V490, 0x0]

================================

Block 0xaa4
[0xaa4:0xaa8]
---
Predecessors: [0xa98]
Successors: [0xaa9]
---
0xaa4 JUMPDEST
0xaa5 POP
0xaa6 DUP1
0xaa7 DUP3
0xaa8 SUB
---
0xaa4: JUMPDEST 
0xaa8: V1034 = SUB V508 V490
---
Entry stack: [V12, 0x115, V478, V490, 0x54c, V508, V490, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V1034]
Exit stack: [V12, 0x115, V478, V490, 0x54c, V508, V490, V1034]

================================

Block 0xaa9
[0xaa9:0xaae]
---
Predecessors: [0xaa4]
Successors: [0x54c]
---
0xaa9 JUMPDEST
0xaaa SWAP3
0xaab SWAP2
0xaac POP
0xaad POP
0xaae JUMP
---
0xaa9: JUMPDEST 
0xaae: JUMP 0x54c
---
Entry stack: [V12, 0x115, V478, V490, 0x54c, V508, V490, V1034]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, 0x115, V478, V490, V1034]

================================

Block 0xaaf
[0xaaf:0xad7]
---
Predecessors: [0x9f4]
Successors: [0xb0c]
---
0xaaf JUMPDEST
0xab0 PUSH1 0x1
0xab2 PUSH1 0xa0
0xab4 PUSH1 0x2
0xab6 EXP
0xab7 SUB
0xab8 DUP3
0xab9 AND
0xaba PUSH1 0x0
0xabc SWAP1
0xabd DUP2
0xabe MSTORE
0xabf PUSH1 0x1
0xac1 PUSH1 0x20
0xac3 MSTORE
0xac4 PUSH1 0x40
0xac6 SWAP1
0xac7 SHA3
0xac8 SLOAD
0xac9 PUSH2 0xad8
0xacc SWAP1
0xacd DUP3
0xace PUSH4 0xffffffff
0xad3 PUSH2 0xb0c
0xad6 AND
0xad7 JUMP
---
0xaaf: JUMPDEST 
0xab0: V1035 = 0x1
0xab2: V1036 = 0xa0
0xab4: V1037 = 0x2
0xab6: V1038 = EXP 0x2 0xa0
0xab7: V1039 = SUB 0x10000000000000000000000000000000000000000 0x1
0xab9: V1040 = AND V1008 0xffffffffffffffffffffffffffffffffffffffff
0xaba: V1041 = 0x0
0xabe: M[0x0] = V1040
0xabf: V1042 = 0x1
0xac1: V1043 = 0x20
0xac3: M[0x20] = 0x1
0xac4: V1044 = 0x40
0xac7: V1045 = SHA3 0x0 0x40
0xac8: V1046 = S[V1045]
0xac9: V1047 = 0xad8
0xace: V1048 = 0xffffffff
0xad3: V1049 = 0xb0c
0xad6: V1050 = AND 0xb0c 0xffffffff
0xad7: JUMP 0xb0c
---
Entry stack: [V12, S11, S10, S9, S8, S7, {0x4ad, 0x8a6}, S5, S4, S3, 0xa49, V1008, V1010]
Stack pops: 2
Stack additions: [S1, S0, 0xad8, V1046, S0]
Exit stack: [V12, S11, S10, S9, S8, S7, {0x4ad, 0x8a6}, S5, S4, S3, 0xa49, V1008, V1010, 0xad8, V1046, V1010]

================================

Block 0xad8
[0xad8:0xb03]
---
Predecessors: [0xb1f]
Successors: [0xb0c]
---
0xad8 JUMPDEST
0xad9 PUSH1 0x1
0xadb PUSH1 0xa0
0xadd PUSH1 0x2
0xadf EXP
0xae0 SUB
0xae1 DUP4
0xae2 AND
0xae3 PUSH1 0x0
0xae5 SWAP1
0xae6 DUP2
0xae7 MSTORE
0xae8 PUSH1 0x1
0xaea PUSH1 0x20
0xaec MSTORE
0xaed PUSH1 0x40
0xaef SWAP1
0xaf0 SHA3
0xaf1 SSTORE
0xaf2 PUSH1 0x2
0xaf4 SLOAD
0xaf5 PUSH2 0xb04
0xaf8 SWAP1
0xaf9 DUP3
0xafa PUSH4 0xffffffff
0xaff PUSH2 0xb0c
0xb02 AND
0xb03 JUMP
---
0xad8: JUMPDEST 
0xad9: V1051 = 0x1
0xadb: V1052 = 0xa0
0xadd: V1053 = 0x2
0xadf: V1054 = EXP 0x2 0xa0
0xae0: V1055 = SUB 0x10000000000000000000000000000000000000000 0x1
0xae2: V1056 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xae3: V1057 = 0x0
0xae7: M[0x0] = V1056
0xae8: V1058 = 0x1
0xaea: V1059 = 0x20
0xaec: M[0x20] = 0x1
0xaed: V1060 = 0x40
0xaf0: V1061 = SHA3 0x0 0x40
0xaf1: S[V1061] = S0
0xaf2: V1062 = 0x2
0xaf4: V1063 = S[0x2]
0xaf5: V1064 = 0xb04
0xafa: V1065 = 0xffffffff
0xaff: V1066 = 0xb0c
0xb02: V1067 = AND 0xb0c 0xffffffff
0xb03: JUMP 0xb0c
---
Entry stack: [V12, S12, S11, S10, S9, S8, {0x4ad, 0x8a6}, S6, S5, S4, 0xa49, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, 0xb04, V1063, S1]
Exit stack: [V12, S12, S11, S10, S9, S8, {0x4ad, 0x8a6}, S6, S5, S4, 0xa49, S2, S1, 0xb04, V1063, S1]

================================

Block 0xb04
[0xb04:0xb07]
---
Predecessors: [0xb1f]
Successors: [0xb08]
---
0xb04 JUMPDEST
0xb05 PUSH1 0x2
0xb07 SSTORE
---
0xb04: JUMPDEST 
0xb05: V1068 = 0x2
0xb07: S[0x2] = S0
---
Entry stack: [V12, S12, S11, S10, S9, S8, {0x4ad, 0x8a6}, S6, S5, S4, 0xa49, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S12, S11, S10, S9, S8, {0x4ad, 0x8a6}, S6, S5, S4, 0xa49, S2, S1]

================================

Block 0xb08
[0xb08:0xb0b]
---
Predecessors: [0xb04]
Successors: [0xa49]
---
0xb08 JUMPDEST
0xb09 POP
0xb0a POP
0xb0b JUMP
---
0xb08: JUMPDEST 
0xb0b: JUMP 0xa49
---
Entry stack: [V12, S11, S10, S9, S8, S7, {0x4ad, 0x8a6}, S5, S4, S3, 0xa49, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, S11, S10, S9, S8, S7, {0x4ad, 0x8a6}, S5, S4, S3]

================================

Block 0xb0c
[0xb0c:0xb19]
---
Predecessors: [0xaaf, 0xad8]
Successors: [0xb1a, 0xb1b]
---
0xb0c JUMPDEST
0xb0d PUSH1 0x0
0xb0f DUP3
0xb10 DUP3
0xb11 ADD
0xb12 DUP4
0xb13 DUP2
0xb14 LT
0xb15 ISZERO
0xb16 PUSH2 0xb1b
0xb19 JUMPI
---
0xb0c: JUMPDEST 
0xb0d: V1069 = 0x0
0xb11: V1070 = ADD S0 S1
0xb14: V1071 = LT V1070 S1
0xb15: V1072 = ISZERO V1071
0xb16: V1073 = 0xb1b
0xb19: JUMPI 0xb1b V1072
---
Entry stack: [V12, S14, S13, S12, S11, S10, {0x4ad, 0x8a6}, S8, S7, S6, 0xa49, S4, S3, {0xad8, 0xb04}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1070]
Exit stack: [V12, S14, S13, S12, S11, S10, {0x4ad, 0x8a6}, S8, S7, S6, 0xa49, S4, S3, {0xad8, 0xb04}, S1, S0, 0x0, V1070]

================================

Block 0xb1a
[0xb1a:0xb1a]
---
Predecessors: [0xb0c]
Successors: []
---
0xb1a INVALID
---
0xb1a: INVALID 
---
Entry stack: [V12, S16, S15, S14, S13, S12, {0x4ad, 0x8a6}, S10, S9, S8, 0xa49, S6, S5, {0xad8, 0xb04}, S3, S2, 0x0, V1070]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S16, S15, S14, S13, S12, {0x4ad, 0x8a6}, S10, S9, S8, 0xa49, S6, S5, {0xad8, 0xb04}, S3, S2, 0x0, V1070]

================================

Block 0xb1b
[0xb1b:0xb1e]
---
Predecessors: [0xb0c]
Successors: [0xb1f]
---
0xb1b JUMPDEST
0xb1c DUP1
0xb1d SWAP2
0xb1e POP
---
0xb1b: JUMPDEST 
---
Entry stack: [V12, S16, S15, S14, S13, S12, {0x4ad, 0x8a6}, S10, S9, S8, 0xa49, S6, S5, {0xad8, 0xb04}, S3, S2, 0x0, V1070]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V12, S16, S15, S14, S13, S12, {0x4ad, 0x8a6}, S10, S9, S8, 0xa49, S6, S5, {0xad8, 0xb04}, S3, S2, V1070, V1070]

================================

Block 0xb1f
[0xb1f:0xb25]
---
Predecessors: [0xb1b]
Successors: [0xad8, 0xb04]
---
0xb1f JUMPDEST
0xb20 POP
0xb21 SWAP3
0xb22 SWAP2
0xb23 POP
0xb24 POP
0xb25 JUMP
---
0xb1f: JUMPDEST 
0xb25: JUMP {0xad8, 0xb04}
---
Entry stack: [V12, S16, S15, S14, S13, S12, {0x4ad, 0x8a6}, S10, S9, S8, 0xa49, S6, S5, {0xad8, 0xb04}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V12, S16, S15, S14, S13, S12, {0x4ad, 0x8a6}, S10, S9, S8, 0xa49, S6, S5, S1]

================================

Block 0xb26
[0xb26:0xb51]
---
Predecessors: []
Successors: []
---
0xb26 STOP
0xb27 LOG1
0xb28 PUSH6 0x627a7a723058
0xb2f SHA3
0xb30 PUSH9 0x9a5eeb88a872ddb715
0xb3a MISSING 0x5d
0xb3b MISSING 0xc2
0xb3c SWAP12
0xb3d SAR
0xb3e MISSING 0x4b
0xb3f PUSH15 0xdec7d8c539bc62174f91a68fde9c97
0xb4f RETURN
0xb50 STOP
0xb51 MISSING 0x29
---
0xb26: STOP 
0xb27: LOG S0 S1 S2
0xb28: V1074 = 0x627a7a723058
0xb2f: V1075 = SHA3 0x627a7a723058 S3
0xb30: V1076 = 0x9a5eeb88a872ddb715
0xb3a: MISSING 0x5d
0xb3b: MISSING 0xc2
0xb3d: V1077 = SAR S12 S1
0xb3e: MISSING 0x4b
0xb3f: V1078 = 0xdec7d8c539bc62174f91a68fde9c97
0xb4f: RETURN 0xdec7d8c539bc62174f91a68fde9c97 S0
0xb50: STOP 
0xb51: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0x9a5eeb88a872ddb715, V1075, V1077, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x5b4487
Entry block: 0xad
Exit block: 0xc0
Body: 0xad, 0xb4, 0xb8, 0xc0, 0x2a6

Function 1:
Public function signature: 0x954c478
Entry block: 0xd2
Exit block: 0xd9
Body: 0xc0, 0xd2, 0xd9, 0xdd

Function 2:
Public function signature: 0x1a7a9ad7
Entry block: 0x102
Exit block: 0x115
Body: 0x102, 0x115, 0x39f, 0x3f2, 0x3f6, 0x403, 0x407, 0x418, 0x41c, 0x46d, 0x471, 0x47e, 0x482, 0x493, 0x497, 0x4a1

Function 3:
Public function signature: 0x377ed13c
Entry block: 0x117
Exit block: 0x115
Body: 0x115, 0x117, 0x11e, 0x122, 0x4b3, 0x4ca, 0x4ce, 0x4f7, 0x4f8

Function 4:
Public function signature: 0x6103d70b
Entry block: 0x138
Exit block: 0x115
Body: 0x115, 0x138, 0x13f, 0x143, 0x4fb, 0x51d, 0x521, 0x535, 0x539, 0x54c, 0x58f, 0x590, 0x591, 0xa98, 0xaa3, 0xaa4, 0xaa9

Function 5:
Public function signature: 0x83197ef0
Entry block: 0x14d
Exit block: 0x5b0
Body: 0x14d, 0x154, 0x158, 0x595, 0x5ac, 0x5b0

Function 6:
Public function signature: 0x8da5cb5b
Entry block: 0x162
Exit block: 0x175
Body: 0x162, 0x169, 0x16d, 0x175, 0x5c1

Function 7:
Public function signature: 0x9ad2fc8b
Entry block: 0x191
Exit block: 0x198
Body: 0xc0, 0x191, 0x198, 0x19c

Function 8:
Public function signature: 0xaeabc062
Entry block: 0x1df
Exit block: 0x115
Body: 0x115, 0x1df, 0x1e6, 0x1ea, 0x6e5, 0x6fc, 0x700, 0x729, 0x72a

Function 9:
Public function signature: 0xe2982c21
Entry block: 0x200
Exit block: 0xc0
Body: 0xc0, 0x200, 0x207, 0x20b, 0x72d

Function 10:
Public function signature: 0xf2fde38b
Entry block: 0x231
Exit block: 0x115
Body: 0x115, 0x231, 0x238, 0x23c, 0x4f7, 0x4f8, 0x73f, 0x756, 0x75a, 0x76a, 0x792, 0x793, 0x794

Function 11:
Public function signature: 0xf4de7548
Entry block: 0x252
Exit block: 0x115
Body: 0x115, 0x252, 0x797, 0x7ea, 0x7ee, 0x7fb, 0x7ff, 0x810, 0x814, 0x865, 0x869, 0x876, 0x87a, 0x88b, 0x88f, 0x89a

Function 12:
Public function signature: 0xf5074f41
Entry block: 0x285
Exit block: 0x8c8
Body: 0x285, 0x28c, 0x290, 0x8ad, 0x8c4, 0x8c8

Function 13:
Public fallback function
Entry block: 0xa8
Exit block: 0xa8
Body: 0xa8

Function 14:
Private function
Entry block: 0x8d8
Exit block: 0xa93
Body: 0x8d8, 0x8e8, 0x93f, 0x950, 0x98a, 0x9e3, 0x9f4, 0xa49, 0xa93, 0xaaf, 0xad8, 0xad8, 0xb04, 0xb08, 0xb0c, 0xb1b, 0xb1f

Function 15:
Private function
Entry block: 0xb0c
Exit block: 0xb1f
Body: 0xb0c, 0xb1b, 0xb1f

Function 16:
Private function
Entry block: 0x5d0
Exit block: 0x6de
Body: 0x5d0, 0x64e, 0x65f, 0x6bf, 0x6d0, 0x6de

Function 17:
Private function
Entry block: 0x2ac
Exit block: 0x399
Body: 0x2ac, 0x309, 0x31a, 0x37a, 0x38b, 0x399

