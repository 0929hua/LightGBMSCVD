Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x83]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x83
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x83
0xc: JUMPI 0x83 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x148]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x715018a6
0x3c EQ
0x3d PUSH2 0x148
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x715018a6
0x3c: V13 = EQ 0x715018a6 V11
0x3d: V14 = 0x148
0x40: JUMPI 0x148 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x15f]
---
0x41 DUP1
0x42 PUSH4 0x7362377b
0x47 EQ
0x48 PUSH2 0x15f
0x4b JUMPI
---
0x42: V15 = 0x7362377b
0x47: V16 = EQ 0x7362377b V11
0x48: V17 = 0x15f
0x4b: JUMPI 0x15f V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x18e]
---
0x4c DUP1
0x4d PUSH4 0x8da5cb5b
0x52 EQ
0x53 PUSH2 0x18e
0x56 JUMPI
---
0x4d: V18 = 0x8da5cb5b
0x52: V19 = EQ 0x8da5cb5b V11
0x53: V20 = 0x18e
0x56: JUMPI 0x18e V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x1e5]
---
0x57 DUP1
0x58 PUSH4 0xe6e97ead
0x5d EQ
0x5e PUSH2 0x1e5
0x61 JUMPI
---
0x58: V21 = 0xe6e97ead
0x5d: V22 = EQ 0xe6e97ead V11
0x5e: V23 = 0x1e5
0x61: JUMPI 0x1e5 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x2a3]
---
0x62 DUP1
0x63 PUSH4 0xf2fde38b
0x68 EQ
0x69 PUSH2 0x2a3
0x6c JUMPI
---
0x63: V24 = 0xf2fde38b
0x68: V25 = EQ 0xf2fde38b V11
0x69: V26 = 0x2a3
0x6c: JUMPI 0x2a3 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x2e6]
---
0x6d DUP1
0x6e PUSH4 0xf3e414f8
0x73 EQ
0x74 PUSH2 0x2e6
0x77 JUMPI
---
0x6e: V27 = 0xf3e414f8
0x73: V28 = EQ 0xf3e414f8 V11
0x74: V29 = 0x2e6
0x77: JUMPI 0x2e6 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x34b]
---
0x78 DUP1
0x79 PUSH4 0xf4f3b200
0x7e EQ
0x7f PUSH2 0x34b
0x82 JUMPI
---
0x79: V30 = 0xf4f3b200
0x7e: V31 = EQ 0xf4f3b200 V11
0x7f: V32 = 0x34b
0x82: JUMPI 0x34b V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0xe1]
---
Predecessors: [0x0, 0x78]
Successors: [0xe2, 0xeb]
---
0x83 JUMPDEST
0x84 PUSH1 0x1
0x86 PUSH1 0x0
0x88 SWAP1
0x89 SLOAD
0x8a SWAP1
0x8b PUSH2 0x100
0x8e EXP
0x8f SWAP1
0x90 DIV
0x91 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa6 AND
0xa7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbc AND
0xbd PUSH2 0x8fc
0xc0 CALLVALUE
0xc1 SWAP1
0xc2 DUP2
0xc3 ISZERO
0xc4 MUL
0xc5 SWAP1
0xc6 PUSH1 0x40
0xc8 MLOAD
0xc9 PUSH1 0x0
0xcb PUSH1 0x40
0xcd MLOAD
0xce DUP1
0xcf DUP4
0xd0 SUB
0xd1 DUP2
0xd2 DUP6
0xd3 DUP9
0xd4 DUP9
0xd5 CALL
0xd6 SWAP4
0xd7 POP
0xd8 POP
0xd9 POP
0xda POP
0xdb ISZERO
0xdc DUP1
0xdd ISZERO
0xde PUSH2 0xeb
0xe1 JUMPI
---
0x83: JUMPDEST 
0x84: V33 = 0x1
0x86: V34 = 0x0
0x89: V35 = S[0x1]
0x8b: V36 = 0x100
0x8e: V37 = EXP 0x100 0x0
0x90: V38 = DIV V35 0x1
0x91: V39 = 0xffffffffffffffffffffffffffffffffffffffff
0xa6: V40 = AND 0xffffffffffffffffffffffffffffffffffffffff V38
0xa7: V41 = 0xffffffffffffffffffffffffffffffffffffffff
0xbc: V42 = AND 0xffffffffffffffffffffffffffffffffffffffff V40
0xbd: V43 = 0x8fc
0xc0: V44 = CALLVALUE
0xc3: V45 = ISZERO V44
0xc4: V46 = MUL V45 0x8fc
0xc6: V47 = 0x40
0xc8: V48 = M[0x40]
0xc9: V49 = 0x0
0xcb: V50 = 0x40
0xcd: V51 = M[0x40]
0xd0: V52 = SUB V48 V51
0xd5: V53 = CALL V46 V42 V44 V51 V52 V51 0x0
0xdb: V54 = ISZERO V53
0xdd: V55 = ISZERO V54
0xde: V56 = 0xeb
0xe1: JUMPI 0xeb V55
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V54]
Exit stack: [V11, V54]

================================

Block 0xe2
[0xe2:0xea]
---
Predecessors: [0x83]
Successors: []
---
0xe2 RETURNDATASIZE
0xe3 PUSH1 0x0
0xe5 DUP1
0xe6 RETURNDATACOPY
0xe7 RETURNDATASIZE
0xe8 PUSH1 0x0
0xea REVERT
---
0xe2: V57 = RETURNDATASIZE
0xe3: V58 = 0x0
0xe6: RETURNDATACOPY 0x0 0x0 V57
0xe7: V59 = RETURNDATASIZE
0xe8: V60 = 0x0
0xea: REVERT 0x0 V59
---
Entry stack: [V11, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V54]

================================

Block 0xeb
[0xeb:0x147]
---
Predecessors: [0x83]
Successors: []
---
0xeb JUMPDEST
0xec POP
0xed PUSH32 0x8c4fa44ab4bf21f57ea9e266120f9f12e57a130323cd98b32983910cd5e424d9
0x10e CALLVALUE
0x10f PUSH1 0x0
0x111 CALLDATASIZE
0x112 PUSH1 0x40
0x114 MLOAD
0x115 DUP1
0x116 DUP5
0x117 DUP2
0x118 MSTORE
0x119 PUSH1 0x20
0x11b ADD
0x11c DUP1
0x11d PUSH1 0x20
0x11f ADD
0x120 DUP3
0x121 DUP2
0x122 SUB
0x123 DUP3
0x124 MSTORE
0x125 DUP5
0x126 DUP5
0x127 DUP3
0x128 DUP2
0x129 DUP2
0x12a MSTORE
0x12b PUSH1 0x20
0x12d ADD
0x12e SWAP3
0x12f POP
0x130 DUP1
0x131 DUP3
0x132 DUP5
0x133 CALLDATACOPY
0x134 DUP3
0x135 ADD
0x136 SWAP2
0x137 POP
0x138 POP
0x139 SWAP5
0x13a POP
0x13b POP
0x13c POP
0x13d POP
0x13e POP
0x13f PUSH1 0x40
0x141 MLOAD
0x142 DUP1
0x143 SWAP2
0x144 SUB
0x145 SWAP1
0x146 LOG1
0x147 STOP
---
0xeb: JUMPDEST 
0xed: V61 = 0x8c4fa44ab4bf21f57ea9e266120f9f12e57a130323cd98b32983910cd5e424d9
0x10e: V62 = CALLVALUE
0x10f: V63 = 0x0
0x111: V64 = CALLDATASIZE
0x112: V65 = 0x40
0x114: V66 = M[0x40]
0x118: M[V66] = V62
0x119: V67 = 0x20
0x11b: V68 = ADD 0x20 V66
0x11d: V69 = 0x20
0x11f: V70 = ADD 0x20 V68
0x122: V71 = SUB V70 V66
0x124: M[V68] = V71
0x12a: M[V70] = V64
0x12b: V72 = 0x20
0x12d: V73 = ADD 0x20 V70
0x133: CALLDATACOPY V73 0x0 V64
0x135: V74 = ADD V73 V64
0x13f: V75 = 0x40
0x141: V76 = M[0x40]
0x144: V77 = SUB V74 V76
0x146: LOG V76 V77 0x8c4fa44ab4bf21f57ea9e266120f9f12e57a130323cd98b32983910cd5e424d9
0x147: STOP 
---
Entry stack: [V11, V54]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x148
[0x148:0x14f]
---
Predecessors: [0xd]
Successors: [0x150, 0x154]
---
0x148 JUMPDEST
0x149 CALLVALUE
0x14a DUP1
0x14b ISZERO
0x14c PUSH2 0x154
0x14f JUMPI
---
0x148: JUMPDEST 
0x149: V78 = CALLVALUE
0x14b: V79 = ISZERO V78
0x14c: V80 = 0x154
0x14f: JUMPI 0x154 V79
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V78]
Exit stack: [V11, V78]

================================

Block 0x150
[0x150:0x153]
---
Predecessors: [0x148]
Successors: []
---
0x150 PUSH1 0x0
0x152 DUP1
0x153 REVERT
---
0x150: V81 = 0x0
0x153: REVERT 0x0 0x0
---
Entry stack: [V11, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V78]

================================

Block 0x154
[0x154:0x15c]
---
Predecessors: [0x148]
Successors: [0x3a6]
---
0x154 JUMPDEST
0x155 POP
0x156 PUSH2 0x15d
0x159 PUSH2 0x3a6
0x15c JUMP
---
0x154: JUMPDEST 
0x156: V82 = 0x15d
0x159: V83 = 0x3a6
0x15c: JUMP 0x3a6
---
Entry stack: [V11, V78]
Stack pops: 1
Stack additions: [0x15d]
Exit stack: [V11, 0x15d]

================================

Block 0x15d
[0x15d:0x15e]
---
Predecessors: [0x402]
Successors: []
---
0x15d JUMPDEST
0x15e STOP
---
0x15d: JUMPDEST 
0x15e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x15f
[0x15f:0x166]
---
Predecessors: [0x41]
Successors: [0x167, 0x16b]
---
0x15f JUMPDEST
0x160 CALLVALUE
0x161 DUP1
0x162 ISZERO
0x163 PUSH2 0x16b
0x166 JUMPI
---
0x15f: JUMPDEST 
0x160: V84 = CALLVALUE
0x162: V85 = ISZERO V84
0x163: V86 = 0x16b
0x166: JUMPI 0x16b V85
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V84]
Exit stack: [V11, V84]

================================

Block 0x167
[0x167:0x16a]
---
Predecessors: [0x15f]
Successors: []
---
0x167 PUSH1 0x0
0x169 DUP1
0x16a REVERT
---
0x167: V87 = 0x0
0x16a: REVERT 0x0 0x0
---
Entry stack: [V11, V84]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V84]

================================

Block 0x16b
[0x16b:0x173]
---
Predecessors: [0x15f]
Successors: [0x4a9]
---
0x16b JUMPDEST
0x16c POP
0x16d PUSH2 0x174
0x170 PUSH2 0x4a9
0x173 JUMP
---
0x16b: JUMPDEST 
0x16d: V88 = 0x174
0x170: V89 = 0x4a9
0x173: JUMP 0x4a9
---
Entry stack: [V11, V84]
Stack pops: 1
Stack additions: [0x174]
Exit stack: [V11, 0x174]

================================

Block 0x174
[0x174:0x18d]
---
Predecessors: [0x58a]
Successors: []
---
0x174 JUMPDEST
0x175 PUSH1 0x40
0x177 MLOAD
0x178 DUP1
0x179 DUP3
0x17a ISZERO
0x17b ISZERO
0x17c ISZERO
0x17d ISZERO
0x17e DUP2
0x17f MSTORE
0x180 PUSH1 0x20
0x182 ADD
0x183 SWAP2
0x184 POP
0x185 POP
0x186 PUSH1 0x40
0x188 MLOAD
0x189 DUP1
0x18a SWAP2
0x18b SUB
0x18c SWAP1
0x18d RETURN
---
0x174: JUMPDEST 
0x175: V90 = 0x40
0x177: V91 = M[0x40]
0x17a: V92 = ISZERO 0x1
0x17b: V93 = ISZERO 0x0
0x17c: V94 = ISZERO 0x1
0x17d: V95 = ISZERO 0x0
0x17f: M[V91] = 0x1
0x180: V96 = 0x20
0x182: V97 = ADD 0x20 V91
0x186: V98 = 0x40
0x188: V99 = M[0x40]
0x18b: V100 = SUB V97 V99
0x18d: RETURN V99 V100
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x18e
[0x18e:0x195]
---
Predecessors: [0x4c]
Successors: [0x196, 0x19a]
---
0x18e JUMPDEST
0x18f CALLVALUE
0x190 DUP1
0x191 ISZERO
0x192 PUSH2 0x19a
0x195 JUMPI
---
0x18e: JUMPDEST 
0x18f: V101 = CALLVALUE
0x191: V102 = ISZERO V101
0x192: V103 = 0x19a
0x195: JUMPI 0x19a V102
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V101]
Exit stack: [V11, V101]

================================

Block 0x196
[0x196:0x199]
---
Predecessors: [0x18e]
Successors: []
---
0x196 PUSH1 0x0
0x198 DUP1
0x199 REVERT
---
0x196: V104 = 0x0
0x199: REVERT 0x0 0x0
---
Entry stack: [V11, V101]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V101]

================================

Block 0x19a
[0x19a:0x1a2]
---
Predecessors: [0x18e]
Successors: [0x593]
---
0x19a JUMPDEST
0x19b POP
0x19c PUSH2 0x1a3
0x19f PUSH2 0x593
0x1a2 JUMP
---
0x19a: JUMPDEST 
0x19c: V105 = 0x1a3
0x19f: V106 = 0x593
0x1a2: JUMP 0x593
---
Entry stack: [V11, V101]
Stack pops: 1
Stack additions: [0x1a3]
Exit stack: [V11, 0x1a3]

================================

Block 0x1a3
[0x1a3:0x1e4]
---
Predecessors: [0x593]
Successors: []
---
0x1a3 JUMPDEST
0x1a4 PUSH1 0x40
0x1a6 MLOAD
0x1a7 DUP1
0x1a8 DUP3
0x1a9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1be AND
0x1bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d4 AND
0x1d5 DUP2
0x1d6 MSTORE
0x1d7 PUSH1 0x20
0x1d9 ADD
0x1da SWAP2
0x1db POP
0x1dc POP
0x1dd PUSH1 0x40
0x1df MLOAD
0x1e0 DUP1
0x1e1 SWAP2
0x1e2 SUB
0x1e3 SWAP1
0x1e4 RETURN
---
0x1a3: JUMPDEST 
0x1a4: V107 = 0x40
0x1a6: V108 = M[0x40]
0x1a9: V109 = 0xffffffffffffffffffffffffffffffffffffffff
0x1be: V110 = AND 0xffffffffffffffffffffffffffffffffffffffff V343
0x1bf: V111 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d4: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x1d6: M[V108] = V112
0x1d7: V113 = 0x20
0x1d9: V114 = ADD 0x20 V108
0x1dd: V115 = 0x40
0x1df: V116 = M[0x40]
0x1e2: V117 = SUB V114 V116
0x1e4: RETURN V116 V117
---
Entry stack: [V11, 0x1a3, V343]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1a3]

================================

Block 0x1e5
[0x1e5:0x1ec]
---
Predecessors: [0x57]
Successors: [0x1ed, 0x1f1]
---
0x1e5 JUMPDEST
0x1e6 CALLVALUE
0x1e7 DUP1
0x1e8 ISZERO
0x1e9 PUSH2 0x1f1
0x1ec JUMPI
---
0x1e5: JUMPDEST 
0x1e6: V118 = CALLVALUE
0x1e8: V119 = ISZERO V118
0x1e9: V120 = 0x1f1
0x1ec: JUMPI 0x1f1 V119
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V118]
Exit stack: [V11, V118]

================================

Block 0x1ed
[0x1ed:0x1f0]
---
Predecessors: [0x1e5]
Successors: []
---
0x1ed PUSH1 0x0
0x1ef DUP1
0x1f0 REVERT
---
0x1ed: V121 = 0x0
0x1f0: REVERT 0x0 0x0
---
Entry stack: [V11, V118]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V118]

================================

Block 0x1f1
[0x1f1:0x288]
---
Predecessors: [0x1e5]
Successors: [0x5b9]
---
0x1f1 JUMPDEST
0x1f2 POP
0x1f3 PUSH2 0x289
0x1f6 PUSH1 0x4
0x1f8 DUP1
0x1f9 CALLDATASIZE
0x1fa SUB
0x1fb DUP2
0x1fc ADD
0x1fd SWAP1
0x1fe DUP1
0x1ff DUP1
0x200 CALLDATALOAD
0x201 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x216 AND
0x217 SWAP1
0x218 PUSH1 0x20
0x21a ADD
0x21b SWAP1
0x21c SWAP3
0x21d SWAP2
0x21e SWAP1
0x21f DUP1
0x220 CALLDATALOAD
0x221 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x236 AND
0x237 SWAP1
0x238 PUSH1 0x20
0x23a ADD
0x23b SWAP1
0x23c SWAP3
0x23d SWAP2
0x23e SWAP1
0x23f DUP1
0x240 CALLDATALOAD
0x241 SWAP1
0x242 PUSH1 0x20
0x244 ADD
0x245 SWAP1
0x246 DUP3
0x247 ADD
0x248 DUP1
0x249 CALLDATALOAD
0x24a SWAP1
0x24b PUSH1 0x20
0x24d ADD
0x24e SWAP1
0x24f DUP1
0x250 DUP1
0x251 PUSH1 0x20
0x253 MUL
0x254 PUSH1 0x20
0x256 ADD
0x257 PUSH1 0x40
0x259 MLOAD
0x25a SWAP1
0x25b DUP2
0x25c ADD
0x25d PUSH1 0x40
0x25f MSTORE
0x260 DUP1
0x261 SWAP4
0x262 SWAP3
0x263 SWAP2
0x264 SWAP1
0x265 DUP2
0x266 DUP2
0x267 MSTORE
0x268 PUSH1 0x20
0x26a ADD
0x26b DUP4
0x26c DUP4
0x26d PUSH1 0x20
0x26f MUL
0x270 DUP1
0x271 DUP3
0x272 DUP5
0x273 CALLDATACOPY
0x274 DUP3
0x275 ADD
0x276 SWAP2
0x277 POP
0x278 POP
0x279 POP
0x27a POP
0x27b POP
0x27c POP
0x27d SWAP2
0x27e SWAP3
0x27f SWAP2
0x280 SWAP3
0x281 SWAP1
0x282 POP
0x283 POP
0x284 POP
0x285 PUSH2 0x5b9
0x288 JUMP
---
0x1f1: JUMPDEST 
0x1f3: V122 = 0x289
0x1f6: V123 = 0x4
0x1f9: V124 = CALLDATASIZE
0x1fa: V125 = SUB V124 0x4
0x1fc: V126 = ADD 0x4 V125
0x200: V127 = CALLDATALOAD 0x4
0x201: V128 = 0xffffffffffffffffffffffffffffffffffffffff
0x216: V129 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x218: V130 = 0x20
0x21a: V131 = ADD 0x20 0x4
0x220: V132 = CALLDATALOAD 0x24
0x221: V133 = 0xffffffffffffffffffffffffffffffffffffffff
0x236: V134 = AND 0xffffffffffffffffffffffffffffffffffffffff V132
0x238: V135 = 0x20
0x23a: V136 = ADD 0x20 0x24
0x240: V137 = CALLDATALOAD 0x44
0x242: V138 = 0x20
0x244: V139 = ADD 0x20 0x44
0x247: V140 = ADD 0x4 V137
0x249: V141 = CALLDATALOAD V140
0x24b: V142 = 0x20
0x24d: V143 = ADD 0x20 V140
0x251: V144 = 0x20
0x253: V145 = MUL 0x20 V141
0x254: V146 = 0x20
0x256: V147 = ADD 0x20 V145
0x257: V148 = 0x40
0x259: V149 = M[0x40]
0x25c: V150 = ADD V149 V147
0x25d: V151 = 0x40
0x25f: M[0x40] = V150
0x267: M[V149] = V141
0x268: V152 = 0x20
0x26a: V153 = ADD 0x20 V149
0x26d: V154 = 0x20
0x26f: V155 = MUL 0x20 V141
0x273: CALLDATACOPY V153 V143 V155
0x275: V156 = ADD V153 V155
0x285: V157 = 0x5b9
0x288: JUMP 0x5b9
---
Entry stack: [V11, V118]
Stack pops: 1
Stack additions: [0x289, V129, V134, V149]
Exit stack: [V11, 0x289, V129, V134, V149]

================================

Block 0x289
[0x289:0x2a2]
---
Predecessors: [0x79a]
Successors: []
---
0x289 JUMPDEST
0x28a PUSH1 0x40
0x28c MLOAD
0x28d DUP1
0x28e DUP3
0x28f ISZERO
0x290 ISZERO
0x291 ISZERO
0x292 ISZERO
0x293 DUP2
0x294 MSTORE
0x295 PUSH1 0x20
0x297 ADD
0x298 SWAP2
0x299 POP
0x29a POP
0x29b PUSH1 0x40
0x29d MLOAD
0x29e DUP1
0x29f SWAP2
0x2a0 SUB
0x2a1 SWAP1
0x2a2 RETURN
---
0x289: JUMPDEST 
0x28a: V158 = 0x40
0x28c: V159 = M[0x40]
0x28f: V160 = ISZERO 0x1
0x290: V161 = ISZERO 0x0
0x291: V162 = ISZERO 0x1
0x292: V163 = ISZERO 0x0
0x294: M[V159] = 0x1
0x295: V164 = 0x20
0x297: V165 = ADD 0x20 V159
0x29b: V166 = 0x40
0x29d: V167 = M[0x40]
0x2a0: V168 = SUB V165 V167
0x2a2: RETURN V167 V168
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x2a3
[0x2a3:0x2aa]
---
Predecessors: [0x62]
Successors: [0x2ab, 0x2af]
---
0x2a3 JUMPDEST
0x2a4 CALLVALUE
0x2a5 DUP1
0x2a6 ISZERO
0x2a7 PUSH2 0x2af
0x2aa JUMPI
---
0x2a3: JUMPDEST 
0x2a4: V169 = CALLVALUE
0x2a6: V170 = ISZERO V169
0x2a7: V171 = 0x2af
0x2aa: JUMPI 0x2af V170
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V169]
Exit stack: [V11, V169]

================================

Block 0x2ab
[0x2ab:0x2ae]
---
Predecessors: [0x2a3]
Successors: []
---
0x2ab PUSH1 0x0
0x2ad DUP1
0x2ae REVERT
---
0x2ab: V172 = 0x0
0x2ae: REVERT 0x0 0x0
---
Entry stack: [V11, V169]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V169]

================================

Block 0x2af
[0x2af:0x2e3]
---
Predecessors: [0x2a3]
Successors: [0x7a8]
---
0x2af JUMPDEST
0x2b0 POP
0x2b1 PUSH2 0x2e4
0x2b4 PUSH1 0x4
0x2b6 DUP1
0x2b7 CALLDATASIZE
0x2b8 SUB
0x2b9 DUP2
0x2ba ADD
0x2bb SWAP1
0x2bc DUP1
0x2bd DUP1
0x2be CALLDATALOAD
0x2bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d4 AND
0x2d5 SWAP1
0x2d6 PUSH1 0x20
0x2d8 ADD
0x2d9 SWAP1
0x2da SWAP3
0x2db SWAP2
0x2dc SWAP1
0x2dd POP
0x2de POP
0x2df POP
0x2e0 PUSH2 0x7a8
0x2e3 JUMP
---
0x2af: JUMPDEST 
0x2b1: V173 = 0x2e4
0x2b4: V174 = 0x4
0x2b7: V175 = CALLDATASIZE
0x2b8: V176 = SUB V175 0x4
0x2ba: V177 = ADD 0x4 V176
0x2be: V178 = CALLDATALOAD 0x4
0x2bf: V179 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d4: V180 = AND 0xffffffffffffffffffffffffffffffffffffffff V178
0x2d6: V181 = 0x20
0x2d8: V182 = ADD 0x20 0x4
0x2e0: V183 = 0x7a8
0x2e3: JUMP 0x7a8
---
Entry stack: [V11, V169]
Stack pops: 1
Stack additions: [0x2e4, V180]
Exit stack: [V11, 0x2e4, V180]

================================

Block 0x2e4
[0x2e4:0x2e5]
---
Predecessors: [0x80d]
Successors: []
---
0x2e4 JUMPDEST
0x2e5 STOP
---
0x2e4: JUMPDEST 
0x2e5: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2e6
[0x2e6:0x2ed]
---
Predecessors: [0x6d]
Successors: [0x2ee, 0x2f2]
---
0x2e6 JUMPDEST
0x2e7 CALLVALUE
0x2e8 DUP1
0x2e9 ISZERO
0x2ea PUSH2 0x2f2
0x2ed JUMPI
---
0x2e6: JUMPDEST 
0x2e7: V184 = CALLVALUE
0x2e9: V185 = ISZERO V184
0x2ea: V186 = 0x2f2
0x2ed: JUMPI 0x2f2 V185
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V184]
Exit stack: [V11, V184]

================================

Block 0x2ee
[0x2ee:0x2f1]
---
Predecessors: [0x2e6]
Successors: []
---
0x2ee PUSH1 0x0
0x2f0 DUP1
0x2f1 REVERT
---
0x2ee: V187 = 0x0
0x2f1: REVERT 0x0 0x0
---
Entry stack: [V11, V184]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V184]

================================

Block 0x2f2
[0x2f2:0x330]
---
Predecessors: [0x2e6]
Successors: [0x810]
---
0x2f2 JUMPDEST
0x2f3 POP
0x2f4 PUSH2 0x331
0x2f7 PUSH1 0x4
0x2f9 DUP1
0x2fa CALLDATASIZE
0x2fb SUB
0x2fc DUP2
0x2fd ADD
0x2fe SWAP1
0x2ff DUP1
0x300 DUP1
0x301 CALLDATALOAD
0x302 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x317 AND
0x318 SWAP1
0x319 PUSH1 0x20
0x31b ADD
0x31c SWAP1
0x31d SWAP3
0x31e SWAP2
0x31f SWAP1
0x320 DUP1
0x321 CALLDATALOAD
0x322 SWAP1
0x323 PUSH1 0x20
0x325 ADD
0x326 SWAP1
0x327 SWAP3
0x328 SWAP2
0x329 SWAP1
0x32a POP
0x32b POP
0x32c POP
0x32d PUSH2 0x810
0x330 JUMP
---
0x2f2: JUMPDEST 
0x2f4: V188 = 0x331
0x2f7: V189 = 0x4
0x2fa: V190 = CALLDATASIZE
0x2fb: V191 = SUB V190 0x4
0x2fd: V192 = ADD 0x4 V191
0x301: V193 = CALLDATALOAD 0x4
0x302: V194 = 0xffffffffffffffffffffffffffffffffffffffff
0x317: V195 = AND 0xffffffffffffffffffffffffffffffffffffffff V193
0x319: V196 = 0x20
0x31b: V197 = ADD 0x20 0x4
0x321: V198 = CALLDATALOAD 0x24
0x323: V199 = 0x20
0x325: V200 = ADD 0x20 0x24
0x32d: V201 = 0x810
0x330: JUMP 0x810
---
Entry stack: [V11, V184]
Stack pops: 1
Stack additions: [0x331, V195, V198]
Exit stack: [V11, 0x331, V195, V198]

================================

Block 0x331
[0x331:0x34a]
---
Predecessors: [0x97b]
Successors: []
---
0x331 JUMPDEST
0x332 PUSH1 0x40
0x334 MLOAD
0x335 DUP1
0x336 DUP3
0x337 ISZERO
0x338 ISZERO
0x339 ISZERO
0x33a ISZERO
0x33b DUP2
0x33c MSTORE
0x33d PUSH1 0x20
0x33f ADD
0x340 SWAP2
0x341 POP
0x342 POP
0x343 PUSH1 0x40
0x345 MLOAD
0x346 DUP1
0x347 SWAP2
0x348 SUB
0x349 SWAP1
0x34a RETURN
---
0x331: JUMPDEST 
0x332: V202 = 0x40
0x334: V203 = M[0x40]
0x337: V204 = ISZERO 0x1
0x338: V205 = ISZERO 0x0
0x339: V206 = ISZERO 0x1
0x33a: V207 = ISZERO 0x0
0x33c: M[V203] = 0x1
0x33d: V208 = 0x20
0x33f: V209 = ADD 0x20 V203
0x343: V210 = 0x40
0x345: V211 = M[0x40]
0x348: V212 = SUB V209 V211
0x34a: RETURN V211 V212
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x34b
[0x34b:0x352]
---
Predecessors: [0x78]
Successors: [0x353, 0x357]
---
0x34b JUMPDEST
0x34c CALLVALUE
0x34d DUP1
0x34e ISZERO
0x34f PUSH2 0x357
0x352 JUMPI
---
0x34b: JUMPDEST 
0x34c: V213 = CALLVALUE
0x34e: V214 = ISZERO V213
0x34f: V215 = 0x357
0x352: JUMPI 0x357 V214
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V213]
Exit stack: [V11, V213]

================================

Block 0x353
[0x353:0x356]
---
Predecessors: [0x34b]
Successors: []
---
0x353 PUSH1 0x0
0x355 DUP1
0x356 REVERT
---
0x353: V216 = 0x0
0x356: REVERT 0x0 0x0
---
Entry stack: [V11, V213]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V213]

================================

Block 0x357
[0x357:0x38b]
---
Predecessors: [0x34b]
Successors: [0x989]
---
0x357 JUMPDEST
0x358 POP
0x359 PUSH2 0x38c
0x35c PUSH1 0x4
0x35e DUP1
0x35f CALLDATASIZE
0x360 SUB
0x361 DUP2
0x362 ADD
0x363 SWAP1
0x364 DUP1
0x365 DUP1
0x366 CALLDATALOAD
0x367 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x37c AND
0x37d SWAP1
0x37e PUSH1 0x20
0x380 ADD
0x381 SWAP1
0x382 SWAP3
0x383 SWAP2
0x384 SWAP1
0x385 POP
0x386 POP
0x387 POP
0x388 PUSH2 0x989
0x38b JUMP
---
0x357: JUMPDEST 
0x359: V217 = 0x38c
0x35c: V218 = 0x4
0x35f: V219 = CALLDATASIZE
0x360: V220 = SUB V219 0x4
0x362: V221 = ADD 0x4 V220
0x366: V222 = CALLDATALOAD 0x4
0x367: V223 = 0xffffffffffffffffffffffffffffffffffffffff
0x37c: V224 = AND 0xffffffffffffffffffffffffffffffffffffffff V222
0x37e: V225 = 0x20
0x380: V226 = ADD 0x20 0x4
0x388: V227 = 0x989
0x38b: JUMP 0x989
---
Entry stack: [V11, V213]
Stack pops: 1
Stack additions: [0x38c, V224]
Exit stack: [V11, 0x38c, V224]

================================

Block 0x38c
[0x38c:0x3a5]
---
Predecessors: [0xbaf]
Successors: []
---
0x38c JUMPDEST
0x38d PUSH1 0x40
0x38f MLOAD
0x390 DUP1
0x391 DUP3
0x392 ISZERO
0x393 ISZERO
0x394 ISZERO
0x395 ISZERO
0x396 DUP2
0x397 MSTORE
0x398 PUSH1 0x20
0x39a ADD
0x39b SWAP2
0x39c POP
0x39d POP
0x39e PUSH1 0x40
0x3a0 MLOAD
0x3a1 DUP1
0x3a2 SWAP2
0x3a3 SUB
0x3a4 SWAP1
0x3a5 RETURN
---
0x38c: JUMPDEST 
0x38d: V228 = 0x40
0x38f: V229 = M[0x40]
0x392: V230 = ISZERO 0x1
0x393: V231 = ISZERO 0x0
0x394: V232 = ISZERO 0x1
0x395: V233 = ISZERO 0x0
0x397: M[V229] = 0x1
0x398: V234 = 0x20
0x39a: V235 = ADD 0x20 V229
0x39e: V236 = 0x40
0x3a0: V237 = M[0x40]
0x3a3: V238 = SUB V235 V237
0x3a5: RETURN V237 V238
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x3a6
[0x3a6:0x3fd]
---
Predecessors: [0x154]
Successors: [0x3fe, 0x402]
---
0x3a6 JUMPDEST
0x3a7 PUSH1 0x1
0x3a9 PUSH1 0x0
0x3ab SWAP1
0x3ac SLOAD
0x3ad SWAP1
0x3ae PUSH2 0x100
0x3b1 EXP
0x3b2 SWAP1
0x3b3 DIV
0x3b4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c9 AND
0x3ca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3df AND
0x3e0 CALLER
0x3e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f6 AND
0x3f7 EQ
0x3f8 ISZERO
0x3f9 ISZERO
0x3fa PUSH2 0x402
0x3fd JUMPI
---
0x3a6: JUMPDEST 
0x3a7: V239 = 0x1
0x3a9: V240 = 0x0
0x3ac: V241 = S[0x1]
0x3ae: V242 = 0x100
0x3b1: V243 = EXP 0x100 0x0
0x3b3: V244 = DIV V241 0x1
0x3b4: V245 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c9: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff V244
0x3ca: V247 = 0xffffffffffffffffffffffffffffffffffffffff
0x3df: V248 = AND 0xffffffffffffffffffffffffffffffffffffffff V246
0x3e0: V249 = CALLER
0x3e1: V250 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f6: V251 = AND 0xffffffffffffffffffffffffffffffffffffffff V249
0x3f7: V252 = EQ V251 V248
0x3f8: V253 = ISZERO V252
0x3f9: V254 = ISZERO V253
0x3fa: V255 = 0x402
0x3fd: JUMPI 0x402 V254
---
Entry stack: [V11, 0x15d]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x15d]

================================

Block 0x3fe
[0x3fe:0x401]
---
Predecessors: [0x3a6]
Successors: []
---
0x3fe PUSH1 0x0
0x400 DUP1
0x401 REVERT
---
0x3fe: V256 = 0x0
0x401: REVERT 0x0 0x0
---
Entry stack: [V11, 0x15d]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x15d]

================================

Block 0x402
[0x402:0x4a8]
---
Predecessors: [0x3a6]
Successors: [0x15d]
---
0x402 JUMPDEST
0x403 PUSH1 0x0
0x405 DUP1
0x406 SWAP1
0x407 SLOAD
0x408 SWAP1
0x409 PUSH2 0x100
0x40c EXP
0x40d SWAP1
0x40e DIV
0x40f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x424 AND
0x425 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x43a AND
0x43b PUSH32 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820
0x45c PUSH1 0x40
0x45e MLOAD
0x45f PUSH1 0x40
0x461 MLOAD
0x462 DUP1
0x463 SWAP2
0x464 SUB
0x465 SWAP1
0x466 LOG2
0x467 PUSH1 0x0
0x469 DUP1
0x46a PUSH1 0x0
0x46c PUSH2 0x100
0x46f EXP
0x470 DUP2
0x471 SLOAD
0x472 DUP2
0x473 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x488 MUL
0x489 NOT
0x48a AND
0x48b SWAP1
0x48c DUP4
0x48d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4a2 AND
0x4a3 MUL
0x4a4 OR
0x4a5 SWAP1
0x4a6 SSTORE
0x4a7 POP
0x4a8 JUMP
---
0x402: JUMPDEST 
0x403: V257 = 0x0
0x407: V258 = S[0x0]
0x409: V259 = 0x100
0x40c: V260 = EXP 0x100 0x0
0x40e: V261 = DIV V258 0x1
0x40f: V262 = 0xffffffffffffffffffffffffffffffffffffffff
0x424: V263 = AND 0xffffffffffffffffffffffffffffffffffffffff V261
0x425: V264 = 0xffffffffffffffffffffffffffffffffffffffff
0x43a: V265 = AND 0xffffffffffffffffffffffffffffffffffffffff V263
0x43b: V266 = 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820
0x45c: V267 = 0x40
0x45e: V268 = M[0x40]
0x45f: V269 = 0x40
0x461: V270 = M[0x40]
0x464: V271 = SUB V268 V270
0x466: LOG V270 V271 0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820 V265
0x467: V272 = 0x0
0x46a: V273 = 0x0
0x46c: V274 = 0x100
0x46f: V275 = EXP 0x100 0x0
0x471: V276 = S[0x0]
0x473: V277 = 0xffffffffffffffffffffffffffffffffffffffff
0x488: V278 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x489: V279 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x48a: V280 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V276
0x48d: V281 = 0xffffffffffffffffffffffffffffffffffffffff
0x4a2: V282 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x4a3: V283 = MUL 0x0 0x1
0x4a4: V284 = OR 0x0 V280
0x4a6: S[0x0] = V284
0x4a8: JUMP 0x15d
---
Entry stack: [V11, 0x15d]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x4a9
[0x4a9:0x503]
---
Predecessors: [0x16b]
Successors: [0x504, 0x508]
---
0x4a9 JUMPDEST
0x4aa PUSH1 0x0
0x4ac DUP1
0x4ad PUSH1 0x1
0x4af PUSH1 0x0
0x4b1 SWAP1
0x4b2 SLOAD
0x4b3 SWAP1
0x4b4 PUSH2 0x100
0x4b7 EXP
0x4b8 SWAP1
0x4b9 DIV
0x4ba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4cf AND
0x4d0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4e5 AND
0x4e6 CALLER
0x4e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4fc AND
0x4fd EQ
0x4fe ISZERO
0x4ff ISZERO
0x500 PUSH2 0x508
0x503 JUMPI
---
0x4a9: JUMPDEST 
0x4aa: V285 = 0x0
0x4ad: V286 = 0x1
0x4af: V287 = 0x0
0x4b2: V288 = S[0x1]
0x4b4: V289 = 0x100
0x4b7: V290 = EXP 0x100 0x0
0x4b9: V291 = DIV V288 0x1
0x4ba: V292 = 0xffffffffffffffffffffffffffffffffffffffff
0x4cf: V293 = AND 0xffffffffffffffffffffffffffffffffffffffff V291
0x4d0: V294 = 0xffffffffffffffffffffffffffffffffffffffff
0x4e5: V295 = AND 0xffffffffffffffffffffffffffffffffffffffff V293
0x4e6: V296 = CALLER
0x4e7: V297 = 0xffffffffffffffffffffffffffffffffffffffff
0x4fc: V298 = AND 0xffffffffffffffffffffffffffffffffffffffff V296
0x4fd: V299 = EQ V298 V295
0x4fe: V300 = ISZERO V299
0x4ff: V301 = ISZERO V300
0x500: V302 = 0x508
0x503: JUMPI 0x508 V301
---
Entry stack: [V11, 0x174]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0x174, 0x0, 0x0]

================================

Block 0x504
[0x504:0x507]
---
Predecessors: [0x4a9]
Successors: []
---
0x504 PUSH1 0x0
0x506 DUP1
0x507 REVERT
---
0x504: V303 = 0x0
0x507: REVERT 0x0 0x0
---
Entry stack: [V11, 0x174, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x174, 0x0, 0x0]

================================

Block 0x508
[0x508:0x580]
---
Predecessors: [0x4a9]
Successors: [0x581, 0x58a]
---
0x508 JUMPDEST
0x509 ADDRESS
0x50a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x51f AND
0x520 BALANCE
0x521 SWAP1
0x522 POP
0x523 PUSH1 0x1
0x525 PUSH1 0x0
0x527 SWAP1
0x528 SLOAD
0x529 SWAP1
0x52a PUSH2 0x100
0x52d EXP
0x52e SWAP1
0x52f DIV
0x530 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x545 AND
0x546 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x55b AND
0x55c PUSH2 0x8fc
0x55f DUP3
0x560 SWAP1
0x561 DUP2
0x562 ISZERO
0x563 MUL
0x564 SWAP1
0x565 PUSH1 0x40
0x567 MLOAD
0x568 PUSH1 0x0
0x56a PUSH1 0x40
0x56c MLOAD
0x56d DUP1
0x56e DUP4
0x56f SUB
0x570 DUP2
0x571 DUP6
0x572 DUP9
0x573 DUP9
0x574 CALL
0x575 SWAP4
0x576 POP
0x577 POP
0x578 POP
0x579 POP
0x57a ISZERO
0x57b DUP1
0x57c ISZERO
0x57d PUSH2 0x58a
0x580 JUMPI
---
0x508: JUMPDEST 
0x509: V304 = ADDRESS
0x50a: V305 = 0xffffffffffffffffffffffffffffffffffffffff
0x51f: V306 = AND 0xffffffffffffffffffffffffffffffffffffffff V304
0x520: V307 = BALANCE V306
0x523: V308 = 0x1
0x525: V309 = 0x0
0x528: V310 = S[0x1]
0x52a: V311 = 0x100
0x52d: V312 = EXP 0x100 0x0
0x52f: V313 = DIV V310 0x1
0x530: V314 = 0xffffffffffffffffffffffffffffffffffffffff
0x545: V315 = AND 0xffffffffffffffffffffffffffffffffffffffff V313
0x546: V316 = 0xffffffffffffffffffffffffffffffffffffffff
0x55b: V317 = AND 0xffffffffffffffffffffffffffffffffffffffff V315
0x55c: V318 = 0x8fc
0x562: V319 = ISZERO V307
0x563: V320 = MUL V319 0x8fc
0x565: V321 = 0x40
0x567: V322 = M[0x40]
0x568: V323 = 0x0
0x56a: V324 = 0x40
0x56c: V325 = M[0x40]
0x56f: V326 = SUB V322 V325
0x574: V327 = CALL V320 V317 V307 V325 V326 V325 0x0
0x57a: V328 = ISZERO V327
0x57c: V329 = ISZERO V328
0x57d: V330 = 0x58a
0x580: JUMPI 0x58a V329
---
Entry stack: [V11, 0x174, 0x0, 0x0]
Stack pops: 1
Stack additions: [V307, V328]
Exit stack: [V11, 0x174, 0x0, V307, V328]

================================

Block 0x581
[0x581:0x589]
---
Predecessors: [0x508]
Successors: []
---
0x581 RETURNDATASIZE
0x582 PUSH1 0x0
0x584 DUP1
0x585 RETURNDATACOPY
0x586 RETURNDATASIZE
0x587 PUSH1 0x0
0x589 REVERT
---
0x581: V331 = RETURNDATASIZE
0x582: V332 = 0x0
0x585: RETURNDATACOPY 0x0 0x0 V331
0x586: V333 = RETURNDATASIZE
0x587: V334 = 0x0
0x589: REVERT 0x0 V333
---
Entry stack: [V11, 0x174, 0x0, V307, V328]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x174, 0x0, V307, V328]

================================

Block 0x58a
[0x58a:0x592]
---
Predecessors: [0x508]
Successors: [0x174]
---
0x58a JUMPDEST
0x58b POP
0x58c PUSH1 0x1
0x58e SWAP2
0x58f POP
0x590 POP
0x591 SWAP1
0x592 JUMP
---
0x58a: JUMPDEST 
0x58c: V335 = 0x1
0x592: JUMP 0x174
---
Entry stack: [V11, 0x174, 0x0, V307, V328]
Stack pops: 4
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x593
[0x593:0x5b8]
---
Predecessors: [0x19a]
Successors: [0x1a3]
---
0x593 JUMPDEST
0x594 PUSH1 0x1
0x596 PUSH1 0x0
0x598 SWAP1
0x599 SLOAD
0x59a SWAP1
0x59b PUSH2 0x100
0x59e EXP
0x59f SWAP1
0x5a0 DIV
0x5a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5b6 AND
0x5b7 DUP2
0x5b8 JUMP
---
0x593: JUMPDEST 
0x594: V336 = 0x1
0x596: V337 = 0x0
0x599: V338 = S[0x1]
0x59b: V339 = 0x100
0x59e: V340 = EXP 0x100 0x0
0x5a0: V341 = DIV V338 0x1
0x5a1: V342 = 0xffffffffffffffffffffffffffffffffffffffff
0x5b6: V343 = AND 0xffffffffffffffffffffffffffffffffffffffff V341
0x5b8: JUMP 0x1a3
---
Entry stack: [V11, 0x1a3]
Stack pops: 1
Stack additions: [S0, V343]
Exit stack: [V11, 0x1a3, V343]

================================

Block 0x5b9
[0x5b9:0x616]
---
Predecessors: [0x1f1]
Successors: [0x617, 0x61b]
---
0x5b9 JUMPDEST
0x5ba PUSH1 0x0
0x5bc DUP1
0x5bd PUSH1 0x0
0x5bf DUP1
0x5c0 PUSH1 0x1
0x5c2 PUSH1 0x0
0x5c4 SWAP1
0x5c5 SLOAD
0x5c6 SWAP1
0x5c7 PUSH2 0x100
0x5ca EXP
0x5cb SWAP1
0x5cc DIV
0x5cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5e2 AND
0x5e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5f8 AND
0x5f9 CALLER
0x5fa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x60f AND
0x610 EQ
0x611 ISZERO
0x612 ISZERO
0x613 PUSH2 0x61b
0x616 JUMPI
---
0x5b9: JUMPDEST 
0x5ba: V344 = 0x0
0x5bd: V345 = 0x0
0x5c0: V346 = 0x1
0x5c2: V347 = 0x0
0x5c5: V348 = S[0x1]
0x5c7: V349 = 0x100
0x5ca: V350 = EXP 0x100 0x0
0x5cc: V351 = DIV V348 0x1
0x5cd: V352 = 0xffffffffffffffffffffffffffffffffffffffff
0x5e2: V353 = AND 0xffffffffffffffffffffffffffffffffffffffff V351
0x5e3: V354 = 0xffffffffffffffffffffffffffffffffffffffff
0x5f8: V355 = AND 0xffffffffffffffffffffffffffffffffffffffff V353
0x5f9: V356 = CALLER
0x5fa: V357 = 0xffffffffffffffffffffffffffffffffffffffff
0x60f: V358 = AND 0xffffffffffffffffffffffffffffffffffffffff V356
0x610: V359 = EQ V358 V355
0x611: V360 = ISZERO V359
0x612: V361 = ISZERO V360
0x613: V362 = 0x61b
0x616: JUMPI 0x61b V361
---
Entry stack: [V11, 0x289, V129, V134, V149]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0]
Exit stack: [V11, 0x289, V129, V134, V149, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x617
[0x617:0x61a]
---
Predecessors: [0x5b9]
Successors: []
---
0x617 PUSH1 0x0
0x619 DUP1
0x61a REVERT
---
0x617: V363 = 0x0
0x61a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x289, V129, V134, V149, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x289, V129, V134, V149, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x61b
[0x61b:0x628]
---
Predecessors: [0x5b9]
Successors: [0x629, 0x62a]
---
0x61b JUMPDEST
0x61c PUSH1 0x0
0x61e PUSH1 0x2
0x620 DUP7
0x621 MLOAD
0x622 DUP2
0x623 ISZERO
0x624 ISZERO
0x625 PUSH2 0x62a
0x628 JUMPI
---
0x61b: JUMPDEST 
0x61c: V364 = 0x0
0x61e: V365 = 0x2
0x621: V366 = M[V149]
0x623: V367 = ISZERO 0x2
0x624: V368 = ISZERO 0x0
0x625: V369 = 0x62a
0x628: JUMPI 0x62a 0x1
---
Entry stack: [V11, 0x289, V129, V134, V149, 0x0, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x0, 0x2, V366]
Exit stack: [V11, 0x289, V129, V134, V149, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, V366]

================================

Block 0x629
[0x629:0x629]
---
Predecessors: [0x61b]
Successors: []
---
0x629 INVALID
---
0x629: INVALID 
---
Entry stack: [V11, 0x289, V129, V134, V149, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, V366]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x289, V129, V134, V149, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, V366]

================================

Block 0x62a
[0x62a:0x632]
---
Predecessors: [0x61b]
Successors: [0x633, 0x637]
---
0x62a JUMPDEST
0x62b MOD
0x62c EQ
0x62d ISZERO
0x62e ISZERO
0x62f PUSH2 0x637
0x632 JUMPI
---
0x62a: JUMPDEST 
0x62b: V370 = MOD V366 0x2
0x62c: V371 = EQ V370 0x0
0x62d: V372 = ISZERO V371
0x62e: V373 = ISZERO V372
0x62f: V374 = 0x637
0x632: JUMPI 0x637 V373
---
Entry stack: [V11, 0x289, V129, V134, V149, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, V366]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x289, V129, V134, V149, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x633
[0x633:0x636]
---
Predecessors: [0x62a]
Successors: []
---
0x633 PUSH1 0x0
0x635 DUP1
0x636 REVERT
---
0x633: V375 = 0x0
0x636: REVERT 0x0 0x0
---
Entry stack: [V11, 0x289, V129, V134, V149, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x289, V129, V134, V149, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x637
[0x637:0x63b]
---
Predecessors: [0x62a]
Successors: [0x63c]
---
0x637 JUMPDEST
0x638 PUSH1 0x0
0x63a SWAP3
0x63b POP
---
0x637: JUMPDEST 
0x638: V376 = 0x0
---
Entry stack: [V11, 0x289, V129, V134, V149, 0x0, 0x0, 0x0, 0x0]
Stack pops: 3
Stack additions: [0x0, S1, S0]
Exit stack: [V11, 0x289, V129, V134, V149, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x63c
[0x63c:0x645]
---
Predecessors: [0x637, 0x77d]
Successors: [0x646, 0x79a]
---
0x63c JUMPDEST
0x63d DUP5
0x63e MLOAD
0x63f DUP4
0x640 LT
0x641 ISZERO
0x642 PUSH2 0x79a
0x645 JUMPI
---
0x63c: JUMPDEST 
0x63e: V377 = M[V149]
0x640: V378 = LT S2 V377
0x641: V379 = ISZERO V378
0x642: V380 = 0x79a
0x645: JUMPI 0x79a V379
---
Entry stack: [V11, 0x289, V129, V134, V149, 0x0, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x289, V129, V134, V149, 0x0, S2, S1, S0]

================================

Block 0x646
[0x646:0x651]
---
Predecessors: [0x63c]
Successors: [0x652, 0x653]
---
0x646 DUP5
0x647 DUP4
0x648 DUP2
0x649 MLOAD
0x64a DUP2
0x64b LT
0x64c ISZERO
0x64d ISZERO
0x64e PUSH2 0x653
0x651 JUMPI
---
0x649: V381 = M[V149]
0x64b: V382 = LT S2 V381
0x64c: V383 = ISZERO V382
0x64d: V384 = ISZERO V383
0x64e: V385 = 0x653
0x651: JUMPI 0x653 V384
---
Entry stack: [V11, 0x289, V129, V134, V149, 0x0, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S4, S2]
Exit stack: [V11, 0x289, V129, V134, V149, 0x0, S2, S1, S0, V149, S2]

================================

Block 0x652
[0x652:0x652]
---
Predecessors: [0x646]
Successors: []
---
0x652 INVALID
---
0x652: INVALID 
---
Entry stack: [V11, 0x289, V129, V134, V149, 0x0, S4, S3, S2, V149, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x289, V129, V134, V149, 0x0, S4, S3, S2, V149, S0]

================================

Block 0x653
[0x653:0x66e]
---
Predecessors: [0x646]
Successors: [0x66f, 0x670]
---
0x653 JUMPDEST
0x654 SWAP1
0x655 PUSH1 0x20
0x657 ADD
0x658 SWAP1
0x659 PUSH1 0x20
0x65b MUL
0x65c ADD
0x65d MLOAD
0x65e SWAP2
0x65f POP
0x660 DUP5
0x661 PUSH1 0x1
0x663 DUP5
0x664 ADD
0x665 DUP2
0x666 MLOAD
0x667 DUP2
0x668 LT
0x669 ISZERO
0x66a ISZERO
0x66b PUSH2 0x670
0x66e JUMPI
---
0x653: JUMPDEST 
0x655: V386 = 0x20
0x657: V387 = ADD 0x20 V149
0x659: V388 = 0x20
0x65b: V389 = MUL 0x20 S0
0x65c: V390 = ADD V389 V387
0x65d: V391 = M[V390]
0x661: V392 = 0x1
0x664: V393 = ADD S4 0x1
0x666: V394 = M[V149]
0x668: V395 = LT V393 V394
0x669: V396 = ISZERO V395
0x66a: V397 = ISZERO V396
0x66b: V398 = 0x670
0x66e: JUMPI 0x670 V397
---
Entry stack: [V11, 0x289, V129, V134, V149, 0x0, S4, S3, S2, V149, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, V391, S2, S6, V393]
Exit stack: [V11, 0x289, V129, V134, V149, 0x0, S4, V391, S2, V149, V393]

================================

Block 0x66f
[0x66f:0x66f]
---
Predecessors: [0x653]
Successors: []
---
0x66f INVALID
---
0x66f: INVALID 
---
Entry stack: [V11, 0x289, V129, V134, V149, 0x0, S4, V391, S2, V149, V393]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x289, V129, V134, V149, 0x0, S4, V391, S2, V149, V393]

================================

Block 0x670
[0x670:0x74e]
---
Predecessors: [0x653]
Successors: [0x74f, 0x753]
---
0x670 JUMPDEST
0x671 SWAP1
0x672 PUSH1 0x20
0x674 ADD
0x675 SWAP1
0x676 PUSH1 0x20
0x678 MUL
0x679 ADD
0x67a MLOAD
0x67b SWAP1
0x67c POP
0x67d DUP7
0x67e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x693 AND
0x694 PUSH4 0x23b872dd
0x699 DUP8
0x69a DUP5
0x69b DUP5
0x69c PUSH1 0x40
0x69e MLOAD
0x69f DUP5
0x6a0 PUSH4 0xffffffff
0x6a5 AND
0x6a6 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x6c4 MUL
0x6c5 DUP2
0x6c6 MSTORE
0x6c7 PUSH1 0x4
0x6c9 ADD
0x6ca DUP1
0x6cb DUP5
0x6cc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6e1 AND
0x6e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6f7 AND
0x6f8 DUP2
0x6f9 MSTORE
0x6fa PUSH1 0x20
0x6fc ADD
0x6fd DUP4
0x6fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x713 AND
0x714 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x729 AND
0x72a DUP2
0x72b MSTORE
0x72c PUSH1 0x20
0x72e ADD
0x72f DUP3
0x730 DUP2
0x731 MSTORE
0x732 PUSH1 0x20
0x734 ADD
0x735 SWAP4
0x736 POP
0x737 POP
0x738 POP
0x739 POP
0x73a PUSH1 0x20
0x73c PUSH1 0x40
0x73e MLOAD
0x73f DUP1
0x740 DUP4
0x741 SUB
0x742 DUP2
0x743 PUSH1 0x0
0x745 DUP8
0x746 DUP1
0x747 EXTCODESIZE
0x748 ISZERO
0x749 DUP1
0x74a ISZERO
0x74b PUSH2 0x753
0x74e JUMPI
---
0x670: JUMPDEST 
0x672: V399 = 0x20
0x674: V400 = ADD 0x20 V149
0x676: V401 = 0x20
0x678: V402 = MUL 0x20 V393
0x679: V403 = ADD V402 V400
0x67a: V404 = M[V403]
0x67e: V405 = 0xffffffffffffffffffffffffffffffffffffffff
0x693: V406 = AND 0xffffffffffffffffffffffffffffffffffffffff V129
0x694: V407 = 0x23b872dd
0x69c: V408 = 0x40
0x69e: V409 = M[0x40]
0x6a0: V410 = 0xffffffff
0x6a5: V411 = AND 0xffffffff 0x23b872dd
0x6a6: V412 = 0x100000000000000000000000000000000000000000000000000000000
0x6c4: V413 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x23b872dd
0x6c6: M[V409] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x6c7: V414 = 0x4
0x6c9: V415 = ADD 0x4 V409
0x6cc: V416 = 0xffffffffffffffffffffffffffffffffffffffff
0x6e1: V417 = AND 0xffffffffffffffffffffffffffffffffffffffff V134
0x6e2: V418 = 0xffffffffffffffffffffffffffffffffffffffff
0x6f7: V419 = AND 0xffffffffffffffffffffffffffffffffffffffff V417
0x6f9: M[V415] = V419
0x6fa: V420 = 0x20
0x6fc: V421 = ADD 0x20 V415
0x6fe: V422 = 0xffffffffffffffffffffffffffffffffffffffff
0x713: V423 = AND 0xffffffffffffffffffffffffffffffffffffffff V391
0x714: V424 = 0xffffffffffffffffffffffffffffffffffffffff
0x729: V425 = AND 0xffffffffffffffffffffffffffffffffffffffff V423
0x72b: M[V421] = V425
0x72c: V426 = 0x20
0x72e: V427 = ADD 0x20 V421
0x731: M[V427] = V404
0x732: V428 = 0x20
0x734: V429 = ADD 0x20 V427
0x73a: V430 = 0x20
0x73c: V431 = 0x40
0x73e: V432 = M[0x40]
0x741: V433 = SUB V429 V432
0x743: V434 = 0x0
0x747: V435 = EXTCODESIZE V406
0x748: V436 = ISZERO V435
0x74a: V437 = ISZERO V436
0x74b: V438 = 0x753
0x74e: JUMPI 0x753 V437
---
Entry stack: [V11, 0x289, V129, V134, V149, 0x0, S4, V391, S2, V149, V393]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, V404, V406, 0x23b872dd, V429, 0x20, V432, V433, V432, 0x0, V406, V436]
Exit stack: [V11, 0x289, V129, V134, V149, 0x0, S4, V391, V404, V406, 0x23b872dd, V429, 0x20, V432, V433, V432, 0x0, V406, V436]

================================

Block 0x74f
[0x74f:0x752]
---
Predecessors: [0x670]
Successors: []
---
0x74f PUSH1 0x0
0x751 DUP1
0x752 REVERT
---
0x74f: V439 = 0x0
0x752: REVERT 0x0 0x0
---
Entry stack: [V11, 0x289, V129, V134, V149, 0x0, S12, V391, V404, V406, 0x23b872dd, V429, 0x20, V432, V433, V432, 0x0, V406, V436]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x289, V129, V134, V149, 0x0, S12, V391, V404, V406, 0x23b872dd, V429, 0x20, V432, V433, V432, 0x0, V406, V436]

================================

Block 0x753
[0x753:0x75d]
---
Predecessors: [0x670]
Successors: [0x75e, 0x767]
---
0x753 JUMPDEST
0x754 POP
0x755 GAS
0x756 CALL
0x757 ISZERO
0x758 DUP1
0x759 ISZERO
0x75a PUSH2 0x767
0x75d JUMPI
---
0x753: JUMPDEST 
0x755: V440 = GAS
0x756: V441 = CALL V440 V406 0x0 V432 V433 V432 0x20
0x757: V442 = ISZERO V441
0x759: V443 = ISZERO V442
0x75a: V444 = 0x767
0x75d: JUMPI 0x767 V443
---
Entry stack: [V11, 0x289, V129, V134, V149, 0x0, S12, V391, V404, V406, 0x23b872dd, V429, 0x20, V432, V433, V432, 0x0, V406, V436]
Stack pops: 7
Stack additions: [V442]
Exit stack: [V11, 0x289, V129, V134, V149, 0x0, S12, V391, V404, V406, 0x23b872dd, V429, V442]

================================

Block 0x75e
[0x75e:0x766]
---
Predecessors: [0x753]
Successors: []
---
0x75e RETURNDATASIZE
0x75f PUSH1 0x0
0x761 DUP1
0x762 RETURNDATACOPY
0x763 RETURNDATASIZE
0x764 PUSH1 0x0
0x766 REVERT
---
0x75e: V445 = RETURNDATASIZE
0x75f: V446 = 0x0
0x762: RETURNDATACOPY 0x0 0x0 V445
0x763: V447 = RETURNDATASIZE
0x764: V448 = 0x0
0x766: REVERT 0x0 V447
---
Entry stack: [V11, 0x289, V129, V134, V149, 0x0, S6, V391, V404, V406, 0x23b872dd, V429, V442]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x289, V129, V134, V149, 0x0, S6, V391, V404, V406, 0x23b872dd, V429, V442]

================================

Block 0x767
[0x767:0x778]
---
Predecessors: [0x753]
Successors: [0x779, 0x77d]
---
0x767 JUMPDEST
0x768 POP
0x769 POP
0x76a POP
0x76b POP
0x76c PUSH1 0x40
0x76e MLOAD
0x76f RETURNDATASIZE
0x770 PUSH1 0x20
0x772 DUP2
0x773 LT
0x774 ISZERO
0x775 PUSH2 0x77d
0x778 JUMPI
---
0x767: JUMPDEST 
0x76c: V449 = 0x40
0x76e: V450 = M[0x40]
0x76f: V451 = RETURNDATASIZE
0x770: V452 = 0x20
0x773: V453 = LT V451 0x20
0x774: V454 = ISZERO V453
0x775: V455 = 0x77d
0x778: JUMPI 0x77d V454
---
Entry stack: [V11, 0x289, V129, V134, V149, 0x0, S6, V391, V404, V406, 0x23b872dd, V429, V442]
Stack pops: 4
Stack additions: [V450, V451]
Exit stack: [V11, 0x289, V129, V134, V149, 0x0, S6, V391, V404, V450, V451]

================================

Block 0x779
[0x779:0x77c]
---
Predecessors: [0x767]
Successors: []
---
0x779 PUSH1 0x0
0x77b DUP1
0x77c REVERT
---
0x779: V456 = 0x0
0x77c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x289, V129, V134, V149, 0x0, S4, V391, V404, V450, V451]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x289, V129, V134, V149, 0x0, S4, V391, V404, V450, V451]

================================

Block 0x77d
[0x77d:0x799]
---
Predecessors: [0x767]
Successors: [0x63c]
---
0x77d JUMPDEST
0x77e DUP2
0x77f ADD
0x780 SWAP1
0x781 DUP1
0x782 DUP1
0x783 MLOAD
0x784 SWAP1
0x785 PUSH1 0x20
0x787 ADD
0x788 SWAP1
0x789 SWAP3
0x78a SWAP2
0x78b SWAP1
0x78c POP
0x78d POP
0x78e POP
0x78f POP
0x790 PUSH1 0x2
0x792 DUP4
0x793 ADD
0x794 SWAP3
0x795 POP
0x796 PUSH2 0x63c
0x799 JUMP
---
0x77d: JUMPDEST 
0x77f: V457 = ADD V450 V451
0x783: V458 = M[V450]
0x785: V459 = 0x20
0x787: V460 = ADD 0x20 V450
0x790: V461 = 0x2
0x793: V462 = ADD S4 0x2
0x796: V463 = 0x63c
0x799: JUMP 0x63c
---
Entry stack: [V11, 0x289, V129, V134, V149, 0x0, S4, V391, V404, V450, V451]
Stack pops: 5
Stack additions: [V462, S3, S2]
Exit stack: [V11, 0x289, V129, V134, V149, 0x0, V462, V391, V404]

================================

Block 0x79a
[0x79a:0x7a7]
---
Predecessors: [0x63c]
Successors: [0x289]
---
0x79a JUMPDEST
0x79b PUSH1 0x1
0x79d SWAP4
0x79e POP
0x79f POP
0x7a0 POP
0x7a1 POP
0x7a2 SWAP4
0x7a3 SWAP3
0x7a4 POP
0x7a5 POP
0x7a6 POP
0x7a7 JUMP
---
0x79a: JUMPDEST 
0x79b: V464 = 0x1
0x7a7: JUMP 0x289
---
Entry stack: [V11, 0x289, V129, V134, V149, 0x0, S2, S1, S0]
Stack pops: 8
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x7a8
[0x7a8:0x7ff]
---
Predecessors: [0x2af]
Successors: [0x800, 0x804]
---
0x7a8 JUMPDEST
0x7a9 PUSH1 0x1
0x7ab PUSH1 0x0
0x7ad SWAP1
0x7ae SLOAD
0x7af SWAP1
0x7b0 PUSH2 0x100
0x7b3 EXP
0x7b4 SWAP1
0x7b5 DIV
0x7b6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7cb AND
0x7cc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7e1 AND
0x7e2 CALLER
0x7e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7f8 AND
0x7f9 EQ
0x7fa ISZERO
0x7fb ISZERO
0x7fc PUSH2 0x804
0x7ff JUMPI
---
0x7a8: JUMPDEST 
0x7a9: V465 = 0x1
0x7ab: V466 = 0x0
0x7ae: V467 = S[0x1]
0x7b0: V468 = 0x100
0x7b3: V469 = EXP 0x100 0x0
0x7b5: V470 = DIV V467 0x1
0x7b6: V471 = 0xffffffffffffffffffffffffffffffffffffffff
0x7cb: V472 = AND 0xffffffffffffffffffffffffffffffffffffffff V470
0x7cc: V473 = 0xffffffffffffffffffffffffffffffffffffffff
0x7e1: V474 = AND 0xffffffffffffffffffffffffffffffffffffffff V472
0x7e2: V475 = CALLER
0x7e3: V476 = 0xffffffffffffffffffffffffffffffffffffffff
0x7f8: V477 = AND 0xffffffffffffffffffffffffffffffffffffffff V475
0x7f9: V478 = EQ V477 V474
0x7fa: V479 = ISZERO V478
0x7fb: V480 = ISZERO V479
0x7fc: V481 = 0x804
0x7ff: JUMPI 0x804 V480
---
Entry stack: [V11, 0x2e4, V180]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2e4, V180]

================================

Block 0x800
[0x800:0x803]
---
Predecessors: [0x7a8]
Successors: []
---
0x800 PUSH1 0x0
0x802 DUP1
0x803 REVERT
---
0x800: V482 = 0x0
0x803: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2e4, V180]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2e4, V180]

================================

Block 0x804
[0x804:0x80c]
---
Predecessors: [0x7a8]
Successors: [0xbcb]
---
0x804 JUMPDEST
0x805 PUSH2 0x80d
0x808 DUP2
0x809 PUSH2 0xbcb
0x80c JUMP
---
0x804: JUMPDEST 
0x805: V483 = 0x80d
0x809: V484 = 0xbcb
0x80c: JUMP 0xbcb
---
Entry stack: [V11, 0x2e4, V180]
Stack pops: 1
Stack additions: [S0, 0x80d, S0]
Exit stack: [V11, 0x2e4, V180, 0x80d, V180]

================================

Block 0x80d
[0x80d:0x80f]
---
Predecessors: [0xc07]
Successors: [0x2e4]
---
0x80d JUMPDEST
0x80e POP
0x80f JUMP
---
0x80d: JUMPDEST 
0x80f: JUMP 0x2e4
---
Entry stack: [V11, 0x2e4, V180]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x810
[0x810:0x869]
---
Predecessors: [0x2f2]
Successors: [0x86a, 0x86e]
---
0x810 JUMPDEST
0x811 PUSH1 0x0
0x813 PUSH1 0x1
0x815 PUSH1 0x0
0x817 SWAP1
0x818 SLOAD
0x819 SWAP1
0x81a PUSH2 0x100
0x81d EXP
0x81e SWAP1
0x81f DIV
0x820 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x835 AND
0x836 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x84b AND
0x84c CALLER
0x84d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x862 AND
0x863 EQ
0x864 ISZERO
0x865 ISZERO
0x866 PUSH2 0x86e
0x869 JUMPI
---
0x810: JUMPDEST 
0x811: V485 = 0x0
0x813: V486 = 0x1
0x815: V487 = 0x0
0x818: V488 = S[0x1]
0x81a: V489 = 0x100
0x81d: V490 = EXP 0x100 0x0
0x81f: V491 = DIV V488 0x1
0x820: V492 = 0xffffffffffffffffffffffffffffffffffffffff
0x835: V493 = AND 0xffffffffffffffffffffffffffffffffffffffff V491
0x836: V494 = 0xffffffffffffffffffffffffffffffffffffffff
0x84b: V495 = AND 0xffffffffffffffffffffffffffffffffffffffff V493
0x84c: V496 = CALLER
0x84d: V497 = 0xffffffffffffffffffffffffffffffffffffffff
0x862: V498 = AND 0xffffffffffffffffffffffffffffffffffffffff V496
0x863: V499 = EQ V498 V495
0x864: V500 = ISZERO V499
0x865: V501 = ISZERO V500
0x866: V502 = 0x86e
0x869: JUMPI 0x86e V501
---
Entry stack: [V11, 0x331, V195, V198]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x331, V195, V198, 0x0]

================================

Block 0x86a
[0x86a:0x86d]
---
Predecessors: [0x810]
Successors: []
---
0x86a PUSH1 0x0
0x86c DUP1
0x86d REVERT
---
0x86a: V503 = 0x0
0x86d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x331, V195, V198, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x331, V195, V198, 0x0]

================================

Block 0x86e
[0x86e:0x962]
---
Predecessors: [0x810]
Successors: [0x963, 0x967]
---
0x86e JUMPDEST
0x86f DUP3
0x870 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x885 AND
0x886 PUSH4 0x42842e0e
0x88b ADDRESS
0x88c PUSH1 0x1
0x88e PUSH1 0x0
0x890 SWAP1
0x891 SLOAD
0x892 SWAP1
0x893 PUSH2 0x100
0x896 EXP
0x897 SWAP1
0x898 DIV
0x899 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8ae AND
0x8af DUP6
0x8b0 PUSH1 0x40
0x8b2 MLOAD
0x8b3 DUP5
0x8b4 PUSH4 0xffffffff
0x8b9 AND
0x8ba PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x8d8 MUL
0x8d9 DUP2
0x8da MSTORE
0x8db PUSH1 0x4
0x8dd ADD
0x8de DUP1
0x8df DUP5
0x8e0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8f5 AND
0x8f6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x90b AND
0x90c DUP2
0x90d MSTORE
0x90e PUSH1 0x20
0x910 ADD
0x911 DUP4
0x912 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x927 AND
0x928 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x93d AND
0x93e DUP2
0x93f MSTORE
0x940 PUSH1 0x20
0x942 ADD
0x943 DUP3
0x944 DUP2
0x945 MSTORE
0x946 PUSH1 0x20
0x948 ADD
0x949 SWAP4
0x94a POP
0x94b POP
0x94c POP
0x94d POP
0x94e PUSH1 0x0
0x950 PUSH1 0x40
0x952 MLOAD
0x953 DUP1
0x954 DUP4
0x955 SUB
0x956 DUP2
0x957 PUSH1 0x0
0x959 DUP8
0x95a DUP1
0x95b EXTCODESIZE
0x95c ISZERO
0x95d DUP1
0x95e ISZERO
0x95f PUSH2 0x967
0x962 JUMPI
---
0x86e: JUMPDEST 
0x870: V504 = 0xffffffffffffffffffffffffffffffffffffffff
0x885: V505 = AND 0xffffffffffffffffffffffffffffffffffffffff V195
0x886: V506 = 0x42842e0e
0x88b: V507 = ADDRESS
0x88c: V508 = 0x1
0x88e: V509 = 0x0
0x891: V510 = S[0x1]
0x893: V511 = 0x100
0x896: V512 = EXP 0x100 0x0
0x898: V513 = DIV V510 0x1
0x899: V514 = 0xffffffffffffffffffffffffffffffffffffffff
0x8ae: V515 = AND 0xffffffffffffffffffffffffffffffffffffffff V513
0x8b0: V516 = 0x40
0x8b2: V517 = M[0x40]
0x8b4: V518 = 0xffffffff
0x8b9: V519 = AND 0xffffffff 0x42842e0e
0x8ba: V520 = 0x100000000000000000000000000000000000000000000000000000000
0x8d8: V521 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x42842e0e
0x8da: M[V517] = 0x42842e0e00000000000000000000000000000000000000000000000000000000
0x8db: V522 = 0x4
0x8dd: V523 = ADD 0x4 V517
0x8e0: V524 = 0xffffffffffffffffffffffffffffffffffffffff
0x8f5: V525 = AND 0xffffffffffffffffffffffffffffffffffffffff V507
0x8f6: V526 = 0xffffffffffffffffffffffffffffffffffffffff
0x90b: V527 = AND 0xffffffffffffffffffffffffffffffffffffffff V525
0x90d: M[V523] = V527
0x90e: V528 = 0x20
0x910: V529 = ADD 0x20 V523
0x912: V530 = 0xffffffffffffffffffffffffffffffffffffffff
0x927: V531 = AND 0xffffffffffffffffffffffffffffffffffffffff V515
0x928: V532 = 0xffffffffffffffffffffffffffffffffffffffff
0x93d: V533 = AND 0xffffffffffffffffffffffffffffffffffffffff V531
0x93f: M[V529] = V533
0x940: V534 = 0x20
0x942: V535 = ADD 0x20 V529
0x945: M[V535] = V198
0x946: V536 = 0x20
0x948: V537 = ADD 0x20 V535
0x94e: V538 = 0x0
0x950: V539 = 0x40
0x952: V540 = M[0x40]
0x955: V541 = SUB V537 V540
0x957: V542 = 0x0
0x95b: V543 = EXTCODESIZE V505
0x95c: V544 = ISZERO V543
0x95e: V545 = ISZERO V544
0x95f: V546 = 0x967
0x962: JUMPI 0x967 V545
---
Entry stack: [V11, 0x331, V195, V198, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V505, 0x42842e0e, V537, 0x0, V540, V541, V540, 0x0, V505, V544]
Exit stack: [V11, 0x331, V195, V198, 0x0, V505, 0x42842e0e, V537, 0x0, V540, V541, V540, 0x0, V505, V544]

================================

Block 0x963
[0x963:0x966]
---
Predecessors: [0x86e]
Successors: []
---
0x963 PUSH1 0x0
0x965 DUP1
0x966 REVERT
---
0x963: V547 = 0x0
0x966: REVERT 0x0 0x0
---
Entry stack: [V11, 0x331, V195, V198, 0x0, V505, 0x42842e0e, V537, 0x0, V540, V541, V540, 0x0, V505, V544]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x331, V195, V198, 0x0, V505, 0x42842e0e, V537, 0x0, V540, V541, V540, 0x0, V505, V544]

================================

Block 0x967
[0x967:0x971]
---
Predecessors: [0x86e]
Successors: [0x972, 0x97b]
---
0x967 JUMPDEST
0x968 POP
0x969 GAS
0x96a CALL
0x96b ISZERO
0x96c DUP1
0x96d ISZERO
0x96e PUSH2 0x97b
0x971 JUMPI
---
0x967: JUMPDEST 
0x969: V548 = GAS
0x96a: V549 = CALL V548 V505 0x0 V540 V541 V540 0x0
0x96b: V550 = ISZERO V549
0x96d: V551 = ISZERO V550
0x96e: V552 = 0x97b
0x971: JUMPI 0x97b V551
---
Entry stack: [V11, 0x331, V195, V198, 0x0, V505, 0x42842e0e, V537, 0x0, V540, V541, V540, 0x0, V505, V544]
Stack pops: 7
Stack additions: [V550]
Exit stack: [V11, 0x331, V195, V198, 0x0, V505, 0x42842e0e, V537, V550]

================================

Block 0x972
[0x972:0x97a]
---
Predecessors: [0x967]
Successors: []
---
0x972 RETURNDATASIZE
0x973 PUSH1 0x0
0x975 DUP1
0x976 RETURNDATACOPY
0x977 RETURNDATASIZE
0x978 PUSH1 0x0
0x97a REVERT
---
0x972: V553 = RETURNDATASIZE
0x973: V554 = 0x0
0x976: RETURNDATACOPY 0x0 0x0 V553
0x977: V555 = RETURNDATASIZE
0x978: V556 = 0x0
0x97a: REVERT 0x0 V555
---
Entry stack: [V11, 0x331, V195, V198, 0x0, V505, 0x42842e0e, V537, V550]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x331, V195, V198, 0x0, V505, 0x42842e0e, V537, V550]

================================

Block 0x97b
[0x97b:0x988]
---
Predecessors: [0x967]
Successors: [0x331]
---
0x97b JUMPDEST
0x97c POP
0x97d POP
0x97e POP
0x97f POP
0x980 PUSH1 0x1
0x982 SWAP1
0x983 POP
0x984 SWAP3
0x985 SWAP2
0x986 POP
0x987 POP
0x988 JUMP
---
0x97b: JUMPDEST 
0x980: V557 = 0x1
0x988: JUMP 0x331
---
Entry stack: [V11, 0x331, V195, V198, 0x0, V505, 0x42842e0e, V537, V550]
Stack pops: 8
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x989
[0x989:0x9e3]
---
Predecessors: [0x357]
Successors: [0x9e4, 0x9e8]
---
0x989 JUMPDEST
0x98a PUSH1 0x0
0x98c DUP1
0x98d PUSH1 0x1
0x98f PUSH1 0x0
0x991 SWAP1
0x992 SLOAD
0x993 SWAP1
0x994 PUSH2 0x100
0x997 EXP
0x998 SWAP1
0x999 DIV
0x99a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9af AND
0x9b0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9c5 AND
0x9c6 CALLER
0x9c7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9dc AND
0x9dd EQ
0x9de ISZERO
0x9df ISZERO
0x9e0 PUSH2 0x9e8
0x9e3 JUMPI
---
0x989: JUMPDEST 
0x98a: V558 = 0x0
0x98d: V559 = 0x1
0x98f: V560 = 0x0
0x992: V561 = S[0x1]
0x994: V562 = 0x100
0x997: V563 = EXP 0x100 0x0
0x999: V564 = DIV V561 0x1
0x99a: V565 = 0xffffffffffffffffffffffffffffffffffffffff
0x9af: V566 = AND 0xffffffffffffffffffffffffffffffffffffffff V564
0x9b0: V567 = 0xffffffffffffffffffffffffffffffffffffffff
0x9c5: V568 = AND 0xffffffffffffffffffffffffffffffffffffffff V566
0x9c6: V569 = CALLER
0x9c7: V570 = 0xffffffffffffffffffffffffffffffffffffffff
0x9dc: V571 = AND 0xffffffffffffffffffffffffffffffffffffffff V569
0x9dd: V572 = EQ V571 V568
0x9de: V573 = ISZERO V572
0x9df: V574 = ISZERO V573
0x9e0: V575 = 0x9e8
0x9e3: JUMPI 0x9e8 V574
---
Entry stack: [V11, 0x38c, V224]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0x38c, V224, 0x0, 0x0]

================================

Block 0x9e4
[0x9e4:0x9e7]
---
Predecessors: [0x989]
Successors: []
---
0x9e4 PUSH1 0x0
0x9e6 DUP1
0x9e7 REVERT
---
0x9e4: V576 = 0x0
0x9e7: REVERT 0x0 0x0
---
Entry stack: [V11, 0x38c, V224, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x38c, V224, 0x0, 0x0]

================================

Block 0x9e8
[0x9e8:0xa7e]
---
Predecessors: [0x989]
Successors: [0xa7f, 0xa83]
---
0x9e8 JUMPDEST
0x9e9 DUP3
0x9ea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9ff AND
0xa00 PUSH4 0x70a08231
0xa05 ADDRESS
0xa06 PUSH1 0x40
0xa08 MLOAD
0xa09 DUP3
0xa0a PUSH4 0xffffffff
0xa0f AND
0xa10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xa2e MUL
0xa2f DUP2
0xa30 MSTORE
0xa31 PUSH1 0x4
0xa33 ADD
0xa34 DUP1
0xa35 DUP3
0xa36 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa4b AND
0xa4c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa61 AND
0xa62 DUP2
0xa63 MSTORE
0xa64 PUSH1 0x20
0xa66 ADD
0xa67 SWAP2
0xa68 POP
0xa69 POP
0xa6a PUSH1 0x20
0xa6c PUSH1 0x40
0xa6e MLOAD
0xa6f DUP1
0xa70 DUP4
0xa71 SUB
0xa72 DUP2
0xa73 PUSH1 0x0
0xa75 DUP8
0xa76 DUP1
0xa77 EXTCODESIZE
0xa78 ISZERO
0xa79 DUP1
0xa7a ISZERO
0xa7b PUSH2 0xa83
0xa7e JUMPI
---
0x9e8: JUMPDEST 
0x9ea: V577 = 0xffffffffffffffffffffffffffffffffffffffff
0x9ff: V578 = AND 0xffffffffffffffffffffffffffffffffffffffff V224
0xa00: V579 = 0x70a08231
0xa05: V580 = ADDRESS
0xa06: V581 = 0x40
0xa08: V582 = M[0x40]
0xa0a: V583 = 0xffffffff
0xa0f: V584 = AND 0xffffffff 0x70a08231
0xa10: V585 = 0x100000000000000000000000000000000000000000000000000000000
0xa2e: V586 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0xa30: M[V582] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xa31: V587 = 0x4
0xa33: V588 = ADD 0x4 V582
0xa36: V589 = 0xffffffffffffffffffffffffffffffffffffffff
0xa4b: V590 = AND 0xffffffffffffffffffffffffffffffffffffffff V580
0xa4c: V591 = 0xffffffffffffffffffffffffffffffffffffffff
0xa61: V592 = AND 0xffffffffffffffffffffffffffffffffffffffff V590
0xa63: M[V588] = V592
0xa64: V593 = 0x20
0xa66: V594 = ADD 0x20 V588
0xa6a: V595 = 0x20
0xa6c: V596 = 0x40
0xa6e: V597 = M[0x40]
0xa71: V598 = SUB V594 V597
0xa73: V599 = 0x0
0xa77: V600 = EXTCODESIZE V578
0xa78: V601 = ISZERO V600
0xa7a: V602 = ISZERO V601
0xa7b: V603 = 0xa83
0xa7e: JUMPI 0xa83 V602
---
Entry stack: [V11, 0x38c, V224, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V578, 0x70a08231, V594, 0x20, V597, V598, V597, 0x0, V578, V601]
Exit stack: [V11, 0x38c, V224, 0x0, 0x0, V578, 0x70a08231, V594, 0x20, V597, V598, V597, 0x0, V578, V601]

================================

Block 0xa7f
[0xa7f:0xa82]
---
Predecessors: [0x9e8]
Successors: []
---
0xa7f PUSH1 0x0
0xa81 DUP1
0xa82 REVERT
---
0xa7f: V604 = 0x0
0xa82: REVERT 0x0 0x0
---
Entry stack: [V11, 0x38c, V224, 0x0, 0x0, V578, 0x70a08231, V594, 0x20, V597, V598, V597, 0x0, V578, V601]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x38c, V224, 0x0, 0x0, V578, 0x70a08231, V594, 0x20, V597, V598, V597, 0x0, V578, V601]

================================

Block 0xa83
[0xa83:0xa8d]
---
Predecessors: [0x9e8]
Successors: [0xa8e, 0xa97]
---
0xa83 JUMPDEST
0xa84 POP
0xa85 GAS
0xa86 CALL
0xa87 ISZERO
0xa88 DUP1
0xa89 ISZERO
0xa8a PUSH2 0xa97
0xa8d JUMPI
---
0xa83: JUMPDEST 
0xa85: V605 = GAS
0xa86: V606 = CALL V605 V578 0x0 V597 V598 V597 0x20
0xa87: V607 = ISZERO V606
0xa89: V608 = ISZERO V607
0xa8a: V609 = 0xa97
0xa8d: JUMPI 0xa97 V608
---
Entry stack: [V11, 0x38c, V224, 0x0, 0x0, V578, 0x70a08231, V594, 0x20, V597, V598, V597, 0x0, V578, V601]
Stack pops: 7
Stack additions: [V607]
Exit stack: [V11, 0x38c, V224, 0x0, 0x0, V578, 0x70a08231, V594, V607]

================================

Block 0xa8e
[0xa8e:0xa96]
---
Predecessors: [0xa83]
Successors: []
---
0xa8e RETURNDATASIZE
0xa8f PUSH1 0x0
0xa91 DUP1
0xa92 RETURNDATACOPY
0xa93 RETURNDATASIZE
0xa94 PUSH1 0x0
0xa96 REVERT
---
0xa8e: V610 = RETURNDATASIZE
0xa8f: V611 = 0x0
0xa92: RETURNDATACOPY 0x0 0x0 V610
0xa93: V612 = RETURNDATASIZE
0xa94: V613 = 0x0
0xa96: REVERT 0x0 V612
---
Entry stack: [V11, 0x38c, V224, 0x0, 0x0, V578, 0x70a08231, V594, V607]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x38c, V224, 0x0, 0x0, V578, 0x70a08231, V594, V607]

================================

Block 0xa97
[0xa97:0xaa8]
---
Predecessors: [0xa83]
Successors: [0xaa9, 0xaad]
---
0xa97 JUMPDEST
0xa98 POP
0xa99 POP
0xa9a POP
0xa9b POP
0xa9c PUSH1 0x40
0xa9e MLOAD
0xa9f RETURNDATASIZE
0xaa0 PUSH1 0x20
0xaa2 DUP2
0xaa3 LT
0xaa4 ISZERO
0xaa5 PUSH2 0xaad
0xaa8 JUMPI
---
0xa97: JUMPDEST 
0xa9c: V614 = 0x40
0xa9e: V615 = M[0x40]
0xa9f: V616 = RETURNDATASIZE
0xaa0: V617 = 0x20
0xaa3: V618 = LT V616 0x20
0xaa4: V619 = ISZERO V618
0xaa5: V620 = 0xaad
0xaa8: JUMPI 0xaad V619
---
Entry stack: [V11, 0x38c, V224, 0x0, 0x0, V578, 0x70a08231, V594, V607]
Stack pops: 4
Stack additions: [V615, V616]
Exit stack: [V11, 0x38c, V224, 0x0, 0x0, V615, V616]

================================

Block 0xaa9
[0xaa9:0xaac]
---
Predecessors: [0xa97]
Successors: []
---
0xaa9 PUSH1 0x0
0xaab DUP1
0xaac REVERT
---
0xaa9: V621 = 0x0
0xaac: REVERT 0x0 0x0
---
Entry stack: [V11, 0x38c, V224, 0x0, 0x0, V615, V616]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x38c, V224, 0x0, 0x0, V615, V616]

================================

Block 0xaad
[0xaad:0xb80]
---
Predecessors: [0xa97]
Successors: [0xb81, 0xb85]
---
0xaad JUMPDEST
0xaae DUP2
0xaaf ADD
0xab0 SWAP1
0xab1 DUP1
0xab2 DUP1
0xab3 MLOAD
0xab4 SWAP1
0xab5 PUSH1 0x20
0xab7 ADD
0xab8 SWAP1
0xab9 SWAP3
0xaba SWAP2
0xabb SWAP1
0xabc POP
0xabd POP
0xabe POP
0xabf SWAP1
0xac0 POP
0xac1 DUP3
0xac2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xad7 AND
0xad8 PUSH4 0xa9059cbb
0xadd PUSH1 0x1
0xadf PUSH1 0x0
0xae1 SWAP1
0xae2 SLOAD
0xae3 SWAP1
0xae4 PUSH2 0x100
0xae7 EXP
0xae8 SWAP1
0xae9 DIV
0xaea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaff AND
0xb00 DUP4
0xb01 PUSH1 0x40
0xb03 MLOAD
0xb04 DUP4
0xb05 PUSH4 0xffffffff
0xb0a AND
0xb0b PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xb29 MUL
0xb2a DUP2
0xb2b MSTORE
0xb2c PUSH1 0x4
0xb2e ADD
0xb2f DUP1
0xb30 DUP4
0xb31 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb46 AND
0xb47 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb5c AND
0xb5d DUP2
0xb5e MSTORE
0xb5f PUSH1 0x20
0xb61 ADD
0xb62 DUP3
0xb63 DUP2
0xb64 MSTORE
0xb65 PUSH1 0x20
0xb67 ADD
0xb68 SWAP3
0xb69 POP
0xb6a POP
0xb6b POP
0xb6c PUSH1 0x20
0xb6e PUSH1 0x40
0xb70 MLOAD
0xb71 DUP1
0xb72 DUP4
0xb73 SUB
0xb74 DUP2
0xb75 PUSH1 0x0
0xb77 DUP8
0xb78 DUP1
0xb79 EXTCODESIZE
0xb7a ISZERO
0xb7b DUP1
0xb7c ISZERO
0xb7d PUSH2 0xb85
0xb80 JUMPI
---
0xaad: JUMPDEST 
0xaaf: V622 = ADD V615 V616
0xab3: V623 = M[V615]
0xab5: V624 = 0x20
0xab7: V625 = ADD 0x20 V615
0xac2: V626 = 0xffffffffffffffffffffffffffffffffffffffff
0xad7: V627 = AND 0xffffffffffffffffffffffffffffffffffffffff V224
0xad8: V628 = 0xa9059cbb
0xadd: V629 = 0x1
0xadf: V630 = 0x0
0xae2: V631 = S[0x1]
0xae4: V632 = 0x100
0xae7: V633 = EXP 0x100 0x0
0xae9: V634 = DIV V631 0x1
0xaea: V635 = 0xffffffffffffffffffffffffffffffffffffffff
0xaff: V636 = AND 0xffffffffffffffffffffffffffffffffffffffff V634
0xb01: V637 = 0x40
0xb03: V638 = M[0x40]
0xb05: V639 = 0xffffffff
0xb0a: V640 = AND 0xffffffff 0xa9059cbb
0xb0b: V641 = 0x100000000000000000000000000000000000000000000000000000000
0xb29: V642 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0xb2b: M[V638] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xb2c: V643 = 0x4
0xb2e: V644 = ADD 0x4 V638
0xb31: V645 = 0xffffffffffffffffffffffffffffffffffffffff
0xb46: V646 = AND 0xffffffffffffffffffffffffffffffffffffffff V636
0xb47: V647 = 0xffffffffffffffffffffffffffffffffffffffff
0xb5c: V648 = AND 0xffffffffffffffffffffffffffffffffffffffff V646
0xb5e: M[V644] = V648
0xb5f: V649 = 0x20
0xb61: V650 = ADD 0x20 V644
0xb64: M[V650] = V623
0xb65: V651 = 0x20
0xb67: V652 = ADD 0x20 V650
0xb6c: V653 = 0x20
0xb6e: V654 = 0x40
0xb70: V655 = M[0x40]
0xb73: V656 = SUB V652 V655
0xb75: V657 = 0x0
0xb79: V658 = EXTCODESIZE V627
0xb7a: V659 = ISZERO V658
0xb7c: V660 = ISZERO V659
0xb7d: V661 = 0xb85
0xb80: JUMPI 0xb85 V660
---
Entry stack: [V11, 0x38c, V224, 0x0, 0x0, V615, V616]
Stack pops: 5
Stack additions: [S4, S3, V623, V627, 0xa9059cbb, V652, 0x20, V655, V656, V655, 0x0, V627, V659]
Exit stack: [V11, 0x38c, V224, 0x0, V623, V627, 0xa9059cbb, V652, 0x20, V655, V656, V655, 0x0, V627, V659]

================================

Block 0xb81
[0xb81:0xb84]
---
Predecessors: [0xaad]
Successors: []
---
0xb81 PUSH1 0x0
0xb83 DUP1
0xb84 REVERT
---
0xb81: V662 = 0x0
0xb84: REVERT 0x0 0x0
---
Entry stack: [V11, 0x38c, V224, 0x0, V623, V627, 0xa9059cbb, V652, 0x20, V655, V656, V655, 0x0, V627, V659]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x38c, V224, 0x0, V623, V627, 0xa9059cbb, V652, 0x20, V655, V656, V655, 0x0, V627, V659]

================================

Block 0xb85
[0xb85:0xb8f]
---
Predecessors: [0xaad]
Successors: [0xb90, 0xb99]
---
0xb85 JUMPDEST
0xb86 POP
0xb87 GAS
0xb88 CALL
0xb89 ISZERO
0xb8a DUP1
0xb8b ISZERO
0xb8c PUSH2 0xb99
0xb8f JUMPI
---
0xb85: JUMPDEST 
0xb87: V663 = GAS
0xb88: V664 = CALL V663 V627 0x0 V655 V656 V655 0x20
0xb89: V665 = ISZERO V664
0xb8b: V666 = ISZERO V665
0xb8c: V667 = 0xb99
0xb8f: JUMPI 0xb99 V666
---
Entry stack: [V11, 0x38c, V224, 0x0, V623, V627, 0xa9059cbb, V652, 0x20, V655, V656, V655, 0x0, V627, V659]
Stack pops: 7
Stack additions: [V665]
Exit stack: [V11, 0x38c, V224, 0x0, V623, V627, 0xa9059cbb, V652, V665]

================================

Block 0xb90
[0xb90:0xb98]
---
Predecessors: [0xb85]
Successors: []
---
0xb90 RETURNDATASIZE
0xb91 PUSH1 0x0
0xb93 DUP1
0xb94 RETURNDATACOPY
0xb95 RETURNDATASIZE
0xb96 PUSH1 0x0
0xb98 REVERT
---
0xb90: V668 = RETURNDATASIZE
0xb91: V669 = 0x0
0xb94: RETURNDATACOPY 0x0 0x0 V668
0xb95: V670 = RETURNDATASIZE
0xb96: V671 = 0x0
0xb98: REVERT 0x0 V670
---
Entry stack: [V11, 0x38c, V224, 0x0, V623, V627, 0xa9059cbb, V652, V665]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x38c, V224, 0x0, V623, V627, 0xa9059cbb, V652, V665]

================================

Block 0xb99
[0xb99:0xbaa]
---
Predecessors: [0xb85]
Successors: [0xbab, 0xbaf]
---
0xb99 JUMPDEST
0xb9a POP
0xb9b POP
0xb9c POP
0xb9d POP
0xb9e PUSH1 0x40
0xba0 MLOAD
0xba1 RETURNDATASIZE
0xba2 PUSH1 0x20
0xba4 DUP2
0xba5 LT
0xba6 ISZERO
0xba7 PUSH2 0xbaf
0xbaa JUMPI
---
0xb99: JUMPDEST 
0xb9e: V672 = 0x40
0xba0: V673 = M[0x40]
0xba1: V674 = RETURNDATASIZE
0xba2: V675 = 0x20
0xba5: V676 = LT V674 0x20
0xba6: V677 = ISZERO V676
0xba7: V678 = 0xbaf
0xbaa: JUMPI 0xbaf V677
---
Entry stack: [V11, 0x38c, V224, 0x0, V623, V627, 0xa9059cbb, V652, V665]
Stack pops: 4
Stack additions: [V673, V674]
Exit stack: [V11, 0x38c, V224, 0x0, V623, V673, V674]

================================

Block 0xbab
[0xbab:0xbae]
---
Predecessors: [0xb99]
Successors: []
---
0xbab PUSH1 0x0
0xbad DUP1
0xbae REVERT
---
0xbab: V679 = 0x0
0xbae: REVERT 0x0 0x0
---
Entry stack: [V11, 0x38c, V224, 0x0, V623, V673, V674]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x38c, V224, 0x0, V623, V673, V674]

================================

Block 0xbaf
[0xbaf:0xbca]
---
Predecessors: [0xb99]
Successors: [0x38c]
---
0xbaf JUMPDEST
0xbb0 DUP2
0xbb1 ADD
0xbb2 SWAP1
0xbb3 DUP1
0xbb4 DUP1
0xbb5 MLOAD
0xbb6 SWAP1
0xbb7 PUSH1 0x20
0xbb9 ADD
0xbba SWAP1
0xbbb SWAP3
0xbbc SWAP2
0xbbd SWAP1
0xbbe POP
0xbbf POP
0xbc0 POP
0xbc1 POP
0xbc2 PUSH1 0x1
0xbc4 SWAP2
0xbc5 POP
0xbc6 POP
0xbc7 SWAP2
0xbc8 SWAP1
0xbc9 POP
0xbca JUMP
---
0xbaf: JUMPDEST 
0xbb1: V680 = ADD V673 V674
0xbb5: V681 = M[V673]
0xbb7: V682 = 0x20
0xbb9: V683 = ADD 0x20 V673
0xbc2: V684 = 0x1
0xbca: JUMP 0x38c
---
Entry stack: [V11, 0x38c, V224, 0x0, V623, V673, V674]
Stack pops: 6
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0xbcb
[0xbcb:0xc02]
---
Predecessors: [0x804]
Successors: [0xc03, 0xc07]
---
0xbcb JUMPDEST
0xbcc PUSH1 0x0
0xbce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbe3 AND
0xbe4 DUP2
0xbe5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbfa AND
0xbfb EQ
0xbfc ISZERO
0xbfd ISZERO
0xbfe ISZERO
0xbff PUSH2 0xc07
0xc02 JUMPI
---
0xbcb: JUMPDEST 
0xbcc: V685 = 0x0
0xbce: V686 = 0xffffffffffffffffffffffffffffffffffffffff
0xbe3: V687 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0xbe5: V688 = 0xffffffffffffffffffffffffffffffffffffffff
0xbfa: V689 = AND 0xffffffffffffffffffffffffffffffffffffffff V180
0xbfb: V690 = EQ V689 0x0
0xbfc: V691 = ISZERO V690
0xbfd: V692 = ISZERO V691
0xbfe: V693 = ISZERO V692
0xbff: V694 = 0xc07
0xc02: JUMPI 0xc07 V693
---
Entry stack: [V11, 0x2e4, V180, 0x80d, V180]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x2e4, V180, 0x80d, V180]

================================

Block 0xc03
[0xc03:0xc06]
---
Predecessors: [0xbcb]
Successors: []
---
0xc03 PUSH1 0x0
0xc05 DUP1
0xc06 REVERT
---
0xc03: V695 = 0x0
0xc06: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2e4, V180, 0x80d, V180]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2e4, V180, 0x80d, V180]

================================

Block 0xc07
[0xc07:0xcc4]
---
Predecessors: [0xbcb]
Successors: [0x80d]
---
0xc07 JUMPDEST
0xc08 DUP1
0xc09 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc1e AND
0xc1f PUSH1 0x0
0xc21 DUP1
0xc22 SWAP1
0xc23 SLOAD
0xc24 SWAP1
0xc25 PUSH2 0x100
0xc28 EXP
0xc29 SWAP1
0xc2a DIV
0xc2b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc40 AND
0xc41 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc56 AND
0xc57 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xc78 PUSH1 0x40
0xc7a MLOAD
0xc7b PUSH1 0x40
0xc7d MLOAD
0xc7e DUP1
0xc7f SWAP2
0xc80 SUB
0xc81 SWAP1
0xc82 LOG3
0xc83 DUP1
0xc84 PUSH1 0x0
0xc86 DUP1
0xc87 PUSH2 0x100
0xc8a EXP
0xc8b DUP2
0xc8c SLOAD
0xc8d DUP2
0xc8e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xca3 MUL
0xca4 NOT
0xca5 AND
0xca6 SWAP1
0xca7 DUP4
0xca8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcbd AND
0xcbe MUL
0xcbf OR
0xcc0 SWAP1
0xcc1 SSTORE
0xcc2 POP
0xcc3 POP
0xcc4 JUMP
---
0xc07: JUMPDEST 
0xc09: V696 = 0xffffffffffffffffffffffffffffffffffffffff
0xc1e: V697 = AND 0xffffffffffffffffffffffffffffffffffffffff V180
0xc1f: V698 = 0x0
0xc23: V699 = S[0x0]
0xc25: V700 = 0x100
0xc28: V701 = EXP 0x100 0x0
0xc2a: V702 = DIV V699 0x1
0xc2b: V703 = 0xffffffffffffffffffffffffffffffffffffffff
0xc40: V704 = AND 0xffffffffffffffffffffffffffffffffffffffff V702
0xc41: V705 = 0xffffffffffffffffffffffffffffffffffffffff
0xc56: V706 = AND 0xffffffffffffffffffffffffffffffffffffffff V704
0xc57: V707 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xc78: V708 = 0x40
0xc7a: V709 = M[0x40]
0xc7b: V710 = 0x40
0xc7d: V711 = M[0x40]
0xc80: V712 = SUB V709 V711
0xc82: LOG V711 V712 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V706 V697
0xc84: V713 = 0x0
0xc87: V714 = 0x100
0xc8a: V715 = EXP 0x100 0x0
0xc8c: V716 = S[0x0]
0xc8e: V717 = 0xffffffffffffffffffffffffffffffffffffffff
0xca3: V718 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xca4: V719 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xca5: V720 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V716
0xca8: V721 = 0xffffffffffffffffffffffffffffffffffffffff
0xcbd: V722 = AND 0xffffffffffffffffffffffffffffffffffffffff V180
0xcbe: V723 = MUL V722 0x1
0xcbf: V724 = OR V723 V720
0xcc1: S[0x0] = V724
0xcc4: JUMP 0x80d
---
Entry stack: [V11, 0x2e4, V180, 0x80d, V180]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x2e4, V180]

================================

Block 0xcc5
[0xcc5:0xcf0]
---
Predecessors: []
Successors: []
---
0xcc5 STOP
0xcc6 LOG1
0xcc7 PUSH6 0x627a7a723058
0xcce SHA3
0xccf PUSH24 0x4f19e0d8d19d193264e83b7d4b57445482c7cd38e8844d64
0xce8 DUP3
0xce9 MISSING 0xdb
0xcea MISSING 0x21
0xceb MISSING 0x2b
0xcec CODECOPY
0xced MISSING 0x2e
0xcee PUSH1 0x0
0xcf0 MISSING 0x29
---
0xcc5: STOP 
0xcc6: LOG S0 S1 S2
0xcc7: V725 = 0x627a7a723058
0xcce: V726 = SHA3 0x627a7a723058 S3
0xccf: V727 = 0x4f19e0d8d19d193264e83b7d4b57445482c7cd38e8844d64
0xce9: MISSING 0xdb
0xcea: MISSING 0x21
0xceb: MISSING 0x2b
0xcec: CODECOPY S0 S1 S2
0xced: MISSING 0x2e
0xcee: V728 = 0x0
0xcf0: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S4, 0x4f19e0d8d19d193264e83b7d4b57445482c7cd38e8844d64, V726, S4, 0x0]
Exit stack: []

================================

Function 0:
Public function signature: 0x715018a6
Entry block: 0x148
Exit block: 0x15d
Body: 0x148, 0x150, 0x154, 0x15d, 0x3a6, 0x3fe, 0x402

Function 1:
Public function signature: 0x7362377b
Entry block: 0x15f
Exit block: 0x174
Body: 0x15f, 0x167, 0x16b, 0x174, 0x4a9, 0x504, 0x508, 0x581, 0x58a

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0x18e
Exit block: 0x1a3
Body: 0x18e, 0x196, 0x19a, 0x1a3, 0x593

Function 3:
Public function signature: 0xe6e97ead
Entry block: 0x1e5
Exit block: 0x779
Body: 0x1e5, 0x1ed, 0x1f1, 0x289, 0x5b9, 0x617, 0x61b, 0x629, 0x62a, 0x633, 0x637, 0x63c, 0x646, 0x652, 0x653, 0x66f, 0x670, 0x74f, 0x753, 0x75e, 0x767, 0x779, 0x77d, 0x79a

Function 4:
Public function signature: 0xf2fde38b
Entry block: 0x2a3
Exit block: 0x2e4
Body: 0x2a3, 0x2ab, 0x2af, 0x2e4, 0x7a8, 0x800, 0x804, 0x80d, 0xbcb, 0xc03, 0xc07

Function 5:
Public function signature: 0xf3e414f8
Entry block: 0x2e6
Exit block: 0x331
Body: 0x2e6, 0x2ee, 0x2f2, 0x331, 0x810, 0x86a, 0x86e, 0x963, 0x967, 0x972, 0x97b

Function 6:
Public function signature: 0xf4f3b200
Entry block: 0x34b
Exit block: 0x38c
Body: 0x34b, 0x353, 0x357, 0x38c, 0x989, 0x9e4, 0x9e8, 0xa7f, 0xa83, 0xa8e, 0xa97, 0xaa9, 0xaad, 0xb81, 0xb85, 0xb90, 0xb99, 0xbab, 0xbaf

Function 7:
Public fallback function
Entry block: 0x83
Exit block: 0xe2
Body: 0x83, 0xe2, 0xeb

