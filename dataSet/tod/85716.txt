Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xe2]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xe2
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xe2
0xc: JUMPI 0xe2 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0xe7]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x11ce0267
0x21 DUP2
0x22 EQ
0x23 PUSH2 0xe7
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x11ce0267
0x22: V15 = EQ V13 0x11ce0267
0x23: V16 = 0xe7
0x26: JUMPI 0xe7 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x116]
---
0x27 DUP1
0x28 PUSH4 0x2020e9ea
0x2d EQ
0x2e PUSH2 0x116
0x31 JUMPI
---
0x28: V17 = 0x2020e9ea
0x2d: V18 = EQ 0x2020e9ea V13
0x2e: V19 = 0x116
0x31: JUMPI 0x116 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x12d]
---
0x32 DUP1
0x33 PUSH4 0x2aed7f3f
0x38 EQ
0x39 PUSH2 0x12d
0x3c JUMPI
---
0x33: V20 = 0x2aed7f3f
0x38: V21 = EQ 0x2aed7f3f V13
0x39: V22 = 0x12d
0x3c: JUMPI 0x12d V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x14c]
---
0x3d DUP1
0x3e PUSH4 0x3a01e53a
0x43 EQ
0x44 PUSH2 0x14c
0x47 JUMPI
---
0x3e: V23 = 0x3a01e53a
0x43: V24 = EQ 0x3a01e53a V13
0x44: V25 = 0x14c
0x47: JUMPI 0x14c V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x1bb]
---
0x48 DUP1
0x49 PUSH4 0x3f4ba83a
0x4e EQ
0x4f PUSH2 0x1bb
0x52 JUMPI
---
0x49: V26 = 0x3f4ba83a
0x4e: V27 = EQ 0x3f4ba83a V13
0x4f: V28 = 0x1bb
0x52: JUMPI 0x1bb V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x1ce]
---
0x53 DUP1
0x54 PUSH4 0x5c975abb
0x59 EQ
0x5a PUSH2 0x1ce
0x5d JUMPI
---
0x54: V29 = 0x5c975abb
0x59: V30 = EQ 0x5c975abb V13
0x5a: V31 = 0x1ce
0x5d: JUMPI 0x1ce V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x1f5]
---
0x5e DUP1
0x5f PUSH4 0x5fd8c710
0x64 EQ
0x65 PUSH2 0x1f5
0x68 JUMPI
---
0x5f: V32 = 0x5fd8c710
0x64: V33 = EQ 0x5fd8c710 V13
0x65: V34 = 0x1f5
0x68: JUMPI 0x1f5 V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x208]
---
0x69 DUP1
0x6a PUSH4 0x69d03738
0x6f EQ
0x70 PUSH2 0x208
0x73 JUMPI
---
0x6a: V35 = 0x69d03738
0x6f: V36 = EQ 0x69d03738 V13
0x70: V37 = 0x208
0x73: JUMPI 0x208 V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x227]
---
0x74 DUP1
0x75 PUSH4 0x83197ef0
0x7a EQ
0x7b PUSH2 0x227
0x7e JUMPI
---
0x75: V38 = 0x83197ef0
0x7a: V39 = EQ 0x83197ef0 V13
0x7b: V40 = 0x227
0x7e: JUMPI 0x227 V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x89]
---
Predecessors: [0x74]
Successors: [0x8a, 0x23a]
---
0x7f DUP1
0x80 PUSH4 0x8456cb59
0x85 EQ
0x86 PUSH2 0x23a
0x89 JUMPI
---
0x80: V41 = 0x8456cb59
0x85: V42 = EQ 0x8456cb59 V13
0x86: V43 = 0x23a
0x89: JUMPI 0x23a V42
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x8a
[0x8a:0x94]
---
Predecessors: [0x7f]
Successors: [0x95, 0x24d]
---
0x8a DUP1
0x8b PUSH4 0x8da5cb5b
0x90 EQ
0x91 PUSH2 0x24d
0x94 JUMPI
---
0x8b: V44 = 0x8da5cb5b
0x90: V45 = EQ 0x8da5cb5b V13
0x91: V46 = 0x24d
0x94: JUMPI 0x24d V45
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x95
[0x95:0x9f]
---
Predecessors: [0x8a]
Successors: [0xa0, 0x260]
---
0x95 DUP1
0x96 PUSH4 0x91e50314
0x9b EQ
0x9c PUSH2 0x260
0x9f JUMPI
---
0x96: V47 = 0x91e50314
0x9b: V48 = EQ 0x91e50314 V13
0x9c: V49 = 0x260
0x9f: JUMPI 0x260 V48
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xa0
[0xa0:0xaa]
---
Predecessors: [0x95]
Successors: [0xab, 0x273]
---
0xa0 DUP1
0xa1 PUSH4 0xa22d5a51
0xa6 EQ
0xa7 PUSH2 0x273
0xaa JUMPI
---
0xa1: V50 = 0xa22d5a51
0xa6: V51 = EQ 0xa22d5a51 V13
0xa7: V52 = 0x273
0xaa: JUMPI 0x273 V51
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xab
[0xab:0xb5]
---
Predecessors: [0xa0]
Successors: [0xb6, 0x28d]
---
0xab DUP1
0xac PUSH4 0xa7cebd4d
0xb1 EQ
0xb2 PUSH2 0x28d
0xb5 JUMPI
---
0xac: V53 = 0xa7cebd4d
0xb1: V54 = EQ 0xa7cebd4d V13
0xb2: V55 = 0x28d
0xb5: JUMPI 0x28d V54
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xb6
[0xb6:0xc0]
---
Predecessors: [0xab]
Successors: [0xc1, 0x2d5]
---
0xb6 DUP1
0xb7 PUSH4 0xb5794222
0xbc EQ
0xbd PUSH2 0x2d5
0xc0 JUMPI
---
0xb7: V56 = 0xb5794222
0xbc: V57 = EQ 0xb5794222 V13
0xbd: V58 = 0x2d5
0xc0: JUMPI 0x2d5 V57
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xc1
[0xc1:0xcb]
---
Predecessors: [0xb6]
Successors: [0xcc, 0x2e8]
---
0xc1 DUP1
0xc2 PUSH4 0xba6763ce
0xc7 EQ
0xc8 PUSH2 0x2e8
0xcb JUMPI
---
0xc2: V59 = 0xba6763ce
0xc7: V60 = EQ 0xba6763ce V13
0xc8: V61 = 0x2e8
0xcb: JUMPI 0x2e8 V60
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xcc
[0xcc:0xd6]
---
Predecessors: [0xc1]
Successors: [0xd7, 0x2fb]
---
0xcc DUP1
0xcd PUSH4 0xdd1b7a0f
0xd2 EQ
0xd3 PUSH2 0x2fb
0xd6 JUMPI
---
0xcd: V62 = 0xdd1b7a0f
0xd2: V63 = EQ 0xdd1b7a0f V13
0xd3: V64 = 0x2fb
0xd6: JUMPI 0x2fb V63
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xd7
[0xd7:0xe1]
---
Predecessors: [0xcc]
Successors: [0xe2, 0x30e]
---
0xd7 DUP1
0xd8 PUSH4 0xf2fde38b
0xdd EQ
0xde PUSH2 0x30e
0xe1 JUMPI
---
0xd8: V65 = 0xf2fde38b
0xdd: V66 = EQ 0xf2fde38b V13
0xde: V67 = 0x30e
0xe1: JUMPI 0x30e V66
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xe2
[0xe2:0xe6]
---
Predecessors: [0x0, 0xd7]
Successors: []
---
0xe2 JUMPDEST
0xe3 PUSH1 0x0
0xe5 DUP1
0xe6 REVERT
---
0xe2: JUMPDEST 
0xe3: V68 = 0x0
0xe6: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xe7
[0xe7:0xed]
---
Predecessors: [0xd]
Successors: [0xee, 0xf2]
---
0xe7 JUMPDEST
0xe8 CALLVALUE
0xe9 ISZERO
0xea PUSH2 0xf2
0xed JUMPI
---
0xe7: JUMPDEST 
0xe8: V69 = CALLVALUE
0xe9: V70 = ISZERO V69
0xea: V71 = 0xf2
0xed: JUMPI 0xf2 V70
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xee
[0xee:0xf1]
---
Predecessors: [0xe7]
Successors: []
---
0xee PUSH1 0x0
0xf0 DUP1
0xf1 REVERT
---
0xee: V72 = 0x0
0xf1: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xf2
[0xf2:0xf9]
---
Predecessors: [0xe7]
Successors: [0x32d]
---
0xf2 JUMPDEST
0xf3 PUSH2 0xfa
0xf6 PUSH2 0x32d
0xf9 JUMP
---
0xf2: JUMPDEST 
0xf3: V73 = 0xfa
0xf6: V74 = 0x32d
0xf9: JUMP 0x32d
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xfa]
Exit stack: [V13, 0xfa]

================================

Block 0xfa
[0xfa:0x115]
---
Predecessors: [0x32d, 0xb13, 0xe28]
Successors: []
---
0xfa JUMPDEST
0xfb PUSH1 0x40
0xfd MLOAD
0xfe PUSH1 0x1
0x100 PUSH1 0xa0
0x102 PUSH1 0x2
0x104 EXP
0x105 SUB
0x106 SWAP1
0x107 SWAP2
0x108 AND
0x109 DUP2
0x10a MSTORE
0x10b PUSH1 0x20
0x10d ADD
0x10e PUSH1 0x40
0x110 MLOAD
0x111 DUP1
0x112 SWAP2
0x113 SUB
0x114 SWAP1
0x115 RETURN
---
0xfa: JUMPDEST 
0xfb: V75 = 0x40
0xfd: V76 = M[0x40]
0xfe: V77 = 0x1
0x100: V78 = 0xa0
0x102: V79 = 0x2
0x104: V80 = EXP 0x2 0xa0
0x105: V81 = SUB 0x10000000000000000000000000000000000000000 0x1
0x108: V82 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x10a: M[V76] = V82
0x10b: V83 = 0x20
0x10d: V84 = ADD 0x20 V76
0x10e: V85 = 0x40
0x110: V86 = M[0x40]
0x113: V87 = SUB V84 V86
0x115: RETURN V86 V87
---
Entry stack: [V13, 0xfa, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xfa]

================================

Block 0x116
[0x116:0x12a]
---
Predecessors: [0x27]
Successors: [0x33c]
---
0x116 JUMPDEST
0x117 PUSH2 0x12b
0x11a PUSH2 0xffff
0x11d PUSH1 0x4
0x11f CALLDATALOAD
0x120 DUP2
0x121 AND
0x122 SWAP1
0x123 PUSH1 0x24
0x125 CALLDATALOAD
0x126 AND
0x127 PUSH2 0x33c
0x12a JUMP
---
0x116: JUMPDEST 
0x117: V88 = 0x12b
0x11a: V89 = 0xffff
0x11d: V90 = 0x4
0x11f: V91 = CALLDATALOAD 0x4
0x121: V92 = AND 0xffff V91
0x123: V93 = 0x24
0x125: V94 = CALLDATALOAD 0x24
0x126: V95 = AND V94 0xffff
0x127: V96 = 0x33c
0x12a: JUMP 0x33c
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x12b, V92, V95]
Exit stack: [V13, 0x12b, V92, V95]

================================

Block 0x12b
[0x12b:0x12c]
---
Predecessors: [0x5c9, 0x6c5, 0x83a, 0x9a4, 0xac1, 0xbbd, 0xc8d, 0xe67]
Successors: []
---
0x12b JUMPDEST
0x12c STOP
---
0x12b: JUMPDEST 
0x12c: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x12d
[0x12d:0x133]
---
Predecessors: [0x32]
Successors: [0x134, 0x138]
---
0x12d JUMPDEST
0x12e CALLVALUE
0x12f ISZERO
0x130 PUSH2 0x138
0x133 JUMPI
---
0x12d: JUMPDEST 
0x12e: V97 = CALLVALUE
0x12f: V98 = ISZERO V97
0x130: V99 = 0x138
0x133: JUMPI 0x138 V98
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x134
[0x134:0x137]
---
Predecessors: [0x12d]
Successors: []
---
0x134 PUSH1 0x0
0x136 DUP1
0x137 REVERT
---
0x134: V100 = 0x0
0x137: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x138
[0x138:0x14b]
---
Predecessors: [0x12d]
Successors: [0x62d]
---
0x138 JUMPDEST
0x139 PUSH2 0x12b
0x13c PUSH1 0x1
0x13e PUSH1 0xa0
0x140 PUSH1 0x2
0x142 EXP
0x143 SUB
0x144 PUSH1 0x4
0x146 CALLDATALOAD
0x147 AND
0x148 PUSH2 0x62d
0x14b JUMP
---
0x138: JUMPDEST 
0x139: V101 = 0x12b
0x13c: V102 = 0x1
0x13e: V103 = 0xa0
0x140: V104 = 0x2
0x142: V105 = EXP 0x2 0xa0
0x143: V106 = SUB 0x10000000000000000000000000000000000000000 0x1
0x144: V107 = 0x4
0x146: V108 = CALLDATALOAD 0x4
0x147: V109 = AND V108 0xffffffffffffffffffffffffffffffffffffffff
0x148: V110 = 0x62d
0x14b: JUMP 0x62d
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x12b, V109]
Exit stack: [V13, 0x12b, V109]

================================

Block 0x14c
[0x14c:0x152]
---
Predecessors: [0x3d]
Successors: [0x153, 0x157]
---
0x14c JUMPDEST
0x14d CALLVALUE
0x14e ISZERO
0x14f PUSH2 0x157
0x152 JUMPI
---
0x14c: JUMPDEST 
0x14d: V111 = CALLVALUE
0x14e: V112 = ISZERO V111
0x14f: V113 = 0x157
0x152: JUMPI 0x157 V112
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x153
[0x153:0x156]
---
Predecessors: [0x14c]
Successors: []
---
0x153 PUSH1 0x0
0x155 DUP1
0x156 REVERT
---
0x153: V114 = 0x0
0x156: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x157
[0x157:0x165]
---
Predecessors: [0x14c]
Successors: [0x6cc]
---
0x157 JUMPDEST
0x158 PUSH2 0x166
0x15b PUSH2 0xffff
0x15e PUSH1 0x4
0x160 CALLDATALOAD
0x161 AND
0x162 PUSH2 0x6cc
0x165 JUMP
---
0x157: JUMPDEST 
0x158: V115 = 0x166
0x15b: V116 = 0xffff
0x15e: V117 = 0x4
0x160: V118 = CALLDATALOAD 0x4
0x161: V119 = AND V118 0xffff
0x162: V120 = 0x6cc
0x165: JUMP 0x6cc
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x166, V119]
Exit stack: [V13, 0x166, V119]

================================

Block 0x166
[0x166:0x1ba]
---
Predecessors: [0x72f]
Successors: []
---
0x166 JUMPDEST
0x167 PUSH1 0x40
0x169 MLOAD
0x16a SWAP5
0x16b ISZERO
0x16c ISZERO
0x16d DUP6
0x16e MSTORE
0x16f PUSH2 0xffff
0x172 SWAP1
0x173 SWAP4
0x174 AND
0x175 PUSH1 0x20
0x177 DUP6
0x178 ADD
0x179 MSTORE
0x17a PUSH16 0xffffffffffffffffffffffffffffffff
0x18b SWAP1
0x18c SWAP2
0x18d AND
0x18e PUSH1 0x40
0x190 DUP1
0x191 DUP6
0x192 ADD
0x193 SWAP2
0x194 SWAP1
0x195 SWAP2
0x196 MSTORE
0x197 PUSH8 0xffffffffffffffff
0x1a0 SWAP2
0x1a1 DUP3
0x1a2 AND
0x1a3 PUSH1 0x60
0x1a5 DUP6
0x1a6 ADD
0x1a7 MSTORE
0x1a8 SWAP2
0x1a9 AND
0x1aa PUSH1 0x80
0x1ac DUP4
0x1ad ADD
0x1ae MSTORE
0x1af PUSH1 0xa0
0x1b1 SWAP1
0x1b2 SWAP2
0x1b3 ADD
0x1b4 SWAP1
0x1b5 MLOAD
0x1b6 DUP1
0x1b7 SWAP2
0x1b8 SUB
0x1b9 SWAP1
0x1ba RETURN
---
0x166: JUMPDEST 
0x167: V121 = 0x40
0x169: V122 = M[0x40]
0x16b: V123 = ISZERO V680
0x16c: V124 = ISZERO V123
0x16e: M[V122] = V124
0x16f: V125 = 0xffff
0x174: V126 = AND V683 0xffff
0x175: V127 = 0x20
0x178: V128 = ADD V122 0x20
0x179: M[V128] = V126
0x17a: V129 = 0xffffffffffffffffffffffffffffffff
0x18d: V130 = AND V686 0xffffffffffffffffffffffffffffffff
0x18e: V131 = 0x40
0x192: V132 = ADD V122 0x40
0x196: M[V132] = V130
0x197: V133 = 0xffffffffffffffff
0x1a2: V134 = AND 0xffffffffffffffff V689
0x1a3: V135 = 0x60
0x1a6: V136 = ADD V122 0x60
0x1a7: M[V136] = V134
0x1a9: V137 = AND V692 0xffffffffffffffff
0x1aa: V138 = 0x80
0x1ad: V139 = ADD V122 0x80
0x1ae: M[V139] = V137
0x1af: V140 = 0xa0
0x1b3: V141 = ADD V122 0xa0
0x1b5: V142 = M[0x40]
0x1b8: V143 = SUB V141 V142
0x1ba: RETURN V142 V143
---
Entry stack: [V13, V680, V683, V686, V689, V692]
Stack pops: 5
Stack additions: []
Exit stack: [V13]

================================

Block 0x1bb
[0x1bb:0x1c1]
---
Predecessors: [0x48]
Successors: [0x1c2, 0x1c6]
---
0x1bb JUMPDEST
0x1bc CALLVALUE
0x1bd ISZERO
0x1be PUSH2 0x1c6
0x1c1 JUMPI
---
0x1bb: JUMPDEST 
0x1bc: V144 = CALLVALUE
0x1bd: V145 = ISZERO V144
0x1be: V146 = 0x1c6
0x1c1: JUMPI 0x1c6 V145
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1c2
[0x1c2:0x1c5]
---
Predecessors: [0x1bb]
Successors: []
---
0x1c2 PUSH1 0x0
0x1c4 DUP1
0x1c5 REVERT
---
0x1c2: V147 = 0x0
0x1c5: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1c6
[0x1c6:0x1cd]
---
Predecessors: [0x1bb]
Successors: [0x762]
---
0x1c6 JUMPDEST
0x1c7 PUSH2 0x12b
0x1ca PUSH2 0x762
0x1cd JUMP
---
0x1c6: JUMPDEST 
0x1c7: V148 = 0x12b
0x1ca: V149 = 0x762
0x1cd: JUMP 0x762
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x12b]
Exit stack: [V13, 0x12b]

================================

Block 0x1ce
[0x1ce:0x1d4]
---
Predecessors: [0x53]
Successors: [0x1d5, 0x1d9]
---
0x1ce JUMPDEST
0x1cf CALLVALUE
0x1d0 ISZERO
0x1d1 PUSH2 0x1d9
0x1d4 JUMPI
---
0x1ce: JUMPDEST 
0x1cf: V150 = CALLVALUE
0x1d0: V151 = ISZERO V150
0x1d1: V152 = 0x1d9
0x1d4: JUMPI 0x1d9 V151
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1d5
[0x1d5:0x1d8]
---
Predecessors: [0x1ce]
Successors: []
---
0x1d5 PUSH1 0x0
0x1d7 DUP1
0x1d8 REVERT
---
0x1d5: V153 = 0x0
0x1d8: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1d9
[0x1d9:0x1e0]
---
Predecessors: [0x1ce]
Successors: [0x83c]
---
0x1d9 JUMPDEST
0x1da PUSH2 0x1e1
0x1dd PUSH2 0x83c
0x1e0 JUMP
---
0x1d9: JUMPDEST 
0x1da: V154 = 0x1e1
0x1dd: V155 = 0x83c
0x1e0: JUMP 0x83c
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1e1]
Exit stack: [V13, 0x1e1]

================================

Block 0x1e1
[0x1e1:0x1f4]
---
Predecessors: [0x83c, 0x890, 0xb22, 0xe18]
Successors: []
---
0x1e1 JUMPDEST
0x1e2 PUSH1 0x40
0x1e4 MLOAD
0x1e5 SWAP1
0x1e6 ISZERO
0x1e7 ISZERO
0x1e8 DUP2
0x1e9 MSTORE
0x1ea PUSH1 0x20
0x1ec ADD
0x1ed PUSH1 0x40
0x1ef MLOAD
0x1f0 DUP1
0x1f1 SWAP2
0x1f2 SUB
0x1f3 SWAP1
0x1f4 RETURN
---
0x1e1: JUMPDEST 
0x1e2: V156 = 0x40
0x1e4: V157 = M[0x40]
0x1e6: V158 = ISZERO S0
0x1e7: V159 = ISZERO V158
0x1e9: M[V157] = V159
0x1ea: V160 = 0x20
0x1ec: V161 = ADD 0x20 V157
0x1ed: V162 = 0x40
0x1ef: V163 = M[0x40]
0x1f2: V164 = SUB V161 V163
0x1f4: RETURN V163 V164
---
Entry stack: [V13, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S1]

================================

Block 0x1f5
[0x1f5:0x1fb]
---
Predecessors: [0x5e]
Successors: [0x1fc, 0x200]
---
0x1f5 JUMPDEST
0x1f6 CALLVALUE
0x1f7 ISZERO
0x1f8 PUSH2 0x200
0x1fb JUMPI
---
0x1f5: JUMPDEST 
0x1f6: V165 = CALLVALUE
0x1f7: V166 = ISZERO V165
0x1f8: V167 = 0x200
0x1fb: JUMPI 0x200 V166
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1fc
[0x1fc:0x1ff]
---
Predecessors: [0x1f5]
Successors: []
---
0x1fc PUSH1 0x0
0x1fe DUP1
0x1ff REVERT
---
0x1fc: V168 = 0x0
0x1ff: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x200
[0x200:0x207]
---
Predecessors: [0x1f5]
Successors: [0x84c]
---
0x200 JUMPDEST
0x201 PUSH2 0x1e1
0x204 PUSH2 0x84c
0x207 JUMP
---
0x200: JUMPDEST 
0x201: V169 = 0x1e1
0x204: V170 = 0x84c
0x207: JUMP 0x84c
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1e1]
Exit stack: [V13, 0x1e1]

================================

Block 0x208
[0x208:0x20e]
---
Predecessors: [0x69]
Successors: [0x20f, 0x213]
---
0x208 JUMPDEST
0x209 CALLVALUE
0x20a ISZERO
0x20b PUSH2 0x213
0x20e JUMPI
---
0x208: JUMPDEST 
0x209: V171 = CALLVALUE
0x20a: V172 = ISZERO V171
0x20b: V173 = 0x213
0x20e: JUMPI 0x213 V172
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x20f
[0x20f:0x212]
---
Predecessors: [0x208]
Successors: []
---
0x20f PUSH1 0x0
0x211 DUP1
0x212 REVERT
---
0x20f: V174 = 0x0
0x212: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x213
[0x213:0x226]
---
Predecessors: [0x208]
Successors: [0x8c8]
---
0x213 JUMPDEST
0x214 PUSH2 0x12b
0x217 PUSH1 0x1
0x219 PUSH1 0xa0
0x21b PUSH1 0x2
0x21d EXP
0x21e SUB
0x21f PUSH1 0x4
0x221 CALLDATALOAD
0x222 AND
0x223 PUSH2 0x8c8
0x226 JUMP
---
0x213: JUMPDEST 
0x214: V175 = 0x12b
0x217: V176 = 0x1
0x219: V177 = 0xa0
0x21b: V178 = 0x2
0x21d: V179 = EXP 0x2 0xa0
0x21e: V180 = SUB 0x10000000000000000000000000000000000000000 0x1
0x21f: V181 = 0x4
0x221: V182 = CALLDATALOAD 0x4
0x222: V183 = AND V182 0xffffffffffffffffffffffffffffffffffffffff
0x223: V184 = 0x8c8
0x226: JUMP 0x8c8
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x12b, V183]
Exit stack: [V13, 0x12b, V183]

================================

Block 0x227
[0x227:0x22d]
---
Predecessors: [0x74]
Successors: [0x22e, 0x232]
---
0x227 JUMPDEST
0x228 CALLVALUE
0x229 ISZERO
0x22a PUSH2 0x232
0x22d JUMPI
---
0x227: JUMPDEST 
0x228: V185 = CALLVALUE
0x229: V186 = ISZERO V185
0x22a: V187 = 0x232
0x22d: JUMPI 0x232 V186
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x22e
[0x22e:0x231]
---
Predecessors: [0x227]
Successors: []
---
0x22e PUSH1 0x0
0x230 DUP1
0x231 REVERT
---
0x22e: V188 = 0x0
0x231: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x232
[0x232:0x239]
---
Predecessors: [0x227]
Successors: [0x9d4]
---
0x232 JUMPDEST
0x233 PUSH2 0x12b
0x236 PUSH2 0x9d4
0x239 JUMP
---
0x232: JUMPDEST 
0x233: V189 = 0x12b
0x236: V190 = 0x9d4
0x239: JUMP 0x9d4
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x12b]
Exit stack: [V13, 0x12b]

================================

Block 0x23a
[0x23a:0x240]
---
Predecessors: [0x7f]
Successors: [0x241, 0x245]
---
0x23a JUMPDEST
0x23b CALLVALUE
0x23c ISZERO
0x23d PUSH2 0x245
0x240 JUMPI
---
0x23a: JUMPDEST 
0x23b: V191 = CALLVALUE
0x23c: V192 = ISZERO V191
0x23d: V193 = 0x245
0x240: JUMPI 0x245 V192
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x241
[0x241:0x244]
---
Predecessors: [0x23a]
Successors: []
---
0x241 PUSH1 0x0
0x243 DUP1
0x244 REVERT
---
0x241: V194 = 0x0
0x244: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x245
[0x245:0x24c]
---
Predecessors: [0x23a]
Successors: [0xa8f]
---
0x245 JUMPDEST
0x246 PUSH2 0x12b
0x249 PUSH2 0xa8f
0x24c JUMP
---
0x245: JUMPDEST 
0x246: V195 = 0x12b
0x249: V196 = 0xa8f
0x24c: JUMP 0xa8f
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x12b]
Exit stack: [V13, 0x12b]

================================

Block 0x24d
[0x24d:0x253]
---
Predecessors: [0x8a]
Successors: [0x254, 0x258]
---
0x24d JUMPDEST
0x24e CALLVALUE
0x24f ISZERO
0x250 PUSH2 0x258
0x253 JUMPI
---
0x24d: JUMPDEST 
0x24e: V197 = CALLVALUE
0x24f: V198 = ISZERO V197
0x250: V199 = 0x258
0x253: JUMPI 0x258 V198
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x254
[0x254:0x257]
---
Predecessors: [0x24d]
Successors: []
---
0x254 PUSH1 0x0
0x256 DUP1
0x257 REVERT
---
0x254: V200 = 0x0
0x257: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x258
[0x258:0x25f]
---
Predecessors: [0x24d]
Successors: [0xb13]
---
0x258 JUMPDEST
0x259 PUSH2 0xfa
0x25c PUSH2 0xb13
0x25f JUMP
---
0x258: JUMPDEST 
0x259: V201 = 0xfa
0x25c: V202 = 0xb13
0x25f: JUMP 0xb13
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xfa]
Exit stack: [V13, 0xfa]

================================

Block 0x260
[0x260:0x266]
---
Predecessors: [0x95]
Successors: [0x267, 0x26b]
---
0x260 JUMPDEST
0x261 CALLVALUE
0x262 ISZERO
0x263 PUSH2 0x26b
0x266 JUMPI
---
0x260: JUMPDEST 
0x261: V203 = CALLVALUE
0x262: V204 = ISZERO V203
0x263: V205 = 0x26b
0x266: JUMPI 0x26b V204
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x267
[0x267:0x26a]
---
Predecessors: [0x260]
Successors: []
---
0x267 PUSH1 0x0
0x269 DUP1
0x26a REVERT
---
0x267: V206 = 0x0
0x26a: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x26b
[0x26b:0x272]
---
Predecessors: [0x260]
Successors: [0xb22]
---
0x26b JUMPDEST
0x26c PUSH2 0x1e1
0x26f PUSH2 0xb22
0x272 JUMP
---
0x26b: JUMPDEST 
0x26c: V207 = 0x1e1
0x26f: V208 = 0xb22
0x272: JUMP 0xb22
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1e1]
Exit stack: [V13, 0x1e1]

================================

Block 0x273
[0x273:0x279]
---
Predecessors: [0xa0]
Successors: [0x27a, 0x27e]
---
0x273 JUMPDEST
0x274 CALLVALUE
0x275 ISZERO
0x276 PUSH2 0x27e
0x279 JUMPI
---
0x273: JUMPDEST 
0x274: V209 = CALLVALUE
0x275: V210 = ISZERO V209
0x276: V211 = 0x27e
0x279: JUMPI 0x27e V210
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x27a
[0x27a:0x27d]
---
Predecessors: [0x273]
Successors: []
---
0x27a PUSH1 0x0
0x27c DUP1
0x27d REVERT
---
0x27a: V212 = 0x0
0x27d: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x27e
[0x27e:0x28c]
---
Predecessors: [0x273]
Successors: [0xb32]
---
0x27e JUMPDEST
0x27f PUSH2 0x12b
0x282 PUSH2 0xffff
0x285 PUSH1 0x4
0x287 CALLDATALOAD
0x288 AND
0x289 PUSH2 0xb32
0x28c JUMP
---
0x27e: JUMPDEST 
0x27f: V213 = 0x12b
0x282: V214 = 0xffff
0x285: V215 = 0x4
0x287: V216 = CALLDATALOAD 0x4
0x288: V217 = AND V216 0xffff
0x289: V218 = 0xb32
0x28c: JUMP 0xb32
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x12b, V217]
Exit stack: [V13, 0x12b, V217]

================================

Block 0x28d
[0x28d:0x293]
---
Predecessors: [0xab]
Successors: [0x294, 0x298]
---
0x28d JUMPDEST
0x28e CALLVALUE
0x28f ISZERO
0x290 PUSH2 0x298
0x293 JUMPI
---
0x28d: JUMPDEST 
0x28e: V219 = CALLVALUE
0x28f: V220 = ISZERO V219
0x290: V221 = 0x298
0x293: JUMPI 0x298 V220
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x294
[0x294:0x297]
---
Predecessors: [0x28d]
Successors: []
---
0x294 PUSH1 0x0
0x296 DUP1
0x297 REVERT
---
0x294: V222 = 0x0
0x297: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x298
[0x298:0x2d4]
---
Predecessors: [0x28d]
Successors: [0xbc3]
---
0x298 JUMPDEST
0x299 PUSH2 0x12b
0x29c PUSH2 0xffff
0x29f PUSH1 0x4
0x2a1 CALLDATALOAD
0x2a2 DUP2
0x2a3 AND
0x2a4 SWAP1
0x2a5 PUSH1 0x24
0x2a7 CALLDATALOAD
0x2a8 AND
0x2a9 PUSH16 0xffffffffffffffffffffffffffffffff
0x2ba PUSH1 0x44
0x2bc CALLDATALOAD
0x2bd AND
0x2be PUSH8 0xffffffffffffffff
0x2c7 PUSH1 0x64
0x2c9 CALLDATALOAD
0x2ca DUP2
0x2cb AND
0x2cc SWAP1
0x2cd PUSH1 0x84
0x2cf CALLDATALOAD
0x2d0 AND
0x2d1 PUSH2 0xbc3
0x2d4 JUMP
---
0x298: JUMPDEST 
0x299: V223 = 0x12b
0x29c: V224 = 0xffff
0x29f: V225 = 0x4
0x2a1: V226 = CALLDATALOAD 0x4
0x2a3: V227 = AND 0xffff V226
0x2a5: V228 = 0x24
0x2a7: V229 = CALLDATALOAD 0x24
0x2a8: V230 = AND V229 0xffff
0x2a9: V231 = 0xffffffffffffffffffffffffffffffff
0x2ba: V232 = 0x44
0x2bc: V233 = CALLDATALOAD 0x44
0x2bd: V234 = AND V233 0xffffffffffffffffffffffffffffffff
0x2be: V235 = 0xffffffffffffffff
0x2c7: V236 = 0x64
0x2c9: V237 = CALLDATALOAD 0x64
0x2cb: V238 = AND 0xffffffffffffffff V237
0x2cd: V239 = 0x84
0x2cf: V240 = CALLDATALOAD 0x84
0x2d0: V241 = AND V240 0xffffffffffffffff
0x2d1: V242 = 0xbc3
0x2d4: JUMP 0xbc3
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x12b, V227, V230, V234, V238, V241]
Exit stack: [V13, 0x12b, V227, V230, V234, V238, V241]

================================

Block 0x2d5
[0x2d5:0x2db]
---
Predecessors: [0xb6]
Successors: [0x2dc, 0x2e0]
---
0x2d5 JUMPDEST
0x2d6 CALLVALUE
0x2d7 ISZERO
0x2d8 PUSH2 0x2e0
0x2db JUMPI
---
0x2d5: JUMPDEST 
0x2d6: V243 = CALLVALUE
0x2d7: V244 = ISZERO V243
0x2d8: V245 = 0x2e0
0x2db: JUMPI 0x2e0 V244
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2dc
[0x2dc:0x2df]
---
Predecessors: [0x2d5]
Successors: []
---
0x2dc PUSH1 0x0
0x2de DUP1
0x2df REVERT
---
0x2dc: V246 = 0x0
0x2df: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2e0
[0x2e0:0x2e7]
---
Predecessors: [0x2d5]
Successors: [0xccf]
---
0x2e0 JUMPDEST
0x2e1 PUSH2 0x12b
0x2e4 PUSH2 0xccf
0x2e7 JUMP
---
0x2e0: JUMPDEST 
0x2e1: V247 = 0x12b
0x2e4: V248 = 0xccf
0x2e7: JUMP 0xccf
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x12b]
Exit stack: [V13, 0x12b]

================================

Block 0x2e8
[0x2e8:0x2ee]
---
Predecessors: [0xc1]
Successors: [0x2ef, 0x2f3]
---
0x2e8 JUMPDEST
0x2e9 CALLVALUE
0x2ea ISZERO
0x2eb PUSH2 0x2f3
0x2ee JUMPI
---
0x2e8: JUMPDEST 
0x2e9: V249 = CALLVALUE
0x2ea: V250 = ISZERO V249
0x2eb: V251 = 0x2f3
0x2ee: JUMPI 0x2f3 V250
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2ef
[0x2ef:0x2f2]
---
Predecessors: [0x2e8]
Successors: []
---
0x2ef PUSH1 0x0
0x2f1 DUP1
0x2f2 REVERT
---
0x2ef: V252 = 0x0
0x2f2: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2f3
[0x2f3:0x2fa]
---
Predecessors: [0x2e8]
Successors: [0xd88]
---
0x2f3 JUMPDEST
0x2f4 PUSH2 0x1e1
0x2f7 PUSH2 0xd88
0x2fa JUMP
---
0x2f3: JUMPDEST 
0x2f4: V253 = 0x1e1
0x2f7: V254 = 0xd88
0x2fa: JUMP 0xd88
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1e1]
Exit stack: [V13, 0x1e1]

================================

Block 0x2fb
[0x2fb:0x301]
---
Predecessors: [0xcc]
Successors: [0x302, 0x306]
---
0x2fb JUMPDEST
0x2fc CALLVALUE
0x2fd ISZERO
0x2fe PUSH2 0x306
0x301 JUMPI
---
0x2fb: JUMPDEST 
0x2fc: V255 = CALLVALUE
0x2fd: V256 = ISZERO V255
0x2fe: V257 = 0x306
0x301: JUMPI 0x306 V256
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x302
[0x302:0x305]
---
Predecessors: [0x2fb]
Successors: []
---
0x302 PUSH1 0x0
0x304 DUP1
0x305 REVERT
---
0x302: V258 = 0x0
0x305: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x306
[0x306:0x30d]
---
Predecessors: [0x2fb]
Successors: [0xe28]
---
0x306 JUMPDEST
0x307 PUSH2 0xfa
0x30a PUSH2 0xe28
0x30d JUMP
---
0x306: JUMPDEST 
0x307: V259 = 0xfa
0x30a: V260 = 0xe28
0x30d: JUMP 0xe28
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xfa]
Exit stack: [V13, 0xfa]

================================

Block 0x30e
[0x30e:0x314]
---
Predecessors: [0xd7]
Successors: [0x315, 0x319]
---
0x30e JUMPDEST
0x30f CALLVALUE
0x310 ISZERO
0x311 PUSH2 0x319
0x314 JUMPI
---
0x30e: JUMPDEST 
0x30f: V261 = CALLVALUE
0x310: V262 = ISZERO V261
0x311: V263 = 0x319
0x314: JUMPI 0x319 V262
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x315
[0x315:0x318]
---
Predecessors: [0x30e]
Successors: []
---
0x315 PUSH1 0x0
0x317 DUP1
0x318 REVERT
---
0x315: V264 = 0x0
0x318: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x319
[0x319:0x32c]
---
Predecessors: [0x30e]
Successors: [0xe37]
---
0x319 JUMPDEST
0x31a PUSH2 0x12b
0x31d PUSH1 0x1
0x31f PUSH1 0xa0
0x321 PUSH1 0x2
0x323 EXP
0x324 SUB
0x325 PUSH1 0x4
0x327 CALLDATALOAD
0x328 AND
0x329 PUSH2 0xe37
0x32c JUMP
---
0x319: JUMPDEST 
0x31a: V265 = 0x12b
0x31d: V266 = 0x1
0x31f: V267 = 0xa0
0x321: V268 = 0x2
0x323: V269 = EXP 0x2 0xa0
0x324: V270 = SUB 0x10000000000000000000000000000000000000000 0x1
0x325: V271 = 0x4
0x327: V272 = CALLDATALOAD 0x4
0x328: V273 = AND V272 0xffffffffffffffffffffffffffffffffffffffff
0x329: V274 = 0xe37
0x32c: JUMP 0xe37
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x12b, V273]
Exit stack: [V13, 0x12b, V273]

================================

Block 0x32d
[0x32d:0x33b]
---
Predecessors: [0xf2]
Successors: [0xfa]
---
0x32d JUMPDEST
0x32e PUSH1 0x2
0x330 SLOAD
0x331 PUSH1 0x1
0x333 PUSH1 0xa0
0x335 PUSH1 0x2
0x337 EXP
0x338 SUB
0x339 AND
0x33a DUP2
0x33b JUMP
---
0x32d: JUMPDEST 
0x32e: V275 = 0x2
0x330: V276 = S[0x2]
0x331: V277 = 0x1
0x333: V278 = 0xa0
0x335: V279 = 0x2
0x337: V280 = EXP 0x2 0xa0
0x338: V281 = SUB 0x10000000000000000000000000000000000000000 0x1
0x339: V282 = AND 0xffffffffffffffffffffffffffffffffffffffff V276
0x33b: JUMP 0xfa
---
Entry stack: [V13, 0xfa]
Stack pops: 1
Stack additions: [S0, V282]
Exit stack: [V13, 0xfa, V282]

================================

Block 0x33c
[0x33c:0x357]
---
Predecessors: [0x116]
Successors: [0x358, 0x35c]
---
0x33c JUMPDEST
0x33d PUSH1 0x0
0x33f DUP1
0x340 SLOAD
0x341 DUP2
0x342 SWAP1
0x343 DUP2
0x344 SWAP1
0x345 DUP2
0x346 SWAP1
0x347 DUP2
0x348 SWAP1
0x349 PUSH1 0xa0
0x34b PUSH1 0x2
0x34d EXP
0x34e SWAP1
0x34f DIV
0x350 PUSH1 0xff
0x352 AND
0x353 ISZERO
0x354 PUSH2 0x35c
0x357 JUMPI
---
0x33c: JUMPDEST 
0x33d: V283 = 0x0
0x340: V284 = S[0x0]
0x349: V285 = 0xa0
0x34b: V286 = 0x2
0x34d: V287 = EXP 0x2 0xa0
0x34f: V288 = DIV V284 0x10000000000000000000000000000000000000000
0x350: V289 = 0xff
0x352: V290 = AND 0xff V288
0x353: V291 = ISZERO V290
0x354: V292 = 0x35c
0x357: JUMPI 0x35c V291
---
Entry stack: [V13, 0x12b, V92, V95]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V13, 0x12b, V92, V95, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x358
[0x358:0x35b]
---
Predecessors: [0x33c]
Successors: []
---
0x358 PUSH1 0x0
0x35a DUP1
0x35b REVERT
---
0x358: V293 = 0x0
0x35b: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b, V92, V95, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, V92, V95, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x35c
[0x35c:0x3a2]
---
Predecessors: [0x33c]
Successors: [0x3a3, 0x3a7]
---
0x35c JUMPDEST
0x35d PUSH1 0x3
0x35f SLOAD
0x360 PUSH1 0x1
0x362 PUSH1 0xa0
0x364 PUSH1 0x2
0x366 EXP
0x367 SUB
0x368 AND
0x369 PUSH4 0x857e996b
0x36e DUP9
0x36f PUSH1 0x40
0x371 MLOAD
0x372 PUSH1 0xe0
0x374 PUSH1 0x2
0x376 EXP
0x377 PUSH4 0xffffffff
0x37c DUP5
0x37d AND
0x37e MUL
0x37f DUP2
0x380 MSTORE
0x381 PUSH2 0xffff
0x384 SWAP1
0x385 SWAP2
0x386 AND
0x387 PUSH1 0x4
0x389 DUP3
0x38a ADD
0x38b MSTORE
0x38c PUSH1 0x24
0x38e ADD
0x38f PUSH1 0xa0
0x391 PUSH1 0x40
0x393 MLOAD
0x394 DUP1
0x395 DUP4
0x396 SUB
0x397 DUP2
0x398 PUSH1 0x0
0x39a DUP8
0x39b DUP1
0x39c EXTCODESIZE
0x39d ISZERO
0x39e ISZERO
0x39f PUSH2 0x3a7
0x3a2 JUMPI
---
0x35c: JUMPDEST 
0x35d: V294 = 0x3
0x35f: V295 = S[0x3]
0x360: V296 = 0x1
0x362: V297 = 0xa0
0x364: V298 = 0x2
0x366: V299 = EXP 0x2 0xa0
0x367: V300 = SUB 0x10000000000000000000000000000000000000000 0x1
0x368: V301 = AND 0xffffffffffffffffffffffffffffffffffffffff V295
0x369: V302 = 0x857e996b
0x36f: V303 = 0x40
0x371: V304 = M[0x40]
0x372: V305 = 0xe0
0x374: V306 = 0x2
0x376: V307 = EXP 0x2 0xe0
0x377: V308 = 0xffffffff
0x37d: V309 = AND 0x857e996b 0xffffffff
0x37e: V310 = MUL 0x857e996b 0x100000000000000000000000000000000000000000000000000000000
0x380: M[V304] = 0x857e996b00000000000000000000000000000000000000000000000000000000
0x381: V311 = 0xffff
0x386: V312 = AND V92 0xffff
0x387: V313 = 0x4
0x38a: V314 = ADD V304 0x4
0x38b: M[V314] = V312
0x38c: V315 = 0x24
0x38e: V316 = ADD 0x24 V304
0x38f: V317 = 0xa0
0x391: V318 = 0x40
0x393: V319 = M[0x40]
0x396: V320 = SUB V316 V319
0x398: V321 = 0x0
0x39c: V322 = EXTCODESIZE V301
0x39d: V323 = ISZERO V322
0x39e: V324 = ISZERO V323
0x39f: V325 = 0x3a7
0x3a2: JUMPI 0x3a7 V324
---
Entry stack: [V13, 0x12b, V92, V95, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, V301, 0x857e996b, V316, 0xa0, V319, V320, V319, 0x0, V301]
Exit stack: [V13, 0x12b, V92, V95, 0x0, 0x0, 0x0, 0x0, 0x0, V301, 0x857e996b, V316, 0xa0, V319, V320, V319, 0x0, V301]

================================

Block 0x3a3
[0x3a3:0x3a6]
---
Predecessors: [0x35c]
Successors: []
---
0x3a3 PUSH1 0x0
0x3a5 DUP1
0x3a6 REVERT
---
0x3a3: V326 = 0x0
0x3a6: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b, V92, V95, 0x0, 0x0, 0x0, 0x0, 0x0, V301, 0x857e996b, V316, 0xa0, V319, V320, V319, 0x0, V301]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, V92, V95, 0x0, 0x0, 0x0, 0x0, 0x0, V301, 0x857e996b, V316, 0xa0, V319, V320, V319, 0x0, V301]

================================

Block 0x3a7
[0x3a7:0x3af]
---
Predecessors: [0x35c]
Successors: [0x3b0, 0x3b4]
---
0x3a7 JUMPDEST
0x3a8 GAS
0x3a9 CALL
0x3aa ISZERO
0x3ab ISZERO
0x3ac PUSH2 0x3b4
0x3af JUMPI
---
0x3a7: JUMPDEST 
0x3a8: V327 = GAS
0x3a9: V328 = CALL V327 V301 0x0 V319 V320 V319 0xa0
0x3aa: V329 = ISZERO V328
0x3ab: V330 = ISZERO V329
0x3ac: V331 = 0x3b4
0x3af: JUMPI 0x3b4 V330
---
Entry stack: [V13, 0x12b, V92, V95, 0x0, 0x0, 0x0, 0x0, 0x0, V301, 0x857e996b, V316, 0xa0, V319, V320, V319, 0x0, V301]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x12b, V92, V95, 0x0, 0x0, 0x0, 0x0, 0x0, V301, 0x857e996b, V316]

================================

Block 0x3b0
[0x3b0:0x3b3]
---
Predecessors: [0x3a7]
Successors: []
---
0x3b0 PUSH1 0x0
0x3b2 DUP1
0x3b3 REVERT
---
0x3b0: V332 = 0x0
0x3b3: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b, V92, V95, 0x0, 0x0, 0x0, 0x0, 0x0, V301, 0x857e996b, V316]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, V92, V95, 0x0, 0x0, 0x0, 0x0, 0x0, V301, 0x857e996b, V316]

================================

Block 0x3b4
[0x3b4:0x3e9]
---
Predecessors: [0x3a7]
Successors: [0x3ea, 0x3ee]
---
0x3b4 JUMPDEST
0x3b5 POP
0x3b6 POP
0x3b7 POP
0x3b8 PUSH1 0x40
0x3ba MLOAD
0x3bb DUP1
0x3bc MLOAD
0x3bd SWAP1
0x3be PUSH1 0x20
0x3c0 ADD
0x3c1 DUP1
0x3c2 MLOAD
0x3c3 SWAP1
0x3c4 PUSH1 0x20
0x3c6 ADD
0x3c7 DUP1
0x3c8 MLOAD
0x3c9 SWAP1
0x3ca PUSH1 0x20
0x3cc ADD
0x3cd DUP1
0x3ce MLOAD
0x3cf SWAP1
0x3d0 PUSH1 0x20
0x3d2 ADD
0x3d3 DUP1
0x3d4 MLOAD
0x3d5 SWAP5
0x3d6 SWAP10
0x3d7 POP
0x3d8 SWAP3
0x3d9 SWAP8
0x3da POP
0x3db SWAP1
0x3dc SWAP6
0x3dd POP
0x3de SWAP4
0x3df POP
0x3e0 SWAP1
0x3e1 SWAP2
0x3e2 POP
0x3e3 POP
0x3e4 DUP5
0x3e5 ISZERO
0x3e6 PUSH2 0x3ee
0x3e9 JUMPI
---
0x3b4: JUMPDEST 
0x3b8: V333 = 0x40
0x3ba: V334 = M[0x40]
0x3bc: V335 = M[V334]
0x3be: V336 = 0x20
0x3c0: V337 = ADD 0x20 V334
0x3c2: V338 = M[V337]
0x3c4: V339 = 0x20
0x3c6: V340 = ADD 0x20 V337
0x3c8: V341 = M[V340]
0x3ca: V342 = 0x20
0x3cc: V343 = ADD 0x20 V340
0x3ce: V344 = M[V343]
0x3d0: V345 = 0x20
0x3d2: V346 = ADD 0x20 V343
0x3d4: V347 = M[V346]
0x3e5: V348 = ISZERO V335
0x3e6: V349 = 0x3ee
0x3e9: JUMPI 0x3ee V348
---
Entry stack: [V13, 0x12b, V92, V95, 0x0, 0x0, 0x0, 0x0, 0x0, V301, 0x857e996b, V316]
Stack pops: 8
Stack additions: [V335, V338, V341, V344, V347]
Exit stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347]

================================

Block 0x3ea
[0x3ea:0x3ed]
---
Predecessors: [0x3b4]
Successors: []
---
0x3ea PUSH1 0x0
0x3ec DUP1
0x3ed REVERT
---
0x3ea: V350 = 0x0
0x3ed: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347]

================================

Block 0x3ee
[0x3ee:0x3fa]
---
Predecessors: [0x3b4]
Successors: [0x3fb, 0x3ff]
---
0x3ee JUMPDEST
0x3ef PUSH1 0x0
0x3f1 PUSH2 0xffff
0x3f4 DUP6
0x3f5 AND
0x3f6 GT
0x3f7 PUSH2 0x3ff
0x3fa JUMPI
---
0x3ee: JUMPDEST 
0x3ef: V351 = 0x0
0x3f1: V352 = 0xffff
0x3f5: V353 = AND V338 0xffff
0x3f6: V354 = GT V353 0x0
0x3f7: V355 = 0x3ff
0x3fa: JUMPI 0x3ff V354
---
Entry stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347]

================================

Block 0x3fb
[0x3fb:0x3fe]
---
Predecessors: [0x3ee]
Successors: []
---
0x3fb PUSH1 0x0
0x3fd DUP1
0x3fe REVERT
---
0x3fb: V356 = 0x0
0x3fe: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347]

================================

Block 0x3ff
[0x3ff:0x419]
---
Predecessors: [0x3ee]
Successors: [0x41a, 0x41e]
---
0x3ff JUMPDEST
0x400 PUSH16 0xffffffffffffffffffffffffffffffff
0x411 DUP4
0x412 AND
0x413 CALLVALUE
0x414 LT
0x415 ISZERO
0x416 PUSH2 0x41e
0x419 JUMPI
---
0x3ff: JUMPDEST 
0x400: V357 = 0xffffffffffffffffffffffffffffffff
0x412: V358 = AND V341 0xffffffffffffffffffffffffffffffff
0x413: V359 = CALLVALUE
0x414: V360 = LT V359 V358
0x415: V361 = ISZERO V360
0x416: V362 = 0x41e
0x419: JUMPI 0x41e V361
---
Entry stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347]

================================

Block 0x41a
[0x41a:0x41d]
---
Predecessors: [0x3ff]
Successors: []
---
0x41a PUSH1 0x0
0x41c DUP1
0x41d REVERT
---
0x41a: V363 = 0x0
0x41d: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347]

================================

Block 0x41e
[0x41e:0x432]
---
Predecessors: [0x3ff]
Successors: [0x433, 0x442]
---
0x41e JUMPDEST
0x41f DUP2
0x420 PUSH8 0xffffffffffffffff
0x429 AND
0x42a TIMESTAMP
0x42b LT
0x42c ISZERO
0x42d DUP1
0x42e ISZERO
0x42f PUSH2 0x442
0x432 JUMPI
---
0x41e: JUMPDEST 
0x420: V364 = 0xffffffffffffffff
0x429: V365 = AND 0xffffffffffffffff V344
0x42a: V366 = TIMESTAMP
0x42b: V367 = LT V366 V365
0x42c: V368 = ISZERO V367
0x42e: V369 = ISZERO V368
0x42f: V370 = 0x442
0x432: JUMPI 0x442 V369
---
Entry stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347]
Stack pops: 2
Stack additions: [S1, S0, V368]
Exit stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347, V368]

================================

Block 0x433
[0x433:0x441]
---
Predecessors: [0x41e]
Successors: [0x442]
---
0x433 POP
0x434 DUP1
0x435 PUSH8 0xffffffffffffffff
0x43e AND
0x43f TIMESTAMP
0x440 GT
0x441 ISZERO
---
0x435: V371 = 0xffffffffffffffff
0x43e: V372 = AND 0xffffffffffffffff V347
0x43f: V373 = TIMESTAMP
0x440: V374 = GT V373 V372
0x441: V375 = ISZERO V374
---
Entry stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347, V368]
Stack pops: 2
Stack additions: [S1, V375]
Exit stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347, V375]

================================

Block 0x442
[0x442:0x448]
---
Predecessors: [0x41e, 0x433]
Successors: [0x449, 0x44d]
---
0x442 JUMPDEST
0x443 ISZERO
0x444 ISZERO
0x445 PUSH2 0x44d
0x448 JUMPI
---
0x442: JUMPDEST 
0x443: V376 = ISZERO S0
0x444: V377 = ISZERO V376
0x445: V378 = 0x44d
0x448: JUMPI 0x44d V377
---
Entry stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347]

================================

Block 0x449
[0x449:0x44c]
---
Predecessors: [0x442]
Successors: []
---
0x449 PUSH1 0x0
0x44b DUP1
0x44c REVERT
---
0x449: V379 = 0x0
0x44c: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347]

================================

Block 0x44d
[0x44d:0x49e]
---
Predecessors: [0x442]
Successors: [0x49f, 0x4a3]
---
0x44d JUMPDEST
0x44e PUSH1 0x3
0x450 SLOAD
0x451 PUSH1 0x0
0x453 SWAP1
0x454 PUSH1 0x1
0x456 PUSH1 0xa0
0x458 PUSH1 0x2
0x45a EXP
0x45b SUB
0x45c AND
0x45d PUSH4 0xff70c4d1
0x462 DUP10
0x463 DUP10
0x464 PUSH1 0x40
0x466 MLOAD
0x467 PUSH1 0xe0
0x469 PUSH1 0x2
0x46b EXP
0x46c PUSH4 0xffffffff
0x471 DUP6
0x472 AND
0x473 MUL
0x474 DUP2
0x475 MSTORE
0x476 PUSH2 0xffff
0x479 SWAP3
0x47a DUP4
0x47b AND
0x47c PUSH1 0x4
0x47e DUP3
0x47f ADD
0x480 MSTORE
0x481 SWAP2
0x482 AND
0x483 PUSH1 0x24
0x485 DUP3
0x486 ADD
0x487 MSTORE
0x488 PUSH1 0x44
0x48a ADD
0x48b PUSH1 0x20
0x48d PUSH1 0x40
0x48f MLOAD
0x490 DUP1
0x491 DUP4
0x492 SUB
0x493 DUP2
0x494 PUSH1 0x0
0x496 DUP8
0x497 DUP1
0x498 EXTCODESIZE
0x499 ISZERO
0x49a ISZERO
0x49b PUSH2 0x4a3
0x49e JUMPI
---
0x44d: JUMPDEST 
0x44e: V380 = 0x3
0x450: V381 = S[0x3]
0x451: V382 = 0x0
0x454: V383 = 0x1
0x456: V384 = 0xa0
0x458: V385 = 0x2
0x45a: V386 = EXP 0x2 0xa0
0x45b: V387 = SUB 0x10000000000000000000000000000000000000000 0x1
0x45c: V388 = AND 0xffffffffffffffffffffffffffffffffffffffff V381
0x45d: V389 = 0xff70c4d1
0x464: V390 = 0x40
0x466: V391 = M[0x40]
0x467: V392 = 0xe0
0x469: V393 = 0x2
0x46b: V394 = EXP 0x2 0xe0
0x46c: V395 = 0xffffffff
0x472: V396 = AND 0xff70c4d1 0xffffffff
0x473: V397 = MUL 0xff70c4d1 0x100000000000000000000000000000000000000000000000000000000
0x475: M[V391] = 0xff70c4d100000000000000000000000000000000000000000000000000000000
0x476: V398 = 0xffff
0x47b: V399 = AND 0xffff V92
0x47c: V400 = 0x4
0x47f: V401 = ADD V391 0x4
0x480: M[V401] = V399
0x482: V402 = AND 0xffff V95
0x483: V403 = 0x24
0x486: V404 = ADD V391 0x24
0x487: M[V404] = V402
0x488: V405 = 0x44
0x48a: V406 = ADD 0x44 V391
0x48b: V407 = 0x20
0x48d: V408 = 0x40
0x48f: V409 = M[0x40]
0x492: V410 = SUB V406 V409
0x494: V411 = 0x0
0x498: V412 = EXTCODESIZE V388
0x499: V413 = ISZERO V412
0x49a: V414 = ISZERO V413
0x49b: V415 = 0x4a3
0x49e: JUMPI 0x4a3 V414
---
Entry stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, 0x0, V388, 0xff70c4d1, V406, 0x20, V409, V410, V409, 0x0, V388]
Exit stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347, 0x0, V388, 0xff70c4d1, V406, 0x20, V409, V410, V409, 0x0, V388]

================================

Block 0x49f
[0x49f:0x4a2]
---
Predecessors: [0x44d]
Successors: []
---
0x49f PUSH1 0x0
0x4a1 DUP1
0x4a2 REVERT
---
0x49f: V416 = 0x0
0x4a2: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347, 0x0, V388, 0xff70c4d1, V406, 0x20, V409, V410, V409, 0x0, V388]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347, 0x0, V388, 0xff70c4d1, V406, 0x20, V409, V410, V409, 0x0, V388]

================================

Block 0x4a3
[0x4a3:0x4ab]
---
Predecessors: [0x44d]
Successors: [0x4ac, 0x4b0]
---
0x4a3 JUMPDEST
0x4a4 GAS
0x4a5 CALL
0x4a6 ISZERO
0x4a7 ISZERO
0x4a8 PUSH2 0x4b0
0x4ab JUMPI
---
0x4a3: JUMPDEST 
0x4a4: V417 = GAS
0x4a5: V418 = CALL V417 V388 0x0 V409 V410 V409 0x20
0x4a6: V419 = ISZERO V418
0x4a7: V420 = ISZERO V419
0x4a8: V421 = 0x4b0
0x4ab: JUMPI 0x4b0 V420
---
Entry stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347, 0x0, V388, 0xff70c4d1, V406, 0x20, V409, V410, V409, 0x0, V388]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347, 0x0, V388, 0xff70c4d1, V406]

================================

Block 0x4ac
[0x4ac:0x4af]
---
Predecessors: [0x4a3]
Successors: []
---
0x4ac PUSH1 0x0
0x4ae DUP1
0x4af REVERT
---
0x4ac: V422 = 0x0
0x4af: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347, 0x0, V388, 0xff70c4d1, V406]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347, 0x0, V388, 0xff70c4d1, V406]

================================

Block 0x4b0
[0x4b0:0x4ca]
---
Predecessors: [0x4a3]
Successors: [0x4cb, 0x4cf]
---
0x4b0 JUMPDEST
0x4b1 POP
0x4b2 POP
0x4b3 POP
0x4b4 PUSH1 0x40
0x4b6 MLOAD
0x4b7 DUP1
0x4b8 MLOAD
0x4b9 SWAP1
0x4ba POP
0x4bb PUSH1 0x1
0x4bd PUSH1 0xa0
0x4bf PUSH1 0x2
0x4c1 EXP
0x4c2 SUB
0x4c3 AND
0x4c4 EQ
0x4c5 ISZERO
0x4c6 ISZERO
0x4c7 PUSH2 0x4cf
0x4ca JUMPI
---
0x4b0: JUMPDEST 
0x4b4: V423 = 0x40
0x4b6: V424 = M[0x40]
0x4b8: V425 = M[V424]
0x4bb: V426 = 0x1
0x4bd: V427 = 0xa0
0x4bf: V428 = 0x2
0x4c1: V429 = EXP 0x2 0xa0
0x4c2: V430 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c3: V431 = AND 0xffffffffffffffffffffffffffffffffffffffff V425
0x4c4: V432 = EQ V431 0x0
0x4c5: V433 = ISZERO V432
0x4c6: V434 = ISZERO V433
0x4c7: V435 = 0x4cf
0x4ca: JUMPI 0x4cf V434
---
Entry stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347, 0x0, V388, 0xff70c4d1, V406]
Stack pops: 4
Stack additions: []
Exit stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347]

================================

Block 0x4cb
[0x4cb:0x4ce]
---
Predecessors: [0x4b0]
Successors: []
---
0x4cb PUSH1 0x0
0x4cd DUP1
0x4ce REVERT
---
0x4cb: V436 = 0x0
0x4ce: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347]

================================

Block 0x4cf
[0x4cf:0x52a]
---
Predecessors: [0x4b0]
Successors: [0x52b, 0x52f]
---
0x4cf JUMPDEST
0x4d0 PUSH1 0x3
0x4d2 SLOAD
0x4d3 PUSH2 0xffff
0x4d6 DUP6
0x4d7 AND
0x4d8 SWAP1
0x4d9 PUSH1 0x1
0x4db PUSH1 0xa0
0x4dd PUSH1 0x2
0x4df EXP
0x4e0 SUB
0x4e1 AND
0x4e2 PUSH4 0x6310d902
0x4e7 DUP10
0x4e8 CALLER
0x4e9 PUSH1 0x40
0x4eb MLOAD
0x4ec PUSH1 0xe0
0x4ee PUSH1 0x2
0x4f0 EXP
0x4f1 PUSH4 0xffffffff
0x4f6 DUP6
0x4f7 AND
0x4f8 MUL
0x4f9 DUP2
0x4fa MSTORE
0x4fb PUSH2 0xffff
0x4fe SWAP1
0x4ff SWAP3
0x500 AND
0x501 PUSH1 0x4
0x503 DUP4
0x504 ADD
0x505 MSTORE
0x506 PUSH1 0x1
0x508 PUSH1 0xa0
0x50a PUSH1 0x2
0x50c EXP
0x50d SUB
0x50e AND
0x50f PUSH1 0x24
0x511 DUP3
0x512 ADD
0x513 MSTORE
0x514 PUSH1 0x44
0x516 ADD
0x517 PUSH1 0x20
0x519 PUSH1 0x40
0x51b MLOAD
0x51c DUP1
0x51d DUP4
0x51e SUB
0x51f DUP2
0x520 PUSH1 0x0
0x522 DUP8
0x523 DUP1
0x524 EXTCODESIZE
0x525 ISZERO
0x526 ISZERO
0x527 PUSH2 0x52f
0x52a JUMPI
---
0x4cf: JUMPDEST 
0x4d0: V437 = 0x3
0x4d2: V438 = S[0x3]
0x4d3: V439 = 0xffff
0x4d7: V440 = AND V338 0xffff
0x4d9: V441 = 0x1
0x4db: V442 = 0xa0
0x4dd: V443 = 0x2
0x4df: V444 = EXP 0x2 0xa0
0x4e0: V445 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4e1: V446 = AND 0xffffffffffffffffffffffffffffffffffffffff V438
0x4e2: V447 = 0x6310d902
0x4e8: V448 = CALLER
0x4e9: V449 = 0x40
0x4eb: V450 = M[0x40]
0x4ec: V451 = 0xe0
0x4ee: V452 = 0x2
0x4f0: V453 = EXP 0x2 0xe0
0x4f1: V454 = 0xffffffff
0x4f7: V455 = AND 0x6310d902 0xffffffff
0x4f8: V456 = MUL 0x6310d902 0x100000000000000000000000000000000000000000000000000000000
0x4fa: M[V450] = 0x6310d90200000000000000000000000000000000000000000000000000000000
0x4fb: V457 = 0xffff
0x500: V458 = AND V92 0xffff
0x501: V459 = 0x4
0x504: V460 = ADD V450 0x4
0x505: M[V460] = V458
0x506: V461 = 0x1
0x508: V462 = 0xa0
0x50a: V463 = 0x2
0x50c: V464 = EXP 0x2 0xa0
0x50d: V465 = SUB 0x10000000000000000000000000000000000000000 0x1
0x50e: V466 = AND 0xffffffffffffffffffffffffffffffffffffffff V448
0x50f: V467 = 0x24
0x512: V468 = ADD V450 0x24
0x513: M[V468] = V466
0x514: V469 = 0x44
0x516: V470 = ADD 0x44 V450
0x517: V471 = 0x20
0x519: V472 = 0x40
0x51b: V473 = M[0x40]
0x51e: V474 = SUB V470 V473
0x520: V475 = 0x0
0x524: V476 = EXTCODESIZE V446
0x525: V477 = ISZERO V476
0x526: V478 = ISZERO V477
0x527: V479 = 0x52f
0x52a: JUMPI 0x52f V478
---
Entry stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, V440, V446, 0x6310d902, V470, 0x20, V473, V474, V473, 0x0, V446]
Exit stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347, V440, V446, 0x6310d902, V470, 0x20, V473, V474, V473, 0x0, V446]

================================

Block 0x52b
[0x52b:0x52e]
---
Predecessors: [0x4cf]
Successors: []
---
0x52b PUSH1 0x0
0x52d DUP1
0x52e REVERT
---
0x52b: V480 = 0x0
0x52e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347, V440, V446, 0x6310d902, V470, 0x20, V473, V474, V473, 0x0, V446]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347, V440, V446, 0x6310d902, V470, 0x20, V473, V474, V473, 0x0, V446]

================================

Block 0x52f
[0x52f:0x537]
---
Predecessors: [0x4cf]
Successors: [0x538, 0x53c]
---
0x52f JUMPDEST
0x530 GAS
0x531 CALL
0x532 ISZERO
0x533 ISZERO
0x534 PUSH2 0x53c
0x537 JUMPI
---
0x52f: JUMPDEST 
0x530: V481 = GAS
0x531: V482 = CALL V481 V446 0x0 V473 V474 V473 0x20
0x532: V483 = ISZERO V482
0x533: V484 = ISZERO V483
0x534: V485 = 0x53c
0x537: JUMPI 0x53c V484
---
Entry stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347, V440, V446, 0x6310d902, V470, 0x20, V473, V474, V473, 0x0, V446]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347, V440, V446, 0x6310d902, V470]

================================

Block 0x538
[0x538:0x53b]
---
Predecessors: [0x52f]
Successors: []
---
0x538 PUSH1 0x0
0x53a DUP1
0x53b REVERT
---
0x538: V486 = 0x0
0x53b: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347, V440, V446, 0x6310d902, V470]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347, V440, V446, 0x6310d902, V470]

================================

Block 0x53c
[0x53c:0x551]
---
Predecessors: [0x52f]
Successors: [0x552, 0x556]
---
0x53c JUMPDEST
0x53d POP
0x53e POP
0x53f POP
0x540 PUSH1 0x40
0x542 MLOAD
0x543 DUP1
0x544 MLOAD
0x545 SWAP1
0x546 POP
0x547 PUSH2 0xffff
0x54a AND
0x54b LT
0x54c ISZERO
0x54d ISZERO
0x54e PUSH2 0x556
0x551 JUMPI
---
0x53c: JUMPDEST 
0x540: V487 = 0x40
0x542: V488 = M[0x40]
0x544: V489 = M[V488]
0x547: V490 = 0xffff
0x54a: V491 = AND 0xffff V489
0x54b: V492 = LT V491 V440
0x54c: V493 = ISZERO V492
0x54d: V494 = ISZERO V493
0x54e: V495 = 0x556
0x551: JUMPI 0x556 V494
---
Entry stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347, V440, V446, 0x6310d902, V470]
Stack pops: 4
Stack additions: []
Exit stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347]

================================

Block 0x552
[0x552:0x555]
---
Predecessors: [0x53c]
Successors: []
---
0x552 PUSH1 0x0
0x554 DUP1
0x555 REVERT
---
0x552: V496 = 0x0
0x555: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347]

================================

Block 0x556
[0x556:0x5b7]
---
Predecessors: [0x53c]
Successors: [0x5b8, 0x5bc]
---
0x556 JUMPDEST
0x557 PUSH1 0x3
0x559 SLOAD
0x55a PUSH1 0x1
0x55c PUSH1 0xa0
0x55e PUSH1 0x2
0x560 EXP
0x561 SUB
0x562 AND
0x563 PUSH4 0x6922eb06
0x568 DUP9
0x569 DUP9
0x56a CALLER
0x56b PUSH1 0x40
0x56d MLOAD
0x56e PUSH1 0xe0
0x570 PUSH1 0x2
0x572 EXP
0x573 PUSH4 0xffffffff
0x578 DUP7
0x579 AND
0x57a MUL
0x57b DUP2
0x57c MSTORE
0x57d PUSH2 0xffff
0x580 SWAP4
0x581 DUP5
0x582 AND
0x583 PUSH1 0x4
0x585 DUP3
0x586 ADD
0x587 MSTORE
0x588 SWAP2
0x589 SWAP1
0x58a SWAP3
0x58b AND
0x58c PUSH1 0x24
0x58e DUP3
0x58f ADD
0x590 MSTORE
0x591 PUSH1 0x1
0x593 PUSH1 0xa0
0x595 PUSH1 0x2
0x597 EXP
0x598 SUB
0x599 SWAP1
0x59a SWAP2
0x59b AND
0x59c PUSH1 0x44
0x59e DUP3
0x59f ADD
0x5a0 MSTORE
0x5a1 PUSH1 0x64
0x5a3 ADD
0x5a4 PUSH1 0x0
0x5a6 PUSH1 0x40
0x5a8 MLOAD
0x5a9 DUP1
0x5aa DUP4
0x5ab SUB
0x5ac DUP2
0x5ad PUSH1 0x0
0x5af DUP8
0x5b0 DUP1
0x5b1 EXTCODESIZE
0x5b2 ISZERO
0x5b3 ISZERO
0x5b4 PUSH2 0x5bc
0x5b7 JUMPI
---
0x556: JUMPDEST 
0x557: V497 = 0x3
0x559: V498 = S[0x3]
0x55a: V499 = 0x1
0x55c: V500 = 0xa0
0x55e: V501 = 0x2
0x560: V502 = EXP 0x2 0xa0
0x561: V503 = SUB 0x10000000000000000000000000000000000000000 0x1
0x562: V504 = AND 0xffffffffffffffffffffffffffffffffffffffff V498
0x563: V505 = 0x6922eb06
0x56a: V506 = CALLER
0x56b: V507 = 0x40
0x56d: V508 = M[0x40]
0x56e: V509 = 0xe0
0x570: V510 = 0x2
0x572: V511 = EXP 0x2 0xe0
0x573: V512 = 0xffffffff
0x579: V513 = AND 0x6922eb06 0xffffffff
0x57a: V514 = MUL 0x6922eb06 0x100000000000000000000000000000000000000000000000000000000
0x57c: M[V508] = 0x6922eb0600000000000000000000000000000000000000000000000000000000
0x57d: V515 = 0xffff
0x582: V516 = AND 0xffff V92
0x583: V517 = 0x4
0x586: V518 = ADD V508 0x4
0x587: M[V518] = V516
0x58b: V519 = AND 0xffff V95
0x58c: V520 = 0x24
0x58f: V521 = ADD V508 0x24
0x590: M[V521] = V519
0x591: V522 = 0x1
0x593: V523 = 0xa0
0x595: V524 = 0x2
0x597: V525 = EXP 0x2 0xa0
0x598: V526 = SUB 0x10000000000000000000000000000000000000000 0x1
0x59b: V527 = AND V506 0xffffffffffffffffffffffffffffffffffffffff
0x59c: V528 = 0x44
0x59f: V529 = ADD V508 0x44
0x5a0: M[V529] = V527
0x5a1: V530 = 0x64
0x5a3: V531 = ADD 0x64 V508
0x5a4: V532 = 0x0
0x5a6: V533 = 0x40
0x5a8: V534 = M[0x40]
0x5ab: V535 = SUB V531 V534
0x5ad: V536 = 0x0
0x5b1: V537 = EXTCODESIZE V504
0x5b2: V538 = ISZERO V537
0x5b3: V539 = ISZERO V538
0x5b4: V540 = 0x5bc
0x5b7: JUMPI 0x5bc V539
---
Entry stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, V504, 0x6922eb06, V531, 0x0, V534, V535, V534, 0x0, V504]
Exit stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347, V504, 0x6922eb06, V531, 0x0, V534, V535, V534, 0x0, V504]

================================

Block 0x5b8
[0x5b8:0x5bb]
---
Predecessors: [0x556]
Successors: []
---
0x5b8 PUSH1 0x0
0x5ba DUP1
0x5bb REVERT
---
0x5b8: V541 = 0x0
0x5bb: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347, V504, 0x6922eb06, V531, 0x0, V534, V535, V534, 0x0, V504]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347, V504, 0x6922eb06, V531, 0x0, V534, V535, V534, 0x0, V504]

================================

Block 0x5bc
[0x5bc:0x5c4]
---
Predecessors: [0x556]
Successors: [0x5c5, 0x5c9]
---
0x5bc JUMPDEST
0x5bd GAS
0x5be CALL
0x5bf ISZERO
0x5c0 ISZERO
0x5c1 PUSH2 0x5c9
0x5c4 JUMPI
---
0x5bc: JUMPDEST 
0x5bd: V542 = GAS
0x5be: V543 = CALL V542 V504 0x0 V534 V535 V534 0x0
0x5bf: V544 = ISZERO V543
0x5c0: V545 = ISZERO V544
0x5c1: V546 = 0x5c9
0x5c4: JUMPI 0x5c9 V545
---
Entry stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347, V504, 0x6922eb06, V531, 0x0, V534, V535, V534, 0x0, V504]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347, V504, 0x6922eb06, V531]

================================

Block 0x5c5
[0x5c5:0x5c8]
---
Predecessors: [0x5bc]
Successors: []
---
0x5c5 PUSH1 0x0
0x5c7 DUP1
0x5c8 REVERT
---
0x5c5: V547 = 0x0
0x5c8: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347, V504, 0x6922eb06, V531]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347, V504, 0x6922eb06, V531]

================================

Block 0x5c9
[0x5c9:0x62c]
---
Predecessors: [0x5bc]
Successors: [0x12b]
---
0x5c9 JUMPDEST
0x5ca POP
0x5cb POP
0x5cc POP
0x5cd PUSH32 0x4011bd1a7140f1b78b187a866da338e637192a7bdbae2fcdaaed25affb412f80
0x5ee DUP8
0x5ef DUP8
0x5f0 CALLER
0x5f1 PUSH1 0x40
0x5f3 MLOAD
0x5f4 PUSH2 0xffff
0x5f7 SWAP4
0x5f8 DUP5
0x5f9 AND
0x5fa DUP2
0x5fb MSTORE
0x5fc SWAP2
0x5fd SWAP1
0x5fe SWAP3
0x5ff AND
0x600 PUSH1 0x20
0x602 DUP3
0x603 ADD
0x604 MSTORE
0x605 PUSH1 0x1
0x607 PUSH1 0xa0
0x609 PUSH1 0x2
0x60b EXP
0x60c SUB
0x60d SWAP1
0x60e SWAP2
0x60f AND
0x610 PUSH1 0x40
0x612 DUP1
0x613 DUP4
0x614 ADD
0x615 SWAP2
0x616 SWAP1
0x617 SWAP2
0x618 MSTORE
0x619 PUSH1 0x60
0x61b SWAP1
0x61c SWAP2
0x61d ADD
0x61e SWAP1
0x61f MLOAD
0x620 DUP1
0x621 SWAP2
0x622 SUB
0x623 SWAP1
0x624 LOG1
0x625 POP
0x626 POP
0x627 POP
0x628 POP
0x629 POP
0x62a POP
0x62b POP
0x62c JUMP
---
0x5c9: JUMPDEST 
0x5cd: V548 = 0x4011bd1a7140f1b78b187a866da338e637192a7bdbae2fcdaaed25affb412f80
0x5f0: V549 = CALLER
0x5f1: V550 = 0x40
0x5f3: V551 = M[0x40]
0x5f4: V552 = 0xffff
0x5f9: V553 = AND 0xffff V92
0x5fb: M[V551] = V553
0x5ff: V554 = AND 0xffff V95
0x600: V555 = 0x20
0x603: V556 = ADD V551 0x20
0x604: M[V556] = V554
0x605: V557 = 0x1
0x607: V558 = 0xa0
0x609: V559 = 0x2
0x60b: V560 = EXP 0x2 0xa0
0x60c: V561 = SUB 0x10000000000000000000000000000000000000000 0x1
0x60f: V562 = AND V549 0xffffffffffffffffffffffffffffffffffffffff
0x610: V563 = 0x40
0x614: V564 = ADD V551 0x40
0x618: M[V564] = V562
0x619: V565 = 0x60
0x61d: V566 = ADD V551 0x60
0x61f: V567 = M[0x40]
0x622: V568 = SUB V566 V567
0x624: LOG V567 V568 0x4011bd1a7140f1b78b187a866da338e637192a7bdbae2fcdaaed25affb412f80
0x62c: JUMP 0x12b
---
Entry stack: [V13, 0x12b, V92, V95, V335, V338, V341, V344, V347, V504, 0x6922eb06, V531]
Stack pops: 11
Stack additions: []
Exit stack: [V13]

================================

Block 0x62d
[0x62d:0x644]
---
Predecessors: [0x138]
Successors: [0x645, 0x649]
---
0x62d JUMPDEST
0x62e PUSH1 0x0
0x630 DUP1
0x631 SLOAD
0x632 CALLER
0x633 PUSH1 0x1
0x635 PUSH1 0xa0
0x637 PUSH1 0x2
0x639 EXP
0x63a SUB
0x63b SWAP1
0x63c DUP2
0x63d AND
0x63e SWAP2
0x63f AND
0x640 EQ
0x641 PUSH2 0x649
0x644 JUMPI
---
0x62d: JUMPDEST 
0x62e: V569 = 0x0
0x631: V570 = S[0x0]
0x632: V571 = CALLER
0x633: V572 = 0x1
0x635: V573 = 0xa0
0x637: V574 = 0x2
0x639: V575 = EXP 0x2 0xa0
0x63a: V576 = SUB 0x10000000000000000000000000000000000000000 0x1
0x63d: V577 = AND 0xffffffffffffffffffffffffffffffffffffffff V571
0x63f: V578 = AND V570 0xffffffffffffffffffffffffffffffffffffffff
0x640: V579 = EQ V578 V577
0x641: V580 = 0x649
0x644: JUMPI 0x649 V579
---
Entry stack: [V13, 0x12b, V109]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x12b, V109, 0x0]

================================

Block 0x645
[0x645:0x648]
---
Predecessors: [0x62d]
Successors: []
---
0x645 PUSH1 0x0
0x647 DUP1
0x648 REVERT
---
0x645: V581 = 0x0
0x648: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b, V109, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, V109, 0x0]

================================

Block 0x649
[0x649:0x65c]
---
Predecessors: [0x62d]
Successors: [0x65d, 0x661]
---
0x649 JUMPDEST
0x64a PUSH1 0x0
0x64c SLOAD
0x64d PUSH1 0xa0
0x64f PUSH1 0x2
0x651 EXP
0x652 SWAP1
0x653 DIV
0x654 PUSH1 0xff
0x656 AND
0x657 ISZERO
0x658 ISZERO
0x659 PUSH2 0x661
0x65c JUMPI
---
0x649: JUMPDEST 
0x64a: V582 = 0x0
0x64c: V583 = S[0x0]
0x64d: V584 = 0xa0
0x64f: V585 = 0x2
0x651: V586 = EXP 0x2 0xa0
0x653: V587 = DIV V583 0x10000000000000000000000000000000000000000
0x654: V588 = 0xff
0x656: V589 = AND 0xff V587
0x657: V590 = ISZERO V589
0x658: V591 = ISZERO V590
0x659: V592 = 0x661
0x65c: JUMPI 0x661 V591
---
Entry stack: [V13, 0x12b, V109, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, V109, 0x0]

================================

Block 0x65d
[0x65d:0x660]
---
Predecessors: [0x649]
Successors: []
---
0x65d PUSH1 0x0
0x65f DUP1
0x660 REVERT
---
0x65d: V593 = 0x0
0x660: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b, V109, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, V109, 0x0]

================================

Block 0x661
[0x661:0x6b3]
---
Predecessors: [0x649]
Successors: [0x6b4, 0x6b8]
---
0x661 JUMPDEST
0x662 POP
0x663 PUSH1 0x0
0x665 SLOAD
0x666 DUP2
0x667 SWAP1
0x668 PUSH1 0x1
0x66a PUSH1 0xa0
0x66c PUSH1 0x2
0x66e EXP
0x66f SUB
0x670 DUP1
0x671 DUP4
0x672 AND
0x673 SWAP2
0x674 PUSH4 0xf2fde38b
0x679 SWAP2
0x67a AND
0x67b PUSH1 0x40
0x67d MLOAD
0x67e PUSH1 0xe0
0x680 PUSH1 0x2
0x682 EXP
0x683 PUSH4 0xffffffff
0x688 DUP5
0x689 AND
0x68a MUL
0x68b DUP2
0x68c MSTORE
0x68d PUSH1 0x1
0x68f PUSH1 0xa0
0x691 PUSH1 0x2
0x693 EXP
0x694 SUB
0x695 SWAP1
0x696 SWAP2
0x697 AND
0x698 PUSH1 0x4
0x69a DUP3
0x69b ADD
0x69c MSTORE
0x69d PUSH1 0x24
0x69f ADD
0x6a0 PUSH1 0x0
0x6a2 PUSH1 0x40
0x6a4 MLOAD
0x6a5 DUP1
0x6a6 DUP4
0x6a7 SUB
0x6a8 DUP2
0x6a9 PUSH1 0x0
0x6ab DUP8
0x6ac DUP1
0x6ad EXTCODESIZE
0x6ae ISZERO
0x6af ISZERO
0x6b0 PUSH2 0x6b8
0x6b3 JUMPI
---
0x661: JUMPDEST 
0x663: V594 = 0x0
0x665: V595 = S[0x0]
0x668: V596 = 0x1
0x66a: V597 = 0xa0
0x66c: V598 = 0x2
0x66e: V599 = EXP 0x2 0xa0
0x66f: V600 = SUB 0x10000000000000000000000000000000000000000 0x1
0x672: V601 = AND V109 0xffffffffffffffffffffffffffffffffffffffff
0x674: V602 = 0xf2fde38b
0x67a: V603 = AND 0xffffffffffffffffffffffffffffffffffffffff V595
0x67b: V604 = 0x40
0x67d: V605 = M[0x40]
0x67e: V606 = 0xe0
0x680: V607 = 0x2
0x682: V608 = EXP 0x2 0xe0
0x683: V609 = 0xffffffff
0x689: V610 = AND 0xf2fde38b 0xffffffff
0x68a: V611 = MUL 0xf2fde38b 0x100000000000000000000000000000000000000000000000000000000
0x68c: M[V605] = 0xf2fde38b00000000000000000000000000000000000000000000000000000000
0x68d: V612 = 0x1
0x68f: V613 = 0xa0
0x691: V614 = 0x2
0x693: V615 = EXP 0x2 0xa0
0x694: V616 = SUB 0x10000000000000000000000000000000000000000 0x1
0x697: V617 = AND V603 0xffffffffffffffffffffffffffffffffffffffff
0x698: V618 = 0x4
0x69b: V619 = ADD V605 0x4
0x69c: M[V619] = V617
0x69d: V620 = 0x24
0x69f: V621 = ADD 0x24 V605
0x6a0: V622 = 0x0
0x6a2: V623 = 0x40
0x6a4: V624 = M[0x40]
0x6a7: V625 = SUB V621 V624
0x6a9: V626 = 0x0
0x6ad: V627 = EXTCODESIZE V601
0x6ae: V628 = ISZERO V627
0x6af: V629 = ISZERO V628
0x6b0: V630 = 0x6b8
0x6b3: JUMPI 0x6b8 V629
---
Entry stack: [V13, 0x12b, V109, 0x0]
Stack pops: 2
Stack additions: [S1, S1, V601, 0xf2fde38b, V621, 0x0, V624, V625, V624, 0x0, V601]
Exit stack: [V13, 0x12b, V109, V109, V601, 0xf2fde38b, V621, 0x0, V624, V625, V624, 0x0, V601]

================================

Block 0x6b4
[0x6b4:0x6b7]
---
Predecessors: [0x661]
Successors: []
---
0x6b4 PUSH1 0x0
0x6b6 DUP1
0x6b7 REVERT
---
0x6b4: V631 = 0x0
0x6b7: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b, V109, V109, V601, 0xf2fde38b, V621, 0x0, V624, V625, V624, 0x0, V601]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, V109, V109, V601, 0xf2fde38b, V621, 0x0, V624, V625, V624, 0x0, V601]

================================

Block 0x6b8
[0x6b8:0x6c0]
---
Predecessors: [0x661]
Successors: [0x6c1, 0x6c5]
---
0x6b8 JUMPDEST
0x6b9 GAS
0x6ba CALL
0x6bb ISZERO
0x6bc ISZERO
0x6bd PUSH2 0x6c5
0x6c0 JUMPI
---
0x6b8: JUMPDEST 
0x6b9: V632 = GAS
0x6ba: V633 = CALL V632 V601 0x0 V624 V625 V624 0x0
0x6bb: V634 = ISZERO V633
0x6bc: V635 = ISZERO V634
0x6bd: V636 = 0x6c5
0x6c0: JUMPI 0x6c5 V635
---
Entry stack: [V13, 0x12b, V109, V109, V601, 0xf2fde38b, V621, 0x0, V624, V625, V624, 0x0, V601]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x12b, V109, V109, V601, 0xf2fde38b, V621]

================================

Block 0x6c1
[0x6c1:0x6c4]
---
Predecessors: [0x6b8]
Successors: []
---
0x6c1 PUSH1 0x0
0x6c3 DUP1
0x6c4 REVERT
---
0x6c1: V637 = 0x0
0x6c4: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b, V109, V109, V601, 0xf2fde38b, V621]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, V109, V109, V601, 0xf2fde38b, V621]

================================

Block 0x6c5
[0x6c5:0x6cb]
---
Predecessors: [0x6b8]
Successors: [0x12b]
---
0x6c5 JUMPDEST
0x6c6 POP
0x6c7 POP
0x6c8 POP
0x6c9 POP
0x6ca POP
0x6cb JUMP
---
0x6c5: JUMPDEST 
0x6cb: JUMP 0x12b
---
Entry stack: [V13, 0x12b, V109, V109, V601, 0xf2fde38b, V621]
Stack pops: 6
Stack additions: []
Exit stack: [V13]

================================

Block 0x6cc
[0x6cc:0x71d]
---
Predecessors: [0x157]
Successors: [0x71e, 0x722]
---
0x6cc JUMPDEST
0x6cd PUSH1 0x3
0x6cf SLOAD
0x6d0 PUSH1 0x0
0x6d2 SWAP1
0x6d3 DUP2
0x6d4 SWAP1
0x6d5 DUP2
0x6d6 SWAP1
0x6d7 DUP2
0x6d8 SWAP1
0x6d9 DUP2
0x6da SWAP1
0x6db PUSH1 0x1
0x6dd PUSH1 0xa0
0x6df PUSH1 0x2
0x6e1 EXP
0x6e2 SUB
0x6e3 AND
0x6e4 PUSH4 0x857e996b
0x6e9 DUP8
0x6ea PUSH1 0x40
0x6ec MLOAD
0x6ed PUSH1 0xe0
0x6ef PUSH1 0x2
0x6f1 EXP
0x6f2 PUSH4 0xffffffff
0x6f7 DUP5
0x6f8 AND
0x6f9 MUL
0x6fa DUP2
0x6fb MSTORE
0x6fc PUSH2 0xffff
0x6ff SWAP1
0x700 SWAP2
0x701 AND
0x702 PUSH1 0x4
0x704 DUP3
0x705 ADD
0x706 MSTORE
0x707 PUSH1 0x24
0x709 ADD
0x70a PUSH1 0xa0
0x70c PUSH1 0x40
0x70e MLOAD
0x70f DUP1
0x710 DUP4
0x711 SUB
0x712 DUP2
0x713 PUSH1 0x0
0x715 DUP8
0x716 DUP1
0x717 EXTCODESIZE
0x718 ISZERO
0x719 ISZERO
0x71a PUSH2 0x722
0x71d JUMPI
---
0x6cc: JUMPDEST 
0x6cd: V638 = 0x3
0x6cf: V639 = S[0x3]
0x6d0: V640 = 0x0
0x6db: V641 = 0x1
0x6dd: V642 = 0xa0
0x6df: V643 = 0x2
0x6e1: V644 = EXP 0x2 0xa0
0x6e2: V645 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6e3: V646 = AND 0xffffffffffffffffffffffffffffffffffffffff V639
0x6e4: V647 = 0x857e996b
0x6ea: V648 = 0x40
0x6ec: V649 = M[0x40]
0x6ed: V650 = 0xe0
0x6ef: V651 = 0x2
0x6f1: V652 = EXP 0x2 0xe0
0x6f2: V653 = 0xffffffff
0x6f8: V654 = AND 0x857e996b 0xffffffff
0x6f9: V655 = MUL 0x857e996b 0x100000000000000000000000000000000000000000000000000000000
0x6fb: M[V649] = 0x857e996b00000000000000000000000000000000000000000000000000000000
0x6fc: V656 = 0xffff
0x701: V657 = AND V119 0xffff
0x702: V658 = 0x4
0x705: V659 = ADD V649 0x4
0x706: M[V659] = V657
0x707: V660 = 0x24
0x709: V661 = ADD 0x24 V649
0x70a: V662 = 0xa0
0x70c: V663 = 0x40
0x70e: V664 = M[0x40]
0x711: V665 = SUB V661 V664
0x713: V666 = 0x0
0x717: V667 = EXTCODESIZE V646
0x718: V668 = ISZERO V667
0x719: V669 = ISZERO V668
0x71a: V670 = 0x722
0x71d: JUMPI 0x722 V669
---
Entry stack: [V13, 0x166, V119]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, 0x0, 0x0, 0x0, V646, 0x857e996b, V661, 0xa0, V664, V665, V664, 0x0, V646]
Exit stack: [V13, 0x166, V119, 0x0, 0x0, 0x0, 0x0, 0x0, V646, 0x857e996b, V661, 0xa0, V664, V665, V664, 0x0, V646]

================================

Block 0x71e
[0x71e:0x721]
---
Predecessors: [0x6cc]
Successors: []
---
0x71e PUSH1 0x0
0x720 DUP1
0x721 REVERT
---
0x71e: V671 = 0x0
0x721: REVERT 0x0 0x0
---
Entry stack: [V13, 0x166, V119, 0x0, 0x0, 0x0, 0x0, 0x0, V646, 0x857e996b, V661, 0xa0, V664, V665, V664, 0x0, V646]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x166, V119, 0x0, 0x0, 0x0, 0x0, 0x0, V646, 0x857e996b, V661, 0xa0, V664, V665, V664, 0x0, V646]

================================

Block 0x722
[0x722:0x72a]
---
Predecessors: [0x6cc]
Successors: [0x72b, 0x72f]
---
0x722 JUMPDEST
0x723 GAS
0x724 CALL
0x725 ISZERO
0x726 ISZERO
0x727 PUSH2 0x72f
0x72a JUMPI
---
0x722: JUMPDEST 
0x723: V672 = GAS
0x724: V673 = CALL V672 V646 0x0 V664 V665 V664 0xa0
0x725: V674 = ISZERO V673
0x726: V675 = ISZERO V674
0x727: V676 = 0x72f
0x72a: JUMPI 0x72f V675
---
Entry stack: [V13, 0x166, V119, 0x0, 0x0, 0x0, 0x0, 0x0, V646, 0x857e996b, V661, 0xa0, V664, V665, V664, 0x0, V646]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x166, V119, 0x0, 0x0, 0x0, 0x0, 0x0, V646, 0x857e996b, V661]

================================

Block 0x72b
[0x72b:0x72e]
---
Predecessors: [0x722]
Successors: []
---
0x72b PUSH1 0x0
0x72d DUP1
0x72e REVERT
---
0x72b: V677 = 0x0
0x72e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x166, V119, 0x0, 0x0, 0x0, 0x0, 0x0, V646, 0x857e996b, V661]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x166, V119, 0x0, 0x0, 0x0, 0x0, 0x0, V646, 0x857e996b, V661]

================================

Block 0x72f
[0x72f:0x761]
---
Predecessors: [0x722]
Successors: [0x166]
---
0x72f JUMPDEST
0x730 POP
0x731 POP
0x732 POP
0x733 PUSH1 0x40
0x735 MLOAD
0x736 DUP1
0x737 MLOAD
0x738 SWAP1
0x739 PUSH1 0x20
0x73b ADD
0x73c DUP1
0x73d MLOAD
0x73e SWAP1
0x73f PUSH1 0x20
0x741 ADD
0x742 DUP1
0x743 MLOAD
0x744 SWAP1
0x745 PUSH1 0x20
0x747 ADD
0x748 DUP1
0x749 MLOAD
0x74a SWAP1
0x74b PUSH1 0x20
0x74d ADD
0x74e DUP1
0x74f MLOAD
0x750 SWAP5
0x751 SWAP12
0x752 SWAP4
0x753 SWAP11
0x754 POP
0x755 SWAP2
0x756 SWAP9
0x757 POP
0x758 SWAP7
0x759 POP
0x75a SWAP2
0x75b SWAP5
0x75c POP
0x75d SWAP3
0x75e POP
0x75f POP
0x760 POP
0x761 JUMP
---
0x72f: JUMPDEST 
0x733: V678 = 0x40
0x735: V679 = M[0x40]
0x737: V680 = M[V679]
0x739: V681 = 0x20
0x73b: V682 = ADD 0x20 V679
0x73d: V683 = M[V682]
0x73f: V684 = 0x20
0x741: V685 = ADD 0x20 V682
0x743: V686 = M[V685]
0x745: V687 = 0x20
0x747: V688 = ADD 0x20 V685
0x749: V689 = M[V688]
0x74b: V690 = 0x20
0x74d: V691 = ADD 0x20 V688
0x74f: V692 = M[V691]
0x761: JUMP 0x166
---
Entry stack: [V13, 0x166, V119, 0x0, 0x0, 0x0, 0x0, 0x0, V646, 0x857e996b, V661]
Stack pops: 10
Stack additions: [V680, V683, V686, V689, V692]
Exit stack: [V13, V680, V683, V686, V689, V692]

================================

Block 0x762
[0x762:0x778]
---
Predecessors: [0x1c6]
Successors: [0x779, 0x77d]
---
0x762 JUMPDEST
0x763 PUSH1 0x0
0x765 SLOAD
0x766 CALLER
0x767 PUSH1 0x1
0x769 PUSH1 0xa0
0x76b PUSH1 0x2
0x76d EXP
0x76e SUB
0x76f SWAP1
0x770 DUP2
0x771 AND
0x772 SWAP2
0x773 AND
0x774 EQ
0x775 PUSH2 0x77d
0x778 JUMPI
---
0x762: JUMPDEST 
0x763: V693 = 0x0
0x765: V694 = S[0x0]
0x766: V695 = CALLER
0x767: V696 = 0x1
0x769: V697 = 0xa0
0x76b: V698 = 0x2
0x76d: V699 = EXP 0x2 0xa0
0x76e: V700 = SUB 0x10000000000000000000000000000000000000000 0x1
0x771: V701 = AND 0xffffffffffffffffffffffffffffffffffffffff V695
0x773: V702 = AND V694 0xffffffffffffffffffffffffffffffffffffffff
0x774: V703 = EQ V702 V701
0x775: V704 = 0x77d
0x778: JUMPI 0x77d V703
---
Entry stack: [V13, 0x12b]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b]

================================

Block 0x779
[0x779:0x77c]
---
Predecessors: [0x762]
Successors: []
---
0x779 PUSH1 0x0
0x77b DUP1
0x77c REVERT
---
0x779: V705 = 0x0
0x77c: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b]

================================

Block 0x77d
[0x77d:0x790]
---
Predecessors: [0x762]
Successors: [0x791, 0x795]
---
0x77d JUMPDEST
0x77e PUSH1 0x0
0x780 SLOAD
0x781 PUSH1 0xa0
0x783 PUSH1 0x2
0x785 EXP
0x786 SWAP1
0x787 DIV
0x788 PUSH1 0xff
0x78a AND
0x78b ISZERO
0x78c ISZERO
0x78d PUSH2 0x795
0x790 JUMPI
---
0x77d: JUMPDEST 
0x77e: V706 = 0x0
0x780: V707 = S[0x0]
0x781: V708 = 0xa0
0x783: V709 = 0x2
0x785: V710 = EXP 0x2 0xa0
0x787: V711 = DIV V707 0x10000000000000000000000000000000000000000
0x788: V712 = 0xff
0x78a: V713 = AND 0xff V711
0x78b: V714 = ISZERO V713
0x78c: V715 = ISZERO V714
0x78d: V716 = 0x795
0x790: JUMPI 0x795 V715
---
Entry stack: [V13, 0x12b]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b]

================================

Block 0x791
[0x791:0x794]
---
Predecessors: [0x77d]
Successors: []
---
0x791 PUSH1 0x0
0x793 DUP1
0x794 REVERT
---
0x791: V717 = 0x0
0x794: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b]

================================

Block 0x795
[0x795:0x7a7]
---
Predecessors: [0x77d]
Successors: [0x7a8, 0x7ac]
---
0x795 JUMPDEST
0x796 PUSH1 0x1
0x798 SLOAD
0x799 PUSH1 0x1
0x79b PUSH1 0xa0
0x79d PUSH1 0x2
0x79f EXP
0x7a0 SUB
0x7a1 AND
0x7a2 ISZERO
0x7a3 ISZERO
0x7a4 PUSH2 0x7ac
0x7a7 JUMPI
---
0x795: JUMPDEST 
0x796: V718 = 0x1
0x798: V719 = S[0x1]
0x799: V720 = 0x1
0x79b: V721 = 0xa0
0x79d: V722 = 0x2
0x79f: V723 = EXP 0x2 0xa0
0x7a0: V724 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7a1: V725 = AND 0xffffffffffffffffffffffffffffffffffffffff V719
0x7a2: V726 = ISZERO V725
0x7a3: V727 = ISZERO V726
0x7a4: V728 = 0x7ac
0x7a7: JUMPI 0x7ac V727
---
Entry stack: [V13, 0x12b]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b]

================================

Block 0x7a8
[0x7a8:0x7ab]
---
Predecessors: [0x795]
Successors: []
---
0x7a8 PUSH1 0x0
0x7aa DUP1
0x7ab REVERT
---
0x7a8: V729 = 0x0
0x7ab: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b]

================================

Block 0x7ac
[0x7ac:0x7be]
---
Predecessors: [0x795]
Successors: [0x7bf, 0x7c3]
---
0x7ac JUMPDEST
0x7ad PUSH1 0x2
0x7af SLOAD
0x7b0 PUSH1 0x1
0x7b2 PUSH1 0xa0
0x7b4 PUSH1 0x2
0x7b6 EXP
0x7b7 SUB
0x7b8 AND
0x7b9 ISZERO
0x7ba ISZERO
0x7bb PUSH2 0x7c3
0x7be JUMPI
---
0x7ac: JUMPDEST 
0x7ad: V730 = 0x2
0x7af: V731 = S[0x2]
0x7b0: V732 = 0x1
0x7b2: V733 = 0xa0
0x7b4: V734 = 0x2
0x7b6: V735 = EXP 0x2 0xa0
0x7b7: V736 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7b8: V737 = AND 0xffffffffffffffffffffffffffffffffffffffff V731
0x7b9: V738 = ISZERO V737
0x7ba: V739 = ISZERO V738
0x7bb: V740 = 0x7c3
0x7be: JUMPI 0x7c3 V739
---
Entry stack: [V13, 0x12b]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b]

================================

Block 0x7bf
[0x7bf:0x7c2]
---
Predecessors: [0x7ac]
Successors: []
---
0x7bf PUSH1 0x0
0x7c1 DUP1
0x7c2 REVERT
---
0x7bf: V741 = 0x0
0x7c2: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b]

================================

Block 0x7c3
[0x7c3:0x801]
---
Predecessors: [0x7ac]
Successors: [0x802, 0x806]
---
0x7c3 JUMPDEST
0x7c4 PUSH1 0x2
0x7c6 SLOAD
0x7c7 PUSH1 0x1
0x7c9 PUSH1 0xa0
0x7cb PUSH1 0x2
0x7cd EXP
0x7ce SUB
0x7cf ADDRESS
0x7d0 DUP2
0x7d1 AND
0x7d2 SWAP2
0x7d3 AND
0x7d4 PUSH4 0x8da5cb5b
0x7d9 PUSH1 0x40
0x7db MLOAD
0x7dc DUP2
0x7dd PUSH4 0xffffffff
0x7e2 AND
0x7e3 PUSH1 0xe0
0x7e5 PUSH1 0x2
0x7e7 EXP
0x7e8 MUL
0x7e9 DUP2
0x7ea MSTORE
0x7eb PUSH1 0x4
0x7ed ADD
0x7ee PUSH1 0x20
0x7f0 PUSH1 0x40
0x7f2 MLOAD
0x7f3 DUP1
0x7f4 DUP4
0x7f5 SUB
0x7f6 DUP2
0x7f7 PUSH1 0x0
0x7f9 DUP8
0x7fa DUP1
0x7fb EXTCODESIZE
0x7fc ISZERO
0x7fd ISZERO
0x7fe PUSH2 0x806
0x801 JUMPI
---
0x7c3: JUMPDEST 
0x7c4: V742 = 0x2
0x7c6: V743 = S[0x2]
0x7c7: V744 = 0x1
0x7c9: V745 = 0xa0
0x7cb: V746 = 0x2
0x7cd: V747 = EXP 0x2 0xa0
0x7ce: V748 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7cf: V749 = ADDRESS
0x7d1: V750 = AND 0xffffffffffffffffffffffffffffffffffffffff V749
0x7d3: V751 = AND V743 0xffffffffffffffffffffffffffffffffffffffff
0x7d4: V752 = 0x8da5cb5b
0x7d9: V753 = 0x40
0x7db: V754 = M[0x40]
0x7dd: V755 = 0xffffffff
0x7e2: V756 = AND 0xffffffff 0x8da5cb5b
0x7e3: V757 = 0xe0
0x7e5: V758 = 0x2
0x7e7: V759 = EXP 0x2 0xe0
0x7e8: V760 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x8da5cb5b
0x7ea: M[V754] = 0x8da5cb5b00000000000000000000000000000000000000000000000000000000
0x7eb: V761 = 0x4
0x7ed: V762 = ADD 0x4 V754
0x7ee: V763 = 0x20
0x7f0: V764 = 0x40
0x7f2: V765 = M[0x40]
0x7f5: V766 = SUB V762 V765
0x7f7: V767 = 0x0
0x7fb: V768 = EXTCODESIZE V751
0x7fc: V769 = ISZERO V768
0x7fd: V770 = ISZERO V769
0x7fe: V771 = 0x806
0x801: JUMPI 0x806 V770
---
Entry stack: [V13, 0x12b]
Stack pops: 0
Stack additions: [V750, V751, 0x8da5cb5b, V762, 0x20, V765, V766, V765, 0x0, V751]
Exit stack: [V13, 0x12b, V750, V751, 0x8da5cb5b, V762, 0x20, V765, V766, V765, 0x0, V751]

================================

Block 0x802
[0x802:0x805]
---
Predecessors: [0x7c3]
Successors: []
---
0x802 PUSH1 0x0
0x804 DUP1
0x805 REVERT
---
0x802: V772 = 0x0
0x805: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b, V750, V751, 0x8da5cb5b, V762, 0x20, V765, V766, V765, 0x0, V751]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, V750, V751, 0x8da5cb5b, V762, 0x20, V765, V766, V765, 0x0, V751]

================================

Block 0x806
[0x806:0x80e]
---
Predecessors: [0x7c3]
Successors: [0x80f, 0x813]
---
0x806 JUMPDEST
0x807 GAS
0x808 CALL
0x809 ISZERO
0x80a ISZERO
0x80b PUSH2 0x813
0x80e JUMPI
---
0x806: JUMPDEST 
0x807: V773 = GAS
0x808: V774 = CALL V773 V751 0x0 V765 V766 V765 0x20
0x809: V775 = ISZERO V774
0x80a: V776 = ISZERO V775
0x80b: V777 = 0x813
0x80e: JUMPI 0x813 V776
---
Entry stack: [V13, 0x12b, V750, V751, 0x8da5cb5b, V762, 0x20, V765, V766, V765, 0x0, V751]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x12b, V750, V751, 0x8da5cb5b, V762]

================================

Block 0x80f
[0x80f:0x812]
---
Predecessors: [0x806]
Successors: []
---
0x80f PUSH1 0x0
0x811 DUP1
0x812 REVERT
---
0x80f: V778 = 0x0
0x812: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b, V750, V751, 0x8da5cb5b, V762]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, V750, V751, 0x8da5cb5b, V762]

================================

Block 0x813
[0x813:0x82d]
---
Predecessors: [0x806]
Successors: [0x82e, 0x832]
---
0x813 JUMPDEST
0x814 POP
0x815 POP
0x816 POP
0x817 PUSH1 0x40
0x819 MLOAD
0x81a DUP1
0x81b MLOAD
0x81c SWAP1
0x81d POP
0x81e PUSH1 0x1
0x820 PUSH1 0xa0
0x822 PUSH1 0x2
0x824 EXP
0x825 SUB
0x826 AND
0x827 EQ
0x828 ISZERO
0x829 ISZERO
0x82a PUSH2 0x832
0x82d JUMPI
---
0x813: JUMPDEST 
0x817: V779 = 0x40
0x819: V780 = M[0x40]
0x81b: V781 = M[V780]
0x81e: V782 = 0x1
0x820: V783 = 0xa0
0x822: V784 = 0x2
0x824: V785 = EXP 0x2 0xa0
0x825: V786 = SUB 0x10000000000000000000000000000000000000000 0x1
0x826: V787 = AND 0xffffffffffffffffffffffffffffffffffffffff V781
0x827: V788 = EQ V787 V750
0x828: V789 = ISZERO V788
0x829: V790 = ISZERO V789
0x82a: V791 = 0x832
0x82d: JUMPI 0x832 V790
---
Entry stack: [V13, 0x12b, V750, V751, 0x8da5cb5b, V762]
Stack pops: 4
Stack additions: []
Exit stack: [V13, 0x12b]

================================

Block 0x82e
[0x82e:0x831]
---
Predecessors: [0x813]
Successors: []
---
0x82e PUSH1 0x0
0x830 DUP1
0x831 REVERT
---
0x82e: V792 = 0x0
0x831: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b]

================================

Block 0x832
[0x832:0x839]
---
Predecessors: [0x813]
Successors: [0xee8]
---
0x832 JUMPDEST
0x833 PUSH2 0x83a
0x836 PUSH2 0xee8
0x839 JUMP
---
0x832: JUMPDEST 
0x833: V793 = 0x83a
0x836: V794 = 0xee8
0x839: JUMP 0xee8
---
Entry stack: [V13, 0x12b]
Stack pops: 0
Stack additions: [0x83a]
Exit stack: [V13, 0x12b, 0x83a]

================================

Block 0x83a
[0x83a:0x83b]
---
Predecessors: [0xf1b]
Successors: [0x12b]
---
0x83a JUMPDEST
0x83b JUMP
---
0x83a: JUMPDEST 
0x83b: JUMP 0x12b
---
Entry stack: [V13, 0x12b]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x83c
[0x83c:0x84b]
---
Predecessors: [0x1d9]
Successors: [0x1e1]
---
0x83c JUMPDEST
0x83d PUSH1 0x0
0x83f SLOAD
0x840 PUSH1 0xa0
0x842 PUSH1 0x2
0x844 EXP
0x845 SWAP1
0x846 DIV
0x847 PUSH1 0xff
0x849 AND
0x84a DUP2
0x84b JUMP
---
0x83c: JUMPDEST 
0x83d: V795 = 0x0
0x83f: V796 = S[0x0]
0x840: V797 = 0xa0
0x842: V798 = 0x2
0x844: V799 = EXP 0x2 0xa0
0x846: V800 = DIV V796 0x10000000000000000000000000000000000000000
0x847: V801 = 0xff
0x849: V802 = AND 0xff V800
0x84b: JUMP 0x1e1
---
Entry stack: [V13, 0x1e1]
Stack pops: 1
Stack additions: [S0, V802]
Exit stack: [V13, 0x1e1, V802]

================================

Block 0x84c
[0x84c:0x86e]
---
Predecessors: [0x200]
Successors: [0x86f, 0x885]
---
0x84c JUMPDEST
0x84d PUSH1 0x1
0x84f SLOAD
0x850 PUSH1 0x0
0x852 DUP1
0x853 SLOAD
0x854 SWAP1
0x855 SWAP2
0x856 PUSH1 0x1
0x858 PUSH1 0xa0
0x85a PUSH1 0x2
0x85c EXP
0x85d SUB
0x85e SWAP1
0x85f DUP2
0x860 AND
0x861 SWAP2
0x862 DUP4
0x863 SWAP2
0x864 CALLER
0x865 DUP2
0x866 AND
0x867 SWAP2
0x868 AND
0x869 EQ
0x86a DUP1
0x86b PUSH2 0x885
0x86e JUMPI
---
0x84c: JUMPDEST 
0x84d: V803 = 0x1
0x84f: V804 = S[0x1]
0x850: V805 = 0x0
0x853: V806 = S[0x0]
0x856: V807 = 0x1
0x858: V808 = 0xa0
0x85a: V809 = 0x2
0x85c: V810 = EXP 0x2 0xa0
0x85d: V811 = SUB 0x10000000000000000000000000000000000000000 0x1
0x860: V812 = AND 0xffffffffffffffffffffffffffffffffffffffff V804
0x864: V813 = CALLER
0x866: V814 = AND 0xffffffffffffffffffffffffffffffffffffffff V813
0x868: V815 = AND V806 0xffffffffffffffffffffffffffffffffffffffff
0x869: V816 = EQ V815 V814
0x86b: V817 = 0x885
0x86e: JUMPI 0x885 V816
---
Entry stack: [V13, 0x1e1]
Stack pops: 0
Stack additions: [0x0, V812, 0x0, V816]
Exit stack: [V13, 0x1e1, 0x0, V812, 0x0, V816]

================================

Block 0x86f
[0x86f:0x884]
---
Predecessors: [0x84c]
Successors: [0x885]
---
0x86f POP
0x870 DUP2
0x871 PUSH1 0x1
0x873 PUSH1 0xa0
0x875 PUSH1 0x2
0x877 EXP
0x878 SUB
0x879 AND
0x87a CALLER
0x87b PUSH1 0x1
0x87d PUSH1 0xa0
0x87f PUSH1 0x2
0x881 EXP
0x882 SUB
0x883 AND
0x884 EQ
---
0x871: V818 = 0x1
0x873: V819 = 0xa0
0x875: V820 = 0x2
0x877: V821 = EXP 0x2 0xa0
0x878: V822 = SUB 0x10000000000000000000000000000000000000000 0x1
0x879: V823 = AND 0xffffffffffffffffffffffffffffffffffffffff V812
0x87a: V824 = CALLER
0x87b: V825 = 0x1
0x87d: V826 = 0xa0
0x87f: V827 = 0x2
0x881: V828 = EXP 0x2 0xa0
0x882: V829 = SUB 0x10000000000000000000000000000000000000000 0x1
0x883: V830 = AND 0xffffffffffffffffffffffffffffffffffffffff V824
0x884: V831 = EQ V830 V823
---
Entry stack: [V13, 0x1e1, 0x0, V812, 0x0, V816]
Stack pops: 3
Stack additions: [S2, S1, V831]
Exit stack: [V13, 0x1e1, 0x0, V812, 0x0, V831]

================================

Block 0x885
[0x885:0x88b]
---
Predecessors: [0x84c, 0x86f]
Successors: [0x88c, 0x890]
---
0x885 JUMPDEST
0x886 ISZERO
0x887 ISZERO
0x888 PUSH2 0x890
0x88b JUMPI
---
0x885: JUMPDEST 
0x886: V832 = ISZERO S0
0x887: V833 = ISZERO V832
0x888: V834 = 0x890
0x88b: JUMPI 0x890 V833
---
Entry stack: [V13, 0x1e1, 0x0, V812, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x1e1, 0x0, V812, 0x0]

================================

Block 0x88c
[0x88c:0x88f]
---
Predecessors: [0x885]
Successors: []
---
0x88c PUSH1 0x0
0x88e DUP1
0x88f REVERT
---
0x88c: V835 = 0x0
0x88f: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1e1, 0x0, V812, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1e1, 0x0, V812, 0x0]

================================

Block 0x890
[0x890:0x8c7]
---
Predecessors: [0x885]
Successors: [0x1e1]
---
0x890 JUMPDEST
0x891 DUP2
0x892 PUSH1 0x1
0x894 PUSH1 0xa0
0x896 PUSH1 0x2
0x898 EXP
0x899 SUB
0x89a AND
0x89b PUSH2 0x8fc
0x89e ADDRESS
0x89f PUSH1 0x1
0x8a1 PUSH1 0xa0
0x8a3 PUSH1 0x2
0x8a5 EXP
0x8a6 SUB
0x8a7 AND
0x8a8 BALANCE
0x8a9 SWAP1
0x8aa DUP2
0x8ab ISZERO
0x8ac MUL
0x8ad SWAP1
0x8ae PUSH1 0x40
0x8b0 MLOAD
0x8b1 PUSH1 0x0
0x8b3 PUSH1 0x40
0x8b5 MLOAD
0x8b6 DUP1
0x8b7 DUP4
0x8b8 SUB
0x8b9 DUP2
0x8ba DUP6
0x8bb DUP9
0x8bc DUP9
0x8bd CALL
0x8be SWAP8
0x8bf SWAP7
0x8c0 POP
0x8c1 POP
0x8c2 POP
0x8c3 POP
0x8c4 POP
0x8c5 POP
0x8c6 POP
0x8c7 JUMP
---
0x890: JUMPDEST 
0x892: V836 = 0x1
0x894: V837 = 0xa0
0x896: V838 = 0x2
0x898: V839 = EXP 0x2 0xa0
0x899: V840 = SUB 0x10000000000000000000000000000000000000000 0x1
0x89a: V841 = AND 0xffffffffffffffffffffffffffffffffffffffff V812
0x89b: V842 = 0x8fc
0x89e: V843 = ADDRESS
0x89f: V844 = 0x1
0x8a1: V845 = 0xa0
0x8a3: V846 = 0x2
0x8a5: V847 = EXP 0x2 0xa0
0x8a6: V848 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8a7: V849 = AND 0xffffffffffffffffffffffffffffffffffffffff V843
0x8a8: V850 = BALANCE V849
0x8ab: V851 = ISZERO V850
0x8ac: V852 = MUL V851 0x8fc
0x8ae: V853 = 0x40
0x8b0: V854 = M[0x40]
0x8b1: V855 = 0x0
0x8b3: V856 = 0x40
0x8b5: V857 = M[0x40]
0x8b8: V858 = SUB V854 V857
0x8bd: V859 = CALL V852 V841 V850 V857 V858 V857 0x0
0x8c7: JUMP 0x1e1
---
Entry stack: [V13, 0x1e1, 0x0, V812, 0x0]
Stack pops: 4
Stack additions: [V859]
Exit stack: [V13, V859]

================================

Block 0x8c8
[0x8c8:0x8df]
---
Predecessors: [0x213]
Successors: [0x8e0, 0x8e4]
---
0x8c8 JUMPDEST
0x8c9 PUSH1 0x0
0x8cb DUP1
0x8cc SLOAD
0x8cd CALLER
0x8ce PUSH1 0x1
0x8d0 PUSH1 0xa0
0x8d2 PUSH1 0x2
0x8d4 EXP
0x8d5 SUB
0x8d6 SWAP1
0x8d7 DUP2
0x8d8 AND
0x8d9 SWAP2
0x8da AND
0x8db EQ
0x8dc PUSH2 0x8e4
0x8df JUMPI
---
0x8c8: JUMPDEST 
0x8c9: V860 = 0x0
0x8cc: V861 = S[0x0]
0x8cd: V862 = CALLER
0x8ce: V863 = 0x1
0x8d0: V864 = 0xa0
0x8d2: V865 = 0x2
0x8d4: V866 = EXP 0x2 0xa0
0x8d5: V867 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8d8: V868 = AND 0xffffffffffffffffffffffffffffffffffffffff V862
0x8da: V869 = AND V861 0xffffffffffffffffffffffffffffffffffffffff
0x8db: V870 = EQ V869 V868
0x8dc: V871 = 0x8e4
0x8df: JUMPI 0x8e4 V870
---
Entry stack: [V13, 0x12b, V183]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x12b, V183, 0x0]

================================

Block 0x8e0
[0x8e0:0x8e3]
---
Predecessors: [0x8c8]
Successors: []
---
0x8e0 PUSH1 0x0
0x8e2 DUP1
0x8e3 REVERT
---
0x8e0: V872 = 0x0
0x8e3: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b, V183, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, V183, 0x0]

================================

Block 0x8e4
[0x8e4:0x8f4]
---
Predecessors: [0x8c8]
Successors: [0x8f5, 0x8f9]
---
0x8e4 JUMPDEST
0x8e5 PUSH1 0x1
0x8e7 PUSH1 0xa0
0x8e9 PUSH1 0x2
0x8eb EXP
0x8ec SUB
0x8ed DUP3
0x8ee AND
0x8ef ISZERO
0x8f0 ISZERO
0x8f1 PUSH2 0x8f9
0x8f4 JUMPI
---
0x8e4: JUMPDEST 
0x8e5: V873 = 0x1
0x8e7: V874 = 0xa0
0x8e9: V875 = 0x2
0x8eb: V876 = EXP 0x2 0xa0
0x8ec: V877 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8ee: V878 = AND V183 0xffffffffffffffffffffffffffffffffffffffff
0x8ef: V879 = ISZERO V878
0x8f0: V880 = ISZERO V879
0x8f1: V881 = 0x8f9
0x8f4: JUMPI 0x8f9 V880
---
Entry stack: [V13, 0x12b, V183, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x12b, V183, 0x0]

================================

Block 0x8f5
[0x8f5:0x8f8]
---
Predecessors: [0x8e4]
Successors: []
---
0x8f5 PUSH1 0x0
0x8f7 DUP1
0x8f8 REVERT
---
0x8f5: V882 = 0x0
0x8f8: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b, V183, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, V183, 0x0]

================================

Block 0x8f9
[0x8f9:0x97d]
---
Predecessors: [0x8e4]
Successors: [0x97e, 0x982]
---
0x8f9 JUMPDEST
0x8fa POP
0x8fb DUP1
0x8fc PUSH1 0x1
0x8fe PUSH1 0xa0
0x900 PUSH1 0x2
0x902 EXP
0x903 SUB
0x904 DUP2
0x905 AND
0x906 PUSH4 0x1ffc9a7
0x90b PUSH32 0x9f40b77900000000000000000000000000000000000000000000000000000000
0x92c PUSH1 0x40
0x92e MLOAD
0x92f PUSH1 0xe0
0x931 PUSH1 0x2
0x933 EXP
0x934 PUSH4 0xffffffff
0x939 DUP5
0x93a AND
0x93b MUL
0x93c DUP2
0x93d MSTORE
0x93e PUSH32 0xffffffff00000000000000000000000000000000000000000000000000000000
0x95f SWAP1
0x960 SWAP2
0x961 AND
0x962 PUSH1 0x4
0x964 DUP3
0x965 ADD
0x966 MSTORE
0x967 PUSH1 0x24
0x969 ADD
0x96a PUSH1 0x20
0x96c PUSH1 0x40
0x96e MLOAD
0x96f DUP1
0x970 DUP4
0x971 SUB
0x972 DUP2
0x973 PUSH1 0x0
0x975 DUP8
0x976 DUP1
0x977 EXTCODESIZE
0x978 ISZERO
0x979 ISZERO
0x97a PUSH2 0x982
0x97d JUMPI
---
0x8f9: JUMPDEST 
0x8fc: V883 = 0x1
0x8fe: V884 = 0xa0
0x900: V885 = 0x2
0x902: V886 = EXP 0x2 0xa0
0x903: V887 = SUB 0x10000000000000000000000000000000000000000 0x1
0x905: V888 = AND V183 0xffffffffffffffffffffffffffffffffffffffff
0x906: V889 = 0x1ffc9a7
0x90b: V890 = 0x9f40b77900000000000000000000000000000000000000000000000000000000
0x92c: V891 = 0x40
0x92e: V892 = M[0x40]
0x92f: V893 = 0xe0
0x931: V894 = 0x2
0x933: V895 = EXP 0x2 0xe0
0x934: V896 = 0xffffffff
0x93a: V897 = AND 0x1ffc9a7 0xffffffff
0x93b: V898 = MUL 0x1ffc9a7 0x100000000000000000000000000000000000000000000000000000000
0x93d: M[V892] = 0x1ffc9a700000000000000000000000000000000000000000000000000000000
0x93e: V899 = 0xffffffff00000000000000000000000000000000000000000000000000000000
0x961: V900 = AND 0x9f40b77900000000000000000000000000000000000000000000000000000000 0xffffffff00000000000000000000000000000000000000000000000000000000
0x962: V901 = 0x4
0x965: V902 = ADD V892 0x4
0x966: M[V902] = 0x9f40b77900000000000000000000000000000000000000000000000000000000
0x967: V903 = 0x24
0x969: V904 = ADD 0x24 V892
0x96a: V905 = 0x20
0x96c: V906 = 0x40
0x96e: V907 = M[0x40]
0x971: V908 = SUB V904 V907
0x973: V909 = 0x0
0x977: V910 = EXTCODESIZE V888
0x978: V911 = ISZERO V910
0x979: V912 = ISZERO V911
0x97a: V913 = 0x982
0x97d: JUMPI 0x982 V912
---
Entry stack: [V13, 0x12b, V183, 0x0]
Stack pops: 2
Stack additions: [S1, S1, V888, 0x1ffc9a7, V904, 0x20, V907, V908, V907, 0x0, V888]
Exit stack: [V13, 0x12b, V183, V183, V888, 0x1ffc9a7, V904, 0x20, V907, V908, V907, 0x0, V888]

================================

Block 0x97e
[0x97e:0x981]
---
Predecessors: [0x8f9]
Successors: []
---
0x97e PUSH1 0x0
0x980 DUP1
0x981 REVERT
---
0x97e: V914 = 0x0
0x981: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b, V183, V183, V888, 0x1ffc9a7, V904, 0x20, V907, V908, V907, 0x0, V888]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, V183, V183, V888, 0x1ffc9a7, V904, 0x20, V907, V908, V907, 0x0, V888]

================================

Block 0x982
[0x982:0x98a]
---
Predecessors: [0x8f9]
Successors: [0x98b, 0x98f]
---
0x982 JUMPDEST
0x983 GAS
0x984 CALL
0x985 ISZERO
0x986 ISZERO
0x987 PUSH2 0x98f
0x98a JUMPI
---
0x982: JUMPDEST 
0x983: V915 = GAS
0x984: V916 = CALL V915 V888 0x0 V907 V908 V907 0x20
0x985: V917 = ISZERO V916
0x986: V918 = ISZERO V917
0x987: V919 = 0x98f
0x98a: JUMPI 0x98f V918
---
Entry stack: [V13, 0x12b, V183, V183, V888, 0x1ffc9a7, V904, 0x20, V907, V908, V907, 0x0, V888]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x12b, V183, V183, V888, 0x1ffc9a7, V904]

================================

Block 0x98b
[0x98b:0x98e]
---
Predecessors: [0x982]
Successors: []
---
0x98b PUSH1 0x0
0x98d DUP1
0x98e REVERT
---
0x98b: V920 = 0x0
0x98e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b, V183, V183, V888, 0x1ffc9a7, V904]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, V183, V183, V888, 0x1ffc9a7, V904]

================================

Block 0x98f
[0x98f:0x99f]
---
Predecessors: [0x982]
Successors: [0x9a0, 0x9a4]
---
0x98f JUMPDEST
0x990 POP
0x991 POP
0x992 POP
0x993 PUSH1 0x40
0x995 MLOAD
0x996 DUP1
0x997 MLOAD
0x998 SWAP1
0x999 POP
0x99a ISZERO
0x99b ISZERO
0x99c PUSH2 0x9a4
0x99f JUMPI
---
0x98f: JUMPDEST 
0x993: V921 = 0x40
0x995: V922 = M[0x40]
0x997: V923 = M[V922]
0x99a: V924 = ISZERO V923
0x99b: V925 = ISZERO V924
0x99c: V926 = 0x9a4
0x99f: JUMPI 0x9a4 V925
---
Entry stack: [V13, 0x12b, V183, V183, V888, 0x1ffc9a7, V904]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0x12b, V183, V183]

================================

Block 0x9a0
[0x9a0:0x9a3]
---
Predecessors: [0x98f]
Successors: []
---
0x9a0 PUSH1 0x0
0x9a2 DUP1
0x9a3 REVERT
---
0x9a0: V927 = 0x0
0x9a3: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b, V183, V183]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, V183, V183]

================================

Block 0x9a4
[0x9a4:0x9d3]
---
Predecessors: [0x98f]
Successors: [0x12b]
---
0x9a4 JUMPDEST
0x9a5 PUSH1 0x1
0x9a7 DUP1
0x9a8 SLOAD
0x9a9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9be NOT
0x9bf AND
0x9c0 PUSH1 0x1
0x9c2 PUSH1 0xa0
0x9c4 PUSH1 0x2
0x9c6 EXP
0x9c7 SUB
0x9c8 SWAP3
0x9c9 SWAP1
0x9ca SWAP3
0x9cb AND
0x9cc SWAP2
0x9cd SWAP1
0x9ce SWAP2
0x9cf OR
0x9d0 SWAP1
0x9d1 SSTORE
0x9d2 POP
0x9d3 JUMP
---
0x9a4: JUMPDEST 
0x9a5: V928 = 0x1
0x9a8: V929 = S[0x1]
0x9a9: V930 = 0xffffffffffffffffffffffffffffffffffffffff
0x9be: V931 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x9bf: V932 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V929
0x9c0: V933 = 0x1
0x9c2: V934 = 0xa0
0x9c4: V935 = 0x2
0x9c6: V936 = EXP 0x2 0xa0
0x9c7: V937 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9cb: V938 = AND 0xffffffffffffffffffffffffffffffffffffffff V183
0x9cf: V939 = OR V938 V932
0x9d1: S[0x1] = V939
0x9d3: JUMP 0x12b
---
Entry stack: [V13, 0x12b, V183, V183]
Stack pops: 3
Stack additions: []
Exit stack: [V13]

================================

Block 0x9d4
[0x9d4:0x9eb]
---
Predecessors: [0x232]
Successors: [0x9ec, 0x9f0]
---
0x9d4 JUMPDEST
0x9d5 PUSH1 0x0
0x9d7 DUP1
0x9d8 SLOAD
0x9d9 CALLER
0x9da PUSH1 0x1
0x9dc PUSH1 0xa0
0x9de PUSH1 0x2
0x9e0 EXP
0x9e1 SUB
0x9e2 SWAP1
0x9e3 DUP2
0x9e4 AND
0x9e5 SWAP2
0x9e6 AND
0x9e7 EQ
0x9e8 PUSH2 0x9f0
0x9eb JUMPI
---
0x9d4: JUMPDEST 
0x9d5: V940 = 0x0
0x9d8: V941 = S[0x0]
0x9d9: V942 = CALLER
0x9da: V943 = 0x1
0x9dc: V944 = 0xa0
0x9de: V945 = 0x2
0x9e0: V946 = EXP 0x2 0xa0
0x9e1: V947 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9e4: V948 = AND 0xffffffffffffffffffffffffffffffffffffffff V942
0x9e6: V949 = AND V941 0xffffffffffffffffffffffffffffffffffffffff
0x9e7: V950 = EQ V949 V948
0x9e8: V951 = 0x9f0
0x9eb: JUMPI 0x9f0 V950
---
Entry stack: [V13, 0x12b]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x12b, 0x0]

================================

Block 0x9ec
[0x9ec:0x9ef]
---
Predecessors: [0x9d4]
Successors: []
---
0x9ec PUSH1 0x0
0x9ee DUP1
0x9ef REVERT
---
0x9ec: V952 = 0x0
0x9ef: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, 0x0]

================================

Block 0x9f0
[0x9f0:0xa03]
---
Predecessors: [0x9d4]
Successors: [0xa04, 0xa08]
---
0x9f0 JUMPDEST
0x9f1 PUSH1 0x0
0x9f3 SLOAD
0x9f4 PUSH1 0xa0
0x9f6 PUSH1 0x2
0x9f8 EXP
0x9f9 SWAP1
0x9fa DIV
0x9fb PUSH1 0xff
0x9fd AND
0x9fe ISZERO
0x9ff ISZERO
0xa00 PUSH2 0xa08
0xa03 JUMPI
---
0x9f0: JUMPDEST 
0x9f1: V953 = 0x0
0x9f3: V954 = S[0x0]
0x9f4: V955 = 0xa0
0x9f6: V956 = 0x2
0x9f8: V957 = EXP 0x2 0xa0
0x9fa: V958 = DIV V954 0x10000000000000000000000000000000000000000
0x9fb: V959 = 0xff
0x9fd: V960 = AND 0xff V958
0x9fe: V961 = ISZERO V960
0x9ff: V962 = ISZERO V961
0xa00: V963 = 0xa08
0xa03: JUMPI 0xa08 V962
---
Entry stack: [V13, 0x12b, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, 0x0]

================================

Block 0xa04
[0xa04:0xa07]
---
Predecessors: [0x9f0]
Successors: []
---
0xa04 PUSH1 0x0
0xa06 DUP1
0xa07 REVERT
---
0xa04: V964 = 0x0
0xa07: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, 0x0]

================================

Block 0xa08
[0xa08:0xa42]
---
Predecessors: [0x9f0]
Successors: [0xa43, 0xa47]
---
0xa08 JUMPDEST
0xa09 PUSH1 0x2
0xa0b SLOAD
0xa0c PUSH1 0x1
0xa0e PUSH1 0xa0
0xa10 PUSH1 0x2
0xa12 EXP
0xa13 SUB
0xa14 AND
0xa15 PUSH4 0x8da5cb5b
0xa1a PUSH1 0x40
0xa1c MLOAD
0xa1d DUP2
0xa1e PUSH4 0xffffffff
0xa23 AND
0xa24 PUSH1 0xe0
0xa26 PUSH1 0x2
0xa28 EXP
0xa29 MUL
0xa2a DUP2
0xa2b MSTORE
0xa2c PUSH1 0x4
0xa2e ADD
0xa2f PUSH1 0x20
0xa31 PUSH1 0x40
0xa33 MLOAD
0xa34 DUP1
0xa35 DUP4
0xa36 SUB
0xa37 DUP2
0xa38 PUSH1 0x0
0xa3a DUP8
0xa3b DUP1
0xa3c EXTCODESIZE
0xa3d ISZERO
0xa3e ISZERO
0xa3f PUSH2 0xa47
0xa42 JUMPI
---
0xa08: JUMPDEST 
0xa09: V965 = 0x2
0xa0b: V966 = S[0x2]
0xa0c: V967 = 0x1
0xa0e: V968 = 0xa0
0xa10: V969 = 0x2
0xa12: V970 = EXP 0x2 0xa0
0xa13: V971 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa14: V972 = AND 0xffffffffffffffffffffffffffffffffffffffff V966
0xa15: V973 = 0x8da5cb5b
0xa1a: V974 = 0x40
0xa1c: V975 = M[0x40]
0xa1e: V976 = 0xffffffff
0xa23: V977 = AND 0xffffffff 0x8da5cb5b
0xa24: V978 = 0xe0
0xa26: V979 = 0x2
0xa28: V980 = EXP 0x2 0xe0
0xa29: V981 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x8da5cb5b
0xa2b: M[V975] = 0x8da5cb5b00000000000000000000000000000000000000000000000000000000
0xa2c: V982 = 0x4
0xa2e: V983 = ADD 0x4 V975
0xa2f: V984 = 0x20
0xa31: V985 = 0x40
0xa33: V986 = M[0x40]
0xa36: V987 = SUB V983 V986
0xa38: V988 = 0x0
0xa3c: V989 = EXTCODESIZE V972
0xa3d: V990 = ISZERO V989
0xa3e: V991 = ISZERO V990
0xa3f: V992 = 0xa47
0xa42: JUMPI 0xa47 V991
---
Entry stack: [V13, 0x12b, 0x0]
Stack pops: 0
Stack additions: [V972, 0x8da5cb5b, V983, 0x20, V986, V987, V986, 0x0, V972]
Exit stack: [V13, 0x12b, 0x0, V972, 0x8da5cb5b, V983, 0x20, V986, V987, V986, 0x0, V972]

================================

Block 0xa43
[0xa43:0xa46]
---
Predecessors: [0xa08]
Successors: []
---
0xa43 PUSH1 0x0
0xa45 DUP1
0xa46 REVERT
---
0xa43: V993 = 0x0
0xa46: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b, 0x0, V972, 0x8da5cb5b, V983, 0x20, V986, V987, V986, 0x0, V972]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, 0x0, V972, 0x8da5cb5b, V983, 0x20, V986, V987, V986, 0x0, V972]

================================

Block 0xa47
[0xa47:0xa4f]
---
Predecessors: [0xa08]
Successors: [0xa50, 0xa54]
---
0xa47 JUMPDEST
0xa48 GAS
0xa49 CALL
0xa4a ISZERO
0xa4b ISZERO
0xa4c PUSH2 0xa54
0xa4f JUMPI
---
0xa47: JUMPDEST 
0xa48: V994 = GAS
0xa49: V995 = CALL V994 V972 0x0 V986 V987 V986 0x20
0xa4a: V996 = ISZERO V995
0xa4b: V997 = ISZERO V996
0xa4c: V998 = 0xa54
0xa4f: JUMPI 0xa54 V997
---
Entry stack: [V13, 0x12b, 0x0, V972, 0x8da5cb5b, V983, 0x20, V986, V987, V986, 0x0, V972]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x12b, 0x0, V972, 0x8da5cb5b, V983]

================================

Block 0xa50
[0xa50:0xa53]
---
Predecessors: [0xa47]
Successors: []
---
0xa50 PUSH1 0x0
0xa52 DUP1
0xa53 REVERT
---
0xa50: V999 = 0x0
0xa53: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b, 0x0, V972, 0x8da5cb5b, V983]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, 0x0, V972, 0x8da5cb5b, V983]

================================

Block 0xa54
[0xa54:0xa7c]
---
Predecessors: [0xa47]
Successors: [0xa7d, 0xa81]
---
0xa54 JUMPDEST
0xa55 POP
0xa56 POP
0xa57 POP
0xa58 PUSH1 0x40
0xa5a MLOAD
0xa5b DUP1
0xa5c MLOAD
0xa5d SWAP1
0xa5e POP
0xa5f SWAP1
0xa60 POP
0xa61 ADDRESS
0xa62 PUSH1 0x1
0xa64 PUSH1 0xa0
0xa66 PUSH1 0x2
0xa68 EXP
0xa69 SUB
0xa6a AND
0xa6b DUP2
0xa6c PUSH1 0x1
0xa6e PUSH1 0xa0
0xa70 PUSH1 0x2
0xa72 EXP
0xa73 SUB
0xa74 AND
0xa75 EQ
0xa76 ISZERO
0xa77 ISZERO
0xa78 ISZERO
0xa79 PUSH2 0xa81
0xa7c JUMPI
---
0xa54: JUMPDEST 
0xa58: V1000 = 0x40
0xa5a: V1001 = M[0x40]
0xa5c: V1002 = M[V1001]
0xa61: V1003 = ADDRESS
0xa62: V1004 = 0x1
0xa64: V1005 = 0xa0
0xa66: V1006 = 0x2
0xa68: V1007 = EXP 0x2 0xa0
0xa69: V1008 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa6a: V1009 = AND 0xffffffffffffffffffffffffffffffffffffffff V1003
0xa6c: V1010 = 0x1
0xa6e: V1011 = 0xa0
0xa70: V1012 = 0x2
0xa72: V1013 = EXP 0x2 0xa0
0xa73: V1014 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa74: V1015 = AND 0xffffffffffffffffffffffffffffffffffffffff V1002
0xa75: V1016 = EQ V1015 V1009
0xa76: V1017 = ISZERO V1016
0xa77: V1018 = ISZERO V1017
0xa78: V1019 = ISZERO V1018
0xa79: V1020 = 0xa81
0xa7c: JUMPI 0xa81 V1019
---
Entry stack: [V13, 0x12b, 0x0, V972, 0x8da5cb5b, V983]
Stack pops: 4
Stack additions: [V1002]
Exit stack: [V13, 0x12b, V1002]

================================

Block 0xa7d
[0xa7d:0xa80]
---
Predecessors: [0xa54]
Successors: []
---
0xa7d PUSH1 0x0
0xa7f DUP1
0xa80 REVERT
---
0xa7d: V1021 = 0x0
0xa80: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b, V1002]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, V1002]

================================

Block 0xa81
[0xa81:0xa8e]
---
Predecessors: [0xa54]
Successors: []
---
0xa81 JUMPDEST
0xa82 PUSH1 0x0
0xa84 SLOAD
0xa85 PUSH1 0x1
0xa87 PUSH1 0xa0
0xa89 PUSH1 0x2
0xa8b EXP
0xa8c SUB
0xa8d AND
0xa8e SELFDESTRUCT
---
0xa81: JUMPDEST 
0xa82: V1022 = 0x0
0xa84: V1023 = S[0x0]
0xa85: V1024 = 0x1
0xa87: V1025 = 0xa0
0xa89: V1026 = 0x2
0xa8b: V1027 = EXP 0x2 0xa0
0xa8c: V1028 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa8d: V1029 = AND 0xffffffffffffffffffffffffffffffffffffffff V1023
0xa8e: SELFDESTRUCT V1029
---
Entry stack: [V13, 0x12b, V1002]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, V1002]

================================

Block 0xa8f
[0xa8f:0xaa5]
---
Predecessors: [0x245]
Successors: [0xaa6, 0xaaa]
---
0xa8f JUMPDEST
0xa90 PUSH1 0x0
0xa92 SLOAD
0xa93 CALLER
0xa94 PUSH1 0x1
0xa96 PUSH1 0xa0
0xa98 PUSH1 0x2
0xa9a EXP
0xa9b SUB
0xa9c SWAP1
0xa9d DUP2
0xa9e AND
0xa9f SWAP2
0xaa0 AND
0xaa1 EQ
0xaa2 PUSH2 0xaaa
0xaa5 JUMPI
---
0xa8f: JUMPDEST 
0xa90: V1030 = 0x0
0xa92: V1031 = S[0x0]
0xa93: V1032 = CALLER
0xa94: V1033 = 0x1
0xa96: V1034 = 0xa0
0xa98: V1035 = 0x2
0xa9a: V1036 = EXP 0x2 0xa0
0xa9b: V1037 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa9e: V1038 = AND 0xffffffffffffffffffffffffffffffffffffffff V1032
0xaa0: V1039 = AND V1031 0xffffffffffffffffffffffffffffffffffffffff
0xaa1: V1040 = EQ V1039 V1038
0xaa2: V1041 = 0xaaa
0xaa5: JUMPI 0xaaa V1040
---
Entry stack: [V13, 0x12b]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b]

================================

Block 0xaa6
[0xaa6:0xaa9]
---
Predecessors: [0xa8f]
Successors: []
---
0xaa6 PUSH1 0x0
0xaa8 DUP1
0xaa9 REVERT
---
0xaa6: V1042 = 0x0
0xaa9: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b]

================================

Block 0xaaa
[0xaaa:0xabc]
---
Predecessors: [0xa8f]
Successors: [0xabd, 0xac1]
---
0xaaa JUMPDEST
0xaab PUSH1 0x0
0xaad SLOAD
0xaae PUSH1 0xa0
0xab0 PUSH1 0x2
0xab2 EXP
0xab3 SWAP1
0xab4 DIV
0xab5 PUSH1 0xff
0xab7 AND
0xab8 ISZERO
0xab9 PUSH2 0xac1
0xabc JUMPI
---
0xaaa: JUMPDEST 
0xaab: V1043 = 0x0
0xaad: V1044 = S[0x0]
0xaae: V1045 = 0xa0
0xab0: V1046 = 0x2
0xab2: V1047 = EXP 0x2 0xa0
0xab4: V1048 = DIV V1044 0x10000000000000000000000000000000000000000
0xab5: V1049 = 0xff
0xab7: V1050 = AND 0xff V1048
0xab8: V1051 = ISZERO V1050
0xab9: V1052 = 0xac1
0xabc: JUMPI 0xac1 V1051
---
Entry stack: [V13, 0x12b]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b]

================================

Block 0xabd
[0xabd:0xac0]
---
Predecessors: [0xaaa]
Successors: []
---
0xabd PUSH1 0x0
0xabf DUP1
0xac0 REVERT
---
0xabd: V1053 = 0x0
0xac0: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b]

================================

Block 0xac1
[0xac1:0xb12]
---
Predecessors: [0xaaa]
Successors: [0x12b]
---
0xac1 JUMPDEST
0xac2 PUSH1 0x0
0xac4 DUP1
0xac5 SLOAD
0xac6 PUSH21 0xff0000000000000000000000000000000000000000
0xadc NOT
0xadd AND
0xade PUSH1 0xa0
0xae0 PUSH1 0x2
0xae2 EXP
0xae3 OR
0xae4 SWAP1
0xae5 SSTORE
0xae6 PUSH32 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
0xb07 PUSH1 0x40
0xb09 MLOAD
0xb0a PUSH1 0x40
0xb0c MLOAD
0xb0d DUP1
0xb0e SWAP2
0xb0f SUB
0xb10 SWAP1
0xb11 LOG1
0xb12 JUMP
---
0xac1: JUMPDEST 
0xac2: V1054 = 0x0
0xac5: V1055 = S[0x0]
0xac6: V1056 = 0xff0000000000000000000000000000000000000000
0xadc: V1057 = NOT 0xff0000000000000000000000000000000000000000
0xadd: V1058 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V1055
0xade: V1059 = 0xa0
0xae0: V1060 = 0x2
0xae2: V1061 = EXP 0x2 0xa0
0xae3: V1062 = OR 0x10000000000000000000000000000000000000000 V1058
0xae5: S[0x0] = V1062
0xae6: V1063 = 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
0xb07: V1064 = 0x40
0xb09: V1065 = M[0x40]
0xb0a: V1066 = 0x40
0xb0c: V1067 = M[0x40]
0xb0f: V1068 = SUB V1065 V1067
0xb11: LOG V1067 V1068 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
0xb12: JUMP 0x12b
---
Entry stack: [V13, 0x12b]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0xb13
[0xb13:0xb21]
---
Predecessors: [0x258]
Successors: [0xfa]
---
0xb13 JUMPDEST
0xb14 PUSH1 0x0
0xb16 SLOAD
0xb17 PUSH1 0x1
0xb19 PUSH1 0xa0
0xb1b PUSH1 0x2
0xb1d EXP
0xb1e SUB
0xb1f AND
0xb20 DUP2
0xb21 JUMP
---
0xb13: JUMPDEST 
0xb14: V1069 = 0x0
0xb16: V1070 = S[0x0]
0xb17: V1071 = 0x1
0xb19: V1072 = 0xa0
0xb1b: V1073 = 0x2
0xb1d: V1074 = EXP 0x2 0xa0
0xb1e: V1075 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb1f: V1076 = AND 0xffffffffffffffffffffffffffffffffffffffff V1070
0xb21: JUMP 0xfa
---
Entry stack: [V13, 0xfa]
Stack pops: 1
Stack additions: [S0, V1076]
Exit stack: [V13, 0xfa, V1076]

================================

Block 0xb22
[0xb22:0xb31]
---
Predecessors: [0x26b]
Successors: [0x1e1]
---
0xb22 JUMPDEST
0xb23 PUSH1 0x2
0xb25 SLOAD
0xb26 PUSH1 0xa0
0xb28 PUSH1 0x2
0xb2a EXP
0xb2b SWAP1
0xb2c DIV
0xb2d PUSH1 0xff
0xb2f AND
0xb30 DUP2
0xb31 JUMP
---
0xb22: JUMPDEST 
0xb23: V1077 = 0x2
0xb25: V1078 = S[0x2]
0xb26: V1079 = 0xa0
0xb28: V1080 = 0x2
0xb2a: V1081 = EXP 0x2 0xa0
0xb2c: V1082 = DIV V1078 0x10000000000000000000000000000000000000000
0xb2d: V1083 = 0xff
0xb2f: V1084 = AND 0xff V1082
0xb31: JUMP 0x1e1
---
Entry stack: [V13, 0x1e1]
Stack pops: 1
Stack additions: [S0, V1084]
Exit stack: [V13, 0x1e1, V1084]

================================

Block 0xb32
[0xb32:0xb48]
---
Predecessors: [0x27e]
Successors: [0xb49, 0xb4d]
---
0xb32 JUMPDEST
0xb33 PUSH1 0x0
0xb35 SLOAD
0xb36 CALLER
0xb37 PUSH1 0x1
0xb39 PUSH1 0xa0
0xb3b PUSH1 0x2
0xb3d EXP
0xb3e SUB
0xb3f SWAP1
0xb40 DUP2
0xb41 AND
0xb42 SWAP2
0xb43 AND
0xb44 EQ
0xb45 PUSH2 0xb4d
0xb48 JUMPI
---
0xb32: JUMPDEST 
0xb33: V1085 = 0x0
0xb35: V1086 = S[0x0]
0xb36: V1087 = CALLER
0xb37: V1088 = 0x1
0xb39: V1089 = 0xa0
0xb3b: V1090 = 0x2
0xb3d: V1091 = EXP 0x2 0xa0
0xb3e: V1092 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb41: V1093 = AND 0xffffffffffffffffffffffffffffffffffffffff V1087
0xb43: V1094 = AND V1086 0xffffffffffffffffffffffffffffffffffffffff
0xb44: V1095 = EQ V1094 V1093
0xb45: V1096 = 0xb4d
0xb48: JUMPI 0xb4d V1095
---
Entry stack: [V13, 0x12b, V217]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, V217]

================================

Block 0xb49
[0xb49:0xb4c]
---
Predecessors: [0xb32]
Successors: []
---
0xb49 PUSH1 0x0
0xb4b DUP1
0xb4c REVERT
---
0xb49: V1097 = 0x0
0xb4c: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b, V217]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, V217]

================================

Block 0xb4d
[0xb4d:0xb60]
---
Predecessors: [0xb32]
Successors: [0xb61, 0xb65]
---
0xb4d JUMPDEST
0xb4e PUSH1 0x0
0xb50 SLOAD
0xb51 PUSH1 0xa0
0xb53 PUSH1 0x2
0xb55 EXP
0xb56 SWAP1
0xb57 DIV
0xb58 PUSH1 0xff
0xb5a AND
0xb5b ISZERO
0xb5c ISZERO
0xb5d PUSH2 0xb65
0xb60 JUMPI
---
0xb4d: JUMPDEST 
0xb4e: V1098 = 0x0
0xb50: V1099 = S[0x0]
0xb51: V1100 = 0xa0
0xb53: V1101 = 0x2
0xb55: V1102 = EXP 0x2 0xa0
0xb57: V1103 = DIV V1099 0x10000000000000000000000000000000000000000
0xb58: V1104 = 0xff
0xb5a: V1105 = AND 0xff V1103
0xb5b: V1106 = ISZERO V1105
0xb5c: V1107 = ISZERO V1106
0xb5d: V1108 = 0xb65
0xb60: JUMPI 0xb65 V1107
---
Entry stack: [V13, 0x12b, V217]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, V217]

================================

Block 0xb61
[0xb61:0xb64]
---
Predecessors: [0xb4d]
Successors: []
---
0xb61 PUSH1 0x0
0xb63 DUP1
0xb64 REVERT
---
0xb61: V1109 = 0x0
0xb64: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b, V217]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, V217]

================================

Block 0xb65
[0xb65:0xbab]
---
Predecessors: [0xb4d]
Successors: [0xbac, 0xbb0]
---
0xb65 JUMPDEST
0xb66 PUSH1 0x3
0xb68 SLOAD
0xb69 PUSH1 0x1
0xb6b PUSH1 0xa0
0xb6d PUSH1 0x2
0xb6f EXP
0xb70 SUB
0xb71 AND
0xb72 PUSH4 0xa22d5a51
0xb77 DUP3
0xb78 PUSH1 0x40
0xb7a MLOAD
0xb7b PUSH1 0xe0
0xb7d PUSH1 0x2
0xb7f EXP
0xb80 PUSH4 0xffffffff
0xb85 DUP5
0xb86 AND
0xb87 MUL
0xb88 DUP2
0xb89 MSTORE
0xb8a PUSH2 0xffff
0xb8d SWAP1
0xb8e SWAP2
0xb8f AND
0xb90 PUSH1 0x4
0xb92 DUP3
0xb93 ADD
0xb94 MSTORE
0xb95 PUSH1 0x24
0xb97 ADD
0xb98 PUSH1 0x0
0xb9a PUSH1 0x40
0xb9c MLOAD
0xb9d DUP1
0xb9e DUP4
0xb9f SUB
0xba0 DUP2
0xba1 PUSH1 0x0
0xba3 DUP8
0xba4 DUP1
0xba5 EXTCODESIZE
0xba6 ISZERO
0xba7 ISZERO
0xba8 PUSH2 0xbb0
0xbab JUMPI
---
0xb65: JUMPDEST 
0xb66: V1110 = 0x3
0xb68: V1111 = S[0x3]
0xb69: V1112 = 0x1
0xb6b: V1113 = 0xa0
0xb6d: V1114 = 0x2
0xb6f: V1115 = EXP 0x2 0xa0
0xb70: V1116 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb71: V1117 = AND 0xffffffffffffffffffffffffffffffffffffffff V1111
0xb72: V1118 = 0xa22d5a51
0xb78: V1119 = 0x40
0xb7a: V1120 = M[0x40]
0xb7b: V1121 = 0xe0
0xb7d: V1122 = 0x2
0xb7f: V1123 = EXP 0x2 0xe0
0xb80: V1124 = 0xffffffff
0xb86: V1125 = AND 0xa22d5a51 0xffffffff
0xb87: V1126 = MUL 0xa22d5a51 0x100000000000000000000000000000000000000000000000000000000
0xb89: M[V1120] = 0xa22d5a5100000000000000000000000000000000000000000000000000000000
0xb8a: V1127 = 0xffff
0xb8f: V1128 = AND V217 0xffff
0xb90: V1129 = 0x4
0xb93: V1130 = ADD V1120 0x4
0xb94: M[V1130] = V1128
0xb95: V1131 = 0x24
0xb97: V1132 = ADD 0x24 V1120
0xb98: V1133 = 0x0
0xb9a: V1134 = 0x40
0xb9c: V1135 = M[0x40]
0xb9f: V1136 = SUB V1132 V1135
0xba1: V1137 = 0x0
0xba5: V1138 = EXTCODESIZE V1117
0xba6: V1139 = ISZERO V1138
0xba7: V1140 = ISZERO V1139
0xba8: V1141 = 0xbb0
0xbab: JUMPI 0xbb0 V1140
---
Entry stack: [V13, 0x12b, V217]
Stack pops: 1
Stack additions: [S0, V1117, 0xa22d5a51, V1132, 0x0, V1135, V1136, V1135, 0x0, V1117]
Exit stack: [V13, 0x12b, V217, V1117, 0xa22d5a51, V1132, 0x0, V1135, V1136, V1135, 0x0, V1117]

================================

Block 0xbac
[0xbac:0xbaf]
---
Predecessors: [0xb65]
Successors: []
---
0xbac PUSH1 0x0
0xbae DUP1
0xbaf REVERT
---
0xbac: V1142 = 0x0
0xbaf: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b, V217, V1117, 0xa22d5a51, V1132, 0x0, V1135, V1136, V1135, 0x0, V1117]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, V217, V1117, 0xa22d5a51, V1132, 0x0, V1135, V1136, V1135, 0x0, V1117]

================================

Block 0xbb0
[0xbb0:0xbb8]
---
Predecessors: [0xb65]
Successors: [0xbb9, 0xbbd]
---
0xbb0 JUMPDEST
0xbb1 GAS
0xbb2 CALL
0xbb3 ISZERO
0xbb4 ISZERO
0xbb5 PUSH2 0xbbd
0xbb8 JUMPI
---
0xbb0: JUMPDEST 
0xbb1: V1143 = GAS
0xbb2: V1144 = CALL V1143 V1117 0x0 V1135 V1136 V1135 0x0
0xbb3: V1145 = ISZERO V1144
0xbb4: V1146 = ISZERO V1145
0xbb5: V1147 = 0xbbd
0xbb8: JUMPI 0xbbd V1146
---
Entry stack: [V13, 0x12b, V217, V1117, 0xa22d5a51, V1132, 0x0, V1135, V1136, V1135, 0x0, V1117]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x12b, V217, V1117, 0xa22d5a51, V1132]

================================

Block 0xbb9
[0xbb9:0xbbc]
---
Predecessors: [0xbb0]
Successors: []
---
0xbb9 PUSH1 0x0
0xbbb DUP1
0xbbc REVERT
---
0xbb9: V1148 = 0x0
0xbbc: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b, V217, V1117, 0xa22d5a51, V1132]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, V217, V1117, 0xa22d5a51, V1132]

================================

Block 0xbbd
[0xbbd:0xbc2]
---
Predecessors: [0xbb0]
Successors: [0x12b]
---
0xbbd JUMPDEST
0xbbe POP
0xbbf POP
0xbc0 POP
0xbc1 POP
0xbc2 JUMP
---
0xbbd: JUMPDEST 
0xbc2: JUMP 0x12b
---
Entry stack: [V13, 0x12b, V217, V1117, 0xa22d5a51, V1132]
Stack pops: 5
Stack additions: []
Exit stack: [V13]

================================

Block 0xbc3
[0xbc3:0xbd9]
---
Predecessors: [0x298]
Successors: [0xbda, 0xbde]
---
0xbc3 JUMPDEST
0xbc4 PUSH1 0x0
0xbc6 SLOAD
0xbc7 CALLER
0xbc8 PUSH1 0x1
0xbca PUSH1 0xa0
0xbcc PUSH1 0x2
0xbce EXP
0xbcf SUB
0xbd0 SWAP1
0xbd1 DUP2
0xbd2 AND
0xbd3 SWAP2
0xbd4 AND
0xbd5 EQ
0xbd6 PUSH2 0xbde
0xbd9 JUMPI
---
0xbc3: JUMPDEST 
0xbc4: V1149 = 0x0
0xbc6: V1150 = S[0x0]
0xbc7: V1151 = CALLER
0xbc8: V1152 = 0x1
0xbca: V1153 = 0xa0
0xbcc: V1154 = 0x2
0xbce: V1155 = EXP 0x2 0xa0
0xbcf: V1156 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbd2: V1157 = AND 0xffffffffffffffffffffffffffffffffffffffff V1151
0xbd4: V1158 = AND V1150 0xffffffffffffffffffffffffffffffffffffffff
0xbd5: V1159 = EQ V1158 V1157
0xbd6: V1160 = 0xbde
0xbd9: JUMPI 0xbde V1159
---
Entry stack: [V13, 0x12b, V227, V230, V234, V238, V241]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, V227, V230, V234, V238, V241]

================================

Block 0xbda
[0xbda:0xbdd]
---
Predecessors: [0xbc3]
Successors: []
---
0xbda PUSH1 0x0
0xbdc DUP1
0xbdd REVERT
---
0xbda: V1161 = 0x0
0xbdd: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b, V227, V230, V234, V238, V241]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, V227, V230, V234, V238, V241]

================================

Block 0xbde
[0xbde:0xbf0]
---
Predecessors: [0xbc3]
Successors: [0xbf1, 0xbf5]
---
0xbde JUMPDEST
0xbdf PUSH1 0x0
0xbe1 SLOAD
0xbe2 PUSH1 0xa0
0xbe4 PUSH1 0x2
0xbe6 EXP
0xbe7 SWAP1
0xbe8 DIV
0xbe9 PUSH1 0xff
0xbeb AND
0xbec ISZERO
0xbed PUSH2 0xbf5
0xbf0 JUMPI
---
0xbde: JUMPDEST 
0xbdf: V1162 = 0x0
0xbe1: V1163 = S[0x0]
0xbe2: V1164 = 0xa0
0xbe4: V1165 = 0x2
0xbe6: V1166 = EXP 0x2 0xa0
0xbe8: V1167 = DIV V1163 0x10000000000000000000000000000000000000000
0xbe9: V1168 = 0xff
0xbeb: V1169 = AND 0xff V1167
0xbec: V1170 = ISZERO V1169
0xbed: V1171 = 0xbf5
0xbf0: JUMPI 0xbf5 V1170
---
Entry stack: [V13, 0x12b, V227, V230, V234, V238, V241]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, V227, V230, V234, V238, V241]

================================

Block 0xbf1
[0xbf1:0xbf4]
---
Predecessors: [0xbde]
Successors: []
---
0xbf1 PUSH1 0x0
0xbf3 DUP1
0xbf4 REVERT
---
0xbf1: V1172 = 0x0
0xbf4: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b, V227, V230, V234, V238, V241]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, V227, V230, V234, V238, V241]

================================

Block 0xbf5
[0xbf5:0xc7b]
---
Predecessors: [0xbde]
Successors: [0xc7c, 0xc80]
---
0xbf5 JUMPDEST
0xbf6 PUSH1 0x3
0xbf8 SLOAD
0xbf9 PUSH1 0x1
0xbfb PUSH1 0xa0
0xbfd PUSH1 0x2
0xbff EXP
0xc00 SUB
0xc01 AND
0xc02 PUSH4 0xa7cebd4d
0xc07 DUP7
0xc08 DUP7
0xc09 DUP7
0xc0a DUP7
0xc0b DUP7
0xc0c PUSH1 0x40
0xc0e MLOAD
0xc0f PUSH1 0xe0
0xc11 PUSH1 0x2
0xc13 EXP
0xc14 PUSH4 0xffffffff
0xc19 DUP9
0xc1a AND
0xc1b MUL
0xc1c DUP2
0xc1d MSTORE
0xc1e PUSH2 0xffff
0xc21 SWAP6
0xc22 DUP7
0xc23 AND
0xc24 PUSH1 0x4
0xc26 DUP3
0xc27 ADD
0xc28 MSTORE
0xc29 SWAP4
0xc2a SWAP1
0xc2b SWAP5
0xc2c AND
0xc2d PUSH1 0x24
0xc2f DUP5
0xc30 ADD
0xc31 MSTORE
0xc32 PUSH16 0xffffffffffffffffffffffffffffffff
0xc43 SWAP1
0xc44 SWAP2
0xc45 AND
0xc46 PUSH1 0x44
0xc48 DUP4
0xc49 ADD
0xc4a MSTORE
0xc4b PUSH8 0xffffffffffffffff
0xc54 SWAP1
0xc55 DUP2
0xc56 AND
0xc57 PUSH1 0x64
0xc59 DUP4
0xc5a ADD
0xc5b MSTORE
0xc5c SWAP2
0xc5d SWAP1
0xc5e SWAP2
0xc5f AND
0xc60 PUSH1 0x84
0xc62 DUP3
0xc63 ADD
0xc64 MSTORE
0xc65 PUSH1 0xa4
0xc67 ADD
0xc68 PUSH1 0x0
0xc6a PUSH1 0x40
0xc6c MLOAD
0xc6d DUP1
0xc6e DUP4
0xc6f SUB
0xc70 DUP2
0xc71 PUSH1 0x0
0xc73 DUP8
0xc74 DUP1
0xc75 EXTCODESIZE
0xc76 ISZERO
0xc77 ISZERO
0xc78 PUSH2 0xc80
0xc7b JUMPI
---
0xbf5: JUMPDEST 
0xbf6: V1173 = 0x3
0xbf8: V1174 = S[0x3]
0xbf9: V1175 = 0x1
0xbfb: V1176 = 0xa0
0xbfd: V1177 = 0x2
0xbff: V1178 = EXP 0x2 0xa0
0xc00: V1179 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc01: V1180 = AND 0xffffffffffffffffffffffffffffffffffffffff V1174
0xc02: V1181 = 0xa7cebd4d
0xc0c: V1182 = 0x40
0xc0e: V1183 = M[0x40]
0xc0f: V1184 = 0xe0
0xc11: V1185 = 0x2
0xc13: V1186 = EXP 0x2 0xe0
0xc14: V1187 = 0xffffffff
0xc1a: V1188 = AND 0xa7cebd4d 0xffffffff
0xc1b: V1189 = MUL 0xa7cebd4d 0x100000000000000000000000000000000000000000000000000000000
0xc1d: M[V1183] = 0xa7cebd4d00000000000000000000000000000000000000000000000000000000
0xc1e: V1190 = 0xffff
0xc23: V1191 = AND 0xffff V227
0xc24: V1192 = 0x4
0xc27: V1193 = ADD V1183 0x4
0xc28: M[V1193] = V1191
0xc2c: V1194 = AND 0xffff V230
0xc2d: V1195 = 0x24
0xc30: V1196 = ADD V1183 0x24
0xc31: M[V1196] = V1194
0xc32: V1197 = 0xffffffffffffffffffffffffffffffff
0xc45: V1198 = AND V234 0xffffffffffffffffffffffffffffffff
0xc46: V1199 = 0x44
0xc49: V1200 = ADD V1183 0x44
0xc4a: M[V1200] = V1198
0xc4b: V1201 = 0xffffffffffffffff
0xc56: V1202 = AND 0xffffffffffffffff V238
0xc57: V1203 = 0x64
0xc5a: V1204 = ADD V1183 0x64
0xc5b: M[V1204] = V1202
0xc5f: V1205 = AND 0xffffffffffffffff V241
0xc60: V1206 = 0x84
0xc63: V1207 = ADD V1183 0x84
0xc64: M[V1207] = V1205
0xc65: V1208 = 0xa4
0xc67: V1209 = ADD 0xa4 V1183
0xc68: V1210 = 0x0
0xc6a: V1211 = 0x40
0xc6c: V1212 = M[0x40]
0xc6f: V1213 = SUB V1209 V1212
0xc71: V1214 = 0x0
0xc75: V1215 = EXTCODESIZE V1180
0xc76: V1216 = ISZERO V1215
0xc77: V1217 = ISZERO V1216
0xc78: V1218 = 0xc80
0xc7b: JUMPI 0xc80 V1217
---
Entry stack: [V13, 0x12b, V227, V230, V234, V238, V241]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V1180, 0xa7cebd4d, V1209, 0x0, V1212, V1213, V1212, 0x0, V1180]
Exit stack: [V13, 0x12b, V227, V230, V234, V238, V241, V1180, 0xa7cebd4d, V1209, 0x0, V1212, V1213, V1212, 0x0, V1180]

================================

Block 0xc7c
[0xc7c:0xc7f]
---
Predecessors: [0xbf5]
Successors: []
---
0xc7c PUSH1 0x0
0xc7e DUP1
0xc7f REVERT
---
0xc7c: V1219 = 0x0
0xc7f: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b, V227, V230, V234, V238, V241, V1180, 0xa7cebd4d, V1209, 0x0, V1212, V1213, V1212, 0x0, V1180]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, V227, V230, V234, V238, V241, V1180, 0xa7cebd4d, V1209, 0x0, V1212, V1213, V1212, 0x0, V1180]

================================

Block 0xc80
[0xc80:0xc88]
---
Predecessors: [0xbf5]
Successors: [0xc89, 0xc8d]
---
0xc80 JUMPDEST
0xc81 GAS
0xc82 CALL
0xc83 ISZERO
0xc84 ISZERO
0xc85 PUSH2 0xc8d
0xc88 JUMPI
---
0xc80: JUMPDEST 
0xc81: V1220 = GAS
0xc82: V1221 = CALL V1220 V1180 0x0 V1212 V1213 V1212 0x0
0xc83: V1222 = ISZERO V1221
0xc84: V1223 = ISZERO V1222
0xc85: V1224 = 0xc8d
0xc88: JUMPI 0xc8d V1223
---
Entry stack: [V13, 0x12b, V227, V230, V234, V238, V241, V1180, 0xa7cebd4d, V1209, 0x0, V1212, V1213, V1212, 0x0, V1180]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x12b, V227, V230, V234, V238, V241, V1180, 0xa7cebd4d, V1209]

================================

Block 0xc89
[0xc89:0xc8c]
---
Predecessors: [0xc80]
Successors: []
---
0xc89 PUSH1 0x0
0xc8b DUP1
0xc8c REVERT
---
0xc89: V1225 = 0x0
0xc8c: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b, V227, V230, V234, V238, V241, V1180, 0xa7cebd4d, V1209]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, V227, V230, V234, V238, V241, V1180, 0xa7cebd4d, V1209]

================================

Block 0xc8d
[0xc8d:0xcce]
---
Predecessors: [0xc80]
Successors: [0x12b]
---
0xc8d JUMPDEST
0xc8e POP
0xc8f POP
0xc90 POP
0xc91 PUSH32 0xe4f5fd0349c3ee5c3d79f73440e2304b49ff2aae9b05d1e65b8c99d596dc0326
0xcb2 DUP6
0xcb3 PUSH1 0x40
0xcb5 MLOAD
0xcb6 PUSH2 0xffff
0xcb9 SWAP1
0xcba SWAP2
0xcbb AND
0xcbc DUP2
0xcbd MSTORE
0xcbe PUSH1 0x20
0xcc0 ADD
0xcc1 PUSH1 0x40
0xcc3 MLOAD
0xcc4 DUP1
0xcc5 SWAP2
0xcc6 SUB
0xcc7 SWAP1
0xcc8 LOG1
0xcc9 POP
0xcca POP
0xccb POP
0xccc POP
0xccd POP
0xcce JUMP
---
0xc8d: JUMPDEST 
0xc91: V1226 = 0xe4f5fd0349c3ee5c3d79f73440e2304b49ff2aae9b05d1e65b8c99d596dc0326
0xcb3: V1227 = 0x40
0xcb5: V1228 = M[0x40]
0xcb6: V1229 = 0xffff
0xcbb: V1230 = AND V227 0xffff
0xcbd: M[V1228] = V1230
0xcbe: V1231 = 0x20
0xcc0: V1232 = ADD 0x20 V1228
0xcc1: V1233 = 0x40
0xcc3: V1234 = M[0x40]
0xcc6: V1235 = SUB V1232 V1234
0xcc8: LOG V1234 V1235 0xe4f5fd0349c3ee5c3d79f73440e2304b49ff2aae9b05d1e65b8c99d596dc0326
0xcce: JUMP 0x12b
---
Entry stack: [V13, 0x12b, V227, V230, V234, V238, V241, V1180, 0xa7cebd4d, V1209]
Stack pops: 9
Stack additions: []
Exit stack: [V13]

================================

Block 0xccf
[0xccf:0xce6]
---
Predecessors: [0x2e0]
Successors: [0xce7, 0xceb]
---
0xccf JUMPDEST
0xcd0 PUSH1 0x0
0xcd2 DUP1
0xcd3 SLOAD
0xcd4 CALLER
0xcd5 PUSH1 0x1
0xcd7 PUSH1 0xa0
0xcd9 PUSH1 0x2
0xcdb EXP
0xcdc SUB
0xcdd SWAP1
0xcde DUP2
0xcdf AND
0xce0 SWAP2
0xce1 AND
0xce2 EQ
0xce3 PUSH2 0xceb
0xce6 JUMPI
---
0xccf: JUMPDEST 
0xcd0: V1236 = 0x0
0xcd3: V1237 = S[0x0]
0xcd4: V1238 = CALLER
0xcd5: V1239 = 0x1
0xcd7: V1240 = 0xa0
0xcd9: V1241 = 0x2
0xcdb: V1242 = EXP 0x2 0xa0
0xcdc: V1243 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcdf: V1244 = AND 0xffffffffffffffffffffffffffffffffffffffff V1238
0xce1: V1245 = AND V1237 0xffffffffffffffffffffffffffffffffffffffff
0xce2: V1246 = EQ V1245 V1244
0xce3: V1247 = 0xceb
0xce6: JUMPI 0xceb V1246
---
Entry stack: [V13, 0x12b]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x12b, 0x0]

================================

Block 0xce7
[0xce7:0xcea]
---
Predecessors: [0xccf]
Successors: []
---
0xce7 PUSH1 0x0
0xce9 DUP1
0xcea REVERT
---
0xce7: V1248 = 0x0
0xcea: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, 0x0]

================================

Block 0xceb
[0xceb:0xcfe]
---
Predecessors: [0xccf]
Successors: [0xcff, 0xd03]
---
0xceb JUMPDEST
0xcec PUSH1 0x0
0xcee SLOAD
0xcef PUSH1 0xa0
0xcf1 PUSH1 0x2
0xcf3 EXP
0xcf4 SWAP1
0xcf5 DIV
0xcf6 PUSH1 0xff
0xcf8 AND
0xcf9 ISZERO
0xcfa ISZERO
0xcfb PUSH2 0xd03
0xcfe JUMPI
---
0xceb: JUMPDEST 
0xcec: V1249 = 0x0
0xcee: V1250 = S[0x0]
0xcef: V1251 = 0xa0
0xcf1: V1252 = 0x2
0xcf3: V1253 = EXP 0x2 0xa0
0xcf5: V1254 = DIV V1250 0x10000000000000000000000000000000000000000
0xcf6: V1255 = 0xff
0xcf8: V1256 = AND 0xff V1254
0xcf9: V1257 = ISZERO V1256
0xcfa: V1258 = ISZERO V1257
0xcfb: V1259 = 0xd03
0xcfe: JUMPI 0xd03 V1258
---
Entry stack: [V13, 0x12b, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, 0x0]

================================

Block 0xcff
[0xcff:0xd02]
---
Predecessors: [0xceb]
Successors: []
---
0xcff PUSH1 0x0
0xd01 DUP1
0xd02 REVERT
---
0xcff: V1260 = 0x0
0xd02: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, 0x0]

================================

Block 0xd03
[0xd03:0xd3d]
---
Predecessors: [0xceb]
Successors: [0xd3e, 0xd42]
---
0xd03 JUMPDEST
0xd04 PUSH1 0x2
0xd06 SLOAD
0xd07 PUSH1 0x1
0xd09 PUSH1 0xa0
0xd0b PUSH1 0x2
0xd0d EXP
0xd0e SUB
0xd0f AND
0xd10 PUSH4 0x8da5cb5b
0xd15 PUSH1 0x40
0xd17 MLOAD
0xd18 DUP2
0xd19 PUSH4 0xffffffff
0xd1e AND
0xd1f PUSH1 0xe0
0xd21 PUSH1 0x2
0xd23 EXP
0xd24 MUL
0xd25 DUP2
0xd26 MSTORE
0xd27 PUSH1 0x4
0xd29 ADD
0xd2a PUSH1 0x20
0xd2c PUSH1 0x40
0xd2e MLOAD
0xd2f DUP1
0xd30 DUP4
0xd31 SUB
0xd32 DUP2
0xd33 PUSH1 0x0
0xd35 DUP8
0xd36 DUP1
0xd37 EXTCODESIZE
0xd38 ISZERO
0xd39 ISZERO
0xd3a PUSH2 0xd42
0xd3d JUMPI
---
0xd03: JUMPDEST 
0xd04: V1261 = 0x2
0xd06: V1262 = S[0x2]
0xd07: V1263 = 0x1
0xd09: V1264 = 0xa0
0xd0b: V1265 = 0x2
0xd0d: V1266 = EXP 0x2 0xa0
0xd0e: V1267 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd0f: V1268 = AND 0xffffffffffffffffffffffffffffffffffffffff V1262
0xd10: V1269 = 0x8da5cb5b
0xd15: V1270 = 0x40
0xd17: V1271 = M[0x40]
0xd19: V1272 = 0xffffffff
0xd1e: V1273 = AND 0xffffffff 0x8da5cb5b
0xd1f: V1274 = 0xe0
0xd21: V1275 = 0x2
0xd23: V1276 = EXP 0x2 0xe0
0xd24: V1277 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x8da5cb5b
0xd26: M[V1271] = 0x8da5cb5b00000000000000000000000000000000000000000000000000000000
0xd27: V1278 = 0x4
0xd29: V1279 = ADD 0x4 V1271
0xd2a: V1280 = 0x20
0xd2c: V1281 = 0x40
0xd2e: V1282 = M[0x40]
0xd31: V1283 = SUB V1279 V1282
0xd33: V1284 = 0x0
0xd37: V1285 = EXTCODESIZE V1268
0xd38: V1286 = ISZERO V1285
0xd39: V1287 = ISZERO V1286
0xd3a: V1288 = 0xd42
0xd3d: JUMPI 0xd42 V1287
---
Entry stack: [V13, 0x12b, 0x0]
Stack pops: 0
Stack additions: [V1268, 0x8da5cb5b, V1279, 0x20, V1282, V1283, V1282, 0x0, V1268]
Exit stack: [V13, 0x12b, 0x0, V1268, 0x8da5cb5b, V1279, 0x20, V1282, V1283, V1282, 0x0, V1268]

================================

Block 0xd3e
[0xd3e:0xd41]
---
Predecessors: [0xd03]
Successors: []
---
0xd3e PUSH1 0x0
0xd40 DUP1
0xd41 REVERT
---
0xd3e: V1289 = 0x0
0xd41: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b, 0x0, V1268, 0x8da5cb5b, V1279, 0x20, V1282, V1283, V1282, 0x0, V1268]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, 0x0, V1268, 0x8da5cb5b, V1279, 0x20, V1282, V1283, V1282, 0x0, V1268]

================================

Block 0xd42
[0xd42:0xd4a]
---
Predecessors: [0xd03]
Successors: [0xd4b, 0xd4f]
---
0xd42 JUMPDEST
0xd43 GAS
0xd44 CALL
0xd45 ISZERO
0xd46 ISZERO
0xd47 PUSH2 0xd4f
0xd4a JUMPI
---
0xd42: JUMPDEST 
0xd43: V1290 = GAS
0xd44: V1291 = CALL V1290 V1268 0x0 V1282 V1283 V1282 0x20
0xd45: V1292 = ISZERO V1291
0xd46: V1293 = ISZERO V1292
0xd47: V1294 = 0xd4f
0xd4a: JUMPI 0xd4f V1293
---
Entry stack: [V13, 0x12b, 0x0, V1268, 0x8da5cb5b, V1279, 0x20, V1282, V1283, V1282, 0x0, V1268]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x12b, 0x0, V1268, 0x8da5cb5b, V1279]

================================

Block 0xd4b
[0xd4b:0xd4e]
---
Predecessors: [0xd42]
Successors: []
---
0xd4b PUSH1 0x0
0xd4d DUP1
0xd4e REVERT
---
0xd4b: V1295 = 0x0
0xd4e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b, 0x0, V1268, 0x8da5cb5b, V1279]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, 0x0, V1268, 0x8da5cb5b, V1279]

================================

Block 0xd4f
[0xd4f:0xd77]
---
Predecessors: [0xd42]
Successors: [0xd78, 0xd7c]
---
0xd4f JUMPDEST
0xd50 POP
0xd51 POP
0xd52 POP
0xd53 PUSH1 0x40
0xd55 MLOAD
0xd56 DUP1
0xd57 MLOAD
0xd58 SWAP1
0xd59 POP
0xd5a SWAP1
0xd5b POP
0xd5c ADDRESS
0xd5d PUSH1 0x1
0xd5f PUSH1 0xa0
0xd61 PUSH1 0x2
0xd63 EXP
0xd64 SUB
0xd65 AND
0xd66 DUP2
0xd67 PUSH1 0x1
0xd69 PUSH1 0xa0
0xd6b PUSH1 0x2
0xd6d EXP
0xd6e SUB
0xd6f AND
0xd70 EQ
0xd71 ISZERO
0xd72 ISZERO
0xd73 ISZERO
0xd74 PUSH2 0xd7c
0xd77 JUMPI
---
0xd4f: JUMPDEST 
0xd53: V1296 = 0x40
0xd55: V1297 = M[0x40]
0xd57: V1298 = M[V1297]
0xd5c: V1299 = ADDRESS
0xd5d: V1300 = 0x1
0xd5f: V1301 = 0xa0
0xd61: V1302 = 0x2
0xd63: V1303 = EXP 0x2 0xa0
0xd64: V1304 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd65: V1305 = AND 0xffffffffffffffffffffffffffffffffffffffff V1299
0xd67: V1306 = 0x1
0xd69: V1307 = 0xa0
0xd6b: V1308 = 0x2
0xd6d: V1309 = EXP 0x2 0xa0
0xd6e: V1310 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd6f: V1311 = AND 0xffffffffffffffffffffffffffffffffffffffff V1298
0xd70: V1312 = EQ V1311 V1305
0xd71: V1313 = ISZERO V1312
0xd72: V1314 = ISZERO V1313
0xd73: V1315 = ISZERO V1314
0xd74: V1316 = 0xd7c
0xd77: JUMPI 0xd7c V1315
---
Entry stack: [V13, 0x12b, 0x0, V1268, 0x8da5cb5b, V1279]
Stack pops: 4
Stack additions: [V1298]
Exit stack: [V13, 0x12b, V1298]

================================

Block 0xd78
[0xd78:0xd7b]
---
Predecessors: [0xd4f]
Successors: []
---
0xd78 PUSH1 0x0
0xd7a DUP1
0xd7b REVERT
---
0xd78: V1317 = 0x0
0xd7b: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b, V1298]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, V1298]

================================

Block 0xd7c
[0xd7c:0xd87]
---
Predecessors: [0xd4f]
Successors: []
---
0xd7c JUMPDEST
0xd7d DUP1
0xd7e PUSH1 0x1
0xd80 PUSH1 0xa0
0xd82 PUSH1 0x2
0xd84 EXP
0xd85 SUB
0xd86 AND
0xd87 SELFDESTRUCT
---
0xd7c: JUMPDEST 
0xd7e: V1318 = 0x1
0xd80: V1319 = 0xa0
0xd82: V1320 = 0x2
0xd84: V1321 = EXP 0x2 0xa0
0xd85: V1322 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd86: V1323 = AND 0xffffffffffffffffffffffffffffffffffffffff V1298
0xd87: SELFDESTRUCT V1323
---
Entry stack: [V13, 0x12b, V1298]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x12b, V1298]

================================

Block 0xd88
[0xd88:0xdaa]
---
Predecessors: [0x2f3]
Successors: [0xdab, 0xdc1]
---
0xd88 JUMPDEST
0xd89 PUSH1 0x1
0xd8b SLOAD
0xd8c PUSH1 0x0
0xd8e DUP1
0xd8f SLOAD
0xd90 SWAP1
0xd91 SWAP2
0xd92 PUSH1 0x1
0xd94 PUSH1 0xa0
0xd96 PUSH1 0x2
0xd98 EXP
0xd99 SUB
0xd9a SWAP1
0xd9b DUP2
0xd9c AND
0xd9d SWAP2
0xd9e DUP4
0xd9f SWAP2
0xda0 CALLER
0xda1 DUP2
0xda2 AND
0xda3 SWAP2
0xda4 AND
0xda5 EQ
0xda6 DUP1
0xda7 PUSH2 0xdc1
0xdaa JUMPI
---
0xd88: JUMPDEST 
0xd89: V1324 = 0x1
0xd8b: V1325 = S[0x1]
0xd8c: V1326 = 0x0
0xd8f: V1327 = S[0x0]
0xd92: V1328 = 0x1
0xd94: V1329 = 0xa0
0xd96: V1330 = 0x2
0xd98: V1331 = EXP 0x2 0xa0
0xd99: V1332 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd9c: V1333 = AND 0xffffffffffffffffffffffffffffffffffffffff V1325
0xda0: V1334 = CALLER
0xda2: V1335 = AND 0xffffffffffffffffffffffffffffffffffffffff V1334
0xda4: V1336 = AND V1327 0xffffffffffffffffffffffffffffffffffffffff
0xda5: V1337 = EQ V1336 V1335
0xda7: V1338 = 0xdc1
0xdaa: JUMPI 0xdc1 V1337
---
Entry stack: [V13, 0x1e1]
Stack pops: 0
Stack additions: [0x0, V1333, 0x0, V1337]
Exit stack: [V13, 0x1e1, 0x0, V1333, 0x0, V1337]

================================

Block 0xdab
[0xdab:0xdc0]
---
Predecessors: [0xd88]
Successors: [0xdc1]
---
0xdab POP
0xdac DUP2
0xdad PUSH1 0x1
0xdaf PUSH1 0xa0
0xdb1 PUSH1 0x2
0xdb3 EXP
0xdb4 SUB
0xdb5 AND
0xdb6 CALLER
0xdb7 PUSH1 0x1
0xdb9 PUSH1 0xa0
0xdbb PUSH1 0x2
0xdbd EXP
0xdbe SUB
0xdbf AND
0xdc0 EQ
---
0xdad: V1339 = 0x1
0xdaf: V1340 = 0xa0
0xdb1: V1341 = 0x2
0xdb3: V1342 = EXP 0x2 0xa0
0xdb4: V1343 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdb5: V1344 = AND 0xffffffffffffffffffffffffffffffffffffffff V1333
0xdb6: V1345 = CALLER
0xdb7: V1346 = 0x1
0xdb9: V1347 = 0xa0
0xdbb: V1348 = 0x2
0xdbd: V1349 = EXP 0x2 0xa0
0xdbe: V1350 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdbf: V1351 = AND 0xffffffffffffffffffffffffffffffffffffffff V1345
0xdc0: V1352 = EQ V1351 V1344
---
Entry stack: [V13, 0x1e1, 0x0, V1333, 0x0, V1337]
Stack pops: 3
Stack additions: [S2, S1, V1352]
Exit stack: [V13, 0x1e1, 0x0, V1333, 0x0, V1352]

================================

Block 0xdc1
[0xdc1:0xdc7]
---
Predecessors: [0xd88, 0xdab]
Successors: [0xdc8, 0xdcc]
---
0xdc1 JUMPDEST
0xdc2 ISZERO
0xdc3 ISZERO
0xdc4 PUSH2 0xdcc
0xdc7 JUMPI
---
0xdc1: JUMPDEST 
0xdc2: V1353 = ISZERO S0
0xdc3: V1354 = ISZERO V1353
0xdc4: V1355 = 0xdcc
0xdc7: JUMPI 0xdcc V1354
---
Entry stack: [V13, 0x1e1, 0x0, V1333, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x1e1, 0x0, V1333, 0x0]

================================

Block 0xdc8
[0xdc8:0xdcb]
---
Predecessors: [0xdc1]
Successors: []
---
0xdc8 PUSH1 0x0
0xdca DUP1
0xdcb REVERT
---
0xdc8: V1356 = 0x0
0xdcb: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1e1, 0x0, V1333, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1e1, 0x0, V1333, 0x0]

================================

Block 0xdcc
[0xdcc:0xe06]
---
Predecessors: [0xdc1]
Successors: [0xe07, 0xe0b]
---
0xdcc JUMPDEST
0xdcd PUSH1 0x2
0xdcf SLOAD
0xdd0 PUSH1 0x1
0xdd2 PUSH1 0xa0
0xdd4 PUSH1 0x2
0xdd6 EXP
0xdd7 SUB
0xdd8 AND
0xdd9 PUSH4 0x5fd8c710
0xdde PUSH1 0x40
0xde0 MLOAD
0xde1 DUP2
0xde2 PUSH4 0xffffffff
0xde7 AND
0xde8 PUSH1 0xe0
0xdea PUSH1 0x2
0xdec EXP
0xded MUL
0xdee DUP2
0xdef MSTORE
0xdf0 PUSH1 0x4
0xdf2 ADD
0xdf3 PUSH1 0x20
0xdf5 PUSH1 0x40
0xdf7 MLOAD
0xdf8 DUP1
0xdf9 DUP4
0xdfa SUB
0xdfb DUP2
0xdfc PUSH1 0x0
0xdfe DUP8
0xdff DUP1
0xe00 EXTCODESIZE
0xe01 ISZERO
0xe02 ISZERO
0xe03 PUSH2 0xe0b
0xe06 JUMPI
---
0xdcc: JUMPDEST 
0xdcd: V1357 = 0x2
0xdcf: V1358 = S[0x2]
0xdd0: V1359 = 0x1
0xdd2: V1360 = 0xa0
0xdd4: V1361 = 0x2
0xdd6: V1362 = EXP 0x2 0xa0
0xdd7: V1363 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdd8: V1364 = AND 0xffffffffffffffffffffffffffffffffffffffff V1358
0xdd9: V1365 = 0x5fd8c710
0xdde: V1366 = 0x40
0xde0: V1367 = M[0x40]
0xde2: V1368 = 0xffffffff
0xde7: V1369 = AND 0xffffffff 0x5fd8c710
0xde8: V1370 = 0xe0
0xdea: V1371 = 0x2
0xdec: V1372 = EXP 0x2 0xe0
0xded: V1373 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x5fd8c710
0xdef: M[V1367] = 0x5fd8c71000000000000000000000000000000000000000000000000000000000
0xdf0: V1374 = 0x4
0xdf2: V1375 = ADD 0x4 V1367
0xdf3: V1376 = 0x20
0xdf5: V1377 = 0x40
0xdf7: V1378 = M[0x40]
0xdfa: V1379 = SUB V1375 V1378
0xdfc: V1380 = 0x0
0xe00: V1381 = EXTCODESIZE V1364
0xe01: V1382 = ISZERO V1381
0xe02: V1383 = ISZERO V1382
0xe03: V1384 = 0xe0b
0xe06: JUMPI 0xe0b V1383
---
Entry stack: [V13, 0x1e1, 0x0, V1333, 0x0]
Stack pops: 0
Stack additions: [V1364, 0x5fd8c710, V1375, 0x20, V1378, V1379, V1378, 0x0, V1364]
Exit stack: [V13, 0x1e1, 0x0, V1333, 0x0, V1364, 0x5fd8c710, V1375, 0x20, V1378, V1379, V1378, 0x0, V1364]

================================

Block 0xe07
[0xe07:0xe0a]
---
Predecessors: [0xdcc]
Successors: []
---
0xe07 PUSH1 0x0
0xe09 DUP1
0xe0a REVERT
---
0xe07: V1385 = 0x0
0xe0a: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1e1, 0x0, V1333, 0x0, V1364, 0x5fd8c710, V1375, 0x20, V1378, V1379, V1378, 0x0, V1364]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1e1, 0x0, V1333, 0x0, V1364, 0x5fd8c710, V1375, 0x20, V1378, V1379, V1378, 0x0, V1364]

================================

Block 0xe0b
[0xe0b:0xe13]
---
Predecessors: [0xdcc]
Successors: [0xe14, 0xe18]
---
0xe0b JUMPDEST
0xe0c GAS
0xe0d CALL
0xe0e ISZERO
0xe0f ISZERO
0xe10 PUSH2 0xe18
0xe13 JUMPI
---
0xe0b: JUMPDEST 
0xe0c: V1386 = GAS
0xe0d: V1387 = CALL V1386 V1364 0x0 V1378 V1379 V1378 0x20
0xe0e: V1388 = ISZERO V1387
0xe0f: V1389 = ISZERO V1388
0xe10: V1390 = 0xe18
0xe13: JUMPI 0xe18 V1389
---
Entry stack: [V13, 0x1e1, 0x0, V1333, 0x0, V1364, 0x5fd8c710, V1375, 0x20, V1378, V1379, V1378, 0x0, V1364]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x1e1, 0x0, V1333, 0x0, V1364, 0x5fd8c710, V1375]

================================

Block 0xe14
[0xe14:0xe17]
---
Predecessors: [0xe0b]
Successors: []
---
0xe14 PUSH1 0x0
0xe16 DUP1
0xe17 REVERT
---
0xe14: V1391 = 0x0
0xe17: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1e1, 0x0, V1333, 0x0, V1364, 0x5fd8c710, V1375]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1e1, 0x0, V1333, 0x0, V1364, 0x5fd8c710, V1375]

================================

Block 0xe18
[0xe18:0xe27]
---
Predecessors: [0xe0b]
Successors: [0x1e1]
---
0xe18 JUMPDEST
0xe19 POP
0xe1a POP
0xe1b POP
0xe1c PUSH1 0x40
0xe1e MLOAD
0xe1f DUP1
0xe20 MLOAD
0xe21 SWAP5
0xe22 SWAP4
0xe23 POP
0xe24 POP
0xe25 POP
0xe26 POP
0xe27 JUMP
---
0xe18: JUMPDEST 
0xe1c: V1392 = 0x40
0xe1e: V1393 = M[0x40]
0xe20: V1394 = M[V1393]
0xe27: JUMP 0x1e1
---
Entry stack: [V13, 0x1e1, 0x0, V1333, 0x0, V1364, 0x5fd8c710, V1375]
Stack pops: 7
Stack additions: [V1394]
Exit stack: [V13, V1394]

================================

Block 0xe28
[0xe28:0xe36]
---
Predecessors: [0x306]
Successors: [0xfa]
---
0xe28 JUMPDEST
0xe29 PUSH1 0x1
0xe2b SLOAD
0xe2c PUSH1 0x1
0xe2e PUSH1 0xa0
0xe30 PUSH1 0x2
0xe32 EXP
0xe33 SUB
0xe34 AND
0xe35 DUP2
0xe36 JUMP
---
0xe28: JUMPDEST 
0xe29: V1395 = 0x1
0xe2b: V1396 = S[0x1]
0xe2c: V1397 = 0x1
0xe2e: V1398 = 0xa0
0xe30: V1399 = 0x2
0xe32: V1400 = EXP 0x2 0xa0
0xe33: V1401 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe34: V1402 = AND 0xffffffffffffffffffffffffffffffffffffffff V1396
0xe36: JUMP 0xfa
---
Entry stack: [V13, 0xfa]
Stack pops: 1
Stack additions: [S0, V1402]
Exit stack: [V13, 0xfa, V1402]

================================

Block 0xe37
[0xe37:0xe4d]
---
Predecessors: [0x319]
Successors: [0xe4e, 0xe52]
---
0xe37 JUMPDEST
0xe38 PUSH1 0x0
0xe3a SLOAD
0xe3b CALLER
0xe3c PUSH1 0x1
0xe3e PUSH1 0xa0
0xe40 PUSH1 0x2
0xe42 EXP
0xe43 SUB
0xe44 SWAP1
0xe45 DUP2
0xe46 AND
0xe47 SWAP2
0xe48 AND
0xe49 EQ
0xe4a PUSH2 0xe52
0xe4d JUMPI
---
0xe37: JUMPDEST 
0xe38: V1403 = 0x0
0xe3a: V1404 = S[0x0]
0xe3b: V1405 = CALLER
0xe3c: V1406 = 0x1
0xe3e: V1407 = 0xa0
0xe40: V1408 = 0x2
0xe42: V1409 = EXP 0x2 0xa0
0xe43: V1410 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe46: V1411 = AND 0xffffffffffffffffffffffffffffffffffffffff V1405
0xe48: V1412 = AND V1404 0xffffffffffffffffffffffffffffffffffffffff
0xe49: V1413 = EQ V1412 V1411
0xe4a: V1414 = 0xe52
0xe4d: JUMPI 0xe52 V1413
---
Entry stack: [V13, 0x12b, V273]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, V273]

================================

Block 0xe4e
[0xe4e:0xe51]
---
Predecessors: [0xe37]
Successors: []
---
0xe4e PUSH1 0x0
0xe50 DUP1
0xe51 REVERT
---
0xe4e: V1415 = 0x0
0xe51: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b, V273]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, V273]

================================

Block 0xe52
[0xe52:0xe62]
---
Predecessors: [0xe37]
Successors: [0xe63, 0xe67]
---
0xe52 JUMPDEST
0xe53 PUSH1 0x1
0xe55 PUSH1 0xa0
0xe57 PUSH1 0x2
0xe59 EXP
0xe5a SUB
0xe5b DUP2
0xe5c AND
0xe5d ISZERO
0xe5e ISZERO
0xe5f PUSH2 0xe67
0xe62 JUMPI
---
0xe52: JUMPDEST 
0xe53: V1416 = 0x1
0xe55: V1417 = 0xa0
0xe57: V1418 = 0x2
0xe59: V1419 = EXP 0x2 0xa0
0xe5a: V1420 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe5c: V1421 = AND V273 0xffffffffffffffffffffffffffffffffffffffff
0xe5d: V1422 = ISZERO V1421
0xe5e: V1423 = ISZERO V1422
0xe5f: V1424 = 0xe67
0xe62: JUMPI 0xe67 V1423
---
Entry stack: [V13, 0x12b, V273]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x12b, V273]

================================

Block 0xe63
[0xe63:0xe66]
---
Predecessors: [0xe52]
Successors: []
---
0xe63 PUSH1 0x0
0xe65 DUP1
0xe66 REVERT
---
0xe63: V1425 = 0x0
0xe66: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b, V273]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, V273]

================================

Block 0xe67
[0xe67:0xee7]
---
Predecessors: [0xe52]
Successors: [0x12b]
---
0xe67 JUMPDEST
0xe68 PUSH1 0x0
0xe6a SLOAD
0xe6b PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xe8c SWAP1
0xe8d PUSH1 0x1
0xe8f PUSH1 0xa0
0xe91 PUSH1 0x2
0xe93 EXP
0xe94 SUB
0xe95 AND
0xe96 DUP3
0xe97 PUSH1 0x40
0xe99 MLOAD
0xe9a PUSH1 0x1
0xe9c PUSH1 0xa0
0xe9e PUSH1 0x2
0xea0 EXP
0xea1 SUB
0xea2 SWAP3
0xea3 DUP4
0xea4 AND
0xea5 DUP2
0xea6 MSTORE
0xea7 SWAP2
0xea8 AND
0xea9 PUSH1 0x20
0xeab DUP3
0xeac ADD
0xead MSTORE
0xeae PUSH1 0x40
0xeb0 SWAP1
0xeb1 DUP2
0xeb2 ADD
0xeb3 SWAP1
0xeb4 MLOAD
0xeb5 DUP1
0xeb6 SWAP2
0xeb7 SUB
0xeb8 SWAP1
0xeb9 LOG1
0xeba PUSH1 0x0
0xebc DUP1
0xebd SLOAD
0xebe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xed3 NOT
0xed4 AND
0xed5 PUSH1 0x1
0xed7 PUSH1 0xa0
0xed9 PUSH1 0x2
0xedb EXP
0xedc SUB
0xedd SWAP3
0xede SWAP1
0xedf SWAP3
0xee0 AND
0xee1 SWAP2
0xee2 SWAP1
0xee3 SWAP2
0xee4 OR
0xee5 SWAP1
0xee6 SSTORE
0xee7 JUMP
---
0xe67: JUMPDEST 
0xe68: V1426 = 0x0
0xe6a: V1427 = S[0x0]
0xe6b: V1428 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xe8d: V1429 = 0x1
0xe8f: V1430 = 0xa0
0xe91: V1431 = 0x2
0xe93: V1432 = EXP 0x2 0xa0
0xe94: V1433 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe95: V1434 = AND 0xffffffffffffffffffffffffffffffffffffffff V1427
0xe97: V1435 = 0x40
0xe99: V1436 = M[0x40]
0xe9a: V1437 = 0x1
0xe9c: V1438 = 0xa0
0xe9e: V1439 = 0x2
0xea0: V1440 = EXP 0x2 0xa0
0xea1: V1441 = SUB 0x10000000000000000000000000000000000000000 0x1
0xea4: V1442 = AND 0xffffffffffffffffffffffffffffffffffffffff V1434
0xea6: M[V1436] = V1442
0xea8: V1443 = AND 0xffffffffffffffffffffffffffffffffffffffff V273
0xea9: V1444 = 0x20
0xeac: V1445 = ADD V1436 0x20
0xead: M[V1445] = V1443
0xeae: V1446 = 0x40
0xeb2: V1447 = ADD 0x40 V1436
0xeb4: V1448 = M[0x40]
0xeb7: V1449 = SUB V1447 V1448
0xeb9: LOG V1448 V1449 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xeba: V1450 = 0x0
0xebd: V1451 = S[0x0]
0xebe: V1452 = 0xffffffffffffffffffffffffffffffffffffffff
0xed3: V1453 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xed4: V1454 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1451
0xed5: V1455 = 0x1
0xed7: V1456 = 0xa0
0xed9: V1457 = 0x2
0xedb: V1458 = EXP 0x2 0xa0
0xedc: V1459 = SUB 0x10000000000000000000000000000000000000000 0x1
0xee0: V1460 = AND 0xffffffffffffffffffffffffffffffffffffffff V273
0xee4: V1461 = OR V1460 V1454
0xee6: S[0x0] = V1461
0xee7: JUMP 0x12b
---
Entry stack: [V13, 0x12b, V273]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0xee8
[0xee8:0xefe]
---
Predecessors: [0x832]
Successors: [0xeff, 0xf03]
---
0xee8 JUMPDEST
0xee9 PUSH1 0x0
0xeeb SLOAD
0xeec CALLER
0xeed PUSH1 0x1
0xeef PUSH1 0xa0
0xef1 PUSH1 0x2
0xef3 EXP
0xef4 SUB
0xef5 SWAP1
0xef6 DUP2
0xef7 AND
0xef8 SWAP2
0xef9 AND
0xefa EQ
0xefb PUSH2 0xf03
0xefe JUMPI
---
0xee8: JUMPDEST 
0xee9: V1462 = 0x0
0xeeb: V1463 = S[0x0]
0xeec: V1464 = CALLER
0xeed: V1465 = 0x1
0xeef: V1466 = 0xa0
0xef1: V1467 = 0x2
0xef3: V1468 = EXP 0x2 0xa0
0xef4: V1469 = SUB 0x10000000000000000000000000000000000000000 0x1
0xef7: V1470 = AND 0xffffffffffffffffffffffffffffffffffffffff V1464
0xef9: V1471 = AND V1463 0xffffffffffffffffffffffffffffffffffffffff
0xefa: V1472 = EQ V1471 V1470
0xefb: V1473 = 0xf03
0xefe: JUMPI 0xf03 V1472
---
Entry stack: [V13, 0x12b, 0x83a]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, 0x83a]

================================

Block 0xeff
[0xeff:0xf02]
---
Predecessors: [0xee8]
Successors: []
---
0xeff PUSH1 0x0
0xf01 DUP1
0xf02 REVERT
---
0xeff: V1474 = 0x0
0xf02: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b, 0x83a]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, 0x83a]

================================

Block 0xf03
[0xf03:0xf16]
---
Predecessors: [0xee8]
Successors: [0xf17, 0xf1b]
---
0xf03 JUMPDEST
0xf04 PUSH1 0x0
0xf06 SLOAD
0xf07 PUSH1 0xa0
0xf09 PUSH1 0x2
0xf0b EXP
0xf0c SWAP1
0xf0d DIV
0xf0e PUSH1 0xff
0xf10 AND
0xf11 ISZERO
0xf12 ISZERO
0xf13 PUSH2 0xf1b
0xf16 JUMPI
---
0xf03: JUMPDEST 
0xf04: V1475 = 0x0
0xf06: V1476 = S[0x0]
0xf07: V1477 = 0xa0
0xf09: V1478 = 0x2
0xf0b: V1479 = EXP 0x2 0xa0
0xf0d: V1480 = DIV V1476 0x10000000000000000000000000000000000000000
0xf0e: V1481 = 0xff
0xf10: V1482 = AND 0xff V1480
0xf11: V1483 = ISZERO V1482
0xf12: V1484 = ISZERO V1483
0xf13: V1485 = 0xf1b
0xf16: JUMPI 0xf1b V1484
---
Entry stack: [V13, 0x12b, 0x83a]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, 0x83a]

================================

Block 0xf17
[0xf17:0xf1a]
---
Predecessors: [0xf03]
Successors: []
---
0xf17 PUSH1 0x0
0xf19 DUP1
0xf1a REVERT
---
0xf17: V1486 = 0x0
0xf1a: REVERT 0x0 0x0
---
Entry stack: [V13, 0x12b, 0x83a]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x12b, 0x83a]

================================

Block 0xf1b
[0xf1b:0xf66]
---
Predecessors: [0xf03]
Successors: [0x83a]
---
0xf1b JUMPDEST
0xf1c PUSH1 0x0
0xf1e DUP1
0xf1f SLOAD
0xf20 PUSH21 0xff0000000000000000000000000000000000000000
0xf36 NOT
0xf37 AND
0xf38 SWAP1
0xf39 SSTORE
0xf3a PUSH32 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
0xf5b PUSH1 0x40
0xf5d MLOAD
0xf5e PUSH1 0x40
0xf60 MLOAD
0xf61 DUP1
0xf62 SWAP2
0xf63 SUB
0xf64 SWAP1
0xf65 LOG1
0xf66 JUMP
---
0xf1b: JUMPDEST 
0xf1c: V1487 = 0x0
0xf1f: V1488 = S[0x0]
0xf20: V1489 = 0xff0000000000000000000000000000000000000000
0xf36: V1490 = NOT 0xff0000000000000000000000000000000000000000
0xf37: V1491 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V1488
0xf39: S[0x0] = V1491
0xf3a: V1492 = 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
0xf5b: V1493 = 0x40
0xf5d: V1494 = M[0x40]
0xf5e: V1495 = 0x40
0xf60: V1496 = M[0x40]
0xf63: V1497 = SUB V1494 V1496
0xf65: LOG V1496 V1497 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
0xf66: JUMP 0x83a
---
Entry stack: [V13, 0x12b, 0x83a]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x12b]

================================

Block 0xf67
[0xf67:0xf92]
---
Predecessors: []
Successors: []
---
0xf67 STOP
0xf68 LOG1
0xf69 PUSH6 0x627a7a723058
0xf70 SHA3
0xf71 MISSING 0xa9
0xf72 MISSING 0xd9
0xf73 SWAP16
0xf74 MISSING 0xce
0xf75 MISSING 0xa9
0xf76 STATICCALL
0xf77 MISSING 0xf
0xf78 GT
0xf79 DUP3
0xf7a MISSING 0xd4
0xf7b PUSH22 0x5154fbafaec89a7fbaab397bbf64ffe80fd4cbd29600
0xf92 MISSING 0x29
---
0xf67: STOP 
0xf68: LOG S0 S1 S2
0xf69: V1498 = 0x627a7a723058
0xf70: V1499 = SHA3 0x627a7a723058 S3
0xf71: MISSING 0xa9
0xf72: MISSING 0xd9
0xf74: MISSING 0xce
0xf75: MISSING 0xa9
0xf76: V1500 = STATICCALL S0 S1 S2 S3 S4 S5
0xf77: MISSING 0xf
0xf78: V1501 = GT S0 S1
0xf7a: MISSING 0xd4
0xf7b: V1502 = 0x5154fbafaec89a7fbaab397bbf64ffe80fd4cbd29600
0xf92: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V1499, S16, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S0, V1500, S3, V1501, S2, S3, 0x5154fbafaec89a7fbaab397bbf64ffe80fd4cbd29600]
Exit stack: []

================================

Function 0:
Public function signature: 0x11ce0267
Entry block: 0xe7
Exit block: 0xfa
Body: 0xe7, 0xee, 0xf2, 0xfa, 0x32d

Function 1:
Public function signature: 0x2020e9ea
Entry block: 0x116
Exit block: 0x12b
Body: 0x116, 0x12b, 0x33c, 0x358, 0x35c, 0x3a3, 0x3a7, 0x3b0, 0x3b4, 0x3ea, 0x3ee, 0x3fb, 0x3ff, 0x41a, 0x41e, 0x433, 0x442, 0x449, 0x44d, 0x49f, 0x4a3, 0x4ac, 0x4b0, 0x4cb, 0x4cf, 0x52b, 0x52f, 0x538, 0x53c, 0x552, 0x556, 0x5b8, 0x5bc, 0x5c5, 0x5c9

Function 2:
Public function signature: 0x2aed7f3f
Entry block: 0x12d
Exit block: 0x12b
Body: 0x12b, 0x12d, 0x134, 0x138, 0x62d, 0x645, 0x649, 0x65d, 0x661, 0x6b4, 0x6b8, 0x6c1, 0x6c5

Function 3:
Public function signature: 0x3a01e53a
Entry block: 0x14c
Exit block: 0x166
Body: 0x14c, 0x153, 0x157, 0x166, 0x6cc, 0x71e, 0x722, 0x72b, 0x72f

Function 4:
Public function signature: 0x3f4ba83a
Entry block: 0x1bb
Exit block: 0x12b
Body: 0x12b, 0x1bb, 0x1c2, 0x1c6, 0x762, 0x779, 0x77d, 0x791, 0x795, 0x7a8, 0x7ac, 0x7bf, 0x7c3, 0x802, 0x806, 0x80f, 0x813, 0x82e, 0x832, 0x83a, 0xee8, 0xeff, 0xf03, 0xf17, 0xf1b

Function 5:
Public function signature: 0x5c975abb
Entry block: 0x1ce
Exit block: 0x1e1
Body: 0x1ce, 0x1d5, 0x1d9, 0x1e1, 0x83c

Function 6:
Public function signature: 0x5fd8c710
Entry block: 0x1f5
Exit block: 0x1e1
Body: 0x1e1, 0x1f5, 0x1fc, 0x200, 0x84c, 0x86f, 0x885, 0x88c, 0x890

Function 7:
Public function signature: 0x69d03738
Entry block: 0x208
Exit block: 0x12b
Body: 0x12b, 0x208, 0x20f, 0x213, 0x8c8, 0x8e0, 0x8e4, 0x8f5, 0x8f9, 0x97e, 0x982, 0x98b, 0x98f, 0x9a0, 0x9a4

Function 8:
Public function signature: 0x83197ef0
Entry block: 0x227
Exit block: 0xa81
Body: 0x227, 0x22e, 0x232, 0x9d4, 0x9ec, 0x9f0, 0xa04, 0xa08, 0xa43, 0xa47, 0xa50, 0xa54, 0xa7d, 0xa81

Function 9:
Public function signature: 0x8456cb59
Entry block: 0x23a
Exit block: 0x12b
Body: 0x12b, 0x23a, 0x241, 0x245, 0xa8f, 0xaa6, 0xaaa, 0xabd, 0xac1

Function 10:
Public function signature: 0x8da5cb5b
Entry block: 0x24d
Exit block: 0xfa
Body: 0xfa, 0x24d, 0x254, 0x258, 0xb13

Function 11:
Public function signature: 0x91e50314
Entry block: 0x260
Exit block: 0x1e1
Body: 0x1e1, 0x260, 0x267, 0x26b, 0xb22

Function 12:
Public function signature: 0xa22d5a51
Entry block: 0x273
Exit block: 0x12b
Body: 0x12b, 0x273, 0x27a, 0x27e, 0xb32, 0xb49, 0xb4d, 0xb61, 0xb65, 0xbac, 0xbb0, 0xbb9, 0xbbd

Function 13:
Public function signature: 0xa7cebd4d
Entry block: 0x28d
Exit block: 0x12b
Body: 0x12b, 0x28d, 0x294, 0x298, 0xbc3, 0xbda, 0xbde, 0xbf1, 0xbf5, 0xc7c, 0xc80, 0xc89, 0xc8d

Function 14:
Public function signature: 0xb5794222
Entry block: 0x2d5
Exit block: 0xd7c
Body: 0x2d5, 0x2dc, 0x2e0, 0xccf, 0xce7, 0xceb, 0xcff, 0xd03, 0xd3e, 0xd42, 0xd4b, 0xd4f, 0xd78, 0xd7c

Function 15:
Public function signature: 0xba6763ce
Entry block: 0x2e8
Exit block: 0x1e1
Body: 0x1e1, 0x2e8, 0x2ef, 0x2f3, 0xd88, 0xdab, 0xdc1, 0xdc8, 0xdcc, 0xe07, 0xe0b, 0xe14, 0xe18

Function 16:
Public function signature: 0xdd1b7a0f
Entry block: 0x2fb
Exit block: 0xfa
Body: 0xfa, 0x2fb, 0x302, 0x306, 0xe28

Function 17:
Public function signature: 0xf2fde38b
Entry block: 0x30e
Exit block: 0x12b
Body: 0x12b, 0x30e, 0x315, 0x319, 0xe37, 0xe4e, 0xe52, 0xe63, 0xe67

Function 18:
Public fallback function
Entry block: 0xe2
Exit block: 0xe2
Body: 0xe2

