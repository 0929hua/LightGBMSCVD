Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xcc]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xcc
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xcc
0xc: JUMPI 0xcc V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0xce]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x3cebb823
0x21 DUP2
0x22 EQ
0x23 PUSH2 0xce
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x3cebb823
0x22: V15 = EQ V13 0x3cebb823
0x23: V16 = 0xce
0x26: JUMPI 0xce V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0xef]
---
0x27 DUP1
0x28 PUSH4 0x61b20d8c
0x2d EQ
0x2e PUSH2 0xef
0x31 JUMPI
---
0x28: V17 = 0x61b20d8c
0x2d: V18 = EQ 0x61b20d8c V13
0x2e: V19 = 0xef
0x31: JUMPI 0xef V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x104]
---
0x32 DUP1
0x33 PUSH4 0x6a21857f
0x38 EQ
0x39 PUSH2 0x104
0x3c JUMPI
---
0x33: V20 = 0x6a21857f
0x38: V21 = EQ 0x6a21857f V13
0x39: V22 = 0x104
0x3c: JUMPI 0x104 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x135]
---
0x3d DUP1
0x3e PUSH4 0x723de5cd
0x43 EQ
0x44 PUSH2 0x135
0x47 JUMPI
---
0x3e: V23 = 0x723de5cd
0x43: V24 = EQ 0x723de5cd V13
0x44: V25 = 0x135
0x47: JUMPI 0x135 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x16e]
---
0x48 DUP1
0x49 PUSH4 0x72d209f5
0x4e EQ
0x4f PUSH2 0x16e
0x52 JUMPI
---
0x49: V26 = 0x72d209f5
0x4e: V27 = EQ 0x72d209f5 V13
0x4f: V28 = 0x16e
0x52: JUMPI 0x16e V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x1e5]
---
0x53 DUP1
0x54 PUSH4 0x7f58fa14
0x59 EQ
0x5a PUSH2 0x1e5
0x5d JUMPI
---
0x54: V29 = 0x7f58fa14
0x59: V30 = EQ 0x7f58fa14 V13
0x5a: V31 = 0x1e5
0x5d: JUMPI 0x1e5 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x20d]
---
0x5e DUP1
0x5f PUSH4 0x81e8706d
0x64 EQ
0x65 PUSH2 0x20d
0x68 JUMPI
---
0x5f: V32 = 0x81e8706d
0x64: V33 = EQ 0x81e8706d V13
0x65: V34 = 0x20d
0x68: JUMPI 0x20d V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0xef]
---
0x69 DUP1
0x6a PUSH4 0xa169ce09
0x6f EQ
0x70 PUSH2 0xef
0x73 JUMPI
---
0x6a: V35 = 0xa169ce09
0x6f: V36 = EQ 0xa169ce09 V13
0x70: V37 = 0xef
0x73: JUMPI 0xef V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x22e]
---
0x74 DUP1
0x75 PUSH4 0xa4438334
0x7a EQ
0x7b PUSH2 0x22e
0x7e JUMPI
---
0x75: V38 = 0xa4438334
0x7a: V39 = EQ 0xa4438334 V13
0x7b: V40 = 0x22e
0x7e: JUMPI 0x22e V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x89]
---
Predecessors: [0x74]
Successors: [0x8a, 0x256]
---
0x7f DUP1
0x80 PUSH4 0xadb187bb
0x85 EQ
0x86 PUSH2 0x256
0x89 JUMPI
---
0x80: V41 = 0xadb187bb
0x85: V42 = EQ 0xadb187bb V13
0x86: V43 = 0x256
0x89: JUMPI 0x256 V42
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x8a
[0x8a:0x94]
---
Predecessors: [0x7f]
Successors: [0x95, 0x2cd]
---
0x8a DUP1
0x8b PUSH4 0xbc41f298
0x90 EQ
0x91 PUSH2 0x2cd
0x94 JUMPI
---
0x8b: V44 = 0xbc41f298
0x90: V45 = EQ 0xbc41f298 V13
0x91: V46 = 0x2cd
0x94: JUMPI 0x2cd V45
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x95
[0x95:0x9f]
---
Predecessors: [0x8a]
Successors: [0xa0, 0x2f6]
---
0x95 DUP1
0x96 PUSH4 0xc55a02a0
0x9b EQ
0x9c PUSH2 0x2f6
0x9f JUMPI
---
0x96: V47 = 0xc55a02a0
0x9b: V48 = EQ 0xc55a02a0 V13
0x9c: V49 = 0x2f6
0x9f: JUMPI 0x2f6 V48
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xa0
[0xa0:0xaa]
---
Predecessors: [0x95]
Successors: [0xab, 0x333]
---
0xa0 DUP1
0xa1 PUSH4 0xc98166c0
0xa6 EQ
0xa7 PUSH2 0x333
0xaa JUMPI
---
0xa1: V50 = 0xc98166c0
0xa6: V51 = EQ 0xc98166c0 V13
0xa7: V52 = 0x333
0xaa: JUMPI 0x333 V51
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xab
[0xab:0xb5]
---
Predecessors: [0xa0]
Successors: [0xb6, 0x348]
---
0xab DUP1
0xac PUSH4 0xda8c229e
0xb1 EQ
0xb2 PUSH2 0x348
0xb5 JUMPI
---
0xac: V53 = 0xda8c229e
0xb1: V54 = EQ 0xda8c229e V13
0xb2: V55 = 0x348
0xb5: JUMPI 0x348 V54
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xb6
[0xb6:0xc0]
---
Predecessors: [0xab]
Successors: [0xc1, 0x369]
---
0xb6 DUP1
0xb7 PUSH4 0xebf0c717
0xbc EQ
0xbd PUSH2 0x369
0xc0 JUMPI
---
0xb7: V56 = 0xebf0c717
0xbc: V57 = EQ 0xebf0c717 V13
0xbd: V58 = 0x369
0xc0: JUMPI 0x369 V57
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xc1
[0xc1:0xcb]
---
Predecessors: [0xb6]
Successors: [0xcc, 0x399]
---
0xc1 DUP1
0xc2 PUSH4 0xf77c4791
0xc7 EQ
0xc8 PUSH2 0x399
0xcb JUMPI
---
0xc2: V59 = 0xf77c4791
0xc7: V60 = EQ 0xf77c4791 V13
0xc8: V61 = 0x399
0xcb: JUMPI 0x399 V60
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xcc
[0xcc:0xcd]
---
Predecessors: [0x0, 0xc1, 0x3eb, 0x8a4, 0xcbc, 0xd89, 0xec4]
Successors: []
---
0xcc JUMPDEST
0xcd STOP
---
0xcc: JUMPDEST 
0xcd: STOP 
---
Entry stack: [V13, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S0]

================================

Block 0xce
[0xce:0xd5]
---
Predecessors: [0xd]
Successors: [0xd6, 0xda]
---
0xce JUMPDEST
0xcf CALLVALUE
0xd0 DUP1
0xd1 ISZERO
0xd2 PUSH2 0xda
0xd5 JUMPI
---
0xce: JUMPDEST 
0xcf: V62 = CALLVALUE
0xd1: V63 = ISZERO V62
0xd2: V64 = 0xda
0xd5: JUMPI 0xda V63
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V62]
Exit stack: [V13, V62]

================================

Block 0xd6
[0xd6:0xd9]
---
Predecessors: [0xce]
Successors: []
---
0xd6 PUSH1 0x0
0xd8 DUP1
0xd9 REVERT
---
0xd6: V65 = 0x0
0xd9: REVERT 0x0 0x0
---
Entry stack: [V13, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V62]

================================

Block 0xda
[0xda:0xee]
---
Predecessors: [0xce]
Successors: [0x3ae]
---
0xda JUMPDEST
0xdb POP
0xdc PUSH2 0xcc
0xdf PUSH1 0x1
0xe1 PUSH1 0xa0
0xe3 PUSH1 0x2
0xe5 EXP
0xe6 SUB
0xe7 PUSH1 0x4
0xe9 CALLDATALOAD
0xea AND
0xeb PUSH2 0x3ae
0xee JUMP
---
0xda: JUMPDEST 
0xdc: V66 = 0xcc
0xdf: V67 = 0x1
0xe1: V68 = 0xa0
0xe3: V69 = 0x2
0xe5: V70 = EXP 0x2 0xa0
0xe6: V71 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe7: V72 = 0x4
0xe9: V73 = CALLDATALOAD 0x4
0xea: V74 = AND V73 0xffffffffffffffffffffffffffffffffffffffff
0xeb: V75 = 0x3ae
0xee: JUMP 0x3ae
---
Entry stack: [V13, V62]
Stack pops: 1
Stack additions: [0xcc, V74]
Exit stack: [V13, 0xcc, V74]

================================

Block 0xef
[0xef:0xf6]
---
Predecessors: [0x27, 0x69]
Successors: [0xf7, 0xfb]
---
0xef JUMPDEST
0xf0 CALLVALUE
0xf1 DUP1
0xf2 ISZERO
0xf3 PUSH2 0xfb
0xf6 JUMPI
---
0xef: JUMPDEST 
0xf0: V76 = CALLVALUE
0xf2: V77 = ISZERO V76
0xf3: V78 = 0xfb
0xf6: JUMPI 0xfb V77
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V76]
Exit stack: [V13, V76]

================================

Block 0xf7
[0xf7:0xfa]
---
Predecessors: [0xef]
Successors: []
---
0xf7 PUSH1 0x0
0xf9 DUP1
0xfa REVERT
---
0xf7: V79 = 0x0
0xfa: REVERT 0x0 0x0
---
Entry stack: [V13, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V76]

================================

Block 0xfb
[0xfb:0x103]
---
Predecessors: [0xef]
Successors: [0x415]
---
0xfb JUMPDEST
0xfc POP
0xfd PUSH2 0xcc
0x100 PUSH2 0x415
0x103 JUMP
---
0xfb: JUMPDEST 
0xfd: V80 = 0xcc
0x100: V81 = 0x415
0x103: JUMP 0x415
---
Entry stack: [V13, V76]
Stack pops: 1
Stack additions: [0xcc]
Exit stack: [V13, 0xcc]

================================

Block 0x104
[0x104:0x10b]
---
Predecessors: [0x32]
Successors: [0x10c, 0x110]
---
0x104 JUMPDEST
0x105 CALLVALUE
0x106 DUP1
0x107 ISZERO
0x108 PUSH2 0x110
0x10b JUMPI
---
0x104: JUMPDEST 
0x105: V82 = CALLVALUE
0x107: V83 = ISZERO V82
0x108: V84 = 0x110
0x10b: JUMPI 0x110 V83
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V82]
Exit stack: [V13, V82]

================================

Block 0x10c
[0x10c:0x10f]
---
Predecessors: [0x104]
Successors: []
---
0x10c PUSH1 0x0
0x10e DUP1
0x10f REVERT
---
0x10c: V85 = 0x0
0x10f: REVERT 0x0 0x0
---
Entry stack: [V13, V82]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V82]

================================

Block 0x110
[0x110:0x134]
---
Predecessors: [0x104]
Successors: [0x60a]
---
0x110 JUMPDEST
0x111 POP
0x112 PUSH2 0xcc
0x115 PUSH1 0x4
0x117 DUP1
0x118 CALLDATALOAD
0x119 PUSH1 0x1
0x11b PUSH1 0xa0
0x11d PUSH1 0x2
0x11f EXP
0x120 SUB
0x121 AND
0x122 SWAP1
0x123 PUSH1 0x20
0x125 ADD
0x126 CALLDATALOAD
0x127 PUSH1 0x1
0x129 PUSH1 0xd8
0x12b PUSH1 0x2
0x12d EXP
0x12e SUB
0x12f NOT
0x130 AND
0x131 PUSH2 0x60a
0x134 JUMP
---
0x110: JUMPDEST 
0x112: V86 = 0xcc
0x115: V87 = 0x4
0x118: V88 = CALLDATALOAD 0x4
0x119: V89 = 0x1
0x11b: V90 = 0xa0
0x11d: V91 = 0x2
0x11f: V92 = EXP 0x2 0xa0
0x120: V93 = SUB 0x10000000000000000000000000000000000000000 0x1
0x121: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V88
0x123: V95 = 0x20
0x125: V96 = ADD 0x20 0x4
0x126: V97 = CALLDATALOAD 0x24
0x127: V98 = 0x1
0x129: V99 = 0xd8
0x12b: V100 = 0x2
0x12d: V101 = EXP 0x2 0xd8
0x12e: V102 = SUB 0x1000000000000000000000000000000000000000000000000000000 0x1
0x12f: V103 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x130: V104 = AND 0xffffffffff000000000000000000000000000000000000000000000000000000 V97
0x131: V105 = 0x60a
0x134: JUMP 0x60a
---
Entry stack: [V13, V82]
Stack pops: 1
Stack additions: [0xcc, V94, V104]
Exit stack: [V13, 0xcc, V94, V104]

================================

Block 0x135
[0x135:0x13c]
---
Predecessors: [0x3d]
Successors: [0x13d, 0x141]
---
0x135 JUMPDEST
0x136 CALLVALUE
0x137 DUP1
0x138 ISZERO
0x139 PUSH2 0x141
0x13c JUMPI
---
0x135: JUMPDEST 
0x136: V106 = CALLVALUE
0x138: V107 = ISZERO V106
0x139: V108 = 0x141
0x13c: JUMPI 0x141 V107
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V106]
Exit stack: [V13, V106]

================================

Block 0x13d
[0x13d:0x140]
---
Predecessors: [0x135]
Successors: []
---
0x13d PUSH1 0x0
0x13f DUP1
0x140 REVERT
---
0x13d: V109 = 0x0
0x140: REVERT 0x0 0x0
---
Entry stack: [V13, V106]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V106]

================================

Block 0x141
[0x141:0x156]
---
Predecessors: [0x135]
Successors: [0x90d]
---
0x141 JUMPDEST
0x142 POP
0x143 PUSH2 0x157
0x146 PUSH1 0x1
0x148 PUSH1 0xd8
0x14a PUSH1 0x2
0x14c EXP
0x14d SUB
0x14e NOT
0x14f PUSH1 0x4
0x151 CALLDATALOAD
0x152 AND
0x153 PUSH2 0x90d
0x156 JUMP
---
0x141: JUMPDEST 
0x143: V110 = 0x157
0x146: V111 = 0x1
0x148: V112 = 0xd8
0x14a: V113 = 0x2
0x14c: V114 = EXP 0x2 0xd8
0x14d: V115 = SUB 0x1000000000000000000000000000000000000000000000000000000 0x1
0x14e: V116 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x14f: V117 = 0x4
0x151: V118 = CALLDATALOAD 0x4
0x152: V119 = AND V118 0xffffffffff000000000000000000000000000000000000000000000000000000
0x153: V120 = 0x90d
0x156: JUMP 0x90d
---
Entry stack: [V13, V106]
Stack pops: 1
Stack additions: [0x157, V119]
Exit stack: [V13, 0x157, V119]

================================

Block 0x157
[0x157:0x16d]
---
Predecessors: [0x90d, 0xd2c, 0xe7f, 0xf21]
Successors: []
---
0x157 JUMPDEST
0x158 PUSH1 0x40
0x15a DUP1
0x15b MLOAD
0x15c SWAP2
0x15d ISZERO
0x15e ISZERO
0x15f ISZERO
0x160 ISZERO
0x161 DUP3
0x162 MSTORE
0x163 MLOAD
0x164 PUSH1 0x20
0x166 SWAP1
0x167 SWAP2
0x168 ADD
0x169 DUP2
0x16a SWAP1
0x16b SUB
0x16c SWAP1
0x16d RETURN
---
0x157: JUMPDEST 
0x158: V121 = 0x40
0x15b: V122 = M[0x40]
0x15d: V123 = ISZERO S0
0x15e: V124 = ISZERO V123
0x15f: V125 = ISZERO V124
0x160: V126 = ISZERO V125
0x162: M[V122] = V126
0x163: V127 = M[0x40]
0x164: V128 = 0x20
0x168: V129 = ADD V122 0x20
0x16b: V130 = SUB V129 V127
0x16d: RETURN V127 V130
---
Entry stack: [V13, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S1]

================================

Block 0x16e
[0x16e:0x175]
---
Predecessors: [0x48]
Successors: [0x176, 0x17a]
---
0x16e JUMPDEST
0x16f CALLVALUE
0x170 DUP1
0x171 ISZERO
0x172 PUSH2 0x17a
0x175 JUMPI
---
0x16e: JUMPDEST 
0x16f: V131 = CALLVALUE
0x171: V132 = ISZERO V131
0x172: V133 = 0x17a
0x175: JUMPI 0x17a V132
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V131]
Exit stack: [V13, V131]

================================

Block 0x176
[0x176:0x179]
---
Predecessors: [0x16e]
Successors: []
---
0x176 PUSH1 0x0
0x178 DUP1
0x179 REVERT
---
0x176: V134 = 0x0
0x179: REVERT 0x0 0x0
---
Entry stack: [V13, V131]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V131]

================================

Block 0x17a
[0x17a:0x1e4]
---
Predecessors: [0x16e]
Successors: [0x92d]
---
0x17a JUMPDEST
0x17b POP
0x17c PUSH2 0xcc
0x17f PUSH1 0x4
0x181 DUP1
0x182 CALLDATASIZE
0x183 SUB
0x184 DUP2
0x185 ADD
0x186 SWAP1
0x187 DUP1
0x188 DUP1
0x189 CALLDATALOAD
0x18a SWAP1
0x18b PUSH1 0x20
0x18d ADD
0x18e SWAP1
0x18f DUP3
0x190 ADD
0x191 DUP1
0x192 CALLDATALOAD
0x193 SWAP1
0x194 PUSH1 0x20
0x196 ADD
0x197 SWAP1
0x198 DUP1
0x199 DUP1
0x19a PUSH1 0x20
0x19c MUL
0x19d PUSH1 0x20
0x19f ADD
0x1a0 PUSH1 0x40
0x1a2 MLOAD
0x1a3 SWAP1
0x1a4 DUP2
0x1a5 ADD
0x1a6 PUSH1 0x40
0x1a8 MSTORE
0x1a9 DUP1
0x1aa SWAP4
0x1ab SWAP3
0x1ac SWAP2
0x1ad SWAP1
0x1ae DUP2
0x1af DUP2
0x1b0 MSTORE
0x1b1 PUSH1 0x20
0x1b3 ADD
0x1b4 DUP4
0x1b5 DUP4
0x1b6 PUSH1 0x20
0x1b8 MUL
0x1b9 DUP1
0x1ba DUP3
0x1bb DUP5
0x1bc CALLDATACOPY
0x1bd POP
0x1be SWAP5
0x1bf SWAP8
0x1c0 POP
0x1c1 POP
0x1c2 POP
0x1c3 DUP4
0x1c4 CALLDATALOAD
0x1c5 PUSH1 0x1
0x1c7 PUSH1 0xd8
0x1c9 PUSH1 0x2
0x1cb EXP
0x1cc SUB
0x1cd NOT
0x1ce AND
0x1cf SWAP5
0x1d0 POP
0x1d1 POP
0x1d2 POP
0x1d3 POP
0x1d4 PUSH1 0x20
0x1d6 ADD
0x1d7 CALLDATALOAD
0x1d8 PUSH1 0x1
0x1da PUSH1 0xa0
0x1dc PUSH1 0x2
0x1de EXP
0x1df SUB
0x1e0 AND
0x1e1 PUSH2 0x92d
0x1e4 JUMP
---
0x17a: JUMPDEST 
0x17c: V135 = 0xcc
0x17f: V136 = 0x4
0x182: V137 = CALLDATASIZE
0x183: V138 = SUB V137 0x4
0x185: V139 = ADD 0x4 V138
0x189: V140 = CALLDATALOAD 0x4
0x18b: V141 = 0x20
0x18d: V142 = ADD 0x20 0x4
0x190: V143 = ADD 0x4 V140
0x192: V144 = CALLDATALOAD V143
0x194: V145 = 0x20
0x196: V146 = ADD 0x20 V143
0x19a: V147 = 0x20
0x19c: V148 = MUL 0x20 V144
0x19d: V149 = 0x20
0x19f: V150 = ADD 0x20 V148
0x1a0: V151 = 0x40
0x1a2: V152 = M[0x40]
0x1a5: V153 = ADD V152 V150
0x1a6: V154 = 0x40
0x1a8: M[0x40] = V153
0x1b0: M[V152] = V144
0x1b1: V155 = 0x20
0x1b3: V156 = ADD 0x20 V152
0x1b6: V157 = 0x20
0x1b8: V158 = MUL 0x20 V144
0x1bc: CALLDATACOPY V156 V146 V158
0x1c4: V159 = CALLDATALOAD 0x24
0x1c5: V160 = 0x1
0x1c7: V161 = 0xd8
0x1c9: V162 = 0x2
0x1cb: V163 = EXP 0x2 0xd8
0x1cc: V164 = SUB 0x1000000000000000000000000000000000000000000000000000000 0x1
0x1cd: V165 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x1ce: V166 = AND 0xffffffffff000000000000000000000000000000000000000000000000000000 V159
0x1d4: V167 = 0x20
0x1d6: V168 = ADD 0x20 0x24
0x1d7: V169 = CALLDATALOAD 0x44
0x1d8: V170 = 0x1
0x1da: V171 = 0xa0
0x1dc: V172 = 0x2
0x1de: V173 = EXP 0x2 0xa0
0x1df: V174 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e0: V175 = AND 0xffffffffffffffffffffffffffffffffffffffff V169
0x1e1: V176 = 0x92d
0x1e4: JUMP 0x92d
---
Entry stack: [V13, V131]
Stack pops: 1
Stack additions: [0xcc, V152, V166, V175]
Exit stack: [V13, 0xcc, V152, V166, V175]

================================

Block 0x1e5
[0x1e5:0x1ec]
---
Predecessors: [0x53]
Successors: [0x1ed, 0x1f1]
---
0x1e5 JUMPDEST
0x1e6 CALLVALUE
0x1e7 DUP1
0x1e8 ISZERO
0x1e9 PUSH2 0x1f1
0x1ec JUMPI
---
0x1e5: JUMPDEST 
0x1e6: V177 = CALLVALUE
0x1e8: V178 = ISZERO V177
0x1e9: V179 = 0x1f1
0x1ec: JUMPI 0x1f1 V178
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V177]
Exit stack: [V13, V177]

================================

Block 0x1ed
[0x1ed:0x1f0]
---
Predecessors: [0x1e5]
Successors: []
---
0x1ed PUSH1 0x0
0x1ef DUP1
0x1f0 REVERT
---
0x1ed: V180 = 0x0
0x1f0: REVERT 0x0 0x0
---
Entry stack: [V13, V177]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V177]

================================

Block 0x1f1
[0x1f1:0x1f9]
---
Predecessors: [0x1e5]
Successors: [0xd26]
---
0x1f1 JUMPDEST
0x1f2 POP
0x1f3 PUSH2 0x1fa
0x1f6 PUSH2 0xd26
0x1f9 JUMP
---
0x1f1: JUMPDEST 
0x1f3: V181 = 0x1fa
0x1f6: V182 = 0xd26
0x1f9: JUMP 0xd26
---
Entry stack: [V13, V177]
Stack pops: 1
Stack additions: [0x1fa]
Exit stack: [V13, 0x1fa]

================================

Block 0x1fa
[0x1fa:0x20c]
---
Predecessors: [0xd26, 0xf1b]
Successors: []
---
0x1fa JUMPDEST
0x1fb PUSH1 0x40
0x1fd DUP1
0x1fe MLOAD
0x1ff SWAP2
0x200 DUP3
0x201 MSTORE
0x202 MLOAD
0x203 PUSH1 0x20
0x205 SWAP1
0x206 SWAP2
0x207 ADD
0x208 DUP2
0x209 SWAP1
0x20a SUB
0x20b SWAP1
0x20c RETURN
---
0x1fa: JUMPDEST 
0x1fb: V183 = 0x40
0x1fe: V184 = M[0x40]
0x201: M[V184] = S0
0x202: V185 = M[0x40]
0x203: V186 = 0x20
0x207: V187 = ADD V184 0x20
0x20a: V188 = SUB V187 V185
0x20c: RETURN V185 V188
---
Entry stack: [V13, 0x1fa, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x1fa]

================================

Block 0x20d
[0x20d:0x214]
---
Predecessors: [0x5e]
Successors: [0x215, 0x219]
---
0x20d JUMPDEST
0x20e CALLVALUE
0x20f DUP1
0x210 ISZERO
0x211 PUSH2 0x219
0x214 JUMPI
---
0x20d: JUMPDEST 
0x20e: V189 = CALLVALUE
0x210: V190 = ISZERO V189
0x211: V191 = 0x219
0x214: JUMPI 0x219 V190
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V189]
Exit stack: [V13, V189]

================================

Block 0x215
[0x215:0x218]
---
Predecessors: [0x20d]
Successors: []
---
0x215 PUSH1 0x0
0x217 DUP1
0x218 REVERT
---
0x215: V192 = 0x0
0x218: REVERT 0x0 0x0
---
Entry stack: [V13, V189]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V189]

================================

Block 0x219
[0x219:0x22d]
---
Predecessors: [0x20d]
Successors: [0xd2c]
---
0x219 JUMPDEST
0x21a POP
0x21b PUSH2 0x157
0x21e PUSH1 0x1
0x220 PUSH1 0xa0
0x222 PUSH1 0x2
0x224 EXP
0x225 SUB
0x226 PUSH1 0x4
0x228 CALLDATALOAD
0x229 AND
0x22a PUSH2 0xd2c
0x22d JUMP
---
0x219: JUMPDEST 
0x21b: V193 = 0x157
0x21e: V194 = 0x1
0x220: V195 = 0xa0
0x222: V196 = 0x2
0x224: V197 = EXP 0x2 0xa0
0x225: V198 = SUB 0x10000000000000000000000000000000000000000 0x1
0x226: V199 = 0x4
0x228: V200 = CALLDATALOAD 0x4
0x229: V201 = AND V200 0xffffffffffffffffffffffffffffffffffffffff
0x22a: V202 = 0xd2c
0x22d: JUMP 0xd2c
---
Entry stack: [V13, V189]
Stack pops: 1
Stack additions: [0x157, V201]
Exit stack: [V13, 0x157, V201]

================================

Block 0x22e
[0x22e:0x235]
---
Predecessors: [0x74]
Successors: [0x236, 0x23a]
---
0x22e JUMPDEST
0x22f CALLVALUE
0x230 DUP1
0x231 ISZERO
0x232 PUSH2 0x23a
0x235 JUMPI
---
0x22e: JUMPDEST 
0x22f: V203 = CALLVALUE
0x231: V204 = ISZERO V203
0x232: V205 = 0x23a
0x235: JUMPI 0x23a V204
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V203]
Exit stack: [V13, V203]

================================

Block 0x236
[0x236:0x239]
---
Predecessors: [0x22e]
Successors: []
---
0x236 PUSH1 0x0
0x238 DUP1
0x239 REVERT
---
0x236: V206 = 0x0
0x239: REVERT 0x0 0x0
---
Entry stack: [V13, V203]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V203]

================================

Block 0x23a
[0x23a:0x255]
---
Predecessors: [0x22e]
Successors: [0xd4c]
---
0x23a JUMPDEST
0x23b POP
0x23c PUSH2 0xcc
0x23f PUSH1 0x4
0x241 DUP1
0x242 CALLDATALOAD
0x243 SWAP1
0x244 PUSH1 0x20
0x246 SWAP1
0x247 DUP2
0x248 ADD
0x249 DUP1
0x24a CALLDATALOAD
0x24b SWAP2
0x24c ADD
0x24d CALLDATALOAD
0x24e PUSH1 0x0
0x250 NOT
0x251 AND
0x252 PUSH2 0xd4c
0x255 JUMP
---
0x23a: JUMPDEST 
0x23c: V207 = 0xcc
0x23f: V208 = 0x4
0x242: V209 = CALLDATALOAD 0x4
0x244: V210 = 0x20
0x248: V211 = ADD 0x20 0x4
0x24a: V212 = CALLDATALOAD 0x24
0x24c: V213 = ADD 0x20 0x24
0x24d: V214 = CALLDATALOAD 0x44
0x24e: V215 = 0x0
0x250: V216 = NOT 0x0
0x251: V217 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V214
0x252: V218 = 0xd4c
0x255: JUMP 0xd4c
---
Entry stack: [V13, V203]
Stack pops: 1
Stack additions: [0xcc, V209, V212, V217]
Exit stack: [V13, 0xcc, V209, V212, V217]

================================

Block 0x256
[0x256:0x25d]
---
Predecessors: [0x7f]
Successors: [0x25e, 0x262]
---
0x256 JUMPDEST
0x257 CALLVALUE
0x258 DUP1
0x259 ISZERO
0x25a PUSH2 0x262
0x25d JUMPI
---
0x256: JUMPDEST 
0x257: V219 = CALLVALUE
0x259: V220 = ISZERO V219
0x25a: V221 = 0x262
0x25d: JUMPI 0x262 V220
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V219]
Exit stack: [V13, V219]

================================

Block 0x25e
[0x25e:0x261]
---
Predecessors: [0x256]
Successors: []
---
0x25e PUSH1 0x0
0x260 DUP1
0x261 REVERT
---
0x25e: V222 = 0x0
0x261: REVERT 0x0 0x0
---
Entry stack: [V13, V219]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V219]

================================

Block 0x262
[0x262:0x2cc]
---
Predecessors: [0x256]
Successors: [0xd9b]
---
0x262 JUMPDEST
0x263 POP
0x264 PUSH2 0x157
0x267 PUSH1 0x4
0x269 DUP1
0x26a CALLDATASIZE
0x26b SUB
0x26c DUP2
0x26d ADD
0x26e SWAP1
0x26f DUP1
0x270 DUP1
0x271 CALLDATALOAD
0x272 SWAP1
0x273 PUSH1 0x20
0x275 ADD
0x276 SWAP1
0x277 DUP3
0x278 ADD
0x279 DUP1
0x27a CALLDATALOAD
0x27b SWAP1
0x27c PUSH1 0x20
0x27e ADD
0x27f SWAP1
0x280 DUP1
0x281 DUP1
0x282 PUSH1 0x20
0x284 MUL
0x285 PUSH1 0x20
0x287 ADD
0x288 PUSH1 0x40
0x28a MLOAD
0x28b SWAP1
0x28c DUP2
0x28d ADD
0x28e PUSH1 0x40
0x290 MSTORE
0x291 DUP1
0x292 SWAP4
0x293 SWAP3
0x294 SWAP2
0x295 SWAP1
0x296 DUP2
0x297 DUP2
0x298 MSTORE
0x299 PUSH1 0x20
0x29b ADD
0x29c DUP4
0x29d DUP4
0x29e PUSH1 0x20
0x2a0 MUL
0x2a1 DUP1
0x2a2 DUP3
0x2a3 DUP5
0x2a4 CALLDATACOPY
0x2a5 POP
0x2a6 SWAP5
0x2a7 SWAP8
0x2a8 POP
0x2a9 POP
0x2aa POP
0x2ab DUP4
0x2ac CALLDATALOAD
0x2ad PUSH1 0x1
0x2af PUSH1 0xd8
0x2b1 PUSH1 0x2
0x2b3 EXP
0x2b4 SUB
0x2b5 NOT
0x2b6 AND
0x2b7 SWAP5
0x2b8 POP
0x2b9 POP
0x2ba POP
0x2bb POP
0x2bc PUSH1 0x20
0x2be ADD
0x2bf CALLDATALOAD
0x2c0 PUSH1 0x1
0x2c2 PUSH1 0xa0
0x2c4 PUSH1 0x2
0x2c6 EXP
0x2c7 SUB
0x2c8 AND
0x2c9 PUSH2 0xd9b
0x2cc JUMP
---
0x262: JUMPDEST 
0x264: V223 = 0x157
0x267: V224 = 0x4
0x26a: V225 = CALLDATASIZE
0x26b: V226 = SUB V225 0x4
0x26d: V227 = ADD 0x4 V226
0x271: V228 = CALLDATALOAD 0x4
0x273: V229 = 0x20
0x275: V230 = ADD 0x20 0x4
0x278: V231 = ADD 0x4 V228
0x27a: V232 = CALLDATALOAD V231
0x27c: V233 = 0x20
0x27e: V234 = ADD 0x20 V231
0x282: V235 = 0x20
0x284: V236 = MUL 0x20 V232
0x285: V237 = 0x20
0x287: V238 = ADD 0x20 V236
0x288: V239 = 0x40
0x28a: V240 = M[0x40]
0x28d: V241 = ADD V240 V238
0x28e: V242 = 0x40
0x290: M[0x40] = V241
0x298: M[V240] = V232
0x299: V243 = 0x20
0x29b: V244 = ADD 0x20 V240
0x29e: V245 = 0x20
0x2a0: V246 = MUL 0x20 V232
0x2a4: CALLDATACOPY V244 V234 V246
0x2ac: V247 = CALLDATALOAD 0x24
0x2ad: V248 = 0x1
0x2af: V249 = 0xd8
0x2b1: V250 = 0x2
0x2b3: V251 = EXP 0x2 0xd8
0x2b4: V252 = SUB 0x1000000000000000000000000000000000000000000000000000000 0x1
0x2b5: V253 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x2b6: V254 = AND 0xffffffffff000000000000000000000000000000000000000000000000000000 V247
0x2bc: V255 = 0x20
0x2be: V256 = ADD 0x20 0x24
0x2bf: V257 = CALLDATALOAD 0x44
0x2c0: V258 = 0x1
0x2c2: V259 = 0xa0
0x2c4: V260 = 0x2
0x2c6: V261 = EXP 0x2 0xa0
0x2c7: V262 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c8: V263 = AND 0xffffffffffffffffffffffffffffffffffffffff V257
0x2c9: V264 = 0xd9b
0x2cc: JUMP 0xd9b
---
Entry stack: [V13, V219]
Stack pops: 1
Stack additions: [0x157, V240, V254, V263]
Exit stack: [V13, 0x157, V240, V254, V263]

================================

Block 0x2cd
[0x2cd:0x2d4]
---
Predecessors: [0x8a]
Successors: [0x2d5, 0x2d9]
---
0x2cd JUMPDEST
0x2ce CALLVALUE
0x2cf DUP1
0x2d0 ISZERO
0x2d1 PUSH2 0x2d9
0x2d4 JUMPI
---
0x2cd: JUMPDEST 
0x2ce: V265 = CALLVALUE
0x2d0: V266 = ISZERO V265
0x2d1: V267 = 0x2d9
0x2d4: JUMPI 0x2d9 V266
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V265]
Exit stack: [V13, V265]

================================

Block 0x2d5
[0x2d5:0x2d8]
---
Predecessors: [0x2cd]
Successors: []
---
0x2d5 PUSH1 0x0
0x2d7 DUP1
0x2d8 REVERT
---
0x2d5: V268 = 0x0
0x2d8: REVERT 0x0 0x0
---
Entry stack: [V13, V265]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V265]

================================

Block 0x2d9
[0x2d9:0x2f5]
---
Predecessors: [0x2cd]
Successors: [0xe87]
---
0x2d9 JUMPDEST
0x2da POP
0x2db PUSH2 0xcc
0x2de PUSH1 0x4
0x2e0 DUP1
0x2e1 CALLDATALOAD
0x2e2 PUSH1 0x1
0x2e4 PUSH1 0xa0
0x2e6 PUSH1 0x2
0x2e8 EXP
0x2e9 SUB
0x2ea AND
0x2eb SWAP1
0x2ec PUSH1 0x20
0x2ee ADD
0x2ef CALLDATALOAD
0x2f0 ISZERO
0x2f1 ISZERO
0x2f2 PUSH2 0xe87
0x2f5 JUMP
---
0x2d9: JUMPDEST 
0x2db: V269 = 0xcc
0x2de: V270 = 0x4
0x2e1: V271 = CALLDATALOAD 0x4
0x2e2: V272 = 0x1
0x2e4: V273 = 0xa0
0x2e6: V274 = 0x2
0x2e8: V275 = EXP 0x2 0xa0
0x2e9: V276 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ea: V277 = AND 0xffffffffffffffffffffffffffffffffffffffff V271
0x2ec: V278 = 0x20
0x2ee: V279 = ADD 0x20 0x4
0x2ef: V280 = CALLDATALOAD 0x24
0x2f0: V281 = ISZERO V280
0x2f1: V282 = ISZERO V281
0x2f2: V283 = 0xe87
0x2f5: JUMP 0xe87
---
Entry stack: [V13, V265]
Stack pops: 1
Stack additions: [0xcc, V277, V282]
Exit stack: [V13, 0xcc, V277, V282]

================================

Block 0x2f6
[0x2f6:0x2fd]
---
Predecessors: [0x95]
Successors: [0x2fe, 0x302]
---
0x2f6 JUMPDEST
0x2f7 CALLVALUE
0x2f8 DUP1
0x2f9 ISZERO
0x2fa PUSH2 0x302
0x2fd JUMPI
---
0x2f6: JUMPDEST 
0x2f7: V284 = CALLVALUE
0x2f9: V285 = ISZERO V284
0x2fa: V286 = 0x302
0x2fd: JUMPI 0x302 V285
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V284]
Exit stack: [V13, V284]

================================

Block 0x2fe
[0x2fe:0x301]
---
Predecessors: [0x2f6]
Successors: []
---
0x2fe PUSH1 0x0
0x300 DUP1
0x301 REVERT
---
0x2fe: V287 = 0x0
0x301: REVERT 0x0 0x0
---
Entry stack: [V13, V284]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V284]

================================

Block 0x302
[0x302:0x30a]
---
Predecessors: [0x2f6]
Successors: [0xf04]
---
0x302 JUMPDEST
0x303 POP
0x304 PUSH2 0x30b
0x307 PUSH2 0xf04
0x30a JUMP
---
0x302: JUMPDEST 
0x304: V288 = 0x30b
0x307: V289 = 0xf04
0x30a: JUMP 0xf04
---
Entry stack: [V13, V284]
Stack pops: 1
Stack additions: [0x30b]
Exit stack: [V13, 0x30b]

================================

Block 0x30b
[0x30b:0x332]
---
Predecessors: [0xf04, 0xf47]
Successors: []
---
0x30b JUMPDEST
0x30c PUSH1 0x40
0x30e MLOAD
0x30f DUP1
0x310 DUP3
0x311 PUSH1 0x1
0x313 PUSH1 0xa0
0x315 PUSH1 0x2
0x317 EXP
0x318 SUB
0x319 AND
0x31a PUSH1 0x1
0x31c PUSH1 0xa0
0x31e PUSH1 0x2
0x320 EXP
0x321 SUB
0x322 AND
0x323 DUP2
0x324 MSTORE
0x325 PUSH1 0x20
0x327 ADD
0x328 SWAP2
0x329 POP
0x32a POP
0x32b PUSH1 0x40
0x32d MLOAD
0x32e DUP1
0x32f SWAP2
0x330 SUB
0x331 SWAP1
0x332 RETURN
---
0x30b: JUMPDEST 
0x30c: V290 = 0x40
0x30e: V291 = M[0x40]
0x311: V292 = 0x1
0x313: V293 = 0xa0
0x315: V294 = 0x2
0x317: V295 = EXP 0x2 0xa0
0x318: V296 = SUB 0x10000000000000000000000000000000000000000 0x1
0x319: V297 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x31a: V298 = 0x1
0x31c: V299 = 0xa0
0x31e: V300 = 0x2
0x320: V301 = EXP 0x2 0xa0
0x321: V302 = SUB 0x10000000000000000000000000000000000000000 0x1
0x322: V303 = AND 0xffffffffffffffffffffffffffffffffffffffff V297
0x324: M[V291] = V303
0x325: V304 = 0x20
0x327: V305 = ADD 0x20 V291
0x32b: V306 = 0x40
0x32d: V307 = M[0x40]
0x330: V308 = SUB V305 V307
0x332: RETURN V307 V308
---
Entry stack: [V13, 0x30b, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x30b]

================================

Block 0x333
[0x333:0x33a]
---
Predecessors: [0xa0]
Successors: [0x33b, 0x33f]
---
0x333 JUMPDEST
0x334 CALLVALUE
0x335 DUP1
0x336 ISZERO
0x337 PUSH2 0x33f
0x33a JUMPI
---
0x333: JUMPDEST 
0x334: V309 = CALLVALUE
0x336: V310 = ISZERO V309
0x337: V311 = 0x33f
0x33a: JUMPI 0x33f V310
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V309]
Exit stack: [V13, V309]

================================

Block 0x33b
[0x33b:0x33e]
---
Predecessors: [0x333]
Successors: []
---
0x33b PUSH1 0x0
0x33d DUP1
0x33e REVERT
---
0x33b: V312 = 0x0
0x33e: REVERT 0x0 0x0
---
Entry stack: [V13, V309]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V309]

================================

Block 0x33f
[0x33f:0x347]
---
Predecessors: [0x333]
Successors: [0xf1b]
---
0x33f JUMPDEST
0x340 POP
0x341 PUSH2 0x1fa
0x344 PUSH2 0xf1b
0x347 JUMP
---
0x33f: JUMPDEST 
0x341: V313 = 0x1fa
0x344: V314 = 0xf1b
0x347: JUMP 0xf1b
---
Entry stack: [V13, V309]
Stack pops: 1
Stack additions: [0x1fa]
Exit stack: [V13, 0x1fa]

================================

Block 0x348
[0x348:0x34f]
---
Predecessors: [0xab]
Successors: [0x350, 0x354]
---
0x348 JUMPDEST
0x349 CALLVALUE
0x34a DUP1
0x34b ISZERO
0x34c PUSH2 0x354
0x34f JUMPI
---
0x348: JUMPDEST 
0x349: V315 = CALLVALUE
0x34b: V316 = ISZERO V315
0x34c: V317 = 0x354
0x34f: JUMPI 0x354 V316
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V315]
Exit stack: [V13, V315]

================================

Block 0x350
[0x350:0x353]
---
Predecessors: [0x348]
Successors: []
---
0x350 PUSH1 0x0
0x352 DUP1
0x353 REVERT
---
0x350: V318 = 0x0
0x353: REVERT 0x0 0x0
---
Entry stack: [V13, V315]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V315]

================================

Block 0x354
[0x354:0x368]
---
Predecessors: [0x348]
Successors: [0xf21]
---
0x354 JUMPDEST
0x355 POP
0x356 PUSH2 0x157
0x359 PUSH1 0x1
0x35b PUSH1 0xa0
0x35d PUSH1 0x2
0x35f EXP
0x360 SUB
0x361 PUSH1 0x4
0x363 CALLDATALOAD
0x364 AND
0x365 PUSH2 0xf21
0x368 JUMP
---
0x354: JUMPDEST 
0x356: V319 = 0x157
0x359: V320 = 0x1
0x35b: V321 = 0xa0
0x35d: V322 = 0x2
0x35f: V323 = EXP 0x2 0xa0
0x360: V324 = SUB 0x10000000000000000000000000000000000000000 0x1
0x361: V325 = 0x4
0x363: V326 = CALLDATALOAD 0x4
0x364: V327 = AND V326 0xffffffffffffffffffffffffffffffffffffffff
0x365: V328 = 0xf21
0x368: JUMP 0xf21
---
Entry stack: [V13, V315]
Stack pops: 1
Stack additions: [0x157, V327]
Exit stack: [V13, 0x157, V327]

================================

Block 0x369
[0x369:0x370]
---
Predecessors: [0xb6]
Successors: [0x371, 0x375]
---
0x369 JUMPDEST
0x36a CALLVALUE
0x36b DUP1
0x36c ISZERO
0x36d PUSH2 0x375
0x370 JUMPI
---
0x369: JUMPDEST 
0x36a: V329 = CALLVALUE
0x36c: V330 = ISZERO V329
0x36d: V331 = 0x375
0x370: JUMPI 0x375 V330
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V329]
Exit stack: [V13, V329]

================================

Block 0x371
[0x371:0x374]
---
Predecessors: [0x369]
Successors: []
---
0x371 PUSH1 0x0
0x373 DUP1
0x374 REVERT
---
0x371: V332 = 0x0
0x374: REVERT 0x0 0x0
---
Entry stack: [V13, V329]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V329]

================================

Block 0x375
[0x375:0x37d]
---
Predecessors: [0x369]
Successors: [0xf41]
---
0x375 JUMPDEST
0x376 POP
0x377 PUSH2 0x37e
0x37a PUSH2 0xf41
0x37d JUMP
---
0x375: JUMPDEST 
0x377: V333 = 0x37e
0x37a: V334 = 0xf41
0x37d: JUMP 0xf41
---
Entry stack: [V13, V329]
Stack pops: 1
Stack additions: [0x37e]
Exit stack: [V13, 0x37e]

================================

Block 0x37e
[0x37e:0x398]
---
Predecessors: [0xf41]
Successors: []
---
0x37e JUMPDEST
0x37f PUSH1 0x40
0x381 DUP1
0x382 MLOAD
0x383 PUSH1 0x0
0x385 NOT
0x386 SWAP3
0x387 DUP4
0x388 AND
0x389 SWAP1
0x38a SWAP3
0x38b AND
0x38c DUP3
0x38d MSTORE
0x38e MLOAD
0x38f PUSH1 0x20
0x391 SWAP1
0x392 SWAP2
0x393 ADD
0x394 DUP2
0x395 SWAP1
0x396 SUB
0x397 SWAP1
0x398 RETURN
---
0x37e: JUMPDEST 
0x37f: V335 = 0x40
0x382: V336 = M[0x40]
0x383: V337 = 0x0
0x385: V338 = NOT 0x0
0x388: V339 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V1497
0x38b: V340 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V339
0x38d: M[V336] = V340
0x38e: V341 = M[0x40]
0x38f: V342 = 0x20
0x393: V343 = ADD V336 0x20
0x396: V344 = SUB V343 V341
0x398: RETURN V341 V344
---
Entry stack: [V13, 0x37e, V1497]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x37e]

================================

Block 0x399
[0x399:0x3a0]
---
Predecessors: [0xc1]
Successors: [0x3a1, 0x3a5]
---
0x399 JUMPDEST
0x39a CALLVALUE
0x39b DUP1
0x39c ISZERO
0x39d PUSH2 0x3a5
0x3a0 JUMPI
---
0x399: JUMPDEST 
0x39a: V345 = CALLVALUE
0x39c: V346 = ISZERO V345
0x39d: V347 = 0x3a5
0x3a0: JUMPI 0x3a5 V346
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V345]
Exit stack: [V13, V345]

================================

Block 0x3a1
[0x3a1:0x3a4]
---
Predecessors: [0x399]
Successors: []
---
0x3a1 PUSH1 0x0
0x3a3 DUP1
0x3a4 REVERT
---
0x3a1: V348 = 0x0
0x3a4: REVERT 0x0 0x0
---
Entry stack: [V13, V345]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V345]

================================

Block 0x3a5
[0x3a5:0x3ad]
---
Predecessors: [0x399]
Successors: [0xf47]
---
0x3a5 JUMPDEST
0x3a6 POP
0x3a7 PUSH2 0x30b
0x3aa PUSH2 0xf47
0x3ad JUMP
---
0x3a5: JUMPDEST 
0x3a7: V349 = 0x30b
0x3aa: V350 = 0xf47
0x3ad: JUMP 0xf47
---
Entry stack: [V13, V345]
Stack pops: 1
Stack additions: [0x30b]
Exit stack: [V13, 0x30b]

================================

Block 0x3ae
[0x3ae:0x3e6]
---
Predecessors: [0xda]
Successors: [0x3e7, 0x3eb]
---
0x3ae JUMPDEST
0x3af PUSH1 0x0
0x3b1 DUP1
0x3b2 CALLER
0x3b3 PUSH1 0x1
0x3b5 PUSH1 0xa0
0x3b7 PUSH1 0x2
0x3b9 EXP
0x3ba SUB
0x3bb AND
0x3bc PUSH1 0x1
0x3be PUSH1 0xa0
0x3c0 PUSH1 0x2
0x3c2 EXP
0x3c3 SUB
0x3c4 AND
0x3c5 DUP2
0x3c6 MSTORE
0x3c7 PUSH1 0x20
0x3c9 ADD
0x3ca SWAP1
0x3cb DUP2
0x3cc MSTORE
0x3cd PUSH1 0x20
0x3cf ADD
0x3d0 PUSH1 0x0
0x3d2 SHA3
0x3d3 PUSH1 0x0
0x3d5 SWAP1
0x3d6 SLOAD
0x3d7 SWAP1
0x3d8 PUSH2 0x100
0x3db EXP
0x3dc SWAP1
0x3dd DIV
0x3de PUSH1 0xff
0x3e0 AND
0x3e1 ISZERO
0x3e2 ISZERO
0x3e3 PUSH2 0x3eb
0x3e6 JUMPI
---
0x3ae: JUMPDEST 
0x3af: V351 = 0x0
0x3b2: V352 = CALLER
0x3b3: V353 = 0x1
0x3b5: V354 = 0xa0
0x3b7: V355 = 0x2
0x3b9: V356 = EXP 0x2 0xa0
0x3ba: V357 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3bb: V358 = AND 0xffffffffffffffffffffffffffffffffffffffff V352
0x3bc: V359 = 0x1
0x3be: V360 = 0xa0
0x3c0: V361 = 0x2
0x3c2: V362 = EXP 0x2 0xa0
0x3c3: V363 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c4: V364 = AND 0xffffffffffffffffffffffffffffffffffffffff V358
0x3c6: M[0x0] = V364
0x3c7: V365 = 0x20
0x3c9: V366 = ADD 0x20 0x0
0x3cc: M[0x20] = 0x0
0x3cd: V367 = 0x20
0x3cf: V368 = ADD 0x20 0x20
0x3d0: V369 = 0x0
0x3d2: V370 = SHA3 0x0 0x40
0x3d3: V371 = 0x0
0x3d6: V372 = S[V370]
0x3d8: V373 = 0x100
0x3db: V374 = EXP 0x100 0x0
0x3dd: V375 = DIV V372 0x1
0x3de: V376 = 0xff
0x3e0: V377 = AND 0xff V375
0x3e1: V378 = ISZERO V377
0x3e2: V379 = ISZERO V378
0x3e3: V380 = 0x3eb
0x3e6: JUMPI 0x3eb V379
---
Entry stack: [V13, 0xcc, V74]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xcc, V74]

================================

Block 0x3e7
[0x3e7:0x3ea]
---
Predecessors: [0x3ae]
Successors: []
---
0x3e7 PUSH1 0x0
0x3e9 DUP1
0x3ea REVERT
---
0x3e7: V381 = 0x0
0x3ea: REVERT 0x0 0x0
---
Entry stack: [V13, 0xcc, V74]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xcc, V74]

================================

Block 0x3eb
[0x3eb:0x414]
---
Predecessors: [0x3ae]
Successors: [0xcc]
---
0x3eb JUMPDEST
0x3ec DUP1
0x3ed PUSH1 0x1
0x3ef PUSH1 0x0
0x3f1 PUSH2 0x100
0x3f4 EXP
0x3f5 DUP2
0x3f6 SLOAD
0x3f7 DUP2
0x3f8 PUSH1 0x1
0x3fa PUSH1 0xa0
0x3fc PUSH1 0x2
0x3fe EXP
0x3ff SUB
0x400 MUL
0x401 NOT
0x402 AND
0x403 SWAP1
0x404 DUP4
0x405 PUSH1 0x1
0x407 PUSH1 0xa0
0x409 PUSH1 0x2
0x40b EXP
0x40c SUB
0x40d AND
0x40e MUL
0x40f OR
0x410 SWAP1
0x411 SSTORE
0x412 POP
0x413 POP
0x414 JUMP
---
0x3eb: JUMPDEST 
0x3ed: V382 = 0x1
0x3ef: V383 = 0x0
0x3f1: V384 = 0x100
0x3f4: V385 = EXP 0x100 0x0
0x3f6: V386 = S[0x1]
0x3f8: V387 = 0x1
0x3fa: V388 = 0xa0
0x3fc: V389 = 0x2
0x3fe: V390 = EXP 0x2 0xa0
0x3ff: V391 = SUB 0x10000000000000000000000000000000000000000 0x1
0x400: V392 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x401: V393 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x402: V394 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V386
0x405: V395 = 0x1
0x407: V396 = 0xa0
0x409: V397 = 0x2
0x40b: V398 = EXP 0x2 0xa0
0x40c: V399 = SUB 0x10000000000000000000000000000000000000000 0x1
0x40d: V400 = AND 0xffffffffffffffffffffffffffffffffffffffff V74
0x40e: V401 = MUL V400 0x1
0x40f: V402 = OR V401 V394
0x411: S[0x1] = V402
0x414: JUMP 0xcc
---
Entry stack: [V13, 0xcc, V74]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x415
[0x415:0x44f]
---
Predecessors: [0xfb]
Successors: [0x450, 0x454]
---
0x415 JUMPDEST
0x416 PUSH1 0x0
0x418 DUP1
0x419 PUSH1 0x0
0x41b CALLER
0x41c PUSH1 0x1
0x41e PUSH1 0xa0
0x420 PUSH1 0x2
0x422 EXP
0x423 SUB
0x424 AND
0x425 PUSH1 0x1
0x427 PUSH1 0xa0
0x429 PUSH1 0x2
0x42b EXP
0x42c SUB
0x42d AND
0x42e DUP2
0x42f MSTORE
0x430 PUSH1 0x20
0x432 ADD
0x433 SWAP1
0x434 DUP2
0x435 MSTORE
0x436 PUSH1 0x20
0x438 ADD
0x439 PUSH1 0x0
0x43b SHA3
0x43c PUSH1 0x0
0x43e SWAP1
0x43f SLOAD
0x440 SWAP1
0x441 PUSH2 0x100
0x444 EXP
0x445 SWAP1
0x446 DIV
0x447 PUSH1 0xff
0x449 AND
0x44a ISZERO
0x44b ISZERO
0x44c PUSH2 0x454
0x44f JUMPI
---
0x415: JUMPDEST 
0x416: V403 = 0x0
0x419: V404 = 0x0
0x41b: V405 = CALLER
0x41c: V406 = 0x1
0x41e: V407 = 0xa0
0x420: V408 = 0x2
0x422: V409 = EXP 0x2 0xa0
0x423: V410 = SUB 0x10000000000000000000000000000000000000000 0x1
0x424: V411 = AND 0xffffffffffffffffffffffffffffffffffffffff V405
0x425: V412 = 0x1
0x427: V413 = 0xa0
0x429: V414 = 0x2
0x42b: V415 = EXP 0x2 0xa0
0x42c: V416 = SUB 0x10000000000000000000000000000000000000000 0x1
0x42d: V417 = AND 0xffffffffffffffffffffffffffffffffffffffff V411
0x42f: M[0x0] = V417
0x430: V418 = 0x20
0x432: V419 = ADD 0x20 0x0
0x435: M[0x20] = 0x0
0x436: V420 = 0x20
0x438: V421 = ADD 0x20 0x20
0x439: V422 = 0x0
0x43b: V423 = SHA3 0x0 0x40
0x43c: V424 = 0x0
0x43f: V425 = S[V423]
0x441: V426 = 0x100
0x444: V427 = EXP 0x100 0x0
0x446: V428 = DIV V425 0x1
0x447: V429 = 0xff
0x449: V430 = AND 0xff V428
0x44a: V431 = ISZERO V430
0x44b: V432 = ISZERO V431
0x44c: V433 = 0x454
0x44f: JUMPI 0x454 V432
---
Entry stack: [V13, 0xcc]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0xcc, 0x0]

================================

Block 0x450
[0x450:0x453]
---
Predecessors: [0x415]
Successors: []
---
0x450 PUSH1 0x0
0x452 DUP1
0x453 REVERT
---
0x450: V434 = 0x0
0x453: REVERT 0x0 0x0
---
Entry stack: [V13, 0xcc, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xcc, 0x0]

================================

Block 0x454
[0x454:0x4bf]
---
Predecessors: [0x415]
Successors: [0x4c0, 0x4c4]
---
0x454 JUMPDEST
0x455 PUSH1 0x4
0x457 PUSH1 0x0
0x459 SWAP1
0x45a SLOAD
0x45b SWAP1
0x45c PUSH2 0x100
0x45f EXP
0x460 SWAP1
0x461 DIV
0x462 PUSH1 0x1
0x464 PUSH1 0xa0
0x466 PUSH1 0x2
0x468 EXP
0x469 SUB
0x46a AND
0x46b PUSH1 0x1
0x46d PUSH1 0xa0
0x46f PUSH1 0x2
0x471 EXP
0x472 SUB
0x473 AND
0x474 PUSH4 0x70a08231
0x479 ADDRESS
0x47a PUSH1 0x40
0x47c MLOAD
0x47d DUP3
0x47e PUSH4 0xffffffff
0x483 AND
0x484 PUSH1 0xe0
0x486 PUSH1 0x2
0x488 EXP
0x489 MUL
0x48a DUP2
0x48b MSTORE
0x48c PUSH1 0x4
0x48e ADD
0x48f DUP1
0x490 DUP3
0x491 PUSH1 0x1
0x493 PUSH1 0xa0
0x495 PUSH1 0x2
0x497 EXP
0x498 SUB
0x499 AND
0x49a PUSH1 0x1
0x49c PUSH1 0xa0
0x49e PUSH1 0x2
0x4a0 EXP
0x4a1 SUB
0x4a2 AND
0x4a3 DUP2
0x4a4 MSTORE
0x4a5 PUSH1 0x20
0x4a7 ADD
0x4a8 SWAP2
0x4a9 POP
0x4aa POP
0x4ab PUSH1 0x20
0x4ad PUSH1 0x40
0x4af MLOAD
0x4b0 DUP1
0x4b1 DUP4
0x4b2 SUB
0x4b3 DUP2
0x4b4 PUSH1 0x0
0x4b6 DUP8
0x4b7 DUP1
0x4b8 EXTCODESIZE
0x4b9 ISZERO
0x4ba DUP1
0x4bb ISZERO
0x4bc PUSH2 0x4c4
0x4bf JUMPI
---
0x454: JUMPDEST 
0x455: V435 = 0x4
0x457: V436 = 0x0
0x45a: V437 = S[0x4]
0x45c: V438 = 0x100
0x45f: V439 = EXP 0x100 0x0
0x461: V440 = DIV V437 0x1
0x462: V441 = 0x1
0x464: V442 = 0xa0
0x466: V443 = 0x2
0x468: V444 = EXP 0x2 0xa0
0x469: V445 = SUB 0x10000000000000000000000000000000000000000 0x1
0x46a: V446 = AND 0xffffffffffffffffffffffffffffffffffffffff V440
0x46b: V447 = 0x1
0x46d: V448 = 0xa0
0x46f: V449 = 0x2
0x471: V450 = EXP 0x2 0xa0
0x472: V451 = SUB 0x10000000000000000000000000000000000000000 0x1
0x473: V452 = AND 0xffffffffffffffffffffffffffffffffffffffff V446
0x474: V453 = 0x70a08231
0x479: V454 = ADDRESS
0x47a: V455 = 0x40
0x47c: V456 = M[0x40]
0x47e: V457 = 0xffffffff
0x483: V458 = AND 0xffffffff 0x70a08231
0x484: V459 = 0xe0
0x486: V460 = 0x2
0x488: V461 = EXP 0x2 0xe0
0x489: V462 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x48b: M[V456] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x48c: V463 = 0x4
0x48e: V464 = ADD 0x4 V456
0x491: V465 = 0x1
0x493: V466 = 0xa0
0x495: V467 = 0x2
0x497: V468 = EXP 0x2 0xa0
0x498: V469 = SUB 0x10000000000000000000000000000000000000000 0x1
0x499: V470 = AND 0xffffffffffffffffffffffffffffffffffffffff V454
0x49a: V471 = 0x1
0x49c: V472 = 0xa0
0x49e: V473 = 0x2
0x4a0: V474 = EXP 0x2 0xa0
0x4a1: V475 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4a2: V476 = AND 0xffffffffffffffffffffffffffffffffffffffff V470
0x4a4: M[V464] = V476
0x4a5: V477 = 0x20
0x4a7: V478 = ADD 0x20 V464
0x4ab: V479 = 0x20
0x4ad: V480 = 0x40
0x4af: V481 = M[0x40]
0x4b2: V482 = SUB V478 V481
0x4b4: V483 = 0x0
0x4b8: V484 = EXTCODESIZE V452
0x4b9: V485 = ISZERO V484
0x4bb: V486 = ISZERO V485
0x4bc: V487 = 0x4c4
0x4bf: JUMPI 0x4c4 V486
---
Entry stack: [V13, 0xcc, 0x0]
Stack pops: 0
Stack additions: [V452, 0x70a08231, V478, 0x20, V481, V482, V481, 0x0, V452, V485]
Exit stack: [V13, 0xcc, 0x0, V452, 0x70a08231, V478, 0x20, V481, V482, V481, 0x0, V452, V485]

================================

Block 0x4c0
[0x4c0:0x4c3]
---
Predecessors: [0x454]
Successors: []
---
0x4c0 PUSH1 0x0
0x4c2 DUP1
0x4c3 REVERT
---
0x4c0: V488 = 0x0
0x4c3: REVERT 0x0 0x0
---
Entry stack: [V13, 0xcc, 0x0, V452, 0x70a08231, V478, 0x20, V481, V482, V481, 0x0, V452, V485]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xcc, 0x0, V452, 0x70a08231, V478, 0x20, V481, V482, V481, 0x0, V452, V485]

================================

Block 0x4c4
[0x4c4:0x4ce]
---
Predecessors: [0x454]
Successors: [0x4cf, 0x4d8]
---
0x4c4 JUMPDEST
0x4c5 POP
0x4c6 GAS
0x4c7 CALL
0x4c8 ISZERO
0x4c9 DUP1
0x4ca ISZERO
0x4cb PUSH2 0x4d8
0x4ce JUMPI
---
0x4c4: JUMPDEST 
0x4c6: V489 = GAS
0x4c7: V490 = CALL V489 V452 0x0 V481 V482 V481 0x20
0x4c8: V491 = ISZERO V490
0x4ca: V492 = ISZERO V491
0x4cb: V493 = 0x4d8
0x4ce: JUMPI 0x4d8 V492
---
Entry stack: [V13, 0xcc, 0x0, V452, 0x70a08231, V478, 0x20, V481, V482, V481, 0x0, V452, V485]
Stack pops: 7
Stack additions: [V491]
Exit stack: [V13, 0xcc, 0x0, V452, 0x70a08231, V478, V491]

================================

Block 0x4cf
[0x4cf:0x4d7]
---
Predecessors: [0x4c4]
Successors: []
---
0x4cf RETURNDATASIZE
0x4d0 PUSH1 0x0
0x4d2 DUP1
0x4d3 RETURNDATACOPY
0x4d4 RETURNDATASIZE
0x4d5 PUSH1 0x0
0x4d7 REVERT
---
0x4cf: V494 = RETURNDATASIZE
0x4d0: V495 = 0x0
0x4d3: RETURNDATACOPY 0x0 0x0 V494
0x4d4: V496 = RETURNDATASIZE
0x4d5: V497 = 0x0
0x4d7: REVERT 0x0 V496
---
Entry stack: [V13, 0xcc, 0x0, V452, 0x70a08231, V478, V491]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xcc, 0x0, V452, 0x70a08231, V478, V491]

================================

Block 0x4d8
[0x4d8:0x4e9]
---
Predecessors: [0x4c4]
Successors: [0x4ea, 0x4ee]
---
0x4d8 JUMPDEST
0x4d9 POP
0x4da POP
0x4db POP
0x4dc POP
0x4dd PUSH1 0x40
0x4df MLOAD
0x4e0 RETURNDATASIZE
0x4e1 PUSH1 0x20
0x4e3 DUP2
0x4e4 LT
0x4e5 ISZERO
0x4e6 PUSH2 0x4ee
0x4e9 JUMPI
---
0x4d8: JUMPDEST 
0x4dd: V498 = 0x40
0x4df: V499 = M[0x40]
0x4e0: V500 = RETURNDATASIZE
0x4e1: V501 = 0x20
0x4e4: V502 = LT V500 0x20
0x4e5: V503 = ISZERO V502
0x4e6: V504 = 0x4ee
0x4e9: JUMPI 0x4ee V503
---
Entry stack: [V13, 0xcc, 0x0, V452, 0x70a08231, V478, V491]
Stack pops: 4
Stack additions: [V499, V500]
Exit stack: [V13, 0xcc, 0x0, V499, V500]

================================

Block 0x4ea
[0x4ea:0x4ed]
---
Predecessors: [0x4d8]
Successors: []
---
0x4ea PUSH1 0x0
0x4ec DUP1
0x4ed REVERT
---
0x4ea: V505 = 0x0
0x4ed: REVERT 0x0 0x0
---
Entry stack: [V13, 0xcc, 0x0, V499, V500]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xcc, 0x0, V499, V500]

================================

Block 0x4ee
[0x4ee:0x574]
---
Predecessors: [0x4d8]
Successors: [0x575, 0x579]
---
0x4ee JUMPDEST
0x4ef DUP2
0x4f0 ADD
0x4f1 SWAP1
0x4f2 DUP1
0x4f3 DUP1
0x4f4 MLOAD
0x4f5 SWAP1
0x4f6 PUSH1 0x20
0x4f8 ADD
0x4f9 SWAP1
0x4fa SWAP3
0x4fb SWAP2
0x4fc SWAP1
0x4fd POP
0x4fe POP
0x4ff POP
0x500 SWAP1
0x501 POP
0x502 PUSH1 0x4
0x504 PUSH1 0x0
0x506 SWAP1
0x507 SLOAD
0x508 SWAP1
0x509 PUSH2 0x100
0x50c EXP
0x50d SWAP1
0x50e DIV
0x50f PUSH1 0x1
0x511 PUSH1 0xa0
0x513 PUSH1 0x2
0x515 EXP
0x516 SUB
0x517 AND
0x518 PUSH1 0x1
0x51a PUSH1 0xa0
0x51c PUSH1 0x2
0x51e EXP
0x51f SUB
0x520 AND
0x521 PUSH4 0xa9059cbb
0x526 CALLER
0x527 DUP4
0x528 PUSH1 0x40
0x52a MLOAD
0x52b DUP4
0x52c PUSH4 0xffffffff
0x531 AND
0x532 PUSH1 0xe0
0x534 PUSH1 0x2
0x536 EXP
0x537 MUL
0x538 DUP2
0x539 MSTORE
0x53a PUSH1 0x4
0x53c ADD
0x53d DUP1
0x53e DUP4
0x53f PUSH1 0x1
0x541 PUSH1 0xa0
0x543 PUSH1 0x2
0x545 EXP
0x546 SUB
0x547 AND
0x548 PUSH1 0x1
0x54a PUSH1 0xa0
0x54c PUSH1 0x2
0x54e EXP
0x54f SUB
0x550 AND
0x551 DUP2
0x552 MSTORE
0x553 PUSH1 0x20
0x555 ADD
0x556 DUP3
0x557 DUP2
0x558 MSTORE
0x559 PUSH1 0x20
0x55b ADD
0x55c SWAP3
0x55d POP
0x55e POP
0x55f POP
0x560 PUSH1 0x20
0x562 PUSH1 0x40
0x564 MLOAD
0x565 DUP1
0x566 DUP4
0x567 SUB
0x568 DUP2
0x569 PUSH1 0x0
0x56b DUP8
0x56c DUP1
0x56d EXTCODESIZE
0x56e ISZERO
0x56f DUP1
0x570 ISZERO
0x571 PUSH2 0x579
0x574 JUMPI
---
0x4ee: JUMPDEST 
0x4f0: V506 = ADD V499 V500
0x4f4: V507 = M[V499]
0x4f6: V508 = 0x20
0x4f8: V509 = ADD 0x20 V499
0x502: V510 = 0x4
0x504: V511 = 0x0
0x507: V512 = S[0x4]
0x509: V513 = 0x100
0x50c: V514 = EXP 0x100 0x0
0x50e: V515 = DIV V512 0x1
0x50f: V516 = 0x1
0x511: V517 = 0xa0
0x513: V518 = 0x2
0x515: V519 = EXP 0x2 0xa0
0x516: V520 = SUB 0x10000000000000000000000000000000000000000 0x1
0x517: V521 = AND 0xffffffffffffffffffffffffffffffffffffffff V515
0x518: V522 = 0x1
0x51a: V523 = 0xa0
0x51c: V524 = 0x2
0x51e: V525 = EXP 0x2 0xa0
0x51f: V526 = SUB 0x10000000000000000000000000000000000000000 0x1
0x520: V527 = AND 0xffffffffffffffffffffffffffffffffffffffff V521
0x521: V528 = 0xa9059cbb
0x526: V529 = CALLER
0x528: V530 = 0x40
0x52a: V531 = M[0x40]
0x52c: V532 = 0xffffffff
0x531: V533 = AND 0xffffffff 0xa9059cbb
0x532: V534 = 0xe0
0x534: V535 = 0x2
0x536: V536 = EXP 0x2 0xe0
0x537: V537 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x539: M[V531] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x53a: V538 = 0x4
0x53c: V539 = ADD 0x4 V531
0x53f: V540 = 0x1
0x541: V541 = 0xa0
0x543: V542 = 0x2
0x545: V543 = EXP 0x2 0xa0
0x546: V544 = SUB 0x10000000000000000000000000000000000000000 0x1
0x547: V545 = AND 0xffffffffffffffffffffffffffffffffffffffff V529
0x548: V546 = 0x1
0x54a: V547 = 0xa0
0x54c: V548 = 0x2
0x54e: V549 = EXP 0x2 0xa0
0x54f: V550 = SUB 0x10000000000000000000000000000000000000000 0x1
0x550: V551 = AND 0xffffffffffffffffffffffffffffffffffffffff V545
0x552: M[V539] = V551
0x553: V552 = 0x20
0x555: V553 = ADD 0x20 V539
0x558: M[V553] = V507
0x559: V554 = 0x20
0x55b: V555 = ADD 0x20 V553
0x560: V556 = 0x20
0x562: V557 = 0x40
0x564: V558 = M[0x40]
0x567: V559 = SUB V555 V558
0x569: V560 = 0x0
0x56d: V561 = EXTCODESIZE V527
0x56e: V562 = ISZERO V561
0x570: V563 = ISZERO V562
0x571: V564 = 0x579
0x574: JUMPI 0x579 V563
---
Entry stack: [V13, 0xcc, 0x0, V499, V500]
Stack pops: 3
Stack additions: [V507, V527, 0xa9059cbb, V555, 0x20, V558, V559, V558, 0x0, V527, V562]
Exit stack: [V13, 0xcc, V507, V527, 0xa9059cbb, V555, 0x20, V558, V559, V558, 0x0, V527, V562]

================================

Block 0x575
[0x575:0x578]
---
Predecessors: [0x4ee]
Successors: []
---
0x575 PUSH1 0x0
0x577 DUP1
0x578 REVERT
---
0x575: V565 = 0x0
0x578: REVERT 0x0 0x0
---
Entry stack: [V13, 0xcc, V507, V527, 0xa9059cbb, V555, 0x20, V558, V559, V558, 0x0, V527, V562]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xcc, V507, V527, 0xa9059cbb, V555, 0x20, V558, V559, V558, 0x0, V527, V562]

================================

Block 0x579
[0x579:0x583]
---
Predecessors: [0x4ee]
Successors: [0x584, 0x58d]
---
0x579 JUMPDEST
0x57a POP
0x57b GAS
0x57c CALL
0x57d ISZERO
0x57e DUP1
0x57f ISZERO
0x580 PUSH2 0x58d
0x583 JUMPI
---
0x579: JUMPDEST 
0x57b: V566 = GAS
0x57c: V567 = CALL V566 V527 0x0 V558 V559 V558 0x20
0x57d: V568 = ISZERO V567
0x57f: V569 = ISZERO V568
0x580: V570 = 0x58d
0x583: JUMPI 0x58d V569
---
Entry stack: [V13, 0xcc, V507, V527, 0xa9059cbb, V555, 0x20, V558, V559, V558, 0x0, V527, V562]
Stack pops: 7
Stack additions: [V568]
Exit stack: [V13, 0xcc, V507, V527, 0xa9059cbb, V555, V568]

================================

Block 0x584
[0x584:0x58c]
---
Predecessors: [0x579]
Successors: []
---
0x584 RETURNDATASIZE
0x585 PUSH1 0x0
0x587 DUP1
0x588 RETURNDATACOPY
0x589 RETURNDATASIZE
0x58a PUSH1 0x0
0x58c REVERT
---
0x584: V571 = RETURNDATASIZE
0x585: V572 = 0x0
0x588: RETURNDATACOPY 0x0 0x0 V571
0x589: V573 = RETURNDATASIZE
0x58a: V574 = 0x0
0x58c: REVERT 0x0 V573
---
Entry stack: [V13, 0xcc, V507, V527, 0xa9059cbb, V555, V568]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xcc, V507, V527, 0xa9059cbb, V555, V568]

================================

Block 0x58d
[0x58d:0x59e]
---
Predecessors: [0x579]
Successors: [0x59f, 0x5a3]
---
0x58d JUMPDEST
0x58e POP
0x58f POP
0x590 POP
0x591 POP
0x592 PUSH1 0x40
0x594 MLOAD
0x595 RETURNDATASIZE
0x596 PUSH1 0x20
0x598 DUP2
0x599 LT
0x59a ISZERO
0x59b PUSH2 0x5a3
0x59e JUMPI
---
0x58d: JUMPDEST 
0x592: V575 = 0x40
0x594: V576 = M[0x40]
0x595: V577 = RETURNDATASIZE
0x596: V578 = 0x20
0x599: V579 = LT V577 0x20
0x59a: V580 = ISZERO V579
0x59b: V581 = 0x5a3
0x59e: JUMPI 0x5a3 V580
---
Entry stack: [V13, 0xcc, V507, V527, 0xa9059cbb, V555, V568]
Stack pops: 4
Stack additions: [V576, V577]
Exit stack: [V13, 0xcc, V507, V576, V577]

================================

Block 0x59f
[0x59f:0x5a2]
---
Predecessors: [0x58d]
Successors: []
---
0x59f PUSH1 0x0
0x5a1 DUP1
0x5a2 REVERT
---
0x59f: V582 = 0x0
0x5a2: REVERT 0x0 0x0
---
Entry stack: [V13, 0xcc, V507, V576, V577]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xcc, V507, V576, V577]

================================

Block 0x5a3
[0x5a3:0x5ab]
---
Predecessors: [0x58d]
Successors: [0x5ac, 0x5fe]
---
0x5a3 JUMPDEST
0x5a4 POP
0x5a5 MLOAD
0x5a6 ISZERO
0x5a7 ISZERO
0x5a8 PUSH2 0x5fe
0x5ab JUMPI
---
0x5a3: JUMPDEST 
0x5a5: V583 = M[V576]
0x5a6: V584 = ISZERO V583
0x5a7: V585 = ISZERO V584
0x5a8: V586 = 0x5fe
0x5ab: JUMPI 0x5fe V585
---
Entry stack: [V13, 0xcc, V507, V576, V577]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0xcc, V507]

================================

Block 0x5ac
[0x5ac:0x5fd]
---
Predecessors: [0x5a3]
Successors: []
---
0x5ac PUSH1 0x40
0x5ae DUP1
0x5af MLOAD
0x5b0 PUSH1 0xe5
0x5b2 PUSH1 0x2
0x5b4 EXP
0x5b5 PUSH3 0x461bcd
0x5b9 MUL
0x5ba DUP2
0x5bb MSTORE
0x5bc PUSH1 0x4
0x5be ADD
0x5bf PUSH1 0x20
0x5c1 DUP1
0x5c2 DUP3
0x5c3 ADD
0x5c4 DUP3
0x5c5 DUP2
0x5c6 SUB
0x5c7 SWAP1
0x5c8 SWAP3
0x5c9 MSTORE
0x5ca PUSH1 0x15
0x5cc DUP3
0x5cd MSTORE
0x5ce PUSH32 0x5472616e7366657220646964206e6f7420776f726b0000000000000000000000
0x5ef SWAP2
0x5f0 DUP2
0x5f1 ADD
0x5f2 SWAP2
0x5f3 DUP3
0x5f4 MSTORE
0x5f5 SWAP2
0x5f6 MLOAD
0x5f7 SWAP2
0x5f8 ADD
0x5f9 DUP2
0x5fa SWAP1
0x5fb SUB
0x5fc SWAP1
0x5fd REVERT
---
0x5ac: V587 = 0x40
0x5af: V588 = M[0x40]
0x5b0: V589 = 0xe5
0x5b2: V590 = 0x2
0x5b4: V591 = EXP 0x2 0xe5
0x5b5: V592 = 0x461bcd
0x5b9: V593 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x5bb: M[V588] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x5bc: V594 = 0x4
0x5be: V595 = ADD 0x4 V588
0x5bf: V596 = 0x20
0x5c3: V597 = ADD V595 0x20
0x5c6: V598 = SUB V597 V595
0x5c9: M[V595] = V598
0x5ca: V599 = 0x15
0x5cd: M[V597] = 0x15
0x5ce: V600 = 0x5472616e7366657220646964206e6f7420776f726b0000000000000000000000
0x5f1: V601 = ADD 0x20 V597
0x5f4: M[V601] = 0x5472616e7366657220646964206e6f7420776f726b0000000000000000000000
0x5f6: V602 = M[0x40]
0x5f8: V603 = ADD 0x20 V601
0x5fb: V604 = SUB V603 V602
0x5fd: REVERT V602 V604
---
Entry stack: [V13, 0xcc, V507]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xcc, V507]

================================

Block 0x5fe
[0x5fe:0x609]
---
Predecessors: [0x5a3]
Successors: []
---
0x5fe JUMPDEST
0x5ff CALLER
0x600 PUSH1 0x1
0x602 PUSH1 0xa0
0x604 PUSH1 0x2
0x606 EXP
0x607 SUB
0x608 AND
0x609 SELFDESTRUCT
---
0x5fe: JUMPDEST 
0x5ff: V605 = CALLER
0x600: V606 = 0x1
0x602: V607 = 0xa0
0x604: V608 = 0x2
0x606: V609 = EXP 0x2 0xa0
0x607: V610 = SUB 0x10000000000000000000000000000000000000000 0x1
0x608: V611 = AND 0xffffffffffffffffffffffffffffffffffffffff V605
0x609: SELFDESTRUCT V611
---
Entry stack: [V13, 0xcc, V507]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xcc, V507]

================================

Block 0x60a
[0x60a:0x642]
---
Predecessors: [0x110]
Successors: [0x643, 0x647]
---
0x60a JUMPDEST
0x60b PUSH1 0x0
0x60d DUP1
0x60e CALLER
0x60f PUSH1 0x1
0x611 PUSH1 0xa0
0x613 PUSH1 0x2
0x615 EXP
0x616 SUB
0x617 AND
0x618 PUSH1 0x1
0x61a PUSH1 0xa0
0x61c PUSH1 0x2
0x61e EXP
0x61f SUB
0x620 AND
0x621 DUP2
0x622 MSTORE
0x623 PUSH1 0x20
0x625 ADD
0x626 SWAP1
0x627 DUP2
0x628 MSTORE
0x629 PUSH1 0x20
0x62b ADD
0x62c PUSH1 0x0
0x62e SHA3
0x62f PUSH1 0x0
0x631 SWAP1
0x632 SLOAD
0x633 SWAP1
0x634 PUSH2 0x100
0x637 EXP
0x638 SWAP1
0x639 DIV
0x63a PUSH1 0xff
0x63c AND
0x63d ISZERO
0x63e ISZERO
0x63f PUSH2 0x647
0x642 JUMPI
---
0x60a: JUMPDEST 
0x60b: V612 = 0x0
0x60e: V613 = CALLER
0x60f: V614 = 0x1
0x611: V615 = 0xa0
0x613: V616 = 0x2
0x615: V617 = EXP 0x2 0xa0
0x616: V618 = SUB 0x10000000000000000000000000000000000000000 0x1
0x617: V619 = AND 0xffffffffffffffffffffffffffffffffffffffff V613
0x618: V620 = 0x1
0x61a: V621 = 0xa0
0x61c: V622 = 0x2
0x61e: V623 = EXP 0x2 0xa0
0x61f: V624 = SUB 0x10000000000000000000000000000000000000000 0x1
0x620: V625 = AND 0xffffffffffffffffffffffffffffffffffffffff V619
0x622: M[0x0] = V625
0x623: V626 = 0x20
0x625: V627 = ADD 0x20 0x0
0x628: M[0x20] = 0x0
0x629: V628 = 0x20
0x62b: V629 = ADD 0x20 0x20
0x62c: V630 = 0x0
0x62e: V631 = SHA3 0x0 0x40
0x62f: V632 = 0x0
0x632: V633 = S[V631]
0x634: V634 = 0x100
0x637: V635 = EXP 0x100 0x0
0x639: V636 = DIV V633 0x1
0x63a: V637 = 0xff
0x63c: V638 = AND 0xff V636
0x63d: V639 = ISZERO V638
0x63e: V640 = ISZERO V639
0x63f: V641 = 0x647
0x642: JUMPI 0x647 V640
---
Entry stack: [V13, 0xcc, V94, V104]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xcc, V94, V104]

================================

Block 0x643
[0x643:0x646]
---
Predecessors: [0x60a]
Successors: []
---
0x643 PUSH1 0x0
0x645 DUP1
0x646 REVERT
---
0x643: V642 = 0x0
0x646: REVERT 0x0 0x0
---
Entry stack: [V13, 0xcc, V94, V104]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xcc, V94, V104]

================================

Block 0x647
[0x647:0x681]
---
Predecessors: [0x60a]
Successors: [0x682, 0x6b9]
---
0x647 JUMPDEST
0x648 PUSH1 0x2
0x64a PUSH1 0x0
0x64c DUP4
0x64d PUSH1 0x1
0x64f PUSH1 0xa0
0x651 PUSH1 0x2
0x653 EXP
0x654 SUB
0x655 AND
0x656 PUSH1 0x1
0x658 PUSH1 0xa0
0x65a PUSH1 0x2
0x65c EXP
0x65d SUB
0x65e AND
0x65f DUP2
0x660 MSTORE
0x661 PUSH1 0x20
0x663 ADD
0x664 SWAP1
0x665 DUP2
0x666 MSTORE
0x667 PUSH1 0x20
0x669 ADD
0x66a PUSH1 0x0
0x66c SHA3
0x66d PUSH1 0x0
0x66f SWAP1
0x670 SLOAD
0x671 SWAP1
0x672 PUSH2 0x100
0x675 EXP
0x676 SWAP1
0x677 DIV
0x678 PUSH1 0xff
0x67a AND
0x67b ISZERO
0x67c DUP1
0x67d ISZERO
0x67e PUSH2 0x6b9
0x681 JUMPI
---
0x647: JUMPDEST 
0x648: V643 = 0x2
0x64a: V644 = 0x0
0x64d: V645 = 0x1
0x64f: V646 = 0xa0
0x651: V647 = 0x2
0x653: V648 = EXP 0x2 0xa0
0x654: V649 = SUB 0x10000000000000000000000000000000000000000 0x1
0x655: V650 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x656: V651 = 0x1
0x658: V652 = 0xa0
0x65a: V653 = 0x2
0x65c: V654 = EXP 0x2 0xa0
0x65d: V655 = SUB 0x10000000000000000000000000000000000000000 0x1
0x65e: V656 = AND 0xffffffffffffffffffffffffffffffffffffffff V650
0x660: M[0x0] = V656
0x661: V657 = 0x20
0x663: V658 = ADD 0x20 0x0
0x666: M[0x20] = 0x2
0x667: V659 = 0x20
0x669: V660 = ADD 0x20 0x20
0x66a: V661 = 0x0
0x66c: V662 = SHA3 0x0 0x40
0x66d: V663 = 0x0
0x670: V664 = S[V662]
0x672: V665 = 0x100
0x675: V666 = EXP 0x100 0x0
0x677: V667 = DIV V664 0x1
0x678: V668 = 0xff
0x67a: V669 = AND 0xff V667
0x67b: V670 = ISZERO V669
0x67d: V671 = ISZERO V670
0x67e: V672 = 0x6b9
0x681: JUMPI 0x6b9 V671
---
Entry stack: [V13, 0xcc, V94, V104]
Stack pops: 2
Stack additions: [S1, S0, V670]
Exit stack: [V13, 0xcc, V94, V104, V670]

================================

Block 0x682
[0x682:0x6b8]
---
Predecessors: [0x647]
Successors: [0x6b9]
---
0x682 POP
0x683 PUSH1 0x3
0x685 PUSH1 0x0
0x687 DUP3
0x688 PUSH1 0x1
0x68a PUSH1 0xd8
0x68c PUSH1 0x2
0x68e EXP
0x68f SUB
0x690 NOT
0x691 AND
0x692 PUSH1 0x1
0x694 PUSH1 0xd8
0x696 PUSH1 0x2
0x698 EXP
0x699 SUB
0x69a NOT
0x69b AND
0x69c DUP2
0x69d MSTORE
0x69e PUSH1 0x20
0x6a0 ADD
0x6a1 SWAP1
0x6a2 DUP2
0x6a3 MSTORE
0x6a4 PUSH1 0x20
0x6a6 ADD
0x6a7 PUSH1 0x0
0x6a9 SHA3
0x6aa PUSH1 0x0
0x6ac SWAP1
0x6ad SLOAD
0x6ae SWAP1
0x6af PUSH2 0x100
0x6b2 EXP
0x6b3 SWAP1
0x6b4 DIV
0x6b5 PUSH1 0xff
0x6b7 AND
0x6b8 ISZERO
---
0x683: V673 = 0x3
0x685: V674 = 0x0
0x688: V675 = 0x1
0x68a: V676 = 0xd8
0x68c: V677 = 0x2
0x68e: V678 = EXP 0x2 0xd8
0x68f: V679 = SUB 0x1000000000000000000000000000000000000000000000000000000 0x1
0x690: V680 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x691: V681 = AND 0xffffffffff000000000000000000000000000000000000000000000000000000 V104
0x692: V682 = 0x1
0x694: V683 = 0xd8
0x696: V684 = 0x2
0x698: V685 = EXP 0x2 0xd8
0x699: V686 = SUB 0x1000000000000000000000000000000000000000000000000000000 0x1
0x69a: V687 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x69b: V688 = AND 0xffffffffff000000000000000000000000000000000000000000000000000000 V681
0x69d: M[0x0] = V688
0x69e: V689 = 0x20
0x6a0: V690 = ADD 0x20 0x0
0x6a3: M[0x20] = 0x3
0x6a4: V691 = 0x20
0x6a6: V692 = ADD 0x20 0x20
0x6a7: V693 = 0x0
0x6a9: V694 = SHA3 0x0 0x40
0x6aa: V695 = 0x0
0x6ad: V696 = S[V694]
0x6af: V697 = 0x100
0x6b2: V698 = EXP 0x100 0x0
0x6b4: V699 = DIV V696 0x1
0x6b5: V700 = 0xff
0x6b7: V701 = AND 0xff V699
0x6b8: V702 = ISZERO V701
---
Entry stack: [V13, 0xcc, V94, V104, V670]
Stack pops: 2
Stack additions: [S1, V702]
Exit stack: [V13, 0xcc, V94, V104, V702]

================================

Block 0x6b9
[0x6b9:0x6bf]
---
Predecessors: [0x647, 0x682]
Successors: [0x6c0, 0x737]
---
0x6b9 JUMPDEST
0x6ba ISZERO
0x6bb ISZERO
0x6bc PUSH2 0x737
0x6bf JUMPI
---
0x6b9: JUMPDEST 
0x6ba: V703 = ISZERO S0
0x6bb: V704 = ISZERO V703
0x6bc: V705 = 0x737
0x6bf: JUMPI 0x737 V704
---
Entry stack: [V13, 0xcc, V94, V104, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xcc, V94, V104]

================================

Block 0x6c0
[0x6c0:0x736]
---
Predecessors: [0x6b9]
Successors: []
---
0x6c0 PUSH1 0x40
0x6c2 DUP1
0x6c3 MLOAD
0x6c4 PUSH1 0xe5
0x6c6 PUSH1 0x2
0x6c8 EXP
0x6c9 PUSH3 0x461bcd
0x6cd MUL
0x6ce DUP2
0x6cf MSTORE
0x6d0 PUSH1 0x4
0x6d2 ADD
0x6d3 PUSH1 0x20
0x6d5 DUP1
0x6d6 DUP3
0x6d7 ADD
0x6d8 DUP3
0x6d9 DUP2
0x6da SUB
0x6db SWAP1
0x6dc SWAP3
0x6dd MSTORE
0x6de PUSH1 0x26
0x6e0 DUP3
0x6e1 MSTORE
0x6e2 PUSH32 0x46756e647320616c72656164792073656e74202f20436f646520616c72656164
0x703 SWAP2
0x704 DUP2
0x705 ADD
0x706 SWAP2
0x707 DUP3
0x708 MSTORE
0x709 PUSH32 0x7920757365640000000000000000000000000000000000000000000000000000
0x72a SWAP1
0x72b DUP3
0x72c ADD
0x72d MSTORE
0x72e DUP2
0x72f MLOAD
0x730 SWAP2
0x731 ADD
0x732 DUP2
0x733 SWAP1
0x734 SUB
0x735 SWAP1
0x736 REVERT
---
0x6c0: V706 = 0x40
0x6c3: V707 = M[0x40]
0x6c4: V708 = 0xe5
0x6c6: V709 = 0x2
0x6c8: V710 = EXP 0x2 0xe5
0x6c9: V711 = 0x461bcd
0x6cd: V712 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x6cf: M[V707] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x6d0: V713 = 0x4
0x6d2: V714 = ADD 0x4 V707
0x6d3: V715 = 0x20
0x6d7: V716 = ADD V714 0x20
0x6da: V717 = SUB V716 V714
0x6dd: M[V714] = V717
0x6de: V718 = 0x26
0x6e1: M[V716] = 0x26
0x6e2: V719 = 0x46756e647320616c72656164792073656e74202f20436f646520616c72656164
0x705: V720 = ADD 0x20 V716
0x708: M[V720] = 0x46756e647320616c72656164792073656e74202f20436f646520616c72656164
0x709: V721 = 0x7920757365640000000000000000000000000000000000000000000000000000
0x72c: V722 = ADD V720 0x20
0x72d: M[V722] = 0x7920757365640000000000000000000000000000000000000000000000000000
0x72f: V723 = M[0x40]
0x731: V724 = ADD 0x40 V720
0x734: V725 = SUB V724 V723
0x736: REVERT V723 V725
---
Entry stack: [V13, 0xcc, V94, V104]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xcc, V94, V104]

================================

Block 0x737
[0x737:0x7e1]
---
Predecessors: [0x6b9]
Successors: [0x7e2, 0x7e6]
---
0x737 JUMPDEST
0x738 PUSH1 0x1
0x73a PUSH1 0xa0
0x73c PUSH1 0x2
0x73e EXP
0x73f SUB
0x740 DUP3
0x741 DUP2
0x742 AND
0x743 DUP2
0x744 AND
0x745 PUSH1 0x0
0x747 DUP2
0x748 DUP2
0x749 MSTORE
0x74a PUSH1 0x2
0x74c PUSH1 0x20
0x74e DUP1
0x74f DUP4
0x750 ADD
0x751 SWAP2
0x752 DUP3
0x753 MSTORE
0x754 DUP2
0x755 DUP2
0x756 ADD
0x757 DUP1
0x758 DUP5
0x759 SHA3
0x75a DUP1
0x75b SLOAD
0x75c PUSH1 0xff
0x75e PUSH2 0x100
0x761 DUP8
0x762 SWAP1
0x763 EXP
0x764 SWAP1
0x765 DUP2
0x766 MUL
0x767 NOT
0x768 SWAP2
0x769 DUP3
0x76a AND
0x76b PUSH1 0x1
0x76d ISZERO
0x76e ISZERO
0x76f DUP3
0x770 MUL
0x771 SWAP1
0x772 DUP2
0x773 OR
0x774 SWAP1
0x775 SWAP4
0x776 SSTORE
0x777 PUSH1 0x1
0x779 PUSH1 0xd8
0x77b PUSH1 0x2
0x77d EXP
0x77e SUB
0x77f NOT
0x780 DUP11
0x781 DUP2
0x782 AND
0x783 AND
0x784 DUP8
0x785 MSTORE
0x786 PUSH1 0x3
0x788 SWAP1
0x789 SWAP6
0x78a MSTORE
0x78b SWAP2
0x78c DUP6
0x78d SHA3
0x78e DUP1
0x78f SLOAD
0x790 SWAP1
0x791 SWAP3
0x792 AND
0x793 OR
0x794 SWAP1
0x795 SSTORE
0x796 PUSH1 0x4
0x798 DUP1
0x799 SLOAD
0x79a PUSH1 0x6
0x79c SLOAD
0x79d PUSH1 0x40
0x79f DUP1
0x7a0 MLOAD
0x7a1 PUSH4 0xa9059cbb
0x7a6 PUSH4 0xffffffff
0x7ab DUP2
0x7ac AND
0x7ad PUSH1 0xe0
0x7af PUSH1 0x2
0x7b1 EXP
0x7b2 MUL
0x7b3 DUP3
0x7b4 MSTORE
0x7b5 SWAP5
0x7b6 ADD
0x7b7 SWAP8
0x7b8 DUP9
0x7b9 MSTORE
0x7ba SWAP7
0x7bb DUP5
0x7bc ADD
0x7bd SWAP1
0x7be DUP2
0x7bf MSTORE
0x7c0 SWAP6
0x7c1 MLOAD
0x7c2 SWAP4
0x7c3 SWAP1
0x7c4 DIV
0x7c5 DUP7
0x7c6 AND
0x7c7 SWAP1
0x7c8 SWAP6
0x7c9 AND
0x7ca SWAP5
0x7cb SWAP4
0x7cc DUP2
0x7cd ADD
0x7ce SWAP3
0x7cf SWAP1
0x7d0 SWAP2
0x7d1 SWAP1
0x7d2 DUP2
0x7d3 DUP5
0x7d4 SUB
0x7d5 SWAP1
0x7d6 DUP3
0x7d7 SWAP1
0x7d8 DUP8
0x7d9 DUP1
0x7da EXTCODESIZE
0x7db ISZERO
0x7dc DUP1
0x7dd ISZERO
0x7de PUSH2 0x7e6
0x7e1 JUMPI
---
0x737: JUMPDEST 
0x738: V726 = 0x1
0x73a: V727 = 0xa0
0x73c: V728 = 0x2
0x73e: V729 = EXP 0x2 0xa0
0x73f: V730 = SUB 0x10000000000000000000000000000000000000000 0x1
0x742: V731 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x744: V732 = AND 0xffffffffffffffffffffffffffffffffffffffff V731
0x745: V733 = 0x0
0x749: M[0x0] = V732
0x74a: V734 = 0x2
0x74c: V735 = 0x20
0x750: V736 = ADD 0x0 0x20
0x753: M[0x20] = 0x2
0x756: V737 = ADD 0x20 0x20
0x759: V738 = SHA3 0x0 0x40
0x75b: V739 = S[V738]
0x75c: V740 = 0xff
0x75e: V741 = 0x100
0x763: V742 = EXP 0x100 0x0
0x766: V743 = MUL 0x1 0xff
0x767: V744 = NOT 0xff
0x76a: V745 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V739
0x76b: V746 = 0x1
0x76d: V747 = ISZERO 0x1
0x76e: V748 = ISZERO 0x0
0x770: V749 = MUL 0x1 0x1
0x773: V750 = OR 0x1 V745
0x776: S[V738] = V750
0x777: V751 = 0x1
0x779: V752 = 0xd8
0x77b: V753 = 0x2
0x77d: V754 = EXP 0x2 0xd8
0x77e: V755 = SUB 0x1000000000000000000000000000000000000000000000000000000 0x1
0x77f: V756 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x782: V757 = AND 0xffffffffff000000000000000000000000000000000000000000000000000000 V104
0x783: V758 = AND V757 0xffffffffff000000000000000000000000000000000000000000000000000000
0x785: M[0x0] = V758
0x786: V759 = 0x3
0x78a: M[0x20] = 0x3
0x78d: V760 = SHA3 0x0 0x40
0x78f: V761 = S[V760]
0x792: V762 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V761
0x793: V763 = OR V762 0x1
0x795: S[V760] = V763
0x796: V764 = 0x4
0x799: V765 = S[0x4]
0x79a: V766 = 0x6
0x79c: V767 = S[0x6]
0x79d: V768 = 0x40
0x7a0: V769 = M[0x40]
0x7a1: V770 = 0xa9059cbb
0x7a6: V771 = 0xffffffff
0x7ac: V772 = AND 0xa9059cbb 0xffffffff
0x7ad: V773 = 0xe0
0x7af: V774 = 0x2
0x7b1: V775 = EXP 0x2 0xe0
0x7b2: V776 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x7b4: M[V769] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x7b6: V777 = ADD 0x4 V769
0x7b9: M[V777] = V732
0x7bc: V778 = ADD 0x20 V777
0x7bf: M[V778] = V767
0x7c1: V779 = M[0x40]
0x7c4: V780 = DIV V765 0x1
0x7c6: V781 = AND 0xffffffffffffffffffffffffffffffffffffffff V780
0x7c9: V782 = AND 0xffffffffffffffffffffffffffffffffffffffff V781
0x7cd: V783 = ADD 0x20 V778
0x7d4: V784 = SUB V783 V779
0x7da: V785 = EXTCODESIZE V782
0x7db: V786 = ISZERO V785
0x7dd: V787 = ISZERO V786
0x7de: V788 = 0x7e6
0x7e1: JUMPI 0x7e6 V787
---
Entry stack: [V13, 0xcc, V94, V104]
Stack pops: 2
Stack additions: [S1, S0, V782, 0xa9059cbb, V783, 0x20, V779, V784, V779, 0x0, V782, V786]
Exit stack: [V13, 0xcc, V94, V104, V782, 0xa9059cbb, V783, 0x20, V779, V784, V779, 0x0, V782, V786]

================================

Block 0x7e2
[0x7e2:0x7e5]
---
Predecessors: [0x737]
Successors: []
---
0x7e2 PUSH1 0x0
0x7e4 DUP1
0x7e5 REVERT
---
0x7e2: V789 = 0x0
0x7e5: REVERT 0x0 0x0
---
Entry stack: [V13, 0xcc, V94, V104, V782, 0xa9059cbb, V783, 0x20, V779, V784, V779, 0x0, V782, V786]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xcc, V94, V104, V782, 0xa9059cbb, V783, 0x20, V779, V784, V779, 0x0, V782, V786]

================================

Block 0x7e6
[0x7e6:0x7f0]
---
Predecessors: [0x737]
Successors: [0x7f1, 0x7fa]
---
0x7e6 JUMPDEST
0x7e7 POP
0x7e8 GAS
0x7e9 CALL
0x7ea ISZERO
0x7eb DUP1
0x7ec ISZERO
0x7ed PUSH2 0x7fa
0x7f0 JUMPI
---
0x7e6: JUMPDEST 
0x7e8: V790 = GAS
0x7e9: V791 = CALL V790 V782 0x0 V779 V784 V779 0x20
0x7ea: V792 = ISZERO V791
0x7ec: V793 = ISZERO V792
0x7ed: V794 = 0x7fa
0x7f0: JUMPI 0x7fa V793
---
Entry stack: [V13, 0xcc, V94, V104, V782, 0xa9059cbb, V783, 0x20, V779, V784, V779, 0x0, V782, V786]
Stack pops: 7
Stack additions: [V792]
Exit stack: [V13, 0xcc, V94, V104, V782, 0xa9059cbb, V783, V792]

================================

Block 0x7f1
[0x7f1:0x7f9]
---
Predecessors: [0x7e6]
Successors: []
---
0x7f1 RETURNDATASIZE
0x7f2 PUSH1 0x0
0x7f4 DUP1
0x7f5 RETURNDATACOPY
0x7f6 RETURNDATASIZE
0x7f7 PUSH1 0x0
0x7f9 REVERT
---
0x7f1: V795 = RETURNDATASIZE
0x7f2: V796 = 0x0
0x7f5: RETURNDATACOPY 0x0 0x0 V795
0x7f6: V797 = RETURNDATASIZE
0x7f7: V798 = 0x0
0x7f9: REVERT 0x0 V797
---
Entry stack: [V13, 0xcc, V94, V104, V782, 0xa9059cbb, V783, V792]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xcc, V94, V104, V782, 0xa9059cbb, V783, V792]

================================

Block 0x7fa
[0x7fa:0x80b]
---
Predecessors: [0x7e6]
Successors: [0x80c, 0x810]
---
0x7fa JUMPDEST
0x7fb POP
0x7fc POP
0x7fd POP
0x7fe POP
0x7ff PUSH1 0x40
0x801 MLOAD
0x802 RETURNDATASIZE
0x803 PUSH1 0x20
0x805 DUP2
0x806 LT
0x807 ISZERO
0x808 PUSH2 0x810
0x80b JUMPI
---
0x7fa: JUMPDEST 
0x7ff: V799 = 0x40
0x801: V800 = M[0x40]
0x802: V801 = RETURNDATASIZE
0x803: V802 = 0x20
0x806: V803 = LT V801 0x20
0x807: V804 = ISZERO V803
0x808: V805 = 0x810
0x80b: JUMPI 0x810 V804
---
Entry stack: [V13, 0xcc, V94, V104, V782, 0xa9059cbb, V783, V792]
Stack pops: 4
Stack additions: [V800, V801]
Exit stack: [V13, 0xcc, V94, V104, V800, V801]

================================

Block 0x80c
[0x80c:0x80f]
---
Predecessors: [0x7fa]
Successors: []
---
0x80c PUSH1 0x0
0x80e DUP1
0x80f REVERT
---
0x80c: V806 = 0x0
0x80f: REVERT 0x0 0x0
---
Entry stack: [V13, 0xcc, V94, V104, V800, V801]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xcc, V94, V104, V800, V801]

================================

Block 0x810
[0x810:0x818]
---
Predecessors: [0x7fa]
Successors: [0x819, 0x86b]
---
0x810 JUMPDEST
0x811 POP
0x812 MLOAD
0x813 ISZERO
0x814 ISZERO
0x815 PUSH2 0x86b
0x818 JUMPI
---
0x810: JUMPDEST 
0x812: V807 = M[V800]
0x813: V808 = ISZERO V807
0x814: V809 = ISZERO V808
0x815: V810 = 0x86b
0x818: JUMPI 0x86b V809
---
Entry stack: [V13, 0xcc, V94, V104, V800, V801]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0xcc, V94, V104]

================================

Block 0x819
[0x819:0x86a]
---
Predecessors: [0x810]
Successors: []
---
0x819 PUSH1 0x40
0x81b DUP1
0x81c MLOAD
0x81d PUSH1 0xe5
0x81f PUSH1 0x2
0x821 EXP
0x822 PUSH3 0x461bcd
0x826 MUL
0x827 DUP2
0x828 MSTORE
0x829 PUSH1 0x4
0x82b ADD
0x82c PUSH1 0x20
0x82e DUP1
0x82f DUP3
0x830 ADD
0x831 DUP3
0x832 DUP2
0x833 SUB
0x834 SWAP1
0x835 SWAP3
0x836 MSTORE
0x837 PUSH1 0x15
0x839 DUP3
0x83a MSTORE
0x83b PUSH32 0x5472616e7366657220646964206e6f7420776f726b0000000000000000000000
0x85c SWAP2
0x85d DUP2
0x85e ADD
0x85f SWAP2
0x860 DUP3
0x861 MSTORE
0x862 SWAP2
0x863 MLOAD
0x864 SWAP2
0x865 ADD
0x866 DUP2
0x867 SWAP1
0x868 SUB
0x869 SWAP1
0x86a REVERT
---
0x819: V811 = 0x40
0x81c: V812 = M[0x40]
0x81d: V813 = 0xe5
0x81f: V814 = 0x2
0x821: V815 = EXP 0x2 0xe5
0x822: V816 = 0x461bcd
0x826: V817 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x828: M[V812] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x829: V818 = 0x4
0x82b: V819 = ADD 0x4 V812
0x82c: V820 = 0x20
0x830: V821 = ADD V819 0x20
0x833: V822 = SUB V821 V819
0x836: M[V819] = V822
0x837: V823 = 0x15
0x83a: M[V821] = 0x15
0x83b: V824 = 0x5472616e7366657220646964206e6f7420776f726b0000000000000000000000
0x85e: V825 = ADD 0x20 V821
0x861: M[V825] = 0x5472616e7366657220646964206e6f7420776f726b0000000000000000000000
0x863: V826 = M[0x40]
0x865: V827 = ADD 0x20 V825
0x868: V828 = SUB V827 V826
0x86a: REVERT V826 V828
---
Entry stack: [V13, 0xcc, V94, V104]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xcc, V94, V104]

================================

Block 0x86b
[0x86b:0x89a]
---
Predecessors: [0x810]
Successors: [0x89b, 0x8a4]
---
0x86b JUMPDEST
0x86c PUSH1 0x5
0x86e SLOAD
0x86f PUSH1 0x40
0x871 MLOAD
0x872 PUSH1 0x1
0x874 PUSH1 0xa0
0x876 PUSH1 0x2
0x878 EXP
0x879 SUB
0x87a DUP5
0x87b AND
0x87c SWAP2
0x87d DUP1
0x87e ISZERO
0x87f PUSH2 0x8fc
0x882 MUL
0x883 SWAP2
0x884 PUSH1 0x0
0x886 DUP2
0x887 DUP1
0x888 DUP1
0x889 SUB
0x88a DUP2
0x88b DUP6
0x88c DUP9
0x88d DUP9
0x88e CALL
0x88f SWAP4
0x890 POP
0x891 POP
0x892 POP
0x893 POP
0x894 ISZERO
0x895 DUP1
0x896 ISZERO
0x897 PUSH2 0x8a4
0x89a JUMPI
---
0x86b: JUMPDEST 
0x86c: V829 = 0x5
0x86e: V830 = S[0x5]
0x86f: V831 = 0x40
0x871: V832 = M[0x40]
0x872: V833 = 0x1
0x874: V834 = 0xa0
0x876: V835 = 0x2
0x878: V836 = EXP 0x2 0xa0
0x879: V837 = SUB 0x10000000000000000000000000000000000000000 0x1
0x87b: V838 = AND V94 0xffffffffffffffffffffffffffffffffffffffff
0x87e: V839 = ISZERO V830
0x87f: V840 = 0x8fc
0x882: V841 = MUL 0x8fc V839
0x884: V842 = 0x0
0x889: V843 = SUB V832 V832
0x88e: V844 = CALL V841 V838 V830 V832 V843 V832 0x0
0x894: V845 = ISZERO V844
0x896: V846 = ISZERO V845
0x897: V847 = 0x8a4
0x89a: JUMPI 0x8a4 V846
---
Entry stack: [V13, 0xcc, V94, V104]
Stack pops: 2
Stack additions: [S1, S0, V845]
Exit stack: [V13, 0xcc, V94, V104, V845]

================================

Block 0x89b
[0x89b:0x8a3]
---
Predecessors: [0x86b]
Successors: []
---
0x89b RETURNDATASIZE
0x89c PUSH1 0x0
0x89e DUP1
0x89f RETURNDATACOPY
0x8a0 RETURNDATASIZE
0x8a1 PUSH1 0x0
0x8a3 REVERT
---
0x89b: V848 = RETURNDATASIZE
0x89c: V849 = 0x0
0x89f: RETURNDATACOPY 0x0 0x0 V848
0x8a0: V850 = RETURNDATASIZE
0x8a1: V851 = 0x0
0x8a3: REVERT 0x0 V850
---
Entry stack: [V13, 0xcc, V94, V104, V845]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xcc, V94, V104, V845]

================================

Block 0x8a4
[0x8a4:0x90c]
---
Predecessors: [0x86b]
Successors: [0xcc]
---
0x8a4 JUMPDEST
0x8a5 POP
0x8a6 PUSH1 0x5
0x8a8 SLOAD
0x8a9 PUSH1 0x6
0x8ab SLOAD
0x8ac PUSH1 0x40
0x8ae DUP1
0x8af MLOAD
0x8b0 PUSH1 0x1
0x8b2 PUSH1 0xa0
0x8b4 PUSH1 0x2
0x8b6 EXP
0x8b7 SUB
0x8b8 DUP1
0x8b9 DUP8
0x8ba AND
0x8bb AND
0x8bc DUP2
0x8bd MSTORE
0x8be PUSH1 0x1
0x8c0 PUSH1 0xd8
0x8c2 PUSH1 0x2
0x8c4 EXP
0x8c5 SUB
0x8c6 NOT
0x8c7 DUP1
0x8c8 DUP7
0x8c9 AND
0x8ca AND
0x8cb PUSH1 0x20
0x8cd SWAP2
0x8ce DUP3
0x8cf ADD
0x8d0 SWAP1
0x8d1 DUP2
0x8d2 MSTORE
0x8d3 DUP2
0x8d4 ADD
0x8d5 SWAP4
0x8d6 DUP5
0x8d7 MSTORE
0x8d8 SWAP3
0x8d9 DUP4
0x8da ADD
0x8db SWAP2
0x8dc DUP3
0x8dd MSTORE
0x8de MLOAD
0x8df PUSH32 0xaa7ecfdc9fd3f39ab380a0b6413557f94ed0dfd05ed31c925521736fa750eac
0x900 SWAP3
0x901 SWAP2
0x902 SWAP1
0x903 SWAP2
0x904 ADD
0x905 DUP2
0x906 SWAP1
0x907 SUB
0x908 SWAP1
0x909 LOG1
0x90a POP
0x90b POP
0x90c JUMP
---
0x8a4: JUMPDEST 
0x8a6: V852 = 0x5
0x8a8: V853 = S[0x5]
0x8a9: V854 = 0x6
0x8ab: V855 = S[0x6]
0x8ac: V856 = 0x40
0x8af: V857 = M[0x40]
0x8b0: V858 = 0x1
0x8b2: V859 = 0xa0
0x8b4: V860 = 0x2
0x8b6: V861 = EXP 0x2 0xa0
0x8b7: V862 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8ba: V863 = AND V94 0xffffffffffffffffffffffffffffffffffffffff
0x8bb: V864 = AND V863 0xffffffffffffffffffffffffffffffffffffffff
0x8bd: M[V857] = V864
0x8be: V865 = 0x1
0x8c0: V866 = 0xd8
0x8c2: V867 = 0x2
0x8c4: V868 = EXP 0x2 0xd8
0x8c5: V869 = SUB 0x1000000000000000000000000000000000000000000000000000000 0x1
0x8c6: V870 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x8c9: V871 = AND V104 0xffffffffff000000000000000000000000000000000000000000000000000000
0x8ca: V872 = AND V871 0xffffffffff000000000000000000000000000000000000000000000000000000
0x8cb: V873 = 0x20
0x8cf: V874 = ADD 0x20 V857
0x8d2: M[V874] = V872
0x8d4: V875 = ADD 0x20 V874
0x8d7: M[V875] = V853
0x8da: V876 = ADD 0x20 V875
0x8dd: M[V876] = V855
0x8de: V877 = M[0x40]
0x8df: V878 = 0xaa7ecfdc9fd3f39ab380a0b6413557f94ed0dfd05ed31c925521736fa750eac
0x904: V879 = ADD 0x20 V876
0x907: V880 = SUB V879 V877
0x909: LOG V877 V880 0xaa7ecfdc9fd3f39ab380a0b6413557f94ed0dfd05ed31c925521736fa750eac
0x90c: JUMP 0xcc
---
Entry stack: [V13, 0xcc, V94, V104, V845]
Stack pops: 4
Stack additions: []
Exit stack: [V13]

================================

Block 0x90d
[0x90d:0x92c]
---
Predecessors: [0x141]
Successors: [0x157]
---
0x90d JUMPDEST
0x90e PUSH1 0x3
0x910 PUSH1 0x20
0x912 MSTORE
0x913 DUP1
0x914 PUSH1 0x0
0x916 MSTORE
0x917 PUSH1 0x40
0x919 PUSH1 0x0
0x91b SHA3
0x91c PUSH1 0x0
0x91e SWAP2
0x91f POP
0x920 SLOAD
0x921 SWAP1
0x922 PUSH2 0x100
0x925 EXP
0x926 SWAP1
0x927 DIV
0x928 PUSH1 0xff
0x92a AND
0x92b DUP2
0x92c JUMP
---
0x90d: JUMPDEST 
0x90e: V881 = 0x3
0x910: V882 = 0x20
0x912: M[0x20] = 0x3
0x914: V883 = 0x0
0x916: M[0x0] = V119
0x917: V884 = 0x40
0x919: V885 = 0x0
0x91b: V886 = SHA3 0x0 0x40
0x91c: V887 = 0x0
0x920: V888 = S[V886]
0x922: V889 = 0x100
0x925: V890 = EXP 0x100 0x0
0x927: V891 = DIV V888 0x1
0x928: V892 = 0xff
0x92a: V893 = AND 0xff V891
0x92c: JUMP 0x157
---
Entry stack: [V13, 0x157, V119]
Stack pops: 2
Stack additions: [S1, V893]
Exit stack: [V13, 0x157, V893]

================================

Block 0x92d
[0x92d:0x965]
---
Predecessors: [0x17a]
Successors: [0x966, 0x96a]
---
0x92d JUMPDEST
0x92e PUSH1 0x0
0x930 DUP1
0x931 CALLER
0x932 PUSH1 0x1
0x934 PUSH1 0xa0
0x936 PUSH1 0x2
0x938 EXP
0x939 SUB
0x93a AND
0x93b PUSH1 0x1
0x93d PUSH1 0xa0
0x93f PUSH1 0x2
0x941 EXP
0x942 SUB
0x943 AND
0x944 DUP2
0x945 MSTORE
0x946 PUSH1 0x20
0x948 ADD
0x949 SWAP1
0x94a DUP2
0x94b MSTORE
0x94c PUSH1 0x20
0x94e ADD
0x94f PUSH1 0x0
0x951 SHA3
0x952 PUSH1 0x0
0x954 SWAP1
0x955 SLOAD
0x956 SWAP1
0x957 PUSH2 0x100
0x95a EXP
0x95b SWAP1
0x95c DIV
0x95d PUSH1 0xff
0x95f AND
0x960 ISZERO
0x961 ISZERO
0x962 PUSH2 0x96a
0x965 JUMPI
---
0x92d: JUMPDEST 
0x92e: V894 = 0x0
0x931: V895 = CALLER
0x932: V896 = 0x1
0x934: V897 = 0xa0
0x936: V898 = 0x2
0x938: V899 = EXP 0x2 0xa0
0x939: V900 = SUB 0x10000000000000000000000000000000000000000 0x1
0x93a: V901 = AND 0xffffffffffffffffffffffffffffffffffffffff V895
0x93b: V902 = 0x1
0x93d: V903 = 0xa0
0x93f: V904 = 0x2
0x941: V905 = EXP 0x2 0xa0
0x942: V906 = SUB 0x10000000000000000000000000000000000000000 0x1
0x943: V907 = AND 0xffffffffffffffffffffffffffffffffffffffff V901
0x945: M[0x0] = V907
0x946: V908 = 0x20
0x948: V909 = ADD 0x20 0x0
0x94b: M[0x20] = 0x0
0x94c: V910 = 0x20
0x94e: V911 = ADD 0x20 0x20
0x94f: V912 = 0x0
0x951: V913 = SHA3 0x0 0x40
0x952: V914 = 0x0
0x955: V915 = S[V913]
0x957: V916 = 0x100
0x95a: V917 = EXP 0x100 0x0
0x95c: V918 = DIV V915 0x1
0x95d: V919 = 0xff
0x95f: V920 = AND 0xff V918
0x960: V921 = ISZERO V920
0x961: V922 = ISZERO V921
0x962: V923 = 0x96a
0x965: JUMPI 0x96a V922
---
Entry stack: [V13, 0xcc, V152, V166, V175]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xcc, V152, V166, V175]

================================

Block 0x966
[0x966:0x969]
---
Predecessors: [0x92d]
Successors: []
---
0x966 PUSH1 0x0
0x968 DUP1
0x969 REVERT
---
0x966: V924 = 0x0
0x969: REVERT 0x0 0x0
---
Entry stack: [V13, 0xcc, V152, V166, V175]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xcc, V152, V166, V175]

================================

Block 0x96a
[0x96a:0x9a4]
---
Predecessors: [0x92d]
Successors: [0x9a5, 0x9dc]
---
0x96a JUMPDEST
0x96b PUSH1 0x2
0x96d PUSH1 0x0
0x96f DUP3
0x970 PUSH1 0x1
0x972 PUSH1 0xa0
0x974 PUSH1 0x2
0x976 EXP
0x977 SUB
0x978 AND
0x979 PUSH1 0x1
0x97b PUSH1 0xa0
0x97d PUSH1 0x2
0x97f EXP
0x980 SUB
0x981 AND
0x982 DUP2
0x983 MSTORE
0x984 PUSH1 0x20
0x986 ADD
0x987 SWAP1
0x988 DUP2
0x989 MSTORE
0x98a PUSH1 0x20
0x98c ADD
0x98d PUSH1 0x0
0x98f SHA3
0x990 PUSH1 0x0
0x992 SWAP1
0x993 SLOAD
0x994 SWAP1
0x995 PUSH2 0x100
0x998 EXP
0x999 SWAP1
0x99a DIV
0x99b PUSH1 0xff
0x99d AND
0x99e ISZERO
0x99f DUP1
0x9a0 ISZERO
0x9a1 PUSH2 0x9dc
0x9a4 JUMPI
---
0x96a: JUMPDEST 
0x96b: V925 = 0x2
0x96d: V926 = 0x0
0x970: V927 = 0x1
0x972: V928 = 0xa0
0x974: V929 = 0x2
0x976: V930 = EXP 0x2 0xa0
0x977: V931 = SUB 0x10000000000000000000000000000000000000000 0x1
0x978: V932 = AND 0xffffffffffffffffffffffffffffffffffffffff V175
0x979: V933 = 0x1
0x97b: V934 = 0xa0
0x97d: V935 = 0x2
0x97f: V936 = EXP 0x2 0xa0
0x980: V937 = SUB 0x10000000000000000000000000000000000000000 0x1
0x981: V938 = AND 0xffffffffffffffffffffffffffffffffffffffff V932
0x983: M[0x0] = V938
0x984: V939 = 0x20
0x986: V940 = ADD 0x20 0x0
0x989: M[0x20] = 0x2
0x98a: V941 = 0x20
0x98c: V942 = ADD 0x20 0x20
0x98d: V943 = 0x0
0x98f: V944 = SHA3 0x0 0x40
0x990: V945 = 0x0
0x993: V946 = S[V944]
0x995: V947 = 0x100
0x998: V948 = EXP 0x100 0x0
0x99a: V949 = DIV V946 0x1
0x99b: V950 = 0xff
0x99d: V951 = AND 0xff V949
0x99e: V952 = ISZERO V951
0x9a0: V953 = ISZERO V952
0x9a1: V954 = 0x9dc
0x9a4: JUMPI 0x9dc V953
---
Entry stack: [V13, 0xcc, V152, V166, V175]
Stack pops: 1
Stack additions: [S0, V952]
Exit stack: [V13, 0xcc, V152, V166, V175, V952]

================================

Block 0x9a5
[0x9a5:0x9db]
---
Predecessors: [0x96a]
Successors: [0x9dc]
---
0x9a5 POP
0x9a6 PUSH1 0x3
0x9a8 PUSH1 0x0
0x9aa DUP4
0x9ab PUSH1 0x1
0x9ad PUSH1 0xd8
0x9af PUSH1 0x2
0x9b1 EXP
0x9b2 SUB
0x9b3 NOT
0x9b4 AND
0x9b5 PUSH1 0x1
0x9b7 PUSH1 0xd8
0x9b9 PUSH1 0x2
0x9bb EXP
0x9bc SUB
0x9bd NOT
0x9be AND
0x9bf DUP2
0x9c0 MSTORE
0x9c1 PUSH1 0x20
0x9c3 ADD
0x9c4 SWAP1
0x9c5 DUP2
0x9c6 MSTORE
0x9c7 PUSH1 0x20
0x9c9 ADD
0x9ca PUSH1 0x0
0x9cc SHA3
0x9cd PUSH1 0x0
0x9cf SWAP1
0x9d0 SLOAD
0x9d1 SWAP1
0x9d2 PUSH2 0x100
0x9d5 EXP
0x9d6 SWAP1
0x9d7 DIV
0x9d8 PUSH1 0xff
0x9da AND
0x9db ISZERO
---
0x9a6: V955 = 0x3
0x9a8: V956 = 0x0
0x9ab: V957 = 0x1
0x9ad: V958 = 0xd8
0x9af: V959 = 0x2
0x9b1: V960 = EXP 0x2 0xd8
0x9b2: V961 = SUB 0x1000000000000000000000000000000000000000000000000000000 0x1
0x9b3: V962 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x9b4: V963 = AND 0xffffffffff000000000000000000000000000000000000000000000000000000 V166
0x9b5: V964 = 0x1
0x9b7: V965 = 0xd8
0x9b9: V966 = 0x2
0x9bb: V967 = EXP 0x2 0xd8
0x9bc: V968 = SUB 0x1000000000000000000000000000000000000000000000000000000 0x1
0x9bd: V969 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x9be: V970 = AND 0xffffffffff000000000000000000000000000000000000000000000000000000 V963
0x9c0: M[0x0] = V970
0x9c1: V971 = 0x20
0x9c3: V972 = ADD 0x20 0x0
0x9c6: M[0x20] = 0x3
0x9c7: V973 = 0x20
0x9c9: V974 = ADD 0x20 0x20
0x9ca: V975 = 0x0
0x9cc: V976 = SHA3 0x0 0x40
0x9cd: V977 = 0x0
0x9d0: V978 = S[V976]
0x9d2: V979 = 0x100
0x9d5: V980 = EXP 0x100 0x0
0x9d7: V981 = DIV V978 0x1
0x9d8: V982 = 0xff
0x9da: V983 = AND 0xff V981
0x9db: V984 = ISZERO V983
---
Entry stack: [V13, 0xcc, V152, V166, V175, V952]
Stack pops: 3
Stack additions: [S2, S1, V984]
Exit stack: [V13, 0xcc, V152, V166, V175, V984]

================================

Block 0x9dc
[0x9dc:0x9e2]
---
Predecessors: [0x96a, 0x9a5]
Successors: [0x9e3, 0xa5a]
---
0x9dc JUMPDEST
0x9dd ISZERO
0x9de ISZERO
0x9df PUSH2 0xa5a
0x9e2 JUMPI
---
0x9dc: JUMPDEST 
0x9dd: V985 = ISZERO S0
0x9de: V986 = ISZERO V985
0x9df: V987 = 0xa5a
0x9e2: JUMPI 0xa5a V986
---
Entry stack: [V13, 0xcc, V152, V166, V175, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xcc, V152, V166, V175]

================================

Block 0x9e3
[0x9e3:0xa59]
---
Predecessors: [0x9dc]
Successors: []
---
0x9e3 PUSH1 0x40
0x9e5 DUP1
0x9e6 MLOAD
0x9e7 PUSH1 0xe5
0x9e9 PUSH1 0x2
0x9eb EXP
0x9ec PUSH3 0x461bcd
0x9f0 MUL
0x9f1 DUP2
0x9f2 MSTORE
0x9f3 PUSH1 0x4
0x9f5 ADD
0x9f6 PUSH1 0x20
0x9f8 DUP1
0x9f9 DUP3
0x9fa ADD
0x9fb DUP3
0x9fc DUP2
0x9fd SUB
0x9fe SWAP1
0x9ff SWAP3
0xa00 MSTORE
0xa01 PUSH1 0x26
0xa03 DUP3
0xa04 MSTORE
0xa05 PUSH32 0x46756e647320616c72656164792073656e74202f20436f646520616c72656164
0xa26 SWAP2
0xa27 DUP2
0xa28 ADD
0xa29 SWAP2
0xa2a DUP3
0xa2b MSTORE
0xa2c PUSH32 0x7920757365640000000000000000000000000000000000000000000000000000
0xa4d SWAP1
0xa4e DUP3
0xa4f ADD
0xa50 MSTORE
0xa51 DUP2
0xa52 MLOAD
0xa53 SWAP2
0xa54 ADD
0xa55 DUP2
0xa56 SWAP1
0xa57 SUB
0xa58 SWAP1
0xa59 REVERT
---
0x9e3: V988 = 0x40
0x9e6: V989 = M[0x40]
0x9e7: V990 = 0xe5
0x9e9: V991 = 0x2
0x9eb: V992 = EXP 0x2 0xe5
0x9ec: V993 = 0x461bcd
0x9f0: V994 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0x9f2: M[V989] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x9f3: V995 = 0x4
0x9f5: V996 = ADD 0x4 V989
0x9f6: V997 = 0x20
0x9fa: V998 = ADD V996 0x20
0x9fd: V999 = SUB V998 V996
0xa00: M[V996] = V999
0xa01: V1000 = 0x26
0xa04: M[V998] = 0x26
0xa05: V1001 = 0x46756e647320616c72656164792073656e74202f20436f646520616c72656164
0xa28: V1002 = ADD 0x20 V998
0xa2b: M[V1002] = 0x46756e647320616c72656164792073656e74202f20436f646520616c72656164
0xa2c: V1003 = 0x7920757365640000000000000000000000000000000000000000000000000000
0xa4f: V1004 = ADD V1002 0x20
0xa50: M[V1004] = 0x7920757365640000000000000000000000000000000000000000000000000000
0xa52: V1005 = M[0x40]
0xa54: V1006 = ADD 0x40 V1002
0xa57: V1007 = SUB V1006 V1005
0xa59: REVERT V1005 V1007
---
Entry stack: [V13, 0xcc, V152, V166, V175]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xcc, V152, V166, V175]

================================

Block 0xa5a
[0xa5a:0xaa4]
---
Predecessors: [0x9dc]
Successors: [0xaa5]
---
0xa5a JUMPDEST
0xa5b PUSH2 0xaf6
0xa5e DUP4
0xa5f PUSH1 0x7
0xa61 SLOAD
0xa62 DUP5
0xa63 PUSH1 0x40
0xa65 MLOAD
0xa66 PUSH1 0x20
0xa68 ADD
0xa69 DUP1
0xa6a DUP3
0xa6b PUSH1 0x1
0xa6d PUSH1 0xd8
0xa6f PUSH1 0x2
0xa71 EXP
0xa72 SUB
0xa73 NOT
0xa74 AND
0xa75 PUSH1 0x1
0xa77 PUSH1 0xd8
0xa79 PUSH1 0x2
0xa7b EXP
0xa7c SUB
0xa7d NOT
0xa7e AND
0xa7f DUP2
0xa80 MSTORE
0xa81 PUSH1 0x5
0xa83 ADD
0xa84 SWAP2
0xa85 POP
0xa86 POP
0xa87 PUSH1 0x40
0xa89 MLOAD
0xa8a PUSH1 0x20
0xa8c DUP2
0xa8d DUP4
0xa8e SUB
0xa8f SUB
0xa90 DUP2
0xa91 MSTORE
0xa92 SWAP1
0xa93 PUSH1 0x40
0xa95 MSTORE
0xa96 PUSH1 0x40
0xa98 MLOAD
0xa99 DUP1
0xa9a DUP3
0xa9b DUP1
0xa9c MLOAD
0xa9d SWAP1
0xa9e PUSH1 0x20
0xaa0 ADD
0xaa1 SWAP1
0xaa2 DUP1
0xaa3 DUP4
0xaa4 DUP4
---
0xa5a: JUMPDEST 
0xa5b: V1008 = 0xaf6
0xa5f: V1009 = 0x7
0xa61: V1010 = S[0x7]
0xa63: V1011 = 0x40
0xa65: V1012 = M[0x40]
0xa66: V1013 = 0x20
0xa68: V1014 = ADD 0x20 V1012
0xa6b: V1015 = 0x1
0xa6d: V1016 = 0xd8
0xa6f: V1017 = 0x2
0xa71: V1018 = EXP 0x2 0xd8
0xa72: V1019 = SUB 0x1000000000000000000000000000000000000000000000000000000 0x1
0xa73: V1020 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xa74: V1021 = AND 0xffffffffff000000000000000000000000000000000000000000000000000000 V166
0xa75: V1022 = 0x1
0xa77: V1023 = 0xd8
0xa79: V1024 = 0x2
0xa7b: V1025 = EXP 0x2 0xd8
0xa7c: V1026 = SUB 0x1000000000000000000000000000000000000000000000000000000 0x1
0xa7d: V1027 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xa7e: V1028 = AND 0xffffffffff000000000000000000000000000000000000000000000000000000 V1021
0xa80: M[V1014] = V1028
0xa81: V1029 = 0x5
0xa83: V1030 = ADD 0x5 V1014
0xa87: V1031 = 0x40
0xa89: V1032 = M[0x40]
0xa8a: V1033 = 0x20
0xa8e: V1034 = SUB V1030 V1032
0xa8f: V1035 = SUB V1034 0x20
0xa91: M[V1032] = V1035
0xa93: V1036 = 0x40
0xa95: M[0x40] = V1030
0xa96: V1037 = 0x40
0xa98: V1038 = M[0x40]
0xa9c: V1039 = M[V1032]
0xa9e: V1040 = 0x20
0xaa0: V1041 = ADD 0x20 V1032
---
Entry stack: [V13, 0xcc, V152, V166, V175]
Stack pops: 3
Stack additions: [S2, S1, S0, 0xaf6, S2, V1010, V1032, V1038, V1038, V1041, V1039, V1039, V1038, V1041]
Exit stack: [V13, 0xcc, V152, V166, V175, 0xaf6, V152, V1010, V1032, V1038, V1038, V1041, V1039, V1039, V1038, V1041]

================================

Block 0xaa5
[0xaa5:0xaaf]
---
Predecessors: [0xa5a, 0xab0, 0xe6b]
Successors: [0xab0, 0xac4]
---
0xaa5 JUMPDEST
0xaa6 PUSH1 0x20
0xaa8 DUP4
0xaa9 LT
0xaaa ISZERO
0xaab ISZERO
0xaac PUSH2 0xac4
0xaaf JUMPI
---
0xaa5: JUMPDEST 
0xaa6: V1042 = 0x20
0xaa9: V1043 = LT S2 0x20
0xaaa: V1044 = ISZERO V1043
0xaab: V1045 = ISZERO V1044
0xaac: V1046 = 0xac4
0xaaf: JUMPI 0xac4 V1045
---
Entry stack: [V13, S15, S14, S13, S12, S11, {0xaf6, 0xe7f}, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, S15, S14, S13, S12, S11, {0xaf6, 0xe7f}, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xab0
[0xab0:0xac3]
---
Predecessors: [0xaa5]
Successors: [0xaa5]
---
0xab0 DUP1
0xab1 MLOAD
0xab2 DUP3
0xab3 MSTORE
0xab4 PUSH1 0x20
0xab6 SWAP3
0xab7 DUP4
0xab8 SWAP1
0xab9 SUB
0xaba SWAP3
0xabb SWAP2
0xabc DUP3
0xabd ADD
0xabe SWAP2
0xabf ADD
0xac0 PUSH2 0xaa5
0xac3 JUMP
---
0xab1: V1047 = M[S0]
0xab3: M[S1] = V1047
0xab4: V1048 = 0x20
0xab9: V1049 = SUB S2 0x20
0xabd: V1050 = ADD 0x20 S1
0xabf: V1051 = ADD 0x20 S0
0xac0: V1052 = 0xaa5
0xac3: JUMP 0xaa5
---
Entry stack: [V13, S15, S14, S13, S12, S11, {0xaf6, 0xe7f}, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V1049, V1050, V1051]
Exit stack: [V13, S15, S14, S13, S12, S11, {0xaf6, 0xe7f}, S9, S8, S7, S6, S5, S4, S3, V1049, V1050, V1051]

================================

Block 0xac4
[0xac4:0xaf5]
---
Predecessors: [0xaa5, 0xe16]
Successors: [0xf5e]
---
0xac4 JUMPDEST
0xac5 PUSH1 0x1
0xac7 DUP4
0xac8 PUSH1 0x20
0xaca SUB
0xacb PUSH2 0x100
0xace EXP
0xacf SUB
0xad0 DUP1
0xad1 NOT
0xad2 DUP3
0xad3 MLOAD
0xad4 AND
0xad5 DUP2
0xad6 DUP5
0xad7 MLOAD
0xad8 AND
0xad9 DUP1
0xada DUP3
0xadb OR
0xadc DUP6
0xadd MSTORE
0xade POP
0xadf POP
0xae0 POP
0xae1 POP
0xae2 POP
0xae3 POP
0xae4 SWAP1
0xae5 POP
0xae6 ADD
0xae7 SWAP2
0xae8 POP
0xae9 POP
0xaea PUSH1 0x40
0xaec MLOAD
0xaed DUP1
0xaee SWAP2
0xaef SUB
0xaf0 SWAP1
0xaf1 SHA3
0xaf2 PUSH2 0xf5e
0xaf5 JUMP
---
0xac4: JUMPDEST 
0xac5: V1053 = 0x1
0xac8: V1054 = 0x20
0xaca: V1055 = SUB 0x20 S2
0xacb: V1056 = 0x100
0xace: V1057 = EXP 0x100 V1055
0xacf: V1058 = SUB V1057 0x1
0xad1: V1059 = NOT V1058
0xad3: V1060 = M[S0]
0xad4: V1061 = AND V1060 V1059
0xad7: V1062 = M[S1]
0xad8: V1063 = AND V1062 V1058
0xadb: V1064 = OR V1061 V1063
0xadd: M[S1] = V1064
0xae6: V1065 = ADD S3 S5
0xaea: V1066 = 0x40
0xaec: V1067 = M[0x40]
0xaef: V1068 = SUB V1065 V1067
0xaf1: V1069 = SHA3 V1067 V1068
0xaf2: V1070 = 0xf5e
0xaf5: JUMP 0xf5e
---
Entry stack: [V13, S15, S14, S13, S12, S11, {0xaf6, 0xe7f}, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 8
Stack additions: [V1069]
Exit stack: [V13, S15, S14, S13, S12, S11, {0xaf6, 0xe7f}, S9, S8, V1069]

================================

Block 0xaf6
[0xaf6:0xafc]
---
Predecessors: [0x10d4]
Successors: [0xafd, 0xb4f]
---
0xaf6 JUMPDEST
0xaf7 ISZERO
0xaf8 ISZERO
0xaf9 PUSH2 0xb4f
0xafc JUMPI
---
0xaf6: JUMPDEST 
0xaf7: V1071 = ISZERO V1661
0xaf8: V1072 = ISZERO V1071
0xaf9: V1073 = 0xb4f
0xafc: JUMPI 0xb4f V1072
---
Entry stack: [V13, S5, S4, S3, S2, S1, V1661]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S5, S4, S3, S2, S1]

================================

Block 0xafd
[0xafd:0xb4e]
---
Predecessors: [0xaf6]
Successors: []
---
0xafd PUSH1 0x40
0xaff DUP1
0xb00 MLOAD
0xb01 PUSH1 0xe5
0xb03 PUSH1 0x2
0xb05 EXP
0xb06 PUSH3 0x461bcd
0xb0a MUL
0xb0b DUP2
0xb0c MSTORE
0xb0d PUSH1 0x4
0xb0f ADD
0xb10 PUSH1 0x20
0xb12 DUP1
0xb13 DUP3
0xb14 ADD
0xb15 DUP3
0xb16 DUP2
0xb17 SUB
0xb18 SWAP1
0xb19 SWAP3
0xb1a MSTORE
0xb1b PUSH1 0xc
0xb1d DUP3
0xb1e MSTORE
0xb1f PUSH32 0x496e76616c696420636f64650000000000000000000000000000000000000000
0xb40 SWAP2
0xb41 DUP2
0xb42 ADD
0xb43 SWAP2
0xb44 DUP3
0xb45 MSTORE
0xb46 SWAP2
0xb47 MLOAD
0xb48 SWAP2
0xb49 ADD
0xb4a DUP2
0xb4b SWAP1
0xb4c SUB
0xb4d SWAP1
0xb4e REVERT
---
0xafd: V1074 = 0x40
0xb00: V1075 = M[0x40]
0xb01: V1076 = 0xe5
0xb03: V1077 = 0x2
0xb05: V1078 = EXP 0x2 0xe5
0xb06: V1079 = 0x461bcd
0xb0a: V1080 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0xb0c: M[V1075] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xb0d: V1081 = 0x4
0xb0f: V1082 = ADD 0x4 V1075
0xb10: V1083 = 0x20
0xb14: V1084 = ADD V1082 0x20
0xb17: V1085 = SUB V1084 V1082
0xb1a: M[V1082] = V1085
0xb1b: V1086 = 0xc
0xb1e: M[V1084] = 0xc
0xb1f: V1087 = 0x496e76616c696420636f64650000000000000000000000000000000000000000
0xb42: V1088 = ADD 0x20 V1084
0xb45: M[V1088] = 0x496e76616c696420636f64650000000000000000000000000000000000000000
0xb47: V1089 = M[0x40]
0xb49: V1090 = ADD 0x20 V1088
0xb4c: V1091 = SUB V1090 V1089
0xb4e: REVERT V1089 V1091
---
Entry stack: [V13, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S4, S3, S2, S1, S0]

================================

Block 0xb4f
[0xb4f:0xbf9]
---
Predecessors: [0xaf6]
Successors: [0xbfa, 0xbfe]
---
0xb4f JUMPDEST
0xb50 PUSH1 0x1
0xb52 PUSH1 0xa0
0xb54 PUSH1 0x2
0xb56 EXP
0xb57 SUB
0xb58 DUP2
0xb59 DUP2
0xb5a AND
0xb5b DUP2
0xb5c AND
0xb5d PUSH1 0x0
0xb5f DUP2
0xb60 DUP2
0xb61 MSTORE
0xb62 PUSH1 0x2
0xb64 PUSH1 0x20
0xb66 DUP1
0xb67 DUP4
0xb68 ADD
0xb69 SWAP2
0xb6a DUP3
0xb6b MSTORE
0xb6c DUP2
0xb6d DUP2
0xb6e ADD
0xb6f DUP1
0xb70 DUP5
0xb71 SHA3
0xb72 DUP1
0xb73 SLOAD
0xb74 PUSH1 0xff
0xb76 PUSH2 0x100
0xb79 DUP8
0xb7a SWAP1
0xb7b EXP
0xb7c SWAP1
0xb7d DUP2
0xb7e MUL
0xb7f NOT
0xb80 SWAP2
0xb81 DUP3
0xb82 AND
0xb83 PUSH1 0x1
0xb85 ISZERO
0xb86 ISZERO
0xb87 DUP3
0xb88 MUL
0xb89 SWAP1
0xb8a DUP2
0xb8b OR
0xb8c SWAP1
0xb8d SWAP4
0xb8e SSTORE
0xb8f PUSH1 0x1
0xb91 PUSH1 0xd8
0xb93 PUSH1 0x2
0xb95 EXP
0xb96 SUB
0xb97 NOT
0xb98 DUP12
0xb99 DUP2
0xb9a AND
0xb9b AND
0xb9c DUP8
0xb9d MSTORE
0xb9e PUSH1 0x3
0xba0 SWAP1
0xba1 SWAP6
0xba2 MSTORE
0xba3 SWAP2
0xba4 DUP6
0xba5 SHA3
0xba6 DUP1
0xba7 SLOAD
0xba8 SWAP1
0xba9 SWAP3
0xbaa AND
0xbab OR
0xbac SWAP1
0xbad SSTORE
0xbae PUSH1 0x4
0xbb0 DUP1
0xbb1 SLOAD
0xbb2 PUSH1 0x6
0xbb4 SLOAD
0xbb5 PUSH1 0x40
0xbb7 DUP1
0xbb8 MLOAD
0xbb9 PUSH4 0xa9059cbb
0xbbe PUSH4 0xffffffff
0xbc3 DUP2
0xbc4 AND
0xbc5 PUSH1 0xe0
0xbc7 PUSH1 0x2
0xbc9 EXP
0xbca MUL
0xbcb DUP3
0xbcc MSTORE
0xbcd SWAP5
0xbce ADD
0xbcf SWAP8
0xbd0 DUP9
0xbd1 MSTORE
0xbd2 SWAP7
0xbd3 DUP5
0xbd4 ADD
0xbd5 SWAP1
0xbd6 DUP2
0xbd7 MSTORE
0xbd8 SWAP6
0xbd9 MLOAD
0xbda SWAP4
0xbdb SWAP1
0xbdc DIV
0xbdd DUP7
0xbde AND
0xbdf SWAP1
0xbe0 SWAP6
0xbe1 AND
0xbe2 SWAP5
0xbe3 SWAP4
0xbe4 DUP2
0xbe5 ADD
0xbe6 SWAP3
0xbe7 SWAP1
0xbe8 SWAP2
0xbe9 SWAP1
0xbea DUP2
0xbeb DUP5
0xbec SUB
0xbed SWAP1
0xbee DUP3
0xbef SWAP1
0xbf0 DUP8
0xbf1 DUP1
0xbf2 EXTCODESIZE
0xbf3 ISZERO
0xbf4 DUP1
0xbf5 ISZERO
0xbf6 PUSH2 0xbfe
0xbf9 JUMPI
---
0xb4f: JUMPDEST 
0xb50: V1092 = 0x1
0xb52: V1093 = 0xa0
0xb54: V1094 = 0x2
0xb56: V1095 = EXP 0x2 0xa0
0xb57: V1096 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb5a: V1097 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xb5c: V1098 = AND 0xffffffffffffffffffffffffffffffffffffffff V1097
0xb5d: V1099 = 0x0
0xb61: M[0x0] = V1098
0xb62: V1100 = 0x2
0xb64: V1101 = 0x20
0xb68: V1102 = ADD 0x0 0x20
0xb6b: M[0x20] = 0x2
0xb6e: V1103 = ADD 0x20 0x20
0xb71: V1104 = SHA3 0x0 0x40
0xb73: V1105 = S[V1104]
0xb74: V1106 = 0xff
0xb76: V1107 = 0x100
0xb7b: V1108 = EXP 0x100 0x0
0xb7e: V1109 = MUL 0x1 0xff
0xb7f: V1110 = NOT 0xff
0xb82: V1111 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1105
0xb83: V1112 = 0x1
0xb85: V1113 = ISZERO 0x1
0xb86: V1114 = ISZERO 0x0
0xb88: V1115 = MUL 0x1 0x1
0xb8b: V1116 = OR 0x1 V1111
0xb8e: S[V1104] = V1116
0xb8f: V1117 = 0x1
0xb91: V1118 = 0xd8
0xb93: V1119 = 0x2
0xb95: V1120 = EXP 0x2 0xd8
0xb96: V1121 = SUB 0x1000000000000000000000000000000000000000000000000000000 0x1
0xb97: V1122 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xb9a: V1123 = AND 0xffffffffff000000000000000000000000000000000000000000000000000000 S1
0xb9b: V1124 = AND V1123 0xffffffffff000000000000000000000000000000000000000000000000000000
0xb9d: M[0x0] = V1124
0xb9e: V1125 = 0x3
0xba2: M[0x20] = 0x3
0xba5: V1126 = SHA3 0x0 0x40
0xba7: V1127 = S[V1126]
0xbaa: V1128 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1127
0xbab: V1129 = OR V1128 0x1
0xbad: S[V1126] = V1129
0xbae: V1130 = 0x4
0xbb1: V1131 = S[0x4]
0xbb2: V1132 = 0x6
0xbb4: V1133 = S[0x6]
0xbb5: V1134 = 0x40
0xbb8: V1135 = M[0x40]
0xbb9: V1136 = 0xa9059cbb
0xbbe: V1137 = 0xffffffff
0xbc4: V1138 = AND 0xa9059cbb 0xffffffff
0xbc5: V1139 = 0xe0
0xbc7: V1140 = 0x2
0xbc9: V1141 = EXP 0x2 0xe0
0xbca: V1142 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0xbcc: M[V1135] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xbce: V1143 = ADD 0x4 V1135
0xbd1: M[V1143] = V1098
0xbd4: V1144 = ADD 0x20 V1143
0xbd7: M[V1144] = V1133
0xbd9: V1145 = M[0x40]
0xbdc: V1146 = DIV V1131 0x1
0xbde: V1147 = AND 0xffffffffffffffffffffffffffffffffffffffff V1146
0xbe1: V1148 = AND 0xffffffffffffffffffffffffffffffffffffffff V1147
0xbe5: V1149 = ADD 0x20 V1144
0xbec: V1150 = SUB V1149 V1145
0xbf2: V1151 = EXTCODESIZE V1148
0xbf3: V1152 = ISZERO V1151
0xbf5: V1153 = ISZERO V1152
0xbf6: V1154 = 0xbfe
0xbf9: JUMPI 0xbfe V1153
---
Entry stack: [V13, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V1148, 0xa9059cbb, V1149, 0x20, V1145, V1150, V1145, 0x0, V1148, V1152]
Exit stack: [V13, S4, S3, S2, S1, S0, V1148, 0xa9059cbb, V1149, 0x20, V1145, V1150, V1145, 0x0, V1148, V1152]

================================

Block 0xbfa
[0xbfa:0xbfd]
---
Predecessors: [0xb4f]
Successors: []
---
0xbfa PUSH1 0x0
0xbfc DUP1
0xbfd REVERT
---
0xbfa: V1155 = 0x0
0xbfd: REVERT 0x0 0x0
---
Entry stack: [V13, S14, S13, S12, S11, S10, V1148, 0xa9059cbb, V1149, 0x20, V1145, V1150, V1145, 0x0, V1148, V1152]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S14, S13, S12, S11, S10, V1148, 0xa9059cbb, V1149, 0x20, V1145, V1150, V1145, 0x0, V1148, V1152]

================================

Block 0xbfe
[0xbfe:0xc08]
---
Predecessors: [0xb4f]
Successors: [0xc09, 0xc12]
---
0xbfe JUMPDEST
0xbff POP
0xc00 GAS
0xc01 CALL
0xc02 ISZERO
0xc03 DUP1
0xc04 ISZERO
0xc05 PUSH2 0xc12
0xc08 JUMPI
---
0xbfe: JUMPDEST 
0xc00: V1156 = GAS
0xc01: V1157 = CALL V1156 V1148 0x0 V1145 V1150 V1145 0x20
0xc02: V1158 = ISZERO V1157
0xc04: V1159 = ISZERO V1158
0xc05: V1160 = 0xc12
0xc08: JUMPI 0xc12 V1159
---
Entry stack: [V13, S14, S13, S12, S11, S10, V1148, 0xa9059cbb, V1149, 0x20, V1145, V1150, V1145, 0x0, V1148, V1152]
Stack pops: 7
Stack additions: [V1158]
Exit stack: [V13, S14, S13, S12, S11, S10, V1148, 0xa9059cbb, V1149, V1158]

================================

Block 0xc09
[0xc09:0xc11]
---
Predecessors: [0xbfe]
Successors: []
---
0xc09 RETURNDATASIZE
0xc0a PUSH1 0x0
0xc0c DUP1
0xc0d RETURNDATACOPY
0xc0e RETURNDATASIZE
0xc0f PUSH1 0x0
0xc11 REVERT
---
0xc09: V1161 = RETURNDATASIZE
0xc0a: V1162 = 0x0
0xc0d: RETURNDATACOPY 0x0 0x0 V1161
0xc0e: V1163 = RETURNDATASIZE
0xc0f: V1164 = 0x0
0xc11: REVERT 0x0 V1163
---
Entry stack: [V13, S8, S7, S6, S5, S4, S3, 0xa9059cbb, S1, V1158]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S8, S7, S6, S5, S4, S3, 0xa9059cbb, S1, V1158]

================================

Block 0xc12
[0xc12:0xc23]
---
Predecessors: [0xbfe]
Successors: [0xc24, 0xc28]
---
0xc12 JUMPDEST
0xc13 POP
0xc14 POP
0xc15 POP
0xc16 POP
0xc17 PUSH1 0x40
0xc19 MLOAD
0xc1a RETURNDATASIZE
0xc1b PUSH1 0x20
0xc1d DUP2
0xc1e LT
0xc1f ISZERO
0xc20 PUSH2 0xc28
0xc23 JUMPI
---
0xc12: JUMPDEST 
0xc17: V1165 = 0x40
0xc19: V1166 = M[0x40]
0xc1a: V1167 = RETURNDATASIZE
0xc1b: V1168 = 0x20
0xc1e: V1169 = LT V1167 0x20
0xc1f: V1170 = ISZERO V1169
0xc20: V1171 = 0xc28
0xc23: JUMPI 0xc28 V1170
---
Entry stack: [V13, S8, S7, S6, S5, S4, S3, 0xa9059cbb, S1, V1158]
Stack pops: 4
Stack additions: [V1166, V1167]
Exit stack: [V13, S8, S7, S6, S5, S4, V1166, V1167]

================================

Block 0xc24
[0xc24:0xc27]
---
Predecessors: [0xc12]
Successors: []
---
0xc24 PUSH1 0x0
0xc26 DUP1
0xc27 REVERT
---
0xc24: V1172 = 0x0
0xc27: REVERT 0x0 0x0
---
Entry stack: [V13, S6, S5, S4, S3, S2, V1166, V1167]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S6, S5, S4, S3, S2, V1166, V1167]

================================

Block 0xc28
[0xc28:0xc30]
---
Predecessors: [0xc12]
Successors: [0xc31, 0xc83]
---
0xc28 JUMPDEST
0xc29 POP
0xc2a MLOAD
0xc2b ISZERO
0xc2c ISZERO
0xc2d PUSH2 0xc83
0xc30 JUMPI
---
0xc28: JUMPDEST 
0xc2a: V1173 = M[V1166]
0xc2b: V1174 = ISZERO V1173
0xc2c: V1175 = ISZERO V1174
0xc2d: V1176 = 0xc83
0xc30: JUMPI 0xc83 V1175
---
Entry stack: [V13, S6, S5, S4, S3, S2, V1166, V1167]
Stack pops: 2
Stack additions: []
Exit stack: [V13, S6, S5, S4, S3, S2]

================================

Block 0xc31
[0xc31:0xc82]
---
Predecessors: [0xc28]
Successors: []
---
0xc31 PUSH1 0x40
0xc33 DUP1
0xc34 MLOAD
0xc35 PUSH1 0xe5
0xc37 PUSH1 0x2
0xc39 EXP
0xc3a PUSH3 0x461bcd
0xc3e MUL
0xc3f DUP2
0xc40 MSTORE
0xc41 PUSH1 0x4
0xc43 ADD
0xc44 PUSH1 0x20
0xc46 DUP1
0xc47 DUP3
0xc48 ADD
0xc49 DUP3
0xc4a DUP2
0xc4b SUB
0xc4c SWAP1
0xc4d SWAP3
0xc4e MSTORE
0xc4f PUSH1 0x15
0xc51 DUP3
0xc52 MSTORE
0xc53 PUSH32 0x5472616e7366657220646964206e6f7420776f726b0000000000000000000000
0xc74 SWAP2
0xc75 DUP2
0xc76 ADD
0xc77 SWAP2
0xc78 DUP3
0xc79 MSTORE
0xc7a SWAP2
0xc7b MLOAD
0xc7c SWAP2
0xc7d ADD
0xc7e DUP2
0xc7f SWAP1
0xc80 SUB
0xc81 SWAP1
0xc82 REVERT
---
0xc31: V1177 = 0x40
0xc34: V1178 = M[0x40]
0xc35: V1179 = 0xe5
0xc37: V1180 = 0x2
0xc39: V1181 = EXP 0x2 0xe5
0xc3a: V1182 = 0x461bcd
0xc3e: V1183 = MUL 0x461bcd 0x2000000000000000000000000000000000000000000000000000000000
0xc40: M[V1178] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xc41: V1184 = 0x4
0xc43: V1185 = ADD 0x4 V1178
0xc44: V1186 = 0x20
0xc48: V1187 = ADD V1185 0x20
0xc4b: V1188 = SUB V1187 V1185
0xc4e: M[V1185] = V1188
0xc4f: V1189 = 0x15
0xc52: M[V1187] = 0x15
0xc53: V1190 = 0x5472616e7366657220646964206e6f7420776f726b0000000000000000000000
0xc76: V1191 = ADD 0x20 V1187
0xc79: M[V1191] = 0x5472616e7366657220646964206e6f7420776f726b0000000000000000000000
0xc7b: V1192 = M[0x40]
0xc7d: V1193 = ADD 0x20 V1191
0xc80: V1194 = SUB V1193 V1192
0xc82: REVERT V1192 V1194
---
Entry stack: [V13, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S4, S3, S2, S1, S0]

================================

Block 0xc83
[0xc83:0xcb2]
---
Predecessors: [0xc28]
Successors: [0xcb3, 0xcbc]
---
0xc83 JUMPDEST
0xc84 PUSH1 0x5
0xc86 SLOAD
0xc87 PUSH1 0x40
0xc89 MLOAD
0xc8a PUSH1 0x1
0xc8c PUSH1 0xa0
0xc8e PUSH1 0x2
0xc90 EXP
0xc91 SUB
0xc92 DUP4
0xc93 AND
0xc94 SWAP2
0xc95 DUP1
0xc96 ISZERO
0xc97 PUSH2 0x8fc
0xc9a MUL
0xc9b SWAP2
0xc9c PUSH1 0x0
0xc9e DUP2
0xc9f DUP1
0xca0 DUP1
0xca1 SUB
0xca2 DUP2
0xca3 DUP6
0xca4 DUP9
0xca5 DUP9
0xca6 CALL
0xca7 SWAP4
0xca8 POP
0xca9 POP
0xcaa POP
0xcab POP
0xcac ISZERO
0xcad DUP1
0xcae ISZERO
0xcaf PUSH2 0xcbc
0xcb2 JUMPI
---
0xc83: JUMPDEST 
0xc84: V1195 = 0x5
0xc86: V1196 = S[0x5]
0xc87: V1197 = 0x40
0xc89: V1198 = M[0x40]
0xc8a: V1199 = 0x1
0xc8c: V1200 = 0xa0
0xc8e: V1201 = 0x2
0xc90: V1202 = EXP 0x2 0xa0
0xc91: V1203 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc93: V1204 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xc96: V1205 = ISZERO V1196
0xc97: V1206 = 0x8fc
0xc9a: V1207 = MUL 0x8fc V1205
0xc9c: V1208 = 0x0
0xca1: V1209 = SUB V1198 V1198
0xca6: V1210 = CALL V1207 V1204 V1196 V1198 V1209 V1198 0x0
0xcac: V1211 = ISZERO V1210
0xcae: V1212 = ISZERO V1211
0xcaf: V1213 = 0xcbc
0xcb2: JUMPI 0xcbc V1212
---
Entry stack: [V13, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, V1211]
Exit stack: [V13, S4, S3, S2, S1, S0, V1211]

================================

Block 0xcb3
[0xcb3:0xcbb]
---
Predecessors: [0xc83]
Successors: []
---
0xcb3 RETURNDATASIZE
0xcb4 PUSH1 0x0
0xcb6 DUP1
0xcb7 RETURNDATACOPY
0xcb8 RETURNDATASIZE
0xcb9 PUSH1 0x0
0xcbb REVERT
---
0xcb3: V1214 = RETURNDATASIZE
0xcb4: V1215 = 0x0
0xcb7: RETURNDATACOPY 0x0 0x0 V1214
0xcb8: V1216 = RETURNDATASIZE
0xcb9: V1217 = 0x0
0xcbb: REVERT 0x0 V1216
---
Entry stack: [V13, S5, S4, S3, S2, S1, V1211]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S5, S4, S3, S2, S1, V1211]

================================

Block 0xcbc
[0xcbc:0xd25]
---
Predecessors: [0xc83]
Successors: [0xcc]
---
0xcbc JUMPDEST
0xcbd POP
0xcbe PUSH1 0x5
0xcc0 SLOAD
0xcc1 PUSH1 0x6
0xcc3 SLOAD
0xcc4 PUSH1 0x40
0xcc6 DUP1
0xcc7 MLOAD
0xcc8 PUSH1 0x1
0xcca PUSH1 0xa0
0xccc PUSH1 0x2
0xcce EXP
0xccf SUB
0xcd0 DUP1
0xcd1 DUP7
0xcd2 AND
0xcd3 AND
0xcd4 DUP2
0xcd5 MSTORE
0xcd6 PUSH1 0x1
0xcd8 PUSH1 0xd8
0xcda PUSH1 0x2
0xcdc EXP
0xcdd SUB
0xcde NOT
0xcdf DUP1
0xce0 DUP8
0xce1 AND
0xce2 AND
0xce3 PUSH1 0x20
0xce5 SWAP2
0xce6 DUP3
0xce7 ADD
0xce8 SWAP1
0xce9 DUP2
0xcea MSTORE
0xceb DUP2
0xcec ADD
0xced SWAP4
0xcee DUP5
0xcef MSTORE
0xcf0 SWAP3
0xcf1 DUP4
0xcf2 ADD
0xcf3 SWAP2
0xcf4 DUP3
0xcf5 MSTORE
0xcf6 MLOAD
0xcf7 PUSH32 0xaa7ecfdc9fd3f39ab380a0b6413557f94ed0dfd05ed31c925521736fa750eac
0xd18 SWAP3
0xd19 SWAP2
0xd1a SWAP1
0xd1b SWAP2
0xd1c ADD
0xd1d DUP2
0xd1e SWAP1
0xd1f SUB
0xd20 SWAP1
0xd21 LOG1
0xd22 POP
0xd23 POP
0xd24 POP
0xd25 JUMP
---
0xcbc: JUMPDEST 
0xcbe: V1218 = 0x5
0xcc0: V1219 = S[0x5]
0xcc1: V1220 = 0x6
0xcc3: V1221 = S[0x6]
0xcc4: V1222 = 0x40
0xcc7: V1223 = M[0x40]
0xcc8: V1224 = 0x1
0xcca: V1225 = 0xa0
0xccc: V1226 = 0x2
0xcce: V1227 = EXP 0x2 0xa0
0xccf: V1228 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcd2: V1229 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0xcd3: V1230 = AND V1229 0xffffffffffffffffffffffffffffffffffffffff
0xcd5: M[V1223] = V1230
0xcd6: V1231 = 0x1
0xcd8: V1232 = 0xd8
0xcda: V1233 = 0x2
0xcdc: V1234 = EXP 0x2 0xd8
0xcdd: V1235 = SUB 0x1000000000000000000000000000000000000000000000000000000 0x1
0xcde: V1236 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xce1: V1237 = AND S2 0xffffffffff000000000000000000000000000000000000000000000000000000
0xce2: V1238 = AND V1237 0xffffffffff000000000000000000000000000000000000000000000000000000
0xce3: V1239 = 0x20
0xce7: V1240 = ADD 0x20 V1223
0xcea: M[V1240] = V1238
0xcec: V1241 = ADD 0x20 V1240
0xcef: M[V1241] = V1219
0xcf2: V1242 = ADD 0x20 V1241
0xcf5: M[V1242] = V1221
0xcf6: V1243 = M[0x40]
0xcf7: V1244 = 0xaa7ecfdc9fd3f39ab380a0b6413557f94ed0dfd05ed31c925521736fa750eac
0xd1c: V1245 = ADD 0x20 V1242
0xd1f: V1246 = SUB V1245 V1243
0xd21: LOG V1243 V1246 0xaa7ecfdc9fd3f39ab380a0b6413557f94ed0dfd05ed31c925521736fa750eac
0xd25: JUMP S4
---
Entry stack: [V13, S5, S4, S3, S2, S1, V1211]
Stack pops: 5
Stack additions: []
Exit stack: [V13, S5]

================================

Block 0xd26
[0xd26:0xd2b]
---
Predecessors: [0x1f1]
Successors: [0x1fa]
---
0xd26 JUMPDEST
0xd27 PUSH1 0x6
0xd29 SLOAD
0xd2a DUP2
0xd2b JUMP
---
0xd26: JUMPDEST 
0xd27: V1247 = 0x6
0xd29: V1248 = S[0x6]
0xd2b: JUMP 0x1fa
---
Entry stack: [V13, 0x1fa]
Stack pops: 1
Stack additions: [S0, V1248]
Exit stack: [V13, 0x1fa, V1248]

================================

Block 0xd2c
[0xd2c:0xd4b]
---
Predecessors: [0x219]
Successors: [0x157]
---
0xd2c JUMPDEST
0xd2d PUSH1 0x2
0xd2f PUSH1 0x20
0xd31 MSTORE
0xd32 DUP1
0xd33 PUSH1 0x0
0xd35 MSTORE
0xd36 PUSH1 0x40
0xd38 PUSH1 0x0
0xd3a SHA3
0xd3b PUSH1 0x0
0xd3d SWAP2
0xd3e POP
0xd3f SLOAD
0xd40 SWAP1
0xd41 PUSH2 0x100
0xd44 EXP
0xd45 SWAP1
0xd46 DIV
0xd47 PUSH1 0xff
0xd49 AND
0xd4a DUP2
0xd4b JUMP
---
0xd2c: JUMPDEST 
0xd2d: V1249 = 0x2
0xd2f: V1250 = 0x20
0xd31: M[0x20] = 0x2
0xd33: V1251 = 0x0
0xd35: M[0x0] = V201
0xd36: V1252 = 0x40
0xd38: V1253 = 0x0
0xd3a: V1254 = SHA3 0x0 0x40
0xd3b: V1255 = 0x0
0xd3f: V1256 = S[V1254]
0xd41: V1257 = 0x100
0xd44: V1258 = EXP 0x100 0x0
0xd46: V1259 = DIV V1256 0x1
0xd47: V1260 = 0xff
0xd49: V1261 = AND 0xff V1259
0xd4b: JUMP 0x157
---
Entry stack: [V13, 0x157, V201]
Stack pops: 2
Stack additions: [S1, V1261]
Exit stack: [V13, 0x157, V1261]

================================

Block 0xd4c
[0xd4c:0xd84]
---
Predecessors: [0x23a]
Successors: [0xd85, 0xd89]
---
0xd4c JUMPDEST
0xd4d PUSH1 0x0
0xd4f DUP1
0xd50 CALLER
0xd51 PUSH1 0x1
0xd53 PUSH1 0xa0
0xd55 PUSH1 0x2
0xd57 EXP
0xd58 SUB
0xd59 AND
0xd5a PUSH1 0x1
0xd5c PUSH1 0xa0
0xd5e PUSH1 0x2
0xd60 EXP
0xd61 SUB
0xd62 AND
0xd63 DUP2
0xd64 MSTORE
0xd65 PUSH1 0x20
0xd67 ADD
0xd68 SWAP1
0xd69 DUP2
0xd6a MSTORE
0xd6b PUSH1 0x20
0xd6d ADD
0xd6e PUSH1 0x0
0xd70 SHA3
0xd71 PUSH1 0x0
0xd73 SWAP1
0xd74 SLOAD
0xd75 SWAP1
0xd76 PUSH2 0x100
0xd79 EXP
0xd7a SWAP1
0xd7b DIV
0xd7c PUSH1 0xff
0xd7e AND
0xd7f ISZERO
0xd80 ISZERO
0xd81 PUSH2 0xd89
0xd84 JUMPI
---
0xd4c: JUMPDEST 
0xd4d: V1262 = 0x0
0xd50: V1263 = CALLER
0xd51: V1264 = 0x1
0xd53: V1265 = 0xa0
0xd55: V1266 = 0x2
0xd57: V1267 = EXP 0x2 0xa0
0xd58: V1268 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd59: V1269 = AND 0xffffffffffffffffffffffffffffffffffffffff V1263
0xd5a: V1270 = 0x1
0xd5c: V1271 = 0xa0
0xd5e: V1272 = 0x2
0xd60: V1273 = EXP 0x2 0xa0
0xd61: V1274 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd62: V1275 = AND 0xffffffffffffffffffffffffffffffffffffffff V1269
0xd64: M[0x0] = V1275
0xd65: V1276 = 0x20
0xd67: V1277 = ADD 0x20 0x0
0xd6a: M[0x20] = 0x0
0xd6b: V1278 = 0x20
0xd6d: V1279 = ADD 0x20 0x20
0xd6e: V1280 = 0x0
0xd70: V1281 = SHA3 0x0 0x40
0xd71: V1282 = 0x0
0xd74: V1283 = S[V1281]
0xd76: V1284 = 0x100
0xd79: V1285 = EXP 0x100 0x0
0xd7b: V1286 = DIV V1283 0x1
0xd7c: V1287 = 0xff
0xd7e: V1288 = AND 0xff V1286
0xd7f: V1289 = ISZERO V1288
0xd80: V1290 = ISZERO V1289
0xd81: V1291 = 0xd89
0xd84: JUMPI 0xd89 V1290
---
Entry stack: [V13, 0xcc, V209, V212, V217]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xcc, V209, V212, V217]

================================

Block 0xd85
[0xd85:0xd88]
---
Predecessors: [0xd4c]
Successors: []
---
0xd85 PUSH1 0x0
0xd87 DUP1
0xd88 REVERT
---
0xd85: V1292 = 0x0
0xd88: REVERT 0x0 0x0
---
Entry stack: [V13, 0xcc, V209, V212, V217]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xcc, V209, V212, V217]

================================

Block 0xd89
[0xd89:0xd9a]
---
Predecessors: [0xd4c]
Successors: [0xcc]
---
0xd89 JUMPDEST
0xd8a PUSH1 0x5
0xd8c SWAP3
0xd8d SWAP1
0xd8e SWAP3
0xd8f SSTORE
0xd90 PUSH1 0x6
0xd92 SSTORE
0xd93 PUSH1 0x0
0xd95 NOT
0xd96 AND
0xd97 PUSH1 0x7
0xd99 SSTORE
0xd9a JUMP
---
0xd89: JUMPDEST 
0xd8a: V1293 = 0x5
0xd8f: S[0x5] = V209
0xd90: V1294 = 0x6
0xd92: S[0x6] = V212
0xd93: V1295 = 0x0
0xd95: V1296 = NOT 0x0
0xd96: V1297 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V217
0xd97: V1298 = 0x7
0xd99: S[0x7] = V1297
0xd9a: JUMP 0xcc
---
Entry stack: [V13, 0xcc, V209, V212, V217]
Stack pops: 4
Stack additions: []
Exit stack: [V13]

================================

Block 0xd9b
[0xd9b:0xdd7]
---
Predecessors: [0x262]
Successors: [0xdd8, 0xe0f]
---
0xd9b JUMPDEST
0xd9c PUSH1 0x0
0xd9e PUSH1 0x2
0xda0 PUSH1 0x0
0xda2 DUP4
0xda3 PUSH1 0x1
0xda5 PUSH1 0xa0
0xda7 PUSH1 0x2
0xda9 EXP
0xdaa SUB
0xdab AND
0xdac PUSH1 0x1
0xdae PUSH1 0xa0
0xdb0 PUSH1 0x2
0xdb2 EXP
0xdb3 SUB
0xdb4 AND
0xdb5 DUP2
0xdb6 MSTORE
0xdb7 PUSH1 0x20
0xdb9 ADD
0xdba SWAP1
0xdbb DUP2
0xdbc MSTORE
0xdbd PUSH1 0x20
0xdbf ADD
0xdc0 PUSH1 0x0
0xdc2 SHA3
0xdc3 PUSH1 0x0
0xdc5 SWAP1
0xdc6 SLOAD
0xdc7 SWAP1
0xdc8 PUSH2 0x100
0xdcb EXP
0xdcc SWAP1
0xdcd DIV
0xdce PUSH1 0xff
0xdd0 AND
0xdd1 ISZERO
0xdd2 DUP1
0xdd3 ISZERO
0xdd4 PUSH2 0xe0f
0xdd7 JUMPI
---
0xd9b: JUMPDEST 
0xd9c: V1299 = 0x0
0xd9e: V1300 = 0x2
0xda0: V1301 = 0x0
0xda3: V1302 = 0x1
0xda5: V1303 = 0xa0
0xda7: V1304 = 0x2
0xda9: V1305 = EXP 0x2 0xa0
0xdaa: V1306 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdab: V1307 = AND 0xffffffffffffffffffffffffffffffffffffffff V263
0xdac: V1308 = 0x1
0xdae: V1309 = 0xa0
0xdb0: V1310 = 0x2
0xdb2: V1311 = EXP 0x2 0xa0
0xdb3: V1312 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdb4: V1313 = AND 0xffffffffffffffffffffffffffffffffffffffff V1307
0xdb6: M[0x0] = V1313
0xdb7: V1314 = 0x20
0xdb9: V1315 = ADD 0x20 0x0
0xdbc: M[0x20] = 0x2
0xdbd: V1316 = 0x20
0xdbf: V1317 = ADD 0x20 0x20
0xdc0: V1318 = 0x0
0xdc2: V1319 = SHA3 0x0 0x40
0xdc3: V1320 = 0x0
0xdc6: V1321 = S[V1319]
0xdc8: V1322 = 0x100
0xdcb: V1323 = EXP 0x100 0x0
0xdcd: V1324 = DIV V1321 0x1
0xdce: V1325 = 0xff
0xdd0: V1326 = AND 0xff V1324
0xdd1: V1327 = ISZERO V1326
0xdd3: V1328 = ISZERO V1327
0xdd4: V1329 = 0xe0f
0xdd7: JUMPI 0xe0f V1328
---
Entry stack: [V13, 0x157, V240, V254, V263]
Stack pops: 1
Stack additions: [S0, 0x0, V1327]
Exit stack: [V13, 0x157, V240, V254, V263, 0x0, V1327]

================================

Block 0xdd8
[0xdd8:0xe0e]
---
Predecessors: [0xd9b]
Successors: [0xe0f]
---
0xdd8 POP
0xdd9 PUSH1 0x3
0xddb PUSH1 0x0
0xddd DUP5
0xdde PUSH1 0x1
0xde0 PUSH1 0xd8
0xde2 PUSH1 0x2
0xde4 EXP
0xde5 SUB
0xde6 NOT
0xde7 AND
0xde8 PUSH1 0x1
0xdea PUSH1 0xd8
0xdec PUSH1 0x2
0xdee EXP
0xdef SUB
0xdf0 NOT
0xdf1 AND
0xdf2 DUP2
0xdf3 MSTORE
0xdf4 PUSH1 0x20
0xdf6 ADD
0xdf7 SWAP1
0xdf8 DUP2
0xdf9 MSTORE
0xdfa PUSH1 0x20
0xdfc ADD
0xdfd PUSH1 0x0
0xdff SHA3
0xe00 PUSH1 0x0
0xe02 SWAP1
0xe03 SLOAD
0xe04 SWAP1
0xe05 PUSH2 0x100
0xe08 EXP
0xe09 SWAP1
0xe0a DIV
0xe0b PUSH1 0xff
0xe0d AND
0xe0e ISZERO
---
0xdd9: V1330 = 0x3
0xddb: V1331 = 0x0
0xdde: V1332 = 0x1
0xde0: V1333 = 0xd8
0xde2: V1334 = 0x2
0xde4: V1335 = EXP 0x2 0xd8
0xde5: V1336 = SUB 0x1000000000000000000000000000000000000000000000000000000 0x1
0xde6: V1337 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xde7: V1338 = AND 0xffffffffff000000000000000000000000000000000000000000000000000000 V254
0xde8: V1339 = 0x1
0xdea: V1340 = 0xd8
0xdec: V1341 = 0x2
0xdee: V1342 = EXP 0x2 0xd8
0xdef: V1343 = SUB 0x1000000000000000000000000000000000000000000000000000000 0x1
0xdf0: V1344 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xdf1: V1345 = AND 0xffffffffff000000000000000000000000000000000000000000000000000000 V1338
0xdf3: M[0x0] = V1345
0xdf4: V1346 = 0x20
0xdf6: V1347 = ADD 0x20 0x0
0xdf9: M[0x20] = 0x3
0xdfa: V1348 = 0x20
0xdfc: V1349 = ADD 0x20 0x20
0xdfd: V1350 = 0x0
0xdff: V1351 = SHA3 0x0 0x40
0xe00: V1352 = 0x0
0xe03: V1353 = S[V1351]
0xe05: V1354 = 0x100
0xe08: V1355 = EXP 0x100 0x0
0xe0a: V1356 = DIV V1353 0x1
0xe0b: V1357 = 0xff
0xe0d: V1358 = AND 0xff V1356
0xe0e: V1359 = ISZERO V1358
---
Entry stack: [V13, 0x157, V240, V254, V263, 0x0, V1327]
Stack pops: 4
Stack additions: [S3, S2, S1, V1359]
Exit stack: [V13, 0x157, V240, V254, V263, 0x0, V1359]

================================

Block 0xe0f
[0xe0f:0xe15]
---
Predecessors: [0xd9b, 0xdd8]
Successors: [0xe16, 0xe7f]
---
0xe0f JUMPDEST
0xe10 DUP1
0xe11 ISZERO
0xe12 PUSH2 0xe7f
0xe15 JUMPI
---
0xe0f: JUMPDEST 
0xe11: V1360 = ISZERO S0
0xe12: V1361 = 0xe7f
0xe15: JUMPI 0xe7f V1360
---
Entry stack: [V13, 0x157, V240, V254, V263, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x157, V240, V254, V263, 0x0, S0]

================================

Block 0xe16
[0xe16:0xe6a]
---
Predecessors: [0xe0f]
Successors: [0xac4, 0xe6b]
---
0xe16 POP
0xe17 PUSH2 0xe7f
0xe1a DUP5
0xe1b PUSH1 0x7
0xe1d SLOAD
0xe1e DUP6
0xe1f PUSH1 0x40
0xe21 MLOAD
0xe22 PUSH1 0x20
0xe24 ADD
0xe25 DUP1
0xe26 DUP3
0xe27 PUSH1 0x1
0xe29 PUSH1 0xd8
0xe2b PUSH1 0x2
0xe2d EXP
0xe2e SUB
0xe2f NOT
0xe30 AND
0xe31 PUSH1 0x1
0xe33 PUSH1 0xd8
0xe35 PUSH1 0x2
0xe37 EXP
0xe38 SUB
0xe39 NOT
0xe3a AND
0xe3b DUP2
0xe3c MSTORE
0xe3d PUSH1 0x5
0xe3f ADD
0xe40 SWAP2
0xe41 POP
0xe42 POP
0xe43 PUSH1 0x40
0xe45 MLOAD
0xe46 PUSH1 0x20
0xe48 DUP2
0xe49 DUP4
0xe4a SUB
0xe4b SUB
0xe4c DUP2
0xe4d MSTORE
0xe4e SWAP1
0xe4f PUSH1 0x40
0xe51 MSTORE
0xe52 PUSH1 0x40
0xe54 MLOAD
0xe55 DUP1
0xe56 DUP3
0xe57 DUP1
0xe58 MLOAD
0xe59 SWAP1
0xe5a PUSH1 0x20
0xe5c ADD
0xe5d SWAP1
0xe5e DUP1
0xe5f DUP4
0xe60 DUP4
0xe61 PUSH1 0x20
0xe63 DUP4
0xe64 LT
0xe65 ISZERO
0xe66 ISZERO
0xe67 PUSH2 0xac4
0xe6a JUMPI
---
0xe17: V1362 = 0xe7f
0xe1b: V1363 = 0x7
0xe1d: V1364 = S[0x7]
0xe1f: V1365 = 0x40
0xe21: V1366 = M[0x40]
0xe22: V1367 = 0x20
0xe24: V1368 = ADD 0x20 V1366
0xe27: V1369 = 0x1
0xe29: V1370 = 0xd8
0xe2b: V1371 = 0x2
0xe2d: V1372 = EXP 0x2 0xd8
0xe2e: V1373 = SUB 0x1000000000000000000000000000000000000000000000000000000 0x1
0xe2f: V1374 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xe30: V1375 = AND 0xffffffffff000000000000000000000000000000000000000000000000000000 V254
0xe31: V1376 = 0x1
0xe33: V1377 = 0xd8
0xe35: V1378 = 0x2
0xe37: V1379 = EXP 0x2 0xd8
0xe38: V1380 = SUB 0x1000000000000000000000000000000000000000000000000000000 0x1
0xe39: V1381 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xe3a: V1382 = AND 0xffffffffff000000000000000000000000000000000000000000000000000000 V1375
0xe3c: M[V1368] = V1382
0xe3d: V1383 = 0x5
0xe3f: V1384 = ADD 0x5 V1368
0xe43: V1385 = 0x40
0xe45: V1386 = M[0x40]
0xe46: V1387 = 0x20
0xe4a: V1388 = SUB V1384 V1386
0xe4b: V1389 = SUB V1388 0x20
0xe4d: M[V1386] = V1389
0xe4f: V1390 = 0x40
0xe51: M[0x40] = V1384
0xe52: V1391 = 0x40
0xe54: V1392 = M[0x40]
0xe58: V1393 = M[V1386]
0xe5a: V1394 = 0x20
0xe5c: V1395 = ADD 0x20 V1386
0xe61: V1396 = 0x20
0xe64: V1397 = LT V1393 0x20
0xe65: V1398 = ISZERO V1397
0xe66: V1399 = ISZERO V1398
0xe67: V1400 = 0xac4
0xe6a: JUMPI 0xac4 V1399
---
Entry stack: [V13, 0x157, V240, V254, V263, 0x0, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, 0xe7f, S4, V1364, V1386, V1392, V1392, V1395, V1393, V1393, V1392, V1395]
Exit stack: [V13, 0x157, V240, V254, V263, 0x0, 0xe7f, V240, V1364, V1386, V1392, V1392, V1395, V1393, V1393, V1392, V1395]

================================

Block 0xe6b
[0xe6b:0xe7e]
---
Predecessors: [0xe16]
Successors: [0xaa5]
---
0xe6b DUP1
0xe6c MLOAD
0xe6d DUP3
0xe6e MSTORE
0xe6f PUSH1 0x20
0xe71 SWAP3
0xe72 DUP4
0xe73 SWAP1
0xe74 SUB
0xe75 SWAP3
0xe76 SWAP2
0xe77 DUP3
0xe78 ADD
0xe79 SWAP2
0xe7a ADD
0xe7b PUSH2 0xaa5
0xe7e JUMP
---
0xe6c: V1401 = M[V1395]
0xe6e: M[V1392] = V1401
0xe6f: V1402 = 0x20
0xe74: V1403 = SUB V1393 0x20
0xe78: V1404 = ADD 0x20 V1392
0xe7a: V1405 = ADD 0x20 V1395
0xe7b: V1406 = 0xaa5
0xe7e: JUMP 0xaa5
---
Entry stack: [V13, 0x157, V240, V254, V263, 0x0, 0xe7f, V240, V1364, V1386, V1392, V1392, V1395, V1393, V1393, V1392, V1395]
Stack pops: 3
Stack additions: [V1403, V1404, V1405]
Exit stack: [V13, 0x157, V240, V254, V263, 0x0, 0xe7f, V240, V1364, V1386, V1392, V1392, V1395, V1393, V1403, V1404, V1405]

================================

Block 0xe7f
[0xe7f:0xe86]
---
Predecessors: [0xe0f, 0x10d4]
Successors: [0x157]
---
0xe7f JUMPDEST
0xe80 SWAP5
0xe81 SWAP4
0xe82 POP
0xe83 POP
0xe84 POP
0xe85 POP
0xe86 JUMP
---
0xe7f: JUMPDEST 
0xe86: JUMP S5
---
Entry stack: [V13, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S0]
Exit stack: [V13, S0]

================================

Block 0xe87
[0xe87:0xebf]
---
Predecessors: [0x2d9]
Successors: [0xec0, 0xec4]
---
0xe87 JUMPDEST
0xe88 PUSH1 0x0
0xe8a DUP1
0xe8b CALLER
0xe8c PUSH1 0x1
0xe8e PUSH1 0xa0
0xe90 PUSH1 0x2
0xe92 EXP
0xe93 SUB
0xe94 AND
0xe95 PUSH1 0x1
0xe97 PUSH1 0xa0
0xe99 PUSH1 0x2
0xe9b EXP
0xe9c SUB
0xe9d AND
0xe9e DUP2
0xe9f MSTORE
0xea0 PUSH1 0x20
0xea2 ADD
0xea3 SWAP1
0xea4 DUP2
0xea5 MSTORE
0xea6 PUSH1 0x20
0xea8 ADD
0xea9 PUSH1 0x0
0xeab SHA3
0xeac PUSH1 0x0
0xeae SWAP1
0xeaf SLOAD
0xeb0 SWAP1
0xeb1 PUSH2 0x100
0xeb4 EXP
0xeb5 SWAP1
0xeb6 DIV
0xeb7 PUSH1 0xff
0xeb9 AND
0xeba ISZERO
0xebb ISZERO
0xebc PUSH2 0xec4
0xebf JUMPI
---
0xe87: JUMPDEST 
0xe88: V1407 = 0x0
0xe8b: V1408 = CALLER
0xe8c: V1409 = 0x1
0xe8e: V1410 = 0xa0
0xe90: V1411 = 0x2
0xe92: V1412 = EXP 0x2 0xa0
0xe93: V1413 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe94: V1414 = AND 0xffffffffffffffffffffffffffffffffffffffff V1408
0xe95: V1415 = 0x1
0xe97: V1416 = 0xa0
0xe99: V1417 = 0x2
0xe9b: V1418 = EXP 0x2 0xa0
0xe9c: V1419 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe9d: V1420 = AND 0xffffffffffffffffffffffffffffffffffffffff V1414
0xe9f: M[0x0] = V1420
0xea0: V1421 = 0x20
0xea2: V1422 = ADD 0x20 0x0
0xea5: M[0x20] = 0x0
0xea6: V1423 = 0x20
0xea8: V1424 = ADD 0x20 0x20
0xea9: V1425 = 0x0
0xeab: V1426 = SHA3 0x0 0x40
0xeac: V1427 = 0x0
0xeaf: V1428 = S[V1426]
0xeb1: V1429 = 0x100
0xeb4: V1430 = EXP 0x100 0x0
0xeb6: V1431 = DIV V1428 0x1
0xeb7: V1432 = 0xff
0xeb9: V1433 = AND 0xff V1431
0xeba: V1434 = ISZERO V1433
0xebb: V1435 = ISZERO V1434
0xebc: V1436 = 0xec4
0xebf: JUMPI 0xec4 V1435
---
Entry stack: [V13, 0xcc, V277, V282]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xcc, V277, V282]

================================

Block 0xec0
[0xec0:0xec3]
---
Predecessors: [0xe87]
Successors: []
---
0xec0 PUSH1 0x0
0xec2 DUP1
0xec3 REVERT
---
0xec0: V1437 = 0x0
0xec3: REVERT 0x0 0x0
---
Entry stack: [V13, 0xcc, V277, V282]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xcc, V277, V282]

================================

Block 0xec4
[0xec4:0xf03]
---
Predecessors: [0xe87]
Successors: [0xcc]
---
0xec4 JUMPDEST
0xec5 DUP1
0xec6 PUSH1 0x0
0xec8 DUP1
0xec9 DUP5
0xeca PUSH1 0x1
0xecc PUSH1 0xa0
0xece PUSH1 0x2
0xed0 EXP
0xed1 SUB
0xed2 AND
0xed3 PUSH1 0x1
0xed5 PUSH1 0xa0
0xed7 PUSH1 0x2
0xed9 EXP
0xeda SUB
0xedb AND
0xedc DUP2
0xedd MSTORE
0xede PUSH1 0x20
0xee0 ADD
0xee1 SWAP1
0xee2 DUP2
0xee3 MSTORE
0xee4 PUSH1 0x20
0xee6 ADD
0xee7 PUSH1 0x0
0xee9 SHA3
0xeea PUSH1 0x0
0xeec PUSH2 0x100
0xeef EXP
0xef0 DUP2
0xef1 SLOAD
0xef2 DUP2
0xef3 PUSH1 0xff
0xef5 MUL
0xef6 NOT
0xef7 AND
0xef8 SWAP1
0xef9 DUP4
0xefa ISZERO
0xefb ISZERO
0xefc MUL
0xefd OR
0xefe SWAP1
0xeff SSTORE
0xf00 POP
0xf01 POP
0xf02 POP
0xf03 JUMP
---
0xec4: JUMPDEST 
0xec6: V1438 = 0x0
0xeca: V1439 = 0x1
0xecc: V1440 = 0xa0
0xece: V1441 = 0x2
0xed0: V1442 = EXP 0x2 0xa0
0xed1: V1443 = SUB 0x10000000000000000000000000000000000000000 0x1
0xed2: V1444 = AND 0xffffffffffffffffffffffffffffffffffffffff V277
0xed3: V1445 = 0x1
0xed5: V1446 = 0xa0
0xed7: V1447 = 0x2
0xed9: V1448 = EXP 0x2 0xa0
0xeda: V1449 = SUB 0x10000000000000000000000000000000000000000 0x1
0xedb: V1450 = AND 0xffffffffffffffffffffffffffffffffffffffff V1444
0xedd: M[0x0] = V1450
0xede: V1451 = 0x20
0xee0: V1452 = ADD 0x20 0x0
0xee3: M[0x20] = 0x0
0xee4: V1453 = 0x20
0xee6: V1454 = ADD 0x20 0x20
0xee7: V1455 = 0x0
0xee9: V1456 = SHA3 0x0 0x40
0xeea: V1457 = 0x0
0xeec: V1458 = 0x100
0xeef: V1459 = EXP 0x100 0x0
0xef1: V1460 = S[V1456]
0xef3: V1461 = 0xff
0xef5: V1462 = MUL 0xff 0x1
0xef6: V1463 = NOT 0xff
0xef7: V1464 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1460
0xefa: V1465 = ISZERO V282
0xefb: V1466 = ISZERO V1465
0xefc: V1467 = MUL V1466 0x1
0xefd: V1468 = OR V1467 V1464
0xeff: S[V1456] = V1468
0xf03: JUMP 0xcc
---
Entry stack: [V13, 0xcc, V277, V282]
Stack pops: 3
Stack additions: []
Exit stack: [V13]

================================

Block 0xf04
[0xf04:0xf1a]
---
Predecessors: [0x302]
Successors: [0x30b]
---
0xf04 JUMPDEST
0xf05 PUSH1 0x4
0xf07 SLOAD
0xf08 PUSH1 0x0
0xf0a PUSH2 0x100
0xf0d EXP
0xf0e SWAP1
0xf0f DIV
0xf10 PUSH1 0x1
0xf12 PUSH1 0xa0
0xf14 PUSH1 0x2
0xf16 EXP
0xf17 SUB
0xf18 AND
0xf19 DUP2
0xf1a JUMP
---
0xf04: JUMPDEST 
0xf05: V1469 = 0x4
0xf07: V1470 = S[0x4]
0xf08: V1471 = 0x0
0xf0a: V1472 = 0x100
0xf0d: V1473 = EXP 0x100 0x0
0xf0f: V1474 = DIV V1470 0x1
0xf10: V1475 = 0x1
0xf12: V1476 = 0xa0
0xf14: V1477 = 0x2
0xf16: V1478 = EXP 0x2 0xa0
0xf17: V1479 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf18: V1480 = AND 0xffffffffffffffffffffffffffffffffffffffff V1474
0xf1a: JUMP 0x30b
---
Entry stack: [V13, 0x30b]
Stack pops: 1
Stack additions: [S0, V1480]
Exit stack: [V13, 0x30b, V1480]

================================

Block 0xf1b
[0xf1b:0xf20]
---
Predecessors: [0x33f]
Successors: [0x1fa]
---
0xf1b JUMPDEST
0xf1c PUSH1 0x5
0xf1e SLOAD
0xf1f DUP2
0xf20 JUMP
---
0xf1b: JUMPDEST 
0xf1c: V1481 = 0x5
0xf1e: V1482 = S[0x5]
0xf20: JUMP 0x1fa
---
Entry stack: [V13, 0x1fa]
Stack pops: 1
Stack additions: [S0, V1482]
Exit stack: [V13, 0x1fa, V1482]

================================

Block 0xf21
[0xf21:0xf40]
---
Predecessors: [0x354]
Successors: [0x157]
---
0xf21 JUMPDEST
0xf22 PUSH1 0x0
0xf24 PUSH1 0x20
0xf26 MSTORE
0xf27 DUP1
0xf28 PUSH1 0x0
0xf2a MSTORE
0xf2b PUSH1 0x40
0xf2d PUSH1 0x0
0xf2f SHA3
0xf30 PUSH1 0x0
0xf32 SWAP2
0xf33 POP
0xf34 SLOAD
0xf35 SWAP1
0xf36 PUSH2 0x100
0xf39 EXP
0xf3a SWAP1
0xf3b DIV
0xf3c PUSH1 0xff
0xf3e AND
0xf3f DUP2
0xf40 JUMP
---
0xf21: JUMPDEST 
0xf22: V1483 = 0x0
0xf24: V1484 = 0x20
0xf26: M[0x20] = 0x0
0xf28: V1485 = 0x0
0xf2a: M[0x0] = V327
0xf2b: V1486 = 0x40
0xf2d: V1487 = 0x0
0xf2f: V1488 = SHA3 0x0 0x40
0xf30: V1489 = 0x0
0xf34: V1490 = S[V1488]
0xf36: V1491 = 0x100
0xf39: V1492 = EXP 0x100 0x0
0xf3b: V1493 = DIV V1490 0x1
0xf3c: V1494 = 0xff
0xf3e: V1495 = AND 0xff V1493
0xf40: JUMP 0x157
---
Entry stack: [V13, 0x157, V327]
Stack pops: 2
Stack additions: [S1, V1495]
Exit stack: [V13, 0x157, V1495]

================================

Block 0xf41
[0xf41:0xf46]
---
Predecessors: [0x375]
Successors: [0x37e]
---
0xf41 JUMPDEST
0xf42 PUSH1 0x7
0xf44 SLOAD
0xf45 DUP2
0xf46 JUMP
---
0xf41: JUMPDEST 
0xf42: V1496 = 0x7
0xf44: V1497 = S[0x7]
0xf46: JUMP 0x37e
---
Entry stack: [V13, 0x37e]
Stack pops: 1
Stack additions: [S0, V1497]
Exit stack: [V13, 0x37e, V1497]

================================

Block 0xf47
[0xf47:0xf5d]
---
Predecessors: [0x3a5]
Successors: [0x30b]
---
0xf47 JUMPDEST
0xf48 PUSH1 0x1
0xf4a SLOAD
0xf4b PUSH1 0x0
0xf4d PUSH2 0x100
0xf50 EXP
0xf51 SWAP1
0xf52 DIV
0xf53 PUSH1 0x1
0xf55 PUSH1 0xa0
0xf57 PUSH1 0x2
0xf59 EXP
0xf5a SUB
0xf5b AND
0xf5c DUP2
0xf5d JUMP
---
0xf47: JUMPDEST 
0xf48: V1498 = 0x1
0xf4a: V1499 = S[0x1]
0xf4b: V1500 = 0x0
0xf4d: V1501 = 0x100
0xf50: V1502 = EXP 0x100 0x0
0xf52: V1503 = DIV V1499 0x1
0xf53: V1504 = 0x1
0xf55: V1505 = 0xa0
0xf57: V1506 = 0x2
0xf59: V1507 = EXP 0x2 0xa0
0xf5a: V1508 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf5b: V1509 = AND 0xffffffffffffffffffffffffffffffffffffffff V1503
0xf5d: JUMP 0x30b
---
Entry stack: [V13, 0x30b]
Stack pops: 1
Stack additions: [S0, V1509]
Exit stack: [V13, 0x30b, V1509]

================================

Block 0xf5e
[0xf5e:0xf63]
---
Predecessors: [0xac4]
Successors: [0xf64]
---
0xf5e JUMPDEST
0xf5f PUSH1 0x0
0xf61 DUP2
0xf62 DUP2
0xf63 DUP1
---
0xf5e: JUMPDEST 
0xf5f: V1510 = 0x0
---
Entry stack: [V13, S8, S7, S6, S5, S4, {0xaf6, 0xe7f}, S2, S1, V1069]
Stack pops: 1
Stack additions: [S0, 0x0, S0, 0x0, 0x0]
Exit stack: [V13, S8, S7, S6, S5, S4, {0xaf6, 0xe7f}, S2, S1, V1069, 0x0, V1069, 0x0, 0x0]

================================

Block 0xf64
[0xf64:0xf6d]
---
Predecessors: [0xf5e, 0x10c9]
Successors: [0xf6e, 0x10d4]
---
0xf64 JUMPDEST
0xf65 DUP7
0xf66 MLOAD
0xf67 DUP3
0xf68 LT
0xf69 ISZERO
0xf6a PUSH2 0x10d4
0xf6d JUMPI
---
0xf64: JUMPDEST 
0xf66: V1511 = M[S6]
0xf68: V1512 = LT S1 V1511
0xf69: V1513 = ISZERO V1512
0xf6a: V1514 = 0x10d4
0xf6d: JUMPI 0x10d4 V1513
---
Entry stack: [V13, S12, S11, S10, S9, S8, {0xaf6, 0xe7f}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V13, S12, S11, S10, S9, S8, {0xaf6, 0xe7f}, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xf6e
[0xf6e:0xf79]
---
Predecessors: [0xf64]
Successors: [0xf7a, 0xf7b]
---
0xf6e DUP7
0xf6f DUP3
0xf70 DUP2
0xf71 MLOAD
0xf72 DUP2
0xf73 LT
0xf74 ISZERO
0xf75 ISZERO
0xf76 PUSH2 0xf7b
0xf79 JUMPI
---
0xf71: V1515 = M[S6]
0xf73: V1516 = LT S1 V1515
0xf74: V1517 = ISZERO V1516
0xf75: V1518 = ISZERO V1517
0xf76: V1519 = 0xf7b
0xf79: JUMPI 0xf7b V1518
---
Entry stack: [V13, S12, S11, S10, S9, S8, {0xaf6, 0xe7f}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, S6, S1]
Exit stack: [V13, S12, S11, S10, S9, S8, {0xaf6, 0xe7f}, S6, S5, S4, S3, S2, S1, S0, S6, S1]

================================

Block 0xf7a
[0xf7a:0xf7a]
---
Predecessors: [0xf6e]
Successors: []
---
0xf7a INVALID
---
0xf7a: INVALID 
---
Entry stack: [V13, S14, S13, S12, S11, S10, {0xaf6, 0xe7f}, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S14, S13, S12, S11, S10, {0xaf6, 0xe7f}, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xf7b
[0xf7b:0xf97]
---
Predecessors: [0xf6e]
Successors: [0xf98, 0x1032]
---
0xf7b JUMPDEST
0xf7c SWAP1
0xf7d PUSH1 0x20
0xf7f ADD
0xf80 SWAP1
0xf81 PUSH1 0x20
0xf83 MUL
0xf84 ADD
0xf85 MLOAD
0xf86 SWAP1
0xf87 POP
0xf88 DUP1
0xf89 PUSH1 0x0
0xf8b NOT
0xf8c AND
0xf8d DUP4
0xf8e PUSH1 0x0
0xf90 NOT
0xf91 AND
0xf92 LT
0xf93 ISZERO
0xf94 PUSH2 0x1032
0xf97 JUMPI
---
0xf7b: JUMPDEST 
0xf7d: V1520 = 0x20
0xf7f: V1521 = ADD 0x20 S1
0xf81: V1522 = 0x20
0xf83: V1523 = MUL 0x20 S0
0xf84: V1524 = ADD V1523 V1521
0xf85: V1525 = M[V1524]
0xf89: V1526 = 0x0
0xf8b: V1527 = NOT 0x0
0xf8c: V1528 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V1525
0xf8e: V1529 = 0x0
0xf90: V1530 = NOT 0x0
0xf91: V1531 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff S4
0xf92: V1532 = LT V1531 V1528
0xf93: V1533 = ISZERO V1532
0xf94: V1534 = 0x1032
0xf97: JUMPI 0x1032 V1533
---
Entry stack: [V13, S14, S13, S12, S11, S10, {0xaf6, 0xe7f}, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, V1525]
Exit stack: [V13, S14, S13, S12, S11, S10, {0xaf6, 0xe7f}, S8, S7, S6, S5, S4, S3, V1525]

================================

Block 0xf98
[0xf98:0xfde]
---
Predecessors: [0xf7b]
Successors: [0xfdf]
---
0xf98 DUP3
0xf99 DUP2
0xf9a PUSH1 0x40
0xf9c MLOAD
0xf9d PUSH1 0x20
0xf9f ADD
0xfa0 DUP1
0xfa1 DUP4
0xfa2 PUSH1 0x0
0xfa4 NOT
0xfa5 AND
0xfa6 PUSH1 0x0
0xfa8 NOT
0xfa9 AND
0xfaa DUP2
0xfab MSTORE
0xfac PUSH1 0x20
0xfae ADD
0xfaf DUP3
0xfb0 PUSH1 0x0
0xfb2 NOT
0xfb3 AND
0xfb4 PUSH1 0x0
0xfb6 NOT
0xfb7 AND
0xfb8 DUP2
0xfb9 MSTORE
0xfba PUSH1 0x20
0xfbc ADD
0xfbd SWAP3
0xfbe POP
0xfbf POP
0xfc0 POP
0xfc1 PUSH1 0x40
0xfc3 MLOAD
0xfc4 PUSH1 0x20
0xfc6 DUP2
0xfc7 DUP4
0xfc8 SUB
0xfc9 SUB
0xfca DUP2
0xfcb MSTORE
0xfcc SWAP1
0xfcd PUSH1 0x40
0xfcf MSTORE
0xfd0 PUSH1 0x40
0xfd2 MLOAD
0xfd3 DUP1
0xfd4 DUP3
0xfd5 DUP1
0xfd6 MLOAD
0xfd7 SWAP1
0xfd8 PUSH1 0x20
0xfda ADD
0xfdb SWAP1
0xfdc DUP1
0xfdd DUP4
0xfde DUP4
---
0xf9a: V1535 = 0x40
0xf9c: V1536 = M[0x40]
0xf9d: V1537 = 0x20
0xf9f: V1538 = ADD 0x20 V1536
0xfa2: V1539 = 0x0
0xfa4: V1540 = NOT 0x0
0xfa5: V1541 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff S2
0xfa6: V1542 = 0x0
0xfa8: V1543 = NOT 0x0
0xfa9: V1544 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V1541
0xfab: M[V1538] = V1544
0xfac: V1545 = 0x20
0xfae: V1546 = ADD 0x20 V1538
0xfb0: V1547 = 0x0
0xfb2: V1548 = NOT 0x0
0xfb3: V1549 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V1525
0xfb4: V1550 = 0x0
0xfb6: V1551 = NOT 0x0
0xfb7: V1552 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V1549
0xfb9: M[V1546] = V1552
0xfba: V1553 = 0x20
0xfbc: V1554 = ADD 0x20 V1546
0xfc1: V1555 = 0x40
0xfc3: V1556 = M[0x40]
0xfc4: V1557 = 0x20
0xfc8: V1558 = SUB V1554 V1556
0xfc9: V1559 = SUB V1558 0x20
0xfcb: M[V1556] = V1559
0xfcd: V1560 = 0x40
0xfcf: M[0x40] = V1554
0xfd0: V1561 = 0x40
0xfd2: V1562 = M[0x40]
0xfd6: V1563 = M[V1556]
0xfd8: V1564 = 0x20
0xfda: V1565 = ADD 0x20 V1556
---
Entry stack: [V13, S12, S11, S10, S9, S8, {0xaf6, 0xe7f}, S6, S5, S4, S3, S2, S1, V1525]
Stack pops: 3
Stack additions: [S2, S1, S0, V1556, V1562, V1562, V1565, V1563, V1563, V1562, V1565]
Exit stack: [V13, S12, S11, S10, S9, S8, {0xaf6, 0xe7f}, S6, S5, S4, S3, S2, S1, V1525, V1556, V1562, V1562, V1565, V1563, V1563, V1562, V1565]

================================

Block 0xfdf
[0xfdf:0xfe9]
---
Predecessors: [0xf98, 0xfea]
Successors: [0xfea, 0xffe]
---
0xfdf JUMPDEST
0xfe0 PUSH1 0x20
0xfe2 DUP4
0xfe3 LT
0xfe4 ISZERO
0xfe5 ISZERO
0xfe6 PUSH2 0xffe
0xfe9 JUMPI
---
0xfdf: JUMPDEST 
0xfe0: V1566 = 0x20
0xfe3: V1567 = LT S2 0x20
0xfe4: V1568 = ISZERO V1567
0xfe5: V1569 = ISZERO V1568
0xfe6: V1570 = 0xffe
0xfe9: JUMPI 0xffe V1569
---
Entry stack: [V13, S20, S19, S18, S17, S16, {0xaf6, 0xe7f}, S14, S13, S12, S11, S10, S9, V1525, V1556, V1562, V1562, V1565, V1563, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, S20, S19, S18, S17, S16, {0xaf6, 0xe7f}, S14, S13, S12, S11, S10, S9, V1525, V1556, V1562, V1562, V1565, V1563, S2, S1, S0]

================================

Block 0xfea
[0xfea:0xffd]
---
Predecessors: [0xfdf]
Successors: [0xfdf]
---
0xfea DUP1
0xfeb MLOAD
0xfec DUP3
0xfed MSTORE
0xfee PUSH1 0x20
0xff0 SWAP3
0xff1 DUP4
0xff2 SWAP1
0xff3 SUB
0xff4 SWAP3
0xff5 SWAP2
0xff6 DUP3
0xff7 ADD
0xff8 SWAP2
0xff9 ADD
0xffa PUSH2 0xfdf
0xffd JUMP
---
0xfeb: V1571 = M[S0]
0xfed: M[S1] = V1571
0xfee: V1572 = 0x20
0xff3: V1573 = SUB S2 0x20
0xff7: V1574 = ADD 0x20 S1
0xff9: V1575 = ADD 0x20 S0
0xffa: V1576 = 0xfdf
0xffd: JUMP 0xfdf
---
Entry stack: [V13, S20, S19, S18, S17, S16, {0xaf6, 0xe7f}, S14, S13, S12, S11, S10, S9, V1525, V1556, V1562, V1562, V1565, V1563, S2, S1, S0]
Stack pops: 3
Stack additions: [V1573, V1574, V1575]
Exit stack: [V13, S20, S19, S18, S17, S16, {0xaf6, 0xe7f}, S14, S13, S12, S11, S10, S9, V1525, V1556, V1562, V1562, V1565, V1563, V1573, V1574, V1575]

================================

Block 0xffe
[0xffe:0x1031]
---
Predecessors: [0xfdf]
Successors: [0x10c9]
---
0xffe JUMPDEST
0xfff PUSH1 0x1
0x1001 DUP4
0x1002 PUSH1 0x20
0x1004 SUB
0x1005 PUSH2 0x100
0x1008 EXP
0x1009 SUB
0x100a DUP1
0x100b NOT
0x100c DUP3
0x100d MLOAD
0x100e AND
0x100f DUP2
0x1010 DUP5
0x1011 MLOAD
0x1012 AND
0x1013 DUP1
0x1014 DUP3
0x1015 OR
0x1016 DUP6
0x1017 MSTORE
0x1018 POP
0x1019 POP
0x101a POP
0x101b POP
0x101c POP
0x101d POP
0x101e SWAP1
0x101f POP
0x1020 ADD
0x1021 SWAP2
0x1022 POP
0x1023 POP
0x1024 PUSH1 0x40
0x1026 MLOAD
0x1027 DUP1
0x1028 SWAP2
0x1029 SUB
0x102a SWAP1
0x102b SHA3
0x102c SWAP3
0x102d POP
0x102e PUSH2 0x10c9
0x1031 JUMP
---
0xffe: JUMPDEST 
0xfff: V1577 = 0x1
0x1002: V1578 = 0x20
0x1004: V1579 = SUB 0x20 S2
0x1005: V1580 = 0x100
0x1008: V1581 = EXP 0x100 V1579
0x1009: V1582 = SUB V1581 0x1
0x100b: V1583 = NOT V1582
0x100d: V1584 = M[S0]
0x100e: V1585 = AND V1584 V1583
0x1011: V1586 = M[S1]
0x1012: V1587 = AND V1586 V1582
0x1015: V1588 = OR V1585 V1587
0x1017: M[S1] = V1588
0x1020: V1589 = ADD V1563 V1562
0x1024: V1590 = 0x40
0x1026: V1591 = M[0x40]
0x1029: V1592 = SUB V1589 V1591
0x102b: V1593 = SHA3 V1591 V1592
0x102e: V1594 = 0x10c9
0x1031: JUMP 0x10c9
---
Entry stack: [V13, S20, S19, S18, S17, S16, {0xaf6, 0xe7f}, S14, S13, S12, S11, S10, S9, V1525, V1556, V1562, V1562, V1565, V1563, S2, S1, S0]
Stack pops: 11
Stack additions: [V1593, S9, S8]
Exit stack: [V13, S20, S19, S18, S17, S16, {0xaf6, 0xe7f}, S14, S13, S12, S11, V1593, S9, V1525]

================================

Block 0x1032
[0x1032:0x1079]
---
Predecessors: [0xf7b]
Successors: [0x107a]
---
0x1032 JUMPDEST
0x1033 DUP1
0x1034 DUP4
0x1035 PUSH1 0x40
0x1037 MLOAD
0x1038 PUSH1 0x20
0x103a ADD
0x103b DUP1
0x103c DUP4
0x103d PUSH1 0x0
0x103f NOT
0x1040 AND
0x1041 PUSH1 0x0
0x1043 NOT
0x1044 AND
0x1045 DUP2
0x1046 MSTORE
0x1047 PUSH1 0x20
0x1049 ADD
0x104a DUP3
0x104b PUSH1 0x0
0x104d NOT
0x104e AND
0x104f PUSH1 0x0
0x1051 NOT
0x1052 AND
0x1053 DUP2
0x1054 MSTORE
0x1055 PUSH1 0x20
0x1057 ADD
0x1058 SWAP3
0x1059 POP
0x105a POP
0x105b POP
0x105c PUSH1 0x40
0x105e MLOAD
0x105f PUSH1 0x20
0x1061 DUP2
0x1062 DUP4
0x1063 SUB
0x1064 SUB
0x1065 DUP2
0x1066 MSTORE
0x1067 SWAP1
0x1068 PUSH1 0x40
0x106a MSTORE
0x106b PUSH1 0x40
0x106d MLOAD
0x106e DUP1
0x106f DUP3
0x1070 DUP1
0x1071 MLOAD
0x1072 SWAP1
0x1073 PUSH1 0x20
0x1075 ADD
0x1076 SWAP1
0x1077 DUP1
0x1078 DUP4
0x1079 DUP4
---
0x1032: JUMPDEST 
0x1035: V1595 = 0x40
0x1037: V1596 = M[0x40]
0x1038: V1597 = 0x20
0x103a: V1598 = ADD 0x20 V1596
0x103d: V1599 = 0x0
0x103f: V1600 = NOT 0x0
0x1040: V1601 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V1525
0x1041: V1602 = 0x0
0x1043: V1603 = NOT 0x0
0x1044: V1604 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V1601
0x1046: M[V1598] = V1604
0x1047: V1605 = 0x20
0x1049: V1606 = ADD 0x20 V1598
0x104b: V1607 = 0x0
0x104d: V1608 = NOT 0x0
0x104e: V1609 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff S2
0x104f: V1610 = 0x0
0x1051: V1611 = NOT 0x0
0x1052: V1612 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V1609
0x1054: M[V1606] = V1612
0x1055: V1613 = 0x20
0x1057: V1614 = ADD 0x20 V1606
0x105c: V1615 = 0x40
0x105e: V1616 = M[0x40]
0x105f: V1617 = 0x20
0x1063: V1618 = SUB V1614 V1616
0x1064: V1619 = SUB V1618 0x20
0x1066: M[V1616] = V1619
0x1068: V1620 = 0x40
0x106a: M[0x40] = V1614
0x106b: V1621 = 0x40
0x106d: V1622 = M[0x40]
0x1071: V1623 = M[V1616]
0x1073: V1624 = 0x20
0x1075: V1625 = ADD 0x20 V1616
---
Entry stack: [V13, S12, S11, S10, S9, S8, {0xaf6, 0xe7f}, S6, S5, S4, S3, S2, S1, V1525]
Stack pops: 3
Stack additions: [S2, S1, S0, V1616, V1622, V1622, V1625, V1623, V1623, V1622, V1625]
Exit stack: [V13, S12, S11, S10, S9, S8, {0xaf6, 0xe7f}, S6, S5, S4, S3, S2, S1, V1525, V1616, V1622, V1622, V1625, V1623, V1623, V1622, V1625]

================================

Block 0x107a
[0x107a:0x1084]
---
Predecessors: [0x1032, 0x1085]
Successors: [0x1085, 0x1099]
---
0x107a JUMPDEST
0x107b PUSH1 0x20
0x107d DUP4
0x107e LT
0x107f ISZERO
0x1080 ISZERO
0x1081 PUSH2 0x1099
0x1084 JUMPI
---
0x107a: JUMPDEST 
0x107b: V1626 = 0x20
0x107e: V1627 = LT S2 0x20
0x107f: V1628 = ISZERO V1627
0x1080: V1629 = ISZERO V1628
0x1081: V1630 = 0x1099
0x1084: JUMPI 0x1099 V1629
---
Entry stack: [V13, S20, S19, S18, S17, S16, {0xaf6, 0xe7f}, S14, S13, S12, S11, S10, S9, V1525, V1616, V1622, V1622, V1625, V1623, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, S20, S19, S18, S17, S16, {0xaf6, 0xe7f}, S14, S13, S12, S11, S10, S9, V1525, V1616, V1622, V1622, V1625, V1623, S2, S1, S0]

================================

Block 0x1085
[0x1085:0x1098]
---
Predecessors: [0x107a]
Successors: [0x107a]
---
0x1085 DUP1
0x1086 MLOAD
0x1087 DUP3
0x1088 MSTORE
0x1089 PUSH1 0x20
0x108b SWAP3
0x108c DUP4
0x108d SWAP1
0x108e SUB
0x108f SWAP3
0x1090 SWAP2
0x1091 DUP3
0x1092 ADD
0x1093 SWAP2
0x1094 ADD
0x1095 PUSH2 0x107a
0x1098 JUMP
---
0x1086: V1631 = M[S0]
0x1088: M[S1] = V1631
0x1089: V1632 = 0x20
0x108e: V1633 = SUB S2 0x20
0x1092: V1634 = ADD 0x20 S1
0x1094: V1635 = ADD 0x20 S0
0x1095: V1636 = 0x107a
0x1098: JUMP 0x107a
---
Entry stack: [V13, S20, S19, S18, S17, S16, {0xaf6, 0xe7f}, S14, S13, S12, S11, S10, S9, V1525, V1616, V1622, V1622, V1625, V1623, S2, S1, S0]
Stack pops: 3
Stack additions: [V1633, V1634, V1635]
Exit stack: [V13, S20, S19, S18, S17, S16, {0xaf6, 0xe7f}, S14, S13, S12, S11, S10, S9, V1525, V1616, V1622, V1622, V1625, V1623, V1633, V1634, V1635]

================================

Block 0x1099
[0x1099:0x10c8]
---
Predecessors: [0x107a]
Successors: [0x10c9]
---
0x1099 JUMPDEST
0x109a PUSH1 0x1
0x109c DUP4
0x109d PUSH1 0x20
0x109f SUB
0x10a0 PUSH2 0x100
0x10a3 EXP
0x10a4 SUB
0x10a5 DUP1
0x10a6 NOT
0x10a7 DUP3
0x10a8 MLOAD
0x10a9 AND
0x10aa DUP2
0x10ab DUP5
0x10ac MLOAD
0x10ad AND
0x10ae DUP1
0x10af DUP3
0x10b0 OR
0x10b1 DUP6
0x10b2 MSTORE
0x10b3 POP
0x10b4 POP
0x10b5 POP
0x10b6 POP
0x10b7 POP
0x10b8 POP
0x10b9 SWAP1
0x10ba POP
0x10bb ADD
0x10bc SWAP2
0x10bd POP
0x10be POP
0x10bf PUSH1 0x40
0x10c1 MLOAD
0x10c2 DUP1
0x10c3 SWAP2
0x10c4 SUB
0x10c5 SWAP1
0x10c6 SHA3
0x10c7 SWAP3
0x10c8 POP
---
0x1099: JUMPDEST 
0x109a: V1637 = 0x1
0x109d: V1638 = 0x20
0x109f: V1639 = SUB 0x20 S2
0x10a0: V1640 = 0x100
0x10a3: V1641 = EXP 0x100 V1639
0x10a4: V1642 = SUB V1641 0x1
0x10a6: V1643 = NOT V1642
0x10a8: V1644 = M[S0]
0x10a9: V1645 = AND V1644 V1643
0x10ac: V1646 = M[S1]
0x10ad: V1647 = AND V1646 V1642
0x10b0: V1648 = OR V1645 V1647
0x10b2: M[S1] = V1648
0x10bb: V1649 = ADD V1623 V1622
0x10bf: V1650 = 0x40
0x10c1: V1651 = M[0x40]
0x10c4: V1652 = SUB V1649 V1651
0x10c6: V1653 = SHA3 V1651 V1652
---
Entry stack: [V13, S20, S19, S18, S17, S16, {0xaf6, 0xe7f}, S14, S13, S12, S11, S10, S9, V1525, V1616, V1622, V1622, V1625, V1623, S2, S1, S0]
Stack pops: 11
Stack additions: [V1653, S9, S8]
Exit stack: [V13, S20, S19, S18, S17, S16, {0xaf6, 0xe7f}, S14, S13, S12, S11, V1653, S9, V1525]

================================

Block 0x10c9
[0x10c9:0x10d3]
---
Predecessors: [0xffe, 0x1099]
Successors: [0xf64]
---
0x10c9 JUMPDEST
0x10ca PUSH1 0x1
0x10cc SWAP1
0x10cd SWAP2
0x10ce ADD
0x10cf SWAP1
0x10d0 PUSH2 0xf64
0x10d3 JUMP
---
0x10c9: JUMPDEST 
0x10ca: V1654 = 0x1
0x10ce: V1655 = ADD S1 0x1
0x10d0: V1656 = 0xf64
0x10d3: JUMP 0xf64
---
Entry stack: [V13, S12, S11, S10, S9, S8, {0xaf6, 0xe7f}, S6, S5, S4, S3, S2, S1, V1525]
Stack pops: 2
Stack additions: [V1655, S0]
Exit stack: [V13, S12, S11, S10, S9, S8, {0xaf6, 0xe7f}, S6, S5, S4, S3, S2, V1655, V1525]

================================

Block 0x10d4
[0x10d4:0x10e8]
---
Predecessors: [0xf64]
Successors: [0xaf6, 0xe7f]
---
0x10d4 JUMPDEST
0x10d5 POP
0x10d6 POP
0x10d7 PUSH1 0x0
0x10d9 NOT
0x10da SWAP1
0x10db DUP2
0x10dc AND
0x10dd SWAP4
0x10de AND
0x10df SWAP3
0x10e0 SWAP1
0x10e1 SWAP3
0x10e2 EQ
0x10e3 SWAP4
0x10e4 SWAP3
0x10e5 POP
0x10e6 POP
0x10e7 POP
0x10e8 JUMP
---
0x10d4: JUMPDEST 
0x10d7: V1657 = 0x0
0x10d9: V1658 = NOT 0x0
0x10dc: V1659 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff S2
0x10de: V1660 = AND S5 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x10e2: V1661 = EQ V1660 V1659
0x10e8: JUMP {0xaf6, 0xe7f}
---
Entry stack: [V13, S12, S11, S10, S9, S8, {0xaf6, 0xe7f}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 8
Stack additions: [V1661]
Exit stack: [V13, S12, S11, S10, S9, S8, V1661]

================================

Block 0x10e9
[0x10e9:0x1114]
---
Predecessors: []
Successors: []
---
0x10e9 STOP
0x10ea LOG1
0x10eb PUSH6 0x627a7a723058
0x10f2 SHA3
0x10f3 BYTE
0x10f4 MISSING 0x4a
0x10f5 MISSING 0x2d
0x10f6 CALLDATACOPY
0x10f7 PUSH16 0x50514f203fcec574b050d3664608f166
0x1108 DUP4
0x1109 OR
0x110a MISSING 0x47
0x110b MISSING 0x4d
0x110c MISSING 0xe7
0x110d CALLDATALOAD
0x110e MISSING 0xa7
0x110f LOG4
0x1110 SWAP4
0x1111 MISSING 0x2a
0x1112 ISZERO
0x1113 STOP
0x1114 MISSING 0x29
---
0x10e9: STOP 
0x10ea: LOG S0 S1 S2
0x10eb: V1662 = 0x627a7a723058
0x10f2: V1663 = SHA3 0x627a7a723058 S3
0x10f3: V1664 = BYTE V1663 S4
0x10f4: MISSING 0x4a
0x10f5: MISSING 0x2d
0x10f6: CALLDATACOPY S0 S1 S2
0x10f7: V1665 = 0x50514f203fcec574b050d3664608f166
0x1109: V1666 = OR S5 0x50514f203fcec574b050d3664608f166
0x110a: MISSING 0x47
0x110b: MISSING 0x4d
0x110c: MISSING 0xe7
0x110d: V1667 = CALLDATALOAD S0
0x110e: MISSING 0xa7
0x110f: LOG S0 S1 S2 S3 S4 S5
0x1111: MISSING 0x2a
0x1112: V1668 = ISZERO S0
0x1113: STOP 
0x1114: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V1664, V1666, S3, S4, S5, V1667, S10, S7, S8, S9, S6, V1668]
Exit stack: []

================================

Function 0:
Public function signature: 0x3cebb823
Entry block: 0xce
Exit block: 0xcc
Body: 0xcc, 0xce, 0xd6, 0xda, 0x3ae, 0x3e7, 0x3eb

Function 1:
Public function signature: 0x61b20d8c
Entry block: 0xef
Exit block: 0x5fe
Body: 0xef, 0xf7, 0xfb, 0x415, 0x450, 0x454, 0x4c0, 0x4c4, 0x4cf, 0x4d8, 0x4ea, 0x4ee, 0x575, 0x579, 0x584, 0x58d, 0x59f, 0x5a3, 0x5ac, 0x5fe

Function 2:
Public function signature: 0x6a21857f
Entry block: 0x104
Exit block: 0xcc
Body: 0xcc, 0x104, 0x10c, 0x110, 0x60a, 0x643, 0x647, 0x682, 0x6b9, 0x6c0, 0x737, 0x7e2, 0x7e6, 0x7f1, 0x7fa, 0x80c, 0x810, 0x819, 0x86b, 0x89b, 0x8a4

Function 3:
Public function signature: 0x723de5cd
Entry block: 0x135
Exit block: 0x157
Body: 0x135, 0x13d, 0x141, 0x157, 0x90d

Function 4:
Public function signature: 0x72d209f5
Entry block: 0x16e
Exit block: 0xcc
Body: 0xcc, 0x157, 0x16e, 0x176, 0x17a, 0x92d, 0x966, 0x96a, 0x9a5, 0x9dc, 0x9e3, 0xa5a, 0xaa5, 0xab0, 0xac4, 0xaf6, 0xafd, 0xb4f, 0xbfa, 0xbfe, 0xc09, 0xc12, 0xc24, 0xc28, 0xc31, 0xc83, 0xcb3, 0xcbc, 0xe7f, 0xf5e, 0xf64, 0xf6e, 0xf7a, 0xf7b, 0xf98, 0xfdf, 0xfea, 0xffe, 0x1032, 0x107a, 0x1085, 0x1099, 0x10c9, 0x10d4

Function 5:
Public function signature: 0x7f58fa14
Entry block: 0x1e5
Exit block: 0x1fa
Body: 0x1e5, 0x1ed, 0x1f1, 0x1fa, 0xd26

Function 6:
Public function signature: 0x81e8706d
Entry block: 0x20d
Exit block: 0x157
Body: 0x157, 0x20d, 0x215, 0x219, 0xd2c

Function 7:
Public function signature: 0xa169ce09
Entry block: 0xef
Exit block: 0x5fe
Body: 0xef, 0xf7, 0xfb, 0x415, 0x450, 0x454, 0x4c0, 0x4c4, 0x4cf, 0x4d8, 0x4ea, 0x4ee, 0x575, 0x579, 0x584, 0x58d, 0x59f, 0x5a3, 0x5ac, 0x5fe

Function 8:
Public function signature: 0xa4438334
Entry block: 0x22e
Exit block: 0xcc
Body: 0xcc, 0x22e, 0x236, 0x23a, 0xd4c, 0xd85, 0xd89

Function 9:
Public function signature: 0xadb187bb
Entry block: 0x256
Exit block: 0xcc
Body: 0xcc, 0x157, 0x256, 0x25e, 0x262, 0xaa5, 0xab0, 0xac4, 0xaf6, 0xafd, 0xb4f, 0xbfa, 0xbfe, 0xc09, 0xc12, 0xc24, 0xc28, 0xc31, 0xc83, 0xcb3, 0xcbc, 0xd9b, 0xdd8, 0xe0f, 0xe16, 0xe6b, 0xe7f, 0xf5e, 0xf64, 0xf6e, 0xf7a, 0xf7b, 0xf98, 0xfdf, 0xfea, 0xffe, 0x1032, 0x107a, 0x1085, 0x1099, 0x10c9, 0x10d4

Function 10:
Public function signature: 0xbc41f298
Entry block: 0x2cd
Exit block: 0xcc
Body: 0xcc, 0x2cd, 0x2d5, 0x2d9, 0xe87, 0xec0, 0xec4

Function 11:
Public function signature: 0xc55a02a0
Entry block: 0x2f6
Exit block: 0x30b
Body: 0x2f6, 0x2fe, 0x302, 0x30b, 0xf04

Function 12:
Public function signature: 0xc98166c0
Entry block: 0x333
Exit block: 0x1fa
Body: 0x1fa, 0x333, 0x33b, 0x33f, 0xf1b

Function 13:
Public function signature: 0xda8c229e
Entry block: 0x348
Exit block: 0x157
Body: 0x157, 0x348, 0x350, 0x354, 0xf21

Function 14:
Public function signature: 0xebf0c717
Entry block: 0x369
Exit block: 0x37e
Body: 0x369, 0x371, 0x375, 0x37e, 0xf41

Function 15:
Public function signature: 0xf77c4791
Entry block: 0x399
Exit block: 0x30b
Body: 0x30b, 0x399, 0x3a1, 0x3a5, 0xf47

Function 16:
Public fallback function
Entry block: 0xcc
Exit block: 0xcc
Body: 0xcc

