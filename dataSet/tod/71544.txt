Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x138]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x138
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x138
0xa: JUMPI 0x138 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x1fd]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x6fdde03
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x1fd
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x6fdde03
0x20: V14 = EQ V12 0x6fdde03
0x21: V15 = 0x1fd
0x24: JUMPI 0x1fd V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x288]
---
0x25 DUP1
0x26 PUSH4 0x7da68f5
0x2b EQ
0x2c PUSH2 0x288
0x2f JUMPI
---
0x26: V16 = 0x7da68f5
0x2b: V17 = EQ 0x7da68f5 V12
0x2c: V18 = 0x288
0x2f: JUMPI 0x288 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x29d]
---
0x30 DUP1
0x31 PUSH4 0x95ea7b3
0x36 EQ
0x37 PUSH2 0x29d
0x3a JUMPI
---
0x31: V19 = 0x95ea7b3
0x36: V20 = EQ 0x95ea7b3 V12
0x37: V21 = 0x29d
0x3a: JUMPI 0x29d V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x2d3]
---
0x3b DUP1
0x3c PUSH4 0xb7e9c44
0x41 EQ
0x42 PUSH2 0x2d3
0x45 JUMPI
---
0x3c: V22 = 0xb7e9c44
0x41: V23 = EQ 0xb7e9c44 V12
0x42: V24 = 0x2d3
0x45: JUMPI 0x2d3 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x2f4]
---
0x46 DUP1
0x47 PUSH4 0x13af4035
0x4c EQ
0x4d PUSH2 0x2f4
0x50 JUMPI
---
0x47: V25 = 0x13af4035
0x4c: V26 = EQ 0x13af4035 V12
0x4d: V27 = 0x2f4
0x50: JUMPI 0x2f4 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x315]
---
0x51 DUP1
0x52 PUSH4 0x18160ddd
0x57 EQ
0x58 PUSH2 0x315
0x5b JUMPI
---
0x52: V28 = 0x18160ddd
0x57: V29 = EQ 0x18160ddd V12
0x58: V30 = 0x315
0x5b: JUMPI 0x315 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x33a]
---
0x5c DUP1
0x5d PUSH4 0x23b872dd
0x62 EQ
0x63 PUSH2 0x33a
0x66 JUMPI
---
0x5d: V31 = 0x23b872dd
0x62: V32 = EQ 0x23b872dd V12
0x63: V33 = 0x33a
0x66: JUMPI 0x33a V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x376]
---
0x67 DUP1
0x68 PUSH4 0x313ce567
0x6d EQ
0x6e PUSH2 0x376
0x71 JUMPI
---
0x68: V34 = 0x313ce567
0x6d: V35 = EQ 0x313ce567 V12
0x6e: V36 = 0x376
0x71: JUMPI 0x376 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x39b]
---
0x72 DUP1
0x73 PUSH4 0x3452f51d
0x78 EQ
0x79 PUSH2 0x39b
0x7c JUMPI
---
0x73: V37 = 0x3452f51d
0x78: V38 = EQ 0x3452f51d V12
0x79: V39 = 0x39b
0x7c: JUMPI 0x39b V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x3da]
---
0x7d DUP1
0x7e PUSH4 0x69d3e20e
0x83 EQ
0x84 PUSH2 0x3da
0x87 JUMPI
---
0x7e: V40 = 0x69d3e20e
0x83: V41 = EQ 0x69d3e20e V12
0x84: V42 = 0x3da
0x87: JUMPI 0x3da V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x3fb]
---
0x88 DUP1
0x89 PUSH4 0x70a08231
0x8e EQ
0x8f PUSH2 0x3fb
0x92 JUMPI
---
0x89: V43 = 0x70a08231
0x8e: V44 = EQ 0x70a08231 V12
0x8f: V45 = 0x3fb
0x92: JUMPI 0x3fb V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x42c]
---
0x93 DUP1
0x94 PUSH4 0x71857000
0x99 EQ
0x9a PUSH2 0x42c
0x9d JUMPI
---
0x94: V46 = 0x71857000
0x99: V47 = EQ 0x71857000 V12
0x9a: V48 = 0x42c
0x9d: JUMPI 0x42c V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x45f]
---
0x9e DUP1
0x9f PUSH4 0x75f12b21
0xa4 EQ
0xa5 PUSH2 0x45f
0xa8 JUMPI
---
0x9f: V49 = 0x75f12b21
0xa4: V50 = EQ 0x75f12b21 V12
0xa5: V51 = 0x45f
0xa8: JUMPI 0x45f V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x486]
---
0xa9 DUP1
0xaa PUSH4 0x7a9e5e4b
0xaf EQ
0xb0 PUSH2 0x486
0xb3 JUMPI
---
0xaa: V52 = 0x7a9e5e4b
0xaf: V53 = EQ 0x7a9e5e4b V12
0xb0: V54 = 0x486
0xb3: JUMPI 0x486 V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x4a7]
---
0xb4 DUP1
0xb5 PUSH4 0x8402181f
0xba EQ
0xbb PUSH2 0x4a7
0xbe JUMPI
---
0xb5: V55 = 0x8402181f
0xba: V56 = EQ 0x8402181f V12
0xbb: V57 = 0x4a7
0xbe: JUMPI 0x4a7 V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x4e6]
---
0xbf DUP1
0xc0 PUSH4 0x8da5cb5b
0xc5 EQ
0xc6 PUSH2 0x4e6
0xc9 JUMPI
---
0xc0: V58 = 0x8da5cb5b
0xc5: V59 = EQ 0x8da5cb5b V12
0xc6: V60 = 0x4e6
0xc9: JUMPI 0x4e6 V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5, 0x515]
---
0xca DUP1
0xcb PUSH4 0x90bc1693
0xd0 EQ
0xd1 PUSH2 0x515
0xd4 JUMPI
---
0xcb: V61 = 0x90bc1693
0xd0: V62 = EQ 0x90bc1693 V12
0xd1: V63 = 0x515
0xd4: JUMPI 0x515 V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xdf]
---
Predecessors: [0xca]
Successors: [0xe0, 0x536]
---
0xd5 DUP1
0xd6 PUSH4 0x95d89b41
0xdb EQ
0xdc PUSH2 0x536
0xdf JUMPI
---
0xd6: V64 = 0x95d89b41
0xdb: V65 = EQ 0x95d89b41 V12
0xdc: V66 = 0x536
0xdf: JUMPI 0x536 V65
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xe0
[0xe0:0xea]
---
Predecessors: [0xd5]
Successors: [0xeb, 0x55b]
---
0xe0 DUP1
0xe1 PUSH4 0xa9059cbb
0xe6 EQ
0xe7 PUSH2 0x55b
0xea JUMPI
---
0xe1: V67 = 0xa9059cbb
0xe6: V68 = EQ 0xa9059cbb V12
0xe7: V69 = 0x55b
0xea: JUMPI 0x55b V68
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xeb
[0xeb:0xf5]
---
Predecessors: [0xe0]
Successors: [0xf6, 0x591]
---
0xeb DUP1
0xec PUSH4 0xbe9a6555
0xf1 EQ
0xf2 PUSH2 0x591
0xf5 JUMPI
---
0xec: V70 = 0xbe9a6555
0xf1: V71 = EQ 0xbe9a6555 V12
0xf2: V72 = 0x591
0xf5: JUMPI 0x591 V71
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xf6
[0xf6:0x100]
---
Predecessors: [0xeb]
Successors: [0x101, 0x5a6]
---
0xf6 DUP1
0xf7 PUSH4 0xbf7e214f
0xfc EQ
0xfd PUSH2 0x5a6
0x100 JUMPI
---
0xf7: V73 = 0xbf7e214f
0xfc: V74 = EQ 0xbf7e214f V12
0xfd: V75 = 0x5a6
0x100: JUMPI 0x5a6 V74
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x101
[0x101:0x10b]
---
Predecessors: [0xf6]
Successors: [0x10c, 0x5d5]
---
0x101 DUP1
0x102 PUSH4 0xc47f0027
0x107 EQ
0x108 PUSH2 0x5d5
0x10b JUMPI
---
0x102: V76 = 0xc47f0027
0x107: V77 = EQ 0xc47f0027 V12
0x108: V78 = 0x5d5
0x10b: JUMPI 0x5d5 V77
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x10c
[0x10c:0x116]
---
Predecessors: [0x101]
Successors: [0x117, 0x628]
---
0x10c DUP1
0x10d PUSH4 0xd7dfa0dd
0x112 EQ
0x113 PUSH2 0x628
0x116 JUMPI
---
0x10d: V79 = 0xd7dfa0dd
0x112: V80 = EQ 0xd7dfa0dd V12
0x113: V81 = 0x628
0x116: JUMPI 0x628 V80
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x117
[0x117:0x121]
---
Predecessors: [0x10c]
Successors: [0x122, 0x657]
---
0x117 DUP1
0x118 PUSH4 0xdd62ed3e
0x11d EQ
0x11e PUSH2 0x657
0x121 JUMPI
---
0x118: V82 = 0xdd62ed3e
0x11d: V83 = EQ 0xdd62ed3e V12
0x11e: V84 = 0x657
0x121: JUMPI 0x657 V83
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x122
[0x122:0x12c]
---
Predecessors: [0x117]
Successors: [0x12d, 0x68e]
---
0x122 DUP1
0x123 PUSH4 0xe9bb84c2
0x128 EQ
0x129 PUSH2 0x68e
0x12c JUMPI
---
0x123: V85 = 0xe9bb84c2
0x128: V86 = EQ 0xe9bb84c2 V12
0x129: V87 = 0x68e
0x12c: JUMPI 0x68e V86
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x12d
[0x12d:0x137]
---
Predecessors: [0x122]
Successors: [0x138, 0x6b2]
---
0x12d DUP1
0x12e PUSH4 0xf36d29e7
0x133 EQ
0x134 PUSH2 0x6b2
0x137 JUMPI
---
0x12e: V88 = 0xf36d29e7
0x133: V89 = EQ 0xf36d29e7 V12
0x134: V90 = 0x6b2
0x137: JUMPI 0x6b2 V89
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x138
[0x138:0x138]
---
Predecessors: [0x0, 0x12d]
Successors: [0x139]
---
0x138 JUMPDEST
---
0x138: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x139
[0x139:0x143]
---
Predecessors: [0x138]
Successors: [0x144, 0x148]
---
0x139 JUMPDEST
0x13a PUSH1 0x0
0x13c CALLVALUE
0x13d DUP2
0x13e SWAP1
0x13f GT
0x140 PUSH2 0x148
0x143 JUMPI
---
0x139: JUMPDEST 
0x13a: V91 = 0x0
0x13c: V92 = CALLVALUE
0x13f: V93 = GT V92 0x0
0x140: V94 = 0x148
0x143: JUMPI 0x148 V93
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x0]

================================

Block 0x144
[0x144:0x147]
---
Predecessors: [0x139]
Successors: []
---
0x144 PUSH1 0x0
0x146 DUP1
0x147 REVERT
---
0x144: V95 = 0x0
0x147: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0]

================================

Block 0x148
[0x148:0x1a2]
---
Predecessors: [0x139]
Successors: [0x1a3, 0x1a7]
---
0x148 JUMPDEST
0x149 PUSH1 0x5
0x14b SLOAD
0x14c PUSH1 0x1
0x14e PUSH1 0xa0
0x150 PUSH1 0x2
0x152 EXP
0x153 SUB
0x154 AND
0x155 PUSH4 0x68ce90ac
0x15a CALLER
0x15b CALLVALUE
0x15c PUSH1 0x0
0x15e PUSH1 0x40
0x160 MLOAD
0x161 PUSH1 0x20
0x163 ADD
0x164 MSTORE
0x165 PUSH1 0x40
0x167 MLOAD
0x168 PUSH1 0xe0
0x16a PUSH1 0x2
0x16c EXP
0x16d PUSH4 0xffffffff
0x172 DUP6
0x173 AND
0x174 MUL
0x175 DUP2
0x176 MSTORE
0x177 PUSH1 0x1
0x179 PUSH1 0xa0
0x17b PUSH1 0x2
0x17d EXP
0x17e SUB
0x17f SWAP1
0x180 SWAP3
0x181 AND
0x182 PUSH1 0x4
0x184 DUP4
0x185 ADD
0x186 MSTORE
0x187 PUSH1 0x24
0x189 DUP3
0x18a ADD
0x18b MSTORE
0x18c PUSH1 0x44
0x18e ADD
0x18f PUSH1 0x20
0x191 PUSH1 0x40
0x193 MLOAD
0x194 DUP1
0x195 DUP4
0x196 SUB
0x197 DUP2
0x198 PUSH1 0x0
0x19a DUP8
0x19b DUP1
0x19c EXTCODESIZE
0x19d ISZERO
0x19e ISZERO
0x19f PUSH2 0x1a7
0x1a2 JUMPI
---
0x148: JUMPDEST 
0x149: V96 = 0x5
0x14b: V97 = S[0x5]
0x14c: V98 = 0x1
0x14e: V99 = 0xa0
0x150: V100 = 0x2
0x152: V101 = EXP 0x2 0xa0
0x153: V102 = SUB 0x10000000000000000000000000000000000000000 0x1
0x154: V103 = AND 0xffffffffffffffffffffffffffffffffffffffff V97
0x155: V104 = 0x68ce90ac
0x15a: V105 = CALLER
0x15b: V106 = CALLVALUE
0x15c: V107 = 0x0
0x15e: V108 = 0x40
0x160: V109 = M[0x40]
0x161: V110 = 0x20
0x163: V111 = ADD 0x20 V109
0x164: M[V111] = 0x0
0x165: V112 = 0x40
0x167: V113 = M[0x40]
0x168: V114 = 0xe0
0x16a: V115 = 0x2
0x16c: V116 = EXP 0x2 0xe0
0x16d: V117 = 0xffffffff
0x173: V118 = AND 0x68ce90ac 0xffffffff
0x174: V119 = MUL 0x68ce90ac 0x100000000000000000000000000000000000000000000000000000000
0x176: M[V113] = 0x68ce90ac00000000000000000000000000000000000000000000000000000000
0x177: V120 = 0x1
0x179: V121 = 0xa0
0x17b: V122 = 0x2
0x17d: V123 = EXP 0x2 0xa0
0x17e: V124 = SUB 0x10000000000000000000000000000000000000000 0x1
0x181: V125 = AND V105 0xffffffffffffffffffffffffffffffffffffffff
0x182: V126 = 0x4
0x185: V127 = ADD V113 0x4
0x186: M[V127] = V125
0x187: V128 = 0x24
0x18a: V129 = ADD V113 0x24
0x18b: M[V129] = V106
0x18c: V130 = 0x44
0x18e: V131 = ADD 0x44 V113
0x18f: V132 = 0x20
0x191: V133 = 0x40
0x193: V134 = M[0x40]
0x196: V135 = SUB V131 V134
0x198: V136 = 0x0
0x19c: V137 = EXTCODESIZE V103
0x19d: V138 = ISZERO V137
0x19e: V139 = ISZERO V138
0x19f: V140 = 0x1a7
0x1a2: JUMPI 0x1a7 V139
---
Entry stack: [V12, 0x0]
Stack pops: 0
Stack additions: [V103, 0x68ce90ac, V131, 0x20, V134, V135, V134, 0x0, V103]
Exit stack: [V12, 0x0, V103, 0x68ce90ac, V131, 0x20, V134, V135, V134, 0x0, V103]

================================

Block 0x1a3
[0x1a3:0x1a6]
---
Predecessors: [0x148]
Successors: []
---
0x1a3 PUSH1 0x0
0x1a5 DUP1
0x1a6 REVERT
---
0x1a3: V141 = 0x0
0x1a6: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, V103, 0x68ce90ac, V131, 0x20, V134, V135, V134, 0x0, V103]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, V103, 0x68ce90ac, V131, 0x20, V134, V135, V134, 0x0, V103]

================================

Block 0x1a7
[0x1a7:0x1b3]
---
Predecessors: [0x148]
Successors: [0x1b4, 0x1b8]
---
0x1a7 JUMPDEST
0x1a8 PUSH2 0x2c6
0x1ab GAS
0x1ac SUB
0x1ad CALL
0x1ae ISZERO
0x1af ISZERO
0x1b0 PUSH2 0x1b8
0x1b3 JUMPI
---
0x1a7: JUMPDEST 
0x1a8: V142 = 0x2c6
0x1ab: V143 = GAS
0x1ac: V144 = SUB V143 0x2c6
0x1ad: V145 = CALL V144 V103 0x0 V134 V135 V134 0x20
0x1ae: V146 = ISZERO V145
0x1af: V147 = ISZERO V146
0x1b0: V148 = 0x1b8
0x1b3: JUMPI 0x1b8 V147
---
Entry stack: [V12, 0x0, V103, 0x68ce90ac, V131, 0x20, V134, V135, V134, 0x0, V103]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x0, V103, 0x68ce90ac, V131]

================================

Block 0x1b4
[0x1b4:0x1b7]
---
Predecessors: [0x1a7]
Successors: []
---
0x1b4 PUSH1 0x0
0x1b6 DUP1
0x1b7 REVERT
---
0x1b4: V149 = 0x0
0x1b7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, V103, 0x68ce90ac, V131]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, V103, 0x68ce90ac, V131]

================================

Block 0x1b8
[0x1b8:0x1f9]
---
Predecessors: [0x1a7]
Successors: [0x1fa]
---
0x1b8 JUMPDEST
0x1b9 POP
0x1ba POP
0x1bb POP
0x1bc PUSH1 0x40
0x1be MLOAD
0x1bf DUP1
0x1c0 MLOAD
0x1c1 SWAP1
0x1c2 POP
0x1c3 SWAP1
0x1c4 POP
0x1c5 CALLER
0x1c6 PUSH1 0x1
0x1c8 PUSH1 0xa0
0x1ca PUSH1 0x2
0x1cc EXP
0x1cd SUB
0x1ce AND
0x1cf ADDRESS
0x1d0 PUSH1 0x1
0x1d2 PUSH1 0xa0
0x1d4 PUSH1 0x2
0x1d6 EXP
0x1d7 SUB
0x1d8 AND
0x1d9 PUSH1 0x0
0x1db DUP1
0x1dc MLOAD
0x1dd PUSH1 0x20
0x1df PUSH2 0x1702
0x1e2 DUP4
0x1e3 CODECOPY
0x1e4 DUP2
0x1e5 MLOAD
0x1e6 SWAP2
0x1e7 MSTORE
0x1e8 DUP4
0x1e9 PUSH1 0x40
0x1eb MLOAD
0x1ec SWAP1
0x1ed DUP2
0x1ee MSTORE
0x1ef PUSH1 0x20
0x1f1 ADD
0x1f2 PUSH1 0x40
0x1f4 MLOAD
0x1f5 DUP1
0x1f6 SWAP2
0x1f7 SUB
0x1f8 SWAP1
0x1f9 LOG3
---
0x1b8: JUMPDEST 
0x1bc: V150 = 0x40
0x1be: V151 = M[0x40]
0x1c0: V152 = M[V151]
0x1c5: V153 = CALLER
0x1c6: V154 = 0x1
0x1c8: V155 = 0xa0
0x1ca: V156 = 0x2
0x1cc: V157 = EXP 0x2 0xa0
0x1cd: V158 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ce: V159 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x1cf: V160 = ADDRESS
0x1d0: V161 = 0x1
0x1d2: V162 = 0xa0
0x1d4: V163 = 0x2
0x1d6: V164 = EXP 0x2 0xa0
0x1d7: V165 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d8: V166 = AND 0xffffffffffffffffffffffffffffffffffffffff V160
0x1d9: V167 = 0x0
0x1dc: V168 = M[0x0]
0x1dd: V169 = 0x20
0x1df: V170 = 0x1702
0x1e3: CODECOPY 0x0 0x1702 0x20
0x1e5: V171 = M[0x0]
0x1e7: M[0x0] = V168
0x1e9: V172 = 0x40
0x1eb: V173 = M[0x40]
0x1ee: M[V173] = V152
0x1ef: V174 = 0x20
0x1f1: V175 = ADD 0x20 V173
0x1f2: V176 = 0x40
0x1f4: V177 = M[0x40]
0x1f7: V178 = SUB V175 V177
0x1f9: LOG V177 V178 V171 V166 V159
---
Entry stack: [V12, 0x0, V103, 0x68ce90ac, V131]
Stack pops: 4
Stack additions: [V152]
Exit stack: [V12, V152]

================================

Block 0x1fa
[0x1fa:0x1fc]
---
Predecessors: [0x1b8]
Successors: []
---
0x1fa JUMPDEST
0x1fb POP
0x1fc STOP
---
0x1fa: JUMPDEST 
0x1fc: STOP 
---
Entry stack: [V12, V152]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x1fd
[0x1fd:0x203]
---
Predecessors: [0xb]
Successors: [0x204, 0x208]
---
0x1fd JUMPDEST
0x1fe CALLVALUE
0x1ff ISZERO
0x200 PUSH2 0x208
0x203 JUMPI
---
0x1fd: JUMPDEST 
0x1fe: V179 = CALLVALUE
0x1ff: V180 = ISZERO V179
0x200: V181 = 0x208
0x203: JUMPI 0x208 V180
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x204
[0x204:0x207]
---
Predecessors: [0x1fd]
Successors: []
---
0x204 PUSH1 0x0
0x206 DUP1
0x207 REVERT
---
0x204: V182 = 0x0
0x207: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x208
[0x208:0x20f]
---
Predecessors: [0x1fd]
Successors: [0x6dc]
---
0x208 JUMPDEST
0x209 PUSH2 0x210
0x20c PUSH2 0x6dc
0x20f JUMP
---
0x208: JUMPDEST 
0x209: V183 = 0x210
0x20c: V184 = 0x6dc
0x20f: JUMP 0x6dc
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x210]
Exit stack: [V12, 0x210]

================================

Block 0x210
[0x210:0x233]
---
Predecessors: [0x772]
Successors: [0x234]
---
0x210 JUMPDEST
0x211 PUSH1 0x40
0x213 MLOAD
0x214 PUSH1 0x20
0x216 DUP1
0x217 DUP3
0x218 MSTORE
0x219 DUP2
0x21a SWAP1
0x21b DUP2
0x21c ADD
0x21d DUP4
0x21e DUP2
0x21f DUP2
0x220 MLOAD
0x221 DUP2
0x222 MSTORE
0x223 PUSH1 0x20
0x225 ADD
0x226 SWAP2
0x227 POP
0x228 DUP1
0x229 MLOAD
0x22a SWAP1
0x22b PUSH1 0x20
0x22d ADD
0x22e SWAP1
0x22f DUP1
0x230 DUP4
0x231 DUP4
0x232 PUSH1 0x0
---
0x210: JUMPDEST 
0x211: V185 = 0x40
0x213: V186 = M[0x40]
0x214: V187 = 0x20
0x218: M[V186] = 0x20
0x21c: V188 = ADD V186 0x20
0x220: V189 = M[V705]
0x222: M[V188] = V189
0x223: V190 = 0x20
0x225: V191 = ADD 0x20 V188
0x229: V192 = M[V705]
0x22b: V193 = 0x20
0x22d: V194 = ADD 0x20 V705
0x232: V195 = 0x0
---
Entry stack: [V12, 0x210, V705]
Stack pops: 1
Stack additions: [S0, V186, V186, V191, V194, V192, V192, V191, V194, 0x0]
Exit stack: [V12, 0x210, V705, V186, V186, V191, V194, V192, V192, V191, V194, 0x0]

================================

Block 0x234
[0x234:0x23c]
---
Predecessors: [0x210, 0x245]
Successors: [0x23d, 0x24d]
---
0x234 JUMPDEST
0x235 DUP4
0x236 DUP2
0x237 LT
0x238 ISZERO
0x239 PUSH2 0x24d
0x23c JUMPI
---
0x234: JUMPDEST 
0x237: V196 = LT S0 V192
0x238: V197 = ISZERO V196
0x239: V198 = 0x24d
0x23c: JUMPI 0x24d V197
---
Entry stack: [V12, 0x210, V705, V186, V186, V191, V194, V192, V192, V191, V194, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, 0x210, V705, V186, V186, V191, V194, V192, V192, V191, V194, S0]

================================

Block 0x23d
[0x23d:0x244]
---
Predecessors: [0x234]
Successors: [0x245]
---
0x23d DUP1
0x23e DUP3
0x23f ADD
0x240 MLOAD
0x241 DUP2
0x242 DUP5
0x243 ADD
0x244 MSTORE
---
0x23f: V199 = ADD V194 S0
0x240: V200 = M[V199]
0x243: V201 = ADD V191 S0
0x244: M[V201] = V200
---
Entry stack: [V12, 0x210, V705, V186, V186, V191, V194, V192, V192, V191, V194, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x210, V705, V186, V186, V191, V194, V192, V192, V191, V194, S0]

================================

Block 0x245
[0x245:0x24c]
---
Predecessors: [0x23d]
Successors: [0x234]
---
0x245 JUMPDEST
0x246 PUSH1 0x20
0x248 ADD
0x249 PUSH2 0x234
0x24c JUMP
---
0x245: JUMPDEST 
0x246: V202 = 0x20
0x248: V203 = ADD 0x20 S0
0x249: V204 = 0x234
0x24c: JUMP 0x234
---
Entry stack: [V12, 0x210, V705, V186, V186, V191, V194, V192, V192, V191, V194, S0]
Stack pops: 1
Stack additions: [V203]
Exit stack: [V12, 0x210, V705, V186, V186, V191, V194, V192, V192, V191, V194, V203]

================================

Block 0x24d
[0x24d:0x260]
---
Predecessors: [0x234]
Successors: [0x261, 0x27a]
---
0x24d JUMPDEST
0x24e POP
0x24f POP
0x250 POP
0x251 POP
0x252 SWAP1
0x253 POP
0x254 SWAP1
0x255 DUP2
0x256 ADD
0x257 SWAP1
0x258 PUSH1 0x1f
0x25a AND
0x25b DUP1
0x25c ISZERO
0x25d PUSH2 0x27a
0x260 JUMPI
---
0x24d: JUMPDEST 
0x256: V205 = ADD V192 V191
0x258: V206 = 0x1f
0x25a: V207 = AND 0x1f V192
0x25c: V208 = ISZERO V207
0x25d: V209 = 0x27a
0x260: JUMPI 0x27a V208
---
Entry stack: [V12, 0x210, V705, V186, V186, V191, V194, V192, V192, V191, V194, S0]
Stack pops: 7
Stack additions: [V205, V207]
Exit stack: [V12, 0x210, V705, V186, V186, V205, V207]

================================

Block 0x261
[0x261:0x279]
---
Predecessors: [0x24d]
Successors: [0x27a]
---
0x261 DUP1
0x262 DUP3
0x263 SUB
0x264 DUP1
0x265 MLOAD
0x266 PUSH1 0x1
0x268 DUP4
0x269 PUSH1 0x20
0x26b SUB
0x26c PUSH2 0x100
0x26f EXP
0x270 SUB
0x271 NOT
0x272 AND
0x273 DUP2
0x274 MSTORE
0x275 PUSH1 0x20
0x277 ADD
0x278 SWAP2
0x279 POP
---
0x263: V210 = SUB V205 V207
0x265: V211 = M[V210]
0x266: V212 = 0x1
0x269: V213 = 0x20
0x26b: V214 = SUB 0x20 V207
0x26c: V215 = 0x100
0x26f: V216 = EXP 0x100 V214
0x270: V217 = SUB V216 0x1
0x271: V218 = NOT V217
0x272: V219 = AND V218 V211
0x274: M[V210] = V219
0x275: V220 = 0x20
0x277: V221 = ADD 0x20 V210
---
Entry stack: [V12, 0x210, V705, V186, V186, V205, V207]
Stack pops: 2
Stack additions: [V221, S0]
Exit stack: [V12, 0x210, V705, V186, V186, V221, V207]

================================

Block 0x27a
[0x27a:0x287]
---
Predecessors: [0x24d, 0x261]
Successors: []
---
0x27a JUMPDEST
0x27b POP
0x27c SWAP3
0x27d POP
0x27e POP
0x27f POP
0x280 PUSH1 0x40
0x282 MLOAD
0x283 DUP1
0x284 SWAP2
0x285 SUB
0x286 SWAP1
0x287 RETURN
---
0x27a: JUMPDEST 
0x280: V222 = 0x40
0x282: V223 = M[0x40]
0x285: V224 = SUB S1 V223
0x287: RETURN V223 V224
---
Entry stack: [V12, 0x210, V705, V186, V186, S1, V207]
Stack pops: 5
Stack additions: []
Exit stack: [V12, 0x210]

================================

Block 0x288
[0x288:0x28e]
---
Predecessors: [0x25]
Successors: [0x28f, 0x293]
---
0x288 JUMPDEST
0x289 CALLVALUE
0x28a ISZERO
0x28b PUSH2 0x293
0x28e JUMPI
---
0x288: JUMPDEST 
0x289: V225 = CALLVALUE
0x28a: V226 = ISZERO V225
0x28b: V227 = 0x293
0x28e: JUMPI 0x293 V226
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x28f
[0x28f:0x292]
---
Predecessors: [0x288]
Successors: []
---
0x28f PUSH1 0x0
0x291 DUP1
0x292 REVERT
---
0x28f: V228 = 0x0
0x292: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x293
[0x293:0x29a]
---
Predecessors: [0x288]
Successors: [0x77a]
---
0x293 JUMPDEST
0x294 PUSH2 0x29b
0x297 PUSH2 0x77a
0x29a JUMP
---
0x293: JUMPDEST 
0x294: V229 = 0x29b
0x297: V230 = 0x77a
0x29a: JUMP 0x77a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x29b]
Exit stack: [V12, 0x29b]

================================

Block 0x29b
[0x29b:0x29c]
---
Predecessors: [0x81a, 0x994, 0xb6b, 0xe09, 0xf33, 0xfc6, 0x10fe, 0x12e0, 0x1478, 0x165e, 0x16dc]
Successors: []
---
0x29b JUMPDEST
0x29c STOP
---
0x29b: JUMPDEST 
0x29c: STOP 
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x29d
[0x29d:0x2a3]
---
Predecessors: [0x30]
Successors: [0x2a4, 0x2a8]
---
0x29d JUMPDEST
0x29e CALLVALUE
0x29f ISZERO
0x2a0 PUSH2 0x2a8
0x2a3 JUMPI
---
0x29d: JUMPDEST 
0x29e: V231 = CALLVALUE
0x29f: V232 = ISZERO V231
0x2a0: V233 = 0x2a8
0x2a3: JUMPI 0x2a8 V232
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a4
[0x2a4:0x2a7]
---
Predecessors: [0x29d]
Successors: []
---
0x2a4 PUSH1 0x0
0x2a6 DUP1
0x2a7 REVERT
---
0x2a4: V234 = 0x0
0x2a7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2a8
[0x2a8:0x2be]
---
Predecessors: [0x29d]
Successors: [0x81c]
---
0x2a8 JUMPDEST
0x2a9 PUSH2 0x2bf
0x2ac PUSH1 0x1
0x2ae PUSH1 0xa0
0x2b0 PUSH1 0x2
0x2b2 EXP
0x2b3 SUB
0x2b4 PUSH1 0x4
0x2b6 CALLDATALOAD
0x2b7 AND
0x2b8 PUSH1 0x24
0x2ba CALLDATALOAD
0x2bb PUSH2 0x81c
0x2be JUMP
---
0x2a8: JUMPDEST 
0x2a9: V235 = 0x2bf
0x2ac: V236 = 0x1
0x2ae: V237 = 0xa0
0x2b0: V238 = 0x2
0x2b2: V239 = EXP 0x2 0xa0
0x2b3: V240 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b4: V241 = 0x4
0x2b6: V242 = CALLDATALOAD 0x4
0x2b7: V243 = AND V242 0xffffffffffffffffffffffffffffffffffffffff
0x2b8: V244 = 0x24
0x2ba: V245 = CALLDATALOAD 0x24
0x2bb: V246 = 0x81c
0x2be: JUMP 0x81c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2bf, V243, V245]
Exit stack: [V12, 0x2bf, V243, V245]

================================

Block 0x2bf
[0x2bf:0x2d2]
---
Predecessors: [0x81a, 0x919, 0xca6, 0xccc, 0xf33, 0xf38, 0x123f, 0x16dc]
Successors: []
---
0x2bf JUMPDEST
0x2c0 PUSH1 0x40
0x2c2 MLOAD
0x2c3 SWAP1
0x2c4 ISZERO
0x2c5 ISZERO
0x2c6 DUP2
0x2c7 MSTORE
0x2c8 PUSH1 0x20
0x2ca ADD
0x2cb PUSH1 0x40
0x2cd MLOAD
0x2ce DUP1
0x2cf SWAP2
0x2d0 SUB
0x2d1 SWAP1
0x2d2 RETURN
---
0x2bf: JUMPDEST 
0x2c0: V247 = 0x40
0x2c2: V248 = M[0x40]
0x2c4: V249 = ISZERO S0
0x2c5: V250 = ISZERO V249
0x2c7: M[V248] = V250
0x2c8: V251 = 0x20
0x2ca: V252 = ADD 0x20 V248
0x2cb: V253 = 0x40
0x2cd: V254 = M[0x40]
0x2d0: V255 = SUB V252 V254
0x2d2: RETURN V254 V255
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x2d3
[0x2d3:0x2d9]
---
Predecessors: [0x3b]
Successors: [0x2da, 0x2de]
---
0x2d3 JUMPDEST
0x2d4 CALLVALUE
0x2d5 ISZERO
0x2d6 PUSH2 0x2de
0x2d9 JUMPI
---
0x2d3: JUMPDEST 
0x2d4: V256 = CALLVALUE
0x2d5: V257 = ISZERO V256
0x2d6: V258 = 0x2de
0x2d9: JUMPI 0x2de V257
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2da
[0x2da:0x2dd]
---
Predecessors: [0x2d3]
Successors: []
---
0x2da PUSH1 0x0
0x2dc DUP1
0x2dd REVERT
---
0x2da: V259 = 0x0
0x2dd: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2de
[0x2de:0x2f1]
---
Predecessors: [0x2d3]
Successors: [0x91f]
---
0x2de JUMPDEST
0x2df PUSH2 0x29b
0x2e2 PUSH1 0x1
0x2e4 PUSH1 0xa0
0x2e6 PUSH1 0x2
0x2e8 EXP
0x2e9 SUB
0x2ea PUSH1 0x4
0x2ec CALLDATALOAD
0x2ed AND
0x2ee PUSH2 0x91f
0x2f1 JUMP
---
0x2de: JUMPDEST 
0x2df: V260 = 0x29b
0x2e2: V261 = 0x1
0x2e4: V262 = 0xa0
0x2e6: V263 = 0x2
0x2e8: V264 = EXP 0x2 0xa0
0x2e9: V265 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ea: V266 = 0x4
0x2ec: V267 = CALLDATALOAD 0x4
0x2ed: V268 = AND V267 0xffffffffffffffffffffffffffffffffffffffff
0x2ee: V269 = 0x91f
0x2f1: JUMP 0x91f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x29b, V268]
Exit stack: [V12, 0x29b, V268]

================================

Block 0x2f2
[0x2f2:0x2f3]
---
Predecessors: []
Successors: []
---
0x2f2 JUMPDEST
0x2f3 STOP
---
0x2f2: JUMPDEST 
0x2f3: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2f4
[0x2f4:0x2fa]
---
Predecessors: [0x46]
Successors: [0x2fb, 0x2ff]
---
0x2f4 JUMPDEST
0x2f5 CALLVALUE
0x2f6 ISZERO
0x2f7 PUSH2 0x2ff
0x2fa JUMPI
---
0x2f4: JUMPDEST 
0x2f5: V270 = CALLVALUE
0x2f6: V271 = ISZERO V270
0x2f7: V272 = 0x2ff
0x2fa: JUMPI 0x2ff V271
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2fb
[0x2fb:0x2fe]
---
Predecessors: [0x2f4]
Successors: []
---
0x2fb PUSH1 0x0
0x2fd DUP1
0x2fe REVERT
---
0x2fb: V273 = 0x0
0x2fe: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ff
[0x2ff:0x312]
---
Predecessors: [0x2f4]
Successors: [0x997]
---
0x2ff JUMPDEST
0x300 PUSH2 0x29b
0x303 PUSH1 0x1
0x305 PUSH1 0xa0
0x307 PUSH1 0x2
0x309 EXP
0x30a SUB
0x30b PUSH1 0x4
0x30d CALLDATALOAD
0x30e AND
0x30f PUSH2 0x997
0x312 JUMP
---
0x2ff: JUMPDEST 
0x300: V274 = 0x29b
0x303: V275 = 0x1
0x305: V276 = 0xa0
0x307: V277 = 0x2
0x309: V278 = EXP 0x2 0xa0
0x30a: V279 = SUB 0x10000000000000000000000000000000000000000 0x1
0x30b: V280 = 0x4
0x30d: V281 = CALLDATALOAD 0x4
0x30e: V282 = AND V281 0xffffffffffffffffffffffffffffffffffffffff
0x30f: V283 = 0x997
0x312: JUMP 0x997
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x29b, V282]
Exit stack: [V12, 0x29b, V282]

================================

Block 0x313
[0x313:0x314]
---
Predecessors: []
Successors: []
---
0x313 JUMPDEST
0x314 STOP
---
0x313: JUMPDEST 
0x314: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x315
[0x315:0x31b]
---
Predecessors: [0x51]
Successors: [0x31c, 0x320]
---
0x315 JUMPDEST
0x316 CALLVALUE
0x317 ISZERO
0x318 PUSH2 0x320
0x31b JUMPI
---
0x315: JUMPDEST 
0x316: V284 = CALLVALUE
0x317: V285 = ISZERO V284
0x318: V286 = 0x320
0x31b: JUMPI 0x320 V285
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x31c
[0x31c:0x31f]
---
Predecessors: [0x315]
Successors: []
---
0x31c PUSH1 0x0
0x31e DUP1
0x31f REVERT
---
0x31c: V287 = 0x0
0x31f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x320
[0x320:0x327]
---
Predecessors: [0x315]
Successors: [0xb04]
---
0x320 JUMPDEST
0x321 PUSH2 0x328
0x324 PUSH2 0xb04
0x327 JUMP
---
0x320: JUMPDEST 
0x321: V288 = 0x328
0x324: V289 = 0xb04
0x327: JUMP 0xb04
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x328]
Exit stack: [V12, 0x328]

================================

Block 0x328
[0x328:0x339]
---
Predecessors: [0xb6b, 0xcae, 0xe84, 0x1101, 0x13ba]
Successors: []
---
0x328 JUMPDEST
0x329 PUSH1 0x40
0x32b MLOAD
0x32c SWAP1
0x32d DUP2
0x32e MSTORE
0x32f PUSH1 0x20
0x331 ADD
0x332 PUSH1 0x40
0x334 MLOAD
0x335 DUP1
0x336 SWAP2
0x337 SUB
0x338 SWAP1
0x339 RETURN
---
0x328: JUMPDEST 
0x329: V290 = 0x40
0x32b: V291 = M[0x40]
0x32e: M[V291] = S0
0x32f: V292 = 0x20
0x331: V293 = ADD 0x20 V291
0x332: V294 = 0x40
0x334: V295 = M[0x40]
0x337: V296 = SUB V293 V295
0x339: RETURN V295 V296
---
Entry stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x33a
[0x33a:0x340]
---
Predecessors: [0x5c]
Successors: [0x341, 0x345]
---
0x33a JUMPDEST
0x33b CALLVALUE
0x33c ISZERO
0x33d PUSH2 0x345
0x340 JUMPI
---
0x33a: JUMPDEST 
0x33b: V297 = CALLVALUE
0x33c: V298 = ISZERO V297
0x33d: V299 = 0x345
0x340: JUMPI 0x345 V298
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x341
[0x341:0x344]
---
Predecessors: [0x33a]
Successors: []
---
0x341 PUSH1 0x0
0x343 DUP1
0x344 REVERT
---
0x341: V300 = 0x0
0x344: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x345
[0x345:0x361]
---
Predecessors: [0x33a]
Successors: [0xb6e]
---
0x345 JUMPDEST
0x346 PUSH2 0x2bf
0x349 PUSH1 0x1
0x34b PUSH1 0xa0
0x34d PUSH1 0x2
0x34f EXP
0x350 SUB
0x351 PUSH1 0x4
0x353 CALLDATALOAD
0x354 DUP2
0x355 AND
0x356 SWAP1
0x357 PUSH1 0x24
0x359 CALLDATALOAD
0x35a AND
0x35b PUSH1 0x44
0x35d CALLDATALOAD
0x35e PUSH2 0xb6e
0x361 JUMP
---
0x345: JUMPDEST 
0x346: V301 = 0x2bf
0x349: V302 = 0x1
0x34b: V303 = 0xa0
0x34d: V304 = 0x2
0x34f: V305 = EXP 0x2 0xa0
0x350: V306 = SUB 0x10000000000000000000000000000000000000000 0x1
0x351: V307 = 0x4
0x353: V308 = CALLDATALOAD 0x4
0x355: V309 = AND 0xffffffffffffffffffffffffffffffffffffffff V308
0x357: V310 = 0x24
0x359: V311 = CALLDATALOAD 0x24
0x35a: V312 = AND V311 0xffffffffffffffffffffffffffffffffffffffff
0x35b: V313 = 0x44
0x35d: V314 = CALLDATALOAD 0x44
0x35e: V315 = 0xb6e
0x361: JUMP 0xb6e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2bf, V309, V312, V314]
Exit stack: [V12, 0x2bf, V309, V312, V314]

================================

Block 0x362
[0x362:0x375]
---
Predecessors: []
Successors: []
---
0x362 JUMPDEST
0x363 PUSH1 0x40
0x365 MLOAD
0x366 SWAP1
0x367 ISZERO
0x368 ISZERO
0x369 DUP2
0x36a MSTORE
0x36b PUSH1 0x20
0x36d ADD
0x36e PUSH1 0x40
0x370 MLOAD
0x371 DUP1
0x372 SWAP2
0x373 SUB
0x374 SWAP1
0x375 RETURN
---
0x362: JUMPDEST 
0x363: V316 = 0x40
0x365: V317 = M[0x40]
0x367: V318 = ISZERO S0
0x368: V319 = ISZERO V318
0x36a: M[V317] = V319
0x36b: V320 = 0x20
0x36d: V321 = ADD 0x20 V317
0x36e: V322 = 0x40
0x370: V323 = M[0x40]
0x373: V324 = SUB V321 V323
0x375: RETURN V323 V324
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x376
[0x376:0x37c]
---
Predecessors: [0x67]
Successors: [0x37d, 0x381]
---
0x376 JUMPDEST
0x377 CALLVALUE
0x378 ISZERO
0x379 PUSH2 0x381
0x37c JUMPI
---
0x376: JUMPDEST 
0x377: V325 = CALLVALUE
0x378: V326 = ISZERO V325
0x379: V327 = 0x381
0x37c: JUMPI 0x381 V326
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x37d
[0x37d:0x380]
---
Predecessors: [0x376]
Successors: []
---
0x37d PUSH1 0x0
0x37f DUP1
0x380 REVERT
---
0x37d: V328 = 0x0
0x380: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x381
[0x381:0x388]
---
Predecessors: [0x376]
Successors: [0xcae]
---
0x381 JUMPDEST
0x382 PUSH2 0x328
0x385 PUSH2 0xcae
0x388 JUMP
---
0x381: JUMPDEST 
0x382: V329 = 0x328
0x385: V330 = 0xcae
0x388: JUMP 0xcae
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x328]
Exit stack: [V12, 0x328]

================================

Block 0x389
[0x389:0x39a]
---
Predecessors: []
Successors: []
---
0x389 JUMPDEST
0x38a PUSH1 0x40
0x38c MLOAD
0x38d SWAP1
0x38e DUP2
0x38f MSTORE
0x390 PUSH1 0x20
0x392 ADD
0x393 PUSH1 0x40
0x395 MLOAD
0x396 DUP1
0x397 SWAP2
0x398 SUB
0x399 SWAP1
0x39a RETURN
---
0x389: JUMPDEST 
0x38a: V331 = 0x40
0x38c: V332 = M[0x40]
0x38f: M[V332] = S0
0x390: V333 = 0x20
0x392: V334 = ADD 0x20 V332
0x393: V335 = 0x40
0x395: V336 = M[0x40]
0x398: V337 = SUB V334 V336
0x39a: RETURN V336 V337
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x39b
[0x39b:0x3a1]
---
Predecessors: [0x72]
Successors: [0x3a2, 0x3a6]
---
0x39b JUMPDEST
0x39c CALLVALUE
0x39d ISZERO
0x39e PUSH2 0x3a6
0x3a1 JUMPI
---
0x39b: JUMPDEST 
0x39c: V338 = CALLVALUE
0x39d: V339 = ISZERO V338
0x39e: V340 = 0x3a6
0x3a1: JUMPI 0x3a6 V339
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3a2
[0x3a2:0x3a5]
---
Predecessors: [0x39b]
Successors: []
---
0x3a2 PUSH1 0x0
0x3a4 DUP1
0x3a5 REVERT
---
0x3a2: V341 = 0x0
0x3a5: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3a6
[0x3a6:0x3c5]
---
Predecessors: [0x39b]
Successors: [0xcb4]
---
0x3a6 JUMPDEST
0x3a7 PUSH2 0x2bf
0x3aa PUSH1 0x1
0x3ac PUSH1 0xa0
0x3ae PUSH1 0x2
0x3b0 EXP
0x3b1 SUB
0x3b2 PUSH1 0x4
0x3b4 CALLDATALOAD
0x3b5 AND
0x3b6 PUSH1 0x1
0x3b8 PUSH1 0x80
0x3ba PUSH1 0x2
0x3bc EXP
0x3bd SUB
0x3be PUSH1 0x24
0x3c0 CALLDATALOAD
0x3c1 AND
0x3c2 PUSH2 0xcb4
0x3c5 JUMP
---
0x3a6: JUMPDEST 
0x3a7: V342 = 0x2bf
0x3aa: V343 = 0x1
0x3ac: V344 = 0xa0
0x3ae: V345 = 0x2
0x3b0: V346 = EXP 0x2 0xa0
0x3b1: V347 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b2: V348 = 0x4
0x3b4: V349 = CALLDATALOAD 0x4
0x3b5: V350 = AND V349 0xffffffffffffffffffffffffffffffffffffffff
0x3b6: V351 = 0x1
0x3b8: V352 = 0x80
0x3ba: V353 = 0x2
0x3bc: V354 = EXP 0x2 0x80
0x3bd: V355 = SUB 0x100000000000000000000000000000000 0x1
0x3be: V356 = 0x24
0x3c0: V357 = CALLDATALOAD 0x24
0x3c1: V358 = AND V357 0xffffffffffffffffffffffffffffffff
0x3c2: V359 = 0xcb4
0x3c5: JUMP 0xcb4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2bf, V350, V358]
Exit stack: [V12, 0x2bf, V350, V358]

================================

Block 0x3c6
[0x3c6:0x3d9]
---
Predecessors: []
Successors: []
---
0x3c6 JUMPDEST
0x3c7 PUSH1 0x40
0x3c9 MLOAD
0x3ca SWAP1
0x3cb ISZERO
0x3cc ISZERO
0x3cd DUP2
0x3ce MSTORE
0x3cf PUSH1 0x20
0x3d1 ADD
0x3d2 PUSH1 0x40
0x3d4 MLOAD
0x3d5 DUP1
0x3d6 SWAP2
0x3d7 SUB
0x3d8 SWAP1
0x3d9 RETURN
---
0x3c6: JUMPDEST 
0x3c7: V360 = 0x40
0x3c9: V361 = M[0x40]
0x3cb: V362 = ISZERO S0
0x3cc: V363 = ISZERO V362
0x3ce: M[V361] = V363
0x3cf: V364 = 0x20
0x3d1: V365 = ADD 0x20 V361
0x3d2: V366 = 0x40
0x3d4: V367 = M[0x40]
0x3d7: V368 = SUB V365 V367
0x3d9: RETURN V367 V368
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3da
[0x3da:0x3e0]
---
Predecessors: [0x7d]
Successors: [0x3e1, 0x3e5]
---
0x3da JUMPDEST
0x3db CALLVALUE
0x3dc ISZERO
0x3dd PUSH2 0x3e5
0x3e0 JUMPI
---
0x3da: JUMPDEST 
0x3db: V369 = CALLVALUE
0x3dc: V370 = ISZERO V369
0x3dd: V371 = 0x3e5
0x3e0: JUMPI 0x3e5 V370
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3e1
[0x3e1:0x3e4]
---
Predecessors: [0x3da]
Successors: []
---
0x3e1 PUSH1 0x0
0x3e3 DUP1
0x3e4 REVERT
---
0x3e1: V372 = 0x0
0x3e4: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3e5
[0x3e5:0x3f8]
---
Predecessors: [0x3da]
Successors: [0xcd2]
---
0x3e5 JUMPDEST
0x3e6 PUSH2 0x29b
0x3e9 PUSH1 0x1
0x3eb PUSH1 0x80
0x3ed PUSH1 0x2
0x3ef EXP
0x3f0 SUB
0x3f1 PUSH1 0x4
0x3f3 CALLDATALOAD
0x3f4 AND
0x3f5 PUSH2 0xcd2
0x3f8 JUMP
---
0x3e5: JUMPDEST 
0x3e6: V373 = 0x29b
0x3e9: V374 = 0x1
0x3eb: V375 = 0x80
0x3ed: V376 = 0x2
0x3ef: V377 = EXP 0x2 0x80
0x3f0: V378 = SUB 0x100000000000000000000000000000000 0x1
0x3f1: V379 = 0x4
0x3f3: V380 = CALLDATALOAD 0x4
0x3f4: V381 = AND V380 0xffffffffffffffffffffffffffffffff
0x3f5: V382 = 0xcd2
0x3f8: JUMP 0xcd2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x29b, V381]
Exit stack: [V12, 0x29b, V381]

================================

Block 0x3f9
[0x3f9:0x3fa]
---
Predecessors: []
Successors: []
---
0x3f9 JUMPDEST
0x3fa STOP
---
0x3f9: JUMPDEST 
0x3fa: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3fb
[0x3fb:0x401]
---
Predecessors: [0x88]
Successors: [0x402, 0x406]
---
0x3fb JUMPDEST
0x3fc CALLVALUE
0x3fd ISZERO
0x3fe PUSH2 0x406
0x401 JUMPI
---
0x3fb: JUMPDEST 
0x3fc: V383 = CALLVALUE
0x3fd: V384 = ISZERO V383
0x3fe: V385 = 0x406
0x401: JUMPI 0x406 V384
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x402
[0x402:0x405]
---
Predecessors: [0x3fb]
Successors: []
---
0x402 PUSH1 0x0
0x404 DUP1
0x405 REVERT
---
0x402: V386 = 0x0
0x405: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x406
[0x406:0x419]
---
Predecessors: [0x3fb]
Successors: [0xe0c]
---
0x406 JUMPDEST
0x407 PUSH2 0x328
0x40a PUSH1 0x1
0x40c PUSH1 0xa0
0x40e PUSH1 0x2
0x410 EXP
0x411 SUB
0x412 PUSH1 0x4
0x414 CALLDATALOAD
0x415 AND
0x416 PUSH2 0xe0c
0x419 JUMP
---
0x406: JUMPDEST 
0x407: V387 = 0x328
0x40a: V388 = 0x1
0x40c: V389 = 0xa0
0x40e: V390 = 0x2
0x410: V391 = EXP 0x2 0xa0
0x411: V392 = SUB 0x10000000000000000000000000000000000000000 0x1
0x412: V393 = 0x4
0x414: V394 = CALLDATALOAD 0x4
0x415: V395 = AND V394 0xffffffffffffffffffffffffffffffffffffffff
0x416: V396 = 0xe0c
0x419: JUMP 0xe0c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x328, V395]
Exit stack: [V12, 0x328, V395]

================================

Block 0x41a
[0x41a:0x42b]
---
Predecessors: []
Successors: []
---
0x41a JUMPDEST
0x41b PUSH1 0x40
0x41d MLOAD
0x41e SWAP1
0x41f DUP2
0x420 MSTORE
0x421 PUSH1 0x20
0x423 ADD
0x424 PUSH1 0x40
0x426 MLOAD
0x427 DUP1
0x428 SWAP2
0x429 SUB
0x42a SWAP1
0x42b RETURN
---
0x41a: JUMPDEST 
0x41b: V397 = 0x40
0x41d: V398 = M[0x40]
0x420: M[V398] = S0
0x421: V399 = 0x20
0x423: V400 = ADD 0x20 V398
0x424: V401 = 0x40
0x426: V402 = M[0x40]
0x429: V403 = SUB V400 V402
0x42b: RETURN V402 V403
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x42c
[0x42c:0x432]
---
Predecessors: [0x93]
Successors: [0x433, 0x437]
---
0x42c JUMPDEST
0x42d CALLVALUE
0x42e ISZERO
0x42f PUSH2 0x437
0x432 JUMPI
---
0x42c: JUMPDEST 
0x42d: V404 = CALLVALUE
0x42e: V405 = ISZERO V404
0x42f: V406 = 0x437
0x432: JUMPI 0x437 V405
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x433
[0x433:0x436]
---
Predecessors: [0x42c]
Successors: []
---
0x433 PUSH1 0x0
0x435 DUP1
0x436 REVERT
---
0x433: V407 = 0x0
0x436: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x437
[0x437:0x44a]
---
Predecessors: [0x42c]
Successors: [0xe89]
---
0x437 JUMPDEST
0x438 PUSH2 0x2bf
0x43b PUSH1 0x1
0x43d PUSH1 0xa0
0x43f PUSH1 0x2
0x441 EXP
0x442 SUB
0x443 PUSH1 0x4
0x445 CALLDATALOAD
0x446 AND
0x447 PUSH2 0xe89
0x44a JUMP
---
0x437: JUMPDEST 
0x438: V408 = 0x2bf
0x43b: V409 = 0x1
0x43d: V410 = 0xa0
0x43f: V411 = 0x2
0x441: V412 = EXP 0x2 0xa0
0x442: V413 = SUB 0x10000000000000000000000000000000000000000 0x1
0x443: V414 = 0x4
0x445: V415 = CALLDATALOAD 0x4
0x446: V416 = AND V415 0xffffffffffffffffffffffffffffffffffffffff
0x447: V417 = 0xe89
0x44a: JUMP 0xe89
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2bf, V416]
Exit stack: [V12, 0x2bf, V416]

================================

Block 0x44b
[0x44b:0x45e]
---
Predecessors: []
Successors: []
---
0x44b JUMPDEST
0x44c PUSH1 0x40
0x44e MLOAD
0x44f SWAP1
0x450 ISZERO
0x451 ISZERO
0x452 DUP2
0x453 MSTORE
0x454 PUSH1 0x20
0x456 ADD
0x457 PUSH1 0x40
0x459 MLOAD
0x45a DUP1
0x45b SWAP2
0x45c SUB
0x45d SWAP1
0x45e RETURN
---
0x44b: JUMPDEST 
0x44c: V418 = 0x40
0x44e: V419 = M[0x40]
0x450: V420 = ISZERO S0
0x451: V421 = ISZERO V420
0x453: M[V419] = V421
0x454: V422 = 0x20
0x456: V423 = ADD 0x20 V419
0x457: V424 = 0x40
0x459: V425 = M[0x40]
0x45c: V426 = SUB V423 V425
0x45e: RETURN V425 V426
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x45f
[0x45f:0x465]
---
Predecessors: [0x9e]
Successors: [0x466, 0x46a]
---
0x45f JUMPDEST
0x460 CALLVALUE
0x461 ISZERO
0x462 PUSH2 0x46a
0x465 JUMPI
---
0x45f: JUMPDEST 
0x460: V427 = CALLVALUE
0x461: V428 = ISZERO V427
0x462: V429 = 0x46a
0x465: JUMPI 0x46a V428
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x466
[0x466:0x469]
---
Predecessors: [0x45f]
Successors: []
---
0x466 PUSH1 0x0
0x468 DUP1
0x469 REVERT
---
0x466: V430 = 0x0
0x469: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x46a
[0x46a:0x471]
---
Predecessors: [0x45f]
Successors: [0xf38]
---
0x46a JUMPDEST
0x46b PUSH2 0x2bf
0x46e PUSH2 0xf38
0x471 JUMP
---
0x46a: JUMPDEST 
0x46b: V431 = 0x2bf
0x46e: V432 = 0xf38
0x471: JUMP 0xf38
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2bf]
Exit stack: [V12, 0x2bf]

================================

Block 0x472
[0x472:0x485]
---
Predecessors: []
Successors: []
---
0x472 JUMPDEST
0x473 PUSH1 0x40
0x475 MLOAD
0x476 SWAP1
0x477 ISZERO
0x478 ISZERO
0x479 DUP2
0x47a MSTORE
0x47b PUSH1 0x20
0x47d ADD
0x47e PUSH1 0x40
0x480 MLOAD
0x481 DUP1
0x482 SWAP2
0x483 SUB
0x484 SWAP1
0x485 RETURN
---
0x472: JUMPDEST 
0x473: V433 = 0x40
0x475: V434 = M[0x40]
0x477: V435 = ISZERO S0
0x478: V436 = ISZERO V435
0x47a: M[V434] = V436
0x47b: V437 = 0x20
0x47d: V438 = ADD 0x20 V434
0x47e: V439 = 0x40
0x480: V440 = M[0x40]
0x483: V441 = SUB V438 V440
0x485: RETURN V440 V441
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x486
[0x486:0x48c]
---
Predecessors: [0xa9]
Successors: [0x48d, 0x491]
---
0x486 JUMPDEST
0x487 CALLVALUE
0x488 ISZERO
0x489 PUSH2 0x491
0x48c JUMPI
---
0x486: JUMPDEST 
0x487: V442 = CALLVALUE
0x488: V443 = ISZERO V442
0x489: V444 = 0x491
0x48c: JUMPI 0x491 V443
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x48d
[0x48d:0x490]
---
Predecessors: [0x486]
Successors: []
---
0x48d PUSH1 0x0
0x48f DUP1
0x490 REVERT
---
0x48d: V445 = 0x0
0x490: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x491
[0x491:0x4a4]
---
Predecessors: [0x486]
Successors: [0xf48]
---
0x491 JUMPDEST
0x492 PUSH2 0x29b
0x495 PUSH1 0x1
0x497 PUSH1 0xa0
0x499 PUSH1 0x2
0x49b EXP
0x49c SUB
0x49d PUSH1 0x4
0x49f CALLDATALOAD
0x4a0 AND
0x4a1 PUSH2 0xf48
0x4a4 JUMP
---
0x491: JUMPDEST 
0x492: V446 = 0x29b
0x495: V447 = 0x1
0x497: V448 = 0xa0
0x499: V449 = 0x2
0x49b: V450 = EXP 0x2 0xa0
0x49c: V451 = SUB 0x10000000000000000000000000000000000000000 0x1
0x49d: V452 = 0x4
0x49f: V453 = CALLDATALOAD 0x4
0x4a0: V454 = AND V453 0xffffffffffffffffffffffffffffffffffffffff
0x4a1: V455 = 0xf48
0x4a4: JUMP 0xf48
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x29b, V454]
Exit stack: [V12, 0x29b, V454]

================================

Block 0x4a5
[0x4a5:0x4a6]
---
Predecessors: []
Successors: []
---
0x4a5 JUMPDEST
0x4a6 STOP
---
0x4a5: JUMPDEST 
0x4a6: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x4a7
[0x4a7:0x4ad]
---
Predecessors: [0xb4]
Successors: [0x4ae, 0x4b2]
---
0x4a7 JUMPDEST
0x4a8 CALLVALUE
0x4a9 ISZERO
0x4aa PUSH2 0x4b2
0x4ad JUMPI
---
0x4a7: JUMPDEST 
0x4a8: V456 = CALLVALUE
0x4a9: V457 = ISZERO V456
0x4aa: V458 = 0x4b2
0x4ad: JUMPI 0x4b2 V457
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4ae
[0x4ae:0x4b1]
---
Predecessors: [0x4a7]
Successors: []
---
0x4ae PUSH1 0x0
0x4b0 DUP1
0x4b1 REVERT
---
0x4ae: V459 = 0x0
0x4b1: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4b2
[0x4b2:0x4d1]
---
Predecessors: [0x4a7]
Successors: [0xfc9]
---
0x4b2 JUMPDEST
0x4b3 PUSH2 0x2bf
0x4b6 PUSH1 0x1
0x4b8 PUSH1 0xa0
0x4ba PUSH1 0x2
0x4bc EXP
0x4bd SUB
0x4be PUSH1 0x4
0x4c0 CALLDATALOAD
0x4c1 AND
0x4c2 PUSH1 0x1
0x4c4 PUSH1 0x80
0x4c6 PUSH1 0x2
0x4c8 EXP
0x4c9 SUB
0x4ca PUSH1 0x24
0x4cc CALLDATALOAD
0x4cd AND
0x4ce PUSH2 0xfc9
0x4d1 JUMP
---
0x4b2: JUMPDEST 
0x4b3: V460 = 0x2bf
0x4b6: V461 = 0x1
0x4b8: V462 = 0xa0
0x4ba: V463 = 0x2
0x4bc: V464 = EXP 0x2 0xa0
0x4bd: V465 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4be: V466 = 0x4
0x4c0: V467 = CALLDATALOAD 0x4
0x4c1: V468 = AND V467 0xffffffffffffffffffffffffffffffffffffffff
0x4c2: V469 = 0x1
0x4c4: V470 = 0x80
0x4c6: V471 = 0x2
0x4c8: V472 = EXP 0x2 0x80
0x4c9: V473 = SUB 0x100000000000000000000000000000000 0x1
0x4ca: V474 = 0x24
0x4cc: V475 = CALLDATALOAD 0x24
0x4cd: V476 = AND V475 0xffffffffffffffffffffffffffffffff
0x4ce: V477 = 0xfc9
0x4d1: JUMP 0xfc9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2bf, V468, V476]
Exit stack: [V12, 0x2bf, V468, V476]

================================

Block 0x4d2
[0x4d2:0x4e5]
---
Predecessors: []
Successors: []
---
0x4d2 JUMPDEST
0x4d3 PUSH1 0x40
0x4d5 MLOAD
0x4d6 SWAP1
0x4d7 ISZERO
0x4d8 ISZERO
0x4d9 DUP2
0x4da MSTORE
0x4db PUSH1 0x20
0x4dd ADD
0x4de PUSH1 0x40
0x4e0 MLOAD
0x4e1 DUP1
0x4e2 SWAP2
0x4e3 SUB
0x4e4 SWAP1
0x4e5 RETURN
---
0x4d2: JUMPDEST 
0x4d3: V478 = 0x40
0x4d5: V479 = M[0x40]
0x4d7: V480 = ISZERO S0
0x4d8: V481 = ISZERO V480
0x4da: M[V479] = V481
0x4db: V482 = 0x20
0x4dd: V483 = ADD 0x20 V479
0x4de: V484 = 0x40
0x4e0: V485 = M[0x40]
0x4e3: V486 = SUB V483 V485
0x4e5: RETURN V485 V486
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4e6
[0x4e6:0x4ec]
---
Predecessors: [0xbf]
Successors: [0x4ed, 0x4f1]
---
0x4e6 JUMPDEST
0x4e7 CALLVALUE
0x4e8 ISZERO
0x4e9 PUSH2 0x4f1
0x4ec JUMPI
---
0x4e6: JUMPDEST 
0x4e7: V487 = CALLVALUE
0x4e8: V488 = ISZERO V487
0x4e9: V489 = 0x4f1
0x4ec: JUMPI 0x4f1 V488
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4ed
[0x4ed:0x4f0]
---
Predecessors: [0x4e6]
Successors: []
---
0x4ed PUSH1 0x0
0x4ef DUP1
0x4f0 REVERT
---
0x4ed: V490 = 0x0
0x4f0: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4f1
[0x4f1:0x4f8]
---
Predecessors: [0x4e6]
Successors: [0xfe8]
---
0x4f1 JUMPDEST
0x4f2 PUSH2 0x4f9
0x4f5 PUSH2 0xfe8
0x4f8 JUMP
---
0x4f1: JUMPDEST 
0x4f2: V491 = 0x4f9
0x4f5: V492 = 0xfe8
0x4f8: JUMP 0xfe8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x4f9]
Exit stack: [V12, 0x4f9]

================================

Block 0x4f9
[0x4f9:0x514]
---
Predecessors: [0xfe8, 0x12e2, 0x132b]
Successors: []
---
0x4f9 JUMPDEST
0x4fa PUSH1 0x40
0x4fc MLOAD
0x4fd PUSH1 0x1
0x4ff PUSH1 0xa0
0x501 PUSH1 0x2
0x503 EXP
0x504 SUB
0x505 SWAP1
0x506 SWAP2
0x507 AND
0x508 DUP2
0x509 MSTORE
0x50a PUSH1 0x20
0x50c ADD
0x50d PUSH1 0x40
0x50f MLOAD
0x510 DUP1
0x511 SWAP2
0x512 SUB
0x513 SWAP1
0x514 RETURN
---
0x4f9: JUMPDEST 
0x4fa: V493 = 0x40
0x4fc: V494 = M[0x40]
0x4fd: V495 = 0x1
0x4ff: V496 = 0xa0
0x501: V497 = 0x2
0x503: V498 = EXP 0x2 0xa0
0x504: V499 = SUB 0x10000000000000000000000000000000000000000 0x1
0x507: V500 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x509: M[V494] = V500
0x50a: V501 = 0x20
0x50c: V502 = ADD 0x20 V494
0x50d: V503 = 0x40
0x50f: V504 = M[0x40]
0x512: V505 = SUB V502 V504
0x514: RETURN V504 V505
---
Entry stack: [V12, 0x4f9, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x4f9]

================================

Block 0x515
[0x515:0x51b]
---
Predecessors: [0xca]
Successors: [0x51c, 0x520]
---
0x515 JUMPDEST
0x516 CALLVALUE
0x517 ISZERO
0x518 PUSH2 0x520
0x51b JUMPI
---
0x515: JUMPDEST 
0x516: V506 = CALLVALUE
0x517: V507 = ISZERO V506
0x518: V508 = 0x520
0x51b: JUMPI 0x520 V507
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x51c
[0x51c:0x51f]
---
Predecessors: [0x515]
Successors: []
---
0x51c PUSH1 0x0
0x51e DUP1
0x51f REVERT
---
0x51c: V509 = 0x0
0x51f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x520
[0x520:0x533]
---
Predecessors: [0x515]
Successors: [0xff7]
---
0x520 JUMPDEST
0x521 PUSH2 0x29b
0x524 PUSH1 0x1
0x526 PUSH1 0x80
0x528 PUSH1 0x2
0x52a EXP
0x52b SUB
0x52c PUSH1 0x4
0x52e CALLDATALOAD
0x52f AND
0x530 PUSH2 0xff7
0x533 JUMP
---
0x520: JUMPDEST 
0x521: V510 = 0x29b
0x524: V511 = 0x1
0x526: V512 = 0x80
0x528: V513 = 0x2
0x52a: V514 = EXP 0x2 0x80
0x52b: V515 = SUB 0x100000000000000000000000000000000 0x1
0x52c: V516 = 0x4
0x52e: V517 = CALLDATALOAD 0x4
0x52f: V518 = AND V517 0xffffffffffffffffffffffffffffffff
0x530: V519 = 0xff7
0x533: JUMP 0xff7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x29b, V518]
Exit stack: [V12, 0x29b, V518]

================================

Block 0x534
[0x534:0x535]
---
Predecessors: []
Successors: []
---
0x534 JUMPDEST
0x535 STOP
---
0x534: JUMPDEST 
0x535: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x536
[0x536:0x53c]
---
Predecessors: [0xd5]
Successors: [0x53d, 0x541]
---
0x536 JUMPDEST
0x537 CALLVALUE
0x538 ISZERO
0x539 PUSH2 0x541
0x53c JUMPI
---
0x536: JUMPDEST 
0x537: V520 = CALLVALUE
0x538: V521 = ISZERO V520
0x539: V522 = 0x541
0x53c: JUMPI 0x541 V521
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x53d
[0x53d:0x540]
---
Predecessors: [0x536]
Successors: []
---
0x53d PUSH1 0x0
0x53f DUP1
0x540 REVERT
---
0x53d: V523 = 0x0
0x540: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x541
[0x541:0x548]
---
Predecessors: [0x536]
Successors: [0x1101]
---
0x541 JUMPDEST
0x542 PUSH2 0x328
0x545 PUSH2 0x1101
0x548 JUMP
---
0x541: JUMPDEST 
0x542: V524 = 0x328
0x545: V525 = 0x1101
0x548: JUMP 0x1101
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x328]
Exit stack: [V12, 0x328]

================================

Block 0x549
[0x549:0x55a]
---
Predecessors: []
Successors: []
---
0x549 JUMPDEST
0x54a PUSH1 0x40
0x54c MLOAD
0x54d SWAP1
0x54e DUP2
0x54f MSTORE
0x550 PUSH1 0x20
0x552 ADD
0x553 PUSH1 0x40
0x555 MLOAD
0x556 DUP1
0x557 SWAP2
0x558 SUB
0x559 SWAP1
0x55a RETURN
---
0x549: JUMPDEST 
0x54a: V526 = 0x40
0x54c: V527 = M[0x40]
0x54f: M[V527] = S0
0x550: V528 = 0x20
0x552: V529 = ADD 0x20 V527
0x553: V530 = 0x40
0x555: V531 = M[0x40]
0x558: V532 = SUB V529 V531
0x55a: RETURN V531 V532
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x55b
[0x55b:0x561]
---
Predecessors: [0xe0]
Successors: [0x562, 0x566]
---
0x55b JUMPDEST
0x55c CALLVALUE
0x55d ISZERO
0x55e PUSH2 0x566
0x561 JUMPI
---
0x55b: JUMPDEST 
0x55c: V533 = CALLVALUE
0x55d: V534 = ISZERO V533
0x55e: V535 = 0x566
0x561: JUMPI 0x566 V534
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x562
[0x562:0x565]
---
Predecessors: [0x55b]
Successors: []
---
0x562 PUSH1 0x0
0x564 DUP1
0x565 REVERT
---
0x562: V536 = 0x0
0x565: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x566
[0x566:0x57c]
---
Predecessors: [0x55b]
Successors: [0x1107]
---
0x566 JUMPDEST
0x567 PUSH2 0x2bf
0x56a PUSH1 0x1
0x56c PUSH1 0xa0
0x56e PUSH1 0x2
0x570 EXP
0x571 SUB
0x572 PUSH1 0x4
0x574 CALLDATALOAD
0x575 AND
0x576 PUSH1 0x24
0x578 CALLDATALOAD
0x579 PUSH2 0x1107
0x57c JUMP
---
0x566: JUMPDEST 
0x567: V537 = 0x2bf
0x56a: V538 = 0x1
0x56c: V539 = 0xa0
0x56e: V540 = 0x2
0x570: V541 = EXP 0x2 0xa0
0x571: V542 = SUB 0x10000000000000000000000000000000000000000 0x1
0x572: V543 = 0x4
0x574: V544 = CALLDATALOAD 0x4
0x575: V545 = AND V544 0xffffffffffffffffffffffffffffffffffffffff
0x576: V546 = 0x24
0x578: V547 = CALLDATALOAD 0x24
0x579: V548 = 0x1107
0x57c: JUMP 0x1107
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2bf, V545, V547]
Exit stack: [V12, 0x2bf, V545, V547]

================================

Block 0x57d
[0x57d:0x590]
---
Predecessors: []
Successors: []
---
0x57d JUMPDEST
0x57e PUSH1 0x40
0x580 MLOAD
0x581 SWAP1
0x582 ISZERO
0x583 ISZERO
0x584 DUP2
0x585 MSTORE
0x586 PUSH1 0x20
0x588 ADD
0x589 PUSH1 0x40
0x58b MLOAD
0x58c DUP1
0x58d SWAP2
0x58e SUB
0x58f SWAP1
0x590 RETURN
---
0x57d: JUMPDEST 
0x57e: V549 = 0x40
0x580: V550 = M[0x40]
0x582: V551 = ISZERO S0
0x583: V552 = ISZERO V551
0x585: M[V550] = V552
0x586: V553 = 0x20
0x588: V554 = ADD 0x20 V550
0x589: V555 = 0x40
0x58b: V556 = M[0x40]
0x58e: V557 = SUB V554 V556
0x590: RETURN V556 V557
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x591
[0x591:0x597]
---
Predecessors: [0xeb]
Successors: [0x598, 0x59c]
---
0x591 JUMPDEST
0x592 CALLVALUE
0x593 ISZERO
0x594 PUSH2 0x59c
0x597 JUMPI
---
0x591: JUMPDEST 
0x592: V558 = CALLVALUE
0x593: V559 = ISZERO V558
0x594: V560 = 0x59c
0x597: JUMPI 0x59c V559
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x598
[0x598:0x59b]
---
Predecessors: [0x591]
Successors: []
---
0x598 PUSH1 0x0
0x59a DUP1
0x59b REVERT
---
0x598: V561 = 0x0
0x59b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x59c
[0x59c:0x5a3]
---
Predecessors: [0x591]
Successors: [0x1246]
---
0x59c JUMPDEST
0x59d PUSH2 0x29b
0x5a0 PUSH2 0x1246
0x5a3 JUMP
---
0x59c: JUMPDEST 
0x59d: V562 = 0x29b
0x5a0: V563 = 0x1246
0x5a3: JUMP 0x1246
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x29b]
Exit stack: [V12, 0x29b]

================================

Block 0x5a4
[0x5a4:0x5a5]
---
Predecessors: []
Successors: []
---
0x5a4 JUMPDEST
0x5a5 STOP
---
0x5a4: JUMPDEST 
0x5a5: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x5a6
[0x5a6:0x5ac]
---
Predecessors: [0xf6]
Successors: [0x5ad, 0x5b1]
---
0x5a6 JUMPDEST
0x5a7 CALLVALUE
0x5a8 ISZERO
0x5a9 PUSH2 0x5b1
0x5ac JUMPI
---
0x5a6: JUMPDEST 
0x5a7: V564 = CALLVALUE
0x5a8: V565 = ISZERO V564
0x5a9: V566 = 0x5b1
0x5ac: JUMPI 0x5b1 V565
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x5ad
[0x5ad:0x5b0]
---
Predecessors: [0x5a6]
Successors: []
---
0x5ad PUSH1 0x0
0x5af DUP1
0x5b0 REVERT
---
0x5ad: V567 = 0x0
0x5b0: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x5b1
[0x5b1:0x5b8]
---
Predecessors: [0x5a6]
Successors: [0x12e2]
---
0x5b1 JUMPDEST
0x5b2 PUSH2 0x4f9
0x5b5 PUSH2 0x12e2
0x5b8 JUMP
---
0x5b1: JUMPDEST 
0x5b2: V568 = 0x4f9
0x5b5: V569 = 0x12e2
0x5b8: JUMP 0x12e2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x4f9]
Exit stack: [V12, 0x4f9]

================================

Block 0x5b9
[0x5b9:0x5d4]
---
Predecessors: []
Successors: []
---
0x5b9 JUMPDEST
0x5ba PUSH1 0x40
0x5bc MLOAD
0x5bd PUSH1 0x1
0x5bf PUSH1 0xa0
0x5c1 PUSH1 0x2
0x5c3 EXP
0x5c4 SUB
0x5c5 SWAP1
0x5c6 SWAP2
0x5c7 AND
0x5c8 DUP2
0x5c9 MSTORE
0x5ca PUSH1 0x20
0x5cc ADD
0x5cd PUSH1 0x40
0x5cf MLOAD
0x5d0 DUP1
0x5d1 SWAP2
0x5d2 SUB
0x5d3 SWAP1
0x5d4 RETURN
---
0x5b9: JUMPDEST 
0x5ba: V570 = 0x40
0x5bc: V571 = M[0x40]
0x5bd: V572 = 0x1
0x5bf: V573 = 0xa0
0x5c1: V574 = 0x2
0x5c3: V575 = EXP 0x2 0xa0
0x5c4: V576 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5c7: V577 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x5c9: M[V571] = V577
0x5ca: V578 = 0x20
0x5cc: V579 = ADD 0x20 V571
0x5cd: V580 = 0x40
0x5cf: V581 = M[0x40]
0x5d2: V582 = SUB V579 V581
0x5d4: RETURN V581 V582
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x5d5
[0x5d5:0x5db]
---
Predecessors: [0x101]
Successors: [0x5dc, 0x5e0]
---
0x5d5 JUMPDEST
0x5d6 CALLVALUE
0x5d7 ISZERO
0x5d8 PUSH2 0x5e0
0x5db JUMPI
---
0x5d5: JUMPDEST 
0x5d6: V583 = CALLVALUE
0x5d7: V584 = ISZERO V583
0x5d8: V585 = 0x5e0
0x5db: JUMPI 0x5e0 V584
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x5dc
[0x5dc:0x5df]
---
Predecessors: [0x5d5]
Successors: []
---
0x5dc PUSH1 0x0
0x5de DUP1
0x5df REVERT
---
0x5dc: V586 = 0x0
0x5df: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x5e0
[0x5e0:0x625]
---
Predecessors: [0x5d5]
Successors: [0x12f1]
---
0x5e0 JUMPDEST
0x5e1 PUSH2 0x29b
0x5e4 PUSH1 0x4
0x5e6 PUSH1 0x24
0x5e8 DUP2
0x5e9 CALLDATALOAD
0x5ea DUP2
0x5eb DUP2
0x5ec ADD
0x5ed SWAP1
0x5ee DUP4
0x5ef ADD
0x5f0 CALLDATALOAD
0x5f1 DUP1
0x5f2 PUSH1 0x20
0x5f4 PUSH1 0x1f
0x5f6 DUP3
0x5f7 ADD
0x5f8 DUP2
0x5f9 SWAP1
0x5fa DIV
0x5fb DUP2
0x5fc MUL
0x5fd ADD
0x5fe PUSH1 0x40
0x600 MLOAD
0x601 SWAP1
0x602 DUP2
0x603 ADD
0x604 PUSH1 0x40
0x606 MSTORE
0x607 DUP2
0x608 DUP2
0x609 MSTORE
0x60a SWAP3
0x60b SWAP2
0x60c SWAP1
0x60d PUSH1 0x20
0x60f DUP5
0x610 ADD
0x611 DUP4
0x612 DUP4
0x613 DUP1
0x614 DUP3
0x615 DUP5
0x616 CALLDATACOPY
0x617 POP
0x618 SWAP5
0x619 SWAP7
0x61a POP
0x61b PUSH2 0x12f1
0x61e SWAP6
0x61f POP
0x620 POP
0x621 POP
0x622 POP
0x623 POP
0x624 POP
0x625 JUMP
---
0x5e0: JUMPDEST 
0x5e1: V587 = 0x29b
0x5e4: V588 = 0x4
0x5e6: V589 = 0x24
0x5e9: V590 = CALLDATALOAD 0x4
0x5ec: V591 = ADD V590 0x24
0x5ef: V592 = ADD 0x4 V590
0x5f0: V593 = CALLDATALOAD V592
0x5f2: V594 = 0x20
0x5f4: V595 = 0x1f
0x5f7: V596 = ADD V593 0x1f
0x5fa: V597 = DIV V596 0x20
0x5fc: V598 = MUL 0x20 V597
0x5fd: V599 = ADD V598 0x20
0x5fe: V600 = 0x40
0x600: V601 = M[0x40]
0x603: V602 = ADD V601 V599
0x604: V603 = 0x40
0x606: M[0x40] = V602
0x609: M[V601] = V593
0x60d: V604 = 0x20
0x610: V605 = ADD V601 0x20
0x616: CALLDATACOPY V605 V591 V593
0x61b: V606 = 0x12f1
0x625: JUMP 0x12f1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x29b, V601]
Exit stack: [V12, 0x29b, V601]

================================

Block 0x626
[0x626:0x627]
---
Predecessors: []
Successors: []
---
0x626 JUMPDEST
0x627 STOP
---
0x626: JUMPDEST 
0x627: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x628
[0x628:0x62e]
---
Predecessors: [0x10c]
Successors: [0x62f, 0x633]
---
0x628 JUMPDEST
0x629 CALLVALUE
0x62a ISZERO
0x62b PUSH2 0x633
0x62e JUMPI
---
0x628: JUMPDEST 
0x629: V607 = CALLVALUE
0x62a: V608 = ISZERO V607
0x62b: V609 = 0x633
0x62e: JUMPI 0x633 V608
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x62f
[0x62f:0x632]
---
Predecessors: [0x628]
Successors: []
---
0x62f PUSH1 0x0
0x631 DUP1
0x632 REVERT
---
0x62f: V610 = 0x0
0x632: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x633
[0x633:0x63a]
---
Predecessors: [0x628]
Successors: [0x132b]
---
0x633 JUMPDEST
0x634 PUSH2 0x4f9
0x637 PUSH2 0x132b
0x63a JUMP
---
0x633: JUMPDEST 
0x634: V611 = 0x4f9
0x637: V612 = 0x132b
0x63a: JUMP 0x132b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x4f9]
Exit stack: [V12, 0x4f9]

================================

Block 0x63b
[0x63b:0x656]
---
Predecessors: []
Successors: []
---
0x63b JUMPDEST
0x63c PUSH1 0x40
0x63e MLOAD
0x63f PUSH1 0x1
0x641 PUSH1 0xa0
0x643 PUSH1 0x2
0x645 EXP
0x646 SUB
0x647 SWAP1
0x648 SWAP2
0x649 AND
0x64a DUP2
0x64b MSTORE
0x64c PUSH1 0x20
0x64e ADD
0x64f PUSH1 0x40
0x651 MLOAD
0x652 DUP1
0x653 SWAP2
0x654 SUB
0x655 SWAP1
0x656 RETURN
---
0x63b: JUMPDEST 
0x63c: V613 = 0x40
0x63e: V614 = M[0x40]
0x63f: V615 = 0x1
0x641: V616 = 0xa0
0x643: V617 = 0x2
0x645: V618 = EXP 0x2 0xa0
0x646: V619 = SUB 0x10000000000000000000000000000000000000000 0x1
0x649: V620 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x64b: M[V614] = V620
0x64c: V621 = 0x20
0x64e: V622 = ADD 0x20 V614
0x64f: V623 = 0x40
0x651: V624 = M[0x40]
0x654: V625 = SUB V622 V624
0x656: RETURN V624 V625
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x657
[0x657:0x65d]
---
Predecessors: [0x117]
Successors: [0x65e, 0x662]
---
0x657 JUMPDEST
0x658 CALLVALUE
0x659 ISZERO
0x65a PUSH2 0x662
0x65d JUMPI
---
0x657: JUMPDEST 
0x658: V626 = CALLVALUE
0x659: V627 = ISZERO V626
0x65a: V628 = 0x662
0x65d: JUMPI 0x662 V627
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x65e
[0x65e:0x661]
---
Predecessors: [0x657]
Successors: []
---
0x65e PUSH1 0x0
0x660 DUP1
0x661 REVERT
---
0x65e: V629 = 0x0
0x661: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x662
[0x662:0x67b]
---
Predecessors: [0x657]
Successors: [0x133a]
---
0x662 JUMPDEST
0x663 PUSH2 0x328
0x666 PUSH1 0x1
0x668 PUSH1 0xa0
0x66a PUSH1 0x2
0x66c EXP
0x66d SUB
0x66e PUSH1 0x4
0x670 CALLDATALOAD
0x671 DUP2
0x672 AND
0x673 SWAP1
0x674 PUSH1 0x24
0x676 CALLDATALOAD
0x677 AND
0x678 PUSH2 0x133a
0x67b JUMP
---
0x662: JUMPDEST 
0x663: V630 = 0x328
0x666: V631 = 0x1
0x668: V632 = 0xa0
0x66a: V633 = 0x2
0x66c: V634 = EXP 0x2 0xa0
0x66d: V635 = SUB 0x10000000000000000000000000000000000000000 0x1
0x66e: V636 = 0x4
0x670: V637 = CALLDATALOAD 0x4
0x672: V638 = AND 0xffffffffffffffffffffffffffffffffffffffff V637
0x674: V639 = 0x24
0x676: V640 = CALLDATALOAD 0x24
0x677: V641 = AND V640 0xffffffffffffffffffffffffffffffffffffffff
0x678: V642 = 0x133a
0x67b: JUMP 0x133a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x328, V638, V641]
Exit stack: [V12, 0x328, V638, V641]

================================

Block 0x67c
[0x67c:0x68d]
---
Predecessors: []
Successors: []
---
0x67c JUMPDEST
0x67d PUSH1 0x40
0x67f MLOAD
0x680 SWAP1
0x681 DUP2
0x682 MSTORE
0x683 PUSH1 0x20
0x685 ADD
0x686 PUSH1 0x40
0x688 MLOAD
0x689 DUP1
0x68a SWAP2
0x68b SUB
0x68c SWAP1
0x68d RETURN
---
0x67c: JUMPDEST 
0x67d: V643 = 0x40
0x67f: V644 = M[0x40]
0x682: M[V644] = S0
0x683: V645 = 0x20
0x685: V646 = ADD 0x20 V644
0x686: V647 = 0x40
0x688: V648 = M[0x40]
0x68b: V649 = SUB V646 V648
0x68d: RETURN V648 V649
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x68e
[0x68e:0x694]
---
Predecessors: [0x122]
Successors: [0x695, 0x699]
---
0x68e JUMPDEST
0x68f CALLVALUE
0x690 ISZERO
0x691 PUSH2 0x699
0x694 JUMPI
---
0x68e: JUMPDEST 
0x68f: V650 = CALLVALUE
0x690: V651 = ISZERO V650
0x691: V652 = 0x699
0x694: JUMPI 0x699 V651
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x695
[0x695:0x698]
---
Predecessors: [0x68e]
Successors: []
---
0x695 PUSH1 0x0
0x697 DUP1
0x698 REVERT
---
0x695: V653 = 0x0
0x698: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x699
[0x699:0x6af]
---
Predecessors: [0x68e]
Successors: [0x13c0]
---
0x699 JUMPDEST
0x69a PUSH2 0x29b
0x69d PUSH1 0x1
0x69f PUSH1 0xa0
0x6a1 PUSH1 0x2
0x6a3 EXP
0x6a4 SUB
0x6a5 PUSH1 0x4
0x6a7 CALLDATALOAD
0x6a8 AND
0x6a9 PUSH1 0x24
0x6ab CALLDATALOAD
0x6ac PUSH2 0x13c0
0x6af JUMP
---
0x699: JUMPDEST 
0x69a: V654 = 0x29b
0x69d: V655 = 0x1
0x69f: V656 = 0xa0
0x6a1: V657 = 0x2
0x6a3: V658 = EXP 0x2 0xa0
0x6a4: V659 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6a5: V660 = 0x4
0x6a7: V661 = CALLDATALOAD 0x4
0x6a8: V662 = AND V661 0xffffffffffffffffffffffffffffffffffffffff
0x6a9: V663 = 0x24
0x6ab: V664 = CALLDATALOAD 0x24
0x6ac: V665 = 0x13c0
0x6af: JUMP 0x13c0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x29b, V662, V664]
Exit stack: [V12, 0x29b, V662, V664]

================================

Block 0x6b0
[0x6b0:0x6b1]
---
Predecessors: []
Successors: []
---
0x6b0 JUMPDEST
0x6b1 STOP
---
0x6b0: JUMPDEST 
0x6b1: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x6b2
[0x6b2:0x6b8]
---
Predecessors: [0x12d]
Successors: [0x6b9, 0x6bd]
---
0x6b2 JUMPDEST
0x6b3 CALLVALUE
0x6b4 ISZERO
0x6b5 PUSH2 0x6bd
0x6b8 JUMPI
---
0x6b2: JUMPDEST 
0x6b3: V666 = CALLVALUE
0x6b4: V667 = ISZERO V666
0x6b5: V668 = 0x6bd
0x6b8: JUMPI 0x6bd V667
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x6b9
[0x6b9:0x6bc]
---
Predecessors: [0x6b2]
Successors: []
---
0x6b9 PUSH1 0x0
0x6bb DUP1
0x6bc REVERT
---
0x6b9: V669 = 0x0
0x6bc: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x6bd
[0x6bd:0x6d9]
---
Predecessors: [0x6b2]
Successors: [0x1427]
---
0x6bd JUMPDEST
0x6be PUSH2 0x29b
0x6c1 PUSH1 0x1
0x6c3 PUSH1 0xa0
0x6c5 PUSH1 0x2
0x6c7 EXP
0x6c8 SUB
0x6c9 PUSH1 0x4
0x6cb CALLDATALOAD
0x6cc DUP2
0x6cd AND
0x6ce SWAP1
0x6cf PUSH1 0x24
0x6d1 CALLDATALOAD
0x6d2 AND
0x6d3 PUSH1 0x44
0x6d5 CALLDATALOAD
0x6d6 PUSH2 0x1427
0x6d9 JUMP
---
0x6bd: JUMPDEST 
0x6be: V670 = 0x29b
0x6c1: V671 = 0x1
0x6c3: V672 = 0xa0
0x6c5: V673 = 0x2
0x6c7: V674 = EXP 0x2 0xa0
0x6c8: V675 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6c9: V676 = 0x4
0x6cb: V677 = CALLDATALOAD 0x4
0x6cd: V678 = AND 0xffffffffffffffffffffffffffffffffffffffff V677
0x6cf: V679 = 0x24
0x6d1: V680 = CALLDATALOAD 0x24
0x6d2: V681 = AND V680 0xffffffffffffffffffffffffffffffffffffffff
0x6d3: V682 = 0x44
0x6d5: V683 = CALLDATALOAD 0x44
0x6d6: V684 = 0x1427
0x6d9: JUMP 0x1427
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x29b, V678, V681, V683]
Exit stack: [V12, 0x29b, V678, V681, V683]

================================

Block 0x6da
[0x6da:0x6db]
---
Predecessors: []
Successors: []
---
0x6da JUMPDEST
0x6db STOP
---
0x6da: JUMPDEST 
0x6db: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x6dc
[0x6dc:0x72b]
---
Predecessors: [0x208]
Successors: [0x72c, 0x772]
---
0x6dc JUMPDEST
0x6dd PUSH1 0x3
0x6df DUP1
0x6e0 SLOAD
0x6e1 PUSH1 0x1
0x6e3 DUP2
0x6e4 PUSH1 0x1
0x6e6 AND
0x6e7 ISZERO
0x6e8 PUSH2 0x100
0x6eb MUL
0x6ec SUB
0x6ed AND
0x6ee PUSH1 0x2
0x6f0 SWAP1
0x6f1 DIV
0x6f2 DUP1
0x6f3 PUSH1 0x1f
0x6f5 ADD
0x6f6 PUSH1 0x20
0x6f8 DUP1
0x6f9 SWAP2
0x6fa DIV
0x6fb MUL
0x6fc PUSH1 0x20
0x6fe ADD
0x6ff PUSH1 0x40
0x701 MLOAD
0x702 SWAP1
0x703 DUP2
0x704 ADD
0x705 PUSH1 0x40
0x707 MSTORE
0x708 DUP1
0x709 SWAP3
0x70a SWAP2
0x70b SWAP1
0x70c DUP2
0x70d DUP2
0x70e MSTORE
0x70f PUSH1 0x20
0x711 ADD
0x712 DUP3
0x713 DUP1
0x714 SLOAD
0x715 PUSH1 0x1
0x717 DUP2
0x718 PUSH1 0x1
0x71a AND
0x71b ISZERO
0x71c PUSH2 0x100
0x71f MUL
0x720 SUB
0x721 AND
0x722 PUSH1 0x2
0x724 SWAP1
0x725 DIV
0x726 DUP1
0x727 ISZERO
0x728 PUSH2 0x772
0x72b JUMPI
---
0x6dc: JUMPDEST 
0x6dd: V685 = 0x3
0x6e0: V686 = S[0x3]
0x6e1: V687 = 0x1
0x6e4: V688 = 0x1
0x6e6: V689 = AND 0x1 V686
0x6e7: V690 = ISZERO V689
0x6e8: V691 = 0x100
0x6eb: V692 = MUL 0x100 V690
0x6ec: V693 = SUB V692 0x1
0x6ed: V694 = AND V693 V686
0x6ee: V695 = 0x2
0x6f1: V696 = DIV V694 0x2
0x6f3: V697 = 0x1f
0x6f5: V698 = ADD 0x1f V696
0x6f6: V699 = 0x20
0x6fa: V700 = DIV V698 0x20
0x6fb: V701 = MUL V700 0x20
0x6fc: V702 = 0x20
0x6fe: V703 = ADD 0x20 V701
0x6ff: V704 = 0x40
0x701: V705 = M[0x40]
0x704: V706 = ADD V705 V703
0x705: V707 = 0x40
0x707: M[0x40] = V706
0x70e: M[V705] = V696
0x70f: V708 = 0x20
0x711: V709 = ADD 0x20 V705
0x714: V710 = S[0x3]
0x715: V711 = 0x1
0x718: V712 = 0x1
0x71a: V713 = AND 0x1 V710
0x71b: V714 = ISZERO V713
0x71c: V715 = 0x100
0x71f: V716 = MUL 0x100 V714
0x720: V717 = SUB V716 0x1
0x721: V718 = AND V717 V710
0x722: V719 = 0x2
0x725: V720 = DIV V718 0x2
0x727: V721 = ISZERO V720
0x728: V722 = 0x772
0x72b: JUMPI 0x772 V721
---
Entry stack: [V12, 0x210]
Stack pops: 0
Stack additions: [V705, 0x3, V696, V709, 0x3, V720]
Exit stack: [V12, 0x210, V705, 0x3, V696, V709, 0x3, V720]

================================

Block 0x72c
[0x72c:0x733]
---
Predecessors: [0x6dc]
Successors: [0x734, 0x747]
---
0x72c DUP1
0x72d PUSH1 0x1f
0x72f LT
0x730 PUSH2 0x747
0x733 JUMPI
---
0x72d: V723 = 0x1f
0x72f: V724 = LT 0x1f V720
0x730: V725 = 0x747
0x733: JUMPI 0x747 V724
---
Entry stack: [V12, 0x210, V705, 0x3, V696, V709, 0x3, V720]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x210, V705, 0x3, V696, V709, 0x3, V720]

================================

Block 0x734
[0x734:0x746]
---
Predecessors: [0x72c]
Successors: [0x772]
---
0x734 PUSH2 0x100
0x737 DUP1
0x738 DUP4
0x739 SLOAD
0x73a DIV
0x73b MUL
0x73c DUP4
0x73d MSTORE
0x73e SWAP2
0x73f PUSH1 0x20
0x741 ADD
0x742 SWAP2
0x743 PUSH2 0x772
0x746 JUMP
---
0x734: V726 = 0x100
0x739: V727 = S[0x3]
0x73a: V728 = DIV V727 0x100
0x73b: V729 = MUL V728 0x100
0x73d: M[V709] = V729
0x73f: V730 = 0x20
0x741: V731 = ADD 0x20 V709
0x743: V732 = 0x772
0x746: JUMP 0x772
---
Entry stack: [V12, 0x210, V705, 0x3, V696, V709, 0x3, V720]
Stack pops: 3
Stack additions: [V731, S1, S0]
Exit stack: [V12, 0x210, V705, 0x3, V696, V731, 0x3, V720]

================================

Block 0x747
[0x747:0x754]
---
Predecessors: [0x72c]
Successors: [0x755]
---
0x747 JUMPDEST
0x748 DUP3
0x749 ADD
0x74a SWAP2
0x74b SWAP1
0x74c PUSH1 0x0
0x74e MSTORE
0x74f PUSH1 0x20
0x751 PUSH1 0x0
0x753 SHA3
0x754 SWAP1
---
0x747: JUMPDEST 
0x749: V733 = ADD V709 V720
0x74c: V734 = 0x0
0x74e: M[0x0] = 0x3
0x74f: V735 = 0x20
0x751: V736 = 0x0
0x753: V737 = SHA3 0x0 0x20
---
Entry stack: [V12, 0x210, V705, 0x3, V696, V709, 0x3, V720]
Stack pops: 3
Stack additions: [V733, V737, S2]
Exit stack: [V12, 0x210, V705, 0x3, V696, V733, V737, V709]

================================

Block 0x755
[0x755:0x768]
---
Predecessors: [0x747, 0x755]
Successors: [0x755, 0x769]
---
0x755 JUMPDEST
0x756 DUP2
0x757 SLOAD
0x758 DUP2
0x759 MSTORE
0x75a SWAP1
0x75b PUSH1 0x1
0x75d ADD
0x75e SWAP1
0x75f PUSH1 0x20
0x761 ADD
0x762 DUP1
0x763 DUP4
0x764 GT
0x765 PUSH2 0x755
0x768 JUMPI
---
0x755: JUMPDEST 
0x757: V738 = S[S1]
0x759: M[S0] = V738
0x75b: V739 = 0x1
0x75d: V740 = ADD 0x1 S1
0x75f: V741 = 0x20
0x761: V742 = ADD 0x20 S0
0x764: V743 = GT V733 V742
0x765: V744 = 0x755
0x768: JUMPI 0x755 V743
---
Entry stack: [V12, 0x210, V705, 0x3, V696, V733, S1, S0]
Stack pops: 3
Stack additions: [S2, V740, V742]
Exit stack: [V12, 0x210, V705, 0x3, V696, V733, V740, V742]

================================

Block 0x769
[0x769:0x771]
---
Predecessors: [0x755]
Successors: [0x772]
---
0x769 DUP3
0x76a SWAP1
0x76b SUB
0x76c PUSH1 0x1f
0x76e AND
0x76f DUP3
0x770 ADD
0x771 SWAP2
---
0x76b: V745 = SUB V742 V733
0x76c: V746 = 0x1f
0x76e: V747 = AND 0x1f V745
0x770: V748 = ADD V733 V747
---
Entry stack: [V12, 0x210, V705, 0x3, V696, V733, V740, V742]
Stack pops: 3
Stack additions: [V748, S1, S2]
Exit stack: [V12, 0x210, V705, 0x3, V696, V748, V740, V733]

================================

Block 0x772
[0x772:0x779]
---
Predecessors: [0x6dc, 0x734, 0x769]
Successors: [0x210]
---
0x772 JUMPDEST
0x773 POP
0x774 POP
0x775 POP
0x776 POP
0x777 POP
0x778 DUP2
0x779 JUMP
---
0x772: JUMPDEST 
0x779: JUMP 0x210
---
Entry stack: [V12, 0x210, V705, 0x3, V696, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V12, 0x210, V705]

================================

Block 0x77a
[0x77a:0x78f]
---
Predecessors: [0x293]
Successors: [0x147d]
---
0x77a JUMPDEST
0x77b PUSH2 0x790
0x77e CALLER
0x77f PUSH1 0x0
0x781 CALLDATALOAD
0x782 PUSH1 0x1
0x784 PUSH1 0xe0
0x786 PUSH1 0x2
0x788 EXP
0x789 SUB
0x78a NOT
0x78b AND
0x78c PUSH2 0x147d
0x78f JUMP
---
0x77a: JUMPDEST 
0x77b: V749 = 0x790
0x77e: V750 = CALLER
0x77f: V751 = 0x0
0x781: V752 = CALLDATALOAD 0x0
0x782: V753 = 0x1
0x784: V754 = 0xe0
0x786: V755 = 0x2
0x788: V756 = EXP 0x2 0xe0
0x789: V757 = SUB 0x100000000000000000000000000000000000000000000000000000000 0x1
0x78a: V758 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x78b: V759 = AND 0xffffffff00000000000000000000000000000000000000000000000000000000 V752
0x78c: V760 = 0x147d
0x78f: JUMP 0x147d
---
Entry stack: [V12, 0x29b]
Stack pops: 0
Stack additions: [0x790, V750, V759]
Exit stack: [V12, 0x29b, 0x790, V750, V759]

================================

Block 0x790
[0x790:0x796]
---
Predecessors: [0x919]
Successors: [0x797, 0x79b]
---
0x790 JUMPDEST
0x791 ISZERO
0x792 ISZERO
0x793 PUSH2 0x79b
0x796 JUMPI
---
0x790: JUMPDEST 
0x791: V761 = ISZERO S0
0x792: V762 = ISZERO V761
0x793: V763 = 0x79b
0x796: JUMPI 0x79b V762
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x797
[0x797:0x79a]
---
Predecessors: [0x790]
Successors: []
---
0x797 PUSH1 0x0
0x799 DUP1
0x79a REVERT
---
0x797: V764 = 0x0
0x79a: REVERT 0x0 0x0
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x79b
[0x79b:0x815]
---
Predecessors: [0x790]
Successors: [0x816]
---
0x79b JUMPDEST
0x79c PUSH1 0x4
0x79e CALLDATALOAD
0x79f PUSH1 0x24
0x7a1 CALLDATALOAD
0x7a2 DUP1
0x7a3 DUP3
0x7a4 CALLER
0x7a5 PUSH1 0x1
0x7a7 PUSH1 0xa0
0x7a9 PUSH1 0x2
0x7ab EXP
0x7ac SUB
0x7ad AND
0x7ae PUSH1 0x0
0x7b0 DUP1
0x7b1 CALLDATALOAD
0x7b2 PUSH1 0x1
0x7b4 PUSH1 0xe0
0x7b6 PUSH1 0x2
0x7b8 EXP
0x7b9 SUB
0x7ba NOT
0x7bb AND
0x7bc SWAP1
0x7bd CALLVALUE
0x7be SWAP1
0x7bf CALLDATASIZE
0x7c0 PUSH1 0x40
0x7c2 MLOAD
0x7c3 DUP4
0x7c4 DUP2
0x7c5 MSTORE
0x7c6 PUSH1 0x40
0x7c8 PUSH1 0x20
0x7ca DUP3
0x7cb ADD
0x7cc DUP2
0x7cd DUP2
0x7ce MSTORE
0x7cf SWAP1
0x7d0 DUP3
0x7d1 ADD
0x7d2 DUP4
0x7d3 SWAP1
0x7d4 MSTORE
0x7d5 PUSH1 0x60
0x7d7 DUP3
0x7d8 ADD
0x7d9 DUP5
0x7da DUP5
0x7db DUP1
0x7dc DUP3
0x7dd DUP5
0x7de CALLDATACOPY
0x7df DUP3
0x7e0 ADD
0x7e1 SWAP2
0x7e2 POP
0x7e3 POP
0x7e4 SWAP5
0x7e5 POP
0x7e6 POP
0x7e7 POP
0x7e8 POP
0x7e9 POP
0x7ea PUSH1 0x40
0x7ec MLOAD
0x7ed DUP1
0x7ee SWAP2
0x7ef SUB
0x7f0 SWAP1
0x7f1 LOG4
0x7f2 PUSH1 0x1
0x7f4 DUP1
0x7f5 SLOAD
0x7f6 PUSH21 0xff0000000000000000000000000000000000000000
0x80c NOT
0x80d AND
0x80e PUSH1 0xa0
0x810 PUSH1 0x2
0x812 EXP
0x813 OR
0x814 SWAP1
0x815 SSTORE
---
0x79b: JUMPDEST 
0x79c: V765 = 0x4
0x79e: V766 = CALLDATALOAD 0x4
0x79f: V767 = 0x24
0x7a1: V768 = CALLDATALOAD 0x24
0x7a4: V769 = CALLER
0x7a5: V770 = 0x1
0x7a7: V771 = 0xa0
0x7a9: V772 = 0x2
0x7ab: V773 = EXP 0x2 0xa0
0x7ac: V774 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7ad: V775 = AND 0xffffffffffffffffffffffffffffffffffffffff V769
0x7ae: V776 = 0x0
0x7b1: V777 = CALLDATALOAD 0x0
0x7b2: V778 = 0x1
0x7b4: V779 = 0xe0
0x7b6: V780 = 0x2
0x7b8: V781 = EXP 0x2 0xe0
0x7b9: V782 = SUB 0x100000000000000000000000000000000000000000000000000000000 0x1
0x7ba: V783 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x7bb: V784 = AND 0xffffffff00000000000000000000000000000000000000000000000000000000 V777
0x7bd: V785 = CALLVALUE
0x7bf: V786 = CALLDATASIZE
0x7c0: V787 = 0x40
0x7c2: V788 = M[0x40]
0x7c5: M[V788] = V785
0x7c6: V789 = 0x40
0x7c8: V790 = 0x20
0x7cb: V791 = ADD V788 0x20
0x7ce: M[V791] = 0x40
0x7d1: V792 = ADD V788 0x40
0x7d4: M[V792] = V786
0x7d5: V793 = 0x60
0x7d8: V794 = ADD V788 0x60
0x7de: CALLDATACOPY V794 0x0 V786
0x7e0: V795 = ADD V794 V786
0x7ea: V796 = 0x40
0x7ec: V797 = M[0x40]
0x7ef: V798 = SUB V795 V797
0x7f1: LOG V797 V798 V784 V775 V766 V768
0x7f2: V799 = 0x1
0x7f5: V800 = S[0x1]
0x7f6: V801 = 0xff0000000000000000000000000000000000000000
0x80c: V802 = NOT 0xff0000000000000000000000000000000000000000
0x80d: V803 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V800
0x80e: V804 = 0xa0
0x810: V805 = 0x2
0x812: V806 = EXP 0x2 0xa0
0x813: V807 = OR 0x10000000000000000000000000000000000000000 V803
0x815: S[0x1] = V807
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [V766, V768]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0, V766, V768]

================================

Block 0x816
[0x816:0x816]
---
Predecessors: [0x79b, 0x81a, 0x994, 0xb6b, 0xe09, 0xfc6, 0x10fe, 0x12e0, 0x13f1, 0x165e, 0x16dc]
Successors: [0x817]
---
0x816 JUMPDEST
---
0x816: JUMPDEST 
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x817
[0x817:0x819]
---
Predecessors: [0x816]
Successors: [0x81a]
---
0x817 JUMPDEST
0x818 POP
0x819 POP
---
0x817: JUMPDEST 
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x81a
[0x81a:0x81b]
---
Predecessors: [0x817]
Successors: [0x29b, 0x2bf, 0x816]
---
0x81a JUMPDEST
0x81b JUMP
---
0x81a: JUMPDEST 
0x81b: JUMP S0
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x81c
[0x81c:0x831]
---
Predecessors: [0x2a8]
Successors: [0x832, 0x836]
---
0x81c JUMPDEST
0x81d PUSH1 0x1
0x81f SLOAD
0x820 PUSH1 0x0
0x822 SWAP1
0x823 PUSH1 0xa0
0x825 PUSH1 0x2
0x827 EXP
0x828 SWAP1
0x829 DIV
0x82a PUSH1 0xff
0x82c AND
0x82d ISZERO
0x82e PUSH2 0x836
0x831 JUMPI
---
0x81c: JUMPDEST 
0x81d: V808 = 0x1
0x81f: V809 = S[0x1]
0x820: V810 = 0x0
0x823: V811 = 0xa0
0x825: V812 = 0x2
0x827: V813 = EXP 0x2 0xa0
0x829: V814 = DIV V809 0x10000000000000000000000000000000000000000
0x82a: V815 = 0xff
0x82c: V816 = AND 0xff V814
0x82d: V817 = ISZERO V816
0x82e: V818 = 0x836
0x831: JUMPI 0x836 V817
---
Entry stack: [V12, 0x2bf, V243, V245]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x2bf, V243, V245, 0x0]

================================

Block 0x832
[0x832:0x835]
---
Predecessors: [0x81c]
Successors: []
---
0x832 PUSH1 0x0
0x834 DUP1
0x835 REVERT
---
0x832: V819 = 0x0
0x835: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2bf, V243, V245, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2bf, V243, V245, 0x0]

================================

Block 0x836
[0x836:0x8f3]
---
Predecessors: [0x81c]
Successors: [0x8f4, 0x8f8]
---
0x836 JUMPDEST
0x837 PUSH1 0x4
0x839 CALLDATALOAD
0x83a PUSH1 0x24
0x83c CALLDATALOAD
0x83d DUP1
0x83e DUP3
0x83f CALLER
0x840 PUSH1 0x1
0x842 PUSH1 0xa0
0x844 PUSH1 0x2
0x846 EXP
0x847 SUB
0x848 AND
0x849 PUSH1 0x0
0x84b DUP1
0x84c CALLDATALOAD
0x84d PUSH1 0x1
0x84f PUSH1 0xe0
0x851 PUSH1 0x2
0x853 EXP
0x854 SUB
0x855 NOT
0x856 AND
0x857 SWAP1
0x858 CALLVALUE
0x859 SWAP1
0x85a CALLDATASIZE
0x85b PUSH1 0x40
0x85d MLOAD
0x85e DUP4
0x85f DUP2
0x860 MSTORE
0x861 PUSH1 0x40
0x863 PUSH1 0x20
0x865 DUP3
0x866 ADD
0x867 DUP2
0x868 DUP2
0x869 MSTORE
0x86a SWAP1
0x86b DUP3
0x86c ADD
0x86d DUP4
0x86e SWAP1
0x86f MSTORE
0x870 PUSH1 0x60
0x872 DUP3
0x873 ADD
0x874 DUP5
0x875 DUP5
0x876 DUP1
0x877 DUP3
0x878 DUP5
0x879 CALLDATACOPY
0x87a DUP3
0x87b ADD
0x87c SWAP2
0x87d POP
0x87e POP
0x87f SWAP5
0x880 POP
0x881 POP
0x882 POP
0x883 POP
0x884 POP
0x885 PUSH1 0x40
0x887 MLOAD
0x888 DUP1
0x889 SWAP2
0x88a SUB
0x88b SWAP1
0x88c LOG4
0x88d PUSH1 0x5
0x88f SLOAD
0x890 PUSH1 0x1
0x892 PUSH1 0xa0
0x894 PUSH1 0x2
0x896 EXP
0x897 SUB
0x898 AND
0x899 PUSH4 0xe1f21c67
0x89e CALLER
0x89f DUP8
0x8a0 DUP8
0x8a1 PUSH1 0x0
0x8a3 PUSH1 0x40
0x8a5 MLOAD
0x8a6 PUSH1 0x20
0x8a8 ADD
0x8a9 MSTORE
0x8aa PUSH1 0x40
0x8ac MLOAD
0x8ad PUSH1 0xe0
0x8af PUSH1 0x2
0x8b1 EXP
0x8b2 PUSH4 0xffffffff
0x8b7 DUP7
0x8b8 AND
0x8b9 MUL
0x8ba DUP2
0x8bb MSTORE
0x8bc PUSH1 0x1
0x8be PUSH1 0xa0
0x8c0 PUSH1 0x2
0x8c2 EXP
0x8c3 SUB
0x8c4 SWAP4
0x8c5 DUP5
0x8c6 AND
0x8c7 PUSH1 0x4
0x8c9 DUP3
0x8ca ADD
0x8cb MSTORE
0x8cc SWAP2
0x8cd SWAP1
0x8ce SWAP3
0x8cf AND
0x8d0 PUSH1 0x24
0x8d2 DUP3
0x8d3 ADD
0x8d4 MSTORE
0x8d5 PUSH1 0x44
0x8d7 DUP2
0x8d8 ADD
0x8d9 SWAP2
0x8da SWAP1
0x8db SWAP2
0x8dc MSTORE
0x8dd PUSH1 0x64
0x8df ADD
0x8e0 PUSH1 0x20
0x8e2 PUSH1 0x40
0x8e4 MLOAD
0x8e5 DUP1
0x8e6 DUP4
0x8e7 SUB
0x8e8 DUP2
0x8e9 PUSH1 0x0
0x8eb DUP8
0x8ec DUP1
0x8ed EXTCODESIZE
0x8ee ISZERO
0x8ef ISZERO
0x8f0 PUSH2 0x8f8
0x8f3 JUMPI
---
0x836: JUMPDEST 
0x837: V820 = 0x4
0x839: V821 = CALLDATALOAD 0x4
0x83a: V822 = 0x24
0x83c: V823 = CALLDATALOAD 0x24
0x83f: V824 = CALLER
0x840: V825 = 0x1
0x842: V826 = 0xa0
0x844: V827 = 0x2
0x846: V828 = EXP 0x2 0xa0
0x847: V829 = SUB 0x10000000000000000000000000000000000000000 0x1
0x848: V830 = AND 0xffffffffffffffffffffffffffffffffffffffff V824
0x849: V831 = 0x0
0x84c: V832 = CALLDATALOAD 0x0
0x84d: V833 = 0x1
0x84f: V834 = 0xe0
0x851: V835 = 0x2
0x853: V836 = EXP 0x2 0xe0
0x854: V837 = SUB 0x100000000000000000000000000000000000000000000000000000000 0x1
0x855: V838 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x856: V839 = AND 0xffffffff00000000000000000000000000000000000000000000000000000000 V832
0x858: V840 = CALLVALUE
0x85a: V841 = CALLDATASIZE
0x85b: V842 = 0x40
0x85d: V843 = M[0x40]
0x860: M[V843] = V840
0x861: V844 = 0x40
0x863: V845 = 0x20
0x866: V846 = ADD V843 0x20
0x869: M[V846] = 0x40
0x86c: V847 = ADD V843 0x40
0x86f: M[V847] = V841
0x870: V848 = 0x60
0x873: V849 = ADD V843 0x60
0x879: CALLDATACOPY V849 0x0 V841
0x87b: V850 = ADD V849 V841
0x885: V851 = 0x40
0x887: V852 = M[0x40]
0x88a: V853 = SUB V850 V852
0x88c: LOG V852 V853 V839 V830 V821 V823
0x88d: V854 = 0x5
0x88f: V855 = S[0x5]
0x890: V856 = 0x1
0x892: V857 = 0xa0
0x894: V858 = 0x2
0x896: V859 = EXP 0x2 0xa0
0x897: V860 = SUB 0x10000000000000000000000000000000000000000 0x1
0x898: V861 = AND 0xffffffffffffffffffffffffffffffffffffffff V855
0x899: V862 = 0xe1f21c67
0x89e: V863 = CALLER
0x8a1: V864 = 0x0
0x8a3: V865 = 0x40
0x8a5: V866 = M[0x40]
0x8a6: V867 = 0x20
0x8a8: V868 = ADD 0x20 V866
0x8a9: M[V868] = 0x0
0x8aa: V869 = 0x40
0x8ac: V870 = M[0x40]
0x8ad: V871 = 0xe0
0x8af: V872 = 0x2
0x8b1: V873 = EXP 0x2 0xe0
0x8b2: V874 = 0xffffffff
0x8b8: V875 = AND 0xe1f21c67 0xffffffff
0x8b9: V876 = MUL 0xe1f21c67 0x100000000000000000000000000000000000000000000000000000000
0x8bb: M[V870] = 0xe1f21c6700000000000000000000000000000000000000000000000000000000
0x8bc: V877 = 0x1
0x8be: V878 = 0xa0
0x8c0: V879 = 0x2
0x8c2: V880 = EXP 0x2 0xa0
0x8c3: V881 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8c6: V882 = AND 0xffffffffffffffffffffffffffffffffffffffff V863
0x8c7: V883 = 0x4
0x8ca: V884 = ADD V870 0x4
0x8cb: M[V884] = V882
0x8cf: V885 = AND 0xffffffffffffffffffffffffffffffffffffffff V243
0x8d0: V886 = 0x24
0x8d3: V887 = ADD V870 0x24
0x8d4: M[V887] = V885
0x8d5: V888 = 0x44
0x8d8: V889 = ADD V870 0x44
0x8dc: M[V889] = V245
0x8dd: V890 = 0x64
0x8df: V891 = ADD 0x64 V870
0x8e0: V892 = 0x20
0x8e2: V893 = 0x40
0x8e4: V894 = M[0x40]
0x8e7: V895 = SUB V891 V894
0x8e9: V896 = 0x0
0x8ed: V897 = EXTCODESIZE V861
0x8ee: V898 = ISZERO V897
0x8ef: V899 = ISZERO V898
0x8f0: V900 = 0x8f8
0x8f3: JUMPI 0x8f8 V899
---
Entry stack: [V12, 0x2bf, V243, V245, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V821, V823, V861, 0xe1f21c67, V891, 0x20, V894, V895, V894, 0x0, V861]
Exit stack: [V12, 0x2bf, V243, V245, 0x0, V821, V823, V861, 0xe1f21c67, V891, 0x20, V894, V895, V894, 0x0, V861]

================================

Block 0x8f4
[0x8f4:0x8f7]
---
Predecessors: [0x836]
Successors: []
---
0x8f4 PUSH1 0x0
0x8f6 DUP1
0x8f7 REVERT
---
0x8f4: V901 = 0x0
0x8f7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2bf, V243, V245, 0x0, V821, V823, V861, 0xe1f21c67, V891, 0x20, V894, V895, V894, 0x0, V861]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2bf, V243, V245, 0x0, V821, V823, V861, 0xe1f21c67, V891, 0x20, V894, V895, V894, 0x0, V861]

================================

Block 0x8f8
[0x8f8:0x904]
---
Predecessors: [0x836]
Successors: [0x905, 0x909]
---
0x8f8 JUMPDEST
0x8f9 PUSH2 0x2c6
0x8fc GAS
0x8fd SUB
0x8fe CALL
0x8ff ISZERO
0x900 ISZERO
0x901 PUSH2 0x909
0x904 JUMPI
---
0x8f8: JUMPDEST 
0x8f9: V902 = 0x2c6
0x8fc: V903 = GAS
0x8fd: V904 = SUB V903 0x2c6
0x8fe: V905 = CALL V904 V861 0x0 V894 V895 V894 0x20
0x8ff: V906 = ISZERO V905
0x900: V907 = ISZERO V906
0x901: V908 = 0x909
0x904: JUMPI 0x909 V907
---
Entry stack: [V12, 0x2bf, V243, V245, 0x0, V821, V823, V861, 0xe1f21c67, V891, 0x20, V894, V895, V894, 0x0, V861]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x2bf, V243, V245, 0x0, V821, V823, V861, 0xe1f21c67, V891]

================================

Block 0x905
[0x905:0x908]
---
Predecessors: [0x8f8]
Successors: []
---
0x905 PUSH1 0x0
0x907 DUP1
0x908 REVERT
---
0x905: V909 = 0x0
0x908: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2bf, V243, V245, 0x0, V821, V823, V861, 0xe1f21c67, V891]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2bf, V243, V245, 0x0, V821, V823, V861, 0xe1f21c67, V891]

================================

Block 0x909
[0x909:0x914]
---
Predecessors: [0x8f8]
Successors: [0x915]
---
0x909 JUMPDEST
0x90a POP
0x90b POP
0x90c POP
0x90d PUSH1 0x40
0x90f MLOAD
0x910 DUP1
0x911 MLOAD
0x912 SWAP4
0x913 POP
0x914 POP
---
0x909: JUMPDEST 
0x90d: V910 = 0x40
0x90f: V911 = M[0x40]
0x911: V912 = M[V911]
---
Entry stack: [V12, 0x2bf, V243, V245, 0x0, V821, V823, V861, 0xe1f21c67, V891]
Stack pops: 6
Stack additions: [V912, S4, S3]
Exit stack: [V12, 0x2bf, V243, V245, V912, V821, V823]

================================

Block 0x915
[0x915:0x915]
---
Predecessors: [0x909]
Successors: [0x916]
---
0x915 JUMPDEST
---
0x915: JUMPDEST 
---
Entry stack: [V12, 0x2bf, V243, V245, V912, V821, V823]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2bf, V243, V245, V912, V821, V823]

================================

Block 0x916
[0x916:0x918]
---
Predecessors: [0x915]
Successors: [0x919]
---
0x916 JUMPDEST
0x917 POP
0x918 POP
---
0x916: JUMPDEST 
---
Entry stack: [V12, 0x2bf, V243, V245, V912, V821, V823]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x2bf, V243, V245, V912]

================================

Block 0x919
[0x919:0x91e]
---
Predecessors: [0x916, 0x149a, 0x14cd, 0x14e7, 0x15c6]
Successors: [0x2bf, 0x790, 0x935, 0x9af, 0xce8, 0xea1, 0xf5e, 0x100d, 0x125c, 0x1307, 0x15f6]
---
0x919 JUMPDEST
0x91a SWAP3
0x91b SWAP2
0x91c POP
0x91d POP
0x91e JUMP
---
0x919: JUMPDEST 
0x91e: JUMP {0x2bf, 0x790, 0x935, 0x9af, 0xce8, 0xea1, 0xf5e, 0x100d, 0x125c, 0x1307, 0x15f6}
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x2bf, 0x790, 0x935, 0x9af, 0xce8, 0xea1, 0xf5e, 0x100d, 0x125c, 0x1307, 0x15f6}, S2, S1, S0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S0]

================================

Block 0x91f
[0x91f:0x934]
---
Predecessors: [0x2de]
Successors: [0x147d]
---
0x91f JUMPDEST
0x920 PUSH2 0x935
0x923 CALLER
0x924 PUSH1 0x0
0x926 CALLDATALOAD
0x927 PUSH1 0x1
0x929 PUSH1 0xe0
0x92b PUSH1 0x2
0x92d EXP
0x92e SUB
0x92f NOT
0x930 AND
0x931 PUSH2 0x147d
0x934 JUMP
---
0x91f: JUMPDEST 
0x920: V913 = 0x935
0x923: V914 = CALLER
0x924: V915 = 0x0
0x926: V916 = CALLDATALOAD 0x0
0x927: V917 = 0x1
0x929: V918 = 0xe0
0x92b: V919 = 0x2
0x92d: V920 = EXP 0x2 0xe0
0x92e: V921 = SUB 0x100000000000000000000000000000000000000000000000000000000 0x1
0x92f: V922 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x930: V923 = AND 0xffffffff00000000000000000000000000000000000000000000000000000000 V916
0x931: V924 = 0x147d
0x934: JUMP 0x147d
---
Entry stack: [V12, 0x29b, V268]
Stack pops: 0
Stack additions: [0x935, V914, V923]
Exit stack: [V12, 0x29b, V268, 0x935, V914, V923]

================================

Block 0x935
[0x935:0x93b]
---
Predecessors: [0x919]
Successors: [0x93c, 0x940]
---
0x935 JUMPDEST
0x936 ISZERO
0x937 ISZERO
0x938 PUSH2 0x940
0x93b JUMPI
---
0x935: JUMPDEST 
0x936: V925 = ISZERO S0
0x937: V926 = ISZERO V925
0x938: V927 = 0x940
0x93b: JUMPI 0x940 V926
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x93c
[0x93c:0x93f]
---
Predecessors: [0x935]
Successors: []
---
0x93c PUSH1 0x0
0x93e DUP1
0x93f REVERT
---
0x93c: V928 = 0x0
0x93f: REVERT 0x0 0x0
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x940
[0x940:0x950]
---
Predecessors: [0x935]
Successors: [0x951, 0x955]
---
0x940 JUMPDEST
0x941 PUSH1 0x1
0x943 PUSH1 0xa0
0x945 PUSH1 0x2
0x947 EXP
0x948 SUB
0x949 DUP2
0x94a AND
0x94b ISZERO
0x94c ISZERO
0x94d PUSH2 0x955
0x950 JUMPI
---
0x940: JUMPDEST 
0x941: V929 = 0x1
0x943: V930 = 0xa0
0x945: V931 = 0x2
0x947: V932 = EXP 0x2 0xa0
0x948: V933 = SUB 0x10000000000000000000000000000000000000000 0x1
0x94a: V934 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x94b: V935 = ISZERO V934
0x94c: V936 = ISZERO V935
0x94d: V937 = 0x955
0x950: JUMPI 0x955 V936
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x951
[0x951:0x954]
---
Predecessors: [0x940]
Successors: []
---
0x951 PUSH1 0x0
0x953 DUP1
0x954 REVERT
---
0x951: V938 = 0x0
0x954: REVERT 0x0 0x0
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x955
[0x955:0x98d]
---
Predecessors: [0x940]
Successors: [0x98e, 0x992]
---
0x955 JUMPDEST
0x956 DUP1
0x957 PUSH1 0x1
0x959 PUSH1 0xa0
0x95b PUSH1 0x2
0x95d EXP
0x95e SUB
0x95f AND
0x960 PUSH2 0x8fc
0x963 ADDRESS
0x964 PUSH1 0x1
0x966 PUSH1 0xa0
0x968 PUSH1 0x2
0x96a EXP
0x96b SUB
0x96c AND
0x96d BALANCE
0x96e SWAP1
0x96f DUP2
0x970 ISZERO
0x971 MUL
0x972 SWAP1
0x973 PUSH1 0x40
0x975 MLOAD
0x976 PUSH1 0x0
0x978 PUSH1 0x40
0x97a MLOAD
0x97b DUP1
0x97c DUP4
0x97d SUB
0x97e DUP2
0x97f DUP6
0x980 DUP9
0x981 DUP9
0x982 CALL
0x983 SWAP4
0x984 POP
0x985 POP
0x986 POP
0x987 POP
0x988 ISZERO
0x989 ISZERO
0x98a PUSH2 0x992
0x98d JUMPI
---
0x955: JUMPDEST 
0x957: V939 = 0x1
0x959: V940 = 0xa0
0x95b: V941 = 0x2
0x95d: V942 = EXP 0x2 0xa0
0x95e: V943 = SUB 0x10000000000000000000000000000000000000000 0x1
0x95f: V944 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x960: V945 = 0x8fc
0x963: V946 = ADDRESS
0x964: V947 = 0x1
0x966: V948 = 0xa0
0x968: V949 = 0x2
0x96a: V950 = EXP 0x2 0xa0
0x96b: V951 = SUB 0x10000000000000000000000000000000000000000 0x1
0x96c: V952 = AND 0xffffffffffffffffffffffffffffffffffffffff V946
0x96d: V953 = BALANCE V952
0x970: V954 = ISZERO V953
0x971: V955 = MUL V954 0x8fc
0x973: V956 = 0x40
0x975: V957 = M[0x40]
0x976: V958 = 0x0
0x978: V959 = 0x40
0x97a: V960 = M[0x40]
0x97d: V961 = SUB V957 V960
0x982: V962 = CALL V955 V944 V953 V960 V961 V960 0x0
0x988: V963 = ISZERO V962
0x989: V964 = ISZERO V963
0x98a: V965 = 0x992
0x98d: JUMPI 0x992 V964
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x98e
[0x98e:0x991]
---
Predecessors: [0x955]
Successors: []
---
0x98e PUSH1 0x0
0x990 DUP1
0x991 REVERT
---
0x98e: V966 = 0x0
0x991: REVERT 0x0 0x0
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x992
[0x992:0x992]
---
Predecessors: [0x955]
Successors: [0x993]
---
0x992 JUMPDEST
---
0x992: JUMPDEST 
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x993
[0x993:0x993]
---
Predecessors: [0x992]
Successors: [0x994]
---
0x993 JUMPDEST
---
0x993: JUMPDEST 
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x994
[0x994:0x996]
---
Predecessors: [0x993]
Successors: [0x29b, 0x816]
---
0x994 JUMPDEST
0x995 POP
0x996 JUMP
---
0x994: JUMPDEST 
0x996: JUMP S1
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x997
[0x997:0x9ae]
---
Predecessors: [0x2ff]
Successors: [0x147d]
---
0x997 JUMPDEST
0x998 PUSH1 0x0
0x99a PUSH2 0x9af
0x99d CALLER
0x99e PUSH1 0x0
0x9a0 CALLDATALOAD
0x9a1 PUSH1 0x1
0x9a3 PUSH1 0xe0
0x9a5 PUSH1 0x2
0x9a7 EXP
0x9a8 SUB
0x9a9 NOT
0x9aa AND
0x9ab PUSH2 0x147d
0x9ae JUMP
---
0x997: JUMPDEST 
0x998: V967 = 0x0
0x99a: V968 = 0x9af
0x99d: V969 = CALLER
0x99e: V970 = 0x0
0x9a0: V971 = CALLDATALOAD 0x0
0x9a1: V972 = 0x1
0x9a3: V973 = 0xe0
0x9a5: V974 = 0x2
0x9a7: V975 = EXP 0x2 0xe0
0x9a8: V976 = SUB 0x100000000000000000000000000000000000000000000000000000000 0x1
0x9a9: V977 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x9aa: V978 = AND 0xffffffff00000000000000000000000000000000000000000000000000000000 V971
0x9ab: V979 = 0x147d
0x9ae: JUMP 0x147d
---
Entry stack: [V12, 0x29b, V282]
Stack pops: 0
Stack additions: [0x0, 0x9af, V969, V978]
Exit stack: [V12, 0x29b, V282, 0x0, 0x9af, V969, V978]

================================

Block 0x9af
[0x9af:0x9b5]
---
Predecessors: [0x919]
Successors: [0x9b6, 0x9ba]
---
0x9af JUMPDEST
0x9b0 ISZERO
0x9b1 ISZERO
0x9b2 PUSH2 0x9ba
0x9b5 JUMPI
---
0x9af: JUMPDEST 
0x9b0: V980 = ISZERO S0
0x9b1: V981 = ISZERO V980
0x9b2: V982 = 0x9ba
0x9b5: JUMPI 0x9ba V981
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x9b6
[0x9b6:0x9b9]
---
Predecessors: [0x9af]
Successors: []
---
0x9b6 PUSH1 0x0
0x9b8 DUP1
0x9b9 REVERT
---
0x9b6: V983 = 0x0
0x9b9: REVERT 0x0 0x0
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x9ba
[0x9ba:0x9ce]
---
Predecessors: [0x9af]
Successors: [0xe0c]
---
0x9ba JUMPDEST
0x9bb PUSH1 0x1
0x9bd SLOAD
0x9be PUSH2 0x9cf
0x9c1 SWAP1
0x9c2 PUSH1 0x1
0x9c4 PUSH1 0xa0
0x9c6 PUSH1 0x2
0x9c8 EXP
0x9c9 SUB
0x9ca AND
0x9cb PUSH2 0xe0c
0x9ce JUMP
---
0x9ba: JUMPDEST 
0x9bb: V984 = 0x1
0x9bd: V985 = S[0x1]
0x9be: V986 = 0x9cf
0x9c2: V987 = 0x1
0x9c4: V988 = 0xa0
0x9c6: V989 = 0x2
0x9c8: V990 = EXP 0x2 0xa0
0x9c9: V991 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9ca: V992 = AND 0xffffffffffffffffffffffffffffffffffffffff V985
0x9cb: V993 = 0xe0c
0x9ce: JUMP 0xe0c
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x9cf, V992]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x9cf, V992]

================================

Block 0x9cf
[0x9cf:0xa40]
---
Predecessors: [0xe84]
Successors: [0xa41, 0xa45]
---
0x9cf JUMPDEST
0x9d0 PUSH1 0x5
0x9d2 SLOAD
0x9d3 PUSH1 0x1
0x9d5 SLOAD
0x9d6 SWAP2
0x9d7 SWAP3
0x9d8 POP
0x9d9 PUSH1 0x1
0x9db PUSH1 0xa0
0x9dd PUSH1 0x2
0x9df EXP
0x9e0 SUB
0x9e1 SWAP1
0x9e2 DUP2
0x9e3 AND
0x9e4 SWAP2
0x9e5 PUSH4 0xbeabacc8
0x9ea SWAP2
0x9eb AND
0x9ec DUP5
0x9ed DUP5
0x9ee PUSH1 0x0
0x9f0 PUSH1 0x40
0x9f2 MLOAD
0x9f3 PUSH1 0x20
0x9f5 ADD
0x9f6 MSTORE
0x9f7 PUSH1 0x40
0x9f9 MLOAD
0x9fa PUSH1 0xe0
0x9fc PUSH1 0x2
0x9fe EXP
0x9ff PUSH4 0xffffffff
0xa04 DUP7
0xa05 AND
0xa06 MUL
0xa07 DUP2
0xa08 MSTORE
0xa09 PUSH1 0x1
0xa0b PUSH1 0xa0
0xa0d PUSH1 0x2
0xa0f EXP
0xa10 SUB
0xa11 SWAP4
0xa12 DUP5
0xa13 AND
0xa14 PUSH1 0x4
0xa16 DUP3
0xa17 ADD
0xa18 MSTORE
0xa19 SWAP2
0xa1a SWAP1
0xa1b SWAP3
0xa1c AND
0xa1d PUSH1 0x24
0xa1f DUP3
0xa20 ADD
0xa21 MSTORE
0xa22 PUSH1 0x44
0xa24 DUP2
0xa25 ADD
0xa26 SWAP2
0xa27 SWAP1
0xa28 SWAP2
0xa29 MSTORE
0xa2a PUSH1 0x64
0xa2c ADD
0xa2d PUSH1 0x20
0xa2f PUSH1 0x40
0xa31 MLOAD
0xa32 DUP1
0xa33 DUP4
0xa34 SUB
0xa35 DUP2
0xa36 PUSH1 0x0
0xa38 DUP8
0xa39 DUP1
0xa3a EXTCODESIZE
0xa3b ISZERO
0xa3c ISZERO
0xa3d PUSH2 0xa45
0xa40 JUMPI
---
0x9cf: JUMPDEST 
0x9d0: V994 = 0x5
0x9d2: V995 = S[0x5]
0x9d3: V996 = 0x1
0x9d5: V997 = S[0x1]
0x9d9: V998 = 0x1
0x9db: V999 = 0xa0
0x9dd: V1000 = 0x2
0x9df: V1001 = EXP 0x2 0xa0
0x9e0: V1002 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9e3: V1003 = AND 0xffffffffffffffffffffffffffffffffffffffff V995
0x9e5: V1004 = 0xbeabacc8
0x9eb: V1005 = AND 0xffffffffffffffffffffffffffffffffffffffff V997
0x9ee: V1006 = 0x0
0x9f0: V1007 = 0x40
0x9f2: V1008 = M[0x40]
0x9f3: V1009 = 0x20
0x9f5: V1010 = ADD 0x20 V1008
0x9f6: M[V1010] = 0x0
0x9f7: V1011 = 0x40
0x9f9: V1012 = M[0x40]
0x9fa: V1013 = 0xe0
0x9fc: V1014 = 0x2
0x9fe: V1015 = EXP 0x2 0xe0
0x9ff: V1016 = 0xffffffff
0xa05: V1017 = AND 0xbeabacc8 0xffffffff
0xa06: V1018 = MUL 0xbeabacc8 0x100000000000000000000000000000000000000000000000000000000
0xa08: M[V1012] = 0xbeabacc800000000000000000000000000000000000000000000000000000000
0xa09: V1019 = 0x1
0xa0b: V1020 = 0xa0
0xa0d: V1021 = 0x2
0xa0f: V1022 = EXP 0x2 0xa0
0xa10: V1023 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa13: V1024 = AND 0xffffffffffffffffffffffffffffffffffffffff V1005
0xa14: V1025 = 0x4
0xa17: V1026 = ADD V1012 0x4
0xa18: M[V1026] = V1024
0xa1c: V1027 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xa1d: V1028 = 0x24
0xa20: V1029 = ADD V1012 0x24
0xa21: M[V1029] = V1027
0xa22: V1030 = 0x44
0xa25: V1031 = ADD V1012 0x44
0xa29: M[V1031] = S0
0xa2a: V1032 = 0x64
0xa2c: V1033 = ADD 0x64 V1012
0xa2d: V1034 = 0x20
0xa2f: V1035 = 0x40
0xa31: V1036 = M[0x40]
0xa34: V1037 = SUB V1033 V1036
0xa36: V1038 = 0x0
0xa3a: V1039 = EXTCODESIZE V1003
0xa3b: V1040 = ISZERO V1039
0xa3c: V1041 = ISZERO V1040
0xa3d: V1042 = 0xa45
0xa40: JUMPI 0xa45 V1041
---
Entry stack: [V12, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S0, V1003, 0xbeabacc8, V1033, 0x20, V1036, V1037, V1036, 0x0, V1003]
Exit stack: [V12, S7, S6, S5, S4, S3, S2, S0, V1003, 0xbeabacc8, V1033, 0x20, V1036, V1037, V1036, 0x0, V1003]

================================

Block 0xa41
[0xa41:0xa44]
---
Predecessors: [0x9cf]
Successors: []
---
0xa41 PUSH1 0x0
0xa43 DUP1
0xa44 REVERT
---
0xa41: V1043 = 0x0
0xa44: REVERT 0x0 0x0
---
Entry stack: [V12, S15, S14, S13, S12, S11, S10, S9, V1003, 0xbeabacc8, V1033, 0x20, V1036, V1037, V1036, 0x0, V1003]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S15, S14, S13, S12, S11, S10, S9, V1003, 0xbeabacc8, V1033, 0x20, V1036, V1037, V1036, 0x0, V1003]

================================

Block 0xa45
[0xa45:0xa51]
---
Predecessors: [0x9cf]
Successors: [0xa52, 0xa56]
---
0xa45 JUMPDEST
0xa46 PUSH2 0x2c6
0xa49 GAS
0xa4a SUB
0xa4b CALL
0xa4c ISZERO
0xa4d ISZERO
0xa4e PUSH2 0xa56
0xa51 JUMPI
---
0xa45: JUMPDEST 
0xa46: V1044 = 0x2c6
0xa49: V1045 = GAS
0xa4a: V1046 = SUB V1045 0x2c6
0xa4b: V1047 = CALL V1046 V1003 0x0 V1036 V1037 V1036 0x20
0xa4c: V1048 = ISZERO V1047
0xa4d: V1049 = ISZERO V1048
0xa4e: V1050 = 0xa56
0xa51: JUMPI 0xa56 V1049
---
Entry stack: [V12, S15, S14, S13, S12, S11, S10, S9, V1003, 0xbeabacc8, V1033, 0x20, V1036, V1037, V1036, 0x0, V1003]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S15, S14, S13, S12, S11, S10, S9, V1003, 0xbeabacc8, V1033]

================================

Block 0xa52
[0xa52:0xa55]
---
Predecessors: [0xa45]
Successors: []
---
0xa52 PUSH1 0x0
0xa54 DUP1
0xa55 REVERT
---
0xa52: V1051 = 0x0
0xa55: REVERT 0x0 0x0
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, V1003, 0xbeabacc8, V1033]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, V1003, 0xbeabacc8, V1033]

================================

Block 0xa56
[0xa56:0xadc]
---
Predecessors: [0xa45]
Successors: [0xadd, 0xae1]
---
0xa56 JUMPDEST
0xa57 POP
0xa58 POP
0xa59 POP
0xa5a PUSH1 0x40
0xa5c MLOAD
0xa5d DUP1
0xa5e MLOAD
0xa5f POP
0xa60 POP
0xa61 PUSH1 0x1
0xa63 SLOAD
0xa64 PUSH1 0x1
0xa66 PUSH1 0xa0
0xa68 PUSH1 0x2
0xa6a EXP
0xa6b SUB
0xa6c DUP1
0xa6d DUP5
0xa6e AND
0xa6f SWAP2
0xa70 AND
0xa71 PUSH1 0x0
0xa73 DUP1
0xa74 MLOAD
0xa75 PUSH1 0x20
0xa77 PUSH2 0x1702
0xa7a DUP4
0xa7b CODECOPY
0xa7c DUP2
0xa7d MLOAD
0xa7e SWAP2
0xa7f MSTORE
0xa80 DUP4
0xa81 PUSH1 0x40
0xa83 MLOAD
0xa84 SWAP1
0xa85 DUP2
0xa86 MSTORE
0xa87 PUSH1 0x20
0xa89 ADD
0xa8a PUSH1 0x40
0xa8c MLOAD
0xa8d DUP1
0xa8e SWAP2
0xa8f SUB
0xa90 SWAP1
0xa91 LOG3
0xa92 PUSH1 0x5
0xa94 SLOAD
0xa95 PUSH1 0x1
0xa97 PUSH1 0xa0
0xa99 PUSH1 0x2
0xa9b EXP
0xa9c SUB
0xa9d AND
0xa9e PUSH4 0x13af4035
0xaa3 DUP4
0xaa4 PUSH1 0x40
0xaa6 MLOAD
0xaa7 PUSH1 0xe0
0xaa9 PUSH1 0x2
0xaab EXP
0xaac PUSH4 0xffffffff
0xab1 DUP5
0xab2 AND
0xab3 MUL
0xab4 DUP2
0xab5 MSTORE
0xab6 PUSH1 0x1
0xab8 PUSH1 0xa0
0xaba PUSH1 0x2
0xabc EXP
0xabd SUB
0xabe SWAP1
0xabf SWAP2
0xac0 AND
0xac1 PUSH1 0x4
0xac3 DUP3
0xac4 ADD
0xac5 MSTORE
0xac6 PUSH1 0x24
0xac8 ADD
0xac9 PUSH1 0x0
0xacb PUSH1 0x40
0xacd MLOAD
0xace DUP1
0xacf DUP4
0xad0 SUB
0xad1 DUP2
0xad2 PUSH1 0x0
0xad4 DUP8
0xad5 DUP1
0xad6 EXTCODESIZE
0xad7 ISZERO
0xad8 ISZERO
0xad9 PUSH2 0xae1
0xadc JUMPI
---
0xa56: JUMPDEST 
0xa5a: V1052 = 0x40
0xa5c: V1053 = M[0x40]
0xa5e: V1054 = M[V1053]
0xa61: V1055 = 0x1
0xa63: V1056 = S[0x1]
0xa64: V1057 = 0x1
0xa66: V1058 = 0xa0
0xa68: V1059 = 0x2
0xa6a: V1060 = EXP 0x2 0xa0
0xa6b: V1061 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa6e: V1062 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0xa70: V1063 = AND V1056 0xffffffffffffffffffffffffffffffffffffffff
0xa71: V1064 = 0x0
0xa74: V1065 = M[0x0]
0xa75: V1066 = 0x20
0xa77: V1067 = 0x1702
0xa7b: CODECOPY 0x0 0x1702 0x20
0xa7d: V1068 = M[0x0]
0xa7f: M[0x0] = V1065
0xa81: V1069 = 0x40
0xa83: V1070 = M[0x40]
0xa86: M[V1070] = S3
0xa87: V1071 = 0x20
0xa89: V1072 = ADD 0x20 V1070
0xa8a: V1073 = 0x40
0xa8c: V1074 = M[0x40]
0xa8f: V1075 = SUB V1072 V1074
0xa91: LOG V1074 V1075 V1068 V1063 V1062
0xa92: V1076 = 0x5
0xa94: V1077 = S[0x5]
0xa95: V1078 = 0x1
0xa97: V1079 = 0xa0
0xa99: V1080 = 0x2
0xa9b: V1081 = EXP 0x2 0xa0
0xa9c: V1082 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa9d: V1083 = AND 0xffffffffffffffffffffffffffffffffffffffff V1077
0xa9e: V1084 = 0x13af4035
0xaa4: V1085 = 0x40
0xaa6: V1086 = M[0x40]
0xaa7: V1087 = 0xe0
0xaa9: V1088 = 0x2
0xaab: V1089 = EXP 0x2 0xe0
0xaac: V1090 = 0xffffffff
0xab2: V1091 = AND 0x13af4035 0xffffffff
0xab3: V1092 = MUL 0x13af4035 0x100000000000000000000000000000000000000000000000000000000
0xab5: M[V1086] = 0x13af403500000000000000000000000000000000000000000000000000000000
0xab6: V1093 = 0x1
0xab8: V1094 = 0xa0
0xaba: V1095 = 0x2
0xabc: V1096 = EXP 0x2 0xa0
0xabd: V1097 = SUB 0x10000000000000000000000000000000000000000 0x1
0xac0: V1098 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0xac1: V1099 = 0x4
0xac4: V1100 = ADD V1086 0x4
0xac5: M[V1100] = V1098
0xac6: V1101 = 0x24
0xac8: V1102 = ADD 0x24 V1086
0xac9: V1103 = 0x0
0xacb: V1104 = 0x40
0xacd: V1105 = M[0x40]
0xad0: V1106 = SUB V1102 V1105
0xad2: V1107 = 0x0
0xad6: V1108 = EXTCODESIZE V1083
0xad7: V1109 = ISZERO V1108
0xad8: V1110 = ISZERO V1109
0xad9: V1111 = 0xae1
0xadc: JUMPI 0xae1 V1110
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, V1003, 0xbeabacc8, V1033]
Stack pops: 5
Stack additions: [S4, S3, V1083, 0x13af4035, V1102, 0x0, V1105, V1106, V1105, 0x0, V1083]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, V1083, 0x13af4035, V1102, 0x0, V1105, V1106, V1105, 0x0, V1083]

================================

Block 0xadd
[0xadd:0xae0]
---
Predecessors: [0xa56]
Successors: []
---
0xadd PUSH1 0x0
0xadf DUP1
0xae0 REVERT
---
0xadd: V1112 = 0x0
0xae0: REVERT 0x0 0x0
---
Entry stack: [V12, S15, S14, S13, S12, S11, S10, S9, V1083, 0x13af4035, V1102, 0x0, V1105, V1106, V1105, 0x0, V1083]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S15, S14, S13, S12, S11, S10, S9, V1083, 0x13af4035, V1102, 0x0, V1105, V1106, V1105, 0x0, V1083]

================================

Block 0xae1
[0xae1:0xaed]
---
Predecessors: [0xa56]
Successors: [0xaee, 0xaf2]
---
0xae1 JUMPDEST
0xae2 PUSH2 0x2c6
0xae5 GAS
0xae6 SUB
0xae7 CALL
0xae8 ISZERO
0xae9 ISZERO
0xaea PUSH2 0xaf2
0xaed JUMPI
---
0xae1: JUMPDEST 
0xae2: V1113 = 0x2c6
0xae5: V1114 = GAS
0xae6: V1115 = SUB V1114 0x2c6
0xae7: V1116 = CALL V1115 V1083 0x0 V1105 V1106 V1105 0x0
0xae8: V1117 = ISZERO V1116
0xae9: V1118 = ISZERO V1117
0xaea: V1119 = 0xaf2
0xaed: JUMPI 0xaf2 V1118
---
Entry stack: [V12, S15, S14, S13, S12, S11, S10, S9, V1083, 0x13af4035, V1102, 0x0, V1105, V1106, V1105, 0x0, V1083]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S15, S14, S13, S12, S11, S10, S9, V1083, 0x13af4035, V1102]

================================

Block 0xaee
[0xaee:0xaf1]
---
Predecessors: [0xae1]
Successors: []
---
0xaee PUSH1 0x0
0xaf0 DUP1
0xaf1 REVERT
---
0xaee: V1120 = 0x0
0xaf1: REVERT 0x0 0x0
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, V1083, 0x13af4035, V1102]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, V1083, 0x13af4035, V1102]

================================

Block 0xaf2
[0xaf2:0xafd]
---
Predecessors: [0xae1]
Successors: [0x15e0]
---
0xaf2 JUMPDEST
0xaf3 POP
0xaf4 POP
0xaf5 POP
0xaf6 PUSH2 0x816
0xaf9 DUP3
0xafa PUSH2 0x15e0
0xafd JUMP
---
0xaf2: JUMPDEST 
0xaf6: V1121 = 0x816
0xafa: V1122 = 0x15e0
0xafd: JUMP 0x15e0
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, V1083, 0x13af4035, V1102]
Stack pops: 5
Stack additions: [S4, S3, 0x816, S4]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, 0x816, S4]

================================

Block 0xafe
[0xafe:0xafe]
---
Predecessors: []
Successors: [0xaff]
---
0xafe JUMPDEST
---
0xafe: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xaff
[0xaff:0xaff]
---
Predecessors: [0xafe]
Successors: [0xb00]
---
0xaff JUMPDEST
---
0xaff: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb00
[0xb00:0xb03]
---
Predecessors: [0xaff]
Successors: []
Has unresolved jump.
---
0xb00 JUMPDEST
0xb01 POP
0xb02 POP
0xb03 JUMP
---
0xb00: JUMPDEST 
0xb03: JUMP S2
---
Entry stack: []
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0xb04
[0xb04:0xb49]
---
Predecessors: [0x320]
Successors: [0xb4a, 0xb4e]
---
0xb04 JUMPDEST
0xb05 PUSH1 0x5
0xb07 SLOAD
0xb08 PUSH1 0x0
0xb0a SWAP1
0xb0b PUSH1 0x1
0xb0d PUSH1 0xa0
0xb0f PUSH1 0x2
0xb11 EXP
0xb12 SUB
0xb13 AND
0xb14 PUSH4 0x18160ddd
0xb19 DUP3
0xb1a PUSH1 0x40
0xb1c MLOAD
0xb1d PUSH1 0x20
0xb1f ADD
0xb20 MSTORE
0xb21 PUSH1 0x40
0xb23 MLOAD
0xb24 DUP2
0xb25 PUSH4 0xffffffff
0xb2a AND
0xb2b PUSH1 0xe0
0xb2d PUSH1 0x2
0xb2f EXP
0xb30 MUL
0xb31 DUP2
0xb32 MSTORE
0xb33 PUSH1 0x4
0xb35 ADD
0xb36 PUSH1 0x20
0xb38 PUSH1 0x40
0xb3a MLOAD
0xb3b DUP1
0xb3c DUP4
0xb3d SUB
0xb3e DUP2
0xb3f PUSH1 0x0
0xb41 DUP8
0xb42 DUP1
0xb43 EXTCODESIZE
0xb44 ISZERO
0xb45 ISZERO
0xb46 PUSH2 0xb4e
0xb49 JUMPI
---
0xb04: JUMPDEST 
0xb05: V1123 = 0x5
0xb07: V1124 = S[0x5]
0xb08: V1125 = 0x0
0xb0b: V1126 = 0x1
0xb0d: V1127 = 0xa0
0xb0f: V1128 = 0x2
0xb11: V1129 = EXP 0x2 0xa0
0xb12: V1130 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb13: V1131 = AND 0xffffffffffffffffffffffffffffffffffffffff V1124
0xb14: V1132 = 0x18160ddd
0xb1a: V1133 = 0x40
0xb1c: V1134 = M[0x40]
0xb1d: V1135 = 0x20
0xb1f: V1136 = ADD 0x20 V1134
0xb20: M[V1136] = 0x0
0xb21: V1137 = 0x40
0xb23: V1138 = M[0x40]
0xb25: V1139 = 0xffffffff
0xb2a: V1140 = AND 0xffffffff 0x18160ddd
0xb2b: V1141 = 0xe0
0xb2d: V1142 = 0x2
0xb2f: V1143 = EXP 0x2 0xe0
0xb30: V1144 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x18160ddd
0xb32: M[V1138] = 0x18160ddd00000000000000000000000000000000000000000000000000000000
0xb33: V1145 = 0x4
0xb35: V1146 = ADD 0x4 V1138
0xb36: V1147 = 0x20
0xb38: V1148 = 0x40
0xb3a: V1149 = M[0x40]
0xb3d: V1150 = SUB V1146 V1149
0xb3f: V1151 = 0x0
0xb43: V1152 = EXTCODESIZE V1131
0xb44: V1153 = ISZERO V1152
0xb45: V1154 = ISZERO V1153
0xb46: V1155 = 0xb4e
0xb49: JUMPI 0xb4e V1154
---
Entry stack: [V12, 0x328]
Stack pops: 0
Stack additions: [0x0, V1131, 0x18160ddd, V1146, 0x20, V1149, V1150, V1149, 0x0, V1131]
Exit stack: [V12, 0x328, 0x0, V1131, 0x18160ddd, V1146, 0x20, V1149, V1150, V1149, 0x0, V1131]

================================

Block 0xb4a
[0xb4a:0xb4d]
---
Predecessors: [0xb04]
Successors: []
---
0xb4a PUSH1 0x0
0xb4c DUP1
0xb4d REVERT
---
0xb4a: V1156 = 0x0
0xb4d: REVERT 0x0 0x0
---
Entry stack: [V12, 0x328, 0x0, V1131, 0x18160ddd, V1146, 0x20, V1149, V1150, V1149, 0x0, V1131]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x328, 0x0, V1131, 0x18160ddd, V1146, 0x20, V1149, V1150, V1149, 0x0, V1131]

================================

Block 0xb4e
[0xb4e:0xb5a]
---
Predecessors: [0xb04]
Successors: [0xb5b, 0xb5f]
---
0xb4e JUMPDEST
0xb4f PUSH2 0x2c6
0xb52 GAS
0xb53 SUB
0xb54 CALL
0xb55 ISZERO
0xb56 ISZERO
0xb57 PUSH2 0xb5f
0xb5a JUMPI
---
0xb4e: JUMPDEST 
0xb4f: V1157 = 0x2c6
0xb52: V1158 = GAS
0xb53: V1159 = SUB V1158 0x2c6
0xb54: V1160 = CALL V1159 V1131 0x0 V1149 V1150 V1149 0x20
0xb55: V1161 = ISZERO V1160
0xb56: V1162 = ISZERO V1161
0xb57: V1163 = 0xb5f
0xb5a: JUMPI 0xb5f V1162
---
Entry stack: [V12, 0x328, 0x0, V1131, 0x18160ddd, V1146, 0x20, V1149, V1150, V1149, 0x0, V1131]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x328, 0x0, V1131, 0x18160ddd, V1146]

================================

Block 0xb5b
[0xb5b:0xb5e]
---
Predecessors: [0xb4e]
Successors: []
---
0xb5b PUSH1 0x0
0xb5d DUP1
0xb5e REVERT
---
0xb5b: V1164 = 0x0
0xb5e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x328, 0x0, V1131, 0x18160ddd, V1146]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x328, 0x0, V1131, 0x18160ddd, V1146]

================================

Block 0xb5f
[0xb5f:0xb6a]
---
Predecessors: [0xb4e]
Successors: [0xb6b]
---
0xb5f JUMPDEST
0xb60 POP
0xb61 POP
0xb62 POP
0xb63 PUSH1 0x40
0xb65 MLOAD
0xb66 DUP1
0xb67 MLOAD
0xb68 SWAP2
0xb69 POP
0xb6a POP
---
0xb5f: JUMPDEST 
0xb63: V1165 = 0x40
0xb65: V1166 = M[0x40]
0xb67: V1167 = M[V1166]
---
Entry stack: [V12, 0x328, 0x0, V1131, 0x18160ddd, V1146]
Stack pops: 4
Stack additions: [V1167]
Exit stack: [V12, 0x328, V1167]

================================

Block 0xb6b
[0xb6b:0xb6d]
---
Predecessors: [0xb5f, 0x16dc]
Successors: [0x29b, 0x328, 0x816, 0x16dc]
---
0xb6b JUMPDEST
0xb6c SWAP1
0xb6d JUMP
---
0xb6b: JUMPDEST 
0xb6d: JUMP S1
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0]

================================

Block 0xb6e
[0xb6e:0xb85]
---
Predecessors: [0x345, 0xfc9]
Successors: [0xb86, 0xb8a]
---
0xb6e JUMPDEST
0xb6f PUSH1 0x1
0xb71 SLOAD
0xb72 PUSH1 0x0
0xb74 SWAP1
0xb75 DUP2
0xb76 SWAP1
0xb77 PUSH1 0xa0
0xb79 PUSH1 0x2
0xb7b EXP
0xb7c SWAP1
0xb7d DIV
0xb7e PUSH1 0xff
0xb80 AND
0xb81 ISZERO
0xb82 PUSH2 0xb8a
0xb85 JUMPI
---
0xb6e: JUMPDEST 
0xb6f: V1168 = 0x1
0xb71: V1169 = S[0x1]
0xb72: V1170 = 0x0
0xb77: V1171 = 0xa0
0xb79: V1172 = 0x2
0xb7b: V1173 = EXP 0x2 0xa0
0xb7d: V1174 = DIV V1169 0x10000000000000000000000000000000000000000
0xb7e: V1175 = 0xff
0xb80: V1176 = AND 0xff V1174
0xb81: V1177 = ISZERO V1176
0xb82: V1178 = 0xb8a
0xb85: JUMPI 0xb8a V1177
---
Entry stack: [V12, 0x2bf, V468, V476, S4, {0x2bf, 0xcc9}, S2, S1, S0]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0x2bf, V468, V476, S4, {0x2bf, 0xcc9}, S2, S1, S0, 0x0, 0x0]

================================

Block 0xb86
[0xb86:0xb89]
---
Predecessors: [0xb6e]
Successors: []
---
0xb86 PUSH1 0x0
0xb88 DUP1
0xb89 REVERT
---
0xb86: V1179 = 0x0
0xb89: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2bf, V468, V476, S6, {0x2bf, 0xcc9}, S4, S3, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2bf, V468, V476, S6, {0x2bf, 0xcc9}, S4, S3, S2, 0x0, 0x0]

================================

Block 0xb8a
[0xb8a:0xc47]
---
Predecessors: [0xb6e]
Successors: [0xc48, 0xc4c]
---
0xb8a JUMPDEST
0xb8b PUSH1 0x4
0xb8d CALLDATALOAD
0xb8e PUSH1 0x24
0xb90 CALLDATALOAD
0xb91 DUP1
0xb92 DUP3
0xb93 CALLER
0xb94 PUSH1 0x1
0xb96 PUSH1 0xa0
0xb98 PUSH1 0x2
0xb9a EXP
0xb9b SUB
0xb9c AND
0xb9d PUSH1 0x0
0xb9f DUP1
0xba0 CALLDATALOAD
0xba1 PUSH1 0x1
0xba3 PUSH1 0xe0
0xba5 PUSH1 0x2
0xba7 EXP
0xba8 SUB
0xba9 NOT
0xbaa AND
0xbab SWAP1
0xbac CALLVALUE
0xbad SWAP1
0xbae CALLDATASIZE
0xbaf PUSH1 0x40
0xbb1 MLOAD
0xbb2 DUP4
0xbb3 DUP2
0xbb4 MSTORE
0xbb5 PUSH1 0x40
0xbb7 PUSH1 0x20
0xbb9 DUP3
0xbba ADD
0xbbb DUP2
0xbbc DUP2
0xbbd MSTORE
0xbbe SWAP1
0xbbf DUP3
0xbc0 ADD
0xbc1 DUP4
0xbc2 SWAP1
0xbc3 MSTORE
0xbc4 PUSH1 0x60
0xbc6 DUP3
0xbc7 ADD
0xbc8 DUP5
0xbc9 DUP5
0xbca DUP1
0xbcb DUP3
0xbcc DUP5
0xbcd CALLDATACOPY
0xbce DUP3
0xbcf ADD
0xbd0 SWAP2
0xbd1 POP
0xbd2 POP
0xbd3 SWAP5
0xbd4 POP
0xbd5 POP
0xbd6 POP
0xbd7 POP
0xbd8 POP
0xbd9 PUSH1 0x40
0xbdb MLOAD
0xbdc DUP1
0xbdd SWAP2
0xbde SUB
0xbdf SWAP1
0xbe0 LOG4
0xbe1 PUSH1 0x5
0xbe3 SLOAD
0xbe4 PUSH1 0x1
0xbe6 PUSH1 0xa0
0xbe8 PUSH1 0x2
0xbea EXP
0xbeb SUB
0xbec AND
0xbed PUSH4 0x23b872dd
0xbf2 DUP9
0xbf3 DUP9
0xbf4 DUP9
0xbf5 PUSH1 0x0
0xbf7 PUSH1 0x40
0xbf9 MLOAD
0xbfa PUSH1 0x20
0xbfc ADD
0xbfd MSTORE
0xbfe PUSH1 0x40
0xc00 MLOAD
0xc01 PUSH1 0xe0
0xc03 PUSH1 0x2
0xc05 EXP
0xc06 PUSH4 0xffffffff
0xc0b DUP7
0xc0c AND
0xc0d MUL
0xc0e DUP2
0xc0f MSTORE
0xc10 PUSH1 0x1
0xc12 PUSH1 0xa0
0xc14 PUSH1 0x2
0xc16 EXP
0xc17 SUB
0xc18 SWAP4
0xc19 DUP5
0xc1a AND
0xc1b PUSH1 0x4
0xc1d DUP3
0xc1e ADD
0xc1f MSTORE
0xc20 SWAP2
0xc21 SWAP1
0xc22 SWAP3
0xc23 AND
0xc24 PUSH1 0x24
0xc26 DUP3
0xc27 ADD
0xc28 MSTORE
0xc29 PUSH1 0x44
0xc2b DUP2
0xc2c ADD
0xc2d SWAP2
0xc2e SWAP1
0xc2f SWAP2
0xc30 MSTORE
0xc31 PUSH1 0x64
0xc33 ADD
0xc34 PUSH1 0x20
0xc36 PUSH1 0x40
0xc38 MLOAD
0xc39 DUP1
0xc3a DUP4
0xc3b SUB
0xc3c DUP2
0xc3d PUSH1 0x0
0xc3f DUP8
0xc40 DUP1
0xc41 EXTCODESIZE
0xc42 ISZERO
0xc43 ISZERO
0xc44 PUSH2 0xc4c
0xc47 JUMPI
---
0xb8a: JUMPDEST 
0xb8b: V1180 = 0x4
0xb8d: V1181 = CALLDATALOAD 0x4
0xb8e: V1182 = 0x24
0xb90: V1183 = CALLDATALOAD 0x24
0xb93: V1184 = CALLER
0xb94: V1185 = 0x1
0xb96: V1186 = 0xa0
0xb98: V1187 = 0x2
0xb9a: V1188 = EXP 0x2 0xa0
0xb9b: V1189 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb9c: V1190 = AND 0xffffffffffffffffffffffffffffffffffffffff V1184
0xb9d: V1191 = 0x0
0xba0: V1192 = CALLDATALOAD 0x0
0xba1: V1193 = 0x1
0xba3: V1194 = 0xe0
0xba5: V1195 = 0x2
0xba7: V1196 = EXP 0x2 0xe0
0xba8: V1197 = SUB 0x100000000000000000000000000000000000000000000000000000000 0x1
0xba9: V1198 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xbaa: V1199 = AND 0xffffffff00000000000000000000000000000000000000000000000000000000 V1192
0xbac: V1200 = CALLVALUE
0xbae: V1201 = CALLDATASIZE
0xbaf: V1202 = 0x40
0xbb1: V1203 = M[0x40]
0xbb4: M[V1203] = V1200
0xbb5: V1204 = 0x40
0xbb7: V1205 = 0x20
0xbba: V1206 = ADD V1203 0x20
0xbbd: M[V1206] = 0x40
0xbc0: V1207 = ADD V1203 0x40
0xbc3: M[V1207] = V1201
0xbc4: V1208 = 0x60
0xbc7: V1209 = ADD V1203 0x60
0xbcd: CALLDATACOPY V1209 0x0 V1201
0xbcf: V1210 = ADD V1209 V1201
0xbd9: V1211 = 0x40
0xbdb: V1212 = M[0x40]
0xbde: V1213 = SUB V1210 V1212
0xbe0: LOG V1212 V1213 V1199 V1190 V1181 V1183
0xbe1: V1214 = 0x5
0xbe3: V1215 = S[0x5]
0xbe4: V1216 = 0x1
0xbe6: V1217 = 0xa0
0xbe8: V1218 = 0x2
0xbea: V1219 = EXP 0x2 0xa0
0xbeb: V1220 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbec: V1221 = AND 0xffffffffffffffffffffffffffffffffffffffff V1215
0xbed: V1222 = 0x23b872dd
0xbf5: V1223 = 0x0
0xbf7: V1224 = 0x40
0xbf9: V1225 = M[0x40]
0xbfa: V1226 = 0x20
0xbfc: V1227 = ADD 0x20 V1225
0xbfd: M[V1227] = 0x0
0xbfe: V1228 = 0x40
0xc00: V1229 = M[0x40]
0xc01: V1230 = 0xe0
0xc03: V1231 = 0x2
0xc05: V1232 = EXP 0x2 0xe0
0xc06: V1233 = 0xffffffff
0xc0c: V1234 = AND 0x23b872dd 0xffffffff
0xc0d: V1235 = MUL 0x23b872dd 0x100000000000000000000000000000000000000000000000000000000
0xc0f: M[V1229] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0xc10: V1236 = 0x1
0xc12: V1237 = 0xa0
0xc14: V1238 = 0x2
0xc16: V1239 = EXP 0x2 0xa0
0xc17: V1240 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc1a: V1241 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xc1b: V1242 = 0x4
0xc1e: V1243 = ADD V1229 0x4
0xc1f: M[V1243] = V1241
0xc23: V1244 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xc24: V1245 = 0x24
0xc27: V1246 = ADD V1229 0x24
0xc28: M[V1246] = V1244
0xc29: V1247 = 0x44
0xc2c: V1248 = ADD V1229 0x44
0xc30: M[V1248] = S2
0xc31: V1249 = 0x64
0xc33: V1250 = ADD 0x64 V1229
0xc34: V1251 = 0x20
0xc36: V1252 = 0x40
0xc38: V1253 = M[0x40]
0xc3b: V1254 = SUB V1250 V1253
0xc3d: V1255 = 0x0
0xc41: V1256 = EXTCODESIZE V1221
0xc42: V1257 = ISZERO V1256
0xc43: V1258 = ISZERO V1257
0xc44: V1259 = 0xc4c
0xc47: JUMPI 0xc4c V1258
---
Entry stack: [V12, 0x2bf, V468, V476, S6, {0x2bf, 0xcc9}, S4, S3, S2, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V1181, V1183, V1221, 0x23b872dd, V1250, 0x20, V1253, V1254, V1253, 0x0, V1221]
Exit stack: [V12, 0x2bf, V468, V476, S6, {0x2bf, 0xcc9}, S4, S3, S2, 0x0, 0x0, V1181, V1183, V1221, 0x23b872dd, V1250, 0x20, V1253, V1254, V1253, 0x0, V1221]

================================

Block 0xc48
[0xc48:0xc4b]
---
Predecessors: [0xb8a]
Successors: []
---
0xc48 PUSH1 0x0
0xc4a DUP1
0xc4b REVERT
---
0xc48: V1260 = 0x0
0xc4b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2bf, V468, V476, S17, {0x2bf, 0xcc9}, S15, S14, S13, 0x0, 0x0, V1181, V1183, V1221, 0x23b872dd, V1250, 0x20, V1253, V1254, V1253, 0x0, V1221]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2bf, V468, V476, S17, {0x2bf, 0xcc9}, S15, S14, S13, 0x0, 0x0, V1181, V1183, V1221, 0x23b872dd, V1250, 0x20, V1253, V1254, V1253, 0x0, V1221]

================================

Block 0xc4c
[0xc4c:0xc58]
---
Predecessors: [0xb8a]
Successors: [0xc59, 0xc5d]
---
0xc4c JUMPDEST
0xc4d PUSH2 0x2c6
0xc50 GAS
0xc51 SUB
0xc52 CALL
0xc53 ISZERO
0xc54 ISZERO
0xc55 PUSH2 0xc5d
0xc58 JUMPI
---
0xc4c: JUMPDEST 
0xc4d: V1261 = 0x2c6
0xc50: V1262 = GAS
0xc51: V1263 = SUB V1262 0x2c6
0xc52: V1264 = CALL V1263 V1221 0x0 V1253 V1254 V1253 0x20
0xc53: V1265 = ISZERO V1264
0xc54: V1266 = ISZERO V1265
0xc55: V1267 = 0xc5d
0xc58: JUMPI 0xc5d V1266
---
Entry stack: [V12, 0x2bf, V468, V476, S17, {0x2bf, 0xcc9}, S15, S14, S13, 0x0, 0x0, V1181, V1183, V1221, 0x23b872dd, V1250, 0x20, V1253, V1254, V1253, 0x0, V1221]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x2bf, V468, V476, S17, {0x2bf, 0xcc9}, S15, S14, S13, 0x0, 0x0, V1181, V1183, V1221, 0x23b872dd, V1250]

================================

Block 0xc59
[0xc59:0xc5c]
---
Predecessors: [0xc4c]
Successors: []
---
0xc59 PUSH1 0x0
0xc5b DUP1
0xc5c REVERT
---
0xc59: V1268 = 0x0
0xc5c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2bf, V468, V476, S11, {0x2bf, 0xcc9}, S9, S8, S7, 0x0, 0x0, S4, S3, S2, 0x23b872dd, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2bf, V468, V476, S11, {0x2bf, 0xcc9}, S9, S8, S7, 0x0, 0x0, S4, S3, S2, 0x23b872dd, S0]

================================

Block 0xc5d
[0xc5d:0xca1]
---
Predecessors: [0xc4c]
Successors: [0xca2]
---
0xc5d JUMPDEST
0xc5e POP
0xc5f POP
0xc60 POP
0xc61 PUSH1 0x40
0xc63 MLOAD
0xc64 DUP1
0xc65 MLOAD
0xc66 SWAP1
0xc67 POP
0xc68 SWAP3
0xc69 POP
0xc6a DUP6
0xc6b PUSH1 0x1
0xc6d PUSH1 0xa0
0xc6f PUSH1 0x2
0xc71 EXP
0xc72 SUB
0xc73 AND
0xc74 DUP8
0xc75 PUSH1 0x1
0xc77 PUSH1 0xa0
0xc79 PUSH1 0x2
0xc7b EXP
0xc7c SUB
0xc7d AND
0xc7e PUSH1 0x0
0xc80 DUP1
0xc81 MLOAD
0xc82 PUSH1 0x20
0xc84 PUSH2 0x1702
0xc87 DUP4
0xc88 CODECOPY
0xc89 DUP2
0xc8a MLOAD
0xc8b SWAP2
0xc8c MSTORE
0xc8d DUP8
0xc8e PUSH1 0x40
0xc90 MLOAD
0xc91 SWAP1
0xc92 DUP2
0xc93 MSTORE
0xc94 PUSH1 0x20
0xc96 ADD
0xc97 PUSH1 0x40
0xc99 MLOAD
0xc9a DUP1
0xc9b SWAP2
0xc9c SUB
0xc9d SWAP1
0xc9e LOG3
0xc9f DUP3
0xca0 SWAP4
0xca1 POP
---
0xc5d: JUMPDEST 
0xc61: V1269 = 0x40
0xc63: V1270 = M[0x40]
0xc65: V1271 = M[V1270]
0xc6b: V1272 = 0x1
0xc6d: V1273 = 0xa0
0xc6f: V1274 = 0x2
0xc71: V1275 = EXP 0x2 0xa0
0xc72: V1276 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc73: V1277 = AND 0xffffffffffffffffffffffffffffffffffffffff S8
0xc75: V1278 = 0x1
0xc77: V1279 = 0xa0
0xc79: V1280 = 0x2
0xc7b: V1281 = EXP 0x2 0xa0
0xc7c: V1282 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc7d: V1283 = AND 0xffffffffffffffffffffffffffffffffffffffff S9
0xc7e: V1284 = 0x0
0xc81: V1285 = M[0x0]
0xc82: V1286 = 0x20
0xc84: V1287 = 0x1702
0xc88: CODECOPY 0x0 0x1702 0x20
0xc8a: V1288 = M[0x0]
0xc8c: M[0x0] = V1285
0xc8e: V1289 = 0x40
0xc90: V1290 = M[0x40]
0xc93: M[V1290] = S7
0xc94: V1291 = 0x20
0xc96: V1292 = ADD 0x20 V1290
0xc97: V1293 = 0x40
0xc99: V1294 = M[0x40]
0xc9c: V1295 = SUB V1292 V1294
0xc9e: LOG V1294 V1295 V1288 V1283 V1277
---
Entry stack: [V12, 0x2bf, V468, V476, S11, {0x2bf, 0xcc9}, S9, S8, S7, 0x0, 0x0, S4, S3, S2, 0x23b872dd, S0]
Stack pops: 10
Stack additions: [S9, S8, S7, V1271, V1271, S4, S3]
Exit stack: [V12, 0x2bf, V468, V476, S11, {0x2bf, 0xcc9}, S9, S8, S7, V1271, V1271, S4, S3]

================================

Block 0xca2
[0xca2:0xca2]
---
Predecessors: [0xc5d]
Successors: [0xca3]
---
0xca2 JUMPDEST
---
0xca2: JUMPDEST 
---
Entry stack: [V12, 0x2bf, V468, V476, S8, {0x2bf, 0xcc9}, S6, S5, S4, V1271, V1271, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2bf, V468, V476, S8, {0x2bf, 0xcc9}, S6, S5, S4, V1271, V1271, S1, S0]

================================

Block 0xca3
[0xca3:0xca5]
---
Predecessors: [0xca2]
Successors: [0xca6]
---
0xca3 JUMPDEST
0xca4 POP
0xca5 POP
---
0xca3: JUMPDEST 
---
Entry stack: [V12, 0x2bf, V468, V476, S8, {0x2bf, 0xcc9}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x2bf, V468, V476, S8, {0x2bf, 0xcc9}, S6, S5, S4, S3, S2]

================================

Block 0xca6
[0xca6:0xcad]
---
Predecessors: [0xca3]
Successors: [0x2bf, 0xcc9]
---
0xca6 JUMPDEST
0xca7 POP
0xca8 SWAP4
0xca9 SWAP3
0xcaa POP
0xcab POP
0xcac POP
0xcad JUMP
---
0xca6: JUMPDEST 
0xcad: JUMP {0x2bf, 0xcc9}
---
Entry stack: [V12, 0x2bf, V468, V476, S6, {0x2bf, 0xcc9}, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S1]
Exit stack: [V12, 0x2bf, V468, V476, S6, S1]

================================

Block 0xcae
[0xcae:0xcb3]
---
Predecessors: [0x381]
Successors: [0x328]
---
0xcae JUMPDEST
0xcaf PUSH1 0x4
0xcb1 SLOAD
0xcb2 DUP2
0xcb3 JUMP
---
0xcae: JUMPDEST 
0xcaf: V1296 = 0x4
0xcb1: V1297 = S[0x4]
0xcb3: JUMP 0x328
---
Entry stack: [V12, 0x328]
Stack pops: 1
Stack additions: [S0, V1297]
Exit stack: [V12, 0x328, V1297]

================================

Block 0xcb4
[0xcb4:0xcc8]
---
Predecessors: [0x3a6]
Successors: [0x1107]
---
0xcb4 JUMPDEST
0xcb5 PUSH1 0x0
0xcb7 PUSH2 0xcc9
0xcba DUP4
0xcbb DUP4
0xcbc PUSH1 0x1
0xcbe PUSH1 0x80
0xcc0 PUSH1 0x2
0xcc2 EXP
0xcc3 SUB
0xcc4 AND
0xcc5 PUSH2 0x1107
0xcc8 JUMP
---
0xcb4: JUMPDEST 
0xcb5: V1298 = 0x0
0xcb7: V1299 = 0xcc9
0xcbc: V1300 = 0x1
0xcbe: V1301 = 0x80
0xcc0: V1302 = 0x2
0xcc2: V1303 = EXP 0x2 0x80
0xcc3: V1304 = SUB 0x100000000000000000000000000000000 0x1
0xcc4: V1305 = AND 0xffffffffffffffffffffffffffffffff V358
0xcc5: V1306 = 0x1107
0xcc8: JUMP 0x1107
---
Entry stack: [V12, 0x2bf, V350, V358]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0xcc9, S1, V1305]
Exit stack: [V12, 0x2bf, V350, V358, 0x0, 0xcc9, V350, V1305]

================================

Block 0xcc9
[0xcc9:0xccb]
---
Predecessors: [0xca6, 0x123f]
Successors: [0xccc]
---
0xcc9 JUMPDEST
0xcca SWAP1
0xccb POP
---
0xcc9: JUMPDEST 
---
Entry stack: [V12, 0x2bf, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x2bf, S3, S2, S0]

================================

Block 0xccc
[0xccc:0xcd1]
---
Predecessors: [0xcc9]
Successors: [0x2bf]
---
0xccc JUMPDEST
0xccd SWAP3
0xcce SWAP2
0xccf POP
0xcd0 POP
0xcd1 JUMP
---
0xccc: JUMPDEST 
0xcd1: JUMP 0x2bf
---
Entry stack: [V12, 0x2bf, S2, S1, S0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, S0]

================================

Block 0xcd2
[0xcd2:0xce7]
---
Predecessors: [0x3e5]
Successors: [0x147d]
---
0xcd2 JUMPDEST
0xcd3 PUSH2 0xce8
0xcd6 CALLER
0xcd7 PUSH1 0x0
0xcd9 CALLDATALOAD
0xcda PUSH1 0x1
0xcdc PUSH1 0xe0
0xcde PUSH1 0x2
0xce0 EXP
0xce1 SUB
0xce2 NOT
0xce3 AND
0xce4 PUSH2 0x147d
0xce7 JUMP
---
0xcd2: JUMPDEST 
0xcd3: V1307 = 0xce8
0xcd6: V1308 = CALLER
0xcd7: V1309 = 0x0
0xcd9: V1310 = CALLDATALOAD 0x0
0xcda: V1311 = 0x1
0xcdc: V1312 = 0xe0
0xcde: V1313 = 0x2
0xce0: V1314 = EXP 0x2 0xe0
0xce1: V1315 = SUB 0x100000000000000000000000000000000000000000000000000000000 0x1
0xce2: V1316 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xce3: V1317 = AND 0xffffffff00000000000000000000000000000000000000000000000000000000 V1310
0xce4: V1318 = 0x147d
0xce7: JUMP 0x147d
---
Entry stack: [V12, 0x29b, V381]
Stack pops: 0
Stack additions: [0xce8, V1308, V1317]
Exit stack: [V12, 0x29b, V381, 0xce8, V1308, V1317]

================================

Block 0xce8
[0xce8:0xcee]
---
Predecessors: [0x919]
Successors: [0xcef, 0xcf3]
---
0xce8 JUMPDEST
0xce9 ISZERO
0xcea ISZERO
0xceb PUSH2 0xcf3
0xcee JUMPI
---
0xce8: JUMPDEST 
0xce9: V1319 = ISZERO S0
0xcea: V1320 = ISZERO V1319
0xceb: V1321 = 0xcf3
0xcee: JUMPI 0xcf3 V1320
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0xcef
[0xcef:0xcf2]
---
Predecessors: [0xce8]
Successors: []
---
0xcef PUSH1 0x0
0xcf1 DUP1
0xcf2 REVERT
---
0xcef: V1322 = 0x0
0xcf2: REVERT 0x0 0x0
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xcf3
[0xcf3:0xd05]
---
Predecessors: [0xce8]
Successors: [0xd06, 0xd0a]
---
0xcf3 JUMPDEST
0xcf4 PUSH1 0x1
0xcf6 SLOAD
0xcf7 PUSH1 0xa0
0xcf9 PUSH1 0x2
0xcfb EXP
0xcfc SWAP1
0xcfd DIV
0xcfe PUSH1 0xff
0xd00 AND
0xd01 ISZERO
0xd02 PUSH2 0xd0a
0xd05 JUMPI
---
0xcf3: JUMPDEST 
0xcf4: V1323 = 0x1
0xcf6: V1324 = S[0x1]
0xcf7: V1325 = 0xa0
0xcf9: V1326 = 0x2
0xcfb: V1327 = EXP 0x2 0xa0
0xcfd: V1328 = DIV V1324 0x10000000000000000000000000000000000000000
0xcfe: V1329 = 0xff
0xd00: V1330 = AND 0xff V1328
0xd01: V1331 = ISZERO V1330
0xd02: V1332 = 0xd0a
0xd05: JUMPI 0xd0a V1331
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xd06
[0xd06:0xd09]
---
Predecessors: [0xcf3]
Successors: []
---
0xd06 PUSH1 0x0
0xd08 DUP1
0xd09 REVERT
---
0xd06: V1333 = 0x0
0xd09: REVERT 0x0 0x0
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xd0a
[0xd0a:0xdab]
---
Predecessors: [0xcf3]
Successors: [0xdac, 0xdb0]
---
0xd0a JUMPDEST
0xd0b PUSH1 0x4
0xd0d CALLDATALOAD
0xd0e PUSH1 0x24
0xd10 CALLDATALOAD
0xd11 DUP1
0xd12 DUP3
0xd13 CALLER
0xd14 PUSH1 0x1
0xd16 PUSH1 0xa0
0xd18 PUSH1 0x2
0xd1a EXP
0xd1b SUB
0xd1c AND
0xd1d PUSH1 0x0
0xd1f DUP1
0xd20 CALLDATALOAD
0xd21 PUSH1 0x1
0xd23 PUSH1 0xe0
0xd25 PUSH1 0x2
0xd27 EXP
0xd28 SUB
0xd29 NOT
0xd2a AND
0xd2b SWAP1
0xd2c CALLVALUE
0xd2d SWAP1
0xd2e CALLDATASIZE
0xd2f PUSH1 0x40
0xd31 MLOAD
0xd32 DUP4
0xd33 DUP2
0xd34 MSTORE
0xd35 PUSH1 0x40
0xd37 PUSH1 0x20
0xd39 DUP3
0xd3a ADD
0xd3b DUP2
0xd3c DUP2
0xd3d MSTORE
0xd3e SWAP1
0xd3f DUP3
0xd40 ADD
0xd41 DUP4
0xd42 SWAP1
0xd43 MSTORE
0xd44 PUSH1 0x60
0xd46 DUP3
0xd47 ADD
0xd48 DUP5
0xd49 DUP5
0xd4a DUP1
0xd4b DUP3
0xd4c DUP5
0xd4d CALLDATACOPY
0xd4e DUP3
0xd4f ADD
0xd50 SWAP2
0xd51 POP
0xd52 POP
0xd53 SWAP5
0xd54 POP
0xd55 POP
0xd56 POP
0xd57 POP
0xd58 POP
0xd59 PUSH1 0x40
0xd5b MLOAD
0xd5c DUP1
0xd5d SWAP2
0xd5e SUB
0xd5f SWAP1
0xd60 LOG4
0xd61 PUSH1 0x5
0xd63 SLOAD
0xd64 PUSH1 0x1
0xd66 PUSH1 0xa0
0xd68 PUSH1 0x2
0xd6a EXP
0xd6b SUB
0xd6c AND
0xd6d PUSH4 0x69d3e20e
0xd72 DUP5
0xd73 PUSH1 0x40
0xd75 MLOAD
0xd76 PUSH1 0xe0
0xd78 PUSH1 0x2
0xd7a EXP
0xd7b PUSH4 0xffffffff
0xd80 DUP5
0xd81 AND
0xd82 MUL
0xd83 DUP2
0xd84 MSTORE
0xd85 PUSH1 0x1
0xd87 PUSH1 0x80
0xd89 PUSH1 0x2
0xd8b EXP
0xd8c SUB
0xd8d SWAP1
0xd8e SWAP2
0xd8f AND
0xd90 PUSH1 0x4
0xd92 DUP3
0xd93 ADD
0xd94 MSTORE
0xd95 PUSH1 0x24
0xd97 ADD
0xd98 PUSH1 0x0
0xd9a PUSH1 0x40
0xd9c MLOAD
0xd9d DUP1
0xd9e DUP4
0xd9f SUB
0xda0 DUP2
0xda1 PUSH1 0x0
0xda3 DUP8
0xda4 DUP1
0xda5 EXTCODESIZE
0xda6 ISZERO
0xda7 ISZERO
0xda8 PUSH2 0xdb0
0xdab JUMPI
---
0xd0a: JUMPDEST 
0xd0b: V1334 = 0x4
0xd0d: V1335 = CALLDATALOAD 0x4
0xd0e: V1336 = 0x24
0xd10: V1337 = CALLDATALOAD 0x24
0xd13: V1338 = CALLER
0xd14: V1339 = 0x1
0xd16: V1340 = 0xa0
0xd18: V1341 = 0x2
0xd1a: V1342 = EXP 0x2 0xa0
0xd1b: V1343 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd1c: V1344 = AND 0xffffffffffffffffffffffffffffffffffffffff V1338
0xd1d: V1345 = 0x0
0xd20: V1346 = CALLDATALOAD 0x0
0xd21: V1347 = 0x1
0xd23: V1348 = 0xe0
0xd25: V1349 = 0x2
0xd27: V1350 = EXP 0x2 0xe0
0xd28: V1351 = SUB 0x100000000000000000000000000000000000000000000000000000000 0x1
0xd29: V1352 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xd2a: V1353 = AND 0xffffffff00000000000000000000000000000000000000000000000000000000 V1346
0xd2c: V1354 = CALLVALUE
0xd2e: V1355 = CALLDATASIZE
0xd2f: V1356 = 0x40
0xd31: V1357 = M[0x40]
0xd34: M[V1357] = V1354
0xd35: V1358 = 0x40
0xd37: V1359 = 0x20
0xd3a: V1360 = ADD V1357 0x20
0xd3d: M[V1360] = 0x40
0xd40: V1361 = ADD V1357 0x40
0xd43: M[V1361] = V1355
0xd44: V1362 = 0x60
0xd47: V1363 = ADD V1357 0x60
0xd4d: CALLDATACOPY V1363 0x0 V1355
0xd4f: V1364 = ADD V1363 V1355
0xd59: V1365 = 0x40
0xd5b: V1366 = M[0x40]
0xd5e: V1367 = SUB V1364 V1366
0xd60: LOG V1366 V1367 V1353 V1344 V1335 V1337
0xd61: V1368 = 0x5
0xd63: V1369 = S[0x5]
0xd64: V1370 = 0x1
0xd66: V1371 = 0xa0
0xd68: V1372 = 0x2
0xd6a: V1373 = EXP 0x2 0xa0
0xd6b: V1374 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd6c: V1375 = AND 0xffffffffffffffffffffffffffffffffffffffff V1369
0xd6d: V1376 = 0x69d3e20e
0xd73: V1377 = 0x40
0xd75: V1378 = M[0x40]
0xd76: V1379 = 0xe0
0xd78: V1380 = 0x2
0xd7a: V1381 = EXP 0x2 0xe0
0xd7b: V1382 = 0xffffffff
0xd81: V1383 = AND 0x69d3e20e 0xffffffff
0xd82: V1384 = MUL 0x69d3e20e 0x100000000000000000000000000000000000000000000000000000000
0xd84: M[V1378] = 0x69d3e20e00000000000000000000000000000000000000000000000000000000
0xd85: V1385 = 0x1
0xd87: V1386 = 0x80
0xd89: V1387 = 0x2
0xd8b: V1388 = EXP 0x2 0x80
0xd8c: V1389 = SUB 0x100000000000000000000000000000000 0x1
0xd8f: V1390 = AND S0 0xffffffffffffffffffffffffffffffff
0xd90: V1391 = 0x4
0xd93: V1392 = ADD V1378 0x4
0xd94: M[V1392] = V1390
0xd95: V1393 = 0x24
0xd97: V1394 = ADD 0x24 V1378
0xd98: V1395 = 0x0
0xd9a: V1396 = 0x40
0xd9c: V1397 = M[0x40]
0xd9f: V1398 = SUB V1394 V1397
0xda1: V1399 = 0x0
0xda5: V1400 = EXTCODESIZE V1375
0xda6: V1401 = ISZERO V1400
0xda7: V1402 = ISZERO V1401
0xda8: V1403 = 0xdb0
0xdab: JUMPI 0xdb0 V1402
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, V1335, V1337, V1375, 0x69d3e20e, V1394, 0x0, V1397, V1398, V1397, 0x0, V1375]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0, V1335, V1337, V1375, 0x69d3e20e, V1394, 0x0, V1397, V1398, V1397, 0x0, V1375]

================================

Block 0xdac
[0xdac:0xdaf]
---
Predecessors: [0xd0a]
Successors: []
---
0xdac PUSH1 0x0
0xdae DUP1
0xdaf REVERT
---
0xdac: V1404 = 0x0
0xdaf: REVERT 0x0 0x0
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, V1335, V1337, V1375, 0x69d3e20e, V1394, 0x0, V1397, V1398, V1397, 0x0, V1375]
Stack pops: 0
Stack additions: []
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, V1335, V1337, V1375, 0x69d3e20e, V1394, 0x0, V1397, V1398, V1397, 0x0, V1375]

================================

Block 0xdb0
[0xdb0:0xdbc]
---
Predecessors: [0xd0a]
Successors: [0xdbd, 0xdc1]
---
0xdb0 JUMPDEST
0xdb1 PUSH2 0x2c6
0xdb4 GAS
0xdb5 SUB
0xdb6 CALL
0xdb7 ISZERO
0xdb8 ISZERO
0xdb9 PUSH2 0xdc1
0xdbc JUMPI
---
0xdb0: JUMPDEST 
0xdb1: V1405 = 0x2c6
0xdb4: V1406 = GAS
0xdb5: V1407 = SUB V1406 0x2c6
0xdb6: V1408 = CALL V1407 V1375 0x0 V1397 V1398 V1397 0x0
0xdb7: V1409 = ISZERO V1408
0xdb8: V1410 = ISZERO V1409
0xdb9: V1411 = 0xdc1
0xdbc: JUMPI 0xdc1 V1410
---
Entry stack: [V12, S19, S18, S17, S16, S15, S14, S13, S12, S11, V1335, V1337, V1375, 0x69d3e20e, V1394, 0x0, V1397, V1398, V1397, 0x0, V1375]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S19, S18, S17, S16, S15, S14, S13, S12, S11, V1335, V1337, V1375, 0x69d3e20e, V1394]

================================

Block 0xdbd
[0xdbd:0xdc0]
---
Predecessors: [0xdb0]
Successors: []
---
0xdbd PUSH1 0x0
0xdbf DUP1
0xdc0 REVERT
---
0xdbd: V1412 = 0x0
0xdc0: REVERT 0x0 0x0
---
Entry stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x69d3e20e, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x69d3e20e, S0]

================================

Block 0xdc1
[0xdc1:0xe03]
---
Predecessors: [0xdb0]
Successors: [0xe04]
---
0xdc1 JUMPDEST
0xdc2 POP
0xdc3 POP
0xdc4 POP
0xdc5 CALLER
0xdc6 PUSH1 0x1
0xdc8 PUSH1 0xa0
0xdca PUSH1 0x2
0xdcc EXP
0xdcd SUB
0xdce AND
0xdcf ADDRESS
0xdd0 PUSH1 0x1
0xdd2 PUSH1 0xa0
0xdd4 PUSH1 0x2
0xdd6 EXP
0xdd7 SUB
0xdd8 AND
0xdd9 PUSH1 0x0
0xddb DUP1
0xddc MLOAD
0xddd PUSH1 0x20
0xddf PUSH2 0x1702
0xde2 DUP4
0xde3 CODECOPY
0xde4 DUP2
0xde5 MLOAD
0xde6 SWAP2
0xde7 MSTORE
0xde8 DUP6
0xde9 PUSH1 0x40
0xdeb MLOAD
0xdec PUSH1 0x1
0xdee PUSH1 0x80
0xdf0 PUSH1 0x2
0xdf2 EXP
0xdf3 SUB
0xdf4 SWAP1
0xdf5 SWAP2
0xdf6 AND
0xdf7 DUP2
0xdf8 MSTORE
0xdf9 PUSH1 0x20
0xdfb ADD
0xdfc PUSH1 0x40
0xdfe MLOAD
0xdff DUP1
0xe00 SWAP2
0xe01 SUB
0xe02 SWAP1
0xe03 LOG3
---
0xdc1: JUMPDEST 
0xdc5: V1413 = CALLER
0xdc6: V1414 = 0x1
0xdc8: V1415 = 0xa0
0xdca: V1416 = 0x2
0xdcc: V1417 = EXP 0x2 0xa0
0xdcd: V1418 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdce: V1419 = AND 0xffffffffffffffffffffffffffffffffffffffff V1413
0xdcf: V1420 = ADDRESS
0xdd0: V1421 = 0x1
0xdd2: V1422 = 0xa0
0xdd4: V1423 = 0x2
0xdd6: V1424 = EXP 0x2 0xa0
0xdd7: V1425 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdd8: V1426 = AND 0xffffffffffffffffffffffffffffffffffffffff V1420
0xdd9: V1427 = 0x0
0xddc: V1428 = M[0x0]
0xddd: V1429 = 0x20
0xddf: V1430 = 0x1702
0xde3: CODECOPY 0x0 0x1702 0x20
0xde5: V1431 = M[0x0]
0xde7: M[0x0] = V1428
0xde9: V1432 = 0x40
0xdeb: V1433 = M[0x40]
0xdec: V1434 = 0x1
0xdee: V1435 = 0x80
0xdf0: V1436 = 0x2
0xdf2: V1437 = EXP 0x2 0x80
0xdf3: V1438 = SUB 0x100000000000000000000000000000000 0x1
0xdf6: V1439 = AND S5 0xffffffffffffffffffffffffffffffff
0xdf8: M[V1433] = V1439
0xdf9: V1440 = 0x20
0xdfb: V1441 = ADD 0x20 V1433
0xdfc: V1442 = 0x40
0xdfe: V1443 = M[0x40]
0xe01: V1444 = SUB V1441 V1443
0xe03: LOG V1443 V1444 V1431 V1426 V1419
---
Entry stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x69d3e20e, S0]
Stack pops: 6
Stack additions: [S5, S4, S3]
Exit stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3]

================================

Block 0xe04
[0xe04:0xe04]
---
Predecessors: [0xdc1]
Successors: [0xe05]
---
0xe04 JUMPDEST
---
0xe04: JUMPDEST 
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xe05
[0xe05:0xe07]
---
Predecessors: [0xe04]
Successors: [0xe08]
---
0xe05 JUMPDEST
0xe06 POP
0xe07 POP
---
0xe05: JUMPDEST 
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0xe08
[0xe08:0xe08]
---
Predecessors: [0xe05]
Successors: [0xe09]
---
0xe08 JUMPDEST
---
0xe08: JUMPDEST 
---
Entry stack: [V12, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xe09
[0xe09:0xe0b]
---
Predecessors: [0xe08]
Successors: [0x29b, 0x816]
---
0xe09 JUMPDEST
0xe0a POP
0xe0b JUMP
---
0xe09: JUMPDEST 
0xe0b: JUMP S1
---
Entry stack: [V12, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, S6, S5, S4, S3, S2]

================================

Block 0xe0c
[0xe0c:0xe62]
---
Predecessors: [0x406, 0x9ba]
Successors: [0xe63, 0xe67]
---
0xe0c JUMPDEST
0xe0d PUSH1 0x5
0xe0f SLOAD
0xe10 PUSH1 0x0
0xe12 SWAP1
0xe13 PUSH1 0x1
0xe15 PUSH1 0xa0
0xe17 PUSH1 0x2
0xe19 EXP
0xe1a SUB
0xe1b AND
0xe1c PUSH4 0x70a08231
0xe21 DUP4
0xe22 DUP4
0xe23 PUSH1 0x40
0xe25 MLOAD
0xe26 PUSH1 0x20
0xe28 ADD
0xe29 MSTORE
0xe2a PUSH1 0x40
0xe2c MLOAD
0xe2d PUSH1 0xe0
0xe2f PUSH1 0x2
0xe31 EXP
0xe32 PUSH4 0xffffffff
0xe37 DUP5
0xe38 AND
0xe39 MUL
0xe3a DUP2
0xe3b MSTORE
0xe3c PUSH1 0x1
0xe3e PUSH1 0xa0
0xe40 PUSH1 0x2
0xe42 EXP
0xe43 SUB
0xe44 SWAP1
0xe45 SWAP2
0xe46 AND
0xe47 PUSH1 0x4
0xe49 DUP3
0xe4a ADD
0xe4b MSTORE
0xe4c PUSH1 0x24
0xe4e ADD
0xe4f PUSH1 0x20
0xe51 PUSH1 0x40
0xe53 MLOAD
0xe54 DUP1
0xe55 DUP4
0xe56 SUB
0xe57 DUP2
0xe58 PUSH1 0x0
0xe5a DUP8
0xe5b DUP1
0xe5c EXTCODESIZE
0xe5d ISZERO
0xe5e ISZERO
0xe5f PUSH2 0xe67
0xe62 JUMPI
---
0xe0c: JUMPDEST 
0xe0d: V1445 = 0x5
0xe0f: V1446 = S[0x5]
0xe10: V1447 = 0x0
0xe13: V1448 = 0x1
0xe15: V1449 = 0xa0
0xe17: V1450 = 0x2
0xe19: V1451 = EXP 0x2 0xa0
0xe1a: V1452 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe1b: V1453 = AND 0xffffffffffffffffffffffffffffffffffffffff V1446
0xe1c: V1454 = 0x70a08231
0xe23: V1455 = 0x40
0xe25: V1456 = M[0x40]
0xe26: V1457 = 0x20
0xe28: V1458 = ADD 0x20 V1456
0xe29: M[V1458] = 0x0
0xe2a: V1459 = 0x40
0xe2c: V1460 = M[0x40]
0xe2d: V1461 = 0xe0
0xe2f: V1462 = 0x2
0xe31: V1463 = EXP 0x2 0xe0
0xe32: V1464 = 0xffffffff
0xe38: V1465 = AND 0x70a08231 0xffffffff
0xe39: V1466 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0xe3b: M[V1460] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xe3c: V1467 = 0x1
0xe3e: V1468 = 0xa0
0xe40: V1469 = 0x2
0xe42: V1470 = EXP 0x2 0xa0
0xe43: V1471 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe46: V1472 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xe47: V1473 = 0x4
0xe4a: V1474 = ADD V1460 0x4
0xe4b: M[V1474] = V1472
0xe4c: V1475 = 0x24
0xe4e: V1476 = ADD 0x24 V1460
0xe4f: V1477 = 0x20
0xe51: V1478 = 0x40
0xe53: V1479 = M[0x40]
0xe56: V1480 = SUB V1476 V1479
0xe58: V1481 = 0x0
0xe5c: V1482 = EXTCODESIZE V1453
0xe5d: V1483 = ISZERO V1482
0xe5e: V1484 = ISZERO V1483
0xe5f: V1485 = 0xe67
0xe62: JUMPI 0xe67 V1484
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x328, 0x9cf}, S0]
Stack pops: 1
Stack additions: [S0, 0x0, V1453, 0x70a08231, V1476, 0x20, V1479, V1480, V1479, 0x0, V1453]
Exit stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x328, 0x9cf}, S0, 0x0, V1453, 0x70a08231, V1476, 0x20, V1479, V1480, V1479, 0x0, V1453]

================================

Block 0xe63
[0xe63:0xe66]
---
Predecessors: [0xe0c]
Successors: []
---
0xe63 PUSH1 0x0
0xe65 DUP1
0xe66 REVERT
---
0xe63: V1486 = 0x0
0xe66: REVERT 0x0 0x0
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, {0x328, 0x9cf}, S10, 0x0, V1453, 0x70a08231, V1476, 0x20, V1479, V1480, V1479, 0x0, V1453]
Stack pops: 0
Stack additions: []
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, {0x328, 0x9cf}, S10, 0x0, V1453, 0x70a08231, V1476, 0x20, V1479, V1480, V1479, 0x0, V1453]

================================

Block 0xe67
[0xe67:0xe73]
---
Predecessors: [0xe0c]
Successors: [0xe74, 0xe78]
---
0xe67 JUMPDEST
0xe68 PUSH2 0x2c6
0xe6b GAS
0xe6c SUB
0xe6d CALL
0xe6e ISZERO
0xe6f ISZERO
0xe70 PUSH2 0xe78
0xe73 JUMPI
---
0xe67: JUMPDEST 
0xe68: V1487 = 0x2c6
0xe6b: V1488 = GAS
0xe6c: V1489 = SUB V1488 0x2c6
0xe6d: V1490 = CALL V1489 V1453 0x0 V1479 V1480 V1479 0x20
0xe6e: V1491 = ISZERO V1490
0xe6f: V1492 = ISZERO V1491
0xe70: V1493 = 0xe78
0xe73: JUMPI 0xe78 V1492
---
Entry stack: [V12, S20, S19, S18, S17, S16, S15, S14, S13, S12, {0x328, 0x9cf}, S10, 0x0, V1453, 0x70a08231, V1476, 0x20, V1479, V1480, V1479, 0x0, V1453]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S20, S19, S18, S17, S16, S15, S14, S13, S12, {0x328, 0x9cf}, S10, 0x0, V1453, 0x70a08231, V1476]

================================

Block 0xe74
[0xe74:0xe77]
---
Predecessors: [0xe67]
Successors: []
---
0xe74 PUSH1 0x0
0xe76 DUP1
0xe77 REVERT
---
0xe74: V1494 = 0x0
0xe77: REVERT 0x0 0x0
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, {0x328, 0x9cf}, S4, 0x0, S2, 0x70a08231, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, {0x328, 0x9cf}, S4, 0x0, S2, 0x70a08231, S0]

================================

Block 0xe78
[0xe78:0xe83]
---
Predecessors: [0xe67]
Successors: [0xe84]
---
0xe78 JUMPDEST
0xe79 POP
0xe7a POP
0xe7b POP
0xe7c PUSH1 0x40
0xe7e MLOAD
0xe7f DUP1
0xe80 MLOAD
0xe81 SWAP2
0xe82 POP
0xe83 POP
---
0xe78: JUMPDEST 
0xe7c: V1495 = 0x40
0xe7e: V1496 = M[0x40]
0xe80: V1497 = M[V1496]
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, {0x328, 0x9cf}, S4, 0x0, S2, 0x70a08231, S0]
Stack pops: 4
Stack additions: [V1497]
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, {0x328, 0x9cf}, S4, V1497]

================================

Block 0xe84
[0xe84:0xe88]
---
Predecessors: [0xe78]
Successors: [0x328, 0x9cf]
---
0xe84 JUMPDEST
0xe85 SWAP2
0xe86 SWAP1
0xe87 POP
0xe88 JUMP
---
0xe84: JUMPDEST 
0xe88: JUMP {0x328, 0x9cf}
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, {0x328, 0x9cf}, S1, V1497]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, V1497]

================================

Block 0xe89
[0xe89:0xea0]
---
Predecessors: [0x437]
Successors: [0x147d]
---
0xe89 JUMPDEST
0xe8a PUSH1 0x0
0xe8c PUSH2 0xea1
0xe8f CALLER
0xe90 PUSH1 0x0
0xe92 CALLDATALOAD
0xe93 PUSH1 0x1
0xe95 PUSH1 0xe0
0xe97 PUSH1 0x2
0xe99 EXP
0xe9a SUB
0xe9b NOT
0xe9c AND
0xe9d PUSH2 0x147d
0xea0 JUMP
---
0xe89: JUMPDEST 
0xe8a: V1498 = 0x0
0xe8c: V1499 = 0xea1
0xe8f: V1500 = CALLER
0xe90: V1501 = 0x0
0xe92: V1502 = CALLDATALOAD 0x0
0xe93: V1503 = 0x1
0xe95: V1504 = 0xe0
0xe97: V1505 = 0x2
0xe99: V1506 = EXP 0x2 0xe0
0xe9a: V1507 = SUB 0x100000000000000000000000000000000000000000000000000000000 0x1
0xe9b: V1508 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xe9c: V1509 = AND 0xffffffff00000000000000000000000000000000000000000000000000000000 V1502
0xe9d: V1510 = 0x147d
0xea0: JUMP 0x147d
---
Entry stack: [V12, 0x2bf, V416]
Stack pops: 0
Stack additions: [0x0, 0xea1, V1500, V1509]
Exit stack: [V12, 0x2bf, V416, 0x0, 0xea1, V1500, V1509]

================================

Block 0xea1
[0xea1:0xea7]
---
Predecessors: [0x919]
Successors: [0xea8, 0xeac]
---
0xea1 JUMPDEST
0xea2 ISZERO
0xea3 ISZERO
0xea4 PUSH2 0xeac
0xea7 JUMPI
---
0xea1: JUMPDEST 
0xea2: V1511 = ISZERO S0
0xea3: V1512 = ISZERO V1511
0xea4: V1513 = 0xeac
0xea7: JUMPI 0xeac V1512
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0xea8
[0xea8:0xeab]
---
Predecessors: [0xea1]
Successors: []
---
0xea8 PUSH1 0x0
0xeaa DUP1
0xeab REVERT
---
0xea8: V1514 = 0x0
0xeab: REVERT 0x0 0x0
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xeac
[0xeac:0xf2e]
---
Predecessors: [0xea1]
Successors: [0xf2f]
---
0xeac JUMPDEST
0xead PUSH1 0x4
0xeaf CALLDATALOAD
0xeb0 PUSH1 0x24
0xeb2 CALLDATALOAD
0xeb3 DUP1
0xeb4 DUP3
0xeb5 CALLER
0xeb6 PUSH1 0x1
0xeb8 PUSH1 0xa0
0xeba PUSH1 0x2
0xebc EXP
0xebd SUB
0xebe AND
0xebf PUSH1 0x0
0xec1 DUP1
0xec2 CALLDATALOAD
0xec3 PUSH1 0x1
0xec5 PUSH1 0xe0
0xec7 PUSH1 0x2
0xec9 EXP
0xeca SUB
0xecb NOT
0xecc AND
0xecd SWAP1
0xece CALLVALUE
0xecf SWAP1
0xed0 CALLDATASIZE
0xed1 PUSH1 0x40
0xed3 MLOAD
0xed4 DUP4
0xed5 DUP2
0xed6 MSTORE
0xed7 PUSH1 0x40
0xed9 PUSH1 0x20
0xedb DUP3
0xedc ADD
0xedd DUP2
0xede DUP2
0xedf MSTORE
0xee0 SWAP1
0xee1 DUP3
0xee2 ADD
0xee3 DUP4
0xee4 SWAP1
0xee5 MSTORE
0xee6 PUSH1 0x60
0xee8 DUP3
0xee9 ADD
0xeea DUP5
0xeeb DUP5
0xeec DUP1
0xeed DUP3
0xeee DUP5
0xeef CALLDATACOPY
0xef0 DUP3
0xef1 ADD
0xef2 SWAP2
0xef3 POP
0xef4 POP
0xef5 SWAP5
0xef6 POP
0xef7 POP
0xef8 POP
0xef9 POP
0xefa POP
0xefb PUSH1 0x40
0xefd MLOAD
0xefe DUP1
0xeff SWAP2
0xf00 SUB
0xf01 SWAP1
0xf02 LOG4
0xf03 PUSH1 0x5
0xf05 DUP1
0xf06 SLOAD
0xf07 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf1c NOT
0xf1d AND
0xf1e PUSH1 0x1
0xf20 PUSH1 0xa0
0xf22 PUSH1 0x2
0xf24 EXP
0xf25 SUB
0xf26 DUP7
0xf27 AND
0xf28 OR
0xf29 SWAP1
0xf2a SSTORE
0xf2b PUSH1 0x1
0xf2d SWAP3
0xf2e POP
---
0xeac: JUMPDEST 
0xead: V1515 = 0x4
0xeaf: V1516 = CALLDATALOAD 0x4
0xeb0: V1517 = 0x24
0xeb2: V1518 = CALLDATALOAD 0x24
0xeb5: V1519 = CALLER
0xeb6: V1520 = 0x1
0xeb8: V1521 = 0xa0
0xeba: V1522 = 0x2
0xebc: V1523 = EXP 0x2 0xa0
0xebd: V1524 = SUB 0x10000000000000000000000000000000000000000 0x1
0xebe: V1525 = AND 0xffffffffffffffffffffffffffffffffffffffff V1519
0xebf: V1526 = 0x0
0xec2: V1527 = CALLDATALOAD 0x0
0xec3: V1528 = 0x1
0xec5: V1529 = 0xe0
0xec7: V1530 = 0x2
0xec9: V1531 = EXP 0x2 0xe0
0xeca: V1532 = SUB 0x100000000000000000000000000000000000000000000000000000000 0x1
0xecb: V1533 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xecc: V1534 = AND 0xffffffff00000000000000000000000000000000000000000000000000000000 V1527
0xece: V1535 = CALLVALUE
0xed0: V1536 = CALLDATASIZE
0xed1: V1537 = 0x40
0xed3: V1538 = M[0x40]
0xed6: M[V1538] = V1535
0xed7: V1539 = 0x40
0xed9: V1540 = 0x20
0xedc: V1541 = ADD V1538 0x20
0xedf: M[V1541] = 0x40
0xee2: V1542 = ADD V1538 0x40
0xee5: M[V1542] = V1536
0xee6: V1543 = 0x60
0xee9: V1544 = ADD V1538 0x60
0xeef: CALLDATACOPY V1544 0x0 V1536
0xef1: V1545 = ADD V1544 V1536
0xefb: V1546 = 0x40
0xefd: V1547 = M[0x40]
0xf00: V1548 = SUB V1545 V1547
0xf02: LOG V1547 V1548 V1534 V1525 V1516 V1518
0xf03: V1549 = 0x5
0xf06: V1550 = S[0x5]
0xf07: V1551 = 0xffffffffffffffffffffffffffffffffffffffff
0xf1c: V1552 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xf1d: V1553 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1550
0xf1e: V1554 = 0x1
0xf20: V1555 = 0xa0
0xf22: V1556 = 0x2
0xf24: V1557 = EXP 0x2 0xa0
0xf25: V1558 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf27: V1559 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0xf28: V1560 = OR V1559 V1553
0xf2a: S[0x5] = V1560
0xf2b: V1561 = 0x1
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, 0x1, V1516, V1518]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, 0x1, V1516, V1518]

================================

Block 0xf2f
[0xf2f:0xf2f]
---
Predecessors: [0xeac]
Successors: [0xf30]
---
0xf2f JUMPDEST
---
0xf2f: JUMPDEST 
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, 0x1, V1516, V1518]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, 0x1, V1516, V1518]

================================

Block 0xf30
[0xf30:0xf32]
---
Predecessors: [0xf2f]
Successors: [0xf33]
---
0xf30 JUMPDEST
0xf31 POP
0xf32 POP
---
0xf30: JUMPDEST 
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, 0x1, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, 0x1]

================================

Block 0xf33
[0xf33:0xf37]
---
Predecessors: [0xf30]
Successors: [0x29b, 0x2bf]
---
0xf33 JUMPDEST
0xf34 SWAP2
0xf35 SWAP1
0xf36 POP
0xf37 JUMP
---
0xf33: JUMPDEST 
0xf37: JUMP S2
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, 0x1]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, 0x1]

================================

Block 0xf38
[0xf38:0xf47]
---
Predecessors: [0x46a]
Successors: [0x2bf]
---
0xf38 JUMPDEST
0xf39 PUSH1 0x1
0xf3b SLOAD
0xf3c PUSH1 0xa0
0xf3e PUSH1 0x2
0xf40 EXP
0xf41 SWAP1
0xf42 DIV
0xf43 PUSH1 0xff
0xf45 AND
0xf46 DUP2
0xf47 JUMP
---
0xf38: JUMPDEST 
0xf39: V1562 = 0x1
0xf3b: V1563 = S[0x1]
0xf3c: V1564 = 0xa0
0xf3e: V1565 = 0x2
0xf40: V1566 = EXP 0x2 0xa0
0xf42: V1567 = DIV V1563 0x10000000000000000000000000000000000000000
0xf43: V1568 = 0xff
0xf45: V1569 = AND 0xff V1567
0xf47: JUMP 0x2bf
---
Entry stack: [V12, 0x2bf]
Stack pops: 1
Stack additions: [S0, V1569]
Exit stack: [V12, 0x2bf, V1569]

================================

Block 0xf48
[0xf48:0xf5d]
---
Predecessors: [0x491]
Successors: [0x147d]
---
0xf48 JUMPDEST
0xf49 PUSH2 0xf5e
0xf4c CALLER
0xf4d PUSH1 0x0
0xf4f CALLDATALOAD
0xf50 PUSH1 0x1
0xf52 PUSH1 0xe0
0xf54 PUSH1 0x2
0xf56 EXP
0xf57 SUB
0xf58 NOT
0xf59 AND
0xf5a PUSH2 0x147d
0xf5d JUMP
---
0xf48: JUMPDEST 
0xf49: V1570 = 0xf5e
0xf4c: V1571 = CALLER
0xf4d: V1572 = 0x0
0xf4f: V1573 = CALLDATALOAD 0x0
0xf50: V1574 = 0x1
0xf52: V1575 = 0xe0
0xf54: V1576 = 0x2
0xf56: V1577 = EXP 0x2 0xe0
0xf57: V1578 = SUB 0x100000000000000000000000000000000000000000000000000000000 0x1
0xf58: V1579 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xf59: V1580 = AND 0xffffffff00000000000000000000000000000000000000000000000000000000 V1573
0xf5a: V1581 = 0x147d
0xf5d: JUMP 0x147d
---
Entry stack: [V12, 0x29b, V454]
Stack pops: 0
Stack additions: [0xf5e, V1571, V1580]
Exit stack: [V12, 0x29b, V454, 0xf5e, V1571, V1580]

================================

Block 0xf5e
[0xf5e:0xf64]
---
Predecessors: [0x919]
Successors: [0xf65, 0xf69]
---
0xf5e JUMPDEST
0xf5f ISZERO
0xf60 ISZERO
0xf61 PUSH2 0xf69
0xf64 JUMPI
---
0xf5e: JUMPDEST 
0xf5f: V1582 = ISZERO S0
0xf60: V1583 = ISZERO V1582
0xf61: V1584 = 0xf69
0xf64: JUMPI 0xf69 V1583
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0xf65
[0xf65:0xf68]
---
Predecessors: [0xf5e]
Successors: []
---
0xf65 PUSH1 0x0
0xf67 DUP1
0xf68 REVERT
---
0xf65: V1585 = 0x0
0xf68: REVERT 0x0 0x0
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xf69
[0xf69:0xfc4]
---
Predecessors: [0xf5e]
Successors: [0xfc5]
---
0xf69 JUMPDEST
0xf6a PUSH1 0x0
0xf6c DUP1
0xf6d SLOAD
0xf6e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf83 NOT
0xf84 AND
0xf85 PUSH1 0x1
0xf87 PUSH1 0xa0
0xf89 PUSH1 0x2
0xf8b EXP
0xf8c SUB
0xf8d DUP4
0xf8e DUP2
0xf8f AND
0xf90 SWAP2
0xf91 SWAP1
0xf92 SWAP2
0xf93 OR
0xf94 SWAP2
0xf95 DUP3
0xf96 SWAP1
0xf97 SSTORE
0xf98 AND
0xf99 PUSH32 0x1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada4
0xfba PUSH1 0x40
0xfbc MLOAD
0xfbd PUSH1 0x40
0xfbf MLOAD
0xfc0 DUP1
0xfc1 SWAP2
0xfc2 SUB
0xfc3 SWAP1
0xfc4 LOG2
---
0xf69: JUMPDEST 
0xf6a: V1586 = 0x0
0xf6d: V1587 = S[0x0]
0xf6e: V1588 = 0xffffffffffffffffffffffffffffffffffffffff
0xf83: V1589 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xf84: V1590 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1587
0xf85: V1591 = 0x1
0xf87: V1592 = 0xa0
0xf89: V1593 = 0x2
0xf8b: V1594 = EXP 0x2 0xa0
0xf8c: V1595 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf8f: V1596 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xf93: V1597 = OR V1596 V1590
0xf97: S[0x0] = V1597
0xf98: V1598 = AND 0xffffffffffffffffffffffffffffffffffffffff V1597
0xf99: V1599 = 0x1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada4
0xfba: V1600 = 0x40
0xfbc: V1601 = M[0x40]
0xfbd: V1602 = 0x40
0xfbf: V1603 = M[0x40]
0xfc2: V1604 = SUB V1601 V1603
0xfc4: LOG V1603 V1604 0x1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada4 V1598
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xfc5
[0xfc5:0xfc5]
---
Predecessors: [0xf69]
Successors: [0xfc6]
---
0xfc5 JUMPDEST
---
0xfc5: JUMPDEST 
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xfc6
[0xfc6:0xfc8]
---
Predecessors: [0xfc5]
Successors: [0x29b, 0x816]
---
0xfc6 JUMPDEST
0xfc7 POP
0xfc8 JUMP
---
0xfc6: JUMPDEST 
0xfc8: JUMP S1
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0xfc9
[0xfc9:0xfde]
---
Predecessors: [0x4b2]
Successors: [0xb6e]
---
0xfc9 JUMPDEST
0xfca PUSH1 0x0
0xfcc PUSH2 0xcc9
0xfcf DUP4
0xfd0 CALLER
0xfd1 DUP5
0xfd2 PUSH1 0x1
0xfd4 PUSH1 0x80
0xfd6 PUSH1 0x2
0xfd8 EXP
0xfd9 SUB
0xfda AND
0xfdb PUSH2 0xb6e
0xfde JUMP
---
0xfc9: JUMPDEST 
0xfca: V1605 = 0x0
0xfcc: V1606 = 0xcc9
0xfd0: V1607 = CALLER
0xfd2: V1608 = 0x1
0xfd4: V1609 = 0x80
0xfd6: V1610 = 0x2
0xfd8: V1611 = EXP 0x2 0x80
0xfd9: V1612 = SUB 0x100000000000000000000000000000000 0x1
0xfda: V1613 = AND 0xffffffffffffffffffffffffffffffff V476
0xfdb: V1614 = 0xb6e
0xfde: JUMP 0xb6e
---
Entry stack: [V12, 0x2bf, V468, V476]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0xcc9, S1, V1607, V1613]
Exit stack: [V12, 0x2bf, V468, V476, 0x0, 0xcc9, V468, V1607, V1613]

================================

Block 0xfdf
[0xfdf:0xfe1]
---
Predecessors: []
Successors: [0xfe2]
---
0xfdf JUMPDEST
0xfe0 SWAP1
0xfe1 POP
---
0xfdf: JUMPDEST 
---
Entry stack: []
Stack pops: 2
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0xfe2
[0xfe2:0xfe7]
---
Predecessors: [0xfdf]
Successors: []
Has unresolved jump.
---
0xfe2 JUMPDEST
0xfe3 SWAP3
0xfe4 SWAP2
0xfe5 POP
0xfe6 POP
0xfe7 JUMP
---
0xfe2: JUMPDEST 
0xfe7: JUMP S3
---
Entry stack: [S0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0xfe8
[0xfe8:0xff6]
---
Predecessors: [0x4f1]
Successors: [0x4f9]
---
0xfe8 JUMPDEST
0xfe9 PUSH1 0x1
0xfeb SLOAD
0xfec PUSH1 0x1
0xfee PUSH1 0xa0
0xff0 PUSH1 0x2
0xff2 EXP
0xff3 SUB
0xff4 AND
0xff5 DUP2
0xff6 JUMP
---
0xfe8: JUMPDEST 
0xfe9: V1615 = 0x1
0xfeb: V1616 = S[0x1]
0xfec: V1617 = 0x1
0xfee: V1618 = 0xa0
0xff0: V1619 = 0x2
0xff2: V1620 = EXP 0x2 0xa0
0xff3: V1621 = SUB 0x10000000000000000000000000000000000000000 0x1
0xff4: V1622 = AND 0xffffffffffffffffffffffffffffffffffffffff V1616
0xff6: JUMP 0x4f9
---
Entry stack: [V12, 0x4f9]
Stack pops: 1
Stack additions: [S0, V1622]
Exit stack: [V12, 0x4f9, V1622]

================================

Block 0xff7
[0xff7:0x100c]
---
Predecessors: [0x520]
Successors: [0x147d]
---
0xff7 JUMPDEST
0xff8 PUSH2 0x100d
0xffb CALLER
0xffc PUSH1 0x0
0xffe CALLDATALOAD
0xfff PUSH1 0x1
0x1001 PUSH1 0xe0
0x1003 PUSH1 0x2
0x1005 EXP
0x1006 SUB
0x1007 NOT
0x1008 AND
0x1009 PUSH2 0x147d
0x100c JUMP
---
0xff7: JUMPDEST 
0xff8: V1623 = 0x100d
0xffb: V1624 = CALLER
0xffc: V1625 = 0x0
0xffe: V1626 = CALLDATALOAD 0x0
0xfff: V1627 = 0x1
0x1001: V1628 = 0xe0
0x1003: V1629 = 0x2
0x1005: V1630 = EXP 0x2 0xe0
0x1006: V1631 = SUB 0x100000000000000000000000000000000000000000000000000000000 0x1
0x1007: V1632 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x1008: V1633 = AND 0xffffffff00000000000000000000000000000000000000000000000000000000 V1626
0x1009: V1634 = 0x147d
0x100c: JUMP 0x147d
---
Entry stack: [V12, 0x29b, V518]
Stack pops: 0
Stack additions: [0x100d, V1624, V1633]
Exit stack: [V12, 0x29b, V518, 0x100d, V1624, V1633]

================================

Block 0x100d
[0x100d:0x1013]
---
Predecessors: [0x919]
Successors: [0x1014, 0x1018]
---
0x100d JUMPDEST
0x100e ISZERO
0x100f ISZERO
0x1010 PUSH2 0x1018
0x1013 JUMPI
---
0x100d: JUMPDEST 
0x100e: V1635 = ISZERO S0
0x100f: V1636 = ISZERO V1635
0x1010: V1637 = 0x1018
0x1013: JUMPI 0x1018 V1636
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x1014
[0x1014:0x1017]
---
Predecessors: [0x100d]
Successors: []
---
0x1014 PUSH1 0x0
0x1016 DUP1
0x1017 REVERT
---
0x1014: V1638 = 0x0
0x1017: REVERT 0x0 0x0
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x1018
[0x1018:0x102a]
---
Predecessors: [0x100d]
Successors: [0x102b, 0x102f]
---
0x1018 JUMPDEST
0x1019 PUSH1 0x1
0x101b SLOAD
0x101c PUSH1 0xa0
0x101e PUSH1 0x2
0x1020 EXP
0x1021 SWAP1
0x1022 DIV
0x1023 PUSH1 0xff
0x1025 AND
0x1026 ISZERO
0x1027 PUSH2 0x102f
0x102a JUMPI
---
0x1018: JUMPDEST 
0x1019: V1639 = 0x1
0x101b: V1640 = S[0x1]
0x101c: V1641 = 0xa0
0x101e: V1642 = 0x2
0x1020: V1643 = EXP 0x2 0xa0
0x1022: V1644 = DIV V1640 0x10000000000000000000000000000000000000000
0x1023: V1645 = 0xff
0x1025: V1646 = AND 0xff V1644
0x1026: V1647 = ISZERO V1646
0x1027: V1648 = 0x102f
0x102a: JUMPI 0x102f V1647
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x102b
[0x102b:0x102e]
---
Predecessors: [0x1018]
Successors: []
---
0x102b PUSH1 0x0
0x102d DUP1
0x102e REVERT
---
0x102b: V1649 = 0x0
0x102e: REVERT 0x0 0x0
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x102f
[0x102f:0x10df]
---
Predecessors: [0x1018]
Successors: [0x10e0, 0x10e4]
---
0x102f JUMPDEST
0x1030 PUSH1 0x4
0x1032 CALLDATALOAD
0x1033 PUSH1 0x24
0x1035 CALLDATALOAD
0x1036 DUP1
0x1037 DUP3
0x1038 CALLER
0x1039 PUSH1 0x1
0x103b PUSH1 0xa0
0x103d PUSH1 0x2
0x103f EXP
0x1040 SUB
0x1041 AND
0x1042 PUSH1 0x0
0x1044 DUP1
0x1045 CALLDATALOAD
0x1046 PUSH1 0x1
0x1048 PUSH1 0xe0
0x104a PUSH1 0x2
0x104c EXP
0x104d SUB
0x104e NOT
0x104f AND
0x1050 SWAP1
0x1051 CALLVALUE
0x1052 SWAP1
0x1053 CALLDATASIZE
0x1054 PUSH1 0x40
0x1056 MLOAD
0x1057 DUP4
0x1058 DUP2
0x1059 MSTORE
0x105a PUSH1 0x40
0x105c PUSH1 0x20
0x105e DUP3
0x105f ADD
0x1060 DUP2
0x1061 DUP2
0x1062 MSTORE
0x1063 SWAP1
0x1064 DUP3
0x1065 ADD
0x1066 DUP4
0x1067 SWAP1
0x1068 MSTORE
0x1069 PUSH1 0x60
0x106b DUP3
0x106c ADD
0x106d DUP5
0x106e DUP5
0x106f DUP1
0x1070 DUP3
0x1071 DUP5
0x1072 CALLDATACOPY
0x1073 DUP3
0x1074 ADD
0x1075 SWAP2
0x1076 POP
0x1077 POP
0x1078 SWAP5
0x1079 POP
0x107a POP
0x107b POP
0x107c POP
0x107d POP
0x107e PUSH1 0x40
0x1080 MLOAD
0x1081 DUP1
0x1082 SWAP2
0x1083 SUB
0x1084 SWAP1
0x1085 LOG4
0x1086 PUSH1 0x5
0x1088 SLOAD
0x1089 PUSH1 0x1
0x108b PUSH1 0xa0
0x108d PUSH1 0x2
0x108f EXP
0x1090 SUB
0x1091 AND
0x1092 PUSH4 0x7261e469
0x1097 CALLER
0x1098 DUP6
0x1099 PUSH1 0x40
0x109b MLOAD
0x109c PUSH1 0xe0
0x109e PUSH1 0x2
0x10a0 EXP
0x10a1 PUSH4 0xffffffff
0x10a6 DUP6
0x10a7 AND
0x10a8 MUL
0x10a9 DUP2
0x10aa MSTORE
0x10ab PUSH1 0x1
0x10ad PUSH1 0xa0
0x10af PUSH1 0x2
0x10b1 EXP
0x10b2 SUB
0x10b3 SWAP1
0x10b4 SWAP3
0x10b5 AND
0x10b6 PUSH1 0x4
0x10b8 DUP4
0x10b9 ADD
0x10ba MSTORE
0x10bb PUSH1 0x1
0x10bd PUSH1 0x80
0x10bf PUSH1 0x2
0x10c1 EXP
0x10c2 SUB
0x10c3 AND
0x10c4 PUSH1 0x24
0x10c6 DUP3
0x10c7 ADD
0x10c8 MSTORE
0x10c9 PUSH1 0x44
0x10cb ADD
0x10cc PUSH1 0x0
0x10ce PUSH1 0x40
0x10d0 MLOAD
0x10d1 DUP1
0x10d2 DUP4
0x10d3 SUB
0x10d4 DUP2
0x10d5 PUSH1 0x0
0x10d7 DUP8
0x10d8 DUP1
0x10d9 EXTCODESIZE
0x10da ISZERO
0x10db ISZERO
0x10dc PUSH2 0x10e4
0x10df JUMPI
---
0x102f: JUMPDEST 
0x1030: V1650 = 0x4
0x1032: V1651 = CALLDATALOAD 0x4
0x1033: V1652 = 0x24
0x1035: V1653 = CALLDATALOAD 0x24
0x1038: V1654 = CALLER
0x1039: V1655 = 0x1
0x103b: V1656 = 0xa0
0x103d: V1657 = 0x2
0x103f: V1658 = EXP 0x2 0xa0
0x1040: V1659 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1041: V1660 = AND 0xffffffffffffffffffffffffffffffffffffffff V1654
0x1042: V1661 = 0x0
0x1045: V1662 = CALLDATALOAD 0x0
0x1046: V1663 = 0x1
0x1048: V1664 = 0xe0
0x104a: V1665 = 0x2
0x104c: V1666 = EXP 0x2 0xe0
0x104d: V1667 = SUB 0x100000000000000000000000000000000000000000000000000000000 0x1
0x104e: V1668 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x104f: V1669 = AND 0xffffffff00000000000000000000000000000000000000000000000000000000 V1662
0x1051: V1670 = CALLVALUE
0x1053: V1671 = CALLDATASIZE
0x1054: V1672 = 0x40
0x1056: V1673 = M[0x40]
0x1059: M[V1673] = V1670
0x105a: V1674 = 0x40
0x105c: V1675 = 0x20
0x105f: V1676 = ADD V1673 0x20
0x1062: M[V1676] = 0x40
0x1065: V1677 = ADD V1673 0x40
0x1068: M[V1677] = V1671
0x1069: V1678 = 0x60
0x106c: V1679 = ADD V1673 0x60
0x1072: CALLDATACOPY V1679 0x0 V1671
0x1074: V1680 = ADD V1679 V1671
0x107e: V1681 = 0x40
0x1080: V1682 = M[0x40]
0x1083: V1683 = SUB V1680 V1682
0x1085: LOG V1682 V1683 V1669 V1660 V1651 V1653
0x1086: V1684 = 0x5
0x1088: V1685 = S[0x5]
0x1089: V1686 = 0x1
0x108b: V1687 = 0xa0
0x108d: V1688 = 0x2
0x108f: V1689 = EXP 0x2 0xa0
0x1090: V1690 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1091: V1691 = AND 0xffffffffffffffffffffffffffffffffffffffff V1685
0x1092: V1692 = 0x7261e469
0x1097: V1693 = CALLER
0x1099: V1694 = 0x40
0x109b: V1695 = M[0x40]
0x109c: V1696 = 0xe0
0x109e: V1697 = 0x2
0x10a0: V1698 = EXP 0x2 0xe0
0x10a1: V1699 = 0xffffffff
0x10a7: V1700 = AND 0x7261e469 0xffffffff
0x10a8: V1701 = MUL 0x7261e469 0x100000000000000000000000000000000000000000000000000000000
0x10aa: M[V1695] = 0x7261e46900000000000000000000000000000000000000000000000000000000
0x10ab: V1702 = 0x1
0x10ad: V1703 = 0xa0
0x10af: V1704 = 0x2
0x10b1: V1705 = EXP 0x2 0xa0
0x10b2: V1706 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10b5: V1707 = AND V1693 0xffffffffffffffffffffffffffffffffffffffff
0x10b6: V1708 = 0x4
0x10b9: V1709 = ADD V1695 0x4
0x10ba: M[V1709] = V1707
0x10bb: V1710 = 0x1
0x10bd: V1711 = 0x80
0x10bf: V1712 = 0x2
0x10c1: V1713 = EXP 0x2 0x80
0x10c2: V1714 = SUB 0x100000000000000000000000000000000 0x1
0x10c3: V1715 = AND 0xffffffffffffffffffffffffffffffff S0
0x10c4: V1716 = 0x24
0x10c7: V1717 = ADD V1695 0x24
0x10c8: M[V1717] = V1715
0x10c9: V1718 = 0x44
0x10cb: V1719 = ADD 0x44 V1695
0x10cc: V1720 = 0x0
0x10ce: V1721 = 0x40
0x10d0: V1722 = M[0x40]
0x10d3: V1723 = SUB V1719 V1722
0x10d5: V1724 = 0x0
0x10d9: V1725 = EXTCODESIZE V1691
0x10da: V1726 = ISZERO V1725
0x10db: V1727 = ISZERO V1726
0x10dc: V1728 = 0x10e4
0x10df: JUMPI 0x10e4 V1727
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, V1651, V1653, V1691, 0x7261e469, V1719, 0x0, V1722, V1723, V1722, 0x0, V1691]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0, V1651, V1653, V1691, 0x7261e469, V1719, 0x0, V1722, V1723, V1722, 0x0, V1691]

================================

Block 0x10e0
[0x10e0:0x10e3]
---
Predecessors: [0x102f]
Successors: []
---
0x10e0 PUSH1 0x0
0x10e2 DUP1
0x10e3 REVERT
---
0x10e0: V1729 = 0x0
0x10e3: REVERT 0x0 0x0
---
Entry stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, V1651, V1653, V1691, 0x7261e469, V1719, 0x0, V1722, V1723, V1722, 0x0, V1691]
Stack pops: 0
Stack additions: []
Exit stack: [S19, S18, S17, S16, S15, S14, S13, S12, S11, V1651, V1653, V1691, 0x7261e469, V1719, 0x0, V1722, V1723, V1722, 0x0, V1691]

================================

Block 0x10e4
[0x10e4:0x10f0]
---
Predecessors: [0x102f]
Successors: [0x10f1, 0x10f5]
---
0x10e4 JUMPDEST
0x10e5 PUSH2 0x2c6
0x10e8 GAS
0x10e9 SUB
0x10ea CALL
0x10eb ISZERO
0x10ec ISZERO
0x10ed PUSH2 0x10f5
0x10f0 JUMPI
---
0x10e4: JUMPDEST 
0x10e5: V1730 = 0x2c6
0x10e8: V1731 = GAS
0x10e9: V1732 = SUB V1731 0x2c6
0x10ea: V1733 = CALL V1732 V1691 0x0 V1722 V1723 V1722 0x0
0x10eb: V1734 = ISZERO V1733
0x10ec: V1735 = ISZERO V1734
0x10ed: V1736 = 0x10f5
0x10f0: JUMPI 0x10f5 V1735
---
Entry stack: [V12, S19, S18, S17, S16, S15, S14, S13, S12, S11, V1651, V1653, V1691, 0x7261e469, V1719, 0x0, V1722, V1723, V1722, 0x0, V1691]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S19, S18, S17, S16, S15, S14, S13, S12, S11, V1651, V1653, V1691, 0x7261e469, V1719]

================================

Block 0x10f1
[0x10f1:0x10f4]
---
Predecessors: [0x10e4]
Successors: []
---
0x10f1 PUSH1 0x0
0x10f3 DUP1
0x10f4 REVERT
---
0x10f1: V1737 = 0x0
0x10f4: REVERT 0x0 0x0
---
Entry stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x7261e469, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x7261e469, S0]

================================

Block 0x10f5
[0x10f5:0x10f8]
---
Predecessors: [0x10e4]
Successors: [0x10f9]
---
0x10f5 JUMPDEST
0x10f6 POP
0x10f7 POP
0x10f8 POP
---
0x10f5: JUMPDEST 
---
Entry stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x7261e469, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3]

================================

Block 0x10f9
[0x10f9:0x10f9]
---
Predecessors: [0x10f5]
Successors: [0x10fa]
---
0x10f9 JUMPDEST
---
0x10f9: JUMPDEST 
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x10fa
[0x10fa:0x10fc]
---
Predecessors: [0x10f9]
Successors: [0x10fd]
---
0x10fa JUMPDEST
0x10fb POP
0x10fc POP
---
0x10fa: JUMPDEST 
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x10fd
[0x10fd:0x10fd]
---
Predecessors: [0x10fa]
Successors: [0x10fe]
---
0x10fd JUMPDEST
---
0x10fd: JUMPDEST 
---
Entry stack: [V12, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x10fe
[0x10fe:0x1100]
---
Predecessors: [0x10fd]
Successors: [0x29b, 0x816]
---
0x10fe JUMPDEST
0x10ff POP
0x1100 JUMP
---
0x10fe: JUMPDEST 
0x1100: JUMP S1
---
Entry stack: [V12, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, S6, S5, S4, S3, S2]

================================

Block 0x1101
[0x1101:0x1106]
---
Predecessors: [0x541]
Successors: [0x328]
---
0x1101 JUMPDEST
0x1102 PUSH1 0x2
0x1104 SLOAD
0x1105 DUP2
0x1106 JUMP
---
0x1101: JUMPDEST 
0x1102: V1738 = 0x2
0x1104: V1739 = S[0x2]
0x1106: JUMP 0x328
---
Entry stack: [V12, 0x328]
Stack pops: 1
Stack additions: [S0, V1739]
Exit stack: [V12, 0x328, V1739]

================================

Block 0x1107
[0x1107:0x111e]
---
Predecessors: [0x566, 0xcb4]
Successors: [0x111f, 0x1123]
---
0x1107 JUMPDEST
0x1108 PUSH1 0x1
0x110a SLOAD
0x110b PUSH1 0x0
0x110d SWAP1
0x110e DUP2
0x110f SWAP1
0x1110 PUSH1 0xa0
0x1112 PUSH1 0x2
0x1114 EXP
0x1115 SWAP1
0x1116 DIV
0x1117 PUSH1 0xff
0x1119 AND
0x111a ISZERO
0x111b PUSH2 0x1123
0x111e JUMPI
---
0x1107: JUMPDEST 
0x1108: V1740 = 0x1
0x110a: V1741 = S[0x1]
0x110b: V1742 = 0x0
0x1110: V1743 = 0xa0
0x1112: V1744 = 0x2
0x1114: V1745 = EXP 0x2 0xa0
0x1116: V1746 = DIV V1741 0x10000000000000000000000000000000000000000
0x1117: V1747 = 0xff
0x1119: V1748 = AND 0xff V1746
0x111a: V1749 = ISZERO V1748
0x111b: V1750 = 0x1123
0x111e: JUMPI 0x1123 V1749
---
Entry stack: [V12, 0x2bf, V350, V358, S3, {0x2bf, 0xcc9}, S1, S0]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0x2bf, V350, V358, S3, {0x2bf, 0xcc9}, S1, S0, 0x0, 0x0]

================================

Block 0x111f
[0x111f:0x1122]
---
Predecessors: [0x1107]
Successors: []
---
0x111f PUSH1 0x0
0x1121 DUP1
0x1122 REVERT
---
0x111f: V1751 = 0x0
0x1122: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2bf, V350, V358, S5, {0x2bf, 0xcc9}, S3, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2bf, V350, V358, S5, {0x2bf, 0xcc9}, S3, S2, 0x0, 0x0]

================================

Block 0x1123
[0x1123:0x11e0]
---
Predecessors: [0x1107]
Successors: [0x11e1, 0x11e5]
---
0x1123 JUMPDEST
0x1124 PUSH1 0x4
0x1126 CALLDATALOAD
0x1127 PUSH1 0x24
0x1129 CALLDATALOAD
0x112a DUP1
0x112b DUP3
0x112c CALLER
0x112d PUSH1 0x1
0x112f PUSH1 0xa0
0x1131 PUSH1 0x2
0x1133 EXP
0x1134 SUB
0x1135 AND
0x1136 PUSH1 0x0
0x1138 DUP1
0x1139 CALLDATALOAD
0x113a PUSH1 0x1
0x113c PUSH1 0xe0
0x113e PUSH1 0x2
0x1140 EXP
0x1141 SUB
0x1142 NOT
0x1143 AND
0x1144 SWAP1
0x1145 CALLVALUE
0x1146 SWAP1
0x1147 CALLDATASIZE
0x1148 PUSH1 0x40
0x114a MLOAD
0x114b DUP4
0x114c DUP2
0x114d MSTORE
0x114e PUSH1 0x40
0x1150 PUSH1 0x20
0x1152 DUP3
0x1153 ADD
0x1154 DUP2
0x1155 DUP2
0x1156 MSTORE
0x1157 SWAP1
0x1158 DUP3
0x1159 ADD
0x115a DUP4
0x115b SWAP1
0x115c MSTORE
0x115d PUSH1 0x60
0x115f DUP3
0x1160 ADD
0x1161 DUP5
0x1162 DUP5
0x1163 DUP1
0x1164 DUP3
0x1165 DUP5
0x1166 CALLDATACOPY
0x1167 DUP3
0x1168 ADD
0x1169 SWAP2
0x116a POP
0x116b POP
0x116c SWAP5
0x116d POP
0x116e POP
0x116f POP
0x1170 POP
0x1171 POP
0x1172 PUSH1 0x40
0x1174 MLOAD
0x1175 DUP1
0x1176 SWAP2
0x1177 SUB
0x1178 SWAP1
0x1179 LOG4
0x117a PUSH1 0x5
0x117c SLOAD
0x117d PUSH1 0x1
0x117f PUSH1 0xa0
0x1181 PUSH1 0x2
0x1183 EXP
0x1184 SUB
0x1185 AND
0x1186 PUSH4 0xbeabacc8
0x118b CALLER
0x118c DUP9
0x118d DUP9
0x118e PUSH1 0x0
0x1190 PUSH1 0x40
0x1192 MLOAD
0x1193 PUSH1 0x20
0x1195 ADD
0x1196 MSTORE
0x1197 PUSH1 0x40
0x1199 MLOAD
0x119a PUSH1 0xe0
0x119c PUSH1 0x2
0x119e EXP
0x119f PUSH4 0xffffffff
0x11a4 DUP7
0x11a5 AND
0x11a6 MUL
0x11a7 DUP2
0x11a8 MSTORE
0x11a9 PUSH1 0x1
0x11ab PUSH1 0xa0
0x11ad PUSH1 0x2
0x11af EXP
0x11b0 SUB
0x11b1 SWAP4
0x11b2 DUP5
0x11b3 AND
0x11b4 PUSH1 0x4
0x11b6 DUP3
0x11b7 ADD
0x11b8 MSTORE
0x11b9 SWAP2
0x11ba SWAP1
0x11bb SWAP3
0x11bc AND
0x11bd PUSH1 0x24
0x11bf DUP3
0x11c0 ADD
0x11c1 MSTORE
0x11c2 PUSH1 0x44
0x11c4 DUP2
0x11c5 ADD
0x11c6 SWAP2
0x11c7 SWAP1
0x11c8 SWAP2
0x11c9 MSTORE
0x11ca PUSH1 0x64
0x11cc ADD
0x11cd PUSH1 0x20
0x11cf PUSH1 0x40
0x11d1 MLOAD
0x11d2 DUP1
0x11d3 DUP4
0x11d4 SUB
0x11d5 DUP2
0x11d6 PUSH1 0x0
0x11d8 DUP8
0x11d9 DUP1
0x11da EXTCODESIZE
0x11db ISZERO
0x11dc ISZERO
0x11dd PUSH2 0x11e5
0x11e0 JUMPI
---
0x1123: JUMPDEST 
0x1124: V1752 = 0x4
0x1126: V1753 = CALLDATALOAD 0x4
0x1127: V1754 = 0x24
0x1129: V1755 = CALLDATALOAD 0x24
0x112c: V1756 = CALLER
0x112d: V1757 = 0x1
0x112f: V1758 = 0xa0
0x1131: V1759 = 0x2
0x1133: V1760 = EXP 0x2 0xa0
0x1134: V1761 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1135: V1762 = AND 0xffffffffffffffffffffffffffffffffffffffff V1756
0x1136: V1763 = 0x0
0x1139: V1764 = CALLDATALOAD 0x0
0x113a: V1765 = 0x1
0x113c: V1766 = 0xe0
0x113e: V1767 = 0x2
0x1140: V1768 = EXP 0x2 0xe0
0x1141: V1769 = SUB 0x100000000000000000000000000000000000000000000000000000000 0x1
0x1142: V1770 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x1143: V1771 = AND 0xffffffff00000000000000000000000000000000000000000000000000000000 V1764
0x1145: V1772 = CALLVALUE
0x1147: V1773 = CALLDATASIZE
0x1148: V1774 = 0x40
0x114a: V1775 = M[0x40]
0x114d: M[V1775] = V1772
0x114e: V1776 = 0x40
0x1150: V1777 = 0x20
0x1153: V1778 = ADD V1775 0x20
0x1156: M[V1778] = 0x40
0x1159: V1779 = ADD V1775 0x40
0x115c: M[V1779] = V1773
0x115d: V1780 = 0x60
0x1160: V1781 = ADD V1775 0x60
0x1166: CALLDATACOPY V1781 0x0 V1773
0x1168: V1782 = ADD V1781 V1773
0x1172: V1783 = 0x40
0x1174: V1784 = M[0x40]
0x1177: V1785 = SUB V1782 V1784
0x1179: LOG V1784 V1785 V1771 V1762 V1753 V1755
0x117a: V1786 = 0x5
0x117c: V1787 = S[0x5]
0x117d: V1788 = 0x1
0x117f: V1789 = 0xa0
0x1181: V1790 = 0x2
0x1183: V1791 = EXP 0x2 0xa0
0x1184: V1792 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1185: V1793 = AND 0xffffffffffffffffffffffffffffffffffffffff V1787
0x1186: V1794 = 0xbeabacc8
0x118b: V1795 = CALLER
0x118e: V1796 = 0x0
0x1190: V1797 = 0x40
0x1192: V1798 = M[0x40]
0x1193: V1799 = 0x20
0x1195: V1800 = ADD 0x20 V1798
0x1196: M[V1800] = 0x0
0x1197: V1801 = 0x40
0x1199: V1802 = M[0x40]
0x119a: V1803 = 0xe0
0x119c: V1804 = 0x2
0x119e: V1805 = EXP 0x2 0xe0
0x119f: V1806 = 0xffffffff
0x11a5: V1807 = AND 0xbeabacc8 0xffffffff
0x11a6: V1808 = MUL 0xbeabacc8 0x100000000000000000000000000000000000000000000000000000000
0x11a8: M[V1802] = 0xbeabacc800000000000000000000000000000000000000000000000000000000
0x11a9: V1809 = 0x1
0x11ab: V1810 = 0xa0
0x11ad: V1811 = 0x2
0x11af: V1812 = EXP 0x2 0xa0
0x11b0: V1813 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11b3: V1814 = AND 0xffffffffffffffffffffffffffffffffffffffff V1795
0x11b4: V1815 = 0x4
0x11b7: V1816 = ADD V1802 0x4
0x11b8: M[V1816] = V1814
0x11bc: V1817 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x11bd: V1818 = 0x24
0x11c0: V1819 = ADD V1802 0x24
0x11c1: M[V1819] = V1817
0x11c2: V1820 = 0x44
0x11c5: V1821 = ADD V1802 0x44
0x11c9: M[V1821] = S2
0x11ca: V1822 = 0x64
0x11cc: V1823 = ADD 0x64 V1802
0x11cd: V1824 = 0x20
0x11cf: V1825 = 0x40
0x11d1: V1826 = M[0x40]
0x11d4: V1827 = SUB V1823 V1826
0x11d6: V1828 = 0x0
0x11da: V1829 = EXTCODESIZE V1793
0x11db: V1830 = ISZERO V1829
0x11dc: V1831 = ISZERO V1830
0x11dd: V1832 = 0x11e5
0x11e0: JUMPI 0x11e5 V1831
---
Entry stack: [V12, 0x2bf, V350, V358, S5, {0x2bf, 0xcc9}, S3, S2, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V1753, V1755, V1793, 0xbeabacc8, V1823, 0x20, V1826, V1827, V1826, 0x0, V1793]
Exit stack: [V12, 0x2bf, V350, V358, S5, {0x2bf, 0xcc9}, S3, S2, 0x0, 0x0, V1753, V1755, V1793, 0xbeabacc8, V1823, 0x20, V1826, V1827, V1826, 0x0, V1793]

================================

Block 0x11e1
[0x11e1:0x11e4]
---
Predecessors: [0x1123]
Successors: []
---
0x11e1 PUSH1 0x0
0x11e3 DUP1
0x11e4 REVERT
---
0x11e1: V1833 = 0x0
0x11e4: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2bf, V350, V358, S16, {0x2bf, 0xcc9}, S14, S13, 0x0, 0x0, V1753, V1755, V1793, 0xbeabacc8, V1823, 0x20, V1826, V1827, V1826, 0x0, V1793]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2bf, V350, V358, S16, {0x2bf, 0xcc9}, S14, S13, 0x0, 0x0, V1753, V1755, V1793, 0xbeabacc8, V1823, 0x20, V1826, V1827, V1826, 0x0, V1793]

================================

Block 0x11e5
[0x11e5:0x11f1]
---
Predecessors: [0x1123]
Successors: [0x11f2, 0x11f6]
---
0x11e5 JUMPDEST
0x11e6 PUSH2 0x2c6
0x11e9 GAS
0x11ea SUB
0x11eb CALL
0x11ec ISZERO
0x11ed ISZERO
0x11ee PUSH2 0x11f6
0x11f1 JUMPI
---
0x11e5: JUMPDEST 
0x11e6: V1834 = 0x2c6
0x11e9: V1835 = GAS
0x11ea: V1836 = SUB V1835 0x2c6
0x11eb: V1837 = CALL V1836 V1793 0x0 V1826 V1827 V1826 0x20
0x11ec: V1838 = ISZERO V1837
0x11ed: V1839 = ISZERO V1838
0x11ee: V1840 = 0x11f6
0x11f1: JUMPI 0x11f6 V1839
---
Entry stack: [V12, 0x2bf, V350, V358, S16, {0x2bf, 0xcc9}, S14, S13, 0x0, 0x0, V1753, V1755, V1793, 0xbeabacc8, V1823, 0x20, V1826, V1827, V1826, 0x0, V1793]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x2bf, V350, V358, S16, {0x2bf, 0xcc9}, S14, S13, 0x0, 0x0, V1753, V1755, V1793, 0xbeabacc8, V1823]

================================

Block 0x11f2
[0x11f2:0x11f5]
---
Predecessors: [0x11e5]
Successors: []
---
0x11f2 PUSH1 0x0
0x11f4 DUP1
0x11f5 REVERT
---
0x11f2: V1841 = 0x0
0x11f5: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2bf, V350, V358, S10, {0x2bf, 0xcc9}, S8, S7, 0x0, 0x0, S4, S3, S2, 0xbeabacc8, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2bf, V350, V358, S10, {0x2bf, 0xcc9}, S8, S7, 0x0, 0x0, S4, S3, S2, 0xbeabacc8, S0]

================================

Block 0x11f6
[0x11f6:0x123a]
---
Predecessors: [0x11e5]
Successors: [0x123b]
---
0x11f6 JUMPDEST
0x11f7 POP
0x11f8 POP
0x11f9 POP
0x11fa PUSH1 0x40
0x11fc MLOAD
0x11fd DUP1
0x11fe MLOAD
0x11ff SWAP1
0x1200 POP
0x1201 SWAP3
0x1202 POP
0x1203 DUP6
0x1204 PUSH1 0x1
0x1206 PUSH1 0xa0
0x1208 PUSH1 0x2
0x120a EXP
0x120b SUB
0x120c AND
0x120d CALLER
0x120e PUSH1 0x1
0x1210 PUSH1 0xa0
0x1212 PUSH1 0x2
0x1214 EXP
0x1215 SUB
0x1216 AND
0x1217 PUSH1 0x0
0x1219 DUP1
0x121a MLOAD
0x121b PUSH1 0x20
0x121d PUSH2 0x1702
0x1220 DUP4
0x1221 CODECOPY
0x1222 DUP2
0x1223 MLOAD
0x1224 SWAP2
0x1225 MSTORE
0x1226 DUP8
0x1227 PUSH1 0x40
0x1229 MLOAD
0x122a SWAP1
0x122b DUP2
0x122c MSTORE
0x122d PUSH1 0x20
0x122f ADD
0x1230 PUSH1 0x40
0x1232 MLOAD
0x1233 DUP1
0x1234 SWAP2
0x1235 SUB
0x1236 SWAP1
0x1237 LOG3
0x1238 DUP3
0x1239 SWAP4
0x123a POP
---
0x11f6: JUMPDEST 
0x11fa: V1842 = 0x40
0x11fc: V1843 = M[0x40]
0x11fe: V1844 = M[V1843]
0x1204: V1845 = 0x1
0x1206: V1846 = 0xa0
0x1208: V1847 = 0x2
0x120a: V1848 = EXP 0x2 0xa0
0x120b: V1849 = SUB 0x10000000000000000000000000000000000000000 0x1
0x120c: V1850 = AND 0xffffffffffffffffffffffffffffffffffffffff S8
0x120d: V1851 = CALLER
0x120e: V1852 = 0x1
0x1210: V1853 = 0xa0
0x1212: V1854 = 0x2
0x1214: V1855 = EXP 0x2 0xa0
0x1215: V1856 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1216: V1857 = AND 0xffffffffffffffffffffffffffffffffffffffff V1851
0x1217: V1858 = 0x0
0x121a: V1859 = M[0x0]
0x121b: V1860 = 0x20
0x121d: V1861 = 0x1702
0x1221: CODECOPY 0x0 0x1702 0x20
0x1223: V1862 = M[0x0]
0x1225: M[0x0] = V1859
0x1227: V1863 = 0x40
0x1229: V1864 = M[0x40]
0x122c: M[V1864] = S7
0x122d: V1865 = 0x20
0x122f: V1866 = ADD 0x20 V1864
0x1230: V1867 = 0x40
0x1232: V1868 = M[0x40]
0x1235: V1869 = SUB V1866 V1868
0x1237: LOG V1868 V1869 V1862 V1857 V1850
---
Entry stack: [V12, 0x2bf, V350, V358, S10, {0x2bf, 0xcc9}, S8, S7, 0x0, 0x0, S4, S3, S2, 0xbeabacc8, S0]
Stack pops: 9
Stack additions: [S8, S7, V1844, V1844, S4, S3]
Exit stack: [V12, 0x2bf, V350, V358, S10, {0x2bf, 0xcc9}, S8, S7, V1844, V1844, S4, S3]

================================

Block 0x123b
[0x123b:0x123b]
---
Predecessors: [0x11f6]
Successors: [0x123c]
---
0x123b JUMPDEST
---
0x123b: JUMPDEST 
---
Entry stack: [V12, 0x2bf, V350, V358, S7, {0x2bf, 0xcc9}, S5, S4, V1844, V1844, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2bf, V350, V358, S7, {0x2bf, 0xcc9}, S5, S4, V1844, V1844, S1, S0]

================================

Block 0x123c
[0x123c:0x123e]
---
Predecessors: [0x123b]
Successors: [0x123f]
---
0x123c JUMPDEST
0x123d POP
0x123e POP
---
0x123c: JUMPDEST 
---
Entry stack: [V12, 0x2bf, V350, V358, S7, {0x2bf, 0xcc9}, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x2bf, V350, V358, S7, {0x2bf, 0xcc9}, S5, S4, S3, S2]

================================

Block 0x123f
[0x123f:0x1245]
---
Predecessors: [0x123c]
Successors: [0x2bf, 0xcc9]
---
0x123f JUMPDEST
0x1240 POP
0x1241 SWAP3
0x1242 SWAP2
0x1243 POP
0x1244 POP
0x1245 JUMP
---
0x123f: JUMPDEST 
0x1245: JUMP {0x2bf, 0xcc9}
---
Entry stack: [V12, 0x2bf, V350, V358, S5, {0x2bf, 0xcc9}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V12, 0x2bf, V350, V358, S5, S1]

================================

Block 0x1246
[0x1246:0x125b]
---
Predecessors: [0x59c]
Successors: [0x147d]
---
0x1246 JUMPDEST
0x1247 PUSH2 0x125c
0x124a CALLER
0x124b PUSH1 0x0
0x124d CALLDATALOAD
0x124e PUSH1 0x1
0x1250 PUSH1 0xe0
0x1252 PUSH1 0x2
0x1254 EXP
0x1255 SUB
0x1256 NOT
0x1257 AND
0x1258 PUSH2 0x147d
0x125b JUMP
---
0x1246: JUMPDEST 
0x1247: V1870 = 0x125c
0x124a: V1871 = CALLER
0x124b: V1872 = 0x0
0x124d: V1873 = CALLDATALOAD 0x0
0x124e: V1874 = 0x1
0x1250: V1875 = 0xe0
0x1252: V1876 = 0x2
0x1254: V1877 = EXP 0x2 0xe0
0x1255: V1878 = SUB 0x100000000000000000000000000000000000000000000000000000000 0x1
0x1256: V1879 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x1257: V1880 = AND 0xffffffff00000000000000000000000000000000000000000000000000000000 V1873
0x1258: V1881 = 0x147d
0x125b: JUMP 0x147d
---
Entry stack: [V12, 0x29b]
Stack pops: 0
Stack additions: [0x125c, V1871, V1880]
Exit stack: [V12, 0x29b, 0x125c, V1871, V1880]

================================

Block 0x125c
[0x125c:0x1262]
---
Predecessors: [0x919]
Successors: [0x1263, 0x1267]
---
0x125c JUMPDEST
0x125d ISZERO
0x125e ISZERO
0x125f PUSH2 0x1267
0x1262 JUMPI
---
0x125c: JUMPDEST 
0x125d: V1882 = ISZERO S0
0x125e: V1883 = ISZERO V1882
0x125f: V1884 = 0x1267
0x1262: JUMPI 0x1267 V1883
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x1263
[0x1263:0x1266]
---
Predecessors: [0x125c]
Successors: []
---
0x1263 PUSH1 0x0
0x1265 DUP1
0x1266 REVERT
---
0x1263: V1885 = 0x0
0x1266: REVERT 0x0 0x0
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x1267
[0x1267:0x12db]
---
Predecessors: [0x125c]
Successors: [0x12dc]
---
0x1267 JUMPDEST
0x1268 PUSH1 0x4
0x126a CALLDATALOAD
0x126b PUSH1 0x24
0x126d CALLDATALOAD
0x126e DUP1
0x126f DUP3
0x1270 CALLER
0x1271 PUSH1 0x1
0x1273 PUSH1 0xa0
0x1275 PUSH1 0x2
0x1277 EXP
0x1278 SUB
0x1279 AND
0x127a PUSH1 0x0
0x127c DUP1
0x127d CALLDATALOAD
0x127e PUSH1 0x1
0x1280 PUSH1 0xe0
0x1282 PUSH1 0x2
0x1284 EXP
0x1285 SUB
0x1286 NOT
0x1287 AND
0x1288 SWAP1
0x1289 CALLVALUE
0x128a SWAP1
0x128b CALLDATASIZE
0x128c PUSH1 0x40
0x128e MLOAD
0x128f DUP4
0x1290 DUP2
0x1291 MSTORE
0x1292 PUSH1 0x40
0x1294 PUSH1 0x20
0x1296 DUP3
0x1297 ADD
0x1298 DUP2
0x1299 DUP2
0x129a MSTORE
0x129b SWAP1
0x129c DUP3
0x129d ADD
0x129e DUP4
0x129f SWAP1
0x12a0 MSTORE
0x12a1 PUSH1 0x60
0x12a3 DUP3
0x12a4 ADD
0x12a5 DUP5
0x12a6 DUP5
0x12a7 DUP1
0x12a8 DUP3
0x12a9 DUP5
0x12aa CALLDATACOPY
0x12ab DUP3
0x12ac ADD
0x12ad SWAP2
0x12ae POP
0x12af POP
0x12b0 SWAP5
0x12b1 POP
0x12b2 POP
0x12b3 POP
0x12b4 POP
0x12b5 POP
0x12b6 PUSH1 0x40
0x12b8 MLOAD
0x12b9 DUP1
0x12ba SWAP2
0x12bb SUB
0x12bc SWAP1
0x12bd LOG4
0x12be PUSH1 0x1
0x12c0 DUP1
0x12c1 SLOAD
0x12c2 PUSH21 0xff0000000000000000000000000000000000000000
0x12d8 NOT
0x12d9 AND
0x12da SWAP1
0x12db SSTORE
---
0x1267: JUMPDEST 
0x1268: V1886 = 0x4
0x126a: V1887 = CALLDATALOAD 0x4
0x126b: V1888 = 0x24
0x126d: V1889 = CALLDATALOAD 0x24
0x1270: V1890 = CALLER
0x1271: V1891 = 0x1
0x1273: V1892 = 0xa0
0x1275: V1893 = 0x2
0x1277: V1894 = EXP 0x2 0xa0
0x1278: V1895 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1279: V1896 = AND 0xffffffffffffffffffffffffffffffffffffffff V1890
0x127a: V1897 = 0x0
0x127d: V1898 = CALLDATALOAD 0x0
0x127e: V1899 = 0x1
0x1280: V1900 = 0xe0
0x1282: V1901 = 0x2
0x1284: V1902 = EXP 0x2 0xe0
0x1285: V1903 = SUB 0x100000000000000000000000000000000000000000000000000000000 0x1
0x1286: V1904 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x1287: V1905 = AND 0xffffffff00000000000000000000000000000000000000000000000000000000 V1898
0x1289: V1906 = CALLVALUE
0x128b: V1907 = CALLDATASIZE
0x128c: V1908 = 0x40
0x128e: V1909 = M[0x40]
0x1291: M[V1909] = V1906
0x1292: V1910 = 0x40
0x1294: V1911 = 0x20
0x1297: V1912 = ADD V1909 0x20
0x129a: M[V1912] = 0x40
0x129d: V1913 = ADD V1909 0x40
0x12a0: M[V1913] = V1907
0x12a1: V1914 = 0x60
0x12a4: V1915 = ADD V1909 0x60
0x12aa: CALLDATACOPY V1915 0x0 V1907
0x12ac: V1916 = ADD V1915 V1907
0x12b6: V1917 = 0x40
0x12b8: V1918 = M[0x40]
0x12bb: V1919 = SUB V1916 V1918
0x12bd: LOG V1918 V1919 V1905 V1896 V1887 V1889
0x12be: V1920 = 0x1
0x12c1: V1921 = S[0x1]
0x12c2: V1922 = 0xff0000000000000000000000000000000000000000
0x12d8: V1923 = NOT 0xff0000000000000000000000000000000000000000
0x12d9: V1924 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V1921
0x12db: S[0x1] = V1924
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [V1887, V1889]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0, V1887, V1889]

================================

Block 0x12dc
[0x12dc:0x12dc]
---
Predecessors: [0x1267]
Successors: [0x12dd]
---
0x12dc JUMPDEST
---
0x12dc: JUMPDEST 
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, V1887, V1889]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, V1887, V1889]

================================

Block 0x12dd
[0x12dd:0x12df]
---
Predecessors: [0x12dc]
Successors: [0x12e0]
---
0x12dd JUMPDEST
0x12de POP
0x12df POP
---
0x12dd: JUMPDEST 
---
Entry stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x12e0
[0x12e0:0x12e1]
---
Predecessors: [0x12dd]
Successors: [0x29b, 0x816]
---
0x12e0 JUMPDEST
0x12e1 JUMP
---
0x12e0: JUMPDEST 
0x12e1: JUMP S0
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x12e2
[0x12e2:0x12f0]
---
Predecessors: [0x5b1]
Successors: [0x4f9]
---
0x12e2 JUMPDEST
0x12e3 PUSH1 0x0
0x12e5 SLOAD
0x12e6 PUSH1 0x1
0x12e8 PUSH1 0xa0
0x12ea PUSH1 0x2
0x12ec EXP
0x12ed SUB
0x12ee AND
0x12ef DUP2
0x12f0 JUMP
---
0x12e2: JUMPDEST 
0x12e3: V1925 = 0x0
0x12e5: V1926 = S[0x0]
0x12e6: V1927 = 0x1
0x12e8: V1928 = 0xa0
0x12ea: V1929 = 0x2
0x12ec: V1930 = EXP 0x2 0xa0
0x12ed: V1931 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12ee: V1932 = AND 0xffffffffffffffffffffffffffffffffffffffff V1926
0x12f0: JUMP 0x4f9
---
Entry stack: [V12, 0x4f9]
Stack pops: 1
Stack additions: [S0, V1932]
Exit stack: [V12, 0x4f9, V1932]

================================

Block 0x12f1
[0x12f1:0x1306]
---
Predecessors: [0x5e0]
Successors: [0x147d]
---
0x12f1 JUMPDEST
0x12f2 PUSH2 0x1307
0x12f5 CALLER
0x12f6 PUSH1 0x0
0x12f8 CALLDATALOAD
0x12f9 PUSH1 0x1
0x12fb PUSH1 0xe0
0x12fd PUSH1 0x2
0x12ff EXP
0x1300 SUB
0x1301 NOT
0x1302 AND
0x1303 PUSH2 0x147d
0x1306 JUMP
---
0x12f1: JUMPDEST 
0x12f2: V1933 = 0x1307
0x12f5: V1934 = CALLER
0x12f6: V1935 = 0x0
0x12f8: V1936 = CALLDATALOAD 0x0
0x12f9: V1937 = 0x1
0x12fb: V1938 = 0xe0
0x12fd: V1939 = 0x2
0x12ff: V1940 = EXP 0x2 0xe0
0x1300: V1941 = SUB 0x100000000000000000000000000000000000000000000000000000000 0x1
0x1301: V1942 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x1302: V1943 = AND 0xffffffff00000000000000000000000000000000000000000000000000000000 V1936
0x1303: V1944 = 0x147d
0x1306: JUMP 0x147d
---
Entry stack: [V12, 0x29b, V601]
Stack pops: 0
Stack additions: [0x1307, V1934, V1943]
Exit stack: [V12, 0x29b, V601, 0x1307, V1934, V1943]

================================

Block 0x1307
[0x1307:0x130d]
---
Predecessors: [0x919]
Successors: [0x130e, 0x1312]
---
0x1307 JUMPDEST
0x1308 ISZERO
0x1309 ISZERO
0x130a PUSH2 0x1312
0x130d JUMPI
---
0x1307: JUMPDEST 
0x1308: V1945 = ISZERO S0
0x1309: V1946 = ISZERO V1945
0x130a: V1947 = 0x1312
0x130d: JUMPI 0x1312 V1946
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x130e
[0x130e:0x1311]
---
Predecessors: [0x1307]
Successors: []
---
0x130e PUSH1 0x0
0x1310 DUP1
0x1311 REVERT
---
0x130e: V1948 = 0x0
0x1311: REVERT 0x0 0x0
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x1312
[0x1312:0x1324]
---
Predecessors: [0x1307]
Successors: [0x1661]
---
0x1312 JUMPDEST
0x1313 PUSH1 0x3
0x1315 DUP2
0x1316 DUP1
0x1317 MLOAD
0x1318 PUSH2 0x816
0x131b SWAP3
0x131c SWAP2
0x131d PUSH1 0x20
0x131f ADD
0x1320 SWAP1
0x1321 PUSH2 0x1661
0x1324 JUMP
---
0x1312: JUMPDEST 
0x1313: V1949 = 0x3
0x1317: V1950 = M[S0]
0x1318: V1951 = 0x816
0x131d: V1952 = 0x20
0x131f: V1953 = ADD 0x20 S0
0x1321: V1954 = 0x1661
0x1324: JUMP 0x1661
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x816, 0x3, V1953, V1950]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x816, 0x3, V1953, V1950]

================================

Block 0x1325
[0x1325:0x1326]
---
Predecessors: []
Successors: [0x1327]
---
0x1325 JUMPDEST
0x1326 POP
---
0x1325: JUMPDEST 
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1327
[0x1327:0x1327]
---
Predecessors: [0x1325]
Successors: [0x1328]
---
0x1327 JUMPDEST
---
0x1327: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1328
[0x1328:0x132a]
---
Predecessors: [0x1327]
Successors: []
Has unresolved jump.
---
0x1328 JUMPDEST
0x1329 POP
0x132a JUMP
---
0x1328: JUMPDEST 
0x132a: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x132b
[0x132b:0x1339]
---
Predecessors: [0x633]
Successors: [0x4f9]
---
0x132b JUMPDEST
0x132c PUSH1 0x5
0x132e SLOAD
0x132f PUSH1 0x1
0x1331 PUSH1 0xa0
0x1333 PUSH1 0x2
0x1335 EXP
0x1336 SUB
0x1337 AND
0x1338 DUP2
0x1339 JUMP
---
0x132b: JUMPDEST 
0x132c: V1955 = 0x5
0x132e: V1956 = S[0x5]
0x132f: V1957 = 0x1
0x1331: V1958 = 0xa0
0x1333: V1959 = 0x2
0x1335: V1960 = EXP 0x2 0xa0
0x1336: V1961 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1337: V1962 = AND 0xffffffffffffffffffffffffffffffffffffffff V1956
0x1339: JUMP 0x4f9
---
Entry stack: [V12, 0x4f9]
Stack pops: 1
Stack additions: [S0, V1962]
Exit stack: [V12, 0x4f9, V1962]

================================

Block 0x133a
[0x133a:0x1398]
---
Predecessors: [0x662]
Successors: [0x1399, 0x139d]
---
0x133a JUMPDEST
0x133b PUSH1 0x5
0x133d SLOAD
0x133e PUSH1 0x0
0x1340 SWAP1
0x1341 PUSH1 0x1
0x1343 PUSH1 0xa0
0x1345 PUSH1 0x2
0x1347 EXP
0x1348 SUB
0x1349 AND
0x134a PUSH4 0xdd62ed3e
0x134f DUP5
0x1350 DUP5
0x1351 DUP5
0x1352 PUSH1 0x40
0x1354 MLOAD
0x1355 PUSH1 0x20
0x1357 ADD
0x1358 MSTORE
0x1359 PUSH1 0x40
0x135b MLOAD
0x135c PUSH1 0xe0
0x135e PUSH1 0x2
0x1360 EXP
0x1361 PUSH4 0xffffffff
0x1366 DUP6
0x1367 AND
0x1368 MUL
0x1369 DUP2
0x136a MSTORE
0x136b PUSH1 0x1
0x136d PUSH1 0xa0
0x136f PUSH1 0x2
0x1371 EXP
0x1372 SUB
0x1373 SWAP3
0x1374 DUP4
0x1375 AND
0x1376 PUSH1 0x4
0x1378 DUP3
0x1379 ADD
0x137a MSTORE
0x137b SWAP2
0x137c AND
0x137d PUSH1 0x24
0x137f DUP3
0x1380 ADD
0x1381 MSTORE
0x1382 PUSH1 0x44
0x1384 ADD
0x1385 PUSH1 0x20
0x1387 PUSH1 0x40
0x1389 MLOAD
0x138a DUP1
0x138b DUP4
0x138c SUB
0x138d DUP2
0x138e PUSH1 0x0
0x1390 DUP8
0x1391 DUP1
0x1392 EXTCODESIZE
0x1393 ISZERO
0x1394 ISZERO
0x1395 PUSH2 0x139d
0x1398 JUMPI
---
0x133a: JUMPDEST 
0x133b: V1963 = 0x5
0x133d: V1964 = S[0x5]
0x133e: V1965 = 0x0
0x1341: V1966 = 0x1
0x1343: V1967 = 0xa0
0x1345: V1968 = 0x2
0x1347: V1969 = EXP 0x2 0xa0
0x1348: V1970 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1349: V1971 = AND 0xffffffffffffffffffffffffffffffffffffffff V1964
0x134a: V1972 = 0xdd62ed3e
0x1352: V1973 = 0x40
0x1354: V1974 = M[0x40]
0x1355: V1975 = 0x20
0x1357: V1976 = ADD 0x20 V1974
0x1358: M[V1976] = 0x0
0x1359: V1977 = 0x40
0x135b: V1978 = M[0x40]
0x135c: V1979 = 0xe0
0x135e: V1980 = 0x2
0x1360: V1981 = EXP 0x2 0xe0
0x1361: V1982 = 0xffffffff
0x1367: V1983 = AND 0xdd62ed3e 0xffffffff
0x1368: V1984 = MUL 0xdd62ed3e 0x100000000000000000000000000000000000000000000000000000000
0x136a: M[V1978] = 0xdd62ed3e00000000000000000000000000000000000000000000000000000000
0x136b: V1985 = 0x1
0x136d: V1986 = 0xa0
0x136f: V1987 = 0x2
0x1371: V1988 = EXP 0x2 0xa0
0x1372: V1989 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1375: V1990 = AND 0xffffffffffffffffffffffffffffffffffffffff V638
0x1376: V1991 = 0x4
0x1379: V1992 = ADD V1978 0x4
0x137a: M[V1992] = V1990
0x137c: V1993 = AND 0xffffffffffffffffffffffffffffffffffffffff V641
0x137d: V1994 = 0x24
0x1380: V1995 = ADD V1978 0x24
0x1381: M[V1995] = V1993
0x1382: V1996 = 0x44
0x1384: V1997 = ADD 0x44 V1978
0x1385: V1998 = 0x20
0x1387: V1999 = 0x40
0x1389: V2000 = M[0x40]
0x138c: V2001 = SUB V1997 V2000
0x138e: V2002 = 0x0
0x1392: V2003 = EXTCODESIZE V1971
0x1393: V2004 = ISZERO V2003
0x1394: V2005 = ISZERO V2004
0x1395: V2006 = 0x139d
0x1398: JUMPI 0x139d V2005
---
Entry stack: [V12, 0x328, V638, V641]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1971, 0xdd62ed3e, V1997, 0x20, V2000, V2001, V2000, 0x0, V1971]
Exit stack: [V12, 0x328, V638, V641, 0x0, V1971, 0xdd62ed3e, V1997, 0x20, V2000, V2001, V2000, 0x0, V1971]

================================

Block 0x1399
[0x1399:0x139c]
---
Predecessors: [0x133a]
Successors: []
---
0x1399 PUSH1 0x0
0x139b DUP1
0x139c REVERT
---
0x1399: V2007 = 0x0
0x139c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x328, V638, V641, 0x0, V1971, 0xdd62ed3e, V1997, 0x20, V2000, V2001, V2000, 0x0, V1971]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x328, V638, V641, 0x0, V1971, 0xdd62ed3e, V1997, 0x20, V2000, V2001, V2000, 0x0, V1971]

================================

Block 0x139d
[0x139d:0x13a9]
---
Predecessors: [0x133a]
Successors: [0x13aa, 0x13ae]
---
0x139d JUMPDEST
0x139e PUSH2 0x2c6
0x13a1 GAS
0x13a2 SUB
0x13a3 CALL
0x13a4 ISZERO
0x13a5 ISZERO
0x13a6 PUSH2 0x13ae
0x13a9 JUMPI
---
0x139d: JUMPDEST 
0x139e: V2008 = 0x2c6
0x13a1: V2009 = GAS
0x13a2: V2010 = SUB V2009 0x2c6
0x13a3: V2011 = CALL V2010 V1971 0x0 V2000 V2001 V2000 0x20
0x13a4: V2012 = ISZERO V2011
0x13a5: V2013 = ISZERO V2012
0x13a6: V2014 = 0x13ae
0x13a9: JUMPI 0x13ae V2013
---
Entry stack: [V12, 0x328, V638, V641, 0x0, V1971, 0xdd62ed3e, V1997, 0x20, V2000, V2001, V2000, 0x0, V1971]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x328, V638, V641, 0x0, V1971, 0xdd62ed3e, V1997]

================================

Block 0x13aa
[0x13aa:0x13ad]
---
Predecessors: [0x139d]
Successors: []
---
0x13aa PUSH1 0x0
0x13ac DUP1
0x13ad REVERT
---
0x13aa: V2015 = 0x0
0x13ad: REVERT 0x0 0x0
---
Entry stack: [V12, 0x328, V638, V641, 0x0, V1971, 0xdd62ed3e, V1997]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x328, V638, V641, 0x0, V1971, 0xdd62ed3e, V1997]

================================

Block 0x13ae
[0x13ae:0x13b9]
---
Predecessors: [0x139d]
Successors: [0x13ba]
---
0x13ae JUMPDEST
0x13af POP
0x13b0 POP
0x13b1 POP
0x13b2 PUSH1 0x40
0x13b4 MLOAD
0x13b5 DUP1
0x13b6 MLOAD
0x13b7 SWAP2
0x13b8 POP
0x13b9 POP
---
0x13ae: JUMPDEST 
0x13b2: V2016 = 0x40
0x13b4: V2017 = M[0x40]
0x13b6: V2018 = M[V2017]
---
Entry stack: [V12, 0x328, V638, V641, 0x0, V1971, 0xdd62ed3e, V1997]
Stack pops: 4
Stack additions: [V2018]
Exit stack: [V12, 0x328, V638, V641, V2018]

================================

Block 0x13ba
[0x13ba:0x13bf]
---
Predecessors: [0x13ae]
Successors: [0x328]
---
0x13ba JUMPDEST
0x13bb SWAP3
0x13bc SWAP2
0x13bd POP
0x13be POP
0x13bf JUMP
---
0x13ba: JUMPDEST 
0x13bf: JUMP 0x328
---
Entry stack: [V12, 0x328, V638, V641, V2018]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, V2018]

================================

Block 0x13c0
[0x13c0:0x13d6]
---
Predecessors: [0x699]
Successors: [0x13d7, 0x13db]
---
0x13c0 JUMPDEST
0x13c1 PUSH1 0x5
0x13c3 SLOAD
0x13c4 CALLER
0x13c5 PUSH1 0x1
0x13c7 PUSH1 0xa0
0x13c9 PUSH1 0x2
0x13cb EXP
0x13cc SUB
0x13cd SWAP1
0x13ce DUP2
0x13cf AND
0x13d0 SWAP2
0x13d1 AND
0x13d2 EQ
0x13d3 PUSH2 0x13db
0x13d6 JUMPI
---
0x13c0: JUMPDEST 
0x13c1: V2019 = 0x5
0x13c3: V2020 = S[0x5]
0x13c4: V2021 = CALLER
0x13c5: V2022 = 0x1
0x13c7: V2023 = 0xa0
0x13c9: V2024 = 0x2
0x13cb: V2025 = EXP 0x2 0xa0
0x13cc: V2026 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13cf: V2027 = AND 0xffffffffffffffffffffffffffffffffffffffff V2021
0x13d1: V2028 = AND V2020 0xffffffffffffffffffffffffffffffffffffffff
0x13d2: V2029 = EQ V2028 V2027
0x13d3: V2030 = 0x13db
0x13d6: JUMPI 0x13db V2029
---
Entry stack: [V12, 0x29b, V662, V664]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x29b, V662, V664]

================================

Block 0x13d7
[0x13d7:0x13da]
---
Predecessors: [0x13c0]
Successors: []
---
0x13d7 PUSH1 0x0
0x13d9 DUP1
0x13da REVERT
---
0x13d7: V2031 = 0x0
0x13da: REVERT 0x0 0x0
---
Entry stack: [V12, 0x29b, V662, V664]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x29b, V662, V664]

================================

Block 0x13db
[0x13db:0x13ec]
---
Predecessors: [0x13c0]
Successors: [0x13ed, 0x13f1]
---
0x13db JUMPDEST
0x13dc PUSH1 0x1
0x13de PUSH1 0xa0
0x13e0 PUSH1 0x2
0x13e2 EXP
0x13e3 SUB
0x13e4 ADDRESS
0x13e5 AND
0x13e6 BALANCE
0x13e7 DUP2
0x13e8 LT
0x13e9 PUSH2 0x13f1
0x13ec JUMPI
---
0x13db: JUMPDEST 
0x13dc: V2032 = 0x1
0x13de: V2033 = 0xa0
0x13e0: V2034 = 0x2
0x13e2: V2035 = EXP 0x2 0xa0
0x13e3: V2036 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13e4: V2037 = ADDRESS
0x13e5: V2038 = AND V2037 0xffffffffffffffffffffffffffffffffffffffff
0x13e6: V2039 = BALANCE V2038
0x13e8: V2040 = LT V664 V2039
0x13e9: V2041 = 0x13f1
0x13ec: JUMPI 0x13f1 V2040
---
Entry stack: [V12, 0x29b, V662, V664]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x29b, V662, V664]

================================

Block 0x13ed
[0x13ed:0x13f0]
---
Predecessors: [0x13db]
Successors: []
---
0x13ed PUSH1 0x0
0x13ef DUP1
0x13f0 REVERT
---
0x13ed: V2042 = 0x0
0x13f0: REVERT 0x0 0x0
---
Entry stack: [V12, 0x29b, V662, V664]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x29b, V662, V664]

================================

Block 0x13f1
[0x13f1:0x141d]
---
Predecessors: [0x13db]
Successors: [0x816, 0x141e]
---
0x13f1 JUMPDEST
0x13f2 PUSH1 0x1
0x13f4 PUSH1 0xa0
0x13f6 PUSH1 0x2
0x13f8 EXP
0x13f9 SUB
0x13fa DUP3
0x13fb AND
0x13fc DUP2
0x13fd ISZERO
0x13fe PUSH2 0x8fc
0x1401 MUL
0x1402 DUP3
0x1403 PUSH1 0x40
0x1405 MLOAD
0x1406 PUSH1 0x0
0x1408 PUSH1 0x40
0x140a MLOAD
0x140b DUP1
0x140c DUP4
0x140d SUB
0x140e DUP2
0x140f DUP6
0x1410 DUP9
0x1411 DUP9
0x1412 CALL
0x1413 SWAP4
0x1414 POP
0x1415 POP
0x1416 POP
0x1417 POP
0x1418 ISZERO
0x1419 ISZERO
0x141a PUSH2 0x816
0x141d JUMPI
---
0x13f1: JUMPDEST 
0x13f2: V2043 = 0x1
0x13f4: V2044 = 0xa0
0x13f6: V2045 = 0x2
0x13f8: V2046 = EXP 0x2 0xa0
0x13f9: V2047 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13fb: V2048 = AND V662 0xffffffffffffffffffffffffffffffffffffffff
0x13fd: V2049 = ISZERO V664
0x13fe: V2050 = 0x8fc
0x1401: V2051 = MUL 0x8fc V2049
0x1403: V2052 = 0x40
0x1405: V2053 = M[0x40]
0x1406: V2054 = 0x0
0x1408: V2055 = 0x40
0x140a: V2056 = M[0x40]
0x140d: V2057 = SUB V2053 V2056
0x1412: V2058 = CALL V2051 V2048 V664 V2056 V2057 V2056 0x0
0x1418: V2059 = ISZERO V2058
0x1419: V2060 = ISZERO V2059
0x141a: V2061 = 0x816
0x141d: JUMPI 0x816 V2060
---
Entry stack: [V12, 0x29b, V662, V664]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x29b, V662, V664]

================================

Block 0x141e
[0x141e:0x1421]
---
Predecessors: [0x13f1]
Successors: []
---
0x141e PUSH1 0x0
0x1420 DUP1
0x1421 REVERT
---
0x141e: V2062 = 0x0
0x1421: REVERT 0x0 0x0
---
Entry stack: [V12, 0x29b, V662, V664]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x29b, V662, V664]

================================

Block 0x1422
[0x1422:0x1422]
---
Predecessors: []
Successors: [0x1423]
---
0x1422 JUMPDEST
---
0x1422: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1423
[0x1423:0x1426]
---
Predecessors: [0x1422]
Successors: []
Has unresolved jump.
---
0x1423 JUMPDEST
0x1424 POP
0x1425 POP
0x1426 JUMP
---
0x1423: JUMPDEST 
0x1426: JUMP S2
---
Entry stack: []
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0x1427
[0x1427:0x143d]
---
Predecessors: [0x6bd]
Successors: [0x143e, 0x1442]
---
0x1427 JUMPDEST
0x1428 PUSH1 0x5
0x142a SLOAD
0x142b CALLER
0x142c PUSH1 0x1
0x142e PUSH1 0xa0
0x1430 PUSH1 0x2
0x1432 EXP
0x1433 SUB
0x1434 SWAP1
0x1435 DUP2
0x1436 AND
0x1437 SWAP2
0x1438 AND
0x1439 EQ
0x143a PUSH2 0x1442
0x143d JUMPI
---
0x1427: JUMPDEST 
0x1428: V2063 = 0x5
0x142a: V2064 = S[0x5]
0x142b: V2065 = CALLER
0x142c: V2066 = 0x1
0x142e: V2067 = 0xa0
0x1430: V2068 = 0x2
0x1432: V2069 = EXP 0x2 0xa0
0x1433: V2070 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1436: V2071 = AND 0xffffffffffffffffffffffffffffffffffffffff V2065
0x1438: V2072 = AND V2064 0xffffffffffffffffffffffffffffffffffffffff
0x1439: V2073 = EQ V2072 V2071
0x143a: V2074 = 0x1442
0x143d: JUMPI 0x1442 V2073
---
Entry stack: [V12, 0x29b, V678, V681, V683]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x29b, V678, V681, V683]

================================

Block 0x143e
[0x143e:0x1441]
---
Predecessors: [0x1427]
Successors: []
---
0x143e PUSH1 0x0
0x1440 DUP1
0x1441 REVERT
---
0x143e: V2075 = 0x0
0x1441: REVERT 0x0 0x0
---
Entry stack: [V12, 0x29b, V678, V681, V683]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x29b, V678, V681, V683]

================================

Block 0x1442
[0x1442:0x1477]
---
Predecessors: [0x1427]
Successors: [0x1478]
---
0x1442 JUMPDEST
0x1443 DUP2
0x1444 PUSH1 0x1
0x1446 PUSH1 0xa0
0x1448 PUSH1 0x2
0x144a EXP
0x144b SUB
0x144c AND
0x144d DUP4
0x144e PUSH1 0x1
0x1450 PUSH1 0xa0
0x1452 PUSH1 0x2
0x1454 EXP
0x1455 SUB
0x1456 AND
0x1457 PUSH1 0x0
0x1459 DUP1
0x145a MLOAD
0x145b PUSH1 0x20
0x145d PUSH2 0x1702
0x1460 DUP4
0x1461 CODECOPY
0x1462 DUP2
0x1463 MLOAD
0x1464 SWAP2
0x1465 MSTORE
0x1466 DUP4
0x1467 PUSH1 0x40
0x1469 MLOAD
0x146a SWAP1
0x146b DUP2
0x146c MSTORE
0x146d PUSH1 0x20
0x146f ADD
0x1470 PUSH1 0x40
0x1472 MLOAD
0x1473 DUP1
0x1474 SWAP2
0x1475 SUB
0x1476 SWAP1
0x1477 LOG3
---
0x1442: JUMPDEST 
0x1444: V2076 = 0x1
0x1446: V2077 = 0xa0
0x1448: V2078 = 0x2
0x144a: V2079 = EXP 0x2 0xa0
0x144b: V2080 = SUB 0x10000000000000000000000000000000000000000 0x1
0x144c: V2081 = AND 0xffffffffffffffffffffffffffffffffffffffff V681
0x144e: V2082 = 0x1
0x1450: V2083 = 0xa0
0x1452: V2084 = 0x2
0x1454: V2085 = EXP 0x2 0xa0
0x1455: V2086 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1456: V2087 = AND 0xffffffffffffffffffffffffffffffffffffffff V678
0x1457: V2088 = 0x0
0x145a: V2089 = M[0x0]
0x145b: V2090 = 0x20
0x145d: V2091 = 0x1702
0x1461: CODECOPY 0x0 0x1702 0x20
0x1463: V2092 = M[0x0]
0x1465: M[0x0] = V2089
0x1467: V2093 = 0x40
0x1469: V2094 = M[0x40]
0x146c: M[V2094] = V683
0x146d: V2095 = 0x20
0x146f: V2096 = ADD 0x20 V2094
0x1470: V2097 = 0x40
0x1472: V2098 = M[0x40]
0x1475: V2099 = SUB V2096 V2098
0x1477: LOG V2098 V2099 V2092 V2087 V2081
---
Entry stack: [V12, 0x29b, V678, V681, V683]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x29b, V678, V681, V683]

================================

Block 0x1478
[0x1478:0x147c]
---
Predecessors: [0x1442]
Successors: [0x29b]
---
0x1478 JUMPDEST
0x1479 POP
0x147a POP
0x147b POP
0x147c JUMP
---
0x1478: JUMPDEST 
0x147c: JUMP 0x29b
---
Entry stack: [V12, 0x29b, V678, V681, V683]
Stack pops: 4
Stack additions: []
Exit stack: [V12]

================================

Block 0x147d
[0x147d:0x1499]
---
Predecessors: [0x77a, 0x91f, 0x997, 0xcd2, 0xe89, 0xf48, 0xff7, 0x1246, 0x12f1, 0x15e0]
Successors: [0x149a, 0x14a1]
---
0x147d JUMPDEST
0x147e PUSH1 0x0
0x1480 ADDRESS
0x1481 PUSH1 0x1
0x1483 PUSH1 0xa0
0x1485 PUSH1 0x2
0x1487 EXP
0x1488 SUB
0x1489 AND
0x148a DUP4
0x148b PUSH1 0x1
0x148d PUSH1 0xa0
0x148f PUSH1 0x2
0x1491 EXP
0x1492 SUB
0x1493 AND
0x1494 EQ
0x1495 ISZERO
0x1496 PUSH2 0x14a1
0x1499 JUMPI
---
0x147d: JUMPDEST 
0x147e: V2100 = 0x0
0x1480: V2101 = ADDRESS
0x1481: V2102 = 0x1
0x1483: V2103 = 0xa0
0x1485: V2104 = 0x2
0x1487: V2105 = EXP 0x2 0xa0
0x1488: V2106 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1489: V2107 = AND 0xffffffffffffffffffffffffffffffffffffffff V2101
0x148b: V2108 = 0x1
0x148d: V2109 = 0xa0
0x148f: V2110 = 0x2
0x1491: V2111 = EXP 0x2 0xa0
0x1492: V2112 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1493: V2113 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x1494: V2114 = EQ V2113 V2107
0x1495: V2115 = ISZERO V2114
0x1496: V2116 = 0x14a1
0x1499: JUMPI 0x14a1 V2115
---
Entry stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x790, 0x935, 0x9af, 0xce8, 0xea1, 0xf5e, 0x100d, 0x125c, 0x1307, 0x15f6}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x790, 0x935, 0x9af, 0xce8, 0xea1, 0xf5e, 0x100d, 0x125c, 0x1307, 0x15f6}, S1, S0, 0x0]

================================

Block 0x149a
[0x149a:0x14a0]
---
Predecessors: [0x147d]
Successors: [0x919]
---
0x149a POP
0x149b PUSH1 0x1
0x149d PUSH2 0x919
0x14a0 JUMP
---
0x149b: V2117 = 0x1
0x149d: V2118 = 0x919
0x14a0: JUMP 0x919
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x790, 0x935, 0x9af, 0xce8, 0xea1, 0xf5e, 0x100d, 0x125c, 0x1307, 0x15f6}, S2, S1, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x790, 0x935, 0x9af, 0xce8, 0xea1, 0xf5e, 0x100d, 0x125c, 0x1307, 0x15f6}, S2, S1, 0x1]

================================

Block 0x14a1
[0x14a1:0x14b8]
---
Predecessors: [0x147d]
Successors: [0x14b9, 0x14c7]
---
0x14a1 JUMPDEST
0x14a2 PUSH1 0x1
0x14a4 SLOAD
0x14a5 PUSH1 0x1
0x14a7 PUSH1 0xa0
0x14a9 PUSH1 0x2
0x14ab EXP
0x14ac SUB
0x14ad DUP5
0x14ae DUP2
0x14af AND
0x14b0 SWAP2
0x14b1 AND
0x14b2 EQ
0x14b3 DUP1
0x14b4 ISZERO
0x14b5 PUSH2 0x14c7
0x14b8 JUMPI
---
0x14a1: JUMPDEST 
0x14a2: V2119 = 0x1
0x14a4: V2120 = S[0x1]
0x14a5: V2121 = 0x1
0x14a7: V2122 = 0xa0
0x14a9: V2123 = 0x2
0x14ab: V2124 = EXP 0x2 0xa0
0x14ac: V2125 = SUB 0x10000000000000000000000000000000000000000 0x1
0x14af: V2126 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x14b1: V2127 = AND V2120 0xffffffffffffffffffffffffffffffffffffffff
0x14b2: V2128 = EQ V2127 V2126
0x14b4: V2129 = ISZERO V2128
0x14b5: V2130 = 0x14c7
0x14b8: JUMPI 0x14c7 V2129
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x790, 0x935, 0x9af, 0xce8, 0xea1, 0xf5e, 0x100d, 0x125c, 0x1307, 0x15f6}, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V2128]
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x790, 0x935, 0x9af, 0xce8, 0xea1, 0xf5e, 0x100d, 0x125c, 0x1307, 0x15f6}, S2, S1, 0x0, V2128]

================================

Block 0x14b9
[0x14b9:0x14c6]
---
Predecessors: [0x14a1]
Successors: [0x14c7]
---
0x14b9 POP
0x14ba PUSH1 0x0
0x14bc SLOAD
0x14bd PUSH1 0x1
0x14bf PUSH1 0xa0
0x14c1 PUSH1 0x2
0x14c3 EXP
0x14c4 SUB
0x14c5 AND
0x14c6 ISZERO
---
0x14ba: V2131 = 0x0
0x14bc: V2132 = S[0x0]
0x14bd: V2133 = 0x1
0x14bf: V2134 = 0xa0
0x14c1: V2135 = 0x2
0x14c3: V2136 = EXP 0x2 0xa0
0x14c4: V2137 = SUB 0x10000000000000000000000000000000000000000 0x1
0x14c5: V2138 = AND 0xffffffffffffffffffffffffffffffffffffffff V2132
0x14c6: V2139 = ISZERO V2138
---
Entry stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x790, 0x935, 0x9af, 0xce8, 0xea1, 0xf5e, 0x100d, 0x125c, 0x1307, 0x15f6}, S3, S2, 0x0, V2128]
Stack pops: 1
Stack additions: [V2139]
Exit stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x790, 0x935, 0x9af, 0xce8, 0xea1, 0xf5e, 0x100d, 0x125c, 0x1307, 0x15f6}, S3, S2, 0x0, V2139]

================================

Block 0x14c7
[0x14c7:0x14cc]
---
Predecessors: [0x14a1, 0x14b9]
Successors: [0x14cd, 0x14d4]
---
0x14c7 JUMPDEST
0x14c8 ISZERO
0x14c9 PUSH2 0x14d4
0x14cc JUMPI
---
0x14c7: JUMPDEST 
0x14c8: V2140 = ISZERO S0
0x14c9: V2141 = 0x14d4
0x14cc: JUMPI 0x14d4 V2140
---
Entry stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x790, 0x935, 0x9af, 0xce8, 0xea1, 0xf5e, 0x100d, 0x125c, 0x1307, 0x15f6}, S3, S2, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x790, 0x935, 0x9af, 0xce8, 0xea1, 0xf5e, 0x100d, 0x125c, 0x1307, 0x15f6}, S3, S2, 0x0]

================================

Block 0x14cd
[0x14cd:0x14d3]
---
Predecessors: [0x14c7]
Successors: [0x919]
---
0x14cd POP
0x14ce PUSH1 0x1
0x14d0 PUSH2 0x919
0x14d3 JUMP
---
0x14ce: V2142 = 0x1
0x14d0: V2143 = 0x919
0x14d3: JUMP 0x919
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x790, 0x935, 0x9af, 0xce8, 0xea1, 0xf5e, 0x100d, 0x125c, 0x1307, 0x15f6}, S2, S1, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x790, 0x935, 0x9af, 0xce8, 0xea1, 0xf5e, 0x100d, 0x125c, 0x1307, 0x15f6}, S2, S1, 0x1]

================================

Block 0x14d4
[0x14d4:0x14e6]
---
Predecessors: [0x14c7]
Successors: [0x14e7, 0x153c]
---
0x14d4 JUMPDEST
0x14d5 PUSH1 0x0
0x14d7 SLOAD
0x14d8 PUSH1 0x1
0x14da PUSH1 0xa0
0x14dc PUSH1 0x2
0x14de EXP
0x14df SUB
0x14e0 AND
0x14e1 ISZERO
0x14e2 ISZERO
0x14e3 PUSH2 0x153c
0x14e6 JUMPI
---
0x14d4: JUMPDEST 
0x14d5: V2144 = 0x0
0x14d7: V2145 = S[0x0]
0x14d8: V2146 = 0x1
0x14da: V2147 = 0xa0
0x14dc: V2148 = 0x2
0x14de: V2149 = EXP 0x2 0xa0
0x14df: V2150 = SUB 0x10000000000000000000000000000000000000000 0x1
0x14e0: V2151 = AND 0xffffffffffffffffffffffffffffffffffffffff V2145
0x14e1: V2152 = ISZERO V2151
0x14e2: V2153 = ISZERO V2152
0x14e3: V2154 = 0x153c
0x14e6: JUMPI 0x153c V2153
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x790, 0x935, 0x9af, 0xce8, 0xea1, 0xf5e, 0x100d, 0x125c, 0x1307, 0x15f6}, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x790, 0x935, 0x9af, 0xce8, 0xea1, 0xf5e, 0x100d, 0x125c, 0x1307, 0x15f6}, S2, S1, 0x0]

================================

Block 0x14e7
[0x14e7:0x153b]
---
Predecessors: [0x14d4]
Successors: [0x919]
---
0x14e7 PUSH32 0xeb91385a0d70e44b915093d9ddfe6c8b41f2c56729431b1405f40aee5d874be7
0x1508 DUP4
0x1509 DUP4
0x150a PUSH1 0x40
0x150c MLOAD
0x150d PUSH1 0x1
0x150f PUSH1 0xa0
0x1511 PUSH1 0x2
0x1513 EXP
0x1514 SUB
0x1515 SWAP1
0x1516 SWAP3
0x1517 AND
0x1518 DUP3
0x1519 MSTORE
0x151a PUSH1 0x1
0x151c PUSH1 0xe0
0x151e PUSH1 0x2
0x1520 EXP
0x1521 SUB
0x1522 NOT
0x1523 AND
0x1524 PUSH1 0x20
0x1526 DUP3
0x1527 ADD
0x1528 MSTORE
0x1529 PUSH1 0x40
0x152b SWAP1
0x152c DUP2
0x152d ADD
0x152e SWAP1
0x152f MLOAD
0x1530 DUP1
0x1531 SWAP2
0x1532 SUB
0x1533 SWAP1
0x1534 LOG1
0x1535 POP
0x1536 PUSH1 0x0
0x1538 PUSH2 0x919
0x153b JUMP
---
0x14e7: V2155 = 0xeb91385a0d70e44b915093d9ddfe6c8b41f2c56729431b1405f40aee5d874be7
0x150a: V2156 = 0x40
0x150c: V2157 = M[0x40]
0x150d: V2158 = 0x1
0x150f: V2159 = 0xa0
0x1511: V2160 = 0x2
0x1513: V2161 = EXP 0x2 0xa0
0x1514: V2162 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1517: V2163 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x1519: M[V2157] = V2163
0x151a: V2164 = 0x1
0x151c: V2165 = 0xe0
0x151e: V2166 = 0x2
0x1520: V2167 = EXP 0x2 0xe0
0x1521: V2168 = SUB 0x100000000000000000000000000000000000000000000000000000000 0x1
0x1522: V2169 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x1523: V2170 = AND 0xffffffff00000000000000000000000000000000000000000000000000000000 S1
0x1524: V2171 = 0x20
0x1527: V2172 = ADD V2157 0x20
0x1528: M[V2172] = V2170
0x1529: V2173 = 0x40
0x152d: V2174 = ADD 0x40 V2157
0x152f: V2175 = M[0x40]
0x1532: V2176 = SUB V2174 V2175
0x1534: LOG V2175 V2176 0xeb91385a0d70e44b915093d9ddfe6c8b41f2c56729431b1405f40aee5d874be7
0x1536: V2177 = 0x0
0x1538: V2178 = 0x919
0x153b: JUMP 0x919
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x790, 0x935, 0x9af, 0xce8, 0xea1, 0xf5e, 0x100d, 0x125c, 0x1307, 0x15f6}, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, 0x0]
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x790, 0x935, 0x9af, 0xce8, 0xea1, 0xf5e, 0x100d, 0x125c, 0x1307, 0x15f6}, S2, S1, 0x0]

================================

Block 0x153c
[0x153c:0x15b0]
---
Predecessors: [0x14d4]
Successors: [0x15b1, 0x15b5]
---
0x153c JUMPDEST
0x153d PUSH1 0x0
0x153f DUP1
0x1540 SLOAD
0x1541 PUSH1 0x1
0x1543 PUSH1 0xa0
0x1545 PUSH1 0x2
0x1547 EXP
0x1548 SUB
0x1549 AND
0x154a SWAP1
0x154b PUSH4 0xb7009613
0x1550 SWAP1
0x1551 DUP6
0x1552 SWAP1
0x1553 ADDRESS
0x1554 SWAP1
0x1555 DUP7
0x1556 SWAP1
0x1557 PUSH1 0x40
0x1559 MLOAD
0x155a PUSH1 0x20
0x155c ADD
0x155d MSTORE
0x155e PUSH1 0x40
0x1560 MLOAD
0x1561 PUSH1 0xe0
0x1563 PUSH1 0x2
0x1565 EXP
0x1566 PUSH4 0xffffffff
0x156b DUP7
0x156c AND
0x156d MUL
0x156e DUP2
0x156f MSTORE
0x1570 PUSH1 0x1
0x1572 PUSH1 0xa0
0x1574 PUSH1 0x2
0x1576 EXP
0x1577 SUB
0x1578 SWAP4
0x1579 DUP5
0x157a AND
0x157b PUSH1 0x4
0x157d DUP3
0x157e ADD
0x157f MSTORE
0x1580 SWAP2
0x1581 SWAP1
0x1582 SWAP3
0x1583 AND
0x1584 PUSH1 0x24
0x1586 DUP3
0x1587 ADD
0x1588 MSTORE
0x1589 PUSH1 0x1
0x158b PUSH1 0xe0
0x158d PUSH1 0x2
0x158f EXP
0x1590 SUB
0x1591 NOT
0x1592 SWAP1
0x1593 SWAP2
0x1594 AND
0x1595 PUSH1 0x44
0x1597 DUP3
0x1598 ADD
0x1599 MSTORE
0x159a PUSH1 0x64
0x159c ADD
0x159d PUSH1 0x20
0x159f PUSH1 0x40
0x15a1 MLOAD
0x15a2 DUP1
0x15a3 DUP4
0x15a4 SUB
0x15a5 DUP2
0x15a6 PUSH1 0x0
0x15a8 DUP8
0x15a9 DUP1
0x15aa EXTCODESIZE
0x15ab ISZERO
0x15ac ISZERO
0x15ad PUSH2 0x15b5
0x15b0 JUMPI
---
0x153c: JUMPDEST 
0x153d: V2179 = 0x0
0x1540: V2180 = S[0x0]
0x1541: V2181 = 0x1
0x1543: V2182 = 0xa0
0x1545: V2183 = 0x2
0x1547: V2184 = EXP 0x2 0xa0
0x1548: V2185 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1549: V2186 = AND 0xffffffffffffffffffffffffffffffffffffffff V2180
0x154b: V2187 = 0xb7009613
0x1553: V2188 = ADDRESS
0x1557: V2189 = 0x40
0x1559: V2190 = M[0x40]
0x155a: V2191 = 0x20
0x155c: V2192 = ADD 0x20 V2190
0x155d: M[V2192] = 0x0
0x155e: V2193 = 0x40
0x1560: V2194 = M[0x40]
0x1561: V2195 = 0xe0
0x1563: V2196 = 0x2
0x1565: V2197 = EXP 0x2 0xe0
0x1566: V2198 = 0xffffffff
0x156c: V2199 = AND 0xb7009613 0xffffffff
0x156d: V2200 = MUL 0xb7009613 0x100000000000000000000000000000000000000000000000000000000
0x156f: M[V2194] = 0xb700961300000000000000000000000000000000000000000000000000000000
0x1570: V2201 = 0x1
0x1572: V2202 = 0xa0
0x1574: V2203 = 0x2
0x1576: V2204 = EXP 0x2 0xa0
0x1577: V2205 = SUB 0x10000000000000000000000000000000000000000 0x1
0x157a: V2206 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x157b: V2207 = 0x4
0x157e: V2208 = ADD V2194 0x4
0x157f: M[V2208] = V2206
0x1583: V2209 = AND 0xffffffffffffffffffffffffffffffffffffffff V2188
0x1584: V2210 = 0x24
0x1587: V2211 = ADD V2194 0x24
0x1588: M[V2211] = V2209
0x1589: V2212 = 0x1
0x158b: V2213 = 0xe0
0x158d: V2214 = 0x2
0x158f: V2215 = EXP 0x2 0xe0
0x1590: V2216 = SUB 0x100000000000000000000000000000000000000000000000000000000 0x1
0x1591: V2217 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x1594: V2218 = AND S1 0xffffffff00000000000000000000000000000000000000000000000000000000
0x1595: V2219 = 0x44
0x1598: V2220 = ADD V2194 0x44
0x1599: M[V2220] = V2218
0x159a: V2221 = 0x64
0x159c: V2222 = ADD 0x64 V2194
0x159d: V2223 = 0x20
0x159f: V2224 = 0x40
0x15a1: V2225 = M[0x40]
0x15a4: V2226 = SUB V2222 V2225
0x15a6: V2227 = 0x0
0x15aa: V2228 = EXTCODESIZE V2186
0x15ab: V2229 = ISZERO V2228
0x15ac: V2230 = ISZERO V2229
0x15ad: V2231 = 0x15b5
0x15b0: JUMPI 0x15b5 V2230
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x790, 0x935, 0x9af, 0xce8, 0xea1, 0xf5e, 0x100d, 0x125c, 0x1307, 0x15f6}, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V2186, 0xb7009613, V2222, 0x20, V2225, V2226, V2225, 0x0, V2186]
Exit stack: [S9, S8, S7, S6, S5, S4, {0x790, 0x935, 0x9af, 0xce8, 0xea1, 0xf5e, 0x100d, 0x125c, 0x1307, 0x15f6}, S2, S1, 0x0, V2186, 0xb7009613, V2222, 0x20, V2225, V2226, V2225, 0x0, V2186]

================================

Block 0x15b1
[0x15b1:0x15b4]
---
Predecessors: [0x153c]
Successors: []
---
0x15b1 PUSH1 0x0
0x15b3 DUP1
0x15b4 REVERT
---
0x15b1: V2232 = 0x0
0x15b4: REVERT 0x0 0x0
---
Entry stack: [V12, S17, S16, S15, S14, S13, {0x790, 0x935, 0x9af, 0xce8, 0xea1, 0xf5e, 0x100d, 0x125c, 0x1307, 0x15f6}, S11, S10, 0x0, V2186, 0xb7009613, V2222, 0x20, V2225, V2226, V2225, 0x0, V2186]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S17, S16, S15, S14, S13, {0x790, 0x935, 0x9af, 0xce8, 0xea1, 0xf5e, 0x100d, 0x125c, 0x1307, 0x15f6}, S11, S10, 0x0, V2186, 0xb7009613, V2222, 0x20, V2225, V2226, V2225, 0x0, V2186]

================================

Block 0x15b5
[0x15b5:0x15c1]
---
Predecessors: [0x153c]
Successors: [0x15c2, 0x15c6]
---
0x15b5 JUMPDEST
0x15b6 PUSH2 0x2c6
0x15b9 GAS
0x15ba SUB
0x15bb CALL
0x15bc ISZERO
0x15bd ISZERO
0x15be PUSH2 0x15c6
0x15c1 JUMPI
---
0x15b5: JUMPDEST 
0x15b6: V2233 = 0x2c6
0x15b9: V2234 = GAS
0x15ba: V2235 = SUB V2234 0x2c6
0x15bb: V2236 = CALL V2235 V2186 0x0 V2225 V2226 V2225 0x20
0x15bc: V2237 = ISZERO V2236
0x15bd: V2238 = ISZERO V2237
0x15be: V2239 = 0x15c6
0x15c1: JUMPI 0x15c6 V2238
---
Entry stack: [V12, S17, S16, S15, S14, S13, {0x790, 0x935, 0x9af, 0xce8, 0xea1, 0xf5e, 0x100d, 0x125c, 0x1307, 0x15f6}, S11, S10, 0x0, V2186, 0xb7009613, V2222, 0x20, V2225, V2226, V2225, 0x0, V2186]
Stack pops: 6
Stack additions: []
Exit stack: [V12, S17, S16, S15, S14, S13, {0x790, 0x935, 0x9af, 0xce8, 0xea1, 0xf5e, 0x100d, 0x125c, 0x1307, 0x15f6}, S11, S10, 0x0, V2186, 0xb7009613, V2222]

================================

Block 0x15c2
[0x15c2:0x15c5]
---
Predecessors: [0x15b5]
Successors: []
---
0x15c2 PUSH1 0x0
0x15c4 DUP1
0x15c5 REVERT
---
0x15c2: V2240 = 0x0
0x15c5: REVERT 0x0 0x0
---
Entry stack: [V12, S11, S10, S9, S8, S7, {0x790, 0x935, 0x9af, 0xce8, 0xea1, 0xf5e, 0x100d, 0x125c, 0x1307, 0x15f6}, S5, S4, 0x0, V2186, 0xb7009613, V2222]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S11, S10, S9, S8, S7, {0x790, 0x935, 0x9af, 0xce8, 0xea1, 0xf5e, 0x100d, 0x125c, 0x1307, 0x15f6}, S5, S4, 0x0, V2186, 0xb7009613, V2222]

================================

Block 0x15c6
[0x15c6:0x15d6]
---
Predecessors: [0x15b5]
Successors: [0x919]
---
0x15c6 JUMPDEST
0x15c7 POP
0x15c8 POP
0x15c9 POP
0x15ca PUSH1 0x40
0x15cc MLOAD
0x15cd DUP1
0x15ce MLOAD
0x15cf SWAP1
0x15d0 POP
0x15d1 SWAP1
0x15d2 POP
0x15d3 PUSH2 0x919
0x15d6 JUMP
---
0x15c6: JUMPDEST 
0x15ca: V2241 = 0x40
0x15cc: V2242 = M[0x40]
0x15ce: V2243 = M[V2242]
0x15d3: V2244 = 0x919
0x15d6: JUMP 0x919
---
Entry stack: [V12, S11, S10, S9, S8, S7, {0x790, 0x935, 0x9af, 0xce8, 0xea1, 0xf5e, 0x100d, 0x125c, 0x1307, 0x15f6}, S5, S4, 0x0, V2186, 0xb7009613, V2222]
Stack pops: 4
Stack additions: [V2243]
Exit stack: [V12, S11, S10, S9, S8, S7, {0x790, 0x935, 0x9af, 0xce8, 0xea1, 0xf5e, 0x100d, 0x125c, 0x1307, 0x15f6}, S5, S4, V2243]

================================

Block 0x15d7
[0x15d7:0x15d7]
---
Predecessors: []
Successors: [0x15d8]
---
0x15d7 JUMPDEST
---
0x15d7: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x15d8
[0x15d8:0x15d8]
---
Predecessors: [0x15d7]
Successors: [0x15d9]
---
0x15d8 JUMPDEST
---
0x15d8: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x15d9
[0x15d9:0x15d9]
---
Predecessors: [0x15d8]
Successors: [0x15da]
---
0x15d9 JUMPDEST
---
0x15d9: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x15da
[0x15da:0x15df]
---
Predecessors: [0x15d9]
Successors: []
Has unresolved jump.
---
0x15da JUMPDEST
0x15db SWAP3
0x15dc SWAP2
0x15dd POP
0x15de POP
0x15df JUMP
---
0x15da: JUMPDEST 
0x15df: JUMP S3
---
Entry stack: []
Stack pops: 4
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x15e0
[0x15e0:0x15f5]
---
Predecessors: [0xaf2]
Successors: [0x147d]
---
0x15e0 JUMPDEST
0x15e1 PUSH2 0x15f6
0x15e4 CALLER
0x15e5 PUSH1 0x0
0x15e7 CALLDATALOAD
0x15e8 PUSH1 0x1
0x15ea PUSH1 0xe0
0x15ec PUSH1 0x2
0x15ee EXP
0x15ef SUB
0x15f0 NOT
0x15f1 AND
0x15f2 PUSH2 0x147d
0x15f5 JUMP
---
0x15e0: JUMPDEST 
0x15e1: V2245 = 0x15f6
0x15e4: V2246 = CALLER
0x15e5: V2247 = 0x0
0x15e7: V2248 = CALLDATALOAD 0x0
0x15e8: V2249 = 0x1
0x15ea: V2250 = 0xe0
0x15ec: V2251 = 0x2
0x15ee: V2252 = EXP 0x2 0xe0
0x15ef: V2253 = SUB 0x100000000000000000000000000000000000000000000000000000000 0x1
0x15f0: V2254 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x15f1: V2255 = AND 0xffffffff00000000000000000000000000000000000000000000000000000000 V2248
0x15f2: V2256 = 0x147d
0x15f5: JUMP 0x147d
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, 0x816, S0]
Stack pops: 0
Stack additions: [0x15f6, V2246, V2255]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, 0x816, S0, 0x15f6, V2246, V2255]

================================

Block 0x15f6
[0x15f6:0x15fc]
---
Predecessors: [0x919]
Successors: [0x15fd, 0x1601]
---
0x15f6 JUMPDEST
0x15f7 ISZERO
0x15f8 ISZERO
0x15f9 PUSH2 0x1601
0x15fc JUMPI
---
0x15f6: JUMPDEST 
0x15f7: V2257 = ISZERO S0
0x15f8: V2258 = ISZERO V2257
0x15f9: V2259 = 0x1601
0x15fc: JUMPI 0x1601 V2258
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x15fd
[0x15fd:0x1600]
---
Predecessors: [0x15f6]
Successors: []
---
0x15fd PUSH1 0x0
0x15ff DUP1
0x1600 REVERT
---
0x15fd: V2260 = 0x0
0x1600: REVERT 0x0 0x0
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x1601
[0x1601:0x165c]
---
Predecessors: [0x15f6]
Successors: [0x165d]
---
0x1601 JUMPDEST
0x1602 PUSH1 0x1
0x1604 DUP1
0x1605 SLOAD
0x1606 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x161b NOT
0x161c AND
0x161d PUSH1 0x1
0x161f PUSH1 0xa0
0x1621 PUSH1 0x2
0x1623 EXP
0x1624 SUB
0x1625 DUP4
0x1626 DUP2
0x1627 AND
0x1628 SWAP2
0x1629 SWAP1
0x162a SWAP2
0x162b OR
0x162c SWAP2
0x162d DUP3
0x162e SWAP1
0x162f SSTORE
0x1630 AND
0x1631 PUSH32 0xce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed94
0x1652 PUSH1 0x40
0x1654 MLOAD
0x1655 PUSH1 0x40
0x1657 MLOAD
0x1658 DUP1
0x1659 SWAP2
0x165a SUB
0x165b SWAP1
0x165c LOG2
---
0x1601: JUMPDEST 
0x1602: V2261 = 0x1
0x1605: V2262 = S[0x1]
0x1606: V2263 = 0xffffffffffffffffffffffffffffffffffffffff
0x161b: V2264 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x161c: V2265 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V2262
0x161d: V2266 = 0x1
0x161f: V2267 = 0xa0
0x1621: V2268 = 0x2
0x1623: V2269 = EXP 0x2 0xa0
0x1624: V2270 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1627: V2271 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x162b: V2272 = OR V2271 V2265
0x162f: S[0x1] = V2272
0x1630: V2273 = AND 0xffffffffffffffffffffffffffffffffffffffff V2272
0x1631: V2274 = 0xce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed94
0x1652: V2275 = 0x40
0x1654: V2276 = M[0x40]
0x1655: V2277 = 0x40
0x1657: V2278 = M[0x40]
0x165a: V2279 = SUB V2276 V2278
0x165c: LOG V2278 V2279 0xce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed94 V2273
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x165d
[0x165d:0x165d]
---
Predecessors: [0x1601]
Successors: [0x165e]
---
0x165d JUMPDEST
---
0x165d: JUMPDEST 
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x165e
[0x165e:0x1660]
---
Predecessors: [0x165d]
Successors: [0x29b, 0x816]
---
0x165e JUMPDEST
0x165f POP
0x1660 JUMP
---
0x165e: JUMPDEST 
0x1660: JUMP S1
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x1661
[0x1661:0x1691]
---
Predecessors: [0x1312]
Successors: [0x1692, 0x16a2]
---
0x1661 JUMPDEST
0x1662 DUP3
0x1663 DUP1
0x1664 SLOAD
0x1665 PUSH1 0x1
0x1667 DUP2
0x1668 PUSH1 0x1
0x166a AND
0x166b ISZERO
0x166c PUSH2 0x100
0x166f MUL
0x1670 SUB
0x1671 AND
0x1672 PUSH1 0x2
0x1674 SWAP1
0x1675 DIV
0x1676 SWAP1
0x1677 PUSH1 0x0
0x1679 MSTORE
0x167a PUSH1 0x20
0x167c PUSH1 0x0
0x167e SHA3
0x167f SWAP1
0x1680 PUSH1 0x1f
0x1682 ADD
0x1683 PUSH1 0x20
0x1685 SWAP1
0x1686 DIV
0x1687 DUP2
0x1688 ADD
0x1689 SWAP3
0x168a DUP3
0x168b PUSH1 0x1f
0x168d LT
0x168e PUSH2 0x16a2
0x1691 JUMPI
---
0x1661: JUMPDEST 
0x1664: V2280 = S[0x3]
0x1665: V2281 = 0x1
0x1668: V2282 = 0x1
0x166a: V2283 = AND 0x1 V2280
0x166b: V2284 = ISZERO V2283
0x166c: V2285 = 0x100
0x166f: V2286 = MUL 0x100 V2284
0x1670: V2287 = SUB V2286 0x1
0x1671: V2288 = AND V2287 V2280
0x1672: V2289 = 0x2
0x1675: V2290 = DIV V2288 0x2
0x1677: V2291 = 0x0
0x1679: M[0x0] = 0x3
0x167a: V2292 = 0x20
0x167c: V2293 = 0x0
0x167e: V2294 = SHA3 0x0 0x20
0x1680: V2295 = 0x1f
0x1682: V2296 = ADD 0x1f V2290
0x1683: V2297 = 0x20
0x1686: V2298 = DIV V2296 0x20
0x1688: V2299 = ADD V2294 V2298
0x168b: V2300 = 0x1f
0x168d: V2301 = LT 0x1f V1950
0x168e: V2302 = 0x16a2
0x1691: JUMPI 0x16a2 V2301
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x816, 0x3, V1953, V1950]
Stack pops: 3
Stack additions: [S2, V2299, S0, V2294, S1]
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x816, 0x3, V2299, V1950, V2294, V1953]

================================

Block 0x1692
[0x1692:0x16a1]
---
Predecessors: [0x1661]
Successors: [0x16cf]
---
0x1692 DUP1
0x1693 MLOAD
0x1694 PUSH1 0xff
0x1696 NOT
0x1697 AND
0x1698 DUP4
0x1699 DUP1
0x169a ADD
0x169b OR
0x169c DUP6
0x169d SSTORE
0x169e PUSH2 0x16cf
0x16a1 JUMP
---
0x1693: V2303 = M[V1953]
0x1694: V2304 = 0xff
0x1696: V2305 = NOT 0xff
0x1697: V2306 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V2303
0x169a: V2307 = ADD V1950 V1950
0x169b: V2308 = OR V2307 V2306
0x169d: S[0x3] = V2308
0x169e: V2309 = 0x16cf
0x16a1: JUMP 0x16cf
---
Entry stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x816, 0x3, V2299, V1950, V2294, V1953]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x816, 0x3, V2299, V1950, V2294, V1953]

================================

Block 0x16a2
[0x16a2:0x16b0]
---
Predecessors: [0x1661]
Successors: [0x16b1, 0x16cf]
---
0x16a2 JUMPDEST
0x16a3 DUP3
0x16a4 DUP1
0x16a5 ADD
0x16a6 PUSH1 0x1
0x16a8 ADD
0x16a9 DUP6
0x16aa SSTORE
0x16ab DUP3
0x16ac ISZERO
0x16ad PUSH2 0x16cf
0x16b0 JUMPI
---
0x16a2: JUMPDEST 
0x16a5: V2310 = ADD V1950 V1950
0x16a6: V2311 = 0x1
0x16a8: V2312 = ADD 0x1 V2310
0x16aa: S[0x3] = V2312
0x16ac: V2313 = ISZERO V1950
0x16ad: V2314 = 0x16cf
0x16b0: JUMPI 0x16cf V2313
---
Entry stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x816, 0x3, V2299, V1950, V2294, V1953]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x816, 0x3, V2299, V1950, V2294, V1953]

================================

Block 0x16b1
[0x16b1:0x16b3]
---
Predecessors: [0x16a2]
Successors: [0x16b4]
---
0x16b1 SWAP2
0x16b2 DUP3
0x16b3 ADD
---
0x16b3: V2315 = ADD V1953 V1950
---
Entry stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x816, 0x3, V2299, V1950, V2294, V1953]
Stack pops: 3
Stack additions: [S0, S1, V2315]
Exit stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x816, 0x3, V2299, V1953, V2294, V2315]

================================

Block 0x16b4
[0x16b4:0x16bc]
---
Predecessors: [0x16b1, 0x16bd]
Successors: [0x16bd, 0x16cf]
---
0x16b4 JUMPDEST
0x16b5 DUP3
0x16b6 DUP2
0x16b7 GT
0x16b8 ISZERO
0x16b9 PUSH2 0x16cf
0x16bc JUMPI
---
0x16b4: JUMPDEST 
0x16b7: V2316 = GT V2315 S2
0x16b8: V2317 = ISZERO V2316
0x16b9: V2318 = 0x16cf
0x16bc: JUMPI 0x16cf V2317
---
Entry stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x816, 0x3, V2299, S2, S1, V2315]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x816, 0x3, V2299, S2, S1, V2315]

================================

Block 0x16bd
[0x16bd:0x16ce]
---
Predecessors: [0x16b4]
Successors: [0x16b4]
---
0x16bd DUP3
0x16be MLOAD
0x16bf DUP3
0x16c0 SSTORE
0x16c1 SWAP2
0x16c2 PUSH1 0x20
0x16c4 ADD
0x16c5 SWAP2
0x16c6 SWAP1
0x16c7 PUSH1 0x1
0x16c9 ADD
0x16ca SWAP1
0x16cb PUSH2 0x16b4
0x16ce JUMP
---
0x16be: V2319 = M[S2]
0x16c0: S[S1] = V2319
0x16c2: V2320 = 0x20
0x16c4: V2321 = ADD 0x20 S2
0x16c7: V2322 = 0x1
0x16c9: V2323 = ADD 0x1 S1
0x16cb: V2324 = 0x16b4
0x16ce: JUMP 0x16b4
---
Entry stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x816, 0x3, V2299, S2, S1, V2315]
Stack pops: 3
Stack additions: [V2321, V2323, S0]
Exit stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x816, 0x3, V2299, V2321, V2323, V2315]

================================

Block 0x16cf
[0x16cf:0x16cf]
---
Predecessors: [0x1692, 0x16a2, 0x16b4]
Successors: [0x16d0]
---
0x16cf JUMPDEST
---
0x16cf: JUMPDEST 
---
Entry stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x816, 0x3, V2299, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x816, 0x3, V2299, S2, S1, S0]

================================

Block 0x16d0
[0x16d0:0x16db]
---
Predecessors: [0x16cf]
Successors: [0x16e0]
---
0x16d0 JUMPDEST
0x16d1 POP
0x16d2 PUSH2 0x16dc
0x16d5 SWAP3
0x16d6 SWAP2
0x16d7 POP
0x16d8 PUSH2 0x16e0
0x16db JUMP
---
0x16d0: JUMPDEST 
0x16d2: V2325 = 0x16dc
0x16d8: V2326 = 0x16e0
0x16db: JUMP 0x16e0
---
Entry stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x816, 0x3, V2299, S2, S1, S0]
Stack pops: 4
Stack additions: [0x16dc, S3, S1]
Exit stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x816, 0x3, 0x16dc, V2299, S1]

================================

Block 0x16dc
[0x16dc:0x16df]
---
Predecessors: [0xb6b, 0x16e6]
Successors: [0x29b, 0x2bf, 0x816, 0xb6b]
---
0x16dc JUMPDEST
0x16dd POP
0x16de SWAP1
0x16df JUMP
---
0x16dc: JUMPDEST 
0x16df: JUMP S2
---
Entry stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S1]

================================

Block 0x16e0
[0x16e0:0x16e5]
---
Predecessors: [0x16d0]
Successors: [0x16e6]
---
0x16e0 JUMPDEST
0x16e1 PUSH2 0xb6b
0x16e4 SWAP2
0x16e5 SWAP1
---
0x16e0: JUMPDEST 
0x16e1: V2327 = 0xb6b
---
Entry stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x816, 0x3, 0x16dc, V2299, S0]
Stack pops: 2
Stack additions: [0xb6b, S1, S0]
Exit stack: [V12, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x816, 0x3, 0x16dc, 0xb6b, V2299, S0]

================================

Block 0x16e6
[0x16e6:0x16ee]
---
Predecessors: [0x16e0, 0x16ef]
Successors: [0x16dc, 0x16ef]
---
0x16e6 JUMPDEST
0x16e7 DUP1
0x16e8 DUP3
0x16e9 GT
0x16ea ISZERO
0x16eb PUSH2 0x16dc
0x16ee JUMPI
---
0x16e6: JUMPDEST 
0x16e9: V2328 = GT V2299 S0
0x16ea: V2329 = ISZERO V2328
0x16eb: V2330 = 0x16dc
0x16ee: JUMPI 0x16dc V2329
---
Entry stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x816, 0x3, 0x16dc, 0xb6b, V2299, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x816, 0x3, 0x16dc, 0xb6b, V2299, S0]

================================

Block 0x16ef
[0x16ef:0x16f9]
---
Predecessors: [0x16e6]
Successors: [0x16e6]
---
0x16ef PUSH1 0x0
0x16f1 DUP2
0x16f2 SSTORE
0x16f3 PUSH1 0x1
0x16f5 ADD
0x16f6 PUSH2 0x16e6
0x16f9 JUMP
---
0x16ef: V2331 = 0x0
0x16f2: S[S0] = 0x0
0x16f3: V2332 = 0x1
0x16f5: V2333 = ADD 0x1 S0
0x16f6: V2334 = 0x16e6
0x16f9: JUMP 0x16e6
---
Entry stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x816, 0x3, 0x16dc, 0xb6b, V2299, S0]
Stack pops: 1
Stack additions: [V2333]
Exit stack: [V12, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x816, 0x3, 0x16dc, 0xb6b, V2299, V2333]

================================

Block 0x16fa
[0x16fa:0x1758]
---
Predecessors: []
Successors: []
---
0x16fa JUMPDEST
0x16fb POP
0x16fc SWAP1
0x16fd JUMP
0x16fe JUMPDEST
0x16ff SWAP1
0x1700 JUMP
0x1701 STOP
0x1702 MISSING 0xdd
0x1703 CALLCODE
0x1704 MSTORE
0x1705 MISSING 0xad
0x1706 SHL
0x1707 MISSING 0xe2
0x1708 MISSING 0xc8
0x1709 SWAP12
0x170a PUSH10 0xc2b068fc378daa952ba7
0x1715 CALL
0x1716 PUSH4 0xc4a11628
0x171b CREATE2
0x171c GAS
0x171d MISSING 0x4d
0x171e CREATE2
0x171f MISSING 0x23
0x1720 MISSING 0xb3
0x1721 MISSING 0xef
0x1722 LOG1
0x1723 PUSH6 0x627a7a723058
0x172a SHA3
0x172b MISSING 0x2e
0x172c MISSING 0x23
0x172d DUP6
0x172e ADDRESS
0x172f PUSH14 0x486d916bf9dc2a38c73a149df9fa
0x173e CODECOPY
0x173f MISSING 0x24
0x1740 PUSH24 0x56f3efcd56d8cf46e5cc0029
---
0x16fa: JUMPDEST 
0x16fd: JUMP S2
0x16fe: JUMPDEST 
0x1700: JUMP S1
0x1701: STOP 
0x1702: MISSING 0xdd
0x1703: V2335 = CALLCODE S0 S1 S2 S3 S4 S5 S6
0x1704: M[V2335] = S7
0x1705: MISSING 0xad
0x1706: V2336 = SHL S0 S1
0x1707: MISSING 0xe2
0x1708: MISSING 0xc8
0x170a: V2337 = 0xc2b068fc378daa952ba7
0x1715: V2338 = CALL 0xc2b068fc378daa952ba7 S12 S1 S2 S3 S4 S5
0x1716: V2339 = 0xc4a11628
0x171b: V2340 = CREATE2 0xc4a11628 V2338 S6 S7
0x171c: V2341 = GAS
0x171d: MISSING 0x4d
0x171e: V2342 = CREATE2 S0 S1 S2 S3
0x171f: MISSING 0x23
0x1720: MISSING 0xb3
0x1721: MISSING 0xef
0x1722: LOG S0 S1 S2
0x1723: V2343 = 0x627a7a723058
0x172a: V2344 = SHA3 0x627a7a723058 S3
0x172b: MISSING 0x2e
0x172c: MISSING 0x23
0x172e: V2345 = ADDRESS
0x172f: V2346 = 0x486d916bf9dc2a38c73a149df9fa
0x173e: CODECOPY 0x486d916bf9dc2a38c73a149df9fa V2345 S5
0x173f: MISSING 0x24
0x1740: V2347 = 0x56f3efcd56d8cf46e5cc0029
---
Entry stack: []
Stack pops: 36118
Stack additions: [0x56f3efcd56d8cf46e5cc0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x1fd
Exit block: 0x27a
Body: 0x1fd, 0x204, 0x208, 0x210, 0x234, 0x23d, 0x245, 0x24d, 0x261, 0x27a, 0x6dc, 0x72c, 0x734, 0x747, 0x755, 0x769, 0x772

Function 1:
Public function signature: 0x7da68f5
Entry block: 0x288
Exit block: 0x2bf
Body: 0x288, 0x28f, 0x293, 0x29b, 0x2bf, 0x77a, 0x790, 0x797, 0x79b, 0x816, 0x817, 0x81a

Function 2:
Public function signature: 0x95ea7b3
Entry block: 0x29d
Exit block: 0x2bf
Body: 0x29d, 0x2a4, 0x2a8, 0x2bf, 0x81c, 0x832, 0x836, 0x8f4, 0x8f8, 0x905, 0x909, 0x915, 0x916

Function 3:
Public function signature: 0xb7e9c44
Entry block: 0x2d3
Exit block: 0x2bf
Body: 0x29b, 0x2bf, 0x2d3, 0x2da, 0x2de, 0x816, 0x817, 0x81a, 0x91f, 0x935, 0x93c, 0x940, 0x951, 0x955, 0x98e, 0x992, 0x993, 0x994

Function 4:
Public function signature: 0x13af4035
Entry block: 0x2f4
Exit block: 0x2bf
Body: 0x29b, 0x2bf, 0x2f4, 0x2fb, 0x2ff, 0x816, 0x817, 0x81a, 0x997, 0x9af, 0x9b6, 0x9ba, 0x9cf, 0xa41, 0xa45, 0xa52, 0xa56, 0xadd, 0xae1, 0xaee, 0xaf2, 0x15e0, 0x15f6, 0x15fd, 0x1601, 0x165d, 0x165e

Function 5:
Public function signature: 0x18160ddd
Entry block: 0x315
Exit block: 0x2bf
Body: 0x29b, 0x2bf, 0x315, 0x31c, 0x320, 0x328, 0x816, 0x817, 0x81a, 0xb04, 0xb4a, 0xb4e, 0xb5b, 0xb5f, 0xb6b, 0x16dc

Function 6:
Public function signature: 0x23b872dd
Entry block: 0x33a
Exit block: 0x2bf
Body: 0x2bf, 0x33a, 0x341, 0x345

Function 7:
Public function signature: 0x313ce567
Entry block: 0x376
Exit block: 0x328
Body: 0x328, 0x376, 0x37d, 0x381, 0xcae

Function 8:
Public function signature: 0x3452f51d
Entry block: 0x39b
Exit block: 0x2bf
Body: 0x2bf, 0x39b, 0x3a2, 0x3a6, 0xcb4, 0xcc9, 0xccc

Function 9:
Public function signature: 0x69d3e20e
Entry block: 0x3da
Exit block: 0x2bf
Body: 0x29b, 0x2bf, 0x3da, 0x3e1, 0x3e5, 0x816, 0x817, 0x81a, 0xcd2, 0xce8, 0xcef, 0xcf3, 0xd06, 0xd0a, 0xdac, 0xdb0, 0xdbd, 0xdc1, 0xe04, 0xe05, 0xe08, 0xe09

Function 10:
Public function signature: 0x70a08231
Entry block: 0x3fb
Exit block: 0x402
Body: 0x328, 0x3fb, 0x402, 0x406

Function 11:
Public function signature: 0x71857000
Entry block: 0x42c
Exit block: 0x2bf
Body: 0x29b, 0x2bf, 0x42c, 0x433, 0x437, 0xe89, 0xea1, 0xea8, 0xeac, 0xf2f, 0xf30, 0xf33

Function 12:
Public function signature: 0x75f12b21
Entry block: 0x45f
Exit block: 0x2bf
Body: 0x2bf, 0x45f, 0x466, 0x46a, 0xf38

Function 13:
Public function signature: 0x7a9e5e4b
Entry block: 0x486
Exit block: 0x2bf
Body: 0x29b, 0x2bf, 0x486, 0x48d, 0x491, 0x816, 0x817, 0x81a, 0xf48, 0xf5e, 0xf65, 0xf69, 0xfc5, 0xfc6

Function 14:
Public function signature: 0x8402181f
Entry block: 0x4a7
Exit block: 0x2bf
Body: 0x2bf, 0x4a7, 0x4ae, 0x4b2, 0xcc9, 0xccc, 0xfc9

Function 15:
Public function signature: 0x8da5cb5b
Entry block: 0x4e6
Exit block: 0x4f9
Body: 0x4e6, 0x4ed, 0x4f1, 0x4f9, 0xfe8

Function 16:
Public function signature: 0x90bc1693
Entry block: 0x515
Exit block: 0x2bf
Body: 0x29b, 0x2bf, 0x515, 0x51c, 0x520, 0x816, 0x817, 0x81a, 0xff7, 0x100d, 0x1014, 0x1018, 0x102b, 0x102f, 0x10e0, 0x10e4, 0x10f1, 0x10f5, 0x10f9, 0x10fa, 0x10fd, 0x10fe

Function 17:
Public function signature: 0x95d89b41
Entry block: 0x536
Exit block: 0x328
Body: 0x328, 0x536, 0x53d, 0x541, 0x1101

Function 18:
Public function signature: 0xa9059cbb
Entry block: 0x55b
Exit block: 0x562
Body: 0x2bf, 0x55b, 0x562, 0x566

Function 19:
Public function signature: 0xbe9a6555
Entry block: 0x591
Exit block: 0x2bf
Body: 0x29b, 0x2bf, 0x591, 0x598, 0x59c, 0x816, 0x817, 0x81a, 0x1246, 0x125c, 0x1263, 0x1267, 0x12dc, 0x12dd, 0x12e0

Function 20:
Public function signature: 0xbf7e214f
Entry block: 0x5a6
Exit block: 0x4f9
Body: 0x4f9, 0x5a6, 0x5ad, 0x5b1, 0x12e2

Function 21:
Public function signature: 0xc47f0027
Entry block: 0x5d5
Exit block: 0x2bf
Body: 0x29b, 0x2bf, 0x328, 0x5d5, 0x5dc, 0x5e0, 0x816, 0x817, 0x81a, 0xb6b, 0x12f1, 0x1307, 0x130e, 0x1312, 0x1661, 0x1692, 0x16a2, 0x16b1, 0x16b4, 0x16bd, 0x16cf, 0x16d0, 0x16dc, 0x16e0, 0x16e6, 0x16ef

Function 22:
Public function signature: 0xd7dfa0dd
Entry block: 0x628
Exit block: 0x4f9
Body: 0x4f9, 0x628, 0x62f, 0x633, 0x132b

Function 23:
Public function signature: 0xdd62ed3e
Entry block: 0x657
Exit block: 0x328
Body: 0x328, 0x657, 0x65e, 0x662, 0x133a, 0x1399, 0x139d, 0x13aa, 0x13ae, 0x13ba

Function 24:
Public function signature: 0xe9bb84c2
Entry block: 0x68e
Exit block: 0x2bf
Body: 0x29b, 0x2bf, 0x68e, 0x695, 0x699, 0x816, 0x817, 0x81a, 0x13c0, 0x13d7, 0x13db, 0x13ed, 0x13f1, 0x141e

Function 25:
Public function signature: 0xf36d29e7
Entry block: 0x6b2
Exit block: 0x29b
Body: 0x29b, 0x6b2, 0x6b9, 0x6bd, 0x1427, 0x143e, 0x1442, 0x1478

Function 26:
Public fallback function
Entry block: 0x138
Exit block: 0x1fa
Body: 0x138, 0x139, 0x144, 0x148, 0x1a3, 0x1a7, 0x1b4, 0x1b8, 0x1fa

Function 27:
Private function
Entry block: 0x147d
Exit block: 0x919
Body: 0x919, 0x147d, 0x149a, 0x14a1, 0x14b9, 0x14c7, 0x14cd, 0x14d4, 0x14e7, 0x153c, 0x15b5, 0x15c6

Function 28:
Private function
Entry block: 0x1107
Exit block: 0x123f
Body: 0x1107, 0x1123, 0x11e5, 0x11f6, 0x123b, 0x123c, 0x123f

Function 29:
Private function
Entry block: 0xe0c
Exit block: 0xe84
Body: 0xe0c, 0xe67, 0xe78, 0xe84

Function 30:
Private function
Entry block: 0xb6e
Exit block: 0x123f
Body: 0xb6e, 0xb8a, 0xc4c, 0xc5d, 0xca2, 0xca3, 0xca6

