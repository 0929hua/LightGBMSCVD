Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x78]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x78
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x78
0xc: JUMPI 0x78 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x7d]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x6fdde03
0x3c EQ
0x3d PUSH2 0x7d
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x6fdde03
0x3c: V13 = EQ 0x6fdde03 V11
0x3d: V14 = 0x7d
0x40: JUMPI 0x7d V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x10b]
---
0x41 DUP1
0x42 PUSH4 0x34798541
0x47 EQ
0x48 PUSH2 0x10b
0x4b JUMPI
---
0x42: V15 = 0x34798541
0x47: V16 = EQ 0x34798541 V11
0x48: V17 = 0x10b
0x4b: JUMPI 0x10b V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x13b]
---
0x4c DUP1
0x4d PUSH4 0x5daf08ca
0x52 EQ
0x53 PUSH2 0x13b
0x56 JUMPI
---
0x4d: V18 = 0x5daf08ca
0x52: V19 = EQ 0x5daf08ca V11
0x53: V20 = 0x13b
0x56: JUMPI 0x13b V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x19e]
---
0x57 DUP1
0x58 PUSH4 0x95d89b41
0x5d EQ
0x5e PUSH2 0x19e
0x61 JUMPI
---
0x58: V21 = 0x95d89b41
0x5d: V22 = EQ 0x95d89b41 V11
0x5e: V23 = 0x19e
0x61: JUMPI 0x19e V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x22c]
---
0x62 DUP1
0x63 PUSH4 0xc2bfccc0
0x68 EQ
0x69 PUSH2 0x22c
0x6c JUMPI
---
0x63: V24 = 0xc2bfccc0
0x68: V25 = EQ 0xc2bfccc0 V11
0x69: V26 = 0x22c
0x6c: JUMPI 0x22c V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x259]
---
0x6d DUP1
0x6e PUSH4 0xd874082a
0x73 EQ
0x74 PUSH2 0x259
0x77 JUMPI
---
0x6e: V27 = 0xd874082a
0x73: V28 = EQ 0xd874082a V11
0x74: V29 = 0x259
0x77: JUMPI 0x259 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x7c]
---
Predecessors: [0x0, 0x6d]
Successors: []
---
0x78 JUMPDEST
0x79 PUSH1 0x0
0x7b DUP1
0x7c REVERT
---
0x78: JUMPDEST 
0x79: V30 = 0x0
0x7c: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7d
[0x7d:0x83]
---
Predecessors: [0xd]
Successors: [0x84, 0x88]
---
0x7d JUMPDEST
0x7e CALLVALUE
0x7f ISZERO
0x80 PUSH2 0x88
0x83 JUMPI
---
0x7d: JUMPDEST 
0x7e: V31 = CALLVALUE
0x7f: V32 = ISZERO V31
0x80: V33 = 0x88
0x83: JUMPI 0x88 V32
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x84
[0x84:0x87]
---
Predecessors: [0x7d]
Successors: []
---
0x84 PUSH1 0x0
0x86 DUP1
0x87 REVERT
---
0x84: V34 = 0x0
0x87: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x88
[0x88:0x8f]
---
Predecessors: [0x7d]
Successors: [0x26e]
---
0x88 JUMPDEST
0x89 PUSH2 0x90
0x8c PUSH2 0x26e
0x8f JUMP
---
0x88: JUMPDEST 
0x89: V35 = 0x90
0x8c: V36 = 0x26e
0x8f: JUMP 0x26e
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x90]
Exit stack: [V11, 0x90]

================================

Block 0x90
[0x90:0xb4]
---
Predecessors: [0x26e]
Successors: [0xb5]
---
0x90 JUMPDEST
0x91 PUSH1 0x40
0x93 MLOAD
0x94 DUP1
0x95 DUP1
0x96 PUSH1 0x20
0x98 ADD
0x99 DUP3
0x9a DUP2
0x9b SUB
0x9c DUP3
0x9d MSTORE
0x9e DUP4
0x9f DUP2
0xa0 DUP2
0xa1 MLOAD
0xa2 DUP2
0xa3 MSTORE
0xa4 PUSH1 0x20
0xa6 ADD
0xa7 SWAP2
0xa8 POP
0xa9 DUP1
0xaa MLOAD
0xab SWAP1
0xac PUSH1 0x20
0xae ADD
0xaf SWAP1
0xb0 DUP1
0xb1 DUP4
0xb2 DUP4
0xb3 PUSH1 0x0
---
0x90: JUMPDEST 
0x91: V37 = 0x40
0x93: V38 = M[0x40]
0x96: V39 = 0x20
0x98: V40 = ADD 0x20 V38
0x9b: V41 = SUB V40 V38
0x9d: M[V38] = V41
0xa1: V42 = M[V187]
0xa3: M[V40] = V42
0xa4: V43 = 0x20
0xa6: V44 = ADD 0x20 V40
0xaa: V45 = M[V187]
0xac: V46 = 0x20
0xae: V47 = ADD 0x20 V187
0xb3: V48 = 0x0
---
Entry stack: [V11, 0x90, V187]
Stack pops: 1
Stack additions: [S0, V38, V38, V44, V47, V45, V45, V44, V47, 0x0]
Exit stack: [V11, 0x90, V187, V38, V38, V44, V47, V45, V45, V44, V47, 0x0]

================================

Block 0xb5
[0xb5:0xbd]
---
Predecessors: [0x90, 0xbe]
Successors: [0xbe, 0xd0]
---
0xb5 JUMPDEST
0xb6 DUP4
0xb7 DUP2
0xb8 LT
0xb9 ISZERO
0xba PUSH2 0xd0
0xbd JUMPI
---
0xb5: JUMPDEST 
0xb8: V49 = LT S0 V45
0xb9: V50 = ISZERO V49
0xba: V51 = 0xd0
0xbd: JUMPI 0xd0 V50
---
Entry stack: [V11, 0x90, V187, V38, V38, V44, V47, V45, V45, V44, V47, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x90, V187, V38, V38, V44, V47, V45, V45, V44, V47, S0]

================================

Block 0xbe
[0xbe:0xcf]
---
Predecessors: [0xb5]
Successors: [0xb5]
---
0xbe DUP1
0xbf DUP3
0xc0 ADD
0xc1 MLOAD
0xc2 DUP2
0xc3 DUP5
0xc4 ADD
0xc5 MSTORE
0xc6 PUSH1 0x20
0xc8 DUP2
0xc9 ADD
0xca SWAP1
0xcb POP
0xcc PUSH2 0xb5
0xcf JUMP
---
0xc0: V52 = ADD V47 S0
0xc1: V53 = M[V52]
0xc4: V54 = ADD V44 S0
0xc5: M[V54] = V53
0xc6: V55 = 0x20
0xc9: V56 = ADD S0 0x20
0xcc: V57 = 0xb5
0xcf: JUMP 0xb5
---
Entry stack: [V11, 0x90, V187, V38, V38, V44, V47, V45, V45, V44, V47, S0]
Stack pops: 3
Stack additions: [S2, S1, V56]
Exit stack: [V11, 0x90, V187, V38, V38, V44, V47, V45, V45, V44, V47, V56]

================================

Block 0xd0
[0xd0:0xe3]
---
Predecessors: [0xb5]
Successors: [0xe4, 0xfd]
---
0xd0 JUMPDEST
0xd1 POP
0xd2 POP
0xd3 POP
0xd4 POP
0xd5 SWAP1
0xd6 POP
0xd7 SWAP1
0xd8 DUP2
0xd9 ADD
0xda SWAP1
0xdb PUSH1 0x1f
0xdd AND
0xde DUP1
0xdf ISZERO
0xe0 PUSH2 0xfd
0xe3 JUMPI
---
0xd0: JUMPDEST 
0xd9: V58 = ADD V45 V44
0xdb: V59 = 0x1f
0xdd: V60 = AND 0x1f V45
0xdf: V61 = ISZERO V60
0xe0: V62 = 0xfd
0xe3: JUMPI 0xfd V61
---
Entry stack: [V11, 0x90, V187, V38, V38, V44, V47, V45, V45, V44, V47, S0]
Stack pops: 7
Stack additions: [V58, V60]
Exit stack: [V11, 0x90, V187, V38, V38, V58, V60]

================================

Block 0xe4
[0xe4:0xfc]
---
Predecessors: [0xd0]
Successors: [0xfd]
---
0xe4 DUP1
0xe5 DUP3
0xe6 SUB
0xe7 DUP1
0xe8 MLOAD
0xe9 PUSH1 0x1
0xeb DUP4
0xec PUSH1 0x20
0xee SUB
0xef PUSH2 0x100
0xf2 EXP
0xf3 SUB
0xf4 NOT
0xf5 AND
0xf6 DUP2
0xf7 MSTORE
0xf8 PUSH1 0x20
0xfa ADD
0xfb SWAP2
0xfc POP
---
0xe6: V63 = SUB V58 V60
0xe8: V64 = M[V63]
0xe9: V65 = 0x1
0xec: V66 = 0x20
0xee: V67 = SUB 0x20 V60
0xef: V68 = 0x100
0xf2: V69 = EXP 0x100 V67
0xf3: V70 = SUB V69 0x1
0xf4: V71 = NOT V70
0xf5: V72 = AND V71 V64
0xf7: M[V63] = V72
0xf8: V73 = 0x20
0xfa: V74 = ADD 0x20 V63
---
Entry stack: [V11, 0x90, V187, V38, V38, V58, V60]
Stack pops: 2
Stack additions: [V74, S0]
Exit stack: [V11, 0x90, V187, V38, V38, V74, V60]

================================

Block 0xfd
[0xfd:0x10a]
---
Predecessors: [0xd0, 0xe4]
Successors: []
---
0xfd JUMPDEST
0xfe POP
0xff SWAP3
0x100 POP
0x101 POP
0x102 POP
0x103 PUSH1 0x40
0x105 MLOAD
0x106 DUP1
0x107 SWAP2
0x108 SUB
0x109 SWAP1
0x10a RETURN
---
0xfd: JUMPDEST 
0x103: V75 = 0x40
0x105: V76 = M[0x40]
0x108: V77 = SUB S1 V76
0x10a: RETURN V76 V77
---
Entry stack: [V11, 0x90, V187, V38, V38, S1, V60]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x90]

================================

Block 0x10b
[0x10b:0x120]
---
Predecessors: [0x41]
Successors: [0x2a7]
---
0x10b JUMPDEST
0x10c PUSH2 0x121
0x10f PUSH1 0x4
0x111 DUP1
0x112 DUP1
0x113 CALLDATALOAD
0x114 SWAP1
0x115 PUSH1 0x20
0x117 ADD
0x118 SWAP1
0x119 SWAP2
0x11a SWAP1
0x11b POP
0x11c POP
0x11d PUSH2 0x2a7
0x120 JUMP
---
0x10b: JUMPDEST 
0x10c: V78 = 0x121
0x10f: V79 = 0x4
0x113: V80 = CALLDATALOAD 0x4
0x115: V81 = 0x20
0x117: V82 = ADD 0x20 0x4
0x11d: V83 = 0x2a7
0x120: JUMP 0x2a7
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x121, V80]
Exit stack: [V11, 0x121, V80]

================================

Block 0x121
[0x121:0x13a]
---
Predecessors: [0x501]
Successors: []
---
0x121 JUMPDEST
0x122 PUSH1 0x40
0x124 MLOAD
0x125 DUP1
0x126 DUP3
0x127 ISZERO
0x128 ISZERO
0x129 ISZERO
0x12a ISZERO
0x12b DUP2
0x12c MSTORE
0x12d PUSH1 0x20
0x12f ADD
0x130 SWAP2
0x131 POP
0x132 POP
0x133 PUSH1 0x40
0x135 MLOAD
0x136 DUP1
0x137 SWAP2
0x138 SUB
0x139 SWAP1
0x13a RETURN
---
0x121: JUMPDEST 
0x122: V84 = 0x40
0x124: V85 = M[0x40]
0x127: V86 = ISZERO 0x1
0x128: V87 = ISZERO 0x0
0x129: V88 = ISZERO 0x1
0x12a: V89 = ISZERO 0x0
0x12c: M[V85] = 0x1
0x12d: V90 = 0x20
0x12f: V91 = ADD 0x20 V85
0x133: V92 = 0x40
0x135: V93 = M[0x40]
0x138: V94 = SUB V91 V93
0x13a: RETURN V93 V94
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x13b
[0x13b:0x141]
---
Predecessors: [0x4c]
Successors: [0x142, 0x146]
---
0x13b JUMPDEST
0x13c CALLVALUE
0x13d ISZERO
0x13e PUSH2 0x146
0x141 JUMPI
---
0x13b: JUMPDEST 
0x13c: V95 = CALLVALUE
0x13d: V96 = ISZERO V95
0x13e: V97 = 0x146
0x141: JUMPI 0x146 V96
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x142
[0x142:0x145]
---
Predecessors: [0x13b]
Successors: []
---
0x142 PUSH1 0x0
0x144 DUP1
0x145 REVERT
---
0x142: V98 = 0x0
0x145: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x146
[0x146:0x15b]
---
Predecessors: [0x13b]
Successors: [0x525]
---
0x146 JUMPDEST
0x147 PUSH2 0x15c
0x14a PUSH1 0x4
0x14c DUP1
0x14d DUP1
0x14e CALLDATALOAD
0x14f SWAP1
0x150 PUSH1 0x20
0x152 ADD
0x153 SWAP1
0x154 SWAP2
0x155 SWAP1
0x156 POP
0x157 POP
0x158 PUSH2 0x525
0x15b JUMP
---
0x146: JUMPDEST 
0x147: V99 = 0x15c
0x14a: V100 = 0x4
0x14e: V101 = CALLDATALOAD 0x4
0x150: V102 = 0x20
0x152: V103 = ADD 0x20 0x4
0x158: V104 = 0x525
0x15b: JUMP 0x525
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x15c, V101]
Exit stack: [V11, 0x15c, V101]

================================

Block 0x15c
[0x15c:0x19d]
---
Predecessors: [0x534]
Successors: []
---
0x15c JUMPDEST
0x15d PUSH1 0x40
0x15f MLOAD
0x160 DUP1
0x161 DUP3
0x162 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x177 AND
0x178 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18d AND
0x18e DUP2
0x18f MSTORE
0x190 PUSH1 0x20
0x192 ADD
0x193 SWAP2
0x194 POP
0x195 POP
0x196 PUSH1 0x40
0x198 MLOAD
0x199 DUP1
0x19a SWAP2
0x19b SUB
0x19c SWAP1
0x19d RETURN
---
0x15c: JUMPDEST 
0x15d: V105 = 0x40
0x15f: V106 = M[0x40]
0x162: V107 = 0xffffffffffffffffffffffffffffffffffffffff
0x177: V108 = AND 0xffffffffffffffffffffffffffffffffffffffff V399
0x178: V109 = 0xffffffffffffffffffffffffffffffffffffffff
0x18d: V110 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x18f: M[V106] = V110
0x190: V111 = 0x20
0x192: V112 = ADD 0x20 V106
0x196: V113 = 0x40
0x198: V114 = M[0x40]
0x19b: V115 = SUB V112 V114
0x19d: RETURN V114 V115
---
Entry stack: [V11, 0x15c, V399]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x15c]

================================

Block 0x19e
[0x19e:0x1a4]
---
Predecessors: [0x57]
Successors: [0x1a5, 0x1a9]
---
0x19e JUMPDEST
0x19f CALLVALUE
0x1a0 ISZERO
0x1a1 PUSH2 0x1a9
0x1a4 JUMPI
---
0x19e: JUMPDEST 
0x19f: V116 = CALLVALUE
0x1a0: V117 = ISZERO V116
0x1a1: V118 = 0x1a9
0x1a4: JUMPI 0x1a9 V117
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1a5
[0x1a5:0x1a8]
---
Predecessors: [0x19e]
Successors: []
---
0x1a5 PUSH1 0x0
0x1a7 DUP1
0x1a8 REVERT
---
0x1a5: V119 = 0x0
0x1a8: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1a9
[0x1a9:0x1b0]
---
Predecessors: [0x19e]
Successors: [0x564]
---
0x1a9 JUMPDEST
0x1aa PUSH2 0x1b1
0x1ad PUSH2 0x564
0x1b0 JUMP
---
0x1a9: JUMPDEST 
0x1aa: V120 = 0x1b1
0x1ad: V121 = 0x564
0x1b0: JUMP 0x564
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1b1]
Exit stack: [V11, 0x1b1]

================================

Block 0x1b1
[0x1b1:0x1d5]
---
Predecessors: [0x564]
Successors: [0x1d6]
---
0x1b1 JUMPDEST
0x1b2 PUSH1 0x40
0x1b4 MLOAD
0x1b5 DUP1
0x1b6 DUP1
0x1b7 PUSH1 0x20
0x1b9 ADD
0x1ba DUP3
0x1bb DUP2
0x1bc SUB
0x1bd DUP3
0x1be MSTORE
0x1bf DUP4
0x1c0 DUP2
0x1c1 DUP2
0x1c2 MLOAD
0x1c3 DUP2
0x1c4 MSTORE
0x1c5 PUSH1 0x20
0x1c7 ADD
0x1c8 SWAP2
0x1c9 POP
0x1ca DUP1
0x1cb MLOAD
0x1cc SWAP1
0x1cd PUSH1 0x20
0x1cf ADD
0x1d0 SWAP1
0x1d1 DUP1
0x1d2 DUP4
0x1d3 DUP4
0x1d4 PUSH1 0x0
---
0x1b1: JUMPDEST 
0x1b2: V122 = 0x40
0x1b4: V123 = M[0x40]
0x1b7: V124 = 0x20
0x1b9: V125 = ADD 0x20 V123
0x1bc: V126 = SUB V125 V123
0x1be: M[V123] = V126
0x1c2: V127 = M[V401]
0x1c4: M[V125] = V127
0x1c5: V128 = 0x20
0x1c7: V129 = ADD 0x20 V125
0x1cb: V130 = M[V401]
0x1cd: V131 = 0x20
0x1cf: V132 = ADD 0x20 V401
0x1d4: V133 = 0x0
---
Entry stack: [V11, 0x1b1, V401]
Stack pops: 1
Stack additions: [S0, V123, V123, V129, V132, V130, V130, V129, V132, 0x0]
Exit stack: [V11, 0x1b1, V401, V123, V123, V129, V132, V130, V130, V129, V132, 0x0]

================================

Block 0x1d6
[0x1d6:0x1de]
---
Predecessors: [0x1b1, 0x1df]
Successors: [0x1df, 0x1f1]
---
0x1d6 JUMPDEST
0x1d7 DUP4
0x1d8 DUP2
0x1d9 LT
0x1da ISZERO
0x1db PUSH2 0x1f1
0x1de JUMPI
---
0x1d6: JUMPDEST 
0x1d9: V134 = LT S0 V130
0x1da: V135 = ISZERO V134
0x1db: V136 = 0x1f1
0x1de: JUMPI 0x1f1 V135
---
Entry stack: [V11, 0x1b1, V401, V123, V123, V129, V132, V130, V130, V129, V132, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x1b1, V401, V123, V123, V129, V132, V130, V130, V129, V132, S0]

================================

Block 0x1df
[0x1df:0x1f0]
---
Predecessors: [0x1d6]
Successors: [0x1d6]
---
0x1df DUP1
0x1e0 DUP3
0x1e1 ADD
0x1e2 MLOAD
0x1e3 DUP2
0x1e4 DUP5
0x1e5 ADD
0x1e6 MSTORE
0x1e7 PUSH1 0x20
0x1e9 DUP2
0x1ea ADD
0x1eb SWAP1
0x1ec POP
0x1ed PUSH2 0x1d6
0x1f0 JUMP
---
0x1e1: V137 = ADD V132 S0
0x1e2: V138 = M[V137]
0x1e5: V139 = ADD V129 S0
0x1e6: M[V139] = V138
0x1e7: V140 = 0x20
0x1ea: V141 = ADD S0 0x20
0x1ed: V142 = 0x1d6
0x1f0: JUMP 0x1d6
---
Entry stack: [V11, 0x1b1, V401, V123, V123, V129, V132, V130, V130, V129, V132, S0]
Stack pops: 3
Stack additions: [S2, S1, V141]
Exit stack: [V11, 0x1b1, V401, V123, V123, V129, V132, V130, V130, V129, V132, V141]

================================

Block 0x1f1
[0x1f1:0x204]
---
Predecessors: [0x1d6]
Successors: [0x205, 0x21e]
---
0x1f1 JUMPDEST
0x1f2 POP
0x1f3 POP
0x1f4 POP
0x1f5 POP
0x1f6 SWAP1
0x1f7 POP
0x1f8 SWAP1
0x1f9 DUP2
0x1fa ADD
0x1fb SWAP1
0x1fc PUSH1 0x1f
0x1fe AND
0x1ff DUP1
0x200 ISZERO
0x201 PUSH2 0x21e
0x204 JUMPI
---
0x1f1: JUMPDEST 
0x1fa: V143 = ADD V130 V129
0x1fc: V144 = 0x1f
0x1fe: V145 = AND 0x1f V130
0x200: V146 = ISZERO V145
0x201: V147 = 0x21e
0x204: JUMPI 0x21e V146
---
Entry stack: [V11, 0x1b1, V401, V123, V123, V129, V132, V130, V130, V129, V132, S0]
Stack pops: 7
Stack additions: [V143, V145]
Exit stack: [V11, 0x1b1, V401, V123, V123, V143, V145]

================================

Block 0x205
[0x205:0x21d]
---
Predecessors: [0x1f1]
Successors: [0x21e]
---
0x205 DUP1
0x206 DUP3
0x207 SUB
0x208 DUP1
0x209 MLOAD
0x20a PUSH1 0x1
0x20c DUP4
0x20d PUSH1 0x20
0x20f SUB
0x210 PUSH2 0x100
0x213 EXP
0x214 SUB
0x215 NOT
0x216 AND
0x217 DUP2
0x218 MSTORE
0x219 PUSH1 0x20
0x21b ADD
0x21c SWAP2
0x21d POP
---
0x207: V148 = SUB V143 V145
0x209: V149 = M[V148]
0x20a: V150 = 0x1
0x20d: V151 = 0x20
0x20f: V152 = SUB 0x20 V145
0x210: V153 = 0x100
0x213: V154 = EXP 0x100 V152
0x214: V155 = SUB V154 0x1
0x215: V156 = NOT V155
0x216: V157 = AND V156 V149
0x218: M[V148] = V157
0x219: V158 = 0x20
0x21b: V159 = ADD 0x20 V148
---
Entry stack: [V11, 0x1b1, V401, V123, V123, V143, V145]
Stack pops: 2
Stack additions: [V159, S0]
Exit stack: [V11, 0x1b1, V401, V123, V123, V159, V145]

================================

Block 0x21e
[0x21e:0x22b]
---
Predecessors: [0x1f1, 0x205]
Successors: []
---
0x21e JUMPDEST
0x21f POP
0x220 SWAP3
0x221 POP
0x222 POP
0x223 POP
0x224 PUSH1 0x40
0x226 MLOAD
0x227 DUP1
0x228 SWAP2
0x229 SUB
0x22a SWAP1
0x22b RETURN
---
0x21e: JUMPDEST 
0x224: V160 = 0x40
0x226: V161 = M[0x40]
0x229: V162 = SUB S1 V161
0x22b: RETURN V161 V162
---
Entry stack: [V11, 0x1b1, V401, V123, V123, S1, V145]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x1b1]

================================

Block 0x22c
[0x22c:0x232]
---
Predecessors: [0x62]
Successors: [0x233, 0x237]
---
0x22c JUMPDEST
0x22d CALLVALUE
0x22e ISZERO
0x22f PUSH2 0x237
0x232 JUMPI
---
0x22c: JUMPDEST 
0x22d: V163 = CALLVALUE
0x22e: V164 = ISZERO V163
0x22f: V165 = 0x237
0x232: JUMPI 0x237 V164
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x233
[0x233:0x236]
---
Predecessors: [0x22c]
Successors: []
---
0x233 PUSH1 0x0
0x235 DUP1
0x236 REVERT
---
0x233: V166 = 0x0
0x236: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x237
[0x237:0x23e]
---
Predecessors: [0x22c]
Successors: [0x59d]
---
0x237 JUMPDEST
0x238 PUSH2 0x23f
0x23b PUSH2 0x59d
0x23e JUMP
---
0x237: JUMPDEST 
0x238: V167 = 0x23f
0x23b: V168 = 0x59d
0x23e: JUMP 0x59d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x23f]
Exit stack: [V11, 0x23f]

================================

Block 0x23f
[0x23f:0x258]
---
Predecessors: [0x59d]
Successors: []
---
0x23f JUMPDEST
0x240 PUSH1 0x40
0x242 MLOAD
0x243 DUP1
0x244 DUP3
0x245 ISZERO
0x246 ISZERO
0x247 ISZERO
0x248 ISZERO
0x249 DUP2
0x24a MSTORE
0x24b PUSH1 0x20
0x24d ADD
0x24e SWAP2
0x24f POP
0x250 POP
0x251 PUSH1 0x40
0x253 MLOAD
0x254 DUP1
0x255 SWAP2
0x256 SUB
0x257 SWAP1
0x258 RETURN
---
0x23f: JUMPDEST 
0x240: V169 = 0x40
0x242: V170 = M[0x40]
0x245: V171 = ISZERO V414
0x246: V172 = ISZERO V171
0x247: V173 = ISZERO V172
0x248: V174 = ISZERO V173
0x24a: M[V170] = V174
0x24b: V175 = 0x20
0x24d: V176 = ADD 0x20 V170
0x251: V177 = 0x40
0x253: V178 = M[0x40]
0x256: V179 = SUB V176 V178
0x258: RETURN V178 V179
---
Entry stack: [V11, 0x23f, V414]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x23f]

================================

Block 0x259
[0x259:0x25f]
---
Predecessors: [0x6d]
Successors: [0x260, 0x264]
---
0x259 JUMPDEST
0x25a CALLVALUE
0x25b ISZERO
0x25c PUSH2 0x264
0x25f JUMPI
---
0x259: JUMPDEST 
0x25a: V180 = CALLVALUE
0x25b: V181 = ISZERO V180
0x25c: V182 = 0x264
0x25f: JUMPI 0x264 V181
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x260
[0x260:0x263]
---
Predecessors: [0x259]
Successors: []
---
0x260 PUSH1 0x0
0x262 DUP1
0x263 REVERT
---
0x260: V183 = 0x0
0x263: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x264
[0x264:0x26b]
---
Predecessors: [0x259]
Successors: [0x5af]
---
0x264 JUMPDEST
0x265 PUSH2 0x26c
0x268 PUSH2 0x5af
0x26b JUMP
---
0x264: JUMPDEST 
0x265: V184 = 0x26c
0x268: V185 = 0x5af
0x26b: JUMP 0x5af
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x26c]
Exit stack: [V11, 0x26c]

================================

Block 0x26c
[0x26c:0x26d]
---
Predecessors: [0x60b]
Successors: []
---
0x26c JUMPDEST
0x26d STOP
---
0x26c: JUMPDEST 
0x26d: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x26e
[0x26e:0x2a6]
---
Predecessors: [0x88]
Successors: [0x90]
---
0x26e JUMPDEST
0x26f PUSH1 0x40
0x271 DUP1
0x272 MLOAD
0x273 SWAP1
0x274 DUP2
0x275 ADD
0x276 PUSH1 0x40
0x278 MSTORE
0x279 DUP1
0x27a PUSH1 0x4
0x27c DUP2
0x27d MSTORE
0x27e PUSH1 0x20
0x280 ADD
0x281 PUSH32 0x5465737400000000000000000000000000000000000000000000000000000000
0x2a2 DUP2
0x2a3 MSTORE
0x2a4 POP
0x2a5 DUP2
0x2a6 JUMP
---
0x26e: JUMPDEST 
0x26f: V186 = 0x40
0x272: V187 = M[0x40]
0x275: V188 = ADD V187 0x40
0x276: V189 = 0x40
0x278: M[0x40] = V188
0x27a: V190 = 0x4
0x27d: M[V187] = 0x4
0x27e: V191 = 0x20
0x280: V192 = ADD 0x20 V187
0x281: V193 = 0x5465737400000000000000000000000000000000000000000000000000000000
0x2a3: M[V192] = 0x5465737400000000000000000000000000000000000000000000000000000000
0x2a6: JUMP 0x90
---
Entry stack: [V11, 0x90]
Stack pops: 1
Stack additions: [S0, V187]
Exit stack: [V11, 0x90, V187]

================================

Block 0x2a7
[0x2a7:0x2c0]
---
Predecessors: [0x10b]
Successors: [0x2c1, 0x2c5]
---
0x2a7 JUMPDEST
0x2a8 PUSH1 0x0
0x2aa DUP1
0x2ab PUSH1 0x0
0x2ad DUP1
0x2ae SWAP1
0x2af SLOAD
0x2b0 SWAP1
0x2b1 PUSH2 0x100
0x2b4 EXP
0x2b5 SWAP1
0x2b6 DIV
0x2b7 PUSH1 0xff
0x2b9 AND
0x2ba ISZERO
0x2bb ISZERO
0x2bc ISZERO
0x2bd PUSH2 0x2c5
0x2c0 JUMPI
---
0x2a7: JUMPDEST 
0x2a8: V194 = 0x0
0x2ab: V195 = 0x0
0x2af: V196 = S[0x0]
0x2b1: V197 = 0x100
0x2b4: V198 = EXP 0x100 0x0
0x2b6: V199 = DIV V196 0x1
0x2b7: V200 = 0xff
0x2b9: V201 = AND 0xff V199
0x2ba: V202 = ISZERO V201
0x2bb: V203 = ISZERO V202
0x2bc: V204 = ISZERO V203
0x2bd: V205 = 0x2c5
0x2c0: JUMPI 0x2c5 V204
---
Entry stack: [V11, 0x121, V80]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0x121, V80, 0x0, 0x0]

================================

Block 0x2c1
[0x2c1:0x2c4]
---
Predecessors: [0x2a7]
Successors: []
---
0x2c1 PUSH1 0x0
0x2c3 DUP1
0x2c4 REVERT
---
0x2c1: V206 = 0x0
0x2c4: REVERT 0x0 0x0
---
Entry stack: [V11, 0x121, V80, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x121, V80, 0x0, 0x0]

================================

Block 0x2c5
[0x2c5:0x2cf]
---
Predecessors: [0x2a7]
Successors: [0x2d0, 0x2d4]
---
0x2c5 JUMPDEST
0x2c6 PUSH1 0x0
0x2c8 DUP4
0x2c9 GT
0x2ca ISZERO
0x2cb ISZERO
0x2cc PUSH2 0x2d4
0x2cf JUMPI
---
0x2c5: JUMPDEST 
0x2c6: V207 = 0x0
0x2c9: V208 = GT V80 0x0
0x2ca: V209 = ISZERO V208
0x2cb: V210 = ISZERO V209
0x2cc: V211 = 0x2d4
0x2cf: JUMPI 0x2d4 V210
---
Entry stack: [V11, 0x121, V80, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x121, V80, 0x0, 0x0]

================================

Block 0x2d0
[0x2d0:0x2d3]
---
Predecessors: [0x2c5]
Successors: []
---
0x2d0 PUSH1 0x0
0x2d2 DUP1
0x2d3 REVERT
---
0x2d0: V212 = 0x0
0x2d3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x121, V80, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x121, V80, 0x0, 0x0]

================================

Block 0x2d4
[0x2d4:0x2d8]
---
Predecessors: [0x2c5]
Successors: [0x2d9]
---
0x2d4 JUMPDEST
0x2d5 PUSH1 0x0
0x2d7 SWAP1
0x2d8 POP
---
0x2d4: JUMPDEST 
0x2d5: V213 = 0x0
---
Entry stack: [V11, 0x121, V80, 0x0, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x121, V80, 0x0, 0x0]

================================

Block 0x2d9
[0x2d9:0x2e1]
---
Predecessors: [0x2d4, 0x477]
Successors: [0x2e2, 0x501]
---
0x2d9 JUMPDEST
0x2da DUP3
0x2db DUP2
0x2dc LT
0x2dd ISZERO
0x2de PUSH2 0x501
0x2e1 JUMPI
---
0x2d9: JUMPDEST 
0x2dc: V214 = LT S0 V80
0x2dd: V215 = ISZERO V214
0x2de: V216 = 0x501
0x2e1: JUMPI 0x501 V215
---
Entry stack: [V11, 0x121, V80, 0x0, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x121, V80, 0x0, S0]

================================

Block 0x2e2
[0x2e2:0x2f2]
---
Predecessors: [0x2d9]
Successors: [0x2f3, 0x2f4]
---
0x2e2 PUSH1 0x3
0x2e4 PUSH1 0x0
0x2e6 PUSH1 0x1
0x2e8 DUP4
0x2e9 DUP2
0x2ea SLOAD
0x2eb DUP2
0x2ec LT
0x2ed ISZERO
0x2ee ISZERO
0x2ef PUSH2 0x2f4
0x2f2 JUMPI
---
0x2e2: V217 = 0x3
0x2e4: V218 = 0x0
0x2e6: V219 = 0x1
0x2ea: V220 = S[0x1]
0x2ec: V221 = LT S0 V220
0x2ed: V222 = ISZERO V221
0x2ee: V223 = ISZERO V222
0x2ef: V224 = 0x2f4
0x2f2: JUMPI 0x2f4 V223
---
Entry stack: [V11, 0x121, V80, 0x0, S0]
Stack pops: 1
Stack additions: [S0, 0x3, 0x0, 0x1, S0]
Exit stack: [V11, 0x121, V80, 0x0, S0, 0x3, 0x0, 0x1, S0]

================================

Block 0x2f3
[0x2f3:0x2f3]
---
Predecessors: [0x2e2]
Successors: []
---
0x2f3 INVALID
---
0x2f3: INVALID 
---
Entry stack: [V11, 0x121, V80, 0x0, S4, 0x3, 0x0, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x121, V80, 0x0, S4, 0x3, 0x0, 0x1, S0]

================================

Block 0x2f4
[0x2f4:0x36e]
---
Predecessors: [0x2e2]
Successors: [0x36f, 0x462]
---
0x2f4 JUMPDEST
0x2f5 SWAP1
0x2f6 PUSH1 0x0
0x2f8 MSTORE
0x2f9 PUSH1 0x20
0x2fb PUSH1 0x0
0x2fd SHA3
0x2fe SWAP1
0x2ff ADD
0x300 PUSH1 0x0
0x302 SWAP1
0x303 SLOAD
0x304 SWAP1
0x305 PUSH2 0x100
0x308 EXP
0x309 SWAP1
0x30a DIV
0x30b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x320 AND
0x321 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x336 AND
0x337 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x34c AND
0x34d DUP2
0x34e MSTORE
0x34f PUSH1 0x20
0x351 ADD
0x352 SWAP1
0x353 DUP2
0x354 MSTORE
0x355 PUSH1 0x20
0x357 ADD
0x358 PUSH1 0x0
0x35a SHA3
0x35b PUSH1 0x0
0x35d SWAP1
0x35e SLOAD
0x35f SWAP1
0x360 PUSH2 0x100
0x363 EXP
0x364 SWAP1
0x365 DIV
0x366 PUSH1 0xff
0x368 AND
0x369 ISZERO
0x36a ISZERO
0x36b PUSH2 0x462
0x36e JUMPI
---
0x2f4: JUMPDEST 
0x2f6: V225 = 0x0
0x2f8: M[0x0] = 0x1
0x2f9: V226 = 0x20
0x2fb: V227 = 0x0
0x2fd: V228 = SHA3 0x0 0x20
0x2ff: V229 = ADD S0 V228
0x300: V230 = 0x0
0x303: V231 = S[V229]
0x305: V232 = 0x100
0x308: V233 = EXP 0x100 0x0
0x30a: V234 = DIV V231 0x1
0x30b: V235 = 0xffffffffffffffffffffffffffffffffffffffff
0x320: V236 = AND 0xffffffffffffffffffffffffffffffffffffffff V234
0x321: V237 = 0xffffffffffffffffffffffffffffffffffffffff
0x336: V238 = AND 0xffffffffffffffffffffffffffffffffffffffff V236
0x337: V239 = 0xffffffffffffffffffffffffffffffffffffffff
0x34c: V240 = AND 0xffffffffffffffffffffffffffffffffffffffff V238
0x34e: M[0x0] = V240
0x34f: V241 = 0x20
0x351: V242 = ADD 0x20 0x0
0x354: M[0x20] = 0x3
0x355: V243 = 0x20
0x357: V244 = ADD 0x20 0x20
0x358: V245 = 0x0
0x35a: V246 = SHA3 0x0 0x40
0x35b: V247 = 0x0
0x35e: V248 = S[V246]
0x360: V249 = 0x100
0x363: V250 = EXP 0x100 0x0
0x365: V251 = DIV V248 0x1
0x366: V252 = 0xff
0x368: V253 = AND 0xff V251
0x369: V254 = ISZERO V253
0x36a: V255 = ISZERO V254
0x36b: V256 = 0x462
0x36e: JUMPI 0x462 V255
---
Entry stack: [V11, 0x121, V80, 0x0, S4, 0x3, 0x0, 0x1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x121, V80, 0x0, S4]

================================

Block 0x36f
[0x36f:0x37b]
---
Predecessors: [0x2f4]
Successors: [0x37c, 0x37d]
---
0x36f PUSH1 0x1
0x371 DUP2
0x372 DUP2
0x373 SLOAD
0x374 DUP2
0x375 LT
0x376 ISZERO
0x377 ISZERO
0x378 PUSH2 0x37d
0x37b JUMPI
---
0x36f: V257 = 0x1
0x373: V258 = S[0x1]
0x375: V259 = LT S0 V258
0x376: V260 = ISZERO V259
0x377: V261 = ISZERO V260
0x378: V262 = 0x37d
0x37b: JUMPI 0x37d V261
---
Entry stack: [V11, 0x121, V80, 0x0, S0]
Stack pops: 1
Stack additions: [S0, 0x1, S0]
Exit stack: [V11, 0x121, V80, 0x0, S0, 0x1, S0]

================================

Block 0x37c
[0x37c:0x37c]
---
Predecessors: [0x36f]
Successors: []
---
0x37c INVALID
---
0x37c: INVALID 
---
Entry stack: [V11, 0x121, V80, 0x0, S2, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x121, V80, 0x0, S2, 0x1, S0]

================================

Block 0x37d
[0x37d:0x3d3]
---
Predecessors: [0x36f]
Successors: [0x3d4, 0x3d5]
---
0x37d JUMPDEST
0x37e SWAP1
0x37f PUSH1 0x0
0x381 MSTORE
0x382 PUSH1 0x20
0x384 PUSH1 0x0
0x386 SHA3
0x387 SWAP1
0x388 ADD
0x389 PUSH1 0x0
0x38b SWAP1
0x38c SLOAD
0x38d SWAP1
0x38e PUSH2 0x100
0x391 EXP
0x392 SWAP1
0x393 DIV
0x394 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a9 AND
0x3aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3bf AND
0x3c0 PUSH2 0x8fc
0x3c3 PUSH1 0x2
0x3c5 PUSH1 0x0
0x3c7 PUSH1 0x1
0x3c9 DUP6
0x3ca DUP2
0x3cb SLOAD
0x3cc DUP2
0x3cd LT
0x3ce ISZERO
0x3cf ISZERO
0x3d0 PUSH2 0x3d5
0x3d3 JUMPI
---
0x37d: JUMPDEST 
0x37f: V263 = 0x0
0x381: M[0x0] = 0x1
0x382: V264 = 0x20
0x384: V265 = 0x0
0x386: V266 = SHA3 0x0 0x20
0x388: V267 = ADD S0 V266
0x389: V268 = 0x0
0x38c: V269 = S[V267]
0x38e: V270 = 0x100
0x391: V271 = EXP 0x100 0x0
0x393: V272 = DIV V269 0x1
0x394: V273 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a9: V274 = AND 0xffffffffffffffffffffffffffffffffffffffff V272
0x3aa: V275 = 0xffffffffffffffffffffffffffffffffffffffff
0x3bf: V276 = AND 0xffffffffffffffffffffffffffffffffffffffff V274
0x3c0: V277 = 0x8fc
0x3c3: V278 = 0x2
0x3c5: V279 = 0x0
0x3c7: V280 = 0x1
0x3cb: V281 = S[0x1]
0x3cd: V282 = LT S2 V281
0x3ce: V283 = ISZERO V282
0x3cf: V284 = ISZERO V283
0x3d0: V285 = 0x3d5
0x3d3: JUMPI 0x3d5 V284
---
Entry stack: [V11, 0x121, V80, 0x0, S2, 0x1, S0]
Stack pops: 3
Stack additions: [S2, V276, 0x8fc, 0x2, 0x0, 0x1, S2]
Exit stack: [V11, 0x121, V80, 0x0, S2, V276, 0x8fc, 0x2, 0x0, 0x1, S2]

================================

Block 0x3d4
[0x3d4:0x3d4]
---
Predecessors: [0x37d]
Successors: []
---
0x3d4 INVALID
---
0x3d4: INVALID 
---
Entry stack: [V11, 0x121, V80, 0x0, S6, V276, 0x8fc, 0x2, 0x0, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x121, V80, 0x0, S6, V276, 0x8fc, 0x2, 0x0, 0x1, S0]

================================

Block 0x3d5
[0x3d5:0x45c]
---
Predecessors: [0x37d]
Successors: [0x45d, 0x461]
---
0x3d5 JUMPDEST
0x3d6 SWAP1
0x3d7 PUSH1 0x0
0x3d9 MSTORE
0x3da PUSH1 0x20
0x3dc PUSH1 0x0
0x3de SHA3
0x3df SWAP1
0x3e0 ADD
0x3e1 PUSH1 0x0
0x3e3 SWAP1
0x3e4 SLOAD
0x3e5 SWAP1
0x3e6 PUSH2 0x100
0x3e9 EXP
0x3ea SWAP1
0x3eb DIV
0x3ec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x401 AND
0x402 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x417 AND
0x418 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x42d AND
0x42e DUP2
0x42f MSTORE
0x430 PUSH1 0x20
0x432 ADD
0x433 SWAP1
0x434 DUP2
0x435 MSTORE
0x436 PUSH1 0x20
0x438 ADD
0x439 PUSH1 0x0
0x43b SHA3
0x43c SLOAD
0x43d SWAP1
0x43e DUP2
0x43f ISZERO
0x440 MUL
0x441 SWAP1
0x442 PUSH1 0x40
0x444 MLOAD
0x445 PUSH1 0x0
0x447 PUSH1 0x40
0x449 MLOAD
0x44a DUP1
0x44b DUP4
0x44c SUB
0x44d DUP2
0x44e DUP6
0x44f DUP9
0x450 DUP9
0x451 CALL
0x452 SWAP4
0x453 POP
0x454 POP
0x455 POP
0x456 POP
0x457 ISZERO
0x458 ISZERO
0x459 PUSH2 0x461
0x45c JUMPI
---
0x3d5: JUMPDEST 
0x3d7: V286 = 0x0
0x3d9: M[0x0] = 0x1
0x3da: V287 = 0x20
0x3dc: V288 = 0x0
0x3de: V289 = SHA3 0x0 0x20
0x3e0: V290 = ADD S0 V289
0x3e1: V291 = 0x0
0x3e4: V292 = S[V290]
0x3e6: V293 = 0x100
0x3e9: V294 = EXP 0x100 0x0
0x3eb: V295 = DIV V292 0x1
0x3ec: V296 = 0xffffffffffffffffffffffffffffffffffffffff
0x401: V297 = AND 0xffffffffffffffffffffffffffffffffffffffff V295
0x402: V298 = 0xffffffffffffffffffffffffffffffffffffffff
0x417: V299 = AND 0xffffffffffffffffffffffffffffffffffffffff V297
0x418: V300 = 0xffffffffffffffffffffffffffffffffffffffff
0x42d: V301 = AND 0xffffffffffffffffffffffffffffffffffffffff V299
0x42f: M[0x0] = V301
0x430: V302 = 0x20
0x432: V303 = ADD 0x20 0x0
0x435: M[0x20] = 0x2
0x436: V304 = 0x20
0x438: V305 = ADD 0x20 0x20
0x439: V306 = 0x0
0x43b: V307 = SHA3 0x0 0x40
0x43c: V308 = S[V307]
0x43f: V309 = ISZERO V308
0x440: V310 = MUL V309 0x8fc
0x442: V311 = 0x40
0x444: V312 = M[0x40]
0x445: V313 = 0x0
0x447: V314 = 0x40
0x449: V315 = M[0x40]
0x44c: V316 = SUB V312 V315
0x451: V317 = CALL V310 V276 V308 V315 V316 V315 0x0
0x457: V318 = ISZERO V317
0x458: V319 = ISZERO V318
0x459: V320 = 0x461
0x45c: JUMPI 0x461 V319
---
Entry stack: [V11, 0x121, V80, 0x0, S6, V276, 0x8fc, 0x2, 0x0, 0x1, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x121, V80, 0x0, S6]

================================

Block 0x45d
[0x45d:0x460]
---
Predecessors: [0x3d5]
Successors: []
---
0x45d PUSH1 0x0
0x45f DUP1
0x460 REVERT
---
0x45d: V321 = 0x0
0x460: REVERT 0x0 0x0
---
Entry stack: [V11, 0x121, V80, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x121, V80, 0x0, S0]

================================

Block 0x461
[0x461:0x461]
---
Predecessors: [0x3d5]
Successors: [0x462]
---
0x461 JUMPDEST
---
0x461: JUMPDEST 
---
Entry stack: [V11, 0x121, V80, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x121, V80, 0x0, S0]

================================

Block 0x462
[0x462:0x475]
---
Predecessors: [0x2f4, 0x461]
Successors: [0x476, 0x477]
---
0x462 JUMPDEST
0x463 PUSH1 0x1
0x465 PUSH1 0x3
0x467 PUSH1 0x0
0x469 PUSH1 0x1
0x46b DUP5
0x46c DUP2
0x46d SLOAD
0x46e DUP2
0x46f LT
0x470 ISZERO
0x471 ISZERO
0x472 PUSH2 0x477
0x475 JUMPI
---
0x462: JUMPDEST 
0x463: V322 = 0x1
0x465: V323 = 0x3
0x467: V324 = 0x0
0x469: V325 = 0x1
0x46d: V326 = S[0x1]
0x46f: V327 = LT S0 V326
0x470: V328 = ISZERO V327
0x471: V329 = ISZERO V328
0x472: V330 = 0x477
0x475: JUMPI 0x477 V329
---
Entry stack: [V11, 0x121, V80, 0x0, S0]
Stack pops: 1
Stack additions: [S0, 0x1, 0x3, 0x0, 0x1, S0]
Exit stack: [V11, 0x121, V80, 0x0, S0, 0x1, 0x3, 0x0, 0x1, S0]

================================

Block 0x476
[0x476:0x476]
---
Predecessors: [0x462]
Successors: []
---
0x476 INVALID
---
0x476: INVALID 
---
Entry stack: [V11, 0x121, V80, 0x0, S5, 0x1, 0x3, 0x0, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x121, V80, 0x0, S5, 0x1, 0x3, 0x0, 0x1, S0]

================================

Block 0x477
[0x477:0x500]
---
Predecessors: [0x462]
Successors: [0x2d9]
---
0x477 JUMPDEST
0x478 SWAP1
0x479 PUSH1 0x0
0x47b MSTORE
0x47c PUSH1 0x20
0x47e PUSH1 0x0
0x480 SHA3
0x481 SWAP1
0x482 ADD
0x483 PUSH1 0x0
0x485 SWAP1
0x486 SLOAD
0x487 SWAP1
0x488 PUSH2 0x100
0x48b EXP
0x48c SWAP1
0x48d DIV
0x48e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4a3 AND
0x4a4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4b9 AND
0x4ba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4cf AND
0x4d0 DUP2
0x4d1 MSTORE
0x4d2 PUSH1 0x20
0x4d4 ADD
0x4d5 SWAP1
0x4d6 DUP2
0x4d7 MSTORE
0x4d8 PUSH1 0x20
0x4da ADD
0x4db PUSH1 0x0
0x4dd SHA3
0x4de PUSH1 0x0
0x4e0 PUSH2 0x100
0x4e3 EXP
0x4e4 DUP2
0x4e5 SLOAD
0x4e6 DUP2
0x4e7 PUSH1 0xff
0x4e9 MUL
0x4ea NOT
0x4eb AND
0x4ec SWAP1
0x4ed DUP4
0x4ee ISZERO
0x4ef ISZERO
0x4f0 MUL
0x4f1 OR
0x4f2 SWAP1
0x4f3 SSTORE
0x4f4 POP
0x4f5 DUP1
0x4f6 DUP1
0x4f7 PUSH1 0x1
0x4f9 ADD
0x4fa SWAP2
0x4fb POP
0x4fc POP
0x4fd PUSH2 0x2d9
0x500 JUMP
---
0x477: JUMPDEST 
0x479: V331 = 0x0
0x47b: M[0x0] = 0x1
0x47c: V332 = 0x20
0x47e: V333 = 0x0
0x480: V334 = SHA3 0x0 0x20
0x482: V335 = ADD S0 V334
0x483: V336 = 0x0
0x486: V337 = S[V335]
0x488: V338 = 0x100
0x48b: V339 = EXP 0x100 0x0
0x48d: V340 = DIV V337 0x1
0x48e: V341 = 0xffffffffffffffffffffffffffffffffffffffff
0x4a3: V342 = AND 0xffffffffffffffffffffffffffffffffffffffff V340
0x4a4: V343 = 0xffffffffffffffffffffffffffffffffffffffff
0x4b9: V344 = AND 0xffffffffffffffffffffffffffffffffffffffff V342
0x4ba: V345 = 0xffffffffffffffffffffffffffffffffffffffff
0x4cf: V346 = AND 0xffffffffffffffffffffffffffffffffffffffff V344
0x4d1: M[0x0] = V346
0x4d2: V347 = 0x20
0x4d4: V348 = ADD 0x20 0x0
0x4d7: M[0x20] = 0x3
0x4d8: V349 = 0x20
0x4da: V350 = ADD 0x20 0x20
0x4db: V351 = 0x0
0x4dd: V352 = SHA3 0x0 0x40
0x4de: V353 = 0x0
0x4e0: V354 = 0x100
0x4e3: V355 = EXP 0x100 0x0
0x4e5: V356 = S[V352]
0x4e7: V357 = 0xff
0x4e9: V358 = MUL 0xff 0x1
0x4ea: V359 = NOT 0xff
0x4eb: V360 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V356
0x4ee: V361 = ISZERO 0x1
0x4ef: V362 = ISZERO 0x0
0x4f0: V363 = MUL 0x1 0x1
0x4f1: V364 = OR 0x1 V360
0x4f3: S[V352] = V364
0x4f7: V365 = 0x1
0x4f9: V366 = ADD 0x1 S5
0x4fd: V367 = 0x2d9
0x500: JUMP 0x2d9
---
Entry stack: [V11, 0x121, V80, 0x0, S5, 0x1, 0x3, 0x0, 0x1, S0]
Stack pops: 6
Stack additions: [V366]
Exit stack: [V11, 0x121, V80, 0x0, V366]

================================

Block 0x501
[0x501:0x524]
---
Predecessors: [0x2d9]
Successors: [0x121]
---
0x501 JUMPDEST
0x502 PUSH1 0x1
0x504 PUSH1 0x0
0x506 DUP1
0x507 PUSH2 0x100
0x50a EXP
0x50b DUP2
0x50c SLOAD
0x50d DUP2
0x50e PUSH1 0xff
0x510 MUL
0x511 NOT
0x512 AND
0x513 SWAP1
0x514 DUP4
0x515 ISZERO
0x516 ISZERO
0x517 MUL
0x518 OR
0x519 SWAP1
0x51a SSTORE
0x51b POP
0x51c PUSH1 0x1
0x51e SWAP2
0x51f POP
0x520 POP
0x521 SWAP2
0x522 SWAP1
0x523 POP
0x524 JUMP
---
0x501: JUMPDEST 
0x502: V368 = 0x1
0x504: V369 = 0x0
0x507: V370 = 0x100
0x50a: V371 = EXP 0x100 0x0
0x50c: V372 = S[0x0]
0x50e: V373 = 0xff
0x510: V374 = MUL 0xff 0x1
0x511: V375 = NOT 0xff
0x512: V376 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V372
0x515: V377 = ISZERO 0x1
0x516: V378 = ISZERO 0x0
0x517: V379 = MUL 0x1 0x1
0x518: V380 = OR 0x1 V376
0x51a: S[0x0] = V380
0x51c: V381 = 0x1
0x524: JUMP 0x121
---
Entry stack: [V11, 0x121, V80, 0x0, S0]
Stack pops: 4
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x525
[0x525:0x532]
---
Predecessors: [0x146]
Successors: [0x533, 0x534]
---
0x525 JUMPDEST
0x526 PUSH1 0x1
0x528 DUP2
0x529 DUP2
0x52a SLOAD
0x52b DUP2
0x52c LT
0x52d ISZERO
0x52e ISZERO
0x52f PUSH2 0x534
0x532 JUMPI
---
0x525: JUMPDEST 
0x526: V382 = 0x1
0x52a: V383 = S[0x1]
0x52c: V384 = LT V101 V383
0x52d: V385 = ISZERO V384
0x52e: V386 = ISZERO V385
0x52f: V387 = 0x534
0x532: JUMPI 0x534 V386
---
Entry stack: [V11, 0x15c, V101]
Stack pops: 1
Stack additions: [S0, 0x1, S0]
Exit stack: [V11, 0x15c, V101, 0x1, V101]

================================

Block 0x533
[0x533:0x533]
---
Predecessors: [0x525]
Successors: []
---
0x533 INVALID
---
0x533: INVALID 
---
Entry stack: [V11, 0x15c, V101, 0x1, V101]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x15c, V101, 0x1, V101]

================================

Block 0x534
[0x534:0x563]
---
Predecessors: [0x525]
Successors: [0x15c]
---
0x534 JUMPDEST
0x535 SWAP1
0x536 PUSH1 0x0
0x538 MSTORE
0x539 PUSH1 0x20
0x53b PUSH1 0x0
0x53d SHA3
0x53e SWAP1
0x53f ADD
0x540 PUSH1 0x0
0x542 SWAP2
0x543 POP
0x544 SLOAD
0x545 SWAP1
0x546 PUSH2 0x100
0x549 EXP
0x54a SWAP1
0x54b DIV
0x54c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x561 AND
0x562 DUP2
0x563 JUMP
---
0x534: JUMPDEST 
0x536: V388 = 0x0
0x538: M[0x0] = 0x1
0x539: V389 = 0x20
0x53b: V390 = 0x0
0x53d: V391 = SHA3 0x0 0x20
0x53f: V392 = ADD V101 V391
0x540: V393 = 0x0
0x544: V394 = S[V392]
0x546: V395 = 0x100
0x549: V396 = EXP 0x100 0x0
0x54b: V397 = DIV V394 0x1
0x54c: V398 = 0xffffffffffffffffffffffffffffffffffffffff
0x561: V399 = AND 0xffffffffffffffffffffffffffffffffffffffff V397
0x563: JUMP 0x15c
---
Entry stack: [V11, 0x15c, V101, 0x1, V101]
Stack pops: 4
Stack additions: [S3, V399]
Exit stack: [V11, 0x15c, V399]

================================

Block 0x564
[0x564:0x59c]
---
Predecessors: [0x1a9]
Successors: [0x1b1]
---
0x564 JUMPDEST
0x565 PUSH1 0x40
0x567 DUP1
0x568 MLOAD
0x569 SWAP1
0x56a DUP2
0x56b ADD
0x56c PUSH1 0x40
0x56e MSTORE
0x56f DUP1
0x570 PUSH1 0x4
0x572 DUP2
0x573 MSTORE
0x574 PUSH1 0x20
0x576 ADD
0x577 PUSH32 0x5465737400000000000000000000000000000000000000000000000000000000
0x598 DUP2
0x599 MSTORE
0x59a POP
0x59b DUP2
0x59c JUMP
---
0x564: JUMPDEST 
0x565: V400 = 0x40
0x568: V401 = M[0x40]
0x56b: V402 = ADD V401 0x40
0x56c: V403 = 0x40
0x56e: M[0x40] = V402
0x570: V404 = 0x4
0x573: M[V401] = 0x4
0x574: V405 = 0x20
0x576: V406 = ADD 0x20 V401
0x577: V407 = 0x5465737400000000000000000000000000000000000000000000000000000000
0x599: M[V406] = 0x5465737400000000000000000000000000000000000000000000000000000000
0x59c: JUMP 0x1b1
---
Entry stack: [V11, 0x1b1]
Stack pops: 1
Stack additions: [S0, V401]
Exit stack: [V11, 0x1b1, V401]

================================

Block 0x59d
[0x59d:0x5ae]
---
Predecessors: [0x237]
Successors: [0x23f]
---
0x59d JUMPDEST
0x59e PUSH1 0x0
0x5a0 DUP1
0x5a1 SWAP1
0x5a2 SLOAD
0x5a3 SWAP1
0x5a4 PUSH2 0x100
0x5a7 EXP
0x5a8 SWAP1
0x5a9 DIV
0x5aa PUSH1 0xff
0x5ac AND
0x5ad DUP2
0x5ae JUMP
---
0x59d: JUMPDEST 
0x59e: V408 = 0x0
0x5a2: V409 = S[0x0]
0x5a4: V410 = 0x100
0x5a7: V411 = EXP 0x100 0x0
0x5a9: V412 = DIV V409 0x1
0x5aa: V413 = 0xff
0x5ac: V414 = AND 0xff V412
0x5ae: JUMP 0x23f
---
Entry stack: [V11, 0x23f]
Stack pops: 1
Stack additions: [S0, V414]
Exit stack: [V11, 0x23f, V414]

================================

Block 0x5af
[0x5af:0x606]
---
Predecessors: [0x264]
Successors: [0x607, 0x60b]
---
0x5af JUMPDEST
0x5b0 PUSH1 0x0
0x5b2 ADDRESS
0x5b3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5c8 AND
0x5c9 BALANCE
0x5ca SWAP1
0x5cb POP
0x5cc CALLER
0x5cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5e2 AND
0x5e3 PUSH2 0x8fc
0x5e6 DUP3
0x5e7 SWAP1
0x5e8 DUP2
0x5e9 ISZERO
0x5ea MUL
0x5eb SWAP1
0x5ec PUSH1 0x40
0x5ee MLOAD
0x5ef PUSH1 0x0
0x5f1 PUSH1 0x40
0x5f3 MLOAD
0x5f4 DUP1
0x5f5 DUP4
0x5f6 SUB
0x5f7 DUP2
0x5f8 DUP6
0x5f9 DUP9
0x5fa DUP9
0x5fb CALL
0x5fc SWAP4
0x5fd POP
0x5fe POP
0x5ff POP
0x600 POP
0x601 ISZERO
0x602 ISZERO
0x603 PUSH2 0x60b
0x606 JUMPI
---
0x5af: JUMPDEST 
0x5b0: V415 = 0x0
0x5b2: V416 = ADDRESS
0x5b3: V417 = 0xffffffffffffffffffffffffffffffffffffffff
0x5c8: V418 = AND 0xffffffffffffffffffffffffffffffffffffffff V416
0x5c9: V419 = BALANCE V418
0x5cc: V420 = CALLER
0x5cd: V421 = 0xffffffffffffffffffffffffffffffffffffffff
0x5e2: V422 = AND 0xffffffffffffffffffffffffffffffffffffffff V420
0x5e3: V423 = 0x8fc
0x5e9: V424 = ISZERO V419
0x5ea: V425 = MUL V424 0x8fc
0x5ec: V426 = 0x40
0x5ee: V427 = M[0x40]
0x5ef: V428 = 0x0
0x5f1: V429 = 0x40
0x5f3: V430 = M[0x40]
0x5f6: V431 = SUB V427 V430
0x5fb: V432 = CALL V425 V422 V419 V430 V431 V430 0x0
0x601: V433 = ISZERO V432
0x602: V434 = ISZERO V433
0x603: V435 = 0x60b
0x606: JUMPI 0x60b V434
---
Entry stack: [V11, 0x26c]
Stack pops: 0
Stack additions: [V419]
Exit stack: [V11, 0x26c, V419]

================================

Block 0x607
[0x607:0x60a]
---
Predecessors: [0x5af]
Successors: []
---
0x607 PUSH1 0x0
0x609 DUP1
0x60a REVERT
---
0x607: V436 = 0x0
0x60a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x26c, V419]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x26c, V419]

================================

Block 0x60b
[0x60b:0x60d]
---
Predecessors: [0x5af]
Successors: [0x26c]
---
0x60b JUMPDEST
0x60c POP
0x60d JUMP
---
0x60b: JUMPDEST 
0x60d: JUMP 0x26c
---
Entry stack: [V11, 0x26c, V419]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x60e
[0x60e:0x639]
---
Predecessors: []
Successors: []
---
0x60e STOP
0x60f LOG1
0x610 PUSH6 0x627a7a723058
0x617 SHA3
0x618 AND
0x619 MISSING 0xf
0x61a XOR
0x61b MISSING 0xd3
0x61c MISSING 0xd9
0x61d SWAP9
0x61e MISSING 0xb1
0x61f MISSING 0x27
0x620 OR
0x621 MISSING 0x25
0x622 SWAP1
0x623 MULMOD
0x624 PUSH7 0xe943a24a94276d
0x62c MISSING 0xf7
0x62d MISSING 0xd9
0x62e MISSING 0xd2
0x62f PUSH1 0x2b
0x631 REVERT
0x632 PUSH6 0x9518c0ef5c00
0x639 MISSING 0x29
---
0x60e: STOP 
0x60f: LOG S0 S1 S2
0x610: V437 = 0x627a7a723058
0x617: V438 = SHA3 0x627a7a723058 S3
0x618: V439 = AND V438 S4
0x619: MISSING 0xf
0x61a: V440 = XOR S0 S1
0x61b: MISSING 0xd3
0x61c: MISSING 0xd9
0x61e: MISSING 0xb1
0x61f: MISSING 0x27
0x620: V441 = OR S0 S1
0x621: MISSING 0x25
0x623: V442 = MULMOD S1 S0 S2
0x624: V443 = 0xe943a24a94276d
0x62c: MISSING 0xf7
0x62d: MISSING 0xd9
0x62e: MISSING 0xd2
0x62f: V444 = 0x2b
0x631: REVERT 0x2b S0
0x632: V445 = 0x9518c0ef5c00
0x639: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V439, V440, S9, S1, S2, S3, S4, S5, S6, S7, S8, S0, V441, 0xe943a24a94276d, V442, 0x9518c0ef5c00]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x7d
Exit block: 0xfd
Body: 0x7d, 0x84, 0x88, 0x90, 0xb5, 0xbe, 0xd0, 0xe4, 0xfd, 0x26e

Function 1:
Public function signature: 0x34798541
Entry block: 0x10b
Exit block: 0x45d
Body: 0x10b, 0x121, 0x2a7, 0x2c1, 0x2c5, 0x2d0, 0x2d4, 0x2d9, 0x2e2, 0x2f3, 0x2f4, 0x36f, 0x37c, 0x37d, 0x3d4, 0x3d5, 0x45d, 0x461, 0x462, 0x476, 0x477, 0x501

Function 2:
Public function signature: 0x5daf08ca
Entry block: 0x13b
Exit block: 0x15c
Body: 0x13b, 0x142, 0x146, 0x15c, 0x525, 0x533, 0x534

Function 3:
Public function signature: 0x95d89b41
Entry block: 0x19e
Exit block: 0x21e
Body: 0x19e, 0x1a5, 0x1a9, 0x1b1, 0x1d6, 0x1df, 0x1f1, 0x205, 0x21e, 0x564

Function 4:
Public function signature: 0xc2bfccc0
Entry block: 0x22c
Exit block: 0x23f
Body: 0x22c, 0x233, 0x237, 0x23f, 0x59d

Function 5:
Public function signature: 0xd874082a
Entry block: 0x259
Exit block: 0x26c
Body: 0x259, 0x260, 0x264, 0x26c, 0x5af, 0x607, 0x60b

Function 6:
Public fallback function
Entry block: 0x78
Exit block: 0x78
Body: 0x78

