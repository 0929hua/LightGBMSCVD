Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x98]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x98
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x98
0xa: JUMPI 0x98 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0xa3]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x2fb0c5e
0x19 DUP2
0x1a EQ
0x1b PUSH2 0xa3
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x2fb0c5e
0x1a: V12 = EQ V10 0x2fb0c5e
0x1b: V13 = 0xa3
0x1e: JUMPI 0xa3 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0xac]
---
0x1f DUP1
0x20 PUSH4 0x13af4035
0x25 EQ
0x26 PUSH2 0xac
0x29 JUMPI
---
0x20: V14 = 0x13af4035
0x25: V15 = EQ 0x13af4035 V10
0x26: V16 = 0xac
0x29: JUMPI 0xac V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0xe1]
---
0x2a DUP1
0x2b PUSH4 0x3d79d1c8
0x30 EQ
0x31 PUSH2 0xe1
0x34 JUMPI
---
0x2b: V17 = 0x3d79d1c8
0x30: V18 = EQ 0x3d79d1c8 V10
0x31: V19 = 0xe1
0x34: JUMPI 0xe1 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0xf7]
---
0x35 DUP1
0x36 PUSH4 0x41c0e1b5
0x3b EQ
0x3c PUSH2 0xf7
0x3f JUMPI
---
0x36: V20 = 0x41c0e1b5
0x3b: V21 = EQ 0x41c0e1b5 V10
0x3c: V22 = 0xf7
0x3f: JUMPI 0xf7 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x126]
---
0x40 DUP1
0x41 PUSH4 0x655f8294
0x46 EQ
0x47 PUSH2 0x126
0x4a JUMPI
---
0x41: V23 = 0x655f8294
0x46: V24 = EQ 0x655f8294 V10
0x47: V25 = 0x126
0x4a: JUMPI 0x126 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x12f]
---
0x4b DUP1
0x4c PUSH4 0x7873bc61
0x51 EQ
0x52 PUSH2 0x12f
0x55 JUMPI
---
0x4c: V26 = 0x7873bc61
0x51: V27 = EQ 0x7873bc61 V10
0x52: V28 = 0x12f
0x55: JUMPI 0x12f V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x162]
---
0x56 DUP1
0x57 PUSH4 0x8da5cb5b
0x5c EQ
0x5d PUSH2 0x162
0x60 JUMPI
---
0x57: V29 = 0x8da5cb5b
0x5c: V30 = EQ 0x8da5cb5b V10
0x5d: V31 = 0x162
0x60: JUMPI 0x162 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x174]
---
0x61 DUP1
0x62 PUSH4 0xbfc3d84b
0x67 EQ
0x68 PUSH2 0x174
0x6b JUMPI
---
0x62: V32 = 0xbfc3d84b
0x67: V33 = EQ 0xbfc3d84b V10
0x68: V34 = 0x174
0x6b: JUMPI 0x174 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x17c]
---
0x6c DUP1
0x6d PUSH4 0xd80e8700
0x72 EQ
0x73 PUSH2 0x17c
0x76 JUMPI
---
0x6d: V35 = 0xd80e8700
0x72: V36 = EQ 0xd80e8700 V10
0x73: V37 = 0x17c
0x76: JUMPI 0x17c V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x185]
---
0x77 DUP1
0x78 PUSH4 0xd94073d4
0x7d EQ
0x7e PUSH2 0x185
0x81 JUMPI
---
0x78: V38 = 0xd94073d4
0x7d: V39 = EQ 0xd94073d4 V10
0x7e: V40 = 0x185
0x81: JUMPI 0x185 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x18d]
---
0x82 DUP1
0x83 PUSH4 0xdaf1af19
0x88 EQ
0x89 PUSH2 0x18d
0x8c JUMPI
---
0x83: V41 = 0xdaf1af19
0x88: V42 = EQ 0xdaf1af19 V10
0x89: V43 = 0x18d
0x8c: JUMPI 0x18d V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x196]
---
0x8d DUP1
0x8e PUSH4 0xe97dcb62
0x93 EQ
0x94 PUSH2 0x196
0x97 JUMPI
---
0x8e: V44 = 0xe97dcb62
0x93: V45 = EQ 0xe97dcb62 V10
0x94: V46 = 0x196
0x97: JUMPI 0x196 V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x0, 0x8d]
Successors: [0x19a]
---
0x98 JUMPDEST
0x99 PUSH2 0x1d1
0x9c PUSH2 0x1d3
0x9f PUSH2 0x19a
0xa2 JUMP
---
0x98: JUMPDEST 
0x99: V47 = 0x1d1
0x9c: V48 = 0x1d3
0x9f: V49 = 0x19a
0xa2: JUMP 0x19a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d1, 0x1d3]
Exit stack: [V10, 0x1d1, 0x1d3]

================================

Block 0xa3
[0xa3:0xab]
---
Predecessors: [0xb]
Successors: [0xe5]
---
0xa3 JUMPDEST
0xa4 PUSH2 0xe5
0xa7 PUSH1 0x3
0xa9 SLOAD
0xaa DUP2
0xab JUMP
---
0xa3: JUMPDEST 
0xa4: V50 = 0xe5
0xa7: V51 = 0x3
0xa9: V52 = S[0x3]
0xab: JUMP 0xe5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xe5, V52]
Exit stack: [V10, 0xe5, V52]

================================

Block 0xac
[0xac:0xcb]
---
Predecessors: [0x1f]
Successors: [0xcc, 0xde]
---
0xac JUMPDEST
0xad PUSH2 0x1d1
0xb0 PUSH1 0x4
0xb2 CALLDATALOAD
0xb3 PUSH1 0x5
0xb5 SLOAD
0xb6 PUSH1 0x1
0xb8 PUSH1 0xa0
0xba PUSH1 0x2
0xbc EXP
0xbd SUB
0xbe SWAP1
0xbf DUP2
0xc0 AND
0xc1 CALLER
0xc2 SWAP2
0xc3 SWAP1
0xc4 SWAP2
0xc5 AND
0xc6 EQ
0xc7 ISZERO
0xc8 PUSH2 0xde
0xcb JUMPI
---
0xac: JUMPDEST 
0xad: V53 = 0x1d1
0xb0: V54 = 0x4
0xb2: V55 = CALLDATALOAD 0x4
0xb3: V56 = 0x5
0xb5: V57 = S[0x5]
0xb6: V58 = 0x1
0xb8: V59 = 0xa0
0xba: V60 = 0x2
0xbc: V61 = EXP 0x2 0xa0
0xbd: V62 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc0: V63 = AND 0xffffffffffffffffffffffffffffffffffffffff V57
0xc1: V64 = CALLER
0xc5: V65 = AND V64 0xffffffffffffffffffffffffffffffffffffffff
0xc6: V66 = EQ V65 V63
0xc7: V67 = ISZERO V66
0xc8: V68 = 0xde
0xcb: JUMPI 0xde V67
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d1, V55]
Exit stack: [V10, 0x1d1, V55]

================================

Block 0xcc
[0xcc:0xdd]
---
Predecessors: [0xac]
Successors: [0xde]
---
0xcc PUSH1 0x5
0xce DUP1
0xcf SLOAD
0xd0 PUSH1 0x1
0xd2 PUSH1 0xa0
0xd4 PUSH1 0x2
0xd6 EXP
0xd7 SUB
0xd8 NOT
0xd9 AND
0xda DUP3
0xdb OR
0xdc SWAP1
0xdd SSTORE
---
0xcc: V69 = 0x5
0xcf: V70 = S[0x5]
0xd0: V71 = 0x1
0xd2: V72 = 0xa0
0xd4: V73 = 0x2
0xd6: V74 = EXP 0x2 0xa0
0xd7: V75 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd8: V76 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xd9: V77 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V70
0xdb: V78 = OR V55 V77
0xdd: S[0x5] = V78
---
Entry stack: [V10, 0x1d1, V55]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1d1, V55]

================================

Block 0xde
[0xde:0xe0]
---
Predecessors: [0xac, 0xcc]
Successors: [0x1d1]
---
0xde JUMPDEST
0xdf POP
0xe0 JUMP
---
0xde: JUMPDEST 
0xe0: JUMP 0x1d1
---
Entry stack: [V10, 0x1d1, V55]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0xe1
[0xe1:0xe4]
---
Predecessors: [0x2a]
Successors: [0xe5]
---
0xe1 JUMPDEST
0xe2 PUSH1 0x4
0xe4 SLOAD
---
0xe1: JUMPDEST 
0xe2: V79 = 0x4
0xe4: V80 = S[0x4]
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [V80]
Exit stack: [V10, V80]

================================

Block 0xe5
[0xe5:0xf6]
---
Predecessors: [0xa3, 0xe1, 0x126, 0x174, 0x17c, 0x185, 0x18d]
Successors: []
---
0xe5 JUMPDEST
0xe6 PUSH1 0x40
0xe8 DUP1
0xe9 MLOAD
0xea SWAP2
0xeb DUP3
0xec MSTORE
0xed MLOAD
0xee SWAP1
0xef DUP2
0xf0 SWAP1
0xf1 SUB
0xf2 PUSH1 0x20
0xf4 ADD
0xf5 SWAP1
0xf6 RETURN
---
0xe5: JUMPDEST 
0xe6: V81 = 0x40
0xe9: V82 = M[0x40]
0xec: M[V82] = S0
0xed: V83 = M[0x40]
0xf1: V84 = SUB V82 V83
0xf2: V85 = 0x20
0xf4: V86 = ADD 0x20 V84
0xf6: RETURN V83 V86
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0xf7
[0xf7:0x113]
---
Predecessors: [0x35]
Successors: [0x114, 0x1d3]
---
0xf7 JUMPDEST
0xf8 PUSH2 0x1d1
0xfb PUSH1 0x5
0xfd SLOAD
0xfe PUSH1 0x1
0x100 PUSH1 0xa0
0x102 PUSH1 0x2
0x104 EXP
0x105 SUB
0x106 SWAP1
0x107 DUP2
0x108 AND
0x109 CALLER
0x10a SWAP2
0x10b SWAP1
0x10c SWAP2
0x10d AND
0x10e EQ
0x10f ISZERO
0x110 PUSH2 0x1d3
0x113 JUMPI
---
0xf7: JUMPDEST 
0xf8: V87 = 0x1d1
0xfb: V88 = 0x5
0xfd: V89 = S[0x5]
0xfe: V90 = 0x1
0x100: V91 = 0xa0
0x102: V92 = 0x2
0x104: V93 = EXP 0x2 0xa0
0x105: V94 = SUB 0x10000000000000000000000000000000000000000 0x1
0x108: V95 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0x109: V96 = CALLER
0x10d: V97 = AND V96 0xffffffffffffffffffffffffffffffffffffffff
0x10e: V98 = EQ V97 V95
0x10f: V99 = ISZERO V98
0x110: V100 = 0x1d3
0x113: JUMPI 0x1d3 V99
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d1]
Exit stack: [V10, 0x1d1]

================================

Block 0x114
[0x114:0x125]
---
Predecessors: [0xf7]
Successors: []
---
0x114 PUSH1 0x5
0x116 SLOAD
0x117 PUSH1 0x0
0x119 PUSH1 0x3
0x11b SSTORE
0x11c PUSH1 0x1
0x11e PUSH1 0xa0
0x120 PUSH1 0x2
0x122 EXP
0x123 SUB
0x124 AND
0x125 SELFDESTRUCT
---
0x114: V101 = 0x5
0x116: V102 = S[0x5]
0x117: V103 = 0x0
0x119: V104 = 0x3
0x11b: S[0x3] = 0x0
0x11c: V105 = 0x1
0x11e: V106 = 0xa0
0x120: V107 = 0x2
0x122: V108 = EXP 0x2 0xa0
0x123: V109 = SUB 0x10000000000000000000000000000000000000000 0x1
0x124: V110 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x125: SELFDESTRUCT V110
---
Entry stack: [V10, 0x1d1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1d1]

================================

Block 0x126
[0x126:0x12e]
---
Predecessors: [0x40]
Successors: [0xe5]
---
0x126 JUMPDEST
0x127 PUSH2 0xe5
0x12a PUSH1 0x1
0x12c SLOAD
0x12d DUP2
0x12e JUMP
---
0x126: JUMPDEST 
0x127: V111 = 0xe5
0x12a: V112 = 0x1
0x12c: V113 = S[0x1]
0x12e: JUMP 0xe5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xe5, V113]
Exit stack: [V10, 0xe5, V113]

================================

Block 0x12f
[0x12f:0x142]
---
Predecessors: [0x4b]
Successors: [0x143]
---
0x12f JUMPDEST
0x130 PUSH2 0x1d5
0x133 PUSH1 0x4
0x135 CALLDATALOAD
0x136 PUSH1 0x0
0x138 DUP1
0x139 SLOAD
0x13a DUP3
0x13b SWAP1
0x13c DUP2
0x13d LT
0x13e ISZERO
0x13f PUSH2 0x2
0x142 JUMPI
---
0x12f: JUMPDEST 
0x130: V114 = 0x1d5
0x133: V115 = 0x4
0x135: V116 = CALLDATALOAD 0x4
0x136: V117 = 0x0
0x139: V118 = S[0x0]
0x13d: V119 = LT V116 V118
0x13e: V120 = ISZERO V119
0x13f: V121 = 0x2
0x142: THROWI V120
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d5, V116, 0x0, V116]
Exit stack: [V10, 0x1d5, V116, 0x0, V116]

================================

Block 0x143
[0x143:0x161]
---
Predecessors: [0x12f]
Successors: [0x1d5]
---
0x143 POP
0x144 DUP1
0x145 MSTORE
0x146 PUSH1 0x0
0x148 DUP1
0x149 MLOAD
0x14a PUSH1 0x20
0x14c PUSH2 0x403
0x14f DUP4
0x150 CODECOPY
0x151 DUP2
0x152 MLOAD
0x153 SWAP2
0x154 MSTORE
0x155 ADD
0x156 SLOAD
0x157 PUSH1 0x1
0x159 PUSH1 0xa0
0x15b PUSH1 0x2
0x15d EXP
0x15e SUB
0x15f AND
0x160 DUP2
0x161 JUMP
---
0x145: M[0x0] = 0x0
0x146: V122 = 0x0
0x149: V123 = M[0x0]
0x14a: V124 = 0x20
0x14c: V125 = 0x403
0x150: CODECOPY 0x0 0x403 0x20
0x152: V126 = M[0x0]
0x154: M[0x0] = V123
0x155: V127 = ADD V126 V116
0x156: V128 = S[V127]
0x157: V129 = 0x1
0x159: V130 = 0xa0
0x15b: V131 = 0x2
0x15d: V132 = EXP 0x2 0xa0
0x15e: V133 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15f: V134 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x161: JUMP 0x1d5
---
Entry stack: [V10, 0x1d5, V116, 0x0, V116]
Stack pops: 4
Stack additions: [S3, V134]
Exit stack: [V10, 0x1d5, V134]

================================

Block 0x162
[0x162:0x173]
---
Predecessors: [0x56]
Successors: [0x1d5]
---
0x162 JUMPDEST
0x163 PUSH2 0x1d5
0x166 PUSH1 0x5
0x168 SLOAD
0x169 PUSH1 0x1
0x16b PUSH1 0xa0
0x16d PUSH1 0x2
0x16f EXP
0x170 SUB
0x171 AND
0x172 DUP2
0x173 JUMP
---
0x162: JUMPDEST 
0x163: V135 = 0x1d5
0x166: V136 = 0x5
0x168: V137 = S[0x5]
0x169: V138 = 0x1
0x16b: V139 = 0xa0
0x16d: V140 = 0x2
0x16f: V141 = EXP 0x2 0xa0
0x170: V142 = SUB 0x10000000000000000000000000000000000000000 0x1
0x171: V143 = AND 0xffffffffffffffffffffffffffffffffffffffff V137
0x173: JUMP 0x1d5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d5, V143]
Exit stack: [V10, 0x1d5, V143]

================================

Block 0x174
[0x174:0x17b]
---
Predecessors: [0x61]
Successors: [0xe5]
---
0x174 JUMPDEST
0x175 PUSH1 0x2
0x177 SLOAD
0x178 PUSH2 0xe5
0x17b JUMP
---
0x174: JUMPDEST 
0x175: V144 = 0x2
0x177: V145 = S[0x2]
0x178: V146 = 0xe5
0x17b: JUMP 0xe5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [V145]
Exit stack: [V10, V145]

================================

Block 0x17c
[0x17c:0x184]
---
Predecessors: [0x6c]
Successors: [0xe5]
---
0x17c JUMPDEST
0x17d PUSH2 0xe5
0x180 PUSH1 0x2
0x182 SLOAD
0x183 DUP2
0x184 JUMP
---
0x17c: JUMPDEST 
0x17d: V147 = 0xe5
0x180: V148 = 0x2
0x182: V149 = S[0x2]
0x184: JUMP 0xe5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xe5, V149]
Exit stack: [V10, 0xe5, V149]

================================

Block 0x185
[0x185:0x18c]
---
Predecessors: [0x77]
Successors: [0xe5]
---
0x185 JUMPDEST
0x186 PUSH1 0x1
0x188 SLOAD
0x189 PUSH2 0xe5
0x18c JUMP
---
0x185: JUMPDEST 
0x186: V150 = 0x1
0x188: V151 = S[0x1]
0x189: V152 = 0xe5
0x18c: JUMP 0xe5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [V151]
Exit stack: [V10, V151]

================================

Block 0x18d
[0x18d:0x195]
---
Predecessors: [0x82]
Successors: [0xe5]
---
0x18d JUMPDEST
0x18e PUSH2 0xe5
0x191 PUSH1 0x4
0x193 SLOAD
0x194 DUP2
0x195 JUMP
---
0x18d: JUMPDEST 
0x18e: V153 = 0xe5
0x191: V154 = 0x4
0x193: V155 = S[0x4]
0x195: JUMP 0xe5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xe5, V155]
Exit stack: [V10, 0xe5, V155]

================================

Block 0x196
[0x196:0x199]
---
Predecessors: [0x8d]
Successors: [0x19a]
---
0x196 JUMPDEST
0x197 PUSH2 0x1d1
---
0x196: JUMPDEST 
0x197: V156 = 0x1d1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1d1]
Exit stack: [V10, 0x1d1]

================================

Block 0x19a
[0x19a:0x1ac]
---
Predecessors: [0x98, 0x196]
Successors: [0x1ad, 0x20c]
---
0x19a JUMPDEST
0x19b PUSH1 0x0
0x19d DUP1
0x19e PUSH8 0xde0b6b3a7640000
0x1a7 CALLVALUE
0x1a8 EQ
0x1a9 PUSH2 0x20c
0x1ac JUMPI
---
0x19a: JUMPDEST 
0x19b: V157 = 0x0
0x19e: V158 = 0xde0b6b3a7640000
0x1a7: V159 = CALLVALUE
0x1a8: V160 = EQ V159 0xde0b6b3a7640000
0x1a9: V161 = 0x20c
0x1ac: JUMPI 0x20c V160
---
Entry stack: [V10, S1, {0x1d1, 0x1d3}]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V10, S1, {0x1d1, 0x1d3}, 0x0, 0x0]

================================

Block 0x1ad
[0x1ad:0x1d0]
---
Predecessors: [0x19a]
Successors: [0x208]
---
0x1ad PUSH1 0x40
0x1af MLOAD
0x1b0 PUSH1 0x1
0x1b2 PUSH1 0xa0
0x1b4 PUSH1 0x2
0x1b6 EXP
0x1b7 SUB
0x1b8 CALLER
0x1b9 AND
0x1ba SWAP1
0x1bb DUP3
0x1bc SWAP1
0x1bd CALLVALUE
0x1be SWAP1
0x1bf DUP3
0x1c0 DUP2
0x1c1 DUP2
0x1c2 DUP2
0x1c3 DUP6
0x1c4 DUP9
0x1c5 DUP4
0x1c6 CALL
0x1c7 SWAP4
0x1c8 POP
0x1c9 POP
0x1ca POP
0x1cb POP
0x1cc POP
0x1cd PUSH2 0x208
0x1d0 JUMP
---
0x1ad: V162 = 0x40
0x1af: V163 = M[0x40]
0x1b0: V164 = 0x1
0x1b2: V165 = 0xa0
0x1b4: V166 = 0x2
0x1b6: V167 = EXP 0x2 0xa0
0x1b7: V168 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b8: V169 = CALLER
0x1b9: V170 = AND V169 0xffffffffffffffffffffffffffffffffffffffff
0x1bd: V171 = CALLVALUE
0x1c6: V172 = CALL 0x0 V170 V171 V163 0x0 V163 0x0
0x1cd: V173 = 0x208
0x1d0: JUMP 0x208
---
Entry stack: [V10, S3, {0x1d1, 0x1d3}, 0x0, 0x0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, S3, {0x1d1, 0x1d3}, 0x0, 0x0]

================================

Block 0x1d1
[0x1d1:0x1d2]
---
Predecessors: [0xde, 0x1d3, 0x208]
Successors: []
---
0x1d1 JUMPDEST
0x1d2 STOP
---
0x1d1: JUMPDEST 
0x1d2: STOP 
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0x1d3
[0x1d3:0x1d4]
---
Predecessors: [0xf7, 0x208]
Successors: [0x1d1]
---
0x1d3 JUMPDEST
0x1d4 JUMP
---
0x1d3: JUMPDEST 
0x1d4: JUMP S0
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d5
[0x1d5:0x1f1]
---
Predecessors: [0x143, 0x162]
Successors: []
---
0x1d5 JUMPDEST
0x1d6 PUSH1 0x40
0x1d8 DUP1
0x1d9 MLOAD
0x1da PUSH1 0x1
0x1dc PUSH1 0xa0
0x1de PUSH1 0x2
0x1e0 EXP
0x1e1 SUB
0x1e2 SWAP3
0x1e3 SWAP1
0x1e4 SWAP3
0x1e5 AND
0x1e6 DUP3
0x1e7 MSTORE
0x1e8 MLOAD
0x1e9 SWAP1
0x1ea DUP2
0x1eb SWAP1
0x1ec SUB
0x1ed PUSH1 0x20
0x1ef ADD
0x1f0 SWAP1
0x1f1 RETURN
---
0x1d5: JUMPDEST 
0x1d6: V174 = 0x40
0x1d9: V175 = M[0x40]
0x1da: V176 = 0x1
0x1dc: V177 = 0xa0
0x1de: V178 = 0x2
0x1e0: V179 = EXP 0x2 0xa0
0x1e1: V180 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e5: V181 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x1e7: M[V175] = V181
0x1e8: V182 = M[0x40]
0x1ec: V183 = SUB V175 V182
0x1ed: V184 = 0x20
0x1ef: V185 = ADD 0x20 V183
0x1f1: RETURN V182 V185
---
Entry stack: [V10, 0x1d5, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1d5]

================================

Block 0x1f2
[0x1f2:0x1f8]
---
Predecessors: [0x384]
Successors: [0x1f9]
---
0x1f2 JUMPDEST
0x1f3 PUSH1 0x2
0x1f5 SLOAD
0x1f6 PUSH1 0x1
0x1f8 SSTORE
---
0x1f2: JUMPDEST 
0x1f3: V186 = 0x2
0x1f5: V187 = S[0x2]
0x1f6: V188 = 0x1
0x1f8: S[0x1] = V187
---
Entry stack: [V10, S3, {0x1d1, 0x1d3}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S3, {0x1d1, 0x1d3}, S1, S0]

================================

Block 0x1f9
[0x1f9:0x207]
---
Predecessors: [0x1f2, 0x3a6, 0x3fe]
Successors: [0x208]
---
0x1f9 JUMPDEST
0x1fa ADDRESS
0x1fb PUSH1 0x1
0x1fd PUSH1 0xa0
0x1ff PUSH1 0x2
0x201 EXP
0x202 SUB
0x203 AND
0x204 BALANCE
0x205 PUSH1 0x4
0x207 SSTORE
---
0x1f9: JUMPDEST 
0x1fa: V189 = ADDRESS
0x1fb: V190 = 0x1
0x1fd: V191 = 0xa0
0x1ff: V192 = 0x2
0x201: V193 = EXP 0x2 0xa0
0x202: V194 = SUB 0x10000000000000000000000000000000000000000 0x1
0x203: V195 = AND 0xffffffffffffffffffffffffffffffffffffffff V189
0x204: V196 = BALANCE V195
0x205: V197 = 0x4
0x207: S[0x4] = V196
---
Entry stack: [V10, S3, {0x1d1, 0x1d3}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S3, {0x1d1, 0x1d3}, S1, S0]

================================

Block 0x208
[0x208:0x20b]
---
Predecessors: [0x1ad, 0x1f9, 0x2d2]
Successors: [0x1d1, 0x1d3]
---
0x208 JUMPDEST
0x209 POP
0x20a POP
0x20b JUMP
---
0x208: JUMPDEST 
0x20b: JUMP {0x1d1, 0x1d3}
---
Entry stack: [V10, S3, {0x1d1, 0x1d3}, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V10, S3]

================================

Block 0x20c
[0x20c:0x226]
---
Predecessors: [0x19a]
Successors: [0x227, 0x259]
---
0x20c JUMPDEST
0x20d PUSH1 0x0
0x20f DUP1
0x210 SLOAD
0x211 PUSH1 0x1
0x213 DUP2
0x214 ADD
0x215 DUP1
0x216 DUP4
0x217 SSTORE
0x218 SWAP1
0x219 SWAP4
0x21a POP
0x21b SWAP1
0x21c DUP2
0x21d DUP5
0x21e DUP1
0x21f ISZERO
0x220 DUP3
0x221 SWAP1
0x222 GT
0x223 PUSH2 0x259
0x226 JUMPI
---
0x20c: JUMPDEST 
0x20d: V198 = 0x0
0x210: V199 = S[0x0]
0x211: V200 = 0x1
0x214: V201 = ADD V199 0x1
0x217: S[0x0] = V201
0x21f: V202 = ISZERO V199
0x222: V203 = GT V202 V201
0x223: V204 = 0x259
0x226: JUMPI 0x259 V203
---
Entry stack: [V10, S3, {0x1d1, 0x1d3}, 0x0, 0x0]
Stack pops: 2
Stack additions: [V199, S0, V201, 0x0, V201, V199]
Exit stack: [V10, S3, {0x1d1, 0x1d3}, V199, 0x0, V201, 0x0, V201, V199]

================================

Block 0x227
[0x227:0x23a]
---
Predecessors: [0x20c]
Successors: [0x23b]
---
0x227 DUP2
0x228 DUP4
0x229 PUSH1 0x0
0x22b MSTORE
0x22c PUSH1 0x20
0x22e PUSH1 0x0
0x230 SHA3
0x231 SWAP2
0x232 DUP3
0x233 ADD
0x234 SWAP2
0x235 ADD
0x236 PUSH2 0x259
0x239 SWAP2
0x23a SWAP1
---
0x229: V205 = 0x0
0x22b: M[0x0] = 0x0
0x22c: V206 = 0x20
0x22e: V207 = 0x0
0x230: V208 = SHA3 0x0 0x20
0x233: V209 = ADD V208 V199
0x235: V210 = ADD V208 V201
0x236: V211 = 0x259
---
Entry stack: [V10, S7, {0x1d1, 0x1d3}, V199, 0x0, V201, 0x0, V201, V199]
Stack pops: 3
Stack additions: [S2, S1, 0x259, V209, V210]
Exit stack: [V10, S7, {0x1d1, 0x1d3}, V199, 0x0, V201, 0x0, V201, 0x259, V209, V210]

================================

Block 0x23b
[0x23b:0x243]
---
Predecessors: [0x227, 0x244]
Successors: [0x244, 0x2da]
---
0x23b JUMPDEST
0x23c DUP1
0x23d DUP3
0x23e GT
0x23f ISZERO
0x240 PUSH2 0x2da
0x243 JUMPI
---
0x23b: JUMPDEST 
0x23e: V212 = GT V209 S0
0x23f: V213 = ISZERO V212
0x240: V214 = 0x2da
0x243: JUMPI 0x2da V213
---
Entry stack: [V10, S9, {0x1d1, 0x1d3}, S7, 0x0, S5, S4, S3, 0x259, V209, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, S9, {0x1d1, 0x1d3}, S7, 0x0, S5, S4, S3, 0x259, V209, S0]

================================

Block 0x244
[0x244:0x258]
---
Predecessors: [0x23b]
Successors: [0x23b]
---
0x244 DUP1
0x245 SLOAD
0x246 PUSH1 0x1
0x248 PUSH1 0xa0
0x24a PUSH1 0x2
0x24c EXP
0x24d SUB
0x24e NOT
0x24f AND
0x250 DUP2
0x251 SSTORE
0x252 PUSH1 0x1
0x254 ADD
0x255 PUSH2 0x23b
0x258 JUMP
---
0x245: V215 = S[S0]
0x246: V216 = 0x1
0x248: V217 = 0xa0
0x24a: V218 = 0x2
0x24c: V219 = EXP 0x2 0xa0
0x24d: V220 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24e: V221 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x24f: V222 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V215
0x251: S[S0] = V222
0x252: V223 = 0x1
0x254: V224 = ADD 0x1 S0
0x255: V225 = 0x23b
0x258: JUMP 0x23b
---
Entry stack: [V10, S9, {0x1d1, 0x1d3}, S7, 0x0, S5, S4, S3, 0x259, V209, S0]
Stack pops: 1
Stack additions: [V224]
Exit stack: [V10, S9, {0x1d1, 0x1d3}, S7, 0x0, S5, S4, S3, 0x259, V209, V224]

================================

Block 0x259
[0x259:0x26d]
---
Predecessors: [0x20c, 0x2da]
Successors: [0x26e]
---
0x259 JUMPDEST
0x25a POP
0x25b POP
0x25c POP
0x25d POP
0x25e CALLER
0x25f PUSH1 0x0
0x261 PUSH1 0x0
0x263 POP
0x264 DUP4
0x265 DUP2
0x266 SLOAD
0x267 DUP2
0x268 LT
0x269 ISZERO
0x26a PUSH2 0x2
0x26d JUMPI
---
0x259: JUMPDEST 
0x25e: V226 = CALLER
0x25f: V227 = 0x0
0x261: V228 = 0x0
0x266: V229 = S[0x0]
0x268: V230 = LT S5 V229
0x269: V231 = ISZERO V230
0x26a: V232 = 0x2
0x26d: THROWI V231
---
Entry stack: [V10, S7, {0x1d1, 0x1d3}, S5, 0x0, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, V226, 0x0, S5]
Exit stack: [V10, S7, {0x1d1, 0x1d3}, S5, 0x0, V226, 0x0, S5]

================================

Block 0x26e
[0x26e:0x2d1]
---
Predecessors: [0x259]
Successors: [0x2d2, 0x2de]
---
0x26e DUP2
0x26f DUP1
0x270 MSTORE
0x271 PUSH1 0x0
0x273 DUP1
0x274 MLOAD
0x275 PUSH1 0x20
0x277 PUSH2 0x403
0x27a DUP4
0x27b CODECOPY
0x27c DUP2
0x27d MLOAD
0x27e SWAP2
0x27f MSTORE
0x280 ADD
0x281 DUP1
0x282 SLOAD
0x283 PUSH1 0x1
0x285 PUSH1 0xa0
0x287 PUSH1 0x2
0x289 EXP
0x28a SUB
0x28b NOT
0x28c AND
0x28d SWAP1
0x28e SWAP3
0x28f OR
0x290 SWAP1
0x291 SWAP2
0x292 SSTORE
0x293 PUSH1 0x5
0x295 SLOAD
0x296 PUSH1 0x40
0x298 MLOAD
0x299 PUSH1 0x1
0x29b PUSH1 0xa0
0x29d PUSH1 0x2
0x29f EXP
0x2a0 SUB
0x2a1 SWAP2
0x2a2 SWAP1
0x2a3 SWAP2
0x2a4 AND
0x2a5 SWAP2
0x2a6 SWAP1
0x2a7 PUSH1 0xa
0x2a9 CALLVALUE
0x2aa DIV
0x2ab SWAP1
0x2ac DUP3
0x2ad DUP2
0x2ae DUP2
0x2af DUP2
0x2b0 DUP6
0x2b1 DUP9
0x2b2 DUP4
0x2b3 CALL
0x2b4 POP
0x2b5 POP
0x2b6 POP
0x2b7 ADDRESS
0x2b8 PUSH1 0x1
0x2ba PUSH1 0xa0
0x2bc PUSH1 0x2
0x2be EXP
0x2bf SUB
0x2c0 AND
0x2c1 BALANCE
0x2c2 PUSH1 0x4
0x2c4 SSTORE
0x2c5 TIMESTAMP
0x2c6 PUSH1 0x2
0x2c8 SSTORE
0x2c9 DUP4
0x2ca EQ
0x2cb ISZERO
0x2cc SWAP1
0x2cd POP
0x2ce PUSH2 0x2de
0x2d1 JUMPI
---
0x270: M[0x0] = 0x0
0x271: V233 = 0x0
0x274: V234 = M[0x0]
0x275: V235 = 0x20
0x277: V236 = 0x403
0x27b: CODECOPY 0x0 0x403 0x20
0x27d: V237 = M[0x0]
0x27f: M[0x0] = V234
0x280: V238 = ADD V237 S0
0x282: V239 = S[V238]
0x283: V240 = 0x1
0x285: V241 = 0xa0
0x287: V242 = 0x2
0x289: V243 = EXP 0x2 0xa0
0x28a: V244 = SUB 0x10000000000000000000000000000000000000000 0x1
0x28b: V245 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x28c: V246 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V239
0x28f: V247 = OR V226 V246
0x292: S[V238] = V247
0x293: V248 = 0x5
0x295: V249 = S[0x5]
0x296: V250 = 0x40
0x298: V251 = M[0x40]
0x299: V252 = 0x1
0x29b: V253 = 0xa0
0x29d: V254 = 0x2
0x29f: V255 = EXP 0x2 0xa0
0x2a0: V256 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a4: V257 = AND 0xffffffffffffffffffffffffffffffffffffffff V249
0x2a7: V258 = 0xa
0x2a9: V259 = CALLVALUE
0x2aa: V260 = DIV V259 0xa
0x2b3: V261 = CALL 0x0 V257 V260 V251 0x0 V251 0x0
0x2b7: V262 = ADDRESS
0x2b8: V263 = 0x1
0x2ba: V264 = 0xa0
0x2bc: V265 = 0x2
0x2be: V266 = EXP 0x2 0xa0
0x2bf: V267 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c0: V268 = AND 0xffffffffffffffffffffffffffffffffffffffff V262
0x2c1: V269 = BALANCE V268
0x2c2: V270 = 0x4
0x2c4: S[0x4] = V269
0x2c5: V271 = TIMESTAMP
0x2c6: V272 = 0x2
0x2c8: S[0x2] = V271
0x2ca: V273 = EQ S4 0x0
0x2cb: V274 = ISZERO V273
0x2ce: V275 = 0x2de
0x2d1: JUMPI 0x2de V274
---
Entry stack: [V10, S6, {0x1d1, 0x1d3}, S4, 0x0, V226, 0x0, S0]
Stack pops: 5
Stack additions: [S4, S3]
Exit stack: [V10, S6, {0x1d1, 0x1d3}, S4, 0x0]

================================

Block 0x2d2
[0x2d2:0x2d9]
---
Predecessors: [0x26e]
Successors: [0x208]
---
0x2d2 TIMESTAMP
0x2d3 PUSH1 0x1
0x2d5 SSTORE
0x2d6 PUSH2 0x208
0x2d9 JUMP
---
0x2d2: V276 = TIMESTAMP
0x2d3: V277 = 0x1
0x2d5: S[0x1] = V276
0x2d6: V278 = 0x208
0x2d9: JUMP 0x208
---
Entry stack: [V10, S3, {0x1d1, 0x1d3}, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S3, {0x1d1, 0x1d3}, S1, 0x0]

================================

Block 0x2da
[0x2da:0x2dd]
---
Predecessors: [0x23b]
Successors: [0x259]
---
0x2da JUMPDEST
0x2db POP
0x2dc SWAP1
0x2dd JUMP
---
0x2da: JUMPDEST 
0x2dd: JUMP 0x259
---
Entry stack: [V10, S9, {0x1d1, 0x1d3}, S7, 0x0, S5, S4, S3, 0x259, V209, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V10, S9, {0x1d1, 0x1d3}, S7, 0x0, S5, S4, S3, V209]

================================

Block 0x2de
[0x2de:0x311]
---
Predecessors: [0x26e]
Successors: [0x312, 0x384]
---
0x2de JUMPDEST
0x2df PUSH1 0x40
0x2e1 DUP1
0x2e2 MLOAD
0x2e3 TIMESTAMP
0x2e4 DUP2
0x2e5 MSTORE
0x2e6 SWAP1
0x2e7 MLOAD
0x2e8 SWAP1
0x2e9 DUP2
0x2ea SWAP1
0x2eb SUB
0x2ec PUSH1 0x20
0x2ee ADD
0x2ef SWAP1
0x2f0 SHA3
0x2f1 GAS
0x2f2 PUSH1 0x40
0x2f4 DUP1
0x2f5 MLOAD
0x2f6 SWAP2
0x2f7 DUP3
0x2f8 MSTORE
0x2f9 MLOAD
0x2fa SWAP1
0x2fb DUP2
0x2fc SWAP1
0x2fd SUB
0x2fe PUSH1 0x20
0x300 ADD
0x301 SWAP1
0x302 SHA3
0x303 ADD
0x304 SWAP1
0x305 POP
0x306 PUSH1 0x2
0x308 DUP2
0x309 MOD
0x30a PUSH1 0x0
0x30c EQ
0x30d ISZERO
0x30e PUSH2 0x384
0x311 JUMPI
---
0x2de: JUMPDEST 
0x2df: V279 = 0x40
0x2e2: V280 = M[0x40]
0x2e3: V281 = TIMESTAMP
0x2e5: M[V280] = V281
0x2e7: V282 = M[0x40]
0x2eb: V283 = SUB V280 V282
0x2ec: V284 = 0x20
0x2ee: V285 = ADD 0x20 V283
0x2f0: V286 = SHA3 V282 V285
0x2f1: V287 = GAS
0x2f2: V288 = 0x40
0x2f5: V289 = M[0x40]
0x2f8: M[V289] = V287
0x2f9: V290 = M[0x40]
0x2fd: V291 = SUB V289 V290
0x2fe: V292 = 0x20
0x300: V293 = ADD 0x20 V291
0x302: V294 = SHA3 V290 V293
0x303: V295 = ADD V294 V286
0x306: V296 = 0x2
0x309: V297 = MOD V295 0x2
0x30a: V298 = 0x0
0x30c: V299 = EQ 0x0 V297
0x30d: V300 = ISZERO V299
0x30e: V301 = 0x384
0x311: JUMPI 0x384 V300
---
Entry stack: [V10, S3, {0x1d1, 0x1d3}, S1, 0x0]
Stack pops: 1
Stack additions: [V295]
Exit stack: [V10, S3, {0x1d1, 0x1d3}, S1, V295]

================================

Block 0x312
[0x312:0x321]
---
Predecessors: [0x2de]
Successors: [0x322, 0x3f7]
---
0x312 PUSH1 0x2
0x314 SLOAD
0x315 PUSH1 0x1
0x317 SLOAD
0x318 PUSH1 0x78
0x31a SWAP2
0x31b SUB
0x31c GT
0x31d ISZERO
0x31e PUSH2 0x3f7
0x321 JUMPI
---
0x312: V302 = 0x2
0x314: V303 = S[0x2]
0x315: V304 = 0x1
0x317: V305 = S[0x1]
0x318: V306 = 0x78
0x31b: V307 = SUB V303 V305
0x31c: V308 = GT V307 0x78
0x31d: V309 = ISZERO V308
0x31e: V310 = 0x3f7
0x321: JUMPI 0x3f7 V309
---
Entry stack: [V10, S3, {0x1d1, 0x1d3}, S1, V295]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S3, {0x1d1, 0x1d3}, S1, V295]

================================

Block 0x322
[0x322:0x332]
---
Predecessors: [0x312]
Successors: [0x333]
---
0x322 PUSH1 0x0
0x324 DUP1
0x325 SLOAD
0x326 PUSH1 0x0
0x328 NOT
0x329 DUP5
0x32a ADD
0x32b SWAP1
0x32c DUP2
0x32d LT
0x32e ISZERO
0x32f PUSH2 0x2
0x332 JUMPI
---
0x322: V311 = 0x0
0x325: V312 = S[0x0]
0x326: V313 = 0x0
0x328: V314 = NOT 0x0
0x32a: V315 = ADD S1 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x32d: V316 = LT V315 V312
0x32e: V317 = ISZERO V316
0x32f: V318 = 0x2
0x332: THROWI V317
---
Entry stack: [V10, S3, {0x1d1, 0x1d3}, S1, V295]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V315]
Exit stack: [V10, S3, {0x1d1, 0x1d3}, S1, V295, 0x0, V315]

================================

Block 0x333
[0x333:0x383]
---
Predecessors: [0x322]
Successors: [0x3fe]
---
0x333 DUP2
0x334 DUP1
0x335 MSTORE
0x336 PUSH1 0x0
0x338 DUP1
0x339 MLOAD
0x33a PUSH1 0x20
0x33c PUSH2 0x403
0x33f DUP4
0x340 CODECOPY
0x341 DUP2
0x342 MLOAD
0x343 SWAP2
0x344 MSTORE
0x345 ADD
0x346 SWAP1
0x347 POP
0x348 SLOAD
0x349 PUSH1 0x40
0x34b MLOAD
0x34c PUSH1 0x1
0x34e PUSH1 0xa0
0x350 PUSH1 0x2
0x352 EXP
0x353 SUB
0x354 SWAP2
0x355 DUP3
0x356 AND
0x357 SWAP2
0x358 PUSH1 0x0
0x35a SWAP2
0x35b ADDRESS
0x35c SWAP1
0x35d SWAP2
0x35e AND
0x35f BALANCE
0x360 PUSH8 0xde0b6b3a763ffff
0x369 NOT
0x36a ADD
0x36b SWAP1
0x36c DUP3
0x36d DUP2
0x36e DUP2
0x36f DUP2
0x370 DUP6
0x371 DUP9
0x372 DUP4
0x373 CALL
0x374 POP
0x375 POP
0x376 PUSH1 0x2
0x378 SLOAD
0x379 PUSH1 0x1
0x37b SSTORE
0x37c POP
0x37d PUSH2 0x3fe
0x380 SWAP2
0x381 POP
0x382 POP
0x383 JUMP
---
0x335: M[0x0] = 0x0
0x336: V319 = 0x0
0x339: V320 = M[0x0]
0x33a: V321 = 0x20
0x33c: V322 = 0x403
0x340: CODECOPY 0x0 0x403 0x20
0x342: V323 = M[0x0]
0x344: M[0x0] = V320
0x345: V324 = ADD V323 V315
0x348: V325 = S[V324]
0x349: V326 = 0x40
0x34b: V327 = M[0x40]
0x34c: V328 = 0x1
0x34e: V329 = 0xa0
0x350: V330 = 0x2
0x352: V331 = EXP 0x2 0xa0
0x353: V332 = SUB 0x10000000000000000000000000000000000000000 0x1
0x356: V333 = AND 0xffffffffffffffffffffffffffffffffffffffff V325
0x358: V334 = 0x0
0x35b: V335 = ADDRESS
0x35e: V336 = AND 0xffffffffffffffffffffffffffffffffffffffff V335
0x35f: V337 = BALANCE V336
0x360: V338 = 0xde0b6b3a763ffff
0x369: V339 = NOT 0xde0b6b3a763ffff
0x36a: V340 = ADD 0xfffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c0000 V337
0x373: V341 = CALL 0x0 V333 V340 V327 0x0 V327 0x0
0x376: V342 = 0x2
0x378: V343 = S[0x2]
0x379: V344 = 0x1
0x37b: S[0x1] = V343
0x37d: V345 = 0x3fe
0x383: JUMP 0x3fe
---
Entry stack: [V10, S5, {0x1d1, 0x1d3}, S3, V295, 0x0, V315]
Stack pops: 2
Stack additions: []
Exit stack: [V10, S5, {0x1d1, 0x1d3}, S3, V295]

================================

Block 0x384
[0x384:0x394]
---
Predecessors: [0x2de]
Successors: [0x1f2, 0x395]
---
0x384 JUMPDEST
0x385 PUSH1 0x2
0x387 SLOAD
0x388 PUSH1 0x1
0x38a SLOAD
0x38b PUSH1 0xb4
0x38d SWAP2
0x38e SUB
0x38f GT
0x390 ISZERO
0x391 PUSH2 0x1f2
0x394 JUMPI
---
0x384: JUMPDEST 
0x385: V346 = 0x2
0x387: V347 = S[0x2]
0x388: V348 = 0x1
0x38a: V349 = S[0x1]
0x38b: V350 = 0xb4
0x38e: V351 = SUB V347 V349
0x38f: V352 = GT V351 0xb4
0x390: V353 = ISZERO V352
0x391: V354 = 0x1f2
0x394: JUMPI 0x1f2 V353
---
Entry stack: [V10, S3, {0x1d1, 0x1d3}, S1, V295]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S3, {0x1d1, 0x1d3}, S1, V295]

================================

Block 0x395
[0x395:0x3a5]
---
Predecessors: [0x384]
Successors: [0x3a6]
---
0x395 PUSH1 0x0
0x397 DUP1
0x398 SLOAD
0x399 PUSH1 0x0
0x39b NOT
0x39c DUP5
0x39d ADD
0x39e SWAP1
0x39f DUP2
0x3a0 LT
0x3a1 ISZERO
0x3a2 PUSH2 0x2
0x3a5 JUMPI
---
0x395: V355 = 0x0
0x398: V356 = S[0x0]
0x399: V357 = 0x0
0x39b: V358 = NOT 0x0
0x39d: V359 = ADD S1 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x3a0: V360 = LT V359 V356
0x3a1: V361 = ISZERO V360
0x3a2: V362 = 0x2
0x3a5: THROWI V361
---
Entry stack: [V10, S3, {0x1d1, 0x1d3}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V359]
Exit stack: [V10, S3, {0x1d1, 0x1d3}, S1, S0, 0x0, V359]

================================

Block 0x3a6
[0x3a6:0x3f6]
---
Predecessors: [0x395]
Successors: [0x1f9]
---
0x3a6 DUP2
0x3a7 DUP1
0x3a8 MSTORE
0x3a9 PUSH1 0x0
0x3ab DUP1
0x3ac MLOAD
0x3ad PUSH1 0x20
0x3af PUSH2 0x403
0x3b2 DUP4
0x3b3 CODECOPY
0x3b4 DUP2
0x3b5 MLOAD
0x3b6 SWAP2
0x3b7 MSTORE
0x3b8 ADD
0x3b9 SWAP1
0x3ba POP
0x3bb SLOAD
0x3bc PUSH1 0x40
0x3be MLOAD
0x3bf PUSH1 0x1
0x3c1 PUSH1 0xa0
0x3c3 PUSH1 0x2
0x3c5 EXP
0x3c6 SUB
0x3c7 SWAP2
0x3c8 DUP3
0x3c9 AND
0x3ca SWAP2
0x3cb PUSH1 0x0
0x3cd SWAP2
0x3ce ADDRESS
0x3cf SWAP1
0x3d0 SWAP2
0x3d1 AND
0x3d2 BALANCE
0x3d3 PUSH8 0xde0b6b3a763ffff
0x3dc NOT
0x3dd ADD
0x3de SWAP1
0x3df DUP3
0x3e0 DUP2
0x3e1 DUP2
0x3e2 DUP2
0x3e3 DUP6
0x3e4 DUP9
0x3e5 DUP4
0x3e6 CALL
0x3e7 POP
0x3e8 POP
0x3e9 PUSH1 0x2
0x3eb SLOAD
0x3ec PUSH1 0x1
0x3ee SSTORE
0x3ef POP
0x3f0 PUSH2 0x1f9
0x3f3 SWAP2
0x3f4 POP
0x3f5 POP
0x3f6 JUMP
---
0x3a8: M[0x0] = 0x0
0x3a9: V363 = 0x0
0x3ac: V364 = M[0x0]
0x3ad: V365 = 0x20
0x3af: V366 = 0x403
0x3b3: CODECOPY 0x0 0x403 0x20
0x3b5: V367 = M[0x0]
0x3b7: M[0x0] = V364
0x3b8: V368 = ADD V367 V359
0x3bb: V369 = S[V368]
0x3bc: V370 = 0x40
0x3be: V371 = M[0x40]
0x3bf: V372 = 0x1
0x3c1: V373 = 0xa0
0x3c3: V374 = 0x2
0x3c5: V375 = EXP 0x2 0xa0
0x3c6: V376 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c9: V377 = AND 0xffffffffffffffffffffffffffffffffffffffff V369
0x3cb: V378 = 0x0
0x3ce: V379 = ADDRESS
0x3d1: V380 = AND 0xffffffffffffffffffffffffffffffffffffffff V379
0x3d2: V381 = BALANCE V380
0x3d3: V382 = 0xde0b6b3a763ffff
0x3dc: V383 = NOT 0xde0b6b3a763ffff
0x3dd: V384 = ADD 0xfffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c0000 V381
0x3e6: V385 = CALL 0x0 V377 V384 V371 0x0 V371 0x0
0x3e9: V386 = 0x2
0x3eb: V387 = S[0x2]
0x3ec: V388 = 0x1
0x3ee: S[0x1] = V387
0x3f0: V389 = 0x1f9
0x3f6: JUMP 0x1f9
---
Entry stack: [V10, S5, {0x1d1, 0x1d3}, S3, S2, 0x0, V359]
Stack pops: 2
Stack additions: []
Exit stack: [V10, S5, {0x1d1, 0x1d3}, S3, S2]

================================

Block 0x3f7
[0x3f7:0x3fd]
---
Predecessors: [0x312]
Successors: [0x3fe]
---
0x3f7 JUMPDEST
0x3f8 PUSH1 0x2
0x3fa SLOAD
0x3fb PUSH1 0x1
0x3fd SSTORE
---
0x3f7: JUMPDEST 
0x3f8: V390 = 0x2
0x3fa: V391 = S[0x2]
0x3fb: V392 = 0x1
0x3fd: S[0x1] = V391
---
Entry stack: [V10, S3, {0x1d1, 0x1d3}, S1, V295]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S3, {0x1d1, 0x1d3}, S1, V295]

================================

Block 0x3fe
[0x3fe:0x402]
---
Predecessors: [0x333, 0x3f7]
Successors: [0x1f9]
---
0x3fe JUMPDEST
0x3ff PUSH2 0x1f9
0x402 JUMP
---
0x3fe: JUMPDEST 
0x3ff: V393 = 0x1f9
0x402: JUMP 0x1f9
---
Entry stack: [V10, S3, {0x1d1, 0x1d3}, S1, V295]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S3, {0x1d1, 0x1d3}, S1, V295]

================================

Block 0x403
[0x403:0x426]
---
Predecessors: []
Successors: []
---
0x403 MISSING 0x29
0x404 MISSING 0xd
0x405 MISSING 0xec
0x406 MISSING 0xd9
0x407 SLOAD
0x408 DUP12
0x409 PUSH3 0xa8d603
0x40d GASLIMIT
0x40e MISSING 0xa9
0x40f DUP9
0x410 CODESIZE
0x411 PUSH16 0xc84ba6bc95484008f6362f93160ef3e5
0x422 PUSH4 0x0
---
0x403: MISSING 0x29
0x404: MISSING 0xd
0x405: MISSING 0xec
0x406: MISSING 0xd9
0x407: V394 = S[S0]
0x409: V395 = 0xa8d603
0x40d: V396 = GASLIMIT
0x40e: MISSING 0xa9
0x410: V397 = CODESIZE
0x411: V398 = 0xc84ba6bc95484008f6362f93160ef3e5
0x422: V399 = 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: [V396, 0xa8d603, S11, V394, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, 0x0, 0xc84ba6bc95484008f6362f93160ef3e5, V397, S8, S0, S1, S2, S3, S4, S5, S6, S7, S8]
Exit stack: []

================================

Function 0:
Public function signature: 0x2fb0c5e
Entry block: 0xa3
Exit block: 0xe5
Body: 0xa3, 0xe5

Function 1:
Public function signature: 0x13af4035
Entry block: 0xac
Exit block: 0x1d1
Body: 0xac, 0xcc, 0xde, 0x1d1

Function 2:
Public function signature: 0x3d79d1c8
Entry block: 0xe1
Exit block: 0xe5
Body: 0xe1, 0xe5

Function 3:
Public function signature: 0x41c0e1b5
Entry block: 0xf7
Exit block: 0x1d1
Body: 0xf7, 0x114, 0x1d1, 0x1d3

Function 4:
Public function signature: 0x655f8294
Entry block: 0x126
Exit block: 0xe5
Body: 0xe5, 0x126

Function 5:
Public function signature: 0x7873bc61
Entry block: 0x12f
Exit block: 0x1d5
Body: 0x12f, 0x143, 0x1d5

Function 6:
Public function signature: 0x8da5cb5b
Entry block: 0x162
Exit block: 0x1d5
Body: 0x162, 0x1d5

Function 7:
Public function signature: 0xbfc3d84b
Entry block: 0x174
Exit block: 0xe5
Body: 0xe5, 0x174

Function 8:
Public function signature: 0xd80e8700
Entry block: 0x17c
Exit block: 0xe5
Body: 0xe5, 0x17c

Function 9:
Public function signature: 0xd94073d4
Entry block: 0x185
Exit block: 0xe5
Body: 0xe5, 0x185

Function 10:
Public function signature: 0xdaf1af19
Entry block: 0x18d
Exit block: 0xe5
Body: 0xe5, 0x18d

Function 11:
Public function signature: 0xe97dcb62
Entry block: 0x196
Exit block: 0x1d1
Body: 0x196, 0x19a, 0x1ad, 0x1d1, 0x1d3, 0x1f2, 0x1f9, 0x208, 0x20c, 0x227, 0x23b, 0x244, 0x259, 0x26e, 0x2d2, 0x2da, 0x2de, 0x312, 0x322, 0x333, 0x384, 0x395, 0x3a6, 0x3f7, 0x3fe

Function 12:
Public fallback function
Entry block: 0x98
Exit block: 0x1d1
Body: 0x98, 0x19a, 0x1ad, 0x1d1, 0x1d3, 0x1f2, 0x1f9, 0x208, 0x20c, 0x227, 0x23b, 0x244, 0x259, 0x26e, 0x2d2, 0x2da, 0x2de, 0x312, 0x322, 0x333, 0x384, 0x395, 0x3a6, 0x3f7, 0x3fe

