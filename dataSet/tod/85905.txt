Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x51]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x83197ef0
0x3c EQ
0x3d PUSH2 0x51
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x83197ef0
0x3c: V13 = EQ 0x83197ef0 V11
0x3d: V14 = 0x51
0x40: JUMPI 0x51 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x66]
---
0x41 DUP1
0x42 PUSH4 0xbb29998e
0x47 EQ
0x48 PUSH2 0x66
0x4b JUMPI
---
0x42: V15 = 0xbb29998e
0x47: V16 = EQ 0xbb29998e V11
0x48: V17 = 0x66
0x4b: JUMPI 0x66 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x50]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d PUSH1 0x0
0x4f DUP1
0x50 REVERT
---
0x4c: JUMPDEST 
0x4d: V18 = 0x0
0x50: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x51
[0x51:0x57]
---
Predecessors: [0xd]
Successors: [0x58, 0x5c]
---
0x51 JUMPDEST
0x52 CALLVALUE
0x53 ISZERO
0x54 PUSH2 0x5c
0x57 JUMPI
---
0x51: JUMPDEST 
0x52: V19 = CALLVALUE
0x53: V20 = ISZERO V19
0x54: V21 = 0x5c
0x57: JUMPI 0x5c V20
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x58
[0x58:0x5b]
---
Predecessors: [0x51]
Successors: []
---
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x58: V22 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0x63]
---
Predecessors: [0x51]
Successors: [0x94]
---
0x5c JUMPDEST
0x5d PUSH2 0x64
0x60 PUSH2 0x94
0x63 JUMP
---
0x5c: JUMPDEST 
0x5d: V23 = 0x64
0x60: V24 = 0x94
0x63: JUMP 0x94
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x64]
Exit stack: [V11, 0x64]

================================

Block 0x64
[0x64:0x65]
---
Predecessors: []
Successors: []
---
0x64 JUMPDEST
0x65 STOP
---
0x64: JUMPDEST 
0x65: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x66
[0x66:0x91]
---
Predecessors: [0x41]
Successors: [0x129]
---
0x66 JUMPDEST
0x67 PUSH2 0x92
0x6a PUSH1 0x4
0x6c DUP1
0x6d DUP1
0x6e CALLDATALOAD
0x6f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x84 AND
0x85 SWAP1
0x86 PUSH1 0x20
0x88 ADD
0x89 SWAP1
0x8a SWAP2
0x8b SWAP1
0x8c POP
0x8d POP
0x8e PUSH2 0x129
0x91 JUMP
---
0x66: JUMPDEST 
0x67: V25 = 0x92
0x6a: V26 = 0x4
0x6e: V27 = CALLDATALOAD 0x4
0x6f: V28 = 0xffffffffffffffffffffffffffffffffffffffff
0x84: V29 = AND 0xffffffffffffffffffffffffffffffffffffffff V27
0x86: V30 = 0x20
0x88: V31 = ADD 0x20 0x4
0x8e: V32 = 0x129
0x91: JUMP 0x129
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x92, V29]
Exit stack: [V11, 0x92, V29]

================================

Block 0x92
[0x92:0x93]
---
Predecessors: []
Successors: []
---
0x92 JUMPDEST
0x93 STOP
---
0x92: JUMPDEST 
0x93: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x94
[0x94:0xea]
---
Predecessors: [0x5c]
Successors: [0xeb, 0xef]
---
0x94 JUMPDEST
0x95 PUSH1 0x0
0x97 DUP1
0x98 SWAP1
0x99 SLOAD
0x9a SWAP1
0x9b PUSH2 0x100
0x9e EXP
0x9f SWAP1
0xa0 DIV
0xa1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb6 AND
0xb7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcc AND
0xcd CALLER
0xce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe3 AND
0xe4 EQ
0xe5 ISZERO
0xe6 ISZERO
0xe7 PUSH2 0xef
0xea JUMPI
---
0x94: JUMPDEST 
0x95: V33 = 0x0
0x99: V34 = S[0x0]
0x9b: V35 = 0x100
0x9e: V36 = EXP 0x100 0x0
0xa0: V37 = DIV V34 0x1
0xa1: V38 = 0xffffffffffffffffffffffffffffffffffffffff
0xb6: V39 = AND 0xffffffffffffffffffffffffffffffffffffffff V37
0xb7: V40 = 0xffffffffffffffffffffffffffffffffffffffff
0xcc: V41 = AND 0xffffffffffffffffffffffffffffffffffffffff V39
0xcd: V42 = CALLER
0xce: V43 = 0xffffffffffffffffffffffffffffffffffffffff
0xe3: V44 = AND 0xffffffffffffffffffffffffffffffffffffffff V42
0xe4: V45 = EQ V44 V41
0xe5: V46 = ISZERO V45
0xe6: V47 = ISZERO V46
0xe7: V48 = 0xef
0xea: JUMPI 0xef V47
---
Entry stack: [V11, 0x64]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x64]

================================

Block 0xeb
[0xeb:0xee]
---
Predecessors: [0x94]
Successors: []
---
0xeb PUSH1 0x0
0xed DUP1
0xee REVERT
---
0xeb: V49 = 0x0
0xee: REVERT 0x0 0x0
---
Entry stack: [V11, 0x64]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x64]

================================

Block 0xef
[0xef:0x128]
---
Predecessors: [0x94]
Successors: []
---
0xef JUMPDEST
0xf0 PUSH1 0x0
0xf2 DUP1
0xf3 SWAP1
0xf4 SLOAD
0xf5 SWAP1
0xf6 PUSH2 0x100
0xf9 EXP
0xfa SWAP1
0xfb DIV
0xfc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x111 AND
0x112 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x127 AND
0x128 SELFDESTRUCT
---
0xef: JUMPDEST 
0xf0: V50 = 0x0
0xf4: V51 = S[0x0]
0xf6: V52 = 0x100
0xf9: V53 = EXP 0x100 0x0
0xfb: V54 = DIV V51 0x1
0xfc: V55 = 0xffffffffffffffffffffffffffffffffffffffff
0x111: V56 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0x112: V57 = 0xffffffffffffffffffffffffffffffffffffffff
0x127: V58 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0x128: SELFDESTRUCT V58
---
Entry stack: [V11, 0x64]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x64]

================================

Block 0x129
[0x129:0x163]
---
Predecessors: [0x66]
Successors: []
---
0x129 JUMPDEST
0x12a DUP1
0x12b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x140 AND
0x141 PUSH2 0x8fc
0x144 CALLVALUE
0x145 SWAP1
0x146 DUP2
0x147 ISZERO
0x148 MUL
0x149 SWAP1
0x14a PUSH1 0x40
0x14c MLOAD
0x14d PUSH1 0x0
0x14f PUSH1 0x40
0x151 MLOAD
0x152 DUP1
0x153 DUP4
0x154 SUB
0x155 DUP2
0x156 DUP6
0x157 DUP9
0x158 DUP9
0x159 CALL
0x15a SWAP4
0x15b POP
0x15c POP
0x15d POP
0x15e POP
0x15f POP
0x160 PUSH1 0x0
0x162 DUP1
0x163 REVERT
---
0x129: JUMPDEST 
0x12b: V59 = 0xffffffffffffffffffffffffffffffffffffffff
0x140: V60 = AND 0xffffffffffffffffffffffffffffffffffffffff V29
0x141: V61 = 0x8fc
0x144: V62 = CALLVALUE
0x147: V63 = ISZERO V62
0x148: V64 = MUL V63 0x8fc
0x14a: V65 = 0x40
0x14c: V66 = M[0x40]
0x14d: V67 = 0x0
0x14f: V68 = 0x40
0x151: V69 = M[0x40]
0x154: V70 = SUB V66 V69
0x159: V71 = CALL V64 V60 V62 V69 V70 V69 0x0
0x160: V72 = 0x0
0x163: REVERT 0x0 0x0
---
Entry stack: [V11, 0x92, V29]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x92, V29]

================================

Block 0x164
[0x164:0x192]
---
Predecessors: []
Successors: []
---
0x164 STOP
0x165 LOG1
0x166 PUSH6 0x627a7a723058
0x16d SHA3
0x16e DUP6
0x16f PUSH11 0xbb982004be9e44cdfaf09b
0x17b PUSH23 0x4d981201bf286a307ce79679533c8f6fecf70029
---
0x164: STOP 
0x165: LOG S0 S1 S2
0x166: V73 = 0x627a7a723058
0x16d: V74 = SHA3 0x627a7a723058 S3
0x16f: V75 = 0xbb982004be9e44cdfaf09b
0x17b: V76 = 0x4d981201bf286a307ce79679533c8f6fecf70029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x4d981201bf286a307ce79679533c8f6fecf70029, 0xbb982004be9e44cdfaf09b, S8, V74, S4, S5, S6, S7, S8]
Exit stack: []

================================

Function 0:
Public function signature: 0x83197ef0
Entry block: 0x51
Exit block: 0xeb
Body: 0x51, 0x58, 0x5c, 0x94, 0xeb, 0xef

Function 1:
Public function signature: 0xbb29998e
Entry block: 0x66
Exit block: 0x129
Body: 0x66, 0x129

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

