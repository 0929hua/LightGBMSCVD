Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x78]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x78
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x78
0xc: JUMPI 0x78 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x7a]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x12065fe0
0x3c EQ
0x3d PUSH2 0x7a
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x12065fe0
0x3c: V13 = EQ 0x12065fe0 V11
0x3d: V14 = 0x7a
0x40: JUMPI 0x7a V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xa3]
---
0x41 DUP1
0x42 PUSH4 0x60f96a8f
0x47 EQ
0x48 PUSH2 0xa3
0x4b JUMPI
---
0x42: V15 = 0x60f96a8f
0x47: V16 = EQ 0x60f96a8f V11
0x48: V17 = 0xa3
0x4b: JUMPI 0xa3 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xf8]
---
0x4c DUP1
0x4d PUSH4 0x790d6947
0x52 EQ
0x53 PUSH2 0xf8
0x56 JUMPI
---
0x4d: V18 = 0x790d6947
0x52: V19 = EQ 0x790d6947 V11
0x53: V20 = 0xf8
0x56: JUMPI 0xf8 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x11b]
---
0x57 DUP1
0x58 PUSH4 0x87e40868
0x5d EQ
0x5e PUSH2 0x11b
0x61 JUMPI
---
0x58: V21 = 0x87e40868
0x5d: V22 = EQ 0x87e40868 V11
0x5e: V23 = 0x11b
0x61: JUMPI 0x11b V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x15f]
---
0x62 DUP1
0x63 PUSH4 0x8b1fdaed
0x68 EQ
0x69 PUSH2 0x15f
0x6c JUMPI
---
0x63: V24 = 0x8b1fdaed
0x68: V25 = EQ 0x8b1fdaed V11
0x69: V26 = 0x15f
0x6c: JUMPI 0x15f V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x1b4]
---
0x6d DUP1
0x6e PUSH4 0xa27f6043
0x73 EQ
0x74 PUSH2 0x1b4
0x77 JUMPI
---
0x6e: V27 = 0xa27f6043
0x73: V28 = EQ 0xa27f6043 V11
0x74: V29 = 0x1b4
0x77: JUMPI 0x1b4 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x79]
---
Predecessors: [0x0, 0x6d]
Successors: []
---
0x78 JUMPDEST
0x79 STOP
---
0x78: JUMPDEST 
0x79: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7a
[0x7a:0x80]
---
Predecessors: [0xd]
Successors: [0x81, 0x85]
---
0x7a JUMPDEST
0x7b CALLVALUE
0x7c ISZERO
0x7d PUSH2 0x85
0x80 JUMPI
---
0x7a: JUMPDEST 
0x7b: V30 = CALLVALUE
0x7c: V31 = ISZERO V30
0x7d: V32 = 0x85
0x80: JUMPI 0x85 V31
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x81
[0x81:0x84]
---
Predecessors: [0x7a]
Successors: []
---
0x81 PUSH1 0x0
0x83 DUP1
0x84 REVERT
---
0x81: V33 = 0x0
0x84: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x85
[0x85:0x8c]
---
Predecessors: [0x7a]
Successors: [0x1c9]
---
0x85 JUMPDEST
0x86 PUSH2 0x8d
0x89 PUSH2 0x1c9
0x8c JUMP
---
0x85: JUMPDEST 
0x86: V34 = 0x8d
0x89: V35 = 0x1c9
0x8c: JUMP 0x1c9
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x8d]
Exit stack: [V11, 0x8d]

================================

Block 0x8d
[0x8d:0xa2]
---
Predecessors: [0x1c9]
Successors: []
---
0x8d JUMPDEST
0x8e PUSH1 0x40
0x90 MLOAD
0x91 DUP1
0x92 DUP3
0x93 DUP2
0x94 MSTORE
0x95 PUSH1 0x20
0x97 ADD
0x98 SWAP2
0x99 POP
0x9a POP
0x9b PUSH1 0x40
0x9d MLOAD
0x9e DUP1
0x9f SWAP2
0xa0 SUB
0xa1 SWAP1
0xa2 RETURN
---
0x8d: JUMPDEST 
0x8e: V36 = 0x40
0x90: V37 = M[0x40]
0x94: M[V37] = V121
0x95: V38 = 0x20
0x97: V39 = ADD 0x20 V37
0x9b: V40 = 0x40
0x9d: V41 = M[0x40]
0xa0: V42 = SUB V39 V41
0xa2: RETURN V41 V42
---
Entry stack: [V11, V121]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xa3
[0xa3:0xa9]
---
Predecessors: [0x41]
Successors: [0xaa, 0xae]
---
0xa3 JUMPDEST
0xa4 CALLVALUE
0xa5 ISZERO
0xa6 PUSH2 0xae
0xa9 JUMPI
---
0xa3: JUMPDEST 
0xa4: V43 = CALLVALUE
0xa5: V44 = ISZERO V43
0xa6: V45 = 0xae
0xa9: JUMPI 0xae V44
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xaa
[0xaa:0xad]
---
Predecessors: [0xa3]
Successors: []
---
0xaa PUSH1 0x0
0xac DUP1
0xad REVERT
---
0xaa: V46 = 0x0
0xad: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xae
[0xae:0xb5]
---
Predecessors: [0xa3]
Successors: [0x1e8]
---
0xae JUMPDEST
0xaf PUSH2 0xb6
0xb2 PUSH2 0x1e8
0xb5 JUMP
---
0xae: JUMPDEST 
0xaf: V47 = 0xb6
0xb2: V48 = 0x1e8
0xb5: JUMP 0x1e8
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xb6]
Exit stack: [V11, 0xb6]

================================

Block 0xb6
[0xb6:0xf7]
---
Predecessors: [0x1e8]
Successors: []
---
0xb6 JUMPDEST
0xb7 PUSH1 0x40
0xb9 MLOAD
0xba DUP1
0xbb DUP3
0xbc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd1 AND
0xd2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe7 AND
0xe8 DUP2
0xe9 MSTORE
0xea PUSH1 0x20
0xec ADD
0xed SWAP2
0xee POP
0xef POP
0xf0 PUSH1 0x40
0xf2 MLOAD
0xf3 DUP1
0xf4 SWAP2
0xf5 SUB
0xf6 SWAP1
0xf7 RETURN
---
0xb6: JUMPDEST 
0xb7: V49 = 0x40
0xb9: V50 = M[0x40]
0xbc: V51 = 0xffffffffffffffffffffffffffffffffffffffff
0xd1: V52 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0xd2: V53 = 0xffffffffffffffffffffffffffffffffffffffff
0xe7: V54 = AND 0xffffffffffffffffffffffffffffffffffffffff V52
0xe9: M[V50] = V54
0xea: V55 = 0x20
0xec: V56 = ADD 0x20 V50
0xf0: V57 = 0x40
0xf2: V58 = M[0x40]
0xf5: V59 = SUB V56 V58
0xf7: RETURN V58 V59
---
Entry stack: [V11, 0xb6, V128]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xb6]

================================

Block 0xf8
[0xf8:0xfe]
---
Predecessors: [0x4c]
Successors: [0xff, 0x103]
---
0xf8 JUMPDEST
0xf9 CALLVALUE
0xfa ISZERO
0xfb PUSH2 0x103
0xfe JUMPI
---
0xf8: JUMPDEST 
0xf9: V60 = CALLVALUE
0xfa: V61 = ISZERO V60
0xfb: V62 = 0x103
0xfe: JUMPI 0x103 V61
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xff
[0xff:0x102]
---
Predecessors: [0xf8]
Successors: []
---
0xff PUSH1 0x0
0x101 DUP1
0x102 REVERT
---
0xff: V63 = 0x0
0x102: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x103
[0x103:0x118]
---
Predecessors: [0xf8]
Successors: [0x20d]
---
0x103 JUMPDEST
0x104 PUSH2 0x119
0x107 PUSH1 0x4
0x109 DUP1
0x10a DUP1
0x10b CALLDATALOAD
0x10c SWAP1
0x10d PUSH1 0x20
0x10f ADD
0x110 SWAP1
0x111 SWAP2
0x112 SWAP1
0x113 POP
0x114 POP
0x115 PUSH2 0x20d
0x118 JUMP
---
0x103: JUMPDEST 
0x104: V64 = 0x119
0x107: V65 = 0x4
0x10b: V66 = CALLDATALOAD 0x4
0x10d: V67 = 0x20
0x10f: V68 = ADD 0x20 0x4
0x115: V69 = 0x20d
0x118: JUMP 0x20d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x119, V66]
Exit stack: [V11, 0x119, V66]

================================

Block 0x119
[0x119:0x11a]
---
Predecessors: [0x3b7]
Successors: []
---
0x119 JUMPDEST
0x11a STOP
---
0x119: JUMPDEST 
0x11a: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x11b
[0x11b:0x121]
---
Predecessors: [0x57]
Successors: [0x122, 0x126]
---
0x11b JUMPDEST
0x11c CALLVALUE
0x11d ISZERO
0x11e PUSH2 0x126
0x121 JUMPI
---
0x11b: JUMPDEST 
0x11c: V70 = CALLVALUE
0x11d: V71 = ISZERO V70
0x11e: V72 = 0x126
0x121: JUMPI 0x126 V71
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x122
[0x122:0x125]
---
Predecessors: [0x11b]
Successors: []
---
0x122 PUSH1 0x0
0x124 DUP1
0x125 REVERT
---
0x122: V73 = 0x0
0x125: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x126
[0x126:0x144]
---
Predecessors: [0x11b]
Successors: [0x3bd]
---
0x126 JUMPDEST
0x127 PUSH2 0x145
0x12a PUSH1 0x4
0x12c DUP1
0x12d DUP1
0x12e CALLDATALOAD
0x12f SWAP1
0x130 PUSH1 0x20
0x132 ADD
0x133 SWAP1
0x134 SWAP2
0x135 SWAP1
0x136 DUP1
0x137 CALLDATALOAD
0x138 SWAP1
0x139 PUSH1 0x20
0x13b ADD
0x13c SWAP1
0x13d SWAP2
0x13e SWAP1
0x13f POP
0x140 POP
0x141 PUSH2 0x3bd
0x144 JUMP
---
0x126: JUMPDEST 
0x127: V74 = 0x145
0x12a: V75 = 0x4
0x12e: V76 = CALLDATALOAD 0x4
0x130: V77 = 0x20
0x132: V78 = ADD 0x20 0x4
0x137: V79 = CALLDATALOAD 0x24
0x139: V80 = 0x20
0x13b: V81 = ADD 0x20 0x24
0x141: V82 = 0x3bd
0x144: JUMP 0x3bd
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x145, V76, V79]
Exit stack: [V11, 0x145, V76, V79]

================================

Block 0x145
[0x145:0x15e]
---
Predecessors: [0x608]
Successors: []
---
0x145 JUMPDEST
0x146 PUSH1 0x40
0x148 MLOAD
0x149 DUP1
0x14a DUP3
0x14b ISZERO
0x14c ISZERO
0x14d ISZERO
0x14e ISZERO
0x14f DUP2
0x150 MSTORE
0x151 PUSH1 0x20
0x153 ADD
0x154 SWAP2
0x155 POP
0x156 POP
0x157 PUSH1 0x40
0x159 MLOAD
0x15a DUP1
0x15b SWAP2
0x15c SUB
0x15d SWAP1
0x15e RETURN
---
0x145: JUMPDEST 
0x146: V83 = 0x40
0x148: V84 = M[0x40]
0x14b: V85 = ISZERO {0x0, 0x1}
0x14c: V86 = ISZERO V85
0x14d: V87 = ISZERO V86
0x14e: V88 = ISZERO V87
0x150: M[V84] = V88
0x151: V89 = 0x20
0x153: V90 = ADD 0x20 V84
0x157: V91 = 0x40
0x159: V92 = M[0x40]
0x15c: V93 = SUB V90 V92
0x15e: RETURN V92 V93
---
Entry stack: [V11, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x15f
[0x15f:0x165]
---
Predecessors: [0x62]
Successors: [0x166, 0x16a]
---
0x15f JUMPDEST
0x160 CALLVALUE
0x161 ISZERO
0x162 PUSH2 0x16a
0x165 JUMPI
---
0x15f: JUMPDEST 
0x160: V94 = CALLVALUE
0x161: V95 = ISZERO V94
0x162: V96 = 0x16a
0x165: JUMPI 0x16a V95
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x166
[0x166:0x169]
---
Predecessors: [0x15f]
Successors: []
---
0x166 PUSH1 0x0
0x168 DUP1
0x169 REVERT
---
0x166: V97 = 0x0
0x169: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x16a
[0x16a:0x171]
---
Predecessors: [0x15f]
Successors: [0x60f]
---
0x16a JUMPDEST
0x16b PUSH2 0x172
0x16e PUSH2 0x60f
0x171 JUMP
---
0x16a: JUMPDEST 
0x16b: V98 = 0x172
0x16e: V99 = 0x60f
0x171: JUMP 0x60f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x172]
Exit stack: [V11, 0x172]

================================

Block 0x172
[0x172:0x1b3]
---
Predecessors: [0x60f]
Successors: []
---
0x172 JUMPDEST
0x173 PUSH1 0x40
0x175 MLOAD
0x176 DUP1
0x177 DUP3
0x178 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18d AND
0x18e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a3 AND
0x1a4 DUP2
0x1a5 MSTORE
0x1a6 PUSH1 0x20
0x1a8 ADD
0x1a9 SWAP2
0x1aa POP
0x1ab POP
0x1ac PUSH1 0x40
0x1ae MLOAD
0x1af DUP1
0x1b0 SWAP2
0x1b1 SUB
0x1b2 SWAP1
0x1b3 RETURN
---
0x172: JUMPDEST 
0x173: V100 = 0x40
0x175: V101 = M[0x40]
0x178: V102 = 0xffffffffffffffffffffffffffffffffffffffff
0x18d: V103 = AND 0xffffffffffffffffffffffffffffffffffffffff V354
0x18e: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a3: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x1a5: M[V101] = V105
0x1a6: V106 = 0x20
0x1a8: V107 = ADD 0x20 V101
0x1ac: V108 = 0x40
0x1ae: V109 = M[0x40]
0x1b1: V110 = SUB V107 V109
0x1b3: RETURN V109 V110
---
Entry stack: [V11, 0x172, V354]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x172]

================================

Block 0x1b4
[0x1b4:0x1ba]
---
Predecessors: [0x6d]
Successors: [0x1bb, 0x1bf]
---
0x1b4 JUMPDEST
0x1b5 CALLVALUE
0x1b6 ISZERO
0x1b7 PUSH2 0x1bf
0x1ba JUMPI
---
0x1b4: JUMPDEST 
0x1b5: V111 = CALLVALUE
0x1b6: V112 = ISZERO V111
0x1b7: V113 = 0x1bf
0x1ba: JUMPI 0x1bf V112
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1bb
[0x1bb:0x1be]
---
Predecessors: [0x1b4]
Successors: []
---
0x1bb PUSH1 0x0
0x1bd DUP1
0x1be REVERT
---
0x1bb: V114 = 0x0
0x1be: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1bf
[0x1bf:0x1c6]
---
Predecessors: [0x1b4]
Successors: [0x635]
---
0x1bf JUMPDEST
0x1c0 PUSH2 0x1c7
0x1c3 PUSH2 0x635
0x1c6 JUMP
---
0x1bf: JUMPDEST 
0x1c0: V115 = 0x1c7
0x1c3: V116 = 0x635
0x1c6: JUMP 0x635
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1c7]
Exit stack: [V11, 0x1c7]

================================

Block 0x1c7
[0x1c7:0x1c8]
---
Predecessors: [0x761]
Successors: []
---
0x1c7 JUMPDEST
0x1c8 STOP
---
0x1c7: JUMPDEST 
0x1c8: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1c9
[0x1c9:0x1e7]
---
Predecessors: [0x85]
Successors: [0x8d]
---
0x1c9 JUMPDEST
0x1ca PUSH1 0x0
0x1cc ADDRESS
0x1cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e2 AND
0x1e3 BALANCE
0x1e4 SWAP1
0x1e5 POP
0x1e6 SWAP1
0x1e7 JUMP
---
0x1c9: JUMPDEST 
0x1ca: V117 = 0x0
0x1cc: V118 = ADDRESS
0x1cd: V119 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e2: V120 = AND 0xffffffffffffffffffffffffffffffffffffffff V118
0x1e3: V121 = BALANCE V120
0x1e7: JUMP 0x8d
---
Entry stack: [V11, 0x8d]
Stack pops: 1
Stack additions: [V121]
Exit stack: [V11, V121]

================================

Block 0x1e8
[0x1e8:0x20c]
---
Predecessors: [0xae]
Successors: [0xb6]
---
0x1e8 JUMPDEST
0x1e9 PUSH1 0x0
0x1eb DUP1
0x1ec SWAP1
0x1ed SLOAD
0x1ee SWAP1
0x1ef PUSH2 0x100
0x1f2 EXP
0x1f3 SWAP1
0x1f4 DIV
0x1f5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20a AND
0x20b DUP2
0x20c JUMP
---
0x1e8: JUMPDEST 
0x1e9: V122 = 0x0
0x1ed: V123 = S[0x0]
0x1ef: V124 = 0x100
0x1f2: V125 = EXP 0x100 0x0
0x1f4: V126 = DIV V123 0x1
0x1f5: V127 = 0xffffffffffffffffffffffffffffffffffffffff
0x20a: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x20c: JUMP 0xb6
---
Entry stack: [V11, 0xb6]
Stack pops: 1
Stack additions: [S0, V128]
Exit stack: [V11, 0xb6, V128]

================================

Block 0x20d
[0x20d:0x263]
---
Predecessors: [0x103]
Successors: [0x264, 0x2b5]
---
0x20d JUMPDEST
0x20e PUSH1 0x1
0x210 PUSH1 0x0
0x212 SWAP1
0x213 SLOAD
0x214 SWAP1
0x215 PUSH2 0x100
0x218 EXP
0x219 SWAP1
0x21a DIV
0x21b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x230 AND
0x231 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x246 AND
0x247 CALLER
0x248 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x25d AND
0x25e EQ
0x25f DUP1
0x260 PUSH2 0x2b5
0x263 JUMPI
---
0x20d: JUMPDEST 
0x20e: V129 = 0x1
0x210: V130 = 0x0
0x213: V131 = S[0x1]
0x215: V132 = 0x100
0x218: V133 = EXP 0x100 0x0
0x21a: V134 = DIV V131 0x1
0x21b: V135 = 0xffffffffffffffffffffffffffffffffffffffff
0x230: V136 = AND 0xffffffffffffffffffffffffffffffffffffffff V134
0x231: V137 = 0xffffffffffffffffffffffffffffffffffffffff
0x246: V138 = AND 0xffffffffffffffffffffffffffffffffffffffff V136
0x247: V139 = CALLER
0x248: V140 = 0xffffffffffffffffffffffffffffffffffffffff
0x25d: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x25e: V142 = EQ V141 V138
0x260: V143 = 0x2b5
0x263: JUMPI 0x2b5 V142
---
Entry stack: [V11, 0x119, V66]
Stack pops: 0
Stack additions: [V142]
Exit stack: [V11, 0x119, V66, V142]

================================

Block 0x264
[0x264:0x2b4]
---
Predecessors: [0x20d]
Successors: [0x2b5]
---
0x264 POP
0x265 PUSH1 0x0
0x267 DUP1
0x268 SWAP1
0x269 SLOAD
0x26a SWAP1
0x26b PUSH2 0x100
0x26e EXP
0x26f SWAP1
0x270 DIV
0x271 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x286 AND
0x287 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x29c AND
0x29d CALLER
0x29e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b3 AND
0x2b4 EQ
---
0x265: V144 = 0x0
0x269: V145 = S[0x0]
0x26b: V146 = 0x100
0x26e: V147 = EXP 0x100 0x0
0x270: V148 = DIV V145 0x1
0x271: V149 = 0xffffffffffffffffffffffffffffffffffffffff
0x286: V150 = AND 0xffffffffffffffffffffffffffffffffffffffff V148
0x287: V151 = 0xffffffffffffffffffffffffffffffffffffffff
0x29c: V152 = AND 0xffffffffffffffffffffffffffffffffffffffff V150
0x29d: V153 = CALLER
0x29e: V154 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b3: V155 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x2b4: V156 = EQ V155 V152
---
Entry stack: [V11, 0x119, V66, V142]
Stack pops: 1
Stack additions: [V156]
Exit stack: [V11, 0x119, V66, V156]

================================

Block 0x2b5
[0x2b5:0x2bb]
---
Predecessors: [0x20d, 0x264]
Successors: [0x2bc, 0x2c0]
---
0x2b5 JUMPDEST
0x2b6 ISZERO
0x2b7 ISZERO
0x2b8 PUSH2 0x2c0
0x2bb JUMPI
---
0x2b5: JUMPDEST 
0x2b6: V157 = ISZERO S0
0x2b7: V158 = ISZERO V157
0x2b8: V159 = 0x2c0
0x2bb: JUMPI 0x2c0 V158
---
Entry stack: [V11, 0x119, V66, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x119, V66]

================================

Block 0x2bc
[0x2bc:0x2bf]
---
Predecessors: [0x2b5]
Successors: []
---
0x2bc PUSH1 0x0
0x2be DUP1
0x2bf REVERT
---
0x2bc: V160 = 0x0
0x2bf: REVERT 0x0 0x0
---
Entry stack: [V11, 0x119, V66]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x119, V66]

================================

Block 0x2c0
[0x2c0:0x3a1]
---
Predecessors: [0x2b5]
Successors: [0x3a2, 0x3a6]
---
0x2c0 JUMPDEST
0x2c1 PUSH1 0x2
0x2c3 PUSH1 0x0
0x2c5 SWAP1
0x2c6 SLOAD
0x2c7 SWAP1
0x2c8 PUSH2 0x100
0x2cb EXP
0x2cc SWAP1
0x2cd DIV
0x2ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e3 AND
0x2e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f9 AND
0x2fa PUSH4 0xa9059cbb
0x2ff PUSH1 0x1
0x301 PUSH1 0x0
0x303 SWAP1
0x304 SLOAD
0x305 SWAP1
0x306 PUSH2 0x100
0x309 EXP
0x30a SWAP1
0x30b DIV
0x30c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x321 AND
0x322 DUP4
0x323 PUSH1 0x40
0x325 MLOAD
0x326 DUP4
0x327 PUSH4 0xffffffff
0x32c AND
0x32d PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x34b MUL
0x34c DUP2
0x34d MSTORE
0x34e PUSH1 0x4
0x350 ADD
0x351 DUP1
0x352 DUP4
0x353 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x368 AND
0x369 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x37e AND
0x37f DUP2
0x380 MSTORE
0x381 PUSH1 0x20
0x383 ADD
0x384 DUP3
0x385 DUP2
0x386 MSTORE
0x387 PUSH1 0x20
0x389 ADD
0x38a SWAP3
0x38b POP
0x38c POP
0x38d POP
0x38e PUSH1 0x0
0x390 PUSH1 0x40
0x392 MLOAD
0x393 DUP1
0x394 DUP4
0x395 SUB
0x396 DUP2
0x397 PUSH1 0x0
0x399 DUP8
0x39a DUP1
0x39b EXTCODESIZE
0x39c ISZERO
0x39d ISZERO
0x39e PUSH2 0x3a6
0x3a1 JUMPI
---
0x2c0: JUMPDEST 
0x2c1: V161 = 0x2
0x2c3: V162 = 0x0
0x2c6: V163 = S[0x2]
0x2c8: V164 = 0x100
0x2cb: V165 = EXP 0x100 0x0
0x2cd: V166 = DIV V163 0x1
0x2ce: V167 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e3: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff V166
0x2e4: V169 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f9: V170 = AND 0xffffffffffffffffffffffffffffffffffffffff V168
0x2fa: V171 = 0xa9059cbb
0x2ff: V172 = 0x1
0x301: V173 = 0x0
0x304: V174 = S[0x1]
0x306: V175 = 0x100
0x309: V176 = EXP 0x100 0x0
0x30b: V177 = DIV V174 0x1
0x30c: V178 = 0xffffffffffffffffffffffffffffffffffffffff
0x321: V179 = AND 0xffffffffffffffffffffffffffffffffffffffff V177
0x323: V180 = 0x40
0x325: V181 = M[0x40]
0x327: V182 = 0xffffffff
0x32c: V183 = AND 0xffffffff 0xa9059cbb
0x32d: V184 = 0x100000000000000000000000000000000000000000000000000000000
0x34b: V185 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x34d: M[V181] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x34e: V186 = 0x4
0x350: V187 = ADD 0x4 V181
0x353: V188 = 0xffffffffffffffffffffffffffffffffffffffff
0x368: V189 = AND 0xffffffffffffffffffffffffffffffffffffffff V179
0x369: V190 = 0xffffffffffffffffffffffffffffffffffffffff
0x37e: V191 = AND 0xffffffffffffffffffffffffffffffffffffffff V189
0x380: M[V187] = V191
0x381: V192 = 0x20
0x383: V193 = ADD 0x20 V187
0x386: M[V193] = V66
0x387: V194 = 0x20
0x389: V195 = ADD 0x20 V193
0x38e: V196 = 0x0
0x390: V197 = 0x40
0x392: V198 = M[0x40]
0x395: V199 = SUB V195 V198
0x397: V200 = 0x0
0x39b: V201 = EXTCODESIZE V170
0x39c: V202 = ISZERO V201
0x39d: V203 = ISZERO V202
0x39e: V204 = 0x3a6
0x3a1: JUMPI 0x3a6 V203
---
Entry stack: [V11, 0x119, V66]
Stack pops: 1
Stack additions: [S0, V170, 0xa9059cbb, V195, 0x0, V198, V199, V198, 0x0, V170]
Exit stack: [V11, 0x119, V66, V170, 0xa9059cbb, V195, 0x0, V198, V199, V198, 0x0, V170]

================================

Block 0x3a2
[0x3a2:0x3a5]
---
Predecessors: [0x2c0]
Successors: []
---
0x3a2 PUSH1 0x0
0x3a4 DUP1
0x3a5 REVERT
---
0x3a2: V205 = 0x0
0x3a5: REVERT 0x0 0x0
---
Entry stack: [V11, 0x119, V66, V170, 0xa9059cbb, V195, 0x0, V198, V199, V198, 0x0, V170]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x119, V66, V170, 0xa9059cbb, V195, 0x0, V198, V199, V198, 0x0, V170]

================================

Block 0x3a6
[0x3a6:0x3b2]
---
Predecessors: [0x2c0]
Successors: [0x3b3, 0x3b7]
---
0x3a6 JUMPDEST
0x3a7 PUSH2 0x2c6
0x3aa GAS
0x3ab SUB
0x3ac CALL
0x3ad ISZERO
0x3ae ISZERO
0x3af PUSH2 0x3b7
0x3b2 JUMPI
---
0x3a6: JUMPDEST 
0x3a7: V206 = 0x2c6
0x3aa: V207 = GAS
0x3ab: V208 = SUB V207 0x2c6
0x3ac: V209 = CALL V208 V170 0x0 V198 V199 V198 0x0
0x3ad: V210 = ISZERO V209
0x3ae: V211 = ISZERO V210
0x3af: V212 = 0x3b7
0x3b2: JUMPI 0x3b7 V211
---
Entry stack: [V11, 0x119, V66, V170, 0xa9059cbb, V195, 0x0, V198, V199, V198, 0x0, V170]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x119, V66, V170, 0xa9059cbb, V195]

================================

Block 0x3b3
[0x3b3:0x3b6]
---
Predecessors: [0x3a6]
Successors: []
---
0x3b3 PUSH1 0x0
0x3b5 DUP1
0x3b6 REVERT
---
0x3b3: V213 = 0x0
0x3b6: REVERT 0x0 0x0
---
Entry stack: [V11, 0x119, V66, V170, 0xa9059cbb, V195]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x119, V66, V170, 0xa9059cbb, V195]

================================

Block 0x3b7
[0x3b7:0x3bc]
---
Predecessors: [0x3a6]
Successors: [0x119]
---
0x3b7 JUMPDEST
0x3b8 POP
0x3b9 POP
0x3ba POP
0x3bb POP
0x3bc JUMP
---
0x3b7: JUMPDEST 
0x3bc: JUMP 0x119
---
Entry stack: [V11, 0x119, V66, V170, 0xa9059cbb, V195]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x3bd
[0x3bd:0x416]
---
Predecessors: [0x126]
Successors: [0x417, 0x468]
---
0x3bd JUMPDEST
0x3be PUSH1 0x0
0x3c0 DUP1
0x3c1 PUSH1 0x1
0x3c3 PUSH1 0x0
0x3c5 SWAP1
0x3c6 SLOAD
0x3c7 SWAP1
0x3c8 PUSH2 0x100
0x3cb EXP
0x3cc SWAP1
0x3cd DIV
0x3ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e3 AND
0x3e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f9 AND
0x3fa CALLER
0x3fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x410 AND
0x411 EQ
0x412 DUP1
0x413 PUSH2 0x468
0x416 JUMPI
---
0x3bd: JUMPDEST 
0x3be: V214 = 0x0
0x3c1: V215 = 0x1
0x3c3: V216 = 0x0
0x3c6: V217 = S[0x1]
0x3c8: V218 = 0x100
0x3cb: V219 = EXP 0x100 0x0
0x3cd: V220 = DIV V217 0x1
0x3ce: V221 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e3: V222 = AND 0xffffffffffffffffffffffffffffffffffffffff V220
0x3e4: V223 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f9: V224 = AND 0xffffffffffffffffffffffffffffffffffffffff V222
0x3fa: V225 = CALLER
0x3fb: V226 = 0xffffffffffffffffffffffffffffffffffffffff
0x410: V227 = AND 0xffffffffffffffffffffffffffffffffffffffff V225
0x411: V228 = EQ V227 V224
0x413: V229 = 0x468
0x416: JUMPI 0x468 V228
---
Entry stack: [V11, 0x145, V76, V79]
Stack pops: 0
Stack additions: [0x0, 0x0, V228]
Exit stack: [V11, 0x145, V76, V79, 0x0, 0x0, V228]

================================

Block 0x417
[0x417:0x467]
---
Predecessors: [0x3bd]
Successors: [0x468]
---
0x417 POP
0x418 PUSH1 0x0
0x41a DUP1
0x41b SWAP1
0x41c SLOAD
0x41d SWAP1
0x41e PUSH2 0x100
0x421 EXP
0x422 SWAP1
0x423 DIV
0x424 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x439 AND
0x43a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x44f AND
0x450 CALLER
0x451 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x466 AND
0x467 EQ
---
0x418: V230 = 0x0
0x41c: V231 = S[0x0]
0x41e: V232 = 0x100
0x421: V233 = EXP 0x100 0x0
0x423: V234 = DIV V231 0x1
0x424: V235 = 0xffffffffffffffffffffffffffffffffffffffff
0x439: V236 = AND 0xffffffffffffffffffffffffffffffffffffffff V234
0x43a: V237 = 0xffffffffffffffffffffffffffffffffffffffff
0x44f: V238 = AND 0xffffffffffffffffffffffffffffffffffffffff V236
0x450: V239 = CALLER
0x451: V240 = 0xffffffffffffffffffffffffffffffffffffffff
0x466: V241 = AND 0xffffffffffffffffffffffffffffffffffffffff V239
0x467: V242 = EQ V241 V238
---
Entry stack: [V11, 0x145, V76, V79, 0x0, 0x0, V228]
Stack pops: 1
Stack additions: [V242]
Exit stack: [V11, 0x145, V76, V79, 0x0, 0x0, V242]

================================

Block 0x468
[0x468:0x46e]
---
Predecessors: [0x3bd, 0x417]
Successors: [0x46f, 0x473]
---
0x468 JUMPDEST
0x469 ISZERO
0x46a ISZERO
0x46b PUSH2 0x473
0x46e JUMPI
---
0x468: JUMPDEST 
0x469: V243 = ISZERO S0
0x46a: V244 = ISZERO V243
0x46b: V245 = 0x473
0x46e: JUMPI 0x473 V244
---
Entry stack: [V11, 0x145, V76, V79, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x145, V76, V79, 0x0, 0x0]

================================

Block 0x46f
[0x46f:0x472]
---
Predecessors: [0x468]
Successors: []
---
0x46f PUSH1 0x0
0x471 DUP1
0x472 REVERT
---
0x46f: V246 = 0x0
0x472: REVERT 0x0 0x0
---
Entry stack: [V11, 0x145, V76, V79, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x145, V76, V79, 0x0, 0x0]

================================

Block 0x473
[0x473:0x507]
---
Predecessors: [0x468]
Successors: [0x508, 0x50c]
---
0x473 JUMPDEST
0x474 PUSH1 0x2
0x476 PUSH1 0x0
0x478 SWAP1
0x479 SLOAD
0x47a SWAP1
0x47b PUSH2 0x100
0x47e EXP
0x47f SWAP1
0x480 DIV
0x481 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x496 AND
0x497 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ac AND
0x4ad PUSH4 0xb9186d7d
0x4b2 DUP6
0x4b3 PUSH1 0x0
0x4b5 PUSH1 0x40
0x4b7 MLOAD
0x4b8 PUSH1 0x20
0x4ba ADD
0x4bb MSTORE
0x4bc PUSH1 0x40
0x4be MLOAD
0x4bf DUP3
0x4c0 PUSH4 0xffffffff
0x4c5 AND
0x4c6 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x4e4 MUL
0x4e5 DUP2
0x4e6 MSTORE
0x4e7 PUSH1 0x4
0x4e9 ADD
0x4ea DUP1
0x4eb DUP3
0x4ec DUP2
0x4ed MSTORE
0x4ee PUSH1 0x20
0x4f0 ADD
0x4f1 SWAP2
0x4f2 POP
0x4f3 POP
0x4f4 PUSH1 0x20
0x4f6 PUSH1 0x40
0x4f8 MLOAD
0x4f9 DUP1
0x4fa DUP4
0x4fb SUB
0x4fc DUP2
0x4fd PUSH1 0x0
0x4ff DUP8
0x500 DUP1
0x501 EXTCODESIZE
0x502 ISZERO
0x503 ISZERO
0x504 PUSH2 0x50c
0x507 JUMPI
---
0x473: JUMPDEST 
0x474: V247 = 0x2
0x476: V248 = 0x0
0x479: V249 = S[0x2]
0x47b: V250 = 0x100
0x47e: V251 = EXP 0x100 0x0
0x480: V252 = DIV V249 0x1
0x481: V253 = 0xffffffffffffffffffffffffffffffffffffffff
0x496: V254 = AND 0xffffffffffffffffffffffffffffffffffffffff V252
0x497: V255 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ac: V256 = AND 0xffffffffffffffffffffffffffffffffffffffff V254
0x4ad: V257 = 0xb9186d7d
0x4b3: V258 = 0x0
0x4b5: V259 = 0x40
0x4b7: V260 = M[0x40]
0x4b8: V261 = 0x20
0x4ba: V262 = ADD 0x20 V260
0x4bb: M[V262] = 0x0
0x4bc: V263 = 0x40
0x4be: V264 = M[0x40]
0x4c0: V265 = 0xffffffff
0x4c5: V266 = AND 0xffffffff 0xb9186d7d
0x4c6: V267 = 0x100000000000000000000000000000000000000000000000000000000
0x4e4: V268 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xb9186d7d
0x4e6: M[V264] = 0xb9186d7d00000000000000000000000000000000000000000000000000000000
0x4e7: V269 = 0x4
0x4e9: V270 = ADD 0x4 V264
0x4ed: M[V270] = V76
0x4ee: V271 = 0x20
0x4f0: V272 = ADD 0x20 V270
0x4f4: V273 = 0x20
0x4f6: V274 = 0x40
0x4f8: V275 = M[0x40]
0x4fb: V276 = SUB V272 V275
0x4fd: V277 = 0x0
0x501: V278 = EXTCODESIZE V256
0x502: V279 = ISZERO V278
0x503: V280 = ISZERO V279
0x504: V281 = 0x50c
0x507: JUMPI 0x50c V280
---
Entry stack: [V11, 0x145, V76, V79, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V256, 0xb9186d7d, V272, 0x20, V275, V276, V275, 0x0, V256]
Exit stack: [V11, 0x145, V76, V79, 0x0, 0x0, V256, 0xb9186d7d, V272, 0x20, V275, V276, V275, 0x0, V256]

================================

Block 0x508
[0x508:0x50b]
---
Predecessors: [0x473]
Successors: []
---
0x508 PUSH1 0x0
0x50a DUP1
0x50b REVERT
---
0x508: V282 = 0x0
0x50b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x145, V76, V79, 0x0, 0x0, V256, 0xb9186d7d, V272, 0x20, V275, V276, V275, 0x0, V256]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x145, V76, V79, 0x0, 0x0, V256, 0xb9186d7d, V272, 0x20, V275, V276, V275, 0x0, V256]

================================

Block 0x50c
[0x50c:0x518]
---
Predecessors: [0x473]
Successors: [0x519, 0x51d]
---
0x50c JUMPDEST
0x50d PUSH2 0x2c6
0x510 GAS
0x511 SUB
0x512 CALL
0x513 ISZERO
0x514 ISZERO
0x515 PUSH2 0x51d
0x518 JUMPI
---
0x50c: JUMPDEST 
0x50d: V283 = 0x2c6
0x510: V284 = GAS
0x511: V285 = SUB V284 0x2c6
0x512: V286 = CALL V285 V256 0x0 V275 V276 V275 0x20
0x513: V287 = ISZERO V286
0x514: V288 = ISZERO V287
0x515: V289 = 0x51d
0x518: JUMPI 0x51d V288
---
Entry stack: [V11, 0x145, V76, V79, 0x0, 0x0, V256, 0xb9186d7d, V272, 0x20, V275, V276, V275, 0x0, V256]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x145, V76, V79, 0x0, 0x0, V256, 0xb9186d7d, V272]

================================

Block 0x519
[0x519:0x51c]
---
Predecessors: [0x50c]
Successors: []
---
0x519 PUSH1 0x0
0x51b DUP1
0x51c REVERT
---
0x519: V290 = 0x0
0x51c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x145, V76, V79, 0x0, 0x0, V256, 0xb9186d7d, V272]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x145, V76, V79, 0x0, 0x0, V256, 0xb9186d7d, V272]

================================

Block 0x51d
[0x51d:0x54a]
---
Predecessors: [0x50c]
Successors: [0x54b, 0x550]
---
0x51d JUMPDEST
0x51e POP
0x51f POP
0x520 POP
0x521 PUSH1 0x40
0x523 MLOAD
0x524 DUP1
0x525 MLOAD
0x526 SWAP1
0x527 POP
0x528 SWAP1
0x529 POP
0x52a DUP1
0x52b ADDRESS
0x52c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x541 AND
0x542 BALANCE
0x543 LT
0x544 ISZERO
0x545 DUP1
0x546 ISZERO
0x547 PUSH2 0x550
0x54a JUMPI
---
0x51d: JUMPDEST 
0x521: V291 = 0x40
0x523: V292 = M[0x40]
0x525: V293 = M[V292]
0x52b: V294 = ADDRESS
0x52c: V295 = 0xffffffffffffffffffffffffffffffffffffffff
0x541: V296 = AND 0xffffffffffffffffffffffffffffffffffffffff V294
0x542: V297 = BALANCE V296
0x543: V298 = LT V297 V293
0x544: V299 = ISZERO V298
0x546: V300 = ISZERO V299
0x547: V301 = 0x550
0x54a: JUMPI 0x550 V300
---
Entry stack: [V11, 0x145, V76, V79, 0x0, 0x0, V256, 0xb9186d7d, V272]
Stack pops: 4
Stack additions: [V293, V299]
Exit stack: [V11, 0x145, V76, V79, 0x0, V293, V299]

================================

Block 0x54b
[0x54b:0x54f]
---
Predecessors: [0x51d]
Successors: [0x550]
---
0x54b POP
0x54c DUP1
0x54d DUP4
0x54e LT
0x54f ISZERO
---
0x54e: V302 = LT V79 V293
0x54f: V303 = ISZERO V302
---
Entry stack: [V11, 0x145, V76, V79, 0x0, V293, V299]
Stack pops: 4
Stack additions: [S3, S2, S1, V303]
Exit stack: [V11, 0x145, V76, V79, 0x0, V293, V303]

================================

Block 0x550
[0x550:0x555]
---
Predecessors: [0x51d, 0x54b]
Successors: [0x556, 0x603]
---
0x550 JUMPDEST
0x551 ISZERO
0x552 PUSH2 0x603
0x555 JUMPI
---
0x550: JUMPDEST 
0x551: V304 = ISZERO S0
0x552: V305 = 0x603
0x555: JUMPI 0x603 V304
---
Entry stack: [V11, 0x145, V76, V79, 0x0, V293, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x145, V76, V79, 0x0, V293]

================================

Block 0x556
[0x556:0x5e0]
---
Predecessors: [0x550]
Successors: [0x5e1, 0x5e5]
---
0x556 PUSH1 0x2
0x558 PUSH1 0x0
0x55a SWAP1
0x55b SLOAD
0x55c SWAP1
0x55d PUSH2 0x100
0x560 EXP
0x561 SWAP1
0x562 DIV
0x563 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x578 AND
0x579 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x58e AND
0x58f PUSH4 0xefef39a1
0x594 DUP3
0x595 DUP7
0x596 PUSH1 0x40
0x598 MLOAD
0x599 DUP4
0x59a PUSH4 0xffffffff
0x59f AND
0x5a0 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x5be MUL
0x5bf DUP2
0x5c0 MSTORE
0x5c1 PUSH1 0x4
0x5c3 ADD
0x5c4 DUP1
0x5c5 DUP3
0x5c6 DUP2
0x5c7 MSTORE
0x5c8 PUSH1 0x20
0x5ca ADD
0x5cb SWAP2
0x5cc POP
0x5cd POP
0x5ce PUSH1 0x0
0x5d0 PUSH1 0x40
0x5d2 MLOAD
0x5d3 DUP1
0x5d4 DUP4
0x5d5 SUB
0x5d6 DUP2
0x5d7 DUP6
0x5d8 DUP9
0x5d9 DUP1
0x5da EXTCODESIZE
0x5db ISZERO
0x5dc ISZERO
0x5dd PUSH2 0x5e5
0x5e0 JUMPI
---
0x556: V306 = 0x2
0x558: V307 = 0x0
0x55b: V308 = S[0x2]
0x55d: V309 = 0x100
0x560: V310 = EXP 0x100 0x0
0x562: V311 = DIV V308 0x1
0x563: V312 = 0xffffffffffffffffffffffffffffffffffffffff
0x578: V313 = AND 0xffffffffffffffffffffffffffffffffffffffff V311
0x579: V314 = 0xffffffffffffffffffffffffffffffffffffffff
0x58e: V315 = AND 0xffffffffffffffffffffffffffffffffffffffff V313
0x58f: V316 = 0xefef39a1
0x596: V317 = 0x40
0x598: V318 = M[0x40]
0x59a: V319 = 0xffffffff
0x59f: V320 = AND 0xffffffff 0xefef39a1
0x5a0: V321 = 0x100000000000000000000000000000000000000000000000000000000
0x5be: V322 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xefef39a1
0x5c0: M[V318] = 0xefef39a100000000000000000000000000000000000000000000000000000000
0x5c1: V323 = 0x4
0x5c3: V324 = ADD 0x4 V318
0x5c7: M[V324] = V76
0x5c8: V325 = 0x20
0x5ca: V326 = ADD 0x20 V324
0x5ce: V327 = 0x0
0x5d0: V328 = 0x40
0x5d2: V329 = M[0x40]
0x5d5: V330 = SUB V326 V329
0x5da: V331 = EXTCODESIZE V315
0x5db: V332 = ISZERO V331
0x5dc: V333 = ISZERO V332
0x5dd: V334 = 0x5e5
0x5e0: JUMPI 0x5e5 V333
---
Entry stack: [V11, 0x145, V76, V79, 0x0, V293]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V315, 0xefef39a1, S0, V326, 0x0, V329, V330, V329, S0, V315]
Exit stack: [V11, 0x145, V76, V79, 0x0, V293, V315, 0xefef39a1, V293, V326, 0x0, V329, V330, V329, V293, V315]

================================

Block 0x5e1
[0x5e1:0x5e4]
---
Predecessors: [0x556]
Successors: []
---
0x5e1 PUSH1 0x0
0x5e3 DUP1
0x5e4 REVERT
---
0x5e1: V335 = 0x0
0x5e4: REVERT 0x0 0x0
---
Entry stack: [V11, 0x145, V76, V79, 0x0, V293, V315, 0xefef39a1, V293, V326, 0x0, V329, V330, V329, V293, V315]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x145, V76, V79, 0x0, V293, V315, 0xefef39a1, V293, V326, 0x0, V329, V330, V329, V293, V315]

================================

Block 0x5e5
[0x5e5:0x5f1]
---
Predecessors: [0x556]
Successors: [0x5f2, 0x5f6]
---
0x5e5 JUMPDEST
0x5e6 PUSH2 0x25ee
0x5e9 GAS
0x5ea SUB
0x5eb CALL
0x5ec ISZERO
0x5ed ISZERO
0x5ee PUSH2 0x5f6
0x5f1 JUMPI
---
0x5e5: JUMPDEST 
0x5e6: V336 = 0x25ee
0x5e9: V337 = GAS
0x5ea: V338 = SUB V337 0x25ee
0x5eb: V339 = CALL V338 V315 V293 V329 V330 V329 0x0
0x5ec: V340 = ISZERO V339
0x5ed: V341 = ISZERO V340
0x5ee: V342 = 0x5f6
0x5f1: JUMPI 0x5f6 V341
---
Entry stack: [V11, 0x145, V76, V79, 0x0, V293, V315, 0xefef39a1, V293, V326, 0x0, V329, V330, V329, V293, V315]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x145, V76, V79, 0x0, V293, V315, 0xefef39a1, V293, V326]

================================

Block 0x5f2
[0x5f2:0x5f5]
---
Predecessors: [0x5e5]
Successors: []
---
0x5f2 PUSH1 0x0
0x5f4 DUP1
0x5f5 REVERT
---
0x5f2: V343 = 0x0
0x5f5: REVERT 0x0 0x0
---
Entry stack: [V11, 0x145, V76, V79, 0x0, V293, V315, 0xefef39a1, V293, V326]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x145, V76, V79, 0x0, V293, V315, 0xefef39a1, V293, V326]

================================

Block 0x5f6
[0x5f6:0x602]
---
Predecessors: [0x5e5]
Successors: [0x608]
---
0x5f6 JUMPDEST
0x5f7 POP
0x5f8 POP
0x5f9 POP
0x5fa POP
0x5fb PUSH1 0x1
0x5fd SWAP2
0x5fe POP
0x5ff PUSH2 0x608
0x602 JUMP
---
0x5f6: JUMPDEST 
0x5fb: V344 = 0x1
0x5ff: V345 = 0x608
0x602: JUMP 0x608
---
Entry stack: [V11, 0x145, V76, V79, 0x0, V293, V315, 0xefef39a1, V293, V326]
Stack pops: 6
Stack additions: [0x1, S4]
Exit stack: [V11, 0x145, V76, V79, 0x1, V293]

================================

Block 0x603
[0x603:0x607]
---
Predecessors: [0x550]
Successors: [0x608]
---
0x603 JUMPDEST
0x604 PUSH1 0x0
0x606 SWAP2
0x607 POP
---
0x603: JUMPDEST 
0x604: V346 = 0x0
---
Entry stack: [V11, 0x145, V76, V79, 0x0, V293]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V11, 0x145, V76, V79, 0x0, V293]

================================

Block 0x608
[0x608:0x60e]
---
Predecessors: [0x5f6, 0x603]
Successors: [0x145]
---
0x608 JUMPDEST
0x609 POP
0x60a SWAP3
0x60b SWAP2
0x60c POP
0x60d POP
0x60e JUMP
---
0x608: JUMPDEST 
0x60e: JUMP 0x145
---
Entry stack: [V11, 0x145, V76, V79, {0x0, 0x1}, V293]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V11, {0x0, 0x1}]

================================

Block 0x60f
[0x60f:0x634]
---
Predecessors: [0x16a]
Successors: [0x172]
---
0x60f JUMPDEST
0x610 PUSH1 0x1
0x612 PUSH1 0x0
0x614 SWAP1
0x615 SLOAD
0x616 SWAP1
0x617 PUSH2 0x100
0x61a EXP
0x61b SWAP1
0x61c DIV
0x61d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x632 AND
0x633 DUP2
0x634 JUMP
---
0x60f: JUMPDEST 
0x610: V347 = 0x1
0x612: V348 = 0x0
0x615: V349 = S[0x1]
0x617: V350 = 0x100
0x61a: V351 = EXP 0x100 0x0
0x61c: V352 = DIV V349 0x1
0x61d: V353 = 0xffffffffffffffffffffffffffffffffffffffff
0x632: V354 = AND 0xffffffffffffffffffffffffffffffffffffffff V352
0x634: JUMP 0x172
---
Entry stack: [V11, 0x172]
Stack pops: 1
Stack additions: [S0, V354]
Exit stack: [V11, 0x172, V354]

================================

Block 0x635
[0x635:0x68b]
---
Predecessors: [0x1bf]
Successors: [0x68c, 0x6dd]
---
0x635 JUMPDEST
0x636 PUSH1 0x1
0x638 PUSH1 0x0
0x63a SWAP1
0x63b SLOAD
0x63c SWAP1
0x63d PUSH2 0x100
0x640 EXP
0x641 SWAP1
0x642 DIV
0x643 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x658 AND
0x659 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x66e AND
0x66f CALLER
0x670 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x685 AND
0x686 EQ
0x687 DUP1
0x688 PUSH2 0x6dd
0x68b JUMPI
---
0x635: JUMPDEST 
0x636: V355 = 0x1
0x638: V356 = 0x0
0x63b: V357 = S[0x1]
0x63d: V358 = 0x100
0x640: V359 = EXP 0x100 0x0
0x642: V360 = DIV V357 0x1
0x643: V361 = 0xffffffffffffffffffffffffffffffffffffffff
0x658: V362 = AND 0xffffffffffffffffffffffffffffffffffffffff V360
0x659: V363 = 0xffffffffffffffffffffffffffffffffffffffff
0x66e: V364 = AND 0xffffffffffffffffffffffffffffffffffffffff V362
0x66f: V365 = CALLER
0x670: V366 = 0xffffffffffffffffffffffffffffffffffffffff
0x685: V367 = AND 0xffffffffffffffffffffffffffffffffffffffff V365
0x686: V368 = EQ V367 V364
0x688: V369 = 0x6dd
0x68b: JUMPI 0x6dd V368
---
Entry stack: [V11, 0x1c7]
Stack pops: 0
Stack additions: [V368]
Exit stack: [V11, 0x1c7, V368]

================================

Block 0x68c
[0x68c:0x6dc]
---
Predecessors: [0x635]
Successors: [0x6dd]
---
0x68c POP
0x68d PUSH1 0x0
0x68f DUP1
0x690 SWAP1
0x691 SLOAD
0x692 SWAP1
0x693 PUSH2 0x100
0x696 EXP
0x697 SWAP1
0x698 DIV
0x699 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6ae AND
0x6af PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6c4 AND
0x6c5 CALLER
0x6c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6db AND
0x6dc EQ
---
0x68d: V370 = 0x0
0x691: V371 = S[0x0]
0x693: V372 = 0x100
0x696: V373 = EXP 0x100 0x0
0x698: V374 = DIV V371 0x1
0x699: V375 = 0xffffffffffffffffffffffffffffffffffffffff
0x6ae: V376 = AND 0xffffffffffffffffffffffffffffffffffffffff V374
0x6af: V377 = 0xffffffffffffffffffffffffffffffffffffffff
0x6c4: V378 = AND 0xffffffffffffffffffffffffffffffffffffffff V376
0x6c5: V379 = CALLER
0x6c6: V380 = 0xffffffffffffffffffffffffffffffffffffffff
0x6db: V381 = AND 0xffffffffffffffffffffffffffffffffffffffff V379
0x6dc: V382 = EQ V381 V378
---
Entry stack: [V11, 0x1c7, V368]
Stack pops: 1
Stack additions: [V382]
Exit stack: [V11, 0x1c7, V382]

================================

Block 0x6dd
[0x6dd:0x6e3]
---
Predecessors: [0x635, 0x68c]
Successors: [0x6e4, 0x6e8]
---
0x6dd JUMPDEST
0x6de ISZERO
0x6df ISZERO
0x6e0 PUSH2 0x6e8
0x6e3 JUMPI
---
0x6dd: JUMPDEST 
0x6de: V383 = ISZERO S0
0x6df: V384 = ISZERO V383
0x6e0: V385 = 0x6e8
0x6e3: JUMPI 0x6e8 V384
---
Entry stack: [V11, 0x1c7, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1c7]

================================

Block 0x6e4
[0x6e4:0x6e7]
---
Predecessors: [0x6dd]
Successors: []
---
0x6e4 PUSH1 0x0
0x6e6 DUP1
0x6e7 REVERT
---
0x6e4: V386 = 0x0
0x6e7: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1c7]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1c7]

================================

Block 0x6e8
[0x6e8:0x75c]
---
Predecessors: [0x6dd]
Successors: [0x75d, 0x761]
---
0x6e8 JUMPDEST
0x6e9 PUSH1 0x1
0x6eb PUSH1 0x0
0x6ed SWAP1
0x6ee SLOAD
0x6ef SWAP1
0x6f0 PUSH2 0x100
0x6f3 EXP
0x6f4 SWAP1
0x6f5 DIV
0x6f6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x70b AND
0x70c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x721 AND
0x722 PUSH2 0x8fc
0x725 ADDRESS
0x726 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x73b AND
0x73c BALANCE
0x73d SWAP1
0x73e DUP2
0x73f ISZERO
0x740 MUL
0x741 SWAP1
0x742 PUSH1 0x40
0x744 MLOAD
0x745 PUSH1 0x0
0x747 PUSH1 0x40
0x749 MLOAD
0x74a DUP1
0x74b DUP4
0x74c SUB
0x74d DUP2
0x74e DUP6
0x74f DUP9
0x750 DUP9
0x751 CALL
0x752 SWAP4
0x753 POP
0x754 POP
0x755 POP
0x756 POP
0x757 ISZERO
0x758 ISZERO
0x759 PUSH2 0x761
0x75c JUMPI
---
0x6e8: JUMPDEST 
0x6e9: V387 = 0x1
0x6eb: V388 = 0x0
0x6ee: V389 = S[0x1]
0x6f0: V390 = 0x100
0x6f3: V391 = EXP 0x100 0x0
0x6f5: V392 = DIV V389 0x1
0x6f6: V393 = 0xffffffffffffffffffffffffffffffffffffffff
0x70b: V394 = AND 0xffffffffffffffffffffffffffffffffffffffff V392
0x70c: V395 = 0xffffffffffffffffffffffffffffffffffffffff
0x721: V396 = AND 0xffffffffffffffffffffffffffffffffffffffff V394
0x722: V397 = 0x8fc
0x725: V398 = ADDRESS
0x726: V399 = 0xffffffffffffffffffffffffffffffffffffffff
0x73b: V400 = AND 0xffffffffffffffffffffffffffffffffffffffff V398
0x73c: V401 = BALANCE V400
0x73f: V402 = ISZERO V401
0x740: V403 = MUL V402 0x8fc
0x742: V404 = 0x40
0x744: V405 = M[0x40]
0x745: V406 = 0x0
0x747: V407 = 0x40
0x749: V408 = M[0x40]
0x74c: V409 = SUB V405 V408
0x751: V410 = CALL V403 V396 V401 V408 V409 V408 0x0
0x757: V411 = ISZERO V410
0x758: V412 = ISZERO V411
0x759: V413 = 0x761
0x75c: JUMPI 0x761 V412
---
Entry stack: [V11, 0x1c7]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1c7]

================================

Block 0x75d
[0x75d:0x760]
---
Predecessors: [0x6e8]
Successors: []
---
0x75d PUSH1 0x0
0x75f DUP1
0x760 REVERT
---
0x75d: V414 = 0x0
0x760: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1c7]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1c7]

================================

Block 0x761
[0x761:0x762]
---
Predecessors: [0x6e8]
Successors: [0x1c7]
---
0x761 JUMPDEST
0x762 JUMP
---
0x761: JUMPDEST 
0x762: JUMP 0x1c7
---
Entry stack: [V11, 0x1c7]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x763
[0x763:0x794]
---
Predecessors: []
Successors: []
---
0x763 STOP
0x764 LOG1
0x765 PUSH6 0x627a7a723058
0x76c SHA3
0x76d LOG3
0x76e SWAP14
0x76f PUSH27 0xb2386531b0ff4d7e16ea8e86019cadc0b83b9f70fee70d1b1fb716
0x78b DUP14
0x78c PUSH8 0x29
---
0x763: STOP 
0x764: LOG S0 S1 S2
0x765: V415 = 0x627a7a723058
0x76c: V416 = SHA3 0x627a7a723058 S3
0x76d: LOG V416 S4 S5 S6 S7
0x76f: V417 = 0xb2386531b0ff4d7e16ea8e86019cadc0b83b9f70fee70d1b1fb716
0x78c: V418 = 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0x29, S20, 0xb2386531b0ff4d7e16ea8e86019cadc0b83b9f70fee70d1b1fb716, S22, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S8]
Exit stack: []

================================

Function 0:
Public function signature: 0x12065fe0
Entry block: 0x7a
Exit block: 0x8d
Body: 0x7a, 0x81, 0x85, 0x8d, 0x1c9

Function 1:
Public function signature: 0x60f96a8f
Entry block: 0xa3
Exit block: 0xb6
Body: 0xa3, 0xaa, 0xae, 0xb6, 0x1e8

Function 2:
Public function signature: 0x790d6947
Entry block: 0xf8
Exit block: 0x119
Body: 0xf8, 0xff, 0x103, 0x119, 0x20d, 0x264, 0x2b5, 0x2bc, 0x2c0, 0x3a2, 0x3a6, 0x3b3, 0x3b7

Function 3:
Public function signature: 0x87e40868
Entry block: 0x11b
Exit block: 0x145
Body: 0x11b, 0x122, 0x126, 0x145, 0x3bd, 0x417, 0x468, 0x46f, 0x473, 0x508, 0x50c, 0x519, 0x51d, 0x54b, 0x550, 0x556, 0x5e1, 0x5e5, 0x5f2, 0x5f6, 0x603, 0x608

Function 4:
Public function signature: 0x8b1fdaed
Entry block: 0x15f
Exit block: 0x172
Body: 0x15f, 0x166, 0x16a, 0x172, 0x60f

Function 5:
Public function signature: 0xa27f6043
Entry block: 0x1b4
Exit block: 0x1c7
Body: 0x1b4, 0x1bb, 0x1bf, 0x1c7, 0x635, 0x68c, 0x6dd, 0x6e4, 0x6e8, 0x75d, 0x761

Function 6:
Public fallback function
Entry block: 0x78
Exit block: 0x78
Body: 0x78

