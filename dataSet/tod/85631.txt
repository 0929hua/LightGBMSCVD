Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x8e]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x8e
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x8e
0xc: JUMPI 0x8e V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0xeb]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x5487369
0x3c EQ
0x3d PUSH2 0xeb
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x5487369
0x3c: V13 = EQ 0x5487369 V11
0x3d: V14 = 0xeb
0x40: JUMPI 0xeb V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x10b]
---
0x41 DUP1
0x42 PUSH4 0x34e70cc2
0x47 EQ
0x48 PUSH2 0x10b
0x4b JUMPI
---
0x42: V15 = 0x34e70cc2
0x47: V16 = EQ 0x34e70cc2 V11
0x48: V17 = 0x10b
0x4b: JUMPI 0x10b V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x162]
---
0x4c DUP1
0x4d PUSH4 0x3fc8cef3
0x52 EQ
0x53 PUSH2 0x162
0x56 JUMPI
---
0x4d: V18 = 0x3fc8cef3
0x52: V19 = EQ 0x3fc8cef3 V11
0x53: V20 = 0x162
0x56: JUMPI 0x162 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x1b9]
---
0x57 DUP1
0x58 PUSH4 0x7d211c75
0x5d EQ
0x5e PUSH2 0x1b9
0x61 JUMPI
---
0x58: V21 = 0x7d211c75
0x5d: V22 = EQ 0x7d211c75 V11
0x5e: V23 = 0x1b9
0x61: JUMPI 0x1b9 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x210]
---
0x62 DUP1
0x63 PUSH4 0x8eec6f7b
0x68 EQ
0x69 PUSH2 0x210
0x6c JUMPI
---
0x63: V24 = 0x8eec6f7b
0x68: V25 = EQ 0x8eec6f7b V11
0x69: V26 = 0x210
0x6c: JUMPI 0x210 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x230]
---
0x6d DUP1
0x6e PUSH4 0xc94c91c2
0x73 EQ
0x74 PUSH2 0x230
0x77 JUMPI
---
0x6e: V27 = 0xc94c91c2
0x73: V28 = EQ 0xc94c91c2 V11
0x74: V29 = 0x230
0x77: JUMPI 0x230 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x23a]
---
0x78 DUP1
0x79 PUSH4 0xf39f7cb4
0x7e EQ
0x7f PUSH2 0x23a
0x82 JUMPI
---
0x79: V30 = 0xf39f7cb4
0x7e: V31 = EQ 0xf39f7cb4 V11
0x7f: V32 = 0x23a
0x82: JUMPI 0x23a V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x8d]
---
Predecessors: [0x78]
Successors: [0x8e, 0x267]
---
0x83 DUP1
0x84 PUSH4 0xf4b9fa75
0x89 EQ
0x8a PUSH2 0x267
0x8d JUMPI
---
0x84: V33 = 0xf4b9fa75
0x89: V34 = EQ 0xf4b9fa75 V11
0x8a: V35 = 0x267
0x8d: JUMPI 0x267 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8e
[0x8e:0xe4]
---
Predecessors: [0x0, 0x83]
Successors: [0xe5, 0xe9]
---
0x8e JUMPDEST
0x8f PUSH1 0x0
0x91 DUP1
0x92 SWAP1
0x93 SLOAD
0x94 SWAP1
0x95 PUSH2 0x100
0x98 EXP
0x99 SWAP1
0x9a DIV
0x9b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb0 AND
0xb1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc6 AND
0xc7 CALLER
0xc8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdd AND
0xde EQ
0xdf ISZERO
0xe0 ISZERO
0xe1 PUSH2 0xe9
0xe4 JUMPI
---
0x8e: JUMPDEST 
0x8f: V36 = 0x0
0x93: V37 = S[0x0]
0x95: V38 = 0x100
0x98: V39 = EXP 0x100 0x0
0x9a: V40 = DIV V37 0x1
0x9b: V41 = 0xffffffffffffffffffffffffffffffffffffffff
0xb0: V42 = AND 0xffffffffffffffffffffffffffffffffffffffff V40
0xb1: V43 = 0xffffffffffffffffffffffffffffffffffffffff
0xc6: V44 = AND 0xffffffffffffffffffffffffffffffffffffffff V42
0xc7: V45 = CALLER
0xc8: V46 = 0xffffffffffffffffffffffffffffffffffffffff
0xdd: V47 = AND 0xffffffffffffffffffffffffffffffffffffffff V45
0xde: V48 = EQ V47 V44
0xdf: V49 = ISZERO V48
0xe0: V50 = ISZERO V49
0xe1: V51 = 0xe9
0xe4: JUMPI 0xe9 V50
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe5
[0xe5:0xe8]
---
Predecessors: [0x8e]
Successors: []
---
0xe5 PUSH1 0x0
0xe7 DUP1
0xe8 REVERT
---
0xe5: V52 = 0x0
0xe8: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe9
[0xe9:0xea]
---
Predecessors: [0x8e]
Successors: []
---
0xe9 JUMPDEST
0xea STOP
---
0xe9: JUMPDEST 
0xea: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xeb
[0xeb:0x108]
---
Predecessors: [0xd]
Successors: [0x2be]
---
0xeb JUMPDEST
0xec PUSH2 0x109
0xef PUSH1 0x4
0xf1 DUP1
0xf2 CALLDATASIZE
0xf3 SUB
0xf4 DUP2
0xf5 ADD
0xf6 SWAP1
0xf7 DUP1
0xf8 DUP1
0xf9 CALLDATALOAD
0xfa SWAP1
0xfb PUSH1 0x20
0xfd ADD
0xfe SWAP1
0xff SWAP3
0x100 SWAP2
0x101 SWAP1
0x102 POP
0x103 POP
0x104 POP
0x105 PUSH2 0x2be
0x108 JUMP
---
0xeb: JUMPDEST 
0xec: V53 = 0x109
0xef: V54 = 0x4
0xf2: V55 = CALLDATASIZE
0xf3: V56 = SUB V55 0x4
0xf5: V57 = ADD 0x4 V56
0xf9: V58 = CALLDATALOAD 0x4
0xfb: V59 = 0x20
0xfd: V60 = ADD 0x20 0x4
0x105: V61 = 0x2be
0x108: JUMP 0x2be
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x109, V58]
Exit stack: [V11, 0x109, V58]

================================

Block 0x109
[0x109:0x10a]
---
Predecessors: [0x8ad]
Successors: []
---
0x109 JUMPDEST
0x10a STOP
---
0x109: JUMPDEST 
0x10a: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x10b
[0x10b:0x112]
---
Predecessors: [0x41]
Successors: [0x113, 0x117]
---
0x10b JUMPDEST
0x10c CALLVALUE
0x10d DUP1
0x10e ISZERO
0x10f PUSH2 0x117
0x112 JUMPI
---
0x10b: JUMPDEST 
0x10c: V62 = CALLVALUE
0x10e: V63 = ISZERO V62
0x10f: V64 = 0x117
0x112: JUMPI 0x117 V63
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V62]
Exit stack: [V11, V62]

================================

Block 0x113
[0x113:0x116]
---
Predecessors: [0x10b]
Successors: []
---
0x113 PUSH1 0x0
0x115 DUP1
0x116 REVERT
---
0x113: V65 = 0x0
0x116: REVERT 0x0 0x0
---
Entry stack: [V11, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V62]

================================

Block 0x117
[0x117:0x11f]
---
Predecessors: [0x10b]
Successors: [0x93f]
---
0x117 JUMPDEST
0x118 POP
0x119 PUSH2 0x120
0x11c PUSH2 0x93f
0x11f JUMP
---
0x117: JUMPDEST 
0x119: V66 = 0x120
0x11c: V67 = 0x93f
0x11f: JUMP 0x93f
---
Entry stack: [V11, V62]
Stack pops: 1
Stack additions: [0x120]
Exit stack: [V11, 0x120]

================================

Block 0x120
[0x120:0x161]
---
Predecessors: [0x93f]
Successors: []
---
0x120 JUMPDEST
0x121 PUSH1 0x40
0x123 MLOAD
0x124 DUP1
0x125 DUP3
0x126 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13b AND
0x13c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x151 AND
0x152 DUP2
0x153 MSTORE
0x154 PUSH1 0x20
0x156 ADD
0x157 SWAP2
0x158 POP
0x159 POP
0x15a PUSH1 0x40
0x15c MLOAD
0x15d DUP1
0x15e SWAP2
0x15f SUB
0x160 SWAP1
0x161 RETURN
---
0x120: JUMPDEST 
0x121: V68 = 0x40
0x123: V69 = M[0x40]
0x126: V70 = 0xffffffffffffffffffffffffffffffffffffffff
0x13b: V71 = AND 0xffffffffffffffffffffffffffffffffffffffff V566
0x13c: V72 = 0xffffffffffffffffffffffffffffffffffffffff
0x151: V73 = AND 0xffffffffffffffffffffffffffffffffffffffff V71
0x153: M[V69] = V73
0x154: V74 = 0x20
0x156: V75 = ADD 0x20 V69
0x15a: V76 = 0x40
0x15c: V77 = M[0x40]
0x15f: V78 = SUB V75 V77
0x161: RETURN V77 V78
---
Entry stack: [V11, 0x120, V566]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x120]

================================

Block 0x162
[0x162:0x169]
---
Predecessors: [0x4c]
Successors: [0x16a, 0x16e]
---
0x162 JUMPDEST
0x163 CALLVALUE
0x164 DUP1
0x165 ISZERO
0x166 PUSH2 0x16e
0x169 JUMPI
---
0x162: JUMPDEST 
0x163: V79 = CALLVALUE
0x165: V80 = ISZERO V79
0x166: V81 = 0x16e
0x169: JUMPI 0x16e V80
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V79]
Exit stack: [V11, V79]

================================

Block 0x16a
[0x16a:0x16d]
---
Predecessors: [0x162]
Successors: []
---
0x16a PUSH1 0x0
0x16c DUP1
0x16d REVERT
---
0x16a: V82 = 0x0
0x16d: REVERT 0x0 0x0
---
Entry stack: [V11, V79]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V79]

================================

Block 0x16e
[0x16e:0x176]
---
Predecessors: [0x162]
Successors: [0x965]
---
0x16e JUMPDEST
0x16f POP
0x170 PUSH2 0x177
0x173 PUSH2 0x965
0x176 JUMP
---
0x16e: JUMPDEST 
0x170: V83 = 0x177
0x173: V84 = 0x965
0x176: JUMP 0x965
---
Entry stack: [V11, V79]
Stack pops: 1
Stack additions: [0x177]
Exit stack: [V11, 0x177]

================================

Block 0x177
[0x177:0x1b8]
---
Predecessors: [0x965]
Successors: []
---
0x177 JUMPDEST
0x178 PUSH1 0x40
0x17a MLOAD
0x17b DUP1
0x17c DUP3
0x17d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x192 AND
0x193 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a8 AND
0x1a9 DUP2
0x1aa MSTORE
0x1ab PUSH1 0x20
0x1ad ADD
0x1ae SWAP2
0x1af POP
0x1b0 POP
0x1b1 PUSH1 0x40
0x1b3 MLOAD
0x1b4 DUP1
0x1b5 SWAP2
0x1b6 SUB
0x1b7 SWAP1
0x1b8 RETURN
---
0x177: JUMPDEST 
0x178: V85 = 0x40
0x17a: V86 = M[0x40]
0x17d: V87 = 0xffffffffffffffffffffffffffffffffffffffff
0x192: V88 = AND 0xffffffffffffffffffffffffffffffffffffffff V573
0x193: V89 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a8: V90 = AND 0xffffffffffffffffffffffffffffffffffffffff V88
0x1aa: M[V86] = V90
0x1ab: V91 = 0x20
0x1ad: V92 = ADD 0x20 V86
0x1b1: V93 = 0x40
0x1b3: V94 = M[0x40]
0x1b6: V95 = SUB V92 V94
0x1b8: RETURN V94 V95
---
Entry stack: [V11, 0x177, V573]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x177]

================================

Block 0x1b9
[0x1b9:0x1c0]
---
Predecessors: [0x57]
Successors: [0x1c1, 0x1c5]
---
0x1b9 JUMPDEST
0x1ba CALLVALUE
0x1bb DUP1
0x1bc ISZERO
0x1bd PUSH2 0x1c5
0x1c0 JUMPI
---
0x1b9: JUMPDEST 
0x1ba: V96 = CALLVALUE
0x1bc: V97 = ISZERO V96
0x1bd: V98 = 0x1c5
0x1c0: JUMPI 0x1c5 V97
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V96]
Exit stack: [V11, V96]

================================

Block 0x1c1
[0x1c1:0x1c4]
---
Predecessors: [0x1b9]
Successors: []
---
0x1c1 PUSH1 0x0
0x1c3 DUP1
0x1c4 REVERT
---
0x1c1: V99 = 0x0
0x1c4: REVERT 0x0 0x0
---
Entry stack: [V11, V96]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V96]

================================

Block 0x1c5
[0x1c5:0x1cd]
---
Predecessors: [0x1b9]
Successors: [0x98a]
---
0x1c5 JUMPDEST
0x1c6 POP
0x1c7 PUSH2 0x1ce
0x1ca PUSH2 0x98a
0x1cd JUMP
---
0x1c5: JUMPDEST 
0x1c7: V100 = 0x1ce
0x1ca: V101 = 0x98a
0x1cd: JUMP 0x98a
---
Entry stack: [V11, V96]
Stack pops: 1
Stack additions: [0x1ce]
Exit stack: [V11, 0x1ce]

================================

Block 0x1ce
[0x1ce:0x20f]
---
Predecessors: [0x98a]
Successors: []
---
0x1ce JUMPDEST
0x1cf PUSH1 0x40
0x1d1 MLOAD
0x1d2 DUP1
0x1d3 DUP3
0x1d4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e9 AND
0x1ea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ff AND
0x200 DUP2
0x201 MSTORE
0x202 PUSH1 0x20
0x204 ADD
0x205 SWAP2
0x206 POP
0x207 POP
0x208 PUSH1 0x40
0x20a MLOAD
0x20b DUP1
0x20c SWAP2
0x20d SUB
0x20e SWAP1
0x20f RETURN
---
0x1ce: JUMPDEST 
0x1cf: V102 = 0x40
0x1d1: V103 = M[0x40]
0x1d4: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e9: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V581
0x1ea: V106 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ff: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V105
0x201: M[V103] = V107
0x202: V108 = 0x20
0x204: V109 = ADD 0x20 V103
0x208: V110 = 0x40
0x20a: V111 = M[0x40]
0x20d: V112 = SUB V109 V111
0x20f: RETURN V111 V112
---
Entry stack: [V11, 0x1ce, V581]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1ce]

================================

Block 0x210
[0x210:0x22d]
---
Predecessors: [0x62]
Successors: [0x9b0]
---
0x210 JUMPDEST
0x211 PUSH2 0x22e
0x214 PUSH1 0x4
0x216 DUP1
0x217 CALLDATASIZE
0x218 SUB
0x219 DUP2
0x21a ADD
0x21b SWAP1
0x21c DUP1
0x21d DUP1
0x21e CALLDATALOAD
0x21f SWAP1
0x220 PUSH1 0x20
0x222 ADD
0x223 SWAP1
0x224 SWAP3
0x225 SWAP2
0x226 SWAP1
0x227 POP
0x228 POP
0x229 POP
0x22a PUSH2 0x9b0
0x22d JUMP
---
0x210: JUMPDEST 
0x211: V113 = 0x22e
0x214: V114 = 0x4
0x217: V115 = CALLDATASIZE
0x218: V116 = SUB V115 0x4
0x21a: V117 = ADD 0x4 V116
0x21e: V118 = CALLDATALOAD 0x4
0x220: V119 = 0x20
0x222: V120 = ADD 0x20 0x4
0x22a: V121 = 0x9b0
0x22d: JUMP 0x9b0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x22e, V118]
Exit stack: [V11, 0x22e, V118]

================================

Block 0x22e
[0x22e:0x22f]
---
Predecessors: [0xc37]
Successors: []
---
0x22e JUMPDEST
0x22f STOP
---
0x22e: JUMPDEST 
0x22f: STOP 
---
Entry stack: [V11, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S0]

================================

Block 0x230
[0x230:0x237]
---
Predecessors: [0x6d]
Successors: [0xc3f]
---
0x230 JUMPDEST
0x231 PUSH2 0x238
0x234 PUSH2 0xc3f
0x237 JUMP
---
0x230: JUMPDEST 
0x231: V122 = 0x238
0x234: V123 = 0xc3f
0x237: JUMP 0xc3f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x238]
Exit stack: [V11, 0x238]

================================

Block 0x238
[0x238:0x239]
---
Predecessors: [0xefd]
Successors: []
---
0x238 JUMPDEST
0x239 STOP
---
0x238: JUMPDEST 
0x239: STOP 
---
Entry stack: [V11, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S1, S0]

================================

Block 0x23a
[0x23a:0x241]
---
Predecessors: [0x78]
Successors: [0x242, 0x246]
---
0x23a JUMPDEST
0x23b CALLVALUE
0x23c DUP1
0x23d ISZERO
0x23e PUSH2 0x246
0x241 JUMPI
---
0x23a: JUMPDEST 
0x23b: V124 = CALLVALUE
0x23d: V125 = ISZERO V124
0x23e: V126 = 0x246
0x241: JUMPI 0x246 V125
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V124]
Exit stack: [V11, V124]

================================

Block 0x242
[0x242:0x245]
---
Predecessors: [0x23a]
Successors: []
---
0x242 PUSH1 0x0
0x244 DUP1
0x245 REVERT
---
0x242: V127 = 0x0
0x245: REVERT 0x0 0x0
---
Entry stack: [V11, V124]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V124]

================================

Block 0x246
[0x246:0x264]
---
Predecessors: [0x23a]
Successors: [0xf12]
---
0x246 JUMPDEST
0x247 POP
0x248 PUSH2 0x265
0x24b PUSH1 0x4
0x24d DUP1
0x24e CALLDATASIZE
0x24f SUB
0x250 DUP2
0x251 ADD
0x252 SWAP1
0x253 DUP1
0x254 DUP1
0x255 CALLDATALOAD
0x256 SWAP1
0x257 PUSH1 0x20
0x259 ADD
0x25a SWAP1
0x25b SWAP3
0x25c SWAP2
0x25d SWAP1
0x25e POP
0x25f POP
0x260 POP
0x261 PUSH2 0xf12
0x264 JUMP
---
0x246: JUMPDEST 
0x248: V128 = 0x265
0x24b: V129 = 0x4
0x24e: V130 = CALLDATASIZE
0x24f: V131 = SUB V130 0x4
0x251: V132 = ADD 0x4 V131
0x255: V133 = CALLDATALOAD 0x4
0x257: V134 = 0x20
0x259: V135 = ADD 0x20 0x4
0x261: V136 = 0xf12
0x264: JUMP 0xf12
---
Entry stack: [V11, V124]
Stack pops: 1
Stack additions: [0x265, V133]
Exit stack: [V11, 0x265, V133]

================================

Block 0x265
[0x265:0x266]
---
Predecessors: [0x12b8]
Successors: []
---
0x265 JUMPDEST
0x266 STOP
---
0x265: JUMPDEST 
0x266: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x267
[0x267:0x26e]
---
Predecessors: [0x83]
Successors: [0x26f, 0x273]
---
0x267 JUMPDEST
0x268 CALLVALUE
0x269 DUP1
0x26a ISZERO
0x26b PUSH2 0x273
0x26e JUMPI
---
0x267: JUMPDEST 
0x268: V137 = CALLVALUE
0x26a: V138 = ISZERO V137
0x26b: V139 = 0x273
0x26e: JUMPI 0x273 V138
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V137]
Exit stack: [V11, V137]

================================

Block 0x26f
[0x26f:0x272]
---
Predecessors: [0x267]
Successors: []
---
0x26f PUSH1 0x0
0x271 DUP1
0x272 REVERT
---
0x26f: V140 = 0x0
0x272: REVERT 0x0 0x0
---
Entry stack: [V11, V137]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V137]

================================

Block 0x273
[0x273:0x27b]
---
Predecessors: [0x267]
Successors: [0x12bd]
---
0x273 JUMPDEST
0x274 POP
0x275 PUSH2 0x27c
0x278 PUSH2 0x12bd
0x27b JUMP
---
0x273: JUMPDEST 
0x275: V141 = 0x27c
0x278: V142 = 0x12bd
0x27b: JUMP 0x12bd
---
Entry stack: [V11, V137]
Stack pops: 1
Stack additions: [0x27c]
Exit stack: [V11, 0x27c]

================================

Block 0x27c
[0x27c:0x2bd]
---
Predecessors: [0x12bd]
Successors: []
---
0x27c JUMPDEST
0x27d PUSH1 0x40
0x27f MLOAD
0x280 DUP1
0x281 DUP3
0x282 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x297 AND
0x298 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ad AND
0x2ae DUP2
0x2af MSTORE
0x2b0 PUSH1 0x20
0x2b2 ADD
0x2b3 SWAP2
0x2b4 POP
0x2b5 POP
0x2b6 PUSH1 0x40
0x2b8 MLOAD
0x2b9 DUP1
0x2ba SWAP2
0x2bb SUB
0x2bc SWAP1
0x2bd RETURN
---
0x27c: JUMPDEST 
0x27d: V143 = 0x40
0x27f: V144 = M[0x40]
0x282: V145 = 0xffffffffffffffffffffffffffffffffffffffff
0x297: V146 = AND 0xffffffffffffffffffffffffffffffffffffffff V1152
0x298: V147 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ad: V148 = AND 0xffffffffffffffffffffffffffffffffffffffff V146
0x2af: M[V144] = V148
0x2b0: V149 = 0x20
0x2b2: V150 = ADD 0x20 V144
0x2b6: V151 = 0x40
0x2b8: V152 = M[0x40]
0x2bb: V153 = SUB V150 V152
0x2bd: RETURN V152 V153
---
Entry stack: [V11, 0x27c, V1152]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x27c]

================================

Block 0x2be
[0x2be:0x2d2]
---
Predecessors: [0xeb]
Successors: [0x2d3, 0x2d7]
---
0x2be JUMPDEST
0x2bf PUSH1 0x0
0x2c1 DUP1
0x2c2 PUSH7 0x11c37937e08000
0x2ca CALLVALUE
0x2cb LT
0x2cc ISZERO
0x2cd ISZERO
0x2ce ISZERO
0x2cf PUSH2 0x2d7
0x2d2 JUMPI
---
0x2be: JUMPDEST 
0x2bf: V154 = 0x0
0x2c2: V155 = 0x11c37937e08000
0x2ca: V156 = CALLVALUE
0x2cb: V157 = LT V156 0x11c37937e08000
0x2cc: V158 = ISZERO V157
0x2cd: V159 = ISZERO V158
0x2ce: V160 = ISZERO V159
0x2cf: V161 = 0x2d7
0x2d2: JUMPI 0x2d7 V160
---
Entry stack: [V11, 0x109, V58]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0x109, V58, 0x0, 0x0]

================================

Block 0x2d3
[0x2d3:0x2d6]
---
Predecessors: [0x2be]
Successors: []
---
0x2d3 PUSH1 0x0
0x2d5 DUP1
0x2d6 REVERT
---
0x2d3: V162 = 0x0
0x2d6: REVERT 0x0 0x0
---
Entry stack: [V11, 0x109, V58, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x109, V58, 0x0, 0x0]

================================

Block 0x2d7
[0x2d7:0x32a]
---
Predecessors: [0x2be]
Successors: [0x32b, 0x32f]
---
0x2d7 JUMPDEST
0x2d8 PUSH1 0x0
0x2da DUP1
0x2db SWAP1
0x2dc SLOAD
0x2dd SWAP1
0x2de PUSH2 0x100
0x2e1 EXP
0x2e2 SWAP1
0x2e3 DIV
0x2e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f9 AND
0x2fa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x30f AND
0x310 CALLVALUE
0x311 PUSH1 0x40
0x313 MLOAD
0x314 PUSH1 0x0
0x316 PUSH1 0x40
0x318 MLOAD
0x319 DUP1
0x31a DUP4
0x31b SUB
0x31c DUP2
0x31d DUP6
0x31e DUP8
0x31f GAS
0x320 CALL
0x321 SWAP3
0x322 POP
0x323 POP
0x324 POP
0x325 ISZERO
0x326 ISZERO
0x327 PUSH2 0x32f
0x32a JUMPI
---
0x2d7: JUMPDEST 
0x2d8: V163 = 0x0
0x2dc: V164 = S[0x0]
0x2de: V165 = 0x100
0x2e1: V166 = EXP 0x100 0x0
0x2e3: V167 = DIV V164 0x1
0x2e4: V168 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f9: V169 = AND 0xffffffffffffffffffffffffffffffffffffffff V167
0x2fa: V170 = 0xffffffffffffffffffffffffffffffffffffffff
0x30f: V171 = AND 0xffffffffffffffffffffffffffffffffffffffff V169
0x310: V172 = CALLVALUE
0x311: V173 = 0x40
0x313: V174 = M[0x40]
0x314: V175 = 0x0
0x316: V176 = 0x40
0x318: V177 = M[0x40]
0x31b: V178 = SUB V174 V177
0x31f: V179 = GAS
0x320: V180 = CALL V179 V171 V172 V177 V178 V177 0x0
0x325: V181 = ISZERO V180
0x326: V182 = ISZERO V181
0x327: V183 = 0x32f
0x32a: JUMPI 0x32f V182
---
Entry stack: [V11, 0x109, V58, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x109, V58, 0x0, 0x0]

================================

Block 0x32b
[0x32b:0x32e]
---
Predecessors: [0x2d7]
Successors: []
---
0x32b PUSH1 0x0
0x32d DUP1
0x32e REVERT
---
0x32b: V184 = 0x0
0x32e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x109, V58, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x109, V58, 0x0, 0x0]

================================

Block 0x32f
[0x32f:0x3b0]
---
Predecessors: [0x2d7]
Successors: [0x3b1, 0x3b5]
---
0x32f JUMPDEST
0x330 PUSH1 0x3
0x332 PUSH1 0x0
0x334 SWAP1
0x335 SLOAD
0x336 SWAP1
0x337 PUSH2 0x100
0x33a EXP
0x33b SWAP1
0x33c DIV
0x33d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x352 AND
0x353 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x368 AND
0x369 PUSH4 0xfcfff16f
0x36e PUSH1 0x40
0x370 MLOAD
0x371 DUP2
0x372 PUSH4 0xffffffff
0x377 AND
0x378 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x396 MUL
0x397 DUP2
0x398 MSTORE
0x399 PUSH1 0x4
0x39b ADD
0x39c PUSH1 0x20
0x39e PUSH1 0x40
0x3a0 MLOAD
0x3a1 DUP1
0x3a2 DUP4
0x3a3 SUB
0x3a4 DUP2
0x3a5 PUSH1 0x0
0x3a7 DUP8
0x3a8 DUP1
0x3a9 EXTCODESIZE
0x3aa ISZERO
0x3ab DUP1
0x3ac ISZERO
0x3ad PUSH2 0x3b5
0x3b0 JUMPI
---
0x32f: JUMPDEST 
0x330: V185 = 0x3
0x332: V186 = 0x0
0x335: V187 = S[0x3]
0x337: V188 = 0x100
0x33a: V189 = EXP 0x100 0x0
0x33c: V190 = DIV V187 0x1
0x33d: V191 = 0xffffffffffffffffffffffffffffffffffffffff
0x352: V192 = AND 0xffffffffffffffffffffffffffffffffffffffff V190
0x353: V193 = 0xffffffffffffffffffffffffffffffffffffffff
0x368: V194 = AND 0xffffffffffffffffffffffffffffffffffffffff V192
0x369: V195 = 0xfcfff16f
0x36e: V196 = 0x40
0x370: V197 = M[0x40]
0x372: V198 = 0xffffffff
0x377: V199 = AND 0xffffffff 0xfcfff16f
0x378: V200 = 0x100000000000000000000000000000000000000000000000000000000
0x396: V201 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xfcfff16f
0x398: M[V197] = 0xfcfff16f00000000000000000000000000000000000000000000000000000000
0x399: V202 = 0x4
0x39b: V203 = ADD 0x4 V197
0x39c: V204 = 0x20
0x39e: V205 = 0x40
0x3a0: V206 = M[0x40]
0x3a3: V207 = SUB V203 V206
0x3a5: V208 = 0x0
0x3a9: V209 = EXTCODESIZE V194
0x3aa: V210 = ISZERO V209
0x3ac: V211 = ISZERO V210
0x3ad: V212 = 0x3b5
0x3b0: JUMPI 0x3b5 V211
---
Entry stack: [V11, 0x109, V58, 0x0, 0x0]
Stack pops: 0
Stack additions: [V194, 0xfcfff16f, V203, 0x20, V206, V207, V206, 0x0, V194, V210]
Exit stack: [V11, 0x109, V58, 0x0, 0x0, V194, 0xfcfff16f, V203, 0x20, V206, V207, V206, 0x0, V194, V210]

================================

Block 0x3b1
[0x3b1:0x3b4]
---
Predecessors: [0x32f]
Successors: []
---
0x3b1 PUSH1 0x0
0x3b3 DUP1
0x3b4 REVERT
---
0x3b1: V213 = 0x0
0x3b4: REVERT 0x0 0x0
---
Entry stack: [V11, 0x109, V58, 0x0, 0x0, V194, 0xfcfff16f, V203, 0x20, V206, V207, V206, 0x0, V194, V210]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x109, V58, 0x0, 0x0, V194, 0xfcfff16f, V203, 0x20, V206, V207, V206, 0x0, V194, V210]

================================

Block 0x3b5
[0x3b5:0x3bf]
---
Predecessors: [0x32f]
Successors: [0x3c0, 0x3c9]
---
0x3b5 JUMPDEST
0x3b6 POP
0x3b7 GAS
0x3b8 CALL
0x3b9 ISZERO
0x3ba DUP1
0x3bb ISZERO
0x3bc PUSH2 0x3c9
0x3bf JUMPI
---
0x3b5: JUMPDEST 
0x3b7: V214 = GAS
0x3b8: V215 = CALL V214 V194 0x0 V206 V207 V206 0x20
0x3b9: V216 = ISZERO V215
0x3bb: V217 = ISZERO V216
0x3bc: V218 = 0x3c9
0x3bf: JUMPI 0x3c9 V217
---
Entry stack: [V11, 0x109, V58, 0x0, 0x0, V194, 0xfcfff16f, V203, 0x20, V206, V207, V206, 0x0, V194, V210]
Stack pops: 7
Stack additions: [V216]
Exit stack: [V11, 0x109, V58, 0x0, 0x0, V194, 0xfcfff16f, V203, V216]

================================

Block 0x3c0
[0x3c0:0x3c8]
---
Predecessors: [0x3b5]
Successors: []
---
0x3c0 RETURNDATASIZE
0x3c1 PUSH1 0x0
0x3c3 DUP1
0x3c4 RETURNDATACOPY
0x3c5 RETURNDATASIZE
0x3c6 PUSH1 0x0
0x3c8 REVERT
---
0x3c0: V219 = RETURNDATASIZE
0x3c1: V220 = 0x0
0x3c4: RETURNDATACOPY 0x0 0x0 V219
0x3c5: V221 = RETURNDATASIZE
0x3c6: V222 = 0x0
0x3c8: REVERT 0x0 V221
---
Entry stack: [V11, 0x109, V58, 0x0, 0x0, V194, 0xfcfff16f, V203, V216]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x109, V58, 0x0, 0x0, V194, 0xfcfff16f, V203, V216]

================================

Block 0x3c9
[0x3c9:0x3da]
---
Predecessors: [0x3b5]
Successors: [0x3db, 0x3df]
---
0x3c9 JUMPDEST
0x3ca POP
0x3cb POP
0x3cc POP
0x3cd POP
0x3ce PUSH1 0x40
0x3d0 MLOAD
0x3d1 RETURNDATASIZE
0x3d2 PUSH1 0x20
0x3d4 DUP2
0x3d5 LT
0x3d6 ISZERO
0x3d7 PUSH2 0x3df
0x3da JUMPI
---
0x3c9: JUMPDEST 
0x3ce: V223 = 0x40
0x3d0: V224 = M[0x40]
0x3d1: V225 = RETURNDATASIZE
0x3d2: V226 = 0x20
0x3d5: V227 = LT V225 0x20
0x3d6: V228 = ISZERO V227
0x3d7: V229 = 0x3df
0x3da: JUMPI 0x3df V228
---
Entry stack: [V11, 0x109, V58, 0x0, 0x0, V194, 0xfcfff16f, V203, V216]
Stack pops: 4
Stack additions: [V224, V225]
Exit stack: [V11, 0x109, V58, 0x0, 0x0, V224, V225]

================================

Block 0x3db
[0x3db:0x3de]
---
Predecessors: [0x3c9]
Successors: []
---
0x3db PUSH1 0x0
0x3dd DUP1
0x3de REVERT
---
0x3db: V230 = 0x0
0x3de: REVERT 0x0 0x0
---
Entry stack: [V11, 0x109, V58, 0x0, 0x0, V224, V225]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x109, V58, 0x0, 0x0, V224, V225]

================================

Block 0x3df
[0x3df:0x477]
---
Predecessors: [0x3c9]
Successors: [0x478, 0x47c]
---
0x3df JUMPDEST
0x3e0 DUP2
0x3e1 ADD
0x3e2 SWAP1
0x3e3 DUP1
0x3e4 DUP1
0x3e5 MLOAD
0x3e6 SWAP1
0x3e7 PUSH1 0x20
0x3e9 ADD
0x3ea SWAP1
0x3eb SWAP3
0x3ec SWAP2
0x3ed SWAP1
0x3ee POP
0x3ef POP
0x3f0 POP
0x3f1 SWAP2
0x3f2 POP
0x3f3 PUSH2 0x4bc
0x3f6 CALLVALUE
0x3f7 PUSH1 0x3
0x3f9 PUSH1 0x0
0x3fb SWAP1
0x3fc SLOAD
0x3fd SWAP1
0x3fe PUSH2 0x100
0x401 EXP
0x402 SWAP1
0x403 DIV
0x404 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x419 AND
0x41a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x42f AND
0x430 PUSH4 0x7ec9c3b8
0x435 PUSH1 0x40
0x437 MLOAD
0x438 DUP2
0x439 PUSH4 0xffffffff
0x43e AND
0x43f PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x45d MUL
0x45e DUP2
0x45f MSTORE
0x460 PUSH1 0x4
0x462 ADD
0x463 PUSH1 0x20
0x465 PUSH1 0x40
0x467 MLOAD
0x468 DUP1
0x469 DUP4
0x46a SUB
0x46b DUP2
0x46c PUSH1 0x0
0x46e DUP8
0x46f DUP1
0x470 EXTCODESIZE
0x471 ISZERO
0x472 DUP1
0x473 ISZERO
0x474 PUSH2 0x47c
0x477 JUMPI
---
0x3df: JUMPDEST 
0x3e1: V231 = ADD V224 V225
0x3e5: V232 = M[V224]
0x3e7: V233 = 0x20
0x3e9: V234 = ADD 0x20 V224
0x3f3: V235 = 0x4bc
0x3f6: V236 = CALLVALUE
0x3f7: V237 = 0x3
0x3f9: V238 = 0x0
0x3fc: V239 = S[0x3]
0x3fe: V240 = 0x100
0x401: V241 = EXP 0x100 0x0
0x403: V242 = DIV V239 0x1
0x404: V243 = 0xffffffffffffffffffffffffffffffffffffffff
0x419: V244 = AND 0xffffffffffffffffffffffffffffffffffffffff V242
0x41a: V245 = 0xffffffffffffffffffffffffffffffffffffffff
0x42f: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff V244
0x430: V247 = 0x7ec9c3b8
0x435: V248 = 0x40
0x437: V249 = M[0x40]
0x439: V250 = 0xffffffff
0x43e: V251 = AND 0xffffffff 0x7ec9c3b8
0x43f: V252 = 0x100000000000000000000000000000000000000000000000000000000
0x45d: V253 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x7ec9c3b8
0x45f: M[V249] = 0x7ec9c3b800000000000000000000000000000000000000000000000000000000
0x460: V254 = 0x4
0x462: V255 = ADD 0x4 V249
0x463: V256 = 0x20
0x465: V257 = 0x40
0x467: V258 = M[0x40]
0x46a: V259 = SUB V255 V258
0x46c: V260 = 0x0
0x470: V261 = EXTCODESIZE V246
0x471: V262 = ISZERO V261
0x473: V263 = ISZERO V262
0x474: V264 = 0x47c
0x477: JUMPI 0x47c V263
---
Entry stack: [V11, 0x109, V58, 0x0, 0x0, V224, V225]
Stack pops: 4
Stack additions: [V232, S2, 0x4bc, V236, V246, 0x7ec9c3b8, V255, 0x20, V258, V259, V258, 0x0, V246, V262]
Exit stack: [V11, 0x109, V58, V232, 0x0, 0x4bc, V236, V246, 0x7ec9c3b8, V255, 0x20, V258, V259, V258, 0x0, V246, V262]

================================

Block 0x478
[0x478:0x47b]
---
Predecessors: [0x3df]
Successors: []
---
0x478 PUSH1 0x0
0x47a DUP1
0x47b REVERT
---
0x478: V265 = 0x0
0x47b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x109, V58, V232, 0x0, 0x4bc, V236, V246, 0x7ec9c3b8, V255, 0x20, V258, V259, V258, 0x0, V246, V262]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x109, V58, V232, 0x0, 0x4bc, V236, V246, 0x7ec9c3b8, V255, 0x20, V258, V259, V258, 0x0, V246, V262]

================================

Block 0x47c
[0x47c:0x486]
---
Predecessors: [0x3df]
Successors: [0x487, 0x490]
---
0x47c JUMPDEST
0x47d POP
0x47e GAS
0x47f CALL
0x480 ISZERO
0x481 DUP1
0x482 ISZERO
0x483 PUSH2 0x490
0x486 JUMPI
---
0x47c: JUMPDEST 
0x47e: V266 = GAS
0x47f: V267 = CALL V266 V246 0x0 V258 V259 V258 0x20
0x480: V268 = ISZERO V267
0x482: V269 = ISZERO V268
0x483: V270 = 0x490
0x486: JUMPI 0x490 V269
---
Entry stack: [V11, 0x109, V58, V232, 0x0, 0x4bc, V236, V246, 0x7ec9c3b8, V255, 0x20, V258, V259, V258, 0x0, V246, V262]
Stack pops: 7
Stack additions: [V268]
Exit stack: [V11, 0x109, V58, V232, 0x0, 0x4bc, V236, V246, 0x7ec9c3b8, V255, V268]

================================

Block 0x487
[0x487:0x48f]
---
Predecessors: [0x47c]
Successors: []
---
0x487 RETURNDATASIZE
0x488 PUSH1 0x0
0x48a DUP1
0x48b RETURNDATACOPY
0x48c RETURNDATASIZE
0x48d PUSH1 0x0
0x48f REVERT
---
0x487: V271 = RETURNDATASIZE
0x488: V272 = 0x0
0x48b: RETURNDATACOPY 0x0 0x0 V271
0x48c: V273 = RETURNDATASIZE
0x48d: V274 = 0x0
0x48f: REVERT 0x0 V273
---
Entry stack: [V11, 0x109, V58, V232, 0x0, 0x4bc, V236, V246, 0x7ec9c3b8, V255, V268]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x109, V58, V232, 0x0, 0x4bc, V236, V246, 0x7ec9c3b8, V255, V268]

================================

Block 0x490
[0x490:0x4a1]
---
Predecessors: [0x47c]
Successors: [0x4a2, 0x4a6]
---
0x490 JUMPDEST
0x491 POP
0x492 POP
0x493 POP
0x494 POP
0x495 PUSH1 0x40
0x497 MLOAD
0x498 RETURNDATASIZE
0x499 PUSH1 0x20
0x49b DUP2
0x49c LT
0x49d ISZERO
0x49e PUSH2 0x4a6
0x4a1 JUMPI
---
0x490: JUMPDEST 
0x495: V275 = 0x40
0x497: V276 = M[0x40]
0x498: V277 = RETURNDATASIZE
0x499: V278 = 0x20
0x49c: V279 = LT V277 0x20
0x49d: V280 = ISZERO V279
0x49e: V281 = 0x4a6
0x4a1: JUMPI 0x4a6 V280
---
Entry stack: [V11, 0x109, V58, V232, 0x0, 0x4bc, V236, V246, 0x7ec9c3b8, V255, V268]
Stack pops: 4
Stack additions: [V276, V277]
Exit stack: [V11, 0x109, V58, V232, 0x0, 0x4bc, V236, V276, V277]

================================

Block 0x4a2
[0x4a2:0x4a5]
---
Predecessors: [0x490]
Successors: []
---
0x4a2 PUSH1 0x0
0x4a4 DUP1
0x4a5 REVERT
---
0x4a2: V282 = 0x0
0x4a5: REVERT 0x0 0x0
---
Entry stack: [V11, 0x109, V58, V232, 0x0, 0x4bc, V236, V276, V277]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x109, V58, V232, 0x0, 0x4bc, V236, V276, V277]

================================

Block 0x4a6
[0x4a6:0x4bb]
---
Predecessors: [0x490]
Successors: [0x12e3]
---
0x4a6 JUMPDEST
0x4a7 DUP2
0x4a8 ADD
0x4a9 SWAP1
0x4aa DUP1
0x4ab DUP1
0x4ac MLOAD
0x4ad SWAP1
0x4ae PUSH1 0x20
0x4b0 ADD
0x4b1 SWAP1
0x4b2 SWAP3
0x4b3 SWAP2
0x4b4 SWAP1
0x4b5 POP
0x4b6 POP
0x4b7 POP
0x4b8 PUSH2 0x12e3
0x4bb JUMP
---
0x4a6: JUMPDEST 
0x4a8: V283 = ADD V276 V277
0x4ac: V284 = M[V276]
0x4ae: V285 = 0x20
0x4b0: V286 = ADD 0x20 V276
0x4b8: V287 = 0x12e3
0x4bb: JUMP 0x12e3
---
Entry stack: [V11, 0x109, V58, V232, 0x0, 0x4bc, V236, V276, V277]
Stack pops: 2
Stack additions: [V284]
Exit stack: [V11, 0x109, V58, V232, 0x0, 0x4bc, V236, V284]

================================

Block 0x4bc
[0x4bc:0x54a]
---
Predecessors: [0x131a]
Successors: [0x54b, 0x54f]
---
0x4bc JUMPDEST
0x4bd SWAP1
0x4be POP
0x4bf PUSH1 0x3
0x4c1 PUSH1 0x0
0x4c3 SWAP1
0x4c4 SLOAD
0x4c5 SWAP1
0x4c6 PUSH2 0x100
0x4c9 EXP
0x4ca SWAP1
0x4cb DIV
0x4cc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4e1 AND
0x4e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4f7 AND
0x4f8 PUSH4 0x49878f3
0x4fd DUP3
0x4fe PUSH1 0x40
0x500 MLOAD
0x501 DUP3
0x502 PUSH4 0xffffffff
0x507 AND
0x508 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x526 MUL
0x527 DUP2
0x528 MSTORE
0x529 PUSH1 0x4
0x52b ADD
0x52c DUP1
0x52d DUP3
0x52e DUP2
0x52f MSTORE
0x530 PUSH1 0x20
0x532 ADD
0x533 SWAP2
0x534 POP
0x535 POP
0x536 PUSH1 0x0
0x538 PUSH1 0x40
0x53a MLOAD
0x53b DUP1
0x53c DUP4
0x53d SUB
0x53e DUP2
0x53f PUSH1 0x0
0x541 DUP8
0x542 DUP1
0x543 EXTCODESIZE
0x544 ISZERO
0x545 DUP1
0x546 ISZERO
0x547 PUSH2 0x54f
0x54a JUMPI
---
0x4bc: JUMPDEST 
0x4bf: V288 = 0x3
0x4c1: V289 = 0x0
0x4c4: V290 = S[0x3]
0x4c6: V291 = 0x100
0x4c9: V292 = EXP 0x100 0x0
0x4cb: V293 = DIV V290 0x1
0x4cc: V294 = 0xffffffffffffffffffffffffffffffffffffffff
0x4e1: V295 = AND 0xffffffffffffffffffffffffffffffffffffffff V293
0x4e2: V296 = 0xffffffffffffffffffffffffffffffffffffffff
0x4f7: V297 = AND 0xffffffffffffffffffffffffffffffffffffffff V295
0x4f8: V298 = 0x49878f3
0x4fe: V299 = 0x40
0x500: V300 = M[0x40]
0x502: V301 = 0xffffffff
0x507: V302 = AND 0xffffffff 0x49878f3
0x508: V303 = 0x100000000000000000000000000000000000000000000000000000000
0x526: V304 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x49878f3
0x528: M[V300] = 0x49878f300000000000000000000000000000000000000000000000000000000
0x529: V305 = 0x4
0x52b: V306 = ADD 0x4 V300
0x52f: M[V306] = V1167
0x530: V307 = 0x20
0x532: V308 = ADD 0x20 V306
0x536: V309 = 0x0
0x538: V310 = 0x40
0x53a: V311 = M[0x40]
0x53d: V312 = SUB V308 V311
0x53f: V313 = 0x0
0x543: V314 = EXTCODESIZE V297
0x544: V315 = ISZERO V314
0x546: V316 = ISZERO V315
0x547: V317 = 0x54f
0x54a: JUMPI 0x54f V316
---
Entry stack: [V11, S4, S3, S2, 0x0, V1167]
Stack pops: 2
Stack additions: [S0, V297, 0x49878f3, V308, 0x0, V311, V312, V311, 0x0, V297, V315]
Exit stack: [V11, S4, S3, S2, V1167, V297, 0x49878f3, V308, 0x0, V311, V312, V311, 0x0, V297, V315]

================================

Block 0x54b
[0x54b:0x54e]
---
Predecessors: [0x4bc]
Successors: []
---
0x54b PUSH1 0x0
0x54d DUP1
0x54e REVERT
---
0x54b: V318 = 0x0
0x54e: REVERT 0x0 0x0
---
Entry stack: [V11, S13, S12, S11, S10, V297, 0x49878f3, V308, 0x0, V311, V312, V311, 0x0, V297, V315]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S13, S12, S11, S10, V297, 0x49878f3, V308, 0x0, V311, V312, V311, 0x0, V297, V315]

================================

Block 0x54f
[0x54f:0x559]
---
Predecessors: [0x4bc]
Successors: [0x55a, 0x563]
---
0x54f JUMPDEST
0x550 POP
0x551 GAS
0x552 CALL
0x553 ISZERO
0x554 DUP1
0x555 ISZERO
0x556 PUSH2 0x563
0x559 JUMPI
---
0x54f: JUMPDEST 
0x551: V319 = GAS
0x552: V320 = CALL V319 V297 0x0 V311 V312 V311 0x0
0x553: V321 = ISZERO V320
0x555: V322 = ISZERO V321
0x556: V323 = 0x563
0x559: JUMPI 0x563 V322
---
Entry stack: [V11, S13, S12, S11, S10, V297, 0x49878f3, V308, 0x0, V311, V312, V311, 0x0, V297, V315]
Stack pops: 7
Stack additions: [V321]
Exit stack: [V11, S13, S12, S11, S10, V297, 0x49878f3, V308, V321]

================================

Block 0x55a
[0x55a:0x562]
---
Predecessors: [0x54f]
Successors: []
---
0x55a RETURNDATASIZE
0x55b PUSH1 0x0
0x55d DUP1
0x55e RETURNDATACOPY
0x55f RETURNDATASIZE
0x560 PUSH1 0x0
0x562 REVERT
---
0x55a: V324 = RETURNDATASIZE
0x55b: V325 = 0x0
0x55e: RETURNDATACOPY 0x0 0x0 V324
0x55f: V326 = RETURNDATASIZE
0x560: V327 = 0x0
0x562: REVERT 0x0 V326
---
Entry stack: [V11, S7, S6, S5, S4, S3, 0x49878f3, S1, V321]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S7, S6, S5, S4, S3, 0x49878f3, S1, V321]

================================

Block 0x563
[0x563:0x603]
---
Predecessors: [0x54f]
Successors: [0x604, 0x608]
---
0x563 JUMPDEST
0x564 POP
0x565 POP
0x566 POP
0x567 POP
0x568 PUSH1 0x3
0x56a PUSH1 0x0
0x56c SWAP1
0x56d SLOAD
0x56e SWAP1
0x56f PUSH2 0x100
0x572 EXP
0x573 SWAP1
0x574 DIV
0x575 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x58a AND
0x58b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5a0 AND
0x5a1 PUSH4 0xb3b77a51
0x5a6 DUP4
0x5a7 DUP4
0x5a8 PUSH1 0x40
0x5aa MLOAD
0x5ab DUP4
0x5ac PUSH4 0xffffffff
0x5b1 AND
0x5b2 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x5d0 MUL
0x5d1 DUP2
0x5d2 MSTORE
0x5d3 PUSH1 0x4
0x5d5 ADD
0x5d6 DUP1
0x5d7 DUP4
0x5d8 PUSH1 0x0
0x5da NOT
0x5db AND
0x5dc PUSH1 0x0
0x5de NOT
0x5df AND
0x5e0 DUP2
0x5e1 MSTORE
0x5e2 PUSH1 0x20
0x5e4 ADD
0x5e5 DUP3
0x5e6 DUP2
0x5e7 MSTORE
0x5e8 PUSH1 0x20
0x5ea ADD
0x5eb SWAP3
0x5ec POP
0x5ed POP
0x5ee POP
0x5ef PUSH1 0x0
0x5f1 PUSH1 0x40
0x5f3 MLOAD
0x5f4 DUP1
0x5f5 DUP4
0x5f6 SUB
0x5f7 DUP2
0x5f8 PUSH1 0x0
0x5fa DUP8
0x5fb DUP1
0x5fc EXTCODESIZE
0x5fd ISZERO
0x5fe DUP1
0x5ff ISZERO
0x600 PUSH2 0x608
0x603 JUMPI
---
0x563: JUMPDEST 
0x568: V328 = 0x3
0x56a: V329 = 0x0
0x56d: V330 = S[0x3]
0x56f: V331 = 0x100
0x572: V332 = EXP 0x100 0x0
0x574: V333 = DIV V330 0x1
0x575: V334 = 0xffffffffffffffffffffffffffffffffffffffff
0x58a: V335 = AND 0xffffffffffffffffffffffffffffffffffffffff V333
0x58b: V336 = 0xffffffffffffffffffffffffffffffffffffffff
0x5a0: V337 = AND 0xffffffffffffffffffffffffffffffffffffffff V335
0x5a1: V338 = 0xb3b77a51
0x5a8: V339 = 0x40
0x5aa: V340 = M[0x40]
0x5ac: V341 = 0xffffffff
0x5b1: V342 = AND 0xffffffff 0xb3b77a51
0x5b2: V343 = 0x100000000000000000000000000000000000000000000000000000000
0x5d0: V344 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xb3b77a51
0x5d2: M[V340] = 0xb3b77a5100000000000000000000000000000000000000000000000000000000
0x5d3: V345 = 0x4
0x5d5: V346 = ADD 0x4 V340
0x5d8: V347 = 0x0
0x5da: V348 = NOT 0x0
0x5db: V349 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff S5
0x5dc: V350 = 0x0
0x5de: V351 = NOT 0x0
0x5df: V352 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V349
0x5e1: M[V346] = V352
0x5e2: V353 = 0x20
0x5e4: V354 = ADD 0x20 V346
0x5e7: M[V354] = S4
0x5e8: V355 = 0x20
0x5ea: V356 = ADD 0x20 V354
0x5ef: V357 = 0x0
0x5f1: V358 = 0x40
0x5f3: V359 = M[0x40]
0x5f6: V360 = SUB V356 V359
0x5f8: V361 = 0x0
0x5fc: V362 = EXTCODESIZE V337
0x5fd: V363 = ISZERO V362
0x5ff: V364 = ISZERO V363
0x600: V365 = 0x608
0x603: JUMPI 0x608 V364
---
Entry stack: [V11, S7, S6, S5, S4, S3, 0x49878f3, S1, V321]
Stack pops: 6
Stack additions: [S5, S4, V337, 0xb3b77a51, V356, 0x0, V359, V360, V359, 0x0, V337, V363]
Exit stack: [V11, S7, S6, S5, S4, V337, 0xb3b77a51, V356, 0x0, V359, V360, V359, 0x0, V337, V363]

================================

Block 0x604
[0x604:0x607]
---
Predecessors: [0x563]
Successors: []
---
0x604 PUSH1 0x0
0x606 DUP1
0x607 REVERT
---
0x604: V366 = 0x0
0x607: REVERT 0x0 0x0
---
Entry stack: [V11, S13, S12, S11, S10, V337, 0xb3b77a51, V356, 0x0, V359, V360, V359, 0x0, V337, V363]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S13, S12, S11, S10, V337, 0xb3b77a51, V356, 0x0, V359, V360, V359, 0x0, V337, V363]

================================

Block 0x608
[0x608:0x612]
---
Predecessors: [0x563]
Successors: [0x613, 0x61c]
---
0x608 JUMPDEST
0x609 POP
0x60a GAS
0x60b CALL
0x60c ISZERO
0x60d DUP1
0x60e ISZERO
0x60f PUSH2 0x61c
0x612 JUMPI
---
0x608: JUMPDEST 
0x60a: V367 = GAS
0x60b: V368 = CALL V367 V337 0x0 V359 V360 V359 0x0
0x60c: V369 = ISZERO V368
0x60e: V370 = ISZERO V369
0x60f: V371 = 0x61c
0x612: JUMPI 0x61c V370
---
Entry stack: [V11, S13, S12, S11, S10, V337, 0xb3b77a51, V356, 0x0, V359, V360, V359, 0x0, V337, V363]
Stack pops: 7
Stack additions: [V369]
Exit stack: [V11, S13, S12, S11, S10, V337, 0xb3b77a51, V356, V369]

================================

Block 0x613
[0x613:0x61b]
---
Predecessors: [0x608]
Successors: []
---
0x613 RETURNDATASIZE
0x614 PUSH1 0x0
0x616 DUP1
0x617 RETURNDATACOPY
0x618 RETURNDATASIZE
0x619 PUSH1 0x0
0x61b REVERT
---
0x613: V372 = RETURNDATASIZE
0x614: V373 = 0x0
0x617: RETURNDATACOPY 0x0 0x0 V372
0x618: V374 = RETURNDATASIZE
0x619: V375 = 0x0
0x61b: REVERT 0x0 V374
---
Entry stack: [V11, S7, S6, S5, S4, S3, 0xb3b77a51, S1, V369]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S7, S6, S5, S4, S3, 0xb3b77a51, S1, V369]

================================

Block 0x61c
[0x61c:0x6bc]
---
Predecessors: [0x608]
Successors: [0x6bd, 0x6c1]
---
0x61c JUMPDEST
0x61d POP
0x61e POP
0x61f POP
0x620 POP
0x621 PUSH1 0x3
0x623 PUSH1 0x0
0x625 SWAP1
0x626 SLOAD
0x627 SWAP1
0x628 PUSH2 0x100
0x62b EXP
0x62c SWAP1
0x62d DIV
0x62e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x643 AND
0x644 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x659 AND
0x65a PUSH4 0x440f19ba
0x65f DUP4
0x660 DUP6
0x661 PUSH1 0x40
0x663 MLOAD
0x664 DUP4
0x665 PUSH4 0xffffffff
0x66a AND
0x66b PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x689 MUL
0x68a DUP2
0x68b MSTORE
0x68c PUSH1 0x4
0x68e ADD
0x68f DUP1
0x690 DUP4
0x691 PUSH1 0x0
0x693 NOT
0x694 AND
0x695 PUSH1 0x0
0x697 NOT
0x698 AND
0x699 DUP2
0x69a MSTORE
0x69b PUSH1 0x20
0x69d ADD
0x69e DUP3
0x69f DUP2
0x6a0 MSTORE
0x6a1 PUSH1 0x20
0x6a3 ADD
0x6a4 SWAP3
0x6a5 POP
0x6a6 POP
0x6a7 POP
0x6a8 PUSH1 0x0
0x6aa PUSH1 0x40
0x6ac MLOAD
0x6ad DUP1
0x6ae DUP4
0x6af SUB
0x6b0 DUP2
0x6b1 PUSH1 0x0
0x6b3 DUP8
0x6b4 DUP1
0x6b5 EXTCODESIZE
0x6b6 ISZERO
0x6b7 DUP1
0x6b8 ISZERO
0x6b9 PUSH2 0x6c1
0x6bc JUMPI
---
0x61c: JUMPDEST 
0x621: V376 = 0x3
0x623: V377 = 0x0
0x626: V378 = S[0x3]
0x628: V379 = 0x100
0x62b: V380 = EXP 0x100 0x0
0x62d: V381 = DIV V378 0x1
0x62e: V382 = 0xffffffffffffffffffffffffffffffffffffffff
0x643: V383 = AND 0xffffffffffffffffffffffffffffffffffffffff V381
0x644: V384 = 0xffffffffffffffffffffffffffffffffffffffff
0x659: V385 = AND 0xffffffffffffffffffffffffffffffffffffffff V383
0x65a: V386 = 0x440f19ba
0x661: V387 = 0x40
0x663: V388 = M[0x40]
0x665: V389 = 0xffffffff
0x66a: V390 = AND 0xffffffff 0x440f19ba
0x66b: V391 = 0x100000000000000000000000000000000000000000000000000000000
0x689: V392 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x440f19ba
0x68b: M[V388] = 0x440f19ba00000000000000000000000000000000000000000000000000000000
0x68c: V393 = 0x4
0x68e: V394 = ADD 0x4 V388
0x691: V395 = 0x0
0x693: V396 = NOT 0x0
0x694: V397 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff S5
0x695: V398 = 0x0
0x697: V399 = NOT 0x0
0x698: V400 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V397
0x69a: M[V394] = V400
0x69b: V401 = 0x20
0x69d: V402 = ADD 0x20 V394
0x6a0: M[V402] = S6
0x6a1: V403 = 0x20
0x6a3: V404 = ADD 0x20 V402
0x6a8: V405 = 0x0
0x6aa: V406 = 0x40
0x6ac: V407 = M[0x40]
0x6af: V408 = SUB V404 V407
0x6b1: V409 = 0x0
0x6b5: V410 = EXTCODESIZE V385
0x6b6: V411 = ISZERO V410
0x6b8: V412 = ISZERO V411
0x6b9: V413 = 0x6c1
0x6bc: JUMPI 0x6c1 V412
---
Entry stack: [V11, S7, S6, S5, S4, S3, 0xb3b77a51, S1, V369]
Stack pops: 7
Stack additions: [S6, S5, S4, V385, 0x440f19ba, V404, 0x0, V407, V408, V407, 0x0, V385, V411]
Exit stack: [V11, S7, S6, S5, S4, V385, 0x440f19ba, V404, 0x0, V407, V408, V407, 0x0, V385, V411]

================================

Block 0x6bd
[0x6bd:0x6c0]
---
Predecessors: [0x61c]
Successors: []
---
0x6bd PUSH1 0x0
0x6bf DUP1
0x6c0 REVERT
---
0x6bd: V414 = 0x0
0x6c0: REVERT 0x0 0x0
---
Entry stack: [V11, S13, S12, S11, S10, V385, 0x440f19ba, V404, 0x0, V407, V408, V407, 0x0, V385, V411]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S13, S12, S11, S10, V385, 0x440f19ba, V404, 0x0, V407, V408, V407, 0x0, V385, V411]

================================

Block 0x6c1
[0x6c1:0x6cb]
---
Predecessors: [0x61c]
Successors: [0x6cc, 0x6d5]
---
0x6c1 JUMPDEST
0x6c2 POP
0x6c3 GAS
0x6c4 CALL
0x6c5 ISZERO
0x6c6 DUP1
0x6c7 ISZERO
0x6c8 PUSH2 0x6d5
0x6cb JUMPI
---
0x6c1: JUMPDEST 
0x6c3: V415 = GAS
0x6c4: V416 = CALL V415 V385 0x0 V407 V408 V407 0x0
0x6c5: V417 = ISZERO V416
0x6c7: V418 = ISZERO V417
0x6c8: V419 = 0x6d5
0x6cb: JUMPI 0x6d5 V418
---
Entry stack: [V11, S13, S12, S11, S10, V385, 0x440f19ba, V404, 0x0, V407, V408, V407, 0x0, V385, V411]
Stack pops: 7
Stack additions: [V417]
Exit stack: [V11, S13, S12, S11, S10, V385, 0x440f19ba, V404, V417]

================================

Block 0x6cc
[0x6cc:0x6d4]
---
Predecessors: [0x6c1]
Successors: []
---
0x6cc RETURNDATASIZE
0x6cd PUSH1 0x0
0x6cf DUP1
0x6d0 RETURNDATACOPY
0x6d1 RETURNDATASIZE
0x6d2 PUSH1 0x0
0x6d4 REVERT
---
0x6cc: V420 = RETURNDATASIZE
0x6cd: V421 = 0x0
0x6d0: RETURNDATACOPY 0x0 0x0 V420
0x6d1: V422 = RETURNDATASIZE
0x6d2: V423 = 0x0
0x6d4: REVERT 0x0 V422
---
Entry stack: [V11, S7, S6, S5, S4, S3, 0x440f19ba, S1, V417]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S7, S6, S5, S4, S3, 0x440f19ba, S1, V417]

================================

Block 0x6d5
[0x6d5:0x7a1]
---
Predecessors: [0x6c1]
Successors: [0x7a2, 0x7a6]
---
0x6d5 JUMPDEST
0x6d6 POP
0x6d7 POP
0x6d8 POP
0x6d9 POP
0x6da PUSH1 0x3
0x6dc PUSH1 0x0
0x6de SWAP1
0x6df SLOAD
0x6e0 SWAP1
0x6e1 PUSH2 0x100
0x6e4 EXP
0x6e5 SWAP1
0x6e6 DIV
0x6e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6fc AND
0x6fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x712 AND
0x713 PUSH4 0xbaa8529c
0x718 DUP4
0x719 CALLER
0x71a PUSH1 0x40
0x71c MLOAD
0x71d DUP4
0x71e PUSH4 0xffffffff
0x723 AND
0x724 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x742 MUL
0x743 DUP2
0x744 MSTORE
0x745 PUSH1 0x4
0x747 ADD
0x748 DUP1
0x749 DUP4
0x74a PUSH1 0x0
0x74c NOT
0x74d AND
0x74e PUSH1 0x0
0x750 NOT
0x751 AND
0x752 DUP2
0x753 MSTORE
0x754 PUSH1 0x20
0x756 ADD
0x757 DUP3
0x758 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x76d AND
0x76e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x783 AND
0x784 DUP2
0x785 MSTORE
0x786 PUSH1 0x20
0x788 ADD
0x789 SWAP3
0x78a POP
0x78b POP
0x78c POP
0x78d PUSH1 0x0
0x78f PUSH1 0x40
0x791 MLOAD
0x792 DUP1
0x793 DUP4
0x794 SUB
0x795 DUP2
0x796 PUSH1 0x0
0x798 DUP8
0x799 DUP1
0x79a EXTCODESIZE
0x79b ISZERO
0x79c DUP1
0x79d ISZERO
0x79e PUSH2 0x7a6
0x7a1 JUMPI
---
0x6d5: JUMPDEST 
0x6da: V424 = 0x3
0x6dc: V425 = 0x0
0x6df: V426 = S[0x3]
0x6e1: V427 = 0x100
0x6e4: V428 = EXP 0x100 0x0
0x6e6: V429 = DIV V426 0x1
0x6e7: V430 = 0xffffffffffffffffffffffffffffffffffffffff
0x6fc: V431 = AND 0xffffffffffffffffffffffffffffffffffffffff V429
0x6fd: V432 = 0xffffffffffffffffffffffffffffffffffffffff
0x712: V433 = AND 0xffffffffffffffffffffffffffffffffffffffff V431
0x713: V434 = 0xbaa8529c
0x719: V435 = CALLER
0x71a: V436 = 0x40
0x71c: V437 = M[0x40]
0x71e: V438 = 0xffffffff
0x723: V439 = AND 0xffffffff 0xbaa8529c
0x724: V440 = 0x100000000000000000000000000000000000000000000000000000000
0x742: V441 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xbaa8529c
0x744: M[V437] = 0xbaa8529c00000000000000000000000000000000000000000000000000000000
0x745: V442 = 0x4
0x747: V443 = ADD 0x4 V437
0x74a: V444 = 0x0
0x74c: V445 = NOT 0x0
0x74d: V446 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff S5
0x74e: V447 = 0x0
0x750: V448 = NOT 0x0
0x751: V449 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V446
0x753: M[V443] = V449
0x754: V450 = 0x20
0x756: V451 = ADD 0x20 V443
0x758: V452 = 0xffffffffffffffffffffffffffffffffffffffff
0x76d: V453 = AND 0xffffffffffffffffffffffffffffffffffffffff V435
0x76e: V454 = 0xffffffffffffffffffffffffffffffffffffffff
0x783: V455 = AND 0xffffffffffffffffffffffffffffffffffffffff V453
0x785: M[V451] = V455
0x786: V456 = 0x20
0x788: V457 = ADD 0x20 V451
0x78d: V458 = 0x0
0x78f: V459 = 0x40
0x791: V460 = M[0x40]
0x794: V461 = SUB V457 V460
0x796: V462 = 0x0
0x79a: V463 = EXTCODESIZE V433
0x79b: V464 = ISZERO V463
0x79d: V465 = ISZERO V464
0x79e: V466 = 0x7a6
0x7a1: JUMPI 0x7a6 V465
---
Entry stack: [V11, S7, S6, S5, S4, S3, 0x440f19ba, S1, V417]
Stack pops: 6
Stack additions: [S5, S4, V433, 0xbaa8529c, V457, 0x0, V460, V461, V460, 0x0, V433, V464]
Exit stack: [V11, S7, S6, S5, S4, V433, 0xbaa8529c, V457, 0x0, V460, V461, V460, 0x0, V433, V464]

================================

Block 0x7a2
[0x7a2:0x7a5]
---
Predecessors: [0x6d5]
Successors: []
---
0x7a2 PUSH1 0x0
0x7a4 DUP1
0x7a5 REVERT
---
0x7a2: V467 = 0x0
0x7a5: REVERT 0x0 0x0
---
Entry stack: [V11, S13, S12, S11, S10, V433, 0xbaa8529c, V457, 0x0, V460, V461, V460, 0x0, V433, V464]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S13, S12, S11, S10, V433, 0xbaa8529c, V457, 0x0, V460, V461, V460, 0x0, V433, V464]

================================

Block 0x7a6
[0x7a6:0x7b0]
---
Predecessors: [0x6d5]
Successors: [0x7b1, 0x7ba]
---
0x7a6 JUMPDEST
0x7a7 POP
0x7a8 GAS
0x7a9 CALL
0x7aa ISZERO
0x7ab DUP1
0x7ac ISZERO
0x7ad PUSH2 0x7ba
0x7b0 JUMPI
---
0x7a6: JUMPDEST 
0x7a8: V468 = GAS
0x7a9: V469 = CALL V468 V433 0x0 V460 V461 V460 0x0
0x7aa: V470 = ISZERO V469
0x7ac: V471 = ISZERO V470
0x7ad: V472 = 0x7ba
0x7b0: JUMPI 0x7ba V471
---
Entry stack: [V11, S13, S12, S11, S10, V433, 0xbaa8529c, V457, 0x0, V460, V461, V460, 0x0, V433, V464]
Stack pops: 7
Stack additions: [V470]
Exit stack: [V11, S13, S12, S11, S10, V433, 0xbaa8529c, V457, V470]

================================

Block 0x7b1
[0x7b1:0x7b9]
---
Predecessors: [0x7a6]
Successors: []
---
0x7b1 RETURNDATASIZE
0x7b2 PUSH1 0x0
0x7b4 DUP1
0x7b5 RETURNDATACOPY
0x7b6 RETURNDATASIZE
0x7b7 PUSH1 0x0
0x7b9 REVERT
---
0x7b1: V473 = RETURNDATASIZE
0x7b2: V474 = 0x0
0x7b5: RETURNDATACOPY 0x0 0x0 V473
0x7b6: V475 = RETURNDATASIZE
0x7b7: V476 = 0x0
0x7b9: REVERT 0x0 V475
---
Entry stack: [V11, S7, S6, S5, S4, S3, 0xbaa8529c, S1, V470]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S7, S6, S5, S4, S3, 0xbaa8529c, S1, V470]

================================

Block 0x7ba
[0x7ba:0x87e]
---
Predecessors: [0x7a6]
Successors: [0x87f, 0x883]
---
0x7ba JUMPDEST
0x7bb POP
0x7bc POP
0x7bd POP
0x7be POP
0x7bf PUSH1 0x2
0x7c1 PUSH1 0x0
0x7c3 SWAP1
0x7c4 SLOAD
0x7c5 SWAP1
0x7c6 PUSH2 0x100
0x7c9 EXP
0x7ca SWAP1
0x7cb DIV
0x7cc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7e1 AND
0x7e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7f7 AND
0x7f8 PUSH4 0xa9059cbb
0x7fd CALLER
0x7fe DUP6
0x7ff PUSH1 0x40
0x801 MLOAD
0x802 DUP4
0x803 PUSH4 0xffffffff
0x808 AND
0x809 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x827 MUL
0x828 DUP2
0x829 MSTORE
0x82a PUSH1 0x4
0x82c ADD
0x82d DUP1
0x82e DUP4
0x82f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x844 AND
0x845 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x85a AND
0x85b DUP2
0x85c MSTORE
0x85d PUSH1 0x20
0x85f ADD
0x860 DUP3
0x861 DUP2
0x862 MSTORE
0x863 PUSH1 0x20
0x865 ADD
0x866 SWAP3
0x867 POP
0x868 POP
0x869 POP
0x86a PUSH1 0x20
0x86c PUSH1 0x40
0x86e MLOAD
0x86f DUP1
0x870 DUP4
0x871 SUB
0x872 DUP2
0x873 PUSH1 0x0
0x875 DUP8
0x876 DUP1
0x877 EXTCODESIZE
0x878 ISZERO
0x879 DUP1
0x87a ISZERO
0x87b PUSH2 0x883
0x87e JUMPI
---
0x7ba: JUMPDEST 
0x7bf: V477 = 0x2
0x7c1: V478 = 0x0
0x7c4: V479 = S[0x2]
0x7c6: V480 = 0x100
0x7c9: V481 = EXP 0x100 0x0
0x7cb: V482 = DIV V479 0x1
0x7cc: V483 = 0xffffffffffffffffffffffffffffffffffffffff
0x7e1: V484 = AND 0xffffffffffffffffffffffffffffffffffffffff V482
0x7e2: V485 = 0xffffffffffffffffffffffffffffffffffffffff
0x7f7: V486 = AND 0xffffffffffffffffffffffffffffffffffffffff V484
0x7f8: V487 = 0xa9059cbb
0x7fd: V488 = CALLER
0x7ff: V489 = 0x40
0x801: V490 = M[0x40]
0x803: V491 = 0xffffffff
0x808: V492 = AND 0xffffffff 0xa9059cbb
0x809: V493 = 0x100000000000000000000000000000000000000000000000000000000
0x827: V494 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x829: M[V490] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x82a: V495 = 0x4
0x82c: V496 = ADD 0x4 V490
0x82f: V497 = 0xffffffffffffffffffffffffffffffffffffffff
0x844: V498 = AND 0xffffffffffffffffffffffffffffffffffffffff V488
0x845: V499 = 0xffffffffffffffffffffffffffffffffffffffff
0x85a: V500 = AND 0xffffffffffffffffffffffffffffffffffffffff V498
0x85c: M[V496] = V500
0x85d: V501 = 0x20
0x85f: V502 = ADD 0x20 V496
0x862: M[V502] = S6
0x863: V503 = 0x20
0x865: V504 = ADD 0x20 V502
0x86a: V505 = 0x20
0x86c: V506 = 0x40
0x86e: V507 = M[0x40]
0x871: V508 = SUB V504 V507
0x873: V509 = 0x0
0x877: V510 = EXTCODESIZE V486
0x878: V511 = ISZERO V510
0x87a: V512 = ISZERO V511
0x87b: V513 = 0x883
0x87e: JUMPI 0x883 V512
---
Entry stack: [V11, S7, S6, S5, S4, S3, 0xbaa8529c, S1, V470]
Stack pops: 7
Stack additions: [S6, S5, S4, V486, 0xa9059cbb, V504, 0x20, V507, V508, V507, 0x0, V486, V511]
Exit stack: [V11, S7, S6, S5, S4, V486, 0xa9059cbb, V504, 0x20, V507, V508, V507, 0x0, V486, V511]

================================

Block 0x87f
[0x87f:0x882]
---
Predecessors: [0x7ba]
Successors: []
---
0x87f PUSH1 0x0
0x881 DUP1
0x882 REVERT
---
0x87f: V514 = 0x0
0x882: REVERT 0x0 0x0
---
Entry stack: [V11, S13, S12, S11, S10, V486, 0xa9059cbb, V504, 0x20, V507, V508, V507, 0x0, V486, V511]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S13, S12, S11, S10, V486, 0xa9059cbb, V504, 0x20, V507, V508, V507, 0x0, V486, V511]

================================

Block 0x883
[0x883:0x88d]
---
Predecessors: [0x7ba]
Successors: [0x88e, 0x897]
---
0x883 JUMPDEST
0x884 POP
0x885 GAS
0x886 CALL
0x887 ISZERO
0x888 DUP1
0x889 ISZERO
0x88a PUSH2 0x897
0x88d JUMPI
---
0x883: JUMPDEST 
0x885: V515 = GAS
0x886: V516 = CALL V515 V486 0x0 V507 V508 V507 0x20
0x887: V517 = ISZERO V516
0x889: V518 = ISZERO V517
0x88a: V519 = 0x897
0x88d: JUMPI 0x897 V518
---
Entry stack: [V11, S13, S12, S11, S10, V486, 0xa9059cbb, V504, 0x20, V507, V508, V507, 0x0, V486, V511]
Stack pops: 7
Stack additions: [V517]
Exit stack: [V11, S13, S12, S11, S10, V486, 0xa9059cbb, V504, V517]

================================

Block 0x88e
[0x88e:0x896]
---
Predecessors: [0x883]
Successors: []
---
0x88e RETURNDATASIZE
0x88f PUSH1 0x0
0x891 DUP1
0x892 RETURNDATACOPY
0x893 RETURNDATASIZE
0x894 PUSH1 0x0
0x896 REVERT
---
0x88e: V520 = RETURNDATASIZE
0x88f: V521 = 0x0
0x892: RETURNDATACOPY 0x0 0x0 V520
0x893: V522 = RETURNDATASIZE
0x894: V523 = 0x0
0x896: REVERT 0x0 V522
---
Entry stack: [V11, S7, S6, S5, S4, S3, 0xa9059cbb, S1, V517]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S7, S6, S5, S4, S3, 0xa9059cbb, S1, V517]

================================

Block 0x897
[0x897:0x8a8]
---
Predecessors: [0x883]
Successors: [0x8a9, 0x8ad]
---
0x897 JUMPDEST
0x898 POP
0x899 POP
0x89a POP
0x89b POP
0x89c PUSH1 0x40
0x89e MLOAD
0x89f RETURNDATASIZE
0x8a0 PUSH1 0x20
0x8a2 DUP2
0x8a3 LT
0x8a4 ISZERO
0x8a5 PUSH2 0x8ad
0x8a8 JUMPI
---
0x897: JUMPDEST 
0x89c: V524 = 0x40
0x89e: V525 = M[0x40]
0x89f: V526 = RETURNDATASIZE
0x8a0: V527 = 0x20
0x8a3: V528 = LT V526 0x20
0x8a4: V529 = ISZERO V528
0x8a5: V530 = 0x8ad
0x8a8: JUMPI 0x8ad V529
---
Entry stack: [V11, S7, S6, S5, S4, S3, 0xa9059cbb, S1, V517]
Stack pops: 4
Stack additions: [V525, V526]
Exit stack: [V11, S7, S6, S5, S4, V525, V526]

================================

Block 0x8a9
[0x8a9:0x8ac]
---
Predecessors: [0x897]
Successors: []
---
0x8a9 PUSH1 0x0
0x8ab DUP1
0x8ac REVERT
---
0x8a9: V531 = 0x0
0x8ac: REVERT 0x0 0x0
---
Entry stack: [V11, S5, S4, S3, S2, V525, V526]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S5, S4, S3, S2, V525, V526]

================================

Block 0x8ad
[0x8ad:0x93e]
---
Predecessors: [0x897]
Successors: [0x109]
---
0x8ad JUMPDEST
0x8ae DUP2
0x8af ADD
0x8b0 SWAP1
0x8b1 DUP1
0x8b2 DUP1
0x8b3 MLOAD
0x8b4 SWAP1
0x8b5 PUSH1 0x20
0x8b7 ADD
0x8b8 SWAP1
0x8b9 SWAP3
0x8ba SWAP2
0x8bb SWAP1
0x8bc POP
0x8bd POP
0x8be POP
0x8bf POP
0x8c0 PUSH32 0x39636be0c81fac23ed0111584a5bce976e8dd5cacf83723322c7b511908057fa
0x8e1 DUP3
0x8e2 CALLER
0x8e3 DUP6
0x8e4 PUSH1 0x40
0x8e6 MLOAD
0x8e7 DUP1
0x8e8 DUP5
0x8e9 PUSH1 0x0
0x8eb NOT
0x8ec AND
0x8ed PUSH1 0x0
0x8ef NOT
0x8f0 AND
0x8f1 DUP2
0x8f2 MSTORE
0x8f3 PUSH1 0x20
0x8f5 ADD
0x8f6 DUP4
0x8f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x90c AND
0x90d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x922 AND
0x923 DUP2
0x924 MSTORE
0x925 PUSH1 0x20
0x927 ADD
0x928 DUP3
0x929 DUP2
0x92a MSTORE
0x92b PUSH1 0x20
0x92d ADD
0x92e SWAP4
0x92f POP
0x930 POP
0x931 POP
0x932 POP
0x933 PUSH1 0x40
0x935 MLOAD
0x936 DUP1
0x937 SWAP2
0x938 SUB
0x939 SWAP1
0x93a LOG1
0x93b POP
0x93c POP
0x93d POP
0x93e JUMP
---
0x8ad: JUMPDEST 
0x8af: V532 = ADD V525 V526
0x8b3: V533 = M[V525]
0x8b5: V534 = 0x20
0x8b7: V535 = ADD 0x20 V525
0x8c0: V536 = 0x39636be0c81fac23ed0111584a5bce976e8dd5cacf83723322c7b511908057fa
0x8e2: V537 = CALLER
0x8e4: V538 = 0x40
0x8e6: V539 = M[0x40]
0x8e9: V540 = 0x0
0x8eb: V541 = NOT 0x0
0x8ec: V542 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff S3
0x8ed: V543 = 0x0
0x8ef: V544 = NOT 0x0
0x8f0: V545 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V542
0x8f2: M[V539] = V545
0x8f3: V546 = 0x20
0x8f5: V547 = ADD 0x20 V539
0x8f7: V548 = 0xffffffffffffffffffffffffffffffffffffffff
0x90c: V549 = AND 0xffffffffffffffffffffffffffffffffffffffff V537
0x90d: V550 = 0xffffffffffffffffffffffffffffffffffffffff
0x922: V551 = AND 0xffffffffffffffffffffffffffffffffffffffff V549
0x924: M[V547] = V551
0x925: V552 = 0x20
0x927: V553 = ADD 0x20 V547
0x92a: M[V553] = S4
0x92b: V554 = 0x20
0x92d: V555 = ADD 0x20 V553
0x933: V556 = 0x40
0x935: V557 = M[0x40]
0x938: V558 = SUB V555 V557
0x93a: LOG V557 V558 0x39636be0c81fac23ed0111584a5bce976e8dd5cacf83723322c7b511908057fa
0x93e: JUMP S5
---
Entry stack: [V11, S5, S4, S3, S2, V525, V526]
Stack pops: 6
Stack additions: []
Exit stack: [V11]

================================

Block 0x93f
[0x93f:0x964]
---
Predecessors: [0x117]
Successors: [0x120]
---
0x93f JUMPDEST
0x940 PUSH1 0x3
0x942 PUSH1 0x0
0x944 SWAP1
0x945 SLOAD
0x946 SWAP1
0x947 PUSH2 0x100
0x94a EXP
0x94b SWAP1
0x94c DIV
0x94d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x962 AND
0x963 DUP2
0x964 JUMP
---
0x93f: JUMPDEST 
0x940: V559 = 0x3
0x942: V560 = 0x0
0x945: V561 = S[0x3]
0x947: V562 = 0x100
0x94a: V563 = EXP 0x100 0x0
0x94c: V564 = DIV V561 0x1
0x94d: V565 = 0xffffffffffffffffffffffffffffffffffffffff
0x962: V566 = AND 0xffffffffffffffffffffffffffffffffffffffff V564
0x964: JUMP 0x120
---
Entry stack: [V11, 0x120]
Stack pops: 1
Stack additions: [S0, V566]
Exit stack: [V11, 0x120, V566]

================================

Block 0x965
[0x965:0x989]
---
Predecessors: [0x16e]
Successors: [0x177]
---
0x965 JUMPDEST
0x966 PUSH1 0x0
0x968 DUP1
0x969 SWAP1
0x96a SLOAD
0x96b SWAP1
0x96c PUSH2 0x100
0x96f EXP
0x970 SWAP1
0x971 DIV
0x972 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x987 AND
0x988 DUP2
0x989 JUMP
---
0x965: JUMPDEST 
0x966: V567 = 0x0
0x96a: V568 = S[0x0]
0x96c: V569 = 0x100
0x96f: V570 = EXP 0x100 0x0
0x971: V571 = DIV V568 0x1
0x972: V572 = 0xffffffffffffffffffffffffffffffffffffffff
0x987: V573 = AND 0xffffffffffffffffffffffffffffffffffffffff V571
0x989: JUMP 0x177
---
Entry stack: [V11, 0x177]
Stack pops: 1
Stack additions: [S0, V573]
Exit stack: [V11, 0x177, V573]

================================

Block 0x98a
[0x98a:0x9af]
---
Predecessors: [0x1c5]
Successors: [0x1ce]
---
0x98a JUMPDEST
0x98b PUSH1 0x1
0x98d PUSH1 0x0
0x98f SWAP1
0x990 SLOAD
0x991 SWAP1
0x992 PUSH2 0x100
0x995 EXP
0x996 SWAP1
0x997 DIV
0x998 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9ad AND
0x9ae DUP2
0x9af JUMP
---
0x98a: JUMPDEST 
0x98b: V574 = 0x1
0x98d: V575 = 0x0
0x990: V576 = S[0x1]
0x992: V577 = 0x100
0x995: V578 = EXP 0x100 0x0
0x997: V579 = DIV V576 0x1
0x998: V580 = 0xffffffffffffffffffffffffffffffffffffffff
0x9ad: V581 = AND 0xffffffffffffffffffffffffffffffffffffffff V579
0x9af: JUMP 0x1ce
---
Entry stack: [V11, 0x1ce]
Stack pops: 1
Stack additions: [S0, V581]
Exit stack: [V11, 0x1ce, V581]

================================

Block 0x9b0
[0x9b0:0xa05]
---
Predecessors: [0x210]
Successors: [0xa06, 0xa0a]
---
0x9b0 JUMPDEST
0x9b1 PUSH1 0x0
0x9b3 DUP1
0x9b4 PUSH1 0x0
0x9b6 SWAP1
0x9b7 SLOAD
0x9b8 SWAP1
0x9b9 PUSH2 0x100
0x9bc EXP
0x9bd SWAP1
0x9be DIV
0x9bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9d4 AND
0x9d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9ea AND
0x9eb CALLVALUE
0x9ec PUSH1 0x40
0x9ee MLOAD
0x9ef PUSH1 0x0
0x9f1 PUSH1 0x40
0x9f3 MLOAD
0x9f4 DUP1
0x9f5 DUP4
0x9f6 SUB
0x9f7 DUP2
0x9f8 DUP6
0x9f9 DUP8
0x9fa GAS
0x9fb CALL
0x9fc SWAP3
0x9fd POP
0x9fe POP
0x9ff POP
0xa00 ISZERO
0xa01 ISZERO
0xa02 PUSH2 0xa0a
0xa05 JUMPI
---
0x9b0: JUMPDEST 
0x9b1: V582 = 0x0
0x9b4: V583 = 0x0
0x9b7: V584 = S[0x0]
0x9b9: V585 = 0x100
0x9bc: V586 = EXP 0x100 0x0
0x9be: V587 = DIV V584 0x1
0x9bf: V588 = 0xffffffffffffffffffffffffffffffffffffffff
0x9d4: V589 = AND 0xffffffffffffffffffffffffffffffffffffffff V587
0x9d5: V590 = 0xffffffffffffffffffffffffffffffffffffffff
0x9ea: V591 = AND 0xffffffffffffffffffffffffffffffffffffffff V589
0x9eb: V592 = CALLVALUE
0x9ec: V593 = 0x40
0x9ee: V594 = M[0x40]
0x9ef: V595 = 0x0
0x9f1: V596 = 0x40
0x9f3: V597 = M[0x40]
0x9f6: V598 = SUB V594 V597
0x9fa: V599 = GAS
0x9fb: V600 = CALL V599 V591 V592 V597 V598 V597 0x0
0xa00: V601 = ISZERO V600
0xa01: V602 = ISZERO V601
0xa02: V603 = 0xa0a
0xa05: JUMPI 0xa0a V602
---
Entry stack: [V11, 0x22e, V118]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x22e, V118, 0x0]

================================

Block 0xa06
[0xa06:0xa09]
---
Predecessors: [0x9b0]
Successors: []
---
0xa06 PUSH1 0x0
0xa08 DUP1
0xa09 REVERT
---
0xa06: V604 = 0x0
0xa09: REVERT 0x0 0x0
---
Entry stack: [V11, 0x22e, V118, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x22e, V118, 0x0]

================================

Block 0xa0a
[0xa0a:0xa8f]
---
Predecessors: [0x9b0]
Successors: [0xa90, 0xa94]
---
0xa0a JUMPDEST
0xa0b PUSH2 0xad4
0xa0e CALLVALUE
0xa0f PUSH1 0x3
0xa11 PUSH1 0x0
0xa13 SWAP1
0xa14 SLOAD
0xa15 SWAP1
0xa16 PUSH2 0x100
0xa19 EXP
0xa1a SWAP1
0xa1b DIV
0xa1c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa31 AND
0xa32 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa47 AND
0xa48 PUSH4 0x7ec9c3b8
0xa4d PUSH1 0x40
0xa4f MLOAD
0xa50 DUP2
0xa51 PUSH4 0xffffffff
0xa56 AND
0xa57 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xa75 MUL
0xa76 DUP2
0xa77 MSTORE
0xa78 PUSH1 0x4
0xa7a ADD
0xa7b PUSH1 0x20
0xa7d PUSH1 0x40
0xa7f MLOAD
0xa80 DUP1
0xa81 DUP4
0xa82 SUB
0xa83 DUP2
0xa84 PUSH1 0x0
0xa86 DUP8
0xa87 DUP1
0xa88 EXTCODESIZE
0xa89 ISZERO
0xa8a DUP1
0xa8b ISZERO
0xa8c PUSH2 0xa94
0xa8f JUMPI
---
0xa0a: JUMPDEST 
0xa0b: V605 = 0xad4
0xa0e: V606 = CALLVALUE
0xa0f: V607 = 0x3
0xa11: V608 = 0x0
0xa14: V609 = S[0x3]
0xa16: V610 = 0x100
0xa19: V611 = EXP 0x100 0x0
0xa1b: V612 = DIV V609 0x1
0xa1c: V613 = 0xffffffffffffffffffffffffffffffffffffffff
0xa31: V614 = AND 0xffffffffffffffffffffffffffffffffffffffff V612
0xa32: V615 = 0xffffffffffffffffffffffffffffffffffffffff
0xa47: V616 = AND 0xffffffffffffffffffffffffffffffffffffffff V614
0xa48: V617 = 0x7ec9c3b8
0xa4d: V618 = 0x40
0xa4f: V619 = M[0x40]
0xa51: V620 = 0xffffffff
0xa56: V621 = AND 0xffffffff 0x7ec9c3b8
0xa57: V622 = 0x100000000000000000000000000000000000000000000000000000000
0xa75: V623 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x7ec9c3b8
0xa77: M[V619] = 0x7ec9c3b800000000000000000000000000000000000000000000000000000000
0xa78: V624 = 0x4
0xa7a: V625 = ADD 0x4 V619
0xa7b: V626 = 0x20
0xa7d: V627 = 0x40
0xa7f: V628 = M[0x40]
0xa82: V629 = SUB V625 V628
0xa84: V630 = 0x0
0xa88: V631 = EXTCODESIZE V616
0xa89: V632 = ISZERO V631
0xa8b: V633 = ISZERO V632
0xa8c: V634 = 0xa94
0xa8f: JUMPI 0xa94 V633
---
Entry stack: [V11, 0x22e, V118, 0x0]
Stack pops: 0
Stack additions: [0xad4, V606, V616, 0x7ec9c3b8, V625, 0x20, V628, V629, V628, 0x0, V616, V632]
Exit stack: [V11, 0x22e, V118, 0x0, 0xad4, V606, V616, 0x7ec9c3b8, V625, 0x20, V628, V629, V628, 0x0, V616, V632]

================================

Block 0xa90
[0xa90:0xa93]
---
Predecessors: [0xa0a]
Successors: []
---
0xa90 PUSH1 0x0
0xa92 DUP1
0xa93 REVERT
---
0xa90: V635 = 0x0
0xa93: REVERT 0x0 0x0
---
Entry stack: [V11, 0x22e, V118, 0x0, 0xad4, V606, V616, 0x7ec9c3b8, V625, 0x20, V628, V629, V628, 0x0, V616, V632]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x22e, V118, 0x0, 0xad4, V606, V616, 0x7ec9c3b8, V625, 0x20, V628, V629, V628, 0x0, V616, V632]

================================

Block 0xa94
[0xa94:0xa9e]
---
Predecessors: [0xa0a]
Successors: [0xa9f, 0xaa8]
---
0xa94 JUMPDEST
0xa95 POP
0xa96 GAS
0xa97 CALL
0xa98 ISZERO
0xa99 DUP1
0xa9a ISZERO
0xa9b PUSH2 0xaa8
0xa9e JUMPI
---
0xa94: JUMPDEST 
0xa96: V636 = GAS
0xa97: V637 = CALL V636 V616 0x0 V628 V629 V628 0x20
0xa98: V638 = ISZERO V637
0xa9a: V639 = ISZERO V638
0xa9b: V640 = 0xaa8
0xa9e: JUMPI 0xaa8 V639
---
Entry stack: [V11, 0x22e, V118, 0x0, 0xad4, V606, V616, 0x7ec9c3b8, V625, 0x20, V628, V629, V628, 0x0, V616, V632]
Stack pops: 7
Stack additions: [V638]
Exit stack: [V11, 0x22e, V118, 0x0, 0xad4, V606, V616, 0x7ec9c3b8, V625, V638]

================================

Block 0xa9f
[0xa9f:0xaa7]
---
Predecessors: [0xa94]
Successors: []
---
0xa9f RETURNDATASIZE
0xaa0 PUSH1 0x0
0xaa2 DUP1
0xaa3 RETURNDATACOPY
0xaa4 RETURNDATASIZE
0xaa5 PUSH1 0x0
0xaa7 REVERT
---
0xa9f: V641 = RETURNDATASIZE
0xaa0: V642 = 0x0
0xaa3: RETURNDATACOPY 0x0 0x0 V641
0xaa4: V643 = RETURNDATASIZE
0xaa5: V644 = 0x0
0xaa7: REVERT 0x0 V643
---
Entry stack: [V11, 0x22e, V118, 0x0, 0xad4, V606, V616, 0x7ec9c3b8, V625, V638]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x22e, V118, 0x0, 0xad4, V606, V616, 0x7ec9c3b8, V625, V638]

================================

Block 0xaa8
[0xaa8:0xab9]
---
Predecessors: [0xa94]
Successors: [0xaba, 0xabe]
---
0xaa8 JUMPDEST
0xaa9 POP
0xaaa POP
0xaab POP
0xaac POP
0xaad PUSH1 0x40
0xaaf MLOAD
0xab0 RETURNDATASIZE
0xab1 PUSH1 0x20
0xab3 DUP2
0xab4 LT
0xab5 ISZERO
0xab6 PUSH2 0xabe
0xab9 JUMPI
---
0xaa8: JUMPDEST 
0xaad: V645 = 0x40
0xaaf: V646 = M[0x40]
0xab0: V647 = RETURNDATASIZE
0xab1: V648 = 0x20
0xab4: V649 = LT V647 0x20
0xab5: V650 = ISZERO V649
0xab6: V651 = 0xabe
0xab9: JUMPI 0xabe V650
---
Entry stack: [V11, 0x22e, V118, 0x0, 0xad4, V606, V616, 0x7ec9c3b8, V625, V638]
Stack pops: 4
Stack additions: [V646, V647]
Exit stack: [V11, 0x22e, V118, 0x0, 0xad4, V606, V646, V647]

================================

Block 0xaba
[0xaba:0xabd]
---
Predecessors: [0xaa8]
Successors: []
---
0xaba PUSH1 0x0
0xabc DUP1
0xabd REVERT
---
0xaba: V652 = 0x0
0xabd: REVERT 0x0 0x0
---
Entry stack: [V11, 0x22e, V118, 0x0, 0xad4, V606, V646, V647]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x22e, V118, 0x0, 0xad4, V606, V646, V647]

================================

Block 0xabe
[0xabe:0xad3]
---
Predecessors: [0xaa8]
Successors: [0x12e3]
---
0xabe JUMPDEST
0xabf DUP2
0xac0 ADD
0xac1 SWAP1
0xac2 DUP1
0xac3 DUP1
0xac4 MLOAD
0xac5 SWAP1
0xac6 PUSH1 0x20
0xac8 ADD
0xac9 SWAP1
0xaca SWAP3
0xacb SWAP2
0xacc SWAP1
0xacd POP
0xace POP
0xacf POP
0xad0 PUSH2 0x12e3
0xad3 JUMP
---
0xabe: JUMPDEST 
0xac0: V653 = ADD V646 V647
0xac4: V654 = M[V646]
0xac6: V655 = 0x20
0xac8: V656 = ADD 0x20 V646
0xad0: V657 = 0x12e3
0xad3: JUMP 0x12e3
---
Entry stack: [V11, 0x22e, V118, 0x0, 0xad4, V606, V646, V647]
Stack pops: 2
Stack additions: [V654]
Exit stack: [V11, 0x22e, V118, 0x0, 0xad4, V606, V654]

================================

Block 0xad4
[0xad4:0xb62]
---
Predecessors: [0x131a]
Successors: [0xb63, 0xb67]
---
0xad4 JUMPDEST
0xad5 SWAP1
0xad6 POP
0xad7 PUSH1 0x3
0xad9 PUSH1 0x0
0xadb SWAP1
0xadc SLOAD
0xadd SWAP1
0xade PUSH2 0x100
0xae1 EXP
0xae2 SWAP1
0xae3 DIV
0xae4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaf9 AND
0xafa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb0f AND
0xb10 PUSH4 0x49878f3
0xb15 DUP3
0xb16 PUSH1 0x40
0xb18 MLOAD
0xb19 DUP3
0xb1a PUSH4 0xffffffff
0xb1f AND
0xb20 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xb3e MUL
0xb3f DUP2
0xb40 MSTORE
0xb41 PUSH1 0x4
0xb43 ADD
0xb44 DUP1
0xb45 DUP3
0xb46 DUP2
0xb47 MSTORE
0xb48 PUSH1 0x20
0xb4a ADD
0xb4b SWAP2
0xb4c POP
0xb4d POP
0xb4e PUSH1 0x0
0xb50 PUSH1 0x40
0xb52 MLOAD
0xb53 DUP1
0xb54 DUP4
0xb55 SUB
0xb56 DUP2
0xb57 PUSH1 0x0
0xb59 DUP8
0xb5a DUP1
0xb5b EXTCODESIZE
0xb5c ISZERO
0xb5d DUP1
0xb5e ISZERO
0xb5f PUSH2 0xb67
0xb62 JUMPI
---
0xad4: JUMPDEST 
0xad7: V658 = 0x3
0xad9: V659 = 0x0
0xadc: V660 = S[0x3]
0xade: V661 = 0x100
0xae1: V662 = EXP 0x100 0x0
0xae3: V663 = DIV V660 0x1
0xae4: V664 = 0xffffffffffffffffffffffffffffffffffffffff
0xaf9: V665 = AND 0xffffffffffffffffffffffffffffffffffffffff V663
0xafa: V666 = 0xffffffffffffffffffffffffffffffffffffffff
0xb0f: V667 = AND 0xffffffffffffffffffffffffffffffffffffffff V665
0xb10: V668 = 0x49878f3
0xb16: V669 = 0x40
0xb18: V670 = M[0x40]
0xb1a: V671 = 0xffffffff
0xb1f: V672 = AND 0xffffffff 0x49878f3
0xb20: V673 = 0x100000000000000000000000000000000000000000000000000000000
0xb3e: V674 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x49878f3
0xb40: M[V670] = 0x49878f300000000000000000000000000000000000000000000000000000000
0xb41: V675 = 0x4
0xb43: V676 = ADD 0x4 V670
0xb47: M[V676] = V1167
0xb48: V677 = 0x20
0xb4a: V678 = ADD 0x20 V676
0xb4e: V679 = 0x0
0xb50: V680 = 0x40
0xb52: V681 = M[0x40]
0xb55: V682 = SUB V678 V681
0xb57: V683 = 0x0
0xb5b: V684 = EXTCODESIZE V667
0xb5c: V685 = ISZERO V684
0xb5e: V686 = ISZERO V685
0xb5f: V687 = 0xb67
0xb62: JUMPI 0xb67 V686
---
Entry stack: [V11, S4, S3, S2, 0x0, V1167]
Stack pops: 2
Stack additions: [S0, V667, 0x49878f3, V678, 0x0, V681, V682, V681, 0x0, V667, V685]
Exit stack: [V11, S4, S3, S2, V1167, V667, 0x49878f3, V678, 0x0, V681, V682, V681, 0x0, V667, V685]

================================

Block 0xb63
[0xb63:0xb66]
---
Predecessors: [0xad4]
Successors: []
---
0xb63 PUSH1 0x0
0xb65 DUP1
0xb66 REVERT
---
0xb63: V688 = 0x0
0xb66: REVERT 0x0 0x0
---
Entry stack: [V11, S13, S12, S11, S10, V667, 0x49878f3, V678, 0x0, V681, V682, V681, 0x0, V667, V685]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S13, S12, S11, S10, V667, 0x49878f3, V678, 0x0, V681, V682, V681, 0x0, V667, V685]

================================

Block 0xb67
[0xb67:0xb71]
---
Predecessors: [0xad4]
Successors: [0xb72, 0xb7b]
---
0xb67 JUMPDEST
0xb68 POP
0xb69 GAS
0xb6a CALL
0xb6b ISZERO
0xb6c DUP1
0xb6d ISZERO
0xb6e PUSH2 0xb7b
0xb71 JUMPI
---
0xb67: JUMPDEST 
0xb69: V689 = GAS
0xb6a: V690 = CALL V689 V667 0x0 V681 V682 V681 0x0
0xb6b: V691 = ISZERO V690
0xb6d: V692 = ISZERO V691
0xb6e: V693 = 0xb7b
0xb71: JUMPI 0xb7b V692
---
Entry stack: [V11, S13, S12, S11, S10, V667, 0x49878f3, V678, 0x0, V681, V682, V681, 0x0, V667, V685]
Stack pops: 7
Stack additions: [V691]
Exit stack: [V11, S13, S12, S11, S10, V667, 0x49878f3, V678, V691]

================================

Block 0xb72
[0xb72:0xb7a]
---
Predecessors: [0xb67]
Successors: []
---
0xb72 RETURNDATASIZE
0xb73 PUSH1 0x0
0xb75 DUP1
0xb76 RETURNDATACOPY
0xb77 RETURNDATASIZE
0xb78 PUSH1 0x0
0xb7a REVERT
---
0xb72: V694 = RETURNDATASIZE
0xb73: V695 = 0x0
0xb76: RETURNDATACOPY 0x0 0x0 V694
0xb77: V696 = RETURNDATASIZE
0xb78: V697 = 0x0
0xb7a: REVERT 0x0 V696
---
Entry stack: [V11, S7, S6, S5, S4, S3, 0x49878f3, S1, V691]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S7, S6, S5, S4, S3, 0x49878f3, S1, V691]

================================

Block 0xb7b
[0xb7b:0xc1e]
---
Predecessors: [0xb67]
Successors: [0xc1f, 0xc23]
---
0xb7b JUMPDEST
0xb7c POP
0xb7d POP
0xb7e POP
0xb7f POP
0xb80 PUSH1 0x3
0xb82 PUSH1 0x0
0xb84 SWAP1
0xb85 SLOAD
0xb86 SWAP1
0xb87 PUSH2 0x100
0xb8a EXP
0xb8b SWAP1
0xb8c DIV
0xb8d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xba2 AND
0xba3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbb8 AND
0xbb9 PUSH4 0xb3b77a51
0xbbe DUP4
0xbbf PUSH1 0x1
0xbc1 MUL
0xbc2 DUP4
0xbc3 PUSH1 0x40
0xbc5 MLOAD
0xbc6 DUP4
0xbc7 PUSH4 0xffffffff
0xbcc AND
0xbcd PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xbeb MUL
0xbec DUP2
0xbed MSTORE
0xbee PUSH1 0x4
0xbf0 ADD
0xbf1 DUP1
0xbf2 DUP4
0xbf3 PUSH1 0x0
0xbf5 NOT
0xbf6 AND
0xbf7 PUSH1 0x0
0xbf9 NOT
0xbfa AND
0xbfb DUP2
0xbfc MSTORE
0xbfd PUSH1 0x20
0xbff ADD
0xc00 DUP3
0xc01 DUP2
0xc02 MSTORE
0xc03 PUSH1 0x20
0xc05 ADD
0xc06 SWAP3
0xc07 POP
0xc08 POP
0xc09 POP
0xc0a PUSH1 0x0
0xc0c PUSH1 0x40
0xc0e MLOAD
0xc0f DUP1
0xc10 DUP4
0xc11 SUB
0xc12 DUP2
0xc13 PUSH1 0x0
0xc15 DUP8
0xc16 DUP1
0xc17 EXTCODESIZE
0xc18 ISZERO
0xc19 DUP1
0xc1a ISZERO
0xc1b PUSH2 0xc23
0xc1e JUMPI
---
0xb7b: JUMPDEST 
0xb80: V698 = 0x3
0xb82: V699 = 0x0
0xb85: V700 = S[0x3]
0xb87: V701 = 0x100
0xb8a: V702 = EXP 0x100 0x0
0xb8c: V703 = DIV V700 0x1
0xb8d: V704 = 0xffffffffffffffffffffffffffffffffffffffff
0xba2: V705 = AND 0xffffffffffffffffffffffffffffffffffffffff V703
0xba3: V706 = 0xffffffffffffffffffffffffffffffffffffffff
0xbb8: V707 = AND 0xffffffffffffffffffffffffffffffffffffffff V705
0xbb9: V708 = 0xb3b77a51
0xbbf: V709 = 0x1
0xbc1: V710 = MUL 0x1 S5
0xbc3: V711 = 0x40
0xbc5: V712 = M[0x40]
0xbc7: V713 = 0xffffffff
0xbcc: V714 = AND 0xffffffff 0xb3b77a51
0xbcd: V715 = 0x100000000000000000000000000000000000000000000000000000000
0xbeb: V716 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xb3b77a51
0xbed: M[V712] = 0xb3b77a5100000000000000000000000000000000000000000000000000000000
0xbee: V717 = 0x4
0xbf0: V718 = ADD 0x4 V712
0xbf3: V719 = 0x0
0xbf5: V720 = NOT 0x0
0xbf6: V721 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V710
0xbf7: V722 = 0x0
0xbf9: V723 = NOT 0x0
0xbfa: V724 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V721
0xbfc: M[V718] = V724
0xbfd: V725 = 0x20
0xbff: V726 = ADD 0x20 V718
0xc02: M[V726] = S4
0xc03: V727 = 0x20
0xc05: V728 = ADD 0x20 V726
0xc0a: V729 = 0x0
0xc0c: V730 = 0x40
0xc0e: V731 = M[0x40]
0xc11: V732 = SUB V728 V731
0xc13: V733 = 0x0
0xc17: V734 = EXTCODESIZE V707
0xc18: V735 = ISZERO V734
0xc1a: V736 = ISZERO V735
0xc1b: V737 = 0xc23
0xc1e: JUMPI 0xc23 V736
---
Entry stack: [V11, S7, S6, S5, S4, S3, 0x49878f3, S1, V691]
Stack pops: 6
Stack additions: [S5, S4, V707, 0xb3b77a51, V728, 0x0, V731, V732, V731, 0x0, V707, V735]
Exit stack: [V11, S7, S6, S5, S4, V707, 0xb3b77a51, V728, 0x0, V731, V732, V731, 0x0, V707, V735]

================================

Block 0xc1f
[0xc1f:0xc22]
---
Predecessors: [0xb7b]
Successors: []
---
0xc1f PUSH1 0x0
0xc21 DUP1
0xc22 REVERT
---
0xc1f: V738 = 0x0
0xc22: REVERT 0x0 0x0
---
Entry stack: [V11, S13, S12, S11, S10, V707, 0xb3b77a51, V728, 0x0, V731, V732, V731, 0x0, V707, V735]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S13, S12, S11, S10, V707, 0xb3b77a51, V728, 0x0, V731, V732, V731, 0x0, V707, V735]

================================

Block 0xc23
[0xc23:0xc2d]
---
Predecessors: [0xb7b]
Successors: [0xc2e, 0xc37]
---
0xc23 JUMPDEST
0xc24 POP
0xc25 GAS
0xc26 CALL
0xc27 ISZERO
0xc28 DUP1
0xc29 ISZERO
0xc2a PUSH2 0xc37
0xc2d JUMPI
---
0xc23: JUMPDEST 
0xc25: V739 = GAS
0xc26: V740 = CALL V739 V707 0x0 V731 V732 V731 0x0
0xc27: V741 = ISZERO V740
0xc29: V742 = ISZERO V741
0xc2a: V743 = 0xc37
0xc2d: JUMPI 0xc37 V742
---
Entry stack: [V11, S13, S12, S11, S10, V707, 0xb3b77a51, V728, 0x0, V731, V732, V731, 0x0, V707, V735]
Stack pops: 7
Stack additions: [V741]
Exit stack: [V11, S13, S12, S11, S10, V707, 0xb3b77a51, V728, V741]

================================

Block 0xc2e
[0xc2e:0xc36]
---
Predecessors: [0xc23]
Successors: []
---
0xc2e RETURNDATASIZE
0xc2f PUSH1 0x0
0xc31 DUP1
0xc32 RETURNDATACOPY
0xc33 RETURNDATASIZE
0xc34 PUSH1 0x0
0xc36 REVERT
---
0xc2e: V744 = RETURNDATASIZE
0xc2f: V745 = 0x0
0xc32: RETURNDATACOPY 0x0 0x0 V744
0xc33: V746 = RETURNDATASIZE
0xc34: V747 = 0x0
0xc36: REVERT 0x0 V746
---
Entry stack: [V11, S7, S6, S5, S4, S3, 0xb3b77a51, S1, V741]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S7, S6, S5, S4, S3, 0xb3b77a51, S1, V741]

================================

Block 0xc37
[0xc37:0xc3e]
---
Predecessors: [0xc23]
Successors: [0x22e]
---
0xc37 JUMPDEST
0xc38 POP
0xc39 POP
0xc3a POP
0xc3b POP
0xc3c POP
0xc3d POP
0xc3e JUMP
---
0xc37: JUMPDEST 
0xc3e: JUMP S6
---
Entry stack: [V11, S7, S6, S5, S4, S3, 0xb3b77a51, S1, V741]
Stack pops: 7
Stack additions: []
Exit stack: [V11, S7]

================================

Block 0xc3f
[0xc3f:0xc94]
---
Predecessors: [0x230]
Successors: [0xc95, 0xc99]
---
0xc3f JUMPDEST
0xc40 PUSH1 0x0
0xc42 DUP1
0xc43 PUSH1 0x0
0xc45 SWAP1
0xc46 SLOAD
0xc47 SWAP1
0xc48 PUSH2 0x100
0xc4b EXP
0xc4c SWAP1
0xc4d DIV
0xc4e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc63 AND
0xc64 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc79 AND
0xc7a CALLVALUE
0xc7b PUSH1 0x40
0xc7d MLOAD
0xc7e PUSH1 0x0
0xc80 PUSH1 0x40
0xc82 MLOAD
0xc83 DUP1
0xc84 DUP4
0xc85 SUB
0xc86 DUP2
0xc87 DUP6
0xc88 DUP8
0xc89 GAS
0xc8a CALL
0xc8b SWAP3
0xc8c POP
0xc8d POP
0xc8e POP
0xc8f ISZERO
0xc90 ISZERO
0xc91 PUSH2 0xc99
0xc94 JUMPI
---
0xc3f: JUMPDEST 
0xc40: V748 = 0x0
0xc43: V749 = 0x0
0xc46: V750 = S[0x0]
0xc48: V751 = 0x100
0xc4b: V752 = EXP 0x100 0x0
0xc4d: V753 = DIV V750 0x1
0xc4e: V754 = 0xffffffffffffffffffffffffffffffffffffffff
0xc63: V755 = AND 0xffffffffffffffffffffffffffffffffffffffff V753
0xc64: V756 = 0xffffffffffffffffffffffffffffffffffffffff
0xc79: V757 = AND 0xffffffffffffffffffffffffffffffffffffffff V755
0xc7a: V758 = CALLVALUE
0xc7b: V759 = 0x40
0xc7d: V760 = M[0x40]
0xc7e: V761 = 0x0
0xc80: V762 = 0x40
0xc82: V763 = M[0x40]
0xc85: V764 = SUB V760 V763
0xc89: V765 = GAS
0xc8a: V766 = CALL V765 V757 V758 V763 V764 V763 0x0
0xc8f: V767 = ISZERO V766
0xc90: V768 = ISZERO V767
0xc91: V769 = 0xc99
0xc94: JUMPI 0xc99 V768
---
Entry stack: [V11, 0x238]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x238, 0x0]

================================

Block 0xc95
[0xc95:0xc98]
---
Predecessors: [0xc3f]
Successors: []
---
0xc95 PUSH1 0x0
0xc97 DUP1
0xc98 REVERT
---
0xc95: V770 = 0x0
0xc98: REVERT 0x0 0x0
---
Entry stack: [V11, 0x238, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x238, 0x0]

================================

Block 0xc99
[0xc99:0xd1e]
---
Predecessors: [0xc3f]
Successors: [0xd1f, 0xd23]
---
0xc99 JUMPDEST
0xc9a PUSH2 0xd63
0xc9d CALLVALUE
0xc9e PUSH1 0x3
0xca0 PUSH1 0x0
0xca2 SWAP1
0xca3 SLOAD
0xca4 SWAP1
0xca5 PUSH2 0x100
0xca8 EXP
0xca9 SWAP1
0xcaa DIV
0xcab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcc0 AND
0xcc1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcd6 AND
0xcd7 PUSH4 0x7ec9c3b8
0xcdc PUSH1 0x40
0xcde MLOAD
0xcdf DUP2
0xce0 PUSH4 0xffffffff
0xce5 AND
0xce6 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xd04 MUL
0xd05 DUP2
0xd06 MSTORE
0xd07 PUSH1 0x4
0xd09 ADD
0xd0a PUSH1 0x20
0xd0c PUSH1 0x40
0xd0e MLOAD
0xd0f DUP1
0xd10 DUP4
0xd11 SUB
0xd12 DUP2
0xd13 PUSH1 0x0
0xd15 DUP8
0xd16 DUP1
0xd17 EXTCODESIZE
0xd18 ISZERO
0xd19 DUP1
0xd1a ISZERO
0xd1b PUSH2 0xd23
0xd1e JUMPI
---
0xc99: JUMPDEST 
0xc9a: V771 = 0xd63
0xc9d: V772 = CALLVALUE
0xc9e: V773 = 0x3
0xca0: V774 = 0x0
0xca3: V775 = S[0x3]
0xca5: V776 = 0x100
0xca8: V777 = EXP 0x100 0x0
0xcaa: V778 = DIV V775 0x1
0xcab: V779 = 0xffffffffffffffffffffffffffffffffffffffff
0xcc0: V780 = AND 0xffffffffffffffffffffffffffffffffffffffff V778
0xcc1: V781 = 0xffffffffffffffffffffffffffffffffffffffff
0xcd6: V782 = AND 0xffffffffffffffffffffffffffffffffffffffff V780
0xcd7: V783 = 0x7ec9c3b8
0xcdc: V784 = 0x40
0xcde: V785 = M[0x40]
0xce0: V786 = 0xffffffff
0xce5: V787 = AND 0xffffffff 0x7ec9c3b8
0xce6: V788 = 0x100000000000000000000000000000000000000000000000000000000
0xd04: V789 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x7ec9c3b8
0xd06: M[V785] = 0x7ec9c3b800000000000000000000000000000000000000000000000000000000
0xd07: V790 = 0x4
0xd09: V791 = ADD 0x4 V785
0xd0a: V792 = 0x20
0xd0c: V793 = 0x40
0xd0e: V794 = M[0x40]
0xd11: V795 = SUB V791 V794
0xd13: V796 = 0x0
0xd17: V797 = EXTCODESIZE V782
0xd18: V798 = ISZERO V797
0xd1a: V799 = ISZERO V798
0xd1b: V800 = 0xd23
0xd1e: JUMPI 0xd23 V799
---
Entry stack: [V11, 0x238, 0x0]
Stack pops: 0
Stack additions: [0xd63, V772, V782, 0x7ec9c3b8, V791, 0x20, V794, V795, V794, 0x0, V782, V798]
Exit stack: [V11, 0x238, 0x0, 0xd63, V772, V782, 0x7ec9c3b8, V791, 0x20, V794, V795, V794, 0x0, V782, V798]

================================

Block 0xd1f
[0xd1f:0xd22]
---
Predecessors: [0xc99]
Successors: []
---
0xd1f PUSH1 0x0
0xd21 DUP1
0xd22 REVERT
---
0xd1f: V801 = 0x0
0xd22: REVERT 0x0 0x0
---
Entry stack: [V11, 0x238, 0x0, 0xd63, V772, V782, 0x7ec9c3b8, V791, 0x20, V794, V795, V794, 0x0, V782, V798]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x238, 0x0, 0xd63, V772, V782, 0x7ec9c3b8, V791, 0x20, V794, V795, V794, 0x0, V782, V798]

================================

Block 0xd23
[0xd23:0xd2d]
---
Predecessors: [0xc99]
Successors: [0xd2e, 0xd37]
---
0xd23 JUMPDEST
0xd24 POP
0xd25 GAS
0xd26 CALL
0xd27 ISZERO
0xd28 DUP1
0xd29 ISZERO
0xd2a PUSH2 0xd37
0xd2d JUMPI
---
0xd23: JUMPDEST 
0xd25: V802 = GAS
0xd26: V803 = CALL V802 V782 0x0 V794 V795 V794 0x20
0xd27: V804 = ISZERO V803
0xd29: V805 = ISZERO V804
0xd2a: V806 = 0xd37
0xd2d: JUMPI 0xd37 V805
---
Entry stack: [V11, 0x238, 0x0, 0xd63, V772, V782, 0x7ec9c3b8, V791, 0x20, V794, V795, V794, 0x0, V782, V798]
Stack pops: 7
Stack additions: [V804]
Exit stack: [V11, 0x238, 0x0, 0xd63, V772, V782, 0x7ec9c3b8, V791, V804]

================================

Block 0xd2e
[0xd2e:0xd36]
---
Predecessors: [0xd23]
Successors: []
---
0xd2e RETURNDATASIZE
0xd2f PUSH1 0x0
0xd31 DUP1
0xd32 RETURNDATACOPY
0xd33 RETURNDATASIZE
0xd34 PUSH1 0x0
0xd36 REVERT
---
0xd2e: V807 = RETURNDATASIZE
0xd2f: V808 = 0x0
0xd32: RETURNDATACOPY 0x0 0x0 V807
0xd33: V809 = RETURNDATASIZE
0xd34: V810 = 0x0
0xd36: REVERT 0x0 V809
---
Entry stack: [V11, 0x238, 0x0, 0xd63, V772, V782, 0x7ec9c3b8, V791, V804]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x238, 0x0, 0xd63, V772, V782, 0x7ec9c3b8, V791, V804]

================================

Block 0xd37
[0xd37:0xd48]
---
Predecessors: [0xd23]
Successors: [0xd49, 0xd4d]
---
0xd37 JUMPDEST
0xd38 POP
0xd39 POP
0xd3a POP
0xd3b POP
0xd3c PUSH1 0x40
0xd3e MLOAD
0xd3f RETURNDATASIZE
0xd40 PUSH1 0x20
0xd42 DUP2
0xd43 LT
0xd44 ISZERO
0xd45 PUSH2 0xd4d
0xd48 JUMPI
---
0xd37: JUMPDEST 
0xd3c: V811 = 0x40
0xd3e: V812 = M[0x40]
0xd3f: V813 = RETURNDATASIZE
0xd40: V814 = 0x20
0xd43: V815 = LT V813 0x20
0xd44: V816 = ISZERO V815
0xd45: V817 = 0xd4d
0xd48: JUMPI 0xd4d V816
---
Entry stack: [V11, 0x238, 0x0, 0xd63, V772, V782, 0x7ec9c3b8, V791, V804]
Stack pops: 4
Stack additions: [V812, V813]
Exit stack: [V11, 0x238, 0x0, 0xd63, V772, V812, V813]

================================

Block 0xd49
[0xd49:0xd4c]
---
Predecessors: [0xd37]
Successors: []
---
0xd49 PUSH1 0x0
0xd4b DUP1
0xd4c REVERT
---
0xd49: V818 = 0x0
0xd4c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x238, 0x0, 0xd63, V772, V812, V813]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x238, 0x0, 0xd63, V772, V812, V813]

================================

Block 0xd4d
[0xd4d:0xd62]
---
Predecessors: [0xd37]
Successors: [0x12e3]
---
0xd4d JUMPDEST
0xd4e DUP2
0xd4f ADD
0xd50 SWAP1
0xd51 DUP1
0xd52 DUP1
0xd53 MLOAD
0xd54 SWAP1
0xd55 PUSH1 0x20
0xd57 ADD
0xd58 SWAP1
0xd59 SWAP3
0xd5a SWAP2
0xd5b SWAP1
0xd5c POP
0xd5d POP
0xd5e POP
0xd5f PUSH2 0x12e3
0xd62 JUMP
---
0xd4d: JUMPDEST 
0xd4f: V819 = ADD V812 V813
0xd53: V820 = M[V812]
0xd55: V821 = 0x20
0xd57: V822 = ADD 0x20 V812
0xd5f: V823 = 0x12e3
0xd62: JUMP 0x12e3
---
Entry stack: [V11, 0x238, 0x0, 0xd63, V772, V812, V813]
Stack pops: 2
Stack additions: [V820]
Exit stack: [V11, 0x238, 0x0, 0xd63, V772, V820]

================================

Block 0xd63
[0xd63:0xdf1]
---
Predecessors: [0x131a]
Successors: [0xdf2, 0xdf6]
---
0xd63 JUMPDEST
0xd64 SWAP1
0xd65 POP
0xd66 PUSH1 0x3
0xd68 PUSH1 0x0
0xd6a SWAP1
0xd6b SLOAD
0xd6c SWAP1
0xd6d PUSH2 0x100
0xd70 EXP
0xd71 SWAP1
0xd72 DIV
0xd73 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd88 AND
0xd89 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd9e AND
0xd9f PUSH4 0x49878f3
0xda4 DUP3
0xda5 PUSH1 0x40
0xda7 MLOAD
0xda8 DUP3
0xda9 PUSH4 0xffffffff
0xdae AND
0xdaf PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xdcd MUL
0xdce DUP2
0xdcf MSTORE
0xdd0 PUSH1 0x4
0xdd2 ADD
0xdd3 DUP1
0xdd4 DUP3
0xdd5 DUP2
0xdd6 MSTORE
0xdd7 PUSH1 0x20
0xdd9 ADD
0xdda SWAP2
0xddb POP
0xddc POP
0xddd PUSH1 0x0
0xddf PUSH1 0x40
0xde1 MLOAD
0xde2 DUP1
0xde3 DUP4
0xde4 SUB
0xde5 DUP2
0xde6 PUSH1 0x0
0xde8 DUP8
0xde9 DUP1
0xdea EXTCODESIZE
0xdeb ISZERO
0xdec DUP1
0xded ISZERO
0xdee PUSH2 0xdf6
0xdf1 JUMPI
---
0xd63: JUMPDEST 
0xd66: V824 = 0x3
0xd68: V825 = 0x0
0xd6b: V826 = S[0x3]
0xd6d: V827 = 0x100
0xd70: V828 = EXP 0x100 0x0
0xd72: V829 = DIV V826 0x1
0xd73: V830 = 0xffffffffffffffffffffffffffffffffffffffff
0xd88: V831 = AND 0xffffffffffffffffffffffffffffffffffffffff V829
0xd89: V832 = 0xffffffffffffffffffffffffffffffffffffffff
0xd9e: V833 = AND 0xffffffffffffffffffffffffffffffffffffffff V831
0xd9f: V834 = 0x49878f3
0xda5: V835 = 0x40
0xda7: V836 = M[0x40]
0xda9: V837 = 0xffffffff
0xdae: V838 = AND 0xffffffff 0x49878f3
0xdaf: V839 = 0x100000000000000000000000000000000000000000000000000000000
0xdcd: V840 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x49878f3
0xdcf: M[V836] = 0x49878f300000000000000000000000000000000000000000000000000000000
0xdd0: V841 = 0x4
0xdd2: V842 = ADD 0x4 V836
0xdd6: M[V842] = V1167
0xdd7: V843 = 0x20
0xdd9: V844 = ADD 0x20 V842
0xddd: V845 = 0x0
0xddf: V846 = 0x40
0xde1: V847 = M[0x40]
0xde4: V848 = SUB V844 V847
0xde6: V849 = 0x0
0xdea: V850 = EXTCODESIZE V833
0xdeb: V851 = ISZERO V850
0xded: V852 = ISZERO V851
0xdee: V853 = 0xdf6
0xdf1: JUMPI 0xdf6 V852
---
Entry stack: [V11, S4, S3, S2, 0x0, V1167]
Stack pops: 2
Stack additions: [S0, V833, 0x49878f3, V844, 0x0, V847, V848, V847, 0x0, V833, V851]
Exit stack: [V11, S4, S3, S2, V1167, V833, 0x49878f3, V844, 0x0, V847, V848, V847, 0x0, V833, V851]

================================

Block 0xdf2
[0xdf2:0xdf5]
---
Predecessors: [0xd63]
Successors: []
---
0xdf2 PUSH1 0x0
0xdf4 DUP1
0xdf5 REVERT
---
0xdf2: V854 = 0x0
0xdf5: REVERT 0x0 0x0
---
Entry stack: [V11, S13, S12, S11, S10, V833, 0x49878f3, V844, 0x0, V847, V848, V847, 0x0, V833, V851]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S13, S12, S11, S10, V833, 0x49878f3, V844, 0x0, V847, V848, V847, 0x0, V833, V851]

================================

Block 0xdf6
[0xdf6:0xe00]
---
Predecessors: [0xd63]
Successors: [0xe01, 0xe0a]
---
0xdf6 JUMPDEST
0xdf7 POP
0xdf8 GAS
0xdf9 CALL
0xdfa ISZERO
0xdfb DUP1
0xdfc ISZERO
0xdfd PUSH2 0xe0a
0xe00 JUMPI
---
0xdf6: JUMPDEST 
0xdf8: V855 = GAS
0xdf9: V856 = CALL V855 V833 0x0 V847 V848 V847 0x0
0xdfa: V857 = ISZERO V856
0xdfc: V858 = ISZERO V857
0xdfd: V859 = 0xe0a
0xe00: JUMPI 0xe0a V858
---
Entry stack: [V11, S13, S12, S11, S10, V833, 0x49878f3, V844, 0x0, V847, V848, V847, 0x0, V833, V851]
Stack pops: 7
Stack additions: [V857]
Exit stack: [V11, S13, S12, S11, S10, V833, 0x49878f3, V844, V857]

================================

Block 0xe01
[0xe01:0xe09]
---
Predecessors: [0xdf6]
Successors: []
---
0xe01 RETURNDATASIZE
0xe02 PUSH1 0x0
0xe04 DUP1
0xe05 RETURNDATACOPY
0xe06 RETURNDATASIZE
0xe07 PUSH1 0x0
0xe09 REVERT
---
0xe01: V860 = RETURNDATASIZE
0xe02: V861 = 0x0
0xe05: RETURNDATACOPY 0x0 0x0 V860
0xe06: V862 = RETURNDATASIZE
0xe07: V863 = 0x0
0xe09: REVERT 0x0 V862
---
Entry stack: [V11, S7, S6, S5, S4, S3, 0x49878f3, S1, V857]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S7, S6, S5, S4, S3, 0x49878f3, S1, V857]

================================

Block 0xe0a
[0xe0a:0xece]
---
Predecessors: [0xdf6]
Successors: [0xecf, 0xed3]
---
0xe0a JUMPDEST
0xe0b POP
0xe0c POP
0xe0d POP
0xe0e POP
0xe0f PUSH1 0x1
0xe11 PUSH1 0x0
0xe13 SWAP1
0xe14 SLOAD
0xe15 SWAP1
0xe16 PUSH2 0x100
0xe19 EXP
0xe1a SWAP1
0xe1b DIV
0xe1c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe31 AND
0xe32 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe47 AND
0xe48 PUSH4 0xa9059cbb
0xe4d CALLER
0xe4e DUP4
0xe4f PUSH1 0x40
0xe51 MLOAD
0xe52 DUP4
0xe53 PUSH4 0xffffffff
0xe58 AND
0xe59 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xe77 MUL
0xe78 DUP2
0xe79 MSTORE
0xe7a PUSH1 0x4
0xe7c ADD
0xe7d DUP1
0xe7e DUP4
0xe7f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe94 AND
0xe95 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xeaa AND
0xeab DUP2
0xeac MSTORE
0xead PUSH1 0x20
0xeaf ADD
0xeb0 DUP3
0xeb1 DUP2
0xeb2 MSTORE
0xeb3 PUSH1 0x20
0xeb5 ADD
0xeb6 SWAP3
0xeb7 POP
0xeb8 POP
0xeb9 POP
0xeba PUSH1 0x20
0xebc PUSH1 0x40
0xebe MLOAD
0xebf DUP1
0xec0 DUP4
0xec1 SUB
0xec2 DUP2
0xec3 PUSH1 0x0
0xec5 DUP8
0xec6 DUP1
0xec7 EXTCODESIZE
0xec8 ISZERO
0xec9 DUP1
0xeca ISZERO
0xecb PUSH2 0xed3
0xece JUMPI
---
0xe0a: JUMPDEST 
0xe0f: V864 = 0x1
0xe11: V865 = 0x0
0xe14: V866 = S[0x1]
0xe16: V867 = 0x100
0xe19: V868 = EXP 0x100 0x0
0xe1b: V869 = DIV V866 0x1
0xe1c: V870 = 0xffffffffffffffffffffffffffffffffffffffff
0xe31: V871 = AND 0xffffffffffffffffffffffffffffffffffffffff V869
0xe32: V872 = 0xffffffffffffffffffffffffffffffffffffffff
0xe47: V873 = AND 0xffffffffffffffffffffffffffffffffffffffff V871
0xe48: V874 = 0xa9059cbb
0xe4d: V875 = CALLER
0xe4f: V876 = 0x40
0xe51: V877 = M[0x40]
0xe53: V878 = 0xffffffff
0xe58: V879 = AND 0xffffffff 0xa9059cbb
0xe59: V880 = 0x100000000000000000000000000000000000000000000000000000000
0xe77: V881 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0xe79: M[V877] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xe7a: V882 = 0x4
0xe7c: V883 = ADD 0x4 V877
0xe7f: V884 = 0xffffffffffffffffffffffffffffffffffffffff
0xe94: V885 = AND 0xffffffffffffffffffffffffffffffffffffffff V875
0xe95: V886 = 0xffffffffffffffffffffffffffffffffffffffff
0xeaa: V887 = AND 0xffffffffffffffffffffffffffffffffffffffff V885
0xeac: M[V883] = V887
0xead: V888 = 0x20
0xeaf: V889 = ADD 0x20 V883
0xeb2: M[V889] = S4
0xeb3: V890 = 0x20
0xeb5: V891 = ADD 0x20 V889
0xeba: V892 = 0x20
0xebc: V893 = 0x40
0xebe: V894 = M[0x40]
0xec1: V895 = SUB V891 V894
0xec3: V896 = 0x0
0xec7: V897 = EXTCODESIZE V873
0xec8: V898 = ISZERO V897
0xeca: V899 = ISZERO V898
0xecb: V900 = 0xed3
0xece: JUMPI 0xed3 V899
---
Entry stack: [V11, S7, S6, S5, S4, S3, 0x49878f3, S1, V857]
Stack pops: 5
Stack additions: [S4, V873, 0xa9059cbb, V891, 0x20, V894, V895, V894, 0x0, V873, V898]
Exit stack: [V11, S7, S6, S5, S4, V873, 0xa9059cbb, V891, 0x20, V894, V895, V894, 0x0, V873, V898]

================================

Block 0xecf
[0xecf:0xed2]
---
Predecessors: [0xe0a]
Successors: []
---
0xecf PUSH1 0x0
0xed1 DUP1
0xed2 REVERT
---
0xecf: V901 = 0x0
0xed2: REVERT 0x0 0x0
---
Entry stack: [V11, S13, S12, S11, S10, V873, 0xa9059cbb, V891, 0x20, V894, V895, V894, 0x0, V873, V898]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S13, S12, S11, S10, V873, 0xa9059cbb, V891, 0x20, V894, V895, V894, 0x0, V873, V898]

================================

Block 0xed3
[0xed3:0xedd]
---
Predecessors: [0xe0a]
Successors: [0xede, 0xee7]
---
0xed3 JUMPDEST
0xed4 POP
0xed5 GAS
0xed6 CALL
0xed7 ISZERO
0xed8 DUP1
0xed9 ISZERO
0xeda PUSH2 0xee7
0xedd JUMPI
---
0xed3: JUMPDEST 
0xed5: V902 = GAS
0xed6: V903 = CALL V902 V873 0x0 V894 V895 V894 0x20
0xed7: V904 = ISZERO V903
0xed9: V905 = ISZERO V904
0xeda: V906 = 0xee7
0xedd: JUMPI 0xee7 V905
---
Entry stack: [V11, S13, S12, S11, S10, V873, 0xa9059cbb, V891, 0x20, V894, V895, V894, 0x0, V873, V898]
Stack pops: 7
Stack additions: [V904]
Exit stack: [V11, S13, S12, S11, S10, V873, 0xa9059cbb, V891, V904]

================================

Block 0xede
[0xede:0xee6]
---
Predecessors: [0xed3]
Successors: []
---
0xede RETURNDATASIZE
0xedf PUSH1 0x0
0xee1 DUP1
0xee2 RETURNDATACOPY
0xee3 RETURNDATASIZE
0xee4 PUSH1 0x0
0xee6 REVERT
---
0xede: V907 = RETURNDATASIZE
0xedf: V908 = 0x0
0xee2: RETURNDATACOPY 0x0 0x0 V907
0xee3: V909 = RETURNDATASIZE
0xee4: V910 = 0x0
0xee6: REVERT 0x0 V909
---
Entry stack: [V11, S7, S6, S5, S4, S3, 0xa9059cbb, S1, V904]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S7, S6, S5, S4, S3, 0xa9059cbb, S1, V904]

================================

Block 0xee7
[0xee7:0xef8]
---
Predecessors: [0xed3]
Successors: [0xef9, 0xefd]
---
0xee7 JUMPDEST
0xee8 POP
0xee9 POP
0xeea POP
0xeeb POP
0xeec PUSH1 0x40
0xeee MLOAD
0xeef RETURNDATASIZE
0xef0 PUSH1 0x20
0xef2 DUP2
0xef3 LT
0xef4 ISZERO
0xef5 PUSH2 0xefd
0xef8 JUMPI
---
0xee7: JUMPDEST 
0xeec: V911 = 0x40
0xeee: V912 = M[0x40]
0xeef: V913 = RETURNDATASIZE
0xef0: V914 = 0x20
0xef3: V915 = LT V913 0x20
0xef4: V916 = ISZERO V915
0xef5: V917 = 0xefd
0xef8: JUMPI 0xefd V916
---
Entry stack: [V11, S7, S6, S5, S4, S3, 0xa9059cbb, S1, V904]
Stack pops: 4
Stack additions: [V912, V913]
Exit stack: [V11, S7, S6, S5, S4, V912, V913]

================================

Block 0xef9
[0xef9:0xefc]
---
Predecessors: [0xee7]
Successors: []
---
0xef9 PUSH1 0x0
0xefb DUP1
0xefc REVERT
---
0xef9: V918 = 0x0
0xefc: REVERT 0x0 0x0
---
Entry stack: [V11, S5, S4, S3, S2, V912, V913]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S5, S4, S3, S2, V912, V913]

================================

Block 0xefd
[0xefd:0xf11]
---
Predecessors: [0xee7]
Successors: [0x238]
---
0xefd JUMPDEST
0xefe DUP2
0xeff ADD
0xf00 SWAP1
0xf01 DUP1
0xf02 DUP1
0xf03 MLOAD
0xf04 SWAP1
0xf05 PUSH1 0x20
0xf07 ADD
0xf08 SWAP1
0xf09 SWAP3
0xf0a SWAP2
0xf0b SWAP1
0xf0c POP
0xf0d POP
0xf0e POP
0xf0f POP
0xf10 POP
0xf11 JUMP
---
0xefd: JUMPDEST 
0xeff: V919 = ADD V912 V913
0xf03: V920 = M[V912]
0xf05: V921 = 0x20
0xf07: V922 = ADD 0x20 V912
0xf11: JUMP S3
---
Entry stack: [V11, S5, S4, S3, S2, V912, V913]
Stack pops: 4
Stack additions: []
Exit stack: [V11, S5, S4]

================================

Block 0xf12
[0xf12:0x1008]
---
Predecessors: [0x246]
Successors: [0x1009, 0x100d]
---
0xf12 JUMPDEST
0xf13 PUSH1 0x0
0xf15 PUSH1 0x1
0xf17 PUSH1 0x0
0xf19 SWAP1
0xf1a SLOAD
0xf1b SWAP1
0xf1c PUSH2 0x100
0xf1f EXP
0xf20 SWAP1
0xf21 DIV
0xf22 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf37 AND
0xf38 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf4d AND
0xf4e PUSH4 0x23b872dd
0xf53 CALLER
0xf54 ADDRESS
0xf55 DUP6
0xf56 PUSH1 0x40
0xf58 MLOAD
0xf59 DUP5
0xf5a PUSH4 0xffffffff
0xf5f AND
0xf60 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xf7e MUL
0xf7f DUP2
0xf80 MSTORE
0xf81 PUSH1 0x4
0xf83 ADD
0xf84 DUP1
0xf85 DUP5
0xf86 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf9b AND
0xf9c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfb1 AND
0xfb2 DUP2
0xfb3 MSTORE
0xfb4 PUSH1 0x20
0xfb6 ADD
0xfb7 DUP4
0xfb8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfcd AND
0xfce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfe3 AND
0xfe4 DUP2
0xfe5 MSTORE
0xfe6 PUSH1 0x20
0xfe8 ADD
0xfe9 DUP3
0xfea DUP2
0xfeb MSTORE
0xfec PUSH1 0x20
0xfee ADD
0xfef SWAP4
0xff0 POP
0xff1 POP
0xff2 POP
0xff3 POP
0xff4 PUSH1 0x20
0xff6 PUSH1 0x40
0xff8 MLOAD
0xff9 DUP1
0xffa DUP4
0xffb SUB
0xffc DUP2
0xffd PUSH1 0x0
0xfff DUP8
0x1000 DUP1
0x1001 EXTCODESIZE
0x1002 ISZERO
0x1003 DUP1
0x1004 ISZERO
0x1005 PUSH2 0x100d
0x1008 JUMPI
---
0xf12: JUMPDEST 
0xf13: V923 = 0x0
0xf15: V924 = 0x1
0xf17: V925 = 0x0
0xf1a: V926 = S[0x1]
0xf1c: V927 = 0x100
0xf1f: V928 = EXP 0x100 0x0
0xf21: V929 = DIV V926 0x1
0xf22: V930 = 0xffffffffffffffffffffffffffffffffffffffff
0xf37: V931 = AND 0xffffffffffffffffffffffffffffffffffffffff V929
0xf38: V932 = 0xffffffffffffffffffffffffffffffffffffffff
0xf4d: V933 = AND 0xffffffffffffffffffffffffffffffffffffffff V931
0xf4e: V934 = 0x23b872dd
0xf53: V935 = CALLER
0xf54: V936 = ADDRESS
0xf56: V937 = 0x40
0xf58: V938 = M[0x40]
0xf5a: V939 = 0xffffffff
0xf5f: V940 = AND 0xffffffff 0x23b872dd
0xf60: V941 = 0x100000000000000000000000000000000000000000000000000000000
0xf7e: V942 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x23b872dd
0xf80: M[V938] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0xf81: V943 = 0x4
0xf83: V944 = ADD 0x4 V938
0xf86: V945 = 0xffffffffffffffffffffffffffffffffffffffff
0xf9b: V946 = AND 0xffffffffffffffffffffffffffffffffffffffff V935
0xf9c: V947 = 0xffffffffffffffffffffffffffffffffffffffff
0xfb1: V948 = AND 0xffffffffffffffffffffffffffffffffffffffff V946
0xfb3: M[V944] = V948
0xfb4: V949 = 0x20
0xfb6: V950 = ADD 0x20 V944
0xfb8: V951 = 0xffffffffffffffffffffffffffffffffffffffff
0xfcd: V952 = AND 0xffffffffffffffffffffffffffffffffffffffff V936
0xfce: V953 = 0xffffffffffffffffffffffffffffffffffffffff
0xfe3: V954 = AND 0xffffffffffffffffffffffffffffffffffffffff V952
0xfe5: M[V950] = V954
0xfe6: V955 = 0x20
0xfe8: V956 = ADD 0x20 V950
0xfeb: M[V956] = V133
0xfec: V957 = 0x20
0xfee: V958 = ADD 0x20 V956
0xff4: V959 = 0x20
0xff6: V960 = 0x40
0xff8: V961 = M[0x40]
0xffb: V962 = SUB V958 V961
0xffd: V963 = 0x0
0x1001: V964 = EXTCODESIZE V933
0x1002: V965 = ISZERO V964
0x1004: V966 = ISZERO V965
0x1005: V967 = 0x100d
0x1008: JUMPI 0x100d V966
---
Entry stack: [V11, 0x265, V133]
Stack pops: 1
Stack additions: [S0, 0x0, V933, 0x23b872dd, V958, 0x20, V961, V962, V961, 0x0, V933, V965]
Exit stack: [V11, 0x265, V133, 0x0, V933, 0x23b872dd, V958, 0x20, V961, V962, V961, 0x0, V933, V965]

================================

Block 0x1009
[0x1009:0x100c]
---
Predecessors: [0xf12]
Successors: []
---
0x1009 PUSH1 0x0
0x100b DUP1
0x100c REVERT
---
0x1009: V968 = 0x0
0x100c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x265, V133, 0x0, V933, 0x23b872dd, V958, 0x20, V961, V962, V961, 0x0, V933, V965]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x265, V133, 0x0, V933, 0x23b872dd, V958, 0x20, V961, V962, V961, 0x0, V933, V965]

================================

Block 0x100d
[0x100d:0x1017]
---
Predecessors: [0xf12]
Successors: [0x1018, 0x1021]
---
0x100d JUMPDEST
0x100e POP
0x100f GAS
0x1010 CALL
0x1011 ISZERO
0x1012 DUP1
0x1013 ISZERO
0x1014 PUSH2 0x1021
0x1017 JUMPI
---
0x100d: JUMPDEST 
0x100f: V969 = GAS
0x1010: V970 = CALL V969 V933 0x0 V961 V962 V961 0x20
0x1011: V971 = ISZERO V970
0x1013: V972 = ISZERO V971
0x1014: V973 = 0x1021
0x1017: JUMPI 0x1021 V972
---
Entry stack: [V11, 0x265, V133, 0x0, V933, 0x23b872dd, V958, 0x20, V961, V962, V961, 0x0, V933, V965]
Stack pops: 7
Stack additions: [V971]
Exit stack: [V11, 0x265, V133, 0x0, V933, 0x23b872dd, V958, V971]

================================

Block 0x1018
[0x1018:0x1020]
---
Predecessors: [0x100d]
Successors: []
---
0x1018 RETURNDATASIZE
0x1019 PUSH1 0x0
0x101b DUP1
0x101c RETURNDATACOPY
0x101d RETURNDATASIZE
0x101e PUSH1 0x0
0x1020 REVERT
---
0x1018: V974 = RETURNDATASIZE
0x1019: V975 = 0x0
0x101c: RETURNDATACOPY 0x0 0x0 V974
0x101d: V976 = RETURNDATASIZE
0x101e: V977 = 0x0
0x1020: REVERT 0x0 V976
---
Entry stack: [V11, 0x265, V133, 0x0, V933, 0x23b872dd, V958, V971]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x265, V133, 0x0, V933, 0x23b872dd, V958, V971]

================================

Block 0x1021
[0x1021:0x1032]
---
Predecessors: [0x100d]
Successors: [0x1033, 0x1037]
---
0x1021 JUMPDEST
0x1022 POP
0x1023 POP
0x1024 POP
0x1025 POP
0x1026 PUSH1 0x40
0x1028 MLOAD
0x1029 RETURNDATASIZE
0x102a PUSH1 0x20
0x102c DUP2
0x102d LT
0x102e ISZERO
0x102f PUSH2 0x1037
0x1032 JUMPI
---
0x1021: JUMPDEST 
0x1026: V978 = 0x40
0x1028: V979 = M[0x40]
0x1029: V980 = RETURNDATASIZE
0x102a: V981 = 0x20
0x102d: V982 = LT V980 0x20
0x102e: V983 = ISZERO V982
0x102f: V984 = 0x1037
0x1032: JUMPI 0x1037 V983
---
Entry stack: [V11, 0x265, V133, 0x0, V933, 0x23b872dd, V958, V971]
Stack pops: 4
Stack additions: [V979, V980]
Exit stack: [V11, 0x265, V133, 0x0, V979, V980]

================================

Block 0x1033
[0x1033:0x1036]
---
Predecessors: [0x1021]
Successors: []
---
0x1033 PUSH1 0x0
0x1035 DUP1
0x1036 REVERT
---
0x1033: V985 = 0x0
0x1036: REVERT 0x0 0x0
---
Entry stack: [V11, 0x265, V133, 0x0, V979, V980]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x265, V133, 0x0, V979, V980]

================================

Block 0x1037
[0x1037:0x104e]
---
Predecessors: [0x1021]
Successors: [0x104f, 0x1053]
---
0x1037 JUMPDEST
0x1038 DUP2
0x1039 ADD
0x103a SWAP1
0x103b DUP1
0x103c DUP1
0x103d MLOAD
0x103e SWAP1
0x103f PUSH1 0x20
0x1041 ADD
0x1042 SWAP1
0x1043 SWAP3
0x1044 SWAP2
0x1045 SWAP1
0x1046 POP
0x1047 POP
0x1048 POP
0x1049 ISZERO
0x104a ISZERO
0x104b PUSH2 0x1053
0x104e JUMPI
---
0x1037: JUMPDEST 
0x1039: V986 = ADD V979 V980
0x103d: V987 = M[V979]
0x103f: V988 = 0x20
0x1041: V989 = ADD 0x20 V979
0x1049: V990 = ISZERO V987
0x104a: V991 = ISZERO V990
0x104b: V992 = 0x1053
0x104e: JUMPI 0x1053 V991
---
Entry stack: [V11, 0x265, V133, 0x0, V979, V980]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x265, V133, 0x0]

================================

Block 0x104f
[0x104f:0x1052]
---
Predecessors: [0x1037]
Successors: []
---
0x104f PUSH1 0x0
0x1051 DUP1
0x1052 REVERT
---
0x104f: V993 = 0x0
0x1052: REVERT 0x0 0x0
---
Entry stack: [V11, 0x265, V133, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x265, V133, 0x0]

================================

Block 0x1053
[0x1053:0x10df]
---
Predecessors: [0x1037]
Successors: [0x10e0, 0x10e4]
---
0x1053 JUMPDEST
0x1054 PUSH1 0x3
0x1056 PUSH1 0x0
0x1058 SWAP1
0x1059 SLOAD
0x105a SWAP1
0x105b PUSH2 0x100
0x105e EXP
0x105f SWAP1
0x1060 DIV
0x1061 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1076 AND
0x1077 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x108c AND
0x108d PUSH4 0x454a2ab3
0x1092 DUP4
0x1093 PUSH1 0x40
0x1095 MLOAD
0x1096 DUP3
0x1097 PUSH4 0xffffffff
0x109c AND
0x109d PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x10bb MUL
0x10bc DUP2
0x10bd MSTORE
0x10be PUSH1 0x4
0x10c0 ADD
0x10c1 DUP1
0x10c2 DUP3
0x10c3 DUP2
0x10c4 MSTORE
0x10c5 PUSH1 0x20
0x10c7 ADD
0x10c8 SWAP2
0x10c9 POP
0x10ca POP
0x10cb PUSH1 0x20
0x10cd PUSH1 0x40
0x10cf MLOAD
0x10d0 DUP1
0x10d1 DUP4
0x10d2 SUB
0x10d3 DUP2
0x10d4 PUSH1 0x0
0x10d6 DUP8
0x10d7 DUP1
0x10d8 EXTCODESIZE
0x10d9 ISZERO
0x10da DUP1
0x10db ISZERO
0x10dc PUSH2 0x10e4
0x10df JUMPI
---
0x1053: JUMPDEST 
0x1054: V994 = 0x3
0x1056: V995 = 0x0
0x1059: V996 = S[0x3]
0x105b: V997 = 0x100
0x105e: V998 = EXP 0x100 0x0
0x1060: V999 = DIV V996 0x1
0x1061: V1000 = 0xffffffffffffffffffffffffffffffffffffffff
0x1076: V1001 = AND 0xffffffffffffffffffffffffffffffffffffffff V999
0x1077: V1002 = 0xffffffffffffffffffffffffffffffffffffffff
0x108c: V1003 = AND 0xffffffffffffffffffffffffffffffffffffffff V1001
0x108d: V1004 = 0x454a2ab3
0x1093: V1005 = 0x40
0x1095: V1006 = M[0x40]
0x1097: V1007 = 0xffffffff
0x109c: V1008 = AND 0xffffffff 0x454a2ab3
0x109d: V1009 = 0x100000000000000000000000000000000000000000000000000000000
0x10bb: V1010 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x454a2ab3
0x10bd: M[V1006] = 0x454a2ab300000000000000000000000000000000000000000000000000000000
0x10be: V1011 = 0x4
0x10c0: V1012 = ADD 0x4 V1006
0x10c4: M[V1012] = V133
0x10c5: V1013 = 0x20
0x10c7: V1014 = ADD 0x20 V1012
0x10cb: V1015 = 0x20
0x10cd: V1016 = 0x40
0x10cf: V1017 = M[0x40]
0x10d2: V1018 = SUB V1014 V1017
0x10d4: V1019 = 0x0
0x10d8: V1020 = EXTCODESIZE V1003
0x10d9: V1021 = ISZERO V1020
0x10db: V1022 = ISZERO V1021
0x10dc: V1023 = 0x10e4
0x10df: JUMPI 0x10e4 V1022
---
Entry stack: [V11, 0x265, V133, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V1003, 0x454a2ab3, V1014, 0x20, V1017, V1018, V1017, 0x0, V1003, V1021]
Exit stack: [V11, 0x265, V133, 0x0, V1003, 0x454a2ab3, V1014, 0x20, V1017, V1018, V1017, 0x0, V1003, V1021]

================================

Block 0x10e0
[0x10e0:0x10e3]
---
Predecessors: [0x1053]
Successors: []
---
0x10e0 PUSH1 0x0
0x10e2 DUP1
0x10e3 REVERT
---
0x10e0: V1024 = 0x0
0x10e3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x265, V133, 0x0, V1003, 0x454a2ab3, V1014, 0x20, V1017, V1018, V1017, 0x0, V1003, V1021]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x265, V133, 0x0, V1003, 0x454a2ab3, V1014, 0x20, V1017, V1018, V1017, 0x0, V1003, V1021]

================================

Block 0x10e4
[0x10e4:0x10ee]
---
Predecessors: [0x1053]
Successors: [0x10ef, 0x10f8]
---
0x10e4 JUMPDEST
0x10e5 POP
0x10e6 GAS
0x10e7 CALL
0x10e8 ISZERO
0x10e9 DUP1
0x10ea ISZERO
0x10eb PUSH2 0x10f8
0x10ee JUMPI
---
0x10e4: JUMPDEST 
0x10e6: V1025 = GAS
0x10e7: V1026 = CALL V1025 V1003 0x0 V1017 V1018 V1017 0x20
0x10e8: V1027 = ISZERO V1026
0x10ea: V1028 = ISZERO V1027
0x10eb: V1029 = 0x10f8
0x10ee: JUMPI 0x10f8 V1028
---
Entry stack: [V11, 0x265, V133, 0x0, V1003, 0x454a2ab3, V1014, 0x20, V1017, V1018, V1017, 0x0, V1003, V1021]
Stack pops: 7
Stack additions: [V1027]
Exit stack: [V11, 0x265, V133, 0x0, V1003, 0x454a2ab3, V1014, V1027]

================================

Block 0x10ef
[0x10ef:0x10f7]
---
Predecessors: [0x10e4]
Successors: []
---
0x10ef RETURNDATASIZE
0x10f0 PUSH1 0x0
0x10f2 DUP1
0x10f3 RETURNDATACOPY
0x10f4 RETURNDATASIZE
0x10f5 PUSH1 0x0
0x10f7 REVERT
---
0x10ef: V1030 = RETURNDATASIZE
0x10f0: V1031 = 0x0
0x10f3: RETURNDATACOPY 0x0 0x0 V1030
0x10f4: V1032 = RETURNDATASIZE
0x10f5: V1033 = 0x0
0x10f7: REVERT 0x0 V1032
---
Entry stack: [V11, 0x265, V133, 0x0, V1003, 0x454a2ab3, V1014, V1027]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x265, V133, 0x0, V1003, 0x454a2ab3, V1014, V1027]

================================

Block 0x10f8
[0x10f8:0x1109]
---
Predecessors: [0x10e4]
Successors: [0x110a, 0x110e]
---
0x10f8 JUMPDEST
0x10f9 POP
0x10fa POP
0x10fb POP
0x10fc POP
0x10fd PUSH1 0x40
0x10ff MLOAD
0x1100 RETURNDATASIZE
0x1101 PUSH1 0x20
0x1103 DUP2
0x1104 LT
0x1105 ISZERO
0x1106 PUSH2 0x110e
0x1109 JUMPI
---
0x10f8: JUMPDEST 
0x10fd: V1034 = 0x40
0x10ff: V1035 = M[0x40]
0x1100: V1036 = RETURNDATASIZE
0x1101: V1037 = 0x20
0x1104: V1038 = LT V1036 0x20
0x1105: V1039 = ISZERO V1038
0x1106: V1040 = 0x110e
0x1109: JUMPI 0x110e V1039
---
Entry stack: [V11, 0x265, V133, 0x0, V1003, 0x454a2ab3, V1014, V1027]
Stack pops: 4
Stack additions: [V1035, V1036]
Exit stack: [V11, 0x265, V133, 0x0, V1035, V1036]

================================

Block 0x110a
[0x110a:0x110d]
---
Predecessors: [0x10f8]
Successors: []
---
0x110a PUSH1 0x0
0x110c DUP1
0x110d REVERT
---
0x110a: V1041 = 0x0
0x110d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x265, V133, 0x0, V1035, V1036]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x265, V133, 0x0, V1035, V1036]

================================

Block 0x110e
[0x110e:0x11ad]
---
Predecessors: [0x10f8]
Successors: [0x11ae, 0x11b2]
---
0x110e JUMPDEST
0x110f DUP2
0x1110 ADD
0x1111 SWAP1
0x1112 DUP1
0x1113 DUP1
0x1114 MLOAD
0x1115 SWAP1
0x1116 PUSH1 0x20
0x1118 ADD
0x1119 SWAP1
0x111a SWAP3
0x111b SWAP2
0x111c SWAP1
0x111d POP
0x111e POP
0x111f POP
0x1120 SWAP1
0x1121 POP
0x1122 PUSH1 0x3
0x1124 PUSH1 0x0
0x1126 SWAP1
0x1127 SLOAD
0x1128 SWAP1
0x1129 PUSH2 0x100
0x112c EXP
0x112d SWAP1
0x112e DIV
0x112f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1144 AND
0x1145 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x115a AND
0x115b PUSH4 0x7f8661a1
0x1160 DUP4
0x1161 PUSH1 0x40
0x1163 MLOAD
0x1164 DUP3
0x1165 PUSH4 0xffffffff
0x116a AND
0x116b PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1189 MUL
0x118a DUP2
0x118b MSTORE
0x118c PUSH1 0x4
0x118e ADD
0x118f DUP1
0x1190 DUP3
0x1191 DUP2
0x1192 MSTORE
0x1193 PUSH1 0x20
0x1195 ADD
0x1196 SWAP2
0x1197 POP
0x1198 POP
0x1199 PUSH1 0x0
0x119b PUSH1 0x40
0x119d MLOAD
0x119e DUP1
0x119f DUP4
0x11a0 SUB
0x11a1 DUP2
0x11a2 PUSH1 0x0
0x11a4 DUP8
0x11a5 DUP1
0x11a6 EXTCODESIZE
0x11a7 ISZERO
0x11a8 DUP1
0x11a9 ISZERO
0x11aa PUSH2 0x11b2
0x11ad JUMPI
---
0x110e: JUMPDEST 
0x1110: V1042 = ADD V1035 V1036
0x1114: V1043 = M[V1035]
0x1116: V1044 = 0x20
0x1118: V1045 = ADD 0x20 V1035
0x1122: V1046 = 0x3
0x1124: V1047 = 0x0
0x1127: V1048 = S[0x3]
0x1129: V1049 = 0x100
0x112c: V1050 = EXP 0x100 0x0
0x112e: V1051 = DIV V1048 0x1
0x112f: V1052 = 0xffffffffffffffffffffffffffffffffffffffff
0x1144: V1053 = AND 0xffffffffffffffffffffffffffffffffffffffff V1051
0x1145: V1054 = 0xffffffffffffffffffffffffffffffffffffffff
0x115a: V1055 = AND 0xffffffffffffffffffffffffffffffffffffffff V1053
0x115b: V1056 = 0x7f8661a1
0x1161: V1057 = 0x40
0x1163: V1058 = M[0x40]
0x1165: V1059 = 0xffffffff
0x116a: V1060 = AND 0xffffffff 0x7f8661a1
0x116b: V1061 = 0x100000000000000000000000000000000000000000000000000000000
0x1189: V1062 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x7f8661a1
0x118b: M[V1058] = 0x7f8661a100000000000000000000000000000000000000000000000000000000
0x118c: V1063 = 0x4
0x118e: V1064 = ADD 0x4 V1058
0x1192: M[V1064] = V133
0x1193: V1065 = 0x20
0x1195: V1066 = ADD 0x20 V1064
0x1199: V1067 = 0x0
0x119b: V1068 = 0x40
0x119d: V1069 = M[0x40]
0x11a0: V1070 = SUB V1066 V1069
0x11a2: V1071 = 0x0
0x11a6: V1072 = EXTCODESIZE V1055
0x11a7: V1073 = ISZERO V1072
0x11a9: V1074 = ISZERO V1073
0x11aa: V1075 = 0x11b2
0x11ad: JUMPI 0x11b2 V1074
---
Entry stack: [V11, 0x265, V133, 0x0, V1035, V1036]
Stack pops: 4
Stack additions: [S3, V1043, V1055, 0x7f8661a1, V1066, 0x0, V1069, V1070, V1069, 0x0, V1055, V1073]
Exit stack: [V11, 0x265, V133, V1043, V1055, 0x7f8661a1, V1066, 0x0, V1069, V1070, V1069, 0x0, V1055, V1073]

================================

Block 0x11ae
[0x11ae:0x11b1]
---
Predecessors: [0x110e]
Successors: []
---
0x11ae PUSH1 0x0
0x11b0 DUP1
0x11b1 REVERT
---
0x11ae: V1076 = 0x0
0x11b1: REVERT 0x0 0x0
---
Entry stack: [V11, 0x265, V133, V1043, V1055, 0x7f8661a1, V1066, 0x0, V1069, V1070, V1069, 0x0, V1055, V1073]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x265, V133, V1043, V1055, 0x7f8661a1, V1066, 0x0, V1069, V1070, V1069, 0x0, V1055, V1073]

================================

Block 0x11b2
[0x11b2:0x11bc]
---
Predecessors: [0x110e]
Successors: [0x11bd, 0x11c6]
---
0x11b2 JUMPDEST
0x11b3 POP
0x11b4 GAS
0x11b5 CALL
0x11b6 ISZERO
0x11b7 DUP1
0x11b8 ISZERO
0x11b9 PUSH2 0x11c6
0x11bc JUMPI
---
0x11b2: JUMPDEST 
0x11b4: V1077 = GAS
0x11b5: V1078 = CALL V1077 V1055 0x0 V1069 V1070 V1069 0x0
0x11b6: V1079 = ISZERO V1078
0x11b8: V1080 = ISZERO V1079
0x11b9: V1081 = 0x11c6
0x11bc: JUMPI 0x11c6 V1080
---
Entry stack: [V11, 0x265, V133, V1043, V1055, 0x7f8661a1, V1066, 0x0, V1069, V1070, V1069, 0x0, V1055, V1073]
Stack pops: 7
Stack additions: [V1079]
Exit stack: [V11, 0x265, V133, V1043, V1055, 0x7f8661a1, V1066, V1079]

================================

Block 0x11bd
[0x11bd:0x11c5]
---
Predecessors: [0x11b2]
Successors: []
---
0x11bd RETURNDATASIZE
0x11be PUSH1 0x0
0x11c0 DUP1
0x11c1 RETURNDATACOPY
0x11c2 RETURNDATASIZE
0x11c3 PUSH1 0x0
0x11c5 REVERT
---
0x11bd: V1082 = RETURNDATASIZE
0x11be: V1083 = 0x0
0x11c1: RETURNDATACOPY 0x0 0x0 V1082
0x11c2: V1084 = RETURNDATASIZE
0x11c3: V1085 = 0x0
0x11c5: REVERT 0x0 V1084
---
Entry stack: [V11, 0x265, V133, V1043, V1055, 0x7f8661a1, V1066, V1079]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x265, V133, V1043, V1055, 0x7f8661a1, V1066, V1079]

================================

Block 0x11c6
[0x11c6:0x1255]
---
Predecessors: [0x11b2]
Successors: [0x1256, 0x125a]
---
0x11c6 JUMPDEST
0x11c7 POP
0x11c8 POP
0x11c9 POP
0x11ca POP
0x11cb PUSH1 0x0
0x11cd DUP1
0x11ce SWAP1
0x11cf SLOAD
0x11d0 SWAP1
0x11d1 PUSH2 0x100
0x11d4 EXP
0x11d5 SWAP1
0x11d6 DIV
0x11d7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11ec AND
0x11ed PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1202 AND
0x1203 PUSH4 0x2e1a7d4d
0x1208 DUP3
0x1209 PUSH1 0x40
0x120b MLOAD
0x120c DUP3
0x120d PUSH4 0xffffffff
0x1212 AND
0x1213 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1231 MUL
0x1232 DUP2
0x1233 MSTORE
0x1234 PUSH1 0x4
0x1236 ADD
0x1237 DUP1
0x1238 DUP3
0x1239 DUP2
0x123a MSTORE
0x123b PUSH1 0x20
0x123d ADD
0x123e SWAP2
0x123f POP
0x1240 POP
0x1241 PUSH1 0x0
0x1243 PUSH1 0x40
0x1245 MLOAD
0x1246 DUP1
0x1247 DUP4
0x1248 SUB
0x1249 DUP2
0x124a PUSH1 0x0
0x124c DUP8
0x124d DUP1
0x124e EXTCODESIZE
0x124f ISZERO
0x1250 DUP1
0x1251 ISZERO
0x1252 PUSH2 0x125a
0x1255 JUMPI
---
0x11c6: JUMPDEST 
0x11cb: V1086 = 0x0
0x11cf: V1087 = S[0x0]
0x11d1: V1088 = 0x100
0x11d4: V1089 = EXP 0x100 0x0
0x11d6: V1090 = DIV V1087 0x1
0x11d7: V1091 = 0xffffffffffffffffffffffffffffffffffffffff
0x11ec: V1092 = AND 0xffffffffffffffffffffffffffffffffffffffff V1090
0x11ed: V1093 = 0xffffffffffffffffffffffffffffffffffffffff
0x1202: V1094 = AND 0xffffffffffffffffffffffffffffffffffffffff V1092
0x1203: V1095 = 0x2e1a7d4d
0x1209: V1096 = 0x40
0x120b: V1097 = M[0x40]
0x120d: V1098 = 0xffffffff
0x1212: V1099 = AND 0xffffffff 0x2e1a7d4d
0x1213: V1100 = 0x100000000000000000000000000000000000000000000000000000000
0x1231: V1101 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x2e1a7d4d
0x1233: M[V1097] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
0x1234: V1102 = 0x4
0x1236: V1103 = ADD 0x4 V1097
0x123a: M[V1103] = V1043
0x123b: V1104 = 0x20
0x123d: V1105 = ADD 0x20 V1103
0x1241: V1106 = 0x0
0x1243: V1107 = 0x40
0x1245: V1108 = M[0x40]
0x1248: V1109 = SUB V1105 V1108
0x124a: V1110 = 0x0
0x124e: V1111 = EXTCODESIZE V1094
0x124f: V1112 = ISZERO V1111
0x1251: V1113 = ISZERO V1112
0x1252: V1114 = 0x125a
0x1255: JUMPI 0x125a V1113
---
Entry stack: [V11, 0x265, V133, V1043, V1055, 0x7f8661a1, V1066, V1079]
Stack pops: 5
Stack additions: [S4, V1094, 0x2e1a7d4d, V1105, 0x0, V1108, V1109, V1108, 0x0, V1094, V1112]
Exit stack: [V11, 0x265, V133, V1043, V1094, 0x2e1a7d4d, V1105, 0x0, V1108, V1109, V1108, 0x0, V1094, V1112]

================================

Block 0x1256
[0x1256:0x1259]
---
Predecessors: [0x11c6]
Successors: []
---
0x1256 PUSH1 0x0
0x1258 DUP1
0x1259 REVERT
---
0x1256: V1115 = 0x0
0x1259: REVERT 0x0 0x0
---
Entry stack: [V11, 0x265, V133, V1043, V1094, 0x2e1a7d4d, V1105, 0x0, V1108, V1109, V1108, 0x0, V1094, V1112]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x265, V133, V1043, V1094, 0x2e1a7d4d, V1105, 0x0, V1108, V1109, V1108, 0x0, V1094, V1112]

================================

Block 0x125a
[0x125a:0x1264]
---
Predecessors: [0x11c6]
Successors: [0x1265, 0x126e]
---
0x125a JUMPDEST
0x125b POP
0x125c GAS
0x125d CALL
0x125e ISZERO
0x125f DUP1
0x1260 ISZERO
0x1261 PUSH2 0x126e
0x1264 JUMPI
---
0x125a: JUMPDEST 
0x125c: V1116 = GAS
0x125d: V1117 = CALL V1116 V1094 0x0 V1108 V1109 V1108 0x0
0x125e: V1118 = ISZERO V1117
0x1260: V1119 = ISZERO V1118
0x1261: V1120 = 0x126e
0x1264: JUMPI 0x126e V1119
---
Entry stack: [V11, 0x265, V133, V1043, V1094, 0x2e1a7d4d, V1105, 0x0, V1108, V1109, V1108, 0x0, V1094, V1112]
Stack pops: 7
Stack additions: [V1118]
Exit stack: [V11, 0x265, V133, V1043, V1094, 0x2e1a7d4d, V1105, V1118]

================================

Block 0x1265
[0x1265:0x126d]
---
Predecessors: [0x125a]
Successors: []
---
0x1265 RETURNDATASIZE
0x1266 PUSH1 0x0
0x1268 DUP1
0x1269 RETURNDATACOPY
0x126a RETURNDATASIZE
0x126b PUSH1 0x0
0x126d REVERT
---
0x1265: V1121 = RETURNDATASIZE
0x1266: V1122 = 0x0
0x1269: RETURNDATACOPY 0x0 0x0 V1121
0x126a: V1123 = RETURNDATASIZE
0x126b: V1124 = 0x0
0x126d: REVERT 0x0 V1123
---
Entry stack: [V11, 0x265, V133, V1043, V1094, 0x2e1a7d4d, V1105, V1118]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x265, V133, V1043, V1094, 0x2e1a7d4d, V1105, V1118]

================================

Block 0x126e
[0x126e:0x12ae]
---
Predecessors: [0x125a]
Successors: [0x12af, 0x12b8]
---
0x126e JUMPDEST
0x126f POP
0x1270 POP
0x1271 POP
0x1272 POP
0x1273 CALLER
0x1274 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1289 AND
0x128a PUSH2 0x8fc
0x128d DUP3
0x128e SWAP1
0x128f DUP2
0x1290 ISZERO
0x1291 MUL
0x1292 SWAP1
0x1293 PUSH1 0x40
0x1295 MLOAD
0x1296 PUSH1 0x0
0x1298 PUSH1 0x40
0x129a MLOAD
0x129b DUP1
0x129c DUP4
0x129d SUB
0x129e DUP2
0x129f DUP6
0x12a0 DUP9
0x12a1 DUP9
0x12a2 CALL
0x12a3 SWAP4
0x12a4 POP
0x12a5 POP
0x12a6 POP
0x12a7 POP
0x12a8 ISZERO
0x12a9 DUP1
0x12aa ISZERO
0x12ab PUSH2 0x12b8
0x12ae JUMPI
---
0x126e: JUMPDEST 
0x1273: V1125 = CALLER
0x1274: V1126 = 0xffffffffffffffffffffffffffffffffffffffff
0x1289: V1127 = AND 0xffffffffffffffffffffffffffffffffffffffff V1125
0x128a: V1128 = 0x8fc
0x1290: V1129 = ISZERO V1043
0x1291: V1130 = MUL V1129 0x8fc
0x1293: V1131 = 0x40
0x1295: V1132 = M[0x40]
0x1296: V1133 = 0x0
0x1298: V1134 = 0x40
0x129a: V1135 = M[0x40]
0x129d: V1136 = SUB V1132 V1135
0x12a2: V1137 = CALL V1130 V1127 V1043 V1135 V1136 V1135 0x0
0x12a8: V1138 = ISZERO V1137
0x12aa: V1139 = ISZERO V1138
0x12ab: V1140 = 0x12b8
0x12ae: JUMPI 0x12b8 V1139
---
Entry stack: [V11, 0x265, V133, V1043, V1094, 0x2e1a7d4d, V1105, V1118]
Stack pops: 5
Stack additions: [S4, V1138]
Exit stack: [V11, 0x265, V133, V1043, V1138]

================================

Block 0x12af
[0x12af:0x12b7]
---
Predecessors: [0x126e]
Successors: []
---
0x12af RETURNDATASIZE
0x12b0 PUSH1 0x0
0x12b2 DUP1
0x12b3 RETURNDATACOPY
0x12b4 RETURNDATASIZE
0x12b5 PUSH1 0x0
0x12b7 REVERT
---
0x12af: V1141 = RETURNDATASIZE
0x12b0: V1142 = 0x0
0x12b3: RETURNDATACOPY 0x0 0x0 V1141
0x12b4: V1143 = RETURNDATASIZE
0x12b5: V1144 = 0x0
0x12b7: REVERT 0x0 V1143
---
Entry stack: [V11, 0x265, V133, V1043, V1138]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x265, V133, V1043, V1138]

================================

Block 0x12b8
[0x12b8:0x12bc]
---
Predecessors: [0x126e]
Successors: [0x265]
---
0x12b8 JUMPDEST
0x12b9 POP
0x12ba POP
0x12bb POP
0x12bc JUMP
---
0x12b8: JUMPDEST 
0x12bc: JUMP 0x265
---
Entry stack: [V11, 0x265, V133, V1043, V1138]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x12bd
[0x12bd:0x12e2]
---
Predecessors: [0x273]
Successors: [0x27c]
---
0x12bd JUMPDEST
0x12be PUSH1 0x2
0x12c0 PUSH1 0x0
0x12c2 SWAP1
0x12c3 SLOAD
0x12c4 SWAP1
0x12c5 PUSH2 0x100
0x12c8 EXP
0x12c9 SWAP1
0x12ca DIV
0x12cb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12e0 AND
0x12e1 DUP2
0x12e2 JUMP
---
0x12bd: JUMPDEST 
0x12be: V1145 = 0x2
0x12c0: V1146 = 0x0
0x12c3: V1147 = S[0x2]
0x12c5: V1148 = 0x100
0x12c8: V1149 = EXP 0x100 0x0
0x12ca: V1150 = DIV V1147 0x1
0x12cb: V1151 = 0xffffffffffffffffffffffffffffffffffffffff
0x12e0: V1152 = AND 0xffffffffffffffffffffffffffffffffffffffff V1150
0x12e2: JUMP 0x27c
---
Entry stack: [V11, 0x27c]
Stack pops: 1
Stack additions: [S0, V1152]
Exit stack: [V11, 0x27c, V1152]

================================

Block 0x12e3
[0x12e3:0x12fe]
---
Predecessors: [0x4a6, 0xabe, 0xd4d]
Successors: [0x1323]
---
0x12e3 JUMPDEST
0x12e4 PUSH1 0x0
0x12e6 DUP2
0x12e7 PUSH2 0x1311
0x12ea PUSH2 0x12ff
0x12ed DUP6
0x12ee PUSH12 0x33b2e3c9fd0803ce8000000
0x12fb PUSH2 0x1323
0x12fe JUMP
---
0x12e3: JUMPDEST 
0x12e4: V1153 = 0x0
0x12e7: V1154 = 0x1311
0x12ea: V1155 = 0x12ff
0x12ee: V1156 = 0x33b2e3c9fd0803ce8000000
0x12fb: V1157 = 0x1323
0x12fe: JUMP 0x1323
---
Entry stack: [V11, S6, S5, S4, 0x0, {0x4bc, 0xad4, 0xd63}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, S0, 0x1311, 0x12ff, S1, 0x33b2e3c9fd0803ce8000000]
Exit stack: [V11, S6, S5, S4, 0x0, {0x4bc, 0xad4, 0xd63}, S1, S0, 0x0, S0, 0x1311, 0x12ff, S1, 0x33b2e3c9fd0803ce8000000]

================================

Block 0x12ff
[0x12ff:0x1309]
---
Predecessors: [0x134d]
Successors: [0x130a, 0x130b]
---
0x12ff JUMPDEST
0x1300 PUSH1 0x2
0x1302 DUP6
0x1303 DUP2
0x1304 ISZERO
0x1305 ISZERO
0x1306 PUSH2 0x130b
0x1309 JUMPI
---
0x12ff: JUMPDEST 
0x1300: V1158 = 0x2
0x1304: V1159 = ISZERO 0x2
0x1305: V1160 = ISZERO 0x0
0x1306: V1161 = 0x130b
0x1309: JUMPI 0x130b 0x1
---
Entry stack: [V11, S10, S9, S8, 0x0, {0x4bc, 0xad4, 0xd63}, S5, S4, 0x0, S2, 0x1311, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x2, S4]
Exit stack: [V11, S10, S9, S8, 0x0, {0x4bc, 0xad4, 0xd63}, S5, S4, 0x0, S2, 0x1311, S0, 0x2, S4]

================================

Block 0x130a
[0x130a:0x130a]
---
Predecessors: [0x12ff]
Successors: []
---
0x130a INVALID
---
0x130a: INVALID 
---
Entry stack: [V11, S12, S11, S10, 0x0, {0x4bc, 0xad4, 0xd63}, S7, S6, 0x0, S4, 0x1311, S2, 0x2, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S12, S11, S10, 0x0, {0x4bc, 0xad4, 0xd63}, S7, S6, 0x0, S4, 0x1311, S2, 0x2, S0]

================================

Block 0x130b
[0x130b:0x1310]
---
Predecessors: [0x12ff]
Successors: [0x1353]
---
0x130b JUMPDEST
0x130c DIV
0x130d PUSH2 0x1353
0x1310 JUMP
---
0x130b: JUMPDEST 
0x130c: V1162 = DIV S0 0x2
0x130d: V1163 = 0x1353
0x1310: JUMP 0x1353
---
Entry stack: [V11, S12, S11, S10, 0x0, {0x4bc, 0xad4, 0xd63}, S7, S6, 0x0, S4, 0x1311, S2, 0x2, S0]
Stack pops: 2
Stack additions: [V1162]
Exit stack: [V11, S12, S11, S10, 0x0, {0x4bc, 0xad4, 0xd63}, S7, S6, 0x0, S4, 0x1311, S2, V1162]

================================

Block 0x1311
[0x1311:0x1318]
---
Predecessors: [0x1369]
Successors: [0x1319, 0x131a]
---
0x1311 JUMPDEST
0x1312 DUP2
0x1313 ISZERO
0x1314 ISZERO
0x1315 PUSH2 0x131a
0x1318 JUMPI
---
0x1311: JUMPDEST 
0x1313: V1164 = ISZERO S1
0x1314: V1165 = ISZERO V1164
0x1315: V1166 = 0x131a
0x1318: JUMPI 0x131a V1165
---
Entry stack: [V11, S9, S8, S7, 0x0, {0x4bc, 0xad4, 0xd63}, S4, S3, 0x0, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, S9, S8, S7, 0x0, {0x4bc, 0xad4, 0xd63}, S4, S3, 0x0, S1, S0]

================================

Block 0x1319
[0x1319:0x1319]
---
Predecessors: [0x1311]
Successors: []
---
0x1319 INVALID
---
0x1319: INVALID 
---
Entry stack: [V11, S9, S8, S7, 0x0, {0x4bc, 0xad4, 0xd63}, S4, S3, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S9, S8, S7, 0x0, {0x4bc, 0xad4, 0xd63}, S4, S3, 0x0, S1, S0]

================================

Block 0x131a
[0x131a:0x1322]
---
Predecessors: [0x1311]
Successors: [0x4bc, 0xad4, 0xd63]
---
0x131a JUMPDEST
0x131b DIV
0x131c SWAP1
0x131d POP
0x131e SWAP3
0x131f SWAP2
0x1320 POP
0x1321 POP
0x1322 JUMP
---
0x131a: JUMPDEST 
0x131b: V1167 = DIV S0 S1
0x1322: JUMP {0x4bc, 0xad4, 0xd63}
---
Entry stack: [V11, S9, S8, S7, 0x0, {0x4bc, 0xad4, 0xd63}, S4, S3, 0x0, S1, S0]
Stack pops: 6
Stack additions: [V1167]
Exit stack: [V11, S9, S8, S7, 0x0, V1167]

================================

Block 0x1323
[0x1323:0x132d]
---
Predecessors: [0x12e3]
Successors: [0x132e, 0x1342]
---
0x1323 JUMPDEST
0x1324 PUSH1 0x0
0x1326 DUP1
0x1327 DUP3
0x1328 EQ
0x1329 DUP1
0x132a PUSH2 0x1342
0x132d JUMPI
---
0x1323: JUMPDEST 
0x1324: V1168 = 0x0
0x1328: V1169 = EQ 0x33b2e3c9fd0803ce8000000 0x0
0x132a: V1170 = 0x1342
0x132d: JUMPI 0x1342 0x0
---
Entry stack: [V11, S12, S11, S10, 0x0, {0x4bc, 0xad4, 0xd63}, S7, S6, 0x0, S4, 0x1311, 0x12ff, S1, 0x33b2e3c9fd0803ce8000000]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0]
Exit stack: [V11, S12, S11, S10, 0x0, {0x4bc, 0xad4, 0xd63}, S7, S6, 0x0, S4, 0x1311, 0x12ff, S1, 0x33b2e3c9fd0803ce8000000, 0x0, 0x0]

================================

Block 0x132e
[0x132e:0x133d]
---
Predecessors: [0x1323]
Successors: [0x133e, 0x133f]
---
0x132e POP
0x132f DUP3
0x1330 DUP3
0x1331 DUP4
0x1332 DUP6
0x1333 MUL
0x1334 SWAP3
0x1335 POP
0x1336 DUP3
0x1337 DUP2
0x1338 ISZERO
0x1339 ISZERO
0x133a PUSH2 0x133f
0x133d JUMPI
---
0x1333: V1171 = MUL S3 0x33b2e3c9fd0803ce8000000
0x1338: V1172 = ISZERO 0x33b2e3c9fd0803ce8000000
0x1339: V1173 = ISZERO 0x0
0x133a: V1174 = 0x133f
0x133d: JUMPI 0x133f 0x1
---
Entry stack: [V11, S14, S13, S12, 0x0, {0x4bc, 0xad4, 0xd63}, S9, S8, 0x0, S6, 0x1311, 0x12ff, S3, 0x33b2e3c9fd0803ce8000000, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, V1171, S3, S2, V1171]
Exit stack: [V11, S14, S13, S12, 0x0, {0x4bc, 0xad4, 0xd63}, S9, S8, 0x0, S6, 0x1311, 0x12ff, S3, 0x33b2e3c9fd0803ce8000000, V1171, S3, 0x33b2e3c9fd0803ce8000000, V1171]

================================

Block 0x133e
[0x133e:0x133e]
---
Predecessors: [0x132e]
Successors: []
---
0x133e INVALID
---
0x133e: INVALID 
---
Entry stack: [V11, S16, S15, S14, 0x0, {0x4bc, 0xad4, 0xd63}, S11, S10, 0x0, S8, 0x1311, 0x12ff, S5, 0x33b2e3c9fd0803ce8000000, V1171, S2, 0x33b2e3c9fd0803ce8000000, V1171]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S16, S15, S14, 0x0, {0x4bc, 0xad4, 0xd63}, S11, S10, 0x0, S8, 0x1311, 0x12ff, S5, 0x33b2e3c9fd0803ce8000000, V1171, S2, 0x33b2e3c9fd0803ce8000000, V1171]

================================

Block 0x133f
[0x133f:0x1341]
---
Predecessors: [0x132e]
Successors: [0x1342]
---
0x133f JUMPDEST
0x1340 DIV
0x1341 EQ
---
0x133f: JUMPDEST 
0x1340: V1175 = DIV V1171 0x33b2e3c9fd0803ce8000000
0x1341: V1176 = EQ V1175 S2
---
Entry stack: [V11, S16, S15, S14, 0x0, {0x4bc, 0xad4, 0xd63}, S11, S10, 0x0, S8, 0x1311, 0x12ff, S5, 0x33b2e3c9fd0803ce8000000, V1171, S2, 0x33b2e3c9fd0803ce8000000, V1171]
Stack pops: 3
Stack additions: [V1176]
Exit stack: [V11, S16, S15, S14, 0x0, {0x4bc, 0xad4, 0xd63}, S11, S10, 0x0, S8, 0x1311, 0x12ff, S5, 0x33b2e3c9fd0803ce8000000, V1171, V1176]

================================

Block 0x1342
[0x1342:0x1348]
---
Predecessors: [0x1323, 0x133f]
Successors: [0x1349, 0x134d]
---
0x1342 JUMPDEST
0x1343 ISZERO
0x1344 ISZERO
0x1345 PUSH2 0x134d
0x1348 JUMPI
---
0x1342: JUMPDEST 
0x1343: V1177 = ISZERO S0
0x1344: V1178 = ISZERO V1177
0x1345: V1179 = 0x134d
0x1348: JUMPI 0x134d V1178
---
Entry stack: [V11, S14, S13, S12, 0x0, {0x4bc, 0xad4, 0xd63}, S9, S8, 0x0, S6, 0x1311, 0x12ff, S3, 0x33b2e3c9fd0803ce8000000, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S14, S13, S12, 0x0, {0x4bc, 0xad4, 0xd63}, S9, S8, 0x0, S6, 0x1311, 0x12ff, S3, 0x33b2e3c9fd0803ce8000000, S1]

================================

Block 0x1349
[0x1349:0x134c]
---
Predecessors: [0x1342]
Successors: []
---
0x1349 PUSH1 0x0
0x134b DUP1
0x134c REVERT
---
0x1349: V1180 = 0x0
0x134c: REVERT 0x0 0x0
---
Entry stack: [V11, S13, S12, S11, 0x0, {0x4bc, 0xad4, 0xd63}, S8, S7, 0x0, S5, 0x1311, 0x12ff, S2, 0x33b2e3c9fd0803ce8000000, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S13, S12, S11, 0x0, {0x4bc, 0xad4, 0xd63}, S8, S7, 0x0, S5, 0x1311, 0x12ff, S2, 0x33b2e3c9fd0803ce8000000, S0]

================================

Block 0x134d
[0x134d:0x1352]
---
Predecessors: [0x1342]
Successors: [0x12ff]
---
0x134d JUMPDEST
0x134e SWAP3
0x134f SWAP2
0x1350 POP
0x1351 POP
0x1352 JUMP
---
0x134d: JUMPDEST 
0x1352: JUMP 0x12ff
---
Entry stack: [V11, S13, S12, S11, 0x0, {0x4bc, 0xad4, 0xd63}, S8, S7, 0x0, S5, 0x1311, 0x12ff, S2, 0x33b2e3c9fd0803ce8000000, S0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V11, S13, S12, S11, 0x0, {0x4bc, 0xad4, 0xd63}, S8, S7, 0x0, S5, 0x1311, S0]

================================

Block 0x1353
[0x1353:0x1364]
---
Predecessors: [0x130b]
Successors: [0x1365, 0x1369]
---
0x1353 JUMPDEST
0x1354 PUSH1 0x0
0x1356 DUP3
0x1357 DUP3
0x1358 DUP5
0x1359 ADD
0x135a SWAP2
0x135b POP
0x135c DUP2
0x135d LT
0x135e ISZERO
0x135f ISZERO
0x1360 ISZERO
0x1361 PUSH2 0x1369
0x1364 JUMPI
---
0x1353: JUMPDEST 
0x1354: V1181 = 0x0
0x1359: V1182 = ADD S1 V1162
0x135d: V1183 = LT V1182 S1
0x135e: V1184 = ISZERO V1183
0x135f: V1185 = ISZERO V1184
0x1360: V1186 = ISZERO V1185
0x1361: V1187 = 0x1369
0x1364: JUMPI 0x1369 V1186
---
Entry stack: [V11, S11, S10, S9, 0x0, {0x4bc, 0xad4, 0xd63}, S6, S5, 0x0, S3, 0x1311, S1, V1162]
Stack pops: 2
Stack additions: [S1, S0, V1182]
Exit stack: [V11, S11, S10, S9, 0x0, {0x4bc, 0xad4, 0xd63}, S6, S5, 0x0, S3, 0x1311, S1, V1162, V1182]

================================

Block 0x1365
[0x1365:0x1368]
---
Predecessors: [0x1353]
Successors: []
---
0x1365 PUSH1 0x0
0x1367 DUP1
0x1368 REVERT
---
0x1365: V1188 = 0x0
0x1368: REVERT 0x0 0x0
---
Entry stack: [V11, S12, S11, S10, 0x0, {0x4bc, 0xad4, 0xd63}, S7, S6, 0x0, S4, 0x1311, S2, S1, V1182]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S12, S11, S10, 0x0, {0x4bc, 0xad4, 0xd63}, S7, S6, 0x0, S4, 0x1311, S2, S1, V1182]

================================

Block 0x1369
[0x1369:0x136e]
---
Predecessors: [0x1353]
Successors: [0x1311]
---
0x1369 JUMPDEST
0x136a SWAP3
0x136b SWAP2
0x136c POP
0x136d POP
0x136e JUMP
---
0x1369: JUMPDEST 
0x136e: JUMP 0x1311
---
Entry stack: [V11, S12, S11, S10, 0x0, {0x4bc, 0xad4, 0xd63}, S7, S6, 0x0, S4, 0x1311, S2, S1, V1182]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V11, S12, S11, S10, 0x0, {0x4bc, 0xad4, 0xd63}, S7, S6, 0x0, S4, V1182]

================================

Block 0x136f
[0x136f:0x1385]
---
Predecessors: []
Successors: [0x1386]
Has unresolved jump.
---
0x136f STOP
0x1370 LOG1
0x1371 PUSH6 0x627a7a723058
0x1378 SHA3
0x1379 PUSH7 0x1ad6edbc00c9c9
0x1381 DIV
0x1382 SGT
0x1383 MISSING 0xb9
0x1384 CALLDATACOPY
0x1385 JUMPI
---
0x136f: STOP 
0x1370: LOG S0 S1 S2
0x1371: V1189 = 0x627a7a723058
0x1378: V1190 = SHA3 0x627a7a723058 S3
0x1379: V1191 = 0x1ad6edbc00c9c9
0x1381: V1192 = DIV 0x1ad6edbc00c9c9 V1190
0x1382: V1193 = SGT V1192 S4
0x1383: MISSING 0xb9
0x1384: CALLDATACOPY S0 S1 S2
0x1385: JUMPI S3 S4
---
Entry stack: []
Stack pops: 0
Stack additions: [V1193]
Exit stack: []

================================

Block 0x1386
[0x1386:0x139a]
---
Predecessors: [0x136f]
Successors: []
---
0x1386 GAS
0x1387 NOT
0x1388 COINBASE
0x1389 PUSH11 0x50d2793abe5968ec2ff35a
0x1395 PUSH5 0x8f37c60029
---
0x1386: V1194 = GAS
0x1387: V1195 = NOT V1194
0x1388: V1196 = COINBASE
0x1389: V1197 = 0x50d2793abe5968ec2ff35a
0x1395: V1198 = 0x8f37c60029
---
Entry stack: []
Stack pops: 0
Stack additions: [V1195, V1196, 0x50d2793abe5968ec2ff35a, 0x8f37c60029]
Exit stack: [V1195, V1196, 0x50d2793abe5968ec2ff35a, 0x8f37c60029]

================================

Function 0:
Public function signature: 0x5487369
Entry block: 0xeb
Exit block: 0x109
Body: 0xeb, 0x109, 0x22e, 0x238, 0x2be, 0x2d3, 0x2d7, 0x32b, 0x32f, 0x3b1, 0x3b5, 0x3c0, 0x3c9, 0x3db, 0x3df, 0x478, 0x47c, 0x487, 0x490, 0x4a2, 0x4a6, 0x4bc, 0x54b, 0x54f, 0x55a, 0x563, 0x604, 0x608, 0x613, 0x61c, 0x6bd, 0x6c1, 0x6cc, 0x6d5, 0x7a2, 0x7a6, 0x7b1, 0x7ba, 0x87f, 0x883, 0x88e, 0x897, 0x8a9, 0x8ad, 0xad4, 0xb63, 0xb67, 0xb72, 0xb7b, 0xc1f, 0xc23, 0xc2e, 0xc37, 0xd63, 0xdf2, 0xdf6, 0xe01, 0xe0a, 0xecf, 0xed3, 0xede, 0xee7, 0xef9, 0xefd, 0x12e3, 0x12ff, 0x130a, 0x130b, 0x1311, 0x1319, 0x131a, 0x1323, 0x132e, 0x133e, 0x133f, 0x1342, 0x1349, 0x134d, 0x1353, 0x1365, 0x1369

Function 1:
Public function signature: 0x34e70cc2
Entry block: 0x10b
Exit block: 0x120
Body: 0x10b, 0x113, 0x117, 0x120, 0x93f

Function 2:
Public function signature: 0x3fc8cef3
Entry block: 0x162
Exit block: 0x177
Body: 0x162, 0x16a, 0x16e, 0x177, 0x965

Function 3:
Public function signature: 0x7d211c75
Entry block: 0x1b9
Exit block: 0x1ce
Body: 0x1b9, 0x1c1, 0x1c5, 0x1ce, 0x98a

Function 4:
Public function signature: 0x8eec6f7b
Entry block: 0x210
Exit block: 0x109
Body: 0x109, 0x210, 0x22e, 0x238, 0x4bc, 0x54b, 0x54f, 0x55a, 0x563, 0x604, 0x608, 0x613, 0x61c, 0x6bd, 0x6c1, 0x6cc, 0x6d5, 0x7a2, 0x7a6, 0x7b1, 0x7ba, 0x87f, 0x883, 0x88e, 0x897, 0x8a9, 0x8ad, 0x9b0, 0xa06, 0xa0a, 0xa90, 0xa94, 0xa9f, 0xaa8, 0xaba, 0xabe, 0xad4, 0xb63, 0xb67, 0xb72, 0xb7b, 0xc1f, 0xc23, 0xc2e, 0xc37, 0xd63, 0xdf2, 0xdf6, 0xe01, 0xe0a, 0xecf, 0xed3, 0xede, 0xee7, 0xef9, 0xefd, 0x12e3, 0x12ff, 0x130a, 0x130b, 0x1311, 0x1319, 0x131a, 0x1323, 0x132e, 0x133e, 0x133f, 0x1342, 0x1349, 0x134d, 0x1353, 0x1365, 0x1369

Function 5:
Public function signature: 0xc94c91c2
Entry block: 0x230
Exit block: 0x109
Body: 0x109, 0x22e, 0x230, 0x238, 0x4bc, 0x54b, 0x54f, 0x55a, 0x563, 0x604, 0x608, 0x613, 0x61c, 0x6bd, 0x6c1, 0x6cc, 0x6d5, 0x7a2, 0x7a6, 0x7b1, 0x7ba, 0x87f, 0x883, 0x88e, 0x897, 0x8a9, 0x8ad, 0xad4, 0xb63, 0xb67, 0xb72, 0xb7b, 0xc1f, 0xc23, 0xc2e, 0xc37, 0xc3f, 0xc95, 0xc99, 0xd1f, 0xd23, 0xd2e, 0xd37, 0xd49, 0xd4d, 0xd63, 0xdf2, 0xdf6, 0xe01, 0xe0a, 0xecf, 0xed3, 0xede, 0xee7, 0xef9, 0xefd, 0x12e3, 0x12ff, 0x130a, 0x130b, 0x1311, 0x1319, 0x131a, 0x1323, 0x132e, 0x133e, 0x133f, 0x1342, 0x1349, 0x134d, 0x1353, 0x1365, 0x1369

Function 6:
Public function signature: 0xf39f7cb4
Entry block: 0x23a
Exit block: 0x265
Body: 0x23a, 0x242, 0x246, 0x265, 0xf12, 0x1009, 0x100d, 0x1018, 0x1021, 0x1033, 0x1037, 0x104f, 0x1053, 0x10e0, 0x10e4, 0x10ef, 0x10f8, 0x110a, 0x110e, 0x11ae, 0x11b2, 0x11bd, 0x11c6, 0x1256, 0x125a, 0x1265, 0x126e, 0x12af, 0x12b8

Function 7:
Public function signature: 0xf4b9fa75
Entry block: 0x267
Exit block: 0x27c
Body: 0x267, 0x26f, 0x273, 0x27c, 0x12bd

Function 8:
Public fallback function
Entry block: 0x8e
Exit block: 0xe9
Body: 0x8e, 0xe5, 0xe9

