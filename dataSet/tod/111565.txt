Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x35]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x35
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x35
0xa: JUMPI 0x35 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x8e]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x29b5b30c
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x8e
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x29b5b30c
0x1a: V12 = EQ V10 0x29b5b30c
0x1b: V13 = 0x8e
0x1e: JUMPI 0x8e V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0xa6]
---
0x1f DUP1
0x20 PUSH4 0x41c0e1b5
0x25 EQ
0x26 PUSH2 0xa6
0x29 JUMPI
---
0x20: V14 = 0x41c0e1b5
0x25: V15 = EQ 0x41c0e1b5 V10
0x26: V16 = 0xa6
0x29: JUMPI 0xa6 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0xb5]
---
0x2a DUP1
0x2b PUSH4 0xe5225381
0x30 EQ
0x31 PUSH2 0xb5
0x34 JUMPI
---
0x2b: V17 = 0xe5225381
0x30: V18 = EQ 0xe5225381 V10
0x31: V19 = 0xb5
0x34: JUMPI 0xb5 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3a]
---
Predecessors: [0x0, 0x2a]
Successors: [0x3b]
---
0x35 JUMPDEST
0x36 CALLVALUE
0x37 PUSH2 0x0
0x3a JUMPI
---
0x35: JUMPDEST 
0x36: V20 = CALLVALUE
0x37: V21 = 0x0
0x3a: THROWI V20
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3b
[0x3b:0x3d]
---
Predecessors: [0x35]
Successors: [0x3e]
---
0x3b PUSH2 0x8c
---
0x3b: V22 = 0x8c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x8c]
Exit stack: [V10, 0x8c]

================================

Block 0x3e
[0x3e:0x47]
---
Predecessors: [0x3b]
Successors: [0x48, 0x89]
---
0x3e JUMPDEST
0x3f PUSH1 0x0
0x41 CALLVALUE
0x42 GT
0x43 ISZERO
0x44 PUSH2 0x89
0x47 JUMPI
---
0x3e: JUMPDEST 
0x3f: V23 = 0x0
0x41: V24 = CALLVALUE
0x42: V25 = GT V24 0x0
0x43: V26 = ISZERO V25
0x44: V27 = 0x89
0x47: JUMPI 0x89 V26
---
Entry stack: [V10, 0x8c]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x8c]

================================

Block 0x48
[0x48:0x88]
---
Predecessors: [0x3e]
Successors: [0x89]
---
0x48 PUSH1 0x40
0x4a DUP1
0x4b MLOAD
0x4c CALLVALUE
0x4d DUP2
0x4e MSTORE
0x4f SWAP1
0x50 MLOAD
0x51 PUSH1 0x58
0x53 SWAP2
0x54 PUSH1 0x1
0x56 PUSH1 0xa0
0x58 PUSH1 0x2
0x5a EXP
0x5b SUB
0x5c CALLER
0x5d AND
0x5e SWAP2
0x5f PUSH32 0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15
0x80 SWAP2
0x81 DUP2
0x82 SWAP1
0x83 SUB
0x84 PUSH1 0x20
0x86 ADD
0x87 SWAP1
0x88 LOG3
---
0x48: V28 = 0x40
0x4b: V29 = M[0x40]
0x4c: V30 = CALLVALUE
0x4e: M[V29] = V30
0x50: V31 = M[0x40]
0x51: V32 = 0x58
0x54: V33 = 0x1
0x56: V34 = 0xa0
0x58: V35 = 0x2
0x5a: V36 = EXP 0x2 0xa0
0x5b: V37 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5c: V38 = CALLER
0x5d: V39 = AND V38 0xffffffffffffffffffffffffffffffffffffffff
0x5f: V40 = 0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15
0x83: V41 = SUB V29 V31
0x84: V42 = 0x20
0x86: V43 = ADD 0x20 V41
0x88: LOG V31 V43 0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15 V39 0x58
---
Entry stack: [V10, 0x8c]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x8c]

================================

Block 0x89
[0x89:0x89]
---
Predecessors: [0x3e, 0x48, 0x141, 0x169]
Successors: [0x8a]
---
0x89 JUMPDEST
---
0x89: JUMPDEST 
---
Entry stack: [V10, 0x8c]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x8c]

================================

Block 0x8a
[0x8a:0x8b]
---
Predecessors: [0x89]
Successors: [0x8c]
---
0x8a JUMPDEST
0x8b JUMP
---
0x8a: JUMPDEST 
0x8b: JUMP 0x8c
---
Entry stack: [V10, 0x8c]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x8c
[0x8c:0x8d]
---
Predecessors: [0x8a, 0x13b, 0x1b0]
Successors: []
---
0x8c JUMPDEST
0x8d STOP
---
0x8c: JUMPDEST 
0x8d: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x8e
[0x8e:0x93]
---
Predecessors: [0xb]
Successors: [0x94]
---
0x8e JUMPDEST
0x8f CALLVALUE
0x90 PUSH2 0x0
0x93 JUMPI
---
0x8e: JUMPDEST 
0x8f: V44 = CALLVALUE
0x90: V45 = 0x0
0x93: THROWI V44
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x94
[0x94:0xa3]
---
Predecessors: [0x8e]
Successors: [0xc4]
---
0x94 PUSH2 0x8c
0x97 PUSH1 0x4
0x99 CALLDATALOAD
0x9a PUSH1 0x24
0x9c CALLDATALOAD
0x9d PUSH1 0x44
0x9f CALLDATALOAD
0xa0 PUSH2 0xc4
0xa3 JUMP
---
0x94: V46 = 0x8c
0x97: V47 = 0x4
0x99: V48 = CALLDATALOAD 0x4
0x9a: V49 = 0x24
0x9c: V50 = CALLDATALOAD 0x24
0x9d: V51 = 0x44
0x9f: V52 = CALLDATALOAD 0x44
0xa0: V53 = 0xc4
0xa3: JUMP 0xc4
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x8c, V48, V50, V52]
Exit stack: [V10, 0x8c, V48, V50, V52]

================================

Block 0xa4
[0xa4:0xa5]
---
Predecessors: []
Successors: []
---
0xa4 JUMPDEST
0xa5 STOP
---
0xa4: JUMPDEST 
0xa5: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa6
[0xa6:0xab]
---
Predecessors: [0x1f]
Successors: [0xac]
---
0xa6 JUMPDEST
0xa7 CALLVALUE
0xa8 PUSH2 0x0
0xab JUMPI
---
0xa6: JUMPDEST 
0xa7: V54 = CALLVALUE
0xa8: V55 = 0x0
0xab: THROWI V54
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xac
[0xac:0xb2]
---
Predecessors: [0xa6]
Successors: [0x141]
---
0xac PUSH2 0x8c
0xaf PUSH2 0x141
0xb2 JUMP
---
0xac: V56 = 0x8c
0xaf: V57 = 0x141
0xb2: JUMP 0x141
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x8c]
Exit stack: [V10, 0x8c]

================================

Block 0xb3
[0xb3:0xb4]
---
Predecessors: []
Successors: []
---
0xb3 JUMPDEST
0xb4 STOP
---
0xb3: JUMPDEST 
0xb4: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb5
[0xb5:0xba]
---
Predecessors: [0x2a]
Successors: [0xbb]
---
0xb5 JUMPDEST
0xb6 CALLVALUE
0xb7 PUSH2 0x0
0xba JUMPI
---
0xb5: JUMPDEST 
0xb6: V58 = CALLVALUE
0xb7: V59 = 0x0
0xba: THROWI V58
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xbb
[0xbb:0xc1]
---
Predecessors: [0xb5]
Successors: [0x169]
---
0xbb PUSH2 0x8c
0xbe PUSH2 0x169
0xc1 JUMP
---
0xbb: V60 = 0x8c
0xbe: V61 = 0x169
0xc1: JUMP 0x169
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x8c]
Exit stack: [V10, 0x8c]

================================

Block 0xc2
[0xc2:0xc3]
---
Predecessors: []
Successors: []
---
0xc2 JUMPDEST
0xc3 STOP
---
0xc2: JUMPDEST 
0xc3: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc4
[0xc4:0xdc]
---
Predecessors: [0x94]
Successors: [0xdd, 0x13a]
---
0xc4 JUMPDEST
0xc5 PUSH1 0x0
0xc7 DUP1
0xc8 SLOAD
0xc9 CALLER
0xca PUSH1 0x1
0xcc PUSH1 0xa0
0xce PUSH1 0x2
0xd0 EXP
0xd1 SUB
0xd2 SWAP1
0xd3 DUP2
0xd4 AND
0xd5 SWAP2
0xd6 AND
0xd7 EQ
0xd8 ISZERO
0xd9 PUSH2 0x13a
0xdc JUMPI
---
0xc4: JUMPDEST 
0xc5: V62 = 0x0
0xc8: V63 = S[0x0]
0xc9: V64 = CALLER
0xca: V65 = 0x1
0xcc: V66 = 0xa0
0xce: V67 = 0x2
0xd0: V68 = EXP 0x2 0xa0
0xd1: V69 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd4: V70 = AND 0xffffffffffffffffffffffffffffffffffffffff V64
0xd6: V71 = AND V63 0xffffffffffffffffffffffffffffffffffffffff
0xd7: V72 = EQ V71 V70
0xd8: V73 = ISZERO V72
0xd9: V74 = 0x13a
0xdc: JUMPI 0x13a V73
---
Entry stack: [V10, 0x8c, V48, V50, V52]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x8c, V48, V50, V52, 0x0]

================================

Block 0xdd
[0xdd:0x12c]
---
Predecessors: [0xc4]
Successors: [0x12d]
---
0xdd DUP4
0xde SWAP1
0xdf POP
0xe0 DUP1
0xe1 PUSH1 0x1
0xe3 PUSH1 0xa0
0xe5 PUSH1 0x2
0xe7 EXP
0xe8 SUB
0xe9 AND
0xea PUSH4 0xa9059cbb
0xef DUP5
0xf0 DUP5
0xf1 PUSH1 0x40
0xf3 MLOAD
0xf4 DUP4
0xf5 PUSH1 0xe0
0xf7 PUSH1 0x2
0xf9 EXP
0xfa MUL
0xfb DUP2
0xfc MSTORE
0xfd PUSH1 0x4
0xff ADD
0x100 DUP1
0x101 DUP4
0x102 PUSH1 0x1
0x104 PUSH1 0xa0
0x106 PUSH1 0x2
0x108 EXP
0x109 SUB
0x10a AND
0x10b DUP2
0x10c MSTORE
0x10d PUSH1 0x20
0x10f ADD
0x110 DUP3
0x111 DUP2
0x112 MSTORE
0x113 PUSH1 0x20
0x115 ADD
0x116 SWAP3
0x117 POP
0x118 POP
0x119 POP
0x11a PUSH1 0x0
0x11c PUSH1 0x40
0x11e MLOAD
0x11f DUP1
0x120 DUP4
0x121 SUB
0x122 DUP2
0x123 PUSH1 0x0
0x125 DUP8
0x126 DUP1
0x127 EXTCODESIZE
0x128 ISZERO
0x129 PUSH2 0x0
0x12c JUMPI
---
0xe1: V75 = 0x1
0xe3: V76 = 0xa0
0xe5: V77 = 0x2
0xe7: V78 = EXP 0x2 0xa0
0xe8: V79 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe9: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V48
0xea: V81 = 0xa9059cbb
0xf1: V82 = 0x40
0xf3: V83 = M[0x40]
0xf5: V84 = 0xe0
0xf7: V85 = 0x2
0xf9: V86 = EXP 0x2 0xe0
0xfa: V87 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0xfc: M[V83] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xfd: V88 = 0x4
0xff: V89 = ADD 0x4 V83
0x102: V90 = 0x1
0x104: V91 = 0xa0
0x106: V92 = 0x2
0x108: V93 = EXP 0x2 0xa0
0x109: V94 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10a: V95 = AND 0xffffffffffffffffffffffffffffffffffffffff V50
0x10c: M[V89] = V95
0x10d: V96 = 0x20
0x10f: V97 = ADD 0x20 V89
0x112: M[V97] = V52
0x113: V98 = 0x20
0x115: V99 = ADD 0x20 V97
0x11a: V100 = 0x0
0x11c: V101 = 0x40
0x11e: V102 = M[0x40]
0x121: V103 = SUB V99 V102
0x123: V104 = 0x0
0x127: V105 = EXTCODESIZE V80
0x128: V106 = ISZERO V105
0x129: V107 = 0x0
0x12c: THROWI V106
---
Entry stack: [V10, 0x8c, V48, V50, V52, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S3, V80, 0xa9059cbb, V99, 0x0, V102, V103, V102, 0x0, V80]
Exit stack: [V10, 0x8c, V48, V50, V52, V48, V80, 0xa9059cbb, V99, 0x0, V102, V103, V102, 0x0, V80]

================================

Block 0x12d
[0x12d:0x136]
---
Predecessors: [0xdd]
Successors: [0x137]
---
0x12d PUSH1 0x32
0x12f GAS
0x130 SUB
0x131 CALL
0x132 ISZERO
0x133 PUSH2 0x0
0x136 JUMPI
---
0x12d: V108 = 0x32
0x12f: V109 = GAS
0x130: V110 = SUB V109 0x32
0x131: V111 = CALL V110 V80 0x0 V102 V103 V102 0x0
0x132: V112 = ISZERO V111
0x133: V113 = 0x0
0x136: THROWI V112
---
Entry stack: [V10, 0x8c, V48, V50, V52, V48, V80, 0xa9059cbb, V99, 0x0, V102, V103, V102, 0x0, V80]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x8c, V48, V50, V52, V48, V80, 0xa9059cbb, V99]

================================

Block 0x137
[0x137:0x139]
---
Predecessors: [0x12d]
Successors: [0x13a]
---
0x137 POP
0x138 POP
0x139 POP
---
0x137: NOP 
---
Entry stack: [V10, 0x8c, V48, V50, V52, V48, V80, 0xa9059cbb, V99]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x8c, V48, V50, V52, V48]

================================

Block 0x13a
[0x13a:0x13a]
---
Predecessors: [0xc4, 0x137]
Successors: [0x13b]
---
0x13a JUMPDEST
---
0x13a: JUMPDEST 
---
Entry stack: [V10, 0x8c, V48, V50, V52, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x8c, V48, V50, V52, S0]

================================

Block 0x13b
[0x13b:0x140]
---
Predecessors: [0x13a]
Successors: [0x8c]
---
0x13b JUMPDEST
0x13c POP
0x13d POP
0x13e POP
0x13f POP
0x140 JUMP
---
0x13b: JUMPDEST 
0x140: JUMP 0x8c
---
Entry stack: [V10, 0x8c, V48, V50, V52, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V10]

================================

Block 0x141
[0x141:0x158]
---
Predecessors: [0xac]
Successors: [0x89, 0x159]
---
0x141 JUMPDEST
0x142 PUSH1 0x0
0x144 SLOAD
0x145 CALLER
0x146 PUSH1 0x1
0x148 PUSH1 0xa0
0x14a PUSH1 0x2
0x14c EXP
0x14d SUB
0x14e SWAP1
0x14f DUP2
0x150 AND
0x151 SWAP2
0x152 AND
0x153 EQ
0x154 ISZERO
0x155 PUSH2 0x89
0x158 JUMPI
---
0x141: JUMPDEST 
0x142: V114 = 0x0
0x144: V115 = S[0x0]
0x145: V116 = CALLER
0x146: V117 = 0x1
0x148: V118 = 0xa0
0x14a: V119 = 0x2
0x14c: V120 = EXP 0x2 0xa0
0x14d: V121 = SUB 0x10000000000000000000000000000000000000000 0x1
0x150: V122 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0x152: V123 = AND V115 0xffffffffffffffffffffffffffffffffffffffff
0x153: V124 = EQ V123 V122
0x154: V125 = ISZERO V124
0x155: V126 = 0x89
0x158: JUMPI 0x89 V125
---
Entry stack: [V10, 0x8c]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x8c]

================================

Block 0x159
[0x159:0x165]
---
Predecessors: [0x141]
Successors: []
---
0x159 PUSH1 0x0
0x15b SLOAD
0x15c PUSH1 0x1
0x15e PUSH1 0xa0
0x160 PUSH1 0x2
0x162 EXP
0x163 SUB
0x164 AND
0x165 SELFDESTRUCT
---
0x159: V127 = 0x0
0x15b: V128 = S[0x0]
0x15c: V129 = 0x1
0x15e: V130 = 0xa0
0x160: V131 = 0x2
0x162: V132 = EXP 0x2 0xa0
0x163: V133 = SUB 0x10000000000000000000000000000000000000000 0x1
0x164: V134 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x165: SELFDESTRUCT V134
---
Entry stack: [V10, 0x8c]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x8c]

================================

Block 0x166
[0x166:0x166]
---
Predecessors: []
Successors: [0x167]
---
0x166 JUMPDEST
---
0x166: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x167
[0x167:0x168]
---
Predecessors: [0x166]
Successors: []
Has unresolved jump.
---
0x167 JUMPDEST
0x168 JUMP
---
0x167: JUMPDEST 
0x168: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x169
[0x169:0x180]
---
Predecessors: [0xbb]
Successors: [0x89, 0x181]
---
0x169 JUMPDEST
0x16a PUSH1 0x0
0x16c SLOAD
0x16d CALLER
0x16e PUSH1 0x1
0x170 PUSH1 0xa0
0x172 PUSH1 0x2
0x174 EXP
0x175 SUB
0x176 SWAP1
0x177 DUP2
0x178 AND
0x179 SWAP2
0x17a AND
0x17b EQ
0x17c ISZERO
0x17d PUSH2 0x89
0x180 JUMPI
---
0x169: JUMPDEST 
0x16a: V135 = 0x0
0x16c: V136 = S[0x0]
0x16d: V137 = CALLER
0x16e: V138 = 0x1
0x170: V139 = 0xa0
0x172: V140 = 0x2
0x174: V141 = EXP 0x2 0xa0
0x175: V142 = SUB 0x10000000000000000000000000000000000000000 0x1
0x178: V143 = AND 0xffffffffffffffffffffffffffffffffffffffff V137
0x17a: V144 = AND V136 0xffffffffffffffffffffffffffffffffffffffff
0x17b: V145 = EQ V144 V143
0x17c: V146 = ISZERO V145
0x17d: V147 = 0x89
0x180: JUMPI 0x89 V146
---
Entry stack: [V10, 0x8c]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x8c]

================================

Block 0x181
[0x181:0x1ae]
---
Predecessors: [0x169]
Successors: [0x1af]
---
0x181 PUSH1 0x0
0x183 DUP1
0x184 SLOAD
0x185 PUSH1 0x40
0x187 MLOAD
0x188 PUSH1 0x1
0x18a PUSH1 0xa0
0x18c PUSH1 0x2
0x18e EXP
0x18f SUB
0x190 SWAP2
0x191 DUP3
0x192 AND
0x193 SWAP3
0x194 ADDRESS
0x195 SWAP1
0x196 SWAP3
0x197 AND
0x198 BALANCE
0x199 DUP1
0x19a ISZERO
0x19b PUSH2 0x8fc
0x19e MUL
0x19f SWAP3
0x1a0 SWAP1
0x1a1 SWAP2
0x1a2 SWAP1
0x1a3 DUP2
0x1a4 DUP2
0x1a5 DUP2
0x1a6 DUP6
0x1a7 DUP9
0x1a8 DUP9
0x1a9 CALL
0x1aa POP
0x1ab POP
0x1ac POP
0x1ad POP
0x1ae POP
---
0x181: V148 = 0x0
0x184: V149 = S[0x0]
0x185: V150 = 0x40
0x187: V151 = M[0x40]
0x188: V152 = 0x1
0x18a: V153 = 0xa0
0x18c: V154 = 0x2
0x18e: V155 = EXP 0x2 0xa0
0x18f: V156 = SUB 0x10000000000000000000000000000000000000000 0x1
0x192: V157 = AND 0xffffffffffffffffffffffffffffffffffffffff V149
0x194: V158 = ADDRESS
0x197: V159 = AND 0xffffffffffffffffffffffffffffffffffffffff V158
0x198: V160 = BALANCE V159
0x19a: V161 = ISZERO V160
0x19b: V162 = 0x8fc
0x19e: V163 = MUL 0x8fc V161
0x1a9: V164 = CALL V163 V157 V160 V151 0x0 V151 0x0
---
Entry stack: [V10, 0x8c]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x8c]

================================

Block 0x1af
[0x1af:0x1af]
---
Predecessors: [0x181]
Successors: [0x1b0]
---
0x1af JUMPDEST
---
0x1af: JUMPDEST 
---
Entry stack: [V10, 0x8c]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x8c]

================================

Block 0x1b0
[0x1b0:0x1b1]
---
Predecessors: [0x1af]
Successors: [0x8c]
---
0x1b0 JUMPDEST
0x1b1 JUMP
---
0x1b0: JUMPDEST 
0x1b1: JUMP 0x8c
---
Entry stack: [V10, 0x8c]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Function 0:
Public function signature: 0x29b5b30c
Entry block: 0x8e
Exit block: 0x8c
Body: 0x8c, 0x8e, 0x94, 0xc4, 0xdd, 0x12d, 0x137, 0x13a, 0x13b

Function 1:
Public function signature: 0x41c0e1b5
Entry block: 0xa6
Exit block: 0x8c
Body: 0x89, 0x8a, 0x8c, 0xa6, 0xac, 0x141, 0x159

Function 2:
Public function signature: 0xe5225381
Entry block: 0xb5
Exit block: 0x8c
Body: 0x89, 0x8a, 0x8c, 0xb5, 0xbb, 0x169, 0x181, 0x1af, 0x1b0

Function 3:
Public fallback function
Entry block: 0x35
Exit block: 0x8c
Body: 0x35, 0x3b, 0x3e, 0x48, 0x89, 0x8a, 0x8c

