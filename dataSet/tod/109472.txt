Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x54]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x54
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x54
0xa: JUMPI 0x54 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0xd7]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x83197ef0
0x38 DUP2
0x39 EQ
0x3a PUSH2 0xd7
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x83197ef0
0x39: V12 = EQ V10 0x83197ef0
0x3a: V13 = 0xd7
0x3d: JUMPI 0xd7 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0xe9]
---
0x3e DUP1
0x3f PUSH4 0x8da5cb5b
0x44 EQ
0x45 PUSH2 0xe9
0x48 JUMPI
---
0x3f: V14 = 0x8da5cb5b
0x44: V15 = EQ 0x8da5cb5b V10
0x45: V16 = 0xe9
0x48: JUMPI 0xe9 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x115]
---
0x49 DUP1
0x4a PUSH4 0xa6f9dae1
0x4f EQ
0x50 PUSH2 0x115
0x53 JUMPI
---
0x4a: V17 = 0xa6f9dae1
0x4f: V18 = EQ 0xa6f9dae1 V10
0x50: V19 = 0x115
0x53: JUMPI 0x115 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x57]
---
Predecessors: [0x0, 0x49]
Successors: [0x58]
---
0x54 JUMPDEST
0x55 PUSH2 0xd5
---
0x54: JUMPDEST 
0x55: V20 = 0xd5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xd5]
Exit stack: [V10, 0xd5]

================================

Block 0x58
[0x58:0x87]
---
Predecessors: [0x54]
Successors: [0x88, 0x89]
---
0x58 JUMPDEST
0x59 PUSH1 0x0
0x5b DUP1
0x5c SLOAD
0x5d PUSH1 0x40
0x5f MLOAD
0x60 PUSH1 0x1
0x62 PUSH1 0xa0
0x64 PUSH1 0x2
0x66 EXP
0x67 SUB
0x68 SWAP1
0x69 SWAP2
0x6a AND
0x6b SWAP2
0x6c CALLVALUE
0x6d DUP1
0x6e ISZERO
0x6f PUSH2 0x8fc
0x72 MUL
0x73 SWAP3
0x74 SWAP1
0x75 SWAP2
0x76 DUP2
0x77 DUP2
0x78 DUP2
0x79 DUP6
0x7a DUP9
0x7b DUP9
0x7c CALL
0x7d SWAP4
0x7e POP
0x7f POP
0x80 POP
0x81 POP
0x82 ISZERO
0x83 ISZERO
0x84 PUSH2 0x89
0x87 JUMPI
---
0x58: JUMPDEST 
0x59: V21 = 0x0
0x5c: V22 = S[0x0]
0x5d: V23 = 0x40
0x5f: V24 = M[0x40]
0x60: V25 = 0x1
0x62: V26 = 0xa0
0x64: V27 = 0x2
0x66: V28 = EXP 0x2 0xa0
0x67: V29 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6a: V30 = AND V22 0xffffffffffffffffffffffffffffffffffffffff
0x6c: V31 = CALLVALUE
0x6e: V32 = ISZERO V31
0x6f: V33 = 0x8fc
0x72: V34 = MUL 0x8fc V32
0x7c: V35 = CALL V34 V30 V31 V24 0x0 V24 0x0
0x82: V36 = ISZERO V35
0x83: V37 = ISZERO V36
0x84: V38 = 0x89
0x87: JUMPI 0x89 V37
---
Entry stack: [V10, 0xd5]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xd5]

================================

Block 0x88
[0x88:0x88]
---
Predecessors: [0x58]
Successors: []
---
0x88 INVALID
---
0x88: INVALID 
---
Entry stack: [V10, 0xd5]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xd5]

================================

Block 0x89
[0x89:0xd2]
---
Predecessors: [0x58]
Successors: [0xd3]
---
0x89 JUMPDEST
0x8a PUSH1 0x40
0x8c DUP1
0x8d MLOAD
0x8e PUSH1 0x1
0x90 PUSH1 0xa0
0x92 PUSH1 0x2
0x94 EXP
0x95 SUB
0x96 CALLER
0x97 DUP2
0x98 AND
0x99 DUP3
0x9a MSTORE
0x9b ADDRESS
0x9c AND
0x9d PUSH1 0x20
0x9f DUP3
0xa0 ADD
0xa1 MSTORE
0xa2 CALLVALUE
0xa3 DUP2
0xa4 DUP4
0xa5 ADD
0xa6 MSTORE
0xa7 SWAP1
0xa8 MLOAD
0xa9 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xca SWAP2
0xcb DUP2
0xcc SWAP1
0xcd SUB
0xce PUSH1 0x60
0xd0 ADD
0xd1 SWAP1
0xd2 LOG1
---
0x89: JUMPDEST 
0x8a: V39 = 0x40
0x8d: V40 = M[0x40]
0x8e: V41 = 0x1
0x90: V42 = 0xa0
0x92: V43 = 0x2
0x94: V44 = EXP 0x2 0xa0
0x95: V45 = SUB 0x10000000000000000000000000000000000000000 0x1
0x96: V46 = CALLER
0x98: V47 = AND 0xffffffffffffffffffffffffffffffffffffffff V46
0x9a: M[V40] = V47
0x9b: V48 = ADDRESS
0x9c: V49 = AND V48 0xffffffffffffffffffffffffffffffffffffffff
0x9d: V50 = 0x20
0xa0: V51 = ADD V40 0x20
0xa1: M[V51] = V49
0xa2: V52 = CALLVALUE
0xa5: V53 = ADD 0x40 V40
0xa6: M[V53] = V52
0xa8: V54 = M[0x40]
0xa9: V55 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xcd: V56 = SUB V40 V54
0xce: V57 = 0x60
0xd0: V58 = ADD 0x60 V56
0xd2: LOG V54 V58 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
---
Entry stack: [V10, 0xd5]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xd5]

================================

Block 0xd3
[0xd3:0xd4]
---
Predecessors: [0x89]
Successors: [0xd5]
---
0xd3 JUMPDEST
0xd4 JUMP
---
0xd3: JUMPDEST 
0xd4: JUMP 0xd5
---
Entry stack: [V10, 0xd5]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xd5
[0xd5:0xd6]
---
Predecessors: [0xd3, 0x1b5]
Successors: []
---
0xd5 JUMPDEST
0xd6 STOP
---
0xd5: JUMPDEST 
0xd6: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xd7
[0xd7:0xdd]
---
Predecessors: [0xb]
Successors: [0xde, 0xdf]
---
0xd7 JUMPDEST
0xd8 CALLVALUE
0xd9 ISZERO
0xda PUSH2 0xdf
0xdd JUMPI
---
0xd7: JUMPDEST 
0xd8: V59 = CALLVALUE
0xd9: V60 = ISZERO V59
0xda: V61 = 0xdf
0xdd: JUMPI 0xdf V60
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xde
[0xde:0xde]
---
Predecessors: [0xd7]
Successors: []
---
0xde INVALID
---
0xde: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xdf
[0xdf:0xe6]
---
Predecessors: [0xd7]
Successors: [0x133]
---
0xdf JUMPDEST
0xe0 PUSH2 0xd5
0xe3 PUSH2 0x133
0xe6 JUMP
---
0xdf: JUMPDEST 
0xe0: V62 = 0xd5
0xe3: V63 = 0x133
0xe6: JUMP 0x133
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xd5]
Exit stack: [V10, 0xd5]

================================

Block 0xe7
[0xe7:0xe8]
---
Predecessors: []
Successors: []
---
0xe7 JUMPDEST
0xe8 STOP
---
0xe7: JUMPDEST 
0xe8: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xe9
[0xe9:0xef]
---
Predecessors: [0x3e]
Successors: [0xf0, 0xf1]
---
0xe9 JUMPDEST
0xea CALLVALUE
0xeb ISZERO
0xec PUSH2 0xf1
0xef JUMPI
---
0xe9: JUMPDEST 
0xea: V64 = CALLVALUE
0xeb: V65 = ISZERO V64
0xec: V66 = 0xf1
0xef: JUMPI 0xf1 V65
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xf0
[0xf0:0xf0]
---
Predecessors: [0xe9]
Successors: []
---
0xf0 INVALID
---
0xf0: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xf1
[0xf1:0xf8]
---
Predecessors: [0xe9]
Successors: [0x160]
---
0xf1 JUMPDEST
0xf2 PUSH2 0xf9
0xf5 PUSH2 0x160
0xf8 JUMP
---
0xf1: JUMPDEST 
0xf2: V67 = 0xf9
0xf5: V68 = 0x160
0xf8: JUMP 0x160
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xf9]
Exit stack: [V10, 0xf9]

================================

Block 0xf9
[0xf9:0x114]
---
Predecessors: [0x160]
Successors: []
---
0xf9 JUMPDEST
0xfa PUSH1 0x40
0xfc DUP1
0xfd MLOAD
0xfe PUSH1 0x1
0x100 PUSH1 0xa0
0x102 PUSH1 0x2
0x104 EXP
0x105 SUB
0x106 SWAP1
0x107 SWAP3
0x108 AND
0x109 DUP3
0x10a MSTORE
0x10b MLOAD
0x10c SWAP1
0x10d DUP2
0x10e SWAP1
0x10f SUB
0x110 PUSH1 0x20
0x112 ADD
0x113 SWAP1
0x114 RETURN
---
0xf9: JUMPDEST 
0xfa: V69 = 0x40
0xfd: V70 = M[0x40]
0xfe: V71 = 0x1
0x100: V72 = 0xa0
0x102: V73 = 0x2
0x104: V74 = EXP 0x2 0xa0
0x105: V75 = SUB 0x10000000000000000000000000000000000000000 0x1
0x108: V76 = AND V123 0xffffffffffffffffffffffffffffffffffffffff
0x10a: M[V70] = V76
0x10b: V77 = M[0x40]
0x10f: V78 = SUB V70 V77
0x110: V79 = 0x20
0x112: V80 = ADD 0x20 V78
0x114: RETURN V77 V80
---
Entry stack: [V10, 0xf9, V123]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xf9]

================================

Block 0x115
[0x115:0x11b]
---
Predecessors: [0x49]
Successors: [0x11c, 0x11d]
---
0x115 JUMPDEST
0x116 CALLVALUE
0x117 ISZERO
0x118 PUSH2 0x11d
0x11b JUMPI
---
0x115: JUMPDEST 
0x116: V81 = CALLVALUE
0x117: V82 = ISZERO V81
0x118: V83 = 0x11d
0x11b: JUMPI 0x11d V82
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x11c
[0x11c:0x11c]
---
Predecessors: [0x115]
Successors: []
---
0x11c INVALID
---
0x11c: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x11d
[0x11d:0x130]
---
Predecessors: [0x115]
Successors: [0x16f]
---
0x11d JUMPDEST
0x11e PUSH2 0xd5
0x121 PUSH1 0x1
0x123 PUSH1 0xa0
0x125 PUSH1 0x2
0x127 EXP
0x128 SUB
0x129 PUSH1 0x4
0x12b CALLDATALOAD
0x12c AND
0x12d PUSH2 0x16f
0x130 JUMP
---
0x11d: JUMPDEST 
0x11e: V84 = 0xd5
0x121: V85 = 0x1
0x123: V86 = 0xa0
0x125: V87 = 0x2
0x127: V88 = EXP 0x2 0xa0
0x128: V89 = SUB 0x10000000000000000000000000000000000000000 0x1
0x129: V90 = 0x4
0x12b: V91 = CALLDATALOAD 0x4
0x12c: V92 = AND V91 0xffffffffffffffffffffffffffffffffffffffff
0x12d: V93 = 0x16f
0x130: JUMP 0x16f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xd5, V92]
Exit stack: [V10, 0xd5, V92]

================================

Block 0x131
[0x131:0x132]
---
Predecessors: []
Successors: []
---
0x131 JUMPDEST
0x132 STOP
---
0x131: JUMPDEST 
0x132: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x133
[0x133:0x149]
---
Predecessors: [0xdf]
Successors: [0x14a, 0x14f]
---
0x133 JUMPDEST
0x134 PUSH1 0x0
0x136 SLOAD
0x137 CALLER
0x138 PUSH1 0x1
0x13a PUSH1 0xa0
0x13c PUSH1 0x2
0x13e EXP
0x13f SUB
0x140 SWAP1
0x141 DUP2
0x142 AND
0x143 SWAP2
0x144 AND
0x145 EQ
0x146 PUSH2 0x14f
0x149 JUMPI
---
0x133: JUMPDEST 
0x134: V94 = 0x0
0x136: V95 = S[0x0]
0x137: V96 = CALLER
0x138: V97 = 0x1
0x13a: V98 = 0xa0
0x13c: V99 = 0x2
0x13e: V100 = EXP 0x2 0xa0
0x13f: V101 = SUB 0x10000000000000000000000000000000000000000 0x1
0x142: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x144: V103 = AND V95 0xffffffffffffffffffffffffffffffffffffffff
0x145: V104 = EQ V103 V102
0x146: V105 = 0x14f
0x149: JUMPI 0x14f V104
---
Entry stack: [V10, 0xd5]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xd5]

================================

Block 0x14a
[0x14a:0x14e]
---
Predecessors: [0x133]
Successors: []
---
0x14a PUSH1 0x0
0x14c PUSH1 0x0
0x14e REVERT
---
0x14a: V106 = 0x0
0x14c: V107 = 0x0
0x14e: REVERT 0x0 0x0
---
Entry stack: [V10, 0xd5]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xd5]

================================

Block 0x14f
[0x14f:0x15c]
---
Predecessors: [0x133]
Successors: []
---
0x14f JUMPDEST
0x150 PUSH1 0x0
0x152 SLOAD
0x153 PUSH1 0x1
0x155 PUSH1 0xa0
0x157 PUSH1 0x2
0x159 EXP
0x15a SUB
0x15b AND
0x15c SELFDESTRUCT
---
0x14f: JUMPDEST 
0x150: V108 = 0x0
0x152: V109 = S[0x0]
0x153: V110 = 0x1
0x155: V111 = 0xa0
0x157: V112 = 0x2
0x159: V113 = EXP 0x2 0xa0
0x15a: V114 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15b: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x15c: SELFDESTRUCT V115
---
Entry stack: [V10, 0xd5]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xd5]

================================

Block 0x15d
[0x15d:0x15d]
---
Predecessors: []
Successors: [0x15e]
---
0x15d JUMPDEST
---
0x15d: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x15e
[0x15e:0x15f]
---
Predecessors: [0x15d]
Successors: []
Has unresolved jump.
---
0x15e JUMPDEST
0x15f JUMP
---
0x15e: JUMPDEST 
0x15f: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x160
[0x160:0x16e]
---
Predecessors: [0xf1]
Successors: [0xf9]
---
0x160 JUMPDEST
0x161 PUSH1 0x0
0x163 SLOAD
0x164 PUSH1 0x1
0x166 PUSH1 0xa0
0x168 PUSH1 0x2
0x16a EXP
0x16b SUB
0x16c AND
0x16d DUP2
0x16e JUMP
---
0x160: JUMPDEST 
0x161: V116 = 0x0
0x163: V117 = S[0x0]
0x164: V118 = 0x1
0x166: V119 = 0xa0
0x168: V120 = 0x2
0x16a: V121 = EXP 0x2 0xa0
0x16b: V122 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16c: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V117
0x16e: JUMP 0xf9
---
Entry stack: [V10, 0xf9]
Stack pops: 1
Stack additions: [S0, V123]
Exit stack: [V10, 0xf9, V123]

================================

Block 0x16f
[0x16f:0x185]
---
Predecessors: [0x11d]
Successors: [0x186, 0x18b]
---
0x16f JUMPDEST
0x170 PUSH1 0x0
0x172 SLOAD
0x173 CALLER
0x174 PUSH1 0x1
0x176 PUSH1 0xa0
0x178 PUSH1 0x2
0x17a EXP
0x17b SUB
0x17c SWAP1
0x17d DUP2
0x17e AND
0x17f SWAP2
0x180 AND
0x181 EQ
0x182 PUSH2 0x18b
0x185 JUMPI
---
0x16f: JUMPDEST 
0x170: V124 = 0x0
0x172: V125 = S[0x0]
0x173: V126 = CALLER
0x174: V127 = 0x1
0x176: V128 = 0xa0
0x178: V129 = 0x2
0x17a: V130 = EXP 0x2 0xa0
0x17b: V131 = SUB 0x10000000000000000000000000000000000000000 0x1
0x17e: V132 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x180: V133 = AND V125 0xffffffffffffffffffffffffffffffffffffffff
0x181: V134 = EQ V133 V132
0x182: V135 = 0x18b
0x185: JUMPI 0x18b V134
---
Entry stack: [V10, 0xd5, V92]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xd5, V92]

================================

Block 0x186
[0x186:0x18a]
---
Predecessors: [0x16f]
Successors: []
---
0x186 PUSH1 0x0
0x188 PUSH1 0x0
0x18a REVERT
---
0x186: V136 = 0x0
0x188: V137 = 0x0
0x18a: REVERT 0x0 0x0
---
Entry stack: [V10, 0xd5, V92]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xd5, V92]

================================

Block 0x18b
[0x18b:0x1b3]
---
Predecessors: [0x16f]
Successors: [0x1b4]
---
0x18b JUMPDEST
0x18c PUSH1 0x0
0x18e DUP1
0x18f SLOAD
0x190 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a5 NOT
0x1a6 AND
0x1a7 PUSH1 0x1
0x1a9 PUSH1 0xa0
0x1ab PUSH1 0x2
0x1ad EXP
0x1ae SUB
0x1af DUP4
0x1b0 AND
0x1b1 OR
0x1b2 SWAP1
0x1b3 SSTORE
---
0x18b: JUMPDEST 
0x18c: V138 = 0x0
0x18f: V139 = S[0x0]
0x190: V140 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a5: V141 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1a6: V142 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V139
0x1a7: V143 = 0x1
0x1a9: V144 = 0xa0
0x1ab: V145 = 0x2
0x1ad: V146 = EXP 0x2 0xa0
0x1ae: V147 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b0: V148 = AND V92 0xffffffffffffffffffffffffffffffffffffffff
0x1b1: V149 = OR V148 V142
0x1b3: S[0x0] = V149
---
Entry stack: [V10, 0xd5, V92]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0xd5, V92]

================================

Block 0x1b4
[0x1b4:0x1b4]
---
Predecessors: [0x18b]
Successors: [0x1b5]
---
0x1b4 JUMPDEST
---
0x1b4: JUMPDEST 
---
Entry stack: [V10, 0xd5, V92]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xd5, V92]

================================

Block 0x1b5
[0x1b5:0x1b7]
---
Predecessors: [0x1b4]
Successors: [0xd5]
---
0x1b5 JUMPDEST
0x1b6 POP
0x1b7 JUMP
---
0x1b5: JUMPDEST 
0x1b7: JUMP 0xd5
---
Entry stack: [V10, 0xd5, V92]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x1b8
[0x1b8:0x1ed]
---
Predecessors: []
Successors: []
---
0x1b8 STOP
0x1b9 LOG1
0x1ba PUSH6 0x627a7a723058
0x1c1 SHA3
0x1c2 MISSING 0xcc
0x1c3 MISSING 0xe5
0x1c4 PUSH23 0xee1c8265f2b91a77d41e31a8cb103c95fe95320b1526d3
0x1dc PUSH17 0x9069e981b40029
---
0x1b8: STOP 
0x1b9: LOG S0 S1 S2
0x1ba: V150 = 0x627a7a723058
0x1c1: V151 = SHA3 0x627a7a723058 S3
0x1c2: MISSING 0xcc
0x1c3: MISSING 0xe5
0x1c4: V152 = 0xee1c8265f2b91a77d41e31a8cb103c95fe95320b1526d3
0x1dc: V153 = 0x9069e981b40029
---
Entry stack: []
Stack pops: 0
Stack additions: [V151, 0x9069e981b40029, 0xee1c8265f2b91a77d41e31a8cb103c95fe95320b1526d3]
Exit stack: []

================================

Function 0:
Public function signature: 0x83197ef0
Entry block: 0xd7
Exit block: 0x14f
Body: 0xd7, 0xde, 0xdf, 0x133, 0x14a, 0x14f

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0xe9
Exit block: 0xf9
Body: 0xe9, 0xf0, 0xf1, 0xf9, 0x160

Function 2:
Public function signature: 0xa6f9dae1
Entry block: 0x115
Exit block: 0xd5
Body: 0xd5, 0x115, 0x11c, 0x11d, 0x16f, 0x186, 0x18b, 0x1b4, 0x1b5

Function 3:
Public fallback function
Entry block: 0x54
Exit block: 0xd5
Body: 0x54, 0x58, 0x88, 0x89, 0xd3, 0xd5

