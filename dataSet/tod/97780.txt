Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x56]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x56
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x56
0xc: JUMPI 0x56 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0xb0]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x8052474d
0x3a DUP2
0x3b EQ
0x3c PUSH2 0xb0
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x8052474d
0x3b: V13 = EQ V11 0x8052474d
0x3c: V14 = 0xb0
0x3f: JUMPI 0xb0 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x13a]
---
0x40 DUP1
0x41 PUSH4 0xa9059cbb
0x46 EQ
0x47 PUSH2 0x13a
0x4a JUMPI
---
0x41: V15 = 0xa9059cbb
0x46: V16 = EQ 0xa9059cbb V11
0x47: V17 = 0x13a
0x4a: JUMPI 0x13a V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x15c]
---
0x4b DUP1
0x4c PUSH4 0xb67b1a4d
0x51 EQ
0x52 PUSH2 0x15c
0x55 JUMPI
---
0x4c: V18 = 0xb67b1a4d
0x51: V19 = EQ 0xb67b1a4d V11
0x52: V20 = 0x15c
0x55: JUMPI 0x15c V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x6c]
---
Predecessors: [0x0, 0x4b]
Successors: [0x6d, 0x71]
---
0x56 JUMPDEST
0x57 PUSH1 0x2
0x59 SLOAD
0x5a CALLER
0x5b PUSH1 0x1
0x5d PUSH1 0xa0
0x5f PUSH1 0x2
0x61 EXP
0x62 SUB
0x63 SWAP1
0x64 DUP2
0x65 AND
0x66 SWAP2
0x67 AND
0x68 EQ
0x69 PUSH2 0x71
0x6c JUMPI
---
0x56: JUMPDEST 
0x57: V21 = 0x2
0x59: V22 = S[0x2]
0x5a: V23 = CALLER
0x5b: V24 = 0x1
0x5d: V25 = 0xa0
0x5f: V26 = 0x2
0x61: V27 = EXP 0x2 0xa0
0x62: V28 = SUB 0x10000000000000000000000000000000000000000 0x1
0x65: V29 = AND 0xffffffffffffffffffffffffffffffffffffffff V23
0x67: V30 = AND V22 0xffffffffffffffffffffffffffffffffffffffff
0x68: V31 = EQ V30 V29
0x69: V32 = 0x71
0x6c: JUMPI 0x71 V31
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x70]
---
Predecessors: [0x56]
Successors: []
---
0x6d PUSH1 0x0
0x6f DUP1
0x70 REVERT
---
0x6d: V33 = 0x0
0x70: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x71
[0x71:0xa9]
---
Predecessors: [0x56]
Successors: [0xaa, 0xae]
---
0x71 JUMPDEST
0x72 CALLER
0x73 PUSH1 0x1
0x75 PUSH1 0xa0
0x77 PUSH1 0x2
0x79 EXP
0x7a SUB
0x7b AND
0x7c PUSH2 0x8fc
0x7f ADDRESS
0x80 PUSH1 0x1
0x82 PUSH1 0xa0
0x84 PUSH1 0x2
0x86 EXP
0x87 SUB
0x88 AND
0x89 BALANCE
0x8a SWAP1
0x8b DUP2
0x8c ISZERO
0x8d MUL
0x8e SWAP1
0x8f PUSH1 0x40
0x91 MLOAD
0x92 PUSH1 0x0
0x94 PUSH1 0x40
0x96 MLOAD
0x97 DUP1
0x98 DUP4
0x99 SUB
0x9a DUP2
0x9b DUP6
0x9c DUP9
0x9d DUP9
0x9e CALL
0x9f SWAP4
0xa0 POP
0xa1 POP
0xa2 POP
0xa3 POP
0xa4 ISZERO
0xa5 ISZERO
0xa6 PUSH2 0xae
0xa9 JUMPI
---
0x71: JUMPDEST 
0x72: V34 = CALLER
0x73: V35 = 0x1
0x75: V36 = 0xa0
0x77: V37 = 0x2
0x79: V38 = EXP 0x2 0xa0
0x7a: V39 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7b: V40 = AND 0xffffffffffffffffffffffffffffffffffffffff V34
0x7c: V41 = 0x8fc
0x7f: V42 = ADDRESS
0x80: V43 = 0x1
0x82: V44 = 0xa0
0x84: V45 = 0x2
0x86: V46 = EXP 0x2 0xa0
0x87: V47 = SUB 0x10000000000000000000000000000000000000000 0x1
0x88: V48 = AND 0xffffffffffffffffffffffffffffffffffffffff V42
0x89: V49 = BALANCE V48
0x8c: V50 = ISZERO V49
0x8d: V51 = MUL V50 0x8fc
0x8f: V52 = 0x40
0x91: V53 = M[0x40]
0x92: V54 = 0x0
0x94: V55 = 0x40
0x96: V56 = M[0x40]
0x99: V57 = SUB V53 V56
0x9e: V58 = CALL V51 V40 V49 V56 V57 V56 0x0
0xa4: V59 = ISZERO V58
0xa5: V60 = ISZERO V59
0xa6: V61 = 0xae
0xa9: JUMPI 0xae V60
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xaa
[0xaa:0xad]
---
Predecessors: [0x71]
Successors: []
---
0xaa PUSH1 0x0
0xac DUP1
0xad REVERT
---
0xaa: V62 = 0x0
0xad: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xae
[0xae:0xaf]
---
Predecessors: [0x71, 0x218, 0x274]
Successors: []
---
0xae JUMPDEST
0xaf STOP
---
0xae: JUMPDEST 
0xaf: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb0
[0xb0:0xb6]
---
Predecessors: [0xd]
Successors: [0xb7, 0xbb]
---
0xb0 JUMPDEST
0xb1 CALLVALUE
0xb2 ISZERO
0xb3 PUSH2 0xbb
0xb6 JUMPI
---
0xb0: JUMPDEST 
0xb1: V63 = CALLVALUE
0xb2: V64 = ISZERO V63
0xb3: V65 = 0xbb
0xb6: JUMPI 0xbb V64
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb7
[0xb7:0xba]
---
Predecessors: [0xb0]
Successors: []
---
0xb7 PUSH1 0x0
0xb9 DUP1
0xba REVERT
---
0xb7: V66 = 0x0
0xba: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xbb
[0xbb:0xc2]
---
Predecessors: [0xb0]
Successors: [0x16f]
---
0xbb JUMPDEST
0xbc PUSH2 0xc3
0xbf PUSH2 0x16f
0xc2 JUMP
---
0xbb: JUMPDEST 
0xbc: V67 = 0xc3
0xbf: V68 = 0x16f
0xc2: JUMP 0x16f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xc3]
Exit stack: [V11, 0xc3]

================================

Block 0xc3
[0xc3:0xe6]
---
Predecessors: [0x205]
Successors: [0xe7]
---
0xc3 JUMPDEST
0xc4 PUSH1 0x40
0xc6 MLOAD
0xc7 PUSH1 0x20
0xc9 DUP1
0xca DUP3
0xcb MSTORE
0xcc DUP2
0xcd SWAP1
0xce DUP2
0xcf ADD
0xd0 DUP4
0xd1 DUP2
0xd2 DUP2
0xd3 MLOAD
0xd4 DUP2
0xd5 MSTORE
0xd6 PUSH1 0x20
0xd8 ADD
0xd9 SWAP2
0xda POP
0xdb DUP1
0xdc MLOAD
0xdd SWAP1
0xde PUSH1 0x20
0xe0 ADD
0xe1 SWAP1
0xe2 DUP1
0xe3 DUP4
0xe4 DUP4
0xe5 PUSH1 0x0
---
0xc3: JUMPDEST 
0xc4: V69 = 0x40
0xc6: V70 = M[0x40]
0xc7: V71 = 0x20
0xcb: M[V70] = 0x20
0xcf: V72 = ADD V70 0x20
0xd3: V73 = M[V151]
0xd5: M[V72] = V73
0xd6: V74 = 0x20
0xd8: V75 = ADD 0x20 V72
0xdc: V76 = M[V151]
0xde: V77 = 0x20
0xe0: V78 = ADD 0x20 V151
0xe5: V79 = 0x0
---
Entry stack: [V11, 0xc3, V151]
Stack pops: 1
Stack additions: [S0, V70, V70, V75, V78, V76, V76, V75, V78, 0x0]
Exit stack: [V11, 0xc3, V151, V70, V70, V75, V78, V76, V76, V75, V78, 0x0]

================================

Block 0xe7
[0xe7:0xef]
---
Predecessors: [0xc3, 0xf0]
Successors: [0xf0, 0xff]
---
0xe7 JUMPDEST
0xe8 DUP4
0xe9 DUP2
0xea LT
0xeb ISZERO
0xec PUSH2 0xff
0xef JUMPI
---
0xe7: JUMPDEST 
0xea: V80 = LT S0 V76
0xeb: V81 = ISZERO V80
0xec: V82 = 0xff
0xef: JUMPI 0xff V81
---
Entry stack: [V11, 0xc3, V151, V70, V70, V75, V78, V76, V76, V75, V78, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0xc3, V151, V70, V70, V75, V78, V76, V76, V75, V78, S0]

================================

Block 0xf0
[0xf0:0xfe]
---
Predecessors: [0xe7]
Successors: [0xe7]
---
0xf0 DUP1
0xf1 DUP3
0xf2 ADD
0xf3 MLOAD
0xf4 DUP4
0xf5 DUP3
0xf6 ADD
0xf7 MSTORE
0xf8 PUSH1 0x20
0xfa ADD
0xfb PUSH2 0xe7
0xfe JUMP
---
0xf2: V83 = ADD V78 S0
0xf3: V84 = M[V83]
0xf6: V85 = ADD S0 V75
0xf7: M[V85] = V84
0xf8: V86 = 0x20
0xfa: V87 = ADD 0x20 S0
0xfb: V88 = 0xe7
0xfe: JUMP 0xe7
---
Entry stack: [V11, 0xc3, V151, V70, V70, V75, V78, V76, V76, V75, V78, S0]
Stack pops: 3
Stack additions: [S2, S1, V87]
Exit stack: [V11, 0xc3, V151, V70, V70, V75, V78, V76, V76, V75, V78, V87]

================================

Block 0xff
[0xff:0x112]
---
Predecessors: [0xe7]
Successors: [0x113, 0x12c]
---
0xff JUMPDEST
0x100 POP
0x101 POP
0x102 POP
0x103 POP
0x104 SWAP1
0x105 POP
0x106 SWAP1
0x107 DUP2
0x108 ADD
0x109 SWAP1
0x10a PUSH1 0x1f
0x10c AND
0x10d DUP1
0x10e ISZERO
0x10f PUSH2 0x12c
0x112 JUMPI
---
0xff: JUMPDEST 
0x108: V89 = ADD V76 V75
0x10a: V90 = 0x1f
0x10c: V91 = AND 0x1f V76
0x10e: V92 = ISZERO V91
0x10f: V93 = 0x12c
0x112: JUMPI 0x12c V92
---
Entry stack: [V11, 0xc3, V151, V70, V70, V75, V78, V76, V76, V75, V78, S0]
Stack pops: 7
Stack additions: [V89, V91]
Exit stack: [V11, 0xc3, V151, V70, V70, V89, V91]

================================

Block 0x113
[0x113:0x12b]
---
Predecessors: [0xff]
Successors: [0x12c]
---
0x113 DUP1
0x114 DUP3
0x115 SUB
0x116 DUP1
0x117 MLOAD
0x118 PUSH1 0x1
0x11a DUP4
0x11b PUSH1 0x20
0x11d SUB
0x11e PUSH2 0x100
0x121 EXP
0x122 SUB
0x123 NOT
0x124 AND
0x125 DUP2
0x126 MSTORE
0x127 PUSH1 0x20
0x129 ADD
0x12a SWAP2
0x12b POP
---
0x115: V94 = SUB V89 V91
0x117: V95 = M[V94]
0x118: V96 = 0x1
0x11b: V97 = 0x20
0x11d: V98 = SUB 0x20 V91
0x11e: V99 = 0x100
0x121: V100 = EXP 0x100 V98
0x122: V101 = SUB V100 0x1
0x123: V102 = NOT V101
0x124: V103 = AND V102 V95
0x126: M[V94] = V103
0x127: V104 = 0x20
0x129: V105 = ADD 0x20 V94
---
Entry stack: [V11, 0xc3, V151, V70, V70, V89, V91]
Stack pops: 2
Stack additions: [V105, S0]
Exit stack: [V11, 0xc3, V151, V70, V70, V105, V91]

================================

Block 0x12c
[0x12c:0x139]
---
Predecessors: [0xff, 0x113]
Successors: []
---
0x12c JUMPDEST
0x12d POP
0x12e SWAP3
0x12f POP
0x130 POP
0x131 POP
0x132 PUSH1 0x40
0x134 MLOAD
0x135 DUP1
0x136 SWAP2
0x137 SUB
0x138 SWAP1
0x139 RETURN
---
0x12c: JUMPDEST 
0x132: V106 = 0x40
0x134: V107 = M[0x40]
0x137: V108 = SUB S1 V107
0x139: RETURN V107 V108
---
Entry stack: [V11, 0xc3, V151, V70, V70, S1, V91]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0xc3]

================================

Block 0x13a
[0x13a:0x140]
---
Predecessors: [0x40]
Successors: [0x141, 0x145]
---
0x13a JUMPDEST
0x13b CALLVALUE
0x13c ISZERO
0x13d PUSH2 0x145
0x140 JUMPI
---
0x13a: JUMPDEST 
0x13b: V109 = CALLVALUE
0x13c: V110 = ISZERO V109
0x13d: V111 = 0x145
0x140: JUMPI 0x145 V110
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x141
[0x141:0x144]
---
Predecessors: [0x13a]
Successors: []
---
0x141 PUSH1 0x0
0x143 DUP1
0x144 REVERT
---
0x141: V112 = 0x0
0x144: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x145
[0x145:0x15b]
---
Predecessors: [0x13a]
Successors: [0x20d]
---
0x145 JUMPDEST
0x146 PUSH2 0xae
0x149 PUSH1 0x1
0x14b PUSH1 0xa0
0x14d PUSH1 0x2
0x14f EXP
0x150 SUB
0x151 PUSH1 0x4
0x153 CALLDATALOAD
0x154 AND
0x155 PUSH1 0x24
0x157 CALLDATALOAD
0x158 PUSH2 0x20d
0x15b JUMP
---
0x145: JUMPDEST 
0x146: V113 = 0xae
0x149: V114 = 0x1
0x14b: V115 = 0xa0
0x14d: V116 = 0x2
0x14f: V117 = EXP 0x2 0xa0
0x150: V118 = SUB 0x10000000000000000000000000000000000000000 0x1
0x151: V119 = 0x4
0x153: V120 = CALLDATALOAD 0x4
0x154: V121 = AND V120 0xffffffffffffffffffffffffffffffffffffffff
0x155: V122 = 0x24
0x157: V123 = CALLDATALOAD 0x24
0x158: V124 = 0x20d
0x15b: JUMP 0x20d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xae, V121, V123]
Exit stack: [V11, 0xae, V121, V123]

================================

Block 0x15c
[0x15c:0x162]
---
Predecessors: [0x4b]
Successors: [0x163, 0x167]
---
0x15c JUMPDEST
0x15d CALLVALUE
0x15e ISZERO
0x15f PUSH2 0x167
0x162 JUMPI
---
0x15c: JUMPDEST 
0x15d: V125 = CALLVALUE
0x15e: V126 = ISZERO V125
0x15f: V127 = 0x167
0x162: JUMPI 0x167 V126
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x163
[0x163:0x166]
---
Predecessors: [0x15c]
Successors: []
---
0x163 PUSH1 0x0
0x165 DUP1
0x166 REVERT
---
0x163: V128 = 0x0
0x166: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x167
[0x167:0x16e]
---
Predecessors: [0x15c]
Successors: [0x21c]
---
0x167 JUMPDEST
0x168 PUSH2 0xae
0x16b PUSH2 0x21c
0x16e JUMP
---
0x167: JUMPDEST 
0x168: V129 = 0xae
0x16b: V130 = 0x21c
0x16e: JUMP 0x21c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xae]
Exit stack: [V11, 0xae]

================================

Block 0x16f
[0x16f:0x1be]
---
Predecessors: [0xbb]
Successors: [0x1bf, 0x205]
---
0x16f JUMPDEST
0x170 PUSH1 0x0
0x172 DUP1
0x173 SLOAD
0x174 PUSH1 0x1
0x176 DUP2
0x177 PUSH1 0x1
0x179 AND
0x17a ISZERO
0x17b PUSH2 0x100
0x17e MUL
0x17f SUB
0x180 AND
0x181 PUSH1 0x2
0x183 SWAP1
0x184 DIV
0x185 DUP1
0x186 PUSH1 0x1f
0x188 ADD
0x189 PUSH1 0x20
0x18b DUP1
0x18c SWAP2
0x18d DIV
0x18e MUL
0x18f PUSH1 0x20
0x191 ADD
0x192 PUSH1 0x40
0x194 MLOAD
0x195 SWAP1
0x196 DUP2
0x197 ADD
0x198 PUSH1 0x40
0x19a MSTORE
0x19b DUP1
0x19c SWAP3
0x19d SWAP2
0x19e SWAP1
0x19f DUP2
0x1a0 DUP2
0x1a1 MSTORE
0x1a2 PUSH1 0x20
0x1a4 ADD
0x1a5 DUP3
0x1a6 DUP1
0x1a7 SLOAD
0x1a8 PUSH1 0x1
0x1aa DUP2
0x1ab PUSH1 0x1
0x1ad AND
0x1ae ISZERO
0x1af PUSH2 0x100
0x1b2 MUL
0x1b3 SUB
0x1b4 AND
0x1b5 PUSH1 0x2
0x1b7 SWAP1
0x1b8 DIV
0x1b9 DUP1
0x1ba ISZERO
0x1bb PUSH2 0x205
0x1be JUMPI
---
0x16f: JUMPDEST 
0x170: V131 = 0x0
0x173: V132 = S[0x0]
0x174: V133 = 0x1
0x177: V134 = 0x1
0x179: V135 = AND 0x1 V132
0x17a: V136 = ISZERO V135
0x17b: V137 = 0x100
0x17e: V138 = MUL 0x100 V136
0x17f: V139 = SUB V138 0x1
0x180: V140 = AND V139 V132
0x181: V141 = 0x2
0x184: V142 = DIV V140 0x2
0x186: V143 = 0x1f
0x188: V144 = ADD 0x1f V142
0x189: V145 = 0x20
0x18d: V146 = DIV V144 0x20
0x18e: V147 = MUL V146 0x20
0x18f: V148 = 0x20
0x191: V149 = ADD 0x20 V147
0x192: V150 = 0x40
0x194: V151 = M[0x40]
0x197: V152 = ADD V151 V149
0x198: V153 = 0x40
0x19a: M[0x40] = V152
0x1a1: M[V151] = V142
0x1a2: V154 = 0x20
0x1a4: V155 = ADD 0x20 V151
0x1a7: V156 = S[0x0]
0x1a8: V157 = 0x1
0x1ab: V158 = 0x1
0x1ad: V159 = AND 0x1 V156
0x1ae: V160 = ISZERO V159
0x1af: V161 = 0x100
0x1b2: V162 = MUL 0x100 V160
0x1b3: V163 = SUB V162 0x1
0x1b4: V164 = AND V163 V156
0x1b5: V165 = 0x2
0x1b8: V166 = DIV V164 0x2
0x1ba: V167 = ISZERO V166
0x1bb: V168 = 0x205
0x1be: JUMPI 0x205 V167
---
Entry stack: [V11, 0xc3]
Stack pops: 0
Stack additions: [V151, 0x0, V142, V155, 0x0, V166]
Exit stack: [V11, 0xc3, V151, 0x0, V142, V155, 0x0, V166]

================================

Block 0x1bf
[0x1bf:0x1c6]
---
Predecessors: [0x16f]
Successors: [0x1c7, 0x1da]
---
0x1bf DUP1
0x1c0 PUSH1 0x1f
0x1c2 LT
0x1c3 PUSH2 0x1da
0x1c6 JUMPI
---
0x1c0: V169 = 0x1f
0x1c2: V170 = LT 0x1f V166
0x1c3: V171 = 0x1da
0x1c6: JUMPI 0x1da V170
---
Entry stack: [V11, 0xc3, V151, 0x0, V142, V155, 0x0, V166]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xc3, V151, 0x0, V142, V155, 0x0, V166]

================================

Block 0x1c7
[0x1c7:0x1d9]
---
Predecessors: [0x1bf]
Successors: [0x205]
---
0x1c7 PUSH2 0x100
0x1ca DUP1
0x1cb DUP4
0x1cc SLOAD
0x1cd DIV
0x1ce MUL
0x1cf DUP4
0x1d0 MSTORE
0x1d1 SWAP2
0x1d2 PUSH1 0x20
0x1d4 ADD
0x1d5 SWAP2
0x1d6 PUSH2 0x205
0x1d9 JUMP
---
0x1c7: V172 = 0x100
0x1cc: V173 = S[0x0]
0x1cd: V174 = DIV V173 0x100
0x1ce: V175 = MUL V174 0x100
0x1d0: M[V155] = V175
0x1d2: V176 = 0x20
0x1d4: V177 = ADD 0x20 V155
0x1d6: V178 = 0x205
0x1d9: JUMP 0x205
---
Entry stack: [V11, 0xc3, V151, 0x0, V142, V155, 0x0, V166]
Stack pops: 3
Stack additions: [V177, S1, S0]
Exit stack: [V11, 0xc3, V151, 0x0, V142, V177, 0x0, V166]

================================

Block 0x1da
[0x1da:0x1e7]
---
Predecessors: [0x1bf]
Successors: [0x1e8]
---
0x1da JUMPDEST
0x1db DUP3
0x1dc ADD
0x1dd SWAP2
0x1de SWAP1
0x1df PUSH1 0x0
0x1e1 MSTORE
0x1e2 PUSH1 0x20
0x1e4 PUSH1 0x0
0x1e6 SHA3
0x1e7 SWAP1
---
0x1da: JUMPDEST 
0x1dc: V179 = ADD V155 V166
0x1df: V180 = 0x0
0x1e1: M[0x0] = 0x0
0x1e2: V181 = 0x20
0x1e4: V182 = 0x0
0x1e6: V183 = SHA3 0x0 0x20
---
Entry stack: [V11, 0xc3, V151, 0x0, V142, V155, 0x0, V166]
Stack pops: 3
Stack additions: [V179, V183, S2]
Exit stack: [V11, 0xc3, V151, 0x0, V142, V179, V183, V155]

================================

Block 0x1e8
[0x1e8:0x1fb]
---
Predecessors: [0x1da, 0x1e8]
Successors: [0x1e8, 0x1fc]
---
0x1e8 JUMPDEST
0x1e9 DUP2
0x1ea SLOAD
0x1eb DUP2
0x1ec MSTORE
0x1ed SWAP1
0x1ee PUSH1 0x1
0x1f0 ADD
0x1f1 SWAP1
0x1f2 PUSH1 0x20
0x1f4 ADD
0x1f5 DUP1
0x1f6 DUP4
0x1f7 GT
0x1f8 PUSH2 0x1e8
0x1fb JUMPI
---
0x1e8: JUMPDEST 
0x1ea: V184 = S[S1]
0x1ec: M[S0] = V184
0x1ee: V185 = 0x1
0x1f0: V186 = ADD 0x1 S1
0x1f2: V187 = 0x20
0x1f4: V188 = ADD 0x20 S0
0x1f7: V189 = GT V179 V188
0x1f8: V190 = 0x1e8
0x1fb: JUMPI 0x1e8 V189
---
Entry stack: [V11, 0xc3, V151, 0x0, V142, V179, S1, S0]
Stack pops: 3
Stack additions: [S2, V186, V188]
Exit stack: [V11, 0xc3, V151, 0x0, V142, V179, V186, V188]

================================

Block 0x1fc
[0x1fc:0x204]
---
Predecessors: [0x1e8]
Successors: [0x205]
---
0x1fc DUP3
0x1fd SWAP1
0x1fe SUB
0x1ff PUSH1 0x1f
0x201 AND
0x202 DUP3
0x203 ADD
0x204 SWAP2
---
0x1fe: V191 = SUB V188 V179
0x1ff: V192 = 0x1f
0x201: V193 = AND 0x1f V191
0x203: V194 = ADD V179 V193
---
Entry stack: [V11, 0xc3, V151, 0x0, V142, V179, V186, V188]
Stack pops: 3
Stack additions: [V194, S1, S2]
Exit stack: [V11, 0xc3, V151, 0x0, V142, V194, V186, V179]

================================

Block 0x205
[0x205:0x20c]
---
Predecessors: [0x16f, 0x1c7, 0x1fc]
Successors: [0xc3]
---
0x205 JUMPDEST
0x206 POP
0x207 POP
0x208 POP
0x209 POP
0x20a POP
0x20b DUP2
0x20c JUMP
---
0x205: JUMPDEST 
0x20c: JUMP 0xc3
---
Entry stack: [V11, 0xc3, V151, 0x0, V142, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V11, 0xc3, V151]

================================

Block 0x20d
[0x20d:0x217]
---
Predecessors: [0x145]
Successors: [0x2c4]
---
0x20d JUMPDEST
0x20e PUSH2 0x218
0x211 CALLER
0x212 DUP4
0x213 DUP4
0x214 PUSH2 0x2c4
0x217 JUMP
---
0x20d: JUMPDEST 
0x20e: V195 = 0x218
0x211: V196 = CALLER
0x214: V197 = 0x2c4
0x217: JUMP 0x2c4
---
Entry stack: [V11, 0xae, V121, V123]
Stack pops: 2
Stack additions: [S1, S0, 0x218, V196, S1, S0]
Exit stack: [V11, 0xae, V121, V123, 0x218, V196, V121, V123]

================================

Block 0x218
[0x218:0x21b]
---
Predecessors: [0x2ff]
Successors: [0xae]
---
0x218 JUMPDEST
0x219 POP
0x21a POP
0x21b JUMP
---
0x218: JUMPDEST 
0x21b: JUMP 0xae
---
Entry stack: [V11, 0xae, V121, V123]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x21c
[0x21c:0x232]
---
Predecessors: [0x167]
Successors: [0x233, 0x237]
---
0x21c JUMPDEST
0x21d PUSH1 0x2
0x21f SLOAD
0x220 CALLER
0x221 PUSH1 0x1
0x223 PUSH1 0xa0
0x225 PUSH1 0x2
0x227 EXP
0x228 SUB
0x229 SWAP1
0x22a DUP2
0x22b AND
0x22c SWAP2
0x22d AND
0x22e EQ
0x22f PUSH2 0x237
0x232 JUMPI
---
0x21c: JUMPDEST 
0x21d: V198 = 0x2
0x21f: V199 = S[0x2]
0x220: V200 = CALLER
0x221: V201 = 0x1
0x223: V202 = 0xa0
0x225: V203 = 0x2
0x227: V204 = EXP 0x2 0xa0
0x228: V205 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22b: V206 = AND 0xffffffffffffffffffffffffffffffffffffffff V200
0x22d: V207 = AND V199 0xffffffffffffffffffffffffffffffffffffffff
0x22e: V208 = EQ V207 V206
0x22f: V209 = 0x237
0x232: JUMPI 0x237 V208
---
Entry stack: [V11, 0xae]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xae]

================================

Block 0x233
[0x233:0x236]
---
Predecessors: [0x21c]
Successors: []
---
0x233 PUSH1 0x0
0x235 DUP1
0x236 REVERT
---
0x233: V210 = 0x0
0x236: REVERT 0x0 0x0
---
Entry stack: [V11, 0xae]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xae]

================================

Block 0x237
[0x237:0x26f]
---
Predecessors: [0x21c]
Successors: [0x270, 0x274]
---
0x237 JUMPDEST
0x238 CALLER
0x239 PUSH1 0x1
0x23b PUSH1 0xa0
0x23d PUSH1 0x2
0x23f EXP
0x240 SUB
0x241 AND
0x242 PUSH2 0x8fc
0x245 ADDRESS
0x246 PUSH1 0x1
0x248 PUSH1 0xa0
0x24a PUSH1 0x2
0x24c EXP
0x24d SUB
0x24e AND
0x24f BALANCE
0x250 SWAP1
0x251 DUP2
0x252 ISZERO
0x253 MUL
0x254 SWAP1
0x255 PUSH1 0x40
0x257 MLOAD
0x258 PUSH1 0x0
0x25a PUSH1 0x40
0x25c MLOAD
0x25d DUP1
0x25e DUP4
0x25f SUB
0x260 DUP2
0x261 DUP6
0x262 DUP9
0x263 DUP9
0x264 CALL
0x265 SWAP4
0x266 POP
0x267 POP
0x268 POP
0x269 POP
0x26a ISZERO
0x26b ISZERO
0x26c PUSH2 0x274
0x26f JUMPI
---
0x237: JUMPDEST 
0x238: V211 = CALLER
0x239: V212 = 0x1
0x23b: V213 = 0xa0
0x23d: V214 = 0x2
0x23f: V215 = EXP 0x2 0xa0
0x240: V216 = SUB 0x10000000000000000000000000000000000000000 0x1
0x241: V217 = AND 0xffffffffffffffffffffffffffffffffffffffff V211
0x242: V218 = 0x8fc
0x245: V219 = ADDRESS
0x246: V220 = 0x1
0x248: V221 = 0xa0
0x24a: V222 = 0x2
0x24c: V223 = EXP 0x2 0xa0
0x24d: V224 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24e: V225 = AND 0xffffffffffffffffffffffffffffffffffffffff V219
0x24f: V226 = BALANCE V225
0x252: V227 = ISZERO V226
0x253: V228 = MUL V227 0x8fc
0x255: V229 = 0x40
0x257: V230 = M[0x40]
0x258: V231 = 0x0
0x25a: V232 = 0x40
0x25c: V233 = M[0x40]
0x25f: V234 = SUB V230 V233
0x264: V235 = CALL V228 V217 V226 V233 V234 V233 0x0
0x26a: V236 = ISZERO V235
0x26b: V237 = ISZERO V236
0x26c: V238 = 0x274
0x26f: JUMPI 0x274 V237
---
Entry stack: [V11, 0xae]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xae]

================================

Block 0x270
[0x270:0x273]
---
Predecessors: [0x237]
Successors: []
---
0x270 PUSH1 0x0
0x272 DUP1
0x273 REVERT
---
0x270: V239 = 0x0
0x273: REVERT 0x0 0x0
---
Entry stack: [V11, 0xae]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xae]

================================

Block 0x274
[0x274:0x2c3]
---
Predecessors: [0x237]
Successors: [0xae]
---
0x274 JUMPDEST
0x275 PUSH32 0x884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364
0x296 CALLER
0x297 ADDRESS
0x298 PUSH1 0x1
0x29a PUSH1 0xa0
0x29c PUSH1 0x2
0x29e EXP
0x29f SUB
0x2a0 AND
0x2a1 BALANCE
0x2a2 PUSH1 0x40
0x2a4 MLOAD
0x2a5 PUSH1 0x1
0x2a7 PUSH1 0xa0
0x2a9 PUSH1 0x2
0x2ab EXP
0x2ac SUB
0x2ad SWAP1
0x2ae SWAP3
0x2af AND
0x2b0 DUP3
0x2b1 MSTORE
0x2b2 PUSH1 0x20
0x2b4 DUP3
0x2b5 ADD
0x2b6 MSTORE
0x2b7 PUSH1 0x40
0x2b9 SWAP1
0x2ba DUP2
0x2bb ADD
0x2bc SWAP1
0x2bd MLOAD
0x2be DUP1
0x2bf SWAP2
0x2c0 SUB
0x2c1 SWAP1
0x2c2 LOG1
0x2c3 JUMP
---
0x274: JUMPDEST 
0x275: V240 = 0x884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364
0x296: V241 = CALLER
0x297: V242 = ADDRESS
0x298: V243 = 0x1
0x29a: V244 = 0xa0
0x29c: V245 = 0x2
0x29e: V246 = EXP 0x2 0xa0
0x29f: V247 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a0: V248 = AND 0xffffffffffffffffffffffffffffffffffffffff V242
0x2a1: V249 = BALANCE V248
0x2a2: V250 = 0x40
0x2a4: V251 = M[0x40]
0x2a5: V252 = 0x1
0x2a7: V253 = 0xa0
0x2a9: V254 = 0x2
0x2ab: V255 = EXP 0x2 0xa0
0x2ac: V256 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2af: V257 = AND V241 0xffffffffffffffffffffffffffffffffffffffff
0x2b1: M[V251] = V257
0x2b2: V258 = 0x20
0x2b5: V259 = ADD V251 0x20
0x2b6: M[V259] = V249
0x2b7: V260 = 0x40
0x2bb: V261 = ADD 0x40 V251
0x2bd: V262 = M[0x40]
0x2c0: V263 = SUB V261 V262
0x2c2: LOG V262 V263 0x884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364
0x2c3: JUMP 0xae
---
Entry stack: [V11, 0xae]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x2c4
[0x2c4:0x2d4]
---
Predecessors: [0x20d]
Successors: [0x2d5, 0x2d9]
---
0x2c4 JUMPDEST
0x2c5 PUSH1 0x1
0x2c7 PUSH1 0xa0
0x2c9 PUSH1 0x2
0x2cb EXP
0x2cc SUB
0x2cd DUP3
0x2ce AND
0x2cf ISZERO
0x2d0 ISZERO
0x2d1 PUSH2 0x2d9
0x2d4 JUMPI
---
0x2c4: JUMPDEST 
0x2c5: V264 = 0x1
0x2c7: V265 = 0xa0
0x2c9: V266 = 0x2
0x2cb: V267 = EXP 0x2 0xa0
0x2cc: V268 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ce: V269 = AND V121 0xffffffffffffffffffffffffffffffffffffffff
0x2cf: V270 = ISZERO V269
0x2d0: V271 = ISZERO V270
0x2d1: V272 = 0x2d9
0x2d4: JUMPI 0x2d9 V271
---
Entry stack: [V11, 0xae, V121, V123, 0x218, V196, V121, V123]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0xae, V121, V123, 0x218, V196, V121, V123]

================================

Block 0x2d5
[0x2d5:0x2d8]
---
Predecessors: [0x2c4]
Successors: []
---
0x2d5 PUSH1 0x0
0x2d7 DUP1
0x2d8 REVERT
---
0x2d5: V273 = 0x0
0x2d8: REVERT 0x0 0x0
---
Entry stack: [V11, 0xae, V121, V123, 0x218, V196, V121, V123]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xae, V121, V123, 0x218, V196, V121, V123]

================================

Block 0x2d9
[0x2d9:0x2fa]
---
Predecessors: [0x2c4]
Successors: [0x2fb, 0x2ff]
---
0x2d9 JUMPDEST
0x2da PUSH1 0x1
0x2dc PUSH1 0xa0
0x2de PUSH1 0x2
0x2e0 EXP
0x2e1 SUB
0x2e2 DUP4
0x2e3 AND
0x2e4 PUSH1 0x0
0x2e6 SWAP1
0x2e7 DUP2
0x2e8 MSTORE
0x2e9 PUSH1 0x1
0x2eb PUSH1 0x20
0x2ed MSTORE
0x2ee PUSH1 0x40
0x2f0 SWAP1
0x2f1 SHA3
0x2f2 SLOAD
0x2f3 DUP2
0x2f4 SWAP1
0x2f5 LT
0x2f6 ISZERO
0x2f7 PUSH2 0x2ff
0x2fa JUMPI
---
0x2d9: JUMPDEST 
0x2da: V274 = 0x1
0x2dc: V275 = 0xa0
0x2de: V276 = 0x2
0x2e0: V277 = EXP 0x2 0xa0
0x2e1: V278 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e3: V279 = AND V196 0xffffffffffffffffffffffffffffffffffffffff
0x2e4: V280 = 0x0
0x2e8: M[0x0] = V279
0x2e9: V281 = 0x1
0x2eb: V282 = 0x20
0x2ed: M[0x20] = 0x1
0x2ee: V283 = 0x40
0x2f1: V284 = SHA3 0x0 0x40
0x2f2: V285 = S[V284]
0x2f5: V286 = LT V285 V123
0x2f6: V287 = ISZERO V286
0x2f7: V288 = 0x2ff
0x2fa: JUMPI 0x2ff V287
---
Entry stack: [V11, 0xae, V121, V123, 0x218, V196, V121, V123]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0xae, V121, V123, 0x218, V196, V121, V123]

================================

Block 0x2fb
[0x2fb:0x2fe]
---
Predecessors: [0x2d9]
Successors: []
---
0x2fb PUSH1 0x0
0x2fd DUP1
0x2fe REVERT
---
0x2fb: V289 = 0x0
0x2fe: REVERT 0x0 0x0
---
Entry stack: [V11, 0xae, V121, V123, 0x218, V196, V121, V123]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xae, V121, V123, 0x218, V196, V121, V123]

================================

Block 0x2ff
[0x2ff:0x35c]
---
Predecessors: [0x2d9]
Successors: [0x218]
---
0x2ff JUMPDEST
0x300 PUSH1 0x1
0x302 PUSH1 0xa0
0x304 PUSH1 0x2
0x306 EXP
0x307 SUB
0x308 DUP1
0x309 DUP5
0x30a AND
0x30b PUSH1 0x0
0x30d DUP2
0x30e DUP2
0x30f MSTORE
0x310 PUSH1 0x1
0x312 PUSH1 0x20
0x314 MSTORE
0x315 PUSH1 0x40
0x317 SWAP1
0x318 DUP2
0x319 SWAP1
0x31a SHA3
0x31b DUP1
0x31c SLOAD
0x31d DUP6
0x31e SWAP1
0x31f SUB
0x320 SWAP1
0x321 SSTORE
0x322 SWAP2
0x323 DUP5
0x324 AND
0x325 SWAP2
0x326 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x347 SWAP1
0x348 DUP5
0x349 SWAP1
0x34a MLOAD
0x34b SWAP1
0x34c DUP2
0x34d MSTORE
0x34e PUSH1 0x20
0x350 ADD
0x351 PUSH1 0x40
0x353 MLOAD
0x354 DUP1
0x355 SWAP2
0x356 SUB
0x357 SWAP1
0x358 LOG3
0x359 POP
0x35a POP
0x35b POP
0x35c JUMP
---
0x2ff: JUMPDEST 
0x300: V290 = 0x1
0x302: V291 = 0xa0
0x304: V292 = 0x2
0x306: V293 = EXP 0x2 0xa0
0x307: V294 = SUB 0x10000000000000000000000000000000000000000 0x1
0x30a: V295 = AND V196 0xffffffffffffffffffffffffffffffffffffffff
0x30b: V296 = 0x0
0x30f: M[0x0] = V295
0x310: V297 = 0x1
0x312: V298 = 0x20
0x314: M[0x20] = 0x1
0x315: V299 = 0x40
0x31a: V300 = SHA3 0x0 0x40
0x31c: V301 = S[V300]
0x31f: V302 = SUB V301 V123
0x321: S[V300] = V302
0x324: V303 = AND V121 0xffffffffffffffffffffffffffffffffffffffff
0x326: V304 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x34a: V305 = M[0x40]
0x34d: M[V305] = V123
0x34e: V306 = 0x20
0x350: V307 = ADD 0x20 V305
0x351: V308 = 0x40
0x353: V309 = M[0x40]
0x356: V310 = SUB V307 V309
0x358: LOG V309 V310 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V295 V303
0x35c: JUMP 0x218
---
Entry stack: [V11, 0xae, V121, V123, 0x218, V196, V121, V123]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0xae, V121, V123]

================================

Block 0x35d
[0x35d:0x3a0]
---
Predecessors: []
Successors: []
---
0x35d STOP
0x35e LOG1
0x35f PUSH6 0x627a7a723058
0x366 SHA3
0x367 MISSING 0xc8
0x368 DUP12
0x369 GAS
0x36a SMOD
0x36b MISSING 0xf6
0x36c PUSH8 0x357a895737fa37b6
0x375 DUP8
0x376 PUSH1 0x11
0x378 MISSING 0x21
0x379 MISSING 0x22
0x37a CODECOPY
0x37b DUP10
0x37c DUP9
0x37d SWAP16
0x37e MISSING 0x2a
0x37f MISSING 0xe2
0x380 PUSH32 0x290602f757c10029
---
0x35d: STOP 
0x35e: LOG S0 S1 S2
0x35f: V311 = 0x627a7a723058
0x366: V312 = SHA3 0x627a7a723058 S3
0x367: MISSING 0xc8
0x369: V313 = GAS
0x36a: V314 = SMOD V313 S11
0x36b: MISSING 0xf6
0x36c: V315 = 0x357a895737fa37b6
0x376: V316 = 0x11
0x378: MISSING 0x21
0x379: MISSING 0x22
0x37a: CODECOPY S0 S1 S2
0x37e: MISSING 0x2a
0x37f: MISSING 0xe2
0x380: V317 = 0x290602f757c10029
---
Entry stack: []
Stack pops: 0
Stack additions: [V312, V314, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, 0x11, S6, 0x357a895737fa37b6, S0, S1, S2, S3, S4, S5, S6, S17, S12, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S10, 0x290602f757c10029]
Exit stack: []

================================

Function 0:
Public function signature: 0x8052474d
Entry block: 0xb0
Exit block: 0x12c
Body: 0xb0, 0xb7, 0xbb, 0xc3, 0xe7, 0xf0, 0xff, 0x113, 0x12c, 0x16f, 0x1bf, 0x1c7, 0x1da, 0x1e8, 0x1fc, 0x205

Function 1:
Public function signature: 0xa9059cbb
Entry block: 0x13a
Exit block: 0xae
Body: 0xae, 0x13a, 0x141, 0x145, 0x20d, 0x218, 0x2c4, 0x2d5, 0x2d9, 0x2fb, 0x2ff

Function 2:
Public function signature: 0xb67b1a4d
Entry block: 0x15c
Exit block: 0xae
Body: 0xae, 0x15c, 0x163, 0x167, 0x21c, 0x233, 0x237, 0x270, 0x274

Function 3:
Public fallback function
Entry block: 0x56
Exit block: 0xae
Body: 0x56, 0x6d, 0x71, 0xaa, 0xae

