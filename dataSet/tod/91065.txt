Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x35]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x35
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x35
0xa: JUMPI 0x35 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x3d]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x60fe47b1
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x3d
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x60fe47b1
0x1a: V12 = EQ V10 0x60fe47b1
0x1b: V13 = 0x3d
0x1e: JUMPI 0x3d V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0x50]
---
0x1f DUP1
0x20 PUSH4 0x6d4ce63c
0x25 EQ
0x26 PUSH2 0x50
0x29 JUMPI
---
0x20: V14 = 0x6d4ce63c
0x25: V15 = EQ 0x6d4ce63c V10
0x26: V16 = 0x50
0x29: JUMPI 0x50 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0x65]
---
0x2a DUP1
0x2b PUSH4 0xc3da42b8
0x30 EQ
0x31 PUSH2 0x65
0x34 JUMPI
---
0x2b: V17 = 0xc3da42b8
0x30: V18 = EQ 0xc3da42b8 V10
0x31: V19 = 0x65
0x34: JUMPI 0x65 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3c]
---
Predecessors: [0x0, 0x2a]
Successors: []
---
0x35 JUMPDEST
0x36 PUSH2 0x107
0x39 PUSH2 0x2
0x3c JUMP
---
0x35: JUMPDEST 
0x36: V20 = 0x107
0x39: V21 = 0x2
0x3c: THROW 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x107]
Exit stack: [V10, 0x107]

================================

Block 0x3d
[0x3d:0x4f]
---
Predecessors: [0xb]
Successors: [0x69]
---
0x3d JUMPDEST
0x3e PUSH2 0x107
0x41 PUSH1 0x4
0x43 CALLDATALOAD
0x44 PUSH1 0x0
0x46 DUP2
0x47 SWAP1
0x48 SSTORE
0x49 PUSH2 0x10b
0x4c PUSH2 0x69
0x4f JUMP
---
0x3d: JUMPDEST 
0x3e: V22 = 0x107
0x41: V23 = 0x4
0x43: V24 = CALLDATALOAD 0x4
0x44: V25 = 0x0
0x48: S[0x0] = V24
0x49: V26 = 0x10b
0x4c: V27 = 0x69
0x4f: JUMP 0x69
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x107, V24, 0x10b]
Exit stack: [V10, 0x107, V24, 0x10b]

================================

Block 0x50
[0x50:0x64]
---
Predecessors: [0x1f]
Successors: []
---
0x50 JUMPDEST
0x51 PUSH1 0x0
0x53 SLOAD
0x54 PUSH1 0x40
0x56 DUP1
0x57 MLOAD
0x58 SWAP2
0x59 DUP3
0x5a MSTORE
0x5b MLOAD
0x5c SWAP1
0x5d DUP2
0x5e SWAP1
0x5f SUB
0x60 PUSH1 0x20
0x62 ADD
0x63 SWAP1
0x64 RETURN
---
0x50: JUMPDEST 
0x51: V28 = 0x0
0x53: V29 = S[0x0]
0x54: V30 = 0x40
0x57: V31 = M[0x40]
0x5a: M[V31] = V29
0x5b: V32 = M[0x40]
0x5f: V33 = SUB V31 V32
0x60: V34 = 0x20
0x62: V35 = ADD 0x20 V33
0x64: RETURN V32 V35
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x65
[0x65:0x68]
---
Predecessors: [0x2a]
Successors: [0x69]
---
0x65 JUMPDEST
0x66 PUSH2 0x107
---
0x65: JUMPDEST 
0x66: V36 = 0x107
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x107]
Exit stack: [V10, 0x107]

================================

Block 0x69
[0x69:0xa7]
---
Predecessors: [0x3d, 0x65]
Successors: [0xa8, 0xe0]
---
0x69 JUMPDEST
0x6a PUSH1 0x1
0x6c DUP1
0x6d SLOAD
0x6e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x83 NOT
0x84 AND
0x85 PUSH20 0x245133ea0fb1b77fab5886d7ffb8046dfeff3858
0x9a OR
0x9b SWAP1
0x9c SSTORE
0x9d PUSH1 0x0
0x9f SLOAD
0xa0 PUSH1 0x64
0xa2 EQ
0xa3 ISZERO
0xa4 PUSH2 0xe0
0xa7 JUMPI
---
0x69: JUMPDEST 
0x6a: V37 = 0x1
0x6d: V38 = S[0x1]
0x6e: V39 = 0xffffffffffffffffffffffffffffffffffffffff
0x83: V40 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x84: V41 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V38
0x85: V42 = 0x245133ea0fb1b77fab5886d7ffb8046dfeff3858
0x9a: V43 = OR 0x245133ea0fb1b77fab5886d7ffb8046dfeff3858 V41
0x9c: S[0x1] = V43
0x9d: V44 = 0x0
0x9f: V45 = S[0x0]
0xa0: V46 = 0x64
0xa2: V47 = EQ 0x64 V45
0xa3: V48 = ISZERO V47
0xa4: V49 = 0xe0
0xa7: JUMPI 0xe0 V48
---
Entry stack: [V10, 0x107, S1, {0x107, 0x10b}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x107, S1, {0x107, 0x10b}]

================================

Block 0xa8
[0xa8:0xdf]
---
Predecessors: [0x69]
Successors: [0xe0]
---
0xa8 PUSH1 0x1
0xaa SLOAD
0xab PUSH1 0x40
0xad MLOAD
0xae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc3 SWAP1
0xc4 SWAP2
0xc5 AND
0xc6 SWAP1
0xc7 PUSH1 0x0
0xc9 SWAP1
0xca PUSH7 0x2386f26fc10000
0xd2 SWAP1
0xd3 DUP3
0xd4 DUP2
0xd5 DUP2
0xd6 DUP2
0xd7 DUP6
0xd8 DUP9
0xd9 DUP4
0xda CALL
0xdb POP
0xdc POP
0xdd POP
0xde POP
0xdf POP
---
0xa8: V50 = 0x1
0xaa: V51 = S[0x1]
0xab: V52 = 0x40
0xad: V53 = M[0x40]
0xae: V54 = 0xffffffffffffffffffffffffffffffffffffffff
0xc5: V55 = AND V51 0xffffffffffffffffffffffffffffffffffffffff
0xc7: V56 = 0x0
0xca: V57 = 0x2386f26fc10000
0xda: V58 = CALL 0x0 V55 0x2386f26fc10000 V53 0x0 V53 0x0
---
Entry stack: [V10, 0x107, S1, {0x107, 0x10b}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x107, S1, {0x107, 0x10b}]

================================

Block 0xe0
[0xe0:0xec]
---
Predecessors: [0x69, 0xa8]
Successors: [0xed, 0x109]
---
0xe0 JUMPDEST
0xe1 PUSH1 0x0
0xe3 SLOAD
0xe4 PUSH2 0x3e7
0xe7 EQ
0xe8 ISZERO
0xe9 PUSH2 0x109
0xec JUMPI
---
0xe0: JUMPDEST 
0xe1: V59 = 0x0
0xe3: V60 = S[0x0]
0xe4: V61 = 0x3e7
0xe7: V62 = EQ 0x3e7 V60
0xe8: V63 = ISZERO V62
0xe9: V64 = 0x109
0xec: JUMPI 0x109 V63
---
Entry stack: [V10, 0x107, S1, {0x107, 0x10b}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x107, S1, {0x107, 0x10b}]

================================

Block 0xed
[0xed:0x106]
---
Predecessors: [0xe0]
Successors: []
---
0xed PUSH1 0x1
0xef SLOAD
0xf0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x105 AND
0x106 SELFDESTRUCT
---
0xed: V65 = 0x1
0xef: V66 = S[0x1]
0xf0: V67 = 0xffffffffffffffffffffffffffffffffffffffff
0x105: V68 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0x106: SELFDESTRUCT V68
---
Entry stack: [V10, 0x107, S1, {0x107, 0x10b}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x107, S1, {0x107, 0x10b}]

================================

Block 0x107
[0x107:0x108]
---
Predecessors: [0x109, 0x10b]
Successors: []
---
0x107 JUMPDEST
0x108 STOP
---
0x107: JUMPDEST 
0x108: STOP 
---
Entry stack: [V10, 0x107, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x107, S0]

================================

Block 0x109
[0x109:0x10a]
---
Predecessors: [0xe0]
Successors: [0x107, 0x10b]
---
0x109 JUMPDEST
0x10a JUMP
---
0x109: JUMPDEST 
0x10a: JUMP {0x107, 0x10b}
---
Entry stack: [V10, 0x107, S1, {0x107, 0x10b}]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x107, S1]

================================

Block 0x10b
[0x10b:0x10d]
---
Predecessors: [0x109]
Successors: [0x107]
---
0x10b JUMPDEST
0x10c POP
0x10d JUMP
---
0x10b: JUMPDEST 
0x10d: JUMP 0x107
---
Entry stack: [V10, 0x107, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Function 0:
Public function signature: 0x60fe47b1
Entry block: 0x3d
Exit block: 0x107
Body: 0x3d, 0x69, 0xa8, 0xe0, 0xed, 0x107, 0x109, 0x10b

Function 1:
Public function signature: 0x6d4ce63c
Entry block: 0x50
Exit block: 0x50
Body: 0x50

Function 2:
Public function signature: 0xc3da42b8
Entry block: 0x65
Exit block: 0x107
Body: 0x65, 0x69, 0xa8, 0xe0, 0xed, 0x107, 0x109, 0x10b

Function 3:
Public fallback function
Entry block: 0x35
Exit block: 0x35
Body: 0x35

