Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x98]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x98
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x98
0xa: JUMPI 0x98 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0xa3]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x2170ebf7
0x19 DUP2
0x1a EQ
0x1b PUSH2 0xa3
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x2170ebf7
0x1a: V12 = EQ V10 0x2170ebf7
0x1b: V13 = 0xa3
0x1e: JUMPI 0xa3 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0xca]
---
0x1f DUP1
0x20 PUSH4 0x38d52e0f
0x25 EQ
0x26 PUSH2 0xca
0x29 JUMPI
---
0x20: V14 = 0x38d52e0f
0x25: V15 = EQ 0x38d52e0f V10
0x26: V16 = 0xca
0x29: JUMPI 0xca V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0xe1]
---
0x2a DUP1
0x2b PUSH4 0x4b750334
0x30 EQ
0x31 PUSH2 0xe1
0x34 JUMPI
---
0x2b: V17 = 0x4b750334
0x30: V18 = EQ 0x4b750334 V10
0x31: V19 = 0xe1
0x34: JUMPI 0xe1 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0xef]
---
0x35 DUP1
0x36 PUSH4 0x4ca50f59
0x3b EQ
0x3c PUSH2 0xef
0x3f JUMPI
---
0x36: V20 = 0x4ca50f59
0x3b: V21 = EQ 0x4ca50f59 V10
0x3c: V22 = 0xef
0x3f: JUMPI 0xef V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x100]
---
0x40 DUP1
0x41 PUSH4 0x52954e5a
0x46 EQ
0x47 PUSH2 0x100
0x4a JUMPI
---
0x41: V23 = 0x52954e5a
0x46: V24 = EQ 0x52954e5a V10
0x47: V25 = 0x100
0x4a: JUMPI 0x100 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x12a]
---
0x4b DUP1
0x4c PUSH4 0x8da5cb5b
0x51 EQ
0x52 PUSH2 0x12a
0x55 JUMPI
---
0x4c: V26 = 0x8da5cb5b
0x51: V27 = EQ 0x8da5cb5b V10
0x52: V28 = 0x12a
0x55: JUMPI 0x12a V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x141]
---
0x56 DUP1
0x57 PUSH4 0x976a8435
0x5c EQ
0x5d PUSH2 0x141
0x60 JUMPI
---
0x57: V29 = 0x976a8435
0x5c: V30 = EQ 0x976a8435 V10
0x5d: V31 = 0x141
0x60: JUMPI 0x141 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x14f]
---
0x61 DUP1
0x62 PUSH4 0xc34764cf
0x67 EQ
0x68 PUSH2 0x14f
0x6b JUMPI
---
0x62: V32 = 0xc34764cf
0x67: V33 = EQ 0xc34764cf V10
0x68: V34 = 0x14f
0x6b: JUMPI 0x14f V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x179]
---
0x6c DUP1
0x6d PUSH4 0xc60ccb0e
0x72 EQ
0x73 PUSH2 0x179
0x76 JUMPI
---
0x6d: V35 = 0xc60ccb0e
0x72: V36 = EQ 0xc60ccb0e V10
0x73: V37 = 0x179
0x76: JUMPI 0x179 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x293]
---
0x77 DUP1
0x78 PUSH4 0xcd53a3b7
0x7d EQ
0x7e PUSH2 0x293
0x81 JUMPI
---
0x78: V38 = 0xcd53a3b7
0x7d: V39 = EQ 0xcd53a3b7 V10
0x7e: V40 = 0x293
0x81: JUMPI 0x293 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x2ba]
---
0x82 DUP1
0x83 PUSH4 0xce5e84a3
0x88 EQ
0x89 PUSH2 0x2ba
0x8c JUMPI
---
0x83: V41 = 0xce5e84a3
0x88: V42 = EQ 0xce5e84a3 V10
0x89: V43 = 0x2ba
0x8c: JUMPI 0x2ba V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x2e0]
---
0x8d DUP1
0x8e PUSH4 0xf2fde38b
0x93 EQ
0x94 PUSH2 0x2e0
0x97 JUMPI
---
0x8e: V44 = 0xf2fde38b
0x93: V45 = EQ 0xf2fde38b V10
0x94: V46 = 0x2e0
0x97: JUMPI 0x2e0 V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x0, 0x8d]
Successors: [0x17d]
---
0x98 JUMPDEST
0x99 PUSH2 0x306
0x9c PUSH2 0x308
0x9f PUSH2 0x17d
0xa2 JUMP
---
0x98: JUMPDEST 
0x99: V47 = 0x306
0x9c: V48 = 0x308
0x9f: V49 = 0x17d
0xa2: JUMP 0x17d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x306, 0x308]
Exit stack: [V10, 0x306, 0x308]

================================

Block 0xa3
[0xa3:0xa8]
---
Predecessors: [0xb]
Successors: [0xa9]
---
0xa3 JUMPDEST
0xa4 CALLVALUE
0xa5 PUSH2 0x2
0xa8 JUMPI
---
0xa3: JUMPDEST 
0xa4: V50 = CALLVALUE
0xa5: V51 = 0x2
0xa8: THROWI V50
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xa9
[0xa9:0xc5]
---
Predecessors: [0xa3]
Successors: [0xc6, 0x456]
---
0xa9 PUSH2 0x30a
0xac PUSH1 0x4
0xae CALLDATALOAD
0xaf PUSH1 0x0
0xb1 DUP1
0xb2 SLOAD
0xb3 CALLER
0xb4 PUSH1 0x1
0xb6 PUSH1 0xa0
0xb8 PUSH1 0x2
0xba EXP
0xbb SUB
0xbc SWAP1
0xbd DUP2
0xbe AND
0xbf SWAP2
0xc0 AND
0xc1 EQ
0xc2 PUSH2 0x456
0xc5 JUMPI
---
0xa9: V52 = 0x30a
0xac: V53 = 0x4
0xae: V54 = CALLDATALOAD 0x4
0xaf: V55 = 0x0
0xb2: V56 = S[0x0]
0xb3: V57 = CALLER
0xb4: V58 = 0x1
0xb6: V59 = 0xa0
0xb8: V60 = 0x2
0xba: V61 = EXP 0x2 0xa0
0xbb: V62 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbe: V63 = AND 0xffffffffffffffffffffffffffffffffffffffff V57
0xc0: V64 = AND V56 0xffffffffffffffffffffffffffffffffffffffff
0xc1: V65 = EQ V64 V63
0xc2: V66 = 0x456
0xc5: JUMPI 0x456 V65
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x30a, V54, 0x0]
Exit stack: [V10, 0x30a, V54, 0x0]

================================

Block 0xc6
[0xc6:0xc9]
---
Predecessors: [0xa9]
Successors: []
---
0xc6 PUSH2 0x2
0xc9 JUMP
---
0xc6: V67 = 0x2
0xc9: THROW 
---
Entry stack: [V10, 0x30a, V54, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x30a, V54, 0x0]

================================

Block 0xca
[0xca:0xcf]
---
Predecessors: [0x1f]
Successors: [0xd0]
---
0xca JUMPDEST
0xcb CALLVALUE
0xcc PUSH2 0x2
0xcf JUMPI
---
0xca: JUMPDEST 
0xcb: V68 = CALLVALUE
0xcc: V69 = 0x2
0xcf: THROWI V68
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xd0
[0xd0:0xe0]
---
Predecessors: [0xca]
Successors: [0x31e]
---
0xd0 PUSH2 0x31e
0xd3 PUSH1 0x1
0xd5 SLOAD
0xd6 PUSH1 0x1
0xd8 PUSH1 0xa0
0xda PUSH1 0x2
0xdc EXP
0xdd SUB
0xde AND
0xdf DUP2
0xe0 JUMP
---
0xd0: V70 = 0x31e
0xd3: V71 = 0x1
0xd5: V72 = S[0x1]
0xd6: V73 = 0x1
0xd8: V74 = 0xa0
0xda: V75 = 0x2
0xdc: V76 = EXP 0x2 0xa0
0xdd: V77 = SUB 0x10000000000000000000000000000000000000000 0x1
0xde: V78 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0xe0: JUMP 0x31e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x31e, V78]
Exit stack: [V10, 0x31e, V78]

================================

Block 0xe1
[0xe1:0xe6]
---
Predecessors: [0x2a]
Successors: [0xe7]
---
0xe1 JUMPDEST
0xe2 CALLVALUE
0xe3 PUSH2 0x2
0xe6 JUMPI
---
0xe1: JUMPDEST 
0xe2: V79 = CALLVALUE
0xe3: V80 = 0x2
0xe6: THROWI V79
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xe7
[0xe7:0xee]
---
Predecessors: [0xe1]
Successors: [0x33a]
---
0xe7 PUSH2 0x33a
0xea PUSH1 0x2
0xec SLOAD
0xed DUP2
0xee JUMP
---
0xe7: V81 = 0x33a
0xea: V82 = 0x2
0xec: V83 = S[0x2]
0xee: JUMP 0x33a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x33a, V83]
Exit stack: [V10, 0x33a, V83]

================================

Block 0xef
[0xef:0xf4]
---
Predecessors: [0x35]
Successors: [0xf5]
---
0xef JUMPDEST
0xf0 CALLVALUE
0xf1 PUSH2 0x2
0xf4 JUMPI
---
0xef: JUMPDEST 
0xf0: V84 = CALLVALUE
0xf1: V85 = 0x2
0xf4: THROWI V84
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xf5
[0xf5:0xff]
---
Predecessors: [0xef]
Successors: [0x30a]
---
0xf5 PUSH2 0x30a
0xf8 PUSH1 0x4
0xfa SLOAD
0xfb PUSH1 0xff
0xfd AND
0xfe DUP2
0xff JUMP
---
0xf5: V86 = 0x30a
0xf8: V87 = 0x4
0xfa: V88 = S[0x4]
0xfb: V89 = 0xff
0xfd: V90 = AND 0xff V88
0xff: JUMP 0x30a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x30a, V90]
Exit stack: [V10, 0x30a, V90]

================================

Block 0x100
[0x100:0x105]
---
Predecessors: [0x40]
Successors: [0x106]
---
0x100 JUMPDEST
0x101 CALLVALUE
0x102 PUSH2 0x2
0x105 JUMPI
---
0x100: JUMPDEST 
0x101: V91 = CALLVALUE
0x102: V92 = 0x2
0x105: THROWI V91
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x106
[0x106:0x125]
---
Predecessors: [0x100]
Successors: [0x126, 0x4c9]
---
0x106 PUSH2 0x30a
0x109 PUSH1 0x4
0x10b CALLDATALOAD
0x10c PUSH1 0x24
0x10e CALLDATALOAD
0x10f PUSH1 0x0
0x111 DUP1
0x112 SLOAD
0x113 CALLER
0x114 PUSH1 0x1
0x116 PUSH1 0xa0
0x118 PUSH1 0x2
0x11a EXP
0x11b SUB
0x11c SWAP1
0x11d DUP2
0x11e AND
0x11f SWAP2
0x120 AND
0x121 EQ
0x122 PUSH2 0x4c9
0x125 JUMPI
---
0x106: V93 = 0x30a
0x109: V94 = 0x4
0x10b: V95 = CALLDATALOAD 0x4
0x10c: V96 = 0x24
0x10e: V97 = CALLDATALOAD 0x24
0x10f: V98 = 0x0
0x112: V99 = S[0x0]
0x113: V100 = CALLER
0x114: V101 = 0x1
0x116: V102 = 0xa0
0x118: V103 = 0x2
0x11a: V104 = EXP 0x2 0xa0
0x11b: V105 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11e: V106 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x120: V107 = AND V99 0xffffffffffffffffffffffffffffffffffffffff
0x121: V108 = EQ V107 V106
0x122: V109 = 0x4c9
0x125: JUMPI 0x4c9 V108
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x30a, V95, V97, 0x0]
Exit stack: [V10, 0x30a, V95, V97, 0x0]

================================

Block 0x126
[0x126:0x129]
---
Predecessors: [0x106]
Successors: []
---
0x126 PUSH2 0x2
0x129 JUMP
---
0x126: V110 = 0x2
0x129: THROW 
---
Entry stack: [V10, 0x30a, V95, V97, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x30a, V95, V97, 0x0]

================================

Block 0x12a
[0x12a:0x12f]
---
Predecessors: [0x4b]
Successors: [0x130]
---
0x12a JUMPDEST
0x12b CALLVALUE
0x12c PUSH2 0x2
0x12f JUMPI
---
0x12a: JUMPDEST 
0x12b: V111 = CALLVALUE
0x12c: V112 = 0x2
0x12f: THROWI V111
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x130
[0x130:0x140]
---
Predecessors: [0x12a]
Successors: [0x31e]
---
0x130 PUSH2 0x31e
0x133 PUSH1 0x0
0x135 SLOAD
0x136 PUSH1 0x1
0x138 PUSH1 0xa0
0x13a PUSH1 0x2
0x13c EXP
0x13d SUB
0x13e AND
0x13f DUP2
0x140 JUMP
---
0x130: V113 = 0x31e
0x133: V114 = 0x0
0x135: V115 = S[0x0]
0x136: V116 = 0x1
0x138: V117 = 0xa0
0x13a: V118 = 0x2
0x13c: V119 = EXP 0x2 0xa0
0x13d: V120 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13e: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V115
0x140: JUMP 0x31e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x31e, V121]
Exit stack: [V10, 0x31e, V121]

================================

Block 0x141
[0x141:0x146]
---
Predecessors: [0x56]
Successors: [0x147]
---
0x141 JUMPDEST
0x142 CALLVALUE
0x143 PUSH2 0x2
0x146 JUMPI
---
0x141: JUMPDEST 
0x142: V122 = CALLVALUE
0x143: V123 = 0x2
0x146: THROWI V122
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x147
[0x147:0x14e]
---
Predecessors: [0x141]
Successors: [0x33a]
---
0x147 PUSH2 0x33a
0x14a PUSH1 0x3
0x14c SLOAD
0x14d DUP2
0x14e JUMP
---
0x147: V124 = 0x33a
0x14a: V125 = 0x3
0x14c: V126 = S[0x3]
0x14e: JUMP 0x33a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x33a, V126]
Exit stack: [V10, 0x33a, V126]

================================

Block 0x14f
[0x14f:0x154]
---
Predecessors: [0x61]
Successors: [0x155]
---
0x14f JUMPDEST
0x150 CALLVALUE
0x151 PUSH2 0x2
0x154 JUMPI
---
0x14f: JUMPDEST 
0x150: V127 = CALLVALUE
0x151: V128 = 0x2
0x154: THROWI V127
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x155
[0x155:0x174]
---
Predecessors: [0x14f]
Successors: [0x175, 0x665]
---
0x155 PUSH2 0x30a
0x158 PUSH1 0x4
0x15a CALLDATALOAD
0x15b PUSH1 0x24
0x15d CALLDATALOAD
0x15e PUSH1 0x0
0x160 DUP1
0x161 SLOAD
0x162 CALLER
0x163 PUSH1 0x1
0x165 PUSH1 0xa0
0x167 PUSH1 0x2
0x169 EXP
0x16a SUB
0x16b SWAP1
0x16c DUP2
0x16d AND
0x16e SWAP2
0x16f AND
0x170 EQ
0x171 PUSH2 0x665
0x174 JUMPI
---
0x155: V129 = 0x30a
0x158: V130 = 0x4
0x15a: V131 = CALLDATALOAD 0x4
0x15b: V132 = 0x24
0x15d: V133 = CALLDATALOAD 0x24
0x15e: V134 = 0x0
0x161: V135 = S[0x0]
0x162: V136 = CALLER
0x163: V137 = 0x1
0x165: V138 = 0xa0
0x167: V139 = 0x2
0x169: V140 = EXP 0x2 0xa0
0x16a: V141 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16d: V142 = AND 0xffffffffffffffffffffffffffffffffffffffff V136
0x16f: V143 = AND V135 0xffffffffffffffffffffffffffffffffffffffff
0x170: V144 = EQ V143 V142
0x171: V145 = 0x665
0x174: JUMPI 0x665 V144
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x30a, V131, V133, 0x0]
Exit stack: [V10, 0x30a, V131, V133, 0x0]

================================

Block 0x175
[0x175:0x178]
---
Predecessors: [0x155]
Successors: []
---
0x175 PUSH2 0x2
0x178 JUMP
---
0x175: V146 = 0x2
0x178: THROW 
---
Entry stack: [V10, 0x30a, V131, V133, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x30a, V131, V133, 0x0]

================================

Block 0x179
[0x179:0x17c]
---
Predecessors: [0x6c]
Successors: [0x17d]
---
0x179 JUMPDEST
0x17a PUSH2 0x306
---
0x179: JUMPDEST 
0x17a: V147 = 0x306
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x306]
Exit stack: [V10, 0x306]

================================

Block 0x17d
[0x17d:0x18f]
---
Predecessors: [0x98, 0x179]
Successors: [0x190, 0x1a3]
---
0x17d JUMPDEST
0x17e PUSH1 0x4
0x180 SLOAD
0x181 PUSH1 0x0
0x183 SWAP1
0x184 DUP2
0x185 SWAP1
0x186 DUP2
0x187 SWAP1
0x188 PUSH1 0xff
0x18a AND
0x18b DUP1
0x18c PUSH2 0x1a3
0x18f JUMPI
---
0x17d: JUMPDEST 
0x17e: V148 = 0x4
0x180: V149 = S[0x4]
0x181: V150 = 0x0
0x188: V151 = 0xff
0x18a: V152 = AND 0xff V149
0x18c: V153 = 0x1a3
0x18f: JUMPI 0x1a3 V152
---
Entry stack: [V10, S1, {0x306, 0x308}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, V152]
Exit stack: [V10, S1, {0x306, 0x308}, 0x0, 0x0, 0x0, V152]

================================

Block 0x190
[0x190:0x1a2]
---
Predecessors: [0x17d]
Successors: [0x1a3]
---
0x190 POP
0x191 PUSH1 0x0
0x193 SLOAD
0x194 CALLER
0x195 PUSH1 0x1
0x197 PUSH1 0xa0
0x199 PUSH1 0x2
0x19b EXP
0x19c SUB
0x19d SWAP1
0x19e DUP2
0x19f AND
0x1a0 SWAP2
0x1a1 AND
0x1a2 EQ
---
0x191: V154 = 0x0
0x193: V155 = S[0x0]
0x194: V156 = CALLER
0x195: V157 = 0x1
0x197: V158 = 0xa0
0x199: V159 = 0x2
0x19b: V160 = EXP 0x2 0xa0
0x19c: V161 = SUB 0x10000000000000000000000000000000000000000 0x1
0x19f: V162 = AND 0xffffffffffffffffffffffffffffffffffffffff V156
0x1a1: V163 = AND V155 0xffffffffffffffffffffffffffffffffffffffff
0x1a2: V164 = EQ V163 V162
---
Entry stack: [V10, S5, {0x306, 0x308}, 0x0, 0x0, 0x0, V152]
Stack pops: 1
Stack additions: [V164]
Exit stack: [V10, S5, {0x306, 0x308}, 0x0, 0x0, 0x0, V164]

================================

Block 0x1a3
[0x1a3:0x1a8]
---
Predecessors: [0x17d, 0x190]
Successors: [0x1a9, 0x34c]
---
0x1a3 JUMPDEST
0x1a4 ISZERO
0x1a5 PUSH2 0x34c
0x1a8 JUMPI
---
0x1a3: JUMPDEST 
0x1a4: V165 = ISZERO S0
0x1a5: V166 = 0x34c
0x1a8: JUMPI 0x34c V165
---
Entry stack: [V10, S5, {0x306, 0x308}, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S5, {0x306, 0x308}, 0x0, 0x0, 0x0]

================================

Block 0x1a9
[0x1a9:0x1b2]
---
Predecessors: [0x1a3]
Successors: [0x1b3]
---
0x1a9 PUSH1 0x2
0x1ab SLOAD
0x1ac CALLVALUE
0x1ad DUP2
0x1ae ISZERO
0x1af PUSH2 0x2
0x1b2 JUMPI
---
0x1a9: V167 = 0x2
0x1ab: V168 = S[0x2]
0x1ac: V169 = CALLVALUE
0x1ae: V170 = ISZERO V168
0x1af: V171 = 0x2
0x1b2: THROWI V170
---
Entry stack: [V10, S4, {0x306, 0x308}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V168, V169]
Exit stack: [V10, S4, {0x306, 0x308}, 0x0, 0x0, 0x0, V168, V169]

================================

Block 0x1b3
[0x1b3:0x21e]
---
Predecessors: [0x1a9]
Successors: [0x21f]
---
0x1b3 DIV
0x1b4 SWAP3
0x1b5 POP
0x1b6 PUSH1 0x3
0x1b8 PUSH1 0x0
0x1ba POP
0x1bb SLOAD
0x1bc PUSH1 0x1
0x1be PUSH1 0x0
0x1c0 SWAP1
0x1c1 SLOAD
0x1c2 SWAP1
0x1c3 PUSH2 0x100
0x1c6 EXP
0x1c7 SWAP1
0x1c8 DIV
0x1c9 PUSH1 0x1
0x1cb PUSH1 0xa0
0x1cd PUSH1 0x2
0x1cf EXP
0x1d0 SUB
0x1d1 AND
0x1d2 PUSH1 0x1
0x1d4 PUSH1 0xa0
0x1d6 PUSH1 0x2
0x1d8 EXP
0x1d9 SUB
0x1da AND
0x1db PUSH4 0x70a08231
0x1e0 ADDRESS
0x1e1 PUSH1 0x0
0x1e3 PUSH1 0x40
0x1e5 MLOAD
0x1e6 PUSH1 0x20
0x1e8 ADD
0x1e9 MSTORE
0x1ea PUSH1 0x40
0x1ec MLOAD
0x1ed DUP3
0x1ee PUSH1 0xe0
0x1f0 PUSH1 0x2
0x1f2 EXP
0x1f3 MUL
0x1f4 DUP2
0x1f5 MSTORE
0x1f6 PUSH1 0x4
0x1f8 ADD
0x1f9 DUP1
0x1fa DUP3
0x1fb PUSH1 0x1
0x1fd PUSH1 0xa0
0x1ff PUSH1 0x2
0x201 EXP
0x202 SUB
0x203 AND
0x204 DUP2
0x205 MSTORE
0x206 PUSH1 0x20
0x208 ADD
0x209 SWAP2
0x20a POP
0x20b POP
0x20c PUSH1 0x20
0x20e PUSH1 0x40
0x210 MLOAD
0x211 DUP1
0x212 DUP4
0x213 SUB
0x214 DUP2
0x215 PUSH1 0x0
0x217 DUP8
0x218 DUP1
0x219 EXTCODESIZE
0x21a ISZERO
0x21b PUSH2 0x2
0x21e JUMPI
---
0x1b3: V172 = DIV V169 V168
0x1b6: V173 = 0x3
0x1b8: V174 = 0x0
0x1bb: V175 = S[0x3]
0x1bc: V176 = 0x1
0x1be: V177 = 0x0
0x1c1: V178 = S[0x1]
0x1c3: V179 = 0x100
0x1c6: V180 = EXP 0x100 0x0
0x1c8: V181 = DIV V178 0x1
0x1c9: V182 = 0x1
0x1cb: V183 = 0xa0
0x1cd: V184 = 0x2
0x1cf: V185 = EXP 0x2 0xa0
0x1d0: V186 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d1: V187 = AND 0xffffffffffffffffffffffffffffffffffffffff V181
0x1d2: V188 = 0x1
0x1d4: V189 = 0xa0
0x1d6: V190 = 0x2
0x1d8: V191 = EXP 0x2 0xa0
0x1d9: V192 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1da: V193 = AND 0xffffffffffffffffffffffffffffffffffffffff V187
0x1db: V194 = 0x70a08231
0x1e0: V195 = ADDRESS
0x1e1: V196 = 0x0
0x1e3: V197 = 0x40
0x1e5: V198 = M[0x40]
0x1e6: V199 = 0x20
0x1e8: V200 = ADD 0x20 V198
0x1e9: M[V200] = 0x0
0x1ea: V201 = 0x40
0x1ec: V202 = M[0x40]
0x1ee: V203 = 0xe0
0x1f0: V204 = 0x2
0x1f2: V205 = EXP 0x2 0xe0
0x1f3: V206 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x1f5: M[V202] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x1f6: V207 = 0x4
0x1f8: V208 = ADD 0x4 V202
0x1fb: V209 = 0x1
0x1fd: V210 = 0xa0
0x1ff: V211 = 0x2
0x201: V212 = EXP 0x2 0xa0
0x202: V213 = SUB 0x10000000000000000000000000000000000000000 0x1
0x203: V214 = AND 0xffffffffffffffffffffffffffffffffffffffff V195
0x205: M[V208] = V214
0x206: V215 = 0x20
0x208: V216 = ADD 0x20 V208
0x20c: V217 = 0x20
0x20e: V218 = 0x40
0x210: V219 = M[0x40]
0x213: V220 = SUB V216 V219
0x215: V221 = 0x0
0x219: V222 = EXTCODESIZE V193
0x21a: V223 = ISZERO V222
0x21b: V224 = 0x2
0x21e: THROWI V223
---
Entry stack: [V10, S6, {0x306, 0x308}, 0x0, 0x0, 0x0, V168, V169]
Stack pops: 5
Stack additions: [V172, S3, S2, V175, V193, 0x70a08231, V216, 0x20, V219, V220, V219, 0x0, V193]
Exit stack: [V10, S6, {0x306, 0x308}, V172, 0x0, 0x0, V175, V193, 0x70a08231, V216, 0x20, V219, V220, V219, 0x0, V193]

================================

Block 0x21f
[0x21f:0x228]
---
Predecessors: [0x1b3]
Successors: [0x229]
---
0x21f PUSH1 0x32
0x221 GAS
0x222 SUB
0x223 CALL
0x224 ISZERO
0x225 PUSH2 0x2
0x228 JUMPI
---
0x21f: V225 = 0x32
0x221: V226 = GAS
0x222: V227 = SUB V226 0x32
0x223: V228 = CALL V227 V193 0x0 V219 V220 V219 0x20
0x224: V229 = ISZERO V228
0x225: V230 = 0x2
0x228: THROWI V229
---
Entry stack: [V10, S14, {0x306, 0x308}, V172, 0x0, 0x0, V175, V193, 0x70a08231, V216, 0x20, V219, V220, V219, 0x0, V193]
Stack pops: 6
Stack additions: []
Exit stack: [V10, S14, {0x306, 0x308}, V172, 0x0, 0x0, V175, V193, 0x70a08231, V216]

================================

Block 0x229
[0x229:0x236]
---
Predecessors: [0x21f]
Successors: [0x237]
---
0x229 POP
0x22a POP
0x22b PUSH1 0x40
0x22d MLOAD
0x22e MLOAD
0x22f SWAP1
0x230 POP
0x231 DUP2
0x232 ISZERO
0x233 PUSH2 0x2
0x236 JUMPI
---
0x22b: V231 = 0x40
0x22d: V232 = M[0x40]
0x22e: V233 = M[V232]
0x232: V234 = ISZERO V175
0x233: V235 = 0x2
0x236: THROWI V234
---
Entry stack: [V10, S8, {0x306, 0x308}, V172, 0x0, 0x0, V175, V193, 0x70a08231, V216]
Stack pops: 4
Stack additions: [S3, V233]
Exit stack: [V10, S8, {0x306, 0x308}, V172, 0x0, 0x0, V175, V233]

================================

Block 0x237
[0x237:0x24c]
---
Predecessors: [0x229]
Successors: [0x24d, 0x25a]
---
0x237 DIV
0x238 SWAP2
0x239 POP
0x23a PUSH1 0x0
0x23c SWAP1
0x23d POP
0x23e PUSH1 0x2
0x240 PUSH1 0x0
0x242 POP
0x243 SLOAD
0x244 DUP3
0x245 MUL
0x246 CALLVALUE
0x247 GT
0x248 ISZERO
0x249 PUSH2 0x25a
0x24c JUMPI
---
0x237: V236 = DIV V233 V175
0x23a: V237 = 0x0
0x23e: V238 = 0x2
0x240: V239 = 0x0
0x243: V240 = S[0x2]
0x245: V241 = MUL V236 V240
0x246: V242 = CALLVALUE
0x247: V243 = GT V242 V241
0x248: V244 = ISZERO V243
0x249: V245 = 0x25a
0x24c: JUMPI 0x25a V244
---
Entry stack: [V10, S6, {0x306, 0x308}, V172, 0x0, 0x0, V175, V233]
Stack pops: 4
Stack additions: [V236, 0x0]
Exit stack: [V10, S6, {0x306, 0x308}, V172, V236, 0x0]

================================

Block 0x24d
[0x24d:0x259]
---
Predecessors: [0x237]
Successors: [0x25a]
---
0x24d POP
0x24e PUSH1 0x2
0x250 SLOAD
0x251 SWAP1
0x252 SWAP2
0x253 POP
0x254 DUP2
0x255 SWAP1
0x256 DUP2
0x257 MUL
0x258 CALLVALUE
0x259 SUB
---
0x24e: V246 = 0x2
0x250: V247 = S[0x2]
0x257: V248 = MUL V236 V247
0x258: V249 = CALLVALUE
0x259: V250 = SUB V249 V248
---
Entry stack: [V10, S4, {0x306, 0x308}, V172, V236, 0x0]
Stack pops: 3
Stack additions: [S1, S1, V250]
Exit stack: [V10, S4, {0x306, 0x308}, V236, V236, V250]

================================

Block 0x25a
[0x25a:0x263]
---
Predecessors: [0x237, 0x24d]
Successors: [0x264, 0x37b]
---
0x25a JUMPDEST
0x25b PUSH1 0x0
0x25d DUP2
0x25e GT
0x25f ISZERO
0x260 PUSH2 0x37b
0x263 JUMPI
---
0x25a: JUMPDEST 
0x25b: V251 = 0x0
0x25e: V252 = GT S0 0x0
0x25f: V253 = ISZERO V252
0x260: V254 = 0x37b
0x263: JUMPI 0x37b V253
---
Entry stack: [V10, S4, {0x306, 0x308}, S2, V236, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, S4, {0x306, 0x308}, S2, V236, S0]

================================

Block 0x264
[0x264:0x28e]
---
Predecessors: [0x25a]
Successors: [0x28f, 0x37b]
---
0x264 PUSH1 0x40
0x266 MLOAD
0x267 PUSH1 0x1
0x269 PUSH1 0xa0
0x26b PUSH1 0x2
0x26d EXP
0x26e SUB
0x26f CALLER
0x270 AND
0x271 SWAP1
0x272 DUP3
0x273 ISZERO
0x274 PUSH2 0x8fc
0x277 MUL
0x278 SWAP1
0x279 DUP4
0x27a SWAP1
0x27b PUSH1 0x0
0x27d DUP2
0x27e DUP2
0x27f DUP2
0x280 DUP6
0x281 DUP9
0x282 DUP9
0x283 CALL
0x284 SWAP4
0x285 POP
0x286 POP
0x287 POP
0x288 POP
0x289 ISZERO
0x28a ISZERO
0x28b PUSH2 0x37b
0x28e JUMPI
---
0x264: V255 = 0x40
0x266: V256 = M[0x40]
0x267: V257 = 0x1
0x269: V258 = 0xa0
0x26b: V259 = 0x2
0x26d: V260 = EXP 0x2 0xa0
0x26e: V261 = SUB 0x10000000000000000000000000000000000000000 0x1
0x26f: V262 = CALLER
0x270: V263 = AND V262 0xffffffffffffffffffffffffffffffffffffffff
0x273: V264 = ISZERO S0
0x274: V265 = 0x8fc
0x277: V266 = MUL 0x8fc V264
0x27b: V267 = 0x0
0x283: V268 = CALL V266 V263 S0 V256 0x0 V256 0x0
0x289: V269 = ISZERO V268
0x28a: V270 = ISZERO V269
0x28b: V271 = 0x37b
0x28e: JUMPI 0x37b V270
---
Entry stack: [V10, S4, {0x306, 0x308}, S2, V236, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, S4, {0x306, 0x308}, S2, V236, S0]

================================

Block 0x28f
[0x28f:0x292]
---
Predecessors: [0x264]
Successors: []
---
0x28f PUSH2 0x2
0x292 JUMP
---
0x28f: V272 = 0x2
0x292: THROW 
---
Entry stack: [V10, S4, {0x306, 0x308}, S2, V236, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, {0x306, 0x308}, S2, V236, S0]

================================

Block 0x293
[0x293:0x298]
---
Predecessors: [0x77]
Successors: [0x299]
---
0x293 JUMPDEST
0x294 CALLVALUE
0x295 PUSH2 0x2
0x298 JUMPI
---
0x293: JUMPDEST 
0x294: V273 = CALLVALUE
0x295: V274 = 0x2
0x298: THROWI V273
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x299
[0x299:0x2b5]
---
Predecessors: [0x293]
Successors: [0x2b6, 0x71c]
---
0x299 PUSH2 0x30a
0x29c PUSH1 0x4
0x29e CALLDATALOAD
0x29f PUSH1 0x0
0x2a1 DUP1
0x2a2 SLOAD
0x2a3 CALLER
0x2a4 PUSH1 0x1
0x2a6 PUSH1 0xa0
0x2a8 PUSH1 0x2
0x2aa EXP
0x2ab SUB
0x2ac SWAP1
0x2ad DUP2
0x2ae AND
0x2af SWAP2
0x2b0 AND
0x2b1 EQ
0x2b2 PUSH2 0x71c
0x2b5 JUMPI
---
0x299: V275 = 0x30a
0x29c: V276 = 0x4
0x29e: V277 = CALLDATALOAD 0x4
0x29f: V278 = 0x0
0x2a2: V279 = S[0x0]
0x2a3: V280 = CALLER
0x2a4: V281 = 0x1
0x2a6: V282 = 0xa0
0x2a8: V283 = 0x2
0x2aa: V284 = EXP 0x2 0xa0
0x2ab: V285 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ae: V286 = AND 0xffffffffffffffffffffffffffffffffffffffff V280
0x2b0: V287 = AND V279 0xffffffffffffffffffffffffffffffffffffffff
0x2b1: V288 = EQ V287 V286
0x2b2: V289 = 0x71c
0x2b5: JUMPI 0x71c V288
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x30a, V277, 0x0]
Exit stack: [V10, 0x30a, V277, 0x0]

================================

Block 0x2b6
[0x2b6:0x2b9]
---
Predecessors: [0x299]
Successors: []
---
0x2b6 PUSH2 0x2
0x2b9 JUMP
---
0x2b6: V290 = 0x2
0x2b9: THROW 
---
Entry stack: [V10, 0x30a, V277, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x30a, V277, 0x0]

================================

Block 0x2ba
[0x2ba:0x2bf]
---
Predecessors: [0x82]
Successors: [0x2c0]
---
0x2ba JUMPDEST
0x2bb CALLVALUE
0x2bc PUSH2 0x2
0x2bf JUMPI
---
0x2ba: JUMPDEST 
0x2bb: V291 = CALLVALUE
0x2bc: V292 = 0x2
0x2bf: THROWI V291
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2c0
[0x2c0:0x2db]
---
Predecessors: [0x2ba]
Successors: [0x2dc, 0x7c5]
---
0x2c0 PUSH2 0x306
0x2c3 PUSH1 0x4
0x2c5 CALLDATALOAD
0x2c6 PUSH1 0x0
0x2c8 SLOAD
0x2c9 CALLER
0x2ca PUSH1 0x1
0x2cc PUSH1 0xa0
0x2ce PUSH1 0x2
0x2d0 EXP
0x2d1 SUB
0x2d2 SWAP1
0x2d3 DUP2
0x2d4 AND
0x2d5 SWAP2
0x2d6 AND
0x2d7 EQ
0x2d8 PUSH2 0x7c5
0x2db JUMPI
---
0x2c0: V293 = 0x306
0x2c3: V294 = 0x4
0x2c5: V295 = CALLDATALOAD 0x4
0x2c6: V296 = 0x0
0x2c8: V297 = S[0x0]
0x2c9: V298 = CALLER
0x2ca: V299 = 0x1
0x2cc: V300 = 0xa0
0x2ce: V301 = 0x2
0x2d0: V302 = EXP 0x2 0xa0
0x2d1: V303 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d4: V304 = AND 0xffffffffffffffffffffffffffffffffffffffff V298
0x2d6: V305 = AND V297 0xffffffffffffffffffffffffffffffffffffffff
0x2d7: V306 = EQ V305 V304
0x2d8: V307 = 0x7c5
0x2db: JUMPI 0x7c5 V306
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x306, V295]
Exit stack: [V10, 0x306, V295]

================================

Block 0x2dc
[0x2dc:0x2df]
---
Predecessors: [0x2c0]
Successors: []
---
0x2dc PUSH2 0x2
0x2df JUMP
---
0x2dc: V308 = 0x2
0x2df: THROW 
---
Entry stack: [V10, 0x306, V295]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x306, V295]

================================

Block 0x2e0
[0x2e0:0x2e5]
---
Predecessors: [0x8d]
Successors: [0x2e6]
---
0x2e0 JUMPDEST
0x2e1 CALLVALUE
0x2e2 PUSH2 0x2
0x2e5 JUMPI
---
0x2e0: JUMPDEST 
0x2e1: V309 = CALLVALUE
0x2e2: V310 = 0x2
0x2e5: THROWI V309
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2e6
[0x2e6:0x301]
---
Predecessors: [0x2e0]
Successors: [0x302, 0x817]
---
0x2e6 PUSH2 0x306
0x2e9 PUSH1 0x4
0x2eb CALLDATALOAD
0x2ec PUSH1 0x0
0x2ee SLOAD
0x2ef CALLER
0x2f0 PUSH1 0x1
0x2f2 PUSH1 0xa0
0x2f4 PUSH1 0x2
0x2f6 EXP
0x2f7 SUB
0x2f8 SWAP1
0x2f9 DUP2
0x2fa AND
0x2fb SWAP2
0x2fc AND
0x2fd EQ
0x2fe PUSH2 0x817
0x301 JUMPI
---
0x2e6: V311 = 0x306
0x2e9: V312 = 0x4
0x2eb: V313 = CALLDATALOAD 0x4
0x2ec: V314 = 0x0
0x2ee: V315 = S[0x0]
0x2ef: V316 = CALLER
0x2f0: V317 = 0x1
0x2f2: V318 = 0xa0
0x2f4: V319 = 0x2
0x2f6: V320 = EXP 0x2 0xa0
0x2f7: V321 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2fa: V322 = AND 0xffffffffffffffffffffffffffffffffffffffff V316
0x2fc: V323 = AND V315 0xffffffffffffffffffffffffffffffffffffffff
0x2fd: V324 = EQ V323 V322
0x2fe: V325 = 0x817
0x301: JUMPI 0x817 V324
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x306, V313]
Exit stack: [V10, 0x306, V313]

================================

Block 0x302
[0x302:0x305]
---
Predecessors: [0x2e6]
Successors: []
---
0x302 PUSH2 0x2
0x305 JUMP
---
0x302: V326 = 0x2
0x305: THROW 
---
Entry stack: [V10, 0x306, V313]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x306, V313]

================================

Block 0x306
[0x306:0x307]
---
Predecessors: [0x308, 0x451, 0x7c5, 0x817]
Successors: []
---
0x306 JUMPDEST
0x307 STOP
---
0x306: JUMPDEST 
0x307: STOP 
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0x308
[0x308:0x309]
---
Predecessors: [0x451]
Successors: [0x306]
---
0x308 JUMPDEST
0x309 JUMP
---
0x308: JUMPDEST 
0x309: JUMP S0
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x30a
[0x30a:0x31d]
---
Predecessors: [0xf5, 0x4c4, 0x65f]
Successors: []
---
0x30a JUMPDEST
0x30b PUSH1 0x40
0x30d DUP1
0x30e MLOAD
0x30f SWAP2
0x310 ISZERO
0x311 ISZERO
0x312 DUP3
0x313 MSTORE
0x314 MLOAD
0x315 SWAP1
0x316 DUP2
0x317 SWAP1
0x318 SUB
0x319 PUSH1 0x20
0x31b ADD
0x31c SWAP1
0x31d RETURN
---
0x30a: JUMPDEST 
0x30b: V327 = 0x40
0x30e: V328 = M[0x40]
0x310: V329 = ISZERO S0
0x311: V330 = ISZERO V329
0x313: M[V328] = V330
0x314: V331 = M[0x40]
0x318: V332 = SUB V328 V331
0x319: V333 = 0x20
0x31b: V334 = ADD 0x20 V332
0x31d: RETURN V331 V334
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x31e
[0x31e:0x339]
---
Predecessors: [0xd0, 0x130]
Successors: []
---
0x31e JUMPDEST
0x31f PUSH1 0x40
0x321 DUP1
0x322 MLOAD
0x323 PUSH1 0x1
0x325 PUSH1 0xa0
0x327 PUSH1 0x2
0x329 EXP
0x32a SUB
0x32b SWAP1
0x32c SWAP3
0x32d AND
0x32e DUP3
0x32f MSTORE
0x330 MLOAD
0x331 SWAP1
0x332 DUP2
0x333 SWAP1
0x334 SUB
0x335 PUSH1 0x20
0x337 ADD
0x338 SWAP1
0x339 RETURN
---
0x31e: JUMPDEST 
0x31f: V335 = 0x40
0x322: V336 = M[0x40]
0x323: V337 = 0x1
0x325: V338 = 0xa0
0x327: V339 = 0x2
0x329: V340 = EXP 0x2 0xa0
0x32a: V341 = SUB 0x10000000000000000000000000000000000000000 0x1
0x32d: V342 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x32f: M[V336] = V342
0x330: V343 = M[0x40]
0x334: V344 = SUB V336 V343
0x335: V345 = 0x20
0x337: V346 = ADD 0x20 V344
0x339: RETURN V343 V346
---
Entry stack: [V10, 0x31e, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x31e]

================================

Block 0x33a
[0x33a:0x34b]
---
Predecessors: [0xe7, 0x147]
Successors: []
---
0x33a JUMPDEST
0x33b PUSH1 0x40
0x33d DUP1
0x33e MLOAD
0x33f SWAP2
0x340 DUP3
0x341 MSTORE
0x342 MLOAD
0x343 SWAP1
0x344 DUP2
0x345 SWAP1
0x346 SUB
0x347 PUSH1 0x20
0x349 ADD
0x34a SWAP1
0x34b RETURN
---
0x33a: JUMPDEST 
0x33b: V347 = 0x40
0x33e: V348 = M[0x40]
0x341: M[V348] = S0
0x342: V349 = M[0x40]
0x346: V350 = SUB V348 V349
0x347: V351 = 0x20
0x349: V352 = ADD 0x20 V350
0x34b: RETURN V349 V352
---
Entry stack: [V10, 0x33a, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x33a]

================================

Block 0x34c
[0x34c:0x376]
---
Predecessors: [0x1a3]
Successors: [0x377, 0x451]
---
0x34c JUMPDEST
0x34d PUSH1 0x40
0x34f MLOAD
0x350 PUSH1 0x1
0x352 PUSH1 0xa0
0x354 PUSH1 0x2
0x356 EXP
0x357 SUB
0x358 CALLER
0x359 AND
0x35a SWAP1
0x35b CALLVALUE
0x35c DUP1
0x35d ISZERO
0x35e PUSH2 0x8fc
0x361 MUL
0x362 SWAP2
0x363 PUSH1 0x0
0x365 DUP2
0x366 DUP2
0x367 DUP2
0x368 DUP6
0x369 DUP9
0x36a DUP9
0x36b CALL
0x36c SWAP4
0x36d POP
0x36e POP
0x36f POP
0x370 POP
0x371 ISZERO
0x372 ISZERO
0x373 PUSH2 0x451
0x376 JUMPI
---
0x34c: JUMPDEST 
0x34d: V353 = 0x40
0x34f: V354 = M[0x40]
0x350: V355 = 0x1
0x352: V356 = 0xa0
0x354: V357 = 0x2
0x356: V358 = EXP 0x2 0xa0
0x357: V359 = SUB 0x10000000000000000000000000000000000000000 0x1
0x358: V360 = CALLER
0x359: V361 = AND V360 0xffffffffffffffffffffffffffffffffffffffff
0x35b: V362 = CALLVALUE
0x35d: V363 = ISZERO V362
0x35e: V364 = 0x8fc
0x361: V365 = MUL 0x8fc V363
0x363: V366 = 0x0
0x36b: V367 = CALL V365 V361 V362 V354 0x0 V354 0x0
0x371: V368 = ISZERO V367
0x372: V369 = ISZERO V368
0x373: V370 = 0x451
0x376: JUMPI 0x451 V369
---
Entry stack: [V10, S4, {0x306, 0x308}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, {0x306, 0x308}, 0x0, 0x0, 0x0]

================================

Block 0x377
[0x377:0x37a]
---
Predecessors: [0x34c]
Successors: []
---
0x377 PUSH2 0x2
0x37a JUMP
---
0x377: V371 = 0x2
0x37a: THROW 
---
Entry stack: [V10, S4, {0x306, 0x308}, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, {0x306, 0x308}, 0x0, 0x0, 0x0]

================================

Block 0x37b
[0x37b:0x384]
---
Predecessors: [0x25a, 0x264]
Successors: [0x385, 0x401]
---
0x37b JUMPDEST
0x37c PUSH1 0x0
0x37e DUP4
0x37f GT
0x380 ISZERO
0x381 PUSH2 0x401
0x384 JUMPI
---
0x37b: JUMPDEST 
0x37c: V372 = 0x0
0x37f: V373 = GT S2 0x0
0x380: V374 = ISZERO V373
0x381: V375 = 0x401
0x384: JUMPI 0x401 V374
---
Entry stack: [V10, S4, {0x306, 0x308}, S2, V236, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, S4, {0x306, 0x308}, S2, V236, S0]

================================

Block 0x385
[0x385:0x3e4]
---
Predecessors: [0x37b]
Successors: [0x3e5]
---
0x385 PUSH1 0x1
0x387 SLOAD
0x388 PUSH1 0x3
0x38a SLOAD
0x38b PUSH1 0x40
0x38d DUP1
0x38e MLOAD
0x38f PUSH1 0x0
0x391 PUSH1 0x20
0x393 SWAP2
0x394 DUP3
0x395 ADD
0x396 DUP2
0x397 SWAP1
0x398 MSTORE
0x399 DUP3
0x39a MLOAD
0x39b PUSH1 0xe0
0x39d PUSH1 0x2
0x39f EXP
0x3a0 PUSH4 0xa9059cbb
0x3a5 MUL
0x3a6 DUP2
0x3a7 MSTORE
0x3a8 PUSH1 0x1
0x3aa PUSH1 0xa0
0x3ac PUSH1 0x2
0x3ae EXP
0x3af SUB
0x3b0 CALLER
0x3b1 DUP2
0x3b2 AND
0x3b3 PUSH1 0x4
0x3b5 DUP4
0x3b6 ADD
0x3b7 MSTORE
0x3b8 SWAP5
0x3b9 DUP10
0x3ba MUL
0x3bb PUSH1 0x24
0x3bd DUP3
0x3be ADD
0x3bf MSTORE
0x3c0 SWAP3
0x3c1 MLOAD
0x3c2 SWAP4
0x3c3 SWAP1
0x3c4 SWAP5
0x3c5 AND
0x3c6 SWAP4
0x3c7 PUSH4 0xa9059cbb
0x3cc SWAP4
0x3cd PUSH1 0x44
0x3cf DUP1
0x3d0 DUP6
0x3d1 ADD
0x3d2 SWAP5
0x3d3 SWAP2
0x3d4 SWAP3
0x3d5 SWAP2
0x3d6 DUP4
0x3d7 SWAP1
0x3d8 SUB
0x3d9 ADD
0x3da SWAP1
0x3db DUP3
0x3dc SWAP1
0x3dd DUP8
0x3de DUP1
0x3df EXTCODESIZE
0x3e0 ISZERO
0x3e1 PUSH2 0x2
0x3e4 JUMPI
---
0x385: V376 = 0x1
0x387: V377 = S[0x1]
0x388: V378 = 0x3
0x38a: V379 = S[0x3]
0x38b: V380 = 0x40
0x38e: V381 = M[0x40]
0x38f: V382 = 0x0
0x391: V383 = 0x20
0x395: V384 = ADD 0x20 V381
0x398: M[V384] = 0x0
0x39a: V385 = M[0x40]
0x39b: V386 = 0xe0
0x39d: V387 = 0x2
0x39f: V388 = EXP 0x2 0xe0
0x3a0: V389 = 0xa9059cbb
0x3a5: V390 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x3a7: M[V385] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x3a8: V391 = 0x1
0x3aa: V392 = 0xa0
0x3ac: V393 = 0x2
0x3ae: V394 = EXP 0x2 0xa0
0x3af: V395 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b0: V396 = CALLER
0x3b2: V397 = AND 0xffffffffffffffffffffffffffffffffffffffff V396
0x3b3: V398 = 0x4
0x3b6: V399 = ADD V385 0x4
0x3b7: M[V399] = V397
0x3ba: V400 = MUL S2 V379
0x3bb: V401 = 0x24
0x3be: V402 = ADD V385 0x24
0x3bf: M[V402] = V400
0x3c1: V403 = M[0x40]
0x3c5: V404 = AND V377 0xffffffffffffffffffffffffffffffffffffffff
0x3c7: V405 = 0xa9059cbb
0x3cd: V406 = 0x44
0x3d1: V407 = ADD V385 0x44
0x3d8: V408 = SUB V385 V403
0x3d9: V409 = ADD V408 0x44
0x3df: V410 = EXTCODESIZE V404
0x3e0: V411 = ISZERO V410
0x3e1: V412 = 0x2
0x3e4: THROWI V411
---
Entry stack: [V10, S4, {0x306, 0x308}, S2, V236, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V404, 0xa9059cbb, V407, 0x20, V403, V409, V403, 0x0, V404]
Exit stack: [V10, S4, {0x306, 0x308}, S2, V236, S0, V404, 0xa9059cbb, V407, 0x20, V403, V409, V403, 0x0, V404]

================================

Block 0x3e5
[0x3e5:0x3ee]
---
Predecessors: [0x385]
Successors: [0x3ef]
---
0x3e5 PUSH1 0x32
0x3e7 GAS
0x3e8 SUB
0x3e9 CALL
0x3ea ISZERO
0x3eb PUSH2 0x2
0x3ee JUMPI
---
0x3e5: V413 = 0x32
0x3e7: V414 = GAS
0x3e8: V415 = SUB V414 0x32
0x3e9: V416 = CALL V415 V404 0x0 V403 V409 V403 0x20
0x3ea: V417 = ISZERO V416
0x3eb: V418 = 0x2
0x3ee: THROWI V417
---
Entry stack: [V10, S13, {0x306, 0x308}, S11, V236, S9, V404, 0xa9059cbb, V407, 0x20, V403, V409, V403, 0x0, V404]
Stack pops: 6
Stack additions: []
Exit stack: [V10, S13, {0x306, 0x308}, S11, V236, S9, V404, 0xa9059cbb, V407]

================================

Block 0x3ef
[0x3ef:0x3fc]
---
Predecessors: [0x3e5]
Successors: [0x3fd, 0x401]
---
0x3ef POP
0x3f0 POP
0x3f1 PUSH1 0x40
0x3f3 MLOAD
0x3f4 MLOAD
0x3f5 ISZERO
0x3f6 ISZERO
0x3f7 SWAP1
0x3f8 POP
0x3f9 PUSH2 0x401
0x3fc JUMPI
---
0x3f1: V419 = 0x40
0x3f3: V420 = M[0x40]
0x3f4: V421 = M[V420]
0x3f5: V422 = ISZERO V421
0x3f6: V423 = ISZERO V422
0x3f9: V424 = 0x401
0x3fc: JUMPI 0x401 V423
---
Entry stack: [V10, S7, {0x306, 0x308}, S5, V236, S3, V404, 0xa9059cbb, V407]
Stack pops: 3
Stack additions: []
Exit stack: [V10, S7, {0x306, 0x308}, S5, V236, S3]

================================

Block 0x3fd
[0x3fd:0x400]
---
Predecessors: [0x3ef]
Successors: []
---
0x3fd PUSH2 0x2
0x400 JUMP
---
0x3fd: V425 = 0x2
0x400: THROW 
---
Entry stack: [V10, S4, {0x306, 0x308}, S2, V236, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S4, {0x306, 0x308}, S2, V236, S0]

================================

Block 0x401
[0x401:0x450]
---
Predecessors: [0x37b, 0x3ef]
Successors: [0x451]
---
0x401 JUMPDEST
0x402 PUSH1 0x3
0x404 SLOAD
0x405 PUSH1 0x40
0x407 DUP1
0x408 MLOAD
0x409 CALLVALUE
0x40a DUP2
0x40b MSTORE
0x40c PUSH1 0x20
0x40e DUP2
0x40f ADD
0x410 DUP5
0x411 SWAP1
0x412 MSTORE
0x413 SWAP2
0x414 DUP6
0x415 MUL
0x416 DUP3
0x417 DUP3
0x418 ADD
0x419 MSTORE
0x41a MLOAD
0x41b PUSH1 0x1
0x41d PUSH1 0xa0
0x41f PUSH1 0x2
0x421 EXP
0x422 SUB
0x423 CALLER
0x424 AND
0x425 SWAP2
0x426 PUSH32 0x37e948531341be0a8ce95c3833827c6f3559825cb6421e6ff1fe21c3a8b71217
0x447 SWAP2
0x448 SWAP1
0x449 DUP2
0x44a SWAP1
0x44b SUB
0x44c PUSH1 0x60
0x44e ADD
0x44f SWAP1
0x450 LOG2
---
0x401: JUMPDEST 
0x402: V426 = 0x3
0x404: V427 = S[0x3]
0x405: V428 = 0x40
0x408: V429 = M[0x40]
0x409: V430 = CALLVALUE
0x40b: M[V429] = V430
0x40c: V431 = 0x20
0x40f: V432 = ADD V429 0x20
0x412: M[V432] = S0
0x415: V433 = MUL S2 V427
0x418: V434 = ADD 0x40 V429
0x419: M[V434] = V433
0x41a: V435 = M[0x40]
0x41b: V436 = 0x1
0x41d: V437 = 0xa0
0x41f: V438 = 0x2
0x421: V439 = EXP 0x2 0xa0
0x422: V440 = SUB 0x10000000000000000000000000000000000000000 0x1
0x423: V441 = CALLER
0x424: V442 = AND V441 0xffffffffffffffffffffffffffffffffffffffff
0x426: V443 = 0x37e948531341be0a8ce95c3833827c6f3559825cb6421e6ff1fe21c3a8b71217
0x44b: V444 = SUB V429 V435
0x44c: V445 = 0x60
0x44e: V446 = ADD 0x60 V444
0x450: LOG V435 V446 0x37e948531341be0a8ce95c3833827c6f3559825cb6421e6ff1fe21c3a8b71217 V442
---
Entry stack: [V10, S4, {0x306, 0x308}, S2, V236, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, S4, {0x306, 0x308}, S2, V236, S0]

================================

Block 0x451
[0x451:0x455]
---
Predecessors: [0x34c, 0x401]
Successors: [0x306, 0x308]
---
0x451 JUMPDEST
0x452 POP
0x453 POP
0x454 POP
0x455 JUMP
---
0x451: JUMPDEST 
0x455: JUMP {0x306, 0x308}
---
Entry stack: [V10, S4, {0x306, 0x308}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V10, S4]

================================

Block 0x456
[0x456:0x468]
---
Predecessors: [0xa9]
Successors: [0x469, 0x4c4]
---
0x456 JUMPDEST
0x457 PUSH1 0x1
0x459 PUSH1 0xa0
0x45b PUSH1 0x2
0x45d EXP
0x45e SUB
0x45f ADDRESS
0x460 AND
0x461 BALANCE
0x462 DUP3
0x463 SWAP1
0x464 LT
0x465 PUSH2 0x4c4
0x468 JUMPI
---
0x456: JUMPDEST 
0x457: V447 = 0x1
0x459: V448 = 0xa0
0x45b: V449 = 0x2
0x45d: V450 = EXP 0x2 0xa0
0x45e: V451 = SUB 0x10000000000000000000000000000000000000000 0x1
0x45f: V452 = ADDRESS
0x460: V453 = AND V452 0xffffffffffffffffffffffffffffffffffffffff
0x461: V454 = BALANCE V453
0x464: V455 = LT V454 V54
0x465: V456 = 0x4c4
0x468: JUMPI 0x4c4 V455
---
Entry stack: [V10, 0x30a, V54, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x30a, V54, 0x0]

================================

Block 0x469
[0x469:0x4c3]
---
Predecessors: [0x456]
Successors: [0x4c4]
---
0x469 PUSH1 0x40
0x46b DUP1
0x46c MLOAD
0x46d DUP4
0x46e DUP2
0x46f MSTORE
0x470 SWAP1
0x471 MLOAD
0x472 PUSH32 0x8a93d70d792b644d97d7da8a5798e03bbee85be4537a860a331dbe3ee50eb982
0x493 SWAP2
0x494 DUP2
0x495 SWAP1
0x496 SUB
0x497 PUSH1 0x20
0x499 ADD
0x49a SWAP1
0x49b LOG1
0x49c PUSH1 0x40
0x49e MLOAD
0x49f PUSH1 0x0
0x4a1 DUP1
0x4a2 SLOAD
0x4a3 PUSH1 0x1
0x4a5 PUSH1 0xa0
0x4a7 PUSH1 0x2
0x4a9 EXP
0x4aa SUB
0x4ab AND
0x4ac SWAP2
0x4ad DUP5
0x4ae ISZERO
0x4af PUSH2 0x8fc
0x4b2 MUL
0x4b3 SWAP2
0x4b4 DUP6
0x4b5 SWAP2
0x4b6 SWAP1
0x4b7 DUP2
0x4b8 DUP2
0x4b9 DUP2
0x4ba DUP6
0x4bb DUP9
0x4bc DUP9
0x4bd CALL
0x4be SWAP5
0x4bf POP
0x4c0 POP
0x4c1 POP
0x4c2 POP
0x4c3 POP
---
0x469: V457 = 0x40
0x46c: V458 = M[0x40]
0x46f: M[V458] = V54
0x471: V459 = M[0x40]
0x472: V460 = 0x8a93d70d792b644d97d7da8a5798e03bbee85be4537a860a331dbe3ee50eb982
0x496: V461 = SUB V458 V459
0x497: V462 = 0x20
0x499: V463 = ADD 0x20 V461
0x49b: LOG V459 V463 0x8a93d70d792b644d97d7da8a5798e03bbee85be4537a860a331dbe3ee50eb982
0x49c: V464 = 0x40
0x49e: V465 = M[0x40]
0x49f: V466 = 0x0
0x4a2: V467 = S[0x0]
0x4a3: V468 = 0x1
0x4a5: V469 = 0xa0
0x4a7: V470 = 0x2
0x4a9: V471 = EXP 0x2 0xa0
0x4aa: V472 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ab: V473 = AND 0xffffffffffffffffffffffffffffffffffffffff V467
0x4ae: V474 = ISZERO V54
0x4af: V475 = 0x8fc
0x4b2: V476 = MUL 0x8fc V474
0x4bd: V477 = CALL V476 V473 V54 V465 0x0 V465 0x0
---
Entry stack: [V10, 0x30a, V54, 0x0]
Stack pops: 2
Stack additions: [S1, V477]
Exit stack: [V10, 0x30a, V54, V477]

================================

Block 0x4c4
[0x4c4:0x4c8]
---
Predecessors: [0x456, 0x469, 0x7b7]
Successors: [0x30a]
---
0x4c4 JUMPDEST
0x4c5 SWAP2
0x4c6 SWAP1
0x4c7 POP
0x4c8 JUMP
---
0x4c4: JUMPDEST 
0x4c8: JUMP 0x30a
---
Entry stack: [V10, 0x30a, S1, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, S0]

================================

Block 0x4c9
[0x4c9:0x506]
---
Predecessors: [0x106]
Successors: [0x507]
---
0x4c9 JUMPDEST
0x4ca DUP3
0x4cb PUSH1 0x1
0x4cd PUSH1 0xa0
0x4cf PUSH1 0x2
0x4d1 EXP
0x4d2 SUB
0x4d3 AND
0x4d4 PUSH4 0x8da5cb5b
0x4d9 PUSH1 0x0
0x4db PUSH1 0x40
0x4dd MLOAD
0x4de PUSH1 0x20
0x4e0 ADD
0x4e1 MSTORE
0x4e2 PUSH1 0x40
0x4e4 MLOAD
0x4e5 DUP2
0x4e6 PUSH1 0xe0
0x4e8 PUSH1 0x2
0x4ea EXP
0x4eb MUL
0x4ec DUP2
0x4ed MSTORE
0x4ee PUSH1 0x4
0x4f0 ADD
0x4f1 DUP1
0x4f2 SWAP1
0x4f3 POP
0x4f4 PUSH1 0x20
0x4f6 PUSH1 0x40
0x4f8 MLOAD
0x4f9 DUP1
0x4fa DUP4
0x4fb SUB
0x4fc DUP2
0x4fd PUSH1 0x0
0x4ff DUP8
0x500 DUP1
0x501 EXTCODESIZE
0x502 ISZERO
0x503 PUSH2 0x2
0x506 JUMPI
---
0x4c9: JUMPDEST 
0x4cb: V478 = 0x1
0x4cd: V479 = 0xa0
0x4cf: V480 = 0x2
0x4d1: V481 = EXP 0x2 0xa0
0x4d2: V482 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d3: V483 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0x4d4: V484 = 0x8da5cb5b
0x4d9: V485 = 0x0
0x4db: V486 = 0x40
0x4dd: V487 = M[0x40]
0x4de: V488 = 0x20
0x4e0: V489 = ADD 0x20 V487
0x4e1: M[V489] = 0x0
0x4e2: V490 = 0x40
0x4e4: V491 = M[0x40]
0x4e6: V492 = 0xe0
0x4e8: V493 = 0x2
0x4ea: V494 = EXP 0x2 0xe0
0x4eb: V495 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x8da5cb5b
0x4ed: M[V491] = 0x8da5cb5b00000000000000000000000000000000000000000000000000000000
0x4ee: V496 = 0x4
0x4f0: V497 = ADD 0x4 V491
0x4f4: V498 = 0x20
0x4f6: V499 = 0x40
0x4f8: V500 = M[0x40]
0x4fb: V501 = SUB V497 V500
0x4fd: V502 = 0x0
0x501: V503 = EXTCODESIZE V483
0x502: V504 = ISZERO V503
0x503: V505 = 0x2
0x506: THROWI V504
---
Entry stack: [V10, 0x30a, V95, V97, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V483, 0x8da5cb5b, V497, 0x20, V500, V501, V500, 0x0, V483]
Exit stack: [V10, 0x30a, V95, V97, 0x0, V483, 0x8da5cb5b, V497, 0x20, V500, V501, V500, 0x0, V483]

================================

Block 0x507
[0x507:0x510]
---
Predecessors: [0x4c9]
Successors: [0x511]
---
0x507 PUSH1 0x32
0x509 GAS
0x50a SUB
0x50b CALL
0x50c ISZERO
0x50d PUSH2 0x2
0x510 JUMPI
---
0x507: V506 = 0x32
0x509: V507 = GAS
0x50a: V508 = SUB V507 0x32
0x50b: V509 = CALL V508 V483 0x0 V500 V501 V500 0x20
0x50c: V510 = ISZERO V509
0x50d: V511 = 0x2
0x510: THROWI V510
---
Entry stack: [V10, 0x30a, V95, V97, 0x0, V483, 0x8da5cb5b, V497, 0x20, V500, V501, V500, 0x0, V483]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x30a, V95, V97, 0x0, V483, 0x8da5cb5b, V497]

================================

Block 0x511
[0x511:0x52f]
---
Predecessors: [0x507]
Successors: [0x530, 0x592]
---
0x511 POP
0x512 POP
0x513 PUSH1 0x40
0x515 MLOAD
0x516 MLOAD
0x517 PUSH1 0x0
0x519 SLOAD
0x51a PUSH1 0x1
0x51c PUSH1 0xa0
0x51e PUSH1 0x2
0x520 EXP
0x521 SUB
0x522 SWAP1
0x523 DUP2
0x524 AND
0x525 SWAP2
0x526 AND
0x527 EQ
0x528 ISZERO
0x529 SWAP1
0x52a POP
0x52b DUP1
0x52c PUSH2 0x592
0x52f JUMPI
---
0x513: V512 = 0x40
0x515: V513 = M[0x40]
0x516: V514 = M[V513]
0x517: V515 = 0x0
0x519: V516 = S[0x0]
0x51a: V517 = 0x1
0x51c: V518 = 0xa0
0x51e: V519 = 0x2
0x520: V520 = EXP 0x2 0xa0
0x521: V521 = SUB 0x10000000000000000000000000000000000000000 0x1
0x524: V522 = AND 0xffffffffffffffffffffffffffffffffffffffff V516
0x526: V523 = AND V514 0xffffffffffffffffffffffffffffffffffffffff
0x527: V524 = EQ V523 V522
0x528: V525 = ISZERO V524
0x52c: V526 = 0x592
0x52f: JUMPI 0x592 V525
---
Entry stack: [V10, 0x30a, V95, V97, 0x0, V483, 0x8da5cb5b, V497]
Stack pops: 3
Stack additions: [V525]
Exit stack: [V10, 0x30a, V95, V97, 0x0, V525]

================================

Block 0x530
[0x530:0x56d]
---
Predecessors: [0x511]
Successors: [0x56e]
---
0x530 POP
0x531 DUP3
0x532 PUSH1 0x1
0x534 PUSH1 0xa0
0x536 PUSH1 0x2
0x538 EXP
0x539 SUB
0x53a AND
0x53b PUSH4 0x38d52e0f
0x540 PUSH1 0x0
0x542 PUSH1 0x40
0x544 MLOAD
0x545 PUSH1 0x20
0x547 ADD
0x548 MSTORE
0x549 PUSH1 0x40
0x54b MLOAD
0x54c DUP2
0x54d PUSH1 0xe0
0x54f PUSH1 0x2
0x551 EXP
0x552 MUL
0x553 DUP2
0x554 MSTORE
0x555 PUSH1 0x4
0x557 ADD
0x558 DUP1
0x559 SWAP1
0x55a POP
0x55b PUSH1 0x20
0x55d PUSH1 0x40
0x55f MLOAD
0x560 DUP1
0x561 DUP4
0x562 SUB
0x563 DUP2
0x564 PUSH1 0x0
0x566 DUP8
0x567 DUP1
0x568 EXTCODESIZE
0x569 ISZERO
0x56a PUSH2 0x2
0x56d JUMPI
---
0x532: V527 = 0x1
0x534: V528 = 0xa0
0x536: V529 = 0x2
0x538: V530 = EXP 0x2 0xa0
0x539: V531 = SUB 0x10000000000000000000000000000000000000000 0x1
0x53a: V532 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0x53b: V533 = 0x38d52e0f
0x540: V534 = 0x0
0x542: V535 = 0x40
0x544: V536 = M[0x40]
0x545: V537 = 0x20
0x547: V538 = ADD 0x20 V536
0x548: M[V538] = 0x0
0x549: V539 = 0x40
0x54b: V540 = M[0x40]
0x54d: V541 = 0xe0
0x54f: V542 = 0x2
0x551: V543 = EXP 0x2 0xe0
0x552: V544 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x38d52e0f
0x554: M[V540] = 0x38d52e0f00000000000000000000000000000000000000000000000000000000
0x555: V545 = 0x4
0x557: V546 = ADD 0x4 V540
0x55b: V547 = 0x20
0x55d: V548 = 0x40
0x55f: V549 = M[0x40]
0x562: V550 = SUB V546 V549
0x564: V551 = 0x0
0x568: V552 = EXTCODESIZE V532
0x569: V553 = ISZERO V552
0x56a: V554 = 0x2
0x56d: THROWI V553
---
Entry stack: [V10, 0x30a, V95, V97, 0x0, V525]
Stack pops: 4
Stack additions: [S3, S2, S1, V532, 0x38d52e0f, V546, 0x20, V549, V550, V549, 0x0, V532]
Exit stack: [V10, 0x30a, V95, V97, 0x0, V532, 0x38d52e0f, V546, 0x20, V549, V550, V549, 0x0, V532]

================================

Block 0x56e
[0x56e:0x577]
---
Predecessors: [0x530]
Successors: [0x578]
---
0x56e PUSH1 0x32
0x570 GAS
0x571 SUB
0x572 CALL
0x573 ISZERO
0x574 PUSH2 0x2
0x577 JUMPI
---
0x56e: V555 = 0x32
0x570: V556 = GAS
0x571: V557 = SUB V556 0x32
0x572: V558 = CALL V557 V532 0x0 V549 V550 V549 0x20
0x573: V559 = ISZERO V558
0x574: V560 = 0x2
0x577: THROWI V559
---
Entry stack: [V10, 0x30a, V95, V97, 0x0, V532, 0x38d52e0f, V546, 0x20, V549, V550, V549, 0x0, V532]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x30a, V95, V97, 0x0, V532, 0x38d52e0f, V546]

================================

Block 0x578
[0x578:0x591]
---
Predecessors: [0x56e]
Successors: [0x592]
---
0x578 POP
0x579 POP
0x57a PUSH1 0x40
0x57c MLOAD
0x57d MLOAD
0x57e PUSH1 0x1
0x580 SLOAD
0x581 PUSH1 0x1
0x583 PUSH1 0xa0
0x585 PUSH1 0x2
0x587 EXP
0x588 SUB
0x589 SWAP1
0x58a DUP2
0x58b AND
0x58c SWAP2
0x58d AND
0x58e EQ
0x58f ISZERO
0x590 SWAP1
0x591 POP
---
0x57a: V561 = 0x40
0x57c: V562 = M[0x40]
0x57d: V563 = M[V562]
0x57e: V564 = 0x1
0x580: V565 = S[0x1]
0x581: V566 = 0x1
0x583: V567 = 0xa0
0x585: V568 = 0x2
0x587: V569 = EXP 0x2 0xa0
0x588: V570 = SUB 0x10000000000000000000000000000000000000000 0x1
0x58b: V571 = AND 0xffffffffffffffffffffffffffffffffffffffff V565
0x58d: V572 = AND V563 0xffffffffffffffffffffffffffffffffffffffff
0x58e: V573 = EQ V572 V571
0x58f: V574 = ISZERO V573
---
Entry stack: [V10, 0x30a, V95, V97, 0x0, V532, 0x38d52e0f, V546]
Stack pops: 3
Stack additions: [V574]
Exit stack: [V10, 0x30a, V95, V97, 0x0, V574]

================================

Block 0x592
[0x592:0x597]
---
Predecessors: [0x511, 0x578]
Successors: [0x598, 0x59c]
---
0x592 JUMPDEST
0x593 ISZERO
0x594 PUSH2 0x59c
0x597 JUMPI
---
0x592: JUMPDEST 
0x593: V575 = ISZERO S0
0x594: V576 = 0x59c
0x597: JUMPI 0x59c V575
---
Entry stack: [V10, 0x30a, V95, V97, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x30a, V95, V97, 0x0]

================================

Block 0x598
[0x598:0x59b]
---
Predecessors: [0x592]
Successors: []
---
0x598 PUSH2 0x2
0x59b JUMP
---
0x598: V577 = 0x2
0x59b: THROW 
---
Entry stack: [V10, 0x30a, V95, V97, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x30a, V95, V97, 0x0]

================================

Block 0x59c
[0x59c:0x64b]
---
Predecessors: [0x592]
Successors: [0x64c]
---
0x59c JUMPDEST
0x59d PUSH1 0x40
0x59f DUP1
0x5a0 MLOAD
0x5a1 PUSH1 0x1
0x5a3 PUSH1 0xa0
0x5a5 PUSH1 0x2
0x5a7 EXP
0x5a8 SUB
0x5a9 DUP6
0x5aa AND
0x5ab DUP2
0x5ac MSTORE
0x5ad PUSH1 0x20
0x5af DUP2
0x5b0 ADD
0x5b1 DUP5
0x5b2 SWAP1
0x5b3 MSTORE
0x5b4 DUP2
0x5b5 MLOAD
0x5b6 PUSH32 0x127afec6b0ab48f803536010148b79615f4a518f9b574de5b45bc74991c46d51
0x5d7 SWAP3
0x5d8 SWAP2
0x5d9 DUP2
0x5da SWAP1
0x5db SUB
0x5dc SWAP1
0x5dd SWAP2
0x5de ADD
0x5df SWAP1
0x5e0 LOG1
0x5e1 PUSH1 0x1
0x5e3 PUSH1 0x0
0x5e5 SWAP1
0x5e6 SLOAD
0x5e7 SWAP1
0x5e8 PUSH2 0x100
0x5eb EXP
0x5ec SWAP1
0x5ed DIV
0x5ee PUSH1 0x1
0x5f0 PUSH1 0xa0
0x5f2 PUSH1 0x2
0x5f4 EXP
0x5f5 SUB
0x5f6 AND
0x5f7 PUSH1 0x1
0x5f9 PUSH1 0xa0
0x5fb PUSH1 0x2
0x5fd EXP
0x5fe SUB
0x5ff AND
0x600 PUSH4 0xa9059cbb
0x605 DUP5
0x606 DUP5
0x607 PUSH1 0x0
0x609 PUSH1 0x40
0x60b MLOAD
0x60c PUSH1 0x20
0x60e ADD
0x60f MSTORE
0x610 PUSH1 0x40
0x612 MLOAD
0x613 DUP4
0x614 PUSH1 0xe0
0x616 PUSH1 0x2
0x618 EXP
0x619 MUL
0x61a DUP2
0x61b MSTORE
0x61c PUSH1 0x4
0x61e ADD
0x61f DUP1
0x620 DUP4
0x621 PUSH1 0x1
0x623 PUSH1 0xa0
0x625 PUSH1 0x2
0x627 EXP
0x628 SUB
0x629 AND
0x62a DUP2
0x62b MSTORE
0x62c PUSH1 0x20
0x62e ADD
0x62f DUP3
0x630 DUP2
0x631 MSTORE
0x632 PUSH1 0x20
0x634 ADD
0x635 SWAP3
0x636 POP
0x637 POP
0x638 POP
0x639 PUSH1 0x20
0x63b PUSH1 0x40
0x63d MLOAD
0x63e DUP1
0x63f DUP4
0x640 SUB
0x641 DUP2
0x642 PUSH1 0x0
0x644 DUP8
0x645 DUP1
0x646 EXTCODESIZE
0x647 ISZERO
0x648 PUSH2 0x2
0x64b JUMPI
---
0x59c: JUMPDEST 
0x59d: V578 = 0x40
0x5a0: V579 = M[0x40]
0x5a1: V580 = 0x1
0x5a3: V581 = 0xa0
0x5a5: V582 = 0x2
0x5a7: V583 = EXP 0x2 0xa0
0x5a8: V584 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5aa: V585 = AND V95 0xffffffffffffffffffffffffffffffffffffffff
0x5ac: M[V579] = V585
0x5ad: V586 = 0x20
0x5b0: V587 = ADD V579 0x20
0x5b3: M[V587] = V97
0x5b5: V588 = M[0x40]
0x5b6: V589 = 0x127afec6b0ab48f803536010148b79615f4a518f9b574de5b45bc74991c46d51
0x5db: V590 = SUB V579 V588
0x5de: V591 = ADD 0x40 V590
0x5e0: LOG V588 V591 0x127afec6b0ab48f803536010148b79615f4a518f9b574de5b45bc74991c46d51
0x5e1: V592 = 0x1
0x5e3: V593 = 0x0
0x5e6: V594 = S[0x1]
0x5e8: V595 = 0x100
0x5eb: V596 = EXP 0x100 0x0
0x5ed: V597 = DIV V594 0x1
0x5ee: V598 = 0x1
0x5f0: V599 = 0xa0
0x5f2: V600 = 0x2
0x5f4: V601 = EXP 0x2 0xa0
0x5f5: V602 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5f6: V603 = AND 0xffffffffffffffffffffffffffffffffffffffff V597
0x5f7: V604 = 0x1
0x5f9: V605 = 0xa0
0x5fb: V606 = 0x2
0x5fd: V607 = EXP 0x2 0xa0
0x5fe: V608 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ff: V609 = AND 0xffffffffffffffffffffffffffffffffffffffff V603
0x600: V610 = 0xa9059cbb
0x607: V611 = 0x0
0x609: V612 = 0x40
0x60b: V613 = M[0x40]
0x60c: V614 = 0x20
0x60e: V615 = ADD 0x20 V613
0x60f: M[V615] = 0x0
0x610: V616 = 0x40
0x612: V617 = M[0x40]
0x614: V618 = 0xe0
0x616: V619 = 0x2
0x618: V620 = EXP 0x2 0xe0
0x619: V621 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x61b: M[V617] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x61c: V622 = 0x4
0x61e: V623 = ADD 0x4 V617
0x621: V624 = 0x1
0x623: V625 = 0xa0
0x625: V626 = 0x2
0x627: V627 = EXP 0x2 0xa0
0x628: V628 = SUB 0x10000000000000000000000000000000000000000 0x1
0x629: V629 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0x62b: M[V623] = V629
0x62c: V630 = 0x20
0x62e: V631 = ADD 0x20 V623
0x631: M[V631] = V97
0x632: V632 = 0x20
0x634: V633 = ADD 0x20 V631
0x639: V634 = 0x20
0x63b: V635 = 0x40
0x63d: V636 = M[0x40]
0x640: V637 = SUB V633 V636
0x642: V638 = 0x0
0x646: V639 = EXTCODESIZE V609
0x647: V640 = ISZERO V639
0x648: V641 = 0x2
0x64b: THROWI V640
---
Entry stack: [V10, 0x30a, V95, V97, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V609, 0xa9059cbb, V633, 0x20, V636, V637, V636, 0x0, V609]
Exit stack: [V10, 0x30a, V95, V97, 0x0, V609, 0xa9059cbb, V633, 0x20, V636, V637, V636, 0x0, V609]

================================

Block 0x64c
[0x64c:0x655]
---
Predecessors: [0x59c]
Successors: [0x656]
---
0x64c PUSH1 0x32
0x64e GAS
0x64f SUB
0x650 CALL
0x651 ISZERO
0x652 PUSH2 0x2
0x655 JUMPI
---
0x64c: V642 = 0x32
0x64e: V643 = GAS
0x64f: V644 = SUB V643 0x32
0x650: V645 = CALL V644 V609 0x0 V636 V637 V636 0x20
0x651: V646 = ISZERO V645
0x652: V647 = 0x2
0x655: THROWI V646
---
Entry stack: [V10, 0x30a, V95, V97, 0x0, V609, 0xa9059cbb, V633, 0x20, V636, V637, V636, 0x0, V609]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x30a, V95, V97, 0x0, V609, 0xa9059cbb, V633]

================================

Block 0x656
[0x656:0x65e]
---
Predecessors: [0x64c]
Successors: [0x65f]
---
0x656 POP
0x657 POP
0x658 PUSH1 0x40
0x65a MLOAD
0x65b MLOAD
0x65c SWAP2
0x65d POP
0x65e POP
---
0x658: V648 = 0x40
0x65a: V649 = M[0x40]
0x65b: V650 = M[V649]
---
Entry stack: [V10, 0x30a, V95, V97, 0x0, V609, 0xa9059cbb, V633]
Stack pops: 4
Stack additions: [V650]
Exit stack: [V10, 0x30a, V95, V97, V650]

================================

Block 0x65f
[0x65f:0x664]
---
Predecessors: [0x656, 0x70e]
Successors: [0x30a]
---
0x65f JUMPDEST
0x660 SWAP3
0x661 SWAP2
0x662 POP
0x663 POP
0x664 JUMP
---
0x65f: JUMPDEST 
0x664: JUMP 0x30a
---
Entry stack: [V10, 0x30a, S2, S1, S0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, S0]

================================

Block 0x665
[0x665:0x703]
---
Predecessors: [0x155]
Successors: [0x704]
---
0x665 JUMPDEST
0x666 PUSH1 0x40
0x668 DUP1
0x669 MLOAD
0x66a PUSH1 0x1
0x66c PUSH1 0xa0
0x66e PUSH1 0x2
0x670 EXP
0x671 SUB
0x672 DUP6
0x673 AND
0x674 DUP2
0x675 MSTORE
0x676 PUSH1 0x20
0x678 DUP2
0x679 ADD
0x67a DUP5
0x67b SWAP1
0x67c MSTORE
0x67d DUP2
0x67e MLOAD
0x67f PUSH32 0xfea8ae97829f3801e6ca15928428931c2a4f3cee1fa7c9b83d959efd24666422
0x6a0 SWAP3
0x6a1 SWAP2
0x6a2 DUP2
0x6a3 SWAP1
0x6a4 SUB
0x6a5 SWAP1
0x6a6 SWAP2
0x6a7 ADD
0x6a8 SWAP1
0x6a9 LOG1
0x6aa PUSH1 0x40
0x6ac DUP1
0x6ad MLOAD
0x6ae PUSH1 0x0
0x6b0 DUP1
0x6b1 SLOAD
0x6b2 PUSH1 0x20
0x6b4 SWAP3
0x6b5 DUP4
0x6b6 ADD
0x6b7 DUP3
0x6b8 SWAP1
0x6b9 MSTORE
0x6ba DUP4
0x6bb MLOAD
0x6bc PUSH1 0xe0
0x6be PUSH1 0x2
0x6c0 EXP
0x6c1 PUSH4 0xa9059cbb
0x6c6 MUL
0x6c7 DUP2
0x6c8 MSTORE
0x6c9 PUSH1 0x1
0x6cb PUSH1 0xa0
0x6cd PUSH1 0x2
0x6cf EXP
0x6d0 SUB
0x6d1 SWAP2
0x6d2 DUP3
0x6d3 AND
0x6d4 PUSH1 0x4
0x6d6 DUP3
0x6d7 ADD
0x6d8 MSTORE
0x6d9 PUSH1 0x24
0x6db DUP2
0x6dc ADD
0x6dd DUP8
0x6de SWAP1
0x6df MSTORE
0x6e0 SWAP4
0x6e1 MLOAD
0x6e2 SWAP1
0x6e3 DUP8
0x6e4 AND
0x6e5 SWAP4
0x6e6 PUSH4 0xa9059cbb
0x6eb SWAP4
0x6ec PUSH1 0x44
0x6ee DUP1
0x6ef DUP4
0x6f0 ADD
0x6f1 SWAP5
0x6f2 SWAP2
0x6f3 SWAP4
0x6f4 SWAP3
0x6f5 DUP4
0x6f6 SWAP1
0x6f7 SUB
0x6f8 ADD
0x6f9 SWAP1
0x6fa DUP3
0x6fb SWAP1
0x6fc DUP8
0x6fd DUP1
0x6fe EXTCODESIZE
0x6ff ISZERO
0x700 PUSH2 0x2
0x703 JUMPI
---
0x665: JUMPDEST 
0x666: V651 = 0x40
0x669: V652 = M[0x40]
0x66a: V653 = 0x1
0x66c: V654 = 0xa0
0x66e: V655 = 0x2
0x670: V656 = EXP 0x2 0xa0
0x671: V657 = SUB 0x10000000000000000000000000000000000000000 0x1
0x673: V658 = AND V131 0xffffffffffffffffffffffffffffffffffffffff
0x675: M[V652] = V658
0x676: V659 = 0x20
0x679: V660 = ADD V652 0x20
0x67c: M[V660] = V133
0x67e: V661 = M[0x40]
0x67f: V662 = 0xfea8ae97829f3801e6ca15928428931c2a4f3cee1fa7c9b83d959efd24666422
0x6a4: V663 = SUB V652 V661
0x6a7: V664 = ADD 0x40 V663
0x6a9: LOG V661 V664 0xfea8ae97829f3801e6ca15928428931c2a4f3cee1fa7c9b83d959efd24666422
0x6aa: V665 = 0x40
0x6ad: V666 = M[0x40]
0x6ae: V667 = 0x0
0x6b1: V668 = S[0x0]
0x6b2: V669 = 0x20
0x6b6: V670 = ADD 0x20 V666
0x6b9: M[V670] = 0x0
0x6bb: V671 = M[0x40]
0x6bc: V672 = 0xe0
0x6be: V673 = 0x2
0x6c0: V674 = EXP 0x2 0xe0
0x6c1: V675 = 0xa9059cbb
0x6c6: V676 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x6c8: M[V671] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x6c9: V677 = 0x1
0x6cb: V678 = 0xa0
0x6cd: V679 = 0x2
0x6cf: V680 = EXP 0x2 0xa0
0x6d0: V681 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6d3: V682 = AND 0xffffffffffffffffffffffffffffffffffffffff V668
0x6d4: V683 = 0x4
0x6d7: V684 = ADD V671 0x4
0x6d8: M[V684] = V682
0x6d9: V685 = 0x24
0x6dc: V686 = ADD V671 0x24
0x6df: M[V686] = V133
0x6e1: V687 = M[0x40]
0x6e4: V688 = AND V131 0xffffffffffffffffffffffffffffffffffffffff
0x6e6: V689 = 0xa9059cbb
0x6ec: V690 = 0x44
0x6f0: V691 = ADD V671 0x44
0x6f7: V692 = SUB V671 V687
0x6f8: V693 = ADD V692 0x44
0x6fe: V694 = EXTCODESIZE V688
0x6ff: V695 = ISZERO V694
0x700: V696 = 0x2
0x703: THROWI V695
---
Entry stack: [V10, 0x30a, V131, V133, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V688, 0xa9059cbb, V691, 0x20, V687, V693, V687, 0x0, V688]
Exit stack: [V10, 0x30a, V131, V133, 0x0, V688, 0xa9059cbb, V691, 0x20, V687, V693, V687, 0x0, V688]

================================

Block 0x704
[0x704:0x70d]
---
Predecessors: [0x665]
Successors: [0x70e]
---
0x704 PUSH1 0x32
0x706 GAS
0x707 SUB
0x708 CALL
0x709 ISZERO
0x70a PUSH2 0x2
0x70d JUMPI
---
0x704: V697 = 0x32
0x706: V698 = GAS
0x707: V699 = SUB V698 0x32
0x708: V700 = CALL V699 V688 0x0 V687 V693 V687 0x20
0x709: V701 = ISZERO V700
0x70a: V702 = 0x2
0x70d: THROWI V701
---
Entry stack: [V10, 0x30a, V131, V133, 0x0, V688, 0xa9059cbb, V691, 0x20, V687, V693, V687, 0x0, V688]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x30a, V131, V133, 0x0, V688, 0xa9059cbb, V691]

================================

Block 0x70e
[0x70e:0x71b]
---
Predecessors: [0x704]
Successors: [0x65f]
---
0x70e POP
0x70f POP
0x710 PUSH1 0x40
0x712 MLOAD
0x713 MLOAD
0x714 SWAP2
0x715 POP
0x716 PUSH2 0x65f
0x719 SWAP1
0x71a POP
0x71b JUMP
---
0x710: V703 = 0x40
0x712: V704 = M[0x40]
0x713: V705 = M[V704]
0x716: V706 = 0x65f
0x71b: JUMP 0x65f
---
Entry stack: [V10, 0x30a, V131, V133, 0x0, V688, 0xa9059cbb, V691]
Stack pops: 4
Stack additions: [V705]
Exit stack: [V10, 0x30a, V131, V133, V705]

================================

Block 0x71c
[0x71c:0x7ac]
---
Predecessors: [0x299]
Successors: [0x7ad]
---
0x71c JUMPDEST
0x71d PUSH1 0x40
0x71f DUP1
0x720 MLOAD
0x721 DUP4
0x722 DUP2
0x723 MSTORE
0x724 SWAP1
0x725 MLOAD
0x726 PUSH32 0x1ebbc515a759c3fe8e048867aac7fe458e3a37ac3dd44ffc73a6238cf3003981
0x747 SWAP2
0x748 DUP2
0x749 SWAP1
0x74a SUB
0x74b PUSH1 0x20
0x74d ADD
0x74e SWAP1
0x74f LOG1
0x750 PUSH1 0x40
0x752 DUP1
0x753 MLOAD
0x754 PUSH1 0x1
0x756 SLOAD
0x757 PUSH1 0x0
0x759 DUP1
0x75a SLOAD
0x75b PUSH1 0x20
0x75d SWAP4
0x75e DUP5
0x75f ADD
0x760 DUP3
0x761 SWAP1
0x762 MSTORE
0x763 DUP5
0x764 MLOAD
0x765 PUSH1 0xe0
0x767 PUSH1 0x2
0x769 EXP
0x76a PUSH4 0xa9059cbb
0x76f MUL
0x770 DUP2
0x771 MSTORE
0x772 PUSH1 0x1
0x774 PUSH1 0xa0
0x776 PUSH1 0x2
0x778 EXP
0x779 SUB
0x77a SWAP2
0x77b DUP3
0x77c AND
0x77d PUSH1 0x4
0x77f DUP3
0x780 ADD
0x781 MSTORE
0x782 PUSH1 0x24
0x784 DUP2
0x785 ADD
0x786 DUP9
0x787 SWAP1
0x788 MSTORE
0x789 SWAP5
0x78a MLOAD
0x78b SWAP3
0x78c AND
0x78d SWAP4
0x78e PUSH4 0xa9059cbb
0x793 SWAP4
0x794 PUSH1 0x44
0x796 DUP1
0x797 DUP4
0x798 ADD
0x799 SWAP5
0x79a SWAP2
0x79b SWAP4
0x79c SWAP2
0x79d SWAP3
0x79e DUP4
0x79f SWAP1
0x7a0 SUB
0x7a1 ADD
0x7a2 SWAP1
0x7a3 DUP3
0x7a4 SWAP1
0x7a5 DUP8
0x7a6 DUP1
0x7a7 EXTCODESIZE
0x7a8 ISZERO
0x7a9 PUSH2 0x2
0x7ac JUMPI
---
0x71c: JUMPDEST 
0x71d: V707 = 0x40
0x720: V708 = M[0x40]
0x723: M[V708] = V277
0x725: V709 = M[0x40]
0x726: V710 = 0x1ebbc515a759c3fe8e048867aac7fe458e3a37ac3dd44ffc73a6238cf3003981
0x74a: V711 = SUB V708 V709
0x74b: V712 = 0x20
0x74d: V713 = ADD 0x20 V711
0x74f: LOG V709 V713 0x1ebbc515a759c3fe8e048867aac7fe458e3a37ac3dd44ffc73a6238cf3003981
0x750: V714 = 0x40
0x753: V715 = M[0x40]
0x754: V716 = 0x1
0x756: V717 = S[0x1]
0x757: V718 = 0x0
0x75a: V719 = S[0x0]
0x75b: V720 = 0x20
0x75f: V721 = ADD 0x20 V715
0x762: M[V721] = 0x0
0x764: V722 = M[0x40]
0x765: V723 = 0xe0
0x767: V724 = 0x2
0x769: V725 = EXP 0x2 0xe0
0x76a: V726 = 0xa9059cbb
0x76f: V727 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x771: M[V722] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x772: V728 = 0x1
0x774: V729 = 0xa0
0x776: V730 = 0x2
0x778: V731 = EXP 0x2 0xa0
0x779: V732 = SUB 0x10000000000000000000000000000000000000000 0x1
0x77c: V733 = AND 0xffffffffffffffffffffffffffffffffffffffff V719
0x77d: V734 = 0x4
0x780: V735 = ADD V722 0x4
0x781: M[V735] = V733
0x782: V736 = 0x24
0x785: V737 = ADD V722 0x24
0x788: M[V737] = V277
0x78a: V738 = M[0x40]
0x78c: V739 = AND V717 0xffffffffffffffffffffffffffffffffffffffff
0x78e: V740 = 0xa9059cbb
0x794: V741 = 0x44
0x798: V742 = ADD V722 0x44
0x7a0: V743 = SUB V722 V738
0x7a1: V744 = ADD V743 0x44
0x7a7: V745 = EXTCODESIZE V739
0x7a8: V746 = ISZERO V745
0x7a9: V747 = 0x2
0x7ac: THROWI V746
---
Entry stack: [V10, 0x30a, V277, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V739, 0xa9059cbb, V742, 0x20, V738, V744, V738, 0x0, V739]
Exit stack: [V10, 0x30a, V277, 0x0, V739, 0xa9059cbb, V742, 0x20, V738, V744, V738, 0x0, V739]

================================

Block 0x7ad
[0x7ad:0x7b6]
---
Predecessors: [0x71c]
Successors: [0x7b7]
---
0x7ad PUSH1 0x32
0x7af GAS
0x7b0 SUB
0x7b1 CALL
0x7b2 ISZERO
0x7b3 PUSH2 0x2
0x7b6 JUMPI
---
0x7ad: V748 = 0x32
0x7af: V749 = GAS
0x7b0: V750 = SUB V749 0x32
0x7b1: V751 = CALL V750 V739 0x0 V738 V744 V738 0x20
0x7b2: V752 = ISZERO V751
0x7b3: V753 = 0x2
0x7b6: THROWI V752
---
Entry stack: [V10, 0x30a, V277, 0x0, V739, 0xa9059cbb, V742, 0x20, V738, V744, V738, 0x0, V739]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x30a, V277, 0x0, V739, 0xa9059cbb, V742]

================================

Block 0x7b7
[0x7b7:0x7c4]
---
Predecessors: [0x7ad]
Successors: [0x4c4]
---
0x7b7 POP
0x7b8 POP
0x7b9 PUSH1 0x40
0x7bb MLOAD
0x7bc MLOAD
0x7bd SWAP2
0x7be POP
0x7bf PUSH2 0x4c4
0x7c2 SWAP1
0x7c3 POP
0x7c4 JUMP
---
0x7b9: V754 = 0x40
0x7bb: V755 = M[0x40]
0x7bc: V756 = M[V755]
0x7bf: V757 = 0x4c4
0x7c4: JUMP 0x4c4
---
Entry stack: [V10, 0x30a, V277, 0x0, V739, 0xa9059cbb, V742]
Stack pops: 4
Stack additions: [V756]
Exit stack: [V10, 0x30a, V277, V756]

================================

Block 0x7c5
[0x7c5:0x816]
---
Predecessors: [0x2c0]
Successors: [0x306]
---
0x7c5 JUMPDEST
0x7c6 PUSH1 0x4
0x7c8 DUP1
0x7c9 SLOAD
0x7ca PUSH1 0xff
0x7cc NOT
0x7cd AND
0x7ce PUSH1 0xf8
0x7d0 PUSH1 0x2
0x7d2 EXP
0x7d3 DUP4
0x7d4 DUP2
0x7d5 MUL
0x7d6 DIV
0x7d7 OR
0x7d8 SWAP1
0x7d9 DUP2
0x7da SWAP1
0x7db SSTORE
0x7dc PUSH1 0x40
0x7de DUP1
0x7df MLOAD
0x7e0 PUSH1 0xff
0x7e2 SWAP1
0x7e3 SWAP3
0x7e4 AND
0x7e5 ISZERO
0x7e6 ISZERO
0x7e7 DUP3
0x7e8 MSTORE
0x7e9 MLOAD
0x7ea PUSH32 0xce78b7525a161aee9986871a8dcad7e2783f9a4d66383783243cf14ec7086f85
0x80b SWAP2
0x80c PUSH1 0x20
0x80e SWAP1
0x80f DUP3
0x810 SWAP1
0x811 SUB
0x812 ADD
0x813 SWAP1
0x814 LOG1
0x815 POP
0x816 JUMP
---
0x7c5: JUMPDEST 
0x7c6: V758 = 0x4
0x7c9: V759 = S[0x4]
0x7ca: V760 = 0xff
0x7cc: V761 = NOT 0xff
0x7cd: V762 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V759
0x7ce: V763 = 0xf8
0x7d0: V764 = 0x2
0x7d2: V765 = EXP 0x2 0xf8
0x7d5: V766 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V295
0x7d6: V767 = DIV V766 0x100000000000000000000000000000000000000000000000000000000000000
0x7d7: V768 = OR V767 V762
0x7db: S[0x4] = V768
0x7dc: V769 = 0x40
0x7df: V770 = M[0x40]
0x7e0: V771 = 0xff
0x7e4: V772 = AND V768 0xff
0x7e5: V773 = ISZERO V772
0x7e6: V774 = ISZERO V773
0x7e8: M[V770] = V774
0x7e9: V775 = M[0x40]
0x7ea: V776 = 0xce78b7525a161aee9986871a8dcad7e2783f9a4d66383783243cf14ec7086f85
0x80c: V777 = 0x20
0x811: V778 = SUB V770 V775
0x812: V779 = ADD V778 0x20
0x814: LOG V775 V779 0xce78b7525a161aee9986871a8dcad7e2783f9a4d66383783243cf14ec7086f85
0x816: JUMP 0x306
---
Entry stack: [V10, 0x306, V295]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x817
[0x817:0x884]
---
Predecessors: [0x2e6]
Successors: [0x306]
---
0x817 JUMPDEST
0x818 PUSH1 0x0
0x81a DUP1
0x81b SLOAD
0x81c PUSH1 0x40
0x81e MLOAD
0x81f PUSH1 0x1
0x821 PUSH1 0xa0
0x823 PUSH1 0x2
0x825 EXP
0x826 SUB
0x827 DUP1
0x828 DUP6
0x829 AND
0x82a SWAP4
0x82b SWAP3
0x82c AND
0x82d SWAP2
0x82e PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x84f SWAP2
0x850 LOG3
0x851 PUSH1 0x0
0x853 DUP1
0x854 SLOAD
0x855 PUSH13 0x1000000000000000000000000
0x863 DUP1
0x864 DUP5
0x865 MUL
0x866 DIV
0x867 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x87c NOT
0x87d SWAP1
0x87e SWAP2
0x87f AND
0x880 OR
0x881 SWAP1
0x882 SSTORE
0x883 POP
0x884 JUMP
---
0x817: JUMPDEST 
0x818: V780 = 0x0
0x81b: V781 = S[0x0]
0x81c: V782 = 0x40
0x81e: V783 = M[0x40]
0x81f: V784 = 0x1
0x821: V785 = 0xa0
0x823: V786 = 0x2
0x825: V787 = EXP 0x2 0xa0
0x826: V788 = SUB 0x10000000000000000000000000000000000000000 0x1
0x829: V789 = AND V313 0xffffffffffffffffffffffffffffffffffffffff
0x82c: V790 = AND V781 0xffffffffffffffffffffffffffffffffffffffff
0x82e: V791 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x850: LOG V783 0x0 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V790 V789
0x851: V792 = 0x0
0x854: V793 = S[0x0]
0x855: V794 = 0x1000000000000000000000000
0x865: V795 = MUL V313 0x1000000000000000000000000
0x866: V796 = DIV V795 0x1000000000000000000000000
0x867: V797 = 0xffffffffffffffffffffffffffffffffffffffff
0x87c: V798 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x87f: V799 = AND V793 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x880: V800 = OR V799 V796
0x882: S[0x0] = V800
0x884: JUMP 0x306
---
Entry stack: [V10, 0x306, V313]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Function 0:
Public function signature: 0x2170ebf7
Entry block: 0xa3
Exit block: 0x30a
Body: 0xa3, 0xa9, 0xc6, 0x30a, 0x456, 0x469, 0x4c4

Function 1:
Public function signature: 0x38d52e0f
Entry block: 0xca
Exit block: 0x31e
Body: 0xca, 0xd0, 0x31e

Function 2:
Public function signature: 0x4b750334
Entry block: 0xe1
Exit block: 0x33a
Body: 0xe1, 0xe7, 0x33a

Function 3:
Public function signature: 0x4ca50f59
Entry block: 0xef
Exit block: 0x30a
Body: 0xef, 0xf5, 0x30a

Function 4:
Public function signature: 0x52954e5a
Entry block: 0x100
Exit block: 0x30a
Body: 0x100, 0x106, 0x126, 0x30a, 0x4c9, 0x507, 0x511, 0x530, 0x56e, 0x578, 0x592, 0x598, 0x59c, 0x64c, 0x656, 0x65f

Function 5:
Public function signature: 0x8da5cb5b
Entry block: 0x12a
Exit block: 0x31e
Body: 0x12a, 0x130, 0x31e

Function 6:
Public function signature: 0x976a8435
Entry block: 0x141
Exit block: 0x33a
Body: 0x141, 0x147, 0x33a

Function 7:
Public function signature: 0xc34764cf
Entry block: 0x14f
Exit block: 0x30a
Body: 0x14f, 0x155, 0x175, 0x30a, 0x65f, 0x665, 0x704, 0x70e

Function 8:
Public function signature: 0xc60ccb0e
Entry block: 0x179
Exit block: 0x3fd
Body: 0x179, 0x17d, 0x190, 0x1a3, 0x1a9, 0x1b3, 0x21f, 0x229, 0x237, 0x24d, 0x25a, 0x264, 0x28f, 0x306, 0x308, 0x34c, 0x377, 0x37b, 0x385, 0x3e5, 0x3ef, 0x3fd, 0x401, 0x451

Function 9:
Public function signature: 0xcd53a3b7
Entry block: 0x293
Exit block: 0x30a
Body: 0x293, 0x299, 0x2b6, 0x30a, 0x4c4, 0x71c, 0x7ad, 0x7b7

Function 10:
Public function signature: 0xce5e84a3
Entry block: 0x2ba
Exit block: 0x306
Body: 0x2ba, 0x2c0, 0x2dc, 0x306, 0x7c5

Function 11:
Public function signature: 0xf2fde38b
Entry block: 0x2e0
Exit block: 0x306
Body: 0x2e0, 0x2e6, 0x302, 0x306, 0x817

Function 12:
Public fallback function
Entry block: 0x98
Exit block: 0x3fd
Body: 0x98, 0x17d, 0x190, 0x1a3, 0x1a9, 0x1b3, 0x21f, 0x229, 0x237, 0x24d, 0x25a, 0x264, 0x28f, 0x306, 0x308, 0x34c, 0x377, 0x37b, 0x385, 0x3e5, 0x3ef, 0x3fd, 0x401, 0x451

