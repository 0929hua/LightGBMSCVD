Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x48]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x48
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x48
0xa: JUMPI 0x48 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x38]
---
Predecessors: [0x0]
Successors: [0x39, 0xb1]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e DUP1
0x2f PUSH4 0x6b9f96ea
0x34 EQ
0x35 PUSH2 0xb1
0x38 JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = 0x6b9f96ea
0x34: V10 = EQ 0x6b9f96ea V8
0x35: V11 = 0xb1
0x38: JUMPI 0xb1 V10
---
Entry stack: []
Stack pops: 0
Stack additions: [V8]
Exit stack: [V8]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0xb]
Successors: [0x44, 0xc5]
---
0x39 DUP1
0x3a PUSH4 0xca325469
0x3f EQ
0x40 PUSH2 0xc5
0x43 JUMPI
---
0x3a: V12 = 0xca325469
0x3f: V13 = EQ 0xca325469 V8
0x40: V14 = 0xc5
0x43: JUMPI 0xc5 V13
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x44
[0x44:0x47]
---
Predecessors: [0x39]
Successors: [0x48]
---
0x44 PUSH2 0x48
0x47 JUMP
---
0x44: V15 = 0x48
0x47: JUMP 0x48
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x48
[0x48:0x4d]
---
Predecessors: [0x0, 0x44]
Successors: [0x4e]
---
0x48 JUMPDEST
0x49 CALLVALUE
0x4a PUSH2 0x2
0x4d JUMPI
---
0x48: JUMPDEST 
0x49: V16 = CALLVALUE
0x4a: V17 = 0x2
0x4d: THROWI V16
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x4e
[0x4e:0x50]
---
Predecessors: [0x48]
Successors: [0x51]
---
0x4e PUSH2 0xaf
---
0x4e: V18 = 0xaf
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xaf]
Exit stack: [V8, 0xaf]

================================

Block 0x51
[0x51:0xac]
---
Predecessors: [0x4e]
Successors: [0xad]
---
0x51 JUMPDEST
0x52 PUSH1 0x0
0x54 PUSH1 0x0
0x56 SWAP1
0x57 SLOAD
0x58 SWAP1
0x59 PUSH2 0x100
0x5c EXP
0x5d SWAP1
0x5e DIV
0x5f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x74 AND
0x75 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8a AND
0x8b PUSH2 0x8fc
0x8e CALLVALUE
0x8f SWAP1
0x90 DUP2
0x91 ISZERO
0x92 MUL
0x93 SWAP1
0x94 PUSH1 0x40
0x96 MLOAD
0x97 DUP1
0x98 SWAP1
0x99 POP
0x9a PUSH1 0x0
0x9c PUSH1 0x40
0x9e MLOAD
0x9f DUP1
0xa0 DUP4
0xa1 SUB
0xa2 DUP2
0xa3 DUP6
0xa4 DUP9
0xa5 DUP9
0xa6 CALL
0xa7 SWAP4
0xa8 POP
0xa9 POP
0xaa POP
0xab POP
0xac POP
---
0x51: JUMPDEST 
0x52: V19 = 0x0
0x54: V20 = 0x0
0x57: V21 = S[0x0]
0x59: V22 = 0x100
0x5c: V23 = EXP 0x100 0x0
0x5e: V24 = DIV V21 0x1
0x5f: V25 = 0xffffffffffffffffffffffffffffffffffffffff
0x74: V26 = AND 0xffffffffffffffffffffffffffffffffffffffff V24
0x75: V27 = 0xffffffffffffffffffffffffffffffffffffffff
0x8a: V28 = AND 0xffffffffffffffffffffffffffffffffffffffff V26
0x8b: V29 = 0x8fc
0x8e: V30 = CALLVALUE
0x91: V31 = ISZERO V30
0x92: V32 = MUL V31 0x8fc
0x94: V33 = 0x40
0x96: V34 = M[0x40]
0x9a: V35 = 0x0
0x9c: V36 = 0x40
0x9e: V37 = M[0x40]
0xa1: V38 = SUB V34 V37
0xa6: V39 = CALL V32 V28 V30 V37 V38 V37 0x0
---
Entry stack: [V8, 0xaf]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xaf]

================================

Block 0xad
[0xad:0xae]
---
Predecessors: [0x51]
Successors: [0xaf]
---
0xad JUMPDEST
0xae JUMP
---
0xad: JUMPDEST 
0xae: JUMP 0xaf
---
Entry stack: [V8, 0xaf]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0xaf
[0xaf:0xb0]
---
Predecessors: [0xad]
Successors: []
---
0xaf JUMPDEST
0xb0 STOP
---
0xaf: JUMPDEST 
0xb0: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0xb1
[0xb1:0xb6]
---
Predecessors: [0xb]
Successors: [0xb7]
---
0xb1 JUMPDEST
0xb2 CALLVALUE
0xb3 PUSH2 0x2
0xb6 JUMPI
---
0xb1: JUMPDEST 
0xb2: V40 = CALLVALUE
0xb3: V41 = 0x2
0xb6: THROWI V40
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0xb7
[0xb7:0xc2]
---
Predecessors: [0xb1]
Successors: [0x103]
---
0xb7 PUSH2 0xc3
0xba PUSH1 0x4
0xbc DUP1
0xbd POP
0xbe POP
0xbf PUSH2 0x103
0xc2 JUMP
---
0xb7: V42 = 0xc3
0xba: V43 = 0x4
0xbf: V44 = 0x103
0xc2: JUMP 0x103
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xc3]
Exit stack: [V8, 0xc3]

================================

Block 0xc3
[0xc3:0xc4]
---
Predecessors: [0x176]
Successors: []
---
0xc3 JUMPDEST
0xc4 STOP
---
0xc3: JUMPDEST 
0xc4: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0xc5
[0xc5:0xca]
---
Predecessors: [0x39]
Successors: [0xcb]
---
0xc5 JUMPDEST
0xc6 CALLVALUE
0xc7 PUSH2 0x2
0xca JUMPI
---
0xc5: JUMPDEST 
0xc6: V45 = CALLVALUE
0xc7: V46 = 0x2
0xca: THROWI V45
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0xcb
[0xcb:0xd6]
---
Predecessors: [0xc5]
Successors: [0x178]
---
0xcb PUSH2 0xd7
0xce PUSH1 0x4
0xd0 DUP1
0xd1 POP
0xd2 POP
0xd3 PUSH2 0x178
0xd6 JUMP
---
0xcb: V47 = 0xd7
0xce: V48 = 0x4
0xd3: V49 = 0x178
0xd6: JUMP 0x178
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xd7]
Exit stack: [V8, 0xd7]

================================

Block 0xd7
[0xd7:0x102]
---
Predecessors: [0x178]
Successors: []
---
0xd7 JUMPDEST
0xd8 PUSH1 0x40
0xda MLOAD
0xdb DUP1
0xdc DUP3
0xdd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf2 AND
0xf3 DUP2
0xf4 MSTORE
0xf5 PUSH1 0x20
0xf7 ADD
0xf8 SWAP2
0xf9 POP
0xfa POP
0xfb PUSH1 0x40
0xfd MLOAD
0xfe DUP1
0xff SWAP2
0x100 SUB
0x101 SWAP1
0x102 RETURN
---
0xd7: JUMPDEST 
0xd8: V50 = 0x40
0xda: V51 = M[0x40]
0xdd: V52 = 0xffffffffffffffffffffffffffffffffffffffff
0xf2: V53 = AND 0xffffffffffffffffffffffffffffffffffffffff V90
0xf4: M[V51] = V53
0xf5: V54 = 0x20
0xf7: V55 = ADD 0x20 V51
0xfb: V56 = 0x40
0xfd: V57 = M[0x40]
0x100: V58 = SUB V55 V57
0x102: RETURN V57 V58
---
Entry stack: [V8, 0xd7, V90]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0xd7]

================================

Block 0x103
[0x103:0x175]
---
Predecessors: [0xb7]
Successors: [0x176]
---
0x103 JUMPDEST
0x104 PUSH1 0x0
0x106 PUSH1 0x0
0x108 SWAP1
0x109 SLOAD
0x10a SWAP1
0x10b PUSH2 0x100
0x10e EXP
0x10f SWAP1
0x110 DIV
0x111 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x126 AND
0x127 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13c AND
0x13d PUSH2 0x8fc
0x140 ADDRESS
0x141 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x156 AND
0x157 BALANCE
0x158 SWAP1
0x159 DUP2
0x15a ISZERO
0x15b MUL
0x15c SWAP1
0x15d PUSH1 0x40
0x15f MLOAD
0x160 DUP1
0x161 SWAP1
0x162 POP
0x163 PUSH1 0x0
0x165 PUSH1 0x40
0x167 MLOAD
0x168 DUP1
0x169 DUP4
0x16a SUB
0x16b DUP2
0x16c DUP6
0x16d DUP9
0x16e DUP9
0x16f CALL
0x170 SWAP4
0x171 POP
0x172 POP
0x173 POP
0x174 POP
0x175 POP
---
0x103: JUMPDEST 
0x104: V59 = 0x0
0x106: V60 = 0x0
0x109: V61 = S[0x0]
0x10b: V62 = 0x100
0x10e: V63 = EXP 0x100 0x0
0x110: V64 = DIV V61 0x1
0x111: V65 = 0xffffffffffffffffffffffffffffffffffffffff
0x126: V66 = AND 0xffffffffffffffffffffffffffffffffffffffff V64
0x127: V67 = 0xffffffffffffffffffffffffffffffffffffffff
0x13c: V68 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0x13d: V69 = 0x8fc
0x140: V70 = ADDRESS
0x141: V71 = 0xffffffffffffffffffffffffffffffffffffffff
0x156: V72 = AND 0xffffffffffffffffffffffffffffffffffffffff V70
0x157: V73 = BALANCE V72
0x15a: V74 = ISZERO V73
0x15b: V75 = MUL V74 0x8fc
0x15d: V76 = 0x40
0x15f: V77 = M[0x40]
0x163: V78 = 0x0
0x165: V79 = 0x40
0x167: V80 = M[0x40]
0x16a: V81 = SUB V77 V80
0x16f: V82 = CALL V75 V68 V73 V80 V81 V80 0x0
---
Entry stack: [V8, 0xc3]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xc3]

================================

Block 0x176
[0x176:0x177]
---
Predecessors: [0x103]
Successors: [0xc3]
---
0x176 JUMPDEST
0x177 JUMP
---
0x176: JUMPDEST 
0x177: JUMP 0xc3
---
Entry stack: [V8, 0xc3]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0x178
[0x178:0x19d]
---
Predecessors: [0xcb]
Successors: [0xd7]
---
0x178 JUMPDEST
0x179 PUSH1 0x0
0x17b PUSH1 0x0
0x17d SWAP1
0x17e SLOAD
0x17f SWAP1
0x180 PUSH2 0x100
0x183 EXP
0x184 SWAP1
0x185 DIV
0x186 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19b AND
0x19c DUP2
0x19d JUMP
---
0x178: JUMPDEST 
0x179: V83 = 0x0
0x17b: V84 = 0x0
0x17e: V85 = S[0x0]
0x180: V86 = 0x100
0x183: V87 = EXP 0x100 0x0
0x185: V88 = DIV V85 0x1
0x186: V89 = 0xffffffffffffffffffffffffffffffffffffffff
0x19b: V90 = AND 0xffffffffffffffffffffffffffffffffffffffff V88
0x19d: JUMP 0xd7
---
Entry stack: [V8, 0xd7]
Stack pops: 1
Stack additions: [S0, V90]
Exit stack: [V8, 0xd7, V90]

================================

Function 0:
Public function signature: 0x6b9f96ea
Entry block: 0xb1
Exit block: 0xc3
Body: 0xb1, 0xb7, 0xc3, 0x103, 0x176

Function 1:
Public function signature: 0xca325469
Entry block: 0xc5
Exit block: 0xd7
Body: 0xc5, 0xcb, 0xd7, 0x178

Function 2:
Public fallback function
Entry block: 0x44
Exit block: 0xaf
Body: 0x44, 0x48, 0x4e, 0x51, 0xad, 0xaf

