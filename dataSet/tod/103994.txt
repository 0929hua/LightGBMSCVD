Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x61]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x61
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x61
0xc: JUMPI 0x61 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x66]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x144fa6d7
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x66
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x144fa6d7
0x3b: V13 = EQ V11 0x144fa6d7
0x3c: V14 = 0x66
0x3f: JUMPI 0x66 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x87]
---
0x40 DUP1
0x41 PUSH4 0x76a54c60
0x46 EQ
0x47 PUSH2 0x87
0x4a JUMPI
---
0x41: V15 = 0x76a54c60
0x46: V16 = EQ 0x76a54c60 V11
0x47: V17 = 0x87
0x4a: JUMPI 0x87 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xad]
---
0x4b DUP1
0x4c PUSH4 0xc4c9ce57
0x51 EQ
0x52 PUSH2 0xad
0x55 JUMPI
---
0x4c: V18 = 0xc4c9ce57
0x51: V19 = EQ 0xc4c9ce57 V11
0x52: V20 = 0xad
0x55: JUMPI 0xad V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xe3]
---
0x56 DUP1
0x57 PUSH4 0xf108bd4f
0x5c EQ
0x5d PUSH2 0xe3
0x60 JUMPI
---
0x57: V21 = 0xf108bd4f
0x5c: V22 = EQ 0xf108bd4f V11
0x5d: V23 = 0xe3
0x60: JUMPI 0xe3 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x65]
---
Predecessors: [0x0, 0x56]
Successors: []
---
0x61 JUMPDEST
0x62 PUSH1 0x0
0x64 DUP1
0x65 REVERT
---
0x61: JUMPDEST 
0x62: V24 = 0x0
0x65: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x66
[0x66:0x6c]
---
Predecessors: [0xd]
Successors: [0x6d, 0x71]
---
0x66 JUMPDEST
0x67 CALLVALUE
0x68 ISZERO
0x69 PUSH2 0x71
0x6c JUMPI
---
0x66: JUMPDEST 
0x67: V25 = CALLVALUE
0x68: V26 = ISZERO V25
0x69: V27 = 0x71
0x6c: JUMPI 0x71 V26
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x70]
---
Predecessors: [0x66]
Successors: []
---
0x6d PUSH1 0x0
0x6f DUP1
0x70 REVERT
---
0x6d: V28 = 0x0
0x70: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x71
[0x71:0x84]
---
Predecessors: [0x66]
Successors: [0xeb]
---
0x71 JUMPDEST
0x72 PUSH2 0x85
0x75 PUSH1 0x1
0x77 PUSH1 0xa0
0x79 PUSH1 0x2
0x7b EXP
0x7c SUB
0x7d PUSH1 0x4
0x7f CALLDATALOAD
0x80 AND
0x81 PUSH2 0xeb
0x84 JUMP
---
0x71: JUMPDEST 
0x72: V29 = 0x85
0x75: V30 = 0x1
0x77: V31 = 0xa0
0x79: V32 = 0x2
0x7b: V33 = EXP 0x2 0xa0
0x7c: V34 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7d: V35 = 0x4
0x7f: V36 = CALLDATALOAD 0x4
0x80: V37 = AND V36 0xffffffffffffffffffffffffffffffffffffffff
0x81: V38 = 0xeb
0x84: JUMP 0xeb
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x85, V37]
Exit stack: [V11, 0x85, V37]

================================

Block 0x85
[0x85:0x86]
---
Predecessors: [0xeb]
Successors: []
---
0x85 JUMPDEST
0x86 STOP
---
0x85: JUMPDEST 
0x86: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x87
[0x87:0x9a]
---
Predecessors: [0x40]
Successors: [0x11a]
---
0x87 JUMPDEST
0x88 PUSH2 0x9b
0x8b PUSH1 0x1
0x8d PUSH1 0xa0
0x8f PUSH1 0x2
0x91 EXP
0x92 SUB
0x93 PUSH1 0x4
0x95 CALLDATALOAD
0x96 AND
0x97 PUSH2 0x11a
0x9a JUMP
---
0x87: JUMPDEST 
0x88: V39 = 0x9b
0x8b: V40 = 0x1
0x8d: V41 = 0xa0
0x8f: V42 = 0x2
0x91: V43 = EXP 0x2 0xa0
0x92: V44 = SUB 0x10000000000000000000000000000000000000000 0x1
0x93: V45 = 0x4
0x95: V46 = CALLDATALOAD 0x4
0x96: V47 = AND V46 0xffffffffffffffffffffffffffffffffffffffff
0x97: V48 = 0x11a
0x9a: JUMP 0x11a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x9b, V47]
Exit stack: [V11, 0x9b, V47]

================================

Block 0x9b
[0x9b:0xac]
---
Predecessors: [0x14f, 0x205]
Successors: []
---
0x9b JUMPDEST
0x9c PUSH1 0x40
0x9e MLOAD
0x9f SWAP1
0xa0 DUP2
0xa1 MSTORE
0xa2 PUSH1 0x20
0xa4 ADD
0xa5 PUSH1 0x40
0xa7 MLOAD
0xa8 DUP1
0xa9 SWAP2
0xaa SUB
0xab SWAP1
0xac RETURN
---
0x9b: JUMPDEST 
0x9c: V49 = 0x40
0x9e: V50 = M[0x40]
0xa1: M[V50] = S0
0xa2: V51 = 0x20
0xa4: V52 = ADD 0x20 V50
0xa5: V53 = 0x40
0xa7: V54 = M[0x40]
0xaa: V55 = SUB V52 V54
0xac: RETURN V54 V55
---
Entry stack: [V11, 0xcf, V68, V70, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xcf, V68, V70, S1]

================================

Block 0xad
[0xad:0xb3]
---
Predecessors: [0x4b]
Successors: [0xb4, 0xb8]
---
0xad JUMPDEST
0xae CALLVALUE
0xaf ISZERO
0xb0 PUSH2 0xb8
0xb3 JUMPI
---
0xad: JUMPDEST 
0xae: V56 = CALLVALUE
0xaf: V57 = ISZERO V56
0xb0: V58 = 0xb8
0xb3: JUMPI 0xb8 V57
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb4
[0xb4:0xb7]
---
Predecessors: [0xad]
Successors: []
---
0xb4 PUSH1 0x0
0xb6 DUP1
0xb7 REVERT
---
0xb4: V59 = 0x0
0xb7: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb8
[0xb8:0xce]
---
Predecessors: [0xad]
Successors: [0x15e]
---
0xb8 JUMPDEST
0xb9 PUSH2 0xcf
0xbc PUSH1 0x1
0xbe PUSH1 0xa0
0xc0 PUSH1 0x2
0xc2 EXP
0xc3 SUB
0xc4 PUSH1 0x4
0xc6 CALLDATALOAD
0xc7 AND
0xc8 PUSH1 0x24
0xca CALLDATALOAD
0xcb PUSH2 0x15e
0xce JUMP
---
0xb8: JUMPDEST 
0xb9: V60 = 0xcf
0xbc: V61 = 0x1
0xbe: V62 = 0xa0
0xc0: V63 = 0x2
0xc2: V64 = EXP 0x2 0xa0
0xc3: V65 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc4: V66 = 0x4
0xc6: V67 = CALLDATALOAD 0x4
0xc7: V68 = AND V67 0xffffffffffffffffffffffffffffffffffffffff
0xc8: V69 = 0x24
0xca: V70 = CALLDATALOAD 0x24
0xcb: V71 = 0x15e
0xce: JUMP 0x15e
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xcf, V68, V70]
Exit stack: [V11, 0xcf, V68, V70]

================================

Block 0xcf
[0xcf:0xe2]
---
Predecessors: [0x1fb]
Successors: []
---
0xcf JUMPDEST
0xd0 PUSH1 0x40
0xd2 MLOAD
0xd3 SWAP1
0xd4 ISZERO
0xd5 ISZERO
0xd6 DUP2
0xd7 MSTORE
0xd8 PUSH1 0x20
0xda ADD
0xdb PUSH1 0x40
0xdd MLOAD
0xde DUP1
0xdf SWAP2
0xe0 SUB
0xe1 SWAP1
0xe2 RETURN
---
0xcf: JUMPDEST 
0xd0: V72 = 0x40
0xd2: V73 = M[0x40]
0xd4: V74 = ISZERO 0x1
0xd5: V75 = ISZERO 0x0
0xd7: M[V73] = 0x1
0xd8: V76 = 0x20
0xda: V77 = ADD 0x20 V73
0xdb: V78 = 0x40
0xdd: V79 = M[0x40]
0xe0: V80 = SUB V77 V79
0xe2: RETURN V79 V80
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xe3
[0xe3:0xea]
---
Predecessors: [0x56]
Successors: [0x205]
---
0xe3 JUMPDEST
0xe4 PUSH2 0x9b
0xe7 PUSH2 0x205
0xea JUMP
---
0xe3: JUMPDEST 
0xe4: V81 = 0x9b
0xe7: V82 = 0x205
0xea: JUMP 0x205
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x9b]
Exit stack: [V11, 0x9b]

================================

Block 0xeb
[0xeb:0x119]
---
Predecessors: [0x71]
Successors: [0x85]
---
0xeb JUMPDEST
0xec PUSH1 0x0
0xee DUP1
0xef SLOAD
0xf0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x105 NOT
0x106 AND
0x107 PUSH1 0x1
0x109 PUSH1 0xa0
0x10b PUSH1 0x2
0x10d EXP
0x10e SUB
0x10f SWAP3
0x110 SWAP1
0x111 SWAP3
0x112 AND
0x113 SWAP2
0x114 SWAP1
0x115 SWAP2
0x116 OR
0x117 SWAP1
0x118 SSTORE
0x119 JUMP
---
0xeb: JUMPDEST 
0xec: V83 = 0x0
0xef: V84 = S[0x0]
0xf0: V85 = 0xffffffffffffffffffffffffffffffffffffffff
0x105: V86 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x106: V87 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V84
0x107: V88 = 0x1
0x109: V89 = 0xa0
0x10b: V90 = 0x2
0x10d: V91 = EXP 0x2 0xa0
0x10e: V92 = SUB 0x10000000000000000000000000000000000000000 0x1
0x112: V93 = AND 0xffffffffffffffffffffffffffffffffffffffff V37
0x116: V94 = OR V93 V87
0x118: S[0x0] = V94
0x119: JUMP 0x85
---
Entry stack: [V11, 0x85, V37]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x11a
[0x11a:0x14a]
---
Predecessors: [0x87, 0x1e7]
Successors: [0x14b, 0x14f]
---
0x11a JUMPDEST
0x11b PUSH1 0x0
0x11d DUP1
0x11e PUSH1 0x1
0x120 PUSH1 0xa0
0x122 PUSH1 0x2
0x124 EXP
0x125 SUB
0x126 DUP4
0x127 AND
0x128 CALLVALUE
0x129 DUP1
0x12a ISZERO
0x12b PUSH2 0x8fc
0x12e MUL
0x12f SWAP1
0x130 PUSH1 0x40
0x132 MLOAD
0x133 PUSH1 0x0
0x135 PUSH1 0x40
0x137 MLOAD
0x138 DUP1
0x139 DUP4
0x13a SUB
0x13b DUP2
0x13c DUP6
0x13d DUP9
0x13e DUP9
0x13f CALL
0x140 SWAP4
0x141 POP
0x142 POP
0x143 POP
0x144 POP
0x145 ISZERO
0x146 ISZERO
0x147 PUSH2 0x14f
0x14a JUMPI
---
0x11a: JUMPDEST 
0x11b: V95 = 0x0
0x11e: V96 = 0x1
0x120: V97 = 0xa0
0x122: V98 = 0x2
0x124: V99 = EXP 0x2 0xa0
0x125: V100 = SUB 0x10000000000000000000000000000000000000000 0x1
0x127: V101 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x128: V102 = CALLVALUE
0x12a: V103 = ISZERO V102
0x12b: V104 = 0x8fc
0x12e: V105 = MUL 0x8fc V103
0x130: V106 = 0x40
0x132: V107 = M[0x40]
0x133: V108 = 0x0
0x135: V109 = 0x40
0x137: V110 = M[0x40]
0x13a: V111 = SUB V107 V110
0x13f: V112 = CALL V105 V101 V102 V110 V111 V110 0x0
0x145: V113 = ISZERO V112
0x146: V114 = ISZERO V113
0x147: V115 = 0x14f
0x14a: JUMPI 0x14f V114
---
Entry stack: [V11, 0xcf, V68, V70, S2, {0x9b, 0x1fb}, S0]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0]
Exit stack: [V11, 0xcf, V68, V70, S2, {0x9b, 0x1fb}, S0, 0x0, 0x0]

================================

Block 0x14b
[0x14b:0x14e]
---
Predecessors: [0x11a]
Successors: []
---
0x14b PUSH1 0x0
0x14d DUP1
0x14e REVERT
---
0x14b: V116 = 0x0
0x14e: REVERT 0x0 0x0
---
Entry stack: [V11, 0xcf, V68, V70, S4, {0x9b, 0x1fb}, S2, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, V68, V70, S4, {0x9b, 0x1fb}, S2, 0x0, 0x0]

================================

Block 0x14f
[0x14f:0x15d]
---
Predecessors: [0x11a]
Successors: [0x9b, 0x1fb]
---
0x14f JUMPDEST
0x150 POP
0x151 POP
0x152 PUSH1 0x1
0x154 PUSH1 0xa0
0x156 PUSH1 0x2
0x158 EXP
0x159 SUB
0x15a AND
0x15b BALANCE
0x15c SWAP1
0x15d JUMP
---
0x14f: JUMPDEST 
0x152: V117 = 0x1
0x154: V118 = 0xa0
0x156: V119 = 0x2
0x158: V120 = EXP 0x2 0xa0
0x159: V121 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15a: V122 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x15b: V123 = BALANCE V122
0x15d: JUMP {0x9b, 0x1fb}
---
Entry stack: [V11, 0xcf, V68, V70, S4, {0x9b, 0x1fb}, S2, 0x0, 0x0]
Stack pops: 4
Stack additions: [V123]
Exit stack: [V11, 0xcf, V68, V70, S4, V123]

================================

Block 0x15e
[0x15e:0x1d1]
---
Predecessors: [0xb8]
Successors: [0x1d2, 0x1d6]
---
0x15e JUMPDEST
0x15f PUSH1 0x0
0x161 DUP1
0x162 SLOAD
0x163 PUSH1 0x1
0x165 PUSH1 0xa0
0x167 PUSH1 0x2
0x169 EXP
0x16a SUB
0x16b AND
0x16c PUSH4 0x412664ae
0x171 DUP5
0x172 DUP5
0x173 DUP5
0x174 PUSH1 0x40
0x176 MLOAD
0x177 PUSH1 0x20
0x179 ADD
0x17a MSTORE
0x17b PUSH1 0x40
0x17d MLOAD
0x17e PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x19c PUSH4 0xffffffff
0x1a1 DUP6
0x1a2 AND
0x1a3 MUL
0x1a4 DUP2
0x1a5 MSTORE
0x1a6 PUSH1 0x1
0x1a8 PUSH1 0xa0
0x1aa PUSH1 0x2
0x1ac EXP
0x1ad SUB
0x1ae SWAP1
0x1af SWAP3
0x1b0 AND
0x1b1 PUSH1 0x4
0x1b3 DUP4
0x1b4 ADD
0x1b5 MSTORE
0x1b6 PUSH1 0x24
0x1b8 DUP3
0x1b9 ADD
0x1ba MSTORE
0x1bb PUSH1 0x44
0x1bd ADD
0x1be PUSH1 0x20
0x1c0 PUSH1 0x40
0x1c2 MLOAD
0x1c3 DUP1
0x1c4 DUP4
0x1c5 SUB
0x1c6 DUP2
0x1c7 PUSH1 0x0
0x1c9 DUP8
0x1ca DUP1
0x1cb EXTCODESIZE
0x1cc ISZERO
0x1cd ISZERO
0x1ce PUSH2 0x1d6
0x1d1 JUMPI
---
0x15e: JUMPDEST 
0x15f: V124 = 0x0
0x162: V125 = S[0x0]
0x163: V126 = 0x1
0x165: V127 = 0xa0
0x167: V128 = 0x2
0x169: V129 = EXP 0x2 0xa0
0x16a: V130 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16b: V131 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x16c: V132 = 0x412664ae
0x174: V133 = 0x40
0x176: V134 = M[0x40]
0x177: V135 = 0x20
0x179: V136 = ADD 0x20 V134
0x17a: M[V136] = 0x0
0x17b: V137 = 0x40
0x17d: V138 = M[0x40]
0x17e: V139 = 0x100000000000000000000000000000000000000000000000000000000
0x19c: V140 = 0xffffffff
0x1a2: V141 = AND 0x412664ae 0xffffffff
0x1a3: V142 = MUL 0x412664ae 0x100000000000000000000000000000000000000000000000000000000
0x1a5: M[V138] = 0x412664ae00000000000000000000000000000000000000000000000000000000
0x1a6: V143 = 0x1
0x1a8: V144 = 0xa0
0x1aa: V145 = 0x2
0x1ac: V146 = EXP 0x2 0xa0
0x1ad: V147 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b0: V148 = AND V68 0xffffffffffffffffffffffffffffffffffffffff
0x1b1: V149 = 0x4
0x1b4: V150 = ADD V138 0x4
0x1b5: M[V150] = V148
0x1b6: V151 = 0x24
0x1b9: V152 = ADD V138 0x24
0x1ba: M[V152] = V70
0x1bb: V153 = 0x44
0x1bd: V154 = ADD 0x44 V138
0x1be: V155 = 0x20
0x1c0: V156 = 0x40
0x1c2: V157 = M[0x40]
0x1c5: V158 = SUB V154 V157
0x1c7: V159 = 0x0
0x1cb: V160 = EXTCODESIZE V131
0x1cc: V161 = ISZERO V160
0x1cd: V162 = ISZERO V161
0x1ce: V163 = 0x1d6
0x1d1: JUMPI 0x1d6 V162
---
Entry stack: [V11, 0xcf, V68, V70]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V131, 0x412664ae, V154, 0x20, V157, V158, V157, 0x0, V131]
Exit stack: [V11, 0xcf, V68, V70, 0x0, V131, 0x412664ae, V154, 0x20, V157, V158, V157, 0x0, V131]

================================

Block 0x1d2
[0x1d2:0x1d5]
---
Predecessors: [0x15e]
Successors: []
---
0x1d2 PUSH1 0x0
0x1d4 DUP1
0x1d5 REVERT
---
0x1d2: V164 = 0x0
0x1d5: REVERT 0x0 0x0
---
Entry stack: [V11, 0xcf, V68, V70, 0x0, V131, 0x412664ae, V154, 0x20, V157, V158, V157, 0x0, V131]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, V68, V70, 0x0, V131, 0x412664ae, V154, 0x20, V157, V158, V157, 0x0, V131]

================================

Block 0x1d6
[0x1d6:0x1e2]
---
Predecessors: [0x15e]
Successors: [0x1e3, 0x1e7]
---
0x1d6 JUMPDEST
0x1d7 PUSH2 0x2c6
0x1da GAS
0x1db SUB
0x1dc CALL
0x1dd ISZERO
0x1de ISZERO
0x1df PUSH2 0x1e7
0x1e2 JUMPI
---
0x1d6: JUMPDEST 
0x1d7: V165 = 0x2c6
0x1da: V166 = GAS
0x1db: V167 = SUB V166 0x2c6
0x1dc: V168 = CALL V167 V131 0x0 V157 V158 V157 0x20
0x1dd: V169 = ISZERO V168
0x1de: V170 = ISZERO V169
0x1df: V171 = 0x1e7
0x1e2: JUMPI 0x1e7 V170
---
Entry stack: [V11, 0xcf, V68, V70, 0x0, V131, 0x412664ae, V154, 0x20, V157, V158, V157, 0x0, V131]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0xcf, V68, V70, 0x0, V131, 0x412664ae, V154]

================================

Block 0x1e3
[0x1e3:0x1e6]
---
Predecessors: [0x1d6]
Successors: []
---
0x1e3 PUSH1 0x0
0x1e5 DUP1
0x1e6 REVERT
---
0x1e3: V172 = 0x0
0x1e6: REVERT 0x0 0x0
---
Entry stack: [V11, 0xcf, V68, V70, 0x0, V131, 0x412664ae, V154]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xcf, V68, V70, 0x0, V131, 0x412664ae, V154]

================================

Block 0x1e7
[0x1e7:0x1fa]
---
Predecessors: [0x1d6]
Successors: [0x11a]
---
0x1e7 JUMPDEST
0x1e8 POP
0x1e9 POP
0x1ea POP
0x1eb PUSH1 0x40
0x1ed MLOAD
0x1ee DUP1
0x1ef MLOAD
0x1f0 SWAP1
0x1f1 POP
0x1f2 POP
0x1f3 PUSH2 0x1fb
0x1f6 DUP4
0x1f7 PUSH2 0x11a
0x1fa JUMP
---
0x1e7: JUMPDEST 
0x1eb: V173 = 0x40
0x1ed: V174 = M[0x40]
0x1ef: V175 = M[V174]
0x1f3: V176 = 0x1fb
0x1f7: V177 = 0x11a
0x1fa: JUMP 0x11a
---
Entry stack: [V11, 0xcf, V68, V70, 0x0, V131, 0x412664ae, V154]
Stack pops: 6
Stack additions: [S5, S4, S3, 0x1fb, S5]
Exit stack: [V11, 0xcf, V68, V70, 0x0, 0x1fb, V68]

================================

Block 0x1fb
[0x1fb:0x204]
---
Predecessors: [0x14f]
Successors: [0xcf]
---
0x1fb JUMPDEST
0x1fc POP
0x1fd PUSH1 0x1
0x1ff SWAP4
0x200 SWAP3
0x201 POP
0x202 POP
0x203 POP
0x204 JUMP
---
0x1fb: JUMPDEST 
0x1fd: V178 = 0x1
0x204: JUMP 0xcf
---
Entry stack: [V11, 0xcf, V68, V70, S1, V123]
Stack pops: 5
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x205
[0x205:0x212]
---
Predecessors: [0xe3]
Successors: [0x9b]
---
0x205 JUMPDEST
0x206 PUSH1 0x1
0x208 PUSH1 0xa0
0x20a PUSH1 0x2
0x20c EXP
0x20d SUB
0x20e ADDRESS
0x20f AND
0x210 BALANCE
0x211 SWAP1
0x212 JUMP
---
0x205: JUMPDEST 
0x206: V179 = 0x1
0x208: V180 = 0xa0
0x20a: V181 = 0x2
0x20c: V182 = EXP 0x2 0xa0
0x20d: V183 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20e: V184 = ADDRESS
0x20f: V185 = AND V184 0xffffffffffffffffffffffffffffffffffffffff
0x210: V186 = BALANCE V185
0x212: JUMP 0x9b
---
Entry stack: [V11, 0x9b]
Stack pops: 1
Stack additions: [V186]
Exit stack: [V11, V186]

================================

Block 0x213
[0x213:0x247]
---
Predecessors: []
Successors: []
---
0x213 STOP
0x214 LOG1
0x215 PUSH6 0x627a7a723058
0x21c SHA3
0x21d MSIZE
0x21e CALLVALUE
0x21f MISSING 0x5d
0x220 MISSING 0xb5
0x221 MISSING 0x49
0x222 JUMP
0x223 CREATE
0x224 MISSING 0xc8
0x225 MISSING 0xbd
0x226 SHL
0x227 MISSING 0xc4
0x228 MISSING 0xf6
0x229 PUSH30 0xceb53aa00018847360ba476eca72f6a7ab4a4e0029
---
0x213: STOP 
0x214: LOG S0 S1 S2
0x215: V187 = 0x627a7a723058
0x21c: V188 = SHA3 0x627a7a723058 S3
0x21d: V189 = MSIZE
0x21e: V190 = CALLVALUE
0x21f: MISSING 0x5d
0x220: MISSING 0xb5
0x221: MISSING 0x49
0x222: JUMP S0
0x223: V191 = CREATE S0 S1 S2
0x224: MISSING 0xc8
0x225: MISSING 0xbd
0x226: V192 = SHL S0 S1
0x227: MISSING 0xc4
0x228: MISSING 0xf6
0x229: V193 = 0xceb53aa00018847360ba476eca72f6a7ab4a4e0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V190, V189, V188, V191, V192, 0xceb53aa00018847360ba476eca72f6a7ab4a4e0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x144fa6d7
Entry block: 0x66
Exit block: 0x85
Body: 0x66, 0x6d, 0x71, 0x85, 0xeb

Function 1:
Public function signature: 0x76a54c60
Entry block: 0x87
Exit block: 0x9b
Body: 0x87, 0x9b

Function 2:
Public function signature: 0xc4c9ce57
Entry block: 0xad
Exit block: 0xcf
Body: 0xad, 0xb4, 0xb8, 0xcf, 0x15e, 0x1d2, 0x1d6, 0x1e3, 0x1e7, 0x1fb

Function 3:
Public function signature: 0xf108bd4f
Entry block: 0xe3
Exit block: 0x9b
Body: 0x9b, 0xe3, 0x205

Function 4:
Public fallback function
Entry block: 0x61
Exit block: 0x61
Body: 0x61

Function 5:
Private function
Entry block: 0x11a
Exit block: 0x14f
Body: 0x11a, 0x14f

