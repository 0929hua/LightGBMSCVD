Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xbf]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xbf
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xbf
0xa: JUMPI 0xbf V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xc4]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x27ebe40a
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xc4
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x27ebe40a
0x20: V14 = EQ V12 0x27ebe40a
0x21: V15 = 0xc4
0x24: JUMPI 0xc4 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0xf1]
---
0x25 DUP1
0x26 PUSH4 0x3f4ba83a
0x2b EQ
0x2c PUSH2 0xf1
0x2f JUMPI
---
0x26: V16 = 0x3f4ba83a
0x2b: V17 = EQ 0x3f4ba83a V12
0x2c: V18 = 0xf1
0x2f: JUMPI 0xf1 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x118]
---
0x30 DUP1
0x31 PUSH4 0x454a2ab3
0x36 EQ
0x37 PUSH2 0x118
0x3a JUMPI
---
0x31: V19 = 0x454a2ab3
0x36: V20 = EQ 0x454a2ab3 V12
0x37: V21 = 0x118
0x3a: JUMPI 0x118 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x125]
---
0x3b DUP1
0x3c PUSH4 0x5c975abb
0x41 EQ
0x42 PUSH2 0x125
0x45 JUMPI
---
0x3c: V22 = 0x5c975abb
0x41: V23 = EQ 0x5c975abb V12
0x42: V24 = 0x125
0x45: JUMPI 0x125 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x14c]
---
0x46 DUP1
0x47 PUSH4 0x5fd8c710
0x4c EQ
0x4d PUSH2 0x14c
0x50 JUMPI
---
0x47: V25 = 0x5fd8c710
0x4c: V26 = EQ 0x5fd8c710 V12
0x4d: V27 = 0x14c
0x50: JUMPI 0x14c V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x161]
---
0x51 DUP1
0x52 PUSH4 0x76190f8f
0x57 EQ
0x58 PUSH2 0x161
0x5b JUMPI
---
0x52: V28 = 0x76190f8f
0x57: V29 = EQ 0x76190f8f V12
0x58: V30 = 0x161
0x5b: JUMPI 0x161 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x188]
---
0x5c DUP1
0x5d PUSH4 0x78bd7935
0x62 EQ
0x63 PUSH2 0x188
0x66 JUMPI
---
0x5d: V31 = 0x78bd7935
0x62: V32 = EQ 0x78bd7935 V12
0x63: V33 = 0x188
0x66: JUMPI 0x188 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x1d9]
---
0x67 DUP1
0x68 PUSH4 0x83b5ff8b
0x6d EQ
0x6e PUSH2 0x1d9
0x71 JUMPI
---
0x68: V34 = 0x83b5ff8b
0x6d: V35 = EQ 0x83b5ff8b V12
0x6e: V36 = 0x1d9
0x71: JUMPI 0x1d9 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x1fe]
---
0x72 DUP1
0x73 PUSH4 0x8456cb59
0x78 EQ
0x79 PUSH2 0x1fe
0x7c JUMPI
---
0x73: V37 = 0x8456cb59
0x78: V38 = EQ 0x8456cb59 V12
0x79: V39 = 0x1fe
0x7c: JUMPI 0x1fe V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x225]
---
0x7d DUP1
0x7e PUSH4 0x878eb368
0x83 EQ
0x84 PUSH2 0x225
0x87 JUMPI
---
0x7e: V40 = 0x878eb368
0x83: V41 = EQ 0x878eb368 V12
0x84: V42 = 0x225
0x87: JUMPI 0x225 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x23d]
---
0x88 DUP1
0x89 PUSH4 0x8da5cb5b
0x8e EQ
0x8f PUSH2 0x23d
0x92 JUMPI
---
0x89: V43 = 0x8da5cb5b
0x8e: V44 = EQ 0x8da5cb5b V12
0x8f: V45 = 0x23d
0x92: JUMPI 0x23d V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x26c]
---
0x93 DUP1
0x94 PUSH4 0x96b5a755
0x99 EQ
0x9a PUSH2 0x26c
0x9d JUMPI
---
0x94: V46 = 0x96b5a755
0x99: V47 = EQ 0x96b5a755 V12
0x9a: V48 = 0x26c
0x9d: JUMPI 0x26c V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x284]
---
0x9e DUP1
0x9f PUSH4 0xc55d0f56
0xa4 EQ
0xa5 PUSH2 0x284
0xa8 JUMPI
---
0x9f: V49 = 0xc55d0f56
0xa4: V50 = EQ 0xc55d0f56 V12
0xa5: V51 = 0x284
0xa8: JUMPI 0x284 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x2ac]
---
0xa9 DUP1
0xaa PUSH4 0xdd1b7a0f
0xaf EQ
0xb0 PUSH2 0x2ac
0xb3 JUMPI
---
0xaa: V52 = 0xdd1b7a0f
0xaf: V53 = EQ 0xdd1b7a0f V12
0xb0: V54 = 0x2ac
0xb3: JUMPI 0x2ac V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x2db]
---
0xb4 DUP1
0xb5 PUSH4 0xf2fde38b
0xba EQ
0xbb PUSH2 0x2db
0xbe JUMPI
---
0xb5: V55 = 0xf2fde38b
0xba: V56 = EQ 0xf2fde38b V12
0xbb: V57 = 0x2db
0xbe: JUMPI 0x2db V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc3]
---
Predecessors: [0x0, 0xb4]
Successors: []
---
0xbf JUMPDEST
0xc0 PUSH1 0x0
0xc2 DUP1
0xc3 REVERT
---
0xbf: JUMPDEST 
0xc0: V58 = 0x0
0xc3: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xc4
[0xc4:0xca]
---
Predecessors: [0xb]
Successors: [0xcb, 0xcf]
---
0xc4 JUMPDEST
0xc5 CALLVALUE
0xc6 ISZERO
0xc7 PUSH2 0xcf
0xca JUMPI
---
0xc4: JUMPDEST 
0xc5: V59 = CALLVALUE
0xc6: V60 = ISZERO V59
0xc7: V61 = 0xcf
0xca: JUMPI 0xcf V60
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xcb
[0xcb:0xce]
---
Predecessors: [0xc4]
Successors: []
---
0xcb PUSH1 0x0
0xcd DUP1
0xce REVERT
---
0xcb: V62 = 0x0
0xce: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xcf
[0xcf:0xee]
---
Predecessors: [0xc4]
Successors: [0x2fc]
---
0xcf JUMPDEST
0xd0 PUSH2 0xef
0xd3 PUSH1 0x4
0xd5 CALLDATALOAD
0xd6 PUSH1 0x24
0xd8 CALLDATALOAD
0xd9 PUSH1 0x44
0xdb CALLDATALOAD
0xdc PUSH1 0x64
0xde CALLDATALOAD
0xdf PUSH1 0x1
0xe1 PUSH1 0xa0
0xe3 PUSH1 0x2
0xe5 EXP
0xe6 SUB
0xe7 PUSH1 0x84
0xe9 CALLDATALOAD
0xea AND
0xeb PUSH2 0x2fc
0xee JUMP
---
0xcf: JUMPDEST 
0xd0: V63 = 0xef
0xd3: V64 = 0x4
0xd5: V65 = CALLDATALOAD 0x4
0xd6: V66 = 0x24
0xd8: V67 = CALLDATALOAD 0x24
0xd9: V68 = 0x44
0xdb: V69 = CALLDATALOAD 0x44
0xdc: V70 = 0x64
0xde: V71 = CALLDATALOAD 0x64
0xdf: V72 = 0x1
0xe1: V73 = 0xa0
0xe3: V74 = 0x2
0xe5: V75 = EXP 0x2 0xa0
0xe6: V76 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe7: V77 = 0x84
0xe9: V78 = CALLDATALOAD 0x84
0xea: V79 = AND V78 0xffffffffffffffffffffffffffffffffffffffff
0xeb: V80 = 0x2fc
0xee: JUMP 0x2fc
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xef, V65, V67, V69, V71, V79]
Exit stack: [V12, 0xef, V65, V67, V69, V71, V79]

================================

Block 0xef
[0xef:0xf0]
---
Predecessors: [0x3cd, 0x4a9, 0x53a, 0x736, 0x7d3, 0xbfe]
Successors: []
---
0xef JUMPDEST
0xf0 STOP
---
0xef: JUMPDEST 
0xf0: STOP 
---
Entry stack: [V12, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S3, S2, S1, S0]

================================

Block 0xf1
[0xf1:0xf7]
---
Predecessors: [0x25]
Successors: [0xf8, 0xfc]
---
0xf1 JUMPDEST
0xf2 CALLVALUE
0xf3 ISZERO
0xf4 PUSH2 0xfc
0xf7 JUMPI
---
0xf1: JUMPDEST 
0xf2: V81 = CALLVALUE
0xf3: V82 = ISZERO V81
0xf4: V83 = 0xfc
0xf7: JUMPI 0xfc V82
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xf8
[0xf8:0xfb]
---
Predecessors: [0xf1]
Successors: []
---
0xf8 PUSH1 0x0
0xfa DUP1
0xfb REVERT
---
0xf8: V84 = 0x0
0xfb: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xfc
[0xfc:0x103]
---
Predecessors: [0xf1]
Successors: [0x3d5]
---
0xfc JUMPDEST
0xfd PUSH2 0x104
0x100 PUSH2 0x3d5
0x103 JUMP
---
0xfc: JUMPDEST 
0xfd: V85 = 0x104
0x100: V86 = 0x3d5
0x103: JUMP 0x3d5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x104]
Exit stack: [V12, 0x104]

================================

Block 0x104
[0x104:0x117]
---
Predecessors: [0x459, 0x4ad, 0x53d, 0x666]
Successors: []
---
0x104 JUMPDEST
0x105 PUSH1 0x40
0x107 MLOAD
0x108 SWAP1
0x109 ISZERO
0x10a ISZERO
0x10b DUP2
0x10c MSTORE
0x10d PUSH1 0x20
0x10f ADD
0x110 PUSH1 0x40
0x112 MLOAD
0x113 DUP1
0x114 SWAP2
0x115 SUB
0x116 SWAP1
0x117 RETURN
---
0x104: JUMPDEST 
0x105: V87 = 0x40
0x107: V88 = M[0x40]
0x109: V89 = ISZERO S0
0x10a: V90 = ISZERO V89
0x10c: M[V88] = V90
0x10d: V91 = 0x20
0x10f: V92 = ADD 0x20 V88
0x110: V93 = 0x40
0x112: V94 = M[0x40]
0x115: V95 = SUB V92 V94
0x117: RETURN V94 V95
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x118
[0x118:0x122]
---
Predecessors: [0x30]
Successors: [0x45c]
---
0x118 JUMPDEST
0x119 PUSH2 0xef
0x11c PUSH1 0x4
0x11e CALLDATALOAD
0x11f PUSH2 0x45c
0x122 JUMP
---
0x118: JUMPDEST 
0x119: V96 = 0xef
0x11c: V97 = 0x4
0x11e: V98 = CALLDATALOAD 0x4
0x11f: V99 = 0x45c
0x122: JUMP 0x45c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xef, V98]
Exit stack: [V12, 0xef, V98]

================================

Block 0x123
[0x123:0x124]
---
Predecessors: []
Successors: []
---
0x123 JUMPDEST
0x124 STOP
---
0x123: JUMPDEST 
0x124: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x125
[0x125:0x12b]
---
Predecessors: [0x3b]
Successors: [0x12c, 0x130]
---
0x125 JUMPDEST
0x126 CALLVALUE
0x127 ISZERO
0x128 PUSH2 0x130
0x12b JUMPI
---
0x125: JUMPDEST 
0x126: V100 = CALLVALUE
0x127: V101 = ISZERO V100
0x128: V102 = 0x130
0x12b: JUMPI 0x130 V101
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x12c
[0x12c:0x12f]
---
Predecessors: [0x125]
Successors: []
---
0x12c PUSH1 0x0
0x12e DUP1
0x12f REVERT
---
0x12c: V103 = 0x0
0x12f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x130
[0x130:0x137]
---
Predecessors: [0x125]
Successors: [0x4ad]
---
0x130 JUMPDEST
0x131 PUSH2 0x104
0x134 PUSH2 0x4ad
0x137 JUMP
---
0x130: JUMPDEST 
0x131: V104 = 0x104
0x134: V105 = 0x4ad
0x137: JUMP 0x4ad
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x104]
Exit stack: [V12, 0x104]

================================

Block 0x138
[0x138:0x14b]
---
Predecessors: []
Successors: []
---
0x138 JUMPDEST
0x139 PUSH1 0x40
0x13b MLOAD
0x13c SWAP1
0x13d ISZERO
0x13e ISZERO
0x13f DUP2
0x140 MSTORE
0x141 PUSH1 0x20
0x143 ADD
0x144 PUSH1 0x40
0x146 MLOAD
0x147 DUP1
0x148 SWAP2
0x149 SUB
0x14a SWAP1
0x14b RETURN
---
0x138: JUMPDEST 
0x139: V106 = 0x40
0x13b: V107 = M[0x40]
0x13d: V108 = ISZERO S0
0x13e: V109 = ISZERO V108
0x140: M[V107] = V109
0x141: V110 = 0x20
0x143: V111 = ADD 0x20 V107
0x144: V112 = 0x40
0x146: V113 = M[0x40]
0x149: V114 = SUB V111 V113
0x14b: RETURN V113 V114
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x14c
[0x14c:0x152]
---
Predecessors: [0x46]
Successors: [0x153, 0x157]
---
0x14c JUMPDEST
0x14d CALLVALUE
0x14e ISZERO
0x14f PUSH2 0x157
0x152 JUMPI
---
0x14c: JUMPDEST 
0x14d: V115 = CALLVALUE
0x14e: V116 = ISZERO V115
0x14f: V117 = 0x157
0x152: JUMPI 0x157 V116
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x153
[0x153:0x156]
---
Predecessors: [0x14c]
Successors: []
---
0x153 PUSH1 0x0
0x155 DUP1
0x156 REVERT
---
0x153: V118 = 0x0
0x156: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x157
[0x157:0x15e]
---
Predecessors: [0x14c]
Successors: [0x4bd]
---
0x157 JUMPDEST
0x158 PUSH2 0xef
0x15b PUSH2 0x4bd
0x15e JUMP
---
0x157: JUMPDEST 
0x158: V119 = 0xef
0x15b: V120 = 0x4bd
0x15e: JUMP 0x4bd
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xef]
Exit stack: [V12, 0xef]

================================

Block 0x15f
[0x15f:0x160]
---
Predecessors: []
Successors: []
---
0x15f JUMPDEST
0x160 STOP
---
0x15f: JUMPDEST 
0x160: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x161
[0x161:0x167]
---
Predecessors: [0x51]
Successors: [0x168, 0x16c]
---
0x161 JUMPDEST
0x162 CALLVALUE
0x163 ISZERO
0x164 PUSH2 0x16c
0x167 JUMPI
---
0x161: JUMPDEST 
0x162: V121 = CALLVALUE
0x163: V122 = ISZERO V121
0x164: V123 = 0x16c
0x167: JUMPI 0x16c V122
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x168
[0x168:0x16b]
---
Predecessors: [0x161]
Successors: []
---
0x168 PUSH1 0x0
0x16a DUP1
0x16b REVERT
---
0x168: V124 = 0x0
0x16b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x16c
[0x16c:0x173]
---
Predecessors: [0x161]
Successors: [0x53d]
---
0x16c JUMPDEST
0x16d PUSH2 0x104
0x170 PUSH2 0x53d
0x173 JUMP
---
0x16c: JUMPDEST 
0x16d: V125 = 0x104
0x170: V126 = 0x53d
0x173: JUMP 0x53d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x104]
Exit stack: [V12, 0x104]

================================

Block 0x174
[0x174:0x187]
---
Predecessors: []
Successors: []
---
0x174 JUMPDEST
0x175 PUSH1 0x40
0x177 MLOAD
0x178 SWAP1
0x179 ISZERO
0x17a ISZERO
0x17b DUP2
0x17c MSTORE
0x17d PUSH1 0x20
0x17f ADD
0x180 PUSH1 0x40
0x182 MLOAD
0x183 DUP1
0x184 SWAP2
0x185 SUB
0x186 SWAP1
0x187 RETURN
---
0x174: JUMPDEST 
0x175: V127 = 0x40
0x177: V128 = M[0x40]
0x179: V129 = ISZERO S0
0x17a: V130 = ISZERO V129
0x17c: M[V128] = V130
0x17d: V131 = 0x20
0x17f: V132 = ADD 0x20 V128
0x180: V133 = 0x40
0x182: V134 = M[0x40]
0x185: V135 = SUB V132 V134
0x187: RETURN V134 V135
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x188
[0x188:0x18e]
---
Predecessors: [0x5c]
Successors: [0x18f, 0x193]
---
0x188 JUMPDEST
0x189 CALLVALUE
0x18a ISZERO
0x18b PUSH2 0x193
0x18e JUMPI
---
0x188: JUMPDEST 
0x189: V136 = CALLVALUE
0x18a: V137 = ISZERO V136
0x18b: V138 = 0x193
0x18e: JUMPI 0x193 V137
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x18f
[0x18f:0x192]
---
Predecessors: [0x188]
Successors: []
---
0x18f PUSH1 0x0
0x191 DUP1
0x192 REVERT
---
0x18f: V139 = 0x0
0x192: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x193
[0x193:0x19d]
---
Predecessors: [0x188]
Successors: [0x546]
---
0x193 JUMPDEST
0x194 PUSH2 0x19e
0x197 PUSH1 0x4
0x199 CALLDATALOAD
0x19a PUSH2 0x546
0x19d JUMP
---
0x193: JUMPDEST 
0x194: V140 = 0x19e
0x197: V141 = 0x4
0x199: V142 = CALLDATALOAD 0x4
0x19a: V143 = 0x546
0x19d: JUMP 0x546
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x19e, V142]
Exit stack: [V12, 0x19e, V142]

================================

Block 0x19e
[0x19e:0x1d8]
---
Predecessors: [0x5cd]
Successors: []
---
0x19e JUMPDEST
0x19f PUSH1 0x40
0x1a1 MLOAD
0x1a2 PUSH1 0x1
0x1a4 PUSH1 0xa0
0x1a6 PUSH1 0x2
0x1a8 EXP
0x1a9 SUB
0x1aa SWAP1
0x1ab SWAP6
0x1ac AND
0x1ad DUP6
0x1ae MSTORE
0x1af PUSH1 0x20
0x1b1 DUP6
0x1b2 ADD
0x1b3 SWAP4
0x1b4 SWAP1
0x1b5 SWAP4
0x1b6 MSTORE
0x1b7 PUSH1 0x40
0x1b9 DUP1
0x1ba DUP6
0x1bb ADD
0x1bc SWAP3
0x1bd SWAP1
0x1be SWAP3
0x1bf MSTORE
0x1c0 PUSH1 0x60
0x1c2 DUP5
0x1c3 ADD
0x1c4 MSTORE
0x1c5 PUSH1 0x80
0x1c7 DUP4
0x1c8 ADD
0x1c9 SWAP2
0x1ca SWAP1
0x1cb SWAP2
0x1cc MSTORE
0x1cd PUSH1 0xa0
0x1cf SWAP1
0x1d0 SWAP2
0x1d1 ADD
0x1d2 SWAP1
0x1d3 MLOAD
0x1d4 DUP1
0x1d5 SWAP2
0x1d6 SUB
0x1d7 SWAP1
0x1d8 RETURN
---
0x19e: JUMPDEST 
0x19f: V144 = 0x40
0x1a1: V145 = M[0x40]
0x1a2: V146 = 0x1
0x1a4: V147 = 0xa0
0x1a6: V148 = 0x2
0x1a8: V149 = EXP 0x2 0xa0
0x1a9: V150 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ac: V151 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x1ae: M[V145] = V151
0x1af: V152 = 0x20
0x1b2: V153 = ADD V145 0x20
0x1b6: M[V153] = S3
0x1b7: V154 = 0x40
0x1bb: V155 = ADD V145 0x40
0x1bf: M[V155] = S2
0x1c0: V156 = 0x60
0x1c3: V157 = ADD V145 0x60
0x1c4: M[V157] = S1
0x1c5: V158 = 0x80
0x1c8: V159 = ADD V145 0x80
0x1cc: M[V159] = S0
0x1cd: V160 = 0xa0
0x1d1: V161 = ADD V145 0xa0
0x1d3: V162 = M[0x40]
0x1d6: V163 = SUB V161 V162
0x1d8: RETURN V162 V163
---
Entry stack: [V12, 0xef, V98, V415, 0x49d, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V12, 0xef, V98, V415, 0x49d, S5]

================================

Block 0x1d9
[0x1d9:0x1df]
---
Predecessors: [0x67]
Successors: [0x1e0, 0x1e4]
---
0x1d9 JUMPDEST
0x1da CALLVALUE
0x1db ISZERO
0x1dc PUSH2 0x1e4
0x1df JUMPI
---
0x1d9: JUMPDEST 
0x1da: V164 = CALLVALUE
0x1db: V165 = ISZERO V164
0x1dc: V166 = 0x1e4
0x1df: JUMPI 0x1e4 V165
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e0
[0x1e0:0x1e3]
---
Predecessors: [0x1d9]
Successors: []
---
0x1e0 PUSH1 0x0
0x1e2 DUP1
0x1e3 REVERT
---
0x1e0: V167 = 0x0
0x1e3: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e4
[0x1e4:0x1eb]
---
Predecessors: [0x1d9]
Successors: [0x5d7]
---
0x1e4 JUMPDEST
0x1e5 PUSH2 0x1ec
0x1e8 PUSH2 0x5d7
0x1eb JUMP
---
0x1e4: JUMPDEST 
0x1e5: V168 = 0x1ec
0x1e8: V169 = 0x5d7
0x1eb: JUMP 0x5d7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1ec]
Exit stack: [V12, 0x1ec]

================================

Block 0x1ec
[0x1ec:0x1fd]
---
Predecessors: [0x3cd, 0x5d7, 0x769]
Successors: []
---
0x1ec JUMPDEST
0x1ed PUSH1 0x40
0x1ef MLOAD
0x1f0 SWAP1
0x1f1 DUP2
0x1f2 MSTORE
0x1f3 PUSH1 0x20
0x1f5 ADD
0x1f6 PUSH1 0x40
0x1f8 MLOAD
0x1f9 DUP1
0x1fa SWAP2
0x1fb SUB
0x1fc SWAP1
0x1fd RETURN
---
0x1ec: JUMPDEST 
0x1ed: V170 = 0x40
0x1ef: V171 = M[0x40]
0x1f2: M[V171] = S0
0x1f3: V172 = 0x20
0x1f5: V173 = ADD 0x20 V171
0x1f6: V174 = 0x40
0x1f8: V175 = M[0x40]
0x1fb: V176 = SUB V173 V175
0x1fd: RETURN V175 V176
---
Entry stack: [V12, 0x1ec, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1ec]

================================

Block 0x1fe
[0x1fe:0x204]
---
Predecessors: [0x72]
Successors: [0x205, 0x209]
---
0x1fe JUMPDEST
0x1ff CALLVALUE
0x200 ISZERO
0x201 PUSH2 0x209
0x204 JUMPI
---
0x1fe: JUMPDEST 
0x1ff: V177 = CALLVALUE
0x200: V178 = ISZERO V177
0x201: V179 = 0x209
0x204: JUMPI 0x209 V178
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x205
[0x205:0x208]
---
Predecessors: [0x1fe]
Successors: []
---
0x205 PUSH1 0x0
0x207 DUP1
0x208 REVERT
---
0x205: V180 = 0x0
0x208: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x209
[0x209:0x210]
---
Predecessors: [0x1fe]
Successors: [0x5dd]
---
0x209 JUMPDEST
0x20a PUSH2 0x104
0x20d PUSH2 0x5dd
0x210 JUMP
---
0x209: JUMPDEST 
0x20a: V181 = 0x104
0x20d: V182 = 0x5dd
0x210: JUMP 0x5dd
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x104]
Exit stack: [V12, 0x104]

================================

Block 0x211
[0x211:0x224]
---
Predecessors: []
Successors: []
---
0x211 JUMPDEST
0x212 PUSH1 0x40
0x214 MLOAD
0x215 SWAP1
0x216 ISZERO
0x217 ISZERO
0x218 DUP2
0x219 MSTORE
0x21a PUSH1 0x20
0x21c ADD
0x21d PUSH1 0x40
0x21f MLOAD
0x220 DUP1
0x221 SWAP2
0x222 SUB
0x223 SWAP1
0x224 RETURN
---
0x211: JUMPDEST 
0x212: V183 = 0x40
0x214: V184 = M[0x40]
0x216: V185 = ISZERO S0
0x217: V186 = ISZERO V185
0x219: M[V184] = V186
0x21a: V187 = 0x20
0x21c: V188 = ADD 0x20 V184
0x21d: V189 = 0x40
0x21f: V190 = M[0x40]
0x222: V191 = SUB V188 V190
0x224: RETURN V190 V191
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x225
[0x225:0x22b]
---
Predecessors: [0x7d]
Successors: [0x22c, 0x230]
---
0x225 JUMPDEST
0x226 CALLVALUE
0x227 ISZERO
0x228 PUSH2 0x230
0x22b JUMPI
---
0x225: JUMPDEST 
0x226: V192 = CALLVALUE
0x227: V193 = ISZERO V192
0x228: V194 = 0x230
0x22b: JUMPI 0x230 V193
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x22c
[0x22c:0x22f]
---
Predecessors: [0x225]
Successors: []
---
0x22c PUSH1 0x0
0x22e DUP1
0x22f REVERT
---
0x22c: V195 = 0x0
0x22f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x230
[0x230:0x23a]
---
Predecessors: [0x225]
Successors: [0x669]
---
0x230 JUMPDEST
0x231 PUSH2 0xef
0x234 PUSH1 0x4
0x236 CALLDATALOAD
0x237 PUSH2 0x669
0x23a JUMP
---
0x230: JUMPDEST 
0x231: V196 = 0xef
0x234: V197 = 0x4
0x236: V198 = CALLDATALOAD 0x4
0x237: V199 = 0x669
0x23a: JUMP 0x669
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xef, V198]
Exit stack: [V12, 0xef, V198]

================================

Block 0x23b
[0x23b:0x23c]
---
Predecessors: []
Successors: []
---
0x23b JUMPDEST
0x23c STOP
---
0x23b: JUMPDEST 
0x23c: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x23d
[0x23d:0x243]
---
Predecessors: [0x88]
Successors: [0x244, 0x248]
---
0x23d JUMPDEST
0x23e CALLVALUE
0x23f ISZERO
0x240 PUSH2 0x248
0x243 JUMPI
---
0x23d: JUMPDEST 
0x23e: V200 = CALLVALUE
0x23f: V201 = ISZERO V200
0x240: V202 = 0x248
0x243: JUMPI 0x248 V201
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x244
[0x244:0x247]
---
Predecessors: [0x23d]
Successors: []
---
0x244 PUSH1 0x0
0x246 DUP1
0x247 REVERT
---
0x244: V203 = 0x0
0x247: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x248
[0x248:0x24f]
---
Predecessors: [0x23d]
Successors: [0x6dd]
---
0x248 JUMPDEST
0x249 PUSH2 0x250
0x24c PUSH2 0x6dd
0x24f JUMP
---
0x248: JUMPDEST 
0x249: V204 = 0x250
0x24c: V205 = 0x6dd
0x24f: JUMP 0x6dd
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x250]
Exit stack: [V12, 0x250]

================================

Block 0x250
[0x250:0x26b]
---
Predecessors: [0x6dd, 0x76f]
Successors: []
---
0x250 JUMPDEST
0x251 PUSH1 0x40
0x253 MLOAD
0x254 PUSH1 0x1
0x256 PUSH1 0xa0
0x258 PUSH1 0x2
0x25a EXP
0x25b SUB
0x25c SWAP1
0x25d SWAP2
0x25e AND
0x25f DUP2
0x260 MSTORE
0x261 PUSH1 0x20
0x263 ADD
0x264 PUSH1 0x40
0x266 MLOAD
0x267 DUP1
0x268 SWAP2
0x269 SUB
0x26a SWAP1
0x26b RETURN
---
0x250: JUMPDEST 
0x251: V206 = 0x40
0x253: V207 = M[0x40]
0x254: V208 = 0x1
0x256: V209 = 0xa0
0x258: V210 = 0x2
0x25a: V211 = EXP 0x2 0xa0
0x25b: V212 = SUB 0x10000000000000000000000000000000000000000 0x1
0x25e: V213 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x260: M[V207] = V213
0x261: V214 = 0x20
0x263: V215 = ADD 0x20 V207
0x264: V216 = 0x40
0x266: V217 = M[0x40]
0x269: V218 = SUB V215 V217
0x26b: RETURN V217 V218
---
Entry stack: [V12, 0x250, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x250]

================================

Block 0x26c
[0x26c:0x272]
---
Predecessors: [0x93]
Successors: [0x273, 0x277]
---
0x26c JUMPDEST
0x26d CALLVALUE
0x26e ISZERO
0x26f PUSH2 0x277
0x272 JUMPI
---
0x26c: JUMPDEST 
0x26d: V219 = CALLVALUE
0x26e: V220 = ISZERO V219
0x26f: V221 = 0x277
0x272: JUMPI 0x277 V220
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x273
[0x273:0x276]
---
Predecessors: [0x26c]
Successors: []
---
0x273 PUSH1 0x0
0x275 DUP1
0x276 REVERT
---
0x273: V222 = 0x0
0x276: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x277
[0x277:0x281]
---
Predecessors: [0x26c]
Successors: [0x6ec]
---
0x277 JUMPDEST
0x278 PUSH2 0xef
0x27b PUSH1 0x4
0x27d CALLDATALOAD
0x27e PUSH2 0x6ec
0x281 JUMP
---
0x277: JUMPDEST 
0x278: V223 = 0xef
0x27b: V224 = 0x4
0x27d: V225 = CALLDATALOAD 0x4
0x27e: V226 = 0x6ec
0x281: JUMP 0x6ec
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xef, V225]
Exit stack: [V12, 0xef, V225]

================================

Block 0x282
[0x282:0x283]
---
Predecessors: []
Successors: []
---
0x282 JUMPDEST
0x283 STOP
---
0x282: JUMPDEST 
0x283: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x284
[0x284:0x28a]
---
Predecessors: [0x9e]
Successors: [0x28b, 0x28f]
---
0x284 JUMPDEST
0x285 CALLVALUE
0x286 ISZERO
0x287 PUSH2 0x28f
0x28a JUMPI
---
0x284: JUMPDEST 
0x285: V227 = CALLVALUE
0x286: V228 = ISZERO V227
0x287: V229 = 0x28f
0x28a: JUMPI 0x28f V228
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x28b
[0x28b:0x28e]
---
Predecessors: [0x284]
Successors: []
---
0x28b PUSH1 0x0
0x28d DUP1
0x28e REVERT
---
0x28b: V230 = 0x0
0x28e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x28f
[0x28f:0x299]
---
Predecessors: [0x284]
Successors: [0x73b]
---
0x28f JUMPDEST
0x290 PUSH2 0x1ec
0x293 PUSH1 0x4
0x295 CALLDATALOAD
0x296 PUSH2 0x73b
0x299 JUMP
---
0x28f: JUMPDEST 
0x290: V231 = 0x1ec
0x293: V232 = 0x4
0x295: V233 = CALLDATALOAD 0x4
0x296: V234 = 0x73b
0x299: JUMP 0x73b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1ec, V233]
Exit stack: [V12, 0x1ec, V233]

================================

Block 0x29a
[0x29a:0x2ab]
---
Predecessors: []
Successors: []
---
0x29a JUMPDEST
0x29b PUSH1 0x40
0x29d MLOAD
0x29e SWAP1
0x29f DUP2
0x2a0 MSTORE
0x2a1 PUSH1 0x20
0x2a3 ADD
0x2a4 PUSH1 0x40
0x2a6 MLOAD
0x2a7 DUP1
0x2a8 SWAP2
0x2a9 SUB
0x2aa SWAP1
0x2ab RETURN
---
0x29a: JUMPDEST 
0x29b: V235 = 0x40
0x29d: V236 = M[0x40]
0x2a0: M[V236] = S0
0x2a1: V237 = 0x20
0x2a3: V238 = ADD 0x20 V236
0x2a4: V239 = 0x40
0x2a6: V240 = M[0x40]
0x2a9: V241 = SUB V238 V240
0x2ab: RETURN V240 V241
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2ac
[0x2ac:0x2b2]
---
Predecessors: [0xa9]
Successors: [0x2b3, 0x2b7]
---
0x2ac JUMPDEST
0x2ad CALLVALUE
0x2ae ISZERO
0x2af PUSH2 0x2b7
0x2b2 JUMPI
---
0x2ac: JUMPDEST 
0x2ad: V242 = CALLVALUE
0x2ae: V243 = ISZERO V242
0x2af: V244 = 0x2b7
0x2b2: JUMPI 0x2b7 V243
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2b3
[0x2b3:0x2b6]
---
Predecessors: [0x2ac]
Successors: []
---
0x2b3 PUSH1 0x0
0x2b5 DUP1
0x2b6 REVERT
---
0x2b3: V245 = 0x0
0x2b6: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2b7
[0x2b7:0x2be]
---
Predecessors: [0x2ac]
Successors: [0x76f]
---
0x2b7 JUMPDEST
0x2b8 PUSH2 0x250
0x2bb PUSH2 0x76f
0x2be JUMP
---
0x2b7: JUMPDEST 
0x2b8: V246 = 0x250
0x2bb: V247 = 0x76f
0x2be: JUMP 0x76f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x250]
Exit stack: [V12, 0x250]

================================

Block 0x2bf
[0x2bf:0x2da]
---
Predecessors: []
Successors: []
---
0x2bf JUMPDEST
0x2c0 PUSH1 0x40
0x2c2 MLOAD
0x2c3 PUSH1 0x1
0x2c5 PUSH1 0xa0
0x2c7 PUSH1 0x2
0x2c9 EXP
0x2ca SUB
0x2cb SWAP1
0x2cc SWAP2
0x2cd AND
0x2ce DUP2
0x2cf MSTORE
0x2d0 PUSH1 0x20
0x2d2 ADD
0x2d3 PUSH1 0x40
0x2d5 MLOAD
0x2d6 DUP1
0x2d7 SWAP2
0x2d8 SUB
0x2d9 SWAP1
0x2da RETURN
---
0x2bf: JUMPDEST 
0x2c0: V248 = 0x40
0x2c2: V249 = M[0x40]
0x2c3: V250 = 0x1
0x2c5: V251 = 0xa0
0x2c7: V252 = 0x2
0x2c9: V253 = EXP 0x2 0xa0
0x2ca: V254 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2cd: V255 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x2cf: M[V249] = V255
0x2d0: V256 = 0x20
0x2d2: V257 = ADD 0x20 V249
0x2d3: V258 = 0x40
0x2d5: V259 = M[0x40]
0x2d8: V260 = SUB V257 V259
0x2da: RETURN V259 V260
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2db
[0x2db:0x2e1]
---
Predecessors: [0xb4]
Successors: [0x2e2, 0x2e6]
---
0x2db JUMPDEST
0x2dc CALLVALUE
0x2dd ISZERO
0x2de PUSH2 0x2e6
0x2e1 JUMPI
---
0x2db: JUMPDEST 
0x2dc: V261 = CALLVALUE
0x2dd: V262 = ISZERO V261
0x2de: V263 = 0x2e6
0x2e1: JUMPI 0x2e6 V262
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2e2
[0x2e2:0x2e5]
---
Predecessors: [0x2db]
Successors: []
---
0x2e2 PUSH1 0x0
0x2e4 DUP1
0x2e5 REVERT
---
0x2e2: V264 = 0x0
0x2e5: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2e6
[0x2e6:0x2f9]
---
Predecessors: [0x2db]
Successors: [0x77e]
---
0x2e6 JUMPDEST
0x2e7 PUSH2 0xef
0x2ea PUSH1 0x1
0x2ec PUSH1 0xa0
0x2ee PUSH1 0x2
0x2f0 EXP
0x2f1 SUB
0x2f2 PUSH1 0x4
0x2f4 CALLDATALOAD
0x2f5 AND
0x2f6 PUSH2 0x77e
0x2f9 JUMP
---
0x2e6: JUMPDEST 
0x2e7: V265 = 0xef
0x2ea: V266 = 0x1
0x2ec: V267 = 0xa0
0x2ee: V268 = 0x2
0x2f0: V269 = EXP 0x2 0xa0
0x2f1: V270 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f2: V271 = 0x4
0x2f4: V272 = CALLDATALOAD 0x4
0x2f5: V273 = AND V272 0xffffffffffffffffffffffffffffffffffffffff
0x2f6: V274 = 0x77e
0x2f9: JUMP 0x77e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xef, V273]
Exit stack: [V12, 0xef, V273]

================================

Block 0x2fa
[0x2fa:0x2fb]
---
Predecessors: []
Successors: []
---
0x2fa JUMPDEST
0x2fb STOP
---
0x2fa: JUMPDEST 
0x2fb: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2fc
[0x2fc:0x303]
---
Predecessors: [0xcf]
Successors: [0xd35]
---
0x2fc JUMPDEST
0x2fd PUSH2 0x304
0x300 PUSH2 0xd35
0x303 JUMP
---
0x2fc: JUMPDEST 
0x2fd: V275 = 0x304
0x300: V276 = 0xd35
0x303: JUMP 0xd35
---
Entry stack: [V12, 0xef, V65, V67, V69, V71, V79]
Stack pops: 0
Stack additions: [0x304]
Exit stack: [V12, 0xef, V65, V67, V69, V71, V79, 0x304]

================================

Block 0x304
[0x304:0x314]
---
Predecessors: [0xd35]
Successors: [0x315, 0x319]
---
0x304 JUMPDEST
0x305 PUSH1 0x1
0x307 PUSH1 0x80
0x309 PUSH1 0x2
0x30b EXP
0x30c SUB
0x30d DUP6
0x30e AND
0x30f DUP6
0x310 EQ
0x311 PUSH2 0x319
0x314 JUMPI
---
0x304: JUMPDEST 
0x305: V277 = 0x1
0x307: V278 = 0x80
0x309: V279 = 0x2
0x30b: V280 = EXP 0x2 0x80
0x30c: V281 = SUB 0x100000000000000000000000000000000 0x1
0x30e: V282 = AND V67 0xffffffffffffffffffffffffffffffff
0x310: V283 = EQ V67 V282
0x311: V284 = 0x319
0x314: JUMPI 0x319 V283
---
Entry stack: [V12, 0xef, V65, V67, V69, V71, V79, V1116]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V12, 0xef, V65, V67, V69, V71, V79, V1116]

================================

Block 0x315
[0x315:0x318]
---
Predecessors: [0x304]
Successors: []
---
0x315 PUSH1 0x0
0x317 DUP1
0x318 REVERT
---
0x315: V285 = 0x0
0x318: REVERT 0x0 0x0
---
Entry stack: [V12, 0xef, V65, V67, V69, V71, V79, V1116]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V65, V67, V69, V71, V79, V1116]

================================

Block 0x319
[0x319:0x329]
---
Predecessors: [0x304]
Successors: [0x32a, 0x32e]
---
0x319 JUMPDEST
0x31a PUSH1 0x1
0x31c PUSH1 0x80
0x31e PUSH1 0x2
0x320 EXP
0x321 SUB
0x322 DUP5
0x323 AND
0x324 DUP5
0x325 EQ
0x326 PUSH2 0x32e
0x329 JUMPI
---
0x319: JUMPDEST 
0x31a: V286 = 0x1
0x31c: V287 = 0x80
0x31e: V288 = 0x2
0x320: V289 = EXP 0x2 0x80
0x321: V290 = SUB 0x100000000000000000000000000000000 0x1
0x323: V291 = AND V69 0xffffffffffffffffffffffffffffffff
0x325: V292 = EQ V69 V291
0x326: V293 = 0x32e
0x329: JUMPI 0x32e V292
---
Entry stack: [V12, 0xef, V65, V67, V69, V71, V79, V1116]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, 0xef, V65, V67, V69, V71, V79, V1116]

================================

Block 0x32a
[0x32a:0x32d]
---
Predecessors: [0x319]
Successors: []
---
0x32a PUSH1 0x0
0x32c DUP1
0x32d REVERT
---
0x32a: V294 = 0x0
0x32d: REVERT 0x0 0x0
---
Entry stack: [V12, 0xef, V65, V67, V69, V71, V79, V1116]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V65, V67, V69, V71, V79, V1116]

================================

Block 0x32e
[0x32e:0x33f]
---
Predecessors: [0x319]
Successors: [0x340, 0x344]
---
0x32e JUMPDEST
0x32f PUSH8 0xffffffffffffffff
0x338 DUP4
0x339 AND
0x33a DUP4
0x33b EQ
0x33c PUSH2 0x344
0x33f JUMPI
---
0x32e: JUMPDEST 
0x32f: V295 = 0xffffffffffffffff
0x339: V296 = AND V71 0xffffffffffffffff
0x33b: V297 = EQ V71 V296
0x33c: V298 = 0x344
0x33f: JUMPI 0x344 V297
---
Entry stack: [V12, 0xef, V65, V67, V69, V71, V79, V1116]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0xef, V65, V67, V69, V71, V79, V1116]

================================

Block 0x340
[0x340:0x343]
---
Predecessors: [0x32e]
Successors: []
---
0x340 PUSH1 0x0
0x342 DUP1
0x343 REVERT
---
0x340: V299 = 0x0
0x343: REVERT 0x0 0x0
---
Entry stack: [V12, 0xef, V65, V67, V69, V71, V79, V1116]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V65, V67, V69, V71, V79, V1116]

================================

Block 0x344
[0x344:0x35a]
---
Predecessors: [0x32e]
Successors: [0x35b, 0x35f]
---
0x344 JUMPDEST
0x345 PUSH1 0x1
0x347 SLOAD
0x348 CALLER
0x349 PUSH1 0x1
0x34b PUSH1 0xa0
0x34d PUSH1 0x2
0x34f EXP
0x350 SUB
0x351 SWAP1
0x352 DUP2
0x353 AND
0x354 SWAP2
0x355 AND
0x356 EQ
0x357 PUSH2 0x35f
0x35a JUMPI
---
0x344: JUMPDEST 
0x345: V300 = 0x1
0x347: V301 = S[0x1]
0x348: V302 = CALLER
0x349: V303 = 0x1
0x34b: V304 = 0xa0
0x34d: V305 = 0x2
0x34f: V306 = EXP 0x2 0xa0
0x350: V307 = SUB 0x10000000000000000000000000000000000000000 0x1
0x353: V308 = AND 0xffffffffffffffffffffffffffffffffffffffff V302
0x355: V309 = AND V301 0xffffffffffffffffffffffffffffffffffffffff
0x356: V310 = EQ V309 V308
0x357: V311 = 0x35f
0x35a: JUMPI 0x35f V310
---
Entry stack: [V12, 0xef, V65, V67, V69, V71, V79, V1116]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V65, V67, V69, V71, V79, V1116]

================================

Block 0x35b
[0x35b:0x35e]
---
Predecessors: [0x344]
Successors: []
---
0x35b PUSH1 0x0
0x35d DUP1
0x35e REVERT
---
0x35b: V312 = 0x0
0x35e: REVERT 0x0 0x0
---
Entry stack: [V12, 0xef, V65, V67, V69, V71, V79, V1116]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V65, V67, V69, V71, V79, V1116]

================================

Block 0x35f
[0x35f:0x368]
---
Predecessors: [0x344]
Successors: [0x7d6]
---
0x35f JUMPDEST
0x360 PUSH2 0x369
0x363 DUP3
0x364 DUP8
0x365 PUSH2 0x7d6
0x368 JUMP
---
0x35f: JUMPDEST 
0x360: V313 = 0x369
0x365: V314 = 0x7d6
0x368: JUMP 0x7d6
---
Entry stack: [V12, 0xef, V65, V67, V69, V71, V79, V1116]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, 0x369, S1, S5]
Exit stack: [V12, 0xef, V65, V67, V69, V71, V79, V1116, 0x369, V79, V65]

================================

Block 0x369
[0x369:0x3cb]
---
Predecessors: [0x84e]
Successors: [0x852]
---
0x369 JUMPDEST
0x36a PUSH1 0xa0
0x36c PUSH1 0x40
0x36e MLOAD
0x36f SWAP1
0x370 DUP2
0x371 ADD
0x372 PUSH1 0x40
0x374 MSTORE
0x375 DUP1
0x376 DUP4
0x377 PUSH1 0x1
0x379 PUSH1 0xa0
0x37b PUSH1 0x2
0x37d EXP
0x37e SUB
0x37f AND
0x380 DUP2
0x381 MSTORE
0x382 PUSH1 0x20
0x384 ADD
0x385 DUP7
0x386 PUSH1 0x1
0x388 PUSH1 0x80
0x38a PUSH1 0x2
0x38c EXP
0x38d SUB
0x38e AND
0x38f DUP2
0x390 MSTORE
0x391 PUSH1 0x20
0x393 ADD
0x394 DUP6
0x395 PUSH1 0x1
0x397 PUSH1 0x80
0x399 PUSH1 0x2
0x39b EXP
0x39c SUB
0x39d AND
0x39e DUP2
0x39f MSTORE
0x3a0 PUSH1 0x20
0x3a2 ADD
0x3a3 DUP5
0x3a4 PUSH8 0xffffffffffffffff
0x3ad AND
0x3ae DUP2
0x3af MSTORE
0x3b0 PUSH1 0x20
0x3b2 ADD
0x3b3 TIMESTAMP
0x3b4 PUSH8 0xffffffffffffffff
0x3bd AND
0x3be DUP2
0x3bf MSTORE
0x3c0 POP
0x3c1 SWAP1
0x3c2 POP
0x3c3 PUSH2 0x3cc
0x3c6 DUP7
0x3c7 DUP3
0x3c8 PUSH2 0x852
0x3cb JUMP
---
0x369: JUMPDEST 
0x36a: V315 = 0xa0
0x36c: V316 = 0x40
0x36e: V317 = M[0x40]
0x371: V318 = ADD V317 0xa0
0x372: V319 = 0x40
0x374: M[0x40] = V318
0x377: V320 = 0x1
0x379: V321 = 0xa0
0x37b: V322 = 0x2
0x37d: V323 = EXP 0x2 0xa0
0x37e: V324 = SUB 0x10000000000000000000000000000000000000000 0x1
0x37f: V325 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x381: M[V317] = V325
0x382: V326 = 0x20
0x384: V327 = ADD 0x20 V317
0x386: V328 = 0x1
0x388: V329 = 0x80
0x38a: V330 = 0x2
0x38c: V331 = EXP 0x2 0x80
0x38d: V332 = SUB 0x100000000000000000000000000000000 0x1
0x38e: V333 = AND 0xffffffffffffffffffffffffffffffff S4
0x390: M[V327] = V333
0x391: V334 = 0x20
0x393: V335 = ADD 0x20 V327
0x395: V336 = 0x1
0x397: V337 = 0x80
0x399: V338 = 0x2
0x39b: V339 = EXP 0x2 0x80
0x39c: V340 = SUB 0x100000000000000000000000000000000 0x1
0x39d: V341 = AND 0xffffffffffffffffffffffffffffffff S3
0x39f: M[V335] = V341
0x3a0: V342 = 0x20
0x3a2: V343 = ADD 0x20 V335
0x3a4: V344 = 0xffffffffffffffff
0x3ad: V345 = AND 0xffffffffffffffff S2
0x3af: M[V343] = V345
0x3b0: V346 = 0x20
0x3b2: V347 = ADD 0x20 V343
0x3b3: V348 = TIMESTAMP
0x3b4: V349 = 0xffffffffffffffff
0x3bd: V350 = AND 0xffffffffffffffff V348
0x3bf: M[V347] = V350
0x3c3: V351 = 0x3cc
0x3c8: V352 = 0x852
0x3cb: JUMP 0x852
---
Entry stack: [V12, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, V317, 0x3cc, S5, V317]
Exit stack: [V12, S6, S5, S4, S3, S2, S1, V317, 0x3cc, S5, V317]

================================

Block 0x3cc
[0x3cc:0x3cc]
---
Predecessors: [0x9ea]
Successors: [0x3cd]
---
0x3cc JUMPDEST
---
0x3cc: JUMPDEST 
---
Entry stack: [V12, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x3cd
[0x3cd:0x3d4]
---
Predecessors: [0x3cc]
Successors: [0xef, 0x1ec]
---
0x3cd JUMPDEST
0x3ce POP
0x3cf POP
0x3d0 POP
0x3d1 POP
0x3d2 POP
0x3d3 POP
0x3d4 JUMP
---
0x3cd: JUMPDEST 
0x3d4: JUMP S6
---
Entry stack: [V12, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: []
Exit stack: [V12]

================================

Block 0x3d5
[0x3d5:0x3ec]
---
Predecessors: [0xfc]
Successors: [0x3ed, 0x3f1]
---
0x3d5 JUMPDEST
0x3d6 PUSH1 0x0
0x3d8 DUP1
0x3d9 SLOAD
0x3da CALLER
0x3db PUSH1 0x1
0x3dd PUSH1 0xa0
0x3df PUSH1 0x2
0x3e1 EXP
0x3e2 SUB
0x3e3 SWAP1
0x3e4 DUP2
0x3e5 AND
0x3e6 SWAP2
0x3e7 AND
0x3e8 EQ
0x3e9 PUSH2 0x3f1
0x3ec JUMPI
---
0x3d5: JUMPDEST 
0x3d6: V353 = 0x0
0x3d9: V354 = S[0x0]
0x3da: V355 = CALLER
0x3db: V356 = 0x1
0x3dd: V357 = 0xa0
0x3df: V358 = 0x2
0x3e1: V359 = EXP 0x2 0xa0
0x3e2: V360 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3e5: V361 = AND 0xffffffffffffffffffffffffffffffffffffffff V355
0x3e7: V362 = AND V354 0xffffffffffffffffffffffffffffffffffffffff
0x3e8: V363 = EQ V362 V361
0x3e9: V364 = 0x3f1
0x3ec: JUMPI 0x3f1 V363
---
Entry stack: [V12, 0x104]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x104, 0x0]

================================

Block 0x3ed
[0x3ed:0x3f0]
---
Predecessors: [0x3d5]
Successors: []
---
0x3ed PUSH1 0x0
0x3ef DUP1
0x3f0 REVERT
---
0x3ed: V365 = 0x0
0x3f0: REVERT 0x0 0x0
---
Entry stack: [V12, 0x104, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x104, 0x0]

================================

Block 0x3f1
[0x3f1:0x404]
---
Predecessors: [0x3d5]
Successors: [0x405, 0x409]
---
0x3f1 JUMPDEST
0x3f2 PUSH1 0x0
0x3f4 SLOAD
0x3f5 PUSH1 0xa0
0x3f7 PUSH1 0x2
0x3f9 EXP
0x3fa SWAP1
0x3fb DIV
0x3fc PUSH1 0xff
0x3fe AND
0x3ff ISZERO
0x400 ISZERO
0x401 PUSH2 0x409
0x404 JUMPI
---
0x3f1: JUMPDEST 
0x3f2: V366 = 0x0
0x3f4: V367 = S[0x0]
0x3f5: V368 = 0xa0
0x3f7: V369 = 0x2
0x3f9: V370 = EXP 0x2 0xa0
0x3fb: V371 = DIV V367 0x10000000000000000000000000000000000000000
0x3fc: V372 = 0xff
0x3fe: V373 = AND 0xff V371
0x3ff: V374 = ISZERO V373
0x400: V375 = ISZERO V374
0x401: V376 = 0x409
0x404: JUMPI 0x409 V375
---
Entry stack: [V12, 0x104, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x104, 0x0]

================================

Block 0x405
[0x405:0x408]
---
Predecessors: [0x3f1]
Successors: []
---
0x405 PUSH1 0x0
0x407 DUP1
0x408 REVERT
---
0x405: V377 = 0x0
0x408: REVERT 0x0 0x0
---
Entry stack: [V12, 0x104, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x104, 0x0]

================================

Block 0x409
[0x409:0x456]
---
Predecessors: [0x3f1]
Successors: [0x457]
---
0x409 JUMPDEST
0x40a PUSH1 0x0
0x40c DUP1
0x40d SLOAD
0x40e PUSH21 0xff0000000000000000000000000000000000000000
0x424 NOT
0x425 AND
0x426 SWAP1
0x427 SSTORE
0x428 PUSH32 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
0x449 PUSH1 0x40
0x44b MLOAD
0x44c PUSH1 0x40
0x44e MLOAD
0x44f DUP1
0x450 SWAP2
0x451 SUB
0x452 SWAP1
0x453 LOG1
0x454 POP
0x455 PUSH1 0x1
---
0x409: JUMPDEST 
0x40a: V378 = 0x0
0x40d: V379 = S[0x0]
0x40e: V380 = 0xff0000000000000000000000000000000000000000
0x424: V381 = NOT 0xff0000000000000000000000000000000000000000
0x425: V382 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V379
0x427: S[0x0] = V382
0x428: V383 = 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
0x449: V384 = 0x40
0x44b: V385 = M[0x40]
0x44c: V386 = 0x40
0x44e: V387 = M[0x40]
0x451: V388 = SUB V385 V387
0x453: LOG V387 V388 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
0x455: V389 = 0x1
---
Entry stack: [V12, 0x104, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V12, 0x104, 0x1]

================================

Block 0x457
[0x457:0x457]
---
Predecessors: [0x409]
Successors: [0x458]
---
0x457 JUMPDEST
---
0x457: JUMPDEST 
---
Entry stack: [V12, 0x104, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x104, 0x1]

================================

Block 0x458
[0x458:0x458]
---
Predecessors: [0x457]
Successors: [0x459]
---
0x458 JUMPDEST
---
0x458: JUMPDEST 
---
Entry stack: [V12, 0x104, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x104, 0x1]

================================

Block 0x459
[0x459:0x45b]
---
Predecessors: [0x458]
Successors: [0x104]
---
0x459 JUMPDEST
0x45a SWAP1
0x45b JUMP
---
0x459: JUMPDEST 
0x45b: JUMP 0x104
---
Entry stack: [V12, 0x104, 0x1]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x1]

================================

Block 0x45c
[0x45c:0x475]
---
Predecessors: [0x118]
Successors: [0x476, 0x47a]
---
0x45c JUMPDEST
0x45d PUSH1 0x1
0x45f SLOAD
0x460 PUSH1 0x0
0x462 SWAP1
0x463 CALLER
0x464 PUSH1 0x1
0x466 PUSH1 0xa0
0x468 PUSH1 0x2
0x46a EXP
0x46b SUB
0x46c SWAP1
0x46d DUP2
0x46e AND
0x46f SWAP2
0x470 AND
0x471 EQ
0x472 PUSH2 0x47a
0x475 JUMPI
---
0x45c: JUMPDEST 
0x45d: V390 = 0x1
0x45f: V391 = S[0x1]
0x460: V392 = 0x0
0x463: V393 = CALLER
0x464: V394 = 0x1
0x466: V395 = 0xa0
0x468: V396 = 0x2
0x46a: V397 = EXP 0x2 0xa0
0x46b: V398 = SUB 0x10000000000000000000000000000000000000000 0x1
0x46e: V399 = AND 0xffffffffffffffffffffffffffffffffffffffff V393
0x470: V400 = AND V391 0xffffffffffffffffffffffffffffffffffffffff
0x471: V401 = EQ V400 V399
0x472: V402 = 0x47a
0x475: JUMPI 0x47a V401
---
Entry stack: [V12, 0xef, V98]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0xef, V98, 0x0]

================================

Block 0x476
[0x476:0x479]
---
Predecessors: [0x45c]
Successors: []
---
0x476 PUSH1 0x0
0x478 DUP1
0x479 REVERT
---
0x476: V403 = 0x0
0x479: REVERT 0x0 0x0
---
Entry stack: [V12, 0xef, V98, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V98, 0x0]

================================

Block 0x47a
[0x47a:0x49c]
---
Predecessors: [0x45c]
Successors: [0x9ee]
---
0x47a JUMPDEST
0x47b POP
0x47c PUSH1 0x0
0x47e DUP2
0x47f DUP2
0x480 MSTORE
0x481 PUSH1 0x3
0x483 PUSH1 0x20
0x485 MSTORE
0x486 PUSH1 0x40
0x488 SWAP1
0x489 SHA3
0x48a SLOAD
0x48b PUSH1 0x1
0x48d PUSH1 0xa0
0x48f PUSH1 0x2
0x491 EXP
0x492 SUB
0x493 AND
0x494 PUSH2 0x49d
0x497 DUP3
0x498 CALLVALUE
0x499 PUSH2 0x9ee
0x49c JUMP
---
0x47a: JUMPDEST 
0x47c: V404 = 0x0
0x480: M[0x0] = V98
0x481: V405 = 0x3
0x483: V406 = 0x20
0x485: M[0x20] = 0x3
0x486: V407 = 0x40
0x489: V408 = SHA3 0x0 0x40
0x48a: V409 = S[V408]
0x48b: V410 = 0x1
0x48d: V411 = 0xa0
0x48f: V412 = 0x2
0x491: V413 = EXP 0x2 0xa0
0x492: V414 = SUB 0x10000000000000000000000000000000000000000 0x1
0x493: V415 = AND 0xffffffffffffffffffffffffffffffffffffffff V409
0x494: V416 = 0x49d
0x498: V417 = CALLVALUE
0x499: V418 = 0x9ee
0x49c: JUMP 0x9ee
---
Entry stack: [V12, 0xef, V98, 0x0]
Stack pops: 2
Stack additions: [S1, V415, 0x49d, S1, V417]
Exit stack: [V12, 0xef, V98, V415, 0x49d, V98, V417]

================================

Block 0x49d
[0x49d:0x4a7]
---
Predecessors: [0xb17]
Successors: [0xb23]
---
0x49d JUMPDEST
0x49e POP
0x49f PUSH2 0x4a8
0x4a2 DUP2
0x4a3 DUP4
0x4a4 PUSH2 0xb23
0x4a7 JUMP
---
0x49d: JUMPDEST 
0x49f: V419 = 0x4a8
0x4a4: V420 = 0xb23
0x4a7: JUMP 0xb23
---
Entry stack: [V12, 0xef, V98, V415, S0]
Stack pops: 3
Stack additions: [S2, S1, 0x4a8, S1, S2]
Exit stack: [V12, 0xef, V98, V415, 0x4a8, V415, V98]

================================

Block 0x4a8
[0x4a8:0x4a8]
---
Predecessors: [0x4a9, 0x84e, 0xbfe]
Successors: [0x4a9]
---
0x4a8 JUMPDEST
---
0x4a8: JUMPDEST 
---
Entry stack: [V12, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x4a9
[0x4a9:0x4ac]
---
Predecessors: [0x4a8]
Successors: [0xef, 0x4a8, 0x735]
---
0x4a9 JUMPDEST
0x4aa POP
0x4ab POP
0x4ac JUMP
---
0x4a9: JUMPDEST 
0x4ac: JUMP S2
---
Entry stack: [V12, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, S6, S5, S4, S3]

================================

Block 0x4ad
[0x4ad:0x4bc]
---
Predecessors: [0x130]
Successors: [0x104]
---
0x4ad JUMPDEST
0x4ae PUSH1 0x0
0x4b0 SLOAD
0x4b1 PUSH1 0xa0
0x4b3 PUSH1 0x2
0x4b5 EXP
0x4b6 SWAP1
0x4b7 DIV
0x4b8 PUSH1 0xff
0x4ba AND
0x4bb DUP2
0x4bc JUMP
---
0x4ad: JUMPDEST 
0x4ae: V421 = 0x0
0x4b0: V422 = S[0x0]
0x4b1: V423 = 0xa0
0x4b3: V424 = 0x2
0x4b5: V425 = EXP 0x2 0xa0
0x4b7: V426 = DIV V422 0x10000000000000000000000000000000000000000
0x4b8: V427 = 0xff
0x4ba: V428 = AND 0xff V426
0x4bc: JUMP 0x104
---
Entry stack: [V12, 0x104]
Stack pops: 1
Stack additions: [S0, V428]
Exit stack: [V12, 0x104, V428]

================================

Block 0x4bd
[0x4bd:0x4da]
---
Predecessors: [0x157]
Successors: [0x4db, 0x4f1]
---
0x4bd JUMPDEST
0x4be PUSH1 0x1
0x4c0 SLOAD
0x4c1 PUSH1 0x0
0x4c3 SLOAD
0x4c4 PUSH1 0x1
0x4c6 PUSH1 0xa0
0x4c8 PUSH1 0x2
0x4ca EXP
0x4cb SUB
0x4cc SWAP2
0x4cd DUP3
0x4ce AND
0x4cf SWAP2
0x4d0 CALLER
0x4d1 DUP2
0x4d2 AND
0x4d3 SWAP2
0x4d4 AND
0x4d5 EQ
0x4d6 DUP1
0x4d7 PUSH2 0x4f1
0x4da JUMPI
---
0x4bd: JUMPDEST 
0x4be: V429 = 0x1
0x4c0: V430 = S[0x1]
0x4c1: V431 = 0x0
0x4c3: V432 = S[0x0]
0x4c4: V433 = 0x1
0x4c6: V434 = 0xa0
0x4c8: V435 = 0x2
0x4ca: V436 = EXP 0x2 0xa0
0x4cb: V437 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ce: V438 = AND 0xffffffffffffffffffffffffffffffffffffffff V430
0x4d0: V439 = CALLER
0x4d2: V440 = AND 0xffffffffffffffffffffffffffffffffffffffff V439
0x4d4: V441 = AND V432 0xffffffffffffffffffffffffffffffffffffffff
0x4d5: V442 = EQ V441 V440
0x4d7: V443 = 0x4f1
0x4da: JUMPI 0x4f1 V442
---
Entry stack: [V12, 0xef]
Stack pops: 0
Stack additions: [V438, V442]
Exit stack: [V12, 0xef, V438, V442]

================================

Block 0x4db
[0x4db:0x4f0]
---
Predecessors: [0x4bd]
Successors: [0x4f1]
---
0x4db POP
0x4dc DUP1
0x4dd PUSH1 0x1
0x4df PUSH1 0xa0
0x4e1 PUSH1 0x2
0x4e3 EXP
0x4e4 SUB
0x4e5 AND
0x4e6 CALLER
0x4e7 PUSH1 0x1
0x4e9 PUSH1 0xa0
0x4eb PUSH1 0x2
0x4ed EXP
0x4ee SUB
0x4ef AND
0x4f0 EQ
---
0x4dd: V444 = 0x1
0x4df: V445 = 0xa0
0x4e1: V446 = 0x2
0x4e3: V447 = EXP 0x2 0xa0
0x4e4: V448 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4e5: V449 = AND 0xffffffffffffffffffffffffffffffffffffffff V438
0x4e6: V450 = CALLER
0x4e7: V451 = 0x1
0x4e9: V452 = 0xa0
0x4eb: V453 = 0x2
0x4ed: V454 = EXP 0x2 0xa0
0x4ee: V455 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ef: V456 = AND 0xffffffffffffffffffffffffffffffffffffffff V450
0x4f0: V457 = EQ V456 V449
---
Entry stack: [V12, 0xef, V438, V442]
Stack pops: 2
Stack additions: [S1, V457]
Exit stack: [V12, 0xef, V438, V457]

================================

Block 0x4f1
[0x4f1:0x4f7]
---
Predecessors: [0x4bd, 0x4db]
Successors: [0x4f8, 0x4fc]
---
0x4f1 JUMPDEST
0x4f2 ISZERO
0x4f3 ISZERO
0x4f4 PUSH2 0x4fc
0x4f7 JUMPI
---
0x4f1: JUMPDEST 
0x4f2: V458 = ISZERO S0
0x4f3: V459 = ISZERO V458
0x4f4: V460 = 0x4fc
0x4f7: JUMPI 0x4fc V459
---
Entry stack: [V12, 0xef, V438, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xef, V438]

================================

Block 0x4f8
[0x4f8:0x4fb]
---
Predecessors: [0x4f1]
Successors: []
---
0x4f8 PUSH1 0x0
0x4fa DUP1
0x4fb REVERT
---
0x4f8: V461 = 0x0
0x4fb: REVERT 0x0 0x0
---
Entry stack: [V12, 0xef, V438]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V438]

================================

Block 0x4fc
[0x4fc:0x534]
---
Predecessors: [0x4f1]
Successors: [0x535, 0x539]
---
0x4fc JUMPDEST
0x4fd DUP1
0x4fe PUSH1 0x1
0x500 PUSH1 0xa0
0x502 PUSH1 0x2
0x504 EXP
0x505 SUB
0x506 AND
0x507 PUSH2 0x8fc
0x50a ADDRESS
0x50b PUSH1 0x1
0x50d PUSH1 0xa0
0x50f PUSH1 0x2
0x511 EXP
0x512 SUB
0x513 AND
0x514 BALANCE
0x515 SWAP1
0x516 DUP2
0x517 ISZERO
0x518 MUL
0x519 SWAP1
0x51a PUSH1 0x40
0x51c MLOAD
0x51d PUSH1 0x0
0x51f PUSH1 0x40
0x521 MLOAD
0x522 DUP1
0x523 DUP4
0x524 SUB
0x525 DUP2
0x526 DUP6
0x527 DUP9
0x528 DUP9
0x529 CALL
0x52a SWAP4
0x52b POP
0x52c POP
0x52d POP
0x52e POP
0x52f ISZERO
0x530 ISZERO
0x531 PUSH2 0x539
0x534 JUMPI
---
0x4fc: JUMPDEST 
0x4fe: V462 = 0x1
0x500: V463 = 0xa0
0x502: V464 = 0x2
0x504: V465 = EXP 0x2 0xa0
0x505: V466 = SUB 0x10000000000000000000000000000000000000000 0x1
0x506: V467 = AND 0xffffffffffffffffffffffffffffffffffffffff V438
0x507: V468 = 0x8fc
0x50a: V469 = ADDRESS
0x50b: V470 = 0x1
0x50d: V471 = 0xa0
0x50f: V472 = 0x2
0x511: V473 = EXP 0x2 0xa0
0x512: V474 = SUB 0x10000000000000000000000000000000000000000 0x1
0x513: V475 = AND 0xffffffffffffffffffffffffffffffffffffffff V469
0x514: V476 = BALANCE V475
0x517: V477 = ISZERO V476
0x518: V478 = MUL V477 0x8fc
0x51a: V479 = 0x40
0x51c: V480 = M[0x40]
0x51d: V481 = 0x0
0x51f: V482 = 0x40
0x521: V483 = M[0x40]
0x524: V484 = SUB V480 V483
0x529: V485 = CALL V478 V467 V476 V483 V484 V483 0x0
0x52f: V486 = ISZERO V485
0x530: V487 = ISZERO V486
0x531: V488 = 0x539
0x534: JUMPI 0x539 V487
---
Entry stack: [V12, 0xef, V438]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xef, V438]

================================

Block 0x535
[0x535:0x538]
---
Predecessors: [0x4fc]
Successors: []
---
0x535 PUSH1 0x0
0x537 DUP1
0x538 REVERT
---
0x535: V489 = 0x0
0x538: REVERT 0x0 0x0
---
Entry stack: [V12, 0xef, V438]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V438]

================================

Block 0x539
[0x539:0x539]
---
Predecessors: [0x4fc, 0x799]
Successors: [0x53a]
---
0x539 JUMPDEST
---
0x539: JUMPDEST 
---
Entry stack: [V12, 0xef, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, S0]

================================

Block 0x53a
[0x53a:0x53c]
---
Predecessors: [0x539]
Successors: [0xef]
---
0x53a JUMPDEST
0x53b POP
0x53c JUMP
---
0x53a: JUMPDEST 
0x53c: JUMP 0xef
---
Entry stack: [V12, 0xef, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x53d
[0x53d:0x545]
---
Predecessors: [0x16c]
Successors: [0x104]
---
0x53d JUMPDEST
0x53e PUSH1 0x4
0x540 SLOAD
0x541 PUSH1 0xff
0x543 AND
0x544 DUP2
0x545 JUMP
---
0x53d: JUMPDEST 
0x53e: V490 = 0x4
0x540: V491 = S[0x4]
0x541: V492 = 0xff
0x543: V493 = AND 0xff V491
0x545: JUMP 0x104
---
Entry stack: [V12, 0x104]
Stack pops: 1
Stack additions: [S0, V493]
Exit stack: [V12, 0x104, V493]

================================

Block 0x546
[0x546:0x564]
---
Predecessors: [0x193]
Successors: [0xb92]
---
0x546 JUMPDEST
0x547 PUSH1 0x0
0x549 DUP2
0x54a DUP2
0x54b MSTORE
0x54c PUSH1 0x3
0x54e PUSH1 0x20
0x550 MSTORE
0x551 PUSH1 0x40
0x553 DUP2
0x554 SHA3
0x555 DUP2
0x556 SWAP1
0x557 DUP2
0x558 SWAP1
0x559 DUP2
0x55a SWAP1
0x55b DUP2
0x55c SWAP1
0x55d PUSH2 0x565
0x560 DUP2
0x561 PUSH2 0xb92
0x564 JUMP
---
0x546: JUMPDEST 
0x547: V494 = 0x0
0x54b: M[0x0] = V142
0x54c: V495 = 0x3
0x54e: V496 = 0x20
0x550: M[0x20] = 0x3
0x551: V497 = 0x40
0x554: V498 = SHA3 0x0 0x40
0x55d: V499 = 0x565
0x561: V500 = 0xb92
0x564: JUMP 0xb92
---
Entry stack: [V12, 0x19e, V142]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, 0x0, 0x0, 0x0, V498, 0x565, V498]
Exit stack: [V12, 0x19e, V142, 0x0, 0x0, 0x0, 0x0, 0x0, V498, 0x565, V498]

================================

Block 0x565
[0x565:0x56b]
---
Predecessors: [0xbb2]
Successors: [0x56c, 0x570]
---
0x565 JUMPDEST
0x566 ISZERO
0x567 ISZERO
0x568 PUSH2 0x570
0x56b JUMPI
---
0x565: JUMPDEST 
0x566: V501 = ISZERO S0
0x567: V502 = ISZERO V501
0x568: V503 = 0x570
0x56b: JUMPI 0x570 V502
---
Entry stack: [V12, 0xef, V98, V415, 0x49d, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xef, V98, V415, 0x49d, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x56c
[0x56c:0x56f]
---
Predecessors: [0x565]
Successors: []
---
0x56c PUSH1 0x0
0x56e DUP1
0x56f REVERT
---
0x56c: V504 = 0x0
0x56f: REVERT 0x0 0x0
---
Entry stack: [V12, 0xef, V98, V415, 0x49d, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V98, V415, 0x49d, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x570
[0x570:0x5cc]
---
Predecessors: [0x565]
Successors: [0x5cd]
---
0x570 JUMPDEST
0x571 DUP1
0x572 SLOAD
0x573 PUSH1 0x1
0x575 DUP3
0x576 ADD
0x577 SLOAD
0x578 PUSH1 0x2
0x57a DUP4
0x57b ADD
0x57c SLOAD
0x57d PUSH1 0x1
0x57f PUSH1 0xa0
0x581 PUSH1 0x2
0x583 EXP
0x584 SUB
0x585 SWAP1
0x586 SWAP3
0x587 AND
0x588 SWAP8
0x589 POP
0x58a PUSH1 0x1
0x58c PUSH1 0x80
0x58e PUSH1 0x2
0x590 EXP
0x591 SUB
0x592 DUP1
0x593 DUP3
0x594 AND
0x595 SWAP8
0x596 POP
0x597 PUSH17 0x100000000000000000000000000000000
0x5a9 SWAP1
0x5aa SWAP2
0x5ab DIV
0x5ac AND
0x5ad SWAP5
0x5ae POP
0x5af PUSH8 0xffffffffffffffff
0x5b8 DUP1
0x5b9 DUP3
0x5ba AND
0x5bb SWAP5
0x5bc POP
0x5bd PUSH9 0x10000000000000000
0x5c7 SWAP1
0x5c8 SWAP2
0x5c9 DIV
0x5ca AND
0x5cb SWAP2
0x5cc POP
---
0x570: JUMPDEST 
0x572: V505 = S[S0]
0x573: V506 = 0x1
0x576: V507 = ADD S0 0x1
0x577: V508 = S[V507]
0x578: V509 = 0x2
0x57b: V510 = ADD S0 0x2
0x57c: V511 = S[V510]
0x57d: V512 = 0x1
0x57f: V513 = 0xa0
0x581: V514 = 0x2
0x583: V515 = EXP 0x2 0xa0
0x584: V516 = SUB 0x10000000000000000000000000000000000000000 0x1
0x587: V517 = AND V505 0xffffffffffffffffffffffffffffffffffffffff
0x58a: V518 = 0x1
0x58c: V519 = 0x80
0x58e: V520 = 0x2
0x590: V521 = EXP 0x2 0x80
0x591: V522 = SUB 0x100000000000000000000000000000000 0x1
0x594: V523 = AND V508 0xffffffffffffffffffffffffffffffff
0x597: V524 = 0x100000000000000000000000000000000
0x5ab: V525 = DIV V508 0x100000000000000000000000000000000
0x5ac: V526 = AND V525 0xffffffffffffffffffffffffffffffff
0x5af: V527 = 0xffffffffffffffff
0x5ba: V528 = AND V511 0xffffffffffffffff
0x5bd: V529 = 0x10000000000000000
0x5c9: V530 = DIV V511 0x10000000000000000
0x5ca: V531 = AND V530 0xffffffffffffffff
---
Entry stack: [V12, 0xef, V98, V415, 0x49d, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [V517, V523, V526, V528, V531, S0]
Exit stack: [V12, 0xef, V98, V415, 0x49d, S8, S7, S6, V517, V523, V526, V528, V531, S0]

================================

Block 0x5cd
[0x5cd:0x5d6]
---
Predecessors: [0x570]
Successors: [0x19e]
---
0x5cd JUMPDEST
0x5ce POP
0x5cf SWAP2
0x5d0 SWAP4
0x5d1 SWAP6
0x5d2 SWAP1
0x5d3 SWAP3
0x5d4 SWAP5
0x5d5 POP
0x5d6 JUMP
---
0x5cd: JUMPDEST 
0x5d6: JUMP S7
---
Entry stack: [V12, 0xef, V98, V415, 0x49d, S8, S7, S6, V517, V523, V526, V528, V531, S0]
Stack pops: 8
Stack additions: [S5, S4, S3, S2, S1]
Exit stack: [V12, 0xef, V98, V415, 0x49d, S8, V517, V523, V526, V528, V531]

================================

Block 0x5d7
[0x5d7:0x5dc]
---
Predecessors: [0x1e4]
Successors: [0x1ec]
---
0x5d7 JUMPDEST
0x5d8 PUSH1 0x2
0x5da SLOAD
0x5db DUP2
0x5dc JUMP
---
0x5d7: JUMPDEST 
0x5d8: V532 = 0x2
0x5da: V533 = S[0x2]
0x5dc: JUMP 0x1ec
---
Entry stack: [V12, 0x1ec]
Stack pops: 1
Stack additions: [S0, V533]
Exit stack: [V12, 0x1ec, V533]

================================

Block 0x5dd
[0x5dd:0x5f4]
---
Predecessors: [0x209]
Successors: [0x5f5, 0x5f9]
---
0x5dd JUMPDEST
0x5de PUSH1 0x0
0x5e0 DUP1
0x5e1 SLOAD
0x5e2 CALLER
0x5e3 PUSH1 0x1
0x5e5 PUSH1 0xa0
0x5e7 PUSH1 0x2
0x5e9 EXP
0x5ea SUB
0x5eb SWAP1
0x5ec DUP2
0x5ed AND
0x5ee SWAP2
0x5ef AND
0x5f0 EQ
0x5f1 PUSH2 0x5f9
0x5f4 JUMPI
---
0x5dd: JUMPDEST 
0x5de: V534 = 0x0
0x5e1: V535 = S[0x0]
0x5e2: V536 = CALLER
0x5e3: V537 = 0x1
0x5e5: V538 = 0xa0
0x5e7: V539 = 0x2
0x5e9: V540 = EXP 0x2 0xa0
0x5ea: V541 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ed: V542 = AND 0xffffffffffffffffffffffffffffffffffffffff V536
0x5ef: V543 = AND V535 0xffffffffffffffffffffffffffffffffffffffff
0x5f0: V544 = EQ V543 V542
0x5f1: V545 = 0x5f9
0x5f4: JUMPI 0x5f9 V544
---
Entry stack: [V12, 0x104]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x104, 0x0]

================================

Block 0x5f5
[0x5f5:0x5f8]
---
Predecessors: [0x5dd]
Successors: []
---
0x5f5 PUSH1 0x0
0x5f7 DUP1
0x5f8 REVERT
---
0x5f5: V546 = 0x0
0x5f8: REVERT 0x0 0x0
---
Entry stack: [V12, 0x104, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x104, 0x0]

================================

Block 0x5f9
[0x5f9:0x60b]
---
Predecessors: [0x5dd]
Successors: [0x60c, 0x610]
---
0x5f9 JUMPDEST
0x5fa PUSH1 0x0
0x5fc SLOAD
0x5fd PUSH1 0xa0
0x5ff PUSH1 0x2
0x601 EXP
0x602 SWAP1
0x603 DIV
0x604 PUSH1 0xff
0x606 AND
0x607 ISZERO
0x608 PUSH2 0x610
0x60b JUMPI
---
0x5f9: JUMPDEST 
0x5fa: V547 = 0x0
0x5fc: V548 = S[0x0]
0x5fd: V549 = 0xa0
0x5ff: V550 = 0x2
0x601: V551 = EXP 0x2 0xa0
0x603: V552 = DIV V548 0x10000000000000000000000000000000000000000
0x604: V553 = 0xff
0x606: V554 = AND 0xff V552
0x607: V555 = ISZERO V554
0x608: V556 = 0x610
0x60b: JUMPI 0x610 V555
---
Entry stack: [V12, 0x104, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x104, 0x0]

================================

Block 0x60c
[0x60c:0x60f]
---
Predecessors: [0x5f9]
Successors: []
---
0x60c PUSH1 0x0
0x60e DUP1
0x60f REVERT
---
0x60c: V557 = 0x0
0x60f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x104, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x104, 0x0]

================================

Block 0x610
[0x610:0x663]
---
Predecessors: [0x5f9]
Successors: [0x664]
---
0x610 JUMPDEST
0x611 PUSH1 0x0
0x613 DUP1
0x614 SLOAD
0x615 PUSH21 0xff0000000000000000000000000000000000000000
0x62b NOT
0x62c AND
0x62d PUSH1 0xa0
0x62f PUSH1 0x2
0x631 EXP
0x632 OR
0x633 SWAP1
0x634 SSTORE
0x635 PUSH32 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
0x656 PUSH1 0x40
0x658 MLOAD
0x659 PUSH1 0x40
0x65b MLOAD
0x65c DUP1
0x65d SWAP2
0x65e SUB
0x65f SWAP1
0x660 LOG1
0x661 POP
0x662 PUSH1 0x1
---
0x610: JUMPDEST 
0x611: V558 = 0x0
0x614: V559 = S[0x0]
0x615: V560 = 0xff0000000000000000000000000000000000000000
0x62b: V561 = NOT 0xff0000000000000000000000000000000000000000
0x62c: V562 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V559
0x62d: V563 = 0xa0
0x62f: V564 = 0x2
0x631: V565 = EXP 0x2 0xa0
0x632: V566 = OR 0x10000000000000000000000000000000000000000 V562
0x634: S[0x0] = V566
0x635: V567 = 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
0x656: V568 = 0x40
0x658: V569 = M[0x40]
0x659: V570 = 0x40
0x65b: V571 = M[0x40]
0x65e: V572 = SUB V569 V571
0x660: LOG V571 V572 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
0x662: V573 = 0x1
---
Entry stack: [V12, 0x104, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V12, 0x104, 0x1]

================================

Block 0x664
[0x664:0x664]
---
Predecessors: [0x610]
Successors: [0x665]
---
0x664 JUMPDEST
---
0x664: JUMPDEST 
---
Entry stack: [V12, 0x104, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x104, 0x1]

================================

Block 0x665
[0x665:0x665]
---
Predecessors: [0x664]
Successors: [0x666]
---
0x665 JUMPDEST
---
0x665: JUMPDEST 
---
Entry stack: [V12, 0x104, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x104, 0x1]

================================

Block 0x666
[0x666:0x668]
---
Predecessors: [0x665]
Successors: [0x104]
---
0x666 JUMPDEST
0x667 SWAP1
0x668 JUMP
---
0x666: JUMPDEST 
0x668: JUMP 0x104
---
Entry stack: [V12, 0x104, 0x1]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x1]

================================

Block 0x669
[0x669:0x67d]
---
Predecessors: [0x230]
Successors: [0x67e, 0x682]
---
0x669 JUMPDEST
0x66a PUSH1 0x0
0x66c DUP1
0x66d SLOAD
0x66e PUSH1 0xa0
0x670 PUSH1 0x2
0x672 EXP
0x673 SWAP1
0x674 DIV
0x675 PUSH1 0xff
0x677 AND
0x678 ISZERO
0x679 ISZERO
0x67a PUSH2 0x682
0x67d JUMPI
---
0x669: JUMPDEST 
0x66a: V574 = 0x0
0x66d: V575 = S[0x0]
0x66e: V576 = 0xa0
0x670: V577 = 0x2
0x672: V578 = EXP 0x2 0xa0
0x674: V579 = DIV V575 0x10000000000000000000000000000000000000000
0x675: V580 = 0xff
0x677: V581 = AND 0xff V579
0x678: V582 = ISZERO V581
0x679: V583 = ISZERO V582
0x67a: V584 = 0x682
0x67d: JUMPI 0x682 V583
---
Entry stack: [V12, 0xef, V198]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0xef, V198, 0x0]

================================

Block 0x67e
[0x67e:0x681]
---
Predecessors: [0x669]
Successors: []
---
0x67e PUSH1 0x0
0x680 DUP1
0x681 REVERT
---
0x67e: V585 = 0x0
0x681: REVERT 0x0 0x0
---
Entry stack: [V12, 0xef, V198, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V198, 0x0]

================================

Block 0x682
[0x682:0x698]
---
Predecessors: [0x669]
Successors: [0x699, 0x69d]
---
0x682 JUMPDEST
0x683 PUSH1 0x0
0x685 SLOAD
0x686 CALLER
0x687 PUSH1 0x1
0x689 PUSH1 0xa0
0x68b PUSH1 0x2
0x68d EXP
0x68e SUB
0x68f SWAP1
0x690 DUP2
0x691 AND
0x692 SWAP2
0x693 AND
0x694 EQ
0x695 PUSH2 0x69d
0x698 JUMPI
---
0x682: JUMPDEST 
0x683: V586 = 0x0
0x685: V587 = S[0x0]
0x686: V588 = CALLER
0x687: V589 = 0x1
0x689: V590 = 0xa0
0x68b: V591 = 0x2
0x68d: V592 = EXP 0x2 0xa0
0x68e: V593 = SUB 0x10000000000000000000000000000000000000000 0x1
0x691: V594 = AND 0xffffffffffffffffffffffffffffffffffffffff V588
0x693: V595 = AND V587 0xffffffffffffffffffffffffffffffffffffffff
0x694: V596 = EQ V595 V594
0x695: V597 = 0x69d
0x698: JUMPI 0x69d V596
---
Entry stack: [V12, 0xef, V198, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V198, 0x0]

================================

Block 0x699
[0x699:0x69c]
---
Predecessors: [0x682]
Successors: []
---
0x699 PUSH1 0x0
0x69b DUP1
0x69c REVERT
---
0x699: V598 = 0x0
0x69c: REVERT 0x0 0x0
---
Entry stack: [V12, 0xef, V198, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V198, 0x0]

================================

Block 0x69d
[0x69d:0x6b4]
---
Predecessors: [0x682]
Successors: [0xb92]
---
0x69d JUMPDEST
0x69e POP
0x69f PUSH1 0x0
0x6a1 DUP2
0x6a2 DUP2
0x6a3 MSTORE
0x6a4 PUSH1 0x3
0x6a6 PUSH1 0x20
0x6a8 MSTORE
0x6a9 PUSH1 0x40
0x6ab SWAP1
0x6ac SHA3
0x6ad PUSH2 0x6b5
0x6b0 DUP2
0x6b1 PUSH2 0xb92
0x6b4 JUMP
---
0x69d: JUMPDEST 
0x69f: V599 = 0x0
0x6a3: M[0x0] = V198
0x6a4: V600 = 0x3
0x6a6: V601 = 0x20
0x6a8: M[0x20] = 0x3
0x6a9: V602 = 0x40
0x6ac: V603 = SHA3 0x0 0x40
0x6ad: V604 = 0x6b5
0x6b1: V605 = 0xb92
0x6b4: JUMP 0xb92
---
Entry stack: [V12, 0xef, V198, 0x0]
Stack pops: 2
Stack additions: [S1, V603, 0x6b5, V603]
Exit stack: [V12, 0xef, V198, V603, 0x6b5, V603]

================================

Block 0x6b5
[0x6b5:0x6bb]
---
Predecessors: [0xbb2]
Successors: [0x6bc, 0x6c0]
---
0x6b5 JUMPDEST
0x6b6 ISZERO
0x6b7 ISZERO
0x6b8 PUSH2 0x6c0
0x6bb JUMPI
---
0x6b5: JUMPDEST 
0x6b6: V606 = ISZERO S0
0x6b7: V607 = ISZERO V606
0x6b8: V608 = 0x6c0
0x6bb: JUMPI 0x6c0 V607
---
Entry stack: [V12, 0xef, V98, V415, 0x49d, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xef, V98, V415, 0x49d, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x6bc
[0x6bc:0x6bf]
---
Predecessors: [0x6b5]
Successors: []
---
0x6bc PUSH1 0x0
0x6be DUP1
0x6bf REVERT
---
0x6bc: V609 = 0x0
0x6bf: REVERT 0x0 0x0
---
Entry stack: [V12, 0xef, V98, V415, 0x49d, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V98, V415, 0x49d, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x6c0
[0x6c0:0x6d5]
---
Predecessors: [0x6b5]
Successors: [0xbb7]
---
0x6c0 JUMPDEST
0x6c1 DUP1
0x6c2 SLOAD
0x6c3 PUSH2 0x4a8
0x6c6 SWAP1
0x6c7 DUP4
0x6c8 SWAP1
0x6c9 PUSH1 0x1
0x6cb PUSH1 0xa0
0x6cd PUSH1 0x2
0x6cf EXP
0x6d0 SUB
0x6d1 AND
0x6d2 PUSH2 0xbb7
0x6d5 JUMP
---
0x6c0: JUMPDEST 
0x6c2: V610 = S[S0]
0x6c3: V611 = 0x4a8
0x6c9: V612 = 0x1
0x6cb: V613 = 0xa0
0x6cd: V614 = 0x2
0x6cf: V615 = EXP 0x2 0xa0
0x6d0: V616 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6d1: V617 = AND 0xffffffffffffffffffffffffffffffffffffffff V610
0x6d2: V618 = 0xbb7
0x6d5: JUMP 0xbb7
---
Entry stack: [V12, 0xef, V98, V415, 0x49d, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x4a8, S1, V617]
Exit stack: [V12, 0xef, V98, V415, 0x49d, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x4a8, S1, V617]

================================

Block 0x6d6
[0x6d6:0x6d6]
---
Predecessors: []
Successors: [0x6d7]
---
0x6d6 JUMPDEST
---
0x6d6: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x6d7
[0x6d7:0x6d7]
---
Predecessors: [0x6d6]
Successors: [0x6d8]
---
0x6d7 JUMPDEST
---
0x6d7: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x6d8
[0x6d8:0x6d8]
---
Predecessors: [0x6d7]
Successors: [0x6d9]
---
0x6d8 JUMPDEST
---
0x6d8: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x6d9
[0x6d9:0x6dc]
---
Predecessors: [0x6d8]
Successors: []
Has unresolved jump.
---
0x6d9 JUMPDEST
0x6da POP
0x6db POP
0x6dc JUMP
---
0x6d9: JUMPDEST 
0x6dc: JUMP S2
---
Entry stack: []
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0x6dd
[0x6dd:0x6eb]
---
Predecessors: [0x248]
Successors: [0x250]
---
0x6dd JUMPDEST
0x6de PUSH1 0x0
0x6e0 SLOAD
0x6e1 PUSH1 0x1
0x6e3 PUSH1 0xa0
0x6e5 PUSH1 0x2
0x6e7 EXP
0x6e8 SUB
0x6e9 AND
0x6ea DUP2
0x6eb JUMP
---
0x6dd: JUMPDEST 
0x6de: V619 = 0x0
0x6e0: V620 = S[0x0]
0x6e1: V621 = 0x1
0x6e3: V622 = 0xa0
0x6e5: V623 = 0x2
0x6e7: V624 = EXP 0x2 0xa0
0x6e8: V625 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6e9: V626 = AND 0xffffffffffffffffffffffffffffffffffffffff V620
0x6eb: JUMP 0x250
---
Entry stack: [V12, 0x250]
Stack pops: 1
Stack additions: [S0, V626]
Exit stack: [V12, 0x250, V626]

================================

Block 0x6ec
[0x6ec:0x703]
---
Predecessors: [0x277]
Successors: [0xb92]
---
0x6ec JUMPDEST
0x6ed PUSH1 0x0
0x6ef DUP2
0x6f0 DUP2
0x6f1 MSTORE
0x6f2 PUSH1 0x3
0x6f4 PUSH1 0x20
0x6f6 MSTORE
0x6f7 PUSH1 0x40
0x6f9 DUP2
0x6fa SHA3
0x6fb SWAP1
0x6fc PUSH2 0x704
0x6ff DUP3
0x700 PUSH2 0xb92
0x703 JUMP
---
0x6ec: JUMPDEST 
0x6ed: V627 = 0x0
0x6f1: M[0x0] = V225
0x6f2: V628 = 0x3
0x6f4: V629 = 0x20
0x6f6: M[0x20] = 0x3
0x6f7: V630 = 0x40
0x6fa: V631 = SHA3 0x0 0x40
0x6fc: V632 = 0x704
0x700: V633 = 0xb92
0x703: JUMP 0xb92
---
Entry stack: [V12, 0xef, V225]
Stack pops: 1
Stack additions: [S0, V631, 0x0, 0x704, V631]
Exit stack: [V12, 0xef, V225, V631, 0x0, 0x704, V631]

================================

Block 0x704
[0x704:0x70a]
---
Predecessors: [0xbb2]
Successors: [0x70b, 0x70f]
---
0x704 JUMPDEST
0x705 ISZERO
0x706 ISZERO
0x707 PUSH2 0x70f
0x70a JUMPI
---
0x704: JUMPDEST 
0x705: V634 = ISZERO S0
0x706: V635 = ISZERO V634
0x707: V636 = 0x70f
0x70a: JUMPI 0x70f V635
---
Entry stack: [V12, 0xef, V98, V415, 0x49d, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xef, V98, V415, 0x49d, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x70b
[0x70b:0x70e]
---
Predecessors: [0x704]
Successors: []
---
0x70b PUSH1 0x0
0x70d DUP1
0x70e REVERT
---
0x70b: V637 = 0x0
0x70e: REVERT 0x0 0x0
---
Entry stack: [V12, 0xef, V98, V415, 0x49d, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V98, V415, 0x49d, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x70f
[0x70f:0x726]
---
Predecessors: [0x704]
Successors: [0x727, 0x72b]
---
0x70f JUMPDEST
0x710 POP
0x711 DUP1
0x712 SLOAD
0x713 PUSH1 0x1
0x715 PUSH1 0xa0
0x717 PUSH1 0x2
0x719 EXP
0x71a SUB
0x71b SWAP1
0x71c DUP2
0x71d AND
0x71e SWAP1
0x71f CALLER
0x720 AND
0x721 DUP2
0x722 EQ
0x723 PUSH2 0x72b
0x726 JUMPI
---
0x70f: JUMPDEST 
0x712: V638 = S[S1]
0x713: V639 = 0x1
0x715: V640 = 0xa0
0x717: V641 = 0x2
0x719: V642 = EXP 0x2 0xa0
0x71a: V643 = SUB 0x10000000000000000000000000000000000000000 0x1
0x71d: V644 = AND 0xffffffffffffffffffffffffffffffffffffffff V638
0x71f: V645 = CALLER
0x720: V646 = AND V645 0xffffffffffffffffffffffffffffffffffffffff
0x722: V647 = EQ V644 V646
0x723: V648 = 0x72b
0x726: JUMPI 0x72b V647
---
Entry stack: [V12, 0xef, V98, V415, 0x49d, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, V644]
Exit stack: [V12, 0xef, V98, V415, 0x49d, S8, S7, S6, S5, S4, S3, S2, S1, V644]

================================

Block 0x727
[0x727:0x72a]
---
Predecessors: [0x70f]
Successors: []
---
0x727 PUSH1 0x0
0x729 DUP1
0x72a REVERT
---
0x727: V649 = 0x0
0x72a: REVERT 0x0 0x0
---
Entry stack: [V12, 0xef, V98, V415, 0x49d, S8, S7, S6, S5, S4, S3, S2, S1, V644]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V98, V415, 0x49d, S8, S7, S6, S5, S4, S3, S2, S1, V644]

================================

Block 0x72b
[0x72b:0x734]
---
Predecessors: [0x70f]
Successors: [0xbb7]
---
0x72b JUMPDEST
0x72c PUSH2 0x735
0x72f DUP4
0x730 DUP3
0x731 PUSH2 0xbb7
0x734 JUMP
---
0x72b: JUMPDEST 
0x72c: V650 = 0x735
0x731: V651 = 0xbb7
0x734: JUMP 0xbb7
---
Entry stack: [V12, 0xef, V98, V415, 0x49d, S8, S7, S6, S5, S4, S3, S2, S1, V644]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x735, S2, S0]
Exit stack: [V12, 0xef, V98, V415, 0x49d, S8, S7, S6, S5, S4, S3, S2, S1, V644, 0x735, S2, V644]

================================

Block 0x735
[0x735:0x735]
---
Predecessors: [0x4a9, 0xbfe]
Successors: [0x736]
---
0x735 JUMPDEST
---
0x735: JUMPDEST 
---
Entry stack: [V12, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S3, S2, S1, S0]

================================

Block 0x736
[0x736:0x73a]
---
Predecessors: [0x735]
Successors: [0xef]
---
0x736 JUMPDEST
0x737 POP
0x738 POP
0x739 POP
0x73a JUMP
---
0x736: JUMPDEST 
0x73a: JUMP S3
---
Entry stack: [V12, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12]

================================

Block 0x73b
[0x73b:0x751]
---
Predecessors: [0x28f]
Successors: [0xb92]
---
0x73b JUMPDEST
0x73c PUSH1 0x0
0x73e DUP2
0x73f DUP2
0x740 MSTORE
0x741 PUSH1 0x3
0x743 PUSH1 0x20
0x745 MSTORE
0x746 PUSH1 0x40
0x748 DUP2
0x749 SHA3
0x74a PUSH2 0x752
0x74d DUP2
0x74e PUSH2 0xb92
0x751 JUMP
---
0x73b: JUMPDEST 
0x73c: V652 = 0x0
0x740: M[0x0] = V233
0x741: V653 = 0x3
0x743: V654 = 0x20
0x745: M[0x20] = 0x3
0x746: V655 = 0x40
0x749: V656 = SHA3 0x0 0x40
0x74a: V657 = 0x752
0x74e: V658 = 0xb92
0x751: JUMP 0xb92
---
Entry stack: [V12, 0x1ec, V233]
Stack pops: 1
Stack additions: [S0, 0x0, V656, 0x752, V656]
Exit stack: [V12, 0x1ec, V233, 0x0, V656, 0x752, V656]

================================

Block 0x752
[0x752:0x758]
---
Predecessors: [0xbb2]
Successors: [0x759, 0x75d]
---
0x752 JUMPDEST
0x753 ISZERO
0x754 ISZERO
0x755 PUSH2 0x75d
0x758 JUMPI
---
0x752: JUMPDEST 
0x753: V659 = ISZERO S0
0x754: V660 = ISZERO V659
0x755: V661 = 0x75d
0x758: JUMPI 0x75d V660
---
Entry stack: [V12, 0xef, V98, V415, 0x49d, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xef, V98, V415, 0x49d, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x759
[0x759:0x75c]
---
Predecessors: [0x752]
Successors: []
---
0x759 PUSH1 0x0
0x75b DUP1
0x75c REVERT
---
0x759: V662 = 0x0
0x75c: REVERT 0x0 0x0
---
Entry stack: [V12, 0xef, V98, V415, 0x49d, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V98, V415, 0x49d, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x75d
[0x75d:0x765]
---
Predecessors: [0x752]
Successors: [0xc02]
---
0x75d JUMPDEST
0x75e PUSH2 0x766
0x761 DUP2
0x762 PUSH2 0xc02
0x765 JUMP
---
0x75d: JUMPDEST 
0x75e: V663 = 0x766
0x762: V664 = 0xc02
0x765: JUMP 0xc02
---
Entry stack: [V12, 0xef, V98, V415, 0x49d, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x766, S0]
Exit stack: [V12, 0xef, V98, V415, 0x49d, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x766, S0]

================================

Block 0x766
[0x766:0x768]
---
Predecessors: [0x769, 0xd2a]
Successors: [0x769]
---
0x766 JUMPDEST
0x767 SWAP2
0x768 POP
---
0x766: JUMPDEST 
---
Entry stack: [V12, 0xef, V98, V415, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S0, S1]
Exit stack: [V12, 0xef, V98, V415, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S0, S1]

================================

Block 0x769
[0x769:0x76e]
---
Predecessors: [0x766]
Successors: [0x1ec, 0x766, 0xa1e]
---
0x769 JUMPDEST
0x76a POP
0x76b SWAP2
0x76c SWAP1
0x76d POP
0x76e JUMP
---
0x769: JUMPDEST 
0x76e: JUMP S3
---
Entry stack: [V12, 0xef, V98, V415, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V12, 0xef, V98, V415, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S1]

================================

Block 0x76f
[0x76f:0x77d]
---
Predecessors: [0x2b7]
Successors: [0x250]
---
0x76f JUMPDEST
0x770 PUSH1 0x1
0x772 SLOAD
0x773 PUSH1 0x1
0x775 PUSH1 0xa0
0x777 PUSH1 0x2
0x779 EXP
0x77a SUB
0x77b AND
0x77c DUP2
0x77d JUMP
---
0x76f: JUMPDEST 
0x770: V665 = 0x1
0x772: V666 = S[0x1]
0x773: V667 = 0x1
0x775: V668 = 0xa0
0x777: V669 = 0x2
0x779: V670 = EXP 0x2 0xa0
0x77a: V671 = SUB 0x10000000000000000000000000000000000000000 0x1
0x77b: V672 = AND 0xffffffffffffffffffffffffffffffffffffffff V666
0x77d: JUMP 0x250
---
Entry stack: [V12, 0x250]
Stack pops: 1
Stack additions: [S0, V672]
Exit stack: [V12, 0x250, V672]

================================

Block 0x77e
[0x77e:0x794]
---
Predecessors: [0x2e6]
Successors: [0x795, 0x799]
---
0x77e JUMPDEST
0x77f PUSH1 0x0
0x781 SLOAD
0x782 CALLER
0x783 PUSH1 0x1
0x785 PUSH1 0xa0
0x787 PUSH1 0x2
0x789 EXP
0x78a SUB
0x78b SWAP1
0x78c DUP2
0x78d AND
0x78e SWAP2
0x78f AND
0x790 EQ
0x791 PUSH2 0x799
0x794 JUMPI
---
0x77e: JUMPDEST 
0x77f: V673 = 0x0
0x781: V674 = S[0x0]
0x782: V675 = CALLER
0x783: V676 = 0x1
0x785: V677 = 0xa0
0x787: V678 = 0x2
0x789: V679 = EXP 0x2 0xa0
0x78a: V680 = SUB 0x10000000000000000000000000000000000000000 0x1
0x78d: V681 = AND 0xffffffffffffffffffffffffffffffffffffffff V675
0x78f: V682 = AND V674 0xffffffffffffffffffffffffffffffffffffffff
0x790: V683 = EQ V682 V681
0x791: V684 = 0x799
0x794: JUMPI 0x799 V683
---
Entry stack: [V12, 0xef, V273]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V273]

================================

Block 0x795
[0x795:0x798]
---
Predecessors: [0x77e]
Successors: []
---
0x795 PUSH1 0x0
0x797 DUP1
0x798 REVERT
---
0x795: V685 = 0x0
0x798: REVERT 0x0 0x0
---
Entry stack: [V12, 0xef, V273]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V273]

================================

Block 0x799
[0x799:0x7a8]
---
Predecessors: [0x77e]
Successors: [0x539, 0x7a9]
---
0x799 JUMPDEST
0x79a PUSH1 0x1
0x79c PUSH1 0xa0
0x79e PUSH1 0x2
0x7a0 EXP
0x7a1 SUB
0x7a2 DUP2
0x7a3 AND
0x7a4 ISZERO
0x7a5 PUSH2 0x539
0x7a8 JUMPI
---
0x799: JUMPDEST 
0x79a: V686 = 0x1
0x79c: V687 = 0xa0
0x79e: V688 = 0x2
0x7a0: V689 = EXP 0x2 0xa0
0x7a1: V690 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7a3: V691 = AND V273 0xffffffffffffffffffffffffffffffffffffffff
0x7a4: V692 = ISZERO V691
0x7a5: V693 = 0x539
0x7a8: JUMPI 0x539 V692
---
Entry stack: [V12, 0xef, V273]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xef, V273]

================================

Block 0x7a9
[0x7a9:0x7d0]
---
Predecessors: [0x799]
Successors: [0x7d1]
---
0x7a9 PUSH1 0x0
0x7ab DUP1
0x7ac SLOAD
0x7ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7c2 NOT
0x7c3 AND
0x7c4 PUSH1 0x1
0x7c6 PUSH1 0xa0
0x7c8 PUSH1 0x2
0x7ca EXP
0x7cb SUB
0x7cc DUP4
0x7cd AND
0x7ce OR
0x7cf SWAP1
0x7d0 SSTORE
---
0x7a9: V694 = 0x0
0x7ac: V695 = S[0x0]
0x7ad: V696 = 0xffffffffffffffffffffffffffffffffffffffff
0x7c2: V697 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x7c3: V698 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V695
0x7c4: V699 = 0x1
0x7c6: V700 = 0xa0
0x7c8: V701 = 0x2
0x7ca: V702 = EXP 0x2 0xa0
0x7cb: V703 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7cd: V704 = AND V273 0xffffffffffffffffffffffffffffffffffffffff
0x7ce: V705 = OR V704 V698
0x7d0: S[0x0] = V705
---
Entry stack: [V12, 0xef, V273]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xef, V273]

================================

Block 0x7d1
[0x7d1:0x7d1]
---
Predecessors: [0x7a9]
Successors: [0x7d2]
---
0x7d1 JUMPDEST
---
0x7d1: JUMPDEST 
---
Entry stack: [V12, 0xef, V273]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V273]

================================

Block 0x7d2
[0x7d2:0x7d2]
---
Predecessors: [0x7d1]
Successors: [0x7d3]
---
0x7d2 JUMPDEST
---
0x7d2: JUMPDEST 
---
Entry stack: [V12, 0xef, V273]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V273]

================================

Block 0x7d3
[0x7d3:0x7d5]
---
Predecessors: [0x7d2]
Successors: [0xef]
---
0x7d3 JUMPDEST
0x7d4 POP
0x7d5 JUMP
---
0x7d3: JUMPDEST 
0x7d5: JUMP 0xef
---
Entry stack: [V12, 0xef, V273]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x7d6
[0x7d6:0x834]
---
Predecessors: [0x35f]
Successors: [0x835, 0x839]
---
0x7d6 JUMPDEST
0x7d7 PUSH1 0x1
0x7d9 SLOAD
0x7da PUSH1 0x1
0x7dc PUSH1 0xa0
0x7de PUSH1 0x2
0x7e0 EXP
0x7e1 SUB
0x7e2 AND
0x7e3 PUSH4 0x23b872dd
0x7e8 DUP4
0x7e9 ADDRESS
0x7ea DUP5
0x7eb PUSH1 0x40
0x7ed MLOAD
0x7ee PUSH1 0xe0
0x7f0 PUSH1 0x2
0x7f2 EXP
0x7f3 PUSH4 0xffffffff
0x7f8 DUP7
0x7f9 AND
0x7fa MUL
0x7fb DUP2
0x7fc MSTORE
0x7fd PUSH1 0x1
0x7ff PUSH1 0xa0
0x801 PUSH1 0x2
0x803 EXP
0x804 SUB
0x805 SWAP4
0x806 DUP5
0x807 AND
0x808 PUSH1 0x4
0x80a DUP3
0x80b ADD
0x80c MSTORE
0x80d SWAP2
0x80e SWAP1
0x80f SWAP3
0x810 AND
0x811 PUSH1 0x24
0x813 DUP3
0x814 ADD
0x815 MSTORE
0x816 PUSH1 0x44
0x818 DUP2
0x819 ADD
0x81a SWAP2
0x81b SWAP1
0x81c SWAP2
0x81d MSTORE
0x81e PUSH1 0x64
0x820 ADD
0x821 PUSH1 0x0
0x823 PUSH1 0x40
0x825 MLOAD
0x826 DUP1
0x827 DUP4
0x828 SUB
0x829 DUP2
0x82a PUSH1 0x0
0x82c DUP8
0x82d DUP1
0x82e EXTCODESIZE
0x82f ISZERO
0x830 ISZERO
0x831 PUSH2 0x839
0x834 JUMPI
---
0x7d6: JUMPDEST 
0x7d7: V706 = 0x1
0x7d9: V707 = S[0x1]
0x7da: V708 = 0x1
0x7dc: V709 = 0xa0
0x7de: V710 = 0x2
0x7e0: V711 = EXP 0x2 0xa0
0x7e1: V712 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7e2: V713 = AND 0xffffffffffffffffffffffffffffffffffffffff V707
0x7e3: V714 = 0x23b872dd
0x7e9: V715 = ADDRESS
0x7eb: V716 = 0x40
0x7ed: V717 = M[0x40]
0x7ee: V718 = 0xe0
0x7f0: V719 = 0x2
0x7f2: V720 = EXP 0x2 0xe0
0x7f3: V721 = 0xffffffff
0x7f9: V722 = AND 0x23b872dd 0xffffffff
0x7fa: V723 = MUL 0x23b872dd 0x100000000000000000000000000000000000000000000000000000000
0x7fc: M[V717] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x7fd: V724 = 0x1
0x7ff: V725 = 0xa0
0x801: V726 = 0x2
0x803: V727 = EXP 0x2 0xa0
0x804: V728 = SUB 0x10000000000000000000000000000000000000000 0x1
0x807: V729 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x808: V730 = 0x4
0x80b: V731 = ADD V717 0x4
0x80c: M[V731] = V729
0x810: V732 = AND 0xffffffffffffffffffffffffffffffffffffffff V715
0x811: V733 = 0x24
0x814: V734 = ADD V717 0x24
0x815: M[V734] = V732
0x816: V735 = 0x44
0x819: V736 = ADD V717 0x44
0x81d: M[V736] = V65
0x81e: V737 = 0x64
0x820: V738 = ADD 0x64 V717
0x821: V739 = 0x0
0x823: V740 = 0x40
0x825: V741 = M[0x40]
0x828: V742 = SUB V738 V741
0x82a: V743 = 0x0
0x82e: V744 = EXTCODESIZE V713
0x82f: V745 = ISZERO V744
0x830: V746 = ISZERO V745
0x831: V747 = 0x839
0x834: JUMPI 0x839 V746
---
Entry stack: [V12, 0xef, V65, V67, V69, V71, V79, V1116, 0x369, V79, V65]
Stack pops: 2
Stack additions: [S1, S0, V713, 0x23b872dd, V738, 0x0, V741, V742, V741, 0x0, V713]
Exit stack: [V12, 0xef, V65, V67, V69, V71, V79, V1116, 0x369, V79, V65, V713, 0x23b872dd, V738, 0x0, V741, V742, V741, 0x0, V713]

================================

Block 0x835
[0x835:0x838]
---
Predecessors: [0x7d6]
Successors: []
---
0x835 PUSH1 0x0
0x837 DUP1
0x838 REVERT
---
0x835: V748 = 0x0
0x838: REVERT 0x0 0x0
---
Entry stack: [V12, 0xef, V65, V67, V69, V71, V79, V1116, 0x369, V79, V65, V713, 0x23b872dd, V738, 0x0, V741, V742, V741, 0x0, V713]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V65, V67, V69, V71, V79, V1116, 0x369, V79, V65, V713, 0x23b872dd, V738, 0x0, V741, V742, V741, 0x0, V713]

================================

Block 0x839
[0x839:0x845]
---
Predecessors: [0x7d6, 0xb23]
Successors: [0x846, 0x84a]
---
0x839 JUMPDEST
0x83a PUSH2 0x2c6
0x83d GAS
0x83e SUB
0x83f CALL
0x840 ISZERO
0x841 ISZERO
0x842 PUSH2 0x84a
0x845 JUMPI
---
0x839: JUMPDEST 
0x83a: V749 = 0x2c6
0x83d: V750 = GAS
0x83e: V751 = SUB V750 0x2c6
0x83f: V752 = CALL V751 S0 0x0 S2 S3 S4 0x0
0x840: V753 = ISZERO V752
0x841: V754 = ISZERO V753
0x842: V755 = 0x84a
0x845: JUMPI 0x84a V754
---
Entry stack: [V12, 0xef, V98, V415, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, {0x369, 0x4a8, 0xbca}, S10, S9, S8, {0x23b872dd, 0xa9059cbb}, S6, 0x0, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0xef, V98, V415, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, {0x369, 0x4a8, 0xbca}, S10, S9, S8, {0x23b872dd, 0xa9059cbb}, S6]

================================

Block 0x846
[0x846:0x849]
---
Predecessors: [0x839]
Successors: []
---
0x846 PUSH1 0x0
0x848 DUP1
0x849 REVERT
---
0x846: V756 = 0x0
0x849: REVERT 0x0 0x0
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, {0x369, 0x4a8, 0xbca}, S4, S3, S2, {0x23b872dd, 0xa9059cbb}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, {0x369, 0x4a8, 0xbca}, S4, S3, S2, {0x23b872dd, 0xa9059cbb}, S0]

================================

Block 0x84a
[0x84a:0x84d]
---
Predecessors: [0x839, 0xb79]
Successors: [0x84e]
---
0x84a JUMPDEST
0x84b POP
0x84c POP
0x84d POP
---
0x84a: JUMPDEST 
---
Entry stack: [V12, S12, S11, S10, S9, S8, S7, S6, {0x369, 0x4a8, 0xbca}, S4, S3, S2, {0x23b872dd, 0xa9059cbb}, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, S12, S11, S10, S9, S8, S7, S6, {0x369, 0x4a8, 0xbca}, S4, S3]

================================

Block 0x84e
[0x84e:0x851]
---
Predecessors: [0x84a]
Successors: [0x369, 0x4a8, 0xbca]
---
0x84e JUMPDEST
0x84f POP
0x850 POP
0x851 JUMP
---
0x84e: JUMPDEST 
0x851: JUMP {0x369, 0x4a8, 0xbca}
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, {0x369, 0x4a8, 0xbca}, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3]

================================

Block 0x852
[0x852:0x869]
---
Predecessors: [0x369]
Successors: [0x86a, 0x86e]
---
0x852 JUMPDEST
0x853 PUSH1 0x3c
0x855 DUP2
0x856 PUSH1 0x60
0x858 ADD
0x859 MLOAD
0x85a PUSH8 0xffffffffffffffff
0x863 AND
0x864 LT
0x865 ISZERO
0x866 PUSH2 0x86e
0x869 JUMPI
---
0x852: JUMPDEST 
0x853: V757 = 0x3c
0x856: V758 = 0x60
0x858: V759 = ADD 0x60 V317
0x859: V760 = M[V759]
0x85a: V761 = 0xffffffffffffffff
0x863: V762 = AND 0xffffffffffffffff V760
0x864: V763 = LT V762 0x3c
0x865: V764 = ISZERO V763
0x866: V765 = 0x86e
0x869: JUMPI 0x86e V764
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, V317, 0x3cc, S1, V317]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, V317, 0x3cc, S1, V317]

================================

Block 0x86a
[0x86a:0x86d]
---
Predecessors: [0x852]
Successors: []
---
0x86a PUSH1 0x0
0x86c DUP1
0x86d REVERT
---
0x86a: V766 = 0x0
0x86d: REVERT 0x0 0x0
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, 0x3cc, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, 0x3cc, S1, S0]

================================

Block 0x86e
[0x86e:0x9e9]
---
Predecessors: [0x852]
Successors: [0x9ea]
---
0x86e JUMPDEST
0x86f PUSH1 0x0
0x871 DUP3
0x872 DUP2
0x873 MSTORE
0x874 PUSH1 0x3
0x876 PUSH1 0x20
0x878 MSTORE
0x879 PUSH1 0x40
0x87b SWAP1
0x87c SHA3
0x87d DUP2
0x87e SWAP1
0x87f DUP2
0x880 MLOAD
0x881 DUP2
0x882 SLOAD
0x883 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x898 NOT
0x899 AND
0x89a PUSH1 0x1
0x89c PUSH1 0xa0
0x89e PUSH1 0x2
0x8a0 EXP
0x8a1 SUB
0x8a2 SWAP2
0x8a3 SWAP1
0x8a4 SWAP2
0x8a5 AND
0x8a6 OR
0x8a7 DUP2
0x8a8 SSTORE
0x8a9 PUSH1 0x20
0x8ab DUP3
0x8ac ADD
0x8ad MLOAD
0x8ae PUSH1 0x1
0x8b0 DUP3
0x8b1 ADD
0x8b2 DUP1
0x8b3 SLOAD
0x8b4 PUSH16 0xffffffffffffffffffffffffffffffff
0x8c5 NOT
0x8c6 AND
0x8c7 PUSH1 0x1
0x8c9 PUSH1 0x80
0x8cb PUSH1 0x2
0x8cd EXP
0x8ce SUB
0x8cf SWAP3
0x8d0 SWAP1
0x8d1 SWAP3
0x8d2 AND
0x8d3 SWAP2
0x8d4 SWAP1
0x8d5 SWAP2
0x8d6 OR
0x8d7 SWAP1
0x8d8 SSTORE
0x8d9 PUSH1 0x40
0x8db DUP3
0x8dc ADD
0x8dd MLOAD
0x8de PUSH1 0x1
0x8e0 DUP3
0x8e1 ADD
0x8e2 DUP1
0x8e3 SLOAD
0x8e4 PUSH1 0x1
0x8e6 PUSH1 0x80
0x8e8 PUSH1 0x2
0x8ea EXP
0x8eb SUB
0x8ec SWAP3
0x8ed DUP4
0x8ee AND
0x8ef PUSH17 0x100000000000000000000000000000000
0x901 MUL
0x902 SWAP3
0x903 AND
0x904 SWAP2
0x905 SWAP1
0x906 SWAP2
0x907 OR
0x908 SWAP1
0x909 SSTORE
0x90a PUSH1 0x60
0x90c DUP3
0x90d ADD
0x90e MLOAD
0x90f PUSH1 0x2
0x911 DUP3
0x912 ADD
0x913 DUP1
0x914 SLOAD
0x915 PUSH8 0xffffffffffffffff
0x91e NOT
0x91f AND
0x920 PUSH8 0xffffffffffffffff
0x929 SWAP3
0x92a SWAP1
0x92b SWAP3
0x92c AND
0x92d SWAP2
0x92e SWAP1
0x92f SWAP2
0x930 OR
0x931 SWAP1
0x932 SSTORE
0x933 PUSH1 0x80
0x935 DUP3
0x936 ADD
0x937 MLOAD
0x938 PUSH1 0x2
0x93a SWAP1
0x93b SWAP2
0x93c ADD
0x93d DUP1
0x93e SLOAD
0x93f PUSH8 0xffffffffffffffff
0x948 SWAP3
0x949 SWAP1
0x94a SWAP3
0x94b AND
0x94c PUSH9 0x10000000000000000
0x956 MUL
0x957 PUSH16 0xffffffffffffffff0000000000000000
0x968 NOT
0x969 SWAP1
0x96a SWAP3
0x96b AND
0x96c SWAP2
0x96d SWAP1
0x96e SWAP2
0x96f OR
0x970 SWAP1
0x971 SSTORE
0x972 POP
0x973 PUSH32 0xa9c8dfcda5664a5a124c713e386da27de87432d5b668e79458501eb296389ba7
0x994 DUP3
0x995 PUSH1 0x20
0x997 DUP4
0x998 ADD
0x999 MLOAD
0x99a PUSH1 0x1
0x99c PUSH1 0x80
0x99e PUSH1 0x2
0x9a0 EXP
0x9a1 SUB
0x9a2 AND
0x9a3 DUP4
0x9a4 PUSH1 0x40
0x9a6 ADD
0x9a7 MLOAD
0x9a8 PUSH1 0x1
0x9aa PUSH1 0x80
0x9ac PUSH1 0x2
0x9ae EXP
0x9af SUB
0x9b0 AND
0x9b1 DUP5
0x9b2 PUSH1 0x60
0x9b4 ADD
0x9b5 MLOAD
0x9b6 PUSH8 0xffffffffffffffff
0x9bf AND
0x9c0 PUSH1 0x40
0x9c2 MLOAD
0x9c3 DUP1
0x9c4 DUP6
0x9c5 DUP2
0x9c6 MSTORE
0x9c7 PUSH1 0x20
0x9c9 ADD
0x9ca DUP5
0x9cb DUP2
0x9cc MSTORE
0x9cd PUSH1 0x20
0x9cf ADD
0x9d0 DUP4
0x9d1 DUP2
0x9d2 MSTORE
0x9d3 PUSH1 0x20
0x9d5 ADD
0x9d6 DUP3
0x9d7 DUP2
0x9d8 MSTORE
0x9d9 PUSH1 0x20
0x9db ADD
0x9dc SWAP5
0x9dd POP
0x9de POP
0x9df POP
0x9e0 POP
0x9e1 POP
0x9e2 PUSH1 0x40
0x9e4 MLOAD
0x9e5 DUP1
0x9e6 SWAP2
0x9e7 SUB
0x9e8 SWAP1
0x9e9 LOG1
---
0x86e: JUMPDEST 
0x86f: V767 = 0x0
0x873: M[0x0] = S1
0x874: V768 = 0x3
0x876: V769 = 0x20
0x878: M[0x20] = 0x3
0x879: V770 = 0x40
0x87c: V771 = SHA3 0x0 0x40
0x880: V772 = M[S0]
0x882: V773 = S[V771]
0x883: V774 = 0xffffffffffffffffffffffffffffffffffffffff
0x898: V775 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x899: V776 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V773
0x89a: V777 = 0x1
0x89c: V778 = 0xa0
0x89e: V779 = 0x2
0x8a0: V780 = EXP 0x2 0xa0
0x8a1: V781 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8a5: V782 = AND 0xffffffffffffffffffffffffffffffffffffffff V772
0x8a6: V783 = OR V782 V776
0x8a8: S[V771] = V783
0x8a9: V784 = 0x20
0x8ac: V785 = ADD S0 0x20
0x8ad: V786 = M[V785]
0x8ae: V787 = 0x1
0x8b1: V788 = ADD V771 0x1
0x8b3: V789 = S[V788]
0x8b4: V790 = 0xffffffffffffffffffffffffffffffff
0x8c5: V791 = NOT 0xffffffffffffffffffffffffffffffff
0x8c6: V792 = AND 0xffffffffffffffffffffffffffffffff00000000000000000000000000000000 V789
0x8c7: V793 = 0x1
0x8c9: V794 = 0x80
0x8cb: V795 = 0x2
0x8cd: V796 = EXP 0x2 0x80
0x8ce: V797 = SUB 0x100000000000000000000000000000000 0x1
0x8d2: V798 = AND 0xffffffffffffffffffffffffffffffff V786
0x8d6: V799 = OR V798 V792
0x8d8: S[V788] = V799
0x8d9: V800 = 0x40
0x8dc: V801 = ADD S0 0x40
0x8dd: V802 = M[V801]
0x8de: V803 = 0x1
0x8e1: V804 = ADD V771 0x1
0x8e3: V805 = S[V804]
0x8e4: V806 = 0x1
0x8e6: V807 = 0x80
0x8e8: V808 = 0x2
0x8ea: V809 = EXP 0x2 0x80
0x8eb: V810 = SUB 0x100000000000000000000000000000000 0x1
0x8ee: V811 = AND 0xffffffffffffffffffffffffffffffff V802
0x8ef: V812 = 0x100000000000000000000000000000000
0x901: V813 = MUL 0x100000000000000000000000000000000 V811
0x903: V814 = AND 0xffffffffffffffffffffffffffffffff V805
0x907: V815 = OR V814 V813
0x909: S[V804] = V815
0x90a: V816 = 0x60
0x90d: V817 = ADD S0 0x60
0x90e: V818 = M[V817]
0x90f: V819 = 0x2
0x912: V820 = ADD V771 0x2
0x914: V821 = S[V820]
0x915: V822 = 0xffffffffffffffff
0x91e: V823 = NOT 0xffffffffffffffff
0x91f: V824 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000 V821
0x920: V825 = 0xffffffffffffffff
0x92c: V826 = AND 0xffffffffffffffff V818
0x930: V827 = OR V826 V824
0x932: S[V820] = V827
0x933: V828 = 0x80
0x936: V829 = ADD S0 0x80
0x937: V830 = M[V829]
0x938: V831 = 0x2
0x93c: V832 = ADD V771 0x2
0x93e: V833 = S[V832]
0x93f: V834 = 0xffffffffffffffff
0x94b: V835 = AND 0xffffffffffffffff V830
0x94c: V836 = 0x10000000000000000
0x956: V837 = MUL 0x10000000000000000 V835
0x957: V838 = 0xffffffffffffffff0000000000000000
0x968: V839 = NOT 0xffffffffffffffff0000000000000000
0x96b: V840 = AND V833 0xffffffffffffffffffffffffffffffff0000000000000000ffffffffffffffff
0x96f: V841 = OR V840 V837
0x971: S[V832] = V841
0x973: V842 = 0xa9c8dfcda5664a5a124c713e386da27de87432d5b668e79458501eb296389ba7
0x995: V843 = 0x20
0x998: V844 = ADD S0 0x20
0x999: V845 = M[V844]
0x99a: V846 = 0x1
0x99c: V847 = 0x80
0x99e: V848 = 0x2
0x9a0: V849 = EXP 0x2 0x80
0x9a1: V850 = SUB 0x100000000000000000000000000000000 0x1
0x9a2: V851 = AND 0xffffffffffffffffffffffffffffffff V845
0x9a4: V852 = 0x40
0x9a6: V853 = ADD 0x40 S0
0x9a7: V854 = M[V853]
0x9a8: V855 = 0x1
0x9aa: V856 = 0x80
0x9ac: V857 = 0x2
0x9ae: V858 = EXP 0x2 0x80
0x9af: V859 = SUB 0x100000000000000000000000000000000 0x1
0x9b0: V860 = AND 0xffffffffffffffffffffffffffffffff V854
0x9b2: V861 = 0x60
0x9b4: V862 = ADD 0x60 S0
0x9b5: V863 = M[V862]
0x9b6: V864 = 0xffffffffffffffff
0x9bf: V865 = AND 0xffffffffffffffff V863
0x9c0: V866 = 0x40
0x9c2: V867 = M[0x40]
0x9c6: M[V867] = S1
0x9c7: V868 = 0x20
0x9c9: V869 = ADD 0x20 V867
0x9cc: M[V869] = V851
0x9cd: V870 = 0x20
0x9cf: V871 = ADD 0x20 V869
0x9d2: M[V871] = V860
0x9d3: V872 = 0x20
0x9d5: V873 = ADD 0x20 V871
0x9d8: M[V873] = V865
0x9d9: V874 = 0x20
0x9db: V875 = ADD 0x20 V873
0x9e2: V876 = 0x40
0x9e4: V877 = M[0x40]
0x9e7: V878 = SUB V875 V877
0x9e9: LOG V877 V878 0xa9c8dfcda5664a5a124c713e386da27de87432d5b668e79458501eb296389ba7
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, 0x3cc, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, 0x3cc, S1, S0]

================================

Block 0x9ea
[0x9ea:0x9ed]
---
Predecessors: [0x86e]
Successors: [0x3cc]
---
0x9ea JUMPDEST
0x9eb POP
0x9ec POP
0x9ed JUMP
---
0x9ea: JUMPDEST 
0x9ed: JUMP 0x3cc
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, 0x3cc, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3]

================================

Block 0x9ee
[0x9ee:0xa09]
---
Predecessors: [0x47a]
Successors: [0xb92]
---
0x9ee JUMPDEST
0x9ef PUSH1 0x0
0x9f1 DUP3
0x9f2 DUP2
0x9f3 MSTORE
0x9f4 PUSH1 0x3
0x9f6 PUSH1 0x20
0x9f8 MSTORE
0x9f9 PUSH1 0x40
0x9fb DUP2
0x9fc SHA3
0x9fd DUP2
0x9fe DUP1
0x9ff DUP1
0xa00 DUP1
0xa01 DUP1
0xa02 PUSH2 0xa0a
0xa05 DUP7
0xa06 PUSH2 0xb92
0xa09 JUMP
---
0x9ee: JUMPDEST 
0x9ef: V879 = 0x0
0x9f3: M[0x0] = V98
0x9f4: V880 = 0x3
0x9f6: V881 = 0x20
0x9f8: M[0x20] = 0x3
0x9f9: V882 = 0x40
0x9fc: V883 = SHA3 0x0 0x40
0xa02: V884 = 0xa0a
0xa06: V885 = 0xb92
0xa09: JUMP 0xb92
---
Entry stack: [V12, 0xef, V98, V415, 0x49d, V98, V417]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V883, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa0a, V883]
Exit stack: [V12, 0xef, V98, V415, 0x49d, V98, V417, 0x0, V883, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa0a, V883]

================================

Block 0xa0a
[0xa0a:0xa10]
---
Predecessors: [0xbb2]
Successors: [0xa11, 0xa15]
---
0xa0a JUMPDEST
0xa0b ISZERO
0xa0c ISZERO
0xa0d PUSH2 0xa15
0xa10 JUMPI
---
0xa0a: JUMPDEST 
0xa0b: V886 = ISZERO S0
0xa0c: V887 = ISZERO V886
0xa0d: V888 = 0xa15
0xa10: JUMPI 0xa15 V887
---
Entry stack: [V12, 0xef, V98, V415, 0x49d, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xef, V98, V415, 0x49d, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0xa11
[0xa11:0xa14]
---
Predecessors: [0xa0a]
Successors: []
---
0xa11 PUSH1 0x0
0xa13 DUP1
0xa14 REVERT
---
0xa11: V889 = 0x0
0xa14: REVERT 0x0 0x0
---
Entry stack: [V12, 0xef, V98, V415, 0x49d, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V98, V415, 0x49d, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xa15
[0xa15:0xa1d]
---
Predecessors: [0xa0a]
Successors: [0xc02]
---
0xa15 JUMPDEST
0xa16 PUSH2 0xa1e
0xa19 DUP7
0xa1a PUSH2 0xc02
0xa1d JUMP
---
0xa15: JUMPDEST 
0xa16: V890 = 0xa1e
0xa1a: V891 = 0xc02
0xa1d: JUMP 0xc02
---
Entry stack: [V12, 0xef, V98, V415, 0x49d, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, 0xa1e, S5]
Exit stack: [V12, 0xef, V98, V415, 0x49d, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0xa1e, S5]

================================

Block 0xa1e
[0xa1e:0xa28]
---
Predecessors: [0x769]
Successors: [0xa29, 0xa2d]
---
0xa1e JUMPDEST
0xa1f SWAP5
0xa20 POP
0xa21 DUP5
0xa22 DUP9
0xa23 LT
0xa24 ISZERO
0xa25 PUSH2 0xa2d
0xa28 JUMPI
---
0xa1e: JUMPDEST 
0xa23: V892 = LT S8 S0
0xa24: V893 = ISZERO V892
0xa25: V894 = 0xa2d
0xa28: JUMPI 0xa2d V893
---
Entry stack: [V12, 0xef, V98, V415, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S0, S4, S3, S2, S1]
Exit stack: [V12, 0xef, V98, V415, S10, S9, S8, S7, S6, S0, S4, S3, S2, S1]

================================

Block 0xa29
[0xa29:0xa2c]
---
Predecessors: [0xa1e]
Successors: []
---
0xa29 PUSH1 0x0
0xa2b DUP1
0xa2c REVERT
---
0xa29: V895 = 0x0
0xa2c: REVERT 0x0 0x0
---
Entry stack: [V12, 0xef, V98, V415, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V98, V415, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xa2d
[0xa2d:0xa42]
---
Predecessors: [0xa1e]
Successors: [0xc92]
---
0xa2d JUMPDEST
0xa2e DUP6
0xa2f SLOAD
0xa30 PUSH1 0x1
0xa32 PUSH1 0xa0
0xa34 PUSH1 0x2
0xa36 EXP
0xa37 SUB
0xa38 AND
0xa39 SWAP4
0xa3a POP
0xa3b PUSH2 0xa43
0xa3e DUP10
0xa3f PUSH2 0xc92
0xa42 JUMP
---
0xa2d: JUMPDEST 
0xa2f: V896 = S[S5]
0xa30: V897 = 0x1
0xa32: V898 = 0xa0
0xa34: V899 = 0x2
0xa36: V900 = EXP 0x2 0xa0
0xa37: V901 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa38: V902 = AND 0xffffffffffffffffffffffffffffffffffffffff V896
0xa3b: V903 = 0xa43
0xa3f: V904 = 0xc92
0xa42: JUMP 0xc92
---
Entry stack: [V12, 0xef, V98, V415, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, V902, S2, S1, S0, 0xa43, S8]
Exit stack: [V12, 0xef, V98, V415, S9, S8, S7, S6, S5, S4, V902, S2, S1, S0, 0xa43, S8]

================================

Block 0xa43
[0xa43:0xa4c]
---
Predecessors: [0xcde]
Successors: [0xa4d, 0xa8d]
---
0xa43 JUMPDEST
0xa44 PUSH1 0x0
0xa46 DUP6
0xa47 GT
0xa48 ISZERO
0xa49 PUSH2 0xa8d
0xa4c JUMPI
---
0xa43: JUMPDEST 
0xa44: V905 = 0x0
0xa47: V906 = GT S4 0x0
0xa48: V907 = ISZERO V906
0xa49: V908 = 0xa8d
0xa4c: JUMPI 0xa8d V907
---
Entry stack: [V12, 0xef, V98, V415, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V12, 0xef, V98, V415, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xa4d
[0xa4d:0xa54]
---
Predecessors: [0xa43]
Successors: [0xce1]
---
0xa4d PUSH2 0xa55
0xa50 DUP6
0xa51 PUSH2 0xce1
0xa54 JUMP
---
0xa4d: V909 = 0xa55
0xa51: V910 = 0xce1
0xa54: JUMP 0xce1
---
Entry stack: [V12, 0xef, V98, V415, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0xa55, S4]
Exit stack: [V12, 0xef, V98, V415, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0xa55, S4]

================================

Block 0xa55
[0xa55:0xa88]
---
Predecessors: [0xcf2]
Successors: [0xa89, 0xa8d]
---
0xa55 JUMPDEST
0xa56 SWAP3
0xa57 POP
0xa58 DUP3
0xa59 DUP6
0xa5a SUB
0xa5b SWAP2
0xa5c POP
0xa5d PUSH1 0x1
0xa5f PUSH1 0xa0
0xa61 PUSH1 0x2
0xa63 EXP
0xa64 SUB
0xa65 DUP5
0xa66 AND
0xa67 DUP3
0xa68 ISZERO
0xa69 PUSH2 0x8fc
0xa6c MUL
0xa6d DUP4
0xa6e PUSH1 0x40
0xa70 MLOAD
0xa71 PUSH1 0x0
0xa73 PUSH1 0x40
0xa75 MLOAD
0xa76 DUP1
0xa77 DUP4
0xa78 SUB
0xa79 DUP2
0xa7a DUP6
0xa7b DUP9
0xa7c DUP9
0xa7d CALL
0xa7e SWAP4
0xa7f POP
0xa80 POP
0xa81 POP
0xa82 POP
0xa83 ISZERO
0xa84 ISZERO
0xa85 PUSH2 0xa8d
0xa88 JUMPI
---
0xa55: JUMPDEST 
0xa5a: V911 = SUB S5 V1102
0xa5d: V912 = 0x1
0xa5f: V913 = 0xa0
0xa61: V914 = 0x2
0xa63: V915 = EXP 0x2 0xa0
0xa64: V916 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa66: V917 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0xa68: V918 = ISZERO V911
0xa69: V919 = 0x8fc
0xa6c: V920 = MUL 0x8fc V918
0xa6e: V921 = 0x40
0xa70: V922 = M[0x40]
0xa71: V923 = 0x0
0xa73: V924 = 0x40
0xa75: V925 = M[0x40]
0xa78: V926 = SUB V922 V925
0xa7d: V927 = CALL V920 V917 V911 V925 V926 V925 0x0
0xa83: V928 = ISZERO V927
0xa84: V929 = ISZERO V928
0xa85: V930 = 0xa8d
0xa88: JUMPI 0xa8d V929
---
Entry stack: [V12, 0xef, V98, V415, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1102]
Stack pops: 6
Stack additions: [S5, S4, S0, V911, S1]
Exit stack: [V12, 0xef, V98, V415, S10, S9, S8, S7, S6, S5, S4, V1102, V911, S1]

================================

Block 0xa89
[0xa89:0xa8c]
---
Predecessors: [0xa55]
Successors: []
---
0xa89 PUSH1 0x0
0xa8b DUP1
0xa8c REVERT
---
0xa89: V931 = 0x0
0xa8c: REVERT 0x0 0x0
---
Entry stack: [V12, 0xef, V98, V415, S9, S8, S7, S6, S5, S4, S3, V1102, V911, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V98, V415, S9, S8, S7, S6, S5, S4, S3, V1102, V911, S0]

================================

Block 0xa8d
[0xa8d:0xa8d]
---
Predecessors: [0xa43, 0xa55]
Successors: [0xa8e]
---
0xa8d JUMPDEST
---
0xa8d: JUMPDEST 
---
Entry stack: [V12, 0xef, V98, V415, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V98, V415, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xa8e
[0xa8e:0xabe]
---
Predecessors: [0xa8d]
Successors: [0xabf, 0xac3]
---
0xa8e JUMPDEST
0xa8f POP
0xa90 DUP4
0xa91 DUP8
0xa92 SUB
0xa93 PUSH1 0x1
0xa95 PUSH1 0xa0
0xa97 PUSH1 0x2
0xa99 EXP
0xa9a SUB
0xa9b CALLER
0xa9c AND
0xa9d DUP2
0xa9e ISZERO
0xa9f PUSH2 0x8fc
0xaa2 MUL
0xaa3 DUP3
0xaa4 PUSH1 0x40
0xaa6 MLOAD
0xaa7 PUSH1 0x0
0xaa9 PUSH1 0x40
0xaab MLOAD
0xaac DUP1
0xaad DUP4
0xaae SUB
0xaaf DUP2
0xab0 DUP6
0xab1 DUP9
0xab2 DUP9
0xab3 CALL
0xab4 SWAP4
0xab5 POP
0xab6 POP
0xab7 POP
0xab8 POP
0xab9 ISZERO
0xaba ISZERO
0xabb PUSH2 0xac3
0xabe JUMPI
---
0xa8e: JUMPDEST 
0xa92: V932 = SUB S7 S4
0xa93: V933 = 0x1
0xa95: V934 = 0xa0
0xa97: V935 = 0x2
0xa99: V936 = EXP 0x2 0xa0
0xa9a: V937 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa9b: V938 = CALLER
0xa9c: V939 = AND V938 0xffffffffffffffffffffffffffffffffffffffff
0xa9e: V940 = ISZERO V932
0xa9f: V941 = 0x8fc
0xaa2: V942 = MUL 0x8fc V940
0xaa4: V943 = 0x40
0xaa6: V944 = M[0x40]
0xaa7: V945 = 0x0
0xaa9: V946 = 0x40
0xaab: V947 = M[0x40]
0xaae: V948 = SUB V944 V947
0xab3: V949 = CALL V942 V939 V932 V947 V948 V947 0x0
0xab9: V950 = ISZERO V949
0xaba: V951 = ISZERO V950
0xabb: V952 = 0xac3
0xabe: JUMPI 0xac3 V951
---
Entry stack: [V12, 0xef, V98, V415, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, V932]
Exit stack: [V12, 0xef, V98, V415, S9, S8, S7, S6, S5, S4, S3, S2, S1, V932]

================================

Block 0xabf
[0xabf:0xac2]
---
Predecessors: [0xa8e]
Successors: []
---
0xabf PUSH1 0x0
0xac1 DUP1
0xac2 REVERT
---
0xabf: V953 = 0x0
0xac2: REVERT 0x0 0x0
---
Entry stack: [V12, 0xef, V98, V415, S9, S8, S7, S6, S5, S4, V902, S2, S1, V932]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V98, V415, S9, S8, S7, S6, S5, S4, V902, S2, S1, V932]

================================

Block 0xac3
[0xac3:0xb16]
---
Predecessors: [0xa8e]
Successors: [0xb17]
---
0xac3 JUMPDEST
0xac4 PUSH32 0x4fcc30d90a842164dd58501ab874a101a3749c3d4747139cefe7c876f4ccebd2
0xae5 DUP10
0xae6 DUP7
0xae7 CALLER
0xae8 PUSH1 0x40
0xaea MLOAD
0xaeb SWAP3
0xaec DUP4
0xaed MSTORE
0xaee PUSH1 0x20
0xaf0 DUP4
0xaf1 ADD
0xaf2 SWAP2
0xaf3 SWAP1
0xaf4 SWAP2
0xaf5 MSTORE
0xaf6 PUSH1 0x1
0xaf8 PUSH1 0xa0
0xafa PUSH1 0x2
0xafc EXP
0xafd SUB
0xafe AND
0xaff PUSH1 0x40
0xb01 DUP1
0xb02 DUP4
0xb03 ADD
0xb04 SWAP2
0xb05 SWAP1
0xb06 SWAP2
0xb07 MSTORE
0xb08 PUSH1 0x60
0xb0a SWAP1
0xb0b SWAP2
0xb0c ADD
0xb0d SWAP1
0xb0e MLOAD
0xb0f DUP1
0xb10 SWAP2
0xb11 SUB
0xb12 SWAP1
0xb13 LOG1
0xb14 DUP5
0xb15 SWAP7
0xb16 POP
---
0xac3: JUMPDEST 
0xac4: V954 = 0x4fcc30d90a842164dd58501ab874a101a3749c3d4747139cefe7c876f4ccebd2
0xae7: V955 = CALLER
0xae8: V956 = 0x40
0xaea: V957 = M[0x40]
0xaed: M[V957] = S8
0xaee: V958 = 0x20
0xaf1: V959 = ADD V957 0x20
0xaf5: M[V959] = S4
0xaf6: V960 = 0x1
0xaf8: V961 = 0xa0
0xafa: V962 = 0x2
0xafc: V963 = EXP 0x2 0xa0
0xafd: V964 = SUB 0x10000000000000000000000000000000000000000 0x1
0xafe: V965 = AND 0xffffffffffffffffffffffffffffffffffffffff V955
0xaff: V966 = 0x40
0xb03: V967 = ADD V957 0x40
0xb07: M[V967] = V965
0xb08: V968 = 0x60
0xb0c: V969 = ADD V957 0x60
0xb0e: V970 = M[0x40]
0xb11: V971 = SUB V969 V970
0xb13: LOG V970 V971 0x4fcc30d90a842164dd58501ab874a101a3749c3d4747139cefe7c876f4ccebd2
---
Entry stack: [V12, 0xef, V98, V415, S9, S8, S7, S6, S5, S4, V902, S2, S1, V932]
Stack pops: 9
Stack additions: [S8, S7, S4, S5, S4, S3, S2, S1, S0]
Exit stack: [V12, 0xef, V98, V415, S9, S8, S7, S4, S5, S4, V902, S2, S1, V932]

================================

Block 0xb17
[0xb17:0xb22]
---
Predecessors: [0xac3]
Successors: [0x49d]
---
0xb17 JUMPDEST
0xb18 POP
0xb19 POP
0xb1a POP
0xb1b POP
0xb1c POP
0xb1d POP
0xb1e SWAP3
0xb1f SWAP2
0xb20 POP
0xb21 POP
0xb22 JUMP
---
0xb17: JUMPDEST 
0xb22: JUMP S9
---
Entry stack: [V12, 0xef, V98, V415, S9, S8, S7, S6, S5, S4, V902, S2, S1, S0]
Stack pops: 10
Stack additions: [S6]
Exit stack: [V12, 0xef, V98, V415, S6]

================================

Block 0xb23
[0xb23:0xb74]
---
Predecessors: [0x49d, 0xbc0]
Successors: [0x839, 0xb75]
---
0xb23 JUMPDEST
0xb24 PUSH1 0x1
0xb26 SLOAD
0xb27 PUSH1 0x1
0xb29 PUSH1 0xa0
0xb2b PUSH1 0x2
0xb2d EXP
0xb2e SUB
0xb2f AND
0xb30 PUSH4 0xa9059cbb
0xb35 DUP4
0xb36 DUP4
0xb37 PUSH1 0x40
0xb39 MLOAD
0xb3a PUSH1 0xe0
0xb3c PUSH1 0x2
0xb3e EXP
0xb3f PUSH4 0xffffffff
0xb44 DUP6
0xb45 AND
0xb46 MUL
0xb47 DUP2
0xb48 MSTORE
0xb49 PUSH1 0x1
0xb4b PUSH1 0xa0
0xb4d PUSH1 0x2
0xb4f EXP
0xb50 SUB
0xb51 SWAP1
0xb52 SWAP3
0xb53 AND
0xb54 PUSH1 0x4
0xb56 DUP4
0xb57 ADD
0xb58 MSTORE
0xb59 PUSH1 0x24
0xb5b DUP3
0xb5c ADD
0xb5d MSTORE
0xb5e PUSH1 0x44
0xb60 ADD
0xb61 PUSH1 0x0
0xb63 PUSH1 0x40
0xb65 MLOAD
0xb66 DUP1
0xb67 DUP4
0xb68 SUB
0xb69 DUP2
0xb6a PUSH1 0x0
0xb6c DUP8
0xb6d DUP1
0xb6e EXTCODESIZE
0xb6f ISZERO
0xb70 ISZERO
0xb71 PUSH2 0x839
0xb74 JUMPI
---
0xb23: JUMPDEST 
0xb24: V972 = 0x1
0xb26: V973 = S[0x1]
0xb27: V974 = 0x1
0xb29: V975 = 0xa0
0xb2b: V976 = 0x2
0xb2d: V977 = EXP 0x2 0xa0
0xb2e: V978 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb2f: V979 = AND 0xffffffffffffffffffffffffffffffffffffffff V973
0xb30: V980 = 0xa9059cbb
0xb37: V981 = 0x40
0xb39: V982 = M[0x40]
0xb3a: V983 = 0xe0
0xb3c: V984 = 0x2
0xb3e: V985 = EXP 0x2 0xe0
0xb3f: V986 = 0xffffffff
0xb45: V987 = AND 0xa9059cbb 0xffffffff
0xb46: V988 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xb48: M[V982] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xb49: V989 = 0x1
0xb4b: V990 = 0xa0
0xb4d: V991 = 0x2
0xb4f: V992 = EXP 0x2 0xa0
0xb50: V993 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb53: V994 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0xb54: V995 = 0x4
0xb57: V996 = ADD V982 0x4
0xb58: M[V996] = V994
0xb59: V997 = 0x24
0xb5c: V998 = ADD V982 0x24
0xb5d: M[V998] = S0
0xb5e: V999 = 0x44
0xb60: V1000 = ADD 0x44 V982
0xb61: V1001 = 0x0
0xb63: V1002 = 0x40
0xb65: V1003 = M[0x40]
0xb68: V1004 = SUB V1000 V1003
0xb6a: V1005 = 0x0
0xb6e: V1006 = EXTCODESIZE V979
0xb6f: V1007 = ISZERO V1006
0xb70: V1008 = ISZERO V1007
0xb71: V1009 = 0x839
0xb74: JUMPI 0x839 V1008
---
Entry stack: [V12, 0xef, V98, V415, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x4a8, 0xbca}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V979, 0xa9059cbb, V1000, 0x0, V1003, V1004, V1003, 0x0, V979]
Exit stack: [V12, 0xef, V98, V415, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x4a8, 0xbca}, S1, S0, V979, 0xa9059cbb, V1000, 0x0, V1003, V1004, V1003, 0x0, V979]

================================

Block 0xb75
[0xb75:0xb78]
---
Predecessors: [0xb23]
Successors: []
---
0xb75 PUSH1 0x0
0xb77 DUP1
0xb78 REVERT
---
0xb75: V1010 = 0x0
0xb78: REVERT 0x0 0x0
---
Entry stack: [V12, 0xef, V98, V415, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, {0x4a8, 0xbca}, S10, S9, V979, 0xa9059cbb, V1000, 0x0, V1003, V1004, V1003, 0x0, V979]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V98, V415, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, {0x4a8, 0xbca}, S10, S9, V979, 0xa9059cbb, V1000, 0x0, V1003, V1004, V1003, 0x0, V979]

================================

Block 0xb79
[0xb79:0xb85]
---
Predecessors: []
Successors: [0x84a, 0xb86]
---
0xb79 JUMPDEST
0xb7a PUSH2 0x2c6
0xb7d GAS
0xb7e SUB
0xb7f CALL
0xb80 ISZERO
0xb81 ISZERO
0xb82 PUSH2 0x84a
0xb85 JUMPI
---
0xb79: JUMPDEST 
0xb7a: V1011 = 0x2c6
0xb7d: V1012 = GAS
0xb7e: V1013 = SUB V1012 0x2c6
0xb7f: V1014 = CALL V1013 S0 S1 S2 S3 S4 S5
0xb80: V1015 = ISZERO V1014
0xb81: V1016 = ISZERO V1015
0xb82: V1017 = 0x84a
0xb85: JUMPI 0x84a V1016
---
Entry stack: []
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0xb86
[0xb86:0xb8d]
---
Predecessors: [0xb79]
Successors: [0xb8e]
---
0xb86 PUSH1 0x0
0xb88 DUP1
0xb89 REVERT
0xb8a JUMPDEST
0xb8b POP
0xb8c POP
0xb8d POP
---
0xb86: V1018 = 0x0
0xb89: REVERT 0x0 0x0
0xb8a: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb8e
[0xb8e:0xb91]
---
Predecessors: [0xb86]
Successors: []
Has unresolved jump.
---
0xb8e JUMPDEST
0xb8f POP
0xb90 POP
0xb91 JUMP
---
0xb8e: JUMPDEST 
0xb91: JUMP S2
---
Entry stack: []
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0xb92
[0xb92:0xbb1]
---
Predecessors: [0x546, 0x69d, 0x6ec, 0x73b, 0x9ee]
Successors: [0xbb2]
---
0xb92 JUMPDEST
0xb93 PUSH1 0x2
0xb95 DUP2
0xb96 ADD
0xb97 SLOAD
0xb98 PUSH1 0x0
0xb9a PUSH9 0x10000000000000000
0xba4 SWAP1
0xba5 SWAP2
0xba6 DIV
0xba7 PUSH8 0xffffffffffffffff
0xbb0 AND
0xbb1 GT
---
0xb92: JUMPDEST 
0xb93: V1019 = 0x2
0xb96: V1020 = ADD S0 0x2
0xb97: V1021 = S[V1020]
0xb98: V1022 = 0x0
0xb9a: V1023 = 0x10000000000000000
0xba6: V1024 = DIV V1021 0x10000000000000000
0xba7: V1025 = 0xffffffffffffffff
0xbb0: V1026 = AND 0xffffffffffffffff V1024
0xbb1: V1027 = GT V1026 0x0
---
Entry stack: [V12, 0xef, V98, V415, 0x49d, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x565, 0x6b5, 0x704, 0x752, 0xa0a}, S0]
Stack pops: 1
Stack additions: [S0, V1027]
Exit stack: [V12, 0xef, V98, V415, 0x49d, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x565, 0x6b5, 0x704, 0x752, 0xa0a}, S0, V1027]

================================

Block 0xbb2
[0xbb2:0xbb6]
---
Predecessors: [0xb92]
Successors: [0x565, 0x6b5, 0x704, 0x752, 0xa0a]
---
0xbb2 JUMPDEST
0xbb3 SWAP2
0xbb4 SWAP1
0xbb5 POP
0xbb6 JUMP
---
0xbb2: JUMPDEST 
0xbb6: JUMP {0x565, 0x6b5, 0x704, 0x752, 0xa0a}
---
Entry stack: [V12, 0xef, V98, V415, 0x49d, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x565, 0x6b5, 0x704, 0x752, 0xa0a}, S1, V1027]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, 0xef, V98, V415, 0x49d, S11, S10, S9, S8, S7, S6, S5, S4, S3, V1027]

================================

Block 0xbb7
[0xbb7:0xbbf]
---
Predecessors: [0x6c0, 0x72b]
Successors: [0xc92]
---
0xbb7 JUMPDEST
0xbb8 PUSH2 0xbc0
0xbbb DUP3
0xbbc PUSH2 0xc92
0xbbf JUMP
---
0xbb7: JUMPDEST 
0xbb8: V1028 = 0xbc0
0xbbc: V1029 = 0xc92
0xbbf: JUMP 0xc92
---
Entry stack: [V12, 0xef, V98, V415, 0x49d, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x4a8, 0x735}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0xbc0, S1]
Exit stack: [V12, 0xef, V98, V415, 0x49d, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x4a8, 0x735}, S1, S0, 0xbc0, S1]

================================

Block 0xbc0
[0xbc0:0xbc9]
---
Predecessors: [0xcde]
Successors: [0xb23]
---
0xbc0 JUMPDEST
0xbc1 PUSH2 0xbca
0xbc4 DUP2
0xbc5 DUP4
0xbc6 PUSH2 0xb23
0xbc9 JUMP
---
0xbc0: JUMPDEST 
0xbc1: V1030 = 0xbca
0xbc6: V1031 = 0xb23
0xbc9: JUMP 0xb23
---
Entry stack: [V12, 0xef, V98, V415, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0xbca, S0, S1]
Exit stack: [V12, 0xef, V98, V415, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0xbca, S0, S1]

================================

Block 0xbca
[0xbca:0xbfd]
---
Predecessors: [0x84e]
Successors: [0xbfe]
---
0xbca JUMPDEST
0xbcb PUSH32 0x2809c7e17bf978fbc7194c0a694b638c4215e9140cacc6c38ca36010b45697df
0xbec DUP3
0xbed PUSH1 0x40
0xbef MLOAD
0xbf0 SWAP1
0xbf1 DUP2
0xbf2 MSTORE
0xbf3 PUSH1 0x20
0xbf5 ADD
0xbf6 PUSH1 0x40
0xbf8 MLOAD
0xbf9 DUP1
0xbfa SWAP2
0xbfb SUB
0xbfc SWAP1
0xbfd LOG1
---
0xbca: JUMPDEST 
0xbcb: V1032 = 0x2809c7e17bf978fbc7194c0a694b638c4215e9140cacc6c38ca36010b45697df
0xbed: V1033 = 0x40
0xbef: V1034 = M[0x40]
0xbf2: M[V1034] = S1
0xbf3: V1035 = 0x20
0xbf5: V1036 = ADD 0x20 V1034
0xbf6: V1037 = 0x40
0xbf8: V1038 = M[0x40]
0xbfb: V1039 = SUB V1036 V1038
0xbfd: LOG V1038 V1039 0x2809c7e17bf978fbc7194c0a694b638c4215e9140cacc6c38ca36010b45697df
---
Entry stack: [V12, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xbfe
[0xbfe:0xc01]
---
Predecessors: [0xbca]
Successors: [0xef, 0x4a8, 0x735]
---
0xbfe JUMPDEST
0xbff POP
0xc00 POP
0xc01 JUMP
---
0xbfe: JUMPDEST 
0xc01: JUMP S2
---
Entry stack: [V12, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, S6, S5, S4, S3]

================================

Block 0xc02
[0xc02:0xc29]
---
Predecessors: [0x75d, 0xa15]
Successors: [0xc2a, 0xc48]
---
0xc02 JUMPDEST
0xc03 PUSH1 0x2
0xc05 DUP2
0xc06 ADD
0xc07 SLOAD
0xc08 PUSH1 0x0
0xc0a SWAP1
0xc0b DUP2
0xc0c SWAP1
0xc0d PUSH9 0x10000000000000000
0xc17 SWAP1
0xc18 DIV
0xc19 PUSH8 0xffffffffffffffff
0xc22 AND
0xc23 TIMESTAMP
0xc24 GT
0xc25 ISZERO
0xc26 PUSH2 0xc48
0xc29 JUMPI
---
0xc02: JUMPDEST 
0xc03: V1040 = 0x2
0xc06: V1041 = ADD S0 0x2
0xc07: V1042 = S[V1041]
0xc08: V1043 = 0x0
0xc0d: V1044 = 0x10000000000000000
0xc18: V1045 = DIV V1042 0x10000000000000000
0xc19: V1046 = 0xffffffffffffffff
0xc22: V1047 = AND 0xffffffffffffffff V1045
0xc23: V1048 = TIMESTAMP
0xc24: V1049 = GT V1048 V1047
0xc25: V1050 = ISZERO V1049
0xc26: V1051 = 0xc48
0xc29: JUMPI 0xc48 V1050
---
Entry stack: [V12, 0xef, V98, V415, 0x49d, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x766, 0xa1e}, S0]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0]
Exit stack: [V12, 0xef, V98, V415, 0x49d, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x766, 0xa1e}, S0, 0x0, 0x0]

================================

Block 0xc2a
[0xc2a:0xc47]
---
Predecessors: [0xc02]
Successors: [0xc48]
---
0xc2a POP
0xc2b PUSH1 0x2
0xc2d DUP3
0xc2e ADD
0xc2f SLOAD
0xc30 PUSH9 0x10000000000000000
0xc3a SWAP1
0xc3b DIV
0xc3c PUSH8 0xffffffffffffffff
0xc45 AND
0xc46 TIMESTAMP
0xc47 SUB
---
0xc2b: V1052 = 0x2
0xc2e: V1053 = ADD S2 0x2
0xc2f: V1054 = S[V1053]
0xc30: V1055 = 0x10000000000000000
0xc3b: V1056 = DIV V1054 0x10000000000000000
0xc3c: V1057 = 0xffffffffffffffff
0xc45: V1058 = AND 0xffffffffffffffff V1056
0xc46: V1059 = TIMESTAMP
0xc47: V1060 = SUB V1059 V1058
---
Entry stack: [V12, 0xef, V98, V415, 0x49d, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x766, 0xa1e}, S2, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V1060]
Exit stack: [V12, 0xef, V98, V415, 0x49d, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x766, 0xa1e}, S2, 0x0, V1060]

================================

Block 0xc48
[0xc48:0xc88]
---
Predecessors: [0xc02, 0xc2a]
Successors: [0xcf7]
---
0xc48 JUMPDEST
0xc49 PUSH1 0x1
0xc4b DUP4
0xc4c ADD
0xc4d SLOAD
0xc4e PUSH1 0x2
0xc50 DUP5
0xc51 ADD
0xc52 SLOAD
0xc53 PUSH2 0x766
0xc56 SWAP2
0xc57 PUSH1 0x1
0xc59 PUSH1 0x80
0xc5b PUSH1 0x2
0xc5d EXP
0xc5e SUB
0xc5f DUP1
0xc60 DUP3
0xc61 AND
0xc62 SWAP3
0xc63 PUSH17 0x100000000000000000000000000000000
0xc75 SWAP1
0xc76 SWAP3
0xc77 DIV
0xc78 AND
0xc79 SWAP1
0xc7a PUSH8 0xffffffffffffffff
0xc83 AND
0xc84 DUP5
0xc85 PUSH2 0xcf7
0xc88 JUMP
---
0xc48: JUMPDEST 
0xc49: V1061 = 0x1
0xc4c: V1062 = ADD S2 0x1
0xc4d: V1063 = S[V1062]
0xc4e: V1064 = 0x2
0xc51: V1065 = ADD S2 0x2
0xc52: V1066 = S[V1065]
0xc53: V1067 = 0x766
0xc57: V1068 = 0x1
0xc59: V1069 = 0x80
0xc5b: V1070 = 0x2
0xc5d: V1071 = EXP 0x2 0x80
0xc5e: V1072 = SUB 0x100000000000000000000000000000000 0x1
0xc61: V1073 = AND V1063 0xffffffffffffffffffffffffffffffff
0xc63: V1074 = 0x100000000000000000000000000000000
0xc77: V1075 = DIV V1063 0x100000000000000000000000000000000
0xc78: V1076 = AND V1075 0xffffffffffffffffffffffffffffffff
0xc7a: V1077 = 0xffffffffffffffff
0xc83: V1078 = AND 0xffffffffffffffff V1066
0xc85: V1079 = 0xcf7
0xc88: JUMP 0xcf7
---
Entry stack: [V12, 0xef, V98, V415, 0x49d, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x766, 0xa1e}, S2, 0x0, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x766, V1073, V1076, V1078, S0]
Exit stack: [V12, 0xef, V98, V415, 0x49d, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x766, 0xa1e}, S2, 0x0, S0, 0x766, V1073, V1076, V1078, S0]

================================

Block 0xc89
[0xc89:0xc8b]
---
Predecessors: []
Successors: [0xc8c]
---
0xc89 JUMPDEST
0xc8a SWAP2
0xc8b POP
---
0xc89: JUMPDEST 
---
Entry stack: []
Stack pops: 3
Stack additions: [S0, S1]
Exit stack: [S0, S1]

================================

Block 0xc8c
[0xc8c:0xc91]
---
Predecessors: [0xc89]
Successors: []
Has unresolved jump.
---
0xc8c JUMPDEST
0xc8d POP
0xc8e SWAP2
0xc8f SWAP1
0xc90 POP
0xc91 JUMP
---
0xc8c: JUMPDEST 
0xc91: JUMP S3
---
Entry stack: [S1, S0]
Stack pops: 4
Stack additions: [S1]
Exit stack: [S1]

================================

Block 0xc92
[0xc92:0xcdd]
---
Predecessors: [0xa2d, 0xbb7]
Successors: [0xcde]
---
0xc92 JUMPDEST
0xc93 PUSH1 0x0
0xc95 DUP2
0xc96 DUP2
0xc97 MSTORE
0xc98 PUSH1 0x3
0xc9a PUSH1 0x20
0xc9c MSTORE
0xc9d PUSH1 0x40
0xc9f DUP2
0xca0 SHA3
0xca1 DUP1
0xca2 SLOAD
0xca3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcb8 NOT
0xcb9 AND
0xcba DUP2
0xcbb SSTORE
0xcbc PUSH1 0x1
0xcbe DUP2
0xcbf ADD
0xcc0 SWAP2
0xcc1 SWAP1
0xcc2 SWAP2
0xcc3 SSTORE
0xcc4 PUSH1 0x2
0xcc6 ADD
0xcc7 DUP1
0xcc8 SLOAD
0xcc9 PUSH16 0xffffffffffffffffffffffffffffffff
0xcda NOT
0xcdb AND
0xcdc SWAP1
0xcdd SSTORE
---
0xc92: JUMPDEST 
0xc93: V1080 = 0x0
0xc97: M[0x0] = S0
0xc98: V1081 = 0x3
0xc9a: V1082 = 0x20
0xc9c: M[0x20] = 0x3
0xc9d: V1083 = 0x40
0xca0: V1084 = SHA3 0x0 0x40
0xca2: V1085 = S[V1084]
0xca3: V1086 = 0xffffffffffffffffffffffffffffffffffffffff
0xcb8: V1087 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xcb9: V1088 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1085
0xcbb: S[V1084] = V1088
0xcbc: V1089 = 0x1
0xcbf: V1090 = ADD V1084 0x1
0xcc3: S[V1090] = 0x0
0xcc4: V1091 = 0x2
0xcc6: V1092 = ADD 0x2 V1084
0xcc8: V1093 = S[V1092]
0xcc9: V1094 = 0xffffffffffffffffffffffffffffffff
0xcda: V1095 = NOT 0xffffffffffffffffffffffffffffffff
0xcdb: V1096 = AND 0xffffffffffffffffffffffffffffffff00000000000000000000000000000000 V1093
0xcdd: S[V1092] = V1096
---
Entry stack: [V12, 0xef, V98, S15, {0xef, 0x49d}, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0xa43, 0xbc0}, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0xef, V98, S15, {0xef, 0x49d}, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0xa43, 0xbc0}, S0]

================================

Block 0xcde
[0xcde:0xce0]
---
Predecessors: [0xc92]
Successors: [0xa43, 0xbc0]
---
0xcde JUMPDEST
0xcdf POP
0xce0 JUMP
---
0xcde: JUMPDEST 
0xce0: JUMP {0xa43, 0xbc0}
---
Entry stack: [V12, 0xef, V98, S15, {0xef, 0x49d}, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0xa43, 0xbc0}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0xef, V98, S15, {0xef, 0x49d}, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0xce1
[0xce1:0xced]
---
Predecessors: [0xa4d]
Successors: [0xcee]
---
0xce1 JUMPDEST
0xce2 PUSH1 0x2
0xce4 SLOAD
0xce5 PUSH1 0x0
0xce7 SWAP1
0xce8 PUSH2 0x2710
0xceb SWAP1
0xcec DUP4
0xced MUL
---
0xce1: JUMPDEST 
0xce2: V1097 = 0x2
0xce4: V1098 = S[0x2]
0xce5: V1099 = 0x0
0xce8: V1100 = 0x2710
0xced: V1101 = MUL S0 V1098
---
Entry stack: [V12, 0xef, V98, V415, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0xa55, S0]
Stack pops: 1
Stack additions: [S0, 0x0, 0x2710, V1101]
Exit stack: [V12, 0xef, V98, V415, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0xa55, S0, 0x0, 0x2710, V1101]

================================

Block 0xcee
[0xcee:0xcf1]
---
Predecessors: [0xce1]
Successors: [0xcf2]
---
0xcee JUMPDEST
0xcef DIV
0xcf0 SWAP1
0xcf1 POP
---
0xcee: JUMPDEST 
0xcef: V1102 = DIV V1101 0x2710
---
Entry stack: [V12, 0xef, V98, V415, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0xa55, S3, 0x0, 0x2710, V1101]
Stack pops: 3
Stack additions: [V1102]
Exit stack: [V12, 0xef, V98, V415, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0xa55, S3, V1102]

================================

Block 0xcf2
[0xcf2:0xcf6]
---
Predecessors: [0xcee]
Successors: [0xa55]
---
0xcf2 JUMPDEST
0xcf3 SWAP2
0xcf4 SWAP1
0xcf5 POP
0xcf6 JUMP
---
0xcf2: JUMPDEST 
0xcf6: JUMP 0xa55
---
Entry stack: [V12, 0xef, V98, V415, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0xa55, S1, V1102]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, 0xef, V98, V415, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V1102]

================================

Block 0xcf7
[0xcf7:0xd03]
---
Predecessors: [0xc48]
Successors: [0xd04, 0xd0b]
---
0xcf7 JUMPDEST
0xcf8 PUSH1 0x0
0xcfa DUP1
0xcfb DUP1
0xcfc DUP1
0xcfd DUP6
0xcfe DUP6
0xcff LT
0xd00 PUSH2 0xd0b
0xd03 JUMPI
---
0xcf7: JUMPDEST 
0xcf8: V1103 = 0x0
0xcff: V1104 = LT S0 V1078
0xd00: V1105 = 0xd0b
0xd03: JUMPI 0xd0b V1104
---
Entry stack: [V12, 0xef, V98, V415, 0x49d, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x766, 0xa1e}, S7, 0x0, S5, 0x766, V1073, V1076, V1078, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V12, 0xef, V98, V415, 0x49d, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x766, 0xa1e}, S7, 0x0, S5, 0x766, V1073, V1076, V1078, S0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xd04
[0xd04:0xd0a]
---
Predecessors: [0xcf7]
Successors: [0xd29]
---
0xd04 DUP7
0xd05 SWAP4
0xd06 POP
0xd07 PUSH2 0xd29
0xd0a JUMP
---
0xd07: V1106 = 0xd29
0xd0a: JUMP 0xd29
---
Entry stack: [V12, 0xef, V98, V415, 0x49d, S21, S20, S19, S18, S17, S16, S15, S14, S13, {0x766, 0xa1e}, S11, 0x0, S9, 0x766, V1073, V1076, V1078, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S6, S2, S1, S0]
Exit stack: [V12, 0xef, V98, V415, 0x49d, S21, S20, S19, S18, S17, S16, S15, S14, S13, {0x766, 0xa1e}, S11, 0x0, S9, 0x766, V1073, V1076, V1078, S4, V1076, 0x0, 0x0, 0x0]

================================

Block 0xd0b
[0xd0b:0xd1b]
---
Predecessors: [0xcf7]
Successors: [0xd1c, 0xd1d]
---
0xd0b JUMPDEST
0xd0c DUP8
0xd0d DUP8
0xd0e SUB
0xd0f SWAP3
0xd10 POP
0xd11 DUP6
0xd12 DUP6
0xd13 DUP5
0xd14 MUL
0xd15 DUP2
0xd16 ISZERO
0xd17 ISZERO
0xd18 PUSH2 0xd1d
0xd1b JUMPI
---
0xd0b: JUMPDEST 
0xd0e: V1107 = SUB V1076 V1073
0xd14: V1108 = MUL V1107 S4
0xd16: V1109 = ISZERO V1078
0xd17: V1110 = ISZERO V1109
0xd18: V1111 = 0xd1d
0xd1b: JUMPI 0xd1d V1110
---
Entry stack: [V12, 0xef, V98, V415, 0x49d, S21, S20, S19, S18, S17, S16, S15, S14, S13, {0x766, 0xa1e}, S11, 0x0, S9, 0x766, V1073, V1076, V1078, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, V1107, S1, S0, S5, V1108]
Exit stack: [V12, 0xef, V98, V415, 0x49d, S21, S20, S19, S18, S17, S16, S15, S14, S13, {0x766, 0xa1e}, S11, 0x0, S9, 0x766, V1073, V1076, V1078, S4, 0x0, V1107, 0x0, 0x0, V1078, V1108]

================================

Block 0xd1c
[0xd1c:0xd1c]
---
Predecessors: [0xd0b]
Successors: []
---
0xd1c INVALID
---
0xd1c: INVALID 
---
Entry stack: [V12, 0xef, V98, V415, 0x49d, S23, S22, S21, S20, S19, S18, S17, S16, S15, {0x766, 0xa1e}, S13, 0x0, S11, 0x766, V1073, V1076, V1078, S6, 0x0, V1107, 0x0, 0x0, V1078, V1108]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V98, V415, 0x49d, S23, S22, S21, S20, S19, S18, S17, S16, S15, {0x766, 0xa1e}, S13, 0x0, S11, 0x766, V1073, V1076, V1078, S6, 0x0, V1107, 0x0, 0x0, V1078, V1108]

================================

Block 0xd1d
[0xd1d:0xd28]
---
Predecessors: [0xd0b]
Successors: [0xd29]
---
0xd1d JUMPDEST
0xd1e SDIV
0xd1f SWAP2
0xd20 POP
0xd21 DUP2
0xd22 DUP9
0xd23 ADD
0xd24 SWAP1
0xd25 POP
0xd26 DUP1
0xd27 SWAP4
0xd28 POP
---
0xd1d: JUMPDEST 
0xd1e: V1112 = SDIV V1108 V1078
0xd23: V1113 = ADD V1073 V1112
---
Entry stack: [V12, 0xef, V98, V415, 0x49d, S23, S22, S21, S20, S19, S18, S17, S16, S15, {0x766, 0xa1e}, S13, 0x0, S11, 0x766, V1073, V1076, V1078, S6, 0x0, V1107, 0x0, 0x0, V1078, V1108]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, V1113, S4, V1112, V1113]
Exit stack: [V12, 0xef, V98, V415, 0x49d, S23, S22, S21, S20, S19, S18, S17, S16, S15, {0x766, 0xa1e}, S13, 0x0, S11, 0x766, V1073, V1076, V1078, S6, V1113, V1107, V1112, V1113]

================================

Block 0xd29
[0xd29:0xd29]
---
Predecessors: [0xd04, 0xd1d]
Successors: [0xd2a]
---
0xd29 JUMPDEST
---
0xd29: JUMPDEST 
---
Entry stack: [V12, 0xef, V98, V415, 0x49d, S21, S20, S19, S18, S17, S16, S15, S14, S13, {0x766, 0xa1e}, S11, 0x0, S9, 0x766, V1073, V1076, V1078, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0xef, V98, V415, 0x49d, S21, S20, S19, S18, S17, S16, S15, S14, S13, {0x766, 0xa1e}, S11, 0x0, S9, 0x766, V1073, V1076, V1078, S4, S3, S2, S1, S0]

================================

Block 0xd2a
[0xd2a:0xd34]
---
Predecessors: [0xd29]
Successors: [0x766]
---
0xd2a JUMPDEST
0xd2b POP
0xd2c POP
0xd2d POP
0xd2e SWAP5
0xd2f SWAP4
0xd30 POP
0xd31 POP
0xd32 POP
0xd33 POP
0xd34 JUMP
---
0xd2a: JUMPDEST 
0xd34: JUMP 0x766
---
Entry stack: [V12, 0xef, V98, V415, 0x49d, S21, S20, S19, S18, S17, S16, S15, S14, S13, {0x766, 0xa1e}, S11, 0x0, S9, 0x766, V1073, V1076, V1078, S4, S3, S2, S1, S0]
Stack pops: 9
Stack additions: [S3]
Exit stack: [V12, 0xef, V98, V415, 0x49d, S21, S20, S19, S18, S17, S16, S15, S14, S13, {0x766, 0xa1e}, S11, 0x0, S9, S3]

================================

Block 0xd35
[0xd35:0xd62]
---
Predecessors: [0x2fc]
Successors: [0x304]
---
0xd35 JUMPDEST
0xd36 PUSH1 0xa0
0xd38 PUSH1 0x40
0xd3a MLOAD
0xd3b SWAP1
0xd3c DUP2
0xd3d ADD
0xd3e PUSH1 0x40
0xd40 SWAP1
0xd41 DUP2
0xd42 MSTORE
0xd43 PUSH1 0x0
0xd45 DUP1
0xd46 DUP4
0xd47 MSTORE
0xd48 PUSH1 0x20
0xd4a DUP4
0xd4b ADD
0xd4c DUP2
0xd4d SWAP1
0xd4e MSTORE
0xd4f SWAP1
0xd50 DUP3
0xd51 ADD
0xd52 DUP2
0xd53 SWAP1
0xd54 MSTORE
0xd55 PUSH1 0x60
0xd57 DUP3
0xd58 ADD
0xd59 DUP2
0xd5a SWAP1
0xd5b MSTORE
0xd5c PUSH1 0x80
0xd5e DUP3
0xd5f ADD
0xd60 MSTORE
0xd61 SWAP1
0xd62 JUMP
---
0xd35: JUMPDEST 
0xd36: V1114 = 0xa0
0xd38: V1115 = 0x40
0xd3a: V1116 = M[0x40]
0xd3d: V1117 = ADD V1116 0xa0
0xd3e: V1118 = 0x40
0xd42: M[0x40] = V1117
0xd43: V1119 = 0x0
0xd47: M[V1116] = 0x0
0xd48: V1120 = 0x20
0xd4b: V1121 = ADD V1116 0x20
0xd4e: M[V1121] = 0x0
0xd51: V1122 = ADD V1116 0x40
0xd54: M[V1122] = 0x0
0xd55: V1123 = 0x60
0xd58: V1124 = ADD V1116 0x60
0xd5b: M[V1124] = 0x0
0xd5c: V1125 = 0x80
0xd5f: V1126 = ADD V1116 0x80
0xd60: M[V1126] = 0x0
0xd62: JUMP 0x304
---
Entry stack: [V12, 0xef, V65, V67, V69, V71, V79, 0x304]
Stack pops: 1
Stack additions: [V1116]
Exit stack: [V12, 0xef, V65, V67, V69, V71, V79, V1116]

================================

Block 0xd63
[0xd63:0xd91]
---
Predecessors: []
Successors: []
---
0xd63 STOP
0xd64 LOG1
0xd65 PUSH6 0x627a7a723058
0xd6c SHA3
0xd6d ADDMOD
0xd6e MISSING 0xcb
0xd6f MISSING 0xbe
0xd70 DUP12
0xd71 MUL
0xd72 SUB
0xd73 XOR
0xd74 MISSING 0xa7
0xd75 MISSING 0xbe
0xd76 PUSH13 0x6b292b78f9aaf974b4b54ce244
0xd84 MISSING 0x4a
0xd85 PUSH12 0x5b551386824b9c0029
---
0xd63: STOP 
0xd64: LOG S0 S1 S2
0xd65: V1127 = 0x627a7a723058
0xd6c: V1128 = SHA3 0x627a7a723058 S3
0xd6d: V1129 = ADDMOD V1128 S4 S5
0xd6e: MISSING 0xcb
0xd6f: MISSING 0xbe
0xd71: V1130 = MUL S11 S0
0xd72: V1131 = SUB V1130 S1
0xd73: V1132 = XOR V1131 S2
0xd74: MISSING 0xa7
0xd75: MISSING 0xbe
0xd76: V1133 = 0x6b292b78f9aaf974b4b54ce244
0xd84: MISSING 0x4a
0xd85: V1134 = 0x5b551386824b9c0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V1129, V1132, S3, S4, S5, S6, S7, S8, S9, S10, S11, 0x6b292b78f9aaf974b4b54ce244, 0x5b551386824b9c0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x27ebe40a
Entry block: 0xc4
Exit block: 0xef
Body: 0xc4, 0xcb, 0xcf, 0xef, 0x2fc, 0x304, 0x315, 0x319, 0x32a, 0x32e, 0x340, 0x344, 0x35b, 0x35f, 0x7d6, 0x835, 0xd35

Function 1:
Public function signature: 0x3f4ba83a
Entry block: 0xf1
Exit block: 0x104
Body: 0xf1, 0xf8, 0xfc, 0x104, 0x3d5, 0x3ed, 0x3f1, 0x405, 0x409, 0x457, 0x458, 0x459

Function 2:
Public function signature: 0x454a2ab3
Entry block: 0x118
Exit block: 0xef
Body: 0xef, 0x118, 0x45c, 0x476, 0x47a, 0x49d, 0x4a8, 0x4a9, 0x735, 0x736, 0x9ee, 0xa0a, 0xa11, 0xa15, 0xa1e, 0xa29, 0xa2d, 0xa43, 0xa4d, 0xa55, 0xa89, 0xa8d, 0xa8e, 0xabf, 0xac3, 0xb17, 0xce1, 0xcee, 0xcf2

Function 3:
Public function signature: 0x5c975abb
Entry block: 0x125
Exit block: 0x104
Body: 0x104, 0x125, 0x12c, 0x130, 0x4ad

Function 4:
Public function signature: 0x5fd8c710
Entry block: 0x14c
Exit block: 0xef
Body: 0xef, 0x14c, 0x153, 0x157, 0x4bd, 0x4db, 0x4f1, 0x4f8, 0x4fc, 0x535, 0x539, 0x53a

Function 5:
Public function signature: 0x76190f8f
Entry block: 0x161
Exit block: 0x104
Body: 0x104, 0x161, 0x168, 0x16c, 0x53d

Function 6:
Public function signature: 0x78bd7935
Entry block: 0x188
Exit block: 0x19e
Body: 0x188, 0x18f, 0x193, 0x19e, 0x546, 0x565, 0x56c, 0x570, 0x5cd

Function 7:
Public function signature: 0x83b5ff8b
Entry block: 0x1d9
Exit block: 0x1ec
Body: 0x1d9, 0x1e0, 0x1e4, 0x1ec, 0x5d7

Function 8:
Public function signature: 0x8456cb59
Entry block: 0x1fe
Exit block: 0x104
Body: 0x104, 0x1fe, 0x205, 0x209, 0x5dd, 0x5f5, 0x5f9, 0x60c, 0x610, 0x664, 0x665, 0x666

Function 9:
Public function signature: 0x878eb368
Entry block: 0x225
Exit block: 0xef
Body: 0xef, 0x225, 0x22c, 0x230, 0x4a8, 0x4a9, 0x669, 0x67e, 0x682, 0x699, 0x69d, 0x6b5, 0x6bc, 0x6c0, 0x735, 0x736

Function 10:
Public function signature: 0x8da5cb5b
Entry block: 0x23d
Exit block: 0x250
Body: 0x23d, 0x244, 0x248, 0x250, 0x6dd

Function 11:
Public function signature: 0x96b5a755
Entry block: 0x26c
Exit block: 0xef
Body: 0xef, 0x26c, 0x273, 0x277, 0x6ec, 0x704, 0x70b, 0x70f, 0x727, 0x72b, 0x735, 0x736

Function 12:
Public function signature: 0xc55d0f56
Entry block: 0x284
Exit block: 0xef
Body: 0xef, 0x1ec, 0x284, 0x28b, 0x28f, 0x49d, 0x4a8, 0x4a9, 0x735, 0x736, 0x73b, 0x752, 0x759, 0x75d, 0x766, 0x769, 0xa1e, 0xa29, 0xa2d, 0xa43, 0xa4d, 0xa55, 0xa89, 0xa8d, 0xa8e, 0xabf, 0xac3, 0xb17, 0xce1, 0xcee, 0xcf2

Function 13:
Public function signature: 0xdd1b7a0f
Entry block: 0x2ac
Exit block: 0x250
Body: 0x250, 0x2ac, 0x2b3, 0x2b7, 0x76f

Function 14:
Public function signature: 0xf2fde38b
Entry block: 0x2db
Exit block: 0xef
Body: 0xef, 0x2db, 0x2e2, 0x2e6, 0x539, 0x53a, 0x77e, 0x795, 0x799, 0x7a9, 0x7d1, 0x7d2, 0x7d3

Function 15:
Public fallback function
Entry block: 0xbf
Exit block: 0xbf
Body: 0xbf

Function 16:
Private function
Entry block: 0xb23
Exit block: 0x84e
Body: 0x839, 0x84a, 0x84e, 0xb23

Function 17:
Private function
Entry block: 0xc92
Exit block: 0xcde
Body: 0xc92, 0xcde

Function 18:
Private function
Entry block: 0xb92
Exit block: 0xbb2
Body: 0xb92, 0xbb2

Function 19:
Private function
Entry block: 0xbb7
Exit block: 0xbfe
Body: 0x839, 0x84a, 0x84e, 0xb23, 0xbb7, 0xbc0, 0xbca, 0xbfe

