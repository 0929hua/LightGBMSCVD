Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x56]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x56
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x56
0xc: JUMPI 0x56 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x147]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH3 0x821de3
0x3b EQ
0x3c PUSH2 0x147
0x3f JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x821de3
0x3b: V13 = EQ 0x821de3 V11
0x3c: V14 = 0x147
0x3f: JUMPI 0x147 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x19c]
---
0x40 DUP1
0x41 PUSH4 0x49df728c
0x46 EQ
0x47 PUSH2 0x19c
0x4a JUMPI
---
0x41: V15 = 0x49df728c
0x46: V16 = EQ 0x49df728c V11
0x47: V17 = 0x19c
0x4a: JUMPI 0x19c V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x1d5]
---
0x4b DUP1
0x4c PUSH4 0x6b9f96ea
0x51 EQ
0x52 PUSH2 0x1d5
0x55 JUMPI
---
0x4c: V18 = 0x6b9f96ea
0x51: V19 = EQ 0x6b9f96ea V11
0x52: V20 = 0x1d5
0x55: JUMPI 0x1d5 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0xb2]
---
Predecessors: [0x0, 0x4b]
Successors: [0xb3, 0xb7]
---
0x56 JUMPDEST
0x57 PUSH1 0x0
0x59 DUP1
0x5a SWAP1
0x5b SLOAD
0x5c SWAP1
0x5d PUSH2 0x100
0x60 EXP
0x61 SWAP1
0x62 DIV
0x63 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x78 AND
0x79 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8e AND
0x8f PUSH2 0x8fc
0x92 CALLVALUE
0x93 SWAP1
0x94 DUP2
0x95 ISZERO
0x96 MUL
0x97 SWAP1
0x98 PUSH1 0x40
0x9a MLOAD
0x9b PUSH1 0x0
0x9d PUSH1 0x40
0x9f MLOAD
0xa0 DUP1
0xa1 DUP4
0xa2 SUB
0xa3 DUP2
0xa4 DUP6
0xa5 DUP9
0xa6 DUP9
0xa7 CALL
0xa8 SWAP4
0xa9 POP
0xaa POP
0xab POP
0xac POP
0xad ISZERO
0xae ISZERO
0xaf PUSH2 0xb7
0xb2 JUMPI
---
0x56: JUMPDEST 
0x57: V21 = 0x0
0x5b: V22 = S[0x0]
0x5d: V23 = 0x100
0x60: V24 = EXP 0x100 0x0
0x62: V25 = DIV V22 0x1
0x63: V26 = 0xffffffffffffffffffffffffffffffffffffffff
0x78: V27 = AND 0xffffffffffffffffffffffffffffffffffffffff V25
0x79: V28 = 0xffffffffffffffffffffffffffffffffffffffff
0x8e: V29 = AND 0xffffffffffffffffffffffffffffffffffffffff V27
0x8f: V30 = 0x8fc
0x92: V31 = CALLVALUE
0x95: V32 = ISZERO V31
0x96: V33 = MUL V32 0x8fc
0x98: V34 = 0x40
0x9a: V35 = M[0x40]
0x9b: V36 = 0x0
0x9d: V37 = 0x40
0x9f: V38 = M[0x40]
0xa2: V39 = SUB V35 V38
0xa7: V40 = CALL V33 V29 V31 V38 V39 V38 0x0
0xad: V41 = ISZERO V40
0xae: V42 = ISZERO V41
0xaf: V43 = 0xb7
0xb2: JUMPI 0xb7 V42
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb3
[0xb3:0xb6]
---
Predecessors: [0x56]
Successors: []
---
0xb3 PUSH1 0x0
0xb5 DUP1
0xb6 REVERT
---
0xb3: V44 = 0x0
0xb6: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb7
[0xb7:0x146]
---
Predecessors: [0x56]
Successors: []
---
0xb7 JUMPDEST
0xb8 PUSH32 0x69b31548dea9b3b707b4dff357d326e3e9348b24e7a6080a218a6edeeec48f9b
0xd9 CALLER
0xda CALLVALUE
0xdb PUSH1 0x0
0xdd CALLDATASIZE
0xde PUSH1 0x40
0xe0 MLOAD
0xe1 DUP1
0xe2 DUP6
0xe3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf8 AND
0xf9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10e AND
0x10f DUP2
0x110 MSTORE
0x111 PUSH1 0x20
0x113 ADD
0x114 DUP5
0x115 DUP2
0x116 MSTORE
0x117 PUSH1 0x20
0x119 ADD
0x11a DUP1
0x11b PUSH1 0x20
0x11d ADD
0x11e DUP3
0x11f DUP2
0x120 SUB
0x121 DUP3
0x122 MSTORE
0x123 DUP5
0x124 DUP5
0x125 DUP3
0x126 DUP2
0x127 DUP2
0x128 MSTORE
0x129 PUSH1 0x20
0x12b ADD
0x12c SWAP3
0x12d POP
0x12e DUP1
0x12f DUP3
0x130 DUP5
0x131 CALLDATACOPY
0x132 DUP3
0x133 ADD
0x134 SWAP2
0x135 POP
0x136 POP
0x137 SWAP6
0x138 POP
0x139 POP
0x13a POP
0x13b POP
0x13c POP
0x13d POP
0x13e PUSH1 0x40
0x140 MLOAD
0x141 DUP1
0x142 SWAP2
0x143 SUB
0x144 SWAP1
0x145 LOG1
0x146 STOP
---
0xb7: JUMPDEST 
0xb8: V45 = 0x69b31548dea9b3b707b4dff357d326e3e9348b24e7a6080a218a6edeeec48f9b
0xd9: V46 = CALLER
0xda: V47 = CALLVALUE
0xdb: V48 = 0x0
0xdd: V49 = CALLDATASIZE
0xde: V50 = 0x40
0xe0: V51 = M[0x40]
0xe3: V52 = 0xffffffffffffffffffffffffffffffffffffffff
0xf8: V53 = AND 0xffffffffffffffffffffffffffffffffffffffff V46
0xf9: V54 = 0xffffffffffffffffffffffffffffffffffffffff
0x10e: V55 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0x110: M[V51] = V55
0x111: V56 = 0x20
0x113: V57 = ADD 0x20 V51
0x116: M[V57] = V47
0x117: V58 = 0x20
0x119: V59 = ADD 0x20 V57
0x11b: V60 = 0x20
0x11d: V61 = ADD 0x20 V59
0x120: V62 = SUB V61 V51
0x122: M[V59] = V62
0x128: M[V61] = V49
0x129: V63 = 0x20
0x12b: V64 = ADD 0x20 V61
0x131: CALLDATACOPY V64 0x0 V49
0x133: V65 = ADD V64 V49
0x13e: V66 = 0x40
0x140: V67 = M[0x40]
0x143: V68 = SUB V65 V67
0x145: LOG V67 V68 0x69b31548dea9b3b707b4dff357d326e3e9348b24e7a6080a218a6edeeec48f9b
0x146: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x147
[0x147:0x14d]
---
Predecessors: [0xd]
Successors: [0x14e, 0x152]
---
0x147 JUMPDEST
0x148 CALLVALUE
0x149 ISZERO
0x14a PUSH2 0x152
0x14d JUMPI
---
0x147: JUMPDEST 
0x148: V69 = CALLVALUE
0x149: V70 = ISZERO V69
0x14a: V71 = 0x152
0x14d: JUMPI 0x152 V70
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x14e
[0x14e:0x151]
---
Predecessors: [0x147]
Successors: []
---
0x14e PUSH1 0x0
0x150 DUP1
0x151 REVERT
---
0x14e: V72 = 0x0
0x151: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x152
[0x152:0x159]
---
Predecessors: [0x147]
Successors: [0x1ea]
---
0x152 JUMPDEST
0x153 PUSH2 0x15a
0x156 PUSH2 0x1ea
0x159 JUMP
---
0x152: JUMPDEST 
0x153: V73 = 0x15a
0x156: V74 = 0x1ea
0x159: JUMP 0x1ea
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x15a]
Exit stack: [V11, 0x15a]

================================

Block 0x15a
[0x15a:0x19b]
---
Predecessors: [0x1ea]
Successors: []
---
0x15a JUMPDEST
0x15b PUSH1 0x40
0x15d MLOAD
0x15e DUP1
0x15f DUP3
0x160 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x175 AND
0x176 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18b AND
0x18c DUP2
0x18d MSTORE
0x18e PUSH1 0x20
0x190 ADD
0x191 SWAP2
0x192 POP
0x193 POP
0x194 PUSH1 0x40
0x196 MLOAD
0x197 DUP1
0x198 SWAP2
0x199 SUB
0x19a SWAP1
0x19b RETURN
---
0x15a: JUMPDEST 
0x15b: V75 = 0x40
0x15d: V76 = M[0x40]
0x160: V77 = 0xffffffffffffffffffffffffffffffffffffffff
0x175: V78 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x176: V79 = 0xffffffffffffffffffffffffffffffffffffffff
0x18b: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x18d: M[V76] = V80
0x18e: V81 = 0x20
0x190: V82 = ADD 0x20 V76
0x194: V83 = 0x40
0x196: V84 = M[0x40]
0x199: V85 = SUB V82 V84
0x19b: RETURN V84 V85
---
Entry stack: [V11, 0x15a, V110]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x15a]

================================

Block 0x19c
[0x19c:0x1a2]
---
Predecessors: [0x40]
Successors: [0x1a3, 0x1a7]
---
0x19c JUMPDEST
0x19d CALLVALUE
0x19e ISZERO
0x19f PUSH2 0x1a7
0x1a2 JUMPI
---
0x19c: JUMPDEST 
0x19d: V86 = CALLVALUE
0x19e: V87 = ISZERO V86
0x19f: V88 = 0x1a7
0x1a2: JUMPI 0x1a7 V87
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1a3
[0x1a3:0x1a6]
---
Predecessors: [0x19c]
Successors: []
---
0x1a3 PUSH1 0x0
0x1a5 DUP1
0x1a6 REVERT
---
0x1a3: V89 = 0x0
0x1a6: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1a7
[0x1a7:0x1d2]
---
Predecessors: [0x19c]
Successors: [0x20f]
---
0x1a7 JUMPDEST
0x1a8 PUSH2 0x1d3
0x1ab PUSH1 0x4
0x1ad DUP1
0x1ae DUP1
0x1af CALLDATALOAD
0x1b0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c5 AND
0x1c6 SWAP1
0x1c7 PUSH1 0x20
0x1c9 ADD
0x1ca SWAP1
0x1cb SWAP2
0x1cc SWAP1
0x1cd POP
0x1ce POP
0x1cf PUSH2 0x20f
0x1d2 JUMP
---
0x1a7: JUMPDEST 
0x1a8: V90 = 0x1d3
0x1ab: V91 = 0x4
0x1af: V92 = CALLDATALOAD 0x4
0x1b0: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c5: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x1c7: V95 = 0x20
0x1c9: V96 = ADD 0x20 0x4
0x1cf: V97 = 0x20f
0x1d2: JUMP 0x20f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1d3, V94]
Exit stack: [V11, 0x1d3, V94]

================================

Block 0x1d3
[0x1d3:0x1d4]
---
Predecessors: [0x36b]
Successors: []
---
0x1d3 JUMPDEST
0x1d4 STOP
---
0x1d3: JUMPDEST 
0x1d4: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1d5
[0x1d5:0x1db]
---
Predecessors: [0x4b]
Successors: [0x1dc, 0x1e0]
---
0x1d5 JUMPDEST
0x1d6 CALLVALUE
0x1d7 ISZERO
0x1d8 PUSH2 0x1e0
0x1db JUMPI
---
0x1d5: JUMPDEST 
0x1d6: V98 = CALLVALUE
0x1d7: V99 = ISZERO V98
0x1d8: V100 = 0x1e0
0x1db: JUMPI 0x1e0 V99
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1dc
[0x1dc:0x1df]
---
Predecessors: [0x1d5]
Successors: []
---
0x1dc PUSH1 0x0
0x1de DUP1
0x1df REVERT
---
0x1dc: V101 = 0x0
0x1df: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1e0
[0x1e0:0x1e7]
---
Predecessors: [0x1d5]
Successors: [0x36f]
---
0x1e0 JUMPDEST
0x1e1 PUSH2 0x1e8
0x1e4 PUSH2 0x36f
0x1e7 JUMP
---
0x1e0: JUMPDEST 
0x1e1: V102 = 0x1e8
0x1e4: V103 = 0x36f
0x1e7: JUMP 0x36f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1e8]
Exit stack: [V11, 0x1e8]

================================

Block 0x1e8
[0x1e8:0x1e9]
---
Predecessors: [0x3e7]
Successors: []
---
0x1e8 JUMPDEST
0x1e9 STOP
---
0x1e8: JUMPDEST 
0x1e9: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1ea
[0x1ea:0x20e]
---
Predecessors: [0x152]
Successors: [0x15a]
---
0x1ea JUMPDEST
0x1eb PUSH1 0x0
0x1ed DUP1
0x1ee SWAP1
0x1ef SLOAD
0x1f0 SWAP1
0x1f1 PUSH2 0x100
0x1f4 EXP
0x1f5 SWAP1
0x1f6 DIV
0x1f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20c AND
0x20d DUP2
0x20e JUMP
---
0x1ea: JUMPDEST 
0x1eb: V104 = 0x0
0x1ef: V105 = S[0x0]
0x1f1: V106 = 0x100
0x1f4: V107 = EXP 0x100 0x0
0x1f6: V108 = DIV V105 0x1
0x1f7: V109 = 0xffffffffffffffffffffffffffffffffffffffff
0x20c: V110 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x20e: JUMP 0x15a
---
Entry stack: [V11, 0x15a]
Stack pops: 1
Stack additions: [S0, V110]
Exit stack: [V11, 0x15a, V110]

================================

Block 0x20f
[0x20f:0x267]
---
Predecessors: [0x1a7]
Successors: [0x268, 0x26c]
---
0x20f JUMPDEST
0x210 PUSH1 0x0
0x212 DUP1
0x213 PUSH1 0x0
0x215 SWAP1
0x216 SLOAD
0x217 SWAP1
0x218 PUSH2 0x100
0x21b EXP
0x21c SWAP1
0x21d DIV
0x21e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x233 AND
0x234 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x249 AND
0x24a CALLER
0x24b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x260 AND
0x261 EQ
0x262 ISZERO
0x263 ISZERO
0x264 PUSH2 0x26c
0x267 JUMPI
---
0x20f: JUMPDEST 
0x210: V111 = 0x0
0x213: V112 = 0x0
0x216: V113 = S[0x0]
0x218: V114 = 0x100
0x21b: V115 = EXP 0x100 0x0
0x21d: V116 = DIV V113 0x1
0x21e: V117 = 0xffffffffffffffffffffffffffffffffffffffff
0x233: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0x234: V119 = 0xffffffffffffffffffffffffffffffffffffffff
0x249: V120 = AND 0xffffffffffffffffffffffffffffffffffffffff V118
0x24a: V121 = CALLER
0x24b: V122 = 0xffffffffffffffffffffffffffffffffffffffff
0x260: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x261: V124 = EQ V123 V120
0x262: V125 = ISZERO V124
0x263: V126 = ISZERO V125
0x264: V127 = 0x26c
0x267: JUMPI 0x26c V126
---
Entry stack: [V11, 0x1d3, V94]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x1d3, V94, 0x0]

================================

Block 0x268
[0x268:0x26b]
---
Predecessors: [0x20f]
Successors: []
---
0x268 PUSH1 0x0
0x26a DUP1
0x26b REVERT
---
0x268: V128 = 0x0
0x26b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1d3, V94, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1d3, V94, 0x0]

================================

Block 0x26c
[0x26c:0x301]
---
Predecessors: [0x20f]
Successors: [0x302, 0x306]
---
0x26c JUMPDEST
0x26d DUP2
0x26e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x283 AND
0x284 PUSH4 0x70a08231
0x289 ADDRESS
0x28a PUSH1 0x40
0x28c MLOAD
0x28d DUP3
0x28e PUSH4 0xffffffff
0x293 AND
0x294 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2b2 MUL
0x2b3 DUP2
0x2b4 MSTORE
0x2b5 PUSH1 0x4
0x2b7 ADD
0x2b8 DUP1
0x2b9 DUP3
0x2ba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2cf AND
0x2d0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e5 AND
0x2e6 DUP2
0x2e7 MSTORE
0x2e8 PUSH1 0x20
0x2ea ADD
0x2eb SWAP2
0x2ec POP
0x2ed POP
0x2ee PUSH1 0x20
0x2f0 PUSH1 0x40
0x2f2 MLOAD
0x2f3 DUP1
0x2f4 DUP4
0x2f5 SUB
0x2f6 DUP2
0x2f7 PUSH1 0x0
0x2f9 DUP8
0x2fa DUP1
0x2fb EXTCODESIZE
0x2fc ISZERO
0x2fd ISZERO
0x2fe PUSH2 0x306
0x301 JUMPI
---
0x26c: JUMPDEST 
0x26e: V129 = 0xffffffffffffffffffffffffffffffffffffffff
0x283: V130 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x284: V131 = 0x70a08231
0x289: V132 = ADDRESS
0x28a: V133 = 0x40
0x28c: V134 = M[0x40]
0x28e: V135 = 0xffffffff
0x293: V136 = AND 0xffffffff 0x70a08231
0x294: V137 = 0x100000000000000000000000000000000000000000000000000000000
0x2b2: V138 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x2b4: M[V134] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x2b5: V139 = 0x4
0x2b7: V140 = ADD 0x4 V134
0x2ba: V141 = 0xffffffffffffffffffffffffffffffffffffffff
0x2cf: V142 = AND 0xffffffffffffffffffffffffffffffffffffffff V132
0x2d0: V143 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e5: V144 = AND 0xffffffffffffffffffffffffffffffffffffffff V142
0x2e7: M[V140] = V144
0x2e8: V145 = 0x20
0x2ea: V146 = ADD 0x20 V140
0x2ee: V147 = 0x20
0x2f0: V148 = 0x40
0x2f2: V149 = M[0x40]
0x2f5: V150 = SUB V146 V149
0x2f7: V151 = 0x0
0x2fb: V152 = EXTCODESIZE V130
0x2fc: V153 = ISZERO V152
0x2fd: V154 = ISZERO V153
0x2fe: V155 = 0x306
0x301: JUMPI 0x306 V154
---
Entry stack: [V11, 0x1d3, V94, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V130, 0x70a08231, V146, 0x20, V149, V150, V149, 0x0, V130]
Exit stack: [V11, 0x1d3, V94, 0x0, V130, 0x70a08231, V146, 0x20, V149, V150, V149, 0x0, V130]

================================

Block 0x302
[0x302:0x305]
---
Predecessors: [0x26c]
Successors: []
---
0x302 PUSH1 0x0
0x304 DUP1
0x305 REVERT
---
0x302: V156 = 0x0
0x305: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1d3, V94, 0x0, V130, 0x70a08231, V146, 0x20, V149, V150, V149, 0x0, V130]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1d3, V94, 0x0, V130, 0x70a08231, V146, 0x20, V149, V150, V149, 0x0, V130]

================================

Block 0x306
[0x306:0x30e]
---
Predecessors: [0x26c]
Successors: [0x30f, 0x313]
---
0x306 JUMPDEST
0x307 GAS
0x308 CALL
0x309 ISZERO
0x30a ISZERO
0x30b PUSH2 0x313
0x30e JUMPI
---
0x306: JUMPDEST 
0x307: V157 = GAS
0x308: V158 = CALL V157 V130 0x0 V149 V150 V149 0x20
0x309: V159 = ISZERO V158
0x30a: V160 = ISZERO V159
0x30b: V161 = 0x313
0x30e: JUMPI 0x313 V160
---
Entry stack: [V11, 0x1d3, V94, 0x0, V130, 0x70a08231, V146, 0x20, V149, V150, V149, 0x0, V130]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x1d3, V94, 0x0, V130, 0x70a08231, V146]

================================

Block 0x30f
[0x30f:0x312]
---
Predecessors: [0x306]
Successors: []
---
0x30f PUSH1 0x0
0x311 DUP1
0x312 REVERT
---
0x30f: V162 = 0x0
0x312: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1d3, V94, 0x0, V130, 0x70a08231, V146]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1d3, V94, 0x0, V130, 0x70a08231, V146]

================================

Block 0x313
[0x313:0x36a]
---
Predecessors: [0x306]
Successors: [0x3e9]
---
0x313 JUMPDEST
0x314 POP
0x315 POP
0x316 POP
0x317 PUSH1 0x40
0x319 MLOAD
0x31a DUP1
0x31b MLOAD
0x31c SWAP1
0x31d POP
0x31e SWAP1
0x31f POP
0x320 PUSH2 0x36b
0x323 PUSH1 0x0
0x325 DUP1
0x326 SWAP1
0x327 SLOAD
0x328 SWAP1
0x329 PUSH2 0x100
0x32c EXP
0x32d SWAP1
0x32e DIV
0x32f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x344 AND
0x345 DUP3
0x346 DUP5
0x347 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x35c AND
0x35d PUSH2 0x3e9
0x360 SWAP1
0x361 SWAP3
0x362 SWAP2
0x363 SWAP1
0x364 PUSH4 0xffffffff
0x369 AND
0x36a JUMP
---
0x313: JUMPDEST 
0x317: V163 = 0x40
0x319: V164 = M[0x40]
0x31b: V165 = M[V164]
0x320: V166 = 0x36b
0x323: V167 = 0x0
0x327: V168 = S[0x0]
0x329: V169 = 0x100
0x32c: V170 = EXP 0x100 0x0
0x32e: V171 = DIV V168 0x1
0x32f: V172 = 0xffffffffffffffffffffffffffffffffffffffff
0x344: V173 = AND 0xffffffffffffffffffffffffffffffffffffffff V171
0x347: V174 = 0xffffffffffffffffffffffffffffffffffffffff
0x35c: V175 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x35d: V176 = 0x3e9
0x364: V177 = 0xffffffff
0x369: V178 = AND 0xffffffff 0x3e9
0x36a: JUMP 0x3e9
---
Entry stack: [V11, 0x1d3, V94, 0x0, V130, 0x70a08231, V146]
Stack pops: 5
Stack additions: [S4, V165, 0x36b, V175, V173, V165]
Exit stack: [V11, 0x1d3, V94, V165, 0x36b, V175, V173, V165]

================================

Block 0x36b
[0x36b:0x36e]
---
Predecessors: [0x4aa]
Successors: [0x1d3]
---
0x36b JUMPDEST
0x36c POP
0x36d POP
0x36e JUMP
---
0x36b: JUMPDEST 
0x36e: JUMP 0x1d3
---
Entry stack: [V11, 0x1d3, V94, V165]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x36f
[0x36f:0x3e2]
---
Predecessors: [0x1e0]
Successors: [0x3e3, 0x3e7]
---
0x36f JUMPDEST
0x370 PUSH1 0x0
0x372 DUP1
0x373 SWAP1
0x374 SLOAD
0x375 SWAP1
0x376 PUSH2 0x100
0x379 EXP
0x37a SWAP1
0x37b DIV
0x37c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x391 AND
0x392 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a7 AND
0x3a8 PUSH2 0x8fc
0x3ab ADDRESS
0x3ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c1 AND
0x3c2 BALANCE
0x3c3 SWAP1
0x3c4 DUP2
0x3c5 ISZERO
0x3c6 MUL
0x3c7 SWAP1
0x3c8 PUSH1 0x40
0x3ca MLOAD
0x3cb PUSH1 0x0
0x3cd PUSH1 0x40
0x3cf MLOAD
0x3d0 DUP1
0x3d1 DUP4
0x3d2 SUB
0x3d3 DUP2
0x3d4 DUP6
0x3d5 DUP9
0x3d6 DUP9
0x3d7 CALL
0x3d8 SWAP4
0x3d9 POP
0x3da POP
0x3db POP
0x3dc POP
0x3dd ISZERO
0x3de ISZERO
0x3df PUSH2 0x3e7
0x3e2 JUMPI
---
0x36f: JUMPDEST 
0x370: V179 = 0x0
0x374: V180 = S[0x0]
0x376: V181 = 0x100
0x379: V182 = EXP 0x100 0x0
0x37b: V183 = DIV V180 0x1
0x37c: V184 = 0xffffffffffffffffffffffffffffffffffffffff
0x391: V185 = AND 0xffffffffffffffffffffffffffffffffffffffff V183
0x392: V186 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a7: V187 = AND 0xffffffffffffffffffffffffffffffffffffffff V185
0x3a8: V188 = 0x8fc
0x3ab: V189 = ADDRESS
0x3ac: V190 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c1: V191 = AND 0xffffffffffffffffffffffffffffffffffffffff V189
0x3c2: V192 = BALANCE V191
0x3c5: V193 = ISZERO V192
0x3c6: V194 = MUL V193 0x8fc
0x3c8: V195 = 0x40
0x3ca: V196 = M[0x40]
0x3cb: V197 = 0x0
0x3cd: V198 = 0x40
0x3cf: V199 = M[0x40]
0x3d2: V200 = SUB V196 V199
0x3d7: V201 = CALL V194 V187 V192 V199 V200 V199 0x0
0x3dd: V202 = ISZERO V201
0x3de: V203 = ISZERO V202
0x3df: V204 = 0x3e7
0x3e2: JUMPI 0x3e7 V203
---
Entry stack: [V11, 0x1e8]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1e8]

================================

Block 0x3e3
[0x3e3:0x3e6]
---
Predecessors: [0x36f]
Successors: []
---
0x3e3 PUSH1 0x0
0x3e5 DUP1
0x3e6 REVERT
---
0x3e3: V205 = 0x0
0x3e6: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1e8]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1e8]

================================

Block 0x3e7
[0x3e7:0x3e8]
---
Predecessors: [0x36f]
Successors: [0x1e8]
---
0x3e7 JUMPDEST
0x3e8 JUMP
---
0x3e7: JUMPDEST 
0x3e8: JUMP 0x1e8
---
Entry stack: [V11, 0x1e8]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x3e9
[0x3e9:0x486]
---
Predecessors: [0x313]
Successors: [0x487, 0x48b]
---
0x3e9 JUMPDEST
0x3ea DUP3
0x3eb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x400 AND
0x401 PUSH4 0xa9059cbb
0x406 DUP4
0x407 DUP4
0x408 PUSH1 0x40
0x40a MLOAD
0x40b DUP4
0x40c PUSH4 0xffffffff
0x411 AND
0x412 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x430 MUL
0x431 DUP2
0x432 MSTORE
0x433 PUSH1 0x4
0x435 ADD
0x436 DUP1
0x437 DUP4
0x438 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x44d AND
0x44e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x463 AND
0x464 DUP2
0x465 MSTORE
0x466 PUSH1 0x20
0x468 ADD
0x469 DUP3
0x46a DUP2
0x46b MSTORE
0x46c PUSH1 0x20
0x46e ADD
0x46f SWAP3
0x470 POP
0x471 POP
0x472 POP
0x473 PUSH1 0x20
0x475 PUSH1 0x40
0x477 MLOAD
0x478 DUP1
0x479 DUP4
0x47a SUB
0x47b DUP2
0x47c PUSH1 0x0
0x47e DUP8
0x47f DUP1
0x480 EXTCODESIZE
0x481 ISZERO
0x482 ISZERO
0x483 PUSH2 0x48b
0x486 JUMPI
---
0x3e9: JUMPDEST 
0x3eb: V206 = 0xffffffffffffffffffffffffffffffffffffffff
0x400: V207 = AND 0xffffffffffffffffffffffffffffffffffffffff V175
0x401: V208 = 0xa9059cbb
0x408: V209 = 0x40
0x40a: V210 = M[0x40]
0x40c: V211 = 0xffffffff
0x411: V212 = AND 0xffffffff 0xa9059cbb
0x412: V213 = 0x100000000000000000000000000000000000000000000000000000000
0x430: V214 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x432: M[V210] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x433: V215 = 0x4
0x435: V216 = ADD 0x4 V210
0x438: V217 = 0xffffffffffffffffffffffffffffffffffffffff
0x44d: V218 = AND 0xffffffffffffffffffffffffffffffffffffffff V173
0x44e: V219 = 0xffffffffffffffffffffffffffffffffffffffff
0x463: V220 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0x465: M[V216] = V220
0x466: V221 = 0x20
0x468: V222 = ADD 0x20 V216
0x46b: M[V222] = V165
0x46c: V223 = 0x20
0x46e: V224 = ADD 0x20 V222
0x473: V225 = 0x20
0x475: V226 = 0x40
0x477: V227 = M[0x40]
0x47a: V228 = SUB V224 V227
0x47c: V229 = 0x0
0x480: V230 = EXTCODESIZE V207
0x481: V231 = ISZERO V230
0x482: V232 = ISZERO V231
0x483: V233 = 0x48b
0x486: JUMPI 0x48b V232
---
Entry stack: [V11, 0x1d3, V94, V165, 0x36b, V175, V173, V165]
Stack pops: 3
Stack additions: [S2, S1, S0, V207, 0xa9059cbb, V224, 0x20, V227, V228, V227, 0x0, V207]
Exit stack: [V11, 0x1d3, V94, V165, 0x36b, V175, V173, V165, V207, 0xa9059cbb, V224, 0x20, V227, V228, V227, 0x0, V207]

================================

Block 0x487
[0x487:0x48a]
---
Predecessors: [0x3e9]
Successors: []
---
0x487 PUSH1 0x0
0x489 DUP1
0x48a REVERT
---
0x487: V234 = 0x0
0x48a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1d3, V94, V165, 0x36b, V175, V173, V165, V207, 0xa9059cbb, V224, 0x20, V227, V228, V227, 0x0, V207]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1d3, V94, V165, 0x36b, V175, V173, V165, V207, 0xa9059cbb, V224, 0x20, V227, V228, V227, 0x0, V207]

================================

Block 0x48b
[0x48b:0x493]
---
Predecessors: [0x3e9]
Successors: [0x494, 0x498]
---
0x48b JUMPDEST
0x48c GAS
0x48d CALL
0x48e ISZERO
0x48f ISZERO
0x490 PUSH2 0x498
0x493 JUMPI
---
0x48b: JUMPDEST 
0x48c: V235 = GAS
0x48d: V236 = CALL V235 V207 0x0 V227 V228 V227 0x20
0x48e: V237 = ISZERO V236
0x48f: V238 = ISZERO V237
0x490: V239 = 0x498
0x493: JUMPI 0x498 V238
---
Entry stack: [V11, 0x1d3, V94, V165, 0x36b, V175, V173, V165, V207, 0xa9059cbb, V224, 0x20, V227, V228, V227, 0x0, V207]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x1d3, V94, V165, 0x36b, V175, V173, V165, V207, 0xa9059cbb, V224]

================================

Block 0x494
[0x494:0x497]
---
Predecessors: [0x48b]
Successors: []
---
0x494 PUSH1 0x0
0x496 DUP1
0x497 REVERT
---
0x494: V240 = 0x0
0x497: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1d3, V94, V165, 0x36b, V175, V173, V165, V207, 0xa9059cbb, V224]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1d3, V94, V165, 0x36b, V175, V173, V165, V207, 0xa9059cbb, V224]

================================

Block 0x498
[0x498:0x4a8]
---
Predecessors: [0x48b]
Successors: [0x4a9, 0x4aa]
---
0x498 JUMPDEST
0x499 POP
0x49a POP
0x49b POP
0x49c PUSH1 0x40
0x49e MLOAD
0x49f DUP1
0x4a0 MLOAD
0x4a1 SWAP1
0x4a2 POP
0x4a3 ISZERO
0x4a4 ISZERO
0x4a5 PUSH2 0x4aa
0x4a8 JUMPI
---
0x498: JUMPDEST 
0x49c: V241 = 0x40
0x49e: V242 = M[0x40]
0x4a0: V243 = M[V242]
0x4a3: V244 = ISZERO V243
0x4a4: V245 = ISZERO V244
0x4a5: V246 = 0x4aa
0x4a8: JUMPI 0x4aa V245
---
Entry stack: [V11, 0x1d3, V94, V165, 0x36b, V175, V173, V165, V207, 0xa9059cbb, V224]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x1d3, V94, V165, 0x36b, V175, V173, V165]

================================

Block 0x4a9
[0x4a9:0x4a9]
---
Predecessors: [0x498]
Successors: []
---
0x4a9 INVALID
---
0x4a9: INVALID 
---
Entry stack: [V11, 0x1d3, V94, V165, 0x36b, V175, V173, V165]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1d3, V94, V165, 0x36b, V175, V173, V165]

================================

Block 0x4aa
[0x4aa:0x4ae]
---
Predecessors: [0x498]
Successors: [0x36b]
---
0x4aa JUMPDEST
0x4ab POP
0x4ac POP
0x4ad POP
0x4ae JUMP
---
0x4aa: JUMPDEST 
0x4ae: JUMP 0x36b
---
Entry stack: [V11, 0x1d3, V94, V165, 0x36b, V175, V173, V165]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x1d3, V94, V165]

================================

Block 0x4af
[0x4af:0x4da]
---
Predecessors: []
Successors: []
---
0x4af STOP
0x4b0 LOG1
0x4b1 PUSH6 0x627a7a723058
0x4b8 SHA3
0x4b9 MISSING 0x49
0x4ba MISSING 0x4f
0x4bb PUSH26 0xcaa056aa89392e8b120eb3bbc830ea760e61f022661706538137
0x4d6 MISSING 0x4b
0x4d7 MISSING 0xf7
0x4d8 SIGNEXTEND
0x4d9 STOP
0x4da MISSING 0x29
---
0x4af: STOP 
0x4b0: LOG S0 S1 S2
0x4b1: V247 = 0x627a7a723058
0x4b8: V248 = SHA3 0x627a7a723058 S3
0x4b9: MISSING 0x49
0x4ba: MISSING 0x4f
0x4bb: V249 = 0xcaa056aa89392e8b120eb3bbc830ea760e61f022661706538137
0x4d6: MISSING 0x4b
0x4d7: MISSING 0xf7
0x4d8: V250 = SIGNEXTEND S0 S1
0x4d9: STOP 
0x4da: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V248, 0xcaa056aa89392e8b120eb3bbc830ea760e61f022661706538137, V250]
Exit stack: []

================================

Function 0:
Public function signature: 0x821de3
Entry block: 0x147
Exit block: 0x15a
Body: 0x147, 0x14e, 0x152, 0x15a, 0x1ea

Function 1:
Public function signature: 0x49df728c
Entry block: 0x19c
Exit block: 0x1d3
Body: 0x19c, 0x1a3, 0x1a7, 0x1d3, 0x20f, 0x268, 0x26c, 0x302, 0x306, 0x30f, 0x313, 0x36b, 0x3e9, 0x487, 0x48b, 0x494, 0x498, 0x4a9, 0x4aa

Function 2:
Public function signature: 0x6b9f96ea
Entry block: 0x1d5
Exit block: 0x1e8
Body: 0x1d5, 0x1dc, 0x1e0, 0x1e8, 0x36f, 0x3e3, 0x3e7

Function 3:
Public fallback function
Entry block: 0x56
Exit block: 0xb3
Body: 0x56, 0xb3, 0xb7

