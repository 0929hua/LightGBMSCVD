Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xcc]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xcc
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xcc
0xc: JUMPI 0xcc V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0xd1]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x1476e40f
0x21 DUP2
0x22 EQ
0x23 PUSH2 0xd1
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x1476e40f
0x22: V15 = EQ V13 0x1476e40f
0x23: V16 = 0xd1
0x26: JUMPI 0xd1 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x169]
---
0x27 DUP1
0x28 PUSH4 0x1e89d545
0x2d EQ
0x2e PUSH2 0x169
0x31 JUMPI
---
0x28: V17 = 0x1e89d545
0x2d: V18 = EQ 0x1e89d545 V13
0x2e: V19 = 0x169
0x31: JUMPI 0x169 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x1ed]
---
0x32 DUP1
0x33 PUSH4 0x1f6eb6e7
0x38 EQ
0x39 PUSH2 0x1ed
0x3c JUMPI
---
0x33: V20 = 0x1f6eb6e7
0x38: V21 = EQ 0x1f6eb6e7 V13
0x39: V22 = 0x1ed
0x3c: JUMPI 0x1ed V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x21c]
---
0x3d DUP1
0x3e PUSH4 0x2a17e397
0x43 EQ
0x44 PUSH2 0x21c
0x47 JUMPI
---
0x3e: V23 = 0x2a17e397
0x43: V24 = EQ 0x2a17e397 V13
0x44: V25 = 0x21c
0x47: JUMPI 0x21c V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x260]
---
0x48 DUP1
0x49 PUSH4 0x2af4c31e
0x4e EQ
0x4f PUSH2 0x260
0x52 JUMPI
---
0x49: V26 = 0x2af4c31e
0x4e: V27 = EQ 0x2af4c31e V13
0x4f: V28 = 0x260
0x52: JUMPI 0x260 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x281]
---
0x53 DUP1
0x54 PUSH4 0x666a3427
0x59 EQ
0x5a PUSH2 0x281
0x5d JUMPI
---
0x54: V29 = 0x666a3427
0x59: V30 = EQ 0x666a3427 V13
0x5a: V31 = 0x281
0x5d: JUMPI 0x281 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x2a0]
---
0x5e DUP1
0x5f PUSH4 0x710bf322
0x64 EQ
0x65 PUSH2 0x2a0
0x68 JUMPI
---
0x5f: V32 = 0x710bf322
0x64: V33 = EQ 0x710bf322 V13
0x65: V34 = 0x2a0
0x68: JUMPI 0x2a0 V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x2bf]
---
0x69 DUP1
0x6a PUSH4 0x79ba5097
0x6f EQ
0x70 PUSH2 0x2bf
0x73 JUMPI
---
0x6a: V35 = 0x79ba5097
0x6f: V36 = EQ 0x79ba5097 V13
0x70: V37 = 0x2bf
0x73: JUMPI 0x2bf V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x2d2]
---
0x74 DUP1
0x75 PUSH4 0x892db057
0x7a EQ
0x7b PUSH2 0x2d2
0x7e JUMPI
---
0x75: V38 = 0x892db057
0x7a: V39 = EQ 0x892db057 V13
0x7b: V40 = 0x2d2
0x7e: JUMPI 0x2d2 V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x89]
---
Predecessors: [0x74]
Successors: [0x8a, 0x2f1]
---
0x7f DUP1
0x80 PUSH4 0x8da5cb5b
0x85 EQ
0x86 PUSH2 0x2f1
0x89 JUMPI
---
0x80: V41 = 0x8da5cb5b
0x85: V42 = EQ 0x8da5cb5b V13
0x86: V43 = 0x2f1
0x89: JUMPI 0x2f1 V42
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x8a
[0x8a:0x94]
---
Predecessors: [0x7f]
Successors: [0x95, 0x304]
---
0x8a DUP1
0x8b PUSH4 0xa142d608
0x90 EQ
0x91 PUSH2 0x304
0x94 JUMPI
---
0x8b: V44 = 0xa142d608
0x90: V45 = EQ 0xa142d608 V13
0x91: V46 = 0x304
0x94: JUMPI 0x304 V45
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x95
[0x95:0x9f]
---
Predecessors: [0x8a]
Successors: [0xa0, 0x323]
---
0x95 DUP1
0x96 PUSH4 0xac66777f
0x9b EQ
0x9c PUSH2 0x323
0x9f JUMPI
---
0x96: V47 = 0xac66777f
0x9b: V48 = EQ 0xac66777f V13
0x9c: V49 = 0x323
0x9f: JUMPI 0x323 V48
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xa0
[0xa0:0xaa]
---
Predecessors: [0x95]
Successors: [0xab, 0x367]
---
0xa0 DUP1
0xa1 PUSH4 0xd091b550
0xa6 EQ
0xa7 PUSH2 0x367
0xaa JUMPI
---
0xa1: V50 = 0xd091b550
0xa6: V51 = EQ 0xd091b550 V13
0xa7: V52 = 0x367
0xaa: JUMPI 0x367 V51
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xab
[0xab:0xb5]
---
Predecessors: [0xa0]
Successors: [0xb6, 0x37a]
---
0xab DUP1
0xac PUSH4 0xd836fbe8
0xb1 EQ
0xb2 PUSH2 0x37a
0xb5 JUMPI
---
0xac: V53 = 0xd836fbe8
0xb1: V54 = EQ 0xd836fbe8 V13
0xb2: V55 = 0x37a
0xb5: JUMPI 0x37a V54
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xb6
[0xb6:0xc0]
---
Predecessors: [0xab]
Successors: [0xc1, 0x399]
---
0xb6 DUP1
0xb7 PUSH4 0xf09a4016
0xbc EQ
0xbd PUSH2 0x399
0xc0 JUMPI
---
0xb7: V56 = 0xf09a4016
0xbc: V57 = EQ 0xf09a4016 V13
0xbd: V58 = 0x399
0xc0: JUMPI 0x399 V57
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xc1
[0xc1:0xcb]
---
Predecessors: [0xb6]
Successors: [0xcc, 0x3be]
---
0xc1 DUP1
0xc2 PUSH4 0xf5b61230
0xc7 EQ
0xc8 PUSH2 0x3be
0xcb JUMPI
---
0xc2: V59 = 0xf5b61230
0xc7: V60 = EQ 0xf5b61230 V13
0xc8: V61 = 0x3be
0xcb: JUMPI 0x3be V60
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xcc
[0xcc:0xd0]
---
Predecessors: [0x0, 0xc1]
Successors: []
---
0xcc JUMPDEST
0xcd PUSH1 0x0
0xcf DUP1
0xd0 REVERT
---
0xcc: JUMPDEST 
0xcd: V62 = 0x0
0xd0: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xd1
[0xd1:0x154]
---
Predecessors: [0xd]
Successors: [0x3d1]
---
0xd1 JUMPDEST
0xd2 PUSH2 0x155
0xd5 PUSH1 0x4
0xd7 PUSH1 0x24
0xd9 DUP2
0xda CALLDATALOAD
0xdb DUP2
0xdc DUP2
0xdd ADD
0xde SWAP1
0xdf DUP4
0xe0 ADD
0xe1 CALLDATALOAD
0xe2 DUP1
0xe3 PUSH1 0x20
0xe5 DUP2
0xe6 DUP2
0xe7 MUL
0xe8 ADD
0xe9 PUSH1 0x40
0xeb MLOAD
0xec SWAP1
0xed DUP2
0xee ADD
0xef PUSH1 0x40
0xf1 MSTORE
0xf2 DUP1
0xf3 SWAP4
0xf4 SWAP3
0xf5 SWAP2
0xf6 SWAP1
0xf7 DUP2
0xf8 DUP2
0xf9 MSTORE
0xfa PUSH1 0x20
0xfc ADD
0xfd DUP4
0xfe DUP4
0xff PUSH1 0x20
0x101 MUL
0x102 DUP1
0x103 DUP3
0x104 DUP5
0x105 CALLDATACOPY
0x106 DUP3
0x107 ADD
0x108 SWAP2
0x109 POP
0x10a POP
0x10b POP
0x10c POP
0x10d POP
0x10e POP
0x10f SWAP2
0x110 SWAP1
0x111 DUP1
0x112 CALLDATALOAD
0x113 SWAP1
0x114 PUSH1 0x20
0x116 ADD
0x117 SWAP1
0x118 DUP3
0x119 ADD
0x11a DUP1
0x11b CALLDATALOAD
0x11c SWAP1
0x11d PUSH1 0x20
0x11f ADD
0x120 SWAP1
0x121 DUP1
0x122 DUP1
0x123 PUSH1 0x20
0x125 MUL
0x126 PUSH1 0x20
0x128 ADD
0x129 PUSH1 0x40
0x12b MLOAD
0x12c SWAP1
0x12d DUP2
0x12e ADD
0x12f PUSH1 0x40
0x131 MSTORE
0x132 DUP1
0x133 SWAP4
0x134 SWAP3
0x135 SWAP2
0x136 SWAP1
0x137 DUP2
0x138 DUP2
0x139 MSTORE
0x13a PUSH1 0x20
0x13c ADD
0x13d DUP4
0x13e DUP4
0x13f PUSH1 0x20
0x141 MUL
0x142 DUP1
0x143 DUP3
0x144 DUP5
0x145 CALLDATACOPY
0x146 POP
0x147 SWAP5
0x148 SWAP7
0x149 POP
0x14a PUSH2 0x3d1
0x14d SWAP6
0x14e POP
0x14f POP
0x150 POP
0x151 POP
0x152 POP
0x153 POP
0x154 JUMP
---
0xd1: JUMPDEST 
0xd2: V63 = 0x155
0xd5: V64 = 0x4
0xd7: V65 = 0x24
0xda: V66 = CALLDATALOAD 0x4
0xdd: V67 = ADD V66 0x24
0xe0: V68 = ADD 0x4 V66
0xe1: V69 = CALLDATALOAD V68
0xe3: V70 = 0x20
0xe7: V71 = MUL 0x20 V69
0xe8: V72 = ADD V71 0x20
0xe9: V73 = 0x40
0xeb: V74 = M[0x40]
0xee: V75 = ADD V74 V72
0xef: V76 = 0x40
0xf1: M[0x40] = V75
0xf9: M[V74] = V69
0xfa: V77 = 0x20
0xfc: V78 = ADD 0x20 V74
0xff: V79 = 0x20
0x101: V80 = MUL 0x20 V69
0x105: CALLDATACOPY V78 V67 V80
0x107: V81 = ADD V78 V80
0x112: V82 = CALLDATALOAD 0x24
0x114: V83 = 0x20
0x116: V84 = ADD 0x20 0x24
0x119: V85 = ADD 0x4 V82
0x11b: V86 = CALLDATALOAD V85
0x11d: V87 = 0x20
0x11f: V88 = ADD 0x20 V85
0x123: V89 = 0x20
0x125: V90 = MUL 0x20 V86
0x126: V91 = 0x20
0x128: V92 = ADD 0x20 V90
0x129: V93 = 0x40
0x12b: V94 = M[0x40]
0x12e: V95 = ADD V94 V92
0x12f: V96 = 0x40
0x131: M[0x40] = V95
0x139: M[V94] = V86
0x13a: V97 = 0x20
0x13c: V98 = ADD 0x20 V94
0x13f: V99 = 0x20
0x141: V100 = MUL 0x20 V86
0x145: CALLDATACOPY V98 V88 V100
0x14a: V101 = 0x3d1
0x154: JUMP 0x3d1
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x155, V74, V94]
Exit stack: [V13, 0x155, V74, V94]

================================

Block 0x155
[0x155:0x168]
---
Predecessors: [0x478, 0x5a9, 0x7b3]
Successors: []
---
0x155 JUMPDEST
0x156 PUSH1 0x40
0x158 MLOAD
0x159 SWAP1
0x15a ISZERO
0x15b ISZERO
0x15c DUP2
0x15d MSTORE
0x15e PUSH1 0x20
0x160 ADD
0x161 PUSH1 0x40
0x163 MLOAD
0x164 DUP1
0x165 SWAP2
0x166 SUB
0x167 SWAP1
0x168 RETURN
---
0x155: JUMPDEST 
0x156: V102 = 0x40
0x158: V103 = M[0x40]
0x15a: V104 = ISZERO S0
0x15b: V105 = ISZERO V104
0x15d: M[V103] = V105
0x15e: V106 = 0x20
0x160: V107 = ADD 0x20 V103
0x161: V108 = 0x40
0x163: V109 = M[0x40]
0x166: V110 = SUB V107 V109
0x168: RETURN V109 V110
---
Entry stack: [V13, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S1]

================================

Block 0x169
[0x169:0x1ec]
---
Predecessors: [0x27]
Successors: [0x481]
---
0x169 JUMPDEST
0x16a PUSH2 0x155
0x16d PUSH1 0x4
0x16f PUSH1 0x24
0x171 DUP2
0x172 CALLDATALOAD
0x173 DUP2
0x174 DUP2
0x175 ADD
0x176 SWAP1
0x177 DUP4
0x178 ADD
0x179 CALLDATALOAD
0x17a DUP1
0x17b PUSH1 0x20
0x17d DUP2
0x17e DUP2
0x17f MUL
0x180 ADD
0x181 PUSH1 0x40
0x183 MLOAD
0x184 SWAP1
0x185 DUP2
0x186 ADD
0x187 PUSH1 0x40
0x189 MSTORE
0x18a DUP1
0x18b SWAP4
0x18c SWAP3
0x18d SWAP2
0x18e SWAP1
0x18f DUP2
0x190 DUP2
0x191 MSTORE
0x192 PUSH1 0x20
0x194 ADD
0x195 DUP4
0x196 DUP4
0x197 PUSH1 0x20
0x199 MUL
0x19a DUP1
0x19b DUP3
0x19c DUP5
0x19d CALLDATACOPY
0x19e DUP3
0x19f ADD
0x1a0 SWAP2
0x1a1 POP
0x1a2 POP
0x1a3 POP
0x1a4 POP
0x1a5 POP
0x1a6 POP
0x1a7 SWAP2
0x1a8 SWAP1
0x1a9 DUP1
0x1aa CALLDATALOAD
0x1ab SWAP1
0x1ac PUSH1 0x20
0x1ae ADD
0x1af SWAP1
0x1b0 DUP3
0x1b1 ADD
0x1b2 DUP1
0x1b3 CALLDATALOAD
0x1b4 SWAP1
0x1b5 PUSH1 0x20
0x1b7 ADD
0x1b8 SWAP1
0x1b9 DUP1
0x1ba DUP1
0x1bb PUSH1 0x20
0x1bd MUL
0x1be PUSH1 0x20
0x1c0 ADD
0x1c1 PUSH1 0x40
0x1c3 MLOAD
0x1c4 SWAP1
0x1c5 DUP2
0x1c6 ADD
0x1c7 PUSH1 0x40
0x1c9 MSTORE
0x1ca DUP1
0x1cb SWAP4
0x1cc SWAP3
0x1cd SWAP2
0x1ce SWAP1
0x1cf DUP2
0x1d0 DUP2
0x1d1 MSTORE
0x1d2 PUSH1 0x20
0x1d4 ADD
0x1d5 DUP4
0x1d6 DUP4
0x1d7 PUSH1 0x20
0x1d9 MUL
0x1da DUP1
0x1db DUP3
0x1dc DUP5
0x1dd CALLDATACOPY
0x1de POP
0x1df SWAP5
0x1e0 SWAP7
0x1e1 POP
0x1e2 PUSH2 0x481
0x1e5 SWAP6
0x1e6 POP
0x1e7 POP
0x1e8 POP
0x1e9 POP
0x1ea POP
0x1eb POP
0x1ec JUMP
---
0x169: JUMPDEST 
0x16a: V111 = 0x155
0x16d: V112 = 0x4
0x16f: V113 = 0x24
0x172: V114 = CALLDATALOAD 0x4
0x175: V115 = ADD V114 0x24
0x178: V116 = ADD 0x4 V114
0x179: V117 = CALLDATALOAD V116
0x17b: V118 = 0x20
0x17f: V119 = MUL 0x20 V117
0x180: V120 = ADD V119 0x20
0x181: V121 = 0x40
0x183: V122 = M[0x40]
0x186: V123 = ADD V122 V120
0x187: V124 = 0x40
0x189: M[0x40] = V123
0x191: M[V122] = V117
0x192: V125 = 0x20
0x194: V126 = ADD 0x20 V122
0x197: V127 = 0x20
0x199: V128 = MUL 0x20 V117
0x19d: CALLDATACOPY V126 V115 V128
0x19f: V129 = ADD V126 V128
0x1aa: V130 = CALLDATALOAD 0x24
0x1ac: V131 = 0x20
0x1ae: V132 = ADD 0x20 0x24
0x1b1: V133 = ADD 0x4 V130
0x1b3: V134 = CALLDATALOAD V133
0x1b5: V135 = 0x20
0x1b7: V136 = ADD 0x20 V133
0x1bb: V137 = 0x20
0x1bd: V138 = MUL 0x20 V134
0x1be: V139 = 0x20
0x1c0: V140 = ADD 0x20 V138
0x1c1: V141 = 0x40
0x1c3: V142 = M[0x40]
0x1c6: V143 = ADD V142 V140
0x1c7: V144 = 0x40
0x1c9: M[0x40] = V143
0x1d1: M[V142] = V134
0x1d2: V145 = 0x20
0x1d4: V146 = ADD 0x20 V142
0x1d7: V147 = 0x20
0x1d9: V148 = MUL 0x20 V134
0x1dd: CALLDATACOPY V146 V136 V148
0x1e2: V149 = 0x481
0x1ec: JUMP 0x481
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x155, V122, V142]
Exit stack: [V13, 0x155, V122, V142]

================================

Block 0x1ed
[0x1ed:0x1f3]
---
Predecessors: [0x32]
Successors: [0x1f4, 0x1f8]
---
0x1ed JUMPDEST
0x1ee CALLVALUE
0x1ef ISZERO
0x1f0 PUSH2 0x1f8
0x1f3 JUMPI
---
0x1ed: JUMPDEST 
0x1ee: V150 = CALLVALUE
0x1ef: V151 = ISZERO V150
0x1f0: V152 = 0x1f8
0x1f3: JUMPI 0x1f8 V151
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1f4
[0x1f4:0x1f7]
---
Predecessors: [0x1ed]
Successors: []
---
0x1f4 PUSH1 0x0
0x1f6 DUP1
0x1f7 REVERT
---
0x1f4: V153 = 0x0
0x1f7: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1f8
[0x1f8:0x1ff]
---
Predecessors: [0x1ed]
Successors: [0x4db]
---
0x1f8 JUMPDEST
0x1f9 PUSH2 0x200
0x1fc PUSH2 0x4db
0x1ff JUMP
---
0x1f8: JUMPDEST 
0x1f9: V154 = 0x200
0x1fc: V155 = 0x4db
0x1ff: JUMP 0x4db
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x200]
Exit stack: [V13, 0x200]

================================

Block 0x200
[0x200:0x21b]
---
Predecessors: [0x4db, 0x7d2, 0xa8f, 0xb64]
Successors: []
---
0x200 JUMPDEST
0x201 PUSH1 0x40
0x203 MLOAD
0x204 PUSH1 0x1
0x206 PUSH1 0xa0
0x208 PUSH1 0x2
0x20a EXP
0x20b SUB
0x20c SWAP1
0x20d SWAP2
0x20e AND
0x20f DUP2
0x210 MSTORE
0x211 PUSH1 0x20
0x213 ADD
0x214 PUSH1 0x40
0x216 MLOAD
0x217 DUP1
0x218 SWAP2
0x219 SUB
0x21a SWAP1
0x21b RETURN
---
0x200: JUMPDEST 
0x201: V156 = 0x40
0x203: V157 = M[0x40]
0x204: V158 = 0x1
0x206: V159 = 0xa0
0x208: V160 = 0x2
0x20a: V161 = EXP 0x2 0xa0
0x20b: V162 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20e: V163 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x210: M[V157] = V163
0x211: V164 = 0x20
0x213: V165 = ADD 0x20 V157
0x214: V166 = 0x40
0x216: V167 = M[0x40]
0x219: V168 = SUB V165 V167
0x21b: RETURN V167 V168
---
Entry stack: [V13, 0x200, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x200]

================================

Block 0x21c
[0x21c:0x25f]
---
Predecessors: [0x3d]
Successors: [0x4ea]
---
0x21c JUMPDEST
0x21d PUSH2 0x155
0x220 PUSH1 0x4
0x222 PUSH1 0x24
0x224 DUP2
0x225 CALLDATALOAD
0x226 DUP2
0x227 DUP2
0x228 ADD
0x229 SWAP1
0x22a DUP4
0x22b ADD
0x22c CALLDATALOAD
0x22d DUP1
0x22e PUSH1 0x20
0x230 DUP2
0x231 DUP2
0x232 MUL
0x233 ADD
0x234 PUSH1 0x40
0x236 MLOAD
0x237 SWAP1
0x238 DUP2
0x239 ADD
0x23a PUSH1 0x40
0x23c MSTORE
0x23d DUP1
0x23e SWAP4
0x23f SWAP3
0x240 SWAP2
0x241 SWAP1
0x242 DUP2
0x243 DUP2
0x244 MSTORE
0x245 PUSH1 0x20
0x247 ADD
0x248 DUP4
0x249 DUP4
0x24a PUSH1 0x20
0x24c MUL
0x24d DUP1
0x24e DUP3
0x24f DUP5
0x250 CALLDATACOPY
0x251 POP
0x252 SWAP5
0x253 SWAP7
0x254 POP
0x255 PUSH2 0x4ea
0x258 SWAP6
0x259 POP
0x25a POP
0x25b POP
0x25c POP
0x25d POP
0x25e POP
0x25f JUMP
---
0x21c: JUMPDEST 
0x21d: V169 = 0x155
0x220: V170 = 0x4
0x222: V171 = 0x24
0x225: V172 = CALLDATALOAD 0x4
0x228: V173 = ADD V172 0x24
0x22b: V174 = ADD 0x4 V172
0x22c: V175 = CALLDATALOAD V174
0x22e: V176 = 0x20
0x232: V177 = MUL 0x20 V175
0x233: V178 = ADD V177 0x20
0x234: V179 = 0x40
0x236: V180 = M[0x40]
0x239: V181 = ADD V180 V178
0x23a: V182 = 0x40
0x23c: M[0x40] = V181
0x244: M[V180] = V175
0x245: V183 = 0x20
0x247: V184 = ADD 0x20 V180
0x24a: V185 = 0x20
0x24c: V186 = MUL 0x20 V175
0x250: CALLDATACOPY V184 V173 V186
0x255: V187 = 0x4ea
0x25f: JUMP 0x4ea
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x155, V180]
Exit stack: [V13, 0x155, V180]

================================

Block 0x260
[0x260:0x266]
---
Predecessors: [0x48]
Successors: [0x267, 0x26b]
---
0x260 JUMPDEST
0x261 CALLVALUE
0x262 ISZERO
0x263 PUSH2 0x26b
0x266 JUMPI
---
0x260: JUMPDEST 
0x261: V188 = CALLVALUE
0x262: V189 = ISZERO V188
0x263: V190 = 0x26b
0x266: JUMPI 0x26b V189
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x267
[0x267:0x26a]
---
Predecessors: [0x260]
Successors: []
---
0x267 PUSH1 0x0
0x269 DUP1
0x26a REVERT
---
0x267: V191 = 0x0
0x26a: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x26b
[0x26b:0x27e]
---
Predecessors: [0x260]
Successors: [0x5b1]
---
0x26b JUMPDEST
0x26c PUSH2 0x27f
0x26f PUSH1 0x1
0x271 PUSH1 0xa0
0x273 PUSH1 0x2
0x275 EXP
0x276 SUB
0x277 PUSH1 0x4
0x279 CALLDATALOAD
0x27a AND
0x27b PUSH2 0x5b1
0x27e JUMP
---
0x26b: JUMPDEST 
0x26c: V192 = 0x27f
0x26f: V193 = 0x1
0x271: V194 = 0xa0
0x273: V195 = 0x2
0x275: V196 = EXP 0x2 0xa0
0x276: V197 = SUB 0x10000000000000000000000000000000000000000 0x1
0x277: V198 = 0x4
0x279: V199 = CALLDATALOAD 0x4
0x27a: V200 = AND V199 0xffffffffffffffffffffffffffffffffffffffff
0x27b: V201 = 0x5b1
0x27e: JUMP 0x5b1
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x27f, V200]
Exit stack: [V13, 0x27f, V200]

================================

Block 0x27f
[0x27f:0x280]
---
Predecessors: [0x5e2, 0x677, 0x6dd, 0x751, 0xa18, 0xad4, 0xb36]
Successors: []
---
0x27f JUMPDEST
0x280 STOP
---
0x27f: JUMPDEST 
0x280: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x281
[0x281:0x287]
---
Predecessors: [0x53]
Successors: [0x288, 0x28c]
---
0x281 JUMPDEST
0x282 CALLVALUE
0x283 ISZERO
0x284 PUSH2 0x28c
0x287 JUMPI
---
0x281: JUMPDEST 
0x282: V202 = CALLVALUE
0x283: V203 = ISZERO V202
0x284: V204 = 0x28c
0x287: JUMPI 0x28c V203
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x288
[0x288:0x28b]
---
Predecessors: [0x281]
Successors: []
---
0x288 PUSH1 0x0
0x28a DUP1
0x28b REVERT
---
0x288: V205 = 0x0
0x28b: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x28c
[0x28c:0x29f]
---
Predecessors: [0x281]
Successors: [0x645]
---
0x28c JUMPDEST
0x28d PUSH2 0x27f
0x290 PUSH1 0x1
0x292 PUSH1 0xa0
0x294 PUSH1 0x2
0x296 EXP
0x297 SUB
0x298 PUSH1 0x4
0x29a CALLDATALOAD
0x29b AND
0x29c PUSH2 0x645
0x29f JUMP
---
0x28c: JUMPDEST 
0x28d: V206 = 0x27f
0x290: V207 = 0x1
0x292: V208 = 0xa0
0x294: V209 = 0x2
0x296: V210 = EXP 0x2 0xa0
0x297: V211 = SUB 0x10000000000000000000000000000000000000000 0x1
0x298: V212 = 0x4
0x29a: V213 = CALLDATALOAD 0x4
0x29b: V214 = AND V213 0xffffffffffffffffffffffffffffffffffffffff
0x29c: V215 = 0x645
0x29f: JUMP 0x645
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x27f, V214]
Exit stack: [V13, 0x27f, V214]

================================

Block 0x2a0
[0x2a0:0x2a6]
---
Predecessors: [0x5e]
Successors: [0x2a7, 0x2ab]
---
0x2a0 JUMPDEST
0x2a1 CALLVALUE
0x2a2 ISZERO
0x2a3 PUSH2 0x2ab
0x2a6 JUMPI
---
0x2a0: JUMPDEST 
0x2a1: V216 = CALLVALUE
0x2a2: V217 = ISZERO V216
0x2a3: V218 = 0x2ab
0x2a6: JUMPI 0x2ab V217
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2a7
[0x2a7:0x2aa]
---
Predecessors: [0x2a0]
Successors: []
---
0x2a7 PUSH1 0x0
0x2a9 DUP1
0x2aa REVERT
---
0x2a7: V219 = 0x0
0x2aa: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2ab
[0x2ab:0x2be]
---
Predecessors: [0x2a0]
Successors: [0x6c2]
---
0x2ab JUMPDEST
0x2ac PUSH2 0x27f
0x2af PUSH1 0x1
0x2b1 PUSH1 0xa0
0x2b3 PUSH1 0x2
0x2b5 EXP
0x2b6 SUB
0x2b7 PUSH1 0x4
0x2b9 CALLDATALOAD
0x2ba AND
0x2bb PUSH2 0x6c2
0x2be JUMP
---
0x2ab: JUMPDEST 
0x2ac: V220 = 0x27f
0x2af: V221 = 0x1
0x2b1: V222 = 0xa0
0x2b3: V223 = 0x2
0x2b5: V224 = EXP 0x2 0xa0
0x2b6: V225 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b7: V226 = 0x4
0x2b9: V227 = CALLDATALOAD 0x4
0x2ba: V228 = AND V227 0xffffffffffffffffffffffffffffffffffffffff
0x2bb: V229 = 0x6c2
0x2be: JUMP 0x6c2
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x27f, V228]
Exit stack: [V13, 0x27f, V228]

================================

Block 0x2bf
[0x2bf:0x2c5]
---
Predecessors: [0x69]
Successors: [0x2c6, 0x2ca]
---
0x2bf JUMPDEST
0x2c0 CALLVALUE
0x2c1 ISZERO
0x2c2 PUSH2 0x2ca
0x2c5 JUMPI
---
0x2bf: JUMPDEST 
0x2c0: V230 = CALLVALUE
0x2c1: V231 = ISZERO V230
0x2c2: V232 = 0x2ca
0x2c5: JUMPI 0x2ca V231
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2c6
[0x2c6:0x2c9]
---
Predecessors: [0x2bf]
Successors: []
---
0x2c6 PUSH1 0x0
0x2c8 DUP1
0x2c9 REVERT
---
0x2c6: V233 = 0x0
0x2c9: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2ca
[0x2ca:0x2d1]
---
Predecessors: [0x2bf]
Successors: [0x733]
---
0x2ca JUMPDEST
0x2cb PUSH2 0x27f
0x2ce PUSH2 0x733
0x2d1 JUMP
---
0x2ca: JUMPDEST 
0x2cb: V234 = 0x27f
0x2ce: V235 = 0x733
0x2d1: JUMP 0x733
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x27f]
Exit stack: [V13, 0x27f]

================================

Block 0x2d2
[0x2d2:0x2d8]
---
Predecessors: [0x74]
Successors: [0x2d9, 0x2dd]
---
0x2d2 JUMPDEST
0x2d3 CALLVALUE
0x2d4 ISZERO
0x2d5 PUSH2 0x2dd
0x2d8 JUMPI
---
0x2d2: JUMPDEST 
0x2d3: V236 = CALLVALUE
0x2d4: V237 = ISZERO V236
0x2d5: V238 = 0x2dd
0x2d8: JUMPI 0x2dd V237
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2d9
[0x2d9:0x2dc]
---
Predecessors: [0x2d2]
Successors: []
---
0x2d9 PUSH1 0x0
0x2db DUP1
0x2dc REVERT
---
0x2d9: V239 = 0x0
0x2dc: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2dd
[0x2dd:0x2f0]
---
Predecessors: [0x2d2]
Successors: [0x7b3]
---
0x2dd JUMPDEST
0x2de PUSH2 0x155
0x2e1 PUSH1 0x1
0x2e3 PUSH1 0xa0
0x2e5 PUSH1 0x2
0x2e7 EXP
0x2e8 SUB
0x2e9 PUSH1 0x4
0x2eb CALLDATALOAD
0x2ec AND
0x2ed PUSH2 0x7b3
0x2f0 JUMP
---
0x2dd: JUMPDEST 
0x2de: V240 = 0x155
0x2e1: V241 = 0x1
0x2e3: V242 = 0xa0
0x2e5: V243 = 0x2
0x2e7: V244 = EXP 0x2 0xa0
0x2e8: V245 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e9: V246 = 0x4
0x2eb: V247 = CALLDATALOAD 0x4
0x2ec: V248 = AND V247 0xffffffffffffffffffffffffffffffffffffffff
0x2ed: V249 = 0x7b3
0x2f0: JUMP 0x7b3
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x155, V248]
Exit stack: [V13, 0x155, V248]

================================

Block 0x2f1
[0x2f1:0x2f7]
---
Predecessors: [0x7f]
Successors: [0x2f8, 0x2fc]
---
0x2f1 JUMPDEST
0x2f2 CALLVALUE
0x2f3 ISZERO
0x2f4 PUSH2 0x2fc
0x2f7 JUMPI
---
0x2f1: JUMPDEST 
0x2f2: V250 = CALLVALUE
0x2f3: V251 = ISZERO V250
0x2f4: V252 = 0x2fc
0x2f7: JUMPI 0x2fc V251
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2f8
[0x2f8:0x2fb]
---
Predecessors: [0x2f1]
Successors: []
---
0x2f8 PUSH1 0x0
0x2fa DUP1
0x2fb REVERT
---
0x2f8: V253 = 0x0
0x2fb: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2fc
[0x2fc:0x303]
---
Predecessors: [0x2f1]
Successors: [0x7d2]
---
0x2fc JUMPDEST
0x2fd PUSH2 0x200
0x300 PUSH2 0x7d2
0x303 JUMP
---
0x2fc: JUMPDEST 
0x2fd: V254 = 0x200
0x300: V255 = 0x7d2
0x303: JUMP 0x7d2
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x200]
Exit stack: [V13, 0x200]

================================

Block 0x304
[0x304:0x30a]
---
Predecessors: [0x8a]
Successors: [0x30b, 0x30f]
---
0x304 JUMPDEST
0x305 CALLVALUE
0x306 ISZERO
0x307 PUSH2 0x30f
0x30a JUMPI
---
0x304: JUMPDEST 
0x305: V256 = CALLVALUE
0x306: V257 = ISZERO V256
0x307: V258 = 0x30f
0x30a: JUMPI 0x30f V257
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x30b
[0x30b:0x30e]
---
Predecessors: [0x304]
Successors: []
---
0x30b PUSH1 0x0
0x30d DUP1
0x30e REVERT
---
0x30b: V259 = 0x0
0x30e: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x30f
[0x30f:0x322]
---
Predecessors: [0x304]
Successors: [0x7e1]
---
0x30f JUMPDEST
0x310 PUSH2 0x27f
0x313 PUSH1 0x1
0x315 PUSH1 0xa0
0x317 PUSH1 0x2
0x319 EXP
0x31a SUB
0x31b PUSH1 0x4
0x31d CALLDATALOAD
0x31e AND
0x31f PUSH2 0x7e1
0x322 JUMP
---
0x30f: JUMPDEST 
0x310: V260 = 0x27f
0x313: V261 = 0x1
0x315: V262 = 0xa0
0x317: V263 = 0x2
0x319: V264 = EXP 0x2 0xa0
0x31a: V265 = SUB 0x10000000000000000000000000000000000000000 0x1
0x31b: V266 = 0x4
0x31d: V267 = CALLDATALOAD 0x4
0x31e: V268 = AND V267 0xffffffffffffffffffffffffffffffffffffffff
0x31f: V269 = 0x7e1
0x322: JUMP 0x7e1
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x27f, V268]
Exit stack: [V13, 0x27f, V268]

================================

Block 0x323
[0x323:0x366]
---
Predecessors: [0x95]
Successors: [0xa1d]
---
0x323 JUMPDEST
0x324 PUSH2 0x155
0x327 PUSH1 0x4
0x329 PUSH1 0x24
0x32b DUP2
0x32c CALLDATALOAD
0x32d DUP2
0x32e DUP2
0x32f ADD
0x330 SWAP1
0x331 DUP4
0x332 ADD
0x333 CALLDATALOAD
0x334 DUP1
0x335 PUSH1 0x20
0x337 DUP2
0x338 DUP2
0x339 MUL
0x33a ADD
0x33b PUSH1 0x40
0x33d MLOAD
0x33e SWAP1
0x33f DUP2
0x340 ADD
0x341 PUSH1 0x40
0x343 MSTORE
0x344 DUP1
0x345 SWAP4
0x346 SWAP3
0x347 SWAP2
0x348 SWAP1
0x349 DUP2
0x34a DUP2
0x34b MSTORE
0x34c PUSH1 0x20
0x34e ADD
0x34f DUP4
0x350 DUP4
0x351 PUSH1 0x20
0x353 MUL
0x354 DUP1
0x355 DUP3
0x356 DUP5
0x357 CALLDATACOPY
0x358 POP
0x359 SWAP5
0x35a SWAP7
0x35b POP
0x35c PUSH2 0xa1d
0x35f SWAP6
0x360 POP
0x361 POP
0x362 POP
0x363 POP
0x364 POP
0x365 POP
0x366 JUMP
---
0x323: JUMPDEST 
0x324: V270 = 0x155
0x327: V271 = 0x4
0x329: V272 = 0x24
0x32c: V273 = CALLDATALOAD 0x4
0x32f: V274 = ADD V273 0x24
0x332: V275 = ADD 0x4 V273
0x333: V276 = CALLDATALOAD V275
0x335: V277 = 0x20
0x339: V278 = MUL 0x20 V276
0x33a: V279 = ADD V278 0x20
0x33b: V280 = 0x40
0x33d: V281 = M[0x40]
0x340: V282 = ADD V281 V279
0x341: V283 = 0x40
0x343: M[0x40] = V282
0x34b: M[V281] = V276
0x34c: V284 = 0x20
0x34e: V285 = ADD 0x20 V281
0x351: V286 = 0x20
0x353: V287 = MUL 0x20 V276
0x357: CALLDATACOPY V285 V274 V287
0x35c: V288 = 0xa1d
0x366: JUMP 0xa1d
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x155, V281]
Exit stack: [V13, 0x155, V281]

================================

Block 0x367
[0x367:0x36d]
---
Predecessors: [0xa0]
Successors: [0x36e, 0x372]
---
0x367 JUMPDEST
0x368 CALLVALUE
0x369 ISZERO
0x36a PUSH2 0x372
0x36d JUMPI
---
0x367: JUMPDEST 
0x368: V289 = CALLVALUE
0x369: V290 = ISZERO V289
0x36a: V291 = 0x372
0x36d: JUMPI 0x372 V290
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x36e
[0x36e:0x371]
---
Predecessors: [0x367]
Successors: []
---
0x36e PUSH1 0x0
0x370 DUP1
0x371 REVERT
---
0x36e: V292 = 0x0
0x371: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x372
[0x372:0x379]
---
Predecessors: [0x367]
Successors: [0xa8f]
---
0x372 JUMPDEST
0x373 PUSH2 0x200
0x376 PUSH2 0xa8f
0x379 JUMP
---
0x372: JUMPDEST 
0x373: V293 = 0x200
0x376: V294 = 0xa8f
0x379: JUMP 0xa8f
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x200]
Exit stack: [V13, 0x200]

================================

Block 0x37a
[0x37a:0x380]
---
Predecessors: [0xab]
Successors: [0x381, 0x385]
---
0x37a JUMPDEST
0x37b CALLVALUE
0x37c ISZERO
0x37d PUSH2 0x385
0x380 JUMPI
---
0x37a: JUMPDEST 
0x37b: V295 = CALLVALUE
0x37c: V296 = ISZERO V295
0x37d: V297 = 0x385
0x380: JUMPI 0x385 V296
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x381
[0x381:0x384]
---
Predecessors: [0x37a]
Successors: []
---
0x381 PUSH1 0x0
0x383 DUP1
0x384 REVERT
---
0x381: V298 = 0x0
0x384: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x385
[0x385:0x398]
---
Predecessors: [0x37a]
Successors: [0xa9e]
---
0x385 JUMPDEST
0x386 PUSH2 0x27f
0x389 PUSH1 0x1
0x38b PUSH1 0xa0
0x38d PUSH1 0x2
0x38f EXP
0x390 SUB
0x391 PUSH1 0x4
0x393 CALLDATALOAD
0x394 AND
0x395 PUSH2 0xa9e
0x398 JUMP
---
0x385: JUMPDEST 
0x386: V299 = 0x27f
0x389: V300 = 0x1
0x38b: V301 = 0xa0
0x38d: V302 = 0x2
0x38f: V303 = EXP 0x2 0xa0
0x390: V304 = SUB 0x10000000000000000000000000000000000000000 0x1
0x391: V305 = 0x4
0x393: V306 = CALLDATALOAD 0x4
0x394: V307 = AND V306 0xffffffffffffffffffffffffffffffffffffffff
0x395: V308 = 0xa9e
0x398: JUMP 0xa9e
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x27f, V307]
Exit stack: [V13, 0x27f, V307]

================================

Block 0x399
[0x399:0x39f]
---
Predecessors: [0xb6]
Successors: [0x3a0, 0x3a4]
---
0x399 JUMPDEST
0x39a CALLVALUE
0x39b ISZERO
0x39c PUSH2 0x3a4
0x39f JUMPI
---
0x399: JUMPDEST 
0x39a: V309 = CALLVALUE
0x39b: V310 = ISZERO V309
0x39c: V311 = 0x3a4
0x39f: JUMPI 0x3a4 V310
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x3a0
[0x3a0:0x3a3]
---
Predecessors: [0x399]
Successors: []
---
0x3a0 PUSH1 0x0
0x3a2 DUP1
0x3a3 REVERT
---
0x3a0: V312 = 0x0
0x3a3: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x3a4
[0x3a4:0x3bd]
---
Predecessors: [0x399]
Successors: [0xaf6]
---
0x3a4 JUMPDEST
0x3a5 PUSH2 0x27f
0x3a8 PUSH1 0x1
0x3aa PUSH1 0xa0
0x3ac PUSH1 0x2
0x3ae EXP
0x3af SUB
0x3b0 PUSH1 0x4
0x3b2 CALLDATALOAD
0x3b3 DUP2
0x3b4 AND
0x3b5 SWAP1
0x3b6 PUSH1 0x24
0x3b8 CALLDATALOAD
0x3b9 AND
0x3ba PUSH2 0xaf6
0x3bd JUMP
---
0x3a4: JUMPDEST 
0x3a5: V313 = 0x27f
0x3a8: V314 = 0x1
0x3aa: V315 = 0xa0
0x3ac: V316 = 0x2
0x3ae: V317 = EXP 0x2 0xa0
0x3af: V318 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b0: V319 = 0x4
0x3b2: V320 = CALLDATALOAD 0x4
0x3b4: V321 = AND 0xffffffffffffffffffffffffffffffffffffffff V320
0x3b6: V322 = 0x24
0x3b8: V323 = CALLDATALOAD 0x24
0x3b9: V324 = AND V323 0xffffffffffffffffffffffffffffffffffffffff
0x3ba: V325 = 0xaf6
0x3bd: JUMP 0xaf6
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x27f, V321, V324]
Exit stack: [V13, 0x27f, V321, V324]

================================

Block 0x3be
[0x3be:0x3c4]
---
Predecessors: [0xc1]
Successors: [0x3c5, 0x3c9]
---
0x3be JUMPDEST
0x3bf CALLVALUE
0x3c0 ISZERO
0x3c1 PUSH2 0x3c9
0x3c4 JUMPI
---
0x3be: JUMPDEST 
0x3bf: V326 = CALLVALUE
0x3c0: V327 = ISZERO V326
0x3c1: V328 = 0x3c9
0x3c4: JUMPI 0x3c9 V327
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x3c5
[0x3c5:0x3c8]
---
Predecessors: [0x3be]
Successors: []
---
0x3c5 PUSH1 0x0
0x3c7 DUP1
0x3c8 REVERT
---
0x3c5: V329 = 0x0
0x3c8: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x3c9
[0x3c9:0x3d0]
---
Predecessors: [0x3be]
Successors: [0xb64]
---
0x3c9 JUMPDEST
0x3ca PUSH2 0x200
0x3cd PUSH2 0xb64
0x3d0 JUMP
---
0x3c9: JUMPDEST 
0x3ca: V330 = 0x200
0x3cd: V331 = 0xb64
0x3d0: JUMP 0xb64
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x200]
Exit stack: [V13, 0x200]

================================

Block 0x3d1
[0x3d1:0x3e2]
---
Predecessors: [0xd1]
Successors: [0x3e3]
---
0x3d1 JUMPDEST
0x3d2 PUSH1 0x0
0x3d4 DUP1
0x3d5 CALLVALUE
0x3d6 PUSH1 0x1
0x3d8 PUSH1 0xa0
0x3da PUSH1 0x2
0x3dc EXP
0x3dd SUB
0x3de ADDRESS
0x3df AND
0x3e0 BALANCE
0x3e1 SUB
0x3e2 DUP2
---
0x3d1: JUMPDEST 
0x3d2: V332 = 0x0
0x3d5: V333 = CALLVALUE
0x3d6: V334 = 0x1
0x3d8: V335 = 0xa0
0x3da: V336 = 0x2
0x3dc: V337 = EXP 0x2 0xa0
0x3dd: V338 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3de: V339 = ADDRESS
0x3df: V340 = AND V339 0xffffffffffffffffffffffffffffffffffffffff
0x3e0: V341 = BALANCE V340
0x3e1: V342 = SUB V341 V333
---
Entry stack: [V13, 0x155, V74, V94]
Stack pops: 0
Stack additions: [0x0, 0x0, V342, 0x0]
Exit stack: [V13, 0x155, V74, V94, 0x0, 0x0, V342, 0x0]

================================

Block 0x3e3
[0x3e3:0x3ec]
---
Predecessors: [0x3d1, 0x420]
Successors: [0x3ed, 0x42b]
---
0x3e3 JUMPDEST
0x3e4 DUP6
0x3e5 MLOAD
0x3e6 DUP4
0x3e7 LT
0x3e8 ISZERO
0x3e9 PUSH2 0x42b
0x3ec JUMPI
---
0x3e3: JUMPDEST 
0x3e5: V343 = M[S5]
0x3e7: V344 = LT S2 V343
0x3e8: V345 = ISZERO V344
0x3e9: V346 = 0x42b
0x3ec: JUMPI 0x42b V345
---
Entry stack: [V13, S6, S5, S4, 0x0, S2, S1, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V13, S6, S5, S4, 0x0, S2, S1, 0x0]

================================

Block 0x3ed
[0x3ed:0x3f9]
---
Predecessors: [0x3e3]
Successors: [0x3fa, 0x3fb]
---
0x3ed PUSH2 0x420
0x3f0 DUP7
0x3f1 DUP5
0x3f2 DUP2
0x3f3 MLOAD
0x3f4 DUP2
0x3f5 LT
0x3f6 PUSH2 0x3fb
0x3f9 JUMPI
---
0x3ed: V347 = 0x420
0x3f3: V348 = M[S5]
0x3f5: V349 = LT S2 V348
0x3f6: V350 = 0x3fb
0x3f9: JUMPI 0x3fb V349
---
Entry stack: [V13, S6, S5, S4, 0x0, S2, S1, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, 0x420, S5, S2]
Exit stack: [V13, S6, S5, S4, 0x0, S2, S1, 0x0, 0x420, S5, S2]

================================

Block 0x3fa
[0x3fa:0x3fa]
---
Predecessors: [0x3ed]
Successors: []
---
0x3fa INVALID
---
0x3fa: INVALID 
---
Entry stack: [V13, S9, S8, S7, 0x0, S5, S4, 0x0, 0x420, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S9, S8, S7, 0x0, S5, S4, 0x0, 0x420, S1, S0]

================================

Block 0x3fb
[0x3fb:0x40f]
---
Predecessors: [0x3ed]
Successors: [0x410, 0x411]
---
0x3fb JUMPDEST
0x3fc SWAP1
0x3fd PUSH1 0x20
0x3ff ADD
0x400 SWAP1
0x401 PUSH1 0x20
0x403 MUL
0x404 ADD
0x405 MLOAD
0x406 DUP7
0x407 DUP6
0x408 DUP2
0x409 MLOAD
0x40a DUP2
0x40b LT
0x40c PUSH2 0x411
0x40f JUMPI
---
0x3fb: JUMPDEST 
0x3fd: V351 = 0x20
0x3ff: V352 = ADD 0x20 S1
0x401: V353 = 0x20
0x403: V354 = MUL 0x20 S0
0x404: V355 = ADD V354 V352
0x405: V356 = M[V355]
0x409: V357 = M[S7]
0x40b: V358 = LT S5 V357
0x40c: V359 = 0x411
0x40f: JUMPI 0x411 V358
---
Entry stack: [V13, S9, S8, S7, 0x0, S5, S4, 0x0, 0x420, S1, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, V356, S7, S5]
Exit stack: [V13, S9, S8, S7, 0x0, S5, S4, 0x0, 0x420, V356, S7, S5]

================================

Block 0x410
[0x410:0x410]
---
Predecessors: [0x3fb]
Successors: []
---
0x410 INVALID
---
0x410: INVALID 
---
Entry stack: [V13, S10, S9, S8, 0x0, S6, S5, 0x0, 0x420, V356, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S10, S9, S8, 0x0, S6, S5, 0x0, 0x420, V356, S1, S0]

================================

Block 0x411
[0x411:0x41f]
---
Predecessors: [0x3fb]
Successors: [0xb73]
---
0x411 JUMPDEST
0x412 SWAP1
0x413 PUSH1 0x20
0x415 ADD
0x416 SWAP1
0x417 PUSH1 0x20
0x419 MUL
0x41a ADD
0x41b MLOAD
0x41c PUSH2 0xb73
0x41f JUMP
---
0x411: JUMPDEST 
0x413: V360 = 0x20
0x415: V361 = ADD 0x20 S1
0x417: V362 = 0x20
0x419: V363 = MUL 0x20 S0
0x41a: V364 = ADD V363 V361
0x41b: V365 = M[V364]
0x41c: V366 = 0xb73
0x41f: JUMP 0xb73
---
Entry stack: [V13, S10, S9, S8, 0x0, S6, S5, 0x0, 0x420, V356, S1, S0]
Stack pops: 2
Stack additions: [V365]
Exit stack: [V13, S10, S9, S8, 0x0, S6, S5, 0x0, 0x420, V356, V365]

================================

Block 0x420
[0x420:0x42a]
---
Predecessors: [0xb88]
Successors: [0x3e3]
---
0x420 JUMPDEST
0x421 PUSH1 0x1
0x423 SWAP1
0x424 SWAP3
0x425 ADD
0x426 SWAP2
0x427 PUSH2 0x3e3
0x42a JUMP
---
0x420: JUMPDEST 
0x421: V367 = 0x1
0x425: V368 = ADD S2 0x1
0x427: V369 = 0x3e3
0x42a: JUMP 0x3e3
---
Entry stack: [V13, S6, S5, S4, 0x0, S2, S1, 0x0]
Stack pops: 3
Stack additions: [V368, S1, S0]
Exit stack: [V13, S6, S5, S4, 0x0, V368, S1, 0x0]

================================

Block 0x42b
[0x42b:0x447]
---
Predecessors: [0x3e3, 0x493]
Successors: [0x448, 0x478]
---
0x42b JUMPDEST
0x42c PUSH1 0x1
0x42e SWAP4
0x42f POP
0x430 DUP2
0x431 ADDRESS
0x432 PUSH1 0x1
0x434 PUSH1 0xa0
0x436 PUSH1 0x2
0x438 EXP
0x439 SUB
0x43a AND
0x43b BALANCE
0x43c SUB
0x43d SWAP1
0x43e POP
0x43f PUSH1 0x0
0x441 DUP2
0x442 GT
0x443 ISZERO
0x444 PUSH2 0x478
0x447 JUMPI
---
0x42b: JUMPDEST 
0x42c: V370 = 0x1
0x431: V371 = ADDRESS
0x432: V372 = 0x1
0x434: V373 = 0xa0
0x436: V374 = 0x2
0x438: V375 = EXP 0x2 0xa0
0x439: V376 = SUB 0x10000000000000000000000000000000000000000 0x1
0x43a: V377 = AND 0xffffffffffffffffffffffffffffffffffffffff V371
0x43b: V378 = BALANCE V377
0x43c: V379 = SUB V378 S1
0x43f: V380 = 0x0
0x442: V381 = GT V379 0x0
0x443: V382 = ISZERO V381
0x444: V383 = 0x478
0x447: JUMPI 0x478 V382
---
Entry stack: [V13, S6, S5, S4, 0x0, S2, S1, 0x0]
Stack pops: 4
Stack additions: [0x1, S2, S1, V379]
Exit stack: [V13, S6, S5, S4, 0x1, S2, S1, V379]

================================

Block 0x448
[0x448:0x473]
---
Predecessors: [0x42b]
Successors: [0x474, 0x478]
---
0x448 PUSH1 0x1
0x44a PUSH1 0xa0
0x44c PUSH1 0x2
0x44e EXP
0x44f SUB
0x450 CALLER
0x451 AND
0x452 DUP2
0x453 ISZERO
0x454 PUSH2 0x8fc
0x457 MUL
0x458 DUP3
0x459 PUSH1 0x40
0x45b MLOAD
0x45c PUSH1 0x0
0x45e PUSH1 0x40
0x460 MLOAD
0x461 DUP1
0x462 DUP4
0x463 SUB
0x464 DUP2
0x465 DUP6
0x466 DUP9
0x467 DUP9
0x468 CALL
0x469 SWAP4
0x46a POP
0x46b POP
0x46c POP
0x46d POP
0x46e ISZERO
0x46f ISZERO
0x470 PUSH2 0x478
0x473 JUMPI
---
0x448: V384 = 0x1
0x44a: V385 = 0xa0
0x44c: V386 = 0x2
0x44e: V387 = EXP 0x2 0xa0
0x44f: V388 = SUB 0x10000000000000000000000000000000000000000 0x1
0x450: V389 = CALLER
0x451: V390 = AND V389 0xffffffffffffffffffffffffffffffffffffffff
0x453: V391 = ISZERO V379
0x454: V392 = 0x8fc
0x457: V393 = MUL 0x8fc V391
0x459: V394 = 0x40
0x45b: V395 = M[0x40]
0x45c: V396 = 0x0
0x45e: V397 = 0x40
0x460: V398 = M[0x40]
0x463: V399 = SUB V395 V398
0x468: V400 = CALL V393 V390 V379 V398 V399 V398 0x0
0x46e: V401 = ISZERO V400
0x46f: V402 = ISZERO V401
0x470: V403 = 0x478
0x473: JUMPI 0x478 V402
---
Entry stack: [V13, S6, S5, S4, 0x1, S2, S1, V379]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, S6, S5, S4, 0x1, S2, S1, V379]

================================

Block 0x474
[0x474:0x477]
---
Predecessors: [0x448]
Successors: []
---
0x474 PUSH1 0x0
0x476 DUP1
0x477 REVERT
---
0x474: V404 = 0x0
0x477: REVERT 0x0 0x0
---
Entry stack: [V13, S6, S5, S4, 0x1, S2, S1, V379]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S6, S5, S4, 0x1, S2, S1, V379]

================================

Block 0x478
[0x478:0x480]
---
Predecessors: [0x42b, 0x448]
Successors: [0x155]
---
0x478 JUMPDEST
0x479 POP
0x47a POP
0x47b POP
0x47c SWAP3
0x47d SWAP2
0x47e POP
0x47f POP
0x480 JUMP
---
0x478: JUMPDEST 
0x480: JUMP S6
---
Entry stack: [V13, S6, S5, S4, 0x1, S2, S1, V379]
Stack pops: 7
Stack additions: [S3]
Exit stack: [V13, 0x1]

================================

Block 0x481
[0x481:0x492]
---
Predecessors: [0x169]
Successors: [0x493]
---
0x481 JUMPDEST
0x482 PUSH1 0x0
0x484 DUP1
0x485 CALLVALUE
0x486 PUSH1 0x1
0x488 PUSH1 0xa0
0x48a PUSH1 0x2
0x48c EXP
0x48d SUB
0x48e ADDRESS
0x48f AND
0x490 BALANCE
0x491 SUB
0x492 DUP2
---
0x481: JUMPDEST 
0x482: V405 = 0x0
0x485: V406 = CALLVALUE
0x486: V407 = 0x1
0x488: V408 = 0xa0
0x48a: V409 = 0x2
0x48c: V410 = EXP 0x2 0xa0
0x48d: V411 = SUB 0x10000000000000000000000000000000000000000 0x1
0x48e: V412 = ADDRESS
0x48f: V413 = AND V412 0xffffffffffffffffffffffffffffffffffffffff
0x490: V414 = BALANCE V413
0x491: V415 = SUB V414 V406
---
Entry stack: [V13, 0x155, V122, V142]
Stack pops: 0
Stack additions: [0x0, 0x0, V415, 0x0]
Exit stack: [V13, 0x155, V122, V142, 0x0, 0x0, V415, 0x0]

================================

Block 0x493
[0x493:0x49c]
---
Predecessors: [0x481, 0x4d0]
Successors: [0x42b, 0x49d]
---
0x493 JUMPDEST
0x494 DUP6
0x495 MLOAD
0x496 DUP4
0x497 LT
0x498 ISZERO
0x499 PUSH2 0x42b
0x49c JUMPI
---
0x493: JUMPDEST 
0x495: V416 = M[S5]
0x497: V417 = LT S2 V416
0x498: V418 = ISZERO V417
0x499: V419 = 0x42b
0x49c: JUMPI 0x42b V418
---
Entry stack: [V13, S6, S5, S4, 0x0, S2, S1, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V13, S6, S5, S4, 0x0, S2, S1, 0x0]

================================

Block 0x49d
[0x49d:0x4a9]
---
Predecessors: [0x493]
Successors: [0x4aa, 0x4ab]
---
0x49d PUSH2 0x4d0
0x4a0 DUP7
0x4a1 DUP5
0x4a2 DUP2
0x4a3 MLOAD
0x4a4 DUP2
0x4a5 LT
0x4a6 PUSH2 0x4ab
0x4a9 JUMPI
---
0x49d: V420 = 0x4d0
0x4a3: V421 = M[S5]
0x4a5: V422 = LT S2 V421
0x4a6: V423 = 0x4ab
0x4a9: JUMPI 0x4ab V422
---
Entry stack: [V13, S6, S5, S4, 0x0, S2, S1, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, 0x4d0, S5, S2]
Exit stack: [V13, S6, S5, S4, 0x0, S2, S1, 0x0, 0x4d0, S5, S2]

================================

Block 0x4aa
[0x4aa:0x4aa]
---
Predecessors: [0x49d]
Successors: []
---
0x4aa INVALID
---
0x4aa: INVALID 
---
Entry stack: [V13, S9, S8, S7, 0x0, S5, S4, 0x0, 0x4d0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S9, S8, S7, 0x0, S5, S4, 0x0, 0x4d0, S1, S0]

================================

Block 0x4ab
[0x4ab:0x4bf]
---
Predecessors: [0x49d]
Successors: [0x4c0, 0x4c1]
---
0x4ab JUMPDEST
0x4ac SWAP1
0x4ad PUSH1 0x20
0x4af ADD
0x4b0 SWAP1
0x4b1 PUSH1 0x20
0x4b3 MUL
0x4b4 ADD
0x4b5 MLOAD
0x4b6 DUP7
0x4b7 DUP6
0x4b8 DUP2
0x4b9 MLOAD
0x4ba DUP2
0x4bb LT
0x4bc PUSH2 0x4c1
0x4bf JUMPI
---
0x4ab: JUMPDEST 
0x4ad: V424 = 0x20
0x4af: V425 = ADD 0x20 S1
0x4b1: V426 = 0x20
0x4b3: V427 = MUL 0x20 S0
0x4b4: V428 = ADD V427 V425
0x4b5: V429 = M[V428]
0x4b9: V430 = M[S7]
0x4bb: V431 = LT S5 V430
0x4bc: V432 = 0x4c1
0x4bf: JUMPI 0x4c1 V431
---
Entry stack: [V13, S9, S8, S7, 0x0, S5, S4, 0x0, 0x4d0, S1, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, V429, S7, S5]
Exit stack: [V13, S9, S8, S7, 0x0, S5, S4, 0x0, 0x4d0, V429, S7, S5]

================================

Block 0x4c0
[0x4c0:0x4c0]
---
Predecessors: [0x4ab]
Successors: []
---
0x4c0 INVALID
---
0x4c0: INVALID 
---
Entry stack: [V13, S10, S9, S8, 0x0, S6, S5, 0x0, 0x4d0, V429, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S10, S9, S8, 0x0, S6, S5, 0x0, 0x4d0, V429, S1, S0]

================================

Block 0x4c1
[0x4c1:0x4cf]
---
Predecessors: [0x4ab]
Successors: [0xbaf]
---
0x4c1 JUMPDEST
0x4c2 SWAP1
0x4c3 PUSH1 0x20
0x4c5 ADD
0x4c6 SWAP1
0x4c7 PUSH1 0x20
0x4c9 MUL
0x4ca ADD
0x4cb MLOAD
0x4cc PUSH2 0xbaf
0x4cf JUMP
---
0x4c1: JUMPDEST 
0x4c3: V433 = 0x20
0x4c5: V434 = ADD 0x20 S1
0x4c7: V435 = 0x20
0x4c9: V436 = MUL 0x20 S0
0x4ca: V437 = ADD V436 V434
0x4cb: V438 = M[V437]
0x4cc: V439 = 0xbaf
0x4cf: JUMP 0xbaf
---
Entry stack: [V13, S10, S9, S8, 0x0, S6, S5, 0x0, 0x4d0, V429, S1, S0]
Stack pops: 2
Stack additions: [V438]
Exit stack: [V13, S10, S9, S8, 0x0, S6, S5, 0x0, 0x4d0, V429, V438]

================================

Block 0x4d0
[0x4d0:0x4da]
---
Predecessors: [0xbc4]
Successors: [0x493]
---
0x4d0 JUMPDEST
0x4d1 PUSH1 0x1
0x4d3 SWAP1
0x4d4 SWAP3
0x4d5 ADD
0x4d6 SWAP2
0x4d7 PUSH2 0x493
0x4da JUMP
---
0x4d0: JUMPDEST 
0x4d1: V440 = 0x1
0x4d5: V441 = ADD S2 0x1
0x4d7: V442 = 0x493
0x4da: JUMP 0x493
---
Entry stack: [V13, S6, S5, S4, 0x0, S2, S1, 0x0]
Stack pops: 3
Stack additions: [V441, S1, S0]
Exit stack: [V13, S6, S5, S4, 0x0, V441, S1, 0x0]

================================

Block 0x4db
[0x4db:0x4e9]
---
Predecessors: [0x1f8]
Successors: [0x200]
---
0x4db JUMPDEST
0x4dc PUSH1 0x2
0x4de SLOAD
0x4df PUSH1 0x1
0x4e1 PUSH1 0xa0
0x4e3 PUSH1 0x2
0x4e5 EXP
0x4e6 SUB
0x4e7 AND
0x4e8 DUP2
0x4e9 JUMP
---
0x4db: JUMPDEST 
0x4dc: V443 = 0x2
0x4de: V444 = S[0x2]
0x4df: V445 = 0x1
0x4e1: V446 = 0xa0
0x4e3: V447 = 0x2
0x4e5: V448 = EXP 0x2 0xa0
0x4e6: V449 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4e7: V450 = AND 0xffffffffffffffffffffffffffffffffffffffff V444
0x4e9: JUMP 0x200
---
Entry stack: [V13, 0x200]
Stack pops: 1
Stack additions: [S0, V450]
Exit stack: [V13, 0x200, V450]

================================

Block 0x4ea
[0x4ea:0x4fb]
---
Predecessors: [0x21c]
Successors: [0x4fc]
---
0x4ea JUMPDEST
0x4eb PUSH1 0x0
0x4ed DUP1
0x4ee CALLVALUE
0x4ef PUSH1 0x1
0x4f1 PUSH1 0xa0
0x4f3 PUSH1 0x2
0x4f5 EXP
0x4f6 SUB
0x4f7 ADDRESS
0x4f8 AND
0x4f9 BALANCE
0x4fa SUB
0x4fb DUP2
---
0x4ea: JUMPDEST 
0x4eb: V451 = 0x0
0x4ee: V452 = CALLVALUE
0x4ef: V453 = 0x1
0x4f1: V454 = 0xa0
0x4f3: V455 = 0x2
0x4f5: V456 = EXP 0x2 0xa0
0x4f6: V457 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f7: V458 = ADDRESS
0x4f8: V459 = AND V458 0xffffffffffffffffffffffffffffffffffffffff
0x4f9: V460 = BALANCE V459
0x4fa: V461 = SUB V460 V452
---
Entry stack: [V13, 0x155, V180]
Stack pops: 0
Stack additions: [0x0, 0x0, V461, 0x0]
Exit stack: [V13, 0x155, V180, 0x0, 0x0, V461, 0x0]

================================

Block 0x4fc
[0x4fc:0x505]
---
Predecessors: [0x4ea, 0x551]
Successors: [0x506, 0x55c]
---
0x4fc JUMPDEST
0x4fd DUP5
0x4fe MLOAD
0x4ff DUP4
0x500 LT
0x501 ISZERO
0x502 PUSH2 0x55c
0x505 JUMPI
---
0x4fc: JUMPDEST 
0x4fe: V462 = M[S4]
0x500: V463 = LT S2 V462
0x501: V464 = ISZERO V463
0x502: V465 = 0x55c
0x505: JUMPI 0x55c V464
---
Entry stack: [V13, S6, S5, S4, 0x0, S2, S1, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V13, S6, S5, S4, 0x0, S2, S1, 0x0]

================================

Block 0x506
[0x506:0x514]
---
Predecessors: [0x4fc]
Successors: [0x515, 0x516]
---
0x506 PUSH2 0x551
0x509 PUSH1 0x60
0x50b DUP7
0x50c DUP6
0x50d DUP2
0x50e MLOAD
0x50f DUP2
0x510 LT
0x511 PUSH2 0x516
0x514 JUMPI
---
0x506: V466 = 0x551
0x509: V467 = 0x60
0x50e: V468 = M[S4]
0x510: V469 = LT S2 V468
0x511: V470 = 0x516
0x514: JUMPI 0x516 V469
---
Entry stack: [V13, S6, S5, S4, 0x0, S2, S1, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x551, 0x60, S4, S2]
Exit stack: [V13, S6, S5, S4, 0x0, S2, S1, 0x0, 0x551, 0x60, S4, S2]

================================

Block 0x515
[0x515:0x515]
---
Predecessors: [0x506]
Successors: []
---
0x515 INVALID
---
0x515: INVALID 
---
Entry stack: [V13, S10, S9, S8, 0x0, S6, S5, 0x0, 0x551, 0x60, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S10, S9, S8, 0x0, S6, S5, 0x0, 0x551, 0x60, S1, S0]

================================

Block 0x516
[0x516:0x532]
---
Predecessors: [0x506]
Successors: [0x533, 0x534]
---
0x516 JUMPDEST
0x517 SWAP1
0x518 PUSH1 0x20
0x51a ADD
0x51b SWAP1
0x51c PUSH1 0x20
0x51e MUL
0x51f ADD
0x520 MLOAD
0x521 PUSH1 0x2
0x523 SWAP2
0x524 SWAP1
0x525 SWAP2
0x526 EXP
0x527 SWAP1
0x528 DIV
0x529 DUP7
0x52a DUP6
0x52b DUP2
0x52c MLOAD
0x52d DUP2
0x52e LT
0x52f PUSH2 0x534
0x532 JUMPI
---
0x516: JUMPDEST 
0x518: V471 = 0x20
0x51a: V472 = ADD 0x20 S1
0x51c: V473 = 0x20
0x51e: V474 = MUL 0x20 S0
0x51f: V475 = ADD V474 V472
0x520: V476 = M[V475]
0x521: V477 = 0x2
0x526: V478 = EXP 0x2 0x60
0x528: V479 = DIV V476 0x1000000000000000000000000
0x52c: V480 = M[S8]
0x52e: V481 = LT S6 V480
0x52f: V482 = 0x534
0x532: JUMPI 0x534 V481
---
Entry stack: [V13, S10, S9, S8, 0x0, S6, S5, 0x0, 0x551, 0x60, S1, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, V479, S8, S6]
Exit stack: [V13, S10, S9, S8, 0x0, S6, S5, 0x0, 0x551, V479, S8, S6]

================================

Block 0x533
[0x533:0x533]
---
Predecessors: [0x516]
Successors: []
---
0x533 INVALID
---
0x533: INVALID 
---
Entry stack: [V13, S10, S9, S8, 0x0, S6, S5, 0x0, 0x551, V479, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S10, S9, S8, 0x0, S6, S5, 0x0, 0x551, V479, S1, S0]

================================

Block 0x534
[0x534:0x550]
---
Predecessors: [0x516]
Successors: [0xbaf]
---
0x534 JUMPDEST
0x535 SWAP1
0x536 PUSH1 0x20
0x538 ADD
0x539 SWAP1
0x53a PUSH1 0x20
0x53c MUL
0x53d ADD
0x53e MLOAD
0x53f PUSH12 0xffffffffffffffffffffffff
0x54c AND
0x54d PUSH2 0xbaf
0x550 JUMP
---
0x534: JUMPDEST 
0x536: V483 = 0x20
0x538: V484 = ADD 0x20 S1
0x53a: V485 = 0x20
0x53c: V486 = MUL 0x20 S0
0x53d: V487 = ADD V486 V484
0x53e: V488 = M[V487]
0x53f: V489 = 0xffffffffffffffffffffffff
0x54c: V490 = AND 0xffffffffffffffffffffffff V488
0x54d: V491 = 0xbaf
0x550: JUMP 0xbaf
---
Entry stack: [V13, S10, S9, S8, 0x0, S6, S5, 0x0, 0x551, V479, S1, S0]
Stack pops: 2
Stack additions: [V490]
Exit stack: [V13, S10, S9, S8, 0x0, S6, S5, 0x0, 0x551, V479, V490]

================================

Block 0x551
[0x551:0x55b]
---
Predecessors: [0xbc4]
Successors: [0x4fc]
---
0x551 JUMPDEST
0x552 PUSH1 0x1
0x554 SWAP1
0x555 SWAP3
0x556 ADD
0x557 SWAP2
0x558 PUSH2 0x4fc
0x55b JUMP
---
0x551: JUMPDEST 
0x552: V492 = 0x1
0x556: V493 = ADD S2 0x1
0x558: V494 = 0x4fc
0x55b: JUMP 0x4fc
---
Entry stack: [V13, S6, S5, S4, 0x0, S2, S1, 0x0]
Stack pops: 3
Stack additions: [V493, S1, S0]
Exit stack: [V13, S6, S5, S4, 0x0, V493, S1, 0x0]

================================

Block 0x55c
[0x55c:0x578]
---
Predecessors: [0x4fc, 0xa2f]
Successors: [0x579, 0x5a9]
---
0x55c JUMPDEST
0x55d PUSH1 0x1
0x55f SWAP4
0x560 POP
0x561 DUP2
0x562 ADDRESS
0x563 PUSH1 0x1
0x565 PUSH1 0xa0
0x567 PUSH1 0x2
0x569 EXP
0x56a SUB
0x56b AND
0x56c BALANCE
0x56d SUB
0x56e SWAP1
0x56f POP
0x570 PUSH1 0x0
0x572 DUP2
0x573 GT
0x574 ISZERO
0x575 PUSH2 0x5a9
0x578 JUMPI
---
0x55c: JUMPDEST 
0x55d: V495 = 0x1
0x562: V496 = ADDRESS
0x563: V497 = 0x1
0x565: V498 = 0xa0
0x567: V499 = 0x2
0x569: V500 = EXP 0x2 0xa0
0x56a: V501 = SUB 0x10000000000000000000000000000000000000000 0x1
0x56b: V502 = AND 0xffffffffffffffffffffffffffffffffffffffff V496
0x56c: V503 = BALANCE V502
0x56d: V504 = SUB V503 S1
0x570: V505 = 0x0
0x573: V506 = GT V504 0x0
0x574: V507 = ISZERO V506
0x575: V508 = 0x5a9
0x578: JUMPI 0x5a9 V507
---
Entry stack: [V13, S6, S5, S4, 0x0, S2, S1, 0x0]
Stack pops: 4
Stack additions: [0x1, S2, S1, V504]
Exit stack: [V13, S6, S5, S4, 0x1, S2, S1, V504]

================================

Block 0x579
[0x579:0x5a4]
---
Predecessors: [0x55c]
Successors: [0x5a5, 0x5a9]
---
0x579 PUSH1 0x1
0x57b PUSH1 0xa0
0x57d PUSH1 0x2
0x57f EXP
0x580 SUB
0x581 CALLER
0x582 AND
0x583 DUP2
0x584 ISZERO
0x585 PUSH2 0x8fc
0x588 MUL
0x589 DUP3
0x58a PUSH1 0x40
0x58c MLOAD
0x58d PUSH1 0x0
0x58f PUSH1 0x40
0x591 MLOAD
0x592 DUP1
0x593 DUP4
0x594 SUB
0x595 DUP2
0x596 DUP6
0x597 DUP9
0x598 DUP9
0x599 CALL
0x59a SWAP4
0x59b POP
0x59c POP
0x59d POP
0x59e POP
0x59f ISZERO
0x5a0 ISZERO
0x5a1 PUSH2 0x5a9
0x5a4 JUMPI
---
0x579: V509 = 0x1
0x57b: V510 = 0xa0
0x57d: V511 = 0x2
0x57f: V512 = EXP 0x2 0xa0
0x580: V513 = SUB 0x10000000000000000000000000000000000000000 0x1
0x581: V514 = CALLER
0x582: V515 = AND V514 0xffffffffffffffffffffffffffffffffffffffff
0x584: V516 = ISZERO V504
0x585: V517 = 0x8fc
0x588: V518 = MUL 0x8fc V516
0x58a: V519 = 0x40
0x58c: V520 = M[0x40]
0x58d: V521 = 0x0
0x58f: V522 = 0x40
0x591: V523 = M[0x40]
0x594: V524 = SUB V520 V523
0x599: V525 = CALL V518 V515 V504 V523 V524 V523 0x0
0x59f: V526 = ISZERO V525
0x5a0: V527 = ISZERO V526
0x5a1: V528 = 0x5a9
0x5a4: JUMPI 0x5a9 V527
---
Entry stack: [V13, S6, S5, S4, 0x1, S2, S1, V504]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, S6, S5, S4, 0x1, S2, S1, V504]

================================

Block 0x5a5
[0x5a5:0x5a8]
---
Predecessors: [0x579]
Successors: []
---
0x5a5 PUSH1 0x0
0x5a7 DUP1
0x5a8 REVERT
---
0x5a5: V529 = 0x0
0x5a8: REVERT 0x0 0x0
---
Entry stack: [V13, S6, S5, S4, 0x1, S2, S1, V504]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S6, S5, S4, 0x1, S2, S1, V504]

================================

Block 0x5a9
[0x5a9:0x5b0]
---
Predecessors: [0x55c, 0x579]
Successors: [0x155]
---
0x5a9 JUMPDEST
0x5aa POP
0x5ab POP
0x5ac POP
0x5ad SWAP2
0x5ae SWAP1
0x5af POP
0x5b0 JUMP
---
0x5a9: JUMPDEST 
0x5b0: JUMP S5
---
Entry stack: [V13, S6, S5, S4, 0x1, S2, S1, V504]
Stack pops: 6
Stack additions: [S3]
Exit stack: [V13, S6, 0x1]

================================

Block 0x5b1
[0x5b1:0x5c8]
---
Predecessors: [0x26b]
Successors: [0x5c9, 0x5cd]
---
0x5b1 JUMPDEST
0x5b2 PUSH1 0x0
0x5b4 DUP1
0x5b5 SLOAD
0x5b6 CALLER
0x5b7 PUSH1 0x1
0x5b9 PUSH1 0xa0
0x5bb PUSH1 0x2
0x5bd EXP
0x5be SUB
0x5bf SWAP1
0x5c0 DUP2
0x5c1 AND
0x5c2 SWAP2
0x5c3 AND
0x5c4 EQ
0x5c5 PUSH2 0x5cd
0x5c8 JUMPI
---
0x5b1: JUMPDEST 
0x5b2: V530 = 0x0
0x5b5: V531 = S[0x0]
0x5b6: V532 = CALLER
0x5b7: V533 = 0x1
0x5b9: V534 = 0xa0
0x5bb: V535 = 0x2
0x5bd: V536 = EXP 0x2 0xa0
0x5be: V537 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5c1: V538 = AND 0xffffffffffffffffffffffffffffffffffffffff V532
0x5c3: V539 = AND V531 0xffffffffffffffffffffffffffffffffffffffff
0x5c4: V540 = EQ V539 V538
0x5c5: V541 = 0x5cd
0x5c8: JUMPI 0x5cd V540
---
Entry stack: [V13, 0x27f, V200]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x27f, V200, 0x0]

================================

Block 0x5c9
[0x5c9:0x5cc]
---
Predecessors: [0x5b1]
Successors: []
---
0x5c9 PUSH1 0x0
0x5cb DUP1
0x5cc REVERT
---
0x5c9: V542 = 0x0
0x5cc: REVERT 0x0 0x0
---
Entry stack: [V13, 0x27f, V200, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27f, V200, 0x0]

================================

Block 0x5cd
[0x5cd:0x5dd]
---
Predecessors: [0x5b1]
Successors: [0x5de, 0x5e2]
---
0x5cd JUMPDEST
0x5ce PUSH1 0x1
0x5d0 PUSH1 0xa0
0x5d2 PUSH1 0x2
0x5d4 EXP
0x5d5 SUB
0x5d6 DUP3
0x5d7 AND
0x5d8 ISZERO
0x5d9 ISZERO
0x5da PUSH2 0x5e2
0x5dd JUMPI
---
0x5cd: JUMPDEST 
0x5ce: V543 = 0x1
0x5d0: V544 = 0xa0
0x5d2: V545 = 0x2
0x5d4: V546 = EXP 0x2 0xa0
0x5d5: V547 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5d7: V548 = AND V200 0xffffffffffffffffffffffffffffffffffffffff
0x5d8: V549 = ISZERO V548
0x5d9: V550 = ISZERO V549
0x5da: V551 = 0x5e2
0x5dd: JUMPI 0x5e2 V550
---
Entry stack: [V13, 0x27f, V200, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x27f, V200, 0x0]

================================

Block 0x5de
[0x5de:0x5e1]
---
Predecessors: [0x5cd]
Successors: []
---
0x5de PUSH1 0x0
0x5e0 DUP1
0x5e1 REVERT
---
0x5de: V552 = 0x0
0x5e1: REVERT 0x0 0x0
---
Entry stack: [V13, 0x27f, V200, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27f, V200, 0x0]

================================

Block 0x5e2
[0x5e2:0x644]
---
Predecessors: [0x5cd]
Successors: [0x27f]
---
0x5e2 JUMPDEST
0x5e3 POP
0x5e4 PUSH1 0x0
0x5e6 DUP1
0x5e7 SLOAD
0x5e8 PUSH1 0x1
0x5ea PUSH1 0xa0
0x5ec PUSH1 0x2
0x5ee EXP
0x5ef SUB
0x5f0 DUP4
0x5f1 DUP2
0x5f2 AND
0x5f3 PUSH1 0x1
0x5f5 PUSH1 0xa0
0x5f7 PUSH1 0x2
0x5f9 EXP
0x5fa SUB
0x5fb NOT
0x5fc DUP1
0x5fd DUP5
0x5fe AND
0x5ff SWAP2
0x600 SWAP1
0x601 SWAP2
0x602 OR
0x603 SWAP4
0x604 DUP5
0x605 SWAP1
0x606 SSTORE
0x607 PUSH1 0x1
0x609 DUP1
0x60a SLOAD
0x60b SWAP1
0x60c SWAP2
0x60d AND
0x60e SWAP1
0x60f SSTORE
0x610 SWAP1
0x611 DUP2
0x612 AND
0x613 SWAP2
0x614 AND
0x615 DUP2
0x616 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x637 PUSH1 0x40
0x639 MLOAD
0x63a PUSH1 0x40
0x63c MLOAD
0x63d DUP1
0x63e SWAP2
0x63f SUB
0x640 SWAP1
0x641 LOG3
0x642 POP
0x643 POP
0x644 JUMP
---
0x5e2: JUMPDEST 
0x5e4: V553 = 0x0
0x5e7: V554 = S[0x0]
0x5e8: V555 = 0x1
0x5ea: V556 = 0xa0
0x5ec: V557 = 0x2
0x5ee: V558 = EXP 0x2 0xa0
0x5ef: V559 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5f2: V560 = AND 0xffffffffffffffffffffffffffffffffffffffff V200
0x5f3: V561 = 0x1
0x5f5: V562 = 0xa0
0x5f7: V563 = 0x2
0x5f9: V564 = EXP 0x2 0xa0
0x5fa: V565 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5fb: V566 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x5fe: V567 = AND V554 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x602: V568 = OR V567 V560
0x606: S[0x0] = V568
0x607: V569 = 0x1
0x60a: V570 = S[0x1]
0x60d: V571 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V570
0x60f: S[0x1] = V571
0x612: V572 = AND 0xffffffffffffffffffffffffffffffffffffffff V554
0x614: V573 = AND V568 0xffffffffffffffffffffffffffffffffffffffff
0x616: V574 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x637: V575 = 0x40
0x639: V576 = M[0x40]
0x63a: V577 = 0x40
0x63c: V578 = M[0x40]
0x63f: V579 = SUB V576 V578
0x641: LOG V578 V579 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V572 V573
0x644: JUMP 0x27f
---
Entry stack: [V13, 0x27f, V200, 0x0]
Stack pops: 3
Stack additions: []
Exit stack: [V13]

================================

Block 0x645
[0x645:0x65b]
---
Predecessors: [0x28c]
Successors: [0x65c, 0x660]
---
0x645 JUMPDEST
0x646 PUSH1 0x0
0x648 SLOAD
0x649 CALLER
0x64a PUSH1 0x1
0x64c PUSH1 0xa0
0x64e PUSH1 0x2
0x650 EXP
0x651 SUB
0x652 SWAP1
0x653 DUP2
0x654 AND
0x655 SWAP2
0x656 AND
0x657 EQ
0x658 PUSH2 0x660
0x65b JUMPI
---
0x645: JUMPDEST 
0x646: V580 = 0x0
0x648: V581 = S[0x0]
0x649: V582 = CALLER
0x64a: V583 = 0x1
0x64c: V584 = 0xa0
0x64e: V585 = 0x2
0x650: V586 = EXP 0x2 0xa0
0x651: V587 = SUB 0x10000000000000000000000000000000000000000 0x1
0x654: V588 = AND 0xffffffffffffffffffffffffffffffffffffffff V582
0x656: V589 = AND V581 0xffffffffffffffffffffffffffffffffffffffff
0x657: V590 = EQ V589 V588
0x658: V591 = 0x660
0x65b: JUMPI 0x660 V590
---
Entry stack: [V13, 0x27f, V214]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27f, V214]

================================

Block 0x65c
[0x65c:0x65f]
---
Predecessors: [0x645]
Successors: []
---
0x65c PUSH1 0x0
0x65e DUP1
0x65f REVERT
---
0x65c: V592 = 0x0
0x65f: REVERT 0x0 0x0
---
Entry stack: [V13, 0x27f, V214]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27f, V214]

================================

Block 0x660
[0x660:0x672]
---
Predecessors: [0x645]
Successors: [0x673, 0x677]
---
0x660 JUMPDEST
0x661 PUSH2 0xdac
0x664 PUSH1 0x1
0x666 PUSH1 0xa0
0x668 PUSH1 0x2
0x66a EXP
0x66b SUB
0x66c DUP3
0x66d AND
0x66e EQ
0x66f PUSH2 0x677
0x672 JUMPI
---
0x660: JUMPDEST 
0x661: V593 = 0xdac
0x664: V594 = 0x1
0x666: V595 = 0xa0
0x668: V596 = 0x2
0x66a: V597 = EXP 0x2 0xa0
0x66b: V598 = SUB 0x10000000000000000000000000000000000000000 0x1
0x66d: V599 = AND V214 0xffffffffffffffffffffffffffffffffffffffff
0x66e: V600 = EQ V599 0xdac
0x66f: V601 = 0x677
0x672: JUMPI 0x677 V600
---
Entry stack: [V13, 0x27f, V214]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x27f, V214]

================================

Block 0x673
[0x673:0x676]
---
Predecessors: [0x660]
Successors: []
---
0x673 PUSH1 0x0
0x675 DUP1
0x676 REVERT
---
0x673: V602 = 0x0
0x676: REVERT 0x0 0x0
---
Entry stack: [V13, 0x27f, V214]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27f, V214]

================================

Block 0x677
[0x677:0x6c1]
---
Predecessors: [0x660]
Successors: [0x27f]
---
0x677 JUMPDEST
0x678 PUSH1 0x0
0x67a DUP1
0x67b SLOAD
0x67c PUSH1 0x1
0x67e PUSH1 0xa0
0x680 PUSH1 0x2
0x682 EXP
0x683 SUB
0x684 NOT
0x685 SWAP1
0x686 DUP2
0x687 AND
0x688 SWAP1
0x689 SWAP2
0x68a SSTORE
0x68b PUSH1 0x1
0x68d DUP1
0x68e SLOAD
0x68f SWAP1
0x690 SWAP2
0x691 AND
0x692 SWAP1
0x693 SSTORE
0x694 PUSH32 0x94e8b32e01b9eedfddd778ffbd051a7718cdc14781702884561162dca6f74dbb
0x6b5 PUSH1 0x40
0x6b7 MLOAD
0x6b8 PUSH1 0x40
0x6ba MLOAD
0x6bb DUP1
0x6bc SWAP2
0x6bd SUB
0x6be SWAP1
0x6bf LOG1
0x6c0 POP
0x6c1 JUMP
---
0x677: JUMPDEST 
0x678: V603 = 0x0
0x67b: V604 = S[0x0]
0x67c: V605 = 0x1
0x67e: V606 = 0xa0
0x680: V607 = 0x2
0x682: V608 = EXP 0x2 0xa0
0x683: V609 = SUB 0x10000000000000000000000000000000000000000 0x1
0x684: V610 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x687: V611 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V604
0x68a: S[0x0] = V611
0x68b: V612 = 0x1
0x68e: V613 = S[0x1]
0x691: V614 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V613
0x693: S[0x1] = V614
0x694: V615 = 0x94e8b32e01b9eedfddd778ffbd051a7718cdc14781702884561162dca6f74dbb
0x6b5: V616 = 0x40
0x6b7: V617 = M[0x40]
0x6b8: V618 = 0x40
0x6ba: V619 = M[0x40]
0x6bd: V620 = SUB V617 V619
0x6bf: LOG V619 V620 0x94e8b32e01b9eedfddd778ffbd051a7718cdc14781702884561162dca6f74dbb
0x6c1: JUMP 0x27f
---
Entry stack: [V13, 0x27f, V214]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x6c2
[0x6c2:0x6d8]
---
Predecessors: [0x2ab]
Successors: [0x6d9, 0x6dd]
---
0x6c2 JUMPDEST
0x6c3 PUSH1 0x0
0x6c5 SLOAD
0x6c6 CALLER
0x6c7 PUSH1 0x1
0x6c9 PUSH1 0xa0
0x6cb PUSH1 0x2
0x6cd EXP
0x6ce SUB
0x6cf SWAP1
0x6d0 DUP2
0x6d1 AND
0x6d2 SWAP2
0x6d3 AND
0x6d4 EQ
0x6d5 PUSH2 0x6dd
0x6d8 JUMPI
---
0x6c2: JUMPDEST 
0x6c3: V621 = 0x0
0x6c5: V622 = S[0x0]
0x6c6: V623 = CALLER
0x6c7: V624 = 0x1
0x6c9: V625 = 0xa0
0x6cb: V626 = 0x2
0x6cd: V627 = EXP 0x2 0xa0
0x6ce: V628 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6d1: V629 = AND 0xffffffffffffffffffffffffffffffffffffffff V623
0x6d3: V630 = AND V622 0xffffffffffffffffffffffffffffffffffffffff
0x6d4: V631 = EQ V630 V629
0x6d5: V632 = 0x6dd
0x6d8: JUMPI 0x6dd V631
---
Entry stack: [V13, 0x27f, V228]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27f, V228]

================================

Block 0x6d9
[0x6d9:0x6dc]
---
Predecessors: [0x6c2]
Successors: []
---
0x6d9 PUSH1 0x0
0x6db DUP1
0x6dc REVERT
---
0x6d9: V633 = 0x0
0x6dc: REVERT 0x0 0x0
---
Entry stack: [V13, 0x27f, V228]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27f, V228]

================================

Block 0x6dd
[0x6dd:0x732]
---
Predecessors: [0x6c2]
Successors: [0x27f]
---
0x6dd JUMPDEST
0x6de PUSH1 0x1
0x6e0 DUP1
0x6e1 SLOAD
0x6e2 PUSH1 0x1
0x6e4 PUSH1 0xa0
0x6e6 PUSH1 0x2
0x6e8 EXP
0x6e9 SUB
0x6ea NOT
0x6eb AND
0x6ec PUSH1 0x1
0x6ee PUSH1 0xa0
0x6f0 PUSH1 0x2
0x6f2 EXP
0x6f3 SUB
0x6f4 DUP4
0x6f5 DUP2
0x6f6 AND
0x6f7 SWAP2
0x6f8 SWAP1
0x6f9 SWAP2
0x6fa OR
0x6fb SWAP2
0x6fc DUP3
0x6fd SWAP1
0x6fe SSTORE
0x6ff SWAP1
0x700 DUP2
0x701 AND
0x702 SWAP1
0x703 CALLER
0x704 AND
0x705 PUSH32 0x13a4b3bc0d5234dd3d87c9f1557d8faefa37986da62c36ba49309e2fb2c9aec4
0x726 PUSH1 0x40
0x728 MLOAD
0x729 PUSH1 0x40
0x72b MLOAD
0x72c DUP1
0x72d SWAP2
0x72e SUB
0x72f SWAP1
0x730 LOG3
0x731 POP
0x732 JUMP
---
0x6dd: JUMPDEST 
0x6de: V634 = 0x1
0x6e1: V635 = S[0x1]
0x6e2: V636 = 0x1
0x6e4: V637 = 0xa0
0x6e6: V638 = 0x2
0x6e8: V639 = EXP 0x2 0xa0
0x6e9: V640 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6ea: V641 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x6eb: V642 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V635
0x6ec: V643 = 0x1
0x6ee: V644 = 0xa0
0x6f0: V645 = 0x2
0x6f2: V646 = EXP 0x2 0xa0
0x6f3: V647 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6f6: V648 = AND 0xffffffffffffffffffffffffffffffffffffffff V228
0x6fa: V649 = OR V648 V642
0x6fe: S[0x1] = V649
0x701: V650 = AND 0xffffffffffffffffffffffffffffffffffffffff V649
0x703: V651 = CALLER
0x704: V652 = AND V651 0xffffffffffffffffffffffffffffffffffffffff
0x705: V653 = 0x13a4b3bc0d5234dd3d87c9f1557d8faefa37986da62c36ba49309e2fb2c9aec4
0x726: V654 = 0x40
0x728: V655 = M[0x40]
0x729: V656 = 0x40
0x72b: V657 = M[0x40]
0x72e: V658 = SUB V655 V657
0x730: LOG V657 V658 0x13a4b3bc0d5234dd3d87c9f1557d8faefa37986da62c36ba49309e2fb2c9aec4 V652 V650
0x732: JUMP 0x27f
---
Entry stack: [V13, 0x27f, V228]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x733
[0x733:0x74c]
---
Predecessors: [0x2ca]
Successors: [0x74d, 0x751]
---
0x733 JUMPDEST
0x734 PUSH1 0x1
0x736 SLOAD
0x737 PUSH1 0x0
0x739 SWAP1
0x73a CALLER
0x73b PUSH1 0x1
0x73d PUSH1 0xa0
0x73f PUSH1 0x2
0x741 EXP
0x742 SUB
0x743 SWAP1
0x744 DUP2
0x745 AND
0x746 SWAP2
0x747 AND
0x748 EQ
0x749 PUSH2 0x751
0x74c JUMPI
---
0x733: JUMPDEST 
0x734: V659 = 0x1
0x736: V660 = S[0x1]
0x737: V661 = 0x0
0x73a: V662 = CALLER
0x73b: V663 = 0x1
0x73d: V664 = 0xa0
0x73f: V665 = 0x2
0x741: V666 = EXP 0x2 0xa0
0x742: V667 = SUB 0x10000000000000000000000000000000000000000 0x1
0x745: V668 = AND 0xffffffffffffffffffffffffffffffffffffffff V662
0x747: V669 = AND V660 0xffffffffffffffffffffffffffffffffffffffff
0x748: V670 = EQ V669 V668
0x749: V671 = 0x751
0x74c: JUMPI 0x751 V670
---
Entry stack: [V13, 0x27f]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x27f, 0x0]

================================

Block 0x74d
[0x74d:0x750]
---
Predecessors: [0x733]
Successors: []
---
0x74d PUSH1 0x0
0x74f DUP1
0x750 REVERT
---
0x74d: V672 = 0x0
0x750: REVERT 0x0 0x0
---
Entry stack: [V13, 0x27f, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27f, 0x0]

================================

Block 0x751
[0x751:0x7b2]
---
Predecessors: [0x733]
Successors: [0x27f]
---
0x751 JUMPDEST
0x752 POP
0x753 PUSH1 0x0
0x755 DUP1
0x756 SLOAD
0x757 PUSH1 0x1
0x759 DUP1
0x75a SLOAD
0x75b PUSH1 0x1
0x75d PUSH1 0xa0
0x75f PUSH1 0x2
0x761 EXP
0x762 SUB
0x763 NOT
0x764 DUP1
0x765 DUP5
0x766 AND
0x767 PUSH1 0x1
0x769 PUSH1 0xa0
0x76b PUSH1 0x2
0x76d EXP
0x76e SUB
0x76f DUP4
0x770 DUP2
0x771 AND
0x772 SWAP2
0x773 SWAP1
0x774 SWAP2
0x775 OR
0x776 SWAP6
0x777 DUP7
0x778 SWAP1
0x779 SSTORE
0x77a SWAP2
0x77b AND
0x77c SWAP1
0x77d SWAP2
0x77e SSTORE
0x77f SWAP1
0x780 DUP2
0x781 AND
0x782 SWAP2
0x783 AND
0x784 DUP2
0x785 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x7a6 PUSH1 0x40
0x7a8 MLOAD
0x7a9 PUSH1 0x40
0x7ab MLOAD
0x7ac DUP1
0x7ad SWAP2
0x7ae SUB
0x7af SWAP1
0x7b0 LOG3
0x7b1 POP
0x7b2 JUMP
---
0x751: JUMPDEST 
0x753: V673 = 0x0
0x756: V674 = S[0x0]
0x757: V675 = 0x1
0x75a: V676 = S[0x1]
0x75b: V677 = 0x1
0x75d: V678 = 0xa0
0x75f: V679 = 0x2
0x761: V680 = EXP 0x2 0xa0
0x762: V681 = SUB 0x10000000000000000000000000000000000000000 0x1
0x763: V682 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x766: V683 = AND V674 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x767: V684 = 0x1
0x769: V685 = 0xa0
0x76b: V686 = 0x2
0x76d: V687 = EXP 0x2 0xa0
0x76e: V688 = SUB 0x10000000000000000000000000000000000000000 0x1
0x771: V689 = AND 0xffffffffffffffffffffffffffffffffffffffff V676
0x775: V690 = OR V689 V683
0x779: S[0x0] = V690
0x77b: V691 = AND V676 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x77e: S[0x1] = V691
0x781: V692 = AND 0xffffffffffffffffffffffffffffffffffffffff V674
0x783: V693 = AND V690 0xffffffffffffffffffffffffffffffffffffffff
0x785: V694 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x7a6: V695 = 0x40
0x7a8: V696 = M[0x40]
0x7a9: V697 = 0x40
0x7ab: V698 = M[0x40]
0x7ae: V699 = SUB V696 V698
0x7b0: LOG V698 V699 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V692 V693
0x7b2: JUMP 0x27f
---
Entry stack: [V13, 0x27f, 0x0]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x7b3
[0x7b3:0x7d1]
---
Predecessors: [0x2dd]
Successors: [0x155]
---
0x7b3 JUMPDEST
0x7b4 PUSH1 0x1
0x7b6 PUSH1 0xa0
0x7b8 PUSH1 0x2
0x7ba EXP
0x7bb SUB
0x7bc AND
0x7bd PUSH1 0x0
0x7bf SWAP1
0x7c0 DUP2
0x7c1 MSTORE
0x7c2 PUSH1 0x4
0x7c4 PUSH1 0x20
0x7c6 MSTORE
0x7c7 PUSH1 0x40
0x7c9 SWAP1
0x7ca SHA3
0x7cb SLOAD
0x7cc PUSH1 0xff
0x7ce AND
0x7cf ISZERO
0x7d0 SWAP1
0x7d1 JUMP
---
0x7b3: JUMPDEST 
0x7b4: V700 = 0x1
0x7b6: V701 = 0xa0
0x7b8: V702 = 0x2
0x7ba: V703 = EXP 0x2 0xa0
0x7bb: V704 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7bc: V705 = AND 0xffffffffffffffffffffffffffffffffffffffff V248
0x7bd: V706 = 0x0
0x7c1: M[0x0] = V705
0x7c2: V707 = 0x4
0x7c4: V708 = 0x20
0x7c6: M[0x20] = 0x4
0x7c7: V709 = 0x40
0x7ca: V710 = SHA3 0x0 0x40
0x7cb: V711 = S[V710]
0x7cc: V712 = 0xff
0x7ce: V713 = AND 0xff V711
0x7cf: V714 = ISZERO V713
0x7d1: JUMP 0x155
---
Entry stack: [V13, 0x155, V248]
Stack pops: 2
Stack additions: [V714]
Exit stack: [V13, V714]

================================

Block 0x7d2
[0x7d2:0x7e0]
---
Predecessors: [0x2fc]
Successors: [0x200]
---
0x7d2 JUMPDEST
0x7d3 PUSH1 0x0
0x7d5 SLOAD
0x7d6 PUSH1 0x1
0x7d8 PUSH1 0xa0
0x7da PUSH1 0x2
0x7dc EXP
0x7dd SUB
0x7de AND
0x7df DUP2
0x7e0 JUMP
---
0x7d2: JUMPDEST 
0x7d3: V715 = 0x0
0x7d5: V716 = S[0x0]
0x7d6: V717 = 0x1
0x7d8: V718 = 0xa0
0x7da: V719 = 0x2
0x7dc: V720 = EXP 0x2 0xa0
0x7dd: V721 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7de: V722 = AND 0xffffffffffffffffffffffffffffffffffffffff V716
0x7e0: JUMP 0x200
---
Entry stack: [V13, 0x200]
Stack pops: 1
Stack additions: [S0, V722]
Exit stack: [V13, 0x200, V722]

================================

Block 0x7e1
[0x7e1:0x7fd]
---
Predecessors: [0x30f]
Successors: [0x7fe, 0x811]
---
0x7e1 JUMPDEST
0x7e2 PUSH1 0x2
0x7e4 SLOAD
0x7e5 PUSH1 0x0
0x7e7 SWAP1
0x7e8 DUP2
0x7e9 SWAP1
0x7ea CALLER
0x7eb PUSH1 0x1
0x7ed PUSH1 0xa0
0x7ef PUSH1 0x2
0x7f1 EXP
0x7f2 SUB
0x7f3 SWAP1
0x7f4 DUP2
0x7f5 AND
0x7f6 SWAP2
0x7f7 AND
0x7f8 EQ
0x7f9 DUP1
0x7fa PUSH2 0x811
0x7fd JUMPI
---
0x7e1: JUMPDEST 
0x7e2: V723 = 0x2
0x7e4: V724 = S[0x2]
0x7e5: V725 = 0x0
0x7ea: V726 = CALLER
0x7eb: V727 = 0x1
0x7ed: V728 = 0xa0
0x7ef: V729 = 0x2
0x7f1: V730 = EXP 0x2 0xa0
0x7f2: V731 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7f5: V732 = AND 0xffffffffffffffffffffffffffffffffffffffff V726
0x7f7: V733 = AND V724 0xffffffffffffffffffffffffffffffffffffffff
0x7f8: V734 = EQ V733 V732
0x7fa: V735 = 0x811
0x7fd: JUMPI 0x811 V734
---
Entry stack: [V13, 0x27f, V268]
Stack pops: 0
Stack additions: [0x0, 0x0, V734]
Exit stack: [V13, 0x27f, V268, 0x0, 0x0, V734]

================================

Block 0x7fe
[0x7fe:0x810]
---
Predecessors: [0x7e1]
Successors: [0x811]
---
0x7fe POP
0x7ff PUSH1 0x0
0x801 SLOAD
0x802 CALLER
0x803 PUSH1 0x1
0x805 PUSH1 0xa0
0x807 PUSH1 0x2
0x809 EXP
0x80a SUB
0x80b SWAP1
0x80c DUP2
0x80d AND
0x80e SWAP2
0x80f AND
0x810 EQ
---
0x7ff: V736 = 0x0
0x801: V737 = S[0x0]
0x802: V738 = CALLER
0x803: V739 = 0x1
0x805: V740 = 0xa0
0x807: V741 = 0x2
0x809: V742 = EXP 0x2 0xa0
0x80a: V743 = SUB 0x10000000000000000000000000000000000000000 0x1
0x80d: V744 = AND 0xffffffffffffffffffffffffffffffffffffffff V738
0x80f: V745 = AND V737 0xffffffffffffffffffffffffffffffffffffffff
0x810: V746 = EQ V745 V744
---
Entry stack: [V13, 0x27f, V268, 0x0, 0x0, V734]
Stack pops: 1
Stack additions: [V746]
Exit stack: [V13, 0x27f, V268, 0x0, 0x0, V746]

================================

Block 0x811
[0x811:0x817]
---
Predecessors: [0x7e1, 0x7fe]
Successors: [0x818, 0x81c]
---
0x811 JUMPDEST
0x812 ISZERO
0x813 ISZERO
0x814 PUSH2 0x81c
0x817 JUMPI
---
0x811: JUMPDEST 
0x812: V747 = ISZERO S0
0x813: V748 = ISZERO V747
0x814: V749 = 0x81c
0x817: JUMPI 0x81c V748
---
Entry stack: [V13, 0x27f, V268, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x27f, V268, 0x0, 0x0]

================================

Block 0x818
[0x818:0x81b]
---
Predecessors: [0x811]
Successors: []
---
0x818 PUSH1 0x0
0x81a DUP1
0x81b REVERT
---
0x818: V750 = 0x0
0x81b: REVERT 0x0 0x0
---
Entry stack: [V13, 0x27f, V268, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27f, V268, 0x0, 0x0]

================================

Block 0x81c
[0x81c:0x83d]
---
Predecessors: [0x811]
Successors: [0x83e, 0x842]
---
0x81c JUMPDEST
0x81d PUSH1 0x1
0x81f PUSH1 0xa0
0x821 PUSH1 0x2
0x823 EXP
0x824 SUB
0x825 DUP4
0x826 AND
0x827 PUSH1 0x0
0x829 SWAP1
0x82a DUP2
0x82b MSTORE
0x82c PUSH1 0x4
0x82e PUSH1 0x20
0x830 MSTORE
0x831 PUSH1 0x40
0x833 SWAP1
0x834 SHA3
0x835 SLOAD
0x836 PUSH1 0xff
0x838 AND
0x839 ISZERO
0x83a PUSH2 0x842
0x83d JUMPI
---
0x81c: JUMPDEST 
0x81d: V751 = 0x1
0x81f: V752 = 0xa0
0x821: V753 = 0x2
0x823: V754 = EXP 0x2 0xa0
0x824: V755 = SUB 0x10000000000000000000000000000000000000000 0x1
0x826: V756 = AND V268 0xffffffffffffffffffffffffffffffffffffffff
0x827: V757 = 0x0
0x82b: M[0x0] = V756
0x82c: V758 = 0x4
0x82e: V759 = 0x20
0x830: M[0x20] = 0x4
0x831: V760 = 0x40
0x834: V761 = SHA3 0x0 0x40
0x835: V762 = S[V761]
0x836: V763 = 0xff
0x838: V764 = AND 0xff V762
0x839: V765 = ISZERO V764
0x83a: V766 = 0x842
0x83d: JUMPI 0x842 V765
---
Entry stack: [V13, 0x27f, V268, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x27f, V268, 0x0, 0x0]

================================

Block 0x83e
[0x83e:0x841]
---
Predecessors: [0x81c]
Successors: []
---
0x83e PUSH1 0x0
0x840 DUP1
0x841 REVERT
---
0x83e: V767 = 0x0
0x841: REVERT 0x0 0x0
---
Entry stack: [V13, 0x27f, V268, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27f, V268, 0x0, 0x0]

================================

Block 0x842
[0x842:0x852]
---
Predecessors: [0x81c]
Successors: [0x853, 0x8d4]
---
0x842 JUMPDEST
0x843 PUSH1 0x1
0x845 PUSH1 0xa0
0x847 PUSH1 0x2
0x849 EXP
0x84a SUB
0x84b DUP4
0x84c AND
0x84d ISZERO
0x84e ISZERO
0x84f PUSH2 0x8d4
0x852 JUMPI
---
0x842: JUMPDEST 
0x843: V768 = 0x1
0x845: V769 = 0xa0
0x847: V770 = 0x2
0x849: V771 = EXP 0x2 0xa0
0x84a: V772 = SUB 0x10000000000000000000000000000000000000000 0x1
0x84c: V773 = AND V268 0xffffffffffffffffffffffffffffffffffffffff
0x84d: V774 = ISZERO V773
0x84e: V775 = ISZERO V774
0x84f: V776 = 0x8d4
0x852: JUMPI 0x8d4 V775
---
Entry stack: [V13, 0x27f, V268, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x27f, V268, 0x0, 0x0]

================================

Block 0x853
[0x853:0x886]
---
Predecessors: [0x842]
Successors: [0x887, 0x88b]
---
0x853 PUSH1 0x3
0x855 SLOAD
0x856 PUSH1 0x1
0x858 PUSH1 0xa0
0x85a PUSH1 0x2
0x85c EXP
0x85d SUB
0x85e ADDRESS
0x85f DUP2
0x860 AND
0x861 BALANCE
0x862 SWAP4
0x863 POP
0x864 AND
0x865 DUP3
0x866 ISZERO
0x867 PUSH2 0x8fc
0x86a MUL
0x86b DUP4
0x86c PUSH1 0x40
0x86e MLOAD
0x86f PUSH1 0x0
0x871 PUSH1 0x40
0x873 MLOAD
0x874 DUP1
0x875 DUP4
0x876 SUB
0x877 DUP2
0x878 DUP6
0x879 DUP9
0x87a DUP9
0x87b CALL
0x87c SWAP4
0x87d POP
0x87e POP
0x87f POP
0x880 POP
0x881 ISZERO
0x882 ISZERO
0x883 PUSH2 0x88b
0x886 JUMPI
---
0x853: V777 = 0x3
0x855: V778 = S[0x3]
0x856: V779 = 0x1
0x858: V780 = 0xa0
0x85a: V781 = 0x2
0x85c: V782 = EXP 0x2 0xa0
0x85d: V783 = SUB 0x10000000000000000000000000000000000000000 0x1
0x85e: V784 = ADDRESS
0x860: V785 = AND 0xffffffffffffffffffffffffffffffffffffffff V784
0x861: V786 = BALANCE V785
0x864: V787 = AND 0xffffffffffffffffffffffffffffffffffffffff V778
0x866: V788 = ISZERO V786
0x867: V789 = 0x8fc
0x86a: V790 = MUL 0x8fc V788
0x86c: V791 = 0x40
0x86e: V792 = M[0x40]
0x86f: V793 = 0x0
0x871: V794 = 0x40
0x873: V795 = M[0x40]
0x876: V796 = SUB V792 V795
0x87b: V797 = CALL V790 V787 V786 V795 V796 V795 0x0
0x881: V798 = ISZERO V797
0x882: V799 = ISZERO V798
0x883: V800 = 0x88b
0x886: JUMPI 0x88b V799
---
Entry stack: [V13, 0x27f, V268, 0x0, 0x0]
Stack pops: 2
Stack additions: [V786, S0]
Exit stack: [V13, 0x27f, V268, V786, 0x0]

================================

Block 0x887
[0x887:0x88a]
---
Predecessors: [0x853]
Successors: []
---
0x887 PUSH1 0x0
0x889 DUP1
0x88a REVERT
---
0x887: V801 = 0x0
0x88a: REVERT 0x0 0x0
---
Entry stack: [V13, 0x27f, V268, V786, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27f, V268, V786, 0x0]

================================

Block 0x88b
[0x88b:0x8d3]
---
Predecessors: [0x853]
Successors: [0xa18]
---
0x88b JUMPDEST
0x88c PUSH32 0xa50dde912fa22ea0d215a0236093ac45b4d55d6ef0c604c319f900029c5d10f2
0x8ad DUP4
0x8ae DUP4
0x8af PUSH1 0x40
0x8b1 MLOAD
0x8b2 PUSH1 0x1
0x8b4 PUSH1 0xa0
0x8b6 PUSH1 0x2
0x8b8 EXP
0x8b9 SUB
0x8ba SWAP1
0x8bb SWAP3
0x8bc AND
0x8bd DUP3
0x8be MSTORE
0x8bf PUSH1 0x20
0x8c1 DUP3
0x8c2 ADD
0x8c3 MSTORE
0x8c4 PUSH1 0x40
0x8c6 SWAP1
0x8c7 DUP2
0x8c8 ADD
0x8c9 SWAP1
0x8ca MLOAD
0x8cb DUP1
0x8cc SWAP2
0x8cd SUB
0x8ce SWAP1
0x8cf LOG1
0x8d0 PUSH2 0xa18
0x8d3 JUMP
---
0x88b: JUMPDEST 
0x88c: V802 = 0xa50dde912fa22ea0d215a0236093ac45b4d55d6ef0c604c319f900029c5d10f2
0x8af: V803 = 0x40
0x8b1: V804 = M[0x40]
0x8b2: V805 = 0x1
0x8b4: V806 = 0xa0
0x8b6: V807 = 0x2
0x8b8: V808 = EXP 0x2 0xa0
0x8b9: V809 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8bc: V810 = AND V268 0xffffffffffffffffffffffffffffffffffffffff
0x8be: M[V804] = V810
0x8bf: V811 = 0x20
0x8c2: V812 = ADD V804 0x20
0x8c3: M[V812] = V786
0x8c4: V813 = 0x40
0x8c8: V814 = ADD 0x40 V804
0x8ca: V815 = M[0x40]
0x8cd: V816 = SUB V814 V815
0x8cf: LOG V815 V816 0xa50dde912fa22ea0d215a0236093ac45b4d55d6ef0c604c319f900029c5d10f2
0x8d0: V817 = 0xa18
0x8d3: JUMP 0xa18
---
Entry stack: [V13, 0x27f, V268, V786, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x27f, V268, V786, 0x0]

================================

Block 0x8d4
[0x8d4:0x928]
---
Predecessors: [0x842]
Successors: [0x929, 0x92d]
---
0x8d4 JUMPDEST
0x8d5 POP
0x8d6 DUP2
0x8d7 PUSH1 0x1
0x8d9 PUSH1 0xa0
0x8db PUSH1 0x2
0x8dd EXP
0x8de SUB
0x8df DUP2
0x8e0 AND
0x8e1 PUSH4 0x70a08231
0x8e6 ADDRESS
0x8e7 PUSH1 0x0
0x8e9 PUSH1 0x40
0x8eb MLOAD
0x8ec PUSH1 0x20
0x8ee ADD
0x8ef MSTORE
0x8f0 PUSH1 0x40
0x8f2 MLOAD
0x8f3 PUSH1 0xe0
0x8f5 PUSH1 0x2
0x8f7 EXP
0x8f8 PUSH4 0xffffffff
0x8fd DUP5
0x8fe AND
0x8ff MUL
0x900 DUP2
0x901 MSTORE
0x902 PUSH1 0x1
0x904 PUSH1 0xa0
0x906 PUSH1 0x2
0x908 EXP
0x909 SUB
0x90a SWAP1
0x90b SWAP2
0x90c AND
0x90d PUSH1 0x4
0x90f DUP3
0x910 ADD
0x911 MSTORE
0x912 PUSH1 0x24
0x914 ADD
0x915 PUSH1 0x20
0x917 PUSH1 0x40
0x919 MLOAD
0x91a DUP1
0x91b DUP4
0x91c SUB
0x91d DUP2
0x91e PUSH1 0x0
0x920 DUP8
0x921 DUP1
0x922 EXTCODESIZE
0x923 ISZERO
0x924 ISZERO
0x925 PUSH2 0x92d
0x928 JUMPI
---
0x8d4: JUMPDEST 
0x8d7: V818 = 0x1
0x8d9: V819 = 0xa0
0x8db: V820 = 0x2
0x8dd: V821 = EXP 0x2 0xa0
0x8de: V822 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8e0: V823 = AND V268 0xffffffffffffffffffffffffffffffffffffffff
0x8e1: V824 = 0x70a08231
0x8e6: V825 = ADDRESS
0x8e7: V826 = 0x0
0x8e9: V827 = 0x40
0x8eb: V828 = M[0x40]
0x8ec: V829 = 0x20
0x8ee: V830 = ADD 0x20 V828
0x8ef: M[V830] = 0x0
0x8f0: V831 = 0x40
0x8f2: V832 = M[0x40]
0x8f3: V833 = 0xe0
0x8f5: V834 = 0x2
0x8f7: V835 = EXP 0x2 0xe0
0x8f8: V836 = 0xffffffff
0x8fe: V837 = AND 0x70a08231 0xffffffff
0x8ff: V838 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x901: M[V832] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x902: V839 = 0x1
0x904: V840 = 0xa0
0x906: V841 = 0x2
0x908: V842 = EXP 0x2 0xa0
0x909: V843 = SUB 0x10000000000000000000000000000000000000000 0x1
0x90c: V844 = AND V825 0xffffffffffffffffffffffffffffffffffffffff
0x90d: V845 = 0x4
0x910: V846 = ADD V832 0x4
0x911: M[V846] = V844
0x912: V847 = 0x24
0x914: V848 = ADD 0x24 V832
0x915: V849 = 0x20
0x917: V850 = 0x40
0x919: V851 = M[0x40]
0x91c: V852 = SUB V848 V851
0x91e: V853 = 0x0
0x922: V854 = EXTCODESIZE V823
0x923: V855 = ISZERO V854
0x924: V856 = ISZERO V855
0x925: V857 = 0x92d
0x928: JUMPI 0x92d V856
---
Entry stack: [V13, 0x27f, V268, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S2, V823, 0x70a08231, V848, 0x20, V851, V852, V851, 0x0, V823]
Exit stack: [V13, 0x27f, V268, 0x0, V268, V823, 0x70a08231, V848, 0x20, V851, V852, V851, 0x0, V823]

================================

Block 0x929
[0x929:0x92c]
---
Predecessors: [0x8d4]
Successors: []
---
0x929 PUSH1 0x0
0x92b DUP1
0x92c REVERT
---
0x929: V858 = 0x0
0x92c: REVERT 0x0 0x0
---
Entry stack: [V13, 0x27f, V268, 0x0, V268, V823, 0x70a08231, V848, 0x20, V851, V852, V851, 0x0, V823]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27f, V268, 0x0, V268, V823, 0x70a08231, V848, 0x20, V851, V852, V851, 0x0, V823]

================================

Block 0x92d
[0x92d:0x939]
---
Predecessors: [0x8d4]
Successors: [0x93a, 0x93e]
---
0x92d JUMPDEST
0x92e PUSH2 0x2c6
0x931 GAS
0x932 SUB
0x933 CALL
0x934 ISZERO
0x935 ISZERO
0x936 PUSH2 0x93e
0x939 JUMPI
---
0x92d: JUMPDEST 
0x92e: V859 = 0x2c6
0x931: V860 = GAS
0x932: V861 = SUB V860 0x2c6
0x933: V862 = CALL V861 V823 0x0 V851 V852 V851 0x20
0x934: V863 = ISZERO V862
0x935: V864 = ISZERO V863
0x936: V865 = 0x93e
0x939: JUMPI 0x93e V864
---
Entry stack: [V13, 0x27f, V268, 0x0, V268, V823, 0x70a08231, V848, 0x20, V851, V852, V851, 0x0, V823]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x27f, V268, 0x0, V268, V823, 0x70a08231, V848]

================================

Block 0x93a
[0x93a:0x93d]
---
Predecessors: [0x92d]
Successors: []
---
0x93a PUSH1 0x0
0x93c DUP1
0x93d REVERT
---
0x93a: V866 = 0x0
0x93d: REVERT 0x0 0x0
---
Entry stack: [V13, 0x27f, V268, 0x0, V268, V823, 0x70a08231, V848]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27f, V268, 0x0, V268, V823, 0x70a08231, V848]

================================

Block 0x93e
[0x93e:0x9a8]
---
Predecessors: [0x92d]
Successors: [0x9a9, 0x9ad]
---
0x93e JUMPDEST
0x93f POP
0x940 POP
0x941 POP
0x942 PUSH1 0x40
0x944 MLOAD
0x945 DUP1
0x946 MLOAD
0x947 PUSH1 0x3
0x949 SLOAD
0x94a SWAP1
0x94b SWAP4
0x94c POP
0x94d PUSH1 0x1
0x94f PUSH1 0xa0
0x951 PUSH1 0x2
0x953 EXP
0x954 SUB
0x955 DUP1
0x956 DUP5
0x957 AND
0x958 SWAP3
0x959 POP
0x95a PUSH4 0xa9059cbb
0x95f SWAP2
0x960 AND
0x961 DUP5
0x962 PUSH1 0x0
0x964 PUSH1 0x40
0x966 MLOAD
0x967 PUSH1 0x20
0x969 ADD
0x96a MSTORE
0x96b PUSH1 0x40
0x96d MLOAD
0x96e PUSH1 0xe0
0x970 PUSH1 0x2
0x972 EXP
0x973 PUSH4 0xffffffff
0x978 DUP6
0x979 AND
0x97a MUL
0x97b DUP2
0x97c MSTORE
0x97d PUSH1 0x1
0x97f PUSH1 0xa0
0x981 PUSH1 0x2
0x983 EXP
0x984 SUB
0x985 SWAP1
0x986 SWAP3
0x987 AND
0x988 PUSH1 0x4
0x98a DUP4
0x98b ADD
0x98c MSTORE
0x98d PUSH1 0x24
0x98f DUP3
0x990 ADD
0x991 MSTORE
0x992 PUSH1 0x44
0x994 ADD
0x995 PUSH1 0x20
0x997 PUSH1 0x40
0x999 MLOAD
0x99a DUP1
0x99b DUP4
0x99c SUB
0x99d DUP2
0x99e PUSH1 0x0
0x9a0 DUP8
0x9a1 DUP1
0x9a2 EXTCODESIZE
0x9a3 ISZERO
0x9a4 ISZERO
0x9a5 PUSH2 0x9ad
0x9a8 JUMPI
---
0x93e: JUMPDEST 
0x942: V867 = 0x40
0x944: V868 = M[0x40]
0x946: V869 = M[V868]
0x947: V870 = 0x3
0x949: V871 = S[0x3]
0x94d: V872 = 0x1
0x94f: V873 = 0xa0
0x951: V874 = 0x2
0x953: V875 = EXP 0x2 0xa0
0x954: V876 = SUB 0x10000000000000000000000000000000000000000 0x1
0x957: V877 = AND V268 0xffffffffffffffffffffffffffffffffffffffff
0x95a: V878 = 0xa9059cbb
0x960: V879 = AND V871 0xffffffffffffffffffffffffffffffffffffffff
0x962: V880 = 0x0
0x964: V881 = 0x40
0x966: V882 = M[0x40]
0x967: V883 = 0x20
0x969: V884 = ADD 0x20 V882
0x96a: M[V884] = 0x0
0x96b: V885 = 0x40
0x96d: V886 = M[0x40]
0x96e: V887 = 0xe0
0x970: V888 = 0x2
0x972: V889 = EXP 0x2 0xe0
0x973: V890 = 0xffffffff
0x979: V891 = AND 0xa9059cbb 0xffffffff
0x97a: V892 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x97c: M[V886] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x97d: V893 = 0x1
0x97f: V894 = 0xa0
0x981: V895 = 0x2
0x983: V896 = EXP 0x2 0xa0
0x984: V897 = SUB 0x10000000000000000000000000000000000000000 0x1
0x987: V898 = AND V879 0xffffffffffffffffffffffffffffffffffffffff
0x988: V899 = 0x4
0x98b: V900 = ADD V886 0x4
0x98c: M[V900] = V898
0x98d: V901 = 0x24
0x990: V902 = ADD V886 0x24
0x991: M[V902] = V869
0x992: V903 = 0x44
0x994: V904 = ADD 0x44 V886
0x995: V905 = 0x20
0x997: V906 = 0x40
0x999: V907 = M[0x40]
0x99c: V908 = SUB V904 V907
0x99e: V909 = 0x0
0x9a2: V910 = EXTCODESIZE V877
0x9a3: V911 = ISZERO V910
0x9a4: V912 = ISZERO V911
0x9a5: V913 = 0x9ad
0x9a8: JUMPI 0x9ad V912
---
Entry stack: [V13, 0x27f, V268, 0x0, V268, V823, 0x70a08231, V848]
Stack pops: 5
Stack additions: [V869, S3, V877, 0xa9059cbb, V904, 0x20, V907, V908, V907, 0x0, V877]
Exit stack: [V13, 0x27f, V268, V869, V268, V877, 0xa9059cbb, V904, 0x20, V907, V908, V907, 0x0, V877]

================================

Block 0x9a9
[0x9a9:0x9ac]
---
Predecessors: [0x93e]
Successors: []
---
0x9a9 PUSH1 0x0
0x9ab DUP1
0x9ac REVERT
---
0x9a9: V914 = 0x0
0x9ac: REVERT 0x0 0x0
---
Entry stack: [V13, 0x27f, V268, V869, V268, V877, 0xa9059cbb, V904, 0x20, V907, V908, V907, 0x0, V877]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27f, V268, V869, V268, V877, 0xa9059cbb, V904, 0x20, V907, V908, V907, 0x0, V877]

================================

Block 0x9ad
[0x9ad:0x9b9]
---
Predecessors: [0x93e]
Successors: [0x9ba, 0x9be]
---
0x9ad JUMPDEST
0x9ae PUSH2 0x2c6
0x9b1 GAS
0x9b2 SUB
0x9b3 CALL
0x9b4 ISZERO
0x9b5 ISZERO
0x9b6 PUSH2 0x9be
0x9b9 JUMPI
---
0x9ad: JUMPDEST 
0x9ae: V915 = 0x2c6
0x9b1: V916 = GAS
0x9b2: V917 = SUB V916 0x2c6
0x9b3: V918 = CALL V917 V877 0x0 V907 V908 V907 0x20
0x9b4: V919 = ISZERO V918
0x9b5: V920 = ISZERO V919
0x9b6: V921 = 0x9be
0x9b9: JUMPI 0x9be V920
---
Entry stack: [V13, 0x27f, V268, V869, V268, V877, 0xa9059cbb, V904, 0x20, V907, V908, V907, 0x0, V877]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x27f, V268, V869, V268, V877, 0xa9059cbb, V904]

================================

Block 0x9ba
[0x9ba:0x9bd]
---
Predecessors: [0x9ad]
Successors: []
---
0x9ba PUSH1 0x0
0x9bc DUP1
0x9bd REVERT
---
0x9ba: V922 = 0x0
0x9bd: REVERT 0x0 0x0
---
Entry stack: [V13, 0x27f, V268, V869, V268, V877, 0xa9059cbb, V904]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27f, V268, V869, V268, V877, 0xa9059cbb, V904]

================================

Block 0x9be
[0x9be:0x9ce]
---
Predecessors: [0x9ad]
Successors: [0x9cf, 0x9d3]
---
0x9be JUMPDEST
0x9bf POP
0x9c0 POP
0x9c1 POP
0x9c2 PUSH1 0x40
0x9c4 MLOAD
0x9c5 DUP1
0x9c6 MLOAD
0x9c7 SWAP1
0x9c8 POP
0x9c9 ISZERO
0x9ca ISZERO
0x9cb PUSH2 0x9d3
0x9ce JUMPI
---
0x9be: JUMPDEST 
0x9c2: V923 = 0x40
0x9c4: V924 = M[0x40]
0x9c6: V925 = M[V924]
0x9c9: V926 = ISZERO V925
0x9ca: V927 = ISZERO V926
0x9cb: V928 = 0x9d3
0x9ce: JUMPI 0x9d3 V927
---
Entry stack: [V13, 0x27f, V268, V869, V268, V877, 0xa9059cbb, V904]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0x27f, V268, V869, V268]

================================

Block 0x9cf
[0x9cf:0x9d2]
---
Predecessors: [0x9be]
Successors: []
---
0x9cf PUSH1 0x0
0x9d1 DUP1
0x9d2 REVERT
---
0x9cf: V929 = 0x0
0x9d2: REVERT 0x0 0x0
---
Entry stack: [V13, 0x27f, V268, V869, V268]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27f, V268, V869, V268]

================================

Block 0x9d3
[0x9d3:0xa17]
---
Predecessors: [0x9be]
Successors: [0xa18]
---
0x9d3 JUMPDEST
0x9d4 PUSH32 0xa50dde912fa22ea0d215a0236093ac45b4d55d6ef0c604c319f900029c5d10f2
0x9f5 DUP4
0x9f6 DUP4
0x9f7 PUSH1 0x40
0x9f9 MLOAD
0x9fa PUSH1 0x1
0x9fc PUSH1 0xa0
0x9fe PUSH1 0x2
0xa00 EXP
0xa01 SUB
0xa02 SWAP1
0xa03 SWAP3
0xa04 AND
0xa05 DUP3
0xa06 MSTORE
0xa07 PUSH1 0x20
0xa09 DUP3
0xa0a ADD
0xa0b MSTORE
0xa0c PUSH1 0x40
0xa0e SWAP1
0xa0f DUP2
0xa10 ADD
0xa11 SWAP1
0xa12 MLOAD
0xa13 DUP1
0xa14 SWAP2
0xa15 SUB
0xa16 SWAP1
0xa17 LOG1
---
0x9d3: JUMPDEST 
0x9d4: V930 = 0xa50dde912fa22ea0d215a0236093ac45b4d55d6ef0c604c319f900029c5d10f2
0x9f7: V931 = 0x40
0x9f9: V932 = M[0x40]
0x9fa: V933 = 0x1
0x9fc: V934 = 0xa0
0x9fe: V935 = 0x2
0xa00: V936 = EXP 0x2 0xa0
0xa01: V937 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa04: V938 = AND V268 0xffffffffffffffffffffffffffffffffffffffff
0xa06: M[V932] = V938
0xa07: V939 = 0x20
0xa0a: V940 = ADD V932 0x20
0xa0b: M[V940] = V869
0xa0c: V941 = 0x40
0xa10: V942 = ADD 0x40 V932
0xa12: V943 = M[0x40]
0xa15: V944 = SUB V942 V943
0xa17: LOG V943 V944 0xa50dde912fa22ea0d215a0236093ac45b4d55d6ef0c604c319f900029c5d10f2
---
Entry stack: [V13, 0x27f, V268, V869, V268]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x27f, V268, V869, V268]

================================

Block 0xa18
[0xa18:0xa1c]
---
Predecessors: [0x88b, 0x9d3]
Successors: [0x27f]
---
0xa18 JUMPDEST
0xa19 POP
0xa1a POP
0xa1b POP
0xa1c JUMP
---
0xa18: JUMPDEST 
0xa1c: JUMP 0x27f
---
Entry stack: [V13, 0x27f, V268, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V13]

================================

Block 0xa1d
[0xa1d:0xa2e]
---
Predecessors: [0x323]
Successors: [0xa2f]
---
0xa1d JUMPDEST
0xa1e PUSH1 0x0
0xa20 DUP1
0xa21 CALLVALUE
0xa22 PUSH1 0x1
0xa24 PUSH1 0xa0
0xa26 PUSH1 0x2
0xa28 EXP
0xa29 SUB
0xa2a ADDRESS
0xa2b AND
0xa2c BALANCE
0xa2d SUB
0xa2e DUP2
---
0xa1d: JUMPDEST 
0xa1e: V945 = 0x0
0xa21: V946 = CALLVALUE
0xa22: V947 = 0x1
0xa24: V948 = 0xa0
0xa26: V949 = 0x2
0xa28: V950 = EXP 0x2 0xa0
0xa29: V951 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa2a: V952 = ADDRESS
0xa2b: V953 = AND V952 0xffffffffffffffffffffffffffffffffffffffff
0xa2c: V954 = BALANCE V953
0xa2d: V955 = SUB V954 V946
---
Entry stack: [V13, 0x155, V281]
Stack pops: 0
Stack additions: [0x0, 0x0, V955, 0x0]
Exit stack: [V13, 0x155, V281, 0x0, 0x0, V955, 0x0]

================================

Block 0xa2f
[0xa2f:0xa38]
---
Predecessors: [0xa1d, 0xa84]
Successors: [0x55c, 0xa39]
---
0xa2f JUMPDEST
0xa30 DUP5
0xa31 MLOAD
0xa32 DUP4
0xa33 LT
0xa34 ISZERO
0xa35 PUSH2 0x55c
0xa38 JUMPI
---
0xa2f: JUMPDEST 
0xa31: V956 = M[S4]
0xa33: V957 = LT S2 V956
0xa34: V958 = ISZERO V957
0xa35: V959 = 0x55c
0xa38: JUMPI 0x55c V958
---
Entry stack: [V13, S6, S5, S4, 0x0, S2, S1, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V13, S6, S5, S4, 0x0, S2, S1, 0x0]

================================

Block 0xa39
[0xa39:0xa47]
---
Predecessors: [0xa2f]
Successors: [0xa48, 0xa49]
---
0xa39 PUSH2 0xa84
0xa3c PUSH1 0x60
0xa3e DUP7
0xa3f DUP6
0xa40 DUP2
0xa41 MLOAD
0xa42 DUP2
0xa43 LT
0xa44 PUSH2 0xa49
0xa47 JUMPI
---
0xa39: V960 = 0xa84
0xa3c: V961 = 0x60
0xa41: V962 = M[S4]
0xa43: V963 = LT S2 V962
0xa44: V964 = 0xa49
0xa47: JUMPI 0xa49 V963
---
Entry stack: [V13, S6, S5, S4, 0x0, S2, S1, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0xa84, 0x60, S4, S2]
Exit stack: [V13, S6, S5, S4, 0x0, S2, S1, 0x0, 0xa84, 0x60, S4, S2]

================================

Block 0xa48
[0xa48:0xa48]
---
Predecessors: [0xa39]
Successors: []
---
0xa48 INVALID
---
0xa48: INVALID 
---
Entry stack: [V13, S10, S9, S8, 0x0, S6, S5, 0x0, 0xa84, 0x60, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S10, S9, S8, 0x0, S6, S5, 0x0, 0xa84, 0x60, S1, S0]

================================

Block 0xa49
[0xa49:0xa65]
---
Predecessors: [0xa39]
Successors: [0xa66, 0xa67]
---
0xa49 JUMPDEST
0xa4a SWAP1
0xa4b PUSH1 0x20
0xa4d ADD
0xa4e SWAP1
0xa4f PUSH1 0x20
0xa51 MUL
0xa52 ADD
0xa53 MLOAD
0xa54 PUSH1 0x2
0xa56 SWAP2
0xa57 SWAP1
0xa58 SWAP2
0xa59 EXP
0xa5a SWAP1
0xa5b DIV
0xa5c DUP7
0xa5d DUP6
0xa5e DUP2
0xa5f MLOAD
0xa60 DUP2
0xa61 LT
0xa62 PUSH2 0xa67
0xa65 JUMPI
---
0xa49: JUMPDEST 
0xa4b: V965 = 0x20
0xa4d: V966 = ADD 0x20 S1
0xa4f: V967 = 0x20
0xa51: V968 = MUL 0x20 S0
0xa52: V969 = ADD V968 V966
0xa53: V970 = M[V969]
0xa54: V971 = 0x2
0xa59: V972 = EXP 0x2 0x60
0xa5b: V973 = DIV V970 0x1000000000000000000000000
0xa5f: V974 = M[S8]
0xa61: V975 = LT S6 V974
0xa62: V976 = 0xa67
0xa65: JUMPI 0xa67 V975
---
Entry stack: [V13, S10, S9, S8, 0x0, S6, S5, 0x0, 0xa84, 0x60, S1, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, V973, S8, S6]
Exit stack: [V13, S10, S9, S8, 0x0, S6, S5, 0x0, 0xa84, V973, S8, S6]

================================

Block 0xa66
[0xa66:0xa66]
---
Predecessors: [0xa49]
Successors: []
---
0xa66 INVALID
---
0xa66: INVALID 
---
Entry stack: [V13, S10, S9, S8, 0x0, S6, S5, 0x0, 0xa84, V973, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S10, S9, S8, 0x0, S6, S5, 0x0, 0xa84, V973, S1, S0]

================================

Block 0xa67
[0xa67:0xa83]
---
Predecessors: [0xa49]
Successors: [0xb73]
---
0xa67 JUMPDEST
0xa68 SWAP1
0xa69 PUSH1 0x20
0xa6b ADD
0xa6c SWAP1
0xa6d PUSH1 0x20
0xa6f MUL
0xa70 ADD
0xa71 MLOAD
0xa72 PUSH12 0xffffffffffffffffffffffff
0xa7f AND
0xa80 PUSH2 0xb73
0xa83 JUMP
---
0xa67: JUMPDEST 
0xa69: V977 = 0x20
0xa6b: V978 = ADD 0x20 S1
0xa6d: V979 = 0x20
0xa6f: V980 = MUL 0x20 S0
0xa70: V981 = ADD V980 V978
0xa71: V982 = M[V981]
0xa72: V983 = 0xffffffffffffffffffffffff
0xa7f: V984 = AND 0xffffffffffffffffffffffff V982
0xa80: V985 = 0xb73
0xa83: JUMP 0xb73
---
Entry stack: [V13, S10, S9, S8, 0x0, S6, S5, 0x0, 0xa84, V973, S1, S0]
Stack pops: 2
Stack additions: [V984]
Exit stack: [V13, S10, S9, S8, 0x0, S6, S5, 0x0, 0xa84, V973, V984]

================================

Block 0xa84
[0xa84:0xa8e]
---
Predecessors: [0xb88]
Successors: [0xa2f]
---
0xa84 JUMPDEST
0xa85 PUSH1 0x1
0xa87 SWAP1
0xa88 SWAP3
0xa89 ADD
0xa8a SWAP2
0xa8b PUSH2 0xa2f
0xa8e JUMP
---
0xa84: JUMPDEST 
0xa85: V986 = 0x1
0xa89: V987 = ADD S2 0x1
0xa8b: V988 = 0xa2f
0xa8e: JUMP 0xa2f
---
Entry stack: [V13, S6, S5, S4, 0x0, S2, S1, 0x0]
Stack pops: 3
Stack additions: [V987, S1, S0]
Exit stack: [V13, S6, S5, S4, 0x0, V987, S1, 0x0]

================================

Block 0xa8f
[0xa8f:0xa9d]
---
Predecessors: [0x372]
Successors: [0x200]
---
0xa8f JUMPDEST
0xa90 PUSH1 0x1
0xa92 SLOAD
0xa93 PUSH1 0x1
0xa95 PUSH1 0xa0
0xa97 PUSH1 0x2
0xa99 EXP
0xa9a SUB
0xa9b AND
0xa9c DUP2
0xa9d JUMP
---
0xa8f: JUMPDEST 
0xa90: V989 = 0x1
0xa92: V990 = S[0x1]
0xa93: V991 = 0x1
0xa95: V992 = 0xa0
0xa97: V993 = 0x2
0xa99: V994 = EXP 0x2 0xa0
0xa9a: V995 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa9b: V996 = AND 0xffffffffffffffffffffffffffffffffffffffff V990
0xa9d: JUMP 0x200
---
Entry stack: [V13, 0x200]
Stack pops: 1
Stack additions: [S0, V996]
Exit stack: [V13, 0x200, V996]

================================

Block 0xa9e
[0xa9e:0xab5]
---
Predecessors: [0x385]
Successors: [0xab6, 0xac9]
---
0xa9e JUMPDEST
0xa9f PUSH1 0x2
0xaa1 SLOAD
0xaa2 CALLER
0xaa3 PUSH1 0x1
0xaa5 PUSH1 0xa0
0xaa7 PUSH1 0x2
0xaa9 EXP
0xaaa SUB
0xaab SWAP1
0xaac DUP2
0xaad AND
0xaae SWAP2
0xaaf AND
0xab0 EQ
0xab1 DUP1
0xab2 PUSH2 0xac9
0xab5 JUMPI
---
0xa9e: JUMPDEST 
0xa9f: V997 = 0x2
0xaa1: V998 = S[0x2]
0xaa2: V999 = CALLER
0xaa3: V1000 = 0x1
0xaa5: V1001 = 0xa0
0xaa7: V1002 = 0x2
0xaa9: V1003 = EXP 0x2 0xa0
0xaaa: V1004 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaad: V1005 = AND 0xffffffffffffffffffffffffffffffffffffffff V999
0xaaf: V1006 = AND V998 0xffffffffffffffffffffffffffffffffffffffff
0xab0: V1007 = EQ V1006 V1005
0xab2: V1008 = 0xac9
0xab5: JUMPI 0xac9 V1007
---
Entry stack: [V13, 0x27f, V307]
Stack pops: 0
Stack additions: [V1007]
Exit stack: [V13, 0x27f, V307, V1007]

================================

Block 0xab6
[0xab6:0xac8]
---
Predecessors: [0xa9e]
Successors: [0xac9]
---
0xab6 POP
0xab7 PUSH1 0x0
0xab9 SLOAD
0xaba CALLER
0xabb PUSH1 0x1
0xabd PUSH1 0xa0
0xabf PUSH1 0x2
0xac1 EXP
0xac2 SUB
0xac3 SWAP1
0xac4 DUP2
0xac5 AND
0xac6 SWAP2
0xac7 AND
0xac8 EQ
---
0xab7: V1009 = 0x0
0xab9: V1010 = S[0x0]
0xaba: V1011 = CALLER
0xabb: V1012 = 0x1
0xabd: V1013 = 0xa0
0xabf: V1014 = 0x2
0xac1: V1015 = EXP 0x2 0xa0
0xac2: V1016 = SUB 0x10000000000000000000000000000000000000000 0x1
0xac5: V1017 = AND 0xffffffffffffffffffffffffffffffffffffffff V1011
0xac7: V1018 = AND V1010 0xffffffffffffffffffffffffffffffffffffffff
0xac8: V1019 = EQ V1018 V1017
---
Entry stack: [V13, 0x27f, V307, V1007]
Stack pops: 1
Stack additions: [V1019]
Exit stack: [V13, 0x27f, V307, V1019]

================================

Block 0xac9
[0xac9:0xacf]
---
Predecessors: [0xa9e, 0xab6]
Successors: [0xad0, 0xad4]
---
0xac9 JUMPDEST
0xaca ISZERO
0xacb ISZERO
0xacc PUSH2 0xad4
0xacf JUMPI
---
0xac9: JUMPDEST 
0xaca: V1020 = ISZERO S0
0xacb: V1021 = ISZERO V1020
0xacc: V1022 = 0xad4
0xacf: JUMPI 0xad4 V1021
---
Entry stack: [V13, 0x27f, V307, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x27f, V307]

================================

Block 0xad0
[0xad0:0xad3]
---
Predecessors: [0xac9]
Successors: []
---
0xad0 PUSH1 0x0
0xad2 DUP1
0xad3 REVERT
---
0xad0: V1023 = 0x0
0xad3: REVERT 0x0 0x0
---
Entry stack: [V13, 0x27f, V307]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27f, V307]

================================

Block 0xad4
[0xad4:0xaf5]
---
Predecessors: [0xac9]
Successors: [0x27f]
---
0xad4 JUMPDEST
0xad5 PUSH1 0x2
0xad7 DUP1
0xad8 SLOAD
0xad9 PUSH1 0x1
0xadb PUSH1 0xa0
0xadd PUSH1 0x2
0xadf EXP
0xae0 SUB
0xae1 NOT
0xae2 AND
0xae3 PUSH1 0x1
0xae5 PUSH1 0xa0
0xae7 PUSH1 0x2
0xae9 EXP
0xaea SUB
0xaeb SWAP3
0xaec SWAP1
0xaed SWAP3
0xaee AND
0xaef SWAP2
0xaf0 SWAP1
0xaf1 SWAP2
0xaf2 OR
0xaf3 SWAP1
0xaf4 SSTORE
0xaf5 JUMP
---
0xad4: JUMPDEST 
0xad5: V1024 = 0x2
0xad8: V1025 = S[0x2]
0xad9: V1026 = 0x1
0xadb: V1027 = 0xa0
0xadd: V1028 = 0x2
0xadf: V1029 = EXP 0x2 0xa0
0xae0: V1030 = SUB 0x10000000000000000000000000000000000000000 0x1
0xae1: V1031 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xae2: V1032 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1025
0xae3: V1033 = 0x1
0xae5: V1034 = 0xa0
0xae7: V1035 = 0x2
0xae9: V1036 = EXP 0x2 0xa0
0xaea: V1037 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaee: V1038 = AND 0xffffffffffffffffffffffffffffffffffffffff V307
0xaf2: V1039 = OR V1038 V1032
0xaf4: S[0x2] = V1039
0xaf5: JUMP 0x27f
---
Entry stack: [V13, 0x27f, V307]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0xaf6
[0xaf6:0xb07]
---
Predecessors: [0x3a4]
Successors: [0xb08, 0xb0c]
---
0xaf6 JUMPDEST
0xaf7 PUSH1 0x2
0xaf9 SLOAD
0xafa PUSH1 0x1
0xafc PUSH1 0xa0
0xafe PUSH1 0x2
0xb00 EXP
0xb01 SUB
0xb02 AND
0xb03 ISZERO
0xb04 PUSH2 0xb0c
0xb07 JUMPI
---
0xaf6: JUMPDEST 
0xaf7: V1040 = 0x2
0xaf9: V1041 = S[0x2]
0xafa: V1042 = 0x1
0xafc: V1043 = 0xa0
0xafe: V1044 = 0x2
0xb00: V1045 = EXP 0x2 0xa0
0xb01: V1046 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb02: V1047 = AND 0xffffffffffffffffffffffffffffffffffffffff V1041
0xb03: V1048 = ISZERO V1047
0xb04: V1049 = 0xb0c
0xb07: JUMPI 0xb0c V1048
---
Entry stack: [V13, 0x27f, V321, V324]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27f, V321, V324]

================================

Block 0xb08
[0xb08:0xb0b]
---
Predecessors: [0xaf6]
Successors: []
---
0xb08 PUSH1 0x0
0xb0a DUP1
0xb0b REVERT
---
0xb08: V1050 = 0x0
0xb0b: REVERT 0x0 0x0
---
Entry stack: [V13, 0x27f, V321, V324]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27f, V321, V324]

================================

Block 0xb0c
[0xb0c:0xb1c]
---
Predecessors: [0xaf6]
Successors: [0xb1d, 0xb21]
---
0xb0c JUMPDEST
0xb0d PUSH1 0x1
0xb0f PUSH1 0xa0
0xb11 PUSH1 0x2
0xb13 EXP
0xb14 SUB
0xb15 DUP3
0xb16 AND
0xb17 ISZERO
0xb18 ISZERO
0xb19 PUSH2 0xb21
0xb1c JUMPI
---
0xb0c: JUMPDEST 
0xb0d: V1051 = 0x1
0xb0f: V1052 = 0xa0
0xb11: V1053 = 0x2
0xb13: V1054 = EXP 0x2 0xa0
0xb14: V1055 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb16: V1056 = AND V321 0xffffffffffffffffffffffffffffffffffffffff
0xb17: V1057 = ISZERO V1056
0xb18: V1058 = ISZERO V1057
0xb19: V1059 = 0xb21
0xb1c: JUMPI 0xb21 V1058
---
Entry stack: [V13, 0x27f, V321, V324]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x27f, V321, V324]

================================

Block 0xb1d
[0xb1d:0xb20]
---
Predecessors: [0xb0c]
Successors: []
---
0xb1d PUSH1 0x0
0xb1f DUP1
0xb20 REVERT
---
0xb1d: V1060 = 0x0
0xb20: REVERT 0x0 0x0
---
Entry stack: [V13, 0x27f, V321, V324]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27f, V321, V324]

================================

Block 0xb21
[0xb21:0xb31]
---
Predecessors: [0xb0c]
Successors: [0xb32, 0xb36]
---
0xb21 JUMPDEST
0xb22 PUSH1 0x1
0xb24 PUSH1 0xa0
0xb26 PUSH1 0x2
0xb28 EXP
0xb29 SUB
0xb2a DUP2
0xb2b AND
0xb2c ISZERO
0xb2d ISZERO
0xb2e PUSH2 0xb36
0xb31 JUMPI
---
0xb21: JUMPDEST 
0xb22: V1061 = 0x1
0xb24: V1062 = 0xa0
0xb26: V1063 = 0x2
0xb28: V1064 = EXP 0x2 0xa0
0xb29: V1065 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb2b: V1066 = AND V324 0xffffffffffffffffffffffffffffffffffffffff
0xb2c: V1067 = ISZERO V1066
0xb2d: V1068 = ISZERO V1067
0xb2e: V1069 = 0xb36
0xb31: JUMPI 0xb36 V1068
---
Entry stack: [V13, 0x27f, V321, V324]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x27f, V321, V324]

================================

Block 0xb32
[0xb32:0xb35]
---
Predecessors: [0xb21]
Successors: []
---
0xb32 PUSH1 0x0
0xb34 DUP1
0xb35 REVERT
---
0xb32: V1070 = 0x0
0xb35: REVERT 0x0 0x0
---
Entry stack: [V13, 0x27f, V321, V324]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27f, V321, V324]

================================

Block 0xb36
[0xb36:0xb63]
---
Predecessors: [0xb21]
Successors: [0x27f]
---
0xb36 JUMPDEST
0xb37 PUSH1 0x2
0xb39 DUP1
0xb3a SLOAD
0xb3b PUSH1 0x1
0xb3d PUSH1 0xa0
0xb3f PUSH1 0x2
0xb41 EXP
0xb42 SUB
0xb43 SWAP4
0xb44 DUP5
0xb45 AND
0xb46 PUSH1 0x1
0xb48 PUSH1 0xa0
0xb4a PUSH1 0x2
0xb4c EXP
0xb4d SUB
0xb4e NOT
0xb4f SWAP2
0xb50 DUP3
0xb51 AND
0xb52 OR
0xb53 SWAP1
0xb54 SWAP2
0xb55 SSTORE
0xb56 PUSH1 0x3
0xb58 DUP1
0xb59 SLOAD
0xb5a SWAP3
0xb5b SWAP1
0xb5c SWAP4
0xb5d AND
0xb5e SWAP2
0xb5f AND
0xb60 OR
0xb61 SWAP1
0xb62 SSTORE
0xb63 JUMP
---
0xb36: JUMPDEST 
0xb37: V1071 = 0x2
0xb3a: V1072 = S[0x2]
0xb3b: V1073 = 0x1
0xb3d: V1074 = 0xa0
0xb3f: V1075 = 0x2
0xb41: V1076 = EXP 0x2 0xa0
0xb42: V1077 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb45: V1078 = AND 0xffffffffffffffffffffffffffffffffffffffff V321
0xb46: V1079 = 0x1
0xb48: V1080 = 0xa0
0xb4a: V1081 = 0x2
0xb4c: V1082 = EXP 0x2 0xa0
0xb4d: V1083 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb4e: V1084 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xb51: V1085 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1072
0xb52: V1086 = OR V1085 V1078
0xb55: S[0x2] = V1086
0xb56: V1087 = 0x3
0xb59: V1088 = S[0x3]
0xb5d: V1089 = AND 0xffffffffffffffffffffffffffffffffffffffff V324
0xb5f: V1090 = AND V1088 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0xb60: V1091 = OR V1090 V1089
0xb62: S[0x3] = V1091
0xb63: JUMP 0x27f
---
Entry stack: [V13, 0x27f, V321, V324]
Stack pops: 3
Stack additions: []
Exit stack: [V13]

================================

Block 0xb64
[0xb64:0xb72]
---
Predecessors: [0x3c9]
Successors: [0x200]
---
0xb64 JUMPDEST
0xb65 PUSH1 0x3
0xb67 SLOAD
0xb68 PUSH1 0x1
0xb6a PUSH1 0xa0
0xb6c PUSH1 0x2
0xb6e EXP
0xb6f SUB
0xb70 AND
0xb71 DUP2
0xb72 JUMP
---
0xb64: JUMPDEST 
0xb65: V1092 = 0x3
0xb67: V1093 = S[0x3]
0xb68: V1094 = 0x1
0xb6a: V1095 = 0xa0
0xb6c: V1096 = 0x2
0xb6e: V1097 = EXP 0x2 0xa0
0xb6f: V1098 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb70: V1099 = AND 0xffffffffffffffffffffffffffffffffffffffff V1093
0xb72: JUMP 0x200
---
Entry stack: [V13, 0x200]
Stack pops: 1
Stack additions: [S0, V1099]
Exit stack: [V13, 0x200, V1099]

================================

Block 0xb73
[0xb73:0xb83]
---
Predecessors: [0x411, 0xa67]
Successors: [0xb84, 0xb88]
---
0xb73 JUMPDEST
0xb74 PUSH1 0x1
0xb76 PUSH1 0xa0
0xb78 PUSH1 0x2
0xb7a EXP
0xb7b SUB
0xb7c DUP3
0xb7d AND
0xb7e ISZERO
0xb7f ISZERO
0xb80 PUSH2 0xb88
0xb83 JUMPI
---
0xb73: JUMPDEST 
0xb74: V1100 = 0x1
0xb76: V1101 = 0xa0
0xb78: V1102 = 0x2
0xb7a: V1103 = EXP 0x2 0xa0
0xb7b: V1104 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb7d: V1105 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0xb7e: V1106 = ISZERO V1105
0xb7f: V1107 = ISZERO V1106
0xb80: V1108 = 0xb88
0xb83: JUMPI 0xb88 V1107
---
Entry stack: [V13, S9, S8, S7, 0x0, S5, S4, 0x0, {0x420, 0xa84}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, S9, S8, S7, 0x0, S5, S4, 0x0, {0x420, 0xa84}, S1, S0]

================================

Block 0xb84
[0xb84:0xb87]
---
Predecessors: [0xb73]
Successors: []
---
0xb84 PUSH1 0x0
0xb86 DUP1
0xb87 REVERT
---
0xb84: V1109 = 0x0
0xb87: REVERT 0x0 0x0
---
Entry stack: [V13, S9, S8, S7, 0x0, S5, S4, 0x0, {0x420, 0xa84}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S9, S8, S7, 0x0, S5, S4, 0x0, {0x420, 0xa84}, S1, S0]

================================

Block 0xb88
[0xb88:0xbae]
---
Predecessors: [0xb73]
Successors: [0x420, 0xa84]
---
0xb88 JUMPDEST
0xb89 DUP2
0xb8a PUSH1 0x1
0xb8c PUSH1 0xa0
0xb8e PUSH1 0x2
0xb90 EXP
0xb91 SUB
0xb92 AND
0xb93 DUP2
0xb94 PUSH1 0x40
0xb96 MLOAD
0xb97 PUSH1 0x0
0xb99 PUSH1 0x40
0xb9b MLOAD
0xb9c DUP1
0xb9d DUP4
0xb9e SUB
0xb9f DUP2
0xba0 DUP6
0xba1 DUP8
0xba2 PUSH2 0x8796
0xba5 GAS
0xba6 SUB
0xba7 CALL
0xba8 POP
0xba9 POP
0xbaa POP
0xbab POP
0xbac POP
0xbad POP
0xbae JUMP
---
0xb88: JUMPDEST 
0xb8a: V1110 = 0x1
0xb8c: V1111 = 0xa0
0xb8e: V1112 = 0x2
0xb90: V1113 = EXP 0x2 0xa0
0xb91: V1114 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb92: V1115 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xb94: V1116 = 0x40
0xb96: V1117 = M[0x40]
0xb97: V1118 = 0x0
0xb99: V1119 = 0x40
0xb9b: V1120 = M[0x40]
0xb9e: V1121 = SUB V1117 V1120
0xba2: V1122 = 0x8796
0xba5: V1123 = GAS
0xba6: V1124 = SUB V1123 0x8796
0xba7: V1125 = CALL V1124 V1115 S0 V1120 V1121 V1120 0x0
0xbae: JUMP {0x420, 0xa84}
---
Entry stack: [V13, S9, S8, S7, 0x0, S5, S4, 0x0, {0x420, 0xa84}, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V13, S9, S8, S7, 0x0, S5, S4, 0x0]

================================

Block 0xbaf
[0xbaf:0xbbf]
---
Predecessors: [0x4c1, 0x534]
Successors: [0xbc0, 0xbc4]
---
0xbaf JUMPDEST
0xbb0 PUSH1 0x1
0xbb2 PUSH1 0xa0
0xbb4 PUSH1 0x2
0xbb6 EXP
0xbb7 SUB
0xbb8 DUP3
0xbb9 AND
0xbba ISZERO
0xbbb ISZERO
0xbbc PUSH2 0xbc4
0xbbf JUMPI
---
0xbaf: JUMPDEST 
0xbb0: V1126 = 0x1
0xbb2: V1127 = 0xa0
0xbb4: V1128 = 0x2
0xbb6: V1129 = EXP 0x2 0xa0
0xbb7: V1130 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbb9: V1131 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0xbba: V1132 = ISZERO V1131
0xbbb: V1133 = ISZERO V1132
0xbbc: V1134 = 0xbc4
0xbbf: JUMPI 0xbc4 V1133
---
Entry stack: [V13, S9, S8, S7, 0x0, S5, S4, 0x0, {0x4d0, 0x551}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, S9, S8, S7, 0x0, S5, S4, 0x0, {0x4d0, 0x551}, S1, S0]

================================

Block 0xbc0
[0xbc0:0xbc3]
---
Predecessors: [0xbaf]
Successors: []
---
0xbc0 PUSH1 0x0
0xbc2 DUP1
0xbc3 REVERT
---
0xbc0: V1135 = 0x0
0xbc3: REVERT 0x0 0x0
---
Entry stack: [V13, S9, S8, S7, 0x0, S5, S4, 0x0, {0x4d0, 0x551}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S9, S8, S7, 0x0, S5, S4, 0x0, {0x4d0, 0x551}, S1, S0]

================================

Block 0xbc4
[0xbc4:0xbed]
---
Predecessors: [0xbaf]
Successors: [0x4d0, 0x551]
---
0xbc4 JUMPDEST
0xbc5 PUSH1 0x1
0xbc7 PUSH1 0xa0
0xbc9 PUSH1 0x2
0xbcb EXP
0xbcc SUB
0xbcd DUP3
0xbce AND
0xbcf DUP2
0xbd0 ISZERO
0xbd1 PUSH2 0x8fc
0xbd4 MUL
0xbd5 DUP3
0xbd6 PUSH1 0x40
0xbd8 MLOAD
0xbd9 PUSH1 0x0
0xbdb PUSH1 0x40
0xbdd MLOAD
0xbde DUP1
0xbdf DUP4
0xbe0 SUB
0xbe1 DUP2
0xbe2 DUP6
0xbe3 DUP9
0xbe4 DUP9
0xbe5 CALL
0xbe6 POP
0xbe7 POP
0xbe8 POP
0xbe9 POP
0xbea POP
0xbeb POP
0xbec POP
0xbed JUMP
---
0xbc4: JUMPDEST 
0xbc5: V1136 = 0x1
0xbc7: V1137 = 0xa0
0xbc9: V1138 = 0x2
0xbcb: V1139 = EXP 0x2 0xa0
0xbcc: V1140 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbce: V1141 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0xbd0: V1142 = ISZERO S0
0xbd1: V1143 = 0x8fc
0xbd4: V1144 = MUL 0x8fc V1142
0xbd6: V1145 = 0x40
0xbd8: V1146 = M[0x40]
0xbd9: V1147 = 0x0
0xbdb: V1148 = 0x40
0xbdd: V1149 = M[0x40]
0xbe0: V1150 = SUB V1146 V1149
0xbe5: V1151 = CALL V1144 V1141 S0 V1149 V1150 V1149 0x0
0xbed: JUMP {0x4d0, 0x551}
---
Entry stack: [V13, S9, S8, S7, 0x0, S5, S4, 0x0, {0x4d0, 0x551}, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V13, S9, S8, S7, 0x0, S5, S4, 0x0]

================================

Block 0xbee
[0xbee:0xc27]
---
Predecessors: []
Successors: []
---
0xbee STOP
0xbef LOG1
0xbf0 PUSH6 0x627a7a723058
0xbf7 SHA3
0xbf8 DUP10
0xbf9 PUSH19 0x13433623e732ff0c18a4e0c87d8b891b485771
0xc0d PUSH26 0xc9f4223bbb54341435700029
---
0xbee: STOP 
0xbef: LOG S0 S1 S2
0xbf0: V1152 = 0x627a7a723058
0xbf7: V1153 = SHA3 0x627a7a723058 S3
0xbf9: V1154 = 0x13433623e732ff0c18a4e0c87d8b891b485771
0xc0d: V1155 = 0xc9f4223bbb54341435700029
---
Entry stack: []
Stack pops: 0
Stack additions: [0xc9f4223bbb54341435700029, 0x13433623e732ff0c18a4e0c87d8b891b485771, S12, V1153, S4, S5, S6, S7, S8, S9, S10, S11, S12]
Exit stack: []

================================

Function 0:
Public function signature: 0x1476e40f
Entry block: 0xd1
Exit block: 0x155
Body: 0xd1, 0x155, 0x3d1, 0x3e3, 0x3ed, 0x3fa, 0x3fb, 0x410, 0x411, 0x420, 0x42b, 0x448, 0x474, 0x478, 0x55c, 0x579, 0x5a5, 0x5a9, 0xa2f, 0xa39, 0xa48, 0xa49, 0xa66, 0xa67, 0xa84, 0xb73, 0xb84, 0xb88

Function 1:
Public function signature: 0x1e89d545
Entry block: 0x169
Exit block: 0x155
Body: 0x155, 0x169, 0x42b, 0x448, 0x474, 0x478, 0x481, 0x493, 0x49d, 0x4aa, 0x4ab, 0x4c0, 0x4c1, 0x4d0, 0x4fc, 0x506, 0x515, 0x516, 0x533, 0x534, 0x551, 0x55c, 0x579, 0x5a5, 0x5a9, 0xbaf, 0xbc0, 0xbc4

Function 2:
Public function signature: 0x1f6eb6e7
Entry block: 0x1ed
Exit block: 0x200
Body: 0x1ed, 0x1f4, 0x1f8, 0x200, 0x4db

Function 3:
Public function signature: 0x2a17e397
Entry block: 0x21c
Exit block: 0x155
Body: 0x155, 0x21c, 0x42b, 0x448, 0x474, 0x478, 0x493, 0x49d, 0x4aa, 0x4ab, 0x4c0, 0x4c1, 0x4d0, 0x4ea, 0x4fc, 0x506, 0x515, 0x516, 0x533, 0x534, 0x551, 0x55c, 0x579, 0x5a5, 0x5a9, 0xbaf, 0xbc0, 0xbc4

Function 4:
Public function signature: 0x2af4c31e
Entry block: 0x260
Exit block: 0x27f
Body: 0x260, 0x267, 0x26b, 0x27f, 0x5b1, 0x5c9, 0x5cd, 0x5de, 0x5e2

Function 5:
Public function signature: 0x666a3427
Entry block: 0x281
Exit block: 0x27f
Body: 0x27f, 0x281, 0x288, 0x28c, 0x645, 0x65c, 0x660, 0x673, 0x677

Function 6:
Public function signature: 0x710bf322
Entry block: 0x2a0
Exit block: 0x27f
Body: 0x27f, 0x2a0, 0x2a7, 0x2ab, 0x6c2, 0x6d9, 0x6dd

Function 7:
Public function signature: 0x79ba5097
Entry block: 0x2bf
Exit block: 0x27f
Body: 0x27f, 0x2bf, 0x2c6, 0x2ca, 0x733, 0x74d, 0x751

Function 8:
Public function signature: 0x892db057
Entry block: 0x2d2
Exit block: 0x155
Body: 0x155, 0x2d2, 0x2d9, 0x2dd, 0x7b3

Function 9:
Public function signature: 0x8da5cb5b
Entry block: 0x2f1
Exit block: 0x200
Body: 0x200, 0x2f1, 0x2f8, 0x2fc, 0x7d2

Function 10:
Public function signature: 0xa142d608
Entry block: 0x304
Exit block: 0x9cf
Body: 0x27f, 0x304, 0x30b, 0x30f, 0x7e1, 0x7fe, 0x811, 0x818, 0x81c, 0x83e, 0x842, 0x853, 0x887, 0x88b, 0x8d4, 0x929, 0x92d, 0x93a, 0x93e, 0x9a9, 0x9ad, 0x9ba, 0x9be, 0x9cf, 0x9d3, 0xa18

Function 11:
Public function signature: 0xac66777f
Entry block: 0x323
Exit block: 0x155
Body: 0x155, 0x323, 0x3e3, 0x3ed, 0x3fa, 0x3fb, 0x410, 0x411, 0x420, 0x42b, 0x448, 0x474, 0x478, 0x55c, 0x579, 0x5a5, 0x5a9, 0xa1d, 0xa2f, 0xa39, 0xa48, 0xa49, 0xa66, 0xa67, 0xa84, 0xb73, 0xb84, 0xb88

Function 12:
Public function signature: 0xd091b550
Entry block: 0x367
Exit block: 0x200
Body: 0x200, 0x367, 0x36e, 0x372, 0xa8f

Function 13:
Public function signature: 0xd836fbe8
Entry block: 0x37a
Exit block: 0x27f
Body: 0x27f, 0x37a, 0x381, 0x385, 0xa9e, 0xab6, 0xac9, 0xad0, 0xad4

Function 14:
Public function signature: 0xf09a4016
Entry block: 0x399
Exit block: 0x27f
Body: 0x27f, 0x399, 0x3a0, 0x3a4, 0xaf6, 0xb08, 0xb0c, 0xb1d, 0xb21, 0xb32, 0xb36

Function 15:
Public function signature: 0xf5b61230
Entry block: 0x3be
Exit block: 0x200
Body: 0x200, 0x3be, 0x3c5, 0x3c9, 0xb64

Function 16:
Public fallback function
Entry block: 0xcc
Exit block: 0xcc
Body: 0xcc

