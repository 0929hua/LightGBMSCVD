Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xd7]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xd7
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xd7
0xc: JUMPI 0xd7 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0xdc]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x14bfd6d0
0x21 DUP2
0x22 EQ
0x23 PUSH2 0xdc
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x14bfd6d0
0x22: V15 = EQ V13 0x14bfd6d0
0x23: V16 = 0xdc
0x26: JUMPI 0xdc V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x110]
---
0x27 DUP1
0x28 PUSH4 0x34eac76f
0x2d EQ
0x2e PUSH2 0x110
0x31 JUMPI
---
0x28: V17 = 0x34eac76f
0x2d: V18 = EQ 0x34eac76f V13
0x2e: V19 = 0x110
0x31: JUMPI 0x110 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x139]
---
0x32 DUP1
0x33 PUSH4 0x35a063b4
0x38 EQ
0x39 PUSH2 0x139
0x3c JUMPI
---
0x33: V20 = 0x35a063b4
0x38: V21 = EQ 0x35a063b4 V13
0x39: V22 = 0x139
0x3c: JUMPI 0x139 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x150]
---
0x3d DUP1
0x3e PUSH4 0x4783c35b
0x43 EQ
0x44 PUSH2 0x150
0x47 JUMPI
---
0x3e: V23 = 0x4783c35b
0x43: V24 = EQ 0x4783c35b V13
0x44: V25 = 0x150
0x47: JUMPI 0x150 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x165]
---
0x48 DUP1
0x49 PUSH4 0x53f754e0
0x4e EQ
0x4f PUSH2 0x165
0x52 JUMPI
---
0x49: V26 = 0x53f754e0
0x4e: V27 = EQ 0x53f754e0 V13
0x4f: V28 = 0x165
0x52: JUMPI 0x165 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x18f]
---
0x53 DUP1
0x54 PUSH4 0x63037b0c
0x59 EQ
0x5a PUSH2 0x18f
0x5d JUMPI
---
0x54: V29 = 0x63037b0c
0x59: V30 = EQ 0x63037b0c V13
0x5a: V31 = 0x18f
0x5d: JUMPI 0x18f V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x1d1]
---
0x5e DUP1
0x5f PUSH4 0x66829b16
0x64 EQ
0x65 PUSH2 0x1d1
0x68 JUMPI
---
0x5f: V32 = 0x66829b16
0x64: V33 = EQ 0x66829b16 V13
0x65: V34 = 0x1d1
0x68: JUMPI 0x1d1 V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x1f2]
---
0x69 DUP1
0x6a PUSH4 0x6901f668
0x6f EQ
0x70 PUSH2 0x1f2
0x73 JUMPI
---
0x6a: V35 = 0x6901f668
0x6f: V36 = EQ 0x6901f668 V13
0x70: V37 = 0x1f2
0x73: JUMPI 0x1f2 V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x207]
---
0x74 DUP1
0x75 PUSH4 0x853828b6
0x7a EQ
0x7b PUSH2 0x207
0x7e JUMPI
---
0x75: V38 = 0x853828b6
0x7a: V39 = EQ 0x853828b6 V13
0x7b: V40 = 0x207
0x7e: JUMPI 0x207 V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x89]
---
Predecessors: [0x74]
Successors: [0x8a, 0x21c]
---
0x7f DUP1
0x80 PUSH4 0x93e88f3a
0x85 EQ
0x86 PUSH2 0x21c
0x89 JUMPI
---
0x80: V41 = 0x93e88f3a
0x85: V42 = EQ 0x93e88f3a V13
0x86: V43 = 0x21c
0x89: JUMPI 0x21c V42
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x8a
[0x8a:0x94]
---
Predecessors: [0x7f]
Successors: [0x95, 0x231]
---
0x8a DUP1
0x8b PUSH4 0x9c75dd35
0x90 EQ
0x91 PUSH2 0x231
0x94 JUMPI
---
0x8b: V44 = 0x9c75dd35
0x90: V45 = EQ 0x9c75dd35 V13
0x91: V46 = 0x231
0x94: JUMPI 0x231 V45
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x95
[0x95:0x9f]
---
Predecessors: [0x8a]
Successors: [0xa0, 0x249]
---
0x95 DUP1
0x96 PUSH4 0xba3f5a12
0x9b EQ
0x9c PUSH2 0x249
0x9f JUMPI
---
0x96: V47 = 0xba3f5a12
0x9b: V48 = EQ 0xba3f5a12 V13
0x9c: V49 = 0x249
0x9f: JUMPI 0x249 V48
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xa0
[0xa0:0xaa]
---
Predecessors: [0x95]
Successors: [0xab, 0x25e]
---
0xa0 DUP1
0xa1 PUSH4 0xd2c51c72
0xa6 EQ
0xa7 PUSH2 0x25e
0xaa JUMPI
---
0xa1: V50 = 0xd2c51c72
0xa6: V51 = EQ 0xd2c51c72 V13
0xa7: V52 = 0x25e
0xaa: JUMPI 0x25e V51
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xab
[0xab:0xb5]
---
Predecessors: [0xa0]
Successors: [0xb6, 0x273]
---
0xab DUP1
0xac PUSH4 0xdb171211
0xb1 EQ
0xb2 PUSH2 0x273
0xb5 JUMPI
---
0xac: V53 = 0xdb171211
0xb1: V54 = EQ 0xdb171211 V13
0xb2: V55 = 0x273
0xb5: JUMPI 0x273 V54
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xb6
[0xb6:0xc0]
---
Predecessors: [0xab]
Successors: [0xc1, 0x288]
---
0xb6 DUP1
0xb7 PUSH4 0xe09adc70
0xbc EQ
0xbd PUSH2 0x288
0xc0 JUMPI
---
0xb7: V56 = 0xe09adc70
0xbc: V57 = EQ 0xe09adc70 V13
0xbd: V58 = 0x288
0xc0: JUMPI 0x288 V57
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xc1
[0xc1:0xcb]
---
Predecessors: [0xb6]
Successors: [0xcc, 0x29d]
---
0xc1 DUP1
0xc2 PUSH4 0xeffd88b7
0xc7 EQ
0xc8 PUSH2 0x29d
0xcb JUMPI
---
0xc2: V59 = 0xeffd88b7
0xc7: V60 = EQ 0xeffd88b7 V13
0xc8: V61 = 0x29d
0xcb: JUMPI 0x29d V60
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xcc
[0xcc:0xd6]
---
Predecessors: [0xc1]
Successors: [0xd7, 0x2b2]
---
0xcc DUP1
0xcd PUSH4 0xfc0c546a
0xd2 EQ
0xd3 PUSH2 0x2b2
0xd6 JUMPI
---
0xcd: V62 = 0xfc0c546a
0xd2: V63 = EQ 0xfc0c546a V13
0xd3: V64 = 0x2b2
0xd6: JUMPI 0x2b2 V63
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xd7
[0xd7:0xdb]
---
Predecessors: [0x0, 0xcc]
Successors: []
---
0xd7 JUMPDEST
0xd8 PUSH1 0x0
0xda DUP1
0xdb REVERT
---
0xd7: JUMPDEST 
0xd8: V65 = 0x0
0xdb: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xdc
[0xdc:0xe3]
---
Predecessors: [0xd]
Successors: [0xe4, 0xe8]
---
0xdc JUMPDEST
0xdd CALLVALUE
0xde DUP1
0xdf ISZERO
0xe0 PUSH2 0xe8
0xe3 JUMPI
---
0xdc: JUMPDEST 
0xdd: V66 = CALLVALUE
0xdf: V67 = ISZERO V66
0xe0: V68 = 0xe8
0xe3: JUMPI 0xe8 V67
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V66]
Exit stack: [V13, V66]

================================

Block 0xe4
[0xe4:0xe7]
---
Predecessors: [0xdc]
Successors: []
---
0xe4 PUSH1 0x0
0xe6 DUP1
0xe7 REVERT
---
0xe4: V69 = 0x0
0xe7: REVERT 0x0 0x0
---
Entry stack: [V13, V66]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V66]

================================

Block 0xe8
[0xe8:0xf3]
---
Predecessors: [0xdc]
Successors: [0x2c7]
---
0xe8 JUMPDEST
0xe9 POP
0xea PUSH2 0xf4
0xed PUSH1 0x4
0xef CALLDATALOAD
0xf0 PUSH2 0x2c7
0xf3 JUMP
---
0xe8: JUMPDEST 
0xea: V70 = 0xf4
0xed: V71 = 0x4
0xef: V72 = CALLDATALOAD 0x4
0xf0: V73 = 0x2c7
0xf3: JUMP 0x2c7
---
Entry stack: [V13, V66]
Stack pops: 1
Stack additions: [0xf4, V72]
Exit stack: [V13, 0xf4, V72]

================================

Block 0xf4
[0xf4:0x10f]
---
Predecessors: [0x2d5, 0x378, 0xb47]
Successors: []
---
0xf4 JUMPDEST
0xf5 PUSH1 0x40
0xf7 DUP1
0xf8 MLOAD
0xf9 PUSH1 0x1
0xfb PUSH1 0xa0
0xfd PUSH1 0x2
0xff EXP
0x100 SUB
0x101 SWAP1
0x102 SWAP3
0x103 AND
0x104 DUP3
0x105 MSTORE
0x106 MLOAD
0x107 SWAP1
0x108 DUP2
0x109 SWAP1
0x10a SUB
0x10b PUSH1 0x20
0x10d ADD
0x10e SWAP1
0x10f RETURN
---
0xf4: JUMPDEST 
0xf5: V74 = 0x40
0xf8: V75 = M[0x40]
0xf9: V76 = 0x1
0xfb: V77 = 0xa0
0xfd: V78 = 0x2
0xff: V79 = EXP 0x2 0xa0
0x100: V80 = SUB 0x10000000000000000000000000000000000000000 0x1
0x103: V81 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x105: M[V75] = V81
0x106: V82 = M[0x40]
0x10a: V83 = SUB V75 V82
0x10b: V84 = 0x20
0x10d: V85 = ADD 0x20 V83
0x10f: RETURN V82 V85
---
Entry stack: [V13, 0xf4, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xf4]

================================

Block 0x110
[0x110:0x117]
---
Predecessors: [0x27]
Successors: [0x118, 0x11c]
---
0x110 JUMPDEST
0x111 CALLVALUE
0x112 DUP1
0x113 ISZERO
0x114 PUSH2 0x11c
0x117 JUMPI
---
0x110: JUMPDEST 
0x111: V86 = CALLVALUE
0x113: V87 = ISZERO V86
0x114: V88 = 0x11c
0x117: JUMPI 0x11c V87
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V86]
Exit stack: [V13, V86]

================================

Block 0x118
[0x118:0x11b]
---
Predecessors: [0x110]
Successors: []
---
0x118 PUSH1 0x0
0x11a DUP1
0x11b REVERT
---
0x118: V89 = 0x0
0x11b: REVERT 0x0 0x0
---
Entry stack: [V13, V86]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V86]

================================

Block 0x11c
[0x11c:0x124]
---
Predecessors: [0x110]
Successors: [0x2ef]
---
0x11c JUMPDEST
0x11d POP
0x11e PUSH2 0x125
0x121 PUSH2 0x2ef
0x124 JUMP
---
0x11c: JUMPDEST 
0x11e: V90 = 0x125
0x121: V91 = 0x2ef
0x124: JUMP 0x2ef
---
Entry stack: [V13, V86]
Stack pops: 1
Stack additions: [0x125]
Exit stack: [V13, 0x125]

================================

Block 0x125
[0x125:0x138]
---
Predecessors: [0x2ef, 0x62d, 0xb32]
Successors: []
---
0x125 JUMPDEST
0x126 PUSH1 0x40
0x128 DUP1
0x129 MLOAD
0x12a SWAP2
0x12b ISZERO
0x12c ISZERO
0x12d DUP3
0x12e MSTORE
0x12f MLOAD
0x130 SWAP1
0x131 DUP2
0x132 SWAP1
0x133 SUB
0x134 PUSH1 0x20
0x136 ADD
0x137 SWAP1
0x138 RETURN
---
0x125: JUMPDEST 
0x126: V92 = 0x40
0x129: V93 = M[0x40]
0x12b: V94 = ISZERO S0
0x12c: V95 = ISZERO V94
0x12e: M[V93] = V95
0x12f: V96 = M[0x40]
0x133: V97 = SUB V93 V96
0x134: V98 = 0x20
0x136: V99 = ADD 0x20 V97
0x138: RETURN V96 V99
---
Entry stack: [V13, 0x14e, S4, {0x0, 0x14e}, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x14e, S4, {0x0, 0x14e}, S2, S1]

================================

Block 0x139
[0x139:0x140]
---
Predecessors: [0x32]
Successors: [0x141, 0x145]
---
0x139 JUMPDEST
0x13a CALLVALUE
0x13b DUP1
0x13c ISZERO
0x13d PUSH2 0x145
0x140 JUMPI
---
0x139: JUMPDEST 
0x13a: V100 = CALLVALUE
0x13c: V101 = ISZERO V100
0x13d: V102 = 0x145
0x140: JUMPI 0x145 V101
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V100]
Exit stack: [V13, V100]

================================

Block 0x141
[0x141:0x144]
---
Predecessors: [0x139]
Successors: []
---
0x141 PUSH1 0x0
0x143 DUP1
0x144 REVERT
---
0x141: V103 = 0x0
0x144: REVERT 0x0 0x0
---
Entry stack: [V13, V100]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V100]

================================

Block 0x145
[0x145:0x14d]
---
Predecessors: [0x139]
Successors: [0x2f8]
---
0x145 JUMPDEST
0x146 POP
0x147 PUSH2 0x14e
0x14a PUSH2 0x2f8
0x14d JUMP
---
0x145: JUMPDEST 
0x147: V104 = 0x14e
0x14a: V105 = 0x2f8
0x14d: JUMP 0x2f8
---
Entry stack: [V13, V100]
Stack pops: 1
Stack additions: [0x14e]
Exit stack: [V13, 0x14e]

================================

Block 0x14e
[0x14e:0x14f]
---
Predecessors: [0x43e, 0x844, 0x95b]
Successors: []
---
0x14e JUMPDEST
0x14f STOP
---
0x14e: JUMPDEST 
0x14f: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x150
[0x150:0x157]
---
Predecessors: [0x3d]
Successors: [0x158, 0x15c]
---
0x150 JUMPDEST
0x151 CALLVALUE
0x152 DUP1
0x153 ISZERO
0x154 PUSH2 0x15c
0x157 JUMPI
---
0x150: JUMPDEST 
0x151: V106 = CALLVALUE
0x153: V107 = ISZERO V106
0x154: V108 = 0x15c
0x157: JUMPI 0x15c V107
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V106]
Exit stack: [V13, V106]

================================

Block 0x158
[0x158:0x15b]
---
Predecessors: [0x150]
Successors: []
---
0x158 PUSH1 0x0
0x15a DUP1
0x15b REVERT
---
0x158: V109 = 0x0
0x15b: REVERT 0x0 0x0
---
Entry stack: [V13, V106]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V106]

================================

Block 0x15c
[0x15c:0x164]
---
Predecessors: [0x150]
Successors: [0x378]
---
0x15c JUMPDEST
0x15d POP
0x15e PUSH2 0xf4
0x161 PUSH2 0x378
0x164 JUMP
---
0x15c: JUMPDEST 
0x15e: V110 = 0xf4
0x161: V111 = 0x378
0x164: JUMP 0x378
---
Entry stack: [V13, V106]
Stack pops: 1
Stack additions: [0xf4]
Exit stack: [V13, 0xf4]

================================

Block 0x165
[0x165:0x16c]
---
Predecessors: [0x48]
Successors: [0x16d, 0x171]
---
0x165 JUMPDEST
0x166 CALLVALUE
0x167 DUP1
0x168 ISZERO
0x169 PUSH2 0x171
0x16c JUMPI
---
0x165: JUMPDEST 
0x166: V112 = CALLVALUE
0x168: V113 = ISZERO V112
0x169: V114 = 0x171
0x16c: JUMPI 0x171 V113
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V112]
Exit stack: [V13, V112]

================================

Block 0x16d
[0x16d:0x170]
---
Predecessors: [0x165]
Successors: []
---
0x16d PUSH1 0x0
0x16f DUP1
0x170 REVERT
---
0x16d: V115 = 0x0
0x170: REVERT 0x0 0x0
---
Entry stack: [V13, V112]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V112]

================================

Block 0x171
[0x171:0x17c]
---
Predecessors: [0x165]
Successors: [0x387]
---
0x171 JUMPDEST
0x172 POP
0x173 PUSH2 0x17d
0x176 PUSH1 0x4
0x178 CALLDATALOAD
0x179 PUSH2 0x387
0x17c JUMP
---
0x171: JUMPDEST 
0x173: V116 = 0x17d
0x176: V117 = 0x4
0x178: V118 = CALLDATALOAD 0x4
0x179: V119 = 0x387
0x17c: JUMP 0x387
---
Entry stack: [V13, V112]
Stack pops: 1
Stack additions: [0x17d, V118]
Exit stack: [V13, 0x17d, V118]

================================

Block 0x17d
[0x17d:0x18e]
---
Predecessors: [0x39a, 0x8a7, 0x96d, 0x973, 0xb3b, 0xb41]
Successors: []
---
0x17d JUMPDEST
0x17e PUSH1 0x40
0x180 DUP1
0x181 MLOAD
0x182 SWAP2
0x183 DUP3
0x184 MSTORE
0x185 MLOAD
0x186 SWAP1
0x187 DUP2
0x188 SWAP1
0x189 SUB
0x18a PUSH1 0x20
0x18c ADD
0x18d SWAP1
0x18e RETURN
---
0x17d: JUMPDEST 
0x17e: V120 = 0x40
0x181: V121 = M[0x40]
0x184: M[V121] = S0
0x185: V122 = M[0x40]
0x189: V123 = SUB V121 V122
0x18a: V124 = 0x20
0x18c: V125 = ADD 0x20 V123
0x18e: RETURN V122 V125
---
Entry stack: [V13, 0x14e, 0x0, 0x0, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x14e, 0x0, 0x0, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x18f
[0x18f:0x196]
---
Predecessors: [0x53]
Successors: [0x197, 0x19b]
---
0x18f JUMPDEST
0x190 CALLVALUE
0x191 DUP1
0x192 ISZERO
0x193 PUSH2 0x19b
0x196 JUMPI
---
0x18f: JUMPDEST 
0x190: V126 = CALLVALUE
0x192: V127 = ISZERO V126
0x193: V128 = 0x19b
0x196: JUMPI 0x19b V127
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V126]
Exit stack: [V13, V126]

================================

Block 0x197
[0x197:0x19a]
---
Predecessors: [0x18f]
Successors: []
---
0x197 PUSH1 0x0
0x199 DUP1
0x19a REVERT
---
0x197: V129 = 0x0
0x19a: REVERT 0x0 0x0
---
Entry stack: [V13, V126]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V126]

================================

Block 0x19b
[0x19b:0x1a6]
---
Predecessors: [0x18f]
Successors: [0x3a1]
---
0x19b JUMPDEST
0x19c POP
0x19d PUSH2 0x1a7
0x1a0 PUSH1 0x4
0x1a2 CALLDATALOAD
0x1a3 PUSH2 0x3a1
0x1a6 JUMP
---
0x19b: JUMPDEST 
0x19d: V130 = 0x1a7
0x1a0: V131 = 0x4
0x1a2: V132 = CALLDATALOAD 0x4
0x1a3: V133 = 0x3a1
0x1a6: JUMP 0x3a1
---
Entry stack: [V13, V126]
Stack pops: 1
Stack additions: [0x1a7, V132]
Exit stack: [V13, 0x1a7, V132]

================================

Block 0x1a7
[0x1a7:0x1d0]
---
Predecessors: [0x3af]
Successors: []
---
0x1a7 JUMPDEST
0x1a8 PUSH1 0x40
0x1aa DUP1
0x1ab MLOAD
0x1ac PUSH1 0x1
0x1ae PUSH1 0xa0
0x1b0 PUSH1 0x2
0x1b2 EXP
0x1b3 SUB
0x1b4 SWAP1
0x1b5 SWAP5
0x1b6 AND
0x1b7 DUP5
0x1b8 MSTORE
0x1b9 PUSH1 0x20
0x1bb DUP5
0x1bc ADD
0x1bd SWAP3
0x1be SWAP1
0x1bf SWAP3
0x1c0 MSTORE
0x1c1 ISZERO
0x1c2 ISZERO
0x1c3 DUP3
0x1c4 DUP3
0x1c5 ADD
0x1c6 MSTORE
0x1c7 MLOAD
0x1c8 SWAP1
0x1c9 DUP2
0x1ca SWAP1
0x1cb SUB
0x1cc PUSH1 0x60
0x1ce ADD
0x1cf SWAP1
0x1d0 RETURN
---
0x1a7: JUMPDEST 
0x1a8: V134 = 0x40
0x1ab: V135 = M[0x40]
0x1ac: V136 = 0x1
0x1ae: V137 = 0xa0
0x1b0: V138 = 0x2
0x1b2: V139 = EXP 0x2 0xa0
0x1b3: V140 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b6: V141 = AND V340 0xffffffffffffffffffffffffffffffffffffffff
0x1b8: M[V135] = V141
0x1b9: V142 = 0x20
0x1bc: V143 = ADD V135 0x20
0x1c0: M[V143] = V331
0x1c1: V144 = ISZERO V342
0x1c2: V145 = ISZERO V144
0x1c5: V146 = ADD 0x40 V135
0x1c6: M[V146] = V145
0x1c7: V147 = M[0x40]
0x1cb: V148 = SUB V135 V147
0x1cc: V149 = 0x60
0x1ce: V150 = ADD 0x60 V148
0x1d0: RETURN V147 V150
---
Entry stack: [V13, 0x1a7, V340, V331, V342]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0x1a7]

================================

Block 0x1d1
[0x1d1:0x1d8]
---
Predecessors: [0x5e]
Successors: [0x1d9, 0x1dd]
---
0x1d1 JUMPDEST
0x1d2 CALLVALUE
0x1d3 DUP1
0x1d4 ISZERO
0x1d5 PUSH2 0x1dd
0x1d8 JUMPI
---
0x1d1: JUMPDEST 
0x1d2: V151 = CALLVALUE
0x1d4: V152 = ISZERO V151
0x1d5: V153 = 0x1dd
0x1d8: JUMPI 0x1dd V152
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V151]
Exit stack: [V13, V151]

================================

Block 0x1d9
[0x1d9:0x1dc]
---
Predecessors: [0x1d1]
Successors: []
---
0x1d9 PUSH1 0x0
0x1db DUP1
0x1dc REVERT
---
0x1d9: V154 = 0x0
0x1dc: REVERT 0x0 0x0
---
Entry stack: [V13, V151]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V151]

================================

Block 0x1dd
[0x1dd:0x1f1]
---
Predecessors: [0x1d1]
Successors: [0x3df]
---
0x1dd JUMPDEST
0x1de POP
0x1df PUSH2 0x14e
0x1e2 PUSH1 0x1
0x1e4 PUSH1 0xa0
0x1e6 PUSH1 0x2
0x1e8 EXP
0x1e9 SUB
0x1ea PUSH1 0x4
0x1ec CALLDATALOAD
0x1ed AND
0x1ee PUSH2 0x3df
0x1f1 JUMP
---
0x1dd: JUMPDEST 
0x1df: V155 = 0x14e
0x1e2: V156 = 0x1
0x1e4: V157 = 0xa0
0x1e6: V158 = 0x2
0x1e8: V159 = EXP 0x2 0xa0
0x1e9: V160 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ea: V161 = 0x4
0x1ec: V162 = CALLDATALOAD 0x4
0x1ed: V163 = AND V162 0xffffffffffffffffffffffffffffffffffffffff
0x1ee: V164 = 0x3df
0x1f1: JUMP 0x3df
---
Entry stack: [V13, V151]
Stack pops: 1
Stack additions: [0x14e, V163]
Exit stack: [V13, 0x14e, V163]

================================

Block 0x1f2
[0x1f2:0x1f9]
---
Predecessors: [0x69]
Successors: [0x1fa, 0x1fe]
---
0x1f2 JUMPDEST
0x1f3 CALLVALUE
0x1f4 DUP1
0x1f5 ISZERO
0x1f6 PUSH2 0x1fe
0x1f9 JUMPI
---
0x1f2: JUMPDEST 
0x1f3: V165 = CALLVALUE
0x1f5: V166 = ISZERO V165
0x1f6: V167 = 0x1fe
0x1f9: JUMPI 0x1fe V166
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V165]
Exit stack: [V13, V165]

================================

Block 0x1fa
[0x1fa:0x1fd]
---
Predecessors: [0x1f2]
Successors: []
---
0x1fa PUSH1 0x0
0x1fc DUP1
0x1fd REVERT
---
0x1fa: V168 = 0x0
0x1fd: REVERT 0x0 0x0
---
Entry stack: [V13, V165]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V165]

================================

Block 0x1fe
[0x1fe:0x206]
---
Predecessors: [0x1f2]
Successors: [0x46f]
---
0x1fe JUMPDEST
0x1ff POP
0x200 PUSH2 0x125
0x203 PUSH2 0x46f
0x206 JUMP
---
0x1fe: JUMPDEST 
0x200: V169 = 0x125
0x203: V170 = 0x46f
0x206: JUMP 0x46f
---
Entry stack: [V13, V165]
Stack pops: 1
Stack additions: [0x125]
Exit stack: [V13, 0x125]

================================

Block 0x207
[0x207:0x20e]
---
Predecessors: [0x74]
Successors: [0x20f, 0x213]
---
0x207 JUMPDEST
0x208 CALLVALUE
0x209 DUP1
0x20a ISZERO
0x20b PUSH2 0x213
0x20e JUMPI
---
0x207: JUMPDEST 
0x208: V171 = CALLVALUE
0x20a: V172 = ISZERO V171
0x20b: V173 = 0x213
0x20e: JUMPI 0x213 V172
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V171]
Exit stack: [V13, V171]

================================

Block 0x20f
[0x20f:0x212]
---
Predecessors: [0x207]
Successors: []
---
0x20f PUSH1 0x0
0x211 DUP1
0x212 REVERT
---
0x20f: V174 = 0x0
0x212: REVERT 0x0 0x0
---
Entry stack: [V13, V171]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V171]

================================

Block 0x213
[0x213:0x21b]
---
Predecessors: [0x207]
Successors: [0x634]
---
0x213 JUMPDEST
0x214 POP
0x215 PUSH2 0x14e
0x218 PUSH2 0x634
0x21b JUMP
---
0x213: JUMPDEST 
0x215: V175 = 0x14e
0x218: V176 = 0x634
0x21b: JUMP 0x634
---
Entry stack: [V13, V171]
Stack pops: 1
Stack additions: [0x14e]
Exit stack: [V13, 0x14e]

================================

Block 0x21c
[0x21c:0x223]
---
Predecessors: [0x7f]
Successors: [0x224, 0x228]
---
0x21c JUMPDEST
0x21d CALLVALUE
0x21e DUP1
0x21f ISZERO
0x220 PUSH2 0x228
0x223 JUMPI
---
0x21c: JUMPDEST 
0x21d: V177 = CALLVALUE
0x21f: V178 = ISZERO V177
0x220: V179 = 0x228
0x223: JUMPI 0x228 V178
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V177]
Exit stack: [V13, V177]

================================

Block 0x224
[0x224:0x227]
---
Predecessors: [0x21c]
Successors: []
---
0x224 PUSH1 0x0
0x226 DUP1
0x227 REVERT
---
0x224: V180 = 0x0
0x227: REVERT 0x0 0x0
---
Entry stack: [V13, V177]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V177]

================================

Block 0x228
[0x228:0x230]
---
Predecessors: [0x21c]
Successors: [0x84a]
---
0x228 JUMPDEST
0x229 POP
0x22a PUSH2 0x17d
0x22d PUSH2 0x84a
0x230 JUMP
---
0x228: JUMPDEST 
0x22a: V181 = 0x17d
0x22d: V182 = 0x84a
0x230: JUMP 0x84a
---
Entry stack: [V13, V177]
Stack pops: 1
Stack additions: [0x17d]
Exit stack: [V13, 0x17d]

================================

Block 0x231
[0x231:0x238]
---
Predecessors: [0x8a]
Successors: [0x239, 0x23d]
---
0x231 JUMPDEST
0x232 CALLVALUE
0x233 DUP1
0x234 ISZERO
0x235 PUSH2 0x23d
0x238 JUMPI
---
0x231: JUMPDEST 
0x232: V183 = CALLVALUE
0x234: V184 = ISZERO V183
0x235: V185 = 0x23d
0x238: JUMPI 0x23d V184
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V183]
Exit stack: [V13, V183]

================================

Block 0x239
[0x239:0x23c]
---
Predecessors: [0x231]
Successors: []
---
0x239 PUSH1 0x0
0x23b DUP1
0x23c REVERT
---
0x239: V186 = 0x0
0x23c: REVERT 0x0 0x0
---
Entry stack: [V13, V183]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V183]

================================

Block 0x23d
[0x23d:0x248]
---
Predecessors: [0x231]
Successors: [0x8ad]
---
0x23d JUMPDEST
0x23e POP
0x23f PUSH2 0x14e
0x242 PUSH1 0x4
0x244 CALLDATALOAD
0x245 PUSH2 0x8ad
0x248 JUMP
---
0x23d: JUMPDEST 
0x23f: V187 = 0x14e
0x242: V188 = 0x4
0x244: V189 = CALLDATALOAD 0x4
0x245: V190 = 0x8ad
0x248: JUMP 0x8ad
---
Entry stack: [V13, V183]
Stack pops: 1
Stack additions: [0x14e, V189]
Exit stack: [V13, 0x14e, V189]

================================

Block 0x249
[0x249:0x250]
---
Predecessors: [0x95]
Successors: [0x251, 0x255]
---
0x249 JUMPDEST
0x24a CALLVALUE
0x24b DUP1
0x24c ISZERO
0x24d PUSH2 0x255
0x250 JUMPI
---
0x249: JUMPDEST 
0x24a: V191 = CALLVALUE
0x24c: V192 = ISZERO V191
0x24d: V193 = 0x255
0x250: JUMPI 0x255 V192
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V191]
Exit stack: [V13, V191]

================================

Block 0x251
[0x251:0x254]
---
Predecessors: [0x249]
Successors: []
---
0x251 PUSH1 0x0
0x253 DUP1
0x254 REVERT
---
0x251: V194 = 0x0
0x254: REVERT 0x0 0x0
---
Entry stack: [V13, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V191]

================================

Block 0x255
[0x255:0x25d]
---
Predecessors: [0x249]
Successors: [0x96d]
---
0x255 JUMPDEST
0x256 POP
0x257 PUSH2 0x17d
0x25a PUSH2 0x96d
0x25d JUMP
---
0x255: JUMPDEST 
0x257: V195 = 0x17d
0x25a: V196 = 0x96d
0x25d: JUMP 0x96d
---
Entry stack: [V13, V191]
Stack pops: 1
Stack additions: [0x17d]
Exit stack: [V13, 0x17d]

================================

Block 0x25e
[0x25e:0x265]
---
Predecessors: [0xa0]
Successors: [0x266, 0x26a]
---
0x25e JUMPDEST
0x25f CALLVALUE
0x260 DUP1
0x261 ISZERO
0x262 PUSH2 0x26a
0x265 JUMPI
---
0x25e: JUMPDEST 
0x25f: V197 = CALLVALUE
0x261: V198 = ISZERO V197
0x262: V199 = 0x26a
0x265: JUMPI 0x26a V198
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V197]
Exit stack: [V13, V197]

================================

Block 0x266
[0x266:0x269]
---
Predecessors: [0x25e]
Successors: []
---
0x266 PUSH1 0x0
0x268 DUP1
0x269 REVERT
---
0x266: V200 = 0x0
0x269: REVERT 0x0 0x0
---
Entry stack: [V13, V197]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V197]

================================

Block 0x26a
[0x26a:0x272]
---
Predecessors: [0x25e]
Successors: [0x973]
---
0x26a JUMPDEST
0x26b POP
0x26c PUSH2 0x17d
0x26f PUSH2 0x973
0x272 JUMP
---
0x26a: JUMPDEST 
0x26c: V201 = 0x17d
0x26f: V202 = 0x973
0x272: JUMP 0x973
---
Entry stack: [V13, V197]
Stack pops: 1
Stack additions: [0x17d]
Exit stack: [V13, 0x17d]

================================

Block 0x273
[0x273:0x27a]
---
Predecessors: [0xab]
Successors: [0x27b, 0x27f]
---
0x273 JUMPDEST
0x274 CALLVALUE
0x275 DUP1
0x276 ISZERO
0x277 PUSH2 0x27f
0x27a JUMPI
---
0x273: JUMPDEST 
0x274: V203 = CALLVALUE
0x276: V204 = ISZERO V203
0x277: V205 = 0x27f
0x27a: JUMPI 0x27f V204
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V203]
Exit stack: [V13, V203]

================================

Block 0x27b
[0x27b:0x27e]
---
Predecessors: [0x273]
Successors: []
---
0x27b PUSH1 0x0
0x27d DUP1
0x27e REVERT
---
0x27b: V206 = 0x0
0x27e: REVERT 0x0 0x0
---
Entry stack: [V13, V203]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V203]

================================

Block 0x27f
[0x27f:0x287]
---
Predecessors: [0x273]
Successors: [0x979]
---
0x27f JUMPDEST
0x280 POP
0x281 PUSH2 0x125
0x284 PUSH2 0x979
0x287 JUMP
---
0x27f: JUMPDEST 
0x281: V207 = 0x125
0x284: V208 = 0x979
0x287: JUMP 0x979
---
Entry stack: [V13, V203]
Stack pops: 1
Stack additions: [0x125]
Exit stack: [V13, 0x125]

================================

Block 0x288
[0x288:0x28f]
---
Predecessors: [0xb6]
Successors: [0x290, 0x294]
---
0x288 JUMPDEST
0x289 CALLVALUE
0x28a DUP1
0x28b ISZERO
0x28c PUSH2 0x294
0x28f JUMPI
---
0x288: JUMPDEST 
0x289: V209 = CALLVALUE
0x28b: V210 = ISZERO V209
0x28c: V211 = 0x294
0x28f: JUMPI 0x294 V210
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V209]
Exit stack: [V13, V209]

================================

Block 0x290
[0x290:0x293]
---
Predecessors: [0x288]
Successors: []
---
0x290 PUSH1 0x0
0x292 DUP1
0x293 REVERT
---
0x290: V212 = 0x0
0x293: REVERT 0x0 0x0
---
Entry stack: [V13, V209]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V209]

================================

Block 0x294
[0x294:0x29c]
---
Predecessors: [0x288]
Successors: [0xb3b]
---
0x294 JUMPDEST
0x295 POP
0x296 PUSH2 0x17d
0x299 PUSH2 0xb3b
0x29c JUMP
---
0x294: JUMPDEST 
0x296: V213 = 0x17d
0x299: V214 = 0xb3b
0x29c: JUMP 0xb3b
---
Entry stack: [V13, V209]
Stack pops: 1
Stack additions: [0x17d]
Exit stack: [V13, 0x17d]

================================

Block 0x29d
[0x29d:0x2a4]
---
Predecessors: [0xc1]
Successors: [0x2a5, 0x2a9]
---
0x29d JUMPDEST
0x29e CALLVALUE
0x29f DUP1
0x2a0 ISZERO
0x2a1 PUSH2 0x2a9
0x2a4 JUMPI
---
0x29d: JUMPDEST 
0x29e: V215 = CALLVALUE
0x2a0: V216 = ISZERO V215
0x2a1: V217 = 0x2a9
0x2a4: JUMPI 0x2a9 V216
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V215]
Exit stack: [V13, V215]

================================

Block 0x2a5
[0x2a5:0x2a8]
---
Predecessors: [0x29d]
Successors: []
---
0x2a5 PUSH1 0x0
0x2a7 DUP1
0x2a8 REVERT
---
0x2a5: V218 = 0x0
0x2a8: REVERT 0x0 0x0
---
Entry stack: [V13, V215]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V215]

================================

Block 0x2a9
[0x2a9:0x2b1]
---
Predecessors: [0x29d]
Successors: [0xb41]
---
0x2a9 JUMPDEST
0x2aa POP
0x2ab PUSH2 0x17d
0x2ae PUSH2 0xb41
0x2b1 JUMP
---
0x2a9: JUMPDEST 
0x2ab: V219 = 0x17d
0x2ae: V220 = 0xb41
0x2b1: JUMP 0xb41
---
Entry stack: [V13, V215]
Stack pops: 1
Stack additions: [0x17d]
Exit stack: [V13, 0x17d]

================================

Block 0x2b2
[0x2b2:0x2b9]
---
Predecessors: [0xcc]
Successors: [0x2ba, 0x2be]
---
0x2b2 JUMPDEST
0x2b3 CALLVALUE
0x2b4 DUP1
0x2b5 ISZERO
0x2b6 PUSH2 0x2be
0x2b9 JUMPI
---
0x2b2: JUMPDEST 
0x2b3: V221 = CALLVALUE
0x2b5: V222 = ISZERO V221
0x2b6: V223 = 0x2be
0x2b9: JUMPI 0x2be V222
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [V221]
Exit stack: [V13, V221]

================================

Block 0x2ba
[0x2ba:0x2bd]
---
Predecessors: [0x2b2]
Successors: []
---
0x2ba PUSH1 0x0
0x2bc DUP1
0x2bd REVERT
---
0x2ba: V224 = 0x0
0x2bd: REVERT 0x0 0x0
---
Entry stack: [V13, V221]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V221]

================================

Block 0x2be
[0x2be:0x2c6]
---
Predecessors: [0x2b2]
Successors: [0xb47]
---
0x2be JUMPDEST
0x2bf POP
0x2c0 PUSH2 0xf4
0x2c3 PUSH2 0xb47
0x2c6 JUMP
---
0x2be: JUMPDEST 
0x2c0: V225 = 0xf4
0x2c3: V226 = 0xb47
0x2c6: JUMP 0xb47
---
Entry stack: [V13, V221]
Stack pops: 1
Stack additions: [0xf4]
Exit stack: [V13, 0xf4]

================================

Block 0x2c7
[0x2c7:0x2d3]
---
Predecessors: [0xe8]
Successors: [0x2d4, 0x2d5]
---
0x2c7 JUMPDEST
0x2c8 PUSH1 0x5
0x2ca DUP1
0x2cb SLOAD
0x2cc DUP3
0x2cd SWAP1
0x2ce DUP2
0x2cf LT
0x2d0 PUSH2 0x2d5
0x2d3 JUMPI
---
0x2c7: JUMPDEST 
0x2c8: V227 = 0x5
0x2cb: V228 = S[0x5]
0x2cf: V229 = LT V72 V228
0x2d0: V230 = 0x2d5
0x2d3: JUMPI 0x2d5 V229
---
Entry stack: [V13, 0xf4, V72]
Stack pops: 1
Stack additions: [S0, 0x5, S0]
Exit stack: [V13, 0xf4, V72, 0x5, V72]

================================

Block 0x2d4
[0x2d4:0x2d4]
---
Predecessors: [0x2c7]
Successors: []
---
0x2d4 INVALID
---
0x2d4: INVALID 
---
Entry stack: [V13, 0xf4, V72, 0x5, V72]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xf4, V72, 0x5, V72]

================================

Block 0x2d5
[0x2d5:0x2ee]
---
Predecessors: [0x2c7]
Successors: [0xf4]
---
0x2d5 JUMPDEST
0x2d6 PUSH1 0x0
0x2d8 SWAP2
0x2d9 DUP3
0x2da MSTORE
0x2db PUSH1 0x20
0x2dd SWAP1
0x2de SWAP2
0x2df SHA3
0x2e0 ADD
0x2e1 SLOAD
0x2e2 PUSH1 0x1
0x2e4 PUSH1 0xa0
0x2e6 PUSH1 0x2
0x2e8 EXP
0x2e9 SUB
0x2ea AND
0x2eb SWAP1
0x2ec POP
0x2ed DUP2
0x2ee JUMP
---
0x2d5: JUMPDEST 
0x2d6: V231 = 0x0
0x2da: M[0x0] = 0x5
0x2db: V232 = 0x20
0x2df: V233 = SHA3 0x0 0x20
0x2e0: V234 = ADD V233 V72
0x2e1: V235 = S[V234]
0x2e2: V236 = 0x1
0x2e4: V237 = 0xa0
0x2e6: V238 = 0x2
0x2e8: V239 = EXP 0x2 0xa0
0x2e9: V240 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ea: V241 = AND 0xffffffffffffffffffffffffffffffffffffffff V235
0x2ee: JUMP 0xf4
---
Entry stack: [V13, 0xf4, V72, 0x5, V72]
Stack pops: 4
Stack additions: [S3, V241]
Exit stack: [V13, 0xf4, V241]

================================

Block 0x2ef
[0x2ef:0x2f7]
---
Predecessors: [0x11c]
Successors: [0x125]
---
0x2ef JUMPDEST
0x2f0 PUSH1 0x8
0x2f2 SLOAD
0x2f3 PUSH1 0xff
0x2f5 AND
0x2f6 DUP2
0x2f7 JUMP
---
0x2ef: JUMPDEST 
0x2f0: V242 = 0x8
0x2f2: V243 = S[0x8]
0x2f3: V244 = 0xff
0x2f5: V245 = AND 0xff V243
0x2f7: JUMP 0x125
---
Entry stack: [V13, 0x125]
Stack pops: 1
Stack additions: [S0, V245]
Exit stack: [V13, 0x125, V245]

================================

Block 0x2f8
[0x2f8:0x2fb]
---
Predecessors: [0x145]
Successors: [0x2fc]
---
0x2f8 JUMPDEST
0x2f9 PUSH1 0x0
0x2fb DUP1
---
0x2f8: JUMPDEST 
0x2f9: V246 = 0x0
---
Entry stack: [V13, 0x14e]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V13, 0x14e, 0x0, 0x0]

================================

Block 0x2fc
[0x2fc:0x309]
---
Predecessors: [0x2f8, 0x33f]
Successors: [0x30a, 0x347]
---
0x2fc JUMPDEST
0x2fd PUSH1 0x5
0x2ff SLOAD
0x300 PUSH1 0xff
0x302 DUP3
0x303 AND
0x304 LT
0x305 ISZERO
0x306 PUSH2 0x347
0x309 JUMPI
---
0x2fc: JUMPDEST 
0x2fd: V247 = 0x5
0x2ff: V248 = S[0x5]
0x300: V249 = 0xff
0x303: V250 = AND S0 0xff
0x304: V251 = LT V250 V248
0x305: V252 = ISZERO V251
0x306: V253 = 0x347
0x309: JUMPI 0x347 V252
---
Entry stack: [V13, 0x14e, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x14e, S1, S0]

================================

Block 0x30a
[0x30a:0x31b]
---
Predecessors: [0x2fc]
Successors: [0x31c, 0x31d]
---
0x30a PUSH1 0x5
0x30c DUP1
0x30d SLOAD
0x30e CALLER
0x30f SWAP2
0x310 SWAP1
0x311 PUSH1 0xff
0x313 DUP5
0x314 AND
0x315 SWAP1
0x316 DUP2
0x317 LT
0x318 PUSH2 0x31d
0x31b JUMPI
---
0x30a: V254 = 0x5
0x30d: V255 = S[0x5]
0x30e: V256 = CALLER
0x311: V257 = 0xff
0x314: V258 = AND S0 0xff
0x317: V259 = LT V258 V255
0x318: V260 = 0x31d
0x31b: JUMPI 0x31d V259
---
Entry stack: [V13, 0x14e, S1, S0]
Stack pops: 1
Stack additions: [S0, V256, 0x5, V258]
Exit stack: [V13, 0x14e, S1, S0, V256, 0x5, V258]

================================

Block 0x31c
[0x31c:0x31c]
---
Predecessors: [0x30a]
Successors: []
---
0x31c INVALID
---
0x31c: INVALID 
---
Entry stack: [V13, 0x14e, S4, S3, V256, 0x5, V258]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x14e, S4, S3, V256, 0x5, V258]

================================

Block 0x31d
[0x31d:0x338]
---
Predecessors: [0x30a]
Successors: [0x339, 0x33f]
---
0x31d JUMPDEST
0x31e PUSH1 0x0
0x320 SWAP2
0x321 DUP3
0x322 MSTORE
0x323 PUSH1 0x20
0x325 SWAP1
0x326 SWAP2
0x327 SHA3
0x328 ADD
0x329 SLOAD
0x32a PUSH1 0x1
0x32c PUSH1 0xa0
0x32e PUSH1 0x2
0x330 EXP
0x331 SUB
0x332 AND
0x333 EQ
0x334 ISZERO
0x335 PUSH2 0x33f
0x338 JUMPI
---
0x31d: JUMPDEST 
0x31e: V261 = 0x0
0x322: M[0x0] = 0x5
0x323: V262 = 0x20
0x327: V263 = SHA3 0x0 0x20
0x328: V264 = ADD V263 V258
0x329: V265 = S[V264]
0x32a: V266 = 0x1
0x32c: V267 = 0xa0
0x32e: V268 = 0x2
0x330: V269 = EXP 0x2 0xa0
0x331: V270 = SUB 0x10000000000000000000000000000000000000000 0x1
0x332: V271 = AND 0xffffffffffffffffffffffffffffffffffffffff V265
0x333: V272 = EQ V271 V256
0x334: V273 = ISZERO V272
0x335: V274 = 0x33f
0x338: JUMPI 0x33f V273
---
Entry stack: [V13, 0x14e, S4, S3, V256, 0x5, V258]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0x14e, S4, S3]

================================

Block 0x339
[0x339:0x33e]
---
Predecessors: [0x31d]
Successors: [0x33f]
---
0x339 DUP2
0x33a PUSH1 0x1
0x33c OR
0x33d SWAP2
0x33e POP
---
0x33a: V275 = 0x1
0x33c: V276 = OR 0x1 S1
---
Entry stack: [V13, 0x14e, S1, S0]
Stack pops: 2
Stack additions: [V276, S0]
Exit stack: [V13, 0x14e, V276, S0]

================================

Block 0x33f
[0x33f:0x346]
---
Predecessors: [0x31d, 0x339]
Successors: [0x2fc]
---
0x33f JUMPDEST
0x340 PUSH1 0x1
0x342 ADD
0x343 PUSH2 0x2fc
0x346 JUMP
---
0x33f: JUMPDEST 
0x340: V277 = 0x1
0x342: V278 = ADD 0x1 S0
0x343: V279 = 0x2fc
0x346: JUMP 0x2fc
---
Entry stack: [V13, 0x14e, S1, S0]
Stack pops: 1
Stack additions: [V278]
Exit stack: [V13, 0x14e, S1, V278]

================================

Block 0x347
[0x347:0x352]
---
Predecessors: [0x2fc]
Successors: [0x353, 0x357]
---
0x347 JUMPDEST
0x348 PUSH1 0x1
0x34a PUSH1 0xff
0x34c DUP4
0x34d AND
0x34e EQ
0x34f PUSH2 0x357
0x352 JUMPI
---
0x347: JUMPDEST 
0x348: V280 = 0x1
0x34a: V281 = 0xff
0x34d: V282 = AND S1 0xff
0x34e: V283 = EQ V282 0x1
0x34f: V284 = 0x357
0x352: JUMPI 0x357 V283
---
Entry stack: [V13, 0x14e, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x14e, S1, S0]

================================

Block 0x353
[0x353:0x356]
---
Predecessors: [0x347]
Successors: []
---
0x353 PUSH1 0x0
0x355 DUP1
0x356 REVERT
---
0x353: V285 = 0x0
0x356: REVERT 0x0 0x0
---
Entry stack: [V13, 0x14e, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x14e, S1, S0]

================================

Block 0x357
[0x357:0x35e]
---
Predecessors: [0x347]
Successors: [0x979]
---
0x357 JUMPDEST
0x358 PUSH2 0x35f
0x35b PUSH2 0x979
0x35e JUMP
---
0x357: JUMPDEST 
0x358: V286 = 0x35f
0x35b: V287 = 0x979
0x35e: JUMP 0x979
---
Entry stack: [V13, 0x14e, S1, S0]
Stack pops: 0
Stack additions: [0x35f]
Exit stack: [V13, 0x14e, S1, S0, 0x35f]

================================

Block 0x35f
[0x35f:0x365]
---
Predecessors: [0xb32]
Successors: [0x366, 0x36a]
---
0x35f JUMPDEST
0x360 ISZERO
0x361 ISZERO
0x362 PUSH2 0x36a
0x365 JUMPI
---
0x35f: JUMPDEST 
0x360: V288 = ISZERO 0x1
0x361: V289 = ISZERO 0x0
0x362: V290 = 0x36a
0x365: JUMPI 0x36a 0x1
---
Entry stack: [V13, 0x14e, {0x0, 0x1}, S1, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x14e, {0x0, 0x1}, S1]

================================

Block 0x366
[0x366:0x369]
---
Predecessors: [0x35f]
Successors: []
---
0x366 PUSH1 0x0
0x368 DUP1
0x369 REVERT
---
0x366: V291 = 0x0
0x369: REVERT 0x0 0x0
---
Entry stack: [V13, 0x14e, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x14e, {0x0, 0x1}, S0]

================================

Block 0x36a
[0x36a:0x377]
---
Predecessors: [0x35f]
Successors: []
---
0x36a JUMPDEST
0x36b PUSH1 0x2
0x36d SLOAD
0x36e PUSH1 0x1
0x370 PUSH1 0xa0
0x372 PUSH1 0x2
0x374 EXP
0x375 SUB
0x376 AND
0x377 SELFDESTRUCT
---
0x36a: JUMPDEST 
0x36b: V292 = 0x2
0x36d: V293 = S[0x2]
0x36e: V294 = 0x1
0x370: V295 = 0xa0
0x372: V296 = 0x2
0x374: V297 = EXP 0x2 0xa0
0x375: V298 = SUB 0x10000000000000000000000000000000000000000 0x1
0x376: V299 = AND 0xffffffffffffffffffffffffffffffffffffffff V293
0x377: SELFDESTRUCT V299
---
Entry stack: [V13, 0x14e, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x14e, {0x0, 0x1}, S0]

================================

Block 0x378
[0x378:0x386]
---
Predecessors: [0x15c]
Successors: [0xf4]
---
0x378 JUMPDEST
0x379 PUSH1 0x2
0x37b SLOAD
0x37c PUSH1 0x1
0x37e PUSH1 0xa0
0x380 PUSH1 0x2
0x382 EXP
0x383 SUB
0x384 AND
0x385 DUP2
0x386 JUMP
---
0x378: JUMPDEST 
0x379: V300 = 0x2
0x37b: V301 = S[0x2]
0x37c: V302 = 0x1
0x37e: V303 = 0xa0
0x380: V304 = 0x2
0x382: V305 = EXP 0x2 0xa0
0x383: V306 = SUB 0x10000000000000000000000000000000000000000 0x1
0x384: V307 = AND 0xffffffffffffffffffffffffffffffffffffffff V301
0x386: JUMP 0xf4
---
Entry stack: [V13, 0xf4]
Stack pops: 1
Stack additions: [S0, V307]
Exit stack: [V13, 0xf4, V307]

================================

Block 0x387
[0x387:0x398]
---
Predecessors: [0x171, 0x4be]
Successors: [0x399, 0x39a]
---
0x387 JUMPDEST
0x388 PUSH1 0x0
0x38a PUSH1 0x7
0x38c SLOAD
0x38d PUSH1 0x1
0x38f SLOAD
0x390 DUP4
0x391 MUL
0x392 DUP2
0x393 ISZERO
0x394 ISZERO
0x395 PUSH2 0x39a
0x398 JUMPI
---
0x387: JUMPDEST 
0x388: V308 = 0x0
0x38a: V309 = 0x7
0x38c: V310 = S[0x7]
0x38d: V311 = 0x1
0x38f: V312 = S[0x1]
0x391: V313 = MUL S0 V312
0x393: V314 = ISZERO V310
0x394: V315 = ISZERO V314
0x395: V316 = 0x39a
0x398: JUMPI 0x39a V315
---
Entry stack: [V13, 0x14e, 0x0, 0x0, S8, S7, S6, S5, S4, S3, S2, {0x17d, 0x4d5, 0x716, 0x733, 0x899}, S0]
Stack pops: 1
Stack additions: [S0, 0x0, V310, V313]
Exit stack: [V13, 0x14e, 0x0, 0x0, S8, S7, S6, S5, S4, S3, S2, {0x17d, 0x4d5, 0x716, 0x733, 0x899}, S0, 0x0, V310, V313]

================================

Block 0x399
[0x399:0x399]
---
Predecessors: [0x387]
Successors: []
---
0x399 INVALID
---
0x399: INVALID 
---
Entry stack: [V13, 0x14e, 0x0, 0x0, S11, S10, S9, S8, S7, S6, S5, {0x17d, 0x4d5, 0x716, 0x733, 0x899}, S3, 0x0, V310, V313]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x14e, 0x0, 0x0, S11, S10, S9, S8, S7, S6, S5, {0x17d, 0x4d5, 0x716, 0x733, 0x899}, S3, 0x0, V310, V313]

================================

Block 0x39a
[0x39a:0x3a0]
---
Predecessors: [0x387]
Successors: [0x17d, 0x4d5, 0x716, 0x733, 0x899]
---
0x39a JUMPDEST
0x39b DIV
0x39c SWAP3
0x39d SWAP2
0x39e POP
0x39f POP
0x3a0 JUMP
---
0x39a: JUMPDEST 
0x39b: V317 = DIV V313 V310
0x3a0: JUMP {0x17d, 0x4d5, 0x716, 0x733, 0x899}
---
Entry stack: [V13, 0x14e, 0x0, 0x0, S11, S10, S9, S8, S7, S6, S5, {0x17d, 0x4d5, 0x716, 0x733, 0x899}, S3, 0x0, V310, V313]
Stack pops: 5
Stack additions: [V317]
Exit stack: [V13, 0x14e, 0x0, 0x0, S11, S10, S9, S8, S7, S6, S5, V317]

================================

Block 0x3a1
[0x3a1:0x3ad]
---
Predecessors: [0x19b]
Successors: [0x3ae, 0x3af]
---
0x3a1 JUMPDEST
0x3a2 PUSH1 0x4
0x3a4 DUP1
0x3a5 SLOAD
0x3a6 DUP3
0x3a7 SWAP1
0x3a8 DUP2
0x3a9 LT
0x3aa PUSH2 0x3af
0x3ad JUMPI
---
0x3a1: JUMPDEST 
0x3a2: V318 = 0x4
0x3a5: V319 = S[0x4]
0x3a9: V320 = LT V132 V319
0x3aa: V321 = 0x3af
0x3ad: JUMPI 0x3af V320
---
Entry stack: [V13, 0x1a7, V132]
Stack pops: 1
Stack additions: [S0, 0x4, S0]
Exit stack: [V13, 0x1a7, V132, 0x4, V132]

================================

Block 0x3ae
[0x3ae:0x3ae]
---
Predecessors: [0x3a1]
Successors: []
---
0x3ae INVALID
---
0x3ae: INVALID 
---
Entry stack: [V13, 0x1a7, V132, 0x4, V132]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a7, V132, 0x4, V132]

================================

Block 0x3af
[0x3af:0x3de]
---
Predecessors: [0x3a1]
Successors: [0x1a7]
---
0x3af JUMPDEST
0x3b0 PUSH1 0x0
0x3b2 SWAP2
0x3b3 DUP3
0x3b4 MSTORE
0x3b5 PUSH1 0x20
0x3b7 SWAP1
0x3b8 SWAP2
0x3b9 SHA3
0x3ba PUSH1 0x3
0x3bc SWAP1
0x3bd SWAP2
0x3be MUL
0x3bf ADD
0x3c0 DUP1
0x3c1 SLOAD
0x3c2 PUSH1 0x1
0x3c4 DUP3
0x3c5 ADD
0x3c6 SLOAD
0x3c7 PUSH1 0x2
0x3c9 SWAP1
0x3ca SWAP3
0x3cb ADD
0x3cc SLOAD
0x3cd PUSH1 0x1
0x3cf PUSH1 0xa0
0x3d1 PUSH1 0x2
0x3d3 EXP
0x3d4 SUB
0x3d5 SWAP1
0x3d6 SWAP2
0x3d7 AND
0x3d8 SWAP3
0x3d9 POP
0x3da PUSH1 0xff
0x3dc AND
0x3dd DUP4
0x3de JUMP
---
0x3af: JUMPDEST 
0x3b0: V322 = 0x0
0x3b4: M[0x0] = 0x4
0x3b5: V323 = 0x20
0x3b9: V324 = SHA3 0x0 0x20
0x3ba: V325 = 0x3
0x3be: V326 = MUL V132 0x3
0x3bf: V327 = ADD V326 V324
0x3c1: V328 = S[V327]
0x3c2: V329 = 0x1
0x3c5: V330 = ADD V327 0x1
0x3c6: V331 = S[V330]
0x3c7: V332 = 0x2
0x3cb: V333 = ADD V327 0x2
0x3cc: V334 = S[V333]
0x3cd: V335 = 0x1
0x3cf: V336 = 0xa0
0x3d1: V337 = 0x2
0x3d3: V338 = EXP 0x2 0xa0
0x3d4: V339 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d7: V340 = AND V328 0xffffffffffffffffffffffffffffffffffffffff
0x3da: V341 = 0xff
0x3dc: V342 = AND 0xff V334
0x3de: JUMP 0x1a7
---
Entry stack: [V13, 0x1a7, V132, 0x4, V132]
Stack pops: 4
Stack additions: [S3, V340, V331, V342]
Exit stack: [V13, 0x1a7, V340, V331, V342]

================================

Block 0x3df
[0x3df:0x3e2]
---
Predecessors: [0x1dd]
Successors: [0x3e3]
---
0x3df JUMPDEST
0x3e0 PUSH1 0x0
0x3e2 DUP1
---
0x3df: JUMPDEST 
0x3e0: V343 = 0x0
---
Entry stack: [V13, 0x14e, V163]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V13, 0x14e, V163, 0x0, 0x0]

================================

Block 0x3e3
[0x3e3:0x3f0]
---
Predecessors: [0x3df, 0x426]
Successors: [0x3f1, 0x42e]
---
0x3e3 JUMPDEST
0x3e4 PUSH1 0x5
0x3e6 SLOAD
0x3e7 PUSH1 0xff
0x3e9 DUP3
0x3ea AND
0x3eb LT
0x3ec ISZERO
0x3ed PUSH2 0x42e
0x3f0 JUMPI
---
0x3e3: JUMPDEST 
0x3e4: V344 = 0x5
0x3e6: V345 = S[0x5]
0x3e7: V346 = 0xff
0x3ea: V347 = AND S0 0xff
0x3eb: V348 = LT V347 V345
0x3ec: V349 = ISZERO V348
0x3ed: V350 = 0x42e
0x3f0: JUMPI 0x42e V349
---
Entry stack: [V13, 0x14e, V163, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x14e, V163, S1, S0]

================================

Block 0x3f1
[0x3f1:0x402]
---
Predecessors: [0x3e3]
Successors: [0x403, 0x404]
---
0x3f1 PUSH1 0x5
0x3f3 DUP1
0x3f4 SLOAD
0x3f5 CALLER
0x3f6 SWAP2
0x3f7 SWAP1
0x3f8 PUSH1 0xff
0x3fa DUP5
0x3fb AND
0x3fc SWAP1
0x3fd DUP2
0x3fe LT
0x3ff PUSH2 0x404
0x402 JUMPI
---
0x3f1: V351 = 0x5
0x3f4: V352 = S[0x5]
0x3f5: V353 = CALLER
0x3f8: V354 = 0xff
0x3fb: V355 = AND S0 0xff
0x3fe: V356 = LT V355 V352
0x3ff: V357 = 0x404
0x402: JUMPI 0x404 V356
---
Entry stack: [V13, 0x14e, V163, S1, S0]
Stack pops: 1
Stack additions: [S0, V353, 0x5, V355]
Exit stack: [V13, 0x14e, V163, S1, S0, V353, 0x5, V355]

================================

Block 0x403
[0x403:0x403]
---
Predecessors: [0x3f1]
Successors: []
---
0x403 INVALID
---
0x403: INVALID 
---
Entry stack: [V13, 0x14e, V163, S4, S3, V353, 0x5, V355]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x14e, V163, S4, S3, V353, 0x5, V355]

================================

Block 0x404
[0x404:0x41f]
---
Predecessors: [0x3f1]
Successors: [0x420, 0x426]
---
0x404 JUMPDEST
0x405 PUSH1 0x0
0x407 SWAP2
0x408 DUP3
0x409 MSTORE
0x40a PUSH1 0x20
0x40c SWAP1
0x40d SWAP2
0x40e SHA3
0x40f ADD
0x410 SLOAD
0x411 PUSH1 0x1
0x413 PUSH1 0xa0
0x415 PUSH1 0x2
0x417 EXP
0x418 SUB
0x419 AND
0x41a EQ
0x41b ISZERO
0x41c PUSH2 0x426
0x41f JUMPI
---
0x404: JUMPDEST 
0x405: V358 = 0x0
0x409: M[0x0] = 0x5
0x40a: V359 = 0x20
0x40e: V360 = SHA3 0x0 0x20
0x40f: V361 = ADD V360 V355
0x410: V362 = S[V361]
0x411: V363 = 0x1
0x413: V364 = 0xa0
0x415: V365 = 0x2
0x417: V366 = EXP 0x2 0xa0
0x418: V367 = SUB 0x10000000000000000000000000000000000000000 0x1
0x419: V368 = AND 0xffffffffffffffffffffffffffffffffffffffff V362
0x41a: V369 = EQ V368 V353
0x41b: V370 = ISZERO V369
0x41c: V371 = 0x426
0x41f: JUMPI 0x426 V370
---
Entry stack: [V13, 0x14e, V163, S4, S3, V353, 0x5, V355]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0x14e, V163, S4, S3]

================================

Block 0x420
[0x420:0x425]
---
Predecessors: [0x404]
Successors: [0x426]
---
0x420 DUP2
0x421 PUSH1 0x1
0x423 OR
0x424 SWAP2
0x425 POP
---
0x421: V372 = 0x1
0x423: V373 = OR 0x1 S1
---
Entry stack: [V13, 0x14e, V163, S1, S0]
Stack pops: 2
Stack additions: [V373, S0]
Exit stack: [V13, 0x14e, V163, V373, S0]

================================

Block 0x426
[0x426:0x42d]
---
Predecessors: [0x404, 0x420]
Successors: [0x3e3]
---
0x426 JUMPDEST
0x427 PUSH1 0x1
0x429 ADD
0x42a PUSH2 0x3e3
0x42d JUMP
---
0x426: JUMPDEST 
0x427: V374 = 0x1
0x429: V375 = ADD 0x1 S0
0x42a: V376 = 0x3e3
0x42d: JUMP 0x3e3
---
Entry stack: [V13, 0x14e, V163, S1, S0]
Stack pops: 1
Stack additions: [V375]
Exit stack: [V13, 0x14e, V163, S1, V375]

================================

Block 0x42e
[0x42e:0x439]
---
Predecessors: [0x3e3]
Successors: [0x43a, 0x43e]
---
0x42e JUMPDEST
0x42f PUSH1 0x1
0x431 PUSH1 0xff
0x433 DUP4
0x434 AND
0x435 EQ
0x436 PUSH2 0x43e
0x439 JUMPI
---
0x42e: JUMPDEST 
0x42f: V377 = 0x1
0x431: V378 = 0xff
0x434: V379 = AND S1 0xff
0x435: V380 = EQ V379 0x1
0x436: V381 = 0x43e
0x439: JUMPI 0x43e V380
---
Entry stack: [V13, 0x14e, V163, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x14e, V163, S1, S0]

================================

Block 0x43a
[0x43a:0x43d]
---
Predecessors: [0x42e]
Successors: []
---
0x43a PUSH1 0x0
0x43c DUP1
0x43d REVERT
---
0x43a: V382 = 0x0
0x43d: REVERT 0x0 0x0
---
Entry stack: [V13, 0x14e, V163, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x14e, V163, S1, S0]

================================

Block 0x43e
[0x43e:0x46e]
---
Predecessors: [0x42e]
Successors: [0x14e]
---
0x43e JUMPDEST
0x43f POP
0x440 POP
0x441 PUSH1 0x0
0x443 DUP1
0x444 SLOAD
0x445 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x45a NOT
0x45b AND
0x45c PUSH1 0x1
0x45e PUSH1 0xa0
0x460 PUSH1 0x2
0x462 EXP
0x463 SUB
0x464 SWAP3
0x465 SWAP1
0x466 SWAP3
0x467 AND
0x468 SWAP2
0x469 SWAP1
0x46a SWAP2
0x46b OR
0x46c SWAP1
0x46d SSTORE
0x46e JUMP
---
0x43e: JUMPDEST 
0x441: V383 = 0x0
0x444: V384 = S[0x0]
0x445: V385 = 0xffffffffffffffffffffffffffffffffffffffff
0x45a: V386 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x45b: V387 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V384
0x45c: V388 = 0x1
0x45e: V389 = 0xa0
0x460: V390 = 0x2
0x462: V391 = EXP 0x2 0xa0
0x463: V392 = SUB 0x10000000000000000000000000000000000000000 0x1
0x467: V393 = AND 0xffffffffffffffffffffffffffffffffffffffff V163
0x46b: V394 = OR V393 V387
0x46d: S[0x0] = V394
0x46e: JUMP 0x14e
---
Entry stack: [V13, 0x14e, V163, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V13]

================================

Block 0x46f
[0x46f:0x473]
---
Predecessors: [0x1fe, 0x6a5]
Successors: [0x474]
---
0x46f JUMPDEST
0x470 PUSH1 0x0
0x472 DUP1
0x473 DUP1
---
0x46f: JUMPDEST 
0x470: V395 = 0x0
---
Entry stack: [V13, 0x14e, 0x0, 0x0, S2, S1, {0x125, 0x6ad}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V13, 0x14e, 0x0, 0x0, S2, S1, {0x125, 0x6ad}, 0x0, 0x0, 0x0]

================================

Block 0x474
[0x474:0x47e]
---
Predecessors: [0x46f, 0x4db]
Successors: [0x47f, 0x4e3]
---
0x474 JUMPDEST
0x475 PUSH1 0x4
0x477 SLOAD
0x478 DUP2
0x479 LT
0x47a ISZERO
0x47b PUSH2 0x4e3
0x47e JUMPI
---
0x474: JUMPDEST 
0x475: V396 = 0x4
0x477: V397 = S[0x4]
0x479: V398 = LT S0 V397
0x47a: V399 = ISZERO V398
0x47b: V400 = 0x4e3
0x47e: JUMPI 0x4e3 V399
---
Entry stack: [V13, 0x14e, 0x0, 0x0, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x14e, 0x0, 0x0, S5, S4, S3, S2, S1, S0]

================================

Block 0x47f
[0x47f:0x48a]
---
Predecessors: [0x474]
Successors: [0x48b, 0x48c]
---
0x47f PUSH1 0x4
0x481 DUP1
0x482 SLOAD
0x483 DUP3
0x484 SWAP1
0x485 DUP2
0x486 LT
0x487 PUSH2 0x48c
0x48a JUMPI
---
0x47f: V401 = 0x4
0x482: V402 = S[0x4]
0x486: V403 = LT S0 V402
0x487: V404 = 0x48c
0x48a: JUMPI 0x48c V403
---
Entry stack: [V13, 0x14e, 0x0, 0x0, {0x0, 0x1}, S4, {0x125, 0x6ad}, 0x0, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x4, S0]
Exit stack: [V13, 0x14e, 0x0, 0x0, {0x0, 0x1}, S4, {0x125, 0x6ad}, 0x0, S1, S0, 0x4, S0]

================================

Block 0x48b
[0x48b:0x48b]
---
Predecessors: [0x47f]
Successors: []
---
0x48b INVALID
---
0x48b: INVALID 
---
Entry stack: [V13, 0x14e, 0x0, 0x0, {0x0, 0x1}, S6, {0x125, 0x6ad}, 0x0, S3, S2, 0x4, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x14e, 0x0, 0x0, {0x0, 0x1}, S6, {0x125, 0x6ad}, 0x0, S3, S2, 0x4, S0]

================================

Block 0x48c
[0x48c:0x4a9]
---
Predecessors: [0x47f]
Successors: [0x4aa, 0x4db]
---
0x48c JUMPDEST
0x48d PUSH1 0x0
0x48f SWAP2
0x490 DUP3
0x491 MSTORE
0x492 PUSH1 0x20
0x494 SWAP1
0x495 SWAP2
0x496 SHA3
0x497 PUSH1 0x2
0x499 PUSH1 0x3
0x49b SWAP1
0x49c SWAP3
0x49d MUL
0x49e ADD
0x49f ADD
0x4a0 SLOAD
0x4a1 PUSH1 0xff
0x4a3 AND
0x4a4 ISZERO
0x4a5 ISZERO
0x4a6 PUSH2 0x4db
0x4a9 JUMPI
---
0x48c: JUMPDEST 
0x48d: V405 = 0x0
0x491: M[0x0] = 0x4
0x492: V406 = 0x20
0x496: V407 = SHA3 0x0 0x20
0x497: V408 = 0x2
0x499: V409 = 0x3
0x49d: V410 = MUL S0 0x3
0x49e: V411 = ADD V410 V407
0x49f: V412 = ADD V411 0x2
0x4a0: V413 = S[V412]
0x4a1: V414 = 0xff
0x4a3: V415 = AND 0xff V413
0x4a4: V416 = ISZERO V415
0x4a5: V417 = ISZERO V416
0x4a6: V418 = 0x4db
0x4a9: JUMPI 0x4db V417
---
Entry stack: [V13, 0x14e, 0x0, 0x0, {0x0, 0x1}, S6, {0x125, 0x6ad}, 0x0, S3, S2, 0x4, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0x14e, 0x0, 0x0, {0x0, 0x1}, S6, {0x125, 0x6ad}, 0x0, S3, S2]

================================

Block 0x4aa
[0x4aa:0x4bc]
---
Predecessors: [0x48c]
Successors: [0x4bd, 0x4be]
---
0x4aa PUSH1 0x6
0x4ac SLOAD
0x4ad PUSH2 0x4d5
0x4b0 PUSH1 0x4
0x4b2 DUP4
0x4b3 DUP2
0x4b4 SLOAD
0x4b5 DUP2
0x4b6 LT
0x4b7 ISZERO
0x4b8 ISZERO
0x4b9 PUSH2 0x4be
0x4bc JUMPI
---
0x4aa: V419 = 0x6
0x4ac: V420 = S[0x6]
0x4ad: V421 = 0x4d5
0x4b0: V422 = 0x4
0x4b4: V423 = S[0x4]
0x4b6: V424 = LT S0 V423
0x4b7: V425 = ISZERO V424
0x4b8: V426 = ISZERO V425
0x4b9: V427 = 0x4be
0x4bc: JUMPI 0x4be V426
---
Entry stack: [V13, 0x14e, 0x0, 0x0, {0x0, 0x1}, S4, {0x125, 0x6ad}, 0x0, S1, S0]
Stack pops: 1
Stack additions: [S0, V420, 0x4d5, 0x4, S0]
Exit stack: [V13, 0x14e, 0x0, 0x0, {0x0, 0x1}, S4, {0x125, 0x6ad}, 0x0, S1, S0, V420, 0x4d5, 0x4, S0]

================================

Block 0x4bd
[0x4bd:0x4bd]
---
Predecessors: [0x4aa]
Successors: []
---
0x4bd INVALID
---
0x4bd: INVALID 
---
Entry stack: [V13, 0x14e, 0x0, 0x0, {0x0, 0x1}, S8, {0x125, 0x6ad}, 0x0, S5, S4, V420, 0x4d5, 0x4, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x14e, 0x0, 0x0, {0x0, 0x1}, S8, {0x125, 0x6ad}, 0x0, S5, S4, V420, 0x4d5, 0x4, S0]

================================

Block 0x4be
[0x4be:0x4d4]
---
Predecessors: [0x4aa, 0x701, 0x71f, 0x885]
Successors: [0x387]
---
0x4be JUMPDEST
0x4bf SWAP1
0x4c0 PUSH1 0x0
0x4c2 MSTORE
0x4c3 PUSH1 0x20
0x4c5 PUSH1 0x0
0x4c7 SHA3
0x4c8 SWAP1
0x4c9 PUSH1 0x3
0x4cb MUL
0x4cc ADD
0x4cd PUSH1 0x1
0x4cf ADD
0x4d0 SLOAD
0x4d1 PUSH2 0x387
0x4d4 JUMP
---
0x4be: JUMPDEST 
0x4c0: V428 = 0x0
0x4c2: M[0x0] = 0x4
0x4c3: V429 = 0x20
0x4c5: V430 = 0x0
0x4c7: V431 = SHA3 0x0 0x20
0x4c9: V432 = 0x3
0x4cb: V433 = MUL 0x3 S0
0x4cc: V434 = ADD V433 V431
0x4cd: V435 = 0x1
0x4cf: V436 = ADD 0x1 V434
0x4d0: V437 = S[V436]
0x4d1: V438 = 0x387
0x4d4: JUMP 0x387
---
Entry stack: [V13, 0x14e, 0x0, 0x0, S9, S8, S7, S6, S5, S4, S3, {0x4d5, 0x716, 0x733, 0x899}, 0x4, S0]
Stack pops: 2
Stack additions: [V437]
Exit stack: [V13, 0x14e, 0x0, 0x0, S9, S8, S7, S6, S5, S4, S3, {0x4d5, 0x716, 0x733, 0x899}, V437]

================================

Block 0x4d5
[0x4d5:0x4da]
---
Predecessors: [0x39a]
Successors: [0x4db]
---
0x4d5 JUMPDEST
0x4d6 MUL
0x4d7 DUP3
0x4d8 ADD
0x4d9 SWAP2
0x4da POP
---
0x4d5: JUMPDEST 
0x4d6: V439 = MUL V317 S1
0x4d8: V440 = ADD S3 V439
---
Entry stack: [V13, 0x14e, 0x0, 0x0, S7, S6, S5, S4, S3, S2, S1, V317]
Stack pops: 4
Stack additions: [V440, S2]
Exit stack: [V13, 0x14e, 0x0, 0x0, S7, S6, S5, S4, V440, S2]

================================

Block 0x4db
[0x4db:0x4e2]
---
Predecessors: [0x48c, 0x4d5]
Successors: [0x474]
---
0x4db JUMPDEST
0x4dc PUSH1 0x1
0x4de ADD
0x4df PUSH2 0x474
0x4e2 JUMP
---
0x4db: JUMPDEST 
0x4dc: V441 = 0x1
0x4de: V442 = ADD 0x1 S0
0x4df: V443 = 0x474
0x4e2: JUMP 0x474
---
Entry stack: [V13, 0x14e, 0x0, 0x0, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V442]
Exit stack: [V13, 0x14e, 0x0, 0x0, S5, S4, S3, S2, S1, V442]

================================

Block 0x4e3
[0x4e3:0x54e]
---
Predecessors: [0x474]
Successors: [0x54f, 0x553]
---
0x4e3 JUMPDEST
0x4e4 PUSH1 0x0
0x4e6 DUP1
0x4e7 SLOAD
0x4e8 PUSH1 0x2
0x4ea SLOAD
0x4eb PUSH1 0x40
0x4ed DUP1
0x4ee MLOAD
0x4ef PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x510 DUP2
0x511 MSTORE
0x512 PUSH1 0x1
0x514 PUSH1 0xa0
0x516 PUSH1 0x2
0x518 EXP
0x519 SUB
0x51a SWAP3
0x51b DUP4
0x51c AND
0x51d PUSH1 0x4
0x51f DUP3
0x520 ADD
0x521 MSTORE
0x522 SWAP1
0x523 MLOAD
0x524 DUP7
0x525 SWAP5
0x526 SWAP3
0x527 SWAP1
0x528 SWAP4
0x529 AND
0x52a SWAP3
0x52b PUSH4 0x70a08231
0x530 SWAP3
0x531 PUSH1 0x24
0x533 DUP1
0x534 DUP5
0x535 ADD
0x536 SWAP4
0x537 PUSH1 0x20
0x539 SWAP4
0x53a SWAP3
0x53b SWAP1
0x53c DUP4
0x53d SWAP1
0x53e SUB
0x53f SWAP1
0x540 SWAP2
0x541 ADD
0x542 SWAP1
0x543 DUP3
0x544 SWAP1
0x545 DUP8
0x546 DUP1
0x547 EXTCODESIZE
0x548 ISZERO
0x549 DUP1
0x54a ISZERO
0x54b PUSH2 0x553
0x54e JUMPI
---
0x4e3: JUMPDEST 
0x4e4: V444 = 0x0
0x4e7: V445 = S[0x0]
0x4e8: V446 = 0x2
0x4ea: V447 = S[0x2]
0x4eb: V448 = 0x40
0x4ee: V449 = M[0x40]
0x4ef: V450 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x511: M[V449] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x512: V451 = 0x1
0x514: V452 = 0xa0
0x516: V453 = 0x2
0x518: V454 = EXP 0x2 0xa0
0x519: V455 = SUB 0x10000000000000000000000000000000000000000 0x1
0x51c: V456 = AND 0xffffffffffffffffffffffffffffffffffffffff V447
0x51d: V457 = 0x4
0x520: V458 = ADD V449 0x4
0x521: M[V458] = V456
0x523: V459 = M[0x40]
0x529: V460 = AND V445 0xffffffffffffffffffffffffffffffffffffffff
0x52b: V461 = 0x70a08231
0x531: V462 = 0x24
0x535: V463 = ADD V449 0x24
0x537: V464 = 0x20
0x53e: V465 = SUB V449 V459
0x541: V466 = ADD 0x24 V465
0x547: V467 = EXTCODESIZE V460
0x548: V468 = ISZERO V467
0x54a: V469 = ISZERO V468
0x54b: V470 = 0x553
0x54e: JUMPI 0x553 V469
---
Entry stack: [V13, 0x14e, 0x0, 0x0, {0x0, 0x1}, S4, {0x125, 0x6ad}, 0x0, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, S1, V460, 0x70a08231, V463, 0x20, V459, V466, V459, 0x0, V460, V468]
Exit stack: [V13, 0x14e, 0x0, 0x0, {0x0, 0x1}, S4, {0x125, 0x6ad}, 0x0, S1, S0, S1, V460, 0x70a08231, V463, 0x20, V459, V466, V459, 0x0, V460, V468]

================================

Block 0x54f
[0x54f:0x552]
---
Predecessors: [0x4e3]
Successors: []
---
0x54f PUSH1 0x0
0x551 DUP1
0x552 REVERT
---
0x54f: V471 = 0x0
0x552: REVERT 0x0 0x0
---
Entry stack: [V13, 0x14e, 0x0, 0x0, {0x0, 0x1}, S15, {0x125, 0x6ad}, 0x0, S12, S11, S10, V460, 0x70a08231, V463, 0x20, V459, V466, V459, 0x0, V460, V468]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x14e, 0x0, 0x0, {0x0, 0x1}, S15, {0x125, 0x6ad}, 0x0, S12, S11, S10, V460, 0x70a08231, V463, 0x20, V459, V466, V459, 0x0, V460, V468]

================================

Block 0x553
[0x553:0x55d]
---
Predecessors: [0x4e3]
Successors: [0x55e, 0x567]
---
0x553 JUMPDEST
0x554 POP
0x555 GAS
0x556 CALL
0x557 ISZERO
0x558 DUP1
0x559 ISZERO
0x55a PUSH2 0x567
0x55d JUMPI
---
0x553: JUMPDEST 
0x555: V472 = GAS
0x556: V473 = CALL V472 V460 0x0 V459 V466 V459 0x20
0x557: V474 = ISZERO V473
0x559: V475 = ISZERO V474
0x55a: V476 = 0x567
0x55d: JUMPI 0x567 V475
---
Entry stack: [V13, 0x14e, 0x0, 0x0, {0x0, 0x1}, S15, {0x125, 0x6ad}, 0x0, S12, S11, S10, V460, 0x70a08231, V463, 0x20, V459, V466, V459, 0x0, V460, V468]
Stack pops: 7
Stack additions: [V474]
Exit stack: [V13, 0x14e, 0x0, 0x0, {0x0, 0x1}, S15, {0x125, 0x6ad}, 0x0, S12, S11, S10, V460, 0x70a08231, V463, V474]

================================

Block 0x55e
[0x55e:0x566]
---
Predecessors: [0x553]
Successors: []
---
0x55e RETURNDATASIZE
0x55f PUSH1 0x0
0x561 DUP1
0x562 RETURNDATACOPY
0x563 RETURNDATASIZE
0x564 PUSH1 0x0
0x566 REVERT
---
0x55e: V477 = RETURNDATASIZE
0x55f: V478 = 0x0
0x562: RETURNDATACOPY 0x0 0x0 V477
0x563: V479 = RETURNDATASIZE
0x564: V480 = 0x0
0x566: REVERT 0x0 V479
---
Entry stack: [V13, 0x14e, 0x0, 0x0, {0x0, 0x1}, S9, {0x125, 0x6ad}, 0x0, S6, S5, S4, S3, 0x70a08231, S1, V474]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x14e, 0x0, 0x0, {0x0, 0x1}, S9, {0x125, 0x6ad}, 0x0, S6, S5, S4, S3, 0x70a08231, S1, V474]

================================

Block 0x567
[0x567:0x578]
---
Predecessors: [0x553]
Successors: [0x579, 0x57d]
---
0x567 JUMPDEST
0x568 POP
0x569 POP
0x56a POP
0x56b POP
0x56c PUSH1 0x40
0x56e MLOAD
0x56f RETURNDATASIZE
0x570 PUSH1 0x20
0x572 DUP2
0x573 LT
0x574 ISZERO
0x575 PUSH2 0x57d
0x578 JUMPI
---
0x567: JUMPDEST 
0x56c: V481 = 0x40
0x56e: V482 = M[0x40]
0x56f: V483 = RETURNDATASIZE
0x570: V484 = 0x20
0x573: V485 = LT V483 0x20
0x574: V486 = ISZERO V485
0x575: V487 = 0x57d
0x578: JUMPI 0x57d V486
---
Entry stack: [V13, 0x14e, 0x0, 0x0, {0x0, 0x1}, S9, {0x125, 0x6ad}, 0x0, S6, S5, S4, S3, 0x70a08231, S1, V474]
Stack pops: 4
Stack additions: [V482, V483]
Exit stack: [V13, 0x14e, 0x0, 0x0, {0x0, 0x1}, S9, {0x125, 0x6ad}, 0x0, S6, S5, S4, V482, V483]

================================

Block 0x579
[0x579:0x57c]
---
Predecessors: [0x567]
Successors: []
---
0x579 PUSH1 0x0
0x57b DUP1
0x57c REVERT
---
0x579: V488 = 0x0
0x57c: REVERT 0x0 0x0
---
Entry stack: [V13, 0x14e, 0x0, 0x0, {0x0, 0x1}, S7, {0x125, 0x6ad}, 0x0, S4, S3, S2, V482, V483]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x14e, 0x0, 0x0, {0x0, 0x1}, S7, {0x125, 0x6ad}, 0x0, S4, S3, S2, V482, V483]

================================

Block 0x57d
[0x57d:0x587]
---
Predecessors: [0x567]
Successors: [0x588, 0x62d]
---
0x57d JUMPDEST
0x57e POP
0x57f MLOAD
0x580 LT
0x581 DUP1
0x582 ISZERO
0x583 SWAP1
0x584 PUSH2 0x62d
0x587 JUMPI
---
0x57d: JUMPDEST 
0x57f: V489 = M[V482]
0x580: V490 = LT V489 S2
0x582: V491 = ISZERO V490
0x584: V492 = 0x62d
0x587: JUMPI 0x62d V490
---
Entry stack: [V13, 0x14e, 0x0, 0x0, {0x0, 0x1}, S7, {0x125, 0x6ad}, 0x0, S4, S3, S2, V482, V483]
Stack pops: 3
Stack additions: [V491]
Exit stack: [V13, 0x14e, 0x0, 0x0, {0x0, 0x1}, S7, {0x125, 0x6ad}, 0x0, S4, S3, V491]

================================

Block 0x588
[0x588:0x5f9]
---
Predecessors: [0x57d]
Successors: [0x5fa, 0x5fe]
---
0x588 POP
0x589 PUSH1 0x0
0x58b DUP1
0x58c SLOAD
0x58d PUSH1 0x2
0x58f SLOAD
0x590 PUSH1 0x40
0x592 DUP1
0x593 MLOAD
0x594 PUSH32 0xdd62ed3e00000000000000000000000000000000000000000000000000000000
0x5b5 DUP2
0x5b6 MSTORE
0x5b7 PUSH1 0x1
0x5b9 PUSH1 0xa0
0x5bb PUSH1 0x2
0x5bd EXP
0x5be SUB
0x5bf SWAP3
0x5c0 DUP4
0x5c1 AND
0x5c2 PUSH1 0x4
0x5c4 DUP3
0x5c5 ADD
0x5c6 MSTORE
0x5c7 ADDRESS
0x5c8 PUSH1 0x24
0x5ca DUP3
0x5cb ADD
0x5cc MSTORE
0x5cd SWAP1
0x5ce MLOAD
0x5cf DUP7
0x5d0 SWAP5
0x5d1 SWAP3
0x5d2 SWAP1
0x5d3 SWAP4
0x5d4 AND
0x5d5 SWAP3
0x5d6 PUSH4 0xdd62ed3e
0x5db SWAP3
0x5dc PUSH1 0x44
0x5de DUP1
0x5df DUP5
0x5e0 ADD
0x5e1 SWAP4
0x5e2 PUSH1 0x20
0x5e4 SWAP4
0x5e5 SWAP3
0x5e6 SWAP1
0x5e7 DUP4
0x5e8 SWAP1
0x5e9 SUB
0x5ea SWAP1
0x5eb SWAP2
0x5ec ADD
0x5ed SWAP1
0x5ee DUP3
0x5ef SWAP1
0x5f0 DUP8
0x5f1 DUP1
0x5f2 EXTCODESIZE
0x5f3 ISZERO
0x5f4 DUP1
0x5f5 ISZERO
0x5f6 PUSH2 0x5fe
0x5f9 JUMPI
---
0x589: V493 = 0x0
0x58c: V494 = S[0x0]
0x58d: V495 = 0x2
0x58f: V496 = S[0x2]
0x590: V497 = 0x40
0x593: V498 = M[0x40]
0x594: V499 = 0xdd62ed3e00000000000000000000000000000000000000000000000000000000
0x5b6: M[V498] = 0xdd62ed3e00000000000000000000000000000000000000000000000000000000
0x5b7: V500 = 0x1
0x5b9: V501 = 0xa0
0x5bb: V502 = 0x2
0x5bd: V503 = EXP 0x2 0xa0
0x5be: V504 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5c1: V505 = AND 0xffffffffffffffffffffffffffffffffffffffff V496
0x5c2: V506 = 0x4
0x5c5: V507 = ADD V498 0x4
0x5c6: M[V507] = V505
0x5c7: V508 = ADDRESS
0x5c8: V509 = 0x24
0x5cb: V510 = ADD V498 0x24
0x5cc: M[V510] = V508
0x5ce: V511 = M[0x40]
0x5d4: V512 = AND V494 0xffffffffffffffffffffffffffffffffffffffff
0x5d6: V513 = 0xdd62ed3e
0x5dc: V514 = 0x44
0x5e0: V515 = ADD V498 0x44
0x5e2: V516 = 0x20
0x5e9: V517 = SUB V498 V511
0x5ec: V518 = ADD 0x44 V517
0x5f2: V519 = EXTCODESIZE V512
0x5f3: V520 = ISZERO V519
0x5f5: V521 = ISZERO V520
0x5f6: V522 = 0x5fe
0x5f9: JUMPI 0x5fe V521
---
Entry stack: [V13, 0x14e, 0x0, 0x0, {0x0, 0x1}, S5, {0x125, 0x6ad}, 0x0, S2, S1, V491]
Stack pops: 3
Stack additions: [S2, S1, S2, V512, 0xdd62ed3e, V515, 0x20, V511, V518, V511, 0x0, V512, V520]
Exit stack: [V13, 0x14e, 0x0, 0x0, {0x0, 0x1}, S5, {0x125, 0x6ad}, 0x0, S2, S1, S2, V512, 0xdd62ed3e, V515, 0x20, V511, V518, V511, 0x0, V512, V520]

================================

Block 0x5fa
[0x5fa:0x5fd]
---
Predecessors: [0x588]
Successors: []
---
0x5fa PUSH1 0x0
0x5fc DUP1
0x5fd REVERT
---
0x5fa: V523 = 0x0
0x5fd: REVERT 0x0 0x0
---
Entry stack: [V13, 0x14e, 0x0, 0x0, {0x0, 0x1}, S15, {0x125, 0x6ad}, 0x0, S12, S11, S10, V512, 0xdd62ed3e, V515, 0x20, V511, V518, V511, 0x0, V512, V520]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x14e, 0x0, 0x0, {0x0, 0x1}, S15, {0x125, 0x6ad}, 0x0, S12, S11, S10, V512, 0xdd62ed3e, V515, 0x20, V511, V518, V511, 0x0, V512, V520]

================================

Block 0x5fe
[0x5fe:0x608]
---
Predecessors: [0x588]
Successors: [0x609, 0x612]
---
0x5fe JUMPDEST
0x5ff POP
0x600 GAS
0x601 CALL
0x602 ISZERO
0x603 DUP1
0x604 ISZERO
0x605 PUSH2 0x612
0x608 JUMPI
---
0x5fe: JUMPDEST 
0x600: V524 = GAS
0x601: V525 = CALL V524 V512 0x0 V511 V518 V511 0x20
0x602: V526 = ISZERO V525
0x604: V527 = ISZERO V526
0x605: V528 = 0x612
0x608: JUMPI 0x612 V527
---
Entry stack: [V13, 0x14e, 0x0, 0x0, {0x0, 0x1}, S15, {0x125, 0x6ad}, 0x0, S12, S11, S10, V512, 0xdd62ed3e, V515, 0x20, V511, V518, V511, 0x0, V512, V520]
Stack pops: 7
Stack additions: [V526]
Exit stack: [V13, 0x14e, 0x0, 0x0, {0x0, 0x1}, S15, {0x125, 0x6ad}, 0x0, S12, S11, S10, V512, 0xdd62ed3e, V515, V526]

================================

Block 0x609
[0x609:0x611]
---
Predecessors: [0x5fe]
Successors: []
---
0x609 RETURNDATASIZE
0x60a PUSH1 0x0
0x60c DUP1
0x60d RETURNDATACOPY
0x60e RETURNDATASIZE
0x60f PUSH1 0x0
0x611 REVERT
---
0x609: V529 = RETURNDATASIZE
0x60a: V530 = 0x0
0x60d: RETURNDATACOPY 0x0 0x0 V529
0x60e: V531 = RETURNDATASIZE
0x60f: V532 = 0x0
0x611: REVERT 0x0 V531
---
Entry stack: [V13, 0x14e, 0x0, 0x0, {0x0, 0x1}, S9, {0x125, 0x6ad}, 0x0, S6, S5, S4, S3, 0xdd62ed3e, S1, V526]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x14e, 0x0, 0x0, {0x0, 0x1}, S9, {0x125, 0x6ad}, 0x0, S6, S5, S4, S3, 0xdd62ed3e, S1, V526]

================================

Block 0x612
[0x612:0x623]
---
Predecessors: [0x5fe]
Successors: [0x624, 0x628]
---
0x612 JUMPDEST
0x613 POP
0x614 POP
0x615 POP
0x616 POP
0x617 PUSH1 0x40
0x619 MLOAD
0x61a RETURNDATASIZE
0x61b PUSH1 0x20
0x61d DUP2
0x61e LT
0x61f ISZERO
0x620 PUSH2 0x628
0x623 JUMPI
---
0x612: JUMPDEST 
0x617: V533 = 0x40
0x619: V534 = M[0x40]
0x61a: V535 = RETURNDATASIZE
0x61b: V536 = 0x20
0x61e: V537 = LT V535 0x20
0x61f: V538 = ISZERO V537
0x620: V539 = 0x628
0x623: JUMPI 0x628 V538
---
Entry stack: [V13, 0x14e, 0x0, 0x0, {0x0, 0x1}, S9, {0x125, 0x6ad}, 0x0, S6, S5, S4, S3, 0xdd62ed3e, S1, V526]
Stack pops: 4
Stack additions: [V534, V535]
Exit stack: [V13, 0x14e, 0x0, 0x0, {0x0, 0x1}, S9, {0x125, 0x6ad}, 0x0, S6, S5, S4, V534, V535]

================================

Block 0x624
[0x624:0x627]
---
Predecessors: [0x612]
Successors: []
---
0x624 PUSH1 0x0
0x626 DUP1
0x627 REVERT
---
0x624: V540 = 0x0
0x627: REVERT 0x0 0x0
---
Entry stack: [V13, 0x14e, 0x0, 0x0, {0x0, 0x1}, S7, {0x125, 0x6ad}, 0x0, S4, S3, S2, V534, V535]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x14e, 0x0, 0x0, {0x0, 0x1}, S7, {0x125, 0x6ad}, 0x0, S4, S3, S2, V534, V535]

================================

Block 0x628
[0x628:0x62c]
---
Predecessors: [0x612]
Successors: [0x62d]
---
0x628 JUMPDEST
0x629 POP
0x62a MLOAD
0x62b LT
0x62c ISZERO
---
0x628: JUMPDEST 
0x62a: V541 = M[V534]
0x62b: V542 = LT V541 S2
0x62c: V543 = ISZERO V542
---
Entry stack: [V13, 0x14e, 0x0, 0x0, {0x0, 0x1}, S7, {0x125, 0x6ad}, 0x0, S4, S3, S2, V534, V535]
Stack pops: 3
Stack additions: [V543]
Exit stack: [V13, 0x14e, 0x0, 0x0, {0x0, 0x1}, S7, {0x125, 0x6ad}, 0x0, S4, S3, V543]

================================

Block 0x62d
[0x62d:0x633]
---
Predecessors: [0x57d, 0x628]
Successors: [0x125, 0x6ad]
---
0x62d JUMPDEST
0x62e SWAP3
0x62f POP
0x630 POP
0x631 POP
0x632 SWAP1
0x633 JUMP
---
0x62d: JUMPDEST 
0x633: JUMP {0x125, 0x6ad}
---
Entry stack: [V13, 0x14e, 0x0, 0x0, {0x0, 0x1}, S5, {0x125, 0x6ad}, 0x0, S2, S1, S0]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V13, 0x14e, 0x0, 0x0, {0x0, 0x1}, S5, S0]

================================

Block 0x634
[0x634:0x639]
---
Predecessors: [0x213]
Successors: [0x63a]
---
0x634 JUMPDEST
0x635 PUSH1 0x0
0x637 DUP1
0x638 DUP1
0x639 DUP1
---
0x634: JUMPDEST 
0x635: V544 = 0x0
---
Entry stack: [V13, 0x14e]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0]
Exit stack: [V13, 0x14e, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x63a
[0x63a:0x647]
---
Predecessors: [0x634, 0x67d]
Successors: [0x648, 0x685]
---
0x63a JUMPDEST
0x63b PUSH1 0x5
0x63d SLOAD
0x63e PUSH1 0xff
0x640 DUP3
0x641 AND
0x642 LT
0x643 ISZERO
0x644 PUSH2 0x685
0x647 JUMPI
---
0x63a: JUMPDEST 
0x63b: V545 = 0x5
0x63d: V546 = S[0x5]
0x63e: V547 = 0xff
0x641: V548 = AND S0 0xff
0x642: V549 = LT V548 V546
0x643: V550 = ISZERO V549
0x644: V551 = 0x685
0x647: JUMPI 0x685 V550
---
Entry stack: [V13, 0x14e, 0x0, 0x0, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x14e, 0x0, 0x0, S1, S0]

================================

Block 0x648
[0x648:0x659]
---
Predecessors: [0x63a]
Successors: [0x65a, 0x65b]
---
0x648 PUSH1 0x5
0x64a DUP1
0x64b SLOAD
0x64c CALLER
0x64d SWAP2
0x64e SWAP1
0x64f PUSH1 0xff
0x651 DUP5
0x652 AND
0x653 SWAP1
0x654 DUP2
0x655 LT
0x656 PUSH2 0x65b
0x659 JUMPI
---
0x648: V552 = 0x5
0x64b: V553 = S[0x5]
0x64c: V554 = CALLER
0x64f: V555 = 0xff
0x652: V556 = AND S0 0xff
0x655: V557 = LT V556 V553
0x656: V558 = 0x65b
0x659: JUMPI 0x65b V557
---
Entry stack: [V13, 0x14e, 0x0, 0x0, S1, S0]
Stack pops: 1
Stack additions: [S0, V554, 0x5, V556]
Exit stack: [V13, 0x14e, 0x0, 0x0, S1, S0, V554, 0x5, V556]

================================

Block 0x65a
[0x65a:0x65a]
---
Predecessors: [0x648]
Successors: []
---
0x65a INVALID
---
0x65a: INVALID 
---
Entry stack: [V13, 0x14e, 0x0, 0x0, S4, S3, V554, 0x5, V556]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x14e, 0x0, 0x0, S4, S3, V554, 0x5, V556]

================================

Block 0x65b
[0x65b:0x676]
---
Predecessors: [0x648]
Successors: [0x677, 0x67d]
---
0x65b JUMPDEST
0x65c PUSH1 0x0
0x65e SWAP2
0x65f DUP3
0x660 MSTORE
0x661 PUSH1 0x20
0x663 SWAP1
0x664 SWAP2
0x665 SHA3
0x666 ADD
0x667 SLOAD
0x668 PUSH1 0x1
0x66a PUSH1 0xa0
0x66c PUSH1 0x2
0x66e EXP
0x66f SUB
0x670 AND
0x671 EQ
0x672 ISZERO
0x673 PUSH2 0x67d
0x676 JUMPI
---
0x65b: JUMPDEST 
0x65c: V559 = 0x0
0x660: M[0x0] = 0x5
0x661: V560 = 0x20
0x665: V561 = SHA3 0x0 0x20
0x666: V562 = ADD V561 V556
0x667: V563 = S[V562]
0x668: V564 = 0x1
0x66a: V565 = 0xa0
0x66c: V566 = 0x2
0x66e: V567 = EXP 0x2 0xa0
0x66f: V568 = SUB 0x10000000000000000000000000000000000000000 0x1
0x670: V569 = AND 0xffffffffffffffffffffffffffffffffffffffff V563
0x671: V570 = EQ V569 V554
0x672: V571 = ISZERO V570
0x673: V572 = 0x67d
0x676: JUMPI 0x67d V571
---
Entry stack: [V13, 0x14e, 0x0, 0x0, S4, S3, V554, 0x5, V556]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0x14e, 0x0, 0x0, S4, S3]

================================

Block 0x677
[0x677:0x67c]
---
Predecessors: [0x65b]
Successors: [0x67d]
---
0x677 DUP2
0x678 PUSH1 0x1
0x67a OR
0x67b SWAP2
0x67c POP
---
0x678: V573 = 0x1
0x67a: V574 = OR 0x1 S1
---
Entry stack: [V13, 0x14e, 0x0, 0x0, S1, S0]
Stack pops: 2
Stack additions: [V574, S0]
Exit stack: [V13, 0x14e, 0x0, 0x0, V574, S0]

================================

Block 0x67d
[0x67d:0x684]
---
Predecessors: [0x65b, 0x677]
Successors: [0x63a]
---
0x67d JUMPDEST
0x67e PUSH1 0x1
0x680 ADD
0x681 PUSH2 0x63a
0x684 JUMP
---
0x67d: JUMPDEST 
0x67e: V575 = 0x1
0x680: V576 = ADD 0x1 S0
0x681: V577 = 0x63a
0x684: JUMP 0x63a
---
Entry stack: [V13, 0x14e, 0x0, 0x0, S1, S0]
Stack pops: 1
Stack additions: [V576]
Exit stack: [V13, 0x14e, 0x0, 0x0, S1, V576]

================================

Block 0x685
[0x685:0x690]
---
Predecessors: [0x63a]
Successors: [0x691, 0x695]
---
0x685 JUMPDEST
0x686 PUSH1 0x1
0x688 PUSH1 0xff
0x68a DUP4
0x68b AND
0x68c EQ
0x68d PUSH2 0x695
0x690 JUMPI
---
0x685: JUMPDEST 
0x686: V578 = 0x1
0x688: V579 = 0xff
0x68b: V580 = AND S1 0xff
0x68c: V581 = EQ V580 0x1
0x68d: V582 = 0x695
0x690: JUMPI 0x695 V581
---
Entry stack: [V13, 0x14e, 0x0, 0x0, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x14e, 0x0, 0x0, S1, S0]

================================

Block 0x691
[0x691:0x694]
---
Predecessors: [0x685]
Successors: []
---
0x691 PUSH1 0x0
0x693 DUP1
0x694 REVERT
---
0x691: V583 = 0x0
0x694: REVERT 0x0 0x0
---
Entry stack: [V13, 0x14e, 0x0, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x14e, 0x0, 0x0, S1, S0]

================================

Block 0x695
[0x695:0x6a0]
---
Predecessors: [0x685]
Successors: [0x6a1, 0x6a5]
---
0x695 JUMPDEST
0x696 PUSH1 0x8
0x698 SLOAD
0x699 PUSH1 0xff
0x69b AND
0x69c ISZERO
0x69d PUSH2 0x6a5
0x6a0 JUMPI
---
0x695: JUMPDEST 
0x696: V584 = 0x8
0x698: V585 = S[0x8]
0x699: V586 = 0xff
0x69b: V587 = AND 0xff V585
0x69c: V588 = ISZERO V587
0x69d: V589 = 0x6a5
0x6a0: JUMPI 0x6a5 V588
---
Entry stack: [V13, 0x14e, 0x0, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x14e, 0x0, 0x0, S1, S0]

================================

Block 0x6a1
[0x6a1:0x6a4]
---
Predecessors: [0x695]
Successors: []
---
0x6a1 PUSH1 0x0
0x6a3 DUP1
0x6a4 REVERT
---
0x6a1: V590 = 0x0
0x6a4: REVERT 0x0 0x0
---
Entry stack: [V13, 0x14e, 0x0, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x14e, 0x0, 0x0, S1, S0]

================================

Block 0x6a5
[0x6a5:0x6ac]
---
Predecessors: [0x695]
Successors: [0x46f]
---
0x6a5 JUMPDEST
0x6a6 PUSH2 0x6ad
0x6a9 PUSH2 0x46f
0x6ac JUMP
---
0x6a5: JUMPDEST 
0x6a6: V591 = 0x6ad
0x6a9: V592 = 0x46f
0x6ac: JUMP 0x46f
---
Entry stack: [V13, 0x14e, 0x0, 0x0, S1, S0]
Stack pops: 0
Stack additions: [0x6ad]
Exit stack: [V13, 0x14e, 0x0, 0x0, S1, S0, 0x6ad]

================================

Block 0x6ad
[0x6ad:0x6b3]
---
Predecessors: [0x62d]
Successors: [0x6b4, 0x6b8]
---
0x6ad JUMPDEST
0x6ae ISZERO
0x6af ISZERO
0x6b0 PUSH2 0x6b8
0x6b3 JUMPI
---
0x6ad: JUMPDEST 
0x6ae: V593 = ISZERO S0
0x6af: V594 = ISZERO V593
0x6b0: V595 = 0x6b8
0x6b3: JUMPI 0x6b8 V594
---
Entry stack: [V13, 0x14e, 0x0, 0x0, {0x0, 0x1}, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x14e, 0x0, 0x0, {0x0, 0x1}, S1]

================================

Block 0x6b4
[0x6b4:0x6b7]
---
Predecessors: [0x6ad]
Successors: []
---
0x6b4 PUSH1 0x0
0x6b6 DUP1
0x6b7 REVERT
---
0x6b4: V596 = 0x0
0x6b7: REVERT 0x0 0x0
---
Entry stack: [V13, 0x14e, 0x0, 0x0, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x14e, 0x0, 0x0, {0x0, 0x1}, S0]

================================

Block 0x6b8
[0x6b8:0x6c9]
---
Predecessors: [0x6ad]
Successors: [0x6ca]
---
0x6b8 JUMPDEST
0x6b9 PUSH1 0x8
0x6bb DUP1
0x6bc SLOAD
0x6bd PUSH1 0xff
0x6bf NOT
0x6c0 AND
0x6c1 PUSH1 0x1
0x6c3 OR
0x6c4 SWAP1
0x6c5 SSTORE
0x6c6 PUSH1 0x0
0x6c8 SWAP4
0x6c9 POP
---
0x6b8: JUMPDEST 
0x6b9: V597 = 0x8
0x6bc: V598 = S[0x8]
0x6bd: V599 = 0xff
0x6bf: V600 = NOT 0xff
0x6c0: V601 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V598
0x6c1: V602 = 0x1
0x6c3: V603 = OR 0x1 V601
0x6c5: S[0x8] = V603
0x6c6: V604 = 0x0
---
Entry stack: [V13, 0x14e, 0x0, 0x0, {0x0, 0x1}, S0]
Stack pops: 4
Stack additions: [0x0, S2, S1, S0]
Exit stack: [V13, 0x14e, 0x0, 0x0, {0x0, 0x1}, S0]

================================

Block 0x6ca
[0x6ca:0x6d4]
---
Predecessors: [0x6b8, 0x839]
Successors: [0x6d5, 0x844]
---
0x6ca JUMPDEST
0x6cb PUSH1 0x4
0x6cd SLOAD
0x6ce DUP5
0x6cf LT
0x6d0 ISZERO
0x6d1 PUSH2 0x844
0x6d4 JUMPI
---
0x6ca: JUMPDEST 
0x6cb: V605 = 0x4
0x6cd: V606 = S[0x4]
0x6cf: V607 = LT S3 V606
0x6d0: V608 = ISZERO V607
0x6d1: V609 = 0x844
0x6d4: JUMPI 0x844 V608
---
Entry stack: [V13, 0x14e, 0x0, 0x0, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, 0x14e, 0x0, 0x0, S5, S4, S3, S2, S1, S0]

================================

Block 0x6d5
[0x6d5:0x6e0]
---
Predecessors: [0x6ca]
Successors: [0x6e1, 0x6e2]
---
0x6d5 PUSH1 0x4
0x6d7 DUP1
0x6d8 SLOAD
0x6d9 DUP6
0x6da SWAP1
0x6db DUP2
0x6dc LT
0x6dd PUSH2 0x6e2
0x6e0 JUMPI
---
0x6d5: V610 = 0x4
0x6d8: V611 = S[0x4]
0x6dc: V612 = LT S3 V611
0x6dd: V613 = 0x6e2
0x6e0: JUMPI 0x6e2 V612
---
Entry stack: [V13, 0x14e, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x4, S3]
Exit stack: [V13, 0x14e, S3, S2, S1, S0, 0x4, S3]

================================

Block 0x6e1
[0x6e1:0x6e1]
---
Predecessors: [0x6d5]
Successors: []
---
0x6e1 INVALID
---
0x6e1: INVALID 
---
Entry stack: [V13, 0x14e, S5, S4, S3, S2, 0x4, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x14e, S5, S4, S3, S2, 0x4, S0]

================================

Block 0x6e2
[0x6e2:0x700]
---
Predecessors: [0x6d5]
Successors: [0x701, 0x719]
---
0x6e2 JUMPDEST
0x6e3 PUSH1 0x0
0x6e5 SWAP2
0x6e6 DUP3
0x6e7 MSTORE
0x6e8 PUSH1 0x20
0x6ea SWAP1
0x6eb SWAP2
0x6ec SHA3
0x6ed PUSH1 0x2
0x6ef PUSH1 0x3
0x6f1 SWAP1
0x6f2 SWAP3
0x6f3 MUL
0x6f4 ADD
0x6f5 ADD
0x6f6 SLOAD
0x6f7 PUSH1 0xff
0x6f9 AND
0x6fa ISZERO
0x6fb DUP1
0x6fc ISZERO
0x6fd PUSH2 0x719
0x700 JUMPI
---
0x6e2: JUMPDEST 
0x6e3: V614 = 0x0
0x6e7: M[0x0] = 0x4
0x6e8: V615 = 0x20
0x6ec: V616 = SHA3 0x0 0x20
0x6ed: V617 = 0x2
0x6ef: V618 = 0x3
0x6f3: V619 = MUL S0 0x3
0x6f4: V620 = ADD V619 V616
0x6f5: V621 = ADD V620 0x2
0x6f6: V622 = S[V621]
0x6f7: V623 = 0xff
0x6f9: V624 = AND 0xff V622
0x6fa: V625 = ISZERO V624
0x6fc: V626 = ISZERO V625
0x6fd: V627 = 0x719
0x700: JUMPI 0x719 V626
---
Entry stack: [V13, 0x14e, S5, S4, S3, S2, 0x4, S0]
Stack pops: 2
Stack additions: [V625]
Exit stack: [V13, 0x14e, S5, S4, S3, S2, V625]

================================

Block 0x701
[0x701:0x714]
---
Predecessors: [0x6e2]
Successors: [0x4be, 0x715]
---
0x701 POP
0x702 PUSH1 0x3
0x704 SLOAD
0x705 PUSH2 0x716
0x708 PUSH1 0x4
0x70a DUP7
0x70b DUP2
0x70c SLOAD
0x70d DUP2
0x70e LT
0x70f ISZERO
0x710 ISZERO
0x711 PUSH2 0x4be
0x714 JUMPI
---
0x702: V628 = 0x3
0x704: V629 = S[0x3]
0x705: V630 = 0x716
0x708: V631 = 0x4
0x70c: V632 = S[0x4]
0x70e: V633 = LT S4 V632
0x70f: V634 = ISZERO V633
0x710: V635 = ISZERO V634
0x711: V636 = 0x4be
0x714: JUMPI 0x4be V635
---
Entry stack: [V13, 0x14e, S4, S3, S2, S1, V625]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V629, 0x716, 0x4, S4]
Exit stack: [V13, 0x14e, S4, S3, S2, S1, V629, 0x716, 0x4, S4]

================================

Block 0x715
[0x715:0x715]
---
Predecessors: [0x701]
Successors: []
---
0x715 INVALID
---
0x715: INVALID 
---
Entry stack: [V13, 0x14e, S7, S6, S5, S4, V629, 0x716, 0x4, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x14e, S7, S6, S5, S4, V629, 0x716, 0x4, S0]

================================

Block 0x716
[0x716:0x718]
---
Predecessors: [0x39a]
Successors: [0x719]
---
0x716 JUMPDEST
0x717 LT
0x718 ISZERO
---
0x716: JUMPDEST 
0x717: V637 = LT V317 S1
0x718: V638 = ISZERO V637
---
Entry stack: [V13, 0x14e, 0x0, 0x0, S7, S6, S5, S4, S3, S2, S1, V317]
Stack pops: 2
Stack additions: [V638]
Exit stack: [V13, 0x14e, 0x0, 0x0, S7, S6, S5, S4, S3, S2, V638]

================================

Block 0x719
[0x719:0x71e]
---
Predecessors: [0x6e2, 0x716]
Successors: [0x71f, 0x839]
---
0x719 JUMPDEST
0x71a ISZERO
0x71b PUSH2 0x839
0x71e JUMPI
---
0x719: JUMPDEST 
0x71a: V639 = ISZERO S0
0x71b: V640 = 0x839
0x71e: JUMPI 0x839 V639
---
Entry stack: [V13, 0x14e, 0x0, 0x0, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x14e, 0x0, 0x0, S6, S5, S4, S3, S2, S1]

================================

Block 0x71f
[0x71f:0x731]
---
Predecessors: [0x719]
Successors: [0x4be, 0x732]
---
0x71f PUSH1 0x3
0x721 SLOAD
0x722 PUSH2 0x733
0x725 PUSH1 0x4
0x727 DUP7
0x728 DUP2
0x729 SLOAD
0x72a DUP2
0x72b LT
0x72c ISZERO
0x72d ISZERO
0x72e PUSH2 0x4be
0x731 JUMPI
---
0x71f: V641 = 0x3
0x721: V642 = S[0x3]
0x722: V643 = 0x733
0x725: V644 = 0x4
0x729: V645 = S[0x4]
0x72b: V646 = LT S3 V645
0x72c: V647 = ISZERO V646
0x72d: V648 = ISZERO V647
0x72e: V649 = 0x4be
0x731: JUMPI 0x4be V648
---
Entry stack: [V13, 0x14e, 0x0, 0x0, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V642, 0x733, 0x4, S3]
Exit stack: [V13, 0x14e, 0x0, 0x0, S5, S4, S3, S2, S1, S0, V642, 0x733, 0x4, S3]

================================

Block 0x732
[0x732:0x732]
---
Predecessors: [0x71f]
Successors: []
---
0x732 INVALID
---
0x732: INVALID 
---
Entry stack: [V13, 0x14e, 0x0, 0x0, S9, S8, S7, S6, S5, S4, V642, 0x733, 0x4, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x14e, 0x0, 0x0, S9, S8, S7, S6, S5, S4, V642, 0x733, 0x4, S0]

================================

Block 0x733
[0x733:0x762]
---
Predecessors: [0x39a]
Successors: [0x763, 0x764]
---
0x733 JUMPDEST
0x734 PUSH1 0x0
0x736 SLOAD
0x737 PUSH1 0x2
0x739 SLOAD
0x73a PUSH1 0x4
0x73c DUP1
0x73d SLOAD
0x73e SWAP5
0x73f SWAP1
0x740 SWAP4
0x741 SUB
0x742 SWAP7
0x743 POP
0x744 PUSH1 0x1
0x746 PUSH1 0xa0
0x748 PUSH1 0x2
0x74a EXP
0x74b SUB
0x74c SWAP2
0x74d DUP3
0x74e AND
0x74f SWAP4
0x750 PUSH4 0x23b872dd
0x755 SWAP4
0x756 SWAP2
0x757 SWAP1
0x758 SWAP3
0x759 AND
0x75a SWAP2
0x75b DUP9
0x75c SWAP1
0x75d DUP2
0x75e LT
0x75f PUSH2 0x764
0x762 JUMPI
---
0x733: JUMPDEST 
0x734: V650 = 0x0
0x736: V651 = S[0x0]
0x737: V652 = 0x2
0x739: V653 = S[0x2]
0x73a: V654 = 0x4
0x73d: V655 = S[0x4]
0x741: V656 = SUB V317 S1
0x744: V657 = 0x1
0x746: V658 = 0xa0
0x748: V659 = 0x2
0x74a: V660 = EXP 0x2 0xa0
0x74b: V661 = SUB 0x10000000000000000000000000000000000000000 0x1
0x74e: V662 = AND 0xffffffffffffffffffffffffffffffffffffffff V651
0x750: V663 = 0x23b872dd
0x759: V664 = AND 0xffffffffffffffffffffffffffffffffffffffff V653
0x75e: V665 = LT S5 V655
0x75f: V666 = 0x764
0x762: JUMPI 0x764 V665
---
Entry stack: [V13, 0x14e, 0x0, 0x0, S7, S6, S5, S4, S3, S2, S1, V317]
Stack pops: 6
Stack additions: [S5, V656, S3, S2, V662, 0x23b872dd, V664, 0x4, S5]
Exit stack: [V13, 0x14e, 0x0, 0x0, S7, S6, S5, V656, S3, S2, V662, 0x23b872dd, V664, 0x4, S5]

================================

Block 0x763
[0x763:0x763]
---
Predecessors: [0x733]
Successors: []
---
0x763 INVALID
---
0x763: INVALID 
---
Entry stack: [V13, 0x14e, 0x0, 0x0, S10, S9, S8, V656, S6, S5, V662, 0x23b872dd, V664, 0x4, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x14e, 0x0, 0x0, S10, S9, S8, V656, S6, S5, V662, 0x23b872dd, V664, 0x4, S0]

================================

Block 0x764
[0x764:0x7c9]
---
Predecessors: [0x733]
Successors: [0x7ca, 0x7ce]
---
0x764 JUMPDEST
0x765 PUSH1 0x0
0x767 SWAP2
0x768 DUP3
0x769 MSTORE
0x76a PUSH1 0x20
0x76c DUP1
0x76d DUP4
0x76e SHA3
0x76f PUSH1 0x3
0x771 SWAP1
0x772 SWAP3
0x773 MUL
0x774 SWAP1
0x775 SWAP2
0x776 ADD
0x777 SLOAD
0x778 PUSH1 0x6
0x77a SLOAD
0x77b PUSH1 0x40
0x77d DUP1
0x77e MLOAD
0x77f PUSH1 0xe0
0x781 PUSH1 0x2
0x783 EXP
0x784 PUSH4 0xffffffff
0x789 DUP10
0x78a AND
0x78b MUL
0x78c DUP2
0x78d MSTORE
0x78e PUSH1 0x1
0x790 PUSH1 0xa0
0x792 PUSH1 0x2
0x794 EXP
0x795 SUB
0x796 SWAP7
0x797 DUP8
0x798 AND
0x799 PUSH1 0x4
0x79b DUP3
0x79c ADD
0x79d MSTORE
0x79e SWAP6
0x79f SWAP1
0x7a0 SWAP3
0x7a1 AND
0x7a2 PUSH1 0x24
0x7a4 DUP7
0x7a5 ADD
0x7a6 MSTORE
0x7a7 DUP10
0x7a8 MUL
0x7a9 PUSH1 0x44
0x7ab DUP6
0x7ac ADD
0x7ad MSTORE
0x7ae MLOAD
0x7af PUSH1 0x64
0x7b1 DUP1
0x7b2 DUP6
0x7b3 ADD
0x7b4 SWAP5
0x7b5 SWAP3
0x7b6 SWAP4
0x7b7 SWAP2
0x7b8 SWAP3
0x7b9 DUP4
0x7ba SWAP1
0x7bb SUB
0x7bc ADD
0x7bd SWAP1
0x7be DUP3
0x7bf SWAP1
0x7c0 DUP8
0x7c1 DUP1
0x7c2 EXTCODESIZE
0x7c3 ISZERO
0x7c4 DUP1
0x7c5 ISZERO
0x7c6 PUSH2 0x7ce
0x7c9 JUMPI
---
0x764: JUMPDEST 
0x765: V667 = 0x0
0x769: M[0x0] = 0x4
0x76a: V668 = 0x20
0x76e: V669 = SHA3 0x0 0x20
0x76f: V670 = 0x3
0x773: V671 = MUL S0 0x3
0x776: V672 = ADD V669 V671
0x777: V673 = S[V672]
0x778: V674 = 0x6
0x77a: V675 = S[0x6]
0x77b: V676 = 0x40
0x77e: V677 = M[0x40]
0x77f: V678 = 0xe0
0x781: V679 = 0x2
0x783: V680 = EXP 0x2 0xe0
0x784: V681 = 0xffffffff
0x78a: V682 = AND 0x23b872dd 0xffffffff
0x78b: V683 = MUL 0x23b872dd 0x100000000000000000000000000000000000000000000000000000000
0x78d: M[V677] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x78e: V684 = 0x1
0x790: V685 = 0xa0
0x792: V686 = 0x2
0x794: V687 = EXP 0x2 0xa0
0x795: V688 = SUB 0x10000000000000000000000000000000000000000 0x1
0x798: V689 = AND 0xffffffffffffffffffffffffffffffffffffffff V664
0x799: V690 = 0x4
0x79c: V691 = ADD V677 0x4
0x79d: M[V691] = V689
0x7a1: V692 = AND V673 0xffffffffffffffffffffffffffffffffffffffff
0x7a2: V693 = 0x24
0x7a5: V694 = ADD V677 0x24
0x7a6: M[V694] = V692
0x7a8: V695 = MUL V656 V675
0x7a9: V696 = 0x44
0x7ac: V697 = ADD V677 0x44
0x7ad: M[V697] = V695
0x7ae: V698 = M[0x40]
0x7af: V699 = 0x64
0x7b3: V700 = ADD V677 0x64
0x7bb: V701 = SUB V677 V698
0x7bc: V702 = ADD V701 0x64
0x7c2: V703 = EXTCODESIZE V662
0x7c3: V704 = ISZERO V703
0x7c5: V705 = ISZERO V704
0x7c6: V706 = 0x7ce
0x7c9: JUMPI 0x7ce V705
---
Entry stack: [V13, 0x14e, 0x0, 0x0, S10, S9, S8, V656, S6, S5, V662, 0x23b872dd, V664, 0x4, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, V700, 0x20, V698, V702, V698, 0x0, S4, V704]
Exit stack: [V13, 0x14e, 0x0, 0x0, S10, S9, S8, V656, S6, S5, V662, 0x23b872dd, V700, 0x20, V698, V702, V698, 0x0, V662, V704]

================================

Block 0x7ca
[0x7ca:0x7cd]
---
Predecessors: [0x764]
Successors: []
---
0x7ca PUSH1 0x0
0x7cc DUP1
0x7cd REVERT
---
0x7ca: V707 = 0x0
0x7cd: REVERT 0x0 0x0
---
Entry stack: [V13, 0x14e, 0x0, 0x0, S15, S14, S13, V656, S11, S10, V662, 0x23b872dd, V700, 0x20, V698, V702, V698, 0x0, V662, V704]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x14e, 0x0, 0x0, S15, S14, S13, V656, S11, S10, V662, 0x23b872dd, V700, 0x20, V698, V702, V698, 0x0, V662, V704]

================================

Block 0x7ce
[0x7ce:0x7d8]
---
Predecessors: [0x764]
Successors: [0x7d9, 0x7e2]
---
0x7ce JUMPDEST
0x7cf POP
0x7d0 GAS
0x7d1 CALL
0x7d2 ISZERO
0x7d3 DUP1
0x7d4 ISZERO
0x7d5 PUSH2 0x7e2
0x7d8 JUMPI
---
0x7ce: JUMPDEST 
0x7d0: V708 = GAS
0x7d1: V709 = CALL V708 V662 0x0 V698 V702 V698 0x20
0x7d2: V710 = ISZERO V709
0x7d4: V711 = ISZERO V710
0x7d5: V712 = 0x7e2
0x7d8: JUMPI 0x7e2 V711
---
Entry stack: [V13, 0x14e, 0x0, 0x0, S15, S14, S13, V656, S11, S10, V662, 0x23b872dd, V700, 0x20, V698, V702, V698, 0x0, V662, V704]
Stack pops: 7
Stack additions: [V710]
Exit stack: [V13, 0x14e, 0x0, 0x0, S15, S14, S13, V656, S11, S10, V662, 0x23b872dd, V700, V710]

================================

Block 0x7d9
[0x7d9:0x7e1]
---
Predecessors: [0x7ce]
Successors: []
---
0x7d9 RETURNDATASIZE
0x7da PUSH1 0x0
0x7dc DUP1
0x7dd RETURNDATACOPY
0x7de RETURNDATASIZE
0x7df PUSH1 0x0
0x7e1 REVERT
---
0x7d9: V713 = RETURNDATASIZE
0x7da: V714 = 0x0
0x7dd: RETURNDATACOPY 0x0 0x0 V713
0x7de: V715 = RETURNDATASIZE
0x7df: V716 = 0x0
0x7e1: REVERT 0x0 V715
---
Entry stack: [V13, 0x14e, 0x0, 0x0, S9, S8, S7, V656, S5, S4, V662, 0x23b872dd, V700, V710]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x14e, 0x0, 0x0, S9, S8, S7, V656, S5, S4, V662, 0x23b872dd, V700, V710]

================================

Block 0x7e2
[0x7e2:0x7f3]
---
Predecessors: [0x7ce]
Successors: [0x7f4, 0x7f8]
---
0x7e2 JUMPDEST
0x7e3 POP
0x7e4 POP
0x7e5 POP
0x7e6 POP
0x7e7 PUSH1 0x40
0x7e9 MLOAD
0x7ea RETURNDATASIZE
0x7eb PUSH1 0x20
0x7ed DUP2
0x7ee LT
0x7ef ISZERO
0x7f0 PUSH2 0x7f8
0x7f3 JUMPI
---
0x7e2: JUMPDEST 
0x7e7: V717 = 0x40
0x7e9: V718 = M[0x40]
0x7ea: V719 = RETURNDATASIZE
0x7eb: V720 = 0x20
0x7ee: V721 = LT V719 0x20
0x7ef: V722 = ISZERO V721
0x7f0: V723 = 0x7f8
0x7f3: JUMPI 0x7f8 V722
---
Entry stack: [V13, 0x14e, 0x0, 0x0, S9, S8, S7, V656, S5, S4, V662, 0x23b872dd, V700, V710]
Stack pops: 4
Stack additions: [V718, V719]
Exit stack: [V13, 0x14e, 0x0, 0x0, S9, S8, S7, V656, S5, S4, V718, V719]

================================

Block 0x7f4
[0x7f4:0x7f7]
---
Predecessors: [0x7e2]
Successors: []
---
0x7f4 PUSH1 0x0
0x7f6 DUP1
0x7f7 REVERT
---
0x7f4: V724 = 0x0
0x7f7: REVERT 0x0 0x0
---
Entry stack: [V13, 0x14e, 0x0, 0x0, S7, S6, S5, V656, S3, S2, V718, V719]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x14e, 0x0, 0x0, S7, S6, S5, V656, S3, S2, V718, V719]

================================

Block 0x7f8
[0x7f8:0x800]
---
Predecessors: [0x7e2]
Successors: [0x801, 0x805]
---
0x7f8 JUMPDEST
0x7f9 POP
0x7fa MLOAD
0x7fb ISZERO
0x7fc ISZERO
0x7fd PUSH2 0x805
0x800 JUMPI
---
0x7f8: JUMPDEST 
0x7fa: V725 = M[V718]
0x7fb: V726 = ISZERO V725
0x7fc: V727 = ISZERO V726
0x7fd: V728 = 0x805
0x800: JUMPI 0x805 V727
---
Entry stack: [V13, 0x14e, 0x0, 0x0, S7, S6, S5, V656, S3, S2, V718, V719]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0x14e, 0x0, 0x0, S7, S6, S5, V656, S3, S2]

================================

Block 0x801
[0x801:0x804]
---
Predecessors: [0x7f8]
Successors: []
---
0x801 PUSH1 0x0
0x803 DUP1
0x804 REVERT
---
0x801: V729 = 0x0
0x804: REVERT 0x0 0x0
---
Entry stack: [V13, 0x14e, 0x0, 0x0, S5, S4, S3, V656, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x14e, 0x0, 0x0, S5, S4, S3, V656, S1, S0]

================================

Block 0x805
[0x805:0x814]
---
Predecessors: [0x7f8]
Successors: [0x815, 0x816]
---
0x805 JUMPDEST
0x806 PUSH1 0x1
0x808 PUSH1 0x4
0x80a DUP6
0x80b DUP2
0x80c SLOAD
0x80d DUP2
0x80e LT
0x80f ISZERO
0x810 ISZERO
0x811 PUSH2 0x816
0x814 JUMPI
---
0x805: JUMPDEST 
0x806: V730 = 0x1
0x808: V731 = 0x4
0x80c: V732 = S[0x4]
0x80e: V733 = LT S3 V732
0x80f: V734 = ISZERO V733
0x810: V735 = ISZERO V734
0x811: V736 = 0x816
0x814: JUMPI 0x816 V735
---
Entry stack: [V13, 0x14e, 0x0, 0x0, S5, S4, S3, V656, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x1, 0x4, S3]
Exit stack: [V13, 0x14e, 0x0, 0x0, S5, S4, S3, V656, S1, S0, 0x1, 0x4, S3]

================================

Block 0x815
[0x815:0x815]
---
Predecessors: [0x805]
Successors: []
---
0x815 INVALID
---
0x815: INVALID 
---
Entry stack: [V13, 0x14e, 0x0, 0x0, S8, S7, S6, V656, S4, S3, 0x1, 0x4, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x14e, 0x0, 0x0, S8, S7, S6, V656, S4, S3, 0x1, 0x4, S0]

================================

Block 0x816
[0x816:0x838]
---
Predecessors: [0x805]
Successors: [0x839]
---
0x816 JUMPDEST
0x817 PUSH1 0x0
0x819 SWAP2
0x81a DUP3
0x81b MSTORE
0x81c PUSH1 0x20
0x81e SWAP1
0x81f SWAP2
0x820 SHA3
0x821 PUSH1 0x3
0x823 SWAP1
0x824 SWAP2
0x825 MUL
0x826 ADD
0x827 PUSH1 0x2
0x829 ADD
0x82a DUP1
0x82b SLOAD
0x82c PUSH1 0xff
0x82e NOT
0x82f AND
0x830 SWAP2
0x831 ISZERO
0x832 ISZERO
0x833 SWAP2
0x834 SWAP1
0x835 SWAP2
0x836 OR
0x837 SWAP1
0x838 SSTORE
---
0x816: JUMPDEST 
0x817: V737 = 0x0
0x81b: M[0x0] = 0x4
0x81c: V738 = 0x20
0x820: V739 = SHA3 0x0 0x20
0x821: V740 = 0x3
0x825: V741 = MUL S0 0x3
0x826: V742 = ADD V741 V739
0x827: V743 = 0x2
0x829: V744 = ADD 0x2 V742
0x82b: V745 = S[V744]
0x82c: V746 = 0xff
0x82e: V747 = NOT 0xff
0x82f: V748 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V745
0x831: V749 = ISZERO 0x1
0x832: V750 = ISZERO 0x0
0x836: V751 = OR 0x1 V748
0x838: S[V744] = V751
---
Entry stack: [V13, 0x14e, 0x0, 0x0, S8, S7, S6, V656, S4, S3, 0x1, 0x4, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0x14e, 0x0, 0x0, S8, S7, S6, V656, S4, S3]

================================

Block 0x839
[0x839:0x843]
---
Predecessors: [0x719, 0x816]
Successors: [0x6ca]
---
0x839 JUMPDEST
0x83a PUSH1 0x1
0x83c SWAP1
0x83d SWAP4
0x83e ADD
0x83f SWAP3
0x840 PUSH2 0x6ca
0x843 JUMP
---
0x839: JUMPDEST 
0x83a: V752 = 0x1
0x83e: V753 = ADD S3 0x1
0x840: V754 = 0x6ca
0x843: JUMP 0x6ca
---
Entry stack: [V13, 0x14e, 0x0, 0x0, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [V753, S2, S1, S0]
Exit stack: [V13, 0x14e, 0x0, 0x0, S5, S4, V753, S2, S1, S0]

================================

Block 0x844
[0x844:0x849]
---
Predecessors: [0x6ca]
Successors: [0x14e]
---
0x844 JUMPDEST
0x845 POP
0x846 POP
0x847 POP
0x848 POP
0x849 JUMP
---
0x844: JUMPDEST 
0x849: JUMP 0x14e
---
Entry stack: [V13, 0x14e, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V13]

================================

Block 0x84a
[0x84a:0x84e]
---
Predecessors: [0x228]
Successors: [0x84f]
---
0x84a JUMPDEST
0x84b PUSH1 0x0
0x84d DUP1
0x84e DUP1
---
0x84a: JUMPDEST 
0x84b: V755 = 0x0
---
Entry stack: [V13, 0x17d]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V13, 0x17d, 0x0, 0x0, 0x0]

================================

Block 0x84f
[0x84f:0x859]
---
Predecessors: [0x84a, 0x89f]
Successors: [0x85a, 0x8a7]
---
0x84f JUMPDEST
0x850 PUSH1 0x4
0x852 SLOAD
0x853 DUP2
0x854 LT
0x855 ISZERO
0x856 PUSH2 0x8a7
0x859 JUMPI
---
0x84f: JUMPDEST 
0x850: V756 = 0x4
0x852: V757 = S[0x4]
0x854: V758 = LT S0 V757
0x855: V759 = ISZERO V758
0x856: V760 = 0x8a7
0x859: JUMPI 0x8a7 V759
---
Entry stack: [V13, 0x14e, 0x0, 0x0, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x14e, 0x0, 0x0, S5, S4, S3, S2, S1, S0]

================================

Block 0x85a
[0x85a:0x865]
---
Predecessors: [0x84f]
Successors: [0x866, 0x867]
---
0x85a PUSH1 0x4
0x85c DUP1
0x85d SLOAD
0x85e DUP3
0x85f SWAP1
0x860 DUP2
0x861 LT
0x862 PUSH2 0x867
0x865 JUMPI
---
0x85a: V761 = 0x4
0x85d: V762 = S[0x4]
0x861: V763 = LT S0 V762
0x862: V764 = 0x867
0x865: JUMPI 0x867 V763
---
Entry stack: [V13, 0x17d, 0x0, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x4, S0]
Exit stack: [V13, 0x17d, 0x0, S1, S0, 0x4, S0]

================================

Block 0x866
[0x866:0x866]
---
Predecessors: [0x85a]
Successors: []
---
0x866 INVALID
---
0x866: INVALID 
---
Entry stack: [V13, 0x17d, 0x0, S3, S2, 0x4, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x17d, 0x0, S3, S2, 0x4, S0]

================================

Block 0x867
[0x867:0x884]
---
Predecessors: [0x85a]
Successors: [0x885, 0x89f]
---
0x867 JUMPDEST
0x868 PUSH1 0x0
0x86a SWAP2
0x86b DUP3
0x86c MSTORE
0x86d PUSH1 0x20
0x86f SWAP1
0x870 SWAP2
0x871 SHA3
0x872 PUSH1 0x2
0x874 PUSH1 0x3
0x876 SWAP1
0x877 SWAP3
0x878 MUL
0x879 ADD
0x87a ADD
0x87b SLOAD
0x87c PUSH1 0xff
0x87e AND
0x87f ISZERO
0x880 ISZERO
0x881 PUSH2 0x89f
0x884 JUMPI
---
0x867: JUMPDEST 
0x868: V765 = 0x0
0x86c: M[0x0] = 0x4
0x86d: V766 = 0x20
0x871: V767 = SHA3 0x0 0x20
0x872: V768 = 0x2
0x874: V769 = 0x3
0x878: V770 = MUL S0 0x3
0x879: V771 = ADD V770 V767
0x87a: V772 = ADD V771 0x2
0x87b: V773 = S[V772]
0x87c: V774 = 0xff
0x87e: V775 = AND 0xff V773
0x87f: V776 = ISZERO V775
0x880: V777 = ISZERO V776
0x881: V778 = 0x89f
0x884: JUMPI 0x89f V777
---
Entry stack: [V13, 0x17d, 0x0, S3, S2, 0x4, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0x17d, 0x0, S3, S2]

================================

Block 0x885
[0x885:0x897]
---
Predecessors: [0x867]
Successors: [0x4be, 0x898]
---
0x885 PUSH1 0x6
0x887 SLOAD
0x888 PUSH2 0x899
0x88b PUSH1 0x4
0x88d DUP4
0x88e DUP2
0x88f SLOAD
0x890 DUP2
0x891 LT
0x892 ISZERO
0x893 ISZERO
0x894 PUSH2 0x4be
0x897 JUMPI
---
0x885: V779 = 0x6
0x887: V780 = S[0x6]
0x888: V781 = 0x899
0x88b: V782 = 0x4
0x88f: V783 = S[0x4]
0x891: V784 = LT S0 V783
0x892: V785 = ISZERO V784
0x893: V786 = ISZERO V785
0x894: V787 = 0x4be
0x897: JUMPI 0x4be V786
---
Entry stack: [V13, 0x17d, 0x0, S1, S0]
Stack pops: 1
Stack additions: [S0, V780, 0x899, 0x4, S0]
Exit stack: [V13, 0x17d, 0x0, S1, S0, V780, 0x899, 0x4, S0]

================================

Block 0x898
[0x898:0x898]
---
Predecessors: [0x885]
Successors: []
---
0x898 INVALID
---
0x898: INVALID 
---
Entry stack: [V13, 0x17d, 0x0, S5, S4, V780, 0x899, 0x4, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x17d, 0x0, S5, S4, V780, 0x899, 0x4, S0]

================================

Block 0x899
[0x899:0x89e]
---
Predecessors: [0x39a]
Successors: [0x89f]
---
0x899 JUMPDEST
0x89a MUL
0x89b DUP3
0x89c ADD
0x89d SWAP2
0x89e POP
---
0x899: JUMPDEST 
0x89a: V788 = MUL V317 S1
0x89c: V789 = ADD S3 V788
---
Entry stack: [V13, 0x14e, 0x0, 0x0, S7, S6, S5, S4, S3, S2, S1, V317]
Stack pops: 4
Stack additions: [V789, S2]
Exit stack: [V13, 0x14e, 0x0, 0x0, S7, S6, S5, S4, V789, S2]

================================

Block 0x89f
[0x89f:0x8a6]
---
Predecessors: [0x867, 0x899]
Successors: [0x84f]
---
0x89f JUMPDEST
0x8a0 PUSH1 0x1
0x8a2 ADD
0x8a3 PUSH2 0x84f
0x8a6 JUMP
---
0x89f: JUMPDEST 
0x8a0: V790 = 0x1
0x8a2: V791 = ADD 0x1 S0
0x8a3: V792 = 0x84f
0x8a6: JUMP 0x84f
---
Entry stack: [V13, 0x14e, 0x0, 0x0, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V791]
Exit stack: [V13, 0x14e, 0x0, 0x0, S5, S4, S3, S2, S1, V791]

================================

Block 0x8a7
[0x8a7:0x8ac]
---
Predecessors: [0x84f]
Successors: [0x17d]
---
0x8a7 JUMPDEST
0x8a8 POP
0x8a9 SWAP2
0x8aa SWAP1
0x8ab POP
0x8ac JUMP
---
0x8a7: JUMPDEST 
0x8ac: JUMP 0x17d
---
Entry stack: [V13, 0x17d, 0x0, S1, S0]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V13, S1]

================================

Block 0x8ad
[0x8ad:0x8b1]
---
Predecessors: [0x23d]
Successors: [0x8b2]
---
0x8ad JUMPDEST
0x8ae PUSH1 0x0
0x8b0 DUP1
0x8b1 DUP1
---
0x8ad: JUMPDEST 
0x8ae: V793 = 0x0
---
Entry stack: [V13, 0x14e, V189]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V13, 0x14e, V189, 0x0, 0x0, 0x0]

================================

Block 0x8b2
[0x8b2:0x8bf]
---
Predecessors: [0x8ad, 0x8f5]
Successors: [0x8c0, 0x8fd]
---
0x8b2 JUMPDEST
0x8b3 PUSH1 0x5
0x8b5 SLOAD
0x8b6 PUSH1 0xff
0x8b8 DUP3
0x8b9 AND
0x8ba LT
0x8bb ISZERO
0x8bc PUSH2 0x8fd
0x8bf JUMPI
---
0x8b2: JUMPDEST 
0x8b3: V794 = 0x5
0x8b5: V795 = S[0x5]
0x8b6: V796 = 0xff
0x8b9: V797 = AND S0 0xff
0x8ba: V798 = LT V797 V795
0x8bb: V799 = ISZERO V798
0x8bc: V800 = 0x8fd
0x8bf: JUMPI 0x8fd V799
---
Entry stack: [V13, 0x14e, V189, 0x0, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x14e, V189, 0x0, S1, S0]

================================

Block 0x8c0
[0x8c0:0x8d1]
---
Predecessors: [0x8b2]
Successors: [0x8d2, 0x8d3]
---
0x8c0 PUSH1 0x5
0x8c2 DUP1
0x8c3 SLOAD
0x8c4 CALLER
0x8c5 SWAP2
0x8c6 SWAP1
0x8c7 PUSH1 0xff
0x8c9 DUP5
0x8ca AND
0x8cb SWAP1
0x8cc DUP2
0x8cd LT
0x8ce PUSH2 0x8d3
0x8d1 JUMPI
---
0x8c0: V801 = 0x5
0x8c3: V802 = S[0x5]
0x8c4: V803 = CALLER
0x8c7: V804 = 0xff
0x8ca: V805 = AND S0 0xff
0x8cd: V806 = LT V805 V802
0x8ce: V807 = 0x8d3
0x8d1: JUMPI 0x8d3 V806
---
Entry stack: [V13, 0x14e, V189, 0x0, S1, S0]
Stack pops: 1
Stack additions: [S0, V803, 0x5, V805]
Exit stack: [V13, 0x14e, V189, 0x0, S1, S0, V803, 0x5, V805]

================================

Block 0x8d2
[0x8d2:0x8d2]
---
Predecessors: [0x8c0]
Successors: []
---
0x8d2 INVALID
---
0x8d2: INVALID 
---
Entry stack: [V13, 0x14e, V189, 0x0, S4, S3, V803, 0x5, V805]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x14e, V189, 0x0, S4, S3, V803, 0x5, V805]

================================

Block 0x8d3
[0x8d3:0x8ee]
---
Predecessors: [0x8c0]
Successors: [0x8ef, 0x8f5]
---
0x8d3 JUMPDEST
0x8d4 PUSH1 0x0
0x8d6 SWAP2
0x8d7 DUP3
0x8d8 MSTORE
0x8d9 PUSH1 0x20
0x8db SWAP1
0x8dc SWAP2
0x8dd SHA3
0x8de ADD
0x8df SLOAD
0x8e0 PUSH1 0x1
0x8e2 PUSH1 0xa0
0x8e4 PUSH1 0x2
0x8e6 EXP
0x8e7 SUB
0x8e8 AND
0x8e9 EQ
0x8ea ISZERO
0x8eb PUSH2 0x8f5
0x8ee JUMPI
---
0x8d3: JUMPDEST 
0x8d4: V808 = 0x0
0x8d8: M[0x0] = 0x5
0x8d9: V809 = 0x20
0x8dd: V810 = SHA3 0x0 0x20
0x8de: V811 = ADD V810 V805
0x8df: V812 = S[V811]
0x8e0: V813 = 0x1
0x8e2: V814 = 0xa0
0x8e4: V815 = 0x2
0x8e6: V816 = EXP 0x2 0xa0
0x8e7: V817 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8e8: V818 = AND 0xffffffffffffffffffffffffffffffffffffffff V812
0x8e9: V819 = EQ V818 V803
0x8ea: V820 = ISZERO V819
0x8eb: V821 = 0x8f5
0x8ee: JUMPI 0x8f5 V820
---
Entry stack: [V13, 0x14e, V189, 0x0, S4, S3, V803, 0x5, V805]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0x14e, V189, 0x0, S4, S3]

================================

Block 0x8ef
[0x8ef:0x8f4]
---
Predecessors: [0x8d3]
Successors: [0x8f5]
---
0x8ef DUP2
0x8f0 PUSH1 0x1
0x8f2 OR
0x8f3 SWAP2
0x8f4 POP
---
0x8f0: V822 = 0x1
0x8f2: V823 = OR 0x1 S1
---
Entry stack: [V13, 0x14e, V189, 0x0, S1, S0]
Stack pops: 2
Stack additions: [V823, S0]
Exit stack: [V13, 0x14e, V189, 0x0, V823, S0]

================================

Block 0x8f5
[0x8f5:0x8fc]
---
Predecessors: [0x8d3, 0x8ef]
Successors: [0x8b2]
---
0x8f5 JUMPDEST
0x8f6 PUSH1 0x1
0x8f8 ADD
0x8f9 PUSH2 0x8b2
0x8fc JUMP
---
0x8f5: JUMPDEST 
0x8f6: V824 = 0x1
0x8f8: V825 = ADD 0x1 S0
0x8f9: V826 = 0x8b2
0x8fc: JUMP 0x8b2
---
Entry stack: [V13, 0x14e, V189, 0x0, S1, S0]
Stack pops: 1
Stack additions: [V825]
Exit stack: [V13, 0x14e, V189, 0x0, S1, V825]

================================

Block 0x8fd
[0x8fd:0x908]
---
Predecessors: [0x8b2]
Successors: [0x909, 0x90d]
---
0x8fd JUMPDEST
0x8fe PUSH1 0x1
0x900 PUSH1 0xff
0x902 DUP4
0x903 AND
0x904 EQ
0x905 PUSH2 0x90d
0x908 JUMPI
---
0x8fd: JUMPDEST 
0x8fe: V827 = 0x1
0x900: V828 = 0xff
0x903: V829 = AND S1 0xff
0x904: V830 = EQ V829 0x1
0x905: V831 = 0x90d
0x908: JUMPI 0x90d V830
---
Entry stack: [V13, 0x14e, V189, 0x0, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x14e, V189, 0x0, S1, S0]

================================

Block 0x909
[0x909:0x90c]
---
Predecessors: [0x8fd]
Successors: []
---
0x909 PUSH1 0x0
0x90b DUP1
0x90c REVERT
---
0x909: V832 = 0x0
0x90c: REVERT 0x0 0x0
---
Entry stack: [V13, 0x14e, V189, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x14e, V189, 0x0, S1, S0]

================================

Block 0x90d
[0x90d:0x911]
---
Predecessors: [0x8fd]
Successors: [0x912]
---
0x90d JUMPDEST
0x90e PUSH1 0x0
0x910 SWAP3
0x911 POP
---
0x90d: JUMPDEST 
0x90e: V833 = 0x0
---
Entry stack: [V13, 0x14e, V189, 0x0, S1, S0]
Stack pops: 3
Stack additions: [0x0, S1, S0]
Exit stack: [V13, 0x14e, V189, 0x0, S1, S0]

================================

Block 0x912
[0x912:0x91c]
---
Predecessors: [0x90d, 0x92d]
Successors: [0x91d, 0x95b]
---
0x912 JUMPDEST
0x913 PUSH1 0x4
0x915 SLOAD
0x916 DUP4
0x917 LT
0x918 ISZERO
0x919 PUSH2 0x95b
0x91c JUMPI
---
0x912: JUMPDEST 
0x913: V834 = 0x4
0x915: V835 = S[0x4]
0x917: V836 = LT S2 V835
0x918: V837 = ISZERO V836
0x919: V838 = 0x95b
0x91c: JUMPI 0x95b V837
---
Entry stack: [V13, 0x14e, V189, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x14e, V189, S2, S1, S0]

================================

Block 0x91d
[0x91d:0x92b]
---
Predecessors: [0x912]
Successors: [0x92c, 0x92d]
---
0x91d PUSH1 0x0
0x91f PUSH1 0x4
0x921 DUP5
0x922 DUP2
0x923 SLOAD
0x924 DUP2
0x925 LT
0x926 ISZERO
0x927 ISZERO
0x928 PUSH2 0x92d
0x92b JUMPI
---
0x91d: V839 = 0x0
0x91f: V840 = 0x4
0x923: V841 = S[0x4]
0x925: V842 = LT S2 V841
0x926: V843 = ISZERO V842
0x927: V844 = ISZERO V843
0x928: V845 = 0x92d
0x92b: JUMPI 0x92d V844
---
Entry stack: [V13, 0x14e, V189, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, 0x4, S2]
Exit stack: [V13, 0x14e, V189, S2, S1, S0, 0x0, 0x4, S2]

================================

Block 0x92c
[0x92c:0x92c]
---
Predecessors: [0x91d]
Successors: []
---
0x92c INVALID
---
0x92c: INVALID 
---
Entry stack: [V13, 0x14e, V189, S5, S4, S3, 0x0, 0x4, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x14e, V189, S5, S4, S3, 0x0, 0x4, S0]

================================

Block 0x92d
[0x92d:0x95a]
---
Predecessors: [0x91d]
Successors: [0x912]
---
0x92d JUMPDEST
0x92e PUSH1 0x0
0x930 SWAP2
0x931 DUP3
0x932 MSTORE
0x933 PUSH1 0x20
0x935 SWAP1
0x936 SWAP2
0x937 SHA3
0x938 PUSH1 0x3
0x93a SWAP1
0x93b SWAP2
0x93c MUL
0x93d ADD
0x93e PUSH1 0x2
0x940 ADD
0x941 DUP1
0x942 SLOAD
0x943 PUSH1 0xff
0x945 NOT
0x946 AND
0x947 SWAP2
0x948 ISZERO
0x949 ISZERO
0x94a SWAP2
0x94b SWAP1
0x94c SWAP2
0x94d OR
0x94e SWAP1
0x94f SSTORE
0x950 PUSH1 0x1
0x952 SWAP3
0x953 SWAP1
0x954 SWAP3
0x955 ADD
0x956 SWAP2
0x957 PUSH2 0x912
0x95a JUMP
---
0x92d: JUMPDEST 
0x92e: V846 = 0x0
0x932: M[0x0] = 0x4
0x933: V847 = 0x20
0x937: V848 = SHA3 0x0 0x20
0x938: V849 = 0x3
0x93c: V850 = MUL S0 0x3
0x93d: V851 = ADD V850 V848
0x93e: V852 = 0x2
0x940: V853 = ADD 0x2 V851
0x942: V854 = S[V853]
0x943: V855 = 0xff
0x945: V856 = NOT 0xff
0x946: V857 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V854
0x948: V858 = ISZERO 0x0
0x949: V859 = ISZERO 0x1
0x94d: V860 = OR 0x0 V857
0x94f: S[V853] = V860
0x950: V861 = 0x1
0x955: V862 = ADD 0x1 S5
0x957: V863 = 0x912
0x95a: JUMP 0x912
---
Entry stack: [V13, 0x14e, V189, S5, S4, S3, 0x0, 0x4, S0]
Stack pops: 6
Stack additions: [V862, S4, S3]
Exit stack: [V13, 0x14e, V189, V862, S4, S3]

================================

Block 0x95b
[0x95b:0x96c]
---
Predecessors: [0x912]
Successors: [0x14e]
---
0x95b JUMPDEST
0x95c POP
0x95d POP
0x95e POP
0x95f PUSH1 0x1
0x961 SSTORE
0x962 PUSH1 0x8
0x964 DUP1
0x965 SLOAD
0x966 PUSH1 0xff
0x968 NOT
0x969 AND
0x96a SWAP1
0x96b SSTORE
0x96c JUMP
---
0x95b: JUMPDEST 
0x95f: V864 = 0x1
0x961: S[0x1] = V189
0x962: V865 = 0x8
0x965: V866 = S[0x8]
0x966: V867 = 0xff
0x968: V868 = NOT 0xff
0x969: V869 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V866
0x96b: S[0x8] = V869
0x96c: JUMP 0x14e
---
Entry stack: [V13, 0x14e, V189, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V13]

================================

Block 0x96d
[0x96d:0x972]
---
Predecessors: [0x255]
Successors: [0x17d]
---
0x96d JUMPDEST
0x96e PUSH1 0x6
0x970 SLOAD
0x971 DUP2
0x972 JUMP
---
0x96d: JUMPDEST 
0x96e: V870 = 0x6
0x970: V871 = S[0x6]
0x972: JUMP 0x17d
---
Entry stack: [V13, 0x17d]
Stack pops: 1
Stack additions: [S0, V871]
Exit stack: [V13, 0x17d, V871]

================================

Block 0x973
[0x973:0x978]
---
Predecessors: [0x26a]
Successors: [0x17d]
---
0x973 JUMPDEST
0x974 PUSH1 0x3
0x976 SLOAD
0x977 DUP2
0x978 JUMP
---
0x973: JUMPDEST 
0x974: V872 = 0x3
0x976: V873 = S[0x3]
0x978: JUMP 0x17d
---
Entry stack: [V13, 0x17d]
Stack pops: 1
Stack additions: [S0, V873]
Exit stack: [V13, 0x17d, V873]

================================

Block 0x979
[0x979:0x97d]
---
Predecessors: [0x27f, 0x357]
Successors: [0x97e]
---
0x979 JUMPDEST
0x97a PUSH1 0x0
0x97c DUP1
0x97d DUP1
---
0x979: JUMPDEST 
0x97a: V874 = 0x0
---
Entry stack: [V13, 0x14e, S2, S1, {0x125, 0x35f}]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V13, 0x14e, S2, S1, {0x125, 0x35f}, 0x0, 0x0, 0x0]

================================

Block 0x97e
[0x97e:0x98b]
---
Predecessors: [0x979, 0x9c1]
Successors: [0x98c, 0x9c9]
---
0x97e JUMPDEST
0x97f PUSH1 0x5
0x981 SLOAD
0x982 PUSH1 0xff
0x984 DUP3
0x985 AND
0x986 LT
0x987 ISZERO
0x988 PUSH2 0x9c9
0x98b JUMPI
---
0x97e: JUMPDEST 
0x97f: V875 = 0x5
0x981: V876 = S[0x5]
0x982: V877 = 0xff
0x985: V878 = AND S0 0xff
0x986: V879 = LT V878 V876
0x987: V880 = ISZERO V879
0x988: V881 = 0x9c9
0x98b: JUMPI 0x9c9 V880
---
Entry stack: [V13, 0x14e, {0x0, 0x1}, S4, {0x125, 0x35f}, 0x0, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x14e, {0x0, 0x1}, S4, {0x125, 0x35f}, 0x0, S1, S0]

================================

Block 0x98c
[0x98c:0x99d]
---
Predecessors: [0x97e]
Successors: [0x99e, 0x99f]
---
0x98c PUSH1 0x5
0x98e DUP1
0x98f SLOAD
0x990 CALLER
0x991 SWAP2
0x992 SWAP1
0x993 PUSH1 0xff
0x995 DUP5
0x996 AND
0x997 SWAP1
0x998 DUP2
0x999 LT
0x99a PUSH2 0x99f
0x99d JUMPI
---
0x98c: V882 = 0x5
0x98f: V883 = S[0x5]
0x990: V884 = CALLER
0x993: V885 = 0xff
0x996: V886 = AND S0 0xff
0x999: V887 = LT V886 V883
0x99a: V888 = 0x99f
0x99d: JUMPI 0x99f V887
---
Entry stack: [V13, 0x14e, {0x0, 0x1}, S4, {0x125, 0x35f}, 0x0, {0x0, 0x1}, S0]
Stack pops: 1
Stack additions: [S0, V884, 0x5, V886]
Exit stack: [V13, 0x14e, {0x0, 0x1}, S4, {0x125, 0x35f}, 0x0, {0x0, 0x1}, S0, V884, 0x5, V886]

================================

Block 0x99e
[0x99e:0x99e]
---
Predecessors: [0x98c]
Successors: []
---
0x99e INVALID
---
0x99e: INVALID 
---
Entry stack: [V13, 0x14e, {0x0, 0x1}, S7, {0x125, 0x35f}, 0x0, {0x0, 0x1}, S3, V884, 0x5, V886]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x14e, {0x0, 0x1}, S7, {0x125, 0x35f}, 0x0, {0x0, 0x1}, S3, V884, 0x5, V886]

================================

Block 0x99f
[0x99f:0x9ba]
---
Predecessors: [0x98c]
Successors: [0x9bb, 0x9c1]
---
0x99f JUMPDEST
0x9a0 PUSH1 0x0
0x9a2 SWAP2
0x9a3 DUP3
0x9a4 MSTORE
0x9a5 PUSH1 0x20
0x9a7 SWAP1
0x9a8 SWAP2
0x9a9 SHA3
0x9aa ADD
0x9ab SLOAD
0x9ac PUSH1 0x1
0x9ae PUSH1 0xa0
0x9b0 PUSH1 0x2
0x9b2 EXP
0x9b3 SUB
0x9b4 AND
0x9b5 EQ
0x9b6 ISZERO
0x9b7 PUSH2 0x9c1
0x9ba JUMPI
---
0x99f: JUMPDEST 
0x9a0: V889 = 0x0
0x9a4: M[0x0] = 0x5
0x9a5: V890 = 0x20
0x9a9: V891 = SHA3 0x0 0x20
0x9aa: V892 = ADD V891 V886
0x9ab: V893 = S[V892]
0x9ac: V894 = 0x1
0x9ae: V895 = 0xa0
0x9b0: V896 = 0x2
0x9b2: V897 = EXP 0x2 0xa0
0x9b3: V898 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9b4: V899 = AND 0xffffffffffffffffffffffffffffffffffffffff V893
0x9b5: V900 = EQ V899 V884
0x9b6: V901 = ISZERO V900
0x9b7: V902 = 0x9c1
0x9ba: JUMPI 0x9c1 V901
---
Entry stack: [V13, 0x14e, {0x0, 0x1}, S7, {0x125, 0x35f}, 0x0, {0x0, 0x1}, S3, V884, 0x5, V886]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0x14e, {0x0, 0x1}, S7, {0x125, 0x35f}, 0x0, {0x0, 0x1}, S3]

================================

Block 0x9bb
[0x9bb:0x9c0]
---
Predecessors: [0x99f]
Successors: [0x9c1]
---
0x9bb DUP2
0x9bc PUSH1 0x1
0x9be OR
0x9bf SWAP2
0x9c0 POP
---
0x9bc: V903 = 0x1
0x9be: V904 = OR 0x1 {0x0, 0x1}
---
Entry stack: [V13, 0x14e, {0x0, 0x1}, S4, {0x125, 0x35f}, 0x0, {0x0, 0x1}, S0]
Stack pops: 2
Stack additions: [V904, S0]
Exit stack: [V13, 0x14e, {0x0, 0x1}, S4, {0x125, 0x35f}, 0x0, V904, S0]

================================

Block 0x9c1
[0x9c1:0x9c8]
---
Predecessors: [0x99f, 0x9bb]
Successors: [0x97e]
---
0x9c1 JUMPDEST
0x9c2 PUSH1 0x1
0x9c4 ADD
0x9c5 PUSH2 0x97e
0x9c8 JUMP
---
0x9c1: JUMPDEST 
0x9c2: V905 = 0x1
0x9c4: V906 = ADD 0x1 S0
0x9c5: V907 = 0x97e
0x9c8: JUMP 0x97e
---
Entry stack: [V13, 0x14e, {0x0, 0x1}, S4, {0x125, 0x35f}, 0x0, S1, S0]
Stack pops: 1
Stack additions: [V906]
Exit stack: [V13, 0x14e, {0x0, 0x1}, S4, {0x125, 0x35f}, 0x0, S1, V906]

================================

Block 0x9c9
[0x9c9:0x9d4]
---
Predecessors: [0x97e]
Successors: [0x9d5, 0x9d9]
---
0x9c9 JUMPDEST
0x9ca PUSH1 0x1
0x9cc PUSH1 0xff
0x9ce DUP4
0x9cf AND
0x9d0 EQ
0x9d1 PUSH2 0x9d9
0x9d4 JUMPI
---
0x9c9: JUMPDEST 
0x9ca: V908 = 0x1
0x9cc: V909 = 0xff
0x9cf: V910 = AND {0x0, 0x1} 0xff
0x9d0: V911 = EQ V910 0x1
0x9d1: V912 = 0x9d9
0x9d4: JUMPI 0x9d9 V911
---
Entry stack: [V13, 0x14e, {0x0, 0x1}, S4, {0x125, 0x35f}, 0x0, {0x0, 0x1}, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x14e, {0x0, 0x1}, S4, {0x125, 0x35f}, 0x0, {0x0, 0x1}, S0]

================================

Block 0x9d5
[0x9d5:0x9d8]
---
Predecessors: [0x9c9]
Successors: []
---
0x9d5 PUSH1 0x0
0x9d7 DUP1
0x9d8 REVERT
---
0x9d5: V913 = 0x0
0x9d8: REVERT 0x0 0x0
---
Entry stack: [V13, 0x14e, {0x0, 0x1}, S4, {0x125, 0x35f}, 0x0, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x14e, {0x0, 0x1}, S4, {0x125, 0x35f}, 0x0, {0x0, 0x1}, S0]

================================

Block 0x9d9
[0x9d9:0xa49]
---
Predecessors: [0x9c9]
Successors: [0xa4a, 0xa4e]
---
0x9d9 JUMPDEST
0x9da PUSH1 0x0
0x9dc DUP1
0x9dd SLOAD
0x9de PUSH1 0x2
0x9e0 SLOAD
0x9e1 PUSH1 0x40
0x9e3 DUP1
0x9e4 MLOAD
0x9e5 PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0xa06 DUP2
0xa07 MSTORE
0xa08 ADDRESS
0xa09 PUSH1 0x4
0xa0b DUP3
0xa0c ADD
0xa0d MSTORE
0xa0e SWAP1
0xa0f MLOAD
0xa10 PUSH1 0x1
0xa12 PUSH1 0xa0
0xa14 PUSH1 0x2
0xa16 EXP
0xa17 SUB
0xa18 SWAP4
0xa19 DUP5
0xa1a AND
0xa1b SWAP5
0xa1c PUSH4 0xa9059cbb
0xa21 SWAP5
0xa22 SWAP1
0xa23 SWAP4
0xa24 AND
0xa25 SWAP3
0xa26 DUP6
0xa27 SWAP3
0xa28 PUSH4 0x70a08231
0xa2d SWAP3
0xa2e PUSH1 0x24
0xa30 DUP1
0xa31 DUP4
0xa32 ADD
0xa33 SWAP4
0xa34 PUSH1 0x20
0xa36 SWAP4
0xa37 DUP4
0xa38 SWAP1
0xa39 SUB
0xa3a SWAP1
0xa3b SWAP2
0xa3c ADD
0xa3d SWAP1
0xa3e DUP3
0xa3f SWAP1
0xa40 DUP8
0xa41 DUP1
0xa42 EXTCODESIZE
0xa43 ISZERO
0xa44 DUP1
0xa45 ISZERO
0xa46 PUSH2 0xa4e
0xa49 JUMPI
---
0x9d9: JUMPDEST 
0x9da: V914 = 0x0
0x9dd: V915 = S[0x0]
0x9de: V916 = 0x2
0x9e0: V917 = S[0x2]
0x9e1: V918 = 0x40
0x9e4: V919 = M[0x40]
0x9e5: V920 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xa07: M[V919] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xa08: V921 = ADDRESS
0xa09: V922 = 0x4
0xa0c: V923 = ADD V919 0x4
0xa0d: M[V923] = V921
0xa0f: V924 = M[0x40]
0xa10: V925 = 0x1
0xa12: V926 = 0xa0
0xa14: V927 = 0x2
0xa16: V928 = EXP 0x2 0xa0
0xa17: V929 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa1a: V930 = AND 0xffffffffffffffffffffffffffffffffffffffff V915
0xa1c: V931 = 0xa9059cbb
0xa24: V932 = AND V917 0xffffffffffffffffffffffffffffffffffffffff
0xa28: V933 = 0x70a08231
0xa2e: V934 = 0x24
0xa32: V935 = ADD V919 0x24
0xa34: V936 = 0x20
0xa39: V937 = SUB V919 V924
0xa3c: V938 = ADD 0x24 V937
0xa42: V939 = EXTCODESIZE V930
0xa43: V940 = ISZERO V939
0xa45: V941 = ISZERO V940
0xa46: V942 = 0xa4e
0xa49: JUMPI 0xa4e V941
---
Entry stack: [V13, 0x14e, {0x0, 0x1}, S4, {0x125, 0x35f}, 0x0, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: [V930, 0xa9059cbb, V932, V930, 0x70a08231, V935, 0x20, V924, V938, V924, 0x0, V930, V940]
Exit stack: [V13, 0x14e, {0x0, 0x1}, S4, {0x125, 0x35f}, 0x0, {0x0, 0x1}, S0, V930, 0xa9059cbb, V932, V930, 0x70a08231, V935, 0x20, V924, V938, V924, 0x0, V930, V940]

================================

Block 0xa4a
[0xa4a:0xa4d]
---
Predecessors: [0x9d9]
Successors: []
---
0xa4a PUSH1 0x0
0xa4c DUP1
0xa4d REVERT
---
0xa4a: V943 = 0x0
0xa4d: REVERT 0x0 0x0
---
Entry stack: [V13, 0x14e, {0x0, 0x1}, S17, {0x125, 0x35f}, 0x0, {0x0, 0x1}, S13, V930, 0xa9059cbb, V932, V930, 0x70a08231, V935, 0x20, V924, V938, V924, 0x0, V930, V940]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x14e, {0x0, 0x1}, S17, {0x125, 0x35f}, 0x0, {0x0, 0x1}, S13, V930, 0xa9059cbb, V932, V930, 0x70a08231, V935, 0x20, V924, V938, V924, 0x0, V930, V940]

================================

Block 0xa4e
[0xa4e:0xa58]
---
Predecessors: [0x9d9]
Successors: [0xa59, 0xa62]
---
0xa4e JUMPDEST
0xa4f POP
0xa50 GAS
0xa51 CALL
0xa52 ISZERO
0xa53 DUP1
0xa54 ISZERO
0xa55 PUSH2 0xa62
0xa58 JUMPI
---
0xa4e: JUMPDEST 
0xa50: V944 = GAS
0xa51: V945 = CALL V944 V930 0x0 V924 V938 V924 0x20
0xa52: V946 = ISZERO V945
0xa54: V947 = ISZERO V946
0xa55: V948 = 0xa62
0xa58: JUMPI 0xa62 V947
---
Entry stack: [V13, 0x14e, {0x0, 0x1}, S17, {0x125, 0x35f}, 0x0, {0x0, 0x1}, S13, V930, 0xa9059cbb, V932, V930, 0x70a08231, V935, 0x20, V924, V938, V924, 0x0, V930, V940]
Stack pops: 7
Stack additions: [V946]
Exit stack: [V13, 0x14e, {0x0, 0x1}, S17, {0x125, 0x35f}, 0x0, {0x0, 0x1}, S13, V930, 0xa9059cbb, V932, V930, 0x70a08231, V935, V946]

================================

Block 0xa59
[0xa59:0xa61]
---
Predecessors: [0xa4e]
Successors: []
---
0xa59 RETURNDATASIZE
0xa5a PUSH1 0x0
0xa5c DUP1
0xa5d RETURNDATACOPY
0xa5e RETURNDATASIZE
0xa5f PUSH1 0x0
0xa61 REVERT
---
0xa59: V949 = RETURNDATASIZE
0xa5a: V950 = 0x0
0xa5d: RETURNDATACOPY 0x0 0x0 V949
0xa5e: V951 = RETURNDATASIZE
0xa5f: V952 = 0x0
0xa61: REVERT 0x0 V951
---
Entry stack: [V13, 0x14e, {0x0, 0x1}, S11, {0x125, 0x35f}, 0x0, {0x0, 0x1}, S7, S6, 0xa9059cbb, S4, S3, 0x70a08231, S1, V946]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x14e, {0x0, 0x1}, S11, {0x125, 0x35f}, 0x0, {0x0, 0x1}, S7, S6, 0xa9059cbb, S4, S3, 0x70a08231, S1, V946]

================================

Block 0xa62
[0xa62:0xa73]
---
Predecessors: [0xa4e]
Successors: [0xa74, 0xa78]
---
0xa62 JUMPDEST
0xa63 POP
0xa64 POP
0xa65 POP
0xa66 POP
0xa67 PUSH1 0x40
0xa69 MLOAD
0xa6a RETURNDATASIZE
0xa6b PUSH1 0x20
0xa6d DUP2
0xa6e LT
0xa6f ISZERO
0xa70 PUSH2 0xa78
0xa73 JUMPI
---
0xa62: JUMPDEST 
0xa67: V953 = 0x40
0xa69: V954 = M[0x40]
0xa6a: V955 = RETURNDATASIZE
0xa6b: V956 = 0x20
0xa6e: V957 = LT V955 0x20
0xa6f: V958 = ISZERO V957
0xa70: V959 = 0xa78
0xa73: JUMPI 0xa78 V958
---
Entry stack: [V13, 0x14e, {0x0, 0x1}, S11, {0x125, 0x35f}, 0x0, {0x0, 0x1}, S7, S6, 0xa9059cbb, S4, S3, 0x70a08231, S1, V946]
Stack pops: 4
Stack additions: [V954, V955]
Exit stack: [V13, 0x14e, {0x0, 0x1}, S11, {0x125, 0x35f}, 0x0, {0x0, 0x1}, S7, S6, 0xa9059cbb, S4, V954, V955]

================================

Block 0xa74
[0xa74:0xa77]
---
Predecessors: [0xa62]
Successors: []
---
0xa74 PUSH1 0x0
0xa76 DUP1
0xa77 REVERT
---
0xa74: V960 = 0x0
0xa77: REVERT 0x0 0x0
---
Entry stack: [V13, 0x14e, {0x0, 0x1}, S9, {0x125, 0x35f}, 0x0, {0x0, 0x1}, S5, S4, 0xa9059cbb, S2, V954, V955]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x14e, {0x0, 0x1}, S9, {0x125, 0x35f}, 0x0, {0x0, 0x1}, S5, S4, 0xa9059cbb, S2, V954, V955]

================================

Block 0xa78
[0xa78:0xac2]
---
Predecessors: [0xa62]
Successors: [0xac3, 0xac7]
---
0xa78 JUMPDEST
0xa79 POP
0xa7a MLOAD
0xa7b PUSH1 0x40
0xa7d DUP1
0xa7e MLOAD
0xa7f PUSH1 0xe0
0xa81 PUSH1 0x2
0xa83 EXP
0xa84 PUSH4 0xffffffff
0xa89 DUP7
0xa8a AND
0xa8b MUL
0xa8c DUP2
0xa8d MSTORE
0xa8e PUSH1 0x1
0xa90 PUSH1 0xa0
0xa92 PUSH1 0x2
0xa94 EXP
0xa95 SUB
0xa96 SWAP1
0xa97 SWAP4
0xa98 AND
0xa99 PUSH1 0x4
0xa9b DUP5
0xa9c ADD
0xa9d MSTORE
0xa9e PUSH1 0x24
0xaa0 DUP4
0xaa1 ADD
0xaa2 SWAP2
0xaa3 SWAP1
0xaa4 SWAP2
0xaa5 MSTORE
0xaa6 MLOAD
0xaa7 PUSH1 0x44
0xaa9 DUP1
0xaaa DUP4
0xaab ADD
0xaac SWAP3
0xaad PUSH1 0x20
0xaaf SWAP3
0xab0 SWAP2
0xab1 SWAP1
0xab2 DUP3
0xab3 SWAP1
0xab4 SUB
0xab5 ADD
0xab6 DUP2
0xab7 PUSH1 0x0
0xab9 DUP8
0xaba DUP1
0xabb EXTCODESIZE
0xabc ISZERO
0xabd DUP1
0xabe ISZERO
0xabf PUSH2 0xac7
0xac2 JUMPI
---
0xa78: JUMPDEST 
0xa7a: V961 = M[V954]
0xa7b: V962 = 0x40
0xa7e: V963 = M[0x40]
0xa7f: V964 = 0xe0
0xa81: V965 = 0x2
0xa83: V966 = EXP 0x2 0xe0
0xa84: V967 = 0xffffffff
0xa8a: V968 = AND 0xa9059cbb 0xffffffff
0xa8b: V969 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xa8d: M[V963] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xa8e: V970 = 0x1
0xa90: V971 = 0xa0
0xa92: V972 = 0x2
0xa94: V973 = EXP 0x2 0xa0
0xa95: V974 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa98: V975 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xa99: V976 = 0x4
0xa9c: V977 = ADD V963 0x4
0xa9d: M[V977] = V975
0xa9e: V978 = 0x24
0xaa1: V979 = ADD V963 0x24
0xaa5: M[V979] = V961
0xaa6: V980 = M[0x40]
0xaa7: V981 = 0x44
0xaab: V982 = ADD V963 0x44
0xaad: V983 = 0x20
0xab4: V984 = SUB V963 V980
0xab5: V985 = ADD V984 0x44
0xab7: V986 = 0x0
0xabb: V987 = EXTCODESIZE S4
0xabc: V988 = ISZERO V987
0xabe: V989 = ISZERO V988
0xabf: V990 = 0xac7
0xac2: JUMPI 0xac7 V989
---
Entry stack: [V13, 0x14e, {0x0, 0x1}, S9, {0x125, 0x35f}, 0x0, {0x0, 0x1}, S5, S4, 0xa9059cbb, S2, V954, V955]
Stack pops: 5
Stack additions: [S4, S3, V982, 0x20, V980, V985, V980, 0x0, S4, V988]
Exit stack: [V13, 0x14e, {0x0, 0x1}, S9, {0x125, 0x35f}, 0x0, {0x0, 0x1}, S5, S4, 0xa9059cbb, V982, 0x20, V980, V985, V980, 0x0, S4, V988]

================================

Block 0xac3
[0xac3:0xac6]
---
Predecessors: [0xa78]
Successors: []
---
0xac3 PUSH1 0x0
0xac5 DUP1
0xac6 REVERT
---
0xac3: V991 = 0x0
0xac6: REVERT 0x0 0x0
---
Entry stack: [V13, 0x14e, {0x0, 0x1}, S14, {0x125, 0x35f}, 0x0, {0x0, 0x1}, S10, S9, 0xa9059cbb, V982, 0x20, V980, V985, V980, 0x0, S1, V988]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x14e, {0x0, 0x1}, S14, {0x125, 0x35f}, 0x0, {0x0, 0x1}, S10, S9, 0xa9059cbb, V982, 0x20, V980, V985, V980, 0x0, S1, V988]

================================

Block 0xac7
[0xac7:0xad1]
---
Predecessors: [0xa78]
Successors: [0xad2, 0xadb]
---
0xac7 JUMPDEST
0xac8 POP
0xac9 GAS
0xaca CALL
0xacb ISZERO
0xacc DUP1
0xacd ISZERO
0xace PUSH2 0xadb
0xad1 JUMPI
---
0xac7: JUMPDEST 
0xac9: V992 = GAS
0xaca: V993 = CALL V992 S1 0x0 V980 V985 V980 0x20
0xacb: V994 = ISZERO V993
0xacd: V995 = ISZERO V994
0xace: V996 = 0xadb
0xad1: JUMPI 0xadb V995
---
Entry stack: [V13, 0x14e, {0x0, 0x1}, S14, {0x125, 0x35f}, 0x0, {0x0, 0x1}, S10, S9, 0xa9059cbb, V982, 0x20, V980, V985, V980, 0x0, S1, V988]
Stack pops: 7
Stack additions: [V994]
Exit stack: [V13, 0x14e, {0x0, 0x1}, S14, {0x125, 0x35f}, 0x0, {0x0, 0x1}, S10, S9, 0xa9059cbb, V982, V994]

================================

Block 0xad2
[0xad2:0xada]
---
Predecessors: [0xac7]
Successors: []
---
0xad2 RETURNDATASIZE
0xad3 PUSH1 0x0
0xad5 DUP1
0xad6 RETURNDATACOPY
0xad7 RETURNDATASIZE
0xad8 PUSH1 0x0
0xada REVERT
---
0xad2: V997 = RETURNDATASIZE
0xad3: V998 = 0x0
0xad6: RETURNDATACOPY 0x0 0x0 V997
0xad7: V999 = RETURNDATASIZE
0xad8: V1000 = 0x0
0xada: REVERT 0x0 V999
---
Entry stack: [V13, 0x14e, {0x0, 0x1}, S8, {0x125, 0x35f}, 0x0, {0x0, 0x1}, S4, S3, 0xa9059cbb, S1, V994]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x14e, {0x0, 0x1}, S8, {0x125, 0x35f}, 0x0, {0x0, 0x1}, S4, S3, 0xa9059cbb, S1, V994]

================================

Block 0xadb
[0xadb:0xaec]
---
Predecessors: [0xac7]
Successors: [0xaed, 0xaf1]
---
0xadb JUMPDEST
0xadc POP
0xadd POP
0xade POP
0xadf POP
0xae0 PUSH1 0x40
0xae2 MLOAD
0xae3 RETURNDATASIZE
0xae4 PUSH1 0x20
0xae6 DUP2
0xae7 LT
0xae8 ISZERO
0xae9 PUSH2 0xaf1
0xaec JUMPI
---
0xadb: JUMPDEST 
0xae0: V1001 = 0x40
0xae2: V1002 = M[0x40]
0xae3: V1003 = RETURNDATASIZE
0xae4: V1004 = 0x20
0xae7: V1005 = LT V1003 0x20
0xae8: V1006 = ISZERO V1005
0xae9: V1007 = 0xaf1
0xaec: JUMPI 0xaf1 V1006
---
Entry stack: [V13, 0x14e, {0x0, 0x1}, S8, {0x125, 0x35f}, 0x0, {0x0, 0x1}, S4, S3, 0xa9059cbb, S1, V994]
Stack pops: 4
Stack additions: [V1002, V1003]
Exit stack: [V13, 0x14e, {0x0, 0x1}, S8, {0x125, 0x35f}, 0x0, {0x0, 0x1}, S4, V1002, V1003]

================================

Block 0xaed
[0xaed:0xaf0]
---
Predecessors: [0xadb]
Successors: []
---
0xaed PUSH1 0x0
0xaef DUP1
0xaf0 REVERT
---
0xaed: V1008 = 0x0
0xaf0: REVERT 0x0 0x0
---
Entry stack: [V13, 0x14e, {0x0, 0x1}, S6, {0x125, 0x35f}, 0x0, {0x0, 0x1}, S2, V1002, V1003]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x14e, {0x0, 0x1}, S6, {0x125, 0x35f}, 0x0, {0x0, 0x1}, S2, V1002, V1003]

================================

Block 0xaf1
[0xaf1:0xaf9]
---
Predecessors: [0xadb]
Successors: [0xafa, 0xafe]
---
0xaf1 JUMPDEST
0xaf2 POP
0xaf3 MLOAD
0xaf4 ISZERO
0xaf5 ISZERO
0xaf6 PUSH2 0xafe
0xaf9 JUMPI
---
0xaf1: JUMPDEST 
0xaf3: V1009 = M[V1002]
0xaf4: V1010 = ISZERO V1009
0xaf5: V1011 = ISZERO V1010
0xaf6: V1012 = 0xafe
0xaf9: JUMPI 0xafe V1011
---
Entry stack: [V13, 0x14e, {0x0, 0x1}, S6, {0x125, 0x35f}, 0x0, {0x0, 0x1}, S2, V1002, V1003]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0x14e, {0x0, 0x1}, S6, {0x125, 0x35f}, 0x0, {0x0, 0x1}, S2]

================================

Block 0xafa
[0xafa:0xafd]
---
Predecessors: [0xaf1]
Successors: []
---
0xafa PUSH1 0x0
0xafc DUP1
0xafd REVERT
---
0xafa: V1013 = 0x0
0xafd: REVERT 0x0 0x0
---
Entry stack: [V13, 0x14e, {0x0, 0x1}, S4, {0x125, 0x35f}, 0x0, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x14e, {0x0, 0x1}, S4, {0x125, 0x35f}, 0x0, {0x0, 0x1}, S0]

================================

Block 0xafe
[0xafe:0xb2d]
---
Predecessors: [0xaf1]
Successors: [0xb2e, 0xb32]
---
0xafe JUMPDEST
0xaff PUSH1 0x2
0xb01 SLOAD
0xb02 PUSH1 0x40
0xb04 MLOAD
0xb05 PUSH1 0x1
0xb07 PUSH1 0xa0
0xb09 PUSH1 0x2
0xb0b EXP
0xb0c SUB
0xb0d SWAP1
0xb0e SWAP2
0xb0f AND
0xb10 SWAP1
0xb11 ADDRESS
0xb12 BALANCE
0xb13 DUP1
0xb14 ISZERO
0xb15 PUSH2 0x8fc
0xb18 MUL
0xb19 SWAP2
0xb1a PUSH1 0x0
0xb1c DUP2
0xb1d DUP2
0xb1e DUP2
0xb1f DUP6
0xb20 DUP9
0xb21 DUP9
0xb22 CALL
0xb23 SWAP4
0xb24 POP
0xb25 POP
0xb26 POP
0xb27 POP
0xb28 ISZERO
0xb29 ISZERO
0xb2a PUSH2 0xb32
0xb2d JUMPI
---
0xafe: JUMPDEST 
0xaff: V1014 = 0x2
0xb01: V1015 = S[0x2]
0xb02: V1016 = 0x40
0xb04: V1017 = M[0x40]
0xb05: V1018 = 0x1
0xb07: V1019 = 0xa0
0xb09: V1020 = 0x2
0xb0b: V1021 = EXP 0x2 0xa0
0xb0c: V1022 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb0f: V1023 = AND V1015 0xffffffffffffffffffffffffffffffffffffffff
0xb11: V1024 = ADDRESS
0xb12: V1025 = BALANCE V1024
0xb14: V1026 = ISZERO V1025
0xb15: V1027 = 0x8fc
0xb18: V1028 = MUL 0x8fc V1026
0xb1a: V1029 = 0x0
0xb22: V1030 = CALL V1028 V1023 V1025 V1017 0x0 V1017 0x0
0xb28: V1031 = ISZERO V1030
0xb29: V1032 = ISZERO V1031
0xb2a: V1033 = 0xb32
0xb2d: JUMPI 0xb32 V1032
---
Entry stack: [V13, 0x14e, {0x0, 0x1}, S4, {0x125, 0x35f}, 0x0, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x14e, {0x0, 0x1}, S4, {0x125, 0x35f}, 0x0, {0x0, 0x1}, S0]

================================

Block 0xb2e
[0xb2e:0xb31]
---
Predecessors: [0xafe]
Successors: []
---
0xb2e PUSH1 0x0
0xb30 DUP1
0xb31 REVERT
---
0xb2e: V1034 = 0x0
0xb31: REVERT 0x0 0x0
---
Entry stack: [V13, 0x14e, {0x0, 0x1}, S4, {0x125, 0x35f}, 0x0, {0x0, 0x1}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x14e, {0x0, 0x1}, S4, {0x125, 0x35f}, 0x0, {0x0, 0x1}, S0]

================================

Block 0xb32
[0xb32:0xb3a]
---
Predecessors: [0xafe]
Successors: [0x125, 0x35f]
---
0xb32 JUMPDEST
0xb33 PUSH1 0x1
0xb35 SWAP3
0xb36 POP
0xb37 POP
0xb38 POP
0xb39 SWAP1
0xb3a JUMP
---
0xb32: JUMPDEST 
0xb33: V1035 = 0x1
0xb3a: JUMP {0x125, 0x35f}
---
Entry stack: [V13, 0x14e, {0x0, 0x1}, S4, {0x125, 0x35f}, 0x0, {0x0, 0x1}, S0]
Stack pops: 4
Stack additions: [0x1]
Exit stack: [V13, 0x14e, {0x0, 0x1}, S4, 0x1]

================================

Block 0xb3b
[0xb3b:0xb40]
---
Predecessors: [0x294]
Successors: [0x17d]
---
0xb3b JUMPDEST
0xb3c PUSH1 0x1
0xb3e SLOAD
0xb3f DUP2
0xb40 JUMP
---
0xb3b: JUMPDEST 
0xb3c: V1036 = 0x1
0xb3e: V1037 = S[0x1]
0xb40: JUMP 0x17d
---
Entry stack: [V13, 0x17d]
Stack pops: 1
Stack additions: [S0, V1037]
Exit stack: [V13, 0x17d, V1037]

================================

Block 0xb41
[0xb41:0xb46]
---
Predecessors: [0x2a9]
Successors: [0x17d]
---
0xb41 JUMPDEST
0xb42 PUSH1 0x7
0xb44 SLOAD
0xb45 DUP2
0xb46 JUMP
---
0xb41: JUMPDEST 
0xb42: V1038 = 0x7
0xb44: V1039 = S[0x7]
0xb46: JUMP 0x17d
---
Entry stack: [V13, 0x17d]
Stack pops: 1
Stack additions: [S0, V1039]
Exit stack: [V13, 0x17d, V1039]

================================

Block 0xb47
[0xb47:0xb55]
---
Predecessors: [0x2be]
Successors: [0xf4]
---
0xb47 JUMPDEST
0xb48 PUSH1 0x0
0xb4a SLOAD
0xb4b PUSH1 0x1
0xb4d PUSH1 0xa0
0xb4f PUSH1 0x2
0xb51 EXP
0xb52 SUB
0xb53 AND
0xb54 DUP2
0xb55 JUMP
---
0xb47: JUMPDEST 
0xb48: V1040 = 0x0
0xb4a: V1041 = S[0x0]
0xb4b: V1042 = 0x1
0xb4d: V1043 = 0xa0
0xb4f: V1044 = 0x2
0xb51: V1045 = EXP 0x2 0xa0
0xb52: V1046 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb53: V1047 = AND 0xffffffffffffffffffffffffffffffffffffffff V1041
0xb55: JUMP 0xf4
---
Entry stack: [V13, 0xf4]
Stack pops: 1
Stack additions: [S0, V1047]
Exit stack: [V13, 0xf4, V1047]

================================

Block 0xb56
[0xb56:0xb8f]
---
Predecessors: []
Successors: []
---
0xb56 STOP
0xb57 LOG1
0xb58 PUSH6 0x627a7a723058
0xb5f SHA3
0xb60 LOG0
0xb61 SHL
0xb62 MISSING 0x4b
0xb63 MISSING 0xd8
0xb64 EXP
0xb65 XOR
0xb66 MISSING 0x25
0xb67 CALLCODE
0xb68 SWAP10
0xb69 MISSING 0x5c
0xb6a DIV
0xb6b SHL
0xb6c DUP7
0xb6d CODESIZE
0xb6e CREATE
0xb6f SWAP16
0xb70 CALLDATALOAD
0xb71 PUSH30 0x1f3c06a62c643f536e8b54cb47d20029
---
0xb56: STOP 
0xb57: LOG S0 S1 S2
0xb58: V1048 = 0x627a7a723058
0xb5f: V1049 = SHA3 0x627a7a723058 S3
0xb60: LOG V1049 S4
0xb61: V1050 = SHL S5 S6
0xb62: MISSING 0x4b
0xb63: MISSING 0xd8
0xb64: V1051 = EXP S0 S1
0xb65: V1052 = XOR V1051 S2
0xb66: MISSING 0x25
0xb67: V1053 = CALLCODE S0 S1 S2 S3 S4 S5 S6
0xb69: MISSING 0x5c
0xb6a: V1054 = DIV S0 S1
0xb6b: V1055 = SHL V1054 S2
0xb6d: V1056 = CODESIZE
0xb6e: V1057 = CREATE V1056 S8 V1055
0xb70: V1058 = CALLDATALOAD S18
0xb71: V1059 = 0x1f3c06a62c643f536e8b54cb47d20029
---
Entry stack: []
Stack pops: 0
Stack additions: [V1050, V1052, S16, S7, S8, S9, S10, S11, S12, S13, S14, S15, V1053, 0x1f3c06a62c643f536e8b54cb47d20029, V1058, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, V1057]
Exit stack: []

================================

Function 0:
Public function signature: 0x14bfd6d0
Entry block: 0xdc
Exit block: 0xf4
Body: 0xdc, 0xe4, 0xe8, 0xf4, 0x2c7, 0x2d4, 0x2d5

Function 1:
Public function signature: 0x34eac76f
Entry block: 0x110
Exit block: 0x125
Body: 0x110, 0x118, 0x11c, 0x125, 0x2ef

Function 2:
Public function signature: 0x35a063b4
Entry block: 0x139
Exit block: 0x36a
Body: 0x139, 0x141, 0x145, 0x2f8, 0x2fc, 0x30a, 0x31c, 0x31d, 0x339, 0x33f, 0x347, 0x353, 0x357, 0x35f, 0x366, 0x36a

Function 3:
Public function signature: 0x4783c35b
Entry block: 0x150
Exit block: 0xf4
Body: 0xf4, 0x150, 0x158, 0x15c, 0x378

Function 4:
Public function signature: 0x53f754e0
Entry block: 0x165
Exit block: 0x17d
Body: 0x165, 0x16d, 0x171, 0x17d

Function 5:
Public function signature: 0x63037b0c
Entry block: 0x18f
Exit block: 0x1a7
Body: 0x18f, 0x197, 0x19b, 0x1a7, 0x3a1, 0x3ae, 0x3af

Function 6:
Public function signature: 0x66829b16
Entry block: 0x1d1
Exit block: 0x14e
Body: 0x14e, 0x1d1, 0x1d9, 0x1dd, 0x3df, 0x3e3, 0x3f1, 0x403, 0x404, 0x420, 0x426, 0x42e, 0x43a, 0x43e

Function 7:
Public function signature: 0x6901f668
Entry block: 0x1f2
Exit block: 0x1fa
Body: 0x125, 0x1f2, 0x1fa, 0x1fe

Function 8:
Public function signature: 0x853828b6
Entry block: 0x207
Exit block: 0x815
Body: 0x14e, 0x207, 0x20f, 0x213, 0x634, 0x63a, 0x648, 0x65a, 0x65b, 0x677, 0x67d, 0x685, 0x691, 0x695, 0x6a1, 0x6a5, 0x6ad, 0x6b4, 0x6b8, 0x6ca, 0x6d5, 0x6e1, 0x6e2, 0x701, 0x716, 0x719, 0x71f, 0x733, 0x763, 0x764, 0x7ca, 0x7ce, 0x7d9, 0x7e2, 0x7f4, 0x7f8, 0x801, 0x805, 0x815, 0x816, 0x839, 0x844

Function 9:
Public function signature: 0x93e88f3a
Entry block: 0x21c
Exit block: 0x17d
Body: 0x17d, 0x21c, 0x224, 0x228, 0x84a, 0x84f, 0x85a, 0x866, 0x867, 0x885, 0x899, 0x89f, 0x8a7

Function 10:
Public function signature: 0x9c75dd35
Entry block: 0x231
Exit block: 0x14e
Body: 0x14e, 0x231, 0x239, 0x23d, 0x8ad, 0x8b2, 0x8c0, 0x8d2, 0x8d3, 0x8ef, 0x8f5, 0x8fd, 0x909, 0x90d, 0x912, 0x91d, 0x92c, 0x92d, 0x95b

Function 11:
Public function signature: 0xba3f5a12
Entry block: 0x249
Exit block: 0x17d
Body: 0x17d, 0x249, 0x251, 0x255, 0x96d

Function 12:
Public function signature: 0xd2c51c72
Entry block: 0x25e
Exit block: 0x17d
Body: 0x17d, 0x25e, 0x266, 0x26a, 0x973

Function 13:
Public function signature: 0xdb171211
Entry block: 0x273
Exit block: 0x27b
Body: 0x125, 0x273, 0x27b, 0x27f

Function 14:
Public function signature: 0xe09adc70
Entry block: 0x288
Exit block: 0x17d
Body: 0x17d, 0x288, 0x290, 0x294, 0xb3b

Function 15:
Public function signature: 0xeffd88b7
Entry block: 0x29d
Exit block: 0x17d
Body: 0x17d, 0x29d, 0x2a5, 0x2a9, 0xb41

Function 16:
Public function signature: 0xfc0c546a
Entry block: 0x2b2
Exit block: 0xf4
Body: 0xf4, 0x2b2, 0x2ba, 0x2be, 0xb47

Function 17:
Public fallback function
Entry block: 0xd7
Exit block: 0xd7
Body: 0xd7

Function 18:
Private function
Entry block: 0x46f
Exit block: 0x62d
Body: 0x46f, 0x474, 0x47f, 0x48c, 0x4aa, 0x4d5, 0x4db, 0x4e3, 0x553, 0x567, 0x57d, 0x588, 0x5fe, 0x612, 0x628, 0x62d

Function 19:
Private function
Entry block: 0x979
Exit block: 0xb32
Body: 0x979, 0x97e, 0x98c, 0x99f, 0x9bb, 0x9c1, 0x9c9, 0x9d9, 0xa4e, 0xa62, 0xa78, 0xac7, 0xadb, 0xaf1, 0xafe, 0xb32

Function 20:
Private function
Entry block: 0x4be
Exit block: 0x39a
Body: 0x387, 0x39a, 0x4be

