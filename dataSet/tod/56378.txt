Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x30]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x30
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x30
0xa: JUMPI 0x30 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x2e0]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0xd0b022ba
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x2e0
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0xd0b022ba
0x20: V14 = EQ V12 0xd0b022ba
0x21: V15 = 0x2e0
0x24: JUMPI 0x2e0 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x319]
---
0x25 DUP1
0x26 PUSH4 0xd5d9ce91
0x2b EQ
0x2c PUSH2 0x319
0x2f JUMPI
---
0x26: V16 = 0xd5d9ce91
0x2b: V17 = EQ 0xd5d9ce91 V12
0x2c: V18 = 0x319
0x2f: JUMPI 0x319 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x30]
---
Predecessors: [0x0, 0x25]
Successors: [0x31]
---
0x30 JUMPDEST
---
0x30: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x31
[0x31:0x3c]
---
Predecessors: [0x30]
Successors: [0x3d, 0x41]
---
0x31 JUMPDEST
0x32 PUSH1 0x6
0x34 SLOAD
0x35 PUSH1 0xff
0x37 AND
0x38 ISZERO
0x39 PUSH2 0x41
0x3c JUMPI
---
0x31: JUMPDEST 
0x32: V19 = 0x6
0x34: V20 = S[0x6]
0x35: V21 = 0xff
0x37: V22 = AND 0xff V20
0x38: V23 = ISZERO V22
0x39: V24 = 0x41
0x3c: JUMPI 0x41 V23
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3d
[0x3d:0x40]
---
Predecessors: [0x31]
Successors: []
---
0x3d PUSH1 0x0
0x3f DUP1
0x40 REVERT
---
0x3d: V25 = 0x0
0x40: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x41
[0x41:0x51]
---
Predecessors: [0x31]
Successors: [0x52, 0x54]
---
0x41 JUMPDEST
0x42 PUSH1 0x0
0x44 PUSH1 0x1
0x46 PUSH1 0x0
0x48 DUP3
0x49 PUSH1 0x1
0x4b SLOAD
0x4c LT
0x4d DUP1
0x4e PUSH2 0x54
0x51 JUMPI
---
0x41: JUMPDEST 
0x42: V26 = 0x0
0x44: V27 = 0x1
0x46: V28 = 0x0
0x49: V29 = 0x1
0x4b: V30 = S[0x1]
0x4c: V31 = LT V30 0x0
0x4e: V32 = 0x54
0x51: JUMPI 0x54 V31
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x0, 0x1, 0x0, V31]
Exit stack: [V12, 0x0, 0x1, 0x0, V31]

================================

Block 0x52
[0x52:0x53]
---
Predecessors: [0x41]
Successors: [0x54]
---
0x52 POP
0x53 DUP2
---
0x52: NOP 
---
Entry stack: [V12, 0x0, 0x1, 0x0, V31]
Stack pops: 3
Stack additions: [S2, S1, S2]
Exit stack: [V12, 0x0, 0x1, 0x0, 0x1]

================================

Block 0x54
[0x54:0x59]
---
Predecessors: [0x41, 0x52]
Successors: [0x5a, 0x250]
---
0x54 JUMPDEST
0x55 ISZERO
0x56 PUSH2 0x250
0x59 JUMPI
---
0x54: JUMPDEST 
0x55: V33 = ISZERO S0
0x56: V34 = 0x250
0x59: JUMPI 0x250 V33
---
Entry stack: [V12, 0x0, 0x1, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x0, 0x1, 0x0]

================================

Block 0x5a
[0x5a:0x9d]
---
Predecessors: [0x54]
Successors: [0x9e, 0xa2]
---
0x5a PUSH1 0x0
0x5c DUP1
0x5d SLOAD
0x5e PUSH1 0x1
0x60 PUSH1 0xa0
0x62 PUSH1 0x2
0x64 EXP
0x65 SUB
0x66 AND
0x67 SWAP1
0x68 PUSH4 0xe0a69f0d
0x6d SWAP1
0x6e PUSH1 0x40
0x70 MLOAD
0x71 PUSH1 0x20
0x73 ADD
0x74 MSTORE
0x75 PUSH1 0x40
0x77 MLOAD
0x78 DUP2
0x79 PUSH4 0xffffffff
0x7e AND
0x7f PUSH1 0xe0
0x81 PUSH1 0x2
0x83 EXP
0x84 MUL
0x85 DUP2
0x86 MSTORE
0x87 PUSH1 0x4
0x89 ADD
0x8a PUSH1 0x20
0x8c PUSH1 0x40
0x8e MLOAD
0x8f DUP1
0x90 DUP4
0x91 SUB
0x92 DUP2
0x93 PUSH1 0x0
0x95 DUP8
0x96 DUP1
0x97 EXTCODESIZE
0x98 ISZERO
0x99 ISZERO
0x9a PUSH2 0xa2
0x9d JUMPI
---
0x5a: V35 = 0x0
0x5d: V36 = S[0x0]
0x5e: V37 = 0x1
0x60: V38 = 0xa0
0x62: V39 = 0x2
0x64: V40 = EXP 0x2 0xa0
0x65: V41 = SUB 0x10000000000000000000000000000000000000000 0x1
0x66: V42 = AND 0xffffffffffffffffffffffffffffffffffffffff V36
0x68: V43 = 0xe0a69f0d
0x6e: V44 = 0x40
0x70: V45 = M[0x40]
0x71: V46 = 0x20
0x73: V47 = ADD 0x20 V45
0x74: M[V47] = 0x0
0x75: V48 = 0x40
0x77: V49 = M[0x40]
0x79: V50 = 0xffffffff
0x7e: V51 = AND 0xffffffff 0xe0a69f0d
0x7f: V52 = 0xe0
0x81: V53 = 0x2
0x83: V54 = EXP 0x2 0xe0
0x84: V55 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xe0a69f0d
0x86: M[V49] = 0xe0a69f0d00000000000000000000000000000000000000000000000000000000
0x87: V56 = 0x4
0x89: V57 = ADD 0x4 V49
0x8a: V58 = 0x20
0x8c: V59 = 0x40
0x8e: V60 = M[0x40]
0x91: V61 = SUB V57 V60
0x93: V62 = 0x0
0x97: V63 = EXTCODESIZE V42
0x98: V64 = ISZERO V63
0x99: V65 = ISZERO V64
0x9a: V66 = 0xa2
0x9d: JUMPI 0xa2 V65
---
Entry stack: [V12, 0x0, 0x1, 0x0]
Stack pops: 0
Stack additions: [V42, 0xe0a69f0d, V57, 0x20, V60, V61, V60, 0x0, V42]
Exit stack: [V12, 0x0, 0x1, 0x0, V42, 0xe0a69f0d, V57, 0x20, V60, V61, V60, 0x0, V42]

================================

Block 0x9e
[0x9e:0xa1]
---
Predecessors: [0x5a]
Successors: []
---
0x9e PUSH1 0x0
0xa0 DUP1
0xa1 REVERT
---
0x9e: V67 = 0x0
0xa1: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x1, 0x0, V42, 0xe0a69f0d, V57, 0x20, V60, V61, V60, 0x0, V42]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x1, 0x0, V42, 0xe0a69f0d, V57, 0x20, V60, V61, V60, 0x0, V42]

================================

Block 0xa2
[0xa2:0xae]
---
Predecessors: [0x5a]
Successors: [0xaf, 0xb3]
---
0xa2 JUMPDEST
0xa3 PUSH2 0x2c6
0xa6 GAS
0xa7 SUB
0xa8 CALL
0xa9 ISZERO
0xaa ISZERO
0xab PUSH2 0xb3
0xae JUMPI
---
0xa2: JUMPDEST 
0xa3: V68 = 0x2c6
0xa6: V69 = GAS
0xa7: V70 = SUB V69 0x2c6
0xa8: V71 = CALL V70 V42 0x0 V60 V61 V60 0x20
0xa9: V72 = ISZERO V71
0xaa: V73 = ISZERO V72
0xab: V74 = 0xb3
0xae: JUMPI 0xb3 V73
---
Entry stack: [V12, 0x0, 0x1, 0x0, V42, 0xe0a69f0d, V57, 0x20, V60, V61, V60, 0x0, V42]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x0, 0x1, 0x0, V42, 0xe0a69f0d, V57]

================================

Block 0xaf
[0xaf:0xb2]
---
Predecessors: [0xa2]
Successors: []
---
0xaf PUSH1 0x0
0xb1 DUP1
0xb2 REVERT
---
0xaf: V75 = 0x0
0xb2: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x1, 0x0, V42, 0xe0a69f0d, V57]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x1, 0x0, V42, 0xe0a69f0d, V57]

================================

Block 0xb3
[0xb3:0xca]
---
Predecessors: [0xa2]
Successors: [0xcb, 0xd3]
---
0xb3 JUMPDEST
0xb4 POP
0xb5 POP
0xb6 POP
0xb7 PUSH1 0x40
0xb9 MLOAD
0xba DUP1
0xbb MLOAD
0xbc SWAP1
0xbd POP
0xbe SWAP1
0xbf POP
0xc0 DUP1
0xc1 PUSH1 0x1
0xc3 SLOAD
0xc4 LT
0xc5 DUP1
0xc6 ISZERO
0xc7 PUSH2 0xd3
0xca JUMPI
---
0xb3: JUMPDEST 
0xb7: V76 = 0x40
0xb9: V77 = M[0x40]
0xbb: V78 = M[V77]
0xc1: V79 = 0x1
0xc3: V80 = S[0x1]
0xc4: V81 = LT V80 V78
0xc6: V82 = ISZERO V81
0xc7: V83 = 0xd3
0xca: JUMPI 0xd3 V82
---
Entry stack: [V12, 0x0, 0x1, 0x0, V42, 0xe0a69f0d, V57]
Stack pops: 4
Stack additions: [V78, V81]
Exit stack: [V12, 0x0, 0x1, V78, V81]

================================

Block 0xcb
[0xcb:0xd2]
---
Predecessors: [0xb3]
Successors: [0xd3]
---
0xcb POP
0xcc PUSH1 0x6
0xce SLOAD
0xcf PUSH1 0xff
0xd1 AND
0xd2 ISZERO
---
0xcc: V84 = 0x6
0xce: V85 = S[0x6]
0xcf: V86 = 0xff
0xd1: V87 = AND 0xff V85
0xd2: V88 = ISZERO V87
---
Entry stack: [V12, 0x0, 0x1, V78, V81]
Stack pops: 1
Stack additions: [V88]
Exit stack: [V12, 0x0, 0x1, V78, V88]

================================

Block 0xd3
[0xd3:0xd8]
---
Predecessors: [0xb3, 0xcb]
Successors: [0xd9, 0x250]
---
0xd3 JUMPDEST
0xd4 ISZERO
0xd5 PUSH2 0x250
0xd8 JUMPI
---
0xd3: JUMPDEST 
0xd4: V89 = ISZERO S0
0xd5: V90 = 0x250
0xd8: JUMPI 0x250 V89
---
Entry stack: [V12, 0x0, 0x1, V78, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x0, 0x1, V78]

================================

Block 0xd9
[0xd9:0x11c]
---
Predecessors: [0xd3]
Successors: [0x11d, 0x121]
---
0xd9 PUSH1 0x0
0xdb DUP1
0xdc SLOAD
0xdd PUSH1 0x1
0xdf PUSH1 0xa0
0xe1 PUSH1 0x2
0xe3 EXP
0xe4 SUB
0xe5 AND
0xe6 SWAP1
0xe7 PUSH4 0xd25a992c
0xec SWAP1
0xed PUSH1 0x40
0xef MLOAD
0xf0 PUSH1 0x20
0xf2 ADD
0xf3 MSTORE
0xf4 PUSH1 0x40
0xf6 MLOAD
0xf7 DUP2
0xf8 PUSH4 0xffffffff
0xfd AND
0xfe PUSH1 0xe0
0x100 PUSH1 0x2
0x102 EXP
0x103 MUL
0x104 DUP2
0x105 MSTORE
0x106 PUSH1 0x4
0x108 ADD
0x109 PUSH1 0x20
0x10b PUSH1 0x40
0x10d MLOAD
0x10e DUP1
0x10f DUP4
0x110 SUB
0x111 DUP2
0x112 PUSH1 0x0
0x114 DUP8
0x115 DUP1
0x116 EXTCODESIZE
0x117 ISZERO
0x118 ISZERO
0x119 PUSH2 0x121
0x11c JUMPI
---
0xd9: V91 = 0x0
0xdc: V92 = S[0x0]
0xdd: V93 = 0x1
0xdf: V94 = 0xa0
0xe1: V95 = 0x2
0xe3: V96 = EXP 0x2 0xa0
0xe4: V97 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe5: V98 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0xe7: V99 = 0xd25a992c
0xed: V100 = 0x40
0xef: V101 = M[0x40]
0xf0: V102 = 0x20
0xf2: V103 = ADD 0x20 V101
0xf3: M[V103] = 0x0
0xf4: V104 = 0x40
0xf6: V105 = M[0x40]
0xf8: V106 = 0xffffffff
0xfd: V107 = AND 0xffffffff 0xd25a992c
0xfe: V108 = 0xe0
0x100: V109 = 0x2
0x102: V110 = EXP 0x2 0xe0
0x103: V111 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd25a992c
0x105: M[V105] = 0xd25a992c00000000000000000000000000000000000000000000000000000000
0x106: V112 = 0x4
0x108: V113 = ADD 0x4 V105
0x109: V114 = 0x20
0x10b: V115 = 0x40
0x10d: V116 = M[0x40]
0x110: V117 = SUB V113 V116
0x112: V118 = 0x0
0x116: V119 = EXTCODESIZE V98
0x117: V120 = ISZERO V119
0x118: V121 = ISZERO V120
0x119: V122 = 0x121
0x11c: JUMPI 0x121 V121
---
Entry stack: [V12, 0x0, 0x1, V78]
Stack pops: 0
Stack additions: [V98, 0xd25a992c, V113, 0x20, V116, V117, V116, 0x0, V98]
Exit stack: [V12, 0x0, 0x1, V78, V98, 0xd25a992c, V113, 0x20, V116, V117, V116, 0x0, V98]

================================

Block 0x11d
[0x11d:0x120]
---
Predecessors: [0xd9]
Successors: []
---
0x11d PUSH1 0x0
0x11f DUP1
0x120 REVERT
---
0x11d: V123 = 0x0
0x120: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x1, V78, V98, 0xd25a992c, V113, 0x20, V116, V117, V116, 0x0, V98]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x1, V78, V98, 0xd25a992c, V113, 0x20, V116, V117, V116, 0x0, V98]

================================

Block 0x121
[0x121:0x12d]
---
Predecessors: [0xd9]
Successors: [0x12e, 0x132]
---
0x121 JUMPDEST
0x122 PUSH2 0x2c6
0x125 GAS
0x126 SUB
0x127 CALL
0x128 ISZERO
0x129 ISZERO
0x12a PUSH2 0x132
0x12d JUMPI
---
0x121: JUMPDEST 
0x122: V124 = 0x2c6
0x125: V125 = GAS
0x126: V126 = SUB V125 0x2c6
0x127: V127 = CALL V126 V98 0x0 V116 V117 V116 0x20
0x128: V128 = ISZERO V127
0x129: V129 = ISZERO V128
0x12a: V130 = 0x132
0x12d: JUMPI 0x132 V129
---
Entry stack: [V12, 0x0, 0x1, V78, V98, 0xd25a992c, V113, 0x20, V116, V117, V116, 0x0, V98]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x0, 0x1, V78, V98, 0xd25a992c, V113]

================================

Block 0x12e
[0x12e:0x131]
---
Predecessors: [0x121]
Successors: []
---
0x12e PUSH1 0x0
0x130 DUP1
0x131 REVERT
---
0x12e: V131 = 0x0
0x131: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x1, V78, V98, 0xd25a992c, V113]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x1, V78, V98, 0xd25a992c, V113]

================================

Block 0x132
[0x132:0x1a2]
---
Predecessors: [0x121]
Successors: [0x1a3, 0x1a7]
---
0x132 JUMPDEST
0x133 POP
0x134 POP
0x135 POP
0x136 PUSH1 0x40
0x138 MLOAD
0x139 DUP1
0x13a MLOAD
0x13b PUSH1 0x3
0x13d DUP1
0x13e SLOAD
0x13f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x154 NOT
0x155 AND
0x156 PUSH1 0x1
0x158 PUSH1 0xa0
0x15a PUSH1 0x2
0x15c EXP
0x15d SUB
0x15e SWAP3
0x15f DUP4
0x160 AND
0x161 OR
0x162 SWAP1
0x163 SSTORE
0x164 PUSH1 0x0
0x166 DUP1
0x167 SLOAD
0x168 SWAP1
0x169 SWAP2
0x16a AND
0x16b SWAP2
0x16c POP
0x16d PUSH4 0x6fe3caba
0x172 SWAP1
0x173 PUSH1 0x40
0x175 MLOAD
0x176 PUSH1 0x20
0x178 ADD
0x179 MSTORE
0x17a PUSH1 0x40
0x17c MLOAD
0x17d DUP2
0x17e PUSH4 0xffffffff
0x183 AND
0x184 PUSH1 0xe0
0x186 PUSH1 0x2
0x188 EXP
0x189 MUL
0x18a DUP2
0x18b MSTORE
0x18c PUSH1 0x4
0x18e ADD
0x18f PUSH1 0x20
0x191 PUSH1 0x40
0x193 MLOAD
0x194 DUP1
0x195 DUP4
0x196 SUB
0x197 DUP2
0x198 PUSH1 0x0
0x19a DUP8
0x19b DUP1
0x19c EXTCODESIZE
0x19d ISZERO
0x19e ISZERO
0x19f PUSH2 0x1a7
0x1a2 JUMPI
---
0x132: JUMPDEST 
0x136: V132 = 0x40
0x138: V133 = M[0x40]
0x13a: V134 = M[V133]
0x13b: V135 = 0x3
0x13e: V136 = S[0x3]
0x13f: V137 = 0xffffffffffffffffffffffffffffffffffffffff
0x154: V138 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x155: V139 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V136
0x156: V140 = 0x1
0x158: V141 = 0xa0
0x15a: V142 = 0x2
0x15c: V143 = EXP 0x2 0xa0
0x15d: V144 = SUB 0x10000000000000000000000000000000000000000 0x1
0x160: V145 = AND 0xffffffffffffffffffffffffffffffffffffffff V134
0x161: V146 = OR V145 V139
0x163: S[0x3] = V146
0x164: V147 = 0x0
0x167: V148 = S[0x0]
0x16a: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V148
0x16d: V150 = 0x6fe3caba
0x173: V151 = 0x40
0x175: V152 = M[0x40]
0x176: V153 = 0x20
0x178: V154 = ADD 0x20 V152
0x179: M[V154] = 0x0
0x17a: V155 = 0x40
0x17c: V156 = M[0x40]
0x17e: V157 = 0xffffffff
0x183: V158 = AND 0xffffffff 0x6fe3caba
0x184: V159 = 0xe0
0x186: V160 = 0x2
0x188: V161 = EXP 0x2 0xe0
0x189: V162 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x6fe3caba
0x18b: M[V156] = 0x6fe3caba00000000000000000000000000000000000000000000000000000000
0x18c: V163 = 0x4
0x18e: V164 = ADD 0x4 V156
0x18f: V165 = 0x20
0x191: V166 = 0x40
0x193: V167 = M[0x40]
0x196: V168 = SUB V164 V167
0x198: V169 = 0x0
0x19c: V170 = EXTCODESIZE V149
0x19d: V171 = ISZERO V170
0x19e: V172 = ISZERO V171
0x19f: V173 = 0x1a7
0x1a2: JUMPI 0x1a7 V172
---
Entry stack: [V12, 0x0, 0x1, V78, V98, 0xd25a992c, V113]
Stack pops: 3
Stack additions: [V149, 0x6fe3caba, V164, 0x20, V167, V168, V167, 0x0, V149]
Exit stack: [V12, 0x0, 0x1, V78, V149, 0x6fe3caba, V164, 0x20, V167, V168, V167, 0x0, V149]

================================

Block 0x1a3
[0x1a3:0x1a6]
---
Predecessors: [0x132]
Successors: []
---
0x1a3 PUSH1 0x0
0x1a5 DUP1
0x1a6 REVERT
---
0x1a3: V174 = 0x0
0x1a6: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x1, V78, V149, 0x6fe3caba, V164, 0x20, V167, V168, V167, 0x0, V149]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x1, V78, V149, 0x6fe3caba, V164, 0x20, V167, V168, V167, 0x0, V149]

================================

Block 0x1a7
[0x1a7:0x1b3]
---
Predecessors: [0x132]
Successors: [0x1b4, 0x1b8]
---
0x1a7 JUMPDEST
0x1a8 PUSH2 0x2c6
0x1ab GAS
0x1ac SUB
0x1ad CALL
0x1ae ISZERO
0x1af ISZERO
0x1b0 PUSH2 0x1b8
0x1b3 JUMPI
---
0x1a7: JUMPDEST 
0x1a8: V175 = 0x2c6
0x1ab: V176 = GAS
0x1ac: V177 = SUB V176 0x2c6
0x1ad: V178 = CALL V177 V149 0x0 V167 V168 V167 0x20
0x1ae: V179 = ISZERO V178
0x1af: V180 = ISZERO V179
0x1b0: V181 = 0x1b8
0x1b3: JUMPI 0x1b8 V180
---
Entry stack: [V12, 0x0, 0x1, V78, V149, 0x6fe3caba, V164, 0x20, V167, V168, V167, 0x0, V149]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x0, 0x1, V78, V149, 0x6fe3caba, V164]

================================

Block 0x1b4
[0x1b4:0x1b7]
---
Predecessors: [0x1a7]
Successors: []
---
0x1b4 PUSH1 0x0
0x1b6 DUP1
0x1b7 REVERT
---
0x1b4: V182 = 0x0
0x1b7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x1, V78, V149, 0x6fe3caba, V164]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x1, V78, V149, 0x6fe3caba, V164]

================================

Block 0x1b8
[0x1b8:0x228]
---
Predecessors: [0x1a7]
Successors: [0x229, 0x22d]
---
0x1b8 JUMPDEST
0x1b9 POP
0x1ba POP
0x1bb POP
0x1bc PUSH1 0x40
0x1be MLOAD
0x1bf DUP1
0x1c0 MLOAD
0x1c1 PUSH1 0x4
0x1c3 DUP1
0x1c4 SLOAD
0x1c5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1da NOT
0x1db AND
0x1dc PUSH1 0x1
0x1de PUSH1 0xa0
0x1e0 PUSH1 0x2
0x1e2 EXP
0x1e3 SUB
0x1e4 SWAP3
0x1e5 DUP4
0x1e6 AND
0x1e7 OR
0x1e8 SWAP1
0x1e9 SSTORE
0x1ea PUSH1 0x0
0x1ec DUP1
0x1ed SLOAD
0x1ee SWAP1
0x1ef SWAP2
0x1f0 AND
0x1f1 SWAP2
0x1f2 POP
0x1f3 PUSH4 0xa759c3a2
0x1f8 SWAP1
0x1f9 PUSH1 0x40
0x1fb MLOAD
0x1fc PUSH1 0x20
0x1fe ADD
0x1ff MSTORE
0x200 PUSH1 0x40
0x202 MLOAD
0x203 DUP2
0x204 PUSH4 0xffffffff
0x209 AND
0x20a PUSH1 0xe0
0x20c PUSH1 0x2
0x20e EXP
0x20f MUL
0x210 DUP2
0x211 MSTORE
0x212 PUSH1 0x4
0x214 ADD
0x215 PUSH1 0x20
0x217 PUSH1 0x40
0x219 MLOAD
0x21a DUP1
0x21b DUP4
0x21c SUB
0x21d DUP2
0x21e PUSH1 0x0
0x220 DUP8
0x221 DUP1
0x222 EXTCODESIZE
0x223 ISZERO
0x224 ISZERO
0x225 PUSH2 0x22d
0x228 JUMPI
---
0x1b8: JUMPDEST 
0x1bc: V183 = 0x40
0x1be: V184 = M[0x40]
0x1c0: V185 = M[V184]
0x1c1: V186 = 0x4
0x1c4: V187 = S[0x4]
0x1c5: V188 = 0xffffffffffffffffffffffffffffffffffffffff
0x1da: V189 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1db: V190 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V187
0x1dc: V191 = 0x1
0x1de: V192 = 0xa0
0x1e0: V193 = 0x2
0x1e2: V194 = EXP 0x2 0xa0
0x1e3: V195 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e6: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff V185
0x1e7: V197 = OR V196 V190
0x1e9: S[0x4] = V197
0x1ea: V198 = 0x0
0x1ed: V199 = S[0x0]
0x1f0: V200 = AND 0xffffffffffffffffffffffffffffffffffffffff V199
0x1f3: V201 = 0xa759c3a2
0x1f9: V202 = 0x40
0x1fb: V203 = M[0x40]
0x1fc: V204 = 0x20
0x1fe: V205 = ADD 0x20 V203
0x1ff: M[V205] = 0x0
0x200: V206 = 0x40
0x202: V207 = M[0x40]
0x204: V208 = 0xffffffff
0x209: V209 = AND 0xffffffff 0xa759c3a2
0x20a: V210 = 0xe0
0x20c: V211 = 0x2
0x20e: V212 = EXP 0x2 0xe0
0x20f: V213 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa759c3a2
0x211: M[V207] = 0xa759c3a200000000000000000000000000000000000000000000000000000000
0x212: V214 = 0x4
0x214: V215 = ADD 0x4 V207
0x215: V216 = 0x20
0x217: V217 = 0x40
0x219: V218 = M[0x40]
0x21c: V219 = SUB V215 V218
0x21e: V220 = 0x0
0x222: V221 = EXTCODESIZE V200
0x223: V222 = ISZERO V221
0x224: V223 = ISZERO V222
0x225: V224 = 0x22d
0x228: JUMPI 0x22d V223
---
Entry stack: [V12, 0x0, 0x1, V78, V149, 0x6fe3caba, V164]
Stack pops: 3
Stack additions: [V200, 0xa759c3a2, V215, 0x20, V218, V219, V218, 0x0, V200]
Exit stack: [V12, 0x0, 0x1, V78, V200, 0xa759c3a2, V215, 0x20, V218, V219, V218, 0x0, V200]

================================

Block 0x229
[0x229:0x22c]
---
Predecessors: [0x1b8]
Successors: []
---
0x229 PUSH1 0x0
0x22b DUP1
0x22c REVERT
---
0x229: V225 = 0x0
0x22c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x1, V78, V200, 0xa759c3a2, V215, 0x20, V218, V219, V218, 0x0, V200]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x1, V78, V200, 0xa759c3a2, V215, 0x20, V218, V219, V218, 0x0, V200]

================================

Block 0x22d
[0x22d:0x239]
---
Predecessors: [0x1b8]
Successors: [0x23a, 0x23e]
---
0x22d JUMPDEST
0x22e PUSH2 0x2c6
0x231 GAS
0x232 SUB
0x233 CALL
0x234 ISZERO
0x235 ISZERO
0x236 PUSH2 0x23e
0x239 JUMPI
---
0x22d: JUMPDEST 
0x22e: V226 = 0x2c6
0x231: V227 = GAS
0x232: V228 = SUB V227 0x2c6
0x233: V229 = CALL V228 V200 0x0 V218 V219 V218 0x20
0x234: V230 = ISZERO V229
0x235: V231 = ISZERO V230
0x236: V232 = 0x23e
0x239: JUMPI 0x23e V231
---
Entry stack: [V12, 0x0, 0x1, V78, V200, 0xa759c3a2, V215, 0x20, V218, V219, V218, 0x0, V200]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x0, 0x1, V78, V200, 0xa759c3a2, V215]

================================

Block 0x23a
[0x23a:0x23d]
---
Predecessors: [0x22d]
Successors: []
---
0x23a PUSH1 0x0
0x23c DUP1
0x23d REVERT
---
0x23a: V233 = 0x0
0x23d: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x1, V78, V200, 0xa759c3a2, V215]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x1, V78, V200, 0xa759c3a2, V215]

================================

Block 0x23e
[0x23e:0x24f]
---
Predecessors: [0x22d]
Successors: [0x250]
---
0x23e JUMPDEST
0x23f POP
0x240 POP
0x241 POP
0x242 PUSH1 0x40
0x244 MLOAD
0x245 DUP1
0x246 MLOAD
0x247 PUSH1 0x5
0x249 SSTORE
0x24a POP
0x24b PUSH1 0x1
0x24d DUP2
0x24e SWAP1
0x24f SSTORE
---
0x23e: JUMPDEST 
0x242: V234 = 0x40
0x244: V235 = M[0x40]
0x246: V236 = M[V235]
0x247: V237 = 0x5
0x249: S[0x5] = V236
0x24b: V238 = 0x1
0x24f: S[0x1] = V78
---
Entry stack: [V12, 0x0, 0x1, V78, V200, 0xa759c3a2, V215]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V12, 0x0, 0x1, V78]

================================

Block 0x250
[0x250:0x250]
---
Predecessors: [0x54, 0xd3, 0x23e]
Successors: [0x251]
---
0x250 JUMPDEST
---
0x250: JUMPDEST 
---
Entry stack: [V12, 0x0, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x1, S0]

================================

Block 0x251
[0x251:0x27e]
---
Predecessors: [0x250]
Successors: [0x27f, 0x2d3]
---
0x251 JUMPDEST
0x252 PUSH1 0x3
0x254 SLOAD
0x255 PUSH1 0x5
0x257 SLOAD
0x258 PUSH1 0x1
0x25a PUSH1 0xa0
0x25c PUSH1 0x2
0x25e EXP
0x25f SUB
0x260 SWAP1
0x261 SWAP2
0x262 AND
0x263 SWAP1
0x264 CALLVALUE
0x265 PUSH1 0x40
0x267 MLOAD
0x268 PUSH1 0x0
0x26a PUSH1 0x40
0x26c MLOAD
0x26d DUP1
0x26e DUP4
0x26f SUB
0x270 DUP2
0x271 DUP6
0x272 DUP9
0x273 DUP9
0x274 CALL
0x275 SWAP4
0x276 POP
0x277 POP
0x278 POP
0x279 POP
0x27a ISZERO
0x27b PUSH2 0x2d3
0x27e JUMPI
---
0x251: JUMPDEST 
0x252: V239 = 0x3
0x254: V240 = S[0x3]
0x255: V241 = 0x5
0x257: V242 = S[0x5]
0x258: V243 = 0x1
0x25a: V244 = 0xa0
0x25c: V245 = 0x2
0x25e: V246 = EXP 0x2 0xa0
0x25f: V247 = SUB 0x10000000000000000000000000000000000000000 0x1
0x262: V248 = AND V240 0xffffffffffffffffffffffffffffffffffffffff
0x264: V249 = CALLVALUE
0x265: V250 = 0x40
0x267: V251 = M[0x40]
0x268: V252 = 0x0
0x26a: V253 = 0x40
0x26c: V254 = M[0x40]
0x26f: V255 = SUB V251 V254
0x274: V256 = CALL V242 V248 V249 V254 V255 V254 0x0
0x27a: V257 = ISZERO V256
0x27b: V258 = 0x2d3
0x27e: JUMPI 0x2d3 V257
---
Entry stack: [V12, 0x0, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x1, S0]

================================

Block 0x27f
[0x27f:0x2d2]
---
Predecessors: [0x251]
Successors: [0x2d8]
---
0x27f PUSH32 0x5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62
0x2a0 CALLER
0x2a1 ORIGIN
0x2a2 CALLVALUE
0x2a3 PUSH1 0x40
0x2a5 MLOAD
0x2a6 PUSH1 0x1
0x2a8 PUSH1 0xa0
0x2aa PUSH1 0x2
0x2ac EXP
0x2ad SUB
0x2ae SWAP4
0x2af DUP5
0x2b0 AND
0x2b1 DUP2
0x2b2 MSTORE
0x2b3 SWAP2
0x2b4 SWAP1
0x2b5 SWAP3
0x2b6 AND
0x2b7 PUSH1 0x20
0x2b9 DUP3
0x2ba ADD
0x2bb MSTORE
0x2bc PUSH1 0x40
0x2be DUP1
0x2bf DUP3
0x2c0 ADD
0x2c1 SWAP3
0x2c2 SWAP1
0x2c3 SWAP3
0x2c4 MSTORE
0x2c5 PUSH1 0x60
0x2c7 ADD
0x2c8 SWAP1
0x2c9 MLOAD
0x2ca DUP1
0x2cb SWAP2
0x2cc SUB
0x2cd SWAP1
0x2ce LOG1
0x2cf PUSH2 0x2d8
0x2d2 JUMP
---
0x27f: V259 = 0x5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62
0x2a0: V260 = CALLER
0x2a1: V261 = ORIGIN
0x2a2: V262 = CALLVALUE
0x2a3: V263 = 0x40
0x2a5: V264 = M[0x40]
0x2a6: V265 = 0x1
0x2a8: V266 = 0xa0
0x2aa: V267 = 0x2
0x2ac: V268 = EXP 0x2 0xa0
0x2ad: V269 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b0: V270 = AND 0xffffffffffffffffffffffffffffffffffffffff V260
0x2b2: M[V264] = V270
0x2b6: V271 = AND 0xffffffffffffffffffffffffffffffffffffffff V261
0x2b7: V272 = 0x20
0x2ba: V273 = ADD V264 0x20
0x2bb: M[V273] = V271
0x2bc: V274 = 0x40
0x2c0: V275 = ADD V264 0x40
0x2c4: M[V275] = V262
0x2c5: V276 = 0x60
0x2c7: V277 = ADD 0x60 V264
0x2c9: V278 = M[0x40]
0x2cc: V279 = SUB V277 V278
0x2ce: LOG V278 V279 0x5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62
0x2cf: V280 = 0x2d8
0x2d2: JUMP 0x2d8
---
Entry stack: [V12, 0x0, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x1, S0]

================================

Block 0x2d3
[0x2d3:0x2d7]
---
Predecessors: [0x251]
Successors: []
---
0x2d3 JUMPDEST
0x2d4 PUSH1 0x0
0x2d6 DUP1
0x2d7 REVERT
---
0x2d3: JUMPDEST 
0x2d4: V281 = 0x0
0x2d7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x0, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x1, S0]

================================

Block 0x2d8
[0x2d8:0x2d8]
---
Predecessors: [0x27f]
Successors: [0x2d9]
---
0x2d8 JUMPDEST
---
0x2d8: JUMPDEST 
---
Entry stack: [V12, 0x0, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x1, S0]

================================

Block 0x2d9
[0x2d9:0x2d9]
---
Predecessors: [0x2d8]
Successors: [0x2da]
---
0x2d9 JUMPDEST
---
0x2d9: JUMPDEST 
---
Entry stack: [V12, 0x0, 0x1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x0, 0x1, S0]

================================

Block 0x2da
[0x2da:0x2dd]
---
Predecessors: [0x2d9]
Successors: [0x2de]
---
0x2da JUMPDEST
0x2db POP
0x2dc POP
0x2dd POP
---
0x2da: JUMPDEST 
---
Entry stack: [V12, 0x0, 0x1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x2de
[0x2de:0x2df]
---
Predecessors: [0x2da, 0x653]
Successors: []
---
0x2de JUMPDEST
0x2df STOP
---
0x2de: JUMPDEST 
0x2df: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2e0
[0x2e0:0x2e6]
---
Predecessors: [0xb]
Successors: [0x2e7, 0x2eb]
---
0x2e0 JUMPDEST
0x2e1 CALLVALUE
0x2e2 ISZERO
0x2e3 PUSH2 0x2eb
0x2e6 JUMPI
---
0x2e0: JUMPDEST 
0x2e1: V282 = CALLVALUE
0x2e2: V283 = ISZERO V282
0x2e3: V284 = 0x2eb
0x2e6: JUMPI 0x2eb V283
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2e7
[0x2e7:0x2ea]
---
Predecessors: [0x2e0]
Successors: []
---
0x2e7 PUSH1 0x0
0x2e9 DUP1
0x2ea REVERT
---
0x2e7: V285 = 0x0
0x2ea: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2eb
[0x2eb:0x304]
---
Predecessors: [0x2e0]
Successors: [0x32e]
---
0x2eb JUMPDEST
0x2ec PUSH2 0x305
0x2ef PUSH1 0x1
0x2f1 PUSH1 0xa0
0x2f3 PUSH1 0x2
0x2f5 EXP
0x2f6 SUB
0x2f7 PUSH1 0x4
0x2f9 CALLDATALOAD
0x2fa AND
0x2fb PUSH1 0x24
0x2fd CALLDATALOAD
0x2fe PUSH1 0x44
0x300 CALLDATALOAD
0x301 PUSH2 0x32e
0x304 JUMP
---
0x2eb: JUMPDEST 
0x2ec: V286 = 0x305
0x2ef: V287 = 0x1
0x2f1: V288 = 0xa0
0x2f3: V289 = 0x2
0x2f5: V290 = EXP 0x2 0xa0
0x2f6: V291 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f7: V292 = 0x4
0x2f9: V293 = CALLDATALOAD 0x4
0x2fa: V294 = AND V293 0xffffffffffffffffffffffffffffffffffffffff
0x2fb: V295 = 0x24
0x2fd: V296 = CALLDATALOAD 0x24
0x2fe: V297 = 0x44
0x300: V298 = CALLDATALOAD 0x44
0x301: V299 = 0x32e
0x304: JUMP 0x32e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x305, V294, V296, V298]
Exit stack: [V12, 0x305, V294, V296, V298]

================================

Block 0x305
[0x305:0x318]
---
Predecessors: [0x5e1]
Successors: []
---
0x305 JUMPDEST
0x306 PUSH1 0x40
0x308 MLOAD
0x309 SWAP1
0x30a ISZERO
0x30b ISZERO
0x30c DUP2
0x30d MSTORE
0x30e PUSH1 0x20
0x310 ADD
0x311 PUSH1 0x40
0x313 MLOAD
0x314 DUP1
0x315 SWAP2
0x316 SUB
0x317 SWAP1
0x318 RETURN
---
0x305: JUMPDEST 
0x306: V300 = 0x40
0x308: V301 = M[0x40]
0x30a: V302 = ISZERO V595
0x30b: V303 = ISZERO V302
0x30d: M[V301] = V303
0x30e: V304 = 0x20
0x310: V305 = ADD 0x20 V301
0x311: V306 = 0x40
0x313: V307 = M[0x40]
0x316: V308 = SUB V305 V307
0x318: RETURN V307 V308
---
Entry stack: [V12, V595]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x319
[0x319:0x31f]
---
Predecessors: [0x25]
Successors: [0x320, 0x324]
---
0x319 JUMPDEST
0x31a CALLVALUE
0x31b ISZERO
0x31c PUSH2 0x324
0x31f JUMPI
---
0x319: JUMPDEST 
0x31a: V309 = CALLVALUE
0x31b: V310 = ISZERO V309
0x31c: V311 = 0x324
0x31f: JUMPI 0x324 V310
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x320
[0x320:0x323]
---
Predecessors: [0x319]
Successors: []
---
0x320 PUSH1 0x0
0x322 DUP1
0x323 REVERT
---
0x320: V312 = 0x0
0x323: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x324
[0x324:0x32b]
---
Predecessors: [0x319]
Successors: [0x5ec]
---
0x324 JUMPDEST
0x325 PUSH2 0x2de
0x328 PUSH2 0x5ec
0x32b JUMP
---
0x324: JUMPDEST 
0x325: V313 = 0x2de
0x328: V314 = 0x5ec
0x32b: JUMP 0x5ec
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2de]
Exit stack: [V12, 0x2de]

================================

Block 0x32c
[0x32c:0x32d]
---
Predecessors: []
Successors: []
---
0x32c JUMPDEST
0x32d STOP
---
0x32c: JUMPDEST 
0x32d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x32e
[0x32e:0x33f]
---
Predecessors: [0x2eb]
Successors: [0x340, 0x342]
---
0x32e JUMPDEST
0x32f PUSH1 0x0
0x331 DUP1
0x332 DUP3
0x333 PUSH1 0x0
0x335 DUP1
0x336 DUP3
0x337 PUSH1 0x1
0x339 SLOAD
0x33a LT
0x33b DUP1
0x33c PUSH2 0x342
0x33f JUMPI
---
0x32e: JUMPDEST 
0x32f: V315 = 0x0
0x333: V316 = 0x0
0x337: V317 = 0x1
0x339: V318 = S[0x1]
0x33a: V319 = LT V318 V298
0x33c: V320 = 0x342
0x33f: JUMPI 0x342 V319
---
Entry stack: [V12, 0x305, V294, V296, V298]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, S0, 0x0, 0x0, V319]
Exit stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, 0x0, V319]

================================

Block 0x340
[0x340:0x341]
---
Predecessors: [0x32e]
Successors: [0x342]
---
0x340 POP
0x341 DUP2
---
0x340: NOP 
---
Entry stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, 0x0, V319]
Stack pops: 3
Stack additions: [S2, S1, S2]
Exit stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, 0x0, 0x0]

================================

Block 0x342
[0x342:0x347]
---
Predecessors: [0x32e, 0x340]
Successors: [0x348, 0x53e]
---
0x342 JUMPDEST
0x343 ISZERO
0x344 PUSH2 0x53e
0x347 JUMPI
---
0x342: JUMPDEST 
0x343: V321 = ISZERO S0
0x344: V322 = 0x53e
0x347: JUMPI 0x53e V321
---
Entry stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, 0x0]

================================

Block 0x348
[0x348:0x38b]
---
Predecessors: [0x342]
Successors: [0x38c, 0x390]
---
0x348 PUSH1 0x0
0x34a DUP1
0x34b SLOAD
0x34c PUSH1 0x1
0x34e PUSH1 0xa0
0x350 PUSH1 0x2
0x352 EXP
0x353 SUB
0x354 AND
0x355 SWAP1
0x356 PUSH4 0xe0a69f0d
0x35b SWAP1
0x35c PUSH1 0x40
0x35e MLOAD
0x35f PUSH1 0x20
0x361 ADD
0x362 MSTORE
0x363 PUSH1 0x40
0x365 MLOAD
0x366 DUP2
0x367 PUSH4 0xffffffff
0x36c AND
0x36d PUSH1 0xe0
0x36f PUSH1 0x2
0x371 EXP
0x372 MUL
0x373 DUP2
0x374 MSTORE
0x375 PUSH1 0x4
0x377 ADD
0x378 PUSH1 0x20
0x37a PUSH1 0x40
0x37c MLOAD
0x37d DUP1
0x37e DUP4
0x37f SUB
0x380 DUP2
0x381 PUSH1 0x0
0x383 DUP8
0x384 DUP1
0x385 EXTCODESIZE
0x386 ISZERO
0x387 ISZERO
0x388 PUSH2 0x390
0x38b JUMPI
---
0x348: V323 = 0x0
0x34b: V324 = S[0x0]
0x34c: V325 = 0x1
0x34e: V326 = 0xa0
0x350: V327 = 0x2
0x352: V328 = EXP 0x2 0xa0
0x353: V329 = SUB 0x10000000000000000000000000000000000000000 0x1
0x354: V330 = AND 0xffffffffffffffffffffffffffffffffffffffff V324
0x356: V331 = 0xe0a69f0d
0x35c: V332 = 0x40
0x35e: V333 = M[0x40]
0x35f: V334 = 0x20
0x361: V335 = ADD 0x20 V333
0x362: M[V335] = 0x0
0x363: V336 = 0x40
0x365: V337 = M[0x40]
0x367: V338 = 0xffffffff
0x36c: V339 = AND 0xffffffff 0xe0a69f0d
0x36d: V340 = 0xe0
0x36f: V341 = 0x2
0x371: V342 = EXP 0x2 0xe0
0x372: V343 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xe0a69f0d
0x374: M[V337] = 0xe0a69f0d00000000000000000000000000000000000000000000000000000000
0x375: V344 = 0x4
0x377: V345 = ADD 0x4 V337
0x378: V346 = 0x20
0x37a: V347 = 0x40
0x37c: V348 = M[0x40]
0x37f: V349 = SUB V345 V348
0x381: V350 = 0x0
0x385: V351 = EXTCODESIZE V330
0x386: V352 = ISZERO V351
0x387: V353 = ISZERO V352
0x388: V354 = 0x390
0x38b: JUMPI 0x390 V353
---
Entry stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, 0x0]
Stack pops: 0
Stack additions: [V330, 0xe0a69f0d, V345, 0x20, V348, V349, V348, 0x0, V330]
Exit stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, 0x0, V330, 0xe0a69f0d, V345, 0x20, V348, V349, V348, 0x0, V330]

================================

Block 0x38c
[0x38c:0x38f]
---
Predecessors: [0x348]
Successors: []
---
0x38c PUSH1 0x0
0x38e DUP1
0x38f REVERT
---
0x38c: V355 = 0x0
0x38f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, 0x0, V330, 0xe0a69f0d, V345, 0x20, V348, V349, V348, 0x0, V330]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, 0x0, V330, 0xe0a69f0d, V345, 0x20, V348, V349, V348, 0x0, V330]

================================

Block 0x390
[0x390:0x39c]
---
Predecessors: [0x348]
Successors: [0x39d, 0x3a1]
---
0x390 JUMPDEST
0x391 PUSH2 0x2c6
0x394 GAS
0x395 SUB
0x396 CALL
0x397 ISZERO
0x398 ISZERO
0x399 PUSH2 0x3a1
0x39c JUMPI
---
0x390: JUMPDEST 
0x391: V356 = 0x2c6
0x394: V357 = GAS
0x395: V358 = SUB V357 0x2c6
0x396: V359 = CALL V358 V330 0x0 V348 V349 V348 0x20
0x397: V360 = ISZERO V359
0x398: V361 = ISZERO V360
0x399: V362 = 0x3a1
0x39c: JUMPI 0x3a1 V361
---
Entry stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, 0x0, V330, 0xe0a69f0d, V345, 0x20, V348, V349, V348, 0x0, V330]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, 0x0, V330, 0xe0a69f0d, V345]

================================

Block 0x39d
[0x39d:0x3a0]
---
Predecessors: [0x390]
Successors: []
---
0x39d PUSH1 0x0
0x39f DUP1
0x3a0 REVERT
---
0x39d: V363 = 0x0
0x3a0: REVERT 0x0 0x0
---
Entry stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, 0x0, V330, 0xe0a69f0d, V345]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, 0x0, V330, 0xe0a69f0d, V345]

================================

Block 0x3a1
[0x3a1:0x3b8]
---
Predecessors: [0x390]
Successors: [0x3b9, 0x3c1]
---
0x3a1 JUMPDEST
0x3a2 POP
0x3a3 POP
0x3a4 POP
0x3a5 PUSH1 0x40
0x3a7 MLOAD
0x3a8 DUP1
0x3a9 MLOAD
0x3aa SWAP1
0x3ab POP
0x3ac SWAP1
0x3ad POP
0x3ae DUP1
0x3af PUSH1 0x1
0x3b1 SLOAD
0x3b2 LT
0x3b3 DUP1
0x3b4 ISZERO
0x3b5 PUSH2 0x3c1
0x3b8 JUMPI
---
0x3a1: JUMPDEST 
0x3a5: V364 = 0x40
0x3a7: V365 = M[0x40]
0x3a9: V366 = M[V365]
0x3af: V367 = 0x1
0x3b1: V368 = S[0x1]
0x3b2: V369 = LT V368 V366
0x3b4: V370 = ISZERO V369
0x3b5: V371 = 0x3c1
0x3b8: JUMPI 0x3c1 V370
---
Entry stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, 0x0, V330, 0xe0a69f0d, V345]
Stack pops: 4
Stack additions: [V366, V369]
Exit stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, V366, V369]

================================

Block 0x3b9
[0x3b9:0x3c0]
---
Predecessors: [0x3a1]
Successors: [0x3c1]
---
0x3b9 POP
0x3ba PUSH1 0x6
0x3bc SLOAD
0x3bd PUSH1 0xff
0x3bf AND
0x3c0 ISZERO
---
0x3ba: V372 = 0x6
0x3bc: V373 = S[0x6]
0x3bd: V374 = 0xff
0x3bf: V375 = AND 0xff V373
0x3c0: V376 = ISZERO V375
---
Entry stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, V366, V369]
Stack pops: 1
Stack additions: [V376]
Exit stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, V366, V376]

================================

Block 0x3c1
[0x3c1:0x3c6]
---
Predecessors: [0x3a1, 0x3b9]
Successors: [0x3c7, 0x53e]
---
0x3c1 JUMPDEST
0x3c2 ISZERO
0x3c3 PUSH2 0x53e
0x3c6 JUMPI
---
0x3c1: JUMPDEST 
0x3c2: V377 = ISZERO S0
0x3c3: V378 = 0x53e
0x3c6: JUMPI 0x53e V377
---
Entry stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, V366, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, V366]

================================

Block 0x3c7
[0x3c7:0x40a]
---
Predecessors: [0x3c1]
Successors: [0x40b, 0x40f]
---
0x3c7 PUSH1 0x0
0x3c9 DUP1
0x3ca SLOAD
0x3cb PUSH1 0x1
0x3cd PUSH1 0xa0
0x3cf PUSH1 0x2
0x3d1 EXP
0x3d2 SUB
0x3d3 AND
0x3d4 SWAP1
0x3d5 PUSH4 0xd25a992c
0x3da SWAP1
0x3db PUSH1 0x40
0x3dd MLOAD
0x3de PUSH1 0x20
0x3e0 ADD
0x3e1 MSTORE
0x3e2 PUSH1 0x40
0x3e4 MLOAD
0x3e5 DUP2
0x3e6 PUSH4 0xffffffff
0x3eb AND
0x3ec PUSH1 0xe0
0x3ee PUSH1 0x2
0x3f0 EXP
0x3f1 MUL
0x3f2 DUP2
0x3f3 MSTORE
0x3f4 PUSH1 0x4
0x3f6 ADD
0x3f7 PUSH1 0x20
0x3f9 PUSH1 0x40
0x3fb MLOAD
0x3fc DUP1
0x3fd DUP4
0x3fe SUB
0x3ff DUP2
0x400 PUSH1 0x0
0x402 DUP8
0x403 DUP1
0x404 EXTCODESIZE
0x405 ISZERO
0x406 ISZERO
0x407 PUSH2 0x40f
0x40a JUMPI
---
0x3c7: V379 = 0x0
0x3ca: V380 = S[0x0]
0x3cb: V381 = 0x1
0x3cd: V382 = 0xa0
0x3cf: V383 = 0x2
0x3d1: V384 = EXP 0x2 0xa0
0x3d2: V385 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d3: V386 = AND 0xffffffffffffffffffffffffffffffffffffffff V380
0x3d5: V387 = 0xd25a992c
0x3db: V388 = 0x40
0x3dd: V389 = M[0x40]
0x3de: V390 = 0x20
0x3e0: V391 = ADD 0x20 V389
0x3e1: M[V391] = 0x0
0x3e2: V392 = 0x40
0x3e4: V393 = M[0x40]
0x3e6: V394 = 0xffffffff
0x3eb: V395 = AND 0xffffffff 0xd25a992c
0x3ec: V396 = 0xe0
0x3ee: V397 = 0x2
0x3f0: V398 = EXP 0x2 0xe0
0x3f1: V399 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd25a992c
0x3f3: M[V393] = 0xd25a992c00000000000000000000000000000000000000000000000000000000
0x3f4: V400 = 0x4
0x3f6: V401 = ADD 0x4 V393
0x3f7: V402 = 0x20
0x3f9: V403 = 0x40
0x3fb: V404 = M[0x40]
0x3fe: V405 = SUB V401 V404
0x400: V406 = 0x0
0x404: V407 = EXTCODESIZE V386
0x405: V408 = ISZERO V407
0x406: V409 = ISZERO V408
0x407: V410 = 0x40f
0x40a: JUMPI 0x40f V409
---
Entry stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, V366]
Stack pops: 0
Stack additions: [V386, 0xd25a992c, V401, 0x20, V404, V405, V404, 0x0, V386]
Exit stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, V366, V386, 0xd25a992c, V401, 0x20, V404, V405, V404, 0x0, V386]

================================

Block 0x40b
[0x40b:0x40e]
---
Predecessors: [0x3c7]
Successors: []
---
0x40b PUSH1 0x0
0x40d DUP1
0x40e REVERT
---
0x40b: V411 = 0x0
0x40e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, V366, V386, 0xd25a992c, V401, 0x20, V404, V405, V404, 0x0, V386]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, V366, V386, 0xd25a992c, V401, 0x20, V404, V405, V404, 0x0, V386]

================================

Block 0x40f
[0x40f:0x41b]
---
Predecessors: [0x3c7]
Successors: [0x41c, 0x420]
---
0x40f JUMPDEST
0x410 PUSH2 0x2c6
0x413 GAS
0x414 SUB
0x415 CALL
0x416 ISZERO
0x417 ISZERO
0x418 PUSH2 0x420
0x41b JUMPI
---
0x40f: JUMPDEST 
0x410: V412 = 0x2c6
0x413: V413 = GAS
0x414: V414 = SUB V413 0x2c6
0x415: V415 = CALL V414 V386 0x0 V404 V405 V404 0x20
0x416: V416 = ISZERO V415
0x417: V417 = ISZERO V416
0x418: V418 = 0x420
0x41b: JUMPI 0x420 V417
---
Entry stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, V366, V386, 0xd25a992c, V401, 0x20, V404, V405, V404, 0x0, V386]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, V366, V386, 0xd25a992c, V401]

================================

Block 0x41c
[0x41c:0x41f]
---
Predecessors: [0x40f]
Successors: []
---
0x41c PUSH1 0x0
0x41e DUP1
0x41f REVERT
---
0x41c: V419 = 0x0
0x41f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, V366, V386, 0xd25a992c, V401]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, V366, V386, 0xd25a992c, V401]

================================

Block 0x420
[0x420:0x490]
---
Predecessors: [0x40f]
Successors: [0x491, 0x495]
---
0x420 JUMPDEST
0x421 POP
0x422 POP
0x423 POP
0x424 PUSH1 0x40
0x426 MLOAD
0x427 DUP1
0x428 MLOAD
0x429 PUSH1 0x3
0x42b DUP1
0x42c SLOAD
0x42d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x442 NOT
0x443 AND
0x444 PUSH1 0x1
0x446 PUSH1 0xa0
0x448 PUSH1 0x2
0x44a EXP
0x44b SUB
0x44c SWAP3
0x44d DUP4
0x44e AND
0x44f OR
0x450 SWAP1
0x451 SSTORE
0x452 PUSH1 0x0
0x454 DUP1
0x455 SLOAD
0x456 SWAP1
0x457 SWAP2
0x458 AND
0x459 SWAP2
0x45a POP
0x45b PUSH4 0x6fe3caba
0x460 SWAP1
0x461 PUSH1 0x40
0x463 MLOAD
0x464 PUSH1 0x20
0x466 ADD
0x467 MSTORE
0x468 PUSH1 0x40
0x46a MLOAD
0x46b DUP2
0x46c PUSH4 0xffffffff
0x471 AND
0x472 PUSH1 0xe0
0x474 PUSH1 0x2
0x476 EXP
0x477 MUL
0x478 DUP2
0x479 MSTORE
0x47a PUSH1 0x4
0x47c ADD
0x47d PUSH1 0x20
0x47f PUSH1 0x40
0x481 MLOAD
0x482 DUP1
0x483 DUP4
0x484 SUB
0x485 DUP2
0x486 PUSH1 0x0
0x488 DUP8
0x489 DUP1
0x48a EXTCODESIZE
0x48b ISZERO
0x48c ISZERO
0x48d PUSH2 0x495
0x490 JUMPI
---
0x420: JUMPDEST 
0x424: V420 = 0x40
0x426: V421 = M[0x40]
0x428: V422 = M[V421]
0x429: V423 = 0x3
0x42c: V424 = S[0x3]
0x42d: V425 = 0xffffffffffffffffffffffffffffffffffffffff
0x442: V426 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x443: V427 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V424
0x444: V428 = 0x1
0x446: V429 = 0xa0
0x448: V430 = 0x2
0x44a: V431 = EXP 0x2 0xa0
0x44b: V432 = SUB 0x10000000000000000000000000000000000000000 0x1
0x44e: V433 = AND 0xffffffffffffffffffffffffffffffffffffffff V422
0x44f: V434 = OR V433 V427
0x451: S[0x3] = V434
0x452: V435 = 0x0
0x455: V436 = S[0x0]
0x458: V437 = AND 0xffffffffffffffffffffffffffffffffffffffff V436
0x45b: V438 = 0x6fe3caba
0x461: V439 = 0x40
0x463: V440 = M[0x40]
0x464: V441 = 0x20
0x466: V442 = ADD 0x20 V440
0x467: M[V442] = 0x0
0x468: V443 = 0x40
0x46a: V444 = M[0x40]
0x46c: V445 = 0xffffffff
0x471: V446 = AND 0xffffffff 0x6fe3caba
0x472: V447 = 0xe0
0x474: V448 = 0x2
0x476: V449 = EXP 0x2 0xe0
0x477: V450 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x6fe3caba
0x479: M[V444] = 0x6fe3caba00000000000000000000000000000000000000000000000000000000
0x47a: V451 = 0x4
0x47c: V452 = ADD 0x4 V444
0x47d: V453 = 0x20
0x47f: V454 = 0x40
0x481: V455 = M[0x40]
0x484: V456 = SUB V452 V455
0x486: V457 = 0x0
0x48a: V458 = EXTCODESIZE V437
0x48b: V459 = ISZERO V458
0x48c: V460 = ISZERO V459
0x48d: V461 = 0x495
0x490: JUMPI 0x495 V460
---
Entry stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, V366, V386, 0xd25a992c, V401]
Stack pops: 3
Stack additions: [V437, 0x6fe3caba, V452, 0x20, V455, V456, V455, 0x0, V437]
Exit stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, V366, V437, 0x6fe3caba, V452, 0x20, V455, V456, V455, 0x0, V437]

================================

Block 0x491
[0x491:0x494]
---
Predecessors: [0x420]
Successors: []
---
0x491 PUSH1 0x0
0x493 DUP1
0x494 REVERT
---
0x491: V462 = 0x0
0x494: REVERT 0x0 0x0
---
Entry stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, V366, V437, 0x6fe3caba, V452, 0x20, V455, V456, V455, 0x0, V437]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, V366, V437, 0x6fe3caba, V452, 0x20, V455, V456, V455, 0x0, V437]

================================

Block 0x495
[0x495:0x4a1]
---
Predecessors: [0x420]
Successors: [0x4a2, 0x4a6]
---
0x495 JUMPDEST
0x496 PUSH2 0x2c6
0x499 GAS
0x49a SUB
0x49b CALL
0x49c ISZERO
0x49d ISZERO
0x49e PUSH2 0x4a6
0x4a1 JUMPI
---
0x495: JUMPDEST 
0x496: V463 = 0x2c6
0x499: V464 = GAS
0x49a: V465 = SUB V464 0x2c6
0x49b: V466 = CALL V465 V437 0x0 V455 V456 V455 0x20
0x49c: V467 = ISZERO V466
0x49d: V468 = ISZERO V467
0x49e: V469 = 0x4a6
0x4a1: JUMPI 0x4a6 V468
---
Entry stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, V366, V437, 0x6fe3caba, V452, 0x20, V455, V456, V455, 0x0, V437]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, V366, V437, 0x6fe3caba, V452]

================================

Block 0x4a2
[0x4a2:0x4a5]
---
Predecessors: [0x495]
Successors: []
---
0x4a2 PUSH1 0x0
0x4a4 DUP1
0x4a5 REVERT
---
0x4a2: V470 = 0x0
0x4a5: REVERT 0x0 0x0
---
Entry stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, V366, V437, 0x6fe3caba, V452]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, V366, V437, 0x6fe3caba, V452]

================================

Block 0x4a6
[0x4a6:0x516]
---
Predecessors: [0x495]
Successors: [0x517, 0x51b]
---
0x4a6 JUMPDEST
0x4a7 POP
0x4a8 POP
0x4a9 POP
0x4aa PUSH1 0x40
0x4ac MLOAD
0x4ad DUP1
0x4ae MLOAD
0x4af PUSH1 0x4
0x4b1 DUP1
0x4b2 SLOAD
0x4b3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c8 NOT
0x4c9 AND
0x4ca PUSH1 0x1
0x4cc PUSH1 0xa0
0x4ce PUSH1 0x2
0x4d0 EXP
0x4d1 SUB
0x4d2 SWAP3
0x4d3 DUP4
0x4d4 AND
0x4d5 OR
0x4d6 SWAP1
0x4d7 SSTORE
0x4d8 PUSH1 0x0
0x4da DUP1
0x4db SLOAD
0x4dc SWAP1
0x4dd SWAP2
0x4de AND
0x4df SWAP2
0x4e0 POP
0x4e1 PUSH4 0xa759c3a2
0x4e6 SWAP1
0x4e7 PUSH1 0x40
0x4e9 MLOAD
0x4ea PUSH1 0x20
0x4ec ADD
0x4ed MSTORE
0x4ee PUSH1 0x40
0x4f0 MLOAD
0x4f1 DUP2
0x4f2 PUSH4 0xffffffff
0x4f7 AND
0x4f8 PUSH1 0xe0
0x4fa PUSH1 0x2
0x4fc EXP
0x4fd MUL
0x4fe DUP2
0x4ff MSTORE
0x500 PUSH1 0x4
0x502 ADD
0x503 PUSH1 0x20
0x505 PUSH1 0x40
0x507 MLOAD
0x508 DUP1
0x509 DUP4
0x50a SUB
0x50b DUP2
0x50c PUSH1 0x0
0x50e DUP8
0x50f DUP1
0x510 EXTCODESIZE
0x511 ISZERO
0x512 ISZERO
0x513 PUSH2 0x51b
0x516 JUMPI
---
0x4a6: JUMPDEST 
0x4aa: V471 = 0x40
0x4ac: V472 = M[0x40]
0x4ae: V473 = M[V472]
0x4af: V474 = 0x4
0x4b2: V475 = S[0x4]
0x4b3: V476 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c8: V477 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x4c9: V478 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V475
0x4ca: V479 = 0x1
0x4cc: V480 = 0xa0
0x4ce: V481 = 0x2
0x4d0: V482 = EXP 0x2 0xa0
0x4d1: V483 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d4: V484 = AND 0xffffffffffffffffffffffffffffffffffffffff V473
0x4d5: V485 = OR V484 V478
0x4d7: S[0x4] = V485
0x4d8: V486 = 0x0
0x4db: V487 = S[0x0]
0x4de: V488 = AND 0xffffffffffffffffffffffffffffffffffffffff V487
0x4e1: V489 = 0xa759c3a2
0x4e7: V490 = 0x40
0x4e9: V491 = M[0x40]
0x4ea: V492 = 0x20
0x4ec: V493 = ADD 0x20 V491
0x4ed: M[V493] = 0x0
0x4ee: V494 = 0x40
0x4f0: V495 = M[0x40]
0x4f2: V496 = 0xffffffff
0x4f7: V497 = AND 0xffffffff 0xa759c3a2
0x4f8: V498 = 0xe0
0x4fa: V499 = 0x2
0x4fc: V500 = EXP 0x2 0xe0
0x4fd: V501 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa759c3a2
0x4ff: M[V495] = 0xa759c3a200000000000000000000000000000000000000000000000000000000
0x500: V502 = 0x4
0x502: V503 = ADD 0x4 V495
0x503: V504 = 0x20
0x505: V505 = 0x40
0x507: V506 = M[0x40]
0x50a: V507 = SUB V503 V506
0x50c: V508 = 0x0
0x510: V509 = EXTCODESIZE V488
0x511: V510 = ISZERO V509
0x512: V511 = ISZERO V510
0x513: V512 = 0x51b
0x516: JUMPI 0x51b V511
---
Entry stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, V366, V437, 0x6fe3caba, V452]
Stack pops: 3
Stack additions: [V488, 0xa759c3a2, V503, 0x20, V506, V507, V506, 0x0, V488]
Exit stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, V366, V488, 0xa759c3a2, V503, 0x20, V506, V507, V506, 0x0, V488]

================================

Block 0x517
[0x517:0x51a]
---
Predecessors: [0x4a6]
Successors: []
---
0x517 PUSH1 0x0
0x519 DUP1
0x51a REVERT
---
0x517: V513 = 0x0
0x51a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, V366, V488, 0xa759c3a2, V503, 0x20, V506, V507, V506, 0x0, V488]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, V366, V488, 0xa759c3a2, V503, 0x20, V506, V507, V506, 0x0, V488]

================================

Block 0x51b
[0x51b:0x527]
---
Predecessors: [0x4a6]
Successors: [0x528, 0x52c]
---
0x51b JUMPDEST
0x51c PUSH2 0x2c6
0x51f GAS
0x520 SUB
0x521 CALL
0x522 ISZERO
0x523 ISZERO
0x524 PUSH2 0x52c
0x527 JUMPI
---
0x51b: JUMPDEST 
0x51c: V514 = 0x2c6
0x51f: V515 = GAS
0x520: V516 = SUB V515 0x2c6
0x521: V517 = CALL V516 V488 0x0 V506 V507 V506 0x20
0x522: V518 = ISZERO V517
0x523: V519 = ISZERO V518
0x524: V520 = 0x52c
0x527: JUMPI 0x52c V519
---
Entry stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, V366, V488, 0xa759c3a2, V503, 0x20, V506, V507, V506, 0x0, V488]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, V366, V488, 0xa759c3a2, V503]

================================

Block 0x528
[0x528:0x52b]
---
Predecessors: [0x51b]
Successors: []
---
0x528 PUSH1 0x0
0x52a DUP1
0x52b REVERT
---
0x528: V521 = 0x0
0x52b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, V366, V488, 0xa759c3a2, V503]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, V366, V488, 0xa759c3a2, V503]

================================

Block 0x52c
[0x52c:0x53d]
---
Predecessors: [0x51b]
Successors: [0x53e]
---
0x52c JUMPDEST
0x52d POP
0x52e POP
0x52f POP
0x530 PUSH1 0x40
0x532 MLOAD
0x533 DUP1
0x534 MLOAD
0x535 PUSH1 0x5
0x537 SSTORE
0x538 POP
0x539 PUSH1 0x1
0x53b DUP2
0x53c SWAP1
0x53d SSTORE
---
0x52c: JUMPDEST 
0x530: V522 = 0x40
0x532: V523 = M[0x40]
0x534: V524 = M[V523]
0x535: V525 = 0x5
0x537: S[0x5] = V524
0x539: V526 = 0x1
0x53d: S[0x1] = V366
---
Entry stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, V366, V488, 0xa759c3a2, V503]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, V366]

================================

Block 0x53e
[0x53e:0x53e]
---
Predecessors: [0x342, 0x3c1, 0x52c]
Successors: [0x53f]
---
0x53e JUMPDEST
---
0x53e: JUMPDEST 
---
Entry stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, S0]

================================

Block 0x53f
[0x53f:0x556]
---
Predecessors: [0x53e]
Successors: [0x557, 0x55b]
---
0x53f JUMPDEST
0x540 PUSH1 0x4
0x542 SLOAD
0x543 PUSH1 0x1
0x545 PUSH1 0xa0
0x547 PUSH1 0x2
0x549 EXP
0x54a SUB
0x54b SWAP1
0x54c DUP2
0x54d AND
0x54e SWAP1
0x54f CALLER
0x550 AND
0x551 DUP2
0x552 EQ
0x553 PUSH2 0x55b
0x556 JUMPI
---
0x53f: JUMPDEST 
0x540: V527 = 0x4
0x542: V528 = S[0x4]
0x543: V529 = 0x1
0x545: V530 = 0xa0
0x547: V531 = 0x2
0x549: V532 = EXP 0x2 0xa0
0x54a: V533 = SUB 0x10000000000000000000000000000000000000000 0x1
0x54d: V534 = AND 0xffffffffffffffffffffffffffffffffffffffff V528
0x54f: V535 = CALLER
0x550: V536 = AND V535 0xffffffffffffffffffffffffffffffffffffffff
0x552: V537 = EQ V534 V536
0x553: V538 = 0x55b
0x556: JUMPI 0x55b V537
---
Entry stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, S0]
Stack pops: 0
Stack additions: [V534]
Exit stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, S0, V534]

================================

Block 0x557
[0x557:0x55a]
---
Predecessors: [0x53f]
Successors: []
---
0x557 PUSH1 0x0
0x559 DUP1
0x55a REVERT
---
0x557: V539 = 0x0
0x55a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, S1, V534]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, S1, V534]

================================

Block 0x55b
[0x55b:0x5bc]
---
Predecessors: [0x53f]
Successors: [0x5bd, 0x5c1]
---
0x55b JUMPDEST
0x55c PUSH1 0x3
0x55e SLOAD
0x55f DUP10
0x560 SWAP6
0x561 POP
0x562 PUSH1 0x1
0x564 PUSH1 0xa0
0x566 PUSH1 0x2
0x568 EXP
0x569 SUB
0x56a DUP1
0x56b DUP8
0x56c AND
0x56d SWAP2
0x56e PUSH4 0xa9059cbb
0x573 SWAP2
0x574 AND
0x575 DUP11
0x576 PUSH1 0x0
0x578 PUSH1 0x40
0x57a MLOAD
0x57b PUSH1 0x20
0x57d ADD
0x57e MSTORE
0x57f PUSH1 0x40
0x581 MLOAD
0x582 PUSH1 0xe0
0x584 PUSH1 0x2
0x586 EXP
0x587 PUSH4 0xffffffff
0x58c DUP6
0x58d AND
0x58e MUL
0x58f DUP2
0x590 MSTORE
0x591 PUSH1 0x1
0x593 PUSH1 0xa0
0x595 PUSH1 0x2
0x597 EXP
0x598 SUB
0x599 SWAP1
0x59a SWAP3
0x59b AND
0x59c PUSH1 0x4
0x59e DUP4
0x59f ADD
0x5a0 MSTORE
0x5a1 PUSH1 0x24
0x5a3 DUP3
0x5a4 ADD
0x5a5 MSTORE
0x5a6 PUSH1 0x44
0x5a8 ADD
0x5a9 PUSH1 0x20
0x5ab PUSH1 0x40
0x5ad MLOAD
0x5ae DUP1
0x5af DUP4
0x5b0 SUB
0x5b1 DUP2
0x5b2 PUSH1 0x0
0x5b4 DUP8
0x5b5 DUP1
0x5b6 EXTCODESIZE
0x5b7 ISZERO
0x5b8 ISZERO
0x5b9 PUSH2 0x5c1
0x5bc JUMPI
---
0x55b: JUMPDEST 
0x55c: V540 = 0x3
0x55e: V541 = S[0x3]
0x562: V542 = 0x1
0x564: V543 = 0xa0
0x566: V544 = 0x2
0x568: V545 = EXP 0x2 0xa0
0x569: V546 = SUB 0x10000000000000000000000000000000000000000 0x1
0x56c: V547 = AND V294 0xffffffffffffffffffffffffffffffffffffffff
0x56e: V548 = 0xa9059cbb
0x574: V549 = AND 0xffffffffffffffffffffffffffffffffffffffff V541
0x576: V550 = 0x0
0x578: V551 = 0x40
0x57a: V552 = M[0x40]
0x57b: V553 = 0x20
0x57d: V554 = ADD 0x20 V552
0x57e: M[V554] = 0x0
0x57f: V555 = 0x40
0x581: V556 = M[0x40]
0x582: V557 = 0xe0
0x584: V558 = 0x2
0x586: V559 = EXP 0x2 0xe0
0x587: V560 = 0xffffffff
0x58d: V561 = AND 0xa9059cbb 0xffffffff
0x58e: V562 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x590: M[V556] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x591: V563 = 0x1
0x593: V564 = 0xa0
0x595: V565 = 0x2
0x597: V566 = EXP 0x2 0xa0
0x598: V567 = SUB 0x10000000000000000000000000000000000000000 0x1
0x59b: V568 = AND V549 0xffffffffffffffffffffffffffffffffffffffff
0x59c: V569 = 0x4
0x59f: V570 = ADD V556 0x4
0x5a0: M[V570] = V568
0x5a1: V571 = 0x24
0x5a4: V572 = ADD V556 0x24
0x5a5: M[V572] = V296
0x5a6: V573 = 0x44
0x5a8: V574 = ADD 0x44 V556
0x5a9: V575 = 0x20
0x5ab: V576 = 0x40
0x5ad: V577 = M[0x40]
0x5b0: V578 = SUB V574 V577
0x5b2: V579 = 0x0
0x5b6: V580 = EXTCODESIZE V547
0x5b7: V581 = ISZERO V580
0x5b8: V582 = ISZERO V581
0x5b9: V583 = 0x5c1
0x5bc: JUMPI 0x5c1 V582
---
Entry stack: [V12, 0x305, V294, V296, V298, 0x0, 0x0, V298, 0x0, S1, V534]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S8, S3, S2, S1, S0, V547, 0xa9059cbb, V574, 0x20, V577, V578, V577, 0x0, V547]
Exit stack: [V12, 0x305, V294, V296, V298, 0x0, V294, V298, 0x0, S1, V534, V547, 0xa9059cbb, V574, 0x20, V577, V578, V577, 0x0, V547]

================================

Block 0x5bd
[0x5bd:0x5c0]
---
Predecessors: [0x55b]
Successors: []
---
0x5bd PUSH1 0x0
0x5bf DUP1
0x5c0 REVERT
---
0x5bd: V584 = 0x0
0x5c0: REVERT 0x0 0x0
---
Entry stack: [V12, 0x305, V294, V296, V298, 0x0, V294, V298, 0x0, S10, V534, V547, 0xa9059cbb, V574, 0x20, V577, V578, V577, 0x0, V547]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x305, V294, V296, V298, 0x0, V294, V298, 0x0, S10, V534, V547, 0xa9059cbb, V574, 0x20, V577, V578, V577, 0x0, V547]

================================

Block 0x5c1
[0x5c1:0x5cd]
---
Predecessors: [0x55b]
Successors: [0x5ce, 0x5d2]
---
0x5c1 JUMPDEST
0x5c2 PUSH2 0x2c6
0x5c5 GAS
0x5c6 SUB
0x5c7 CALL
0x5c8 ISZERO
0x5c9 ISZERO
0x5ca PUSH2 0x5d2
0x5cd JUMPI
---
0x5c1: JUMPDEST 
0x5c2: V585 = 0x2c6
0x5c5: V586 = GAS
0x5c6: V587 = SUB V586 0x2c6
0x5c7: V588 = CALL V587 V547 0x0 V577 V578 V577 0x20
0x5c8: V589 = ISZERO V588
0x5c9: V590 = ISZERO V589
0x5ca: V591 = 0x5d2
0x5cd: JUMPI 0x5d2 V590
---
Entry stack: [V12, 0x305, V294, V296, V298, 0x0, V294, V298, 0x0, S10, V534, V547, 0xa9059cbb, V574, 0x20, V577, V578, V577, 0x0, V547]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x305, V294, V296, V298, 0x0, V294, V298, 0x0, S10, V534, V547, 0xa9059cbb, V574]

================================

Block 0x5ce
[0x5ce:0x5d1]
---
Predecessors: [0x5c1]
Successors: []
---
0x5ce PUSH1 0x0
0x5d0 DUP1
0x5d1 REVERT
---
0x5ce: V592 = 0x0
0x5d1: REVERT 0x0 0x0
---
Entry stack: [V12, 0x305, V294, V296, V298, 0x0, V294, V298, 0x0, S4, V534, V547, 0xa9059cbb, V574]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x305, V294, V296, V298, 0x0, V294, V298, 0x0, S4, V534, V547, 0xa9059cbb, V574]

================================

Block 0x5d2
[0x5d2:0x5dd]
---
Predecessors: [0x5c1]
Successors: [0x5de]
---
0x5d2 JUMPDEST
0x5d3 POP
0x5d4 POP
0x5d5 POP
0x5d6 PUSH1 0x40
0x5d8 MLOAD
0x5d9 DUP1
0x5da MLOAD
0x5db SWAP7
0x5dc POP
0x5dd POP
---
0x5d2: JUMPDEST 
0x5d6: V593 = 0x40
0x5d8: V594 = M[0x40]
0x5da: V595 = M[V594]
---
Entry stack: [V12, 0x305, V294, V296, V298, 0x0, V294, V298, 0x0, S4, V534, V547, 0xa9059cbb, V574]
Stack pops: 9
Stack additions: [V595, S7, S6, S5, S4, S3]
Exit stack: [V12, 0x305, V294, V296, V298, V595, V294, V298, 0x0, S4, V534]

================================

Block 0x5de
[0x5de:0x5de]
---
Predecessors: [0x5d2]
Successors: [0x5df]
---
0x5de JUMPDEST
---
0x5de: JUMPDEST 
---
Entry stack: [V12, 0x305, V294, V296, V298, V595, V294, V298, 0x0, S1, V534]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x305, V294, V296, V298, V595, V294, V298, 0x0, S1, V534]

================================

Block 0x5df
[0x5df:0x5e0]
---
Predecessors: [0x5de]
Successors: [0x5e1]
---
0x5df JUMPDEST
0x5e0 POP
---
0x5df: JUMPDEST 
---
Entry stack: [V12, 0x305, V294, V296, V298, V595, V294, V298, 0x0, S1, V534]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x305, V294, V296, V298, V595, V294, V298, 0x0, S1]

================================

Block 0x5e1
[0x5e1:0x5eb]
---
Predecessors: [0x5df]
Successors: [0x305]
---
0x5e1 JUMPDEST
0x5e2 POP
0x5e3 POP
0x5e4 POP
0x5e5 POP
0x5e6 SWAP4
0x5e7 SWAP3
0x5e8 POP
0x5e9 POP
0x5ea POP
0x5eb JUMP
---
0x5e1: JUMPDEST 
0x5eb: JUMP 0x305
---
Entry stack: [V12, 0x305, V294, V296, V298, V595, V294, V298, 0x0, S0]
Stack pops: 9
Stack additions: [S4]
Exit stack: [V12, V595]

================================

Block 0x5ec
[0x5ec:0x603]
---
Predecessors: [0x324]
Successors: [0x604, 0x608]
---
0x5ec JUMPDEST
0x5ed PUSH1 0x2
0x5ef SLOAD
0x5f0 PUSH1 0x1
0x5f2 PUSH1 0xa0
0x5f4 PUSH1 0x2
0x5f6 EXP
0x5f7 SUB
0x5f8 SWAP1
0x5f9 DUP2
0x5fa AND
0x5fb SWAP1
0x5fc CALLER
0x5fd AND
0x5fe DUP2
0x5ff EQ
0x600 PUSH2 0x608
0x603 JUMPI
---
0x5ec: JUMPDEST 
0x5ed: V596 = 0x2
0x5ef: V597 = S[0x2]
0x5f0: V598 = 0x1
0x5f2: V599 = 0xa0
0x5f4: V600 = 0x2
0x5f6: V601 = EXP 0x2 0xa0
0x5f7: V602 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5fa: V603 = AND 0xffffffffffffffffffffffffffffffffffffffff V597
0x5fc: V604 = CALLER
0x5fd: V605 = AND V604 0xffffffffffffffffffffffffffffffffffffffff
0x5ff: V606 = EQ V603 V605
0x600: V607 = 0x608
0x603: JUMPI 0x608 V606
---
Entry stack: [V12, 0x2de]
Stack pops: 0
Stack additions: [V603]
Exit stack: [V12, 0x2de, V603]

================================

Block 0x604
[0x604:0x607]
---
Predecessors: [0x5ec]
Successors: []
---
0x604 PUSH1 0x0
0x606 DUP1
0x607 REVERT
---
0x604: V608 = 0x0
0x607: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2de, V603]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2de, V603]

================================

Block 0x608
[0x608:0x651]
---
Predecessors: [0x5ec]
Successors: [0x652]
---
0x608 JUMPDEST
0x609 PUSH1 0x6
0x60b DUP1
0x60c SLOAD
0x60d PUSH1 0x1
0x60f PUSH1 0xff
0x611 NOT
0x612 SWAP1
0x613 SWAP2
0x614 AND
0x615 OR
0x616 SWAP1
0x617 SSTORE
0x618 PUSH1 0x2
0x61a SLOAD
0x61b PUSH1 0x3
0x61d DUP1
0x61e SLOAD
0x61f PUSH1 0x1
0x621 PUSH1 0xa0
0x623 PUSH1 0x2
0x625 EXP
0x626 SUB
0x627 SWAP1
0x628 SWAP3
0x629 AND
0x62a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x63f NOT
0x640 SWAP3
0x641 DUP4
0x642 AND
0x643 DUP2
0x644 OR
0x645 SWAP1
0x646 SWAP2
0x647 SSTORE
0x648 PUSH1 0x4
0x64a DUP1
0x64b SLOAD
0x64c SWAP1
0x64d SWAP3
0x64e AND
0x64f OR
0x650 SWAP1
0x651 SSTORE
---
0x608: JUMPDEST 
0x609: V609 = 0x6
0x60c: V610 = S[0x6]
0x60d: V611 = 0x1
0x60f: V612 = 0xff
0x611: V613 = NOT 0xff
0x614: V614 = AND V610 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
0x615: V615 = OR V614 0x1
0x617: S[0x6] = V615
0x618: V616 = 0x2
0x61a: V617 = S[0x2]
0x61b: V618 = 0x3
0x61e: V619 = S[0x3]
0x61f: V620 = 0x1
0x621: V621 = 0xa0
0x623: V622 = 0x2
0x625: V623 = EXP 0x2 0xa0
0x626: V624 = SUB 0x10000000000000000000000000000000000000000 0x1
0x629: V625 = AND V617 0xffffffffffffffffffffffffffffffffffffffff
0x62a: V626 = 0xffffffffffffffffffffffffffffffffffffffff
0x63f: V627 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x642: V628 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V619
0x644: V629 = OR V625 V628
0x647: S[0x3] = V629
0x648: V630 = 0x4
0x64b: V631 = S[0x4]
0x64e: V632 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V631
0x64f: V633 = OR V632 V625
0x651: S[0x4] = V633
---
Entry stack: [V12, 0x2de, V603]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2de, V603]

================================

Block 0x652
[0x652:0x652]
---
Predecessors: [0x608]
Successors: [0x653]
---
0x652 JUMPDEST
---
0x652: JUMPDEST 
---
Entry stack: [V12, 0x2de, V603]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2de, V603]

================================

Block 0x653
[0x653:0x655]
---
Predecessors: [0x652]
Successors: [0x2de]
---
0x653 JUMPDEST
0x654 POP
0x655 JUMP
---
0x653: JUMPDEST 
0x655: JUMP 0x2de
---
Entry stack: [V12, 0x2de, V603]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x656
[0x656:0x68c]
---
Predecessors: []
Successors: []
---
0x656 STOP
0x657 LOG1
0x658 PUSH6 0x627a7a723058
0x65f SHA3
0x660 SWAP6
0x661 MISSING 0xad
0x662 MISSING 0xbc
0x663 EQ
0x664 SWAP9
0x665 MISSING 0x5e
0x666 PUSH8 0x87108721107a9b54
0x66f LOG1
0x670 CODESIZE
0x671 MISSING 0xa7
0x672 MISSING 0xfb
0x673 SGT
0x674 MISSING 0xb3
0x675 INVALID
0x676 MISSING 0xd9
0x677 SHL
0x678 MISSING 0xa8
0x679 LOG2
0x67a MISSING 0xf
0x67b DUP7
0x67c MISSING 0xcf
0x67d EXTCODEHASH
0x67e MISSING 0xa6
0x67f PUSH13 0x29
---
0x656: STOP 
0x657: LOG S0 S1 S2
0x658: V634 = 0x627a7a723058
0x65f: V635 = SHA3 0x627a7a723058 S3
0x661: MISSING 0xad
0x662: MISSING 0xbc
0x663: V636 = EQ S0 S1
0x665: MISSING 0x5e
0x666: V637 = 0x87108721107a9b54
0x66f: LOG 0x87108721107a9b54 S0 S1
0x670: V638 = CODESIZE
0x671: MISSING 0xa7
0x672: MISSING 0xfb
0x673: V639 = SGT S0 S1
0x674: MISSING 0xb3
0x675: INVALID 
0x676: MISSING 0xd9
0x677: V640 = SHL S0 S1
0x678: MISSING 0xa8
0x679: LOG S0 S1 S2 S3
0x67a: MISSING 0xf
0x67c: MISSING 0xcf
0x67d: V641 = EXTCODEHASH S0
0x67e: MISSING 0xa6
0x67f: V642 = 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S9, S4, S5, S6, S7, S8, V635, S10, S2, S3, S4, S5, S6, S7, S8, S9, V636, V638, V639, V640, S6, S0, S1, S2, S3, S4, S5, S6, V641, 0x29]
Exit stack: []

================================

Function 0:
Public function signature: 0xd0b022ba
Entry block: 0x2e0
Exit block: 0x528
Body: 0x2e0, 0x2e7, 0x2eb, 0x305, 0x32e, 0x340, 0x342, 0x348, 0x38c, 0x390, 0x39d, 0x3a1, 0x3b9, 0x3c1, 0x3c7, 0x40b, 0x40f, 0x41c, 0x420, 0x491, 0x495, 0x4a2, 0x4a6, 0x517, 0x51b, 0x528, 0x52c, 0x53e, 0x53f, 0x557, 0x55b, 0x5bd, 0x5c1, 0x5ce, 0x5d2, 0x5de, 0x5df, 0x5e1

Function 1:
Public function signature: 0xd5d9ce91
Entry block: 0x319
Exit block: 0x2de
Body: 0x2de, 0x319, 0x320, 0x324, 0x5ec, 0x604, 0x608, 0x652, 0x653

Function 2:
Public fallback function
Entry block: 0x30
Exit block: 0x23a
Body: 0x30, 0x31, 0x3d, 0x41, 0x52, 0x54, 0x5a, 0x9e, 0xa2, 0xaf, 0xb3, 0xcb, 0xd3, 0xd9, 0x11d, 0x121, 0x12e, 0x132, 0x1a3, 0x1a7, 0x1b4, 0x1b8, 0x229, 0x22d, 0x23a, 0x23e, 0x250, 0x251, 0x27f, 0x2d3, 0x2d8, 0x2d9, 0x2da, 0x2de

