Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x119]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x119
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x119
0xc: JUMPI 0x119 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x11e]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x20caea39
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x11e
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x20caea39
0x22: V15 = EQ V13 0x20caea39
0x23: V16 = 0x11e
0x26: JUMPI 0x11e V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x128]
---
0x27 DUP1
0x28 PUSH4 0x27ebe40a
0x2d EQ
0x2e PUSH2 0x128
0x31 JUMPI
---
0x28: V17 = 0x27ebe40a
0x2d: V18 = EQ 0x27ebe40a V13
0x2e: V19 = 0x128
0x31: JUMPI 0x128 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x153]
---
0x32 DUP1
0x33 PUSH4 0x3f4ba83a
0x38 EQ
0x39 PUSH2 0x153
0x3c JUMPI
---
0x33: V20 = 0x3f4ba83a
0x38: V21 = EQ 0x3f4ba83a V13
0x39: V22 = 0x153
0x3c: JUMPI 0x153 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x17a]
---
0x3d DUP1
0x3e PUSH4 0x42577935
0x43 EQ
0x44 PUSH2 0x17a
0x47 JUMPI
---
0x3e: V23 = 0x42577935
0x43: V24 = EQ 0x42577935 V13
0x44: V25 = 0x17a
0x47: JUMPI 0x17a V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x193]
---
0x48 DUP1
0x49 PUSH4 0x454a2ab3
0x4e EQ
0x4f PUSH2 0x193
0x52 JUMPI
---
0x49: V26 = 0x454a2ab3
0x4e: V27 = EQ 0x454a2ab3 V13
0x4f: V28 = 0x193
0x52: JUMPI 0x193 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x19e]
---
0x53 DUP1
0x54 PUSH4 0x484eccb4
0x59 EQ
0x5a PUSH2 0x19e
0x5d JUMPI
---
0x54: V29 = 0x484eccb4
0x59: V30 = EQ 0x484eccb4 V13
0x5a: V31 = 0x19e
0x5d: JUMPI 0x19e V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x1c6]
---
0x5e DUP1
0x5f PUSH4 0x5c975abb
0x64 EQ
0x65 PUSH2 0x1c6
0x68 JUMPI
---
0x5f: V32 = 0x5c975abb
0x64: V33 = EQ 0x5c975abb V13
0x65: V34 = 0x1c6
0x68: JUMPI 0x1c6 V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x1d9]
---
0x69 DUP1
0x6a PUSH4 0x5fd8c710
0x6f EQ
0x70 PUSH2 0x1d9
0x73 JUMPI
---
0x6a: V35 = 0x5fd8c710
0x6f: V36 = EQ 0x5fd8c710 V13
0x70: V37 = 0x1d9
0x73: JUMPI 0x1d9 V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x1ec]
---
0x74 DUP1
0x75 PUSH4 0x6108ceb6
0x7a EQ
0x7b PUSH2 0x1ec
0x7e JUMPI
---
0x75: V38 = 0x6108ceb6
0x7a: V39 = EQ 0x6108ceb6 V13
0x7b: V40 = 0x1ec
0x7e: JUMPI 0x1ec V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x89]
---
Predecessors: [0x74]
Successors: [0x8a, 0x1ff]
---
0x7f DUP1
0x80 PUSH4 0x78bd7935
0x85 EQ
0x86 PUSH2 0x1ff
0x89 JUMPI
---
0x80: V41 = 0x78bd7935
0x85: V42 = EQ 0x78bd7935 V13
0x86: V43 = 0x1ff
0x89: JUMPI 0x1ff V42
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x8a
[0x8a:0x94]
---
Predecessors: [0x7f]
Successors: [0x95, 0x250]
---
0x8a DUP1
0x8b PUSH4 0x83b5ff8b
0x90 EQ
0x91 PUSH2 0x250
0x94 JUMPI
---
0x8b: V44 = 0x83b5ff8b
0x90: V45 = EQ 0x83b5ff8b V13
0x91: V46 = 0x250
0x94: JUMPI 0x250 V45
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x95
[0x95:0x9f]
---
Predecessors: [0x8a]
Successors: [0xa0, 0x263]
---
0x95 DUP1
0x96 PUSH4 0x8456cb59
0x9b EQ
0x9c PUSH2 0x263
0x9f JUMPI
---
0x96: V47 = 0x8456cb59
0x9b: V48 = EQ 0x8456cb59 V13
0x9c: V49 = 0x263
0x9f: JUMPI 0x263 V48
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xa0
[0xa0:0xaa]
---
Predecessors: [0x95]
Successors: [0xab, 0x276]
---
0xa0 DUP1
0xa1 PUSH4 0x85b86188
0xa6 EQ
0xa7 PUSH2 0x276
0xaa JUMPI
---
0xa1: V50 = 0x85b86188
0xa6: V51 = EQ 0x85b86188 V13
0xa7: V52 = 0x276
0xaa: JUMPI 0x276 V51
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xab
[0xab:0xb5]
---
Predecessors: [0xa0]
Successors: [0xb6, 0x289]
---
0xab DUP1
0xac PUSH4 0x878eb368
0xb1 EQ
0xb2 PUSH2 0x289
0xb5 JUMPI
---
0xac: V53 = 0x878eb368
0xb1: V54 = EQ 0x878eb368 V13
0xb2: V55 = 0x289
0xb5: JUMPI 0x289 V54
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xb6
[0xb6:0xc0]
---
Predecessors: [0xab]
Successors: [0xc1, 0x29f]
---
0xb6 DUP1
0xb7 PUSH4 0x8a98a9cc
0xbc EQ
0xbd PUSH2 0x29f
0xc0 JUMPI
---
0xb7: V56 = 0x8a98a9cc
0xbc: V57 = EQ 0x8a98a9cc V13
0xbd: V58 = 0x29f
0xc0: JUMPI 0x29f V57
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xc1
[0xc1:0xcb]
---
Predecessors: [0xb6]
Successors: [0xcc, 0x2b2]
---
0xc1 DUP1
0xc2 PUSH4 0x8da5cb5b
0xc7 EQ
0xc8 PUSH2 0x2b2
0xcb JUMPI
---
0xc2: V59 = 0x8da5cb5b
0xc7: V60 = EQ 0x8da5cb5b V13
0xc8: V61 = 0x2b2
0xcb: JUMPI 0x2b2 V60
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xcc
[0xcc:0xd6]
---
Predecessors: [0xc1]
Successors: [0xd7, 0x2e1]
---
0xcc DUP1
0xcd PUSH4 0x96b5a755
0xd2 EQ
0xd3 PUSH2 0x2e1
0xd6 JUMPI
---
0xcd: V62 = 0x96b5a755
0xd2: V63 = EQ 0x96b5a755 V13
0xd3: V64 = 0x2e1
0xd6: JUMPI 0x2e1 V63
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xd7
[0xd7:0xe1]
---
Predecessors: [0xcc]
Successors: [0xe2, 0x2f7]
---
0xd7 DUP1
0xd8 PUSH4 0xc55d0f56
0xdd EQ
0xde PUSH2 0x2f7
0xe1 JUMPI
---
0xd8: V65 = 0xc55d0f56
0xdd: V66 = EQ 0xc55d0f56 V13
0xde: V67 = 0x2f7
0xe1: JUMPI 0x2f7 V66
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xe2
[0xe2:0xec]
---
Predecessors: [0xd7]
Successors: [0xed, 0x30d]
---
0xe2 DUP1
0xe3 PUSH4 0xdd1b7a0f
0xe8 EQ
0xe9 PUSH2 0x30d
0xec JUMPI
---
0xe3: V68 = 0xdd1b7a0f
0xe8: V69 = EQ 0xdd1b7a0f V13
0xe9: V70 = 0x30d
0xec: JUMPI 0x30d V69
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xed
[0xed:0xf7]
---
Predecessors: [0xe2]
Successors: [0xf8, 0x320]
---
0xed DUP1
0xee PUSH4 0xeac9d94c
0xf3 EQ
0xf4 PUSH2 0x320
0xf7 JUMPI
---
0xee: V71 = 0xeac9d94c
0xf3: V72 = EQ 0xeac9d94c V13
0xf4: V73 = 0x320
0xf7: JUMPI 0x320 V72
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xf8
[0xf8:0x102]
---
Predecessors: [0xed]
Successors: [0x103, 0x333]
---
0xf8 DUP1
0xf9 PUSH4 0xee0ebe0c
0xfe EQ
0xff PUSH2 0x333
0x102 JUMPI
---
0xf9: V74 = 0xee0ebe0c
0xfe: V75 = EQ 0xee0ebe0c V13
0xff: V76 = 0x333
0x102: JUMPI 0x333 V75
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x103
[0x103:0x10d]
---
Predecessors: [0xf8]
Successors: [0x10e, 0x35e]
---
0x103 DUP1
0x104 PUSH4 0xf2fde38b
0x109 EQ
0x10a PUSH2 0x35e
0x10d JUMPI
---
0x104: V77 = 0xf2fde38b
0x109: V78 = EQ 0xf2fde38b V13
0x10a: V79 = 0x35e
0x10d: JUMPI 0x35e V78
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x10e
[0x10e:0x118]
---
Predecessors: [0x103]
Successors: [0x119, 0x37d]
---
0x10e DUP1
0x10f PUSH4 0xf40e28f2
0x114 EQ
0x115 PUSH2 0x37d
0x118 JUMPI
---
0x10f: V80 = 0xf40e28f2
0x114: V81 = EQ 0xf40e28f2 V13
0x115: V82 = 0x37d
0x118: JUMPI 0x37d V81
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x119
[0x119:0x11d]
---
Predecessors: [0x0, 0x10e]
Successors: []
---
0x119 JUMPDEST
0x11a PUSH1 0x0
0x11c DUP1
0x11d REVERT
---
0x119: JUMPDEST 
0x11a: V83 = 0x0
0x11d: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x11e
[0x11e:0x125]
---
Predecessors: [0xd]
Successors: [0x3a8]
---
0x11e JUMPDEST
0x11f PUSH2 0x126
0x122 PUSH2 0x3a8
0x125 JUMP
---
0x11e: JUMPDEST 
0x11f: V84 = 0x126
0x122: V85 = 0x3a8
0x125: JUMP 0x3a8
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x126]
Exit stack: [V13, 0x126]

================================

Block 0x126
[0x126:0x127]
---
Predecessors: [0x485, 0x550, 0x637, 0x6b7, 0x720, 0xa29, 0xe58, 0xee9]
Successors: []
---
0x126 JUMPDEST
0x127 STOP
---
0x126: JUMPDEST 
0x127: STOP 
---
Entry stack: [V13, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S5, S4, S3, S2, S1, S0]

================================

Block 0x128
[0x128:0x12e]
---
Predecessors: [0x27]
Successors: [0x12f, 0x133]
---
0x128 JUMPDEST
0x129 CALLVALUE
0x12a ISZERO
0x12b PUSH2 0x133
0x12e JUMPI
---
0x128: JUMPDEST 
0x129: V86 = CALLVALUE
0x12a: V87 = ISZERO V86
0x12b: V88 = 0x133
0x12e: JUMPI 0x133 V87
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x12f
[0x12f:0x132]
---
Predecessors: [0x128]
Successors: []
---
0x12f PUSH1 0x0
0x131 DUP1
0x132 REVERT
---
0x12f: V89 = 0x0
0x132: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x133
[0x133:0x152]
---
Predecessors: [0x128]
Successors: [0x489]
---
0x133 JUMPDEST
0x134 PUSH2 0x126
0x137 PUSH1 0x4
0x139 CALLDATALOAD
0x13a PUSH1 0x24
0x13c CALLDATALOAD
0x13d PUSH1 0x44
0x13f CALLDATALOAD
0x140 PUSH1 0x64
0x142 CALLDATALOAD
0x143 PUSH1 0x1
0x145 PUSH1 0xa0
0x147 PUSH1 0x2
0x149 EXP
0x14a SUB
0x14b PUSH1 0x84
0x14d CALLDATALOAD
0x14e AND
0x14f PUSH2 0x489
0x152 JUMP
---
0x133: JUMPDEST 
0x134: V90 = 0x126
0x137: V91 = 0x4
0x139: V92 = CALLDATALOAD 0x4
0x13a: V93 = 0x24
0x13c: V94 = CALLDATALOAD 0x24
0x13d: V95 = 0x44
0x13f: V96 = CALLDATALOAD 0x44
0x140: V97 = 0x64
0x142: V98 = CALLDATALOAD 0x64
0x143: V99 = 0x1
0x145: V100 = 0xa0
0x147: V101 = 0x2
0x149: V102 = EXP 0x2 0xa0
0x14a: V103 = SUB 0x10000000000000000000000000000000000000000 0x1
0x14b: V104 = 0x84
0x14d: V105 = CALLDATALOAD 0x84
0x14e: V106 = AND V105 0xffffffffffffffffffffffffffffffffffffffff
0x14f: V107 = 0x489
0x152: JUMP 0x489
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x126, V92, V94, V96, V98, V106]
Exit stack: [V13, 0x126, V92, V94, V96, V98, V106]

================================

Block 0x153
[0x153:0x159]
---
Predecessors: [0x32]
Successors: [0x15a, 0x15e]
---
0x153 JUMPDEST
0x154 CALLVALUE
0x155 ISZERO
0x156 PUSH2 0x15e
0x159 JUMPI
---
0x153: JUMPDEST 
0x154: V108 = CALLVALUE
0x155: V109 = ISZERO V108
0x156: V110 = 0x15e
0x159: JUMPI 0x15e V109
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x15a
[0x15a:0x15d]
---
Predecessors: [0x153]
Successors: []
---
0x15a PUSH1 0x0
0x15c DUP1
0x15d REVERT
---
0x15a: V111 = 0x0
0x15d: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x15e
[0x15e:0x165]
---
Predecessors: [0x153]
Successors: [0x558]
---
0x15e JUMPDEST
0x15f PUSH2 0x166
0x162 PUSH2 0x558
0x165 JUMP
---
0x15e: JUMPDEST 
0x15f: V112 = 0x166
0x162: V113 = 0x558
0x165: JUMP 0x558
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x166]
Exit stack: [V13, 0x166]

================================

Block 0x166
[0x166:0x179]
---
Predecessors: [0x5da, 0x6d0, 0x81a, 0x870]
Successors: []
---
0x166 JUMPDEST
0x167 PUSH1 0x40
0x169 MLOAD
0x16a SWAP1
0x16b ISZERO
0x16c ISZERO
0x16d DUP2
0x16e MSTORE
0x16f PUSH1 0x20
0x171 ADD
0x172 PUSH1 0x40
0x174 MLOAD
0x175 DUP1
0x176 SWAP2
0x177 SUB
0x178 SWAP1
0x179 RETURN
---
0x166: JUMPDEST 
0x167: V114 = 0x40
0x169: V115 = M[0x40]
0x16b: V116 = ISZERO S0
0x16c: V117 = ISZERO V116
0x16e: M[V115] = V117
0x16f: V118 = 0x20
0x171: V119 = ADD 0x20 V115
0x172: V120 = 0x40
0x174: V121 = M[0x40]
0x177: V122 = SUB V119 V121
0x179: RETURN V121 V122
---
Entry stack: [V13, 0x126, V129, V131, {0xb, 0xc}, S5, S4, {0x611, 0x637}, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x126, V129, V131, {0xb, 0xc}, S5, S4, {0x611, 0x637}, S2, S1]

================================

Block 0x17a
[0x17a:0x180]
---
Predecessors: [0x3d]
Successors: [0x181, 0x185]
---
0x17a JUMPDEST
0x17b CALLVALUE
0x17c ISZERO
0x17d PUSH2 0x185
0x180 JUMPI
---
0x17a: JUMPDEST 
0x17b: V123 = CALLVALUE
0x17c: V124 = ISZERO V123
0x17d: V125 = 0x185
0x180: JUMPI 0x185 V124
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x181
[0x181:0x184]
---
Predecessors: [0x17a]
Successors: []
---
0x181 PUSH1 0x0
0x183 DUP1
0x184 REVERT
---
0x181: V126 = 0x0
0x184: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x185
[0x185:0x192]
---
Predecessors: [0x17a]
Successors: [0x5dd]
---
0x185 JUMPDEST
0x186 PUSH2 0x126
0x189 PUSH1 0x4
0x18b CALLDATALOAD
0x18c PUSH1 0x24
0x18e CALLDATALOAD
0x18f PUSH2 0x5dd
0x192 JUMP
---
0x185: JUMPDEST 
0x186: V127 = 0x126
0x189: V128 = 0x4
0x18b: V129 = CALLDATALOAD 0x4
0x18c: V130 = 0x24
0x18e: V131 = CALLDATALOAD 0x24
0x18f: V132 = 0x5dd
0x192: JUMP 0x5dd
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x126, V129, V131]
Exit stack: [V13, 0x126, V129, V131]

================================

Block 0x193
[0x193:0x19d]
---
Predecessors: [0x48]
Successors: [0x64a]
---
0x193 JUMPDEST
0x194 PUSH2 0x126
0x197 PUSH1 0x4
0x199 CALLDATALOAD
0x19a PUSH2 0x64a
0x19d JUMP
---
0x193: JUMPDEST 
0x194: V133 = 0x126
0x197: V134 = 0x4
0x199: V135 = CALLDATALOAD 0x4
0x19a: V136 = 0x64a
0x19d: JUMP 0x64a
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x126, V135]
Exit stack: [V13, 0x126, V135]

================================

Block 0x19e
[0x19e:0x1a4]
---
Predecessors: [0x53]
Successors: [0x1a5, 0x1a9]
---
0x19e JUMPDEST
0x19f CALLVALUE
0x1a0 ISZERO
0x1a1 PUSH2 0x1a9
0x1a4 JUMPI
---
0x19e: JUMPDEST 
0x19f: V137 = CALLVALUE
0x1a0: V138 = ISZERO V137
0x1a1: V139 = 0x1a9
0x1a4: JUMPI 0x1a9 V138
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1a5
[0x1a5:0x1a8]
---
Predecessors: [0x19e]
Successors: []
---
0x1a5 PUSH1 0x0
0x1a7 DUP1
0x1a8 REVERT
---
0x1a5: V140 = 0x0
0x1a8: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1a9
[0x1a9:0x1b3]
---
Predecessors: [0x19e]
Successors: [0x6bc]
---
0x1a9 JUMPDEST
0x1aa PUSH2 0x1b4
0x1ad PUSH1 0x4
0x1af CALLDATALOAD
0x1b0 PUSH2 0x6bc
0x1b3 JUMP
---
0x1a9: JUMPDEST 
0x1aa: V141 = 0x1b4
0x1ad: V142 = 0x4
0x1af: V143 = CALLDATALOAD 0x4
0x1b0: V144 = 0x6bc
0x1b3: JUMP 0x6bc
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1b4, V143]
Exit stack: [V13, 0x1b4, V143]

================================

Block 0x1b4
[0x1b4:0x1c5]
---
Predecessors: [0x6c9, 0x756, 0x7e1, 0x8e6, 0x96f, 0x9af]
Successors: []
---
0x1b4 JUMPDEST
0x1b5 PUSH1 0x40
0x1b7 MLOAD
0x1b8 SWAP1
0x1b9 DUP2
0x1ba MSTORE
0x1bb PUSH1 0x20
0x1bd ADD
0x1be PUSH1 0x40
0x1c0 MLOAD
0x1c1 DUP1
0x1c2 SWAP2
0x1c3 SUB
0x1c4 SWAP1
0x1c5 RETURN
---
0x1b4: JUMPDEST 
0x1b5: V145 = 0x40
0x1b7: V146 = M[0x40]
0x1ba: M[V146] = S0
0x1bb: V147 = 0x20
0x1bd: V148 = ADD 0x20 V146
0x1be: V149 = 0x40
0x1c0: V150 = M[0x40]
0x1c3: V151 = SUB V148 V150
0x1c5: RETURN V150 V151
---
Entry stack: [V13, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S1]

================================

Block 0x1c6
[0x1c6:0x1cc]
---
Predecessors: [0x5e]
Successors: [0x1cd, 0x1d1]
---
0x1c6 JUMPDEST
0x1c7 CALLVALUE
0x1c8 ISZERO
0x1c9 PUSH2 0x1d1
0x1cc JUMPI
---
0x1c6: JUMPDEST 
0x1c7: V152 = CALLVALUE
0x1c8: V153 = ISZERO V152
0x1c9: V154 = 0x1d1
0x1cc: JUMPI 0x1d1 V153
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1cd
[0x1cd:0x1d0]
---
Predecessors: [0x1c6]
Successors: []
---
0x1cd PUSH1 0x0
0x1cf DUP1
0x1d0 REVERT
---
0x1cd: V155 = 0x0
0x1d0: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1d1
[0x1d1:0x1d8]
---
Predecessors: [0x1c6]
Successors: [0x6d0]
---
0x1d1 JUMPDEST
0x1d2 PUSH2 0x166
0x1d5 PUSH2 0x6d0
0x1d8 JUMP
---
0x1d1: JUMPDEST 
0x1d2: V156 = 0x166
0x1d5: V157 = 0x6d0
0x1d8: JUMP 0x6d0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x166]
Exit stack: [V13, 0x166]

================================

Block 0x1d9
[0x1d9:0x1df]
---
Predecessors: [0x69]
Successors: [0x1e0, 0x1e4]
---
0x1d9 JUMPDEST
0x1da CALLVALUE
0x1db ISZERO
0x1dc PUSH2 0x1e4
0x1df JUMPI
---
0x1d9: JUMPDEST 
0x1da: V158 = CALLVALUE
0x1db: V159 = ISZERO V158
0x1dc: V160 = 0x1e4
0x1df: JUMPI 0x1e4 V159
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1e0
[0x1e0:0x1e3]
---
Predecessors: [0x1d9]
Successors: []
---
0x1e0 PUSH1 0x0
0x1e2 DUP1
0x1e3 REVERT
---
0x1e0: V161 = 0x0
0x1e3: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1e4
[0x1e4:0x1eb]
---
Predecessors: [0x1d9]
Successors: [0x6e0]
---
0x1e4 JUMPDEST
0x1e5 PUSH2 0x126
0x1e8 PUSH2 0x6e0
0x1eb JUMP
---
0x1e4: JUMPDEST 
0x1e5: V162 = 0x126
0x1e8: V163 = 0x6e0
0x1eb: JUMP 0x6e0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x126]
Exit stack: [V13, 0x126]

================================

Block 0x1ec
[0x1ec:0x1f2]
---
Predecessors: [0x74]
Successors: [0x1f3, 0x1f7]
---
0x1ec JUMPDEST
0x1ed CALLVALUE
0x1ee ISZERO
0x1ef PUSH2 0x1f7
0x1f2 JUMPI
---
0x1ec: JUMPDEST 
0x1ed: V164 = CALLVALUE
0x1ee: V165 = ISZERO V164
0x1ef: V166 = 0x1f7
0x1f2: JUMPI 0x1f7 V165
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1f3
[0x1f3:0x1f6]
---
Predecessors: [0x1ec]
Successors: []
---
0x1f3 PUSH1 0x0
0x1f5 DUP1
0x1f6 REVERT
---
0x1f3: V167 = 0x0
0x1f6: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1f7
[0x1f7:0x1fe]
---
Predecessors: [0x1ec]
Successors: [0x756]
---
0x1f7 JUMPDEST
0x1f8 PUSH2 0x1b4
0x1fb PUSH2 0x756
0x1fe JUMP
---
0x1f7: JUMPDEST 
0x1f8: V168 = 0x1b4
0x1fb: V169 = 0x756
0x1fe: JUMP 0x756
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1b4]
Exit stack: [V13, 0x1b4]

================================

Block 0x1ff
[0x1ff:0x205]
---
Predecessors: [0x7f]
Successors: [0x206, 0x20a]
---
0x1ff JUMPDEST
0x200 CALLVALUE
0x201 ISZERO
0x202 PUSH2 0x20a
0x205 JUMPI
---
0x1ff: JUMPDEST 
0x200: V170 = CALLVALUE
0x201: V171 = ISZERO V170
0x202: V172 = 0x20a
0x205: JUMPI 0x20a V171
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x206
[0x206:0x209]
---
Predecessors: [0x1ff]
Successors: []
---
0x206 PUSH1 0x0
0x208 DUP1
0x209 REVERT
---
0x206: V173 = 0x0
0x209: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x20a
[0x20a:0x214]
---
Predecessors: [0x1ff]
Successors: [0x761]
---
0x20a JUMPDEST
0x20b PUSH2 0x215
0x20e PUSH1 0x4
0x210 CALLDATALOAD
0x211 PUSH2 0x761
0x214 JUMP
---
0x20a: JUMPDEST 
0x20b: V174 = 0x215
0x20e: V175 = 0x4
0x210: V176 = CALLDATALOAD 0x4
0x211: V177 = 0x761
0x214: JUMP 0x761
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x215, V176]
Exit stack: [V13, 0x215, V176]

================================

Block 0x215
[0x215:0x24f]
---
Predecessors: [0x78b]
Successors: []
---
0x215 JUMPDEST
0x216 PUSH1 0x40
0x218 MLOAD
0x219 PUSH1 0x1
0x21b PUSH1 0xa0
0x21d PUSH1 0x2
0x21f EXP
0x220 SUB
0x221 SWAP1
0x222 SWAP6
0x223 AND
0x224 DUP6
0x225 MSTORE
0x226 PUSH1 0x20
0x228 DUP6
0x229 ADD
0x22a SWAP4
0x22b SWAP1
0x22c SWAP4
0x22d MSTORE
0x22e PUSH1 0x40
0x230 DUP1
0x231 DUP6
0x232 ADD
0x233 SWAP3
0x234 SWAP1
0x235 SWAP3
0x236 MSTORE
0x237 PUSH1 0x60
0x239 DUP5
0x23a ADD
0x23b MSTORE
0x23c PUSH1 0x80
0x23e DUP4
0x23f ADD
0x240 SWAP2
0x241 SWAP1
0x242 SWAP2
0x243 MSTORE
0x244 PUSH1 0xa0
0x246 SWAP1
0x247 SWAP2
0x248 ADD
0x249 SWAP1
0x24a MLOAD
0x24b DUP1
0x24c SWAP2
0x24d SUB
0x24e SWAP1
0x24f RETURN
---
0x215: JUMPDEST 
0x216: V178 = 0x40
0x218: V179 = M[0x40]
0x219: V180 = 0x1
0x21b: V181 = 0xa0
0x21d: V182 = 0x2
0x21f: V183 = EXP 0x2 0xa0
0x220: V184 = SUB 0x10000000000000000000000000000000000000000 0x1
0x223: V185 = AND V663 0xffffffffffffffffffffffffffffffffffffffff
0x225: M[V179] = V185
0x226: V186 = 0x20
0x229: V187 = ADD V179 0x20
0x22d: M[V187] = V669
0x22e: V188 = 0x40
0x232: V189 = ADD V179 0x40
0x236: M[V189] = V674
0x237: V190 = 0x60
0x23a: V191 = ADD V179 0x60
0x23b: M[V191] = V676
0x23c: V192 = 0x80
0x23f: V193 = ADD V179 0x80
0x243: M[V193] = V679
0x244: V194 = 0xa0
0x248: V195 = ADD V179 0xa0
0x24a: V196 = M[0x40]
0x24d: V197 = SUB V195 V196
0x24f: RETURN V196 V197
---
Entry stack: [V13, 0x126, V135, V543, 0x0, 0x678, S5, V663, V669, V674, V676, V679]
Stack pops: 5
Stack additions: []
Exit stack: [V13, 0x126, V135, V543, 0x0, 0x678, S5]

================================

Block 0x250
[0x250:0x256]
---
Predecessors: [0x8a]
Successors: [0x257, 0x25b]
---
0x250 JUMPDEST
0x251 CALLVALUE
0x252 ISZERO
0x253 PUSH2 0x25b
0x256 JUMPI
---
0x250: JUMPDEST 
0x251: V198 = CALLVALUE
0x252: V199 = ISZERO V198
0x253: V200 = 0x25b
0x256: JUMPI 0x25b V199
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x257
[0x257:0x25a]
---
Predecessors: [0x250]
Successors: []
---
0x257 PUSH1 0x0
0x259 DUP1
0x25a REVERT
---
0x257: V201 = 0x0
0x25a: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x25b
[0x25b:0x262]
---
Predecessors: [0x250]
Successors: [0x7e1]
---
0x25b JUMPDEST
0x25c PUSH2 0x1b4
0x25f PUSH2 0x7e1
0x262 JUMP
---
0x25b: JUMPDEST 
0x25c: V202 = 0x1b4
0x25f: V203 = 0x7e1
0x262: JUMP 0x7e1
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1b4]
Exit stack: [V13, 0x1b4]

================================

Block 0x263
[0x263:0x269]
---
Predecessors: [0x95]
Successors: [0x26a, 0x26e]
---
0x263 JUMPDEST
0x264 CALLVALUE
0x265 ISZERO
0x266 PUSH2 0x26e
0x269 JUMPI
---
0x263: JUMPDEST 
0x264: V204 = CALLVALUE
0x265: V205 = ISZERO V204
0x266: V206 = 0x26e
0x269: JUMPI 0x26e V205
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x26a
[0x26a:0x26d]
---
Predecessors: [0x263]
Successors: []
---
0x26a PUSH1 0x0
0x26c DUP1
0x26d REVERT
---
0x26a: V207 = 0x0
0x26d: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x26e
[0x26e:0x275]
---
Predecessors: [0x263]
Successors: [0x7e7]
---
0x26e JUMPDEST
0x26f PUSH2 0x166
0x272 PUSH2 0x7e7
0x275 JUMP
---
0x26e: JUMPDEST 
0x26f: V208 = 0x166
0x272: V209 = 0x7e7
0x275: JUMP 0x7e7
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x166]
Exit stack: [V13, 0x166]

================================

Block 0x276
[0x276:0x27c]
---
Predecessors: [0xa0]
Successors: [0x27d, 0x281]
---
0x276 JUMPDEST
0x277 CALLVALUE
0x278 ISZERO
0x279 PUSH2 0x281
0x27c JUMPI
---
0x276: JUMPDEST 
0x277: V210 = CALLVALUE
0x278: V211 = ISZERO V210
0x279: V212 = 0x281
0x27c: JUMPI 0x281 V211
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x27d
[0x27d:0x280]
---
Predecessors: [0x276]
Successors: []
---
0x27d PUSH1 0x0
0x27f DUP1
0x280 REVERT
---
0x27d: V213 = 0x0
0x280: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x281
[0x281:0x288]
---
Predecessors: [0x276]
Successors: [0x870]
---
0x281 JUMPDEST
0x282 PUSH2 0x166
0x285 PUSH2 0x870
0x288 JUMP
---
0x281: JUMPDEST 
0x282: V214 = 0x166
0x285: V215 = 0x870
0x288: JUMP 0x870
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x166]
Exit stack: [V13, 0x166]

================================

Block 0x289
[0x289:0x28f]
---
Predecessors: [0xab]
Successors: [0x290, 0x294]
---
0x289 JUMPDEST
0x28a CALLVALUE
0x28b ISZERO
0x28c PUSH2 0x294
0x28f JUMPI
---
0x289: JUMPDEST 
0x28a: V216 = CALLVALUE
0x28b: V217 = ISZERO V216
0x28c: V218 = 0x294
0x28f: JUMPI 0x294 V217
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x290
[0x290:0x293]
---
Predecessors: [0x289]
Successors: []
---
0x290 PUSH1 0x0
0x292 DUP1
0x293 REVERT
---
0x290: V219 = 0x0
0x293: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x294
[0x294:0x29e]
---
Predecessors: [0x289]
Successors: [0x879]
---
0x294 JUMPDEST
0x295 PUSH2 0x126
0x298 PUSH1 0x4
0x29a CALLDATALOAD
0x29b PUSH2 0x879
0x29e JUMP
---
0x294: JUMPDEST 
0x295: V220 = 0x126
0x298: V221 = 0x4
0x29a: V222 = CALLDATALOAD 0x4
0x29b: V223 = 0x879
0x29e: JUMP 0x879
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x126, V222]
Exit stack: [V13, 0x126, V222]

================================

Block 0x29f
[0x29f:0x2a5]
---
Predecessors: [0xb6]
Successors: [0x2a6, 0x2aa]
---
0x29f JUMPDEST
0x2a0 CALLVALUE
0x2a1 ISZERO
0x2a2 PUSH2 0x2aa
0x2a5 JUMPI
---
0x29f: JUMPDEST 
0x2a0: V224 = CALLVALUE
0x2a1: V225 = ISZERO V224
0x2a2: V226 = 0x2aa
0x2a5: JUMPI 0x2aa V225
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2a6
[0x2a6:0x2a9]
---
Predecessors: [0x29f]
Successors: []
---
0x2a6 PUSH1 0x0
0x2a8 DUP1
0x2a9 REVERT
---
0x2a6: V227 = 0x0
0x2a9: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2aa
[0x2aa:0x2b1]
---
Predecessors: [0x29f]
Successors: [0x8e6]
---
0x2aa JUMPDEST
0x2ab PUSH2 0x1b4
0x2ae PUSH2 0x8e6
0x2b1 JUMP
---
0x2aa: JUMPDEST 
0x2ab: V228 = 0x1b4
0x2ae: V229 = 0x8e6
0x2b1: JUMP 0x8e6
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1b4]
Exit stack: [V13, 0x1b4]

================================

Block 0x2b2
[0x2b2:0x2b8]
---
Predecessors: [0xc1]
Successors: [0x2b9, 0x2bd]
---
0x2b2 JUMPDEST
0x2b3 CALLVALUE
0x2b4 ISZERO
0x2b5 PUSH2 0x2bd
0x2b8 JUMPI
---
0x2b2: JUMPDEST 
0x2b3: V230 = CALLVALUE
0x2b4: V231 = ISZERO V230
0x2b5: V232 = 0x2bd
0x2b8: JUMPI 0x2bd V231
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2b9
[0x2b9:0x2bc]
---
Predecessors: [0x2b2]
Successors: []
---
0x2b9 PUSH1 0x0
0x2bb DUP1
0x2bc REVERT
---
0x2b9: V233 = 0x0
0x2bc: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2bd
[0x2bd:0x2c4]
---
Predecessors: [0x2b2]
Successors: [0x8ec]
---
0x2bd JUMPDEST
0x2be PUSH2 0x2c5
0x2c1 PUSH2 0x8ec
0x2c4 JUMP
---
0x2bd: JUMPDEST 
0x2be: V234 = 0x2c5
0x2c1: V235 = 0x8ec
0x2c4: JUMP 0x8ec
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x2c5]
Exit stack: [V13, 0x2c5]

================================

Block 0x2c5
[0x2c5:0x2e0]
---
Predecessors: [0x8ec, 0x976]
Successors: []
---
0x2c5 JUMPDEST
0x2c6 PUSH1 0x40
0x2c8 MLOAD
0x2c9 PUSH1 0x1
0x2cb PUSH1 0xa0
0x2cd PUSH1 0x2
0x2cf EXP
0x2d0 SUB
0x2d1 SWAP1
0x2d2 SWAP2
0x2d3 AND
0x2d4 DUP2
0x2d5 MSTORE
0x2d6 PUSH1 0x20
0x2d8 ADD
0x2d9 PUSH1 0x40
0x2db MLOAD
0x2dc DUP1
0x2dd SWAP2
0x2de SUB
0x2df SWAP1
0x2e0 RETURN
---
0x2c5: JUMPDEST 
0x2c6: V236 = 0x40
0x2c8: V237 = M[0x40]
0x2c9: V238 = 0x1
0x2cb: V239 = 0xa0
0x2cd: V240 = 0x2
0x2cf: V241 = EXP 0x2 0xa0
0x2d0: V242 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d3: V243 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x2d5: M[V237] = V243
0x2d6: V244 = 0x20
0x2d8: V245 = ADD 0x20 V237
0x2d9: V246 = 0x40
0x2db: V247 = M[0x40]
0x2de: V248 = SUB V245 V247
0x2e0: RETURN V247 V248
---
Entry stack: [V13, 0x2c5, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x2c5]

================================

Block 0x2e1
[0x2e1:0x2e7]
---
Predecessors: [0xcc]
Successors: [0x2e8, 0x2ec]
---
0x2e1 JUMPDEST
0x2e2 CALLVALUE
0x2e3 ISZERO
0x2e4 PUSH2 0x2ec
0x2e7 JUMPI
---
0x2e1: JUMPDEST 
0x2e2: V249 = CALLVALUE
0x2e3: V250 = ISZERO V249
0x2e4: V251 = 0x2ec
0x2e7: JUMPI 0x2ec V250
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2e8
[0x2e8:0x2eb]
---
Predecessors: [0x2e1]
Successors: []
---
0x2e8 PUSH1 0x0
0x2ea DUP1
0x2eb REVERT
---
0x2e8: V252 = 0x0
0x2eb: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2ec
[0x2ec:0x2f6]
---
Predecessors: [0x2e1]
Successors: [0x8fb]
---
0x2ec JUMPDEST
0x2ed PUSH2 0x126
0x2f0 PUSH1 0x4
0x2f2 CALLDATALOAD
0x2f3 PUSH2 0x8fb
0x2f6 JUMP
---
0x2ec: JUMPDEST 
0x2ed: V253 = 0x126
0x2f0: V254 = 0x4
0x2f2: V255 = CALLDATALOAD 0x4
0x2f3: V256 = 0x8fb
0x2f6: JUMP 0x8fb
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x126, V255]
Exit stack: [V13, 0x126, V255]

================================

Block 0x2f7
[0x2f7:0x2fd]
---
Predecessors: [0xd7]
Successors: [0x2fe, 0x302]
---
0x2f7 JUMPDEST
0x2f8 CALLVALUE
0x2f9 ISZERO
0x2fa PUSH2 0x302
0x2fd JUMPI
---
0x2f7: JUMPDEST 
0x2f8: V257 = CALLVALUE
0x2f9: V258 = ISZERO V257
0x2fa: V259 = 0x302
0x2fd: JUMPI 0x302 V258
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2fe
[0x2fe:0x301]
---
Predecessors: [0x2f7]
Successors: []
---
0x2fe PUSH1 0x0
0x300 DUP1
0x301 REVERT
---
0x2fe: V260 = 0x0
0x301: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x302
[0x302:0x30c]
---
Predecessors: [0x2f7]
Successors: [0x944]
---
0x302 JUMPDEST
0x303 PUSH2 0x1b4
0x306 PUSH1 0x4
0x308 CALLDATALOAD
0x309 PUSH2 0x944
0x30c JUMP
---
0x302: JUMPDEST 
0x303: V261 = 0x1b4
0x306: V262 = 0x4
0x308: V263 = CALLDATALOAD 0x4
0x309: V264 = 0x944
0x30c: JUMP 0x944
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1b4, V263]
Exit stack: [V13, 0x1b4, V263]

================================

Block 0x30d
[0x30d:0x313]
---
Predecessors: [0xe2]
Successors: [0x314, 0x318]
---
0x30d JUMPDEST
0x30e CALLVALUE
0x30f ISZERO
0x310 PUSH2 0x318
0x313 JUMPI
---
0x30d: JUMPDEST 
0x30e: V265 = CALLVALUE
0x30f: V266 = ISZERO V265
0x310: V267 = 0x318
0x313: JUMPI 0x318 V266
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x314
[0x314:0x317]
---
Predecessors: [0x30d]
Successors: []
---
0x314 PUSH1 0x0
0x316 DUP1
0x317 REVERT
---
0x314: V268 = 0x0
0x317: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x318
[0x318:0x31f]
---
Predecessors: [0x30d]
Successors: [0x976]
---
0x318 JUMPDEST
0x319 PUSH2 0x2c5
0x31c PUSH2 0x976
0x31f JUMP
---
0x318: JUMPDEST 
0x319: V269 = 0x2c5
0x31c: V270 = 0x976
0x31f: JUMP 0x976
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x2c5]
Exit stack: [V13, 0x2c5]

================================

Block 0x320
[0x320:0x326]
---
Predecessors: [0xed]
Successors: [0x327, 0x32b]
---
0x320 JUMPDEST
0x321 CALLVALUE
0x322 ISZERO
0x323 PUSH2 0x32b
0x326 JUMPI
---
0x320: JUMPDEST 
0x321: V271 = CALLVALUE
0x322: V272 = ISZERO V271
0x323: V273 = 0x32b
0x326: JUMPI 0x32b V272
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x327
[0x327:0x32a]
---
Predecessors: [0x320]
Successors: []
---
0x327 PUSH1 0x0
0x329 DUP1
0x32a REVERT
---
0x327: V274 = 0x0
0x32a: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x32b
[0x32b:0x332]
---
Predecessors: [0x320]
Successors: [0x985]
---
0x32b JUMPDEST
0x32c PUSH2 0x1b4
0x32f PUSH2 0x985
0x332 JUMP
---
0x32b: JUMPDEST 
0x32c: V275 = 0x1b4
0x32f: V276 = 0x985
0x332: JUMP 0x985
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1b4]
Exit stack: [V13, 0x1b4]

================================

Block 0x333
[0x333:0x339]
---
Predecessors: [0xf8]
Successors: [0x33a, 0x33e]
---
0x333 JUMPDEST
0x334 CALLVALUE
0x335 ISZERO
0x336 PUSH2 0x33e
0x339 JUMPI
---
0x333: JUMPDEST 
0x334: V277 = CALLVALUE
0x335: V278 = ISZERO V277
0x336: V279 = 0x33e
0x339: JUMPI 0x33e V278
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x33a
[0x33a:0x33d]
---
Predecessors: [0x333]
Successors: []
---
0x33a PUSH1 0x0
0x33c DUP1
0x33d REVERT
---
0x33a: V280 = 0x0
0x33d: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x33e
[0x33e:0x345]
---
Predecessors: [0x333]
Successors: [0x9b9]
---
0x33e JUMPDEST
0x33f PUSH2 0x346
0x342 PUSH2 0x9b9
0x345 JUMP
---
0x33e: JUMPDEST 
0x33f: V281 = 0x346
0x342: V282 = 0x9b9
0x345: JUMP 0x9b9
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x346]
Exit stack: [V13, 0x346]

================================

Block 0x346
[0x346:0x35d]
---
Predecessors: [0x9b9]
Successors: []
---
0x346 JUMPDEST
0x347 PUSH1 0x40
0x349 MLOAD
0x34a SWAP2
0x34b DUP3
0x34c MSTORE
0x34d PUSH1 0x20
0x34f DUP3
0x350 ADD
0x351 MSTORE
0x352 PUSH1 0x40
0x354 SWAP1
0x355 DUP2
0x356 ADD
0x357 SWAP1
0x358 MLOAD
0x359 DUP1
0x35a SWAP2
0x35b SUB
0x35c SWAP1
0x35d RETURN
---
0x346: JUMPDEST 
0x347: V283 = 0x40
0x349: V284 = M[0x40]
0x34c: M[V284] = V854
0x34d: V285 = 0x20
0x350: V286 = ADD V284 0x20
0x351: M[V286] = V856
0x352: V287 = 0x40
0x356: V288 = ADD 0x40 V284
0x358: V289 = M[0x40]
0x35b: V290 = SUB V288 V289
0x35d: RETURN V289 V290
---
Entry stack: [V13, V854, V856]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x35e
[0x35e:0x364]
---
Predecessors: [0x103]
Successors: [0x365, 0x369]
---
0x35e JUMPDEST
0x35f CALLVALUE
0x360 ISZERO
0x361 PUSH2 0x369
0x364 JUMPI
---
0x35e: JUMPDEST 
0x35f: V291 = CALLVALUE
0x360: V292 = ISZERO V291
0x361: V293 = 0x369
0x364: JUMPI 0x369 V292
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x365
[0x365:0x368]
---
Predecessors: [0x35e]
Successors: []
---
0x365 PUSH1 0x0
0x367 DUP1
0x368 REVERT
---
0x365: V294 = 0x0
0x368: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x369
[0x369:0x37c]
---
Predecessors: [0x35e]
Successors: [0x9d6]
---
0x369 JUMPDEST
0x36a PUSH2 0x126
0x36d PUSH1 0x1
0x36f PUSH1 0xa0
0x371 PUSH1 0x2
0x373 EXP
0x374 SUB
0x375 PUSH1 0x4
0x377 CALLDATALOAD
0x378 AND
0x379 PUSH2 0x9d6
0x37c JUMP
---
0x369: JUMPDEST 
0x36a: V295 = 0x126
0x36d: V296 = 0x1
0x36f: V297 = 0xa0
0x371: V298 = 0x2
0x373: V299 = EXP 0x2 0xa0
0x374: V300 = SUB 0x10000000000000000000000000000000000000000 0x1
0x375: V301 = 0x4
0x377: V302 = CALLDATALOAD 0x4
0x378: V303 = AND V302 0xffffffffffffffffffffffffffffffffffffffff
0x379: V304 = 0x9d6
0x37c: JUMP 0x9d6
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x126, V303]
Exit stack: [V13, 0x126, V303]

================================

Block 0x37d
[0x37d:0x383]
---
Predecessors: [0x10e]
Successors: [0x384, 0x388]
---
0x37d JUMPDEST
0x37e CALLVALUE
0x37f ISZERO
0x380 PUSH2 0x388
0x383 JUMPI
---
0x37d: JUMPDEST 
0x37e: V305 = CALLVALUE
0x37f: V306 = ISZERO V305
0x380: V307 = 0x388
0x383: JUMPI 0x388 V306
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x384
[0x384:0x387]
---
Predecessors: [0x37d]
Successors: []
---
0x384 PUSH1 0x0
0x386 DUP1
0x387 REVERT
---
0x384: V308 = 0x0
0x387: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x388
[0x388:0x3a7]
---
Predecessors: [0x37d]
Successors: [0xa2c]
---
0x388 JUMPDEST
0x389 PUSH2 0x126
0x38c PUSH1 0x4
0x38e CALLDATALOAD
0x38f PUSH1 0x24
0x391 CALLDATALOAD
0x392 PUSH1 0x44
0x394 CALLDATALOAD
0x395 PUSH1 0x64
0x397 CALLDATALOAD
0x398 PUSH1 0x1
0x39a PUSH1 0xa0
0x39c PUSH1 0x2
0x39e EXP
0x39f SUB
0x3a0 PUSH1 0x84
0x3a2 CALLDATALOAD
0x3a3 AND
0x3a4 PUSH2 0xa2c
0x3a7 JUMP
---
0x388: JUMPDEST 
0x389: V309 = 0x126
0x38c: V310 = 0x4
0x38e: V311 = CALLDATALOAD 0x4
0x38f: V312 = 0x24
0x391: V313 = CALLDATALOAD 0x24
0x392: V314 = 0x44
0x394: V315 = CALLDATALOAD 0x44
0x395: V316 = 0x64
0x397: V317 = CALLDATALOAD 0x64
0x398: V318 = 0x1
0x39a: V319 = 0xa0
0x39c: V320 = 0x2
0x39e: V321 = EXP 0x2 0xa0
0x39f: V322 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a0: V323 = 0x84
0x3a2: V324 = CALLDATALOAD 0x84
0x3a3: V325 = AND V324 0xffffffffffffffffffffffffffffffffffffffff
0x3a4: V326 = 0xa2c
0x3a7: JUMP 0xa2c
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x126, V311, V313, V315, V317, V325]
Exit stack: [V13, 0x126, V311, V313, V315, V317, V325]

================================

Block 0x3a8
[0x3a8:0x43b]
---
Predecessors: [0x11e]
Successors: [0x43c, 0x45d]
---
0x3a8 JUMPDEST
0x3a9 PUSH1 0x0
0x3ab DUP1
0x3ac NUMBER
0x3ad BLOCKHASH
0x3ae PUSH1 0x1
0x3b0 NUMBER
0x3b1 SUB
0x3b2 BLOCKHASH
0x3b3 PUSH1 0x40
0x3b5 MLOAD
0x3b6 SWAP2
0x3b7 DUP3
0x3b8 MSTORE
0x3b9 PUSH1 0x20
0x3bb DUP3
0x3bc ADD
0x3bd MSTORE
0x3be PUSH1 0x40
0x3c0 SWAP1
0x3c1 DUP2
0x3c2 ADD
0x3c3 SWAP1
0x3c4 MLOAD
0x3c5 SWAP1
0x3c6 DUP2
0x3c7 SWAP1
0x3c8 SUB
0x3c9 SWAP1
0x3ca SHA3
0x3cb SWAP2
0x3cc POP
0x3cd PUSH32 0xc800000000000000000000000000000000000000000000000000000000000000
0x3ee DUP3
0x3ef PUSH1 0x19
0x3f1 BYTE
0x3f2 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x413 MUL
0x414 PUSH31 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x434 NOT
0x435 AND
0x436 GT
0x437 ISZERO
0x438 PUSH2 0x45d
0x43b JUMPI
---
0x3a8: JUMPDEST 
0x3a9: V327 = 0x0
0x3ac: V328 = NUMBER
0x3ad: V329 = BLOCKHASH V328
0x3ae: V330 = 0x1
0x3b0: V331 = NUMBER
0x3b1: V332 = SUB V331 0x1
0x3b2: V333 = BLOCKHASH V332
0x3b3: V334 = 0x40
0x3b5: V335 = M[0x40]
0x3b8: M[V335] = V329
0x3b9: V336 = 0x20
0x3bc: V337 = ADD V335 0x20
0x3bd: M[V337] = V333
0x3be: V338 = 0x40
0x3c2: V339 = ADD 0x40 V335
0x3c4: V340 = M[0x40]
0x3c8: V341 = SUB V339 V340
0x3ca: V342 = SHA3 V340 V341
0x3cd: V343 = 0xc800000000000000000000000000000000000000000000000000000000000000
0x3ef: V344 = 0x19
0x3f1: V345 = BYTE 0x19 V342
0x3f2: V346 = 0x100000000000000000000000000000000000000000000000000000000000000
0x413: V347 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V345
0x414: V348 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x434: V349 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x435: V350 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 V347
0x436: V351 = GT V350 0xc800000000000000000000000000000000000000000000000000000000000000
0x437: V352 = ISZERO V351
0x438: V353 = 0x45d
0x43b: JUMPI 0x45d V352
---
Entry stack: [V13, 0x126]
Stack pops: 0
Stack additions: [V342, 0x0]
Exit stack: [V13, 0x126, V342, 0x0]

================================

Block 0x43c
[0x43c:0x447]
---
Predecessors: [0x3a8]
Successors: [0x448, 0x44c]
---
0x43c PUSH1 0xe
0x43e SLOAD
0x43f PUSH1 0xc
0x441 SLOAD
0x442 LT
0x443 ISZERO
0x444 PUSH2 0x44c
0x447 JUMPI
---
0x43c: V354 = 0xe
0x43e: V355 = S[0xe]
0x43f: V356 = 0xc
0x441: V357 = S[0xc]
0x442: V358 = LT V357 V355
0x443: V359 = ISZERO V358
0x444: V360 = 0x44c
0x447: JUMPI 0x44c V359
---
Entry stack: [V13, 0x126, V342, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x126, V342, 0x0]

================================

Block 0x448
[0x448:0x44b]
---
Predecessors: [0x43c]
Successors: []
---
0x448 PUSH1 0x0
0x44a DUP1
0x44b REVERT
---
0x448: V361 = 0x0
0x44b: REVERT 0x0 0x0
---
Entry stack: [V13, 0x126, V342, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x126, V342, 0x0]

================================

Block 0x44c
[0x44c:0x45c]
---
Predecessors: [0x43c]
Successors: [0x47b]
---
0x44c JUMPDEST
0x44d POP
0x44e PUSH1 0xe
0x450 DUP1
0x451 SLOAD
0x452 PUSH1 0x1
0x454 DUP2
0x455 ADD
0x456 SWAP1
0x457 SWAP2
0x458 SSTORE
0x459 PUSH2 0x47b
0x45c JUMP
---
0x44c: JUMPDEST 
0x44e: V362 = 0xe
0x451: V363 = S[0xe]
0x452: V364 = 0x1
0x455: V365 = ADD V363 0x1
0x458: S[0xe] = V365
0x459: V366 = 0x47b
0x45c: JUMP 0x47b
---
Entry stack: [V13, 0x126, V342, 0x0]
Stack pops: 1
Stack additions: [V363]
Exit stack: [V13, 0x126, V342, V363]

================================

Block 0x45d
[0x45d:0x469]
---
Predecessors: [0x3a8]
Successors: [0x46a, 0x46e]
---
0x45d JUMPDEST
0x45e PUSH1 0xd
0x460 SLOAD
0x461 PUSH1 0xb
0x463 SLOAD
0x464 LT
0x465 ISZERO
0x466 PUSH2 0x46e
0x469 JUMPI
---
0x45d: JUMPDEST 
0x45e: V367 = 0xd
0x460: V368 = S[0xd]
0x461: V369 = 0xb
0x463: V370 = S[0xb]
0x464: V371 = LT V370 V368
0x465: V372 = ISZERO V371
0x466: V373 = 0x46e
0x469: JUMPI 0x46e V372
---
Entry stack: [V13, 0x126, V342, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x126, V342, 0x0]

================================

Block 0x46a
[0x46a:0x46d]
---
Predecessors: [0x45d]
Successors: []
---
0x46a PUSH1 0x0
0x46c DUP1
0x46d REVERT
---
0x46a: V374 = 0x0
0x46d: REVERT 0x0 0x0
---
Entry stack: [V13, 0x126, V342, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x126, V342, 0x0]

================================

Block 0x46e
[0x46e:0x47a]
---
Predecessors: [0x45d]
Successors: [0x47b]
---
0x46e JUMPDEST
0x46f POP
0x470 PUSH1 0xd
0x472 DUP1
0x473 SLOAD
0x474 PUSH1 0x1
0x476 DUP2
0x477 ADD
0x478 SWAP1
0x479 SWAP2
0x47a SSTORE
---
0x46e: JUMPDEST 
0x470: V375 = 0xd
0x473: V376 = S[0xd]
0x474: V377 = 0x1
0x477: V378 = ADD V376 0x1
0x47a: S[0xd] = V378
---
Entry stack: [V13, 0x126, V342, 0x0]
Stack pops: 1
Stack additions: [V376]
Exit stack: [V13, 0x126, V342, V376]

================================

Block 0x47b
[0x47b:0x484]
---
Predecessors: [0x44c, 0x46e]
Successors: [0xaf3]
---
0x47b JUMPDEST
0x47c PUSH2 0x485
0x47f CALLER
0x480 DUP3
0x481 PUSH2 0xaf3
0x484 JUMP
---
0x47b: JUMPDEST 
0x47c: V379 = 0x485
0x47f: V380 = CALLER
0x481: V381 = 0xaf3
0x484: JUMP 0xaf3
---
Entry stack: [V13, 0x126, V342, S0]
Stack pops: 1
Stack additions: [S0, 0x485, V380, S0]
Exit stack: [V13, 0x126, V342, S0, 0x485, V380, S0]

================================

Block 0x485
[0x485:0x488]
---
Predecessors: [0x485, 0x611, 0xb5a, 0xee9]
Successors: [0x126, 0x485, 0x6b7]
---
0x485 JUMPDEST
0x486 POP
0x487 POP
0x488 JUMP
---
0x485: JUMPDEST 
0x488: JUMP S2
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V13, S6, S5, S4, S3]

================================

Block 0x489
[0x489:0x490]
---
Predecessors: [0x133]
Successors: [0x1038]
---
0x489 JUMPDEST
0x48a PUSH2 0x491
0x48d PUSH2 0x1038
0x490 JUMP
---
0x489: JUMPDEST 
0x48a: V382 = 0x491
0x48d: V383 = 0x1038
0x490: JUMP 0x1038
---
Entry stack: [V13, 0x126, V92, V94, V96, V98, V106]
Stack pops: 0
Stack additions: [0x491]
Exit stack: [V13, 0x126, V92, V94, V96, V98, V106, 0x491]

================================

Block 0x491
[0x491:0x4a1]
---
Predecessors: [0x1038]
Successors: [0x4a2, 0x4a6]
---
0x491 JUMPDEST
0x492 PUSH1 0x1
0x494 PUSH1 0x80
0x496 PUSH1 0x2
0x498 EXP
0x499 SUB
0x49a DUP6
0x49b AND
0x49c DUP6
0x49d EQ
0x49e PUSH2 0x4a6
0x4a1 JUMPI
---
0x491: JUMPDEST 
0x492: V384 = 0x1
0x494: V385 = 0x80
0x496: V386 = 0x2
0x498: V387 = EXP 0x2 0x80
0x499: V388 = SUB 0x100000000000000000000000000000000 0x1
0x49b: V389 = AND S4 0xffffffffffffffffffffffffffffffff
0x49d: V390 = EQ S4 V389
0x49e: V391 = 0x4a6
0x4a1: JUMPI 0x4a6 V390
---
Entry stack: [V13, 0x126, S5, S4, S3, S2, S1, V1388]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V13, 0x126, S5, S4, S3, S2, S1, V1388]

================================

Block 0x4a2
[0x4a2:0x4a5]
---
Predecessors: [0x491]
Successors: []
---
0x4a2 PUSH1 0x0
0x4a4 DUP1
0x4a5 REVERT
---
0x4a2: V392 = 0x0
0x4a5: REVERT 0x0 0x0
---
Entry stack: [V13, 0x126, S5, S4, S3, S2, S1, V1388]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x126, S5, S4, S3, S2, S1, V1388]

================================

Block 0x4a6
[0x4a6:0x4b6]
---
Predecessors: [0x491]
Successors: [0x4b7, 0x4bb]
---
0x4a6 JUMPDEST
0x4a7 PUSH1 0x1
0x4a9 PUSH1 0x80
0x4ab PUSH1 0x2
0x4ad EXP
0x4ae SUB
0x4af DUP5
0x4b0 AND
0x4b1 DUP5
0x4b2 EQ
0x4b3 PUSH2 0x4bb
0x4b6 JUMPI
---
0x4a6: JUMPDEST 
0x4a7: V393 = 0x1
0x4a9: V394 = 0x80
0x4ab: V395 = 0x2
0x4ad: V396 = EXP 0x2 0x80
0x4ae: V397 = SUB 0x100000000000000000000000000000000 0x1
0x4b0: V398 = AND S3 0xffffffffffffffffffffffffffffffff
0x4b2: V399 = EQ S3 V398
0x4b3: V400 = 0x4bb
0x4b6: JUMPI 0x4bb V399
---
Entry stack: [V13, 0x126, S5, S4, S3, S2, S1, V1388]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, 0x126, S5, S4, S3, S2, S1, V1388]

================================

Block 0x4b7
[0x4b7:0x4ba]
---
Predecessors: [0x4a6]
Successors: []
---
0x4b7 PUSH1 0x0
0x4b9 DUP1
0x4ba REVERT
---
0x4b7: V401 = 0x0
0x4ba: REVERT 0x0 0x0
---
Entry stack: [V13, 0x126, S5, S4, S3, S2, S1, V1388]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x126, S5, S4, S3, S2, S1, V1388]

================================

Block 0x4bb
[0x4bb:0x4cc]
---
Predecessors: [0x4a6]
Successors: [0x4cd, 0x4d1]
---
0x4bb JUMPDEST
0x4bc PUSH8 0xffffffffffffffff
0x4c5 DUP4
0x4c6 AND
0x4c7 DUP4
0x4c8 EQ
0x4c9 PUSH2 0x4d1
0x4cc JUMPI
---
0x4bb: JUMPDEST 
0x4bc: V402 = 0xffffffffffffffff
0x4c6: V403 = AND S2 0xffffffffffffffff
0x4c8: V404 = EQ S2 V403
0x4c9: V405 = 0x4d1
0x4cc: JUMPI 0x4d1 V404
---
Entry stack: [V13, 0x126, S5, S4, S3, S2, S1, V1388]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x126, S5, S4, S3, S2, S1, V1388]

================================

Block 0x4cd
[0x4cd:0x4d0]
---
Predecessors: [0x4bb]
Successors: []
---
0x4cd PUSH1 0x0
0x4cf DUP1
0x4d0 REVERT
---
0x4cd: V406 = 0x0
0x4d0: REVERT 0x0 0x0
---
Entry stack: [V13, 0x126, S5, S4, S3, S2, S1, V1388]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x126, S5, S4, S3, S2, S1, V1388]

================================

Block 0x4d1
[0x4d1:0x4e7]
---
Predecessors: [0x4bb]
Successors: [0x4e8, 0x4ec]
---
0x4d1 JUMPDEST
0x4d2 PUSH1 0x1
0x4d4 SLOAD
0x4d5 CALLER
0x4d6 PUSH1 0x1
0x4d8 PUSH1 0xa0
0x4da PUSH1 0x2
0x4dc EXP
0x4dd SUB
0x4de SWAP1
0x4df DUP2
0x4e0 AND
0x4e1 SWAP2
0x4e2 AND
0x4e3 EQ
0x4e4 PUSH2 0x4ec
0x4e7 JUMPI
---
0x4d1: JUMPDEST 
0x4d2: V407 = 0x1
0x4d4: V408 = S[0x1]
0x4d5: V409 = CALLER
0x4d6: V410 = 0x1
0x4d8: V411 = 0xa0
0x4da: V412 = 0x2
0x4dc: V413 = EXP 0x2 0xa0
0x4dd: V414 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4e0: V415 = AND 0xffffffffffffffffffffffffffffffffffffffff V409
0x4e2: V416 = AND V408 0xffffffffffffffffffffffffffffffffffffffff
0x4e3: V417 = EQ V416 V415
0x4e4: V418 = 0x4ec
0x4e7: JUMPI 0x4ec V417
---
Entry stack: [V13, 0x126, S5, S4, S3, S2, S1, V1388]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x126, S5, S4, S3, S2, S1, V1388]

================================

Block 0x4e8
[0x4e8:0x4eb]
---
Predecessors: [0x4d1]
Successors: []
---
0x4e8 PUSH1 0x0
0x4ea DUP1
0x4eb REVERT
---
0x4e8: V419 = 0x0
0x4eb: REVERT 0x0 0x0
---
Entry stack: [V13, 0x126, S5, S4, S3, S2, S1, V1388]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x126, S5, S4, S3, S2, S1, V1388]

================================

Block 0x4ec
[0x4ec:0x4f5]
---
Predecessors: [0x4d1]
Successors: [0xb61]
---
0x4ec JUMPDEST
0x4ed PUSH2 0x4f6
0x4f0 DUP3
0x4f1 DUP8
0x4f2 PUSH2 0xb61
0x4f5 JUMP
---
0x4ec: JUMPDEST 
0x4ed: V420 = 0x4f6
0x4f2: V421 = 0xb61
0x4f5: JUMP 0xb61
---
Entry stack: [V13, 0x126, S5, S4, S3, S2, S1, V1388]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, 0x4f6, S1, S5]
Exit stack: [V13, 0x126, S5, S4, S3, S2, S1, V1388, 0x4f6, S1, S5]

================================

Block 0x4f6
[0x4f6:0x54f]
---
Predecessors: [0xb5a]
Successors: [0xbc4]
---
0x4f6 JUMPDEST
0x4f7 PUSH1 0xc0
0x4f9 PUSH1 0x40
0x4fb MLOAD
0x4fc SWAP1
0x4fd DUP2
0x4fe ADD
0x4ff PUSH1 0x40
0x501 SWAP1
0x502 DUP2
0x503 MSTORE
0x504 PUSH1 0x1
0x506 PUSH1 0xa0
0x508 PUSH1 0x2
0x50a EXP
0x50b SUB
0x50c DUP5
0x50d AND
0x50e DUP3
0x50f MSTORE
0x510 PUSH1 0x1
0x512 PUSH1 0x80
0x514 PUSH1 0x2
0x516 EXP
0x517 SUB
0x518 DUP1
0x519 DUP9
0x51a AND
0x51b PUSH1 0x20
0x51d DUP5
0x51e ADD
0x51f MSTORE
0x520 DUP7
0x521 AND
0x522 SWAP1
0x523 DUP3
0x524 ADD
0x525 MSTORE
0x526 PUSH8 0xffffffffffffffff
0x52f DUP1
0x530 DUP6
0x531 AND
0x532 PUSH1 0x60
0x534 DUP4
0x535 ADD
0x536 MSTORE
0x537 TIMESTAMP
0x538 AND
0x539 PUSH1 0x80
0x53b DUP3
0x53c ADD
0x53d MSTORE
0x53e PUSH1 0x0
0x540 PUSH1 0xa0
0x542 DUP3
0x543 ADD
0x544 MSTORE
0x545 SWAP1
0x546 POP
0x547 PUSH2 0x550
0x54a DUP7
0x54b DUP3
0x54c PUSH2 0xbc4
0x54f JUMP
---
0x4f6: JUMPDEST 
0x4f7: V422 = 0xc0
0x4f9: V423 = 0x40
0x4fb: V424 = M[0x40]
0x4fe: V425 = ADD V424 0xc0
0x4ff: V426 = 0x40
0x503: M[0x40] = V425
0x504: V427 = 0x1
0x506: V428 = 0xa0
0x508: V429 = 0x2
0x50a: V430 = EXP 0x2 0xa0
0x50b: V431 = SUB 0x10000000000000000000000000000000000000000 0x1
0x50d: V432 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x50f: M[V424] = V432
0x510: V433 = 0x1
0x512: V434 = 0x80
0x514: V435 = 0x2
0x516: V436 = EXP 0x2 0x80
0x517: V437 = SUB 0x100000000000000000000000000000000 0x1
0x51a: V438 = AND S4 0xffffffffffffffffffffffffffffffff
0x51b: V439 = 0x20
0x51e: V440 = ADD V424 0x20
0x51f: M[V440] = V438
0x521: V441 = AND S3 0xffffffffffffffffffffffffffffffff
0x524: V442 = ADD V424 0x40
0x525: M[V442] = V441
0x526: V443 = 0xffffffffffffffff
0x531: V444 = AND S2 0xffffffffffffffff
0x532: V445 = 0x60
0x535: V446 = ADD V424 0x60
0x536: M[V446] = V444
0x537: V447 = TIMESTAMP
0x538: V448 = AND V447 0xffffffffffffffff
0x539: V449 = 0x80
0x53c: V450 = ADD V424 0x80
0x53d: M[V450] = V448
0x53e: V451 = 0x0
0x540: V452 = 0xa0
0x543: V453 = ADD V424 0xa0
0x544: M[V453] = 0x0
0x547: V454 = 0x550
0x54c: V455 = 0xbc4
0x54f: JUMP 0xbc4
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, V424, 0x550, S5, V424]
Exit stack: [V13, S6, S5, S4, S3, S2, S1, V424, 0x550, S5, V424]

================================

Block 0x550
[0x550:0x557]
---
Predecessors: [0xbe0]
Successors: [0x126]
---
0x550 JUMPDEST
0x551 POP
0x552 POP
0x553 POP
0x554 POP
0x555 POP
0x556 POP
0x557 JUMP
---
0x550: JUMPDEST 
0x557: JUMP 0x126
---
Entry stack: [V13, 0x126, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: []
Exit stack: [V13]

================================

Block 0x558
[0x558:0x56f]
---
Predecessors: [0x15e]
Successors: [0x570, 0x574]
---
0x558 JUMPDEST
0x559 PUSH1 0x0
0x55b DUP1
0x55c SLOAD
0x55d CALLER
0x55e PUSH1 0x1
0x560 PUSH1 0xa0
0x562 PUSH1 0x2
0x564 EXP
0x565 SUB
0x566 SWAP1
0x567 DUP2
0x568 AND
0x569 SWAP2
0x56a AND
0x56b EQ
0x56c PUSH2 0x574
0x56f JUMPI
---
0x558: JUMPDEST 
0x559: V456 = 0x0
0x55c: V457 = S[0x0]
0x55d: V458 = CALLER
0x55e: V459 = 0x1
0x560: V460 = 0xa0
0x562: V461 = 0x2
0x564: V462 = EXP 0x2 0xa0
0x565: V463 = SUB 0x10000000000000000000000000000000000000000 0x1
0x568: V464 = AND 0xffffffffffffffffffffffffffffffffffffffff V458
0x56a: V465 = AND V457 0xffffffffffffffffffffffffffffffffffffffff
0x56b: V466 = EQ V465 V464
0x56c: V467 = 0x574
0x56f: JUMPI 0x574 V466
---
Entry stack: [V13, 0x166]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x166, 0x0]

================================

Block 0x570
[0x570:0x573]
---
Predecessors: [0x558]
Successors: []
---
0x570 PUSH1 0x0
0x572 DUP1
0x573 REVERT
---
0x570: V468 = 0x0
0x573: REVERT 0x0 0x0
---
Entry stack: [V13, 0x166, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x166, 0x0]

================================

Block 0x574
[0x574:0x587]
---
Predecessors: [0x558]
Successors: [0x588, 0x58c]
---
0x574 JUMPDEST
0x575 PUSH1 0x0
0x577 SLOAD
0x578 PUSH1 0xa0
0x57a PUSH1 0x2
0x57c EXP
0x57d SWAP1
0x57e DIV
0x57f PUSH1 0xff
0x581 AND
0x582 ISZERO
0x583 ISZERO
0x584 PUSH2 0x58c
0x587 JUMPI
---
0x574: JUMPDEST 
0x575: V469 = 0x0
0x577: V470 = S[0x0]
0x578: V471 = 0xa0
0x57a: V472 = 0x2
0x57c: V473 = EXP 0x2 0xa0
0x57e: V474 = DIV V470 0x10000000000000000000000000000000000000000
0x57f: V475 = 0xff
0x581: V476 = AND 0xff V474
0x582: V477 = ISZERO V476
0x583: V478 = ISZERO V477
0x584: V479 = 0x58c
0x587: JUMPI 0x58c V478
---
Entry stack: [V13, 0x166, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x166, 0x0]

================================

Block 0x588
[0x588:0x58b]
---
Predecessors: [0x574]
Successors: []
---
0x588 PUSH1 0x0
0x58a DUP1
0x58b REVERT
---
0x588: V480 = 0x0
0x58b: REVERT 0x0 0x0
---
Entry stack: [V13, 0x166, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x166, 0x0]

================================

Block 0x58c
[0x58c:0x5d9]
---
Predecessors: [0x574]
Successors: [0x5da]
---
0x58c JUMPDEST
0x58d PUSH1 0x0
0x58f DUP1
0x590 SLOAD
0x591 PUSH21 0xff0000000000000000000000000000000000000000
0x5a7 NOT
0x5a8 AND
0x5a9 SWAP1
0x5aa SSTORE
0x5ab PUSH32 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
0x5cc PUSH1 0x40
0x5ce MLOAD
0x5cf PUSH1 0x40
0x5d1 MLOAD
0x5d2 DUP1
0x5d3 SWAP2
0x5d4 SUB
0x5d5 SWAP1
0x5d6 LOG1
0x5d7 POP
0x5d8 PUSH1 0x1
---
0x58c: JUMPDEST 
0x58d: V481 = 0x0
0x590: V482 = S[0x0]
0x591: V483 = 0xff0000000000000000000000000000000000000000
0x5a7: V484 = NOT 0xff0000000000000000000000000000000000000000
0x5a8: V485 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V482
0x5aa: S[0x0] = V485
0x5ab: V486 = 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
0x5cc: V487 = 0x40
0x5ce: V488 = M[0x40]
0x5cf: V489 = 0x40
0x5d1: V490 = M[0x40]
0x5d4: V491 = SUB V488 V490
0x5d6: LOG V490 V491 0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33
0x5d8: V492 = 0x1
---
Entry stack: [V13, 0x166, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V13, 0x166, 0x1]

================================

Block 0x5da
[0x5da:0x5dc]
---
Predecessors: [0x58c, 0x10a6]
Successors: [0x166, 0x6b7]
---
0x5da JUMPDEST
0x5db SWAP1
0x5dc JUMP
---
0x5da: JUMPDEST 
0x5dc: JUMP {0x166, 0x6b7}
---
Entry stack: [V13, 0x126, V129, V131, {0xb, 0xc}, S6, S5, {0x611, 0x637}, {0xb, 0xc}, S2, {0x166, 0x6b7}, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V13, 0x126, V129, V131, {0xb, 0xc}, S6, S5, {0x611, 0x637}, {0xb, 0xc}, S2, S0]

================================

Block 0x5dd
[0x5dd:0x5f3]
---
Predecessors: [0x185]
Successors: [0x5f4, 0x5f8]
---
0x5dd JUMPDEST
0x5de PUSH1 0x1
0x5e0 SLOAD
0x5e1 CALLER
0x5e2 PUSH1 0x1
0x5e4 PUSH1 0xa0
0x5e6 PUSH1 0x2
0x5e8 EXP
0x5e9 SUB
0x5ea SWAP1
0x5eb DUP2
0x5ec AND
0x5ed SWAP2
0x5ee AND
0x5ef EQ
0x5f0 PUSH2 0x5f8
0x5f3 JUMPI
---
0x5dd: JUMPDEST 
0x5de: V493 = 0x1
0x5e0: V494 = S[0x1]
0x5e1: V495 = CALLER
0x5e2: V496 = 0x1
0x5e4: V497 = 0xa0
0x5e6: V498 = 0x2
0x5e8: V499 = EXP 0x2 0xa0
0x5e9: V500 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ec: V501 = AND 0xffffffffffffffffffffffffffffffffffffffff V495
0x5ee: V502 = AND V494 0xffffffffffffffffffffffffffffffffffffffff
0x5ef: V503 = EQ V502 V501
0x5f0: V504 = 0x5f8
0x5f3: JUMPI 0x5f8 V503
---
Entry stack: [V13, 0x126, V129, V131]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x126, V129, V131]

================================

Block 0x5f4
[0x5f4:0x5f7]
---
Predecessors: [0x5dd]
Successors: []
---
0x5f4 PUSH1 0x0
0x5f6 DUP1
0x5f7 REVERT
---
0x5f4: V505 = 0x0
0x5f7: REVERT 0x0 0x0
---
Entry stack: [V13, 0x126, V129, V131]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x126, V129, V131]

================================

Block 0x5f8
[0x5f8:0x5ff]
---
Predecessors: [0x5dd]
Successors: [0x600, 0x625]
---
0x5f8 JUMPDEST
0x5f9 DUP1
0x5fa ISZERO
0x5fb ISZERO
0x5fc PUSH2 0x625
0x5ff JUMPI
---
0x5f8: JUMPDEST 
0x5fa: V506 = ISZERO V131
0x5fb: V507 = ISZERO V506
0x5fc: V508 = 0x625
0x5ff: JUMPI 0x625 V507
---
Entry stack: [V13, 0x126, V129, V131]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x126, V129, V131]

================================

Block 0x600
[0x600:0x610]
---
Predecessors: [0x5f8]
Successors: [0x106d]
---
0x600 PUSH1 0xb
0x602 DUP1
0x603 SLOAD
0x604 PUSH1 0x1
0x606 DUP2
0x607 ADD
0x608 PUSH2 0x611
0x60b DUP4
0x60c DUP3
0x60d PUSH2 0x106d
0x610 JUMP
---
0x600: V509 = 0xb
0x603: V510 = S[0xb]
0x604: V511 = 0x1
0x607: V512 = ADD V510 0x1
0x608: V513 = 0x611
0x60d: V514 = 0x106d
0x610: JUMP 0x106d
---
Entry stack: [V13, 0x126, V129, V131]
Stack pops: 0
Stack additions: [0xb, V510, V512, 0x611, 0xb, V512]
Exit stack: [V13, 0x126, V129, V131, 0xb, V510, V512, 0x611, 0xb, V512]

================================

Block 0x611
[0x611:0x624]
---
Predecessors: [0x6b7]
Successors: [0x485]
---
0x611 JUMPDEST
0x612 POP
0x613 PUSH1 0x0
0x615 SWAP2
0x616 DUP3
0x617 MSTORE
0x618 PUSH1 0x20
0x61a SWAP1
0x61b SWAP2
0x61c SHA3
0x61d ADD
0x61e DUP3
0x61f SWAP1
0x620 SSTORE
0x621 PUSH2 0x485
0x624 JUMP
---
0x611: JUMPDEST 
0x613: V515 = 0x0
0x617: M[0x0] = S2
0x618: V516 = 0x20
0x61c: V517 = SHA3 0x0 0x20
0x61d: V518 = ADD V517 S1
0x620: S[V518] = V129
0x621: V519 = 0x485
0x624: JUMP 0x485
---
Entry stack: [V13, 0x126, V129, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3]
Exit stack: [V13, 0x126, V129, S3]

================================

Block 0x625
[0x625:0x636]
---
Predecessors: [0x5f8]
Successors: [0x106d]
---
0x625 JUMPDEST
0x626 PUSH1 0xc
0x628 DUP1
0x629 SLOAD
0x62a PUSH1 0x1
0x62c DUP2
0x62d ADD
0x62e PUSH2 0x637
0x631 DUP4
0x632 DUP3
0x633 PUSH2 0x106d
0x636 JUMP
---
0x625: JUMPDEST 
0x626: V520 = 0xc
0x629: V521 = S[0xc]
0x62a: V522 = 0x1
0x62d: V523 = ADD V521 0x1
0x62e: V524 = 0x637
0x633: V525 = 0x106d
0x636: JUMP 0x106d
---
Entry stack: [V13, 0x126, V129, V131]
Stack pops: 0
Stack additions: [0xc, V521, V523, 0x637, 0xc, V523]
Exit stack: [V13, 0x126, V129, V131, 0xc, V521, V523, 0x637, 0xc, V523]

================================

Block 0x637
[0x637:0x649]
---
Predecessors: [0x6b7]
Successors: [0x126]
---
0x637 JUMPDEST
0x638 POP
0x639 PUSH1 0x0
0x63b SWAP2
0x63c DUP3
0x63d MSTORE
0x63e PUSH1 0x20
0x640 SWAP1
0x641 SWAP2
0x642 SHA3
0x643 ADD
0x644 DUP3
0x645 SWAP1
0x646 SSTORE
0x647 POP
0x648 POP
0x649 JUMP
---
0x637: JUMPDEST 
0x639: V526 = 0x0
0x63d: M[0x0] = S2
0x63e: V527 = 0x20
0x642: V528 = SHA3 0x0 0x20
0x643: V529 = ADD V528 S1
0x646: S[V529] = V129
0x649: JUMP 0x126
---
Entry stack: [V13, 0x126, V129, S3, S2, S1, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V13]

================================

Block 0x64a
[0x64a:0x677]
---
Predecessors: [0x193]
Successors: [0xd84]
---
0x64a JUMPDEST
0x64b PUSH1 0x0
0x64d DUP2
0x64e DUP2
0x64f MSTORE
0x650 PUSH1 0x3
0x652 PUSH1 0x20
0x654 MSTORE
0x655 PUSH1 0x40
0x657 DUP2
0x658 SHA3
0x659 PUSH1 0x2
0x65b ADD
0x65c SLOAD
0x65d PUSH1 0x80
0x65f PUSH1 0x2
0x661 EXP
0x662 SWAP1
0x663 DIV
0x664 PUSH8 0xffffffffffffffff
0x66d AND
0x66e SWAP1
0x66f PUSH2 0x678
0x672 DUP4
0x673 CALLVALUE
0x674 PUSH2 0xd84
0x677 JUMP
---
0x64a: JUMPDEST 
0x64b: V530 = 0x0
0x64f: M[0x0] = V135
0x650: V531 = 0x3
0x652: V532 = 0x20
0x654: M[0x20] = 0x3
0x655: V533 = 0x40
0x658: V534 = SHA3 0x0 0x40
0x659: V535 = 0x2
0x65b: V536 = ADD 0x2 V534
0x65c: V537 = S[V536]
0x65d: V538 = 0x80
0x65f: V539 = 0x2
0x661: V540 = EXP 0x2 0x80
0x663: V541 = DIV V537 0x100000000000000000000000000000000
0x664: V542 = 0xffffffffffffffff
0x66d: V543 = AND 0xffffffffffffffff V541
0x66f: V544 = 0x678
0x673: V545 = CALLVALUE
0x674: V546 = 0xd84
0x677: JUMP 0xd84
---
Entry stack: [V13, 0x126, V135]
Stack pops: 1
Stack additions: [S0, V543, 0x0, 0x678, S0, V545]
Exit stack: [V13, 0x126, V135, V543, 0x0, 0x678, V135, V545]

================================

Block 0x678
[0x678:0x683]
---
Predecessors: [0xe58]
Successors: [0xaf3]
---
0x678 JUMPDEST
0x679 SWAP1
0x67a POP
0x67b PUSH2 0x684
0x67e CALLER
0x67f DUP5
0x680 PUSH2 0xaf3
0x683 JUMP
---
0x678: JUMPDEST 
0x67b: V547 = 0x684
0x67e: V548 = CALLER
0x680: V549 = 0xaf3
0x683: JUMP 0xaf3
---
Entry stack: [V13, 0x126, V135, V543, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S0, 0x684, V548, S3]
Exit stack: [V13, 0x126, V135, V543, S0, 0x684, V548, V135]

================================

Block 0x684
[0x684:0x697]
---
Predecessors: [0xb5a]
Successors: [0x698, 0x6b7]
---
0x684 JUMPDEST
0x685 DUP2
0x686 PUSH8 0xffffffffffffffff
0x68f AND
0x690 PUSH1 0x1
0x692 EQ
0x693 ISZERO
0x694 PUSH2 0x6b7
0x697 JUMPI
---
0x684: JUMPDEST 
0x686: V550 = 0xffffffffffffffff
0x68f: V551 = AND 0xffffffffffffffff S1
0x690: V552 = 0x1
0x692: V553 = EQ 0x1 V551
0x693: V554 = ISZERO V553
0x694: V555 = 0x6b7
0x697: JUMPI 0x6b7 V554
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x698
[0x698:0x6a9]
---
Predecessors: [0x684]
Successors: [0x6aa, 0x6ab]
---
0x698 PUSH1 0x5
0x69a DUP1
0x69b SLOAD
0x69c DUP3
0x69d SWAP2
0x69e PUSH1 0x6
0x6a0 SWAP2
0x6a1 MOD
0x6a2 PUSH1 0x5
0x6a4 DUP2
0x6a5 LT
0x6a6 PUSH2 0x6ab
0x6a9 JUMPI
---
0x698: V556 = 0x5
0x69b: V557 = S[0x5]
0x69e: V558 = 0x6
0x6a1: V559 = MOD V557 0x5
0x6a2: V560 = 0x5
0x6a5: V561 = LT V559 0x5
0x6a6: V562 = 0x6ab
0x6a9: JUMPI 0x6ab V561
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, S0, 0x6, V559]
Exit stack: [V13, S6, S5, S4, S3, S2, S1, S0, S0, 0x6, V559]

================================

Block 0x6aa
[0x6aa:0x6aa]
---
Predecessors: [0x698]
Successors: []
---
0x6aa INVALID
---
0x6aa: INVALID 
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, S3, S2, 0x6, V559]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S9, S8, S7, S6, S5, S4, S3, S2, 0x6, V559]

================================

Block 0x6ab
[0x6ab:0x6b6]
---
Predecessors: [0x698]
Successors: [0x6b7]
---
0x6ab JUMPDEST
0x6ac ADD
0x6ad SSTORE
0x6ae PUSH1 0x5
0x6b0 DUP1
0x6b1 SLOAD
0x6b2 PUSH1 0x1
0x6b4 ADD
0x6b5 SWAP1
0x6b6 SSTORE
---
0x6ab: JUMPDEST 
0x6ac: V563 = ADD V559 0x6
0x6ad: S[V563] = S2
0x6ae: V564 = 0x5
0x6b1: V565 = S[0x5]
0x6b2: V566 = 0x1
0x6b4: V567 = ADD 0x1 V565
0x6b6: S[0x5] = V567
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, S3, S2, 0x6, V559]
Stack pops: 3
Stack additions: []
Exit stack: [V13, S9, S8, S7, S6, S5, S4, S3]

================================

Block 0x6b7
[0x6b7:0x6bb]
---
Predecessors: [0x485, 0x5da, 0x684, 0x6ab, 0xee9, 0x106d]
Successors: [0x126, 0x611, 0x637]
---
0x6b7 JUMPDEST
0x6b8 POP
0x6b9 POP
0x6ba POP
0x6bb JUMP
---
0x6b7: JUMPDEST 
0x6bb: JUMP S3
---
Entry stack: [V13, 0x126, V129, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V13, 0x126, V129, S7, S6, S5, S4]

================================

Block 0x6bc
[0x6bc:0x6c7]
---
Predecessors: [0x1a9]
Successors: [0x6c8, 0x6c9]
---
0x6bc JUMPDEST
0x6bd PUSH1 0x6
0x6bf DUP2
0x6c0 PUSH1 0x5
0x6c2 DUP2
0x6c3 LT
0x6c4 PUSH2 0x6c9
0x6c7 JUMPI
---
0x6bc: JUMPDEST 
0x6bd: V568 = 0x6
0x6c0: V569 = 0x5
0x6c3: V570 = LT V143 0x5
0x6c4: V571 = 0x6c9
0x6c7: JUMPI 0x6c9 V570
---
Entry stack: [V13, 0x1b4, V143]
Stack pops: 1
Stack additions: [S0, 0x6, S0]
Exit stack: [V13, 0x1b4, V143, 0x6, V143]

================================

Block 0x6c8
[0x6c8:0x6c8]
---
Predecessors: [0x6bc]
Successors: []
---
0x6c8 INVALID
---
0x6c8: INVALID 
---
Entry stack: [V13, 0x1b4, V143, 0x6, V143]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1b4, V143, 0x6, V143]

================================

Block 0x6c9
[0x6c9:0x6cf]
---
Predecessors: [0x6bc]
Successors: [0x1b4]
---
0x6c9 JUMPDEST
0x6ca ADD
0x6cb SLOAD
0x6cc SWAP1
0x6cd POP
0x6ce DUP2
0x6cf JUMP
---
0x6c9: JUMPDEST 
0x6ca: V572 = ADD V143 0x6
0x6cb: V573 = S[V572]
0x6cf: JUMP 0x1b4
---
Entry stack: [V13, 0x1b4, V143, 0x6, V143]
Stack pops: 4
Stack additions: [S3, V573]
Exit stack: [V13, 0x1b4, V573]

================================

Block 0x6d0
[0x6d0:0x6df]
---
Predecessors: [0x1d1]
Successors: [0x166]
---
0x6d0 JUMPDEST
0x6d1 PUSH1 0x0
0x6d3 SLOAD
0x6d4 PUSH1 0xa0
0x6d6 PUSH1 0x2
0x6d8 EXP
0x6d9 SWAP1
0x6da DIV
0x6db PUSH1 0xff
0x6dd AND
0x6de DUP2
0x6df JUMP
---
0x6d0: JUMPDEST 
0x6d1: V574 = 0x0
0x6d3: V575 = S[0x0]
0x6d4: V576 = 0xa0
0x6d6: V577 = 0x2
0x6d8: V578 = EXP 0x2 0xa0
0x6da: V579 = DIV V575 0x10000000000000000000000000000000000000000
0x6db: V580 = 0xff
0x6dd: V581 = AND 0xff V579
0x6df: JUMP 0x166
---
Entry stack: [V13, 0x166]
Stack pops: 1
Stack additions: [S0, V581]
Exit stack: [V13, 0x166, V581]

================================

Block 0x6e0
[0x6e0:0x6fe]
---
Predecessors: [0x1e4]
Successors: [0x6ff, 0x715]
---
0x6e0 JUMPDEST
0x6e1 PUSH1 0x1
0x6e3 SLOAD
0x6e4 PUSH1 0x0
0x6e6 DUP1
0x6e7 SLOAD
0x6e8 PUSH1 0x1
0x6ea PUSH1 0xa0
0x6ec PUSH1 0x2
0x6ee EXP
0x6ef SUB
0x6f0 SWAP3
0x6f1 DUP4
0x6f2 AND
0x6f3 SWAP3
0x6f4 CALLER
0x6f5 DUP2
0x6f6 AND
0x6f7 SWAP2
0x6f8 AND
0x6f9 EQ
0x6fa DUP1
0x6fb PUSH2 0x715
0x6fe JUMPI
---
0x6e0: JUMPDEST 
0x6e1: V582 = 0x1
0x6e3: V583 = S[0x1]
0x6e4: V584 = 0x0
0x6e7: V585 = S[0x0]
0x6e8: V586 = 0x1
0x6ea: V587 = 0xa0
0x6ec: V588 = 0x2
0x6ee: V589 = EXP 0x2 0xa0
0x6ef: V590 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6f2: V591 = AND 0xffffffffffffffffffffffffffffffffffffffff V583
0x6f4: V592 = CALLER
0x6f6: V593 = AND 0xffffffffffffffffffffffffffffffffffffffff V592
0x6f8: V594 = AND V585 0xffffffffffffffffffffffffffffffffffffffff
0x6f9: V595 = EQ V594 V593
0x6fb: V596 = 0x715
0x6fe: JUMPI 0x715 V595
---
Entry stack: [V13, 0x126]
Stack pops: 0
Stack additions: [V591, 0x0, V595]
Exit stack: [V13, 0x126, V591, 0x0, V595]

================================

Block 0x6ff
[0x6ff:0x714]
---
Predecessors: [0x6e0]
Successors: [0x715]
---
0x6ff POP
0x700 DUP2
0x701 PUSH1 0x1
0x703 PUSH1 0xa0
0x705 PUSH1 0x2
0x707 EXP
0x708 SUB
0x709 AND
0x70a CALLER
0x70b PUSH1 0x1
0x70d PUSH1 0xa0
0x70f PUSH1 0x2
0x711 EXP
0x712 SUB
0x713 AND
0x714 EQ
---
0x701: V597 = 0x1
0x703: V598 = 0xa0
0x705: V599 = 0x2
0x707: V600 = EXP 0x2 0xa0
0x708: V601 = SUB 0x10000000000000000000000000000000000000000 0x1
0x709: V602 = AND 0xffffffffffffffffffffffffffffffffffffffff V591
0x70a: V603 = CALLER
0x70b: V604 = 0x1
0x70d: V605 = 0xa0
0x70f: V606 = 0x2
0x711: V607 = EXP 0x2 0xa0
0x712: V608 = SUB 0x10000000000000000000000000000000000000000 0x1
0x713: V609 = AND 0xffffffffffffffffffffffffffffffffffffffff V603
0x714: V610 = EQ V609 V602
---
Entry stack: [V13, 0x126, V591, 0x0, V595]
Stack pops: 3
Stack additions: [S2, S1, V610]
Exit stack: [V13, 0x126, V591, 0x0, V610]

================================

Block 0x715
[0x715:0x71b]
---
Predecessors: [0x6e0, 0x6ff]
Successors: [0x71c, 0x720]
---
0x715 JUMPDEST
0x716 ISZERO
0x717 ISZERO
0x718 PUSH2 0x720
0x71b JUMPI
---
0x715: JUMPDEST 
0x716: V611 = ISZERO S0
0x717: V612 = ISZERO V611
0x718: V613 = 0x720
0x71b: JUMPI 0x720 V612
---
Entry stack: [V13, 0x126, V591, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x126, V591, 0x0]

================================

Block 0x71c
[0x71c:0x71f]
---
Predecessors: [0x715]
Successors: []
---
0x71c PUSH1 0x0
0x71e DUP1
0x71f REVERT
---
0x71c: V614 = 0x0
0x71f: REVERT 0x0 0x0
---
Entry stack: [V13, 0x126, V591, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x126, V591, 0x0]

================================

Block 0x720
[0x720:0x755]
---
Predecessors: [0x715]
Successors: [0x126]
---
0x720 JUMPDEST
0x721 DUP2
0x722 PUSH1 0x1
0x724 PUSH1 0xa0
0x726 PUSH1 0x2
0x728 EXP
0x729 SUB
0x72a AND
0x72b PUSH2 0x8fc
0x72e ADDRESS
0x72f PUSH1 0x1
0x731 PUSH1 0xa0
0x733 PUSH1 0x2
0x735 EXP
0x736 SUB
0x737 AND
0x738 BALANCE
0x739 SWAP1
0x73a DUP2
0x73b ISZERO
0x73c MUL
0x73d SWAP1
0x73e PUSH1 0x40
0x740 MLOAD
0x741 PUSH1 0x0
0x743 PUSH1 0x40
0x745 MLOAD
0x746 DUP1
0x747 DUP4
0x748 SUB
0x749 DUP2
0x74a DUP6
0x74b DUP9
0x74c DUP9
0x74d CALL
0x74e POP
0x74f POP
0x750 POP
0x751 POP
0x752 POP
0x753 POP
0x754 POP
0x755 JUMP
---
0x720: JUMPDEST 
0x722: V615 = 0x1
0x724: V616 = 0xa0
0x726: V617 = 0x2
0x728: V618 = EXP 0x2 0xa0
0x729: V619 = SUB 0x10000000000000000000000000000000000000000 0x1
0x72a: V620 = AND 0xffffffffffffffffffffffffffffffffffffffff V591
0x72b: V621 = 0x8fc
0x72e: V622 = ADDRESS
0x72f: V623 = 0x1
0x731: V624 = 0xa0
0x733: V625 = 0x2
0x735: V626 = EXP 0x2 0xa0
0x736: V627 = SUB 0x10000000000000000000000000000000000000000 0x1
0x737: V628 = AND 0xffffffffffffffffffffffffffffffffffffffff V622
0x738: V629 = BALANCE V628
0x73b: V630 = ISZERO V629
0x73c: V631 = MUL V630 0x8fc
0x73e: V632 = 0x40
0x740: V633 = M[0x40]
0x741: V634 = 0x0
0x743: V635 = 0x40
0x745: V636 = M[0x40]
0x748: V637 = SUB V633 V636
0x74d: V638 = CALL V631 V620 V629 V636 V637 V636 0x0
0x755: JUMP 0x126
---
Entry stack: [V13, 0x126, V591, 0x0]
Stack pops: 3
Stack additions: []
Exit stack: [V13]

================================

Block 0x756
[0x756:0x760]
---
Predecessors: [0x1f7]
Successors: [0x1b4]
---
0x756 JUMPDEST
0x757 PUSH7 0x2386f26fc10000
0x75f DUP2
0x760 JUMP
---
0x756: JUMPDEST 
0x757: V639 = 0x2386f26fc10000
0x760: JUMP 0x1b4
---
Entry stack: [V13, 0x1b4]
Stack pops: 1
Stack additions: [S0, 0x2386f26fc10000]
Exit stack: [V13, 0x1b4, 0x2386f26fc10000]

================================

Block 0x761
[0x761:0x77f]
---
Predecessors: [0x20a]
Successors: [0xeb5]
---
0x761 JUMPDEST
0x762 PUSH1 0x0
0x764 DUP2
0x765 DUP2
0x766 MSTORE
0x767 PUSH1 0x3
0x769 PUSH1 0x20
0x76b MSTORE
0x76c PUSH1 0x40
0x76e DUP2
0x76f SHA3
0x770 DUP2
0x771 SWAP1
0x772 DUP2
0x773 SWAP1
0x774 DUP2
0x775 SWAP1
0x776 DUP2
0x777 SWAP1
0x778 PUSH2 0x780
0x77b DUP2
0x77c PUSH2 0xeb5
0x77f JUMP
---
0x761: JUMPDEST 
0x762: V640 = 0x0
0x766: M[0x0] = V176
0x767: V641 = 0x3
0x769: V642 = 0x20
0x76b: M[0x20] = 0x3
0x76c: V643 = 0x40
0x76f: V644 = SHA3 0x0 0x40
0x778: V645 = 0x780
0x77c: V646 = 0xeb5
0x77f: JUMP 0xeb5
---
Entry stack: [V13, 0x215, V176]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, 0x0, 0x0, 0x0, V644, 0x780, V644]
Exit stack: [V13, 0x215, V176, 0x0, 0x0, 0x0, 0x0, 0x0, V644, 0x780, V644]

================================

Block 0x780
[0x780:0x786]
---
Predecessors: [0xeb5]
Successors: [0x787, 0x78b]
---
0x780 JUMPDEST
0x781 ISZERO
0x782 ISZERO
0x783 PUSH2 0x78b
0x786 JUMPI
---
0x780: JUMPDEST 
0x781: V647 = ISZERO V1298
0x782: V648 = ISZERO V647
0x783: V649 = 0x78b
0x786: JUMPI 0x78b V648
---
Entry stack: [V13, 0x126, V135, V543, 0x0, 0x678, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1298]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x126, V135, V543, 0x0, 0x678, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x787
[0x787:0x78a]
---
Predecessors: [0x780]
Successors: []
---
0x787 PUSH1 0x0
0x789 DUP1
0x78a REVERT
---
0x787: V650 = 0x0
0x78a: REVERT 0x0 0x0
---
Entry stack: [V13, 0x126, V135, V543, 0x0, 0x678, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x126, V135, V543, 0x0, 0x678, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x78b
[0x78b:0x7e0]
---
Predecessors: [0x780]
Successors: [0x215]
---
0x78b JUMPDEST
0x78c DUP1
0x78d SLOAD
0x78e PUSH1 0x1
0x790 DUP3
0x791 ADD
0x792 SLOAD
0x793 PUSH1 0x2
0x795 SWAP1
0x796 SWAP3
0x797 ADD
0x798 SLOAD
0x799 PUSH1 0x1
0x79b PUSH1 0xa0
0x79d PUSH1 0x2
0x79f EXP
0x7a0 SUB
0x7a1 SWAP1
0x7a2 SWAP2
0x7a3 AND
0x7a4 SWAP9
0x7a5 PUSH1 0x1
0x7a7 PUSH1 0x80
0x7a9 PUSH1 0x2
0x7ab EXP
0x7ac SUB
0x7ad DUP1
0x7ae DUP5
0x7af AND
0x7b0 SWAP10
0x7b1 POP
0x7b2 PUSH1 0x80
0x7b4 PUSH1 0x2
0x7b6 EXP
0x7b7 SWAP1
0x7b8 SWAP4
0x7b9 DIV
0x7ba SWAP1
0x7bb SWAP3
0x7bc AND
0x7bd SWAP7
0x7be POP
0x7bf PUSH8 0xffffffffffffffff
0x7c8 DUP1
0x7c9 DUP3
0x7ca AND
0x7cb SWAP7
0x7cc POP
0x7cd PUSH9 0x10000000000000000
0x7d7 SWAP1
0x7d8 SWAP2
0x7d9 DIV
0x7da AND
0x7db SWAP4
0x7dc POP
0x7dd SWAP2
0x7de POP
0x7df POP
0x7e0 JUMP
---
0x78b: JUMPDEST 
0x78d: V651 = S[S0]
0x78e: V652 = 0x1
0x791: V653 = ADD S0 0x1
0x792: V654 = S[V653]
0x793: V655 = 0x2
0x797: V656 = ADD S0 0x2
0x798: V657 = S[V656]
0x799: V658 = 0x1
0x79b: V659 = 0xa0
0x79d: V660 = 0x2
0x79f: V661 = EXP 0x2 0xa0
0x7a0: V662 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7a3: V663 = AND V651 0xffffffffffffffffffffffffffffffffffffffff
0x7a5: V664 = 0x1
0x7a7: V665 = 0x80
0x7a9: V666 = 0x2
0x7ab: V667 = EXP 0x2 0x80
0x7ac: V668 = SUB 0x100000000000000000000000000000000 0x1
0x7af: V669 = AND V654 0xffffffffffffffffffffffffffffffff
0x7b2: V670 = 0x80
0x7b4: V671 = 0x2
0x7b6: V672 = EXP 0x2 0x80
0x7b9: V673 = DIV V654 0x100000000000000000000000000000000
0x7bc: V674 = AND 0xffffffffffffffffffffffffffffffff V673
0x7bf: V675 = 0xffffffffffffffff
0x7ca: V676 = AND V657 0xffffffffffffffff
0x7cd: V677 = 0x10000000000000000
0x7d9: V678 = DIV V657 0x10000000000000000
0x7da: V679 = AND V678 0xffffffffffffffff
0x7e0: JUMP S7
---
Entry stack: [V13, 0x126, V135, V543, 0x0, 0x678, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 8
Stack additions: [V663, V669, V674, V676, V679]
Exit stack: [V13, 0x126, V135, V543, 0x0, 0x678, S8, V663, V669, V674, V676, V679]

================================

Block 0x7e1
[0x7e1:0x7e6]
---
Predecessors: [0x25b]
Successors: [0x1b4]
---
0x7e1 JUMPDEST
0x7e2 PUSH1 0x2
0x7e4 SLOAD
0x7e5 DUP2
0x7e6 JUMP
---
0x7e1: JUMPDEST 
0x7e2: V680 = 0x2
0x7e4: V681 = S[0x2]
0x7e6: JUMP 0x1b4
---
Entry stack: [V13, 0x1b4]
Stack pops: 1
Stack additions: [S0, V681]
Exit stack: [V13, 0x1b4, V681]

================================

Block 0x7e7
[0x7e7:0x7fe]
---
Predecessors: [0x26e]
Successors: [0x7ff, 0x803]
---
0x7e7 JUMPDEST
0x7e8 PUSH1 0x0
0x7ea DUP1
0x7eb SLOAD
0x7ec CALLER
0x7ed PUSH1 0x1
0x7ef PUSH1 0xa0
0x7f1 PUSH1 0x2
0x7f3 EXP
0x7f4 SUB
0x7f5 SWAP1
0x7f6 DUP2
0x7f7 AND
0x7f8 SWAP2
0x7f9 AND
0x7fa EQ
0x7fb PUSH2 0x803
0x7fe JUMPI
---
0x7e7: JUMPDEST 
0x7e8: V682 = 0x0
0x7eb: V683 = S[0x0]
0x7ec: V684 = CALLER
0x7ed: V685 = 0x1
0x7ef: V686 = 0xa0
0x7f1: V687 = 0x2
0x7f3: V688 = EXP 0x2 0xa0
0x7f4: V689 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7f7: V690 = AND 0xffffffffffffffffffffffffffffffffffffffff V684
0x7f9: V691 = AND V683 0xffffffffffffffffffffffffffffffffffffffff
0x7fa: V692 = EQ V691 V690
0x7fb: V693 = 0x803
0x7fe: JUMPI 0x803 V692
---
Entry stack: [V13, 0x166]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x166, 0x0]

================================

Block 0x7ff
[0x7ff:0x802]
---
Predecessors: [0x7e7]
Successors: []
---
0x7ff PUSH1 0x0
0x801 DUP1
0x802 REVERT
---
0x7ff: V694 = 0x0
0x802: REVERT 0x0 0x0
---
Entry stack: [V13, 0x166, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x166, 0x0]

================================

Block 0x803
[0x803:0x815]
---
Predecessors: [0x7e7]
Successors: [0x816, 0x81a]
---
0x803 JUMPDEST
0x804 PUSH1 0x0
0x806 SLOAD
0x807 PUSH1 0xa0
0x809 PUSH1 0x2
0x80b EXP
0x80c SWAP1
0x80d DIV
0x80e PUSH1 0xff
0x810 AND
0x811 ISZERO
0x812 PUSH2 0x81a
0x815 JUMPI
---
0x803: JUMPDEST 
0x804: V695 = 0x0
0x806: V696 = S[0x0]
0x807: V697 = 0xa0
0x809: V698 = 0x2
0x80b: V699 = EXP 0x2 0xa0
0x80d: V700 = DIV V696 0x10000000000000000000000000000000000000000
0x80e: V701 = 0xff
0x810: V702 = AND 0xff V700
0x811: V703 = ISZERO V702
0x812: V704 = 0x81a
0x815: JUMPI 0x81a V703
---
Entry stack: [V13, 0x166, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x166, 0x0]

================================

Block 0x816
[0x816:0x819]
---
Predecessors: [0x803]
Successors: []
---
0x816 PUSH1 0x0
0x818 DUP1
0x819 REVERT
---
0x816: V705 = 0x0
0x819: REVERT 0x0 0x0
---
Entry stack: [V13, 0x166, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x166, 0x0]

================================

Block 0x81a
[0x81a:0x86f]
---
Predecessors: [0x803]
Successors: [0x166]
---
0x81a JUMPDEST
0x81b PUSH1 0x0
0x81d DUP1
0x81e SLOAD
0x81f PUSH21 0xff0000000000000000000000000000000000000000
0x835 NOT
0x836 AND
0x837 PUSH1 0xa0
0x839 PUSH1 0x2
0x83b EXP
0x83c OR
0x83d SWAP1
0x83e SSTORE
0x83f PUSH32 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
0x860 PUSH1 0x40
0x862 MLOAD
0x863 PUSH1 0x40
0x865 MLOAD
0x866 DUP1
0x867 SWAP2
0x868 SUB
0x869 SWAP1
0x86a LOG1
0x86b POP
0x86c PUSH1 0x1
0x86e SWAP1
0x86f JUMP
---
0x81a: JUMPDEST 
0x81b: V706 = 0x0
0x81e: V707 = S[0x0]
0x81f: V708 = 0xff0000000000000000000000000000000000000000
0x835: V709 = NOT 0xff0000000000000000000000000000000000000000
0x836: V710 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V707
0x837: V711 = 0xa0
0x839: V712 = 0x2
0x83b: V713 = EXP 0x2 0xa0
0x83c: V714 = OR 0x10000000000000000000000000000000000000000 V710
0x83e: S[0x0] = V714
0x83f: V715 = 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
0x860: V716 = 0x40
0x862: V717 = M[0x40]
0x863: V718 = 0x40
0x865: V719 = M[0x40]
0x868: V720 = SUB V717 V719
0x86a: LOG V719 V720 0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625
0x86c: V721 = 0x1
0x86f: JUMP 0x166
---
Entry stack: [V13, 0x166, 0x0]
Stack pops: 2
Stack additions: [0x1]
Exit stack: [V13, 0x1]

================================

Block 0x870
[0x870:0x878]
---
Predecessors: [0x281]
Successors: [0x166]
---
0x870 JUMPDEST
0x871 PUSH1 0x4
0x873 SLOAD
0x874 PUSH1 0xff
0x876 AND
0x877 DUP2
0x878 JUMP
---
0x870: JUMPDEST 
0x871: V722 = 0x4
0x873: V723 = S[0x4]
0x874: V724 = 0xff
0x876: V725 = AND 0xff V723
0x878: JUMP 0x166
---
Entry stack: [V13, 0x166]
Stack pops: 1
Stack additions: [S0, V725]
Exit stack: [V13, 0x166, V725]

================================

Block 0x879
[0x879:0x88d]
---
Predecessors: [0x294]
Successors: [0x88e, 0x892]
---
0x879 JUMPDEST
0x87a PUSH1 0x0
0x87c DUP1
0x87d SLOAD
0x87e PUSH1 0xa0
0x880 PUSH1 0x2
0x882 EXP
0x883 SWAP1
0x884 DIV
0x885 PUSH1 0xff
0x887 AND
0x888 ISZERO
0x889 ISZERO
0x88a PUSH2 0x892
0x88d JUMPI
---
0x879: JUMPDEST 
0x87a: V726 = 0x0
0x87d: V727 = S[0x0]
0x87e: V728 = 0xa0
0x880: V729 = 0x2
0x882: V730 = EXP 0x2 0xa0
0x884: V731 = DIV V727 0x10000000000000000000000000000000000000000
0x885: V732 = 0xff
0x887: V733 = AND 0xff V731
0x888: V734 = ISZERO V733
0x889: V735 = ISZERO V734
0x88a: V736 = 0x892
0x88d: JUMPI 0x892 V735
---
Entry stack: [V13, 0x126, V222]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x126, V222, 0x0]

================================

Block 0x88e
[0x88e:0x891]
---
Predecessors: [0x879]
Successors: []
---
0x88e PUSH1 0x0
0x890 DUP1
0x891 REVERT
---
0x88e: V737 = 0x0
0x891: REVERT 0x0 0x0
---
Entry stack: [V13, 0x126, V222, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x126, V222, 0x0]

================================

Block 0x892
[0x892:0x8a8]
---
Predecessors: [0x879]
Successors: [0x8a9, 0x8ad]
---
0x892 JUMPDEST
0x893 PUSH1 0x0
0x895 SLOAD
0x896 CALLER
0x897 PUSH1 0x1
0x899 PUSH1 0xa0
0x89b PUSH1 0x2
0x89d EXP
0x89e SUB
0x89f SWAP1
0x8a0 DUP2
0x8a1 AND
0x8a2 SWAP2
0x8a3 AND
0x8a4 EQ
0x8a5 PUSH2 0x8ad
0x8a8 JUMPI
---
0x892: JUMPDEST 
0x893: V738 = 0x0
0x895: V739 = S[0x0]
0x896: V740 = CALLER
0x897: V741 = 0x1
0x899: V742 = 0xa0
0x89b: V743 = 0x2
0x89d: V744 = EXP 0x2 0xa0
0x89e: V745 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8a1: V746 = AND 0xffffffffffffffffffffffffffffffffffffffff V740
0x8a3: V747 = AND V739 0xffffffffffffffffffffffffffffffffffffffff
0x8a4: V748 = EQ V747 V746
0x8a5: V749 = 0x8ad
0x8a8: JUMPI 0x8ad V748
---
Entry stack: [V13, 0x126, V222, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x126, V222, 0x0]

================================

Block 0x8a9
[0x8a9:0x8ac]
---
Predecessors: [0x892]
Successors: []
---
0x8a9 PUSH1 0x0
0x8ab DUP1
0x8ac REVERT
---
0x8a9: V750 = 0x0
0x8ac: REVERT 0x0 0x0
---
Entry stack: [V13, 0x126, V222, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x126, V222, 0x0]

================================

Block 0x8ad
[0x8ad:0x8c4]
---
Predecessors: [0x892]
Successors: [0xeb5]
---
0x8ad JUMPDEST
0x8ae POP
0x8af PUSH1 0x0
0x8b1 DUP2
0x8b2 DUP2
0x8b3 MSTORE
0x8b4 PUSH1 0x3
0x8b6 PUSH1 0x20
0x8b8 MSTORE
0x8b9 PUSH1 0x40
0x8bb SWAP1
0x8bc SHA3
0x8bd PUSH2 0x8c5
0x8c0 DUP2
0x8c1 PUSH2 0xeb5
0x8c4 JUMP
---
0x8ad: JUMPDEST 
0x8af: V751 = 0x0
0x8b3: M[0x0] = V222
0x8b4: V752 = 0x3
0x8b6: V753 = 0x20
0x8b8: M[0x20] = 0x3
0x8b9: V754 = 0x40
0x8bc: V755 = SHA3 0x0 0x40
0x8bd: V756 = 0x8c5
0x8c1: V757 = 0xeb5
0x8c4: JUMP 0xeb5
---
Entry stack: [V13, 0x126, V222, 0x0]
Stack pops: 2
Stack additions: [S1, V755, 0x8c5, V755]
Exit stack: [V13, 0x126, V222, V755, 0x8c5, V755]

================================

Block 0x8c5
[0x8c5:0x8cb]
---
Predecessors: [0xeb5]
Successors: [0x8cc, 0x8d0]
---
0x8c5 JUMPDEST
0x8c6 ISZERO
0x8c7 ISZERO
0x8c8 PUSH2 0x8d0
0x8cb JUMPI
---
0x8c5: JUMPDEST 
0x8c6: V758 = ISZERO V1298
0x8c7: V759 = ISZERO V758
0x8c8: V760 = 0x8d0
0x8cb: JUMPI 0x8d0 V759
---
Entry stack: [V13, 0x126, V135, V543, 0x0, 0x678, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1298]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x126, V135, V543, 0x0, 0x678, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x8cc
[0x8cc:0x8cf]
---
Predecessors: [0x8c5]
Successors: []
---
0x8cc PUSH1 0x0
0x8ce DUP1
0x8cf REVERT
---
0x8cc: V761 = 0x0
0x8cf: REVERT 0x0 0x0
---
Entry stack: [V13, 0x126, V135, V543, 0x0, 0x678, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x126, V135, V543, 0x0, 0x678, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x8d0
[0x8d0:0x8e5]
---
Predecessors: [0x8c5]
Successors: [0xed6]
---
0x8d0 JUMPDEST
0x8d1 DUP1
0x8d2 SLOAD
0x8d3 PUSH2 0x485
0x8d6 SWAP1
0x8d7 DUP4
0x8d8 SWAP1
0x8d9 PUSH1 0x1
0x8db PUSH1 0xa0
0x8dd PUSH1 0x2
0x8df EXP
0x8e0 SUB
0x8e1 AND
0x8e2 PUSH2 0xed6
0x8e5 JUMP
---
0x8d0: JUMPDEST 
0x8d2: V762 = S[S0]
0x8d3: V763 = 0x485
0x8d9: V764 = 0x1
0x8db: V765 = 0xa0
0x8dd: V766 = 0x2
0x8df: V767 = EXP 0x2 0xa0
0x8e0: V768 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8e1: V769 = AND 0xffffffffffffffffffffffffffffffffffffffff V762
0x8e2: V770 = 0xed6
0x8e5: JUMP 0xed6
---
Entry stack: [V13, 0x126, V135, V543, 0x0, 0x678, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x485, S1, V769]
Exit stack: [V13, 0x126, V135, V543, 0x0, 0x678, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x485, S1, V769]

================================

Block 0x8e6
[0x8e6:0x8eb]
---
Predecessors: [0x2aa]
Successors: [0x1b4]
---
0x8e6 JUMPDEST
0x8e7 PUSH1 0x5
0x8e9 SLOAD
0x8ea DUP2
0x8eb JUMP
---
0x8e6: JUMPDEST 
0x8e7: V771 = 0x5
0x8e9: V772 = S[0x5]
0x8eb: JUMP 0x1b4
---
Entry stack: [V13, 0x1b4]
Stack pops: 1
Stack additions: [S0, V772]
Exit stack: [V13, 0x1b4, V772]

================================

Block 0x8ec
[0x8ec:0x8fa]
---
Predecessors: [0x2bd]
Successors: [0x2c5]
---
0x8ec JUMPDEST
0x8ed PUSH1 0x0
0x8ef SLOAD
0x8f0 PUSH1 0x1
0x8f2 PUSH1 0xa0
0x8f4 PUSH1 0x2
0x8f6 EXP
0x8f7 SUB
0x8f8 AND
0x8f9 DUP2
0x8fa JUMP
---
0x8ec: JUMPDEST 
0x8ed: V773 = 0x0
0x8ef: V774 = S[0x0]
0x8f0: V775 = 0x1
0x8f2: V776 = 0xa0
0x8f4: V777 = 0x2
0x8f6: V778 = EXP 0x2 0xa0
0x8f7: V779 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8f8: V780 = AND 0xffffffffffffffffffffffffffffffffffffffff V774
0x8fa: JUMP 0x2c5
---
Entry stack: [V13, 0x2c5]
Stack pops: 1
Stack additions: [S0, V780]
Exit stack: [V13, 0x2c5, V780]

================================

Block 0x8fb
[0x8fb:0x912]
---
Predecessors: [0x2ec]
Successors: [0xeb5]
---
0x8fb JUMPDEST
0x8fc PUSH1 0x0
0x8fe DUP2
0x8ff DUP2
0x900 MSTORE
0x901 PUSH1 0x3
0x903 PUSH1 0x20
0x905 MSTORE
0x906 PUSH1 0x40
0x908 DUP2
0x909 SHA3
0x90a SWAP1
0x90b PUSH2 0x913
0x90e DUP3
0x90f PUSH2 0xeb5
0x912 JUMP
---
0x8fb: JUMPDEST 
0x8fc: V781 = 0x0
0x900: M[0x0] = V255
0x901: V782 = 0x3
0x903: V783 = 0x20
0x905: M[0x20] = 0x3
0x906: V784 = 0x40
0x909: V785 = SHA3 0x0 0x40
0x90b: V786 = 0x913
0x90f: V787 = 0xeb5
0x912: JUMP 0xeb5
---
Entry stack: [V13, 0x126, V255]
Stack pops: 1
Stack additions: [S0, V785, 0x0, 0x913, V785]
Exit stack: [V13, 0x126, V255, V785, 0x0, 0x913, V785]

================================

Block 0x913
[0x913:0x919]
---
Predecessors: [0xeb5]
Successors: [0x91a, 0x91e]
---
0x913 JUMPDEST
0x914 ISZERO
0x915 ISZERO
0x916 PUSH2 0x91e
0x919 JUMPI
---
0x913: JUMPDEST 
0x914: V788 = ISZERO V1298
0x915: V789 = ISZERO V788
0x916: V790 = 0x91e
0x919: JUMPI 0x91e V789
---
Entry stack: [V13, 0x126, V135, V543, 0x0, 0x678, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1298]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x126, V135, V543, 0x0, 0x678, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x91a
[0x91a:0x91d]
---
Predecessors: [0x913]
Successors: []
---
0x91a PUSH1 0x0
0x91c DUP1
0x91d REVERT
---
0x91a: V791 = 0x0
0x91d: REVERT 0x0 0x0
---
Entry stack: [V13, 0x126, V135, V543, 0x0, 0x678, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x126, V135, V543, 0x0, 0x678, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x91e
[0x91e:0x935]
---
Predecessors: [0x913]
Successors: [0x936, 0x93a]
---
0x91e JUMPDEST
0x91f POP
0x920 DUP1
0x921 SLOAD
0x922 PUSH1 0x1
0x924 PUSH1 0xa0
0x926 PUSH1 0x2
0x928 EXP
0x929 SUB
0x92a SWAP1
0x92b DUP2
0x92c AND
0x92d SWAP1
0x92e CALLER
0x92f AND
0x930 DUP2
0x931 EQ
0x932 PUSH2 0x93a
0x935 JUMPI
---
0x91e: JUMPDEST 
0x921: V792 = S[S1]
0x922: V793 = 0x1
0x924: V794 = 0xa0
0x926: V795 = 0x2
0x928: V796 = EXP 0x2 0xa0
0x929: V797 = SUB 0x10000000000000000000000000000000000000000 0x1
0x92c: V798 = AND 0xffffffffffffffffffffffffffffffffffffffff V792
0x92e: V799 = CALLER
0x92f: V800 = AND V799 0xffffffffffffffffffffffffffffffffffffffff
0x931: V801 = EQ V798 V800
0x932: V802 = 0x93a
0x935: JUMPI 0x93a V801
---
Entry stack: [V13, 0x126, V135, V543, 0x0, 0x678, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, V798]
Exit stack: [V13, 0x126, V135, V543, 0x0, 0x678, S8, S7, S6, S5, S4, S3, S2, S1, V798]

================================

Block 0x936
[0x936:0x939]
---
Predecessors: [0x91e]
Successors: []
---
0x936 PUSH1 0x0
0x938 DUP1
0x939 REVERT
---
0x936: V803 = 0x0
0x939: REVERT 0x0 0x0
---
Entry stack: [V13, 0x126, V135, V543, 0x0, 0x678, S8, S7, S6, S5, S4, S3, S2, S1, V798]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x126, V135, V543, 0x0, 0x678, S8, S7, S6, S5, S4, S3, S2, S1, V798]

================================

Block 0x93a
[0x93a:0x943]
---
Predecessors: [0x91e]
Successors: [0xed6]
---
0x93a JUMPDEST
0x93b PUSH2 0x6b7
0x93e DUP4
0x93f DUP3
0x940 PUSH2 0xed6
0x943 JUMP
---
0x93a: JUMPDEST 
0x93b: V804 = 0x6b7
0x940: V805 = 0xed6
0x943: JUMP 0xed6
---
Entry stack: [V13, 0x126, V135, V543, 0x0, 0x678, S8, S7, S6, S5, S4, S3, S2, S1, V798]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x6b7, S2, S0]
Exit stack: [V13, 0x126, V135, V543, 0x0, 0x678, S8, S7, S6, S5, S4, S3, S2, S1, V798, 0x6b7, S2, V798]

================================

Block 0x944
[0x944:0x95a]
---
Predecessors: [0x302]
Successors: [0xeb5]
---
0x944 JUMPDEST
0x945 PUSH1 0x0
0x947 DUP2
0x948 DUP2
0x949 MSTORE
0x94a PUSH1 0x3
0x94c PUSH1 0x20
0x94e MSTORE
0x94f PUSH1 0x40
0x951 DUP2
0x952 SHA3
0x953 PUSH2 0x95b
0x956 DUP2
0x957 PUSH2 0xeb5
0x95a JUMP
---
0x944: JUMPDEST 
0x945: V806 = 0x0
0x949: M[0x0] = V263
0x94a: V807 = 0x3
0x94c: V808 = 0x20
0x94e: M[0x20] = 0x3
0x94f: V809 = 0x40
0x952: V810 = SHA3 0x0 0x40
0x953: V811 = 0x95b
0x957: V812 = 0xeb5
0x95a: JUMP 0xeb5
---
Entry stack: [V13, 0x1b4, V263]
Stack pops: 1
Stack additions: [S0, 0x0, V810, 0x95b, V810]
Exit stack: [V13, 0x1b4, V263, 0x0, V810, 0x95b, V810]

================================

Block 0x95b
[0x95b:0x961]
---
Predecessors: [0xeb5]
Successors: [0x962, 0x966]
---
0x95b JUMPDEST
0x95c ISZERO
0x95d ISZERO
0x95e PUSH2 0x966
0x961 JUMPI
---
0x95b: JUMPDEST 
0x95c: V813 = ISZERO V1298
0x95d: V814 = ISZERO V813
0x95e: V815 = 0x966
0x961: JUMPI 0x966 V814
---
Entry stack: [V13, 0x126, V135, V543, 0x0, 0x678, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1298]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x126, V135, V543, 0x0, 0x678, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x962
[0x962:0x965]
---
Predecessors: [0x95b]
Successors: []
---
0x962 PUSH1 0x0
0x964 DUP1
0x965 REVERT
---
0x962: V816 = 0x0
0x965: REVERT 0x0 0x0
---
Entry stack: [V13, 0x126, V135, V543, 0x0, 0x678, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x126, V135, V543, 0x0, 0x678, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x966
[0x966:0x96e]
---
Predecessors: [0x95b]
Successors: [0xf20]
---
0x966 JUMPDEST
0x967 PUSH2 0x96f
0x96a DUP2
0x96b PUSH2 0xf20
0x96e JUMP
---
0x966: JUMPDEST 
0x967: V817 = 0x96f
0x96b: V818 = 0xf20
0x96e: JUMP 0xf20
---
Entry stack: [V13, 0x126, V135, V543, 0x0, 0x678, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x96f, S0]
Exit stack: [V13, 0x126, V135, V543, 0x0, 0x678, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x96f, S0]

================================

Block 0x96f
[0x96f:0x975]
---
Predecessors: [0x96f, 0x102d]
Successors: [0x1b4, 0x96f, 0xdb4]
---
0x96f JUMPDEST
0x970 SWAP4
0x971 SWAP3
0x972 POP
0x973 POP
0x974 POP
0x975 JUMP
---
0x96f: JUMPDEST 
0x975: JUMP S4
---
Entry stack: [V13, 0x126, V135, V543, S15, {0x126, 0x678}, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V13, 0x126, V135, V543, S15, {0x126, 0x678}, S13, S12, S11, S10, S9, S8, S7, S6, S5, S0]

================================

Block 0x976
[0x976:0x984]
---
Predecessors: [0x318]
Successors: [0x2c5]
---
0x976 JUMPDEST
0x977 PUSH1 0x1
0x979 SLOAD
0x97a PUSH1 0x1
0x97c PUSH1 0xa0
0x97e PUSH1 0x2
0x980 EXP
0x981 SUB
0x982 AND
0x983 DUP2
0x984 JUMP
---
0x976: JUMPDEST 
0x977: V819 = 0x1
0x979: V820 = S[0x1]
0x97a: V821 = 0x1
0x97c: V822 = 0xa0
0x97e: V823 = 0x2
0x980: V824 = EXP 0x2 0xa0
0x981: V825 = SUB 0x10000000000000000000000000000000000000000 0x1
0x982: V826 = AND 0xffffffffffffffffffffffffffffffffffffffff V820
0x984: JUMP 0x2c5
---
Entry stack: [V13, 0x2c5]
Stack pops: 1
Stack additions: [S0, V826]
Exit stack: [V13, 0x2c5, V826]

================================

Block 0x985
[0x985:0x989]
---
Predecessors: [0x32b]
Successors: [0x98a]
---
0x985 JUMPDEST
0x986 PUSH1 0x0
0x988 DUP1
0x989 DUP1
---
0x985: JUMPDEST 
0x986: V827 = 0x0
---
Entry stack: [V13, 0x1b4]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V13, 0x1b4, 0x0, 0x0, 0x0]

================================

Block 0x98a
[0x98a:0x993]
---
Predecessors: [0x985, 0x9a0]
Successors: [0x994, 0x9af]
---
0x98a JUMPDEST
0x98b PUSH1 0x5
0x98d DUP2
0x98e LT
0x98f ISZERO
0x990 PUSH2 0x9af
0x993 JUMPI
---
0x98a: JUMPDEST 
0x98b: V828 = 0x5
0x98e: V829 = LT S0 0x5
0x98f: V830 = ISZERO V829
0x990: V831 = 0x9af
0x993: JUMPI 0x9af V830
---
Entry stack: [V13, 0x1b4, 0x0, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x1b4, 0x0, S1, S0]

================================

Block 0x994
[0x994:0x99e]
---
Predecessors: [0x98a]
Successors: [0x99f, 0x9a0]
---
0x994 PUSH1 0x6
0x996 DUP2
0x997 PUSH1 0x5
0x999 DUP2
0x99a LT
0x99b PUSH2 0x9a0
0x99e JUMPI
---
0x994: V832 = 0x6
0x997: V833 = 0x5
0x99a: V834 = LT S0 0x5
0x99b: V835 = 0x9a0
0x99e: JUMPI 0x9a0 V834
---
Entry stack: [V13, 0x1b4, 0x0, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x6, S0]
Exit stack: [V13, 0x1b4, 0x0, S1, S0, 0x6, S0]

================================

Block 0x99f
[0x99f:0x99f]
---
Predecessors: [0x994]
Successors: []
---
0x99f INVALID
---
0x99f: INVALID 
---
Entry stack: [V13, 0x1b4, 0x0, S3, S2, 0x6, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1b4, 0x0, S3, S2, 0x6, S0]

================================

Block 0x9a0
[0x9a0:0x9ae]
---
Predecessors: [0x994]
Successors: [0x98a]
---
0x9a0 JUMPDEST
0x9a1 ADD
0x9a2 SLOAD
0x9a3 SWAP2
0x9a4 SWAP1
0x9a5 SWAP2
0x9a6 ADD
0x9a7 SWAP1
0x9a8 PUSH1 0x1
0x9aa ADD
0x9ab PUSH2 0x98a
0x9ae JUMP
---
0x9a0: JUMPDEST 
0x9a1: V836 = ADD S0 0x6
0x9a2: V837 = S[V836]
0x9a6: V838 = ADD V837 S3
0x9a8: V839 = 0x1
0x9aa: V840 = ADD 0x1 S2
0x9ab: V841 = 0x98a
0x9ae: JUMP 0x98a
---
Entry stack: [V13, 0x1b4, 0x0, S3, S2, 0x6, S0]
Stack pops: 4
Stack additions: [V838, V840]
Exit stack: [V13, 0x1b4, 0x0, V838, V840]

================================

Block 0x9af
[0x9af:0x9b8]
---
Predecessors: [0x98a]
Successors: [0x1b4]
---
0x9af JUMPDEST
0x9b0 POP
0x9b1 PUSH1 0x5
0x9b3 SWAP1
0x9b4 DIV
0x9b5 SWAP2
0x9b6 SWAP1
0x9b7 POP
0x9b8 JUMP
---
0x9af: JUMPDEST 
0x9b1: V842 = 0x5
0x9b4: V843 = DIV S1 0x5
0x9b8: JUMP 0x1b4
---
Entry stack: [V13, 0x1b4, 0x0, S1, S0]
Stack pops: 4
Stack additions: [V843]
Exit stack: [V13, V843]

================================

Block 0x9b9
[0x9b9:0x9d5]
---
Predecessors: [0x33e]
Successors: [0x346]
---
0x9b9 JUMPDEST
0x9ba PUSH1 0xd
0x9bc SLOAD
0x9bd PUSH1 0xb
0x9bf SLOAD
0x9c0 PUSH1 0xe
0x9c2 SLOAD
0x9c3 PUSH1 0xc
0x9c5 SLOAD
0x9c6 PUSH1 0x1
0x9c8 SWAP4
0x9c9 SWAP1
0x9ca SWAP3
0x9cb SUB
0x9cc DUP4
0x9cd ADD
0x9ce SWAP4
0x9cf SWAP2
0x9d0 SUB
0x9d1 SWAP1
0x9d2 SWAP2
0x9d3 ADD
0x9d4 SWAP1
0x9d5 JUMP
---
0x9b9: JUMPDEST 
0x9ba: V844 = 0xd
0x9bc: V845 = S[0xd]
0x9bd: V846 = 0xb
0x9bf: V847 = S[0xb]
0x9c0: V848 = 0xe
0x9c2: V849 = S[0xe]
0x9c3: V850 = 0xc
0x9c5: V851 = S[0xc]
0x9c6: V852 = 0x1
0x9cb: V853 = SUB V847 V845
0x9cd: V854 = ADD 0x1 V853
0x9d0: V855 = SUB V851 V849
0x9d3: V856 = ADD 0x1 V855
0x9d5: JUMP 0x346
---
Entry stack: [V13, 0x346]
Stack pops: 1
Stack additions: [V854, V856]
Exit stack: [V13, V854, V856]

================================

Block 0x9d6
[0x9d6:0x9ec]
---
Predecessors: [0x369]
Successors: [0x9ed, 0x9f1]
---
0x9d6 JUMPDEST
0x9d7 PUSH1 0x0
0x9d9 SLOAD
0x9da CALLER
0x9db PUSH1 0x1
0x9dd PUSH1 0xa0
0x9df PUSH1 0x2
0x9e1 EXP
0x9e2 SUB
0x9e3 SWAP1
0x9e4 DUP2
0x9e5 AND
0x9e6 SWAP2
0x9e7 AND
0x9e8 EQ
0x9e9 PUSH2 0x9f1
0x9ec JUMPI
---
0x9d6: JUMPDEST 
0x9d7: V857 = 0x0
0x9d9: V858 = S[0x0]
0x9da: V859 = CALLER
0x9db: V860 = 0x1
0x9dd: V861 = 0xa0
0x9df: V862 = 0x2
0x9e1: V863 = EXP 0x2 0xa0
0x9e2: V864 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9e5: V865 = AND 0xffffffffffffffffffffffffffffffffffffffff V859
0x9e7: V866 = AND V858 0xffffffffffffffffffffffffffffffffffffffff
0x9e8: V867 = EQ V866 V865
0x9e9: V868 = 0x9f1
0x9ec: JUMPI 0x9f1 V867
---
Entry stack: [V13, 0x126, V303]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x126, V303]

================================

Block 0x9ed
[0x9ed:0x9f0]
---
Predecessors: [0x9d6]
Successors: []
---
0x9ed PUSH1 0x0
0x9ef DUP1
0x9f0 REVERT
---
0x9ed: V869 = 0x0
0x9f0: REVERT 0x0 0x0
---
Entry stack: [V13, 0x126, V303]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x126, V303]

================================

Block 0x9f1
[0x9f1:0xa00]
---
Predecessors: [0x9d6]
Successors: [0xa01, 0xa29]
---
0x9f1 JUMPDEST
0x9f2 PUSH1 0x1
0x9f4 PUSH1 0xa0
0x9f6 PUSH1 0x2
0x9f8 EXP
0x9f9 SUB
0x9fa DUP2
0x9fb AND
0x9fc ISZERO
0x9fd PUSH2 0xa29
0xa00 JUMPI
---
0x9f1: JUMPDEST 
0x9f2: V870 = 0x1
0x9f4: V871 = 0xa0
0x9f6: V872 = 0x2
0x9f8: V873 = EXP 0x2 0xa0
0x9f9: V874 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9fb: V875 = AND V303 0xffffffffffffffffffffffffffffffffffffffff
0x9fc: V876 = ISZERO V875
0x9fd: V877 = 0xa29
0xa00: JUMPI 0xa29 V876
---
Entry stack: [V13, 0x126, V303]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x126, V303]

================================

Block 0xa01
[0xa01:0xa28]
---
Predecessors: [0x9f1]
Successors: [0xa29]
---
0xa01 PUSH1 0x0
0xa03 DUP1
0xa04 SLOAD
0xa05 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa1a NOT
0xa1b AND
0xa1c PUSH1 0x1
0xa1e PUSH1 0xa0
0xa20 PUSH1 0x2
0xa22 EXP
0xa23 SUB
0xa24 DUP4
0xa25 AND
0xa26 OR
0xa27 SWAP1
0xa28 SSTORE
---
0xa01: V878 = 0x0
0xa04: V879 = S[0x0]
0xa05: V880 = 0xffffffffffffffffffffffffffffffffffffffff
0xa1a: V881 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xa1b: V882 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V879
0xa1c: V883 = 0x1
0xa1e: V884 = 0xa0
0xa20: V885 = 0x2
0xa22: V886 = EXP 0x2 0xa0
0xa23: V887 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa25: V888 = AND V303 0xffffffffffffffffffffffffffffffffffffffff
0xa26: V889 = OR V888 V882
0xa28: S[0x0] = V889
---
Entry stack: [V13, 0x126, V303]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x126, V303]

================================

Block 0xa29
[0xa29:0xa2b]
---
Predecessors: [0x9f1, 0xa01]
Successors: [0x126]
---
0xa29 JUMPDEST
0xa2a POP
0xa2b JUMP
---
0xa29: JUMPDEST 
0xa2b: JUMP 0x126
---
Entry stack: [V13, 0x126, V303]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0xa2c
[0xa2c:0xa33]
---
Predecessors: [0x388]
Successors: [0x1038]
---
0xa2c JUMPDEST
0xa2d PUSH2 0xa34
0xa30 PUSH2 0x1038
0xa33 JUMP
---
0xa2c: JUMPDEST 
0xa2d: V890 = 0xa34
0xa30: V891 = 0x1038
0xa33: JUMP 0x1038
---
Entry stack: [V13, 0x126, V311, V313, V315, V317, V325]
Stack pops: 0
Stack additions: [0xa34]
Exit stack: [V13, 0x126, V311, V313, V315, V317, V325, 0xa34]

================================

Block 0xa34
[0xa34:0xa44]
---
Predecessors: [0x1038]
Successors: [0xa45, 0xa49]
---
0xa34 JUMPDEST
0xa35 PUSH1 0x1
0xa37 PUSH1 0x80
0xa39 PUSH1 0x2
0xa3b EXP
0xa3c SUB
0xa3d DUP6
0xa3e AND
0xa3f DUP6
0xa40 EQ
0xa41 PUSH2 0xa49
0xa44 JUMPI
---
0xa34: JUMPDEST 
0xa35: V892 = 0x1
0xa37: V893 = 0x80
0xa39: V894 = 0x2
0xa3b: V895 = EXP 0x2 0x80
0xa3c: V896 = SUB 0x100000000000000000000000000000000 0x1
0xa3e: V897 = AND S4 0xffffffffffffffffffffffffffffffff
0xa40: V898 = EQ S4 V897
0xa41: V899 = 0xa49
0xa44: JUMPI 0xa49 V898
---
Entry stack: [V13, 0x126, S5, S4, S3, S2, S1, V1388]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V13, 0x126, S5, S4, S3, S2, S1, V1388]

================================

Block 0xa45
[0xa45:0xa48]
---
Predecessors: [0xa34]
Successors: []
---
0xa45 PUSH1 0x0
0xa47 DUP1
0xa48 REVERT
---
0xa45: V900 = 0x0
0xa48: REVERT 0x0 0x0
---
Entry stack: [V13, 0x126, S5, S4, S3, S2, S1, V1388]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x126, S5, S4, S3, S2, S1, V1388]

================================

Block 0xa49
[0xa49:0xa59]
---
Predecessors: [0xa34]
Successors: [0xa5a, 0xa5e]
---
0xa49 JUMPDEST
0xa4a PUSH1 0x1
0xa4c PUSH1 0x80
0xa4e PUSH1 0x2
0xa50 EXP
0xa51 SUB
0xa52 DUP5
0xa53 AND
0xa54 DUP5
0xa55 EQ
0xa56 PUSH2 0xa5e
0xa59 JUMPI
---
0xa49: JUMPDEST 
0xa4a: V901 = 0x1
0xa4c: V902 = 0x80
0xa4e: V903 = 0x2
0xa50: V904 = EXP 0x2 0x80
0xa51: V905 = SUB 0x100000000000000000000000000000000 0x1
0xa53: V906 = AND S3 0xffffffffffffffffffffffffffffffff
0xa55: V907 = EQ S3 V906
0xa56: V908 = 0xa5e
0xa59: JUMPI 0xa5e V907
---
Entry stack: [V13, 0x126, S5, S4, S3, S2, S1, V1388]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, 0x126, S5, S4, S3, S2, S1, V1388]

================================

Block 0xa5a
[0xa5a:0xa5d]
---
Predecessors: [0xa49]
Successors: []
---
0xa5a PUSH1 0x0
0xa5c DUP1
0xa5d REVERT
---
0xa5a: V909 = 0x0
0xa5d: REVERT 0x0 0x0
---
Entry stack: [V13, 0x126, S5, S4, S3, S2, S1, V1388]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x126, S5, S4, S3, S2, S1, V1388]

================================

Block 0xa5e
[0xa5e:0xa6f]
---
Predecessors: [0xa49]
Successors: [0xa70, 0xa74]
---
0xa5e JUMPDEST
0xa5f PUSH8 0xffffffffffffffff
0xa68 DUP4
0xa69 AND
0xa6a DUP4
0xa6b EQ
0xa6c PUSH2 0xa74
0xa6f JUMPI
---
0xa5e: JUMPDEST 
0xa5f: V910 = 0xffffffffffffffff
0xa69: V911 = AND S2 0xffffffffffffffff
0xa6b: V912 = EQ S2 V911
0xa6c: V913 = 0xa74
0xa6f: JUMPI 0xa74 V912
---
Entry stack: [V13, 0x126, S5, S4, S3, S2, S1, V1388]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x126, S5, S4, S3, S2, S1, V1388]

================================

Block 0xa70
[0xa70:0xa73]
---
Predecessors: [0xa5e]
Successors: []
---
0xa70 PUSH1 0x0
0xa72 DUP1
0xa73 REVERT
---
0xa70: V914 = 0x0
0xa73: REVERT 0x0 0x0
---
Entry stack: [V13, 0x126, S5, S4, S3, S2, S1, V1388]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x126, S5, S4, S3, S2, S1, V1388]

================================

Block 0xa74
[0xa74:0xa8a]
---
Predecessors: [0xa5e]
Successors: [0xa8b, 0xa8f]
---
0xa74 JUMPDEST
0xa75 PUSH1 0x1
0xa77 SLOAD
0xa78 CALLER
0xa79 PUSH1 0x1
0xa7b PUSH1 0xa0
0xa7d PUSH1 0x2
0xa7f EXP
0xa80 SUB
0xa81 SWAP1
0xa82 DUP2
0xa83 AND
0xa84 SWAP2
0xa85 AND
0xa86 EQ
0xa87 PUSH2 0xa8f
0xa8a JUMPI
---
0xa74: JUMPDEST 
0xa75: V915 = 0x1
0xa77: V916 = S[0x1]
0xa78: V917 = CALLER
0xa79: V918 = 0x1
0xa7b: V919 = 0xa0
0xa7d: V920 = 0x2
0xa7f: V921 = EXP 0x2 0xa0
0xa80: V922 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa83: V923 = AND 0xffffffffffffffffffffffffffffffffffffffff V917
0xa85: V924 = AND V916 0xffffffffffffffffffffffffffffffffffffffff
0xa86: V925 = EQ V924 V923
0xa87: V926 = 0xa8f
0xa8a: JUMPI 0xa8f V925
---
Entry stack: [V13, 0x126, S5, S4, S3, S2, S1, V1388]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x126, S5, S4, S3, S2, S1, V1388]

================================

Block 0xa8b
[0xa8b:0xa8e]
---
Predecessors: [0xa74]
Successors: []
---
0xa8b PUSH1 0x0
0xa8d DUP1
0xa8e REVERT
---
0xa8b: V927 = 0x0
0xa8e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x126, S5, S4, S3, S2, S1, V1388]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x126, S5, S4, S3, S2, S1, V1388]

================================

Block 0xa8f
[0xa8f:0xa98]
---
Predecessors: [0xa74]
Successors: [0xb61]
---
0xa8f JUMPDEST
0xa90 PUSH2 0xa99
0xa93 DUP3
0xa94 DUP8
0xa95 PUSH2 0xb61
0xa98 JUMP
---
0xa8f: JUMPDEST 
0xa90: V928 = 0xa99
0xa95: V929 = 0xb61
0xa98: JUMP 0xb61
---
Entry stack: [V13, 0x126, S5, S4, S3, S2, S1, V1388]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, 0xa99, S1, S5]
Exit stack: [V13, 0x126, S5, S4, S3, S2, S1, V1388, 0xa99, S1, S5]

================================

Block 0xa99
[0xa99:0xaf2]
---
Predecessors: [0xb5a]
Successors: [0xbc4]
---
0xa99 JUMPDEST
0xa9a PUSH1 0xc0
0xa9c PUSH1 0x40
0xa9e MLOAD
0xa9f SWAP1
0xaa0 DUP2
0xaa1 ADD
0xaa2 PUSH1 0x40
0xaa4 SWAP1
0xaa5 DUP2
0xaa6 MSTORE
0xaa7 PUSH1 0x1
0xaa9 PUSH1 0xa0
0xaab PUSH1 0x2
0xaad EXP
0xaae SUB
0xaaf DUP5
0xab0 AND
0xab1 DUP3
0xab2 MSTORE
0xab3 PUSH1 0x1
0xab5 PUSH1 0x80
0xab7 PUSH1 0x2
0xab9 EXP
0xaba SUB
0xabb DUP1
0xabc DUP9
0xabd AND
0xabe PUSH1 0x20
0xac0 DUP5
0xac1 ADD
0xac2 MSTORE
0xac3 DUP7
0xac4 AND
0xac5 SWAP1
0xac6 DUP3
0xac7 ADD
0xac8 MSTORE
0xac9 PUSH8 0xffffffffffffffff
0xad2 DUP1
0xad3 DUP6
0xad4 AND
0xad5 PUSH1 0x60
0xad7 DUP4
0xad8 ADD
0xad9 MSTORE
0xada TIMESTAMP
0xadb AND
0xadc PUSH1 0x80
0xade DUP3
0xadf ADD
0xae0 MSTORE
0xae1 PUSH1 0x1
0xae3 PUSH1 0xa0
0xae5 DUP3
0xae6 ADD
0xae7 MSTORE
0xae8 SWAP1
0xae9 POP
0xaea PUSH2 0x550
0xaed DUP7
0xaee DUP3
0xaef PUSH2 0xbc4
0xaf2 JUMP
---
0xa99: JUMPDEST 
0xa9a: V930 = 0xc0
0xa9c: V931 = 0x40
0xa9e: V932 = M[0x40]
0xaa1: V933 = ADD V932 0xc0
0xaa2: V934 = 0x40
0xaa6: M[0x40] = V933
0xaa7: V935 = 0x1
0xaa9: V936 = 0xa0
0xaab: V937 = 0x2
0xaad: V938 = EXP 0x2 0xa0
0xaae: V939 = SUB 0x10000000000000000000000000000000000000000 0x1
0xab0: V940 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0xab2: M[V932] = V940
0xab3: V941 = 0x1
0xab5: V942 = 0x80
0xab7: V943 = 0x2
0xab9: V944 = EXP 0x2 0x80
0xaba: V945 = SUB 0x100000000000000000000000000000000 0x1
0xabd: V946 = AND S4 0xffffffffffffffffffffffffffffffff
0xabe: V947 = 0x20
0xac1: V948 = ADD V932 0x20
0xac2: M[V948] = V946
0xac4: V949 = AND S3 0xffffffffffffffffffffffffffffffff
0xac7: V950 = ADD V932 0x40
0xac8: M[V950] = V949
0xac9: V951 = 0xffffffffffffffff
0xad4: V952 = AND S2 0xffffffffffffffff
0xad5: V953 = 0x60
0xad8: V954 = ADD V932 0x60
0xad9: M[V954] = V952
0xada: V955 = TIMESTAMP
0xadb: V956 = AND V955 0xffffffffffffffff
0xadc: V957 = 0x80
0xadf: V958 = ADD V932 0x80
0xae0: M[V958] = V956
0xae1: V959 = 0x1
0xae3: V960 = 0xa0
0xae6: V961 = ADD V932 0xa0
0xae7: M[V961] = 0x1
0xaea: V962 = 0x550
0xaef: V963 = 0xbc4
0xaf2: JUMP 0xbc4
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, V932, 0x550, S5, V932]
Exit stack: [V13, S6, S5, S4, S3, S2, S1, V932, 0x550, S5, V932]

================================

Block 0xaf3
[0xaf3:0xb44]
---
Predecessors: [0x47b, 0x678, 0xedf]
Successors: [0xb45, 0xb49]
---
0xaf3 JUMPDEST
0xaf4 PUSH1 0x1
0xaf6 SLOAD
0xaf7 PUSH1 0x1
0xaf9 PUSH1 0xa0
0xafb PUSH1 0x2
0xafd EXP
0xafe SUB
0xaff AND
0xb00 PUSH4 0xa9059cbb
0xb05 DUP4
0xb06 DUP4
0xb07 PUSH1 0x40
0xb09 MLOAD
0xb0a PUSH1 0xe0
0xb0c PUSH1 0x2
0xb0e EXP
0xb0f PUSH4 0xffffffff
0xb14 DUP6
0xb15 AND
0xb16 MUL
0xb17 DUP2
0xb18 MSTORE
0xb19 PUSH1 0x1
0xb1b PUSH1 0xa0
0xb1d PUSH1 0x2
0xb1f EXP
0xb20 SUB
0xb21 SWAP1
0xb22 SWAP3
0xb23 AND
0xb24 PUSH1 0x4
0xb26 DUP4
0xb27 ADD
0xb28 MSTORE
0xb29 PUSH1 0x24
0xb2b DUP3
0xb2c ADD
0xb2d MSTORE
0xb2e PUSH1 0x44
0xb30 ADD
0xb31 PUSH1 0x0
0xb33 PUSH1 0x40
0xb35 MLOAD
0xb36 DUP1
0xb37 DUP4
0xb38 SUB
0xb39 DUP2
0xb3a PUSH1 0x0
0xb3c DUP8
0xb3d DUP1
0xb3e EXTCODESIZE
0xb3f ISZERO
0xb40 ISZERO
0xb41 PUSH2 0xb49
0xb44 JUMPI
---
0xaf3: JUMPDEST 
0xaf4: V964 = 0x1
0xaf6: V965 = S[0x1]
0xaf7: V966 = 0x1
0xaf9: V967 = 0xa0
0xafb: V968 = 0x2
0xafd: V969 = EXP 0x2 0xa0
0xafe: V970 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaff: V971 = AND 0xffffffffffffffffffffffffffffffffffffffff V965
0xb00: V972 = 0xa9059cbb
0xb07: V973 = 0x40
0xb09: V974 = M[0x40]
0xb0a: V975 = 0xe0
0xb0c: V976 = 0x2
0xb0e: V977 = EXP 0x2 0xe0
0xb0f: V978 = 0xffffffff
0xb15: V979 = AND 0xa9059cbb 0xffffffff
0xb16: V980 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xb18: M[V974] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xb19: V981 = 0x1
0xb1b: V982 = 0xa0
0xb1d: V983 = 0x2
0xb1f: V984 = EXP 0x2 0xa0
0xb20: V985 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb23: V986 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0xb24: V987 = 0x4
0xb27: V988 = ADD V974 0x4
0xb28: M[V988] = V986
0xb29: V989 = 0x24
0xb2c: V990 = ADD V974 0x24
0xb2d: M[V990] = S0
0xb2e: V991 = 0x44
0xb30: V992 = ADD 0x44 V974
0xb31: V993 = 0x0
0xb33: V994 = 0x40
0xb35: V995 = M[0x40]
0xb38: V996 = SUB V992 V995
0xb3a: V997 = 0x0
0xb3e: V998 = EXTCODESIZE V971
0xb3f: V999 = ISZERO V998
0xb40: V1000 = ISZERO V999
0xb41: V1001 = 0xb49
0xb44: JUMPI 0xb49 V1000
---
Entry stack: [V13, 0x126, V135, V543, S13, {0x126, 0x678}, V135, S10, S9, S8, S7, S6, S5, S4, S3, {0x485, 0x684, 0xee9}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V971, 0xa9059cbb, V992, 0x0, V995, V996, V995, 0x0, V971]
Exit stack: [V13, 0x126, V135, V543, S13, {0x126, 0x678}, V135, S10, S9, S8, S7, S6, S5, S4, S3, {0x485, 0x684, 0xee9}, S1, S0, V971, 0xa9059cbb, V992, 0x0, V995, V996, V995, 0x0, V971]

================================

Block 0xb45
[0xb45:0xb48]
---
Predecessors: [0xaf3]
Successors: []
---
0xb45 PUSH1 0x0
0xb47 DUP1
0xb48 REVERT
---
0xb45: V1002 = 0x0
0xb48: REVERT 0x0 0x0
---
Entry stack: [V13, S18, S17, S16, S15, S14, S13, S12, {0x485, 0x684, 0xee9}, S10, S9, V971, 0xa9059cbb, V992, 0x0, V995, V996, V995, 0x0, V971]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S18, S17, S16, S15, S14, S13, S12, {0x485, 0x684, 0xee9}, S10, S9, V971, 0xa9059cbb, V992, 0x0, V995, V996, V995, 0x0, V971]

================================

Block 0xb49
[0xb49:0xb55]
---
Predecessors: [0xaf3, 0xb61]
Successors: [0xb56, 0xb5a]
---
0xb49 JUMPDEST
0xb4a PUSH2 0x2c6
0xb4d GAS
0xb4e SUB
0xb4f CALL
0xb50 ISZERO
0xb51 ISZERO
0xb52 PUSH2 0xb5a
0xb55 JUMPI
---
0xb49: JUMPDEST 
0xb4a: V1003 = 0x2c6
0xb4d: V1004 = GAS
0xb4e: V1005 = SUB V1004 0x2c6
0xb4f: V1006 = CALL V1005 S0 0x0 S2 S3 S4 0x0
0xb50: V1007 = ISZERO V1006
0xb51: V1008 = ISZERO V1007
0xb52: V1009 = 0xb5a
0xb55: JUMPI 0xb5a V1008
---
Entry stack: [V13, S18, S17, S16, S15, S14, S13, S12, {0x485, 0x4f6, 0x684, 0xa99, 0xee9}, S10, S9, S8, {0x23b872dd, 0xa9059cbb}, S6, 0x0, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V13, S18, S17, S16, S15, S14, S13, S12, {0x485, 0x4f6, 0x684, 0xa99, 0xee9}, S10, S9, S8, {0x23b872dd, 0xa9059cbb}, S6]

================================

Block 0xb56
[0xb56:0xb59]
---
Predecessors: [0xb49]
Successors: []
---
0xb56 PUSH1 0x0
0xb58 DUP1
0xb59 REVERT
---
0xb56: V1010 = 0x0
0xb59: REVERT 0x0 0x0
---
Entry stack: [V13, S12, S11, S10, S9, S8, S7, S6, {0x485, 0x4f6, 0x684, 0xa99, 0xee9}, S4, S3, S2, {0x23b872dd, 0xa9059cbb}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S12, S11, S10, S9, S8, S7, S6, {0x485, 0x4f6, 0x684, 0xa99, 0xee9}, S4, S3, S2, {0x23b872dd, 0xa9059cbb}, S0]

================================

Block 0xb5a
[0xb5a:0xb60]
---
Predecessors: [0xb49]
Successors: [0x485, 0x4f6, 0x684, 0xa99, 0xee9]
---
0xb5a JUMPDEST
0xb5b POP
0xb5c POP
0xb5d POP
0xb5e POP
0xb5f POP
0xb60 JUMP
---
0xb5a: JUMPDEST 
0xb60: JUMP {0x485, 0x4f6, 0x684, 0xa99, 0xee9}
---
Entry stack: [V13, S12, S11, S10, S9, S8, S7, S6, {0x485, 0x4f6, 0x684, 0xa99, 0xee9}, S4, S3, S2, {0x23b872dd, 0xa9059cbb}, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V13, S12, S11, S10, S9, S8, S7, S6]

================================

Block 0xb61
[0xb61:0xbbf]
---
Predecessors: [0x4ec, 0xa8f]
Successors: [0xb49, 0xbc0]
---
0xb61 JUMPDEST
0xb62 PUSH1 0x1
0xb64 SLOAD
0xb65 PUSH1 0x1
0xb67 PUSH1 0xa0
0xb69 PUSH1 0x2
0xb6b EXP
0xb6c SUB
0xb6d AND
0xb6e PUSH4 0x23b872dd
0xb73 DUP4
0xb74 ADDRESS
0xb75 DUP5
0xb76 PUSH1 0x40
0xb78 MLOAD
0xb79 PUSH1 0xe0
0xb7b PUSH1 0x2
0xb7d EXP
0xb7e PUSH4 0xffffffff
0xb83 DUP7
0xb84 AND
0xb85 MUL
0xb86 DUP2
0xb87 MSTORE
0xb88 PUSH1 0x1
0xb8a PUSH1 0xa0
0xb8c PUSH1 0x2
0xb8e EXP
0xb8f SUB
0xb90 SWAP4
0xb91 DUP5
0xb92 AND
0xb93 PUSH1 0x4
0xb95 DUP3
0xb96 ADD
0xb97 MSTORE
0xb98 SWAP2
0xb99 SWAP1
0xb9a SWAP3
0xb9b AND
0xb9c PUSH1 0x24
0xb9e DUP3
0xb9f ADD
0xba0 MSTORE
0xba1 PUSH1 0x44
0xba3 DUP2
0xba4 ADD
0xba5 SWAP2
0xba6 SWAP1
0xba7 SWAP2
0xba8 MSTORE
0xba9 PUSH1 0x64
0xbab ADD
0xbac PUSH1 0x0
0xbae PUSH1 0x40
0xbb0 MLOAD
0xbb1 DUP1
0xbb2 DUP4
0xbb3 SUB
0xbb4 DUP2
0xbb5 PUSH1 0x0
0xbb7 DUP8
0xbb8 DUP1
0xbb9 EXTCODESIZE
0xbba ISZERO
0xbbb ISZERO
0xbbc PUSH2 0xb49
0xbbf JUMPI
---
0xb61: JUMPDEST 
0xb62: V1011 = 0x1
0xb64: V1012 = S[0x1]
0xb65: V1013 = 0x1
0xb67: V1014 = 0xa0
0xb69: V1015 = 0x2
0xb6b: V1016 = EXP 0x2 0xa0
0xb6c: V1017 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb6d: V1018 = AND 0xffffffffffffffffffffffffffffffffffffffff V1012
0xb6e: V1019 = 0x23b872dd
0xb74: V1020 = ADDRESS
0xb76: V1021 = 0x40
0xb78: V1022 = M[0x40]
0xb79: V1023 = 0xe0
0xb7b: V1024 = 0x2
0xb7d: V1025 = EXP 0x2 0xe0
0xb7e: V1026 = 0xffffffff
0xb84: V1027 = AND 0x23b872dd 0xffffffff
0xb85: V1028 = MUL 0x23b872dd 0x100000000000000000000000000000000000000000000000000000000
0xb87: M[V1022] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0xb88: V1029 = 0x1
0xb8a: V1030 = 0xa0
0xb8c: V1031 = 0x2
0xb8e: V1032 = EXP 0x2 0xa0
0xb8f: V1033 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb92: V1034 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xb93: V1035 = 0x4
0xb96: V1036 = ADD V1022 0x4
0xb97: M[V1036] = V1034
0xb9b: V1037 = AND 0xffffffffffffffffffffffffffffffffffffffff V1020
0xb9c: V1038 = 0x24
0xb9f: V1039 = ADD V1022 0x24
0xba0: M[V1039] = V1037
0xba1: V1040 = 0x44
0xba4: V1041 = ADD V1022 0x44
0xba8: M[V1041] = S0
0xba9: V1042 = 0x64
0xbab: V1043 = ADD 0x64 V1022
0xbac: V1044 = 0x0
0xbae: V1045 = 0x40
0xbb0: V1046 = M[0x40]
0xbb3: V1047 = SUB V1043 V1046
0xbb5: V1048 = 0x0
0xbb9: V1049 = EXTCODESIZE V1018
0xbba: V1050 = ISZERO V1049
0xbbb: V1051 = ISZERO V1050
0xbbc: V1052 = 0xb49
0xbbf: JUMPI 0xb49 V1051
---
Entry stack: [V13, 0x126, S8, S7, S6, S5, S4, V1388, {0x4f6, 0xa99}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V1018, 0x23b872dd, V1043, 0x0, V1046, V1047, V1046, 0x0, V1018]
Exit stack: [V13, 0x126, S8, S7, S6, S5, S4, V1388, {0x4f6, 0xa99}, S1, S0, V1018, 0x23b872dd, V1043, 0x0, V1046, V1047, V1046, 0x0, V1018]

================================

Block 0xbc0
[0xbc0:0xbc3]
---
Predecessors: [0xb61]
Successors: []
---
0xbc0 PUSH1 0x0
0xbc2 DUP1
0xbc3 REVERT
---
0xbc0: V1053 = 0x0
0xbc3: REVERT 0x0 0x0
---
Entry stack: [V13, 0x126, S17, S16, S15, S14, S13, S12, {0x4f6, 0xa99}, S10, S9, V1018, 0x23b872dd, V1043, 0x0, V1046, V1047, V1046, 0x0, V1018]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x126, S17, S16, S15, S14, S13, S12, {0x4f6, 0xa99}, S10, S9, V1018, 0x23b872dd, V1043, 0x0, V1046, V1047, V1046, 0x0, V1018]

================================

Block 0xbc4
[0xbc4:0xbdb]
---
Predecessors: [0x4f6, 0xa99]
Successors: [0xbdc, 0xbe0]
---
0xbc4 JUMPDEST
0xbc5 PUSH1 0x3c
0xbc7 DUP2
0xbc8 PUSH1 0x60
0xbca ADD
0xbcb MLOAD
0xbcc PUSH8 0xffffffffffffffff
0xbd5 AND
0xbd6 LT
0xbd7 ISZERO
0xbd8 PUSH2 0xbe0
0xbdb JUMPI
---
0xbc4: JUMPDEST 
0xbc5: V1054 = 0x3c
0xbc8: V1055 = 0x60
0xbca: V1056 = ADD 0x60 S0
0xbcb: V1057 = M[V1056]
0xbcc: V1058 = 0xffffffffffffffff
0xbd5: V1059 = AND 0xffffffffffffffff V1057
0xbd6: V1060 = LT V1059 0x3c
0xbd7: V1061 = ISZERO V1060
0xbd8: V1062 = 0xbe0
0xbdb: JUMPI 0xbe0 V1061
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, S3, 0x550, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, S9, S8, S7, S6, S5, S4, S3, 0x550, S1, S0]

================================

Block 0xbdc
[0xbdc:0xbdf]
---
Predecessors: [0xbc4]
Successors: []
---
0xbdc PUSH1 0x0
0xbde DUP1
0xbdf REVERT
---
0xbdc: V1063 = 0x0
0xbdf: REVERT 0x0 0x0
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, S3, 0x550, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S9, S8, S7, S6, S5, S4, S3, 0x550, S1, S0]

================================

Block 0xbe0
[0xbe0:0xd83]
---
Predecessors: [0xbc4]
Successors: [0x550]
---
0xbe0 JUMPDEST
0xbe1 PUSH1 0x0
0xbe3 DUP3
0xbe4 DUP2
0xbe5 MSTORE
0xbe6 PUSH1 0x3
0xbe8 PUSH1 0x20
0xbea MSTORE
0xbeb PUSH1 0x40
0xbed SWAP1
0xbee SHA3
0xbef DUP2
0xbf0 SWAP1
0xbf1 DUP2
0xbf2 MLOAD
0xbf3 DUP2
0xbf4 SLOAD
0xbf5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc0a NOT
0xc0b AND
0xc0c PUSH1 0x1
0xc0e PUSH1 0xa0
0xc10 PUSH1 0x2
0xc12 EXP
0xc13 SUB
0xc14 SWAP2
0xc15 SWAP1
0xc16 SWAP2
0xc17 AND
0xc18 OR
0xc19 DUP2
0xc1a SSTORE
0xc1b PUSH1 0x20
0xc1d DUP3
0xc1e ADD
0xc1f MLOAD
0xc20 PUSH1 0x1
0xc22 DUP3
0xc23 ADD
0xc24 DUP1
0xc25 SLOAD
0xc26 PUSH16 0xffffffffffffffffffffffffffffffff
0xc37 NOT
0xc38 AND
0xc39 PUSH1 0x1
0xc3b PUSH1 0x80
0xc3d PUSH1 0x2
0xc3f EXP
0xc40 SUB
0xc41 SWAP3
0xc42 SWAP1
0xc43 SWAP3
0xc44 AND
0xc45 SWAP2
0xc46 SWAP1
0xc47 SWAP2
0xc48 OR
0xc49 SWAP1
0xc4a SSTORE
0xc4b PUSH1 0x40
0xc4d DUP3
0xc4e ADD
0xc4f MLOAD
0xc50 PUSH1 0x1
0xc52 DUP3
0xc53 ADD
0xc54 DUP1
0xc55 SLOAD
0xc56 PUSH1 0x1
0xc58 PUSH1 0x80
0xc5a PUSH1 0x2
0xc5c EXP
0xc5d SUB
0xc5e SWAP3
0xc5f DUP4
0xc60 AND
0xc61 PUSH1 0x80
0xc63 PUSH1 0x2
0xc65 EXP
0xc66 MUL
0xc67 SWAP3
0xc68 AND
0xc69 SWAP2
0xc6a SWAP1
0xc6b SWAP2
0xc6c OR
0xc6d SWAP1
0xc6e SSTORE
0xc6f PUSH1 0x60
0xc71 DUP3
0xc72 ADD
0xc73 MLOAD
0xc74 PUSH1 0x2
0xc76 DUP3
0xc77 ADD
0xc78 DUP1
0xc79 SLOAD
0xc7a PUSH8 0xffffffffffffffff
0xc83 NOT
0xc84 AND
0xc85 PUSH8 0xffffffffffffffff
0xc8e SWAP3
0xc8f SWAP1
0xc90 SWAP3
0xc91 AND
0xc92 SWAP2
0xc93 SWAP1
0xc94 SWAP2
0xc95 OR
0xc96 SWAP1
0xc97 SSTORE
0xc98 PUSH1 0x80
0xc9a DUP3
0xc9b ADD
0xc9c MLOAD
0xc9d DUP2
0xc9e PUSH1 0x2
0xca0 ADD
0xca1 PUSH1 0x8
0xca3 PUSH2 0x100
0xca6 EXP
0xca7 DUP2
0xca8 SLOAD
0xca9 DUP2
0xcaa PUSH8 0xffffffffffffffff
0xcb3 MUL
0xcb4 NOT
0xcb5 AND
0xcb6 SWAP1
0xcb7 DUP4
0xcb8 PUSH8 0xffffffffffffffff
0xcc1 AND
0xcc2 MUL
0xcc3 OR
0xcc4 SWAP1
0xcc5 SSTORE
0xcc6 POP
0xcc7 PUSH1 0xa0
0xcc9 DUP3
0xcca ADD
0xccb MLOAD
0xccc PUSH1 0x2
0xcce SWAP1
0xccf SWAP2
0xcd0 ADD
0xcd1 DUP1
0xcd2 SLOAD
0xcd3 PUSH8 0xffffffffffffffff
0xcdc SWAP3
0xcdd SWAP1
0xcde SWAP3
0xcdf AND
0xce0 PUSH1 0x80
0xce2 PUSH1 0x2
0xce4 EXP
0xce5 MUL
0xce6 PUSH24 0xffffffffffffffff00000000000000000000000000000000
0xcff NOT
0xd00 SWAP1
0xd01 SWAP3
0xd02 AND
0xd03 SWAP2
0xd04 SWAP1
0xd05 SWAP2
0xd06 OR
0xd07 SWAP1
0xd08 SSTORE
0xd09 POP
0xd0a PUSH32 0xa9c8dfcda5664a5a124c713e386da27de87432d5b668e79458501eb296389ba7
0xd2b DUP3
0xd2c PUSH1 0x20
0xd2e DUP4
0xd2f ADD
0xd30 MLOAD
0xd31 PUSH1 0x1
0xd33 PUSH1 0x80
0xd35 PUSH1 0x2
0xd37 EXP
0xd38 SUB
0xd39 AND
0xd3a DUP4
0xd3b PUSH1 0x40
0xd3d ADD
0xd3e MLOAD
0xd3f PUSH1 0x1
0xd41 PUSH1 0x80
0xd43 PUSH1 0x2
0xd45 EXP
0xd46 SUB
0xd47 AND
0xd48 DUP5
0xd49 PUSH1 0x60
0xd4b ADD
0xd4c MLOAD
0xd4d PUSH8 0xffffffffffffffff
0xd56 AND
0xd57 PUSH1 0x40
0xd59 MLOAD
0xd5a DUP1
0xd5b DUP6
0xd5c DUP2
0xd5d MSTORE
0xd5e PUSH1 0x20
0xd60 ADD
0xd61 DUP5
0xd62 DUP2
0xd63 MSTORE
0xd64 PUSH1 0x20
0xd66 ADD
0xd67 DUP4
0xd68 DUP2
0xd69 MSTORE
0xd6a PUSH1 0x20
0xd6c ADD
0xd6d DUP3
0xd6e DUP2
0xd6f MSTORE
0xd70 PUSH1 0x20
0xd72 ADD
0xd73 SWAP5
0xd74 POP
0xd75 POP
0xd76 POP
0xd77 POP
0xd78 POP
0xd79 PUSH1 0x40
0xd7b MLOAD
0xd7c DUP1
0xd7d SWAP2
0xd7e SUB
0xd7f SWAP1
0xd80 LOG1
0xd81 POP
0xd82 POP
0xd83 JUMP
---
0xbe0: JUMPDEST 
0xbe1: V1064 = 0x0
0xbe5: M[0x0] = S1
0xbe6: V1065 = 0x3
0xbe8: V1066 = 0x20
0xbea: M[0x20] = 0x3
0xbeb: V1067 = 0x40
0xbee: V1068 = SHA3 0x0 0x40
0xbf2: V1069 = M[S0]
0xbf4: V1070 = S[V1068]
0xbf5: V1071 = 0xffffffffffffffffffffffffffffffffffffffff
0xc0a: V1072 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xc0b: V1073 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1070
0xc0c: V1074 = 0x1
0xc0e: V1075 = 0xa0
0xc10: V1076 = 0x2
0xc12: V1077 = EXP 0x2 0xa0
0xc13: V1078 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc17: V1079 = AND 0xffffffffffffffffffffffffffffffffffffffff V1069
0xc18: V1080 = OR V1079 V1073
0xc1a: S[V1068] = V1080
0xc1b: V1081 = 0x20
0xc1e: V1082 = ADD S0 0x20
0xc1f: V1083 = M[V1082]
0xc20: V1084 = 0x1
0xc23: V1085 = ADD V1068 0x1
0xc25: V1086 = S[V1085]
0xc26: V1087 = 0xffffffffffffffffffffffffffffffff
0xc37: V1088 = NOT 0xffffffffffffffffffffffffffffffff
0xc38: V1089 = AND 0xffffffffffffffffffffffffffffffff00000000000000000000000000000000 V1086
0xc39: V1090 = 0x1
0xc3b: V1091 = 0x80
0xc3d: V1092 = 0x2
0xc3f: V1093 = EXP 0x2 0x80
0xc40: V1094 = SUB 0x100000000000000000000000000000000 0x1
0xc44: V1095 = AND 0xffffffffffffffffffffffffffffffff V1083
0xc48: V1096 = OR V1095 V1089
0xc4a: S[V1085] = V1096
0xc4b: V1097 = 0x40
0xc4e: V1098 = ADD S0 0x40
0xc4f: V1099 = M[V1098]
0xc50: V1100 = 0x1
0xc53: V1101 = ADD V1068 0x1
0xc55: V1102 = S[V1101]
0xc56: V1103 = 0x1
0xc58: V1104 = 0x80
0xc5a: V1105 = 0x2
0xc5c: V1106 = EXP 0x2 0x80
0xc5d: V1107 = SUB 0x100000000000000000000000000000000 0x1
0xc60: V1108 = AND 0xffffffffffffffffffffffffffffffff V1099
0xc61: V1109 = 0x80
0xc63: V1110 = 0x2
0xc65: V1111 = EXP 0x2 0x80
0xc66: V1112 = MUL 0x100000000000000000000000000000000 V1108
0xc68: V1113 = AND 0xffffffffffffffffffffffffffffffff V1102
0xc6c: V1114 = OR V1113 V1112
0xc6e: S[V1101] = V1114
0xc6f: V1115 = 0x60
0xc72: V1116 = ADD S0 0x60
0xc73: V1117 = M[V1116]
0xc74: V1118 = 0x2
0xc77: V1119 = ADD V1068 0x2
0xc79: V1120 = S[V1119]
0xc7a: V1121 = 0xffffffffffffffff
0xc83: V1122 = NOT 0xffffffffffffffff
0xc84: V1123 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000 V1120
0xc85: V1124 = 0xffffffffffffffff
0xc91: V1125 = AND 0xffffffffffffffff V1117
0xc95: V1126 = OR V1125 V1123
0xc97: S[V1119] = V1126
0xc98: V1127 = 0x80
0xc9b: V1128 = ADD S0 0x80
0xc9c: V1129 = M[V1128]
0xc9e: V1130 = 0x2
0xca0: V1131 = ADD 0x2 V1068
0xca1: V1132 = 0x8
0xca3: V1133 = 0x100
0xca6: V1134 = EXP 0x100 0x8
0xca8: V1135 = S[V1131]
0xcaa: V1136 = 0xffffffffffffffff
0xcb3: V1137 = MUL 0xffffffffffffffff 0x10000000000000000
0xcb4: V1138 = NOT 0xffffffffffffffff0000000000000000
0xcb5: V1139 = AND 0xffffffffffffffffffffffffffffffff0000000000000000ffffffffffffffff V1135
0xcb8: V1140 = 0xffffffffffffffff
0xcc1: V1141 = AND 0xffffffffffffffff V1129
0xcc2: V1142 = MUL V1141 0x10000000000000000
0xcc3: V1143 = OR V1142 V1139
0xcc5: S[V1131] = V1143
0xcc7: V1144 = 0xa0
0xcca: V1145 = ADD S0 0xa0
0xccb: V1146 = M[V1145]
0xccc: V1147 = 0x2
0xcd0: V1148 = ADD V1068 0x2
0xcd2: V1149 = S[V1148]
0xcd3: V1150 = 0xffffffffffffffff
0xcdf: V1151 = AND 0xffffffffffffffff V1146
0xce0: V1152 = 0x80
0xce2: V1153 = 0x2
0xce4: V1154 = EXP 0x2 0x80
0xce5: V1155 = MUL 0x100000000000000000000000000000000 V1151
0xce6: V1156 = 0xffffffffffffffff00000000000000000000000000000000
0xcff: V1157 = NOT 0xffffffffffffffff00000000000000000000000000000000
0xd02: V1158 = AND V1149 0xffffffffffffffff0000000000000000ffffffffffffffffffffffffffffffff
0xd06: V1159 = OR V1158 V1155
0xd08: S[V1148] = V1159
0xd0a: V1160 = 0xa9c8dfcda5664a5a124c713e386da27de87432d5b668e79458501eb296389ba7
0xd2c: V1161 = 0x20
0xd2f: V1162 = ADD S0 0x20
0xd30: V1163 = M[V1162]
0xd31: V1164 = 0x1
0xd33: V1165 = 0x80
0xd35: V1166 = 0x2
0xd37: V1167 = EXP 0x2 0x80
0xd38: V1168 = SUB 0x100000000000000000000000000000000 0x1
0xd39: V1169 = AND 0xffffffffffffffffffffffffffffffff V1163
0xd3b: V1170 = 0x40
0xd3d: V1171 = ADD 0x40 S0
0xd3e: V1172 = M[V1171]
0xd3f: V1173 = 0x1
0xd41: V1174 = 0x80
0xd43: V1175 = 0x2
0xd45: V1176 = EXP 0x2 0x80
0xd46: V1177 = SUB 0x100000000000000000000000000000000 0x1
0xd47: V1178 = AND 0xffffffffffffffffffffffffffffffff V1172
0xd49: V1179 = 0x60
0xd4b: V1180 = ADD 0x60 S0
0xd4c: V1181 = M[V1180]
0xd4d: V1182 = 0xffffffffffffffff
0xd56: V1183 = AND 0xffffffffffffffff V1181
0xd57: V1184 = 0x40
0xd59: V1185 = M[0x40]
0xd5d: M[V1185] = S1
0xd5e: V1186 = 0x20
0xd60: V1187 = ADD 0x20 V1185
0xd63: M[V1187] = V1169
0xd64: V1188 = 0x20
0xd66: V1189 = ADD 0x20 V1187
0xd69: M[V1189] = V1178
0xd6a: V1190 = 0x20
0xd6c: V1191 = ADD 0x20 V1189
0xd6f: M[V1191] = V1183
0xd70: V1192 = 0x20
0xd72: V1193 = ADD 0x20 V1191
0xd79: V1194 = 0x40
0xd7b: V1195 = M[0x40]
0xd7e: V1196 = SUB V1193 V1195
0xd80: LOG V1195 V1196 0xa9c8dfcda5664a5a124c713e386da27de87432d5b668e79458501eb296389ba7
0xd83: JUMP 0x550
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, S3, 0x550, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V13, S9, S8, S7, S6, S5, S4, S3]

================================

Block 0xd84
[0xd84:0xd9f]
---
Predecessors: [0x64a]
Successors: [0xeb5]
---
0xd84 JUMPDEST
0xd85 PUSH1 0x0
0xd87 DUP3
0xd88 DUP2
0xd89 MSTORE
0xd8a PUSH1 0x3
0xd8c PUSH1 0x20
0xd8e MSTORE
0xd8f PUSH1 0x40
0xd91 DUP2
0xd92 SHA3
0xd93 DUP2
0xd94 DUP1
0xd95 DUP1
0xd96 DUP1
0xd97 DUP1
0xd98 PUSH2 0xda0
0xd9b DUP7
0xd9c PUSH2 0xeb5
0xd9f JUMP
---
0xd84: JUMPDEST 
0xd85: V1197 = 0x0
0xd89: M[0x0] = V135
0xd8a: V1198 = 0x3
0xd8c: V1199 = 0x20
0xd8e: M[0x20] = 0x3
0xd8f: V1200 = 0x40
0xd92: V1201 = SHA3 0x0 0x40
0xd98: V1202 = 0xda0
0xd9c: V1203 = 0xeb5
0xd9f: JUMP 0xeb5
---
Entry stack: [V13, 0x126, V135, V543, 0x0, 0x678, V135, V545]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1201, 0x0, 0x0, 0x0, 0x0, 0x0, 0xda0, V1201]
Exit stack: [V13, 0x126, V135, V543, 0x0, 0x678, V135, V545, 0x0, V1201, 0x0, 0x0, 0x0, 0x0, 0x0, 0xda0, V1201]

================================

Block 0xda0
[0xda0:0xda6]
---
Predecessors: [0xeb5]
Successors: [0xda7, 0xdab]
---
0xda0 JUMPDEST
0xda1 ISZERO
0xda2 ISZERO
0xda3 PUSH2 0xdab
0xda6 JUMPI
---
0xda0: JUMPDEST 
0xda1: V1204 = ISZERO V1298
0xda2: V1205 = ISZERO V1204
0xda3: V1206 = 0xdab
0xda6: JUMPI 0xdab V1205
---
Entry stack: [V13, 0x126, V135, V543, 0x0, 0x678, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1298]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x126, V135, V543, 0x0, 0x678, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0xda7
[0xda7:0xdaa]
---
Predecessors: [0xda0]
Successors: []
---
0xda7 PUSH1 0x0
0xda9 DUP1
0xdaa REVERT
---
0xda7: V1207 = 0x0
0xdaa: REVERT 0x0 0x0
---
Entry stack: [V13, 0x126, V135, V543, 0x0, 0x678, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x126, V135, V543, 0x0, 0x678, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xdab
[0xdab:0xdb3]
---
Predecessors: [0xda0]
Successors: [0xf20]
---
0xdab JUMPDEST
0xdac PUSH2 0xdb4
0xdaf DUP7
0xdb0 PUSH2 0xf20
0xdb3 JUMP
---
0xdab: JUMPDEST 
0xdac: V1208 = 0xdb4
0xdb0: V1209 = 0xf20
0xdb3: JUMP 0xf20
---
Entry stack: [V13, 0x126, V135, V543, 0x0, 0x678, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, 0xdb4, S5]
Exit stack: [V13, 0x126, V135, V543, 0x0, 0x678, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0xdb4, S5]

================================

Block 0xdb4
[0xdb4:0xdbe]
---
Predecessors: [0x96f]
Successors: [0xdbf, 0xdc3]
---
0xdb4 JUMPDEST
0xdb5 SWAP5
0xdb6 POP
0xdb7 DUP5
0xdb8 DUP9
0xdb9 LT
0xdba ISZERO
0xdbb PUSH2 0xdc3
0xdbe JUMPI
---
0xdb4: JUMPDEST 
0xdb9: V1210 = LT S8 S0
0xdba: V1211 = ISZERO V1210
0xdbb: V1212 = 0xdc3
0xdbe: JUMPI 0xdc3 V1211
---
Entry stack: [V13, 0x126, V135, V543, S11, {0x126, 0x678}, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S0, S4, S3, S2, S1]
Exit stack: [V13, 0x126, V135, V543, S11, {0x126, 0x678}, S9, S8, S7, S6, S0, S4, S3, S2, S1]

================================

Block 0xdbf
[0xdbf:0xdc2]
---
Predecessors: [0xdb4]
Successors: []
---
0xdbf PUSH1 0x0
0xdc1 DUP1
0xdc2 REVERT
---
0xdbf: V1213 = 0x0
0xdc2: REVERT 0x0 0x0
---
Entry stack: [V13, 0x126, V135, V543, S10, {0x126, 0x678}, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x126, V135, V543, S10, {0x126, 0x678}, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xdc3
[0xdc3:0xdd8]
---
Predecessors: [0xdb4]
Successors: [0xf9a]
---
0xdc3 JUMPDEST
0xdc4 DUP6
0xdc5 SLOAD
0xdc6 PUSH1 0x1
0xdc8 PUSH1 0xa0
0xdca PUSH1 0x2
0xdcc EXP
0xdcd SUB
0xdce AND
0xdcf SWAP4
0xdd0 POP
0xdd1 PUSH2 0xdd9
0xdd4 DUP10
0xdd5 PUSH2 0xf9a
0xdd8 JUMP
---
0xdc3: JUMPDEST 
0xdc5: V1214 = S[S5]
0xdc6: V1215 = 0x1
0xdc8: V1216 = 0xa0
0xdca: V1217 = 0x2
0xdcc: V1218 = EXP 0x2 0xa0
0xdcd: V1219 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdce: V1220 = AND 0xffffffffffffffffffffffffffffffffffffffff V1214
0xdd1: V1221 = 0xdd9
0xdd5: V1222 = 0xf9a
0xdd8: JUMP 0xf9a
---
Entry stack: [V13, 0x126, V135, V543, S10, {0x126, 0x678}, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, V1220, S2, S1, S0, 0xdd9, S8]
Exit stack: [V13, 0x126, V135, V543, S10, {0x126, 0x678}, S8, S7, S6, S5, S4, V1220, S2, S1, S0, 0xdd9, S8]

================================

Block 0xdd9
[0xdd9:0xde2]
---
Predecessors: [0xf9a]
Successors: [0xde3, 0xe23]
---
0xdd9 JUMPDEST
0xdda PUSH1 0x0
0xddc DUP6
0xddd GT
0xdde ISZERO
0xddf PUSH2 0xe23
0xde2 JUMPI
---
0xdd9: JUMPDEST 
0xdda: V1223 = 0x0
0xddd: V1224 = GT S4 0x0
0xdde: V1225 = ISZERO V1224
0xddf: V1226 = 0xe23
0xde2: JUMPI 0xe23 V1225
---
Entry stack: [V13, 0x126, V135, V543, S10, {0x126, 0x678}, V135, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V13, 0x126, V135, V543, S10, {0x126, 0x678}, V135, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xde3
[0xde3:0xdea]
---
Predecessors: [0xdd9]
Successors: [0xfef]
---
0xde3 PUSH2 0xdeb
0xde6 DUP6
0xde7 PUSH2 0xfef
0xdea JUMP
---
0xde3: V1227 = 0xdeb
0xde7: V1228 = 0xfef
0xdea: JUMP 0xfef
---
Entry stack: [V13, 0x126, V135, V543, S10, {0x126, 0x678}, V135, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0xdeb, S4]
Exit stack: [V13, 0x126, V135, V543, S10, {0x126, 0x678}, V135, S7, S6, S5, S4, S3, S2, S1, S0, 0xdeb, S4]

================================

Block 0xdeb
[0xdeb:0xe1e]
---
Predecessors: [0xfef]
Successors: [0xe1f, 0xe23]
---
0xdeb JUMPDEST
0xdec SWAP3
0xded POP
0xdee DUP3
0xdef DUP6
0xdf0 SUB
0xdf1 SWAP2
0xdf2 POP
0xdf3 PUSH1 0x1
0xdf5 PUSH1 0xa0
0xdf7 PUSH1 0x2
0xdf9 EXP
0xdfa SUB
0xdfb DUP5
0xdfc AND
0xdfd DUP3
0xdfe ISZERO
0xdff PUSH2 0x8fc
0xe02 MUL
0xe03 DUP4
0xe04 PUSH1 0x40
0xe06 MLOAD
0xe07 PUSH1 0x0
0xe09 PUSH1 0x40
0xe0b MLOAD
0xe0c DUP1
0xe0d DUP4
0xe0e SUB
0xe0f DUP2
0xe10 DUP6
0xe11 DUP9
0xe12 DUP9
0xe13 CALL
0xe14 SWAP4
0xe15 POP
0xe16 POP
0xe17 POP
0xe18 POP
0xe19 ISZERO
0xe1a ISZERO
0xe1b PUSH2 0xe23
0xe1e JUMPI
---
0xdeb: JUMPDEST 
0xdf0: V1229 = SUB S5 V1374
0xdf3: V1230 = 0x1
0xdf5: V1231 = 0xa0
0xdf7: V1232 = 0x2
0xdf9: V1233 = EXP 0x2 0xa0
0xdfa: V1234 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdfc: V1235 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0xdfe: V1236 = ISZERO V1229
0xdff: V1237 = 0x8fc
0xe02: V1238 = MUL 0x8fc V1236
0xe04: V1239 = 0x40
0xe06: V1240 = M[0x40]
0xe07: V1241 = 0x0
0xe09: V1242 = 0x40
0xe0b: V1243 = M[0x40]
0xe0e: V1244 = SUB V1240 V1243
0xe13: V1245 = CALL V1238 V1235 V1229 V1243 V1244 V1243 0x0
0xe19: V1246 = ISZERO V1245
0xe1a: V1247 = ISZERO V1246
0xe1b: V1248 = 0xe23
0xe1e: JUMPI 0xe23 V1247
---
Entry stack: [V13, 0x126, V135, V543, S11, {0x126, 0x678}, V135, S8, S7, S6, S5, S4, S3, S2, S1, V1374]
Stack pops: 6
Stack additions: [S5, S4, S0, V1229, S1]
Exit stack: [V13, 0x126, V135, V543, S11, {0x126, 0x678}, V135, S8, S7, S6, S5, S4, V1374, V1229, S1]

================================

Block 0xe1f
[0xe1f:0xe22]
---
Predecessors: [0xdeb]
Successors: []
---
0xe1f PUSH1 0x0
0xe21 DUP1
0xe22 REVERT
---
0xe1f: V1249 = 0x0
0xe22: REVERT 0x0 0x0
---
Entry stack: [V13, 0x126, V135, V543, S10, {0x126, 0x678}, V135, S7, S6, S5, S4, S3, V1374, V1229, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x126, V135, V543, S10, {0x126, 0x678}, V135, S7, S6, S5, S4, S3, V1374, V1229, S0]

================================

Block 0xe23
[0xe23:0xe53]
---
Predecessors: [0xdd9, 0xdeb]
Successors: [0xe54, 0xe58]
---
0xe23 JUMPDEST
0xe24 POP
0xe25 DUP4
0xe26 DUP8
0xe27 SUB
0xe28 PUSH1 0x1
0xe2a PUSH1 0xa0
0xe2c PUSH1 0x2
0xe2e EXP
0xe2f SUB
0xe30 CALLER
0xe31 AND
0xe32 DUP2
0xe33 ISZERO
0xe34 PUSH2 0x8fc
0xe37 MUL
0xe38 DUP3
0xe39 PUSH1 0x40
0xe3b MLOAD
0xe3c PUSH1 0x0
0xe3e PUSH1 0x40
0xe40 MLOAD
0xe41 DUP1
0xe42 DUP4
0xe43 SUB
0xe44 DUP2
0xe45 DUP6
0xe46 DUP9
0xe47 DUP9
0xe48 CALL
0xe49 SWAP4
0xe4a POP
0xe4b POP
0xe4c POP
0xe4d POP
0xe4e ISZERO
0xe4f ISZERO
0xe50 PUSH2 0xe58
0xe53 JUMPI
---
0xe23: JUMPDEST 
0xe27: V1250 = SUB S7 S4
0xe28: V1251 = 0x1
0xe2a: V1252 = 0xa0
0xe2c: V1253 = 0x2
0xe2e: V1254 = EXP 0x2 0xa0
0xe2f: V1255 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe30: V1256 = CALLER
0xe31: V1257 = AND V1256 0xffffffffffffffffffffffffffffffffffffffff
0xe33: V1258 = ISZERO V1250
0xe34: V1259 = 0x8fc
0xe37: V1260 = MUL 0x8fc V1258
0xe39: V1261 = 0x40
0xe3b: V1262 = M[0x40]
0xe3c: V1263 = 0x0
0xe3e: V1264 = 0x40
0xe40: V1265 = M[0x40]
0xe43: V1266 = SUB V1262 V1265
0xe48: V1267 = CALL V1260 V1257 V1250 V1265 V1266 V1265 0x0
0xe4e: V1268 = ISZERO V1267
0xe4f: V1269 = ISZERO V1268
0xe50: V1270 = 0xe58
0xe53: JUMPI 0xe58 V1269
---
Entry stack: [V13, 0x126, V135, V543, S10, {0x126, 0x678}, V135, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, V1250]
Exit stack: [V13, 0x126, V135, V543, S10, {0x126, 0x678}, V135, S7, S6, S5, S4, S3, S2, S1, V1250]

================================

Block 0xe54
[0xe54:0xe57]
---
Predecessors: [0xe23]
Successors: []
---
0xe54 PUSH1 0x0
0xe56 DUP1
0xe57 REVERT
---
0xe54: V1271 = 0x0
0xe57: REVERT 0x0 0x0
---
Entry stack: [V13, 0x126, V135, V543, S10, {0x126, 0x678}, V135, S7, S6, S5, S4, S3, S2, S1, V1250]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x126, V135, V543, S10, {0x126, 0x678}, V135, S7, S6, S5, S4, S3, S2, S1, V1250]

================================

Block 0xe58
[0xe58:0xeb4]
---
Predecessors: [0xe23]
Successors: [0x126, 0x678]
---
0xe58 JUMPDEST
0xe59 PUSH32 0x4fcc30d90a842164dd58501ab874a101a3749c3d4747139cefe7c876f4ccebd2
0xe7a DUP10
0xe7b DUP7
0xe7c CALLER
0xe7d PUSH1 0x40
0xe7f MLOAD
0xe80 SWAP3
0xe81 DUP4
0xe82 MSTORE
0xe83 PUSH1 0x20
0xe85 DUP4
0xe86 ADD
0xe87 SWAP2
0xe88 SWAP1
0xe89 SWAP2
0xe8a MSTORE
0xe8b PUSH1 0x1
0xe8d PUSH1 0xa0
0xe8f PUSH1 0x2
0xe91 EXP
0xe92 SUB
0xe93 AND
0xe94 PUSH1 0x40
0xe96 DUP1
0xe97 DUP4
0xe98 ADD
0xe99 SWAP2
0xe9a SWAP1
0xe9b SWAP2
0xe9c MSTORE
0xe9d PUSH1 0x60
0xe9f SWAP1
0xea0 SWAP2
0xea1 ADD
0xea2 SWAP1
0xea3 MLOAD
0xea4 DUP1
0xea5 SWAP2
0xea6 SUB
0xea7 SWAP1
0xea8 LOG1
0xea9 POP
0xeaa SWAP3
0xeab SWAP8
0xeac SWAP7
0xead POP
0xeae POP
0xeaf POP
0xeb0 POP
0xeb1 POP
0xeb2 POP
0xeb3 POP
0xeb4 JUMP
---
0xe58: JUMPDEST 
0xe59: V1272 = 0x4fcc30d90a842164dd58501ab874a101a3749c3d4747139cefe7c876f4ccebd2
0xe7c: V1273 = CALLER
0xe7d: V1274 = 0x40
0xe7f: V1275 = M[0x40]
0xe82: M[V1275] = V135
0xe83: V1276 = 0x20
0xe86: V1277 = ADD V1275 0x20
0xe8a: M[V1277] = S4
0xe8b: V1278 = 0x1
0xe8d: V1279 = 0xa0
0xe8f: V1280 = 0x2
0xe91: V1281 = EXP 0x2 0xa0
0xe92: V1282 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe93: V1283 = AND 0xffffffffffffffffffffffffffffffffffffffff V1273
0xe94: V1284 = 0x40
0xe98: V1285 = ADD V1275 0x40
0xe9c: M[V1285] = V1283
0xe9d: V1286 = 0x60
0xea1: V1287 = ADD V1275 0x60
0xea3: V1288 = M[0x40]
0xea6: V1289 = SUB V1287 V1288
0xea8: LOG V1288 V1289 0x4fcc30d90a842164dd58501ab874a101a3749c3d4747139cefe7c876f4ccebd2
0xeb4: JUMP {0x126, 0x678}
---
Entry stack: [V13, 0x126, V135, V543, S10, {0x126, 0x678}, V135, S7, S6, S5, S4, S3, S2, S1, V1250]
Stack pops: 10
Stack additions: [S4]
Exit stack: [V13, 0x126, V135, V543, S10, S4]

================================

Block 0xeb5
[0xeb5:0xed5]
---
Predecessors: [0x761, 0x8ad, 0x8fb, 0x944, 0xd84]
Successors: [0x780, 0x8c5, 0x913, 0x95b, 0xda0]
---
0xeb5 JUMPDEST
0xeb6 PUSH1 0x2
0xeb8 ADD
0xeb9 SLOAD
0xeba PUSH1 0x0
0xebc PUSH9 0x10000000000000000
0xec6 SWAP1
0xec7 SWAP2
0xec8 DIV
0xec9 PUSH8 0xffffffffffffffff
0xed2 AND
0xed3 GT
0xed4 SWAP1
0xed5 JUMP
---
0xeb5: JUMPDEST 
0xeb6: V1290 = 0x2
0xeb8: V1291 = ADD 0x2 S0
0xeb9: V1292 = S[V1291]
0xeba: V1293 = 0x0
0xebc: V1294 = 0x10000000000000000
0xec8: V1295 = DIV V1292 0x10000000000000000
0xec9: V1296 = 0xffffffffffffffff
0xed2: V1297 = AND 0xffffffffffffffff V1295
0xed3: V1298 = GT V1297 0x0
0xed5: JUMP {0x780, 0x8c5, 0x913, 0x95b, 0xda0}
---
Entry stack: [V13, 0x126, V135, V543, 0x0, 0x678, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x780, 0x8c5, 0x913, 0x95b, 0xda0}, S0]
Stack pops: 2
Stack additions: [V1298]
Exit stack: [V13, 0x126, V135, V543, 0x0, 0x678, S10, S9, S8, S7, S6, S5, S4, S3, S2, V1298]

================================

Block 0xed6
[0xed6:0xede]
---
Predecessors: [0x8d0, 0x93a]
Successors: [0xf9a]
---
0xed6 JUMPDEST
0xed7 PUSH2 0xedf
0xeda DUP3
0xedb PUSH2 0xf9a
0xede JUMP
---
0xed6: JUMPDEST 
0xed7: V1299 = 0xedf
0xedb: V1300 = 0xf9a
0xede: JUMP 0xf9a
---
Entry stack: [V13, 0x126, V135, V543, 0x0, 0x678, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x485, 0x6b7}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0xedf, S1]
Exit stack: [V13, 0x126, V135, V543, 0x0, 0x678, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x485, 0x6b7}, S1, S0, 0xedf, S1]

================================

Block 0xedf
[0xedf:0xee8]
---
Predecessors: [0xf9a]
Successors: [0xaf3]
---
0xedf JUMPDEST
0xee0 PUSH2 0xee9
0xee3 DUP2
0xee4 DUP4
0xee5 PUSH2 0xaf3
0xee8 JUMP
---
0xedf: JUMPDEST 
0xee0: V1301 = 0xee9
0xee5: V1302 = 0xaf3
0xee8: JUMP 0xaf3
---
Entry stack: [V13, 0x126, V135, S14, {0x0, 0x126}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0xee9, S0, S1]
Exit stack: [V13, 0x126, V135, S14, {0x0, 0x126}, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0xee9, S0, S1]

================================

Block 0xee9
[0xee9:0xf1f]
---
Predecessors: [0xb5a]
Successors: [0x126, 0x485, 0x6b7]
---
0xee9 JUMPDEST
0xeea PUSH32 0x2809c7e17bf978fbc7194c0a694b638c4215e9140cacc6c38ca36010b45697df
0xf0b DUP3
0xf0c PUSH1 0x40
0xf0e MLOAD
0xf0f SWAP1
0xf10 DUP2
0xf11 MSTORE
0xf12 PUSH1 0x20
0xf14 ADD
0xf15 PUSH1 0x40
0xf17 MLOAD
0xf18 DUP1
0xf19 SWAP2
0xf1a SUB
0xf1b SWAP1
0xf1c LOG1
0xf1d POP
0xf1e POP
0xf1f JUMP
---
0xee9: JUMPDEST 
0xeea: V1303 = 0x2809c7e17bf978fbc7194c0a694b638c4215e9140cacc6c38ca36010b45697df
0xf0c: V1304 = 0x40
0xf0e: V1305 = M[0x40]
0xf11: M[V1305] = S1
0xf12: V1306 = 0x20
0xf14: V1307 = ADD 0x20 V1305
0xf15: V1308 = 0x40
0xf17: V1309 = M[0x40]
0xf1a: V1310 = SUB V1307 V1309
0xf1c: LOG V1309 V1310 0x2809c7e17bf978fbc7194c0a694b638c4215e9140cacc6c38ca36010b45697df
0xf1f: JUMP S2
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V13, S6, S5, S4, S3]

================================

Block 0xf20
[0xf20:0xf47]
---
Predecessors: [0x966, 0xdab]
Successors: [0xf48, 0xf66]
---
0xf20 JUMPDEST
0xf21 PUSH1 0x2
0xf23 DUP2
0xf24 ADD
0xf25 SLOAD
0xf26 PUSH1 0x0
0xf28 SWAP1
0xf29 DUP2
0xf2a SWAP1
0xf2b PUSH9 0x10000000000000000
0xf35 SWAP1
0xf36 DIV
0xf37 PUSH8 0xffffffffffffffff
0xf40 AND
0xf41 TIMESTAMP
0xf42 GT
0xf43 ISZERO
0xf44 PUSH2 0xf66
0xf47 JUMPI
---
0xf20: JUMPDEST 
0xf21: V1311 = 0x2
0xf24: V1312 = ADD S0 0x2
0xf25: V1313 = S[V1312]
0xf26: V1314 = 0x0
0xf2b: V1315 = 0x10000000000000000
0xf36: V1316 = DIV V1313 0x10000000000000000
0xf37: V1317 = 0xffffffffffffffff
0xf40: V1318 = AND 0xffffffffffffffff V1316
0xf41: V1319 = TIMESTAMP
0xf42: V1320 = GT V1319 V1318
0xf43: V1321 = ISZERO V1320
0xf44: V1322 = 0xf66
0xf47: JUMPI 0xf66 V1321
---
Entry stack: [V13, 0x126, V135, V543, 0x0, 0x678, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x96f, 0xdb4}, S0]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0]
Exit stack: [V13, 0x126, V135, V543, 0x0, 0x678, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x96f, 0xdb4}, S0, 0x0, 0x0]

================================

Block 0xf48
[0xf48:0xf65]
---
Predecessors: [0xf20]
Successors: [0xf66]
---
0xf48 POP
0xf49 PUSH1 0x2
0xf4b DUP3
0xf4c ADD
0xf4d SLOAD
0xf4e PUSH9 0x10000000000000000
0xf58 SWAP1
0xf59 DIV
0xf5a PUSH8 0xffffffffffffffff
0xf63 AND
0xf64 TIMESTAMP
0xf65 SUB
---
0xf49: V1323 = 0x2
0xf4c: V1324 = ADD S2 0x2
0xf4d: V1325 = S[V1324]
0xf4e: V1326 = 0x10000000000000000
0xf59: V1327 = DIV V1325 0x10000000000000000
0xf5a: V1328 = 0xffffffffffffffff
0xf63: V1329 = AND 0xffffffffffffffff V1327
0xf64: V1330 = TIMESTAMP
0xf65: V1331 = SUB V1330 V1329
---
Entry stack: [V13, 0x126, V135, V543, 0x0, 0x678, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x96f, 0xdb4}, S2, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V1331]
Exit stack: [V13, 0x126, V135, V543, 0x0, 0x678, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x96f, 0xdb4}, S2, 0x0, V1331]

================================

Block 0xf66
[0xf66:0xf99]
---
Predecessors: [0xf20, 0xf48]
Successors: [0xffb]
---
0xf66 JUMPDEST
0xf67 PUSH1 0x1
0xf69 DUP4
0xf6a ADD
0xf6b SLOAD
0xf6c PUSH1 0x2
0xf6e DUP5
0xf6f ADD
0xf70 SLOAD
0xf71 PUSH2 0x96f
0xf74 SWAP2
0xf75 PUSH1 0x1
0xf77 PUSH1 0x80
0xf79 PUSH1 0x2
0xf7b EXP
0xf7c SUB
0xf7d DUP1
0xf7e DUP3
0xf7f AND
0xf80 SWAP3
0xf81 PUSH1 0x80
0xf83 PUSH1 0x2
0xf85 EXP
0xf86 SWAP1
0xf87 SWAP3
0xf88 DIV
0xf89 AND
0xf8a SWAP1
0xf8b PUSH8 0xffffffffffffffff
0xf94 AND
0xf95 DUP5
0xf96 PUSH2 0xffb
0xf99 JUMP
---
0xf66: JUMPDEST 
0xf67: V1332 = 0x1
0xf6a: V1333 = ADD S2 0x1
0xf6b: V1334 = S[V1333]
0xf6c: V1335 = 0x2
0xf6f: V1336 = ADD S2 0x2
0xf70: V1337 = S[V1336]
0xf71: V1338 = 0x96f
0xf75: V1339 = 0x1
0xf77: V1340 = 0x80
0xf79: V1341 = 0x2
0xf7b: V1342 = EXP 0x2 0x80
0xf7c: V1343 = SUB 0x100000000000000000000000000000000 0x1
0xf7f: V1344 = AND V1334 0xffffffffffffffffffffffffffffffff
0xf81: V1345 = 0x80
0xf83: V1346 = 0x2
0xf85: V1347 = EXP 0x2 0x80
0xf88: V1348 = DIV V1334 0x100000000000000000000000000000000
0xf89: V1349 = AND V1348 0xffffffffffffffffffffffffffffffff
0xf8b: V1350 = 0xffffffffffffffff
0xf94: V1351 = AND 0xffffffffffffffff V1337
0xf96: V1352 = 0xffb
0xf99: JUMP 0xffb
---
Entry stack: [V13, 0x126, V135, V543, 0x0, 0x678, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x96f, 0xdb4}, S2, 0x0, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x96f, V1344, V1349, V1351, S0]
Exit stack: [V13, 0x126, V135, V543, 0x0, 0x678, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x96f, 0xdb4}, S2, 0x0, S0, 0x96f, V1344, V1349, V1351, S0]

================================

Block 0xf9a
[0xf9a:0xfee]
---
Predecessors: [0xdc3, 0xed6]
Successors: [0xdd9, 0xedf]
---
0xf9a JUMPDEST
0xf9b PUSH1 0x0
0xf9d SWAP1
0xf9e DUP2
0xf9f MSTORE
0xfa0 PUSH1 0x3
0xfa2 PUSH1 0x20
0xfa4 MSTORE
0xfa5 PUSH1 0x40
0xfa7 DUP2
0xfa8 SHA3
0xfa9 DUP1
0xfaa SLOAD
0xfab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfc0 NOT
0xfc1 AND
0xfc2 DUP2
0xfc3 SSTORE
0xfc4 PUSH1 0x1
0xfc6 DUP2
0xfc7 ADD
0xfc8 SWAP2
0xfc9 SWAP1
0xfca SWAP2
0xfcb SSTORE
0xfcc PUSH1 0x2
0xfce ADD
0xfcf DUP1
0xfd0 SLOAD
0xfd1 PUSH24 0xffffffffffffffffffffffffffffffffffffffffffffffff
0xfea NOT
0xfeb AND
0xfec SWAP1
0xfed SSTORE
0xfee JUMP
---
0xf9a: JUMPDEST 
0xf9b: V1353 = 0x0
0xf9f: M[0x0] = S0
0xfa0: V1354 = 0x3
0xfa2: V1355 = 0x20
0xfa4: M[0x20] = 0x3
0xfa5: V1356 = 0x40
0xfa8: V1357 = SHA3 0x0 0x40
0xfaa: V1358 = S[V1357]
0xfab: V1359 = 0xffffffffffffffffffffffffffffffffffffffff
0xfc0: V1360 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xfc1: V1361 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1358
0xfc3: S[V1357] = V1361
0xfc4: V1362 = 0x1
0xfc7: V1363 = ADD V1357 0x1
0xfcb: S[V1363] = 0x0
0xfcc: V1364 = 0x2
0xfce: V1365 = ADD 0x2 V1357
0xfd0: V1366 = S[V1365]
0xfd1: V1367 = 0xffffffffffffffffffffffffffffffffffffffffffffffff
0xfea: V1368 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffff
0xfeb: V1369 = AND 0xffffffffffffffff000000000000000000000000000000000000000000000000 V1366
0xfed: S[V1365] = V1369
0xfee: JUMP {0xdd9, 0xedf}
---
Entry stack: [V13, 0x126, V135, S16, {0x0, 0x126}, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0xdd9, 0xedf}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0x126, V135, S16, {0x0, 0x126}, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0xfef
[0xfef:0xffa]
---
Predecessors: [0xde3]
Successors: [0xdeb]
---
0xfef JUMPDEST
0xff0 PUSH1 0x2
0xff2 SLOAD
0xff3 PUSH2 0x2710
0xff6 SWAP2
0xff7 MUL
0xff8 DIV
0xff9 SWAP1
0xffa JUMP
---
0xfef: JUMPDEST 
0xff0: V1370 = 0x2
0xff2: V1371 = S[0x2]
0xff3: V1372 = 0x2710
0xff7: V1373 = MUL S0 V1371
0xff8: V1374 = DIV V1373 0x2710
0xffa: JUMP 0xdeb
---
Entry stack: [V13, 0x126, V135, V543, S12, {0x126, 0x678}, V135, S9, S8, S7, S6, S5, S4, S3, S2, 0xdeb, S0]
Stack pops: 2
Stack additions: [V1374]
Exit stack: [V13, 0x126, V135, V543, S12, {0x126, 0x678}, V135, S9, S8, S7, S6, S5, S4, S3, S2, V1374]

================================

Block 0xffb
[0xffb:0x1007]
---
Predecessors: [0xf66]
Successors: [0x1008, 0x100f]
---
0xffb JUMPDEST
0xffc PUSH1 0x0
0xffe DUP1
0xfff DUP1
0x1000 DUP1
0x1001 DUP6
0x1002 DUP6
0x1003 LT
0x1004 PUSH2 0x100f
0x1007 JUMPI
---
0xffb: JUMPDEST 
0xffc: V1375 = 0x0
0x1003: V1376 = LT S0 V1351
0x1004: V1377 = 0x100f
0x1007: JUMPI 0x100f V1376
---
Entry stack: [V13, 0x126, V135, V543, 0x0, 0x678, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x96f, 0xdb4}, S7, 0x0, S5, 0x96f, V1344, V1349, V1351, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V13, 0x126, V135, V543, 0x0, 0x678, S17, S16, S15, S14, S13, S12, S11, S10, S9, {0x96f, 0xdb4}, S7, 0x0, S5, 0x96f, V1344, V1349, V1351, S0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x1008
[0x1008:0x100e]
---
Predecessors: [0xffb]
Successors: [0x102d]
---
0x1008 DUP7
0x1009 SWAP4
0x100a POP
0x100b PUSH2 0x102d
0x100e JUMP
---
0x100b: V1378 = 0x102d
0x100e: JUMP 0x102d
---
Entry stack: [V13, 0x126, V135, V543, 0x0, 0x678, S21, S20, S19, S18, S17, S16, S15, S14, S13, {0x96f, 0xdb4}, S11, 0x0, S9, 0x96f, V1344, V1349, V1351, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S6, S2, S1, S0]
Exit stack: [V13, 0x126, V135, V543, 0x0, 0x678, S21, S20, S19, S18, S17, S16, S15, S14, S13, {0x96f, 0xdb4}, S11, 0x0, S9, 0x96f, V1344, V1349, V1351, S4, V1349, 0x0, 0x0, 0x0]

================================

Block 0x100f
[0x100f:0x101f]
---
Predecessors: [0xffb]
Successors: [0x1020, 0x1021]
---
0x100f JUMPDEST
0x1010 DUP8
0x1011 DUP8
0x1012 SUB
0x1013 SWAP3
0x1014 POP
0x1015 DUP6
0x1016 DUP6
0x1017 DUP5
0x1018 MUL
0x1019 DUP2
0x101a ISZERO
0x101b ISZERO
0x101c PUSH2 0x1021
0x101f JUMPI
---
0x100f: JUMPDEST 
0x1012: V1379 = SUB V1349 V1344
0x1018: V1380 = MUL V1379 S4
0x101a: V1381 = ISZERO V1351
0x101b: V1382 = ISZERO V1381
0x101c: V1383 = 0x1021
0x101f: JUMPI 0x1021 V1382
---
Entry stack: [V13, 0x126, V135, V543, 0x0, 0x678, S21, S20, S19, S18, S17, S16, S15, S14, S13, {0x96f, 0xdb4}, S11, 0x0, S9, 0x96f, V1344, V1349, V1351, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, V1379, S1, S0, S5, V1380]
Exit stack: [V13, 0x126, V135, V543, 0x0, 0x678, S21, S20, S19, S18, S17, S16, S15, S14, S13, {0x96f, 0xdb4}, S11, 0x0, S9, 0x96f, V1344, V1349, V1351, S4, 0x0, V1379, 0x0, 0x0, V1351, V1380]

================================

Block 0x1020
[0x1020:0x1020]
---
Predecessors: [0x100f]
Successors: []
---
0x1020 INVALID
---
0x1020: INVALID 
---
Entry stack: [V13, 0x126, V135, V543, 0x0, 0x678, S23, S22, S21, S20, S19, S18, S17, S16, S15, {0x96f, 0xdb4}, S13, 0x0, S11, 0x96f, V1344, V1349, V1351, S6, 0x0, V1379, 0x0, 0x0, V1351, V1380]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x126, V135, V543, 0x0, 0x678, S23, S22, S21, S20, S19, S18, S17, S16, S15, {0x96f, 0xdb4}, S13, 0x0, S11, 0x96f, V1344, V1349, V1351, S6, 0x0, V1379, 0x0, 0x0, V1351, V1380]

================================

Block 0x1021
[0x1021:0x102c]
---
Predecessors: [0x100f]
Successors: [0x102d]
---
0x1021 JUMPDEST
0x1022 SDIV
0x1023 SWAP2
0x1024 POP
0x1025 DUP2
0x1026 DUP9
0x1027 ADD
0x1028 SWAP1
0x1029 POP
0x102a DUP1
0x102b SWAP4
0x102c POP
---
0x1021: JUMPDEST 
0x1022: V1384 = SDIV V1380 V1351
0x1027: V1385 = ADD V1344 V1384
---
Entry stack: [V13, 0x126, V135, V543, 0x0, 0x678, S23, S22, S21, S20, S19, S18, S17, S16, S15, {0x96f, 0xdb4}, S13, 0x0, S11, 0x96f, V1344, V1349, V1351, S6, 0x0, V1379, 0x0, 0x0, V1351, V1380]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, V1385, S4, V1384, V1385]
Exit stack: [V13, 0x126, V135, V543, 0x0, 0x678, S23, S22, S21, S20, S19, S18, S17, S16, S15, {0x96f, 0xdb4}, S13, 0x0, S11, 0x96f, V1344, V1349, V1351, S6, V1385, V1379, V1384, V1385]

================================

Block 0x102d
[0x102d:0x1037]
---
Predecessors: [0x1008, 0x1021]
Successors: [0x96f]
---
0x102d JUMPDEST
0x102e POP
0x102f POP
0x1030 POP
0x1031 SWAP5
0x1032 SWAP4
0x1033 POP
0x1034 POP
0x1035 POP
0x1036 POP
0x1037 JUMP
---
0x102d: JUMPDEST 
0x1037: JUMP 0x96f
---
Entry stack: [V13, 0x126, V135, V543, 0x0, 0x678, S21, S20, S19, S18, S17, S16, S15, S14, S13, {0x96f, 0xdb4}, S11, 0x0, S9, 0x96f, V1344, V1349, V1351, S4, S3, S2, S1, S0]
Stack pops: 9
Stack additions: [S3]
Exit stack: [V13, 0x126, V135, V543, 0x0, 0x678, S21, S20, S19, S18, S17, S16, S15, S14, S13, {0x96f, 0xdb4}, S11, 0x0, S9, S3]

================================

Block 0x1038
[0x1038:0x106c]
---
Predecessors: [0x489, 0xa2c]
Successors: [0x491, 0xa34]
---
0x1038 JUMPDEST
0x1039 PUSH1 0xc0
0x103b PUSH1 0x40
0x103d MLOAD
0x103e SWAP1
0x103f DUP2
0x1040 ADD
0x1041 PUSH1 0x40
0x1043 SWAP1
0x1044 DUP2
0x1045 MSTORE
0x1046 PUSH1 0x0
0x1048 DUP1
0x1049 DUP4
0x104a MSTORE
0x104b PUSH1 0x20
0x104d DUP4
0x104e ADD
0x104f DUP2
0x1050 SWAP1
0x1051 MSTORE
0x1052 SWAP1
0x1053 DUP3
0x1054 ADD
0x1055 DUP2
0x1056 SWAP1
0x1057 MSTORE
0x1058 PUSH1 0x60
0x105a DUP3
0x105b ADD
0x105c DUP2
0x105d SWAP1
0x105e MSTORE
0x105f PUSH1 0x80
0x1061 DUP3
0x1062 ADD
0x1063 DUP2
0x1064 SWAP1
0x1065 MSTORE
0x1066 PUSH1 0xa0
0x1068 DUP3
0x1069 ADD
0x106a MSTORE
0x106b SWAP1
0x106c JUMP
---
0x1038: JUMPDEST 
0x1039: V1386 = 0xc0
0x103b: V1387 = 0x40
0x103d: V1388 = M[0x40]
0x1040: V1389 = ADD V1388 0xc0
0x1041: V1390 = 0x40
0x1045: M[0x40] = V1389
0x1046: V1391 = 0x0
0x104a: M[V1388] = 0x0
0x104b: V1392 = 0x20
0x104e: V1393 = ADD V1388 0x20
0x1051: M[V1393] = 0x0
0x1054: V1394 = ADD V1388 0x40
0x1057: M[V1394] = 0x0
0x1058: V1395 = 0x60
0x105b: V1396 = ADD V1388 0x60
0x105e: M[V1396] = 0x0
0x105f: V1397 = 0x80
0x1062: V1398 = ADD V1388 0x80
0x1065: M[V1398] = 0x0
0x1066: V1399 = 0xa0
0x1069: V1400 = ADD V1388 0xa0
0x106a: M[V1400] = 0x0
0x106c: JUMP {0x491, 0xa34}
---
Entry stack: [V13, 0x126, S5, S4, S3, S2, S1, {0x491, 0xa34}]
Stack pops: 1
Stack additions: [V1388]
Exit stack: [V13, 0x126, S5, S4, S3, S2, S1, V1388]

================================

Block 0x106d
[0x106d:0x107a]
---
Predecessors: [0x600, 0x625]
Successors: [0x6b7, 0x107b]
---
0x106d JUMPDEST
0x106e DUP2
0x106f SLOAD
0x1070 DUP2
0x1071 DUP4
0x1072 SSTORE
0x1073 DUP2
0x1074 DUP2
0x1075 ISZERO
0x1076 GT
0x1077 PUSH2 0x6b7
0x107a JUMPI
---
0x106d: JUMPDEST 
0x106f: V1401 = S[{0xb, 0xc}]
0x1072: S[{0xb, 0xc}] = S0
0x1075: V1402 = ISZERO V1401
0x1076: V1403 = GT V1402 S0
0x1077: V1404 = 0x6b7
0x107a: JUMPI 0x6b7 V1403
---
Entry stack: [V13, 0x126, V129, V131, {0xb, 0xc}, S4, S3, {0x611, 0x637}, {0xb, 0xc}, S0]
Stack pops: 2
Stack additions: [S1, S0, V1401]
Exit stack: [V13, 0x126, V129, V131, {0xb, 0xc}, S4, S3, {0x611, 0x637}, {0xb, 0xc}, S0, V1401]

================================

Block 0x107b
[0x107b:0x1091]
---
Predecessors: [0x106d]
Successors: [0x1092]
---
0x107b PUSH1 0x0
0x107d DUP4
0x107e DUP2
0x107f MSTORE
0x1080 PUSH1 0x20
0x1082 SWAP1
0x1083 SHA3
0x1084 PUSH2 0x6b7
0x1087 SWAP2
0x1088 DUP2
0x1089 ADD
0x108a SWAP1
0x108b DUP4
0x108c ADD
0x108d PUSH2 0x5da
0x1090 SWAP2
0x1091 SWAP1
---
0x107b: V1405 = 0x0
0x107f: M[0x0] = {0xb, 0xc}
0x1080: V1406 = 0x20
0x1083: V1407 = SHA3 0x0 0x20
0x1084: V1408 = 0x6b7
0x1089: V1409 = ADD V1407 V1401
0x108c: V1410 = ADD S1 V1407
0x108d: V1411 = 0x5da
---
Entry stack: [V13, 0x126, V129, V131, {0xb, 0xc}, S5, S4, {0x611, 0x637}, {0xb, 0xc}, S1, V1401]
Stack pops: 3
Stack additions: [S2, S1, 0x6b7, 0x5da, V1409, V1410]
Exit stack: [V13, 0x126, V129, V131, {0xb, 0xc}, S5, S4, {0x611, 0x637}, {0xb, 0xc}, S1, 0x6b7, 0x5da, V1409, V1410]

================================

Block 0x1092
[0x1092:0x109a]
---
Predecessors: [0x107b, 0x109b]
Successors: [0x109b, 0x10a6]
---
0x1092 JUMPDEST
0x1093 DUP1
0x1094 DUP3
0x1095 GT
0x1096 ISZERO
0x1097 PUSH2 0x10a6
0x109a JUMPI
---
0x1092: JUMPDEST 
0x1095: V1412 = GT V1409 S0
0x1096: V1413 = ISZERO V1412
0x1097: V1414 = 0x10a6
0x109a: JUMPI 0x10a6 V1413
---
Entry stack: [V13, 0x126, V129, V131, {0xb, 0xc}, S8, S7, {0x611, 0x637}, {0xb, 0xc}, S4, 0x6b7, 0x5da, V1409, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x126, V129, V131, {0xb, 0xc}, S8, S7, {0x611, 0x637}, {0xb, 0xc}, S4, 0x6b7, 0x5da, V1409, S0]

================================

Block 0x109b
[0x109b:0x10a5]
---
Predecessors: [0x1092]
Successors: [0x1092]
---
0x109b PUSH1 0x0
0x109d DUP2
0x109e SSTORE
0x109f PUSH1 0x1
0x10a1 ADD
0x10a2 PUSH2 0x1092
0x10a5 JUMP
---
0x109b: V1415 = 0x0
0x109e: S[S0] = 0x0
0x109f: V1416 = 0x1
0x10a1: V1417 = ADD 0x1 S0
0x10a2: V1418 = 0x1092
0x10a5: JUMP 0x1092
---
Entry stack: [V13, 0x126, V129, V131, {0xb, 0xc}, S8, S7, {0x611, 0x637}, {0xb, 0xc}, S4, 0x6b7, 0x5da, V1409, S0]
Stack pops: 1
Stack additions: [V1417]
Exit stack: [V13, 0x126, V129, V131, {0xb, 0xc}, S8, S7, {0x611, 0x637}, {0xb, 0xc}, S4, 0x6b7, 0x5da, V1409, V1417]

================================

Block 0x10a6
[0x10a6:0x10a9]
---
Predecessors: [0x1092]
Successors: [0x5da]
---
0x10a6 JUMPDEST
0x10a7 POP
0x10a8 SWAP1
0x10a9 JUMP
---
0x10a6: JUMPDEST 
0x10a9: JUMP 0x5da
---
Entry stack: [V13, 0x126, V129, V131, {0xb, 0xc}, S8, S7, {0x611, 0x637}, {0xb, 0xc}, S4, 0x6b7, 0x5da, V1409, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V13, 0x126, V129, V131, {0xb, 0xc}, S8, S7, {0x611, 0x637}, {0xb, 0xc}, S4, 0x6b7, V1409]

================================

Block 0x10aa
[0x10aa:0x10d5]
---
Predecessors: []
Successors: []
---
0x10aa STOP
0x10ab LOG1
0x10ac PUSH6 0x627a7a723058
0x10b3 SHA3
0x10b4 MISSING 0xc0
0x10b5 CODECOPY
0x10b6 MISSING 0xa7
0x10b7 SELFDESTRUCT
0x10b8 GAS
0x10b9 MISSING 0xb4
0x10ba MSTORE8
0x10bb PUSH26 0x357f573df80e6590e7ddf31b8c4feb6bd788080965e1028d0029
---
0x10aa: STOP 
0x10ab: LOG S0 S1 S2
0x10ac: V1419 = 0x627a7a723058
0x10b3: V1420 = SHA3 0x627a7a723058 S3
0x10b4: MISSING 0xc0
0x10b5: CODECOPY S0 S1 S2
0x10b6: MISSING 0xa7
0x10b7: SELFDESTRUCT S0
0x10b8: V1421 = GAS
0x10b9: MISSING 0xb4
0x10ba: M8[S0] = S1
0x10bb: V1422 = 0x357f573df80e6590e7ddf31b8c4feb6bd788080965e1028d0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V1420, V1421, 0x357f573df80e6590e7ddf31b8c4feb6bd788080965e1028d0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x20caea39
Entry block: 0x11e
Exit block: 0x126
Body: 0x11e, 0x126, 0x3a8, 0x43c, 0x448, 0x44c, 0x45d, 0x46a, 0x46e, 0x47b, 0x485

Function 1:
Public function signature: 0x27ebe40a
Entry block: 0x128
Exit block: 0x126
Body: 0x126, 0x128, 0x12f, 0x133, 0x489, 0x491, 0x4a2, 0x4a6, 0x4b7, 0x4bb, 0x4cd, 0x4d1, 0x4e8, 0x4ec, 0x4f6

Function 2:
Public function signature: 0x3f4ba83a
Entry block: 0x153
Exit block: 0x126
Body: 0x126, 0x153, 0x15a, 0x15e, 0x558, 0x570, 0x574, 0x588, 0x58c

Function 3:
Public function signature: 0x42577935
Entry block: 0x17a
Exit block: 0x126
Body: 0x126, 0x17a, 0x181, 0x185, 0x485, 0x5dd, 0x5f4, 0x5f8, 0x600, 0x611, 0x625, 0x637

Function 4:
Public function signature: 0x454a2ab3
Entry block: 0x193
Exit block: 0x126
Body: 0x126, 0x193, 0x64a, 0x678, 0x684, 0xd84, 0xda0, 0xda7, 0xdab, 0xdb4, 0xdbf, 0xdc3, 0xdd9, 0xde3, 0xdeb, 0xe1f, 0xe23, 0xe54, 0xe58, 0xfef

Function 5:
Public function signature: 0x484eccb4
Entry block: 0x19e
Exit block: 0x1b4
Body: 0x19e, 0x1a5, 0x1a9, 0x1b4, 0x6bc, 0x6c8, 0x6c9

Function 6:
Public function signature: 0x5c975abb
Entry block: 0x1c6
Exit block: 0x166
Body: 0x166, 0x1c6, 0x1cd, 0x1d1, 0x6d0

Function 7:
Public function signature: 0x5fd8c710
Entry block: 0x1d9
Exit block: 0x126
Body: 0x126, 0x1d9, 0x1e0, 0x1e4, 0x6e0, 0x6ff, 0x715, 0x71c, 0x720

Function 8:
Public function signature: 0x6108ceb6
Entry block: 0x1ec
Exit block: 0x1b4
Body: 0x1b4, 0x1ec, 0x1f3, 0x1f7, 0x756

Function 9:
Public function signature: 0x78bd7935
Entry block: 0x1ff
Exit block: 0x215
Body: 0x1ff, 0x206, 0x20a, 0x215, 0x761, 0x780, 0x787, 0x78b

Function 10:
Public function signature: 0x83b5ff8b
Entry block: 0x250
Exit block: 0x1b4
Body: 0x1b4, 0x250, 0x257, 0x25b, 0x7e1

Function 11:
Public function signature: 0x8456cb59
Entry block: 0x263
Exit block: 0x166
Body: 0x166, 0x263, 0x26a, 0x26e, 0x7e7, 0x7ff, 0x803, 0x816, 0x81a

Function 12:
Public function signature: 0x85b86188
Entry block: 0x276
Exit block: 0x166
Body: 0x166, 0x276, 0x27d, 0x281, 0x870

Function 13:
Public function signature: 0x878eb368
Entry block: 0x289
Exit block: 0x126
Body: 0x126, 0x289, 0x290, 0x294, 0x485, 0x879, 0x88e, 0x892, 0x8a9, 0x8ad, 0x8c5, 0x8cc, 0x8d0

Function 14:
Public function signature: 0x8a98a9cc
Entry block: 0x29f
Exit block: 0x1b4
Body: 0x1b4, 0x29f, 0x2a6, 0x2aa, 0x8e6

Function 15:
Public function signature: 0x8da5cb5b
Entry block: 0x2b2
Exit block: 0x2c5
Body: 0x2b2, 0x2b9, 0x2bd, 0x2c5, 0x8ec

Function 16:
Public function signature: 0x96b5a755
Entry block: 0x2e1
Exit block: 0x126
Body: 0x126, 0x2e1, 0x2e8, 0x2ec, 0x485, 0x611, 0x637, 0x6b7, 0x8fb, 0x913, 0x91a, 0x91e, 0x936, 0x93a

Function 17:
Public function signature: 0xc55d0f56
Entry block: 0x2f7
Exit block: 0x126
Body: 0x126, 0x1b4, 0x2f7, 0x2fe, 0x302, 0x678, 0x684, 0x944, 0x95b, 0x962, 0x966, 0x96f, 0xdb4, 0xdbf, 0xdc3, 0xdd9, 0xde3, 0xdeb, 0xe1f, 0xe23, 0xe54, 0xe58, 0xfef

Function 18:
Public function signature: 0xdd1b7a0f
Entry block: 0x30d
Exit block: 0x2c5
Body: 0x2c5, 0x30d, 0x314, 0x318, 0x976

Function 19:
Public function signature: 0xeac9d94c
Entry block: 0x320
Exit block: 0x1b4
Body: 0x1b4, 0x320, 0x327, 0x32b, 0x985, 0x98a, 0x994, 0x99f, 0x9a0, 0x9af

Function 20:
Public function signature: 0xee0ebe0c
Entry block: 0x333
Exit block: 0x346
Body: 0x333, 0x33a, 0x33e, 0x346, 0x9b9

Function 21:
Public function signature: 0xf2fde38b
Entry block: 0x35e
Exit block: 0x126
Body: 0x126, 0x35e, 0x365, 0x369, 0x9d6, 0x9ed, 0x9f1, 0xa01, 0xa29

Function 22:
Public function signature: 0xf40e28f2
Entry block: 0x37d
Exit block: 0x126
Body: 0x126, 0x37d, 0x384, 0x388, 0xa2c, 0xa34, 0xa45, 0xa49, 0xa5a, 0xa5e, 0xa70, 0xa74, 0xa8b, 0xa8f, 0xa99

Function 23:
Public fallback function
Entry block: 0x119
Exit block: 0x119
Body: 0x119

Function 24:
Private function
Entry block: 0xed6
Exit block: 0xee9
Body: 0x4f6, 0x684, 0x698, 0x6ab, 0xa99, 0xaf3, 0xb49, 0xb5a, 0xed6, 0xedf, 0xee9

Function 25:
Private function
Entry block: 0xb61
Exit block: 0xb5a
Body: 0xb49, 0xb5a, 0xb61

Function 26:
Private function
Entry block: 0xaf3
Exit block: 0xb5a
Body: 0x4f6, 0xa99, 0xaf3, 0xb49, 0xb5a

Function 27:
Private function
Entry block: 0xbc4
Exit block: 0xbe0
Body: 0xbc4, 0xbe0

Function 28:
Private function
Entry block: 0x106d
Exit block: 0x6b7
Body: 0x5da, 0x6b7, 0x106d, 0x107b, 0x1092, 0x109b, 0x10a6

