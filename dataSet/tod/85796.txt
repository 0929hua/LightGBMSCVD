Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x82]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x82
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x82
0xa: JUMPI 0x82 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0x84]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x553d604
0x19 DUP2
0x1a EQ
0x1b PUSH2 0x84
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x553d604
0x1a: V12 = EQ V10 0x553d604
0x1b: V13 = 0x84
0x1e: JUMPI 0x84 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0x8d]
---
0x1f DUP1
0x20 PUSH4 0x39425eb1
0x25 EQ
0x26 PUSH2 0x8d
0x29 JUMPI
---
0x20: V14 = 0x39425eb1
0x25: V15 = EQ 0x39425eb1 V10
0x26: V16 = 0x8d
0x29: JUMPI 0x8d V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0xa5]
---
0x2a DUP1
0x2b PUSH4 0x41c0e1b5
0x30 EQ
0x31 PUSH2 0xa5
0x34 JUMPI
---
0x2b: V17 = 0x41c0e1b5
0x30: V18 = EQ 0x41c0e1b5 V10
0x31: V19 = 0xa5
0x34: JUMPI 0xa5 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0xc3]
---
0x35 DUP1
0x36 PUSH4 0x5d91526d
0x3b EQ
0x3c PUSH2 0xc3
0x3f JUMPI
---
0x36: V20 = 0x5d91526d
0x3b: V21 = EQ 0x5d91526d V10
0x3c: V22 = 0xc3
0x3f: JUMPI 0xc3 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x11a]
---
0x40 DUP1
0x41 PUSH4 0x646989d9
0x46 EQ
0x47 PUSH2 0x11a
0x4a JUMPI
---
0x41: V23 = 0x646989d9
0x46: V24 = EQ 0x646989d9 V10
0x47: V25 = 0x11a
0x4a: JUMPI 0x11a V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x123]
---
0x4b DUP1
0x4c PUSH4 0x7f7650eb
0x51 EQ
0x52 PUSH2 0x123
0x55 JUMPI
---
0x4c: V26 = 0x7f7650eb
0x51: V27 = EQ 0x7f7650eb V10
0x52: V28 = 0x123
0x55: JUMPI 0x123 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x17f]
---
0x56 DUP1
0x57 PUSH4 0x8da5cb5b
0x5c EQ
0x5d PUSH2 0x17f
0x60 JUMPI
---
0x57: V29 = 0x8da5cb5b
0x5c: V30 = EQ 0x8da5cb5b V10
0x5d: V31 = 0x17f
0x60: JUMPI 0x17f V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x191]
---
0x61 DUP1
0x62 PUSH4 0x91e44e26
0x67 EQ
0x68 PUSH2 0x191
0x6b JUMPI
---
0x62: V32 = 0x91e44e26
0x67: V33 = EQ 0x91e44e26 V10
0x68: V34 = 0x191
0x6b: JUMPI 0x191 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x1ec]
---
0x6c DUP1
0x6d PUSH4 0xda67875c
0x72 EQ
0x73 PUSH2 0x1ec
0x76 JUMPI
---
0x6d: V35 = 0xda67875c
0x72: V36 = EQ 0xda67875c V10
0x73: V37 = 0x1ec
0x76: JUMPI 0x1ec V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x1f5]
---
0x77 DUP1
0x78 PUSH4 0xf2fde38b
0x7d EQ
0x7e PUSH2 0x1f5
0x81 JUMPI
---
0x78: V38 = 0xf2fde38b
0x7d: V39 = EQ 0xf2fde38b V10
0x7e: V40 = 0x1f5
0x81: JUMPI 0x1f5 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x82
[0x82:0x83]
---
Predecessors: [0x0, 0x77, 0xc3, 0x2b2]
Successors: []
---
0x82 JUMPDEST
0x83 STOP
---
0x82: JUMPDEST 
0x83: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x84
[0x84:0x8c]
---
Predecessors: [0xb]
Successors: [0x216]
---
0x84 JUMPDEST
0x85 PUSH2 0x216
0x88 PUSH1 0x2
0x8a SLOAD
0x8b DUP2
0x8c JUMP
---
0x84: JUMPDEST 
0x85: V41 = 0x216
0x88: V42 = 0x2
0x8a: V43 = S[0x2]
0x8c: JUMP 0x216
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x216, V43]
Exit stack: [V10, 0x216, V43]

================================

Block 0x8d
[0x8d:0x9f]
---
Predecessors: [0x1f]
Successors: [0xa0]
---
0x8d JUMPDEST
0x8e PUSH2 0x216
0x91 PUSH1 0x4
0x93 CALLDATALOAD
0x94 PUSH1 0x5
0x96 DUP2
0x97 PUSH1 0x14
0x99 DUP2
0x9a LT
0x9b ISZERO
0x9c PUSH2 0x2
0x9f JUMPI
---
0x8d: JUMPDEST 
0x8e: V44 = 0x216
0x91: V45 = 0x4
0x93: V46 = CALLDATALOAD 0x4
0x94: V47 = 0x5
0x97: V48 = 0x14
0x9a: V49 = LT V46 0x14
0x9b: V50 = ISZERO V49
0x9c: V51 = 0x2
0x9f: THROWI V50
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x216, V46, 0x5, V46]
Exit stack: [V10, 0x216, V46, 0x5, V46]

================================

Block 0xa0
[0xa0:0xa4]
---
Predecessors: [0x8d]
Successors: [0x216]
---
0xa0 POP
0xa1 ADD
0xa2 SLOAD
0xa3 DUP2
0xa4 JUMP
---
0xa1: V52 = ADD 0x5 V46
0xa2: V53 = S[V52]
0xa4: JUMP 0x216
---
Entry stack: [V10, 0x216, V46, 0x5, V46]
Stack pops: 4
Stack additions: [S3, V53]
Exit stack: [V10, 0x216, V53]

================================

Block 0xa5
[0xa5:0xbe]
---
Predecessors: [0x2a]
Successors: [0xbf, 0x2d4]
---
0xa5 JUMPDEST
0xa6 PUSH2 0x82
0xa9 PUSH1 0x0
0xab SLOAD
0xac CALLER
0xad PUSH1 0x1
0xaf PUSH1 0xa0
0xb1 PUSH1 0x2
0xb3 EXP
0xb4 SUB
0xb5 SWAP1
0xb6 DUP2
0xb7 AND
0xb8 SWAP2
0xb9 AND
0xba EQ
0xbb PUSH2 0x2d4
0xbe JUMPI
---
0xa5: JUMPDEST 
0xa6: V54 = 0x82
0xa9: V55 = 0x0
0xab: V56 = S[0x0]
0xac: V57 = CALLER
0xad: V58 = 0x1
0xaf: V59 = 0xa0
0xb1: V60 = 0x2
0xb3: V61 = EXP 0x2 0xa0
0xb4: V62 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb7: V63 = AND 0xffffffffffffffffffffffffffffffffffffffff V57
0xb9: V64 = AND V56 0xffffffffffffffffffffffffffffffffffffffff
0xba: V65 = EQ V64 V63
0xbb: V66 = 0x2d4
0xbe: JUMPI 0x2d4 V65
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x82]
Exit stack: [V10, 0x82]

================================

Block 0xbf
[0xbf:0xc2]
---
Predecessors: [0xa5]
Successors: []
---
0xbf PUSH2 0x2
0xc2 JUMP
---
0xbf: V67 = 0x2
0xc2: THROW 
---
Entry stack: [V10, 0x82]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x82]

================================

Block 0xc3
[0xc3:0x119]
---
Predecessors: [0x35]
Successors: [0x82]
---
0xc3 JUMPDEST
0xc4 PUSH2 0x82
0xc7 PUSH1 0x4
0xc9 CALLDATALOAD
0xca CALLER
0xcb PUSH1 0x1
0xcd PUSH1 0xa0
0xcf PUSH1 0x2
0xd1 EXP
0xd2 SUB
0xd3 AND
0xd4 PUSH1 0x0
0xd6 DUP3
0xd7 PUSH1 0x60
0xd9 DUP3
0xda DUP2
0xdb DUP2
0xdc DUP2
0xdd DUP6
0xde DUP9
0xdf DUP4
0xe0 CALL
0xe1 POP
0xe2 POP
0xe3 PUSH1 0x40
0xe5 DUP1
0xe6 MLOAD
0xe7 SWAP2
0xe8 DUP3
0xe9 MSTORE
0xea MLOAD
0xeb PUSH32 0x24abdb5865df5079dcc5ac590ff6f01d5c16edbc5fab4e195d9febd1114503da
0x10c SWAP4
0x10d POP
0x10e SWAP1
0x10f DUP2
0x110 SWAP1
0x111 SUB
0x112 PUSH1 0x20
0x114 ADD
0x115 SWAP2
0x116 POP
0x117 LOG1
0x118 POP
0x119 JUMP
---
0xc3: JUMPDEST 
0xc4: V68 = 0x82
0xc7: V69 = 0x4
0xc9: V70 = CALLDATALOAD 0x4
0xca: V71 = CALLER
0xcb: V72 = 0x1
0xcd: V73 = 0xa0
0xcf: V74 = 0x2
0xd1: V75 = EXP 0x2 0xa0
0xd2: V76 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd3: V77 = AND 0xffffffffffffffffffffffffffffffffffffffff V71
0xd4: V78 = 0x0
0xd7: V79 = 0x60
0xe0: V80 = CALL 0x0 V77 V70 0x60 0x0 0x60 0x0
0xe3: V81 = 0x40
0xe6: V82 = M[0x40]
0xe9: M[V82] = V70
0xea: V83 = M[0x40]
0xeb: V84 = 0x24abdb5865df5079dcc5ac590ff6f01d5c16edbc5fab4e195d9febd1114503da
0x111: V85 = SUB V82 V83
0x112: V86 = 0x20
0x114: V87 = ADD 0x20 V85
0x117: LOG V83 V87 0x24abdb5865df5079dcc5ac590ff6f01d5c16edbc5fab4e195d9febd1114503da
0x119: JUMP 0x82
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x11a
[0x11a:0x122]
---
Predecessors: [0x40]
Successors: [0x216]
---
0x11a JUMPDEST
0x11b PUSH2 0x216
0x11e PUSH1 0x3
0x120 SLOAD
0x121 DUP2
0x122 JUMP
---
0x11a: JUMPDEST 
0x11b: V88 = 0x216
0x11e: V89 = 0x3
0x120: V90 = S[0x3]
0x122: JUMP 0x216
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x216, V90]
Exit stack: [V10, 0x216, V90]

================================

Block 0x123
[0x123:0x163]
---
Predecessors: [0x4b]
Successors: [0x164, 0x30d]
---
0x123 JUMPDEST
0x124 PUSH2 0x220
0x127 PUSH1 0x1
0x129 DUP1
0x12a SLOAD
0x12b PUSH1 0x20
0x12d PUSH1 0x2
0x12f DUP3
0x130 DUP5
0x131 AND
0x132 ISZERO
0x133 PUSH2 0x100
0x136 MUL
0x137 PUSH1 0x0
0x139 NOT
0x13a ADD
0x13b SWAP1
0x13c SWAP3
0x13d AND
0x13e SWAP2
0x13f SWAP1
0x140 SWAP2
0x141 DIV
0x142 PUSH1 0x1f
0x144 DUP2
0x145 ADD
0x146 DUP3
0x147 SWAP1
0x148 DIV
0x149 SWAP1
0x14a SWAP2
0x14b MUL
0x14c PUSH1 0x80
0x14e SWAP1
0x14f DUP2
0x150 ADD
0x151 PUSH1 0x40
0x153 MSTORE
0x154 PUSH1 0x60
0x156 DUP3
0x157 DUP2
0x158 MSTORE
0x159 SWAP3
0x15a SWAP2
0x15b SWAP1
0x15c DUP3
0x15d DUP3
0x15e DUP1
0x15f ISZERO
0x160 PUSH2 0x30d
0x163 JUMPI
---
0x123: JUMPDEST 
0x124: V91 = 0x220
0x127: V92 = 0x1
0x12a: V93 = S[0x1]
0x12b: V94 = 0x20
0x12d: V95 = 0x2
0x131: V96 = AND 0x1 V93
0x132: V97 = ISZERO V96
0x133: V98 = 0x100
0x136: V99 = MUL 0x100 V97
0x137: V100 = 0x0
0x139: V101 = NOT 0x0
0x13a: V102 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V99
0x13d: V103 = AND V93 V102
0x141: V104 = DIV V103 0x2
0x142: V105 = 0x1f
0x145: V106 = ADD V104 0x1f
0x148: V107 = DIV V106 0x20
0x14b: V108 = MUL 0x20 V107
0x14c: V109 = 0x80
0x150: V110 = ADD 0x80 V108
0x151: V111 = 0x40
0x153: M[0x40] = V110
0x154: V112 = 0x60
0x158: M[0x60] = V104
0x15f: V113 = ISZERO V104
0x160: V114 = 0x30d
0x163: JUMPI 0x30d V113
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x220, 0x60, 0x1, V104, 0x80, 0x1, V104]
Exit stack: [V10, 0x220, 0x60, 0x1, V104, 0x80, 0x1, V104]

================================

Block 0x164
[0x164:0x16b]
---
Predecessors: [0x123]
Successors: [0x16c, 0x2e2]
---
0x164 DUP1
0x165 PUSH1 0x1f
0x167 LT
0x168 PUSH2 0x2e2
0x16b JUMPI
---
0x165: V115 = 0x1f
0x167: V116 = LT 0x1f V104
0x168: V117 = 0x2e2
0x16b: JUMPI 0x2e2 V116
---
Entry stack: [V10, 0x220, 0x60, 0x1, V104, 0x80, 0x1, V104]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x220, 0x60, 0x1, V104, 0x80, 0x1, V104]

================================

Block 0x16c
[0x16c:0x17e]
---
Predecessors: [0x164]
Successors: [0x30d]
---
0x16c PUSH2 0x100
0x16f DUP1
0x170 DUP4
0x171 SLOAD
0x172 DIV
0x173 MUL
0x174 DUP4
0x175 MSTORE
0x176 SWAP2
0x177 PUSH1 0x20
0x179 ADD
0x17a SWAP2
0x17b PUSH2 0x30d
0x17e JUMP
---
0x16c: V118 = 0x100
0x171: V119 = S[0x1]
0x172: V120 = DIV V119 0x100
0x173: V121 = MUL V120 0x100
0x175: M[0x80] = V121
0x177: V122 = 0x20
0x179: V123 = ADD 0x20 0x80
0x17b: V124 = 0x30d
0x17e: JUMP 0x30d
---
Entry stack: [V10, 0x220, 0x60, 0x1, V104, 0x80, 0x1, V104]
Stack pops: 3
Stack additions: [0xa0, S1, S0]
Exit stack: [V10, 0x220, 0x60, 0x1, V104, 0xa0, 0x1, V104]

================================

Block 0x17f
[0x17f:0x190]
---
Predecessors: [0x56]
Successors: [0x216]
---
0x17f JUMPDEST
0x180 PUSH2 0x216
0x183 PUSH1 0x0
0x185 SLOAD
0x186 PUSH1 0x1
0x188 PUSH1 0xa0
0x18a PUSH1 0x2
0x18c EXP
0x18d SUB
0x18e AND
0x18f DUP2
0x190 JUMP
---
0x17f: JUMPDEST 
0x180: V125 = 0x216
0x183: V126 = 0x0
0x185: V127 = S[0x0]
0x186: V128 = 0x1
0x188: V129 = 0xa0
0x18a: V130 = 0x2
0x18c: V131 = EXP 0x2 0xa0
0x18d: V132 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18e: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x190: JUMP 0x216
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x216, V133]
Exit stack: [V10, 0x216, V133]

================================

Block 0x191
[0x191:0x19f]
---
Predecessors: [0x61]
Successors: [0x1a0]
---
0x191 JUMPDEST
0x192 PUSH2 0x28e
0x195 PUSH2 0x2e0
0x198 PUSH1 0x40
0x19a MSTORE
0x19b PUSH1 0x60
0x19d PUSH1 0x14
0x19f DUP2
---
0x191: JUMPDEST 
0x192: V134 = 0x28e
0x195: V135 = 0x2e0
0x198: V136 = 0x40
0x19a: M[0x40] = 0x2e0
0x19b: V137 = 0x60
0x19d: V138 = 0x14
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x28e, 0x60, 0x14, 0x60]
Exit stack: [V10, 0x28e, 0x60, 0x14, 0x60]

================================

Block 0x1a0
[0x1a0:0x1b2]
---
Predecessors: [0x191, 0x1a0]
Successors: [0x1a0, 0x1b3]
---
0x1a0 JUMPDEST
0x1a1 PUSH1 0x0
0x1a3 DUP2
0x1a4 MSTORE
0x1a5 PUSH1 0x20
0x1a7 ADD
0x1a8 SWAP1
0x1a9 PUSH1 0x1
0x1ab SWAP1
0x1ac SUB
0x1ad SWAP1
0x1ae DUP2
0x1af PUSH2 0x1a0
0x1b2 JUMPI
---
0x1a0: JUMPDEST 
0x1a1: V139 = 0x0
0x1a4: M[S0] = 0x0
0x1a5: V140 = 0x20
0x1a7: V141 = ADD 0x20 S0
0x1a9: V142 = 0x1
0x1ac: V143 = SUB S1 0x1
0x1af: V144 = 0x1a0
0x1b2: JUMPI 0x1a0 V143
---
Entry stack: [V10, 0x28e, 0x60, S1, S0]
Stack pops: 2
Stack additions: [V143, V141]
Exit stack: [V10, 0x28e, 0x60, V143, V141]

================================

Block 0x1b3
[0x1b3:0x1ca]
---
Predecessors: [0x1a0]
Successors: [0x1cb]
---
0x1b3 POP
0x1b4 POP
0x1b5 PUSH1 0x40
0x1b7 DUP1
0x1b8 MLOAD
0x1b9 PUSH2 0x280
0x1bc DUP2
0x1bd ADD
0x1be SWAP2
0x1bf DUP3
0x1c0 SWAP1
0x1c1 MSTORE
0x1c2 SWAP1
0x1c3 PUSH1 0x5
0x1c5 SWAP1
0x1c6 PUSH1 0x14
0x1c8 SWAP1
0x1c9 DUP3
0x1ca DUP5
---
0x1b5: V145 = 0x40
0x1b8: V146 = M[0x40]
0x1b9: V147 = 0x280
0x1bd: V148 = ADD V146 0x280
0x1c1: M[0x40] = V148
0x1c3: V149 = 0x5
0x1c6: V150 = 0x14
---
Entry stack: [V10, 0x28e, 0x60, V143, V141]
Stack pops: 2
Stack additions: [V146, 0x5, 0x14, V148, 0x5, V146]
Exit stack: [V10, 0x28e, 0x60, V146, 0x5, 0x14, V148, 0x5, V146]

================================

Block 0x1cb
[0x1cb:0x1e1]
---
Predecessors: [0x1b3, 0x1cb]
Successors: [0x1cb, 0x1e2]
---
0x1cb JUMPDEST
0x1cc DUP2
0x1cd PUSH1 0x0
0x1cf POP
0x1d0 SLOAD
0x1d1 DUP2
0x1d2 MSTORE
0x1d3 PUSH1 0x20
0x1d5 ADD
0x1d6 SWAP1
0x1d7 PUSH1 0x1
0x1d9 ADD
0x1da SWAP1
0x1db DUP1
0x1dc DUP4
0x1dd GT
0x1de PUSH2 0x1cb
0x1e1 JUMPI
---
0x1cb: JUMPDEST 
0x1cd: V151 = 0x0
0x1d0: V152 = S[S1]
0x1d2: M[S0] = V152
0x1d3: V153 = 0x20
0x1d5: V154 = ADD 0x20 S0
0x1d7: V155 = 0x1
0x1d9: V156 = ADD 0x1 S1
0x1dd: V157 = GT V148 V154
0x1de: V158 = 0x1cb
0x1e1: JUMPI 0x1cb V157
---
Entry stack: [V10, 0x28e, 0x60, V146, 0x5, 0x14, V148, S1, S0]
Stack pops: 3
Stack additions: [S2, V156, V154]
Exit stack: [V10, 0x28e, 0x60, V146, 0x5, 0x14, V148, V156, V154]

================================

Block 0x1e2
[0x1e2:0x1eb]
---
Predecessors: [0x1cb]
Successors: [0x28e]
---
0x1e2 JUMPDEST
0x1e3 POP
0x1e4 POP
0x1e5 POP
0x1e6 POP
0x1e7 POP
0x1e8 SWAP1
0x1e9 POP
0x1ea SWAP1
0x1eb JUMP
---
0x1e2: JUMPDEST 
0x1eb: JUMP 0x28e
---
Entry stack: [V10, 0x28e, 0x60, V146, 0x5, 0x14, V148, V156, V154]
Stack pops: 8
Stack additions: [S5]
Exit stack: [V10, V146]

================================

Block 0x1ec
[0x1ec:0x1f4]
---
Predecessors: [0x6c]
Successors: [0x216]
---
0x1ec JUMPDEST
0x1ed PUSH2 0x216
0x1f0 PUSH1 0x4
0x1f2 SLOAD
0x1f3 DUP2
0x1f4 JUMP
---
0x1ec: JUMPDEST 
0x1ed: V159 = 0x216
0x1f0: V160 = 0x4
0x1f2: V161 = S[0x4]
0x1f4: JUMP 0x216
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x216, V161]
Exit stack: [V10, 0x216, V161]

================================

Block 0x1f5
[0x1f5:0x211]
---
Predecessors: [0x77]
Successors: [0x212, 0x2b2]
---
0x1f5 JUMPDEST
0x1f6 PUSH2 0x82
0x1f9 PUSH1 0x4
0x1fb CALLDATALOAD
0x1fc PUSH1 0x0
0x1fe SLOAD
0x1ff CALLER
0x200 PUSH1 0x1
0x202 PUSH1 0xa0
0x204 PUSH1 0x2
0x206 EXP
0x207 SUB
0x208 SWAP1
0x209 DUP2
0x20a AND
0x20b SWAP2
0x20c AND
0x20d EQ
0x20e PUSH2 0x2b2
0x211 JUMPI
---
0x1f5: JUMPDEST 
0x1f6: V162 = 0x82
0x1f9: V163 = 0x4
0x1fb: V164 = CALLDATALOAD 0x4
0x1fc: V165 = 0x0
0x1fe: V166 = S[0x0]
0x1ff: V167 = CALLER
0x200: V168 = 0x1
0x202: V169 = 0xa0
0x204: V170 = 0x2
0x206: V171 = EXP 0x2 0xa0
0x207: V172 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20a: V173 = AND 0xffffffffffffffffffffffffffffffffffffffff V167
0x20c: V174 = AND V166 0xffffffffffffffffffffffffffffffffffffffff
0x20d: V175 = EQ V174 V173
0x20e: V176 = 0x2b2
0x211: JUMPI 0x2b2 V175
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x82, V164]
Exit stack: [V10, 0x82, V164]

================================

Block 0x212
[0x212:0x215]
---
Predecessors: [0x1f5]
Successors: []
---
0x212 PUSH2 0x2
0x215 JUMP
---
0x212: V177 = 0x2
0x215: THROW 
---
Entry stack: [V10, 0x82, V164]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x82, V164]

================================

Block 0x216
[0x216:0x21f]
---
Predecessors: [0x84, 0xa0, 0x11a, 0x17f, 0x1ec]
Successors: []
---
0x216 JUMPDEST
0x217 PUSH1 0x60
0x219 SWAP1
0x21a DUP2
0x21b MSTORE
0x21c PUSH1 0x20
0x21e SWAP1
0x21f RETURN
---
0x216: JUMPDEST 
0x217: V178 = 0x60
0x21b: M[0x60] = S0
0x21c: V179 = 0x20
0x21f: RETURN 0x60 0x20
---
Entry stack: [V10, 0x216, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x216]

================================

Block 0x220
[0x220:0x266]
---
Predecessors: [0x30d]
Successors: [0x267, 0x280]
---
0x220 JUMPDEST
0x221 PUSH1 0x40
0x223 MLOAD
0x224 DUP1
0x225 DUP1
0x226 PUSH1 0x20
0x228 ADD
0x229 DUP3
0x22a DUP2
0x22b SUB
0x22c DUP3
0x22d MSTORE
0x22e DUP4
0x22f DUP2
0x230 DUP2
0x231 MLOAD
0x232 DUP2
0x233 MSTORE
0x234 PUSH1 0x20
0x236 ADD
0x237 SWAP2
0x238 POP
0x239 DUP1
0x23a MLOAD
0x23b SWAP1
0x23c PUSH1 0x20
0x23e ADD
0x23f SWAP1
0x240 DUP1
0x241 DUP4
0x242 DUP4
0x243 DUP3
0x244 SWAP1
0x245 PUSH1 0x0
0x247 PUSH1 0x4
0x249 PUSH1 0x20
0x24b DUP5
0x24c PUSH1 0x1f
0x24e ADD
0x24f DIV
0x250 PUSH1 0xf
0x252 MUL
0x253 PUSH1 0x3
0x255 ADD
0x256 CALL
0x257 POP
0x258 SWAP1
0x259 POP
0x25a SWAP1
0x25b DUP2
0x25c ADD
0x25d SWAP1
0x25e PUSH1 0x1f
0x260 AND
0x261 DUP1
0x262 ISZERO
0x263 PUSH2 0x280
0x266 JUMPI
---
0x220: JUMPDEST 
0x221: V180 = 0x40
0x223: V181 = M[0x40]
0x226: V182 = 0x20
0x228: V183 = ADD 0x20 V181
0x22b: V184 = SUB V183 V181
0x22d: M[V181] = V184
0x231: V185 = M[0x60]
0x233: M[V183] = V185
0x234: V186 = 0x20
0x236: V187 = ADD 0x20 V183
0x23a: V188 = M[0x60]
0x23c: V189 = 0x20
0x23e: V190 = ADD 0x20 0x60
0x245: V191 = 0x0
0x247: V192 = 0x4
0x249: V193 = 0x20
0x24c: V194 = 0x1f
0x24e: V195 = ADD 0x1f V188
0x24f: V196 = DIV V195 0x20
0x250: V197 = 0xf
0x252: V198 = MUL 0xf V196
0x253: V199 = 0x3
0x255: V200 = ADD 0x3 V198
0x256: V201 = CALL V200 0x4 0x0 0x80 V188 V187 V188
0x25c: V202 = ADD V188 V187
0x25e: V203 = 0x1f
0x260: V204 = AND 0x1f V188
0x262: V205 = ISZERO V204
0x263: V206 = 0x280
0x266: JUMPI 0x280 V205
---
Entry stack: [V10, 0x220, 0x60]
Stack pops: 1
Stack additions: [S0, V181, V181, V202, V204]
Exit stack: [V10, 0x220, 0x60, V181, V181, V202, V204]

================================

Block 0x267
[0x267:0x27f]
---
Predecessors: [0x220]
Successors: [0x280]
---
0x267 DUP1
0x268 DUP3
0x269 SUB
0x26a DUP1
0x26b MLOAD
0x26c PUSH1 0x1
0x26e DUP4
0x26f PUSH1 0x20
0x271 SUB
0x272 PUSH2 0x100
0x275 EXP
0x276 SUB
0x277 NOT
0x278 AND
0x279 DUP2
0x27a MSTORE
0x27b PUSH1 0x20
0x27d ADD
0x27e SWAP2
0x27f POP
---
0x269: V207 = SUB V202 V204
0x26b: V208 = M[V207]
0x26c: V209 = 0x1
0x26f: V210 = 0x20
0x271: V211 = SUB 0x20 V204
0x272: V212 = 0x100
0x275: V213 = EXP 0x100 V211
0x276: V214 = SUB V213 0x1
0x277: V215 = NOT V214
0x278: V216 = AND V215 V208
0x27a: M[V207] = V216
0x27b: V217 = 0x20
0x27d: V218 = ADD 0x20 V207
---
Entry stack: [V10, 0x220, 0x60, V181, V181, V202, V204]
Stack pops: 2
Stack additions: [V218, S0]
Exit stack: [V10, 0x220, 0x60, V181, V181, V218, V204]

================================

Block 0x280
[0x280:0x28d]
---
Predecessors: [0x220, 0x267]
Successors: []
---
0x280 JUMPDEST
0x281 POP
0x282 SWAP3
0x283 POP
0x284 POP
0x285 POP
0x286 PUSH1 0x40
0x288 MLOAD
0x289 DUP1
0x28a SWAP2
0x28b SUB
0x28c SWAP1
0x28d RETURN
---
0x280: JUMPDEST 
0x286: V219 = 0x40
0x288: V220 = M[0x40]
0x28b: V221 = SUB S1 V220
0x28d: RETURN V220 V221
---
Entry stack: [V10, 0x220, 0x60, V181, V181, S1, V204]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x220]

================================

Block 0x28e
[0x28e:0x2b1]
---
Predecessors: [0x1e2]
Successors: []
---
0x28e JUMPDEST
0x28f PUSH1 0x40
0x291 MLOAD
0x292 DUP1
0x293 DUP3
0x294 PUSH2 0x280
0x297 DUP1
0x298 DUP4
0x299 DUP2
0x29a DUP5
0x29b PUSH1 0x0
0x29d PUSH1 0x4
0x29f PUSH2 0x12f
0x2a2 CALL
0x2a3 POP
0x2a4 SWAP1
0x2a5 POP
0x2a6 ADD
0x2a7 SWAP2
0x2a8 POP
0x2a9 POP
0x2aa PUSH1 0x40
0x2ac MLOAD
0x2ad DUP1
0x2ae SWAP2
0x2af SUB
0x2b0 SWAP1
0x2b1 RETURN
---
0x28e: JUMPDEST 
0x28f: V222 = 0x40
0x291: V223 = M[0x40]
0x294: V224 = 0x280
0x29b: V225 = 0x0
0x29d: V226 = 0x4
0x29f: V227 = 0x12f
0x2a2: V228 = CALL 0x12f 0x4 0x0 V146 0x280 V223 0x280
0x2a6: V229 = ADD 0x280 V223
0x2aa: V230 = 0x40
0x2ac: V231 = M[0x40]
0x2af: V232 = SUB V229 V231
0x2b1: RETURN V231 V232
---
Entry stack: [V10, V146]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x2b2
[0x2b2:0x2d3]
---
Predecessors: [0x1f5]
Successors: [0x82]
---
0x2b2 JUMPDEST
0x2b3 PUSH1 0x0
0x2b5 DUP1
0x2b6 SLOAD
0x2b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2cc NOT
0x2cd AND
0x2ce DUP3
0x2cf OR
0x2d0 SWAP1
0x2d1 SSTORE
0x2d2 POP
0x2d3 JUMP
---
0x2b2: JUMPDEST 
0x2b3: V233 = 0x0
0x2b6: V234 = S[0x0]
0x2b7: V235 = 0xffffffffffffffffffffffffffffffffffffffff
0x2cc: V236 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2cd: V237 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V234
0x2cf: V238 = OR V164 V237
0x2d1: S[0x0] = V238
0x2d3: JUMP 0x82
---
Entry stack: [V10, 0x82, V164]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x2d4
[0x2d4:0x2e1]
---
Predecessors: [0xa5]
Successors: []
---
0x2d4 JUMPDEST
0x2d5 PUSH1 0x0
0x2d7 SLOAD
0x2d8 PUSH1 0x1
0x2da PUSH1 0xa0
0x2dc PUSH1 0x2
0x2de EXP
0x2df SUB
0x2e0 AND
0x2e1 SELFDESTRUCT
---
0x2d4: JUMPDEST 
0x2d5: V239 = 0x0
0x2d7: V240 = S[0x0]
0x2d8: V241 = 0x1
0x2da: V242 = 0xa0
0x2dc: V243 = 0x2
0x2de: V244 = EXP 0x2 0xa0
0x2df: V245 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2e0: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff V240
0x2e1: SELFDESTRUCT V246
---
Entry stack: [V10, 0x82]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x82]

================================

Block 0x2e2
[0x2e2:0x2ef]
---
Predecessors: [0x164]
Successors: [0x2f0]
---
0x2e2 JUMPDEST
0x2e3 DUP3
0x2e4 ADD
0x2e5 SWAP2
0x2e6 SWAP1
0x2e7 PUSH1 0x0
0x2e9 MSTORE
0x2ea PUSH1 0x20
0x2ec PUSH1 0x0
0x2ee SHA3
0x2ef SWAP1
---
0x2e2: JUMPDEST 
0x2e4: V247 = ADD 0x80 V104
0x2e7: V248 = 0x0
0x2e9: M[0x0] = 0x1
0x2ea: V249 = 0x20
0x2ec: V250 = 0x0
0x2ee: V251 = SHA3 0x0 0x20
---
Entry stack: [V10, 0x220, 0x60, 0x1, V104, 0x80, 0x1, V104]
Stack pops: 3
Stack additions: [V247, V251, S2]
Exit stack: [V10, 0x220, 0x60, 0x1, V104, V247, V251, 0x80]

================================

Block 0x2f0
[0x2f0:0x303]
---
Predecessors: [0x2e2, 0x2f0]
Successors: [0x2f0, 0x304]
---
0x2f0 JUMPDEST
0x2f1 DUP2
0x2f2 SLOAD
0x2f3 DUP2
0x2f4 MSTORE
0x2f5 SWAP1
0x2f6 PUSH1 0x1
0x2f8 ADD
0x2f9 SWAP1
0x2fa PUSH1 0x20
0x2fc ADD
0x2fd DUP1
0x2fe DUP4
0x2ff GT
0x300 PUSH2 0x2f0
0x303 JUMPI
---
0x2f0: JUMPDEST 
0x2f2: V252 = S[S1]
0x2f4: M[S0] = V252
0x2f6: V253 = 0x1
0x2f8: V254 = ADD 0x1 S1
0x2fa: V255 = 0x20
0x2fc: V256 = ADD 0x20 S0
0x2ff: V257 = GT V247 V256
0x300: V258 = 0x2f0
0x303: JUMPI 0x2f0 V257
---
Entry stack: [V10, 0x220, 0x60, 0x1, V104, V247, S1, S0]
Stack pops: 3
Stack additions: [S2, V254, V256]
Exit stack: [V10, 0x220, 0x60, 0x1, V104, V247, V254, V256]

================================

Block 0x304
[0x304:0x30c]
---
Predecessors: [0x2f0]
Successors: [0x30d]
---
0x304 DUP3
0x305 SWAP1
0x306 SUB
0x307 PUSH1 0x1f
0x309 AND
0x30a DUP3
0x30b ADD
0x30c SWAP2
---
0x306: V259 = SUB V256 V247
0x307: V260 = 0x1f
0x309: V261 = AND 0x1f V259
0x30b: V262 = ADD V247 V261
---
Entry stack: [V10, 0x220, 0x60, 0x1, V104, V247, V254, V256]
Stack pops: 3
Stack additions: [V262, S1, S2]
Exit stack: [V10, 0x220, 0x60, 0x1, V104, V262, V254, V247]

================================

Block 0x30d
[0x30d:0x314]
---
Predecessors: [0x123, 0x16c, 0x304]
Successors: [0x220]
---
0x30d JUMPDEST
0x30e POP
0x30f POP
0x310 POP
0x311 POP
0x312 POP
0x313 DUP2
0x314 JUMP
---
0x30d: JUMPDEST 
0x314: JUMP 0x220
---
Entry stack: [V10, 0x220, 0x60, 0x1, V104, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V10, 0x220, 0x60]

================================

Function 0:
Public function signature: 0x553d604
Entry block: 0x84
Exit block: 0x216
Body: 0x84, 0x216

Function 1:
Public function signature: 0x39425eb1
Entry block: 0x8d
Exit block: 0x216
Body: 0x8d, 0xa0, 0x216

Function 2:
Public function signature: 0x41c0e1b5
Entry block: 0xa5
Exit block: 0xbf
Body: 0xa5, 0xbf, 0x2d4

Function 3:
Public function signature: 0x5d91526d
Entry block: 0xc3
Exit block: 0x82
Body: 0x82, 0xc3

Function 4:
Public function signature: 0x646989d9
Entry block: 0x11a
Exit block: 0x216
Body: 0x11a, 0x216

Function 5:
Public function signature: 0x7f7650eb
Entry block: 0x123
Exit block: 0x280
Body: 0x123, 0x164, 0x16c, 0x220, 0x267, 0x280, 0x2e2, 0x2f0, 0x304, 0x30d

Function 6:
Public function signature: 0x8da5cb5b
Entry block: 0x17f
Exit block: 0x216
Body: 0x17f, 0x216

Function 7:
Public function signature: 0x91e44e26
Entry block: 0x191
Exit block: 0x28e
Body: 0x191, 0x1a0, 0x1b3, 0x1cb, 0x1e2, 0x28e

Function 8:
Public function signature: 0xda67875c
Entry block: 0x1ec
Exit block: 0x216
Body: 0x1ec, 0x216

Function 9:
Public function signature: 0xf2fde38b
Entry block: 0x1f5
Exit block: 0x82
Body: 0x82, 0x1f5, 0x212, 0x2b2

Function 10:
Public fallback function
Entry block: 0x82
Exit block: 0x82
Body: 0x82

