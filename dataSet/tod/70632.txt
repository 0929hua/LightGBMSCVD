Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x56]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x56
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x56
0xc: JUMPI 0x56 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x58]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x1c575f7f
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x58
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x1c575f7f
0x3b: V13 = EQ V11 0x1c575f7f
0x3c: V14 = 0x58
0x3f: JUMPI 0x58 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x6d]
---
0x40 DUP1
0x41 PUSH4 0x5fc2cb39
0x46 EQ
0x47 PUSH2 0x6d
0x4a JUMPI
---
0x41: V15 = 0x5fc2cb39
0x46: V16 = EQ 0x5fc2cb39 V11
0x47: V17 = 0x6d
0x4a: JUMPI 0x6d V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x87]
---
0x4b DUP1
0x4c PUSH4 0xa78bcf6e
0x51 EQ
0x52 PUSH2 0x87
0x55 JUMPI
---
0x4c: V18 = 0xa78bcf6e
0x51: V19 = EQ 0xa78bcf6e V11
0x52: V20 = 0x87
0x55: JUMPI 0x87 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x57]
---
Predecessors: [0x0, 0x4b, 0xf9, 0x2b9, 0x321]
Successors: []
---
0x56 JUMPDEST
0x57 STOP
---
0x56: JUMPDEST 
0x57: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x58
[0x58:0x5f]
---
Predecessors: [0xd]
Successors: [0x60, 0x64]
---
0x58 JUMPDEST
0x59 CALLVALUE
0x5a DUP1
0x5b ISZERO
0x5c PUSH2 0x64
0x5f JUMPI
---
0x58: JUMPDEST 
0x59: V21 = CALLVALUE
0x5b: V22 = ISZERO V21
0x5c: V23 = 0x64
0x5f: JUMPI 0x64 V22
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V21]
Exit stack: [V11, V21]

================================

Block 0x60
[0x60:0x63]
---
Predecessors: [0x58]
Successors: []
---
0x60 PUSH1 0x0
0x62 DUP1
0x63 REVERT
---
0x60: V24 = 0x0
0x63: REVERT 0x0 0x0
---
Entry stack: [V11, V21]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V21]

================================

Block 0x64
[0x64:0x6c]
---
Predecessors: [0x58]
Successors: [0xa8]
---
0x64 JUMPDEST
0x65 POP
0x66 PUSH2 0x56
0x69 PUSH2 0xa8
0x6c JUMP
---
0x64: JUMPDEST 
0x66: V25 = 0x56
0x69: V26 = 0xa8
0x6c: JUMP 0xa8
---
Entry stack: [V11, V21]
Stack pops: 1
Stack additions: [0x56]
Exit stack: [V11, 0x56]

================================

Block 0x6d
[0x6d:0x86]
---
Predecessors: [0x40]
Successors: [0xfc]
---
0x6d JUMPDEST
0x6e PUSH2 0x56
0x71 PUSH1 0x1
0x73 PUSH1 0xa0
0x75 PUSH1 0x2
0x77 EXP
0x78 SUB
0x79 PUSH1 0x4
0x7b CALLDATALOAD
0x7c AND
0x7d PUSH1 0xff
0x7f PUSH1 0x24
0x81 CALLDATALOAD
0x82 AND
0x83 PUSH2 0xfc
0x86 JUMP
---
0x6d: JUMPDEST 
0x6e: V27 = 0x56
0x71: V28 = 0x1
0x73: V29 = 0xa0
0x75: V30 = 0x2
0x77: V31 = EXP 0x2 0xa0
0x78: V32 = SUB 0x10000000000000000000000000000000000000000 0x1
0x79: V33 = 0x4
0x7b: V34 = CALLDATALOAD 0x4
0x7c: V35 = AND V34 0xffffffffffffffffffffffffffffffffffffffff
0x7d: V36 = 0xff
0x7f: V37 = 0x24
0x81: V38 = CALLDATALOAD 0x24
0x82: V39 = AND V38 0xff
0x83: V40 = 0xfc
0x86: JUMP 0xfc
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x56, V35, V39]
Exit stack: [V11, 0x56, V35, V39]

================================

Block 0x87
[0x87:0x8e]
---
Predecessors: [0x4b]
Successors: [0x8f, 0x93]
---
0x87 JUMPDEST
0x88 CALLVALUE
0x89 DUP1
0x8a ISZERO
0x8b PUSH2 0x93
0x8e JUMPI
---
0x87: JUMPDEST 
0x88: V41 = CALLVALUE
0x8a: V42 = ISZERO V41
0x8b: V43 = 0x93
0x8e: JUMPI 0x93 V42
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V41]
Exit stack: [V11, V41]

================================

Block 0x8f
[0x8f:0x92]
---
Predecessors: [0x87]
Successors: []
---
0x8f PUSH1 0x0
0x91 DUP1
0x92 REVERT
---
0x8f: V44 = 0x0
0x92: REVERT 0x0 0x0
---
Entry stack: [V11, V41]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V41]

================================

Block 0x93
[0x93:0xa7]
---
Predecessors: [0x87]
Successors: [0x30a]
---
0x93 JUMPDEST
0x94 POP
0x95 PUSH2 0x56
0x98 PUSH1 0x1
0x9a PUSH1 0xa0
0x9c PUSH1 0x2
0x9e EXP
0x9f SUB
0xa0 PUSH1 0x4
0xa2 CALLDATALOAD
0xa3 AND
0xa4 PUSH2 0x30a
0xa7 JUMP
---
0x93: JUMPDEST 
0x95: V45 = 0x56
0x98: V46 = 0x1
0x9a: V47 = 0xa0
0x9c: V48 = 0x2
0x9e: V49 = EXP 0x2 0xa0
0x9f: V50 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa0: V51 = 0x4
0xa2: V52 = CALLDATALOAD 0x4
0xa3: V53 = AND V52 0xffffffffffffffffffffffffffffffffffffffff
0xa4: V54 = 0x30a
0xa7: JUMP 0x30a
---
Entry stack: [V11, V41]
Stack pops: 1
Stack additions: [0x56, V53]
Exit stack: [V11, 0x56, V53]

================================

Block 0xa8
[0xa8:0xba]
---
Predecessors: [0x64]
Successors: [0xbb, 0xbf]
---
0xa8 JUMPDEST
0xa9 PUSH1 0x2
0xab SLOAD
0xac PUSH1 0x1
0xae PUSH1 0xa0
0xb0 PUSH1 0x2
0xb2 EXP
0xb3 SUB
0xb4 AND
0xb5 CALLER
0xb6 EQ
0xb7 PUSH2 0xbf
0xba JUMPI
---
0xa8: JUMPDEST 
0xa9: V55 = 0x2
0xab: V56 = S[0x2]
0xac: V57 = 0x1
0xae: V58 = 0xa0
0xb0: V59 = 0x2
0xb2: V60 = EXP 0x2 0xa0
0xb3: V61 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb4: V62 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0xb5: V63 = CALLER
0xb6: V64 = EQ V63 V62
0xb7: V65 = 0xbf
0xba: JUMPI 0xbf V64
---
Entry stack: [V11, 0x56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56]

================================

Block 0xbb
[0xbb:0xbe]
---
Predecessors: [0xa8]
Successors: []
---
0xbb PUSH1 0x0
0xbd DUP1
0xbe REVERT
---
0xbb: V66 = 0x0
0xbe: REVERT 0x0 0x0
---
Entry stack: [V11, 0x56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56]

================================

Block 0xbf
[0xbf:0xef]
---
Predecessors: [0xa8]
Successors: [0xf0, 0xf9]
---
0xbf JUMPDEST
0xc0 PUSH1 0x1
0xc2 SLOAD
0xc3 PUSH1 0x40
0xc5 MLOAD
0xc6 PUSH1 0x1
0xc8 PUSH1 0xa0
0xca PUSH1 0x2
0xcc EXP
0xcd SUB
0xce SWAP1
0xcf SWAP2
0xd0 AND
0xd1 SWAP1
0xd2 ADDRESS
0xd3 BALANCE
0xd4 DUP1
0xd5 ISZERO
0xd6 PUSH2 0x8fc
0xd9 MUL
0xda SWAP2
0xdb PUSH1 0x0
0xdd DUP2
0xde DUP2
0xdf DUP2
0xe0 DUP6
0xe1 DUP9
0xe2 DUP9
0xe3 CALL
0xe4 SWAP4
0xe5 POP
0xe6 POP
0xe7 POP
0xe8 POP
0xe9 ISZERO
0xea DUP1
0xeb ISZERO
0xec PUSH2 0xf9
0xef JUMPI
---
0xbf: JUMPDEST 
0xc0: V67 = 0x1
0xc2: V68 = S[0x1]
0xc3: V69 = 0x40
0xc5: V70 = M[0x40]
0xc6: V71 = 0x1
0xc8: V72 = 0xa0
0xca: V73 = 0x2
0xcc: V74 = EXP 0x2 0xa0
0xcd: V75 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd0: V76 = AND V68 0xffffffffffffffffffffffffffffffffffffffff
0xd2: V77 = ADDRESS
0xd3: V78 = BALANCE V77
0xd5: V79 = ISZERO V78
0xd6: V80 = 0x8fc
0xd9: V81 = MUL 0x8fc V79
0xdb: V82 = 0x0
0xe3: V83 = CALL V81 V76 V78 V70 0x0 V70 0x0
0xe9: V84 = ISZERO V83
0xeb: V85 = ISZERO V84
0xec: V86 = 0xf9
0xef: JUMPI 0xf9 V85
---
Entry stack: [V11, 0x56]
Stack pops: 0
Stack additions: [V84]
Exit stack: [V11, 0x56, V84]

================================

Block 0xf0
[0xf0:0xf8]
---
Predecessors: [0xbf]
Successors: []
---
0xf0 RETURNDATASIZE
0xf1 PUSH1 0x0
0xf3 DUP1
0xf4 RETURNDATACOPY
0xf5 RETURNDATASIZE
0xf6 PUSH1 0x0
0xf8 REVERT
---
0xf0: V87 = RETURNDATASIZE
0xf1: V88 = 0x0
0xf4: RETURNDATACOPY 0x0 0x0 V87
0xf5: V89 = RETURNDATASIZE
0xf6: V90 = 0x0
0xf8: REVERT 0x0 V89
---
Entry stack: [V11, 0x56, V84]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56, V84]

================================

Block 0xf9
[0xf9:0xfb]
---
Predecessors: [0xbf]
Successors: [0x56]
---
0xf9 JUMPDEST
0xfa POP
0xfb JUMP
---
0xf9: JUMPDEST 
0xfb: JUMP 0x56
---
Entry stack: [V11, 0x56, V84]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0xfc
[0xfc:0x15c]
---
Predecessors: [0x6d]
Successors: [0x15d, 0x161]
---
0xfc JUMPDEST
0xfd PUSH1 0x0
0xff DUP1
0x100 SLOAD
0x101 PUSH1 0x40
0x103 DUP1
0x104 MLOAD
0x105 PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x126 DUP2
0x127 MSTORE
0x128 CALLER
0x129 PUSH1 0x4
0x12b DUP3
0x12c ADD
0x12d MSTORE
0x12e SWAP1
0x12f MLOAD
0x130 DUP4
0x131 SWAP3
0x132 PUSH1 0x1
0x134 PUSH1 0xa0
0x136 PUSH1 0x2
0x138 EXP
0x139 SUB
0x13a AND
0x13b SWAP2
0x13c PUSH4 0x70a08231
0x141 SWAP2
0x142 PUSH1 0x24
0x144 DUP1
0x145 DUP4
0x146 ADD
0x147 SWAP3
0x148 PUSH1 0x20
0x14a SWAP3
0x14b SWAP2
0x14c SWAP1
0x14d DUP3
0x14e SWAP1
0x14f SUB
0x150 ADD
0x151 DUP2
0x152 DUP8
0x153 DUP8
0x154 DUP1
0x155 EXTCODESIZE
0x156 ISZERO
0x157 DUP1
0x158 ISZERO
0x159 PUSH2 0x161
0x15c JUMPI
---
0xfc: JUMPDEST 
0xfd: V91 = 0x0
0x100: V92 = S[0x0]
0x101: V93 = 0x40
0x104: V94 = M[0x40]
0x105: V95 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x127: M[V94] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x128: V96 = CALLER
0x129: V97 = 0x4
0x12c: V98 = ADD V94 0x4
0x12d: M[V98] = V96
0x12f: V99 = M[0x40]
0x132: V100 = 0x1
0x134: V101 = 0xa0
0x136: V102 = 0x2
0x138: V103 = EXP 0x2 0xa0
0x139: V104 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13a: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x13c: V106 = 0x70a08231
0x142: V107 = 0x24
0x146: V108 = ADD V94 0x24
0x148: V109 = 0x20
0x14f: V110 = SUB V94 V99
0x150: V111 = ADD V110 0x24
0x155: V112 = EXTCODESIZE V105
0x156: V113 = ISZERO V112
0x158: V114 = ISZERO V113
0x159: V115 = 0x161
0x15c: JUMPI 0x161 V114
---
Entry stack: [V11, 0x56, V35, V39]
Stack pops: 0
Stack additions: [0x0, 0x0, V105, 0x70a08231, V108, 0x20, V99, V111, V99, 0x0, V105, V113]
Exit stack: [V11, 0x56, V35, V39, 0x0, 0x0, V105, 0x70a08231, V108, 0x20, V99, V111, V99, 0x0, V105, V113]

================================

Block 0x15d
[0x15d:0x160]
---
Predecessors: [0xfc]
Successors: []
---
0x15d PUSH1 0x0
0x15f DUP1
0x160 REVERT
---
0x15d: V116 = 0x0
0x160: REVERT 0x0 0x0
---
Entry stack: [V11, 0x56, V35, V39, 0x0, 0x0, V105, 0x70a08231, V108, 0x20, V99, V111, V99, 0x0, V105, V113]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56, V35, V39, 0x0, 0x0, V105, 0x70a08231, V108, 0x20, V99, V111, V99, 0x0, V105, V113]

================================

Block 0x161
[0x161:0x16b]
---
Predecessors: [0xfc]
Successors: [0x16c, 0x175]
---
0x161 JUMPDEST
0x162 POP
0x163 GAS
0x164 CALL
0x165 ISZERO
0x166 DUP1
0x167 ISZERO
0x168 PUSH2 0x175
0x16b JUMPI
---
0x161: JUMPDEST 
0x163: V117 = GAS
0x164: V118 = CALL V117 V105 0x0 V99 V111 V99 0x20
0x165: V119 = ISZERO V118
0x167: V120 = ISZERO V119
0x168: V121 = 0x175
0x16b: JUMPI 0x175 V120
---
Entry stack: [V11, 0x56, V35, V39, 0x0, 0x0, V105, 0x70a08231, V108, 0x20, V99, V111, V99, 0x0, V105, V113]
Stack pops: 7
Stack additions: [V119]
Exit stack: [V11, 0x56, V35, V39, 0x0, 0x0, V105, 0x70a08231, V108, V119]

================================

Block 0x16c
[0x16c:0x174]
---
Predecessors: [0x161]
Successors: []
---
0x16c RETURNDATASIZE
0x16d PUSH1 0x0
0x16f DUP1
0x170 RETURNDATACOPY
0x171 RETURNDATASIZE
0x172 PUSH1 0x0
0x174 REVERT
---
0x16c: V122 = RETURNDATASIZE
0x16d: V123 = 0x0
0x170: RETURNDATACOPY 0x0 0x0 V122
0x171: V124 = RETURNDATASIZE
0x172: V125 = 0x0
0x174: REVERT 0x0 V124
---
Entry stack: [V11, 0x56, V35, V39, 0x0, 0x0, V105, 0x70a08231, V108, V119]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56, V35, V39, 0x0, 0x0, V105, 0x70a08231, V108, V119]

================================

Block 0x175
[0x175:0x186]
---
Predecessors: [0x161]
Successors: [0x187, 0x18b]
---
0x175 JUMPDEST
0x176 POP
0x177 POP
0x178 POP
0x179 POP
0x17a PUSH1 0x40
0x17c MLOAD
0x17d RETURNDATASIZE
0x17e PUSH1 0x20
0x180 DUP2
0x181 LT
0x182 ISZERO
0x183 PUSH2 0x18b
0x186 JUMPI
---
0x175: JUMPDEST 
0x17a: V126 = 0x40
0x17c: V127 = M[0x40]
0x17d: V128 = RETURNDATASIZE
0x17e: V129 = 0x20
0x181: V130 = LT V128 0x20
0x182: V131 = ISZERO V130
0x183: V132 = 0x18b
0x186: JUMPI 0x18b V131
---
Entry stack: [V11, 0x56, V35, V39, 0x0, 0x0, V105, 0x70a08231, V108, V119]
Stack pops: 4
Stack additions: [V127, V128]
Exit stack: [V11, 0x56, V35, V39, 0x0, 0x0, V127, V128]

================================

Block 0x187
[0x187:0x18a]
---
Predecessors: [0x175]
Successors: []
---
0x187 PUSH1 0x0
0x189 DUP1
0x18a REVERT
---
0x187: V133 = 0x0
0x18a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x56, V35, V39, 0x0, 0x0, V127, V128]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56, V35, V39, 0x0, 0x0, V127, V128]

================================

Block 0x18b
[0x18b:0x20c]
---
Predecessors: [0x175]
Successors: [0x20d, 0x211]
---
0x18b JUMPDEST
0x18c POP
0x18d MLOAD
0x18e PUSH1 0x0
0x190 DUP1
0x191 SLOAD
0x192 PUSH1 0x40
0x194 DUP1
0x195 MLOAD
0x196 PUSH32 0x627aa6d200000000000000000000000000000000000000000000000000000000
0x1b7 DUP2
0x1b8 MSTORE
0x1b9 PUSH1 0x1
0x1bb PUSH1 0xa0
0x1bd PUSH1 0x2
0x1bf EXP
0x1c0 SUB
0x1c1 DUP10
0x1c2 DUP2
0x1c3 AND
0x1c4 PUSH1 0x4
0x1c6 DUP4
0x1c7 ADD
0x1c8 MSTORE
0x1c9 CALLER
0x1ca PUSH1 0x24
0x1cc DUP4
0x1cd ADD
0x1ce MSTORE
0x1cf PUSH1 0xff
0x1d1 DUP10
0x1d2 AND
0x1d3 PUSH1 0x64
0x1d5 DUP4
0x1d6 ADD
0x1d7 MSTORE
0x1d8 PUSH1 0x80
0x1da PUSH1 0x44
0x1dc DUP4
0x1dd ADD
0x1de MSTORE
0x1df PUSH1 0x84
0x1e1 DUP3
0x1e2 ADD
0x1e3 DUP6
0x1e4 SWAP1
0x1e5 MSTORE
0x1e6 SWAP2
0x1e7 MLOAD
0x1e8 SWAP5
0x1e9 SWAP7
0x1ea POP
0x1eb SWAP2
0x1ec AND
0x1ed SWAP3
0x1ee PUSH4 0x627aa6d2
0x1f3 SWAP3
0x1f4 CALLVALUE
0x1f5 SWAP3
0x1f6 PUSH1 0xc4
0x1f8 DUP1
0x1f9 DUP3
0x1fa ADD
0x1fb SWAP4
0x1fc SWAP2
0x1fd DUP3
0x1fe SWAP1
0x1ff SUB
0x200 ADD
0x201 DUP2
0x202 DUP6
0x203 DUP9
0x204 DUP1
0x205 EXTCODESIZE
0x206 ISZERO
0x207 DUP1
0x208 ISZERO
0x209 PUSH2 0x211
0x20c JUMPI
---
0x18b: JUMPDEST 
0x18d: V134 = M[V127]
0x18e: V135 = 0x0
0x191: V136 = S[0x0]
0x192: V137 = 0x40
0x195: V138 = M[0x40]
0x196: V139 = 0x627aa6d200000000000000000000000000000000000000000000000000000000
0x1b8: M[V138] = 0x627aa6d200000000000000000000000000000000000000000000000000000000
0x1b9: V140 = 0x1
0x1bb: V141 = 0xa0
0x1bd: V142 = 0x2
0x1bf: V143 = EXP 0x2 0xa0
0x1c0: V144 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c3: V145 = AND 0xffffffffffffffffffffffffffffffffffffffff V35
0x1c4: V146 = 0x4
0x1c7: V147 = ADD V138 0x4
0x1c8: M[V147] = V145
0x1c9: V148 = CALLER
0x1ca: V149 = 0x24
0x1cd: V150 = ADD V138 0x24
0x1ce: M[V150] = V148
0x1cf: V151 = 0xff
0x1d2: V152 = AND V39 0xff
0x1d3: V153 = 0x64
0x1d6: V154 = ADD V138 0x64
0x1d7: M[V154] = V152
0x1d8: V155 = 0x80
0x1da: V156 = 0x44
0x1dd: V157 = ADD V138 0x44
0x1de: M[V157] = 0x80
0x1df: V158 = 0x84
0x1e2: V159 = ADD V138 0x84
0x1e5: M[V159] = 0x0
0x1e7: V160 = M[0x40]
0x1ec: V161 = AND V136 0xffffffffffffffffffffffffffffffffffffffff
0x1ee: V162 = 0x627aa6d2
0x1f4: V163 = CALLVALUE
0x1f6: V164 = 0xc4
0x1fa: V165 = ADD V138 0xc4
0x1ff: V166 = SUB V138 V160
0x200: V167 = ADD V166 0xc4
0x205: V168 = EXTCODESIZE V161
0x206: V169 = ISZERO V168
0x208: V170 = ISZERO V169
0x209: V171 = 0x211
0x20c: JUMPI 0x211 V170
---
Entry stack: [V11, 0x56, V35, V39, 0x0, 0x0, V127, V128]
Stack pops: 6
Stack additions: [S5, S4, V134, S2, V161, 0x627aa6d2, V163, V165, 0x0, V160, V167, V160, V163, V161, V169]
Exit stack: [V11, 0x56, V35, V39, V134, 0x0, V161, 0x627aa6d2, V163, V165, 0x0, V160, V167, V160, V163, V161, V169]

================================

Block 0x20d
[0x20d:0x210]
---
Predecessors: [0x18b]
Successors: []
---
0x20d PUSH1 0x0
0x20f DUP1
0x210 REVERT
---
0x20d: V172 = 0x0
0x210: REVERT 0x0 0x0
---
Entry stack: [V11, 0x56, V35, V39, V134, 0x0, V161, 0x627aa6d2, V163, V165, 0x0, V160, V167, V160, V163, V161, V169]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56, V35, V39, V134, 0x0, V161, 0x627aa6d2, V163, V165, 0x0, V160, V167, V160, V163, V161, V169]

================================

Block 0x211
[0x211:0x21b]
---
Predecessors: [0x18b]
Successors: [0x21c, 0x225]
---
0x211 JUMPDEST
0x212 POP
0x213 GAS
0x214 CALL
0x215 ISZERO
0x216 DUP1
0x217 ISZERO
0x218 PUSH2 0x225
0x21b JUMPI
---
0x211: JUMPDEST 
0x213: V173 = GAS
0x214: V174 = CALL V173 V161 V163 V160 V167 V160 0x0
0x215: V175 = ISZERO V174
0x217: V176 = ISZERO V175
0x218: V177 = 0x225
0x21b: JUMPI 0x225 V176
---
Entry stack: [V11, 0x56, V35, V39, V134, 0x0, V161, 0x627aa6d2, V163, V165, 0x0, V160, V167, V160, V163, V161, V169]
Stack pops: 7
Stack additions: [V175]
Exit stack: [V11, 0x56, V35, V39, V134, 0x0, V161, 0x627aa6d2, V163, V165, V175]

================================

Block 0x21c
[0x21c:0x224]
---
Predecessors: [0x211]
Successors: []
---
0x21c RETURNDATASIZE
0x21d PUSH1 0x0
0x21f DUP1
0x220 RETURNDATACOPY
0x221 RETURNDATASIZE
0x222 PUSH1 0x0
0x224 REVERT
---
0x21c: V178 = RETURNDATASIZE
0x21d: V179 = 0x0
0x220: RETURNDATACOPY 0x0 0x0 V178
0x221: V180 = RETURNDATASIZE
0x222: V181 = 0x0
0x224: REVERT 0x0 V180
---
Entry stack: [V11, 0x56, V35, V39, V134, 0x0, V161, 0x627aa6d2, V163, V165, V175]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56, V35, V39, V134, 0x0, V161, 0x627aa6d2, V163, V165, V175]

================================

Block 0x225
[0x225:0x28a]
---
Predecessors: [0x211]
Successors: [0x28b, 0x28f]
---
0x225 JUMPDEST
0x226 POP
0x227 POP
0x228 PUSH1 0x0
0x22a DUP1
0x22b SLOAD
0x22c PUSH1 0x40
0x22e DUP1
0x22f MLOAD
0x230 PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000
0x251 DUP2
0x252 MSTORE
0x253 CALLER
0x254 PUSH1 0x4
0x256 DUP3
0x257 ADD
0x258 MSTORE
0x259 SWAP1
0x25a MLOAD
0x25b PUSH1 0x1
0x25d PUSH1 0xa0
0x25f PUSH1 0x2
0x261 EXP
0x262 SUB
0x263 SWAP1
0x264 SWAP3
0x265 AND
0x266 SWAP6
0x267 POP
0x268 PUSH4 0x70a08231
0x26d SWAP5
0x26e POP
0x26f PUSH1 0x24
0x271 DUP1
0x272 DUP3
0x273 ADD
0x274 SWAP5
0x275 POP
0x276 PUSH1 0x20
0x278 SWAP4
0x279 SWAP2
0x27a DUP4
0x27b SWAP1
0x27c SUB
0x27d ADD
0x27e SWAP1
0x27f DUP3
0x280 SWAP1
0x281 DUP8
0x282 DUP1
0x283 EXTCODESIZE
0x284 ISZERO
0x285 DUP1
0x286 ISZERO
0x287 PUSH2 0x28f
0x28a JUMPI
---
0x225: JUMPDEST 
0x228: V182 = 0x0
0x22b: V183 = S[0x0]
0x22c: V184 = 0x40
0x22f: V185 = M[0x40]
0x230: V186 = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x252: M[V185] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x253: V187 = CALLER
0x254: V188 = 0x4
0x257: V189 = ADD V185 0x4
0x258: M[V189] = V187
0x25a: V190 = M[0x40]
0x25b: V191 = 0x1
0x25d: V192 = 0xa0
0x25f: V193 = 0x2
0x261: V194 = EXP 0x2 0xa0
0x262: V195 = SUB 0x10000000000000000000000000000000000000000 0x1
0x265: V196 = AND V183 0xffffffffffffffffffffffffffffffffffffffff
0x268: V197 = 0x70a08231
0x26f: V198 = 0x24
0x273: V199 = ADD V185 0x24
0x276: V200 = 0x20
0x27c: V201 = SUB V185 V190
0x27d: V202 = ADD V201 0x24
0x283: V203 = EXTCODESIZE V196
0x284: V204 = ISZERO V203
0x286: V205 = ISZERO V204
0x287: V206 = 0x28f
0x28a: JUMPI 0x28f V205
---
Entry stack: [V11, 0x56, V35, V39, V134, 0x0, V161, 0x627aa6d2, V163, V165, V175]
Stack pops: 5
Stack additions: [V196, 0x70a08231, V199, 0x20, V190, V202, V190, 0x0, V196, V204]
Exit stack: [V11, 0x56, V35, V39, V134, 0x0, V196, 0x70a08231, V199, 0x20, V190, V202, V190, 0x0, V196, V204]

================================

Block 0x28b
[0x28b:0x28e]
---
Predecessors: [0x225]
Successors: []
---
0x28b PUSH1 0x0
0x28d DUP1
0x28e REVERT
---
0x28b: V207 = 0x0
0x28e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x56, V35, V39, V134, 0x0, V196, 0x70a08231, V199, 0x20, V190, V202, V190, 0x0, V196, V204]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56, V35, V39, V134, 0x0, V196, 0x70a08231, V199, 0x20, V190, V202, V190, 0x0, V196, V204]

================================

Block 0x28f
[0x28f:0x299]
---
Predecessors: [0x225]
Successors: [0x29a, 0x2a3]
---
0x28f JUMPDEST
0x290 POP
0x291 GAS
0x292 CALL
0x293 ISZERO
0x294 DUP1
0x295 ISZERO
0x296 PUSH2 0x2a3
0x299 JUMPI
---
0x28f: JUMPDEST 
0x291: V208 = GAS
0x292: V209 = CALL V208 V196 0x0 V190 V202 V190 0x20
0x293: V210 = ISZERO V209
0x295: V211 = ISZERO V210
0x296: V212 = 0x2a3
0x299: JUMPI 0x2a3 V211
---
Entry stack: [V11, 0x56, V35, V39, V134, 0x0, V196, 0x70a08231, V199, 0x20, V190, V202, V190, 0x0, V196, V204]
Stack pops: 7
Stack additions: [V210]
Exit stack: [V11, 0x56, V35, V39, V134, 0x0, V196, 0x70a08231, V199, V210]

================================

Block 0x29a
[0x29a:0x2a2]
---
Predecessors: [0x28f]
Successors: []
---
0x29a RETURNDATASIZE
0x29b PUSH1 0x0
0x29d DUP1
0x29e RETURNDATACOPY
0x29f RETURNDATASIZE
0x2a0 PUSH1 0x0
0x2a2 REVERT
---
0x29a: V213 = RETURNDATASIZE
0x29b: V214 = 0x0
0x29e: RETURNDATACOPY 0x0 0x0 V213
0x29f: V215 = RETURNDATASIZE
0x2a0: V216 = 0x0
0x2a2: REVERT 0x0 V215
---
Entry stack: [V11, 0x56, V35, V39, V134, 0x0, V196, 0x70a08231, V199, V210]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56, V35, V39, V134, 0x0, V196, 0x70a08231, V199, V210]

================================

Block 0x2a3
[0x2a3:0x2b4]
---
Predecessors: [0x28f]
Successors: [0x2b5, 0x2b9]
---
0x2a3 JUMPDEST
0x2a4 POP
0x2a5 POP
0x2a6 POP
0x2a7 POP
0x2a8 PUSH1 0x40
0x2aa MLOAD
0x2ab RETURNDATASIZE
0x2ac PUSH1 0x20
0x2ae DUP2
0x2af LT
0x2b0 ISZERO
0x2b1 PUSH2 0x2b9
0x2b4 JUMPI
---
0x2a3: JUMPDEST 
0x2a8: V217 = 0x40
0x2aa: V218 = M[0x40]
0x2ab: V219 = RETURNDATASIZE
0x2ac: V220 = 0x20
0x2af: V221 = LT V219 0x20
0x2b0: V222 = ISZERO V221
0x2b1: V223 = 0x2b9
0x2b4: JUMPI 0x2b9 V222
---
Entry stack: [V11, 0x56, V35, V39, V134, 0x0, V196, 0x70a08231, V199, V210]
Stack pops: 4
Stack additions: [V218, V219]
Exit stack: [V11, 0x56, V35, V39, V134, 0x0, V218, V219]

================================

Block 0x2b5
[0x2b5:0x2b8]
---
Predecessors: [0x2a3]
Successors: []
---
0x2b5 PUSH1 0x0
0x2b7 DUP1
0x2b8 REVERT
---
0x2b5: V224 = 0x0
0x2b8: REVERT 0x0 0x0
---
Entry stack: [V11, 0x56, V35, V39, V134, 0x0, V218, V219]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56, V35, V39, V134, 0x0, V218, V219]

================================

Block 0x2b9
[0x2b9:0x309]
---
Predecessors: [0x2a3]
Successors: [0x56]
---
0x2b9 JUMPDEST
0x2ba POP
0x2bb MLOAD
0x2bc PUSH1 0x40
0x2be DUP1
0x2bf MLOAD
0x2c0 CALLVALUE
0x2c1 DUP2
0x2c2 MSTORE
0x2c3 DUP5
0x2c4 DUP4
0x2c5 SUB
0x2c6 PUSH1 0x20
0x2c8 DUP3
0x2c9 ADD
0x2ca MSTORE
0x2cb DUP2
0x2cc MLOAD
0x2cd SWAP3
0x2ce SWAP4
0x2cf POP
0x2d0 PUSH1 0x1
0x2d2 PUSH1 0xa0
0x2d4 PUSH1 0x2
0x2d6 EXP
0x2d7 SUB
0x2d8 DUP8
0x2d9 AND
0x2da SWAP3
0x2db CALLER
0x2dc SWAP3
0x2dd PUSH32 0x22c0d992e4d873a3748436d960d5140c1f9721cf73f7ca5ec679d3d9f4fe2d5
0x2fe SWAP3
0x2ff DUP3
0x300 SWAP1
0x301 SUB
0x302 ADD
0x303 SWAP1
0x304 LOG3
0x305 POP
0x306 POP
0x307 POP
0x308 POP
0x309 JUMP
---
0x2b9: JUMPDEST 
0x2bb: V225 = M[V218]
0x2bc: V226 = 0x40
0x2bf: V227 = M[0x40]
0x2c0: V228 = CALLVALUE
0x2c2: M[V227] = V228
0x2c5: V229 = SUB V225 V134
0x2c6: V230 = 0x20
0x2c9: V231 = ADD V227 0x20
0x2ca: M[V231] = V229
0x2cc: V232 = M[0x40]
0x2d0: V233 = 0x1
0x2d2: V234 = 0xa0
0x2d4: V235 = 0x2
0x2d6: V236 = EXP 0x2 0xa0
0x2d7: V237 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d9: V238 = AND V35 0xffffffffffffffffffffffffffffffffffffffff
0x2db: V239 = CALLER
0x2dd: V240 = 0x22c0d992e4d873a3748436d960d5140c1f9721cf73f7ca5ec679d3d9f4fe2d5
0x301: V241 = SUB V227 V232
0x302: V242 = ADD V241 0x40
0x304: LOG V232 V242 0x22c0d992e4d873a3748436d960d5140c1f9721cf73f7ca5ec679d3d9f4fe2d5 V239 V238
0x309: JUMP 0x56
---
Entry stack: [V11, 0x56, V35, V39, V134, 0x0, V218, V219]
Stack pops: 7
Stack additions: []
Exit stack: [V11]

================================

Block 0x30a
[0x30a:0x31c]
---
Predecessors: [0x93]
Successors: [0x31d, 0x321]
---
0x30a JUMPDEST
0x30b PUSH1 0x2
0x30d SLOAD
0x30e PUSH1 0x1
0x310 PUSH1 0xa0
0x312 PUSH1 0x2
0x314 EXP
0x315 SUB
0x316 AND
0x317 CALLER
0x318 EQ
0x319 PUSH2 0x321
0x31c JUMPI
---
0x30a: JUMPDEST 
0x30b: V243 = 0x2
0x30d: V244 = S[0x2]
0x30e: V245 = 0x1
0x310: V246 = 0xa0
0x312: V247 = 0x2
0x314: V248 = EXP 0x2 0xa0
0x315: V249 = SUB 0x10000000000000000000000000000000000000000 0x1
0x316: V250 = AND 0xffffffffffffffffffffffffffffffffffffffff V244
0x317: V251 = CALLER
0x318: V252 = EQ V251 V250
0x319: V253 = 0x321
0x31c: JUMPI 0x321 V252
---
Entry stack: [V11, 0x56, V53]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56, V53]

================================

Block 0x31d
[0x31d:0x320]
---
Predecessors: [0x30a]
Successors: []
---
0x31d PUSH1 0x0
0x31f DUP1
0x320 REVERT
---
0x31d: V254 = 0x0
0x320: REVERT 0x0 0x0
---
Entry stack: [V11, 0x56, V53]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56, V53]

================================

Block 0x321
[0x321:0x34f]
---
Predecessors: [0x30a]
Successors: [0x56]
---
0x321 JUMPDEST
0x322 PUSH1 0x1
0x324 DUP1
0x325 SLOAD
0x326 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x33b NOT
0x33c AND
0x33d PUSH1 0x1
0x33f PUSH1 0xa0
0x341 PUSH1 0x2
0x343 EXP
0x344 SUB
0x345 SWAP3
0x346 SWAP1
0x347 SWAP3
0x348 AND
0x349 SWAP2
0x34a SWAP1
0x34b SWAP2
0x34c OR
0x34d SWAP1
0x34e SSTORE
0x34f JUMP
---
0x321: JUMPDEST 
0x322: V255 = 0x1
0x325: V256 = S[0x1]
0x326: V257 = 0xffffffffffffffffffffffffffffffffffffffff
0x33b: V258 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x33c: V259 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V256
0x33d: V260 = 0x1
0x33f: V261 = 0xa0
0x341: V262 = 0x2
0x343: V263 = EXP 0x2 0xa0
0x344: V264 = SUB 0x10000000000000000000000000000000000000000 0x1
0x348: V265 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0x34c: V266 = OR V265 V259
0x34e: S[0x1] = V266
0x34f: JUMP 0x56
---
Entry stack: [V11, 0x56, V53]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x350
[0x350:0x386]
---
Predecessors: []
Successors: []
---
0x350 STOP
0x351 LOG1
0x352 PUSH6 0x627a7a723058
0x359 SHA3
0x35a PUSH11 0x2056e94c9e37d2e08129
0x366 MISSING 0xcc
0x367 SWAP1
0x368 PUSH11 0x519f27efae71be57c4949
0x374 SLOAD
0x375 PUSH17 0x72d36af10029
---
0x350: STOP 
0x351: LOG S0 S1 S2
0x352: V267 = 0x627a7a723058
0x359: V268 = SHA3 0x627a7a723058 S3
0x35a: V269 = 0x2056e94c9e37d2e08129
0x366: MISSING 0xcc
0x368: V270 = 0x519f27efae71be57c4949
0x374: V271 = S[0x519f27efae71be57c4949]
0x375: V272 = 0x72d36af10029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x2056e94c9e37d2e08129, V268, 0x72d36af10029, V271, S1, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x1c575f7f
Entry block: 0x58
Exit block: 0x56
Body: 0x56, 0x58, 0x60, 0x64, 0xa8, 0xbb, 0xbf, 0xf0, 0xf9

Function 1:
Public function signature: 0x5fc2cb39
Entry block: 0x6d
Exit block: 0x56
Body: 0x56, 0x6d, 0xfc, 0x15d, 0x161, 0x16c, 0x175, 0x187, 0x18b, 0x20d, 0x211, 0x21c, 0x225, 0x28b, 0x28f, 0x29a, 0x2a3, 0x2b5, 0x2b9

Function 2:
Public function signature: 0xa78bcf6e
Entry block: 0x87
Exit block: 0x56
Body: 0x56, 0x87, 0x8f, 0x93, 0x30a, 0x31d, 0x321

Function 3:
Public fallback function
Entry block: 0x56
Exit block: 0x56
Body: 0x56

