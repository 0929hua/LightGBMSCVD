Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x46]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x46
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x46
0xc: JUMPI 0x46 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3a]
---
Predecessors: [0x0]
Successors: [0x3b, 0x4b]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 DUP1
0x31 PUSH4 0x3f8f1ae4
0x36 EQ
0x37 PUSH2 0x4b
0x3a JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x31: V10 = 0x3f8f1ae4
0x36: V11 = EQ 0x3f8f1ae4 V9
0x37: V12 = 0x4b
0x3a: JUMPI 0x4b V11
---
Entry stack: []
Stack pops: 0
Stack additions: [V9]
Exit stack: [V9]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0xd]
Successors: [0x46, 0xd8]
---
0x3b DUP1
0x3c PUSH4 0x64cf0654
0x41 EQ
0x42 PUSH2 0xd8
0x45 JUMPI
---
0x3c: V13 = 0x64cf0654
0x41: V14 = EQ 0x64cf0654 V9
0x42: V15 = 0xd8
0x45: JUMPI 0xd8 V14
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x46
[0x46:0x4a]
---
Predecessors: [0x0, 0x3b]
Successors: []
---
0x46 JUMPDEST
0x47 PUSH1 0x0
0x49 DUP1
0x4a REVERT
---
0x46: JUMPDEST 
0x47: V16 = 0x0
0x4a: REVERT 0x0 0x0
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x4b
[0x4b:0x52]
---
Predecessors: [0xd]
Successors: [0x53, 0x57]
---
0x4b JUMPDEST
0x4c CALLVALUE
0x4d DUP1
0x4e ISZERO
0x4f PUSH2 0x57
0x52 JUMPI
---
0x4b: JUMPDEST 
0x4c: V17 = CALLVALUE
0x4e: V18 = ISZERO V17
0x4f: V19 = 0x57
0x52: JUMPI 0x57 V18
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V17]
Exit stack: [V9, V17]

================================

Block 0x53
[0x53:0x56]
---
Predecessors: [0x4b]
Successors: []
---
0x53 PUSH1 0x0
0x55 DUP1
0x56 REVERT
---
0x53: V20 = 0x0
0x56: REVERT 0x0 0x0
---
Entry stack: [V9, V17]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V17]

================================

Block 0x57
[0x57:0x5f]
---
Predecessors: [0x4b]
Successors: [0xe2]
---
0x57 JUMPDEST
0x58 POP
0x59 PUSH2 0x60
0x5c PUSH2 0xe2
0x5f JUMP
---
0x57: JUMPDEST 
0x59: V21 = 0x60
0x5c: V22 = 0xe2
0x5f: JUMP 0xe2
---
Entry stack: [V9, V17]
Stack pops: 1
Stack additions: [0x60]
Exit stack: [V9, 0x60]

================================

Block 0x60
[0x60:0x79]
---
Predecessors: [0x292]
Successors: [0x7a]
---
0x60 JUMPDEST
0x61 PUSH1 0x40
0x63 MLOAD
0x64 DUP1
0x65 DUP5
0x66 ISZERO
0x67 ISZERO
0x68 ISZERO
0x69 ISZERO
0x6a DUP2
0x6b MSTORE
0x6c PUSH1 0x20
0x6e ADD
0x6f DUP4
0x70 PUSH1 0x2
0x72 PUSH1 0x20
0x74 MUL
0x75 DUP1
0x76 DUP4
0x77 DUP4
0x78 PUSH1 0x0
---
0x60: JUMPDEST 
0x61: V23 = 0x40
0x63: V24 = M[0x40]
0x66: V25 = ISZERO V110
0x67: V26 = ISZERO V25
0x68: V27 = ISZERO V26
0x69: V28 = ISZERO V27
0x6b: M[V24] = V28
0x6c: V29 = 0x20
0x6e: V30 = ADD 0x20 V24
0x70: V31 = 0x2
0x72: V32 = 0x20
0x74: V33 = MUL 0x20 0x2
0x78: V34 = 0x0
---
Entry stack: [V9, V110, V117, V145]
Stack pops: 3
Stack additions: [S2, S1, S0, V24, V30, S1, 0x40, 0x40, V30, S1, 0x0]
Exit stack: [V9, V110, V117, V145, V24, V30, V117, 0x40, 0x40, V30, V117, 0x0]

================================

Block 0x7a
[0x7a:0x82]
---
Predecessors: [0x60, 0x83]
Successors: [0x83, 0x95]
---
0x7a JUMPDEST
0x7b DUP4
0x7c DUP2
0x7d LT
0x7e ISZERO
0x7f PUSH2 0x95
0x82 JUMPI
---
0x7a: JUMPDEST 
0x7d: V35 = LT S0 0x40
0x7e: V36 = ISZERO V35
0x7f: V37 = 0x95
0x82: JUMPI 0x95 V36
---
Entry stack: [V9, V110, V117, V145, V24, V30, V117, 0x40, 0x40, V30, V117, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V9, V110, V117, V145, V24, V30, V117, 0x40, 0x40, V30, V117, S0]

================================

Block 0x83
[0x83:0x94]
---
Predecessors: [0x7a]
Successors: [0x7a]
---
0x83 DUP1
0x84 DUP3
0x85 ADD
0x86 MLOAD
0x87 DUP2
0x88 DUP5
0x89 ADD
0x8a MSTORE
0x8b PUSH1 0x20
0x8d DUP2
0x8e ADD
0x8f SWAP1
0x90 POP
0x91 PUSH2 0x7a
0x94 JUMP
---
0x85: V38 = ADD V117 S0
0x86: V39 = M[V38]
0x89: V40 = ADD V30 S0
0x8a: M[V40] = V39
0x8b: V41 = 0x20
0x8e: V42 = ADD S0 0x20
0x91: V43 = 0x7a
0x94: JUMP 0x7a
---
Entry stack: [V9, V110, V117, V145, V24, V30, V117, 0x40, 0x40, V30, V117, S0]
Stack pops: 3
Stack additions: [S2, S1, V42]
Exit stack: [V9, V110, V117, V145, V24, V30, V117, 0x40, 0x40, V30, V117, V42]

================================

Block 0x95
[0x95:0xa7]
---
Predecessors: [0x7a]
Successors: [0xa8]
---
0x95 JUMPDEST
0x96 POP
0x97 POP
0x98 POP
0x99 POP
0x9a SWAP1
0x9b POP
0x9c ADD
0x9d DUP3
0x9e PUSH1 0x2
0xa0 PUSH1 0x20
0xa2 MUL
0xa3 DUP1
0xa4 DUP4
0xa5 DUP4
0xa6 PUSH1 0x0
---
0x95: JUMPDEST 
0x9c: V44 = ADD 0x40 V30
0x9e: V45 = 0x2
0xa0: V46 = 0x20
0xa2: V47 = MUL 0x20 0x2
0xa6: V48 = 0x0
---
Entry stack: [V9, V110, V117, V145, V24, V30, V117, 0x40, 0x40, V30, V117, S0]
Stack pops: 9
Stack additions: [S8, S7, V44, S8, 0x40, 0x40, V44, S8, 0x0]
Exit stack: [V9, V110, V117, V145, V24, V44, V145, 0x40, 0x40, V44, V145, 0x0]

================================

Block 0xa8
[0xa8:0xb0]
---
Predecessors: [0x95, 0xb1]
Successors: [0xb1, 0xc3]
---
0xa8 JUMPDEST
0xa9 DUP4
0xaa DUP2
0xab LT
0xac ISZERO
0xad PUSH2 0xc3
0xb0 JUMPI
---
0xa8: JUMPDEST 
0xab: V49 = LT S0 0x40
0xac: V50 = ISZERO V49
0xad: V51 = 0xc3
0xb0: JUMPI 0xc3 V50
---
Entry stack: [V9, V110, V117, V145, V24, V44, V145, 0x40, 0x40, V44, V145, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V9, V110, V117, V145, V24, V44, V145, 0x40, 0x40, V44, V145, S0]

================================

Block 0xb1
[0xb1:0xc2]
---
Predecessors: [0xa8]
Successors: [0xa8]
---
0xb1 DUP1
0xb2 DUP3
0xb3 ADD
0xb4 MLOAD
0xb5 DUP2
0xb6 DUP5
0xb7 ADD
0xb8 MSTORE
0xb9 PUSH1 0x20
0xbb DUP2
0xbc ADD
0xbd SWAP1
0xbe POP
0xbf PUSH2 0xa8
0xc2 JUMP
---
0xb3: V52 = ADD V145 S0
0xb4: V53 = M[V52]
0xb7: V54 = ADD V44 S0
0xb8: M[V54] = V53
0xb9: V55 = 0x20
0xbc: V56 = ADD S0 0x20
0xbf: V57 = 0xa8
0xc2: JUMP 0xa8
---
Entry stack: [V9, V110, V117, V145, V24, V44, V145, 0x40, 0x40, V44, V145, S0]
Stack pops: 3
Stack additions: [S2, S1, V56]
Exit stack: [V9, V110, V117, V145, V24, V44, V145, 0x40, 0x40, V44, V145, V56]

================================

Block 0xc3
[0xc3:0xd7]
---
Predecessors: [0xa8]
Successors: []
---
0xc3 JUMPDEST
0xc4 POP
0xc5 POP
0xc6 POP
0xc7 POP
0xc8 SWAP1
0xc9 POP
0xca ADD
0xcb SWAP4
0xcc POP
0xcd POP
0xce POP
0xcf POP
0xd0 PUSH1 0x40
0xd2 MLOAD
0xd3 DUP1
0xd4 SWAP2
0xd5 SUB
0xd6 SWAP1
0xd7 RETURN
---
0xc3: JUMPDEST 
0xca: V58 = ADD 0x40 V44
0xd0: V59 = 0x40
0xd2: V60 = M[0x40]
0xd5: V61 = SUB V58 V60
0xd7: RETURN V60 V61
---
Entry stack: [V9, V110, V117, V145, V24, V44, V145, 0x40, 0x40, V44, V145, S0]
Stack pops: 11
Stack additions: []
Exit stack: [V9]

================================

Block 0xd8
[0xd8:0xdf]
---
Predecessors: [0x3b]
Successors: [0x2a4]
---
0xd8 JUMPDEST
0xd9 PUSH2 0xe0
0xdc PUSH2 0x2a4
0xdf JUMP
---
0xd8: JUMPDEST 
0xd9: V62 = 0xe0
0xdc: V63 = 0x2a4
0xdf: JUMP 0x2a4
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [0xe0]
Exit stack: [V9, 0xe0]

================================

Block 0xe0
[0xe0:0xe1]
---
Predecessors: [0x66b]
Successors: []
---
0xe0 JUMPDEST
0xe1 STOP
---
0xe0: JUMPDEST 
0xe1: STOP 
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0xe2
[0xe2:0xeb]
---
Predecessors: [0x57]
Successors: [0x66e]
---
0xe2 JUMPDEST
0xe3 PUSH1 0x0
0xe5 PUSH2 0xec
0xe8 PUSH2 0x66e
0xeb JUMP
---
0xe2: JUMPDEST 
0xe3: V64 = 0x0
0xe5: V65 = 0xec
0xe8: V66 = 0x66e
0xeb: JUMP 0x66e
---
Entry stack: [V9, 0x60]
Stack pops: 0
Stack additions: [0x0, 0xec]
Exit stack: [V9, 0x60, 0x0, 0xec]

================================

Block 0xec
[0xec:0xf3]
---
Predecessors: [0x66e]
Successors: [0x690]
---
0xec JUMPDEST
0xed PUSH2 0xf4
0xf0 PUSH2 0x690
0xf3 JUMP
---
0xec: JUMPDEST 
0xed: V67 = 0xf4
0xf0: V68 = 0x690
0xf3: JUMP 0x690
---
Entry stack: [V9, 0x60, 0x0, V419]
Stack pops: 0
Stack additions: [0xf4]
Exit stack: [V9, 0x60, 0x0, V419, 0xf4]

================================

Block 0xf4
[0xf4:0x14a]
---
Predecessors: [0x690]
Successors: [0x14b, 0x19b]
---
0xf4 JUMPDEST
0xf5 PUSH1 0x0
0xf7 DUP1
0xf8 SWAP1
0xf9 SLOAD
0xfa SWAP1
0xfb PUSH2 0x100
0xfe EXP
0xff SWAP1
0x100 DIV
0x101 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x116 AND
0x117 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12c AND
0x12d CALLER
0x12e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x143 AND
0x144 EQ
0x145 ISZERO
0x146 ISZERO
0x147 PUSH2 0x19b
0x14a JUMPI
---
0xf4: JUMPDEST 
0xf5: V69 = 0x0
0xf9: V70 = S[0x0]
0xfb: V71 = 0x100
0xfe: V72 = EXP 0x100 0x0
0x100: V73 = DIV V70 0x1
0x101: V74 = 0xffffffffffffffffffffffffffffffffffffffff
0x116: V75 = AND 0xffffffffffffffffffffffffffffffffffffffff V73
0x117: V76 = 0xffffffffffffffffffffffffffffffffffffffff
0x12c: V77 = AND 0xffffffffffffffffffffffffffffffffffffffff V75
0x12d: V78 = CALLER
0x12e: V79 = 0xffffffffffffffffffffffffffffffffffffffff
0x143: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x144: V81 = EQ V80 V77
0x145: V82 = ISZERO V81
0x146: V83 = ISZERO V82
0x147: V84 = 0x19b
0x14a: JUMPI 0x19b V83
---
Entry stack: [V9, 0x60, 0x0, V419, V428]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x60, 0x0, V419, V428]

================================

Block 0x14b
[0x14b:0x19a]
---
Predecessors: [0xf4]
Successors: []
---
0x14b PUSH1 0x40
0x14d MLOAD
0x14e PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x16f DUP2
0x170 MSTORE
0x171 PUSH1 0x4
0x173 ADD
0x174 DUP1
0x175 DUP1
0x176 PUSH1 0x20
0x178 ADD
0x179 DUP3
0x17a DUP2
0x17b SUB
0x17c DUP3
0x17d MSTORE
0x17e PUSH1 0x22
0x180 DUP2
0x181 MSTORE
0x182 PUSH1 0x20
0x184 ADD
0x185 DUP1
0x186 PUSH2 0x6b3
0x189 PUSH1 0x22
0x18b SWAP2
0x18c CODECOPY
0x18d PUSH1 0x40
0x18f ADD
0x190 SWAP2
0x191 POP
0x192 POP
0x193 PUSH1 0x40
0x195 MLOAD
0x196 DUP1
0x197 SWAP2
0x198 SUB
0x199 SWAP1
0x19a REVERT
---
0x14b: V85 = 0x40
0x14d: V86 = M[0x40]
0x14e: V87 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x170: M[V86] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x171: V88 = 0x4
0x173: V89 = ADD 0x4 V86
0x176: V90 = 0x20
0x178: V91 = ADD 0x20 V89
0x17b: V92 = SUB V91 V89
0x17d: M[V89] = V92
0x17e: V93 = 0x22
0x181: M[V91] = 0x22
0x182: V94 = 0x20
0x184: V95 = ADD 0x20 V91
0x186: V96 = 0x6b3
0x189: V97 = 0x22
0x18c: CODECOPY V95 0x6b3 0x22
0x18d: V98 = 0x40
0x18f: V99 = ADD 0x40 V95
0x193: V100 = 0x40
0x195: V101 = M[0x40]
0x198: V102 = SUB V99 V101
0x19a: REVERT V101 V102
---
Entry stack: [V9, 0x60, 0x0, V419, V428]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x60, 0x0, V419, V428]

================================

Block 0x19b
[0x19b:0x1cc]
---
Predecessors: [0xf4]
Successors: [0x1cd, 0x21d]
---
0x19b JUMPDEST
0x19c PUSH1 0x5
0x19e PUSH1 0x0
0x1a0 SWAP1
0x1a1 SLOAD
0x1a2 SWAP1
0x1a3 PUSH2 0x100
0x1a6 EXP
0x1a7 SWAP1
0x1a8 DIV
0x1a9 PUSH1 0xff
0x1ab AND
0x1ac PUSH1 0x1
0x1ae PUSH1 0x3
0x1b0 DUP2
0x1b1 PUSH1 0x2
0x1b3 DUP1
0x1b4 PUSH1 0x20
0x1b6 MUL
0x1b7 PUSH1 0x40
0x1b9 MLOAD
0x1ba SWAP1
0x1bb DUP2
0x1bc ADD
0x1bd PUSH1 0x40
0x1bf MSTORE
0x1c0 DUP1
0x1c1 SWAP3
0x1c2 SWAP2
0x1c3 SWAP1
0x1c4 DUP3
0x1c5 PUSH1 0x2
0x1c7 DUP1
0x1c8 ISZERO
0x1c9 PUSH2 0x21d
0x1cc JUMPI
---
0x19b: JUMPDEST 
0x19c: V103 = 0x5
0x19e: V104 = 0x0
0x1a1: V105 = S[0x5]
0x1a3: V106 = 0x100
0x1a6: V107 = EXP 0x100 0x0
0x1a8: V108 = DIV V105 0x1
0x1a9: V109 = 0xff
0x1ab: V110 = AND 0xff V108
0x1ac: V111 = 0x1
0x1ae: V112 = 0x3
0x1b1: V113 = 0x2
0x1b4: V114 = 0x20
0x1b6: V115 = MUL 0x20 0x2
0x1b7: V116 = 0x40
0x1b9: V117 = M[0x40]
0x1bc: V118 = ADD V117 0x40
0x1bd: V119 = 0x40
0x1bf: M[0x40] = V118
0x1c5: V120 = 0x2
0x1c8: V121 = ISZERO 0x2
0x1c9: V122 = 0x21d
0x1cc: JUMPI 0x21d 0x0
---
Entry stack: [V9, 0x60, 0x0, V419, V428]
Stack pops: 0
Stack additions: [V110, 0x1, 0x3, V117, 0x1, 0x2, V117, 0x1, 0x2]
Exit stack: [V9, 0x60, 0x0, V419, V428, V110, 0x1, 0x3, V117, 0x1, 0x2, V117, 0x1, 0x2]

================================

Block 0x1cd
[0x1cd:0x1d2]
---
Predecessors: [0x19b]
Successors: [0x1d3]
---
0x1cd PUSH1 0x20
0x1cf MUL
0x1d0 DUP3
0x1d1 ADD
0x1d2 SWAP2
---
0x1cd: V123 = 0x20
0x1cf: V124 = MUL 0x20 0x2
0x1d1: V125 = ADD V117 0x40
---
Entry stack: [V9, 0x60, 0x0, V419, V428, V110, 0x1, 0x3, V117, 0x1, 0x2, V117, 0x1, 0x2]
Stack pops: 3
Stack additions: [V125, S1, S2]
Exit stack: [V9, 0x60, 0x0, V419, V428, V110, 0x1, 0x3, V117, 0x1, 0x2, V125, 0x1, V117]

================================

Block 0x1d3
[0x1d3:0x21c]
---
Predecessors: [0x1cd, 0x1d3]
Successors: [0x1d3, 0x21d]
---
0x1d3 JUMPDEST
0x1d4 DUP2
0x1d5 PUSH1 0x0
0x1d7 SWAP1
0x1d8 SLOAD
0x1d9 SWAP1
0x1da PUSH2 0x100
0x1dd EXP
0x1de SWAP1
0x1df DIV
0x1e0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f5 AND
0x1f6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20b AND
0x20c DUP2
0x20d MSTORE
0x20e PUSH1 0x20
0x210 ADD
0x211 SWAP1
0x212 PUSH1 0x1
0x214 ADD
0x215 SWAP1
0x216 DUP1
0x217 DUP4
0x218 GT
0x219 PUSH2 0x1d3
0x21c JUMPI
---
0x1d3: JUMPDEST 
0x1d5: V126 = 0x0
0x1d8: V127 = S[S1]
0x1da: V128 = 0x100
0x1dd: V129 = EXP 0x100 0x0
0x1df: V130 = DIV V127 0x1
0x1e0: V131 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f5: V132 = AND 0xffffffffffffffffffffffffffffffffffffffff V130
0x1f6: V133 = 0xffffffffffffffffffffffffffffffffffffffff
0x20b: V134 = AND 0xffffffffffffffffffffffffffffffffffffffff V132
0x20d: M[S0] = V134
0x20e: V135 = 0x20
0x210: V136 = ADD 0x20 S0
0x212: V137 = 0x1
0x214: V138 = ADD 0x1 S1
0x218: V139 = GT V125 V136
0x219: V140 = 0x1d3
0x21c: JUMPI 0x1d3 V139
---
Entry stack: [V9, 0x60, 0x0, V419, V428, V110, 0x1, 0x3, V117, 0x1, 0x2, V125, S1, S0]
Stack pops: 3
Stack additions: [S2, V138, V136]
Exit stack: [V9, 0x60, 0x0, V419, V428, V110, 0x1, 0x3, V117, 0x1, 0x2, V125, V138, V136]

================================

Block 0x21d
[0x21d:0x241]
---
Predecessors: [0x19b, 0x1d3]
Successors: [0x242, 0x292]
---
0x21d JUMPDEST
0x21e POP
0x21f POP
0x220 POP
0x221 POP
0x222 POP
0x223 SWAP2
0x224 POP
0x225 DUP1
0x226 PUSH1 0x2
0x228 DUP1
0x229 PUSH1 0x20
0x22b MUL
0x22c PUSH1 0x40
0x22e MLOAD
0x22f SWAP1
0x230 DUP2
0x231 ADD
0x232 PUSH1 0x40
0x234 MSTORE
0x235 DUP1
0x236 SWAP3
0x237 SWAP2
0x238 SWAP1
0x239 DUP3
0x23a PUSH1 0x2
0x23c DUP1
0x23d ISZERO
0x23e PUSH2 0x292
0x241 JUMPI
---
0x21d: JUMPDEST 
0x226: V141 = 0x2
0x229: V142 = 0x20
0x22b: V143 = MUL 0x20 0x2
0x22c: V144 = 0x40
0x22e: V145 = M[0x40]
0x231: V146 = ADD V145 0x40
0x232: V147 = 0x40
0x234: M[0x40] = V146
0x23a: V148 = 0x2
0x23d: V149 = ISZERO 0x2
0x23e: V150 = 0x292
0x241: JUMPI 0x292 0x0
---
Entry stack: [V9, 0x60, 0x0, V419, V428, V110, 0x1, 0x3, V117, 0x1, 0x2, S2, S1, S0]
Stack pops: 8
Stack additions: [S5, S6, V145, S6, 0x2, V145, S6, 0x2]
Exit stack: [V9, 0x60, 0x0, V419, V428, V110, V117, 0x3, V145, 0x3, 0x2, V145, 0x3, 0x2]

================================

Block 0x242
[0x242:0x247]
---
Predecessors: [0x21d]
Successors: [0x248]
---
0x242 PUSH1 0x20
0x244 MUL
0x245 DUP3
0x246 ADD
0x247 SWAP2
---
0x242: V151 = 0x20
0x244: V152 = MUL 0x20 0x2
0x246: V153 = ADD V145 0x40
---
Entry stack: [V9, 0x60, 0x0, V419, V428, V110, V117, 0x3, V145, 0x3, 0x2, V145, 0x3, 0x2]
Stack pops: 3
Stack additions: [V153, S1, S2]
Exit stack: [V9, 0x60, 0x0, V419, V428, V110, V117, 0x3, V145, 0x3, 0x2, V153, 0x3, V145]

================================

Block 0x248
[0x248:0x291]
---
Predecessors: [0x242, 0x248]
Successors: [0x248, 0x292]
---
0x248 JUMPDEST
0x249 DUP2
0x24a PUSH1 0x0
0x24c SWAP1
0x24d SLOAD
0x24e SWAP1
0x24f PUSH2 0x100
0x252 EXP
0x253 SWAP1
0x254 DIV
0x255 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x26a AND
0x26b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x280 AND
0x281 DUP2
0x282 MSTORE
0x283 PUSH1 0x20
0x285 ADD
0x286 SWAP1
0x287 PUSH1 0x1
0x289 ADD
0x28a SWAP1
0x28b DUP1
0x28c DUP4
0x28d GT
0x28e PUSH2 0x248
0x291 JUMPI
---
0x248: JUMPDEST 
0x24a: V154 = 0x0
0x24d: V155 = S[S1]
0x24f: V156 = 0x100
0x252: V157 = EXP 0x100 0x0
0x254: V158 = DIV V155 0x1
0x255: V159 = 0xffffffffffffffffffffffffffffffffffffffff
0x26a: V160 = AND 0xffffffffffffffffffffffffffffffffffffffff V158
0x26b: V161 = 0xffffffffffffffffffffffffffffffffffffffff
0x280: V162 = AND 0xffffffffffffffffffffffffffffffffffffffff V160
0x282: M[S0] = V162
0x283: V163 = 0x20
0x285: V164 = ADD 0x20 S0
0x287: V165 = 0x1
0x289: V166 = ADD 0x1 S1
0x28d: V167 = GT V153 V164
0x28e: V168 = 0x248
0x291: JUMPI 0x248 V167
---
Entry stack: [V9, 0x60, 0x0, V419, V428, V110, V117, 0x3, V145, 0x3, 0x2, V153, S1, S0]
Stack pops: 3
Stack additions: [S2, V166, V164]
Exit stack: [V9, 0x60, 0x0, V419, V428, V110, V117, 0x3, V145, 0x3, 0x2, V153, V166, V164]

================================

Block 0x292
[0x292:0x2a3]
---
Predecessors: [0x21d, 0x248]
Successors: [0x60]
---
0x292 JUMPDEST
0x293 POP
0x294 POP
0x295 POP
0x296 POP
0x297 POP
0x298 SWAP1
0x299 POP
0x29a SWAP3
0x29b POP
0x29c SWAP3
0x29d POP
0x29e SWAP3
0x29f POP
0x2a0 SWAP1
0x2a1 SWAP2
0x2a2 SWAP3
0x2a3 JUMP
---
0x292: JUMPDEST 
0x2a3: JUMP 0x60
---
Entry stack: [V9, 0x60, 0x0, V419, V428, V110, V117, 0x3, V145, 0x3, 0x2, S2, S1, S0]
Stack pops: 13
Stack additions: [S8, S7, S5]
Exit stack: [V9, V110, V117, V145]

================================

Block 0x2a4
[0x2a4:0x2b0]
---
Predecessors: [0xd8]
Successors: [0x2b1, 0x2b2]
---
0x2a4 JUMPDEST
0x2a5 PUSH1 0x0
0x2a7 PUSH1 0x2
0x2a9 CALLVALUE
0x2aa DUP2
0x2ab ISZERO
0x2ac ISZERO
0x2ad PUSH2 0x2b2
0x2b0 JUMPI
---
0x2a4: JUMPDEST 
0x2a5: V169 = 0x0
0x2a7: V170 = 0x2
0x2a9: V171 = CALLVALUE
0x2ab: V172 = ISZERO 0x2
0x2ac: V173 = ISZERO 0x0
0x2ad: V174 = 0x2b2
0x2b0: JUMPI 0x2b2 0x1
---
Entry stack: [V9, 0xe0]
Stack pops: 0
Stack additions: [0x0, 0x2, V171]
Exit stack: [V9, 0xe0, 0x0, 0x2, V171]

================================

Block 0x2b1
[0x2b1:0x2b1]
---
Predecessors: [0x2a4]
Successors: []
---
0x2b1 INVALID
---
0x2b1: INVALID 
---
Entry stack: [V9, 0xe0, 0x0, 0x2, V171]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0xe0, 0x0, 0x2, V171]

================================

Block 0x2b2
[0x2b2:0x2ba]
---
Predecessors: [0x2a4]
Successors: [0x2bb, 0x328]
---
0x2b2 JUMPDEST
0x2b3 MOD
0x2b4 EQ
0x2b5 ISZERO
0x2b6 ISZERO
0x2b7 PUSH2 0x328
0x2ba JUMPI
---
0x2b2: JUMPDEST 
0x2b3: V175 = MOD V171 0x2
0x2b4: V176 = EQ V175 0x0
0x2b5: V177 = ISZERO V176
0x2b6: V178 = ISZERO V177
0x2b7: V179 = 0x328
0x2ba: JUMPI 0x328 V178
---
Entry stack: [V9, 0xe0, 0x0, 0x2, V171]
Stack pops: 3
Stack additions: []
Exit stack: [V9, 0xe0]

================================

Block 0x2bb
[0x2bb:0x327]
---
Predecessors: [0x2b2]
Successors: []
---
0x2bb PUSH1 0x40
0x2bd MLOAD
0x2be PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x2df DUP2
0x2e0 MSTORE
0x2e1 PUSH1 0x4
0x2e3 ADD
0x2e4 DUP1
0x2e5 DUP1
0x2e6 PUSH1 0x20
0x2e8 ADD
0x2e9 DUP3
0x2ea DUP2
0x2eb SUB
0x2ec DUP3
0x2ed MSTORE
0x2ee PUSH1 0x14
0x2f0 DUP2
0x2f1 MSTORE
0x2f2 PUSH1 0x20
0x2f4 ADD
0x2f5 DUP1
0x2f6 PUSH32 0x4576656e2076616c75652072657175697265642e000000000000000000000000
0x317 DUP2
0x318 MSTORE
0x319 POP
0x31a PUSH1 0x20
0x31c ADD
0x31d SWAP2
0x31e POP
0x31f POP
0x320 PUSH1 0x40
0x322 MLOAD
0x323 DUP1
0x324 SWAP2
0x325 SUB
0x326 SWAP1
0x327 REVERT
---
0x2bb: V180 = 0x40
0x2bd: V181 = M[0x40]
0x2be: V182 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x2e0: M[V181] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x2e1: V183 = 0x4
0x2e3: V184 = ADD 0x4 V181
0x2e6: V185 = 0x20
0x2e8: V186 = ADD 0x20 V184
0x2eb: V187 = SUB V186 V184
0x2ed: M[V184] = V187
0x2ee: V188 = 0x14
0x2f1: M[V186] = 0x14
0x2f2: V189 = 0x20
0x2f4: V190 = ADD 0x20 V186
0x2f6: V191 = 0x4576656e2076616c75652072657175697265642e000000000000000000000000
0x318: M[V190] = 0x4576656e2076616c75652072657175697265642e000000000000000000000000
0x31a: V192 = 0x20
0x31c: V193 = ADD 0x20 V190
0x320: V194 = 0x40
0x322: V195 = M[0x40]
0x325: V196 = SUB V193 V195
0x327: REVERT V195 V196
---
Entry stack: [V9, 0xe0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0xe0]

================================

Block 0x328
[0x328:0x339]
---
Predecessors: [0x2b2]
Successors: [0x33a, 0x38a]
---
0x328 JUMPDEST
0x329 PUSH7 0x760457bfa8480
0x331 CALLVALUE
0x332 LT
0x333 ISZERO
0x334 ISZERO
0x335 ISZERO
0x336 PUSH2 0x38a
0x339 JUMPI
---
0x328: JUMPDEST 
0x329: V197 = 0x760457bfa8480
0x331: V198 = CALLVALUE
0x332: V199 = LT V198 0x760457bfa8480
0x333: V200 = ISZERO V199
0x334: V201 = ISZERO V200
0x335: V202 = ISZERO V201
0x336: V203 = 0x38a
0x339: JUMPI 0x38a V202
---
Entry stack: [V9, 0xe0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0xe0]

================================

Block 0x33a
[0x33a:0x389]
---
Predecessors: [0x328]
Successors: []
---
0x33a PUSH1 0x40
0x33c MLOAD
0x33d PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x35e DUP2
0x35f MSTORE
0x360 PUSH1 0x4
0x362 ADD
0x363 DUP1
0x364 DUP1
0x365 PUSH1 0x20
0x367 ADD
0x368 DUP3
0x369 DUP2
0x36a SUB
0x36b DUP3
0x36c MSTORE
0x36d PUSH1 0x31
0x36f DUP2
0x370 MSTORE
0x371 PUSH1 0x20
0x373 ADD
0x374 DUP1
0x375 PUSH2 0x6d5
0x378 PUSH1 0x31
0x37a SWAP2
0x37b CODECOPY
0x37c PUSH1 0x40
0x37e ADD
0x37f SWAP2
0x380 POP
0x381 POP
0x382 PUSH1 0x40
0x384 MLOAD
0x385 DUP1
0x386 SWAP2
0x387 SUB
0x388 SWAP1
0x389 REVERT
---
0x33a: V204 = 0x40
0x33c: V205 = M[0x40]
0x33d: V206 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x35f: M[V205] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x360: V207 = 0x4
0x362: V208 = ADD 0x4 V205
0x365: V209 = 0x20
0x367: V210 = ADD 0x20 V208
0x36a: V211 = SUB V210 V208
0x36c: M[V208] = V211
0x36d: V212 = 0x31
0x370: M[V210] = 0x31
0x371: V213 = 0x20
0x373: V214 = ADD 0x20 V210
0x375: V215 = 0x6d5
0x378: V216 = 0x31
0x37b: CODECOPY V214 0x6d5 0x31
0x37c: V217 = 0x40
0x37e: V218 = ADD 0x40 V214
0x382: V219 = 0x40
0x384: V220 = M[0x40]
0x387: V221 = SUB V218 V220
0x389: REVERT V220 V221
---
Entry stack: [V9, 0xe0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0xe0]

================================

Block 0x38a
[0x38a:0x3a0]
---
Predecessors: [0x328]
Successors: [0x3a1, 0x60e]
---
0x38a JUMPDEST
0x38b PUSH1 0x5
0x38d PUSH1 0x0
0x38f SWAP1
0x390 SLOAD
0x391 SWAP1
0x392 PUSH2 0x100
0x395 EXP
0x396 SWAP1
0x397 DIV
0x398 PUSH1 0xff
0x39a AND
0x39b ISZERO
0x39c ISZERO
0x39d PUSH2 0x60e
0x3a0 JUMPI
---
0x38a: JUMPDEST 
0x38b: V222 = 0x5
0x38d: V223 = 0x0
0x390: V224 = S[0x5]
0x392: V225 = 0x100
0x395: V226 = EXP 0x100 0x0
0x397: V227 = DIV V224 0x1
0x398: V228 = 0xff
0x39a: V229 = AND 0xff V227
0x39b: V230 = ISZERO V229
0x39c: V231 = ISZERO V230
0x39d: V232 = 0x60e
0x3a0: JUMPI 0x60e V231
---
Entry stack: [V9, 0xe0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0xe0]

================================

Block 0x3a1
[0x3a1:0x3c9]
---
Predecessors: [0x38a]
Successors: [0x3ca, 0x3cb]
---
0x3a1 PUSH1 0x1
0x3a3 PUSH1 0x5
0x3a5 PUSH1 0x0
0x3a7 PUSH2 0x100
0x3aa EXP
0x3ab DUP2
0x3ac SLOAD
0x3ad DUP2
0x3ae PUSH1 0xff
0x3b0 MUL
0x3b1 NOT
0x3b2 AND
0x3b3 SWAP1
0x3b4 DUP4
0x3b5 ISZERO
0x3b6 ISZERO
0x3b7 MUL
0x3b8 OR
0x3b9 SWAP1
0x3ba SSTORE
0x3bb POP
0x3bc PUSH1 0x3
0x3be PUSH1 0x0
0x3c0 PUSH1 0x2
0x3c2 DUP2
0x3c3 LT
0x3c4 ISZERO
0x3c5 ISZERO
0x3c6 PUSH2 0x3cb
0x3c9 JUMPI
---
0x3a1: V233 = 0x1
0x3a3: V234 = 0x5
0x3a5: V235 = 0x0
0x3a7: V236 = 0x100
0x3aa: V237 = EXP 0x100 0x0
0x3ac: V238 = S[0x5]
0x3ae: V239 = 0xff
0x3b0: V240 = MUL 0xff 0x1
0x3b1: V241 = NOT 0xff
0x3b2: V242 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V238
0x3b5: V243 = ISZERO 0x1
0x3b6: V244 = ISZERO 0x0
0x3b7: V245 = MUL 0x1 0x1
0x3b8: V246 = OR 0x1 V242
0x3ba: S[0x5] = V246
0x3bc: V247 = 0x3
0x3be: V248 = 0x0
0x3c0: V249 = 0x2
0x3c3: V250 = LT 0x0 0x2
0x3c4: V251 = ISZERO 0x1
0x3c5: V252 = ISZERO 0x0
0x3c6: V253 = 0x3cb
0x3c9: JUMPI 0x3cb 0x1
---
Entry stack: [V9, 0xe0]
Stack pops: 0
Stack additions: [0x3, 0x0]
Exit stack: [V9, 0xe0, 0x3, 0x0]

================================

Block 0x3ca
[0x3ca:0x3ca]
---
Predecessors: [0x3a1]
Successors: []
---
0x3ca INVALID
---
0x3ca: INVALID 
---
Entry stack: [V9, 0xe0, 0x3, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0xe0, 0x3, 0x0]

================================

Block 0x3cb
[0x3cb:0x421]
---
Predecessors: [0x3a1]
Successors: [0x422, 0x4e5]
---
0x3cb JUMPDEST
0x3cc ADD
0x3cd PUSH1 0x0
0x3cf SWAP1
0x3d0 SLOAD
0x3d1 SWAP1
0x3d2 PUSH2 0x100
0x3d5 EXP
0x3d6 SWAP1
0x3d7 DIV
0x3d8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ed AND
0x3ee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x403 AND
0x404 PUSH1 0x0
0x406 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x41b AND
0x41c EQ
0x41d ISZERO
0x41e PUSH2 0x4e5
0x421 JUMPI
---
0x3cb: JUMPDEST 
0x3cc: V254 = ADD 0x0 0x3
0x3cd: V255 = 0x0
0x3d0: V256 = S[0x3]
0x3d2: V257 = 0x100
0x3d5: V258 = EXP 0x100 0x0
0x3d7: V259 = DIV V256 0x1
0x3d8: V260 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ed: V261 = AND 0xffffffffffffffffffffffffffffffffffffffff V259
0x3ee: V262 = 0xffffffffffffffffffffffffffffffffffffffff
0x403: V263 = AND 0xffffffffffffffffffffffffffffffffffffffff V261
0x404: V264 = 0x0
0x406: V265 = 0xffffffffffffffffffffffffffffffffffffffff
0x41b: V266 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x41c: V267 = EQ 0x0 V263
0x41d: V268 = ISZERO V267
0x41e: V269 = 0x4e5
0x421: JUMPI 0x4e5 V268
---
Entry stack: [V9, 0xe0, 0x3, 0x0]
Stack pops: 2
Stack additions: []
Exit stack: [V9, 0xe0]

================================

Block 0x422
[0x422:0x42f]
---
Predecessors: [0x3cb]
Successors: [0x430, 0x431]
---
0x422 PUSH1 0x1
0x424 PUSH1 0x0
0x426 PUSH1 0x2
0x428 DUP2
0x429 LT
0x42a ISZERO
0x42b ISZERO
0x42c PUSH2 0x431
0x42f JUMPI
---
0x422: V270 = 0x1
0x424: V271 = 0x0
0x426: V272 = 0x2
0x429: V273 = LT 0x0 0x2
0x42a: V274 = ISZERO 0x1
0x42b: V275 = ISZERO 0x0
0x42c: V276 = 0x431
0x42f: JUMPI 0x431 0x1
---
Entry stack: [V9, 0xe0]
Stack pops: 0
Stack additions: [0x1, 0x0]
Exit stack: [V9, 0xe0, 0x1, 0x0]

================================

Block 0x430
[0x430:0x430]
---
Predecessors: [0x422]
Successors: []
---
0x430 INVALID
---
0x430: INVALID 
---
Entry stack: [V9, 0xe0, 0x1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0xe0, 0x1, 0x0]

================================

Block 0x431
[0x431:0x493]
---
Predecessors: [0x422]
Successors: [0x494, 0x4e4]
---
0x431 JUMPDEST
0x432 ADD
0x433 PUSH1 0x0
0x435 SWAP1
0x436 SLOAD
0x437 SWAP1
0x438 PUSH2 0x100
0x43b EXP
0x43c SWAP1
0x43d DIV
0x43e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x453 AND
0x454 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x469 AND
0x46a PUSH2 0x8fc
0x46d PUSH7 0x719e13be25800
0x475 SWAP1
0x476 DUP2
0x477 ISZERO
0x478 MUL
0x479 SWAP1
0x47a PUSH1 0x40
0x47c MLOAD
0x47d PUSH1 0x0
0x47f PUSH1 0x40
0x481 MLOAD
0x482 DUP1
0x483 DUP4
0x484 SUB
0x485 DUP2
0x486 DUP6
0x487 DUP9
0x488 DUP9
0x489 CALL
0x48a SWAP4
0x48b POP
0x48c POP
0x48d POP
0x48e POP
0x48f ISZERO
0x490 PUSH2 0x4e4
0x493 JUMPI
---
0x431: JUMPDEST 
0x432: V277 = ADD 0x0 0x1
0x433: V278 = 0x0
0x436: V279 = S[0x1]
0x438: V280 = 0x100
0x43b: V281 = EXP 0x100 0x0
0x43d: V282 = DIV V279 0x1
0x43e: V283 = 0xffffffffffffffffffffffffffffffffffffffff
0x453: V284 = AND 0xffffffffffffffffffffffffffffffffffffffff V282
0x454: V285 = 0xffffffffffffffffffffffffffffffffffffffff
0x469: V286 = AND 0xffffffffffffffffffffffffffffffffffffffff V284
0x46a: V287 = 0x8fc
0x46d: V288 = 0x719e13be25800
0x477: V289 = ISZERO 0x719e13be25800
0x478: V290 = MUL 0x0 0x8fc
0x47a: V291 = 0x40
0x47c: V292 = M[0x40]
0x47d: V293 = 0x0
0x47f: V294 = 0x40
0x481: V295 = M[0x40]
0x484: V296 = SUB V292 V295
0x489: V297 = CALL 0x0 V286 0x719e13be25800 V295 V296 V295 0x0
0x48f: V298 = ISZERO V297
0x490: V299 = 0x4e4
0x493: JUMPI 0x4e4 V298
---
Entry stack: [V9, 0xe0, 0x1, 0x0]
Stack pops: 2
Stack additions: []
Exit stack: [V9, 0xe0]

================================

Block 0x494
[0x494:0x4a2]
---
Predecessors: [0x431]
Successors: [0x4a3, 0x4a4]
---
0x494 CALLER
0x495 PUSH1 0x3
0x497 PUSH1 0x0
0x499 PUSH1 0x2
0x49b DUP2
0x49c LT
0x49d ISZERO
0x49e ISZERO
0x49f PUSH2 0x4a4
0x4a2 JUMPI
---
0x494: V300 = CALLER
0x495: V301 = 0x3
0x497: V302 = 0x0
0x499: V303 = 0x2
0x49c: V304 = LT 0x0 0x2
0x49d: V305 = ISZERO 0x1
0x49e: V306 = ISZERO 0x0
0x49f: V307 = 0x4a4
0x4a2: JUMPI 0x4a4 0x1
---
Entry stack: [V9, 0xe0]
Stack pops: 0
Stack additions: [V300, 0x3, 0x0]
Exit stack: [V9, 0xe0, V300, 0x3, 0x0]

================================

Block 0x4a3
[0x4a3:0x4a3]
---
Predecessors: [0x494]
Successors: []
---
0x4a3 INVALID
---
0x4a3: INVALID 
---
Entry stack: [V9, 0xe0, V300, 0x3, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0xe0, V300, 0x3, 0x0]

================================

Block 0x4a4
[0x4a4:0x4e3]
---
Predecessors: [0x494]
Successors: [0x4e4]
---
0x4a4 JUMPDEST
0x4a5 ADD
0x4a6 PUSH1 0x0
0x4a8 PUSH2 0x100
0x4ab EXP
0x4ac DUP2
0x4ad SLOAD
0x4ae DUP2
0x4af PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c4 MUL
0x4c5 NOT
0x4c6 AND
0x4c7 SWAP1
0x4c8 DUP4
0x4c9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4de AND
0x4df MUL
0x4e0 OR
0x4e1 SWAP1
0x4e2 SSTORE
0x4e3 POP
---
0x4a4: JUMPDEST 
0x4a5: V308 = ADD 0x0 0x3
0x4a6: V309 = 0x0
0x4a8: V310 = 0x100
0x4ab: V311 = EXP 0x100 0x0
0x4ad: V312 = S[0x3]
0x4af: V313 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c4: V314 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x4c5: V315 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x4c6: V316 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V312
0x4c9: V317 = 0xffffffffffffffffffffffffffffffffffffffff
0x4de: V318 = AND 0xffffffffffffffffffffffffffffffffffffffff V300
0x4df: V319 = MUL V318 0x1
0x4e0: V320 = OR V319 V316
0x4e2: S[0x3] = V320
---
Entry stack: [V9, 0xe0, V300, 0x3, 0x0]
Stack pops: 3
Stack additions: []
Exit stack: [V9, 0xe0]

================================

Block 0x4e4
[0x4e4:0x4e4]
---
Predecessors: [0x431, 0x4a4]
Successors: [0x4e5]
---
0x4e4 JUMPDEST
---
0x4e4: JUMPDEST 
---
Entry stack: [V9, 0xe0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0xe0]

================================

Block 0x4e5
[0x4e5:0x4f3]
---
Predecessors: [0x3cb, 0x4e4]
Successors: [0x4f4, 0x4f5]
---
0x4e5 JUMPDEST
0x4e6 PUSH1 0x3
0x4e8 PUSH1 0x1
0x4ea PUSH1 0x2
0x4ec DUP2
0x4ed LT
0x4ee ISZERO
0x4ef ISZERO
0x4f0 PUSH2 0x4f5
0x4f3 JUMPI
---
0x4e5: JUMPDEST 
0x4e6: V321 = 0x3
0x4e8: V322 = 0x1
0x4ea: V323 = 0x2
0x4ed: V324 = LT 0x1 0x2
0x4ee: V325 = ISZERO 0x1
0x4ef: V326 = ISZERO 0x0
0x4f0: V327 = 0x4f5
0x4f3: JUMPI 0x4f5 0x1
---
Entry stack: [V9, 0xe0]
Stack pops: 0
Stack additions: [0x3, 0x1]
Exit stack: [V9, 0xe0, 0x3, 0x1]

================================

Block 0x4f4
[0x4f4:0x4f4]
---
Predecessors: [0x4e5]
Successors: []
---
0x4f4 INVALID
---
0x4f4: INVALID 
---
Entry stack: [V9, 0xe0, 0x3, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0xe0, 0x3, 0x1]

================================

Block 0x4f5
[0x4f5:0x54b]
---
Predecessors: [0x4e5]
Successors: [0x54c, 0x60d]
---
0x4f5 JUMPDEST
0x4f6 ADD
0x4f7 PUSH1 0x0
0x4f9 SWAP1
0x4fa SLOAD
0x4fb SWAP1
0x4fc PUSH2 0x100
0x4ff EXP
0x500 SWAP1
0x501 DIV
0x502 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x517 AND
0x518 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x52d AND
0x52e PUSH1 0x0
0x530 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x545 AND
0x546 EQ
0x547 ISZERO
0x548 PUSH2 0x60d
0x54b JUMPI
---
0x4f5: JUMPDEST 
0x4f6: V328 = ADD 0x1 0x3
0x4f7: V329 = 0x0
0x4fa: V330 = S[0x4]
0x4fc: V331 = 0x100
0x4ff: V332 = EXP 0x100 0x0
0x501: V333 = DIV V330 0x1
0x502: V334 = 0xffffffffffffffffffffffffffffffffffffffff
0x517: V335 = AND 0xffffffffffffffffffffffffffffffffffffffff V333
0x518: V336 = 0xffffffffffffffffffffffffffffffffffffffff
0x52d: V337 = AND 0xffffffffffffffffffffffffffffffffffffffff V335
0x52e: V338 = 0x0
0x530: V339 = 0xffffffffffffffffffffffffffffffffffffffff
0x545: V340 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x546: V341 = EQ 0x0 V337
0x547: V342 = ISZERO V341
0x548: V343 = 0x60d
0x54b: JUMPI 0x60d V342
---
Entry stack: [V9, 0xe0, 0x3, 0x1]
Stack pops: 2
Stack additions: []
Exit stack: [V9, 0xe0]

================================

Block 0x54c
[0x54c:0x558]
---
Predecessors: [0x4f5]
Successors: [0x559, 0x55a]
---
0x54c PUSH1 0x1
0x54e DUP1
0x54f PUSH1 0x2
0x551 DUP2
0x552 LT
0x553 ISZERO
0x554 ISZERO
0x555 PUSH2 0x55a
0x558 JUMPI
---
0x54c: V344 = 0x1
0x54f: V345 = 0x2
0x552: V346 = LT 0x1 0x2
0x553: V347 = ISZERO 0x1
0x554: V348 = ISZERO 0x0
0x555: V349 = 0x55a
0x558: JUMPI 0x55a 0x1
---
Entry stack: [V9, 0xe0]
Stack pops: 0
Stack additions: [0x1, 0x1]
Exit stack: [V9, 0xe0, 0x1, 0x1]

================================

Block 0x559
[0x559:0x559]
---
Predecessors: [0x54c]
Successors: []
---
0x559 INVALID
---
0x559: INVALID 
---
Entry stack: [V9, 0xe0, 0x1, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0xe0, 0x1, 0x1]

================================

Block 0x55a
[0x55a:0x5bb]
---
Predecessors: [0x54c]
Successors: [0x5bc, 0x60c]
---
0x55a JUMPDEST
0x55b ADD
0x55c PUSH1 0x0
0x55e SWAP1
0x55f SLOAD
0x560 SWAP1
0x561 PUSH2 0x100
0x564 EXP
0x565 SWAP1
0x566 DIV
0x567 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x57c AND
0x57d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x592 AND
0x593 PUSH2 0x8fc
0x596 PUSH6 0x466440182c80
0x59d SWAP1
0x59e DUP2
0x59f ISZERO
0x5a0 MUL
0x5a1 SWAP1
0x5a2 PUSH1 0x40
0x5a4 MLOAD
0x5a5 PUSH1 0x0
0x5a7 PUSH1 0x40
0x5a9 MLOAD
0x5aa DUP1
0x5ab DUP4
0x5ac SUB
0x5ad DUP2
0x5ae DUP6
0x5af DUP9
0x5b0 DUP9
0x5b1 CALL
0x5b2 SWAP4
0x5b3 POP
0x5b4 POP
0x5b5 POP
0x5b6 POP
0x5b7 ISZERO
0x5b8 PUSH2 0x60c
0x5bb JUMPI
---
0x55a: JUMPDEST 
0x55b: V350 = ADD 0x1 0x1
0x55c: V351 = 0x0
0x55f: V352 = S[0x2]
0x561: V353 = 0x100
0x564: V354 = EXP 0x100 0x0
0x566: V355 = DIV V352 0x1
0x567: V356 = 0xffffffffffffffffffffffffffffffffffffffff
0x57c: V357 = AND 0xffffffffffffffffffffffffffffffffffffffff V355
0x57d: V358 = 0xffffffffffffffffffffffffffffffffffffffff
0x592: V359 = AND 0xffffffffffffffffffffffffffffffffffffffff V357
0x593: V360 = 0x8fc
0x596: V361 = 0x466440182c80
0x59f: V362 = ISZERO 0x466440182c80
0x5a0: V363 = MUL 0x0 0x8fc
0x5a2: V364 = 0x40
0x5a4: V365 = M[0x40]
0x5a5: V366 = 0x0
0x5a7: V367 = 0x40
0x5a9: V368 = M[0x40]
0x5ac: V369 = SUB V365 V368
0x5b1: V370 = CALL 0x0 V359 0x466440182c80 V368 V369 V368 0x0
0x5b7: V371 = ISZERO V370
0x5b8: V372 = 0x60c
0x5bb: JUMPI 0x60c V371
---
Entry stack: [V9, 0xe0, 0x1, 0x1]
Stack pops: 2
Stack additions: []
Exit stack: [V9, 0xe0]

================================

Block 0x5bc
[0x5bc:0x5ca]
---
Predecessors: [0x55a]
Successors: [0x5cb, 0x5cc]
---
0x5bc CALLER
0x5bd PUSH1 0x3
0x5bf PUSH1 0x1
0x5c1 PUSH1 0x2
0x5c3 DUP2
0x5c4 LT
0x5c5 ISZERO
0x5c6 ISZERO
0x5c7 PUSH2 0x5cc
0x5ca JUMPI
---
0x5bc: V373 = CALLER
0x5bd: V374 = 0x3
0x5bf: V375 = 0x1
0x5c1: V376 = 0x2
0x5c4: V377 = LT 0x1 0x2
0x5c5: V378 = ISZERO 0x1
0x5c6: V379 = ISZERO 0x0
0x5c7: V380 = 0x5cc
0x5ca: JUMPI 0x5cc 0x1
---
Entry stack: [V9, 0xe0]
Stack pops: 0
Stack additions: [V373, 0x3, 0x1]
Exit stack: [V9, 0xe0, V373, 0x3, 0x1]

================================

Block 0x5cb
[0x5cb:0x5cb]
---
Predecessors: [0x5bc]
Successors: []
---
0x5cb INVALID
---
0x5cb: INVALID 
---
Entry stack: [V9, 0xe0, V373, 0x3, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0xe0, V373, 0x3, 0x1]

================================

Block 0x5cc
[0x5cc:0x60b]
---
Predecessors: [0x5bc]
Successors: [0x60c]
---
0x5cc JUMPDEST
0x5cd ADD
0x5ce PUSH1 0x0
0x5d0 PUSH2 0x100
0x5d3 EXP
0x5d4 DUP2
0x5d5 SLOAD
0x5d6 DUP2
0x5d7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5ec MUL
0x5ed NOT
0x5ee AND
0x5ef SWAP1
0x5f0 DUP4
0x5f1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x606 AND
0x607 MUL
0x608 OR
0x609 SWAP1
0x60a SSTORE
0x60b POP
---
0x5cc: JUMPDEST 
0x5cd: V381 = ADD 0x1 0x3
0x5ce: V382 = 0x0
0x5d0: V383 = 0x100
0x5d3: V384 = EXP 0x100 0x0
0x5d5: V385 = S[0x4]
0x5d7: V386 = 0xffffffffffffffffffffffffffffffffffffffff
0x5ec: V387 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x5ed: V388 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x5ee: V389 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V385
0x5f1: V390 = 0xffffffffffffffffffffffffffffffffffffffff
0x606: V391 = AND 0xffffffffffffffffffffffffffffffffffffffff V373
0x607: V392 = MUL V391 0x1
0x608: V393 = OR V392 V389
0x60a: S[0x4] = V393
---
Entry stack: [V9, 0xe0, V373, 0x3, 0x1]
Stack pops: 3
Stack additions: []
Exit stack: [V9, 0xe0]

================================

Block 0x60c
[0x60c:0x60c]
---
Predecessors: [0x55a, 0x5cc]
Successors: [0x60d]
---
0x60c JUMPDEST
---
0x60c: JUMPDEST 
---
Entry stack: [V9, 0xe0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0xe0]

================================

Block 0x60d
[0x60d:0x60d]
---
Predecessors: [0x4f5, 0x60c]
Successors: [0x60e]
---
0x60d JUMPDEST
---
0x60d: JUMPDEST 
---
Entry stack: [V9, 0xe0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0xe0]

================================

Block 0x60e
[0x60e:0x661]
---
Predecessors: [0x38a, 0x60d]
Successors: [0x662, 0x66b]
---
0x60e JUMPDEST
0x60f CALLER
0x610 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x625 AND
0x626 PUSH2 0x8fc
0x629 ADDRESS
0x62a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x63f AND
0x640 BALANCE
0x641 SWAP1
0x642 DUP2
0x643 ISZERO
0x644 MUL
0x645 SWAP1
0x646 PUSH1 0x40
0x648 MLOAD
0x649 PUSH1 0x0
0x64b PUSH1 0x40
0x64d MLOAD
0x64e DUP1
0x64f DUP4
0x650 SUB
0x651 DUP2
0x652 DUP6
0x653 DUP9
0x654 DUP9
0x655 CALL
0x656 SWAP4
0x657 POP
0x658 POP
0x659 POP
0x65a POP
0x65b ISZERO
0x65c DUP1
0x65d ISZERO
0x65e PUSH2 0x66b
0x661 JUMPI
---
0x60e: JUMPDEST 
0x60f: V394 = CALLER
0x610: V395 = 0xffffffffffffffffffffffffffffffffffffffff
0x625: V396 = AND 0xffffffffffffffffffffffffffffffffffffffff V394
0x626: V397 = 0x8fc
0x629: V398 = ADDRESS
0x62a: V399 = 0xffffffffffffffffffffffffffffffffffffffff
0x63f: V400 = AND 0xffffffffffffffffffffffffffffffffffffffff V398
0x640: V401 = BALANCE V400
0x643: V402 = ISZERO V401
0x644: V403 = MUL V402 0x8fc
0x646: V404 = 0x40
0x648: V405 = M[0x40]
0x649: V406 = 0x0
0x64b: V407 = 0x40
0x64d: V408 = M[0x40]
0x650: V409 = SUB V405 V408
0x655: V410 = CALL V403 V396 V401 V408 V409 V408 0x0
0x65b: V411 = ISZERO V410
0x65d: V412 = ISZERO V411
0x65e: V413 = 0x66b
0x661: JUMPI 0x66b V412
---
Entry stack: [V9, 0xe0]
Stack pops: 0
Stack additions: [V411]
Exit stack: [V9, 0xe0, V411]

================================

Block 0x662
[0x662:0x66a]
---
Predecessors: [0x60e]
Successors: []
---
0x662 RETURNDATASIZE
0x663 PUSH1 0x0
0x665 DUP1
0x666 RETURNDATACOPY
0x667 RETURNDATASIZE
0x668 PUSH1 0x0
0x66a REVERT
---
0x662: V414 = RETURNDATASIZE
0x663: V415 = 0x0
0x666: RETURNDATACOPY 0x0 0x0 V414
0x667: V416 = RETURNDATASIZE
0x668: V417 = 0x0
0x66a: REVERT 0x0 V416
---
Entry stack: [V9, 0xe0, V411]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0xe0, V411]

================================

Block 0x66b
[0x66b:0x66d]
---
Predecessors: [0x60e]
Successors: [0xe0]
---
0x66b JUMPDEST
0x66c POP
0x66d JUMP
---
0x66b: JUMPDEST 
0x66d: JUMP 0xe0
---
Entry stack: [V9, 0xe0, V411]
Stack pops: 2
Stack additions: []
Exit stack: [V9]

================================

Block 0x66e
[0x66e:0x68f]
---
Predecessors: [0xe2]
Successors: [0xec]
---
0x66e JUMPDEST
0x66f PUSH1 0x40
0x671 DUP1
0x672 MLOAD
0x673 SWAP1
0x674 DUP2
0x675 ADD
0x676 PUSH1 0x40
0x678 MSTORE
0x679 DUP1
0x67a PUSH1 0x2
0x67c SWAP1
0x67d PUSH1 0x20
0x67f DUP3
0x680 MUL
0x681 DUP1
0x682 CODESIZE
0x683 DUP4
0x684 CODECOPY
0x685 DUP1
0x686 DUP3
0x687 ADD
0x688 SWAP2
0x689 POP
0x68a POP
0x68b SWAP1
0x68c POP
0x68d POP
0x68e SWAP1
0x68f JUMP
---
0x66e: JUMPDEST 
0x66f: V418 = 0x40
0x672: V419 = M[0x40]
0x675: V420 = ADD V419 0x40
0x676: V421 = 0x40
0x678: M[0x40] = V420
0x67a: V422 = 0x2
0x67d: V423 = 0x20
0x680: V424 = MUL 0x2 0x20
0x682: V425 = CODESIZE
0x684: CODECOPY V419 V425 0x40
0x687: V426 = ADD V419 0x40
0x68f: JUMP 0xec
---
Entry stack: [V9, 0x60, 0x0, 0xec]
Stack pops: 1
Stack additions: [V419]
Exit stack: [V9, 0x60, 0x0, V419]

================================

Block 0x690
[0x690:0x6b1]
---
Predecessors: [0xec]
Successors: [0xf4]
---
0x690 JUMPDEST
0x691 PUSH1 0x40
0x693 DUP1
0x694 MLOAD
0x695 SWAP1
0x696 DUP2
0x697 ADD
0x698 PUSH1 0x40
0x69a MSTORE
0x69b DUP1
0x69c PUSH1 0x2
0x69e SWAP1
0x69f PUSH1 0x20
0x6a1 DUP3
0x6a2 MUL
0x6a3 DUP1
0x6a4 CODESIZE
0x6a5 DUP4
0x6a6 CODECOPY
0x6a7 DUP1
0x6a8 DUP3
0x6a9 ADD
0x6aa SWAP2
0x6ab POP
0x6ac POP
0x6ad SWAP1
0x6ae POP
0x6af POP
0x6b0 SWAP1
0x6b1 JUMP
---
0x690: JUMPDEST 
0x691: V427 = 0x40
0x694: V428 = M[0x40]
0x697: V429 = ADD V428 0x40
0x698: V430 = 0x40
0x69a: M[0x40] = V429
0x69c: V431 = 0x2
0x69f: V432 = 0x20
0x6a2: V433 = MUL 0x2 0x20
0x6a4: V434 = CODESIZE
0x6a6: CODECOPY V428 V434 0x40
0x6a9: V435 = ADD V428 0x40
0x6b1: JUMP 0xf4
---
Entry stack: [V9, 0x60, 0x0, V419, 0xf4]
Stack pops: 1
Stack additions: [V428]
Exit stack: [V9, 0x60, 0x0, V419, V428]

================================

Block 0x6b2
[0x6b2:0x734]
---
Predecessors: []
Successors: []
---
0x6b2 INVALID
0x6b3 MISSING 0x4f
0x6b4 PUSH15 0x6c79206f776e65722063616e206361
0x6c4 PUSH13 0x6c20746869732066756e637469
0x6d2 PUSH16 0x6e2e5061796d656e7420616d6f756e74
0x6e3 SHA3
0x6e4 PUSH10 0x73206c65737320746865
0x6ef PUSH15 0x203230373631373633383630303030
0x6ff ADDRESS
0x700 ADDRESS
0x701 SHA3
0x702 PUSH24 0x65692ea165627a7a723058205dd9ece42aa4760b679b4b8c
0x71b MISSING 0xb2
0x71c MISSING 0x29
0x71d SHL
0x71e MISSING 0xb1
0x71f MISSING 0xbb
0x720 MISSING 0xd
0x721 MISSING 0xd0
0x722 CALLDATACOPY
0x723 ADDRESS
0x724 MISSING 0xbd
0x725 LOG3
0x726 MISSING 0xe2
0x727 MISSING 0x2f
0x728 MISSING 0xec
0x729 MISSING 0x4b
0x72a SWAP4
0x72b ADDRESS
0x72c MISSING 0xaa
0x72d MISSING 0xaf
0x72e PUSH6 0x29
---
0x6b2: INVALID 
0x6b3: MISSING 0x4f
0x6b4: V436 = 0x6c79206f776e65722063616e206361
0x6c4: V437 = 0x6c20746869732066756e637469
0x6d2: V438 = 0x6e2e5061796d656e7420616d6f756e74
0x6e3: V439 = SHA3 0x6e2e5061796d656e7420616d6f756e74 0x6c20746869732066756e637469
0x6e4: V440 = 0x73206c65737320746865
0x6ef: V441 = 0x203230373631373633383630303030
0x6ff: V442 = ADDRESS
0x700: V443 = ADDRESS
0x701: V444 = SHA3 V443 V442
0x702: V445 = 0x65692ea165627a7a723058205dd9ece42aa4760b679b4b8c
0x71b: MISSING 0xb2
0x71c: MISSING 0x29
0x71d: V446 = SHL S0 S1
0x71e: MISSING 0xb1
0x71f: MISSING 0xbb
0x720: MISSING 0xd
0x721: MISSING 0xd0
0x722: CALLDATACOPY S0 S1 S2
0x723: V447 = ADDRESS
0x724: MISSING 0xbd
0x725: LOG S0 S1 S2 S3 S4
0x726: MISSING 0xe2
0x727: MISSING 0x2f
0x728: MISSING 0xec
0x729: MISSING 0x4b
0x72b: V448 = ADDRESS
0x72c: MISSING 0xaa
0x72d: MISSING 0xaf
0x72e: V449 = 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0x65692ea165627a7a723058205dd9ece42aa4760b679b4b8c, V444, 0x203230373631373633383630303030, 0x73206c65737320746865, V439, 0x6c79206f776e65722063616e206361, V446, V447, V448, S4, S1, S2, S3, S0, 0x29]
Exit stack: []

================================

Function 0:
Public function signature: 0x3f8f1ae4
Entry block: 0x4b
Exit block: 0xc3
Body: 0x4b, 0x53, 0x57, 0x60, 0x7a, 0x83, 0x95, 0xa8, 0xb1, 0xc3, 0xe2, 0xec, 0xf4, 0x14b, 0x19b, 0x1cd, 0x1d3, 0x21d, 0x242, 0x248, 0x292, 0x66e, 0x690

Function 1:
Public function signature: 0x64cf0654
Entry block: 0xd8
Exit block: 0x5cb
Body: 0xd8, 0xe0, 0x2a4, 0x2b1, 0x2b2, 0x2bb, 0x328, 0x33a, 0x38a, 0x3a1, 0x3ca, 0x3cb, 0x422, 0x430, 0x431, 0x494, 0x4a3, 0x4a4, 0x4e4, 0x4e5, 0x4f4, 0x4f5, 0x54c, 0x559, 0x55a, 0x5bc, 0x5cb, 0x5cc, 0x60c, 0x60d, 0x60e, 0x662, 0x66b

Function 2:
Public fallback function
Entry block: 0x46
Exit block: 0x46
Body: 0x46

