Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x76]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x76
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x76
0xa: JUMPI 0x76 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0xd4]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x1f0ba6c9
0x3a EQ
0x3b PUSH2 0xd4
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x1f0ba6c9
0x3a: V12 = EQ 0x1f0ba6c9 V10
0x3b: V13 = 0xd4
0x3e: JUMPI 0xd4 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0xe9]
---
0x3f DUP1
0x40 PUSH4 0x35ece4a6
0x45 EQ
0x46 PUSH2 0xe9
0x49 JUMPI
---
0x40: V14 = 0x35ece4a6
0x45: V15 = EQ 0x35ece4a6 V10
0x46: V16 = 0xe9
0x49: JUMPI 0xe9 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x112]
---
0x4a DUP1
0x4b PUSH4 0x590e1ae3
0x50 EQ
0x51 PUSH2 0x112
0x54 JUMPI
---
0x4b: V17 = 0x590e1ae3
0x50: V18 = EQ 0x590e1ae3 V10
0x51: V19 = 0x112
0x54: JUMPI 0x112 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x127]
---
0x55 DUP1
0x56 PUSH4 0x5f4a019b
0x5b EQ
0x5c PUSH2 0x127
0x5f JUMPI
---
0x56: V20 = 0x5f4a019b
0x5b: V21 = EQ 0x5f4a019b V10
0x5c: V22 = 0x127
0x5f: JUMPI 0x127 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x154]
---
0x60 DUP1
0x61 PUSH4 0x6a84fc4b
0x66 EQ
0x67 PUSH2 0x154
0x6a JUMPI
---
0x61: V23 = 0x6a84fc4b
0x66: V24 = EQ 0x6a84fc4b V10
0x67: V25 = 0x154
0x6a: JUMPI 0x154 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x60]
Successors: [0x76, 0x17d]
---
0x6b DUP1
0x6c PUSH4 0xfc0c546a
0x71 EQ
0x72 PUSH2 0x17d
0x75 JUMPI
---
0x6c: V26 = 0xfc0c546a
0x71: V27 = EQ 0xfc0c546a V10
0x72: V28 = 0x17d
0x75: JUMPI 0x17d V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x76
[0x76:0xcd]
---
Predecessors: [0x0, 0x6b]
Successors: [0xce, 0xd2]
---
0x76 JUMPDEST
0x77 PUSH1 0x4
0x79 PUSH1 0x0
0x7b SWAP1
0x7c SLOAD
0x7d SWAP1
0x7e PUSH2 0x100
0x81 EXP
0x82 SWAP1
0x83 DIV
0x84 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x99 AND
0x9a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaf AND
0xb0 CALLER
0xb1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc6 AND
0xc7 EQ
0xc8 ISZERO
0xc9 ISZERO
0xca PUSH2 0xd2
0xcd JUMPI
---
0x76: JUMPDEST 
0x77: V29 = 0x4
0x79: V30 = 0x0
0x7c: V31 = S[0x4]
0x7e: V32 = 0x100
0x81: V33 = EXP 0x100 0x0
0x83: V34 = DIV V31 0x1
0x84: V35 = 0xffffffffffffffffffffffffffffffffffffffff
0x99: V36 = AND 0xffffffffffffffffffffffffffffffffffffffff V34
0x9a: V37 = 0xffffffffffffffffffffffffffffffffffffffff
0xaf: V38 = AND 0xffffffffffffffffffffffffffffffffffffffff V36
0xb0: V39 = CALLER
0xb1: V40 = 0xffffffffffffffffffffffffffffffffffffffff
0xc6: V41 = AND 0xffffffffffffffffffffffffffffffffffffffff V39
0xc7: V42 = EQ V41 V38
0xc8: V43 = ISZERO V42
0xc9: V44 = ISZERO V43
0xca: V45 = 0xd2
0xcd: JUMPI 0xd2 V44
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xce
[0xce:0xd1]
---
Predecessors: [0x76]
Successors: []
---
0xce PUSH1 0x0
0xd0 DUP1
0xd1 REVERT
---
0xce: V46 = 0x0
0xd1: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xd2
[0xd2:0xd3]
---
Predecessors: [0x76]
Successors: []
---
0xd2 JUMPDEST
0xd3 STOP
---
0xd2: JUMPDEST 
0xd3: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xd4
[0xd4:0xda]
---
Predecessors: [0xb]
Successors: [0xdb, 0xdf]
---
0xd4 JUMPDEST
0xd5 CALLVALUE
0xd6 ISZERO
0xd7 PUSH2 0xdf
0xda JUMPI
---
0xd4: JUMPDEST 
0xd5: V47 = CALLVALUE
0xd6: V48 = ISZERO V47
0xd7: V49 = 0xdf
0xda: JUMPI 0xdf V48
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xdb
[0xdb:0xde]
---
Predecessors: [0xd4]
Successors: []
---
0xdb PUSH1 0x0
0xdd DUP1
0xde REVERT
---
0xdb: V50 = 0x0
0xde: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xdf
[0xdf:0xe6]
---
Predecessors: [0xd4]
Successors: [0x1d2]
---
0xdf JUMPDEST
0xe0 PUSH2 0xe7
0xe3 PUSH2 0x1d2
0xe6 JUMP
---
0xdf: JUMPDEST 
0xe0: V51 = 0xe7
0xe3: V52 = 0x1d2
0xe6: JUMP 0x1d2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xe7]
Exit stack: [V10, 0xe7]

================================

Block 0xe7
[0xe7:0xe8]
---
Predecessors: [0x463]
Successors: []
---
0xe7 JUMPDEST
0xe8 STOP
---
0xe7: JUMPDEST 
0xe8: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xe9
[0xe9:0xef]
---
Predecessors: [0x3f]
Successors: [0xf0, 0xf4]
---
0xe9 JUMPDEST
0xea CALLVALUE
0xeb ISZERO
0xec PUSH2 0xf4
0xef JUMPI
---
0xe9: JUMPDEST 
0xea: V53 = CALLVALUE
0xeb: V54 = ISZERO V53
0xec: V55 = 0xf4
0xef: JUMPI 0xf4 V54
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xf0
[0xf0:0xf3]
---
Predecessors: [0xe9]
Successors: []
---
0xf0 PUSH1 0x0
0xf2 DUP1
0xf3 REVERT
---
0xf0: V56 = 0x0
0xf3: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xf4
[0xf4:0xfb]
---
Predecessors: [0xe9]
Successors: [0x480]
---
0xf4 JUMPDEST
0xf5 PUSH2 0xfc
0xf8 PUSH2 0x480
0xfb JUMP
---
0xf4: JUMPDEST 
0xf5: V57 = 0xfc
0xf8: V58 = 0x480
0xfb: JUMP 0x480
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xfc]
Exit stack: [V10, 0xfc]

================================

Block 0xfc
[0xfc:0x111]
---
Predecessors: [0x480]
Successors: []
---
0xfc JUMPDEST
0xfd PUSH1 0x40
0xff MLOAD
0x100 DUP1
0x101 DUP3
0x102 DUP2
0x103 MSTORE
0x104 PUSH1 0x20
0x106 ADD
0x107 SWAP2
0x108 POP
0x109 POP
0x10a PUSH1 0x40
0x10c MLOAD
0x10d DUP1
0x10e SWAP2
0x10f SUB
0x110 SWAP1
0x111 RETURN
---
0xfc: JUMPDEST 
0xfd: V59 = 0x40
0xff: V60 = M[0x40]
0x103: M[V60] = V297
0x104: V61 = 0x20
0x106: V62 = ADD 0x20 V60
0x10a: V63 = 0x40
0x10c: V64 = M[0x40]
0x10f: V65 = SUB V62 V64
0x111: RETURN V64 V65
---
Entry stack: [V10, 0xfc, V297]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xfc]

================================

Block 0x112
[0x112:0x118]
---
Predecessors: [0x4a]
Successors: [0x119, 0x11d]
---
0x112 JUMPDEST
0x113 CALLVALUE
0x114 ISZERO
0x115 PUSH2 0x11d
0x118 JUMPI
---
0x112: JUMPDEST 
0x113: V66 = CALLVALUE
0x114: V67 = ISZERO V66
0x115: V68 = 0x11d
0x118: JUMPI 0x11d V67
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x119
[0x119:0x11c]
---
Predecessors: [0x112]
Successors: []
---
0x119 PUSH1 0x0
0x11b DUP1
0x11c REVERT
---
0x119: V69 = 0x0
0x11c: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x11d
[0x11d:0x124]
---
Predecessors: [0x112]
Successors: [0x486]
---
0x11d JUMPDEST
0x11e PUSH2 0x125
0x121 PUSH2 0x486
0x124 JUMP
---
0x11d: JUMPDEST 
0x11e: V70 = 0x125
0x121: V71 = 0x486
0x124: JUMP 0x486
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x125]
Exit stack: [V10, 0x125]

================================

Block 0x125
[0x125:0x126]
---
Predecessors: [0x735]
Successors: []
---
0x125 JUMPDEST
0x126 STOP
---
0x125: JUMPDEST 
0x126: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x127
[0x127:0x12d]
---
Predecessors: [0x55]
Successors: [0x12e, 0x132]
---
0x127 JUMPDEST
0x128 CALLVALUE
0x129 ISZERO
0x12a PUSH2 0x132
0x12d JUMPI
---
0x127: JUMPDEST 
0x128: V72 = CALLVALUE
0x129: V73 = ISZERO V72
0x12a: V74 = 0x132
0x12d: JUMPI 0x132 V73
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x12e
[0x12e:0x131]
---
Predecessors: [0x127]
Successors: []
---
0x12e PUSH1 0x0
0x130 DUP1
0x131 REVERT
---
0x12e: V75 = 0x0
0x131: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x132
[0x132:0x139]
---
Predecessors: [0x127]
Successors: [0x738]
---
0x132 JUMPDEST
0x133 PUSH2 0x13a
0x136 PUSH2 0x738
0x139 JUMP
---
0x132: JUMPDEST 
0x133: V76 = 0x13a
0x136: V77 = 0x738
0x139: JUMP 0x738
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x13a]
Exit stack: [V10, 0x13a]

================================

Block 0x13a
[0x13a:0x153]
---
Predecessors: [0x738]
Successors: []
---
0x13a JUMPDEST
0x13b PUSH1 0x40
0x13d MLOAD
0x13e DUP1
0x13f DUP3
0x140 ISZERO
0x141 ISZERO
0x142 ISZERO
0x143 ISZERO
0x144 DUP2
0x145 MSTORE
0x146 PUSH1 0x20
0x148 ADD
0x149 SWAP2
0x14a POP
0x14b POP
0x14c PUSH1 0x40
0x14e MLOAD
0x14f DUP1
0x150 SWAP2
0x151 SUB
0x152 SWAP1
0x153 RETURN
---
0x13a: JUMPDEST 
0x13b: V78 = 0x40
0x13d: V79 = M[0x40]
0x140: V80 = ISZERO V472
0x141: V81 = ISZERO V80
0x142: V82 = ISZERO V81
0x143: V83 = ISZERO V82
0x145: M[V79] = V83
0x146: V84 = 0x20
0x148: V85 = ADD 0x20 V79
0x14c: V86 = 0x40
0x14e: V87 = M[0x40]
0x151: V88 = SUB V85 V87
0x153: RETURN V87 V88
---
Entry stack: [V10, 0x13a, V472]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x13a]

================================

Block 0x154
[0x154:0x15a]
---
Predecessors: [0x60]
Successors: [0x15b, 0x15f]
---
0x154 JUMPDEST
0x155 CALLVALUE
0x156 ISZERO
0x157 PUSH2 0x15f
0x15a JUMPI
---
0x154: JUMPDEST 
0x155: V89 = CALLVALUE
0x156: V90 = ISZERO V89
0x157: V91 = 0x15f
0x15a: JUMPI 0x15f V90
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x15b
[0x15b:0x15e]
---
Predecessors: [0x154]
Successors: []
---
0x15b PUSH1 0x0
0x15d DUP1
0x15e REVERT
---
0x15b: V92 = 0x0
0x15e: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x15f
[0x15f:0x166]
---
Predecessors: [0x154]
Successors: [0x74b]
---
0x15f JUMPDEST
0x160 PUSH2 0x167
0x163 PUSH2 0x74b
0x166 JUMP
---
0x15f: JUMPDEST 
0x160: V93 = 0x167
0x163: V94 = 0x74b
0x166: JUMP 0x74b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x167]
Exit stack: [V10, 0x167]

================================

Block 0x167
[0x167:0x17c]
---
Predecessors: [0x74b]
Successors: []
---
0x167 JUMPDEST
0x168 PUSH1 0x40
0x16a MLOAD
0x16b DUP1
0x16c DUP3
0x16d DUP2
0x16e MSTORE
0x16f PUSH1 0x20
0x171 ADD
0x172 SWAP2
0x173 POP
0x174 POP
0x175 PUSH1 0x40
0x177 MLOAD
0x178 DUP1
0x179 SWAP2
0x17a SUB
0x17b SWAP1
0x17c RETURN
---
0x167: JUMPDEST 
0x168: V95 = 0x40
0x16a: V96 = M[0x40]
0x16e: M[V96] = V474
0x16f: V97 = 0x20
0x171: V98 = ADD 0x20 V96
0x175: V99 = 0x40
0x177: V100 = M[0x40]
0x17a: V101 = SUB V98 V100
0x17c: RETURN V100 V101
---
Entry stack: [V10, 0x167, V474]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x167]

================================

Block 0x17d
[0x17d:0x183]
---
Predecessors: [0x6b]
Successors: [0x184, 0x188]
---
0x17d JUMPDEST
0x17e CALLVALUE
0x17f ISZERO
0x180 PUSH2 0x188
0x183 JUMPI
---
0x17d: JUMPDEST 
0x17e: V102 = CALLVALUE
0x17f: V103 = ISZERO V102
0x180: V104 = 0x188
0x183: JUMPI 0x188 V103
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x184
[0x184:0x187]
---
Predecessors: [0x17d]
Successors: []
---
0x184 PUSH1 0x0
0x186 DUP1
0x187 REVERT
---
0x184: V105 = 0x0
0x187: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x188
[0x188:0x18f]
---
Predecessors: [0x17d]
Successors: [0x751]
---
0x188 JUMPDEST
0x189 PUSH2 0x190
0x18c PUSH2 0x751
0x18f JUMP
---
0x188: JUMPDEST 
0x189: V106 = 0x190
0x18c: V107 = 0x751
0x18f: JUMP 0x751
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x190]
Exit stack: [V10, 0x190]

================================

Block 0x190
[0x190:0x1d1]
---
Predecessors: [0x751]
Successors: []
---
0x190 JUMPDEST
0x191 PUSH1 0x40
0x193 MLOAD
0x194 DUP1
0x195 DUP3
0x196 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ab AND
0x1ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c1 AND
0x1c2 DUP2
0x1c3 MSTORE
0x1c4 PUSH1 0x20
0x1c6 ADD
0x1c7 SWAP2
0x1c8 POP
0x1c9 POP
0x1ca PUSH1 0x40
0x1cc MLOAD
0x1cd DUP1
0x1ce SWAP2
0x1cf SUB
0x1d0 SWAP1
0x1d1 RETURN
---
0x190: JUMPDEST 
0x191: V108 = 0x40
0x193: V109 = M[0x40]
0x196: V110 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ab: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V482
0x1ac: V112 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c1: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x1c3: M[V109] = V113
0x1c4: V114 = 0x20
0x1c6: V115 = ADD 0x20 V109
0x1ca: V116 = 0x40
0x1cc: V117 = M[0x40]
0x1cf: V118 = SUB V115 V117
0x1d1: RETURN V117 V118
---
Entry stack: [V10, 0x190, V482]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x190]

================================

Block 0x1d2
[0x1d2:0x1f4]
---
Predecessors: [0xdf]
Successors: [0x1f5, 0x1f9]
---
0x1d2 JUMPDEST
0x1d3 PUSH1 0x0
0x1d5 SLOAD
0x1d6 ADDRESS
0x1d7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ec AND
0x1ed BALANCE
0x1ee EQ
0x1ef ISZERO
0x1f0 ISZERO
0x1f1 PUSH2 0x1f9
0x1f4 JUMPI
---
0x1d2: JUMPDEST 
0x1d3: V119 = 0x0
0x1d5: V120 = S[0x0]
0x1d6: V121 = ADDRESS
0x1d7: V122 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ec: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x1ed: V124 = BALANCE V123
0x1ee: V125 = EQ V124 V120
0x1ef: V126 = ISZERO V125
0x1f0: V127 = ISZERO V126
0x1f1: V128 = 0x1f9
0x1f4: JUMPI 0x1f9 V127
---
Entry stack: [V10, 0xe7]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe7]

================================

Block 0x1f5
[0x1f5:0x1f8]
---
Predecessors: [0x1d2]
Successors: []
---
0x1f5 PUSH1 0x0
0x1f7 DUP1
0x1f8 REVERT
---
0x1f5: V129 = 0x0
0x1f8: REVERT 0x0 0x0
---
Entry stack: [V10, 0xe7]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe7]

================================

Block 0x1f9
[0x1f9:0x2bc]
---
Predecessors: [0x1d2]
Successors: [0x2bd, 0x2c1]
---
0x1f9 JUMPDEST
0x1fa PUSH1 0x1
0x1fc SLOAD
0x1fd PUSH1 0x2
0x1ff PUSH1 0x0
0x201 SWAP1
0x202 SLOAD
0x203 SWAP1
0x204 PUSH2 0x100
0x207 EXP
0x208 SWAP1
0x209 DIV
0x20a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21f AND
0x220 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x235 AND
0x236 PUSH4 0x70a08231
0x23b ADDRESS
0x23c PUSH1 0x0
0x23e PUSH1 0x40
0x240 MLOAD
0x241 PUSH1 0x20
0x243 ADD
0x244 MSTORE
0x245 PUSH1 0x40
0x247 MLOAD
0x248 DUP3
0x249 PUSH4 0xffffffff
0x24e AND
0x24f PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26d MUL
0x26e DUP2
0x26f MSTORE
0x270 PUSH1 0x4
0x272 ADD
0x273 DUP1
0x274 DUP3
0x275 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28a AND
0x28b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a0 AND
0x2a1 DUP2
0x2a2 MSTORE
0x2a3 PUSH1 0x20
0x2a5 ADD
0x2a6 SWAP2
0x2a7 POP
0x2a8 POP
0x2a9 PUSH1 0x20
0x2ab PUSH1 0x40
0x2ad MLOAD
0x2ae DUP1
0x2af DUP4
0x2b0 SUB
0x2b1 DUP2
0x2b2 PUSH1 0x0
0x2b4 DUP8
0x2b5 DUP1
0x2b6 EXTCODESIZE
0x2b7 ISZERO
0x2b8 ISZERO
0x2b9 PUSH2 0x2c1
0x2bc JUMPI
---
0x1f9: JUMPDEST 
0x1fa: V130 = 0x1
0x1fc: V131 = S[0x1]
0x1fd: V132 = 0x2
0x1ff: V133 = 0x0
0x202: V134 = S[0x2]
0x204: V135 = 0x100
0x207: V136 = EXP 0x100 0x0
0x209: V137 = DIV V134 0x1
0x20a: V138 = 0xffffffffffffffffffffffffffffffffffffffff
0x21f: V139 = AND 0xffffffffffffffffffffffffffffffffffffffff V137
0x220: V140 = 0xffffffffffffffffffffffffffffffffffffffff
0x235: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x236: V142 = 0x70a08231
0x23b: V143 = ADDRESS
0x23c: V144 = 0x0
0x23e: V145 = 0x40
0x240: V146 = M[0x40]
0x241: V147 = 0x20
0x243: V148 = ADD 0x20 V146
0x244: M[V148] = 0x0
0x245: V149 = 0x40
0x247: V150 = M[0x40]
0x249: V151 = 0xffffffff
0x24e: V152 = AND 0xffffffff 0x70a08231
0x24f: V153 = 0x100000000000000000000000000000000000000000000000000000000
0x26d: V154 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x26f: M[V150] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x270: V155 = 0x4
0x272: V156 = ADD 0x4 V150
0x275: V157 = 0xffffffffffffffffffffffffffffffffffffffff
0x28a: V158 = AND 0xffffffffffffffffffffffffffffffffffffffff V143
0x28b: V159 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a0: V160 = AND 0xffffffffffffffffffffffffffffffffffffffff V158
0x2a2: M[V156] = V160
0x2a3: V161 = 0x20
0x2a5: V162 = ADD 0x20 V156
0x2a9: V163 = 0x20
0x2ab: V164 = 0x40
0x2ad: V165 = M[0x40]
0x2b0: V166 = SUB V162 V165
0x2b2: V167 = 0x0
0x2b6: V168 = EXTCODESIZE V141
0x2b7: V169 = ISZERO V168
0x2b8: V170 = ISZERO V169
0x2b9: V171 = 0x2c1
0x2bc: JUMPI 0x2c1 V170
---
Entry stack: [V10, 0xe7]
Stack pops: 0
Stack additions: [V131, V141, 0x70a08231, V162, 0x20, V165, V166, V165, 0x0, V141]
Exit stack: [V10, 0xe7, V131, V141, 0x70a08231, V162, 0x20, V165, V166, V165, 0x0, V141]

================================

Block 0x2bd
[0x2bd:0x2c0]
---
Predecessors: [0x1f9]
Successors: []
---
0x2bd PUSH1 0x0
0x2bf DUP1
0x2c0 REVERT
---
0x2bd: V172 = 0x0
0x2c0: REVERT 0x0 0x0
---
Entry stack: [V10, 0xe7, V131, V141, 0x70a08231, V162, 0x20, V165, V166, V165, 0x0, V141]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe7, V131, V141, 0x70a08231, V162, 0x20, V165, V166, V165, 0x0, V141]

================================

Block 0x2c1
[0x2c1:0x2cd]
---
Predecessors: [0x1f9]
Successors: [0x2ce, 0x2d2]
---
0x2c1 JUMPDEST
0x2c2 PUSH2 0x2c6
0x2c5 GAS
0x2c6 SUB
0x2c7 CALL
0x2c8 ISZERO
0x2c9 ISZERO
0x2ca PUSH2 0x2d2
0x2cd JUMPI
---
0x2c1: JUMPDEST 
0x2c2: V173 = 0x2c6
0x2c5: V174 = GAS
0x2c6: V175 = SUB V174 0x2c6
0x2c7: V176 = CALL V175 V141 0x0 V165 V166 V165 0x20
0x2c8: V177 = ISZERO V176
0x2c9: V178 = ISZERO V177
0x2ca: V179 = 0x2d2
0x2cd: JUMPI 0x2d2 V178
---
Entry stack: [V10, 0xe7, V131, V141, 0x70a08231, V162, 0x20, V165, V166, V165, 0x0, V141]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xe7, V131, V141, 0x70a08231, V162]

================================

Block 0x2ce
[0x2ce:0x2d1]
---
Predecessors: [0x2c1]
Successors: []
---
0x2ce PUSH1 0x0
0x2d0 DUP1
0x2d1 REVERT
---
0x2ce: V180 = 0x0
0x2d1: REVERT 0x0 0x0
---
Entry stack: [V10, 0xe7, V131, V141, 0x70a08231, V162]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe7, V131, V141, 0x70a08231, V162]

================================

Block 0x2d2
[0x2d2:0x2e3]
---
Predecessors: [0x2c1]
Successors: [0x2e4, 0x2e8]
---
0x2d2 JUMPDEST
0x2d3 POP
0x2d4 POP
0x2d5 POP
0x2d6 PUSH1 0x40
0x2d8 MLOAD
0x2d9 DUP1
0x2da MLOAD
0x2db SWAP1
0x2dc POP
0x2dd EQ
0x2de ISZERO
0x2df ISZERO
0x2e0 PUSH2 0x2e8
0x2e3 JUMPI
---
0x2d2: JUMPDEST 
0x2d6: V181 = 0x40
0x2d8: V182 = M[0x40]
0x2da: V183 = M[V182]
0x2dd: V184 = EQ V183 V131
0x2de: V185 = ISZERO V184
0x2df: V186 = ISZERO V185
0x2e0: V187 = 0x2e8
0x2e3: JUMPI 0x2e8 V186
---
Entry stack: [V10, 0xe7, V131, V141, 0x70a08231, V162]
Stack pops: 4
Stack additions: []
Exit stack: [V10, 0xe7]

================================

Block 0x2e4
[0x2e4:0x2e7]
---
Predecessors: [0x2d2]
Successors: []
---
0x2e4 PUSH1 0x0
0x2e6 DUP1
0x2e7 REVERT
---
0x2e4: V188 = 0x0
0x2e7: REVERT 0x0 0x0
---
Entry stack: [V10, 0xe7]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe7]

================================

Block 0x2e8
[0x2e8:0x3d4]
---
Predecessors: [0x2d2]
Successors: [0x3d5, 0x3d9]
---
0x2e8 JUMPDEST
0x2e9 PUSH1 0x2
0x2eb PUSH1 0x0
0x2ed SWAP1
0x2ee SLOAD
0x2ef SWAP1
0x2f0 PUSH2 0x100
0x2f3 EXP
0x2f4 SWAP1
0x2f5 DIV
0x2f6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x30b AND
0x30c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x321 AND
0x322 PUSH4 0xa9059cbb
0x327 PUSH1 0x4
0x329 PUSH1 0x0
0x32b SWAP1
0x32c SLOAD
0x32d SWAP1
0x32e PUSH2 0x100
0x331 EXP
0x332 SWAP1
0x333 DIV
0x334 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x349 AND
0x34a PUSH1 0x1
0x34c SLOAD
0x34d PUSH1 0x0
0x34f PUSH1 0x40
0x351 MLOAD
0x352 PUSH1 0x20
0x354 ADD
0x355 MSTORE
0x356 PUSH1 0x40
0x358 MLOAD
0x359 DUP4
0x35a PUSH4 0xffffffff
0x35f AND
0x360 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x37e MUL
0x37f DUP2
0x380 MSTORE
0x381 PUSH1 0x4
0x383 ADD
0x384 DUP1
0x385 DUP4
0x386 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x39b AND
0x39c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b1 AND
0x3b2 DUP2
0x3b3 MSTORE
0x3b4 PUSH1 0x20
0x3b6 ADD
0x3b7 DUP3
0x3b8 DUP2
0x3b9 MSTORE
0x3ba PUSH1 0x20
0x3bc ADD
0x3bd SWAP3
0x3be POP
0x3bf POP
0x3c0 POP
0x3c1 PUSH1 0x20
0x3c3 PUSH1 0x40
0x3c5 MLOAD
0x3c6 DUP1
0x3c7 DUP4
0x3c8 SUB
0x3c9 DUP2
0x3ca PUSH1 0x0
0x3cc DUP8
0x3cd DUP1
0x3ce EXTCODESIZE
0x3cf ISZERO
0x3d0 ISZERO
0x3d1 PUSH2 0x3d9
0x3d4 JUMPI
---
0x2e8: JUMPDEST 
0x2e9: V189 = 0x2
0x2eb: V190 = 0x0
0x2ee: V191 = S[0x2]
0x2f0: V192 = 0x100
0x2f3: V193 = EXP 0x100 0x0
0x2f5: V194 = DIV V191 0x1
0x2f6: V195 = 0xffffffffffffffffffffffffffffffffffffffff
0x30b: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff V194
0x30c: V197 = 0xffffffffffffffffffffffffffffffffffffffff
0x321: V198 = AND 0xffffffffffffffffffffffffffffffffffffffff V196
0x322: V199 = 0xa9059cbb
0x327: V200 = 0x4
0x329: V201 = 0x0
0x32c: V202 = S[0x4]
0x32e: V203 = 0x100
0x331: V204 = EXP 0x100 0x0
0x333: V205 = DIV V202 0x1
0x334: V206 = 0xffffffffffffffffffffffffffffffffffffffff
0x349: V207 = AND 0xffffffffffffffffffffffffffffffffffffffff V205
0x34a: V208 = 0x1
0x34c: V209 = S[0x1]
0x34d: V210 = 0x0
0x34f: V211 = 0x40
0x351: V212 = M[0x40]
0x352: V213 = 0x20
0x354: V214 = ADD 0x20 V212
0x355: M[V214] = 0x0
0x356: V215 = 0x40
0x358: V216 = M[0x40]
0x35a: V217 = 0xffffffff
0x35f: V218 = AND 0xffffffff 0xa9059cbb
0x360: V219 = 0x100000000000000000000000000000000000000000000000000000000
0x37e: V220 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x380: M[V216] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x381: V221 = 0x4
0x383: V222 = ADD 0x4 V216
0x386: V223 = 0xffffffffffffffffffffffffffffffffffffffff
0x39b: V224 = AND 0xffffffffffffffffffffffffffffffffffffffff V207
0x39c: V225 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b1: V226 = AND 0xffffffffffffffffffffffffffffffffffffffff V224
0x3b3: M[V222] = V226
0x3b4: V227 = 0x20
0x3b6: V228 = ADD 0x20 V222
0x3b9: M[V228] = V209
0x3ba: V229 = 0x20
0x3bc: V230 = ADD 0x20 V228
0x3c1: V231 = 0x20
0x3c3: V232 = 0x40
0x3c5: V233 = M[0x40]
0x3c8: V234 = SUB V230 V233
0x3ca: V235 = 0x0
0x3ce: V236 = EXTCODESIZE V198
0x3cf: V237 = ISZERO V236
0x3d0: V238 = ISZERO V237
0x3d1: V239 = 0x3d9
0x3d4: JUMPI 0x3d9 V238
---
Entry stack: [V10, 0xe7]
Stack pops: 0
Stack additions: [V198, 0xa9059cbb, V230, 0x20, V233, V234, V233, 0x0, V198]
Exit stack: [V10, 0xe7, V198, 0xa9059cbb, V230, 0x20, V233, V234, V233, 0x0, V198]

================================

Block 0x3d5
[0x3d5:0x3d8]
---
Predecessors: [0x2e8]
Successors: []
---
0x3d5 PUSH1 0x0
0x3d7 DUP1
0x3d8 REVERT
---
0x3d5: V240 = 0x0
0x3d8: REVERT 0x0 0x0
---
Entry stack: [V10, 0xe7, V198, 0xa9059cbb, V230, 0x20, V233, V234, V233, 0x0, V198]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe7, V198, 0xa9059cbb, V230, 0x20, V233, V234, V233, 0x0, V198]

================================

Block 0x3d9
[0x3d9:0x3e5]
---
Predecessors: [0x2e8]
Successors: [0x3e6, 0x3ea]
---
0x3d9 JUMPDEST
0x3da PUSH2 0x2c6
0x3dd GAS
0x3de SUB
0x3df CALL
0x3e0 ISZERO
0x3e1 ISZERO
0x3e2 PUSH2 0x3ea
0x3e5 JUMPI
---
0x3d9: JUMPDEST 
0x3da: V241 = 0x2c6
0x3dd: V242 = GAS
0x3de: V243 = SUB V242 0x2c6
0x3df: V244 = CALL V243 V198 0x0 V233 V234 V233 0x20
0x3e0: V245 = ISZERO V244
0x3e1: V246 = ISZERO V245
0x3e2: V247 = 0x3ea
0x3e5: JUMPI 0x3ea V246
---
Entry stack: [V10, 0xe7, V198, 0xa9059cbb, V230, 0x20, V233, V234, V233, 0x0, V198]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0xe7, V198, 0xa9059cbb, V230]

================================

Block 0x3e6
[0x3e6:0x3e9]
---
Predecessors: [0x3d9]
Successors: []
---
0x3e6 PUSH1 0x0
0x3e8 DUP1
0x3e9 REVERT
---
0x3e6: V248 = 0x0
0x3e9: REVERT 0x0 0x0
---
Entry stack: [V10, 0xe7, V198, 0xa9059cbb, V230]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe7, V198, 0xa9059cbb, V230]

================================

Block 0x3ea
[0x3ea:0x3fa]
---
Predecessors: [0x3d9]
Successors: [0x3fb, 0x3ff]
---
0x3ea JUMPDEST
0x3eb POP
0x3ec POP
0x3ed POP
0x3ee PUSH1 0x40
0x3f0 MLOAD
0x3f1 DUP1
0x3f2 MLOAD
0x3f3 SWAP1
0x3f4 POP
0x3f5 ISZERO
0x3f6 ISZERO
0x3f7 PUSH2 0x3ff
0x3fa JUMPI
---
0x3ea: JUMPDEST 
0x3ee: V249 = 0x40
0x3f0: V250 = M[0x40]
0x3f2: V251 = M[V250]
0x3f5: V252 = ISZERO V251
0x3f6: V253 = ISZERO V252
0x3f7: V254 = 0x3ff
0x3fa: JUMPI 0x3ff V253
---
Entry stack: [V10, 0xe7, V198, 0xa9059cbb, V230]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0xe7]

================================

Block 0x3fb
[0x3fb:0x3fe]
---
Predecessors: [0x3ea]
Successors: []
---
0x3fb PUSH1 0x0
0x3fd DUP1
0x3fe REVERT
---
0x3fb: V255 = 0x0
0x3fe: REVERT 0x0 0x0
---
Entry stack: [V10, 0xe7]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe7]

================================

Block 0x3ff
[0x3ff:0x45e]
---
Predecessors: [0x3ea]
Successors: [0x45f, 0x463]
---
0x3ff JUMPDEST
0x400 PUSH1 0x3
0x402 PUSH1 0x0
0x404 SWAP1
0x405 SLOAD
0x406 SWAP1
0x407 PUSH2 0x100
0x40a EXP
0x40b SWAP1
0x40c DIV
0x40d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x422 AND
0x423 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x438 AND
0x439 PUSH2 0x8fc
0x43c PUSH1 0x0
0x43e SLOAD
0x43f SWAP1
0x440 DUP2
0x441 ISZERO
0x442 MUL
0x443 SWAP1
0x444 PUSH1 0x40
0x446 MLOAD
0x447 PUSH1 0x0
0x449 PUSH1 0x40
0x44b MLOAD
0x44c DUP1
0x44d DUP4
0x44e SUB
0x44f DUP2
0x450 DUP6
0x451 DUP9
0x452 DUP9
0x453 CALL
0x454 SWAP4
0x455 POP
0x456 POP
0x457 POP
0x458 POP
0x459 ISZERO
0x45a ISZERO
0x45b PUSH2 0x463
0x45e JUMPI
---
0x3ff: JUMPDEST 
0x400: V256 = 0x3
0x402: V257 = 0x0
0x405: V258 = S[0x3]
0x407: V259 = 0x100
0x40a: V260 = EXP 0x100 0x0
0x40c: V261 = DIV V258 0x1
0x40d: V262 = 0xffffffffffffffffffffffffffffffffffffffff
0x422: V263 = AND 0xffffffffffffffffffffffffffffffffffffffff V261
0x423: V264 = 0xffffffffffffffffffffffffffffffffffffffff
0x438: V265 = AND 0xffffffffffffffffffffffffffffffffffffffff V263
0x439: V266 = 0x8fc
0x43c: V267 = 0x0
0x43e: V268 = S[0x0]
0x441: V269 = ISZERO V268
0x442: V270 = MUL V269 0x8fc
0x444: V271 = 0x40
0x446: V272 = M[0x40]
0x447: V273 = 0x0
0x449: V274 = 0x40
0x44b: V275 = M[0x40]
0x44e: V276 = SUB V272 V275
0x453: V277 = CALL V270 V265 V268 V275 V276 V275 0x0
0x459: V278 = ISZERO V277
0x45a: V279 = ISZERO V278
0x45b: V280 = 0x463
0x45e: JUMPI 0x463 V279
---
Entry stack: [V10, 0xe7]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe7]

================================

Block 0x45f
[0x45f:0x462]
---
Predecessors: [0x3ff]
Successors: []
---
0x45f PUSH1 0x0
0x461 DUP1
0x462 REVERT
---
0x45f: V281 = 0x0
0x462: REVERT 0x0 0x0
---
Entry stack: [V10, 0xe7]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe7]

================================

Block 0x463
[0x463:0x47f]
---
Predecessors: [0x3ff]
Successors: [0xe7]
---
0x463 JUMPDEST
0x464 PUSH1 0x1
0x466 PUSH1 0x4
0x468 PUSH1 0x14
0x46a PUSH2 0x100
0x46d EXP
0x46e DUP2
0x46f SLOAD
0x470 DUP2
0x471 PUSH1 0xff
0x473 MUL
0x474 NOT
0x475 AND
0x476 SWAP1
0x477 DUP4
0x478 ISZERO
0x479 ISZERO
0x47a MUL
0x47b OR
0x47c SWAP1
0x47d SSTORE
0x47e POP
0x47f JUMP
---
0x463: JUMPDEST 
0x464: V282 = 0x1
0x466: V283 = 0x4
0x468: V284 = 0x14
0x46a: V285 = 0x100
0x46d: V286 = EXP 0x100 0x14
0x46f: V287 = S[0x4]
0x471: V288 = 0xff
0x473: V289 = MUL 0xff 0x10000000000000000000000000000000000000000
0x474: V290 = NOT 0xff0000000000000000000000000000000000000000
0x475: V291 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V287
0x478: V292 = ISZERO 0x1
0x479: V293 = ISZERO 0x0
0x47a: V294 = MUL 0x1 0x10000000000000000000000000000000000000000
0x47b: V295 = OR 0x10000000000000000000000000000000000000000 V291
0x47d: S[0x4] = V295
0x47f: JUMP 0xe7
---
Entry stack: [V10, 0xe7]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x480
[0x480:0x485]
---
Predecessors: [0xf4]
Successors: [0xfc]
---
0x480 JUMPDEST
0x481 PUSH1 0x0
0x483 SLOAD
0x484 DUP2
0x485 JUMP
---
0x480: JUMPDEST 
0x481: V296 = 0x0
0x483: V297 = S[0x0]
0x485: JUMP 0xfc
---
Entry stack: [V10, 0xfc]
Stack pops: 1
Stack additions: [S0, V297]
Exit stack: [V10, 0xfc, V297]

================================

Block 0x486
[0x486:0x49f]
---
Predecessors: [0x11d]
Successors: [0x4a0, 0x4a4]
---
0x486 JUMPDEST
0x487 PUSH1 0x0
0x489 PUSH1 0x4
0x48b PUSH1 0x14
0x48d SWAP1
0x48e SLOAD
0x48f SWAP1
0x490 PUSH2 0x100
0x493 EXP
0x494 SWAP1
0x495 DIV
0x496 PUSH1 0xff
0x498 AND
0x499 ISZERO
0x49a ISZERO
0x49b ISZERO
0x49c PUSH2 0x4a4
0x49f JUMPI
---
0x486: JUMPDEST 
0x487: V298 = 0x0
0x489: V299 = 0x4
0x48b: V300 = 0x14
0x48e: V301 = S[0x4]
0x490: V302 = 0x100
0x493: V303 = EXP 0x100 0x14
0x495: V304 = DIV V301 0x10000000000000000000000000000000000000000
0x496: V305 = 0xff
0x498: V306 = AND 0xff V304
0x499: V307 = ISZERO V306
0x49a: V308 = ISZERO V307
0x49b: V309 = ISZERO V308
0x49c: V310 = 0x4a4
0x49f: JUMPI 0x4a4 V309
---
Entry stack: [V10, 0x125]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x125, 0x0]

================================

Block 0x4a0
[0x4a0:0x4a3]
---
Predecessors: [0x486]
Successors: []
---
0x4a0 PUSH1 0x0
0x4a2 DUP1
0x4a3 REVERT
---
0x4a0: V311 = 0x0
0x4a3: REVERT 0x0 0x0
---
Entry stack: [V10, 0x125, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x125, 0x0]

================================

Block 0x4a4
[0x4a4:0x4c4]
---
Predecessors: [0x486]
Successors: [0x4c5, 0x53e]
---
0x4a4 JUMPDEST
0x4a5 PUSH1 0x0
0x4a7 ADDRESS
0x4a8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4bd AND
0x4be BALANCE
0x4bf GT
0x4c0 ISZERO
0x4c1 PUSH2 0x53e
0x4c4 JUMPI
---
0x4a4: JUMPDEST 
0x4a5: V312 = 0x0
0x4a7: V313 = ADDRESS
0x4a8: V314 = 0xffffffffffffffffffffffffffffffffffffffff
0x4bd: V315 = AND 0xffffffffffffffffffffffffffffffffffffffff V313
0x4be: V316 = BALANCE V315
0x4bf: V317 = GT V316 0x0
0x4c0: V318 = ISZERO V317
0x4c1: V319 = 0x53e
0x4c4: JUMPI 0x53e V318
---
Entry stack: [V10, 0x125, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x125, 0x0]

================================

Block 0x4c5
[0x4c5:0x538]
---
Predecessors: [0x4a4]
Successors: [0x539, 0x53d]
---
0x4c5 PUSH1 0x4
0x4c7 PUSH1 0x0
0x4c9 SWAP1
0x4ca SLOAD
0x4cb SWAP1
0x4cc PUSH2 0x100
0x4cf EXP
0x4d0 SWAP1
0x4d1 DIV
0x4d2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4e7 AND
0x4e8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4fd AND
0x4fe PUSH2 0x8fc
0x501 ADDRESS
0x502 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x517 AND
0x518 BALANCE
0x519 SWAP1
0x51a DUP2
0x51b ISZERO
0x51c MUL
0x51d SWAP1
0x51e PUSH1 0x40
0x520 MLOAD
0x521 PUSH1 0x0
0x523 PUSH1 0x40
0x525 MLOAD
0x526 DUP1
0x527 DUP4
0x528 SUB
0x529 DUP2
0x52a DUP6
0x52b DUP9
0x52c DUP9
0x52d CALL
0x52e SWAP4
0x52f POP
0x530 POP
0x531 POP
0x532 POP
0x533 ISZERO
0x534 ISZERO
0x535 PUSH2 0x53d
0x538 JUMPI
---
0x4c5: V320 = 0x4
0x4c7: V321 = 0x0
0x4ca: V322 = S[0x4]
0x4cc: V323 = 0x100
0x4cf: V324 = EXP 0x100 0x0
0x4d1: V325 = DIV V322 0x1
0x4d2: V326 = 0xffffffffffffffffffffffffffffffffffffffff
0x4e7: V327 = AND 0xffffffffffffffffffffffffffffffffffffffff V325
0x4e8: V328 = 0xffffffffffffffffffffffffffffffffffffffff
0x4fd: V329 = AND 0xffffffffffffffffffffffffffffffffffffffff V327
0x4fe: V330 = 0x8fc
0x501: V331 = ADDRESS
0x502: V332 = 0xffffffffffffffffffffffffffffffffffffffff
0x517: V333 = AND 0xffffffffffffffffffffffffffffffffffffffff V331
0x518: V334 = BALANCE V333
0x51b: V335 = ISZERO V334
0x51c: V336 = MUL V335 0x8fc
0x51e: V337 = 0x40
0x520: V338 = M[0x40]
0x521: V339 = 0x0
0x523: V340 = 0x40
0x525: V341 = M[0x40]
0x528: V342 = SUB V338 V341
0x52d: V343 = CALL V336 V329 V334 V341 V342 V341 0x0
0x533: V344 = ISZERO V343
0x534: V345 = ISZERO V344
0x535: V346 = 0x53d
0x538: JUMPI 0x53d V345
---
Entry stack: [V10, 0x125, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x125, 0x0]

================================

Block 0x539
[0x539:0x53c]
---
Predecessors: [0x4c5]
Successors: []
---
0x539 PUSH1 0x0
0x53b DUP1
0x53c REVERT
---
0x539: V347 = 0x0
0x53c: REVERT 0x0 0x0
---
Entry stack: [V10, 0x125, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x125, 0x0]

================================

Block 0x53d
[0x53d:0x53d]
---
Predecessors: [0x4c5]
Successors: [0x53e]
---
0x53d JUMPDEST
---
0x53d: JUMPDEST 
---
Entry stack: [V10, 0x125, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x125, 0x0]

================================

Block 0x53e
[0x53e:0x5fe]
---
Predecessors: [0x4a4, 0x53d]
Successors: [0x5ff, 0x603]
---
0x53e JUMPDEST
0x53f PUSH1 0x2
0x541 PUSH1 0x0
0x543 SWAP1
0x544 SLOAD
0x545 SWAP1
0x546 PUSH2 0x100
0x549 EXP
0x54a SWAP1
0x54b DIV
0x54c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x561 AND
0x562 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x577 AND
0x578 PUSH4 0x70a08231
0x57d ADDRESS
0x57e PUSH1 0x0
0x580 PUSH1 0x40
0x582 MLOAD
0x583 PUSH1 0x20
0x585 ADD
0x586 MSTORE
0x587 PUSH1 0x40
0x589 MLOAD
0x58a DUP3
0x58b PUSH4 0xffffffff
0x590 AND
0x591 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x5af MUL
0x5b0 DUP2
0x5b1 MSTORE
0x5b2 PUSH1 0x4
0x5b4 ADD
0x5b5 DUP1
0x5b6 DUP3
0x5b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5cc AND
0x5cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5e2 AND
0x5e3 DUP2
0x5e4 MSTORE
0x5e5 PUSH1 0x20
0x5e7 ADD
0x5e8 SWAP2
0x5e9 POP
0x5ea POP
0x5eb PUSH1 0x20
0x5ed PUSH1 0x40
0x5ef MLOAD
0x5f0 DUP1
0x5f1 DUP4
0x5f2 SUB
0x5f3 DUP2
0x5f4 PUSH1 0x0
0x5f6 DUP8
0x5f7 DUP1
0x5f8 EXTCODESIZE
0x5f9 ISZERO
0x5fa ISZERO
0x5fb PUSH2 0x603
0x5fe JUMPI
---
0x53e: JUMPDEST 
0x53f: V348 = 0x2
0x541: V349 = 0x0
0x544: V350 = S[0x2]
0x546: V351 = 0x100
0x549: V352 = EXP 0x100 0x0
0x54b: V353 = DIV V350 0x1
0x54c: V354 = 0xffffffffffffffffffffffffffffffffffffffff
0x561: V355 = AND 0xffffffffffffffffffffffffffffffffffffffff V353
0x562: V356 = 0xffffffffffffffffffffffffffffffffffffffff
0x577: V357 = AND 0xffffffffffffffffffffffffffffffffffffffff V355
0x578: V358 = 0x70a08231
0x57d: V359 = ADDRESS
0x57e: V360 = 0x0
0x580: V361 = 0x40
0x582: V362 = M[0x40]
0x583: V363 = 0x20
0x585: V364 = ADD 0x20 V362
0x586: M[V364] = 0x0
0x587: V365 = 0x40
0x589: V366 = M[0x40]
0x58b: V367 = 0xffffffff
0x590: V368 = AND 0xffffffff 0x70a08231
0x591: V369 = 0x100000000000000000000000000000000000000000000000000000000
0x5af: V370 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x5b1: M[V366] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x5b2: V371 = 0x4
0x5b4: V372 = ADD 0x4 V366
0x5b7: V373 = 0xffffffffffffffffffffffffffffffffffffffff
0x5cc: V374 = AND 0xffffffffffffffffffffffffffffffffffffffff V359
0x5cd: V375 = 0xffffffffffffffffffffffffffffffffffffffff
0x5e2: V376 = AND 0xffffffffffffffffffffffffffffffffffffffff V374
0x5e4: M[V372] = V376
0x5e5: V377 = 0x20
0x5e7: V378 = ADD 0x20 V372
0x5eb: V379 = 0x20
0x5ed: V380 = 0x40
0x5ef: V381 = M[0x40]
0x5f2: V382 = SUB V378 V381
0x5f4: V383 = 0x0
0x5f8: V384 = EXTCODESIZE V357
0x5f9: V385 = ISZERO V384
0x5fa: V386 = ISZERO V385
0x5fb: V387 = 0x603
0x5fe: JUMPI 0x603 V386
---
Entry stack: [V10, 0x125, 0x0]
Stack pops: 0
Stack additions: [V357, 0x70a08231, V378, 0x20, V381, V382, V381, 0x0, V357]
Exit stack: [V10, 0x125, 0x0, V357, 0x70a08231, V378, 0x20, V381, V382, V381, 0x0, V357]

================================

Block 0x5ff
[0x5ff:0x602]
---
Predecessors: [0x53e]
Successors: []
---
0x5ff PUSH1 0x0
0x601 DUP1
0x602 REVERT
---
0x5ff: V388 = 0x0
0x602: REVERT 0x0 0x0
---
Entry stack: [V10, 0x125, 0x0, V357, 0x70a08231, V378, 0x20, V381, V382, V381, 0x0, V357]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x125, 0x0, V357, 0x70a08231, V378, 0x20, V381, V382, V381, 0x0, V357]

================================

Block 0x603
[0x603:0x60f]
---
Predecessors: [0x53e]
Successors: [0x610, 0x614]
---
0x603 JUMPDEST
0x604 PUSH2 0x2c6
0x607 GAS
0x608 SUB
0x609 CALL
0x60a ISZERO
0x60b ISZERO
0x60c PUSH2 0x614
0x60f JUMPI
---
0x603: JUMPDEST 
0x604: V389 = 0x2c6
0x607: V390 = GAS
0x608: V391 = SUB V390 0x2c6
0x609: V392 = CALL V391 V357 0x0 V381 V382 V381 0x20
0x60a: V393 = ISZERO V392
0x60b: V394 = ISZERO V393
0x60c: V395 = 0x614
0x60f: JUMPI 0x614 V394
---
Entry stack: [V10, 0x125, 0x0, V357, 0x70a08231, V378, 0x20, V381, V382, V381, 0x0, V357]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x125, 0x0, V357, 0x70a08231, V378]

================================

Block 0x610
[0x610:0x613]
---
Predecessors: [0x603]
Successors: []
---
0x610 PUSH1 0x0
0x612 DUP1
0x613 REVERT
---
0x610: V396 = 0x0
0x613: REVERT 0x0 0x0
---
Entry stack: [V10, 0x125, 0x0, V357, 0x70a08231, V378]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x125, 0x0, V357, 0x70a08231, V378]

================================

Block 0x614
[0x614:0x629]
---
Predecessors: [0x603]
Successors: [0x62a, 0x735]
---
0x614 JUMPDEST
0x615 POP
0x616 POP
0x617 POP
0x618 PUSH1 0x40
0x61a MLOAD
0x61b DUP1
0x61c MLOAD
0x61d SWAP1
0x61e POP
0x61f SWAP1
0x620 POP
0x621 PUSH1 0x0
0x623 DUP2
0x624 GT
0x625 ISZERO
0x626 PUSH2 0x735
0x629 JUMPI
---
0x614: JUMPDEST 
0x618: V397 = 0x40
0x61a: V398 = M[0x40]
0x61c: V399 = M[V398]
0x621: V400 = 0x0
0x624: V401 = GT V399 0x0
0x625: V402 = ISZERO V401
0x626: V403 = 0x735
0x629: JUMPI 0x735 V402
---
Entry stack: [V10, 0x125, 0x0, V357, 0x70a08231, V378]
Stack pops: 4
Stack additions: [V399]
Exit stack: [V10, 0x125, V399]

================================

Block 0x62a
[0x62a:0x713]
---
Predecessors: [0x614]
Successors: [0x714, 0x718]
---
0x62a PUSH1 0x2
0x62c PUSH1 0x0
0x62e SWAP1
0x62f SLOAD
0x630 SWAP1
0x631 PUSH2 0x100
0x634 EXP
0x635 SWAP1
0x636 DIV
0x637 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x64c AND
0x64d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x662 AND
0x663 PUSH4 0xa9059cbb
0x668 PUSH1 0x3
0x66a PUSH1 0x0
0x66c SWAP1
0x66d SLOAD
0x66e SWAP1
0x66f PUSH2 0x100
0x672 EXP
0x673 SWAP1
0x674 DIV
0x675 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x68a AND
0x68b DUP4
0x68c PUSH1 0x0
0x68e PUSH1 0x40
0x690 MLOAD
0x691 PUSH1 0x20
0x693 ADD
0x694 MSTORE
0x695 PUSH1 0x40
0x697 MLOAD
0x698 DUP4
0x699 PUSH4 0xffffffff
0x69e AND
0x69f PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x6bd MUL
0x6be DUP2
0x6bf MSTORE
0x6c0 PUSH1 0x4
0x6c2 ADD
0x6c3 DUP1
0x6c4 DUP4
0x6c5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6da AND
0x6db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6f0 AND
0x6f1 DUP2
0x6f2 MSTORE
0x6f3 PUSH1 0x20
0x6f5 ADD
0x6f6 DUP3
0x6f7 DUP2
0x6f8 MSTORE
0x6f9 PUSH1 0x20
0x6fb ADD
0x6fc SWAP3
0x6fd POP
0x6fe POP
0x6ff POP
0x700 PUSH1 0x20
0x702 PUSH1 0x40
0x704 MLOAD
0x705 DUP1
0x706 DUP4
0x707 SUB
0x708 DUP2
0x709 PUSH1 0x0
0x70b DUP8
0x70c DUP1
0x70d EXTCODESIZE
0x70e ISZERO
0x70f ISZERO
0x710 PUSH2 0x718
0x713 JUMPI
---
0x62a: V404 = 0x2
0x62c: V405 = 0x0
0x62f: V406 = S[0x2]
0x631: V407 = 0x100
0x634: V408 = EXP 0x100 0x0
0x636: V409 = DIV V406 0x1
0x637: V410 = 0xffffffffffffffffffffffffffffffffffffffff
0x64c: V411 = AND 0xffffffffffffffffffffffffffffffffffffffff V409
0x64d: V412 = 0xffffffffffffffffffffffffffffffffffffffff
0x662: V413 = AND 0xffffffffffffffffffffffffffffffffffffffff V411
0x663: V414 = 0xa9059cbb
0x668: V415 = 0x3
0x66a: V416 = 0x0
0x66d: V417 = S[0x3]
0x66f: V418 = 0x100
0x672: V419 = EXP 0x100 0x0
0x674: V420 = DIV V417 0x1
0x675: V421 = 0xffffffffffffffffffffffffffffffffffffffff
0x68a: V422 = AND 0xffffffffffffffffffffffffffffffffffffffff V420
0x68c: V423 = 0x0
0x68e: V424 = 0x40
0x690: V425 = M[0x40]
0x691: V426 = 0x20
0x693: V427 = ADD 0x20 V425
0x694: M[V427] = 0x0
0x695: V428 = 0x40
0x697: V429 = M[0x40]
0x699: V430 = 0xffffffff
0x69e: V431 = AND 0xffffffff 0xa9059cbb
0x69f: V432 = 0x100000000000000000000000000000000000000000000000000000000
0x6bd: V433 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x6bf: M[V429] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x6c0: V434 = 0x4
0x6c2: V435 = ADD 0x4 V429
0x6c5: V436 = 0xffffffffffffffffffffffffffffffffffffffff
0x6da: V437 = AND 0xffffffffffffffffffffffffffffffffffffffff V422
0x6db: V438 = 0xffffffffffffffffffffffffffffffffffffffff
0x6f0: V439 = AND 0xffffffffffffffffffffffffffffffffffffffff V437
0x6f2: M[V435] = V439
0x6f3: V440 = 0x20
0x6f5: V441 = ADD 0x20 V435
0x6f8: M[V441] = V399
0x6f9: V442 = 0x20
0x6fb: V443 = ADD 0x20 V441
0x700: V444 = 0x20
0x702: V445 = 0x40
0x704: V446 = M[0x40]
0x707: V447 = SUB V443 V446
0x709: V448 = 0x0
0x70d: V449 = EXTCODESIZE V413
0x70e: V450 = ISZERO V449
0x70f: V451 = ISZERO V450
0x710: V452 = 0x718
0x713: JUMPI 0x718 V451
---
Entry stack: [V10, 0x125, V399]
Stack pops: 1
Stack additions: [S0, V413, 0xa9059cbb, V443, 0x20, V446, V447, V446, 0x0, V413]
Exit stack: [V10, 0x125, V399, V413, 0xa9059cbb, V443, 0x20, V446, V447, V446, 0x0, V413]

================================

Block 0x714
[0x714:0x717]
---
Predecessors: [0x62a]
Successors: []
---
0x714 PUSH1 0x0
0x716 DUP1
0x717 REVERT
---
0x714: V453 = 0x0
0x717: REVERT 0x0 0x0
---
Entry stack: [V10, 0x125, V399, V413, 0xa9059cbb, V443, 0x20, V446, V447, V446, 0x0, V413]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x125, V399, V413, 0xa9059cbb, V443, 0x20, V446, V447, V446, 0x0, V413]

================================

Block 0x718
[0x718:0x724]
---
Predecessors: [0x62a]
Successors: [0x725, 0x729]
---
0x718 JUMPDEST
0x719 PUSH2 0x2c6
0x71c GAS
0x71d SUB
0x71e CALL
0x71f ISZERO
0x720 ISZERO
0x721 PUSH2 0x729
0x724 JUMPI
---
0x718: JUMPDEST 
0x719: V454 = 0x2c6
0x71c: V455 = GAS
0x71d: V456 = SUB V455 0x2c6
0x71e: V457 = CALL V456 V413 0x0 V446 V447 V446 0x20
0x71f: V458 = ISZERO V457
0x720: V459 = ISZERO V458
0x721: V460 = 0x729
0x724: JUMPI 0x729 V459
---
Entry stack: [V10, 0x125, V399, V413, 0xa9059cbb, V443, 0x20, V446, V447, V446, 0x0, V413]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x125, V399, V413, 0xa9059cbb, V443]

================================

Block 0x725
[0x725:0x728]
---
Predecessors: [0x718]
Successors: []
---
0x725 PUSH1 0x0
0x727 DUP1
0x728 REVERT
---
0x725: V461 = 0x0
0x728: REVERT 0x0 0x0
---
Entry stack: [V10, 0x125, V399, V413, 0xa9059cbb, V443]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x125, V399, V413, 0xa9059cbb, V443]

================================

Block 0x729
[0x729:0x734]
---
Predecessors: [0x718]
Successors: [0x735]
---
0x729 JUMPDEST
0x72a POP
0x72b POP
0x72c POP
0x72d PUSH1 0x40
0x72f MLOAD
0x730 DUP1
0x731 MLOAD
0x732 SWAP1
0x733 POP
0x734 POP
---
0x729: JUMPDEST 
0x72d: V462 = 0x40
0x72f: V463 = M[0x40]
0x731: V464 = M[V463]
---
Entry stack: [V10, 0x125, V399, V413, 0xa9059cbb, V443]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x125, V399]

================================

Block 0x735
[0x735:0x737]
---
Predecessors: [0x614, 0x729]
Successors: [0x125]
---
0x735 JUMPDEST
0x736 POP
0x737 JUMP
---
0x735: JUMPDEST 
0x737: JUMP 0x125
---
Entry stack: [V10, 0x125, V399]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x738
[0x738:0x74a]
---
Predecessors: [0x132]
Successors: [0x13a]
---
0x738 JUMPDEST
0x739 PUSH1 0x4
0x73b PUSH1 0x14
0x73d SWAP1
0x73e SLOAD
0x73f SWAP1
0x740 PUSH2 0x100
0x743 EXP
0x744 SWAP1
0x745 DIV
0x746 PUSH1 0xff
0x748 AND
0x749 DUP2
0x74a JUMP
---
0x738: JUMPDEST 
0x739: V465 = 0x4
0x73b: V466 = 0x14
0x73e: V467 = S[0x4]
0x740: V468 = 0x100
0x743: V469 = EXP 0x100 0x14
0x745: V470 = DIV V467 0x10000000000000000000000000000000000000000
0x746: V471 = 0xff
0x748: V472 = AND 0xff V470
0x74a: JUMP 0x13a
---
Entry stack: [V10, 0x13a]
Stack pops: 1
Stack additions: [S0, V472]
Exit stack: [V10, 0x13a, V472]

================================

Block 0x74b
[0x74b:0x750]
---
Predecessors: [0x15f]
Successors: [0x167]
---
0x74b JUMPDEST
0x74c PUSH1 0x1
0x74e SLOAD
0x74f DUP2
0x750 JUMP
---
0x74b: JUMPDEST 
0x74c: V473 = 0x1
0x74e: V474 = S[0x1]
0x750: JUMP 0x167
---
Entry stack: [V10, 0x167]
Stack pops: 1
Stack additions: [S0, V474]
Exit stack: [V10, 0x167, V474]

================================

Block 0x751
[0x751:0x776]
---
Predecessors: [0x188]
Successors: [0x190]
---
0x751 JUMPDEST
0x752 PUSH1 0x2
0x754 PUSH1 0x0
0x756 SWAP1
0x757 SLOAD
0x758 SWAP1
0x759 PUSH2 0x100
0x75c EXP
0x75d SWAP1
0x75e DIV
0x75f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x774 AND
0x775 DUP2
0x776 JUMP
---
0x751: JUMPDEST 
0x752: V475 = 0x2
0x754: V476 = 0x0
0x757: V477 = S[0x2]
0x759: V478 = 0x100
0x75c: V479 = EXP 0x100 0x0
0x75e: V480 = DIV V477 0x1
0x75f: V481 = 0xffffffffffffffffffffffffffffffffffffffff
0x774: V482 = AND 0xffffffffffffffffffffffffffffffffffffffff V480
0x776: JUMP 0x190
---
Entry stack: [V10, 0x190]
Stack pops: 1
Stack additions: [S0, V482]
Exit stack: [V10, 0x190, V482]

================================

Block 0x777
[0x777:0x7a2]
---
Predecessors: []
Successors: []
---
0x777 STOP
0x778 LOG1
0x779 PUSH6 0x627a7a723058
0x780 SHA3
0x781 MISSING 0xe6
0x782 PUSH11 0xddceaf57b3558bbc5bb26b
0x78e MISSING 0xce
0x78f MISSING 0xfc
0x790 MISSING 0xb3
0x791 SSTORE
0x792 DUP11
0x793 CALLER
0x794 MISSING 0xa9
0x795 MISSING 0x2e
0x796 JUMPDEST
0x797 MISSING 0x2f
0x798 SGT
0x799 MISSING 0xd
0x79a DUP16
0x79b MISSING 0xf
0x79c ISZERO
0x79d MISSING 0xbb
0x79e MISSING 0xbc
0x79f SWAP1
0x7a0 MSTORE8
0x7a1 STOP
0x7a2 MISSING 0x29
---
0x777: STOP 
0x778: LOG S0 S1 S2
0x779: V483 = 0x627a7a723058
0x780: V484 = SHA3 0x627a7a723058 S3
0x781: MISSING 0xe6
0x782: V485 = 0xddceaf57b3558bbc5bb26b
0x78e: MISSING 0xce
0x78f: MISSING 0xfc
0x790: MISSING 0xb3
0x791: S[S0] = S1
0x793: V486 = CALLER
0x794: MISSING 0xa9
0x795: MISSING 0x2e
0x796: JUMPDEST 
0x797: MISSING 0x2f
0x798: V487 = SGT S0 S1
0x799: MISSING 0xd
0x79b: MISSING 0xf
0x79c: V488 = ISZERO S0
0x79d: MISSING 0xbb
0x79e: MISSING 0xbc
0x7a0: M8[S1] = S0
0x7a1: STOP 
0x7a2: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V484, 0xddceaf57b3558bbc5bb26b, V486, S12, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, V487, S15, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, V488]
Exit stack: []

================================

Function 0:
Public function signature: 0x1f0ba6c9
Entry block: 0xd4
Exit block: 0xe7
Body: 0xd4, 0xdb, 0xdf, 0xe7, 0x1d2, 0x1f5, 0x1f9, 0x2bd, 0x2c1, 0x2ce, 0x2d2, 0x2e4, 0x2e8, 0x3d5, 0x3d9, 0x3e6, 0x3ea, 0x3fb, 0x3ff, 0x45f, 0x463

Function 1:
Public function signature: 0x35ece4a6
Entry block: 0xe9
Exit block: 0xfc
Body: 0xe9, 0xf0, 0xf4, 0xfc, 0x480

Function 2:
Public function signature: 0x590e1ae3
Entry block: 0x112
Exit block: 0x725
Body: 0x112, 0x119, 0x11d, 0x125, 0x486, 0x4a0, 0x4a4, 0x4c5, 0x539, 0x53d, 0x53e, 0x5ff, 0x603, 0x610, 0x614, 0x62a, 0x714, 0x718, 0x725, 0x729, 0x735

Function 3:
Public function signature: 0x5f4a019b
Entry block: 0x127
Exit block: 0x13a
Body: 0x127, 0x12e, 0x132, 0x13a, 0x738

Function 4:
Public function signature: 0x6a84fc4b
Entry block: 0x154
Exit block: 0x167
Body: 0x154, 0x15b, 0x15f, 0x167, 0x74b

Function 5:
Public function signature: 0xfc0c546a
Entry block: 0x17d
Exit block: 0x190
Body: 0x17d, 0x184, 0x188, 0x190, 0x751

Function 6:
Public fallback function
Entry block: 0x76
Exit block: 0xce
Body: 0x76, 0xce, 0xd2

