Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x56]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x56
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x56
0xa: JUMPI 0x56 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x1e]
---
Predecessors: [0x0]
Successors: [0x1f, 0xef]
---
0xb PUSH1 0xe0
0xd PUSH1 0x2
0xf EXP
0x10 PUSH1 0x0
0x12 CALLDATALOAD
0x13 DIV
0x14 PUSH4 0x41c0e1b5
0x19 DUP2
0x1a EQ
0x1b PUSH2 0xef
0x1e JUMPI
---
0xb: V5 = 0xe0
0xd: V6 = 0x2
0xf: V7 = EXP 0x2 0xe0
0x10: V8 = 0x0
0x12: V9 = CALLDATALOAD 0x0
0x13: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x14: V11 = 0x41c0e1b5
0x1a: V12 = EQ V10 0x41c0e1b5
0x1b: V13 = 0xef
0x1e: JUMPI 0xef V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x1f
[0x1f:0x29]
---
Predecessors: [0xb]
Successors: [0x2a, 0x10d]
---
0x1f DUP1
0x20 PUSH4 0x4e6630b0
0x25 EQ
0x26 PUSH2 0x10d
0x29 JUMPI
---
0x20: V14 = 0x4e6630b0
0x25: V15 = EQ 0x4e6630b0 V10
0x26: V16 = 0x10d
0x29: JUMPI 0x10d V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x2a
[0x2a:0x34]
---
Predecessors: [0x1f]
Successors: [0x35, 0x116]
---
0x2a DUP1
0x2b PUSH4 0x5d91526d
0x30 EQ
0x31 PUSH2 0x116
0x34 JUMPI
---
0x2b: V17 = 0x5d91526d
0x30: V18 = EQ 0x5d91526d V10
0x31: V19 = 0x116
0x34: JUMPI 0x116 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x35
[0x35:0x3f]
---
Predecessors: [0x2a]
Successors: [0x40, 0x19e]
---
0x35 DUP1
0x36 PUSH4 0x8da5cb5b
0x3b EQ
0x3c PUSH2 0x19e
0x3f JUMPI
---
0x36: V20 = 0x8da5cb5b
0x3b: V21 = EQ 0x8da5cb5b V10
0x3c: V22 = 0x19e
0x3f: JUMPI 0x19e V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0x35]
Successors: [0x4b, 0x1b0]
---
0x40 DUP1
0x41 PUSH4 0xc5e57985
0x46 EQ
0x47 PUSH2 0x1b0
0x4a JUMPI
---
0x41: V23 = 0xc5e57985
0x46: V24 = EQ 0xc5e57985 V10
0x47: V25 = 0x1b0
0x4a: JUMPI 0x1b0 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x20c]
---
0x4b DUP1
0x4c PUSH4 0xf2fde38b
0x51 EQ
0x52 PUSH2 0x20c
0x55 JUMPI
---
0x4c: V26 = 0xf2fde38b
0x51: V27 = EQ 0xf2fde38b V10
0x52: V28 = 0x20c
0x55: JUMPI 0x20c V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x56
[0x56:0x80]
---
Predecessors: [0x0, 0x4b]
Successors: [0x81]
---
0x56 JUMPDEST
0x57 PUSH1 0x0
0x59 PUSH1 0x60
0x5b MSTORE
0x5c PUSH1 0x2
0x5e DUP1
0x5f SLOAD
0x60 CALLVALUE
0x61 ADD
0x62 SWAP1
0x63 SSTORE
0x64 PUSH1 0xc0
0x66 PUSH1 0x40
0x68 MSTORE
0x69 PUSH1 0x7
0x6b PUSH1 0x80
0x6d SWAP1
0x6e DUP2
0x6f MSTORE
0x70 PUSH1 0xc8
0x72 PUSH1 0x2
0x74 EXP
0x75 PUSH7 0x73756363657373
0x7d MUL
0x7e PUSH1 0xa0
0x80 MSTORE
---
0x56: JUMPDEST 
0x57: V29 = 0x0
0x59: V30 = 0x60
0x5b: M[0x60] = 0x0
0x5c: V31 = 0x2
0x5f: V32 = S[0x2]
0x60: V33 = CALLVALUE
0x61: V34 = ADD V33 V32
0x63: S[0x2] = V34
0x64: V35 = 0xc0
0x66: V36 = 0x40
0x68: M[0x40] = 0xc0
0x69: V37 = 0x7
0x6b: V38 = 0x80
0x6f: M[0x80] = 0x7
0x70: V39 = 0xc8
0x72: V40 = 0x2
0x74: V41 = EXP 0x2 0xc8
0x75: V42 = 0x73756363657373
0x7d: V43 = MUL 0x73756363657373 0x100000000000000000000000000000000000000000000000000
0x7e: V44 = 0xa0
0x80: M[0xa0] = 0x7375636365737300000000000000000000000000000000000000000000000000
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x80]
Exit stack: [V10, 0x80]

================================

Block 0x81
[0x81:0xc7]
---
Predecessors: [0x56, 0x116, 0x294]
Successors: [0xc8, 0xe1]
---
0x81 JUMPDEST
0x82 PUSH1 0x40
0x84 MLOAD
0x85 DUP1
0x86 DUP1
0x87 PUSH1 0x20
0x89 ADD
0x8a DUP3
0x8b DUP2
0x8c SUB
0x8d DUP3
0x8e MSTORE
0x8f DUP4
0x90 DUP2
0x91 DUP2
0x92 MLOAD
0x93 DUP2
0x94 MSTORE
0x95 PUSH1 0x20
0x97 ADD
0x98 SWAP2
0x99 POP
0x9a DUP1
0x9b MLOAD
0x9c SWAP1
0x9d PUSH1 0x20
0x9f ADD
0xa0 SWAP1
0xa1 DUP1
0xa2 DUP4
0xa3 DUP4
0xa4 DUP3
0xa5 SWAP1
0xa6 PUSH1 0x0
0xa8 PUSH1 0x4
0xaa PUSH1 0x20
0xac DUP5
0xad PUSH1 0x1f
0xaf ADD
0xb0 DIV
0xb1 PUSH1 0xf
0xb3 MUL
0xb4 PUSH1 0x3
0xb6 ADD
0xb7 CALL
0xb8 POP
0xb9 SWAP1
0xba POP
0xbb SWAP1
0xbc DUP2
0xbd ADD
0xbe SWAP1
0xbf PUSH1 0x1f
0xc1 AND
0xc2 DUP1
0xc3 ISZERO
0xc4 PUSH2 0xe1
0xc7 JUMPI
---
0x81: JUMPDEST 
0x82: V45 = 0x40
0x84: V46 = M[0x40]
0x87: V47 = 0x20
0x89: V48 = ADD 0x20 V46
0x8c: V49 = SUB V48 V46
0x8e: M[V46] = V49
0x92: V50 = M[S0]
0x94: M[V48] = V50
0x95: V51 = 0x20
0x97: V52 = ADD 0x20 V48
0x9b: V53 = M[S0]
0x9d: V54 = 0x20
0x9f: V55 = ADD 0x20 S0
0xa6: V56 = 0x0
0xa8: V57 = 0x4
0xaa: V58 = 0x20
0xad: V59 = 0x1f
0xaf: V60 = ADD 0x1f V53
0xb0: V61 = DIV V60 0x20
0xb1: V62 = 0xf
0xb3: V63 = MUL 0xf V61
0xb4: V64 = 0x3
0xb6: V65 = ADD 0x3 V63
0xb7: V66 = CALL V65 0x4 0x0 V55 V53 V52 V53
0xbd: V67 = ADD V53 V52
0xbf: V68 = 0x1f
0xc1: V69 = AND 0x1f V53
0xc3: V70 = ISZERO V69
0xc4: V71 = 0xe1
0xc7: JUMPI 0xe1 V70
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: [S0, V46, V46, V67, V69]
Exit stack: [V10, S1, S0, V46, V46, V67, V69]

================================

Block 0xc8
[0xc8:0xe0]
---
Predecessors: [0x81]
Successors: [0xe1]
---
0xc8 DUP1
0xc9 DUP3
0xca SUB
0xcb DUP1
0xcc MLOAD
0xcd PUSH1 0x1
0xcf DUP4
0xd0 PUSH1 0x20
0xd2 SUB
0xd3 PUSH2 0x100
0xd6 EXP
0xd7 SUB
0xd8 NOT
0xd9 AND
0xda DUP2
0xdb MSTORE
0xdc PUSH1 0x20
0xde ADD
0xdf SWAP2
0xe0 POP
---
0xca: V72 = SUB V67 V69
0xcc: V73 = M[V72]
0xcd: V74 = 0x1
0xd0: V75 = 0x20
0xd2: V76 = SUB 0x20 V69
0xd3: V77 = 0x100
0xd6: V78 = EXP 0x100 V76
0xd7: V79 = SUB V78 0x1
0xd8: V80 = NOT V79
0xd9: V81 = AND V80 V73
0xdb: M[V72] = V81
0xdc: V82 = 0x20
0xde: V83 = ADD 0x20 V72
---
Entry stack: [V10, S5, S4, V46, V46, V67, V69]
Stack pops: 2
Stack additions: [V83, S0]
Exit stack: [V10, S5, S4, V46, V46, V83, V69]

================================

Block 0xe1
[0xe1:0xee]
---
Predecessors: [0x81, 0xc8]
Successors: []
---
0xe1 JUMPDEST
0xe2 POP
0xe3 SWAP3
0xe4 POP
0xe5 POP
0xe6 POP
0xe7 PUSH1 0x40
0xe9 MLOAD
0xea DUP1
0xeb SWAP2
0xec SUB
0xed SWAP1
0xee RETURN
---
0xe1: JUMPDEST 
0xe7: V84 = 0x40
0xe9: V85 = M[0x40]
0xec: V86 = SUB S1 V85
0xee: RETURN V85 V86
---
Entry stack: [V10, S5, S4, V46, V46, S1, V69]
Stack pops: 5
Stack additions: []
Exit stack: [V10, S5]

================================

Block 0xef
[0xef:0x108]
---
Predecessors: [0xb]
Successors: [0x109, 0x25b]
---
0xef JUMPDEST
0xf0 PUSH2 0x22d
0xf3 PUSH1 0x0
0xf5 SLOAD
0xf6 CALLER
0xf7 PUSH1 0x1
0xf9 PUSH1 0xa0
0xfb PUSH1 0x2
0xfd EXP
0xfe SUB
0xff SWAP1
0x100 DUP2
0x101 AND
0x102 SWAP2
0x103 AND
0x104 EQ
0x105 PUSH2 0x25b
0x108 JUMPI
---
0xef: JUMPDEST 
0xf0: V87 = 0x22d
0xf3: V88 = 0x0
0xf5: V89 = S[0x0]
0xf6: V90 = CALLER
0xf7: V91 = 0x1
0xf9: V92 = 0xa0
0xfb: V93 = 0x2
0xfd: V94 = EXP 0x2 0xa0
0xfe: V95 = SUB 0x10000000000000000000000000000000000000000 0x1
0x101: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V90
0x103: V97 = AND V89 0xffffffffffffffffffffffffffffffffffffffff
0x104: V98 = EQ V97 V96
0x105: V99 = 0x25b
0x108: JUMPI 0x25b V98
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x22d]
Exit stack: [V10, 0x22d]

================================

Block 0x109
[0x109:0x10c]
---
Predecessors: [0xef]
Successors: []
---
0x109 PUSH2 0x2
0x10c JUMP
---
0x109: V100 = 0x2
0x10c: THROW 
---
Entry stack: [V10, 0x22d]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x22d]

================================

Block 0x10d
[0x10d:0x115]
---
Predecessors: [0x1f]
Successors: [0x22f]
---
0x10d JUMPDEST
0x10e PUSH2 0x22f
0x111 PUSH1 0x2
0x113 SLOAD
0x114 DUP2
0x115 JUMP
---
0x10d: JUMPDEST 
0x10e: V101 = 0x22f
0x111: V102 = 0x2
0x113: V103 = S[0x2]
0x115: JUMP 0x22f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x22f, V103]
Exit stack: [V10, 0x22f, V103]

================================

Block 0x116
[0x116:0x19d]
---
Predecessors: [0x2a]
Successors: [0x81]
---
0x116 JUMPDEST
0x117 PUSH2 0x81
0x11a PUSH1 0x4
0x11c CALLDATALOAD
0x11d PUSH1 0x80
0x11f PUSH1 0x40
0x121 DUP2
0x122 SWAP1
0x123 MSTORE
0x124 PUSH1 0x0
0x126 PUSH1 0x60
0x128 DUP2
0x129 DUP2
0x12a MSTORE
0x12b SWAP2
0x12c CALLER
0x12d PUSH1 0x1
0x12f PUSH1 0xa0
0x131 PUSH1 0x2
0x133 EXP
0x134 SUB
0x135 AND
0x136 SWAP2
0x137 SWAP1
0x138 DUP5
0x139 SWAP1
0x13a DUP3
0x13b DUP2
0x13c DUP2
0x13d DUP2
0x13e DUP6
0x13f DUP9
0x140 DUP4
0x141 CALL
0x142 POP
0x143 POP
0x144 PUSH1 0x40
0x146 DUP1
0x147 MLOAD
0x148 SWAP2
0x149 DUP3
0x14a MSTORE
0x14b MLOAD
0x14c PUSH32 0x24abdb5865df5079dcc5ac590ff6f01d5c16edbc5fab4e195d9febd1114503da
0x16d SWAP4
0x16e POP
0x16f SWAP1
0x170 DUP2
0x171 SWAP1
0x172 SUB
0x173 PUSH1 0x20
0x175 ADD
0x176 SWAP2
0x177 POP
0x178 LOG1
0x179 POP
0x17a POP
0x17b PUSH1 0x40
0x17d DUP1
0x17e MLOAD
0x17f DUP1
0x180 DUP3
0x181 ADD
0x182 SWAP1
0x183 SWAP2
0x184 MSTORE
0x185 PUSH1 0x7
0x187 DUP2
0x188 MSTORE
0x189 PUSH1 0xc8
0x18b PUSH1 0x2
0x18d EXP
0x18e PUSH7 0x73756363657373
0x196 MUL
0x197 PUSH1 0x20
0x199 DUP3
0x19a ADD
0x19b MSTORE
0x19c SWAP1
0x19d JUMP
---
0x116: JUMPDEST 
0x117: V104 = 0x81
0x11a: V105 = 0x4
0x11c: V106 = CALLDATALOAD 0x4
0x11d: V107 = 0x80
0x11f: V108 = 0x40
0x123: M[0x40] = 0x80
0x124: V109 = 0x0
0x126: V110 = 0x60
0x12a: M[0x60] = 0x0
0x12c: V111 = CALLER
0x12d: V112 = 0x1
0x12f: V113 = 0xa0
0x131: V114 = 0x2
0x133: V115 = EXP 0x2 0xa0
0x134: V116 = SUB 0x10000000000000000000000000000000000000000 0x1
0x135: V117 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x141: V118 = CALL 0x0 V117 V106 0x80 0x0 0x80 0x0
0x144: V119 = 0x40
0x147: V120 = M[0x40]
0x14a: M[V120] = V106
0x14b: V121 = M[0x40]
0x14c: V122 = 0x24abdb5865df5079dcc5ac590ff6f01d5c16edbc5fab4e195d9febd1114503da
0x172: V123 = SUB V120 V121
0x173: V124 = 0x20
0x175: V125 = ADD 0x20 V123
0x178: LOG V121 V125 0x24abdb5865df5079dcc5ac590ff6f01d5c16edbc5fab4e195d9febd1114503da
0x17b: V126 = 0x40
0x17e: V127 = M[0x40]
0x181: V128 = ADD 0x40 V127
0x184: M[0x40] = V128
0x185: V129 = 0x7
0x188: M[V127] = 0x7
0x189: V130 = 0xc8
0x18b: V131 = 0x2
0x18d: V132 = EXP 0x2 0xc8
0x18e: V133 = 0x73756363657373
0x196: V134 = MUL 0x73756363657373 0x100000000000000000000000000000000000000000000000000
0x197: V135 = 0x20
0x19a: V136 = ADD V127 0x20
0x19b: M[V136] = 0x7375636365737300000000000000000000000000000000000000000000000000
0x19d: JUMP 0x81
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [V127]
Exit stack: [V10, V127]

================================

Block 0x19e
[0x19e:0x1af]
---
Predecessors: [0x35]
Successors: [0x22f]
---
0x19e JUMPDEST
0x19f PUSH2 0x22f
0x1a2 PUSH1 0x0
0x1a4 SLOAD
0x1a5 PUSH1 0x1
0x1a7 PUSH1 0xa0
0x1a9 PUSH1 0x2
0x1ab EXP
0x1ac SUB
0x1ad AND
0x1ae DUP2
0x1af JUMP
---
0x19e: JUMPDEST 
0x19f: V137 = 0x22f
0x1a2: V138 = 0x0
0x1a4: V139 = S[0x0]
0x1a5: V140 = 0x1
0x1a7: V141 = 0xa0
0x1a9: V142 = 0x2
0x1ab: V143 = EXP 0x2 0xa0
0x1ac: V144 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ad: V145 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x1af: JUMP 0x22f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x22f, V145]
Exit stack: [V10, 0x22f, V145]

================================

Block 0x1b0
[0x1b0:0x1f0]
---
Predecessors: [0x40]
Successors: [0x1f1, 0x294]
---
0x1b0 JUMPDEST
0x1b1 PUSH2 0x81
0x1b4 PUSH1 0x1
0x1b6 DUP1
0x1b7 SLOAD
0x1b8 PUSH1 0x20
0x1ba PUSH1 0x2
0x1bc PUSH1 0x0
0x1be NOT
0x1bf DUP4
0x1c0 DUP6
0x1c1 AND
0x1c2 ISZERO
0x1c3 PUSH2 0x100
0x1c6 MUL
0x1c7 ADD
0x1c8 SWAP1
0x1c9 SWAP3
0x1ca AND
0x1cb SWAP2
0x1cc SWAP1
0x1cd SWAP2
0x1ce DIV
0x1cf PUSH1 0x1f
0x1d1 DUP2
0x1d2 ADD
0x1d3 DUP3
0x1d4 SWAP1
0x1d5 DIV
0x1d6 SWAP1
0x1d7 SWAP2
0x1d8 MUL
0x1d9 PUSH1 0x80
0x1db SWAP1
0x1dc DUP2
0x1dd ADD
0x1de PUSH1 0x40
0x1e0 MSTORE
0x1e1 PUSH1 0x60
0x1e3 DUP3
0x1e4 DUP2
0x1e5 MSTORE
0x1e6 SWAP3
0x1e7 SWAP2
0x1e8 SWAP1
0x1e9 DUP3
0x1ea DUP3
0x1eb DUP1
0x1ec ISZERO
0x1ed PUSH2 0x294
0x1f0 JUMPI
---
0x1b0: JUMPDEST 
0x1b1: V146 = 0x81
0x1b4: V147 = 0x1
0x1b7: V148 = S[0x1]
0x1b8: V149 = 0x20
0x1ba: V150 = 0x2
0x1bc: V151 = 0x0
0x1be: V152 = NOT 0x0
0x1c1: V153 = AND 0x1 V148
0x1c2: V154 = ISZERO V153
0x1c3: V155 = 0x100
0x1c6: V156 = MUL 0x100 V154
0x1c7: V157 = ADD V156 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x1ca: V158 = AND V148 V157
0x1ce: V159 = DIV V158 0x2
0x1cf: V160 = 0x1f
0x1d2: V161 = ADD V159 0x1f
0x1d5: V162 = DIV V161 0x20
0x1d8: V163 = MUL 0x20 V162
0x1d9: V164 = 0x80
0x1dd: V165 = ADD 0x80 V163
0x1de: V166 = 0x40
0x1e0: M[0x40] = V165
0x1e1: V167 = 0x60
0x1e5: M[0x60] = V159
0x1ec: V168 = ISZERO V159
0x1ed: V169 = 0x294
0x1f0: JUMPI 0x294 V168
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x81, 0x60, 0x1, V159, 0x80, 0x1, V159]
Exit stack: [V10, 0x81, 0x60, 0x1, V159, 0x80, 0x1, V159]

================================

Block 0x1f1
[0x1f1:0x1f8]
---
Predecessors: [0x1b0]
Successors: [0x1f9, 0x269]
---
0x1f1 DUP1
0x1f2 PUSH1 0x1f
0x1f4 LT
0x1f5 PUSH2 0x269
0x1f8 JUMPI
---
0x1f2: V170 = 0x1f
0x1f4: V171 = LT 0x1f V159
0x1f5: V172 = 0x269
0x1f8: JUMPI 0x269 V171
---
Entry stack: [V10, 0x81, 0x60, 0x1, V159, 0x80, 0x1, V159]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x81, 0x60, 0x1, V159, 0x80, 0x1, V159]

================================

Block 0x1f9
[0x1f9:0x20b]
---
Predecessors: [0x1f1]
Successors: [0x294]
---
0x1f9 PUSH2 0x100
0x1fc DUP1
0x1fd DUP4
0x1fe SLOAD
0x1ff DIV
0x200 MUL
0x201 DUP4
0x202 MSTORE
0x203 SWAP2
0x204 PUSH1 0x20
0x206 ADD
0x207 SWAP2
0x208 PUSH2 0x294
0x20b JUMP
---
0x1f9: V173 = 0x100
0x1fe: V174 = S[0x1]
0x1ff: V175 = DIV V174 0x100
0x200: V176 = MUL V175 0x100
0x202: M[0x80] = V176
0x204: V177 = 0x20
0x206: V178 = ADD 0x20 0x80
0x208: V179 = 0x294
0x20b: JUMP 0x294
---
Entry stack: [V10, 0x81, 0x60, 0x1, V159, 0x80, 0x1, V159]
Stack pops: 3
Stack additions: [0xa0, S1, S0]
Exit stack: [V10, 0x81, 0x60, 0x1, V159, 0xa0, 0x1, V159]

================================

Block 0x20c
[0x20c:0x228]
---
Predecessors: [0x4b]
Successors: [0x229, 0x239]
---
0x20c JUMPDEST
0x20d PUSH2 0x22d
0x210 PUSH1 0x4
0x212 CALLDATALOAD
0x213 PUSH1 0x0
0x215 SLOAD
0x216 CALLER
0x217 PUSH1 0x1
0x219 PUSH1 0xa0
0x21b PUSH1 0x2
0x21d EXP
0x21e SUB
0x21f SWAP1
0x220 DUP2
0x221 AND
0x222 SWAP2
0x223 AND
0x224 EQ
0x225 PUSH2 0x239
0x228 JUMPI
---
0x20c: JUMPDEST 
0x20d: V180 = 0x22d
0x210: V181 = 0x4
0x212: V182 = CALLDATALOAD 0x4
0x213: V183 = 0x0
0x215: V184 = S[0x0]
0x216: V185 = CALLER
0x217: V186 = 0x1
0x219: V187 = 0xa0
0x21b: V188 = 0x2
0x21d: V189 = EXP 0x2 0xa0
0x21e: V190 = SUB 0x10000000000000000000000000000000000000000 0x1
0x221: V191 = AND 0xffffffffffffffffffffffffffffffffffffffff V185
0x223: V192 = AND V184 0xffffffffffffffffffffffffffffffffffffffff
0x224: V193 = EQ V192 V191
0x225: V194 = 0x239
0x228: JUMPI 0x239 V193
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x22d, V182]
Exit stack: [V10, 0x22d, V182]

================================

Block 0x229
[0x229:0x22c]
---
Predecessors: [0x20c]
Successors: []
---
0x229 PUSH2 0x2
0x22c JUMP
---
0x229: V195 = 0x2
0x22c: THROW 
---
Entry stack: [V10, 0x22d, V182]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x22d, V182]

================================

Block 0x22d
[0x22d:0x22e]
---
Predecessors: [0x239]
Successors: []
---
0x22d JUMPDEST
0x22e STOP
---
0x22d: JUMPDEST 
0x22e: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x22f
[0x22f:0x238]
---
Predecessors: [0x10d, 0x19e]
Successors: []
---
0x22f JUMPDEST
0x230 PUSH1 0x60
0x232 SWAP1
0x233 DUP2
0x234 MSTORE
0x235 PUSH1 0x20
0x237 SWAP1
0x238 RETURN
---
0x22f: JUMPDEST 
0x230: V196 = 0x60
0x234: M[0x60] = S0
0x235: V197 = 0x20
0x238: RETURN 0x60 0x20
---
Entry stack: [V10, 0x22f, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x22f]

================================

Block 0x239
[0x239:0x25a]
---
Predecessors: [0x20c]
Successors: [0x22d]
---
0x239 JUMPDEST
0x23a PUSH1 0x0
0x23c DUP1
0x23d SLOAD
0x23e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x253 NOT
0x254 AND
0x255 DUP3
0x256 OR
0x257 SWAP1
0x258 SSTORE
0x259 POP
0x25a JUMP
---
0x239: JUMPDEST 
0x23a: V198 = 0x0
0x23d: V199 = S[0x0]
0x23e: V200 = 0xffffffffffffffffffffffffffffffffffffffff
0x253: V201 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x254: V202 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V199
0x256: V203 = OR V182 V202
0x258: S[0x0] = V203
0x25a: JUMP 0x22d
---
Entry stack: [V10, 0x22d, V182]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x25b
[0x25b:0x268]
---
Predecessors: [0xef]
Successors: []
---
0x25b JUMPDEST
0x25c PUSH1 0x0
0x25e SLOAD
0x25f PUSH1 0x1
0x261 PUSH1 0xa0
0x263 PUSH1 0x2
0x265 EXP
0x266 SUB
0x267 AND
0x268 SELFDESTRUCT
---
0x25b: JUMPDEST 
0x25c: V204 = 0x0
0x25e: V205 = S[0x0]
0x25f: V206 = 0x1
0x261: V207 = 0xa0
0x263: V208 = 0x2
0x265: V209 = EXP 0x2 0xa0
0x266: V210 = SUB 0x10000000000000000000000000000000000000000 0x1
0x267: V211 = AND 0xffffffffffffffffffffffffffffffffffffffff V205
0x268: SELFDESTRUCT V211
---
Entry stack: [V10, 0x22d]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x22d]

================================

Block 0x269
[0x269:0x276]
---
Predecessors: [0x1f1]
Successors: [0x277]
---
0x269 JUMPDEST
0x26a DUP3
0x26b ADD
0x26c SWAP2
0x26d SWAP1
0x26e PUSH1 0x0
0x270 MSTORE
0x271 PUSH1 0x20
0x273 PUSH1 0x0
0x275 SHA3
0x276 SWAP1
---
0x269: JUMPDEST 
0x26b: V212 = ADD 0x80 V159
0x26e: V213 = 0x0
0x270: M[0x0] = 0x1
0x271: V214 = 0x20
0x273: V215 = 0x0
0x275: V216 = SHA3 0x0 0x20
---
Entry stack: [V10, 0x81, 0x60, 0x1, V159, 0x80, 0x1, V159]
Stack pops: 3
Stack additions: [V212, V216, S2]
Exit stack: [V10, 0x81, 0x60, 0x1, V159, V212, V216, 0x80]

================================

Block 0x277
[0x277:0x28a]
---
Predecessors: [0x269, 0x277]
Successors: [0x277, 0x28b]
---
0x277 JUMPDEST
0x278 DUP2
0x279 SLOAD
0x27a DUP2
0x27b MSTORE
0x27c SWAP1
0x27d PUSH1 0x1
0x27f ADD
0x280 SWAP1
0x281 PUSH1 0x20
0x283 ADD
0x284 DUP1
0x285 DUP4
0x286 GT
0x287 PUSH2 0x277
0x28a JUMPI
---
0x277: JUMPDEST 
0x279: V217 = S[S1]
0x27b: M[S0] = V217
0x27d: V218 = 0x1
0x27f: V219 = ADD 0x1 S1
0x281: V220 = 0x20
0x283: V221 = ADD 0x20 S0
0x286: V222 = GT V212 V221
0x287: V223 = 0x277
0x28a: JUMPI 0x277 V222
---
Entry stack: [V10, 0x81, 0x60, 0x1, V159, V212, S1, S0]
Stack pops: 3
Stack additions: [S2, V219, V221]
Exit stack: [V10, 0x81, 0x60, 0x1, V159, V212, V219, V221]

================================

Block 0x28b
[0x28b:0x293]
---
Predecessors: [0x277]
Successors: [0x294]
---
0x28b DUP3
0x28c SWAP1
0x28d SUB
0x28e PUSH1 0x1f
0x290 AND
0x291 DUP3
0x292 ADD
0x293 SWAP2
---
0x28d: V224 = SUB V221 V212
0x28e: V225 = 0x1f
0x290: V226 = AND 0x1f V224
0x292: V227 = ADD V212 V226
---
Entry stack: [V10, 0x81, 0x60, 0x1, V159, V212, V219, V221]
Stack pops: 3
Stack additions: [V227, S1, S2]
Exit stack: [V10, 0x81, 0x60, 0x1, V159, V227, V219, V212]

================================

Block 0x294
[0x294:0x29b]
---
Predecessors: [0x1b0, 0x1f9, 0x28b]
Successors: [0x81]
---
0x294 JUMPDEST
0x295 POP
0x296 POP
0x297 POP
0x298 POP
0x299 POP
0x29a DUP2
0x29b JUMP
---
0x294: JUMPDEST 
0x29b: JUMP 0x81
---
Entry stack: [V10, 0x81, 0x60, 0x1, V159, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V10, 0x81, 0x60]

================================

Function 0:
Public function signature: 0x41c0e1b5
Entry block: 0xef
Exit block: 0x109
Body: 0xef, 0x109, 0x25b

Function 1:
Public function signature: 0x4e6630b0
Entry block: 0x10d
Exit block: 0x22f
Body: 0x10d, 0x22f

Function 2:
Public function signature: 0x5d91526d
Entry block: 0x116
Exit block: 0xe1
Body: 0x81, 0xc8, 0xe1, 0x116

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0x19e
Exit block: 0x22f
Body: 0x19e, 0x22f

Function 4:
Public function signature: 0xc5e57985
Entry block: 0x1b0
Exit block: 0xe1
Body: 0x81, 0xc8, 0xe1, 0x1b0, 0x1f1, 0x1f9, 0x269, 0x277, 0x28b, 0x294

Function 5:
Public function signature: 0xf2fde38b
Entry block: 0x20c
Exit block: 0x22d
Body: 0x20c, 0x229, 0x22d, 0x239

Function 6:
Public fallback function
Entry block: 0x56
Exit block: 0xe1
Body: 0x56, 0x81, 0xc8, 0xe1

