Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6d
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6d
0xc: JUMPI 0x6d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0xd2]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0xb591195
0x3c EQ
0x3d PUSH2 0xd2
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0xb591195
0x3c: V13 = EQ 0xb591195 V11
0x3d: V14 = 0xd2
0x40: JUMPI 0xd2 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xfb]
---
0x41 DUP1
0x42 PUSH4 0x3ccfd60b
0x47 EQ
0x48 PUSH2 0xfb
0x4b JUMPI
---
0x42: V15 = 0x3ccfd60b
0x47: V16 = EQ 0x3ccfd60b V11
0x48: V17 = 0xfb
0x4b: JUMPI 0xfb V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x110]
---
0x4c DUP1
0x4d PUSH4 0x59c39094
0x52 EQ
0x53 PUSH2 0x110
0x56 JUMPI
---
0x4d: V18 = 0x59c39094
0x52: V19 = EQ 0x59c39094 V11
0x53: V20 = 0x110
0x56: JUMPI 0x110 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x139]
---
0x57 DUP1
0x58 PUSH4 0x688263d7
0x5d EQ
0x5e PUSH2 0x139
0x61 JUMPI
---
0x58: V21 = 0x688263d7
0x5d: V22 = EQ 0x688263d7 V11
0x5e: V23 = 0x139
0x61: JUMPI 0x139 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x18e]
---
0x62 DUP1
0x63 PUSH4 0x8da5cb5b
0x68 EQ
0x69 PUSH2 0x18e
0x6c JUMPI
---
0x63: V24 = 0x8da5cb5b
0x68: V25 = EQ 0x8da5cb5b V11
0x69: V26 = 0x18e
0x6c: JUMPI 0x18e V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x78]
---
Predecessors: [0x0, 0x62]
Successors: [0x79, 0x7d]
---
0x6d JUMPDEST
0x6e CALLVALUE
0x6f PUSH1 0x2
0x71 SLOAD
0x72 LT
0x73 ISZERO
0x74 ISZERO
0x75 PUSH2 0x7d
0x78 JUMPI
---
0x6d: JUMPDEST 
0x6e: V27 = CALLVALUE
0x6f: V28 = 0x2
0x71: V29 = S[0x2]
0x72: V30 = LT V29 V27
0x73: V31 = ISZERO V30
0x74: V32 = ISZERO V31
0x75: V33 = 0x7d
0x78: JUMPI 0x7d V32
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x79
[0x79:0x7c]
---
Predecessors: [0x6d]
Successors: []
---
0x79 PUSH1 0x0
0x7b DUP1
0x7c REVERT
---
0x79: V34 = 0x0
0x7c: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7d
[0x7d:0xd1]
---
Predecessors: [0x6d]
Successors: []
---
0x7d JUMPDEST
0x7e CALLVALUE
0x7f PUSH1 0x2
0x81 DUP2
0x82 SWAP1
0x83 SSTORE
0x84 POP
0x85 PUSH3 0x2a300
0x89 TIMESTAMP
0x8a ADD
0x8b PUSH1 0x3
0x8d DUP2
0x8e SWAP1
0x8f SSTORE
0x90 POP
0x91 CALLER
0x92 PUSH1 0x0
0x94 DUP1
0x95 PUSH2 0x100
0x98 EXP
0x99 DUP2
0x9a SLOAD
0x9b DUP2
0x9c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb1 MUL
0xb2 NOT
0xb3 AND
0xb4 SWAP1
0xb5 DUP4
0xb6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcb AND
0xcc MUL
0xcd OR
0xce SWAP1
0xcf SSTORE
0xd0 POP
0xd1 STOP
---
0x7d: JUMPDEST 
0x7e: V35 = CALLVALUE
0x7f: V36 = 0x2
0x83: S[0x2] = V35
0x85: V37 = 0x2a300
0x89: V38 = TIMESTAMP
0x8a: V39 = ADD V38 0x2a300
0x8b: V40 = 0x3
0x8f: S[0x3] = V39
0x91: V41 = CALLER
0x92: V42 = 0x0
0x95: V43 = 0x100
0x98: V44 = EXP 0x100 0x0
0x9a: V45 = S[0x0]
0x9c: V46 = 0xffffffffffffffffffffffffffffffffffffffff
0xb1: V47 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xb2: V48 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xb3: V49 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V45
0xb6: V50 = 0xffffffffffffffffffffffffffffffffffffffff
0xcb: V51 = AND 0xffffffffffffffffffffffffffffffffffffffff V41
0xcc: V52 = MUL V51 0x1
0xcd: V53 = OR V52 V49
0xcf: S[0x0] = V53
0xd1: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd2
[0xd2:0xd8]
---
Predecessors: [0xd]
Successors: [0xd9, 0xdd]
---
0xd2 JUMPDEST
0xd3 CALLVALUE
0xd4 ISZERO
0xd5 PUSH2 0xdd
0xd8 JUMPI
---
0xd2: JUMPDEST 
0xd3: V54 = CALLVALUE
0xd4: V55 = ISZERO V54
0xd5: V56 = 0xdd
0xd8: JUMPI 0xdd V55
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd9
[0xd9:0xdc]
---
Predecessors: [0xd2]
Successors: []
---
0xd9 PUSH1 0x0
0xdb DUP1
0xdc REVERT
---
0xd9: V57 = 0x0
0xdc: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xdd
[0xdd:0xe4]
---
Predecessors: [0xd2]
Successors: [0x1e3]
---
0xdd JUMPDEST
0xde PUSH2 0xe5
0xe1 PUSH2 0x1e3
0xe4 JUMP
---
0xdd: JUMPDEST 
0xde: V58 = 0xe5
0xe1: V59 = 0x1e3
0xe4: JUMP 0x1e3
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe5]
Exit stack: [V11, 0xe5]

================================

Block 0xe5
[0xe5:0xfa]
---
Predecessors: [0x1e3]
Successors: []
---
0xe5 JUMPDEST
0xe6 PUSH1 0x40
0xe8 MLOAD
0xe9 DUP1
0xea DUP3
0xeb DUP2
0xec MSTORE
0xed PUSH1 0x20
0xef ADD
0xf0 SWAP2
0xf1 POP
0xf2 POP
0xf3 PUSH1 0x40
0xf5 MLOAD
0xf6 DUP1
0xf7 SWAP2
0xf8 SUB
0xf9 SWAP1
0xfa RETURN
---
0xe5: JUMPDEST 
0xe6: V60 = 0x40
0xe8: V61 = M[0x40]
0xec: M[V61] = V121
0xed: V62 = 0x20
0xef: V63 = ADD 0x20 V61
0xf3: V64 = 0x40
0xf5: V65 = M[0x40]
0xf8: V66 = SUB V63 V65
0xfa: RETURN V65 V66
---
Entry stack: [V11, 0xe5, V121]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xe5]

================================

Block 0xfb
[0xfb:0x101]
---
Predecessors: [0x41]
Successors: [0x102, 0x106]
---
0xfb JUMPDEST
0xfc CALLVALUE
0xfd ISZERO
0xfe PUSH2 0x106
0x101 JUMPI
---
0xfb: JUMPDEST 
0xfc: V67 = CALLVALUE
0xfd: V68 = ISZERO V67
0xfe: V69 = 0x106
0x101: JUMPI 0x106 V68
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x102
[0x102:0x105]
---
Predecessors: [0xfb]
Successors: []
---
0x102 PUSH1 0x0
0x104 DUP1
0x105 REVERT
---
0x102: V70 = 0x0
0x105: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x106
[0x106:0x10d]
---
Predecessors: [0xfb]
Successors: [0x1e9]
---
0x106 JUMPDEST
0x107 PUSH2 0x10e
0x10a PUSH2 0x1e9
0x10d JUMP
---
0x106: JUMPDEST 
0x107: V71 = 0x10e
0x10a: V72 = 0x1e9
0x10d: JUMP 0x1e9
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x10e]
Exit stack: [V11, 0x10e]

================================

Block 0x10e
[0x10e:0x10f]
---
Predecessors: [0x37d]
Successors: []
---
0x10e JUMPDEST
0x10f STOP
---
0x10e: JUMPDEST 
0x10f: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x110
[0x110:0x116]
---
Predecessors: [0x4c]
Successors: [0x117, 0x11b]
---
0x110 JUMPDEST
0x111 CALLVALUE
0x112 ISZERO
0x113 PUSH2 0x11b
0x116 JUMPI
---
0x110: JUMPDEST 
0x111: V73 = CALLVALUE
0x112: V74 = ISZERO V73
0x113: V75 = 0x11b
0x116: JUMPI 0x11b V74
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x117
[0x117:0x11a]
---
Predecessors: [0x110]
Successors: []
---
0x117 PUSH1 0x0
0x119 DUP1
0x11a REVERT
---
0x117: V76 = 0x0
0x11a: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x11b
[0x11b:0x122]
---
Predecessors: [0x110]
Successors: [0x37f]
---
0x11b JUMPDEST
0x11c PUSH2 0x123
0x11f PUSH2 0x37f
0x122 JUMP
---
0x11b: JUMPDEST 
0x11c: V77 = 0x123
0x11f: V78 = 0x37f
0x122: JUMP 0x37f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x123]
Exit stack: [V11, 0x123]

================================

Block 0x123
[0x123:0x138]
---
Predecessors: [0x37f]
Successors: []
---
0x123 JUMPDEST
0x124 PUSH1 0x40
0x126 MLOAD
0x127 DUP1
0x128 DUP3
0x129 DUP2
0x12a MSTORE
0x12b PUSH1 0x20
0x12d ADD
0x12e SWAP2
0x12f POP
0x130 POP
0x131 PUSH1 0x40
0x133 MLOAD
0x134 DUP1
0x135 SWAP2
0x136 SUB
0x137 SWAP1
0x138 RETURN
---
0x123: JUMPDEST 
0x124: V79 = 0x40
0x126: V80 = M[0x40]
0x12a: M[V80] = V220
0x12b: V81 = 0x20
0x12d: V82 = ADD 0x20 V80
0x131: V83 = 0x40
0x133: V84 = M[0x40]
0x136: V85 = SUB V82 V84
0x138: RETURN V84 V85
---
Entry stack: [V11, 0x123, V220]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x123]

================================

Block 0x139
[0x139:0x13f]
---
Predecessors: [0x57]
Successors: [0x140, 0x144]
---
0x139 JUMPDEST
0x13a CALLVALUE
0x13b ISZERO
0x13c PUSH2 0x144
0x13f JUMPI
---
0x139: JUMPDEST 
0x13a: V86 = CALLVALUE
0x13b: V87 = ISZERO V86
0x13c: V88 = 0x144
0x13f: JUMPI 0x144 V87
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x140
[0x140:0x143]
---
Predecessors: [0x139]
Successors: []
---
0x140 PUSH1 0x0
0x142 DUP1
0x143 REVERT
---
0x140: V89 = 0x0
0x143: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x144
[0x144:0x14b]
---
Predecessors: [0x139]
Successors: [0x385]
---
0x144 JUMPDEST
0x145 PUSH2 0x14c
0x148 PUSH2 0x385
0x14b JUMP
---
0x144: JUMPDEST 
0x145: V90 = 0x14c
0x148: V91 = 0x385
0x14b: JUMP 0x385
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x14c]
Exit stack: [V11, 0x14c]

================================

Block 0x14c
[0x14c:0x18d]
---
Predecessors: [0x385]
Successors: []
---
0x14c JUMPDEST
0x14d PUSH1 0x40
0x14f MLOAD
0x150 DUP1
0x151 DUP3
0x152 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x167 AND
0x168 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17d AND
0x17e DUP2
0x17f MSTORE
0x180 PUSH1 0x20
0x182 ADD
0x183 SWAP2
0x184 POP
0x185 POP
0x186 PUSH1 0x40
0x188 MLOAD
0x189 DUP1
0x18a SWAP2
0x18b SUB
0x18c SWAP1
0x18d RETURN
---
0x14c: JUMPDEST 
0x14d: V92 = 0x40
0x14f: V93 = M[0x40]
0x152: V94 = 0xffffffffffffffffffffffffffffffffffffffff
0x167: V95 = AND 0xffffffffffffffffffffffffffffffffffffffff V227
0x168: V96 = 0xffffffffffffffffffffffffffffffffffffffff
0x17d: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0x17f: M[V93] = V97
0x180: V98 = 0x20
0x182: V99 = ADD 0x20 V93
0x186: V100 = 0x40
0x188: V101 = M[0x40]
0x18b: V102 = SUB V99 V101
0x18d: RETURN V101 V102
---
Entry stack: [V11, 0x14c, V227]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x14c]

================================

Block 0x18e
[0x18e:0x194]
---
Predecessors: [0x62]
Successors: [0x195, 0x199]
---
0x18e JUMPDEST
0x18f CALLVALUE
0x190 ISZERO
0x191 PUSH2 0x199
0x194 JUMPI
---
0x18e: JUMPDEST 
0x18f: V103 = CALLVALUE
0x190: V104 = ISZERO V103
0x191: V105 = 0x199
0x194: JUMPI 0x199 V104
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x195
[0x195:0x198]
---
Predecessors: [0x18e]
Successors: []
---
0x195 PUSH1 0x0
0x197 DUP1
0x198 REVERT
---
0x195: V106 = 0x0
0x198: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x199
[0x199:0x1a0]
---
Predecessors: [0x18e]
Successors: [0x3aa]
---
0x199 JUMPDEST
0x19a PUSH2 0x1a1
0x19d PUSH2 0x3aa
0x1a0 JUMP
---
0x199: JUMPDEST 
0x19a: V107 = 0x1a1
0x19d: V108 = 0x3aa
0x1a0: JUMP 0x3aa
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1a1]
Exit stack: [V11, 0x1a1]

================================

Block 0x1a1
[0x1a1:0x1e2]
---
Predecessors: [0x3aa]
Successors: []
---
0x1a1 JUMPDEST
0x1a2 PUSH1 0x40
0x1a4 MLOAD
0x1a5 DUP1
0x1a6 DUP3
0x1a7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1bc AND
0x1bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d2 AND
0x1d3 DUP2
0x1d4 MSTORE
0x1d5 PUSH1 0x20
0x1d7 ADD
0x1d8 SWAP2
0x1d9 POP
0x1da POP
0x1db PUSH1 0x40
0x1dd MLOAD
0x1de DUP1
0x1df SWAP2
0x1e0 SUB
0x1e1 SWAP1
0x1e2 RETURN
---
0x1a1: JUMPDEST 
0x1a2: V109 = 0x40
0x1a4: V110 = M[0x40]
0x1a7: V111 = 0xffffffffffffffffffffffffffffffffffffffff
0x1bc: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V235
0x1bd: V113 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d2: V114 = AND 0xffffffffffffffffffffffffffffffffffffffff V112
0x1d4: M[V110] = V114
0x1d5: V115 = 0x20
0x1d7: V116 = ADD 0x20 V110
0x1db: V117 = 0x40
0x1dd: V118 = M[0x40]
0x1e0: V119 = SUB V116 V118
0x1e2: RETURN V118 V119
---
Entry stack: [V11, 0x1a1, V235]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1a1]

================================

Block 0x1e3
[0x1e3:0x1e8]
---
Predecessors: [0xdd]
Successors: [0xe5]
---
0x1e3 JUMPDEST
0x1e4 PUSH1 0x2
0x1e6 SLOAD
0x1e7 DUP2
0x1e8 JUMP
---
0x1e3: JUMPDEST 
0x1e4: V120 = 0x2
0x1e6: V121 = S[0x2]
0x1e8: JUMP 0xe5
---
Entry stack: [V11, 0xe5]
Stack pops: 1
Stack additions: [S0, V121]
Exit stack: [V11, 0xe5, V121]

================================

Block 0x1e9
[0x1e9:0x1f5]
---
Predecessors: [0x106]
Successors: [0x1f6, 0x1fa]
---
0x1e9 JUMPDEST
0x1ea PUSH1 0x3
0x1ec SLOAD
0x1ed TIMESTAMP
0x1ee LT
0x1ef ISZERO
0x1f0 ISZERO
0x1f1 ISZERO
0x1f2 PUSH2 0x1fa
0x1f5 JUMPI
---
0x1e9: JUMPDEST 
0x1ea: V122 = 0x3
0x1ec: V123 = S[0x3]
0x1ed: V124 = TIMESTAMP
0x1ee: V125 = LT V124 V123
0x1ef: V126 = ISZERO V125
0x1f0: V127 = ISZERO V126
0x1f1: V128 = ISZERO V127
0x1f2: V129 = 0x1fa
0x1f5: JUMPI 0x1fa V128
---
Entry stack: [V11, 0x10e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10e]

================================

Block 0x1f6
[0x1f6:0x1f9]
---
Predecessors: [0x1e9]
Successors: []
---
0x1f6 PUSH1 0x0
0x1f8 DUP1
0x1f9 REVERT
---
0x1f6: V130 = 0x0
0x1f9: REVERT 0x0 0x0
---
Entry stack: [V11, 0x10e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10e]

================================

Block 0x1fa
[0x1fa:0x250]
---
Predecessors: [0x1e9]
Successors: [0x251, 0x255]
---
0x1fa JUMPDEST
0x1fb PUSH1 0x0
0x1fd DUP1
0x1fe SWAP1
0x1ff SLOAD
0x200 SWAP1
0x201 PUSH2 0x100
0x204 EXP
0x205 SWAP1
0x206 DIV
0x207 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21c AND
0x21d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x232 AND
0x233 CALLER
0x234 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x249 AND
0x24a EQ
0x24b ISZERO
0x24c ISZERO
0x24d PUSH2 0x255
0x250 JUMPI
---
0x1fa: JUMPDEST 
0x1fb: V131 = 0x0
0x1ff: V132 = S[0x0]
0x201: V133 = 0x100
0x204: V134 = EXP 0x100 0x0
0x206: V135 = DIV V132 0x1
0x207: V136 = 0xffffffffffffffffffffffffffffffffffffffff
0x21c: V137 = AND 0xffffffffffffffffffffffffffffffffffffffff V135
0x21d: V138 = 0xffffffffffffffffffffffffffffffffffffffff
0x232: V139 = AND 0xffffffffffffffffffffffffffffffffffffffff V137
0x233: V140 = CALLER
0x234: V141 = 0xffffffffffffffffffffffffffffffffffffffff
0x249: V142 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x24a: V143 = EQ V142 V139
0x24b: V144 = ISZERO V143
0x24c: V145 = ISZERO V144
0x24d: V146 = 0x255
0x250: JUMPI 0x255 V145
---
Entry stack: [V11, 0x10e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10e]

================================

Block 0x251
[0x251:0x254]
---
Predecessors: [0x1fa]
Successors: []
---
0x251 PUSH1 0x0
0x253 DUP1
0x254 REVERT
---
0x251: V147 = 0x0
0x254: REVERT 0x0 0x0
---
Entry stack: [V11, 0x10e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10e]

================================

Block 0x255
[0x255:0x2fe]
---
Predecessors: [0x1fa]
Successors: [0x2ff, 0x300]
---
0x255 JUMPDEST
0x256 PUSH1 0x0
0x258 DUP1
0x259 PUSH1 0x0
0x25b PUSH2 0x100
0x25e EXP
0x25f DUP2
0x260 SLOAD
0x261 DUP2
0x262 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x277 MUL
0x278 NOT
0x279 AND
0x27a SWAP1
0x27b DUP4
0x27c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x291 AND
0x292 MUL
0x293 OR
0x294 SWAP1
0x295 SSTORE
0x296 POP
0x297 PUSH1 0x0
0x299 PUSH1 0x2
0x29b DUP2
0x29c SWAP1
0x29d SSTORE
0x29e POP
0x29f PUSH1 0x1
0x2a1 PUSH1 0x0
0x2a3 SWAP1
0x2a4 SLOAD
0x2a5 SWAP1
0x2a6 PUSH2 0x100
0x2a9 EXP
0x2aa SWAP1
0x2ab DIV
0x2ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c1 AND
0x2c2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d7 AND
0x2d8 PUSH2 0x8fc
0x2db PUSH1 0x64
0x2dd PUSH1 0x3
0x2df ADDRESS
0x2e0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f5 AND
0x2f6 BALANCE
0x2f7 MUL
0x2f8 DUP2
0x2f9 ISZERO
0x2fa ISZERO
0x2fb PUSH2 0x300
0x2fe JUMPI
---
0x255: JUMPDEST 
0x256: V148 = 0x0
0x259: V149 = 0x0
0x25b: V150 = 0x100
0x25e: V151 = EXP 0x100 0x0
0x260: V152 = S[0x0]
0x262: V153 = 0xffffffffffffffffffffffffffffffffffffffff
0x277: V154 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x278: V155 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x279: V156 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V152
0x27c: V157 = 0xffffffffffffffffffffffffffffffffffffffff
0x291: V158 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x292: V159 = MUL 0x0 0x1
0x293: V160 = OR 0x0 V156
0x295: S[0x0] = V160
0x297: V161 = 0x0
0x299: V162 = 0x2
0x29d: S[0x2] = 0x0
0x29f: V163 = 0x1
0x2a1: V164 = 0x0
0x2a4: V165 = S[0x1]
0x2a6: V166 = 0x100
0x2a9: V167 = EXP 0x100 0x0
0x2ab: V168 = DIV V165 0x1
0x2ac: V169 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c1: V170 = AND 0xffffffffffffffffffffffffffffffffffffffff V168
0x2c2: V171 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d7: V172 = AND 0xffffffffffffffffffffffffffffffffffffffff V170
0x2d8: V173 = 0x8fc
0x2db: V174 = 0x64
0x2dd: V175 = 0x3
0x2df: V176 = ADDRESS
0x2e0: V177 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f5: V178 = AND 0xffffffffffffffffffffffffffffffffffffffff V176
0x2f6: V179 = BALANCE V178
0x2f7: V180 = MUL V179 0x3
0x2f9: V181 = ISZERO 0x64
0x2fa: V182 = ISZERO 0x0
0x2fb: V183 = 0x300
0x2fe: JUMPI 0x300 0x1
---
Entry stack: [V11, 0x10e]
Stack pops: 0
Stack additions: [V172, 0x8fc, 0x64, V180]
Exit stack: [V11, 0x10e, V172, 0x8fc, 0x64, V180]

================================

Block 0x2ff
[0x2ff:0x2ff]
---
Predecessors: [0x255]
Successors: []
---
0x2ff INVALID
---
0x2ff: INVALID 
---
Entry stack: [V11, 0x10e, V172, 0x8fc, 0x64, V180]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10e, V172, 0x8fc, 0x64, V180]

================================

Block 0x300
[0x300:0x321]
---
Predecessors: [0x255]
Successors: [0x322, 0x326]
---
0x300 JUMPDEST
0x301 DIV
0x302 SWAP1
0x303 DUP2
0x304 ISZERO
0x305 MUL
0x306 SWAP1
0x307 PUSH1 0x40
0x309 MLOAD
0x30a PUSH1 0x0
0x30c PUSH1 0x40
0x30e MLOAD
0x30f DUP1
0x310 DUP4
0x311 SUB
0x312 DUP2
0x313 DUP6
0x314 DUP9
0x315 DUP9
0x316 CALL
0x317 SWAP4
0x318 POP
0x319 POP
0x31a POP
0x31b POP
0x31c ISZERO
0x31d ISZERO
0x31e PUSH2 0x326
0x321 JUMPI
---
0x300: JUMPDEST 
0x301: V184 = DIV V180 0x64
0x304: V185 = ISZERO V184
0x305: V186 = MUL V185 0x8fc
0x307: V187 = 0x40
0x309: V188 = M[0x40]
0x30a: V189 = 0x0
0x30c: V190 = 0x40
0x30e: V191 = M[0x40]
0x311: V192 = SUB V188 V191
0x316: V193 = CALL V186 V172 V184 V191 V192 V191 0x0
0x31c: V194 = ISZERO V193
0x31d: V195 = ISZERO V194
0x31e: V196 = 0x326
0x321: JUMPI 0x326 V195
---
Entry stack: [V11, 0x10e, V172, 0x8fc, 0x64, V180]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x10e]

================================

Block 0x322
[0x322:0x325]
---
Predecessors: [0x300]
Successors: []
---
0x322 PUSH1 0x0
0x324 DUP1
0x325 REVERT
---
0x322: V197 = 0x0
0x325: REVERT 0x0 0x0
---
Entry stack: [V11, 0x10e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10e]

================================

Block 0x326
[0x326:0x378]
---
Predecessors: [0x300]
Successors: [0x379, 0x37d]
---
0x326 JUMPDEST
0x327 CALLER
0x328 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x33d AND
0x33e PUSH2 0x8fc
0x341 ADDRESS
0x342 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x357 AND
0x358 BALANCE
0x359 SWAP1
0x35a DUP2
0x35b ISZERO
0x35c MUL
0x35d SWAP1
0x35e PUSH1 0x40
0x360 MLOAD
0x361 PUSH1 0x0
0x363 PUSH1 0x40
0x365 MLOAD
0x366 DUP1
0x367 DUP4
0x368 SUB
0x369 DUP2
0x36a DUP6
0x36b DUP9
0x36c DUP9
0x36d CALL
0x36e SWAP4
0x36f POP
0x370 POP
0x371 POP
0x372 POP
0x373 ISZERO
0x374 ISZERO
0x375 PUSH2 0x37d
0x378 JUMPI
---
0x326: JUMPDEST 
0x327: V198 = CALLER
0x328: V199 = 0xffffffffffffffffffffffffffffffffffffffff
0x33d: V200 = AND 0xffffffffffffffffffffffffffffffffffffffff V198
0x33e: V201 = 0x8fc
0x341: V202 = ADDRESS
0x342: V203 = 0xffffffffffffffffffffffffffffffffffffffff
0x357: V204 = AND 0xffffffffffffffffffffffffffffffffffffffff V202
0x358: V205 = BALANCE V204
0x35b: V206 = ISZERO V205
0x35c: V207 = MUL V206 0x8fc
0x35e: V208 = 0x40
0x360: V209 = M[0x40]
0x361: V210 = 0x0
0x363: V211 = 0x40
0x365: V212 = M[0x40]
0x368: V213 = SUB V209 V212
0x36d: V214 = CALL V207 V200 V205 V212 V213 V212 0x0
0x373: V215 = ISZERO V214
0x374: V216 = ISZERO V215
0x375: V217 = 0x37d
0x378: JUMPI 0x37d V216
---
Entry stack: [V11, 0x10e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10e]

================================

Block 0x379
[0x379:0x37c]
---
Predecessors: [0x326]
Successors: []
---
0x379 PUSH1 0x0
0x37b DUP1
0x37c REVERT
---
0x379: V218 = 0x0
0x37c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x10e]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10e]

================================

Block 0x37d
[0x37d:0x37e]
---
Predecessors: [0x326]
Successors: [0x10e]
---
0x37d JUMPDEST
0x37e JUMP
---
0x37d: JUMPDEST 
0x37e: JUMP 0x10e
---
Entry stack: [V11, 0x10e]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x37f
[0x37f:0x384]
---
Predecessors: [0x11b]
Successors: [0x123]
---
0x37f JUMPDEST
0x380 PUSH1 0x3
0x382 SLOAD
0x383 DUP2
0x384 JUMP
---
0x37f: JUMPDEST 
0x380: V219 = 0x3
0x382: V220 = S[0x3]
0x384: JUMP 0x123
---
Entry stack: [V11, 0x123]
Stack pops: 1
Stack additions: [S0, V220]
Exit stack: [V11, 0x123, V220]

================================

Block 0x385
[0x385:0x3a9]
---
Predecessors: [0x144]
Successors: [0x14c]
---
0x385 JUMPDEST
0x386 PUSH1 0x0
0x388 DUP1
0x389 SWAP1
0x38a SLOAD
0x38b SWAP1
0x38c PUSH2 0x100
0x38f EXP
0x390 SWAP1
0x391 DIV
0x392 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a7 AND
0x3a8 DUP2
0x3a9 JUMP
---
0x385: JUMPDEST 
0x386: V221 = 0x0
0x38a: V222 = S[0x0]
0x38c: V223 = 0x100
0x38f: V224 = EXP 0x100 0x0
0x391: V225 = DIV V222 0x1
0x392: V226 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a7: V227 = AND 0xffffffffffffffffffffffffffffffffffffffff V225
0x3a9: JUMP 0x14c
---
Entry stack: [V11, 0x14c]
Stack pops: 1
Stack additions: [S0, V227]
Exit stack: [V11, 0x14c, V227]

================================

Block 0x3aa
[0x3aa:0x3cf]
---
Predecessors: [0x199]
Successors: [0x1a1]
---
0x3aa JUMPDEST
0x3ab PUSH1 0x1
0x3ad PUSH1 0x0
0x3af SWAP1
0x3b0 SLOAD
0x3b1 SWAP1
0x3b2 PUSH2 0x100
0x3b5 EXP
0x3b6 SWAP1
0x3b7 DIV
0x3b8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3cd AND
0x3ce DUP2
0x3cf JUMP
---
0x3aa: JUMPDEST 
0x3ab: V228 = 0x1
0x3ad: V229 = 0x0
0x3b0: V230 = S[0x1]
0x3b2: V231 = 0x100
0x3b5: V232 = EXP 0x100 0x0
0x3b7: V233 = DIV V230 0x1
0x3b8: V234 = 0xffffffffffffffffffffffffffffffffffffffff
0x3cd: V235 = AND 0xffffffffffffffffffffffffffffffffffffffff V233
0x3cf: JUMP 0x1a1
---
Entry stack: [V11, 0x1a1]
Stack pops: 1
Stack additions: [S0, V235]
Exit stack: [V11, 0x1a1, V235]

================================

Block 0x3d0
[0x3d0:0x3fb]
---
Predecessors: []
Successors: []
---
0x3d0 STOP
0x3d1 LOG1
0x3d2 PUSH6 0x627a7a723058
0x3d9 SHA3
0x3da PUSH17 0xac857d55d62181216ad4465b37d1376113
0x3ec MISSING 0x2a
0x3ed MISSING 0xf8
0x3ee PUSH10 0x28ac061d40dfd755a10d
0x3f9 MISSING 0x2e
0x3fa STOP
0x3fb MISSING 0x29
---
0x3d0: STOP 
0x3d1: LOG S0 S1 S2
0x3d2: V236 = 0x627a7a723058
0x3d9: V237 = SHA3 0x627a7a723058 S3
0x3da: V238 = 0xac857d55d62181216ad4465b37d1376113
0x3ec: MISSING 0x2a
0x3ed: MISSING 0xf8
0x3ee: V239 = 0x28ac061d40dfd755a10d
0x3f9: MISSING 0x2e
0x3fa: STOP 
0x3fb: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0xac857d55d62181216ad4465b37d1376113, V237, 0x28ac061d40dfd755a10d]
Exit stack: []

================================

Function 0:
Public function signature: 0xb591195
Entry block: 0xd2
Exit block: 0xe5
Body: 0xd2, 0xd9, 0xdd, 0xe5, 0x1e3

Function 1:
Public function signature: 0x3ccfd60b
Entry block: 0xfb
Exit block: 0x10e
Body: 0xfb, 0x102, 0x106, 0x10e, 0x1e9, 0x1f6, 0x1fa, 0x251, 0x255, 0x2ff, 0x300, 0x322, 0x326, 0x379, 0x37d

Function 2:
Public function signature: 0x59c39094
Entry block: 0x110
Exit block: 0x123
Body: 0x110, 0x117, 0x11b, 0x123, 0x37f

Function 3:
Public function signature: 0x688263d7
Entry block: 0x139
Exit block: 0x14c
Body: 0x139, 0x140, 0x144, 0x14c, 0x385

Function 4:
Public function signature: 0x8da5cb5b
Entry block: 0x18e
Exit block: 0x1a1
Body: 0x18e, 0x195, 0x199, 0x1a1, 0x3aa

Function 5:
Public fallback function
Entry block: 0x6d
Exit block: 0x79
Body: 0x6d, 0x79, 0x7d

