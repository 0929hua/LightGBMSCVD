Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x51]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x8da5cb5b
0x3c EQ
0x3d PUSH2 0x51
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x8da5cb5b
0x3c: V13 = EQ 0x8da5cb5b V11
0x3d: V14 = 0x51
0x40: JUMPI 0x51 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xa6]
---
0x41 DUP1
0x42 PUSH4 0xf2fde38b
0x47 EQ
0x48 PUSH2 0xa6
0x4b JUMPI
---
0x42: V15 = 0xf2fde38b
0x47: V16 = EQ 0xf2fde38b V11
0x48: V17 = 0xa6
0x4b: JUMPI 0xa6 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x50]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d PUSH1 0x0
0x4f DUP1
0x50 REVERT
---
0x4c: JUMPDEST 
0x4d: V18 = 0x0
0x50: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x51
[0x51:0x57]
---
Predecessors: [0xd]
Successors: [0x58, 0x5c]
---
0x51 JUMPDEST
0x52 CALLVALUE
0x53 ISZERO
0x54 PUSH2 0x5c
0x57 JUMPI
---
0x51: JUMPDEST 
0x52: V19 = CALLVALUE
0x53: V20 = ISZERO V19
0x54: V21 = 0x5c
0x57: JUMPI 0x5c V20
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x58
[0x58:0x5b]
---
Predecessors: [0x51]
Successors: []
---
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x58: V22 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0x63]
---
Predecessors: [0x51]
Successors: [0xdf]
---
0x5c JUMPDEST
0x5d PUSH2 0x64
0x60 PUSH2 0xdf
0x63 JUMP
---
0x5c: JUMPDEST 
0x5d: V23 = 0x64
0x60: V24 = 0xdf
0x63: JUMP 0xdf
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x64]
Exit stack: [V11, 0x64]

================================

Block 0x64
[0x64:0xa5]
---
Predecessors: [0xdf]
Successors: []
---
0x64 JUMPDEST
0x65 PUSH1 0x40
0x67 MLOAD
0x68 DUP1
0x69 DUP3
0x6a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7f AND
0x80 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x95 AND
0x96 DUP2
0x97 MSTORE
0x98 PUSH1 0x20
0x9a ADD
0x9b SWAP2
0x9c POP
0x9d POP
0x9e PUSH1 0x40
0xa0 MLOAD
0xa1 DUP1
0xa2 SWAP2
0xa3 SUB
0xa4 SWAP1
0xa5 RETURN
---
0x64: JUMPDEST 
0x65: V25 = 0x40
0x67: V26 = M[0x40]
0x6a: V27 = 0xffffffffffffffffffffffffffffffffffffffff
0x7f: V28 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0x80: V29 = 0xffffffffffffffffffffffffffffffffffffffff
0x95: V30 = AND 0xffffffffffffffffffffffffffffffffffffffff V28
0x97: M[V26] = V30
0x98: V31 = 0x20
0x9a: V32 = ADD 0x20 V26
0x9e: V33 = 0x40
0xa0: V34 = M[0x40]
0xa3: V35 = SUB V32 V34
0xa5: RETURN V34 V35
---
Entry stack: [V11, 0x64, V54]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x64]

================================

Block 0xa6
[0xa6:0xac]
---
Predecessors: [0x41]
Successors: [0xad, 0xb1]
---
0xa6 JUMPDEST
0xa7 CALLVALUE
0xa8 ISZERO
0xa9 PUSH2 0xb1
0xac JUMPI
---
0xa6: JUMPDEST 
0xa7: V36 = CALLVALUE
0xa8: V37 = ISZERO V36
0xa9: V38 = 0xb1
0xac: JUMPI 0xb1 V37
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xad
[0xad:0xb0]
---
Predecessors: [0xa6]
Successors: []
---
0xad PUSH1 0x0
0xaf DUP1
0xb0 REVERT
---
0xad: V39 = 0x0
0xb0: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb1
[0xb1:0xdc]
---
Predecessors: [0xa6]
Successors: [0x104]
---
0xb1 JUMPDEST
0xb2 PUSH2 0xdd
0xb5 PUSH1 0x4
0xb7 DUP1
0xb8 DUP1
0xb9 CALLDATALOAD
0xba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcf AND
0xd0 SWAP1
0xd1 PUSH1 0x20
0xd3 ADD
0xd4 SWAP1
0xd5 SWAP2
0xd6 SWAP1
0xd7 POP
0xd8 POP
0xd9 PUSH2 0x104
0xdc JUMP
---
0xb1: JUMPDEST 
0xb2: V40 = 0xdd
0xb5: V41 = 0x4
0xb9: V42 = CALLDATALOAD 0x4
0xba: V43 = 0xffffffffffffffffffffffffffffffffffffffff
0xcf: V44 = AND 0xffffffffffffffffffffffffffffffffffffffff V42
0xd1: V45 = 0x20
0xd3: V46 = ADD 0x20 0x4
0xd9: V47 = 0x104
0xdc: JUMP 0x104
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xdd, V44]
Exit stack: [V11, 0xdd, V44]

================================

Block 0xdd
[0xdd:0xde]
---
Predecessors: [0x19b]
Successors: []
---
0xdd JUMPDEST
0xde STOP
---
0xdd: JUMPDEST 
0xde: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xdf
[0xdf:0x103]
---
Predecessors: [0x5c]
Successors: [0x64]
---
0xdf JUMPDEST
0xe0 PUSH1 0x0
0xe2 DUP1
0xe3 SWAP1
0xe4 SLOAD
0xe5 SWAP1
0xe6 PUSH2 0x100
0xe9 EXP
0xea SWAP1
0xeb DIV
0xec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x101 AND
0x102 DUP2
0x103 JUMP
---
0xdf: JUMPDEST 
0xe0: V48 = 0x0
0xe4: V49 = S[0x0]
0xe6: V50 = 0x100
0xe9: V51 = EXP 0x100 0x0
0xeb: V52 = DIV V49 0x1
0xec: V53 = 0xffffffffffffffffffffffffffffffffffffffff
0x101: V54 = AND 0xffffffffffffffffffffffffffffffffffffffff V52
0x103: JUMP 0x64
---
Entry stack: [V11, 0x64]
Stack pops: 1
Stack additions: [S0, V54]
Exit stack: [V11, 0x64, V54]

================================

Block 0x104
[0x104:0x15a]
---
Predecessors: [0xb1]
Successors: [0x15b, 0x15f]
---
0x104 JUMPDEST
0x105 PUSH1 0x0
0x107 DUP1
0x108 SWAP1
0x109 SLOAD
0x10a SWAP1
0x10b PUSH2 0x100
0x10e EXP
0x10f SWAP1
0x110 DIV
0x111 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x126 AND
0x127 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13c AND
0x13d CALLER
0x13e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x153 AND
0x154 EQ
0x155 ISZERO
0x156 ISZERO
0x157 PUSH2 0x15f
0x15a JUMPI
---
0x104: JUMPDEST 
0x105: V55 = 0x0
0x109: V56 = S[0x0]
0x10b: V57 = 0x100
0x10e: V58 = EXP 0x100 0x0
0x110: V59 = DIV V56 0x1
0x111: V60 = 0xffffffffffffffffffffffffffffffffffffffff
0x126: V61 = AND 0xffffffffffffffffffffffffffffffffffffffff V59
0x127: V62 = 0xffffffffffffffffffffffffffffffffffffffff
0x13c: V63 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0x13d: V64 = CALLER
0x13e: V65 = 0xffffffffffffffffffffffffffffffffffffffff
0x153: V66 = AND 0xffffffffffffffffffffffffffffffffffffffff V64
0x154: V67 = EQ V66 V63
0x155: V68 = ISZERO V67
0x156: V69 = ISZERO V68
0x157: V70 = 0x15f
0x15a: JUMPI 0x15f V69
---
Entry stack: [V11, 0xdd, V44]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdd, V44]

================================

Block 0x15b
[0x15b:0x15e]
---
Predecessors: [0x104]
Successors: []
---
0x15b PUSH1 0x0
0x15d DUP1
0x15e REVERT
---
0x15b: V71 = 0x0
0x15e: REVERT 0x0 0x0
---
Entry stack: [V11, 0xdd, V44]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdd, V44]

================================

Block 0x15f
[0x15f:0x196]
---
Predecessors: [0x104]
Successors: [0x197, 0x19b]
---
0x15f JUMPDEST
0x160 PUSH1 0x0
0x162 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x177 AND
0x178 DUP2
0x179 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18e AND
0x18f EQ
0x190 ISZERO
0x191 ISZERO
0x192 ISZERO
0x193 PUSH2 0x19b
0x196 JUMPI
---
0x15f: JUMPDEST 
0x160: V72 = 0x0
0x162: V73 = 0xffffffffffffffffffffffffffffffffffffffff
0x177: V74 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x179: V75 = 0xffffffffffffffffffffffffffffffffffffffff
0x18e: V76 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0x18f: V77 = EQ V76 0x0
0x190: V78 = ISZERO V77
0x191: V79 = ISZERO V78
0x192: V80 = ISZERO V79
0x193: V81 = 0x19b
0x196: JUMPI 0x19b V80
---
Entry stack: [V11, 0xdd, V44]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xdd, V44]

================================

Block 0x197
[0x197:0x19a]
---
Predecessors: [0x15f]
Successors: []
---
0x197 PUSH1 0x0
0x199 DUP1
0x19a REVERT
---
0x197: V82 = 0x0
0x19a: REVERT 0x0 0x0
---
Entry stack: [V11, 0xdd, V44]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdd, V44]

================================

Block 0x19b
[0x19b:0x258]
---
Predecessors: [0x15f]
Successors: [0xdd]
---
0x19b JUMPDEST
0x19c DUP1
0x19d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b2 AND
0x1b3 PUSH1 0x0
0x1b5 DUP1
0x1b6 SWAP1
0x1b7 SLOAD
0x1b8 SWAP1
0x1b9 PUSH2 0x100
0x1bc EXP
0x1bd SWAP1
0x1be DIV
0x1bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d4 AND
0x1d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ea AND
0x1eb PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x20c PUSH1 0x40
0x20e MLOAD
0x20f PUSH1 0x40
0x211 MLOAD
0x212 DUP1
0x213 SWAP2
0x214 SUB
0x215 SWAP1
0x216 LOG3
0x217 DUP1
0x218 PUSH1 0x0
0x21a DUP1
0x21b PUSH2 0x100
0x21e EXP
0x21f DUP2
0x220 SLOAD
0x221 DUP2
0x222 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x237 MUL
0x238 NOT
0x239 AND
0x23a SWAP1
0x23b DUP4
0x23c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x251 AND
0x252 MUL
0x253 OR
0x254 SWAP1
0x255 SSTORE
0x256 POP
0x257 POP
0x258 JUMP
---
0x19b: JUMPDEST 
0x19d: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b2: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0x1b3: V85 = 0x0
0x1b7: V86 = S[0x0]
0x1b9: V87 = 0x100
0x1bc: V88 = EXP 0x100 0x0
0x1be: V89 = DIV V86 0x1
0x1bf: V90 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d4: V91 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0x1d5: V92 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ea: V93 = AND 0xffffffffffffffffffffffffffffffffffffffff V91
0x1eb: V94 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x20c: V95 = 0x40
0x20e: V96 = M[0x40]
0x20f: V97 = 0x40
0x211: V98 = M[0x40]
0x214: V99 = SUB V96 V98
0x216: LOG V98 V99 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V93 V84
0x218: V100 = 0x0
0x21b: V101 = 0x100
0x21e: V102 = EXP 0x100 0x0
0x220: V103 = S[0x0]
0x222: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x237: V105 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x238: V106 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x239: V107 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V103
0x23c: V108 = 0xffffffffffffffffffffffffffffffffffffffff
0x251: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0x252: V110 = MUL V109 0x1
0x253: V111 = OR V110 V107
0x255: S[0x0] = V111
0x258: JUMP 0xdd
---
Entry stack: [V11, 0xdd, V44]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x259
[0x259:0x2c5]
---
Predecessors: []
Successors: [0x2c6]
---
0x259 STOP
0x25a LOG1
0x25b PUSH6 0x627a7a723058
0x262 SHA3
0x263 MISSING 0xee
0x264 MISSING 0xac
0x265 DUP2
0x266 PUSH23 0x66e73013d6b2bcd7d0d062f9dddb9fb720b10cf74d0214
0x27e PUSH20 0xaa59a048002960606040526004361061008e5760
0x293 STOP
0x294 CALLDATALOAD
0x295 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2b3 SWAP1
0x2b4 DIV
0x2b5 PUSH4 0xffffffff
0x2ba AND
0x2bb DUP1
0x2bc PUSH4 0x15dacbea
0x2c1 EQ
0x2c2 PUSH2 0x93
0x2c5 JUMPI
---
0x259: STOP 
0x25a: LOG S0 S1 S2
0x25b: V112 = 0x627a7a723058
0x262: V113 = SHA3 0x627a7a723058 S3
0x263: MISSING 0xee
0x264: MISSING 0xac
0x266: V114 = 0x66e73013d6b2bcd7d0d062f9dddb9fb720b10cf74d0214
0x27e: V115 = 0xaa59a048002960606040526004361061008e5760
0x293: STOP 
0x294: V116 = CALLDATALOAD S0
0x295: V117 = 0x100000000000000000000000000000000000000000000000000000000
0x2b4: V118 = DIV V116 0x100000000000000000000000000000000000000000000000000000000
0x2b5: V119 = 0xffffffff
0x2ba: V120 = AND 0xffffffff V118
0x2bc: V121 = 0x15dacbea
0x2c1: V122 = EQ 0x15dacbea V120
0x2c2: V123 = 0x93
0x2c5: THROWI V122
---
Entry stack: []
Stack pops: 0
Stack additions: [V113, 0xaa59a048002960606040526004361061008e5760, 0x66e73013d6b2bcd7d0d062f9dddb9fb720b10cf74d0214, S1, S0, S1, V120]
Exit stack: []

================================

Block 0x2c6
[0x2c6:0x2d0]
---
Predecessors: [0x259]
Successors: [0x2d1]
---
0x2c6 DUP1
0x2c7 PUSH4 0x42f1181e
0x2cc EQ
0x2cd PUSH2 0x12b
0x2d0 JUMPI
---
0x2c7: V124 = 0x42f1181e
0x2cc: V125 = EQ 0x42f1181e V120
0x2cd: V126 = 0x12b
0x2d0: THROWI V125
---
Entry stack: [V120]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V120]

================================

Block 0x2d1
[0x2d1:0x2db]
---
Predecessors: [0x2c6]
Successors: [0x2dc]
---
0x2d1 DUP1
0x2d2 PUSH4 0x494503d4
0x2d7 EQ
0x2d8 PUSH2 0x164
0x2db JUMPI
---
0x2d2: V127 = 0x494503d4
0x2d7: V128 = EQ 0x494503d4 V120
0x2d8: V129 = 0x164
0x2db: THROWI V128
---
Entry stack: [V120]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V120]

================================

Block 0x2dc
[0x2dc:0x2e6]
---
Predecessors: [0x2d1]
Successors: [0x2e7]
---
0x2dc DUP1
0x2dd PUSH4 0x70712939
0x2e2 EQ
0x2e3 PUSH2 0x1c7
0x2e6 JUMPI
---
0x2dd: V130 = 0x70712939
0x2e2: V131 = EQ 0x70712939 V120
0x2e3: V132 = 0x1c7
0x2e6: THROWI V131
---
Entry stack: [V120]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V120]

================================

Block 0x2e7
[0x2e7:0x2f1]
---
Predecessors: [0x2dc]
Successors: [0x2f2]
---
0x2e7 DUP1
0x2e8 PUSH4 0x8da5cb5b
0x2ed EQ
0x2ee PUSH2 0x200
0x2f1 JUMPI
---
0x2e8: V133 = 0x8da5cb5b
0x2ed: V134 = EQ 0x8da5cb5b V120
0x2ee: V135 = 0x200
0x2f1: THROWI V134
---
Entry stack: [V120]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V120]

================================

Block 0x2f2
[0x2f2:0x2fc]
---
Predecessors: [0x2e7]
Successors: [0x2fd]
---
0x2f2 DUP1
0x2f3 PUSH4 0xb9181611
0x2f8 EQ
0x2f9 PUSH2 0x255
0x2fc JUMPI
---
0x2f3: V136 = 0xb9181611
0x2f8: V137 = EQ 0xb9181611 V120
0x2f9: V138 = 0x255
0x2fc: THROWI V137
---
Entry stack: [V120]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V120]

================================

Block 0x2fd
[0x2fd:0x307]
---
Predecessors: [0x2f2]
Successors: [0x308]
---
0x2fd DUP1
0x2fe PUSH4 0xd39de6e9
0x303 EQ
0x304 PUSH2 0x2a6
0x307 JUMPI
---
0x2fe: V139 = 0xd39de6e9
0x303: V140 = EQ 0xd39de6e9 V120
0x304: V141 = 0x2a6
0x307: THROWI V140
---
Entry stack: [V120]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V120]

================================

Block 0x308
[0x308:0x312]
---
Predecessors: [0x2fd]
Successors: [0x313]
---
0x308 DUP1
0x309 PUSH4 0xf2fde38b
0x30e EQ
0x30f PUSH2 0x310
0x312 JUMPI
---
0x309: V142 = 0xf2fde38b
0x30e: V143 = EQ 0xf2fde38b V120
0x30f: V144 = 0x310
0x312: THROWI V143
---
Entry stack: [V120]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V120]

================================

Block 0x313
[0x313:0x31e]
---
Predecessors: [0x308]
Successors: [0x31f]
---
0x313 JUMPDEST
0x314 PUSH1 0x0
0x316 DUP1
0x317 REVERT
0x318 JUMPDEST
0x319 CALLVALUE
0x31a ISZERO
0x31b PUSH2 0x9e
0x31e JUMPI
---
0x313: JUMPDEST 
0x314: V145 = 0x0
0x317: REVERT 0x0 0x0
0x318: JUMPDEST 
0x319: V146 = CALLVALUE
0x31a: V147 = ISZERO V146
0x31b: V148 = 0x9e
0x31e: THROWI V147
---
Entry stack: [V120]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x31f
[0x31f:0x3b6]
---
Predecessors: [0x313]
Successors: [0x3b7]
---
0x31f PUSH1 0x0
0x321 DUP1
0x322 REVERT
0x323 JUMPDEST
0x324 PUSH2 0x111
0x327 PUSH1 0x4
0x329 DUP1
0x32a DUP1
0x32b CALLDATALOAD
0x32c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x341 AND
0x342 SWAP1
0x343 PUSH1 0x20
0x345 ADD
0x346 SWAP1
0x347 SWAP2
0x348 SWAP1
0x349 DUP1
0x34a CALLDATALOAD
0x34b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x360 AND
0x361 SWAP1
0x362 PUSH1 0x20
0x364 ADD
0x365 SWAP1
0x366 SWAP2
0x367 SWAP1
0x368 DUP1
0x369 CALLDATALOAD
0x36a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x37f AND
0x380 SWAP1
0x381 PUSH1 0x20
0x383 ADD
0x384 SWAP1
0x385 SWAP2
0x386 SWAP1
0x387 DUP1
0x388 CALLDATALOAD
0x389 SWAP1
0x38a PUSH1 0x20
0x38c ADD
0x38d SWAP1
0x38e SWAP2
0x38f SWAP1
0x390 POP
0x391 POP
0x392 PUSH2 0x349
0x395 JUMP
0x396 JUMPDEST
0x397 PUSH1 0x40
0x399 MLOAD
0x39a DUP1
0x39b DUP3
0x39c ISZERO
0x39d ISZERO
0x39e ISZERO
0x39f ISZERO
0x3a0 DUP2
0x3a1 MSTORE
0x3a2 PUSH1 0x20
0x3a4 ADD
0x3a5 SWAP2
0x3a6 POP
0x3a7 POP
0x3a8 PUSH1 0x40
0x3aa MLOAD
0x3ab DUP1
0x3ac SWAP2
0x3ad SUB
0x3ae SWAP1
0x3af RETURN
0x3b0 JUMPDEST
0x3b1 CALLVALUE
0x3b2 ISZERO
0x3b3 PUSH2 0x136
0x3b6 JUMPI
---
0x31f: V149 = 0x0
0x322: REVERT 0x0 0x0
0x323: JUMPDEST 
0x324: V150 = 0x111
0x327: V151 = 0x4
0x32b: V152 = CALLDATALOAD 0x4
0x32c: V153 = 0xffffffffffffffffffffffffffffffffffffffff
0x341: V154 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0x343: V155 = 0x20
0x345: V156 = ADD 0x20 0x4
0x34a: V157 = CALLDATALOAD 0x24
0x34b: V158 = 0xffffffffffffffffffffffffffffffffffffffff
0x360: V159 = AND 0xffffffffffffffffffffffffffffffffffffffff V157
0x362: V160 = 0x20
0x364: V161 = ADD 0x20 0x24
0x369: V162 = CALLDATALOAD 0x44
0x36a: V163 = 0xffffffffffffffffffffffffffffffffffffffff
0x37f: V164 = AND 0xffffffffffffffffffffffffffffffffffffffff V162
0x381: V165 = 0x20
0x383: V166 = ADD 0x20 0x44
0x388: V167 = CALLDATALOAD 0x64
0x38a: V168 = 0x20
0x38c: V169 = ADD 0x20 0x64
0x392: V170 = 0x349
0x395: THROW 
0x396: JUMPDEST 
0x397: V171 = 0x40
0x399: V172 = M[0x40]
0x39c: V173 = ISZERO S0
0x39d: V174 = ISZERO V173
0x39e: V175 = ISZERO V174
0x39f: V176 = ISZERO V175
0x3a1: M[V172] = V176
0x3a2: V177 = 0x20
0x3a4: V178 = ADD 0x20 V172
0x3a8: V179 = 0x40
0x3aa: V180 = M[0x40]
0x3ad: V181 = SUB V178 V180
0x3af: RETURN V180 V181
0x3b0: JUMPDEST 
0x3b1: V182 = CALLVALUE
0x3b2: V183 = ISZERO V182
0x3b3: V184 = 0x136
0x3b6: THROWI V183
---
Entry stack: []
Stack pops: 0
Stack additions: [V167, V164, V159, V154, 0x111]
Exit stack: []

================================

Block 0x3b7
[0x3b7:0x3ef]
---
Predecessors: [0x31f]
Successors: [0x3f0]
---
0x3b7 PUSH1 0x0
0x3b9 DUP1
0x3ba REVERT
0x3bb JUMPDEST
0x3bc PUSH2 0x162
0x3bf PUSH1 0x4
0x3c1 DUP1
0x3c2 DUP1
0x3c3 CALLDATALOAD
0x3c4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d9 AND
0x3da SWAP1
0x3db PUSH1 0x20
0x3dd ADD
0x3de SWAP1
0x3df SWAP2
0x3e0 SWAP1
0x3e1 POP
0x3e2 POP
0x3e3 PUSH2 0x49a
0x3e6 JUMP
0x3e7 JUMPDEST
0x3e8 STOP
0x3e9 JUMPDEST
0x3ea CALLVALUE
0x3eb ISZERO
0x3ec PUSH2 0x16f
0x3ef JUMPI
---
0x3b7: V185 = 0x0
0x3ba: REVERT 0x0 0x0
0x3bb: JUMPDEST 
0x3bc: V186 = 0x162
0x3bf: V187 = 0x4
0x3c3: V188 = CALLDATALOAD 0x4
0x3c4: V189 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d9: V190 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x3db: V191 = 0x20
0x3dd: V192 = ADD 0x20 0x4
0x3e3: V193 = 0x49a
0x3e6: THROW 
0x3e7: JUMPDEST 
0x3e8: STOP 
0x3e9: JUMPDEST 
0x3ea: V194 = CALLVALUE
0x3eb: V195 = ISZERO V194
0x3ec: V196 = 0x16f
0x3ef: THROWI V195
---
Entry stack: []
Stack pops: 0
Stack additions: [V190, 0x162]
Exit stack: []

================================

Block 0x3f0
[0x3f0:0x452]
---
Predecessors: [0x3b7]
Successors: [0x453]
---
0x3f0 PUSH1 0x0
0x3f2 DUP1
0x3f3 REVERT
0x3f4 JUMPDEST
0x3f5 PUSH2 0x185
0x3f8 PUSH1 0x4
0x3fa DUP1
0x3fb DUP1
0x3fc CALLDATALOAD
0x3fd SWAP1
0x3fe PUSH1 0x20
0x400 ADD
0x401 SWAP1
0x402 SWAP2
0x403 SWAP1
0x404 POP
0x405 POP
0x406 PUSH2 0x667
0x409 JUMP
0x40a JUMPDEST
0x40b PUSH1 0x40
0x40d MLOAD
0x40e DUP1
0x40f DUP3
0x410 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x425 AND
0x426 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x43b AND
0x43c DUP2
0x43d MSTORE
0x43e PUSH1 0x20
0x440 ADD
0x441 SWAP2
0x442 POP
0x443 POP
0x444 PUSH1 0x40
0x446 MLOAD
0x447 DUP1
0x448 SWAP2
0x449 SUB
0x44a SWAP1
0x44b RETURN
0x44c JUMPDEST
0x44d CALLVALUE
0x44e ISZERO
0x44f PUSH2 0x1d2
0x452 JUMPI
---
0x3f0: V197 = 0x0
0x3f3: REVERT 0x0 0x0
0x3f4: JUMPDEST 
0x3f5: V198 = 0x185
0x3f8: V199 = 0x4
0x3fc: V200 = CALLDATALOAD 0x4
0x3fe: V201 = 0x20
0x400: V202 = ADD 0x20 0x4
0x406: V203 = 0x667
0x409: THROW 
0x40a: JUMPDEST 
0x40b: V204 = 0x40
0x40d: V205 = M[0x40]
0x410: V206 = 0xffffffffffffffffffffffffffffffffffffffff
0x425: V207 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x426: V208 = 0xffffffffffffffffffffffffffffffffffffffff
0x43b: V209 = AND 0xffffffffffffffffffffffffffffffffffffffff V207
0x43d: M[V205] = V209
0x43e: V210 = 0x20
0x440: V211 = ADD 0x20 V205
0x444: V212 = 0x40
0x446: V213 = M[0x40]
0x449: V214 = SUB V211 V213
0x44b: RETURN V213 V214
0x44c: JUMPDEST 
0x44d: V215 = CALLVALUE
0x44e: V216 = ISZERO V215
0x44f: V217 = 0x1d2
0x452: THROWI V216
---
Entry stack: []
Stack pops: 0
Stack additions: [V200, 0x185]
Exit stack: []

================================

Block 0x453
[0x453:0x48b]
---
Predecessors: [0x3f0]
Successors: [0x48c]
---
0x453 PUSH1 0x0
0x455 DUP1
0x456 REVERT
0x457 JUMPDEST
0x458 PUSH2 0x1fe
0x45b PUSH1 0x4
0x45d DUP1
0x45e DUP1
0x45f CALLDATALOAD
0x460 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x475 AND
0x476 SWAP1
0x477 PUSH1 0x20
0x479 ADD
0x47a SWAP1
0x47b SWAP2
0x47c SWAP1
0x47d POP
0x47e POP
0x47f PUSH2 0x6a6
0x482 JUMP
0x483 JUMPDEST
0x484 STOP
0x485 JUMPDEST
0x486 CALLVALUE
0x487 ISZERO
0x488 PUSH2 0x20b
0x48b JUMPI
---
0x453: V218 = 0x0
0x456: REVERT 0x0 0x0
0x457: JUMPDEST 
0x458: V219 = 0x1fe
0x45b: V220 = 0x4
0x45f: V221 = CALLDATALOAD 0x4
0x460: V222 = 0xffffffffffffffffffffffffffffffffffffffff
0x475: V223 = AND 0xffffffffffffffffffffffffffffffffffffffff V221
0x477: V224 = 0x20
0x479: V225 = ADD 0x20 0x4
0x47f: V226 = 0x6a6
0x482: THROW 
0x483: JUMPDEST 
0x484: STOP 
0x485: JUMPDEST 
0x486: V227 = CALLVALUE
0x487: V228 = ISZERO V227
0x488: V229 = 0x20b
0x48b: THROWI V228
---
Entry stack: []
Stack pops: 0
Stack additions: [V223, 0x1fe]
Exit stack: []

================================

Block 0x48c
[0x48c:0x4e0]
---
Predecessors: [0x453]
Successors: [0x4e1]
---
0x48c PUSH1 0x0
0x48e DUP1
0x48f REVERT
0x490 JUMPDEST
0x491 PUSH2 0x213
0x494 PUSH2 0x950
0x497 JUMP
0x498 JUMPDEST
0x499 PUSH1 0x40
0x49b MLOAD
0x49c DUP1
0x49d DUP3
0x49e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4b3 AND
0x4b4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c9 AND
0x4ca DUP2
0x4cb MSTORE
0x4cc PUSH1 0x20
0x4ce ADD
0x4cf SWAP2
0x4d0 POP
0x4d1 POP
0x4d2 PUSH1 0x40
0x4d4 MLOAD
0x4d5 DUP1
0x4d6 SWAP2
0x4d7 SUB
0x4d8 SWAP1
0x4d9 RETURN
0x4da JUMPDEST
0x4db CALLVALUE
0x4dc ISZERO
0x4dd PUSH2 0x260
0x4e0 JUMPI
---
0x48c: V230 = 0x0
0x48f: REVERT 0x0 0x0
0x490: JUMPDEST 
0x491: V231 = 0x213
0x494: V232 = 0x950
0x497: THROW 
0x498: JUMPDEST 
0x499: V233 = 0x40
0x49b: V234 = M[0x40]
0x49e: V235 = 0xffffffffffffffffffffffffffffffffffffffff
0x4b3: V236 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x4b4: V237 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c9: V238 = AND 0xffffffffffffffffffffffffffffffffffffffff V236
0x4cb: M[V234] = V238
0x4cc: V239 = 0x20
0x4ce: V240 = ADD 0x20 V234
0x4d2: V241 = 0x40
0x4d4: V242 = M[0x40]
0x4d7: V243 = SUB V240 V242
0x4d9: RETURN V242 V243
0x4da: JUMPDEST 
0x4db: V244 = CALLVALUE
0x4dc: V245 = ISZERO V244
0x4dd: V246 = 0x260
0x4e0: THROWI V245
---
Entry stack: []
Stack pops: 0
Stack additions: [0x213]
Exit stack: []

================================

Block 0x4e1
[0x4e1:0x531]
---
Predecessors: [0x48c]
Successors: [0x532]
---
0x4e1 PUSH1 0x0
0x4e3 DUP1
0x4e4 REVERT
0x4e5 JUMPDEST
0x4e6 PUSH2 0x28c
0x4e9 PUSH1 0x4
0x4eb DUP1
0x4ec DUP1
0x4ed CALLDATALOAD
0x4ee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x503 AND
0x504 SWAP1
0x505 PUSH1 0x20
0x507 ADD
0x508 SWAP1
0x509 SWAP2
0x50a SWAP1
0x50b POP
0x50c POP
0x50d PUSH2 0x975
0x510 JUMP
0x511 JUMPDEST
0x512 PUSH1 0x40
0x514 MLOAD
0x515 DUP1
0x516 DUP3
0x517 ISZERO
0x518 ISZERO
0x519 ISZERO
0x51a ISZERO
0x51b DUP2
0x51c MSTORE
0x51d PUSH1 0x20
0x51f ADD
0x520 SWAP2
0x521 POP
0x522 POP
0x523 PUSH1 0x40
0x525 MLOAD
0x526 DUP1
0x527 SWAP2
0x528 SUB
0x529 SWAP1
0x52a RETURN
0x52b JUMPDEST
0x52c CALLVALUE
0x52d ISZERO
0x52e PUSH2 0x2b1
0x531 JUMPI
---
0x4e1: V247 = 0x0
0x4e4: REVERT 0x0 0x0
0x4e5: JUMPDEST 
0x4e6: V248 = 0x28c
0x4e9: V249 = 0x4
0x4ed: V250 = CALLDATALOAD 0x4
0x4ee: V251 = 0xffffffffffffffffffffffffffffffffffffffff
0x503: V252 = AND 0xffffffffffffffffffffffffffffffffffffffff V250
0x505: V253 = 0x20
0x507: V254 = ADD 0x20 0x4
0x50d: V255 = 0x975
0x510: THROW 
0x511: JUMPDEST 
0x512: V256 = 0x40
0x514: V257 = M[0x40]
0x517: V258 = ISZERO S0
0x518: V259 = ISZERO V258
0x519: V260 = ISZERO V259
0x51a: V261 = ISZERO V260
0x51c: M[V257] = V261
0x51d: V262 = 0x20
0x51f: V263 = ADD 0x20 V257
0x523: V264 = 0x40
0x525: V265 = M[0x40]
0x528: V266 = SUB V263 V265
0x52a: RETURN V265 V266
0x52b: JUMPDEST 
0x52c: V267 = CALLVALUE
0x52d: V268 = ISZERO V267
0x52e: V269 = 0x2b1
0x531: THROWI V268
---
Entry stack: []
Stack pops: 0
Stack additions: [V252, 0x28c]
Exit stack: []

================================

Block 0x532
[0x532:0x565]
---
Predecessors: [0x4e1]
Successors: [0x566]
---
0x532 PUSH1 0x0
0x534 DUP1
0x535 REVERT
0x536 JUMPDEST
0x537 PUSH2 0x2b9
0x53a PUSH2 0x995
0x53d JUMP
0x53e JUMPDEST
0x53f PUSH1 0x40
0x541 MLOAD
0x542 DUP1
0x543 DUP1
0x544 PUSH1 0x20
0x546 ADD
0x547 DUP3
0x548 DUP2
0x549 SUB
0x54a DUP3
0x54b MSTORE
0x54c DUP4
0x54d DUP2
0x54e DUP2
0x54f MLOAD
0x550 DUP2
0x551 MSTORE
0x552 PUSH1 0x20
0x554 ADD
0x555 SWAP2
0x556 POP
0x557 DUP1
0x558 MLOAD
0x559 SWAP1
0x55a PUSH1 0x20
0x55c ADD
0x55d SWAP1
0x55e PUSH1 0x20
0x560 MUL
0x561 DUP1
0x562 DUP4
0x563 DUP4
0x564 PUSH1 0x0
---
0x532: V270 = 0x0
0x535: REVERT 0x0 0x0
0x536: JUMPDEST 
0x537: V271 = 0x2b9
0x53a: V272 = 0x995
0x53d: THROW 
0x53e: JUMPDEST 
0x53f: V273 = 0x40
0x541: V274 = M[0x40]
0x544: V275 = 0x20
0x546: V276 = ADD 0x20 V274
0x549: V277 = SUB V276 V274
0x54b: M[V274] = V277
0x54f: V278 = M[S0]
0x551: M[V276] = V278
0x552: V279 = 0x20
0x554: V280 = ADD 0x20 V276
0x558: V281 = M[S0]
0x55a: V282 = 0x20
0x55c: V283 = ADD 0x20 S0
0x55e: V284 = 0x20
0x560: V285 = MUL 0x20 V281
0x564: V286 = 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: [0x2b9, 0x0, V283, V280, V285, V285, V283, V280, V274, V274, S0]
Exit stack: []

================================

Block 0x566
[0x566:0x56e]
---
Predecessors: [0x532]
Successors: [0x56f]
---
0x566 JUMPDEST
0x567 DUP4
0x568 DUP2
0x569 LT
0x56a ISZERO
0x56b PUSH2 0x2fc
0x56e JUMPI
---
0x566: JUMPDEST 
0x569: V287 = LT 0x0 V285
0x56a: V288 = ISZERO V287
0x56b: V289 = 0x2fc
0x56e: THROWI V288
---
Entry stack: [S9, V274, V274, V280, V283, V285, V285, V280, V283, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V274, V274, V280, V283, V285, V285, V280, V283, 0x0]

================================

Block 0x56f
[0x56f:0x59b]
---
Predecessors: [0x566]
Successors: [0x59c]
---
0x56f DUP1
0x570 DUP3
0x571 ADD
0x572 MLOAD
0x573 DUP2
0x574 DUP5
0x575 ADD
0x576 MSTORE
0x577 PUSH1 0x20
0x579 DUP2
0x57a ADD
0x57b SWAP1
0x57c POP
0x57d PUSH2 0x2e1
0x580 JUMP
0x581 JUMPDEST
0x582 POP
0x583 POP
0x584 POP
0x585 POP
0x586 SWAP1
0x587 POP
0x588 ADD
0x589 SWAP3
0x58a POP
0x58b POP
0x58c POP
0x58d PUSH1 0x40
0x58f MLOAD
0x590 DUP1
0x591 SWAP2
0x592 SUB
0x593 SWAP1
0x594 RETURN
0x595 JUMPDEST
0x596 CALLVALUE
0x597 ISZERO
0x598 PUSH2 0x31b
0x59b JUMPI
---
0x571: V290 = ADD V283 0x0
0x572: V291 = M[V290]
0x575: V292 = ADD V280 0x0
0x576: M[V292] = V291
0x577: V293 = 0x20
0x57a: V294 = ADD 0x0 0x20
0x57d: V295 = 0x2e1
0x580: THROW 
0x581: JUMPDEST 
0x588: V296 = ADD S4 S6
0x58d: V297 = 0x40
0x58f: V298 = M[0x40]
0x592: V299 = SUB V296 V298
0x594: RETURN V298 V299
0x595: JUMPDEST 
0x596: V300 = CALLVALUE
0x597: V301 = ISZERO V300
0x598: V302 = 0x31b
0x59b: THROWI V301
---
Entry stack: [S9, V274, V274, V280, V283, V285, V285, V280, V283, 0x0]
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0x59c
[0x59c:0x623]
---
Predecessors: [0x56f]
Successors: [0x624]
---
0x59c PUSH1 0x0
0x59e DUP1
0x59f REVERT
0x5a0 JUMPDEST
0x5a1 PUSH2 0x347
0x5a4 PUSH1 0x4
0x5a6 DUP1
0x5a7 DUP1
0x5a8 CALLDATALOAD
0x5a9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5be AND
0x5bf SWAP1
0x5c0 PUSH1 0x20
0x5c2 ADD
0x5c3 SWAP1
0x5c4 SWAP2
0x5c5 SWAP1
0x5c6 POP
0x5c7 POP
0x5c8 PUSH2 0xa29
0x5cb JUMP
0x5cc JUMPDEST
0x5cd STOP
0x5ce JUMPDEST
0x5cf PUSH1 0x0
0x5d1 PUSH1 0x1
0x5d3 PUSH1 0x0
0x5d5 CALLER
0x5d6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5eb AND
0x5ec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x601 AND
0x602 DUP2
0x603 MSTORE
0x604 PUSH1 0x20
0x606 ADD
0x607 SWAP1
0x608 DUP2
0x609 MSTORE
0x60a PUSH1 0x20
0x60c ADD
0x60d PUSH1 0x0
0x60f SHA3
0x610 PUSH1 0x0
0x612 SWAP1
0x613 SLOAD
0x614 SWAP1
0x615 PUSH2 0x100
0x618 EXP
0x619 SWAP1
0x61a DIV
0x61b PUSH1 0xff
0x61d AND
0x61e ISZERO
0x61f ISZERO
0x620 PUSH2 0x3a3
0x623 JUMPI
---
0x59c: V303 = 0x0
0x59f: REVERT 0x0 0x0
0x5a0: JUMPDEST 
0x5a1: V304 = 0x347
0x5a4: V305 = 0x4
0x5a8: V306 = CALLDATALOAD 0x4
0x5a9: V307 = 0xffffffffffffffffffffffffffffffffffffffff
0x5be: V308 = AND 0xffffffffffffffffffffffffffffffffffffffff V306
0x5c0: V309 = 0x20
0x5c2: V310 = ADD 0x20 0x4
0x5c8: V311 = 0xa29
0x5cb: THROW 
0x5cc: JUMPDEST 
0x5cd: STOP 
0x5ce: JUMPDEST 
0x5cf: V312 = 0x0
0x5d1: V313 = 0x1
0x5d3: V314 = 0x0
0x5d5: V315 = CALLER
0x5d6: V316 = 0xffffffffffffffffffffffffffffffffffffffff
0x5eb: V317 = AND 0xffffffffffffffffffffffffffffffffffffffff V315
0x5ec: V318 = 0xffffffffffffffffffffffffffffffffffffffff
0x601: V319 = AND 0xffffffffffffffffffffffffffffffffffffffff V317
0x603: M[0x0] = V319
0x604: V320 = 0x20
0x606: V321 = ADD 0x20 0x0
0x609: M[0x20] = 0x1
0x60a: V322 = 0x20
0x60c: V323 = ADD 0x20 0x20
0x60d: V324 = 0x0
0x60f: V325 = SHA3 0x0 0x40
0x610: V326 = 0x0
0x613: V327 = S[V325]
0x615: V328 = 0x100
0x618: V329 = EXP 0x100 0x0
0x61a: V330 = DIV V327 0x1
0x61b: V331 = 0xff
0x61d: V332 = AND 0xff V330
0x61e: V333 = ISZERO V332
0x61f: V334 = ISZERO V333
0x620: V335 = 0x3a3
0x623: THROWI V334
---
Entry stack: []
Stack pops: 0
Stack additions: [V308, 0x347, 0x0]
Exit stack: []

================================

Block 0x624
[0x624:0x6f9]
---
Predecessors: [0x59c]
Successors: [0x6fa]
---
0x624 PUSH1 0x0
0x626 DUP1
0x627 REVERT
0x628 JUMPDEST
0x629 DUP5
0x62a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x63f AND
0x640 PUSH4 0x23b872dd
0x645 DUP6
0x646 DUP6
0x647 DUP6
0x648 PUSH1 0x40
0x64a MLOAD
0x64b DUP5
0x64c PUSH4 0xffffffff
0x651 AND
0x652 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x670 MUL
0x671 DUP2
0x672 MSTORE
0x673 PUSH1 0x4
0x675 ADD
0x676 DUP1
0x677 DUP5
0x678 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x68d AND
0x68e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a3 AND
0x6a4 DUP2
0x6a5 MSTORE
0x6a6 PUSH1 0x20
0x6a8 ADD
0x6a9 DUP4
0x6aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6bf AND
0x6c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6d5 AND
0x6d6 DUP2
0x6d7 MSTORE
0x6d8 PUSH1 0x20
0x6da ADD
0x6db DUP3
0x6dc DUP2
0x6dd MSTORE
0x6de PUSH1 0x20
0x6e0 ADD
0x6e1 SWAP4
0x6e2 POP
0x6e3 POP
0x6e4 POP
0x6e5 POP
0x6e6 PUSH1 0x20
0x6e8 PUSH1 0x40
0x6ea MLOAD
0x6eb DUP1
0x6ec DUP4
0x6ed SUB
0x6ee DUP2
0x6ef PUSH1 0x0
0x6f1 DUP8
0x6f2 DUP1
0x6f3 EXTCODESIZE
0x6f4 ISZERO
0x6f5 ISZERO
0x6f6 PUSH2 0x479
0x6f9 JUMPI
---
0x624: V336 = 0x0
0x627: REVERT 0x0 0x0
0x628: JUMPDEST 
0x62a: V337 = 0xffffffffffffffffffffffffffffffffffffffff
0x63f: V338 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x640: V339 = 0x23b872dd
0x648: V340 = 0x40
0x64a: V341 = M[0x40]
0x64c: V342 = 0xffffffff
0x651: V343 = AND 0xffffffff 0x23b872dd
0x652: V344 = 0x100000000000000000000000000000000000000000000000000000000
0x670: V345 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x23b872dd
0x672: M[V341] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x673: V346 = 0x4
0x675: V347 = ADD 0x4 V341
0x678: V348 = 0xffffffffffffffffffffffffffffffffffffffff
0x68d: V349 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x68e: V350 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a3: V351 = AND 0xffffffffffffffffffffffffffffffffffffffff V349
0x6a5: M[V347] = V351
0x6a6: V352 = 0x20
0x6a8: V353 = ADD 0x20 V347
0x6aa: V354 = 0xffffffffffffffffffffffffffffffffffffffff
0x6bf: V355 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x6c0: V356 = 0xffffffffffffffffffffffffffffffffffffffff
0x6d5: V357 = AND 0xffffffffffffffffffffffffffffffffffffffff V355
0x6d7: M[V353] = V357
0x6d8: V358 = 0x20
0x6da: V359 = ADD 0x20 V353
0x6dd: M[V359] = S1
0x6de: V360 = 0x20
0x6e0: V361 = ADD 0x20 V359
0x6e6: V362 = 0x20
0x6e8: V363 = 0x40
0x6ea: V364 = M[0x40]
0x6ed: V365 = SUB V361 V364
0x6ef: V366 = 0x0
0x6f3: V367 = EXTCODESIZE V338
0x6f4: V368 = ISZERO V367
0x6f5: V369 = ISZERO V368
0x6f6: V370 = 0x479
0x6f9: THROWI V369
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: [V338, 0x0, V364, V365, V364, 0x20, V361, 0x23b872dd, V338, S0, S1, S2, S3, S4]
Exit stack: []

================================

Block 0x6fa
[0x6fa:0x706]
---
Predecessors: [0x624]
Successors: [0x707]
---
0x6fa PUSH1 0x0
0x6fc DUP1
0x6fd REVERT
0x6fe JUMPDEST
0x6ff GAS
0x700 CALL
0x701 ISZERO
0x702 ISZERO
0x703 PUSH2 0x486
0x706 JUMPI
---
0x6fa: V371 = 0x0
0x6fd: REVERT 0x0 0x0
0x6fe: JUMPDEST 
0x6ff: V372 = GAS
0x700: V373 = CALL V372 S0 S1 S2 S3 S4 S5
0x701: V374 = ISZERO V373
0x702: V375 = ISZERO V374
0x703: V376 = 0x486
0x706: THROWI V375
---
Entry stack: [S13, S12, S11, S10, S9, V338, 0x23b872dd, V361, 0x20, V364, V365, V364, 0x0, V338]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x707
[0x707:0x775]
---
Predecessors: [0x6fa]
Successors: [0x776]
---
0x707 PUSH1 0x0
0x709 DUP1
0x70a REVERT
0x70b JUMPDEST
0x70c POP
0x70d POP
0x70e POP
0x70f PUSH1 0x40
0x711 MLOAD
0x712 DUP1
0x713 MLOAD
0x714 SWAP1
0x715 POP
0x716 SWAP1
0x717 POP
0x718 SWAP5
0x719 SWAP4
0x71a POP
0x71b POP
0x71c POP
0x71d POP
0x71e JUMP
0x71f JUMPDEST
0x720 PUSH1 0x0
0x722 DUP1
0x723 SWAP1
0x724 SLOAD
0x725 SWAP1
0x726 PUSH2 0x100
0x729 EXP
0x72a SWAP1
0x72b DIV
0x72c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x741 AND
0x742 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x757 AND
0x758 CALLER
0x759 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x76e AND
0x76f EQ
0x770 ISZERO
0x771 ISZERO
0x772 PUSH2 0x4f5
0x775 JUMPI
---
0x707: V377 = 0x0
0x70a: REVERT 0x0 0x0
0x70b: JUMPDEST 
0x70f: V378 = 0x40
0x711: V379 = M[0x40]
0x713: V380 = M[V379]
0x71e: JUMP S8
0x71f: JUMPDEST 
0x720: V381 = 0x0
0x724: V382 = S[0x0]
0x726: V383 = 0x100
0x729: V384 = EXP 0x100 0x0
0x72b: V385 = DIV V382 0x1
0x72c: V386 = 0xffffffffffffffffffffffffffffffffffffffff
0x741: V387 = AND 0xffffffffffffffffffffffffffffffffffffffff V385
0x742: V388 = 0xffffffffffffffffffffffffffffffffffffffff
0x757: V389 = AND 0xffffffffffffffffffffffffffffffffffffffff V387
0x758: V390 = CALLER
0x759: V391 = 0xffffffffffffffffffffffffffffffffffffffff
0x76e: V392 = AND 0xffffffffffffffffffffffffffffffffffffffff V390
0x76f: V393 = EQ V392 V389
0x770: V394 = ISZERO V393
0x771: V395 = ISZERO V394
0x772: V396 = 0x4f5
0x775: THROWI V395
---
Entry stack: []
Stack pops: 0
Stack additions: [V380]
Exit stack: []

================================

Block 0x776
[0x776:0x7cf]
---
Predecessors: [0x707]
Successors: [0x7d0]
---
0x776 PUSH1 0x0
0x778 DUP1
0x779 REVERT
0x77a JUMPDEST
0x77b DUP1
0x77c PUSH1 0x1
0x77e PUSH1 0x0
0x780 DUP3
0x781 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x796 AND
0x797 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7ac AND
0x7ad DUP2
0x7ae MSTORE
0x7af PUSH1 0x20
0x7b1 ADD
0x7b2 SWAP1
0x7b3 DUP2
0x7b4 MSTORE
0x7b5 PUSH1 0x20
0x7b7 ADD
0x7b8 PUSH1 0x0
0x7ba SHA3
0x7bb PUSH1 0x0
0x7bd SWAP1
0x7be SLOAD
0x7bf SWAP1
0x7c0 PUSH2 0x100
0x7c3 EXP
0x7c4 SWAP1
0x7c5 DIV
0x7c6 PUSH1 0xff
0x7c8 AND
0x7c9 ISZERO
0x7ca ISZERO
0x7cb ISZERO
0x7cc PUSH2 0x54f
0x7cf JUMPI
---
0x776: V397 = 0x0
0x779: REVERT 0x0 0x0
0x77a: JUMPDEST 
0x77c: V398 = 0x1
0x77e: V399 = 0x0
0x781: V400 = 0xffffffffffffffffffffffffffffffffffffffff
0x796: V401 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x797: V402 = 0xffffffffffffffffffffffffffffffffffffffff
0x7ac: V403 = AND 0xffffffffffffffffffffffffffffffffffffffff V401
0x7ae: M[0x0] = V403
0x7af: V404 = 0x20
0x7b1: V405 = ADD 0x20 0x0
0x7b4: M[0x20] = 0x1
0x7b5: V406 = 0x20
0x7b7: V407 = ADD 0x20 0x20
0x7b8: V408 = 0x0
0x7ba: V409 = SHA3 0x0 0x40
0x7bb: V410 = 0x0
0x7be: V411 = S[V409]
0x7c0: V412 = 0x100
0x7c3: V413 = EXP 0x100 0x0
0x7c5: V414 = DIV V411 0x1
0x7c6: V415 = 0xff
0x7c8: V416 = AND 0xff V414
0x7c9: V417 = ISZERO V416
0x7ca: V418 = ISZERO V417
0x7cb: V419 = ISZERO V418
0x7cc: V420 = 0x54f
0x7cf: THROWI V419
---
Entry stack: []
Stack pops: 0
Stack additions: [S0, S0]
Exit stack: []

================================

Block 0x7d0
[0x7d0:0x8f9]
---
Predecessors: [0x776]
Successors: [0x8fa]
---
0x7d0 PUSH1 0x0
0x7d2 DUP1
0x7d3 REVERT
0x7d4 JUMPDEST
0x7d5 PUSH1 0x1
0x7d7 DUP1
0x7d8 PUSH1 0x0
0x7da DUP5
0x7db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7f0 AND
0x7f1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x806 AND
0x807 DUP2
0x808 MSTORE
0x809 PUSH1 0x20
0x80b ADD
0x80c SWAP1
0x80d DUP2
0x80e MSTORE
0x80f PUSH1 0x20
0x811 ADD
0x812 PUSH1 0x0
0x814 SHA3
0x815 PUSH1 0x0
0x817 PUSH2 0x100
0x81a EXP
0x81b DUP2
0x81c SLOAD
0x81d DUP2
0x81e PUSH1 0xff
0x820 MUL
0x821 NOT
0x822 AND
0x823 SWAP1
0x824 DUP4
0x825 ISZERO
0x826 ISZERO
0x827 MUL
0x828 OR
0x829 SWAP1
0x82a SSTORE
0x82b POP
0x82c PUSH1 0x2
0x82e DUP1
0x82f SLOAD
0x830 DUP1
0x831 PUSH1 0x1
0x833 ADD
0x834 DUP3
0x835 DUP2
0x836 PUSH2 0x5ba
0x839 SWAP2
0x83a SWAP1
0x83b PUSH2 0xb7e
0x83e JUMP
0x83f JUMPDEST
0x840 SWAP2
0x841 PUSH1 0x0
0x843 MSTORE
0x844 PUSH1 0x20
0x846 PUSH1 0x0
0x848 SHA3
0x849 SWAP1
0x84a ADD
0x84b PUSH1 0x0
0x84d DUP5
0x84e SWAP1
0x84f SWAP2
0x850 SWAP1
0x851 SWAP2
0x852 PUSH2 0x100
0x855 EXP
0x856 DUP2
0x857 SLOAD
0x858 DUP2
0x859 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x86e MUL
0x86f NOT
0x870 AND
0x871 SWAP1
0x872 DUP4
0x873 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x888 AND
0x889 MUL
0x88a OR
0x88b SWAP1
0x88c SSTORE
0x88d POP
0x88e POP
0x88f CALLER
0x890 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8a5 AND
0x8a6 DUP3
0x8a7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8bc AND
0x8bd PUSH32 0x94bb87f4c15c4587ff559a7584006fa01ddf9299359be6b512b94527aa961aca
0x8de PUSH1 0x40
0x8e0 MLOAD
0x8e1 PUSH1 0x40
0x8e3 MLOAD
0x8e4 DUP1
0x8e5 SWAP2
0x8e6 SUB
0x8e7 SWAP1
0x8e8 LOG3
0x8e9 POP
0x8ea POP
0x8eb JUMP
0x8ec JUMPDEST
0x8ed PUSH1 0x2
0x8ef DUP2
0x8f0 DUP2
0x8f1 SLOAD
0x8f2 DUP2
0x8f3 LT
0x8f4 ISZERO
0x8f5 ISZERO
0x8f6 PUSH2 0x676
0x8f9 JUMPI
---
0x7d0: V421 = 0x0
0x7d3: REVERT 0x0 0x0
0x7d4: JUMPDEST 
0x7d5: V422 = 0x1
0x7d8: V423 = 0x0
0x7db: V424 = 0xffffffffffffffffffffffffffffffffffffffff
0x7f0: V425 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x7f1: V426 = 0xffffffffffffffffffffffffffffffffffffffff
0x806: V427 = AND 0xffffffffffffffffffffffffffffffffffffffff V425
0x808: M[0x0] = V427
0x809: V428 = 0x20
0x80b: V429 = ADD 0x20 0x0
0x80e: M[0x20] = 0x1
0x80f: V430 = 0x20
0x811: V431 = ADD 0x20 0x20
0x812: V432 = 0x0
0x814: V433 = SHA3 0x0 0x40
0x815: V434 = 0x0
0x817: V435 = 0x100
0x81a: V436 = EXP 0x100 0x0
0x81c: V437 = S[V433]
0x81e: V438 = 0xff
0x820: V439 = MUL 0xff 0x1
0x821: V440 = NOT 0xff
0x822: V441 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V437
0x825: V442 = ISZERO 0x1
0x826: V443 = ISZERO 0x0
0x827: V444 = MUL 0x1 0x1
0x828: V445 = OR 0x1 V441
0x82a: S[V433] = V445
0x82c: V446 = 0x2
0x82f: V447 = S[0x2]
0x831: V448 = 0x1
0x833: V449 = ADD 0x1 V447
0x836: V450 = 0x5ba
0x83b: V451 = 0xb7e
0x83e: THROW 
0x83f: JUMPDEST 
0x841: V452 = 0x0
0x843: M[0x0] = S2
0x844: V453 = 0x20
0x846: V454 = 0x0
0x848: V455 = SHA3 0x0 0x20
0x84a: V456 = ADD S1 V455
0x84b: V457 = 0x0
0x852: V458 = 0x100
0x855: V459 = EXP 0x100 0x0
0x857: V460 = S[V456]
0x859: V461 = 0xffffffffffffffffffffffffffffffffffffffff
0x86e: V462 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x86f: V463 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x870: V464 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V460
0x873: V465 = 0xffffffffffffffffffffffffffffffffffffffff
0x888: V466 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x889: V467 = MUL V466 0x1
0x88a: V468 = OR V467 V464
0x88c: S[V456] = V468
0x88f: V469 = CALLER
0x890: V470 = 0xffffffffffffffffffffffffffffffffffffffff
0x8a5: V471 = AND 0xffffffffffffffffffffffffffffffffffffffff V469
0x8a7: V472 = 0xffffffffffffffffffffffffffffffffffffffff
0x8bc: V473 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x8bd: V474 = 0x94bb87f4c15c4587ff559a7584006fa01ddf9299359be6b512b94527aa961aca
0x8de: V475 = 0x40
0x8e0: V476 = M[0x40]
0x8e1: V477 = 0x40
0x8e3: V478 = M[0x40]
0x8e6: V479 = SUB V476 V478
0x8e8: LOG V478 V479 0x94bb87f4c15c4587ff559a7584006fa01ddf9299359be6b512b94527aa961aca V473 V471
0x8eb: JUMP S5
0x8ec: JUMPDEST 
0x8ed: V480 = 0x2
0x8f1: V481 = S[0x2]
0x8f3: V482 = LT S0 V481
0x8f4: V483 = ISZERO V482
0x8f5: V484 = ISZERO V483
0x8f6: V485 = 0x676
0x8f9: THROWI V484
---
Entry stack: [S1, S0]
Stack pops: 0
Stack additions: [V449, 0x2, 0x5ba, V449, V447, 0x2, S0, S1, S0, 0x2, S0]
Exit stack: []

================================

Block 0x8fa
[0x8fa:0x983]
---
Predecessors: [0x7d0]
Successors: [0x984]
---
0x8fa INVALID
0x8fb JUMPDEST
0x8fc SWAP1
0x8fd PUSH1 0x0
0x8ff MSTORE
0x900 PUSH1 0x20
0x902 PUSH1 0x0
0x904 SHA3
0x905 SWAP1
0x906 ADD
0x907 PUSH1 0x0
0x909 SWAP2
0x90a POP
0x90b SLOAD
0x90c SWAP1
0x90d PUSH2 0x100
0x910 EXP
0x911 SWAP1
0x912 DIV
0x913 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x928 AND
0x929 DUP2
0x92a JUMP
0x92b JUMPDEST
0x92c PUSH1 0x0
0x92e DUP1
0x92f PUSH1 0x0
0x931 SWAP1
0x932 SLOAD
0x933 SWAP1
0x934 PUSH2 0x100
0x937 EXP
0x938 SWAP1
0x939 DIV
0x93a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x94f AND
0x950 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x965 AND
0x966 CALLER
0x967 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x97c AND
0x97d EQ
0x97e ISZERO
0x97f ISZERO
0x980 PUSH2 0x703
0x983 JUMPI
---
0x8fa: INVALID 
0x8fb: JUMPDEST 
0x8fd: V486 = 0x0
0x8ff: M[0x0] = S1
0x900: V487 = 0x20
0x902: V488 = 0x0
0x904: V489 = SHA3 0x0 0x20
0x906: V490 = ADD S0 V489
0x907: V491 = 0x0
0x90b: V492 = S[V490]
0x90d: V493 = 0x100
0x910: V494 = EXP 0x100 0x0
0x912: V495 = DIV V492 0x1
0x913: V496 = 0xffffffffffffffffffffffffffffffffffffffff
0x928: V497 = AND 0xffffffffffffffffffffffffffffffffffffffff V495
0x92a: JUMP S3
0x92b: JUMPDEST 
0x92c: V498 = 0x0
0x92f: V499 = 0x0
0x932: V500 = S[0x0]
0x934: V501 = 0x100
0x937: V502 = EXP 0x100 0x0
0x939: V503 = DIV V500 0x1
0x93a: V504 = 0xffffffffffffffffffffffffffffffffffffffff
0x94f: V505 = AND 0xffffffffffffffffffffffffffffffffffffffff V503
0x950: V506 = 0xffffffffffffffffffffffffffffffffffffffff
0x965: V507 = AND 0xffffffffffffffffffffffffffffffffffffffff V505
0x966: V508 = CALLER
0x967: V509 = 0xffffffffffffffffffffffffffffffffffffffff
0x97c: V510 = AND 0xffffffffffffffffffffffffffffffffffffffff V508
0x97d: V511 = EQ V510 V507
0x97e: V512 = ISZERO V511
0x97f: V513 = ISZERO V512
0x980: V514 = 0x703
0x983: THROWI V513
---
Entry stack: [S2, 0x2, S0]
Stack pops: 0
Stack additions: [V497, S3, 0x0]
Exit stack: []

================================

Block 0x984
[0x984:0x9dc]
---
Predecessors: [0x8fa]
Successors: [0x9dd]
---
0x984 PUSH1 0x0
0x986 DUP1
0x987 REVERT
0x988 JUMPDEST
0x989 DUP2
0x98a PUSH1 0x1
0x98c PUSH1 0x0
0x98e DUP3
0x98f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9a4 AND
0x9a5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9ba AND
0x9bb DUP2
0x9bc MSTORE
0x9bd PUSH1 0x20
0x9bf ADD
0x9c0 SWAP1
0x9c1 DUP2
0x9c2 MSTORE
0x9c3 PUSH1 0x20
0x9c5 ADD
0x9c6 PUSH1 0x0
0x9c8 SHA3
0x9c9 PUSH1 0x0
0x9cb SWAP1
0x9cc SLOAD
0x9cd SWAP1
0x9ce PUSH2 0x100
0x9d1 EXP
0x9d2 SWAP1
0x9d3 DIV
0x9d4 PUSH1 0xff
0x9d6 AND
0x9d7 ISZERO
0x9d8 ISZERO
0x9d9 PUSH2 0x75c
0x9dc JUMPI
---
0x984: V515 = 0x0
0x987: REVERT 0x0 0x0
0x988: JUMPDEST 
0x98a: V516 = 0x1
0x98c: V517 = 0x0
0x98f: V518 = 0xffffffffffffffffffffffffffffffffffffffff
0x9a4: V519 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x9a5: V520 = 0xffffffffffffffffffffffffffffffffffffffff
0x9ba: V521 = AND 0xffffffffffffffffffffffffffffffffffffffff V519
0x9bc: M[0x0] = V521
0x9bd: V522 = 0x20
0x9bf: V523 = ADD 0x20 0x0
0x9c2: M[0x20] = 0x1
0x9c3: V524 = 0x20
0x9c5: V525 = ADD 0x20 0x20
0x9c6: V526 = 0x0
0x9c8: V527 = SHA3 0x0 0x40
0x9c9: V528 = 0x0
0x9cc: V529 = S[V527]
0x9ce: V530 = 0x100
0x9d1: V531 = EXP 0x100 0x0
0x9d3: V532 = DIV V529 0x1
0x9d4: V533 = 0xff
0x9d6: V534 = AND 0xff V532
0x9d7: V535 = ISZERO V534
0x9d8: V536 = ISZERO V535
0x9d9: V537 = 0x75c
0x9dc: THROWI V536
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: [S1, S0, S1]
Exit stack: []

================================

Block 0x9dd
[0x9dd:0xa34]
---
Predecessors: [0x984]
Successors: [0xa35]
---
0x9dd PUSH1 0x0
0x9df DUP1
0x9e0 REVERT
0x9e1 JUMPDEST
0x9e2 PUSH1 0x1
0x9e4 PUSH1 0x0
0x9e6 DUP5
0x9e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9fc AND
0x9fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa12 AND
0xa13 DUP2
0xa14 MSTORE
0xa15 PUSH1 0x20
0xa17 ADD
0xa18 SWAP1
0xa19 DUP2
0xa1a MSTORE
0xa1b PUSH1 0x20
0xa1d ADD
0xa1e PUSH1 0x0
0xa20 SHA3
0xa21 PUSH1 0x0
0xa23 PUSH2 0x100
0xa26 EXP
0xa27 DUP2
0xa28 SLOAD
0xa29 SWAP1
0xa2a PUSH1 0xff
0xa2c MUL
0xa2d NOT
0xa2e AND
0xa2f SWAP1
0xa30 SSTORE
0xa31 PUSH1 0x0
0xa33 SWAP2
0xa34 POP
---
0x9dd: V538 = 0x0
0x9e0: REVERT 0x0 0x0
0x9e1: JUMPDEST 
0x9e2: V539 = 0x1
0x9e4: V540 = 0x0
0x9e7: V541 = 0xffffffffffffffffffffffffffffffffffffffff
0x9fc: V542 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x9fd: V543 = 0xffffffffffffffffffffffffffffffffffffffff
0xa12: V544 = AND 0xffffffffffffffffffffffffffffffffffffffff V542
0xa14: M[0x0] = V544
0xa15: V545 = 0x20
0xa17: V546 = ADD 0x20 0x0
0xa1a: M[0x20] = 0x1
0xa1b: V547 = 0x20
0xa1d: V548 = ADD 0x20 0x20
0xa1e: V549 = 0x0
0xa20: V550 = SHA3 0x0 0x40
0xa21: V551 = 0x0
0xa23: V552 = 0x100
0xa26: V553 = EXP 0x100 0x0
0xa28: V554 = S[V550]
0xa2a: V555 = 0xff
0xa2c: V556 = MUL 0xff 0x1
0xa2d: V557 = NOT 0xff
0xa2e: V558 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V554
0xa30: S[V550] = V558
0xa31: V559 = 0x0
---
Entry stack: [S2, S1, S0]
Stack pops: 0
Stack additions: [S0, 0x0, S2]
Exit stack: []

================================

Block 0xa35
[0xa35:0xa42]
---
Predecessors: [0x9dd]
Successors: [0xa43]
---
0xa35 JUMPDEST
0xa36 PUSH1 0x2
0xa38 DUP1
0xa39 SLOAD
0xa3a SWAP1
0xa3b POP
0xa3c DUP3
0xa3d LT
0xa3e ISZERO
0xa3f PUSH2 0x8f1
0xa42 JUMPI
---
0xa35: JUMPDEST 
0xa36: V560 = 0x2
0xa39: V561 = S[0x2]
0xa3d: V562 = LT 0x0 V561
0xa3e: V563 = ISZERO V562
0xa3f: V564 = 0x8f1
0xa42: THROWI V563
---
Entry stack: [S2, 0x0, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [S2, 0x0, S0]

================================

Block 0xa43
[0xa43:0xa66]
---
Predecessors: [0xa35]
Successors: [0xa67]
---
0xa43 DUP3
0xa44 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa59 AND
0xa5a PUSH1 0x2
0xa5c DUP4
0xa5d DUP2
0xa5e SLOAD
0xa5f DUP2
0xa60 LT
0xa61 ISZERO
0xa62 ISZERO
0xa63 PUSH2 0x7e3
0xa66 JUMPI
---
0xa44: V565 = 0xffffffffffffffffffffffffffffffffffffffff
0xa59: V566 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xa5a: V567 = 0x2
0xa5e: V568 = S[0x2]
0xa60: V569 = LT 0x0 V568
0xa61: V570 = ISZERO V569
0xa62: V571 = ISZERO V570
0xa63: V572 = 0x7e3
0xa66: THROWI V571
---
Entry stack: [S2, 0x0, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V566, 0x2, S1]
Exit stack: [S2, 0x0, S0, V566, 0x2, 0x0]

================================

Block 0xa67
[0xa67:0xab0]
---
Predecessors: [0xa43]
Successors: [0xab1]
---
0xa67 INVALID
0xa68 JUMPDEST
0xa69 SWAP1
0xa6a PUSH1 0x0
0xa6c MSTORE
0xa6d PUSH1 0x20
0xa6f PUSH1 0x0
0xa71 SHA3
0xa72 SWAP1
0xa73 ADD
0xa74 PUSH1 0x0
0xa76 SWAP1
0xa77 SLOAD
0xa78 SWAP1
0xa79 PUSH2 0x100
0xa7c EXP
0xa7d SWAP1
0xa7e DIV
0xa7f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa94 AND
0xa95 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaaa AND
0xaab EQ
0xaac ISZERO
0xaad PUSH2 0x8e4
0xab0 JUMPI
---
0xa67: INVALID 
0xa68: JUMPDEST 
0xa6a: V573 = 0x0
0xa6c: M[0x0] = S1
0xa6d: V574 = 0x20
0xa6f: V575 = 0x0
0xa71: V576 = SHA3 0x0 0x20
0xa73: V577 = ADD S0 V576
0xa74: V578 = 0x0
0xa77: V579 = S[V577]
0xa79: V580 = 0x100
0xa7c: V581 = EXP 0x100 0x0
0xa7e: V582 = DIV V579 0x1
0xa7f: V583 = 0xffffffffffffffffffffffffffffffffffffffff
0xa94: V584 = AND 0xffffffffffffffffffffffffffffffffffffffff V582
0xa95: V585 = 0xffffffffffffffffffffffffffffffffffffffff
0xaaa: V586 = AND 0xffffffffffffffffffffffffffffffffffffffff V584
0xaab: V587 = EQ V586 S2
0xaac: V588 = ISZERO V587
0xaad: V589 = 0x8e4
0xab0: THROWI V588
---
Entry stack: [S5, 0x0, S3, V566, 0x2, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xab1
[0xab1:0xac5]
---
Predecessors: [0xa67]
Successors: [0xac6]
---
0xab1 PUSH1 0x2
0xab3 PUSH1 0x1
0xab5 PUSH1 0x2
0xab7 DUP1
0xab8 SLOAD
0xab9 SWAP1
0xaba POP
0xabb SUB
0xabc DUP2
0xabd SLOAD
0xabe DUP2
0xabf LT
0xac0 ISZERO
0xac1 ISZERO
0xac2 PUSH2 0x842
0xac5 JUMPI
---
0xab1: V590 = 0x2
0xab3: V591 = 0x1
0xab5: V592 = 0x2
0xab8: V593 = S[0x2]
0xabb: V594 = SUB V593 0x1
0xabd: V595 = S[0x2]
0xabf: V596 = LT V594 V595
0xac0: V597 = ISZERO V596
0xac1: V598 = ISZERO V597
0xac2: V599 = 0x842
0xac5: THROWI V598
---
Entry stack: []
Stack pops: 0
Stack additions: [0x2, V594]
Exit stack: [0x2, V594]

================================

Block 0xac6
[0xac6:0xb00]
---
Predecessors: [0xab1]
Successors: [0xb01]
---
0xac6 INVALID
0xac7 JUMPDEST
0xac8 SWAP1
0xac9 PUSH1 0x0
0xacb MSTORE
0xacc PUSH1 0x20
0xace PUSH1 0x0
0xad0 SHA3
0xad1 SWAP1
0xad2 ADD
0xad3 PUSH1 0x0
0xad5 SWAP1
0xad6 SLOAD
0xad7 SWAP1
0xad8 PUSH2 0x100
0xadb EXP
0xadc SWAP1
0xadd DIV
0xade PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaf3 AND
0xaf4 PUSH1 0x2
0xaf6 DUP4
0xaf7 DUP2
0xaf8 SLOAD
0xaf9 DUP2
0xafa LT
0xafb ISZERO
0xafc ISZERO
0xafd PUSH2 0x87d
0xb00 JUMPI
---
0xac6: INVALID 
0xac7: JUMPDEST 
0xac9: V600 = 0x0
0xacb: M[0x0] = S1
0xacc: V601 = 0x20
0xace: V602 = 0x0
0xad0: V603 = SHA3 0x0 0x20
0xad2: V604 = ADD S0 V603
0xad3: V605 = 0x0
0xad6: V606 = S[V604]
0xad8: V607 = 0x100
0xadb: V608 = EXP 0x100 0x0
0xadd: V609 = DIV V606 0x1
0xade: V610 = 0xffffffffffffffffffffffffffffffffffffffff
0xaf3: V611 = AND 0xffffffffffffffffffffffffffffffffffffffff V609
0xaf4: V612 = 0x2
0xaf8: V613 = S[0x2]
0xafa: V614 = LT S3 V613
0xafb: V615 = ISZERO V614
0xafc: V616 = ISZERO V615
0xafd: V617 = 0x87d
0xb00: THROWI V616
---
Entry stack: [0x2, V594]
Stack pops: 0
Stack additions: [S3, 0x2, V611, S2, S3]
Exit stack: []

================================

Block 0xb01
[0xb01:0xc49]
---
Predecessors: [0xac6]
Successors: [0xc4a]
---
0xb01 INVALID
0xb02 JUMPDEST
0xb03 SWAP1
0xb04 PUSH1 0x0
0xb06 MSTORE
0xb07 PUSH1 0x20
0xb09 PUSH1 0x0
0xb0b SHA3
0xb0c SWAP1
0xb0d ADD
0xb0e PUSH1 0x0
0xb10 PUSH2 0x100
0xb13 EXP
0xb14 DUP2
0xb15 SLOAD
0xb16 DUP2
0xb17 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb2c MUL
0xb2d NOT
0xb2e AND
0xb2f SWAP1
0xb30 DUP4
0xb31 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb46 AND
0xb47 MUL
0xb48 OR
0xb49 SWAP1
0xb4a SSTORE
0xb4b POP
0xb4c PUSH1 0x1
0xb4e PUSH1 0x2
0xb50 DUP2
0xb51 DUP2
0xb52 DUP1
0xb53 SLOAD
0xb54 SWAP1
0xb55 POP
0xb56 SUB
0xb57 SWAP2
0xb58 POP
0xb59 DUP2
0xb5a PUSH2 0x8de
0xb5d SWAP2
0xb5e SWAP1
0xb5f PUSH2 0xbaa
0xb62 JUMP
0xb63 JUMPDEST
0xb64 POP
0xb65 PUSH2 0x8f1
0xb68 JUMP
0xb69 JUMPDEST
0xb6a DUP2
0xb6b DUP1
0xb6c PUSH1 0x1
0xb6e ADD
0xb6f SWAP3
0xb70 POP
0xb71 POP
0xb72 PUSH2 0x7b0
0xb75 JUMP
0xb76 JUMPDEST
0xb77 CALLER
0xb78 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb8d AND
0xb8e DUP4
0xb8f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xba4 AND
0xba5 PUSH32 0xf5b347a1e40749dd050f5f07fbdbeb7e3efa9756903044dd29401fd1d4bb4a1c
0xbc6 PUSH1 0x40
0xbc8 MLOAD
0xbc9 PUSH1 0x40
0xbcb MLOAD
0xbcc DUP1
0xbcd SWAP2
0xbce SUB
0xbcf SWAP1
0xbd0 LOG3
0xbd1 POP
0xbd2 POP
0xbd3 POP
0xbd4 JUMP
0xbd5 JUMPDEST
0xbd6 PUSH1 0x0
0xbd8 DUP1
0xbd9 SWAP1
0xbda SLOAD
0xbdb SWAP1
0xbdc PUSH2 0x100
0xbdf EXP
0xbe0 SWAP1
0xbe1 DIV
0xbe2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbf7 AND
0xbf8 DUP2
0xbf9 JUMP
0xbfa JUMPDEST
0xbfb PUSH1 0x1
0xbfd PUSH1 0x20
0xbff MSTORE
0xc00 DUP1
0xc01 PUSH1 0x0
0xc03 MSTORE
0xc04 PUSH1 0x40
0xc06 PUSH1 0x0
0xc08 SHA3
0xc09 PUSH1 0x0
0xc0b SWAP2
0xc0c POP
0xc0d SLOAD
0xc0e SWAP1
0xc0f PUSH2 0x100
0xc12 EXP
0xc13 SWAP1
0xc14 DIV
0xc15 PUSH1 0xff
0xc17 AND
0xc18 DUP2
0xc19 JUMP
0xc1a JUMPDEST
0xc1b PUSH2 0x99d
0xc1e PUSH2 0xbd6
0xc21 JUMP
0xc22 JUMPDEST
0xc23 PUSH1 0x2
0xc25 DUP1
0xc26 SLOAD
0xc27 DUP1
0xc28 PUSH1 0x20
0xc2a MUL
0xc2b PUSH1 0x20
0xc2d ADD
0xc2e PUSH1 0x40
0xc30 MLOAD
0xc31 SWAP1
0xc32 DUP2
0xc33 ADD
0xc34 PUSH1 0x40
0xc36 MSTORE
0xc37 DUP1
0xc38 SWAP3
0xc39 SWAP2
0xc3a SWAP1
0xc3b DUP2
0xc3c DUP2
0xc3d MSTORE
0xc3e PUSH1 0x20
0xc40 ADD
0xc41 DUP3
0xc42 DUP1
0xc43 SLOAD
0xc44 DUP1
0xc45 ISZERO
0xc46 PUSH2 0xa1f
0xc49 JUMPI
---
0xb01: INVALID 
0xb02: JUMPDEST 
0xb04: V618 = 0x0
0xb06: M[0x0] = S1
0xb07: V619 = 0x20
0xb09: V620 = 0x0
0xb0b: V621 = SHA3 0x0 0x20
0xb0d: V622 = ADD S0 V621
0xb0e: V623 = 0x0
0xb10: V624 = 0x100
0xb13: V625 = EXP 0x100 0x0
0xb15: V626 = S[V622]
0xb17: V627 = 0xffffffffffffffffffffffffffffffffffffffff
0xb2c: V628 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xb2d: V629 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xb2e: V630 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V626
0xb31: V631 = 0xffffffffffffffffffffffffffffffffffffffff
0xb46: V632 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xb47: V633 = MUL V632 0x1
0xb48: V634 = OR V633 V630
0xb4a: S[V622] = V634
0xb4c: V635 = 0x1
0xb4e: V636 = 0x2
0xb53: V637 = S[0x2]
0xb56: V638 = SUB V637 0x1
0xb5a: V639 = 0x8de
0xb5f: V640 = 0xbaa
0xb62: THROW 
0xb63: JUMPDEST 
0xb65: V641 = 0x8f1
0xb68: THROW 
0xb69: JUMPDEST 
0xb6c: V642 = 0x1
0xb6e: V643 = ADD 0x1 S1
0xb72: V644 = 0x7b0
0xb75: THROW 
0xb76: JUMPDEST 
0xb77: V645 = CALLER
0xb78: V646 = 0xffffffffffffffffffffffffffffffffffffffff
0xb8d: V647 = AND 0xffffffffffffffffffffffffffffffffffffffff V645
0xb8f: V648 = 0xffffffffffffffffffffffffffffffffffffffff
0xba4: V649 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xba5: V650 = 0xf5b347a1e40749dd050f5f07fbdbeb7e3efa9756903044dd29401fd1d4bb4a1c
0xbc6: V651 = 0x40
0xbc8: V652 = M[0x40]
0xbc9: V653 = 0x40
0xbcb: V654 = M[0x40]
0xbce: V655 = SUB V652 V654
0xbd0: LOG V654 V655 0xf5b347a1e40749dd050f5f07fbdbeb7e3efa9756903044dd29401fd1d4bb4a1c V649 V647
0xbd4: JUMP S3
0xbd5: JUMPDEST 
0xbd6: V656 = 0x0
0xbda: V657 = S[0x0]
0xbdc: V658 = 0x100
0xbdf: V659 = EXP 0x100 0x0
0xbe1: V660 = DIV V657 0x1
0xbe2: V661 = 0xffffffffffffffffffffffffffffffffffffffff
0xbf7: V662 = AND 0xffffffffffffffffffffffffffffffffffffffff V660
0xbf9: JUMP S0
0xbfa: JUMPDEST 
0xbfb: V663 = 0x1
0xbfd: V664 = 0x20
0xbff: M[0x20] = 0x1
0xc01: V665 = 0x0
0xc03: M[0x0] = S0
0xc04: V666 = 0x40
0xc06: V667 = 0x0
0xc08: V668 = SHA3 0x0 0x40
0xc09: V669 = 0x0
0xc0d: V670 = S[V668]
0xc0f: V671 = 0x100
0xc12: V672 = EXP 0x100 0x0
0xc14: V673 = DIV V670 0x1
0xc15: V674 = 0xff
0xc17: V675 = AND 0xff V673
0xc19: JUMP S1
0xc1a: JUMPDEST 
0xc1b: V676 = 0x99d
0xc1e: V677 = 0xbd6
0xc21: THROW 
0xc22: JUMPDEST 
0xc23: V678 = 0x2
0xc26: V679 = S[0x2]
0xc28: V680 = 0x20
0xc2a: V681 = MUL 0x20 V679
0xc2b: V682 = 0x20
0xc2d: V683 = ADD 0x20 V681
0xc2e: V684 = 0x40
0xc30: V685 = M[0x40]
0xc33: V686 = ADD V685 V683
0xc34: V687 = 0x40
0xc36: M[0x40] = V686
0xc3d: M[V685] = V679
0xc3e: V688 = 0x20
0xc40: V689 = ADD 0x20 V685
0xc43: V690 = S[0x2]
0xc45: V691 = ISZERO V690
0xc46: V692 = 0xa1f
0xc49: THROWI V691
---
Entry stack: [S4, S3, V611, 0x2, S0]
Stack pops: 0
Stack additions: [V638, 0x2, 0x8de, V638, S0, V643, V662, S0, V675, S1, 0x99d, V690, 0x2, V689, V679, 0x2, V685]
Exit stack: []

================================

Block 0xc4a
[0xc4a:0xc59]
---
Predecessors: [0xb01]
Successors: [0xc5a]
---
0xc4a PUSH1 0x20
0xc4c MUL
0xc4d DUP3
0xc4e ADD
0xc4f SWAP2
0xc50 SWAP1
0xc51 PUSH1 0x0
0xc53 MSTORE
0xc54 PUSH1 0x20
0xc56 PUSH1 0x0
0xc58 SHA3
0xc59 SWAP1
---
0xc4a: V693 = 0x20
0xc4c: V694 = MUL 0x20 V690
0xc4e: V695 = ADD V689 V694
0xc51: V696 = 0x0
0xc53: M[0x0] = 0x2
0xc54: V697 = 0x20
0xc56: V698 = 0x0
0xc58: V699 = SHA3 0x0 0x20
---
Entry stack: [V685, 0x2, V679, V689, 0x2, V690]
Stack pops: 3
Stack additions: [V695, V699, S2]
Exit stack: [V685, 0x2, V679, V695, V699, V689]

================================

Block 0xc5a
[0xc5a:0xca3]
---
Predecessors: [0xc4a]
Successors: [0xca4]
---
0xc5a JUMPDEST
0xc5b DUP2
0xc5c PUSH1 0x0
0xc5e SWAP1
0xc5f SLOAD
0xc60 SWAP1
0xc61 PUSH2 0x100
0xc64 EXP
0xc65 SWAP1
0xc66 DIV
0xc67 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc7c AND
0xc7d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc92 AND
0xc93 DUP2
0xc94 MSTORE
0xc95 PUSH1 0x20
0xc97 ADD
0xc98 SWAP1
0xc99 PUSH1 0x1
0xc9b ADD
0xc9c SWAP1
0xc9d DUP1
0xc9e DUP4
0xc9f GT
0xca0 PUSH2 0x9d5
0xca3 JUMPI
---
0xc5a: JUMPDEST 
0xc5c: V700 = 0x0
0xc5f: V701 = S[V699]
0xc61: V702 = 0x100
0xc64: V703 = EXP 0x100 0x0
0xc66: V704 = DIV V701 0x1
0xc67: V705 = 0xffffffffffffffffffffffffffffffffffffffff
0xc7c: V706 = AND 0xffffffffffffffffffffffffffffffffffffffff V704
0xc7d: V707 = 0xffffffffffffffffffffffffffffffffffffffff
0xc92: V708 = AND 0xffffffffffffffffffffffffffffffffffffffff V706
0xc94: M[V689] = V708
0xc95: V709 = 0x20
0xc97: V710 = ADD 0x20 V689
0xc99: V711 = 0x1
0xc9b: V712 = ADD 0x1 V699
0xc9f: V713 = GT V695 V710
0xca0: V714 = 0x9d5
0xca3: THROWI V713
---
Entry stack: [V685, 0x2, V679, V695, V699, V689]
Stack pops: 3
Stack additions: [S2, V712, V710]
Exit stack: [V685, 0x2, V679, V695, V712, V710]

================================

Block 0xca4
[0xca4:0xd04]
---
Predecessors: [0xc5a]
Successors: [0xd05]
---
0xca4 JUMPDEST
0xca5 POP
0xca6 POP
0xca7 POP
0xca8 POP
0xca9 POP
0xcaa SWAP1
0xcab POP
0xcac SWAP1
0xcad JUMP
0xcae JUMPDEST
0xcaf PUSH1 0x0
0xcb1 DUP1
0xcb2 SWAP1
0xcb3 SLOAD
0xcb4 SWAP1
0xcb5 PUSH2 0x100
0xcb8 EXP
0xcb9 SWAP1
0xcba DIV
0xcbb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcd0 AND
0xcd1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xce6 AND
0xce7 CALLER
0xce8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcfd AND
0xcfe EQ
0xcff ISZERO
0xd00 ISZERO
0xd01 PUSH2 0xa84
0xd04 JUMPI
---
0xca4: JUMPDEST 
0xcad: JUMP S7
0xcae: JUMPDEST 
0xcaf: V715 = 0x0
0xcb3: V716 = S[0x0]
0xcb5: V717 = 0x100
0xcb8: V718 = EXP 0x100 0x0
0xcba: V719 = DIV V716 0x1
0xcbb: V720 = 0xffffffffffffffffffffffffffffffffffffffff
0xcd0: V721 = AND 0xffffffffffffffffffffffffffffffffffffffff V719
0xcd1: V722 = 0xffffffffffffffffffffffffffffffffffffffff
0xce6: V723 = AND 0xffffffffffffffffffffffffffffffffffffffff V721
0xce7: V724 = CALLER
0xce8: V725 = 0xffffffffffffffffffffffffffffffffffffffff
0xcfd: V726 = AND 0xffffffffffffffffffffffffffffffffffffffff V724
0xcfe: V727 = EQ V726 V723
0xcff: V728 = ISZERO V727
0xd00: V729 = ISZERO V728
0xd01: V730 = 0xa84
0xd04: THROWI V729
---
Entry stack: [V685, 0x2, V679, V695, V712, V710]
Stack pops: 15
Stack additions: []
Exit stack: []

================================

Block 0xd05
[0xd05:0xd40]
---
Predecessors: [0xca4]
Successors: [0xd41]
---
0xd05 PUSH1 0x0
0xd07 DUP1
0xd08 REVERT
0xd09 JUMPDEST
0xd0a PUSH1 0x0
0xd0c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd21 AND
0xd22 DUP2
0xd23 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd38 AND
0xd39 EQ
0xd3a ISZERO
0xd3b ISZERO
0xd3c ISZERO
0xd3d PUSH2 0xac0
0xd40 JUMPI
---
0xd05: V731 = 0x0
0xd08: REVERT 0x0 0x0
0xd09: JUMPDEST 
0xd0a: V732 = 0x0
0xd0c: V733 = 0xffffffffffffffffffffffffffffffffffffffff
0xd21: V734 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0xd23: V735 = 0xffffffffffffffffffffffffffffffffffffffff
0xd38: V736 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xd39: V737 = EQ V736 0x0
0xd3a: V738 = ISZERO V737
0xd3b: V739 = ISZERO V738
0xd3c: V740 = ISZERO V739
0xd3d: V741 = 0xac0
0xd40: THROWI V740
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0xd41
[0xd41:0xe10]
---
Predecessors: [0xd05]
Successors: [0xe11]
---
0xd41 PUSH1 0x0
0xd43 DUP1
0xd44 REVERT
0xd45 JUMPDEST
0xd46 DUP1
0xd47 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd5c AND
0xd5d PUSH1 0x0
0xd5f DUP1
0xd60 SWAP1
0xd61 SLOAD
0xd62 SWAP1
0xd63 PUSH2 0x100
0xd66 EXP
0xd67 SWAP1
0xd68 DIV
0xd69 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd7e AND
0xd7f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd94 AND
0xd95 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xdb6 PUSH1 0x40
0xdb8 MLOAD
0xdb9 PUSH1 0x40
0xdbb MLOAD
0xdbc DUP1
0xdbd SWAP2
0xdbe SUB
0xdbf SWAP1
0xdc0 LOG3
0xdc1 DUP1
0xdc2 PUSH1 0x0
0xdc4 DUP1
0xdc5 PUSH2 0x100
0xdc8 EXP
0xdc9 DUP2
0xdca SLOAD
0xdcb DUP2
0xdcc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xde1 MUL
0xde2 NOT
0xde3 AND
0xde4 SWAP1
0xde5 DUP4
0xde6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdfb AND
0xdfc MUL
0xdfd OR
0xdfe SWAP1
0xdff SSTORE
0xe00 POP
0xe01 POP
0xe02 JUMP
0xe03 JUMPDEST
0xe04 DUP2
0xe05 SLOAD
0xe06 DUP2
0xe07 DUP4
0xe08 SSTORE
0xe09 DUP2
0xe0a DUP2
0xe0b ISZERO
0xe0c GT
0xe0d PUSH2 0xba5
0xe10 JUMPI
---
0xd41: V742 = 0x0
0xd44: REVERT 0x0 0x0
0xd45: JUMPDEST 
0xd47: V743 = 0xffffffffffffffffffffffffffffffffffffffff
0xd5c: V744 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xd5d: V745 = 0x0
0xd61: V746 = S[0x0]
0xd63: V747 = 0x100
0xd66: V748 = EXP 0x100 0x0
0xd68: V749 = DIV V746 0x1
0xd69: V750 = 0xffffffffffffffffffffffffffffffffffffffff
0xd7e: V751 = AND 0xffffffffffffffffffffffffffffffffffffffff V749
0xd7f: V752 = 0xffffffffffffffffffffffffffffffffffffffff
0xd94: V753 = AND 0xffffffffffffffffffffffffffffffffffffffff V751
0xd95: V754 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xdb6: V755 = 0x40
0xdb8: V756 = M[0x40]
0xdb9: V757 = 0x40
0xdbb: V758 = M[0x40]
0xdbe: V759 = SUB V756 V758
0xdc0: LOG V758 V759 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V753 V744
0xdc2: V760 = 0x0
0xdc5: V761 = 0x100
0xdc8: V762 = EXP 0x100 0x0
0xdca: V763 = S[0x0]
0xdcc: V764 = 0xffffffffffffffffffffffffffffffffffffffff
0xde1: V765 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xde2: V766 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xde3: V767 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V763
0xde6: V768 = 0xffffffffffffffffffffffffffffffffffffffff
0xdfb: V769 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xdfc: V770 = MUL V769 0x1
0xdfd: V771 = OR V770 V767
0xdff: S[0x0] = V771
0xe02: JUMP S1
0xe03: JUMPDEST 
0xe05: V772 = S[S1]
0xe08: S[S1] = S0
0xe0b: V773 = ISZERO V772
0xe0c: V774 = GT V773 S0
0xe0d: V775 = 0xba5
0xe10: THROWI V774
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [V772, S0, S1]
Exit stack: []

================================

Block 0xe11
[0xe11:0xe29]
---
Predecessors: [0xd41]
Successors: [0xe2a]
---
0xe11 DUP2
0xe12 DUP4
0xe13 PUSH1 0x0
0xe15 MSTORE
0xe16 PUSH1 0x20
0xe18 PUSH1 0x0
0xe1a SHA3
0xe1b SWAP2
0xe1c DUP3
0xe1d ADD
0xe1e SWAP2
0xe1f ADD
0xe20 PUSH2 0xba4
0xe23 SWAP2
0xe24 SWAP1
0xe25 PUSH2 0xbea
0xe28 JUMP
0xe29 JUMPDEST
---
0xe13: V776 = 0x0
0xe15: M[0x0] = S2
0xe16: V777 = 0x20
0xe18: V778 = 0x0
0xe1a: V779 = SHA3 0x0 0x20
0xe1d: V780 = ADD V779 V772
0xe1f: V781 = ADD V779 S1
0xe20: V782 = 0xba4
0xe25: V783 = 0xbea
0xe28: THROW 
0xe29: JUMPDEST 
---
Entry stack: [S2, S1, V772]
Stack pops: 3
Stack additions: [S2, S1]
Exit stack: []

================================

Block 0xe2a
[0xe2a:0xe3c]
---
Predecessors: [0xe11]
Successors: [0xe3d]
---
0xe2a JUMPDEST
0xe2b POP
0xe2c POP
0xe2d POP
0xe2e JUMP
0xe2f JUMPDEST
0xe30 DUP2
0xe31 SLOAD
0xe32 DUP2
0xe33 DUP4
0xe34 SSTORE
0xe35 DUP2
0xe36 DUP2
0xe37 ISZERO
0xe38 GT
0xe39 PUSH2 0xbd1
0xe3c JUMPI
---
0xe2a: JUMPDEST 
0xe2e: JUMP S3
0xe2f: JUMPDEST 
0xe31: V784 = S[S1]
0xe34: S[S1] = S0
0xe37: V785 = ISZERO V784
0xe38: V786 = GT V785 S0
0xe39: V787 = 0xbd1
0xe3c: THROWI V786
---
Entry stack: []
Stack pops: 8
Stack additions: [V784, S0, S1]
Exit stack: []

================================

Block 0xe3d
[0xe3d:0xe55]
---
Predecessors: [0xe2a]
Successors: [0xe56]
---
0xe3d DUP2
0xe3e DUP4
0xe3f PUSH1 0x0
0xe41 MSTORE
0xe42 PUSH1 0x20
0xe44 PUSH1 0x0
0xe46 SHA3
0xe47 SWAP2
0xe48 DUP3
0xe49 ADD
0xe4a SWAP2
0xe4b ADD
0xe4c PUSH2 0xbd0
0xe4f SWAP2
0xe50 SWAP1
0xe51 PUSH2 0xbea
0xe54 JUMP
0xe55 JUMPDEST
---
0xe3f: V788 = 0x0
0xe41: M[0x0] = S2
0xe42: V789 = 0x20
0xe44: V790 = 0x0
0xe46: V791 = SHA3 0x0 0x20
0xe49: V792 = ADD V791 V784
0xe4b: V793 = ADD V791 S1
0xe4c: V794 = 0xbd0
0xe51: V795 = 0xbea
0xe54: THROW 
0xe55: JUMPDEST 
---
Entry stack: [S2, S1, V784]
Stack pops: 3
Stack additions: [S2, S1]
Exit stack: []

================================

Block 0xe56
[0xe56:0xe74]
---
Predecessors: [0xe3d]
Successors: [0xe75]
---
0xe56 JUMPDEST
0xe57 POP
0xe58 POP
0xe59 POP
0xe5a JUMP
0xe5b JUMPDEST
0xe5c PUSH1 0x20
0xe5e PUSH1 0x40
0xe60 MLOAD
0xe61 SWAP1
0xe62 DUP2
0xe63 ADD
0xe64 PUSH1 0x40
0xe66 MSTORE
0xe67 DUP1
0xe68 PUSH1 0x0
0xe6a DUP2
0xe6b MSTORE
0xe6c POP
0xe6d SWAP1
0xe6e JUMP
0xe6f JUMPDEST
0xe70 PUSH2 0xc0c
0xe73 SWAP2
0xe74 SWAP1
---
0xe56: JUMPDEST 
0xe5a: JUMP S3
0xe5b: JUMPDEST 
0xe5c: V796 = 0x20
0xe5e: V797 = 0x40
0xe60: V798 = M[0x40]
0xe63: V799 = ADD V798 0x20
0xe64: V800 = 0x40
0xe66: M[0x40] = V799
0xe68: V801 = 0x0
0xe6b: M[V798] = 0x0
0xe6e: JUMP S0
0xe6f: JUMPDEST 
0xe70: V802 = 0xc0c
---
Entry stack: []
Stack pops: 15
Stack additions: [S0, S1, 0xc0c]
Exit stack: []

================================

Block 0xe75
[0xe75:0xe7d]
---
Predecessors: [0xe56]
Successors: [0xe7e]
---
0xe75 JUMPDEST
0xe76 DUP1
0xe77 DUP3
0xe78 GT
0xe79 ISZERO
0xe7a PUSH2 0xc08
0xe7d JUMPI
---
0xe75: JUMPDEST 
0xe78: V803 = GT S1 S0
0xe79: V804 = ISZERO V803
0xe7a: V805 = 0xc08
0xe7d: THROWI V804
---
Entry stack: [0xc0c, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [0xc0c, S1, S0]

================================

Block 0xe7e
[0xe7e:0xebf]
---
Predecessors: [0xe75]
Successors: []
---
0xe7e PUSH1 0x0
0xe80 DUP2
0xe81 PUSH1 0x0
0xe83 SWAP1
0xe84 SSTORE
0xe85 POP
0xe86 PUSH1 0x1
0xe88 ADD
0xe89 PUSH2 0xbf0
0xe8c JUMP
0xe8d JUMPDEST
0xe8e POP
0xe8f SWAP1
0xe90 JUMP
0xe91 JUMPDEST
0xe92 SWAP1
0xe93 JUMP
0xe94 STOP
0xe95 LOG1
0xe96 PUSH6 0x627a7a723058
0xe9d SHA3
0xe9e DUP16
0xe9f GASLIMIT
0xea0 PUSH31 0x18479776ab8676227193608e27bc4522b5a372bcf4f78ec1f68af8c23d0029
---
0xe7e: V806 = 0x0
0xe81: V807 = 0x0
0xe84: S[S0] = 0x0
0xe86: V808 = 0x1
0xe88: V809 = ADD 0x1 S0
0xe89: V810 = 0xbf0
0xe8c: THROW 
0xe8d: JUMPDEST 
0xe90: JUMP S2
0xe91: JUMPDEST 
0xe93: JUMP S1
0xe94: STOP 
0xe95: LOG S0 S1 S2
0xe96: V811 = 0x627a7a723058
0xe9d: V812 = SHA3 0x627a7a723058 S3
0xe9f: V813 = GASLIMIT
0xea0: V814 = 0x18479776ab8676227193608e27bc4522b5a372bcf4f78ec1f68af8c23d0029
---
Entry stack: [0xc0c, S1, S0]
Stack pops: 2
Stack additions: [0x18479776ab8676227193608e27bc4522b5a372bcf4f78ec1f68af8c23d0029, V813, S18, V812, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18]
Exit stack: []

================================

Function 0:
Public function signature: 0x8da5cb5b
Entry block: 0x51
Exit block: 0x64
Body: 0x51, 0x58, 0x5c, 0x64, 0xdf

Function 1:
Public function signature: 0xf2fde38b
Entry block: 0xa6
Exit block: 0xdd
Body: 0xa6, 0xad, 0xb1, 0xdd, 0x104, 0x15b, 0x15f, 0x197, 0x19b

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

