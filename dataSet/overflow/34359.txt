Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x51]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x22faf03a
0x3c EQ
0x3d PUSH2 0x51
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x22faf03a
0x3c: V13 = EQ 0x22faf03a V11
0x3d: V14 = 0x51
0x40: JUMPI 0x51 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xb7]
---
0x41 DUP1
0x42 PUSH4 0x3c1b81a5
0x47 EQ
0x48 PUSH2 0xb7
0x4b JUMPI
---
0x42: V15 = 0x3c1b81a5
0x47: V16 = EQ 0x3c1b81a5 V11
0x48: V17 = 0xb7
0x4b: JUMPI 0xb7 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x50]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d PUSH1 0x0
0x4f DUP1
0x50 REVERT
---
0x4c: JUMPDEST 
0x4d: V18 = 0x0
0x50: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x51
[0x51:0x57]
---
Predecessors: [0xd]
Successors: [0x58, 0x5c]
---
0x51 JUMPDEST
0x52 CALLVALUE
0x53 ISZERO
0x54 PUSH2 0x5c
0x57 JUMPI
---
0x51: JUMPDEST 
0x52: V19 = CALLVALUE
0x53: V20 = ISZERO V19
0x54: V21 = 0x5c
0x57: JUMPI 0x5c V20
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x58
[0x58:0x5b]
---
Predecessors: [0x51]
Successors: []
---
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x58: V22 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0xb4]
---
Predecessors: [0x51]
Successors: [0x14c]
---
0x5c JUMPDEST
0x5d PUSH2 0xb5
0x60 PUSH1 0x4
0x62 DUP1
0x63 DUP1
0x64 CALLDATALOAD
0x65 SWAP1
0x66 PUSH1 0x20
0x68 ADD
0x69 SWAP1
0x6a DUP3
0x6b ADD
0x6c DUP1
0x6d CALLDATALOAD
0x6e SWAP1
0x6f PUSH1 0x20
0x71 ADD
0x72 SWAP1
0x73 DUP1
0x74 DUP1
0x75 PUSH1 0x1f
0x77 ADD
0x78 PUSH1 0x20
0x7a DUP1
0x7b SWAP2
0x7c DIV
0x7d MUL
0x7e PUSH1 0x20
0x80 ADD
0x81 PUSH1 0x40
0x83 MLOAD
0x84 SWAP1
0x85 DUP2
0x86 ADD
0x87 PUSH1 0x40
0x89 MSTORE
0x8a DUP1
0x8b SWAP4
0x8c SWAP3
0x8d SWAP2
0x8e SWAP1
0x8f DUP2
0x90 DUP2
0x91 MSTORE
0x92 PUSH1 0x20
0x94 ADD
0x95 DUP4
0x96 DUP4
0x97 DUP1
0x98 DUP3
0x99 DUP5
0x9a CALLDATACOPY
0x9b DUP3
0x9c ADD
0x9d SWAP2
0x9e POP
0x9f POP
0xa0 POP
0xa1 POP
0xa2 POP
0xa3 POP
0xa4 SWAP2
0xa5 SWAP1
0xa6 DUP1
0xa7 CALLDATALOAD
0xa8 SWAP1
0xa9 PUSH1 0x20
0xab ADD
0xac SWAP1
0xad SWAP2
0xae SWAP1
0xaf POP
0xb0 POP
0xb1 PUSH2 0x14c
0xb4 JUMP
---
0x5c: JUMPDEST 
0x5d: V23 = 0xb5
0x60: V24 = 0x4
0x64: V25 = CALLDATALOAD 0x4
0x66: V26 = 0x20
0x68: V27 = ADD 0x20 0x4
0x6b: V28 = ADD 0x4 V25
0x6d: V29 = CALLDATALOAD V28
0x6f: V30 = 0x20
0x71: V31 = ADD 0x20 V28
0x75: V32 = 0x1f
0x77: V33 = ADD 0x1f V29
0x78: V34 = 0x20
0x7c: V35 = DIV V33 0x20
0x7d: V36 = MUL V35 0x20
0x7e: V37 = 0x20
0x80: V38 = ADD 0x20 V36
0x81: V39 = 0x40
0x83: V40 = M[0x40]
0x86: V41 = ADD V40 V38
0x87: V42 = 0x40
0x89: M[0x40] = V41
0x91: M[V40] = V29
0x92: V43 = 0x20
0x94: V44 = ADD 0x20 V40
0x9a: CALLDATACOPY V44 V31 V29
0x9c: V45 = ADD V44 V29
0xa7: V46 = CALLDATALOAD 0x24
0xa9: V47 = 0x20
0xab: V48 = ADD 0x20 0x24
0xb1: V49 = 0x14c
0xb4: JUMP 0x14c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xb5, V40, V46]
Exit stack: [V11, 0xb5, V40, V46]

================================

Block 0xb5
[0xb5:0xb6]
---
Predecessors: [0x162]
Successors: []
---
0xb5 JUMPDEST
0xb6 STOP
---
0xb5: JUMPDEST 
0xb6: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb7
[0xb7:0xbd]
---
Predecessors: [0x41]
Successors: [0xbe, 0xc2]
---
0xb7 JUMPDEST
0xb8 CALLVALUE
0xb9 ISZERO
0xba PUSH2 0xc2
0xbd JUMPI
---
0xb7: JUMPDEST 
0xb8: V50 = CALLVALUE
0xb9: V51 = ISZERO V50
0xba: V52 = 0xc2
0xbd: JUMPI 0xc2 V51
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xbe
[0xbe:0xc1]
---
Predecessors: [0xb7]
Successors: []
---
0xbe PUSH1 0x0
0xc0 DUP1
0xc1 REVERT
---
0xbe: V53 = 0x0
0xc1: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc2
[0xc2:0xc9]
---
Predecessors: [0xb7]
Successors: [0x16e]
---
0xc2 JUMPDEST
0xc3 PUSH2 0xca
0xc6 PUSH2 0x16e
0xc9 JUMP
---
0xc2: JUMPDEST 
0xc3: V54 = 0xca
0xc6: V55 = 0x16e
0xc9: JUMP 0x16e
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xca]
Exit stack: [V11, 0xca]

================================

Block 0xca
[0xca:0xf4]
---
Predecessors: [0x211]
Successors: [0xf5]
---
0xca JUMPDEST
0xcb PUSH1 0x40
0xcd MLOAD
0xce DUP1
0xcf DUP1
0xd0 PUSH1 0x20
0xd2 ADD
0xd3 DUP4
0xd4 DUP2
0xd5 MSTORE
0xd6 PUSH1 0x20
0xd8 ADD
0xd9 DUP3
0xda DUP2
0xdb SUB
0xdc DUP3
0xdd MSTORE
0xde DUP5
0xdf DUP2
0xe0 DUP2
0xe1 MLOAD
0xe2 DUP2
0xe3 MSTORE
0xe4 PUSH1 0x20
0xe6 ADD
0xe7 SWAP2
0xe8 POP
0xe9 DUP1
0xea MLOAD
0xeb SWAP1
0xec PUSH1 0x20
0xee ADD
0xef SWAP1
0xf0 DUP1
0xf1 DUP4
0xf2 DUP4
0xf3 PUSH1 0x0
---
0xca: JUMPDEST 
0xcb: V56 = 0x40
0xcd: V57 = M[0x40]
0xd0: V58 = 0x20
0xd2: V59 = ADD 0x20 V57
0xd5: M[V59] = V110
0xd6: V60 = 0x20
0xd8: V61 = ADD 0x20 V59
0xdb: V62 = SUB V61 V57
0xdd: M[V57] = V62
0xe1: V63 = M[V130]
0xe3: M[V61] = V63
0xe4: V64 = 0x20
0xe6: V65 = ADD 0x20 V61
0xea: V66 = M[V130]
0xec: V67 = 0x20
0xee: V68 = ADD 0x20 V130
0xf3: V69 = 0x0
---
Entry stack: [V11, V130, V110]
Stack pops: 2
Stack additions: [S1, S0, V57, V57, V65, V68, V66, V66, V65, V68, 0x0]
Exit stack: [V11, V130, V110, V57, V57, V65, V68, V66, V66, V65, V68, 0x0]

================================

Block 0xf5
[0xf5:0xfd]
---
Predecessors: [0xca, 0xfe]
Successors: [0xfe, 0x110]
---
0xf5 JUMPDEST
0xf6 DUP4
0xf7 DUP2
0xf8 LT
0xf9 ISZERO
0xfa PUSH2 0x110
0xfd JUMPI
---
0xf5: JUMPDEST 
0xf8: V70 = LT S0 V66
0xf9: V71 = ISZERO V70
0xfa: V72 = 0x110
0xfd: JUMPI 0x110 V71
---
Entry stack: [V11, V130, V110, V57, V57, V65, V68, V66, V66, V65, V68, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, V130, V110, V57, V57, V65, V68, V66, V66, V65, V68, S0]

================================

Block 0xfe
[0xfe:0x10f]
---
Predecessors: [0xf5]
Successors: [0xf5]
---
0xfe DUP1
0xff DUP3
0x100 ADD
0x101 MLOAD
0x102 DUP2
0x103 DUP5
0x104 ADD
0x105 MSTORE
0x106 PUSH1 0x20
0x108 DUP2
0x109 ADD
0x10a SWAP1
0x10b POP
0x10c PUSH2 0xf5
0x10f JUMP
---
0x100: V73 = ADD V68 S0
0x101: V74 = M[V73]
0x104: V75 = ADD V65 S0
0x105: M[V75] = V74
0x106: V76 = 0x20
0x109: V77 = ADD S0 0x20
0x10c: V78 = 0xf5
0x10f: JUMP 0xf5
---
Entry stack: [V11, V130, V110, V57, V57, V65, V68, V66, V66, V65, V68, S0]
Stack pops: 3
Stack additions: [S2, S1, V77]
Exit stack: [V11, V130, V110, V57, V57, V65, V68, V66, V66, V65, V68, V77]

================================

Block 0x110
[0x110:0x123]
---
Predecessors: [0xf5]
Successors: [0x124, 0x13d]
---
0x110 JUMPDEST
0x111 POP
0x112 POP
0x113 POP
0x114 POP
0x115 SWAP1
0x116 POP
0x117 SWAP1
0x118 DUP2
0x119 ADD
0x11a SWAP1
0x11b PUSH1 0x1f
0x11d AND
0x11e DUP1
0x11f ISZERO
0x120 PUSH2 0x13d
0x123 JUMPI
---
0x110: JUMPDEST 
0x119: V79 = ADD V66 V65
0x11b: V80 = 0x1f
0x11d: V81 = AND 0x1f V66
0x11f: V82 = ISZERO V81
0x120: V83 = 0x13d
0x123: JUMPI 0x13d V82
---
Entry stack: [V11, V130, V110, V57, V57, V65, V68, V66, V66, V65, V68, S0]
Stack pops: 7
Stack additions: [V79, V81]
Exit stack: [V11, V130, V110, V57, V57, V79, V81]

================================

Block 0x124
[0x124:0x13c]
---
Predecessors: [0x110]
Successors: [0x13d]
---
0x124 DUP1
0x125 DUP3
0x126 SUB
0x127 DUP1
0x128 MLOAD
0x129 PUSH1 0x1
0x12b DUP4
0x12c PUSH1 0x20
0x12e SUB
0x12f PUSH2 0x100
0x132 EXP
0x133 SUB
0x134 NOT
0x135 AND
0x136 DUP2
0x137 MSTORE
0x138 PUSH1 0x20
0x13a ADD
0x13b SWAP2
0x13c POP
---
0x126: V84 = SUB V79 V81
0x128: V85 = M[V84]
0x129: V86 = 0x1
0x12c: V87 = 0x20
0x12e: V88 = SUB 0x20 V81
0x12f: V89 = 0x100
0x132: V90 = EXP 0x100 V88
0x133: V91 = SUB V90 0x1
0x134: V92 = NOT V91
0x135: V93 = AND V92 V85
0x137: M[V84] = V93
0x138: V94 = 0x20
0x13a: V95 = ADD 0x20 V84
---
Entry stack: [V11, V130, V110, V57, V57, V79, V81]
Stack pops: 2
Stack additions: [V95, S0]
Exit stack: [V11, V130, V110, V57, V57, V95, V81]

================================

Block 0x13d
[0x13d:0x14b]
---
Predecessors: [0x110, 0x124]
Successors: []
---
0x13d JUMPDEST
0x13e POP
0x13f SWAP4
0x140 POP
0x141 POP
0x142 POP
0x143 POP
0x144 PUSH1 0x40
0x146 MLOAD
0x147 DUP1
0x148 SWAP2
0x149 SUB
0x14a SWAP1
0x14b RETURN
---
0x13d: JUMPDEST 
0x144: V96 = 0x40
0x146: V97 = M[0x40]
0x149: V98 = SUB S1 V97
0x14b: RETURN V97 V98
---
Entry stack: [V11, V130, V110, V57, V57, S1, V81]
Stack pops: 6
Stack additions: []
Exit stack: [V11]

================================

Block 0x14c
[0x14c:0x161]
---
Predecessors: [0x5c]
Successors: [0x220]
---
0x14c JUMPDEST
0x14d DUP2
0x14e PUSH1 0x0
0x150 SWAP1
0x151 DUP1
0x152 MLOAD
0x153 SWAP1
0x154 PUSH1 0x20
0x156 ADD
0x157 SWAP1
0x158 PUSH2 0x162
0x15b SWAP3
0x15c SWAP2
0x15d SWAP1
0x15e PUSH2 0x220
0x161 JUMP
---
0x14c: JUMPDEST 
0x14e: V99 = 0x0
0x152: V100 = M[V40]
0x154: V101 = 0x20
0x156: V102 = ADD 0x20 V40
0x158: V103 = 0x162
0x15e: V104 = 0x220
0x161: JUMP 0x220
---
Entry stack: [V11, 0xb5, V40, V46]
Stack pops: 2
Stack additions: [S1, S0, 0x162, 0x0, V102, V100]
Exit stack: [V11, 0xb5, V40, V46, 0x162, 0x0, V102, V100]

================================

Block 0x162
[0x162:0x16d]
---
Predecessors: [0x29c]
Successors: [0xb5]
---
0x162 JUMPDEST
0x163 POP
0x164 DUP1
0x165 PUSH1 0x1
0x167 DUP2
0x168 SWAP1
0x169 SSTORE
0x16a POP
0x16b POP
0x16c POP
0x16d JUMP
---
0x162: JUMPDEST 
0x165: V105 = 0x1
0x169: S[0x1] = V46
0x16d: JUMP 0xb5
---
Entry stack: [V11, 0xb5, V40, V46, 0x0]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x16e
[0x16e:0x175]
---
Predecessors: [0xc2]
Successors: [0x2a0]
---
0x16e JUMPDEST
0x16f PUSH2 0x176
0x172 PUSH2 0x2a0
0x175 JUMP
---
0x16e: JUMPDEST 
0x16f: V106 = 0x176
0x172: V107 = 0x2a0
0x175: JUMP 0x2a0
---
Entry stack: [V11, 0xca]
Stack pops: 0
Stack additions: [0x176]
Exit stack: [V11, 0xca, 0x176]

================================

Block 0x176
[0x176:0x1ca]
---
Predecessors: [0x2a0]
Successors: [0x1cb, 0x211]
---
0x176 JUMPDEST
0x177 PUSH1 0x0
0x179 DUP1
0x17a PUSH1 0x1
0x17c SLOAD
0x17d DUP2
0x17e DUP1
0x17f SLOAD
0x180 PUSH1 0x1
0x182 DUP2
0x183 PUSH1 0x1
0x185 AND
0x186 ISZERO
0x187 PUSH2 0x100
0x18a MUL
0x18b SUB
0x18c AND
0x18d PUSH1 0x2
0x18f SWAP1
0x190 DIV
0x191 DUP1
0x192 PUSH1 0x1f
0x194 ADD
0x195 PUSH1 0x20
0x197 DUP1
0x198 SWAP2
0x199 DIV
0x19a MUL
0x19b PUSH1 0x20
0x19d ADD
0x19e PUSH1 0x40
0x1a0 MLOAD
0x1a1 SWAP1
0x1a2 DUP2
0x1a3 ADD
0x1a4 PUSH1 0x40
0x1a6 MSTORE
0x1a7 DUP1
0x1a8 SWAP3
0x1a9 SWAP2
0x1aa SWAP1
0x1ab DUP2
0x1ac DUP2
0x1ad MSTORE
0x1ae PUSH1 0x20
0x1b0 ADD
0x1b1 DUP3
0x1b2 DUP1
0x1b3 SLOAD
0x1b4 PUSH1 0x1
0x1b6 DUP2
0x1b7 PUSH1 0x1
0x1b9 AND
0x1ba ISZERO
0x1bb PUSH2 0x100
0x1be MUL
0x1bf SUB
0x1c0 AND
0x1c1 PUSH1 0x2
0x1c3 SWAP1
0x1c4 DIV
0x1c5 DUP1
0x1c6 ISZERO
0x1c7 PUSH2 0x211
0x1ca JUMPI
---
0x176: JUMPDEST 
0x177: V108 = 0x0
0x17a: V109 = 0x1
0x17c: V110 = S[0x1]
0x17f: V111 = S[0x0]
0x180: V112 = 0x1
0x183: V113 = 0x1
0x185: V114 = AND 0x1 V111
0x186: V115 = ISZERO V114
0x187: V116 = 0x100
0x18a: V117 = MUL 0x100 V115
0x18b: V118 = SUB V117 0x1
0x18c: V119 = AND V118 V111
0x18d: V120 = 0x2
0x190: V121 = DIV V119 0x2
0x192: V122 = 0x1f
0x194: V123 = ADD 0x1f V121
0x195: V124 = 0x20
0x199: V125 = DIV V123 0x20
0x19a: V126 = MUL V125 0x20
0x19b: V127 = 0x20
0x19d: V128 = ADD 0x20 V126
0x19e: V129 = 0x40
0x1a0: V130 = M[0x40]
0x1a3: V131 = ADD V130 V128
0x1a4: V132 = 0x40
0x1a6: M[0x40] = V131
0x1ad: M[V130] = V121
0x1ae: V133 = 0x20
0x1b0: V134 = ADD 0x20 V130
0x1b3: V135 = S[0x0]
0x1b4: V136 = 0x1
0x1b7: V137 = 0x1
0x1b9: V138 = AND 0x1 V135
0x1ba: V139 = ISZERO V138
0x1bb: V140 = 0x100
0x1be: V141 = MUL 0x100 V139
0x1bf: V142 = SUB V141 0x1
0x1c0: V143 = AND V142 V135
0x1c1: V144 = 0x2
0x1c4: V145 = DIV V143 0x2
0x1c6: V146 = ISZERO V145
0x1c7: V147 = 0x211
0x1ca: JUMPI 0x211 V146
---
Entry stack: [V11, 0xca, V223]
Stack pops: 0
Stack additions: [0x0, 0x0, V110, V130, 0x0, V121, V134, 0x0, V145]
Exit stack: [V11, 0xca, V223, 0x0, 0x0, V110, V130, 0x0, V121, V134, 0x0, V145]

================================

Block 0x1cb
[0x1cb:0x1d2]
---
Predecessors: [0x176]
Successors: [0x1d3, 0x1e6]
---
0x1cb DUP1
0x1cc PUSH1 0x1f
0x1ce LT
0x1cf PUSH2 0x1e6
0x1d2 JUMPI
---
0x1cc: V148 = 0x1f
0x1ce: V149 = LT 0x1f V145
0x1cf: V150 = 0x1e6
0x1d2: JUMPI 0x1e6 V149
---
Entry stack: [V11, 0xca, V223, 0x0, 0x0, V110, V130, 0x0, V121, V134, 0x0, V145]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xca, V223, 0x0, 0x0, V110, V130, 0x0, V121, V134, 0x0, V145]

================================

Block 0x1d3
[0x1d3:0x1e5]
---
Predecessors: [0x1cb]
Successors: [0x211]
---
0x1d3 PUSH2 0x100
0x1d6 DUP1
0x1d7 DUP4
0x1d8 SLOAD
0x1d9 DIV
0x1da MUL
0x1db DUP4
0x1dc MSTORE
0x1dd SWAP2
0x1de PUSH1 0x20
0x1e0 ADD
0x1e1 SWAP2
0x1e2 PUSH2 0x211
0x1e5 JUMP
---
0x1d3: V151 = 0x100
0x1d8: V152 = S[0x0]
0x1d9: V153 = DIV V152 0x100
0x1da: V154 = MUL V153 0x100
0x1dc: M[V134] = V154
0x1de: V155 = 0x20
0x1e0: V156 = ADD 0x20 V134
0x1e2: V157 = 0x211
0x1e5: JUMP 0x211
---
Entry stack: [V11, 0xca, V223, 0x0, 0x0, V110, V130, 0x0, V121, V134, 0x0, V145]
Stack pops: 3
Stack additions: [V156, S1, S0]
Exit stack: [V11, 0xca, V223, 0x0, 0x0, V110, V130, 0x0, V121, V156, 0x0, V145]

================================

Block 0x1e6
[0x1e6:0x1f3]
---
Predecessors: [0x1cb]
Successors: [0x1f4]
---
0x1e6 JUMPDEST
0x1e7 DUP3
0x1e8 ADD
0x1e9 SWAP2
0x1ea SWAP1
0x1eb PUSH1 0x0
0x1ed MSTORE
0x1ee PUSH1 0x20
0x1f0 PUSH1 0x0
0x1f2 SHA3
0x1f3 SWAP1
---
0x1e6: JUMPDEST 
0x1e8: V158 = ADD V134 V145
0x1eb: V159 = 0x0
0x1ed: M[0x0] = 0x0
0x1ee: V160 = 0x20
0x1f0: V161 = 0x0
0x1f2: V162 = SHA3 0x0 0x20
---
Entry stack: [V11, 0xca, V223, 0x0, 0x0, V110, V130, 0x0, V121, V134, 0x0, V145]
Stack pops: 3
Stack additions: [V158, V162, S2]
Exit stack: [V11, 0xca, V223, 0x0, 0x0, V110, V130, 0x0, V121, V158, V162, V134]

================================

Block 0x1f4
[0x1f4:0x207]
---
Predecessors: [0x1e6, 0x1f4]
Successors: [0x1f4, 0x208]
---
0x1f4 JUMPDEST
0x1f5 DUP2
0x1f6 SLOAD
0x1f7 DUP2
0x1f8 MSTORE
0x1f9 SWAP1
0x1fa PUSH1 0x1
0x1fc ADD
0x1fd SWAP1
0x1fe PUSH1 0x20
0x200 ADD
0x201 DUP1
0x202 DUP4
0x203 GT
0x204 PUSH2 0x1f4
0x207 JUMPI
---
0x1f4: JUMPDEST 
0x1f6: V163 = S[S1]
0x1f8: M[S0] = V163
0x1fa: V164 = 0x1
0x1fc: V165 = ADD 0x1 S1
0x1fe: V166 = 0x20
0x200: V167 = ADD 0x20 S0
0x203: V168 = GT V158 V167
0x204: V169 = 0x1f4
0x207: JUMPI 0x1f4 V168
---
Entry stack: [V11, 0xca, V223, 0x0, 0x0, V110, V130, 0x0, V121, V158, S1, S0]
Stack pops: 3
Stack additions: [S2, V165, V167]
Exit stack: [V11, 0xca, V223, 0x0, 0x0, V110, V130, 0x0, V121, V158, V165, V167]

================================

Block 0x208
[0x208:0x210]
---
Predecessors: [0x1f4]
Successors: [0x211]
---
0x208 DUP3
0x209 SWAP1
0x20a SUB
0x20b PUSH1 0x1f
0x20d AND
0x20e DUP3
0x20f ADD
0x210 SWAP2
---
0x20a: V170 = SUB V167 V158
0x20b: V171 = 0x1f
0x20d: V172 = AND 0x1f V170
0x20f: V173 = ADD V158 V172
---
Entry stack: [V11, 0xca, V223, 0x0, 0x0, V110, V130, 0x0, V121, V158, V165, V167]
Stack pops: 3
Stack additions: [V173, S1, S2]
Exit stack: [V11, 0xca, V223, 0x0, 0x0, V110, V130, 0x0, V121, V173, V165, V158]

================================

Block 0x211
[0x211:0x21f]
---
Predecessors: [0x176, 0x1d3, 0x208]
Successors: [0xca]
---
0x211 JUMPDEST
0x212 POP
0x213 POP
0x214 POP
0x215 POP
0x216 POP
0x217 SWAP2
0x218 POP
0x219 SWAP2
0x21a POP
0x21b SWAP2
0x21c POP
0x21d SWAP1
0x21e SWAP2
0x21f JUMP
---
0x211: JUMPDEST 
0x21f: JUMP 0xca
---
Entry stack: [V11, 0xca, V223, 0x0, 0x0, V110, V130, 0x0, V121, S2, S1, S0]
Stack pops: 11
Stack additions: [S5, S6]
Exit stack: [V11, V130, V110]

================================

Block 0x220
[0x220:0x250]
---
Predecessors: [0x14c]
Successors: [0x251, 0x261]
---
0x220 JUMPDEST
0x221 DUP3
0x222 DUP1
0x223 SLOAD
0x224 PUSH1 0x1
0x226 DUP2
0x227 PUSH1 0x1
0x229 AND
0x22a ISZERO
0x22b PUSH2 0x100
0x22e MUL
0x22f SUB
0x230 AND
0x231 PUSH1 0x2
0x233 SWAP1
0x234 DIV
0x235 SWAP1
0x236 PUSH1 0x0
0x238 MSTORE
0x239 PUSH1 0x20
0x23b PUSH1 0x0
0x23d SHA3
0x23e SWAP1
0x23f PUSH1 0x1f
0x241 ADD
0x242 PUSH1 0x20
0x244 SWAP1
0x245 DIV
0x246 DUP2
0x247 ADD
0x248 SWAP3
0x249 DUP3
0x24a PUSH1 0x1f
0x24c LT
0x24d PUSH2 0x261
0x250 JUMPI
---
0x220: JUMPDEST 
0x223: V174 = S[0x0]
0x224: V175 = 0x1
0x227: V176 = 0x1
0x229: V177 = AND 0x1 V174
0x22a: V178 = ISZERO V177
0x22b: V179 = 0x100
0x22e: V180 = MUL 0x100 V178
0x22f: V181 = SUB V180 0x1
0x230: V182 = AND V181 V174
0x231: V183 = 0x2
0x234: V184 = DIV V182 0x2
0x236: V185 = 0x0
0x238: M[0x0] = 0x0
0x239: V186 = 0x20
0x23b: V187 = 0x0
0x23d: V188 = SHA3 0x0 0x20
0x23f: V189 = 0x1f
0x241: V190 = ADD 0x1f V184
0x242: V191 = 0x20
0x245: V192 = DIV V190 0x20
0x247: V193 = ADD V188 V192
0x24a: V194 = 0x1f
0x24c: V195 = LT 0x1f V100
0x24d: V196 = 0x261
0x250: JUMPI 0x261 V195
---
Entry stack: [V11, 0xb5, V40, V46, 0x162, 0x0, V102, V100]
Stack pops: 3
Stack additions: [S2, V193, S0, V188, S1]
Exit stack: [V11, 0xb5, V40, V46, 0x162, 0x0, V193, V100, V188, V102]

================================

Block 0x251
[0x251:0x260]
---
Predecessors: [0x220]
Successors: [0x28f]
---
0x251 DUP1
0x252 MLOAD
0x253 PUSH1 0xff
0x255 NOT
0x256 AND
0x257 DUP4
0x258 DUP1
0x259 ADD
0x25a OR
0x25b DUP6
0x25c SSTORE
0x25d PUSH2 0x28f
0x260 JUMP
---
0x252: V197 = M[V102]
0x253: V198 = 0xff
0x255: V199 = NOT 0xff
0x256: V200 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V197
0x259: V201 = ADD V100 V100
0x25a: V202 = OR V201 V200
0x25c: S[0x0] = V202
0x25d: V203 = 0x28f
0x260: JUMP 0x28f
---
Entry stack: [V11, 0xb5, V40, V46, 0x162, 0x0, V193, V100, V188, V102]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0xb5, V40, V46, 0x162, 0x0, V193, V100, V188, V102]

================================

Block 0x261
[0x261:0x26f]
---
Predecessors: [0x220]
Successors: [0x270, 0x28f]
---
0x261 JUMPDEST
0x262 DUP3
0x263 DUP1
0x264 ADD
0x265 PUSH1 0x1
0x267 ADD
0x268 DUP6
0x269 SSTORE
0x26a DUP3
0x26b ISZERO
0x26c PUSH2 0x28f
0x26f JUMPI
---
0x261: JUMPDEST 
0x264: V204 = ADD V100 V100
0x265: V205 = 0x1
0x267: V206 = ADD 0x1 V204
0x269: S[0x0] = V206
0x26b: V207 = ISZERO V100
0x26c: V208 = 0x28f
0x26f: JUMPI 0x28f V207
---
Entry stack: [V11, 0xb5, V40, V46, 0x162, 0x0, V193, V100, V188, V102]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0xb5, V40, V46, 0x162, 0x0, V193, V100, V188, V102]

================================

Block 0x270
[0x270:0x272]
---
Predecessors: [0x261]
Successors: [0x273]
---
0x270 SWAP2
0x271 DUP3
0x272 ADD
---
0x272: V209 = ADD V102 V100
---
Entry stack: [V11, 0xb5, V40, V46, 0x162, 0x0, V193, V100, V188, V102]
Stack pops: 3
Stack additions: [S0, S1, V209]
Exit stack: [V11, 0xb5, V40, V46, 0x162, 0x0, V193, V102, V188, V209]

================================

Block 0x273
[0x273:0x27b]
---
Predecessors: [0x270, 0x27c]
Successors: [0x27c, 0x28e]
---
0x273 JUMPDEST
0x274 DUP3
0x275 DUP2
0x276 GT
0x277 ISZERO
0x278 PUSH2 0x28e
0x27b JUMPI
---
0x273: JUMPDEST 
0x276: V210 = GT V209 S2
0x277: V211 = ISZERO V210
0x278: V212 = 0x28e
0x27b: JUMPI 0x28e V211
---
Entry stack: [V11, 0xb5, V40, V46, 0x162, 0x0, V193, S2, S1, V209]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0xb5, V40, V46, 0x162, 0x0, V193, S2, S1, V209]

================================

Block 0x27c
[0x27c:0x28d]
---
Predecessors: [0x273]
Successors: [0x273]
---
0x27c DUP3
0x27d MLOAD
0x27e DUP3
0x27f SSTORE
0x280 SWAP2
0x281 PUSH1 0x20
0x283 ADD
0x284 SWAP2
0x285 SWAP1
0x286 PUSH1 0x1
0x288 ADD
0x289 SWAP1
0x28a PUSH2 0x273
0x28d JUMP
---
0x27d: V213 = M[S2]
0x27f: S[S1] = V213
0x281: V214 = 0x20
0x283: V215 = ADD 0x20 S2
0x286: V216 = 0x1
0x288: V217 = ADD 0x1 S1
0x28a: V218 = 0x273
0x28d: JUMP 0x273
---
Entry stack: [V11, 0xb5, V40, V46, 0x162, 0x0, V193, S2, S1, V209]
Stack pops: 3
Stack additions: [V215, V217, S0]
Exit stack: [V11, 0xb5, V40, V46, 0x162, 0x0, V193, V215, V217, V209]

================================

Block 0x28e
[0x28e:0x28e]
---
Predecessors: [0x273]
Successors: [0x28f]
---
0x28e JUMPDEST
---
0x28e: JUMPDEST 
---
Entry stack: [V11, 0xb5, V40, V46, 0x162, 0x0, V193, S2, S1, V209]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb5, V40, V46, 0x162, 0x0, V193, S2, S1, V209]

================================

Block 0x28f
[0x28f:0x29b]
---
Predecessors: [0x251, 0x261, 0x28e]
Successors: [0x2b4]
---
0x28f JUMPDEST
0x290 POP
0x291 SWAP1
0x292 POP
0x293 PUSH2 0x29c
0x296 SWAP2
0x297 SWAP1
0x298 PUSH2 0x2b4
0x29b JUMP
---
0x28f: JUMPDEST 
0x293: V219 = 0x29c
0x298: V220 = 0x2b4
0x29b: JUMP 0x2b4
---
Entry stack: [V11, 0xb5, V40, V46, 0x162, 0x0, V193, S2, S1, S0]
Stack pops: 4
Stack additions: [0x29c, S3, S1]
Exit stack: [V11, 0xb5, V40, V46, 0x162, 0x0, 0x29c, V193, S1]

================================

Block 0x29c
[0x29c:0x29f]
---
Predecessors: [0x2d6]
Successors: [0x162]
---
0x29c JUMPDEST
0x29d POP
0x29e SWAP1
0x29f JUMP
---
0x29c: JUMPDEST 
0x29f: JUMP 0x162
---
Entry stack: [V11, 0xb5, V40, V46, 0x162, 0x0, V193]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0xb5, V40, V46, 0x0]

================================

Block 0x2a0
[0x2a0:0x2b3]
---
Predecessors: [0x16e]
Successors: [0x176]
---
0x2a0 JUMPDEST
0x2a1 PUSH1 0x20
0x2a3 PUSH1 0x40
0x2a5 MLOAD
0x2a6 SWAP1
0x2a7 DUP2
0x2a8 ADD
0x2a9 PUSH1 0x40
0x2ab MSTORE
0x2ac DUP1
0x2ad PUSH1 0x0
0x2af DUP2
0x2b0 MSTORE
0x2b1 POP
0x2b2 SWAP1
0x2b3 JUMP
---
0x2a0: JUMPDEST 
0x2a1: V221 = 0x20
0x2a3: V222 = 0x40
0x2a5: V223 = M[0x40]
0x2a8: V224 = ADD V223 0x20
0x2a9: V225 = 0x40
0x2ab: M[0x40] = V224
0x2ad: V226 = 0x0
0x2b0: M[V223] = 0x0
0x2b3: JUMP 0x176
---
Entry stack: [V11, 0xca, 0x176]
Stack pops: 1
Stack additions: [V223]
Exit stack: [V11, 0xca, V223]

================================

Block 0x2b4
[0x2b4:0x2b9]
---
Predecessors: [0x28f]
Successors: [0x2ba]
---
0x2b4 JUMPDEST
0x2b5 PUSH2 0x2d6
0x2b8 SWAP2
0x2b9 SWAP1
---
0x2b4: JUMPDEST 
0x2b5: V227 = 0x2d6
---
Entry stack: [V11, 0xb5, V40, V46, 0x162, 0x0, 0x29c, V193, S0]
Stack pops: 2
Stack additions: [0x2d6, S1, S0]
Exit stack: [V11, 0xb5, V40, V46, 0x162, 0x0, 0x29c, 0x2d6, V193, S0]

================================

Block 0x2ba
[0x2ba:0x2c2]
---
Predecessors: [0x2b4, 0x2c3]
Successors: [0x2c3, 0x2d2]
---
0x2ba JUMPDEST
0x2bb DUP1
0x2bc DUP3
0x2bd GT
0x2be ISZERO
0x2bf PUSH2 0x2d2
0x2c2 JUMPI
---
0x2ba: JUMPDEST 
0x2bd: V228 = GT V193 S0
0x2be: V229 = ISZERO V228
0x2bf: V230 = 0x2d2
0x2c2: JUMPI 0x2d2 V229
---
Entry stack: [V11, 0xb5, V40, V46, 0x162, 0x0, 0x29c, 0x2d6, V193, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0xb5, V40, V46, 0x162, 0x0, 0x29c, 0x2d6, V193, S0]

================================

Block 0x2c3
[0x2c3:0x2d1]
---
Predecessors: [0x2ba]
Successors: [0x2ba]
---
0x2c3 PUSH1 0x0
0x2c5 DUP2
0x2c6 PUSH1 0x0
0x2c8 SWAP1
0x2c9 SSTORE
0x2ca POP
0x2cb PUSH1 0x1
0x2cd ADD
0x2ce PUSH2 0x2ba
0x2d1 JUMP
---
0x2c3: V231 = 0x0
0x2c6: V232 = 0x0
0x2c9: S[S0] = 0x0
0x2cb: V233 = 0x1
0x2cd: V234 = ADD 0x1 S0
0x2ce: V235 = 0x2ba
0x2d1: JUMP 0x2ba
---
Entry stack: [V11, 0xb5, V40, V46, 0x162, 0x0, 0x29c, 0x2d6, V193, S0]
Stack pops: 1
Stack additions: [V234]
Exit stack: [V11, 0xb5, V40, V46, 0x162, 0x0, 0x29c, 0x2d6, V193, V234]

================================

Block 0x2d2
[0x2d2:0x2d5]
---
Predecessors: [0x2ba]
Successors: [0x2d6]
---
0x2d2 JUMPDEST
0x2d3 POP
0x2d4 SWAP1
0x2d5 JUMP
---
0x2d2: JUMPDEST 
0x2d5: JUMP 0x2d6
---
Entry stack: [V11, 0xb5, V40, V46, 0x162, 0x0, 0x29c, 0x2d6, V193, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0xb5, V40, V46, 0x162, 0x0, 0x29c, V193]

================================

Block 0x2d6
[0x2d6:0x2d8]
---
Predecessors: [0x2d2]
Successors: [0x29c]
---
0x2d6 JUMPDEST
0x2d7 SWAP1
0x2d8 JUMP
---
0x2d6: JUMPDEST 
0x2d8: JUMP 0x29c
---
Entry stack: [V11, 0xb5, V40, V46, 0x162, 0x0, 0x29c, V193]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0xb5, V40, V46, 0x162, 0x0, V193]

================================

Block 0x2d9
[0x2d9:0x310]
---
Predecessors: []
Successors: []
---
0x2d9 STOP
0x2da LOG1
0x2db PUSH6 0x627a7a723058
0x2e2 SHA3
0x2e3 INVALID
0x2e4 LOG1
0x2e5 PUSH13 0xa0007242a084454007c37ac41d
0x2f3 MISSING 0x48
0x2f4 MOD
0x2f5 SWAP7
0x2f6 CALLDATACOPY
0x2f7 MISSING 0xb8
0x2f8 DUP6
0x2f9 MISSING 0xdc
0x2fa MISSING 0x2d
0x2fb MISSING 0xc6
0x2fc MISSING 0xe3
0x2fd MOD
0x2fe PUSH18 0xe6ac7cda0029
---
0x2d9: STOP 
0x2da: LOG S0 S1 S2
0x2db: V236 = 0x627a7a723058
0x2e2: V237 = SHA3 0x627a7a723058 S3
0x2e3: INVALID 
0x2e4: LOG S0 S1 S2
0x2e5: V238 = 0xa0007242a084454007c37ac41d
0x2f3: MISSING 0x48
0x2f4: V239 = MOD S0 S1
0x2f6: CALLDATACOPY S8 S2 S3
0x2f7: MISSING 0xb8
0x2f9: MISSING 0xdc
0x2fa: MISSING 0x2d
0x2fb: MISSING 0xc6
0x2fc: MISSING 0xe3
0x2fd: V240 = MOD S0 S1
0x2fe: V241 = 0xe6ac7cda0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V237, 0xa0007242a084454007c37ac41d, S4, S5, S6, S7, V239, S5, S0, S1, S2, S3, S4, S5, 0xe6ac7cda0029, V240]
Exit stack: []

================================

Function 0:
Public function signature: 0x22faf03a
Entry block: 0x51
Exit block: 0xb5
Body: 0x51, 0x58, 0x5c, 0xb5, 0x14c, 0x162, 0x220, 0x251, 0x261, 0x270, 0x273, 0x27c, 0x28e, 0x28f, 0x29c, 0x2b4, 0x2ba, 0x2c3, 0x2d2, 0x2d6

Function 1:
Public function signature: 0x3c1b81a5
Entry block: 0xb7
Exit block: 0x13d
Body: 0xb7, 0xbe, 0xc2, 0xca, 0xf5, 0xfe, 0x110, 0x124, 0x13d, 0x16e, 0x176, 0x1cb, 0x1d3, 0x1e6, 0x1f4, 0x208, 0x211, 0x2a0

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

