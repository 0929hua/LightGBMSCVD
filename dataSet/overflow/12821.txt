Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x5c]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x3ccfd60b
0x3c EQ
0x3d PUSH2 0x5c
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x3ccfd60b
0x3c: V13 = EQ 0x3ccfd60b V11
0x3d: V14 = 0x5c
0x40: JUMPI 0x5c V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x73]
---
0x41 DUP1
0x42 PUSH4 0x3db8493a
0x47 EQ
0x48 PUSH2 0x73
0x4b JUMPI
---
0x42: V15 = 0x3db8493a
0x47: V16 = EQ 0x3db8493a V11
0x48: V17 = 0x73
0x4b: JUMPI 0x73 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x12c]
---
0x4c DUP1
0x4d PUSH4 0x8da5cb5b
0x52 EQ
0x53 PUSH2 0x12c
0x56 JUMPI
---
0x4d: V18 = 0x8da5cb5b
0x52: V19 = EQ 0x8da5cb5b V11
0x53: V20 = 0x12c
0x56: JUMPI 0x12c V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x5b]
---
Predecessors: [0x0, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x57: JUMPDEST 
0x58: V21 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0x63]
---
Predecessors: [0xd]
Successors: [0x64, 0x68]
---
0x5c JUMPDEST
0x5d CALLVALUE
0x5e DUP1
0x5f ISZERO
0x60 PUSH2 0x68
0x63 JUMPI
---
0x5c: JUMPDEST 
0x5d: V22 = CALLVALUE
0x5f: V23 = ISZERO V22
0x60: V24 = 0x68
0x63: JUMPI 0x68 V23
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V22]
Exit stack: [V11, V22]

================================

Block 0x64
[0x64:0x67]
---
Predecessors: [0x5c]
Successors: []
---
0x64 PUSH1 0x0
0x66 DUP1
0x67 REVERT
---
0x64: V25 = 0x0
0x67: REVERT 0x0 0x0
---
Entry stack: [V11, V22]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V22]

================================

Block 0x68
[0x68:0x70]
---
Predecessors: [0x5c]
Successors: [0x183]
---
0x68 JUMPDEST
0x69 POP
0x6a PUSH2 0x71
0x6d PUSH2 0x183
0x70 JUMP
---
0x68: JUMPDEST 
0x6a: V26 = 0x71
0x6d: V27 = 0x183
0x70: JUMP 0x183
---
Entry stack: [V11, V22]
Stack pops: 1
Stack additions: [0x71]
Exit stack: [V11, 0x71]

================================

Block 0x71
[0x71:0x72]
---
Predecessors: [0x25c]
Successors: []
---
0x71 JUMPDEST
0x72 STOP
---
0x71: JUMPDEST 
0x72: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x73
[0x73:0x7a]
---
Predecessors: [0x41]
Successors: [0x7b, 0x7f]
---
0x73 JUMPDEST
0x74 CALLVALUE
0x75 DUP1
0x76 ISZERO
0x77 PUSH2 0x7f
0x7a JUMPI
---
0x73: JUMPDEST 
0x74: V28 = CALLVALUE
0x76: V29 = ISZERO V28
0x77: V30 = 0x7f
0x7a: JUMPI 0x7f V29
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V28]
Exit stack: [V11, V28]

================================

Block 0x7b
[0x7b:0x7e]
---
Predecessors: [0x73]
Successors: []
---
0x7b PUSH1 0x0
0x7d DUP1
0x7e REVERT
---
0x7b: V31 = 0x0
0x7e: REVERT 0x0 0x0
---
Entry stack: [V11, V28]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V28]

================================

Block 0x7f
[0x7f:0x129]
---
Predecessors: [0x73]
Successors: [0x25f]
---
0x7f JUMPDEST
0x80 POP
0x81 PUSH2 0x12a
0x84 PUSH1 0x4
0x86 DUP1
0x87 CALLDATASIZE
0x88 SUB
0x89 DUP2
0x8a ADD
0x8b SWAP1
0x8c DUP1
0x8d DUP1
0x8e CALLDATALOAD
0x8f SWAP1
0x90 PUSH1 0x20
0x92 ADD
0x93 SWAP1
0x94 SWAP3
0x95 SWAP2
0x96 SWAP1
0x97 DUP1
0x98 CALLDATALOAD
0x99 SWAP1
0x9a PUSH1 0x20
0x9c ADD
0x9d SWAP1
0x9e DUP3
0x9f ADD
0xa0 DUP1
0xa1 CALLDATALOAD
0xa2 SWAP1
0xa3 PUSH1 0x20
0xa5 ADD
0xa6 SWAP1
0xa7 DUP1
0xa8 DUP1
0xa9 PUSH1 0x1f
0xab ADD
0xac PUSH1 0x20
0xae DUP1
0xaf SWAP2
0xb0 DIV
0xb1 MUL
0xb2 PUSH1 0x20
0xb4 ADD
0xb5 PUSH1 0x40
0xb7 MLOAD
0xb8 SWAP1
0xb9 DUP2
0xba ADD
0xbb PUSH1 0x40
0xbd MSTORE
0xbe DUP1
0xbf SWAP4
0xc0 SWAP3
0xc1 SWAP2
0xc2 SWAP1
0xc3 DUP2
0xc4 DUP2
0xc5 MSTORE
0xc6 PUSH1 0x20
0xc8 ADD
0xc9 DUP4
0xca DUP4
0xcb DUP1
0xcc DUP3
0xcd DUP5
0xce CALLDATACOPY
0xcf DUP3
0xd0 ADD
0xd1 SWAP2
0xd2 POP
0xd3 POP
0xd4 POP
0xd5 POP
0xd6 POP
0xd7 POP
0xd8 SWAP2
0xd9 SWAP3
0xda SWAP2
0xdb SWAP3
0xdc SWAP1
0xdd DUP1
0xde CALLDATALOAD
0xdf SWAP1
0xe0 PUSH1 0x20
0xe2 ADD
0xe3 SWAP1
0xe4 DUP3
0xe5 ADD
0xe6 DUP1
0xe7 CALLDATALOAD
0xe8 SWAP1
0xe9 PUSH1 0x20
0xeb ADD
0xec SWAP1
0xed DUP1
0xee DUP1
0xef PUSH1 0x1f
0xf1 ADD
0xf2 PUSH1 0x20
0xf4 DUP1
0xf5 SWAP2
0xf6 DIV
0xf7 MUL
0xf8 PUSH1 0x20
0xfa ADD
0xfb PUSH1 0x40
0xfd MLOAD
0xfe SWAP1
0xff DUP2
0x100 ADD
0x101 PUSH1 0x40
0x103 MSTORE
0x104 DUP1
0x105 SWAP4
0x106 SWAP3
0x107 SWAP2
0x108 SWAP1
0x109 DUP2
0x10a DUP2
0x10b MSTORE
0x10c PUSH1 0x20
0x10e ADD
0x10f DUP4
0x110 DUP4
0x111 DUP1
0x112 DUP3
0x113 DUP5
0x114 CALLDATACOPY
0x115 DUP3
0x116 ADD
0x117 SWAP2
0x118 POP
0x119 POP
0x11a POP
0x11b POP
0x11c POP
0x11d POP
0x11e SWAP2
0x11f SWAP3
0x120 SWAP2
0x121 SWAP3
0x122 SWAP1
0x123 POP
0x124 POP
0x125 POP
0x126 PUSH2 0x25f
0x129 JUMP
---
0x7f: JUMPDEST 
0x81: V32 = 0x12a
0x84: V33 = 0x4
0x87: V34 = CALLDATASIZE
0x88: V35 = SUB V34 0x4
0x8a: V36 = ADD 0x4 V35
0x8e: V37 = CALLDATALOAD 0x4
0x90: V38 = 0x20
0x92: V39 = ADD 0x20 0x4
0x98: V40 = CALLDATALOAD 0x24
0x9a: V41 = 0x20
0x9c: V42 = ADD 0x20 0x24
0x9f: V43 = ADD 0x4 V40
0xa1: V44 = CALLDATALOAD V43
0xa3: V45 = 0x20
0xa5: V46 = ADD 0x20 V43
0xa9: V47 = 0x1f
0xab: V48 = ADD 0x1f V44
0xac: V49 = 0x20
0xb0: V50 = DIV V48 0x20
0xb1: V51 = MUL V50 0x20
0xb2: V52 = 0x20
0xb4: V53 = ADD 0x20 V51
0xb5: V54 = 0x40
0xb7: V55 = M[0x40]
0xba: V56 = ADD V55 V53
0xbb: V57 = 0x40
0xbd: M[0x40] = V56
0xc5: M[V55] = V44
0xc6: V58 = 0x20
0xc8: V59 = ADD 0x20 V55
0xce: CALLDATACOPY V59 V46 V44
0xd0: V60 = ADD V59 V44
0xde: V61 = CALLDATALOAD 0x44
0xe0: V62 = 0x20
0xe2: V63 = ADD 0x20 0x44
0xe5: V64 = ADD 0x4 V61
0xe7: V65 = CALLDATALOAD V64
0xe9: V66 = 0x20
0xeb: V67 = ADD 0x20 V64
0xef: V68 = 0x1f
0xf1: V69 = ADD 0x1f V65
0xf2: V70 = 0x20
0xf6: V71 = DIV V69 0x20
0xf7: V72 = MUL V71 0x20
0xf8: V73 = 0x20
0xfa: V74 = ADD 0x20 V72
0xfb: V75 = 0x40
0xfd: V76 = M[0x40]
0x100: V77 = ADD V76 V74
0x101: V78 = 0x40
0x103: M[0x40] = V77
0x10b: M[V76] = V65
0x10c: V79 = 0x20
0x10e: V80 = ADD 0x20 V76
0x114: CALLDATACOPY V80 V67 V65
0x116: V81 = ADD V80 V65
0x126: V82 = 0x25f
0x129: JUMP 0x25f
---
Entry stack: [V11, V28]
Stack pops: 1
Stack additions: [0x12a, V37, V55, V76]
Exit stack: [V11, 0x12a, V37, V55, V76]

================================

Block 0x12a
[0x12a:0x12b]
---
Predecessors: [0x2fc]
Successors: []
---
0x12a JUMPDEST
0x12b STOP
---
0x12a: JUMPDEST 
0x12b: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x12c
[0x12c:0x133]
---
Predecessors: [0x4c]
Successors: [0x134, 0x138]
---
0x12c JUMPDEST
0x12d CALLVALUE
0x12e DUP1
0x12f ISZERO
0x130 PUSH2 0x138
0x133 JUMPI
---
0x12c: JUMPDEST 
0x12d: V83 = CALLVALUE
0x12f: V84 = ISZERO V83
0x130: V85 = 0x138
0x133: JUMPI 0x138 V84
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V83]
Exit stack: [V11, V83]

================================

Block 0x134
[0x134:0x137]
---
Predecessors: [0x12c]
Successors: []
---
0x134 PUSH1 0x0
0x136 DUP1
0x137 REVERT
---
0x134: V86 = 0x0
0x137: REVERT 0x0 0x0
---
Entry stack: [V11, V83]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V83]

================================

Block 0x138
[0x138:0x140]
---
Predecessors: [0x12c]
Successors: [0x35f]
---
0x138 JUMPDEST
0x139 POP
0x13a PUSH2 0x141
0x13d PUSH2 0x35f
0x140 JUMP
---
0x138: JUMPDEST 
0x13a: V87 = 0x141
0x13d: V88 = 0x35f
0x140: JUMP 0x35f
---
Entry stack: [V11, V83]
Stack pops: 1
Stack additions: [0x141]
Exit stack: [V11, 0x141]

================================

Block 0x141
[0x141:0x182]
---
Predecessors: [0x35f]
Successors: []
---
0x141 JUMPDEST
0x142 PUSH1 0x40
0x144 MLOAD
0x145 DUP1
0x146 DUP3
0x147 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15c AND
0x15d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x172 AND
0x173 DUP2
0x174 MSTORE
0x175 PUSH1 0x20
0x177 ADD
0x178 SWAP2
0x179 POP
0x17a POP
0x17b PUSH1 0x40
0x17d MLOAD
0x17e DUP1
0x17f SWAP2
0x180 SUB
0x181 SWAP1
0x182 RETURN
---
0x141: JUMPDEST 
0x142: V89 = 0x40
0x144: V90 = M[0x40]
0x147: V91 = 0xffffffffffffffffffffffffffffffffffffffff
0x15c: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff V235
0x15d: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x172: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x174: M[V90] = V94
0x175: V95 = 0x20
0x177: V96 = ADD 0x20 V90
0x17b: V97 = 0x40
0x17d: V98 = M[0x40]
0x180: V99 = SUB V96 V98
0x182: RETURN V98 V99
---
Entry stack: [V11, 0x141, V235]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x141]

================================

Block 0x183
[0x183:0x1d9]
---
Predecessors: [0x68]
Successors: [0x1da, 0x1de]
---
0x183 JUMPDEST
0x184 PUSH1 0x0
0x186 DUP1
0x187 SWAP1
0x188 SLOAD
0x189 SWAP1
0x18a PUSH2 0x100
0x18d EXP
0x18e SWAP1
0x18f DIV
0x190 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a5 AND
0x1a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1bb AND
0x1bc CALLER
0x1bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d2 AND
0x1d3 EQ
0x1d4 ISZERO
0x1d5 ISZERO
0x1d6 PUSH2 0x1de
0x1d9 JUMPI
---
0x183: JUMPDEST 
0x184: V100 = 0x0
0x188: V101 = S[0x0]
0x18a: V102 = 0x100
0x18d: V103 = EXP 0x100 0x0
0x18f: V104 = DIV V101 0x1
0x190: V105 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a5: V106 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x1a6: V107 = 0xffffffffffffffffffffffffffffffffffffffff
0x1bb: V108 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x1bc: V109 = CALLER
0x1bd: V110 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d2: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x1d3: V112 = EQ V111 V108
0x1d4: V113 = ISZERO V112
0x1d5: V114 = ISZERO V113
0x1d6: V115 = 0x1de
0x1d9: JUMPI 0x1de V114
---
Entry stack: [V11, 0x71]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x71]

================================

Block 0x1da
[0x1da:0x1dd]
---
Predecessors: [0x183]
Successors: []
---
0x1da PUSH1 0x0
0x1dc DUP1
0x1dd REVERT
---
0x1da: V116 = 0x0
0x1dd: REVERT 0x0 0x0
---
Entry stack: [V11, 0x71]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x71]

================================

Block 0x1de
[0x1de:0x252]
---
Predecessors: [0x183]
Successors: [0x253, 0x25c]
---
0x1de JUMPDEST
0x1df PUSH1 0x0
0x1e1 DUP1
0x1e2 SWAP1
0x1e3 SLOAD
0x1e4 SWAP1
0x1e5 PUSH2 0x100
0x1e8 EXP
0x1e9 SWAP1
0x1ea DIV
0x1eb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x200 AND
0x201 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x216 AND
0x217 PUSH2 0x8fc
0x21a ADDRESS
0x21b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x230 AND
0x231 BALANCE
0x232 SWAP1
0x233 DUP2
0x234 ISZERO
0x235 MUL
0x236 SWAP1
0x237 PUSH1 0x40
0x239 MLOAD
0x23a PUSH1 0x0
0x23c PUSH1 0x40
0x23e MLOAD
0x23f DUP1
0x240 DUP4
0x241 SUB
0x242 DUP2
0x243 DUP6
0x244 DUP9
0x245 DUP9
0x246 CALL
0x247 SWAP4
0x248 POP
0x249 POP
0x24a POP
0x24b POP
0x24c ISZERO
0x24d DUP1
0x24e ISZERO
0x24f PUSH2 0x25c
0x252 JUMPI
---
0x1de: JUMPDEST 
0x1df: V117 = 0x0
0x1e3: V118 = S[0x0]
0x1e5: V119 = 0x100
0x1e8: V120 = EXP 0x100 0x0
0x1ea: V121 = DIV V118 0x1
0x1eb: V122 = 0xffffffffffffffffffffffffffffffffffffffff
0x200: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x201: V124 = 0xffffffffffffffffffffffffffffffffffffffff
0x216: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V123
0x217: V126 = 0x8fc
0x21a: V127 = ADDRESS
0x21b: V128 = 0xffffffffffffffffffffffffffffffffffffffff
0x230: V129 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x231: V130 = BALANCE V129
0x234: V131 = ISZERO V130
0x235: V132 = MUL V131 0x8fc
0x237: V133 = 0x40
0x239: V134 = M[0x40]
0x23a: V135 = 0x0
0x23c: V136 = 0x40
0x23e: V137 = M[0x40]
0x241: V138 = SUB V134 V137
0x246: V139 = CALL V132 V125 V130 V137 V138 V137 0x0
0x24c: V140 = ISZERO V139
0x24e: V141 = ISZERO V140
0x24f: V142 = 0x25c
0x252: JUMPI 0x25c V141
---
Entry stack: [V11, 0x71]
Stack pops: 0
Stack additions: [V140]
Exit stack: [V11, 0x71, V140]

================================

Block 0x253
[0x253:0x25b]
---
Predecessors: [0x1de]
Successors: []
---
0x253 RETURNDATASIZE
0x254 PUSH1 0x0
0x256 DUP1
0x257 RETURNDATACOPY
0x258 RETURNDATASIZE
0x259 PUSH1 0x0
0x25b REVERT
---
0x253: V143 = RETURNDATASIZE
0x254: V144 = 0x0
0x257: RETURNDATACOPY 0x0 0x0 V143
0x258: V145 = RETURNDATASIZE
0x259: V146 = 0x0
0x25b: REVERT 0x0 V145
---
Entry stack: [V11, 0x71, V140]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x71, V140]

================================

Block 0x25c
[0x25c:0x25e]
---
Predecessors: [0x1de]
Successors: [0x71]
---
0x25c JUMPDEST
0x25d POP
0x25e JUMP
---
0x25c: JUMPDEST 
0x25e: JUMP 0x71
---
Entry stack: [V11, 0x71, V140]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x25f
[0x25f:0x26f]
---
Predecessors: [0x7f]
Successors: [0x270]
---
0x25f JUMPDEST
0x260 DUP1
0x261 PUSH1 0x40
0x263 MLOAD
0x264 DUP1
0x265 DUP3
0x266 DUP1
0x267 MLOAD
0x268 SWAP1
0x269 PUSH1 0x20
0x26b ADD
0x26c SWAP1
0x26d DUP1
0x26e DUP4
0x26f DUP4
---
0x25f: JUMPDEST 
0x261: V147 = 0x40
0x263: V148 = M[0x40]
0x267: V149 = M[V76]
0x269: V150 = 0x20
0x26b: V151 = ADD 0x20 V76
---
Entry stack: [V11, 0x12a, V37, V55, V76]
Stack pops: 1
Stack additions: [S0, S0, V148, V148, V151, V149, V149, V148, V151]
Exit stack: [V11, 0x12a, V37, V55, V76, V76, V148, V148, V151, V149, V149, V148, V151]

================================

Block 0x270
[0x270:0x27a]
---
Predecessors: [0x25f, 0x27b]
Successors: [0x27b, 0x295]
---
0x270 JUMPDEST
0x271 PUSH1 0x20
0x273 DUP4
0x274 LT
0x275 ISZERO
0x276 ISZERO
0x277 PUSH2 0x295
0x27a JUMPI
---
0x270: JUMPDEST 
0x271: V152 = 0x20
0x274: V153 = LT S2 0x20
0x275: V154 = ISZERO V153
0x276: V155 = ISZERO V154
0x277: V156 = 0x295
0x27a: JUMPI 0x295 V155
---
Entry stack: [V11, 0x12a, V37, V55, V76, V76, V148, V148, V151, V149, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x12a, V37, V55, V76, V76, V148, V148, V151, V149, S2, S1, S0]

================================

Block 0x27b
[0x27b:0x294]
---
Predecessors: [0x270]
Successors: [0x270]
---
0x27b DUP1
0x27c MLOAD
0x27d DUP3
0x27e MSTORE
0x27f PUSH1 0x20
0x281 DUP3
0x282 ADD
0x283 SWAP2
0x284 POP
0x285 PUSH1 0x20
0x287 DUP2
0x288 ADD
0x289 SWAP1
0x28a POP
0x28b PUSH1 0x20
0x28d DUP4
0x28e SUB
0x28f SWAP3
0x290 POP
0x291 PUSH2 0x270
0x294 JUMP
---
0x27c: V157 = M[S0]
0x27e: M[S1] = V157
0x27f: V158 = 0x20
0x282: V159 = ADD S1 0x20
0x285: V160 = 0x20
0x288: V161 = ADD S0 0x20
0x28b: V162 = 0x20
0x28e: V163 = SUB S2 0x20
0x291: V164 = 0x270
0x294: JUMP 0x270
---
Entry stack: [V11, 0x12a, V37, V55, V76, V76, V148, V148, V151, V149, S2, S1, S0]
Stack pops: 3
Stack additions: [V163, V159, V161]
Exit stack: [V11, 0x12a, V37, V55, V76, V76, V148, V148, V151, V149, V163, V159, V161]

================================

Block 0x295
[0x295:0x2d6]
---
Predecessors: [0x270]
Successors: [0x2d7]
---
0x295 JUMPDEST
0x296 PUSH1 0x1
0x298 DUP4
0x299 PUSH1 0x20
0x29b SUB
0x29c PUSH2 0x100
0x29f EXP
0x2a0 SUB
0x2a1 DUP1
0x2a2 NOT
0x2a3 DUP3
0x2a4 MLOAD
0x2a5 AND
0x2a6 DUP2
0x2a7 DUP5
0x2a8 MLOAD
0x2a9 AND
0x2aa DUP1
0x2ab DUP3
0x2ac OR
0x2ad DUP6
0x2ae MSTORE
0x2af POP
0x2b0 POP
0x2b1 POP
0x2b2 POP
0x2b3 POP
0x2b4 POP
0x2b5 SWAP1
0x2b6 POP
0x2b7 ADD
0x2b8 SWAP2
0x2b9 POP
0x2ba POP
0x2bb PUSH1 0x40
0x2bd MLOAD
0x2be DUP1
0x2bf SWAP2
0x2c0 SUB
0x2c1 SWAP1
0x2c2 SHA3
0x2c3 PUSH1 0x0
0x2c5 NOT
0x2c6 AND
0x2c7 DUP3
0x2c8 PUSH1 0x40
0x2ca MLOAD
0x2cb DUP1
0x2cc DUP3
0x2cd DUP1
0x2ce MLOAD
0x2cf SWAP1
0x2d0 PUSH1 0x20
0x2d2 ADD
0x2d3 SWAP1
0x2d4 DUP1
0x2d5 DUP4
0x2d6 DUP4
---
0x295: JUMPDEST 
0x296: V165 = 0x1
0x299: V166 = 0x20
0x29b: V167 = SUB 0x20 S2
0x29c: V168 = 0x100
0x29f: V169 = EXP 0x100 V167
0x2a0: V170 = SUB V169 0x1
0x2a2: V171 = NOT V170
0x2a4: V172 = M[S0]
0x2a5: V173 = AND V172 V171
0x2a8: V174 = M[S1]
0x2a9: V175 = AND V174 V170
0x2ac: V176 = OR V173 V175
0x2ae: M[S1] = V176
0x2b7: V177 = ADD V149 V148
0x2bb: V178 = 0x40
0x2bd: V179 = M[0x40]
0x2c0: V180 = SUB V177 V179
0x2c2: V181 = SHA3 V179 V180
0x2c3: V182 = 0x0
0x2c5: V183 = NOT 0x0
0x2c6: V184 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V181
0x2c8: V185 = 0x40
0x2ca: V186 = M[0x40]
0x2ce: V187 = M[V55]
0x2d0: V188 = 0x20
0x2d2: V189 = ADD 0x20 V55
---
Entry stack: [V11, 0x12a, V37, V55, V76, V76, V148, V148, V151, V149, S2, S1, S0]
Stack pops: 10
Stack additions: [S9, S8, V184, S9, V186, V186, V189, V187, V187, V186, V189]
Exit stack: [V11, 0x12a, V37, V55, V76, V184, V55, V186, V186, V189, V187, V187, V186, V189]

================================

Block 0x2d7
[0x2d7:0x2e1]
---
Predecessors: [0x295, 0x2e2]
Successors: [0x2e2, 0x2fc]
---
0x2d7 JUMPDEST
0x2d8 PUSH1 0x20
0x2da DUP4
0x2db LT
0x2dc ISZERO
0x2dd ISZERO
0x2de PUSH2 0x2fc
0x2e1 JUMPI
---
0x2d7: JUMPDEST 
0x2d8: V190 = 0x20
0x2db: V191 = LT S2 0x20
0x2dc: V192 = ISZERO V191
0x2dd: V193 = ISZERO V192
0x2de: V194 = 0x2fc
0x2e1: JUMPI 0x2fc V193
---
Entry stack: [V11, 0x12a, V37, V55, V76, V184, V55, V186, V186, V189, V187, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x12a, V37, V55, V76, V184, V55, V186, V186, V189, V187, S2, S1, S0]

================================

Block 0x2e2
[0x2e2:0x2fb]
---
Predecessors: [0x2d7]
Successors: [0x2d7]
---
0x2e2 DUP1
0x2e3 MLOAD
0x2e4 DUP3
0x2e5 MSTORE
0x2e6 PUSH1 0x20
0x2e8 DUP3
0x2e9 ADD
0x2ea SWAP2
0x2eb POP
0x2ec PUSH1 0x20
0x2ee DUP2
0x2ef ADD
0x2f0 SWAP1
0x2f1 POP
0x2f2 PUSH1 0x20
0x2f4 DUP4
0x2f5 SUB
0x2f6 SWAP3
0x2f7 POP
0x2f8 PUSH2 0x2d7
0x2fb JUMP
---
0x2e3: V195 = M[S0]
0x2e5: M[S1] = V195
0x2e6: V196 = 0x20
0x2e9: V197 = ADD S1 0x20
0x2ec: V198 = 0x20
0x2ef: V199 = ADD S0 0x20
0x2f2: V200 = 0x20
0x2f5: V201 = SUB S2 0x20
0x2f8: V202 = 0x2d7
0x2fb: JUMP 0x2d7
---
Entry stack: [V11, 0x12a, V37, V55, V76, V184, V55, V186, V186, V189, V187, S2, S1, S0]
Stack pops: 3
Stack additions: [V201, V197, V199]
Exit stack: [V11, 0x12a, V37, V55, V76, V184, V55, V186, V186, V189, V187, V201, V197, V199]

================================

Block 0x2fc
[0x2fc:0x35e]
---
Predecessors: [0x2d7]
Successors: [0x12a]
---
0x2fc JUMPDEST
0x2fd PUSH1 0x1
0x2ff DUP4
0x300 PUSH1 0x20
0x302 SUB
0x303 PUSH2 0x100
0x306 EXP
0x307 SUB
0x308 DUP1
0x309 NOT
0x30a DUP3
0x30b MLOAD
0x30c AND
0x30d DUP2
0x30e DUP5
0x30f MLOAD
0x310 AND
0x311 DUP1
0x312 DUP3
0x313 OR
0x314 DUP6
0x315 MSTORE
0x316 POP
0x317 POP
0x318 POP
0x319 POP
0x31a POP
0x31b POP
0x31c SWAP1
0x31d POP
0x31e ADD
0x31f SWAP2
0x320 POP
0x321 POP
0x322 PUSH1 0x40
0x324 MLOAD
0x325 DUP1
0x326 SWAP2
0x327 SUB
0x328 SWAP1
0x329 SHA3
0x32a PUSH1 0x0
0x32c NOT
0x32d AND
0x32e DUP5
0x32f PUSH32 0x6f759d4758a3c9ba321526ceb202bf5a406796d435060d0793e28eed0abbb506
0x350 PUSH1 0x40
0x352 MLOAD
0x353 PUSH1 0x40
0x355 MLOAD
0x356 DUP1
0x357 SWAP2
0x358 SUB
0x359 SWAP1
0x35a LOG4
0x35b POP
0x35c POP
0x35d POP
0x35e JUMP
---
0x2fc: JUMPDEST 
0x2fd: V203 = 0x1
0x300: V204 = 0x20
0x302: V205 = SUB 0x20 S2
0x303: V206 = 0x100
0x306: V207 = EXP 0x100 V205
0x307: V208 = SUB V207 0x1
0x309: V209 = NOT V208
0x30b: V210 = M[S0]
0x30c: V211 = AND V210 V209
0x30f: V212 = M[S1]
0x310: V213 = AND V212 V208
0x313: V214 = OR V211 V213
0x315: M[S1] = V214
0x31e: V215 = ADD V187 V186
0x322: V216 = 0x40
0x324: V217 = M[0x40]
0x327: V218 = SUB V215 V217
0x329: V219 = SHA3 V217 V218
0x32a: V220 = 0x0
0x32c: V221 = NOT 0x0
0x32d: V222 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V219
0x32f: V223 = 0x6f759d4758a3c9ba321526ceb202bf5a406796d435060d0793e28eed0abbb506
0x350: V224 = 0x40
0x352: V225 = M[0x40]
0x353: V226 = 0x40
0x355: V227 = M[0x40]
0x358: V228 = SUB V225 V227
0x35a: LOG V227 V228 0x6f759d4758a3c9ba321526ceb202bf5a406796d435060d0793e28eed0abbb506 V37 V222 V184
0x35e: JUMP 0x12a
---
Entry stack: [V11, 0x12a, V37, V55, V76, V184, V55, V186, V186, V189, V187, S2, S1, S0]
Stack pops: 13
Stack additions: []
Exit stack: [V11]

================================

Block 0x35f
[0x35f:0x383]
---
Predecessors: [0x138]
Successors: [0x141]
---
0x35f JUMPDEST
0x360 PUSH1 0x0
0x362 DUP1
0x363 SWAP1
0x364 SLOAD
0x365 SWAP1
0x366 PUSH2 0x100
0x369 EXP
0x36a SWAP1
0x36b DIV
0x36c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x381 AND
0x382 DUP2
0x383 JUMP
---
0x35f: JUMPDEST 
0x360: V229 = 0x0
0x364: V230 = S[0x0]
0x366: V231 = 0x100
0x369: V232 = EXP 0x100 0x0
0x36b: V233 = DIV V230 0x1
0x36c: V234 = 0xffffffffffffffffffffffffffffffffffffffff
0x381: V235 = AND 0xffffffffffffffffffffffffffffffffffffffff V233
0x383: JUMP 0x141
---
Entry stack: [V11, 0x141]
Stack pops: 1
Stack additions: [S0, V235]
Exit stack: [V11, 0x141, V235]

================================

Block 0x384
[0x384:0x3bd]
---
Predecessors: []
Successors: []
---
0x384 STOP
0x385 LOG1
0x386 PUSH6 0x627a7a723058
0x38d SHA3
0x38e MISSING 0x2d
0x38f PUSH18 0x582aa5bd4c79cfdd2059894fb6662dfc2855
0x3a2 SAR
0x3a3 PUSH26 0xad3f03667d8e2bb8faa80029
---
0x384: STOP 
0x385: LOG S0 S1 S2
0x386: V236 = 0x627a7a723058
0x38d: V237 = SHA3 0x627a7a723058 S3
0x38e: MISSING 0x2d
0x38f: V238 = 0x582aa5bd4c79cfdd2059894fb6662dfc2855
0x3a2: V239 = SAR 0x582aa5bd4c79cfdd2059894fb6662dfc2855 S0
0x3a3: V240 = 0xad3f03667d8e2bb8faa80029
---
Entry stack: []
Stack pops: 0
Stack additions: [V237, 0xad3f03667d8e2bb8faa80029, V239]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0x5c
Exit block: 0x71
Body: 0x5c, 0x64, 0x68, 0x71, 0x183, 0x1da, 0x1de, 0x253, 0x25c

Function 1:
Public function signature: 0x3db8493a
Entry block: 0x73
Exit block: 0x12a
Body: 0x73, 0x7b, 0x7f, 0x12a, 0x25f, 0x270, 0x27b, 0x295, 0x2d7, 0x2e2, 0x2fc

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0x12c
Exit block: 0x141
Body: 0x12c, 0x134, 0x138, 0x141, 0x35f

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

