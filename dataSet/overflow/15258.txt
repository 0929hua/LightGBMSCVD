Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x51]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0xf9e73764
0x3c EQ
0x3d PUSH2 0x51
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0xf9e73764
0x3c: V13 = EQ 0xf9e73764 V11
0x3d: V14 = 0x51
0x40: JUMPI 0x51 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xd3]
---
0x41 DUP1
0x42 PUSH4 0xfc0c546a
0x47 EQ
0x48 PUSH2 0xd3
0x4b JUMPI
---
0x42: V15 = 0xfc0c546a
0x47: V16 = EQ 0xfc0c546a V11
0x48: V17 = 0xd3
0x4b: JUMPI 0xd3 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x50]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d PUSH1 0x0
0x4f DUP1
0x50 REVERT
---
0x4c: JUMPDEST 
0x4d: V18 = 0x0
0x50: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x51
[0x51:0x57]
---
Predecessors: [0xd]
Successors: [0x58, 0x5c]
---
0x51 JUMPDEST
0x52 CALLVALUE
0x53 ISZERO
0x54 PUSH2 0x5c
0x57 JUMPI
---
0x51: JUMPDEST 
0x52: V19 = CALLVALUE
0x53: V20 = ISZERO V19
0x54: V21 = 0x5c
0x57: JUMPI 0x5c V20
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x58
[0x58:0x5b]
---
Predecessors: [0x51]
Successors: []
---
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x58: V22 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0xd0]
---
Predecessors: [0x51]
Successors: [0x128]
---
0x5c JUMPDEST
0x5d PUSH2 0xd1
0x60 PUSH1 0x4
0x62 DUP1
0x63 DUP1
0x64 CALLDATALOAD
0x65 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7a AND
0x7b SWAP1
0x7c PUSH1 0x20
0x7e ADD
0x7f SWAP1
0x80 SWAP2
0x81 SWAP1
0x82 DUP1
0x83 CALLDATALOAD
0x84 SWAP1
0x85 PUSH1 0x20
0x87 ADD
0x88 SWAP1
0x89 DUP3
0x8a ADD
0x8b DUP1
0x8c CALLDATALOAD
0x8d SWAP1
0x8e PUSH1 0x20
0x90 ADD
0x91 SWAP1
0x92 DUP1
0x93 DUP1
0x94 PUSH1 0x20
0x96 MUL
0x97 PUSH1 0x20
0x99 ADD
0x9a PUSH1 0x40
0x9c MLOAD
0x9d SWAP1
0x9e DUP2
0x9f ADD
0xa0 PUSH1 0x40
0xa2 MSTORE
0xa3 DUP1
0xa4 SWAP4
0xa5 SWAP3
0xa6 SWAP2
0xa7 SWAP1
0xa8 DUP2
0xa9 DUP2
0xaa MSTORE
0xab PUSH1 0x20
0xad ADD
0xae DUP4
0xaf DUP4
0xb0 PUSH1 0x20
0xb2 MUL
0xb3 DUP1
0xb4 DUP3
0xb5 DUP5
0xb6 CALLDATACOPY
0xb7 DUP3
0xb8 ADD
0xb9 SWAP2
0xba POP
0xbb POP
0xbc POP
0xbd POP
0xbe POP
0xbf POP
0xc0 SWAP2
0xc1 SWAP1
0xc2 DUP1
0xc3 CALLDATALOAD
0xc4 SWAP1
0xc5 PUSH1 0x20
0xc7 ADD
0xc8 SWAP1
0xc9 SWAP2
0xca SWAP1
0xcb POP
0xcc POP
0xcd PUSH2 0x128
0xd0 JUMP
---
0x5c: JUMPDEST 
0x5d: V23 = 0xd1
0x60: V24 = 0x4
0x64: V25 = CALLDATALOAD 0x4
0x65: V26 = 0xffffffffffffffffffffffffffffffffffffffff
0x7a: V27 = AND 0xffffffffffffffffffffffffffffffffffffffff V25
0x7c: V28 = 0x20
0x7e: V29 = ADD 0x20 0x4
0x83: V30 = CALLDATALOAD 0x24
0x85: V31 = 0x20
0x87: V32 = ADD 0x20 0x24
0x8a: V33 = ADD 0x4 V30
0x8c: V34 = CALLDATALOAD V33
0x8e: V35 = 0x20
0x90: V36 = ADD 0x20 V33
0x94: V37 = 0x20
0x96: V38 = MUL 0x20 V34
0x97: V39 = 0x20
0x99: V40 = ADD 0x20 V38
0x9a: V41 = 0x40
0x9c: V42 = M[0x40]
0x9f: V43 = ADD V42 V40
0xa0: V44 = 0x40
0xa2: M[0x40] = V43
0xaa: M[V42] = V34
0xab: V45 = 0x20
0xad: V46 = ADD 0x20 V42
0xb0: V47 = 0x20
0xb2: V48 = MUL 0x20 V34
0xb6: CALLDATACOPY V46 V36 V48
0xb8: V49 = ADD V46 V48
0xc3: V50 = CALLDATALOAD 0x44
0xc5: V51 = 0x20
0xc7: V52 = ADD 0x20 0x44
0xcd: V53 = 0x128
0xd0: JUMP 0x128
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xd1, V27, V42, V50]
Exit stack: [V11, 0xd1, V27, V42, V50]

================================

Block 0xd1
[0xd1:0xd2]
---
Predecessors: [0x2b7]
Successors: []
---
0xd1 JUMPDEST
0xd2 STOP
---
0xd1: JUMPDEST 
0xd2: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd3
[0xd3:0xd9]
---
Predecessors: [0x41]
Successors: [0xda, 0xde]
---
0xd3 JUMPDEST
0xd4 CALLVALUE
0xd5 ISZERO
0xd6 PUSH2 0xde
0xd9 JUMPI
---
0xd3: JUMPDEST 
0xd4: V54 = CALLVALUE
0xd5: V55 = ISZERO V54
0xd6: V56 = 0xde
0xd9: JUMPI 0xde V55
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xda
[0xda:0xdd]
---
Predecessors: [0xd3]
Successors: []
---
0xda PUSH1 0x0
0xdc DUP1
0xdd REVERT
---
0xda: V57 = 0x0
0xdd: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xde
[0xde:0xe5]
---
Predecessors: [0xd3]
Successors: [0x2bd]
---
0xde JUMPDEST
0xdf PUSH2 0xe6
0xe2 PUSH2 0x2bd
0xe5 JUMP
---
0xde: JUMPDEST 
0xdf: V58 = 0xe6
0xe2: V59 = 0x2bd
0xe5: JUMP 0x2bd
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe6]
Exit stack: [V11, 0xe6]

================================

Block 0xe6
[0xe6:0x127]
---
Predecessors: [0x2bd]
Successors: []
---
0xe6 JUMPDEST
0xe7 PUSH1 0x40
0xe9 MLOAD
0xea DUP1
0xeb DUP3
0xec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x101 AND
0x102 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x117 AND
0x118 DUP2
0x119 MSTORE
0x11a PUSH1 0x20
0x11c ADD
0x11d SWAP2
0x11e POP
0x11f POP
0x120 PUSH1 0x40
0x122 MLOAD
0x123 DUP1
0x124 SWAP2
0x125 SUB
0x126 SWAP1
0x127 RETURN
---
0xe6: JUMPDEST 
0xe7: V60 = 0x40
0xe9: V61 = M[0x40]
0xec: V62 = 0xffffffffffffffffffffffffffffffffffffffff
0x101: V63 = AND 0xffffffffffffffffffffffffffffffffffffffff V167
0x102: V64 = 0xffffffffffffffffffffffffffffffffffffffff
0x117: V65 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0x119: M[V61] = V65
0x11a: V66 = 0x20
0x11c: V67 = ADD 0x20 V61
0x120: V68 = 0x40
0x122: V69 = M[0x40]
0x125: V70 = SUB V67 V69
0x127: RETURN V69 V70
---
Entry stack: [V11, 0xe6, V167]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xe6]

================================

Block 0x128
[0x128:0x16d]
---
Predecessors: [0x5c]
Successors: [0x16e]
---
0x128 JUMPDEST
0x129 PUSH1 0x0
0x12b DUP1
0x12c SWAP1
0x12d POP
0x12e DUP4
0x12f PUSH1 0x0
0x131 DUP1
0x132 PUSH2 0x100
0x135 EXP
0x136 DUP2
0x137 SLOAD
0x138 DUP2
0x139 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14e MUL
0x14f NOT
0x150 AND
0x151 SWAP1
0x152 DUP4
0x153 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x168 AND
0x169 MUL
0x16a OR
0x16b SWAP1
0x16c SSTORE
0x16d POP
---
0x128: JUMPDEST 
0x129: V71 = 0x0
0x12f: V72 = 0x0
0x132: V73 = 0x100
0x135: V74 = EXP 0x100 0x0
0x137: V75 = S[0x0]
0x139: V76 = 0xffffffffffffffffffffffffffffffffffffffff
0x14e: V77 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x14f: V78 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x150: V79 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V75
0x153: V80 = 0xffffffffffffffffffffffffffffffffffffffff
0x168: V81 = AND 0xffffffffffffffffffffffffffffffffffffffff V27
0x169: V82 = MUL V81 0x1
0x16a: V83 = OR V82 V79
0x16c: S[0x0] = V83
---
Entry stack: [V11, 0xd1, V27, V42, V50]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0]
Exit stack: [V11, 0xd1, V27, V42, V50, 0x0]

================================

Block 0x16e
[0x16e:0x177]
---
Predecessors: [0x128, 0x29f]
Successors: [0x178, 0x2b7]
---
0x16e JUMPDEST
0x16f DUP3
0x170 MLOAD
0x171 DUP2
0x172 LT
0x173 ISZERO
0x174 PUSH2 0x2b7
0x177 JUMPI
---
0x16e: JUMPDEST 
0x170: V84 = M[V42]
0x172: V85 = LT S0 V84
0x173: V86 = ISZERO V85
0x174: V87 = 0x2b7
0x177: JUMPI 0x2b7 V86
---
Entry stack: [V11, 0xd1, V27, V42, V50, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0xd1, V27, V42, V50, S0]

================================

Block 0x178
[0x178:0x1c1]
---
Predecessors: [0x16e]
Successors: [0x1c2, 0x1c3]
---
0x178 PUSH1 0x0
0x17a DUP1
0x17b SWAP1
0x17c SLOAD
0x17d SWAP1
0x17e PUSH2 0x100
0x181 EXP
0x182 SWAP1
0x183 DIV
0x184 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x199 AND
0x19a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1af AND
0x1b0 PUSH4 0x23b872dd
0x1b5 CALLER
0x1b6 DUP6
0x1b7 DUP5
0x1b8 DUP2
0x1b9 MLOAD
0x1ba DUP2
0x1bb LT
0x1bc ISZERO
0x1bd ISZERO
0x1be PUSH2 0x1c3
0x1c1 JUMPI
---
0x178: V88 = 0x0
0x17c: V89 = S[0x0]
0x17e: V90 = 0x100
0x181: V91 = EXP 0x100 0x0
0x183: V92 = DIV V89 0x1
0x184: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x199: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x19a: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x1af: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x1b0: V97 = 0x23b872dd
0x1b5: V98 = CALLER
0x1b9: V99 = M[V42]
0x1bb: V100 = LT S0 V99
0x1bc: V101 = ISZERO V100
0x1bd: V102 = ISZERO V101
0x1be: V103 = 0x1c3
0x1c1: JUMPI 0x1c3 V102
---
Entry stack: [V11, 0xd1, V27, V42, V50, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V96, 0x23b872dd, V98, S2, S0]
Exit stack: [V11, 0xd1, V27, V42, V50, S0, V96, 0x23b872dd, V98, V42, S0]

================================

Block 0x1c2
[0x1c2:0x1c2]
---
Predecessors: [0x178]
Successors: []
---
0x1c2 INVALID
---
0x1c2: INVALID 
---
Entry stack: [V11, 0xd1, V27, V42, V50, S5, V96, 0x23b872dd, V98, V42, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd1, V27, V42, V50, S5, V96, 0x23b872dd, V98, V42, S0]

================================

Block 0x1c3
[0x1c3:0x289]
---
Predecessors: [0x178]
Successors: [0x28a, 0x28e]
---
0x1c3 JUMPDEST
0x1c4 SWAP1
0x1c5 PUSH1 0x20
0x1c7 ADD
0x1c8 SWAP1
0x1c9 PUSH1 0x20
0x1cb MUL
0x1cc ADD
0x1cd MLOAD
0x1ce DUP6
0x1cf PUSH1 0x0
0x1d1 PUSH1 0x40
0x1d3 MLOAD
0x1d4 PUSH1 0x20
0x1d6 ADD
0x1d7 MSTORE
0x1d8 PUSH1 0x40
0x1da MLOAD
0x1db DUP5
0x1dc PUSH4 0xffffffff
0x1e1 AND
0x1e2 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x200 MUL
0x201 DUP2
0x202 MSTORE
0x203 PUSH1 0x4
0x205 ADD
0x206 DUP1
0x207 DUP5
0x208 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21d AND
0x21e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x233 AND
0x234 DUP2
0x235 MSTORE
0x236 PUSH1 0x20
0x238 ADD
0x239 DUP4
0x23a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24f AND
0x250 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x265 AND
0x266 DUP2
0x267 MSTORE
0x268 PUSH1 0x20
0x26a ADD
0x26b DUP3
0x26c DUP2
0x26d MSTORE
0x26e PUSH1 0x20
0x270 ADD
0x271 SWAP4
0x272 POP
0x273 POP
0x274 POP
0x275 POP
0x276 PUSH1 0x20
0x278 PUSH1 0x40
0x27a MLOAD
0x27b DUP1
0x27c DUP4
0x27d SUB
0x27e DUP2
0x27f PUSH1 0x0
0x281 DUP8
0x282 DUP1
0x283 EXTCODESIZE
0x284 ISZERO
0x285 ISZERO
0x286 PUSH2 0x28e
0x289 JUMPI
---
0x1c3: JUMPDEST 
0x1c5: V104 = 0x20
0x1c7: V105 = ADD 0x20 V42
0x1c9: V106 = 0x20
0x1cb: V107 = MUL 0x20 S0
0x1cc: V108 = ADD V107 V105
0x1cd: V109 = M[V108]
0x1cf: V110 = 0x0
0x1d1: V111 = 0x40
0x1d3: V112 = M[0x40]
0x1d4: V113 = 0x20
0x1d6: V114 = ADD 0x20 V112
0x1d7: M[V114] = 0x0
0x1d8: V115 = 0x40
0x1da: V116 = M[0x40]
0x1dc: V117 = 0xffffffff
0x1e1: V118 = AND 0xffffffff 0x23b872dd
0x1e2: V119 = 0x100000000000000000000000000000000000000000000000000000000
0x200: V120 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x23b872dd
0x202: M[V116] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x203: V121 = 0x4
0x205: V122 = ADD 0x4 V116
0x208: V123 = 0xffffffffffffffffffffffffffffffffffffffff
0x21d: V124 = AND 0xffffffffffffffffffffffffffffffffffffffff V98
0x21e: V125 = 0xffffffffffffffffffffffffffffffffffffffff
0x233: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V124
0x235: M[V122] = V126
0x236: V127 = 0x20
0x238: V128 = ADD 0x20 V122
0x23a: V129 = 0xffffffffffffffffffffffffffffffffffffffff
0x24f: V130 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x250: V131 = 0xffffffffffffffffffffffffffffffffffffffff
0x265: V132 = AND 0xffffffffffffffffffffffffffffffffffffffff V130
0x267: M[V128] = V132
0x268: V133 = 0x20
0x26a: V134 = ADD 0x20 V128
0x26d: M[V134] = V50
0x26e: V135 = 0x20
0x270: V136 = ADD 0x20 V134
0x276: V137 = 0x20
0x278: V138 = 0x40
0x27a: V139 = M[0x40]
0x27d: V140 = SUB V136 V139
0x27f: V141 = 0x0
0x283: V142 = EXTCODESIZE V96
0x284: V143 = ISZERO V142
0x285: V144 = ISZERO V143
0x286: V145 = 0x28e
0x289: JUMPI 0x28e V144
---
Entry stack: [V11, 0xd1, V27, V42, V50, S5, V96, 0x23b872dd, V98, V42, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, V136, 0x20, V139, V140, V139, 0x0, S4]
Exit stack: [V11, 0xd1, V27, V42, V50, S5, V96, 0x23b872dd, V136, 0x20, V139, V140, V139, 0x0, V96]

================================

Block 0x28a
[0x28a:0x28d]
---
Predecessors: [0x1c3]
Successors: []
---
0x28a PUSH1 0x0
0x28c DUP1
0x28d REVERT
---
0x28a: V146 = 0x0
0x28d: REVERT 0x0 0x0
---
Entry stack: [V11, 0xd1, V27, V42, V50, S9, V96, 0x23b872dd, V136, 0x20, V139, V140, V139, 0x0, V96]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd1, V27, V42, V50, S9, V96, 0x23b872dd, V136, 0x20, V139, V140, V139, 0x0, V96]

================================

Block 0x28e
[0x28e:0x29a]
---
Predecessors: [0x1c3]
Successors: [0x29b, 0x29f]
---
0x28e JUMPDEST
0x28f PUSH2 0x2c6
0x292 GAS
0x293 SUB
0x294 CALL
0x295 ISZERO
0x296 ISZERO
0x297 PUSH2 0x29f
0x29a JUMPI
---
0x28e: JUMPDEST 
0x28f: V147 = 0x2c6
0x292: V148 = GAS
0x293: V149 = SUB V148 0x2c6
0x294: V150 = CALL V149 V96 0x0 V139 V140 V139 0x20
0x295: V151 = ISZERO V150
0x296: V152 = ISZERO V151
0x297: V153 = 0x29f
0x29a: JUMPI 0x29f V152
---
Entry stack: [V11, 0xd1, V27, V42, V50, S9, V96, 0x23b872dd, V136, 0x20, V139, V140, V139, 0x0, V96]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0xd1, V27, V42, V50, S9, V96, 0x23b872dd, V136]

================================

Block 0x29b
[0x29b:0x29e]
---
Predecessors: [0x28e]
Successors: []
---
0x29b PUSH1 0x0
0x29d DUP1
0x29e REVERT
---
0x29b: V154 = 0x0
0x29e: REVERT 0x0 0x0
---
Entry stack: [V11, 0xd1, V27, V42, V50, S3, V96, 0x23b872dd, V136]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd1, V27, V42, V50, S3, V96, 0x23b872dd, V136]

================================

Block 0x29f
[0x29f:0x2b6]
---
Predecessors: [0x28e]
Successors: [0x16e]
---
0x29f JUMPDEST
0x2a0 POP
0x2a1 POP
0x2a2 POP
0x2a3 PUSH1 0x40
0x2a5 MLOAD
0x2a6 DUP1
0x2a7 MLOAD
0x2a8 SWAP1
0x2a9 POP
0x2aa POP
0x2ab DUP1
0x2ac DUP1
0x2ad PUSH1 0x1
0x2af ADD
0x2b0 SWAP2
0x2b1 POP
0x2b2 POP
0x2b3 PUSH2 0x16e
0x2b6 JUMP
---
0x29f: JUMPDEST 
0x2a3: V155 = 0x40
0x2a5: V156 = M[0x40]
0x2a7: V157 = M[V156]
0x2ad: V158 = 0x1
0x2af: V159 = ADD 0x1 S3
0x2b3: V160 = 0x16e
0x2b6: JUMP 0x16e
---
Entry stack: [V11, 0xd1, V27, V42, V50, S3, V96, 0x23b872dd, V136]
Stack pops: 4
Stack additions: [V159]
Exit stack: [V11, 0xd1, V27, V42, V50, V159]

================================

Block 0x2b7
[0x2b7:0x2bc]
---
Predecessors: [0x16e]
Successors: [0xd1]
---
0x2b7 JUMPDEST
0x2b8 POP
0x2b9 POP
0x2ba POP
0x2bb POP
0x2bc JUMP
---
0x2b7: JUMPDEST 
0x2bc: JUMP 0xd1
---
Entry stack: [V11, 0xd1, V27, V42, V50, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x2bd
[0x2bd:0x2e1]
---
Predecessors: [0xde]
Successors: [0xe6]
---
0x2bd JUMPDEST
0x2be PUSH1 0x0
0x2c0 DUP1
0x2c1 SWAP1
0x2c2 SLOAD
0x2c3 SWAP1
0x2c4 PUSH2 0x100
0x2c7 EXP
0x2c8 SWAP1
0x2c9 DIV
0x2ca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2df AND
0x2e0 DUP2
0x2e1 JUMP
---
0x2bd: JUMPDEST 
0x2be: V161 = 0x0
0x2c2: V162 = S[0x0]
0x2c4: V163 = 0x100
0x2c7: V164 = EXP 0x100 0x0
0x2c9: V165 = DIV V162 0x1
0x2ca: V166 = 0xffffffffffffffffffffffffffffffffffffffff
0x2df: V167 = AND 0xffffffffffffffffffffffffffffffffffffffff V165
0x2e1: JUMP 0xe6
---
Entry stack: [V11, 0xe6]
Stack pops: 1
Stack additions: [S0, V167]
Exit stack: [V11, 0xe6, V167]

================================

Block 0x2e2
[0x2e2:0x311]
---
Predecessors: []
Successors: []
---
0x2e2 STOP
0x2e3 LOG1
0x2e4 PUSH6 0x627a7a723058
0x2eb SHA3
0x2ec SDIV
0x2ed MISSING 0xae
0x2ee MISSING 0x2f
0x2ef MISSING 0xf9
0x2f0 ISZERO
0x2f1 PUSH32 0x449cddae92edaa37d51ddfe390bdb554fa6900c3d81a24f8dbd90029
---
0x2e2: STOP 
0x2e3: LOG S0 S1 S2
0x2e4: V168 = 0x627a7a723058
0x2eb: V169 = SHA3 0x627a7a723058 S3
0x2ec: V170 = SDIV V169 S4
0x2ed: MISSING 0xae
0x2ee: MISSING 0x2f
0x2ef: MISSING 0xf9
0x2f0: V171 = ISZERO S0
0x2f1: V172 = 0x449cddae92edaa37d51ddfe390bdb554fa6900c3d81a24f8dbd90029
---
Entry stack: []
Stack pops: 0
Stack additions: [V170, 0x449cddae92edaa37d51ddfe390bdb554fa6900c3d81a24f8dbd90029, V171]
Exit stack: []

================================

Function 0:
Public function signature: 0xf9e73764
Entry block: 0x51
Exit block: 0x29b
Body: 0x51, 0x58, 0x5c, 0xd1, 0x128, 0x16e, 0x178, 0x1c2, 0x1c3, 0x28a, 0x28e, 0x29b, 0x29f, 0x2b7

Function 1:
Public function signature: 0xfc0c546a
Entry block: 0xd3
Exit block: 0xe6
Body: 0xd3, 0xda, 0xde, 0xe6, 0x2bd

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

