Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6d
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6d
0xc: JUMPI 0x6d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x77]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x1be22528
0x3c EQ
0x3d PUSH2 0x77
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x1be22528
0x3c: V13 = EQ 0x1be22528 V11
0x3d: V14 = 0x77
0x40: JUMPI 0x77 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xcc]
---
0x41 DUP1
0x42 PUSH4 0x614d85e1
0x47 EQ
0x48 PUSH2 0xcc
0x4b JUMPI
---
0x42: V15 = 0x614d85e1
0x47: V16 = EQ 0x614d85e1 V11
0x48: V17 = 0xcc
0x4b: JUMPI 0xcc V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xf5]
---
0x4c DUP1
0x4d PUSH4 0x8547af30
0x52 EQ
0x53 PUSH2 0xf5
0x56 JUMPI
---
0x4d: V18 = 0x8547af30
0x52: V19 = EQ 0x8547af30 V11
0x53: V20 = 0xf5
0x56: JUMPI 0xf5 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x14a]
---
0x57 DUP1
0x58 PUSH4 0x978bbdb9
0x5d EQ
0x5e PUSH2 0x14a
0x61 JUMPI
---
0x58: V21 = 0x978bbdb9
0x5d: V22 = EQ 0x978bbdb9 V11
0x5e: V23 = 0x14a
0x61: JUMPI 0x14a V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x173]
---
0x62 DUP1
0x63 PUSH4 0xb60d4288
0x68 EQ
0x69 PUSH2 0x173
0x6c JUMPI
---
0x63: V24 = 0xb60d4288
0x68: V25 = EQ 0xb60d4288 V11
0x69: V26 = 0x173
0x6c: JUMPI 0x173 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x74]
---
Predecessors: [0x0, 0x62]
Successors: [0x17d]
---
0x6d JUMPDEST
0x6e PUSH2 0x75
0x71 PUSH2 0x17d
0x74 JUMP
---
0x6d: JUMPDEST 
0x6e: V27 = 0x75
0x71: V28 = 0x17d
0x74: JUMP 0x17d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x75]
Exit stack: [V11, 0x75]

================================

Block 0x75
[0x75:0x76]
---
Predecessors: [0x2c8]
Successors: []
---
0x75 JUMPDEST
0x76 STOP
---
0x75: JUMPDEST 
0x76: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x77
[0x77:0x7d]
---
Predecessors: [0xd]
Successors: [0x7e, 0x82]
---
0x77 JUMPDEST
0x78 CALLVALUE
0x79 ISZERO
0x7a PUSH2 0x82
0x7d JUMPI
---
0x77: JUMPDEST 
0x78: V29 = CALLVALUE
0x79: V30 = ISZERO V29
0x7a: V31 = 0x82
0x7d: JUMPI 0x82 V30
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7e
[0x7e:0x81]
---
Predecessors: [0x77]
Successors: []
---
0x7e PUSH1 0x0
0x80 DUP1
0x81 REVERT
---
0x7e: V32 = 0x0
0x81: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x82
[0x82:0x89]
---
Predecessors: [0x77]
Successors: [0x316]
---
0x82 JUMPDEST
0x83 PUSH2 0x8a
0x86 PUSH2 0x316
0x89 JUMP
---
0x82: JUMPDEST 
0x83: V33 = 0x8a
0x86: V34 = 0x316
0x89: JUMP 0x316
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x8a]
Exit stack: [V11, 0x8a]

================================

Block 0x8a
[0x8a:0xcb]
---
Predecessors: [0x316]
Successors: []
---
0x8a JUMPDEST
0x8b PUSH1 0x40
0x8d MLOAD
0x8e DUP1
0x8f DUP3
0x90 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa5 AND
0xa6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbb AND
0xbc DUP2
0xbd MSTORE
0xbe PUSH1 0x20
0xc0 ADD
0xc1 SWAP2
0xc2 POP
0xc3 POP
0xc4 PUSH1 0x40
0xc6 MLOAD
0xc7 DUP1
0xc8 SWAP2
0xc9 SUB
0xca SWAP1
0xcb RETURN
---
0x8a: JUMPDEST 
0x8b: V35 = 0x40
0x8d: V36 = M[0x40]
0x90: V37 = 0xffffffffffffffffffffffffffffffffffffffff
0xa5: V38 = AND 0xffffffffffffffffffffffffffffffffffffffff V208
0xa6: V39 = 0xffffffffffffffffffffffffffffffffffffffff
0xbb: V40 = AND 0xffffffffffffffffffffffffffffffffffffffff V38
0xbd: M[V36] = V40
0xbe: V41 = 0x20
0xc0: V42 = ADD 0x20 V36
0xc4: V43 = 0x40
0xc6: V44 = M[0x40]
0xc9: V45 = SUB V42 V44
0xcb: RETURN V44 V45
---
Entry stack: [V11, 0x8a, V208]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x8a]

================================

Block 0xcc
[0xcc:0xd2]
---
Predecessors: [0x41]
Successors: [0xd3, 0xd7]
---
0xcc JUMPDEST
0xcd CALLVALUE
0xce ISZERO
0xcf PUSH2 0xd7
0xd2 JUMPI
---
0xcc: JUMPDEST 
0xcd: V46 = CALLVALUE
0xce: V47 = ISZERO V46
0xcf: V48 = 0xd7
0xd2: JUMPI 0xd7 V47
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd3
[0xd3:0xd6]
---
Predecessors: [0xcc]
Successors: []
---
0xd3 PUSH1 0x0
0xd5 DUP1
0xd6 REVERT
---
0xd3: V49 = 0x0
0xd6: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd7
[0xd7:0xde]
---
Predecessors: [0xcc]
Successors: [0x33c]
---
0xd7 JUMPDEST
0xd8 PUSH2 0xdf
0xdb PUSH2 0x33c
0xde JUMP
---
0xd7: JUMPDEST 
0xd8: V50 = 0xdf
0xdb: V51 = 0x33c
0xde: JUMP 0x33c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xdf]
Exit stack: [V11, 0xdf]

================================

Block 0xdf
[0xdf:0xf4]
---
Predecessors: [0x33c]
Successors: []
---
0xdf JUMPDEST
0xe0 PUSH1 0x40
0xe2 MLOAD
0xe3 DUP1
0xe4 DUP3
0xe5 DUP2
0xe6 MSTORE
0xe7 PUSH1 0x20
0xe9 ADD
0xea SWAP2
0xeb POP
0xec POP
0xed PUSH1 0x40
0xef MLOAD
0xf0 DUP1
0xf1 SWAP2
0xf2 SUB
0xf3 SWAP1
0xf4 RETURN
---
0xdf: JUMPDEST 
0xe0: V52 = 0x40
0xe2: V53 = M[0x40]
0xe6: M[V53] = V210
0xe7: V54 = 0x20
0xe9: V55 = ADD 0x20 V53
0xed: V56 = 0x40
0xef: V57 = M[0x40]
0xf2: V58 = SUB V55 V57
0xf4: RETURN V57 V58
---
Entry stack: [V11, 0xdf, V210]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xdf]

================================

Block 0xf5
[0xf5:0xfb]
---
Predecessors: [0x4c]
Successors: [0xfc, 0x100]
---
0xf5 JUMPDEST
0xf6 CALLVALUE
0xf7 ISZERO
0xf8 PUSH2 0x100
0xfb JUMPI
---
0xf5: JUMPDEST 
0xf6: V59 = CALLVALUE
0xf7: V60 = ISZERO V59
0xf8: V61 = 0x100
0xfb: JUMPI 0x100 V60
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xfc
[0xfc:0xff]
---
Predecessors: [0xf5]
Successors: []
---
0xfc PUSH1 0x0
0xfe DUP1
0xff REVERT
---
0xfc: V62 = 0x0
0xff: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x100
[0x100:0x107]
---
Predecessors: [0xf5]
Successors: [0x342]
---
0x100 JUMPDEST
0x101 PUSH2 0x108
0x104 PUSH2 0x342
0x107 JUMP
---
0x100: JUMPDEST 
0x101: V63 = 0x108
0x104: V64 = 0x342
0x107: JUMP 0x342
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x108]
Exit stack: [V11, 0x108]

================================

Block 0x108
[0x108:0x149]
---
Predecessors: [0x342]
Successors: []
---
0x108 JUMPDEST
0x109 PUSH1 0x40
0x10b MLOAD
0x10c DUP1
0x10d DUP3
0x10e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x123 AND
0x124 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x139 AND
0x13a DUP2
0x13b MSTORE
0x13c PUSH1 0x20
0x13e ADD
0x13f SWAP2
0x140 POP
0x141 POP
0x142 PUSH1 0x40
0x144 MLOAD
0x145 DUP1
0x146 SWAP2
0x147 SUB
0x148 SWAP1
0x149 RETURN
---
0x108: JUMPDEST 
0x109: V65 = 0x40
0x10b: V66 = M[0x40]
0x10e: V67 = 0xffffffffffffffffffffffffffffffffffffffff
0x123: V68 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0x124: V69 = 0xffffffffffffffffffffffffffffffffffffffff
0x139: V70 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0x13b: M[V66] = V70
0x13c: V71 = 0x20
0x13e: V72 = ADD 0x20 V66
0x142: V73 = 0x40
0x144: V74 = M[0x40]
0x147: V75 = SUB V72 V74
0x149: RETURN V74 V75
---
Entry stack: [V11, 0x108, V218]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x108]

================================

Block 0x14a
[0x14a:0x150]
---
Predecessors: [0x57]
Successors: [0x151, 0x155]
---
0x14a JUMPDEST
0x14b CALLVALUE
0x14c ISZERO
0x14d PUSH2 0x155
0x150 JUMPI
---
0x14a: JUMPDEST 
0x14b: V76 = CALLVALUE
0x14c: V77 = ISZERO V76
0x14d: V78 = 0x155
0x150: JUMPI 0x155 V77
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x151
[0x151:0x154]
---
Predecessors: [0x14a]
Successors: []
---
0x151 PUSH1 0x0
0x153 DUP1
0x154 REVERT
---
0x151: V79 = 0x0
0x154: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x155
[0x155:0x15c]
---
Predecessors: [0x14a]
Successors: [0x368]
---
0x155 JUMPDEST
0x156 PUSH2 0x15d
0x159 PUSH2 0x368
0x15c JUMP
---
0x155: JUMPDEST 
0x156: V80 = 0x15d
0x159: V81 = 0x368
0x15c: JUMP 0x368
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x15d]
Exit stack: [V11, 0x15d]

================================

Block 0x15d
[0x15d:0x172]
---
Predecessors: [0x368]
Successors: []
---
0x15d JUMPDEST
0x15e PUSH1 0x40
0x160 MLOAD
0x161 DUP1
0x162 DUP3
0x163 DUP2
0x164 MSTORE
0x165 PUSH1 0x20
0x167 ADD
0x168 SWAP2
0x169 POP
0x16a POP
0x16b PUSH1 0x40
0x16d MLOAD
0x16e DUP1
0x16f SWAP2
0x170 SUB
0x171 SWAP1
0x172 RETURN
---
0x15d: JUMPDEST 
0x15e: V82 = 0x40
0x160: V83 = M[0x40]
0x164: M[V83] = V220
0x165: V84 = 0x20
0x167: V85 = ADD 0x20 V83
0x16b: V86 = 0x40
0x16d: V87 = M[0x40]
0x170: V88 = SUB V85 V87
0x172: RETURN V87 V88
---
Entry stack: [V11, 0x15d, V220]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x15d]

================================

Block 0x173
[0x173:0x17a]
---
Predecessors: [0x62]
Successors: [0x17d]
---
0x173 JUMPDEST
0x174 PUSH2 0x17b
0x177 PUSH2 0x17d
0x17a JUMP
---
0x173: JUMPDEST 
0x174: V89 = 0x17b
0x177: V90 = 0x17d
0x17a: JUMP 0x17d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x17b]
Exit stack: [V11, 0x17b]

================================

Block 0x17b
[0x17b:0x17c]
---
Predecessors: [0x2c8]
Successors: []
---
0x17b JUMPDEST
0x17c STOP
---
0x17b: JUMPDEST 
0x17c: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x17d
[0x17d:0x18e]
---
Predecessors: [0x6d, 0x173]
Successors: [0x18f, 0x193]
---
0x17d JUMPDEST
0x17e PUSH7 0x38d7ea4c68000
0x186 CALLVALUE
0x187 LT
0x188 ISZERO
0x189 ISZERO
0x18a ISZERO
0x18b PUSH2 0x193
0x18e JUMPI
---
0x17d: JUMPDEST 
0x17e: V91 = 0x38d7ea4c68000
0x186: V92 = CALLVALUE
0x187: V93 = LT V92 0x38d7ea4c68000
0x188: V94 = ISZERO V93
0x189: V95 = ISZERO V94
0x18a: V96 = ISZERO V95
0x18b: V97 = 0x193
0x18e: JUMPI 0x193 V96
---
Entry stack: [V11, {0x75, 0x17b}]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x75, 0x17b}]

================================

Block 0x18f
[0x18f:0x192]
---
Predecessors: [0x17d]
Successors: []
---
0x18f PUSH1 0x0
0x191 DUP1
0x192 REVERT
---
0x18f: V98 = 0x0
0x192: REVERT 0x0 0x0
---
Entry stack: [V11, {0x75, 0x17b}]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x75, 0x17b}]

================================

Block 0x193
[0x193:0x19e]
---
Predecessors: [0x17d]
Successors: [0x19f, 0x2c8]
---
0x193 JUMPDEST
0x194 TIMESTAMP
0x195 PUSH1 0x0
0x197 SLOAD
0x198 GT
0x199 ISZERO
0x19a ISZERO
0x19b PUSH2 0x2c8
0x19e JUMPI
---
0x193: JUMPDEST 
0x194: V99 = TIMESTAMP
0x195: V100 = 0x0
0x197: V101 = S[0x0]
0x198: V102 = GT V101 V99
0x199: V103 = ISZERO V102
0x19a: V104 = ISZERO V103
0x19b: V105 = 0x2c8
0x19e: JUMPI 0x2c8 V104
---
Entry stack: [V11, {0x75, 0x17b}]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x75, 0x17b}]

================================

Block 0x19f
[0x19f:0x1fe]
---
Predecessors: [0x193]
Successors: [0x1ff, 0x200]
---
0x19f PUSH1 0x2
0x1a1 PUSH1 0x0
0x1a3 SWAP1
0x1a4 SLOAD
0x1a5 SWAP1
0x1a6 PUSH2 0x100
0x1a9 EXP
0x1aa SWAP1
0x1ab DIV
0x1ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c1 AND
0x1c2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d7 AND
0x1d8 PUSH2 0x8fc
0x1db PUSH1 0x1
0x1dd SLOAD
0x1de CALLVALUE
0x1df ADDRESS
0x1e0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f5 AND
0x1f6 BALANCE
0x1f7 SUB
0x1f8 DUP2
0x1f9 ISZERO
0x1fa ISZERO
0x1fb PUSH2 0x200
0x1fe JUMPI
---
0x19f: V106 = 0x2
0x1a1: V107 = 0x0
0x1a4: V108 = S[0x2]
0x1a6: V109 = 0x100
0x1a9: V110 = EXP 0x100 0x0
0x1ab: V111 = DIV V108 0x1
0x1ac: V112 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c1: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x1c2: V114 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d7: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x1d8: V116 = 0x8fc
0x1db: V117 = 0x1
0x1dd: V118 = S[0x1]
0x1de: V119 = CALLVALUE
0x1df: V120 = ADDRESS
0x1e0: V121 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f5: V122 = AND 0xffffffffffffffffffffffffffffffffffffffff V120
0x1f6: V123 = BALANCE V122
0x1f7: V124 = SUB V123 V119
0x1f9: V125 = ISZERO V118
0x1fa: V126 = ISZERO V125
0x1fb: V127 = 0x200
0x1fe: JUMPI 0x200 V126
---
Entry stack: [V11, {0x75, 0x17b}]
Stack pops: 0
Stack additions: [V115, 0x8fc, V118, V124]
Exit stack: [V11, {0x75, 0x17b}, V115, 0x8fc, V118, V124]

================================

Block 0x1ff
[0x1ff:0x1ff]
---
Predecessors: [0x19f]
Successors: []
---
0x1ff INVALID
---
0x1ff: INVALID 
---
Entry stack: [V11, {0x75, 0x17b}, V115, 0x8fc, V118, V124]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x75, 0x17b}, V115, 0x8fc, V118, V124]

================================

Block 0x200
[0x200:0x221]
---
Predecessors: [0x19f]
Successors: [0x222, 0x226]
---
0x200 JUMPDEST
0x201 DIV
0x202 SWAP1
0x203 DUP2
0x204 ISZERO
0x205 MUL
0x206 SWAP1
0x207 PUSH1 0x40
0x209 MLOAD
0x20a PUSH1 0x0
0x20c PUSH1 0x40
0x20e MLOAD
0x20f DUP1
0x210 DUP4
0x211 SUB
0x212 DUP2
0x213 DUP6
0x214 DUP9
0x215 DUP9
0x216 CALL
0x217 SWAP4
0x218 POP
0x219 POP
0x21a POP
0x21b POP
0x21c ISZERO
0x21d ISZERO
0x21e PUSH2 0x226
0x221 JUMPI
---
0x200: JUMPDEST 
0x201: V128 = DIV V124 V118
0x204: V129 = ISZERO V128
0x205: V130 = MUL V129 0x8fc
0x207: V131 = 0x40
0x209: V132 = M[0x40]
0x20a: V133 = 0x0
0x20c: V134 = 0x40
0x20e: V135 = M[0x40]
0x211: V136 = SUB V132 V135
0x216: V137 = CALL V130 V115 V128 V135 V136 V135 0x0
0x21c: V138 = ISZERO V137
0x21d: V139 = ISZERO V138
0x21e: V140 = 0x226
0x221: JUMPI 0x226 V139
---
Entry stack: [V11, {0x75, 0x17b}, V115, 0x8fc, V118, V124]
Stack pops: 4
Stack additions: []
Exit stack: [V11, {0x75, 0x17b}]

================================

Block 0x222
[0x222:0x225]
---
Predecessors: [0x200]
Successors: []
---
0x222 PUSH1 0x0
0x224 DUP1
0x225 REVERT
---
0x222: V141 = 0x0
0x225: REVERT 0x0 0x0
---
Entry stack: [V11, {0x75, 0x17b}]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x75, 0x17b}]

================================

Block 0x226
[0x226:0x284]
---
Predecessors: [0x200]
Successors: [0x285, 0x286]
---
0x226 JUMPDEST
0x227 PUSH1 0x3
0x229 PUSH1 0x0
0x22b SWAP1
0x22c SLOAD
0x22d SWAP1
0x22e PUSH2 0x100
0x231 EXP
0x232 SWAP1
0x233 DIV
0x234 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x249 AND
0x24a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x25f AND
0x260 PUSH2 0x8fc
0x263 PUSH1 0x1
0x265 SLOAD
0x266 ADDRESS
0x267 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27c AND
0x27d BALANCE
0x27e DUP2
0x27f ISZERO
0x280 ISZERO
0x281 PUSH2 0x286
0x284 JUMPI
---
0x226: JUMPDEST 
0x227: V142 = 0x3
0x229: V143 = 0x0
0x22c: V144 = S[0x3]
0x22e: V145 = 0x100
0x231: V146 = EXP 0x100 0x0
0x233: V147 = DIV V144 0x1
0x234: V148 = 0xffffffffffffffffffffffffffffffffffffffff
0x249: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0x24a: V150 = 0xffffffffffffffffffffffffffffffffffffffff
0x25f: V151 = AND 0xffffffffffffffffffffffffffffffffffffffff V149
0x260: V152 = 0x8fc
0x263: V153 = 0x1
0x265: V154 = S[0x1]
0x266: V155 = ADDRESS
0x267: V156 = 0xffffffffffffffffffffffffffffffffffffffff
0x27c: V157 = AND 0xffffffffffffffffffffffffffffffffffffffff V155
0x27d: V158 = BALANCE V157
0x27f: V159 = ISZERO V154
0x280: V160 = ISZERO V159
0x281: V161 = 0x286
0x284: JUMPI 0x286 V160
---
Entry stack: [V11, {0x75, 0x17b}]
Stack pops: 0
Stack additions: [V151, 0x8fc, V154, V158]
Exit stack: [V11, {0x75, 0x17b}, V151, 0x8fc, V154, V158]

================================

Block 0x285
[0x285:0x285]
---
Predecessors: [0x226]
Successors: []
---
0x285 INVALID
---
0x285: INVALID 
---
Entry stack: [V11, {0x75, 0x17b}, V151, 0x8fc, V154, V158]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x75, 0x17b}, V151, 0x8fc, V154, V158]

================================

Block 0x286
[0x286:0x2c2]
---
Predecessors: [0x226]
Successors: [0x2c3, 0x2c7]
---
0x286 JUMPDEST
0x287 DIV
0x288 CALLVALUE
0x289 ADDRESS
0x28a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x29f AND
0x2a0 BALANCE
0x2a1 SUB
0x2a2 SUB
0x2a3 SWAP1
0x2a4 DUP2
0x2a5 ISZERO
0x2a6 MUL
0x2a7 SWAP1
0x2a8 PUSH1 0x40
0x2aa MLOAD
0x2ab PUSH1 0x0
0x2ad PUSH1 0x40
0x2af MLOAD
0x2b0 DUP1
0x2b1 DUP4
0x2b2 SUB
0x2b3 DUP2
0x2b4 DUP6
0x2b5 DUP9
0x2b6 DUP9
0x2b7 CALL
0x2b8 SWAP4
0x2b9 POP
0x2ba POP
0x2bb POP
0x2bc POP
0x2bd ISZERO
0x2be ISZERO
0x2bf PUSH2 0x2c7
0x2c2 JUMPI
---
0x286: JUMPDEST 
0x287: V162 = DIV V158 V154
0x288: V163 = CALLVALUE
0x289: V164 = ADDRESS
0x28a: V165 = 0xffffffffffffffffffffffffffffffffffffffff
0x29f: V166 = AND 0xffffffffffffffffffffffffffffffffffffffff V164
0x2a0: V167 = BALANCE V166
0x2a1: V168 = SUB V167 V163
0x2a2: V169 = SUB V168 V162
0x2a5: V170 = ISZERO V169
0x2a6: V171 = MUL V170 0x8fc
0x2a8: V172 = 0x40
0x2aa: V173 = M[0x40]
0x2ab: V174 = 0x0
0x2ad: V175 = 0x40
0x2af: V176 = M[0x40]
0x2b2: V177 = SUB V173 V176
0x2b7: V178 = CALL V171 V151 V169 V176 V177 V176 0x0
0x2bd: V179 = ISZERO V178
0x2be: V180 = ISZERO V179
0x2bf: V181 = 0x2c7
0x2c2: JUMPI 0x2c7 V180
---
Entry stack: [V11, {0x75, 0x17b}, V151, 0x8fc, V154, V158]
Stack pops: 4
Stack additions: []
Exit stack: [V11, {0x75, 0x17b}]

================================

Block 0x2c3
[0x2c3:0x2c6]
---
Predecessors: [0x286]
Successors: []
---
0x2c3 PUSH1 0x0
0x2c5 DUP1
0x2c6 REVERT
---
0x2c3: V182 = 0x0
0x2c6: REVERT 0x0 0x0
---
Entry stack: [V11, {0x75, 0x17b}]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x75, 0x17b}]

================================

Block 0x2c7
[0x2c7:0x2c7]
---
Predecessors: [0x286]
Successors: [0x2c8]
---
0x2c7 JUMPDEST
---
0x2c7: JUMPDEST 
---
Entry stack: [V11, {0x75, 0x17b}]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x75, 0x17b}]

================================

Block 0x2c8
[0x2c8:0x315]
---
Predecessors: [0x193, 0x2c7]
Successors: [0x75, 0x17b]
---
0x2c8 JUMPDEST
0x2c9 PUSH2 0xe10
0x2cc TIMESTAMP
0x2cd ADD
0x2ce PUSH1 0x0
0x2d0 DUP2
0x2d1 SWAP1
0x2d2 SSTORE
0x2d3 POP
0x2d4 CALLER
0x2d5 PUSH1 0x3
0x2d7 PUSH1 0x0
0x2d9 PUSH2 0x100
0x2dc EXP
0x2dd DUP2
0x2de SLOAD
0x2df DUP2
0x2e0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f5 MUL
0x2f6 NOT
0x2f7 AND
0x2f8 SWAP1
0x2f9 DUP4
0x2fa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x30f AND
0x310 MUL
0x311 OR
0x312 SWAP1
0x313 SSTORE
0x314 POP
0x315 JUMP
---
0x2c8: JUMPDEST 
0x2c9: V183 = 0xe10
0x2cc: V184 = TIMESTAMP
0x2cd: V185 = ADD V184 0xe10
0x2ce: V186 = 0x0
0x2d2: S[0x0] = V185
0x2d4: V187 = CALLER
0x2d5: V188 = 0x3
0x2d7: V189 = 0x0
0x2d9: V190 = 0x100
0x2dc: V191 = EXP 0x100 0x0
0x2de: V192 = S[0x3]
0x2e0: V193 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f5: V194 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x2f6: V195 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2f7: V196 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V192
0x2fa: V197 = 0xffffffffffffffffffffffffffffffffffffffff
0x30f: V198 = AND 0xffffffffffffffffffffffffffffffffffffffff V187
0x310: V199 = MUL V198 0x1
0x311: V200 = OR V199 V196
0x313: S[0x3] = V200
0x315: JUMP {0x75, 0x17b}
---
Entry stack: [V11, {0x75, 0x17b}]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x316
[0x316:0x33b]
---
Predecessors: [0x82]
Successors: [0x8a]
---
0x316 JUMPDEST
0x317 PUSH1 0x2
0x319 PUSH1 0x0
0x31b SWAP1
0x31c SLOAD
0x31d SWAP1
0x31e PUSH2 0x100
0x321 EXP
0x322 SWAP1
0x323 DIV
0x324 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x339 AND
0x33a DUP2
0x33b JUMP
---
0x316: JUMPDEST 
0x317: V201 = 0x2
0x319: V202 = 0x0
0x31c: V203 = S[0x2]
0x31e: V204 = 0x100
0x321: V205 = EXP 0x100 0x0
0x323: V206 = DIV V203 0x1
0x324: V207 = 0xffffffffffffffffffffffffffffffffffffffff
0x339: V208 = AND 0xffffffffffffffffffffffffffffffffffffffff V206
0x33b: JUMP 0x8a
---
Entry stack: [V11, 0x8a]
Stack pops: 1
Stack additions: [S0, V208]
Exit stack: [V11, 0x8a, V208]

================================

Block 0x33c
[0x33c:0x341]
---
Predecessors: [0xd7]
Successors: [0xdf]
---
0x33c JUMPDEST
0x33d PUSH1 0x0
0x33f SLOAD
0x340 DUP2
0x341 JUMP
---
0x33c: JUMPDEST 
0x33d: V209 = 0x0
0x33f: V210 = S[0x0]
0x341: JUMP 0xdf
---
Entry stack: [V11, 0xdf]
Stack pops: 1
Stack additions: [S0, V210]
Exit stack: [V11, 0xdf, V210]

================================

Block 0x342
[0x342:0x367]
---
Predecessors: [0x100]
Successors: [0x108]
---
0x342 JUMPDEST
0x343 PUSH1 0x3
0x345 PUSH1 0x0
0x347 SWAP1
0x348 SLOAD
0x349 SWAP1
0x34a PUSH2 0x100
0x34d EXP
0x34e SWAP1
0x34f DIV
0x350 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x365 AND
0x366 DUP2
0x367 JUMP
---
0x342: JUMPDEST 
0x343: V211 = 0x3
0x345: V212 = 0x0
0x348: V213 = S[0x3]
0x34a: V214 = 0x100
0x34d: V215 = EXP 0x100 0x0
0x34f: V216 = DIV V213 0x1
0x350: V217 = 0xffffffffffffffffffffffffffffffffffffffff
0x365: V218 = AND 0xffffffffffffffffffffffffffffffffffffffff V216
0x367: JUMP 0x108
---
Entry stack: [V11, 0x108]
Stack pops: 1
Stack additions: [S0, V218]
Exit stack: [V11, 0x108, V218]

================================

Block 0x368
[0x368:0x36d]
---
Predecessors: [0x155]
Successors: [0x15d]
---
0x368 JUMPDEST
0x369 PUSH1 0x1
0x36b SLOAD
0x36c DUP2
0x36d JUMP
---
0x368: JUMPDEST 
0x369: V219 = 0x1
0x36b: V220 = S[0x1]
0x36d: JUMP 0x15d
---
Entry stack: [V11, 0x15d]
Stack pops: 1
Stack additions: [S0, V220]
Exit stack: [V11, 0x15d, V220]

================================

Block 0x36e
[0x36e:0x399]
---
Predecessors: []
Successors: []
---
0x36e STOP
0x36f LOG1
0x370 PUSH6 0x627a7a723058
0x377 SHA3
0x378 SHL
0x379 MISSING 0x21
0x37a MISSING 0x2b
0x37b PUSH29 0x33b79be50497c8de08024c1466ba5267af409c4fe7e59c203b2f619500
0x399 MISSING 0x29
---
0x36e: STOP 
0x36f: LOG S0 S1 S2
0x370: V221 = 0x627a7a723058
0x377: V222 = SHA3 0x627a7a723058 S3
0x378: V223 = SHL V222 S4
0x379: MISSING 0x21
0x37a: MISSING 0x2b
0x37b: V224 = 0x33b79be50497c8de08024c1466ba5267af409c4fe7e59c203b2f619500
0x399: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V223, 0x33b79be50497c8de08024c1466ba5267af409c4fe7e59c203b2f619500]
Exit stack: []

================================

Function 0:
Public function signature: 0x1be22528
Entry block: 0x77
Exit block: 0x8a
Body: 0x77, 0x7e, 0x82, 0x8a, 0x316

Function 1:
Public function signature: 0x614d85e1
Entry block: 0xcc
Exit block: 0xdf
Body: 0xcc, 0xd3, 0xd7, 0xdf, 0x33c

Function 2:
Public function signature: 0x8547af30
Entry block: 0xf5
Exit block: 0x108
Body: 0xf5, 0xfc, 0x100, 0x108, 0x342

Function 3:
Public function signature: 0x978bbdb9
Entry block: 0x14a
Exit block: 0x15d
Body: 0x14a, 0x151, 0x155, 0x15d, 0x368

Function 4:
Public function signature: 0xb60d4288
Entry block: 0x173
Exit block: 0x17b
Body: 0x173, 0x17b

Function 5:
Public fallback function
Entry block: 0x6d
Exit block: 0x75
Body: 0x6d, 0x75

Function 6:
Private function
Entry block: 0x17d
Exit block: 0x2c8
Body: 0x17d, 0x193, 0x19f, 0x200, 0x226, 0x286, 0x2c7, 0x2c8

