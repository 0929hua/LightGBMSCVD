Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x60]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x60
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x60
0xa: JUMPI 0x60 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x21a]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x1ace4d05
0x3a EQ
0x3b PUSH2 0x21a
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x1ace4d05
0x3a: V12 = EQ 0x1ace4d05 V10
0x3b: V13 = 0x21a
0x3e: JUMPI 0x21a V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x243]
---
0x3f DUP1
0x40 PUSH4 0x1ca46d61
0x45 EQ
0x46 PUSH2 0x243
0x49 JUMPI
---
0x40: V14 = 0x1ca46d61
0x45: V15 = EQ 0x1ca46d61 V10
0x46: V16 = 0x243
0x49: JUMPI 0x243 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x298]
---
0x4a DUP1
0x4b PUSH4 0x806b984f
0x50 EQ
0x51 PUSH2 0x298
0x54 JUMPI
---
0x4b: V17 = 0x806b984f
0x50: V18 = EQ 0x806b984f V10
0x51: V19 = 0x298
0x54: JUMPI 0x298 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x2c1]
---
0x55 DUP1
0x56 PUSH4 0x8da5cb5b
0x5b EQ
0x5c PUSH2 0x2c1
0x5f JUMPI
---
0x56: V20 = 0x8da5cb5b
0x5b: V21 = EQ 0x8da5cb5b V10
0x5c: V22 = 0x2c1
0x5f: JUMPI 0x2c1 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x60]
---
Predecessors: [0x0, 0x55]
Successors: [0x61]
---
0x60 JUMPDEST
---
0x60: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x61
[0x61:0x70]
---
Predecessors: [0x60]
Successors: [0x71, 0x141]
---
0x61 JUMPDEST
0x62 PUSH2 0x3e8
0x65 PUSH1 0x3
0x67 SLOAD
0x68 ADD
0x69 NUMBER
0x6a GT
0x6b ISZERO
0x6c ISZERO
0x6d PUSH2 0x141
0x70 JUMPI
---
0x61: JUMPDEST 
0x62: V23 = 0x3e8
0x65: V24 = 0x3
0x67: V25 = S[0x3]
0x68: V26 = ADD V25 0x3e8
0x69: V27 = NUMBER
0x6a: V28 = GT V27 V26
0x6b: V29 = ISZERO V28
0x6c: V30 = ISZERO V29
0x6d: V31 = 0x141
0x70: JUMPI 0x141 V30
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x71
[0x71:0x7b]
---
Predecessors: [0x61]
Successors: [0x7c, 0x80]
---
0x71 PUSH1 0x2
0x73 SLOAD
0x74 CALLVALUE
0x75 GT
0x76 ISZERO
0x77 ISZERO
0x78 PUSH2 0x80
0x7b JUMPI
---
0x71: V32 = 0x2
0x73: V33 = S[0x2]
0x74: V34 = CALLVALUE
0x75: V35 = GT V34 V33
0x76: V36 = ISZERO V35
0x77: V37 = ISZERO V36
0x78: V38 = 0x80
0x7b: JUMPI 0x80 V37
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x7c
[0x7c:0x7f]
---
Predecessors: [0x71]
Successors: []
---
0x7c PUSH1 0x0
0x7e DUP1
0x7f REVERT
---
0x7c: V39 = 0x0
0x7f: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x80
[0x80:0x114]
---
Predecessors: [0x71]
Successors: [0x115, 0x116]
---
0x80 JUMPDEST
0x81 CALLER
0x82 PUSH1 0x1
0x84 PUSH1 0x0
0x86 PUSH2 0x100
0x89 EXP
0x8a DUP2
0x8b SLOAD
0x8c DUP2
0x8d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa2 MUL
0xa3 NOT
0xa4 AND
0xa5 SWAP1
0xa6 DUP4
0xa7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbc AND
0xbd MUL
0xbe OR
0xbf SWAP1
0xc0 SSTORE
0xc1 POP
0xc2 CALLVALUE
0xc3 PUSH1 0x2
0xc5 DUP2
0xc6 SWAP1
0xc7 SSTORE
0xc8 POP
0xc9 NUMBER
0xca PUSH1 0x3
0xcc DUP2
0xcd SWAP1
0xce SSTORE
0xcf POP
0xd0 PUSH1 0x0
0xd2 DUP1
0xd3 SWAP1
0xd4 SLOAD
0xd5 SWAP1
0xd6 PUSH2 0x100
0xd9 EXP
0xda SWAP1
0xdb DIV
0xdc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf1 AND
0xf2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x107 AND
0x108 PUSH2 0x8fc
0x10b PUSH1 0x64
0x10d CALLVALUE
0x10e DUP2
0x10f ISZERO
0x110 ISZERO
0x111 PUSH2 0x116
0x114 JUMPI
---
0x80: JUMPDEST 
0x81: V40 = CALLER
0x82: V41 = 0x1
0x84: V42 = 0x0
0x86: V43 = 0x100
0x89: V44 = EXP 0x100 0x0
0x8b: V45 = S[0x1]
0x8d: V46 = 0xffffffffffffffffffffffffffffffffffffffff
0xa2: V47 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xa3: V48 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xa4: V49 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V45
0xa7: V50 = 0xffffffffffffffffffffffffffffffffffffffff
0xbc: V51 = AND 0xffffffffffffffffffffffffffffffffffffffff V40
0xbd: V52 = MUL V51 0x1
0xbe: V53 = OR V52 V49
0xc0: S[0x1] = V53
0xc2: V54 = CALLVALUE
0xc3: V55 = 0x2
0xc7: S[0x2] = V54
0xc9: V56 = NUMBER
0xca: V57 = 0x3
0xce: S[0x3] = V56
0xd0: V58 = 0x0
0xd4: V59 = S[0x0]
0xd6: V60 = 0x100
0xd9: V61 = EXP 0x100 0x0
0xdb: V62 = DIV V59 0x1
0xdc: V63 = 0xffffffffffffffffffffffffffffffffffffffff
0xf1: V64 = AND 0xffffffffffffffffffffffffffffffffffffffff V62
0xf2: V65 = 0xffffffffffffffffffffffffffffffffffffffff
0x107: V66 = AND 0xffffffffffffffffffffffffffffffffffffffff V64
0x108: V67 = 0x8fc
0x10b: V68 = 0x64
0x10d: V69 = CALLVALUE
0x10f: V70 = ISZERO 0x64
0x110: V71 = ISZERO 0x0
0x111: V72 = 0x116
0x114: JUMPI 0x116 0x1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [V66, 0x8fc, 0x64, V69]
Exit stack: [V10, V66, 0x8fc, 0x64, V69]

================================

Block 0x115
[0x115:0x115]
---
Predecessors: [0x80]
Successors: []
---
0x115 INVALID
---
0x115: INVALID 
---
Entry stack: [V10, V66, 0x8fc, 0x64, V69]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V66, 0x8fc, 0x64, V69]

================================

Block 0x116
[0x116:0x137]
---
Predecessors: [0x80]
Successors: [0x138, 0x13c]
---
0x116 JUMPDEST
0x117 DIV
0x118 SWAP1
0x119 DUP2
0x11a ISZERO
0x11b MUL
0x11c SWAP1
0x11d PUSH1 0x40
0x11f MLOAD
0x120 PUSH1 0x0
0x122 PUSH1 0x40
0x124 MLOAD
0x125 DUP1
0x126 DUP4
0x127 SUB
0x128 DUP2
0x129 DUP6
0x12a DUP9
0x12b DUP9
0x12c CALL
0x12d SWAP4
0x12e POP
0x12f POP
0x130 POP
0x131 POP
0x132 ISZERO
0x133 ISZERO
0x134 PUSH2 0x13c
0x137 JUMPI
---
0x116: JUMPDEST 
0x117: V73 = DIV V69 0x64
0x11a: V74 = ISZERO V73
0x11b: V75 = MUL V74 0x8fc
0x11d: V76 = 0x40
0x11f: V77 = M[0x40]
0x120: V78 = 0x0
0x122: V79 = 0x40
0x124: V80 = M[0x40]
0x127: V81 = SUB V77 V80
0x12c: V82 = CALL V75 V66 V73 V80 V81 V80 0x0
0x132: V83 = ISZERO V82
0x133: V84 = ISZERO V83
0x134: V85 = 0x13c
0x137: JUMPI 0x13c V84
---
Entry stack: [V10, V66, 0x8fc, 0x64, V69]
Stack pops: 4
Stack additions: []
Exit stack: [V10]

================================

Block 0x138
[0x138:0x13b]
---
Predecessors: [0x116]
Successors: []
---
0x138 PUSH1 0x0
0x13a DUP1
0x13b REVERT
---
0x138: V86 = 0x0
0x13b: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x13c
[0x13c:0x140]
---
Predecessors: [0x116]
Successors: [0x217]
---
0x13c JUMPDEST
0x13d PUSH2 0x217
0x140 JUMP
---
0x13c: JUMPDEST 
0x13d: V87 = 0x217
0x140: JUMP 0x217
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x141
[0x141:0x198]
---
Predecessors: [0x61]
Successors: [0x199, 0x19d]
---
0x141 JUMPDEST
0x142 PUSH1 0x1
0x144 PUSH1 0x0
0x146 SWAP1
0x147 SLOAD
0x148 SWAP1
0x149 PUSH2 0x100
0x14c EXP
0x14d SWAP1
0x14e DIV
0x14f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x164 AND
0x165 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17a AND
0x17b CALLER
0x17c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x191 AND
0x192 EQ
0x193 ISZERO
0x194 ISZERO
0x195 PUSH2 0x19d
0x198 JUMPI
---
0x141: JUMPDEST 
0x142: V88 = 0x1
0x144: V89 = 0x0
0x147: V90 = S[0x1]
0x149: V91 = 0x100
0x14c: V92 = EXP 0x100 0x0
0x14e: V93 = DIV V90 0x1
0x14f: V94 = 0xffffffffffffffffffffffffffffffffffffffff
0x164: V95 = AND 0xffffffffffffffffffffffffffffffffffffffff V93
0x165: V96 = 0xffffffffffffffffffffffffffffffffffffffff
0x17a: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0x17b: V98 = CALLER
0x17c: V99 = 0xffffffffffffffffffffffffffffffffffffffff
0x191: V100 = AND 0xffffffffffffffffffffffffffffffffffffffff V98
0x192: V101 = EQ V100 V97
0x193: V102 = ISZERO V101
0x194: V103 = ISZERO V102
0x195: V104 = 0x19d
0x198: JUMPI 0x19d V103
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x199
[0x199:0x19c]
---
Predecessors: [0x141]
Successors: []
---
0x199 PUSH1 0x0
0x19b DUP1
0x19c REVERT
---
0x199: V105 = 0x0
0x19c: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x19d
[0x19d:0x211]
---
Predecessors: [0x141]
Successors: [0x212, 0x216]
---
0x19d JUMPDEST
0x19e PUSH1 0x1
0x1a0 PUSH1 0x0
0x1a2 SWAP1
0x1a3 SLOAD
0x1a4 SWAP1
0x1a5 PUSH2 0x100
0x1a8 EXP
0x1a9 SWAP1
0x1aa DIV
0x1ab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c0 AND
0x1c1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d6 AND
0x1d7 PUSH2 0x8fc
0x1da ADDRESS
0x1db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f0 AND
0x1f1 BALANCE
0x1f2 SWAP1
0x1f3 DUP2
0x1f4 ISZERO
0x1f5 MUL
0x1f6 SWAP1
0x1f7 PUSH1 0x40
0x1f9 MLOAD
0x1fa PUSH1 0x0
0x1fc PUSH1 0x40
0x1fe MLOAD
0x1ff DUP1
0x200 DUP4
0x201 SUB
0x202 DUP2
0x203 DUP6
0x204 DUP9
0x205 DUP9
0x206 CALL
0x207 SWAP4
0x208 POP
0x209 POP
0x20a POP
0x20b POP
0x20c ISZERO
0x20d ISZERO
0x20e PUSH2 0x216
0x211 JUMPI
---
0x19d: JUMPDEST 
0x19e: V106 = 0x1
0x1a0: V107 = 0x0
0x1a3: V108 = S[0x1]
0x1a5: V109 = 0x100
0x1a8: V110 = EXP 0x100 0x0
0x1aa: V111 = DIV V108 0x1
0x1ab: V112 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c0: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x1c1: V114 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d6: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x1d7: V116 = 0x8fc
0x1da: V117 = ADDRESS
0x1db: V118 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f0: V119 = AND 0xffffffffffffffffffffffffffffffffffffffff V117
0x1f1: V120 = BALANCE V119
0x1f4: V121 = ISZERO V120
0x1f5: V122 = MUL V121 0x8fc
0x1f7: V123 = 0x40
0x1f9: V124 = M[0x40]
0x1fa: V125 = 0x0
0x1fc: V126 = 0x40
0x1fe: V127 = M[0x40]
0x201: V128 = SUB V124 V127
0x206: V129 = CALL V122 V115 V120 V127 V128 V127 0x0
0x20c: V130 = ISZERO V129
0x20d: V131 = ISZERO V130
0x20e: V132 = 0x216
0x211: JUMPI 0x216 V131
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x212
[0x212:0x215]
---
Predecessors: [0x19d]
Successors: []
---
0x212 PUSH1 0x0
0x214 DUP1
0x215 REVERT
---
0x212: V133 = 0x0
0x215: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x216
[0x216:0x216]
---
Predecessors: [0x19d]
Successors: [0x217]
---
0x216 JUMPDEST
---
0x216: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x217
[0x217:0x217]
---
Predecessors: [0x13c, 0x216]
Successors: [0x218]
---
0x217 JUMPDEST
---
0x217: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x218
[0x218:0x219]
---
Predecessors: [0x217]
Successors: []
---
0x218 JUMPDEST
0x219 STOP
---
0x218: JUMPDEST 
0x219: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x21a
[0x21a:0x220]
---
Predecessors: [0xb]
Successors: [0x221, 0x225]
---
0x21a JUMPDEST
0x21b CALLVALUE
0x21c ISZERO
0x21d PUSH2 0x225
0x220 JUMPI
---
0x21a: JUMPDEST 
0x21b: V134 = CALLVALUE
0x21c: V135 = ISZERO V134
0x21d: V136 = 0x225
0x220: JUMPI 0x225 V135
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x221
[0x221:0x224]
---
Predecessors: [0x21a]
Successors: []
---
0x221 PUSH1 0x0
0x223 DUP1
0x224 REVERT
---
0x221: V137 = 0x0
0x224: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x225
[0x225:0x22c]
---
Predecessors: [0x21a]
Successors: [0x316]
---
0x225 JUMPDEST
0x226 PUSH2 0x22d
0x229 PUSH2 0x316
0x22c JUMP
---
0x225: JUMPDEST 
0x226: V138 = 0x22d
0x229: V139 = 0x316
0x22c: JUMP 0x316
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x22d]
Exit stack: [V10, 0x22d]

================================

Block 0x22d
[0x22d:0x242]
---
Predecessors: [0x316]
Successors: []
---
0x22d JUMPDEST
0x22e PUSH1 0x40
0x230 MLOAD
0x231 DUP1
0x232 DUP3
0x233 DUP2
0x234 MSTORE
0x235 PUSH1 0x20
0x237 ADD
0x238 SWAP2
0x239 POP
0x23a POP
0x23b PUSH1 0x40
0x23d MLOAD
0x23e DUP1
0x23f SWAP2
0x240 SUB
0x241 SWAP1
0x242 RETURN
---
0x22d: JUMPDEST 
0x22e: V140 = 0x40
0x230: V141 = M[0x40]
0x234: M[V141] = V195
0x235: V142 = 0x20
0x237: V143 = ADD 0x20 V141
0x23b: V144 = 0x40
0x23d: V145 = M[0x40]
0x240: V146 = SUB V143 V145
0x242: RETURN V145 V146
---
Entry stack: [V10, 0x22d, V195]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x22d]

================================

Block 0x243
[0x243:0x249]
---
Predecessors: [0x3f]
Successors: [0x24a, 0x24e]
---
0x243 JUMPDEST
0x244 CALLVALUE
0x245 ISZERO
0x246 PUSH2 0x24e
0x249 JUMPI
---
0x243: JUMPDEST 
0x244: V147 = CALLVALUE
0x245: V148 = ISZERO V147
0x246: V149 = 0x24e
0x249: JUMPI 0x24e V148
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x24a
[0x24a:0x24d]
---
Predecessors: [0x243]
Successors: []
---
0x24a PUSH1 0x0
0x24c DUP1
0x24d REVERT
---
0x24a: V150 = 0x0
0x24d: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x24e
[0x24e:0x255]
---
Predecessors: [0x243]
Successors: [0x31c]
---
0x24e JUMPDEST
0x24f PUSH2 0x256
0x252 PUSH2 0x31c
0x255 JUMP
---
0x24e: JUMPDEST 
0x24f: V151 = 0x256
0x252: V152 = 0x31c
0x255: JUMP 0x31c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x256]
Exit stack: [V10, 0x256]

================================

Block 0x256
[0x256:0x297]
---
Predecessors: [0x31c]
Successors: []
---
0x256 JUMPDEST
0x257 PUSH1 0x40
0x259 MLOAD
0x25a DUP1
0x25b DUP3
0x25c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x271 AND
0x272 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x287 AND
0x288 DUP2
0x289 MSTORE
0x28a PUSH1 0x20
0x28c ADD
0x28d SWAP2
0x28e POP
0x28f POP
0x290 PUSH1 0x40
0x292 MLOAD
0x293 DUP1
0x294 SWAP2
0x295 SUB
0x296 SWAP1
0x297 RETURN
---
0x256: JUMPDEST 
0x257: V153 = 0x40
0x259: V154 = M[0x40]
0x25c: V155 = 0xffffffffffffffffffffffffffffffffffffffff
0x271: V156 = AND 0xffffffffffffffffffffffffffffffffffffffff V203
0x272: V157 = 0xffffffffffffffffffffffffffffffffffffffff
0x287: V158 = AND 0xffffffffffffffffffffffffffffffffffffffff V156
0x289: M[V154] = V158
0x28a: V159 = 0x20
0x28c: V160 = ADD 0x20 V154
0x290: V161 = 0x40
0x292: V162 = M[0x40]
0x295: V163 = SUB V160 V162
0x297: RETURN V162 V163
---
Entry stack: [V10, 0x256, V203]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x256]

================================

Block 0x298
[0x298:0x29e]
---
Predecessors: [0x4a]
Successors: [0x29f, 0x2a3]
---
0x298 JUMPDEST
0x299 CALLVALUE
0x29a ISZERO
0x29b PUSH2 0x2a3
0x29e JUMPI
---
0x298: JUMPDEST 
0x299: V164 = CALLVALUE
0x29a: V165 = ISZERO V164
0x29b: V166 = 0x2a3
0x29e: JUMPI 0x2a3 V165
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x29f
[0x29f:0x2a2]
---
Predecessors: [0x298]
Successors: []
---
0x29f PUSH1 0x0
0x2a1 DUP1
0x2a2 REVERT
---
0x29f: V167 = 0x0
0x2a2: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2a3
[0x2a3:0x2aa]
---
Predecessors: [0x298]
Successors: [0x342]
---
0x2a3 JUMPDEST
0x2a4 PUSH2 0x2ab
0x2a7 PUSH2 0x342
0x2aa JUMP
---
0x2a3: JUMPDEST 
0x2a4: V168 = 0x2ab
0x2a7: V169 = 0x342
0x2aa: JUMP 0x342
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2ab]
Exit stack: [V10, 0x2ab]

================================

Block 0x2ab
[0x2ab:0x2c0]
---
Predecessors: [0x342]
Successors: []
---
0x2ab JUMPDEST
0x2ac PUSH1 0x40
0x2ae MLOAD
0x2af DUP1
0x2b0 DUP3
0x2b1 DUP2
0x2b2 MSTORE
0x2b3 PUSH1 0x20
0x2b5 ADD
0x2b6 SWAP2
0x2b7 POP
0x2b8 POP
0x2b9 PUSH1 0x40
0x2bb MLOAD
0x2bc DUP1
0x2bd SWAP2
0x2be SUB
0x2bf SWAP1
0x2c0 RETURN
---
0x2ab: JUMPDEST 
0x2ac: V170 = 0x40
0x2ae: V171 = M[0x40]
0x2b2: M[V171] = V205
0x2b3: V172 = 0x20
0x2b5: V173 = ADD 0x20 V171
0x2b9: V174 = 0x40
0x2bb: V175 = M[0x40]
0x2be: V176 = SUB V173 V175
0x2c0: RETURN V175 V176
---
Entry stack: [V10, 0x2ab, V205]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x2ab]

================================

Block 0x2c1
[0x2c1:0x2c7]
---
Predecessors: [0x55]
Successors: [0x2c8, 0x2cc]
---
0x2c1 JUMPDEST
0x2c2 CALLVALUE
0x2c3 ISZERO
0x2c4 PUSH2 0x2cc
0x2c7 JUMPI
---
0x2c1: JUMPDEST 
0x2c2: V177 = CALLVALUE
0x2c3: V178 = ISZERO V177
0x2c4: V179 = 0x2cc
0x2c7: JUMPI 0x2cc V178
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2c8
[0x2c8:0x2cb]
---
Predecessors: [0x2c1]
Successors: []
---
0x2c8 PUSH1 0x0
0x2ca DUP1
0x2cb REVERT
---
0x2c8: V180 = 0x0
0x2cb: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2cc
[0x2cc:0x2d3]
---
Predecessors: [0x2c1]
Successors: [0x348]
---
0x2cc JUMPDEST
0x2cd PUSH2 0x2d4
0x2d0 PUSH2 0x348
0x2d3 JUMP
---
0x2cc: JUMPDEST 
0x2cd: V181 = 0x2d4
0x2d0: V182 = 0x348
0x2d3: JUMP 0x348
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2d4]
Exit stack: [V10, 0x2d4]

================================

Block 0x2d4
[0x2d4:0x315]
---
Predecessors: [0x348]
Successors: []
---
0x2d4 JUMPDEST
0x2d5 PUSH1 0x40
0x2d7 MLOAD
0x2d8 DUP1
0x2d9 DUP3
0x2da PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ef AND
0x2f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x305 AND
0x306 DUP2
0x307 MSTORE
0x308 PUSH1 0x20
0x30a ADD
0x30b SWAP2
0x30c POP
0x30d POP
0x30e PUSH1 0x40
0x310 MLOAD
0x311 DUP1
0x312 SWAP2
0x313 SUB
0x314 SWAP1
0x315 RETURN
---
0x2d4: JUMPDEST 
0x2d5: V183 = 0x40
0x2d7: V184 = M[0x40]
0x2da: V185 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ef: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff V212
0x2f0: V187 = 0xffffffffffffffffffffffffffffffffffffffff
0x305: V188 = AND 0xffffffffffffffffffffffffffffffffffffffff V186
0x307: M[V184] = V188
0x308: V189 = 0x20
0x30a: V190 = ADD 0x20 V184
0x30e: V191 = 0x40
0x310: V192 = M[0x40]
0x313: V193 = SUB V190 V192
0x315: RETURN V192 V193
---
Entry stack: [V10, 0x2d4, V212]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x2d4]

================================

Block 0x316
[0x316:0x31b]
---
Predecessors: [0x225]
Successors: [0x22d]
---
0x316 JUMPDEST
0x317 PUSH1 0x2
0x319 SLOAD
0x31a DUP2
0x31b JUMP
---
0x316: JUMPDEST 
0x317: V194 = 0x2
0x319: V195 = S[0x2]
0x31b: JUMP 0x22d
---
Entry stack: [V10, 0x22d]
Stack pops: 1
Stack additions: [S0, V195]
Exit stack: [V10, 0x22d, V195]

================================

Block 0x31c
[0x31c:0x341]
---
Predecessors: [0x24e]
Successors: [0x256]
---
0x31c JUMPDEST
0x31d PUSH1 0x1
0x31f PUSH1 0x0
0x321 SWAP1
0x322 SLOAD
0x323 SWAP1
0x324 PUSH2 0x100
0x327 EXP
0x328 SWAP1
0x329 DIV
0x32a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x33f AND
0x340 DUP2
0x341 JUMP
---
0x31c: JUMPDEST 
0x31d: V196 = 0x1
0x31f: V197 = 0x0
0x322: V198 = S[0x1]
0x324: V199 = 0x100
0x327: V200 = EXP 0x100 0x0
0x329: V201 = DIV V198 0x1
0x32a: V202 = 0xffffffffffffffffffffffffffffffffffffffff
0x33f: V203 = AND 0xffffffffffffffffffffffffffffffffffffffff V201
0x341: JUMP 0x256
---
Entry stack: [V10, 0x256]
Stack pops: 1
Stack additions: [S0, V203]
Exit stack: [V10, 0x256, V203]

================================

Block 0x342
[0x342:0x347]
---
Predecessors: [0x2a3]
Successors: [0x2ab]
---
0x342 JUMPDEST
0x343 PUSH1 0x3
0x345 SLOAD
0x346 DUP2
0x347 JUMP
---
0x342: JUMPDEST 
0x343: V204 = 0x3
0x345: V205 = S[0x3]
0x347: JUMP 0x2ab
---
Entry stack: [V10, 0x2ab]
Stack pops: 1
Stack additions: [S0, V205]
Exit stack: [V10, 0x2ab, V205]

================================

Block 0x348
[0x348:0x36c]
---
Predecessors: [0x2cc]
Successors: [0x2d4]
---
0x348 JUMPDEST
0x349 PUSH1 0x0
0x34b DUP1
0x34c SWAP1
0x34d SLOAD
0x34e SWAP1
0x34f PUSH2 0x100
0x352 EXP
0x353 SWAP1
0x354 DIV
0x355 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x36a AND
0x36b DUP2
0x36c JUMP
---
0x348: JUMPDEST 
0x349: V206 = 0x0
0x34d: V207 = S[0x0]
0x34f: V208 = 0x100
0x352: V209 = EXP 0x100 0x0
0x354: V210 = DIV V207 0x1
0x355: V211 = 0xffffffffffffffffffffffffffffffffffffffff
0x36a: V212 = AND 0xffffffffffffffffffffffffffffffffffffffff V210
0x36c: JUMP 0x2d4
---
Entry stack: [V10, 0x2d4]
Stack pops: 1
Stack additions: [S0, V212]
Exit stack: [V10, 0x2d4, V212]

================================

Block 0x36d
[0x36d:0x3a4]
---
Predecessors: []
Successors: []
---
0x36d STOP
0x36e LOG1
0x36f PUSH6 0x627a7a723058
0x376 SHA3
0x377 MISSING 0x21
0x378 MISSING 0x2b
0x379 MISSING 0xe4
0x37a DELEGATECALL
0x37b MISSING 0xc3
0x37c MISSING 0xb8
0x37d GASPRICE
0x37e MISSING 0xb4
0x37f SHL
0x380 CALL
0x381 PUSH1 0xa
0x383 MISSING 0xc6
0x384 POP
0x385 MISSING 0xda
0x386 PUSH30 0xba77646b05df753d52a19438f0fcfb7e0029
---
0x36d: STOP 
0x36e: LOG S0 S1 S2
0x36f: V213 = 0x627a7a723058
0x376: V214 = SHA3 0x627a7a723058 S3
0x377: MISSING 0x21
0x378: MISSING 0x2b
0x379: MISSING 0xe4
0x37a: V215 = DELEGATECALL S0 S1 S2 S3 S4 S5
0x37b: MISSING 0xc3
0x37c: MISSING 0xb8
0x37d: V216 = GASPRICE
0x37e: MISSING 0xb4
0x37f: V217 = SHL S0 S1
0x380: V218 = CALL V217 S2 S3 S4 S5 S6 S7
0x381: V219 = 0xa
0x383: MISSING 0xc6
0x385: MISSING 0xda
0x386: V220 = 0xba77646b05df753d52a19438f0fcfb7e0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V214, V215, V216, 0xa, V218, 0xba77646b05df753d52a19438f0fcfb7e0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x1ace4d05
Entry block: 0x21a
Exit block: 0x22d
Body: 0x21a, 0x221, 0x225, 0x22d, 0x316

Function 1:
Public function signature: 0x1ca46d61
Entry block: 0x243
Exit block: 0x256
Body: 0x243, 0x24a, 0x24e, 0x256, 0x31c

Function 2:
Public function signature: 0x806b984f
Entry block: 0x298
Exit block: 0x2ab
Body: 0x298, 0x29f, 0x2a3, 0x2ab, 0x342

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0x2c1
Exit block: 0x2d4
Body: 0x2c1, 0x2c8, 0x2cc, 0x2d4, 0x348

Function 4:
Public fallback function
Entry block: 0x60
Exit block: 0x218
Body: 0x60, 0x61, 0x71, 0x7c, 0x80, 0x115, 0x116, 0x138, 0x13c, 0x141, 0x199, 0x19d, 0x212, 0x216, 0x217, 0x218

