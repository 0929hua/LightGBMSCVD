Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x8c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x8c
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x8c
0xa: JUMPI 0x8c V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0xc4]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x1793c314
0x3a EQ
0x3b PUSH2 0xc4
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x1793c314
0x3a: V12 = EQ 0x1793c314 V10
0x3b: V13 = 0xc4
0x3e: JUMPI 0xc4 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x11c]
---
0x3f DUP1
0x40 PUSH4 0x21e92d49
0x45 EQ
0x46 PUSH2 0x11c
0x49 JUMPI
---
0x40: V14 = 0x21e92d49
0x45: V15 = EQ 0x21e92d49 V10
0x46: V16 = 0x11c
0x49: JUMPI 0x11c V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x153]
---
0x4a DUP1
0x4b PUSH4 0x872fe620
0x50 EQ
0x51 PUSH2 0x153
0x54 JUMPI
---
0x4b: V17 = 0x872fe620
0x50: V18 = EQ 0x872fe620 V10
0x51: V19 = 0x153
0x54: JUMPI 0x153 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x168]
---
0x55 DUP1
0x56 PUSH4 0x8da5cb5b
0x5b EQ
0x5c PUSH2 0x168
0x5f JUMPI
---
0x56: V20 = 0x8da5cb5b
0x5b: V21 = EQ 0x8da5cb5b V10
0x5c: V22 = 0x168
0x5f: JUMPI 0x168 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x1bd]
---
0x60 DUP1
0x61 PUSH4 0x9066314e
0x66 EQ
0x67 PUSH2 0x1bd
0x6a JUMPI
---
0x61: V23 = 0x9066314e
0x66: V24 = EQ 0x9066314e V10
0x67: V25 = 0x1bd
0x6a: JUMPI 0x1bd V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x60]
Successors: [0x76, 0x1e2]
---
0x6b DUP1
0x6c PUSH4 0xa5bbc423
0x71 EQ
0x72 PUSH2 0x1e2
0x75 JUMPI
---
0x6c: V26 = 0xa5bbc423
0x71: V27 = EQ 0xa5bbc423 V10
0x72: V28 = 0x1e2
0x75: JUMPI 0x1e2 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x76
[0x76:0x80]
---
Predecessors: [0x6b]
Successors: [0x81, 0x23f]
---
0x76 DUP1
0x77 PUSH4 0xc46f3e25
0x7c EQ
0x7d PUSH2 0x23f
0x80 JUMPI
---
0x77: V29 = 0xc46f3e25
0x7c: V30 = EQ 0xc46f3e25 V10
0x7d: V31 = 0x23f
0x80: JUMPI 0x23f V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x81
[0x81:0x8b]
---
Predecessors: [0x76]
Successors: [0x8c, 0x26c]
---
0x81 DUP1
0x82 PUSH4 0xf341cae8
0x87 EQ
0x88 PUSH2 0x26c
0x8b JUMPI
---
0x82: V32 = 0xf341cae8
0x87: V33 = EQ 0xf341cae8 V10
0x88: V34 = 0x26c
0x8b: JUMPI 0x26c V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8c
[0x8c:0x8c]
---
Predecessors: [0x0, 0x81]
Successors: [0x8d]
---
0x8c JUMPDEST
---
0x8c: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x8d
[0x8d:0x98]
---
Predecessors: [0x8c]
Successors: [0x99, 0x9a]
---
0x8d JUMPDEST
0x8e PUSH1 0x0
0x90 PUSH1 0x2
0x92 DUP2
0x93 GT
0x94 ISZERO
0x95 PUSH2 0x9a
0x98 JUMPI
---
0x8d: JUMPDEST 
0x8e: V35 = 0x0
0x90: V36 = 0x2
0x93: V37 = GT 0x0 0x2
0x94: V38 = ISZERO 0x0
0x95: V39 = 0x9a
0x98: JUMPI 0x9a 0x1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x0]

================================

Block 0x99
[0x99:0x99]
---
Predecessors: [0x8d]
Successors: []
---
0x99 INVALID
---
0x99: INVALID 
---
Entry stack: [V10, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x0]

================================

Block 0x9a
[0x9a:0xb3]
---
Predecessors: [0x8d]
Successors: [0xb4, 0xb5]
---
0x9a JUMPDEST
0x9b PUSH1 0x12
0x9d PUSH1 0x2
0x9f SWAP1
0xa0 SLOAD
0xa1 SWAP1
0xa2 PUSH2 0x100
0xa5 EXP
0xa6 SWAP1
0xa7 DIV
0xa8 PUSH1 0xff
0xaa AND
0xab PUSH1 0x2
0xad DUP2
0xae GT
0xaf ISZERO
0xb0 PUSH2 0xb5
0xb3 JUMPI
---
0x9a: JUMPDEST 
0x9b: V40 = 0x12
0x9d: V41 = 0x2
0xa0: V42 = S[0x12]
0xa2: V43 = 0x100
0xa5: V44 = EXP 0x100 0x2
0xa7: V45 = DIV V42 0x10000
0xa8: V46 = 0xff
0xaa: V47 = AND 0xff V45
0xab: V48 = 0x2
0xae: V49 = GT V47 0x2
0xaf: V50 = ISZERO V49
0xb0: V51 = 0xb5
0xb3: JUMPI 0xb5 V50
---
Entry stack: [V10, 0x0]
Stack pops: 0
Stack additions: [V47]
Exit stack: [V10, 0x0, V47]

================================

Block 0xb4
[0xb4:0xb4]
---
Predecessors: [0x9a]
Successors: []
---
0xb4 INVALID
---
0xb4: INVALID 
---
Entry stack: [V10, 0x0, V47]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x0, V47]

================================

Block 0xb5
[0xb5:0xbc]
---
Predecessors: [0x9a]
Successors: [0xbd, 0xc1]
---
0xb5 JUMPDEST
0xb6 EQ
0xb7 ISZERO
0xb8 ISZERO
0xb9 PUSH2 0xc1
0xbc JUMPI
---
0xb5: JUMPDEST 
0xb6: V52 = EQ V47 0x0
0xb7: V53 = ISZERO V52
0xb8: V54 = ISZERO V53
0xb9: V55 = 0xc1
0xbc: JUMPI 0xc1 V54
---
Entry stack: [V10, 0x0, V47]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0xbd
[0xbd:0xc0]
---
Predecessors: [0xb5]
Successors: []
---
0xbd PUSH1 0x0
0xbf DUP1
0xc0 REVERT
---
0xbd: V56 = 0x0
0xc0: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xc1
[0xc1:0xc1]
---
Predecessors: [0xb5]
Successors: [0xc2]
---
0xc1 JUMPDEST
---
0xc1: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xc2
[0xc2:0xc3]
---
Predecessors: [0xc1]
Successors: []
---
0xc2 JUMPDEST
0xc3 STOP
---
0xc2: JUMPDEST 
0xc3: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xc4
[0xc4:0xca]
---
Predecessors: [0xb]
Successors: [0xcb, 0xcf]
---
0xc4 JUMPDEST
0xc5 CALLVALUE
0xc6 ISZERO
0xc7 PUSH2 0xcf
0xca JUMPI
---
0xc4: JUMPDEST 
0xc5: V57 = CALLVALUE
0xc6: V58 = ISZERO V57
0xc7: V59 = 0xcf
0xca: JUMPI 0xcf V58
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xcb
[0xcb:0xce]
---
Predecessors: [0xc4]
Successors: []
---
0xcb PUSH1 0x0
0xcd DUP1
0xce REVERT
---
0xcb: V60 = 0x0
0xce: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xcf
[0xcf:0x119]
---
Predecessors: [0xc4]
Successors: [0x2a0]
---
0xcf JUMPDEST
0xd0 PUSH2 0x11a
0xd3 PUSH1 0x4
0xd5 DUP1
0xd6 DUP1
0xd7 CALLDATALOAD
0xd8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xed AND
0xee SWAP1
0xef PUSH1 0x20
0xf1 ADD
0xf2 SWAP1
0xf3 SWAP2
0xf4 SWAP1
0xf5 DUP1
0xf6 CALLDATALOAD
0xf7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10c AND
0x10d SWAP1
0x10e PUSH1 0x20
0x110 ADD
0x111 SWAP1
0x112 SWAP2
0x113 SWAP1
0x114 POP
0x115 POP
0x116 PUSH2 0x2a0
0x119 JUMP
---
0xcf: JUMPDEST 
0xd0: V61 = 0x11a
0xd3: V62 = 0x4
0xd7: V63 = CALLDATALOAD 0x4
0xd8: V64 = 0xffffffffffffffffffffffffffffffffffffffff
0xed: V65 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0xef: V66 = 0x20
0xf1: V67 = ADD 0x20 0x4
0xf6: V68 = CALLDATALOAD 0x24
0xf7: V69 = 0xffffffffffffffffffffffffffffffffffffffff
0x10c: V70 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0x10e: V71 = 0x20
0x110: V72 = ADD 0x20 0x24
0x116: V73 = 0x2a0
0x119: JUMP 0x2a0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x11a, V65, V70]
Exit stack: [V10, 0x11a, V65, V70]

================================

Block 0x11a
[0x11a:0x11b]
---
Predecessors: [0x3a3]
Successors: []
---
0x11a JUMPDEST
0x11b STOP
---
0x11a: JUMPDEST 
0x11b: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x11c
[0x11c:0x150]
---
Predecessors: [0x3f]
Successors: [0x3a7]
---
0x11c JUMPDEST
0x11d PUSH2 0x151
0x120 PUSH1 0x4
0x122 DUP1
0x123 DUP1
0x124 CALLDATALOAD
0x125 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13a AND
0x13b SWAP1
0x13c PUSH1 0x20
0x13e ADD
0x13f SWAP1
0x140 SWAP2
0x141 SWAP1
0x142 DUP1
0x143 CALLDATALOAD
0x144 SWAP1
0x145 PUSH1 0x20
0x147 ADD
0x148 SWAP1
0x149 SWAP2
0x14a SWAP1
0x14b POP
0x14c POP
0x14d PUSH2 0x3a7
0x150 JUMP
---
0x11c: JUMPDEST 
0x11d: V74 = 0x151
0x120: V75 = 0x4
0x124: V76 = CALLDATALOAD 0x4
0x125: V77 = 0xffffffffffffffffffffffffffffffffffffffff
0x13a: V78 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0x13c: V79 = 0x20
0x13e: V80 = ADD 0x20 0x4
0x143: V81 = CALLDATALOAD 0x24
0x145: V82 = 0x20
0x147: V83 = ADD 0x20 0x24
0x14d: V84 = 0x3a7
0x150: JUMP 0x3a7
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x151, V78, V81]
Exit stack: [V10, 0x151, V78, V81]

================================

Block 0x151
[0x151:0x152]
---
Predecessors: [0x4e2]
Successors: []
---
0x151 JUMPDEST
0x152 STOP
---
0x151: JUMPDEST 
0x152: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x153
[0x153:0x159]
---
Predecessors: [0x4a]
Successors: [0x15a, 0x15e]
---
0x153 JUMPDEST
0x154 CALLVALUE
0x155 ISZERO
0x156 PUSH2 0x15e
0x159 JUMPI
---
0x153: JUMPDEST 
0x154: V85 = CALLVALUE
0x155: V86 = ISZERO V85
0x156: V87 = 0x15e
0x159: JUMPI 0x15e V86
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x15a
[0x15a:0x15d]
---
Predecessors: [0x153]
Successors: []
---
0x15a PUSH1 0x0
0x15c DUP1
0x15d REVERT
---
0x15a: V88 = 0x0
0x15d: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x15e
[0x15e:0x165]
---
Predecessors: [0x153]
Successors: [0x4e6]
---
0x15e JUMPDEST
0x15f PUSH2 0x166
0x162 PUSH2 0x4e6
0x165 JUMP
---
0x15e: JUMPDEST 
0x15f: V89 = 0x166
0x162: V90 = 0x4e6
0x165: JUMP 0x4e6
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x166]
Exit stack: [V10, 0x166]

================================

Block 0x166
[0x166:0x167]
---
Predecessors: [0x650]
Successors: []
---
0x166 JUMPDEST
0x167 STOP
---
0x166: JUMPDEST 
0x167: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x168
[0x168:0x16e]
---
Predecessors: [0x55]
Successors: [0x16f, 0x173]
---
0x168 JUMPDEST
0x169 CALLVALUE
0x16a ISZERO
0x16b PUSH2 0x173
0x16e JUMPI
---
0x168: JUMPDEST 
0x169: V91 = CALLVALUE
0x16a: V92 = ISZERO V91
0x16b: V93 = 0x173
0x16e: JUMPI 0x173 V92
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x16f
[0x16f:0x172]
---
Predecessors: [0x168]
Successors: []
---
0x16f PUSH1 0x0
0x171 DUP1
0x172 REVERT
---
0x16f: V94 = 0x0
0x172: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x173
[0x173:0x17a]
---
Predecessors: [0x168]
Successors: [0x652]
---
0x173 JUMPDEST
0x174 PUSH2 0x17b
0x177 PUSH2 0x652
0x17a JUMP
---
0x173: JUMPDEST 
0x174: V95 = 0x17b
0x177: V96 = 0x652
0x17a: JUMP 0x652
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x17b]
Exit stack: [V10, 0x17b]

================================

Block 0x17b
[0x17b:0x1bc]
---
Predecessors: [0x652]
Successors: []
---
0x17b JUMPDEST
0x17c PUSH1 0x40
0x17e MLOAD
0x17f DUP1
0x180 DUP3
0x181 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x196 AND
0x197 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ac AND
0x1ad DUP2
0x1ae MSTORE
0x1af PUSH1 0x20
0x1b1 ADD
0x1b2 SWAP2
0x1b3 POP
0x1b4 POP
0x1b5 PUSH1 0x40
0x1b7 MLOAD
0x1b8 DUP1
0x1b9 SWAP2
0x1ba SUB
0x1bb SWAP1
0x1bc RETURN
---
0x17b: JUMPDEST 
0x17c: V97 = 0x40
0x17e: V98 = M[0x40]
0x181: V99 = 0xffffffffffffffffffffffffffffffffffffffff
0x196: V100 = AND 0xffffffffffffffffffffffffffffffffffffffff V468
0x197: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ac: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x1ae: M[V98] = V102
0x1af: V103 = 0x20
0x1b1: V104 = ADD 0x20 V98
0x1b5: V105 = 0x40
0x1b7: V106 = M[0x40]
0x1ba: V107 = SUB V104 V106
0x1bc: RETURN V106 V107
---
Entry stack: [V10, 0x17b, V468]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x17b]

================================

Block 0x1bd
[0x1bd:0x1c3]
---
Predecessors: [0x60]
Successors: [0x1c4, 0x1c8]
---
0x1bd JUMPDEST
0x1be CALLVALUE
0x1bf ISZERO
0x1c0 PUSH2 0x1c8
0x1c3 JUMPI
---
0x1bd: JUMPDEST 
0x1be: V108 = CALLVALUE
0x1bf: V109 = ISZERO V108
0x1c0: V110 = 0x1c8
0x1c3: JUMPI 0x1c8 V109
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1c4
[0x1c4:0x1c7]
---
Predecessors: [0x1bd]
Successors: []
---
0x1c4 PUSH1 0x0
0x1c6 DUP1
0x1c7 REVERT
---
0x1c4: V111 = 0x0
0x1c7: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1c8
[0x1c8:0x1df]
---
Predecessors: [0x1bd]
Successors: [0x678]
---
0x1c8 JUMPDEST
0x1c9 PUSH2 0x1e0
0x1cc PUSH1 0x4
0x1ce DUP1
0x1cf DUP1
0x1d0 CALLDATALOAD
0x1d1 ISZERO
0x1d2 ISZERO
0x1d3 SWAP1
0x1d4 PUSH1 0x20
0x1d6 ADD
0x1d7 SWAP1
0x1d8 SWAP2
0x1d9 SWAP1
0x1da POP
0x1db POP
0x1dc PUSH2 0x678
0x1df JUMP
---
0x1c8: JUMPDEST 
0x1c9: V112 = 0x1e0
0x1cc: V113 = 0x4
0x1d0: V114 = CALLDATALOAD 0x4
0x1d1: V115 = ISZERO V114
0x1d2: V116 = ISZERO V115
0x1d4: V117 = 0x20
0x1d6: V118 = ADD 0x20 0x4
0x1dc: V119 = 0x678
0x1df: JUMP 0x678
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1e0, V116]
Exit stack: [V10, 0x1e0, V116]

================================

Block 0x1e0
[0x1e0:0x1e1]
---
Predecessors: [0x74e]
Successors: []
---
0x1e0 JUMPDEST
0x1e1 STOP
---
0x1e0: JUMPDEST 
0x1e1: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1e2
[0x1e2:0x1e8]
---
Predecessors: [0x6b]
Successors: [0x1e9, 0x1ed]
---
0x1e2 JUMPDEST
0x1e3 CALLVALUE
0x1e4 ISZERO
0x1e5 PUSH2 0x1ed
0x1e8 JUMPI
---
0x1e2: JUMPDEST 
0x1e3: V120 = CALLVALUE
0x1e4: V121 = ISZERO V120
0x1e5: V122 = 0x1ed
0x1e8: JUMPI 0x1ed V121
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1e9
[0x1e9:0x1ec]
---
Predecessors: [0x1e2]
Successors: []
---
0x1e9 PUSH1 0x0
0x1eb DUP1
0x1ec REVERT
---
0x1e9: V123 = 0x0
0x1ec: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ed
[0x1ed:0x23c]
---
Predecessors: [0x1e2]
Successors: [0x751]
---
0x1ed JUMPDEST
0x1ee PUSH2 0x23d
0x1f1 PUSH1 0x4
0x1f3 DUP1
0x1f4 DUP1
0x1f5 CALLDATALOAD
0x1f6 SWAP1
0x1f7 PUSH1 0x20
0x1f9 ADD
0x1fa SWAP1
0x1fb DUP3
0x1fc ADD
0x1fd DUP1
0x1fe CALLDATALOAD
0x1ff SWAP1
0x200 PUSH1 0x20
0x202 ADD
0x203 SWAP1
0x204 DUP1
0x205 DUP1
0x206 PUSH1 0x1f
0x208 ADD
0x209 PUSH1 0x20
0x20b DUP1
0x20c SWAP2
0x20d DIV
0x20e MUL
0x20f PUSH1 0x20
0x211 ADD
0x212 PUSH1 0x40
0x214 MLOAD
0x215 SWAP1
0x216 DUP2
0x217 ADD
0x218 PUSH1 0x40
0x21a MSTORE
0x21b DUP1
0x21c SWAP4
0x21d SWAP3
0x21e SWAP2
0x21f SWAP1
0x220 DUP2
0x221 DUP2
0x222 MSTORE
0x223 PUSH1 0x20
0x225 ADD
0x226 DUP4
0x227 DUP4
0x228 DUP1
0x229 DUP3
0x22a DUP5
0x22b CALLDATACOPY
0x22c DUP3
0x22d ADD
0x22e SWAP2
0x22f POP
0x230 POP
0x231 POP
0x232 POP
0x233 POP
0x234 POP
0x235 SWAP2
0x236 SWAP1
0x237 POP
0x238 POP
0x239 PUSH2 0x751
0x23c JUMP
---
0x1ed: JUMPDEST 
0x1ee: V124 = 0x23d
0x1f1: V125 = 0x4
0x1f5: V126 = CALLDATALOAD 0x4
0x1f7: V127 = 0x20
0x1f9: V128 = ADD 0x20 0x4
0x1fc: V129 = ADD 0x4 V126
0x1fe: V130 = CALLDATALOAD V129
0x200: V131 = 0x20
0x202: V132 = ADD 0x20 V129
0x206: V133 = 0x1f
0x208: V134 = ADD 0x1f V130
0x209: V135 = 0x20
0x20d: V136 = DIV V134 0x20
0x20e: V137 = MUL V136 0x20
0x20f: V138 = 0x20
0x211: V139 = ADD 0x20 V137
0x212: V140 = 0x40
0x214: V141 = M[0x40]
0x217: V142 = ADD V141 V139
0x218: V143 = 0x40
0x21a: M[0x40] = V142
0x222: M[V141] = V130
0x223: V144 = 0x20
0x225: V145 = ADD 0x20 V141
0x22b: CALLDATACOPY V145 V132 V130
0x22d: V146 = ADD V145 V130
0x239: V147 = 0x751
0x23c: JUMP 0x751
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x23d, V141]
Exit stack: [V10, 0x23d, V141]

================================

Block 0x23d
[0x23d:0x23e]
---
Predecessors: [0x92c]
Successors: []
---
0x23d JUMPDEST
0x23e STOP
---
0x23d: JUMPDEST 
0x23e: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x23f
[0x23f:0x245]
---
Predecessors: [0x76]
Successors: [0x246, 0x24a]
---
0x23f JUMPDEST
0x240 CALLVALUE
0x241 ISZERO
0x242 PUSH2 0x24a
0x245 JUMPI
---
0x23f: JUMPDEST 
0x240: V148 = CALLVALUE
0x241: V149 = ISZERO V148
0x242: V150 = 0x24a
0x245: JUMPI 0x24a V149
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x246
[0x246:0x249]
---
Predecessors: [0x23f]
Successors: []
---
0x246 PUSH1 0x0
0x248 DUP1
0x249 REVERT
---
0x246: V151 = 0x0
0x249: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x24a
[0x24a:0x251]
---
Predecessors: [0x23f]
Successors: [0x930]
---
0x24a JUMPDEST
0x24b PUSH2 0x252
0x24e PUSH2 0x930
0x251 JUMP
---
0x24a: JUMPDEST 
0x24b: V152 = 0x252
0x24e: V153 = 0x930
0x251: JUMP 0x930
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x252]
Exit stack: [V10, 0x252]

================================

Block 0x252
[0x252:0x26b]
---
Predecessors: [0x930]
Successors: []
---
0x252 JUMPDEST
0x253 PUSH1 0x40
0x255 MLOAD
0x256 DUP1
0x257 DUP3
0x258 ISZERO
0x259 ISZERO
0x25a ISZERO
0x25b ISZERO
0x25c DUP2
0x25d MSTORE
0x25e PUSH1 0x20
0x260 ADD
0x261 SWAP2
0x262 POP
0x263 POP
0x264 PUSH1 0x40
0x266 MLOAD
0x267 DUP1
0x268 SWAP2
0x269 SUB
0x26a SWAP1
0x26b RETURN
---
0x252: JUMPDEST 
0x253: V154 = 0x40
0x255: V155 = M[0x40]
0x258: V156 = ISZERO V708
0x259: V157 = ISZERO V156
0x25a: V158 = ISZERO V157
0x25b: V159 = ISZERO V158
0x25d: M[V155] = V159
0x25e: V160 = 0x20
0x260: V161 = ADD 0x20 V155
0x264: V162 = 0x40
0x266: V163 = M[0x40]
0x269: V164 = SUB V161 V163
0x26b: RETURN V163 V164
---
Entry stack: [V10, 0x252, V708]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x252]

================================

Block 0x26c
[0x26c:0x272]
---
Predecessors: [0x81]
Successors: [0x273, 0x277]
---
0x26c JUMPDEST
0x26d CALLVALUE
0x26e ISZERO
0x26f PUSH2 0x277
0x272 JUMPI
---
0x26c: JUMPDEST 
0x26d: V165 = CALLVALUE
0x26e: V166 = ISZERO V165
0x26f: V167 = 0x277
0x272: JUMPI 0x277 V166
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x273
[0x273:0x276]
---
Predecessors: [0x26c]
Successors: []
---
0x273 PUSH1 0x0
0x275 DUP1
0x276 REVERT
---
0x273: V168 = 0x0
0x276: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x277
[0x277:0x29d]
---
Predecessors: [0x26c]
Successors: [0x943]
---
0x277 JUMPDEST
0x278 PUSH2 0x29e
0x27b PUSH1 0x4
0x27d DUP1
0x27e DUP1
0x27f CALLDATALOAD
0x280 PUSH1 0x0
0x282 NOT
0x283 AND
0x284 SWAP1
0x285 PUSH1 0x20
0x287 ADD
0x288 SWAP1
0x289 SWAP2
0x28a SWAP1
0x28b DUP1
0x28c CALLDATALOAD
0x28d PUSH1 0x0
0x28f NOT
0x290 AND
0x291 SWAP1
0x292 PUSH1 0x20
0x294 ADD
0x295 SWAP1
0x296 SWAP2
0x297 SWAP1
0x298 POP
0x299 POP
0x29a PUSH2 0x943
0x29d JUMP
---
0x277: JUMPDEST 
0x278: V169 = 0x29e
0x27b: V170 = 0x4
0x27f: V171 = CALLDATALOAD 0x4
0x280: V172 = 0x0
0x282: V173 = NOT 0x0
0x283: V174 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V171
0x285: V175 = 0x20
0x287: V176 = ADD 0x20 0x4
0x28c: V177 = CALLDATALOAD 0x24
0x28d: V178 = 0x0
0x28f: V179 = NOT 0x0
0x290: V180 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V177
0x292: V181 = 0x20
0x294: V182 = ADD 0x20 0x24
0x29a: V183 = 0x943
0x29d: JUMP 0x943
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x29e, V174, V180]
Exit stack: [V10, 0x29e, V174, V180]

================================

Block 0x29e
[0x29e:0x29f]
---
Predecessors: [0xa80]
Successors: []
---
0x29e JUMPDEST
0x29f STOP
---
0x29e: JUMPDEST 
0x29f: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2a0
[0x2a0:0x2b6]
---
Predecessors: [0xcf]
Successors: [0x2b7, 0x2c3]
---
0x2a0 JUMPDEST
0x2a1 PUSH1 0x12
0x2a3 PUSH1 0x0
0x2a5 SWAP1
0x2a6 SLOAD
0x2a7 SWAP1
0x2a8 PUSH2 0x100
0x2ab EXP
0x2ac SWAP1
0x2ad DIV
0x2ae PUSH1 0xff
0x2b0 AND
0x2b1 ISZERO
0x2b2 DUP1
0x2b3 PUSH2 0x2c3
0x2b6 JUMPI
---
0x2a0: JUMPDEST 
0x2a1: V184 = 0x12
0x2a3: V185 = 0x0
0x2a6: V186 = S[0x12]
0x2a8: V187 = 0x100
0x2ab: V188 = EXP 0x100 0x0
0x2ad: V189 = DIV V186 0x1
0x2ae: V190 = 0xff
0x2b0: V191 = AND 0xff V189
0x2b1: V192 = ISZERO V191
0x2b3: V193 = 0x2c3
0x2b6: JUMPI 0x2c3 V192
---
Entry stack: [V10, 0x11a, V65, V70]
Stack pops: 0
Stack additions: [V192]
Exit stack: [V10, 0x11a, V65, V70, V192]

================================

Block 0x2b7
[0x2b7:0x2c2]
---
Predecessors: [0x2a0]
Successors: [0x2c3]
---
0x2b7 POP
0x2b8 PUSH3 0x506b80
0x2bc PUSH1 0x11
0x2be SLOAD
0x2bf ADD
0x2c0 TIMESTAMP
0x2c1 GT
0x2c2 ISZERO
---
0x2b8: V194 = 0x506b80
0x2bc: V195 = 0x11
0x2be: V196 = S[0x11]
0x2bf: V197 = ADD V196 0x506b80
0x2c0: V198 = TIMESTAMP
0x2c1: V199 = GT V198 V197
0x2c2: V200 = ISZERO V199
---
Entry stack: [V10, 0x11a, V65, V70, V192]
Stack pops: 1
Stack additions: [V200]
Exit stack: [V10, 0x11a, V65, V70, V200]

================================

Block 0x2c3
[0x2c3:0x2c8]
---
Predecessors: [0x2a0, 0x2b7]
Successors: [0x2c9, 0x2cd]
---
0x2c3 JUMPDEST
0x2c4 ISZERO
0x2c5 PUSH2 0x2cd
0x2c8 JUMPI
---
0x2c3: JUMPDEST 
0x2c4: V201 = ISZERO S0
0x2c5: V202 = 0x2cd
0x2c8: JUMPI 0x2cd V201
---
Entry stack: [V10, 0x11a, V65, V70, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x11a, V65, V70]

================================

Block 0x2c9
[0x2c9:0x2cc]
---
Predecessors: [0x2c3]
Successors: [0x3a3]
---
0x2c9 PUSH2 0x3a3
0x2cc JUMP
---
0x2c9: V203 = 0x3a3
0x2cc: JUMP 0x3a3
---
Entry stack: [V10, 0x11a, V65, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x11a, V65, V70]

================================

Block 0x2cd
[0x2cd:0x2e2]
---
Predecessors: [0x2c3]
Successors: [0x2e3, 0x34b]
---
0x2cd JUMPDEST
0x2ce PUSH1 0x12
0x2d0 PUSH1 0x1
0x2d2 SWAP1
0x2d3 SLOAD
0x2d4 SWAP1
0x2d5 PUSH2 0x100
0x2d8 EXP
0x2d9 SWAP1
0x2da DIV
0x2db PUSH1 0xff
0x2dd AND
0x2de ISZERO
0x2df PUSH2 0x34b
0x2e2 JUMPI
---
0x2cd: JUMPDEST 
0x2ce: V204 = 0x12
0x2d0: V205 = 0x1
0x2d3: V206 = S[0x12]
0x2d5: V207 = 0x100
0x2d8: V208 = EXP 0x100 0x1
0x2da: V209 = DIV V206 0x100
0x2db: V210 = 0xff
0x2dd: V211 = AND 0xff V209
0x2de: V212 = ISZERO V211
0x2df: V213 = 0x34b
0x2e2: JUMPI 0x34b V212
---
Entry stack: [V10, 0x11a, V65, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x11a, V65, V70]

================================

Block 0x2e3
[0x2e3:0x345]
---
Predecessors: [0x2cd]
Successors: [0x346, 0x34a]
---
0x2e3 PUSH1 0x3
0x2e5 SLOAD
0x2e6 PUSH1 0x0
0x2e8 NOT
0x2e9 AND
0x2ea DUP2
0x2eb PUSH1 0x40
0x2ed MLOAD
0x2ee DUP1
0x2ef DUP3
0x2f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x305 AND
0x306 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x31b AND
0x31c PUSH13 0x1000000000000000000000000
0x32a MUL
0x32b DUP2
0x32c MSTORE
0x32d PUSH1 0x14
0x32f ADD
0x330 SWAP2
0x331 POP
0x332 POP
0x333 PUSH1 0x40
0x335 MLOAD
0x336 DUP1
0x337 SWAP2
0x338 SUB
0x339 SWAP1
0x33a SHA3
0x33b PUSH1 0x0
0x33d NOT
0x33e AND
0x33f EQ
0x340 ISZERO
0x341 ISZERO
0x342 PUSH2 0x34a
0x345 JUMPI
---
0x2e3: V214 = 0x3
0x2e5: V215 = S[0x3]
0x2e6: V216 = 0x0
0x2e8: V217 = NOT 0x0
0x2e9: V218 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V215
0x2eb: V219 = 0x40
0x2ed: V220 = M[0x40]
0x2f0: V221 = 0xffffffffffffffffffffffffffffffffffffffff
0x305: V222 = AND 0xffffffffffffffffffffffffffffffffffffffff V70
0x306: V223 = 0xffffffffffffffffffffffffffffffffffffffff
0x31b: V224 = AND 0xffffffffffffffffffffffffffffffffffffffff V222
0x31c: V225 = 0x1000000000000000000000000
0x32a: V226 = MUL 0x1000000000000000000000000 V224
0x32c: M[V220] = V226
0x32d: V227 = 0x14
0x32f: V228 = ADD 0x14 V220
0x333: V229 = 0x40
0x335: V230 = M[0x40]
0x338: V231 = SUB V228 V230
0x33a: V232 = SHA3 V230 V231
0x33b: V233 = 0x0
0x33d: V234 = NOT 0x0
0x33e: V235 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V232
0x33f: V236 = EQ V235 V218
0x340: V237 = ISZERO V236
0x341: V238 = ISZERO V237
0x342: V239 = 0x34a
0x345: JUMPI 0x34a V238
---
Entry stack: [V10, 0x11a, V65, V70]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x11a, V65, V70]

================================

Block 0x346
[0x346:0x349]
---
Predecessors: [0x2e3]
Successors: []
---
0x346 PUSH1 0x0
0x348 DUP1
0x349 REVERT
---
0x346: V240 = 0x0
0x349: REVERT 0x0 0x0
---
Entry stack: [V10, 0x11a, V65, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x11a, V65, V70]

================================

Block 0x34a
[0x34a:0x34a]
---
Predecessors: [0x2e3]
Successors: [0x34b]
---
0x34a JUMPDEST
---
0x34a: JUMPDEST 
---
Entry stack: [V10, 0x11a, V65, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x11a, V65, V70]

================================

Block 0x34b
[0x34b:0x39d]
---
Predecessors: [0x2cd, 0x34a]
Successors: [0x39e, 0x3a2]
---
0x34b JUMPDEST
0x34c DUP2
0x34d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x362 AND
0x363 PUSH2 0x8fc
0x366 ADDRESS
0x367 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x37c AND
0x37d BALANCE
0x37e SWAP1
0x37f DUP2
0x380 ISZERO
0x381 MUL
0x382 SWAP1
0x383 PUSH1 0x40
0x385 MLOAD
0x386 PUSH1 0x0
0x388 PUSH1 0x40
0x38a MLOAD
0x38b DUP1
0x38c DUP4
0x38d SUB
0x38e DUP2
0x38f DUP6
0x390 DUP9
0x391 DUP9
0x392 CALL
0x393 SWAP4
0x394 POP
0x395 POP
0x396 POP
0x397 POP
0x398 ISZERO
0x399 ISZERO
0x39a PUSH2 0x3a2
0x39d JUMPI
---
0x34b: JUMPDEST 
0x34d: V241 = 0xffffffffffffffffffffffffffffffffffffffff
0x362: V242 = AND 0xffffffffffffffffffffffffffffffffffffffff V65
0x363: V243 = 0x8fc
0x366: V244 = ADDRESS
0x367: V245 = 0xffffffffffffffffffffffffffffffffffffffff
0x37c: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff V244
0x37d: V247 = BALANCE V246
0x380: V248 = ISZERO V247
0x381: V249 = MUL V248 0x8fc
0x383: V250 = 0x40
0x385: V251 = M[0x40]
0x386: V252 = 0x0
0x388: V253 = 0x40
0x38a: V254 = M[0x40]
0x38d: V255 = SUB V251 V254
0x392: V256 = CALL V249 V242 V247 V254 V255 V254 0x0
0x398: V257 = ISZERO V256
0x399: V258 = ISZERO V257
0x39a: V259 = 0x3a2
0x39d: JUMPI 0x3a2 V258
---
Entry stack: [V10, 0x11a, V65, V70]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x11a, V65, V70]

================================

Block 0x39e
[0x39e:0x3a1]
---
Predecessors: [0x34b]
Successors: []
---
0x39e PUSH1 0x0
0x3a0 DUP1
0x3a1 REVERT
---
0x39e: V260 = 0x0
0x3a1: REVERT 0x0 0x0
---
Entry stack: [V10, 0x11a, V65, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x11a, V65, V70]

================================

Block 0x3a2
[0x3a2:0x3a2]
---
Predecessors: [0x34b]
Successors: [0x3a3]
---
0x3a2 JUMPDEST
---
0x3a2: JUMPDEST 
---
Entry stack: [V10, 0x11a, V65, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x11a, V65, V70]

================================

Block 0x3a3
[0x3a3:0x3a6]
---
Predecessors: [0x2c9, 0x3a2]
Successors: [0x11a]
---
0x3a3 JUMPDEST
0x3a4 POP
0x3a5 POP
0x3a6 JUMP
---
0x3a3: JUMPDEST 
0x3a6: JUMP 0x11a
---
Entry stack: [V10, 0x11a, V65, V70]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x3a7
[0x3a7:0x3fe]
---
Predecessors: [0x11c]
Successors: [0x3ff, 0x403]
---
0x3a7 JUMPDEST
0x3a8 PUSH1 0x2
0x3aa PUSH1 0x0
0x3ac SWAP1
0x3ad SLOAD
0x3ae SWAP1
0x3af PUSH2 0x100
0x3b2 EXP
0x3b3 SWAP1
0x3b4 DIV
0x3b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ca AND
0x3cb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e0 AND
0x3e1 CALLER
0x3e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f7 AND
0x3f8 EQ
0x3f9 ISZERO
0x3fa ISZERO
0x3fb PUSH2 0x403
0x3fe JUMPI
---
0x3a7: JUMPDEST 
0x3a8: V261 = 0x2
0x3aa: V262 = 0x0
0x3ad: V263 = S[0x2]
0x3af: V264 = 0x100
0x3b2: V265 = EXP 0x100 0x0
0x3b4: V266 = DIV V263 0x1
0x3b5: V267 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ca: V268 = AND 0xffffffffffffffffffffffffffffffffffffffff V266
0x3cb: V269 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e0: V270 = AND 0xffffffffffffffffffffffffffffffffffffffff V268
0x3e1: V271 = CALLER
0x3e2: V272 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f7: V273 = AND 0xffffffffffffffffffffffffffffffffffffffff V271
0x3f8: V274 = EQ V273 V270
0x3f9: V275 = ISZERO V274
0x3fa: V276 = ISZERO V275
0x3fb: V277 = 0x403
0x3fe: JUMPI 0x403 V276
---
Entry stack: [V10, 0x151, V78, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x151, V78, V81]

================================

Block 0x3ff
[0x3ff:0x402]
---
Predecessors: [0x3a7]
Successors: []
---
0x3ff PUSH1 0x0
0x401 DUP1
0x402 REVERT
---
0x3ff: V278 = 0x0
0x402: REVERT 0x0 0x0
---
Entry stack: [V10, 0x151, V78, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x151, V78, V81]

================================

Block 0x403
[0x403:0x40e]
---
Predecessors: [0x3a7]
Successors: [0x40f, 0x410]
---
0x403 JUMPDEST
0x404 PUSH1 0x0
0x406 PUSH1 0x2
0x408 DUP2
0x409 GT
0x40a ISZERO
0x40b PUSH2 0x410
0x40e JUMPI
---
0x403: JUMPDEST 
0x404: V279 = 0x0
0x406: V280 = 0x2
0x409: V281 = GT 0x0 0x2
0x40a: V282 = ISZERO 0x0
0x40b: V283 = 0x410
0x40e: JUMPI 0x410 0x1
---
Entry stack: [V10, 0x151, V78, V81]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x151, V78, V81, 0x0]

================================

Block 0x40f
[0x40f:0x40f]
---
Predecessors: [0x403]
Successors: []
---
0x40f INVALID
---
0x40f: INVALID 
---
Entry stack: [V10, 0x151, V78, V81, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x151, V78, V81, 0x0]

================================

Block 0x410
[0x410:0x429]
---
Predecessors: [0x403]
Successors: [0x42a, 0x42b]
---
0x410 JUMPDEST
0x411 PUSH1 0x12
0x413 PUSH1 0x2
0x415 SWAP1
0x416 SLOAD
0x417 SWAP1
0x418 PUSH2 0x100
0x41b EXP
0x41c SWAP1
0x41d DIV
0x41e PUSH1 0xff
0x420 AND
0x421 PUSH1 0x2
0x423 DUP2
0x424 GT
0x425 ISZERO
0x426 PUSH2 0x42b
0x429 JUMPI
---
0x410: JUMPDEST 
0x411: V284 = 0x12
0x413: V285 = 0x2
0x416: V286 = S[0x12]
0x418: V287 = 0x100
0x41b: V288 = EXP 0x100 0x2
0x41d: V289 = DIV V286 0x10000
0x41e: V290 = 0xff
0x420: V291 = AND 0xff V289
0x421: V292 = 0x2
0x424: V293 = GT V291 0x2
0x425: V294 = ISZERO V293
0x426: V295 = 0x42b
0x429: JUMPI 0x42b V294
---
Entry stack: [V10, 0x151, V78, V81, 0x0]
Stack pops: 0
Stack additions: [V291]
Exit stack: [V10, 0x151, V78, V81, 0x0, V291]

================================

Block 0x42a
[0x42a:0x42a]
---
Predecessors: [0x410]
Successors: []
---
0x42a INVALID
---
0x42a: INVALID 
---
Entry stack: [V10, 0x151, V78, V81, 0x0, V291]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x151, V78, V81, 0x0, V291]

================================

Block 0x42b
[0x42b:0x432]
---
Predecessors: [0x410]
Successors: [0x433, 0x437]
---
0x42b JUMPDEST
0x42c EQ
0x42d ISZERO
0x42e ISZERO
0x42f PUSH2 0x437
0x432 JUMPI
---
0x42b: JUMPDEST 
0x42c: V296 = EQ V291 0x0
0x42d: V297 = ISZERO V296
0x42e: V298 = ISZERO V297
0x42f: V299 = 0x437
0x432: JUMPI 0x437 V298
---
Entry stack: [V10, 0x151, V78, V81, 0x0, V291]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x151, V78, V81]

================================

Block 0x433
[0x433:0x436]
---
Predecessors: [0x42b]
Successors: []
---
0x433 PUSH1 0x0
0x435 DUP1
0x436 REVERT
---
0x433: V300 = 0x0
0x436: REVERT 0x0 0x0
---
Entry stack: [V10, 0x151, V78, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x151, V78, V81]

================================

Block 0x437
[0x437:0x458]
---
Predecessors: [0x42b]
Successors: [0x459, 0x45d]
---
0x437 JUMPDEST
0x438 ADDRESS
0x439 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x44e AND
0x44f BALANCE
0x450 DUP2
0x451 GT
0x452 ISZERO
0x453 ISZERO
0x454 ISZERO
0x455 PUSH2 0x45d
0x458 JUMPI
---
0x437: JUMPDEST 
0x438: V301 = ADDRESS
0x439: V302 = 0xffffffffffffffffffffffffffffffffffffffff
0x44e: V303 = AND 0xffffffffffffffffffffffffffffffffffffffff V301
0x44f: V304 = BALANCE V303
0x451: V305 = GT V81 V304
0x452: V306 = ISZERO V305
0x453: V307 = ISZERO V306
0x454: V308 = ISZERO V307
0x455: V309 = 0x45d
0x458: JUMPI 0x45d V308
---
Entry stack: [V10, 0x151, V78, V81]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x151, V78, V81]

================================

Block 0x459
[0x459:0x45c]
---
Predecessors: [0x437]
Successors: []
---
0x459 PUSH1 0x0
0x45b DUP1
0x45c REVERT
---
0x459: V310 = 0x0
0x45c: REVERT 0x0 0x0
---
Entry stack: [V10, 0x151, V78, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x151, V78, V81]

================================

Block 0x45d
[0x45d:0x494]
---
Predecessors: [0x437]
Successors: [0x495, 0x499]
---
0x45d JUMPDEST
0x45e PUSH1 0x0
0x460 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x475 AND
0x476 DUP3
0x477 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x48c AND
0x48d EQ
0x48e ISZERO
0x48f ISZERO
0x490 ISZERO
0x491 PUSH2 0x499
0x494 JUMPI
---
0x45d: JUMPDEST 
0x45e: V311 = 0x0
0x460: V312 = 0xffffffffffffffffffffffffffffffffffffffff
0x475: V313 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x477: V314 = 0xffffffffffffffffffffffffffffffffffffffff
0x48c: V315 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x48d: V316 = EQ V315 0x0
0x48e: V317 = ISZERO V316
0x48f: V318 = ISZERO V317
0x490: V319 = ISZERO V318
0x491: V320 = 0x499
0x494: JUMPI 0x499 V319
---
Entry stack: [V10, 0x151, V78, V81]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x151, V78, V81]

================================

Block 0x495
[0x495:0x498]
---
Predecessors: [0x45d]
Successors: []
---
0x495 PUSH1 0x0
0x497 DUP1
0x498 REVERT
---
0x495: V321 = 0x0
0x498: REVERT 0x0 0x0
---
Entry stack: [V10, 0x151, V78, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x151, V78, V81]

================================

Block 0x499
[0x499:0x4d4]
---
Predecessors: [0x45d]
Successors: [0x4d5, 0x4d9]
---
0x499 JUMPDEST
0x49a DUP2
0x49b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4b0 AND
0x4b1 PUSH2 0x8fc
0x4b4 DUP3
0x4b5 SWAP1
0x4b6 DUP2
0x4b7 ISZERO
0x4b8 MUL
0x4b9 SWAP1
0x4ba PUSH1 0x40
0x4bc MLOAD
0x4bd PUSH1 0x0
0x4bf PUSH1 0x40
0x4c1 MLOAD
0x4c2 DUP1
0x4c3 DUP4
0x4c4 SUB
0x4c5 DUP2
0x4c6 DUP6
0x4c7 DUP9
0x4c8 DUP9
0x4c9 CALL
0x4ca SWAP4
0x4cb POP
0x4cc POP
0x4cd POP
0x4ce POP
0x4cf ISZERO
0x4d0 ISZERO
0x4d1 PUSH2 0x4d9
0x4d4 JUMPI
---
0x499: JUMPDEST 
0x49b: V322 = 0xffffffffffffffffffffffffffffffffffffffff
0x4b0: V323 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x4b1: V324 = 0x8fc
0x4b7: V325 = ISZERO V81
0x4b8: V326 = MUL V325 0x8fc
0x4ba: V327 = 0x40
0x4bc: V328 = M[0x40]
0x4bd: V329 = 0x0
0x4bf: V330 = 0x40
0x4c1: V331 = M[0x40]
0x4c4: V332 = SUB V328 V331
0x4c9: V333 = CALL V326 V323 V81 V331 V332 V331 0x0
0x4cf: V334 = ISZERO V333
0x4d0: V335 = ISZERO V334
0x4d1: V336 = 0x4d9
0x4d4: JUMPI 0x4d9 V335
---
Entry stack: [V10, 0x151, V78, V81]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x151, V78, V81]

================================

Block 0x4d5
[0x4d5:0x4d8]
---
Predecessors: [0x499]
Successors: []
---
0x4d5 PUSH1 0x0
0x4d7 DUP1
0x4d8 REVERT
---
0x4d5: V337 = 0x0
0x4d8: REVERT 0x0 0x0
---
Entry stack: [V10, 0x151, V78, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x151, V78, V81]

================================

Block 0x4d9
[0x4d9:0x4e0]
---
Predecessors: [0x499]
Successors: [0x4e1]
---
0x4d9 JUMPDEST
0x4da TIMESTAMP
0x4db PUSH1 0x11
0x4dd DUP2
0x4de SWAP1
0x4df SSTORE
0x4e0 POP
---
0x4d9: JUMPDEST 
0x4da: V338 = TIMESTAMP
0x4db: V339 = 0x11
0x4df: S[0x11] = V338
---
Entry stack: [V10, 0x151, V78, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x151, V78, V81]

================================

Block 0x4e1
[0x4e1:0x4e1]
---
Predecessors: [0x4d9]
Successors: [0x4e2]
---
0x4e1 JUMPDEST
---
0x4e1: JUMPDEST 
---
Entry stack: [V10, 0x151, V78, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x151, V78, V81]

================================

Block 0x4e2
[0x4e2:0x4e5]
---
Predecessors: [0x4e1]
Successors: [0x151]
---
0x4e2 JUMPDEST
0x4e3 POP
0x4e4 POP
0x4e5 JUMP
---
0x4e2: JUMPDEST 
0x4e5: JUMP 0x151
---
Entry stack: [V10, 0x151, V78, V81]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x4e6
[0x4e6:0x549]
---
Predecessors: [0x15e]
Successors: [0x54a, 0x54e]
---
0x4e6 JUMPDEST
0x4e7 PUSH1 0x3
0x4e9 SLOAD
0x4ea PUSH1 0x0
0x4ec NOT
0x4ed AND
0x4ee CALLER
0x4ef PUSH1 0x40
0x4f1 MLOAD
0x4f2 DUP1
0x4f3 DUP3
0x4f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x509 AND
0x50a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x51f AND
0x520 PUSH13 0x1000000000000000000000000
0x52e MUL
0x52f DUP2
0x530 MSTORE
0x531 PUSH1 0x14
0x533 ADD
0x534 SWAP2
0x535 POP
0x536 POP
0x537 PUSH1 0x40
0x539 MLOAD
0x53a DUP1
0x53b SWAP2
0x53c SUB
0x53d SWAP1
0x53e SHA3
0x53f PUSH1 0x0
0x541 NOT
0x542 AND
0x543 EQ
0x544 ISZERO
0x545 ISZERO
0x546 PUSH2 0x54e
0x549 JUMPI
---
0x4e6: JUMPDEST 
0x4e7: V340 = 0x3
0x4e9: V341 = S[0x3]
0x4ea: V342 = 0x0
0x4ec: V343 = NOT 0x0
0x4ed: V344 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V341
0x4ee: V345 = CALLER
0x4ef: V346 = 0x40
0x4f1: V347 = M[0x40]
0x4f4: V348 = 0xffffffffffffffffffffffffffffffffffffffff
0x509: V349 = AND 0xffffffffffffffffffffffffffffffffffffffff V345
0x50a: V350 = 0xffffffffffffffffffffffffffffffffffffffff
0x51f: V351 = AND 0xffffffffffffffffffffffffffffffffffffffff V349
0x520: V352 = 0x1000000000000000000000000
0x52e: V353 = MUL 0x1000000000000000000000000 V351
0x530: M[V347] = V353
0x531: V354 = 0x14
0x533: V355 = ADD 0x14 V347
0x537: V356 = 0x40
0x539: V357 = M[0x40]
0x53c: V358 = SUB V355 V357
0x53e: V359 = SHA3 V357 V358
0x53f: V360 = 0x0
0x541: V361 = NOT 0x0
0x542: V362 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V359
0x543: V363 = EQ V362 V344
0x544: V364 = ISZERO V363
0x545: V365 = ISZERO V364
0x546: V366 = 0x54e
0x549: JUMPI 0x54e V365
---
Entry stack: [V10, 0x166]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x166]

================================

Block 0x54a
[0x54a:0x54d]
---
Predecessors: [0x4e6]
Successors: []
---
0x54a PUSH1 0x0
0x54c DUP1
0x54d REVERT
---
0x54a: V367 = 0x0
0x54d: REVERT 0x0 0x0
---
Entry stack: [V10, 0x166]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x166]

================================

Block 0x54e
[0x54e:0x559]
---
Predecessors: [0x4e6]
Successors: [0x55a, 0x55b]
---
0x54e JUMPDEST
0x54f PUSH1 0x1
0x551 PUSH1 0x2
0x553 DUP2
0x554 GT
0x555 ISZERO
0x556 PUSH2 0x55b
0x559 JUMPI
---
0x54e: JUMPDEST 
0x54f: V368 = 0x1
0x551: V369 = 0x2
0x554: V370 = GT 0x1 0x2
0x555: V371 = ISZERO 0x0
0x556: V372 = 0x55b
0x559: JUMPI 0x55b 0x1
---
Entry stack: [V10, 0x166]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V10, 0x166, 0x1]

================================

Block 0x55a
[0x55a:0x55a]
---
Predecessors: [0x54e]
Successors: []
---
0x55a INVALID
---
0x55a: INVALID 
---
Entry stack: [V10, 0x166, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x166, 0x1]

================================

Block 0x55b
[0x55b:0x574]
---
Predecessors: [0x54e]
Successors: [0x575, 0x576]
---
0x55b JUMPDEST
0x55c PUSH1 0x12
0x55e PUSH1 0x2
0x560 SWAP1
0x561 SLOAD
0x562 SWAP1
0x563 PUSH2 0x100
0x566 EXP
0x567 SWAP1
0x568 DIV
0x569 PUSH1 0xff
0x56b AND
0x56c PUSH1 0x2
0x56e DUP2
0x56f GT
0x570 ISZERO
0x571 PUSH2 0x576
0x574 JUMPI
---
0x55b: JUMPDEST 
0x55c: V373 = 0x12
0x55e: V374 = 0x2
0x561: V375 = S[0x12]
0x563: V376 = 0x100
0x566: V377 = EXP 0x100 0x2
0x568: V378 = DIV V375 0x10000
0x569: V379 = 0xff
0x56b: V380 = AND 0xff V378
0x56c: V381 = 0x2
0x56f: V382 = GT V380 0x2
0x570: V383 = ISZERO V382
0x571: V384 = 0x576
0x574: JUMPI 0x576 V383
---
Entry stack: [V10, 0x166, 0x1]
Stack pops: 0
Stack additions: [V380]
Exit stack: [V10, 0x166, 0x1, V380]

================================

Block 0x575
[0x575:0x575]
---
Predecessors: [0x55b]
Successors: []
---
0x575 INVALID
---
0x575: INVALID 
---
Entry stack: [V10, 0x166, 0x1, V380]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x166, 0x1, V380]

================================

Block 0x576
[0x576:0x57d]
---
Predecessors: [0x55b]
Successors: [0x57e, 0x5ad]
---
0x576 JUMPDEST
0x577 EQ
0x578 ISZERO
0x579 ISZERO
0x57a PUSH2 0x5ad
0x57d JUMPI
---
0x576: JUMPDEST 
0x577: V385 = EQ V380 0x1
0x578: V386 = ISZERO V385
0x579: V387 = ISZERO V386
0x57a: V388 = 0x5ad
0x57d: JUMPI 0x5ad V387
---
Entry stack: [V10, 0x166, 0x1, V380]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x166]

================================

Block 0x57e
[0x57e:0x5a1]
---
Predecessors: [0x576]
Successors: [0x5a2, 0x5a3]
---
0x57e TIMESTAMP
0x57f PUSH1 0xf
0x581 DUP2
0x582 SWAP1
0x583 SSTORE
0x584 POP
0x585 PUSH1 0x1
0x587 PUSH1 0x12
0x589 PUSH1 0x2
0x58b PUSH2 0x100
0x58e EXP
0x58f DUP2
0x590 SLOAD
0x591 DUP2
0x592 PUSH1 0xff
0x594 MUL
0x595 NOT
0x596 AND
0x597 SWAP1
0x598 DUP4
0x599 PUSH1 0x2
0x59b DUP2
0x59c GT
0x59d ISZERO
0x59e PUSH2 0x5a3
0x5a1 JUMPI
---
0x57e: V389 = TIMESTAMP
0x57f: V390 = 0xf
0x583: S[0xf] = V389
0x585: V391 = 0x1
0x587: V392 = 0x12
0x589: V393 = 0x2
0x58b: V394 = 0x100
0x58e: V395 = EXP 0x100 0x2
0x590: V396 = S[0x12]
0x592: V397 = 0xff
0x594: V398 = MUL 0xff 0x10000
0x595: V399 = NOT 0xff0000
0x596: V400 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff V396
0x599: V401 = 0x2
0x59c: V402 = GT 0x1 0x2
0x59d: V403 = ISZERO 0x0
0x59e: V404 = 0x5a3
0x5a1: JUMPI 0x5a3 0x1
---
Entry stack: [V10, 0x166]
Stack pops: 0
Stack additions: [0x1, 0x12, V400, 0x10000, 0x1]
Exit stack: [V10, 0x166, 0x1, 0x12, V400, 0x10000, 0x1]

================================

Block 0x5a2
[0x5a2:0x5a2]
---
Predecessors: [0x57e]
Successors: []
---
0x5a2 INVALID
---
0x5a2: INVALID 
---
Entry stack: [V10, 0x166, 0x1, 0x12, V400, 0x10000, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x166, 0x1, 0x12, V400, 0x10000, 0x1]

================================

Block 0x5a3
[0x5a3:0x5ac]
---
Predecessors: [0x57e]
Successors: [0x64f]
---
0x5a3 JUMPDEST
0x5a4 MUL
0x5a5 OR
0x5a6 SWAP1
0x5a7 SSTORE
0x5a8 POP
0x5a9 PUSH2 0x64f
0x5ac JUMP
---
0x5a3: JUMPDEST 
0x5a4: V405 = MUL 0x1 0x10000
0x5a5: V406 = OR 0x10000 V400
0x5a7: S[0x12] = V406
0x5a9: V407 = 0x64f
0x5ac: JUMP 0x64f
---
Entry stack: [V10, 0x166, 0x1, 0x12, V400, 0x10000, 0x1]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x166]

================================

Block 0x5ad
[0x5ad:0x5bd]
---
Predecessors: [0x576]
Successors: [0x5be, 0x5c2]
---
0x5ad JUMPDEST
0x5ae PUSH3 0x15180
0x5b2 PUSH1 0xf
0x5b4 SLOAD
0x5b5 ADD
0x5b6 TIMESTAMP
0x5b7 GT
0x5b8 ISZERO
0x5b9 ISZERO
0x5ba PUSH2 0x5c2
0x5bd JUMPI
---
0x5ad: JUMPDEST 
0x5ae: V408 = 0x15180
0x5b2: V409 = 0xf
0x5b4: V410 = S[0xf]
0x5b5: V411 = ADD V410 0x15180
0x5b6: V412 = TIMESTAMP
0x5b7: V413 = GT V412 V411
0x5b8: V414 = ISZERO V413
0x5b9: V415 = ISZERO V414
0x5ba: V416 = 0x5c2
0x5bd: JUMPI 0x5c2 V415
---
Entry stack: [V10, 0x166]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x166]

================================

Block 0x5be
[0x5be:0x5c1]
---
Predecessors: [0x5ad]
Successors: [0x64f]
---
0x5be PUSH2 0x64f
0x5c1 JUMP
---
0x5be: V417 = 0x64f
0x5c1: JUMP 0x64f
---
Entry stack: [V10, 0x166]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x166]

================================

Block 0x5c2
[0x5c2:0x5c2]
---
Predecessors: [0x5ad]
Successors: [0x5c3]
---
0x5c2 JUMPDEST
---
0x5c2: JUMPDEST 
---
Entry stack: [V10, 0x166]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x166]

================================

Block 0x5c3
[0x5c3:0x5ce]
---
Predecessors: [0x5c2]
Successors: [0x5cf, 0x5d0]
---
0x5c3 JUMPDEST
0x5c4 PUSH1 0x1
0x5c6 PUSH1 0x2
0x5c8 DUP2
0x5c9 GT
0x5ca ISZERO
0x5cb PUSH2 0x5d0
0x5ce JUMPI
---
0x5c3: JUMPDEST 
0x5c4: V418 = 0x1
0x5c6: V419 = 0x2
0x5c9: V420 = GT 0x1 0x2
0x5ca: V421 = ISZERO 0x0
0x5cb: V422 = 0x5d0
0x5ce: JUMPI 0x5d0 0x1
---
Entry stack: [V10, 0x166]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V10, 0x166, 0x1]

================================

Block 0x5cf
[0x5cf:0x5cf]
---
Predecessors: [0x5c3]
Successors: []
---
0x5cf INVALID
---
0x5cf: INVALID 
---
Entry stack: [V10, 0x166, 0x1]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x166, 0x1]

================================

Block 0x5d0
[0x5d0:0x5e9]
---
Predecessors: [0x5c3]
Successors: [0x5ea, 0x5eb]
---
0x5d0 JUMPDEST
0x5d1 PUSH1 0x12
0x5d3 PUSH1 0x2
0x5d5 SWAP1
0x5d6 SLOAD
0x5d7 SWAP1
0x5d8 PUSH2 0x100
0x5db EXP
0x5dc SWAP1
0x5dd DIV
0x5de PUSH1 0xff
0x5e0 AND
0x5e1 PUSH1 0x2
0x5e3 DUP2
0x5e4 GT
0x5e5 ISZERO
0x5e6 PUSH2 0x5eb
0x5e9 JUMPI
---
0x5d0: JUMPDEST 
0x5d1: V423 = 0x12
0x5d3: V424 = 0x2
0x5d6: V425 = S[0x12]
0x5d8: V426 = 0x100
0x5db: V427 = EXP 0x100 0x2
0x5dd: V428 = DIV V425 0x10000
0x5de: V429 = 0xff
0x5e0: V430 = AND 0xff V428
0x5e1: V431 = 0x2
0x5e4: V432 = GT V430 0x2
0x5e5: V433 = ISZERO V432
0x5e6: V434 = 0x5eb
0x5e9: JUMPI 0x5eb V433
---
Entry stack: [V10, 0x166, 0x1]
Stack pops: 0
Stack additions: [V430]
Exit stack: [V10, 0x166, 0x1, V430]

================================

Block 0x5ea
[0x5ea:0x5ea]
---
Predecessors: [0x5d0]
Successors: []
---
0x5ea INVALID
---
0x5ea: INVALID 
---
Entry stack: [V10, 0x166, 0x1, V430]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x166, 0x1, V430]

================================

Block 0x5eb
[0x5eb:0x5f2]
---
Predecessors: [0x5d0]
Successors: [0x5f3, 0x5f7]
---
0x5eb JUMPDEST
0x5ec EQ
0x5ed ISZERO
0x5ee ISZERO
0x5ef PUSH2 0x5f7
0x5f2 JUMPI
---
0x5eb: JUMPDEST 
0x5ec: V435 = EQ V430 0x1
0x5ed: V436 = ISZERO V435
0x5ee: V437 = ISZERO V436
0x5ef: V438 = 0x5f7
0x5f2: JUMPI 0x5f7 V437
---
Entry stack: [V10, 0x166, 0x1, V430]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x166]

================================

Block 0x5f3
[0x5f3:0x5f6]
---
Predecessors: [0x5eb]
Successors: []
---
0x5f3 PUSH1 0x0
0x5f5 DUP1
0x5f6 REVERT
---
0x5f3: V439 = 0x0
0x5f6: REVERT 0x0 0x0
---
Entry stack: [V10, 0x166]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x166]

================================

Block 0x5f7
[0x5f7:0x649]
---
Predecessors: [0x5eb]
Successors: [0x64a, 0x64e]
---
0x5f7 JUMPDEST
0x5f8 CALLER
0x5f9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x60e AND
0x60f PUSH2 0x8fc
0x612 ADDRESS
0x613 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x628 AND
0x629 BALANCE
0x62a SWAP1
0x62b DUP2
0x62c ISZERO
0x62d MUL
0x62e SWAP1
0x62f PUSH1 0x40
0x631 MLOAD
0x632 PUSH1 0x0
0x634 PUSH1 0x40
0x636 MLOAD
0x637 DUP1
0x638 DUP4
0x639 SUB
0x63a DUP2
0x63b DUP6
0x63c DUP9
0x63d DUP9
0x63e CALL
0x63f SWAP4
0x640 POP
0x641 POP
0x642 POP
0x643 POP
0x644 ISZERO
0x645 ISZERO
0x646 PUSH2 0x64e
0x649 JUMPI
---
0x5f7: JUMPDEST 
0x5f8: V440 = CALLER
0x5f9: V441 = 0xffffffffffffffffffffffffffffffffffffffff
0x60e: V442 = AND 0xffffffffffffffffffffffffffffffffffffffff V440
0x60f: V443 = 0x8fc
0x612: V444 = ADDRESS
0x613: V445 = 0xffffffffffffffffffffffffffffffffffffffff
0x628: V446 = AND 0xffffffffffffffffffffffffffffffffffffffff V444
0x629: V447 = BALANCE V446
0x62c: V448 = ISZERO V447
0x62d: V449 = MUL V448 0x8fc
0x62f: V450 = 0x40
0x631: V451 = M[0x40]
0x632: V452 = 0x0
0x634: V453 = 0x40
0x636: V454 = M[0x40]
0x639: V455 = SUB V451 V454
0x63e: V456 = CALL V449 V442 V447 V454 V455 V454 0x0
0x644: V457 = ISZERO V456
0x645: V458 = ISZERO V457
0x646: V459 = 0x64e
0x649: JUMPI 0x64e V458
---
Entry stack: [V10, 0x166]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x166]

================================

Block 0x64a
[0x64a:0x64d]
---
Predecessors: [0x5f7]
Successors: []
---
0x64a PUSH1 0x0
0x64c DUP1
0x64d REVERT
---
0x64a: V460 = 0x0
0x64d: REVERT 0x0 0x0
---
Entry stack: [V10, 0x166]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x166]

================================

Block 0x64e
[0x64e:0x64e]
---
Predecessors: [0x5f7]
Successors: [0x64f]
---
0x64e JUMPDEST
---
0x64e: JUMPDEST 
---
Entry stack: [V10, 0x166]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x166]

================================

Block 0x64f
[0x64f:0x64f]
---
Predecessors: [0x5a3, 0x5be, 0x64e]
Successors: [0x650]
---
0x64f JUMPDEST
---
0x64f: JUMPDEST 
---
Entry stack: [V10, 0x166]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x166]

================================

Block 0x650
[0x650:0x651]
---
Predecessors: [0x64f]
Successors: [0x166]
---
0x650 JUMPDEST
0x651 JUMP
---
0x650: JUMPDEST 
0x651: JUMP 0x166
---
Entry stack: [V10, 0x166]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x652
[0x652:0x677]
---
Predecessors: [0x173]
Successors: [0x17b]
---
0x652 JUMPDEST
0x653 PUSH1 0x2
0x655 PUSH1 0x0
0x657 SWAP1
0x658 SLOAD
0x659 SWAP1
0x65a PUSH2 0x100
0x65d EXP
0x65e SWAP1
0x65f DIV
0x660 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x675 AND
0x676 DUP2
0x677 JUMP
---
0x652: JUMPDEST 
0x653: V461 = 0x2
0x655: V462 = 0x0
0x658: V463 = S[0x2]
0x65a: V464 = 0x100
0x65d: V465 = EXP 0x100 0x0
0x65f: V466 = DIV V463 0x1
0x660: V467 = 0xffffffffffffffffffffffffffffffffffffffff
0x675: V468 = AND 0xffffffffffffffffffffffffffffffffffffffff V466
0x677: JUMP 0x17b
---
Entry stack: [V10, 0x17b]
Stack pops: 1
Stack additions: [S0, V468]
Exit stack: [V10, 0x17b, V468]

================================

Block 0x678
[0x678:0x6cf]
---
Predecessors: [0x1c8]
Successors: [0x6d0, 0x6d4]
---
0x678 JUMPDEST
0x679 PUSH1 0x2
0x67b PUSH1 0x0
0x67d SWAP1
0x67e SLOAD
0x67f SWAP1
0x680 PUSH2 0x100
0x683 EXP
0x684 SWAP1
0x685 DIV
0x686 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x69b AND
0x69c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6b1 AND
0x6b2 CALLER
0x6b3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6c8 AND
0x6c9 EQ
0x6ca ISZERO
0x6cb ISZERO
0x6cc PUSH2 0x6d4
0x6cf JUMPI
---
0x678: JUMPDEST 
0x679: V469 = 0x2
0x67b: V470 = 0x0
0x67e: V471 = S[0x2]
0x680: V472 = 0x100
0x683: V473 = EXP 0x100 0x0
0x685: V474 = DIV V471 0x1
0x686: V475 = 0xffffffffffffffffffffffffffffffffffffffff
0x69b: V476 = AND 0xffffffffffffffffffffffffffffffffffffffff V474
0x69c: V477 = 0xffffffffffffffffffffffffffffffffffffffff
0x6b1: V478 = AND 0xffffffffffffffffffffffffffffffffffffffff V476
0x6b2: V479 = CALLER
0x6b3: V480 = 0xffffffffffffffffffffffffffffffffffffffff
0x6c8: V481 = AND 0xffffffffffffffffffffffffffffffffffffffff V479
0x6c9: V482 = EQ V481 V478
0x6ca: V483 = ISZERO V482
0x6cb: V484 = ISZERO V483
0x6cc: V485 = 0x6d4
0x6cf: JUMPI 0x6d4 V484
---
Entry stack: [V10, 0x1e0, V116]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e0, V116]

================================

Block 0x6d0
[0x6d0:0x6d3]
---
Predecessors: [0x678]
Successors: []
---
0x6d0 PUSH1 0x0
0x6d2 DUP1
0x6d3 REVERT
---
0x6d0: V486 = 0x0
0x6d3: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1e0, V116]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e0, V116]

================================

Block 0x6d4
[0x6d4:0x6df]
---
Predecessors: [0x678]
Successors: [0x6e0, 0x6e1]
---
0x6d4 JUMPDEST
0x6d5 PUSH1 0x0
0x6d7 PUSH1 0x2
0x6d9 DUP2
0x6da GT
0x6db ISZERO
0x6dc PUSH2 0x6e1
0x6df JUMPI
---
0x6d4: JUMPDEST 
0x6d5: V487 = 0x0
0x6d7: V488 = 0x2
0x6da: V489 = GT 0x0 0x2
0x6db: V490 = ISZERO 0x0
0x6dc: V491 = 0x6e1
0x6df: JUMPI 0x6e1 0x1
---
Entry stack: [V10, 0x1e0, V116]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x1e0, V116, 0x0]

================================

Block 0x6e0
[0x6e0:0x6e0]
---
Predecessors: [0x6d4]
Successors: []
---
0x6e0 INVALID
---
0x6e0: INVALID 
---
Entry stack: [V10, 0x1e0, V116, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e0, V116, 0x0]

================================

Block 0x6e1
[0x6e1:0x6fa]
---
Predecessors: [0x6d4]
Successors: [0x6fb, 0x6fc]
---
0x6e1 JUMPDEST
0x6e2 PUSH1 0x12
0x6e4 PUSH1 0x2
0x6e6 SWAP1
0x6e7 SLOAD
0x6e8 SWAP1
0x6e9 PUSH2 0x100
0x6ec EXP
0x6ed SWAP1
0x6ee DIV
0x6ef PUSH1 0xff
0x6f1 AND
0x6f2 PUSH1 0x2
0x6f4 DUP2
0x6f5 GT
0x6f6 ISZERO
0x6f7 PUSH2 0x6fc
0x6fa JUMPI
---
0x6e1: JUMPDEST 
0x6e2: V492 = 0x12
0x6e4: V493 = 0x2
0x6e7: V494 = S[0x12]
0x6e9: V495 = 0x100
0x6ec: V496 = EXP 0x100 0x2
0x6ee: V497 = DIV V494 0x10000
0x6ef: V498 = 0xff
0x6f1: V499 = AND 0xff V497
0x6f2: V500 = 0x2
0x6f5: V501 = GT V499 0x2
0x6f6: V502 = ISZERO V501
0x6f7: V503 = 0x6fc
0x6fa: JUMPI 0x6fc V502
---
Entry stack: [V10, 0x1e0, V116, 0x0]
Stack pops: 0
Stack additions: [V499]
Exit stack: [V10, 0x1e0, V116, 0x0, V499]

================================

Block 0x6fb
[0x6fb:0x6fb]
---
Predecessors: [0x6e1]
Successors: []
---
0x6fb INVALID
---
0x6fb: INVALID 
---
Entry stack: [V10, 0x1e0, V116, 0x0, V499]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e0, V116, 0x0, V499]

================================

Block 0x6fc
[0x6fc:0x703]
---
Predecessors: [0x6e1]
Successors: [0x704, 0x708]
---
0x6fc JUMPDEST
0x6fd EQ
0x6fe ISZERO
0x6ff ISZERO
0x700 PUSH2 0x708
0x703 JUMPI
---
0x6fc: JUMPDEST 
0x6fd: V504 = EQ V499 0x0
0x6fe: V505 = ISZERO V504
0x6ff: V506 = ISZERO V505
0x700: V507 = 0x708
0x703: JUMPI 0x708 V506
---
Entry stack: [V10, 0x1e0, V116, 0x0, V499]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x1e0, V116]

================================

Block 0x704
[0x704:0x707]
---
Predecessors: [0x6fc]
Successors: []
---
0x704 PUSH1 0x0
0x706 DUP1
0x707 REVERT
---
0x704: V508 = 0x0
0x707: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1e0, V116]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e0, V116]

================================

Block 0x708
[0x708:0x74c]
---
Predecessors: [0x6fc]
Successors: [0x74d]
---
0x708 JUMPDEST
0x709 PUSH1 0x12
0x70b PUSH1 0x0
0x70d SWAP1
0x70e SLOAD
0x70f SWAP1
0x710 PUSH2 0x100
0x713 EXP
0x714 SWAP1
0x715 DIV
0x716 PUSH1 0xff
0x718 AND
0x719 ISZERO
0x71a PUSH1 0x12
0x71c PUSH1 0x0
0x71e PUSH2 0x100
0x721 EXP
0x722 DUP2
0x723 SLOAD
0x724 DUP2
0x725 PUSH1 0xff
0x727 MUL
0x728 NOT
0x729 AND
0x72a SWAP1
0x72b DUP4
0x72c ISZERO
0x72d ISZERO
0x72e MUL
0x72f OR
0x730 SWAP1
0x731 SSTORE
0x732 POP
0x733 DUP1
0x734 PUSH1 0x12
0x736 PUSH1 0x1
0x738 PUSH2 0x100
0x73b EXP
0x73c DUP2
0x73d SLOAD
0x73e DUP2
0x73f PUSH1 0xff
0x741 MUL
0x742 NOT
0x743 AND
0x744 SWAP1
0x745 DUP4
0x746 ISZERO
0x747 ISZERO
0x748 MUL
0x749 OR
0x74a SWAP1
0x74b SSTORE
0x74c POP
---
0x708: JUMPDEST 
0x709: V509 = 0x12
0x70b: V510 = 0x0
0x70e: V511 = S[0x12]
0x710: V512 = 0x100
0x713: V513 = EXP 0x100 0x0
0x715: V514 = DIV V511 0x1
0x716: V515 = 0xff
0x718: V516 = AND 0xff V514
0x719: V517 = ISZERO V516
0x71a: V518 = 0x12
0x71c: V519 = 0x0
0x71e: V520 = 0x100
0x721: V521 = EXP 0x100 0x0
0x723: V522 = S[0x12]
0x725: V523 = 0xff
0x727: V524 = MUL 0xff 0x1
0x728: V525 = NOT 0xff
0x729: V526 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V522
0x72c: V527 = ISZERO V517
0x72d: V528 = ISZERO V527
0x72e: V529 = MUL V528 0x1
0x72f: V530 = OR V529 V526
0x731: S[0x12] = V530
0x734: V531 = 0x12
0x736: V532 = 0x1
0x738: V533 = 0x100
0x73b: V534 = EXP 0x100 0x1
0x73d: V535 = S[0x12]
0x73f: V536 = 0xff
0x741: V537 = MUL 0xff 0x100
0x742: V538 = NOT 0xff00
0x743: V539 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V535
0x746: V540 = ISZERO V116
0x747: V541 = ISZERO V540
0x748: V542 = MUL V541 0x100
0x749: V543 = OR V542 V539
0x74b: S[0x12] = V543
---
Entry stack: [V10, 0x1e0, V116]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1e0, V116]

================================

Block 0x74d
[0x74d:0x74d]
---
Predecessors: [0x708]
Successors: [0x74e]
---
0x74d JUMPDEST
---
0x74d: JUMPDEST 
---
Entry stack: [V10, 0x1e0, V116]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1e0, V116]

================================

Block 0x74e
[0x74e:0x750]
---
Predecessors: [0x74d]
Successors: [0x1e0]
---
0x74e JUMPDEST
0x74f POP
0x750 JUMP
---
0x74e: JUMPDEST 
0x750: JUMP 0x1e0
---
Entry stack: [V10, 0x1e0, V116]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x751
[0x751:0x76a]
---
Predecessors: [0x1ed]
Successors: [0x76b]
---
0x751 JUMPDEST
0x752 DUP1
0x753 PUSH1 0x0
0x755 SLOAD
0x756 PUSH1 0x0
0x758 NOT
0x759 AND
0x75a DUP2
0x75b CALLER
0x75c PUSH1 0x40
0x75e MLOAD
0x75f DUP1
0x760 DUP4
0x761 DUP1
0x762 MLOAD
0x763 SWAP1
0x764 PUSH1 0x20
0x766 ADD
0x767 SWAP1
0x768 DUP1
0x769 DUP4
0x76a DUP4
---
0x751: JUMPDEST 
0x753: V544 = 0x0
0x755: V545 = S[0x0]
0x756: V546 = 0x0
0x758: V547 = NOT 0x0
0x759: V548 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V545
0x75b: V549 = CALLER
0x75c: V550 = 0x40
0x75e: V551 = M[0x40]
0x762: V552 = M[V141]
0x764: V553 = 0x20
0x766: V554 = ADD 0x20 V141
---
Entry stack: [V10, 0x23d, V141]
Stack pops: 1
Stack additions: [S0, S0, V548, S0, V549, V551, V551, V554, V552, V552, V551, V554]
Exit stack: [V10, 0x23d, V141, V141, V548, V141, V549, V551, V551, V554, V552, V552, V551, V554]

================================

Block 0x76b
[0x76b:0x775]
---
Predecessors: [0x751, 0x77a]
Successors: [0x776, 0x791]
---
0x76b JUMPDEST
0x76c PUSH1 0x20
0x76e DUP4
0x76f LT
0x770 ISZERO
0x771 ISZERO
0x772 PUSH2 0x791
0x775 JUMPI
---
0x76b: JUMPDEST 
0x76c: V555 = 0x20
0x76f: V556 = LT S2 0x20
0x770: V557 = ISZERO V556
0x771: V558 = ISZERO V557
0x772: V559 = 0x791
0x775: JUMPI 0x791 V558
---
Entry stack: [V10, 0x23d, V141, V141, V548, V141, V549, V551, V551, V554, V552, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x23d, V141, V141, V548, V141, V549, V551, V551, V554, V552, S2, S1, S0]

================================

Block 0x776
[0x776:0x779]
---
Predecessors: [0x76b]
Successors: [0x77a]
---
0x776 DUP1
0x777 MLOAD
0x778 DUP3
0x779 MSTORE
---
0x777: V560 = M[S0]
0x779: M[S1] = V560
---
Entry stack: [V10, 0x23d, V141, V141, V548, V141, V549, V551, V551, V554, V552, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x23d, V141, V141, V548, V141, V549, V551, V551, V554, V552, S2, S1, S0]

================================

Block 0x77a
[0x77a:0x790]
---
Predecessors: [0x776]
Successors: [0x76b]
---
0x77a JUMPDEST
0x77b PUSH1 0x20
0x77d DUP3
0x77e ADD
0x77f SWAP2
0x780 POP
0x781 PUSH1 0x20
0x783 DUP2
0x784 ADD
0x785 SWAP1
0x786 POP
0x787 PUSH1 0x20
0x789 DUP4
0x78a SUB
0x78b SWAP3
0x78c POP
0x78d PUSH2 0x76b
0x790 JUMP
---
0x77a: JUMPDEST 
0x77b: V561 = 0x20
0x77e: V562 = ADD S1 0x20
0x781: V563 = 0x20
0x784: V564 = ADD S0 0x20
0x787: V565 = 0x20
0x78a: V566 = SUB S2 0x20
0x78d: V567 = 0x76b
0x790: JUMP 0x76b
---
Entry stack: [V10, 0x23d, V141, V141, V548, V141, V549, V551, V551, V554, V552, S2, S1, S0]
Stack pops: 3
Stack additions: [V566, V562, V564]
Exit stack: [V10, 0x23d, V141, V141, V548, V141, V549, V551, V551, V554, V552, V566, V562, V564]

================================

Block 0x791
[0x791:0x80b]
---
Predecessors: [0x76b]
Successors: [0x80c, 0x810]
---
0x791 JUMPDEST
0x792 PUSH1 0x1
0x794 DUP4
0x795 PUSH1 0x20
0x797 SUB
0x798 PUSH2 0x100
0x79b EXP
0x79c SUB
0x79d DUP1
0x79e NOT
0x79f DUP3
0x7a0 MLOAD
0x7a1 AND
0x7a2 DUP2
0x7a3 DUP5
0x7a4 MLOAD
0x7a5 AND
0x7a6 DUP1
0x7a7 DUP3
0x7a8 OR
0x7a9 DUP6
0x7aa MSTORE
0x7ab POP
0x7ac POP
0x7ad POP
0x7ae POP
0x7af POP
0x7b0 POP
0x7b1 SWAP1
0x7b2 POP
0x7b3 ADD
0x7b4 DUP3
0x7b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7ca AND
0x7cb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7e0 AND
0x7e1 PUSH13 0x1000000000000000000000000
0x7ef MUL
0x7f0 DUP2
0x7f1 MSTORE
0x7f2 PUSH1 0x14
0x7f4 ADD
0x7f5 SWAP3
0x7f6 POP
0x7f7 POP
0x7f8 POP
0x7f9 PUSH1 0x40
0x7fb MLOAD
0x7fc DUP1
0x7fd SWAP2
0x7fe SUB
0x7ff SWAP1
0x800 SHA3
0x801 PUSH1 0x0
0x803 NOT
0x804 AND
0x805 EQ
0x806 ISZERO
0x807 ISZERO
0x808 PUSH2 0x810
0x80b JUMPI
---
0x791: JUMPDEST 
0x792: V568 = 0x1
0x795: V569 = 0x20
0x797: V570 = SUB 0x20 S2
0x798: V571 = 0x100
0x79b: V572 = EXP 0x100 V570
0x79c: V573 = SUB V572 0x1
0x79e: V574 = NOT V573
0x7a0: V575 = M[S0]
0x7a1: V576 = AND V575 V574
0x7a4: V577 = M[S1]
0x7a5: V578 = AND V577 V573
0x7a8: V579 = OR V576 V578
0x7aa: M[S1] = V579
0x7b3: V580 = ADD V552 V551
0x7b5: V581 = 0xffffffffffffffffffffffffffffffffffffffff
0x7ca: V582 = AND 0xffffffffffffffffffffffffffffffffffffffff V549
0x7cb: V583 = 0xffffffffffffffffffffffffffffffffffffffff
0x7e0: V584 = AND 0xffffffffffffffffffffffffffffffffffffffff V582
0x7e1: V585 = 0x1000000000000000000000000
0x7ef: V586 = MUL 0x1000000000000000000000000 V584
0x7f1: M[V580] = V586
0x7f2: V587 = 0x14
0x7f4: V588 = ADD 0x14 V580
0x7f9: V589 = 0x40
0x7fb: V590 = M[0x40]
0x7fe: V591 = SUB V588 V590
0x800: V592 = SHA3 V590 V591
0x801: V593 = 0x0
0x803: V594 = NOT 0x0
0x804: V595 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V592
0x805: V596 = EQ V595 V548
0x806: V597 = ISZERO V596
0x807: V598 = ISZERO V597
0x808: V599 = 0x810
0x80b: JUMPI 0x810 V598
---
Entry stack: [V10, 0x23d, V141, V141, V548, V141, V549, V551, V551, V554, V552, S2, S1, S0]
Stack pops: 10
Stack additions: []
Exit stack: [V10, 0x23d, V141, V141]

================================

Block 0x80c
[0x80c:0x80f]
---
Predecessors: [0x791]
Successors: []
---
0x80c PUSH1 0x0
0x80e DUP1
0x80f REVERT
---
0x80c: V600 = 0x0
0x80f: REVERT 0x0 0x0
---
Entry stack: [V10, 0x23d, V141, V141]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x23d, V141, V141]

================================

Block 0x810
[0x810:0x820]
---
Predecessors: [0x791]
Successors: [0x821, 0x825]
---
0x810 JUMPDEST
0x811 PUSH3 0x15180
0x815 PUSH1 0x10
0x817 SLOAD
0x818 ADD
0x819 TIMESTAMP
0x81a GT
0x81b ISZERO
0x81c ISZERO
0x81d PUSH2 0x825
0x820 JUMPI
---
0x810: JUMPDEST 
0x811: V601 = 0x15180
0x815: V602 = 0x10
0x817: V603 = S[0x10]
0x818: V604 = ADD V603 0x15180
0x819: V605 = TIMESTAMP
0x81a: V606 = GT V605 V604
0x81b: V607 = ISZERO V606
0x81c: V608 = ISZERO V607
0x81d: V609 = 0x825
0x820: JUMPI 0x825 V608
---
Entry stack: [V10, 0x23d, V141, V141]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x23d, V141, V141]

================================

Block 0x821
[0x821:0x824]
---
Predecessors: [0x810]
Successors: []
---
0x821 PUSH1 0x0
0x823 DUP1
0x824 REVERT
---
0x821: V610 = 0x0
0x824: REVERT 0x0 0x0
---
Entry stack: [V10, 0x23d, V141, V141]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x23d, V141, V141]

================================

Block 0x825
[0x825:0x83c]
---
Predecessors: [0x810]
Successors: [0x83d]
---
0x825 JUMPDEST
0x826 PUSH1 0x4
0x828 SLOAD
0x829 PUSH1 0x0
0x82b NOT
0x82c AND
0x82d DUP3
0x82e PUSH1 0x40
0x830 MLOAD
0x831 DUP1
0x832 DUP3
0x833 DUP1
0x834 MLOAD
0x835 SWAP1
0x836 PUSH1 0x20
0x838 ADD
0x839 SWAP1
0x83a DUP1
0x83b DUP4
0x83c DUP4
---
0x825: JUMPDEST 
0x826: V611 = 0x4
0x828: V612 = S[0x4]
0x829: V613 = 0x0
0x82b: V614 = NOT 0x0
0x82c: V615 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V612
0x82e: V616 = 0x40
0x830: V617 = M[0x40]
0x834: V618 = M[V141]
0x836: V619 = 0x20
0x838: V620 = ADD 0x20 V141
---
Entry stack: [V10, 0x23d, V141, V141]
Stack pops: 2
Stack additions: [S1, S0, V615, S1, V617, V617, V620, V618, V618, V617, V620]
Exit stack: [V10, 0x23d, V141, V141, V615, V141, V617, V617, V620, V618, V618, V617, V620]

================================

Block 0x83d
[0x83d:0x847]
---
Predecessors: [0x825, 0x84c]
Successors: [0x848, 0x863]
---
0x83d JUMPDEST
0x83e PUSH1 0x20
0x840 DUP4
0x841 LT
0x842 ISZERO
0x843 ISZERO
0x844 PUSH2 0x863
0x847 JUMPI
---
0x83d: JUMPDEST 
0x83e: V621 = 0x20
0x841: V622 = LT S2 0x20
0x842: V623 = ISZERO V622
0x843: V624 = ISZERO V623
0x844: V625 = 0x863
0x847: JUMPI 0x863 V624
---
Entry stack: [V10, 0x23d, V141, V141, V615, V141, V617, V617, V620, V618, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x23d, V141, V141, V615, V141, V617, V617, V620, V618, S2, S1, S0]

================================

Block 0x848
[0x848:0x84b]
---
Predecessors: [0x83d]
Successors: [0x84c]
---
0x848 DUP1
0x849 MLOAD
0x84a DUP3
0x84b MSTORE
---
0x849: V626 = M[S0]
0x84b: M[S1] = V626
---
Entry stack: [V10, 0x23d, V141, V141, V615, V141, V617, V617, V620, V618, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x23d, V141, V141, V615, V141, V617, V617, V620, V618, S2, S1, S0]

================================

Block 0x84c
[0x84c:0x862]
---
Predecessors: [0x848]
Successors: [0x83d]
---
0x84c JUMPDEST
0x84d PUSH1 0x20
0x84f DUP3
0x850 ADD
0x851 SWAP2
0x852 POP
0x853 PUSH1 0x20
0x855 DUP2
0x856 ADD
0x857 SWAP1
0x858 POP
0x859 PUSH1 0x20
0x85b DUP4
0x85c SUB
0x85d SWAP3
0x85e POP
0x85f PUSH2 0x83d
0x862 JUMP
---
0x84c: JUMPDEST 
0x84d: V627 = 0x20
0x850: V628 = ADD S1 0x20
0x853: V629 = 0x20
0x856: V630 = ADD S0 0x20
0x859: V631 = 0x20
0x85c: V632 = SUB S2 0x20
0x85f: V633 = 0x83d
0x862: JUMP 0x83d
---
Entry stack: [V10, 0x23d, V141, V141, V615, V141, V617, V617, V620, V618, S2, S1, S0]
Stack pops: 3
Stack additions: [V632, V628, V630]
Exit stack: [V10, 0x23d, V141, V141, V615, V141, V617, V617, V620, V618, V632, V628, V630]

================================

Block 0x863
[0x863:0x89b]
---
Predecessors: [0x83d]
Successors: [0x89c, 0x8a0]
---
0x863 JUMPDEST
0x864 PUSH1 0x1
0x866 DUP4
0x867 PUSH1 0x20
0x869 SUB
0x86a PUSH2 0x100
0x86d EXP
0x86e SUB
0x86f DUP1
0x870 NOT
0x871 DUP3
0x872 MLOAD
0x873 AND
0x874 DUP2
0x875 DUP5
0x876 MLOAD
0x877 AND
0x878 DUP1
0x879 DUP3
0x87a OR
0x87b DUP6
0x87c MSTORE
0x87d POP
0x87e POP
0x87f POP
0x880 POP
0x881 POP
0x882 POP
0x883 SWAP1
0x884 POP
0x885 ADD
0x886 SWAP2
0x887 POP
0x888 POP
0x889 PUSH1 0x40
0x88b MLOAD
0x88c DUP1
0x88d SWAP2
0x88e SUB
0x88f SWAP1
0x890 SHA3
0x891 PUSH1 0x0
0x893 NOT
0x894 AND
0x895 EQ
0x896 ISZERO
0x897 ISZERO
0x898 PUSH2 0x8a0
0x89b JUMPI
---
0x863: JUMPDEST 
0x864: V634 = 0x1
0x867: V635 = 0x20
0x869: V636 = SUB 0x20 S2
0x86a: V637 = 0x100
0x86d: V638 = EXP 0x100 V636
0x86e: V639 = SUB V638 0x1
0x870: V640 = NOT V639
0x872: V641 = M[S0]
0x873: V642 = AND V641 V640
0x876: V643 = M[S1]
0x877: V644 = AND V643 V639
0x87a: V645 = OR V642 V644
0x87c: M[S1] = V645
0x885: V646 = ADD V618 V617
0x889: V647 = 0x40
0x88b: V648 = M[0x40]
0x88e: V649 = SUB V646 V648
0x890: V650 = SHA3 V648 V649
0x891: V651 = 0x0
0x893: V652 = NOT 0x0
0x894: V653 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V650
0x895: V654 = EQ V653 V615
0x896: V655 = ISZERO V654
0x897: V656 = ISZERO V655
0x898: V657 = 0x8a0
0x89b: JUMPI 0x8a0 V656
---
Entry stack: [V10, 0x23d, V141, V141, V615, V141, V617, V617, V620, V618, S2, S1, S0]
Stack pops: 9
Stack additions: []
Exit stack: [V10, 0x23d, V141, V141]

================================

Block 0x89c
[0x89c:0x89f]
---
Predecessors: [0x863]
Successors: []
---
0x89c PUSH1 0x0
0x89e DUP1
0x89f REVERT
---
0x89c: V658 = 0x0
0x89f: REVERT 0x0 0x0
---
Entry stack: [V10, 0x23d, V141, V141]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x23d, V141, V141]

================================

Block 0x8a0
[0x8a0:0x8aa]
---
Predecessors: [0x863]
Successors: [0x8ab, 0x8ac]
---
0x8a0 JUMPDEST
0x8a1 PUSH1 0x2
0x8a3 DUP1
0x8a4 DUP2
0x8a5 GT
0x8a6 ISZERO
0x8a7 PUSH2 0x8ac
0x8aa JUMPI
---
0x8a0: JUMPDEST 
0x8a1: V659 = 0x2
0x8a5: V660 = GT 0x2 0x2
0x8a6: V661 = ISZERO 0x0
0x8a7: V662 = 0x8ac
0x8aa: JUMPI 0x8ac 0x1
---
Entry stack: [V10, 0x23d, V141, V141]
Stack pops: 0
Stack additions: [0x2]
Exit stack: [V10, 0x23d, V141, V141, 0x2]

================================

Block 0x8ab
[0x8ab:0x8ab]
---
Predecessors: [0x8a0]
Successors: []
---
0x8ab INVALID
---
0x8ab: INVALID 
---
Entry stack: [V10, 0x23d, V141, V141, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x23d, V141, V141, 0x2]

================================

Block 0x8ac
[0x8ac:0x8c5]
---
Predecessors: [0x8a0]
Successors: [0x8c6, 0x8c7]
---
0x8ac JUMPDEST
0x8ad PUSH1 0x12
0x8af PUSH1 0x2
0x8b1 SWAP1
0x8b2 SLOAD
0x8b3 SWAP1
0x8b4 PUSH2 0x100
0x8b7 EXP
0x8b8 SWAP1
0x8b9 DIV
0x8ba PUSH1 0xff
0x8bc AND
0x8bd PUSH1 0x2
0x8bf DUP2
0x8c0 GT
0x8c1 ISZERO
0x8c2 PUSH2 0x8c7
0x8c5 JUMPI
---
0x8ac: JUMPDEST 
0x8ad: V663 = 0x12
0x8af: V664 = 0x2
0x8b2: V665 = S[0x12]
0x8b4: V666 = 0x100
0x8b7: V667 = EXP 0x100 0x2
0x8b9: V668 = DIV V665 0x10000
0x8ba: V669 = 0xff
0x8bc: V670 = AND 0xff V668
0x8bd: V671 = 0x2
0x8c0: V672 = GT V670 0x2
0x8c1: V673 = ISZERO V672
0x8c2: V674 = 0x8c7
0x8c5: JUMPI 0x8c7 V673
---
Entry stack: [V10, 0x23d, V141, V141, 0x2]
Stack pops: 0
Stack additions: [V670]
Exit stack: [V10, 0x23d, V141, V141, 0x2, V670]

================================

Block 0x8c6
[0x8c6:0x8c6]
---
Predecessors: [0x8ac]
Successors: []
---
0x8c6 INVALID
---
0x8c6: INVALID 
---
Entry stack: [V10, 0x23d, V141, V141, 0x2, V670]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x23d, V141, V141, 0x2, V670]

================================

Block 0x8c7
[0x8c7:0x8ce]
---
Predecessors: [0x8ac]
Successors: [0x8cf, 0x8d3]
---
0x8c7 JUMPDEST
0x8c8 EQ
0x8c9 ISZERO
0x8ca ISZERO
0x8cb PUSH2 0x8d3
0x8ce JUMPI
---
0x8c7: JUMPDEST 
0x8c8: V675 = EQ V670 0x2
0x8c9: V676 = ISZERO V675
0x8ca: V677 = ISZERO V676
0x8cb: V678 = 0x8d3
0x8ce: JUMPI 0x8d3 V677
---
Entry stack: [V10, 0x23d, V141, V141, 0x2, V670]
Stack pops: 2
Stack additions: []
Exit stack: [V10, 0x23d, V141, V141]

================================

Block 0x8cf
[0x8cf:0x8d2]
---
Predecessors: [0x8c7]
Successors: []
---
0x8cf PUSH1 0x0
0x8d1 DUP1
0x8d2 REVERT
---
0x8cf: V679 = 0x0
0x8d2: REVERT 0x0 0x0
---
Entry stack: [V10, 0x23d, V141, V141]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x23d, V141, V141]

================================

Block 0x8d3
[0x8d3:0x925]
---
Predecessors: [0x8c7]
Successors: [0x926, 0x92a]
---
0x8d3 JUMPDEST
0x8d4 CALLER
0x8d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8ea AND
0x8eb PUSH2 0x8fc
0x8ee ADDRESS
0x8ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x904 AND
0x905 BALANCE
0x906 SWAP1
0x907 DUP2
0x908 ISZERO
0x909 MUL
0x90a SWAP1
0x90b PUSH1 0x40
0x90d MLOAD
0x90e PUSH1 0x0
0x910 PUSH1 0x40
0x912 MLOAD
0x913 DUP1
0x914 DUP4
0x915 SUB
0x916 DUP2
0x917 DUP6
0x918 DUP9
0x919 DUP9
0x91a CALL
0x91b SWAP4
0x91c POP
0x91d POP
0x91e POP
0x91f POP
0x920 ISZERO
0x921 ISZERO
0x922 PUSH2 0x92a
0x925 JUMPI
---
0x8d3: JUMPDEST 
0x8d4: V680 = CALLER
0x8d5: V681 = 0xffffffffffffffffffffffffffffffffffffffff
0x8ea: V682 = AND 0xffffffffffffffffffffffffffffffffffffffff V680
0x8eb: V683 = 0x8fc
0x8ee: V684 = ADDRESS
0x8ef: V685 = 0xffffffffffffffffffffffffffffffffffffffff
0x904: V686 = AND 0xffffffffffffffffffffffffffffffffffffffff V684
0x905: V687 = BALANCE V686
0x908: V688 = ISZERO V687
0x909: V689 = MUL V688 0x8fc
0x90b: V690 = 0x40
0x90d: V691 = M[0x40]
0x90e: V692 = 0x0
0x910: V693 = 0x40
0x912: V694 = M[0x40]
0x915: V695 = SUB V691 V694
0x91a: V696 = CALL V689 V682 V687 V694 V695 V694 0x0
0x920: V697 = ISZERO V696
0x921: V698 = ISZERO V697
0x922: V699 = 0x92a
0x925: JUMPI 0x92a V698
---
Entry stack: [V10, 0x23d, V141, V141]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x23d, V141, V141]

================================

Block 0x926
[0x926:0x929]
---
Predecessors: [0x8d3]
Successors: []
---
0x926 PUSH1 0x0
0x928 DUP1
0x929 REVERT
---
0x926: V700 = 0x0
0x929: REVERT 0x0 0x0
---
Entry stack: [V10, 0x23d, V141, V141]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x23d, V141, V141]

================================

Block 0x92a
[0x92a:0x92a]
---
Predecessors: [0x8d3]
Successors: [0x92b]
---
0x92a JUMPDEST
---
0x92a: JUMPDEST 
---
Entry stack: [V10, 0x23d, V141, V141]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x23d, V141, V141]

================================

Block 0x92b
[0x92b:0x92b]
---
Predecessors: [0x92a]
Successors: [0x92c]
---
0x92b JUMPDEST
---
0x92b: JUMPDEST 
---
Entry stack: [V10, 0x23d, V141, V141]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x23d, V141, V141]

================================

Block 0x92c
[0x92c:0x92f]
---
Predecessors: [0x92b]
Successors: [0x23d]
---
0x92c JUMPDEST
0x92d POP
0x92e POP
0x92f JUMP
---
0x92c: JUMPDEST 
0x92f: JUMP 0x23d
---
Entry stack: [V10, 0x23d, V141, V141]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x930
[0x930:0x942]
---
Predecessors: [0x24a]
Successors: [0x252]
---
0x930 JUMPDEST
0x931 PUSH1 0x12
0x933 PUSH1 0x0
0x935 SWAP1
0x936 SLOAD
0x937 SWAP1
0x938 PUSH2 0x100
0x93b EXP
0x93c SWAP1
0x93d DIV
0x93e PUSH1 0xff
0x940 AND
0x941 DUP2
0x942 JUMP
---
0x930: JUMPDEST 
0x931: V701 = 0x12
0x933: V702 = 0x0
0x936: V703 = S[0x12]
0x938: V704 = 0x100
0x93b: V705 = EXP 0x100 0x0
0x93d: V706 = DIV V703 0x1
0x93e: V707 = 0xff
0x940: V708 = AND 0xff V706
0x942: JUMP 0x252
---
Entry stack: [V10, 0x252]
Stack pops: 1
Stack additions: [S0, V708]
Exit stack: [V10, 0x252, V708]

================================

Block 0x943
[0x943:0x99d]
---
Predecessors: [0x277]
Successors: [0x99e, 0x9a2]
---
0x943 JUMPDEST
0x944 PUSH1 0x0
0x946 DUP1
0x947 PUSH1 0x1
0x949 PUSH1 0x0
0x94b SWAP1
0x94c SLOAD
0x94d SWAP1
0x94e PUSH2 0x100
0x951 EXP
0x952 SWAP1
0x953 DIV
0x954 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x969 AND
0x96a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x97f AND
0x980 CALLER
0x981 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x996 AND
0x997 EQ
0x998 ISZERO
0x999 ISZERO
0x99a PUSH2 0x9a2
0x99d JUMPI
---
0x943: JUMPDEST 
0x944: V709 = 0x0
0x947: V710 = 0x1
0x949: V711 = 0x0
0x94c: V712 = S[0x1]
0x94e: V713 = 0x100
0x951: V714 = EXP 0x100 0x0
0x953: V715 = DIV V712 0x1
0x954: V716 = 0xffffffffffffffffffffffffffffffffffffffff
0x969: V717 = AND 0xffffffffffffffffffffffffffffffffffffffff V715
0x96a: V718 = 0xffffffffffffffffffffffffffffffffffffffff
0x97f: V719 = AND 0xffffffffffffffffffffffffffffffffffffffff V717
0x980: V720 = CALLER
0x981: V721 = 0xffffffffffffffffffffffffffffffffffffffff
0x996: V722 = AND 0xffffffffffffffffffffffffffffffffffffffff V720
0x997: V723 = EQ V722 V719
0x998: V724 = ISZERO V723
0x999: V725 = ISZERO V724
0x99a: V726 = 0x9a2
0x99d: JUMPI 0x9a2 V725
---
Entry stack: [V10, 0x29e, V174, V180]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V10, 0x29e, V174, V180, 0x0, 0x0]

================================

Block 0x99e
[0x99e:0x9a1]
---
Predecessors: [0x943]
Successors: []
---
0x99e PUSH1 0x0
0x9a0 DUP1
0x9a1 REVERT
---
0x99e: V727 = 0x0
0x9a1: REVERT 0x0 0x0
---
Entry stack: [V10, 0x29e, V174, V180, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x29e, V174, V180, 0x0, 0x0]

================================

Block 0x9a2
[0x9a2:0x9b4]
---
Predecessors: [0x943]
Successors: [0x9b5, 0x9c2]
---
0x9a2 JUMPDEST
0x9a3 PUSH1 0x0
0x9a5 PUSH1 0x1
0x9a7 MUL
0x9a8 DUP4
0x9a9 PUSH1 0x0
0x9ab NOT
0x9ac AND
0x9ad EQ
0x9ae ISZERO
0x9af DUP1
0x9b0 ISZERO
0x9b1 PUSH2 0x9c2
0x9b4 JUMPI
---
0x9a2: JUMPDEST 
0x9a3: V728 = 0x0
0x9a5: V729 = 0x1
0x9a7: V730 = MUL 0x1 0x0
0x9a9: V731 = 0x0
0x9ab: V732 = NOT 0x0
0x9ac: V733 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V180
0x9ad: V734 = EQ V733 0x0
0x9ae: V735 = ISZERO V734
0x9b0: V736 = ISZERO V735
0x9b1: V737 = 0x9c2
0x9b4: JUMPI 0x9c2 V736
---
Entry stack: [V10, 0x29e, V174, V180, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V735]
Exit stack: [V10, 0x29e, V174, V180, 0x0, 0x0, V735]

================================

Block 0x9b5
[0x9b5:0x9c1]
---
Predecessors: [0x9a2]
Successors: [0x9c2]
---
0x9b5 POP
0x9b6 PUSH1 0x0
0x9b8 PUSH1 0x1
0x9ba MUL
0x9bb DUP5
0x9bc PUSH1 0x0
0x9be NOT
0x9bf AND
0x9c0 EQ
0x9c1 ISZERO
---
0x9b6: V738 = 0x0
0x9b8: V739 = 0x1
0x9ba: V740 = MUL 0x1 0x0
0x9bc: V741 = 0x0
0x9be: V742 = NOT 0x0
0x9bf: V743 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V174
0x9c0: V744 = EQ V743 0x0
0x9c1: V745 = ISZERO V744
---
Entry stack: [V10, 0x29e, V174, V180, 0x0, 0x0, V735]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V745]
Exit stack: [V10, 0x29e, V174, V180, 0x0, 0x0, V745]

================================

Block 0x9c2
[0x9c2:0x9c8]
---
Predecessors: [0x9a2, 0x9b5]
Successors: [0x9c9, 0x9cd]
---
0x9c2 JUMPDEST
0x9c3 ISZERO
0x9c4 ISZERO
0x9c5 PUSH2 0x9cd
0x9c8 JUMPI
---
0x9c2: JUMPDEST 
0x9c3: V746 = ISZERO S0
0x9c4: V747 = ISZERO V746
0x9c5: V748 = 0x9cd
0x9c8: JUMPI 0x9cd V747
---
Entry stack: [V10, 0x29e, V174, V180, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x29e, V174, V180, 0x0, 0x0]

================================

Block 0x9c9
[0x9c9:0x9cc]
---
Predecessors: [0x9c2]
Successors: []
---
0x9c9 PUSH1 0x0
0x9cb DUP1
0x9cc REVERT
---
0x9c9: V749 = 0x0
0x9cc: REVERT 0x0 0x0
---
Entry stack: [V10, 0x29e, V174, V180, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x29e, V174, V180, 0x0, 0x0]

================================

Block 0x9cd
[0x9cd:0x9d5]
---
Predecessors: [0x9c2]
Successors: [0x9d6]
---
0x9cd JUMPDEST
0x9ce PUSH1 0x0
0x9d0 SWAP2
0x9d1 POP
0x9d2 PUSH1 0x0
0x9d4 SWAP1
0x9d5 POP
---
0x9cd: JUMPDEST 
0x9ce: V750 = 0x0
0x9d2: V751 = 0x0
---
Entry stack: [V10, 0x29e, V174, V180, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x0, 0x0]
Exit stack: [V10, 0x29e, V174, V180, 0x0, 0x0]

================================

Block 0x9d6
[0x9d6:0x9e2]
---
Predecessors: [0x9cd, 0xa2f]
Successors: [0x9e3, 0xa3c]
---
0x9d6 JUMPDEST
0x9d7 PUSH1 0xa
0x9d9 DUP3
0x9da PUSH1 0xff
0x9dc AND
0x9dd LT
0x9de ISZERO
0x9df PUSH2 0xa3c
0x9e2 JUMPI
---
0x9d6: JUMPDEST 
0x9d7: V752 = 0xa
0x9da: V753 = 0xff
0x9dc: V754 = AND 0xff S1
0x9dd: V755 = LT V754 0xa
0x9de: V756 = ISZERO V755
0x9df: V757 = 0xa3c
0x9e2: JUMPI 0xa3c V756
---
Entry stack: [V10, 0x29e, V174, V180, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x29e, V174, V180, S1, 0x0]

================================

Block 0x9e3
[0x9e3:0xa14]
---
Predecessors: [0x9d6]
Successors: [0xa15, 0xa16]
---
0x9e3 DUP3
0x9e4 PUSH1 0x40
0x9e6 MLOAD
0x9e7 DUP1
0x9e8 DUP3
0x9e9 PUSH1 0x0
0x9eb NOT
0x9ec AND
0x9ed PUSH1 0x0
0x9ef NOT
0x9f0 AND
0x9f1 DUP2
0x9f2 MSTORE
0x9f3 PUSH1 0x20
0x9f5 ADD
0x9f6 SWAP2
0x9f7 POP
0x9f8 POP
0x9f9 PUSH1 0x40
0x9fb MLOAD
0x9fc DUP1
0x9fd SWAP2
0x9fe SUB
0x9ff SWAP1
0xa00 SHA3
0xa01 PUSH1 0x0
0xa03 NOT
0xa04 AND
0xa05 PUSH1 0x5
0xa07 DUP4
0xa08 PUSH1 0xff
0xa0a AND
0xa0b PUSH1 0xa
0xa0d DUP2
0xa0e LT
0xa0f ISZERO
0xa10 ISZERO
0xa11 PUSH2 0xa16
0xa14 JUMPI
---
0x9e4: V758 = 0x40
0x9e6: V759 = M[0x40]
0x9e9: V760 = 0x0
0x9eb: V761 = NOT 0x0
0x9ec: V762 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V180
0x9ed: V763 = 0x0
0x9ef: V764 = NOT 0x0
0x9f0: V765 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V762
0x9f2: M[V759] = V765
0x9f3: V766 = 0x20
0x9f5: V767 = ADD 0x20 V759
0x9f9: V768 = 0x40
0x9fb: V769 = M[0x40]
0x9fe: V770 = SUB V767 V769
0xa00: V771 = SHA3 V769 V770
0xa01: V772 = 0x0
0xa03: V773 = NOT 0x0
0xa04: V774 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V771
0xa05: V775 = 0x5
0xa08: V776 = 0xff
0xa0a: V777 = AND 0xff S1
0xa0b: V778 = 0xa
0xa0e: V779 = LT V777 0xa
0xa0f: V780 = ISZERO V779
0xa10: V781 = ISZERO V780
0xa11: V782 = 0xa16
0xa14: JUMPI 0xa16 V781
---
Entry stack: [V10, 0x29e, V174, V180, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, V774, 0x5, V777]
Exit stack: [V10, 0x29e, V174, V180, S1, 0x0, V774, 0x5, V777]

================================

Block 0xa15
[0xa15:0xa15]
---
Predecessors: [0x9e3]
Successors: []
---
0xa15 INVALID
---
0xa15: INVALID 
---
Entry stack: [V10, 0x29e, V174, V180, S4, 0x0, V774, 0x5, V777]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x29e, V174, V180, S4, 0x0, V774, 0x5, V777]

================================

Block 0xa16
[0xa16:0xa19]
---
Predecessors: [0x9e3]
Successors: [0xa1a]
---
0xa16 JUMPDEST
0xa17 ADD
0xa18 PUSH1 0x0
---
0xa16: JUMPDEST 
0xa17: V783 = ADD V777 0x5
0xa18: V784 = 0x0
---
Entry stack: [V10, 0x29e, V174, V180, S4, 0x0, V774, 0x5, V777]
Stack pops: 2
Stack additions: [V783, 0x0]
Exit stack: [V10, 0x29e, V174, V180, S4, 0x0, V774, V783, 0x0]

================================

Block 0xa1a
[0xa1a:0xa26]
---
Predecessors: [0xa16]
Successors: [0xa27, 0xa2f]
---
0xa1a JUMPDEST
0xa1b POP
0xa1c SLOAD
0xa1d PUSH1 0x0
0xa1f NOT
0xa20 AND
0xa21 EQ
0xa22 ISZERO
0xa23 PUSH2 0xa2f
0xa26 JUMPI
---
0xa1a: JUMPDEST 
0xa1c: V785 = S[V783]
0xa1d: V786 = 0x0
0xa1f: V787 = NOT 0x0
0xa20: V788 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V785
0xa21: V789 = EQ V788 V774
0xa22: V790 = ISZERO V789
0xa23: V791 = 0xa2f
0xa26: JUMPI 0xa2f V790
---
Entry stack: [V10, 0x29e, V174, V180, S4, 0x0, V774, V783, 0x0]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x29e, V174, V180, S4, 0x0]

================================

Block 0xa27
[0xa27:0xa2e]
---
Predecessors: [0xa1a]
Successors: [0xa3c]
---
0xa27 PUSH1 0x1
0xa29 SWAP1
0xa2a POP
0xa2b PUSH2 0xa3c
0xa2e JUMP
---
0xa27: V792 = 0x1
0xa2b: V793 = 0xa3c
0xa2e: JUMP 0xa3c
---
Entry stack: [V10, 0x29e, V174, V180, S1, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V10, 0x29e, V174, V180, S1, 0x1]

================================

Block 0xa2f
[0xa2f:0xa3b]
---
Predecessors: [0xa1a]
Successors: [0x9d6]
---
0xa2f JUMPDEST
0xa30 DUP2
0xa31 DUP1
0xa32 PUSH1 0x1
0xa34 ADD
0xa35 SWAP3
0xa36 POP
0xa37 POP
0xa38 PUSH2 0x9d6
0xa3b JUMP
---
0xa2f: JUMPDEST 
0xa32: V794 = 0x1
0xa34: V795 = ADD 0x1 S1
0xa38: V796 = 0x9d6
0xa3b: JUMP 0x9d6
---
Entry stack: [V10, 0x29e, V174, V180, S1, 0x0]
Stack pops: 2
Stack additions: [V795, S0]
Exit stack: [V10, 0x29e, V174, V180, V795, 0x0]

================================

Block 0xa3c
[0xa3c:0xa43]
---
Predecessors: [0x9d6, 0xa27]
Successors: [0xa44, 0xa48]
---
0xa3c JUMPDEST
0xa3d DUP1
0xa3e ISZERO
0xa3f ISZERO
0xa40 PUSH2 0xa48
0xa43 JUMPI
---
0xa3c: JUMPDEST 
0xa3e: V797 = ISZERO {0x0, 0x1}
0xa3f: V798 = ISZERO V797
0xa40: V799 = 0xa48
0xa43: JUMPI 0xa48 V798
---
Entry stack: [V10, 0x29e, V174, V180, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x29e, V174, V180, S1, {0x0, 0x1}]

================================

Block 0xa44
[0xa44:0xa47]
---
Predecessors: [0xa3c]
Successors: []
---
0xa44 PUSH1 0x0
0xa46 DUP1
0xa47 REVERT
---
0xa44: V800 = 0x0
0xa47: REVERT 0x0 0x0
---
Entry stack: [V10, 0x29e, V174, V180, S1, {0x0, 0x1}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x29e, V174, V180, S1, {0x0, 0x1}]

================================

Block 0xa48
[0xa48:0xa6c]
---
Predecessors: [0xa3c]
Successors: [0xa6d, 0xa6e]
---
0xa48 JUMPDEST
0xa49 TIMESTAMP
0xa4a PUSH1 0x10
0xa4c DUP2
0xa4d SWAP1
0xa4e SSTORE
0xa4f POP
0xa50 PUSH1 0x2
0xa52 PUSH1 0x12
0xa54 PUSH1 0x2
0xa56 PUSH2 0x100
0xa59 EXP
0xa5a DUP2
0xa5b SLOAD
0xa5c DUP2
0xa5d PUSH1 0xff
0xa5f MUL
0xa60 NOT
0xa61 AND
0xa62 SWAP1
0xa63 DUP4
0xa64 PUSH1 0x2
0xa66 DUP2
0xa67 GT
0xa68 ISZERO
0xa69 PUSH2 0xa6e
0xa6c JUMPI
---
0xa48: JUMPDEST 
0xa49: V801 = TIMESTAMP
0xa4a: V802 = 0x10
0xa4e: S[0x10] = V801
0xa50: V803 = 0x2
0xa52: V804 = 0x12
0xa54: V805 = 0x2
0xa56: V806 = 0x100
0xa59: V807 = EXP 0x100 0x2
0xa5b: V808 = S[0x12]
0xa5d: V809 = 0xff
0xa5f: V810 = MUL 0xff 0x10000
0xa60: V811 = NOT 0xff0000
0xa61: V812 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff V808
0xa64: V813 = 0x2
0xa67: V814 = GT 0x2 0x2
0xa68: V815 = ISZERO 0x0
0xa69: V816 = 0xa6e
0xa6c: JUMPI 0xa6e 0x1
---
Entry stack: [V10, 0x29e, V174, V180, S1, {0x0, 0x1}]
Stack pops: 0
Stack additions: [0x2, 0x12, V812, 0x10000, 0x2]
Exit stack: [V10, 0x29e, V174, V180, S1, {0x0, 0x1}, 0x2, 0x12, V812, 0x10000, 0x2]

================================

Block 0xa6d
[0xa6d:0xa6d]
---
Predecessors: [0xa48]
Successors: []
---
0xa6d INVALID
---
0xa6d: INVALID 
---
Entry stack: [V10, 0x29e, V174, V180, S6, {0x0, 0x1}, 0x2, 0x12, V812, 0x10000, 0x2]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x29e, V174, V180, S6, {0x0, 0x1}, 0x2, 0x12, V812, 0x10000, 0x2]

================================

Block 0xa6e
[0xa6e:0xa7e]
---
Predecessors: [0xa48]
Successors: [0xa7f]
---
0xa6e JUMPDEST
0xa6f MUL
0xa70 OR
0xa71 SWAP1
0xa72 SSTORE
0xa73 POP
0xa74 DUP4
0xa75 PUSH1 0x0
0xa77 DUP2
0xa78 PUSH1 0x0
0xa7a NOT
0xa7b AND
0xa7c SWAP1
0xa7d SSTORE
0xa7e POP
---
0xa6e: JUMPDEST 
0xa6f: V817 = MUL 0x2 0x10000
0xa70: V818 = OR 0x20000 V812
0xa72: S[0x12] = V818
0xa75: V819 = 0x0
0xa78: V820 = 0x0
0xa7a: V821 = NOT 0x0
0xa7b: V822 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V174
0xa7d: S[0x0] = V822
---
Entry stack: [V10, 0x29e, V174, V180, S6, {0x0, 0x1}, 0x2, 0x12, V812, 0x10000, 0x2]
Stack pops: 9
Stack additions: [S8, S7, S6, S5]
Exit stack: [V10, 0x29e, V174, V180, S6, {0x0, 0x1}]

================================

Block 0xa7f
[0xa7f:0xa7f]
---
Predecessors: [0xa6e]
Successors: [0xa80]
---
0xa7f JUMPDEST
---
0xa7f: JUMPDEST 
---
Entry stack: [V10, 0x29e, V174, V180, S1, {0x0, 0x1}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x29e, V174, V180, S1, {0x0, 0x1}]

================================

Block 0xa80
[0xa80:0xa85]
---
Predecessors: [0xa7f]
Successors: [0x29e]
---
0xa80 JUMPDEST
0xa81 POP
0xa82 POP
0xa83 POP
0xa84 POP
0xa85 JUMP
---
0xa80: JUMPDEST 
0xa85: JUMP 0x29e
---
Entry stack: [V10, 0x29e, V174, V180, S1, {0x0, 0x1}]
Stack pops: 5
Stack additions: []
Exit stack: [V10]

================================

Block 0xa86
[0xa86:0xaca]
---
Predecessors: []
Successors: []
---
0xa86 STOP
0xa87 LOG1
0xa88 PUSH6 0x627a7a723058
0xa8f SHA3
0xa90 DUP14
0xa91 PC
0xa92 MISSING 0xdf
0xa93 CALLDATALOAD
0xa94 SIGNEXTEND
0xa95 LOG4
0xa96 CREATE2
0xa97 MISSING 0xf9
0xa98 MISSING 0xe4
0xa99 COINBASE
0xa9a MISSING 0xc9
0xa9b ADDMOD
0xa9c CALL
0xa9d MISSING 0xda
0xa9e SWAP4
0xa9f MISSING 0xe7
0xaa0 MISSING 0xcf
0xaa1 GASPRICE
0xaa2 SWAP1
0xaa3 SWAP14
0xaa4 MISSING 0xce
0xaa5 MISSING 0x2a
0xaa6 SHA3
0xaa7 SAR
0xaa8 MISSING 0xb9
0xaa9 SWAP10
0xaaa MLOAD
0xaab MISSING 0xbb
0xaac PUSH30 0x89da40029
---
0xa86: STOP 
0xa87: LOG S0 S1 S2
0xa88: V823 = 0x627a7a723058
0xa8f: V824 = SHA3 0x627a7a723058 S3
0xa91: V825 = PC
0xa92: MISSING 0xdf
0xa93: V826 = CALLDATALOAD S0
0xa94: V827 = SIGNEXTEND V826 S1
0xa95: LOG V827 S2 S3 S4 S5 S6
0xa96: V828 = CREATE2 S7 S8 S9 S10
0xa97: MISSING 0xf9
0xa98: MISSING 0xe4
0xa99: V829 = COINBASE
0xa9a: MISSING 0xc9
0xa9b: V830 = ADDMOD S0 S1 S2
0xa9c: V831 = CALL V830 S3 S4 S5 S6 S7 S8
0xa9d: MISSING 0xda
0xa9f: MISSING 0xe7
0xaa0: MISSING 0xcf
0xaa1: V832 = GASPRICE
0xaa4: MISSING 0xce
0xaa5: MISSING 0x2a
0xaa6: V833 = SHA3 S0 S1
0xaa7: V834 = SAR V833 S2
0xaa8: MISSING 0xb9
0xaaa: V835 = M[S10]
0xaab: MISSING 0xbb
0xaac: V836 = 0x89da40029
---
Entry stack: []
Stack pops: 0
Stack additions: [V825, S16, V824, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, V828, V829, V831, S4, S1, S2, S3, S0, S13, V832, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S0, V834, V835, S1, S2, S3, S4, S5, S6, S7, S8, S9, S0, 0x89da40029]
Exit stack: []

================================

Function 0:
Public function signature: 0x1793c314
Entry block: 0xc4
Exit block: 0x39e
Body: 0xc4, 0xcb, 0xcf, 0x11a, 0x2a0, 0x2b7, 0x2c3, 0x2c9, 0x2cd, 0x2e3, 0x346, 0x34a, 0x34b, 0x39e, 0x3a2, 0x3a3

Function 1:
Public function signature: 0x21e92d49
Entry block: 0x11c
Exit block: 0x151
Body: 0x11c, 0x151, 0x3a7, 0x3ff, 0x403, 0x40f, 0x410, 0x42a, 0x42b, 0x433, 0x437, 0x459, 0x45d, 0x495, 0x499, 0x4d5, 0x4d9, 0x4e1, 0x4e2

Function 2:
Public function signature: 0x872fe620
Entry block: 0x153
Exit block: 0x64a
Body: 0x153, 0x15a, 0x15e, 0x166, 0x4e6, 0x54a, 0x54e, 0x55a, 0x55b, 0x575, 0x576, 0x57e, 0x5a2, 0x5a3, 0x5ad, 0x5be, 0x5c2, 0x5c3, 0x5cf, 0x5d0, 0x5ea, 0x5eb, 0x5f3, 0x5f7, 0x64a, 0x64e, 0x64f, 0x650

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0x168
Exit block: 0x17b
Body: 0x168, 0x16f, 0x173, 0x17b, 0x652

Function 4:
Public function signature: 0x9066314e
Entry block: 0x1bd
Exit block: 0x1e0
Body: 0x1bd, 0x1c4, 0x1c8, 0x1e0, 0x678, 0x6d0, 0x6d4, 0x6e0, 0x6e1, 0x6fb, 0x6fc, 0x704, 0x708, 0x74d, 0x74e

Function 5:
Public function signature: 0xa5bbc423
Entry block: 0x1e2
Exit block: 0x23d
Body: 0x1e2, 0x1e9, 0x1ed, 0x23d, 0x751, 0x76b, 0x776, 0x77a, 0x791, 0x80c, 0x810, 0x821, 0x825, 0x83d, 0x848, 0x84c, 0x863, 0x89c, 0x8a0, 0x8ab, 0x8ac, 0x8c6, 0x8c7, 0x8cf, 0x8d3, 0x926, 0x92a, 0x92b, 0x92c

Function 6:
Public function signature: 0xc46f3e25
Entry block: 0x23f
Exit block: 0x252
Body: 0x23f, 0x246, 0x24a, 0x252, 0x930

Function 7:
Public function signature: 0xf341cae8
Entry block: 0x26c
Exit block: 0x29e
Body: 0x26c, 0x273, 0x277, 0x29e, 0x943, 0x99e, 0x9a2, 0x9b5, 0x9c2, 0x9c9, 0x9cd, 0x9d6, 0x9e3, 0xa15, 0xa16, 0xa1a, 0xa27, 0xa2f, 0xa3c, 0xa44, 0xa48, 0xa6d, 0xa6e, 0xa7f, 0xa80

Function 8:
Public fallback function
Entry block: 0x8c
Exit block: 0xc2
Body: 0x8c, 0x8d, 0x99, 0x9a, 0xb4, 0xb5, 0xbd, 0xc1, 0xc2

