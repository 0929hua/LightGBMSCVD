Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x51]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x8da5cb5b
0x3c EQ
0x3d PUSH2 0x51
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x8da5cb5b
0x3c: V13 = EQ 0x8da5cb5b V11
0x3d: V14 = 0x51
0x40: JUMPI 0x51 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xa8]
---
0x41 DUP1
0x42 PUSH4 0xf2fde38b
0x47 EQ
0x48 PUSH2 0xa8
0x4b JUMPI
---
0x42: V15 = 0xf2fde38b
0x47: V16 = EQ 0xf2fde38b V11
0x48: V17 = 0xa8
0x4b: JUMPI 0xa8 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x50]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d PUSH1 0x0
0x4f DUP1
0x50 REVERT
---
0x4c: JUMPDEST 
0x4d: V18 = 0x0
0x50: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x51
[0x51:0x58]
---
Predecessors: [0xd]
Successors: [0x59, 0x5d]
---
0x51 JUMPDEST
0x52 CALLVALUE
0x53 DUP1
0x54 ISZERO
0x55 PUSH2 0x5d
0x58 JUMPI
---
0x51: JUMPDEST 
0x52: V19 = CALLVALUE
0x54: V20 = ISZERO V19
0x55: V21 = 0x5d
0x58: JUMPI 0x5d V20
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V19]
Exit stack: [V11, V19]

================================

Block 0x59
[0x59:0x5c]
---
Predecessors: [0x51]
Successors: []
---
0x59 PUSH1 0x0
0x5b DUP1
0x5c REVERT
---
0x59: V22 = 0x0
0x5c: REVERT 0x0 0x0
---
Entry stack: [V11, V19]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V19]

================================

Block 0x5d
[0x5d:0x65]
---
Predecessors: [0x51]
Successors: [0xeb]
---
0x5d JUMPDEST
0x5e POP
0x5f PUSH2 0x66
0x62 PUSH2 0xeb
0x65 JUMP
---
0x5d: JUMPDEST 
0x5f: V23 = 0x66
0x62: V24 = 0xeb
0x65: JUMP 0xeb
---
Entry stack: [V11, V19]
Stack pops: 1
Stack additions: [0x66]
Exit stack: [V11, 0x66]

================================

Block 0x66
[0x66:0xa7]
---
Predecessors: [0xeb]
Successors: []
---
0x66 JUMPDEST
0x67 PUSH1 0x40
0x69 MLOAD
0x6a DUP1
0x6b DUP3
0x6c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x81 AND
0x82 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x97 AND
0x98 DUP2
0x99 MSTORE
0x9a PUSH1 0x20
0x9c ADD
0x9d SWAP2
0x9e POP
0x9f POP
0xa0 PUSH1 0x40
0xa2 MLOAD
0xa3 DUP1
0xa4 SWAP2
0xa5 SUB
0xa6 SWAP1
0xa7 RETURN
---
0x66: JUMPDEST 
0x67: V25 = 0x40
0x69: V26 = M[0x40]
0x6c: V27 = 0xffffffffffffffffffffffffffffffffffffffff
0x81: V28 = AND 0xffffffffffffffffffffffffffffffffffffffff V57
0x82: V29 = 0xffffffffffffffffffffffffffffffffffffffff
0x97: V30 = AND 0xffffffffffffffffffffffffffffffffffffffff V28
0x99: M[V26] = V30
0x9a: V31 = 0x20
0x9c: V32 = ADD 0x20 V26
0xa0: V33 = 0x40
0xa2: V34 = M[0x40]
0xa5: V35 = SUB V32 V34
0xa7: RETURN V34 V35
---
Entry stack: [V11, 0x66, V57]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x66]

================================

Block 0xa8
[0xa8:0xaf]
---
Predecessors: [0x41]
Successors: [0xb0, 0xb4]
---
0xa8 JUMPDEST
0xa9 CALLVALUE
0xaa DUP1
0xab ISZERO
0xac PUSH2 0xb4
0xaf JUMPI
---
0xa8: JUMPDEST 
0xa9: V36 = CALLVALUE
0xab: V37 = ISZERO V36
0xac: V38 = 0xb4
0xaf: JUMPI 0xb4 V37
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V36]
Exit stack: [V11, V36]

================================

Block 0xb0
[0xb0:0xb3]
---
Predecessors: [0xa8]
Successors: []
---
0xb0 PUSH1 0x0
0xb2 DUP1
0xb3 REVERT
---
0xb0: V39 = 0x0
0xb3: REVERT 0x0 0x0
---
Entry stack: [V11, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V36]

================================

Block 0xb4
[0xb4:0xe8]
---
Predecessors: [0xa8]
Successors: [0x110]
---
0xb4 JUMPDEST
0xb5 POP
0xb6 PUSH2 0xe9
0xb9 PUSH1 0x4
0xbb DUP1
0xbc CALLDATASIZE
0xbd SUB
0xbe DUP2
0xbf ADD
0xc0 SWAP1
0xc1 DUP1
0xc2 DUP1
0xc3 CALLDATALOAD
0xc4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd9 AND
0xda SWAP1
0xdb PUSH1 0x20
0xdd ADD
0xde SWAP1
0xdf SWAP3
0xe0 SWAP2
0xe1 SWAP1
0xe2 POP
0xe3 POP
0xe4 POP
0xe5 PUSH2 0x110
0xe8 JUMP
---
0xb4: JUMPDEST 
0xb6: V40 = 0xe9
0xb9: V41 = 0x4
0xbc: V42 = CALLDATASIZE
0xbd: V43 = SUB V42 0x4
0xbf: V44 = ADD 0x4 V43
0xc3: V45 = CALLDATALOAD 0x4
0xc4: V46 = 0xffffffffffffffffffffffffffffffffffffffff
0xd9: V47 = AND 0xffffffffffffffffffffffffffffffffffffffff V45
0xdb: V48 = 0x20
0xdd: V49 = ADD 0x20 0x4
0xe5: V50 = 0x110
0xe8: JUMP 0x110
---
Entry stack: [V11, V36]
Stack pops: 1
Stack additions: [0xe9, V47]
Exit stack: [V11, 0xe9, V47]

================================

Block 0xe9
[0xe9:0xea]
---
Predecessors: [0x16b]
Successors: []
---
0xe9 JUMPDEST
0xea STOP
---
0xe9: JUMPDEST 
0xea: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xeb
[0xeb:0x10f]
---
Predecessors: [0x5d]
Successors: [0x66]
---
0xeb JUMPDEST
0xec PUSH1 0x0
0xee DUP1
0xef SWAP1
0xf0 SLOAD
0xf1 SWAP1
0xf2 PUSH2 0x100
0xf5 EXP
0xf6 SWAP1
0xf7 DIV
0xf8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10d AND
0x10e DUP2
0x10f JUMP
---
0xeb: JUMPDEST 
0xec: V51 = 0x0
0xf0: V52 = S[0x0]
0xf2: V53 = 0x100
0xf5: V54 = EXP 0x100 0x0
0xf7: V55 = DIV V52 0x1
0xf8: V56 = 0xffffffffffffffffffffffffffffffffffffffff
0x10d: V57 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0x10f: JUMP 0x66
---
Entry stack: [V11, 0x66]
Stack pops: 1
Stack additions: [S0, V57]
Exit stack: [V11, 0x66, V57]

================================

Block 0x110
[0x110:0x166]
---
Predecessors: [0xb4]
Successors: [0x167, 0x16b]
---
0x110 JUMPDEST
0x111 PUSH1 0x0
0x113 DUP1
0x114 SWAP1
0x115 SLOAD
0x116 SWAP1
0x117 PUSH2 0x100
0x11a EXP
0x11b SWAP1
0x11c DIV
0x11d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x132 AND
0x133 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x148 AND
0x149 CALLER
0x14a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15f AND
0x160 EQ
0x161 ISZERO
0x162 ISZERO
0x163 PUSH2 0x16b
0x166 JUMPI
---
0x110: JUMPDEST 
0x111: V58 = 0x0
0x115: V59 = S[0x0]
0x117: V60 = 0x100
0x11a: V61 = EXP 0x100 0x0
0x11c: V62 = DIV V59 0x1
0x11d: V63 = 0xffffffffffffffffffffffffffffffffffffffff
0x132: V64 = AND 0xffffffffffffffffffffffffffffffffffffffff V62
0x133: V65 = 0xffffffffffffffffffffffffffffffffffffffff
0x148: V66 = AND 0xffffffffffffffffffffffffffffffffffffffff V64
0x149: V67 = CALLER
0x14a: V68 = 0xffffffffffffffffffffffffffffffffffffffff
0x15f: V69 = AND 0xffffffffffffffffffffffffffffffffffffffff V67
0x160: V70 = EQ V69 V66
0x161: V71 = ISZERO V70
0x162: V72 = ISZERO V71
0x163: V73 = 0x16b
0x166: JUMPI 0x16b V72
---
Entry stack: [V11, 0xe9, V47]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe9, V47]

================================

Block 0x167
[0x167:0x16a]
---
Predecessors: [0x110]
Successors: []
---
0x167 PUSH1 0x0
0x169 DUP1
0x16a REVERT
---
0x167: V74 = 0x0
0x16a: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe9, V47]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe9, V47]

================================

Block 0x16b
[0x16b:0x1ad]
---
Predecessors: [0x110]
Successors: [0xe9]
---
0x16b JUMPDEST
0x16c DUP1
0x16d PUSH1 0x0
0x16f DUP1
0x170 PUSH2 0x100
0x173 EXP
0x174 DUP2
0x175 SLOAD
0x176 DUP2
0x177 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18c MUL
0x18d NOT
0x18e AND
0x18f SWAP1
0x190 DUP4
0x191 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a6 AND
0x1a7 MUL
0x1a8 OR
0x1a9 SWAP1
0x1aa SSTORE
0x1ab POP
0x1ac POP
0x1ad JUMP
---
0x16b: JUMPDEST 
0x16d: V75 = 0x0
0x170: V76 = 0x100
0x173: V77 = EXP 0x100 0x0
0x175: V78 = S[0x0]
0x177: V79 = 0xffffffffffffffffffffffffffffffffffffffff
0x18c: V80 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x18d: V81 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x18e: V82 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V78
0x191: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a6: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V47
0x1a7: V85 = MUL V84 0x1
0x1a8: V86 = OR V85 V82
0x1aa: S[0x0] = V86
0x1ad: JUMP 0xe9
---
Entry stack: [V11, 0xe9, V47]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x1ae
[0x1ae:0x1e6]
---
Predecessors: []
Successors: [0x1e7]
---
0x1ae STOP
0x1af LOG1
0x1b0 PUSH6 0x627a7a723058
0x1b7 SHA3
0x1b8 MISSING 0xcb
0x1b9 MISSING 0xd3
0x1ba PUSH12 0xc0c9a7d389703674fa90aca3
0x1c7 MISSING 0xe9
0x1c8 STATICCALL
0x1c9 DUP9
0x1ca NOT
0x1cb LT
0x1cc MISSING 0xc1
0x1cd MISSING 0x2e
0x1ce MISSING 0xca
0x1cf MISSING 0xa9
0x1d0 PUSH4 0xfcd0c316
0x1d5 MISSING 0xac
0x1d6 GAS
0x1d7 AND
0x1d8 STOP
0x1d9 MISSING 0x29
0x1da PUSH1 0x80
0x1dc PUSH1 0x40
0x1de MSTORE
0x1df PUSH1 0x4
0x1e1 CALLDATASIZE
0x1e2 LT
0x1e3 PUSH2 0x57
0x1e6 JUMPI
---
0x1ae: STOP 
0x1af: LOG S0 S1 S2
0x1b0: V87 = 0x627a7a723058
0x1b7: V88 = SHA3 0x627a7a723058 S3
0x1b8: MISSING 0xcb
0x1b9: MISSING 0xd3
0x1ba: V89 = 0xc0c9a7d389703674fa90aca3
0x1c7: MISSING 0xe9
0x1c8: V90 = STATICCALL S0 S1 S2 S3 S4 S5
0x1ca: V91 = NOT S13
0x1cb: V92 = LT V91 V90
0x1cc: MISSING 0xc1
0x1cd: MISSING 0x2e
0x1ce: MISSING 0xca
0x1cf: MISSING 0xa9
0x1d0: V93 = 0xfcd0c316
0x1d5: MISSING 0xac
0x1d6: V94 = GAS
0x1d7: V95 = AND V94 S0
0x1d8: STOP 
0x1d9: MISSING 0x29
0x1da: V96 = 0x80
0x1dc: V97 = 0x40
0x1de: M[0x40] = 0x80
0x1df: V98 = 0x4
0x1e1: V99 = CALLDATASIZE
0x1e2: V100 = LT V99 0x4
0x1e3: V101 = 0x57
0x1e6: THROWI V100
---
Entry stack: []
Stack pops: 0
Stack additions: [V88, 0xc0c9a7d389703674fa90aca3, V92, S6, S7, S8, S9, S10, S11, S12, S13, 0xfcd0c316, V95]
Exit stack: []

================================

Block 0x1e7
[0x1e7:0x21a]
---
Predecessors: [0x1ae]
Successors: [0x21b]
---
0x1e7 PUSH1 0x0
0x1e9 CALLDATALOAD
0x1ea PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x208 SWAP1
0x209 DIV
0x20a PUSH4 0xffffffff
0x20f AND
0x210 DUP1
0x211 PUSH4 0x7da5efc8
0x216 EQ
0x217 PUSH2 0x5c
0x21a JUMPI
---
0x1e7: V102 = 0x0
0x1e9: V103 = CALLDATALOAD 0x0
0x1ea: V104 = 0x100000000000000000000000000000000000000000000000000000000
0x209: V105 = DIV V103 0x100000000000000000000000000000000000000000000000000000000
0x20a: V106 = 0xffffffff
0x20f: V107 = AND 0xffffffff V105
0x211: V108 = 0x7da5efc8
0x216: V109 = EQ 0x7da5efc8 V107
0x217: V110 = 0x5c
0x21a: THROWI V109
---
Entry stack: []
Stack pops: 0
Stack additions: [V107]
Exit stack: [V107]

================================

Block 0x21b
[0x21b:0x225]
---
Predecessors: [0x1e7]
Successors: [0x226]
---
0x21b DUP1
0x21c PUSH4 0x8da5cb5b
0x221 EQ
0x222 PUSH2 0x125
0x225 JUMPI
---
0x21c: V111 = 0x8da5cb5b
0x221: V112 = EQ 0x8da5cb5b V107
0x222: V113 = 0x125
0x225: THROWI V112
---
Entry stack: [V107]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V107]

================================

Block 0x226
[0x226:0x230]
---
Predecessors: [0x21b]
Successors: [0x231]
---
0x226 DUP1
0x227 PUSH4 0xf2fde38b
0x22c EQ
0x22d PUSH2 0x17c
0x230 JUMPI
---
0x227: V114 = 0xf2fde38b
0x22c: V115 = EQ 0xf2fde38b V107
0x22d: V116 = 0x17c
0x230: THROWI V115
---
Entry stack: [V107]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V107]

================================

Block 0x231
[0x231:0x23d]
---
Predecessors: [0x226]
Successors: [0x23e]
---
0x231 JUMPDEST
0x232 PUSH1 0x0
0x234 DUP1
0x235 REVERT
0x236 JUMPDEST
0x237 CALLVALUE
0x238 DUP1
0x239 ISZERO
0x23a PUSH2 0x68
0x23d JUMPI
---
0x231: JUMPDEST 
0x232: V117 = 0x0
0x235: REVERT 0x0 0x0
0x236: JUMPDEST 
0x237: V118 = CALLVALUE
0x239: V119 = ISZERO V118
0x23a: V120 = 0x68
0x23d: THROWI V119
---
Entry stack: [V107]
Stack pops: 0
Stack additions: [V118]
Exit stack: []

================================

Block 0x23e
[0x23e:0x306]
---
Predecessors: [0x231]
Successors: [0x307]
---
0x23e PUSH1 0x0
0x240 DUP1
0x241 REVERT
0x242 JUMPDEST
0x243 POP
0x244 PUSH2 0x123
0x247 PUSH1 0x4
0x249 DUP1
0x24a CALLDATASIZE
0x24b SUB
0x24c DUP2
0x24d ADD
0x24e SWAP1
0x24f DUP1
0x250 DUP1
0x251 CALLDATALOAD
0x252 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x267 AND
0x268 SWAP1
0x269 PUSH1 0x20
0x26b ADD
0x26c SWAP1
0x26d SWAP3
0x26e SWAP2
0x26f SWAP1
0x270 DUP1
0x271 CALLDATALOAD
0x272 SWAP1
0x273 PUSH1 0x20
0x275 ADD
0x276 SWAP1
0x277 DUP3
0x278 ADD
0x279 DUP1
0x27a CALLDATALOAD
0x27b SWAP1
0x27c PUSH1 0x20
0x27e ADD
0x27f SWAP1
0x280 DUP1
0x281 DUP1
0x282 PUSH1 0x20
0x284 MUL
0x285 PUSH1 0x20
0x287 ADD
0x288 PUSH1 0x40
0x28a MLOAD
0x28b SWAP1
0x28c DUP2
0x28d ADD
0x28e PUSH1 0x40
0x290 MSTORE
0x291 DUP1
0x292 SWAP4
0x293 SWAP3
0x294 SWAP2
0x295 SWAP1
0x296 DUP2
0x297 DUP2
0x298 MSTORE
0x299 PUSH1 0x20
0x29b ADD
0x29c DUP4
0x29d DUP4
0x29e PUSH1 0x20
0x2a0 MUL
0x2a1 DUP1
0x2a2 DUP3
0x2a3 DUP5
0x2a4 CALLDATACOPY
0x2a5 DUP3
0x2a6 ADD
0x2a7 SWAP2
0x2a8 POP
0x2a9 POP
0x2aa POP
0x2ab POP
0x2ac POP
0x2ad POP
0x2ae SWAP2
0x2af SWAP3
0x2b0 SWAP2
0x2b1 SWAP3
0x2b2 SWAP1
0x2b3 DUP1
0x2b4 CALLDATALOAD
0x2b5 SWAP1
0x2b6 PUSH1 0x20
0x2b8 ADD
0x2b9 SWAP1
0x2ba DUP3
0x2bb ADD
0x2bc DUP1
0x2bd CALLDATALOAD
0x2be SWAP1
0x2bf PUSH1 0x20
0x2c1 ADD
0x2c2 SWAP1
0x2c3 DUP1
0x2c4 DUP1
0x2c5 PUSH1 0x20
0x2c7 MUL
0x2c8 PUSH1 0x20
0x2ca ADD
0x2cb PUSH1 0x40
0x2cd MLOAD
0x2ce SWAP1
0x2cf DUP2
0x2d0 ADD
0x2d1 PUSH1 0x40
0x2d3 MSTORE
0x2d4 DUP1
0x2d5 SWAP4
0x2d6 SWAP3
0x2d7 SWAP2
0x2d8 SWAP1
0x2d9 DUP2
0x2da DUP2
0x2db MSTORE
0x2dc PUSH1 0x20
0x2de ADD
0x2df DUP4
0x2e0 DUP4
0x2e1 PUSH1 0x20
0x2e3 MUL
0x2e4 DUP1
0x2e5 DUP3
0x2e6 DUP5
0x2e7 CALLDATACOPY
0x2e8 DUP3
0x2e9 ADD
0x2ea SWAP2
0x2eb POP
0x2ec POP
0x2ed POP
0x2ee POP
0x2ef POP
0x2f0 POP
0x2f1 SWAP2
0x2f2 SWAP3
0x2f3 SWAP2
0x2f4 SWAP3
0x2f5 SWAP1
0x2f6 POP
0x2f7 POP
0x2f8 POP
0x2f9 PUSH2 0x1bf
0x2fc JUMP
0x2fd JUMPDEST
0x2fe STOP
0x2ff JUMPDEST
0x300 CALLVALUE
0x301 DUP1
0x302 ISZERO
0x303 PUSH2 0x131
0x306 JUMPI
---
0x23e: V121 = 0x0
0x241: REVERT 0x0 0x0
0x242: JUMPDEST 
0x244: V122 = 0x123
0x247: V123 = 0x4
0x24a: V124 = CALLDATASIZE
0x24b: V125 = SUB V124 0x4
0x24d: V126 = ADD 0x4 V125
0x251: V127 = CALLDATALOAD 0x4
0x252: V128 = 0xffffffffffffffffffffffffffffffffffffffff
0x267: V129 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x269: V130 = 0x20
0x26b: V131 = ADD 0x20 0x4
0x271: V132 = CALLDATALOAD 0x24
0x273: V133 = 0x20
0x275: V134 = ADD 0x20 0x24
0x278: V135 = ADD 0x4 V132
0x27a: V136 = CALLDATALOAD V135
0x27c: V137 = 0x20
0x27e: V138 = ADD 0x20 V135
0x282: V139 = 0x20
0x284: V140 = MUL 0x20 V136
0x285: V141 = 0x20
0x287: V142 = ADD 0x20 V140
0x288: V143 = 0x40
0x28a: V144 = M[0x40]
0x28d: V145 = ADD V144 V142
0x28e: V146 = 0x40
0x290: M[0x40] = V145
0x298: M[V144] = V136
0x299: V147 = 0x20
0x29b: V148 = ADD 0x20 V144
0x29e: V149 = 0x20
0x2a0: V150 = MUL 0x20 V136
0x2a4: CALLDATACOPY V148 V138 V150
0x2a6: V151 = ADD V148 V150
0x2b4: V152 = CALLDATALOAD 0x44
0x2b6: V153 = 0x20
0x2b8: V154 = ADD 0x20 0x44
0x2bb: V155 = ADD 0x4 V152
0x2bd: V156 = CALLDATALOAD V155
0x2bf: V157 = 0x20
0x2c1: V158 = ADD 0x20 V155
0x2c5: V159 = 0x20
0x2c7: V160 = MUL 0x20 V156
0x2c8: V161 = 0x20
0x2ca: V162 = ADD 0x20 V160
0x2cb: V163 = 0x40
0x2cd: V164 = M[0x40]
0x2d0: V165 = ADD V164 V162
0x2d1: V166 = 0x40
0x2d3: M[0x40] = V165
0x2db: M[V164] = V156
0x2dc: V167 = 0x20
0x2de: V168 = ADD 0x20 V164
0x2e1: V169 = 0x20
0x2e3: V170 = MUL 0x20 V156
0x2e7: CALLDATACOPY V168 V158 V170
0x2e9: V171 = ADD V168 V170
0x2f9: V172 = 0x1bf
0x2fc: THROW 
0x2fd: JUMPDEST 
0x2fe: STOP 
0x2ff: JUMPDEST 
0x300: V173 = CALLVALUE
0x302: V174 = ISZERO V173
0x303: V175 = 0x131
0x306: THROWI V174
---
Entry stack: [V118]
Stack pops: 0
Stack additions: [V164, V144, V129, 0x123, V173]
Exit stack: []

================================

Block 0x307
[0x307:0x35d]
---
Predecessors: [0x23e]
Successors: [0x35e]
---
0x307 PUSH1 0x0
0x309 DUP1
0x30a REVERT
0x30b JUMPDEST
0x30c POP
0x30d PUSH2 0x13a
0x310 PUSH2 0x326
0x313 JUMP
0x314 JUMPDEST
0x315 PUSH1 0x40
0x317 MLOAD
0x318 DUP1
0x319 DUP3
0x31a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x32f AND
0x330 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x345 AND
0x346 DUP2
0x347 MSTORE
0x348 PUSH1 0x20
0x34a ADD
0x34b SWAP2
0x34c POP
0x34d POP
0x34e PUSH1 0x40
0x350 MLOAD
0x351 DUP1
0x352 SWAP2
0x353 SUB
0x354 SWAP1
0x355 RETURN
0x356 JUMPDEST
0x357 CALLVALUE
0x358 DUP1
0x359 ISZERO
0x35a PUSH2 0x188
0x35d JUMPI
---
0x307: V176 = 0x0
0x30a: REVERT 0x0 0x0
0x30b: JUMPDEST 
0x30d: V177 = 0x13a
0x310: V178 = 0x326
0x313: THROW 
0x314: JUMPDEST 
0x315: V179 = 0x40
0x317: V180 = M[0x40]
0x31a: V181 = 0xffffffffffffffffffffffffffffffffffffffff
0x32f: V182 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x330: V183 = 0xffffffffffffffffffffffffffffffffffffffff
0x345: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V182
0x347: M[V180] = V184
0x348: V185 = 0x20
0x34a: V186 = ADD 0x20 V180
0x34e: V187 = 0x40
0x350: V188 = M[0x40]
0x353: V189 = SUB V186 V188
0x355: RETURN V188 V189
0x356: JUMPDEST 
0x357: V190 = CALLVALUE
0x359: V191 = ISZERO V190
0x35a: V192 = 0x188
0x35d: THROWI V191
---
Entry stack: [V173]
Stack pops: 0
Stack additions: [0x13a, V190]
Exit stack: []

================================

Block 0x35e
[0x35e:0x3f1]
---
Predecessors: [0x307]
Successors: [0x3f2]
---
0x35e PUSH1 0x0
0x360 DUP1
0x361 REVERT
0x362 JUMPDEST
0x363 POP
0x364 PUSH2 0x1bd
0x367 PUSH1 0x4
0x369 DUP1
0x36a CALLDATASIZE
0x36b SUB
0x36c DUP2
0x36d ADD
0x36e SWAP1
0x36f DUP1
0x370 DUP1
0x371 CALLDATALOAD
0x372 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x387 AND
0x388 SWAP1
0x389 PUSH1 0x20
0x38b ADD
0x38c SWAP1
0x38d SWAP3
0x38e SWAP2
0x38f SWAP1
0x390 POP
0x391 POP
0x392 POP
0x393 PUSH2 0x34b
0x396 JUMP
0x397 JUMPDEST
0x398 STOP
0x399 JUMPDEST
0x39a PUSH1 0x0
0x39c DUP1
0x39d PUSH1 0x0
0x39f SWAP1
0x3a0 SLOAD
0x3a1 SWAP1
0x3a2 PUSH2 0x100
0x3a5 EXP
0x3a6 SWAP1
0x3a7 DIV
0x3a8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3bd AND
0x3be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d3 AND
0x3d4 CALLER
0x3d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ea AND
0x3eb EQ
0x3ec ISZERO
0x3ed ISZERO
0x3ee PUSH2 0x21c
0x3f1 JUMPI
---
0x35e: V193 = 0x0
0x361: REVERT 0x0 0x0
0x362: JUMPDEST 
0x364: V194 = 0x1bd
0x367: V195 = 0x4
0x36a: V196 = CALLDATASIZE
0x36b: V197 = SUB V196 0x4
0x36d: V198 = ADD 0x4 V197
0x371: V199 = CALLDATALOAD 0x4
0x372: V200 = 0xffffffffffffffffffffffffffffffffffffffff
0x387: V201 = AND 0xffffffffffffffffffffffffffffffffffffffff V199
0x389: V202 = 0x20
0x38b: V203 = ADD 0x20 0x4
0x393: V204 = 0x34b
0x396: THROW 
0x397: JUMPDEST 
0x398: STOP 
0x399: JUMPDEST 
0x39a: V205 = 0x0
0x39d: V206 = 0x0
0x3a0: V207 = S[0x0]
0x3a2: V208 = 0x100
0x3a5: V209 = EXP 0x100 0x0
0x3a7: V210 = DIV V207 0x1
0x3a8: V211 = 0xffffffffffffffffffffffffffffffffffffffff
0x3bd: V212 = AND 0xffffffffffffffffffffffffffffffffffffffff V210
0x3be: V213 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d3: V214 = AND 0xffffffffffffffffffffffffffffffffffffffff V212
0x3d4: V215 = CALLER
0x3d5: V216 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ea: V217 = AND 0xffffffffffffffffffffffffffffffffffffffff V215
0x3eb: V218 = EQ V217 V214
0x3ec: V219 = ISZERO V218
0x3ed: V220 = ISZERO V219
0x3ee: V221 = 0x21c
0x3f1: THROWI V220
---
Entry stack: [V190]
Stack pops: 0
Stack additions: [V201, 0x1bd, 0x0]
Exit stack: []

================================

Block 0x3f2
[0x3f2:0x3fa]
---
Predecessors: [0x35e]
Successors: [0x3fb]
---
0x3f2 PUSH1 0x0
0x3f4 DUP1
0x3f5 REVERT
0x3f6 JUMPDEST
0x3f7 PUSH1 0x0
0x3f9 SWAP1
0x3fa POP
---
0x3f2: V222 = 0x0
0x3f5: REVERT 0x0 0x0
0x3f6: JUMPDEST 
0x3f7: V223 = 0x0
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: []

================================

Block 0x3fb
[0x3fb:0x404]
---
Predecessors: [0x3f2]
Successors: [0x405]
---
0x3fb JUMPDEST
0x3fc DUP3
0x3fd MLOAD
0x3fe DUP2
0x3ff LT
0x400 ISZERO
0x401 PUSH2 0x320
0x404 JUMPI
---
0x3fb: JUMPDEST 
0x3fd: V224 = M[S2]
0x3ff: V225 = LT 0x0 V224
0x400: V226 = ISZERO V225
0x401: V227 = 0x320
0x404: THROWI V226
---
Entry stack: [0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S1, S0, 0x0]

================================

Block 0x405
[0x405:0x42c]
---
Predecessors: [0x3fb]
Successors: [0x42d]
---
0x405 DUP4
0x406 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x41b AND
0x41c PUSH4 0xa9059cbb
0x421 DUP5
0x422 DUP4
0x423 DUP2
0x424 MLOAD
0x425 DUP2
0x426 LT
0x427 ISZERO
0x428 ISZERO
0x429 PUSH2 0x254
0x42c JUMPI
---
0x406: V228 = 0xffffffffffffffffffffffffffffffffffffffff
0x41b: V229 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x41c: V230 = 0xa9059cbb
0x424: V231 = M[S2]
0x426: V232 = LT 0x0 V231
0x427: V233 = ISZERO V232
0x428: V234 = ISZERO V233
0x429: V235 = 0x254
0x42c: THROWI V234
---
Entry stack: [S2, S1, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V229, 0xa9059cbb, S2, S0]
Exit stack: [S0, S2, S1, 0x0, V229, 0xa9059cbb, S2, 0x0]

================================

Block 0x42d
[0x42d:0x444]
---
Predecessors: [0x405]
Successors: [0x445]
---
0x42d INVALID
0x42e JUMPDEST
0x42f SWAP1
0x430 PUSH1 0x20
0x432 ADD
0x433 SWAP1
0x434 PUSH1 0x20
0x436 MUL
0x437 ADD
0x438 MLOAD
0x439 DUP5
0x43a DUP5
0x43b DUP2
0x43c MLOAD
0x43d DUP2
0x43e LT
0x43f ISZERO
0x440 ISZERO
0x441 PUSH2 0x26c
0x444 JUMPI
---
0x42d: INVALID 
0x42e: JUMPDEST 
0x430: V236 = 0x20
0x432: V237 = ADD 0x20 S1
0x434: V238 = 0x20
0x436: V239 = MUL 0x20 S0
0x437: V240 = ADD V239 V237
0x438: V241 = M[V240]
0x43c: V242 = M[S5]
0x43e: V243 = LT S4 V242
0x43f: V244 = ISZERO V243
0x440: V245 = ISZERO V244
0x441: V246 = 0x26c
0x444: THROWI V245
---
Entry stack: [S7, S6, S5, 0x0, V229, 0xa9059cbb, S1, 0x0]
Stack pops: 0
Stack additions: [S4, S5, V241, S2, S3, S4, S5]
Exit stack: []

================================

Block 0x445
[0x445:0x4d0]
---
Predecessors: [0x42d]
Successors: [0x4d1]
---
0x445 INVALID
0x446 JUMPDEST
0x447 SWAP1
0x448 PUSH1 0x20
0x44a ADD
0x44b SWAP1
0x44c PUSH1 0x20
0x44e MUL
0x44f ADD
0x450 MLOAD
0x451 PUSH1 0x40
0x453 MLOAD
0x454 DUP4
0x455 PUSH4 0xffffffff
0x45a AND
0x45b PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x479 MUL
0x47a DUP2
0x47b MSTORE
0x47c PUSH1 0x4
0x47e ADD
0x47f DUP1
0x480 DUP4
0x481 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x496 AND
0x497 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ac AND
0x4ad DUP2
0x4ae MSTORE
0x4af PUSH1 0x20
0x4b1 ADD
0x4b2 DUP3
0x4b3 DUP2
0x4b4 MSTORE
0x4b5 PUSH1 0x20
0x4b7 ADD
0x4b8 SWAP3
0x4b9 POP
0x4ba POP
0x4bb POP
0x4bc PUSH1 0x0
0x4be PUSH1 0x40
0x4c0 MLOAD
0x4c1 DUP1
0x4c2 DUP4
0x4c3 SUB
0x4c4 DUP2
0x4c5 PUSH1 0x0
0x4c7 DUP8
0x4c8 DUP1
0x4c9 EXTCODESIZE
0x4ca ISZERO
0x4cb DUP1
0x4cc ISZERO
0x4cd PUSH2 0x2fb
0x4d0 JUMPI
---
0x445: INVALID 
0x446: JUMPDEST 
0x448: V247 = 0x20
0x44a: V248 = ADD 0x20 S1
0x44c: V249 = 0x20
0x44e: V250 = MUL 0x20 S0
0x44f: V251 = ADD V250 V248
0x450: V252 = M[V251]
0x451: V253 = 0x40
0x453: V254 = M[0x40]
0x455: V255 = 0xffffffff
0x45a: V256 = AND 0xffffffff S3
0x45b: V257 = 0x100000000000000000000000000000000000000000000000000000000
0x479: V258 = MUL 0x100000000000000000000000000000000000000000000000000000000 V256
0x47b: M[V254] = V258
0x47c: V259 = 0x4
0x47e: V260 = ADD 0x4 V254
0x481: V261 = 0xffffffffffffffffffffffffffffffffffffffff
0x496: V262 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x497: V263 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ac: V264 = AND 0xffffffffffffffffffffffffffffffffffffffff V262
0x4ae: M[V260] = V264
0x4af: V265 = 0x20
0x4b1: V266 = ADD 0x20 V260
0x4b4: M[V266] = V252
0x4b5: V267 = 0x20
0x4b7: V268 = ADD 0x20 V266
0x4bc: V269 = 0x0
0x4be: V270 = 0x40
0x4c0: V271 = M[0x40]
0x4c3: V272 = SUB V268 V271
0x4c5: V273 = 0x0
0x4c9: V274 = EXTCODESIZE S4
0x4ca: V275 = ISZERO V274
0x4cc: V276 = ISZERO V275
0x4cd: V277 = 0x2fb
0x4d0: THROWI V276
---
Entry stack: [S6, S5, S4, S3, V241, S1, S0]
Stack pops: 0
Stack additions: [V275, S4, 0x0, V271, V272, V271, 0x0, V268, S3, S4]
Exit stack: []

================================

Block 0x4d1
[0x4d1:0x4df]
---
Predecessors: [0x445]
Successors: [0x4e0]
---
0x4d1 PUSH1 0x0
0x4d3 DUP1
0x4d4 REVERT
0x4d5 JUMPDEST
0x4d6 POP
0x4d7 GAS
0x4d8 CALL
0x4d9 ISZERO
0x4da DUP1
0x4db ISZERO
0x4dc PUSH2 0x30f
0x4df JUMPI
---
0x4d1: V278 = 0x0
0x4d4: REVERT 0x0 0x0
0x4d5: JUMPDEST 
0x4d7: V279 = GAS
0x4d8: V280 = CALL V279 S1 S2 S3 S4 S5 S6
0x4d9: V281 = ISZERO V280
0x4db: V282 = ISZERO V281
0x4dc: V283 = 0x30f
0x4df: THROWI V282
---
Entry stack: [S9, S8, V268, 0x0, V271, V272, V271, 0x0, S1, V275]
Stack pops: 0
Stack additions: [V281]
Exit stack: []

================================

Block 0x4e0
[0x4e0:0x57b]
---
Predecessors: [0x4d1]
Successors: [0x57c]
---
0x4e0 RETURNDATASIZE
0x4e1 PUSH1 0x0
0x4e3 DUP1
0x4e4 RETURNDATACOPY
0x4e5 RETURNDATASIZE
0x4e6 PUSH1 0x0
0x4e8 REVERT
0x4e9 JUMPDEST
0x4ea POP
0x4eb POP
0x4ec POP
0x4ed POP
0x4ee DUP1
0x4ef DUP1
0x4f0 PUSH1 0x1
0x4f2 ADD
0x4f3 SWAP2
0x4f4 POP
0x4f5 POP
0x4f6 PUSH2 0x221
0x4f9 JUMP
0x4fa JUMPDEST
0x4fb POP
0x4fc POP
0x4fd POP
0x4fe POP
0x4ff JUMP
0x500 JUMPDEST
0x501 PUSH1 0x0
0x503 DUP1
0x504 SWAP1
0x505 SLOAD
0x506 SWAP1
0x507 PUSH2 0x100
0x50a EXP
0x50b SWAP1
0x50c DIV
0x50d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x522 AND
0x523 DUP2
0x524 JUMP
0x525 JUMPDEST
0x526 PUSH1 0x0
0x528 DUP1
0x529 SWAP1
0x52a SLOAD
0x52b SWAP1
0x52c PUSH2 0x100
0x52f EXP
0x530 SWAP1
0x531 DIV
0x532 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x547 AND
0x548 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x55d AND
0x55e CALLER
0x55f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x574 AND
0x575 EQ
0x576 ISZERO
0x577 ISZERO
0x578 PUSH2 0x3a6
0x57b JUMPI
---
0x4e0: V284 = RETURNDATASIZE
0x4e1: V285 = 0x0
0x4e4: RETURNDATACOPY 0x0 0x0 V284
0x4e5: V286 = RETURNDATASIZE
0x4e6: V287 = 0x0
0x4e8: REVERT 0x0 V286
0x4e9: JUMPDEST 
0x4f0: V288 = 0x1
0x4f2: V289 = ADD 0x1 S4
0x4f6: V290 = 0x221
0x4f9: THROW 
0x4fa: JUMPDEST 
0x4ff: JUMP S4
0x500: JUMPDEST 
0x501: V291 = 0x0
0x505: V292 = S[0x0]
0x507: V293 = 0x100
0x50a: V294 = EXP 0x100 0x0
0x50c: V295 = DIV V292 0x1
0x50d: V296 = 0xffffffffffffffffffffffffffffffffffffffff
0x522: V297 = AND 0xffffffffffffffffffffffffffffffffffffffff V295
0x524: JUMP S0
0x525: JUMPDEST 
0x526: V298 = 0x0
0x52a: V299 = S[0x0]
0x52c: V300 = 0x100
0x52f: V301 = EXP 0x100 0x0
0x531: V302 = DIV V299 0x1
0x532: V303 = 0xffffffffffffffffffffffffffffffffffffffff
0x547: V304 = AND 0xffffffffffffffffffffffffffffffffffffffff V302
0x548: V305 = 0xffffffffffffffffffffffffffffffffffffffff
0x55d: V306 = AND 0xffffffffffffffffffffffffffffffffffffffff V304
0x55e: V307 = CALLER
0x55f: V308 = 0xffffffffffffffffffffffffffffffffffffffff
0x574: V309 = AND 0xffffffffffffffffffffffffffffffffffffffff V307
0x575: V310 = EQ V309 V306
0x576: V311 = ISZERO V310
0x577: V312 = ISZERO V311
0x578: V313 = 0x3a6
0x57b: THROWI V312
---
Entry stack: [V281]
Stack pops: 0
Stack additions: [V289, V297, S0]
Exit stack: []

================================

Block 0x57c
[0x57c:0x5ee]
---
Predecessors: [0x4e0]
Successors: []
---
0x57c PUSH1 0x0
0x57e DUP1
0x57f REVERT
0x580 JUMPDEST
0x581 DUP1
0x582 PUSH1 0x0
0x584 DUP1
0x585 PUSH2 0x100
0x588 EXP
0x589 DUP2
0x58a SLOAD
0x58b DUP2
0x58c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5a1 MUL
0x5a2 NOT
0x5a3 AND
0x5a4 SWAP1
0x5a5 DUP4
0x5a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5bb AND
0x5bc MUL
0x5bd OR
0x5be SWAP1
0x5bf SSTORE
0x5c0 POP
0x5c1 POP
0x5c2 JUMP
0x5c3 STOP
0x5c4 LOG1
0x5c5 PUSH6 0x627a7a723058
0x5cc SHA3
0x5cd PUSH21 0x9ddd8177d40521a316c6b3475ee4118a2cbb11c293
0x5e3 PUSH2 0x168b
0x5e6 MISSING 0xea
0x5e7 PUSH7 0xececdc577e0029
---
0x57c: V314 = 0x0
0x57f: REVERT 0x0 0x0
0x580: JUMPDEST 
0x582: V315 = 0x0
0x585: V316 = 0x100
0x588: V317 = EXP 0x100 0x0
0x58a: V318 = S[0x0]
0x58c: V319 = 0xffffffffffffffffffffffffffffffffffffffff
0x5a1: V320 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x5a2: V321 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x5a3: V322 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V318
0x5a6: V323 = 0xffffffffffffffffffffffffffffffffffffffff
0x5bb: V324 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x5bc: V325 = MUL V324 0x1
0x5bd: V326 = OR V325 V322
0x5bf: S[0x0] = V326
0x5c2: JUMP S1
0x5c3: STOP 
0x5c4: LOG S0 S1 S2
0x5c5: V327 = 0x627a7a723058
0x5cc: V328 = SHA3 0x627a7a723058 S3
0x5cd: V329 = 0x9ddd8177d40521a316c6b3475ee4118a2cbb11c293
0x5e3: V330 = 0x168b
0x5e6: MISSING 0xea
0x5e7: V331 = 0xececdc577e0029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x168b, 0x9ddd8177d40521a316c6b3475ee4118a2cbb11c293, V328, 0xececdc577e0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x8da5cb5b
Entry block: 0x51
Exit block: 0x66
Body: 0x51, 0x59, 0x5d, 0x66, 0xeb

Function 1:
Public function signature: 0xf2fde38b
Entry block: 0xa8
Exit block: 0xe9
Body: 0xa8, 0xb0, 0xb4, 0xe9, 0x110, 0x167, 0x16b

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

