Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x99]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x99
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x99
0xc: JUMPI 0x99 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x9e]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x1047456e
0x3c EQ
0x3d PUSH2 0x9e
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x1047456e
0x3c: V13 = EQ 0x1047456e V11
0x3d: V14 = 0x9e
0x40: JUMPI 0x9e V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x10b]
---
0x41 DUP1
0x42 PUSH4 0x11af110c
0x47 EQ
0x48 PUSH2 0x10b
0x4b JUMPI
---
0x42: V15 = 0x11af110c
0x47: V16 = EQ 0x11af110c V11
0x48: V17 = 0x10b
0x4b: JUMPI 0x10b V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x162]
---
0x4c DUP1
0x4d PUSH4 0x13888565
0x52 EQ
0x53 PUSH2 0x162
0x56 JUMPI
---
0x4d: V18 = 0x13888565
0x52: V19 = EQ 0x13888565 V11
0x53: V20 = 0x162
0x56: JUMPI 0x162 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x194]
---
0x57 DUP1
0x58 PUSH4 0x37f42841
0x5d EQ
0x5e PUSH2 0x194
0x61 JUMPI
---
0x58: V21 = 0x37f42841
0x5d: V22 = EQ 0x37f42841 V11
0x5e: V23 = 0x194
0x61: JUMPI 0x194 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x1eb]
---
0x62 DUP1
0x63 PUSH4 0x5c221816
0x68 EQ
0x69 PUSH2 0x1eb
0x6c JUMPI
---
0x63: V24 = 0x5c221816
0x68: V25 = EQ 0x5c221816 V11
0x69: V26 = 0x1eb
0x6c: JUMPI 0x1eb V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x238]
---
0x6d DUP1
0x6e PUSH4 0x7d7c7258
0x73 EQ
0x74 PUSH2 0x238
0x77 JUMPI
---
0x6e: V27 = 0x7d7c7258
0x73: V28 = EQ 0x7d7c7258 V11
0x74: V29 = 0x238
0x77: JUMPI 0x238 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x285]
---
0x78 DUP1
0x79 PUSH4 0x827f143e
0x7e EQ
0x7f PUSH2 0x285
0x82 JUMPI
---
0x79: V30 = 0x827f143e
0x7e: V31 = EQ 0x827f143e V11
0x7f: V32 = 0x285
0x82: JUMPI 0x285 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x8d]
---
Predecessors: [0x78]
Successors: [0x8e, 0x2b2]
---
0x83 DUP1
0x84 PUSH4 0x947a3168
0x89 EQ
0x8a PUSH2 0x2b2
0x8d JUMPI
---
0x84: V33 = 0x947a3168
0x89: V34 = EQ 0x947a3168 V11
0x8a: V35 = 0x2b2
0x8d: JUMPI 0x2b2 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8e
[0x8e:0x98]
---
Predecessors: [0x83]
Successors: [0x99, 0x342]
---
0x8e DUP1
0x8f PUSH4 0xc1d5e84f
0x94 EQ
0x95 PUSH2 0x342
0x98 JUMPI
---
0x8f: V36 = 0xc1d5e84f
0x94: V37 = EQ 0xc1d5e84f V11
0x95: V38 = 0x342
0x98: JUMPI 0x342 V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x99
[0x99:0x9d]
---
Predecessors: [0x0, 0x8e]
Successors: []
---
0x99 JUMPDEST
0x9a PUSH1 0x0
0x9c DUP1
0x9d REVERT
---
0x99: JUMPDEST 
0x9a: V39 = 0x0
0x9d: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9e
[0x9e:0xa5]
---
Predecessors: [0xd]
Successors: [0xa6, 0xaa]
---
0x9e JUMPDEST
0x9f CALLVALUE
0xa0 DUP1
0xa1 ISZERO
0xa2 PUSH2 0xaa
0xa5 JUMPI
---
0x9e: JUMPDEST 
0x9f: V40 = CALLVALUE
0xa1: V41 = ISZERO V40
0xa2: V42 = 0xaa
0xa5: JUMPI 0xaa V41
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V40]
Exit stack: [V11, V40]

================================

Block 0xa6
[0xa6:0xa9]
---
Predecessors: [0x9e]
Successors: []
---
0xa6 PUSH1 0x0
0xa8 DUP1
0xa9 REVERT
---
0xa6: V43 = 0x0
0xa9: REVERT 0x0 0x0
---
Entry stack: [V11, V40]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V40]

================================

Block 0xaa
[0xaa:0x108]
---
Predecessors: [0x9e]
Successors: [0x385]
---
0xaa JUMPDEST
0xab POP
0xac PUSH2 0x109
0xaf PUSH1 0x4
0xb1 DUP1
0xb2 CALLDATASIZE
0xb3 SUB
0xb4 DUP2
0xb5 ADD
0xb6 SWAP1
0xb7 DUP1
0xb8 DUP1
0xb9 CALLDATALOAD
0xba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcf AND
0xd0 SWAP1
0xd1 PUSH1 0x20
0xd3 ADD
0xd4 SWAP1
0xd5 SWAP3
0xd6 SWAP2
0xd7 SWAP1
0xd8 DUP1
0xd9 CALLDATALOAD
0xda PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xef AND
0xf0 SWAP1
0xf1 PUSH1 0x20
0xf3 ADD
0xf4 SWAP1
0xf5 SWAP3
0xf6 SWAP2
0xf7 SWAP1
0xf8 DUP1
0xf9 CALLDATALOAD
0xfa SWAP1
0xfb PUSH1 0x20
0xfd ADD
0xfe SWAP1
0xff SWAP3
0x100 SWAP2
0x101 SWAP1
0x102 POP
0x103 POP
0x104 POP
0x105 PUSH2 0x385
0x108 JUMP
---
0xaa: JUMPDEST 
0xac: V44 = 0x109
0xaf: V45 = 0x4
0xb2: V46 = CALLDATASIZE
0xb3: V47 = SUB V46 0x4
0xb5: V48 = ADD 0x4 V47
0xb9: V49 = CALLDATALOAD 0x4
0xba: V50 = 0xffffffffffffffffffffffffffffffffffffffff
0xcf: V51 = AND 0xffffffffffffffffffffffffffffffffffffffff V49
0xd1: V52 = 0x20
0xd3: V53 = ADD 0x20 0x4
0xd9: V54 = CALLDATALOAD 0x24
0xda: V55 = 0xffffffffffffffffffffffffffffffffffffffff
0xef: V56 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0xf1: V57 = 0x20
0xf3: V58 = ADD 0x20 0x24
0xf9: V59 = CALLDATALOAD 0x44
0xfb: V60 = 0x20
0xfd: V61 = ADD 0x20 0x44
0x105: V62 = 0x385
0x108: JUMP 0x385
---
Entry stack: [V11, V40]
Stack pops: 1
Stack additions: [0x109, V51, V56, V59]
Exit stack: [V11, 0x109, V51, V56, V59]

================================

Block 0x109
[0x109:0x10a]
---
Predecessors: [0x390, 0x5ff]
Successors: []
---
0x109 JUMPDEST
0x10a STOP
---
0x109: JUMPDEST 
0x10a: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x10b
[0x10b:0x112]
---
Predecessors: [0x41]
Successors: [0x113, 0x117]
---
0x10b JUMPDEST
0x10c CALLVALUE
0x10d DUP1
0x10e ISZERO
0x10f PUSH2 0x117
0x112 JUMPI
---
0x10b: JUMPDEST 
0x10c: V63 = CALLVALUE
0x10e: V64 = ISZERO V63
0x10f: V65 = 0x117
0x112: JUMPI 0x117 V64
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V63]
Exit stack: [V11, V63]

================================

Block 0x113
[0x113:0x116]
---
Predecessors: [0x10b]
Successors: []
---
0x113 PUSH1 0x0
0x115 DUP1
0x116 REVERT
---
0x113: V66 = 0x0
0x116: REVERT 0x0 0x0
---
Entry stack: [V11, V63]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V63]

================================

Block 0x117
[0x117:0x14b]
---
Predecessors: [0x10b]
Successors: [0x395]
---
0x117 JUMPDEST
0x118 POP
0x119 PUSH2 0x14c
0x11c PUSH1 0x4
0x11e DUP1
0x11f CALLDATASIZE
0x120 SUB
0x121 DUP2
0x122 ADD
0x123 SWAP1
0x124 DUP1
0x125 DUP1
0x126 CALLDATALOAD
0x127 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13c AND
0x13d SWAP1
0x13e PUSH1 0x20
0x140 ADD
0x141 SWAP1
0x142 SWAP3
0x143 SWAP2
0x144 SWAP1
0x145 POP
0x146 POP
0x147 POP
0x148 PUSH2 0x395
0x14b JUMP
---
0x117: JUMPDEST 
0x119: V67 = 0x14c
0x11c: V68 = 0x4
0x11f: V69 = CALLDATASIZE
0x120: V70 = SUB V69 0x4
0x122: V71 = ADD 0x4 V70
0x126: V72 = CALLDATALOAD 0x4
0x127: V73 = 0xffffffffffffffffffffffffffffffffffffffff
0x13c: V74 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0x13e: V75 = 0x20
0x140: V76 = ADD 0x20 0x4
0x148: V77 = 0x395
0x14b: JUMP 0x395
---
Entry stack: [V11, V63]
Stack pops: 1
Stack additions: [0x14c, V74]
Exit stack: [V11, 0x14c, V74]

================================

Block 0x14c
[0x14c:0x161]
---
Predecessors: [0x395]
Successors: []
---
0x14c JUMPDEST
0x14d PUSH1 0x40
0x14f MLOAD
0x150 DUP1
0x151 DUP3
0x152 DUP2
0x153 MSTORE
0x154 PUSH1 0x20
0x156 ADD
0x157 SWAP2
0x158 POP
0x159 POP
0x15a PUSH1 0x40
0x15c MLOAD
0x15d DUP1
0x15e SWAP2
0x15f SUB
0x160 SWAP1
0x161 RETURN
---
0x14c: JUMPDEST 
0x14d: V78 = 0x40
0x14f: V79 = M[0x40]
0x153: M[V79] = V242
0x154: V80 = 0x20
0x156: V81 = ADD 0x20 V79
0x15a: V82 = 0x40
0x15c: V83 = M[0x40]
0x15f: V84 = SUB V81 V83
0x161: RETURN V83 V84
---
Entry stack: [V11, 0x14c, V242]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x14c]

================================

Block 0x162
[0x162:0x169]
---
Predecessors: [0x4c]
Successors: [0x16a, 0x16e]
---
0x162 JUMPDEST
0x163 CALLVALUE
0x164 DUP1
0x165 ISZERO
0x166 PUSH2 0x16e
0x169 JUMPI
---
0x162: JUMPDEST 
0x163: V85 = CALLVALUE
0x165: V86 = ISZERO V85
0x166: V87 = 0x16e
0x169: JUMPI 0x16e V86
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V85]
Exit stack: [V11, V85]

================================

Block 0x16a
[0x16a:0x16d]
---
Predecessors: [0x162]
Successors: []
---
0x16a PUSH1 0x0
0x16c DUP1
0x16d REVERT
---
0x16a: V88 = 0x0
0x16d: REVERT 0x0 0x0
---
Entry stack: [V11, V85]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V85]

================================

Block 0x16e
[0x16e:0x176]
---
Predecessors: [0x162]
Successors: [0x3ad]
---
0x16e JUMPDEST
0x16f POP
0x170 PUSH2 0x177
0x173 PUSH2 0x3ad
0x176 JUMP
---
0x16e: JUMPDEST 
0x170: V89 = 0x177
0x173: V90 = 0x3ad
0x176: JUMP 0x3ad
---
Entry stack: [V11, V85]
Stack pops: 1
Stack additions: [0x177]
Exit stack: [V11, 0x177]

================================

Block 0x177
[0x177:0x193]
---
Predecessors: [0x3ad]
Successors: []
---
0x177 JUMPDEST
0x178 PUSH1 0x40
0x17a MLOAD
0x17b DUP1
0x17c DUP4
0x17d DUP2
0x17e MSTORE
0x17f PUSH1 0x20
0x181 ADD
0x182 DUP3
0x183 DUP2
0x184 MSTORE
0x185 PUSH1 0x20
0x187 ADD
0x188 SWAP3
0x189 POP
0x18a POP
0x18b POP
0x18c PUSH1 0x40
0x18e MLOAD
0x18f DUP1
0x190 SWAP2
0x191 SUB
0x192 SWAP1
0x193 RETURN
---
0x177: JUMPDEST 
0x178: V91 = 0x40
0x17a: V92 = M[0x40]
0x17e: M[V92] = V264
0x17f: V93 = 0x20
0x181: V94 = ADD 0x20 V92
0x184: M[V94] = V266
0x185: V95 = 0x20
0x187: V96 = ADD 0x20 V94
0x18c: V97 = 0x40
0x18e: V98 = M[0x40]
0x191: V99 = SUB V96 V98
0x193: RETURN V98 V99
---
Entry stack: [V11, V264, V266]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x194
[0x194:0x19b]
---
Predecessors: [0x57]
Successors: [0x19c, 0x1a0]
---
0x194 JUMPDEST
0x195 CALLVALUE
0x196 DUP1
0x197 ISZERO
0x198 PUSH2 0x1a0
0x19b JUMPI
---
0x194: JUMPDEST 
0x195: V100 = CALLVALUE
0x197: V101 = ISZERO V100
0x198: V102 = 0x1a0
0x19b: JUMPI 0x1a0 V101
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V100]
Exit stack: [V11, V100]

================================

Block 0x19c
[0x19c:0x19f]
---
Predecessors: [0x194]
Successors: []
---
0x19c PUSH1 0x0
0x19e DUP1
0x19f REVERT
---
0x19c: V103 = 0x0
0x19f: REVERT 0x0 0x0
---
Entry stack: [V11, V100]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V100]

================================

Block 0x1a0
[0x1a0:0x1d4]
---
Predecessors: [0x194]
Successors: [0x41d]
---
0x1a0 JUMPDEST
0x1a1 POP
0x1a2 PUSH2 0x1d5
0x1a5 PUSH1 0x4
0x1a7 DUP1
0x1a8 CALLDATASIZE
0x1a9 SUB
0x1aa DUP2
0x1ab ADD
0x1ac SWAP1
0x1ad DUP1
0x1ae DUP1
0x1af CALLDATALOAD
0x1b0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c5 AND
0x1c6 SWAP1
0x1c7 PUSH1 0x20
0x1c9 ADD
0x1ca SWAP1
0x1cb SWAP3
0x1cc SWAP2
0x1cd SWAP1
0x1ce POP
0x1cf POP
0x1d0 POP
0x1d1 PUSH2 0x41d
0x1d4 JUMP
---
0x1a0: JUMPDEST 
0x1a2: V104 = 0x1d5
0x1a5: V105 = 0x4
0x1a8: V106 = CALLDATASIZE
0x1a9: V107 = SUB V106 0x4
0x1ab: V108 = ADD 0x4 V107
0x1af: V109 = CALLDATALOAD 0x4
0x1b0: V110 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c5: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x1c7: V112 = 0x20
0x1c9: V113 = ADD 0x20 0x4
0x1d1: V114 = 0x41d
0x1d4: JUMP 0x41d
---
Entry stack: [V11, V100]
Stack pops: 1
Stack additions: [0x1d5, V111]
Exit stack: [V11, 0x1d5, V111]

================================

Block 0x1d5
[0x1d5:0x1ea]
---
Predecessors: [0x41d]
Successors: []
---
0x1d5 JUMPDEST
0x1d6 PUSH1 0x40
0x1d8 MLOAD
0x1d9 DUP1
0x1da DUP3
0x1db DUP2
0x1dc MSTORE
0x1dd PUSH1 0x20
0x1df ADD
0x1e0 SWAP2
0x1e1 POP
0x1e2 POP
0x1e3 PUSH1 0x40
0x1e5 MLOAD
0x1e6 DUP1
0x1e7 SWAP2
0x1e8 SUB
0x1e9 SWAP1
0x1ea RETURN
---
0x1d5: JUMPDEST 
0x1d6: V115 = 0x40
0x1d8: V116 = M[0x40]
0x1dc: M[V116] = V280
0x1dd: V117 = 0x20
0x1df: V118 = ADD 0x20 V116
0x1e3: V119 = 0x40
0x1e5: V120 = M[0x40]
0x1e8: V121 = SUB V118 V120
0x1ea: RETURN V120 V121
---
Entry stack: [V11, V280]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1eb
[0x1eb:0x1f2]
---
Predecessors: [0x62]
Successors: [0x1f3, 0x1f7]
---
0x1eb JUMPDEST
0x1ec CALLVALUE
0x1ed DUP1
0x1ee ISZERO
0x1ef PUSH2 0x1f7
0x1f2 JUMPI
---
0x1eb: JUMPDEST 
0x1ec: V122 = CALLVALUE
0x1ee: V123 = ISZERO V122
0x1ef: V124 = 0x1f7
0x1f2: JUMPI 0x1f7 V123
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V122]
Exit stack: [V11, V122]

================================

Block 0x1f3
[0x1f3:0x1f6]
---
Predecessors: [0x1eb]
Successors: []
---
0x1f3 PUSH1 0x0
0x1f5 DUP1
0x1f6 REVERT
---
0x1f3: V125 = 0x0
0x1f6: REVERT 0x0 0x0
---
Entry stack: [V11, V122]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V122]

================================

Block 0x1f7
[0x1f7:0x235]
---
Predecessors: [0x1eb]
Successors: [0x466]
---
0x1f7 JUMPDEST
0x1f8 POP
0x1f9 PUSH2 0x236
0x1fc PUSH1 0x4
0x1fe DUP1
0x1ff CALLDATASIZE
0x200 SUB
0x201 DUP2
0x202 ADD
0x203 SWAP1
0x204 DUP1
0x205 DUP1
0x206 CALLDATALOAD
0x207 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21c AND
0x21d SWAP1
0x21e PUSH1 0x20
0x220 ADD
0x221 SWAP1
0x222 SWAP3
0x223 SWAP2
0x224 SWAP1
0x225 DUP1
0x226 CALLDATALOAD
0x227 SWAP1
0x228 PUSH1 0x20
0x22a ADD
0x22b SWAP1
0x22c SWAP3
0x22d SWAP2
0x22e SWAP1
0x22f POP
0x230 POP
0x231 POP
0x232 PUSH2 0x466
0x235 JUMP
---
0x1f7: JUMPDEST 
0x1f9: V126 = 0x236
0x1fc: V127 = 0x4
0x1ff: V128 = CALLDATASIZE
0x200: V129 = SUB V128 0x4
0x202: V130 = ADD 0x4 V129
0x206: V131 = CALLDATALOAD 0x4
0x207: V132 = 0xffffffffffffffffffffffffffffffffffffffff
0x21c: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff V131
0x21e: V134 = 0x20
0x220: V135 = ADD 0x20 0x4
0x226: V136 = CALLDATALOAD 0x24
0x228: V137 = 0x20
0x22a: V138 = ADD 0x20 0x24
0x232: V139 = 0x466
0x235: JUMP 0x466
---
Entry stack: [V11, V122]
Stack pops: 1
Stack additions: [0x236, V133, V136]
Exit stack: [V11, 0x236, V133, V136]

================================

Block 0x236
[0x236:0x237]
---
Predecessors: [0x514]
Successors: []
---
0x236 JUMPDEST
0x237 STOP
---
0x236: JUMPDEST 
0x237: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x238
[0x238:0x23f]
---
Predecessors: [0x6d]
Successors: [0x240, 0x244]
---
0x238 JUMPDEST
0x239 CALLVALUE
0x23a DUP1
0x23b ISZERO
0x23c PUSH2 0x244
0x23f JUMPI
---
0x238: JUMPDEST 
0x239: V140 = CALLVALUE
0x23b: V141 = ISZERO V140
0x23c: V142 = 0x244
0x23f: JUMPI 0x244 V141
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V140]
Exit stack: [V11, V140]

================================

Block 0x240
[0x240:0x243]
---
Predecessors: [0x238]
Successors: []
---
0x240 PUSH1 0x0
0x242 DUP1
0x243 REVERT
---
0x240: V143 = 0x0
0x243: REVERT 0x0 0x0
---
Entry stack: [V11, V140]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V140]

================================

Block 0x244
[0x244:0x282]
---
Predecessors: [0x238]
Successors: [0x576]
---
0x244 JUMPDEST
0x245 POP
0x246 PUSH2 0x283
0x249 PUSH1 0x4
0x24b DUP1
0x24c CALLDATASIZE
0x24d SUB
0x24e DUP2
0x24f ADD
0x250 SWAP1
0x251 DUP1
0x252 DUP1
0x253 CALLDATALOAD
0x254 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x269 AND
0x26a SWAP1
0x26b PUSH1 0x20
0x26d ADD
0x26e SWAP1
0x26f SWAP3
0x270 SWAP2
0x271 SWAP1
0x272 DUP1
0x273 CALLDATALOAD
0x274 SWAP1
0x275 PUSH1 0x20
0x277 ADD
0x278 SWAP1
0x279 SWAP3
0x27a SWAP2
0x27b SWAP1
0x27c POP
0x27d POP
0x27e POP
0x27f PUSH2 0x576
0x282 JUMP
---
0x244: JUMPDEST 
0x246: V144 = 0x283
0x249: V145 = 0x4
0x24c: V146 = CALLDATASIZE
0x24d: V147 = SUB V146 0x4
0x24f: V148 = ADD 0x4 V147
0x253: V149 = CALLDATALOAD 0x4
0x254: V150 = 0xffffffffffffffffffffffffffffffffffffffff
0x269: V151 = AND 0xffffffffffffffffffffffffffffffffffffffff V149
0x26b: V152 = 0x20
0x26d: V153 = ADD 0x20 0x4
0x273: V154 = CALLDATALOAD 0x24
0x275: V155 = 0x20
0x277: V156 = ADD 0x20 0x24
0x27f: V157 = 0x576
0x282: JUMP 0x576
---
Entry stack: [V11, V140]
Stack pops: 1
Stack additions: [0x283, V151, V154]
Exit stack: [V11, 0x283, V151, V154]

================================

Block 0x283
[0x283:0x284]
---
Predecessors: [0x390, 0x5ff]
Successors: []
---
0x283 JUMPDEST
0x284 STOP
---
0x283: JUMPDEST 
0x284: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x285
[0x285:0x28c]
---
Predecessors: [0x78]
Successors: [0x28d, 0x291]
---
0x285 JUMPDEST
0x286 CALLVALUE
0x287 DUP1
0x288 ISZERO
0x289 PUSH2 0x291
0x28c JUMPI
---
0x285: JUMPDEST 
0x286: V158 = CALLVALUE
0x288: V159 = ISZERO V158
0x289: V160 = 0x291
0x28c: JUMPI 0x291 V159
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V158]
Exit stack: [V11, V158]

================================

Block 0x28d
[0x28d:0x290]
---
Predecessors: [0x285]
Successors: []
---
0x28d PUSH1 0x0
0x28f DUP1
0x290 REVERT
---
0x28d: V161 = 0x0
0x290: REVERT 0x0 0x0
---
Entry stack: [V11, V158]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V158]

================================

Block 0x291
[0x291:0x2af]
---
Predecessors: [0x285]
Successors: [0x604]
---
0x291 JUMPDEST
0x292 POP
0x293 PUSH2 0x2b0
0x296 PUSH1 0x4
0x298 DUP1
0x299 CALLDATASIZE
0x29a SUB
0x29b DUP2
0x29c ADD
0x29d SWAP1
0x29e DUP1
0x29f DUP1
0x2a0 CALLDATALOAD
0x2a1 SWAP1
0x2a2 PUSH1 0x20
0x2a4 ADD
0x2a5 SWAP1
0x2a6 SWAP3
0x2a7 SWAP2
0x2a8 SWAP1
0x2a9 POP
0x2aa POP
0x2ab POP
0x2ac PUSH2 0x604
0x2af JUMP
---
0x291: JUMPDEST 
0x293: V162 = 0x2b0
0x296: V163 = 0x4
0x299: V164 = CALLDATASIZE
0x29a: V165 = SUB V164 0x4
0x29c: V166 = ADD 0x4 V165
0x2a0: V167 = CALLDATALOAD 0x4
0x2a2: V168 = 0x20
0x2a4: V169 = ADD 0x20 0x4
0x2ac: V170 = 0x604
0x2af: JUMP 0x604
---
Entry stack: [V11, V158]
Stack pops: 1
Stack additions: [0x2b0, V167]
Exit stack: [V11, 0x2b0, V167]

================================

Block 0x2b0
[0x2b0:0x2b1]
---
Predecessors: [0x667]
Successors: []
---
0x2b0 JUMPDEST
0x2b1 STOP
---
0x2b0: JUMPDEST 
0x2b1: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2b2
[0x2b2:0x2b9]
---
Predecessors: [0x83]
Successors: [0x2ba, 0x2be]
---
0x2b2 JUMPDEST
0x2b3 CALLVALUE
0x2b4 DUP1
0x2b5 ISZERO
0x2b6 PUSH2 0x2be
0x2b9 JUMPI
---
0x2b2: JUMPDEST 
0x2b3: V171 = CALLVALUE
0x2b5: V172 = ISZERO V171
0x2b6: V173 = 0x2be
0x2b9: JUMPI 0x2be V172
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V171]
Exit stack: [V11, V171]

================================

Block 0x2ba
[0x2ba:0x2bd]
---
Predecessors: [0x2b2]
Successors: []
---
0x2ba PUSH1 0x0
0x2bc DUP1
0x2bd REVERT
---
0x2ba: V174 = 0x0
0x2bd: REVERT 0x0 0x0
---
Entry stack: [V11, V171]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V171]

================================

Block 0x2be
[0x2be:0x2c6]
---
Predecessors: [0x2b2]
Successors: [0x66b]
---
0x2be JUMPDEST
0x2bf POP
0x2c0 PUSH2 0x2c7
0x2c3 PUSH2 0x66b
0x2c6 JUMP
---
0x2be: JUMPDEST 
0x2c0: V175 = 0x2c7
0x2c3: V176 = 0x66b
0x2c6: JUMP 0x66b
---
Entry stack: [V11, V171]
Stack pops: 1
Stack additions: [0x2c7]
Exit stack: [V11, 0x2c7]

================================

Block 0x2c7
[0x2c7:0x2eb]
---
Predecessors: [0x701]
Successors: [0x2ec]
---
0x2c7 JUMPDEST
0x2c8 PUSH1 0x40
0x2ca MLOAD
0x2cb DUP1
0x2cc DUP1
0x2cd PUSH1 0x20
0x2cf ADD
0x2d0 DUP3
0x2d1 DUP2
0x2d2 SUB
0x2d3 DUP3
0x2d4 MSTORE
0x2d5 DUP4
0x2d6 DUP2
0x2d7 DUP2
0x2d8 MLOAD
0x2d9 DUP2
0x2da MSTORE
0x2db PUSH1 0x20
0x2dd ADD
0x2de SWAP2
0x2df POP
0x2e0 DUP1
0x2e1 MLOAD
0x2e2 SWAP1
0x2e3 PUSH1 0x20
0x2e5 ADD
0x2e6 SWAP1
0x2e7 DUP1
0x2e8 DUP4
0x2e9 DUP4
0x2ea PUSH1 0x0
---
0x2c7: JUMPDEST 
0x2c8: V177 = 0x40
0x2ca: V178 = M[0x40]
0x2cd: V179 = 0x20
0x2cf: V180 = ADD 0x20 V178
0x2d2: V181 = SUB V180 V178
0x2d4: M[V178] = V181
0x2d8: V182 = M[V402]
0x2da: M[V180] = V182
0x2db: V183 = 0x20
0x2dd: V184 = ADD 0x20 V180
0x2e1: V185 = M[V402]
0x2e3: V186 = 0x20
0x2e5: V187 = ADD 0x20 V402
0x2ea: V188 = 0x0
---
Entry stack: [V11, 0x2c7, V402]
Stack pops: 1
Stack additions: [S0, V178, V178, V184, V187, V185, V185, V184, V187, 0x0]
Exit stack: [V11, 0x2c7, V402, V178, V178, V184, V187, V185, V185, V184, V187, 0x0]

================================

Block 0x2ec
[0x2ec:0x2f4]
---
Predecessors: [0x2c7, 0x2f5]
Successors: [0x2f5, 0x307]
---
0x2ec JUMPDEST
0x2ed DUP4
0x2ee DUP2
0x2ef LT
0x2f0 ISZERO
0x2f1 PUSH2 0x307
0x2f4 JUMPI
---
0x2ec: JUMPDEST 
0x2ef: V189 = LT S0 V185
0x2f0: V190 = ISZERO V189
0x2f1: V191 = 0x307
0x2f4: JUMPI 0x307 V190
---
Entry stack: [V11, 0x2c7, V402, V178, V178, V184, V187, V185, V185, V184, V187, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x2c7, V402, V178, V178, V184, V187, V185, V185, V184, V187, S0]

================================

Block 0x2f5
[0x2f5:0x306]
---
Predecessors: [0x2ec]
Successors: [0x2ec]
---
0x2f5 DUP1
0x2f6 DUP3
0x2f7 ADD
0x2f8 MLOAD
0x2f9 DUP2
0x2fa DUP5
0x2fb ADD
0x2fc MSTORE
0x2fd PUSH1 0x20
0x2ff DUP2
0x300 ADD
0x301 SWAP1
0x302 POP
0x303 PUSH2 0x2ec
0x306 JUMP
---
0x2f7: V192 = ADD V187 S0
0x2f8: V193 = M[V192]
0x2fb: V194 = ADD V184 S0
0x2fc: M[V194] = V193
0x2fd: V195 = 0x20
0x300: V196 = ADD S0 0x20
0x303: V197 = 0x2ec
0x306: JUMP 0x2ec
---
Entry stack: [V11, 0x2c7, V402, V178, V178, V184, V187, V185, V185, V184, V187, S0]
Stack pops: 3
Stack additions: [S2, S1, V196]
Exit stack: [V11, 0x2c7, V402, V178, V178, V184, V187, V185, V185, V184, V187, V196]

================================

Block 0x307
[0x307:0x31a]
---
Predecessors: [0x2ec]
Successors: [0x31b, 0x334]
---
0x307 JUMPDEST
0x308 POP
0x309 POP
0x30a POP
0x30b POP
0x30c SWAP1
0x30d POP
0x30e SWAP1
0x30f DUP2
0x310 ADD
0x311 SWAP1
0x312 PUSH1 0x1f
0x314 AND
0x315 DUP1
0x316 ISZERO
0x317 PUSH2 0x334
0x31a JUMPI
---
0x307: JUMPDEST 
0x310: V198 = ADD V185 V184
0x312: V199 = 0x1f
0x314: V200 = AND 0x1f V185
0x316: V201 = ISZERO V200
0x317: V202 = 0x334
0x31a: JUMPI 0x334 V201
---
Entry stack: [V11, 0x2c7, V402, V178, V178, V184, V187, V185, V185, V184, V187, S0]
Stack pops: 7
Stack additions: [V198, V200]
Exit stack: [V11, 0x2c7, V402, V178, V178, V198, V200]

================================

Block 0x31b
[0x31b:0x333]
---
Predecessors: [0x307]
Successors: [0x334]
---
0x31b DUP1
0x31c DUP3
0x31d SUB
0x31e DUP1
0x31f MLOAD
0x320 PUSH1 0x1
0x322 DUP4
0x323 PUSH1 0x20
0x325 SUB
0x326 PUSH2 0x100
0x329 EXP
0x32a SUB
0x32b NOT
0x32c AND
0x32d DUP2
0x32e MSTORE
0x32f PUSH1 0x20
0x331 ADD
0x332 SWAP2
0x333 POP
---
0x31d: V203 = SUB V198 V200
0x31f: V204 = M[V203]
0x320: V205 = 0x1
0x323: V206 = 0x20
0x325: V207 = SUB 0x20 V200
0x326: V208 = 0x100
0x329: V209 = EXP 0x100 V207
0x32a: V210 = SUB V209 0x1
0x32b: V211 = NOT V210
0x32c: V212 = AND V211 V204
0x32e: M[V203] = V212
0x32f: V213 = 0x20
0x331: V214 = ADD 0x20 V203
---
Entry stack: [V11, 0x2c7, V402, V178, V178, V198, V200]
Stack pops: 2
Stack additions: [V214, S0]
Exit stack: [V11, 0x2c7, V402, V178, V178, V214, V200]

================================

Block 0x334
[0x334:0x341]
---
Predecessors: [0x307, 0x31b]
Successors: []
---
0x334 JUMPDEST
0x335 POP
0x336 SWAP3
0x337 POP
0x338 POP
0x339 POP
0x33a PUSH1 0x40
0x33c MLOAD
0x33d DUP1
0x33e SWAP2
0x33f SUB
0x340 SWAP1
0x341 RETURN
---
0x334: JUMPDEST 
0x33a: V215 = 0x40
0x33c: V216 = M[0x40]
0x33f: V217 = SUB S1 V216
0x341: RETURN V216 V217
---
Entry stack: [V11, 0x2c7, V402, V178, V178, S1, V200]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x2c7]

================================

Block 0x342
[0x342:0x349]
---
Predecessors: [0x8e]
Successors: [0x34a, 0x34e]
---
0x342 JUMPDEST
0x343 CALLVALUE
0x344 DUP1
0x345 ISZERO
0x346 PUSH2 0x34e
0x349 JUMPI
---
0x342: JUMPDEST 
0x343: V218 = CALLVALUE
0x345: V219 = ISZERO V218
0x346: V220 = 0x34e
0x349: JUMPI 0x34e V219
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V218]
Exit stack: [V11, V218]

================================

Block 0x34a
[0x34a:0x34d]
---
Predecessors: [0x342]
Successors: []
---
0x34a PUSH1 0x0
0x34c DUP1
0x34d REVERT
---
0x34a: V221 = 0x0
0x34d: REVERT 0x0 0x0
---
Entry stack: [V11, V218]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V218]

================================

Block 0x34e
[0x34e:0x382]
---
Predecessors: [0x342]
Successors: [0x709]
---
0x34e JUMPDEST
0x34f POP
0x350 PUSH2 0x383
0x353 PUSH1 0x4
0x355 DUP1
0x356 CALLDATASIZE
0x357 SUB
0x358 DUP2
0x359 ADD
0x35a SWAP1
0x35b DUP1
0x35c DUP1
0x35d CALLDATALOAD
0x35e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x373 AND
0x374 SWAP1
0x375 PUSH1 0x20
0x377 ADD
0x378 SWAP1
0x379 SWAP3
0x37a SWAP2
0x37b SWAP1
0x37c POP
0x37d POP
0x37e POP
0x37f PUSH2 0x709
0x382 JUMP
---
0x34e: JUMPDEST 
0x350: V222 = 0x383
0x353: V223 = 0x4
0x356: V224 = CALLDATASIZE
0x357: V225 = SUB V224 0x4
0x359: V226 = ADD 0x4 V225
0x35d: V227 = CALLDATALOAD 0x4
0x35e: V228 = 0xffffffffffffffffffffffffffffffffffffffff
0x373: V229 = AND 0xffffffffffffffffffffffffffffffffffffffff V227
0x375: V230 = 0x20
0x377: V231 = ADD 0x20 0x4
0x37f: V232 = 0x709
0x382: JUMP 0x709
---
Entry stack: [V11, V218]
Stack pops: 1
Stack additions: [0x383, V229]
Exit stack: [V11, 0x383, V229]

================================

Block 0x383
[0x383:0x384]
---
Predecessors: [0x794]
Successors: []
---
0x383 JUMPDEST
0x384 STOP
---
0x383: JUMPDEST 
0x384: STOP 
---
Entry stack: [V11, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S0]

================================

Block 0x385
[0x385:0x38f]
---
Predecessors: [0xaa]
Successors: [0x798]
---
0x385 JUMPDEST
0x386 PUSH2 0x390
0x389 DUP4
0x38a DUP4
0x38b DUP4
0x38c PUSH2 0x798
0x38f JUMP
---
0x385: JUMPDEST 
0x386: V233 = 0x390
0x38c: V234 = 0x798
0x38f: JUMP 0x798
---
Entry stack: [V11, 0x109, V51, V56, V59]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x390, S2, S1, S0]
Exit stack: [V11, 0x109, V51, V56, V59, 0x390, V51, V56, V59]

================================

Block 0x390
[0x390:0x394]
---
Predecessors: [0xaa9]
Successors: [0x109, 0x283]
---
0x390 JUMPDEST
0x391 POP
0x392 POP
0x393 POP
0x394 JUMP
---
0x390: JUMPDEST 
0x394: JUMP S3
---
Entry stack: [V11, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x395
[0x395:0x3ac]
---
Predecessors: [0x117]
Successors: [0x14c]
---
0x395 JUMPDEST
0x396 PUSH1 0x4
0x398 PUSH1 0x20
0x39a MSTORE
0x39b DUP1
0x39c PUSH1 0x0
0x39e MSTORE
0x39f PUSH1 0x40
0x3a1 PUSH1 0x0
0x3a3 SHA3
0x3a4 PUSH1 0x0
0x3a6 SWAP2
0x3a7 POP
0x3a8 SWAP1
0x3a9 POP
0x3aa SLOAD
0x3ab DUP2
0x3ac JUMP
---
0x395: JUMPDEST 
0x396: V235 = 0x4
0x398: V236 = 0x20
0x39a: M[0x20] = 0x4
0x39c: V237 = 0x0
0x39e: M[0x0] = V74
0x39f: V238 = 0x40
0x3a1: V239 = 0x0
0x3a3: V240 = SHA3 0x0 0x40
0x3a4: V241 = 0x0
0x3aa: V242 = S[V240]
0x3ac: JUMP 0x14c
---
Entry stack: [V11, 0x14c, V74]
Stack pops: 2
Stack additions: [S1, V242]
Exit stack: [V11, 0x14c, V242]

================================

Block 0x3ad
[0x3ad:0x41c]
---
Predecessors: [0x16e]
Successors: [0x177]
---
0x3ad JUMPDEST
0x3ae PUSH1 0x0
0x3b0 DUP1
0x3b1 PUSH1 0x4
0x3b3 PUSH1 0x0
0x3b5 PUSH1 0x1
0x3b7 PUSH1 0x0
0x3b9 SWAP1
0x3ba SLOAD
0x3bb SWAP1
0x3bc PUSH2 0x100
0x3bf EXP
0x3c0 SWAP1
0x3c1 DIV
0x3c2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d7 AND
0x3d8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ed AND
0x3ee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x403 AND
0x404 DUP2
0x405 MSTORE
0x406 PUSH1 0x20
0x408 ADD
0x409 SWAP1
0x40a DUP2
0x40b MSTORE
0x40c PUSH1 0x20
0x40e ADD
0x40f PUSH1 0x0
0x411 SHA3
0x412 SLOAD
0x413 PUSH1 0x3
0x415 SLOAD
0x416 SWAP2
0x417 POP
0x418 SWAP2
0x419 POP
0x41a SWAP1
0x41b SWAP2
0x41c JUMP
---
0x3ad: JUMPDEST 
0x3ae: V243 = 0x0
0x3b1: V244 = 0x4
0x3b3: V245 = 0x0
0x3b5: V246 = 0x1
0x3b7: V247 = 0x0
0x3ba: V248 = S[0x1]
0x3bc: V249 = 0x100
0x3bf: V250 = EXP 0x100 0x0
0x3c1: V251 = DIV V248 0x1
0x3c2: V252 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d7: V253 = AND 0xffffffffffffffffffffffffffffffffffffffff V251
0x3d8: V254 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ed: V255 = AND 0xffffffffffffffffffffffffffffffffffffffff V253
0x3ee: V256 = 0xffffffffffffffffffffffffffffffffffffffff
0x403: V257 = AND 0xffffffffffffffffffffffffffffffffffffffff V255
0x405: M[0x0] = V257
0x406: V258 = 0x20
0x408: V259 = ADD 0x20 0x0
0x40b: M[0x20] = 0x4
0x40c: V260 = 0x20
0x40e: V261 = ADD 0x20 0x20
0x40f: V262 = 0x0
0x411: V263 = SHA3 0x0 0x40
0x412: V264 = S[V263]
0x413: V265 = 0x3
0x415: V266 = S[0x3]
0x41c: JUMP 0x177
---
Entry stack: [V11, 0x177]
Stack pops: 1
Stack additions: [V264, V266]
Exit stack: [V11, V264, V266]

================================

Block 0x41d
[0x41d:0x465]
---
Predecessors: [0x1a0]
Successors: [0x1d5]
---
0x41d JUMPDEST
0x41e PUSH1 0x0
0x420 PUSH1 0x4
0x422 PUSH1 0x0
0x424 DUP4
0x425 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x43a AND
0x43b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x450 AND
0x451 DUP2
0x452 MSTORE
0x453 PUSH1 0x20
0x455 ADD
0x456 SWAP1
0x457 DUP2
0x458 MSTORE
0x459 PUSH1 0x20
0x45b ADD
0x45c PUSH1 0x0
0x45e SHA3
0x45f SLOAD
0x460 SWAP1
0x461 POP
0x462 SWAP2
0x463 SWAP1
0x464 POP
0x465 JUMP
---
0x41d: JUMPDEST 
0x41e: V267 = 0x0
0x420: V268 = 0x4
0x422: V269 = 0x0
0x425: V270 = 0xffffffffffffffffffffffffffffffffffffffff
0x43a: V271 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x43b: V272 = 0xffffffffffffffffffffffffffffffffffffffff
0x450: V273 = AND 0xffffffffffffffffffffffffffffffffffffffff V271
0x452: M[0x0] = V273
0x453: V274 = 0x20
0x455: V275 = ADD 0x20 0x0
0x458: M[0x20] = 0x4
0x459: V276 = 0x20
0x45b: V277 = ADD 0x20 0x20
0x45c: V278 = 0x0
0x45e: V279 = SHA3 0x0 0x40
0x45f: V280 = S[V279]
0x465: JUMP 0x1d5
---
Entry stack: [V11, 0x1d5, V111]
Stack pops: 2
Stack additions: [V280]
Exit stack: [V11, V280]

================================

Block 0x466
[0x466:0x4c2]
---
Predecessors: [0x1f7]
Successors: [0x4c3, 0x4c7]
---
0x466 JUMPDEST
0x467 PUSH1 0x0
0x469 CALLER
0x46a SWAP1
0x46b POP
0x46c PUSH1 0x1
0x46e PUSH1 0x0
0x470 SWAP1
0x471 SLOAD
0x472 SWAP1
0x473 PUSH2 0x100
0x476 EXP
0x477 SWAP1
0x478 DIV
0x479 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x48e AND
0x48f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4a4 AND
0x4a5 DUP2
0x4a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4bb AND
0x4bc EQ
0x4bd ISZERO
0x4be ISZERO
0x4bf PUSH2 0x4c7
0x4c2 JUMPI
---
0x466: JUMPDEST 
0x467: V281 = 0x0
0x469: V282 = CALLER
0x46c: V283 = 0x1
0x46e: V284 = 0x0
0x471: V285 = S[0x1]
0x473: V286 = 0x100
0x476: V287 = EXP 0x100 0x0
0x478: V288 = DIV V285 0x1
0x479: V289 = 0xffffffffffffffffffffffffffffffffffffffff
0x48e: V290 = AND 0xffffffffffffffffffffffffffffffffffffffff V288
0x48f: V291 = 0xffffffffffffffffffffffffffffffffffffffff
0x4a4: V292 = AND 0xffffffffffffffffffffffffffffffffffffffff V290
0x4a6: V293 = 0xffffffffffffffffffffffffffffffffffffffff
0x4bb: V294 = AND 0xffffffffffffffffffffffffffffffffffffffff V282
0x4bc: V295 = EQ V294 V292
0x4bd: V296 = ISZERO V295
0x4be: V297 = ISZERO V296
0x4bf: V298 = 0x4c7
0x4c2: JUMPI 0x4c7 V297
---
Entry stack: [V11, 0x236, V133, V136]
Stack pops: 0
Stack additions: [V282]
Exit stack: [V11, 0x236, V133, V136, V282]

================================

Block 0x4c3
[0x4c3:0x4c6]
---
Predecessors: [0x466]
Successors: []
---
0x4c3 PUSH1 0x0
0x4c5 DUP1
0x4c6 REVERT
---
0x4c3: V299 = 0x0
0x4c6: REVERT 0x0 0x0
---
Entry stack: [V11, 0x236, V133, V136, V282]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x236, V133, V136, V282]

================================

Block 0x4c7
[0x4c7:0x50f]
---
Predecessors: [0x466]
Successors: [0x510, 0x514]
---
0x4c7 JUMPDEST
0x4c8 DUP2
0x4c9 PUSH1 0x4
0x4cb PUSH1 0x0
0x4cd DUP6
0x4ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4e3 AND
0x4e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4f9 AND
0x4fa DUP2
0x4fb MSTORE
0x4fc PUSH1 0x20
0x4fe ADD
0x4ff SWAP1
0x500 DUP2
0x501 MSTORE
0x502 PUSH1 0x20
0x504 ADD
0x505 PUSH1 0x0
0x507 SHA3
0x508 SLOAD
0x509 GT
0x50a ISZERO
0x50b ISZERO
0x50c PUSH2 0x514
0x50f JUMPI
---
0x4c7: JUMPDEST 
0x4c9: V300 = 0x4
0x4cb: V301 = 0x0
0x4ce: V302 = 0xffffffffffffffffffffffffffffffffffffffff
0x4e3: V303 = AND 0xffffffffffffffffffffffffffffffffffffffff V133
0x4e4: V304 = 0xffffffffffffffffffffffffffffffffffffffff
0x4f9: V305 = AND 0xffffffffffffffffffffffffffffffffffffffff V303
0x4fb: M[0x0] = V305
0x4fc: V306 = 0x20
0x4fe: V307 = ADD 0x20 0x0
0x501: M[0x20] = 0x4
0x502: V308 = 0x20
0x504: V309 = ADD 0x20 0x20
0x505: V310 = 0x0
0x507: V311 = SHA3 0x0 0x40
0x508: V312 = S[V311]
0x509: V313 = GT V312 V136
0x50a: V314 = ISZERO V313
0x50b: V315 = ISZERO V314
0x50c: V316 = 0x514
0x50f: JUMPI 0x514 V315
---
Entry stack: [V11, 0x236, V133, V136, V282]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x236, V133, V136, V282]

================================

Block 0x510
[0x510:0x513]
---
Predecessors: [0x4c7]
Successors: []
---
0x510 PUSH1 0x0
0x512 DUP1
0x513 REVERT
---
0x510: V317 = 0x0
0x513: REVERT 0x0 0x0
---
Entry stack: [V11, 0x236, V133, V136, V282]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x236, V133, V136, V282]

================================

Block 0x514
[0x514:0x575]
---
Predecessors: [0x4c7]
Successors: [0x236]
---
0x514 JUMPDEST
0x515 DUP2
0x516 PUSH1 0x4
0x518 PUSH1 0x0
0x51a DUP6
0x51b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x530 AND
0x531 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x546 AND
0x547 DUP2
0x548 MSTORE
0x549 PUSH1 0x20
0x54b ADD
0x54c SWAP1
0x54d DUP2
0x54e MSTORE
0x54f PUSH1 0x20
0x551 ADD
0x552 PUSH1 0x0
0x554 SHA3
0x555 PUSH1 0x0
0x557 DUP3
0x558 DUP3
0x559 SLOAD
0x55a SUB
0x55b SWAP3
0x55c POP
0x55d POP
0x55e DUP2
0x55f SWAP1
0x560 SSTORE
0x561 POP
0x562 DUP2
0x563 PUSH1 0x3
0x565 PUSH1 0x0
0x567 DUP3
0x568 DUP3
0x569 SLOAD
0x56a SUB
0x56b SWAP3
0x56c POP
0x56d POP
0x56e DUP2
0x56f SWAP1
0x570 SSTORE
0x571 POP
0x572 POP
0x573 POP
0x574 POP
0x575 JUMP
---
0x514: JUMPDEST 
0x516: V318 = 0x4
0x518: V319 = 0x0
0x51b: V320 = 0xffffffffffffffffffffffffffffffffffffffff
0x530: V321 = AND 0xffffffffffffffffffffffffffffffffffffffff V133
0x531: V322 = 0xffffffffffffffffffffffffffffffffffffffff
0x546: V323 = AND 0xffffffffffffffffffffffffffffffffffffffff V321
0x548: M[0x0] = V323
0x549: V324 = 0x20
0x54b: V325 = ADD 0x20 0x0
0x54e: M[0x20] = 0x4
0x54f: V326 = 0x20
0x551: V327 = ADD 0x20 0x20
0x552: V328 = 0x0
0x554: V329 = SHA3 0x0 0x40
0x555: V330 = 0x0
0x559: V331 = S[V329]
0x55a: V332 = SUB V331 V136
0x560: S[V329] = V332
0x563: V333 = 0x3
0x565: V334 = 0x0
0x569: V335 = S[0x3]
0x56a: V336 = SUB V335 V136
0x570: S[0x3] = V336
0x575: JUMP 0x236
---
Entry stack: [V11, 0x236, V133, V136, V282]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x576
[0x576:0x5d1]
---
Predecessors: [0x244]
Successors: [0x5d2, 0x5ff]
---
0x576 JUMPDEST
0x577 PUSH1 0x0
0x579 CALLER
0x57a SWAP1
0x57b POP
0x57c PUSH1 0x1
0x57e PUSH1 0x0
0x580 SWAP1
0x581 SLOAD
0x582 SWAP1
0x583 PUSH2 0x100
0x586 EXP
0x587 SWAP1
0x588 DIV
0x589 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x59e AND
0x59f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5b4 AND
0x5b5 DUP2
0x5b6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5cb AND
0x5cc EQ
0x5cd ISZERO
0x5ce PUSH2 0x5ff
0x5d1 JUMPI
---
0x576: JUMPDEST 
0x577: V337 = 0x0
0x579: V338 = CALLER
0x57c: V339 = 0x1
0x57e: V340 = 0x0
0x581: V341 = S[0x1]
0x583: V342 = 0x100
0x586: V343 = EXP 0x100 0x0
0x588: V344 = DIV V341 0x1
0x589: V345 = 0xffffffffffffffffffffffffffffffffffffffff
0x59e: V346 = AND 0xffffffffffffffffffffffffffffffffffffffff V344
0x59f: V347 = 0xffffffffffffffffffffffffffffffffffffffff
0x5b4: V348 = AND 0xffffffffffffffffffffffffffffffffffffffff V346
0x5b6: V349 = 0xffffffffffffffffffffffffffffffffffffffff
0x5cb: V350 = AND 0xffffffffffffffffffffffffffffffffffffffff V338
0x5cc: V351 = EQ V350 V348
0x5cd: V352 = ISZERO V351
0x5ce: V353 = 0x5ff
0x5d1: JUMPI 0x5ff V352
---
Entry stack: [V11, 0x283, V151, V154]
Stack pops: 0
Stack additions: [V338]
Exit stack: [V11, 0x283, V151, V154, V338]

================================

Block 0x5d2
[0x5d2:0x5fd]
---
Predecessors: [0x576]
Successors: [0x798]
---
0x5d2 PUSH2 0x5fe
0x5d5 PUSH1 0x1
0x5d7 PUSH1 0x0
0x5d9 SWAP1
0x5da SLOAD
0x5db SWAP1
0x5dc PUSH2 0x100
0x5df EXP
0x5e0 SWAP1
0x5e1 DIV
0x5e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5f7 AND
0x5f8 DUP5
0x5f9 DUP5
0x5fa PUSH2 0x798
0x5fd JUMP
---
0x5d2: V354 = 0x5fe
0x5d5: V355 = 0x1
0x5d7: V356 = 0x0
0x5da: V357 = S[0x1]
0x5dc: V358 = 0x100
0x5df: V359 = EXP 0x100 0x0
0x5e1: V360 = DIV V357 0x1
0x5e2: V361 = 0xffffffffffffffffffffffffffffffffffffffff
0x5f7: V362 = AND 0xffffffffffffffffffffffffffffffffffffffff V360
0x5fa: V363 = 0x798
0x5fd: JUMP 0x798
---
Entry stack: [V11, 0x283, V151, V154, V338]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x5fe, V362, S2, S1]
Exit stack: [V11, 0x283, V151, V154, V338, 0x5fe, V362, V151, V154]

================================

Block 0x5fe
[0x5fe:0x5fe]
---
Predecessors: [0xaa9]
Successors: [0x5ff]
---
0x5fe JUMPDEST
---
0x5fe: JUMPDEST 
---
Entry stack: [V11, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S3, S2, S1, S0]

================================

Block 0x5ff
[0x5ff:0x603]
---
Predecessors: [0x576, 0x5fe]
Successors: [0x109, 0x283]
---
0x5ff JUMPDEST
0x600 POP
0x601 POP
0x602 POP
0x603 JUMP
---
0x5ff: JUMPDEST 
0x603: JUMP S3
---
Entry stack: [V11, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x604
[0x604:0x65f]
---
Predecessors: [0x291]
Successors: [0x660, 0x667]
---
0x604 JUMPDEST
0x605 PUSH1 0x0
0x607 CALLER
0x608 SWAP1
0x609 POP
0x60a PUSH1 0x1
0x60c PUSH1 0x0
0x60e SWAP1
0x60f SLOAD
0x610 SWAP1
0x611 PUSH2 0x100
0x614 EXP
0x615 SWAP1
0x616 DIV
0x617 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x62c AND
0x62d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x642 AND
0x643 DUP2
0x644 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x659 AND
0x65a EQ
0x65b ISZERO
0x65c PUSH2 0x667
0x65f JUMPI
---
0x604: JUMPDEST 
0x605: V364 = 0x0
0x607: V365 = CALLER
0x60a: V366 = 0x1
0x60c: V367 = 0x0
0x60f: V368 = S[0x1]
0x611: V369 = 0x100
0x614: V370 = EXP 0x100 0x0
0x616: V371 = DIV V368 0x1
0x617: V372 = 0xffffffffffffffffffffffffffffffffffffffff
0x62c: V373 = AND 0xffffffffffffffffffffffffffffffffffffffff V371
0x62d: V374 = 0xffffffffffffffffffffffffffffffffffffffff
0x642: V375 = AND 0xffffffffffffffffffffffffffffffffffffffff V373
0x644: V376 = 0xffffffffffffffffffffffffffffffffffffffff
0x659: V377 = AND 0xffffffffffffffffffffffffffffffffffffffff V365
0x65a: V378 = EQ V377 V375
0x65b: V379 = ISZERO V378
0x65c: V380 = 0x667
0x65f: JUMPI 0x667 V379
---
Entry stack: [V11, 0x2b0, V167]
Stack pops: 0
Stack additions: [V365]
Exit stack: [V11, 0x2b0, V167, V365]

================================

Block 0x660
[0x660:0x666]
---
Predecessors: [0x604]
Successors: [0x667]
---
0x660 DUP2
0x661 PUSH1 0x2
0x663 DUP2
0x664 SWAP1
0x665 SSTORE
0x666 POP
---
0x661: V381 = 0x2
0x665: S[0x2] = V167
---
Entry stack: [V11, 0x2b0, V167, V365]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x2b0, V167, V365]

================================

Block 0x667
[0x667:0x66a]
---
Predecessors: [0x604, 0x660]
Successors: [0x2b0]
---
0x667 JUMPDEST
0x668 POP
0x669 POP
0x66a JUMP
---
0x667: JUMPDEST 
0x66a: JUMP 0x2b0
---
Entry stack: [V11, 0x2b0, V167, V365]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x66b
[0x66b:0x6ba]
---
Predecessors: [0x2be]
Successors: [0x6bb, 0x701]
---
0x66b JUMPDEST
0x66c PUSH1 0x0
0x66e DUP1
0x66f SLOAD
0x670 PUSH1 0x1
0x672 DUP2
0x673 PUSH1 0x1
0x675 AND
0x676 ISZERO
0x677 PUSH2 0x100
0x67a MUL
0x67b SUB
0x67c AND
0x67d PUSH1 0x2
0x67f SWAP1
0x680 DIV
0x681 DUP1
0x682 PUSH1 0x1f
0x684 ADD
0x685 PUSH1 0x20
0x687 DUP1
0x688 SWAP2
0x689 DIV
0x68a MUL
0x68b PUSH1 0x20
0x68d ADD
0x68e PUSH1 0x40
0x690 MLOAD
0x691 SWAP1
0x692 DUP2
0x693 ADD
0x694 PUSH1 0x40
0x696 MSTORE
0x697 DUP1
0x698 SWAP3
0x699 SWAP2
0x69a SWAP1
0x69b DUP2
0x69c DUP2
0x69d MSTORE
0x69e PUSH1 0x20
0x6a0 ADD
0x6a1 DUP3
0x6a2 DUP1
0x6a3 SLOAD
0x6a4 PUSH1 0x1
0x6a6 DUP2
0x6a7 PUSH1 0x1
0x6a9 AND
0x6aa ISZERO
0x6ab PUSH2 0x100
0x6ae MUL
0x6af SUB
0x6b0 AND
0x6b1 PUSH1 0x2
0x6b3 SWAP1
0x6b4 DIV
0x6b5 DUP1
0x6b6 ISZERO
0x6b7 PUSH2 0x701
0x6ba JUMPI
---
0x66b: JUMPDEST 
0x66c: V382 = 0x0
0x66f: V383 = S[0x0]
0x670: V384 = 0x1
0x673: V385 = 0x1
0x675: V386 = AND 0x1 V383
0x676: V387 = ISZERO V386
0x677: V388 = 0x100
0x67a: V389 = MUL 0x100 V387
0x67b: V390 = SUB V389 0x1
0x67c: V391 = AND V390 V383
0x67d: V392 = 0x2
0x680: V393 = DIV V391 0x2
0x682: V394 = 0x1f
0x684: V395 = ADD 0x1f V393
0x685: V396 = 0x20
0x689: V397 = DIV V395 0x20
0x68a: V398 = MUL V397 0x20
0x68b: V399 = 0x20
0x68d: V400 = ADD 0x20 V398
0x68e: V401 = 0x40
0x690: V402 = M[0x40]
0x693: V403 = ADD V402 V400
0x694: V404 = 0x40
0x696: M[0x40] = V403
0x69d: M[V402] = V393
0x69e: V405 = 0x20
0x6a0: V406 = ADD 0x20 V402
0x6a3: V407 = S[0x0]
0x6a4: V408 = 0x1
0x6a7: V409 = 0x1
0x6a9: V410 = AND 0x1 V407
0x6aa: V411 = ISZERO V410
0x6ab: V412 = 0x100
0x6ae: V413 = MUL 0x100 V411
0x6af: V414 = SUB V413 0x1
0x6b0: V415 = AND V414 V407
0x6b1: V416 = 0x2
0x6b4: V417 = DIV V415 0x2
0x6b6: V418 = ISZERO V417
0x6b7: V419 = 0x701
0x6ba: JUMPI 0x701 V418
---
Entry stack: [V11, 0x2c7]
Stack pops: 0
Stack additions: [V402, 0x0, V393, V406, 0x0, V417]
Exit stack: [V11, 0x2c7, V402, 0x0, V393, V406, 0x0, V417]

================================

Block 0x6bb
[0x6bb:0x6c2]
---
Predecessors: [0x66b]
Successors: [0x6c3, 0x6d6]
---
0x6bb DUP1
0x6bc PUSH1 0x1f
0x6be LT
0x6bf PUSH2 0x6d6
0x6c2 JUMPI
---
0x6bc: V420 = 0x1f
0x6be: V421 = LT 0x1f V417
0x6bf: V422 = 0x6d6
0x6c2: JUMPI 0x6d6 V421
---
Entry stack: [V11, 0x2c7, V402, 0x0, V393, V406, 0x0, V417]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x2c7, V402, 0x0, V393, V406, 0x0, V417]

================================

Block 0x6c3
[0x6c3:0x6d5]
---
Predecessors: [0x6bb]
Successors: [0x701]
---
0x6c3 PUSH2 0x100
0x6c6 DUP1
0x6c7 DUP4
0x6c8 SLOAD
0x6c9 DIV
0x6ca MUL
0x6cb DUP4
0x6cc MSTORE
0x6cd SWAP2
0x6ce PUSH1 0x20
0x6d0 ADD
0x6d1 SWAP2
0x6d2 PUSH2 0x701
0x6d5 JUMP
---
0x6c3: V423 = 0x100
0x6c8: V424 = S[0x0]
0x6c9: V425 = DIV V424 0x100
0x6ca: V426 = MUL V425 0x100
0x6cc: M[V406] = V426
0x6ce: V427 = 0x20
0x6d0: V428 = ADD 0x20 V406
0x6d2: V429 = 0x701
0x6d5: JUMP 0x701
---
Entry stack: [V11, 0x2c7, V402, 0x0, V393, V406, 0x0, V417]
Stack pops: 3
Stack additions: [V428, S1, S0]
Exit stack: [V11, 0x2c7, V402, 0x0, V393, V428, 0x0, V417]

================================

Block 0x6d6
[0x6d6:0x6e3]
---
Predecessors: [0x6bb]
Successors: [0x6e4]
---
0x6d6 JUMPDEST
0x6d7 DUP3
0x6d8 ADD
0x6d9 SWAP2
0x6da SWAP1
0x6db PUSH1 0x0
0x6dd MSTORE
0x6de PUSH1 0x20
0x6e0 PUSH1 0x0
0x6e2 SHA3
0x6e3 SWAP1
---
0x6d6: JUMPDEST 
0x6d8: V430 = ADD V406 V417
0x6db: V431 = 0x0
0x6dd: M[0x0] = 0x0
0x6de: V432 = 0x20
0x6e0: V433 = 0x0
0x6e2: V434 = SHA3 0x0 0x20
---
Entry stack: [V11, 0x2c7, V402, 0x0, V393, V406, 0x0, V417]
Stack pops: 3
Stack additions: [V430, V434, S2]
Exit stack: [V11, 0x2c7, V402, 0x0, V393, V430, V434, V406]

================================

Block 0x6e4
[0x6e4:0x6f7]
---
Predecessors: [0x6d6, 0x6e4]
Successors: [0x6e4, 0x6f8]
---
0x6e4 JUMPDEST
0x6e5 DUP2
0x6e6 SLOAD
0x6e7 DUP2
0x6e8 MSTORE
0x6e9 SWAP1
0x6ea PUSH1 0x1
0x6ec ADD
0x6ed SWAP1
0x6ee PUSH1 0x20
0x6f0 ADD
0x6f1 DUP1
0x6f2 DUP4
0x6f3 GT
0x6f4 PUSH2 0x6e4
0x6f7 JUMPI
---
0x6e4: JUMPDEST 
0x6e6: V435 = S[S1]
0x6e8: M[S0] = V435
0x6ea: V436 = 0x1
0x6ec: V437 = ADD 0x1 S1
0x6ee: V438 = 0x20
0x6f0: V439 = ADD 0x20 S0
0x6f3: V440 = GT V430 V439
0x6f4: V441 = 0x6e4
0x6f7: JUMPI 0x6e4 V440
---
Entry stack: [V11, 0x2c7, V402, 0x0, V393, V430, S1, S0]
Stack pops: 3
Stack additions: [S2, V437, V439]
Exit stack: [V11, 0x2c7, V402, 0x0, V393, V430, V437, V439]

================================

Block 0x6f8
[0x6f8:0x700]
---
Predecessors: [0x6e4]
Successors: [0x701]
---
0x6f8 DUP3
0x6f9 SWAP1
0x6fa SUB
0x6fb PUSH1 0x1f
0x6fd AND
0x6fe DUP3
0x6ff ADD
0x700 SWAP2
---
0x6fa: V442 = SUB V439 V430
0x6fb: V443 = 0x1f
0x6fd: V444 = AND 0x1f V442
0x6ff: V445 = ADD V430 V444
---
Entry stack: [V11, 0x2c7, V402, 0x0, V393, V430, V437, V439]
Stack pops: 3
Stack additions: [V445, S1, S2]
Exit stack: [V11, 0x2c7, V402, 0x0, V393, V445, V437, V430]

================================

Block 0x701
[0x701:0x708]
---
Predecessors: [0x66b, 0x6c3, 0x6f8]
Successors: [0x2c7]
---
0x701 JUMPDEST
0x702 POP
0x703 POP
0x704 POP
0x705 POP
0x706 POP
0x707 DUP2
0x708 JUMP
---
0x701: JUMPDEST 
0x708: JUMP 0x2c7
---
Entry stack: [V11, 0x2c7, V402, 0x0, V393, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V11, 0x2c7, V402]

================================

Block 0x709
[0x709:0x764]
---
Predecessors: [0x34e]
Successors: [0x765, 0x794]
---
0x709 JUMPDEST
0x70a PUSH1 0x0
0x70c CALLER
0x70d SWAP1
0x70e POP
0x70f PUSH1 0x1
0x711 PUSH1 0x0
0x713 SWAP1
0x714 SLOAD
0x715 SWAP1
0x716 PUSH2 0x100
0x719 EXP
0x71a SWAP1
0x71b DIV
0x71c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x731 AND
0x732 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x747 AND
0x748 DUP2
0x749 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x75e AND
0x75f EQ
0x760 ISZERO
0x761 PUSH2 0x794
0x764 JUMPI
---
0x709: JUMPDEST 
0x70a: V446 = 0x0
0x70c: V447 = CALLER
0x70f: V448 = 0x1
0x711: V449 = 0x0
0x714: V450 = S[0x1]
0x716: V451 = 0x100
0x719: V452 = EXP 0x100 0x0
0x71b: V453 = DIV V450 0x1
0x71c: V454 = 0xffffffffffffffffffffffffffffffffffffffff
0x731: V455 = AND 0xffffffffffffffffffffffffffffffffffffffff V453
0x732: V456 = 0xffffffffffffffffffffffffffffffffffffffff
0x747: V457 = AND 0xffffffffffffffffffffffffffffffffffffffff V455
0x749: V458 = 0xffffffffffffffffffffffffffffffffffffffff
0x75e: V459 = AND 0xffffffffffffffffffffffffffffffffffffffff V447
0x75f: V460 = EQ V459 V457
0x760: V461 = ISZERO V460
0x761: V462 = 0x794
0x764: JUMPI 0x794 V461
---
Entry stack: [V11, 0x383, V229]
Stack pops: 0
Stack additions: [V447]
Exit stack: [V11, 0x383, V229, V447]

================================

Block 0x765
[0x765:0x792]
---
Predecessors: [0x709]
Successors: [0x798]
---
0x765 PUSH2 0x793
0x768 PUSH1 0x1
0x76a PUSH1 0x0
0x76c SWAP1
0x76d SLOAD
0x76e SWAP1
0x76f PUSH2 0x100
0x772 EXP
0x773 SWAP1
0x774 DIV
0x775 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x78a AND
0x78b DUP4
0x78c PUSH1 0x2
0x78e SLOAD
0x78f PUSH2 0x798
0x792 JUMP
---
0x765: V463 = 0x793
0x768: V464 = 0x1
0x76a: V465 = 0x0
0x76d: V466 = S[0x1]
0x76f: V467 = 0x100
0x772: V468 = EXP 0x100 0x0
0x774: V469 = DIV V466 0x1
0x775: V470 = 0xffffffffffffffffffffffffffffffffffffffff
0x78a: V471 = AND 0xffffffffffffffffffffffffffffffffffffffff V469
0x78c: V472 = 0x2
0x78e: V473 = S[0x2]
0x78f: V474 = 0x798
0x792: JUMP 0x798
---
Entry stack: [V11, 0x383, V229, V447]
Stack pops: 2
Stack additions: [S1, S0, 0x793, V471, S1, V473]
Exit stack: [V11, 0x383, V229, V447, 0x793, V471, V229, V473]

================================

Block 0x793
[0x793:0x793]
---
Predecessors: [0xaa9]
Successors: [0x794]
---
0x793 JUMPDEST
---
0x793: JUMPDEST 
---
Entry stack: [V11, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S3, S2, S1, S0]

================================

Block 0x794
[0x794:0x797]
---
Predecessors: [0x709, 0x793]
Successors: [0x383]
---
0x794 JUMPDEST
0x795 POP
0x796 POP
0x797 JUMP
---
0x794: JUMPDEST 
0x797: JUMP S2
---
Entry stack: [V11, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11, S3]

================================

Block 0x798
[0x798:0x7ba]
---
Predecessors: [0x385, 0x5d2, 0x765]
Successors: [0x7bb, 0x7bf]
---
0x798 JUMPDEST
0x799 PUSH1 0x0
0x79b DUP1
0x79c DUP4
0x79d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7b2 AND
0x7b3 EQ
0x7b4 ISZERO
0x7b5 ISZERO
0x7b6 ISZERO
0x7b7 PUSH2 0x7bf
0x7ba JUMPI
---
0x798: JUMPDEST 
0x799: V475 = 0x0
0x79d: V476 = 0xffffffffffffffffffffffffffffffffffffffff
0x7b2: V477 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x7b3: V478 = EQ V477 0x0
0x7b4: V479 = ISZERO V478
0x7b5: V480 = ISZERO V479
0x7b6: V481 = ISZERO V480
0x7b7: V482 = 0x7bf
0x7ba: JUMPI 0x7bf V481
---
Entry stack: [V11, S7, S6, S5, S4, {0x390, 0x5fe, 0x793}, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V11, S7, S6, S5, S4, {0x390, 0x5fe, 0x793}, S2, S1, S0, 0x0]

================================

Block 0x7bb
[0x7bb:0x7be]
---
Predecessors: [0x798]
Successors: []
---
0x7bb PUSH1 0x0
0x7bd DUP1
0x7be REVERT
---
0x7bb: V483 = 0x0
0x7be: REVERT 0x0 0x0
---
Entry stack: [V11, S8, S7, S6, S5, {0x390, 0x5fe, 0x793}, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S8, S7, S6, S5, {0x390, 0x5fe, 0x793}, S3, S2, S1, 0x0]

================================

Block 0x7bf
[0x7bf:0x808]
---
Predecessors: [0x798]
Successors: [0x809, 0x80d]
---
0x7bf JUMPDEST
0x7c0 DUP2
0x7c1 PUSH1 0x4
0x7c3 PUSH1 0x0
0x7c5 DUP7
0x7c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7db AND
0x7dc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7f1 AND
0x7f2 DUP2
0x7f3 MSTORE
0x7f4 PUSH1 0x20
0x7f6 ADD
0x7f7 SWAP1
0x7f8 DUP2
0x7f9 MSTORE
0x7fa PUSH1 0x20
0x7fc ADD
0x7fd PUSH1 0x0
0x7ff SHA3
0x800 SLOAD
0x801 LT
0x802 ISZERO
0x803 ISZERO
0x804 ISZERO
0x805 PUSH2 0x80d
0x808 JUMPI
---
0x7bf: JUMPDEST 
0x7c1: V484 = 0x4
0x7c3: V485 = 0x0
0x7c6: V486 = 0xffffffffffffffffffffffffffffffffffffffff
0x7db: V487 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x7dc: V488 = 0xffffffffffffffffffffffffffffffffffffffff
0x7f1: V489 = AND 0xffffffffffffffffffffffffffffffffffffffff V487
0x7f3: M[0x0] = V489
0x7f4: V490 = 0x20
0x7f6: V491 = ADD 0x20 0x0
0x7f9: M[0x20] = 0x4
0x7fa: V492 = 0x20
0x7fc: V493 = ADD 0x20 0x20
0x7fd: V494 = 0x0
0x7ff: V495 = SHA3 0x0 0x40
0x800: V496 = S[V495]
0x801: V497 = LT V496 S1
0x802: V498 = ISZERO V497
0x803: V499 = ISZERO V498
0x804: V500 = ISZERO V499
0x805: V501 = 0x80d
0x808: JUMPI 0x80d V500
---
Entry stack: [V11, S8, S7, S6, S5, {0x390, 0x5fe, 0x793}, S3, S2, S1, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, S8, S7, S6, S5, {0x390, 0x5fe, 0x793}, S3, S2, S1, 0x0]

================================

Block 0x809
[0x809:0x80c]
---
Predecessors: [0x7bf]
Successors: []
---
0x809 PUSH1 0x0
0x80b DUP1
0x80c REVERT
---
0x809: V502 = 0x0
0x80c: REVERT 0x0 0x0
---
Entry stack: [V11, S8, S7, S6, S5, {0x390, 0x5fe, 0x793}, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S8, S7, S6, S5, {0x390, 0x5fe, 0x793}, S3, S2, S1, 0x0]

================================

Block 0x80d
[0x80d:0x897]
---
Predecessors: [0x7bf]
Successors: [0x898, 0x89c]
---
0x80d JUMPDEST
0x80e PUSH1 0x4
0x810 PUSH1 0x0
0x812 DUP5
0x813 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x828 AND
0x829 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x83e AND
0x83f DUP2
0x840 MSTORE
0x841 PUSH1 0x20
0x843 ADD
0x844 SWAP1
0x845 DUP2
0x846 MSTORE
0x847 PUSH1 0x20
0x849 ADD
0x84a PUSH1 0x0
0x84c SHA3
0x84d SLOAD
0x84e DUP3
0x84f PUSH1 0x4
0x851 PUSH1 0x0
0x853 DUP7
0x854 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x869 AND
0x86a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x87f AND
0x880 DUP2
0x881 MSTORE
0x882 PUSH1 0x20
0x884 ADD
0x885 SWAP1
0x886 DUP2
0x887 MSTORE
0x888 PUSH1 0x20
0x88a ADD
0x88b PUSH1 0x0
0x88d SHA3
0x88e SLOAD
0x88f ADD
0x890 LT
0x891 ISZERO
0x892 ISZERO
0x893 ISZERO
0x894 PUSH2 0x89c
0x897 JUMPI
---
0x80d: JUMPDEST 
0x80e: V503 = 0x4
0x810: V504 = 0x0
0x813: V505 = 0xffffffffffffffffffffffffffffffffffffffff
0x828: V506 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x829: V507 = 0xffffffffffffffffffffffffffffffffffffffff
0x83e: V508 = AND 0xffffffffffffffffffffffffffffffffffffffff V506
0x840: M[0x0] = V508
0x841: V509 = 0x20
0x843: V510 = ADD 0x20 0x0
0x846: M[0x20] = 0x4
0x847: V511 = 0x20
0x849: V512 = ADD 0x20 0x20
0x84a: V513 = 0x0
0x84c: V514 = SHA3 0x0 0x40
0x84d: V515 = S[V514]
0x84f: V516 = 0x4
0x851: V517 = 0x0
0x854: V518 = 0xffffffffffffffffffffffffffffffffffffffff
0x869: V519 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x86a: V520 = 0xffffffffffffffffffffffffffffffffffffffff
0x87f: V521 = AND 0xffffffffffffffffffffffffffffffffffffffff V519
0x881: M[0x0] = V521
0x882: V522 = 0x20
0x884: V523 = ADD 0x20 0x0
0x887: M[0x20] = 0x4
0x888: V524 = 0x20
0x88a: V525 = ADD 0x20 0x20
0x88b: V526 = 0x0
0x88d: V527 = SHA3 0x0 0x40
0x88e: V528 = S[V527]
0x88f: V529 = ADD V528 S1
0x890: V530 = LT V529 V515
0x891: V531 = ISZERO V530
0x892: V532 = ISZERO V531
0x893: V533 = ISZERO V532
0x894: V534 = 0x89c
0x897: JUMPI 0x89c V533
---
Entry stack: [V11, S8, S7, S6, S5, {0x390, 0x5fe, 0x793}, S3, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, S8, S7, S6, S5, {0x390, 0x5fe, 0x793}, S3, S2, S1, 0x0]

================================

Block 0x898
[0x898:0x89b]
---
Predecessors: [0x80d]
Successors: []
---
0x898 PUSH1 0x0
0x89a DUP1
0x89b REVERT
---
0x898: V535 = 0x0
0x89b: REVERT 0x0 0x0
---
Entry stack: [V11, S8, S7, S6, S5, {0x390, 0x5fe, 0x793}, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S8, S7, S6, S5, {0x390, 0x5fe, 0x793}, S3, S2, S1, 0x0]

================================

Block 0x89c
[0x89c:0xaa7]
---
Predecessors: [0x80d]
Successors: [0xaa8, 0xaa9]
---
0x89c JUMPDEST
0x89d PUSH1 0x4
0x89f PUSH1 0x0
0x8a1 DUP5
0x8a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8b7 AND
0x8b8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8cd AND
0x8ce DUP2
0x8cf MSTORE
0x8d0 PUSH1 0x20
0x8d2 ADD
0x8d3 SWAP1
0x8d4 DUP2
0x8d5 MSTORE
0x8d6 PUSH1 0x20
0x8d8 ADD
0x8d9 PUSH1 0x0
0x8db SHA3
0x8dc SLOAD
0x8dd PUSH1 0x4
0x8df PUSH1 0x0
0x8e1 DUP7
0x8e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8f7 AND
0x8f8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x90d AND
0x90e DUP2
0x90f MSTORE
0x910 PUSH1 0x20
0x912 ADD
0x913 SWAP1
0x914 DUP2
0x915 MSTORE
0x916 PUSH1 0x20
0x918 ADD
0x919 PUSH1 0x0
0x91b SHA3
0x91c SLOAD
0x91d ADD
0x91e SWAP1
0x91f POP
0x920 DUP2
0x921 PUSH1 0x4
0x923 PUSH1 0x0
0x925 DUP7
0x926 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x93b AND
0x93c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x951 AND
0x952 DUP2
0x953 MSTORE
0x954 PUSH1 0x20
0x956 ADD
0x957 SWAP1
0x958 DUP2
0x959 MSTORE
0x95a PUSH1 0x20
0x95c ADD
0x95d PUSH1 0x0
0x95f SHA3
0x960 PUSH1 0x0
0x962 DUP3
0x963 DUP3
0x964 SLOAD
0x965 SUB
0x966 SWAP3
0x967 POP
0x968 POP
0x969 DUP2
0x96a SWAP1
0x96b SSTORE
0x96c POP
0x96d DUP2
0x96e PUSH1 0x4
0x970 PUSH1 0x0
0x972 DUP6
0x973 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x988 AND
0x989 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x99e AND
0x99f DUP2
0x9a0 MSTORE
0x9a1 PUSH1 0x20
0x9a3 ADD
0x9a4 SWAP1
0x9a5 DUP2
0x9a6 MSTORE
0x9a7 PUSH1 0x20
0x9a9 ADD
0x9aa PUSH1 0x0
0x9ac SHA3
0x9ad PUSH1 0x0
0x9af DUP3
0x9b0 DUP3
0x9b1 SLOAD
0x9b2 ADD
0x9b3 SWAP3
0x9b4 POP
0x9b5 POP
0x9b6 DUP2
0x9b7 SWAP1
0x9b8 SSTORE
0x9b9 POP
0x9ba DUP3
0x9bb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9d0 AND
0x9d1 DUP5
0x9d2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9e7 AND
0x9e8 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xa09 DUP5
0xa0a PUSH1 0x40
0xa0c MLOAD
0xa0d DUP1
0xa0e DUP3
0xa0f DUP2
0xa10 MSTORE
0xa11 PUSH1 0x20
0xa13 ADD
0xa14 SWAP2
0xa15 POP
0xa16 POP
0xa17 PUSH1 0x40
0xa19 MLOAD
0xa1a DUP1
0xa1b SWAP2
0xa1c SUB
0xa1d SWAP1
0xa1e LOG3
0xa1f DUP1
0xa20 PUSH1 0x4
0xa22 PUSH1 0x0
0xa24 DUP6
0xa25 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa3a AND
0xa3b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa50 AND
0xa51 DUP2
0xa52 MSTORE
0xa53 PUSH1 0x20
0xa55 ADD
0xa56 SWAP1
0xa57 DUP2
0xa58 MSTORE
0xa59 PUSH1 0x20
0xa5b ADD
0xa5c PUSH1 0x0
0xa5e SHA3
0xa5f SLOAD
0xa60 PUSH1 0x4
0xa62 PUSH1 0x0
0xa64 DUP8
0xa65 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa7a AND
0xa7b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa90 AND
0xa91 DUP2
0xa92 MSTORE
0xa93 PUSH1 0x20
0xa95 ADD
0xa96 SWAP1
0xa97 DUP2
0xa98 MSTORE
0xa99 PUSH1 0x20
0xa9b ADD
0xa9c PUSH1 0x0
0xa9e SHA3
0xa9f SLOAD
0xaa0 ADD
0xaa1 EQ
0xaa2 ISZERO
0xaa3 ISZERO
0xaa4 PUSH2 0xaa9
0xaa7 JUMPI
---
0x89c: JUMPDEST 
0x89d: V536 = 0x4
0x89f: V537 = 0x0
0x8a2: V538 = 0xffffffffffffffffffffffffffffffffffffffff
0x8b7: V539 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x8b8: V540 = 0xffffffffffffffffffffffffffffffffffffffff
0x8cd: V541 = AND 0xffffffffffffffffffffffffffffffffffffffff V539
0x8cf: M[0x0] = V541
0x8d0: V542 = 0x20
0x8d2: V543 = ADD 0x20 0x0
0x8d5: M[0x20] = 0x4
0x8d6: V544 = 0x20
0x8d8: V545 = ADD 0x20 0x20
0x8d9: V546 = 0x0
0x8db: V547 = SHA3 0x0 0x40
0x8dc: V548 = S[V547]
0x8dd: V549 = 0x4
0x8df: V550 = 0x0
0x8e2: V551 = 0xffffffffffffffffffffffffffffffffffffffff
0x8f7: V552 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x8f8: V553 = 0xffffffffffffffffffffffffffffffffffffffff
0x90d: V554 = AND 0xffffffffffffffffffffffffffffffffffffffff V552
0x90f: M[0x0] = V554
0x910: V555 = 0x20
0x912: V556 = ADD 0x20 0x0
0x915: M[0x20] = 0x4
0x916: V557 = 0x20
0x918: V558 = ADD 0x20 0x20
0x919: V559 = 0x0
0x91b: V560 = SHA3 0x0 0x40
0x91c: V561 = S[V560]
0x91d: V562 = ADD V561 V548
0x921: V563 = 0x4
0x923: V564 = 0x0
0x926: V565 = 0xffffffffffffffffffffffffffffffffffffffff
0x93b: V566 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x93c: V567 = 0xffffffffffffffffffffffffffffffffffffffff
0x951: V568 = AND 0xffffffffffffffffffffffffffffffffffffffff V566
0x953: M[0x0] = V568
0x954: V569 = 0x20
0x956: V570 = ADD 0x20 0x0
0x959: M[0x20] = 0x4
0x95a: V571 = 0x20
0x95c: V572 = ADD 0x20 0x20
0x95d: V573 = 0x0
0x95f: V574 = SHA3 0x0 0x40
0x960: V575 = 0x0
0x964: V576 = S[V574]
0x965: V577 = SUB V576 S1
0x96b: S[V574] = V577
0x96e: V578 = 0x4
0x970: V579 = 0x0
0x973: V580 = 0xffffffffffffffffffffffffffffffffffffffff
0x988: V581 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x989: V582 = 0xffffffffffffffffffffffffffffffffffffffff
0x99e: V583 = AND 0xffffffffffffffffffffffffffffffffffffffff V581
0x9a0: M[0x0] = V583
0x9a1: V584 = 0x20
0x9a3: V585 = ADD 0x20 0x0
0x9a6: M[0x20] = 0x4
0x9a7: V586 = 0x20
0x9a9: V587 = ADD 0x20 0x20
0x9aa: V588 = 0x0
0x9ac: V589 = SHA3 0x0 0x40
0x9ad: V590 = 0x0
0x9b1: V591 = S[V589]
0x9b2: V592 = ADD V591 S1
0x9b8: S[V589] = V592
0x9bb: V593 = 0xffffffffffffffffffffffffffffffffffffffff
0x9d0: V594 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x9d2: V595 = 0xffffffffffffffffffffffffffffffffffffffff
0x9e7: V596 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x9e8: V597 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xa0a: V598 = 0x40
0xa0c: V599 = M[0x40]
0xa10: M[V599] = S1
0xa11: V600 = 0x20
0xa13: V601 = ADD 0x20 V599
0xa17: V602 = 0x40
0xa19: V603 = M[0x40]
0xa1c: V604 = SUB V601 V603
0xa1e: LOG V603 V604 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V596 V594
0xa20: V605 = 0x4
0xa22: V606 = 0x0
0xa25: V607 = 0xffffffffffffffffffffffffffffffffffffffff
0xa3a: V608 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xa3b: V609 = 0xffffffffffffffffffffffffffffffffffffffff
0xa50: V610 = AND 0xffffffffffffffffffffffffffffffffffffffff V608
0xa52: M[0x0] = V610
0xa53: V611 = 0x20
0xa55: V612 = ADD 0x20 0x0
0xa58: M[0x20] = 0x4
0xa59: V613 = 0x20
0xa5b: V614 = ADD 0x20 0x20
0xa5c: V615 = 0x0
0xa5e: V616 = SHA3 0x0 0x40
0xa5f: V617 = S[V616]
0xa60: V618 = 0x4
0xa62: V619 = 0x0
0xa65: V620 = 0xffffffffffffffffffffffffffffffffffffffff
0xa7a: V621 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xa7b: V622 = 0xffffffffffffffffffffffffffffffffffffffff
0xa90: V623 = AND 0xffffffffffffffffffffffffffffffffffffffff V621
0xa92: M[0x0] = V623
0xa93: V624 = 0x20
0xa95: V625 = ADD 0x20 0x0
0xa98: M[0x20] = 0x4
0xa99: V626 = 0x20
0xa9b: V627 = ADD 0x20 0x20
0xa9c: V628 = 0x0
0xa9e: V629 = SHA3 0x0 0x40
0xa9f: V630 = S[V629]
0xaa0: V631 = ADD V630 V617
0xaa1: V632 = EQ V631 V562
0xaa2: V633 = ISZERO V632
0xaa3: V634 = ISZERO V633
0xaa4: V635 = 0xaa9
0xaa7: JUMPI 0xaa9 V634
---
Entry stack: [V11, S8, S7, S6, S5, {0x390, 0x5fe, 0x793}, S3, S2, S1, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, V562]
Exit stack: [V11, S8, S7, S6, S5, {0x390, 0x5fe, 0x793}, S3, S2, S1, V562]

================================

Block 0xaa8
[0xaa8:0xaa8]
---
Predecessors: [0x89c]
Successors: []
---
0xaa8 INVALID
---
0xaa8: INVALID 
---
Entry stack: [V11, S8, S7, S6, S5, {0x390, 0x5fe, 0x793}, S3, S2, S1, V562]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S8, S7, S6, S5, {0x390, 0x5fe, 0x793}, S3, S2, S1, V562]

================================

Block 0xaa9
[0xaa9:0xaae]
---
Predecessors: [0x89c]
Successors: [0x390, 0x5fe, 0x793]
---
0xaa9 JUMPDEST
0xaaa POP
0xaab POP
0xaac POP
0xaad POP
0xaae JUMP
---
0xaa9: JUMPDEST 
0xaae: JUMP {0x390, 0x5fe, 0x793}
---
Entry stack: [V11, S8, S7, S6, S5, {0x390, 0x5fe, 0x793}, S3, S2, S1, V562]
Stack pops: 5
Stack additions: []
Exit stack: [V11, S8, S7, S6, S5]

================================

Block 0xaaf
[0xaaf:0xadc]
---
Predecessors: []
Successors: []
---
0xaaf STOP
0xab0 LOG1
0xab1 PUSH6 0x627a7a723058
0xab8 SHA3
0xab9 SAR
0xaba DUP15
0xabb MISSING 0xfc
0xabc DUP12
0xabd PUSH25 0x28b377f55c4e948e690de70916315288d61091059719211da9
0xad7 MISSING 0xe6
0xad8 PUSH4 0x29
---
0xaaf: STOP 
0xab0: LOG S0 S1 S2
0xab1: V636 = 0x627a7a723058
0xab8: V637 = SHA3 0x627a7a723058 S3
0xab9: V638 = SAR V637 S4
0xabb: MISSING 0xfc
0xabd: V639 = 0x28b377f55c4e948e690de70916315288d61091059719211da9
0xad7: MISSING 0xe6
0xad8: V640 = 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S18, V638, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, 0x28b377f55c4e948e690de70916315288d61091059719211da9, S11, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, 0x29]
Exit stack: []

================================

Function 0:
Public function signature: 0x1047456e
Entry block: 0x9e
Exit block: 0x283
Body: 0x9e, 0xa6, 0xaa, 0x109, 0x283, 0x385, 0x390

Function 1:
Public function signature: 0x11af110c
Entry block: 0x10b
Exit block: 0x14c
Body: 0x10b, 0x113, 0x117, 0x14c, 0x395

Function 2:
Public function signature: 0x13888565
Entry block: 0x162
Exit block: 0x177
Body: 0x162, 0x16a, 0x16e, 0x177, 0x3ad

Function 3:
Public function signature: 0x37f42841
Entry block: 0x194
Exit block: 0x1d5
Body: 0x194, 0x19c, 0x1a0, 0x1d5, 0x41d

Function 4:
Public function signature: 0x5c221816
Entry block: 0x1eb
Exit block: 0x236
Body: 0x1eb, 0x1f3, 0x1f7, 0x236, 0x466, 0x4c3, 0x4c7, 0x510, 0x514

Function 5:
Public function signature: 0x7d7c7258
Entry block: 0x238
Exit block: 0x283
Body: 0x109, 0x238, 0x240, 0x244, 0x283, 0x576, 0x5d2, 0x5fe, 0x5ff

Function 6:
Public function signature: 0x827f143e
Entry block: 0x285
Exit block: 0x2b0
Body: 0x285, 0x28d, 0x291, 0x2b0, 0x604, 0x660, 0x667

Function 7:
Public function signature: 0x947a3168
Entry block: 0x2b2
Exit block: 0x334
Body: 0x2b2, 0x2ba, 0x2be, 0x2c7, 0x2ec, 0x2f5, 0x307, 0x31b, 0x334, 0x66b, 0x6bb, 0x6c3, 0x6d6, 0x6e4, 0x6f8, 0x701

Function 8:
Public function signature: 0xc1d5e84f
Entry block: 0x342
Exit block: 0x383
Body: 0x342, 0x34a, 0x34e, 0x383, 0x709, 0x765, 0x793, 0x794

Function 9:
Public fallback function
Entry block: 0x99
Exit block: 0x99
Body: 0x99

Function 10:
Private function
Entry block: 0x798
Exit block: 0xaa9
Body: 0x798, 0x7bf, 0x80d, 0x89c, 0xaa9

