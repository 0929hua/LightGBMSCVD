Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x81]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x81
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x81
0xa: JUMPI 0x81 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x83]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x3884f307
0x3a EQ
0x3b PUSH2 0x83
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x3884f307
0x3a: V12 = EQ 0x3884f307 V10
0x3b: V13 = 0x83
0x3e: JUMPI 0x83 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0xf8]
---
0x3f DUP1
0x40 PUSH4 0x4de5120e
0x45 EQ
0x46 PUSH2 0xf8
0x49 JUMPI
---
0x40: V14 = 0x4de5120e
0x45: V15 = EQ 0x4de5120e V10
0x46: V16 = 0xf8
0x49: JUMPI 0xf8 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x145]
---
0x4a DUP1
0x4b PUSH4 0x6016dd4a
0x50 EQ
0x51 PUSH2 0x145
0x54 JUMPI
---
0x4b: V17 = 0x6016dd4a
0x50: V18 = EQ 0x6016dd4a V10
0x51: V19 = 0x145
0x54: JUMPI 0x145 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x192]
---
0x55 DUP1
0x56 PUSH4 0x96ecb845
0x5b EQ
0x5c PUSH2 0x192
0x5f JUMPI
---
0x56: V20 = 0x96ecb845
0x5b: V21 = EQ 0x96ecb845 V10
0x5c: V22 = 0x192
0x5f: JUMPI 0x192 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x1df]
---
0x60 DUP1
0x61 PUSH4 0xad9171df
0x66 EQ
0x67 PUSH2 0x1df
0x6a JUMPI
---
0x61: V23 = 0xad9171df
0x66: V24 = EQ 0xad9171df V10
0x67: V25 = 0x1df
0x6a: JUMPI 0x1df V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x60]
Successors: [0x76, 0x24b]
---
0x6b DUP1
0x6c PUSH4 0xaffed0e0
0x71 EQ
0x72 PUSH2 0x24b
0x75 JUMPI
---
0x6c: V26 = 0xaffed0e0
0x71: V27 = EQ 0xaffed0e0 V10
0x72: V28 = 0x24b
0x75: JUMPI 0x24b V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x76
[0x76:0x80]
---
Predecessors: [0x6b]
Successors: [0x81, 0x274]
---
0x76 DUP1
0x77 PUSH4 0xf8b2cb4f
0x7c EQ
0x7d PUSH2 0x274
0x80 JUMPI
---
0x77: V29 = 0xf8b2cb4f
0x7c: V30 = EQ 0xf8b2cb4f V10
0x7d: V31 = 0x274
0x80: JUMPI 0x274 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x81
[0x81:0x82]
---
Predecessors: [0x0, 0x76]
Successors: []
---
0x81 JUMPDEST
0x82 STOP
---
0x81: JUMPDEST 
0x82: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x83
[0x83:0x89]
---
Predecessors: [0xb]
Successors: [0x8a, 0x8e]
---
0x83 JUMPDEST
0x84 CALLVALUE
0x85 ISZERO
0x86 PUSH2 0x8e
0x89 JUMPI
---
0x83: JUMPDEST 
0x84: V32 = CALLVALUE
0x85: V33 = ISZERO V32
0x86: V34 = 0x8e
0x89: JUMPI 0x8e V33
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x8a
[0x8a:0x8d]
---
Predecessors: [0x83]
Successors: []
---
0x8a PUSH1 0x0
0x8c DUP1
0x8d REVERT
---
0x8a: V35 = 0x0
0x8d: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x8e
[0x8e:0xf5]
---
Predecessors: [0x83]
Successors: [0x2c1]
---
0x8e JUMPDEST
0x8f PUSH2 0xf6
0x92 PUSH1 0x4
0x94 DUP1
0x95 DUP1
0x96 CALLDATALOAD
0x97 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xac AND
0xad SWAP1
0xae PUSH1 0x20
0xb0 ADD
0xb1 SWAP1
0xb2 SWAP2
0xb3 SWAP1
0xb4 DUP1
0xb5 CALLDATALOAD
0xb6 SWAP1
0xb7 PUSH1 0x20
0xb9 ADD
0xba SWAP1
0xbb SWAP2
0xbc SWAP1
0xbd DUP1
0xbe CALLDATALOAD
0xbf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd4 AND
0xd5 SWAP1
0xd6 PUSH1 0x20
0xd8 ADD
0xd9 SWAP1
0xda SWAP2
0xdb SWAP1
0xdc DUP1
0xdd CALLDATALOAD
0xde SWAP1
0xdf PUSH1 0x20
0xe1 ADD
0xe2 SWAP1
0xe3 DUP3
0xe4 ADD
0xe5 DUP1
0xe6 CALLDATALOAD
0xe7 SWAP1
0xe8 PUSH1 0x20
0xea ADD
0xeb SWAP2
0xec SWAP1
0xed SWAP2
0xee SWAP3
0xef SWAP1
0xf0 POP
0xf1 POP
0xf2 PUSH2 0x2c1
0xf5 JUMP
---
0x8e: JUMPDEST 
0x8f: V36 = 0xf6
0x92: V37 = 0x4
0x96: V38 = CALLDATALOAD 0x4
0x97: V39 = 0xffffffffffffffffffffffffffffffffffffffff
0xac: V40 = AND 0xffffffffffffffffffffffffffffffffffffffff V38
0xae: V41 = 0x20
0xb0: V42 = ADD 0x20 0x4
0xb5: V43 = CALLDATALOAD 0x24
0xb7: V44 = 0x20
0xb9: V45 = ADD 0x20 0x24
0xbe: V46 = CALLDATALOAD 0x44
0xbf: V47 = 0xffffffffffffffffffffffffffffffffffffffff
0xd4: V48 = AND 0xffffffffffffffffffffffffffffffffffffffff V46
0xd6: V49 = 0x20
0xd8: V50 = ADD 0x20 0x44
0xdd: V51 = CALLDATALOAD 0x64
0xdf: V52 = 0x20
0xe1: V53 = ADD 0x20 0x64
0xe4: V54 = ADD 0x4 V51
0xe6: V55 = CALLDATALOAD V54
0xe8: V56 = 0x20
0xea: V57 = ADD 0x20 V54
0xf2: V58 = 0x2c1
0xf5: JUMP 0x2c1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xf6, V40, V43, V48, V57, V55]
Exit stack: [V10, 0xf6, V40, V43, V48, V57, V55]

================================

Block 0xf6
[0xf6:0xf7]
---
Predecessors: [0x550, 0x6f0]
Successors: []
---
0xf6 JUMPDEST
0xf7 STOP
---
0xf6: JUMPDEST 
0xf7: STOP 
---
Entry stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, 0x479, V215, V257, V40, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, 0x479, V215, V257, V40, 0x0, S1, S0]

================================

Block 0xf8
[0xf8:0xfe]
---
Predecessors: [0x3f]
Successors: [0xff, 0x103]
---
0xf8 JUMPDEST
0xf9 CALLVALUE
0xfa ISZERO
0xfb PUSH2 0x103
0xfe JUMPI
---
0xf8: JUMPDEST 
0xf9: V59 = CALLVALUE
0xfa: V60 = ISZERO V59
0xfb: V61 = 0x103
0xfe: JUMPI 0x103 V60
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xff
[0xff:0x102]
---
Predecessors: [0xf8]
Successors: []
---
0xff PUSH1 0x0
0x101 DUP1
0x102 REVERT
---
0xff: V62 = 0x0
0x102: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x103
[0x103:0x12e]
---
Predecessors: [0xf8]
Successors: [0x5f0]
---
0x103 JUMPDEST
0x104 PUSH2 0x12f
0x107 PUSH1 0x4
0x109 DUP1
0x10a DUP1
0x10b CALLDATALOAD
0x10c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x121 AND
0x122 SWAP1
0x123 PUSH1 0x20
0x125 ADD
0x126 SWAP1
0x127 SWAP2
0x128 SWAP1
0x129 POP
0x12a POP
0x12b PUSH2 0x5f0
0x12e JUMP
---
0x103: JUMPDEST 
0x104: V63 = 0x12f
0x107: V64 = 0x4
0x10b: V65 = CALLDATALOAD 0x4
0x10c: V66 = 0xffffffffffffffffffffffffffffffffffffffff
0x121: V67 = AND 0xffffffffffffffffffffffffffffffffffffffff V65
0x123: V68 = 0x20
0x125: V69 = ADD 0x20 0x4
0x12b: V70 = 0x5f0
0x12e: JUMP 0x5f0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x12f, V67]
Exit stack: [V10, 0x12f, V67]

================================

Block 0x12f
[0x12f:0x144]
---
Predecessors: [0x5f0]
Successors: []
---
0x12f JUMPDEST
0x130 PUSH1 0x40
0x132 MLOAD
0x133 DUP1
0x134 DUP3
0x135 DUP2
0x136 MSTORE
0x137 PUSH1 0x20
0x139 ADD
0x13a SWAP2
0x13b POP
0x13c POP
0x13d PUSH1 0x40
0x13f MLOAD
0x140 DUP1
0x141 SWAP2
0x142 SUB
0x143 SWAP1
0x144 RETURN
---
0x12f: JUMPDEST 
0x130: V71 = 0x40
0x132: V72 = M[0x40]
0x136: M[V72] = V337
0x137: V73 = 0x20
0x139: V74 = ADD 0x20 V72
0x13d: V75 = 0x40
0x13f: V76 = M[0x40]
0x142: V77 = SUB V74 V76
0x144: RETURN V76 V77
---
Entry stack: [V10, 0x12f, V337]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x12f]

================================

Block 0x145
[0x145:0x14b]
---
Predecessors: [0x4a]
Successors: [0x14c, 0x150]
---
0x145 JUMPDEST
0x146 CALLVALUE
0x147 ISZERO
0x148 PUSH2 0x150
0x14b JUMPI
---
0x145: JUMPDEST 
0x146: V78 = CALLVALUE
0x147: V79 = ISZERO V78
0x148: V80 = 0x150
0x14b: JUMPI 0x150 V79
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x14c
[0x14c:0x14f]
---
Predecessors: [0x145]
Successors: []
---
0x14c PUSH1 0x0
0x14e DUP1
0x14f REVERT
---
0x14c: V81 = 0x0
0x14f: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x150
[0x150:0x17b]
---
Predecessors: [0x145]
Successors: [0x608]
---
0x150 JUMPDEST
0x151 PUSH2 0x17c
0x154 PUSH1 0x4
0x156 DUP1
0x157 DUP1
0x158 CALLDATALOAD
0x159 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16e AND
0x16f SWAP1
0x170 PUSH1 0x20
0x172 ADD
0x173 SWAP1
0x174 SWAP2
0x175 SWAP1
0x176 POP
0x177 POP
0x178 PUSH2 0x608
0x17b JUMP
---
0x150: JUMPDEST 
0x151: V82 = 0x17c
0x154: V83 = 0x4
0x158: V84 = CALLDATALOAD 0x4
0x159: V85 = 0xffffffffffffffffffffffffffffffffffffffff
0x16e: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff V84
0x170: V87 = 0x20
0x172: V88 = ADD 0x20 0x4
0x178: V89 = 0x608
0x17b: JUMP 0x608
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x17c, V86]
Exit stack: [V10, 0x17c, V86]

================================

Block 0x17c
[0x17c:0x191]
---
Predecessors: [0x608]
Successors: []
---
0x17c JUMPDEST
0x17d PUSH1 0x40
0x17f MLOAD
0x180 DUP1
0x181 DUP3
0x182 DUP2
0x183 MSTORE
0x184 PUSH1 0x20
0x186 ADD
0x187 SWAP2
0x188 POP
0x189 POP
0x18a PUSH1 0x40
0x18c MLOAD
0x18d DUP1
0x18e SWAP2
0x18f SUB
0x190 SWAP1
0x191 RETURN
---
0x17c: JUMPDEST 
0x17d: V90 = 0x40
0x17f: V91 = M[0x40]
0x183: M[V91] = V345
0x184: V92 = 0x20
0x186: V93 = ADD 0x20 V91
0x18a: V94 = 0x40
0x18c: V95 = M[0x40]
0x18f: V96 = SUB V93 V95
0x191: RETURN V95 V96
---
Entry stack: [V10, 0x17c, V345]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x17c]

================================

Block 0x192
[0x192:0x198]
---
Predecessors: [0x55]
Successors: [0x199, 0x19d]
---
0x192 JUMPDEST
0x193 CALLVALUE
0x194 ISZERO
0x195 PUSH2 0x19d
0x198 JUMPI
---
0x192: JUMPDEST 
0x193: V97 = CALLVALUE
0x194: V98 = ISZERO V97
0x195: V99 = 0x19d
0x198: JUMPI 0x19d V98
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x199
[0x199:0x19c]
---
Predecessors: [0x192]
Successors: []
---
0x199 PUSH1 0x0
0x19b DUP1
0x19c REVERT
---
0x199: V100 = 0x0
0x19c: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x19d
[0x19d:0x1c8]
---
Predecessors: [0x192]
Successors: [0x620]
---
0x19d JUMPDEST
0x19e PUSH2 0x1c9
0x1a1 PUSH1 0x4
0x1a3 DUP1
0x1a4 DUP1
0x1a5 CALLDATALOAD
0x1a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1bb AND
0x1bc SWAP1
0x1bd PUSH1 0x20
0x1bf ADD
0x1c0 SWAP1
0x1c1 SWAP2
0x1c2 SWAP1
0x1c3 POP
0x1c4 POP
0x1c5 PUSH2 0x620
0x1c8 JUMP
---
0x19d: JUMPDEST 
0x19e: V101 = 0x1c9
0x1a1: V102 = 0x4
0x1a5: V103 = CALLDATALOAD 0x4
0x1a6: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x1bb: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x1bd: V106 = 0x20
0x1bf: V107 = ADD 0x20 0x4
0x1c5: V108 = 0x620
0x1c8: JUMP 0x620
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1c9, V105]
Exit stack: [V10, 0x1c9, V105]

================================

Block 0x1c9
[0x1c9:0x1de]
---
Predecessors: [0x620]
Successors: []
---
0x1c9 JUMPDEST
0x1ca PUSH1 0x40
0x1cc MLOAD
0x1cd DUP1
0x1ce DUP3
0x1cf DUP2
0x1d0 MSTORE
0x1d1 PUSH1 0x20
0x1d3 ADD
0x1d4 SWAP2
0x1d5 POP
0x1d6 POP
0x1d7 PUSH1 0x40
0x1d9 MLOAD
0x1da DUP1
0x1db SWAP2
0x1dc SUB
0x1dd SWAP1
0x1de RETURN
---
0x1c9: JUMPDEST 
0x1ca: V109 = 0x40
0x1cc: V110 = M[0x40]
0x1d0: M[V110] = V353
0x1d1: V111 = 0x20
0x1d3: V112 = ADD 0x20 V110
0x1d7: V113 = 0x40
0x1d9: V114 = M[0x40]
0x1dc: V115 = SUB V112 V114
0x1de: RETURN V114 V115
---
Entry stack: [V10, 0x1c9, V353]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1c9]

================================

Block 0x1df
[0x1df:0x1e5]
---
Predecessors: [0x60]
Successors: [0x1e6, 0x1ea]
---
0x1df JUMPDEST
0x1e0 CALLVALUE
0x1e1 ISZERO
0x1e2 PUSH2 0x1ea
0x1e5 JUMPI
---
0x1df: JUMPDEST 
0x1e0: V116 = CALLVALUE
0x1e1: V117 = ISZERO V116
0x1e2: V118 = 0x1ea
0x1e5: JUMPI 0x1ea V117
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1e6
[0x1e6:0x1e9]
---
Predecessors: [0x1df]
Successors: []
---
0x1e6 PUSH1 0x0
0x1e8 DUP1
0x1e9 REVERT
---
0x1e6: V119 = 0x0
0x1e9: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ea
[0x1ea:0x234]
---
Predecessors: [0x1df]
Successors: [0x638]
---
0x1ea JUMPDEST
0x1eb PUSH2 0x235
0x1ee PUSH1 0x4
0x1f0 DUP1
0x1f1 DUP1
0x1f2 CALLDATALOAD
0x1f3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x208 AND
0x209 SWAP1
0x20a PUSH1 0x20
0x20c ADD
0x20d SWAP1
0x20e SWAP2
0x20f SWAP1
0x210 DUP1
0x211 CALLDATALOAD
0x212 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x227 AND
0x228 SWAP1
0x229 PUSH1 0x20
0x22b ADD
0x22c SWAP1
0x22d SWAP2
0x22e SWAP1
0x22f POP
0x230 POP
0x231 PUSH2 0x638
0x234 JUMP
---
0x1ea: JUMPDEST 
0x1eb: V120 = 0x235
0x1ee: V121 = 0x4
0x1f2: V122 = CALLDATALOAD 0x4
0x1f3: V123 = 0xffffffffffffffffffffffffffffffffffffffff
0x208: V124 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x20a: V125 = 0x20
0x20c: V126 = ADD 0x20 0x4
0x211: V127 = CALLDATALOAD 0x24
0x212: V128 = 0xffffffffffffffffffffffffffffffffffffffff
0x227: V129 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x229: V130 = 0x20
0x22b: V131 = ADD 0x20 0x24
0x231: V132 = 0x638
0x234: JUMP 0x638
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x235, V124, V129]
Exit stack: [V10, 0x235, V124, V129]

================================

Block 0x235
[0x235:0x24a]
---
Predecessors: [0x550, 0x6f0]
Successors: []
---
0x235 JUMPDEST
0x236 PUSH1 0x40
0x238 MLOAD
0x239 DUP1
0x23a DUP3
0x23b DUP2
0x23c MSTORE
0x23d PUSH1 0x20
0x23f ADD
0x240 SWAP2
0x241 POP
0x242 POP
0x243 PUSH1 0x40
0x245 MLOAD
0x246 DUP1
0x247 SWAP2
0x248 SUB
0x249 SWAP1
0x24a RETURN
---
0x235: JUMPDEST 
0x236: V133 = 0x40
0x238: V134 = M[0x40]
0x23c: M[V134] = S0
0x23d: V135 = 0x20
0x23f: V136 = ADD 0x20 V134
0x243: V137 = 0x40
0x245: V138 = M[0x40]
0x248: V139 = SUB V136 V138
0x24a: RETURN V138 V139
---
Entry stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, 0x479, V215, V257, V40, 0x0, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, 0x479, V215, V257, V40, 0x0, S1]

================================

Block 0x24b
[0x24b:0x251]
---
Predecessors: [0x6b]
Successors: [0x252, 0x256]
---
0x24b JUMPDEST
0x24c CALLVALUE
0x24d ISZERO
0x24e PUSH2 0x256
0x251 JUMPI
---
0x24b: JUMPDEST 
0x24c: V140 = CALLVALUE
0x24d: V141 = ISZERO V140
0x24e: V142 = 0x256
0x251: JUMPI 0x256 V141
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x252
[0x252:0x255]
---
Predecessors: [0x24b]
Successors: []
---
0x252 PUSH1 0x0
0x254 DUP1
0x255 REVERT
---
0x252: V143 = 0x0
0x255: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x256
[0x256:0x25d]
---
Predecessors: [0x24b]
Successors: [0x6fa]
---
0x256 JUMPDEST
0x257 PUSH2 0x25e
0x25a PUSH2 0x6fa
0x25d JUMP
---
0x256: JUMPDEST 
0x257: V144 = 0x25e
0x25a: V145 = 0x6fa
0x25d: JUMP 0x6fa
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x25e]
Exit stack: [V10, 0x25e]

================================

Block 0x25e
[0x25e:0x273]
---
Predecessors: [0x6fa]
Successors: []
---
0x25e JUMPDEST
0x25f PUSH1 0x40
0x261 MLOAD
0x262 DUP1
0x263 DUP3
0x264 DUP2
0x265 MSTORE
0x266 PUSH1 0x20
0x268 ADD
0x269 SWAP2
0x26a POP
0x26b POP
0x26c PUSH1 0x40
0x26e MLOAD
0x26f DUP1
0x270 SWAP2
0x271 SUB
0x272 SWAP1
0x273 RETURN
---
0x25e: JUMPDEST 
0x25f: V146 = 0x40
0x261: V147 = M[0x40]
0x265: M[V147] = V403
0x266: V148 = 0x20
0x268: V149 = ADD 0x20 V147
0x26c: V150 = 0x40
0x26e: V151 = M[0x40]
0x271: V152 = SUB V149 V151
0x273: RETURN V151 V152
---
Entry stack: [V10, 0x25e, V403]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x25e]

================================

Block 0x274
[0x274:0x27a]
---
Predecessors: [0x76]
Successors: [0x27b, 0x27f]
---
0x274 JUMPDEST
0x275 CALLVALUE
0x276 ISZERO
0x277 PUSH2 0x27f
0x27a JUMPI
---
0x274: JUMPDEST 
0x275: V153 = CALLVALUE
0x276: V154 = ISZERO V153
0x277: V155 = 0x27f
0x27a: JUMPI 0x27f V154
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x27b
[0x27b:0x27e]
---
Predecessors: [0x274]
Successors: []
---
0x27b PUSH1 0x0
0x27d DUP1
0x27e REVERT
---
0x27b: V156 = 0x0
0x27e: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x27f
[0x27f:0x2aa]
---
Predecessors: [0x274]
Successors: [0x700]
---
0x27f JUMPDEST
0x280 PUSH2 0x2ab
0x283 PUSH1 0x4
0x285 DUP1
0x286 DUP1
0x287 CALLDATALOAD
0x288 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x29d AND
0x29e SWAP1
0x29f PUSH1 0x20
0x2a1 ADD
0x2a2 SWAP1
0x2a3 SWAP2
0x2a4 SWAP1
0x2a5 POP
0x2a6 POP
0x2a7 PUSH2 0x700
0x2aa JUMP
---
0x27f: JUMPDEST 
0x280: V157 = 0x2ab
0x283: V158 = 0x4
0x287: V159 = CALLDATALOAD 0x4
0x288: V160 = 0xffffffffffffffffffffffffffffffffffffffff
0x29d: V161 = AND 0xffffffffffffffffffffffffffffffffffffffff V159
0x29f: V162 = 0x20
0x2a1: V163 = ADD 0x20 0x4
0x2a7: V164 = 0x700
0x2aa: JUMP 0x700
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2ab, V161]
Exit stack: [V10, 0x2ab, V161]

================================

Block 0x2ab
[0x2ab:0x2c0]
---
Predecessors: [0x801]
Successors: []
---
0x2ab JUMPDEST
0x2ac PUSH1 0x40
0x2ae MLOAD
0x2af DUP1
0x2b0 DUP3
0x2b1 DUP2
0x2b2 MSTORE
0x2b3 PUSH1 0x20
0x2b5 ADD
0x2b6 SWAP2
0x2b7 POP
0x2b8 POP
0x2b9 PUSH1 0x40
0x2bb MLOAD
0x2bc DUP1
0x2bd SWAP2
0x2be SUB
0x2bf SWAP1
0x2c0 RETURN
---
0x2ab: JUMPDEST 
0x2ac: V165 = 0x40
0x2ae: V166 = M[0x40]
0x2b2: M[V166] = S0
0x2b3: V167 = 0x20
0x2b5: V168 = ADD 0x20 V166
0x2b9: V169 = 0x40
0x2bb: V170 = M[0x40]
0x2be: V171 = SUB V168 V170
0x2c0: RETURN V170 V171
---
Entry stack: [V10, {0xf6, 0x235}, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, {0xf6, 0x235}, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x2c1
[0x2c1:0x2cc]
---
Predecessors: [0x8e]
Successors: [0x2cd, 0x2fe]
---
0x2c1 JUMPDEST
0x2c2 PUSH1 0x0
0x2c4 DUP1
0x2c5 DUP6
0x2c6 GT
0x2c7 DUP1
0x2c8 ISZERO
0x2c9 PUSH2 0x2fe
0x2cc JUMPI
---
0x2c1: JUMPDEST 
0x2c2: V172 = 0x0
0x2c6: V173 = GT V43 0x0
0x2c8: V174 = ISZERO V173
0x2c9: V175 = 0x2fe
0x2cc: JUMPI 0x2fe V174
---
Entry stack: [V10, 0xf6, V40, V43, V48, V57, V55]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x0, V173]
Exit stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, V173]

================================

Block 0x2cd
[0x2cd:0x2fd]
---
Predecessors: [0x2c1]
Successors: [0x2fe]
---
0x2cd POP
0x2ce ADDRESS
0x2cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e4 AND
0x2e5 DUP5
0x2e6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2fb AND
0x2fc EQ
0x2fd ISZERO
---
0x2ce: V176 = ADDRESS
0x2cf: V177 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e4: V178 = AND 0xffffffffffffffffffffffffffffffffffffffff V176
0x2e6: V179 = 0xffffffffffffffffffffffffffffffffffffffff
0x2fb: V180 = AND 0xffffffffffffffffffffffffffffffffffffffff V48
0x2fc: V181 = EQ V180 V178
0x2fd: V182 = ISZERO V181
---
Entry stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, V173]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V182]
Exit stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, V182]

================================

Block 0x2fe
[0x2fe:0x304]
---
Predecessors: [0x2c1, 0x2cd]
Successors: [0x305, 0x309]
---
0x2fe JUMPDEST
0x2ff ISZERO
0x300 ISZERO
0x301 PUSH2 0x309
0x304 JUMPI
---
0x2fe: JUMPDEST 
0x2ff: V183 = ISZERO S0
0x300: V184 = ISZERO V183
0x301: V185 = 0x309
0x304: JUMPI 0x309 V184
---
Entry stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0]

================================

Block 0x305
[0x305:0x308]
---
Predecessors: [0x2fe]
Successors: []
---
0x305 PUSH1 0x0
0x307 DUP1
0x308 REVERT
---
0x305: V186 = 0x0
0x308: REVERT 0x0 0x0
---
Entry stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0]

================================

Block 0x309
[0x309:0x352]
---
Predecessors: [0x2fe]
Successors: [0x353, 0x354]
---
0x309 JUMPDEST
0x30a PUSH1 0x1
0x30c PUSH1 0x0
0x30e DUP8
0x30f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x324 AND
0x325 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x33a AND
0x33b DUP2
0x33c MSTORE
0x33d PUSH1 0x20
0x33f ADD
0x340 SWAP1
0x341 DUP2
0x342 MSTORE
0x343 PUSH1 0x20
0x345 ADD
0x346 PUSH1 0x0
0x348 SHA3
0x349 SLOAD
0x34a TIMESTAMP
0x34b LT
0x34c ISZERO
0x34d ISZERO
0x34e ISZERO
0x34f PUSH2 0x354
0x352 JUMPI
---
0x309: JUMPDEST 
0x30a: V187 = 0x1
0x30c: V188 = 0x0
0x30f: V189 = 0xffffffffffffffffffffffffffffffffffffffff
0x324: V190 = AND 0xffffffffffffffffffffffffffffffffffffffff V40
0x325: V191 = 0xffffffffffffffffffffffffffffffffffffffff
0x33a: V192 = AND 0xffffffffffffffffffffffffffffffffffffffff V190
0x33c: M[0x0] = V192
0x33d: V193 = 0x20
0x33f: V194 = ADD 0x20 0x0
0x342: M[0x20] = 0x1
0x343: V195 = 0x20
0x345: V196 = ADD 0x20 0x20
0x346: V197 = 0x0
0x348: V198 = SHA3 0x0 0x40
0x349: V199 = S[V198]
0x34a: V200 = TIMESTAMP
0x34b: V201 = LT V200 V199
0x34c: V202 = ISZERO V201
0x34d: V203 = ISZERO V202
0x34e: V204 = ISZERO V203
0x34f: V205 = 0x354
0x352: JUMPI 0x354 V204
---
Entry stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0]

================================

Block 0x353
[0x353:0x353]
---
Predecessors: [0x309]
Successors: []
---
0x353 INVALID
---
0x353: INVALID 
---
Entry stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0]

================================

Block 0x354
[0x354:0x478]
---
Predecessors: [0x309]
Successors: [0x806]
---
0x354 JUMPDEST
0x355 PUSH2 0x479
0x358 DUP4
0x359 DUP4
0x35a DUP1
0x35b DUP1
0x35c PUSH1 0x1f
0x35e ADD
0x35f PUSH1 0x20
0x361 DUP1
0x362 SWAP2
0x363 DIV
0x364 MUL
0x365 PUSH1 0x20
0x367 ADD
0x368 PUSH1 0x40
0x36a MLOAD
0x36b SWAP1
0x36c DUP2
0x36d ADD
0x36e PUSH1 0x40
0x370 MSTORE
0x371 DUP1
0x372 SWAP4
0x373 SWAP3
0x374 SWAP2
0x375 SWAP1
0x376 DUP2
0x377 DUP2
0x378 MSTORE
0x379 PUSH1 0x20
0x37b ADD
0x37c DUP4
0x37d DUP4
0x37e DUP1
0x37f DUP3
0x380 DUP5
0x381 CALLDATACOPY
0x382 DUP3
0x383 ADD
0x384 SWAP2
0x385 POP
0x386 POP
0x387 POP
0x388 POP
0x389 POP
0x38a POP
0x38b ADDRESS
0x38c DUP9
0x38d PUSH1 0x3
0x38f SLOAD
0x390 DUP10
0x391 DUP10
0x392 PUSH1 0x40
0x394 MLOAD
0x395 DUP1
0x396 DUP7
0x397 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ac AND
0x3ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c2 AND
0x3c3 PUSH13 0x1000000000000000000000000
0x3d1 MUL
0x3d2 DUP2
0x3d3 MSTORE
0x3d4 PUSH1 0x14
0x3d6 ADD
0x3d7 DUP6
0x3d8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ed AND
0x3ee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x403 AND
0x404 PUSH13 0x1000000000000000000000000
0x412 MUL
0x413 DUP2
0x414 MSTORE
0x415 PUSH1 0x14
0x417 ADD
0x418 DUP5
0x419 DUP2
0x41a MSTORE
0x41b PUSH1 0x20
0x41d ADD
0x41e DUP4
0x41f DUP2
0x420 MSTORE
0x421 PUSH1 0x20
0x423 ADD
0x424 DUP3
0x425 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x43a AND
0x43b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x450 AND
0x451 PUSH13 0x1000000000000000000000000
0x45f MUL
0x460 DUP2
0x461 MSTORE
0x462 PUSH1 0x14
0x464 ADD
0x465 SWAP6
0x466 POP
0x467 POP
0x468 POP
0x469 POP
0x46a POP
0x46b POP
0x46c PUSH1 0x40
0x46e MLOAD
0x46f DUP1
0x470 SWAP2
0x471 SUB
0x472 SWAP1
0x473 SHA3
0x474 DUP9
0x475 PUSH2 0x806
0x478 JUMP
---
0x354: JUMPDEST 
0x355: V206 = 0x479
0x35c: V207 = 0x1f
0x35e: V208 = ADD 0x1f V55
0x35f: V209 = 0x20
0x363: V210 = DIV V208 0x20
0x364: V211 = MUL V210 0x20
0x365: V212 = 0x20
0x367: V213 = ADD 0x20 V211
0x368: V214 = 0x40
0x36a: V215 = M[0x40]
0x36d: V216 = ADD V215 V213
0x36e: V217 = 0x40
0x370: M[0x40] = V216
0x378: M[V215] = V55
0x379: V218 = 0x20
0x37b: V219 = ADD 0x20 V215
0x381: CALLDATACOPY V219 V57 V55
0x383: V220 = ADD V219 V55
0x38b: V221 = ADDRESS
0x38d: V222 = 0x3
0x38f: V223 = S[0x3]
0x392: V224 = 0x40
0x394: V225 = M[0x40]
0x397: V226 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ac: V227 = AND 0xffffffffffffffffffffffffffffffffffffffff V221
0x3ad: V228 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c2: V229 = AND 0xffffffffffffffffffffffffffffffffffffffff V227
0x3c3: V230 = 0x1000000000000000000000000
0x3d1: V231 = MUL 0x1000000000000000000000000 V229
0x3d3: M[V225] = V231
0x3d4: V232 = 0x14
0x3d6: V233 = ADD 0x14 V225
0x3d8: V234 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ed: V235 = AND 0xffffffffffffffffffffffffffffffffffffffff V40
0x3ee: V236 = 0xffffffffffffffffffffffffffffffffffffffff
0x403: V237 = AND 0xffffffffffffffffffffffffffffffffffffffff V235
0x404: V238 = 0x1000000000000000000000000
0x412: V239 = MUL 0x1000000000000000000000000 V237
0x414: M[V233] = V239
0x415: V240 = 0x14
0x417: V241 = ADD 0x14 V233
0x41a: M[V241] = V223
0x41b: V242 = 0x20
0x41d: V243 = ADD 0x20 V241
0x420: M[V243] = V43
0x421: V244 = 0x20
0x423: V245 = ADD 0x20 V243
0x425: V246 = 0xffffffffffffffffffffffffffffffffffffffff
0x43a: V247 = AND 0xffffffffffffffffffffffffffffffffffffffff V48
0x43b: V248 = 0xffffffffffffffffffffffffffffffffffffffff
0x450: V249 = AND 0xffffffffffffffffffffffffffffffffffffffff V247
0x451: V250 = 0x1000000000000000000000000
0x45f: V251 = MUL 0x1000000000000000000000000 V249
0x461: M[V245] = V251
0x462: V252 = 0x14
0x464: V253 = ADD 0x14 V245
0x46c: V254 = 0x40
0x46e: V255 = M[0x40]
0x471: V256 = SUB V253 V255
0x473: V257 = SHA3 V255 V256
0x475: V258 = 0x806
0x478: JUMP 0x806
---
Entry stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, 0x479, V215, V257, S5]
Exit stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, 0x479, V215, V257, V40]

================================

Block 0x479
[0x479:0x485]
---
Predecessors: [0x81f]
Successors: [0x486, 0x48a]
---
0x479 JUMPDEST
0x47a SWAP1
0x47b POP
0x47c DUP5
0x47d DUP2
0x47e LT
0x47f ISZERO
0x480 ISZERO
0x481 ISZERO
0x482 PUSH2 0x48a
0x485 JUMPI
---
0x479: JUMPDEST 
0x47e: V259 = LT S0 V43
0x47f: V260 = ISZERO V259
0x480: V261 = ISZERO V260
0x481: V262 = ISZERO V261
0x482: V263 = 0x48a
0x485: JUMPI 0x48a V262
---
Entry stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S0]
Exit stack: [V10, 0xf6, V40, V43, V48, V57, V55, S0]

================================

Block 0x486
[0x486:0x489]
---
Predecessors: [0x479]
Successors: []
---
0x486 PUSH1 0x0
0x488 DUP1
0x489 REVERT
---
0x486: V264 = 0x0
0x489: REVERT 0x0 0x0
---
Entry stack: [V10, 0xf6, V40, V43, V48, V57, V55, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf6, V40, V43, V48, V57, V55, S0]

================================

Block 0x48a
[0x48a:0x493]
---
Predecessors: [0x479]
Successors: [0x700]
---
0x48a JUMPDEST
0x48b DUP5
0x48c PUSH2 0x494
0x48f DUP8
0x490 PUSH2 0x700
0x493 JUMP
---
0x48a: JUMPDEST 
0x48c: V265 = 0x494
0x490: V266 = 0x700
0x493: JUMP 0x700
---
Entry stack: [V10, 0xf6, V40, V43, V48, V57, V55, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, S4, 0x494, S5]
Exit stack: [V10, 0xf6, V40, V43, V48, V57, V55, S0, V43, 0x494, V40]

================================

Block 0x494
[0x494:0x49c]
---
Predecessors: [0x801]
Successors: [0x49d, 0x4a1]
---
0x494 JUMPDEST
0x495 LT
0x496 ISZERO
0x497 ISZERO
0x498 ISZERO
0x499 PUSH2 0x4a1
0x49c JUMPI
---
0x494: JUMPDEST 
0x495: V267 = LT S0 S1
0x496: V268 = ISZERO V267
0x497: V269 = ISZERO V268
0x498: V270 = ISZERO V269
0x499: V271 = 0x4a1
0x49c: JUMPI 0x4a1 V270
---
Entry stack: [V10, {0xf6, 0x235}, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10, {0xf6, 0x235}, S7, S6, S5, S4, S3, S2]

================================

Block 0x49d
[0x49d:0x4a0]
---
Predecessors: [0x494]
Successors: []
---
0x49d PUSH1 0x0
0x49f DUP1
0x4a0 REVERT
---
0x49d: V272 = 0x0
0x4a0: REVERT 0x0 0x0
---
Entry stack: [V10, {0xf6, 0x235}, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, {0xf6, 0x235}, S5, S4, S3, S2, S1, S0]

================================

Block 0x4a1
[0x4a1:0x4aa]
---
Predecessors: [0x494]
Successors: [0x829]
---
0x4a1 JUMPDEST
0x4a2 DUP5
0x4a3 PUSH2 0x4ab
0x4a6 DUP8
0x4a7 PUSH2 0x829
0x4aa JUMP
---
0x4a1: JUMPDEST 
0x4a3: V273 = 0x4ab
0x4a7: V274 = 0x829
0x4aa: JUMP 0x829
---
Entry stack: [V10, {0xf6, 0x235}, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, S4, 0x4ab, S5]
Exit stack: [V10, {0xf6, 0x235}, S5, S4, S3, S2, S1, S0, S4, 0x4ab, S5]

================================

Block 0x4ab
[0x4ab:0x54f]
---
Predecessors: [0x8c0]
Successors: [0x8c9]
---
0x4ab JUMPDEST
0x4ac ADD
0x4ad PUSH1 0x2
0x4af PUSH1 0x0
0x4b1 DUP9
0x4b2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c7 AND
0x4c8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4dd AND
0x4de DUP2
0x4df MSTORE
0x4e0 PUSH1 0x20
0x4e2 ADD
0x4e3 SWAP1
0x4e4 DUP2
0x4e5 MSTORE
0x4e6 PUSH1 0x20
0x4e8 ADD
0x4e9 PUSH1 0x0
0x4eb SHA3
0x4ec DUP2
0x4ed SWAP1
0x4ee SSTORE
0x4ef POP
0x4f0 TIMESTAMP
0x4f1 PUSH1 0x1
0x4f3 PUSH1 0x0
0x4f5 DUP9
0x4f6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x50b AND
0x50c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x521 AND
0x522 DUP2
0x523 MSTORE
0x524 PUSH1 0x20
0x526 ADD
0x527 SWAP1
0x528 DUP2
0x529 MSTORE
0x52a PUSH1 0x20
0x52c ADD
0x52d PUSH1 0x0
0x52f SHA3
0x530 DUP2
0x531 SWAP1
0x532 SSTORE
0x533 POP
0x534 PUSH1 0x3
0x536 PUSH1 0x0
0x538 DUP2
0x539 SLOAD
0x53a DUP1
0x53b SWAP3
0x53c SWAP2
0x53d SWAP1
0x53e PUSH1 0x1
0x540 ADD
0x541 SWAP2
0x542 SWAP1
0x543 POP
0x544 SSTORE
0x545 POP
0x546 PUSH2 0x550
0x549 DUP7
0x54a DUP6
0x54b DUP8
0x54c PUSH2 0x8c9
0x54f JUMP
---
0x4ab: JUMPDEST 
0x4ac: V275 = ADD S0 S1
0x4ad: V276 = 0x2
0x4af: V277 = 0x0
0x4b2: V278 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c7: V279 = AND 0xffffffffffffffffffffffffffffffffffffffff S7
0x4c8: V280 = 0xffffffffffffffffffffffffffffffffffffffff
0x4dd: V281 = AND 0xffffffffffffffffffffffffffffffffffffffff V279
0x4df: M[0x0] = V281
0x4e0: V282 = 0x20
0x4e2: V283 = ADD 0x20 0x0
0x4e5: M[0x20] = 0x2
0x4e6: V284 = 0x20
0x4e8: V285 = ADD 0x20 0x20
0x4e9: V286 = 0x0
0x4eb: V287 = SHA3 0x0 0x40
0x4ee: S[V287] = V275
0x4f0: V288 = TIMESTAMP
0x4f1: V289 = 0x1
0x4f3: V290 = 0x0
0x4f6: V291 = 0xffffffffffffffffffffffffffffffffffffffff
0x50b: V292 = AND 0xffffffffffffffffffffffffffffffffffffffff S7
0x50c: V293 = 0xffffffffffffffffffffffffffffffffffffffff
0x521: V294 = AND 0xffffffffffffffffffffffffffffffffffffffff V292
0x523: M[0x0] = V294
0x524: V295 = 0x20
0x526: V296 = ADD 0x20 0x0
0x529: M[0x20] = 0x1
0x52a: V297 = 0x20
0x52c: V298 = ADD 0x20 0x20
0x52d: V299 = 0x0
0x52f: V300 = SHA3 0x0 0x40
0x532: S[V300] = V288
0x534: V301 = 0x3
0x536: V302 = 0x0
0x539: V303 = S[0x3]
0x53e: V304 = 0x1
0x540: V305 = ADD 0x1 V303
0x544: S[0x3] = V305
0x546: V306 = 0x550
0x54c: V307 = 0x8c9
0x54f: JUMP 0x8c9
---
Entry stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, 0x479, V215, V257, V40, 0x0, S9, {0xf6, 0x235, 0x81f}, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, 0x550, S7, S5, S6]
Exit stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, 0x479, V215, V257, V40, 0x0, S9, {0xf6, 0x235, 0x81f}, S7, S6, S5, S4, S3, S2, 0x550, S7, S5, S6]

================================

Block 0x550
[0x550:0x5ef]
---
Predecessors: [0xa00]
Successors: [0xf6, 0x235, 0x81f]
---
0x550 JUMPDEST
0x551 DUP4
0x552 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x567 AND
0x568 CALLER
0x569 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x57e AND
0x57f DUP8
0x580 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x595 AND
0x596 PUSH32 0x85b9c729289439af808c99fcccc93cac167bd6070298a8cc00237d07cf73bbb5
0x5b7 DUP9
0x5b8 TIMESTAMP
0x5b9 PUSH1 0x40
0x5bb MLOAD
0x5bc DUP1
0x5bd DUP4
0x5be DUP2
0x5bf MSTORE
0x5c0 PUSH1 0x20
0x5c2 ADD
0x5c3 DUP3
0x5c4 PUSH8 0xffffffffffffffff
0x5cd AND
0x5ce PUSH8 0xffffffffffffffff
0x5d7 AND
0x5d8 DUP2
0x5d9 MSTORE
0x5da PUSH1 0x20
0x5dc ADD
0x5dd SWAP3
0x5de POP
0x5df POP
0x5e0 POP
0x5e1 PUSH1 0x40
0x5e3 MLOAD
0x5e4 DUP1
0x5e5 SWAP2
0x5e6 SUB
0x5e7 SWAP1
0x5e8 LOG4
0x5e9 POP
0x5ea POP
0x5eb POP
0x5ec POP
0x5ed POP
0x5ee POP
0x5ef JUMP
---
0x550: JUMPDEST 
0x552: V308 = 0xffffffffffffffffffffffffffffffffffffffff
0x567: V309 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x568: V310 = CALLER
0x569: V311 = 0xffffffffffffffffffffffffffffffffffffffff
0x57e: V312 = AND 0xffffffffffffffffffffffffffffffffffffffff V310
0x580: V313 = 0xffffffffffffffffffffffffffffffffffffffff
0x595: V314 = AND 0xffffffffffffffffffffffffffffffffffffffff V124
0x596: V315 = 0x85b9c729289439af808c99fcccc93cac167bd6070298a8cc00237d07cf73bbb5
0x5b8: V316 = TIMESTAMP
0x5b9: V317 = 0x40
0x5bb: V318 = M[0x40]
0x5bf: M[V318] = V129
0x5c0: V319 = 0x20
0x5c2: V320 = ADD 0x20 V318
0x5c4: V321 = 0xffffffffffffffff
0x5cd: V322 = AND 0xffffffffffffffff V316
0x5ce: V323 = 0xffffffffffffffff
0x5d7: V324 = AND 0xffffffffffffffff V322
0x5d9: M[V320] = V324
0x5da: V325 = 0x20
0x5dc: V326 = ADD 0x20 V320
0x5e1: V327 = 0x40
0x5e3: V328 = M[0x40]
0x5e6: V329 = SUB V326 V328
0x5e8: LOG V328 V329 0x85b9c729289439af808c99fcccc93cac167bd6070298a8cc00237d07cf73bbb5 V314 V312 V309
0x5ef: JUMP 0x235
---
Entry stack: [V10, 0x235, V124, V129, 0x0, V368, S1, S0]
Stack pops: 7
Stack additions: []
Exit stack: [V10]

================================

Block 0x5f0
[0x5f0:0x607]
---
Predecessors: [0x103]
Successors: [0x12f]
---
0x5f0 JUMPDEST
0x5f1 PUSH1 0x1
0x5f3 PUSH1 0x20
0x5f5 MSTORE
0x5f6 DUP1
0x5f7 PUSH1 0x0
0x5f9 MSTORE
0x5fa PUSH1 0x40
0x5fc PUSH1 0x0
0x5fe SHA3
0x5ff PUSH1 0x0
0x601 SWAP2
0x602 POP
0x603 SWAP1
0x604 POP
0x605 SLOAD
0x606 DUP2
0x607 JUMP
---
0x5f0: JUMPDEST 
0x5f1: V330 = 0x1
0x5f3: V331 = 0x20
0x5f5: M[0x20] = 0x1
0x5f7: V332 = 0x0
0x5f9: M[0x0] = V67
0x5fa: V333 = 0x40
0x5fc: V334 = 0x0
0x5fe: V335 = SHA3 0x0 0x40
0x5ff: V336 = 0x0
0x605: V337 = S[V335]
0x607: JUMP 0x12f
---
Entry stack: [V10, 0x12f, V67]
Stack pops: 2
Stack additions: [S1, V337]
Exit stack: [V10, 0x12f, V337]

================================

Block 0x608
[0x608:0x61f]
---
Predecessors: [0x150]
Successors: [0x17c]
---
0x608 JUMPDEST
0x609 PUSH1 0x0
0x60b PUSH1 0x20
0x60d MSTORE
0x60e DUP1
0x60f PUSH1 0x0
0x611 MSTORE
0x612 PUSH1 0x40
0x614 PUSH1 0x0
0x616 SHA3
0x617 PUSH1 0x0
0x619 SWAP2
0x61a POP
0x61b SWAP1
0x61c POP
0x61d SLOAD
0x61e DUP2
0x61f JUMP
---
0x608: JUMPDEST 
0x609: V338 = 0x0
0x60b: V339 = 0x20
0x60d: M[0x20] = 0x0
0x60f: V340 = 0x0
0x611: M[0x0] = V86
0x612: V341 = 0x40
0x614: V342 = 0x0
0x616: V343 = SHA3 0x0 0x40
0x617: V344 = 0x0
0x61d: V345 = S[V343]
0x61f: JUMP 0x17c
---
Entry stack: [V10, 0x17c, V86]
Stack pops: 2
Stack additions: [S1, V345]
Exit stack: [V10, 0x17c, V345]

================================

Block 0x620
[0x620:0x637]
---
Predecessors: [0x19d]
Successors: [0x1c9]
---
0x620 JUMPDEST
0x621 PUSH1 0x2
0x623 PUSH1 0x20
0x625 MSTORE
0x626 DUP1
0x627 PUSH1 0x0
0x629 MSTORE
0x62a PUSH1 0x40
0x62c PUSH1 0x0
0x62e SHA3
0x62f PUSH1 0x0
0x631 SWAP2
0x632 POP
0x633 SWAP1
0x634 POP
0x635 SLOAD
0x636 DUP2
0x637 JUMP
---
0x620: JUMPDEST 
0x621: V346 = 0x2
0x623: V347 = 0x20
0x625: M[0x20] = 0x2
0x627: V348 = 0x0
0x629: M[0x0] = V105
0x62a: V349 = 0x40
0x62c: V350 = 0x0
0x62e: V351 = SHA3 0x0 0x40
0x62f: V352 = 0x0
0x635: V353 = S[V351]
0x637: JUMP 0x1c9
---
Entry stack: [V10, 0x1c9, V105]
Stack pops: 2
Stack additions: [S1, V353]
Exit stack: [V10, 0x1c9, V353]

================================

Block 0x638
[0x638:0x68a]
---
Predecessors: [0x1ea, 0x813]
Successors: [0x68b, 0x693]
---
0x638 JUMPDEST
0x639 PUSH1 0x0
0x63b DUP1
0x63c PUSH1 0x0
0x63e DUP1
0x63f PUSH1 0x0
0x641 DUP1
0x642 PUSH1 0x0
0x644 DUP8
0x645 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x65a AND
0x65b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x670 AND
0x671 DUP2
0x672 MSTORE
0x673 PUSH1 0x20
0x675 ADD
0x676 SWAP1
0x677 DUP2
0x678 MSTORE
0x679 PUSH1 0x20
0x67b ADD
0x67c PUSH1 0x0
0x67e SHA3
0x67f SLOAD
0x680 SWAP4
0x681 POP
0x682 PUSH1 0x0
0x684 DUP5
0x685 EQ
0x686 ISZERO
0x687 PUSH2 0x693
0x68a JUMPI
---
0x638: JUMPDEST 
0x639: V354 = 0x0
0x63c: V355 = 0x0
0x63f: V356 = 0x0
0x642: V357 = 0x0
0x645: V358 = 0xffffffffffffffffffffffffffffffffffffffff
0x65a: V359 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x65b: V360 = 0xffffffffffffffffffffffffffffffffffffffff
0x670: V361 = AND 0xffffffffffffffffffffffffffffffffffffffff V359
0x672: M[0x0] = V361
0x673: V362 = 0x20
0x675: V363 = ADD 0x20 0x0
0x678: M[0x20] = 0x0
0x679: V364 = 0x20
0x67b: V365 = ADD 0x20 0x20
0x67c: V366 = 0x0
0x67e: V367 = SHA3 0x0 0x40
0x67f: V368 = S[V367]
0x682: V369 = 0x0
0x685: V370 = EQ V368 0x0
0x686: V371 = ISZERO V370
0x687: V372 = 0x693
0x68a: JUMPI 0x693 V371
---
Entry stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, 0x479, V215, V257, V40, 0x0, S3, {0x235, 0x81f}, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x0, V368, 0x0, 0x0, 0x0]
Exit stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, 0x479, V215, V257, V40, 0x0, S3, {0x235, 0x81f}, S1, S0, 0x0, V368, 0x0, 0x0, 0x0]

================================

Block 0x68b
[0x68b:0x692]
---
Predecessors: [0x638]
Successors: [0x6f0]
---
0x68b PUSH1 0x0
0x68d SWAP5
0x68e POP
0x68f PUSH2 0x6f0
0x692 JUMP
---
0x68b: V373 = 0x0
0x68f: V374 = 0x6f0
0x692: JUMP 0x6f0
---
Entry stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, 0x479, V215, V257, V40, 0x0, S8, {0x235, 0x81f}, S6, S5, 0x0, V368, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [0x0, S3, S2, S1, S0]
Exit stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, 0x479, V215, V257, V40, 0x0, S8, {0x235, 0x81f}, S6, S5, 0x0, V368, 0x0, 0x0, 0x0]

================================

Block 0x693
[0x693:0x69b]
---
Predecessors: [0x638]
Successors: [0x829]
---
0x693 JUMPDEST
0x694 PUSH2 0x69c
0x697 DUP8
0x698 PUSH2 0x829
0x69b JUMP
---
0x693: JUMPDEST 
0x694: V375 = 0x69c
0x698: V376 = 0x829
0x69b: JUMP 0x829
---
Entry stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, 0x479, V215, V257, V40, 0x0, S8, {0x235, 0x81f}, S6, S5, 0x0, V368, 0x0, 0x0, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, 0x69c, S6]
Exit stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, 0x479, V215, V257, V40, 0x0, S8, {0x235, 0x81f}, S6, S5, 0x0, V368, 0x0, 0x0, 0x0, 0x69c, S6]

================================

Block 0x69c
[0x69c:0x6a6]
---
Predecessors: [0x8c0]
Successors: [0x700]
---
0x69c JUMPDEST
0x69d SWAP3
0x69e POP
0x69f PUSH2 0x6a7
0x6a2 DUP8
0x6a3 PUSH2 0x700
0x6a6 JUMP
---
0x69c: JUMPDEST 
0x69f: V377 = 0x6a7
0x6a3: V378 = 0x700
0x6a6: JUMP 0x700
---
Entry stack: [V43, V48, V57, V55, 0x0, 0x479, V215, V257, V40, 0x0, S9, {0xf6, 0x235, 0x81f}, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S0, S2, S1, 0x6a7, S7]
Exit stack: [S9, 0x235, S7, S6, S5, S4, S0, S2, S1, 0x6a7, S7]

================================

Block 0x6a7
[0x6a7:0x6b9]
---
Predecessors: [0x801]
Successors: [0x6ba, 0x6bb]
---
0x6a7 JUMPDEST
0x6a8 SWAP2
0x6a9 POP
0x6aa PUSH3 0xf4240
0x6ae DUP5
0x6af DUP5
0x6b0 DUP5
0x6b1 ADD
0x6b2 MUL
0x6b3 DUP2
0x6b4 ISZERO
0x6b5 ISZERO
0x6b6 PUSH2 0x6bb
0x6b9 JUMPI
---
0x6a7: JUMPDEST 
0x6aa: V379 = 0xf4240
0x6b1: V380 = ADD S0 S3
0x6b2: V381 = MUL V380 S4
0x6b4: V382 = ISZERO 0xf4240
0x6b5: V383 = ISZERO 0x0
0x6b6: V384 = 0x6bb
0x6b9: JUMPI 0x6bb 0x1
---
Entry stack: [V10, {0xf6, 0x235}, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S0, S1, 0xf4240, V381]
Exit stack: [V10, {0xf6, 0x235}, S7, S6, S5, S4, S3, S0, S1, 0xf4240, V381]

================================

Block 0x6ba
[0x6ba:0x6ba]
---
Predecessors: [0x6a7]
Successors: []
---
0x6ba INVALID
---
0x6ba: INVALID 
---
Entry stack: [V10, {0xf6, 0x235}, S8, S7, S6, S5, S4, S3, S2, 0xf4240, V381]
Stack pops: 0
Stack additions: []
Exit stack: [V10, {0xf6, 0x235}, S8, S7, S6, S5, S4, S3, S2, 0xf4240, V381]

================================

Block 0x6bb
[0x6bb:0x6c8]
---
Predecessors: [0x6a7]
Successors: [0x6c9, 0x6ce]
---
0x6bb JUMPDEST
0x6bc DIV
0x6bd SWAP1
0x6be POP
0x6bf PUSH1 0x0
0x6c1 DUP2
0x6c2 EQ
0x6c3 DUP1
0x6c4 ISZERO
0x6c5 PUSH2 0x6ce
0x6c8 JUMPI
---
0x6bb: JUMPDEST 
0x6bc: V385 = DIV V381 0xf4240
0x6bf: V386 = 0x0
0x6c2: V387 = EQ V385 0x0
0x6c4: V388 = ISZERO V387
0x6c5: V389 = 0x6ce
0x6c8: JUMPI 0x6ce V388
---
Entry stack: [V10, {0xf6, 0x235}, S8, S7, S6, S5, S4, S3, S2, 0xf4240, V381]
Stack pops: 3
Stack additions: [V385, V387]
Exit stack: [V10, {0xf6, 0x235}, S8, S7, S6, S5, S4, S3, V385, V387]

================================

Block 0x6c9
[0x6c9:0x6cd]
---
Predecessors: [0x6bb]
Successors: [0x6ce]
---
0x6c9 POP
0x6ca PUSH1 0x0
0x6cc DUP3
0x6cd GT
---
0x6ca: V390 = 0x0
0x6cd: V391 = GT S2 0x0
---
Entry stack: [V10, {0xf6, 0x235}, S7, S6, S5, S4, S3, S2, V385, V387]
Stack pops: 3
Stack additions: [S2, S1, V391]
Exit stack: [V10, {0xf6, 0x235}, S7, S6, S5, S4, S3, S2, V385, V391]

================================

Block 0x6ce
[0x6ce:0x6d3]
---
Predecessors: [0x6bb, 0x6c9]
Successors: [0x6d4, 0x6d8]
---
0x6ce JUMPDEST
0x6cf ISZERO
0x6d0 PUSH2 0x6d8
0x6d3 JUMPI
---
0x6ce: JUMPDEST 
0x6cf: V392 = ISZERO S0
0x6d0: V393 = 0x6d8
0x6d3: JUMPI 0x6d8 V392
---
Entry stack: [V10, {0xf6, 0x235}, S7, S6, S5, S4, S3, S2, V385, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, {0xf6, 0x235}, S7, S6, S5, S4, S3, S2, V385]

================================

Block 0x6d4
[0x6d4:0x6d7]
---
Predecessors: [0x6ce]
Successors: [0x6d8]
---
0x6d4 PUSH1 0x1
0x6d6 SWAP1
0x6d7 POP
---
0x6d4: V394 = 0x1
---
Entry stack: [V10, {0xf6, 0x235}, S6, S5, S4, S3, S2, S1, V385]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V10, {0xf6, 0x235}, S6, S5, S4, S3, S2, S1, 0x1]

================================

Block 0x6d8
[0x6d8:0x6e1]
---
Predecessors: [0x6ce, 0x6d4]
Successors: [0x6e2, 0x6ea]
---
0x6d8 JUMPDEST
0x6d9 DUP1
0x6da DUP4
0x6db LT
0x6dc ISZERO
0x6dd ISZERO
0x6de PUSH2 0x6ea
0x6e1 JUMPI
---
0x6d8: JUMPDEST 
0x6db: V395 = LT S2 S0
0x6dc: V396 = ISZERO V395
0x6dd: V397 = ISZERO V396
0x6de: V398 = 0x6ea
0x6e1: JUMPI 0x6ea V397
---
Entry stack: [V10, {0xf6, 0x235}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, {0xf6, 0x235}, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x6e2
[0x6e2:0x6e9]
---
Predecessors: [0x6d8]
Successors: [0x6f0]
---
0x6e2 PUSH1 0x0
0x6e4 SWAP5
0x6e5 POP
0x6e6 PUSH2 0x6f0
0x6e9 JUMP
---
0x6e2: V399 = 0x0
0x6e6: V400 = 0x6f0
0x6e9: JUMP 0x6f0
---
Entry stack: [V10, {0xf6, 0x235}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [0x0, S3, S2, S1, S0]
Exit stack: [V10, {0xf6, 0x235}, S6, S5, 0x0, S3, S2, S1, S0]

================================

Block 0x6ea
[0x6ea:0x6ef]
---
Predecessors: [0x6d8]
Successors: [0x6f0]
---
0x6ea JUMPDEST
0x6eb DUP3
0x6ec DUP2
0x6ed SUB
0x6ee SWAP5
0x6ef POP
---
0x6ea: JUMPDEST 
0x6ed: V401 = SUB S0 S2
---
Entry stack: [V10, {0xf6, 0x235}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [V401, S3, S2, S1, S0]
Exit stack: [V10, {0xf6, 0x235}, S6, S5, V401, S3, S2, S1, S0]

================================

Block 0x6f0
[0x6f0:0x6f9]
---
Predecessors: [0x68b, 0x6e2, 0x6ea]
Successors: [0xf6, 0x235, 0x81f]
---
0x6f0 JUMPDEST
0x6f1 POP
0x6f2 POP
0x6f3 POP
0x6f4 POP
0x6f5 SWAP3
0x6f6 SWAP2
0x6f7 POP
0x6f8 POP
0x6f9 JUMP
---
0x6f0: JUMPDEST 
0x6f9: JUMP {0xf6, 0x235, 0x81f}
---
Entry stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, 0x479, V215, V257, V40, 0x0, S8, {0xf6, 0x235, 0x81f}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 8
Stack additions: [S4]
Exit stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, 0x479, V215, V257, V40, 0x0, S8, S4]

================================

Block 0x6fa
[0x6fa:0x6ff]
---
Predecessors: [0x256]
Successors: [0x25e]
---
0x6fa JUMPDEST
0x6fb PUSH1 0x3
0x6fd SLOAD
0x6fe DUP2
0x6ff JUMP
---
0x6fa: JUMPDEST 
0x6fb: V402 = 0x3
0x6fd: V403 = S[0x3]
0x6ff: JUMP 0x25e
---
Entry stack: [V10, 0x25e]
Stack pops: 1
Stack additions: [S0, V403]
Exit stack: [V10, 0x25e, V403]

================================

Block 0x700
[0x700:0x721]
---
Predecessors: [0x27f, 0x48a, 0x69c]
Successors: [0x722, 0x7e6]
---
0x700 JUMPDEST
0x701 PUSH1 0x0
0x703 DUP1
0x704 DUP3
0x705 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x71a AND
0x71b EQ
0x71c ISZERO
0x71d ISZERO
0x71e PUSH2 0x7e6
0x721 JUMPI
---
0x700: JUMPDEST 
0x701: V404 = 0x0
0x705: V405 = 0xffffffffffffffffffffffffffffffffffffffff
0x71a: V406 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x71b: V407 = EQ V406 0x0
0x71c: V408 = ISZERO V407
0x71d: V409 = ISZERO V408
0x71e: V410 = 0x7e6
0x721: JUMPI 0x7e6 V409
---
Entry stack: [V10, {0xf6, 0x235}, S8, S7, S6, S5, S4, S3, S2, {0x2ab, 0x494, 0x6a7}, S0]
Stack pops: 1
Stack additions: [S0, 0x0]
Exit stack: [V10, {0xf6, 0x235}, S8, S7, S6, S5, S4, S3, S2, {0x2ab, 0x494, 0x6a7}, S0, 0x0]

================================

Block 0x722
[0x722:0x7bf]
---
Predecessors: [0x700]
Successors: [0x7c0, 0x7c4]
---
0x722 DUP2
0x723 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x738 AND
0x739 PUSH4 0x70a08231
0x73e ADDRESS
0x73f PUSH1 0x0
0x741 PUSH1 0x40
0x743 MLOAD
0x744 PUSH1 0x20
0x746 ADD
0x747 MSTORE
0x748 PUSH1 0x40
0x74a MLOAD
0x74b DUP3
0x74c PUSH4 0xffffffff
0x751 AND
0x752 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x770 MUL
0x771 DUP2
0x772 MSTORE
0x773 PUSH1 0x4
0x775 ADD
0x776 DUP1
0x777 DUP3
0x778 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x78d AND
0x78e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7a3 AND
0x7a4 DUP2
0x7a5 MSTORE
0x7a6 PUSH1 0x20
0x7a8 ADD
0x7a9 SWAP2
0x7aa POP
0x7ab POP
0x7ac PUSH1 0x20
0x7ae PUSH1 0x40
0x7b0 MLOAD
0x7b1 DUP1
0x7b2 DUP4
0x7b3 SUB
0x7b4 DUP2
0x7b5 PUSH1 0x0
0x7b7 DUP8
0x7b8 DUP1
0x7b9 EXTCODESIZE
0x7ba ISZERO
0x7bb ISZERO
0x7bc PUSH2 0x7c4
0x7bf JUMPI
---
0x723: V411 = 0xffffffffffffffffffffffffffffffffffffffff
0x738: V412 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x739: V413 = 0x70a08231
0x73e: V414 = ADDRESS
0x73f: V415 = 0x0
0x741: V416 = 0x40
0x743: V417 = M[0x40]
0x744: V418 = 0x20
0x746: V419 = ADD 0x20 V417
0x747: M[V419] = 0x0
0x748: V420 = 0x40
0x74a: V421 = M[0x40]
0x74c: V422 = 0xffffffff
0x751: V423 = AND 0xffffffff 0x70a08231
0x752: V424 = 0x100000000000000000000000000000000000000000000000000000000
0x770: V425 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x772: M[V421] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x773: V426 = 0x4
0x775: V427 = ADD 0x4 V421
0x778: V428 = 0xffffffffffffffffffffffffffffffffffffffff
0x78d: V429 = AND 0xffffffffffffffffffffffffffffffffffffffff V414
0x78e: V430 = 0xffffffffffffffffffffffffffffffffffffffff
0x7a3: V431 = AND 0xffffffffffffffffffffffffffffffffffffffff V429
0x7a5: M[V427] = V431
0x7a6: V432 = 0x20
0x7a8: V433 = ADD 0x20 V427
0x7ac: V434 = 0x20
0x7ae: V435 = 0x40
0x7b0: V436 = M[0x40]
0x7b3: V437 = SUB V433 V436
0x7b5: V438 = 0x0
0x7b9: V439 = EXTCODESIZE V412
0x7ba: V440 = ISZERO V439
0x7bb: V441 = ISZERO V440
0x7bc: V442 = 0x7c4
0x7bf: JUMPI 0x7c4 V441
---
Entry stack: [V10, {0xf6, 0x235}, S9, S8, S7, S6, S5, S4, S3, {0x2ab, 0x494, 0x6a7}, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V412, 0x70a08231, V433, 0x20, V436, V437, V436, 0x0, V412]
Exit stack: [V10, {0xf6, 0x235}, S9, S8, S7, S6, S5, S4, S3, {0x2ab, 0x494, 0x6a7}, S1, 0x0, V412, 0x70a08231, V433, 0x20, V436, V437, V436, 0x0, V412]

================================

Block 0x7c0
[0x7c0:0x7c3]
---
Predecessors: [0x722]
Successors: []
---
0x7c0 PUSH1 0x0
0x7c2 DUP1
0x7c3 REVERT
---
0x7c0: V443 = 0x0
0x7c3: REVERT 0x0 0x0
---
Entry stack: [V10, {0xf6, 0x235}, S18, S17, S16, S15, S14, S13, S12, {0x2ab, 0x494, 0x6a7}, S10, 0x0, V412, 0x70a08231, V433, 0x20, V436, V437, V436, 0x0, V412]
Stack pops: 0
Stack additions: []
Exit stack: [V10, {0xf6, 0x235}, S18, S17, S16, S15, S14, S13, S12, {0x2ab, 0x494, 0x6a7}, S10, 0x0, V412, 0x70a08231, V433, 0x20, V436, V437, V436, 0x0, V412]

================================

Block 0x7c4
[0x7c4:0x7d0]
---
Predecessors: [0x722]
Successors: [0x7d1, 0x7d5]
---
0x7c4 JUMPDEST
0x7c5 PUSH2 0x2c6
0x7c8 GAS
0x7c9 SUB
0x7ca CALL
0x7cb ISZERO
0x7cc ISZERO
0x7cd PUSH2 0x7d5
0x7d0 JUMPI
---
0x7c4: JUMPDEST 
0x7c5: V444 = 0x2c6
0x7c8: V445 = GAS
0x7c9: V446 = SUB V445 0x2c6
0x7ca: V447 = CALL V446 V412 0x0 V436 V437 V436 0x20
0x7cb: V448 = ISZERO V447
0x7cc: V449 = ISZERO V448
0x7cd: V450 = 0x7d5
0x7d0: JUMPI 0x7d5 V449
---
Entry stack: [V10, {0xf6, 0x235}, S18, S17, S16, S15, S14, S13, S12, {0x2ab, 0x494, 0x6a7}, S10, 0x0, V412, 0x70a08231, V433, 0x20, V436, V437, V436, 0x0, V412]
Stack pops: 6
Stack additions: []
Exit stack: [V10, {0xf6, 0x235}, S18, S17, S16, S15, S14, S13, S12, {0x2ab, 0x494, 0x6a7}, S10, 0x0, V412, 0x70a08231, V433]

================================

Block 0x7d1
[0x7d1:0x7d4]
---
Predecessors: [0x7c4]
Successors: []
---
0x7d1 PUSH1 0x0
0x7d3 DUP1
0x7d4 REVERT
---
0x7d1: V451 = 0x0
0x7d4: REVERT 0x0 0x0
---
Entry stack: [V10, {0xf6, 0x235}, S12, S11, S10, S9, S8, S7, S6, {0x2ab, 0x494, 0x6a7}, S4, 0x0, S2, 0x70a08231, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, {0xf6, 0x235}, S12, S11, S10, S9, S8, S7, S6, {0x2ab, 0x494, 0x6a7}, S4, 0x0, S2, 0x70a08231, S0]

================================

Block 0x7d5
[0x7d5:0x7e5]
---
Predecessors: [0x7c4]
Successors: [0x801]
---
0x7d5 JUMPDEST
0x7d6 POP
0x7d7 POP
0x7d8 POP
0x7d9 PUSH1 0x40
0x7db MLOAD
0x7dc DUP1
0x7dd MLOAD
0x7de SWAP1
0x7df POP
0x7e0 SWAP1
0x7e1 POP
0x7e2 PUSH2 0x801
0x7e5 JUMP
---
0x7d5: JUMPDEST 
0x7d9: V452 = 0x40
0x7db: V453 = M[0x40]
0x7dd: V454 = M[V453]
0x7e2: V455 = 0x801
0x7e5: JUMP 0x801
---
Entry stack: [V10, {0xf6, 0x235}, S12, S11, S10, S9, S8, S7, S6, {0x2ab, 0x494, 0x6a7}, S4, 0x0, S2, 0x70a08231, S0]
Stack pops: 4
Stack additions: [V454]
Exit stack: [V10, {0xf6, 0x235}, S12, S11, S10, S9, S8, S7, S6, {0x2ab, 0x494, 0x6a7}, S4, V454]

================================

Block 0x7e6
[0x7e6:0x800]
---
Predecessors: [0x700]
Successors: [0x801]
---
0x7e6 JUMPDEST
0x7e7 ADDRESS
0x7e8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7fd AND
0x7fe BALANCE
0x7ff SWAP1
0x800 POP
---
0x7e6: JUMPDEST 
0x7e7: V456 = ADDRESS
0x7e8: V457 = 0xffffffffffffffffffffffffffffffffffffffff
0x7fd: V458 = AND 0xffffffffffffffffffffffffffffffffffffffff V456
0x7fe: V459 = BALANCE V458
---
Entry stack: [V10, {0xf6, 0x235}, S9, S8, S7, S6, S5, S4, S3, {0x2ab, 0x494, 0x6a7}, S1, 0x0]
Stack pops: 1
Stack additions: [V459]
Exit stack: [V10, {0xf6, 0x235}, S9, S8, S7, S6, S5, S4, S3, {0x2ab, 0x494, 0x6a7}, S1, V459]

================================

Block 0x801
[0x801:0x805]
---
Predecessors: [0x7d5, 0x7e6]
Successors: [0x2ab, 0x494, 0x6a7]
---
0x801 JUMPDEST
0x802 SWAP2
0x803 SWAP1
0x804 POP
0x805 JUMP
---
0x801: JUMPDEST 
0x805: JUMP {0x2ab, 0x494, 0x6a7}
---
Entry stack: [V10, {0xf6, 0x235}, S9, S8, S7, S6, S5, S4, S3, {0x2ab, 0x494, 0x6a7}, S1, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, {0xf6, 0x235}, S9, S8, S7, S6, S5, S4, S3, S0]

================================

Block 0x806
[0x806:0x812]
---
Predecessors: [0x354]
Successors: [0xa05]
---
0x806 JUMPDEST
0x807 PUSH1 0x0
0x809 DUP1
0x80a PUSH2 0x813
0x80d DUP6
0x80e DUP6
0x80f PUSH2 0xa05
0x812 JUMP
---
0x806: JUMPDEST 
0x807: V460 = 0x0
0x80a: V461 = 0x813
0x80f: V462 = 0xa05
0x812: JUMP 0xa05
---
Entry stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, 0x479, V215, V257, V40]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, 0x0, 0x813, S2, S1]
Exit stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, 0x479, V215, V257, V40, 0x0, 0x0, 0x813, V215, V257]

================================

Block 0x813
[0x813:0x81e]
---
Predecessors: [0xb1c]
Successors: [0x638]
---
0x813 JUMPDEST
0x814 SWAP1
0x815 POP
0x816 PUSH2 0x81f
0x819 DUP4
0x81a DUP3
0x81b PUSH2 0x638
0x81e JUMP
---
0x813: JUMPDEST 
0x816: V463 = 0x81f
0x81b: V464 = 0x638
0x81e: JUMP 0x638
---
Entry stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, 0x479, V215, V257, V40, 0x0, 0x0, V687]
Stack pops: 4
Stack additions: [S3, S2, S0, 0x81f, S3, S0]
Exit stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, 0x479, V215, V257, V40, 0x0, V687, 0x81f, V40, V687]

================================

Block 0x81f
[0x81f:0x828]
---
Predecessors: [0x550, 0x6f0]
Successors: [0x479]
---
0x81f JUMPDEST
0x820 SWAP2
0x821 POP
0x822 POP
0x823 SWAP4
0x824 SWAP3
0x825 POP
0x826 POP
0x827 POP
0x828 JUMP
---
0x81f: JUMPDEST 
0x828: JUMP 0x479
---
Entry stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, 0x479, V215, V257, V40, 0x0, S1, S0]
Stack pops: 7
Stack additions: [S0]
Exit stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, S0]

================================

Block 0x829
[0x829:0x8bb]
---
Predecessors: [0x4a1, 0x693]
Successors: [0x8bc, 0x8c0]
---
0x829 JUMPDEST
0x82a PUSH1 0x0
0x82c DUP1
0x82d PUSH1 0x2
0x82f PUSH1 0x0
0x831 DUP5
0x832 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x847 AND
0x848 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x85d AND
0x85e DUP2
0x85f MSTORE
0x860 PUSH1 0x20
0x862 ADD
0x863 SWAP1
0x864 DUP2
0x865 MSTORE
0x866 PUSH1 0x20
0x868 ADD
0x869 PUSH1 0x0
0x86b SHA3
0x86c SLOAD
0x86d SWAP1
0x86e POP
0x86f PUSH3 0x15180
0x873 PUSH1 0x1
0x875 PUSH1 0x0
0x877 DUP6
0x878 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x88d AND
0x88e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8a3 AND
0x8a4 DUP2
0x8a5 MSTORE
0x8a6 PUSH1 0x20
0x8a8 ADD
0x8a9 SWAP1
0x8aa DUP2
0x8ab MSTORE
0x8ac PUSH1 0x20
0x8ae ADD
0x8af PUSH1 0x0
0x8b1 SHA3
0x8b2 SLOAD
0x8b3 TIMESTAMP
0x8b4 SUB
0x8b5 LT
0x8b6 ISZERO
0x8b7 ISZERO
0x8b8 PUSH2 0x8c0
0x8bb JUMPI
---
0x829: JUMPDEST 
0x82a: V465 = 0x0
0x82d: V466 = 0x2
0x82f: V467 = 0x0
0x832: V468 = 0xffffffffffffffffffffffffffffffffffffffff
0x847: V469 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x848: V470 = 0xffffffffffffffffffffffffffffffffffffffff
0x85d: V471 = AND 0xffffffffffffffffffffffffffffffffffffffff V469
0x85f: M[0x0] = V471
0x860: V472 = 0x20
0x862: V473 = ADD 0x20 0x0
0x865: M[0x20] = 0x2
0x866: V474 = 0x20
0x868: V475 = ADD 0x20 0x20
0x869: V476 = 0x0
0x86b: V477 = SHA3 0x0 0x40
0x86c: V478 = S[V477]
0x86f: V479 = 0x15180
0x873: V480 = 0x1
0x875: V481 = 0x0
0x878: V482 = 0xffffffffffffffffffffffffffffffffffffffff
0x88d: V483 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x88e: V484 = 0xffffffffffffffffffffffffffffffffffffffff
0x8a3: V485 = AND 0xffffffffffffffffffffffffffffffffffffffff V483
0x8a5: M[0x0] = V485
0x8a6: V486 = 0x20
0x8a8: V487 = ADD 0x20 0x0
0x8ab: M[0x20] = 0x1
0x8ac: V488 = 0x20
0x8ae: V489 = ADD 0x20 0x20
0x8af: V490 = 0x0
0x8b1: V491 = SHA3 0x0 0x40
0x8b2: V492 = S[V491]
0x8b3: V493 = TIMESTAMP
0x8b4: V494 = SUB V493 V492
0x8b5: V495 = LT V494 0x15180
0x8b6: V496 = ISZERO V495
0x8b7: V497 = ISZERO V496
0x8b8: V498 = 0x8c0
0x8bb: JUMPI 0x8c0 V497
---
Entry stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, 0x479, V215, V257, V40, 0x0, S10, {0xf6, 0x235, 0x81f}, S8, S7, S6, S5, S4, S3, S2, {0x4ab, 0x69c}, S0]
Stack pops: 1
Stack additions: [S0, 0x0, V478]
Exit stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, 0x479, V215, V257, V40, 0x0, S10, {0xf6, 0x235, 0x81f}, S8, S7, S6, S5, S4, S3, S2, {0x4ab, 0x69c}, S0, 0x0, V478]

================================

Block 0x8bc
[0x8bc:0x8bf]
---
Predecessors: [0x829]
Successors: [0x8c0]
---
0x8bc PUSH1 0x0
0x8be SWAP1
0x8bf POP
---
0x8bc: V499 = 0x0
---
Entry stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, 0x479, V215, V257, V40, 0x0, S12, {0xf6, 0x235, 0x81f}, S10, S9, S8, S7, S6, S5, S4, {0x4ab, 0x69c}, S2, 0x0, V478]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, 0x479, V215, V257, V40, 0x0, S12, {0xf6, 0x235, 0x81f}, S10, S9, S8, S7, S6, S5, S4, {0x4ab, 0x69c}, S2, 0x0, 0x0]

================================

Block 0x8c0
[0x8c0:0x8c8]
---
Predecessors: [0x829, 0x8bc]
Successors: [0x4ab, 0x69c]
---
0x8c0 JUMPDEST
0x8c1 DUP1
0x8c2 SWAP2
0x8c3 POP
0x8c4 POP
0x8c5 SWAP2
0x8c6 SWAP1
0x8c7 POP
0x8c8 JUMP
---
0x8c0: JUMPDEST 
0x8c8: JUMP {0x4ab, 0x69c}
---
Entry stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, 0x479, V215, V257, V40, 0x0, S12, {0xf6, 0x235, 0x81f}, S10, S9, S8, S7, S6, S5, S4, {0x4ab, 0x69c}, S2, 0x0, S0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, 0x479, V215, V257, V40, 0x0, S12, {0xf6, 0x235, 0x81f}, S10, S9, S8, S7, S6, S5, S4, S0]

================================

Block 0x8c9
[0x8c9:0x8e9]
---
Predecessors: [0x4ab]
Successors: [0x8ea, 0x9bf]
---
0x8c9 JUMPDEST
0x8ca PUSH1 0x0
0x8cc DUP4
0x8cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8e2 AND
0x8e3 EQ
0x8e4 ISZERO
0x8e5 ISZERO
0x8e6 PUSH2 0x9bf
0x8e9 JUMPI
---
0x8c9: JUMPDEST 
0x8ca: V500 = 0x0
0x8cd: V501 = 0xffffffffffffffffffffffffffffffffffffffff
0x8e2: V502 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x8e3: V503 = EQ V502 0x0
0x8e4: V504 = ISZERO V503
0x8e5: V505 = ISZERO V504
0x8e6: V506 = 0x9bf
0x8e9: JUMPI 0x9bf V505
---
Entry stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, 0x479, V215, V257, V40, 0x0, S11, {0xf6, 0x235, 0x81f}, S9, S8, S7, S6, S5, S4, 0x550, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, 0x479, V215, V257, V40, 0x0, S11, {0xf6, 0x235, 0x81f}, S9, S8, S7, S6, S5, S4, 0x550, S2, S1, S0]

================================

Block 0x8ea
[0x8ea:0x98f]
---
Predecessors: [0x8c9]
Successors: [0x990, 0x994]
---
0x8ea DUP3
0x8eb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x900 AND
0x901 PUSH4 0xa9059cbb
0x906 DUP4
0x907 DUP4
0x908 PUSH1 0x0
0x90a PUSH1 0x40
0x90c MLOAD
0x90d PUSH1 0x20
0x90f ADD
0x910 MSTORE
0x911 PUSH1 0x40
0x913 MLOAD
0x914 DUP4
0x915 PUSH4 0xffffffff
0x91a AND
0x91b PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x939 MUL
0x93a DUP2
0x93b MSTORE
0x93c PUSH1 0x4
0x93e ADD
0x93f DUP1
0x940 DUP4
0x941 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x956 AND
0x957 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x96c AND
0x96d DUP2
0x96e MSTORE
0x96f PUSH1 0x20
0x971 ADD
0x972 DUP3
0x973 DUP2
0x974 MSTORE
0x975 PUSH1 0x20
0x977 ADD
0x978 SWAP3
0x979 POP
0x97a POP
0x97b POP
0x97c PUSH1 0x20
0x97e PUSH1 0x40
0x980 MLOAD
0x981 DUP1
0x982 DUP4
0x983 SUB
0x984 DUP2
0x985 PUSH1 0x0
0x987 DUP8
0x988 DUP1
0x989 EXTCODESIZE
0x98a ISZERO
0x98b ISZERO
0x98c PUSH2 0x994
0x98f JUMPI
---
0x8eb: V507 = 0xffffffffffffffffffffffffffffffffffffffff
0x900: V508 = AND 0xffffffffffffffffffffffffffffffffffffffff V124
0x901: V509 = 0xa9059cbb
0x908: V510 = 0x0
0x90a: V511 = 0x40
0x90c: V512 = M[0x40]
0x90d: V513 = 0x20
0x90f: V514 = ADD 0x20 V512
0x910: M[V514] = 0x0
0x911: V515 = 0x40
0x913: V516 = M[0x40]
0x915: V517 = 0xffffffff
0x91a: V518 = AND 0xffffffff 0xa9059cbb
0x91b: V519 = 0x100000000000000000000000000000000000000000000000000000000
0x939: V520 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x93b: M[V516] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x93c: V521 = 0x4
0x93e: V522 = ADD 0x4 V516
0x941: V523 = 0xffffffffffffffffffffffffffffffffffffffff
0x956: V524 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x957: V525 = 0xffffffffffffffffffffffffffffffffffffffff
0x96c: V526 = AND 0xffffffffffffffffffffffffffffffffffffffff V524
0x96e: M[V522] = V526
0x96f: V527 = 0x20
0x971: V528 = ADD 0x20 V522
0x974: M[V528] = V129
0x975: V529 = 0x20
0x977: V530 = ADD 0x20 V528
0x97c: V531 = 0x20
0x97e: V532 = 0x40
0x980: V533 = M[0x40]
0x983: V534 = SUB V530 V533
0x985: V535 = 0x0
0x989: V536 = EXTCODESIZE V508
0x98a: V537 = ISZERO V536
0x98b: V538 = ISZERO V537
0x98c: V539 = 0x994
0x98f: JUMPI 0x994 V538
---
Entry stack: [V10, 0x235, V124, V129, 0x0, V368, S5, S4, 0x550, V124, 0x0, V129]
Stack pops: 3
Stack additions: [S2, S1, S0, V508, 0xa9059cbb, V530, 0x20, V533, V534, V533, 0x0, V508]
Exit stack: [V10, 0x235, V124, V129, 0x0, V368, S5, S4, 0x550, V124, 0x0, V129, V508, 0xa9059cbb, V530, 0x20, V533, V534, V533, 0x0, V508]

================================

Block 0x990
[0x990:0x993]
---
Predecessors: [0x8ea]
Successors: []
---
0x990 PUSH1 0x0
0x992 DUP1
0x993 REVERT
---
0x990: V540 = 0x0
0x993: REVERT 0x0 0x0
---
Entry stack: [V10, 0x235, V124, V129, 0x0, V368, S14, S13, 0x550, V124, 0x0, V129, V508, 0xa9059cbb, V530, 0x20, V533, V534, V533, 0x0, V508]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x235, V124, V129, 0x0, V368, S14, S13, 0x550, V124, 0x0, V129, V508, 0xa9059cbb, V530, 0x20, V533, V534, V533, 0x0, V508]

================================

Block 0x994
[0x994:0x9a0]
---
Predecessors: [0x8ea]
Successors: [0x9a1, 0x9a5]
---
0x994 JUMPDEST
0x995 PUSH2 0x2c6
0x998 GAS
0x999 SUB
0x99a CALL
0x99b ISZERO
0x99c ISZERO
0x99d PUSH2 0x9a5
0x9a0 JUMPI
---
0x994: JUMPDEST 
0x995: V541 = 0x2c6
0x998: V542 = GAS
0x999: V543 = SUB V542 0x2c6
0x99a: V544 = CALL V543 V508 0x0 V533 V534 V533 0x20
0x99b: V545 = ISZERO V544
0x99c: V546 = ISZERO V545
0x99d: V547 = 0x9a5
0x9a0: JUMPI 0x9a5 V546
---
Entry stack: [V10, 0x235, V124, V129, 0x0, V368, S14, S13, 0x550, V124, 0x0, V129, V508, 0xa9059cbb, V530, 0x20, V533, V534, V533, 0x0, V508]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x235, V124, V129, 0x0, V368, S14, S13, 0x550, V124, 0x0, V129, V508, 0xa9059cbb, V530]

================================

Block 0x9a1
[0x9a1:0x9a4]
---
Predecessors: [0x994]
Successors: []
---
0x9a1 PUSH1 0x0
0x9a3 DUP1
0x9a4 REVERT
---
0x9a1: V548 = 0x0
0x9a4: REVERT 0x0 0x0
---
Entry stack: [V10, 0x235, V124, V129, 0x0, V368, S8, S7, 0x550, V124, 0x0, V129, S2, 0xa9059cbb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x235, V124, V129, 0x0, V368, S8, S7, 0x550, V124, 0x0, V129, S2, 0xa9059cbb, S0]

================================

Block 0x9a5
[0x9a5:0x9b5]
---
Predecessors: [0x994]
Successors: [0x9b6, 0x9ba]
---
0x9a5 JUMPDEST
0x9a6 POP
0x9a7 POP
0x9a8 POP
0x9a9 PUSH1 0x40
0x9ab MLOAD
0x9ac DUP1
0x9ad MLOAD
0x9ae SWAP1
0x9af POP
0x9b0 ISZERO
0x9b1 ISZERO
0x9b2 PUSH2 0x9ba
0x9b5 JUMPI
---
0x9a5: JUMPDEST 
0x9a9: V549 = 0x40
0x9ab: V550 = M[0x40]
0x9ad: V551 = M[V550]
0x9b0: V552 = ISZERO V551
0x9b1: V553 = ISZERO V552
0x9b2: V554 = 0x9ba
0x9b5: JUMPI 0x9ba V553
---
Entry stack: [V10, 0x235, V124, V129, 0x0, V368, S8, S7, 0x550, V124, 0x0, V129, S2, 0xa9059cbb, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x235, V124, V129, 0x0, V368, S8, S7, 0x550, V124, 0x0, V129]

================================

Block 0x9b6
[0x9b6:0x9b9]
---
Predecessors: [0x9a5]
Successors: []
---
0x9b6 PUSH1 0x0
0x9b8 DUP1
0x9b9 REVERT
---
0x9b6: V555 = 0x0
0x9b9: REVERT 0x0 0x0
---
Entry stack: [V10, 0x235, V124, V129, 0x0, V368, S5, S4, 0x550, V124, 0x0, V129]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x235, V124, V129, 0x0, V368, S5, S4, 0x550, V124, 0x0, V129]

================================

Block 0x9ba
[0x9ba:0x9be]
---
Predecessors: [0x9a5]
Successors: [0xa00]
---
0x9ba JUMPDEST
0x9bb PUSH2 0xa00
0x9be JUMP
---
0x9ba: JUMPDEST 
0x9bb: V556 = 0xa00
0x9be: JUMP 0xa00
---
Entry stack: [V10, 0x235, V124, V129, 0x0, V368, S5, S4, 0x550, V124, 0x0, V129]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x235, V124, V129, 0x0, V368, S5, S4, 0x550, V124, 0x0, V129]

================================

Block 0x9bf
[0x9bf:0x9fa]
---
Predecessors: [0x8c9]
Successors: [0x9fb, 0x9ff]
---
0x9bf JUMPDEST
0x9c0 DUP2
0x9c1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9d6 AND
0x9d7 PUSH2 0x8fc
0x9da DUP3
0x9db SWAP1
0x9dc DUP2
0x9dd ISZERO
0x9de MUL
0x9df SWAP1
0x9e0 PUSH1 0x40
0x9e2 MLOAD
0x9e3 PUSH1 0x0
0x9e5 PUSH1 0x40
0x9e7 MLOAD
0x9e8 DUP1
0x9e9 DUP4
0x9ea SUB
0x9eb DUP2
0x9ec DUP6
0x9ed DUP9
0x9ee DUP9
0x9ef CALL
0x9f0 SWAP4
0x9f1 POP
0x9f2 POP
0x9f3 POP
0x9f4 POP
0x9f5 ISZERO
0x9f6 ISZERO
0x9f7 PUSH2 0x9ff
0x9fa JUMPI
---
0x9bf: JUMPDEST 
0x9c1: V557 = 0xffffffffffffffffffffffffffffffffffffffff
0x9d6: V558 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x9d7: V559 = 0x8fc
0x9dd: V560 = ISZERO V129
0x9de: V561 = MUL V560 0x8fc
0x9e0: V562 = 0x40
0x9e2: V563 = M[0x40]
0x9e3: V564 = 0x0
0x9e5: V565 = 0x40
0x9e7: V566 = M[0x40]
0x9ea: V567 = SUB V563 V566
0x9ef: V568 = CALL V561 V558 V129 V566 V567 V566 0x0
0x9f5: V569 = ISZERO V568
0x9f6: V570 = ISZERO V569
0x9f7: V571 = 0x9ff
0x9fa: JUMPI 0x9ff V570
---
Entry stack: [V10, 0x235, V124, V129, 0x0, V368, S5, S4, 0x550, V124, 0x0, V129]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x235, V124, V129, 0x0, V368, S5, S4, 0x550, V124, 0x0, V129]

================================

Block 0x9fb
[0x9fb:0x9fe]
---
Predecessors: [0x9bf]
Successors: []
---
0x9fb PUSH1 0x0
0x9fd DUP1
0x9fe REVERT
---
0x9fb: V572 = 0x0
0x9fe: REVERT 0x0 0x0
---
Entry stack: [V10, 0x235, V124, V129, 0x0, V368, S5, S4, 0x550, V124, 0x0, V129]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x235, V124, V129, 0x0, V368, S5, S4, 0x550, V124, 0x0, V129]

================================

Block 0x9ff
[0x9ff:0x9ff]
---
Predecessors: [0x9bf]
Successors: [0xa00]
---
0x9ff JUMPDEST
---
0x9ff: JUMPDEST 
---
Entry stack: [V10, 0x235, V124, V129, 0x0, V368, S5, S4, 0x550, V124, 0x0, V129]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x235, V124, V129, 0x0, V368, S5, S4, 0x550, V124, 0x0, V129]

================================

Block 0xa00
[0xa00:0xa04]
---
Predecessors: [0x9ba, 0x9ff]
Successors: [0x550]
---
0xa00 JUMPDEST
0xa01 POP
0xa02 POP
0xa03 POP
0xa04 JUMP
---
0xa00: JUMPDEST 
0xa04: JUMP 0x550
---
Entry stack: [V10, 0x235, V124, V129, 0x0, V368, S5, S4, 0x550, V124, 0x0, V129]
Stack pops: 4
Stack additions: []
Exit stack: [V10, 0x235, V124, V129, 0x0, V368, S5, S4]

================================

Block 0xa05
[0xa05:0xa77]
---
Predecessors: [0x806]
Successors: [0xa78, 0xa7e]
---
0xa05 JUMPDEST
0xa06 PUSH1 0x0
0xa08 DUP1
0xa09 PUSH1 0x0
0xa0b DUP1
0xa0c DUP5
0xa0d PUSH1 0x40
0xa0f MLOAD
0xa10 DUP1
0xa11 DUP1
0xa12 PUSH32 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000
0xa33 DUP2
0xa34 MSTORE
0xa35 POP
0xa36 PUSH1 0x1c
0xa38 ADD
0xa39 DUP3
0xa3a PUSH1 0x0
0xa3c NOT
0xa3d AND
0xa3e PUSH1 0x0
0xa40 NOT
0xa41 AND
0xa42 DUP2
0xa43 MSTORE
0xa44 PUSH1 0x20
0xa46 ADD
0xa47 SWAP2
0xa48 POP
0xa49 POP
0xa4a PUSH1 0x40
0xa4c MLOAD
0xa4d DUP1
0xa4e SWAP2
0xa4f SUB
0xa50 SWAP1
0xa51 SHA3
0xa52 SWAP5
0xa53 POP
0xa54 PUSH1 0x20
0xa56 DUP7
0xa57 ADD
0xa58 MLOAD
0xa59 SWAP3
0xa5a POP
0xa5b PUSH1 0x40
0xa5d DUP7
0xa5e ADD
0xa5f MLOAD
0xa60 SWAP2
0xa61 POP
0xa62 PUSH1 0xff
0xa64 PUSH1 0x41
0xa66 DUP8
0xa67 ADD
0xa68 MLOAD
0xa69 AND
0xa6a SWAP1
0xa6b POP
0xa6c PUSH1 0x1b
0xa6e DUP2
0xa6f PUSH1 0xff
0xa71 AND
0xa72 LT
0xa73 ISZERO
0xa74 PUSH2 0xa7e
0xa77 JUMPI
---
0xa05: JUMPDEST 
0xa06: V573 = 0x0
0xa09: V574 = 0x0
0xa0d: V575 = 0x40
0xa0f: V576 = M[0x40]
0xa12: V577 = 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000
0xa34: M[V576] = 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000
0xa36: V578 = 0x1c
0xa38: V579 = ADD 0x1c V576
0xa3a: V580 = 0x0
0xa3c: V581 = NOT 0x0
0xa3d: V582 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V257
0xa3e: V583 = 0x0
0xa40: V584 = NOT 0x0
0xa41: V585 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V582
0xa43: M[V579] = V585
0xa44: V586 = 0x20
0xa46: V587 = ADD 0x20 V579
0xa4a: V588 = 0x40
0xa4c: V589 = M[0x40]
0xa4f: V590 = SUB V587 V589
0xa51: V591 = SHA3 V589 V590
0xa54: V592 = 0x20
0xa57: V593 = ADD V215 0x20
0xa58: V594 = M[V593]
0xa5b: V595 = 0x40
0xa5e: V596 = ADD V215 0x40
0xa5f: V597 = M[V596]
0xa62: V598 = 0xff
0xa64: V599 = 0x41
0xa67: V600 = ADD V215 0x41
0xa68: V601 = M[V600]
0xa69: V602 = AND V601 0xff
0xa6c: V603 = 0x1b
0xa6f: V604 = 0xff
0xa71: V605 = AND 0xff V602
0xa72: V606 = LT V605 0x1b
0xa73: V607 = ISZERO V606
0xa74: V608 = 0xa7e
0xa77: JUMPI 0xa7e V607
---
Entry stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, 0x479, V215, V257, V40, 0x0, 0x0, 0x813, V215, V257]
Stack pops: 2
Stack additions: [S1, V591, 0x0, V594, V597, V602]
Exit stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, 0x479, V215, V257, V40, 0x0, 0x0, 0x813, V215, V591, 0x0, V594, V597, V602]

================================

Block 0xa78
[0xa78:0xa7d]
---
Predecessors: [0xa05]
Successors: [0xa7e]
---
0xa78 PUSH1 0x1b
0xa7a DUP2
0xa7b ADD
0xa7c SWAP1
0xa7d POP
---
0xa78: V609 = 0x1b
0xa7b: V610 = ADD V602 0x1b
---
Entry stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, 0x479, V215, V257, V40, 0x0, 0x0, 0x813, V215, V591, 0x0, V594, V597, V602]
Stack pops: 1
Stack additions: [V610]
Exit stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, 0x479, V215, V257, V40, 0x0, 0x0, 0x813, V215, V591, 0x0, V594, V597, V610]

================================

Block 0xa7e
[0xa7e:0xa8a]
---
Predecessors: [0xa05, 0xa78]
Successors: [0xa8b, 0xa93]
---
0xa7e JUMPDEST
0xa7f PUSH1 0x1b
0xa81 DUP2
0xa82 PUSH1 0xff
0xa84 AND
0xa85 EQ
0xa86 DUP1
0xa87 PUSH2 0xa93
0xa8a JUMPI
---
0xa7e: JUMPDEST 
0xa7f: V611 = 0x1b
0xa82: V612 = 0xff
0xa84: V613 = AND 0xff S0
0xa85: V614 = EQ V613 0x1b
0xa87: V615 = 0xa93
0xa8a: JUMPI 0xa93 V614
---
Entry stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, 0x479, V215, V257, V40, 0x0, 0x0, 0x813, V215, V591, 0x0, V594, V597, S0]
Stack pops: 1
Stack additions: [S0, V614]
Exit stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, 0x479, V215, V257, V40, 0x0, 0x0, 0x813, V215, V591, 0x0, V594, V597, S0, V614]

================================

Block 0xa8b
[0xa8b:0xa92]
---
Predecessors: [0xa7e]
Successors: [0xa93]
---
0xa8b POP
0xa8c PUSH1 0x1c
0xa8e DUP2
0xa8f PUSH1 0xff
0xa91 AND
0xa92 EQ
---
0xa8c: V616 = 0x1c
0xa8f: V617 = 0xff
0xa91: V618 = AND 0xff S1
0xa92: V619 = EQ V618 0x1c
---
Entry stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, 0x479, V215, V257, V40, 0x0, 0x0, 0x813, V215, V591, 0x0, V594, V597, S1, V614]
Stack pops: 2
Stack additions: [S1, V619]
Exit stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, 0x479, V215, V257, V40, 0x0, 0x0, 0x813, V215, V591, 0x0, V594, V597, S1, V619]

================================

Block 0xa93
[0xa93:0xa99]
---
Predecessors: [0xa7e, 0xa8b]
Successors: [0xa9a, 0xa9e]
---
0xa93 JUMPDEST
0xa94 ISZERO
0xa95 ISZERO
0xa96 PUSH2 0xa9e
0xa99 JUMPI
---
0xa93: JUMPDEST 
0xa94: V620 = ISZERO S0
0xa95: V621 = ISZERO V620
0xa96: V622 = 0xa9e
0xa99: JUMPI 0xa9e V621
---
Entry stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, 0x479, V215, V257, V40, 0x0, 0x0, 0x813, V215, V591, 0x0, V594, V597, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, 0x479, V215, V257, V40, 0x0, 0x0, 0x813, V215, V591, 0x0, V594, V597, S1]

================================

Block 0xa9a
[0xa9a:0xa9d]
---
Predecessors: [0xa93]
Successors: []
---
0xa9a PUSH1 0x0
0xa9c DUP1
0xa9d REVERT
---
0xa9a: V623 = 0x0
0xa9d: REVERT 0x0 0x0
---
Entry stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, 0x479, V215, V257, V40, 0x0, 0x0, 0x813, V215, V591, 0x0, V594, V597, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, 0x479, V215, V257, V40, 0x0, 0x0, 0x813, V215, V591, 0x0, V594, V597, S0]

================================

Block 0xa9e
[0xa9e:0xb17]
---
Predecessors: [0xa93]
Successors: [0xb18, 0xb1c]
---
0xa9e JUMPDEST
0xa9f PUSH1 0x1
0xaa1 DUP6
0xaa2 DUP3
0xaa3 DUP6
0xaa4 DUP6
0xaa5 PUSH1 0x40
0xaa7 MLOAD
0xaa8 PUSH1 0x0
0xaaa DUP2
0xaab MSTORE
0xaac PUSH1 0x20
0xaae ADD
0xaaf PUSH1 0x40
0xab1 MSTORE
0xab2 PUSH1 0x0
0xab4 PUSH1 0x40
0xab6 MLOAD
0xab7 PUSH1 0x20
0xab9 ADD
0xaba MSTORE
0xabb PUSH1 0x40
0xabd MLOAD
0xabe DUP1
0xabf DUP6
0xac0 PUSH1 0x0
0xac2 NOT
0xac3 AND
0xac4 PUSH1 0x0
0xac6 NOT
0xac7 AND
0xac8 DUP2
0xac9 MSTORE
0xaca PUSH1 0x20
0xacc ADD
0xacd DUP5
0xace PUSH1 0xff
0xad0 AND
0xad1 PUSH1 0xff
0xad3 AND
0xad4 DUP2
0xad5 MSTORE
0xad6 PUSH1 0x20
0xad8 ADD
0xad9 DUP4
0xada PUSH1 0x0
0xadc NOT
0xadd AND
0xade PUSH1 0x0
0xae0 NOT
0xae1 AND
0xae2 DUP2
0xae3 MSTORE
0xae4 PUSH1 0x20
0xae6 ADD
0xae7 DUP3
0xae8 PUSH1 0x0
0xaea NOT
0xaeb AND
0xaec PUSH1 0x0
0xaee NOT
0xaef AND
0xaf0 DUP2
0xaf1 MSTORE
0xaf2 PUSH1 0x20
0xaf4 ADD
0xaf5 SWAP5
0xaf6 POP
0xaf7 POP
0xaf8 POP
0xaf9 POP
0xafa POP
0xafb PUSH1 0x20
0xafd PUSH1 0x40
0xaff MLOAD
0xb00 PUSH1 0x20
0xb02 DUP2
0xb03 SUB
0xb04 SWAP1
0xb05 DUP1
0xb06 DUP5
0xb07 SUB
0xb08 SWAP1
0xb09 PUSH1 0x0
0xb0b DUP7
0xb0c PUSH2 0x646e
0xb0f GAS
0xb10 SUB
0xb11 CALL
0xb12 ISZERO
0xb13 ISZERO
0xb14 PUSH2 0xb1c
0xb17 JUMPI
---
0xa9e: JUMPDEST 
0xa9f: V624 = 0x1
0xaa5: V625 = 0x40
0xaa7: V626 = M[0x40]
0xaa8: V627 = 0x0
0xaab: M[V626] = 0x0
0xaac: V628 = 0x20
0xaae: V629 = ADD 0x20 V626
0xaaf: V630 = 0x40
0xab1: M[0x40] = V629
0xab2: V631 = 0x0
0xab4: V632 = 0x40
0xab6: V633 = M[0x40]
0xab7: V634 = 0x20
0xab9: V635 = ADD 0x20 V633
0xaba: M[V635] = 0x0
0xabb: V636 = 0x40
0xabd: V637 = M[0x40]
0xac0: V638 = 0x0
0xac2: V639 = NOT 0x0
0xac3: V640 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V591
0xac4: V641 = 0x0
0xac6: V642 = NOT 0x0
0xac7: V643 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V640
0xac9: M[V637] = V643
0xaca: V644 = 0x20
0xacc: V645 = ADD 0x20 V637
0xace: V646 = 0xff
0xad0: V647 = AND 0xff S0
0xad1: V648 = 0xff
0xad3: V649 = AND 0xff V647
0xad5: M[V645] = V649
0xad6: V650 = 0x20
0xad8: V651 = ADD 0x20 V645
0xada: V652 = 0x0
0xadc: V653 = NOT 0x0
0xadd: V654 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V594
0xade: V655 = 0x0
0xae0: V656 = NOT 0x0
0xae1: V657 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V654
0xae3: M[V651] = V657
0xae4: V658 = 0x20
0xae6: V659 = ADD 0x20 V651
0xae8: V660 = 0x0
0xaea: V661 = NOT 0x0
0xaeb: V662 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V597
0xaec: V663 = 0x0
0xaee: V664 = NOT 0x0
0xaef: V665 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V662
0xaf1: M[V659] = V665
0xaf2: V666 = 0x20
0xaf4: V667 = ADD 0x20 V659
0xafb: V668 = 0x20
0xafd: V669 = 0x40
0xaff: V670 = M[0x40]
0xb00: V671 = 0x20
0xb03: V672 = SUB V670 0x20
0xb07: V673 = SUB V667 V670
0xb09: V674 = 0x0
0xb0c: V675 = 0x646e
0xb0f: V676 = GAS
0xb10: V677 = SUB V676 0x646e
0xb11: V678 = CALL V677 0x1 0x0 V670 V673 V672 0x20
0xb12: V679 = ISZERO V678
0xb13: V680 = ISZERO V679
0xb14: V681 = 0xb1c
0xb17: JUMPI 0xb1c V680
---
Entry stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, 0x479, V215, V257, V40, 0x0, 0x0, 0x813, V215, V591, 0x0, V594, V597, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x1, V667]
Exit stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, 0x479, V215, V257, V40, 0x0, 0x0, 0x813, V215, V591, 0x0, V594, V597, S0, 0x1, V667]

================================

Block 0xb18
[0xb18:0xb1b]
---
Predecessors: [0xa9e]
Successors: []
---
0xb18 PUSH1 0x0
0xb1a DUP1
0xb1b REVERT
---
0xb18: V682 = 0x0
0xb1b: REVERT 0x0 0x0
---
Entry stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, 0x479, V215, V257, V40, 0x0, 0x0, 0x813, V215, V591, 0x0, V594, V597, S2, 0x1, V667]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, 0x479, V215, V257, V40, 0x0, 0x0, 0x813, V215, V591, 0x0, V594, V597, S2, 0x1, V667]

================================

Block 0xb1c
[0xb1c:0xb2f]
---
Predecessors: [0xa9e]
Successors: [0x813]
---
0xb1c JUMPDEST
0xb1d POP
0xb1e POP
0xb1f PUSH1 0x20
0xb21 PUSH1 0x40
0xb23 MLOAD
0xb24 SUB
0xb25 MLOAD
0xb26 SWAP4
0xb27 POP
0xb28 POP
0xb29 POP
0xb2a POP
0xb2b SWAP3
0xb2c SWAP2
0xb2d POP
0xb2e POP
0xb2f JUMP
---
0xb1c: JUMPDEST 
0xb1f: V683 = 0x20
0xb21: V684 = 0x40
0xb23: V685 = M[0x40]
0xb24: V686 = SUB V685 0x20
0xb25: V687 = M[V686]
0xb2f: JUMP 0x813
---
Entry stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, 0x479, V215, V257, V40, 0x0, 0x0, 0x813, V215, V591, 0x0, V594, V597, S2, 0x1, V667]
Stack pops: 9
Stack additions: [V687]
Exit stack: [V10, 0xf6, V40, V43, V48, V57, V55, 0x0, 0x479, V215, V257, V40, 0x0, 0x0, V687]

================================

Block 0xb30
[0xb30:0xb69]
---
Predecessors: []
Successors: []
---
0xb30 STOP
0xb31 LOG1
0xb32 PUSH6 0x627a7a723058
0xb39 SHA3
0xb3a PUSH17 0xf7bb3332629759e213f6c46fba81c995e8
0xb4c MISSING 0xc9
0xb4d MISSING 0x2c
0xb4e MISSING 0x2b
0xb4f MISSING 0xe6
0xb50 MISSING 0xd7
0xb51 MISSING 0xf8
0xb52 MISSING 0xd
0xb53 MISSING 0xaa
0xb54 CALLDATACOPY
0xb55 MISSING 0xbb
0xb56 PUSH19 0xe4adf60029
---
0xb30: STOP 
0xb31: LOG S0 S1 S2
0xb32: V688 = 0x627a7a723058
0xb39: V689 = SHA3 0x627a7a723058 S3
0xb3a: V690 = 0xf7bb3332629759e213f6c46fba81c995e8
0xb4c: MISSING 0xc9
0xb4d: MISSING 0x2c
0xb4e: MISSING 0x2b
0xb4f: MISSING 0xe6
0xb50: MISSING 0xd7
0xb51: MISSING 0xf8
0xb52: MISSING 0xd
0xb53: MISSING 0xaa
0xb54: CALLDATACOPY S0 S1 S2
0xb55: MISSING 0xbb
0xb56: V691 = 0xe4adf60029
---
Entry stack: []
Stack pops: 0
Stack additions: [0xf7bb3332629759e213f6c46fba81c995e8, V689, 0xe4adf60029]
Exit stack: []

================================

Function 0:
Public function signature: 0x3884f307
Entry block: 0x83
Exit block: 0x49d
Body: 0x83, 0x8a, 0x8e, 0x2c1, 0x2cd, 0x2fe, 0x305, 0x309, 0x353, 0x354, 0x479, 0x486, 0x48a, 0x494, 0x49d, 0x806, 0x813, 0x81f, 0xa05, 0xa78, 0xa7e, 0xa8b, 0xa93, 0xa9a, 0xa9e, 0xb18, 0xb1c

Function 1:
Public function signature: 0x4de5120e
Entry block: 0xf8
Exit block: 0x12f
Body: 0xf8, 0xff, 0x103, 0x12f, 0x5f0

Function 2:
Public function signature: 0x6016dd4a
Entry block: 0x145
Exit block: 0x17c
Body: 0x145, 0x14c, 0x150, 0x17c, 0x608

Function 3:
Public function signature: 0x96ecb845
Entry block: 0x192
Exit block: 0x1c9
Body: 0x192, 0x199, 0x19d, 0x1c9, 0x620

Function 4:
Public function signature: 0xad9171df
Entry block: 0x1df
Exit block: 0x235
Body: 0x1df, 0x1e6, 0x1ea, 0x235

Function 5:
Public function signature: 0xaffed0e0
Entry block: 0x24b
Exit block: 0x25e
Body: 0x24b, 0x252, 0x256, 0x25e, 0x6fa

Function 6:
Public function signature: 0xf8b2cb4f
Entry block: 0x274
Exit block: 0x2ab
Body: 0x274, 0x27b, 0x27f, 0x2ab

Function 7:
Public fallback function
Entry block: 0x81
Exit block: 0x81
Body: 0x81

Function 8:
Private function
Entry block: 0x700
Exit block: 0x801
Body: 0x700, 0x722, 0x7c4, 0x7d5, 0x7e6, 0x801

Function 9:
Private function
Entry block: 0x638
Exit block: 0x6f0
Body: 0x494, 0x4a1, 0x4ab, 0x550, 0x638, 0x68b, 0x693, 0x69c, 0x6a7, 0x6bb, 0x6c9, 0x6ce, 0x6d4, 0x6d8, 0x6e2, 0x6ea, 0x6f0, 0x700, 0x722, 0x7c4, 0x7d5, 0x7e6, 0x801, 0x8c9, 0x8ea, 0x994, 0x9a5, 0x9ba, 0x9bf, 0x9ff, 0xa00

Function 10:
Private function
Entry block: 0x829
Exit block: 0x8c0
Body: 0x829, 0x8bc, 0x8c0

