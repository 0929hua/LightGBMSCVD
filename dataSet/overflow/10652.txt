Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x51]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x8da5cb5b
0x3c EQ
0x3d PUSH2 0x51
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x8da5cb5b
0x3c: V13 = EQ 0x8da5cb5b V11
0x3d: V14 = 0x51
0x40: JUMPI 0x51 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xa6]
---
0x41 DUP1
0x42 PUSH4 0xf2fde38b
0x47 EQ
0x48 PUSH2 0xa6
0x4b JUMPI
---
0x42: V15 = 0xf2fde38b
0x47: V16 = EQ 0xf2fde38b V11
0x48: V17 = 0xa6
0x4b: JUMPI 0xa6 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x50]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d PUSH1 0x0
0x4f DUP1
0x50 REVERT
---
0x4c: JUMPDEST 
0x4d: V18 = 0x0
0x50: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x51
[0x51:0x57]
---
Predecessors: [0xd]
Successors: [0x58, 0x5c]
---
0x51 JUMPDEST
0x52 CALLVALUE
0x53 ISZERO
0x54 PUSH2 0x5c
0x57 JUMPI
---
0x51: JUMPDEST 
0x52: V19 = CALLVALUE
0x53: V20 = ISZERO V19
0x54: V21 = 0x5c
0x57: JUMPI 0x5c V20
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x58
[0x58:0x5b]
---
Predecessors: [0x51]
Successors: []
---
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x58: V22 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0x63]
---
Predecessors: [0x51]
Successors: [0xdf]
---
0x5c JUMPDEST
0x5d PUSH2 0x64
0x60 PUSH2 0xdf
0x63 JUMP
---
0x5c: JUMPDEST 
0x5d: V23 = 0x64
0x60: V24 = 0xdf
0x63: JUMP 0xdf
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x64]
Exit stack: [V11, 0x64]

================================

Block 0x64
[0x64:0xa5]
---
Predecessors: [0xdf]
Successors: []
---
0x64 JUMPDEST
0x65 PUSH1 0x40
0x67 MLOAD
0x68 DUP1
0x69 DUP3
0x6a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7f AND
0x80 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x95 AND
0x96 DUP2
0x97 MSTORE
0x98 PUSH1 0x20
0x9a ADD
0x9b SWAP2
0x9c POP
0x9d POP
0x9e PUSH1 0x40
0xa0 MLOAD
0xa1 DUP1
0xa2 SWAP2
0xa3 SUB
0xa4 SWAP1
0xa5 RETURN
---
0x64: JUMPDEST 
0x65: V25 = 0x40
0x67: V26 = M[0x40]
0x6a: V27 = 0xffffffffffffffffffffffffffffffffffffffff
0x7f: V28 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0x80: V29 = 0xffffffffffffffffffffffffffffffffffffffff
0x95: V30 = AND 0xffffffffffffffffffffffffffffffffffffffff V28
0x97: M[V26] = V30
0x98: V31 = 0x20
0x9a: V32 = ADD 0x20 V26
0x9e: V33 = 0x40
0xa0: V34 = M[0x40]
0xa3: V35 = SUB V32 V34
0xa5: RETURN V34 V35
---
Entry stack: [V11, 0x64, V54]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x64]

================================

Block 0xa6
[0xa6:0xac]
---
Predecessors: [0x41]
Successors: [0xad, 0xb1]
---
0xa6 JUMPDEST
0xa7 CALLVALUE
0xa8 ISZERO
0xa9 PUSH2 0xb1
0xac JUMPI
---
0xa6: JUMPDEST 
0xa7: V36 = CALLVALUE
0xa8: V37 = ISZERO V36
0xa9: V38 = 0xb1
0xac: JUMPI 0xb1 V37
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xad
[0xad:0xb0]
---
Predecessors: [0xa6]
Successors: []
---
0xad PUSH1 0x0
0xaf DUP1
0xb0 REVERT
---
0xad: V39 = 0x0
0xb0: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb1
[0xb1:0xdc]
---
Predecessors: [0xa6]
Successors: [0x104]
---
0xb1 JUMPDEST
0xb2 PUSH2 0xdd
0xb5 PUSH1 0x4
0xb7 DUP1
0xb8 DUP1
0xb9 CALLDATALOAD
0xba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcf AND
0xd0 SWAP1
0xd1 PUSH1 0x20
0xd3 ADD
0xd4 SWAP1
0xd5 SWAP2
0xd6 SWAP1
0xd7 POP
0xd8 POP
0xd9 PUSH2 0x104
0xdc JUMP
---
0xb1: JUMPDEST 
0xb2: V40 = 0xdd
0xb5: V41 = 0x4
0xb9: V42 = CALLDATALOAD 0x4
0xba: V43 = 0xffffffffffffffffffffffffffffffffffffffff
0xcf: V44 = AND 0xffffffffffffffffffffffffffffffffffffffff V42
0xd1: V45 = 0x20
0xd3: V46 = ADD 0x20 0x4
0xd9: V47 = 0x104
0xdc: JUMP 0x104
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xdd, V44]
Exit stack: [V11, 0xdd, V44]

================================

Block 0xdd
[0xdd:0xde]
---
Predecessors: [0x19b]
Successors: []
---
0xdd JUMPDEST
0xde STOP
---
0xdd: JUMPDEST 
0xde: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xdf
[0xdf:0x103]
---
Predecessors: [0x5c]
Successors: [0x64]
---
0xdf JUMPDEST
0xe0 PUSH1 0x0
0xe2 DUP1
0xe3 SWAP1
0xe4 SLOAD
0xe5 SWAP1
0xe6 PUSH2 0x100
0xe9 EXP
0xea SWAP1
0xeb DIV
0xec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x101 AND
0x102 DUP2
0x103 JUMP
---
0xdf: JUMPDEST 
0xe0: V48 = 0x0
0xe4: V49 = S[0x0]
0xe6: V50 = 0x100
0xe9: V51 = EXP 0x100 0x0
0xeb: V52 = DIV V49 0x1
0xec: V53 = 0xffffffffffffffffffffffffffffffffffffffff
0x101: V54 = AND 0xffffffffffffffffffffffffffffffffffffffff V52
0x103: JUMP 0x64
---
Entry stack: [V11, 0x64]
Stack pops: 1
Stack additions: [S0, V54]
Exit stack: [V11, 0x64, V54]

================================

Block 0x104
[0x104:0x15a]
---
Predecessors: [0xb1]
Successors: [0x15b, 0x15f]
---
0x104 JUMPDEST
0x105 PUSH1 0x0
0x107 DUP1
0x108 SWAP1
0x109 SLOAD
0x10a SWAP1
0x10b PUSH2 0x100
0x10e EXP
0x10f SWAP1
0x110 DIV
0x111 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x126 AND
0x127 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13c AND
0x13d CALLER
0x13e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x153 AND
0x154 EQ
0x155 ISZERO
0x156 ISZERO
0x157 PUSH2 0x15f
0x15a JUMPI
---
0x104: JUMPDEST 
0x105: V55 = 0x0
0x109: V56 = S[0x0]
0x10b: V57 = 0x100
0x10e: V58 = EXP 0x100 0x0
0x110: V59 = DIV V56 0x1
0x111: V60 = 0xffffffffffffffffffffffffffffffffffffffff
0x126: V61 = AND 0xffffffffffffffffffffffffffffffffffffffff V59
0x127: V62 = 0xffffffffffffffffffffffffffffffffffffffff
0x13c: V63 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0x13d: V64 = CALLER
0x13e: V65 = 0xffffffffffffffffffffffffffffffffffffffff
0x153: V66 = AND 0xffffffffffffffffffffffffffffffffffffffff V64
0x154: V67 = EQ V66 V63
0x155: V68 = ISZERO V67
0x156: V69 = ISZERO V68
0x157: V70 = 0x15f
0x15a: JUMPI 0x15f V69
---
Entry stack: [V11, 0xdd, V44]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdd, V44]

================================

Block 0x15b
[0x15b:0x15e]
---
Predecessors: [0x104]
Successors: []
---
0x15b PUSH1 0x0
0x15d DUP1
0x15e REVERT
---
0x15b: V71 = 0x0
0x15e: REVERT 0x0 0x0
---
Entry stack: [V11, 0xdd, V44]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdd, V44]

================================

Block 0x15f
[0x15f:0x196]
---
Predecessors: [0x104, 0x31d]
Successors: [0x197, 0x19b]
---
0x15f JUMPDEST
0x160 PUSH1 0x0
0x162 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x177 AND
0x178 DUP2
0x179 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18e AND
0x18f EQ
0x190 ISZERO
0x191 ISZERO
0x192 ISZERO
0x193 PUSH2 0x19b
0x196 JUMPI
---
0x15f: JUMPDEST 
0x160: V72 = 0x0
0x162: V73 = 0xffffffffffffffffffffffffffffffffffffffff
0x177: V74 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x179: V75 = 0xffffffffffffffffffffffffffffffffffffffff
0x18e: V76 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x18f: V77 = EQ V76 0x0
0x190: V78 = ISZERO V77
0x191: V79 = ISZERO V78
0x192: V80 = ISZERO V79
0x193: V81 = 0x19b
0x196: JUMPI 0x19b V80
---
Entry stack: [V11, 0xdd, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xdd, S0]

================================

Block 0x197
[0x197:0x19a]
---
Predecessors: [0x15f]
Successors: []
---
0x197 PUSH1 0x0
0x199 DUP1
0x19a REVERT
---
0x197: V82 = 0x0
0x19a: REVERT 0x0 0x0
---
Entry stack: [V11, 0xdd, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdd, S0]

================================

Block 0x19b
[0x19b:0x258]
---
Predecessors: [0x15f]
Successors: [0xdd]
---
0x19b JUMPDEST
0x19c DUP1
0x19d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b2 AND
0x1b3 PUSH1 0x0
0x1b5 DUP1
0x1b6 SWAP1
0x1b7 SLOAD
0x1b8 SWAP1
0x1b9 PUSH2 0x100
0x1bc EXP
0x1bd SWAP1
0x1be DIV
0x1bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d4 AND
0x1d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ea AND
0x1eb PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x20c PUSH1 0x40
0x20e MLOAD
0x20f PUSH1 0x40
0x211 MLOAD
0x212 DUP1
0x213 SWAP2
0x214 SUB
0x215 SWAP1
0x216 LOG3
0x217 DUP1
0x218 PUSH1 0x0
0x21a DUP1
0x21b PUSH2 0x100
0x21e EXP
0x21f DUP2
0x220 SLOAD
0x221 DUP2
0x222 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x237 MUL
0x238 NOT
0x239 AND
0x23a SWAP1
0x23b DUP4
0x23c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x251 AND
0x252 MUL
0x253 OR
0x254 SWAP1
0x255 SSTORE
0x256 POP
0x257 POP
0x258 JUMP
---
0x19b: JUMPDEST 
0x19d: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b2: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x1b3: V85 = 0x0
0x1b7: V86 = S[0x0]
0x1b9: V87 = 0x100
0x1bc: V88 = EXP 0x100 0x0
0x1be: V89 = DIV V86 0x1
0x1bf: V90 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d4: V91 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0x1d5: V92 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ea: V93 = AND 0xffffffffffffffffffffffffffffffffffffffff V91
0x1eb: V94 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x20c: V95 = 0x40
0x20e: V96 = M[0x40]
0x20f: V97 = 0x40
0x211: V98 = M[0x40]
0x214: V99 = SUB V96 V98
0x216: LOG V98 V99 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V93 V84
0x218: V100 = 0x0
0x21b: V101 = 0x100
0x21e: V102 = EXP 0x100 0x0
0x220: V103 = S[0x0]
0x222: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x237: V105 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x238: V106 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x239: V107 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V103
0x23c: V108 = 0xffffffffffffffffffffffffffffffffffffffff
0x251: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x252: V110 = MUL V109 0x1
0x253: V111 = OR V110 V107
0x255: S[0x0] = V111
0x258: JUMP 0xdd
---
Entry stack: [V11, 0xdd, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x259
[0x259:0x2dd]
---
Predecessors: []
Successors: [0x2de]
---
0x259 STOP
0x25a LOG1
0x25b PUSH6 0x627a7a723058
0x262 SHA3
0x263 DUP7
0x264 MISSING 0xa9
0x265 SWAP4
0x266 LOG4
0x267 SWAP4
0x268 MISSING 0xaa
0x269 MISSING 0xb5
0x26a SWAP2
0x26b SGT
0x26c JUMP
0x26d BALANCE
0x26e CALLDATALOAD
0x26f EXTCODECOPY
0x270 SGT
0x271 MISSING 0xbd
0x272 MISSING 0xc7
0x273 MISSING 0xe2
0x274 MISSING 0xd
0x275 MISSING 0xe5
0x276 MISSING 0xfc
0x277 MISSING 0xd9
0x278 MISSING 0xde
0x279 DUP10
0x27a MISSING 0xd8
0x27b MISSING 0xd3
0x27c MISSING 0x2d
0x27d MISSING 0x5d
0x27e MISSING 0xef
0x27f MISSING 0xd9
0x280 JUMPDEST
0x281 MISSING 0xae
0x282 MISSING 0x24
0x283 STOP
0x284 MISSING 0x29
0x285 PUSH20 0x0
0x29a ADDRESS
0x29b EQ
0x29c PUSH1 0x60
0x29e PUSH1 0x40
0x2a0 MSTORE
0x2a1 PUSH1 0x0
0x2a3 DUP1
0x2a4 REVERT
0x2a5 STOP
0x2a6 LOG1
0x2a7 PUSH6 0x627a7a723058
0x2ae SHA3
0x2af CODESIZE
0x2b0 EXTCODESIZE
0x2b1 AND
0x2b2 DUP4
0x2b3 DUP16
0x2b4 MISSING 0xa8
0x2b5 MISSING 0xe7
0x2b6 MSTORE8
0x2b7 DUP16
0x2b8 DUP8
0x2b9 MISSING 0x4e
0x2ba DUP1
0x2bb SHR
0x2bc CALLVALUE
0x2bd SWAP2
0x2be GT
0x2bf MISSING 0xef
0x2c0 MISSING 0xb5
0x2c1 MISSING 0xb6
0x2c2 GT
0x2c3 MISSING 0xd5
0x2c4 MULMOD
0x2c5 ISZERO
0x2c6 MUL
0x2c7 MISSING 0xa8
0x2c8 MISSING 0xe
0x2c9 INVALID
0x2ca MISSING 0x5e
0x2cb PUSH13 0x68698b00296060604052600436
0x2d9 LT
0x2da PUSH2 0xc5
0x2dd JUMPI
---
0x259: STOP 
0x25a: LOG S0 S1 S2
0x25b: V112 = 0x627a7a723058
0x262: V113 = SHA3 0x627a7a723058 S3
0x264: MISSING 0xa9
0x266: LOG S4 S1 S2 S3 S0 S5
0x268: MISSING 0xaa
0x269: MISSING 0xb5
0x26b: V114 = SGT S2 S1
0x26c: JUMP V114
0x26d: V115 = BALANCE S0
0x26e: V116 = CALLDATALOAD V115
0x26f: EXTCODECOPY V116 S1 S2 S3
0x270: V117 = SGT S4 S5
0x271: MISSING 0xbd
0x272: MISSING 0xc7
0x273: MISSING 0xe2
0x274: MISSING 0xd
0x275: MISSING 0xe5
0x276: MISSING 0xfc
0x277: MISSING 0xd9
0x278: MISSING 0xde
0x27a: MISSING 0xd8
0x27b: MISSING 0xd3
0x27c: MISSING 0x2d
0x27d: MISSING 0x5d
0x27e: MISSING 0xef
0x27f: MISSING 0xd9
0x280: JUMPDEST 
0x281: MISSING 0xae
0x282: MISSING 0x24
0x283: STOP 
0x284: MISSING 0x29
0x285: V118 = 0x0
0x29a: V119 = ADDRESS
0x29b: V120 = EQ V119 0x0
0x29c: V121 = 0x60
0x29e: V122 = 0x40
0x2a0: M[0x40] = 0x60
0x2a1: V123 = 0x0
0x2a4: REVERT 0x0 0x0
0x2a5: STOP 
0x2a6: LOG S0 S1 S2
0x2a7: V124 = 0x627a7a723058
0x2ae: V125 = SHA3 0x627a7a723058 S3
0x2af: V126 = CODESIZE
0x2b0: V127 = EXTCODESIZE V126
0x2b1: V128 = AND V127 V125
0x2b4: MISSING 0xa8
0x2b5: MISSING 0xe7
0x2b6: M8[S0] = S1
0x2b9: MISSING 0x4e
0x2bb: V129 = SHR S0 S0
0x2bc: V130 = CALLVALUE
0x2be: V131 = GT S1 V129
0x2bf: MISSING 0xef
0x2c0: MISSING 0xb5
0x2c1: MISSING 0xb6
0x2c2: V132 = GT S0 S1
0x2c3: MISSING 0xd5
0x2c4: V133 = MULMOD S0 S1 S2
0x2c5: V134 = ISZERO V133
0x2c6: V135 = MUL V134 S3
0x2c7: MISSING 0xa8
0x2c8: MISSING 0xe
0x2c9: INVALID 
0x2ca: MISSING 0x5e
0x2cb: V136 = 0x68698b00296060604052600436
0x2d9: V137 = LT 0x68698b00296060604052600436 S0
0x2da: V138 = 0xc5
0x2dd: THROWI V137
---
Entry stack: []
Stack pops: 0
Stack additions: [S9, V113, S4, S5, S6, S7, S8, S9, S10, S7, S8, S9, S6, S0, V117, S9, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, V120, S17, S6, V128, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S8, S17, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, V131, V130, V132, V135]
Exit stack: []

================================

Block 0x2de
[0x2de:0x311]
---
Predecessors: [0x259]
Successors: [0x312]
---
0x2de PUSH1 0x0
0x2e0 CALLDATALOAD
0x2e1 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2ff SWAP1
0x300 DIV
0x301 PUSH4 0xffffffff
0x306 AND
0x307 DUP1
0x308 PUSH4 0xb14331f
0x30d EQ
0x30e PUSH2 0xca
0x311 JUMPI
---
0x2de: V139 = 0x0
0x2e0: V140 = CALLDATALOAD 0x0
0x2e1: V141 = 0x100000000000000000000000000000000000000000000000000000000
0x300: V142 = DIV V140 0x100000000000000000000000000000000000000000000000000000000
0x301: V143 = 0xffffffff
0x306: V144 = AND 0xffffffff V142
0x308: V145 = 0xb14331f
0x30d: V146 = EQ 0xb14331f V144
0x30e: V147 = 0xca
0x311: THROWI V146
---
Entry stack: []
Stack pops: 0
Stack additions: [V144]
Exit stack: [V144]

================================

Block 0x312
[0x312:0x31c]
---
Predecessors: [0x2de]
Successors: [0x31d]
---
0x312 DUP1
0x313 PUSH4 0x521eb273
0x318 EQ
0x319 PUSH2 0x10a
0x31c JUMPI
---
0x313: V148 = 0x521eb273
0x318: V149 = EQ 0x521eb273 V144
0x319: V150 = 0x10a
0x31c: THROWI V149
---
Entry stack: [V144]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V144]

================================

Block 0x31d
[0x31d:0x327]
---
Predecessors: [0x312]
Successors: [0x15f, 0x328]
---
0x31d DUP1
0x31e PUSH4 0x5cf4ee91
0x323 EQ
0x324 PUSH2 0x15f
0x327 JUMPI
---
0x31e: V151 = 0x5cf4ee91
0x323: V152 = EQ 0x5cf4ee91 V144
0x324: V153 = 0x15f
0x327: JUMPI 0x15f V152
---
Entry stack: [V144]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V144]

================================

Block 0x328
[0x328:0x332]
---
Predecessors: [0x31d]
Successors: [0x333]
---
0x328 DUP1
0x329 PUSH4 0x69fe0e2d
0x32e EQ
0x32f PUSH2 0x19f
0x332 JUMPI
---
0x329: V154 = 0x69fe0e2d
0x32e: V155 = EQ 0x69fe0e2d V144
0x32f: V156 = 0x19f
0x332: THROWI V155
---
Entry stack: [V144]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V144]

================================

Block 0x333
[0x333:0x33d]
---
Predecessors: [0x328]
Successors: [0x33e]
---
0x333 DUP1
0x334 PUSH4 0x7462beec
0x339 EQ
0x33a PUSH2 0x1c2
0x33d JUMPI
---
0x334: V157 = 0x7462beec
0x339: V158 = EQ 0x7462beec V144
0x33a: V159 = 0x1c2
0x33d: THROWI V158
---
Entry stack: [V144]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V144]

================================

Block 0x33e
[0x33e:0x348]
---
Predecessors: [0x333]
Successors: [0x349]
---
0x33e DUP1
0x33f PUSH4 0x8da5cb5b
0x344 EQ
0x345 PUSH2 0x1f7
0x348 JUMPI
---
0x33f: V160 = 0x8da5cb5b
0x344: V161 = EQ 0x8da5cb5b V144
0x345: V162 = 0x1f7
0x348: THROWI V161
---
Entry stack: [V144]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V144]

================================

Block 0x349
[0x349:0x353]
---
Predecessors: [0x33e]
Successors: [0x354]
---
0x349 DUP1
0x34a PUSH4 0xa243b6c1
0x34f EQ
0x350 PUSH2 0x24c
0x353 JUMPI
---
0x34a: V163 = 0xa243b6c1
0x34f: V164 = EQ 0xa243b6c1 V144
0x350: V165 = 0x24c
0x353: THROWI V164
---
Entry stack: [V144]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V144]

================================

Block 0x354
[0x354:0x35e]
---
Predecessors: [0x349]
Successors: [0x35f]
---
0x354 DUP1
0x355 PUSH4 0xced0c0c2
0x35a EQ
0x35b PUSH2 0x297
0x35e JUMPI
---
0x355: V166 = 0xced0c0c2
0x35a: V167 = EQ 0xced0c0c2 V144
0x35b: V168 = 0x297
0x35e: THROWI V167
---
Entry stack: [V144]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V144]

================================

Block 0x35f
[0x35f:0x369]
---
Predecessors: [0x354]
Successors: [0x36a]
---
0x35f DUP1
0x360 PUSH4 0xddca3f43
0x365 EQ
0x366 PUSH2 0x2c0
0x369 JUMPI
---
0x360: V169 = 0xddca3f43
0x365: V170 = EQ 0xddca3f43 V144
0x366: V171 = 0x2c0
0x369: THROWI V170
---
Entry stack: [V144]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V144]

================================

Block 0x36a
[0x36a:0x374]
---
Predecessors: [0x35f]
Successors: [0x375]
---
0x36a DUP1
0x36b PUSH4 0xdfef58a6
0x370 EQ
0x371 PUSH2 0x2e9
0x374 JUMPI
---
0x36b: V172 = 0xdfef58a6
0x370: V173 = EQ 0xdfef58a6 V144
0x371: V174 = 0x2e9
0x374: THROWI V173
---
Entry stack: [V144]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V144]

================================

Block 0x375
[0x375:0x37f]
---
Predecessors: [0x36a]
Successors: [0x380]
---
0x375 DUP1
0x376 PUSH4 0xdfefadff
0x37b EQ
0x37c PUSH2 0x338
0x37f JUMPI
---
0x376: V175 = 0xdfefadff
0x37b: V176 = EQ 0xdfefadff V144
0x37c: V177 = 0x338
0x37f: THROWI V176
---
Entry stack: [V144]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V144]

================================

Block 0x380
[0x380:0x38a]
---
Predecessors: [0x375]
Successors: [0x38b]
---
0x380 DUP1
0x381 PUSH4 0xf2fde38b
0x386 EQ
0x387 PUSH2 0x3e4
0x38a JUMPI
---
0x381: V178 = 0xf2fde38b
0x386: V179 = EQ 0xf2fde38b V144
0x387: V180 = 0x3e4
0x38a: THROWI V179
---
Entry stack: [V144]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V144]

================================

Block 0x38b
[0x38b:0x395]
---
Predecessors: [0x380]
Successors: [0x396]
---
0x38b DUP1
0x38c PUSH4 0xfc0c546a
0x391 EQ
0x392 PUSH2 0x41d
0x395 JUMPI
---
0x38c: V181 = 0xfc0c546a
0x391: V182 = EQ 0xfc0c546a V144
0x392: V183 = 0x41d
0x395: THROWI V182
---
Entry stack: [V144]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V144]

================================

Block 0x396
[0x396:0x3a1]
---
Predecessors: [0x38b]
Successors: [0x3a2]
---
0x396 JUMPDEST
0x397 PUSH1 0x0
0x399 DUP1
0x39a REVERT
0x39b JUMPDEST
0x39c CALLVALUE
0x39d ISZERO
0x39e PUSH2 0xd5
0x3a1 JUMPI
---
0x396: JUMPDEST 
0x397: V184 = 0x0
0x39a: REVERT 0x0 0x0
0x39b: JUMPDEST 
0x39c: V185 = CALLVALUE
0x39d: V186 = ISZERO V185
0x39e: V187 = 0xd5
0x3a1: THROWI V186
---
Entry stack: [V144]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3a2
[0x3a2:0x3e1]
---
Predecessors: [0x396]
Successors: [0x3e2]
---
0x3a2 PUSH1 0x0
0x3a4 DUP1
0x3a5 REVERT
0x3a6 JUMPDEST
0x3a7 PUSH2 0xf4
0x3aa PUSH1 0x4
0x3ac DUP1
0x3ad DUP1
0x3ae CALLDATALOAD
0x3af SWAP1
0x3b0 PUSH1 0x20
0x3b2 ADD
0x3b3 SWAP1
0x3b4 SWAP2
0x3b5 SWAP1
0x3b6 DUP1
0x3b7 CALLDATALOAD
0x3b8 SWAP1
0x3b9 PUSH1 0x20
0x3bb ADD
0x3bc SWAP1
0x3bd SWAP2
0x3be SWAP1
0x3bf POP
0x3c0 POP
0x3c1 PUSH2 0x472
0x3c4 JUMP
0x3c5 JUMPDEST
0x3c6 PUSH1 0x40
0x3c8 MLOAD
0x3c9 DUP1
0x3ca DUP3
0x3cb DUP2
0x3cc MSTORE
0x3cd PUSH1 0x20
0x3cf ADD
0x3d0 SWAP2
0x3d1 POP
0x3d2 POP
0x3d3 PUSH1 0x40
0x3d5 MLOAD
0x3d6 DUP1
0x3d7 SWAP2
0x3d8 SUB
0x3d9 SWAP1
0x3da RETURN
0x3db JUMPDEST
0x3dc CALLVALUE
0x3dd ISZERO
0x3de PUSH2 0x115
0x3e1 JUMPI
---
0x3a2: V188 = 0x0
0x3a5: REVERT 0x0 0x0
0x3a6: JUMPDEST 
0x3a7: V189 = 0xf4
0x3aa: V190 = 0x4
0x3ae: V191 = CALLDATALOAD 0x4
0x3b0: V192 = 0x20
0x3b2: V193 = ADD 0x20 0x4
0x3b7: V194 = CALLDATALOAD 0x24
0x3b9: V195 = 0x20
0x3bb: V196 = ADD 0x20 0x24
0x3c1: V197 = 0x472
0x3c4: THROW 
0x3c5: JUMPDEST 
0x3c6: V198 = 0x40
0x3c8: V199 = M[0x40]
0x3cc: M[V199] = S0
0x3cd: V200 = 0x20
0x3cf: V201 = ADD 0x20 V199
0x3d3: V202 = 0x40
0x3d5: V203 = M[0x40]
0x3d8: V204 = SUB V201 V203
0x3da: RETURN V203 V204
0x3db: JUMPDEST 
0x3dc: V205 = CALLVALUE
0x3dd: V206 = ISZERO V205
0x3de: V207 = 0x115
0x3e1: THROWI V206
---
Entry stack: []
Stack pops: 0
Stack additions: [V194, V191, 0xf4]
Exit stack: []

================================

Block 0x3e2
[0x3e2:0x436]
---
Predecessors: [0x3a2]
Successors: [0x437]
---
0x3e2 PUSH1 0x0
0x3e4 DUP1
0x3e5 REVERT
0x3e6 JUMPDEST
0x3e7 PUSH2 0x11d
0x3ea PUSH2 0x4a9
0x3ed JUMP
0x3ee JUMPDEST
0x3ef PUSH1 0x40
0x3f1 MLOAD
0x3f2 DUP1
0x3f3 DUP3
0x3f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x409 AND
0x40a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x41f AND
0x420 DUP2
0x421 MSTORE
0x422 PUSH1 0x20
0x424 ADD
0x425 SWAP2
0x426 POP
0x427 POP
0x428 PUSH1 0x40
0x42a MLOAD
0x42b DUP1
0x42c SWAP2
0x42d SUB
0x42e SWAP1
0x42f RETURN
0x430 JUMPDEST
0x431 CALLVALUE
0x432 ISZERO
0x433 PUSH2 0x16a
0x436 JUMPI
---
0x3e2: V208 = 0x0
0x3e5: REVERT 0x0 0x0
0x3e6: JUMPDEST 
0x3e7: V209 = 0x11d
0x3ea: V210 = 0x4a9
0x3ed: THROW 
0x3ee: JUMPDEST 
0x3ef: V211 = 0x40
0x3f1: V212 = M[0x40]
0x3f4: V213 = 0xffffffffffffffffffffffffffffffffffffffff
0x409: V214 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x40a: V215 = 0xffffffffffffffffffffffffffffffffffffffff
0x41f: V216 = AND 0xffffffffffffffffffffffffffffffffffffffff V214
0x421: M[V212] = V216
0x422: V217 = 0x20
0x424: V218 = ADD 0x20 V212
0x428: V219 = 0x40
0x42a: V220 = M[0x40]
0x42d: V221 = SUB V218 V220
0x42f: RETURN V220 V221
0x430: JUMPDEST 
0x431: V222 = CALLVALUE
0x432: V223 = ISZERO V222
0x433: V224 = 0x16a
0x436: THROWI V223
---
Entry stack: []
Stack pops: 0
Stack additions: [0x11d]
Exit stack: []

================================

Block 0x437
[0x437:0x476]
---
Predecessors: [0x3e2]
Successors: [0x477]
---
0x437 PUSH1 0x0
0x439 DUP1
0x43a REVERT
0x43b JUMPDEST
0x43c PUSH2 0x189
0x43f PUSH1 0x4
0x441 DUP1
0x442 DUP1
0x443 CALLDATALOAD
0x444 SWAP1
0x445 PUSH1 0x20
0x447 ADD
0x448 SWAP1
0x449 SWAP2
0x44a SWAP1
0x44b DUP1
0x44c CALLDATALOAD
0x44d SWAP1
0x44e PUSH1 0x20
0x450 ADD
0x451 SWAP1
0x452 SWAP2
0x453 SWAP1
0x454 POP
0x455 POP
0x456 PUSH2 0x4cf
0x459 JUMP
0x45a JUMPDEST
0x45b PUSH1 0x40
0x45d MLOAD
0x45e DUP1
0x45f DUP3
0x460 DUP2
0x461 MSTORE
0x462 PUSH1 0x20
0x464 ADD
0x465 SWAP2
0x466 POP
0x467 POP
0x468 PUSH1 0x40
0x46a MLOAD
0x46b DUP1
0x46c SWAP2
0x46d SUB
0x46e SWAP1
0x46f RETURN
0x470 JUMPDEST
0x471 CALLVALUE
0x472 ISZERO
0x473 PUSH2 0x1aa
0x476 JUMPI
---
0x437: V225 = 0x0
0x43a: REVERT 0x0 0x0
0x43b: JUMPDEST 
0x43c: V226 = 0x189
0x43f: V227 = 0x4
0x443: V228 = CALLDATALOAD 0x4
0x445: V229 = 0x20
0x447: V230 = ADD 0x20 0x4
0x44c: V231 = CALLDATALOAD 0x24
0x44e: V232 = 0x20
0x450: V233 = ADD 0x20 0x24
0x456: V234 = 0x4cf
0x459: THROW 
0x45a: JUMPDEST 
0x45b: V235 = 0x40
0x45d: V236 = M[0x40]
0x461: M[V236] = S0
0x462: V237 = 0x20
0x464: V238 = ADD 0x20 V236
0x468: V239 = 0x40
0x46a: V240 = M[0x40]
0x46d: V241 = SUB V238 V240
0x46f: RETURN V240 V241
0x470: JUMPDEST 
0x471: V242 = CALLVALUE
0x472: V243 = ISZERO V242
0x473: V244 = 0x1aa
0x476: THROWI V243
---
Entry stack: []
Stack pops: 0
Stack additions: [V231, V228, 0x189]
Exit stack: []

================================

Block 0x477
[0x477:0x499]
---
Predecessors: [0x437]
Successors: [0x49a]
---
0x477 PUSH1 0x0
0x479 DUP1
0x47a REVERT
0x47b JUMPDEST
0x47c PUSH2 0x1c0
0x47f PUSH1 0x4
0x481 DUP1
0x482 DUP1
0x483 CALLDATALOAD
0x484 SWAP1
0x485 PUSH1 0x20
0x487 ADD
0x488 SWAP1
0x489 SWAP2
0x48a SWAP1
0x48b POP
0x48c POP
0x48d PUSH2 0x62d
0x490 JUMP
0x491 JUMPDEST
0x492 STOP
0x493 JUMPDEST
0x494 CALLVALUE
0x495 ISZERO
0x496 PUSH2 0x1cd
0x499 JUMPI
---
0x477: V245 = 0x0
0x47a: REVERT 0x0 0x0
0x47b: JUMPDEST 
0x47c: V246 = 0x1c0
0x47f: V247 = 0x4
0x483: V248 = CALLDATALOAD 0x4
0x485: V249 = 0x20
0x487: V250 = ADD 0x20 0x4
0x48d: V251 = 0x62d
0x490: THROW 
0x491: JUMPDEST 
0x492: STOP 
0x493: JUMPDEST 
0x494: V252 = CALLVALUE
0x495: V253 = ISZERO V252
0x496: V254 = 0x1cd
0x499: THROWI V253
---
Entry stack: []
Stack pops: 0
Stack additions: [V248, 0x1c0]
Exit stack: []

================================

Block 0x49a
[0x49a:0x4ce]
---
Predecessors: [0x477]
Successors: [0x4cf]
---
0x49a PUSH1 0x0
0x49c DUP1
0x49d REVERT
0x49e JUMPDEST
0x49f PUSH2 0x1f5
0x4a2 PUSH1 0x4
0x4a4 DUP1
0x4a5 DUP1
0x4a6 CALLDATALOAD
0x4a7 SWAP1
0x4a8 PUSH1 0x20
0x4aa ADD
0x4ab SWAP1
0x4ac SWAP2
0x4ad SWAP1
0x4ae DUP1
0x4af CALLDATALOAD
0x4b0 SWAP1
0x4b1 PUSH1 0x20
0x4b3 ADD
0x4b4 SWAP1
0x4b5 SWAP2
0x4b6 SWAP1
0x4b7 DUP1
0x4b8 CALLDATALOAD
0x4b9 SWAP1
0x4ba PUSH1 0x20
0x4bc ADD
0x4bd SWAP1
0x4be SWAP2
0x4bf SWAP1
0x4c0 POP
0x4c1 POP
0x4c2 PUSH2 0x692
0x4c5 JUMP
0x4c6 JUMPDEST
0x4c7 STOP
0x4c8 JUMPDEST
0x4c9 CALLVALUE
0x4ca ISZERO
0x4cb PUSH2 0x202
0x4ce JUMPI
---
0x49a: V255 = 0x0
0x49d: REVERT 0x0 0x0
0x49e: JUMPDEST 
0x49f: V256 = 0x1f5
0x4a2: V257 = 0x4
0x4a6: V258 = CALLDATALOAD 0x4
0x4a8: V259 = 0x20
0x4aa: V260 = ADD 0x20 0x4
0x4af: V261 = CALLDATALOAD 0x24
0x4b1: V262 = 0x20
0x4b3: V263 = ADD 0x20 0x24
0x4b8: V264 = CALLDATALOAD 0x44
0x4ba: V265 = 0x20
0x4bc: V266 = ADD 0x20 0x44
0x4c2: V267 = 0x692
0x4c5: THROW 
0x4c6: JUMPDEST 
0x4c7: STOP 
0x4c8: JUMPDEST 
0x4c9: V268 = CALLVALUE
0x4ca: V269 = ISZERO V268
0x4cb: V270 = 0x202
0x4ce: THROWI V269
---
Entry stack: []
Stack pops: 0
Stack additions: [V264, V261, V258, 0x1f5]
Exit stack: []

================================

Block 0x4cf
[0x4cf:0x523]
---
Predecessors: [0x49a]
Successors: [0x524]
---
0x4cf PUSH1 0x0
0x4d1 DUP1
0x4d2 REVERT
0x4d3 JUMPDEST
0x4d4 PUSH2 0x20a
0x4d7 PUSH2 0x91e
0x4da JUMP
0x4db JUMPDEST
0x4dc PUSH1 0x40
0x4de MLOAD
0x4df DUP1
0x4e0 DUP3
0x4e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4f6 AND
0x4f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x50c AND
0x50d DUP2
0x50e MSTORE
0x50f PUSH1 0x20
0x511 ADD
0x512 SWAP2
0x513 POP
0x514 POP
0x515 PUSH1 0x40
0x517 MLOAD
0x518 DUP1
0x519 SWAP2
0x51a SUB
0x51b SWAP1
0x51c RETURN
0x51d JUMPDEST
0x51e CALLVALUE
0x51f ISZERO
0x520 PUSH2 0x257
0x523 JUMPI
---
0x4cf: V271 = 0x0
0x4d2: REVERT 0x0 0x0
0x4d3: JUMPDEST 
0x4d4: V272 = 0x20a
0x4d7: V273 = 0x91e
0x4da: THROW 
0x4db: JUMPDEST 
0x4dc: V274 = 0x40
0x4de: V275 = M[0x40]
0x4e1: V276 = 0xffffffffffffffffffffffffffffffffffffffff
0x4f6: V277 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x4f7: V278 = 0xffffffffffffffffffffffffffffffffffffffff
0x50c: V279 = AND 0xffffffffffffffffffffffffffffffffffffffff V277
0x50e: M[V275] = V279
0x50f: V280 = 0x20
0x511: V281 = ADD 0x20 V275
0x515: V282 = 0x40
0x517: V283 = M[0x40]
0x51a: V284 = SUB V281 V283
0x51c: RETURN V283 V284
0x51d: JUMPDEST 
0x51e: V285 = CALLVALUE
0x51f: V286 = ISZERO V285
0x520: V287 = 0x257
0x523: THROWI V286
---
Entry stack: []
Stack pops: 0
Stack additions: [0x20a]
Exit stack: []

================================

Block 0x524
[0x524:0x56e]
---
Predecessors: [0x4cf]
Successors: [0x56f]
---
0x524 PUSH1 0x0
0x526 DUP1
0x527 REVERT
0x528 JUMPDEST
0x529 PUSH2 0x295
0x52c PUSH1 0x4
0x52e DUP1
0x52f DUP1
0x530 CALLDATALOAD
0x531 SWAP1
0x532 PUSH1 0x20
0x534 ADD
0x535 SWAP1
0x536 SWAP2
0x537 SWAP1
0x538 DUP1
0x539 CALLDATALOAD
0x53a SWAP1
0x53b PUSH1 0x20
0x53d ADD
0x53e SWAP1
0x53f DUP3
0x540 ADD
0x541 DUP1
0x542 CALLDATALOAD
0x543 SWAP1
0x544 PUSH1 0x20
0x546 ADD
0x547 SWAP2
0x548 SWAP1
0x549 SWAP2
0x54a SWAP3
0x54b SWAP1
0x54c DUP1
0x54d CALLDATALOAD
0x54e SWAP1
0x54f PUSH1 0x20
0x551 ADD
0x552 SWAP1
0x553 DUP3
0x554 ADD
0x555 DUP1
0x556 CALLDATALOAD
0x557 SWAP1
0x558 PUSH1 0x20
0x55a ADD
0x55b SWAP2
0x55c SWAP1
0x55d SWAP2
0x55e SWAP3
0x55f SWAP1
0x560 POP
0x561 POP
0x562 PUSH2 0x943
0x565 JUMP
0x566 JUMPDEST
0x567 STOP
0x568 JUMPDEST
0x569 CALLVALUE
0x56a ISZERO
0x56b PUSH2 0x2a2
0x56e JUMPI
---
0x524: V288 = 0x0
0x527: REVERT 0x0 0x0
0x528: JUMPDEST 
0x529: V289 = 0x295
0x52c: V290 = 0x4
0x530: V291 = CALLDATALOAD 0x4
0x532: V292 = 0x20
0x534: V293 = ADD 0x20 0x4
0x539: V294 = CALLDATALOAD 0x24
0x53b: V295 = 0x20
0x53d: V296 = ADD 0x20 0x24
0x540: V297 = ADD 0x4 V294
0x542: V298 = CALLDATALOAD V297
0x544: V299 = 0x20
0x546: V300 = ADD 0x20 V297
0x54d: V301 = CALLDATALOAD 0x44
0x54f: V302 = 0x20
0x551: V303 = ADD 0x20 0x44
0x554: V304 = ADD 0x4 V301
0x556: V305 = CALLDATALOAD V304
0x558: V306 = 0x20
0x55a: V307 = ADD 0x20 V304
0x562: V308 = 0x943
0x565: THROW 
0x566: JUMPDEST 
0x567: STOP 
0x568: JUMPDEST 
0x569: V309 = CALLVALUE
0x56a: V310 = ISZERO V309
0x56b: V311 = 0x2a2
0x56e: THROWI V310
---
Entry stack: []
Stack pops: 0
Stack additions: [V305, V307, V298, V300, V291, 0x295]
Exit stack: []

================================

Block 0x56f
[0x56f:0x597]
---
Predecessors: [0x524]
Successors: [0x598]
---
0x56f PUSH1 0x0
0x571 DUP1
0x572 REVERT
0x573 JUMPDEST
0x574 PUSH2 0x2aa
0x577 PUSH2 0xab6
0x57a JUMP
0x57b JUMPDEST
0x57c PUSH1 0x40
0x57e MLOAD
0x57f DUP1
0x580 DUP3
0x581 DUP2
0x582 MSTORE
0x583 PUSH1 0x20
0x585 ADD
0x586 SWAP2
0x587 POP
0x588 POP
0x589 PUSH1 0x40
0x58b MLOAD
0x58c DUP1
0x58d SWAP2
0x58e SUB
0x58f SWAP1
0x590 RETURN
0x591 JUMPDEST
0x592 CALLVALUE
0x593 ISZERO
0x594 PUSH2 0x2cb
0x597 JUMPI
---
0x56f: V312 = 0x0
0x572: REVERT 0x0 0x0
0x573: JUMPDEST 
0x574: V313 = 0x2aa
0x577: V314 = 0xab6
0x57a: THROW 
0x57b: JUMPDEST 
0x57c: V315 = 0x40
0x57e: V316 = M[0x40]
0x582: M[V316] = S0
0x583: V317 = 0x20
0x585: V318 = ADD 0x20 V316
0x589: V319 = 0x40
0x58b: V320 = M[0x40]
0x58e: V321 = SUB V318 V320
0x590: RETURN V320 V321
0x591: JUMPDEST 
0x592: V322 = CALLVALUE
0x593: V323 = ISZERO V322
0x594: V324 = 0x2cb
0x597: THROWI V323
---
Entry stack: []
Stack pops: 0
Stack additions: [0x2aa]
Exit stack: []

================================

Block 0x598
[0x598:0x5c0]
---
Predecessors: [0x56f]
Successors: [0x5c1]
---
0x598 PUSH1 0x0
0x59a DUP1
0x59b REVERT
0x59c JUMPDEST
0x59d PUSH2 0x2d3
0x5a0 PUSH2 0xabc
0x5a3 JUMP
0x5a4 JUMPDEST
0x5a5 PUSH1 0x40
0x5a7 MLOAD
0x5a8 DUP1
0x5a9 DUP3
0x5aa DUP2
0x5ab MSTORE
0x5ac PUSH1 0x20
0x5ae ADD
0x5af SWAP2
0x5b0 POP
0x5b1 POP
0x5b2 PUSH1 0x40
0x5b4 MLOAD
0x5b5 DUP1
0x5b6 SWAP2
0x5b7 SUB
0x5b8 SWAP1
0x5b9 RETURN
0x5ba JUMPDEST
0x5bb CALLVALUE
0x5bc ISZERO
0x5bd PUSH2 0x2f4
0x5c0 JUMPI
---
0x598: V325 = 0x0
0x59b: REVERT 0x0 0x0
0x59c: JUMPDEST 
0x59d: V326 = 0x2d3
0x5a0: V327 = 0xabc
0x5a3: THROW 
0x5a4: JUMPDEST 
0x5a5: V328 = 0x40
0x5a7: V329 = M[0x40]
0x5ab: M[V329] = S0
0x5ac: V330 = 0x20
0x5ae: V331 = ADD 0x20 V329
0x5b2: V332 = 0x40
0x5b4: V333 = M[0x40]
0x5b7: V334 = SUB V331 V333
0x5b9: RETURN V333 V334
0x5ba: JUMPDEST 
0x5bb: V335 = CALLVALUE
0x5bc: V336 = ISZERO V335
0x5bd: V337 = 0x2f4
0x5c0: THROWI V336
---
Entry stack: []
Stack pops: 0
Stack additions: [0x2d3]
Exit stack: []

================================

Block 0x5c1
[0x5c1:0x60f]
---
Predecessors: [0x598]
Successors: [0x610]
---
0x5c1 PUSH1 0x0
0x5c3 DUP1
0x5c4 REVERT
0x5c5 JUMPDEST
0x5c6 PUSH2 0x336
0x5c9 PUSH1 0x4
0x5cb DUP1
0x5cc DUP1
0x5cd CALLDATALOAD
0x5ce PUSH1 0x0
0x5d0 NOT
0x5d1 AND
0x5d2 SWAP1
0x5d3 PUSH1 0x20
0x5d5 ADD
0x5d6 SWAP1
0x5d7 SWAP2
0x5d8 SWAP1
0x5d9 DUP1
0x5da CALLDATALOAD
0x5db SWAP1
0x5dc PUSH1 0x20
0x5de ADD
0x5df SWAP1
0x5e0 SWAP2
0x5e1 SWAP1
0x5e2 DUP1
0x5e3 CALLDATALOAD
0x5e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5f9 AND
0x5fa SWAP1
0x5fb PUSH1 0x20
0x5fd ADD
0x5fe SWAP1
0x5ff SWAP2
0x600 SWAP1
0x601 POP
0x602 POP
0x603 PUSH2 0xac2
0x606 JUMP
0x607 JUMPDEST
0x608 STOP
0x609 JUMPDEST
0x60a CALLVALUE
0x60b ISZERO
0x60c PUSH2 0x343
0x60f JUMPI
---
0x5c1: V338 = 0x0
0x5c4: REVERT 0x0 0x0
0x5c5: JUMPDEST 
0x5c6: V339 = 0x336
0x5c9: V340 = 0x4
0x5cd: V341 = CALLDATALOAD 0x4
0x5ce: V342 = 0x0
0x5d0: V343 = NOT 0x0
0x5d1: V344 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V341
0x5d3: V345 = 0x20
0x5d5: V346 = ADD 0x20 0x4
0x5da: V347 = CALLDATALOAD 0x24
0x5dc: V348 = 0x20
0x5de: V349 = ADD 0x20 0x24
0x5e3: V350 = CALLDATALOAD 0x44
0x5e4: V351 = 0xffffffffffffffffffffffffffffffffffffffff
0x5f9: V352 = AND 0xffffffffffffffffffffffffffffffffffffffff V350
0x5fb: V353 = 0x20
0x5fd: V354 = ADD 0x20 0x44
0x603: V355 = 0xac2
0x606: THROW 
0x607: JUMPDEST 
0x608: STOP 
0x609: JUMPDEST 
0x60a: V356 = CALLVALUE
0x60b: V357 = ISZERO V356
0x60c: V358 = 0x343
0x60f: THROWI V357
---
Entry stack: []
Stack pops: 0
Stack additions: [V352, V347, V344, 0x336]
Exit stack: []

================================

Block 0x610
[0x610:0x6bb]
---
Predecessors: [0x5c1]
Successors: [0x6bc]
---
0x610 PUSH1 0x0
0x612 DUP1
0x613 REVERT
0x614 JUMPDEST
0x615 PUSH2 0x359
0x618 PUSH1 0x4
0x61a DUP1
0x61b DUP1
0x61c CALLDATALOAD
0x61d SWAP1
0x61e PUSH1 0x20
0x620 ADD
0x621 SWAP1
0x622 SWAP2
0x623 SWAP1
0x624 POP
0x625 POP
0x626 PUSH2 0xced
0x629 JUMP
0x62a JUMPDEST
0x62b PUSH1 0x40
0x62d MLOAD
0x62e DUP1
0x62f DUP6
0x630 DUP2
0x631 MSTORE
0x632 PUSH1 0x20
0x634 ADD
0x635 DUP5
0x636 PUSH1 0x0
0x638 NOT
0x639 AND
0x63a PUSH1 0x0
0x63c NOT
0x63d AND
0x63e DUP2
0x63f MSTORE
0x640 PUSH1 0x20
0x642 ADD
0x643 DUP4
0x644 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x659 AND
0x65a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x66f AND
0x670 DUP2
0x671 MSTORE
0x672 PUSH1 0x20
0x674 ADD
0x675 DUP3
0x676 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x68b AND
0x68c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a1 AND
0x6a2 DUP2
0x6a3 MSTORE
0x6a4 PUSH1 0x20
0x6a6 ADD
0x6a7 SWAP5
0x6a8 POP
0x6a9 POP
0x6aa POP
0x6ab POP
0x6ac POP
0x6ad PUSH1 0x40
0x6af MLOAD
0x6b0 DUP1
0x6b1 SWAP2
0x6b2 SUB
0x6b3 SWAP1
0x6b4 RETURN
0x6b5 JUMPDEST
0x6b6 CALLVALUE
0x6b7 ISZERO
0x6b8 PUSH2 0x3ef
0x6bb JUMPI
---
0x610: V359 = 0x0
0x613: REVERT 0x0 0x0
0x614: JUMPDEST 
0x615: V360 = 0x359
0x618: V361 = 0x4
0x61c: V362 = CALLDATALOAD 0x4
0x61e: V363 = 0x20
0x620: V364 = ADD 0x20 0x4
0x626: V365 = 0xced
0x629: THROW 
0x62a: JUMPDEST 
0x62b: V366 = 0x40
0x62d: V367 = M[0x40]
0x631: M[V367] = S3
0x632: V368 = 0x20
0x634: V369 = ADD 0x20 V367
0x636: V370 = 0x0
0x638: V371 = NOT 0x0
0x639: V372 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff S2
0x63a: V373 = 0x0
0x63c: V374 = NOT 0x0
0x63d: V375 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V372
0x63f: M[V369] = V375
0x640: V376 = 0x20
0x642: V377 = ADD 0x20 V369
0x644: V378 = 0xffffffffffffffffffffffffffffffffffffffff
0x659: V379 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x65a: V380 = 0xffffffffffffffffffffffffffffffffffffffff
0x66f: V381 = AND 0xffffffffffffffffffffffffffffffffffffffff V379
0x671: M[V377] = V381
0x672: V382 = 0x20
0x674: V383 = ADD 0x20 V377
0x676: V384 = 0xffffffffffffffffffffffffffffffffffffffff
0x68b: V385 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x68c: V386 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a1: V387 = AND 0xffffffffffffffffffffffffffffffffffffffff V385
0x6a3: M[V383] = V387
0x6a4: V388 = 0x20
0x6a6: V389 = ADD 0x20 V383
0x6ad: V390 = 0x40
0x6af: V391 = M[0x40]
0x6b2: V392 = SUB V389 V391
0x6b4: RETURN V391 V392
0x6b5: JUMPDEST 
0x6b6: V393 = CALLVALUE
0x6b7: V394 = ISZERO V393
0x6b8: V395 = 0x3ef
0x6bb: THROWI V394
---
Entry stack: []
Stack pops: 0
Stack additions: [V362, 0x359]
Exit stack: []

================================

Block 0x6bc
[0x6bc:0x6f4]
---
Predecessors: [0x610]
Successors: [0x6f5]
---
0x6bc PUSH1 0x0
0x6be DUP1
0x6bf REVERT
0x6c0 JUMPDEST
0x6c1 PUSH2 0x41b
0x6c4 PUSH1 0x4
0x6c6 DUP1
0x6c7 DUP1
0x6c8 CALLDATALOAD
0x6c9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6de AND
0x6df SWAP1
0x6e0 PUSH1 0x20
0x6e2 ADD
0x6e3 SWAP1
0x6e4 SWAP2
0x6e5 SWAP1
0x6e6 POP
0x6e7 POP
0x6e8 PUSH2 0xd5d
0x6eb JUMP
0x6ec JUMPDEST
0x6ed STOP
0x6ee JUMPDEST
0x6ef CALLVALUE
0x6f0 ISZERO
0x6f1 PUSH2 0x428
0x6f4 JUMPI
---
0x6bc: V396 = 0x0
0x6bf: REVERT 0x0 0x0
0x6c0: JUMPDEST 
0x6c1: V397 = 0x41b
0x6c4: V398 = 0x4
0x6c8: V399 = CALLDATALOAD 0x4
0x6c9: V400 = 0xffffffffffffffffffffffffffffffffffffffff
0x6de: V401 = AND 0xffffffffffffffffffffffffffffffffffffffff V399
0x6e0: V402 = 0x20
0x6e2: V403 = ADD 0x20 0x4
0x6e8: V404 = 0xd5d
0x6eb: THROW 
0x6ec: JUMPDEST 
0x6ed: STOP 
0x6ee: JUMPDEST 
0x6ef: V405 = CALLVALUE
0x6f0: V406 = ISZERO V405
0x6f1: V407 = 0x428
0x6f4: THROWI V406
---
Entry stack: []
Stack pops: 0
Stack additions: [V401, 0x41b]
Exit stack: []

================================

Block 0x6f5
[0x6f5:0x7c7]
---
Predecessors: [0x6bc]
Successors: [0x7c8]
---
0x6f5 PUSH1 0x0
0x6f7 DUP1
0x6f8 REVERT
0x6f9 JUMPDEST
0x6fa PUSH2 0x430
0x6fd PUSH2 0xeb2
0x700 JUMP
0x701 JUMPDEST
0x702 PUSH1 0x40
0x704 MLOAD
0x705 DUP1
0x706 DUP3
0x707 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x71c AND
0x71d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x732 AND
0x733 DUP2
0x734 MSTORE
0x735 PUSH1 0x20
0x737 ADD
0x738 SWAP2
0x739 POP
0x73a POP
0x73b PUSH1 0x40
0x73d MLOAD
0x73e DUP1
0x73f SWAP2
0x740 SUB
0x741 SWAP1
0x742 RETURN
0x743 JUMPDEST
0x744 PUSH1 0x0
0x746 DUP1
0x747 PUSH1 0x6
0x749 PUSH1 0x0
0x74b DUP6
0x74c DUP2
0x74d MSTORE
0x74e PUSH1 0x20
0x750 ADD
0x751 SWAP1
0x752 DUP2
0x753 MSTORE
0x754 PUSH1 0x20
0x756 ADD
0x757 PUSH1 0x0
0x759 SHA3
0x75a SWAP1
0x75b POP
0x75c DUP1
0x75d PUSH1 0x4
0x75f ADD
0x760 PUSH1 0x0
0x762 DUP5
0x763 DUP2
0x764 MSTORE
0x765 PUSH1 0x20
0x767 ADD
0x768 SWAP1
0x769 DUP2
0x76a MSTORE
0x76b PUSH1 0x20
0x76d ADD
0x76e PUSH1 0x0
0x770 SHA3
0x771 SLOAD
0x772 SWAP2
0x773 POP
0x774 POP
0x775 SWAP3
0x776 SWAP2
0x777 POP
0x778 POP
0x779 JUMP
0x77a JUMPDEST
0x77b PUSH1 0x2
0x77d PUSH1 0x0
0x77f SWAP1
0x780 SLOAD
0x781 SWAP1
0x782 PUSH2 0x100
0x785 EXP
0x786 SWAP1
0x787 DIV
0x788 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x79d AND
0x79e DUP2
0x79f JUMP
0x7a0 JUMPDEST
0x7a1 PUSH1 0x0
0x7a3 DUP1
0x7a4 PUSH1 0x0
0x7a6 DUP1
0x7a7 PUSH1 0x0
0x7a9 DUP1
0x7aa PUSH1 0x6
0x7ac PUSH1 0x0
0x7ae DUP10
0x7af DUP2
0x7b0 MSTORE
0x7b1 PUSH1 0x20
0x7b3 ADD
0x7b4 SWAP1
0x7b5 DUP2
0x7b6 MSTORE
0x7b7 PUSH1 0x20
0x7b9 ADD
0x7ba PUSH1 0x0
0x7bc SHA3
0x7bd SWAP5
0x7be POP
0x7bf PUSH1 0x0
0x7c1 NOT
0x7c2 SWAP4
0x7c3 POP
0x7c4 PUSH1 0x0
0x7c6 SWAP3
0x7c7 POP
---
0x6f5: V408 = 0x0
0x6f8: REVERT 0x0 0x0
0x6f9: JUMPDEST 
0x6fa: V409 = 0x430
0x6fd: V410 = 0xeb2
0x700: THROW 
0x701: JUMPDEST 
0x702: V411 = 0x40
0x704: V412 = M[0x40]
0x707: V413 = 0xffffffffffffffffffffffffffffffffffffffff
0x71c: V414 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x71d: V415 = 0xffffffffffffffffffffffffffffffffffffffff
0x732: V416 = AND 0xffffffffffffffffffffffffffffffffffffffff V414
0x734: M[V412] = V416
0x735: V417 = 0x20
0x737: V418 = ADD 0x20 V412
0x73b: V419 = 0x40
0x73d: V420 = M[0x40]
0x740: V421 = SUB V418 V420
0x742: RETURN V420 V421
0x743: JUMPDEST 
0x744: V422 = 0x0
0x747: V423 = 0x6
0x749: V424 = 0x0
0x74d: M[0x0] = S1
0x74e: V425 = 0x20
0x750: V426 = ADD 0x20 0x0
0x753: M[0x20] = 0x6
0x754: V427 = 0x20
0x756: V428 = ADD 0x20 0x20
0x757: V429 = 0x0
0x759: V430 = SHA3 0x0 0x40
0x75d: V431 = 0x4
0x75f: V432 = ADD 0x4 V430
0x760: V433 = 0x0
0x764: M[0x0] = S0
0x765: V434 = 0x20
0x767: V435 = ADD 0x20 0x0
0x76a: M[0x20] = V432
0x76b: V436 = 0x20
0x76d: V437 = ADD 0x20 0x20
0x76e: V438 = 0x0
0x770: V439 = SHA3 0x0 0x40
0x771: V440 = S[V439]
0x779: JUMP S2
0x77a: JUMPDEST 
0x77b: V441 = 0x2
0x77d: V442 = 0x0
0x780: V443 = S[0x2]
0x782: V444 = 0x100
0x785: V445 = EXP 0x100 0x0
0x787: V446 = DIV V443 0x1
0x788: V447 = 0xffffffffffffffffffffffffffffffffffffffff
0x79d: V448 = AND 0xffffffffffffffffffffffffffffffffffffffff V446
0x79f: JUMP S0
0x7a0: JUMPDEST 
0x7a1: V449 = 0x0
0x7a4: V450 = 0x0
0x7a7: V451 = 0x0
0x7aa: V452 = 0x6
0x7ac: V453 = 0x0
0x7b0: M[0x0] = S1
0x7b1: V454 = 0x20
0x7b3: V455 = ADD 0x20 0x0
0x7b6: M[0x20] = 0x6
0x7b7: V456 = 0x20
0x7b9: V457 = ADD 0x20 0x20
0x7ba: V458 = 0x0
0x7bc: V459 = SHA3 0x0 0x40
0x7bf: V460 = 0x0
0x7c1: V461 = NOT 0x0
0x7c4: V462 = 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: [0x430, V440, V448, S0, 0x0, 0x0, 0x0, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, V459, 0x0, S0, S1]
Exit stack: []

================================

Block 0x7c8
[0x7c8:0x7d7]
---
Predecessors: [0x6f5]
Successors: [0x7d8]
---
0x7c8 JUMPDEST
0x7c9 DUP5
0x7ca PUSH1 0x5
0x7cc ADD
0x7cd DUP1
0x7ce SLOAD
0x7cf SWAP1
0x7d0 POP
0x7d1 DUP4
0x7d2 LT
0x7d3 ISZERO
0x7d4 PUSH2 0x60f
0x7d7 JUMPI
---
0x7c8: JUMPDEST 
0x7ca: V463 = 0x5
0x7cc: V464 = ADD 0x5 V459
0x7ce: V465 = S[V464]
0x7d2: V466 = LT 0x0 V465
0x7d3: V467 = ISZERO V466
0x7d4: V468 = 0x60f
0x7d7: THROWI V467
---
Entry stack: [S7, S6, 0x0, V459, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [S7, S6, 0x0, V459, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, 0x0, 0x0, 0x0]

================================

Block 0x7d8
[0x7d8:0x7e6]
---
Predecessors: [0x7c8]
Successors: [0x7e7]
---
0x7d8 DUP5
0x7d9 PUSH1 0x5
0x7db ADD
0x7dc DUP4
0x7dd DUP2
0x7de SLOAD
0x7df DUP2
0x7e0 LT
0x7e1 ISZERO
0x7e2 ISZERO
0x7e3 PUSH2 0x517
0x7e6 JUMPI
---
0x7d9: V469 = 0x5
0x7db: V470 = ADD 0x5 V459
0x7de: V471 = S[V470]
0x7e0: V472 = LT 0x0 V471
0x7e1: V473 = ISZERO V472
0x7e2: V474 = ISZERO V473
0x7e3: V475 = 0x517
0x7e6: THROWI V474
---
Entry stack: [S7, S6, 0x0, V459, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V470, S2]
Exit stack: [S7, S6, 0x0, V459, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, 0x0, 0x0, 0x0, V470, 0x0]

================================

Block 0x7e7
[0x7e7:0x801]
---
Predecessors: [0x7d8]
Successors: [0x802]
---
0x7e7 INVALID
0x7e8 JUMPDEST
0x7e9 SWAP1
0x7ea PUSH1 0x0
0x7ec MSTORE
0x7ed PUSH1 0x20
0x7ef PUSH1 0x0
0x7f1 SHA3
0x7f2 SWAP1
0x7f3 PUSH1 0x2
0x7f5 MUL
0x7f6 ADD
0x7f7 PUSH1 0x0
0x7f9 ADD
0x7fa SLOAD
0x7fb DUP8
0x7fc EQ
0x7fd ISZERO
0x7fe PUSH2 0x55d
0x801 JUMPI
---
0x7e7: INVALID 
0x7e8: JUMPDEST 
0x7ea: V476 = 0x0
0x7ec: M[0x0] = S1
0x7ed: V477 = 0x20
0x7ef: V478 = 0x0
0x7f1: V479 = SHA3 0x0 0x20
0x7f3: V480 = 0x2
0x7f5: V481 = MUL 0x2 S0
0x7f6: V482 = ADD V481 V479
0x7f7: V483 = 0x0
0x7f9: V484 = ADD 0x0 V482
0x7fa: V485 = S[V484]
0x7fc: V486 = EQ S8 V485
0x7fd: V487 = ISZERO V486
0x7fe: V488 = 0x55d
0x801: THROWI V487
---
Entry stack: [S9, S8, 0x0, V459, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, 0x0, 0x0, 0x0, V470, 0x0]
Stack pops: 0
Stack additions: [S2, S3, S4, S5, S6, S7, S8]
Exit stack: []

================================

Block 0x802
[0x802:0x810]
---
Predecessors: [0x7e7]
Successors: [0x811]
---
0x802 DUP5
0x803 PUSH1 0x5
0x805 ADD
0x806 DUP4
0x807 DUP2
0x808 SLOAD
0x809 DUP2
0x80a LT
0x80b ISZERO
0x80c ISZERO
0x80d PUSH2 0x541
0x810 JUMPI
---
0x803: V489 = 0x5
0x805: V490 = ADD 0x5 S4
0x808: V491 = S[V490]
0x80a: V492 = LT S2 V491
0x80b: V493 = ISZERO V492
0x80c: V494 = ISZERO V493
0x80d: V495 = 0x541
0x810: THROWI V494
---
Entry stack: [S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V490, S2]
Exit stack: [S6, S5, S4, S3, S2, S1, S0, V490, S2]

================================

Block 0x811
[0x811:0x83d]
---
Predecessors: [0x802]
Successors: [0x83e]
---
0x811 INVALID
0x812 JUMPDEST
0x813 SWAP1
0x814 PUSH1 0x0
0x816 MSTORE
0x817 PUSH1 0x20
0x819 PUSH1 0x0
0x81b SHA3
0x81c SWAP1
0x81d PUSH1 0x2
0x81f MUL
0x820 ADD
0x821 PUSH1 0x1
0x823 ADD
0x824 SLOAD
0x825 SWAP4
0x826 POP
0x827 DUP4
0x828 SWAP6
0x829 POP
0x82a PUSH2 0x622
0x82d JUMP
0x82e JUMPDEST
0x82f DUP5
0x830 PUSH1 0x5
0x832 ADD
0x833 DUP4
0x834 DUP2
0x835 SLOAD
0x836 DUP2
0x837 LT
0x838 ISZERO
0x839 ISZERO
0x83a PUSH2 0x56e
0x83d JUMPI
---
0x811: INVALID 
0x812: JUMPDEST 
0x814: V496 = 0x0
0x816: M[0x0] = S1
0x817: V497 = 0x20
0x819: V498 = 0x0
0x81b: V499 = SHA3 0x0 0x20
0x81d: V500 = 0x2
0x81f: V501 = MUL 0x2 S0
0x820: V502 = ADD V501 V499
0x821: V503 = 0x1
0x823: V504 = ADD 0x1 V502
0x824: V505 = S[V504]
0x82a: V506 = 0x622
0x82d: THROW 
0x82e: JUMPDEST 
0x830: V507 = 0x5
0x832: V508 = ADD 0x5 S4
0x835: V509 = S[V508]
0x837: V510 = LT S2 V509
0x838: V511 = ISZERO V510
0x839: V512 = ISZERO V511
0x83a: V513 = 0x56e
0x83d: THROWI V512
---
Entry stack: [S8, S7, S6, S5, S4, S3, S2, V490, S0]
Stack pops: 0
Stack additions: [S2, S3, S4, V505, S6, V505, S2, V508, S0, S1, S2, S3, S4]
Exit stack: []

================================

Block 0x83e
[0x83e:0x858]
---
Predecessors: [0x811]
Successors: [0x859]
---
0x83e INVALID
0x83f JUMPDEST
0x840 SWAP1
0x841 PUSH1 0x0
0x843 MSTORE
0x844 PUSH1 0x20
0x846 PUSH1 0x0
0x848 SHA3
0x849 SWAP1
0x84a PUSH1 0x2
0x84c MUL
0x84d ADD
0x84e PUSH1 0x0
0x850 ADD
0x851 SLOAD
0x852 DUP8
0x853 GT
0x854 ISZERO
0x855 PUSH2 0x602
0x858 JUMPI
---
0x83e: INVALID 
0x83f: JUMPDEST 
0x841: V514 = 0x0
0x843: M[0x0] = S1
0x844: V515 = 0x20
0x846: V516 = 0x0
0x848: V517 = SHA3 0x0 0x20
0x84a: V518 = 0x2
0x84c: V519 = MUL 0x2 S0
0x84d: V520 = ADD V519 V517
0x84e: V521 = 0x0
0x850: V522 = ADD 0x0 V520
0x851: V523 = S[V522]
0x853: V524 = GT S8 V523
0x854: V525 = ISZERO V524
0x855: V526 = 0x602
0x858: THROWI V525
---
Entry stack: [S6, S5, S4, S3, S2, V508, S0]
Stack pops: 0
Stack additions: [S2, S3, S4, S5, S6, S7, S8]
Exit stack: []

================================

Block 0x859
[0x859:0x86a]
---
Predecessors: [0x83e]
Successors: [0x86b]
---
0x859 PUSH2 0x5de
0x85c DUP6
0x85d PUSH1 0x5
0x85f ADD
0x860 DUP5
0x861 DUP2
0x862 SLOAD
0x863 DUP2
0x864 LT
0x865 ISZERO
0x866 ISZERO
0x867 PUSH2 0x59b
0x86a JUMPI
---
0x859: V527 = 0x5de
0x85d: V528 = 0x5
0x85f: V529 = ADD 0x5 S4
0x862: V530 = S[V529]
0x864: V531 = LT S2 V530
0x865: V532 = ISZERO V531
0x866: V533 = ISZERO V532
0x867: V534 = 0x59b
0x86a: THROWI V533
---
Entry stack: [S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x5de, V529, S2]
Exit stack: [S6, S5, S4, S3, S2, S1, S0, 0x5de, V529, S2]

================================

Block 0x86b
[0x86b:0x88d]
---
Predecessors: [0x859]
Successors: [0x88e]
---
0x86b INVALID
0x86c JUMPDEST
0x86d SWAP1
0x86e PUSH1 0x0
0x870 MSTORE
0x871 PUSH1 0x20
0x873 PUSH1 0x0
0x875 SHA3
0x876 SWAP1
0x877 PUSH1 0x2
0x879 MUL
0x87a ADD
0x87b PUSH1 0x0
0x87d ADD
0x87e SLOAD
0x87f DUP7
0x880 PUSH1 0x5
0x882 ADD
0x883 DUP6
0x884 DUP2
0x885 SLOAD
0x886 DUP2
0x887 LT
0x888 ISZERO
0x889 ISZERO
0x88a PUSH2 0x5be
0x88d JUMPI
---
0x86b: INVALID 
0x86c: JUMPDEST 
0x86e: V535 = 0x0
0x870: M[0x0] = S1
0x871: V536 = 0x20
0x873: V537 = 0x0
0x875: V538 = SHA3 0x0 0x20
0x877: V539 = 0x2
0x879: V540 = MUL 0x2 S0
0x87a: V541 = ADD V540 V538
0x87b: V542 = 0x0
0x87d: V543 = ADD 0x0 V541
0x87e: V544 = S[V543]
0x880: V545 = 0x5
0x882: V546 = ADD 0x5 S7
0x885: V547 = S[V546]
0x887: V548 = LT S5 V547
0x888: V549 = ISZERO V548
0x889: V550 = ISZERO V549
0x88a: V551 = 0x5be
0x88d: THROWI V550
---
Entry stack: [S9, S8, S7, S6, S5, S4, S3, 0x5de, V529, S0]
Stack pops: 0
Stack additions: [S5, V546, V544, S2, S3, S4, S5, S6, S7]
Exit stack: []

================================

Block 0x88e
[0x88e:0x8ce]
---
Predecessors: [0x86b]
Successors: [0x8cf]
---
0x88e INVALID
0x88f JUMPDEST
0x890 SWAP1
0x891 PUSH1 0x0
0x893 MSTORE
0x894 PUSH1 0x20
0x896 PUSH1 0x0
0x898 SHA3
0x899 SWAP1
0x89a PUSH1 0x2
0x89c MUL
0x89d ADD
0x89e PUSH1 0x1
0x8a0 ADD
0x8a1 SLOAD
0x8a2 PUSH2 0xed8
0x8a5 SWAP1
0x8a6 SWAP2
0x8a7 SWAP1
0x8a8 PUSH4 0xffffffff
0x8ad AND
0x8ae JUMP
0x8af JUMPDEST
0x8b0 SWAP2
0x8b1 POP
0x8b2 PUSH2 0x5f3
0x8b5 DUP3
0x8b6 DUP9
0x8b7 PUSH2 0xef3
0x8ba SWAP1
0x8bb SWAP2
0x8bc SWAP1
0x8bd PUSH4 0xffffffff
0x8c2 AND
0x8c3 JUMP
0x8c4 JUMPDEST
0x8c5 SWAP1
0x8c6 POP
0x8c7 DUP4
0x8c8 DUP2
0x8c9 LT
0x8ca ISZERO
0x8cb PUSH2 0x601
0x8ce JUMPI
---
0x88e: INVALID 
0x88f: JUMPDEST 
0x891: V552 = 0x0
0x893: M[0x0] = S1
0x894: V553 = 0x20
0x896: V554 = 0x0
0x898: V555 = SHA3 0x0 0x20
0x89a: V556 = 0x2
0x89c: V557 = MUL 0x2 S0
0x89d: V558 = ADD V557 V555
0x89e: V559 = 0x1
0x8a0: V560 = ADD 0x1 V558
0x8a1: V561 = S[V560]
0x8a2: V562 = 0xed8
0x8a8: V563 = 0xffffffff
0x8ad: V564 = AND 0xffffffff 0xed8
0x8ae: THROW 
0x8af: JUMPDEST 
0x8b2: V565 = 0x5f3
0x8b7: V566 = 0xef3
0x8bd: V567 = 0xffffffff
0x8c2: V568 = AND 0xffffffff 0xef3
0x8c3: THROW 
0x8c4: JUMPDEST 
0x8c9: V569 = LT S0 S4
0x8ca: V570 = ISZERO V569
0x8cb: V571 = 0x601
0x8ce: THROWI V570
---
Entry stack: [S8, S7, S6, S5, S4, S3, V544, V546, S0]
Stack pops: 0
Stack additions: [S2, V561, S0, S7, 0x5f3, S1, S0, S3, S4, S5, S6, S7, S0, S2, S3, S4]
Exit stack: []

================================

Block 0x8cf
[0x8cf:0x8d1]
---
Predecessors: [0x88e]
Successors: [0x8d2]
---
0x8cf DUP1
0x8d0 SWAP4
0x8d1 POP
---
0x8cf: NOP 
---
Entry stack: [S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S0, S2, S1, S0]
Exit stack: [S0, S2, S1, S0]

================================

Block 0x8d2
[0x8d2:0x8d2]
---
Predecessors: [0x8cf]
Successors: [0x8d3]
---
0x8d2 JUMPDEST
---
0x8d2: JUMPDEST 
---
Entry stack: [S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S3, S2, S1, S0]

================================

Block 0x8d3
[0x8d3:0x8ea]
---
Predecessors: [0x8d2]
Successors: [0x8eb]
---
0x8d3 JUMPDEST
0x8d4 DUP3
0x8d5 DUP1
0x8d6 PUSH1 0x1
0x8d8 ADD
0x8d9 SWAP4
0x8da POP
0x8db POP
0x8dc PUSH2 0x4f7
0x8df JUMP
0x8e0 JUMPDEST
0x8e1 PUSH1 0x0
0x8e3 NOT
0x8e4 DUP5
0x8e5 EQ
0x8e6 ISZERO
0x8e7 PUSH2 0x61e
0x8ea JUMPI
---
0x8d3: JUMPDEST 
0x8d6: V572 = 0x1
0x8d8: V573 = ADD 0x1 S2
0x8dc: V574 = 0x4f7
0x8df: THROW 
0x8e0: JUMPDEST 
0x8e1: V575 = 0x0
0x8e3: V576 = NOT 0x0
0x8e5: V577 = EQ S3 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x8e6: V578 = ISZERO V577
0x8e7: V579 = 0x61e
0x8ea: THROWI V578
---
Entry stack: [S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S0, S1, S2, S3]
Exit stack: []

================================

Block 0x8eb
[0x8eb:0x8ee]
---
Predecessors: [0x8d3]
Successors: [0x8ef]
---
0x8eb PUSH1 0x0
0x8ed SWAP4
0x8ee POP
---
0x8eb: V580 = 0x0
---
Entry stack: [S3, S2, S1, S0]
Stack pops: 4
Stack additions: [0x0, S2, S1, S0]
Exit stack: [0x0, S2, S1, S0]

================================

Block 0x8ef
[0x8ef:0x8f2]
---
Predecessors: [0x8eb]
Successors: [0x8f3]
---
0x8ef JUMPDEST
0x8f0 DUP4
0x8f1 SWAP6
0x8f2 POP
---
0x8ef: JUMPDEST 
---
Entry stack: [0x0, S2, S1, S0]
Stack pops: 6
Stack additions: [S3, S4, S3, S2, S1, S0]
Exit stack: [0x0, S0, 0x0, S2, S1, S0]

================================

Block 0x8f3
[0x8f3:0x954]
---
Predecessors: [0x8ef]
Successors: [0x955]
---
0x8f3 JUMPDEST
0x8f4 POP
0x8f5 POP
0x8f6 POP
0x8f7 POP
0x8f8 POP
0x8f9 SWAP3
0x8fa SWAP2
0x8fb POP
0x8fc POP
0x8fd JUMP
0x8fe JUMPDEST
0x8ff PUSH1 0x0
0x901 DUP1
0x902 SWAP1
0x903 SLOAD
0x904 SWAP1
0x905 PUSH2 0x100
0x908 EXP
0x909 SWAP1
0x90a DIV
0x90b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x920 AND
0x921 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x936 AND
0x937 CALLER
0x938 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x94d AND
0x94e EQ
0x94f ISZERO
0x950 ISZERO
0x951 PUSH2 0x688
0x954 JUMPI
---
0x8f3: JUMPDEST 
0x8fd: JUMP S8
0x8fe: JUMPDEST 
0x8ff: V581 = 0x0
0x903: V582 = S[0x0]
0x905: V583 = 0x100
0x908: V584 = EXP 0x100 0x0
0x90a: V585 = DIV V582 0x1
0x90b: V586 = 0xffffffffffffffffffffffffffffffffffffffff
0x920: V587 = AND 0xffffffffffffffffffffffffffffffffffffffff V585
0x921: V588 = 0xffffffffffffffffffffffffffffffffffffffff
0x936: V589 = AND 0xffffffffffffffffffffffffffffffffffffffff V587
0x937: V590 = CALLER
0x938: V591 = 0xffffffffffffffffffffffffffffffffffffffff
0x94d: V592 = AND 0xffffffffffffffffffffffffffffffffffffffff V590
0x94e: V593 = EQ V592 V589
0x94f: V594 = ISZERO V593
0x950: V595 = ISZERO V594
0x951: V596 = 0x688
0x954: THROWI V595
---
Entry stack: [0x0, S4, 0x0, S2, S1, S0]
Stack pops: 17
Stack additions: []
Exit stack: []

================================

Block 0x955
[0x955:0x98e]
---
Predecessors: [0x8f3]
Successors: [0x98f]
---
0x955 PUSH1 0x0
0x957 DUP1
0x958 REVERT
0x959 JUMPDEST
0x95a DUP1
0x95b PUSH1 0x4
0x95d DUP2
0x95e SWAP1
0x95f SSTORE
0x960 POP
0x961 POP
0x962 JUMP
0x963 JUMPDEST
0x964 PUSH1 0x0
0x966 DUP1
0x967 PUSH1 0x0
0x969 DUP1
0x96a PUSH1 0x0
0x96c DUP1
0x96d PUSH1 0x6
0x96f PUSH1 0x0
0x971 DUP11
0x972 DUP2
0x973 MSTORE
0x974 PUSH1 0x20
0x976 ADD
0x977 SWAP1
0x978 DUP2
0x979 MSTORE
0x97a PUSH1 0x20
0x97c ADD
0x97d PUSH1 0x0
0x97f SHA3
0x980 SWAP6
0x981 POP
0x982 DUP9
0x983 DUP7
0x984 PUSH1 0x0
0x986 ADD
0x987 SLOAD
0x988 EQ
0x989 ISZERO
0x98a ISZERO
0x98b PUSH2 0x6c2
0x98e JUMPI
---
0x955: V597 = 0x0
0x958: REVERT 0x0 0x0
0x959: JUMPDEST 
0x95b: V598 = 0x4
0x95f: S[0x4] = S0
0x962: JUMP S1
0x963: JUMPDEST 
0x964: V599 = 0x0
0x967: V600 = 0x0
0x96a: V601 = 0x0
0x96d: V602 = 0x6
0x96f: V603 = 0x0
0x973: M[0x0] = S2
0x974: V604 = 0x20
0x976: V605 = ADD 0x20 0x0
0x979: M[0x20] = 0x6
0x97a: V606 = 0x20
0x97c: V607 = ADD 0x20 0x20
0x97d: V608 = 0x0
0x97f: V609 = SHA3 0x0 0x40
0x984: V610 = 0x0
0x986: V611 = ADD 0x0 V609
0x987: V612 = S[V611]
0x988: V613 = EQ V612 S2
0x989: V614 = ISZERO V613
0x98a: V615 = ISZERO V614
0x98b: V616 = 0x6c2
0x98e: THROWI V615
---
Entry stack: []
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, V609, S0, S1, S2]
Exit stack: []

================================

Block 0x98f
[0x98f:0x99e]
---
Predecessors: [0x955]
Successors: [0x99f]
---
0x98f PUSH1 0x0
0x991 DUP1
0x992 REVERT
0x993 JUMPDEST
0x994 PUSH1 0x1
0x996 DUP8
0x997 LT
0x998 ISZERO
0x999 ISZERO
0x99a ISZERO
0x99b PUSH2 0x6d2
0x99e JUMPI
---
0x98f: V617 = 0x0
0x992: REVERT 0x0 0x0
0x993: JUMPDEST 
0x994: V618 = 0x1
0x997: V619 = LT S6 0x1
0x998: V620 = ISZERO V619
0x999: V621 = ISZERO V620
0x99a: V622 = ISZERO V621
0x99b: V623 = 0x6d2
0x99e: THROWI V622
---
Entry stack: [S8, S7, S6, V609, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [S0, S1, S2, S3, S4, S5, S6]
Exit stack: []

================================

Block 0x99f
[0x99f:0x9b9]
---
Predecessors: [0x98f]
Successors: [0x9ba]
---
0x99f PUSH1 0x0
0x9a1 DUP1
0x9a2 REVERT
0x9a3 JUMPDEST
0x9a4 PUSH2 0x6dc
0x9a7 DUP10
0x9a8 DUP9
0x9a9 PUSH2 0x4cf
0x9ac JUMP
0x9ad JUMPDEST
0x9ae SWAP5
0x9af POP
0x9b0 PUSH1 0x0
0x9b2 DUP6
0x9b3 GT
0x9b4 ISZERO
0x9b5 ISZERO
0x9b6 PUSH2 0x6ed
0x9b9 JUMPI
---
0x99f: V624 = 0x0
0x9a2: REVERT 0x0 0x0
0x9a3: JUMPDEST 
0x9a4: V625 = 0x6dc
0x9a9: V626 = 0x4cf
0x9ac: THROW 
0x9ad: JUMPDEST 
0x9b0: V627 = 0x0
0x9b3: V628 = GT S0 0x0
0x9b4: V629 = ISZERO V628
0x9b5: V630 = ISZERO V629
0x9b6: V631 = 0x6ed
0x9b9: THROWI V630
---
Entry stack: [S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [S6, S8, 0x6dc, S0, S1, S2, S3, S4, S5, S6, S7, S8, S1, S2, S3, S4, S0]
Exit stack: []

================================

Block 0x9ba
[0x9ba:0x9de]
---
Predecessors: [0x99f]
Successors: [0x9df]
---
0x9ba PUSH1 0x0
0x9bc DUP1
0x9bd REVERT
0x9be JUMPDEST
0x9bf DUP6
0x9c0 PUSH1 0x4
0x9c2 ADD
0x9c3 PUSH1 0x0
0x9c5 DUP10
0x9c6 DUP2
0x9c7 MSTORE
0x9c8 PUSH1 0x20
0x9ca ADD
0x9cb SWAP1
0x9cc DUP2
0x9cd MSTORE
0x9ce PUSH1 0x20
0x9d0 ADD
0x9d1 PUSH1 0x0
0x9d3 SHA3
0x9d4 SLOAD
0x9d5 SWAP4
0x9d6 POP
0x9d7 TIMESTAMP
0x9d8 DUP5
0x9d9 LT
0x9da ISZERO
0x9db PUSH2 0x711
0x9de JUMPI
---
0x9ba: V632 = 0x0
0x9bd: REVERT 0x0 0x0
0x9be: JUMPDEST 
0x9c0: V633 = 0x4
0x9c2: V634 = ADD 0x4 S5
0x9c3: V635 = 0x0
0x9c7: M[0x0] = S7
0x9c8: V636 = 0x20
0x9ca: V637 = ADD 0x20 0x0
0x9cd: M[0x20] = V634
0x9ce: V638 = 0x20
0x9d0: V639 = ADD 0x20 0x20
0x9d1: V640 = 0x0
0x9d3: V641 = SHA3 0x0 0x40
0x9d4: V642 = S[V641]
0x9d7: V643 = TIMESTAMP
0x9d9: V644 = LT V642 V643
0x9da: V645 = ISZERO V644
0x9db: V646 = 0x711
0x9de: THROWI V645
---
Entry stack: [S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [S0, S1, S2, V642, S4, S5, S6, S7]
Exit stack: []

================================

Block 0x9df
[0x9df:0x9e1]
---
Predecessors: [0x9ba]
Successors: [0x9e2]
---
0x9df TIMESTAMP
0x9e0 SWAP4
0x9e1 POP
---
0x9df: V647 = TIMESTAMP
---
Entry stack: [S7, S6, S5, S4, V642, S2, S1, S0]
Stack pops: 4
Stack additions: [V647, S2, S1, S0]
Exit stack: [S7, S6, S5, S4, V647, S2, S1, S0]

================================

Block 0x9e2
[0x9e2:0xb5d]
---
Predecessors: [0x9df]
Successors: [0xb5e]
---
0x9e2 JUMPDEST
0x9e3 PUSH2 0x739
0x9e6 PUSH2 0x72a
0x9e9 PUSH3 0x15180
0x9ed DUP10
0x9ee PUSH2 0xef3
0x9f1 SWAP1
0x9f2 SWAP2
0x9f3 SWAP1
0x9f4 PUSH4 0xffffffff
0x9f9 AND
0x9fa JUMP
0x9fb JUMPDEST
0x9fc DUP6
0x9fd PUSH2 0xf2e
0xa00 SWAP1
0xa01 SWAP2
0xa02 SWAP1
0xa03 PUSH4 0xffffffff
0xa08 AND
0xa09 JUMP
0xa0a JUMPDEST
0xa0b SWAP3
0xa0c POP
0xa0d DUP3
0xa0e DUP7
0xa0f PUSH1 0x4
0xa11 ADD
0xa12 PUSH1 0x0
0xa14 DUP11
0xa15 DUP2
0xa16 MSTORE
0xa17 PUSH1 0x20
0xa19 ADD
0xa1a SWAP1
0xa1b DUP2
0xa1c MSTORE
0xa1d PUSH1 0x20
0xa1f ADD
0xa20 PUSH1 0x0
0xa22 SHA3
0xa23 DUP2
0xa24 SWAP1
0xa25 SSTORE
0xa26 POP
0xa27 PUSH2 0x75e
0xa2a DUP6
0xa2b PUSH2 0xf4c
0xa2e JUMP
0xa2f JUMPDEST
0xa30 SWAP2
0xa31 POP
0xa32 PUSH2 0x773
0xa35 DUP3
0xa36 DUP7
0xa37 PUSH2 0x10be
0xa3a SWAP1
0xa3b SWAP2
0xa3c SWAP1
0xa3d PUSH4 0xffffffff
0xa42 AND
0xa43 JUMP
0xa44 JUMPDEST
0xa45 SWAP1
0xa46 POP
0xa47 PUSH1 0x1
0xa49 PUSH1 0x0
0xa4b SWAP1
0xa4c SLOAD
0xa4d SWAP1
0xa4e PUSH2 0x100
0xa51 EXP
0xa52 SWAP1
0xa53 DIV
0xa54 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa69 AND
0xa6a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa7f AND
0xa80 PUSH4 0x23b872dd
0xa85 CALLER
0xa86 DUP9
0xa87 PUSH1 0x2
0xa89 ADD
0xa8a PUSH1 0x0
0xa8c SWAP1
0xa8d SLOAD
0xa8e SWAP1
0xa8f PUSH2 0x100
0xa92 EXP
0xa93 SWAP1
0xa94 DIV
0xa95 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaaa AND
0xaab DUP5
0xaac PUSH1 0x40
0xaae MLOAD
0xaaf DUP5
0xab0 PUSH4 0xffffffff
0xab5 AND
0xab6 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xad4 MUL
0xad5 DUP2
0xad6 MSTORE
0xad7 PUSH1 0x4
0xad9 ADD
0xada DUP1
0xadb DUP5
0xadc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaf1 AND
0xaf2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb07 AND
0xb08 DUP2
0xb09 MSTORE
0xb0a PUSH1 0x20
0xb0c ADD
0xb0d DUP4
0xb0e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb23 AND
0xb24 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb39 AND
0xb3a DUP2
0xb3b MSTORE
0xb3c PUSH1 0x20
0xb3e ADD
0xb3f DUP3
0xb40 DUP2
0xb41 MSTORE
0xb42 PUSH1 0x20
0xb44 ADD
0xb45 SWAP4
0xb46 POP
0xb47 POP
0xb48 POP
0xb49 POP
0xb4a PUSH1 0x20
0xb4c PUSH1 0x40
0xb4e MLOAD
0xb4f DUP1
0xb50 DUP4
0xb51 SUB
0xb52 DUP2
0xb53 PUSH1 0x0
0xb55 DUP8
0xb56 DUP1
0xb57 EXTCODESIZE
0xb58 ISZERO
0xb59 ISZERO
0xb5a PUSH2 0x891
0xb5d JUMPI
---
0x9e2: JUMPDEST 
0x9e3: V648 = 0x739
0x9e6: V649 = 0x72a
0x9e9: V650 = 0x15180
0x9ee: V651 = 0xef3
0x9f4: V652 = 0xffffffff
0x9f9: V653 = AND 0xffffffff 0xef3
0x9fa: THROW 
0x9fb: JUMPDEST 
0x9fd: V654 = 0xf2e
0xa03: V655 = 0xffffffff
0xa08: V656 = AND 0xffffffff 0xf2e
0xa09: THROW 
0xa0a: JUMPDEST 
0xa0f: V657 = 0x4
0xa11: V658 = ADD 0x4 S6
0xa12: V659 = 0x0
0xa16: M[0x0] = S8
0xa17: V660 = 0x20
0xa19: V661 = ADD 0x20 0x0
0xa1c: M[0x20] = V658
0xa1d: V662 = 0x20
0xa1f: V663 = ADD 0x20 0x20
0xa20: V664 = 0x0
0xa22: V665 = SHA3 0x0 0x40
0xa25: S[V665] = S0
0xa27: V666 = 0x75e
0xa2b: V667 = 0xf4c
0xa2e: THROW 
0xa2f: JUMPDEST 
0xa32: V668 = 0x773
0xa37: V669 = 0x10be
0xa3d: V670 = 0xffffffff
0xa42: V671 = AND 0xffffffff 0x10be
0xa43: THROW 
0xa44: JUMPDEST 
0xa47: V672 = 0x1
0xa49: V673 = 0x0
0xa4c: V674 = S[0x1]
0xa4e: V675 = 0x100
0xa51: V676 = EXP 0x100 0x0
0xa53: V677 = DIV V674 0x1
0xa54: V678 = 0xffffffffffffffffffffffffffffffffffffffff
0xa69: V679 = AND 0xffffffffffffffffffffffffffffffffffffffff V677
0xa6a: V680 = 0xffffffffffffffffffffffffffffffffffffffff
0xa7f: V681 = AND 0xffffffffffffffffffffffffffffffffffffffff V679
0xa80: V682 = 0x23b872dd
0xa85: V683 = CALLER
0xa87: V684 = 0x2
0xa89: V685 = ADD 0x2 S6
0xa8a: V686 = 0x0
0xa8d: V687 = S[V685]
0xa8f: V688 = 0x100
0xa92: V689 = EXP 0x100 0x0
0xa94: V690 = DIV V687 0x1
0xa95: V691 = 0xffffffffffffffffffffffffffffffffffffffff
0xaaa: V692 = AND 0xffffffffffffffffffffffffffffffffffffffff V690
0xaac: V693 = 0x40
0xaae: V694 = M[0x40]
0xab0: V695 = 0xffffffff
0xab5: V696 = AND 0xffffffff 0x23b872dd
0xab6: V697 = 0x100000000000000000000000000000000000000000000000000000000
0xad4: V698 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x23b872dd
0xad6: M[V694] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0xad7: V699 = 0x4
0xad9: V700 = ADD 0x4 V694
0xadc: V701 = 0xffffffffffffffffffffffffffffffffffffffff
0xaf1: V702 = AND 0xffffffffffffffffffffffffffffffffffffffff V683
0xaf2: V703 = 0xffffffffffffffffffffffffffffffffffffffff
0xb07: V704 = AND 0xffffffffffffffffffffffffffffffffffffffff V702
0xb09: M[V700] = V704
0xb0a: V705 = 0x20
0xb0c: V706 = ADD 0x20 V700
0xb0e: V707 = 0xffffffffffffffffffffffffffffffffffffffff
0xb23: V708 = AND 0xffffffffffffffffffffffffffffffffffffffff V692
0xb24: V709 = 0xffffffffffffffffffffffffffffffffffffffff
0xb39: V710 = AND 0xffffffffffffffffffffffffffffffffffffffff V708
0xb3b: M[V706] = V710
0xb3c: V711 = 0x20
0xb3e: V712 = ADD 0x20 V706
0xb41: M[V712] = S0
0xb42: V713 = 0x20
0xb44: V714 = ADD 0x20 V712
0xb4a: V715 = 0x20
0xb4c: V716 = 0x40
0xb4e: V717 = M[0x40]
0xb51: V718 = SUB V714 V717
0xb53: V719 = 0x0
0xb57: V720 = EXTCODESIZE V681
0xb58: V721 = ISZERO V720
0xb59: V722 = ISZERO V721
0xb5a: V723 = 0x891
0xb5d: THROWI V722
---
Entry stack: [S7, S6, S5, S4, V647, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S5, 0x75e, S1, S0, V681, 0x0, V717, V718, V717, 0x20, V714, 0x23b872dd, V681, S0, S2, S3, S4, S5, S6]
Exit stack: []

================================

Block 0xb5e
[0xb5e:0xb6a]
---
Predecessors: [0x9e2]
Successors: [0xb6b]
---
0xb5e PUSH1 0x0
0xb60 DUP1
0xb61 REVERT
0xb62 JUMPDEST
0xb63 GAS
0xb64 CALL
0xb65 ISZERO
0xb66 ISZERO
0xb67 PUSH2 0x89e
0xb6a JUMPI
---
0xb5e: V724 = 0x0
0xb61: REVERT 0x0 0x0
0xb62: JUMPDEST 
0xb63: V725 = GAS
0xb64: V726 = CALL V725 S0 S1 S2 S3 S4 S5
0xb65: V727 = ISZERO V726
0xb66: V728 = ISZERO V727
0xb67: V729 = 0x89e
0xb6a: THROWI V728
---
Entry stack: [S14, S13, S12, S11, S10, S9, V681, 0x23b872dd, V714, 0x20, V717, V718, V717, 0x0, V681]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb6b
[0xb6b:0xb7f]
---
Predecessors: [0xb5e]
Successors: [0xb80]
---
0xb6b PUSH1 0x0
0xb6d DUP1
0xb6e REVERT
0xb6f JUMPDEST
0xb70 POP
0xb71 POP
0xb72 POP
0xb73 PUSH1 0x40
0xb75 MLOAD
0xb76 DUP1
0xb77 MLOAD
0xb78 SWAP1
0xb79 POP
0xb7a ISZERO
0xb7b ISZERO
0xb7c PUSH2 0x8b3
0xb7f JUMPI
---
0xb6b: V730 = 0x0
0xb6e: REVERT 0x0 0x0
0xb6f: JUMPDEST 
0xb73: V731 = 0x40
0xb75: V732 = M[0x40]
0xb77: V733 = M[V732]
0xb7a: V734 = ISZERO V733
0xb7b: V735 = ISZERO V734
0xb7c: V736 = 0x8b3
0xb7f: THROWI V735
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb80
[0xb80:0xc85]
---
Predecessors: [0xb6b]
Successors: [0xc86]
---
0xb80 PUSH1 0x0
0xb82 DUP1
0xb83 REVERT
0xb84 JUMPDEST
0xb85 DUP8
0xb86 DUP10
0xb87 CALLER
0xb88 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb9d AND
0xb9e PUSH32 0x197b99d70eec416626e54340e5f9a493b8f2a7d23ba920d1ca30b524b3ae6675
0xbbf DUP11
0xbc0 DUP10
0xbc1 DUP9
0xbc2 PUSH1 0x40
0xbc4 MLOAD
0xbc5 DUP1
0xbc6 DUP5
0xbc7 DUP2
0xbc8 MSTORE
0xbc9 PUSH1 0x20
0xbcb ADD
0xbcc DUP4
0xbcd DUP2
0xbce MSTORE
0xbcf PUSH1 0x20
0xbd1 ADD
0xbd2 DUP3
0xbd3 DUP2
0xbd4 MSTORE
0xbd5 PUSH1 0x20
0xbd7 ADD
0xbd8 SWAP4
0xbd9 POP
0xbda POP
0xbdb POP
0xbdc POP
0xbdd PUSH1 0x40
0xbdf MLOAD
0xbe0 DUP1
0xbe1 SWAP2
0xbe2 SUB
0xbe3 SWAP1
0xbe4 LOG4
0xbe5 POP
0xbe6 POP
0xbe7 POP
0xbe8 POP
0xbe9 POP
0xbea POP
0xbeb POP
0xbec POP
0xbed POP
0xbee JUMP
0xbef JUMPDEST
0xbf0 PUSH1 0x0
0xbf2 DUP1
0xbf3 SWAP1
0xbf4 SLOAD
0xbf5 SWAP1
0xbf6 PUSH2 0x100
0xbf9 EXP
0xbfa SWAP1
0xbfb DIV
0xbfc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc11 AND
0xc12 DUP2
0xc13 JUMP
0xc14 JUMPDEST
0xc15 PUSH1 0x0
0xc17 DUP1
0xc18 PUSH1 0x6
0xc1a PUSH1 0x0
0xc1c DUP9
0xc1d DUP2
0xc1e MSTORE
0xc1f PUSH1 0x20
0xc21 ADD
0xc22 SWAP1
0xc23 DUP2
0xc24 MSTORE
0xc25 PUSH1 0x20
0xc27 ADD
0xc28 PUSH1 0x0
0xc2a SHA3
0xc2b SWAP2
0xc2c POP
0xc2d CALLER
0xc2e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc43 AND
0xc44 DUP3
0xc45 PUSH1 0x3
0xc47 ADD
0xc48 PUSH1 0x0
0xc4a SWAP1
0xc4b SLOAD
0xc4c SWAP1
0xc4d PUSH2 0x100
0xc50 EXP
0xc51 SWAP1
0xc52 DIV
0xc53 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc68 AND
0xc69 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc7e AND
0xc7f EQ
0xc80 ISZERO
0xc81 ISZERO
0xc82 PUSH2 0x9b9
0xc85 JUMPI
---
0xb80: V737 = 0x0
0xb83: REVERT 0x0 0x0
0xb84: JUMPDEST 
0xb87: V738 = CALLER
0xb88: V739 = 0xffffffffffffffffffffffffffffffffffffffff
0xb9d: V740 = AND 0xffffffffffffffffffffffffffffffffffffffff V738
0xb9e: V741 = 0x197b99d70eec416626e54340e5f9a493b8f2a7d23ba920d1ca30b524b3ae6675
0xbc2: V742 = 0x40
0xbc4: V743 = M[0x40]
0xbc8: M[V743] = S6
0xbc9: V744 = 0x20
0xbcb: V745 = ADD 0x20 V743
0xbce: M[V745] = S4
0xbcf: V746 = 0x20
0xbd1: V747 = ADD 0x20 V745
0xbd4: M[V747] = S2
0xbd5: V748 = 0x20
0xbd7: V749 = ADD 0x20 V747
0xbdd: V750 = 0x40
0xbdf: V751 = M[0x40]
0xbe2: V752 = SUB V749 V751
0xbe4: LOG V751 V752 0x197b99d70eec416626e54340e5f9a493b8f2a7d23ba920d1ca30b524b3ae6675 V740 S8 S7
0xbee: JUMP S9
0xbef: JUMPDEST 
0xbf0: V753 = 0x0
0xbf4: V754 = S[0x0]
0xbf6: V755 = 0x100
0xbf9: V756 = EXP 0x100 0x0
0xbfb: V757 = DIV V754 0x1
0xbfc: V758 = 0xffffffffffffffffffffffffffffffffffffffff
0xc11: V759 = AND 0xffffffffffffffffffffffffffffffffffffffff V757
0xc13: JUMP S0
0xc14: JUMPDEST 
0xc15: V760 = 0x0
0xc18: V761 = 0x6
0xc1a: V762 = 0x0
0xc1e: M[0x0] = S4
0xc1f: V763 = 0x20
0xc21: V764 = ADD 0x20 0x0
0xc24: M[0x20] = 0x6
0xc25: V765 = 0x20
0xc27: V766 = ADD 0x20 0x20
0xc28: V767 = 0x0
0xc2a: V768 = SHA3 0x0 0x40
0xc2d: V769 = CALLER
0xc2e: V770 = 0xffffffffffffffffffffffffffffffffffffffff
0xc43: V771 = AND 0xffffffffffffffffffffffffffffffffffffffff V769
0xc45: V772 = 0x3
0xc47: V773 = ADD 0x3 V768
0xc48: V774 = 0x0
0xc4b: V775 = S[V773]
0xc4d: V776 = 0x100
0xc50: V777 = EXP 0x100 0x0
0xc52: V778 = DIV V775 0x1
0xc53: V779 = 0xffffffffffffffffffffffffffffffffffffffff
0xc68: V780 = AND 0xffffffffffffffffffffffffffffffffffffffff V778
0xc69: V781 = 0xffffffffffffffffffffffffffffffffffffffff
0xc7e: V782 = AND 0xffffffffffffffffffffffffffffffffffffffff V780
0xc7f: V783 = EQ V782 V771
0xc80: V784 = ISZERO V783
0xc81: V785 = ISZERO V784
0xc82: V786 = 0x9b9
0xc85: THROWI V785
---
Entry stack: []
Stack pops: 0
Stack additions: [V759, S0, 0x0, V768, S0, S1, S2, S3, S4]
Exit stack: []

================================

Block 0xc86
[0xc86:0xca0]
---
Predecessors: [0xb80]
Successors: [0xca1]
---
0xc86 PUSH1 0x0
0xc88 DUP1
0xc89 REVERT
0xc8a JUMPDEST
0xc8b PUSH1 0x0
0xc8d DUP3
0xc8e PUSH1 0x5
0xc90 ADD
0xc91 DUP2
0xc92 PUSH2 0x9ca
0xc95 SWAP2
0xc96 SWAP1
0xc97 PUSH2 0x10d7
0xc9a JUMP
0xc9b JUMPDEST
0xc9c POP
0xc9d PUSH1 0x0
0xc9f SWAP1
0xca0 POP
---
0xc86: V787 = 0x0
0xc89: REVERT 0x0 0x0
0xc8a: JUMPDEST 
0xc8b: V788 = 0x0
0xc8e: V789 = 0x5
0xc90: V790 = ADD 0x5 S1
0xc92: V791 = 0x9ca
0xc97: V792 = 0x10d7
0xc9a: THROW 
0xc9b: JUMPDEST 
0xc9d: V793 = 0x0
---
Entry stack: [S6, S5, S4, S3, S2, V768, 0x0]
Stack pops: 0
Stack additions: [0x0, V790, 0x9ca, 0x0, S0, S1, 0x0]
Exit stack: []

================================

Block 0xca1
[0xca1:0xcac]
---
Predecessors: [0xc86]
Successors: [0xcad]
---
0xca1 JUMPDEST
0xca2 DUP6
0xca3 DUP6
0xca4 SWAP1
0xca5 POP
0xca6 DUP2
0xca7 LT
0xca8 ISZERO
0xca9 PUSH2 0xaad
0xcac JUMPI
---
0xca1: JUMPDEST 
0xca7: V794 = LT 0x0 S4
0xca8: V795 = ISZERO V794
0xca9: V796 = 0xaad
0xcac: THROWI V795
---
Entry stack: [0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [S4, S3, S2, S1, S0, 0x0]

================================

Block 0xcad
[0xcad:0xcba]
---
Predecessors: [0xca1]
Successors: [0xcbb]
---
0xcad PUSH1 0x0
0xcaf DUP7
0xcb0 DUP7
0xcb1 DUP4
0xcb2 DUP2
0xcb3 DUP2
0xcb4 LT
0xcb5 ISZERO
0xcb6 ISZERO
0xcb7 PUSH2 0x9eb
0xcba JUMPI
---
0xcad: V797 = 0x0
0xcb4: V798 = LT 0x0 S4
0xcb5: V799 = ISZERO V798
0xcb6: V800 = ISZERO V799
0xcb7: V801 = 0x9eb
0xcba: THROWI V800
---
Entry stack: [S5, S4, S3, S2, S1, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, 0x0, S5, S4, S0]
Exit stack: [S5, S4, S3, S2, S1, 0x0, 0x0, S5, S4, 0x0]

================================

Block 0xcbb
[0xcbb:0xcca]
---
Predecessors: [0xcad]
Successors: [0xccb]
---
0xcbb INVALID
0xcbc JUMPDEST
0xcbd SWAP1
0xcbe POP
0xcbf PUSH1 0x20
0xcc1 MUL
0xcc2 ADD
0xcc3 CALLDATALOAD
0xcc4 GT
0xcc5 ISZERO
0xcc6 ISZERO
0xcc7 PUSH2 0x9fe
0xcca JUMPI
---
0xcbb: INVALID 
0xcbc: JUMPDEST 
0xcbf: V802 = 0x20
0xcc1: V803 = MUL 0x20 S0
0xcc2: V804 = ADD V803 S2
0xcc3: V805 = CALLDATALOAD V804
0xcc4: V806 = GT V805 S3
0xcc5: V807 = ISZERO V806
0xcc6: V808 = ISZERO V807
0xcc7: V809 = 0x9fe
0xcca: THROWI V808
---
Entry stack: [S9, S8, S7, S6, S5, 0x0, 0x0, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xccb
[0xccb:0xcdd]
---
Predecessors: [0xcbb]
Successors: [0xcde]
---
0xccb PUSH1 0x0
0xccd DUP1
0xcce REVERT
0xccf JUMPDEST
0xcd0 PUSH1 0x0
0xcd2 DUP5
0xcd3 DUP5
0xcd4 DUP4
0xcd5 DUP2
0xcd6 DUP2
0xcd7 LT
0xcd8 ISZERO
0xcd9 ISZERO
0xcda PUSH2 0xa0e
0xcdd JUMPI
---
0xccb: V810 = 0x0
0xcce: REVERT 0x0 0x0
0xccf: JUMPDEST 
0xcd0: V811 = 0x0
0xcd7: V812 = LT S0 S2
0xcd8: V813 = ISZERO V812
0xcd9: V814 = ISZERO V813
0xcda: V815 = 0xa0e
0xcdd: THROWI V814
---
Entry stack: []
Stack pops: 0
Stack additions: [S0, S2, S3, 0x0, S0, S1, S2, S3]
Exit stack: []

================================

Block 0xcde
[0xcde:0xced]
---
Predecessors: [0xccb]
Successors: [0xcee]
---
0xcde INVALID
0xcdf JUMPDEST
0xce0 SWAP1
0xce1 POP
0xce2 PUSH1 0x20
0xce4 MUL
0xce5 ADD
0xce6 CALLDATALOAD
0xce7 GT
0xce8 ISZERO
0xce9 ISZERO
0xcea PUSH2 0xa21
0xced JUMPI
---
0xcde: INVALID 
0xcdf: JUMPDEST 
0xce2: V816 = 0x20
0xce4: V817 = MUL 0x20 S0
0xce5: V818 = ADD V817 S2
0xce6: V819 = CALLDATALOAD V818
0xce7: V820 = GT V819 S3
0xce8: V821 = ISZERO V820
0xce9: V822 = ISZERO V821
0xcea: V823 = 0xa21
0xced: THROWI V822
---
Entry stack: [S7, S6, S5, S4, 0x0, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xcee
[0xcee:0xd2f]
---
Predecessors: [0xcde]
Successors: [0xd30]
---
0xcee PUSH1 0x0
0xcf0 DUP1
0xcf1 REVERT
0xcf2 JUMPDEST
0xcf3 DUP2
0xcf4 PUSH1 0x5
0xcf6 ADD
0xcf7 DUP1
0xcf8 SLOAD
0xcf9 DUP1
0xcfa PUSH1 0x1
0xcfc ADD
0xcfd DUP3
0xcfe DUP2
0xcff PUSH2 0xa37
0xd02 SWAP2
0xd03 SWAP1
0xd04 PUSH2 0x1109
0xd07 JUMP
0xd08 JUMPDEST
0xd09 SWAP2
0xd0a PUSH1 0x0
0xd0c MSTORE
0xd0d PUSH1 0x20
0xd0f PUSH1 0x0
0xd11 SHA3
0xd12 SWAP1
0xd13 PUSH1 0x2
0xd15 MUL
0xd16 ADD
0xd17 PUSH1 0x0
0xd19 PUSH1 0x40
0xd1b DUP1
0xd1c MLOAD
0xd1d SWAP1
0xd1e DUP2
0xd1f ADD
0xd20 PUSH1 0x40
0xd22 MSTORE
0xd23 DUP1
0xd24 DUP11
0xd25 DUP11
0xd26 DUP8
0xd27 DUP2
0xd28 DUP2
0xd29 LT
0xd2a ISZERO
0xd2b ISZERO
0xd2c PUSH2 0xa60
0xd2f JUMPI
---
0xcee: V824 = 0x0
0xcf1: REVERT 0x0 0x0
0xcf2: JUMPDEST 
0xcf4: V825 = 0x5
0xcf6: V826 = ADD 0x5 S1
0xcf8: V827 = S[V826]
0xcfa: V828 = 0x1
0xcfc: V829 = ADD 0x1 V827
0xcff: V830 = 0xa37
0xd04: V831 = 0x1109
0xd07: THROW 
0xd08: JUMPDEST 
0xd0a: V832 = 0x0
0xd0c: M[0x0] = S2
0xd0d: V833 = 0x20
0xd0f: V834 = 0x0
0xd11: V835 = SHA3 0x0 0x20
0xd13: V836 = 0x2
0xd15: V837 = MUL 0x2 S1
0xd16: V838 = ADD V837 V835
0xd17: V839 = 0x0
0xd19: V840 = 0x40
0xd1c: V841 = M[0x40]
0xd1f: V842 = ADD V841 0x40
0xd20: V843 = 0x40
0xd22: M[0x40] = V842
0xd29: V844 = LT S3 S7
0xd2a: V845 = ISZERO V844
0xd2b: V846 = ISZERO V845
0xd2c: V847 = 0xa60
0xd2f: THROWI V846
---
Entry stack: []
Stack pops: 0
Stack additions: [V829, V826, 0xa37, V829, V827, V826, S0, S1, S3, S7, S8, V841, V841, 0x0, V838, S0, S3, S4, S5, S6, S7, S8]
Exit stack: []

================================

Block 0xd30
[0xd30:0xd49]
---
Predecessors: [0xcee]
Successors: [0xd4a]
---
0xd30 INVALID
0xd31 JUMPDEST
0xd32 SWAP1
0xd33 POP
0xd34 PUSH1 0x20
0xd36 MUL
0xd37 ADD
0xd38 CALLDATALOAD
0xd39 DUP2
0xd3a MSTORE
0xd3b PUSH1 0x20
0xd3d ADD
0xd3e DUP9
0xd3f DUP9
0xd40 DUP8
0xd41 DUP2
0xd42 DUP2
0xd43 LT
0xd44 ISZERO
0xd45 ISZERO
0xd46 PUSH2 0xa7a
0xd49 JUMPI
---
0xd30: INVALID 
0xd31: JUMPDEST 
0xd34: V848 = 0x20
0xd36: V849 = MUL 0x20 S0
0xd37: V850 = ADD V849 S2
0xd38: V851 = CALLDATALOAD V850
0xd3a: M[S3] = V851
0xd3b: V852 = 0x20
0xd3d: V853 = ADD 0x20 S3
0xd43: V854 = LT S8 S10
0xd44: V855 = ISZERO V854
0xd45: V856 = ISZERO V855
0xd46: V857 = 0xa7a
0xd49: THROWI V856
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, V838, 0x0, V841, V841, S2, S1, S0]
Stack pops: 0
Stack additions: [S8, S10, S11, V853, S4, S5, S6, S7, S8, S9, S10, S11]
Exit stack: []

================================

Block 0xd4a
[0xd4a:0xda3]
---
Predecessors: [0xd30]
Successors: [0xda4]
---
0xd4a INVALID
0xd4b JUMPDEST
0xd4c SWAP1
0xd4d POP
0xd4e PUSH1 0x20
0xd50 MUL
0xd51 ADD
0xd52 CALLDATALOAD
0xd53 DUP2
0xd54 MSTORE
0xd55 POP
0xd56 SWAP1
0xd57 SWAP2
0xd58 SWAP1
0xd59 SWAP2
0xd5a POP
0xd5b PUSH1 0x0
0xd5d DUP3
0xd5e ADD
0xd5f MLOAD
0xd60 DUP2
0xd61 PUSH1 0x0
0xd63 ADD
0xd64 SSTORE
0xd65 PUSH1 0x20
0xd67 DUP3
0xd68 ADD
0xd69 MLOAD
0xd6a DUP2
0xd6b PUSH1 0x1
0xd6d ADD
0xd6e SSTORE
0xd6f POP
0xd70 POP
0xd71 POP
0xd72 DUP1
0xd73 DUP1
0xd74 PUSH1 0x1
0xd76 ADD
0xd77 SWAP2
0xd78 POP
0xd79 POP
0xd7a PUSH2 0x9d0
0xd7d JUMP
0xd7e JUMPDEST
0xd7f POP
0xd80 POP
0xd81 POP
0xd82 POP
0xd83 POP
0xd84 POP
0xd85 POP
0xd86 JUMP
0xd87 JUMPDEST
0xd88 PUSH1 0x3
0xd8a SLOAD
0xd8b DUP2
0xd8c JUMP
0xd8d JUMPDEST
0xd8e PUSH1 0x4
0xd90 SLOAD
0xd91 DUP2
0xd92 JUMP
0xd93 JUMPDEST
0xd94 PUSH1 0x0
0xd96 DUP1
0xd97 DUP5
0xd98 PUSH1 0x0
0xd9a NOT
0xd9b AND
0xd9c EQ
0xd9d ISZERO
0xd9e ISZERO
0xd9f ISZERO
0xda0 PUSH2 0xad7
0xda3 JUMPI
---
0xd4a: INVALID 
0xd4b: JUMPDEST 
0xd4e: V858 = 0x20
0xd50: V859 = MUL 0x20 S0
0xd51: V860 = ADD V859 S2
0xd52: V861 = CALLDATALOAD V860
0xd54: M[S3] = V861
0xd5b: V862 = 0x0
0xd5e: V863 = ADD S4 0x0
0xd5f: V864 = M[V863]
0xd61: V865 = 0x0
0xd63: V866 = ADD 0x0 S6
0xd64: S[V866] = V864
0xd65: V867 = 0x20
0xd68: V868 = ADD S4 0x20
0xd69: V869 = M[V868]
0xd6b: V870 = 0x1
0xd6d: V871 = ADD 0x1 S6
0xd6e: S[V871] = V869
0xd74: V872 = 0x1
0xd76: V873 = ADD 0x1 S8
0xd7a: V874 = 0x9d0
0xd7d: THROW 
0xd7e: JUMPDEST 
0xd86: JUMP S7
0xd87: JUMPDEST 
0xd88: V875 = 0x3
0xd8a: V876 = S[0x3]
0xd8c: JUMP S0
0xd8d: JUMPDEST 
0xd8e: V877 = 0x4
0xd90: V878 = S[0x4]
0xd92: JUMP S0
0xd93: JUMPDEST 
0xd94: V879 = 0x0
0xd98: V880 = 0x0
0xd9a: V881 = NOT 0x0
0xd9b: V882 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff S2
0xd9c: V883 = EQ V882 0x0
0xd9d: V884 = ISZERO V883
0xd9e: V885 = ISZERO V884
0xd9f: V886 = ISZERO V885
0xda0: V887 = 0xad7
0xda3: THROWI V886
---
Entry stack: [S11, S10, S9, S8, S7, S6, S5, S4, V853, S2, S1, S0]
Stack pops: 0
Stack additions: [V873, V876, S0, V878, S0, 0x0, S0, S1, S2]
Exit stack: []

================================

Block 0xda4
[0xda4:0xdb2]
---
Predecessors: [0xd4a]
Successors: [0xdb3]
---
0xda4 PUSH1 0x0
0xda6 DUP1
0xda7 REVERT
0xda8 JUMPDEST
0xda9 PUSH1 0x0
0xdab DUP4
0xdac GT
0xdad ISZERO
0xdae ISZERO
0xdaf PUSH2 0xae6
0xdb2 JUMPI
---
0xda4: V888 = 0x0
0xda7: REVERT 0x0 0x0
0xda8: JUMPDEST 
0xda9: V889 = 0x0
0xdac: V890 = GT S2 0x0
0xdad: V891 = ISZERO V890
0xdae: V892 = ISZERO V891
0xdaf: V893 = 0xae6
0xdb2: THROWI V892
---
Entry stack: [S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: [S0, S1, S2]
Exit stack: []

================================

Block 0xdb3
[0xdb3:0xdee]
---
Predecessors: [0xda4]
Successors: [0xdef]
---
0xdb3 PUSH1 0x0
0xdb5 DUP1
0xdb6 REVERT
0xdb7 JUMPDEST
0xdb8 PUSH1 0x0
0xdba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdcf AND
0xdd0 DUP3
0xdd1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xde6 AND
0xde7 EQ
0xde8 ISZERO
0xde9 ISZERO
0xdea ISZERO
0xdeb PUSH2 0xb22
0xdee JUMPI
---
0xdb3: V894 = 0x0
0xdb6: REVERT 0x0 0x0
0xdb7: JUMPDEST 
0xdb8: V895 = 0x0
0xdba: V896 = 0xffffffffffffffffffffffffffffffffffffffff
0xdcf: V897 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0xdd1: V898 = 0xffffffffffffffffffffffffffffffffffffffff
0xde6: V899 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xde7: V900 = EQ V899 0x0
0xde8: V901 = ISZERO V900
0xde9: V902 = ISZERO V901
0xdea: V903 = ISZERO V902
0xdeb: V904 = 0xb22
0xdee: THROWI V903
---
Entry stack: [S2, S1, S0]
Stack pops: 0
Stack additions: [S0, S1]
Exit stack: []

================================

Block 0xdef
[0xdef:0x1084]
---
Predecessors: [0xdb3]
Successors: [0x1085]
---
0xdef PUSH1 0x0
0xdf1 DUP1
0xdf2 REVERT
0xdf3 JUMPDEST
0xdf4 PUSH2 0xb38
0xdf7 PUSH1 0x1
0xdf9 PUSH1 0x5
0xdfb SLOAD
0xdfc PUSH2 0xf2e
0xdff SWAP1
0xe00 SWAP2
0xe01 SWAP1
0xe02 PUSH4 0xffffffff
0xe07 AND
0xe08 JUMP
0xe09 JUMPDEST
0xe0a PUSH1 0x5
0xe0c DUP2
0xe0d SWAP1
0xe0e SSTORE
0xe0f POP
0xe10 PUSH1 0x6
0xe12 PUSH1 0x0
0xe14 PUSH1 0x5
0xe16 SLOAD
0xe17 DUP2
0xe18 MSTORE
0xe19 PUSH1 0x20
0xe1b ADD
0xe1c SWAP1
0xe1d DUP2
0xe1e MSTORE
0xe1f PUSH1 0x20
0xe21 ADD
0xe22 PUSH1 0x0
0xe24 SHA3
0xe25 SWAP1
0xe26 POP
0xe27 PUSH1 0x5
0xe29 SLOAD
0xe2a DUP2
0xe2b PUSH1 0x0
0xe2d ADD
0xe2e DUP2
0xe2f SWAP1
0xe30 SSTORE
0xe31 POP
0xe32 DUP4
0xe33 DUP2
0xe34 PUSH1 0x1
0xe36 ADD
0xe37 DUP2
0xe38 PUSH1 0x0
0xe3a NOT
0xe3b AND
0xe3c SWAP1
0xe3d SSTORE
0xe3e POP
0xe3f DUP2
0xe40 DUP2
0xe41 PUSH1 0x2
0xe43 ADD
0xe44 PUSH1 0x0
0xe46 PUSH2 0x100
0xe49 EXP
0xe4a DUP2
0xe4b SLOAD
0xe4c DUP2
0xe4d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe62 MUL
0xe63 NOT
0xe64 AND
0xe65 SWAP1
0xe66 DUP4
0xe67 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe7c AND
0xe7d MUL
0xe7e OR
0xe7f SWAP1
0xe80 SSTORE
0xe81 POP
0xe82 CALLER
0xe83 DUP2
0xe84 PUSH1 0x3
0xe86 ADD
0xe87 PUSH1 0x0
0xe89 PUSH2 0x100
0xe8c EXP
0xe8d DUP2
0xe8e SLOAD
0xe8f DUP2
0xe90 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xea5 MUL
0xea6 NOT
0xea7 AND
0xea8 SWAP1
0xea9 DUP4
0xeaa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xebf AND
0xec0 MUL
0xec1 OR
0xec2 SWAP1
0xec3 SSTORE
0xec4 POP
0xec5 DUP1
0xec6 PUSH1 0x5
0xec8 ADD
0xec9 DUP1
0xeca SLOAD
0xecb DUP1
0xecc PUSH1 0x1
0xece ADD
0xecf DUP3
0xed0 DUP2
0xed1 PUSH2 0xc09
0xed4 SWAP2
0xed5 SWAP1
0xed6 PUSH2 0x1109
0xed9 JUMP
0xeda JUMPDEST
0xedb SWAP2
0xedc PUSH1 0x0
0xede MSTORE
0xedf PUSH1 0x20
0xee1 PUSH1 0x0
0xee3 SHA3
0xee4 SWAP1
0xee5 PUSH1 0x2
0xee7 MUL
0xee8 ADD
0xee9 PUSH1 0x0
0xeeb PUSH1 0x40
0xeed DUP1
0xeee MLOAD
0xeef SWAP1
0xef0 DUP2
0xef1 ADD
0xef2 PUSH1 0x40
0xef4 MSTORE
0xef5 DUP1
0xef6 PUSH1 0x1
0xef8 DUP2
0xef9 MSTORE
0xefa PUSH1 0x20
0xefc ADD
0xefd DUP8
0xefe DUP2
0xeff MSTORE
0xf00 POP
0xf01 SWAP1
0xf02 SWAP2
0xf03 SWAP1
0xf04 SWAP2
0xf05 POP
0xf06 PUSH1 0x0
0xf08 DUP3
0xf09 ADD
0xf0a MLOAD
0xf0b DUP2
0xf0c PUSH1 0x0
0xf0e ADD
0xf0f SSTORE
0xf10 PUSH1 0x20
0xf12 DUP3
0xf13 ADD
0xf14 MLOAD
0xf15 DUP2
0xf16 PUSH1 0x1
0xf18 ADD
0xf19 SSTORE
0xf1a POP
0xf1b POP
0xf1c POP
0xf1d CALLER
0xf1e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf33 AND
0xf34 PUSH32 0xc51cb55dba33855ca461609037e9340bb547ea6db4e6114b455e90dac829618b
0xf55 PUSH1 0x5
0xf57 SLOAD
0xf58 DUP7
0xf59 DUP7
0xf5a DUP7
0xf5b PUSH1 0x40
0xf5d MLOAD
0xf5e DUP1
0xf5f DUP6
0xf60 DUP2
0xf61 MSTORE
0xf62 PUSH1 0x20
0xf64 ADD
0xf65 DUP5
0xf66 PUSH1 0x0
0xf68 NOT
0xf69 AND
0xf6a PUSH1 0x0
0xf6c NOT
0xf6d AND
0xf6e DUP2
0xf6f MSTORE
0xf70 PUSH1 0x20
0xf72 ADD
0xf73 DUP4
0xf74 DUP2
0xf75 MSTORE
0xf76 PUSH1 0x20
0xf78 ADD
0xf79 DUP3
0xf7a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf8f AND
0xf90 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfa5 AND
0xfa6 DUP2
0xfa7 MSTORE
0xfa8 PUSH1 0x20
0xfaa ADD
0xfab SWAP5
0xfac POP
0xfad POP
0xfae POP
0xfaf POP
0xfb0 POP
0xfb1 PUSH1 0x40
0xfb3 MLOAD
0xfb4 DUP1
0xfb5 SWAP2
0xfb6 SUB
0xfb7 SWAP1
0xfb8 LOG2
0xfb9 POP
0xfba POP
0xfbb POP
0xfbc POP
0xfbd JUMP
0xfbe JUMPDEST
0xfbf PUSH1 0x6
0xfc1 PUSH1 0x20
0xfc3 MSTORE
0xfc4 DUP1
0xfc5 PUSH1 0x0
0xfc7 MSTORE
0xfc8 PUSH1 0x40
0xfca PUSH1 0x0
0xfcc SHA3
0xfcd PUSH1 0x0
0xfcf SWAP2
0xfd0 POP
0xfd1 SWAP1
0xfd2 POP
0xfd3 DUP1
0xfd4 PUSH1 0x0
0xfd6 ADD
0xfd7 SLOAD
0xfd8 SWAP1
0xfd9 DUP1
0xfda PUSH1 0x1
0xfdc ADD
0xfdd SLOAD
0xfde SWAP1
0xfdf DUP1
0xfe0 PUSH1 0x2
0xfe2 ADD
0xfe3 PUSH1 0x0
0xfe5 SWAP1
0xfe6 SLOAD
0xfe7 SWAP1
0xfe8 PUSH2 0x100
0xfeb EXP
0xfec SWAP1
0xfed DIV
0xfee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1003 AND
0x1004 SWAP1
0x1005 DUP1
0x1006 PUSH1 0x3
0x1008 ADD
0x1009 PUSH1 0x0
0x100b SWAP1
0x100c SLOAD
0x100d SWAP1
0x100e PUSH2 0x100
0x1011 EXP
0x1012 SWAP1
0x1013 DIV
0x1014 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1029 AND
0x102a SWAP1
0x102b POP
0x102c DUP5
0x102d JUMP
0x102e JUMPDEST
0x102f PUSH1 0x0
0x1031 DUP1
0x1032 SWAP1
0x1033 SLOAD
0x1034 SWAP1
0x1035 PUSH2 0x100
0x1038 EXP
0x1039 SWAP1
0x103a DIV
0x103b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1050 AND
0x1051 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1066 AND
0x1067 CALLER
0x1068 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x107d AND
0x107e EQ
0x107f ISZERO
0x1080 ISZERO
0x1081 PUSH2 0xdb8
0x1084 JUMPI
---
0xdef: V905 = 0x0
0xdf2: REVERT 0x0 0x0
0xdf3: JUMPDEST 
0xdf4: V906 = 0xb38
0xdf7: V907 = 0x1
0xdf9: V908 = 0x5
0xdfb: V909 = S[0x5]
0xdfc: V910 = 0xf2e
0xe02: V911 = 0xffffffff
0xe07: V912 = AND 0xffffffff 0xf2e
0xe08: THROW 
0xe09: JUMPDEST 
0xe0a: V913 = 0x5
0xe0e: S[0x5] = S0
0xe10: V914 = 0x6
0xe12: V915 = 0x0
0xe14: V916 = 0x5
0xe16: V917 = S[0x5]
0xe18: M[0x0] = V917
0xe19: V918 = 0x20
0xe1b: V919 = ADD 0x20 0x0
0xe1e: M[0x20] = 0x6
0xe1f: V920 = 0x20
0xe21: V921 = ADD 0x20 0x20
0xe22: V922 = 0x0
0xe24: V923 = SHA3 0x0 0x40
0xe27: V924 = 0x5
0xe29: V925 = S[0x5]
0xe2b: V926 = 0x0
0xe2d: V927 = ADD 0x0 V923
0xe30: S[V927] = V925
0xe34: V928 = 0x1
0xe36: V929 = ADD 0x1 V923
0xe38: V930 = 0x0
0xe3a: V931 = NOT 0x0
0xe3b: V932 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff S4
0xe3d: S[V929] = V932
0xe41: V933 = 0x2
0xe43: V934 = ADD 0x2 V923
0xe44: V935 = 0x0
0xe46: V936 = 0x100
0xe49: V937 = EXP 0x100 0x0
0xe4b: V938 = S[V934]
0xe4d: V939 = 0xffffffffffffffffffffffffffffffffffffffff
0xe62: V940 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xe63: V941 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xe64: V942 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V938
0xe67: V943 = 0xffffffffffffffffffffffffffffffffffffffff
0xe7c: V944 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xe7d: V945 = MUL V944 0x1
0xe7e: V946 = OR V945 V942
0xe80: S[V934] = V946
0xe82: V947 = CALLER
0xe84: V948 = 0x3
0xe86: V949 = ADD 0x3 V923
0xe87: V950 = 0x0
0xe89: V951 = 0x100
0xe8c: V952 = EXP 0x100 0x0
0xe8e: V953 = S[V949]
0xe90: V954 = 0xffffffffffffffffffffffffffffffffffffffff
0xea5: V955 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xea6: V956 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xea7: V957 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V953
0xeaa: V958 = 0xffffffffffffffffffffffffffffffffffffffff
0xebf: V959 = AND 0xffffffffffffffffffffffffffffffffffffffff V947
0xec0: V960 = MUL V959 0x1
0xec1: V961 = OR V960 V957
0xec3: S[V949] = V961
0xec6: V962 = 0x5
0xec8: V963 = ADD 0x5 V923
0xeca: V964 = S[V963]
0xecc: V965 = 0x1
0xece: V966 = ADD 0x1 V964
0xed1: V967 = 0xc09
0xed6: V968 = 0x1109
0xed9: THROW 
0xeda: JUMPDEST 
0xedc: V969 = 0x0
0xede: M[0x0] = S2
0xedf: V970 = 0x20
0xee1: V971 = 0x0
0xee3: V972 = SHA3 0x0 0x20
0xee5: V973 = 0x2
0xee7: V974 = MUL 0x2 S1
0xee8: V975 = ADD V974 V972
0xee9: V976 = 0x0
0xeeb: V977 = 0x40
0xeee: V978 = M[0x40]
0xef1: V979 = ADD V978 0x40
0xef2: V980 = 0x40
0xef4: M[0x40] = V979
0xef6: V981 = 0x1
0xef9: M[V978] = 0x1
0xefa: V982 = 0x20
0xefc: V983 = ADD 0x20 V978
0xeff: M[V983] = S5
0xf06: V984 = 0x0
0xf09: V985 = ADD V978 0x0
0xf0a: V986 = M[V985]
0xf0c: V987 = 0x0
0xf0e: V988 = ADD 0x0 V975
0xf0f: S[V988] = V986
0xf10: V989 = 0x20
0xf13: V990 = ADD V978 0x20
0xf14: V991 = M[V990]
0xf16: V992 = 0x1
0xf18: V993 = ADD 0x1 V975
0xf19: S[V993] = V991
0xf1d: V994 = CALLER
0xf1e: V995 = 0xffffffffffffffffffffffffffffffffffffffff
0xf33: V996 = AND 0xffffffffffffffffffffffffffffffffffffffff V994
0xf34: V997 = 0xc51cb55dba33855ca461609037e9340bb547ea6db4e6114b455e90dac829618b
0xf55: V998 = 0x5
0xf57: V999 = S[0x5]
0xf5b: V1000 = 0x40
0xf5d: V1001 = M[0x40]
0xf61: M[V1001] = V999
0xf62: V1002 = 0x20
0xf64: V1003 = ADD 0x20 V1001
0xf66: V1004 = 0x0
0xf68: V1005 = NOT 0x0
0xf69: V1006 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff S6
0xf6a: V1007 = 0x0
0xf6c: V1008 = NOT 0x0
0xf6d: V1009 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V1006
0xf6f: M[V1003] = V1009
0xf70: V1010 = 0x20
0xf72: V1011 = ADD 0x20 V1003
0xf75: M[V1011] = S5
0xf76: V1012 = 0x20
0xf78: V1013 = ADD 0x20 V1011
0xf7a: V1014 = 0xffffffffffffffffffffffffffffffffffffffff
0xf8f: V1015 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xf90: V1016 = 0xffffffffffffffffffffffffffffffffffffffff
0xfa5: V1017 = AND 0xffffffffffffffffffffffffffffffffffffffff V1015
0xfa7: M[V1013] = V1017
0xfa8: V1018 = 0x20
0xfaa: V1019 = ADD 0x20 V1013
0xfb1: V1020 = 0x40
0xfb3: V1021 = M[0x40]
0xfb6: V1022 = SUB V1019 V1021
0xfb8: LOG V1021 V1022 0xc51cb55dba33855ca461609037e9340bb547ea6db4e6114b455e90dac829618b V996
0xfbd: JUMP S7
0xfbe: JUMPDEST 
0xfbf: V1023 = 0x6
0xfc1: V1024 = 0x20
0xfc3: M[0x20] = 0x6
0xfc5: V1025 = 0x0
0xfc7: M[0x0] = S0
0xfc8: V1026 = 0x40
0xfca: V1027 = 0x0
0xfcc: V1028 = SHA3 0x0 0x40
0xfcd: V1029 = 0x0
0xfd4: V1030 = 0x0
0xfd6: V1031 = ADD 0x0 V1028
0xfd7: V1032 = S[V1031]
0xfda: V1033 = 0x1
0xfdc: V1034 = ADD 0x1 V1028
0xfdd: V1035 = S[V1034]
0xfe0: V1036 = 0x2
0xfe2: V1037 = ADD 0x2 V1028
0xfe3: V1038 = 0x0
0xfe6: V1039 = S[V1037]
0xfe8: V1040 = 0x100
0xfeb: V1041 = EXP 0x100 0x0
0xfed: V1042 = DIV V1039 0x1
0xfee: V1043 = 0xffffffffffffffffffffffffffffffffffffffff
0x1003: V1044 = AND 0xffffffffffffffffffffffffffffffffffffffff V1042
0x1006: V1045 = 0x3
0x1008: V1046 = ADD 0x3 V1028
0x1009: V1047 = 0x0
0x100c: V1048 = S[V1046]
0x100e: V1049 = 0x100
0x1011: V1050 = EXP 0x100 0x0
0x1013: V1051 = DIV V1048 0x1
0x1014: V1052 = 0xffffffffffffffffffffffffffffffffffffffff
0x1029: V1053 = AND 0xffffffffffffffffffffffffffffffffffffffff V1051
0x102d: JUMP S1
0x102e: JUMPDEST 
0x102f: V1054 = 0x0
0x1033: V1055 = S[0x0]
0x1035: V1056 = 0x100
0x1038: V1057 = EXP 0x100 0x0
0x103a: V1058 = DIV V1055 0x1
0x103b: V1059 = 0xffffffffffffffffffffffffffffffffffffffff
0x1050: V1060 = AND 0xffffffffffffffffffffffffffffffffffffffff V1058
0x1051: V1061 = 0xffffffffffffffffffffffffffffffffffffffff
0x1066: V1062 = AND 0xffffffffffffffffffffffffffffffffffffffff V1060
0x1067: V1063 = CALLER
0x1068: V1064 = 0xffffffffffffffffffffffffffffffffffffffff
0x107d: V1065 = AND 0xffffffffffffffffffffffffffffffffffffffff V1063
0x107e: V1066 = EQ V1065 V1062
0x107f: V1067 = ISZERO V1066
0x1080: V1068 = ISZERO V1067
0x1081: V1069 = 0xdb8
0x1084: THROWI V1068
---
Entry stack: [S1, S0]
Stack pops: 0
Stack additions: [0x1, V909, 0xb38, V966, V963, 0xc09, V966, V964, V963, V923, S2, S3, S4, V1053, V1044, V1035, V1032, S1]
Exit stack: []

================================

Block 0x1085
[0x1085:0x10c0]
---
Predecessors: [0xdef]
Successors: [0x10c1]
---
0x1085 PUSH1 0x0
0x1087 DUP1
0x1088 REVERT
0x1089 JUMPDEST
0x108a PUSH1 0x0
0x108c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10a1 AND
0x10a2 DUP2
0x10a3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10b8 AND
0x10b9 EQ
0x10ba ISZERO
0x10bb ISZERO
0x10bc ISZERO
0x10bd PUSH2 0xdf4
0x10c0 JUMPI
---
0x1085: V1070 = 0x0
0x1088: REVERT 0x0 0x0
0x1089: JUMPDEST 
0x108a: V1071 = 0x0
0x108c: V1072 = 0xffffffffffffffffffffffffffffffffffffffff
0x10a1: V1073 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x10a3: V1074 = 0xffffffffffffffffffffffffffffffffffffffff
0x10b8: V1075 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x10b9: V1076 = EQ V1075 0x0
0x10ba: V1077 = ISZERO V1076
0x10bb: V1078 = ISZERO V1077
0x10bc: V1079 = ISZERO V1078
0x10bd: V1080 = 0xdf4
0x10c0: THROWI V1079
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x10c1
[0x10c1:0x11b5]
---
Predecessors: [0x1085]
Successors: [0x11b6]
---
0x10c1 PUSH1 0x0
0x10c3 DUP1
0x10c4 REVERT
0x10c5 JUMPDEST
0x10c6 DUP1
0x10c7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10dc AND
0x10dd PUSH1 0x0
0x10df DUP1
0x10e0 SWAP1
0x10e1 SLOAD
0x10e2 SWAP1
0x10e3 PUSH2 0x100
0x10e6 EXP
0x10e7 SWAP1
0x10e8 DIV
0x10e9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10fe AND
0x10ff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1114 AND
0x1115 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x1136 PUSH1 0x40
0x1138 MLOAD
0x1139 PUSH1 0x40
0x113b MLOAD
0x113c DUP1
0x113d SWAP2
0x113e SUB
0x113f SWAP1
0x1140 LOG3
0x1141 DUP1
0x1142 PUSH1 0x0
0x1144 DUP1
0x1145 PUSH2 0x100
0x1148 EXP
0x1149 DUP2
0x114a SLOAD
0x114b DUP2
0x114c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1161 MUL
0x1162 NOT
0x1163 AND
0x1164 SWAP1
0x1165 DUP4
0x1166 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x117b AND
0x117c MUL
0x117d OR
0x117e SWAP1
0x117f SSTORE
0x1180 POP
0x1181 POP
0x1182 JUMP
0x1183 JUMPDEST
0x1184 PUSH1 0x1
0x1186 PUSH1 0x0
0x1188 SWAP1
0x1189 SLOAD
0x118a SWAP1
0x118b PUSH2 0x100
0x118e EXP
0x118f SWAP1
0x1190 DIV
0x1191 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11a6 AND
0x11a7 DUP2
0x11a8 JUMP
0x11a9 JUMPDEST
0x11aa PUSH1 0x0
0x11ac DUP1
0x11ad DUP3
0x11ae DUP5
0x11af DUP2
0x11b0 ISZERO
0x11b1 ISZERO
0x11b2 PUSH2 0xee6
0x11b5 JUMPI
---
0x10c1: V1081 = 0x0
0x10c4: REVERT 0x0 0x0
0x10c5: JUMPDEST 
0x10c7: V1082 = 0xffffffffffffffffffffffffffffffffffffffff
0x10dc: V1083 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x10dd: V1084 = 0x0
0x10e1: V1085 = S[0x0]
0x10e3: V1086 = 0x100
0x10e6: V1087 = EXP 0x100 0x0
0x10e8: V1088 = DIV V1085 0x1
0x10e9: V1089 = 0xffffffffffffffffffffffffffffffffffffffff
0x10fe: V1090 = AND 0xffffffffffffffffffffffffffffffffffffffff V1088
0x10ff: V1091 = 0xffffffffffffffffffffffffffffffffffffffff
0x1114: V1092 = AND 0xffffffffffffffffffffffffffffffffffffffff V1090
0x1115: V1093 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x1136: V1094 = 0x40
0x1138: V1095 = M[0x40]
0x1139: V1096 = 0x40
0x113b: V1097 = M[0x40]
0x113e: V1098 = SUB V1095 V1097
0x1140: LOG V1097 V1098 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V1092 V1083
0x1142: V1099 = 0x0
0x1145: V1100 = 0x100
0x1148: V1101 = EXP 0x100 0x0
0x114a: V1102 = S[0x0]
0x114c: V1103 = 0xffffffffffffffffffffffffffffffffffffffff
0x1161: V1104 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x1162: V1105 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1163: V1106 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1102
0x1166: V1107 = 0xffffffffffffffffffffffffffffffffffffffff
0x117b: V1108 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x117c: V1109 = MUL V1108 0x1
0x117d: V1110 = OR V1109 V1106
0x117f: S[0x0] = V1110
0x1182: JUMP S1
0x1183: JUMPDEST 
0x1184: V1111 = 0x1
0x1186: V1112 = 0x0
0x1189: V1113 = S[0x1]
0x118b: V1114 = 0x100
0x118e: V1115 = EXP 0x100 0x0
0x1190: V1116 = DIV V1113 0x1
0x1191: V1117 = 0xffffffffffffffffffffffffffffffffffffffff
0x11a6: V1118 = AND 0xffffffffffffffffffffffffffffffffffffffff V1116
0x11a8: JUMP S0
0x11a9: JUMPDEST 
0x11aa: V1119 = 0x0
0x11b0: V1120 = ISZERO S0
0x11b1: V1121 = ISZERO V1120
0x11b2: V1122 = 0xee6
0x11b5: THROWI V1121
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [V1118, S0, S1, S0, 0x0, 0x0, S0, S1]
Exit stack: []

================================

Block 0x11b6
[0x11b6:0x11d0]
---
Predecessors: [0x10c1]
Successors: [0x11d1]
---
0x11b6 INVALID
0x11b7 JUMPDEST
0x11b8 DIV
0x11b9 SWAP1
0x11ba POP
0x11bb DUP1
0x11bc SWAP2
0x11bd POP
0x11be POP
0x11bf SWAP3
0x11c0 SWAP2
0x11c1 POP
0x11c2 POP
0x11c3 JUMP
0x11c4 JUMPDEST
0x11c5 PUSH1 0x0
0x11c7 DUP1
0x11c8 PUSH1 0x0
0x11ca DUP5
0x11cb EQ
0x11cc ISZERO
0x11cd PUSH2 0xf08
0x11d0 JUMPI
---
0x11b6: INVALID 
0x11b7: JUMPDEST 
0x11b8: V1123 = DIV S0 S1
0x11c3: JUMP S6
0x11c4: JUMPDEST 
0x11c5: V1124 = 0x0
0x11c8: V1125 = 0x0
0x11cb: V1126 = EQ S1 0x0
0x11cc: V1127 = ISZERO V1126
0x11cd: V1128 = 0xf08
0x11d0: THROWI V1127
---
Entry stack: [S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 0
Stack additions: [V1123, 0x0, 0x0, S0, S1]
Exit stack: []

================================

Block 0x11d1
[0x11d1:0x11e8]
---
Predecessors: [0x11b6]
Successors: [0x11e9]
---
0x11d1 PUSH1 0x0
0x11d3 SWAP2
0x11d4 POP
0x11d5 PUSH2 0xf27
0x11d8 JUMP
0x11d9 JUMPDEST
0x11da DUP3
0x11db DUP5
0x11dc MUL
0x11dd SWAP1
0x11de POP
0x11df DUP3
0x11e0 DUP5
0x11e1 DUP3
0x11e2 DUP2
0x11e3 ISZERO
0x11e4 ISZERO
0x11e5 PUSH2 0xf19
0x11e8 JUMPI
---
0x11d1: V1129 = 0x0
0x11d5: V1130 = 0xf27
0x11d8: THROW 
0x11d9: JUMPDEST 
0x11dc: V1131 = MUL S3 S2
0x11e3: V1132 = ISZERO S3
0x11e4: V1133 = ISZERO V1132
0x11e5: V1134 = 0xf19
0x11e8: THROWI V1133
---
Entry stack: [S3, S2, 0x0, 0x0]
Stack pops: 2
Stack additions: [V1131, S3, S2, V1131, S1, S2, S3]
Exit stack: []

================================

Block 0x11e9
[0x11e9:0x11f2]
---
Predecessors: [0x11d1]
Successors: [0x11f3]
---
0x11e9 INVALID
0x11ea JUMPDEST
0x11eb DIV
0x11ec EQ
0x11ed ISZERO
0x11ee ISZERO
0x11ef PUSH2 0xf23
0x11f2 JUMPI
---
0x11e9: INVALID 
0x11ea: JUMPDEST 
0x11eb: V1135 = DIV S0 S1
0x11ec: V1136 = EQ V1135 S2
0x11ed: V1137 = ISZERO V1136
0x11ee: V1138 = ISZERO V1137
0x11ef: V1139 = 0xf23
0x11f2: THROWI V1138
---
Entry stack: [S6, S5, S4, V1131, S2, S1, V1131]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x11f3
[0x11f3:0x11f7]
---
Predecessors: [0x11e9]
Successors: [0x11f8]
---
0x11f3 INVALID
0x11f4 JUMPDEST
0x11f5 DUP1
0x11f6 SWAP2
0x11f7 POP
---
0x11f3: INVALID 
0x11f4: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: [S0, S0]
Exit stack: []

================================

Block 0x11f8
[0x11f8:0x1211]
---
Predecessors: [0x11f3]
Successors: [0x1212]
---
0x11f8 JUMPDEST
0x11f9 POP
0x11fa SWAP3
0x11fb SWAP2
0x11fc POP
0x11fd POP
0x11fe JUMP
0x11ff JUMPDEST
0x1200 PUSH1 0x0
0x1202 DUP1
0x1203 DUP3
0x1204 DUP5
0x1205 ADD
0x1206 SWAP1
0x1207 POP
0x1208 DUP4
0x1209 DUP2
0x120a LT
0x120b ISZERO
0x120c ISZERO
0x120d ISZERO
0x120e PUSH2 0xf42
0x1211 JUMPI
---
0x11f8: JUMPDEST 
0x11fe: JUMP S4
0x11ff: JUMPDEST 
0x1200: V1140 = 0x0
0x1205: V1141 = ADD S1 S0
0x120a: V1142 = LT V1141 S1
0x120b: V1143 = ISZERO V1142
0x120c: V1144 = ISZERO V1143
0x120d: V1145 = ISZERO V1144
0x120e: V1146 = 0xf42
0x1211: THROWI V1145
---
Entry stack: [S1, S0]
Stack pops: 9
Stack additions: [V1141, 0x0, S0, S1]
Exit stack: []

================================

Block 0x1212
[0x1212:0x135f]
---
Predecessors: [0x11f8]
Successors: [0x1360]
---
0x1212 INVALID
0x1213 JUMPDEST
0x1214 DUP1
0x1215 SWAP2
0x1216 POP
0x1217 POP
0x1218 SWAP3
0x1219 SWAP2
0x121a POP
0x121b POP
0x121c JUMP
0x121d JUMPDEST
0x121e PUSH1 0x0
0x1220 DUP1
0x1221 PUSH2 0xf77
0x1224 PUSH1 0x64
0x1226 PUSH2 0xf69
0x1229 PUSH1 0x4
0x122b SLOAD
0x122c DUP7
0x122d PUSH2 0xef3
0x1230 SWAP1
0x1231 SWAP2
0x1232 SWAP1
0x1233 PUSH4 0xffffffff
0x1238 AND
0x1239 JUMP
0x123a JUMPDEST
0x123b PUSH2 0xed8
0x123e SWAP1
0x123f SWAP2
0x1240 SWAP1
0x1241 PUSH4 0xffffffff
0x1246 AND
0x1247 JUMP
0x1248 JUMPDEST
0x1249 SWAP1
0x124a POP
0x124b PUSH1 0x1
0x124d PUSH1 0x0
0x124f SWAP1
0x1250 SLOAD
0x1251 SWAP1
0x1252 PUSH2 0x100
0x1255 EXP
0x1256 SWAP1
0x1257 DIV
0x1258 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x126d AND
0x126e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1283 AND
0x1284 PUSH4 0x23b872dd
0x1289 CALLER
0x128a PUSH1 0x2
0x128c PUSH1 0x0
0x128e SWAP1
0x128f SLOAD
0x1290 SWAP1
0x1291 PUSH2 0x100
0x1294 EXP
0x1295 SWAP1
0x1296 DIV
0x1297 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12ac AND
0x12ad DUP5
0x12ae PUSH1 0x40
0x12b0 MLOAD
0x12b1 DUP5
0x12b2 PUSH4 0xffffffff
0x12b7 AND
0x12b8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x12d6 MUL
0x12d7 DUP2
0x12d8 MSTORE
0x12d9 PUSH1 0x4
0x12db ADD
0x12dc DUP1
0x12dd DUP5
0x12de PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12f3 AND
0x12f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1309 AND
0x130a DUP2
0x130b MSTORE
0x130c PUSH1 0x20
0x130e ADD
0x130f DUP4
0x1310 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1325 AND
0x1326 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x133b AND
0x133c DUP2
0x133d MSTORE
0x133e PUSH1 0x20
0x1340 ADD
0x1341 DUP3
0x1342 DUP2
0x1343 MSTORE
0x1344 PUSH1 0x20
0x1346 ADD
0x1347 SWAP4
0x1348 POP
0x1349 POP
0x134a POP
0x134b POP
0x134c PUSH1 0x20
0x134e PUSH1 0x40
0x1350 MLOAD
0x1351 DUP1
0x1352 DUP4
0x1353 SUB
0x1354 DUP2
0x1355 PUSH1 0x0
0x1357 DUP8
0x1358 DUP1
0x1359 EXTCODESIZE
0x135a ISZERO
0x135b ISZERO
0x135c PUSH2 0x1093
0x135f JUMPI
---
0x1212: INVALID 
0x1213: JUMPDEST 
0x121c: JUMP S4
0x121d: JUMPDEST 
0x121e: V1147 = 0x0
0x1221: V1148 = 0xf77
0x1224: V1149 = 0x64
0x1226: V1150 = 0xf69
0x1229: V1151 = 0x4
0x122b: V1152 = S[0x4]
0x122d: V1153 = 0xef3
0x1233: V1154 = 0xffffffff
0x1238: V1155 = AND 0xffffffff 0xef3
0x1239: THROW 
0x123a: JUMPDEST 
0x123b: V1156 = 0xed8
0x1241: V1157 = 0xffffffff
0x1246: V1158 = AND 0xffffffff 0xed8
0x1247: THROW 
0x1248: JUMPDEST 
0x124b: V1159 = 0x1
0x124d: V1160 = 0x0
0x1250: V1161 = S[0x1]
0x1252: V1162 = 0x100
0x1255: V1163 = EXP 0x100 0x0
0x1257: V1164 = DIV V1161 0x1
0x1258: V1165 = 0xffffffffffffffffffffffffffffffffffffffff
0x126d: V1166 = AND 0xffffffffffffffffffffffffffffffffffffffff V1164
0x126e: V1167 = 0xffffffffffffffffffffffffffffffffffffffff
0x1283: V1168 = AND 0xffffffffffffffffffffffffffffffffffffffff V1166
0x1284: V1169 = 0x23b872dd
0x1289: V1170 = CALLER
0x128a: V1171 = 0x2
0x128c: V1172 = 0x0
0x128f: V1173 = S[0x2]
0x1291: V1174 = 0x100
0x1294: V1175 = EXP 0x100 0x0
0x1296: V1176 = DIV V1173 0x1
0x1297: V1177 = 0xffffffffffffffffffffffffffffffffffffffff
0x12ac: V1178 = AND 0xffffffffffffffffffffffffffffffffffffffff V1176
0x12ae: V1179 = 0x40
0x12b0: V1180 = M[0x40]
0x12b2: V1181 = 0xffffffff
0x12b7: V1182 = AND 0xffffffff 0x23b872dd
0x12b8: V1183 = 0x100000000000000000000000000000000000000000000000000000000
0x12d6: V1184 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x23b872dd
0x12d8: M[V1180] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x12d9: V1185 = 0x4
0x12db: V1186 = ADD 0x4 V1180
0x12de: V1187 = 0xffffffffffffffffffffffffffffffffffffffff
0x12f3: V1188 = AND 0xffffffffffffffffffffffffffffffffffffffff V1170
0x12f4: V1189 = 0xffffffffffffffffffffffffffffffffffffffff
0x1309: V1190 = AND 0xffffffffffffffffffffffffffffffffffffffff V1188
0x130b: M[V1186] = V1190
0x130c: V1191 = 0x20
0x130e: V1192 = ADD 0x20 V1186
0x1310: V1193 = 0xffffffffffffffffffffffffffffffffffffffff
0x1325: V1194 = AND 0xffffffffffffffffffffffffffffffffffffffff V1178
0x1326: V1195 = 0xffffffffffffffffffffffffffffffffffffffff
0x133b: V1196 = AND 0xffffffffffffffffffffffffffffffffffffffff V1194
0x133d: M[V1192] = V1196
0x133e: V1197 = 0x20
0x1340: V1198 = ADD 0x20 V1192
0x1343: M[V1198] = S0
0x1344: V1199 = 0x20
0x1346: V1200 = ADD 0x20 V1198
0x134c: V1201 = 0x20
0x134e: V1202 = 0x40
0x1350: V1203 = M[0x40]
0x1353: V1204 = SUB V1200 V1203
0x1355: V1205 = 0x0
0x1359: V1206 = EXTCODESIZE V1168
0x135a: V1207 = ISZERO V1206
0x135b: V1208 = ISZERO V1207
0x135c: V1209 = 0x1093
0x135f: THROWI V1208
---
Entry stack: [S3, S2, 0x0, V1141]
Stack pops: 0
Stack additions: [S0, V1152, S0, 0xf69, 0x64, 0xf77, 0x0, 0x0, S0, S1, S0, V1168, 0x0, V1203, V1204, V1203, 0x20, V1200, 0x23b872dd, V1168, S0]
Exit stack: []

================================

Block 0x1360
[0x1360:0x136c]
---
Predecessors: [0x1212]
Successors: [0x136d]
---
0x1360 PUSH1 0x0
0x1362 DUP1
0x1363 REVERT
0x1364 JUMPDEST
0x1365 GAS
0x1366 CALL
0x1367 ISZERO
0x1368 ISZERO
0x1369 PUSH2 0x10a0
0x136c JUMPI
---
0x1360: V1210 = 0x0
0x1363: REVERT 0x0 0x0
0x1364: JUMPDEST 
0x1365: V1211 = GAS
0x1366: V1212 = CALL V1211 S0 S1 S2 S3 S4 S5
0x1367: V1213 = ISZERO V1212
0x1368: V1214 = ISZERO V1213
0x1369: V1215 = 0x10a0
0x136c: THROWI V1214
---
Entry stack: [S9, V1168, 0x23b872dd, V1200, 0x20, V1203, V1204, V1203, 0x0, V1168]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x136d
[0x136d:0x1381]
---
Predecessors: [0x1360]
Successors: [0x1382]
---
0x136d PUSH1 0x0
0x136f DUP1
0x1370 REVERT
0x1371 JUMPDEST
0x1372 POP
0x1373 POP
0x1374 POP
0x1375 PUSH1 0x40
0x1377 MLOAD
0x1378 DUP1
0x1379 MLOAD
0x137a SWAP1
0x137b POP
0x137c ISZERO
0x137d ISZERO
0x137e PUSH2 0x10b5
0x1381 JUMPI
---
0x136d: V1216 = 0x0
0x1370: REVERT 0x0 0x0
0x1371: JUMPDEST 
0x1375: V1217 = 0x40
0x1377: V1218 = M[0x40]
0x1379: V1219 = M[V1218]
0x137c: V1220 = ISZERO V1219
0x137d: V1221 = ISZERO V1220
0x137e: V1222 = 0x10b5
0x1381: THROWI V1221
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1382
[0x1382:0x139b]
---
Predecessors: [0x136d]
Successors: [0x139c]
---
0x1382 PUSH1 0x0
0x1384 DUP1
0x1385 REVERT
0x1386 JUMPDEST
0x1387 DUP1
0x1388 SWAP2
0x1389 POP
0x138a POP
0x138b SWAP2
0x138c SWAP1
0x138d POP
0x138e JUMP
0x138f JUMPDEST
0x1390 PUSH1 0x0
0x1392 DUP3
0x1393 DUP3
0x1394 GT
0x1395 ISZERO
0x1396 ISZERO
0x1397 ISZERO
0x1398 PUSH2 0x10cc
0x139b JUMPI
---
0x1382: V1223 = 0x0
0x1385: REVERT 0x0 0x0
0x1386: JUMPDEST 
0x138e: JUMP S3
0x138f: JUMPDEST 
0x1390: V1224 = 0x0
0x1394: V1225 = GT S0 S1
0x1395: V1226 = ISZERO V1225
0x1396: V1227 = ISZERO V1226
0x1397: V1228 = ISZERO V1227
0x1398: V1229 = 0x10cc
0x139b: THROWI V1228
---
Entry stack: []
Stack pops: 0
Stack additions: [S0, 0x0, S0, S1]
Exit stack: []

================================

Block 0x139c
[0x139c:0x13b5]
---
Predecessors: [0x1382]
Successors: [0x13b6]
---
0x139c INVALID
0x139d JUMPDEST
0x139e DUP2
0x139f DUP4
0x13a0 SUB
0x13a1 SWAP1
0x13a2 POP
0x13a3 SWAP3
0x13a4 SWAP2
0x13a5 POP
0x13a6 POP
0x13a7 JUMP
0x13a8 JUMPDEST
0x13a9 DUP2
0x13aa SLOAD
0x13ab DUP2
0x13ac DUP4
0x13ad SSTORE
0x13ae DUP2
0x13af DUP2
0x13b0 ISZERO
0x13b1 GT
0x13b2 PUSH2 0x1104
0x13b5 JUMPI
---
0x139c: INVALID 
0x139d: JUMPDEST 
0x13a0: V1230 = SUB S2 S1
0x13a7: JUMP S3
0x13a8: JUMPDEST 
0x13aa: V1231 = S[S1]
0x13ad: S[S1] = S0
0x13b0: V1232 = ISZERO V1231
0x13b1: V1233 = GT V1232 S0
0x13b2: V1234 = 0x1104
0x13b5: THROWI V1233
---
Entry stack: [S2, S1, 0x0]
Stack pops: 0
Stack additions: [V1230, V1231, S0, S1]
Exit stack: []

================================

Block 0x13b6
[0x13b6:0x13d4]
---
Predecessors: [0x139c]
Successors: [0x13d5]
---
0x13b6 PUSH1 0x2
0x13b8 MUL
0x13b9 DUP2
0x13ba PUSH1 0x2
0x13bc MUL
0x13bd DUP4
0x13be PUSH1 0x0
0x13c0 MSTORE
0x13c1 PUSH1 0x20
0x13c3 PUSH1 0x0
0x13c5 SHA3
0x13c6 SWAP2
0x13c7 DUP3
0x13c8 ADD
0x13c9 SWAP2
0x13ca ADD
0x13cb PUSH2 0x1103
0x13ce SWAP2
0x13cf SWAP1
0x13d0 PUSH2 0x113b
0x13d3 JUMP
0x13d4 JUMPDEST
---
0x13b6: V1235 = 0x2
0x13b8: V1236 = MUL 0x2 V1231
0x13ba: V1237 = 0x2
0x13bc: V1238 = MUL 0x2 S1
0x13be: V1239 = 0x0
0x13c0: M[0x0] = S2
0x13c1: V1240 = 0x20
0x13c3: V1241 = 0x0
0x13c5: V1242 = SHA3 0x0 0x20
0x13c8: V1243 = ADD V1242 V1236
0x13ca: V1244 = ADD V1242 V1238
0x13cb: V1245 = 0x1103
0x13d0: V1246 = 0x113b
0x13d3: THROW 
0x13d4: JUMPDEST 
---
Entry stack: [S2, S1, V1231]
Stack pops: 3
Stack additions: [S2, S1]
Exit stack: []

================================

Block 0x13d5
[0x13d5:0x13e7]
---
Predecessors: [0x13b6]
Successors: [0x13e8]
---
0x13d5 JUMPDEST
0x13d6 POP
0x13d7 POP
0x13d8 POP
0x13d9 JUMP
0x13da JUMPDEST
0x13db DUP2
0x13dc SLOAD
0x13dd DUP2
0x13de DUP4
0x13df SSTORE
0x13e0 DUP2
0x13e1 DUP2
0x13e2 ISZERO
0x13e3 GT
0x13e4 PUSH2 0x1136
0x13e7 JUMPI
---
0x13d5: JUMPDEST 
0x13d9: JUMP S3
0x13da: JUMPDEST 
0x13dc: V1247 = S[S1]
0x13df: S[S1] = S0
0x13e2: V1248 = ISZERO V1247
0x13e3: V1249 = GT V1248 S0
0x13e4: V1250 = 0x1136
0x13e7: THROWI V1249
---
Entry stack: []
Stack pops: 8
Stack additions: [V1247, S0, S1]
Exit stack: []

================================

Block 0x13e8
[0x13e8:0x1406]
---
Predecessors: [0x13d5]
Successors: [0x1407]
---
0x13e8 PUSH1 0x2
0x13ea MUL
0x13eb DUP2
0x13ec PUSH1 0x2
0x13ee MUL
0x13ef DUP4
0x13f0 PUSH1 0x0
0x13f2 MSTORE
0x13f3 PUSH1 0x20
0x13f5 PUSH1 0x0
0x13f7 SHA3
0x13f8 SWAP2
0x13f9 DUP3
0x13fa ADD
0x13fb SWAP2
0x13fc ADD
0x13fd PUSH2 0x1135
0x1400 SWAP2
0x1401 SWAP1
0x1402 PUSH2 0x113b
0x1405 JUMP
0x1406 JUMPDEST
---
0x13e8: V1251 = 0x2
0x13ea: V1252 = MUL 0x2 V1247
0x13ec: V1253 = 0x2
0x13ee: V1254 = MUL 0x2 S1
0x13f0: V1255 = 0x0
0x13f2: M[0x0] = S2
0x13f3: V1256 = 0x20
0x13f5: V1257 = 0x0
0x13f7: V1258 = SHA3 0x0 0x20
0x13fa: V1259 = ADD V1258 V1252
0x13fc: V1260 = ADD V1258 V1254
0x13fd: V1261 = 0x1135
0x1402: V1262 = 0x113b
0x1405: THROW 
0x1406: JUMPDEST 
---
Entry stack: [S2, S1, V1247]
Stack pops: 3
Stack additions: [S2, S1]
Exit stack: []

================================

Block 0x1407
[0x1407:0x1411]
---
Predecessors: [0x13e8]
Successors: [0x1412]
---
0x1407 JUMPDEST
0x1408 POP
0x1409 POP
0x140a POP
0x140b JUMP
0x140c JUMPDEST
0x140d PUSH2 0x1167
0x1410 SWAP2
0x1411 SWAP1
---
0x1407: JUMPDEST 
0x140b: JUMP S3
0x140c: JUMPDEST 
0x140d: V1263 = 0x1167
---
Entry stack: []
Stack pops: 8
Stack additions: [S0, S1, 0x1167]
Exit stack: []

================================

Block 0x1412
[0x1412:0x141a]
---
Predecessors: [0x1407]
Successors: [0x141b]
---
0x1412 JUMPDEST
0x1413 DUP1
0x1414 DUP3
0x1415 GT
0x1416 ISZERO
0x1417 PUSH2 0x1163
0x141a JUMPI
---
0x1412: JUMPDEST 
0x1415: V1264 = GT S1 S0
0x1416: V1265 = ISZERO V1264
0x1417: V1266 = 0x1163
0x141a: THROWI V1265
---
Entry stack: [0x1167, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [0x1167, S1, S0]

================================

Block 0x141b
[0x141b:0x1466]
---
Predecessors: [0x1412]
Successors: []
---
0x141b PUSH1 0x0
0x141d DUP1
0x141e DUP3
0x141f ADD
0x1420 PUSH1 0x0
0x1422 SWAP1
0x1423 SSTORE
0x1424 PUSH1 0x1
0x1426 DUP3
0x1427 ADD
0x1428 PUSH1 0x0
0x142a SWAP1
0x142b SSTORE
0x142c POP
0x142d PUSH1 0x2
0x142f ADD
0x1430 PUSH2 0x1141
0x1433 JUMP
0x1434 JUMPDEST
0x1435 POP
0x1436 SWAP1
0x1437 JUMP
0x1438 JUMPDEST
0x1439 SWAP1
0x143a JUMP
0x143b STOP
0x143c LOG1
0x143d PUSH6 0x627a7a723058
0x1444 SHA3
0x1445 MISSING 0xc6
0x1446 MISSING 0xe7
0x1447 MISSING 0xee
0x1448 MISSING 0xda
0x1449 MISSING 0x1e
0x144a MISSING 0x27
0x144b CALLCODE
0x144c MSTORE
0x144d MISSING 0x5f
0x144e SWAP1
0x144f MISSING 0xab
0x1450 PUSH12 0x3fbe35f4e1b395fb0329368f
0x145d MISSING 0x4c
0x145e DUP5
0x145f DUP15
0x1460 SWAP6
0x1461 SWAP1
0x1462 MISSING 0xb5
0x1463 MISSING 0xdc
0x1464 MISSING 0xde
0x1465 STOP
0x1466 MISSING 0x29
---
0x141b: V1267 = 0x0
0x141f: V1268 = ADD S0 0x0
0x1420: V1269 = 0x0
0x1423: S[V1268] = 0x0
0x1424: V1270 = 0x1
0x1427: V1271 = ADD S0 0x1
0x1428: V1272 = 0x0
0x142b: S[V1271] = 0x0
0x142d: V1273 = 0x2
0x142f: V1274 = ADD 0x2 S0
0x1430: V1275 = 0x1141
0x1433: THROW 
0x1434: JUMPDEST 
0x1437: JUMP S2
0x1438: JUMPDEST 
0x143a: JUMP S1
0x143b: STOP 
0x143c: LOG S0 S1 S2
0x143d: V1276 = 0x627a7a723058
0x1444: V1277 = SHA3 0x627a7a723058 S3
0x1445: MISSING 0xc6
0x1446: MISSING 0xe7
0x1447: MISSING 0xee
0x1448: MISSING 0xda
0x1449: MISSING 0x1e
0x144a: MISSING 0x27
0x144b: V1278 = CALLCODE S0 S1 S2 S3 S4 S5 S6
0x144c: M[V1278] = S7
0x144d: MISSING 0x5f
0x144f: MISSING 0xab
0x1450: V1279 = 0x3fbe35f4e1b395fb0329368f
0x145d: MISSING 0x4c
0x1462: MISSING 0xb5
0x1463: MISSING 0xdc
0x1464: MISSING 0xde
0x1465: STOP 
0x1466: MISSING 0x29
---
Entry stack: [0x1167, S1, S0]
Stack pops: 12080
Stack additions: []
Exit stack: []

================================

Function 0:
Public function signature: 0x8da5cb5b
Entry block: 0x51
Exit block: 0x64
Body: 0x51, 0x58, 0x5c, 0x64, 0xdf

Function 1:
Public function signature: 0xf2fde38b
Entry block: 0xa6
Exit block: 0xdd
Body: 0xa6, 0xad, 0xb1, 0xdd, 0x104, 0x15b, 0x15f, 0x197, 0x19b

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

