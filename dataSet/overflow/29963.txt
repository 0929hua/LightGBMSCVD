Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xd9]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xd9
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xd9
0xa: JUMPI 0xd9 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x261]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x6fdde03
0x3a EQ
0x3b PUSH2 0x261
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x6fdde03
0x3a: V12 = EQ 0x6fdde03 V10
0x3b: V13 = 0x261
0x3e: JUMPI 0x261 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x2fa]
---
0x3f DUP1
0x40 PUSH4 0x95ea7b3
0x45 EQ
0x46 PUSH2 0x2fa
0x49 JUMPI
---
0x40: V14 = 0x95ea7b3
0x45: V15 = EQ 0x95ea7b3 V10
0x46: V16 = 0x2fa
0x49: JUMPI 0x2fa V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x351]
---
0x4a DUP1
0x4b PUSH4 0xdcf4b8f
0x50 EQ
0x51 PUSH2 0x351
0x54 JUMPI
---
0x4b: V17 = 0xdcf4b8f
0x50: V18 = EQ 0xdcf4b8f V10
0x51: V19 = 0x351
0x54: JUMPI 0x351 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x377]
---
0x55 DUP1
0x56 PUSH4 0x18160ddd
0x5b EQ
0x5c PUSH2 0x377
0x5f JUMPI
---
0x56: V20 = 0x18160ddd
0x5b: V21 = EQ 0x18160ddd V10
0x5c: V22 = 0x377
0x5f: JUMPI 0x377 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x39d]
---
0x60 DUP1
0x61 PUSH4 0x23b872dd
0x66 EQ
0x67 PUSH2 0x39d
0x6a JUMPI
---
0x61: V23 = 0x23b872dd
0x66: V24 = EQ 0x23b872dd V10
0x67: V25 = 0x39d
0x6a: JUMPI 0x39d V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x60]
Successors: [0x76, 0x413]
---
0x6b DUP1
0x6c PUSH4 0x313ce567
0x71 EQ
0x72 PUSH2 0x413
0x75 JUMPI
---
0x6c: V26 = 0x313ce567
0x71: V27 = EQ 0x313ce567 V10
0x72: V28 = 0x413
0x75: JUMPI 0x413 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x76
[0x76:0x80]
---
Predecessors: [0x6b]
Successors: [0x81, 0x43f]
---
0x76 DUP1
0x77 PUSH4 0x64acdb77
0x7c EQ
0x7d PUSH2 0x43f
0x80 JUMPI
---
0x77: V29 = 0x64acdb77
0x7c: V30 = EQ 0x64acdb77 V10
0x7d: V31 = 0x43f
0x80: JUMPI 0x43f V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x81
[0x81:0x8b]
---
Predecessors: [0x76]
Successors: [0x8c, 0x451]
---
0x81 DUP1
0x82 PUSH4 0x70a08231
0x87 EQ
0x88 PUSH2 0x451
0x8b JUMPI
---
0x82: V32 = 0x70a08231
0x87: V33 = EQ 0x70a08231 V10
0x88: V34 = 0x451
0x8b: JUMPI 0x451 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8c
[0x8c:0x96]
---
Predecessors: [0x81]
Successors: [0x97, 0x49b]
---
0x8c DUP1
0x8d PUSH4 0x8f580996
0x92 EQ
0x93 PUSH2 0x49b
0x96 JUMPI
---
0x8d: V35 = 0x8f580996
0x92: V36 = EQ 0x8f580996 V10
0x93: V37 = 0x49b
0x96: JUMPI 0x49b V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x97
[0x97:0xa1]
---
Predecessors: [0x8c]
Successors: [0xa2, 0x4ad]
---
0x97 DUP1
0x98 PUSH4 0x95d89b41
0x9d EQ
0x9e PUSH2 0x4ad
0xa1 JUMPI
---
0x98: V38 = 0x95d89b41
0x9d: V39 = EQ 0x95d89b41 V10
0x9e: V40 = 0x4ad
0xa1: JUMPI 0x4ad V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa2
[0xa2:0xac]
---
Predecessors: [0x97]
Successors: [0xad, 0x546]
---
0xa2 DUP1
0xa3 PUSH4 0xa9059cbb
0xa8 EQ
0xa9 PUSH2 0x546
0xac JUMPI
---
0xa3: V41 = 0xa9059cbb
0xa8: V42 = EQ 0xa9059cbb V10
0xa9: V43 = 0x546
0xac: JUMPI 0x546 V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xad
[0xad:0xb7]
---
Predecessors: [0xa2]
Successors: [0xb8, 0x59d]
---
0xad DUP1
0xae PUSH4 0xc59d4847
0xb3 EQ
0xb4 PUSH2 0x59d
0xb7 JUMPI
---
0xae: V44 = 0xc59d4847
0xb3: V45 = EQ 0xc59d4847 V10
0xb4: V46 = 0x59d
0xb7: JUMPI 0x59d V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xb8
[0xb8:0xc2]
---
Predecessors: [0xad]
Successors: [0xc3, 0x5d5]
---
0xb8 DUP1
0xb9 PUSH4 0xda040c0f
0xbe EQ
0xbf PUSH2 0x5d5
0xc2 JUMPI
---
0xb9: V47 = 0xda040c0f
0xbe: V48 = EQ 0xda040c0f V10
0xbf: V49 = 0x5d5
0xc2: JUMPI 0x5d5 V48
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xc3
[0xc3:0xcd]
---
Predecessors: [0xb8]
Successors: [0xce, 0x5ff]
---
0xc3 DUP1
0xc4 PUSH4 0xdd62ed3e
0xc9 EQ
0xca PUSH2 0x5ff
0xcd JUMPI
---
0xc4: V50 = 0xdd62ed3e
0xc9: V51 = EQ 0xdd62ed3e V10
0xca: V52 = 0x5ff
0xcd: JUMPI 0x5ff V51
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xce
[0xce:0xd8]
---
Predecessors: [0xc3]
Successors: [0xd9, 0x668]
---
0xce DUP1
0xcf PUSH4 0xe58fc54c
0xd4 EQ
0xd5 PUSH2 0x668
0xd8 JUMPI
---
0xcf: V53 = 0xe58fc54c
0xd4: V54 = EQ 0xe58fc54c V10
0xd5: V55 = 0x668
0xd8: JUMPI 0x668 V54
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xd9
[0xd9:0xdc]
---
Predecessors: [0x0, 0xce]
Successors: [0xdd]
---
0xd9 JUMPDEST
0xda PUSH2 0x25f
---
0xd9: JUMPDEST 
0xda: V56 = 0x25f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x25f]
Exit stack: [V10, 0x25f]

================================

Block 0xdd
[0xdd:0xf5]
---
Predecessors: [0xd9]
Successors: [0xf6, 0xfb]
---
0xdd JUMPDEST
0xde PUSH1 0x0
0xe0 PUSH1 0x0
0xe2 PUSH1 0x14
0xe4 SWAP1
0xe5 SLOAD
0xe6 SWAP1
0xe7 PUSH2 0x100
0xea EXP
0xeb SWAP1
0xec DIV
0xed PUSH1 0xff
0xef AND
0xf0 ISZERO
0xf1 ISZERO
0xf2 PUSH2 0xfb
0xf5 JUMPI
---
0xdd: JUMPDEST 
0xde: V57 = 0x0
0xe0: V58 = 0x0
0xe2: V59 = 0x14
0xe5: V60 = S[0x0]
0xe7: V61 = 0x100
0xea: V62 = EXP 0x100 0x14
0xec: V63 = DIV V60 0x10000000000000000000000000000000000000000
0xed: V64 = 0xff
0xef: V65 = AND 0xff V63
0xf0: V66 = ISZERO V65
0xf1: V67 = ISZERO V66
0xf2: V68 = 0xfb
0xf5: JUMPI 0xfb V67
---
Entry stack: [V10, 0x25f]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x25f, 0x0]

================================

Block 0xf6
[0xf6:0xfa]
---
Predecessors: [0xdd]
Successors: []
---
0xf6 PUSH1 0x0
0xf8 PUSH1 0x0
0xfa REVERT
---
0xf6: V69 = 0x0
0xf8: V70 = 0x0
0xfa: REVERT 0x0 0x0
---
Entry stack: [V10, 0x25f, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x25f, 0x0]

================================

Block 0xfb
[0xfb:0x104]
---
Predecessors: [0xdd]
Successors: [0x105, 0x109]
---
0xfb JUMPDEST
0xfc PUSH1 0x0
0xfe CALLVALUE
0xff EQ
0x100 ISZERO
0x101 PUSH2 0x109
0x104 JUMPI
---
0xfb: JUMPDEST 
0xfc: V71 = 0x0
0xfe: V72 = CALLVALUE
0xff: V73 = EQ V72 0x0
0x100: V74 = ISZERO V73
0x101: V75 = 0x109
0x104: JUMPI 0x109 V74
---
Entry stack: [V10, 0x25f, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x25f, 0x0]

================================

Block 0x105
[0x105:0x108]
---
Predecessors: [0xfb]
Successors: [0x25c]
---
0x105 PUSH2 0x25c
0x108 JUMP
---
0x105: V76 = 0x25c
0x108: JUMP 0x25c
---
Entry stack: [V10, 0x25f, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x25f, 0x0]

================================

Block 0x109
[0x109:0x169]
---
Predecessors: [0xfb]
Successors: [0x16a, 0x16b]
---
0x109 JUMPDEST
0x10a PUSH1 0x0
0x10c PUSH1 0x0
0x10e SWAP1
0x10f SLOAD
0x110 SWAP1
0x111 PUSH2 0x100
0x114 EXP
0x115 SWAP1
0x116 DIV
0x117 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12c AND
0x12d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x142 AND
0x143 PUSH2 0x8fc
0x146 CALLVALUE
0x147 SWAP1
0x148 DUP2
0x149 ISZERO
0x14a MUL
0x14b SWAP1
0x14c PUSH1 0x40
0x14e MLOAD
0x14f DUP1
0x150 SWAP1
0x151 POP
0x152 PUSH1 0x0
0x154 PUSH1 0x40
0x156 MLOAD
0x157 DUP1
0x158 DUP4
0x159 SUB
0x15a DUP2
0x15b DUP6
0x15c DUP9
0x15d DUP9
0x15e CALL
0x15f SWAP4
0x160 POP
0x161 POP
0x162 POP
0x163 POP
0x164 ISZERO
0x165 ISZERO
0x166 PUSH2 0x16b
0x169 JUMPI
---
0x109: JUMPDEST 
0x10a: V77 = 0x0
0x10c: V78 = 0x0
0x10f: V79 = S[0x0]
0x111: V80 = 0x100
0x114: V81 = EXP 0x100 0x0
0x116: V82 = DIV V79 0x1
0x117: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x12c: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V82
0x12d: V85 = 0xffffffffffffffffffffffffffffffffffffffff
0x142: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff V84
0x143: V87 = 0x8fc
0x146: V88 = CALLVALUE
0x149: V89 = ISZERO V88
0x14a: V90 = MUL V89 0x8fc
0x14c: V91 = 0x40
0x14e: V92 = M[0x40]
0x152: V93 = 0x0
0x154: V94 = 0x40
0x156: V95 = M[0x40]
0x159: V96 = SUB V92 V95
0x15e: V97 = CALL V90 V86 V88 V95 V96 V95 0x0
0x164: V98 = ISZERO V97
0x165: V99 = ISZERO V98
0x166: V100 = 0x16b
0x169: JUMPI 0x16b V99
---
Entry stack: [V10, 0x25f, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x25f, 0x0]

================================

Block 0x16a
[0x16a:0x16a]
---
Predecessors: [0x109]
Successors: []
---
0x16a INVALID
---
0x16a: INVALID 
---
Entry stack: [V10, 0x25f, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x25f, 0x0]

================================

Block 0x16b
[0x16b:0x191]
---
Predecessors: [0x109]
Successors: [0x192, 0x199]
---
0x16b JUMPDEST
0x16c CALLVALUE
0x16d PUSH1 0x3
0x16f PUSH1 0x0
0x171 DUP3
0x172 DUP3
0x173 SLOAD
0x174 ADD
0x175 SWAP3
0x176 POP
0x177 POP
0x178 DUP2
0x179 SWAP1
0x17a SSTORE
0x17b POP
0x17c PUSH1 0x64
0x17e CALLVALUE
0x17f MUL
0x180 SWAP1
0x181 POP
0x182 PUSH7 0x2386f26fc10000
0x18a CALLVALUE
0x18b LT
0x18c ISZERO
0x18d ISZERO
0x18e PUSH2 0x199
0x191 JUMPI
---
0x16b: JUMPDEST 
0x16c: V101 = CALLVALUE
0x16d: V102 = 0x3
0x16f: V103 = 0x0
0x173: V104 = S[0x3]
0x174: V105 = ADD V104 V101
0x17a: S[0x3] = V105
0x17c: V106 = 0x64
0x17e: V107 = CALLVALUE
0x17f: V108 = MUL V107 0x64
0x182: V109 = 0x2386f26fc10000
0x18a: V110 = CALLVALUE
0x18b: V111 = LT V110 0x2386f26fc10000
0x18c: V112 = ISZERO V111
0x18d: V113 = ISZERO V112
0x18e: V114 = 0x199
0x191: JUMPI 0x199 V113
---
Entry stack: [V10, 0x25f, 0x0]
Stack pops: 1
Stack additions: [V108]
Exit stack: [V10, 0x25f, V108]

================================

Block 0x192
[0x192:0x198]
---
Predecessors: [0x16b]
Successors: [0x199]
---
0x192 PUSH1 0x3
0x194 SLOAD
0x195 DUP2
0x196 ADD
0x197 SWAP1
0x198 POP
---
0x192: V115 = 0x3
0x194: V116 = S[0x3]
0x196: V117 = ADD V108 V116
---
Entry stack: [V10, 0x25f, V108]
Stack pops: 1
Stack additions: [V117]
Exit stack: [V10, 0x25f, V117]

================================

Block 0x199
[0x199:0x25b]
---
Predecessors: [0x16b, 0x192]
Successors: [0x25c]
---
0x199 JUMPDEST
0x19a DUP1
0x19b PUSH1 0x4
0x19d PUSH1 0x0
0x19f DUP3
0x1a0 DUP3
0x1a1 SLOAD
0x1a2 ADD
0x1a3 SWAP3
0x1a4 POP
0x1a5 POP
0x1a6 DUP2
0x1a7 SWAP1
0x1a8 SSTORE
0x1a9 POP
0x1aa DUP1
0x1ab PUSH1 0x1
0x1ad PUSH1 0x0
0x1af CALLER
0x1b0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c5 AND
0x1c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1db AND
0x1dc DUP2
0x1dd MSTORE
0x1de PUSH1 0x20
0x1e0 ADD
0x1e1 SWAP1
0x1e2 DUP2
0x1e3 MSTORE
0x1e4 PUSH1 0x20
0x1e6 ADD
0x1e7 PUSH1 0x0
0x1e9 SHA3
0x1ea PUSH1 0x0
0x1ec DUP3
0x1ed DUP3
0x1ee SLOAD
0x1ef ADD
0x1f0 SWAP3
0x1f1 POP
0x1f2 POP
0x1f3 DUP2
0x1f4 SWAP1
0x1f5 SSTORE
0x1f6 POP
0x1f7 CALLER
0x1f8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20d AND
0x20e ADDRESS
0x20f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x224 AND
0x225 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x246 DUP4
0x247 PUSH1 0x40
0x249 MLOAD
0x24a DUP1
0x24b DUP3
0x24c DUP2
0x24d MSTORE
0x24e PUSH1 0x20
0x250 ADD
0x251 SWAP2
0x252 POP
0x253 POP
0x254 PUSH1 0x40
0x256 MLOAD
0x257 DUP1
0x258 SWAP2
0x259 SUB
0x25a SWAP1
0x25b LOG3
---
0x199: JUMPDEST 
0x19b: V118 = 0x4
0x19d: V119 = 0x0
0x1a1: V120 = S[0x4]
0x1a2: V121 = ADD V120 S0
0x1a8: S[0x4] = V121
0x1ab: V122 = 0x1
0x1ad: V123 = 0x0
0x1af: V124 = CALLER
0x1b0: V125 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c5: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V124
0x1c6: V127 = 0xffffffffffffffffffffffffffffffffffffffff
0x1db: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x1dd: M[0x0] = V128
0x1de: V129 = 0x20
0x1e0: V130 = ADD 0x20 0x0
0x1e3: M[0x20] = 0x1
0x1e4: V131 = 0x20
0x1e6: V132 = ADD 0x20 0x20
0x1e7: V133 = 0x0
0x1e9: V134 = SHA3 0x0 0x40
0x1ea: V135 = 0x0
0x1ee: V136 = S[V134]
0x1ef: V137 = ADD V136 S0
0x1f5: S[V134] = V137
0x1f7: V138 = CALLER
0x1f8: V139 = 0xffffffffffffffffffffffffffffffffffffffff
0x20d: V140 = AND 0xffffffffffffffffffffffffffffffffffffffff V138
0x20e: V141 = ADDRESS
0x20f: V142 = 0xffffffffffffffffffffffffffffffffffffffff
0x224: V143 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0x225: V144 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x247: V145 = 0x40
0x249: V146 = M[0x40]
0x24d: M[V146] = S0
0x24e: V147 = 0x20
0x250: V148 = ADD 0x20 V146
0x254: V149 = 0x40
0x256: V150 = M[0x40]
0x259: V151 = SUB V148 V150
0x25b: LOG V150 V151 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V143 V140
---
Entry stack: [V10, 0x25f, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x25f, S0]

================================

Block 0x25c
[0x25c:0x25e]
---
Predecessors: [0x105, 0x199]
Successors: [0x25f]
---
0x25c JUMPDEST
0x25d POP
0x25e JUMP
---
0x25c: JUMPDEST 
0x25e: JUMP 0x25f
---
Entry stack: [V10, 0x25f, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x25f
[0x25f:0x260]
---
Predecessors: [0x25c]
Successors: []
---
0x25f JUMPDEST
0x260 STOP
---
0x25f: JUMPDEST 
0x260: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x261
[0x261:0x267]
---
Predecessors: [0xb]
Successors: [0x268, 0x269]
---
0x261 JUMPDEST
0x262 CALLVALUE
0x263 ISZERO
0x264 PUSH2 0x269
0x267 JUMPI
---
0x261: JUMPDEST 
0x262: V152 = CALLVALUE
0x263: V153 = ISZERO V152
0x264: V154 = 0x269
0x267: JUMPI 0x269 V153
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x268
[0x268:0x268]
---
Predecessors: [0x261]
Successors: []
---
0x268 INVALID
---
0x268: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x269
[0x269:0x270]
---
Predecessors: [0x261]
Successors: [0x6b6]
---
0x269 JUMPDEST
0x26a PUSH2 0x271
0x26d PUSH2 0x6b6
0x270 JUMP
---
0x269: JUMPDEST 
0x26a: V155 = 0x271
0x26d: V156 = 0x6b6
0x270: JUMP 0x6b6
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x271]
Exit stack: [V10, 0x271]

================================

Block 0x271
[0x271:0x29b]
---
Predecessors: [0x6f8, 0xd66]
Successors: [0x29c, 0x2c0]
---
0x271 JUMPDEST
0x272 PUSH1 0x40
0x274 MLOAD
0x275 DUP1
0x276 DUP1
0x277 PUSH1 0x20
0x279 ADD
0x27a DUP3
0x27b DUP2
0x27c SUB
0x27d DUP3
0x27e MSTORE
0x27f DUP4
0x280 DUP2
0x281 DUP2
0x282 MLOAD
0x283 DUP2
0x284 MSTORE
0x285 PUSH1 0x20
0x287 ADD
0x288 SWAP2
0x289 POP
0x28a DUP1
0x28b MLOAD
0x28c SWAP1
0x28d PUSH1 0x20
0x28f ADD
0x290 SWAP1
0x291 DUP1
0x292 DUP4
0x293 DUP4
0x294 PUSH1 0x0
0x296 DUP4
0x297 EQ
0x298 PUSH2 0x2c0
0x29b JUMPI
---
0x271: JUMPDEST 
0x272: V157 = 0x40
0x274: V158 = M[0x40]
0x277: V159 = 0x20
0x279: V160 = ADD 0x20 V158
0x27c: V161 = SUB V160 V158
0x27e: M[V158] = V161
0x282: V162 = M[S0]
0x284: M[V160] = V162
0x285: V163 = 0x20
0x287: V164 = ADD 0x20 V160
0x28b: V165 = M[S0]
0x28d: V166 = 0x20
0x28f: V167 = ADD 0x20 S0
0x294: V168 = 0x0
0x297: V169 = EQ V165 0x0
0x298: V170 = 0x2c0
0x29b: JUMPI 0x2c0 V169
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: [S0, V158, V158, V164, V167, V165, V165, V164, V167]
Exit stack: [V10, S0, V158, V158, V164, V167, V165, V165, V164, V167]

================================

Block 0x29c
[0x29c:0x2a9]
---
Predecessors: [0x271, 0x2aa]
Successors: [0x2aa, 0x2c0]
---
0x29c JUMPDEST
0x29d DUP1
0x29e MLOAD
0x29f DUP3
0x2a0 MSTORE
0x2a1 PUSH1 0x20
0x2a3 DUP4
0x2a4 GT
0x2a5 ISZERO
0x2a6 PUSH2 0x2c0
0x2a9 JUMPI
---
0x29c: JUMPDEST 
0x29e: V171 = M[S0]
0x2a0: M[S1] = V171
0x2a1: V172 = 0x20
0x2a4: V173 = GT S2 0x20
0x2a5: V174 = ISZERO V173
0x2a6: V175 = 0x2c0
0x2a9: JUMPI 0x2c0 V174
---
Entry stack: [V10, S8, V158, V158, V164, V167, V165, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, S8, V158, V158, V164, V167, V165, S2, S1, S0]

================================

Block 0x2aa
[0x2aa:0x2bf]
---
Predecessors: [0x29c]
Successors: [0x29c]
---
0x2aa PUSH1 0x20
0x2ac DUP3
0x2ad ADD
0x2ae SWAP2
0x2af POP
0x2b0 PUSH1 0x20
0x2b2 DUP2
0x2b3 ADD
0x2b4 SWAP1
0x2b5 POP
0x2b6 PUSH1 0x20
0x2b8 DUP4
0x2b9 SUB
0x2ba SWAP3
0x2bb POP
0x2bc PUSH2 0x29c
0x2bf JUMP
---
0x2aa: V176 = 0x20
0x2ad: V177 = ADD S1 0x20
0x2b0: V178 = 0x20
0x2b3: V179 = ADD S0 0x20
0x2b6: V180 = 0x20
0x2b9: V181 = SUB S2 0x20
0x2bc: V182 = 0x29c
0x2bf: JUMP 0x29c
---
Entry stack: [V10, S8, V158, V158, V164, V167, V165, S2, S1, S0]
Stack pops: 3
Stack additions: [V181, V177, V179]
Exit stack: [V10, S8, V158, V158, V164, V167, V165, V181, V177, V179]

================================

Block 0x2c0
[0x2c0:0x2d2]
---
Predecessors: [0x271, 0x29c]
Successors: [0x2d3, 0x2ec]
---
0x2c0 JUMPDEST
0x2c1 POP
0x2c2 POP
0x2c3 POP
0x2c4 SWAP1
0x2c5 POP
0x2c6 SWAP1
0x2c7 DUP2
0x2c8 ADD
0x2c9 SWAP1
0x2ca PUSH1 0x1f
0x2cc AND
0x2cd DUP1
0x2ce ISZERO
0x2cf PUSH2 0x2ec
0x2d2 JUMPI
---
0x2c0: JUMPDEST 
0x2c8: V183 = ADD V165 V164
0x2ca: V184 = 0x1f
0x2cc: V185 = AND 0x1f V165
0x2ce: V186 = ISZERO V185
0x2cf: V187 = 0x2ec
0x2d2: JUMPI 0x2ec V186
---
Entry stack: [V10, S8, V158, V158, V164, V167, V165, S2, S1, S0]
Stack pops: 6
Stack additions: [V183, V185]
Exit stack: [V10, S8, V158, V158, V183, V185]

================================

Block 0x2d3
[0x2d3:0x2eb]
---
Predecessors: [0x2c0]
Successors: [0x2ec]
---
0x2d3 DUP1
0x2d4 DUP3
0x2d5 SUB
0x2d6 DUP1
0x2d7 MLOAD
0x2d8 PUSH1 0x1
0x2da DUP4
0x2db PUSH1 0x20
0x2dd SUB
0x2de PUSH2 0x100
0x2e1 EXP
0x2e2 SUB
0x2e3 NOT
0x2e4 AND
0x2e5 DUP2
0x2e6 MSTORE
0x2e7 PUSH1 0x20
0x2e9 ADD
0x2ea SWAP2
0x2eb POP
---
0x2d5: V188 = SUB V183 V185
0x2d7: V189 = M[V188]
0x2d8: V190 = 0x1
0x2db: V191 = 0x20
0x2dd: V192 = SUB 0x20 V185
0x2de: V193 = 0x100
0x2e1: V194 = EXP 0x100 V192
0x2e2: V195 = SUB V194 0x1
0x2e3: V196 = NOT V195
0x2e4: V197 = AND V196 V189
0x2e6: M[V188] = V197
0x2e7: V198 = 0x20
0x2e9: V199 = ADD 0x20 V188
---
Entry stack: [V10, S4, V158, V158, V183, V185]
Stack pops: 2
Stack additions: [V199, S0]
Exit stack: [V10, S4, V158, V158, V199, V185]

================================

Block 0x2ec
[0x2ec:0x2f9]
---
Predecessors: [0x2c0, 0x2d3]
Successors: []
---
0x2ec JUMPDEST
0x2ed POP
0x2ee SWAP3
0x2ef POP
0x2f0 POP
0x2f1 POP
0x2f2 PUSH1 0x40
0x2f4 MLOAD
0x2f5 DUP1
0x2f6 SWAP2
0x2f7 SUB
0x2f8 SWAP1
0x2f9 RETURN
---
0x2ec: JUMPDEST 
0x2f2: V200 = 0x40
0x2f4: V201 = M[0x40]
0x2f7: V202 = SUB S1 V201
0x2f9: RETURN V201 V202
---
Entry stack: [V10, S4, V158, V158, S1, V185]
Stack pops: 5
Stack additions: []
Exit stack: [V10]

================================

Block 0x2fa
[0x2fa:0x300]
---
Predecessors: [0x3f]
Successors: [0x301, 0x302]
---
0x2fa JUMPDEST
0x2fb CALLVALUE
0x2fc ISZERO
0x2fd PUSH2 0x302
0x300 JUMPI
---
0x2fa: JUMPDEST 
0x2fb: V203 = CALLVALUE
0x2fc: V204 = ISZERO V203
0x2fd: V205 = 0x302
0x300: JUMPI 0x302 V204
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x301
[0x301:0x301]
---
Predecessors: [0x2fa]
Successors: []
---
0x301 INVALID
---
0x301: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x302
[0x302:0x336]
---
Predecessors: [0x2fa]
Successors: [0x6fb]
---
0x302 JUMPDEST
0x303 PUSH2 0x337
0x306 PUSH1 0x4
0x308 DUP1
0x309 DUP1
0x30a CALLDATALOAD
0x30b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x320 AND
0x321 SWAP1
0x322 PUSH1 0x20
0x324 ADD
0x325 SWAP1
0x326 SWAP2
0x327 SWAP1
0x328 DUP1
0x329 CALLDATALOAD
0x32a SWAP1
0x32b PUSH1 0x20
0x32d ADD
0x32e SWAP1
0x32f SWAP2
0x330 SWAP1
0x331 POP
0x332 POP
0x333 PUSH2 0x6fb
0x336 JUMP
---
0x302: JUMPDEST 
0x303: V206 = 0x337
0x306: V207 = 0x4
0x30a: V208 = CALLDATALOAD 0x4
0x30b: V209 = 0xffffffffffffffffffffffffffffffffffffffff
0x320: V210 = AND 0xffffffffffffffffffffffffffffffffffffffff V208
0x322: V211 = 0x20
0x324: V212 = ADD 0x20 0x4
0x329: V213 = CALLDATALOAD 0x24
0x32b: V214 = 0x20
0x32d: V215 = ADD 0x20 0x24
0x333: V216 = 0x6fb
0x336: JUMP 0x6fb
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x337, V210, V213]
Exit stack: [V10, 0x337, V210, V213]

================================

Block 0x337
[0x337:0x350]
---
Predecessors: [0x884]
Successors: []
---
0x337 JUMPDEST
0x338 PUSH1 0x40
0x33a MLOAD
0x33b DUP1
0x33c DUP3
0x33d ISZERO
0x33e ISZERO
0x33f ISZERO
0x340 ISZERO
0x341 DUP2
0x342 MSTORE
0x343 PUSH1 0x20
0x345 ADD
0x346 SWAP2
0x347 POP
0x348 POP
0x349 PUSH1 0x40
0x34b MLOAD
0x34c DUP1
0x34d SWAP2
0x34e SUB
0x34f SWAP1
0x350 RETURN
---
0x337: JUMPDEST 
0x338: V217 = 0x40
0x33a: V218 = M[0x40]
0x33d: V219 = ISZERO {0x0, 0x1}
0x33e: V220 = ISZERO V219
0x33f: V221 = ISZERO V220
0x340: V222 = ISZERO V221
0x342: M[V218] = V222
0x343: V223 = 0x20
0x345: V224 = ADD 0x20 V218
0x349: V225 = 0x40
0x34b: V226 = M[0x40]
0x34e: V227 = SUB V224 V226
0x350: RETURN V226 V227
---
Entry stack: [V10, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x351
[0x351:0x357]
---
Predecessors: [0x4a]
Successors: [0x358, 0x359]
---
0x351 JUMPDEST
0x352 CALLVALUE
0x353 ISZERO
0x354 PUSH2 0x359
0x357 JUMPI
---
0x351: JUMPDEST 
0x352: V228 = CALLVALUE
0x353: V229 = ISZERO V228
0x354: V230 = 0x359
0x357: JUMPI 0x359 V229
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x358
[0x358:0x358]
---
Predecessors: [0x351]
Successors: []
---
0x358 INVALID
---
0x358: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x359
[0x359:0x360]
---
Predecessors: [0x351]
Successors: [0x88a]
---
0x359 JUMPDEST
0x35a PUSH2 0x361
0x35d PUSH2 0x88a
0x360 JUMP
---
0x359: JUMPDEST 
0x35a: V231 = 0x361
0x35d: V232 = 0x88a
0x360: JUMP 0x88a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x361]
Exit stack: [V10, 0x361]

================================

Block 0x361
[0x361:0x376]
---
Predecessors: [0x88a]
Successors: []
---
0x361 JUMPDEST
0x362 PUSH1 0x40
0x364 MLOAD
0x365 DUP1
0x366 DUP3
0x367 DUP2
0x368 MSTORE
0x369 PUSH1 0x20
0x36b ADD
0x36c SWAP2
0x36d POP
0x36e POP
0x36f PUSH1 0x40
0x371 MLOAD
0x372 DUP1
0x373 SWAP2
0x374 SUB
0x375 SWAP1
0x376 RETURN
---
0x361: JUMPDEST 
0x362: V233 = 0x40
0x364: V234 = M[0x40]
0x368: M[V234] = V571
0x369: V235 = 0x20
0x36b: V236 = ADD 0x20 V234
0x36f: V237 = 0x40
0x371: V238 = M[0x40]
0x374: V239 = SUB V236 V238
0x376: RETURN V238 V239
---
Entry stack: [V10, 0x361, V571]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x361]

================================

Block 0x377
[0x377:0x37d]
---
Predecessors: [0x55]
Successors: [0x37e, 0x37f]
---
0x377 JUMPDEST
0x378 CALLVALUE
0x379 ISZERO
0x37a PUSH2 0x37f
0x37d JUMPI
---
0x377: JUMPDEST 
0x378: V240 = CALLVALUE
0x379: V241 = ISZERO V240
0x37a: V242 = 0x37f
0x37d: JUMPI 0x37f V241
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x37e
[0x37e:0x37e]
---
Predecessors: [0x377]
Successors: []
---
0x37e INVALID
---
0x37e: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x37f
[0x37f:0x386]
---
Predecessors: [0x377]
Successors: [0x890]
---
0x37f JUMPDEST
0x380 PUSH2 0x387
0x383 PUSH2 0x890
0x386 JUMP
---
0x37f: JUMPDEST 
0x380: V243 = 0x387
0x383: V244 = 0x890
0x386: JUMP 0x890
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x387]
Exit stack: [V10, 0x387]

================================

Block 0x387
[0x387:0x39c]
---
Predecessors: [0x890]
Successors: []
---
0x387 JUMPDEST
0x388 PUSH1 0x40
0x38a MLOAD
0x38b DUP1
0x38c DUP3
0x38d DUP2
0x38e MSTORE
0x38f PUSH1 0x20
0x391 ADD
0x392 SWAP2
0x393 POP
0x394 POP
0x395 PUSH1 0x40
0x397 MLOAD
0x398 DUP1
0x399 SWAP2
0x39a SUB
0x39b SWAP1
0x39c RETURN
---
0x387: JUMPDEST 
0x388: V245 = 0x40
0x38a: V246 = M[0x40]
0x38e: M[V246] = V573
0x38f: V247 = 0x20
0x391: V248 = ADD 0x20 V246
0x395: V249 = 0x40
0x397: V250 = M[0x40]
0x39a: V251 = SUB V248 V250
0x39c: RETURN V250 V251
---
Entry stack: [V10, 0x387, V573]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x387]

================================

Block 0x39d
[0x39d:0x3a3]
---
Predecessors: [0x60]
Successors: [0x3a4, 0x3a5]
---
0x39d JUMPDEST
0x39e CALLVALUE
0x39f ISZERO
0x3a0 PUSH2 0x3a5
0x3a3 JUMPI
---
0x39d: JUMPDEST 
0x39e: V252 = CALLVALUE
0x39f: V253 = ISZERO V252
0x3a0: V254 = 0x3a5
0x3a3: JUMPI 0x3a5 V253
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3a4
[0x3a4:0x3a4]
---
Predecessors: [0x39d]
Successors: []
---
0x3a4 INVALID
---
0x3a4: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3a5
[0x3a5:0x3f8]
---
Predecessors: [0x39d]
Successors: [0x896]
---
0x3a5 JUMPDEST
0x3a6 PUSH2 0x3f9
0x3a9 PUSH1 0x4
0x3ab DUP1
0x3ac DUP1
0x3ad CALLDATALOAD
0x3ae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c3 AND
0x3c4 SWAP1
0x3c5 PUSH1 0x20
0x3c7 ADD
0x3c8 SWAP1
0x3c9 SWAP2
0x3ca SWAP1
0x3cb DUP1
0x3cc CALLDATALOAD
0x3cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e2 AND
0x3e3 SWAP1
0x3e4 PUSH1 0x20
0x3e6 ADD
0x3e7 SWAP1
0x3e8 SWAP2
0x3e9 SWAP1
0x3ea DUP1
0x3eb CALLDATALOAD
0x3ec SWAP1
0x3ed PUSH1 0x20
0x3ef ADD
0x3f0 SWAP1
0x3f1 SWAP2
0x3f2 SWAP1
0x3f3 POP
0x3f4 POP
0x3f5 PUSH2 0x896
0x3f8 JUMP
---
0x3a5: JUMPDEST 
0x3a6: V255 = 0x3f9
0x3a9: V256 = 0x4
0x3ad: V257 = CALLDATALOAD 0x4
0x3ae: V258 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c3: V259 = AND 0xffffffffffffffffffffffffffffffffffffffff V257
0x3c5: V260 = 0x20
0x3c7: V261 = ADD 0x20 0x4
0x3cc: V262 = CALLDATALOAD 0x24
0x3cd: V263 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e2: V264 = AND 0xffffffffffffffffffffffffffffffffffffffff V262
0x3e4: V265 = 0x20
0x3e6: V266 = ADD 0x20 0x24
0x3eb: V267 = CALLDATALOAD 0x44
0x3ed: V268 = 0x20
0x3ef: V269 = ADD 0x20 0x44
0x3f5: V270 = 0x896
0x3f8: JUMP 0x896
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3f9, V259, V264, V267]
Exit stack: [V10, 0x3f9, V259, V264, V267]

================================

Block 0x3f9
[0x3f9:0x412]
---
Predecessors: [0xbce]
Successors: []
---
0x3f9 JUMPDEST
0x3fa PUSH1 0x40
0x3fc MLOAD
0x3fd DUP1
0x3fe DUP3
0x3ff ISZERO
0x400 ISZERO
0x401 ISZERO
0x402 ISZERO
0x403 DUP2
0x404 MSTORE
0x405 PUSH1 0x20
0x407 ADD
0x408 SWAP2
0x409 POP
0x40a POP
0x40b PUSH1 0x40
0x40d MLOAD
0x40e DUP1
0x40f SWAP2
0x410 SUB
0x411 SWAP1
0x412 RETURN
---
0x3f9: JUMPDEST 
0x3fa: V271 = 0x40
0x3fc: V272 = M[0x40]
0x3ff: V273 = ISZERO {0x0, 0x1}
0x400: V274 = ISZERO V273
0x401: V275 = ISZERO V274
0x402: V276 = ISZERO V275
0x404: M[V272] = V276
0x405: V277 = 0x20
0x407: V278 = ADD 0x20 V272
0x40b: V279 = 0x40
0x40d: V280 = M[0x40]
0x410: V281 = SUB V278 V280
0x412: RETURN V280 V281
---
Entry stack: [V10, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x413
[0x413:0x419]
---
Predecessors: [0x6b]
Successors: [0x41a, 0x41b]
---
0x413 JUMPDEST
0x414 CALLVALUE
0x415 ISZERO
0x416 PUSH2 0x41b
0x419 JUMPI
---
0x413: JUMPDEST 
0x414: V282 = CALLVALUE
0x415: V283 = ISZERO V282
0x416: V284 = 0x41b
0x419: JUMPI 0x41b V283
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x41a
[0x41a:0x41a]
---
Predecessors: [0x413]
Successors: []
---
0x41a INVALID
---
0x41a: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x41b
[0x41b:0x422]
---
Predecessors: [0x413]
Successors: [0xbda]
---
0x41b JUMPDEST
0x41c PUSH2 0x423
0x41f PUSH2 0xbda
0x422 JUMP
---
0x41b: JUMPDEST 
0x41c: V285 = 0x423
0x41f: V286 = 0xbda
0x422: JUMP 0xbda
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x423]
Exit stack: [V10, 0x423]

================================

Block 0x423
[0x423:0x43e]
---
Predecessors: [0xbe1]
Successors: []
---
0x423 JUMPDEST
0x424 PUSH1 0x40
0x426 MLOAD
0x427 DUP1
0x428 DUP3
0x429 PUSH1 0xff
0x42b AND
0x42c PUSH1 0xff
0x42e AND
0x42f DUP2
0x430 MSTORE
0x431 PUSH1 0x20
0x433 ADD
0x434 SWAP2
0x435 POP
0x436 POP
0x437 PUSH1 0x40
0x439 MLOAD
0x43a DUP1
0x43b SWAP2
0x43c SUB
0x43d SWAP1
0x43e RETURN
---
0x423: JUMPDEST 
0x424: V287 = 0x40
0x426: V288 = M[0x40]
0x429: V289 = 0xff
0x42b: V290 = AND 0xff 0x12
0x42c: V291 = 0xff
0x42e: V292 = AND 0xff 0x12
0x430: M[V288] = 0x12
0x431: V293 = 0x20
0x433: V294 = ADD 0x20 V288
0x437: V295 = 0x40
0x439: V296 = M[0x40]
0x43c: V297 = SUB V294 V296
0x43e: RETURN V296 V297
---
Entry stack: [V10, 0x12]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x43f
[0x43f:0x445]
---
Predecessors: [0x76]
Successors: [0x446, 0x447]
---
0x43f JUMPDEST
0x440 CALLVALUE
0x441 ISZERO
0x442 PUSH2 0x447
0x445 JUMPI
---
0x43f: JUMPDEST 
0x440: V298 = CALLVALUE
0x441: V299 = ISZERO V298
0x442: V300 = 0x447
0x445: JUMPI 0x447 V299
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x446
[0x446:0x446]
---
Predecessors: [0x43f]
Successors: []
---
0x446 INVALID
---
0x446: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x447
[0x447:0x44e]
---
Predecessors: [0x43f]
Successors: [0xbe4]
---
0x447 JUMPDEST
0x448 PUSH2 0x44f
0x44b PUSH2 0xbe4
0x44e JUMP
---
0x447: JUMPDEST 
0x448: V301 = 0x44f
0x44b: V302 = 0xbe4
0x44e: JUMP 0xbe4
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x44f]
Exit stack: [V10, 0x44f]

================================

Block 0x44f
[0x44f:0x450]
---
Predecessors: [0xc5d]
Successors: []
---
0x44f JUMPDEST
0x450 STOP
---
0x44f: JUMPDEST 
0x450: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x451
[0x451:0x457]
---
Predecessors: [0x81]
Successors: [0x458, 0x459]
---
0x451 JUMPDEST
0x452 CALLVALUE
0x453 ISZERO
0x454 PUSH2 0x459
0x457 JUMPI
---
0x451: JUMPDEST 
0x452: V303 = CALLVALUE
0x453: V304 = ISZERO V303
0x454: V305 = 0x459
0x457: JUMPI 0x459 V304
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x458
[0x458:0x458]
---
Predecessors: [0x451]
Successors: []
---
0x458 INVALID
---
0x458: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x459
[0x459:0x484]
---
Predecessors: [0x451]
Successors: [0xc5f]
---
0x459 JUMPDEST
0x45a PUSH2 0x485
0x45d PUSH1 0x4
0x45f DUP1
0x460 DUP1
0x461 CALLDATALOAD
0x462 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x477 AND
0x478 SWAP1
0x479 PUSH1 0x20
0x47b ADD
0x47c SWAP1
0x47d SWAP2
0x47e SWAP1
0x47f POP
0x480 POP
0x481 PUSH2 0xc5f
0x484 JUMP
---
0x459: JUMPDEST 
0x45a: V306 = 0x485
0x45d: V307 = 0x4
0x461: V308 = CALLDATALOAD 0x4
0x462: V309 = 0xffffffffffffffffffffffffffffffffffffffff
0x477: V310 = AND 0xffffffffffffffffffffffffffffffffffffffff V308
0x479: V311 = 0x20
0x47b: V312 = ADD 0x20 0x4
0x481: V313 = 0xc5f
0x484: JUMP 0xc5f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x485, V310]
Exit stack: [V10, 0x485, V310]

================================

Block 0x485
[0x485:0x49a]
---
Predecessors: [0xca4]
Successors: []
---
0x485 JUMPDEST
0x486 PUSH1 0x40
0x488 MLOAD
0x489 DUP1
0x48a DUP3
0x48b DUP2
0x48c MSTORE
0x48d PUSH1 0x20
0x48f ADD
0x490 SWAP2
0x491 POP
0x492 POP
0x493 PUSH1 0x40
0x495 MLOAD
0x496 DUP1
0x497 SWAP2
0x498 SUB
0x499 SWAP1
0x49a RETURN
---
0x485: JUMPDEST 
0x486: V314 = 0x40
0x488: V315 = M[0x40]
0x48c: M[V315] = V792
0x48d: V316 = 0x20
0x48f: V317 = ADD 0x20 V315
0x493: V318 = 0x40
0x495: V319 = M[0x40]
0x498: V320 = SUB V317 V319
0x49a: RETURN V319 V320
---
Entry stack: [V10, V792]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x49b
[0x49b:0x4a1]
---
Predecessors: [0x8c]
Successors: [0x4a2, 0x4a3]
---
0x49b JUMPDEST
0x49c CALLVALUE
0x49d ISZERO
0x49e PUSH2 0x4a3
0x4a1 JUMPI
---
0x49b: JUMPDEST 
0x49c: V321 = CALLVALUE
0x49d: V322 = ISZERO V321
0x49e: V323 = 0x4a3
0x4a1: JUMPI 0x4a3 V322
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4a2
[0x4a2:0x4a2]
---
Predecessors: [0x49b]
Successors: []
---
0x4a2 INVALID
---
0x4a2: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4a3
[0x4a3:0x4aa]
---
Predecessors: [0x49b]
Successors: [0xca9]
---
0x4a3 JUMPDEST
0x4a4 PUSH2 0x4ab
0x4a7 PUSH2 0xca9
0x4aa JUMP
---
0x4a3: JUMPDEST 
0x4a4: V324 = 0x4ab
0x4a7: V325 = 0xca9
0x4aa: JUMP 0xca9
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x4ab]
Exit stack: [V10, 0x4ab]

================================

Block 0x4ab
[0x4ab:0x4ac]
---
Predecessors: [0xd22]
Successors: []
---
0x4ab JUMPDEST
0x4ac STOP
---
0x4ab: JUMPDEST 
0x4ac: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4ad
[0x4ad:0x4b3]
---
Predecessors: [0x97]
Successors: [0x4b4, 0x4b5]
---
0x4ad JUMPDEST
0x4ae CALLVALUE
0x4af ISZERO
0x4b0 PUSH2 0x4b5
0x4b3 JUMPI
---
0x4ad: JUMPDEST 
0x4ae: V326 = CALLVALUE
0x4af: V327 = ISZERO V326
0x4b0: V328 = 0x4b5
0x4b3: JUMPI 0x4b5 V327
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4b4
[0x4b4:0x4b4]
---
Predecessors: [0x4ad]
Successors: []
---
0x4b4 INVALID
---
0x4b4: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4b5
[0x4b5:0x4bc]
---
Predecessors: [0x4ad]
Successors: [0xd24]
---
0x4b5 JUMPDEST
0x4b6 PUSH2 0x4bd
0x4b9 PUSH2 0xd24
0x4bc JUMP
---
0x4b5: JUMPDEST 
0x4b6: V329 = 0x4bd
0x4b9: V330 = 0xd24
0x4bc: JUMP 0xd24
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x4bd]
Exit stack: [V10, 0x4bd]

================================

Block 0x4bd
[0x4bd:0x4e7]
---
Predecessors: [0x6f8, 0xd66]
Successors: [0x4e8, 0x50c]
---
0x4bd JUMPDEST
0x4be PUSH1 0x40
0x4c0 MLOAD
0x4c1 DUP1
0x4c2 DUP1
0x4c3 PUSH1 0x20
0x4c5 ADD
0x4c6 DUP3
0x4c7 DUP2
0x4c8 SUB
0x4c9 DUP3
0x4ca MSTORE
0x4cb DUP4
0x4cc DUP2
0x4cd DUP2
0x4ce MLOAD
0x4cf DUP2
0x4d0 MSTORE
0x4d1 PUSH1 0x20
0x4d3 ADD
0x4d4 SWAP2
0x4d5 POP
0x4d6 DUP1
0x4d7 MLOAD
0x4d8 SWAP1
0x4d9 PUSH1 0x20
0x4db ADD
0x4dc SWAP1
0x4dd DUP1
0x4de DUP4
0x4df DUP4
0x4e0 PUSH1 0x0
0x4e2 DUP4
0x4e3 EQ
0x4e4 PUSH2 0x50c
0x4e7 JUMPI
---
0x4bd: JUMPDEST 
0x4be: V331 = 0x40
0x4c0: V332 = M[0x40]
0x4c3: V333 = 0x20
0x4c5: V334 = ADD 0x20 V332
0x4c8: V335 = SUB V334 V332
0x4ca: M[V332] = V335
0x4ce: V336 = M[S0]
0x4d0: M[V334] = V336
0x4d1: V337 = 0x20
0x4d3: V338 = ADD 0x20 V334
0x4d7: V339 = M[S0]
0x4d9: V340 = 0x20
0x4db: V341 = ADD 0x20 S0
0x4e0: V342 = 0x0
0x4e3: V343 = EQ V339 0x0
0x4e4: V344 = 0x50c
0x4e7: JUMPI 0x50c V343
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: [S0, V332, V332, V338, V341, V339, V339, V338, V341]
Exit stack: [V10, S0, V332, V332, V338, V341, V339, V339, V338, V341]

================================

Block 0x4e8
[0x4e8:0x4f5]
---
Predecessors: [0x4bd, 0x4f6]
Successors: [0x4f6, 0x50c]
---
0x4e8 JUMPDEST
0x4e9 DUP1
0x4ea MLOAD
0x4eb DUP3
0x4ec MSTORE
0x4ed PUSH1 0x20
0x4ef DUP4
0x4f0 GT
0x4f1 ISZERO
0x4f2 PUSH2 0x50c
0x4f5 JUMPI
---
0x4e8: JUMPDEST 
0x4ea: V345 = M[S0]
0x4ec: M[S1] = V345
0x4ed: V346 = 0x20
0x4f0: V347 = GT S2 0x20
0x4f1: V348 = ISZERO V347
0x4f2: V349 = 0x50c
0x4f5: JUMPI 0x50c V348
---
Entry stack: [V10, S8, V332, V332, V338, V341, V339, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, S8, V332, V332, V338, V341, V339, S2, S1, S0]

================================

Block 0x4f6
[0x4f6:0x50b]
---
Predecessors: [0x4e8]
Successors: [0x4e8]
---
0x4f6 PUSH1 0x20
0x4f8 DUP3
0x4f9 ADD
0x4fa SWAP2
0x4fb POP
0x4fc PUSH1 0x20
0x4fe DUP2
0x4ff ADD
0x500 SWAP1
0x501 POP
0x502 PUSH1 0x20
0x504 DUP4
0x505 SUB
0x506 SWAP3
0x507 POP
0x508 PUSH2 0x4e8
0x50b JUMP
---
0x4f6: V350 = 0x20
0x4f9: V351 = ADD S1 0x20
0x4fc: V352 = 0x20
0x4ff: V353 = ADD S0 0x20
0x502: V354 = 0x20
0x505: V355 = SUB S2 0x20
0x508: V356 = 0x4e8
0x50b: JUMP 0x4e8
---
Entry stack: [V10, S8, V332, V332, V338, V341, V339, S2, S1, S0]
Stack pops: 3
Stack additions: [V355, V351, V353]
Exit stack: [V10, S8, V332, V332, V338, V341, V339, V355, V351, V353]

================================

Block 0x50c
[0x50c:0x51e]
---
Predecessors: [0x4bd, 0x4e8]
Successors: [0x51f, 0x538]
---
0x50c JUMPDEST
0x50d POP
0x50e POP
0x50f POP
0x510 SWAP1
0x511 POP
0x512 SWAP1
0x513 DUP2
0x514 ADD
0x515 SWAP1
0x516 PUSH1 0x1f
0x518 AND
0x519 DUP1
0x51a ISZERO
0x51b PUSH2 0x538
0x51e JUMPI
---
0x50c: JUMPDEST 
0x514: V357 = ADD V339 V338
0x516: V358 = 0x1f
0x518: V359 = AND 0x1f V339
0x51a: V360 = ISZERO V359
0x51b: V361 = 0x538
0x51e: JUMPI 0x538 V360
---
Entry stack: [V10, S8, V332, V332, V338, V341, V339, S2, S1, S0]
Stack pops: 6
Stack additions: [V357, V359]
Exit stack: [V10, S8, V332, V332, V357, V359]

================================

Block 0x51f
[0x51f:0x537]
---
Predecessors: [0x50c]
Successors: [0x538]
---
0x51f DUP1
0x520 DUP3
0x521 SUB
0x522 DUP1
0x523 MLOAD
0x524 PUSH1 0x1
0x526 DUP4
0x527 PUSH1 0x20
0x529 SUB
0x52a PUSH2 0x100
0x52d EXP
0x52e SUB
0x52f NOT
0x530 AND
0x531 DUP2
0x532 MSTORE
0x533 PUSH1 0x20
0x535 ADD
0x536 SWAP2
0x537 POP
---
0x521: V362 = SUB V357 V359
0x523: V363 = M[V362]
0x524: V364 = 0x1
0x527: V365 = 0x20
0x529: V366 = SUB 0x20 V359
0x52a: V367 = 0x100
0x52d: V368 = EXP 0x100 V366
0x52e: V369 = SUB V368 0x1
0x52f: V370 = NOT V369
0x530: V371 = AND V370 V363
0x532: M[V362] = V371
0x533: V372 = 0x20
0x535: V373 = ADD 0x20 V362
---
Entry stack: [V10, S4, V332, V332, V357, V359]
Stack pops: 2
Stack additions: [V373, S0]
Exit stack: [V10, S4, V332, V332, V373, V359]

================================

Block 0x538
[0x538:0x545]
---
Predecessors: [0x50c, 0x51f]
Successors: []
---
0x538 JUMPDEST
0x539 POP
0x53a SWAP3
0x53b POP
0x53c POP
0x53d POP
0x53e PUSH1 0x40
0x540 MLOAD
0x541 DUP1
0x542 SWAP2
0x543 SUB
0x544 SWAP1
0x545 RETURN
---
0x538: JUMPDEST 
0x53e: V374 = 0x40
0x540: V375 = M[0x40]
0x543: V376 = SUB S1 V375
0x545: RETURN V375 V376
---
Entry stack: [V10, S4, V332, V332, S1, V359]
Stack pops: 5
Stack additions: []
Exit stack: [V10]

================================

Block 0x546
[0x546:0x54c]
---
Predecessors: [0xa2]
Successors: [0x54d, 0x54e]
---
0x546 JUMPDEST
0x547 CALLVALUE
0x548 ISZERO
0x549 PUSH2 0x54e
0x54c JUMPI
---
0x546: JUMPDEST 
0x547: V377 = CALLVALUE
0x548: V378 = ISZERO V377
0x549: V379 = 0x54e
0x54c: JUMPI 0x54e V378
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x54d
[0x54d:0x54d]
---
Predecessors: [0x546]
Successors: []
---
0x54d INVALID
---
0x54d: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x54e
[0x54e:0x582]
---
Predecessors: [0x546]
Successors: [0xd69]
---
0x54e JUMPDEST
0x54f PUSH2 0x583
0x552 PUSH1 0x4
0x554 DUP1
0x555 DUP1
0x556 CALLDATALOAD
0x557 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x56c AND
0x56d SWAP1
0x56e PUSH1 0x20
0x570 ADD
0x571 SWAP1
0x572 SWAP2
0x573 SWAP1
0x574 DUP1
0x575 CALLDATALOAD
0x576 SWAP1
0x577 PUSH1 0x20
0x579 ADD
0x57a SWAP1
0x57b SWAP2
0x57c SWAP1
0x57d POP
0x57e POP
0x57f PUSH2 0xd69
0x582 JUMP
---
0x54e: JUMPDEST 
0x54f: V380 = 0x583
0x552: V381 = 0x4
0x556: V382 = CALLDATALOAD 0x4
0x557: V383 = 0xffffffffffffffffffffffffffffffffffffffff
0x56c: V384 = AND 0xffffffffffffffffffffffffffffffffffffffff V382
0x56e: V385 = 0x20
0x570: V386 = ADD 0x20 0x4
0x575: V387 = CALLDATALOAD 0x24
0x577: V388 = 0x20
0x579: V389 = ADD 0x20 0x24
0x57f: V390 = 0xd69
0x582: JUMP 0xd69
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x583, V384, V387]
Exit stack: [V10, 0x583, V384, V387]

================================

Block 0x583
[0x583:0x59c]
---
Predecessors: [0xf85]
Successors: []
---
0x583 JUMPDEST
0x584 PUSH1 0x40
0x586 MLOAD
0x587 DUP1
0x588 DUP3
0x589 ISZERO
0x58a ISZERO
0x58b ISZERO
0x58c ISZERO
0x58d DUP2
0x58e MSTORE
0x58f PUSH1 0x20
0x591 ADD
0x592 SWAP2
0x593 POP
0x594 POP
0x595 PUSH1 0x40
0x597 MLOAD
0x598 DUP1
0x599 SWAP2
0x59a SUB
0x59b SWAP1
0x59c RETURN
---
0x583: JUMPDEST 
0x584: V391 = 0x40
0x586: V392 = M[0x40]
0x589: V393 = ISZERO {0x0, 0x1}
0x58a: V394 = ISZERO V393
0x58b: V395 = ISZERO V394
0x58c: V396 = ISZERO V395
0x58e: M[V392] = V396
0x58f: V397 = 0x20
0x591: V398 = ADD 0x20 V392
0x595: V399 = 0x40
0x597: V400 = M[0x40]
0x59a: V401 = SUB V398 V400
0x59c: RETURN V400 V401
---
Entry stack: [V10, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x59d
[0x59d:0x5a3]
---
Predecessors: [0xad]
Successors: [0x5a4, 0x5a5]
---
0x59d JUMPDEST
0x59e CALLVALUE
0x59f ISZERO
0x5a0 PUSH2 0x5a5
0x5a3 JUMPI
---
0x59d: JUMPDEST 
0x59e: V402 = CALLVALUE
0x59f: V403 = ISZERO V402
0x5a0: V404 = 0x5a5
0x5a3: JUMPI 0x5a5 V403
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x5a4
[0x5a4:0x5a4]
---
Predecessors: [0x59d]
Successors: []
---
0x5a4 INVALID
---
0x5a4: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x5a5
[0x5a5:0x5ac]
---
Predecessors: [0x59d]
Successors: [0xf8e]
---
0x5a5 JUMPDEST
0x5a6 PUSH2 0x5ad
0x5a9 PUSH2 0xf8e
0x5ac JUMP
---
0x5a5: JUMPDEST 
0x5a6: V405 = 0x5ad
0x5a9: V406 = 0xf8e
0x5ac: JUMP 0xf8e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x5ad]
Exit stack: [V10, 0x5ad]

================================

Block 0x5ad
[0x5ad:0x5d4]
---
Predecessors: [0xfb1]
Successors: []
---
0x5ad JUMPDEST
0x5ae PUSH1 0x40
0x5b0 MLOAD
0x5b1 DUP1
0x5b2 DUP5
0x5b3 DUP2
0x5b4 MSTORE
0x5b5 PUSH1 0x20
0x5b7 ADD
0x5b8 DUP4
0x5b9 DUP2
0x5ba MSTORE
0x5bb PUSH1 0x20
0x5bd ADD
0x5be DUP3
0x5bf ISZERO
0x5c0 ISZERO
0x5c1 ISZERO
0x5c2 ISZERO
0x5c3 DUP2
0x5c4 MSTORE
0x5c5 PUSH1 0x20
0x5c7 ADD
0x5c8 SWAP4
0x5c9 POP
0x5ca POP
0x5cb POP
0x5cc POP
0x5cd PUSH1 0x40
0x5cf MLOAD
0x5d0 DUP1
0x5d1 SWAP2
0x5d2 SUB
0x5d3 SWAP1
0x5d4 RETURN
---
0x5ad: JUMPDEST 
0x5ae: V407 = 0x40
0x5b0: V408 = M[0x40]
0x5b4: M[V408] = V956
0x5b5: V409 = 0x20
0x5b7: V410 = ADD 0x20 V408
0x5ba: M[V410] = V958
0x5bb: V411 = 0x20
0x5bd: V412 = ADD 0x20 V410
0x5bf: V413 = ISZERO V966
0x5c0: V414 = ISZERO V413
0x5c1: V415 = ISZERO V414
0x5c2: V416 = ISZERO V415
0x5c4: M[V412] = V416
0x5c5: V417 = 0x20
0x5c7: V418 = ADD 0x20 V412
0x5cd: V419 = 0x40
0x5cf: V420 = M[0x40]
0x5d2: V421 = SUB V418 V420
0x5d4: RETURN V420 V421
---
Entry stack: [V10, V956, V958, V966]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x5d5
[0x5d5:0x5db]
---
Predecessors: [0xb8]
Successors: [0x5dc, 0x5dd]
---
0x5d5 JUMPDEST
0x5d6 CALLVALUE
0x5d7 ISZERO
0x5d8 PUSH2 0x5dd
0x5db JUMPI
---
0x5d5: JUMPDEST 
0x5d6: V422 = CALLVALUE
0x5d7: V423 = ISZERO V422
0x5d8: V424 = 0x5dd
0x5db: JUMPI 0x5dd V423
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x5dc
[0x5dc:0x5dc]
---
Predecessors: [0x5d5]
Successors: []
---
0x5dc INVALID
---
0x5dc: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x5dd
[0x5dd:0x5e4]
---
Predecessors: [0x5d5]
Successors: [0xfb6]
---
0x5dd JUMPDEST
0x5de PUSH2 0x5e5
0x5e1 PUSH2 0xfb6
0x5e4 JUMP
---
0x5dd: JUMPDEST 
0x5de: V425 = 0x5e5
0x5e1: V426 = 0xfb6
0x5e4: JUMP 0xfb6
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x5e5]
Exit stack: [V10, 0x5e5]

================================

Block 0x5e5
[0x5e5:0x5fe]
---
Predecessors: [0xfb6]
Successors: []
---
0x5e5 JUMPDEST
0x5e6 PUSH1 0x40
0x5e8 MLOAD
0x5e9 DUP1
0x5ea DUP3
0x5eb ISZERO
0x5ec ISZERO
0x5ed ISZERO
0x5ee ISZERO
0x5ef DUP2
0x5f0 MSTORE
0x5f1 PUSH1 0x20
0x5f3 ADD
0x5f4 SWAP2
0x5f5 POP
0x5f6 POP
0x5f7 PUSH1 0x40
0x5f9 MLOAD
0x5fa DUP1
0x5fb SWAP2
0x5fc SUB
0x5fd SWAP1
0x5fe RETURN
---
0x5e5: JUMPDEST 
0x5e6: V427 = 0x40
0x5e8: V428 = M[0x40]
0x5eb: V429 = ISZERO V974
0x5ec: V430 = ISZERO V429
0x5ed: V431 = ISZERO V430
0x5ee: V432 = ISZERO V431
0x5f0: M[V428] = V432
0x5f1: V433 = 0x20
0x5f3: V434 = ADD 0x20 V428
0x5f7: V435 = 0x40
0x5f9: V436 = M[0x40]
0x5fc: V437 = SUB V434 V436
0x5fe: RETURN V436 V437
---
Entry stack: [V10, 0x5e5, V974]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x5e5]

================================

Block 0x5ff
[0x5ff:0x605]
---
Predecessors: [0xc3]
Successors: [0x606, 0x607]
---
0x5ff JUMPDEST
0x600 CALLVALUE
0x601 ISZERO
0x602 PUSH2 0x607
0x605 JUMPI
---
0x5ff: JUMPDEST 
0x600: V438 = CALLVALUE
0x601: V439 = ISZERO V438
0x602: V440 = 0x607
0x605: JUMPI 0x607 V439
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x606
[0x606:0x606]
---
Predecessors: [0x5ff]
Successors: []
---
0x606 INVALID
---
0x606: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x607
[0x607:0x651]
---
Predecessors: [0x5ff]
Successors: [0xfc9]
---
0x607 JUMPDEST
0x608 PUSH2 0x652
0x60b PUSH1 0x4
0x60d DUP1
0x60e DUP1
0x60f CALLDATALOAD
0x610 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x625 AND
0x626 SWAP1
0x627 PUSH1 0x20
0x629 ADD
0x62a SWAP1
0x62b SWAP2
0x62c SWAP1
0x62d DUP1
0x62e CALLDATALOAD
0x62f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x644 AND
0x645 SWAP1
0x646 PUSH1 0x20
0x648 ADD
0x649 SWAP1
0x64a SWAP2
0x64b SWAP1
0x64c POP
0x64d POP
0x64e PUSH2 0xfc9
0x651 JUMP
---
0x607: JUMPDEST 
0x608: V441 = 0x652
0x60b: V442 = 0x4
0x60f: V443 = CALLDATALOAD 0x4
0x610: V444 = 0xffffffffffffffffffffffffffffffffffffffff
0x625: V445 = AND 0xffffffffffffffffffffffffffffffffffffffff V443
0x627: V446 = 0x20
0x629: V447 = ADD 0x20 0x4
0x62e: V448 = CALLDATALOAD 0x24
0x62f: V449 = 0xffffffffffffffffffffffffffffffffffffffff
0x644: V450 = AND 0xffffffffffffffffffffffffffffffffffffffff V448
0x646: V451 = 0x20
0x648: V452 = ADD 0x20 0x24
0x64e: V453 = 0xfc9
0x651: JUMP 0xfc9
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x652, V445, V450]
Exit stack: [V10, 0x652, V445, V450]

================================

Block 0x652
[0x652:0x667]
---
Predecessors: [0x104b]
Successors: []
---
0x652 JUMPDEST
0x653 PUSH1 0x40
0x655 MLOAD
0x656 DUP1
0x657 DUP3
0x658 DUP2
0x659 MSTORE
0x65a PUSH1 0x20
0x65c ADD
0x65d SWAP2
0x65e POP
0x65f POP
0x660 PUSH1 0x40
0x662 MLOAD
0x663 DUP1
0x664 SWAP2
0x665 SUB
0x666 SWAP1
0x667 RETURN
---
0x652: JUMPDEST 
0x653: V454 = 0x40
0x655: V455 = M[0x40]
0x659: M[V455] = V999
0x65a: V456 = 0x20
0x65c: V457 = ADD 0x20 V455
0x660: V458 = 0x40
0x662: V459 = M[0x40]
0x665: V460 = SUB V457 V459
0x667: RETURN V459 V460
---
Entry stack: [V10, V999]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x668
[0x668:0x66e]
---
Predecessors: [0xce]
Successors: [0x66f, 0x670]
---
0x668 JUMPDEST
0x669 CALLVALUE
0x66a ISZERO
0x66b PUSH2 0x670
0x66e JUMPI
---
0x668: JUMPDEST 
0x669: V461 = CALLVALUE
0x66a: V462 = ISZERO V461
0x66b: V463 = 0x670
0x66e: JUMPI 0x670 V462
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x66f
[0x66f:0x66f]
---
Predecessors: [0x668]
Successors: []
---
0x66f INVALID
---
0x66f: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x670
[0x670:0x69b]
---
Predecessors: [0x668]
Successors: [0x1051]
---
0x670 JUMPDEST
0x671 PUSH2 0x69c
0x674 PUSH1 0x4
0x676 DUP1
0x677 DUP1
0x678 CALLDATALOAD
0x679 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x68e AND
0x68f SWAP1
0x690 PUSH1 0x20
0x692 ADD
0x693 SWAP1
0x694 SWAP2
0x695 SWAP1
0x696 POP
0x697 POP
0x698 PUSH2 0x1051
0x69b JUMP
---
0x670: JUMPDEST 
0x671: V464 = 0x69c
0x674: V465 = 0x4
0x678: V466 = CALLDATALOAD 0x4
0x679: V467 = 0xffffffffffffffffffffffffffffffffffffffff
0x68e: V468 = AND 0xffffffffffffffffffffffffffffffffffffffff V466
0x690: V469 = 0x20
0x692: V470 = ADD 0x20 0x4
0x698: V471 = 0x1051
0x69b: JUMP 0x1051
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x69c, V468]
Exit stack: [V10, 0x69c, V468]

================================

Block 0x69c
[0x69c:0x6b5]
---
Predecessors: [0x1254]
Successors: []
---
0x69c JUMPDEST
0x69d PUSH1 0x40
0x69f MLOAD
0x6a0 DUP1
0x6a1 DUP3
0x6a2 ISZERO
0x6a3 ISZERO
0x6a4 ISZERO
0x6a5 ISZERO
0x6a6 DUP2
0x6a7 MSTORE
0x6a8 PUSH1 0x20
0x6aa ADD
0x6ab SWAP2
0x6ac POP
0x6ad POP
0x6ae PUSH1 0x40
0x6b0 MLOAD
0x6b1 DUP1
0x6b2 SWAP2
0x6b3 SUB
0x6b4 SWAP1
0x6b5 RETURN
---
0x69c: JUMPDEST 
0x69d: V472 = 0x40
0x69f: V473 = M[0x40]
0x6a2: V474 = ISZERO V1114
0x6a3: V475 = ISZERO V474
0x6a4: V476 = ISZERO V475
0x6a5: V477 = ISZERO V476
0x6a7: M[V473] = V477
0x6a8: V478 = 0x20
0x6aa: V479 = ADD 0x20 V473
0x6ae: V480 = 0x40
0x6b0: V481 = M[0x40]
0x6b3: V482 = SUB V479 V481
0x6b5: RETURN V481 V482
---
Entry stack: [V10, V1114]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x6b6
[0x6b6:0x6bd]
---
Predecessors: [0x269]
Successors: [0x125b]
---
0x6b6 JUMPDEST
0x6b7 PUSH2 0x6be
0x6ba PUSH2 0x125b
0x6bd JUMP
---
0x6b6: JUMPDEST 
0x6b7: V483 = 0x6be
0x6ba: V484 = 0x125b
0x6bd: JUMP 0x125b
---
Entry stack: [V10, 0x271]
Stack pops: 0
Stack additions: [0x6be]
Exit stack: [V10, 0x271, 0x6be]

================================

Block 0x6be
[0x6be:0x6f7]
---
Predecessors: [0x125b]
Successors: [0x6f8]
---
0x6be JUMPDEST
0x6bf PUSH1 0x40
0x6c1 PUSH1 0x40
0x6c3 MLOAD
0x6c4 SWAP1
0x6c5 DUP2
0x6c6 ADD
0x6c7 PUSH1 0x40
0x6c9 MSTORE
0x6ca DUP1
0x6cb PUSH1 0xc
0x6cd DUP2
0x6ce MSTORE
0x6cf PUSH1 0x20
0x6d1 ADD
0x6d2 PUSH32 0x4e6f7468696e67546f6b656e0000000000000000000000000000000000000000
0x6f3 DUP2
0x6f4 MSTORE
0x6f5 POP
0x6f6 SWAP1
0x6f7 POP
---
0x6be: JUMPDEST 
0x6bf: V485 = 0x40
0x6c1: V486 = 0x40
0x6c3: V487 = M[0x40]
0x6c6: V488 = ADD V487 0x40
0x6c7: V489 = 0x40
0x6c9: M[0x40] = V488
0x6cb: V490 = 0xc
0x6ce: M[V487] = 0xc
0x6cf: V491 = 0x20
0x6d1: V492 = ADD 0x20 V487
0x6d2: V493 = 0x4e6f7468696e67546f6b656e0000000000000000000000000000000000000000
0x6f4: M[V492] = 0x4e6f7468696e67546f6b656e0000000000000000000000000000000000000000
---
Entry stack: [V10, {0x271, 0x4bd}, V1117]
Stack pops: 1
Stack additions: [V487]
Exit stack: [V10, {0x271, 0x4bd}, V487]

================================

Block 0x6f8
[0x6f8:0x6fa]
---
Predecessors: [0x6be]
Successors: [0x271, 0x4bd]
---
0x6f8 JUMPDEST
0x6f9 SWAP1
0x6fa JUMP
---
0x6f8: JUMPDEST 
0x6fa: JUMP {0x271, 0x4bd}
---
Entry stack: [V10, {0x271, 0x4bd}, V487]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, V487]

================================

Block 0x6fb
[0x6fb:0x708]
---
Predecessors: [0x302]
Successors: [0x709, 0x78b]
---
0x6fb JUMPDEST
0x6fc PUSH1 0x0
0x6fe PUSH1 0x0
0x700 DUP3
0x701 EQ
0x702 ISZERO
0x703 DUP1
0x704 ISZERO
0x705 PUSH2 0x78b
0x708 JUMPI
---
0x6fb: JUMPDEST 
0x6fc: V494 = 0x0
0x6fe: V495 = 0x0
0x701: V496 = EQ V213 0x0
0x702: V497 = ISZERO V496
0x704: V498 = ISZERO V497
0x705: V499 = 0x78b
0x708: JUMPI 0x78b V498
---
Entry stack: [V10, 0x337, V210, V213]
Stack pops: 1
Stack additions: [S0, 0x0, V497]
Exit stack: [V10, 0x337, V210, V213, 0x0, V497]

================================

Block 0x709
[0x709:0x78a]
---
Predecessors: [0x6fb]
Successors: [0x78b]
---
0x709 POP
0x70a PUSH1 0x0
0x70c PUSH1 0x2
0x70e PUSH1 0x0
0x710 CALLER
0x711 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x726 AND
0x727 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x73c AND
0x73d DUP2
0x73e MSTORE
0x73f PUSH1 0x20
0x741 ADD
0x742 SWAP1
0x743 DUP2
0x744 MSTORE
0x745 PUSH1 0x20
0x747 ADD
0x748 PUSH1 0x0
0x74a SHA3
0x74b PUSH1 0x0
0x74d DUP6
0x74e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x763 AND
0x764 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x779 AND
0x77a DUP2
0x77b MSTORE
0x77c PUSH1 0x20
0x77e ADD
0x77f SWAP1
0x780 DUP2
0x781 MSTORE
0x782 PUSH1 0x20
0x784 ADD
0x785 PUSH1 0x0
0x787 SHA3
0x788 SLOAD
0x789 EQ
0x78a ISZERO
---
0x70a: V500 = 0x0
0x70c: V501 = 0x2
0x70e: V502 = 0x0
0x710: V503 = CALLER
0x711: V504 = 0xffffffffffffffffffffffffffffffffffffffff
0x726: V505 = AND 0xffffffffffffffffffffffffffffffffffffffff V503
0x727: V506 = 0xffffffffffffffffffffffffffffffffffffffff
0x73c: V507 = AND 0xffffffffffffffffffffffffffffffffffffffff V505
0x73e: M[0x0] = V507
0x73f: V508 = 0x20
0x741: V509 = ADD 0x20 0x0
0x744: M[0x20] = 0x2
0x745: V510 = 0x20
0x747: V511 = ADD 0x20 0x20
0x748: V512 = 0x0
0x74a: V513 = SHA3 0x0 0x40
0x74b: V514 = 0x0
0x74e: V515 = 0xffffffffffffffffffffffffffffffffffffffff
0x763: V516 = AND 0xffffffffffffffffffffffffffffffffffffffff V210
0x764: V517 = 0xffffffffffffffffffffffffffffffffffffffff
0x779: V518 = AND 0xffffffffffffffffffffffffffffffffffffffff V516
0x77b: M[0x0] = V518
0x77c: V519 = 0x20
0x77e: V520 = ADD 0x20 0x0
0x781: M[0x20] = V513
0x782: V521 = 0x20
0x784: V522 = ADD 0x20 0x20
0x785: V523 = 0x0
0x787: V524 = SHA3 0x0 0x40
0x788: V525 = S[V524]
0x789: V526 = EQ V525 0x0
0x78a: V527 = ISZERO V526
---
Entry stack: [V10, 0x337, V210, V213, 0x0, V497]
Stack pops: 4
Stack additions: [S3, S2, S1, V527]
Exit stack: [V10, 0x337, V210, V213, 0x0, V527]

================================

Block 0x78b
[0x78b:0x790]
---
Predecessors: [0x6fb, 0x709]
Successors: [0x791, 0x799]
---
0x78b JUMPDEST
0x78c ISZERO
0x78d PUSH2 0x799
0x790 JUMPI
---
0x78b: JUMPDEST 
0x78c: V528 = ISZERO S0
0x78d: V529 = 0x799
0x790: JUMPI 0x799 V528
---
Entry stack: [V10, 0x337, V210, V213, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x337, V210, V213, 0x0]

================================

Block 0x791
[0x791:0x798]
---
Predecessors: [0x78b]
Successors: [0x884]
---
0x791 PUSH1 0x0
0x793 SWAP1
0x794 POP
0x795 PUSH2 0x884
0x798 JUMP
---
0x791: V530 = 0x0
0x795: V531 = 0x884
0x798: JUMP 0x884
---
Entry stack: [V10, 0x337, V210, V213, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0x337, V210, V213, 0x0]

================================

Block 0x799
[0x799:0x883]
---
Predecessors: [0x78b]
Successors: [0x884]
---
0x799 JUMPDEST
0x79a DUP2
0x79b PUSH1 0x2
0x79d PUSH1 0x0
0x79f CALLER
0x7a0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7b5 AND
0x7b6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7cb AND
0x7cc DUP2
0x7cd MSTORE
0x7ce PUSH1 0x20
0x7d0 ADD
0x7d1 SWAP1
0x7d2 DUP2
0x7d3 MSTORE
0x7d4 PUSH1 0x20
0x7d6 ADD
0x7d7 PUSH1 0x0
0x7d9 SHA3
0x7da PUSH1 0x0
0x7dc DUP6
0x7dd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7f2 AND
0x7f3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x808 AND
0x809 DUP2
0x80a MSTORE
0x80b PUSH1 0x20
0x80d ADD
0x80e SWAP1
0x80f DUP2
0x810 MSTORE
0x811 PUSH1 0x20
0x813 ADD
0x814 PUSH1 0x0
0x816 SHA3
0x817 DUP2
0x818 SWAP1
0x819 SSTORE
0x81a POP
0x81b DUP3
0x81c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x831 AND
0x832 CALLER
0x833 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x848 AND
0x849 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x86a DUP5
0x86b PUSH1 0x40
0x86d MLOAD
0x86e DUP1
0x86f DUP3
0x870 DUP2
0x871 MSTORE
0x872 PUSH1 0x20
0x874 ADD
0x875 SWAP2
0x876 POP
0x877 POP
0x878 PUSH1 0x40
0x87a MLOAD
0x87b DUP1
0x87c SWAP2
0x87d SUB
0x87e SWAP1
0x87f LOG3
0x880 PUSH1 0x1
0x882 SWAP1
0x883 POP
---
0x799: JUMPDEST 
0x79b: V532 = 0x2
0x79d: V533 = 0x0
0x79f: V534 = CALLER
0x7a0: V535 = 0xffffffffffffffffffffffffffffffffffffffff
0x7b5: V536 = AND 0xffffffffffffffffffffffffffffffffffffffff V534
0x7b6: V537 = 0xffffffffffffffffffffffffffffffffffffffff
0x7cb: V538 = AND 0xffffffffffffffffffffffffffffffffffffffff V536
0x7cd: M[0x0] = V538
0x7ce: V539 = 0x20
0x7d0: V540 = ADD 0x20 0x0
0x7d3: M[0x20] = 0x2
0x7d4: V541 = 0x20
0x7d6: V542 = ADD 0x20 0x20
0x7d7: V543 = 0x0
0x7d9: V544 = SHA3 0x0 0x40
0x7da: V545 = 0x0
0x7dd: V546 = 0xffffffffffffffffffffffffffffffffffffffff
0x7f2: V547 = AND 0xffffffffffffffffffffffffffffffffffffffff V210
0x7f3: V548 = 0xffffffffffffffffffffffffffffffffffffffff
0x808: V549 = AND 0xffffffffffffffffffffffffffffffffffffffff V547
0x80a: M[0x0] = V549
0x80b: V550 = 0x20
0x80d: V551 = ADD 0x20 0x0
0x810: M[0x20] = V544
0x811: V552 = 0x20
0x813: V553 = ADD 0x20 0x20
0x814: V554 = 0x0
0x816: V555 = SHA3 0x0 0x40
0x819: S[V555] = V213
0x81c: V556 = 0xffffffffffffffffffffffffffffffffffffffff
0x831: V557 = AND 0xffffffffffffffffffffffffffffffffffffffff V210
0x832: V558 = CALLER
0x833: V559 = 0xffffffffffffffffffffffffffffffffffffffff
0x848: V560 = AND 0xffffffffffffffffffffffffffffffffffffffff V558
0x849: V561 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x86b: V562 = 0x40
0x86d: V563 = M[0x40]
0x871: M[V563] = V213
0x872: V564 = 0x20
0x874: V565 = ADD 0x20 V563
0x878: V566 = 0x40
0x87a: V567 = M[0x40]
0x87d: V568 = SUB V565 V567
0x87f: LOG V567 V568 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V560 V557
0x880: V569 = 0x1
---
Entry stack: [V10, 0x337, V210, V213, 0x0]
Stack pops: 3
Stack additions: [S2, S1, 0x1]
Exit stack: [V10, 0x337, V210, V213, 0x1]

================================

Block 0x884
[0x884:0x889]
---
Predecessors: [0x791, 0x799]
Successors: [0x337]
---
0x884 JUMPDEST
0x885 SWAP3
0x886 SWAP2
0x887 POP
0x888 POP
0x889 JUMP
---
0x884: JUMPDEST 
0x889: JUMP 0x337
---
Entry stack: [V10, 0x337, V210, V213, {0x0, 0x1}]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0x88a
[0x88a:0x88f]
---
Predecessors: [0x359]
Successors: [0x361]
---
0x88a JUMPDEST
0x88b PUSH1 0x3
0x88d SLOAD
0x88e DUP2
0x88f JUMP
---
0x88a: JUMPDEST 
0x88b: V570 = 0x3
0x88d: V571 = S[0x3]
0x88f: JUMP 0x361
---
Entry stack: [V10, 0x361]
Stack pops: 1
Stack additions: [S0, V571]
Exit stack: [V10, 0x361, V571]

================================

Block 0x890
[0x890:0x895]
---
Predecessors: [0x37f]
Successors: [0x387]
---
0x890 JUMPDEST
0x891 PUSH1 0x4
0x893 SLOAD
0x894 DUP2
0x895 JUMP
---
0x890: JUMPDEST 
0x891: V572 = 0x4
0x893: V573 = S[0x4]
0x895: JUMP 0x387
---
Entry stack: [V10, 0x387]
Stack pops: 1
Stack additions: [S0, V573]
Exit stack: [V10, 0x387, V573]

================================

Block 0x896
[0x896:0x8af]
---
Predecessors: [0x3a5]
Successors: [0x8b0, 0x8b5]
---
0x896 JUMPDEST
0x897 PUSH1 0x0
0x899 PUSH1 0x0
0x89b PUSH1 0x0
0x89d PUSH1 0x0
0x89f PUSH1 0x0
0x8a1 PUSH1 0x0
0x8a3 PUSH1 0x64
0x8a5 PUSH1 0x0
0x8a7 CALLDATASIZE
0x8a8 SWAP1
0x8a9 POP
0x8aa LT
0x8ab ISZERO
0x8ac PUSH2 0x8b5
0x8af JUMPI
---
0x896: JUMPDEST 
0x897: V574 = 0x0
0x899: V575 = 0x0
0x89b: V576 = 0x0
0x89d: V577 = 0x0
0x89f: V578 = 0x0
0x8a1: V579 = 0x0
0x8a3: V580 = 0x64
0x8a5: V581 = 0x0
0x8a7: V582 = CALLDATASIZE
0x8aa: V583 = LT V582 0x64
0x8ab: V584 = ISZERO V583
0x8ac: V585 = 0x8b5
0x8af: JUMPI 0x8b5 V584
---
Entry stack: [V10, 0x3f9, V259, V264, V267]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V10, 0x3f9, V259, V264, V267, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x8b0
[0x8b0:0x8b4]
---
Predecessors: [0x896]
Successors: []
---
0x8b0 PUSH1 0x0
0x8b2 PUSH1 0x0
0x8b4 REVERT
---
0x8b0: V586 = 0x0
0x8b2: V587 = 0x0
0x8b4: REVERT 0x0 0x0
---
Entry stack: [V10, 0x3f9, V259, V264, V267, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3f9, V259, V264, V267, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x8b5
[0x8b5:0x8be]
---
Predecessors: [0x896]
Successors: [0x8bf, 0x8c7]
---
0x8b5 JUMPDEST
0x8b6 PUSH1 0x0
0x8b8 DUP8
0x8b9 EQ
0x8ba ISZERO
0x8bb PUSH2 0x8c7
0x8be JUMPI
---
0x8b5: JUMPDEST 
0x8b6: V588 = 0x0
0x8b9: V589 = EQ V267 0x0
0x8ba: V590 = ISZERO V589
0x8bb: V591 = 0x8c7
0x8be: JUMPI 0x8c7 V590
---
Entry stack: [V10, 0x3f9, V259, V264, V267, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V10, 0x3f9, V259, V264, V267, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x8bf
[0x8bf:0x8c6]
---
Predecessors: [0x8b5]
Successors: [0xbce]
---
0x8bf PUSH1 0x0
0x8c1 SWAP6
0x8c2 POP
0x8c3 PUSH2 0xbce
0x8c6 JUMP
---
0x8bf: V592 = 0x0
0x8c3: V593 = 0xbce
0x8c6: JUMP 0xbce
---
Entry stack: [V10, 0x3f9, V259, V264, V267, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [0x0, S4, S3, S2, S1, S0]
Exit stack: [V10, 0x3f9, V259, V264, V267, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x8c7
[0x8c7:0xa20]
---
Predecessors: [0x8b5]
Successors: [0xa21, 0xa23]
---
0x8c7 JUMPDEST
0x8c8 PUSH1 0x1
0x8ca PUSH1 0x0
0x8cc DUP11
0x8cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8e2 AND
0x8e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8f8 AND
0x8f9 DUP2
0x8fa MSTORE
0x8fb PUSH1 0x20
0x8fd ADD
0x8fe SWAP1
0x8ff DUP2
0x900 MSTORE
0x901 PUSH1 0x20
0x903 ADD
0x904 PUSH1 0x0
0x906 SHA3
0x907 SLOAD
0x908 SWAP5
0x909 POP
0x90a PUSH1 0x2
0x90c PUSH1 0x0
0x90e DUP11
0x90f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x924 AND
0x925 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x93a AND
0x93b DUP2
0x93c MSTORE
0x93d PUSH1 0x20
0x93f ADD
0x940 SWAP1
0x941 DUP2
0x942 MSTORE
0x943 PUSH1 0x20
0x945 ADD
0x946 PUSH1 0x0
0x948 SHA3
0x949 PUSH1 0x0
0x94b CALLER
0x94c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x961 AND
0x962 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x977 AND
0x978 DUP2
0x979 MSTORE
0x97a PUSH1 0x20
0x97c ADD
0x97d SWAP1
0x97e DUP2
0x97f MSTORE
0x980 PUSH1 0x20
0x982 ADD
0x983 PUSH1 0x0
0x985 SHA3
0x986 SLOAD
0x987 SWAP4
0x988 POP
0x989 DUP7
0x98a DUP6
0x98b GT
0x98c ISZERO
0x98d SWAP3
0x98e POP
0x98f DUP7
0x990 DUP5
0x991 GT
0x992 ISZERO
0x993 SWAP2
0x994 POP
0x995 PUSH1 0x1
0x997 PUSH1 0x0
0x999 DUP10
0x99a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9af AND
0x9b0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9c5 AND
0x9c6 DUP2
0x9c7 MSTORE
0x9c8 PUSH1 0x20
0x9ca ADD
0x9cb SWAP1
0x9cc DUP2
0x9cd MSTORE
0x9ce PUSH1 0x20
0x9d0 ADD
0x9d1 PUSH1 0x0
0x9d3 SHA3
0x9d4 SLOAD
0x9d5 DUP8
0x9d6 PUSH1 0x1
0x9d8 PUSH1 0x0
0x9da DUP12
0x9db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9f0 AND
0x9f1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa06 AND
0xa07 DUP2
0xa08 MSTORE
0xa09 PUSH1 0x20
0xa0b ADD
0xa0c SWAP1
0xa0d DUP2
0xa0e MSTORE
0xa0f PUSH1 0x20
0xa11 ADD
0xa12 PUSH1 0x0
0xa14 SHA3
0xa15 SLOAD
0xa16 ADD
0xa17 GT
0xa18 SWAP1
0xa19 POP
0xa1a DUP3
0xa1b DUP1
0xa1c ISZERO
0xa1d PUSH2 0xa23
0xa20 JUMPI
---
0x8c7: JUMPDEST 
0x8c8: V594 = 0x1
0x8ca: V595 = 0x0
0x8cd: V596 = 0xffffffffffffffffffffffffffffffffffffffff
0x8e2: V597 = AND 0xffffffffffffffffffffffffffffffffffffffff V259
0x8e3: V598 = 0xffffffffffffffffffffffffffffffffffffffff
0x8f8: V599 = AND 0xffffffffffffffffffffffffffffffffffffffff V597
0x8fa: M[0x0] = V599
0x8fb: V600 = 0x20
0x8fd: V601 = ADD 0x20 0x0
0x900: M[0x20] = 0x1
0x901: V602 = 0x20
0x903: V603 = ADD 0x20 0x20
0x904: V604 = 0x0
0x906: V605 = SHA3 0x0 0x40
0x907: V606 = S[V605]
0x90a: V607 = 0x2
0x90c: V608 = 0x0
0x90f: V609 = 0xffffffffffffffffffffffffffffffffffffffff
0x924: V610 = AND 0xffffffffffffffffffffffffffffffffffffffff V259
0x925: V611 = 0xffffffffffffffffffffffffffffffffffffffff
0x93a: V612 = AND 0xffffffffffffffffffffffffffffffffffffffff V610
0x93c: M[0x0] = V612
0x93d: V613 = 0x20
0x93f: V614 = ADD 0x20 0x0
0x942: M[0x20] = 0x2
0x943: V615 = 0x20
0x945: V616 = ADD 0x20 0x20
0x946: V617 = 0x0
0x948: V618 = SHA3 0x0 0x40
0x949: V619 = 0x0
0x94b: V620 = CALLER
0x94c: V621 = 0xffffffffffffffffffffffffffffffffffffffff
0x961: V622 = AND 0xffffffffffffffffffffffffffffffffffffffff V620
0x962: V623 = 0xffffffffffffffffffffffffffffffffffffffff
0x977: V624 = AND 0xffffffffffffffffffffffffffffffffffffffff V622
0x979: M[0x0] = V624
0x97a: V625 = 0x20
0x97c: V626 = ADD 0x20 0x0
0x97f: M[0x20] = V618
0x980: V627 = 0x20
0x982: V628 = ADD 0x20 0x20
0x983: V629 = 0x0
0x985: V630 = SHA3 0x0 0x40
0x986: V631 = S[V630]
0x98b: V632 = GT V606 V267
0x98c: V633 = ISZERO V632
0x991: V634 = GT V631 V267
0x992: V635 = ISZERO V634
0x995: V636 = 0x1
0x997: V637 = 0x0
0x99a: V638 = 0xffffffffffffffffffffffffffffffffffffffff
0x9af: V639 = AND 0xffffffffffffffffffffffffffffffffffffffff V264
0x9b0: V640 = 0xffffffffffffffffffffffffffffffffffffffff
0x9c5: V641 = AND 0xffffffffffffffffffffffffffffffffffffffff V639
0x9c7: M[0x0] = V641
0x9c8: V642 = 0x20
0x9ca: V643 = ADD 0x20 0x0
0x9cd: M[0x20] = 0x1
0x9ce: V644 = 0x20
0x9d0: V645 = ADD 0x20 0x20
0x9d1: V646 = 0x0
0x9d3: V647 = SHA3 0x0 0x40
0x9d4: V648 = S[V647]
0x9d6: V649 = 0x1
0x9d8: V650 = 0x0
0x9db: V651 = 0xffffffffffffffffffffffffffffffffffffffff
0x9f0: V652 = AND 0xffffffffffffffffffffffffffffffffffffffff V264
0x9f1: V653 = 0xffffffffffffffffffffffffffffffffffffffff
0xa06: V654 = AND 0xffffffffffffffffffffffffffffffffffffffff V652
0xa08: M[0x0] = V654
0xa09: V655 = 0x20
0xa0b: V656 = ADD 0x20 0x0
0xa0e: M[0x20] = 0x1
0xa0f: V657 = 0x20
0xa11: V658 = ADD 0x20 0x20
0xa12: V659 = 0x0
0xa14: V660 = SHA3 0x0 0x40
0xa15: V661 = S[V660]
0xa16: V662 = ADD V661 V267
0xa17: V663 = GT V662 V648
0xa1c: V664 = ISZERO V633
0xa1d: V665 = 0xa23
0xa20: JUMPI 0xa23 V664
---
Entry stack: [V10, 0x3f9, V259, V264, V267, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, V606, V631, V633, V635, V663, V633]
Exit stack: [V10, 0x3f9, V259, V264, V267, 0x0, V606, V631, V633, V635, V663, V633]

================================

Block 0xa21
[0xa21:0xa22]
---
Predecessors: [0x8c7]
Successors: [0xa23]
---
0xa21 POP
0xa22 DUP2
---
0xa21: NOP 
---
Entry stack: [V10, 0x3f9, V259, V264, V267, 0x0, V606, V631, V633, V635, V663, V633]
Stack pops: 3
Stack additions: [S2, S1, S2]
Exit stack: [V10, 0x3f9, V259, V264, V267, 0x0, V606, V631, V633, V635, V663, V635]

================================

Block 0xa23
[0xa23:0xa29]
---
Predecessors: [0x8c7, 0xa21]
Successors: [0xa2a, 0xa2d]
---
0xa23 JUMPDEST
0xa24 DUP1
0xa25 ISZERO
0xa26 PUSH2 0xa2d
0xa29 JUMPI
---
0xa23: JUMPDEST 
0xa25: V666 = ISZERO S0
0xa26: V667 = 0xa2d
0xa29: JUMPI 0xa2d V666
---
Entry stack: [V10, 0x3f9, V259, V264, V267, 0x0, V606, V631, V633, V635, V663, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x3f9, V259, V264, V267, 0x0, V606, V631, V633, V635, V663, S0]

================================

Block 0xa2a
[0xa2a:0xa2c]
---
Predecessors: [0xa23]
Successors: [0xa2d]
---
0xa2a POP
0xa2b DUP1
0xa2c ISZERO
---
0xa2c: V668 = ISZERO V663
---
Entry stack: [V10, 0x3f9, V259, V264, V267, 0x0, V606, V631, V633, V635, V663, S0]
Stack pops: 2
Stack additions: [S1, V668]
Exit stack: [V10, 0x3f9, V259, V264, V267, 0x0, V606, V631, V633, V635, V663, V668]

================================

Block 0xa2d
[0xa2d:0xa32]
---
Predecessors: [0xa23, 0xa2a]
Successors: [0xa33, 0xbc4]
---
0xa2d JUMPDEST
0xa2e ISZERO
0xa2f PUSH2 0xbc4
0xa32 JUMPI
---
0xa2d: JUMPDEST 
0xa2e: V669 = ISZERO S0
0xa2f: V670 = 0xbc4
0xa32: JUMPI 0xbc4 V669
---
Entry stack: [V10, 0x3f9, V259, V264, V267, 0x0, V606, V631, V633, V635, V663, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x3f9, V259, V264, V267, 0x0, V606, V631, V633, V635, V663]

================================

Block 0xa33
[0xa33:0xbc3]
---
Predecessors: [0xa2d]
Successors: [0xbce]
---
0xa33 DUP7
0xa34 PUSH1 0x1
0xa36 PUSH1 0x0
0xa38 DUP11
0xa39 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa4e AND
0xa4f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa64 AND
0xa65 DUP2
0xa66 MSTORE
0xa67 PUSH1 0x20
0xa69 ADD
0xa6a SWAP1
0xa6b DUP2
0xa6c MSTORE
0xa6d PUSH1 0x20
0xa6f ADD
0xa70 PUSH1 0x0
0xa72 SHA3
0xa73 PUSH1 0x0
0xa75 DUP3
0xa76 DUP3
0xa77 SLOAD
0xa78 ADD
0xa79 SWAP3
0xa7a POP
0xa7b POP
0xa7c DUP2
0xa7d SWAP1
0xa7e SSTORE
0xa7f POP
0xa80 DUP7
0xa81 PUSH1 0x1
0xa83 PUSH1 0x0
0xa85 DUP12
0xa86 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa9b AND
0xa9c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xab1 AND
0xab2 DUP2
0xab3 MSTORE
0xab4 PUSH1 0x20
0xab6 ADD
0xab7 SWAP1
0xab8 DUP2
0xab9 MSTORE
0xaba PUSH1 0x20
0xabc ADD
0xabd PUSH1 0x0
0xabf SHA3
0xac0 PUSH1 0x0
0xac2 DUP3
0xac3 DUP3
0xac4 SLOAD
0xac5 SUB
0xac6 SWAP3
0xac7 POP
0xac8 POP
0xac9 DUP2
0xaca SWAP1
0xacb SSTORE
0xacc POP
0xacd DUP7
0xace PUSH1 0x2
0xad0 PUSH1 0x0
0xad2 DUP12
0xad3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xae8 AND
0xae9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xafe AND
0xaff DUP2
0xb00 MSTORE
0xb01 PUSH1 0x20
0xb03 ADD
0xb04 SWAP1
0xb05 DUP2
0xb06 MSTORE
0xb07 PUSH1 0x20
0xb09 ADD
0xb0a PUSH1 0x0
0xb0c SHA3
0xb0d PUSH1 0x0
0xb0f CALLER
0xb10 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb25 AND
0xb26 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb3b AND
0xb3c DUP2
0xb3d MSTORE
0xb3e PUSH1 0x20
0xb40 ADD
0xb41 SWAP1
0xb42 DUP2
0xb43 MSTORE
0xb44 PUSH1 0x20
0xb46 ADD
0xb47 PUSH1 0x0
0xb49 SHA3
0xb4a PUSH1 0x0
0xb4c DUP3
0xb4d DUP3
0xb4e SLOAD
0xb4f SUB
0xb50 SWAP3
0xb51 POP
0xb52 POP
0xb53 DUP2
0xb54 SWAP1
0xb55 SSTORE
0xb56 POP
0xb57 DUP8
0xb58 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb6d AND
0xb6e DUP10
0xb6f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb84 AND
0xb85 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xba6 DUP10
0xba7 PUSH1 0x40
0xba9 MLOAD
0xbaa DUP1
0xbab DUP3
0xbac DUP2
0xbad MSTORE
0xbae PUSH1 0x20
0xbb0 ADD
0xbb1 SWAP2
0xbb2 POP
0xbb3 POP
0xbb4 PUSH1 0x40
0xbb6 MLOAD
0xbb7 DUP1
0xbb8 SWAP2
0xbb9 SUB
0xbba SWAP1
0xbbb LOG3
0xbbc PUSH1 0x1
0xbbe SWAP6
0xbbf POP
0xbc0 PUSH2 0xbce
0xbc3 JUMP
---
0xa34: V671 = 0x1
0xa36: V672 = 0x0
0xa39: V673 = 0xffffffffffffffffffffffffffffffffffffffff
0xa4e: V674 = AND 0xffffffffffffffffffffffffffffffffffffffff V264
0xa4f: V675 = 0xffffffffffffffffffffffffffffffffffffffff
0xa64: V676 = AND 0xffffffffffffffffffffffffffffffffffffffff V674
0xa66: M[0x0] = V676
0xa67: V677 = 0x20
0xa69: V678 = ADD 0x20 0x0
0xa6c: M[0x20] = 0x1
0xa6d: V679 = 0x20
0xa6f: V680 = ADD 0x20 0x20
0xa70: V681 = 0x0
0xa72: V682 = SHA3 0x0 0x40
0xa73: V683 = 0x0
0xa77: V684 = S[V682]
0xa78: V685 = ADD V684 V267
0xa7e: S[V682] = V685
0xa81: V686 = 0x1
0xa83: V687 = 0x0
0xa86: V688 = 0xffffffffffffffffffffffffffffffffffffffff
0xa9b: V689 = AND 0xffffffffffffffffffffffffffffffffffffffff V259
0xa9c: V690 = 0xffffffffffffffffffffffffffffffffffffffff
0xab1: V691 = AND 0xffffffffffffffffffffffffffffffffffffffff V689
0xab3: M[0x0] = V691
0xab4: V692 = 0x20
0xab6: V693 = ADD 0x20 0x0
0xab9: M[0x20] = 0x1
0xaba: V694 = 0x20
0xabc: V695 = ADD 0x20 0x20
0xabd: V696 = 0x0
0xabf: V697 = SHA3 0x0 0x40
0xac0: V698 = 0x0
0xac4: V699 = S[V697]
0xac5: V700 = SUB V699 V267
0xacb: S[V697] = V700
0xace: V701 = 0x2
0xad0: V702 = 0x0
0xad3: V703 = 0xffffffffffffffffffffffffffffffffffffffff
0xae8: V704 = AND 0xffffffffffffffffffffffffffffffffffffffff V259
0xae9: V705 = 0xffffffffffffffffffffffffffffffffffffffff
0xafe: V706 = AND 0xffffffffffffffffffffffffffffffffffffffff V704
0xb00: M[0x0] = V706
0xb01: V707 = 0x20
0xb03: V708 = ADD 0x20 0x0
0xb06: M[0x20] = 0x2
0xb07: V709 = 0x20
0xb09: V710 = ADD 0x20 0x20
0xb0a: V711 = 0x0
0xb0c: V712 = SHA3 0x0 0x40
0xb0d: V713 = 0x0
0xb0f: V714 = CALLER
0xb10: V715 = 0xffffffffffffffffffffffffffffffffffffffff
0xb25: V716 = AND 0xffffffffffffffffffffffffffffffffffffffff V714
0xb26: V717 = 0xffffffffffffffffffffffffffffffffffffffff
0xb3b: V718 = AND 0xffffffffffffffffffffffffffffffffffffffff V716
0xb3d: M[0x0] = V718
0xb3e: V719 = 0x20
0xb40: V720 = ADD 0x20 0x0
0xb43: M[0x20] = V712
0xb44: V721 = 0x20
0xb46: V722 = ADD 0x20 0x20
0xb47: V723 = 0x0
0xb49: V724 = SHA3 0x0 0x40
0xb4a: V725 = 0x0
0xb4e: V726 = S[V724]
0xb4f: V727 = SUB V726 V267
0xb55: S[V724] = V727
0xb58: V728 = 0xffffffffffffffffffffffffffffffffffffffff
0xb6d: V729 = AND 0xffffffffffffffffffffffffffffffffffffffff V264
0xb6f: V730 = 0xffffffffffffffffffffffffffffffffffffffff
0xb84: V731 = AND 0xffffffffffffffffffffffffffffffffffffffff V259
0xb85: V732 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xba7: V733 = 0x40
0xba9: V734 = M[0x40]
0xbad: M[V734] = V267
0xbae: V735 = 0x20
0xbb0: V736 = ADD 0x20 V734
0xbb4: V737 = 0x40
0xbb6: V738 = M[0x40]
0xbb9: V739 = SUB V736 V738
0xbbb: LOG V738 V739 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V731 V729
0xbbc: V740 = 0x1
0xbc0: V741 = 0xbce
0xbc3: JUMP 0xbce
---
Entry stack: [V10, 0x3f9, V259, V264, V267, 0x0, V606, V631, V633, V635, V663]
Stack pops: 9
Stack additions: [S8, S7, S6, 0x1, S4, S3, S2, S1, S0]
Exit stack: [V10, 0x3f9, V259, V264, V267, 0x1, V606, V631, V633, V635, V663]

================================

Block 0xbc4
[0xbc4:0xbcc]
---
Predecessors: [0xa2d]
Successors: [0xbce]
---
0xbc4 JUMPDEST
0xbc5 PUSH1 0x0
0xbc7 SWAP6
0xbc8 POP
0xbc9 PUSH2 0xbce
0xbcc JUMP
---
0xbc4: JUMPDEST 
0xbc5: V742 = 0x0
0xbc9: V743 = 0xbce
0xbcc: JUMP 0xbce
---
Entry stack: [V10, 0x3f9, V259, V264, V267, 0x0, V606, V631, V633, V635, V663]
Stack pops: 6
Stack additions: [0x0, S4, S3, S2, S1, S0]
Exit stack: [V10, 0x3f9, V259, V264, V267, 0x0, V606, V631, V633, V635, V663]

================================

Block 0xbcd
[0xbcd:0xbcd]
---
Predecessors: []
Successors: [0xbce]
---
0xbcd JUMPDEST
---
0xbcd: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xbce
[0xbce:0xbd9]
---
Predecessors: [0x8bf, 0xa33, 0xbc4, 0xbcd]
Successors: [0x3f9]
---
0xbce JUMPDEST
0xbcf POP
0xbd0 POP
0xbd1 POP
0xbd2 POP
0xbd3 POP
0xbd4 SWAP4
0xbd5 SWAP3
0xbd6 POP
0xbd7 POP
0xbd8 POP
0xbd9 JUMP
---
0xbce: JUMPDEST 
0xbd9: JUMP 0x3f9
---
Entry stack: [V10, 0x3f9, V259, V264, V267, {0x0, 0x1}, S4, S3, S2, S1, S0]
Stack pops: 10
Stack additions: [S5]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0xbda
[0xbda:0xbe0]
---
Predecessors: [0x41b]
Successors: [0xbe1]
---
0xbda JUMPDEST
0xbdb PUSH1 0x0
0xbdd PUSH1 0x12
0xbdf SWAP1
0xbe0 POP
---
0xbda: JUMPDEST 
0xbdb: V744 = 0x0
0xbdd: V745 = 0x12
---
Entry stack: [V10, 0x423]
Stack pops: 0
Stack additions: [0x12]
Exit stack: [V10, 0x423, 0x12]

================================

Block 0xbe1
[0xbe1:0xbe3]
---
Predecessors: [0xbda]
Successors: [0x423]
---
0xbe1 JUMPDEST
0xbe2 SWAP1
0xbe3 JUMP
---
0xbe1: JUMPDEST 
0xbe3: JUMP 0x423
---
Entry stack: [V10, 0x423, 0x12]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, 0x12]

================================

Block 0xbe4
[0xbe4:0xc3b]
---
Predecessors: [0x447]
Successors: [0xc3c, 0xc41]
---
0xbe4 JUMPDEST
0xbe5 PUSH1 0x0
0xbe7 PUSH1 0x0
0xbe9 SWAP1
0xbea SLOAD
0xbeb SWAP1
0xbec PUSH2 0x100
0xbef EXP
0xbf0 SWAP1
0xbf1 DIV
0xbf2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc07 AND
0xc08 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc1d AND
0xc1e CALLER
0xc1f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc34 AND
0xc35 EQ
0xc36 ISZERO
0xc37 ISZERO
0xc38 PUSH2 0xc41
0xc3b JUMPI
---
0xbe4: JUMPDEST 
0xbe5: V746 = 0x0
0xbe7: V747 = 0x0
0xbea: V748 = S[0x0]
0xbec: V749 = 0x100
0xbef: V750 = EXP 0x100 0x0
0xbf1: V751 = DIV V748 0x1
0xbf2: V752 = 0xffffffffffffffffffffffffffffffffffffffff
0xc07: V753 = AND 0xffffffffffffffffffffffffffffffffffffffff V751
0xc08: V754 = 0xffffffffffffffffffffffffffffffffffffffff
0xc1d: V755 = AND 0xffffffffffffffffffffffffffffffffffffffff V753
0xc1e: V756 = CALLER
0xc1f: V757 = 0xffffffffffffffffffffffffffffffffffffffff
0xc34: V758 = AND 0xffffffffffffffffffffffffffffffffffffffff V756
0xc35: V759 = EQ V758 V755
0xc36: V760 = ISZERO V759
0xc37: V761 = ISZERO V760
0xc38: V762 = 0xc41
0xc3b: JUMPI 0xc41 V761
---
Entry stack: [V10, 0x44f]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x44f]

================================

Block 0xc3c
[0xc3c:0xc40]
---
Predecessors: [0xbe4]
Successors: []
---
0xc3c PUSH1 0x0
0xc3e PUSH1 0x0
0xc40 REVERT
---
0xc3c: V763 = 0x0
0xc3e: V764 = 0x0
0xc40: REVERT 0x0 0x0
---
Entry stack: [V10, 0x44f]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x44f]

================================

Block 0xc41
[0xc41:0xc5c]
---
Predecessors: [0xbe4]
Successors: [0xc5d]
---
0xc41 JUMPDEST
0xc42 PUSH1 0x0
0xc44 PUSH1 0x0
0xc46 PUSH1 0x14
0xc48 PUSH2 0x100
0xc4b EXP
0xc4c DUP2
0xc4d SLOAD
0xc4e DUP2
0xc4f PUSH1 0xff
0xc51 MUL
0xc52 NOT
0xc53 AND
0xc54 SWAP1
0xc55 DUP4
0xc56 ISZERO
0xc57 ISZERO
0xc58 MUL
0xc59 OR
0xc5a SWAP1
0xc5b SSTORE
0xc5c POP
---
0xc41: JUMPDEST 
0xc42: V765 = 0x0
0xc44: V766 = 0x0
0xc46: V767 = 0x14
0xc48: V768 = 0x100
0xc4b: V769 = EXP 0x100 0x14
0xc4d: V770 = S[0x0]
0xc4f: V771 = 0xff
0xc51: V772 = MUL 0xff 0x10000000000000000000000000000000000000000
0xc52: V773 = NOT 0xff0000000000000000000000000000000000000000
0xc53: V774 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V770
0xc56: V775 = ISZERO 0x0
0xc57: V776 = ISZERO 0x1
0xc58: V777 = MUL 0x0 0x10000000000000000000000000000000000000000
0xc59: V778 = OR 0x0 V774
0xc5b: S[0x0] = V778
---
Entry stack: [V10, 0x44f]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x44f]

================================

Block 0xc5d
[0xc5d:0xc5e]
---
Predecessors: [0xc41]
Successors: [0x44f]
---
0xc5d JUMPDEST
0xc5e JUMP
---
0xc5d: JUMPDEST 
0xc5e: JUMP 0x44f
---
Entry stack: [V10, 0x44f]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xc5f
[0xc5f:0xca3]
---
Predecessors: [0x459]
Successors: [0xca4]
---
0xc5f JUMPDEST
0xc60 PUSH1 0x0
0xc62 PUSH1 0x1
0xc64 PUSH1 0x0
0xc66 DUP4
0xc67 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc7c AND
0xc7d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc92 AND
0xc93 DUP2
0xc94 MSTORE
0xc95 PUSH1 0x20
0xc97 ADD
0xc98 SWAP1
0xc99 DUP2
0xc9a MSTORE
0xc9b PUSH1 0x20
0xc9d ADD
0xc9e PUSH1 0x0
0xca0 SHA3
0xca1 SLOAD
0xca2 SWAP1
0xca3 POP
---
0xc5f: JUMPDEST 
0xc60: V779 = 0x0
0xc62: V780 = 0x1
0xc64: V781 = 0x0
0xc67: V782 = 0xffffffffffffffffffffffffffffffffffffffff
0xc7c: V783 = AND 0xffffffffffffffffffffffffffffffffffffffff V310
0xc7d: V784 = 0xffffffffffffffffffffffffffffffffffffffff
0xc92: V785 = AND 0xffffffffffffffffffffffffffffffffffffffff V783
0xc94: M[0x0] = V785
0xc95: V786 = 0x20
0xc97: V787 = ADD 0x20 0x0
0xc9a: M[0x20] = 0x1
0xc9b: V788 = 0x20
0xc9d: V789 = ADD 0x20 0x20
0xc9e: V790 = 0x0
0xca0: V791 = SHA3 0x0 0x40
0xca1: V792 = S[V791]
---
Entry stack: [V10, 0x485, V310]
Stack pops: 1
Stack additions: [S0, V792]
Exit stack: [V10, 0x485, V310, V792]

================================

Block 0xca4
[0xca4:0xca8]
---
Predecessors: [0xc5f]
Successors: [0x485]
---
0xca4 JUMPDEST
0xca5 SWAP2
0xca6 SWAP1
0xca7 POP
0xca8 JUMP
---
0xca4: JUMPDEST 
0xca8: JUMP 0x485
---
Entry stack: [V10, 0x485, V310, V792]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, V792]

================================

Block 0xca9
[0xca9:0xd00]
---
Predecessors: [0x4a3]
Successors: [0xd01, 0xd06]
---
0xca9 JUMPDEST
0xcaa PUSH1 0x0
0xcac PUSH1 0x0
0xcae SWAP1
0xcaf SLOAD
0xcb0 SWAP1
0xcb1 PUSH2 0x100
0xcb4 EXP
0xcb5 SWAP1
0xcb6 DIV
0xcb7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xccc AND
0xccd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xce2 AND
0xce3 CALLER
0xce4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcf9 AND
0xcfa EQ
0xcfb ISZERO
0xcfc ISZERO
0xcfd PUSH2 0xd06
0xd00 JUMPI
---
0xca9: JUMPDEST 
0xcaa: V793 = 0x0
0xcac: V794 = 0x0
0xcaf: V795 = S[0x0]
0xcb1: V796 = 0x100
0xcb4: V797 = EXP 0x100 0x0
0xcb6: V798 = DIV V795 0x1
0xcb7: V799 = 0xffffffffffffffffffffffffffffffffffffffff
0xccc: V800 = AND 0xffffffffffffffffffffffffffffffffffffffff V798
0xccd: V801 = 0xffffffffffffffffffffffffffffffffffffffff
0xce2: V802 = AND 0xffffffffffffffffffffffffffffffffffffffff V800
0xce3: V803 = CALLER
0xce4: V804 = 0xffffffffffffffffffffffffffffffffffffffff
0xcf9: V805 = AND 0xffffffffffffffffffffffffffffffffffffffff V803
0xcfa: V806 = EQ V805 V802
0xcfb: V807 = ISZERO V806
0xcfc: V808 = ISZERO V807
0xcfd: V809 = 0xd06
0xd00: JUMPI 0xd06 V808
---
Entry stack: [V10, 0x4ab]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x4ab]

================================

Block 0xd01
[0xd01:0xd05]
---
Predecessors: [0xca9]
Successors: []
---
0xd01 PUSH1 0x0
0xd03 PUSH1 0x0
0xd05 REVERT
---
0xd01: V810 = 0x0
0xd03: V811 = 0x0
0xd05: REVERT 0x0 0x0
---
Entry stack: [V10, 0x4ab]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x4ab]

================================

Block 0xd06
[0xd06:0xd21]
---
Predecessors: [0xca9]
Successors: [0xd22]
---
0xd06 JUMPDEST
0xd07 PUSH1 0x1
0xd09 PUSH1 0x0
0xd0b PUSH1 0x14
0xd0d PUSH2 0x100
0xd10 EXP
0xd11 DUP2
0xd12 SLOAD
0xd13 DUP2
0xd14 PUSH1 0xff
0xd16 MUL
0xd17 NOT
0xd18 AND
0xd19 SWAP1
0xd1a DUP4
0xd1b ISZERO
0xd1c ISZERO
0xd1d MUL
0xd1e OR
0xd1f SWAP1
0xd20 SSTORE
0xd21 POP
---
0xd06: JUMPDEST 
0xd07: V812 = 0x1
0xd09: V813 = 0x0
0xd0b: V814 = 0x14
0xd0d: V815 = 0x100
0xd10: V816 = EXP 0x100 0x14
0xd12: V817 = S[0x0]
0xd14: V818 = 0xff
0xd16: V819 = MUL 0xff 0x10000000000000000000000000000000000000000
0xd17: V820 = NOT 0xff0000000000000000000000000000000000000000
0xd18: V821 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V817
0xd1b: V822 = ISZERO 0x1
0xd1c: V823 = ISZERO 0x0
0xd1d: V824 = MUL 0x1 0x10000000000000000000000000000000000000000
0xd1e: V825 = OR 0x10000000000000000000000000000000000000000 V821
0xd20: S[0x0] = V825
---
Entry stack: [V10, 0x4ab]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x4ab]

================================

Block 0xd22
[0xd22:0xd23]
---
Predecessors: [0xd06]
Successors: [0x4ab]
---
0xd22 JUMPDEST
0xd23 JUMP
---
0xd22: JUMPDEST 
0xd23: JUMP 0x4ab
---
Entry stack: [V10, 0x4ab]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xd24
[0xd24:0xd2b]
---
Predecessors: [0x4b5]
Successors: [0x125b]
---
0xd24 JUMPDEST
0xd25 PUSH2 0xd2c
0xd28 PUSH2 0x125b
0xd2b JUMP
---
0xd24: JUMPDEST 
0xd25: V826 = 0xd2c
0xd28: V827 = 0x125b
0xd2b: JUMP 0x125b
---
Entry stack: [V10, 0x4bd]
Stack pops: 0
Stack additions: [0xd2c]
Exit stack: [V10, 0x4bd, 0xd2c]

================================

Block 0xd2c
[0xd2c:0xd65]
---
Predecessors: [0x125b]
Successors: [0xd66]
---
0xd2c JUMPDEST
0xd2d PUSH1 0x40
0xd2f PUSH1 0x40
0xd31 MLOAD
0xd32 SWAP1
0xd33 DUP2
0xd34 ADD
0xd35 PUSH1 0x40
0xd37 MSTORE
0xd38 DUP1
0xd39 PUSH1 0x4
0xd3b DUP2
0xd3c MSTORE
0xd3d PUSH1 0x20
0xd3f ADD
0xd40 PUSH32 0x4e4e544b00000000000000000000000000000000000000000000000000000000
0xd61 DUP2
0xd62 MSTORE
0xd63 POP
0xd64 SWAP1
0xd65 POP
---
0xd2c: JUMPDEST 
0xd2d: V828 = 0x40
0xd2f: V829 = 0x40
0xd31: V830 = M[0x40]
0xd34: V831 = ADD V830 0x40
0xd35: V832 = 0x40
0xd37: M[0x40] = V831
0xd39: V833 = 0x4
0xd3c: M[V830] = 0x4
0xd3d: V834 = 0x20
0xd3f: V835 = ADD 0x20 V830
0xd40: V836 = 0x4e4e544b00000000000000000000000000000000000000000000000000000000
0xd62: M[V835] = 0x4e4e544b00000000000000000000000000000000000000000000000000000000
---
Entry stack: [V10, {0x271, 0x4bd}, V1117]
Stack pops: 1
Stack additions: [V830]
Exit stack: [V10, {0x271, 0x4bd}, V830]

================================

Block 0xd66
[0xd66:0xd68]
---
Predecessors: [0xd2c]
Successors: [0x271, 0x4bd]
---
0xd66 JUMPDEST
0xd67 SWAP1
0xd68 JUMP
---
0xd66: JUMPDEST 
0xd68: JUMP {0x271, 0x4bd}
---
Entry stack: [V10, {0x271, 0x4bd}, V830]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, V830]

================================

Block 0xd69
[0xd69:0xd7e]
---
Predecessors: [0x54e]
Successors: [0xd7f, 0xd84]
---
0xd69 JUMPDEST
0xd6a PUSH1 0x0
0xd6c PUSH1 0x0
0xd6e PUSH1 0x0
0xd70 PUSH1 0x0
0xd72 PUSH1 0x44
0xd74 PUSH1 0x0
0xd76 CALLDATASIZE
0xd77 SWAP1
0xd78 POP
0xd79 LT
0xd7a ISZERO
0xd7b PUSH2 0xd84
0xd7e JUMPI
---
0xd69: JUMPDEST 
0xd6a: V837 = 0x0
0xd6c: V838 = 0x0
0xd6e: V839 = 0x0
0xd70: V840 = 0x0
0xd72: V841 = 0x44
0xd74: V842 = 0x0
0xd76: V843 = CALLDATASIZE
0xd79: V844 = LT V843 0x44
0xd7a: V845 = ISZERO V844
0xd7b: V846 = 0xd84
0xd7e: JUMPI 0xd84 V845
---
Entry stack: [V10, 0x583, V384, V387]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0]
Exit stack: [V10, 0x583, V384, V387, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xd7f
[0xd7f:0xd83]
---
Predecessors: [0xd69]
Successors: []
---
0xd7f PUSH1 0x0
0xd81 PUSH1 0x0
0xd83 REVERT
---
0xd7f: V847 = 0x0
0xd81: V848 = 0x0
0xd83: REVERT 0x0 0x0
---
Entry stack: [V10, 0x583, V384, V387, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x583, V384, V387, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xd84
[0xd84:0xd8d]
---
Predecessors: [0xd69]
Successors: [0xd8e, 0xd96]
---
0xd84 JUMPDEST
0xd85 PUSH1 0x0
0xd87 DUP6
0xd88 EQ
0xd89 ISZERO
0xd8a PUSH2 0xd96
0xd8d JUMPI
---
0xd84: JUMPDEST 
0xd85: V849 = 0x0
0xd88: V850 = EQ V387 0x0
0xd89: V851 = ISZERO V850
0xd8a: V852 = 0xd96
0xd8d: JUMPI 0xd96 V851
---
Entry stack: [V10, 0x583, V384, V387, 0x0, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V10, 0x583, V384, V387, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xd8e
[0xd8e:0xd95]
---
Predecessors: [0xd84]
Successors: [0xf85]
---
0xd8e PUSH1 0x0
0xd90 SWAP4
0xd91 POP
0xd92 PUSH2 0xf85
0xd95 JUMP
---
0xd8e: V853 = 0x0
0xd92: V854 = 0xf85
0xd95: JUMP 0xf85
---
Entry stack: [V10, 0x583, V384, V387, 0x0, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [0x0, S2, S1, S0]
Exit stack: [V10, 0x583, V384, V387, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xd96
[0xd96:0xe6a]
---
Predecessors: [0xd84]
Successors: [0xe6b, 0xe6e]
---
0xd96 JUMPDEST
0xd97 PUSH1 0x1
0xd99 PUSH1 0x0
0xd9b CALLER
0xd9c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdb1 AND
0xdb2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdc7 AND
0xdc8 DUP2
0xdc9 MSTORE
0xdca PUSH1 0x20
0xdcc ADD
0xdcd SWAP1
0xdce DUP2
0xdcf MSTORE
0xdd0 PUSH1 0x20
0xdd2 ADD
0xdd3 PUSH1 0x0
0xdd5 SHA3
0xdd6 SLOAD
0xdd7 SWAP3
0xdd8 POP
0xdd9 DUP5
0xdda DUP4
0xddb LT
0xddc ISZERO
0xddd SWAP2
0xdde POP
0xddf PUSH1 0x1
0xde1 PUSH1 0x0
0xde3 DUP8
0xde4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdf9 AND
0xdfa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe0f AND
0xe10 DUP2
0xe11 MSTORE
0xe12 PUSH1 0x20
0xe14 ADD
0xe15 SWAP1
0xe16 DUP2
0xe17 MSTORE
0xe18 PUSH1 0x20
0xe1a ADD
0xe1b PUSH1 0x0
0xe1d SHA3
0xe1e SLOAD
0xe1f DUP6
0xe20 PUSH1 0x1
0xe22 PUSH1 0x0
0xe24 DUP10
0xe25 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe3a AND
0xe3b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe50 AND
0xe51 DUP2
0xe52 MSTORE
0xe53 PUSH1 0x20
0xe55 ADD
0xe56 SWAP1
0xe57 DUP2
0xe58 MSTORE
0xe59 PUSH1 0x20
0xe5b ADD
0xe5c PUSH1 0x0
0xe5e SHA3
0xe5f SLOAD
0xe60 ADD
0xe61 LT
0xe62 SWAP1
0xe63 POP
0xe64 DUP2
0xe65 DUP1
0xe66 ISZERO
0xe67 PUSH2 0xe6e
0xe6a JUMPI
---
0xd96: JUMPDEST 
0xd97: V855 = 0x1
0xd99: V856 = 0x0
0xd9b: V857 = CALLER
0xd9c: V858 = 0xffffffffffffffffffffffffffffffffffffffff
0xdb1: V859 = AND 0xffffffffffffffffffffffffffffffffffffffff V857
0xdb2: V860 = 0xffffffffffffffffffffffffffffffffffffffff
0xdc7: V861 = AND 0xffffffffffffffffffffffffffffffffffffffff V859
0xdc9: M[0x0] = V861
0xdca: V862 = 0x20
0xdcc: V863 = ADD 0x20 0x0
0xdcf: M[0x20] = 0x1
0xdd0: V864 = 0x20
0xdd2: V865 = ADD 0x20 0x20
0xdd3: V866 = 0x0
0xdd5: V867 = SHA3 0x0 0x40
0xdd6: V868 = S[V867]
0xddb: V869 = LT V868 V387
0xddc: V870 = ISZERO V869
0xddf: V871 = 0x1
0xde1: V872 = 0x0
0xde4: V873 = 0xffffffffffffffffffffffffffffffffffffffff
0xdf9: V874 = AND 0xffffffffffffffffffffffffffffffffffffffff V384
0xdfa: V875 = 0xffffffffffffffffffffffffffffffffffffffff
0xe0f: V876 = AND 0xffffffffffffffffffffffffffffffffffffffff V874
0xe11: M[0x0] = V876
0xe12: V877 = 0x20
0xe14: V878 = ADD 0x20 0x0
0xe17: M[0x20] = 0x1
0xe18: V879 = 0x20
0xe1a: V880 = ADD 0x20 0x20
0xe1b: V881 = 0x0
0xe1d: V882 = SHA3 0x0 0x40
0xe1e: V883 = S[V882]
0xe20: V884 = 0x1
0xe22: V885 = 0x0
0xe25: V886 = 0xffffffffffffffffffffffffffffffffffffffff
0xe3a: V887 = AND 0xffffffffffffffffffffffffffffffffffffffff V384
0xe3b: V888 = 0xffffffffffffffffffffffffffffffffffffffff
0xe50: V889 = AND 0xffffffffffffffffffffffffffffffffffffffff V887
0xe52: M[0x0] = V889
0xe53: V890 = 0x20
0xe55: V891 = ADD 0x20 0x0
0xe58: M[0x20] = 0x1
0xe59: V892 = 0x20
0xe5b: V893 = ADD 0x20 0x20
0xe5c: V894 = 0x0
0xe5e: V895 = SHA3 0x0 0x40
0xe5f: V896 = S[V895]
0xe60: V897 = ADD V896 V387
0xe61: V898 = LT V897 V883
0xe66: V899 = ISZERO V870
0xe67: V900 = 0xe6e
0xe6a: JUMPI 0xe6e V899
---
Entry stack: [V10, 0x583, V384, V387, 0x0, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, V868, V870, V898, V870]
Exit stack: [V10, 0x583, V384, V387, 0x0, V868, V870, V898, V870]

================================

Block 0xe6b
[0xe6b:0xe6d]
---
Predecessors: [0xd96]
Successors: [0xe6e]
---
0xe6b POP
0xe6c DUP1
0xe6d ISZERO
---
0xe6d: V901 = ISZERO V898
---
Entry stack: [V10, 0x583, V384, V387, 0x0, V868, V870, V898, V870]
Stack pops: 2
Stack additions: [S1, V901]
Exit stack: [V10, 0x583, V384, V387, 0x0, V868, V870, V898, V901]

================================

Block 0xe6e
[0xe6e:0xe73]
---
Predecessors: [0xd96, 0xe6b]
Successors: [0xe74, 0xf7b]
---
0xe6e JUMPDEST
0xe6f ISZERO
0xe70 PUSH2 0xf7b
0xe73 JUMPI
---
0xe6e: JUMPDEST 
0xe6f: V902 = ISZERO S0
0xe70: V903 = 0xf7b
0xe73: JUMPI 0xf7b V902
---
Entry stack: [V10, 0x583, V384, V387, 0x0, V868, V870, V898, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x583, V384, V387, 0x0, V868, V870, V898]

================================

Block 0xe74
[0xe74:0xf7a]
---
Predecessors: [0xe6e]
Successors: [0xf85]
---
0xe74 DUP5
0xe75 PUSH1 0x1
0xe77 PUSH1 0x0
0xe79 CALLER
0xe7a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe8f AND
0xe90 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xea5 AND
0xea6 DUP2
0xea7 MSTORE
0xea8 PUSH1 0x20
0xeaa ADD
0xeab SWAP1
0xeac DUP2
0xead MSTORE
0xeae PUSH1 0x20
0xeb0 ADD
0xeb1 PUSH1 0x0
0xeb3 SHA3
0xeb4 PUSH1 0x0
0xeb6 DUP3
0xeb7 DUP3
0xeb8 SLOAD
0xeb9 SUB
0xeba SWAP3
0xebb POP
0xebc POP
0xebd DUP2
0xebe SWAP1
0xebf SSTORE
0xec0 POP
0xec1 DUP5
0xec2 PUSH1 0x1
0xec4 PUSH1 0x0
0xec6 DUP9
0xec7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xedc AND
0xedd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xef2 AND
0xef3 DUP2
0xef4 MSTORE
0xef5 PUSH1 0x20
0xef7 ADD
0xef8 SWAP1
0xef9 DUP2
0xefa MSTORE
0xefb PUSH1 0x20
0xefd ADD
0xefe PUSH1 0x0
0xf00 SHA3
0xf01 PUSH1 0x0
0xf03 DUP3
0xf04 DUP3
0xf05 SLOAD
0xf06 ADD
0xf07 SWAP3
0xf08 POP
0xf09 POP
0xf0a DUP2
0xf0b SWAP1
0xf0c SSTORE
0xf0d POP
0xf0e DUP6
0xf0f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf24 AND
0xf25 CALLER
0xf26 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf3b AND
0xf3c PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xf5d DUP8
0xf5e PUSH1 0x40
0xf60 MLOAD
0xf61 DUP1
0xf62 DUP3
0xf63 DUP2
0xf64 MSTORE
0xf65 PUSH1 0x20
0xf67 ADD
0xf68 SWAP2
0xf69 POP
0xf6a POP
0xf6b PUSH1 0x40
0xf6d MLOAD
0xf6e DUP1
0xf6f SWAP2
0xf70 SUB
0xf71 SWAP1
0xf72 LOG3
0xf73 PUSH1 0x1
0xf75 SWAP4
0xf76 POP
0xf77 PUSH2 0xf85
0xf7a JUMP
---
0xe75: V904 = 0x1
0xe77: V905 = 0x0
0xe79: V906 = CALLER
0xe7a: V907 = 0xffffffffffffffffffffffffffffffffffffffff
0xe8f: V908 = AND 0xffffffffffffffffffffffffffffffffffffffff V906
0xe90: V909 = 0xffffffffffffffffffffffffffffffffffffffff
0xea5: V910 = AND 0xffffffffffffffffffffffffffffffffffffffff V908
0xea7: M[0x0] = V910
0xea8: V911 = 0x20
0xeaa: V912 = ADD 0x20 0x0
0xead: M[0x20] = 0x1
0xeae: V913 = 0x20
0xeb0: V914 = ADD 0x20 0x20
0xeb1: V915 = 0x0
0xeb3: V916 = SHA3 0x0 0x40
0xeb4: V917 = 0x0
0xeb8: V918 = S[V916]
0xeb9: V919 = SUB V918 V387
0xebf: S[V916] = V919
0xec2: V920 = 0x1
0xec4: V921 = 0x0
0xec7: V922 = 0xffffffffffffffffffffffffffffffffffffffff
0xedc: V923 = AND 0xffffffffffffffffffffffffffffffffffffffff V384
0xedd: V924 = 0xffffffffffffffffffffffffffffffffffffffff
0xef2: V925 = AND 0xffffffffffffffffffffffffffffffffffffffff V923
0xef4: M[0x0] = V925
0xef5: V926 = 0x20
0xef7: V927 = ADD 0x20 0x0
0xefa: M[0x20] = 0x1
0xefb: V928 = 0x20
0xefd: V929 = ADD 0x20 0x20
0xefe: V930 = 0x0
0xf00: V931 = SHA3 0x0 0x40
0xf01: V932 = 0x0
0xf05: V933 = S[V931]
0xf06: V934 = ADD V933 V387
0xf0c: S[V931] = V934
0xf0f: V935 = 0xffffffffffffffffffffffffffffffffffffffff
0xf24: V936 = AND 0xffffffffffffffffffffffffffffffffffffffff V384
0xf25: V937 = CALLER
0xf26: V938 = 0xffffffffffffffffffffffffffffffffffffffff
0xf3b: V939 = AND 0xffffffffffffffffffffffffffffffffffffffff V937
0xf3c: V940 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xf5e: V941 = 0x40
0xf60: V942 = M[0x40]
0xf64: M[V942] = V387
0xf65: V943 = 0x20
0xf67: V944 = ADD 0x20 V942
0xf6b: V945 = 0x40
0xf6d: V946 = M[0x40]
0xf70: V947 = SUB V944 V946
0xf72: LOG V946 V947 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V939 V936
0xf73: V948 = 0x1
0xf77: V949 = 0xf85
0xf7a: JUMP 0xf85
---
Entry stack: [V10, 0x583, V384, V387, 0x0, V868, V870, V898]
Stack pops: 6
Stack additions: [S5, S4, 0x1, S2, S1, S0]
Exit stack: [V10, 0x583, V384, V387, 0x1, V868, V870, V898]

================================

Block 0xf7b
[0xf7b:0xf83]
---
Predecessors: [0xe6e]
Successors: [0xf85]
---
0xf7b JUMPDEST
0xf7c PUSH1 0x0
0xf7e SWAP4
0xf7f POP
0xf80 PUSH2 0xf85
0xf83 JUMP
---
0xf7b: JUMPDEST 
0xf7c: V950 = 0x0
0xf80: V951 = 0xf85
0xf83: JUMP 0xf85
---
Entry stack: [V10, 0x583, V384, V387, 0x0, V868, V870, V898]
Stack pops: 4
Stack additions: [0x0, S2, S1, S0]
Exit stack: [V10, 0x583, V384, V387, 0x0, V868, V870, V898]

================================

Block 0xf84
[0xf84:0xf84]
---
Predecessors: []
Successors: [0xf85]
---
0xf84 JUMPDEST
---
0xf84: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xf85
[0xf85:0xf8d]
---
Predecessors: [0xd8e, 0xe74, 0xf7b, 0xf84]
Successors: [0x583]
---
0xf85 JUMPDEST
0xf86 POP
0xf87 POP
0xf88 POP
0xf89 SWAP3
0xf8a SWAP2
0xf8b POP
0xf8c POP
0xf8d JUMP
---
0xf85: JUMPDEST 
0xf8d: JUMP 0x583
---
Entry stack: [V10, 0x583, V384, V387, {0x0, 0x1}, S2, S1, S0]
Stack pops: 7
Stack additions: [S3]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0xf8e
[0xf8e:0xfb0]
---
Predecessors: [0x5a5]
Successors: [0xfb1]
---
0xf8e JUMPDEST
0xf8f PUSH1 0x0
0xf91 PUSH1 0x0
0xf93 PUSH1 0x0
0xf95 PUSH1 0x3
0xf97 SLOAD
0xf98 PUSH1 0x4
0xf9a SLOAD
0xf9b PUSH1 0x0
0xf9d PUSH1 0x14
0xf9f SWAP1
0xfa0 SLOAD
0xfa1 SWAP1
0xfa2 PUSH2 0x100
0xfa5 EXP
0xfa6 SWAP1
0xfa7 DIV
0xfa8 PUSH1 0xff
0xfaa AND
0xfab SWAP3
0xfac POP
0xfad SWAP3
0xfae POP
0xfaf SWAP3
0xfb0 POP
---
0xf8e: JUMPDEST 
0xf8f: V952 = 0x0
0xf91: V953 = 0x0
0xf93: V954 = 0x0
0xf95: V955 = 0x3
0xf97: V956 = S[0x3]
0xf98: V957 = 0x4
0xf9a: V958 = S[0x4]
0xf9b: V959 = 0x0
0xf9d: V960 = 0x14
0xfa0: V961 = S[0x0]
0xfa2: V962 = 0x100
0xfa5: V963 = EXP 0x100 0x14
0xfa7: V964 = DIV V961 0x10000000000000000000000000000000000000000
0xfa8: V965 = 0xff
0xfaa: V966 = AND 0xff V964
---
Entry stack: [V10, 0x5ad]
Stack pops: 0
Stack additions: [V956, V958, V966]
Exit stack: [V10, 0x5ad, V956, V958, V966]

================================

Block 0xfb1
[0xfb1:0xfb5]
---
Predecessors: [0xf8e]
Successors: [0x5ad]
---
0xfb1 JUMPDEST
0xfb2 SWAP1
0xfb3 SWAP2
0xfb4 SWAP3
0xfb5 JUMP
---
0xfb1: JUMPDEST 
0xfb5: JUMP 0x5ad
---
Entry stack: [V10, 0x5ad, V956, V958, V966]
Stack pops: 4
Stack additions: [S2, S1, S0]
Exit stack: [V10, V956, V958, V966]

================================

Block 0xfb6
[0xfb6:0xfc8]
---
Predecessors: [0x5dd]
Successors: [0x5e5]
---
0xfb6 JUMPDEST
0xfb7 PUSH1 0x0
0xfb9 PUSH1 0x14
0xfbb SWAP1
0xfbc SLOAD
0xfbd SWAP1
0xfbe PUSH2 0x100
0xfc1 EXP
0xfc2 SWAP1
0xfc3 DIV
0xfc4 PUSH1 0xff
0xfc6 AND
0xfc7 DUP2
0xfc8 JUMP
---
0xfb6: JUMPDEST 
0xfb7: V967 = 0x0
0xfb9: V968 = 0x14
0xfbc: V969 = S[0x0]
0xfbe: V970 = 0x100
0xfc1: V971 = EXP 0x100 0x14
0xfc3: V972 = DIV V969 0x10000000000000000000000000000000000000000
0xfc4: V973 = 0xff
0xfc6: V974 = AND 0xff V972
0xfc8: JUMP 0x5e5
---
Entry stack: [V10, 0x5e5]
Stack pops: 1
Stack additions: [S0, V974]
Exit stack: [V10, 0x5e5, V974]

================================

Block 0xfc9
[0xfc9:0x104a]
---
Predecessors: [0x607]
Successors: [0x104b]
---
0xfc9 JUMPDEST
0xfca PUSH1 0x0
0xfcc PUSH1 0x2
0xfce PUSH1 0x0
0xfd0 DUP5
0xfd1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfe6 AND
0xfe7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xffc AND
0xffd DUP2
0xffe MSTORE
0xfff PUSH1 0x20
0x1001 ADD
0x1002 SWAP1
0x1003 DUP2
0x1004 MSTORE
0x1005 PUSH1 0x20
0x1007 ADD
0x1008 PUSH1 0x0
0x100a SHA3
0x100b PUSH1 0x0
0x100d DUP4
0x100e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1023 AND
0x1024 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1039 AND
0x103a DUP2
0x103b MSTORE
0x103c PUSH1 0x20
0x103e ADD
0x103f SWAP1
0x1040 DUP2
0x1041 MSTORE
0x1042 PUSH1 0x20
0x1044 ADD
0x1045 PUSH1 0x0
0x1047 SHA3
0x1048 SLOAD
0x1049 SWAP1
0x104a POP
---
0xfc9: JUMPDEST 
0xfca: V975 = 0x0
0xfcc: V976 = 0x2
0xfce: V977 = 0x0
0xfd1: V978 = 0xffffffffffffffffffffffffffffffffffffffff
0xfe6: V979 = AND 0xffffffffffffffffffffffffffffffffffffffff V445
0xfe7: V980 = 0xffffffffffffffffffffffffffffffffffffffff
0xffc: V981 = AND 0xffffffffffffffffffffffffffffffffffffffff V979
0xffe: M[0x0] = V981
0xfff: V982 = 0x20
0x1001: V983 = ADD 0x20 0x0
0x1004: M[0x20] = 0x2
0x1005: V984 = 0x20
0x1007: V985 = ADD 0x20 0x20
0x1008: V986 = 0x0
0x100a: V987 = SHA3 0x0 0x40
0x100b: V988 = 0x0
0x100e: V989 = 0xffffffffffffffffffffffffffffffffffffffff
0x1023: V990 = AND 0xffffffffffffffffffffffffffffffffffffffff V450
0x1024: V991 = 0xffffffffffffffffffffffffffffffffffffffff
0x1039: V992 = AND 0xffffffffffffffffffffffffffffffffffffffff V990
0x103b: M[0x0] = V992
0x103c: V993 = 0x20
0x103e: V994 = ADD 0x20 0x0
0x1041: M[0x20] = V987
0x1042: V995 = 0x20
0x1044: V996 = ADD 0x20 0x20
0x1045: V997 = 0x0
0x1047: V998 = SHA3 0x0 0x40
0x1048: V999 = S[V998]
---
Entry stack: [V10, 0x652, V445, V450]
Stack pops: 2
Stack additions: [S1, S0, V999]
Exit stack: [V10, 0x652, V445, V450, V999]

================================

Block 0x104b
[0x104b:0x1050]
---
Predecessors: [0xfc9]
Successors: [0x652]
---
0x104b JUMPDEST
0x104c SWAP3
0x104d SWAP2
0x104e POP
0x104f POP
0x1050 JUMP
---
0x104b: JUMPDEST 
0x1050: JUMP 0x652
---
Entry stack: [V10, 0x652, V445, V450, V999]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, V999]

================================

Block 0x1051
[0x1051:0x10ae]
---
Predecessors: [0x670]
Successors: [0x10af, 0x10b4]
---
0x1051 JUMPDEST
0x1052 PUSH1 0x0
0x1054 PUSH1 0x0
0x1056 PUSH1 0x0
0x1058 PUSH1 0x0
0x105a PUSH1 0x0
0x105c SWAP1
0x105d SLOAD
0x105e SWAP1
0x105f PUSH2 0x100
0x1062 EXP
0x1063 SWAP1
0x1064 DIV
0x1065 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x107a AND
0x107b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1090 AND
0x1091 CALLER
0x1092 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10a7 AND
0x10a8 EQ
0x10a9 ISZERO
0x10aa ISZERO
0x10ab PUSH2 0x10b4
0x10ae JUMPI
---
0x1051: JUMPDEST 
0x1052: V1000 = 0x0
0x1054: V1001 = 0x0
0x1056: V1002 = 0x0
0x1058: V1003 = 0x0
0x105a: V1004 = 0x0
0x105d: V1005 = S[0x0]
0x105f: V1006 = 0x100
0x1062: V1007 = EXP 0x100 0x0
0x1064: V1008 = DIV V1005 0x1
0x1065: V1009 = 0xffffffffffffffffffffffffffffffffffffffff
0x107a: V1010 = AND 0xffffffffffffffffffffffffffffffffffffffff V1008
0x107b: V1011 = 0xffffffffffffffffffffffffffffffffffffffff
0x1090: V1012 = AND 0xffffffffffffffffffffffffffffffffffffffff V1010
0x1091: V1013 = CALLER
0x1092: V1014 = 0xffffffffffffffffffffffffffffffffffffffff
0x10a7: V1015 = AND 0xffffffffffffffffffffffffffffffffffffffff V1013
0x10a8: V1016 = EQ V1015 V1012
0x10a9: V1017 = ISZERO V1016
0x10aa: V1018 = ISZERO V1017
0x10ab: V1019 = 0x10b4
0x10ae: JUMPI 0x10b4 V1018
---
Entry stack: [V10, 0x69c, V468]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V10, 0x69c, V468, 0x0, 0x0, 0x0]

================================

Block 0x10af
[0x10af:0x10b3]
---
Predecessors: [0x1051]
Successors: []
---
0x10af PUSH1 0x0
0x10b1 PUSH1 0x0
0x10b3 REVERT
---
0x10af: V1020 = 0x0
0x10b1: V1021 = 0x0
0x10b3: REVERT 0x0 0x0
---
Entry stack: [V10, 0x69c, V468, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x69c, V468, 0x0, 0x0, 0x0]

================================

Block 0x10b4
[0x10b4:0x1155]
---
Predecessors: [0x1051]
Successors: [0x1156, 0x1157]
---
0x10b4 JUMPDEST
0x10b5 DUP4
0x10b6 SWAP2
0x10b7 POP
0x10b8 DUP2
0x10b9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10ce AND
0x10cf PUSH4 0x70a08231
0x10d4 ADDRESS
0x10d5 PUSH1 0x0
0x10d7 PUSH1 0x40
0x10d9 MLOAD
0x10da PUSH1 0x20
0x10dc ADD
0x10dd MSTORE
0x10de PUSH1 0x40
0x10e0 MLOAD
0x10e1 DUP3
0x10e2 PUSH4 0xffffffff
0x10e7 AND
0x10e8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1106 MUL
0x1107 DUP2
0x1108 MSTORE
0x1109 PUSH1 0x4
0x110b ADD
0x110c DUP1
0x110d DUP3
0x110e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1123 AND
0x1124 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1139 AND
0x113a DUP2
0x113b MSTORE
0x113c PUSH1 0x20
0x113e ADD
0x113f SWAP2
0x1140 POP
0x1141 POP
0x1142 PUSH1 0x20
0x1144 PUSH1 0x40
0x1146 MLOAD
0x1147 DUP1
0x1148 DUP4
0x1149 SUB
0x114a DUP2
0x114b PUSH1 0x0
0x114d DUP8
0x114e DUP1
0x114f EXTCODESIZE
0x1150 ISZERO
0x1151 ISZERO
0x1152 PUSH2 0x1157
0x1155 JUMPI
---
0x10b4: JUMPDEST 
0x10b9: V1022 = 0xffffffffffffffffffffffffffffffffffffffff
0x10ce: V1023 = AND 0xffffffffffffffffffffffffffffffffffffffff V468
0x10cf: V1024 = 0x70a08231
0x10d4: V1025 = ADDRESS
0x10d5: V1026 = 0x0
0x10d7: V1027 = 0x40
0x10d9: V1028 = M[0x40]
0x10da: V1029 = 0x20
0x10dc: V1030 = ADD 0x20 V1028
0x10dd: M[V1030] = 0x0
0x10de: V1031 = 0x40
0x10e0: V1032 = M[0x40]
0x10e2: V1033 = 0xffffffff
0x10e7: V1034 = AND 0xffffffff 0x70a08231
0x10e8: V1035 = 0x100000000000000000000000000000000000000000000000000000000
0x1106: V1036 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x1108: M[V1032] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x1109: V1037 = 0x4
0x110b: V1038 = ADD 0x4 V1032
0x110e: V1039 = 0xffffffffffffffffffffffffffffffffffffffff
0x1123: V1040 = AND 0xffffffffffffffffffffffffffffffffffffffff V1025
0x1124: V1041 = 0xffffffffffffffffffffffffffffffffffffffff
0x1139: V1042 = AND 0xffffffffffffffffffffffffffffffffffffffff V1040
0x113b: M[V1038] = V1042
0x113c: V1043 = 0x20
0x113e: V1044 = ADD 0x20 V1038
0x1142: V1045 = 0x20
0x1144: V1046 = 0x40
0x1146: V1047 = M[0x40]
0x1149: V1048 = SUB V1044 V1047
0x114b: V1049 = 0x0
0x114f: V1050 = EXTCODESIZE V1023
0x1150: V1051 = ISZERO V1050
0x1151: V1052 = ISZERO V1051
0x1152: V1053 = 0x1157
0x1155: JUMPI 0x1157 V1052
---
Entry stack: [V10, 0x69c, V468, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S3, S0, V1023, 0x70a08231, V1044, 0x20, V1047, V1048, V1047, 0x0, V1023]
Exit stack: [V10, 0x69c, V468, 0x0, V468, 0x0, V1023, 0x70a08231, V1044, 0x20, V1047, V1048, V1047, 0x0, V1023]

================================

Block 0x1156
[0x1156:0x1156]
---
Predecessors: [0x10b4]
Successors: []
---
0x1156 INVALID
---
0x1156: INVALID 
---
Entry stack: [V10, 0x69c, V468, 0x0, V468, 0x0, V1023, 0x70a08231, V1044, 0x20, V1047, V1048, V1047, 0x0, V1023]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x69c, V468, 0x0, V468, 0x0, V1023, 0x70a08231, V1044, 0x20, V1047, V1048, V1047, 0x0, V1023]

================================

Block 0x1157
[0x1157:0x1162]
---
Predecessors: [0x10b4]
Successors: [0x1163, 0x1164]
---
0x1157 JUMPDEST
0x1158 PUSH1 0x32
0x115a GAS
0x115b SUB
0x115c CALL
0x115d ISZERO
0x115e ISZERO
0x115f PUSH2 0x1164
0x1162 JUMPI
---
0x1157: JUMPDEST 
0x1158: V1054 = 0x32
0x115a: V1055 = GAS
0x115b: V1056 = SUB V1055 0x32
0x115c: V1057 = CALL V1056 V1023 0x0 V1047 V1048 V1047 0x20
0x115d: V1058 = ISZERO V1057
0x115e: V1059 = ISZERO V1058
0x115f: V1060 = 0x1164
0x1162: JUMPI 0x1164 V1059
---
Entry stack: [V10, 0x69c, V468, 0x0, V468, 0x0, V1023, 0x70a08231, V1044, 0x20, V1047, V1048, V1047, 0x0, V1023]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x69c, V468, 0x0, V468, 0x0, V1023, 0x70a08231, V1044]

================================

Block 0x1163
[0x1163:0x1163]
---
Predecessors: [0x1157]
Successors: []
---
0x1163 INVALID
---
0x1163: INVALID 
---
Entry stack: [V10, 0x69c, V468, 0x0, V468, 0x0, V1023, 0x70a08231, V1044]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x69c, V468, 0x0, V468, 0x0, V1023, 0x70a08231, V1044]

================================

Block 0x1164
[0x1164:0x1238]
---
Predecessors: [0x1157]
Successors: [0x1239, 0x123a]
---
0x1164 JUMPDEST
0x1165 POP
0x1166 POP
0x1167 POP
0x1168 PUSH1 0x40
0x116a MLOAD
0x116b DUP1
0x116c MLOAD
0x116d SWAP1
0x116e POP
0x116f SWAP1
0x1170 POP
0x1171 DUP2
0x1172 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1187 AND
0x1188 PUSH4 0xa9059cbb
0x118d PUSH1 0x0
0x118f PUSH1 0x0
0x1191 SWAP1
0x1192 SLOAD
0x1193 SWAP1
0x1194 PUSH2 0x100
0x1197 EXP
0x1198 SWAP1
0x1199 DIV
0x119a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11af AND
0x11b0 DUP4
0x11b1 PUSH1 0x0
0x11b3 PUSH1 0x40
0x11b5 MLOAD
0x11b6 PUSH1 0x20
0x11b8 ADD
0x11b9 MSTORE
0x11ba PUSH1 0x40
0x11bc MLOAD
0x11bd DUP4
0x11be PUSH4 0xffffffff
0x11c3 AND
0x11c4 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x11e2 MUL
0x11e3 DUP2
0x11e4 MSTORE
0x11e5 PUSH1 0x4
0x11e7 ADD
0x11e8 DUP1
0x11e9 DUP4
0x11ea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11ff AND
0x1200 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1215 AND
0x1216 DUP2
0x1217 MSTORE
0x1218 PUSH1 0x20
0x121a ADD
0x121b DUP3
0x121c DUP2
0x121d MSTORE
0x121e PUSH1 0x20
0x1220 ADD
0x1221 SWAP3
0x1222 POP
0x1223 POP
0x1224 POP
0x1225 PUSH1 0x20
0x1227 PUSH1 0x40
0x1229 MLOAD
0x122a DUP1
0x122b DUP4
0x122c SUB
0x122d DUP2
0x122e PUSH1 0x0
0x1230 DUP8
0x1231 DUP1
0x1232 EXTCODESIZE
0x1233 ISZERO
0x1234 ISZERO
0x1235 PUSH2 0x123a
0x1238 JUMPI
---
0x1164: JUMPDEST 
0x1168: V1061 = 0x40
0x116a: V1062 = M[0x40]
0x116c: V1063 = M[V1062]
0x1172: V1064 = 0xffffffffffffffffffffffffffffffffffffffff
0x1187: V1065 = AND 0xffffffffffffffffffffffffffffffffffffffff V468
0x1188: V1066 = 0xa9059cbb
0x118d: V1067 = 0x0
0x118f: V1068 = 0x0
0x1192: V1069 = S[0x0]
0x1194: V1070 = 0x100
0x1197: V1071 = EXP 0x100 0x0
0x1199: V1072 = DIV V1069 0x1
0x119a: V1073 = 0xffffffffffffffffffffffffffffffffffffffff
0x11af: V1074 = AND 0xffffffffffffffffffffffffffffffffffffffff V1072
0x11b1: V1075 = 0x0
0x11b3: V1076 = 0x40
0x11b5: V1077 = M[0x40]
0x11b6: V1078 = 0x20
0x11b8: V1079 = ADD 0x20 V1077
0x11b9: M[V1079] = 0x0
0x11ba: V1080 = 0x40
0x11bc: V1081 = M[0x40]
0x11be: V1082 = 0xffffffff
0x11c3: V1083 = AND 0xffffffff 0xa9059cbb
0x11c4: V1084 = 0x100000000000000000000000000000000000000000000000000000000
0x11e2: V1085 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x11e4: M[V1081] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x11e5: V1086 = 0x4
0x11e7: V1087 = ADD 0x4 V1081
0x11ea: V1088 = 0xffffffffffffffffffffffffffffffffffffffff
0x11ff: V1089 = AND 0xffffffffffffffffffffffffffffffffffffffff V1074
0x1200: V1090 = 0xffffffffffffffffffffffffffffffffffffffff
0x1215: V1091 = AND 0xffffffffffffffffffffffffffffffffffffffff V1089
0x1217: M[V1087] = V1091
0x1218: V1092 = 0x20
0x121a: V1093 = ADD 0x20 V1087
0x121d: M[V1093] = V1063
0x121e: V1094 = 0x20
0x1220: V1095 = ADD 0x20 V1093
0x1225: V1096 = 0x20
0x1227: V1097 = 0x40
0x1229: V1098 = M[0x40]
0x122c: V1099 = SUB V1095 V1098
0x122e: V1100 = 0x0
0x1232: V1101 = EXTCODESIZE V1065
0x1233: V1102 = ISZERO V1101
0x1234: V1103 = ISZERO V1102
0x1235: V1104 = 0x123a
0x1238: JUMPI 0x123a V1103
---
Entry stack: [V10, 0x69c, V468, 0x0, V468, 0x0, V1023, 0x70a08231, V1044]
Stack pops: 5
Stack additions: [S4, V1063, V1065, 0xa9059cbb, V1095, 0x20, V1098, V1099, V1098, 0x0, V1065]
Exit stack: [V10, 0x69c, V468, 0x0, V468, V1063, V1065, 0xa9059cbb, V1095, 0x20, V1098, V1099, V1098, 0x0, V1065]

================================

Block 0x1239
[0x1239:0x1239]
---
Predecessors: [0x1164]
Successors: []
---
0x1239 INVALID
---
0x1239: INVALID 
---
Entry stack: [V10, 0x69c, V468, 0x0, V468, V1063, V1065, 0xa9059cbb, V1095, 0x20, V1098, V1099, V1098, 0x0, V1065]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x69c, V468, 0x0, V468, V1063, V1065, 0xa9059cbb, V1095, 0x20, V1098, V1099, V1098, 0x0, V1065]

================================

Block 0x123a
[0x123a:0x1245]
---
Predecessors: [0x1164]
Successors: [0x1246, 0x1247]
---
0x123a JUMPDEST
0x123b PUSH1 0x32
0x123d GAS
0x123e SUB
0x123f CALL
0x1240 ISZERO
0x1241 ISZERO
0x1242 PUSH2 0x1247
0x1245 JUMPI
---
0x123a: JUMPDEST 
0x123b: V1105 = 0x32
0x123d: V1106 = GAS
0x123e: V1107 = SUB V1106 0x32
0x123f: V1108 = CALL V1107 V1065 0x0 V1098 V1099 V1098 0x20
0x1240: V1109 = ISZERO V1108
0x1241: V1110 = ISZERO V1109
0x1242: V1111 = 0x1247
0x1245: JUMPI 0x1247 V1110
---
Entry stack: [V10, 0x69c, V468, 0x0, V468, V1063, V1065, 0xa9059cbb, V1095, 0x20, V1098, V1099, V1098, 0x0, V1065]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x69c, V468, 0x0, V468, V1063, V1065, 0xa9059cbb, V1095]

================================

Block 0x1246
[0x1246:0x1246]
---
Predecessors: [0x123a]
Successors: []
---
0x1246 INVALID
---
0x1246: INVALID 
---
Entry stack: [V10, 0x69c, V468, 0x0, V468, V1063, V1065, 0xa9059cbb, V1095]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x69c, V468, 0x0, V468, V1063, V1065, 0xa9059cbb, V1095]

================================

Block 0x1247
[0x1247:0x1253]
---
Predecessors: [0x123a]
Successors: [0x1254]
---
0x1247 JUMPDEST
0x1248 POP
0x1249 POP
0x124a POP
0x124b PUSH1 0x40
0x124d MLOAD
0x124e DUP1
0x124f MLOAD
0x1250 SWAP1
0x1251 POP
0x1252 SWAP3
0x1253 POP
---
0x1247: JUMPDEST 
0x124b: V1112 = 0x40
0x124d: V1113 = M[0x40]
0x124f: V1114 = M[V1113]
---
Entry stack: [V10, 0x69c, V468, 0x0, V468, V1063, V1065, 0xa9059cbb, V1095]
Stack pops: 6
Stack additions: [V1114, S4, S3]
Exit stack: [V10, 0x69c, V468, V1114, V468, V1063]

================================

Block 0x1254
[0x1254:0x125a]
---
Predecessors: [0x1247]
Successors: [0x69c]
---
0x1254 JUMPDEST
0x1255 POP
0x1256 POP
0x1257 SWAP2
0x1258 SWAP1
0x1259 POP
0x125a JUMP
---
0x1254: JUMPDEST 
0x125a: JUMP 0x69c
---
Entry stack: [V10, 0x69c, V468, V1114, V468, V1063]
Stack pops: 5
Stack additions: [S2]
Exit stack: [V10, V1114]

================================

Block 0x125b
[0x125b:0x126e]
---
Predecessors: [0x6b6, 0xd24]
Successors: [0x6be, 0xd2c]
---
0x125b JUMPDEST
0x125c PUSH1 0x20
0x125e PUSH1 0x40
0x1260 MLOAD
0x1261 SWAP1
0x1262 DUP2
0x1263 ADD
0x1264 PUSH1 0x40
0x1266 MSTORE
0x1267 DUP1
0x1268 PUSH1 0x0
0x126a DUP2
0x126b MSTORE
0x126c POP
0x126d SWAP1
0x126e JUMP
---
0x125b: JUMPDEST 
0x125c: V1115 = 0x20
0x125e: V1116 = 0x40
0x1260: V1117 = M[0x40]
0x1263: V1118 = ADD V1117 0x20
0x1264: V1119 = 0x40
0x1266: M[0x40] = V1118
0x1268: V1120 = 0x0
0x126b: M[V1117] = 0x0
0x126e: JUMP {0x6be, 0xd2c}
---
Entry stack: [V10, {0x271, 0x4bd}, {0x6be, 0xd2c}]
Stack pops: 1
Stack additions: [V1117]
Exit stack: [V10, {0x271, 0x4bd}, V1117]

================================

Block 0x126f
[0x126f:0x12b0]
---
Predecessors: []
Successors: []
---
0x126f STOP
0x1270 LOG1
0x1271 PUSH6 0x627a7a723058
0x1278 SHA3
0x1279 MISSING 0xa8
0x127a AND
0x127b MISSING 0xfb
0x127c MISSING 0xe5
0x127d NOT
0x127e PUSH16 0x3e4dc4cc11f2cdb3a88ef7915f862c17
0x128f SLT
0x1290 MISSING 0xd1
0x1291 PUSH31 0x11c04aa78f972f0029
---
0x126f: STOP 
0x1270: LOG S0 S1 S2
0x1271: V1121 = 0x627a7a723058
0x1278: V1122 = SHA3 0x627a7a723058 S3
0x1279: MISSING 0xa8
0x127a: V1123 = AND S0 S1
0x127b: MISSING 0xfb
0x127c: MISSING 0xe5
0x127d: V1124 = NOT S0
0x127e: V1125 = 0x3e4dc4cc11f2cdb3a88ef7915f862c17
0x128f: V1126 = SLT 0x3e4dc4cc11f2cdb3a88ef7915f862c17 V1124
0x1290: MISSING 0xd1
0x1291: V1127 = 0x11c04aa78f972f0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V1122, V1123, V1126, 0x11c04aa78f972f0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x261
Exit block: 0x538
Body: 0x261, 0x268, 0x269, 0x271, 0x29c, 0x2aa, 0x2c0, 0x2d3, 0x2ec, 0x4bd, 0x4e8, 0x4f6, 0x50c, 0x51f, 0x538, 0x6b6, 0x6be, 0x6f8

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x2fa
Exit block: 0x337
Body: 0x2fa, 0x301, 0x302, 0x337, 0x6fb, 0x709, 0x78b, 0x791, 0x799, 0x884

Function 2:
Public function signature: 0xdcf4b8f
Entry block: 0x351
Exit block: 0x361
Body: 0x351, 0x358, 0x359, 0x361, 0x88a

Function 3:
Public function signature: 0x18160ddd
Entry block: 0x377
Exit block: 0x387
Body: 0x377, 0x37e, 0x37f, 0x387, 0x890

Function 4:
Public function signature: 0x23b872dd
Entry block: 0x39d
Exit block: 0x3f9
Body: 0x39d, 0x3a4, 0x3a5, 0x3f9, 0x896, 0x8b0, 0x8b5, 0x8bf, 0x8c7, 0xa21, 0xa23, 0xa2a, 0xa2d, 0xa33, 0xbc4, 0xbce

Function 5:
Public function signature: 0x313ce567
Entry block: 0x413
Exit block: 0x423
Body: 0x413, 0x41a, 0x41b, 0x423, 0xbda, 0xbe1

Function 6:
Public function signature: 0x64acdb77
Entry block: 0x43f
Exit block: 0x44f
Body: 0x43f, 0x446, 0x447, 0x44f, 0xbe4, 0xc3c, 0xc41, 0xc5d

Function 7:
Public function signature: 0x70a08231
Entry block: 0x451
Exit block: 0x485
Body: 0x451, 0x458, 0x459, 0x485, 0xc5f, 0xca4

Function 8:
Public function signature: 0x8f580996
Entry block: 0x49b
Exit block: 0x4ab
Body: 0x49b, 0x4a2, 0x4a3, 0x4ab, 0xca9, 0xd01, 0xd06, 0xd22

Function 9:
Public function signature: 0x95d89b41
Entry block: 0x4ad
Exit block: 0x2ec
Body: 0x271, 0x29c, 0x2aa, 0x2c0, 0x2d3, 0x2ec, 0x4ad, 0x4b4, 0x4b5, 0x4bd, 0x4e8, 0x4f6, 0x50c, 0x51f, 0x538, 0xd24, 0xd2c, 0xd66

Function 10:
Public function signature: 0xa9059cbb
Entry block: 0x546
Exit block: 0x583
Body: 0x546, 0x54d, 0x54e, 0x583, 0xd69, 0xd7f, 0xd84, 0xd8e, 0xd96, 0xe6b, 0xe6e, 0xe74, 0xf7b, 0xf85

Function 11:
Public function signature: 0xc59d4847
Entry block: 0x59d
Exit block: 0x5ad
Body: 0x59d, 0x5a4, 0x5a5, 0x5ad, 0xf8e, 0xfb1

Function 12:
Public function signature: 0xda040c0f
Entry block: 0x5d5
Exit block: 0x5e5
Body: 0x5d5, 0x5dc, 0x5dd, 0x5e5, 0xfb6

Function 13:
Public function signature: 0xdd62ed3e
Entry block: 0x5ff
Exit block: 0x652
Body: 0x5ff, 0x606, 0x607, 0x652, 0xfc9, 0x104b

Function 14:
Public function signature: 0xe58fc54c
Entry block: 0x668
Exit block: 0x69c
Body: 0x668, 0x66f, 0x670, 0x69c, 0x1051, 0x10af, 0x10b4, 0x1156, 0x1157, 0x1163, 0x1164, 0x1239, 0x123a, 0x1246, 0x1247, 0x1254

Function 15:
Public fallback function
Entry block: 0xd9
Exit block: 0x25f
Body: 0xd9, 0xdd, 0xf6, 0xfb, 0x105, 0x109, 0x16a, 0x16b, 0x192, 0x199, 0x25c, 0x25f

