Block 0x0
[0x0:0x17]
---
Predecessors: []
Successors: [0x18, 0x191]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 DUP1
0x8 PUSH1 0x0
0xa DUP1
0xb PUSH1 0x0
0xd DUP1
0xe PUSH1 0x45
0x10 CALLVALUE
0x11 LT
0x12 ISZERO
0x13 ISZERO
0x14 PUSH2 0x191
0x17 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x8: V3 = 0x0
0xb: V4 = 0x0
0xe: V5 = 0x45
0x10: V6 = CALLVALUE
0x11: V7 = LT V6 0x45
0x12: V8 = ISZERO V7
0x13: V9 = ISZERO V8
0x14: V10 = 0x191
0x17: JUMPI 0x191 V9
---
Entry stack: []
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x18
[0x18:0x58]
---
Predecessors: [0x0]
Successors: [0x59, 0x5d]
---
0x18 PUSH1 0x45
0x1a CALLVALUE
0x1b SUB
0x1c SWAP6
0x1d POP
0x1e CALLER
0x1f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x34 AND
0x35 PUSH2 0x8fc
0x38 DUP8
0x39 SWAP1
0x3a DUP2
0x3b ISZERO
0x3c MUL
0x3d SWAP1
0x3e PUSH1 0x40
0x40 MLOAD
0x41 PUSH1 0x0
0x43 PUSH1 0x40
0x45 MLOAD
0x46 DUP1
0x47 DUP4
0x48 SUB
0x49 DUP2
0x4a DUP6
0x4b DUP9
0x4c DUP9
0x4d CALL
0x4e SWAP4
0x4f POP
0x50 POP
0x51 POP
0x52 POP
0x53 ISZERO
0x54 ISZERO
0x55 PUSH2 0x5d
0x58 JUMPI
---
0x18: V11 = 0x45
0x1a: V12 = CALLVALUE
0x1b: V13 = SUB V12 0x45
0x1e: V14 = CALLER
0x1f: V15 = 0xffffffffffffffffffffffffffffffffffffffff
0x34: V16 = AND 0xffffffffffffffffffffffffffffffffffffffff V14
0x35: V17 = 0x8fc
0x3b: V18 = ISZERO V13
0x3c: V19 = MUL V18 0x8fc
0x3e: V20 = 0x40
0x40: V21 = M[0x40]
0x41: V22 = 0x0
0x43: V23 = 0x40
0x45: V24 = M[0x40]
0x48: V25 = SUB V21 V24
0x4d: V26 = CALL V19 V16 V13 V24 V25 V24 0x0
0x53: V27 = ISZERO V26
0x54: V28 = ISZERO V27
0x55: V29 = 0x5d
0x58: JUMPI 0x5d V28
---
Entry stack: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [V13, S4, S3, S2, S1, S0]
Exit stack: [V13, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x59
[0x59:0x5c]
---
Predecessors: [0x18]
Successors: []
---
0x59 PUSH1 0x0
0x5b DUP1
0x5c REVERT
---
0x59: V30 = 0x0
0x5c: REVERT 0x0 0x0
---
Entry stack: [V13, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x5d
[0x5d:0xac]
---
Predecessors: [0x18]
Successors: [0xad, 0xae]
---
0x5d JUMPDEST
0x5e PUSH1 0x1
0x60 NUMBER
0x61 SUB
0x62 BLOCKHASH
0x63 PUSH1 0x1
0x65 SWAP1
0x66 DIV
0x67 SWAP5
0x68 POP
0x69 TIMESTAMP
0x6a SWAP4
0x6b POP
0x6c COINBASE
0x6d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x82 AND
0x83 SWAP3
0x84 POP
0x85 PUSH1 0x1
0x87 SLOAD
0x88 DUP4
0x89 DUP6
0x8a DUP8
0x8b ADD
0x8c ADD
0x8d PUSH1 0x40
0x8f MLOAD
0x90 DUP1
0x91 DUP3
0x92 DUP2
0x93 MSTORE
0x94 PUSH1 0x20
0x96 ADD
0x97 SWAP2
0x98 POP
0x99 POP
0x9a PUSH1 0x40
0x9c MLOAD
0x9d DUP1
0x9e SWAP2
0x9f SUB
0xa0 SWAP1
0xa1 SHA3
0xa2 PUSH1 0x1
0xa4 SWAP1
0xa5 DIV
0xa6 DUP2
0xa7 ISZERO
0xa8 ISZERO
0xa9 PUSH2 0xae
0xac JUMPI
---
0x5d: JUMPDEST 
0x5e: V31 = 0x1
0x60: V32 = NUMBER
0x61: V33 = SUB V32 0x1
0x62: V34 = BLOCKHASH V33
0x63: V35 = 0x1
0x66: V36 = DIV V34 0x1
0x69: V37 = TIMESTAMP
0x6c: V38 = COINBASE
0x6d: V39 = 0xffffffffffffffffffffffffffffffffffffffff
0x82: V40 = AND 0xffffffffffffffffffffffffffffffffffffffff V38
0x85: V41 = 0x1
0x87: V42 = S[0x1]
0x8b: V43 = ADD V36 V37
0x8c: V44 = ADD V43 V40
0x8d: V45 = 0x40
0x8f: V46 = M[0x40]
0x93: M[V46] = V44
0x94: V47 = 0x20
0x96: V48 = ADD 0x20 V46
0x9a: V49 = 0x40
0x9c: V50 = M[0x40]
0x9f: V51 = SUB V48 V50
0xa1: V52 = SHA3 V50 V51
0xa2: V53 = 0x1
0xa5: V54 = DIV V52 0x1
0xa7: V55 = ISZERO V42
0xa8: V56 = ISZERO V55
0xa9: V57 = 0xae
0xac: JUMPI 0xae V56
---
Entry stack: [V13, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [V36, V37, V40, S1, S0, V42, V54]
Exit stack: [V13, V36, V37, V40, 0x0, 0x0, V42, V54]

================================

Block 0xad
[0xad:0xad]
---
Predecessors: [0x5d]
Successors: []
---
0xad INVALID
---
0xad: INVALID 
---
Entry stack: [V13, V36, V37, V40, 0x0, 0x0, V42, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V36, V37, V40, 0x0, 0x0, V42, V54]

================================

Block 0xae
[0xae:0x122]
---
Predecessors: [0x5d]
Successors: [0x123, 0x127]
---
0xae JUMPDEST
0xaf MOD
0xb0 SWAP2
0xb1 POP
0xb2 PUSH1 0x0
0xb4 DUP1
0xb5 DUP4
0xb6 DUP2
0xb7 MSTORE
0xb8 PUSH1 0x20
0xba ADD
0xbb SWAP1
0xbc DUP2
0xbd MSTORE
0xbe PUSH1 0x20
0xc0 ADD
0xc1 PUSH1 0x0
0xc3 SHA3
0xc4 PUSH1 0x0
0xc6 SWAP1
0xc7 SLOAD
0xc8 SWAP1
0xc9 PUSH2 0x100
0xcc EXP
0xcd SWAP1
0xce DIV
0xcf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe4 AND
0xe5 SWAP1
0xe6 POP
0xe7 DUP1
0xe8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfd AND
0xfe PUSH2 0x8fc
0x101 PUSH1 0x45
0x103 SWAP1
0x104 DUP2
0x105 ISZERO
0x106 MUL
0x107 SWAP1
0x108 PUSH1 0x40
0x10a MLOAD
0x10b PUSH1 0x0
0x10d PUSH1 0x40
0x10f MLOAD
0x110 DUP1
0x111 DUP4
0x112 SUB
0x113 DUP2
0x114 DUP6
0x115 DUP9
0x116 DUP9
0x117 CALL
0x118 SWAP4
0x119 POP
0x11a POP
0x11b POP
0x11c POP
0x11d ISZERO
0x11e ISZERO
0x11f PUSH2 0x127
0x122 JUMPI
---
0xae: JUMPDEST 
0xaf: V58 = MOD V54 V42
0xb2: V59 = 0x0
0xb7: M[0x0] = V58
0xb8: V60 = 0x20
0xba: V61 = ADD 0x20 0x0
0xbd: M[0x20] = 0x0
0xbe: V62 = 0x20
0xc0: V63 = ADD 0x20 0x20
0xc1: V64 = 0x0
0xc3: V65 = SHA3 0x0 0x40
0xc4: V66 = 0x0
0xc7: V67 = S[V65]
0xc9: V68 = 0x100
0xcc: V69 = EXP 0x100 0x0
0xce: V70 = DIV V67 0x1
0xcf: V71 = 0xffffffffffffffffffffffffffffffffffffffff
0xe4: V72 = AND 0xffffffffffffffffffffffffffffffffffffffff V70
0xe8: V73 = 0xffffffffffffffffffffffffffffffffffffffff
0xfd: V74 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0xfe: V75 = 0x8fc
0x101: V76 = 0x45
0x105: V77 = ISZERO 0x45
0x106: V78 = MUL 0x0 0x8fc
0x108: V79 = 0x40
0x10a: V80 = M[0x40]
0x10b: V81 = 0x0
0x10d: V82 = 0x40
0x10f: V83 = M[0x40]
0x112: V84 = SUB V80 V83
0x117: V85 = CALL 0x0 V74 0x45 V83 V84 V83 0x0
0x11d: V86 = ISZERO V85
0x11e: V87 = ISZERO V86
0x11f: V88 = 0x127
0x122: JUMPI 0x127 V87
---
Entry stack: [V13, V36, V37, V40, 0x0, 0x0, V42, V54]
Stack pops: 4
Stack additions: [V58, V72]
Exit stack: [V13, V36, V37, V40, V58, V72]

================================

Block 0x123
[0x123:0x126]
---
Predecessors: [0xae]
Successors: []
---
0x123 PUSH1 0x0
0x125 DUP1
0x126 REVERT
---
0x123: V89 = 0x0
0x126: REVERT 0x0 0x0
---
Entry stack: [V13, V36, V37, V40, V58, V72]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V36, V37, V40, V58, V72]

================================

Block 0x127
[0x127:0x190]
---
Predecessors: [0xae]
Successors: [0x196]
---
0x127 JUMPDEST
0x128 CALLER
0x129 PUSH1 0x0
0x12b DUP1
0x12c PUSH1 0x1
0x12e SLOAD
0x12f DUP2
0x130 MSTORE
0x131 PUSH1 0x20
0x133 ADD
0x134 SWAP1
0x135 DUP2
0x136 MSTORE
0x137 PUSH1 0x20
0x139 ADD
0x13a PUSH1 0x0
0x13c SHA3
0x13d PUSH1 0x0
0x13f PUSH2 0x100
0x142 EXP
0x143 DUP2
0x144 SLOAD
0x145 DUP2
0x146 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15b MUL
0x15c NOT
0x15d AND
0x15e SWAP1
0x15f DUP4
0x160 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x175 AND
0x176 MUL
0x177 OR
0x178 SWAP1
0x179 SSTORE
0x17a POP
0x17b PUSH1 0x1
0x17d PUSH1 0x0
0x17f DUP2
0x180 SLOAD
0x181 DUP1
0x182 SWAP3
0x183 SWAP2
0x184 SWAP1
0x185 PUSH1 0x1
0x187 ADD
0x188 SWAP2
0x189 SWAP1
0x18a POP
0x18b SSTORE
0x18c POP
0x18d PUSH2 0x196
0x190 JUMP
---
0x127: JUMPDEST 
0x128: V90 = CALLER
0x129: V91 = 0x0
0x12c: V92 = 0x1
0x12e: V93 = S[0x1]
0x130: M[0x0] = V93
0x131: V94 = 0x20
0x133: V95 = ADD 0x20 0x0
0x136: M[0x20] = 0x0
0x137: V96 = 0x20
0x139: V97 = ADD 0x20 0x20
0x13a: V98 = 0x0
0x13c: V99 = SHA3 0x0 0x40
0x13d: V100 = 0x0
0x13f: V101 = 0x100
0x142: V102 = EXP 0x100 0x0
0x144: V103 = S[V99]
0x146: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x15b: V105 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x15c: V106 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x15d: V107 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V103
0x160: V108 = 0xffffffffffffffffffffffffffffffffffffffff
0x175: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff V90
0x176: V110 = MUL V109 0x1
0x177: V111 = OR V110 V107
0x179: S[V99] = V111
0x17b: V112 = 0x1
0x17d: V113 = 0x0
0x180: V114 = S[0x1]
0x185: V115 = 0x1
0x187: V116 = ADD 0x1 V114
0x18b: S[0x1] = V116
0x18d: V117 = 0x196
0x190: JUMP 0x196
---
Entry stack: [V13, V36, V37, V40, V58, V72]
Stack pops: 0
Stack additions: []
Exit stack: [V13, V36, V37, V40, V58, V72]

================================

Block 0x191
[0x191:0x195]
---
Predecessors: [0x0]
Successors: []
---
0x191 JUMPDEST
0x192 PUSH1 0x0
0x194 DUP1
0x195 REVERT
---
0x191: JUMPDEST 
0x192: V118 = 0x0
0x195: REVERT 0x0 0x0
---
Entry stack: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x196
[0x196:0x19d]
---
Predecessors: [0x127]
Successors: []
---
0x196 JUMPDEST
0x197 POP
0x198 POP
0x199 POP
0x19a POP
0x19b POP
0x19c POP
0x19d STOP
---
0x196: JUMPDEST 
0x19d: STOP 
---
Entry stack: [V13, V36, V37, V40, V58, V72]
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0x19e
[0x19e:0x1c9]
---
Predecessors: []
Successors: []
---
0x19e STOP
0x19f LOG1
0x1a0 PUSH6 0x627a7a723058
0x1a7 SHA3
0x1a8 MISSING 0xdb
0x1a9 PUSH10 0x5ca3cc92f59ecf5d2623
0x1b4 MSIZE
0x1b5 GASLIMIT
0x1b6 AND
0x1b7 PUSH1 0x6a
0x1b9 MISSING 0x29
0x1ba MISSING 0xbd
0x1bb PUSH6 0x1c856f11f499
0x1c2 MISSING 0x1e
0x1c3 MISSING 0xe6
0x1c4 GAS
0x1c5 PUSH2 0xb4c9
0x1c8 STOP
0x1c9 MISSING 0x29
---
0x19e: STOP 
0x19f: LOG S0 S1 S2
0x1a0: V119 = 0x627a7a723058
0x1a7: V120 = SHA3 0x627a7a723058 S3
0x1a8: MISSING 0xdb
0x1a9: V121 = 0x5ca3cc92f59ecf5d2623
0x1b4: V122 = MSIZE
0x1b5: V123 = GASLIMIT
0x1b6: V124 = AND V123 V122
0x1b7: V125 = 0x6a
0x1b9: MISSING 0x29
0x1ba: MISSING 0xbd
0x1bb: V126 = 0x1c856f11f499
0x1c2: MISSING 0x1e
0x1c3: MISSING 0xe6
0x1c4: V127 = GAS
0x1c5: V128 = 0xb4c9
0x1c8: STOP 
0x1c9: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V120, 0x6a, V124, 0x5ca3cc92f59ecf5d2623, 0x1c856f11f499, 0xb4c9, V127]
Exit stack: []

================================


