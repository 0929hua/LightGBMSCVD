Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6d]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6d
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6d
0xc: JUMPI 0x6d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x6f]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x3da55aba
0x3c EQ
0x3d PUSH2 0x6f
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x3da55aba
0x3c: V13 = EQ 0x3da55aba V11
0x3d: V14 = 0x6f
0x40: JUMPI 0x6f V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xb2]
---
0x41 DUP1
0x42 PUSH4 0x42e9c6ce
0x47 EQ
0x48 PUSH2 0xb2
0x4b JUMPI
---
0x42: V15 = 0x42e9c6ce
0x47: V16 = EQ 0x42e9c6ce V11
0x48: V17 = 0xb2
0x4b: JUMPI 0xb2 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xf5]
---
0x4c DUP1
0x4d PUSH4 0x9329066c
0x52 EQ
0x53 PUSH2 0xf5
0x56 JUMPI
---
0x4d: V18 = 0x9329066c
0x52: V19 = EQ 0x9329066c V11
0x53: V20 = 0xf5
0x56: JUMPI 0xf5 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x120]
---
0x57 DUP1
0x58 PUSH4 0xb36c973e
0x5d EQ
0x5e PUSH2 0x120
0x61 JUMPI
---
0x58: V21 = 0xb36c973e
0x5d: V22 = EQ 0xb36c973e V11
0x5e: V23 = 0x120
0x61: JUMPI 0x120 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x163]
---
0x62 DUP1
0x63 PUSH4 0xc0ee0b8a
0x68 EQ
0x69 PUSH2 0x163
0x6c JUMPI
---
0x63: V24 = 0xc0ee0b8a
0x68: V25 = EQ 0xc0ee0b8a V11
0x69: V26 = 0x163
0x6c: JUMPI 0x163 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x6e]
---
Predecessors: [0x0, 0x62]
Successors: []
---
0x6d JUMPDEST
0x6e STOP
---
0x6d: JUMPDEST 
0x6e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6f
[0x6f:0x76]
---
Predecessors: [0xd]
Successors: [0x77, 0x7b]
---
0x6f JUMPDEST
0x70 CALLVALUE
0x71 DUP1
0x72 ISZERO
0x73 PUSH2 0x7b
0x76 JUMPI
---
0x6f: JUMPDEST 
0x70: V27 = CALLVALUE
0x72: V28 = ISZERO V27
0x73: V29 = 0x7b
0x76: JUMPI 0x7b V28
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V27]
Exit stack: [V11, V27]

================================

Block 0x77
[0x77:0x7a]
---
Predecessors: [0x6f]
Successors: []
---
0x77 PUSH1 0x0
0x79 DUP1
0x7a REVERT
---
0x77: V30 = 0x0
0x7a: REVERT 0x0 0x0
---
Entry stack: [V11, V27]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V27]

================================

Block 0x7b
[0x7b:0xaf]
---
Predecessors: [0x6f]
Successors: [0x20e]
---
0x7b JUMPDEST
0x7c POP
0x7d PUSH2 0xb0
0x80 PUSH1 0x4
0x82 DUP1
0x83 CALLDATASIZE
0x84 SUB
0x85 DUP2
0x86 ADD
0x87 SWAP1
0x88 DUP1
0x89 DUP1
0x8a CALLDATALOAD
0x8b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa0 AND
0xa1 SWAP1
0xa2 PUSH1 0x20
0xa4 ADD
0xa5 SWAP1
0xa6 SWAP3
0xa7 SWAP2
0xa8 SWAP1
0xa9 POP
0xaa POP
0xab POP
0xac PUSH2 0x20e
0xaf JUMP
---
0x7b: JUMPDEST 
0x7d: V31 = 0xb0
0x80: V32 = 0x4
0x83: V33 = CALLDATASIZE
0x84: V34 = SUB V33 0x4
0x86: V35 = ADD 0x4 V34
0x8a: V36 = CALLDATALOAD 0x4
0x8b: V37 = 0xffffffffffffffffffffffffffffffffffffffff
0xa0: V38 = AND 0xffffffffffffffffffffffffffffffffffffffff V36
0xa2: V39 = 0x20
0xa4: V40 = ADD 0x20 0x4
0xac: V41 = 0x20e
0xaf: JUMP 0x20e
---
Entry stack: [V11, V27]
Stack pops: 1
Stack additions: [0xb0, V38]
Exit stack: [V11, 0xb0, V38]

================================

Block 0xb0
[0xb0:0xb1]
---
Predecessors: [0x269]
Successors: []
---
0xb0 JUMPDEST
0xb1 STOP
---
0xb0: JUMPDEST 
0xb1: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb2
[0xb2:0xb9]
---
Predecessors: [0x41]
Successors: [0xba, 0xbe]
---
0xb2 JUMPDEST
0xb3 CALLVALUE
0xb4 DUP1
0xb5 ISZERO
0xb6 PUSH2 0xbe
0xb9 JUMPI
---
0xb2: JUMPDEST 
0xb3: V42 = CALLVALUE
0xb5: V43 = ISZERO V42
0xb6: V44 = 0xbe
0xb9: JUMPI 0xbe V43
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V42]
Exit stack: [V11, V42]

================================

Block 0xba
[0xba:0xbd]
---
Predecessors: [0xb2]
Successors: []
---
0xba PUSH1 0x0
0xbc DUP1
0xbd REVERT
---
0xba: V45 = 0x0
0xbd: REVERT 0x0 0x0
---
Entry stack: [V11, V42]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V42]

================================

Block 0xbe
[0xbe:0xf2]
---
Predecessors: [0xb2]
Successors: [0x2ad]
---
0xbe JUMPDEST
0xbf POP
0xc0 PUSH2 0xf3
0xc3 PUSH1 0x4
0xc5 DUP1
0xc6 CALLDATASIZE
0xc7 SUB
0xc8 DUP2
0xc9 ADD
0xca SWAP1
0xcb DUP1
0xcc DUP1
0xcd CALLDATALOAD
0xce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe3 AND
0xe4 SWAP1
0xe5 PUSH1 0x20
0xe7 ADD
0xe8 SWAP1
0xe9 SWAP3
0xea SWAP2
0xeb SWAP1
0xec POP
0xed POP
0xee POP
0xef PUSH2 0x2ad
0xf2 JUMP
---
0xbe: JUMPDEST 
0xc0: V46 = 0xf3
0xc3: V47 = 0x4
0xc6: V48 = CALLDATASIZE
0xc7: V49 = SUB V48 0x4
0xc9: V50 = ADD 0x4 V49
0xcd: V51 = CALLDATALOAD 0x4
0xce: V52 = 0xffffffffffffffffffffffffffffffffffffffff
0xe3: V53 = AND 0xffffffffffffffffffffffffffffffffffffffff V51
0xe5: V54 = 0x20
0xe7: V55 = ADD 0x20 0x4
0xef: V56 = 0x2ad
0xf2: JUMP 0x2ad
---
Entry stack: [V11, V42]
Stack pops: 1
Stack additions: [0xf3, V53]
Exit stack: [V11, 0xf3, V53]

================================

Block 0xf3
[0xf3:0xf4]
---
Predecessors: [0x4f3]
Successors: []
---
0xf3 JUMPDEST
0xf4 STOP
---
0xf3: JUMPDEST 
0xf4: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf5
[0xf5:0xfc]
---
Predecessors: [0x4c]
Successors: [0xfd, 0x101]
---
0xf5 JUMPDEST
0xf6 CALLVALUE
0xf7 DUP1
0xf8 ISZERO
0xf9 PUSH2 0x101
0xfc JUMPI
---
0xf5: JUMPDEST 
0xf6: V57 = CALLVALUE
0xf8: V58 = ISZERO V57
0xf9: V59 = 0x101
0xfc: JUMPI 0x101 V58
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V57]
Exit stack: [V11, V57]

================================

Block 0xfd
[0xfd:0x100]
---
Predecessors: [0xf5]
Successors: []
---
0xfd PUSH1 0x0
0xff DUP1
0x100 REVERT
---
0xfd: V60 = 0x0
0x100: REVERT 0x0 0x0
---
Entry stack: [V11, V57]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V57]

================================

Block 0x101
[0x101:0x109]
---
Predecessors: [0xf5]
Successors: [0x509]
---
0x101 JUMPDEST
0x102 POP
0x103 PUSH2 0x10a
0x106 PUSH2 0x509
0x109 JUMP
---
0x101: JUMPDEST 
0x103: V61 = 0x10a
0x106: V62 = 0x509
0x109: JUMP 0x509
---
Entry stack: [V11, V57]
Stack pops: 1
Stack additions: [0x10a]
Exit stack: [V11, 0x10a]

================================

Block 0x10a
[0x10a:0x11f]
---
Predecessors: [0x60d]
Successors: []
---
0x10a JUMPDEST
0x10b PUSH1 0x40
0x10d MLOAD
0x10e DUP1
0x10f DUP3
0x110 DUP2
0x111 MSTORE
0x112 PUSH1 0x20
0x114 ADD
0x115 SWAP2
0x116 POP
0x117 POP
0x118 PUSH1 0x40
0x11a MLOAD
0x11b DUP1
0x11c SWAP2
0x11d SUB
0x11e SWAP1
0x11f RETURN
---
0x10a: JUMPDEST 
0x10b: V63 = 0x40
0x10d: V64 = M[0x40]
0x111: M[V64] = V359
0x112: V65 = 0x20
0x114: V66 = ADD 0x20 V64
0x118: V67 = 0x40
0x11a: V68 = M[0x40]
0x11d: V69 = SUB V66 V68
0x11f: RETURN V68 V69
---
Entry stack: [V11, V359]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x120
[0x120:0x127]
---
Predecessors: [0x57]
Successors: [0x128, 0x12c]
---
0x120 JUMPDEST
0x121 CALLVALUE
0x122 DUP1
0x123 ISZERO
0x124 PUSH2 0x12c
0x127 JUMPI
---
0x120: JUMPDEST 
0x121: V70 = CALLVALUE
0x123: V71 = ISZERO V70
0x124: V72 = 0x12c
0x127: JUMPI 0x12c V71
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V70]
Exit stack: [V11, V70]

================================

Block 0x128
[0x128:0x12b]
---
Predecessors: [0x120]
Successors: []
---
0x128 PUSH1 0x0
0x12a DUP1
0x12b REVERT
---
0x128: V73 = 0x0
0x12b: REVERT 0x0 0x0
---
Entry stack: [V11, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V70]

================================

Block 0x12c
[0x12c:0x160]
---
Predecessors: [0x120]
Successors: [0x613]
---
0x12c JUMPDEST
0x12d POP
0x12e PUSH2 0x161
0x131 PUSH1 0x4
0x133 DUP1
0x134 CALLDATASIZE
0x135 SUB
0x136 DUP2
0x137 ADD
0x138 SWAP1
0x139 DUP1
0x13a DUP1
0x13b CALLDATALOAD
0x13c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x151 AND
0x152 SWAP1
0x153 PUSH1 0x20
0x155 ADD
0x156 SWAP1
0x157 SWAP3
0x158 SWAP2
0x159 SWAP1
0x15a POP
0x15b POP
0x15c POP
0x15d PUSH2 0x613
0x160 JUMP
---
0x12c: JUMPDEST 
0x12e: V74 = 0x161
0x131: V75 = 0x4
0x134: V76 = CALLDATASIZE
0x135: V77 = SUB V76 0x4
0x137: V78 = ADD 0x4 V77
0x13b: V79 = CALLDATALOAD 0x4
0x13c: V80 = 0xffffffffffffffffffffffffffffffffffffffff
0x151: V81 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x153: V82 = 0x20
0x155: V83 = ADD 0x20 0x4
0x15d: V84 = 0x613
0x160: JUMP 0x613
---
Entry stack: [V11, V70]
Stack pops: 1
Stack additions: [0x161, V81]
Exit stack: [V11, 0x161, V81]

================================

Block 0x161
[0x161:0x162]
---
Predecessors: [0x8d1]
Successors: []
---
0x161 JUMPDEST
0x162 STOP
---
0x161: JUMPDEST 
0x162: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x163
[0x163:0x16a]
---
Predecessors: [0x62]
Successors: [0x16b, 0x16f]
---
0x163 JUMPDEST
0x164 CALLVALUE
0x165 DUP1
0x166 ISZERO
0x167 PUSH2 0x16f
0x16a JUMPI
---
0x163: JUMPDEST 
0x164: V85 = CALLVALUE
0x166: V86 = ISZERO V85
0x167: V87 = 0x16f
0x16a: JUMPI 0x16f V86
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V85]
Exit stack: [V11, V85]

================================

Block 0x16b
[0x16b:0x16e]
---
Predecessors: [0x163]
Successors: []
---
0x16b PUSH1 0x0
0x16d DUP1
0x16e REVERT
---
0x16b: V88 = 0x0
0x16e: REVERT 0x0 0x0
---
Entry stack: [V11, V85]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V85]

================================

Block 0x16f
[0x16f:0x1f3]
---
Predecessors: [0x163]
Successors: [0x929]
---
0x16f JUMPDEST
0x170 POP
0x171 PUSH2 0x1f4
0x174 PUSH1 0x4
0x176 DUP1
0x177 CALLDATASIZE
0x178 SUB
0x179 DUP2
0x17a ADD
0x17b SWAP1
0x17c DUP1
0x17d DUP1
0x17e CALLDATALOAD
0x17f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x194 AND
0x195 SWAP1
0x196 PUSH1 0x20
0x198 ADD
0x199 SWAP1
0x19a SWAP3
0x19b SWAP2
0x19c SWAP1
0x19d DUP1
0x19e CALLDATALOAD
0x19f SWAP1
0x1a0 PUSH1 0x20
0x1a2 ADD
0x1a3 SWAP1
0x1a4 SWAP3
0x1a5 SWAP2
0x1a6 SWAP1
0x1a7 DUP1
0x1a8 CALLDATALOAD
0x1a9 SWAP1
0x1aa PUSH1 0x20
0x1ac ADD
0x1ad SWAP1
0x1ae DUP3
0x1af ADD
0x1b0 DUP1
0x1b1 CALLDATALOAD
0x1b2 SWAP1
0x1b3 PUSH1 0x20
0x1b5 ADD
0x1b6 SWAP1
0x1b7 DUP1
0x1b8 DUP1
0x1b9 PUSH1 0x1f
0x1bb ADD
0x1bc PUSH1 0x20
0x1be DUP1
0x1bf SWAP2
0x1c0 DIV
0x1c1 MUL
0x1c2 PUSH1 0x20
0x1c4 ADD
0x1c5 PUSH1 0x40
0x1c7 MLOAD
0x1c8 SWAP1
0x1c9 DUP2
0x1ca ADD
0x1cb PUSH1 0x40
0x1cd MSTORE
0x1ce DUP1
0x1cf SWAP4
0x1d0 SWAP3
0x1d1 SWAP2
0x1d2 SWAP1
0x1d3 DUP2
0x1d4 DUP2
0x1d5 MSTORE
0x1d6 PUSH1 0x20
0x1d8 ADD
0x1d9 DUP4
0x1da DUP4
0x1db DUP1
0x1dc DUP3
0x1dd DUP5
0x1de CALLDATACOPY
0x1df DUP3
0x1e0 ADD
0x1e1 SWAP2
0x1e2 POP
0x1e3 POP
0x1e4 POP
0x1e5 POP
0x1e6 POP
0x1e7 POP
0x1e8 SWAP2
0x1e9 SWAP3
0x1ea SWAP2
0x1eb SWAP3
0x1ec SWAP1
0x1ed POP
0x1ee POP
0x1ef POP
0x1f0 PUSH2 0x929
0x1f3 JUMP
---
0x16f: JUMPDEST 
0x171: V89 = 0x1f4
0x174: V90 = 0x4
0x177: V91 = CALLDATASIZE
0x178: V92 = SUB V91 0x4
0x17a: V93 = ADD 0x4 V92
0x17e: V94 = CALLDATALOAD 0x4
0x17f: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x194: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x196: V97 = 0x20
0x198: V98 = ADD 0x20 0x4
0x19e: V99 = CALLDATALOAD 0x24
0x1a0: V100 = 0x20
0x1a2: V101 = ADD 0x20 0x24
0x1a8: V102 = CALLDATALOAD 0x44
0x1aa: V103 = 0x20
0x1ac: V104 = ADD 0x20 0x44
0x1af: V105 = ADD 0x4 V102
0x1b1: V106 = CALLDATALOAD V105
0x1b3: V107 = 0x20
0x1b5: V108 = ADD 0x20 V105
0x1b9: V109 = 0x1f
0x1bb: V110 = ADD 0x1f V106
0x1bc: V111 = 0x20
0x1c0: V112 = DIV V110 0x20
0x1c1: V113 = MUL V112 0x20
0x1c2: V114 = 0x20
0x1c4: V115 = ADD 0x20 V113
0x1c5: V116 = 0x40
0x1c7: V117 = M[0x40]
0x1ca: V118 = ADD V117 V115
0x1cb: V119 = 0x40
0x1cd: M[0x40] = V118
0x1d5: M[V117] = V106
0x1d6: V120 = 0x20
0x1d8: V121 = ADD 0x20 V117
0x1de: CALLDATACOPY V121 V108 V106
0x1e0: V122 = ADD V121 V106
0x1f0: V123 = 0x929
0x1f3: JUMP 0x929
---
Entry stack: [V11, V85]
Stack pops: 1
Stack additions: [0x1f4, V96, V99, V117]
Exit stack: [V11, 0x1f4, V96, V99, V117]

================================

Block 0x1f4
[0x1f4:0x20d]
---
Predecessors: [0x929]
Successors: []
---
0x1f4 JUMPDEST
0x1f5 PUSH1 0x40
0x1f7 MLOAD
0x1f8 DUP1
0x1f9 DUP3
0x1fa ISZERO
0x1fb ISZERO
0x1fc ISZERO
0x1fd ISZERO
0x1fe DUP2
0x1ff MSTORE
0x200 PUSH1 0x20
0x202 ADD
0x203 SWAP2
0x204 POP
0x205 POP
0x206 PUSH1 0x40
0x208 MLOAD
0x209 DUP1
0x20a SWAP2
0x20b SUB
0x20c SWAP1
0x20d RETURN
---
0x1f4: JUMPDEST 
0x1f5: V124 = 0x40
0x1f7: V125 = M[0x40]
0x1fa: V126 = ISZERO 0x0
0x1fb: V127 = ISZERO 0x1
0x1fc: V128 = ISZERO 0x0
0x1fd: V129 = ISZERO 0x1
0x1ff: M[V125] = 0x0
0x200: V130 = 0x20
0x202: V131 = ADD 0x20 V125
0x206: V132 = 0x40
0x208: V133 = M[0x40]
0x20b: V134 = SUB V131 V133
0x20d: RETURN V133 V134
---
Entry stack: [V11, 0x0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x20e
[0x20e:0x264]
---
Predecessors: [0x7b]
Successors: [0x265, 0x269]
---
0x20e JUMPDEST
0x20f PUSH1 0x0
0x211 DUP1
0x212 SWAP1
0x213 SLOAD
0x214 SWAP1
0x215 PUSH2 0x100
0x218 EXP
0x219 SWAP1
0x21a DIV
0x21b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x230 AND
0x231 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x246 AND
0x247 CALLER
0x248 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x25d AND
0x25e EQ
0x25f ISZERO
0x260 ISZERO
0x261 PUSH2 0x269
0x264 JUMPI
---
0x20e: JUMPDEST 
0x20f: V135 = 0x0
0x213: V136 = S[0x0]
0x215: V137 = 0x100
0x218: V138 = EXP 0x100 0x0
0x21a: V139 = DIV V136 0x1
0x21b: V140 = 0xffffffffffffffffffffffffffffffffffffffff
0x230: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x231: V142 = 0xffffffffffffffffffffffffffffffffffffffff
0x246: V143 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0x247: V144 = CALLER
0x248: V145 = 0xffffffffffffffffffffffffffffffffffffffff
0x25d: V146 = AND 0xffffffffffffffffffffffffffffffffffffffff V144
0x25e: V147 = EQ V146 V143
0x25f: V148 = ISZERO V147
0x260: V149 = ISZERO V148
0x261: V150 = 0x269
0x264: JUMPI 0x269 V149
---
Entry stack: [V11, 0xb0, V38]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V38]

================================

Block 0x265
[0x265:0x268]
---
Predecessors: [0x20e]
Successors: []
---
0x265 PUSH1 0x0
0x267 DUP1
0x268 REVERT
---
0x265: V151 = 0x0
0x268: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb0, V38]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb0, V38]

================================

Block 0x269
[0x269:0x2ac]
---
Predecessors: [0x20e]
Successors: [0xb0]
---
0x269 JUMPDEST
0x26a DUP1
0x26b PUSH1 0x1
0x26d PUSH1 0x0
0x26f PUSH2 0x100
0x272 EXP
0x273 DUP2
0x274 SLOAD
0x275 DUP2
0x276 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28b MUL
0x28c NOT
0x28d AND
0x28e SWAP1
0x28f DUP4
0x290 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a5 AND
0x2a6 MUL
0x2a7 OR
0x2a8 SWAP1
0x2a9 SSTORE
0x2aa POP
0x2ab POP
0x2ac JUMP
---
0x269: JUMPDEST 
0x26b: V152 = 0x1
0x26d: V153 = 0x0
0x26f: V154 = 0x100
0x272: V155 = EXP 0x100 0x0
0x274: V156 = S[0x1]
0x276: V157 = 0xffffffffffffffffffffffffffffffffffffffff
0x28b: V158 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x28c: V159 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x28d: V160 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V156
0x290: V161 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a5: V162 = AND 0xffffffffffffffffffffffffffffffffffffffff V38
0x2a6: V163 = MUL V162 0x1
0x2a7: V164 = OR V163 V160
0x2a9: S[0x1] = V164
0x2ac: JUMP 0xb0
---
Entry stack: [V11, 0xb0, V38]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x2ad
[0x2ad:0x305]
---
Predecessors: [0xbe]
Successors: [0x306, 0x30a]
---
0x2ad JUMPDEST
0x2ae PUSH1 0x0
0x2b0 DUP1
0x2b1 PUSH1 0x0
0x2b3 SWAP1
0x2b4 SLOAD
0x2b5 SWAP1
0x2b6 PUSH2 0x100
0x2b9 EXP
0x2ba SWAP1
0x2bb DIV
0x2bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d1 AND
0x2d2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e7 AND
0x2e8 CALLER
0x2e9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2fe AND
0x2ff EQ
0x300 ISZERO
0x301 ISZERO
0x302 PUSH2 0x30a
0x305 JUMPI
---
0x2ad: JUMPDEST 
0x2ae: V165 = 0x0
0x2b1: V166 = 0x0
0x2b4: V167 = S[0x0]
0x2b6: V168 = 0x100
0x2b9: V169 = EXP 0x100 0x0
0x2bb: V170 = DIV V167 0x1
0x2bc: V171 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d1: V172 = AND 0xffffffffffffffffffffffffffffffffffffffff V170
0x2d2: V173 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e7: V174 = AND 0xffffffffffffffffffffffffffffffffffffffff V172
0x2e8: V175 = CALLER
0x2e9: V176 = 0xffffffffffffffffffffffffffffffffffffffff
0x2fe: V177 = AND 0xffffffffffffffffffffffffffffffffffffffff V175
0x2ff: V178 = EQ V177 V174
0x300: V179 = ISZERO V178
0x301: V180 = ISZERO V179
0x302: V181 = 0x30a
0x305: JUMPI 0x30a V180
---
Entry stack: [V11, 0xf3, V53]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0xf3, V53, 0x0]

================================

Block 0x306
[0x306:0x309]
---
Predecessors: [0x2ad]
Successors: []
---
0x306 PUSH1 0x0
0x308 DUP1
0x309 REVERT
---
0x306: V182 = 0x0
0x309: REVERT 0x0 0x0
---
Entry stack: [V11, 0xf3, V53, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf3, V53, 0x0]

================================

Block 0x30a
[0x30a:0x3c2]
---
Predecessors: [0x2ad]
Successors: [0x3c3, 0x3c7]
---
0x30a JUMPDEST
0x30b PUSH1 0x2
0x30d PUSH1 0x0
0x30f SWAP1
0x310 SLOAD
0x311 SWAP1
0x312 PUSH2 0x100
0x315 EXP
0x316 SWAP1
0x317 DIV
0x318 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x32d AND
0x32e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x343 AND
0x344 PUSH4 0x70a08231
0x349 ADDRESS
0x34a PUSH1 0x40
0x34c MLOAD
0x34d DUP3
0x34e PUSH4 0xffffffff
0x353 AND
0x354 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x372 MUL
0x373 DUP2
0x374 MSTORE
0x375 PUSH1 0x4
0x377 ADD
0x378 DUP1
0x379 DUP3
0x37a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x38f AND
0x390 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a5 AND
0x3a6 DUP2
0x3a7 MSTORE
0x3a8 PUSH1 0x20
0x3aa ADD
0x3ab SWAP2
0x3ac POP
0x3ad POP
0x3ae PUSH1 0x20
0x3b0 PUSH1 0x40
0x3b2 MLOAD
0x3b3 DUP1
0x3b4 DUP4
0x3b5 SUB
0x3b6 DUP2
0x3b7 PUSH1 0x0
0x3b9 DUP8
0x3ba DUP1
0x3bb EXTCODESIZE
0x3bc ISZERO
0x3bd DUP1
0x3be ISZERO
0x3bf PUSH2 0x3c7
0x3c2 JUMPI
---
0x30a: JUMPDEST 
0x30b: V183 = 0x2
0x30d: V184 = 0x0
0x310: V185 = S[0x2]
0x312: V186 = 0x100
0x315: V187 = EXP 0x100 0x0
0x317: V188 = DIV V185 0x1
0x318: V189 = 0xffffffffffffffffffffffffffffffffffffffff
0x32d: V190 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x32e: V191 = 0xffffffffffffffffffffffffffffffffffffffff
0x343: V192 = AND 0xffffffffffffffffffffffffffffffffffffffff V190
0x344: V193 = 0x70a08231
0x349: V194 = ADDRESS
0x34a: V195 = 0x40
0x34c: V196 = M[0x40]
0x34e: V197 = 0xffffffff
0x353: V198 = AND 0xffffffff 0x70a08231
0x354: V199 = 0x100000000000000000000000000000000000000000000000000000000
0x372: V200 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x374: M[V196] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x375: V201 = 0x4
0x377: V202 = ADD 0x4 V196
0x37a: V203 = 0xffffffffffffffffffffffffffffffffffffffff
0x38f: V204 = AND 0xffffffffffffffffffffffffffffffffffffffff V194
0x390: V205 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a5: V206 = AND 0xffffffffffffffffffffffffffffffffffffffff V204
0x3a7: M[V202] = V206
0x3a8: V207 = 0x20
0x3aa: V208 = ADD 0x20 V202
0x3ae: V209 = 0x20
0x3b0: V210 = 0x40
0x3b2: V211 = M[0x40]
0x3b5: V212 = SUB V208 V211
0x3b7: V213 = 0x0
0x3bb: V214 = EXTCODESIZE V192
0x3bc: V215 = ISZERO V214
0x3be: V216 = ISZERO V215
0x3bf: V217 = 0x3c7
0x3c2: JUMPI 0x3c7 V216
---
Entry stack: [V11, 0xf3, V53, 0x0]
Stack pops: 0
Stack additions: [V192, 0x70a08231, V208, 0x20, V211, V212, V211, 0x0, V192, V215]
Exit stack: [V11, 0xf3, V53, 0x0, V192, 0x70a08231, V208, 0x20, V211, V212, V211, 0x0, V192, V215]

================================

Block 0x3c3
[0x3c3:0x3c6]
---
Predecessors: [0x30a]
Successors: []
---
0x3c3 PUSH1 0x0
0x3c5 DUP1
0x3c6 REVERT
---
0x3c3: V218 = 0x0
0x3c6: REVERT 0x0 0x0
---
Entry stack: [V11, 0xf3, V53, 0x0, V192, 0x70a08231, V208, 0x20, V211, V212, V211, 0x0, V192, V215]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf3, V53, 0x0, V192, 0x70a08231, V208, 0x20, V211, V212, V211, 0x0, V192, V215]

================================

Block 0x3c7
[0x3c7:0x3d1]
---
Predecessors: [0x30a]
Successors: [0x3d2, 0x3db]
---
0x3c7 JUMPDEST
0x3c8 POP
0x3c9 GAS
0x3ca CALL
0x3cb ISZERO
0x3cc DUP1
0x3cd ISZERO
0x3ce PUSH2 0x3db
0x3d1 JUMPI
---
0x3c7: JUMPDEST 
0x3c9: V219 = GAS
0x3ca: V220 = CALL V219 V192 0x0 V211 V212 V211 0x20
0x3cb: V221 = ISZERO V220
0x3cd: V222 = ISZERO V221
0x3ce: V223 = 0x3db
0x3d1: JUMPI 0x3db V222
---
Entry stack: [V11, 0xf3, V53, 0x0, V192, 0x70a08231, V208, 0x20, V211, V212, V211, 0x0, V192, V215]
Stack pops: 7
Stack additions: [V221]
Exit stack: [V11, 0xf3, V53, 0x0, V192, 0x70a08231, V208, V221]

================================

Block 0x3d2
[0x3d2:0x3da]
---
Predecessors: [0x3c7]
Successors: []
---
0x3d2 RETURNDATASIZE
0x3d3 PUSH1 0x0
0x3d5 DUP1
0x3d6 RETURNDATACOPY
0x3d7 RETURNDATASIZE
0x3d8 PUSH1 0x0
0x3da REVERT
---
0x3d2: V224 = RETURNDATASIZE
0x3d3: V225 = 0x0
0x3d6: RETURNDATACOPY 0x0 0x0 V224
0x3d7: V226 = RETURNDATASIZE
0x3d8: V227 = 0x0
0x3da: REVERT 0x0 V226
---
Entry stack: [V11, 0xf3, V53, 0x0, V192, 0x70a08231, V208, V221]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf3, V53, 0x0, V192, 0x70a08231, V208, V221]

================================

Block 0x3db
[0x3db:0x3ec]
---
Predecessors: [0x3c7]
Successors: [0x3ed, 0x3f1]
---
0x3db JUMPDEST
0x3dc POP
0x3dd POP
0x3de POP
0x3df POP
0x3e0 PUSH1 0x40
0x3e2 MLOAD
0x3e3 RETURNDATASIZE
0x3e4 PUSH1 0x20
0x3e6 DUP2
0x3e7 LT
0x3e8 ISZERO
0x3e9 PUSH2 0x3f1
0x3ec JUMPI
---
0x3db: JUMPDEST 
0x3e0: V228 = 0x40
0x3e2: V229 = M[0x40]
0x3e3: V230 = RETURNDATASIZE
0x3e4: V231 = 0x20
0x3e7: V232 = LT V230 0x20
0x3e8: V233 = ISZERO V232
0x3e9: V234 = 0x3f1
0x3ec: JUMPI 0x3f1 V233
---
Entry stack: [V11, 0xf3, V53, 0x0, V192, 0x70a08231, V208, V221]
Stack pops: 4
Stack additions: [V229, V230]
Exit stack: [V11, 0xf3, V53, 0x0, V229, V230]

================================

Block 0x3ed
[0x3ed:0x3f0]
---
Predecessors: [0x3db]
Successors: []
---
0x3ed PUSH1 0x0
0x3ef DUP1
0x3f0 REVERT
---
0x3ed: V235 = 0x0
0x3f0: REVERT 0x0 0x0
---
Entry stack: [V11, 0xf3, V53, 0x0, V229, V230]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf3, V53, 0x0, V229, V230]

================================

Block 0x3f1
[0x3f1:0x4c4]
---
Predecessors: [0x3db]
Successors: [0x4c5, 0x4c9]
---
0x3f1 JUMPDEST
0x3f2 DUP2
0x3f3 ADD
0x3f4 SWAP1
0x3f5 DUP1
0x3f6 DUP1
0x3f7 MLOAD
0x3f8 SWAP1
0x3f9 PUSH1 0x20
0x3fb ADD
0x3fc SWAP1
0x3fd SWAP3
0x3fe SWAP2
0x3ff SWAP1
0x400 POP
0x401 POP
0x402 POP
0x403 SWAP1
0x404 POP
0x405 PUSH1 0x2
0x407 PUSH1 0x0
0x409 SWAP1
0x40a SLOAD
0x40b SWAP1
0x40c PUSH2 0x100
0x40f EXP
0x410 SWAP1
0x411 DIV
0x412 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x427 AND
0x428 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x43d AND
0x43e PUSH4 0xa9059cbb
0x443 DUP4
0x444 DUP4
0x445 PUSH1 0x40
0x447 MLOAD
0x448 DUP4
0x449 PUSH4 0xffffffff
0x44e AND
0x44f PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x46d MUL
0x46e DUP2
0x46f MSTORE
0x470 PUSH1 0x4
0x472 ADD
0x473 DUP1
0x474 DUP4
0x475 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x48a AND
0x48b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4a0 AND
0x4a1 DUP2
0x4a2 MSTORE
0x4a3 PUSH1 0x20
0x4a5 ADD
0x4a6 DUP3
0x4a7 DUP2
0x4a8 MSTORE
0x4a9 PUSH1 0x20
0x4ab ADD
0x4ac SWAP3
0x4ad POP
0x4ae POP
0x4af POP
0x4b0 PUSH1 0x20
0x4b2 PUSH1 0x40
0x4b4 MLOAD
0x4b5 DUP1
0x4b6 DUP4
0x4b7 SUB
0x4b8 DUP2
0x4b9 PUSH1 0x0
0x4bb DUP8
0x4bc DUP1
0x4bd EXTCODESIZE
0x4be ISZERO
0x4bf DUP1
0x4c0 ISZERO
0x4c1 PUSH2 0x4c9
0x4c4 JUMPI
---
0x3f1: JUMPDEST 
0x3f3: V236 = ADD V229 V230
0x3f7: V237 = M[V229]
0x3f9: V238 = 0x20
0x3fb: V239 = ADD 0x20 V229
0x405: V240 = 0x2
0x407: V241 = 0x0
0x40a: V242 = S[0x2]
0x40c: V243 = 0x100
0x40f: V244 = EXP 0x100 0x0
0x411: V245 = DIV V242 0x1
0x412: V246 = 0xffffffffffffffffffffffffffffffffffffffff
0x427: V247 = AND 0xffffffffffffffffffffffffffffffffffffffff V245
0x428: V248 = 0xffffffffffffffffffffffffffffffffffffffff
0x43d: V249 = AND 0xffffffffffffffffffffffffffffffffffffffff V247
0x43e: V250 = 0xa9059cbb
0x445: V251 = 0x40
0x447: V252 = M[0x40]
0x449: V253 = 0xffffffff
0x44e: V254 = AND 0xffffffff 0xa9059cbb
0x44f: V255 = 0x100000000000000000000000000000000000000000000000000000000
0x46d: V256 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x46f: M[V252] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x470: V257 = 0x4
0x472: V258 = ADD 0x4 V252
0x475: V259 = 0xffffffffffffffffffffffffffffffffffffffff
0x48a: V260 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0x48b: V261 = 0xffffffffffffffffffffffffffffffffffffffff
0x4a0: V262 = AND 0xffffffffffffffffffffffffffffffffffffffff V260
0x4a2: M[V258] = V262
0x4a3: V263 = 0x20
0x4a5: V264 = ADD 0x20 V258
0x4a8: M[V264] = V237
0x4a9: V265 = 0x20
0x4ab: V266 = ADD 0x20 V264
0x4b0: V267 = 0x20
0x4b2: V268 = 0x40
0x4b4: V269 = M[0x40]
0x4b7: V270 = SUB V266 V269
0x4b9: V271 = 0x0
0x4bd: V272 = EXTCODESIZE V249
0x4be: V273 = ISZERO V272
0x4c0: V274 = ISZERO V273
0x4c1: V275 = 0x4c9
0x4c4: JUMPI 0x4c9 V274
---
Entry stack: [V11, 0xf3, V53, 0x0, V229, V230]
Stack pops: 4
Stack additions: [S3, V237, V249, 0xa9059cbb, V266, 0x20, V269, V270, V269, 0x0, V249, V273]
Exit stack: [V11, 0xf3, V53, V237, V249, 0xa9059cbb, V266, 0x20, V269, V270, V269, 0x0, V249, V273]

================================

Block 0x4c5
[0x4c5:0x4c8]
---
Predecessors: [0x3f1]
Successors: []
---
0x4c5 PUSH1 0x0
0x4c7 DUP1
0x4c8 REVERT
---
0x4c5: V276 = 0x0
0x4c8: REVERT 0x0 0x0
---
Entry stack: [V11, 0xf3, V53, V237, V249, 0xa9059cbb, V266, 0x20, V269, V270, V269, 0x0, V249, V273]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf3, V53, V237, V249, 0xa9059cbb, V266, 0x20, V269, V270, V269, 0x0, V249, V273]

================================

Block 0x4c9
[0x4c9:0x4d3]
---
Predecessors: [0x3f1]
Successors: [0x4d4, 0x4dd]
---
0x4c9 JUMPDEST
0x4ca POP
0x4cb GAS
0x4cc CALL
0x4cd ISZERO
0x4ce DUP1
0x4cf ISZERO
0x4d0 PUSH2 0x4dd
0x4d3 JUMPI
---
0x4c9: JUMPDEST 
0x4cb: V277 = GAS
0x4cc: V278 = CALL V277 V249 0x0 V269 V270 V269 0x20
0x4cd: V279 = ISZERO V278
0x4cf: V280 = ISZERO V279
0x4d0: V281 = 0x4dd
0x4d3: JUMPI 0x4dd V280
---
Entry stack: [V11, 0xf3, V53, V237, V249, 0xa9059cbb, V266, 0x20, V269, V270, V269, 0x0, V249, V273]
Stack pops: 7
Stack additions: [V279]
Exit stack: [V11, 0xf3, V53, V237, V249, 0xa9059cbb, V266, V279]

================================

Block 0x4d4
[0x4d4:0x4dc]
---
Predecessors: [0x4c9]
Successors: []
---
0x4d4 RETURNDATASIZE
0x4d5 PUSH1 0x0
0x4d7 DUP1
0x4d8 RETURNDATACOPY
0x4d9 RETURNDATASIZE
0x4da PUSH1 0x0
0x4dc REVERT
---
0x4d4: V282 = RETURNDATASIZE
0x4d5: V283 = 0x0
0x4d8: RETURNDATACOPY 0x0 0x0 V282
0x4d9: V284 = RETURNDATASIZE
0x4da: V285 = 0x0
0x4dc: REVERT 0x0 V284
---
Entry stack: [V11, 0xf3, V53, V237, V249, 0xa9059cbb, V266, V279]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf3, V53, V237, V249, 0xa9059cbb, V266, V279]

================================

Block 0x4dd
[0x4dd:0x4ee]
---
Predecessors: [0x4c9]
Successors: [0x4ef, 0x4f3]
---
0x4dd JUMPDEST
0x4de POP
0x4df POP
0x4e0 POP
0x4e1 POP
0x4e2 PUSH1 0x40
0x4e4 MLOAD
0x4e5 RETURNDATASIZE
0x4e6 PUSH1 0x20
0x4e8 DUP2
0x4e9 LT
0x4ea ISZERO
0x4eb PUSH2 0x4f3
0x4ee JUMPI
---
0x4dd: JUMPDEST 
0x4e2: V286 = 0x40
0x4e4: V287 = M[0x40]
0x4e5: V288 = RETURNDATASIZE
0x4e6: V289 = 0x20
0x4e9: V290 = LT V288 0x20
0x4ea: V291 = ISZERO V290
0x4eb: V292 = 0x4f3
0x4ee: JUMPI 0x4f3 V291
---
Entry stack: [V11, 0xf3, V53, V237, V249, 0xa9059cbb, V266, V279]
Stack pops: 4
Stack additions: [V287, V288]
Exit stack: [V11, 0xf3, V53, V237, V287, V288]

================================

Block 0x4ef
[0x4ef:0x4f2]
---
Predecessors: [0x4dd]
Successors: []
---
0x4ef PUSH1 0x0
0x4f1 DUP1
0x4f2 REVERT
---
0x4ef: V293 = 0x0
0x4f2: REVERT 0x0 0x0
---
Entry stack: [V11, 0xf3, V53, V237, V287, V288]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf3, V53, V237, V287, V288]

================================

Block 0x4f3
[0x4f3:0x508]
---
Predecessors: [0x4dd]
Successors: [0xf3]
---
0x4f3 JUMPDEST
0x4f4 DUP2
0x4f5 ADD
0x4f6 SWAP1
0x4f7 DUP1
0x4f8 DUP1
0x4f9 MLOAD
0x4fa SWAP1
0x4fb PUSH1 0x20
0x4fd ADD
0x4fe SWAP1
0x4ff SWAP3
0x500 SWAP2
0x501 SWAP1
0x502 POP
0x503 POP
0x504 POP
0x505 POP
0x506 POP
0x507 POP
0x508 JUMP
---
0x4f3: JUMPDEST 
0x4f5: V294 = ADD V287 V288
0x4f9: V295 = M[V287]
0x4fb: V296 = 0x20
0x4fd: V297 = ADD 0x20 V287
0x508: JUMP 0xf3
---
Entry stack: [V11, 0xf3, V53, V237, V287, V288]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x509
[0x509:0x5c4]
---
Predecessors: [0x101]
Successors: [0x5c5, 0x5c9]
---
0x509 JUMPDEST
0x50a PUSH1 0x0
0x50c PUSH1 0x2
0x50e DUP1
0x50f PUSH1 0x0
0x511 SWAP1
0x512 SLOAD
0x513 SWAP1
0x514 PUSH2 0x100
0x517 EXP
0x518 SWAP1
0x519 DIV
0x51a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x52f AND
0x530 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x545 AND
0x546 PUSH4 0x70a08231
0x54b ADDRESS
0x54c PUSH1 0x40
0x54e MLOAD
0x54f DUP3
0x550 PUSH4 0xffffffff
0x555 AND
0x556 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x574 MUL
0x575 DUP2
0x576 MSTORE
0x577 PUSH1 0x4
0x579 ADD
0x57a DUP1
0x57b DUP3
0x57c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x591 AND
0x592 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5a7 AND
0x5a8 DUP2
0x5a9 MSTORE
0x5aa PUSH1 0x20
0x5ac ADD
0x5ad SWAP2
0x5ae POP
0x5af POP
0x5b0 PUSH1 0x20
0x5b2 PUSH1 0x40
0x5b4 MLOAD
0x5b5 DUP1
0x5b6 DUP4
0x5b7 SUB
0x5b8 DUP2
0x5b9 PUSH1 0x0
0x5bb DUP8
0x5bc DUP1
0x5bd EXTCODESIZE
0x5be ISZERO
0x5bf DUP1
0x5c0 ISZERO
0x5c1 PUSH2 0x5c9
0x5c4 JUMPI
---
0x509: JUMPDEST 
0x50a: V298 = 0x0
0x50c: V299 = 0x2
0x50f: V300 = 0x0
0x512: V301 = S[0x2]
0x514: V302 = 0x100
0x517: V303 = EXP 0x100 0x0
0x519: V304 = DIV V301 0x1
0x51a: V305 = 0xffffffffffffffffffffffffffffffffffffffff
0x52f: V306 = AND 0xffffffffffffffffffffffffffffffffffffffff V304
0x530: V307 = 0xffffffffffffffffffffffffffffffffffffffff
0x545: V308 = AND 0xffffffffffffffffffffffffffffffffffffffff V306
0x546: V309 = 0x70a08231
0x54b: V310 = ADDRESS
0x54c: V311 = 0x40
0x54e: V312 = M[0x40]
0x550: V313 = 0xffffffff
0x555: V314 = AND 0xffffffff 0x70a08231
0x556: V315 = 0x100000000000000000000000000000000000000000000000000000000
0x574: V316 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x576: M[V312] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x577: V317 = 0x4
0x579: V318 = ADD 0x4 V312
0x57c: V319 = 0xffffffffffffffffffffffffffffffffffffffff
0x591: V320 = AND 0xffffffffffffffffffffffffffffffffffffffff V310
0x592: V321 = 0xffffffffffffffffffffffffffffffffffffffff
0x5a7: V322 = AND 0xffffffffffffffffffffffffffffffffffffffff V320
0x5a9: M[V318] = V322
0x5aa: V323 = 0x20
0x5ac: V324 = ADD 0x20 V318
0x5b0: V325 = 0x20
0x5b2: V326 = 0x40
0x5b4: V327 = M[0x40]
0x5b7: V328 = SUB V324 V327
0x5b9: V329 = 0x0
0x5bd: V330 = EXTCODESIZE V308
0x5be: V331 = ISZERO V330
0x5c0: V332 = ISZERO V331
0x5c1: V333 = 0x5c9
0x5c4: JUMPI 0x5c9 V332
---
Entry stack: [V11, 0x10a]
Stack pops: 0
Stack additions: [0x0, 0x2, V308, 0x70a08231, V324, 0x20, V327, V328, V327, 0x0, V308, V331]
Exit stack: [V11, 0x10a, 0x0, 0x2, V308, 0x70a08231, V324, 0x20, V327, V328, V327, 0x0, V308, V331]

================================

Block 0x5c5
[0x5c5:0x5c8]
---
Predecessors: [0x509]
Successors: []
---
0x5c5 PUSH1 0x0
0x5c7 DUP1
0x5c8 REVERT
---
0x5c5: V334 = 0x0
0x5c8: REVERT 0x0 0x0
---
Entry stack: [V11, 0x10a, 0x0, 0x2, V308, 0x70a08231, V324, 0x20, V327, V328, V327, 0x0, V308, V331]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10a, 0x0, 0x2, V308, 0x70a08231, V324, 0x20, V327, V328, V327, 0x0, V308, V331]

================================

Block 0x5c9
[0x5c9:0x5d3]
---
Predecessors: [0x509]
Successors: [0x5d4, 0x5dd]
---
0x5c9 JUMPDEST
0x5ca POP
0x5cb GAS
0x5cc CALL
0x5cd ISZERO
0x5ce DUP1
0x5cf ISZERO
0x5d0 PUSH2 0x5dd
0x5d3 JUMPI
---
0x5c9: JUMPDEST 
0x5cb: V335 = GAS
0x5cc: V336 = CALL V335 V308 0x0 V327 V328 V327 0x20
0x5cd: V337 = ISZERO V336
0x5cf: V338 = ISZERO V337
0x5d0: V339 = 0x5dd
0x5d3: JUMPI 0x5dd V338
---
Entry stack: [V11, 0x10a, 0x0, 0x2, V308, 0x70a08231, V324, 0x20, V327, V328, V327, 0x0, V308, V331]
Stack pops: 7
Stack additions: [V337]
Exit stack: [V11, 0x10a, 0x0, 0x2, V308, 0x70a08231, V324, V337]

================================

Block 0x5d4
[0x5d4:0x5dc]
---
Predecessors: [0x5c9]
Successors: []
---
0x5d4 RETURNDATASIZE
0x5d5 PUSH1 0x0
0x5d7 DUP1
0x5d8 RETURNDATACOPY
0x5d9 RETURNDATASIZE
0x5da PUSH1 0x0
0x5dc REVERT
---
0x5d4: V340 = RETURNDATASIZE
0x5d5: V341 = 0x0
0x5d8: RETURNDATACOPY 0x0 0x0 V340
0x5d9: V342 = RETURNDATASIZE
0x5da: V343 = 0x0
0x5dc: REVERT 0x0 V342
---
Entry stack: [V11, 0x10a, 0x0, 0x2, V308, 0x70a08231, V324, V337]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10a, 0x0, 0x2, V308, 0x70a08231, V324, V337]

================================

Block 0x5dd
[0x5dd:0x5ee]
---
Predecessors: [0x5c9]
Successors: [0x5ef, 0x5f3]
---
0x5dd JUMPDEST
0x5de POP
0x5df POP
0x5e0 POP
0x5e1 POP
0x5e2 PUSH1 0x40
0x5e4 MLOAD
0x5e5 RETURNDATASIZE
0x5e6 PUSH1 0x20
0x5e8 DUP2
0x5e9 LT
0x5ea ISZERO
0x5eb PUSH2 0x5f3
0x5ee JUMPI
---
0x5dd: JUMPDEST 
0x5e2: V344 = 0x40
0x5e4: V345 = M[0x40]
0x5e5: V346 = RETURNDATASIZE
0x5e6: V347 = 0x20
0x5e9: V348 = LT V346 0x20
0x5ea: V349 = ISZERO V348
0x5eb: V350 = 0x5f3
0x5ee: JUMPI 0x5f3 V349
---
Entry stack: [V11, 0x10a, 0x0, 0x2, V308, 0x70a08231, V324, V337]
Stack pops: 4
Stack additions: [V345, V346]
Exit stack: [V11, 0x10a, 0x0, 0x2, V345, V346]

================================

Block 0x5ef
[0x5ef:0x5f2]
---
Predecessors: [0x5dd]
Successors: []
---
0x5ef PUSH1 0x0
0x5f1 DUP1
0x5f2 REVERT
---
0x5ef: V351 = 0x0
0x5f2: REVERT 0x0 0x0
---
Entry stack: [V11, 0x10a, 0x0, 0x2, V345, V346]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10a, 0x0, 0x2, V345, V346]

================================

Block 0x5f3
[0x5f3:0x60b]
---
Predecessors: [0x5dd]
Successors: [0x60c, 0x60d]
---
0x5f3 JUMPDEST
0x5f4 DUP2
0x5f5 ADD
0x5f6 SWAP1
0x5f7 DUP1
0x5f8 DUP1
0x5f9 MLOAD
0x5fa SWAP1
0x5fb PUSH1 0x20
0x5fd ADD
0x5fe SWAP1
0x5ff SWAP3
0x600 SWAP2
0x601 SWAP1
0x602 POP
0x603 POP
0x604 POP
0x605 DUP2
0x606 ISZERO
0x607 ISZERO
0x608 PUSH2 0x60d
0x60b JUMPI
---
0x5f3: JUMPDEST 
0x5f5: V352 = ADD V345 V346
0x5f9: V353 = M[V345]
0x5fb: V354 = 0x20
0x5fd: V355 = ADD 0x20 V345
0x606: V356 = ISZERO 0x2
0x607: V357 = ISZERO 0x0
0x608: V358 = 0x60d
0x60b: JUMPI 0x60d 0x1
---
Entry stack: [V11, 0x10a, 0x0, 0x2, V345, V346]
Stack pops: 3
Stack additions: [S2, V353]
Exit stack: [V11, 0x10a, 0x0, 0x2, V353]

================================

Block 0x60c
[0x60c:0x60c]
---
Predecessors: [0x5f3]
Successors: []
---
0x60c INVALID
---
0x60c: INVALID 
---
Entry stack: [V11, 0x10a, 0x0, 0x2, V353]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10a, 0x0, 0x2, V353]

================================

Block 0x60d
[0x60d:0x612]
---
Predecessors: [0x5f3]
Successors: [0x10a]
---
0x60d JUMPDEST
0x60e DIV
0x60f SWAP1
0x610 POP
0x611 SWAP1
0x612 JUMP
---
0x60d: JUMPDEST 
0x60e: V359 = DIV V353 0x2
0x612: JUMP 0x10a
---
Entry stack: [V11, 0x10a, 0x0, 0x2, V353]
Stack pops: 4
Stack additions: [V359]
Exit stack: [V11, V359]

================================

Block 0x613
[0x613:0x66c]
---
Predecessors: [0x12c]
Successors: [0x66d, 0x671]
---
0x613 JUMPDEST
0x614 PUSH1 0x0
0x616 PUSH1 0x1
0x618 PUSH1 0x0
0x61a SWAP1
0x61b SLOAD
0x61c SWAP1
0x61d PUSH2 0x100
0x620 EXP
0x621 SWAP1
0x622 DIV
0x623 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x638 AND
0x639 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x64e AND
0x64f CALLER
0x650 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x665 AND
0x666 EQ
0x667 ISZERO
0x668 ISZERO
0x669 PUSH2 0x671
0x66c JUMPI
---
0x613: JUMPDEST 
0x614: V360 = 0x0
0x616: V361 = 0x1
0x618: V362 = 0x0
0x61b: V363 = S[0x1]
0x61d: V364 = 0x100
0x620: V365 = EXP 0x100 0x0
0x622: V366 = DIV V363 0x1
0x623: V367 = 0xffffffffffffffffffffffffffffffffffffffff
0x638: V368 = AND 0xffffffffffffffffffffffffffffffffffffffff V366
0x639: V369 = 0xffffffffffffffffffffffffffffffffffffffff
0x64e: V370 = AND 0xffffffffffffffffffffffffffffffffffffffff V368
0x64f: V371 = CALLER
0x650: V372 = 0xffffffffffffffffffffffffffffffffffffffff
0x665: V373 = AND 0xffffffffffffffffffffffffffffffffffffffff V371
0x666: V374 = EQ V373 V370
0x667: V375 = ISZERO V374
0x668: V376 = ISZERO V375
0x669: V377 = 0x671
0x66c: JUMPI 0x671 V376
---
Entry stack: [V11, 0x161, V81]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x161, V81, 0x0]

================================

Block 0x66d
[0x66d:0x670]
---
Predecessors: [0x613]
Successors: []
---
0x66d PUSH1 0x0
0x66f DUP1
0x670 REVERT
---
0x66d: V378 = 0x0
0x670: REVERT 0x0 0x0
---
Entry stack: [V11, 0x161, V81, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x161, V81, 0x0]

================================

Block 0x671
[0x671:0x72a]
---
Predecessors: [0x613]
Successors: [0x72b, 0x72f]
---
0x671 JUMPDEST
0x672 PUSH1 0x2
0x674 DUP1
0x675 PUSH1 0x0
0x677 SWAP1
0x678 SLOAD
0x679 SWAP1
0x67a PUSH2 0x100
0x67d EXP
0x67e SWAP1
0x67f DIV
0x680 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x695 AND
0x696 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6ab AND
0x6ac PUSH4 0x70a08231
0x6b1 ADDRESS
0x6b2 PUSH1 0x40
0x6b4 MLOAD
0x6b5 DUP3
0x6b6 PUSH4 0xffffffff
0x6bb AND
0x6bc PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x6da MUL
0x6db DUP2
0x6dc MSTORE
0x6dd PUSH1 0x4
0x6df ADD
0x6e0 DUP1
0x6e1 DUP3
0x6e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6f7 AND
0x6f8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x70d AND
0x70e DUP2
0x70f MSTORE
0x710 PUSH1 0x20
0x712 ADD
0x713 SWAP2
0x714 POP
0x715 POP
0x716 PUSH1 0x20
0x718 PUSH1 0x40
0x71a MLOAD
0x71b DUP1
0x71c DUP4
0x71d SUB
0x71e DUP2
0x71f PUSH1 0x0
0x721 DUP8
0x722 DUP1
0x723 EXTCODESIZE
0x724 ISZERO
0x725 DUP1
0x726 ISZERO
0x727 PUSH2 0x72f
0x72a JUMPI
---
0x671: JUMPDEST 
0x672: V379 = 0x2
0x675: V380 = 0x0
0x678: V381 = S[0x2]
0x67a: V382 = 0x100
0x67d: V383 = EXP 0x100 0x0
0x67f: V384 = DIV V381 0x1
0x680: V385 = 0xffffffffffffffffffffffffffffffffffffffff
0x695: V386 = AND 0xffffffffffffffffffffffffffffffffffffffff V384
0x696: V387 = 0xffffffffffffffffffffffffffffffffffffffff
0x6ab: V388 = AND 0xffffffffffffffffffffffffffffffffffffffff V386
0x6ac: V389 = 0x70a08231
0x6b1: V390 = ADDRESS
0x6b2: V391 = 0x40
0x6b4: V392 = M[0x40]
0x6b6: V393 = 0xffffffff
0x6bb: V394 = AND 0xffffffff 0x70a08231
0x6bc: V395 = 0x100000000000000000000000000000000000000000000000000000000
0x6da: V396 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x6dc: M[V392] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x6dd: V397 = 0x4
0x6df: V398 = ADD 0x4 V392
0x6e2: V399 = 0xffffffffffffffffffffffffffffffffffffffff
0x6f7: V400 = AND 0xffffffffffffffffffffffffffffffffffffffff V390
0x6f8: V401 = 0xffffffffffffffffffffffffffffffffffffffff
0x70d: V402 = AND 0xffffffffffffffffffffffffffffffffffffffff V400
0x70f: M[V398] = V402
0x710: V403 = 0x20
0x712: V404 = ADD 0x20 V398
0x716: V405 = 0x20
0x718: V406 = 0x40
0x71a: V407 = M[0x40]
0x71d: V408 = SUB V404 V407
0x71f: V409 = 0x0
0x723: V410 = EXTCODESIZE V388
0x724: V411 = ISZERO V410
0x726: V412 = ISZERO V411
0x727: V413 = 0x72f
0x72a: JUMPI 0x72f V412
---
Entry stack: [V11, 0x161, V81, 0x0]
Stack pops: 0
Stack additions: [0x2, V388, 0x70a08231, V404, 0x20, V407, V408, V407, 0x0, V388, V411]
Exit stack: [V11, 0x161, V81, 0x0, 0x2, V388, 0x70a08231, V404, 0x20, V407, V408, V407, 0x0, V388, V411]

================================

Block 0x72b
[0x72b:0x72e]
---
Predecessors: [0x671]
Successors: []
---
0x72b PUSH1 0x0
0x72d DUP1
0x72e REVERT
---
0x72b: V414 = 0x0
0x72e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x161, V81, 0x0, 0x2, V388, 0x70a08231, V404, 0x20, V407, V408, V407, 0x0, V388, V411]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x161, V81, 0x0, 0x2, V388, 0x70a08231, V404, 0x20, V407, V408, V407, 0x0, V388, V411]

================================

Block 0x72f
[0x72f:0x739]
---
Predecessors: [0x671]
Successors: [0x73a, 0x743]
---
0x72f JUMPDEST
0x730 POP
0x731 GAS
0x732 CALL
0x733 ISZERO
0x734 DUP1
0x735 ISZERO
0x736 PUSH2 0x743
0x739 JUMPI
---
0x72f: JUMPDEST 
0x731: V415 = GAS
0x732: V416 = CALL V415 V388 0x0 V407 V408 V407 0x20
0x733: V417 = ISZERO V416
0x735: V418 = ISZERO V417
0x736: V419 = 0x743
0x739: JUMPI 0x743 V418
---
Entry stack: [V11, 0x161, V81, 0x0, 0x2, V388, 0x70a08231, V404, 0x20, V407, V408, V407, 0x0, V388, V411]
Stack pops: 7
Stack additions: [V417]
Exit stack: [V11, 0x161, V81, 0x0, 0x2, V388, 0x70a08231, V404, V417]

================================

Block 0x73a
[0x73a:0x742]
---
Predecessors: [0x72f]
Successors: []
---
0x73a RETURNDATASIZE
0x73b PUSH1 0x0
0x73d DUP1
0x73e RETURNDATACOPY
0x73f RETURNDATASIZE
0x740 PUSH1 0x0
0x742 REVERT
---
0x73a: V420 = RETURNDATASIZE
0x73b: V421 = 0x0
0x73e: RETURNDATACOPY 0x0 0x0 V420
0x73f: V422 = RETURNDATASIZE
0x740: V423 = 0x0
0x742: REVERT 0x0 V422
---
Entry stack: [V11, 0x161, V81, 0x0, 0x2, V388, 0x70a08231, V404, V417]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x161, V81, 0x0, 0x2, V388, 0x70a08231, V404, V417]

================================

Block 0x743
[0x743:0x754]
---
Predecessors: [0x72f]
Successors: [0x755, 0x759]
---
0x743 JUMPDEST
0x744 POP
0x745 POP
0x746 POP
0x747 POP
0x748 PUSH1 0x40
0x74a MLOAD
0x74b RETURNDATASIZE
0x74c PUSH1 0x20
0x74e DUP2
0x74f LT
0x750 ISZERO
0x751 PUSH2 0x759
0x754 JUMPI
---
0x743: JUMPDEST 
0x748: V424 = 0x40
0x74a: V425 = M[0x40]
0x74b: V426 = RETURNDATASIZE
0x74c: V427 = 0x20
0x74f: V428 = LT V426 0x20
0x750: V429 = ISZERO V428
0x751: V430 = 0x759
0x754: JUMPI 0x759 V429
---
Entry stack: [V11, 0x161, V81, 0x0, 0x2, V388, 0x70a08231, V404, V417]
Stack pops: 4
Stack additions: [V425, V426]
Exit stack: [V11, 0x161, V81, 0x0, 0x2, V425, V426]

================================

Block 0x755
[0x755:0x758]
---
Predecessors: [0x743]
Successors: []
---
0x755 PUSH1 0x0
0x757 DUP1
0x758 REVERT
---
0x755: V431 = 0x0
0x758: REVERT 0x0 0x0
---
Entry stack: [V11, 0x161, V81, 0x0, 0x2, V425, V426]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x161, V81, 0x0, 0x2, V425, V426]

================================

Block 0x759
[0x759:0x771]
---
Predecessors: [0x743]
Successors: [0x772, 0x773]
---
0x759 JUMPDEST
0x75a DUP2
0x75b ADD
0x75c SWAP1
0x75d DUP1
0x75e DUP1
0x75f MLOAD
0x760 SWAP1
0x761 PUSH1 0x20
0x763 ADD
0x764 SWAP1
0x765 SWAP3
0x766 SWAP2
0x767 SWAP1
0x768 POP
0x769 POP
0x76a POP
0x76b DUP2
0x76c ISZERO
0x76d ISZERO
0x76e PUSH2 0x773
0x771 JUMPI
---
0x759: JUMPDEST 
0x75b: V432 = ADD V425 V426
0x75f: V433 = M[V425]
0x761: V434 = 0x20
0x763: V435 = ADD 0x20 V425
0x76c: V436 = ISZERO 0x2
0x76d: V437 = ISZERO 0x0
0x76e: V438 = 0x773
0x771: JUMPI 0x773 0x1
---
Entry stack: [V11, 0x161, V81, 0x0, 0x2, V425, V426]
Stack pops: 3
Stack additions: [S2, V433]
Exit stack: [V11, 0x161, V81, 0x0, 0x2, V433]

================================

Block 0x772
[0x772:0x772]
---
Predecessors: [0x759]
Successors: []
---
0x772 INVALID
---
0x772: INVALID 
---
Entry stack: [V11, 0x161, V81, 0x0, 0x2, V433]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x161, V81, 0x0, 0x2, V433]

================================

Block 0x773
[0x773:0x836]
---
Predecessors: [0x759]
Successors: [0x837, 0x83b]
---
0x773 JUMPDEST
0x774 DIV
0x775 SWAP1
0x776 POP
0x777 PUSH1 0x2
0x779 PUSH1 0x0
0x77b SWAP1
0x77c SLOAD
0x77d SWAP1
0x77e PUSH2 0x100
0x781 EXP
0x782 SWAP1
0x783 DIV
0x784 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x799 AND
0x79a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7af AND
0x7b0 PUSH4 0xa9059cbb
0x7b5 DUP4
0x7b6 DUP4
0x7b7 PUSH1 0x40
0x7b9 MLOAD
0x7ba DUP4
0x7bb PUSH4 0xffffffff
0x7c0 AND
0x7c1 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x7df MUL
0x7e0 DUP2
0x7e1 MSTORE
0x7e2 PUSH1 0x4
0x7e4 ADD
0x7e5 DUP1
0x7e6 DUP4
0x7e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7fc AND
0x7fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x812 AND
0x813 DUP2
0x814 MSTORE
0x815 PUSH1 0x20
0x817 ADD
0x818 DUP3
0x819 DUP2
0x81a MSTORE
0x81b PUSH1 0x20
0x81d ADD
0x81e SWAP3
0x81f POP
0x820 POP
0x821 POP
0x822 PUSH1 0x20
0x824 PUSH1 0x40
0x826 MLOAD
0x827 DUP1
0x828 DUP4
0x829 SUB
0x82a DUP2
0x82b PUSH1 0x0
0x82d DUP8
0x82e DUP1
0x82f EXTCODESIZE
0x830 ISZERO
0x831 DUP1
0x832 ISZERO
0x833 PUSH2 0x83b
0x836 JUMPI
---
0x773: JUMPDEST 
0x774: V439 = DIV V433 0x2
0x777: V440 = 0x2
0x779: V441 = 0x0
0x77c: V442 = S[0x2]
0x77e: V443 = 0x100
0x781: V444 = EXP 0x100 0x0
0x783: V445 = DIV V442 0x1
0x784: V446 = 0xffffffffffffffffffffffffffffffffffffffff
0x799: V447 = AND 0xffffffffffffffffffffffffffffffffffffffff V445
0x79a: V448 = 0xffffffffffffffffffffffffffffffffffffffff
0x7af: V449 = AND 0xffffffffffffffffffffffffffffffffffffffff V447
0x7b0: V450 = 0xa9059cbb
0x7b7: V451 = 0x40
0x7b9: V452 = M[0x40]
0x7bb: V453 = 0xffffffff
0x7c0: V454 = AND 0xffffffff 0xa9059cbb
0x7c1: V455 = 0x100000000000000000000000000000000000000000000000000000000
0x7df: V456 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x7e1: M[V452] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x7e2: V457 = 0x4
0x7e4: V458 = ADD 0x4 V452
0x7e7: V459 = 0xffffffffffffffffffffffffffffffffffffffff
0x7fc: V460 = AND 0xffffffffffffffffffffffffffffffffffffffff V81
0x7fd: V461 = 0xffffffffffffffffffffffffffffffffffffffff
0x812: V462 = AND 0xffffffffffffffffffffffffffffffffffffffff V460
0x814: M[V458] = V462
0x815: V463 = 0x20
0x817: V464 = ADD 0x20 V458
0x81a: M[V464] = V439
0x81b: V465 = 0x20
0x81d: V466 = ADD 0x20 V464
0x822: V467 = 0x20
0x824: V468 = 0x40
0x826: V469 = M[0x40]
0x829: V470 = SUB V466 V469
0x82b: V471 = 0x0
0x82f: V472 = EXTCODESIZE V449
0x830: V473 = ISZERO V472
0x832: V474 = ISZERO V473
0x833: V475 = 0x83b
0x836: JUMPI 0x83b V474
---
Entry stack: [V11, 0x161, V81, 0x0, 0x2, V433]
Stack pops: 4
Stack additions: [S3, V439, V449, 0xa9059cbb, V466, 0x20, V469, V470, V469, 0x0, V449, V473]
Exit stack: [V11, 0x161, V81, V439, V449, 0xa9059cbb, V466, 0x20, V469, V470, V469, 0x0, V449, V473]

================================

Block 0x837
[0x837:0x83a]
---
Predecessors: [0x773]
Successors: []
---
0x837 PUSH1 0x0
0x839 DUP1
0x83a REVERT
---
0x837: V476 = 0x0
0x83a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x161, V81, V439, V449, 0xa9059cbb, V466, 0x20, V469, V470, V469, 0x0, V449, V473]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x161, V81, V439, V449, 0xa9059cbb, V466, 0x20, V469, V470, V469, 0x0, V449, V473]

================================

Block 0x83b
[0x83b:0x845]
---
Predecessors: [0x773]
Successors: [0x846, 0x84f]
---
0x83b JUMPDEST
0x83c POP
0x83d GAS
0x83e CALL
0x83f ISZERO
0x840 DUP1
0x841 ISZERO
0x842 PUSH2 0x84f
0x845 JUMPI
---
0x83b: JUMPDEST 
0x83d: V477 = GAS
0x83e: V478 = CALL V477 V449 0x0 V469 V470 V469 0x20
0x83f: V479 = ISZERO V478
0x841: V480 = ISZERO V479
0x842: V481 = 0x84f
0x845: JUMPI 0x84f V480
---
Entry stack: [V11, 0x161, V81, V439, V449, 0xa9059cbb, V466, 0x20, V469, V470, V469, 0x0, V449, V473]
Stack pops: 7
Stack additions: [V479]
Exit stack: [V11, 0x161, V81, V439, V449, 0xa9059cbb, V466, V479]

================================

Block 0x846
[0x846:0x84e]
---
Predecessors: [0x83b]
Successors: []
---
0x846 RETURNDATASIZE
0x847 PUSH1 0x0
0x849 DUP1
0x84a RETURNDATACOPY
0x84b RETURNDATASIZE
0x84c PUSH1 0x0
0x84e REVERT
---
0x846: V482 = RETURNDATASIZE
0x847: V483 = 0x0
0x84a: RETURNDATACOPY 0x0 0x0 V482
0x84b: V484 = RETURNDATASIZE
0x84c: V485 = 0x0
0x84e: REVERT 0x0 V484
---
Entry stack: [V11, 0x161, V81, V439, V449, 0xa9059cbb, V466, V479]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x161, V81, V439, V449, 0xa9059cbb, V466, V479]

================================

Block 0x84f
[0x84f:0x860]
---
Predecessors: [0x83b]
Successors: [0x861, 0x865]
---
0x84f JUMPDEST
0x850 POP
0x851 POP
0x852 POP
0x853 POP
0x854 PUSH1 0x40
0x856 MLOAD
0x857 RETURNDATASIZE
0x858 PUSH1 0x20
0x85a DUP2
0x85b LT
0x85c ISZERO
0x85d PUSH2 0x865
0x860 JUMPI
---
0x84f: JUMPDEST 
0x854: V486 = 0x40
0x856: V487 = M[0x40]
0x857: V488 = RETURNDATASIZE
0x858: V489 = 0x20
0x85b: V490 = LT V488 0x20
0x85c: V491 = ISZERO V490
0x85d: V492 = 0x865
0x860: JUMPI 0x865 V491
---
Entry stack: [V11, 0x161, V81, V439, V449, 0xa9059cbb, V466, V479]
Stack pops: 4
Stack additions: [V487, V488]
Exit stack: [V11, 0x161, V81, V439, V487, V488]

================================

Block 0x861
[0x861:0x864]
---
Predecessors: [0x84f]
Successors: []
---
0x861 PUSH1 0x0
0x863 DUP1
0x864 REVERT
---
0x861: V493 = 0x0
0x864: REVERT 0x0 0x0
---
Entry stack: [V11, 0x161, V81, V439, V487, V488]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x161, V81, V439, V487, V488]

================================

Block 0x865
[0x865:0x892]
---
Predecessors: [0x84f]
Successors: [0x893, 0x894]
---
0x865 JUMPDEST
0x866 DUP2
0x867 ADD
0x868 SWAP1
0x869 DUP1
0x86a DUP1
0x86b MLOAD
0x86c SWAP1
0x86d PUSH1 0x20
0x86f ADD
0x870 SWAP1
0x871 SWAP3
0x872 SWAP2
0x873 SWAP1
0x874 POP
0x875 POP
0x876 POP
0x877 POP
0x878 PUSH1 0x1
0x87a PUSH1 0x3
0x87c PUSH1 0x0
0x87e DUP3
0x87f DUP3
0x880 SLOAD
0x881 ADD
0x882 SWAP3
0x883 POP
0x884 POP
0x885 DUP2
0x886 SWAP1
0x887 SSTORE
0x888 POP
0x889 PUSH1 0x2
0x88b DUP2
0x88c DUP2
0x88d ISZERO
0x88e ISZERO
0x88f PUSH2 0x894
0x892 JUMPI
---
0x865: JUMPDEST 
0x867: V494 = ADD V487 V488
0x86b: V495 = M[V487]
0x86d: V496 = 0x20
0x86f: V497 = ADD 0x20 V487
0x878: V498 = 0x1
0x87a: V499 = 0x3
0x87c: V500 = 0x0
0x880: V501 = S[0x3]
0x881: V502 = ADD V501 0x1
0x887: S[0x3] = V502
0x889: V503 = 0x2
0x88d: V504 = ISZERO 0x2
0x88e: V505 = ISZERO 0x0
0x88f: V506 = 0x894
0x892: JUMPI 0x894 0x1
---
Entry stack: [V11, 0x161, V81, V439, V487, V488]
Stack pops: 3
Stack additions: [S2, 0x2, S2]
Exit stack: [V11, 0x161, V81, V439, 0x2, V439]

================================

Block 0x893
[0x893:0x893]
---
Predecessors: [0x865]
Successors: []
---
0x893 INVALID
---
0x893: INVALID 
---
Entry stack: [V11, 0x161, V81, V439, 0x2, V439]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x161, V81, V439, 0x2, V439]

================================

Block 0x894
[0x894:0x8cf]
---
Predecessors: [0x865]
Successors: [0x8d0, 0x8d1]
---
0x894 JUMPDEST
0x895 DIV
0x896 PUSH1 0x4
0x898 PUSH1 0x0
0x89a DUP3
0x89b DUP3
0x89c SLOAD
0x89d ADD
0x89e SWAP3
0x89f POP
0x8a0 POP
0x8a1 DUP2
0x8a2 SWAP1
0x8a3 SSTORE
0x8a4 POP
0x8a5 PUSH32 0x3d3f4a0b3f2785d8e3435426e347963951475805ab8d7b356b4b05aee475e90b
0x8c6 PUSH1 0x2
0x8c8 DUP3
0x8c9 DUP2
0x8ca ISZERO
0x8cb ISZERO
0x8cc PUSH2 0x8d1
0x8cf JUMPI
---
0x894: JUMPDEST 
0x895: V507 = DIV V439 0x2
0x896: V508 = 0x4
0x898: V509 = 0x0
0x89c: V510 = S[0x4]
0x89d: V511 = ADD V510 V507
0x8a3: S[0x4] = V511
0x8a5: V512 = 0x3d3f4a0b3f2785d8e3435426e347963951475805ab8d7b356b4b05aee475e90b
0x8c6: V513 = 0x2
0x8ca: V514 = ISZERO 0x2
0x8cb: V515 = ISZERO 0x0
0x8cc: V516 = 0x8d1
0x8cf: JUMPI 0x8d1 0x1
---
Entry stack: [V11, 0x161, V81, V439, 0x2, V439]
Stack pops: 3
Stack additions: [S2, 0x3d3f4a0b3f2785d8e3435426e347963951475805ab8d7b356b4b05aee475e90b, 0x2, S2]
Exit stack: [V11, 0x161, V81, V439, 0x3d3f4a0b3f2785d8e3435426e347963951475805ab8d7b356b4b05aee475e90b, 0x2, V439]

================================

Block 0x8d0
[0x8d0:0x8d0]
---
Predecessors: [0x894]
Successors: []
---
0x8d0 INVALID
---
0x8d0: INVALID 
---
Entry stack: [V11, 0x161, V81, V439, 0x3d3f4a0b3f2785d8e3435426e347963951475805ab8d7b356b4b05aee475e90b, 0x2, V439]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x161, V81, V439, 0x3d3f4a0b3f2785d8e3435426e347963951475805ab8d7b356b4b05aee475e90b, 0x2, V439]

================================

Block 0x8d1
[0x8d1:0x928]
---
Predecessors: [0x894]
Successors: [0x161]
---
0x8d1 JUMPDEST
0x8d2 DIV
0x8d3 DUP4
0x8d4 PUSH1 0x3
0x8d6 SLOAD
0x8d7 PUSH1 0x40
0x8d9 MLOAD
0x8da DUP1
0x8db DUP5
0x8dc DUP2
0x8dd MSTORE
0x8de PUSH1 0x20
0x8e0 ADD
0x8e1 DUP4
0x8e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8f7 AND
0x8f8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x90d AND
0x90e DUP2
0x90f MSTORE
0x910 PUSH1 0x20
0x912 ADD
0x913 DUP3
0x914 DUP2
0x915 MSTORE
0x916 PUSH1 0x20
0x918 ADD
0x919 SWAP4
0x91a POP
0x91b POP
0x91c POP
0x91d POP
0x91e PUSH1 0x40
0x920 MLOAD
0x921 DUP1
0x922 SWAP2
0x923 SUB
0x924 SWAP1
0x925 LOG1
0x926 POP
0x927 POP
0x928 JUMP
---
0x8d1: JUMPDEST 
0x8d2: V517 = DIV V439 0x2
0x8d4: V518 = 0x3
0x8d6: V519 = S[0x3]
0x8d7: V520 = 0x40
0x8d9: V521 = M[0x40]
0x8dd: M[V521] = V517
0x8de: V522 = 0x20
0x8e0: V523 = ADD 0x20 V521
0x8e2: V524 = 0xffffffffffffffffffffffffffffffffffffffff
0x8f7: V525 = AND 0xffffffffffffffffffffffffffffffffffffffff V81
0x8f8: V526 = 0xffffffffffffffffffffffffffffffffffffffff
0x90d: V527 = AND 0xffffffffffffffffffffffffffffffffffffffff V525
0x90f: M[V523] = V527
0x910: V528 = 0x20
0x912: V529 = ADD 0x20 V523
0x915: M[V529] = V519
0x916: V530 = 0x20
0x918: V531 = ADD 0x20 V529
0x91e: V532 = 0x40
0x920: V533 = M[0x40]
0x923: V534 = SUB V531 V533
0x925: LOG V533 V534 0x3d3f4a0b3f2785d8e3435426e347963951475805ab8d7b356b4b05aee475e90b
0x928: JUMP 0x161
---
Entry stack: [V11, 0x161, V81, V439, 0x3d3f4a0b3f2785d8e3435426e347963951475805ab8d7b356b4b05aee475e90b, 0x2, V439]
Stack pops: 6
Stack additions: []
Exit stack: [V11]

================================

Block 0x929
[0x929:0x931]
---
Predecessors: [0x16f]
Successors: [0x1f4]
---
0x929 JUMPDEST
0x92a PUSH1 0x0
0x92c SWAP4
0x92d SWAP3
0x92e POP
0x92f POP
0x930 POP
0x931 JUMP
---
0x929: JUMPDEST 
0x92a: V535 = 0x0
0x931: JUMP 0x1f4
---
Entry stack: [V11, 0x1f4, V96, V99, V117]
Stack pops: 4
Stack additions: [0x0]
Exit stack: [V11, 0x0]

================================

Block 0x932
[0x932:0x95d]
---
Predecessors: []
Successors: []
---
0x932 STOP
0x933 LOG1
0x934 PUSH6 0x627a7a723058
0x93b SHA3
0x93c MULMOD
0x93d LOG1
0x93e PUSH23 0xf52c3d1c4c20e0887c67b61d173e116c50302871e460e9
0x956 SSTORE
0x957 MISSING 0xdf
0x958 MISSING 0x2f
0x959 MISSING 0xb2
0x95a LT
0x95b RETURNDATASIZE
0x95c STOP
0x95d MISSING 0x29
---
0x932: STOP 
0x933: LOG S0 S1 S2
0x934: V536 = 0x627a7a723058
0x93b: V537 = SHA3 0x627a7a723058 S3
0x93c: V538 = MULMOD V537 S4 S5
0x93d: LOG V538 S6 S7
0x93e: V539 = 0xf52c3d1c4c20e0887c67b61d173e116c50302871e460e9
0x956: S[0xf52c3d1c4c20e0887c67b61d173e116c50302871e460e9] = S8
0x957: MISSING 0xdf
0x958: MISSING 0x2f
0x959: MISSING 0xb2
0x95a: V540 = LT S0 S1
0x95b: V541 = RETURNDATASIZE
0x95c: STOP 
0x95d: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V541, V540]
Exit stack: []

================================

Function 0:
Public function signature: 0x3da55aba
Entry block: 0x6f
Exit block: 0xb0
Body: 0x6f, 0x77, 0x7b, 0xb0, 0x20e, 0x265, 0x269

Function 1:
Public function signature: 0x42e9c6ce
Entry block: 0xb2
Exit block: 0xf3
Body: 0xb2, 0xba, 0xbe, 0xf3, 0x2ad, 0x306, 0x30a, 0x3c3, 0x3c7, 0x3d2, 0x3db, 0x3ed, 0x3f1, 0x4c5, 0x4c9, 0x4d4, 0x4dd, 0x4ef, 0x4f3

Function 2:
Public function signature: 0x9329066c
Entry block: 0xf5
Exit block: 0x10a
Body: 0xf5, 0xfd, 0x101, 0x10a, 0x509, 0x5c5, 0x5c9, 0x5d4, 0x5dd, 0x5ef, 0x5f3, 0x60c, 0x60d

Function 3:
Public function signature: 0xb36c973e
Entry block: 0x120
Exit block: 0x161
Body: 0x120, 0x128, 0x12c, 0x161, 0x613, 0x66d, 0x671, 0x72b, 0x72f, 0x73a, 0x743, 0x755, 0x759, 0x772, 0x773, 0x837, 0x83b, 0x846, 0x84f, 0x861, 0x865, 0x893, 0x894, 0x8d0, 0x8d1

Function 4:
Public function signature: 0xc0ee0b8a
Entry block: 0x163
Exit block: 0x1f4
Body: 0x163, 0x16b, 0x16f, 0x1f4, 0x929

Function 5:
Public fallback function
Entry block: 0x6d
Exit block: 0x6d
Body: 0x6d

