Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x83]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x83
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x83
0xc: JUMPI 0x83 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0xee]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x308f379
0x3c EQ
0x3d PUSH2 0xee
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x308f379
0x3c: V13 = EQ 0x308f379 V11
0x3d: V14 = 0xee
0x40: JUMPI 0xee V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x1aa]
---
0x41 DUP1
0x42 PUSH4 0xe21fce3
0x47 EQ
0x48 PUSH2 0x1aa
0x4b JUMPI
---
0x42: V15 = 0xe21fce3
0x47: V16 = EQ 0xe21fce3 V11
0x48: V17 = 0x1aa
0x4b: JUMPI 0x1aa V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x213]
---
0x4c DUP1
0x4d PUSH4 0x12ac18ff
0x52 EQ
0x53 PUSH2 0x213
0x56 JUMPI
---
0x4d: V18 = 0x12ac18ff
0x52: V19 = EQ 0x12ac18ff V11
0x53: V20 = 0x213
0x56: JUMPI 0x213 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x2a3]
---
0x57 DUP1
0x58 PUSH4 0x18bee97e
0x5d EQ
0x5e PUSH2 0x2a3
0x61 JUMPI
---
0x58: V21 = 0x18bee97e
0x5d: V22 = EQ 0x18bee97e V11
0x5e: V23 = 0x2a3
0x61: JUMPI 0x2a3 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x2fa]
---
0x62 DUP1
0x63 PUSH4 0x6fd094f4
0x68 EQ
0x69 PUSH2 0x2fa
0x6c JUMPI
---
0x63: V24 = 0x6fd094f4
0x68: V25 = EQ 0x6fd094f4 V11
0x69: V26 = 0x2fa
0x6c: JUMPI 0x2fa V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x351]
---
0x6d DUP1
0x6e PUSH4 0x71ea3aad
0x73 EQ
0x74 PUSH2 0x351
0x77 JUMPI
---
0x6e: V27 = 0x71ea3aad
0x73: V28 = EQ 0x71ea3aad V11
0x74: V29 = 0x351
0x77: JUMPI 0x351 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x39e]
---
0x78 DUP1
0x79 PUSH4 0xd917deb5
0x7e EQ
0x7f PUSH2 0x39e
0x82 JUMPI
---
0x79: V30 = 0xd917deb5
0x7e: V31 = EQ 0xd917deb5 V11
0x7f: V32 = 0x39e
0x82: JUMPI 0x39e V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0xe1]
---
Predecessors: [0x0, 0x78]
Successors: [0xe2, 0xeb]
---
0x83 JUMPDEST
0x84 PUSH1 0x1
0x86 PUSH1 0x0
0x88 SWAP1
0x89 SLOAD
0x8a SWAP1
0x8b PUSH2 0x100
0x8e EXP
0x8f SWAP1
0x90 DIV
0x91 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa6 AND
0xa7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbc AND
0xbd PUSH2 0x8fc
0xc0 CALLVALUE
0xc1 SWAP1
0xc2 DUP2
0xc3 ISZERO
0xc4 MUL
0xc5 SWAP1
0xc6 PUSH1 0x40
0xc8 MLOAD
0xc9 PUSH1 0x0
0xcb PUSH1 0x40
0xcd MLOAD
0xce DUP1
0xcf DUP4
0xd0 SUB
0xd1 DUP2
0xd2 DUP6
0xd3 DUP9
0xd4 DUP9
0xd5 CALL
0xd6 SWAP4
0xd7 POP
0xd8 POP
0xd9 POP
0xda POP
0xdb ISZERO
0xdc DUP1
0xdd ISZERO
0xde PUSH2 0xeb
0xe1 JUMPI
---
0x83: JUMPDEST 
0x84: V33 = 0x1
0x86: V34 = 0x0
0x89: V35 = S[0x1]
0x8b: V36 = 0x100
0x8e: V37 = EXP 0x100 0x0
0x90: V38 = DIV V35 0x1
0x91: V39 = 0xffffffffffffffffffffffffffffffffffffffff
0xa6: V40 = AND 0xffffffffffffffffffffffffffffffffffffffff V38
0xa7: V41 = 0xffffffffffffffffffffffffffffffffffffffff
0xbc: V42 = AND 0xffffffffffffffffffffffffffffffffffffffff V40
0xbd: V43 = 0x8fc
0xc0: V44 = CALLVALUE
0xc3: V45 = ISZERO V44
0xc4: V46 = MUL V45 0x8fc
0xc6: V47 = 0x40
0xc8: V48 = M[0x40]
0xc9: V49 = 0x0
0xcb: V50 = 0x40
0xcd: V51 = M[0x40]
0xd0: V52 = SUB V48 V51
0xd5: V53 = CALL V46 V42 V44 V51 V52 V51 0x0
0xdb: V54 = ISZERO V53
0xdd: V55 = ISZERO V54
0xde: V56 = 0xeb
0xe1: JUMPI 0xeb V55
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V54]
Exit stack: [V11, V54]

================================

Block 0xe2
[0xe2:0xea]
---
Predecessors: [0x83]
Successors: []
---
0xe2 RETURNDATASIZE
0xe3 PUSH1 0x0
0xe5 DUP1
0xe6 RETURNDATACOPY
0xe7 RETURNDATASIZE
0xe8 PUSH1 0x0
0xea REVERT
---
0xe2: V57 = RETURNDATASIZE
0xe3: V58 = 0x0
0xe6: RETURNDATACOPY 0x0 0x0 V57
0xe7: V59 = RETURNDATASIZE
0xe8: V60 = 0x0
0xea: REVERT 0x0 V59
---
Entry stack: [V11, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V54]

================================

Block 0xeb
[0xeb:0xed]
---
Predecessors: [0x83]
Successors: []
---
0xeb JUMPDEST
0xec POP
0xed STOP
---
0xeb: JUMPDEST 
0xed: STOP 
---
Entry stack: [V11, V54]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xee
[0xee:0xf5]
---
Predecessors: [0xd]
Successors: [0xf6, 0xfa]
---
0xee JUMPDEST
0xef CALLVALUE
0xf0 DUP1
0xf1 ISZERO
0xf2 PUSH2 0xfa
0xf5 JUMPI
---
0xee: JUMPDEST 
0xef: V61 = CALLVALUE
0xf1: V62 = ISZERO V61
0xf2: V63 = 0xfa
0xf5: JUMPI 0xfa V62
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V61]
Exit stack: [V11, V61]

================================

Block 0xf6
[0xf6:0xf9]
---
Predecessors: [0xee]
Successors: []
---
0xf6 PUSH1 0x0
0xf8 DUP1
0xf9 REVERT
---
0xf6: V64 = 0x0
0xf9: REVERT 0x0 0x0
---
Entry stack: [V11, V61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V61]

================================

Block 0xfa
[0xfa:0x12e]
---
Predecessors: [0xee]
Successors: [0x3a8]
---
0xfa JUMPDEST
0xfb POP
0xfc PUSH2 0x12f
0xff PUSH1 0x4
0x101 DUP1
0x102 CALLDATASIZE
0x103 SUB
0x104 DUP2
0x105 ADD
0x106 SWAP1
0x107 DUP1
0x108 DUP1
0x109 CALLDATALOAD
0x10a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11f AND
0x120 SWAP1
0x121 PUSH1 0x20
0x123 ADD
0x124 SWAP1
0x125 SWAP3
0x126 SWAP2
0x127 SWAP1
0x128 POP
0x129 POP
0x12a POP
0x12b PUSH2 0x3a8
0x12e JUMP
---
0xfa: JUMPDEST 
0xfc: V65 = 0x12f
0xff: V66 = 0x4
0x102: V67 = CALLDATASIZE
0x103: V68 = SUB V67 0x4
0x105: V69 = ADD 0x4 V68
0x109: V70 = CALLDATALOAD 0x4
0x10a: V71 = 0xffffffffffffffffffffffffffffffffffffffff
0x11f: V72 = AND 0xffffffffffffffffffffffffffffffffffffffff V70
0x121: V73 = 0x20
0x123: V74 = ADD 0x20 0x4
0x12b: V75 = 0x3a8
0x12e: JUMP 0x3a8
---
Entry stack: [V11, V61]
Stack pops: 1
Stack additions: [0x12f, V72]
Exit stack: [V11, 0x12f, V72]

================================

Block 0x12f
[0x12f:0x153]
---
Predecessors: [0x450]
Successors: [0x154]
---
0x12f JUMPDEST
0x130 PUSH1 0x40
0x132 MLOAD
0x133 DUP1
0x134 DUP1
0x135 PUSH1 0x20
0x137 ADD
0x138 DUP3
0x139 DUP2
0x13a SUB
0x13b DUP3
0x13c MSTORE
0x13d DUP4
0x13e DUP2
0x13f DUP2
0x140 MLOAD
0x141 DUP2
0x142 MSTORE
0x143 PUSH1 0x20
0x145 ADD
0x146 SWAP2
0x147 POP
0x148 DUP1
0x149 MLOAD
0x14a SWAP1
0x14b PUSH1 0x20
0x14d ADD
0x14e SWAP1
0x14f DUP1
0x150 DUP4
0x151 DUP4
0x152 PUSH1 0x0
---
0x12f: JUMPDEST 
0x130: V76 = 0x40
0x132: V77 = M[0x40]
0x135: V78 = 0x20
0x137: V79 = ADD 0x20 V77
0x13a: V80 = SUB V79 V77
0x13c: M[V77] = V80
0x140: V81 = M[V280]
0x142: M[V79] = V81
0x143: V82 = 0x20
0x145: V83 = ADD 0x20 V79
0x149: V84 = M[V280]
0x14b: V85 = 0x20
0x14d: V86 = ADD 0x20 V280
0x152: V87 = 0x0
---
Entry stack: [V11, 0x12f, V280]
Stack pops: 1
Stack additions: [S0, V77, V77, V83, V86, V84, V84, V83, V86, 0x0]
Exit stack: [V11, 0x12f, V280, V77, V77, V83, V86, V84, V84, V83, V86, 0x0]

================================

Block 0x154
[0x154:0x15c]
---
Predecessors: [0x12f, 0x15d]
Successors: [0x15d, 0x16f]
---
0x154 JUMPDEST
0x155 DUP4
0x156 DUP2
0x157 LT
0x158 ISZERO
0x159 PUSH2 0x16f
0x15c JUMPI
---
0x154: JUMPDEST 
0x157: V88 = LT S0 V84
0x158: V89 = ISZERO V88
0x159: V90 = 0x16f
0x15c: JUMPI 0x16f V89
---
Entry stack: [V11, 0x12f, V280, V77, V77, V83, V86, V84, V84, V83, V86, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x12f, V280, V77, V77, V83, V86, V84, V84, V83, V86, S0]

================================

Block 0x15d
[0x15d:0x16e]
---
Predecessors: [0x154]
Successors: [0x154]
---
0x15d DUP1
0x15e DUP3
0x15f ADD
0x160 MLOAD
0x161 DUP2
0x162 DUP5
0x163 ADD
0x164 MSTORE
0x165 PUSH1 0x20
0x167 DUP2
0x168 ADD
0x169 SWAP1
0x16a POP
0x16b PUSH2 0x154
0x16e JUMP
---
0x15f: V91 = ADD V86 S0
0x160: V92 = M[V91]
0x163: V93 = ADD V83 S0
0x164: M[V93] = V92
0x165: V94 = 0x20
0x168: V95 = ADD S0 0x20
0x16b: V96 = 0x154
0x16e: JUMP 0x154
---
Entry stack: [V11, 0x12f, V280, V77, V77, V83, V86, V84, V84, V83, V86, S0]
Stack pops: 3
Stack additions: [S2, S1, V95]
Exit stack: [V11, 0x12f, V280, V77, V77, V83, V86, V84, V84, V83, V86, V95]

================================

Block 0x16f
[0x16f:0x182]
---
Predecessors: [0x154]
Successors: [0x183, 0x19c]
---
0x16f JUMPDEST
0x170 POP
0x171 POP
0x172 POP
0x173 POP
0x174 SWAP1
0x175 POP
0x176 SWAP1
0x177 DUP2
0x178 ADD
0x179 SWAP1
0x17a PUSH1 0x1f
0x17c AND
0x17d DUP1
0x17e ISZERO
0x17f PUSH2 0x19c
0x182 JUMPI
---
0x16f: JUMPDEST 
0x178: V97 = ADD V84 V83
0x17a: V98 = 0x1f
0x17c: V99 = AND 0x1f V84
0x17e: V100 = ISZERO V99
0x17f: V101 = 0x19c
0x182: JUMPI 0x19c V100
---
Entry stack: [V11, 0x12f, V280, V77, V77, V83, V86, V84, V84, V83, V86, S0]
Stack pops: 7
Stack additions: [V97, V99]
Exit stack: [V11, 0x12f, V280, V77, V77, V97, V99]

================================

Block 0x183
[0x183:0x19b]
---
Predecessors: [0x16f]
Successors: [0x19c]
---
0x183 DUP1
0x184 DUP3
0x185 SUB
0x186 DUP1
0x187 MLOAD
0x188 PUSH1 0x1
0x18a DUP4
0x18b PUSH1 0x20
0x18d SUB
0x18e PUSH2 0x100
0x191 EXP
0x192 SUB
0x193 NOT
0x194 AND
0x195 DUP2
0x196 MSTORE
0x197 PUSH1 0x20
0x199 ADD
0x19a SWAP2
0x19b POP
---
0x185: V102 = SUB V97 V99
0x187: V103 = M[V102]
0x188: V104 = 0x1
0x18b: V105 = 0x20
0x18d: V106 = SUB 0x20 V99
0x18e: V107 = 0x100
0x191: V108 = EXP 0x100 V106
0x192: V109 = SUB V108 0x1
0x193: V110 = NOT V109
0x194: V111 = AND V110 V103
0x196: M[V102] = V111
0x197: V112 = 0x20
0x199: V113 = ADD 0x20 V102
---
Entry stack: [V11, 0x12f, V280, V77, V77, V97, V99]
Stack pops: 2
Stack additions: [V113, S0]
Exit stack: [V11, 0x12f, V280, V77, V77, V113, V99]

================================

Block 0x19c
[0x19c:0x1a9]
---
Predecessors: [0x16f, 0x183]
Successors: []
---
0x19c JUMPDEST
0x19d POP
0x19e SWAP3
0x19f POP
0x1a0 POP
0x1a1 POP
0x1a2 PUSH1 0x40
0x1a4 MLOAD
0x1a5 DUP1
0x1a6 SWAP2
0x1a7 SUB
0x1a8 SWAP1
0x1a9 RETURN
---
0x19c: JUMPDEST 
0x1a2: V114 = 0x40
0x1a4: V115 = M[0x40]
0x1a7: V116 = SUB S1 V115
0x1a9: RETURN V115 V116
---
Entry stack: [V11, 0x12f, V280, V77, V77, S1, V99]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x12f]

================================

Block 0x1aa
[0x1aa:0x1b1]
---
Predecessors: [0x41]
Successors: [0x1b2, 0x1b6]
---
0x1aa JUMPDEST
0x1ab CALLVALUE
0x1ac DUP1
0x1ad ISZERO
0x1ae PUSH2 0x1b6
0x1b1 JUMPI
---
0x1aa: JUMPDEST 
0x1ab: V117 = CALLVALUE
0x1ad: V118 = ISZERO V117
0x1ae: V119 = 0x1b6
0x1b1: JUMPI 0x1b6 V118
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V117]
Exit stack: [V11, V117]

================================

Block 0x1b2
[0x1b2:0x1b5]
---
Predecessors: [0x1aa]
Successors: []
---
0x1b2 PUSH1 0x0
0x1b4 DUP1
0x1b5 REVERT
---
0x1b2: V120 = 0x0
0x1b5: REVERT 0x0 0x0
---
Entry stack: [V11, V117]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V117]

================================

Block 0x1b6
[0x1b6:0x210]
---
Predecessors: [0x1aa]
Successors: [0x458]
---
0x1b6 JUMPDEST
0x1b7 POP
0x1b8 PUSH2 0x211
0x1bb PUSH1 0x4
0x1bd DUP1
0x1be CALLDATASIZE
0x1bf SUB
0x1c0 DUP2
0x1c1 ADD
0x1c2 SWAP1
0x1c3 DUP1
0x1c4 DUP1
0x1c5 CALLDATALOAD
0x1c6 SWAP1
0x1c7 PUSH1 0x20
0x1c9 ADD
0x1ca SWAP1
0x1cb DUP3
0x1cc ADD
0x1cd DUP1
0x1ce CALLDATALOAD
0x1cf SWAP1
0x1d0 PUSH1 0x20
0x1d2 ADD
0x1d3 SWAP1
0x1d4 DUP1
0x1d5 DUP1
0x1d6 PUSH1 0x1f
0x1d8 ADD
0x1d9 PUSH1 0x20
0x1db DUP1
0x1dc SWAP2
0x1dd DIV
0x1de MUL
0x1df PUSH1 0x20
0x1e1 ADD
0x1e2 PUSH1 0x40
0x1e4 MLOAD
0x1e5 SWAP1
0x1e6 DUP2
0x1e7 ADD
0x1e8 PUSH1 0x40
0x1ea MSTORE
0x1eb DUP1
0x1ec SWAP4
0x1ed SWAP3
0x1ee SWAP2
0x1ef SWAP1
0x1f0 DUP2
0x1f1 DUP2
0x1f2 MSTORE
0x1f3 PUSH1 0x20
0x1f5 ADD
0x1f6 DUP4
0x1f7 DUP4
0x1f8 DUP1
0x1f9 DUP3
0x1fa DUP5
0x1fb CALLDATACOPY
0x1fc DUP3
0x1fd ADD
0x1fe SWAP2
0x1ff POP
0x200 POP
0x201 POP
0x202 POP
0x203 POP
0x204 POP
0x205 SWAP2
0x206 SWAP3
0x207 SWAP2
0x208 SWAP3
0x209 SWAP1
0x20a POP
0x20b POP
0x20c POP
0x20d PUSH2 0x458
0x210 JUMP
---
0x1b6: JUMPDEST 
0x1b8: V121 = 0x211
0x1bb: V122 = 0x4
0x1be: V123 = CALLDATASIZE
0x1bf: V124 = SUB V123 0x4
0x1c1: V125 = ADD 0x4 V124
0x1c5: V126 = CALLDATALOAD 0x4
0x1c7: V127 = 0x20
0x1c9: V128 = ADD 0x20 0x4
0x1cc: V129 = ADD 0x4 V126
0x1ce: V130 = CALLDATALOAD V129
0x1d0: V131 = 0x20
0x1d2: V132 = ADD 0x20 V129
0x1d6: V133 = 0x1f
0x1d8: V134 = ADD 0x1f V130
0x1d9: V135 = 0x20
0x1dd: V136 = DIV V134 0x20
0x1de: V137 = MUL V136 0x20
0x1df: V138 = 0x20
0x1e1: V139 = ADD 0x20 V137
0x1e2: V140 = 0x40
0x1e4: V141 = M[0x40]
0x1e7: V142 = ADD V141 V139
0x1e8: V143 = 0x40
0x1ea: M[0x40] = V142
0x1f2: M[V141] = V130
0x1f3: V144 = 0x20
0x1f5: V145 = ADD 0x20 V141
0x1fb: CALLDATACOPY V145 V132 V130
0x1fd: V146 = ADD V145 V130
0x20d: V147 = 0x458
0x210: JUMP 0x458
---
Entry stack: [V11, V117]
Stack pops: 1
Stack additions: [0x211, V141]
Exit stack: [V11, 0x211, V141]

================================

Block 0x211
[0x211:0x212]
---
Predecessors: [0x56e]
Successors: []
---
0x211 JUMPDEST
0x212 STOP
---
0x211: JUMPDEST 
0x212: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x213
[0x213:0x21a]
---
Predecessors: [0x4c]
Successors: [0x21b, 0x21f]
---
0x213 JUMPDEST
0x214 CALLVALUE
0x215 DUP1
0x216 ISZERO
0x217 PUSH2 0x21f
0x21a JUMPI
---
0x213: JUMPDEST 
0x214: V148 = CALLVALUE
0x216: V149 = ISZERO V148
0x217: V150 = 0x21f
0x21a: JUMPI 0x21f V149
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V148]
Exit stack: [V11, V148]

================================

Block 0x21b
[0x21b:0x21e]
---
Predecessors: [0x213]
Successors: []
---
0x21b PUSH1 0x0
0x21d DUP1
0x21e REVERT
---
0x21b: V151 = 0x0
0x21e: REVERT 0x0 0x0
---
Entry stack: [V11, V148]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V148]

================================

Block 0x21f
[0x21f:0x227]
---
Predecessors: [0x213]
Successors: [0x57f]
---
0x21f JUMPDEST
0x220 POP
0x221 PUSH2 0x228
0x224 PUSH2 0x57f
0x227 JUMP
---
0x21f: JUMPDEST 
0x221: V152 = 0x228
0x224: V153 = 0x57f
0x227: JUMP 0x57f
---
Entry stack: [V11, V148]
Stack pops: 1
Stack additions: [0x228]
Exit stack: [V11, 0x228]

================================

Block 0x228
[0x228:0x24c]
---
Predecessors: [0x615]
Successors: [0x24d]
---
0x228 JUMPDEST
0x229 PUSH1 0x40
0x22b MLOAD
0x22c DUP1
0x22d DUP1
0x22e PUSH1 0x20
0x230 ADD
0x231 DUP3
0x232 DUP2
0x233 SUB
0x234 DUP3
0x235 MSTORE
0x236 DUP4
0x237 DUP2
0x238 DUP2
0x239 MLOAD
0x23a DUP2
0x23b MSTORE
0x23c PUSH1 0x20
0x23e ADD
0x23f SWAP2
0x240 POP
0x241 DUP1
0x242 MLOAD
0x243 SWAP1
0x244 PUSH1 0x20
0x246 ADD
0x247 SWAP1
0x248 DUP1
0x249 DUP4
0x24a DUP4
0x24b PUSH1 0x0
---
0x228: JUMPDEST 
0x229: V154 = 0x40
0x22b: V155 = M[0x40]
0x22e: V156 = 0x20
0x230: V157 = ADD 0x20 V155
0x233: V158 = SUB V157 V155
0x235: M[V155] = V158
0x239: V159 = M[V411]
0x23b: M[V157] = V159
0x23c: V160 = 0x20
0x23e: V161 = ADD 0x20 V157
0x242: V162 = M[V411]
0x244: V163 = 0x20
0x246: V164 = ADD 0x20 V411
0x24b: V165 = 0x0
---
Entry stack: [V11, 0x228, V411]
Stack pops: 1
Stack additions: [S0, V155, V155, V161, V164, V162, V162, V161, V164, 0x0]
Exit stack: [V11, 0x228, V411, V155, V155, V161, V164, V162, V162, V161, V164, 0x0]

================================

Block 0x24d
[0x24d:0x255]
---
Predecessors: [0x228, 0x256]
Successors: [0x256, 0x268]
---
0x24d JUMPDEST
0x24e DUP4
0x24f DUP2
0x250 LT
0x251 ISZERO
0x252 PUSH2 0x268
0x255 JUMPI
---
0x24d: JUMPDEST 
0x250: V166 = LT S0 V162
0x251: V167 = ISZERO V166
0x252: V168 = 0x268
0x255: JUMPI 0x268 V167
---
Entry stack: [V11, 0x228, V411, V155, V155, V161, V164, V162, V162, V161, V164, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x228, V411, V155, V155, V161, V164, V162, V162, V161, V164, S0]

================================

Block 0x256
[0x256:0x267]
---
Predecessors: [0x24d]
Successors: [0x24d]
---
0x256 DUP1
0x257 DUP3
0x258 ADD
0x259 MLOAD
0x25a DUP2
0x25b DUP5
0x25c ADD
0x25d MSTORE
0x25e PUSH1 0x20
0x260 DUP2
0x261 ADD
0x262 SWAP1
0x263 POP
0x264 PUSH2 0x24d
0x267 JUMP
---
0x258: V169 = ADD V164 S0
0x259: V170 = M[V169]
0x25c: V171 = ADD V161 S0
0x25d: M[V171] = V170
0x25e: V172 = 0x20
0x261: V173 = ADD S0 0x20
0x264: V174 = 0x24d
0x267: JUMP 0x24d
---
Entry stack: [V11, 0x228, V411, V155, V155, V161, V164, V162, V162, V161, V164, S0]
Stack pops: 3
Stack additions: [S2, S1, V173]
Exit stack: [V11, 0x228, V411, V155, V155, V161, V164, V162, V162, V161, V164, V173]

================================

Block 0x268
[0x268:0x27b]
---
Predecessors: [0x24d]
Successors: [0x27c, 0x295]
---
0x268 JUMPDEST
0x269 POP
0x26a POP
0x26b POP
0x26c POP
0x26d SWAP1
0x26e POP
0x26f SWAP1
0x270 DUP2
0x271 ADD
0x272 SWAP1
0x273 PUSH1 0x1f
0x275 AND
0x276 DUP1
0x277 ISZERO
0x278 PUSH2 0x295
0x27b JUMPI
---
0x268: JUMPDEST 
0x271: V175 = ADD V162 V161
0x273: V176 = 0x1f
0x275: V177 = AND 0x1f V162
0x277: V178 = ISZERO V177
0x278: V179 = 0x295
0x27b: JUMPI 0x295 V178
---
Entry stack: [V11, 0x228, V411, V155, V155, V161, V164, V162, V162, V161, V164, S0]
Stack pops: 7
Stack additions: [V175, V177]
Exit stack: [V11, 0x228, V411, V155, V155, V175, V177]

================================

Block 0x27c
[0x27c:0x294]
---
Predecessors: [0x268]
Successors: [0x295]
---
0x27c DUP1
0x27d DUP3
0x27e SUB
0x27f DUP1
0x280 MLOAD
0x281 PUSH1 0x1
0x283 DUP4
0x284 PUSH1 0x20
0x286 SUB
0x287 PUSH2 0x100
0x28a EXP
0x28b SUB
0x28c NOT
0x28d AND
0x28e DUP2
0x28f MSTORE
0x290 PUSH1 0x20
0x292 ADD
0x293 SWAP2
0x294 POP
---
0x27e: V180 = SUB V175 V177
0x280: V181 = M[V180]
0x281: V182 = 0x1
0x284: V183 = 0x20
0x286: V184 = SUB 0x20 V177
0x287: V185 = 0x100
0x28a: V186 = EXP 0x100 V184
0x28b: V187 = SUB V186 0x1
0x28c: V188 = NOT V187
0x28d: V189 = AND V188 V181
0x28f: M[V180] = V189
0x290: V190 = 0x20
0x292: V191 = ADD 0x20 V180
---
Entry stack: [V11, 0x228, V411, V155, V155, V175, V177]
Stack pops: 2
Stack additions: [V191, S0]
Exit stack: [V11, 0x228, V411, V155, V155, V191, V177]

================================

Block 0x295
[0x295:0x2a2]
---
Predecessors: [0x268, 0x27c]
Successors: []
---
0x295 JUMPDEST
0x296 POP
0x297 SWAP3
0x298 POP
0x299 POP
0x29a POP
0x29b PUSH1 0x40
0x29d MLOAD
0x29e DUP1
0x29f SWAP2
0x2a0 SUB
0x2a1 SWAP1
0x2a2 RETURN
---
0x295: JUMPDEST 
0x29b: V192 = 0x40
0x29d: V193 = M[0x40]
0x2a0: V194 = SUB S1 V193
0x2a2: RETURN V193 V194
---
Entry stack: [V11, 0x228, V411, V155, V155, S1, V177]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x228]

================================

Block 0x2a3
[0x2a3:0x2aa]
---
Predecessors: [0x57]
Successors: [0x2ab, 0x2af]
---
0x2a3 JUMPDEST
0x2a4 CALLVALUE
0x2a5 DUP1
0x2a6 ISZERO
0x2a7 PUSH2 0x2af
0x2aa JUMPI
---
0x2a3: JUMPDEST 
0x2a4: V195 = CALLVALUE
0x2a6: V196 = ISZERO V195
0x2a7: V197 = 0x2af
0x2aa: JUMPI 0x2af V196
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V195]
Exit stack: [V11, V195]

================================

Block 0x2ab
[0x2ab:0x2ae]
---
Predecessors: [0x2a3]
Successors: []
---
0x2ab PUSH1 0x0
0x2ad DUP1
0x2ae REVERT
---
0x2ab: V198 = 0x0
0x2ae: REVERT 0x0 0x0
---
Entry stack: [V11, V195]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V195]

================================

Block 0x2af
[0x2af:0x2b7]
---
Predecessors: [0x2a3]
Successors: [0x61d]
---
0x2af JUMPDEST
0x2b0 POP
0x2b1 PUSH2 0x2b8
0x2b4 PUSH2 0x61d
0x2b7 JUMP
---
0x2af: JUMPDEST 
0x2b1: V199 = 0x2b8
0x2b4: V200 = 0x61d
0x2b7: JUMP 0x61d
---
Entry stack: [V11, V195]
Stack pops: 1
Stack additions: [0x2b8]
Exit stack: [V11, 0x2b8]

================================

Block 0x2b8
[0x2b8:0x2f9]
---
Predecessors: [0x61d]
Successors: []
---
0x2b8 JUMPDEST
0x2b9 PUSH1 0x40
0x2bb MLOAD
0x2bc DUP1
0x2bd DUP3
0x2be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d3 AND
0x2d4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e9 AND
0x2ea DUP2
0x2eb MSTORE
0x2ec PUSH1 0x20
0x2ee ADD
0x2ef SWAP2
0x2f0 POP
0x2f1 POP
0x2f2 PUSH1 0x40
0x2f4 MLOAD
0x2f5 DUP1
0x2f6 SWAP2
0x2f7 SUB
0x2f8 SWAP1
0x2f9 RETURN
---
0x2b8: JUMPDEST 
0x2b9: V201 = 0x40
0x2bb: V202 = M[0x40]
0x2be: V203 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d3: V204 = AND 0xffffffffffffffffffffffffffffffffffffffff V462
0x2d4: V205 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e9: V206 = AND 0xffffffffffffffffffffffffffffffffffffffff V204
0x2eb: M[V202] = V206
0x2ec: V207 = 0x20
0x2ee: V208 = ADD 0x20 V202
0x2f2: V209 = 0x40
0x2f4: V210 = M[0x40]
0x2f7: V211 = SUB V208 V210
0x2f9: RETURN V210 V211
---
Entry stack: [V11, 0x2b8, V462]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x2b8]

================================

Block 0x2fa
[0x2fa:0x301]
---
Predecessors: [0x62]
Successors: [0x302, 0x306]
---
0x2fa JUMPDEST
0x2fb CALLVALUE
0x2fc DUP1
0x2fd ISZERO
0x2fe PUSH2 0x306
0x301 JUMPI
---
0x2fa: JUMPDEST 
0x2fb: V212 = CALLVALUE
0x2fd: V213 = ISZERO V212
0x2fe: V214 = 0x306
0x301: JUMPI 0x306 V213
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V212]
Exit stack: [V11, V212]

================================

Block 0x302
[0x302:0x305]
---
Predecessors: [0x2fa]
Successors: []
---
0x302 PUSH1 0x0
0x304 DUP1
0x305 REVERT
---
0x302: V215 = 0x0
0x305: REVERT 0x0 0x0
---
Entry stack: [V11, V212]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V212]

================================

Block 0x306
[0x306:0x33a]
---
Predecessors: [0x2fa]
Successors: [0x643]
---
0x306 JUMPDEST
0x307 POP
0x308 PUSH2 0x33b
0x30b PUSH1 0x4
0x30d DUP1
0x30e CALLDATASIZE
0x30f SUB
0x310 DUP2
0x311 ADD
0x312 SWAP1
0x313 DUP1
0x314 DUP1
0x315 CALLDATALOAD
0x316 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x32b AND
0x32c SWAP1
0x32d PUSH1 0x20
0x32f ADD
0x330 SWAP1
0x331 SWAP3
0x332 SWAP2
0x333 SWAP1
0x334 POP
0x335 POP
0x336 POP
0x337 PUSH2 0x643
0x33a JUMP
---
0x306: JUMPDEST 
0x308: V216 = 0x33b
0x30b: V217 = 0x4
0x30e: V218 = CALLDATASIZE
0x30f: V219 = SUB V218 0x4
0x311: V220 = ADD 0x4 V219
0x315: V221 = CALLDATALOAD 0x4
0x316: V222 = 0xffffffffffffffffffffffffffffffffffffffff
0x32b: V223 = AND 0xffffffffffffffffffffffffffffffffffffffff V221
0x32d: V224 = 0x20
0x32f: V225 = ADD 0x20 0x4
0x337: V226 = 0x643
0x33a: JUMP 0x643
---
Entry stack: [V11, V212]
Stack pops: 1
Stack additions: [0x33b, V223]
Exit stack: [V11, 0x33b, V223]

================================

Block 0x33b
[0x33b:0x350]
---
Predecessors: [0x643]
Successors: []
---
0x33b JUMPDEST
0x33c PUSH1 0x40
0x33e MLOAD
0x33f DUP1
0x340 DUP3
0x341 DUP2
0x342 MSTORE
0x343 PUSH1 0x20
0x345 ADD
0x346 SWAP2
0x347 POP
0x348 POP
0x349 PUSH1 0x40
0x34b MLOAD
0x34c DUP1
0x34d SWAP2
0x34e SUB
0x34f SWAP1
0x350 RETURN
---
0x33b: JUMPDEST 
0x33c: V227 = 0x40
0x33e: V228 = M[0x40]
0x342: M[V228] = V470
0x343: V229 = 0x20
0x345: V230 = ADD 0x20 V228
0x349: V231 = 0x40
0x34b: V232 = M[0x40]
0x34e: V233 = SUB V230 V232
0x350: RETURN V232 V233
---
Entry stack: [V11, 0x33b, V470]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x33b]

================================

Block 0x351
[0x351:0x358]
---
Predecessors: [0x6d]
Successors: [0x359, 0x35d]
---
0x351 JUMPDEST
0x352 CALLVALUE
0x353 DUP1
0x354 ISZERO
0x355 PUSH2 0x35d
0x358 JUMPI
---
0x351: JUMPDEST 
0x352: V234 = CALLVALUE
0x354: V235 = ISZERO V234
0x355: V236 = 0x35d
0x358: JUMPI 0x35d V235
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V234]
Exit stack: [V11, V234]

================================

Block 0x359
[0x359:0x35c]
---
Predecessors: [0x351]
Successors: []
---
0x359 PUSH1 0x0
0x35b DUP1
0x35c REVERT
---
0x359: V237 = 0x0
0x35c: REVERT 0x0 0x0
---
Entry stack: [V11, V234]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V234]

================================

Block 0x35d
[0x35d:0x39b]
---
Predecessors: [0x351]
Successors: [0x65b]
---
0x35d JUMPDEST
0x35e POP
0x35f PUSH2 0x39c
0x362 PUSH1 0x4
0x364 DUP1
0x365 CALLDATASIZE
0x366 SUB
0x367 DUP2
0x368 ADD
0x369 SWAP1
0x36a DUP1
0x36b DUP1
0x36c CALLDATALOAD
0x36d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x382 AND
0x383 SWAP1
0x384 PUSH1 0x20
0x386 ADD
0x387 SWAP1
0x388 SWAP3
0x389 SWAP2
0x38a SWAP1
0x38b DUP1
0x38c CALLDATALOAD
0x38d SWAP1
0x38e PUSH1 0x20
0x390 ADD
0x391 SWAP1
0x392 SWAP3
0x393 SWAP2
0x394 SWAP1
0x395 POP
0x396 POP
0x397 POP
0x398 PUSH2 0x65b
0x39b JUMP
---
0x35d: JUMPDEST 
0x35f: V238 = 0x39c
0x362: V239 = 0x4
0x365: V240 = CALLDATASIZE
0x366: V241 = SUB V240 0x4
0x368: V242 = ADD 0x4 V241
0x36c: V243 = CALLDATALOAD 0x4
0x36d: V244 = 0xffffffffffffffffffffffffffffffffffffffff
0x382: V245 = AND 0xffffffffffffffffffffffffffffffffffffffff V243
0x384: V246 = 0x20
0x386: V247 = ADD 0x20 0x4
0x38c: V248 = CALLDATALOAD 0x24
0x38e: V249 = 0x20
0x390: V250 = ADD 0x20 0x24
0x398: V251 = 0x65b
0x39b: JUMP 0x65b
---
Entry stack: [V11, V234]
Stack pops: 1
Stack additions: [0x39c, V245, V248]
Exit stack: [V11, 0x39c, V245, V248]

================================

Block 0x39c
[0x39c:0x39d]
---
Predecessors: [0x7ab]
Successors: []
---
0x39c JUMPDEST
0x39d STOP
---
0x39c: JUMPDEST 
0x39d: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x39e
[0x39e:0x3a5]
---
Predecessors: [0x78]
Successors: [0x7c2]
---
0x39e JUMPDEST
0x39f PUSH2 0x3a6
0x3a2 PUSH2 0x7c2
0x3a5 JUMP
---
0x39e: JUMPDEST 
0x39f: V252 = 0x3a6
0x3a2: V253 = 0x7c2
0x3a5: JUMP 0x7c2
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x3a6]
Exit stack: [V11, 0x3a6]

================================

Block 0x3a6
[0x3a6:0x3a7]
---
Predecessors: [0x82a]
Successors: []
---
0x3a6 JUMPDEST
0x3a7 STOP
---
0x3a6: JUMPDEST 
0x3a7: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3a8
[0x3a8:0x409]
---
Predecessors: [0xfa]
Successors: [0x40a, 0x450]
---
0x3a8 JUMPDEST
0x3a9 PUSH1 0x3
0x3ab PUSH1 0x20
0x3ad MSTORE
0x3ae DUP1
0x3af PUSH1 0x0
0x3b1 MSTORE
0x3b2 PUSH1 0x40
0x3b4 PUSH1 0x0
0x3b6 SHA3
0x3b7 PUSH1 0x0
0x3b9 SWAP2
0x3ba POP
0x3bb SWAP1
0x3bc POP
0x3bd DUP1
0x3be SLOAD
0x3bf PUSH1 0x1
0x3c1 DUP2
0x3c2 PUSH1 0x1
0x3c4 AND
0x3c5 ISZERO
0x3c6 PUSH2 0x100
0x3c9 MUL
0x3ca SUB
0x3cb AND
0x3cc PUSH1 0x2
0x3ce SWAP1
0x3cf DIV
0x3d0 DUP1
0x3d1 PUSH1 0x1f
0x3d3 ADD
0x3d4 PUSH1 0x20
0x3d6 DUP1
0x3d7 SWAP2
0x3d8 DIV
0x3d9 MUL
0x3da PUSH1 0x20
0x3dc ADD
0x3dd PUSH1 0x40
0x3df MLOAD
0x3e0 SWAP1
0x3e1 DUP2
0x3e2 ADD
0x3e3 PUSH1 0x40
0x3e5 MSTORE
0x3e6 DUP1
0x3e7 SWAP3
0x3e8 SWAP2
0x3e9 SWAP1
0x3ea DUP2
0x3eb DUP2
0x3ec MSTORE
0x3ed PUSH1 0x20
0x3ef ADD
0x3f0 DUP3
0x3f1 DUP1
0x3f2 SLOAD
0x3f3 PUSH1 0x1
0x3f5 DUP2
0x3f6 PUSH1 0x1
0x3f8 AND
0x3f9 ISZERO
0x3fa PUSH2 0x100
0x3fd MUL
0x3fe SUB
0x3ff AND
0x400 PUSH1 0x2
0x402 SWAP1
0x403 DIV
0x404 DUP1
0x405 ISZERO
0x406 PUSH2 0x450
0x409 JUMPI
---
0x3a8: JUMPDEST 
0x3a9: V254 = 0x3
0x3ab: V255 = 0x20
0x3ad: M[0x20] = 0x3
0x3af: V256 = 0x0
0x3b1: M[0x0] = V72
0x3b2: V257 = 0x40
0x3b4: V258 = 0x0
0x3b6: V259 = SHA3 0x0 0x40
0x3b7: V260 = 0x0
0x3be: V261 = S[V259]
0x3bf: V262 = 0x1
0x3c2: V263 = 0x1
0x3c4: V264 = AND 0x1 V261
0x3c5: V265 = ISZERO V264
0x3c6: V266 = 0x100
0x3c9: V267 = MUL 0x100 V265
0x3ca: V268 = SUB V267 0x1
0x3cb: V269 = AND V268 V261
0x3cc: V270 = 0x2
0x3cf: V271 = DIV V269 0x2
0x3d1: V272 = 0x1f
0x3d3: V273 = ADD 0x1f V271
0x3d4: V274 = 0x20
0x3d8: V275 = DIV V273 0x20
0x3d9: V276 = MUL V275 0x20
0x3da: V277 = 0x20
0x3dc: V278 = ADD 0x20 V276
0x3dd: V279 = 0x40
0x3df: V280 = M[0x40]
0x3e2: V281 = ADD V280 V278
0x3e3: V282 = 0x40
0x3e5: M[0x40] = V281
0x3ec: M[V280] = V271
0x3ed: V283 = 0x20
0x3ef: V284 = ADD 0x20 V280
0x3f2: V285 = S[V259]
0x3f3: V286 = 0x1
0x3f6: V287 = 0x1
0x3f8: V288 = AND 0x1 V285
0x3f9: V289 = ISZERO V288
0x3fa: V290 = 0x100
0x3fd: V291 = MUL 0x100 V289
0x3fe: V292 = SUB V291 0x1
0x3ff: V293 = AND V292 V285
0x400: V294 = 0x2
0x403: V295 = DIV V293 0x2
0x405: V296 = ISZERO V295
0x406: V297 = 0x450
0x409: JUMPI 0x450 V296
---
Entry stack: [V11, 0x12f, V72]
Stack pops: 1
Stack additions: [V280, V259, V271, V284, V259, V295]
Exit stack: [V11, 0x12f, V280, V259, V271, V284, V259, V295]

================================

Block 0x40a
[0x40a:0x411]
---
Predecessors: [0x3a8]
Successors: [0x412, 0x425]
---
0x40a DUP1
0x40b PUSH1 0x1f
0x40d LT
0x40e PUSH2 0x425
0x411 JUMPI
---
0x40b: V298 = 0x1f
0x40d: V299 = LT 0x1f V295
0x40e: V300 = 0x425
0x411: JUMPI 0x425 V299
---
Entry stack: [V11, 0x12f, V280, V259, V271, V284, V259, V295]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x12f, V280, V259, V271, V284, V259, V295]

================================

Block 0x412
[0x412:0x424]
---
Predecessors: [0x40a]
Successors: [0x450]
---
0x412 PUSH2 0x100
0x415 DUP1
0x416 DUP4
0x417 SLOAD
0x418 DIV
0x419 MUL
0x41a DUP4
0x41b MSTORE
0x41c SWAP2
0x41d PUSH1 0x20
0x41f ADD
0x420 SWAP2
0x421 PUSH2 0x450
0x424 JUMP
---
0x412: V301 = 0x100
0x417: V302 = S[V259]
0x418: V303 = DIV V302 0x100
0x419: V304 = MUL V303 0x100
0x41b: M[V284] = V304
0x41d: V305 = 0x20
0x41f: V306 = ADD 0x20 V284
0x421: V307 = 0x450
0x424: JUMP 0x450
---
Entry stack: [V11, 0x12f, V280, V259, V271, V284, V259, V295]
Stack pops: 3
Stack additions: [V306, S1, S0]
Exit stack: [V11, 0x12f, V280, V259, V271, V306, V259, V295]

================================

Block 0x425
[0x425:0x432]
---
Predecessors: [0x40a]
Successors: [0x433]
---
0x425 JUMPDEST
0x426 DUP3
0x427 ADD
0x428 SWAP2
0x429 SWAP1
0x42a PUSH1 0x0
0x42c MSTORE
0x42d PUSH1 0x20
0x42f PUSH1 0x0
0x431 SHA3
0x432 SWAP1
---
0x425: JUMPDEST 
0x427: V308 = ADD V284 V295
0x42a: V309 = 0x0
0x42c: M[0x0] = V259
0x42d: V310 = 0x20
0x42f: V311 = 0x0
0x431: V312 = SHA3 0x0 0x20
---
Entry stack: [V11, 0x12f, V280, V259, V271, V284, V259, V295]
Stack pops: 3
Stack additions: [V308, V312, S2]
Exit stack: [V11, 0x12f, V280, V259, V271, V308, V312, V284]

================================

Block 0x433
[0x433:0x446]
---
Predecessors: [0x425, 0x433]
Successors: [0x433, 0x447]
---
0x433 JUMPDEST
0x434 DUP2
0x435 SLOAD
0x436 DUP2
0x437 MSTORE
0x438 SWAP1
0x439 PUSH1 0x1
0x43b ADD
0x43c SWAP1
0x43d PUSH1 0x20
0x43f ADD
0x440 DUP1
0x441 DUP4
0x442 GT
0x443 PUSH2 0x433
0x446 JUMPI
---
0x433: JUMPDEST 
0x435: V313 = S[S1]
0x437: M[S0] = V313
0x439: V314 = 0x1
0x43b: V315 = ADD 0x1 S1
0x43d: V316 = 0x20
0x43f: V317 = ADD 0x20 S0
0x442: V318 = GT V308 V317
0x443: V319 = 0x433
0x446: JUMPI 0x433 V318
---
Entry stack: [V11, 0x12f, V280, V259, V271, V308, S1, S0]
Stack pops: 3
Stack additions: [S2, V315, V317]
Exit stack: [V11, 0x12f, V280, V259, V271, V308, V315, V317]

================================

Block 0x447
[0x447:0x44f]
---
Predecessors: [0x433]
Successors: [0x450]
---
0x447 DUP3
0x448 SWAP1
0x449 SUB
0x44a PUSH1 0x1f
0x44c AND
0x44d DUP3
0x44e ADD
0x44f SWAP2
---
0x449: V320 = SUB V317 V308
0x44a: V321 = 0x1f
0x44c: V322 = AND 0x1f V320
0x44e: V323 = ADD V308 V322
---
Entry stack: [V11, 0x12f, V280, V259, V271, V308, V315, V317]
Stack pops: 3
Stack additions: [V323, S1, S2]
Exit stack: [V11, 0x12f, V280, V259, V271, V323, V315, V308]

================================

Block 0x450
[0x450:0x457]
---
Predecessors: [0x3a8, 0x412, 0x447]
Successors: [0x12f]
---
0x450 JUMPDEST
0x451 POP
0x452 POP
0x453 POP
0x454 POP
0x455 POP
0x456 DUP2
0x457 JUMP
---
0x450: JUMPDEST 
0x457: JUMP 0x12f
---
Entry stack: [V11, 0x12f, V280, V259, V271, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V11, 0x12f, V280]

================================

Block 0x458
[0x458:0x4aa]
---
Predecessors: [0x1b6]
Successors: [0x8e5]
---
0x458 JUMPDEST
0x459 DUP1
0x45a PUSH1 0x3
0x45c PUSH1 0x0
0x45e CALLER
0x45f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x474 AND
0x475 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x48a AND
0x48b DUP2
0x48c MSTORE
0x48d PUSH1 0x20
0x48f ADD
0x490 SWAP1
0x491 DUP2
0x492 MSTORE
0x493 PUSH1 0x20
0x495 ADD
0x496 PUSH1 0x0
0x498 SHA3
0x499 SWAP1
0x49a DUP1
0x49b MLOAD
0x49c SWAP1
0x49d PUSH1 0x20
0x49f ADD
0x4a0 SWAP1
0x4a1 PUSH2 0x4ab
0x4a4 SWAP3
0x4a5 SWAP2
0x4a6 SWAP1
0x4a7 PUSH2 0x8e5
0x4aa JUMP
---
0x458: JUMPDEST 
0x45a: V324 = 0x3
0x45c: V325 = 0x0
0x45e: V326 = CALLER
0x45f: V327 = 0xffffffffffffffffffffffffffffffffffffffff
0x474: V328 = AND 0xffffffffffffffffffffffffffffffffffffffff V326
0x475: V329 = 0xffffffffffffffffffffffffffffffffffffffff
0x48a: V330 = AND 0xffffffffffffffffffffffffffffffffffffffff V328
0x48c: M[0x0] = V330
0x48d: V331 = 0x20
0x48f: V332 = ADD 0x20 0x0
0x492: M[0x20] = 0x3
0x493: V333 = 0x20
0x495: V334 = ADD 0x20 0x20
0x496: V335 = 0x0
0x498: V336 = SHA3 0x0 0x40
0x49b: V337 = M[V141]
0x49d: V338 = 0x20
0x49f: V339 = ADD 0x20 V141
0x4a1: V340 = 0x4ab
0x4a7: V341 = 0x8e5
0x4aa: JUMP 0x8e5
---
Entry stack: [V11, 0x211, V141]
Stack pops: 1
Stack additions: [S0, 0x4ab, V336, V339, V337]
Exit stack: [V11, 0x211, V141, 0x4ab, V336, V339, V337]

================================

Block 0x4ab
[0x4ab:0x525]
---
Predecessors: [0x961]
Successors: [0x526]
---
0x4ab JUMPDEST
0x4ac POP
0x4ad PUSH32 0xafc90461c8da83c58de866782e4815ad9309a0b708d121057a62051db94302d1
0x4ce CALLER
0x4cf DUP3
0x4d0 PUSH1 0x40
0x4d2 MLOAD
0x4d3 DUP1
0x4d4 DUP4
0x4d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ea AND
0x4eb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x500 AND
0x501 DUP2
0x502 MSTORE
0x503 PUSH1 0x20
0x505 ADD
0x506 DUP1
0x507 PUSH1 0x20
0x509 ADD
0x50a DUP3
0x50b DUP2
0x50c SUB
0x50d DUP3
0x50e MSTORE
0x50f DUP4
0x510 DUP2
0x511 DUP2
0x512 MLOAD
0x513 DUP2
0x514 MSTORE
0x515 PUSH1 0x20
0x517 ADD
0x518 SWAP2
0x519 POP
0x51a DUP1
0x51b MLOAD
0x51c SWAP1
0x51d PUSH1 0x20
0x51f ADD
0x520 SWAP1
0x521 DUP1
0x522 DUP4
0x523 DUP4
0x524 PUSH1 0x0
---
0x4ab: JUMPDEST 
0x4ad: V342 = 0xafc90461c8da83c58de866782e4815ad9309a0b708d121057a62051db94302d1
0x4ce: V343 = CALLER
0x4d0: V344 = 0x40
0x4d2: V345 = M[0x40]
0x4d5: V346 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ea: V347 = AND 0xffffffffffffffffffffffffffffffffffffffff V343
0x4eb: V348 = 0xffffffffffffffffffffffffffffffffffffffff
0x500: V349 = AND 0xffffffffffffffffffffffffffffffffffffffff V347
0x502: M[V345] = V349
0x503: V350 = 0x20
0x505: V351 = ADD 0x20 V345
0x507: V352 = 0x20
0x509: V353 = ADD 0x20 V351
0x50c: V354 = SUB V353 V345
0x50e: M[V351] = V354
0x512: V355 = M[V141]
0x514: M[V353] = V355
0x515: V356 = 0x20
0x517: V357 = ADD 0x20 V353
0x51b: V358 = M[V141]
0x51d: V359 = 0x20
0x51f: V360 = ADD 0x20 V141
0x524: V361 = 0x0
---
Entry stack: [V11, 0x211, V141, V336]
Stack pops: 2
Stack additions: [S1, 0xafc90461c8da83c58de866782e4815ad9309a0b708d121057a62051db94302d1, V343, S1, V345, V351, V357, V360, V358, V358, V357, V360, 0x0]
Exit stack: [V11, 0x211, V141, 0xafc90461c8da83c58de866782e4815ad9309a0b708d121057a62051db94302d1, V343, V141, V345, V351, V357, V360, V358, V358, V357, V360, 0x0]

================================

Block 0x526
[0x526:0x52e]
---
Predecessors: [0x4ab, 0x52f]
Successors: [0x52f, 0x541]
---
0x526 JUMPDEST
0x527 DUP4
0x528 DUP2
0x529 LT
0x52a ISZERO
0x52b PUSH2 0x541
0x52e JUMPI
---
0x526: JUMPDEST 
0x529: V362 = LT S0 V358
0x52a: V363 = ISZERO V362
0x52b: V364 = 0x541
0x52e: JUMPI 0x541 V363
---
Entry stack: [V11, 0x211, V141, 0xafc90461c8da83c58de866782e4815ad9309a0b708d121057a62051db94302d1, V343, V141, V345, V351, V357, V360, V358, V358, V357, V360, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x211, V141, 0xafc90461c8da83c58de866782e4815ad9309a0b708d121057a62051db94302d1, V343, V141, V345, V351, V357, V360, V358, V358, V357, V360, S0]

================================

Block 0x52f
[0x52f:0x540]
---
Predecessors: [0x526]
Successors: [0x526]
---
0x52f DUP1
0x530 DUP3
0x531 ADD
0x532 MLOAD
0x533 DUP2
0x534 DUP5
0x535 ADD
0x536 MSTORE
0x537 PUSH1 0x20
0x539 DUP2
0x53a ADD
0x53b SWAP1
0x53c POP
0x53d PUSH2 0x526
0x540 JUMP
---
0x531: V365 = ADD V360 S0
0x532: V366 = M[V365]
0x535: V367 = ADD V357 S0
0x536: M[V367] = V366
0x537: V368 = 0x20
0x53a: V369 = ADD S0 0x20
0x53d: V370 = 0x526
0x540: JUMP 0x526
---
Entry stack: [V11, 0x211, V141, 0xafc90461c8da83c58de866782e4815ad9309a0b708d121057a62051db94302d1, V343, V141, V345, V351, V357, V360, V358, V358, V357, V360, S0]
Stack pops: 3
Stack additions: [S2, S1, V369]
Exit stack: [V11, 0x211, V141, 0xafc90461c8da83c58de866782e4815ad9309a0b708d121057a62051db94302d1, V343, V141, V345, V351, V357, V360, V358, V358, V357, V360, V369]

================================

Block 0x541
[0x541:0x554]
---
Predecessors: [0x526]
Successors: [0x555, 0x56e]
---
0x541 JUMPDEST
0x542 POP
0x543 POP
0x544 POP
0x545 POP
0x546 SWAP1
0x547 POP
0x548 SWAP1
0x549 DUP2
0x54a ADD
0x54b SWAP1
0x54c PUSH1 0x1f
0x54e AND
0x54f DUP1
0x550 ISZERO
0x551 PUSH2 0x56e
0x554 JUMPI
---
0x541: JUMPDEST 
0x54a: V371 = ADD V358 V357
0x54c: V372 = 0x1f
0x54e: V373 = AND 0x1f V358
0x550: V374 = ISZERO V373
0x551: V375 = 0x56e
0x554: JUMPI 0x56e V374
---
Entry stack: [V11, 0x211, V141, 0xafc90461c8da83c58de866782e4815ad9309a0b708d121057a62051db94302d1, V343, V141, V345, V351, V357, V360, V358, V358, V357, V360, S0]
Stack pops: 7
Stack additions: [V371, V373]
Exit stack: [V11, 0x211, V141, 0xafc90461c8da83c58de866782e4815ad9309a0b708d121057a62051db94302d1, V343, V141, V345, V351, V371, V373]

================================

Block 0x555
[0x555:0x56d]
---
Predecessors: [0x541]
Successors: [0x56e]
---
0x555 DUP1
0x556 DUP3
0x557 SUB
0x558 DUP1
0x559 MLOAD
0x55a PUSH1 0x1
0x55c DUP4
0x55d PUSH1 0x20
0x55f SUB
0x560 PUSH2 0x100
0x563 EXP
0x564 SUB
0x565 NOT
0x566 AND
0x567 DUP2
0x568 MSTORE
0x569 PUSH1 0x20
0x56b ADD
0x56c SWAP2
0x56d POP
---
0x557: V376 = SUB V371 V373
0x559: V377 = M[V376]
0x55a: V378 = 0x1
0x55d: V379 = 0x20
0x55f: V380 = SUB 0x20 V373
0x560: V381 = 0x100
0x563: V382 = EXP 0x100 V380
0x564: V383 = SUB V382 0x1
0x565: V384 = NOT V383
0x566: V385 = AND V384 V377
0x568: M[V376] = V385
0x569: V386 = 0x20
0x56b: V387 = ADD 0x20 V376
---
Entry stack: [V11, 0x211, V141, 0xafc90461c8da83c58de866782e4815ad9309a0b708d121057a62051db94302d1, V343, V141, V345, V351, V371, V373]
Stack pops: 2
Stack additions: [V387, S0]
Exit stack: [V11, 0x211, V141, 0xafc90461c8da83c58de866782e4815ad9309a0b708d121057a62051db94302d1, V343, V141, V345, V351, V387, V373]

================================

Block 0x56e
[0x56e:0x57e]
---
Predecessors: [0x541, 0x555]
Successors: [0x211]
---
0x56e JUMPDEST
0x56f POP
0x570 SWAP4
0x571 POP
0x572 POP
0x573 POP
0x574 POP
0x575 PUSH1 0x40
0x577 MLOAD
0x578 DUP1
0x579 SWAP2
0x57a SUB
0x57b SWAP1
0x57c LOG1
0x57d POP
0x57e JUMP
---
0x56e: JUMPDEST 
0x575: V388 = 0x40
0x577: V389 = M[0x40]
0x57a: V390 = SUB S1 V389
0x57c: LOG V389 V390 0xafc90461c8da83c58de866782e4815ad9309a0b708d121057a62051db94302d1
0x57e: JUMP 0x211
---
Entry stack: [V11, 0x211, V141, 0xafc90461c8da83c58de866782e4815ad9309a0b708d121057a62051db94302d1, V343, V141, V345, V351, S1, V373]
Stack pops: 9
Stack additions: []
Exit stack: [V11]

================================

Block 0x57f
[0x57f:0x5ce]
---
Predecessors: [0x21f]
Successors: [0x5cf, 0x615]
---
0x57f JUMPDEST
0x580 PUSH1 0x0
0x582 DUP1
0x583 SLOAD
0x584 PUSH1 0x1
0x586 DUP2
0x587 PUSH1 0x1
0x589 AND
0x58a ISZERO
0x58b PUSH2 0x100
0x58e MUL
0x58f SUB
0x590 AND
0x591 PUSH1 0x2
0x593 SWAP1
0x594 DIV
0x595 DUP1
0x596 PUSH1 0x1f
0x598 ADD
0x599 PUSH1 0x20
0x59b DUP1
0x59c SWAP2
0x59d DIV
0x59e MUL
0x59f PUSH1 0x20
0x5a1 ADD
0x5a2 PUSH1 0x40
0x5a4 MLOAD
0x5a5 SWAP1
0x5a6 DUP2
0x5a7 ADD
0x5a8 PUSH1 0x40
0x5aa MSTORE
0x5ab DUP1
0x5ac SWAP3
0x5ad SWAP2
0x5ae SWAP1
0x5af DUP2
0x5b0 DUP2
0x5b1 MSTORE
0x5b2 PUSH1 0x20
0x5b4 ADD
0x5b5 DUP3
0x5b6 DUP1
0x5b7 SLOAD
0x5b8 PUSH1 0x1
0x5ba DUP2
0x5bb PUSH1 0x1
0x5bd AND
0x5be ISZERO
0x5bf PUSH2 0x100
0x5c2 MUL
0x5c3 SUB
0x5c4 AND
0x5c5 PUSH1 0x2
0x5c7 SWAP1
0x5c8 DIV
0x5c9 DUP1
0x5ca ISZERO
0x5cb PUSH2 0x615
0x5ce JUMPI
---
0x57f: JUMPDEST 
0x580: V391 = 0x0
0x583: V392 = S[0x0]
0x584: V393 = 0x1
0x587: V394 = 0x1
0x589: V395 = AND 0x1 V392
0x58a: V396 = ISZERO V395
0x58b: V397 = 0x100
0x58e: V398 = MUL 0x100 V396
0x58f: V399 = SUB V398 0x1
0x590: V400 = AND V399 V392
0x591: V401 = 0x2
0x594: V402 = DIV V400 0x2
0x596: V403 = 0x1f
0x598: V404 = ADD 0x1f V402
0x599: V405 = 0x20
0x59d: V406 = DIV V404 0x20
0x59e: V407 = MUL V406 0x20
0x59f: V408 = 0x20
0x5a1: V409 = ADD 0x20 V407
0x5a2: V410 = 0x40
0x5a4: V411 = M[0x40]
0x5a7: V412 = ADD V411 V409
0x5a8: V413 = 0x40
0x5aa: M[0x40] = V412
0x5b1: M[V411] = V402
0x5b2: V414 = 0x20
0x5b4: V415 = ADD 0x20 V411
0x5b7: V416 = S[0x0]
0x5b8: V417 = 0x1
0x5bb: V418 = 0x1
0x5bd: V419 = AND 0x1 V416
0x5be: V420 = ISZERO V419
0x5bf: V421 = 0x100
0x5c2: V422 = MUL 0x100 V420
0x5c3: V423 = SUB V422 0x1
0x5c4: V424 = AND V423 V416
0x5c5: V425 = 0x2
0x5c8: V426 = DIV V424 0x2
0x5ca: V427 = ISZERO V426
0x5cb: V428 = 0x615
0x5ce: JUMPI 0x615 V427
---
Entry stack: [V11, 0x228]
Stack pops: 0
Stack additions: [V411, 0x0, V402, V415, 0x0, V426]
Exit stack: [V11, 0x228, V411, 0x0, V402, V415, 0x0, V426]

================================

Block 0x5cf
[0x5cf:0x5d6]
---
Predecessors: [0x57f]
Successors: [0x5d7, 0x5ea]
---
0x5cf DUP1
0x5d0 PUSH1 0x1f
0x5d2 LT
0x5d3 PUSH2 0x5ea
0x5d6 JUMPI
---
0x5d0: V429 = 0x1f
0x5d2: V430 = LT 0x1f V426
0x5d3: V431 = 0x5ea
0x5d6: JUMPI 0x5ea V430
---
Entry stack: [V11, 0x228, V411, 0x0, V402, V415, 0x0, V426]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x228, V411, 0x0, V402, V415, 0x0, V426]

================================

Block 0x5d7
[0x5d7:0x5e9]
---
Predecessors: [0x5cf]
Successors: [0x615]
---
0x5d7 PUSH2 0x100
0x5da DUP1
0x5db DUP4
0x5dc SLOAD
0x5dd DIV
0x5de MUL
0x5df DUP4
0x5e0 MSTORE
0x5e1 SWAP2
0x5e2 PUSH1 0x20
0x5e4 ADD
0x5e5 SWAP2
0x5e6 PUSH2 0x615
0x5e9 JUMP
---
0x5d7: V432 = 0x100
0x5dc: V433 = S[0x0]
0x5dd: V434 = DIV V433 0x100
0x5de: V435 = MUL V434 0x100
0x5e0: M[V415] = V435
0x5e2: V436 = 0x20
0x5e4: V437 = ADD 0x20 V415
0x5e6: V438 = 0x615
0x5e9: JUMP 0x615
---
Entry stack: [V11, 0x228, V411, 0x0, V402, V415, 0x0, V426]
Stack pops: 3
Stack additions: [V437, S1, S0]
Exit stack: [V11, 0x228, V411, 0x0, V402, V437, 0x0, V426]

================================

Block 0x5ea
[0x5ea:0x5f7]
---
Predecessors: [0x5cf]
Successors: [0x5f8]
---
0x5ea JUMPDEST
0x5eb DUP3
0x5ec ADD
0x5ed SWAP2
0x5ee SWAP1
0x5ef PUSH1 0x0
0x5f1 MSTORE
0x5f2 PUSH1 0x20
0x5f4 PUSH1 0x0
0x5f6 SHA3
0x5f7 SWAP1
---
0x5ea: JUMPDEST 
0x5ec: V439 = ADD V415 V426
0x5ef: V440 = 0x0
0x5f1: M[0x0] = 0x0
0x5f2: V441 = 0x20
0x5f4: V442 = 0x0
0x5f6: V443 = SHA3 0x0 0x20
---
Entry stack: [V11, 0x228, V411, 0x0, V402, V415, 0x0, V426]
Stack pops: 3
Stack additions: [V439, V443, S2]
Exit stack: [V11, 0x228, V411, 0x0, V402, V439, V443, V415]

================================

Block 0x5f8
[0x5f8:0x60b]
---
Predecessors: [0x5ea, 0x5f8]
Successors: [0x5f8, 0x60c]
---
0x5f8 JUMPDEST
0x5f9 DUP2
0x5fa SLOAD
0x5fb DUP2
0x5fc MSTORE
0x5fd SWAP1
0x5fe PUSH1 0x1
0x600 ADD
0x601 SWAP1
0x602 PUSH1 0x20
0x604 ADD
0x605 DUP1
0x606 DUP4
0x607 GT
0x608 PUSH2 0x5f8
0x60b JUMPI
---
0x5f8: JUMPDEST 
0x5fa: V444 = S[S1]
0x5fc: M[S0] = V444
0x5fe: V445 = 0x1
0x600: V446 = ADD 0x1 S1
0x602: V447 = 0x20
0x604: V448 = ADD 0x20 S0
0x607: V449 = GT V439 V448
0x608: V450 = 0x5f8
0x60b: JUMPI 0x5f8 V449
---
Entry stack: [V11, 0x228, V411, 0x0, V402, V439, S1, S0]
Stack pops: 3
Stack additions: [S2, V446, V448]
Exit stack: [V11, 0x228, V411, 0x0, V402, V439, V446, V448]

================================

Block 0x60c
[0x60c:0x614]
---
Predecessors: [0x5f8]
Successors: [0x615]
---
0x60c DUP3
0x60d SWAP1
0x60e SUB
0x60f PUSH1 0x1f
0x611 AND
0x612 DUP3
0x613 ADD
0x614 SWAP2
---
0x60e: V451 = SUB V448 V439
0x60f: V452 = 0x1f
0x611: V453 = AND 0x1f V451
0x613: V454 = ADD V439 V453
---
Entry stack: [V11, 0x228, V411, 0x0, V402, V439, V446, V448]
Stack pops: 3
Stack additions: [V454, S1, S2]
Exit stack: [V11, 0x228, V411, 0x0, V402, V454, V446, V439]

================================

Block 0x615
[0x615:0x61c]
---
Predecessors: [0x57f, 0x5d7, 0x60c]
Successors: [0x228]
---
0x615 JUMPDEST
0x616 POP
0x617 POP
0x618 POP
0x619 POP
0x61a POP
0x61b DUP2
0x61c JUMP
---
0x615: JUMPDEST 
0x61c: JUMP 0x228
---
Entry stack: [V11, 0x228, V411, 0x0, V402, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V11, 0x228, V411]

================================

Block 0x61d
[0x61d:0x642]
---
Predecessors: [0x2af]
Successors: [0x2b8]
---
0x61d JUMPDEST
0x61e PUSH1 0x1
0x620 PUSH1 0x0
0x622 SWAP1
0x623 SLOAD
0x624 SWAP1
0x625 PUSH2 0x100
0x628 EXP
0x629 SWAP1
0x62a DIV
0x62b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x640 AND
0x641 DUP2
0x642 JUMP
---
0x61d: JUMPDEST 
0x61e: V455 = 0x1
0x620: V456 = 0x0
0x623: V457 = S[0x1]
0x625: V458 = 0x100
0x628: V459 = EXP 0x100 0x0
0x62a: V460 = DIV V457 0x1
0x62b: V461 = 0xffffffffffffffffffffffffffffffffffffffff
0x640: V462 = AND 0xffffffffffffffffffffffffffffffffffffffff V460
0x642: JUMP 0x2b8
---
Entry stack: [V11, 0x2b8]
Stack pops: 1
Stack additions: [S0, V462]
Exit stack: [V11, 0x2b8, V462]

================================

Block 0x643
[0x643:0x65a]
---
Predecessors: [0x306]
Successors: [0x33b]
---
0x643 JUMPDEST
0x644 PUSH1 0x2
0x646 PUSH1 0x20
0x648 MSTORE
0x649 DUP1
0x64a PUSH1 0x0
0x64c MSTORE
0x64d PUSH1 0x40
0x64f PUSH1 0x0
0x651 SHA3
0x652 PUSH1 0x0
0x654 SWAP2
0x655 POP
0x656 SWAP1
0x657 POP
0x658 SLOAD
0x659 DUP2
0x65a JUMP
---
0x643: JUMPDEST 
0x644: V463 = 0x2
0x646: V464 = 0x20
0x648: M[0x20] = 0x2
0x64a: V465 = 0x0
0x64c: M[0x0] = V223
0x64d: V466 = 0x40
0x64f: V467 = 0x0
0x651: V468 = SHA3 0x0 0x40
0x652: V469 = 0x0
0x658: V470 = S[V468]
0x65a: JUMP 0x33b
---
Entry stack: [V11, 0x33b, V223]
Stack pops: 2
Stack additions: [S1, V470]
Exit stack: [V11, 0x33b, V470]

================================

Block 0x65b
[0x65b:0x6b4]
---
Predecessors: [0x35d]
Successors: [0x6b5, 0x6b9]
---
0x65b JUMPDEST
0x65c PUSH1 0x0
0x65e PUSH1 0x1
0x660 PUSH1 0x0
0x662 SWAP1
0x663 SLOAD
0x664 SWAP1
0x665 PUSH2 0x100
0x668 EXP
0x669 SWAP1
0x66a DIV
0x66b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x680 AND
0x681 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x696 AND
0x697 CALLER
0x698 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6ad AND
0x6ae EQ
0x6af ISZERO
0x6b0 ISZERO
0x6b1 PUSH2 0x6b9
0x6b4 JUMPI
---
0x65b: JUMPDEST 
0x65c: V471 = 0x0
0x65e: V472 = 0x1
0x660: V473 = 0x0
0x663: V474 = S[0x1]
0x665: V475 = 0x100
0x668: V476 = EXP 0x100 0x0
0x66a: V477 = DIV V474 0x1
0x66b: V478 = 0xffffffffffffffffffffffffffffffffffffffff
0x680: V479 = AND 0xffffffffffffffffffffffffffffffffffffffff V477
0x681: V480 = 0xffffffffffffffffffffffffffffffffffffffff
0x696: V481 = AND 0xffffffffffffffffffffffffffffffffffffffff V479
0x697: V482 = CALLER
0x698: V483 = 0xffffffffffffffffffffffffffffffffffffffff
0x6ad: V484 = AND 0xffffffffffffffffffffffffffffffffffffffff V482
0x6ae: V485 = EQ V484 V481
0x6af: V486 = ISZERO V485
0x6b0: V487 = ISZERO V486
0x6b1: V488 = 0x6b9
0x6b4: JUMPI 0x6b9 V487
---
Entry stack: [V11, 0x39c, V245, V248]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x39c, V245, V248, 0x0]

================================

Block 0x6b5
[0x6b5:0x6b8]
---
Predecessors: [0x65b]
Successors: []
---
0x6b5 PUSH1 0x0
0x6b7 DUP1
0x6b8 REVERT
---
0x6b5: V489 = 0x0
0x6b8: REVERT 0x0 0x0
---
Entry stack: [V11, 0x39c, V245, V248, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x39c, V245, V248, 0x0]

================================

Block 0x6b9
[0x6b9:0x77c]
---
Predecessors: [0x65b]
Successors: [0x77d, 0x781]
---
0x6b9 JUMPDEST
0x6ba DUP3
0x6bb SWAP1
0x6bc POP
0x6bd DUP1
0x6be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6d3 AND
0x6d4 PUSH4 0xa9059cbb
0x6d9 PUSH1 0x1
0x6db PUSH1 0x0
0x6dd SWAP1
0x6de SLOAD
0x6df SWAP1
0x6e0 PUSH2 0x100
0x6e3 EXP
0x6e4 SWAP1
0x6e5 DIV
0x6e6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6fb AND
0x6fc DUP5
0x6fd PUSH1 0x40
0x6ff MLOAD
0x700 DUP4
0x701 PUSH4 0xffffffff
0x706 AND
0x707 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x725 MUL
0x726 DUP2
0x727 MSTORE
0x728 PUSH1 0x4
0x72a ADD
0x72b DUP1
0x72c DUP4
0x72d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x742 AND
0x743 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x758 AND
0x759 DUP2
0x75a MSTORE
0x75b PUSH1 0x20
0x75d ADD
0x75e DUP3
0x75f DUP2
0x760 MSTORE
0x761 PUSH1 0x20
0x763 ADD
0x764 SWAP3
0x765 POP
0x766 POP
0x767 POP
0x768 PUSH1 0x20
0x76a PUSH1 0x40
0x76c MLOAD
0x76d DUP1
0x76e DUP4
0x76f SUB
0x770 DUP2
0x771 PUSH1 0x0
0x773 DUP8
0x774 DUP1
0x775 EXTCODESIZE
0x776 ISZERO
0x777 DUP1
0x778 ISZERO
0x779 PUSH2 0x781
0x77c JUMPI
---
0x6b9: JUMPDEST 
0x6be: V490 = 0xffffffffffffffffffffffffffffffffffffffff
0x6d3: V491 = AND 0xffffffffffffffffffffffffffffffffffffffff V245
0x6d4: V492 = 0xa9059cbb
0x6d9: V493 = 0x1
0x6db: V494 = 0x0
0x6de: V495 = S[0x1]
0x6e0: V496 = 0x100
0x6e3: V497 = EXP 0x100 0x0
0x6e5: V498 = DIV V495 0x1
0x6e6: V499 = 0xffffffffffffffffffffffffffffffffffffffff
0x6fb: V500 = AND 0xffffffffffffffffffffffffffffffffffffffff V498
0x6fd: V501 = 0x40
0x6ff: V502 = M[0x40]
0x701: V503 = 0xffffffff
0x706: V504 = AND 0xffffffff 0xa9059cbb
0x707: V505 = 0x100000000000000000000000000000000000000000000000000000000
0x725: V506 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x727: M[V502] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x728: V507 = 0x4
0x72a: V508 = ADD 0x4 V502
0x72d: V509 = 0xffffffffffffffffffffffffffffffffffffffff
0x742: V510 = AND 0xffffffffffffffffffffffffffffffffffffffff V500
0x743: V511 = 0xffffffffffffffffffffffffffffffffffffffff
0x758: V512 = AND 0xffffffffffffffffffffffffffffffffffffffff V510
0x75a: M[V508] = V512
0x75b: V513 = 0x20
0x75d: V514 = ADD 0x20 V508
0x760: M[V514] = V248
0x761: V515 = 0x20
0x763: V516 = ADD 0x20 V514
0x768: V517 = 0x20
0x76a: V518 = 0x40
0x76c: V519 = M[0x40]
0x76f: V520 = SUB V516 V519
0x771: V521 = 0x0
0x775: V522 = EXTCODESIZE V491
0x776: V523 = ISZERO V522
0x778: V524 = ISZERO V523
0x779: V525 = 0x781
0x77c: JUMPI 0x781 V524
---
Entry stack: [V11, 0x39c, V245, V248, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S2, V491, 0xa9059cbb, V516, 0x20, V519, V520, V519, 0x0, V491, V523]
Exit stack: [V11, 0x39c, V245, V248, V245, V491, 0xa9059cbb, V516, 0x20, V519, V520, V519, 0x0, V491, V523]

================================

Block 0x77d
[0x77d:0x780]
---
Predecessors: [0x6b9]
Successors: []
---
0x77d PUSH1 0x0
0x77f DUP1
0x780 REVERT
---
0x77d: V526 = 0x0
0x780: REVERT 0x0 0x0
---
Entry stack: [V11, 0x39c, V245, V248, V245, V491, 0xa9059cbb, V516, 0x20, V519, V520, V519, 0x0, V491, V523]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x39c, V245, V248, V245, V491, 0xa9059cbb, V516, 0x20, V519, V520, V519, 0x0, V491, V523]

================================

Block 0x781
[0x781:0x78b]
---
Predecessors: [0x6b9]
Successors: [0x78c, 0x795]
---
0x781 JUMPDEST
0x782 POP
0x783 GAS
0x784 CALL
0x785 ISZERO
0x786 DUP1
0x787 ISZERO
0x788 PUSH2 0x795
0x78b JUMPI
---
0x781: JUMPDEST 
0x783: V527 = GAS
0x784: V528 = CALL V527 V491 0x0 V519 V520 V519 0x20
0x785: V529 = ISZERO V528
0x787: V530 = ISZERO V529
0x788: V531 = 0x795
0x78b: JUMPI 0x795 V530
---
Entry stack: [V11, 0x39c, V245, V248, V245, V491, 0xa9059cbb, V516, 0x20, V519, V520, V519, 0x0, V491, V523]
Stack pops: 7
Stack additions: [V529]
Exit stack: [V11, 0x39c, V245, V248, V245, V491, 0xa9059cbb, V516, V529]

================================

Block 0x78c
[0x78c:0x794]
---
Predecessors: [0x781]
Successors: []
---
0x78c RETURNDATASIZE
0x78d PUSH1 0x0
0x78f DUP1
0x790 RETURNDATACOPY
0x791 RETURNDATASIZE
0x792 PUSH1 0x0
0x794 REVERT
---
0x78c: V532 = RETURNDATASIZE
0x78d: V533 = 0x0
0x790: RETURNDATACOPY 0x0 0x0 V532
0x791: V534 = RETURNDATASIZE
0x792: V535 = 0x0
0x794: REVERT 0x0 V534
---
Entry stack: [V11, 0x39c, V245, V248, V245, V491, 0xa9059cbb, V516, V529]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x39c, V245, V248, V245, V491, 0xa9059cbb, V516, V529]

================================

Block 0x795
[0x795:0x7a6]
---
Predecessors: [0x781]
Successors: [0x7a7, 0x7ab]
---
0x795 JUMPDEST
0x796 POP
0x797 POP
0x798 POP
0x799 POP
0x79a PUSH1 0x40
0x79c MLOAD
0x79d RETURNDATASIZE
0x79e PUSH1 0x20
0x7a0 DUP2
0x7a1 LT
0x7a2 ISZERO
0x7a3 PUSH2 0x7ab
0x7a6 JUMPI
---
0x795: JUMPDEST 
0x79a: V536 = 0x40
0x79c: V537 = M[0x40]
0x79d: V538 = RETURNDATASIZE
0x79e: V539 = 0x20
0x7a1: V540 = LT V538 0x20
0x7a2: V541 = ISZERO V540
0x7a3: V542 = 0x7ab
0x7a6: JUMPI 0x7ab V541
---
Entry stack: [V11, 0x39c, V245, V248, V245, V491, 0xa9059cbb, V516, V529]
Stack pops: 4
Stack additions: [V537, V538]
Exit stack: [V11, 0x39c, V245, V248, V245, V537, V538]

================================

Block 0x7a7
[0x7a7:0x7aa]
---
Predecessors: [0x795]
Successors: []
---
0x7a7 PUSH1 0x0
0x7a9 DUP1
0x7aa REVERT
---
0x7a7: V543 = 0x0
0x7aa: REVERT 0x0 0x0
---
Entry stack: [V11, 0x39c, V245, V248, V245, V537, V538]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x39c, V245, V248, V245, V537, V538]

================================

Block 0x7ab
[0x7ab:0x7c1]
---
Predecessors: [0x795]
Successors: [0x39c]
---
0x7ab JUMPDEST
0x7ac DUP2
0x7ad ADD
0x7ae SWAP1
0x7af DUP1
0x7b0 DUP1
0x7b1 MLOAD
0x7b2 SWAP1
0x7b3 PUSH1 0x20
0x7b5 ADD
0x7b6 SWAP1
0x7b7 SWAP3
0x7b8 SWAP2
0x7b9 SWAP1
0x7ba POP
0x7bb POP
0x7bc POP
0x7bd POP
0x7be POP
0x7bf POP
0x7c0 POP
0x7c1 JUMP
---
0x7ab: JUMPDEST 
0x7ad: V544 = ADD V537 V538
0x7b1: V545 = M[V537]
0x7b3: V546 = 0x20
0x7b5: V547 = ADD 0x20 V537
0x7c1: JUMP 0x39c
---
Entry stack: [V11, 0x39c, V245, V248, V245, V537, V538]
Stack pops: 6
Stack additions: []
Exit stack: [V11]

================================

Block 0x7c2
[0x7c2:0x820]
---
Predecessors: [0x39e]
Successors: [0x821, 0x82a]
---
0x7c2 JUMPDEST
0x7c3 PUSH1 0x1
0x7c5 PUSH1 0x0
0x7c7 SWAP1
0x7c8 SLOAD
0x7c9 SWAP1
0x7ca PUSH2 0x100
0x7cd EXP
0x7ce SWAP1
0x7cf DIV
0x7d0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7e5 AND
0x7e6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7fb AND
0x7fc PUSH2 0x8fc
0x7ff CALLVALUE
0x800 SWAP1
0x801 DUP2
0x802 ISZERO
0x803 MUL
0x804 SWAP1
0x805 PUSH1 0x40
0x807 MLOAD
0x808 PUSH1 0x0
0x80a PUSH1 0x40
0x80c MLOAD
0x80d DUP1
0x80e DUP4
0x80f SUB
0x810 DUP2
0x811 DUP6
0x812 DUP9
0x813 DUP9
0x814 CALL
0x815 SWAP4
0x816 POP
0x817 POP
0x818 POP
0x819 POP
0x81a ISZERO
0x81b DUP1
0x81c ISZERO
0x81d PUSH2 0x82a
0x820 JUMPI
---
0x7c2: JUMPDEST 
0x7c3: V548 = 0x1
0x7c5: V549 = 0x0
0x7c8: V550 = S[0x1]
0x7ca: V551 = 0x100
0x7cd: V552 = EXP 0x100 0x0
0x7cf: V553 = DIV V550 0x1
0x7d0: V554 = 0xffffffffffffffffffffffffffffffffffffffff
0x7e5: V555 = AND 0xffffffffffffffffffffffffffffffffffffffff V553
0x7e6: V556 = 0xffffffffffffffffffffffffffffffffffffffff
0x7fb: V557 = AND 0xffffffffffffffffffffffffffffffffffffffff V555
0x7fc: V558 = 0x8fc
0x7ff: V559 = CALLVALUE
0x802: V560 = ISZERO V559
0x803: V561 = MUL V560 0x8fc
0x805: V562 = 0x40
0x807: V563 = M[0x40]
0x808: V564 = 0x0
0x80a: V565 = 0x40
0x80c: V566 = M[0x40]
0x80f: V567 = SUB V563 V566
0x814: V568 = CALL V561 V557 V559 V566 V567 V566 0x0
0x81a: V569 = ISZERO V568
0x81c: V570 = ISZERO V569
0x81d: V571 = 0x82a
0x820: JUMPI 0x82a V570
---
Entry stack: [V11, 0x3a6]
Stack pops: 0
Stack additions: [V569]
Exit stack: [V11, 0x3a6, V569]

================================

Block 0x821
[0x821:0x829]
---
Predecessors: [0x7c2]
Successors: []
---
0x821 RETURNDATASIZE
0x822 PUSH1 0x0
0x824 DUP1
0x825 RETURNDATACOPY
0x826 RETURNDATASIZE
0x827 PUSH1 0x0
0x829 REVERT
---
0x821: V572 = RETURNDATASIZE
0x822: V573 = 0x0
0x825: RETURNDATACOPY 0x0 0x0 V572
0x826: V574 = RETURNDATASIZE
0x827: V575 = 0x0
0x829: REVERT 0x0 V574
---
Entry stack: [V11, 0x3a6, V569]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x3a6, V569]

================================

Block 0x82a
[0x82a:0x8e4]
---
Predecessors: [0x7c2]
Successors: [0x3a6]
---
0x82a JUMPDEST
0x82b POP
0x82c CALLVALUE
0x82d PUSH1 0x2
0x82f PUSH1 0x0
0x831 CALLER
0x832 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x847 AND
0x848 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x85d AND
0x85e DUP2
0x85f MSTORE
0x860 PUSH1 0x20
0x862 ADD
0x863 SWAP1
0x864 DUP2
0x865 MSTORE
0x866 PUSH1 0x20
0x868 ADD
0x869 PUSH1 0x0
0x86b SHA3
0x86c PUSH1 0x0
0x86e DUP3
0x86f DUP3
0x870 SLOAD
0x871 ADD
0x872 SWAP3
0x873 POP
0x874 POP
0x875 DUP2
0x876 SWAP1
0x877 SSTORE
0x878 POP
0x879 PUSH32 0x27defd643e849a2de808976e9ffeb619dc7d0c70950d113b5b87a08e361ffe6e
0x89a CALLER
0x89b CALLVALUE
0x89c PUSH1 0x40
0x89e MLOAD
0x89f DUP1
0x8a0 DUP4
0x8a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8b6 AND
0x8b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8cc AND
0x8cd DUP2
0x8ce MSTORE
0x8cf PUSH1 0x20
0x8d1 ADD
0x8d2 DUP3
0x8d3 DUP2
0x8d4 MSTORE
0x8d5 PUSH1 0x20
0x8d7 ADD
0x8d8 SWAP3
0x8d9 POP
0x8da POP
0x8db POP
0x8dc PUSH1 0x40
0x8de MLOAD
0x8df DUP1
0x8e0 SWAP2
0x8e1 SUB
0x8e2 SWAP1
0x8e3 LOG1
0x8e4 JUMP
---
0x82a: JUMPDEST 
0x82c: V576 = CALLVALUE
0x82d: V577 = 0x2
0x82f: V578 = 0x0
0x831: V579 = CALLER
0x832: V580 = 0xffffffffffffffffffffffffffffffffffffffff
0x847: V581 = AND 0xffffffffffffffffffffffffffffffffffffffff V579
0x848: V582 = 0xffffffffffffffffffffffffffffffffffffffff
0x85d: V583 = AND 0xffffffffffffffffffffffffffffffffffffffff V581
0x85f: M[0x0] = V583
0x860: V584 = 0x20
0x862: V585 = ADD 0x20 0x0
0x865: M[0x20] = 0x2
0x866: V586 = 0x20
0x868: V587 = ADD 0x20 0x20
0x869: V588 = 0x0
0x86b: V589 = SHA3 0x0 0x40
0x86c: V590 = 0x0
0x870: V591 = S[V589]
0x871: V592 = ADD V591 V576
0x877: S[V589] = V592
0x879: V593 = 0x27defd643e849a2de808976e9ffeb619dc7d0c70950d113b5b87a08e361ffe6e
0x89a: V594 = CALLER
0x89b: V595 = CALLVALUE
0x89c: V596 = 0x40
0x89e: V597 = M[0x40]
0x8a1: V598 = 0xffffffffffffffffffffffffffffffffffffffff
0x8b6: V599 = AND 0xffffffffffffffffffffffffffffffffffffffff V594
0x8b7: V600 = 0xffffffffffffffffffffffffffffffffffffffff
0x8cc: V601 = AND 0xffffffffffffffffffffffffffffffffffffffff V599
0x8ce: M[V597] = V601
0x8cf: V602 = 0x20
0x8d1: V603 = ADD 0x20 V597
0x8d4: M[V603] = V595
0x8d5: V604 = 0x20
0x8d7: V605 = ADD 0x20 V603
0x8dc: V606 = 0x40
0x8de: V607 = M[0x40]
0x8e1: V608 = SUB V605 V607
0x8e3: LOG V607 V608 0x27defd643e849a2de808976e9ffeb619dc7d0c70950d113b5b87a08e361ffe6e
0x8e4: JUMP 0x3a6
---
Entry stack: [V11, 0x3a6, V569]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x8e5
[0x8e5:0x915]
---
Predecessors: [0x458]
Successors: [0x916, 0x926]
---
0x8e5 JUMPDEST
0x8e6 DUP3
0x8e7 DUP1
0x8e8 SLOAD
0x8e9 PUSH1 0x1
0x8eb DUP2
0x8ec PUSH1 0x1
0x8ee AND
0x8ef ISZERO
0x8f0 PUSH2 0x100
0x8f3 MUL
0x8f4 SUB
0x8f5 AND
0x8f6 PUSH1 0x2
0x8f8 SWAP1
0x8f9 DIV
0x8fa SWAP1
0x8fb PUSH1 0x0
0x8fd MSTORE
0x8fe PUSH1 0x20
0x900 PUSH1 0x0
0x902 SHA3
0x903 SWAP1
0x904 PUSH1 0x1f
0x906 ADD
0x907 PUSH1 0x20
0x909 SWAP1
0x90a DIV
0x90b DUP2
0x90c ADD
0x90d SWAP3
0x90e DUP3
0x90f PUSH1 0x1f
0x911 LT
0x912 PUSH2 0x926
0x915 JUMPI
---
0x8e5: JUMPDEST 
0x8e8: V609 = S[V336]
0x8e9: V610 = 0x1
0x8ec: V611 = 0x1
0x8ee: V612 = AND 0x1 V609
0x8ef: V613 = ISZERO V612
0x8f0: V614 = 0x100
0x8f3: V615 = MUL 0x100 V613
0x8f4: V616 = SUB V615 0x1
0x8f5: V617 = AND V616 V609
0x8f6: V618 = 0x2
0x8f9: V619 = DIV V617 0x2
0x8fb: V620 = 0x0
0x8fd: M[0x0] = V336
0x8fe: V621 = 0x20
0x900: V622 = 0x0
0x902: V623 = SHA3 0x0 0x20
0x904: V624 = 0x1f
0x906: V625 = ADD 0x1f V619
0x907: V626 = 0x20
0x90a: V627 = DIV V625 0x20
0x90c: V628 = ADD V623 V627
0x90f: V629 = 0x1f
0x911: V630 = LT 0x1f V337
0x912: V631 = 0x926
0x915: JUMPI 0x926 V630
---
Entry stack: [V11, 0x211, V141, 0x4ab, V336, V339, V337]
Stack pops: 3
Stack additions: [S2, V628, S0, V623, S1]
Exit stack: [V11, 0x211, V141, 0x4ab, V336, V628, V337, V623, V339]

================================

Block 0x916
[0x916:0x925]
---
Predecessors: [0x8e5]
Successors: [0x954]
---
0x916 DUP1
0x917 MLOAD
0x918 PUSH1 0xff
0x91a NOT
0x91b AND
0x91c DUP4
0x91d DUP1
0x91e ADD
0x91f OR
0x920 DUP6
0x921 SSTORE
0x922 PUSH2 0x954
0x925 JUMP
---
0x917: V632 = M[V339]
0x918: V633 = 0xff
0x91a: V634 = NOT 0xff
0x91b: V635 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V632
0x91e: V636 = ADD V337 V337
0x91f: V637 = OR V636 V635
0x921: S[V336] = V637
0x922: V638 = 0x954
0x925: JUMP 0x954
---
Entry stack: [V11, 0x211, V141, 0x4ab, V336, V628, V337, V623, V339]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x211, V141, 0x4ab, V336, V628, V337, V623, V339]

================================

Block 0x926
[0x926:0x934]
---
Predecessors: [0x8e5]
Successors: [0x935, 0x954]
---
0x926 JUMPDEST
0x927 DUP3
0x928 DUP1
0x929 ADD
0x92a PUSH1 0x1
0x92c ADD
0x92d DUP6
0x92e SSTORE
0x92f DUP3
0x930 ISZERO
0x931 PUSH2 0x954
0x934 JUMPI
---
0x926: JUMPDEST 
0x929: V639 = ADD V337 V337
0x92a: V640 = 0x1
0x92c: V641 = ADD 0x1 V639
0x92e: S[V336] = V641
0x930: V642 = ISZERO V337
0x931: V643 = 0x954
0x934: JUMPI 0x954 V642
---
Entry stack: [V11, 0x211, V141, 0x4ab, V336, V628, V337, V623, V339]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x211, V141, 0x4ab, V336, V628, V337, V623, V339]

================================

Block 0x935
[0x935:0x937]
---
Predecessors: [0x926]
Successors: [0x938]
---
0x935 SWAP2
0x936 DUP3
0x937 ADD
---
0x937: V644 = ADD V339 V337
---
Entry stack: [V11, 0x211, V141, 0x4ab, V336, V628, V337, V623, V339]
Stack pops: 3
Stack additions: [S0, S1, V644]
Exit stack: [V11, 0x211, V141, 0x4ab, V336, V628, V339, V623, V644]

================================

Block 0x938
[0x938:0x940]
---
Predecessors: [0x935, 0x941]
Successors: [0x941, 0x953]
---
0x938 JUMPDEST
0x939 DUP3
0x93a DUP2
0x93b GT
0x93c ISZERO
0x93d PUSH2 0x953
0x940 JUMPI
---
0x938: JUMPDEST 
0x93b: V645 = GT V644 S2
0x93c: V646 = ISZERO V645
0x93d: V647 = 0x953
0x940: JUMPI 0x953 V646
---
Entry stack: [V11, 0x211, V141, 0x4ab, V336, V628, S2, S1, V644]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x211, V141, 0x4ab, V336, V628, S2, S1, V644]

================================

Block 0x941
[0x941:0x952]
---
Predecessors: [0x938]
Successors: [0x938]
---
0x941 DUP3
0x942 MLOAD
0x943 DUP3
0x944 SSTORE
0x945 SWAP2
0x946 PUSH1 0x20
0x948 ADD
0x949 SWAP2
0x94a SWAP1
0x94b PUSH1 0x1
0x94d ADD
0x94e SWAP1
0x94f PUSH2 0x938
0x952 JUMP
---
0x942: V648 = M[S2]
0x944: S[S1] = V648
0x946: V649 = 0x20
0x948: V650 = ADD 0x20 S2
0x94b: V651 = 0x1
0x94d: V652 = ADD 0x1 S1
0x94f: V653 = 0x938
0x952: JUMP 0x938
---
Entry stack: [V11, 0x211, V141, 0x4ab, V336, V628, S2, S1, V644]
Stack pops: 3
Stack additions: [V650, V652, S0]
Exit stack: [V11, 0x211, V141, 0x4ab, V336, V628, V650, V652, V644]

================================

Block 0x953
[0x953:0x953]
---
Predecessors: [0x938]
Successors: [0x954]
---
0x953 JUMPDEST
---
0x953: JUMPDEST 
---
Entry stack: [V11, 0x211, V141, 0x4ab, V336, V628, S2, S1, V644]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x211, V141, 0x4ab, V336, V628, S2, S1, V644]

================================

Block 0x954
[0x954:0x960]
---
Predecessors: [0x916, 0x926, 0x953]
Successors: [0x965]
---
0x954 JUMPDEST
0x955 POP
0x956 SWAP1
0x957 POP
0x958 PUSH2 0x961
0x95b SWAP2
0x95c SWAP1
0x95d PUSH2 0x965
0x960 JUMP
---
0x954: JUMPDEST 
0x958: V654 = 0x961
0x95d: V655 = 0x965
0x960: JUMP 0x965
---
Entry stack: [V11, 0x211, V141, 0x4ab, V336, V628, S2, S1, S0]
Stack pops: 4
Stack additions: [0x961, S3, S1]
Exit stack: [V11, 0x211, V141, 0x4ab, V336, 0x961, V628, S1]

================================

Block 0x961
[0x961:0x964]
---
Predecessors: [0x987]
Successors: [0x4ab]
---
0x961 JUMPDEST
0x962 POP
0x963 SWAP1
0x964 JUMP
---
0x961: JUMPDEST 
0x964: JUMP 0x4ab
---
Entry stack: [V11, 0x211, V141, 0x4ab, V336, V628]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0x211, V141, V336]

================================

Block 0x965
[0x965:0x96a]
---
Predecessors: [0x954]
Successors: [0x96b]
---
0x965 JUMPDEST
0x966 PUSH2 0x987
0x969 SWAP2
0x96a SWAP1
---
0x965: JUMPDEST 
0x966: V656 = 0x987
---
Entry stack: [V11, 0x211, V141, 0x4ab, V336, 0x961, V628, S0]
Stack pops: 2
Stack additions: [0x987, S1, S0]
Exit stack: [V11, 0x211, V141, 0x4ab, V336, 0x961, 0x987, V628, S0]

================================

Block 0x96b
[0x96b:0x973]
---
Predecessors: [0x965, 0x974]
Successors: [0x974, 0x983]
---
0x96b JUMPDEST
0x96c DUP1
0x96d DUP3
0x96e GT
0x96f ISZERO
0x970 PUSH2 0x983
0x973 JUMPI
---
0x96b: JUMPDEST 
0x96e: V657 = GT V628 S0
0x96f: V658 = ISZERO V657
0x970: V659 = 0x983
0x973: JUMPI 0x983 V658
---
Entry stack: [V11, 0x211, V141, 0x4ab, V336, 0x961, 0x987, V628, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x211, V141, 0x4ab, V336, 0x961, 0x987, V628, S0]

================================

Block 0x974
[0x974:0x982]
---
Predecessors: [0x96b]
Successors: [0x96b]
---
0x974 PUSH1 0x0
0x976 DUP2
0x977 PUSH1 0x0
0x979 SWAP1
0x97a SSTORE
0x97b POP
0x97c PUSH1 0x1
0x97e ADD
0x97f PUSH2 0x96b
0x982 JUMP
---
0x974: V660 = 0x0
0x977: V661 = 0x0
0x97a: S[S0] = 0x0
0x97c: V662 = 0x1
0x97e: V663 = ADD 0x1 S0
0x97f: V664 = 0x96b
0x982: JUMP 0x96b
---
Entry stack: [V11, 0x211, V141, 0x4ab, V336, 0x961, 0x987, V628, S0]
Stack pops: 1
Stack additions: [V663]
Exit stack: [V11, 0x211, V141, 0x4ab, V336, 0x961, 0x987, V628, V663]

================================

Block 0x983
[0x983:0x986]
---
Predecessors: [0x96b]
Successors: [0x987]
---
0x983 JUMPDEST
0x984 POP
0x985 SWAP1
0x986 JUMP
---
0x983: JUMPDEST 
0x986: JUMP 0x987
---
Entry stack: [V11, 0x211, V141, 0x4ab, V336, 0x961, 0x987, V628, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0x211, V141, 0x4ab, V336, 0x961, V628]

================================

Block 0x987
[0x987:0x989]
---
Predecessors: [0x983]
Successors: [0x961]
---
0x987 JUMPDEST
0x988 SWAP1
0x989 JUMP
---
0x987: JUMPDEST 
0x989: JUMP 0x961
---
Entry stack: [V11, 0x211, V141, 0x4ab, V336, 0x961, V628]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0x211, V141, 0x4ab, V336, V628]

================================

Block 0x98a
[0x98a:0x9c0]
---
Predecessors: []
Successors: []
---
0x98a STOP
0x98b LOG1
0x98c PUSH6 0x627a7a723058
0x993 SHA3
0x994 DUP1
0x995 PUSH25 0x75b5002e4451caea4b7ccbdb9b4e16f791bf6b1517041081ad
0x9af MISSING 0x49
0x9b0 PUSH16 0x15d1b00029
---
0x98a: STOP 
0x98b: LOG S0 S1 S2
0x98c: V665 = 0x627a7a723058
0x993: V666 = SHA3 0x627a7a723058 S3
0x995: V667 = 0x75b5002e4451caea4b7ccbdb9b4e16f791bf6b1517041081ad
0x9af: MISSING 0x49
0x9b0: V668 = 0x15d1b00029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x75b5002e4451caea4b7ccbdb9b4e16f791bf6b1517041081ad, V666, V666, 0x15d1b00029]
Exit stack: []

================================

Function 0:
Public function signature: 0x308f379
Entry block: 0xee
Exit block: 0x19c
Body: 0xee, 0xf6, 0xfa, 0x12f, 0x154, 0x15d, 0x16f, 0x183, 0x19c, 0x3a8, 0x40a, 0x412, 0x425, 0x433, 0x447, 0x450

Function 1:
Public function signature: 0xe21fce3
Entry block: 0x1aa
Exit block: 0x211
Body: 0x1aa, 0x1b2, 0x1b6, 0x211, 0x458, 0x4ab, 0x526, 0x52f, 0x541, 0x555, 0x56e, 0x8e5, 0x916, 0x926, 0x935, 0x938, 0x941, 0x953, 0x954, 0x961, 0x965, 0x96b, 0x974, 0x983, 0x987

Function 2:
Public function signature: 0x12ac18ff
Entry block: 0x213
Exit block: 0x295
Body: 0x213, 0x21b, 0x21f, 0x228, 0x24d, 0x256, 0x268, 0x27c, 0x295, 0x57f, 0x5cf, 0x5d7, 0x5ea, 0x5f8, 0x60c, 0x615

Function 3:
Public function signature: 0x18bee97e
Entry block: 0x2a3
Exit block: 0x2b8
Body: 0x2a3, 0x2ab, 0x2af, 0x2b8, 0x61d

Function 4:
Public function signature: 0x6fd094f4
Entry block: 0x2fa
Exit block: 0x33b
Body: 0x2fa, 0x302, 0x306, 0x33b, 0x643

Function 5:
Public function signature: 0x71ea3aad
Entry block: 0x351
Exit block: 0x39c
Body: 0x351, 0x359, 0x35d, 0x39c, 0x65b, 0x6b5, 0x6b9, 0x77d, 0x781, 0x78c, 0x795, 0x7a7, 0x7ab

Function 6:
Public function signature: 0xd917deb5
Entry block: 0x39e
Exit block: 0x3a6
Body: 0x39e, 0x3a6, 0x7c2, 0x821, 0x82a

Function 7:
Public fallback function
Entry block: 0x83
Exit block: 0xe2
Body: 0x83, 0xe2, 0xeb

