Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x51]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x8da5cb5b
0x3c EQ
0x3d PUSH2 0x51
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x8da5cb5b
0x3c: V13 = EQ 0x8da5cb5b V11
0x3d: V14 = 0x51
0x40: JUMPI 0x51 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xa8]
---
0x41 DUP1
0x42 PUSH4 0xf2fde38b
0x47 EQ
0x48 PUSH2 0xa8
0x4b JUMPI
---
0x42: V15 = 0xf2fde38b
0x47: V16 = EQ 0xf2fde38b V11
0x48: V17 = 0xa8
0x4b: JUMPI 0xa8 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x50]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d PUSH1 0x0
0x4f DUP1
0x50 REVERT
---
0x4c: JUMPDEST 
0x4d: V18 = 0x0
0x50: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x51
[0x51:0x58]
---
Predecessors: [0xd]
Successors: [0x59, 0x5d]
---
0x51 JUMPDEST
0x52 CALLVALUE
0x53 DUP1
0x54 ISZERO
0x55 PUSH2 0x5d
0x58 JUMPI
---
0x51: JUMPDEST 
0x52: V19 = CALLVALUE
0x54: V20 = ISZERO V19
0x55: V21 = 0x5d
0x58: JUMPI 0x5d V20
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V19]
Exit stack: [V11, V19]

================================

Block 0x59
[0x59:0x5c]
---
Predecessors: [0x51]
Successors: []
---
0x59 PUSH1 0x0
0x5b DUP1
0x5c REVERT
---
0x59: V22 = 0x0
0x5c: REVERT 0x0 0x0
---
Entry stack: [V11, V19]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V19]

================================

Block 0x5d
[0x5d:0x65]
---
Predecessors: [0x51]
Successors: [0xeb]
---
0x5d JUMPDEST
0x5e POP
0x5f PUSH2 0x66
0x62 PUSH2 0xeb
0x65 JUMP
---
0x5d: JUMPDEST 
0x5f: V23 = 0x66
0x62: V24 = 0xeb
0x65: JUMP 0xeb
---
Entry stack: [V11, V19]
Stack pops: 1
Stack additions: [0x66]
Exit stack: [V11, 0x66]

================================

Block 0x66
[0x66:0xa7]
---
Predecessors: [0xeb]
Successors: []
---
0x66 JUMPDEST
0x67 PUSH1 0x40
0x69 MLOAD
0x6a DUP1
0x6b DUP3
0x6c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x81 AND
0x82 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x97 AND
0x98 DUP2
0x99 MSTORE
0x9a PUSH1 0x20
0x9c ADD
0x9d SWAP2
0x9e POP
0x9f POP
0xa0 PUSH1 0x40
0xa2 MLOAD
0xa3 DUP1
0xa4 SWAP2
0xa5 SUB
0xa6 SWAP1
0xa7 RETURN
---
0x66: JUMPDEST 
0x67: V25 = 0x40
0x69: V26 = M[0x40]
0x6c: V27 = 0xffffffffffffffffffffffffffffffffffffffff
0x81: V28 = AND 0xffffffffffffffffffffffffffffffffffffffff V57
0x82: V29 = 0xffffffffffffffffffffffffffffffffffffffff
0x97: V30 = AND 0xffffffffffffffffffffffffffffffffffffffff V28
0x99: M[V26] = V30
0x9a: V31 = 0x20
0x9c: V32 = ADD 0x20 V26
0xa0: V33 = 0x40
0xa2: V34 = M[0x40]
0xa5: V35 = SUB V32 V34
0xa7: RETURN V34 V35
---
Entry stack: [V11, 0x66, V57]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x66]

================================

Block 0xa8
[0xa8:0xaf]
---
Predecessors: [0x41]
Successors: [0xb0, 0xb4]
---
0xa8 JUMPDEST
0xa9 CALLVALUE
0xaa DUP1
0xab ISZERO
0xac PUSH2 0xb4
0xaf JUMPI
---
0xa8: JUMPDEST 
0xa9: V36 = CALLVALUE
0xab: V37 = ISZERO V36
0xac: V38 = 0xb4
0xaf: JUMPI 0xb4 V37
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V36]
Exit stack: [V11, V36]

================================

Block 0xb0
[0xb0:0xb3]
---
Predecessors: [0xa8]
Successors: []
---
0xb0 PUSH1 0x0
0xb2 DUP1
0xb3 REVERT
---
0xb0: V39 = 0x0
0xb3: REVERT 0x0 0x0
---
Entry stack: [V11, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V36]

================================

Block 0xb4
[0xb4:0xe8]
---
Predecessors: [0xa8]
Successors: [0x110]
---
0xb4 JUMPDEST
0xb5 POP
0xb6 PUSH2 0xe9
0xb9 PUSH1 0x4
0xbb DUP1
0xbc CALLDATASIZE
0xbd SUB
0xbe DUP2
0xbf ADD
0xc0 SWAP1
0xc1 DUP1
0xc2 DUP1
0xc3 CALLDATALOAD
0xc4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd9 AND
0xda SWAP1
0xdb PUSH1 0x20
0xdd ADD
0xde SWAP1
0xdf SWAP3
0xe0 SWAP2
0xe1 SWAP1
0xe2 POP
0xe3 POP
0xe4 POP
0xe5 PUSH2 0x110
0xe8 JUMP
---
0xb4: JUMPDEST 
0xb6: V40 = 0xe9
0xb9: V41 = 0x4
0xbc: V42 = CALLDATASIZE
0xbd: V43 = SUB V42 0x4
0xbf: V44 = ADD 0x4 V43
0xc3: V45 = CALLDATALOAD 0x4
0xc4: V46 = 0xffffffffffffffffffffffffffffffffffffffff
0xd9: V47 = AND 0xffffffffffffffffffffffffffffffffffffffff V45
0xdb: V48 = 0x20
0xdd: V49 = ADD 0x20 0x4
0xe5: V50 = 0x110
0xe8: JUMP 0x110
---
Entry stack: [V11, V36]
Stack pops: 1
Stack additions: [0xe9, V47]
Exit stack: [V11, 0xe9, V47]

================================

Block 0xe9
[0xe9:0xea]
---
Predecessors: [0x1a7]
Successors: []
---
0xe9 JUMPDEST
0xea STOP
---
0xe9: JUMPDEST 
0xea: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xeb
[0xeb:0x10f]
---
Predecessors: [0x5d]
Successors: [0x66]
---
0xeb JUMPDEST
0xec PUSH1 0x0
0xee DUP1
0xef SWAP1
0xf0 SLOAD
0xf1 SWAP1
0xf2 PUSH2 0x100
0xf5 EXP
0xf6 SWAP1
0xf7 DIV
0xf8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10d AND
0x10e DUP2
0x10f JUMP
---
0xeb: JUMPDEST 
0xec: V51 = 0x0
0xf0: V52 = S[0x0]
0xf2: V53 = 0x100
0xf5: V54 = EXP 0x100 0x0
0xf7: V55 = DIV V52 0x1
0xf8: V56 = 0xffffffffffffffffffffffffffffffffffffffff
0x10d: V57 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0x10f: JUMP 0x66
---
Entry stack: [V11, 0x66]
Stack pops: 1
Stack additions: [S0, V57]
Exit stack: [V11, 0x66, V57]

================================

Block 0x110
[0x110:0x166]
---
Predecessors: [0xb4]
Successors: [0x167, 0x16b]
---
0x110 JUMPDEST
0x111 PUSH1 0x0
0x113 DUP1
0x114 SWAP1
0x115 SLOAD
0x116 SWAP1
0x117 PUSH2 0x100
0x11a EXP
0x11b SWAP1
0x11c DIV
0x11d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x132 AND
0x133 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x148 AND
0x149 CALLER
0x14a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15f AND
0x160 EQ
0x161 ISZERO
0x162 ISZERO
0x163 PUSH2 0x16b
0x166 JUMPI
---
0x110: JUMPDEST 
0x111: V58 = 0x0
0x115: V59 = S[0x0]
0x117: V60 = 0x100
0x11a: V61 = EXP 0x100 0x0
0x11c: V62 = DIV V59 0x1
0x11d: V63 = 0xffffffffffffffffffffffffffffffffffffffff
0x132: V64 = AND 0xffffffffffffffffffffffffffffffffffffffff V62
0x133: V65 = 0xffffffffffffffffffffffffffffffffffffffff
0x148: V66 = AND 0xffffffffffffffffffffffffffffffffffffffff V64
0x149: V67 = CALLER
0x14a: V68 = 0xffffffffffffffffffffffffffffffffffffffff
0x15f: V69 = AND 0xffffffffffffffffffffffffffffffffffffffff V67
0x160: V70 = EQ V69 V66
0x161: V71 = ISZERO V70
0x162: V72 = ISZERO V71
0x163: V73 = 0x16b
0x166: JUMPI 0x16b V72
---
Entry stack: [V11, 0xe9, V47]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe9, V47]

================================

Block 0x167
[0x167:0x16a]
---
Predecessors: [0x110]
Successors: []
---
0x167 PUSH1 0x0
0x169 DUP1
0x16a REVERT
---
0x167: V74 = 0x0
0x16a: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe9, V47]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe9, V47]

================================

Block 0x16b
[0x16b:0x1a2]
---
Predecessors: [0x110]
Successors: [0x1a3, 0x1a7]
---
0x16b JUMPDEST
0x16c PUSH1 0x0
0x16e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x183 AND
0x184 DUP2
0x185 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19a AND
0x19b EQ
0x19c ISZERO
0x19d ISZERO
0x19e ISZERO
0x19f PUSH2 0x1a7
0x1a2 JUMPI
---
0x16b: JUMPDEST 
0x16c: V75 = 0x0
0x16e: V76 = 0xffffffffffffffffffffffffffffffffffffffff
0x183: V77 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x185: V78 = 0xffffffffffffffffffffffffffffffffffffffff
0x19a: V79 = AND 0xffffffffffffffffffffffffffffffffffffffff V47
0x19b: V80 = EQ V79 0x0
0x19c: V81 = ISZERO V80
0x19d: V82 = ISZERO V81
0x19e: V83 = ISZERO V82
0x19f: V84 = 0x1a7
0x1a2: JUMPI 0x1a7 V83
---
Entry stack: [V11, 0xe9, V47]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xe9, V47]

================================

Block 0x1a3
[0x1a3:0x1a6]
---
Predecessors: [0x16b]
Successors: []
---
0x1a3 PUSH1 0x0
0x1a5 DUP1
0x1a6 REVERT
---
0x1a3: V85 = 0x0
0x1a6: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe9, V47]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe9, V47]

================================

Block 0x1a7
[0x1a7:0x264]
---
Predecessors: [0x16b]
Successors: [0xe9]
---
0x1a7 JUMPDEST
0x1a8 DUP1
0x1a9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1be AND
0x1bf PUSH1 0x0
0x1c1 DUP1
0x1c2 SWAP1
0x1c3 SLOAD
0x1c4 SWAP1
0x1c5 PUSH2 0x100
0x1c8 EXP
0x1c9 SWAP1
0x1ca DIV
0x1cb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e0 AND
0x1e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f6 AND
0x1f7 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x218 PUSH1 0x40
0x21a MLOAD
0x21b PUSH1 0x40
0x21d MLOAD
0x21e DUP1
0x21f SWAP2
0x220 SUB
0x221 SWAP1
0x222 LOG3
0x223 DUP1
0x224 PUSH1 0x0
0x226 DUP1
0x227 PUSH2 0x100
0x22a EXP
0x22b DUP2
0x22c SLOAD
0x22d DUP2
0x22e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x243 MUL
0x244 NOT
0x245 AND
0x246 SWAP1
0x247 DUP4
0x248 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x25d AND
0x25e MUL
0x25f OR
0x260 SWAP1
0x261 SSTORE
0x262 POP
0x263 POP
0x264 JUMP
---
0x1a7: JUMPDEST 
0x1a9: V86 = 0xffffffffffffffffffffffffffffffffffffffff
0x1be: V87 = AND 0xffffffffffffffffffffffffffffffffffffffff V47
0x1bf: V88 = 0x0
0x1c3: V89 = S[0x0]
0x1c5: V90 = 0x100
0x1c8: V91 = EXP 0x100 0x0
0x1ca: V92 = DIV V89 0x1
0x1cb: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e0: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x1e1: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f6: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x1f7: V97 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x218: V98 = 0x40
0x21a: V99 = M[0x40]
0x21b: V100 = 0x40
0x21d: V101 = M[0x40]
0x220: V102 = SUB V99 V101
0x222: LOG V101 V102 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V96 V87
0x224: V103 = 0x0
0x227: V104 = 0x100
0x22a: V105 = EXP 0x100 0x0
0x22c: V106 = S[0x0]
0x22e: V107 = 0xffffffffffffffffffffffffffffffffffffffff
0x243: V108 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x244: V109 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x245: V110 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V106
0x248: V111 = 0xffffffffffffffffffffffffffffffffffffffff
0x25d: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V47
0x25e: V113 = MUL V112 0x1
0x25f: V114 = OR V113 V110
0x261: S[0x0] = V114
0x264: JUMP 0xe9
---
Entry stack: [V11, 0xe9, V47]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x265
[0x265:0x29d]
---
Predecessors: []
Successors: [0x29e]
---
0x265 STOP
0x266 LOG1
0x267 PUSH6 0x627a7a723058
0x26e SHA3
0x26f MISSING 0xeb
0x270 MISSING 0xc6
0x271 CALLDATALOAD
0x272 MISSING 0x1e
0x273 SWAP12
0x274 MISSING 0xe2
0x275 SLT
0x276 STATICCALL
0x277 MISSING 0xdc
0x278 MISSING 0xd
0x279 MISSING 0xaf
0x27a MISSING 0xbf
0x27b MISSING 0xc4
0x27c CALL
0x27d MISSING 0x4c
0x27e PUSH18 0x313e204b40975161ec27f829b4cbecaa0029
0x291 PUSH1 0x80
0x293 PUSH1 0x40
0x295 MSTORE
0x296 PUSH1 0x4
0x298 CALLDATASIZE
0x299 LT
0x29a PUSH2 0x6d
0x29d JUMPI
---
0x265: STOP 
0x266: LOG S0 S1 S2
0x267: V115 = 0x627a7a723058
0x26e: V116 = SHA3 0x627a7a723058 S3
0x26f: MISSING 0xeb
0x270: MISSING 0xc6
0x271: V117 = CALLDATALOAD S0
0x272: MISSING 0x1e
0x274: MISSING 0xe2
0x275: V118 = SLT S0 S1
0x276: V119 = STATICCALL V118 S2 S3 S4 S5 S6
0x277: MISSING 0xdc
0x278: MISSING 0xd
0x279: MISSING 0xaf
0x27a: MISSING 0xbf
0x27b: MISSING 0xc4
0x27c: V120 = CALL S0 S1 S2 S3 S4 S5 S6
0x27d: MISSING 0x4c
0x27e: V121 = 0x313e204b40975161ec27f829b4cbecaa0029
0x291: V122 = 0x80
0x293: V123 = 0x40
0x295: M[0x40] = 0x80
0x296: V124 = 0x4
0x298: V125 = CALLDATASIZE
0x299: V126 = LT V125 0x4
0x29a: V127 = 0x6d
0x29d: THROWI V126
---
Entry stack: []
Stack pops: 0
Stack additions: [V116, V117, S12, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S0, V119, V120, 0x313e204b40975161ec27f829b4cbecaa0029]
Exit stack: []

================================

Block 0x29e
[0x29e:0x2d1]
---
Predecessors: [0x265]
Successors: [0x2d2]
---
0x29e PUSH1 0x0
0x2a0 CALLDATALOAD
0x2a1 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2bf SWAP1
0x2c0 DIV
0x2c1 PUSH4 0xffffffff
0x2c6 AND
0x2c7 DUP1
0x2c8 PUSH4 0x2f148f55
0x2cd EQ
0x2ce PUSH2 0x72
0x2d1 JUMPI
---
0x29e: V128 = 0x0
0x2a0: V129 = CALLDATALOAD 0x0
0x2a1: V130 = 0x100000000000000000000000000000000000000000000000000000000
0x2c0: V131 = DIV V129 0x100000000000000000000000000000000000000000000000000000000
0x2c1: V132 = 0xffffffff
0x2c6: V133 = AND 0xffffffff V131
0x2c8: V134 = 0x2f148f55
0x2cd: V135 = EQ 0x2f148f55 V133
0x2ce: V136 = 0x72
0x2d1: THROWI V135
---
Entry stack: [0x313e204b40975161ec27f829b4cbecaa0029]
Stack pops: 0
Stack additions: [V133]
Exit stack: [0x313e204b40975161ec27f829b4cbecaa0029, V133]

================================

Block 0x2d2
[0x2d2:0x2dc]
---
Predecessors: [0x29e]
Successors: [0x2dd]
---
0x2d2 DUP1
0x2d3 PUSH4 0x3b0f3ed3
0x2d8 EQ
0x2d9 PUSH2 0x1a8
0x2dc JUMPI
---
0x2d3: V137 = 0x3b0f3ed3
0x2d8: V138 = EQ 0x3b0f3ed3 V133
0x2d9: V139 = 0x1a8
0x2dc: THROWI V138
---
Entry stack: [0x313e204b40975161ec27f829b4cbecaa0029, V133]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0x313e204b40975161ec27f829b4cbecaa0029, V133]

================================

Block 0x2dd
[0x2dd:0x2e7]
---
Predecessors: [0x2d2]
Successors: [0x2e8]
---
0x2dd DUP1
0x2de PUSH4 0x57d55367
0x2e3 EQ
0x2e4 PUSH2 0x239
0x2e7 JUMPI
---
0x2de: V140 = 0x57d55367
0x2e3: V141 = EQ 0x57d55367 V133
0x2e4: V142 = 0x239
0x2e7: THROWI V141
---
Entry stack: [0x313e204b40975161ec27f829b4cbecaa0029, V133]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0x313e204b40975161ec27f829b4cbecaa0029, V133]

================================

Block 0x2e8
[0x2e8:0x2f2]
---
Predecessors: [0x2dd]
Successors: [0x2f3]
---
0x2e8 DUP1
0x2e9 PUSH4 0x8da5cb5b
0x2ee EQ
0x2ef PUSH2 0x2ca
0x2f2 JUMPI
---
0x2e9: V143 = 0x8da5cb5b
0x2ee: V144 = EQ 0x8da5cb5b V133
0x2ef: V145 = 0x2ca
0x2f2: THROWI V144
---
Entry stack: [0x313e204b40975161ec27f829b4cbecaa0029, V133]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0x313e204b40975161ec27f829b4cbecaa0029, V133]

================================

Block 0x2f3
[0x2f3:0x2fd]
---
Predecessors: [0x2e8]
Successors: [0x2fe]
---
0x2f3 DUP1
0x2f4 PUSH4 0xf2fde38b
0x2f9 EQ
0x2fa PUSH2 0x321
0x2fd JUMPI
---
0x2f4: V146 = 0xf2fde38b
0x2f9: V147 = EQ 0xf2fde38b V133
0x2fa: V148 = 0x321
0x2fd: THROWI V147
---
Entry stack: [0x313e204b40975161ec27f829b4cbecaa0029, V133]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0x313e204b40975161ec27f829b4cbecaa0029, V133]

================================

Block 0x2fe
[0x2fe:0x30a]
---
Predecessors: [0x2f3]
Successors: [0x30b]
---
0x2fe JUMPDEST
0x2ff PUSH1 0x0
0x301 DUP1
0x302 REVERT
0x303 JUMPDEST
0x304 CALLVALUE
0x305 DUP1
0x306 ISZERO
0x307 PUSH2 0x7e
0x30a JUMPI
---
0x2fe: JUMPDEST 
0x2ff: V149 = 0x0
0x302: REVERT 0x0 0x0
0x303: JUMPDEST 
0x304: V150 = CALLVALUE
0x306: V151 = ISZERO V150
0x307: V152 = 0x7e
0x30a: THROWI V151
---
Entry stack: [0x313e204b40975161ec27f829b4cbecaa0029, V133]
Stack pops: 0
Stack additions: [V150]
Exit stack: []

================================

Block 0x30b
[0x30b:0x378]
---
Predecessors: [0x2fe]
Successors: [0x379]
---
0x30b PUSH1 0x0
0x30d DUP1
0x30e REVERT
0x30f JUMPDEST
0x310 POP
0x311 PUSH2 0xa3
0x314 PUSH1 0x4
0x316 DUP1
0x317 CALLDATASIZE
0x318 SUB
0x319 DUP2
0x31a ADD
0x31b SWAP1
0x31c DUP1
0x31d DUP1
0x31e CALLDATALOAD
0x31f PUSH4 0xffffffff
0x324 AND
0x325 SWAP1
0x326 PUSH1 0x20
0x328 ADD
0x329 SWAP1
0x32a SWAP3
0x32b SWAP2
0x32c SWAP1
0x32d POP
0x32e POP
0x32f POP
0x330 PUSH2 0x364
0x333 JUMP
0x334 JUMPDEST
0x335 PUSH1 0x40
0x337 MLOAD
0x338 DUP1
0x339 DUP6
0x33a PUSH4 0xffffffff
0x33f AND
0x340 PUSH4 0xffffffff
0x345 AND
0x346 DUP2
0x347 MSTORE
0x348 PUSH1 0x20
0x34a ADD
0x34b DUP1
0x34c PUSH1 0x20
0x34e ADD
0x34f DUP1
0x350 PUSH1 0x20
0x352 ADD
0x353 DUP5
0x354 ISZERO
0x355 ISZERO
0x356 ISZERO
0x357 ISZERO
0x358 DUP2
0x359 MSTORE
0x35a PUSH1 0x20
0x35c ADD
0x35d DUP4
0x35e DUP2
0x35f SUB
0x360 DUP4
0x361 MSTORE
0x362 DUP7
0x363 DUP2
0x364 DUP2
0x365 MLOAD
0x366 DUP2
0x367 MSTORE
0x368 PUSH1 0x20
0x36a ADD
0x36b SWAP2
0x36c POP
0x36d DUP1
0x36e MLOAD
0x36f SWAP1
0x370 PUSH1 0x20
0x372 ADD
0x373 SWAP1
0x374 DUP1
0x375 DUP4
0x376 DUP4
0x377 PUSH1 0x0
---
0x30b: V153 = 0x0
0x30e: REVERT 0x0 0x0
0x30f: JUMPDEST 
0x311: V154 = 0xa3
0x314: V155 = 0x4
0x317: V156 = CALLDATASIZE
0x318: V157 = SUB V156 0x4
0x31a: V158 = ADD 0x4 V157
0x31e: V159 = CALLDATALOAD 0x4
0x31f: V160 = 0xffffffff
0x324: V161 = AND 0xffffffff V159
0x326: V162 = 0x20
0x328: V163 = ADD 0x20 0x4
0x330: V164 = 0x364
0x333: THROW 
0x334: JUMPDEST 
0x335: V165 = 0x40
0x337: V166 = M[0x40]
0x33a: V167 = 0xffffffff
0x33f: V168 = AND 0xffffffff S3
0x340: V169 = 0xffffffff
0x345: V170 = AND 0xffffffff V168
0x347: M[V166] = V170
0x348: V171 = 0x20
0x34a: V172 = ADD 0x20 V166
0x34c: V173 = 0x20
0x34e: V174 = ADD 0x20 V172
0x350: V175 = 0x20
0x352: V176 = ADD 0x20 V174
0x354: V177 = ISZERO S0
0x355: V178 = ISZERO V177
0x356: V179 = ISZERO V178
0x357: V180 = ISZERO V179
0x359: M[V176] = V180
0x35a: V181 = 0x20
0x35c: V182 = ADD 0x20 V176
0x35f: V183 = SUB V182 V166
0x361: M[V172] = V183
0x365: V184 = M[S2]
0x367: M[V182] = V184
0x368: V185 = 0x20
0x36a: V186 = ADD 0x20 V182
0x36e: V187 = M[S2]
0x370: V188 = 0x20
0x372: V189 = ADD 0x20 S2
0x377: V190 = 0x0
---
Entry stack: [V150]
Stack pops: 0
Stack additions: [V161, 0xa3, 0x0, V189, V186, V187, V187, V189, V186, V174, V172, V166, S0, S1, S2, S3]
Exit stack: []

================================

Block 0x379
[0x379:0x381]
---
Predecessors: [0x30b]
Successors: [0x382]
---
0x379 JUMPDEST
0x37a DUP4
0x37b DUP2
0x37c LT
0x37d ISZERO
0x37e PUSH2 0x103
0x381 JUMPI
---
0x379: JUMPDEST 
0x37c: V191 = LT 0x0 V187
0x37d: V192 = ISZERO V191
0x37e: V193 = 0x103
0x381: THROWI V192
---
Entry stack: [S13, S12, S11, S10, V166, V172, V174, V186, V189, V187, V187, V186, V189, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S13, S12, S11, S10, V166, V172, V174, V186, V189, V187, V187, V186, V189, 0x0]

================================

Block 0x382
[0x382:0x3a7]
---
Predecessors: [0x379]
Successors: [0x3a8]
---
0x382 DUP1
0x383 DUP3
0x384 ADD
0x385 MLOAD
0x386 DUP2
0x387 DUP5
0x388 ADD
0x389 MSTORE
0x38a PUSH1 0x20
0x38c DUP2
0x38d ADD
0x38e SWAP1
0x38f POP
0x390 PUSH2 0xe8
0x393 JUMP
0x394 JUMPDEST
0x395 POP
0x396 POP
0x397 POP
0x398 POP
0x399 SWAP1
0x39a POP
0x39b SWAP1
0x39c DUP2
0x39d ADD
0x39e SWAP1
0x39f PUSH1 0x1f
0x3a1 AND
0x3a2 DUP1
0x3a3 ISZERO
0x3a4 PUSH2 0x130
0x3a7 JUMPI
---
0x384: V194 = ADD V189 0x0
0x385: V195 = M[V194]
0x388: V196 = ADD V186 0x0
0x389: M[V196] = V195
0x38a: V197 = 0x20
0x38d: V198 = ADD 0x0 0x20
0x390: V199 = 0xe8
0x393: THROW 
0x394: JUMPDEST 
0x39d: V200 = ADD S4 S6
0x39f: V201 = 0x1f
0x3a1: V202 = AND 0x1f S4
0x3a3: V203 = ISZERO V202
0x3a4: V204 = 0x130
0x3a7: THROWI V203
---
Entry stack: [S13, S12, S11, S10, V166, V172, V174, V186, V189, V187, V187, V186, V189, 0x0]
Stack pops: 3
Stack additions: [V202, V200]
Exit stack: []

================================

Block 0x3a8
[0x3a8:0x3c0]
---
Predecessors: [0x382]
Successors: [0x3c1]
---
0x3a8 DUP1
0x3a9 DUP3
0x3aa SUB
0x3ab DUP1
0x3ac MLOAD
0x3ad PUSH1 0x1
0x3af DUP4
0x3b0 PUSH1 0x20
0x3b2 SUB
0x3b3 PUSH2 0x100
0x3b6 EXP
0x3b7 SUB
0x3b8 NOT
0x3b9 AND
0x3ba DUP2
0x3bb MSTORE
0x3bc PUSH1 0x20
0x3be ADD
0x3bf SWAP2
0x3c0 POP
---
0x3aa: V205 = SUB V200 V202
0x3ac: V206 = M[V205]
0x3ad: V207 = 0x1
0x3b0: V208 = 0x20
0x3b2: V209 = SUB 0x20 V202
0x3b3: V210 = 0x100
0x3b6: V211 = EXP 0x100 V209
0x3b7: V212 = SUB V211 0x1
0x3b8: V213 = NOT V212
0x3b9: V214 = AND V213 V206
0x3bb: M[V205] = V214
0x3bc: V215 = 0x20
0x3be: V216 = ADD 0x20 V205
---
Entry stack: [V200, V202]
Stack pops: 2
Stack additions: [V216, S0]
Exit stack: [V216, V202]

================================

Block 0x3c1
[0x3c1:0x3de]
---
Predecessors: [0x3a8]
Successors: [0x3df]
---
0x3c1 JUMPDEST
0x3c2 POP
0x3c3 DUP4
0x3c4 DUP2
0x3c5 SUB
0x3c6 DUP3
0x3c7 MSTORE
0x3c8 DUP6
0x3c9 DUP2
0x3ca DUP2
0x3cb MLOAD
0x3cc DUP2
0x3cd MSTORE
0x3ce PUSH1 0x20
0x3d0 ADD
0x3d1 SWAP2
0x3d2 POP
0x3d3 DUP1
0x3d4 MLOAD
0x3d5 SWAP1
0x3d6 PUSH1 0x20
0x3d8 ADD
0x3d9 SWAP1
0x3da DUP1
0x3db DUP4
0x3dc DUP4
0x3dd PUSH1 0x0
---
0x3c1: JUMPDEST 
0x3c5: V217 = SUB V216 S4
0x3c7: M[S2] = V217
0x3cb: V218 = M[S6]
0x3cd: M[V216] = V218
0x3ce: V219 = 0x20
0x3d0: V220 = ADD 0x20 V216
0x3d4: V221 = M[S6]
0x3d6: V222 = 0x20
0x3d8: V223 = ADD 0x20 S6
0x3dd: V224 = 0x0
---
Entry stack: [V216, V202]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V220, V223, V221, V221, V220, V223, 0x0]
Exit stack: [S4, S3, S2, S1, S0, V220, V223, V221, V221, V220, V223, 0x0]

================================

Block 0x3df
[0x3df:0x3e7]
---
Predecessors: [0x3c1]
Successors: [0x3e8]
---
0x3df JUMPDEST
0x3e0 DUP4
0x3e1 DUP2
0x3e2 LT
0x3e3 ISZERO
0x3e4 PUSH2 0x169
0x3e7 JUMPI
---
0x3df: JUMPDEST 
0x3e2: V225 = LT 0x0 V221
0x3e3: V226 = ISZERO V225
0x3e4: V227 = 0x169
0x3e7: THROWI V226
---
Entry stack: [S11, S10, S9, S8, S7, V220, V223, V221, V221, V220, V223, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S11, S10, S9, S8, S7, V220, V223, V221, V221, V220, V223, 0x0]

================================

Block 0x3e8
[0x3e8:0x40d]
---
Predecessors: [0x3df]
Successors: [0x40e]
---
0x3e8 DUP1
0x3e9 DUP3
0x3ea ADD
0x3eb MLOAD
0x3ec DUP2
0x3ed DUP5
0x3ee ADD
0x3ef MSTORE
0x3f0 PUSH1 0x20
0x3f2 DUP2
0x3f3 ADD
0x3f4 SWAP1
0x3f5 POP
0x3f6 PUSH2 0x14e
0x3f9 JUMP
0x3fa JUMPDEST
0x3fb POP
0x3fc POP
0x3fd POP
0x3fe POP
0x3ff SWAP1
0x400 POP
0x401 SWAP1
0x402 DUP2
0x403 ADD
0x404 SWAP1
0x405 PUSH1 0x1f
0x407 AND
0x408 DUP1
0x409 ISZERO
0x40a PUSH2 0x196
0x40d JUMPI
---
0x3ea: V228 = ADD V223 0x0
0x3eb: V229 = M[V228]
0x3ee: V230 = ADD V220 0x0
0x3ef: M[V230] = V229
0x3f0: V231 = 0x20
0x3f3: V232 = ADD 0x0 0x20
0x3f6: V233 = 0x14e
0x3f9: THROW 
0x3fa: JUMPDEST 
0x403: V234 = ADD S4 S6
0x405: V235 = 0x1f
0x407: V236 = AND 0x1f S4
0x409: V237 = ISZERO V236
0x40a: V238 = 0x196
0x40d: THROWI V237
---
Entry stack: [S11, S10, S9, S8, S7, V220, V223, V221, V221, V220, V223, 0x0]
Stack pops: 3
Stack additions: [V236, V234]
Exit stack: []

================================

Block 0x40e
[0x40e:0x426]
---
Predecessors: [0x3e8]
Successors: [0x427]
---
0x40e DUP1
0x40f DUP3
0x410 SUB
0x411 DUP1
0x412 MLOAD
0x413 PUSH1 0x1
0x415 DUP4
0x416 PUSH1 0x20
0x418 SUB
0x419 PUSH2 0x100
0x41c EXP
0x41d SUB
0x41e NOT
0x41f AND
0x420 DUP2
0x421 MSTORE
0x422 PUSH1 0x20
0x424 ADD
0x425 SWAP2
0x426 POP
---
0x410: V239 = SUB V234 V236
0x412: V240 = M[V239]
0x413: V241 = 0x1
0x416: V242 = 0x20
0x418: V243 = SUB 0x20 V236
0x419: V244 = 0x100
0x41c: V245 = EXP 0x100 V243
0x41d: V246 = SUB V245 0x1
0x41e: V247 = NOT V246
0x41f: V248 = AND V247 V240
0x421: M[V239] = V248
0x422: V249 = 0x20
0x424: V250 = ADD 0x20 V239
---
Entry stack: [V234, V236]
Stack pops: 2
Stack additions: [V250, S0]
Exit stack: [V250, V236]

================================

Block 0x427
[0x427:0x440]
---
Predecessors: [0x40e]
Successors: [0x441]
---
0x427 JUMPDEST
0x428 POP
0x429 SWAP7
0x42a POP
0x42b POP
0x42c POP
0x42d POP
0x42e POP
0x42f POP
0x430 POP
0x431 PUSH1 0x40
0x433 MLOAD
0x434 DUP1
0x435 SWAP2
0x436 SUB
0x437 SWAP1
0x438 RETURN
0x439 JUMPDEST
0x43a CALLVALUE
0x43b DUP1
0x43c ISZERO
0x43d PUSH2 0x1b4
0x440 JUMPI
---
0x427: JUMPDEST 
0x431: V251 = 0x40
0x433: V252 = M[0x40]
0x436: V253 = SUB V250 V252
0x438: RETURN V252 V253
0x439: JUMPDEST 
0x43a: V254 = CALLVALUE
0x43c: V255 = ISZERO V254
0x43d: V256 = 0x1b4
0x440: THROWI V255
---
Entry stack: [V250, V236]
Stack pops: 18
Stack additions: [V254]
Exit stack: []

================================

Block 0x441
[0x441:0x4d1]
---
Predecessors: [0x427]
Successors: [0x4d2]
---
0x441 PUSH1 0x0
0x443 DUP1
0x444 REVERT
0x445 JUMPDEST
0x446 POP
0x447 PUSH2 0x21f
0x44a PUSH1 0x4
0x44c DUP1
0x44d CALLDATASIZE
0x44e SUB
0x44f DUP2
0x450 ADD
0x451 SWAP1
0x452 DUP1
0x453 DUP1
0x454 CALLDATALOAD
0x455 PUSH4 0xffffffff
0x45a AND
0x45b SWAP1
0x45c PUSH1 0x20
0x45e ADD
0x45f SWAP1
0x460 SWAP3
0x461 SWAP2
0x462 SWAP1
0x463 DUP1
0x464 CALLDATALOAD
0x465 SWAP1
0x466 PUSH1 0x20
0x468 ADD
0x469 SWAP1
0x46a DUP3
0x46b ADD
0x46c DUP1
0x46d CALLDATALOAD
0x46e SWAP1
0x46f PUSH1 0x20
0x471 ADD
0x472 SWAP1
0x473 DUP1
0x474 DUP1
0x475 PUSH1 0x1f
0x477 ADD
0x478 PUSH1 0x20
0x47a DUP1
0x47b SWAP2
0x47c DIV
0x47d MUL
0x47e PUSH1 0x20
0x480 ADD
0x481 PUSH1 0x40
0x483 MLOAD
0x484 SWAP1
0x485 DUP2
0x486 ADD
0x487 PUSH1 0x40
0x489 MSTORE
0x48a DUP1
0x48b SWAP4
0x48c SWAP3
0x48d SWAP2
0x48e SWAP1
0x48f DUP2
0x490 DUP2
0x491 MSTORE
0x492 PUSH1 0x20
0x494 ADD
0x495 DUP4
0x496 DUP4
0x497 DUP1
0x498 DUP3
0x499 DUP5
0x49a CALLDATACOPY
0x49b DUP3
0x49c ADD
0x49d SWAP2
0x49e POP
0x49f POP
0x4a0 POP
0x4a1 POP
0x4a2 POP
0x4a3 POP
0x4a4 SWAP2
0x4a5 SWAP3
0x4a6 SWAP2
0x4a7 SWAP3
0x4a8 SWAP1
0x4a9 POP
0x4aa POP
0x4ab POP
0x4ac PUSH2 0x559
0x4af JUMP
0x4b0 JUMPDEST
0x4b1 PUSH1 0x40
0x4b3 MLOAD
0x4b4 DUP1
0x4b5 DUP3
0x4b6 ISZERO
0x4b7 ISZERO
0x4b8 ISZERO
0x4b9 ISZERO
0x4ba DUP2
0x4bb MSTORE
0x4bc PUSH1 0x20
0x4be ADD
0x4bf SWAP2
0x4c0 POP
0x4c1 POP
0x4c2 PUSH1 0x40
0x4c4 MLOAD
0x4c5 DUP1
0x4c6 SWAP2
0x4c7 SUB
0x4c8 SWAP1
0x4c9 RETURN
0x4ca JUMPDEST
0x4cb CALLVALUE
0x4cc DUP1
0x4cd ISZERO
0x4ce PUSH2 0x245
0x4d1 JUMPI
---
0x441: V257 = 0x0
0x444: REVERT 0x0 0x0
0x445: JUMPDEST 
0x447: V258 = 0x21f
0x44a: V259 = 0x4
0x44d: V260 = CALLDATASIZE
0x44e: V261 = SUB V260 0x4
0x450: V262 = ADD 0x4 V261
0x454: V263 = CALLDATALOAD 0x4
0x455: V264 = 0xffffffff
0x45a: V265 = AND 0xffffffff V263
0x45c: V266 = 0x20
0x45e: V267 = ADD 0x20 0x4
0x464: V268 = CALLDATALOAD 0x24
0x466: V269 = 0x20
0x468: V270 = ADD 0x20 0x24
0x46b: V271 = ADD 0x4 V268
0x46d: V272 = CALLDATALOAD V271
0x46f: V273 = 0x20
0x471: V274 = ADD 0x20 V271
0x475: V275 = 0x1f
0x477: V276 = ADD 0x1f V272
0x478: V277 = 0x20
0x47c: V278 = DIV V276 0x20
0x47d: V279 = MUL V278 0x20
0x47e: V280 = 0x20
0x480: V281 = ADD 0x20 V279
0x481: V282 = 0x40
0x483: V283 = M[0x40]
0x486: V284 = ADD V283 V281
0x487: V285 = 0x40
0x489: M[0x40] = V284
0x491: M[V283] = V272
0x492: V286 = 0x20
0x494: V287 = ADD 0x20 V283
0x49a: CALLDATACOPY V287 V274 V272
0x49c: V288 = ADD V287 V272
0x4ac: V289 = 0x559
0x4af: THROW 
0x4b0: JUMPDEST 
0x4b1: V290 = 0x40
0x4b3: V291 = M[0x40]
0x4b6: V292 = ISZERO S0
0x4b7: V293 = ISZERO V292
0x4b8: V294 = ISZERO V293
0x4b9: V295 = ISZERO V294
0x4bb: M[V291] = V295
0x4bc: V296 = 0x20
0x4be: V297 = ADD 0x20 V291
0x4c2: V298 = 0x40
0x4c4: V299 = M[0x40]
0x4c7: V300 = SUB V297 V299
0x4c9: RETURN V299 V300
0x4ca: JUMPDEST 
0x4cb: V301 = CALLVALUE
0x4cd: V302 = ISZERO V301
0x4ce: V303 = 0x245
0x4d1: THROWI V302
---
Entry stack: [V254]
Stack pops: 0
Stack additions: [V283, V265, 0x21f, V301]
Exit stack: []

================================

Block 0x4d2
[0x4d2:0x540]
---
Predecessors: [0x441]
Successors: [0x7ea]
---
0x4d2 PUSH1 0x0
0x4d4 DUP1
0x4d5 REVERT
0x4d6 JUMPDEST
0x4d7 POP
0x4d8 PUSH2 0x2b0
0x4db PUSH1 0x4
0x4dd DUP1
0x4de CALLDATASIZE
0x4df SUB
0x4e0 DUP2
0x4e1 ADD
0x4e2 SWAP1
0x4e3 DUP1
0x4e4 DUP1
0x4e5 CALLDATALOAD
0x4e6 PUSH4 0xffffffff
0x4eb AND
0x4ec SWAP1
0x4ed PUSH1 0x20
0x4ef ADD
0x4f0 SWAP1
0x4f1 SWAP3
0x4f2 SWAP2
0x4f3 SWAP1
0x4f4 DUP1
0x4f5 CALLDATALOAD
0x4f6 SWAP1
0x4f7 PUSH1 0x20
0x4f9 ADD
0x4fa SWAP1
0x4fb DUP3
0x4fc ADD
0x4fd DUP1
0x4fe CALLDATALOAD
0x4ff SWAP1
0x500 PUSH1 0x20
0x502 ADD
0x503 SWAP1
0x504 DUP1
0x505 DUP1
0x506 PUSH1 0x1f
0x508 ADD
0x509 PUSH1 0x20
0x50b DUP1
0x50c SWAP2
0x50d DIV
0x50e MUL
0x50f PUSH1 0x20
0x511 ADD
0x512 PUSH1 0x40
0x514 MLOAD
0x515 SWAP1
0x516 DUP2
0x517 ADD
0x518 PUSH1 0x40
0x51a MSTORE
0x51b DUP1
0x51c SWAP4
0x51d SWAP3
0x51e SWAP2
0x51f SWAP1
0x520 DUP2
0x521 DUP2
0x522 MSTORE
0x523 PUSH1 0x20
0x525 ADD
0x526 DUP4
0x527 DUP4
0x528 DUP1
0x529 DUP3
0x52a DUP5
0x52b CALLDATACOPY
0x52c DUP3
0x52d ADD
0x52e SWAP2
0x52f POP
0x530 POP
0x531 POP
0x532 POP
0x533 POP
0x534 POP
0x535 SWAP2
0x536 SWAP3
0x537 SWAP2
0x538 SWAP3
0x539 SWAP1
0x53a POP
0x53b POP
0x53c POP
0x53d PUSH2 0x7ea
0x540 JUMP
---
0x4d2: V304 = 0x0
0x4d5: REVERT 0x0 0x0
0x4d6: JUMPDEST 
0x4d8: V305 = 0x2b0
0x4db: V306 = 0x4
0x4de: V307 = CALLDATASIZE
0x4df: V308 = SUB V307 0x4
0x4e1: V309 = ADD 0x4 V308
0x4e5: V310 = CALLDATALOAD 0x4
0x4e6: V311 = 0xffffffff
0x4eb: V312 = AND 0xffffffff V310
0x4ed: V313 = 0x20
0x4ef: V314 = ADD 0x20 0x4
0x4f5: V315 = CALLDATALOAD 0x24
0x4f7: V316 = 0x20
0x4f9: V317 = ADD 0x20 0x24
0x4fc: V318 = ADD 0x4 V315
0x4fe: V319 = CALLDATALOAD V318
0x500: V320 = 0x20
0x502: V321 = ADD 0x20 V318
0x506: V322 = 0x1f
0x508: V323 = ADD 0x1f V319
0x509: V324 = 0x20
0x50d: V325 = DIV V323 0x20
0x50e: V326 = MUL V325 0x20
0x50f: V327 = 0x20
0x511: V328 = ADD 0x20 V326
0x512: V329 = 0x40
0x514: V330 = M[0x40]
0x517: V331 = ADD V330 V328
0x518: V332 = 0x40
0x51a: M[0x40] = V331
0x522: M[V330] = V319
0x523: V333 = 0x20
0x525: V334 = ADD 0x20 V330
0x52b: CALLDATACOPY V334 V321 V319
0x52d: V335 = ADD V334 V319
0x53d: V336 = 0x7ea
0x540: JUMP 0x7ea
---
Entry stack: [V301]
Stack pops: 0
Stack additions: [V330, V312, 0x2b0]
Exit stack: []

================================

Block 0x541
[0x541:0x562]
---
Predecessors: []
Successors: [0x563]
---
0x541 JUMPDEST
0x542 PUSH1 0x40
0x544 MLOAD
0x545 DUP1
0x546 DUP3
0x547 ISZERO
0x548 ISZERO
0x549 ISZERO
0x54a ISZERO
0x54b DUP2
0x54c MSTORE
0x54d PUSH1 0x20
0x54f ADD
0x550 SWAP2
0x551 POP
0x552 POP
0x553 PUSH1 0x40
0x555 MLOAD
0x556 DUP1
0x557 SWAP2
0x558 SUB
0x559 SWAP1
0x55a RETURN
0x55b JUMPDEST
0x55c CALLVALUE
0x55d DUP1
0x55e ISZERO
0x55f PUSH2 0x2d6
0x562 JUMPI
---
0x541: JUMPDEST 
0x542: V337 = 0x40
0x544: V338 = M[0x40]
0x547: V339 = ISZERO S0
0x548: V340 = ISZERO V339
0x549: V341 = ISZERO V340
0x54a: V342 = ISZERO V341
0x54c: M[V338] = V342
0x54d: V343 = 0x20
0x54f: V344 = ADD 0x20 V338
0x553: V345 = 0x40
0x555: V346 = M[0x40]
0x558: V347 = SUB V344 V346
0x55a: RETURN V346 V347
0x55b: JUMPDEST 
0x55c: V348 = CALLVALUE
0x55e: V349 = ISZERO V348
0x55f: V350 = 0x2d6
0x562: THROWI V349
---
Entry stack: []
Stack pops: 2
Stack additions: [V348]
Exit stack: []

================================

Block 0x563
[0x563:0x5b9]
---
Predecessors: [0x541]
Successors: [0x5ba]
---
0x563 PUSH1 0x0
0x565 DUP1
0x566 REVERT
0x567 JUMPDEST
0x568 POP
0x569 PUSH2 0x2df
0x56c PUSH2 0xab8
0x56f JUMP
0x570 JUMPDEST
0x571 PUSH1 0x40
0x573 MLOAD
0x574 DUP1
0x575 DUP3
0x576 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x58b AND
0x58c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5a1 AND
0x5a2 DUP2
0x5a3 MSTORE
0x5a4 PUSH1 0x20
0x5a6 ADD
0x5a7 SWAP2
0x5a8 POP
0x5a9 POP
0x5aa PUSH1 0x40
0x5ac MLOAD
0x5ad DUP1
0x5ae SWAP2
0x5af SUB
0x5b0 SWAP1
0x5b1 RETURN
0x5b2 JUMPDEST
0x5b3 CALLVALUE
0x5b4 DUP1
0x5b5 ISZERO
0x5b6 PUSH2 0x32d
0x5b9 JUMPI
---
0x563: V351 = 0x0
0x566: REVERT 0x0 0x0
0x567: JUMPDEST 
0x569: V352 = 0x2df
0x56c: V353 = 0xab8
0x56f: THROW 
0x570: JUMPDEST 
0x571: V354 = 0x40
0x573: V355 = M[0x40]
0x576: V356 = 0xffffffffffffffffffffffffffffffffffffffff
0x58b: V357 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x58c: V358 = 0xffffffffffffffffffffffffffffffffffffffff
0x5a1: V359 = AND 0xffffffffffffffffffffffffffffffffffffffff V357
0x5a3: M[V355] = V359
0x5a4: V360 = 0x20
0x5a6: V361 = ADD 0x20 V355
0x5aa: V362 = 0x40
0x5ac: V363 = M[0x40]
0x5af: V364 = SUB V361 V363
0x5b1: RETURN V363 V364
0x5b2: JUMPDEST 
0x5b3: V365 = CALLVALUE
0x5b5: V366 = ISZERO V365
0x5b6: V367 = 0x32d
0x5b9: THROWI V366
---
Entry stack: [V348]
Stack pops: 0
Stack additions: [0x2df, V365]
Exit stack: []

================================

Block 0x5ba
[0x5ba:0x6f1]
---
Predecessors: [0x563]
Successors: [0x6f2]
---
0x5ba PUSH1 0x0
0x5bc DUP1
0x5bd REVERT
0x5be JUMPDEST
0x5bf POP
0x5c0 PUSH2 0x362
0x5c3 PUSH1 0x4
0x5c5 DUP1
0x5c6 CALLDATASIZE
0x5c7 SUB
0x5c8 DUP2
0x5c9 ADD
0x5ca SWAP1
0x5cb DUP1
0x5cc DUP1
0x5cd CALLDATALOAD
0x5ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5e3 AND
0x5e4 SWAP1
0x5e5 PUSH1 0x20
0x5e7 ADD
0x5e8 SWAP1
0x5e9 SWAP3
0x5ea SWAP2
0x5eb SWAP1
0x5ec POP
0x5ed POP
0x5ee POP
0x5ef PUSH2 0xadd
0x5f2 JUMP
0x5f3 JUMPDEST
0x5f4 STOP
0x5f5 JUMPDEST
0x5f6 PUSH1 0x0
0x5f8 PUSH1 0x60
0x5fa DUP1
0x5fb PUSH1 0x0
0x5fd PUSH1 0x1
0x5ff PUSH1 0x0
0x601 DUP7
0x602 PUSH4 0xffffffff
0x607 AND
0x608 PUSH4 0xffffffff
0x60d AND
0x60e DUP2
0x60f MSTORE
0x610 PUSH1 0x20
0x612 ADD
0x613 SWAP1
0x614 DUP2
0x615 MSTORE
0x616 PUSH1 0x20
0x618 ADD
0x619 PUSH1 0x0
0x61b SHA3
0x61c PUSH1 0x0
0x61e ADD
0x61f PUSH1 0x0
0x621 SWAP1
0x622 SLOAD
0x623 SWAP1
0x624 PUSH2 0x100
0x627 EXP
0x628 SWAP1
0x629 DIV
0x62a PUSH4 0xffffffff
0x62f AND
0x630 PUSH1 0x1
0x632 PUSH1 0x0
0x634 DUP8
0x635 PUSH4 0xffffffff
0x63a AND
0x63b PUSH4 0xffffffff
0x640 AND
0x641 DUP2
0x642 MSTORE
0x643 PUSH1 0x20
0x645 ADD
0x646 SWAP1
0x647 DUP2
0x648 MSTORE
0x649 PUSH1 0x20
0x64b ADD
0x64c PUSH1 0x0
0x64e SHA3
0x64f PUSH1 0x1
0x651 ADD
0x652 PUSH1 0x1
0x654 PUSH1 0x0
0x656 DUP9
0x657 PUSH4 0xffffffff
0x65c AND
0x65d PUSH4 0xffffffff
0x662 AND
0x663 DUP2
0x664 MSTORE
0x665 PUSH1 0x20
0x667 ADD
0x668 SWAP1
0x669 DUP2
0x66a MSTORE
0x66b PUSH1 0x20
0x66d ADD
0x66e PUSH1 0x0
0x670 SHA3
0x671 PUSH1 0x2
0x673 ADD
0x674 PUSH1 0x1
0x676 PUSH1 0x0
0x678 DUP10
0x679 PUSH4 0xffffffff
0x67e AND
0x67f PUSH4 0xffffffff
0x684 AND
0x685 DUP2
0x686 MSTORE
0x687 PUSH1 0x20
0x689 ADD
0x68a SWAP1
0x68b DUP2
0x68c MSTORE
0x68d PUSH1 0x20
0x68f ADD
0x690 PUSH1 0x0
0x692 SHA3
0x693 PUSH1 0x3
0x695 ADD
0x696 PUSH1 0x0
0x698 SWAP1
0x699 SLOAD
0x69a SWAP1
0x69b PUSH2 0x100
0x69e EXP
0x69f SWAP1
0x6a0 DIV
0x6a1 PUSH1 0xff
0x6a3 AND
0x6a4 DUP3
0x6a5 DUP1
0x6a6 SLOAD
0x6a7 PUSH1 0x1
0x6a9 DUP2
0x6aa PUSH1 0x1
0x6ac AND
0x6ad ISZERO
0x6ae PUSH2 0x100
0x6b1 MUL
0x6b2 SUB
0x6b3 AND
0x6b4 PUSH1 0x2
0x6b6 SWAP1
0x6b7 DIV
0x6b8 DUP1
0x6b9 PUSH1 0x1f
0x6bb ADD
0x6bc PUSH1 0x20
0x6be DUP1
0x6bf SWAP2
0x6c0 DIV
0x6c1 MUL
0x6c2 PUSH1 0x20
0x6c4 ADD
0x6c5 PUSH1 0x40
0x6c7 MLOAD
0x6c8 SWAP1
0x6c9 DUP2
0x6ca ADD
0x6cb PUSH1 0x40
0x6cd MSTORE
0x6ce DUP1
0x6cf SWAP3
0x6d0 SWAP2
0x6d1 SWAP1
0x6d2 DUP2
0x6d3 DUP2
0x6d4 MSTORE
0x6d5 PUSH1 0x20
0x6d7 ADD
0x6d8 DUP3
0x6d9 DUP1
0x6da SLOAD
0x6db PUSH1 0x1
0x6dd DUP2
0x6de PUSH1 0x1
0x6e0 AND
0x6e1 ISZERO
0x6e2 PUSH2 0x100
0x6e5 MUL
0x6e6 SUB
0x6e7 AND
0x6e8 PUSH1 0x2
0x6ea SWAP1
0x6eb DIV
0x6ec DUP1
0x6ed ISZERO
0x6ee PUSH2 0x4a7
0x6f1 JUMPI
---
0x5ba: V368 = 0x0
0x5bd: REVERT 0x0 0x0
0x5be: JUMPDEST 
0x5c0: V369 = 0x362
0x5c3: V370 = 0x4
0x5c6: V371 = CALLDATASIZE
0x5c7: V372 = SUB V371 0x4
0x5c9: V373 = ADD 0x4 V372
0x5cd: V374 = CALLDATALOAD 0x4
0x5ce: V375 = 0xffffffffffffffffffffffffffffffffffffffff
0x5e3: V376 = AND 0xffffffffffffffffffffffffffffffffffffffff V374
0x5e5: V377 = 0x20
0x5e7: V378 = ADD 0x20 0x4
0x5ef: V379 = 0xadd
0x5f2: THROW 
0x5f3: JUMPDEST 
0x5f4: STOP 
0x5f5: JUMPDEST 
0x5f6: V380 = 0x0
0x5f8: V381 = 0x60
0x5fb: V382 = 0x0
0x5fd: V383 = 0x1
0x5ff: V384 = 0x0
0x602: V385 = 0xffffffff
0x607: V386 = AND 0xffffffff S0
0x608: V387 = 0xffffffff
0x60d: V388 = AND 0xffffffff V386
0x60f: M[0x0] = V388
0x610: V389 = 0x20
0x612: V390 = ADD 0x20 0x0
0x615: M[0x20] = 0x1
0x616: V391 = 0x20
0x618: V392 = ADD 0x20 0x20
0x619: V393 = 0x0
0x61b: V394 = SHA3 0x0 0x40
0x61c: V395 = 0x0
0x61e: V396 = ADD 0x0 V394
0x61f: V397 = 0x0
0x622: V398 = S[V396]
0x624: V399 = 0x100
0x627: V400 = EXP 0x100 0x0
0x629: V401 = DIV V398 0x1
0x62a: V402 = 0xffffffff
0x62f: V403 = AND 0xffffffff V401
0x630: V404 = 0x1
0x632: V405 = 0x0
0x635: V406 = 0xffffffff
0x63a: V407 = AND 0xffffffff S0
0x63b: V408 = 0xffffffff
0x640: V409 = AND 0xffffffff V407
0x642: M[0x0] = V409
0x643: V410 = 0x20
0x645: V411 = ADD 0x20 0x0
0x648: M[0x20] = 0x1
0x649: V412 = 0x20
0x64b: V413 = ADD 0x20 0x20
0x64c: V414 = 0x0
0x64e: V415 = SHA3 0x0 0x40
0x64f: V416 = 0x1
0x651: V417 = ADD 0x1 V415
0x652: V418 = 0x1
0x654: V419 = 0x0
0x657: V420 = 0xffffffff
0x65c: V421 = AND 0xffffffff S0
0x65d: V422 = 0xffffffff
0x662: V423 = AND 0xffffffff V421
0x664: M[0x0] = V423
0x665: V424 = 0x20
0x667: V425 = ADD 0x20 0x0
0x66a: M[0x20] = 0x1
0x66b: V426 = 0x20
0x66d: V427 = ADD 0x20 0x20
0x66e: V428 = 0x0
0x670: V429 = SHA3 0x0 0x40
0x671: V430 = 0x2
0x673: V431 = ADD 0x2 V429
0x674: V432 = 0x1
0x676: V433 = 0x0
0x679: V434 = 0xffffffff
0x67e: V435 = AND 0xffffffff S0
0x67f: V436 = 0xffffffff
0x684: V437 = AND 0xffffffff V435
0x686: M[0x0] = V437
0x687: V438 = 0x20
0x689: V439 = ADD 0x20 0x0
0x68c: M[0x20] = 0x1
0x68d: V440 = 0x20
0x68f: V441 = ADD 0x20 0x20
0x690: V442 = 0x0
0x692: V443 = SHA3 0x0 0x40
0x693: V444 = 0x3
0x695: V445 = ADD 0x3 V443
0x696: V446 = 0x0
0x699: V447 = S[V445]
0x69b: V448 = 0x100
0x69e: V449 = EXP 0x100 0x0
0x6a0: V450 = DIV V447 0x1
0x6a1: V451 = 0xff
0x6a3: V452 = AND 0xff V450
0x6a6: V453 = S[V417]
0x6a7: V454 = 0x1
0x6aa: V455 = 0x1
0x6ac: V456 = AND 0x1 V453
0x6ad: V457 = ISZERO V456
0x6ae: V458 = 0x100
0x6b1: V459 = MUL 0x100 V457
0x6b2: V460 = SUB V459 0x1
0x6b3: V461 = AND V460 V453
0x6b4: V462 = 0x2
0x6b7: V463 = DIV V461 0x2
0x6b9: V464 = 0x1f
0x6bb: V465 = ADD 0x1f V463
0x6bc: V466 = 0x20
0x6c0: V467 = DIV V465 0x20
0x6c1: V468 = MUL V467 0x20
0x6c2: V469 = 0x20
0x6c4: V470 = ADD 0x20 V468
0x6c5: V471 = 0x40
0x6c7: V472 = M[0x40]
0x6ca: V473 = ADD V472 V470
0x6cb: V474 = 0x40
0x6cd: M[0x40] = V473
0x6d4: M[V472] = V463
0x6d5: V475 = 0x20
0x6d7: V476 = ADD 0x20 V472
0x6da: V477 = S[V417]
0x6db: V478 = 0x1
0x6de: V479 = 0x1
0x6e0: V480 = AND 0x1 V477
0x6e1: V481 = ISZERO V480
0x6e2: V482 = 0x100
0x6e5: V483 = MUL 0x100 V481
0x6e6: V484 = SUB V483 0x1
0x6e7: V485 = AND V484 V477
0x6e8: V486 = 0x2
0x6eb: V487 = DIV V485 0x2
0x6ed: V488 = ISZERO V487
0x6ee: V489 = 0x4a7
0x6f1: THROWI V488
---
Entry stack: [V365]
Stack pops: 0
Stack additions: [V376, 0x362, V487, V417, V476, V463, V417, V472, V452, V431, V417, V403, 0x0, 0x60, 0x60, 0x0, S0]
Exit stack: []

================================

Block 0x6f2
[0x6f2:0x6f9]
---
Predecessors: [0x5ba]
Successors: [0x6fa]
---
0x6f2 DUP1
0x6f3 PUSH1 0x1f
0x6f5 LT
0x6f6 PUSH2 0x47c
0x6f9 JUMPI
---
0x6f3: V490 = 0x1f
0x6f5: V491 = LT 0x1f V487
0x6f6: V492 = 0x47c
0x6f9: THROWI V491
---
Entry stack: [S14, 0x0, 0x60, 0x60, 0x0, V403, V417, V431, V452, V472, V417, V463, V476, V417, V487]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S14, 0x0, 0x60, 0x60, 0x0, V403, V417, V431, V452, V472, V417, V463, V476, V417, V487]

================================

Block 0x6fa
[0x6fa:0x71a]
---
Predecessors: [0x6f2]
Successors: [0x71b]
---
0x6fa PUSH2 0x100
0x6fd DUP1
0x6fe DUP4
0x6ff SLOAD
0x700 DIV
0x701 MUL
0x702 DUP4
0x703 MSTORE
0x704 SWAP2
0x705 PUSH1 0x20
0x707 ADD
0x708 SWAP2
0x709 PUSH2 0x4a7
0x70c JUMP
0x70d JUMPDEST
0x70e DUP3
0x70f ADD
0x710 SWAP2
0x711 SWAP1
0x712 PUSH1 0x0
0x714 MSTORE
0x715 PUSH1 0x20
0x717 PUSH1 0x0
0x719 SHA3
0x71a SWAP1
---
0x6fa: V493 = 0x100
0x6ff: V494 = S[V417]
0x700: V495 = DIV V494 0x100
0x701: V496 = MUL V495 0x100
0x703: M[V476] = V496
0x705: V497 = 0x20
0x707: V498 = ADD 0x20 V476
0x709: V499 = 0x4a7
0x70c: THROW 
0x70d: JUMPDEST 
0x70f: V500 = ADD S2 S0
0x712: V501 = 0x0
0x714: M[0x0] = S1
0x715: V502 = 0x20
0x717: V503 = 0x0
0x719: V504 = SHA3 0x0 0x20
---
Entry stack: [S14, 0x0, 0x60, 0x60, 0x0, V403, V417, V431, V452, V472, V417, V463, V476, V417, V487]
Stack pops: 3
Stack additions: [S2, V504, V500]
Exit stack: []

================================

Block 0x71b
[0x71b:0x72e]
---
Predecessors: [0x6fa]
Successors: [0x72f]
---
0x71b JUMPDEST
0x71c DUP2
0x71d SLOAD
0x71e DUP2
0x71f MSTORE
0x720 SWAP1
0x721 PUSH1 0x1
0x723 ADD
0x724 SWAP1
0x725 PUSH1 0x20
0x727 ADD
0x728 DUP1
0x729 DUP4
0x72a GT
0x72b PUSH2 0x48a
0x72e JUMPI
---
0x71b: JUMPDEST 
0x71d: V505 = S[V504]
0x71f: M[S0] = V505
0x721: V506 = 0x1
0x723: V507 = ADD 0x1 V504
0x725: V508 = 0x20
0x727: V509 = ADD 0x20 S0
0x72a: V510 = GT V500 V509
0x72b: V511 = 0x48a
0x72e: THROWI V510
---
Entry stack: [V500, V504, S0]
Stack pops: 3
Stack additions: [S2, V507, V509]
Exit stack: [V500, V507, V509]

================================

Block 0x72f
[0x72f:0x737]
---
Predecessors: [0x71b]
Successors: [0x738]
---
0x72f DUP3
0x730 SWAP1
0x731 SUB
0x732 PUSH1 0x1f
0x734 AND
0x735 DUP3
0x736 ADD
0x737 SWAP2
---
0x731: V512 = SUB V509 V500
0x732: V513 = 0x1f
0x734: V514 = AND 0x1f V512
0x736: V515 = ADD V500 V514
---
Entry stack: [V500, V507, V509]
Stack pops: 3
Stack additions: [V515, S1, S2]
Exit stack: [V515, V507, V500]

================================

Block 0x738
[0x738:0x78d]
---
Predecessors: [0x72f]
Successors: [0x78e]
---
0x738 JUMPDEST
0x739 POP
0x73a POP
0x73b POP
0x73c POP
0x73d POP
0x73e SWAP3
0x73f POP
0x740 DUP2
0x741 DUP1
0x742 SLOAD
0x743 PUSH1 0x1
0x745 DUP2
0x746 PUSH1 0x1
0x748 AND
0x749 ISZERO
0x74a PUSH2 0x100
0x74d MUL
0x74e SUB
0x74f AND
0x750 PUSH1 0x2
0x752 SWAP1
0x753 DIV
0x754 DUP1
0x755 PUSH1 0x1f
0x757 ADD
0x758 PUSH1 0x20
0x75a DUP1
0x75b SWAP2
0x75c DIV
0x75d MUL
0x75e PUSH1 0x20
0x760 ADD
0x761 PUSH1 0x40
0x763 MLOAD
0x764 SWAP1
0x765 DUP2
0x766 ADD
0x767 PUSH1 0x40
0x769 MSTORE
0x76a DUP1
0x76b SWAP3
0x76c SWAP2
0x76d SWAP1
0x76e DUP2
0x76f DUP2
0x770 MSTORE
0x771 PUSH1 0x20
0x773 ADD
0x774 DUP3
0x775 DUP1
0x776 SLOAD
0x777 PUSH1 0x1
0x779 DUP2
0x77a PUSH1 0x1
0x77c AND
0x77d ISZERO
0x77e PUSH2 0x100
0x781 MUL
0x782 SUB
0x783 AND
0x784 PUSH1 0x2
0x786 SWAP1
0x787 DIV
0x788 DUP1
0x789 ISZERO
0x78a PUSH2 0x543
0x78d JUMPI
---
0x738: JUMPDEST 
0x742: V516 = S[S7]
0x743: V517 = 0x1
0x746: V518 = 0x1
0x748: V519 = AND 0x1 V516
0x749: V520 = ISZERO V519
0x74a: V521 = 0x100
0x74d: V522 = MUL 0x100 V520
0x74e: V523 = SUB V522 0x1
0x74f: V524 = AND V523 V516
0x750: V525 = 0x2
0x753: V526 = DIV V524 0x2
0x755: V527 = 0x1f
0x757: V528 = ADD 0x1f V526
0x758: V529 = 0x20
0x75c: V530 = DIV V528 0x20
0x75d: V531 = MUL V530 0x20
0x75e: V532 = 0x20
0x760: V533 = ADD 0x20 V531
0x761: V534 = 0x40
0x763: V535 = M[0x40]
0x766: V536 = ADD V535 V533
0x767: V537 = 0x40
0x769: M[0x40] = V536
0x770: M[V535] = V526
0x771: V538 = 0x20
0x773: V539 = ADD 0x20 V535
0x776: V540 = S[S7]
0x777: V541 = 0x1
0x77a: V542 = 0x1
0x77c: V543 = AND 0x1 V540
0x77d: V544 = ISZERO V543
0x77e: V545 = 0x100
0x781: V546 = MUL 0x100 V544
0x782: V547 = SUB V546 0x1
0x783: V548 = AND V547 V540
0x784: V549 = 0x2
0x787: V550 = DIV V548 0x2
0x789: V551 = ISZERO V550
0x78a: V552 = 0x543
0x78d: THROWI V551
---
Entry stack: [V515, V507, V500]
Stack pops: 9
Stack additions: [S5, S7, S6, V535, S7, V526, V539, S7, V550]
Exit stack: [S2, S4, S3, V535, S4, V526, V539, S4, V550]

================================

Block 0x78e
[0x78e:0x795]
---
Predecessors: [0x738]
Successors: [0x796]
---
0x78e DUP1
0x78f PUSH1 0x1f
0x791 LT
0x792 PUSH2 0x518
0x795 JUMPI
---
0x78f: V553 = 0x1f
0x791: V554 = LT 0x1f V550
0x792: V555 = 0x518
0x795: THROWI V554
---
Entry stack: [S8, S7, S6, V535, S4, V526, V539, S1, V550]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S8, S7, S6, V535, S4, V526, V539, S1, V550]

================================

Block 0x796
[0x796:0x7b6]
---
Predecessors: [0x78e]
Successors: [0x7b7]
---
0x796 PUSH2 0x100
0x799 DUP1
0x79a DUP4
0x79b SLOAD
0x79c DIV
0x79d MUL
0x79e DUP4
0x79f MSTORE
0x7a0 SWAP2
0x7a1 PUSH1 0x20
0x7a3 ADD
0x7a4 SWAP2
0x7a5 PUSH2 0x543
0x7a8 JUMP
0x7a9 JUMPDEST
0x7aa DUP3
0x7ab ADD
0x7ac SWAP2
0x7ad SWAP1
0x7ae PUSH1 0x0
0x7b0 MSTORE
0x7b1 PUSH1 0x20
0x7b3 PUSH1 0x0
0x7b5 SHA3
0x7b6 SWAP1
---
0x796: V556 = 0x100
0x79b: V557 = S[S1]
0x79c: V558 = DIV V557 0x100
0x79d: V559 = MUL V558 0x100
0x79f: M[V539] = V559
0x7a1: V560 = 0x20
0x7a3: V561 = ADD 0x20 V539
0x7a5: V562 = 0x543
0x7a8: THROW 
0x7a9: JUMPDEST 
0x7ab: V563 = ADD S2 S0
0x7ae: V564 = 0x0
0x7b0: M[0x0] = S1
0x7b1: V565 = 0x20
0x7b3: V566 = 0x0
0x7b5: V567 = SHA3 0x0 0x20
---
Entry stack: [S8, S7, S6, V535, S4, V526, V539, S1, V550]
Stack pops: 3
Stack additions: [S2, V567, V563]
Exit stack: []

================================

Block 0x7b7
[0x7b7:0x7ca]
---
Predecessors: [0x796]
Successors: [0x7cb]
---
0x7b7 JUMPDEST
0x7b8 DUP2
0x7b9 SLOAD
0x7ba DUP2
0x7bb MSTORE
0x7bc SWAP1
0x7bd PUSH1 0x1
0x7bf ADD
0x7c0 SWAP1
0x7c1 PUSH1 0x20
0x7c3 ADD
0x7c4 DUP1
0x7c5 DUP4
0x7c6 GT
0x7c7 PUSH2 0x526
0x7ca JUMPI
---
0x7b7: JUMPDEST 
0x7b9: V568 = S[V567]
0x7bb: M[S0] = V568
0x7bd: V569 = 0x1
0x7bf: V570 = ADD 0x1 V567
0x7c1: V571 = 0x20
0x7c3: V572 = ADD 0x20 S0
0x7c6: V573 = GT V563 V572
0x7c7: V574 = 0x526
0x7ca: THROWI V573
---
Entry stack: [V563, V567, S0]
Stack pops: 3
Stack additions: [S2, V570, V572]
Exit stack: [V563, V570, V572]

================================

Block 0x7cb
[0x7cb:0x7d3]
---
Predecessors: [0x7b7]
Successors: [0x7d4]
---
0x7cb DUP3
0x7cc SWAP1
0x7cd SUB
0x7ce PUSH1 0x1f
0x7d0 AND
0x7d1 DUP3
0x7d2 ADD
0x7d3 SWAP2
---
0x7cd: V575 = SUB V572 V563
0x7ce: V576 = 0x1f
0x7d0: V577 = AND 0x1f V575
0x7d2: V578 = ADD V563 V577
---
Entry stack: [V563, V570, V572]
Stack pops: 3
Stack additions: [V578, S1, S2]
Exit stack: [V578, V570, V563]

================================

Block 0x7d4
[0x7d4:0x7e9]
---
Predecessors: [0x7cb]
Successors: []
Has unresolved jump.
---
0x7d4 JUMPDEST
0x7d5 POP
0x7d6 POP
0x7d7 POP
0x7d8 POP
0x7d9 POP
0x7da SWAP2
0x7db POP
0x7dc SWAP4
0x7dd POP
0x7de SWAP4
0x7df POP
0x7e0 SWAP4
0x7e1 POP
0x7e2 SWAP4
0x7e3 POP
0x7e4 SWAP2
0x7e5 SWAP4
0x7e6 POP
0x7e7 SWAP2
0x7e8 SWAP4
0x7e9 JUMP
---
0x7d4: JUMPDEST 
0x7e9: JUMP S15
---
Entry stack: [V578, V570, V563]
Stack pops: 16
Stack additions: [S9, S8, S5, S6]
Exit stack: [S6, S5, S2, S3]

================================

Block 0x7ea
[0x7ea:0x842]
---
Predecessors: [0x4d2]
Successors: [0x843]
---
0x7ea JUMPDEST
0x7eb PUSH1 0x0
0x7ed DUP1
0x7ee PUSH1 0x0
0x7f0 SWAP1
0x7f1 SLOAD
0x7f2 SWAP1
0x7f3 PUSH2 0x100
0x7f6 EXP
0x7f7 SWAP1
0x7f8 DIV
0x7f9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x80e AND
0x80f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x824 AND
0x825 CALLER
0x826 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x83b AND
0x83c EQ
0x83d ISZERO
0x83e ISZERO
0x83f PUSH2 0x5b6
0x842 JUMPI
---
0x7ea: JUMPDEST 
0x7eb: V579 = 0x0
0x7ee: V580 = 0x0
0x7f1: V581 = S[0x0]
0x7f3: V582 = 0x100
0x7f6: V583 = EXP 0x100 0x0
0x7f8: V584 = DIV V581 0x1
0x7f9: V585 = 0xffffffffffffffffffffffffffffffffffffffff
0x80e: V586 = AND 0xffffffffffffffffffffffffffffffffffffffff V584
0x80f: V587 = 0xffffffffffffffffffffffffffffffffffffffff
0x824: V588 = AND 0xffffffffffffffffffffffffffffffffffffffff V586
0x825: V589 = CALLER
0x826: V590 = 0xffffffffffffffffffffffffffffffffffffffff
0x83b: V591 = AND 0xffffffffffffffffffffffffffffffffffffffff V589
0x83c: V592 = EQ V591 V588
0x83d: V593 = ISZERO V592
0x83e: V594 = ISZERO V593
0x83f: V595 = 0x5b6
0x842: THROWI V594
---
Entry stack: [0x2b0, V312, V330]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [0x2b0, V312, V330, 0x0]

================================

Block 0x843
[0x843:0x846]
---
Predecessors: [0x7ea]
Successors: []
---
0x843 PUSH1 0x0
0x845 DUP1
0x846 REVERT
---
0x843: V596 = 0x0
0x846: REVERT 0x0 0x0
---
Entry stack: [0x2b0, V312, V330, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [0x2b0, V312, V330, 0x0]

================================

Block 0x847
[0x847:0x88f]
---
Predecessors: [0x9f7]
Successors: [0x890]
---
0x847 JUMPDEST
0x848 PUSH1 0x0
0x84a PUSH4 0xffffffff
0x84f AND
0x850 PUSH1 0x1
0x852 PUSH1 0x0
0x854 DUP6
0x855 PUSH4 0xffffffff
0x85a AND
0x85b PUSH4 0xffffffff
0x860 AND
0x861 DUP2
0x862 MSTORE
0x863 PUSH1 0x20
0x865 ADD
0x866 SWAP1
0x867 DUP2
0x868 MSTORE
0x869 PUSH1 0x20
0x86b ADD
0x86c PUSH1 0x0
0x86e SHA3
0x86f PUSH1 0x0
0x871 ADD
0x872 PUSH1 0x0
0x874 SWAP1
0x875 SLOAD
0x876 SWAP1
0x877 PUSH2 0x100
0x87a EXP
0x87b SWAP1
0x87c DIV
0x87d PUSH4 0xffffffff
0x882 AND
0x883 PUSH4 0xffffffff
0x888 AND
0x889 EQ
0x88a ISZERO
0x88b ISZERO
0x88c PUSH2 0x66c
0x88f JUMPI
---
0x847: JUMPDEST 
0x848: V597 = 0x0
0x84a: V598 = 0xffffffff
0x84f: V599 = AND 0xffffffff 0x0
0x850: V600 = 0x1
0x852: V601 = 0x0
0x855: V602 = 0xffffffff
0x85a: V603 = AND 0xffffffff S2
0x85b: V604 = 0xffffffff
0x860: V605 = AND 0xffffffff V603
0x862: M[0x0] = V605
0x863: V606 = 0x20
0x865: V607 = ADD 0x20 0x0
0x868: M[0x20] = 0x1
0x869: V608 = 0x20
0x86b: V609 = ADD 0x20 0x20
0x86c: V610 = 0x0
0x86e: V611 = SHA3 0x0 0x40
0x86f: V612 = 0x0
0x871: V613 = ADD 0x0 V611
0x872: V614 = 0x0
0x875: V615 = S[V613]
0x877: V616 = 0x100
0x87a: V617 = EXP 0x100 0x0
0x87c: V618 = DIV V615 0x1
0x87d: V619 = 0xffffffff
0x882: V620 = AND 0xffffffff V618
0x883: V621 = 0xffffffff
0x888: V622 = AND 0xffffffff V620
0x889: V623 = EQ V622 0x0
0x88a: V624 = ISZERO V623
0x88b: V625 = ISZERO V624
0x88c: V626 = 0x66c
0x88f: THROWI V625
---
Entry stack: [0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S1, S0, 0x0]

================================

Block 0x890
[0x890:0x9eb]
---
Predecessors: [0x847]
Successors: [0x9ec]
---
0x890 PUSH1 0x40
0x892 MLOAD
0x893 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x8b4 DUP2
0x8b5 MSTORE
0x8b6 PUSH1 0x4
0x8b8 ADD
0x8b9 DUP1
0x8ba DUP1
0x8bb PUSH1 0x20
0x8bd ADD
0x8be DUP3
0x8bf DUP2
0x8c0 SUB
0x8c1 DUP3
0x8c2 MSTORE
0x8c3 PUSH1 0x10
0x8c5 DUP2
0x8c6 MSTORE
0x8c7 PUSH1 0x20
0x8c9 ADD
0x8ca DUP1
0x8cb PUSH32 0x546865206576656e742065786973747300000000000000000000000000000000
0x8ec DUP2
0x8ed MSTORE
0x8ee POP
0x8ef PUSH1 0x20
0x8f1 ADD
0x8f2 SWAP2
0x8f3 POP
0x8f4 POP
0x8f5 PUSH1 0x40
0x8f7 MLOAD
0x8f8 DUP1
0x8f9 SWAP2
0x8fa SUB
0x8fb SWAP1
0x8fc REVERT
0x8fd JUMPDEST
0x8fe PUSH1 0x80
0x900 PUSH1 0x40
0x902 MLOAD
0x903 SWAP1
0x904 DUP2
0x905 ADD
0x906 PUSH1 0x40
0x908 MSTORE
0x909 DUP1
0x90a DUP5
0x90b PUSH4 0xffffffff
0x910 AND
0x911 DUP2
0x912 MSTORE
0x913 PUSH1 0x20
0x915 ADD
0x916 DUP4
0x917 DUP2
0x918 MSTORE
0x919 PUSH1 0x20
0x91b ADD
0x91c PUSH1 0x20
0x91e PUSH1 0x40
0x920 MLOAD
0x921 SWAP1
0x922 DUP2
0x923 ADD
0x924 PUSH1 0x40
0x926 MSTORE
0x927 DUP1
0x928 PUSH1 0x0
0x92a DUP2
0x92b MSTORE
0x92c POP
0x92d DUP2
0x92e MSTORE
0x92f PUSH1 0x20
0x931 ADD
0x932 PUSH1 0x0
0x934 ISZERO
0x935 ISZERO
0x936 DUP2
0x937 MSTORE
0x938 POP
0x939 PUSH1 0x1
0x93b PUSH1 0x0
0x93d DUP6
0x93e PUSH4 0xffffffff
0x943 AND
0x944 PUSH4 0xffffffff
0x949 AND
0x94a DUP2
0x94b MSTORE
0x94c PUSH1 0x20
0x94e ADD
0x94f SWAP1
0x950 DUP2
0x951 MSTORE
0x952 PUSH1 0x20
0x954 ADD
0x955 PUSH1 0x0
0x957 SHA3
0x958 PUSH1 0x0
0x95a DUP3
0x95b ADD
0x95c MLOAD
0x95d DUP2
0x95e PUSH1 0x0
0x960 ADD
0x961 PUSH1 0x0
0x963 PUSH2 0x100
0x966 EXP
0x967 DUP2
0x968 SLOAD
0x969 DUP2
0x96a PUSH4 0xffffffff
0x96f MUL
0x970 NOT
0x971 AND
0x972 SWAP1
0x973 DUP4
0x974 PUSH4 0xffffffff
0x979 AND
0x97a MUL
0x97b OR
0x97c SWAP1
0x97d SSTORE
0x97e POP
0x97f PUSH1 0x20
0x981 DUP3
0x982 ADD
0x983 MLOAD
0x984 DUP2
0x985 PUSH1 0x1
0x987 ADD
0x988 SWAP1
0x989 DUP1
0x98a MLOAD
0x98b SWAP1
0x98c PUSH1 0x20
0x98e ADD
0x98f SWAP1
0x990 PUSH2 0x709
0x993 SWAP3
0x994 SWAP2
0x995 SWAP1
0x996 PUSH2 0xc32
0x999 JUMP
0x99a JUMPDEST
0x99b POP
0x99c PUSH1 0x40
0x99e DUP3
0x99f ADD
0x9a0 MLOAD
0x9a1 DUP2
0x9a2 PUSH1 0x2
0x9a4 ADD
0x9a5 SWAP1
0x9a6 DUP1
0x9a7 MLOAD
0x9a8 SWAP1
0x9a9 PUSH1 0x20
0x9ab ADD
0x9ac SWAP1
0x9ad PUSH2 0x726
0x9b0 SWAP3
0x9b1 SWAP2
0x9b2 SWAP1
0x9b3 PUSH2 0xc32
0x9b6 JUMP
0x9b7 JUMPDEST
0x9b8 POP
0x9b9 PUSH1 0x60
0x9bb DUP3
0x9bc ADD
0x9bd MLOAD
0x9be DUP2
0x9bf PUSH1 0x3
0x9c1 ADD
0x9c2 PUSH1 0x0
0x9c4 PUSH2 0x100
0x9c7 EXP
0x9c8 DUP2
0x9c9 SLOAD
0x9ca DUP2
0x9cb PUSH1 0xff
0x9cd MUL
0x9ce NOT
0x9cf AND
0x9d0 SWAP1
0x9d1 DUP4
0x9d2 ISZERO
0x9d3 ISZERO
0x9d4 MUL
0x9d5 OR
0x9d6 SWAP1
0x9d7 SSTORE
0x9d8 POP
0x9d9 SWAP1
0x9da POP
0x9db POP
0x9dc DUP2
0x9dd PUSH1 0x40
0x9df MLOAD
0x9e0 DUP1
0x9e1 DUP3
0x9e2 DUP1
0x9e3 MLOAD
0x9e4 SWAP1
0x9e5 PUSH1 0x20
0x9e7 ADD
0x9e8 SWAP1
0x9e9 DUP1
0x9ea DUP4
0x9eb DUP4
---
0x890: V627 = 0x40
0x892: V628 = M[0x40]
0x893: V629 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x8b5: M[V628] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x8b6: V630 = 0x4
0x8b8: V631 = ADD 0x4 V628
0x8bb: V632 = 0x20
0x8bd: V633 = ADD 0x20 V631
0x8c0: V634 = SUB V633 V631
0x8c2: M[V631] = V634
0x8c3: V635 = 0x10
0x8c6: M[V633] = 0x10
0x8c7: V636 = 0x20
0x8c9: V637 = ADD 0x20 V633
0x8cb: V638 = 0x546865206576656e742065786973747300000000000000000000000000000000
0x8ed: M[V637] = 0x546865206576656e742065786973747300000000000000000000000000000000
0x8ef: V639 = 0x20
0x8f1: V640 = ADD 0x20 V637
0x8f5: V641 = 0x40
0x8f7: V642 = M[0x40]
0x8fa: V643 = SUB V640 V642
0x8fc: REVERT V642 V643
0x8fd: JUMPDEST 
0x8fe: V644 = 0x80
0x900: V645 = 0x40
0x902: V646 = M[0x40]
0x905: V647 = ADD V646 0x80
0x906: V648 = 0x40
0x908: M[0x40] = V647
0x90b: V649 = 0xffffffff
0x910: V650 = AND 0xffffffff S2
0x912: M[V646] = V650
0x913: V651 = 0x20
0x915: V652 = ADD 0x20 V646
0x918: M[V652] = S1
0x919: V653 = 0x20
0x91b: V654 = ADD 0x20 V652
0x91c: V655 = 0x20
0x91e: V656 = 0x40
0x920: V657 = M[0x40]
0x923: V658 = ADD V657 0x20
0x924: V659 = 0x40
0x926: M[0x40] = V658
0x928: V660 = 0x0
0x92b: M[V657] = 0x0
0x92e: M[V654] = V657
0x92f: V661 = 0x20
0x931: V662 = ADD 0x20 V654
0x932: V663 = 0x0
0x934: V664 = ISZERO 0x0
0x935: V665 = ISZERO 0x1
0x937: M[V662] = 0x0
0x939: V666 = 0x1
0x93b: V667 = 0x0
0x93e: V668 = 0xffffffff
0x943: V669 = AND 0xffffffff S2
0x944: V670 = 0xffffffff
0x949: V671 = AND 0xffffffff V669
0x94b: M[0x0] = V671
0x94c: V672 = 0x20
0x94e: V673 = ADD 0x20 0x0
0x951: M[0x20] = 0x1
0x952: V674 = 0x20
0x954: V675 = ADD 0x20 0x20
0x955: V676 = 0x0
0x957: V677 = SHA3 0x0 0x40
0x958: V678 = 0x0
0x95b: V679 = ADD V646 0x0
0x95c: V680 = M[V679]
0x95e: V681 = 0x0
0x960: V682 = ADD 0x0 V677
0x961: V683 = 0x0
0x963: V684 = 0x100
0x966: V685 = EXP 0x100 0x0
0x968: V686 = S[V682]
0x96a: V687 = 0xffffffff
0x96f: V688 = MUL 0xffffffff 0x1
0x970: V689 = NOT 0xffffffff
0x971: V690 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000 V686
0x974: V691 = 0xffffffff
0x979: V692 = AND 0xffffffff V680
0x97a: V693 = MUL V692 0x1
0x97b: V694 = OR V693 V690
0x97d: S[V682] = V694
0x97f: V695 = 0x20
0x982: V696 = ADD V646 0x20
0x983: V697 = M[V696]
0x985: V698 = 0x1
0x987: V699 = ADD 0x1 V677
0x98a: V700 = M[V697]
0x98c: V701 = 0x20
0x98e: V702 = ADD 0x20 V697
0x990: V703 = 0x709
0x996: V704 = 0xc32
0x999: THROW 
0x99a: JUMPDEST 
0x99c: V705 = 0x40
0x99f: V706 = ADD S2 0x40
0x9a0: V707 = M[V706]
0x9a2: V708 = 0x2
0x9a4: V709 = ADD 0x2 S1
0x9a7: V710 = M[V707]
0x9a9: V711 = 0x20
0x9ab: V712 = ADD 0x20 V707
0x9ad: V713 = 0x726
0x9b3: V714 = 0xc32
0x9b6: THROW 
0x9b7: JUMPDEST 
0x9b9: V715 = 0x60
0x9bc: V716 = ADD S2 0x60
0x9bd: V717 = M[V716]
0x9bf: V718 = 0x3
0x9c1: V719 = ADD 0x3 S1
0x9c2: V720 = 0x0
0x9c4: V721 = 0x100
0x9c7: V722 = EXP 0x100 0x0
0x9c9: V723 = S[V719]
0x9cb: V724 = 0xff
0x9cd: V725 = MUL 0xff 0x1
0x9ce: V726 = NOT 0xff
0x9cf: V727 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V723
0x9d2: V728 = ISZERO V717
0x9d3: V729 = ISZERO V728
0x9d4: V730 = MUL V729 0x1
0x9d5: V731 = OR V730 V727
0x9d7: S[V719] = V731
0x9dd: V732 = 0x40
0x9df: V733 = M[0x40]
0x9e3: V734 = M[S4]
0x9e5: V735 = 0x20
0x9e7: V736 = ADD 0x20 S4
---
Entry stack: [S2, S1, 0x0]
Stack pops: 0
Stack additions: [V700, V702, V699, 0x709, V677, V646, S0, S1, S2, V710, V712, V709, 0x726, S1, S2, V736, V733, V734, V734, V736, V733, V733, S4, S3, S4]
Exit stack: []

================================

Block 0x9ec
[0x9ec:0x9f6]
---
Predecessors: [0x890]
Successors: [0x9f7]
---
0x9ec JUMPDEST
0x9ed PUSH1 0x20
0x9ef DUP4
0x9f0 LT
0x9f1 ISZERO
0x9f2 ISZERO
0x9f3 PUSH2 0x780
0x9f6 JUMPI
---
0x9ec: JUMPDEST 
0x9ed: V737 = 0x20
0x9f0: V738 = LT V734 0x20
0x9f1: V739 = ISZERO V738
0x9f2: V740 = ISZERO V739
0x9f3: V741 = 0x780
0x9f6: THROWI V740
---
Entry stack: [S9, S8, S7, V733, V733, V736, V734, V734, V733, V736]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S9, S8, S7, V733, V733, V736, V734, V734, V733, V736]

================================

Block 0x9f7
[0x9f7:0xad3]
---
Predecessors: [0x9ec]
Successors: [0x847, 0xad4]
---
0x9f7 DUP1
0x9f8 MLOAD
0x9f9 DUP3
0x9fa MSTORE
0x9fb PUSH1 0x20
0x9fd DUP3
0x9fe ADD
0x9ff SWAP2
0xa00 POP
0xa01 PUSH1 0x20
0xa03 DUP2
0xa04 ADD
0xa05 SWAP1
0xa06 POP
0xa07 PUSH1 0x20
0xa09 DUP4
0xa0a SUB
0xa0b SWAP3
0xa0c POP
0xa0d PUSH2 0x75b
0xa10 JUMP
0xa11 JUMPDEST
0xa12 PUSH1 0x1
0xa14 DUP4
0xa15 PUSH1 0x20
0xa17 SUB
0xa18 PUSH2 0x100
0xa1b EXP
0xa1c SUB
0xa1d DUP1
0xa1e NOT
0xa1f DUP3
0xa20 MLOAD
0xa21 AND
0xa22 DUP2
0xa23 DUP5
0xa24 MLOAD
0xa25 AND
0xa26 DUP1
0xa27 DUP3
0xa28 OR
0xa29 DUP6
0xa2a MSTORE
0xa2b POP
0xa2c POP
0xa2d POP
0xa2e POP
0xa2f POP
0xa30 POP
0xa31 SWAP1
0xa32 POP
0xa33 ADD
0xa34 SWAP2
0xa35 POP
0xa36 POP
0xa37 PUSH1 0x40
0xa39 MLOAD
0xa3a DUP1
0xa3b SWAP2
0xa3c SUB
0xa3d SWAP1
0xa3e SHA3
0xa3f DUP4
0xa40 PUSH4 0xffffffff
0xa45 AND
0xa46 PUSH32 0x2216e52a05de168c5bdc154ace8b29b2536e3dd97dd2b9da3212da9448243bb5
0xa67 PUSH1 0x40
0xa69 MLOAD
0xa6a PUSH1 0x40
0xa6c MLOAD
0xa6d DUP1
0xa6e SWAP2
0xa6f SUB
0xa70 SWAP1
0xa71 LOG3
0xa72 PUSH1 0x1
0xa74 SWAP1
0xa75 POP
0xa76 SWAP3
0xa77 SWAP2
0xa78 POP
0xa79 POP
0xa7a JUMP
0xa7b JUMPDEST
0xa7c PUSH1 0x0
0xa7e DUP1
0xa7f PUSH1 0x0
0xa81 SWAP1
0xa82 SLOAD
0xa83 SWAP1
0xa84 PUSH2 0x100
0xa87 EXP
0xa88 SWAP1
0xa89 DIV
0xa8a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa9f AND
0xaa0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xab5 AND
0xab6 CALLER
0xab7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xacc AND
0xacd EQ
0xace ISZERO
0xacf ISZERO
0xad0 PUSH2 0x847
0xad3 JUMPI
---
0x9f8: V742 = M[V736]
0x9fa: M[V733] = V742
0x9fb: V743 = 0x20
0x9fe: V744 = ADD V733 0x20
0xa01: V745 = 0x20
0xa04: V746 = ADD V736 0x20
0xa07: V747 = 0x20
0xa0a: V748 = SUB V734 0x20
0xa0d: V749 = 0x75b
0xa10: THROW 
0xa11: JUMPDEST 
0xa12: V750 = 0x1
0xa15: V751 = 0x20
0xa17: V752 = SUB 0x20 S2
0xa18: V753 = 0x100
0xa1b: V754 = EXP 0x100 V752
0xa1c: V755 = SUB V754 0x1
0xa1e: V756 = NOT V755
0xa20: V757 = M[S0]
0xa21: V758 = AND V757 V756
0xa24: V759 = M[S1]
0xa25: V760 = AND V759 V755
0xa28: V761 = OR V758 V760
0xa2a: M[S1] = V761
0xa33: V762 = ADD S3 S5
0xa37: V763 = 0x40
0xa39: V764 = M[0x40]
0xa3c: V765 = SUB V762 V764
0xa3e: V766 = SHA3 V764 V765
0xa40: V767 = 0xffffffff
0xa45: V768 = AND 0xffffffff S10
0xa46: V769 = 0x2216e52a05de168c5bdc154ace8b29b2536e3dd97dd2b9da3212da9448243bb5
0xa67: V770 = 0x40
0xa69: V771 = M[0x40]
0xa6a: V772 = 0x40
0xa6c: V773 = M[0x40]
0xa6f: V774 = SUB V771 V773
0xa71: LOG V773 V774 0x2216e52a05de168c5bdc154ace8b29b2536e3dd97dd2b9da3212da9448243bb5 V768 V766
0xa72: V775 = 0x1
0xa7a: JUMP S11
0xa7b: JUMPDEST 
0xa7c: V776 = 0x0
0xa7f: V777 = 0x0
0xa82: V778 = S[0x0]
0xa84: V779 = 0x100
0xa87: V780 = EXP 0x100 0x0
0xa89: V781 = DIV V778 0x1
0xa8a: V782 = 0xffffffffffffffffffffffffffffffffffffffff
0xa9f: V783 = AND 0xffffffffffffffffffffffffffffffffffffffff V781
0xaa0: V784 = 0xffffffffffffffffffffffffffffffffffffffff
0xab5: V785 = AND 0xffffffffffffffffffffffffffffffffffffffff V783
0xab6: V786 = CALLER
0xab7: V787 = 0xffffffffffffffffffffffffffffffffffffffff
0xacc: V788 = AND 0xffffffffffffffffffffffffffffffffffffffff V786
0xacd: V789 = EQ V788 V785
0xace: V790 = ISZERO V789
0xacf: V791 = ISZERO V790
0xad0: V792 = 0x847
0xad3: JUMPI 0x847 V791
---
Entry stack: [S9, S8, S7, V733, V733, V736, V734, V734, V733, V736]
Stack pops: 5
Stack additions: [0x0]
Exit stack: []

================================

Block 0xad4
[0xad4:0xb21]
---
Predecessors: [0x9f7]
Successors: [0xb22]
---
0xad4 PUSH1 0x0
0xad6 DUP1
0xad7 REVERT
0xad8 JUMPDEST
0xad9 PUSH1 0x0
0xadb PUSH4 0xffffffff
0xae0 AND
0xae1 PUSH1 0x1
0xae3 PUSH1 0x0
0xae5 DUP6
0xae6 PUSH4 0xffffffff
0xaeb AND
0xaec PUSH4 0xffffffff
0xaf1 AND
0xaf2 DUP2
0xaf3 MSTORE
0xaf4 PUSH1 0x20
0xaf6 ADD
0xaf7 SWAP1
0xaf8 DUP2
0xaf9 MSTORE
0xafa PUSH1 0x20
0xafc ADD
0xafd PUSH1 0x0
0xaff SHA3
0xb00 PUSH1 0x0
0xb02 ADD
0xb03 PUSH1 0x0
0xb05 SWAP1
0xb06 SLOAD
0xb07 SWAP1
0xb08 PUSH2 0x100
0xb0b EXP
0xb0c SWAP1
0xb0d DIV
0xb0e PUSH4 0xffffffff
0xb13 AND
0xb14 PUSH4 0xffffffff
0xb19 AND
0xb1a EQ
0xb1b ISZERO
0xb1c ISZERO
0xb1d ISZERO
0xb1e PUSH2 0x8fe
0xb21 JUMPI
---
0xad4: V793 = 0x0
0xad7: REVERT 0x0 0x0
0xad8: JUMPDEST 
0xad9: V794 = 0x0
0xadb: V795 = 0xffffffff
0xae0: V796 = AND 0xffffffff 0x0
0xae1: V797 = 0x1
0xae3: V798 = 0x0
0xae6: V799 = 0xffffffff
0xaeb: V800 = AND 0xffffffff S2
0xaec: V801 = 0xffffffff
0xaf1: V802 = AND 0xffffffff V800
0xaf3: M[0x0] = V802
0xaf4: V803 = 0x20
0xaf6: V804 = ADD 0x20 0x0
0xaf9: M[0x20] = 0x1
0xafa: V805 = 0x20
0xafc: V806 = ADD 0x20 0x20
0xafd: V807 = 0x0
0xaff: V808 = SHA3 0x0 0x40
0xb00: V809 = 0x0
0xb02: V810 = ADD 0x0 V808
0xb03: V811 = 0x0
0xb06: V812 = S[V810]
0xb08: V813 = 0x100
0xb0b: V814 = EXP 0x100 0x0
0xb0d: V815 = DIV V812 0x1
0xb0e: V816 = 0xffffffff
0xb13: V817 = AND 0xffffffff V815
0xb14: V818 = 0xffffffff
0xb19: V819 = AND 0xffffffff V817
0xb1a: V820 = EQ V819 0x0
0xb1b: V821 = ISZERO V820
0xb1c: V822 = ISZERO V821
0xb1d: V823 = ISZERO V822
0xb1e: V824 = 0x8fe
0xb21: THROWI V823
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: [S0, S1, S2]
Exit stack: []

================================

Block 0xb22
[0xb22:0xbc6]
---
Predecessors: [0xad4]
Successors: [0xbc7]
---
0xb22 PUSH1 0x40
0xb24 MLOAD
0xb25 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0xb46 DUP2
0xb47 MSTORE
0xb48 PUSH1 0x4
0xb4a ADD
0xb4b DUP1
0xb4c DUP1
0xb4d PUSH1 0x20
0xb4f ADD
0xb50 DUP3
0xb51 DUP2
0xb52 SUB
0xb53 DUP3
0xb54 MSTORE
0xb55 PUSH1 0x14
0xb57 DUP2
0xb58 MSTORE
0xb59 PUSH1 0x20
0xb5b ADD
0xb5c DUP1
0xb5d PUSH32 0x546865206576656e74206e6f7420657869737473000000000000000000000000
0xb7e DUP2
0xb7f MSTORE
0xb80 POP
0xb81 PUSH1 0x20
0xb83 ADD
0xb84 SWAP2
0xb85 POP
0xb86 POP
0xb87 PUSH1 0x40
0xb89 MLOAD
0xb8a DUP1
0xb8b SWAP2
0xb8c SUB
0xb8d SWAP1
0xb8e REVERT
0xb8f JUMPDEST
0xb90 PUSH1 0x1
0xb92 PUSH1 0x0
0xb94 DUP5
0xb95 PUSH4 0xffffffff
0xb9a AND
0xb9b PUSH4 0xffffffff
0xba0 AND
0xba1 DUP2
0xba2 MSTORE
0xba3 PUSH1 0x20
0xba5 ADD
0xba6 SWAP1
0xba7 DUP2
0xba8 MSTORE
0xba9 PUSH1 0x20
0xbab ADD
0xbac PUSH1 0x0
0xbae SHA3
0xbaf PUSH1 0x3
0xbb1 ADD
0xbb2 PUSH1 0x0
0xbb4 SWAP1
0xbb5 SLOAD
0xbb6 SWAP1
0xbb7 PUSH2 0x100
0xbba EXP
0xbbb SWAP1
0xbbc DIV
0xbbd PUSH1 0xff
0xbbf AND
0xbc0 ISZERO
0xbc1 ISZERO
0xbc2 ISZERO
0xbc3 PUSH2 0x9a3
0xbc6 JUMPI
---
0xb22: V825 = 0x40
0xb24: V826 = M[0x40]
0xb25: V827 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xb47: M[V826] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xb48: V828 = 0x4
0xb4a: V829 = ADD 0x4 V826
0xb4d: V830 = 0x20
0xb4f: V831 = ADD 0x20 V829
0xb52: V832 = SUB V831 V829
0xb54: M[V829] = V832
0xb55: V833 = 0x14
0xb58: M[V831] = 0x14
0xb59: V834 = 0x20
0xb5b: V835 = ADD 0x20 V831
0xb5d: V836 = 0x546865206576656e74206e6f7420657869737473000000000000000000000000
0xb7f: M[V835] = 0x546865206576656e74206e6f7420657869737473000000000000000000000000
0xb81: V837 = 0x20
0xb83: V838 = ADD 0x20 V835
0xb87: V839 = 0x40
0xb89: V840 = M[0x40]
0xb8c: V841 = SUB V838 V840
0xb8e: REVERT V840 V841
0xb8f: JUMPDEST 
0xb90: V842 = 0x1
0xb92: V843 = 0x0
0xb95: V844 = 0xffffffff
0xb9a: V845 = AND 0xffffffff S2
0xb9b: V846 = 0xffffffff
0xba0: V847 = AND 0xffffffff V845
0xba2: M[0x0] = V847
0xba3: V848 = 0x20
0xba5: V849 = ADD 0x20 0x0
0xba8: M[0x20] = 0x1
0xba9: V850 = 0x20
0xbab: V851 = ADD 0x20 0x20
0xbac: V852 = 0x0
0xbae: V853 = SHA3 0x0 0x40
0xbaf: V854 = 0x3
0xbb1: V855 = ADD 0x3 V853
0xbb2: V856 = 0x0
0xbb5: V857 = S[V855]
0xbb7: V858 = 0x100
0xbba: V859 = EXP 0x100 0x0
0xbbc: V860 = DIV V857 0x1
0xbbd: V861 = 0xff
0xbbf: V862 = AND 0xff V860
0xbc0: V863 = ISZERO V862
0xbc1: V864 = ISZERO V863
0xbc2: V865 = ISZERO V864
0xbc3: V866 = 0x9a3
0xbc6: THROWI V865
---
Entry stack: [S2, S1, S0]
Stack pops: 0
Stack additions: [S0, S1, S2]
Exit stack: []

================================

Block 0xbc7
[0xbc7:0xcb9]
---
Predecessors: [0xb22]
Successors: [0xcba]
---
0xbc7 PUSH1 0x40
0xbc9 MLOAD
0xbca PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0xbeb DUP2
0xbec MSTORE
0xbed PUSH1 0x4
0xbef ADD
0xbf0 DUP1
0xbf1 DUP1
0xbf2 PUSH1 0x20
0xbf4 ADD
0xbf5 DUP3
0xbf6 DUP2
0xbf7 SUB
0xbf8 DUP3
0xbf9 MSTORE
0xbfa PUSH1 0x1c
0xbfc DUP2
0xbfd MSTORE
0xbfe PUSH1 0x20
0xc00 ADD
0xc01 DUP1
0xc02 PUSH32 0x546865206576656e7420686173206265656e20636f6d706c6574656400000000
0xc23 DUP2
0xc24 MSTORE
0xc25 POP
0xc26 PUSH1 0x20
0xc28 ADD
0xc29 SWAP2
0xc2a POP
0xc2b POP
0xc2c PUSH1 0x40
0xc2e MLOAD
0xc2f DUP1
0xc30 SWAP2
0xc31 SUB
0xc32 SWAP1
0xc33 REVERT
0xc34 JUMPDEST
0xc35 DUP2
0xc36 PUSH1 0x1
0xc38 PUSH1 0x0
0xc3a DUP6
0xc3b PUSH4 0xffffffff
0xc40 AND
0xc41 PUSH4 0xffffffff
0xc46 AND
0xc47 DUP2
0xc48 MSTORE
0xc49 PUSH1 0x20
0xc4b ADD
0xc4c SWAP1
0xc4d DUP2
0xc4e MSTORE
0xc4f PUSH1 0x20
0xc51 ADD
0xc52 PUSH1 0x0
0xc54 SHA3
0xc55 PUSH1 0x2
0xc57 ADD
0xc58 SWAP1
0xc59 DUP1
0xc5a MLOAD
0xc5b SWAP1
0xc5c PUSH1 0x20
0xc5e ADD
0xc5f SWAP1
0xc60 PUSH2 0x9d9
0xc63 SWAP3
0xc64 SWAP2
0xc65 SWAP1
0xc66 PUSH2 0xcb2
0xc69 JUMP
0xc6a JUMPDEST
0xc6b POP
0xc6c PUSH1 0x1
0xc6e DUP1
0xc6f PUSH1 0x0
0xc71 DUP6
0xc72 PUSH4 0xffffffff
0xc77 AND
0xc78 PUSH4 0xffffffff
0xc7d AND
0xc7e DUP2
0xc7f MSTORE
0xc80 PUSH1 0x20
0xc82 ADD
0xc83 SWAP1
0xc84 DUP2
0xc85 MSTORE
0xc86 PUSH1 0x20
0xc88 ADD
0xc89 PUSH1 0x0
0xc8b SHA3
0xc8c PUSH1 0x3
0xc8e ADD
0xc8f PUSH1 0x0
0xc91 PUSH2 0x100
0xc94 EXP
0xc95 DUP2
0xc96 SLOAD
0xc97 DUP2
0xc98 PUSH1 0xff
0xc9a MUL
0xc9b NOT
0xc9c AND
0xc9d SWAP1
0xc9e DUP4
0xc9f ISZERO
0xca0 ISZERO
0xca1 MUL
0xca2 OR
0xca3 SWAP1
0xca4 SSTORE
0xca5 POP
0xca6 PUSH1 0x1
0xca8 ISZERO
0xca9 ISZERO
0xcaa DUP3
0xcab PUSH1 0x40
0xcad MLOAD
0xcae DUP1
0xcaf DUP3
0xcb0 DUP1
0xcb1 MLOAD
0xcb2 SWAP1
0xcb3 PUSH1 0x20
0xcb5 ADD
0xcb6 SWAP1
0xcb7 DUP1
0xcb8 DUP4
0xcb9 DUP4
---
0xbc7: V867 = 0x40
0xbc9: V868 = M[0x40]
0xbca: V869 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xbec: M[V868] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xbed: V870 = 0x4
0xbef: V871 = ADD 0x4 V868
0xbf2: V872 = 0x20
0xbf4: V873 = ADD 0x20 V871
0xbf7: V874 = SUB V873 V871
0xbf9: M[V871] = V874
0xbfa: V875 = 0x1c
0xbfd: M[V873] = 0x1c
0xbfe: V876 = 0x20
0xc00: V877 = ADD 0x20 V873
0xc02: V878 = 0x546865206576656e7420686173206265656e20636f6d706c6574656400000000
0xc24: M[V877] = 0x546865206576656e7420686173206265656e20636f6d706c6574656400000000
0xc26: V879 = 0x20
0xc28: V880 = ADD 0x20 V877
0xc2c: V881 = 0x40
0xc2e: V882 = M[0x40]
0xc31: V883 = SUB V880 V882
0xc33: REVERT V882 V883
0xc34: JUMPDEST 
0xc36: V884 = 0x1
0xc38: V885 = 0x0
0xc3b: V886 = 0xffffffff
0xc40: V887 = AND 0xffffffff S2
0xc41: V888 = 0xffffffff
0xc46: V889 = AND 0xffffffff V887
0xc48: M[0x0] = V889
0xc49: V890 = 0x20
0xc4b: V891 = ADD 0x20 0x0
0xc4e: M[0x20] = 0x1
0xc4f: V892 = 0x20
0xc51: V893 = ADD 0x20 0x20
0xc52: V894 = 0x0
0xc54: V895 = SHA3 0x0 0x40
0xc55: V896 = 0x2
0xc57: V897 = ADD 0x2 V895
0xc5a: V898 = M[S1]
0xc5c: V899 = 0x20
0xc5e: V900 = ADD 0x20 S1
0xc60: V901 = 0x9d9
0xc66: V902 = 0xcb2
0xc69: THROW 
0xc6a: JUMPDEST 
0xc6c: V903 = 0x1
0xc6f: V904 = 0x0
0xc72: V905 = 0xffffffff
0xc77: V906 = AND 0xffffffff S3
0xc78: V907 = 0xffffffff
0xc7d: V908 = AND 0xffffffff V906
0xc7f: M[0x0] = V908
0xc80: V909 = 0x20
0xc82: V910 = ADD 0x20 0x0
0xc85: M[0x20] = 0x1
0xc86: V911 = 0x20
0xc88: V912 = ADD 0x20 0x20
0xc89: V913 = 0x0
0xc8b: V914 = SHA3 0x0 0x40
0xc8c: V915 = 0x3
0xc8e: V916 = ADD 0x3 V914
0xc8f: V917 = 0x0
0xc91: V918 = 0x100
0xc94: V919 = EXP 0x100 0x0
0xc96: V920 = S[V916]
0xc98: V921 = 0xff
0xc9a: V922 = MUL 0xff 0x1
0xc9b: V923 = NOT 0xff
0xc9c: V924 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V920
0xc9f: V925 = ISZERO 0x1
0xca0: V926 = ISZERO 0x0
0xca1: V927 = MUL 0x1 0x1
0xca2: V928 = OR 0x1 V924
0xca4: S[V916] = V928
0xca6: V929 = 0x1
0xca8: V930 = ISZERO 0x1
0xca9: V931 = ISZERO 0x0
0xcab: V932 = 0x40
0xcad: V933 = M[0x40]
0xcb1: V934 = M[S2]
0xcb3: V935 = 0x20
0xcb5: V936 = ADD 0x20 S2
---
Entry stack: [S2, S1, S0]
Stack pops: 0
Stack additions: [V898, V900, V897, 0x9d9, S0, S1, S2, V936, V933, V934, V934, V936, V933, V933, S2, 0x1, S1, S2, S3]
Exit stack: []

================================

Block 0xcba
[0xcba:0xcc4]
---
Predecessors: [0xbc7]
Successors: [0xcc5]
---
0xcba JUMPDEST
0xcbb PUSH1 0x20
0xcbd DUP4
0xcbe LT
0xcbf ISZERO
0xcc0 ISZERO
0xcc1 PUSH2 0xa4e
0xcc4 JUMPI
---
0xcba: JUMPDEST 
0xcbb: V937 = 0x20
0xcbe: V938 = LT V934 0x20
0xcbf: V939 = ISZERO V938
0xcc0: V940 = ISZERO V939
0xcc1: V941 = 0xa4e
0xcc4: THROWI V940
---
Entry stack: [S11, S10, S9, 0x1, S7, V933, V933, V936, V934, V934, V933, V936]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S11, S10, S9, 0x1, S7, V933, V933, V936, V934, V934, V933, V936]

================================

Block 0xcc5
[0xcc5:0xdc4]
---
Predecessors: [0xcba]
Successors: [0xdc5]
---
0xcc5 DUP1
0xcc6 MLOAD
0xcc7 DUP3
0xcc8 MSTORE
0xcc9 PUSH1 0x20
0xccb DUP3
0xccc ADD
0xccd SWAP2
0xcce POP
0xccf PUSH1 0x20
0xcd1 DUP2
0xcd2 ADD
0xcd3 SWAP1
0xcd4 POP
0xcd5 PUSH1 0x20
0xcd7 DUP4
0xcd8 SUB
0xcd9 SWAP3
0xcda POP
0xcdb PUSH2 0xa29
0xcde JUMP
0xcdf JUMPDEST
0xce0 PUSH1 0x1
0xce2 DUP4
0xce3 PUSH1 0x20
0xce5 SUB
0xce6 PUSH2 0x100
0xce9 EXP
0xcea SUB
0xceb DUP1
0xcec NOT
0xced DUP3
0xcee MLOAD
0xcef AND
0xcf0 DUP2
0xcf1 DUP5
0xcf2 MLOAD
0xcf3 AND
0xcf4 DUP1
0xcf5 DUP3
0xcf6 OR
0xcf7 DUP6
0xcf8 MSTORE
0xcf9 POP
0xcfa POP
0xcfb POP
0xcfc POP
0xcfd POP
0xcfe POP
0xcff SWAP1
0xd00 POP
0xd01 ADD
0xd02 SWAP2
0xd03 POP
0xd04 POP
0xd05 PUSH1 0x40
0xd07 MLOAD
0xd08 DUP1
0xd09 SWAP2
0xd0a SUB
0xd0b SWAP1
0xd0c SHA3
0xd0d DUP5
0xd0e PUSH4 0xffffffff
0xd13 AND
0xd14 PUSH32 0xa8f7d40560b908aa1f3a14b73704543d677b74a7b07e4373130b1e557c3a8c32
0xd35 PUSH1 0x40
0xd37 MLOAD
0xd38 PUSH1 0x40
0xd3a MLOAD
0xd3b DUP1
0xd3c SWAP2
0xd3d SUB
0xd3e SWAP1
0xd3f LOG4
0xd40 PUSH1 0x1
0xd42 SWAP1
0xd43 POP
0xd44 SWAP3
0xd45 SWAP2
0xd46 POP
0xd47 POP
0xd48 JUMP
0xd49 JUMPDEST
0xd4a PUSH1 0x0
0xd4c DUP1
0xd4d SWAP1
0xd4e SLOAD
0xd4f SWAP1
0xd50 PUSH2 0x100
0xd53 EXP
0xd54 SWAP1
0xd55 DIV
0xd56 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd6b AND
0xd6c DUP2
0xd6d JUMP
0xd6e JUMPDEST
0xd6f PUSH1 0x0
0xd71 DUP1
0xd72 SWAP1
0xd73 SLOAD
0xd74 SWAP1
0xd75 PUSH2 0x100
0xd78 EXP
0xd79 SWAP1
0xd7a DIV
0xd7b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd90 AND
0xd91 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xda6 AND
0xda7 CALLER
0xda8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdbd AND
0xdbe EQ
0xdbf ISZERO
0xdc0 ISZERO
0xdc1 PUSH2 0xb38
0xdc4 JUMPI
---
0xcc6: V942 = M[V936]
0xcc8: M[V933] = V942
0xcc9: V943 = 0x20
0xccc: V944 = ADD V933 0x20
0xccf: V945 = 0x20
0xcd2: V946 = ADD V936 0x20
0xcd5: V947 = 0x20
0xcd8: V948 = SUB V934 0x20
0xcdb: V949 = 0xa29
0xcde: THROW 
0xcdf: JUMPDEST 
0xce0: V950 = 0x1
0xce3: V951 = 0x20
0xce5: V952 = SUB 0x20 S2
0xce6: V953 = 0x100
0xce9: V954 = EXP 0x100 V952
0xcea: V955 = SUB V954 0x1
0xcec: V956 = NOT V955
0xcee: V957 = M[S0]
0xcef: V958 = AND V957 V956
0xcf2: V959 = M[S1]
0xcf3: V960 = AND V959 V955
0xcf6: V961 = OR V958 V960
0xcf8: M[S1] = V961
0xd01: V962 = ADD S3 S5
0xd05: V963 = 0x40
0xd07: V964 = M[0x40]
0xd0a: V965 = SUB V962 V964
0xd0c: V966 = SHA3 V964 V965
0xd0e: V967 = 0xffffffff
0xd13: V968 = AND 0xffffffff S11
0xd14: V969 = 0xa8f7d40560b908aa1f3a14b73704543d677b74a7b07e4373130b1e557c3a8c32
0xd35: V970 = 0x40
0xd37: V971 = M[0x40]
0xd38: V972 = 0x40
0xd3a: V973 = M[0x40]
0xd3d: V974 = SUB V971 V973
0xd3f: LOG V973 V974 0xa8f7d40560b908aa1f3a14b73704543d677b74a7b07e4373130b1e557c3a8c32 V968 V966 S8
0xd40: V975 = 0x1
0xd48: JUMP S12
0xd49: JUMPDEST 
0xd4a: V976 = 0x0
0xd4e: V977 = S[0x0]
0xd50: V978 = 0x100
0xd53: V979 = EXP 0x100 0x0
0xd55: V980 = DIV V977 0x1
0xd56: V981 = 0xffffffffffffffffffffffffffffffffffffffff
0xd6b: V982 = AND 0xffffffffffffffffffffffffffffffffffffffff V980
0xd6d: JUMP S0
0xd6e: JUMPDEST 
0xd6f: V983 = 0x0
0xd73: V984 = S[0x0]
0xd75: V985 = 0x100
0xd78: V986 = EXP 0x100 0x0
0xd7a: V987 = DIV V984 0x1
0xd7b: V988 = 0xffffffffffffffffffffffffffffffffffffffff
0xd90: V989 = AND 0xffffffffffffffffffffffffffffffffffffffff V987
0xd91: V990 = 0xffffffffffffffffffffffffffffffffffffffff
0xda6: V991 = AND 0xffffffffffffffffffffffffffffffffffffffff V989
0xda7: V992 = CALLER
0xda8: V993 = 0xffffffffffffffffffffffffffffffffffffffff
0xdbd: V994 = AND 0xffffffffffffffffffffffffffffffffffffffff V992
0xdbe: V995 = EQ V994 V991
0xdbf: V996 = ISZERO V995
0xdc0: V997 = ISZERO V996
0xdc1: V998 = 0xb38
0xdc4: THROWI V997
---
Entry stack: [S11, S10, S9, 0x1, S7, V933, V933, V936, V934, V934, V933, V936]
Stack pops: 8
Stack additions: []
Exit stack: []

================================

Block 0xdc5
[0xdc5:0xe00]
---
Predecessors: [0xcc5]
Successors: [0xe01]
---
0xdc5 PUSH1 0x0
0xdc7 DUP1
0xdc8 REVERT
0xdc9 JUMPDEST
0xdca PUSH1 0x0
0xdcc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xde1 AND
0xde2 DUP2
0xde3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdf8 AND
0xdf9 EQ
0xdfa ISZERO
0xdfb ISZERO
0xdfc ISZERO
0xdfd PUSH2 0xb74
0xe00 JUMPI
---
0xdc5: V999 = 0x0
0xdc8: REVERT 0x0 0x0
0xdc9: JUMPDEST 
0xdca: V1000 = 0x0
0xdcc: V1001 = 0xffffffffffffffffffffffffffffffffffffffff
0xde1: V1002 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0xde3: V1003 = 0xffffffffffffffffffffffffffffffffffffffff
0xdf8: V1004 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xdf9: V1005 = EQ V1004 0x0
0xdfa: V1006 = ISZERO V1005
0xdfb: V1007 = ISZERO V1006
0xdfc: V1008 = ISZERO V1007
0xdfd: V1009 = 0xb74
0xe00: THROWI V1008
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0xe01
[0xe01:0xef3]
---
Predecessors: [0xdc5]
Successors: [0xef4]
---
0xe01 PUSH1 0x0
0xe03 DUP1
0xe04 REVERT
0xe05 JUMPDEST
0xe06 DUP1
0xe07 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe1c AND
0xe1d PUSH1 0x0
0xe1f DUP1
0xe20 SWAP1
0xe21 SLOAD
0xe22 SWAP1
0xe23 PUSH2 0x100
0xe26 EXP
0xe27 SWAP1
0xe28 DIV
0xe29 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe3e AND
0xe3f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe54 AND
0xe55 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xe76 PUSH1 0x40
0xe78 MLOAD
0xe79 PUSH1 0x40
0xe7b MLOAD
0xe7c DUP1
0xe7d SWAP2
0xe7e SUB
0xe7f SWAP1
0xe80 LOG3
0xe81 DUP1
0xe82 PUSH1 0x0
0xe84 DUP1
0xe85 PUSH2 0x100
0xe88 EXP
0xe89 DUP2
0xe8a SLOAD
0xe8b DUP2
0xe8c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xea1 MUL
0xea2 NOT
0xea3 AND
0xea4 SWAP1
0xea5 DUP4
0xea6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xebb AND
0xebc MUL
0xebd OR
0xebe SWAP1
0xebf SSTORE
0xec0 POP
0xec1 POP
0xec2 JUMP
0xec3 JUMPDEST
0xec4 DUP3
0xec5 DUP1
0xec6 SLOAD
0xec7 PUSH1 0x1
0xec9 DUP2
0xeca PUSH1 0x1
0xecc AND
0xecd ISZERO
0xece PUSH2 0x100
0xed1 MUL
0xed2 SUB
0xed3 AND
0xed4 PUSH1 0x2
0xed6 SWAP1
0xed7 DIV
0xed8 SWAP1
0xed9 PUSH1 0x0
0xedb MSTORE
0xedc PUSH1 0x20
0xede PUSH1 0x0
0xee0 SHA3
0xee1 SWAP1
0xee2 PUSH1 0x1f
0xee4 ADD
0xee5 PUSH1 0x20
0xee7 SWAP1
0xee8 DIV
0xee9 DUP2
0xeea ADD
0xeeb SWAP3
0xeec DUP3
0xeed PUSH1 0x1f
0xeef LT
0xef0 PUSH2 0xc73
0xef3 JUMPI
---
0xe01: V1010 = 0x0
0xe04: REVERT 0x0 0x0
0xe05: JUMPDEST 
0xe07: V1011 = 0xffffffffffffffffffffffffffffffffffffffff
0xe1c: V1012 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xe1d: V1013 = 0x0
0xe21: V1014 = S[0x0]
0xe23: V1015 = 0x100
0xe26: V1016 = EXP 0x100 0x0
0xe28: V1017 = DIV V1014 0x1
0xe29: V1018 = 0xffffffffffffffffffffffffffffffffffffffff
0xe3e: V1019 = AND 0xffffffffffffffffffffffffffffffffffffffff V1017
0xe3f: V1020 = 0xffffffffffffffffffffffffffffffffffffffff
0xe54: V1021 = AND 0xffffffffffffffffffffffffffffffffffffffff V1019
0xe55: V1022 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xe76: V1023 = 0x40
0xe78: V1024 = M[0x40]
0xe79: V1025 = 0x40
0xe7b: V1026 = M[0x40]
0xe7e: V1027 = SUB V1024 V1026
0xe80: LOG V1026 V1027 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V1021 V1012
0xe82: V1028 = 0x0
0xe85: V1029 = 0x100
0xe88: V1030 = EXP 0x100 0x0
0xe8a: V1031 = S[0x0]
0xe8c: V1032 = 0xffffffffffffffffffffffffffffffffffffffff
0xea1: V1033 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xea2: V1034 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xea3: V1035 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1031
0xea6: V1036 = 0xffffffffffffffffffffffffffffffffffffffff
0xebb: V1037 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xebc: V1038 = MUL V1037 0x1
0xebd: V1039 = OR V1038 V1035
0xebf: S[0x0] = V1039
0xec2: JUMP S1
0xec3: JUMPDEST 
0xec6: V1040 = S[S2]
0xec7: V1041 = 0x1
0xeca: V1042 = 0x1
0xecc: V1043 = AND 0x1 V1040
0xecd: V1044 = ISZERO V1043
0xece: V1045 = 0x100
0xed1: V1046 = MUL 0x100 V1044
0xed2: V1047 = SUB V1046 0x1
0xed3: V1048 = AND V1047 V1040
0xed4: V1049 = 0x2
0xed7: V1050 = DIV V1048 0x2
0xed9: V1051 = 0x0
0xedb: M[0x0] = S2
0xedc: V1052 = 0x20
0xede: V1053 = 0x0
0xee0: V1054 = SHA3 0x0 0x20
0xee2: V1055 = 0x1f
0xee4: V1056 = ADD 0x1f V1050
0xee5: V1057 = 0x20
0xee8: V1058 = DIV V1056 0x20
0xeea: V1059 = ADD V1054 V1058
0xeed: V1060 = 0x1f
0xeef: V1061 = LT 0x1f S0
0xef0: V1062 = 0xc73
0xef3: THROWI V1061
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [S1, V1054, S0, V1059, S2]
Exit stack: []

================================

Block 0xef4
[0xef4:0xf12]
---
Predecessors: [0xe01]
Successors: [0xf13]
---
0xef4 DUP1
0xef5 MLOAD
0xef6 PUSH1 0xff
0xef8 NOT
0xef9 AND
0xefa DUP4
0xefb DUP1
0xefc ADD
0xefd OR
0xefe DUP6
0xeff SSTORE
0xf00 PUSH2 0xca1
0xf03 JUMP
0xf04 JUMPDEST
0xf05 DUP3
0xf06 DUP1
0xf07 ADD
0xf08 PUSH1 0x1
0xf0a ADD
0xf0b DUP6
0xf0c SSTORE
0xf0d DUP3
0xf0e ISZERO
0xf0f PUSH2 0xca1
0xf12 JUMPI
---
0xef5: V1063 = M[S0]
0xef6: V1064 = 0xff
0xef8: V1065 = NOT 0xff
0xef9: V1066 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1063
0xefc: V1067 = ADD S2 S2
0xefd: V1068 = OR V1067 V1066
0xeff: S[S4] = V1068
0xf00: V1069 = 0xca1
0xf03: THROW 
0xf04: JUMPDEST 
0xf07: V1070 = ADD S2 S2
0xf08: V1071 = 0x1
0xf0a: V1072 = ADD 0x1 V1070
0xf0c: S[S4] = V1072
0xf0e: V1073 = ISZERO S2
0xf0f: V1074 = 0xca1
0xf12: THROWI V1073
---
Entry stack: [S4, V1059, S2, V1054, S0]
Stack pops: 5
Stack additions: [S0, S1, S2, S3, S4]
Exit stack: []

================================

Block 0xf13
[0xf13:0xf15]
---
Predecessors: [0xef4]
Successors: [0xf16]
---
0xf13 SWAP2
0xf14 DUP3
0xf15 ADD
---
0xf15: V1075 = ADD S0 S2
---
Entry stack: [S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S0, S1, V1075]
Exit stack: [S4, S3, S0, S1, V1075]

================================

Block 0xf16
[0xf16:0xf1e]
---
Predecessors: [0xf13]
Successors: [0xf1f]
---
0xf16 JUMPDEST
0xf17 DUP3
0xf18 DUP2
0xf19 GT
0xf1a ISZERO
0xf1b PUSH2 0xca0
0xf1e JUMPI
---
0xf16: JUMPDEST 
0xf19: V1076 = GT V1075 S2
0xf1a: V1077 = ISZERO V1076
0xf1b: V1078 = 0xca0
0xf1e: THROWI V1077
---
Entry stack: [S4, S3, S2, S1, V1075]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S4, S3, S2, S1, V1075]

================================

Block 0xf1f
[0xf1f:0xf31]
---
Predecessors: [0xf16]
Successors: [0xf32]
---
0xf1f DUP3
0xf20 MLOAD
0xf21 DUP3
0xf22 SSTORE
0xf23 SWAP2
0xf24 PUSH1 0x20
0xf26 ADD
0xf27 SWAP2
0xf28 SWAP1
0xf29 PUSH1 0x1
0xf2b ADD
0xf2c SWAP1
0xf2d PUSH2 0xc85
0xf30 JUMP
0xf31 JUMPDEST
---
0xf20: V1079 = M[S2]
0xf22: S[S1] = V1079
0xf24: V1080 = 0x20
0xf26: V1081 = ADD 0x20 S2
0xf29: V1082 = 0x1
0xf2b: V1083 = ADD 0x1 S1
0xf2d: V1084 = 0xc85
0xf30: THROW 
0xf31: JUMPDEST 
---
Entry stack: [S4, S3, S2, S1, V1075]
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0xf32
[0xf32:0xf73]
---
Predecessors: [0xf1f]
Successors: [0xf74]
---
0xf32 JUMPDEST
0xf33 POP
0xf34 SWAP1
0xf35 POP
0xf36 PUSH2 0xcae
0xf39 SWAP2
0xf3a SWAP1
0xf3b PUSH2 0xd32
0xf3e JUMP
0xf3f JUMPDEST
0xf40 POP
0xf41 SWAP1
0xf42 JUMP
0xf43 JUMPDEST
0xf44 DUP3
0xf45 DUP1
0xf46 SLOAD
0xf47 PUSH1 0x1
0xf49 DUP2
0xf4a PUSH1 0x1
0xf4c AND
0xf4d ISZERO
0xf4e PUSH2 0x100
0xf51 MUL
0xf52 SUB
0xf53 AND
0xf54 PUSH1 0x2
0xf56 SWAP1
0xf57 DIV
0xf58 SWAP1
0xf59 PUSH1 0x0
0xf5b MSTORE
0xf5c PUSH1 0x20
0xf5e PUSH1 0x0
0xf60 SHA3
0xf61 SWAP1
0xf62 PUSH1 0x1f
0xf64 ADD
0xf65 PUSH1 0x20
0xf67 SWAP1
0xf68 DIV
0xf69 DUP2
0xf6a ADD
0xf6b SWAP3
0xf6c DUP3
0xf6d PUSH1 0x1f
0xf6f LT
0xf70 PUSH2 0xcf3
0xf73 JUMPI
---
0xf32: JUMPDEST 
0xf36: V1085 = 0xcae
0xf3b: V1086 = 0xd32
0xf3e: THROW 
0xf3f: JUMPDEST 
0xf42: JUMP S2
0xf43: JUMPDEST 
0xf46: V1087 = S[S2]
0xf47: V1088 = 0x1
0xf4a: V1089 = 0x1
0xf4c: V1090 = AND 0x1 V1087
0xf4d: V1091 = ISZERO V1090
0xf4e: V1092 = 0x100
0xf51: V1093 = MUL 0x100 V1091
0xf52: V1094 = SUB V1093 0x1
0xf53: V1095 = AND V1094 V1087
0xf54: V1096 = 0x2
0xf57: V1097 = DIV V1095 0x2
0xf59: V1098 = 0x0
0xf5b: M[0x0] = S2
0xf5c: V1099 = 0x20
0xf5e: V1100 = 0x0
0xf60: V1101 = SHA3 0x0 0x20
0xf62: V1102 = 0x1f
0xf64: V1103 = ADD 0x1f V1097
0xf65: V1104 = 0x20
0xf68: V1105 = DIV V1103 0x20
0xf6a: V1106 = ADD V1101 V1105
0xf6d: V1107 = 0x1f
0xf6f: V1108 = LT 0x1f S0
0xf70: V1109 = 0xcf3
0xf73: THROWI V1108
---
Entry stack: []
Stack pops: 9
Stack additions: [S1, V1101, S0, V1106, S2]
Exit stack: []

================================

Block 0xf74
[0xf74:0xf92]
---
Predecessors: [0xf32]
Successors: [0xf93]
---
0xf74 DUP1
0xf75 MLOAD
0xf76 PUSH1 0xff
0xf78 NOT
0xf79 AND
0xf7a DUP4
0xf7b DUP1
0xf7c ADD
0xf7d OR
0xf7e DUP6
0xf7f SSTORE
0xf80 PUSH2 0xd21
0xf83 JUMP
0xf84 JUMPDEST
0xf85 DUP3
0xf86 DUP1
0xf87 ADD
0xf88 PUSH1 0x1
0xf8a ADD
0xf8b DUP6
0xf8c SSTORE
0xf8d DUP3
0xf8e ISZERO
0xf8f PUSH2 0xd21
0xf92 JUMPI
---
0xf75: V1110 = M[S0]
0xf76: V1111 = 0xff
0xf78: V1112 = NOT 0xff
0xf79: V1113 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1110
0xf7c: V1114 = ADD S2 S2
0xf7d: V1115 = OR V1114 V1113
0xf7f: S[S4] = V1115
0xf80: V1116 = 0xd21
0xf83: THROW 
0xf84: JUMPDEST 
0xf87: V1117 = ADD S2 S2
0xf88: V1118 = 0x1
0xf8a: V1119 = ADD 0x1 V1117
0xf8c: S[S4] = V1119
0xf8e: V1120 = ISZERO S2
0xf8f: V1121 = 0xd21
0xf92: THROWI V1120
---
Entry stack: [S4, V1106, S2, V1101, S0]
Stack pops: 5
Stack additions: [S0, S1, S2, S3, S4]
Exit stack: []

================================

Block 0xf93
[0xf93:0xf95]
---
Predecessors: [0xf74]
Successors: [0xf96]
---
0xf93 SWAP2
0xf94 DUP3
0xf95 ADD
---
0xf95: V1122 = ADD S0 S2
---
Entry stack: [S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S0, S1, V1122]
Exit stack: [S4, S3, S0, S1, V1122]

================================

Block 0xf96
[0xf96:0xf9e]
---
Predecessors: [0xf93]
Successors: [0xf9f]
---
0xf96 JUMPDEST
0xf97 DUP3
0xf98 DUP2
0xf99 GT
0xf9a ISZERO
0xf9b PUSH2 0xd20
0xf9e JUMPI
---
0xf96: JUMPDEST 
0xf99: V1123 = GT V1122 S2
0xf9a: V1124 = ISZERO V1123
0xf9b: V1125 = 0xd20
0xf9e: THROWI V1124
---
Entry stack: [S4, S3, S2, S1, V1122]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S4, S3, S2, S1, V1122]

================================

Block 0xf9f
[0xf9f:0xfb1]
---
Predecessors: [0xf96]
Successors: [0xfb2]
---
0xf9f DUP3
0xfa0 MLOAD
0xfa1 DUP3
0xfa2 SSTORE
0xfa3 SWAP2
0xfa4 PUSH1 0x20
0xfa6 ADD
0xfa7 SWAP2
0xfa8 SWAP1
0xfa9 PUSH1 0x1
0xfab ADD
0xfac SWAP1
0xfad PUSH2 0xd05
0xfb0 JUMP
0xfb1 JUMPDEST
---
0xfa0: V1126 = M[S2]
0xfa2: S[S1] = V1126
0xfa4: V1127 = 0x20
0xfa6: V1128 = ADD 0x20 S2
0xfa9: V1129 = 0x1
0xfab: V1130 = ADD 0x1 S1
0xfad: V1131 = 0xd05
0xfb0: THROW 
0xfb1: JUMPDEST 
---
Entry stack: [S4, S3, S2, S1, V1122]
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0xfb2
[0xfb2:0xfc8]
---
Predecessors: [0xf9f]
Successors: [0xfc9]
---
0xfb2 JUMPDEST
0xfb3 POP
0xfb4 SWAP1
0xfb5 POP
0xfb6 PUSH2 0xd2e
0xfb9 SWAP2
0xfba SWAP1
0xfbb PUSH2 0xd32
0xfbe JUMP
0xfbf JUMPDEST
0xfc0 POP
0xfc1 SWAP1
0xfc2 JUMP
0xfc3 JUMPDEST
0xfc4 PUSH2 0xd54
0xfc7 SWAP2
0xfc8 SWAP1
---
0xfb2: JUMPDEST 
0xfb6: V1132 = 0xd2e
0xfbb: V1133 = 0xd32
0xfbe: THROW 
0xfbf: JUMPDEST 
0xfc2: JUMP S2
0xfc3: JUMPDEST 
0xfc4: V1134 = 0xd54
---
Entry stack: []
Stack pops: 9
Stack additions: [S0, S1, 0xd54]
Exit stack: []

================================

Block 0xfc9
[0xfc9:0xfd1]
---
Predecessors: [0xfb2]
Successors: [0xfd2]
---
0xfc9 JUMPDEST
0xfca DUP1
0xfcb DUP3
0xfcc GT
0xfcd ISZERO
0xfce PUSH2 0xd50
0xfd1 JUMPI
---
0xfc9: JUMPDEST 
0xfcc: V1135 = GT S1 S0
0xfcd: V1136 = ISZERO V1135
0xfce: V1137 = 0xd50
0xfd1: THROWI V1136
---
Entry stack: [0xd54, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [0xd54, S1, S0]

================================

Block 0xfd2
[0xfd2:0x1013]
---
Predecessors: [0xfc9]
Successors: []
---
0xfd2 PUSH1 0x0
0xfd4 DUP2
0xfd5 PUSH1 0x0
0xfd7 SWAP1
0xfd8 SSTORE
0xfd9 POP
0xfda PUSH1 0x1
0xfdc ADD
0xfdd PUSH2 0xd38
0xfe0 JUMP
0xfe1 JUMPDEST
0xfe2 POP
0xfe3 SWAP1
0xfe4 JUMP
0xfe5 JUMPDEST
0xfe6 SWAP1
0xfe7 JUMP
0xfe8 STOP
0xfe9 LOG1
0xfea PUSH6 0x627a7a723058
0xff1 SHA3
0xff2 DELEGATECALL
0xff3 DUP11
0xff4 SWAP8
0xff5 MISSING 0xce
0xff6 MISSING 0xeb
0xff7 MISSING 0xb4
0xff8 MISSING 0xf7
0xff9 MISSING 0xe0
0xffa PUSH24 0x465683ec8a6ec0a6135d58d209cd3d186c1af2fcfddb9700
0x1013 MISSING 0x29
---
0xfd2: V1138 = 0x0
0xfd5: V1139 = 0x0
0xfd8: S[S0] = 0x0
0xfda: V1140 = 0x1
0xfdc: V1141 = ADD 0x1 S0
0xfdd: V1142 = 0xd38
0xfe0: THROW 
0xfe1: JUMPDEST 
0xfe4: JUMP S2
0xfe5: JUMPDEST 
0xfe7: JUMP S1
0xfe8: STOP 
0xfe9: LOG S0 S1 S2
0xfea: V1143 = 0x627a7a723058
0xff1: V1144 = SHA3 0x627a7a723058 S3
0xff2: V1145 = DELEGATECALL V1144 S4 S5 S6 S7 S8
0xff5: MISSING 0xce
0xff6: MISSING 0xeb
0xff7: MISSING 0xb4
0xff8: MISSING 0xf7
0xff9: MISSING 0xe0
0xffa: V1146 = 0x465683ec8a6ec0a6135d58d209cd3d186c1af2fcfddb9700
0x1013: MISSING 0x29
---
Entry stack: [0xd54, S1, S0]
Stack pops: 2
Stack additions: [S15, V1145, 0x465683ec8a6ec0a6135d58d209cd3d186c1af2fcfddb9700]
Exit stack: []

================================

Function 0:
Public function signature: 0x8da5cb5b
Entry block: 0x51
Exit block: 0x66
Body: 0x51, 0x59, 0x5d, 0x66, 0xeb

Function 1:
Public function signature: 0xf2fde38b
Entry block: 0xa8
Exit block: 0xe9
Body: 0xa8, 0xb0, 0xb4, 0xe9, 0x110, 0x167, 0x16b, 0x1a3, 0x1a7

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

