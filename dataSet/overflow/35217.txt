Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x8e]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x8e
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x8e
0xc: JUMPI 0x8e V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x93]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x6fdde03
0x3c EQ
0x3d PUSH2 0x93
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x6fdde03
0x3c: V13 = EQ 0x6fdde03 V11
0x3d: V14 = 0x93
0x40: JUMPI 0x93 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x121]
---
0x41 DUP1
0x42 PUSH4 0x17fe72bb
0x47 EQ
0x48 PUSH2 0x121
0x4b JUMPI
---
0x42: V15 = 0x17fe72bb
0x47: V16 = EQ 0x17fe72bb V11
0x48: V17 = 0x121
0x4b: JUMPI 0x121 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x165]
---
0x4c DUP1
0x4d PUSH4 0x18160ddd
0x52 EQ
0x53 PUSH2 0x165
0x56 JUMPI
---
0x4d: V18 = 0x18160ddd
0x52: V19 = EQ 0x18160ddd V11
0x53: V20 = 0x165
0x56: JUMPI 0x165 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x18e]
---
0x57 DUP1
0x58 PUSH4 0x2ff2e9dc
0x5d EQ
0x5e PUSH2 0x18e
0x61 JUMPI
---
0x58: V21 = 0x2ff2e9dc
0x5d: V22 = EQ 0x2ff2e9dc V11
0x5e: V23 = 0x18e
0x61: JUMPI 0x18e V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x1b7]
---
0x62 DUP1
0x63 PUSH4 0x313ce567
0x68 EQ
0x69 PUSH2 0x1b7
0x6c JUMPI
---
0x63: V24 = 0x313ce567
0x68: V25 = EQ 0x313ce567 V11
0x69: V26 = 0x1b7
0x6c: JUMPI 0x1b7 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x1e6]
---
0x6d DUP1
0x6e PUSH4 0x70a08231
0x73 EQ
0x74 PUSH2 0x1e6
0x77 JUMPI
---
0x6e: V27 = 0x70a08231
0x73: V28 = EQ 0x70a08231 V11
0x74: V29 = 0x1e6
0x77: JUMPI 0x1e6 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x233]
---
0x78 DUP1
0x79 PUSH4 0x95d89b41
0x7e EQ
0x7f PUSH2 0x233
0x82 JUMPI
---
0x79: V30 = 0x95d89b41
0x7e: V31 = EQ 0x95d89b41 V11
0x7f: V32 = 0x233
0x82: JUMPI 0x233 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x8d]
---
Predecessors: [0x78]
Successors: [0x8e, 0x2c1]
---
0x83 DUP1
0x84 PUSH4 0xa9059cbb
0x89 EQ
0x8a PUSH2 0x2c1
0x8d JUMPI
---
0x84: V33 = 0xa9059cbb
0x89: V34 = EQ 0xa9059cbb V11
0x8a: V35 = 0x2c1
0x8d: JUMPI 0x2c1 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8e
[0x8e:0x92]
---
Predecessors: [0x0, 0x83]
Successors: []
---
0x8e JUMPDEST
0x8f PUSH1 0x0
0x91 DUP1
0x92 REVERT
---
0x8e: JUMPDEST 
0x8f: V36 = 0x0
0x92: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x93
[0x93:0x99]
---
Predecessors: [0xd]
Successors: [0x9a, 0x9e]
---
0x93 JUMPDEST
0x94 CALLVALUE
0x95 ISZERO
0x96 PUSH2 0x9e
0x99 JUMPI
---
0x93: JUMPDEST 
0x94: V37 = CALLVALUE
0x95: V38 = ISZERO V37
0x96: V39 = 0x9e
0x99: JUMPI 0x9e V38
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9a
[0x9a:0x9d]
---
Predecessors: [0x93]
Successors: []
---
0x9a PUSH1 0x0
0x9c DUP1
0x9d REVERT
---
0x9a: V40 = 0x0
0x9d: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9e
[0x9e:0xa5]
---
Predecessors: [0x93]
Successors: [0x31b]
---
0x9e JUMPDEST
0x9f PUSH2 0xa6
0xa2 PUSH2 0x31b
0xa5 JUMP
---
0x9e: JUMPDEST 
0x9f: V41 = 0xa6
0xa2: V42 = 0x31b
0xa5: JUMP 0x31b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa6]
Exit stack: [V11, 0xa6]

================================

Block 0xa6
[0xa6:0xca]
---
Predecessors: [0x31b]
Successors: [0xcb]
---
0xa6 JUMPDEST
0xa7 PUSH1 0x40
0xa9 MLOAD
0xaa DUP1
0xab DUP1
0xac PUSH1 0x20
0xae ADD
0xaf DUP3
0xb0 DUP2
0xb1 SUB
0xb2 DUP3
0xb3 MSTORE
0xb4 DUP4
0xb5 DUP2
0xb6 DUP2
0xb7 MLOAD
0xb8 DUP2
0xb9 MSTORE
0xba PUSH1 0x20
0xbc ADD
0xbd SWAP2
0xbe POP
0xbf DUP1
0xc0 MLOAD
0xc1 SWAP1
0xc2 PUSH1 0x20
0xc4 ADD
0xc5 SWAP1
0xc6 DUP1
0xc7 DUP4
0xc8 DUP4
0xc9 PUSH1 0x0
---
0xa6: JUMPDEST 
0xa7: V43 = 0x40
0xa9: V44 = M[0x40]
0xac: V45 = 0x20
0xae: V46 = ADD 0x20 V44
0xb1: V47 = SUB V46 V44
0xb3: M[V44] = V47
0xb7: V48 = M[V237]
0xb9: M[V46] = V48
0xba: V49 = 0x20
0xbc: V50 = ADD 0x20 V46
0xc0: V51 = M[V237]
0xc2: V52 = 0x20
0xc4: V53 = ADD 0x20 V237
0xc9: V54 = 0x0
---
Entry stack: [V11, 0xa6, V237]
Stack pops: 1
Stack additions: [S0, V44, V44, V50, V53, V51, V51, V50, V53, 0x0]
Exit stack: [V11, 0xa6, V237, V44, V44, V50, V53, V51, V51, V50, V53, 0x0]

================================

Block 0xcb
[0xcb:0xd3]
---
Predecessors: [0xa6, 0xd4]
Successors: [0xd4, 0xe6]
---
0xcb JUMPDEST
0xcc DUP4
0xcd DUP2
0xce LT
0xcf ISZERO
0xd0 PUSH2 0xe6
0xd3 JUMPI
---
0xcb: JUMPDEST 
0xce: V55 = LT S0 V51
0xcf: V56 = ISZERO V55
0xd0: V57 = 0xe6
0xd3: JUMPI 0xe6 V56
---
Entry stack: [V11, 0xa6, V237, V44, V44, V50, V53, V51, V51, V50, V53, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0xa6, V237, V44, V44, V50, V53, V51, V51, V50, V53, S0]

================================

Block 0xd4
[0xd4:0xe5]
---
Predecessors: [0xcb]
Successors: [0xcb]
---
0xd4 DUP1
0xd5 DUP3
0xd6 ADD
0xd7 MLOAD
0xd8 DUP2
0xd9 DUP5
0xda ADD
0xdb MSTORE
0xdc PUSH1 0x20
0xde DUP2
0xdf ADD
0xe0 SWAP1
0xe1 POP
0xe2 PUSH2 0xcb
0xe5 JUMP
---
0xd6: V58 = ADD V53 S0
0xd7: V59 = M[V58]
0xda: V60 = ADD V50 S0
0xdb: M[V60] = V59
0xdc: V61 = 0x20
0xdf: V62 = ADD S0 0x20
0xe2: V63 = 0xcb
0xe5: JUMP 0xcb
---
Entry stack: [V11, 0xa6, V237, V44, V44, V50, V53, V51, V51, V50, V53, S0]
Stack pops: 3
Stack additions: [S2, S1, V62]
Exit stack: [V11, 0xa6, V237, V44, V44, V50, V53, V51, V51, V50, V53, V62]

================================

Block 0xe6
[0xe6:0xf9]
---
Predecessors: [0xcb]
Successors: [0xfa, 0x113]
---
0xe6 JUMPDEST
0xe7 POP
0xe8 POP
0xe9 POP
0xea POP
0xeb SWAP1
0xec POP
0xed SWAP1
0xee DUP2
0xef ADD
0xf0 SWAP1
0xf1 PUSH1 0x1f
0xf3 AND
0xf4 DUP1
0xf5 ISZERO
0xf6 PUSH2 0x113
0xf9 JUMPI
---
0xe6: JUMPDEST 
0xef: V64 = ADD V51 V50
0xf1: V65 = 0x1f
0xf3: V66 = AND 0x1f V51
0xf5: V67 = ISZERO V66
0xf6: V68 = 0x113
0xf9: JUMPI 0x113 V67
---
Entry stack: [V11, 0xa6, V237, V44, V44, V50, V53, V51, V51, V50, V53, S0]
Stack pops: 7
Stack additions: [V64, V66]
Exit stack: [V11, 0xa6, V237, V44, V44, V64, V66]

================================

Block 0xfa
[0xfa:0x112]
---
Predecessors: [0xe6]
Successors: [0x113]
---
0xfa DUP1
0xfb DUP3
0xfc SUB
0xfd DUP1
0xfe MLOAD
0xff PUSH1 0x1
0x101 DUP4
0x102 PUSH1 0x20
0x104 SUB
0x105 PUSH2 0x100
0x108 EXP
0x109 SUB
0x10a NOT
0x10b AND
0x10c DUP2
0x10d MSTORE
0x10e PUSH1 0x20
0x110 ADD
0x111 SWAP2
0x112 POP
---
0xfc: V69 = SUB V64 V66
0xfe: V70 = M[V69]
0xff: V71 = 0x1
0x102: V72 = 0x20
0x104: V73 = SUB 0x20 V66
0x105: V74 = 0x100
0x108: V75 = EXP 0x100 V73
0x109: V76 = SUB V75 0x1
0x10a: V77 = NOT V76
0x10b: V78 = AND V77 V70
0x10d: M[V69] = V78
0x10e: V79 = 0x20
0x110: V80 = ADD 0x20 V69
---
Entry stack: [V11, 0xa6, V237, V44, V44, V64, V66]
Stack pops: 2
Stack additions: [V80, S0]
Exit stack: [V11, 0xa6, V237, V44, V44, V80, V66]

================================

Block 0x113
[0x113:0x120]
---
Predecessors: [0xe6, 0xfa]
Successors: []
---
0x113 JUMPDEST
0x114 POP
0x115 SWAP3
0x116 POP
0x117 POP
0x118 POP
0x119 PUSH1 0x40
0x11b MLOAD
0x11c DUP1
0x11d SWAP2
0x11e SUB
0x11f SWAP1
0x120 RETURN
---
0x113: JUMPDEST 
0x119: V81 = 0x40
0x11b: V82 = M[0x40]
0x11e: V83 = SUB S1 V82
0x120: RETURN V82 V83
---
Entry stack: [V11, 0xa6, V237, V44, V44, S1, V66]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0xa6]

================================

Block 0x121
[0x121:0x127]
---
Predecessors: [0x41]
Successors: [0x128, 0x12c]
---
0x121 JUMPDEST
0x122 CALLVALUE
0x123 ISZERO
0x124 PUSH2 0x12c
0x127 JUMPI
---
0x121: JUMPDEST 
0x122: V84 = CALLVALUE
0x123: V85 = ISZERO V84
0x124: V86 = 0x12c
0x127: JUMPI 0x12c V85
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x128
[0x128:0x12b]
---
Predecessors: [0x121]
Successors: []
---
0x128 PUSH1 0x0
0x12a DUP1
0x12b REVERT
---
0x128: V87 = 0x0
0x12b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x12c
[0x12c:0x162]
---
Predecessors: [0x121]
Successors: [0x354]
---
0x12c JUMPDEST
0x12d PUSH2 0x163
0x130 PUSH1 0x4
0x132 DUP1
0x133 DUP1
0x134 CALLDATALOAD
0x135 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14a AND
0x14b SWAP1
0x14c PUSH1 0x20
0x14e ADD
0x14f SWAP1
0x150 SWAP2
0x151 SWAP1
0x152 DUP1
0x153 CALLDATALOAD
0x154 ISZERO
0x155 ISZERO
0x156 SWAP1
0x157 PUSH1 0x20
0x159 ADD
0x15a SWAP1
0x15b SWAP2
0x15c SWAP1
0x15d POP
0x15e POP
0x15f PUSH2 0x354
0x162 JUMP
---
0x12c: JUMPDEST 
0x12d: V88 = 0x163
0x130: V89 = 0x4
0x134: V90 = CALLDATALOAD 0x4
0x135: V91 = 0xffffffffffffffffffffffffffffffffffffffff
0x14a: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff V90
0x14c: V93 = 0x20
0x14e: V94 = ADD 0x20 0x4
0x153: V95 = CALLDATALOAD 0x24
0x154: V96 = ISZERO V95
0x155: V97 = ISZERO V96
0x157: V98 = 0x20
0x159: V99 = ADD 0x20 0x24
0x15f: V100 = 0x354
0x162: JUMP 0x354
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x163, V92, V97]
Exit stack: [V11, 0x163, V92, V97]

================================

Block 0x163
[0x163:0x164]
---
Predecessors: [0x456]
Successors: []
---
0x163 JUMPDEST
0x164 STOP
---
0x163: JUMPDEST 
0x164: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x165
[0x165:0x16b]
---
Predecessors: [0x4c]
Successors: [0x16c, 0x170]
---
0x165 JUMPDEST
0x166 CALLVALUE
0x167 ISZERO
0x168 PUSH2 0x170
0x16b JUMPI
---
0x165: JUMPDEST 
0x166: V101 = CALLVALUE
0x167: V102 = ISZERO V101
0x168: V103 = 0x170
0x16b: JUMPI 0x170 V102
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x16c
[0x16c:0x16f]
---
Predecessors: [0x165]
Successors: []
---
0x16c PUSH1 0x0
0x16e DUP1
0x16f REVERT
---
0x16c: V104 = 0x0
0x16f: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x170
[0x170:0x177]
---
Predecessors: [0x165]
Successors: [0x45a]
---
0x170 JUMPDEST
0x171 PUSH2 0x178
0x174 PUSH2 0x45a
0x177 JUMP
---
0x170: JUMPDEST 
0x171: V105 = 0x178
0x174: V106 = 0x45a
0x177: JUMP 0x45a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x178]
Exit stack: [V11, 0x178]

================================

Block 0x178
[0x178:0x18d]
---
Predecessors: [0x45a]
Successors: []
---
0x178 JUMPDEST
0x179 PUSH1 0x40
0x17b MLOAD
0x17c DUP1
0x17d DUP3
0x17e DUP2
0x17f MSTORE
0x180 PUSH1 0x20
0x182 ADD
0x183 SWAP2
0x184 POP
0x185 POP
0x186 PUSH1 0x40
0x188 MLOAD
0x189 DUP1
0x18a SWAP2
0x18b SUB
0x18c SWAP1
0x18d RETURN
---
0x178: JUMPDEST 
0x179: V107 = 0x40
0x17b: V108 = M[0x40]
0x17f: M[V108] = 0x27b46536c66c8e3000000
0x180: V109 = 0x20
0x182: V110 = ADD 0x20 V108
0x186: V111 = 0x40
0x188: V112 = M[0x40]
0x18b: V113 = SUB V110 V112
0x18d: RETURN V112 V113
---
Entry stack: [V11, 0x178, 0x27b46536c66c8e3000000]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x178]

================================

Block 0x18e
[0x18e:0x194]
---
Predecessors: [0x57]
Successors: [0x195, 0x199]
---
0x18e JUMPDEST
0x18f CALLVALUE
0x190 ISZERO
0x191 PUSH2 0x199
0x194 JUMPI
---
0x18e: JUMPDEST 
0x18f: V114 = CALLVALUE
0x190: V115 = ISZERO V114
0x191: V116 = 0x199
0x194: JUMPI 0x199 V115
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x195
[0x195:0x198]
---
Predecessors: [0x18e]
Successors: []
---
0x195 PUSH1 0x0
0x197 DUP1
0x198 REVERT
---
0x195: V117 = 0x0
0x198: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x199
[0x199:0x1a0]
---
Predecessors: [0x18e]
Successors: [0x46a]
---
0x199 JUMPDEST
0x19a PUSH2 0x1a1
0x19d PUSH2 0x46a
0x1a0 JUMP
---
0x199: JUMPDEST 
0x19a: V118 = 0x1a1
0x19d: V119 = 0x46a
0x1a0: JUMP 0x46a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1a1]
Exit stack: [V11, 0x1a1]

================================

Block 0x1a1
[0x1a1:0x1b6]
---
Predecessors: [0x46a]
Successors: []
---
0x1a1 JUMPDEST
0x1a2 PUSH1 0x40
0x1a4 MLOAD
0x1a5 DUP1
0x1a6 DUP3
0x1a7 DUP2
0x1a8 MSTORE
0x1a9 PUSH1 0x20
0x1ab ADD
0x1ac SWAP2
0x1ad POP
0x1ae POP
0x1af PUSH1 0x40
0x1b1 MLOAD
0x1b2 DUP1
0x1b3 SWAP2
0x1b4 SUB
0x1b5 SWAP1
0x1b6 RETURN
---
0x1a1: JUMPDEST 
0x1a2: V120 = 0x40
0x1a4: V121 = M[0x40]
0x1a8: M[V121] = 0x27b46536c66c8e3000000
0x1a9: V122 = 0x20
0x1ab: V123 = ADD 0x20 V121
0x1af: V124 = 0x40
0x1b1: V125 = M[0x40]
0x1b4: V126 = SUB V123 V125
0x1b6: RETURN V125 V126
---
Entry stack: [V11, 0x1a1, 0x27b46536c66c8e3000000]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1a1]

================================

Block 0x1b7
[0x1b7:0x1bd]
---
Predecessors: [0x62]
Successors: [0x1be, 0x1c2]
---
0x1b7 JUMPDEST
0x1b8 CALLVALUE
0x1b9 ISZERO
0x1ba PUSH2 0x1c2
0x1bd JUMPI
---
0x1b7: JUMPDEST 
0x1b8: V127 = CALLVALUE
0x1b9: V128 = ISZERO V127
0x1ba: V129 = 0x1c2
0x1bd: JUMPI 0x1c2 V128
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1be
[0x1be:0x1c1]
---
Predecessors: [0x1b7]
Successors: []
---
0x1be PUSH1 0x0
0x1c0 DUP1
0x1c1 REVERT
---
0x1be: V130 = 0x0
0x1c1: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1c2
[0x1c2:0x1c9]
---
Predecessors: [0x1b7]
Successors: [0x47a]
---
0x1c2 JUMPDEST
0x1c3 PUSH2 0x1ca
0x1c6 PUSH2 0x47a
0x1c9 JUMP
---
0x1c2: JUMPDEST 
0x1c3: V131 = 0x1ca
0x1c6: V132 = 0x47a
0x1c9: JUMP 0x47a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1ca]
Exit stack: [V11, 0x1ca]

================================

Block 0x1ca
[0x1ca:0x1e5]
---
Predecessors: [0x47a]
Successors: []
---
0x1ca JUMPDEST
0x1cb PUSH1 0x40
0x1cd MLOAD
0x1ce DUP1
0x1cf DUP3
0x1d0 PUSH1 0xff
0x1d2 AND
0x1d3 PUSH1 0xff
0x1d5 AND
0x1d6 DUP2
0x1d7 MSTORE
0x1d8 PUSH1 0x20
0x1da ADD
0x1db SWAP2
0x1dc POP
0x1dd POP
0x1de PUSH1 0x40
0x1e0 MLOAD
0x1e1 DUP1
0x1e2 SWAP2
0x1e3 SUB
0x1e4 SWAP1
0x1e5 RETURN
---
0x1ca: JUMPDEST 
0x1cb: V133 = 0x40
0x1cd: V134 = M[0x40]
0x1d0: V135 = 0xff
0x1d2: V136 = AND 0xff 0x12
0x1d3: V137 = 0xff
0x1d5: V138 = AND 0xff 0x12
0x1d7: M[V134] = 0x12
0x1d8: V139 = 0x20
0x1da: V140 = ADD 0x20 V134
0x1de: V141 = 0x40
0x1e0: V142 = M[0x40]
0x1e3: V143 = SUB V140 V142
0x1e5: RETURN V142 V143
---
Entry stack: [V11, 0x1ca, 0x12]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1ca]

================================

Block 0x1e6
[0x1e6:0x1ec]
---
Predecessors: [0x6d]
Successors: [0x1ed, 0x1f1]
---
0x1e6 JUMPDEST
0x1e7 CALLVALUE
0x1e8 ISZERO
0x1e9 PUSH2 0x1f1
0x1ec JUMPI
---
0x1e6: JUMPDEST 
0x1e7: V144 = CALLVALUE
0x1e8: V145 = ISZERO V144
0x1e9: V146 = 0x1f1
0x1ec: JUMPI 0x1f1 V145
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1ed
[0x1ed:0x1f0]
---
Predecessors: [0x1e6]
Successors: []
---
0x1ed PUSH1 0x0
0x1ef DUP1
0x1f0 REVERT
---
0x1ed: V147 = 0x0
0x1f0: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1f1
[0x1f1:0x21c]
---
Predecessors: [0x1e6]
Successors: [0x47f]
---
0x1f1 JUMPDEST
0x1f2 PUSH2 0x21d
0x1f5 PUSH1 0x4
0x1f7 DUP1
0x1f8 DUP1
0x1f9 CALLDATALOAD
0x1fa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20f AND
0x210 SWAP1
0x211 PUSH1 0x20
0x213 ADD
0x214 SWAP1
0x215 SWAP2
0x216 SWAP1
0x217 POP
0x218 POP
0x219 PUSH2 0x47f
0x21c JUMP
---
0x1f1: JUMPDEST 
0x1f2: V148 = 0x21d
0x1f5: V149 = 0x4
0x1f9: V150 = CALLDATALOAD 0x4
0x1fa: V151 = 0xffffffffffffffffffffffffffffffffffffffff
0x20f: V152 = AND 0xffffffffffffffffffffffffffffffffffffffff V150
0x211: V153 = 0x20
0x213: V154 = ADD 0x20 0x4
0x219: V155 = 0x47f
0x21c: JUMP 0x47f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x21d, V152]
Exit stack: [V11, 0x21d, V152]

================================

Block 0x21d
[0x21d:0x232]
---
Predecessors: [0x47f]
Successors: []
---
0x21d JUMPDEST
0x21e PUSH1 0x40
0x220 MLOAD
0x221 DUP1
0x222 DUP3
0x223 DUP2
0x224 MSTORE
0x225 PUSH1 0x20
0x227 ADD
0x228 SWAP2
0x229 POP
0x22a POP
0x22b PUSH1 0x40
0x22d MLOAD
0x22e DUP1
0x22f SWAP2
0x230 SUB
0x231 SWAP1
0x232 RETURN
---
0x21d: JUMPDEST 
0x21e: V156 = 0x40
0x220: V157 = M[0x40]
0x224: M[V157] = V339
0x225: V158 = 0x20
0x227: V159 = ADD 0x20 V157
0x22b: V160 = 0x40
0x22d: V161 = M[0x40]
0x230: V162 = SUB V159 V161
0x232: RETURN V161 V162
---
Entry stack: [V11, V339]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x233
[0x233:0x239]
---
Predecessors: [0x78]
Successors: [0x23a, 0x23e]
---
0x233 JUMPDEST
0x234 CALLVALUE
0x235 ISZERO
0x236 PUSH2 0x23e
0x239 JUMPI
---
0x233: JUMPDEST 
0x234: V163 = CALLVALUE
0x235: V164 = ISZERO V163
0x236: V165 = 0x23e
0x239: JUMPI 0x23e V164
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x23a
[0x23a:0x23d]
---
Predecessors: [0x233]
Successors: []
---
0x23a PUSH1 0x0
0x23c DUP1
0x23d REVERT
---
0x23a: V166 = 0x0
0x23d: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x23e
[0x23e:0x245]
---
Predecessors: [0x233]
Successors: [0x4cb]
---
0x23e JUMPDEST
0x23f PUSH2 0x246
0x242 PUSH2 0x4cb
0x245 JUMP
---
0x23e: JUMPDEST 
0x23f: V167 = 0x246
0x242: V168 = 0x4cb
0x245: JUMP 0x4cb
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x246]
Exit stack: [V11, 0x246]

================================

Block 0x246
[0x246:0x26a]
---
Predecessors: [0x4cb]
Successors: [0x26b]
---
0x246 JUMPDEST
0x247 PUSH1 0x40
0x249 MLOAD
0x24a DUP1
0x24b DUP1
0x24c PUSH1 0x20
0x24e ADD
0x24f DUP3
0x250 DUP2
0x251 SUB
0x252 DUP3
0x253 MSTORE
0x254 DUP4
0x255 DUP2
0x256 DUP2
0x257 MLOAD
0x258 DUP2
0x259 MSTORE
0x25a PUSH1 0x20
0x25c ADD
0x25d SWAP2
0x25e POP
0x25f DUP1
0x260 MLOAD
0x261 SWAP1
0x262 PUSH1 0x20
0x264 ADD
0x265 SWAP1
0x266 DUP1
0x267 DUP4
0x268 DUP4
0x269 PUSH1 0x0
---
0x246: JUMPDEST 
0x247: V169 = 0x40
0x249: V170 = M[0x40]
0x24c: V171 = 0x20
0x24e: V172 = ADD 0x20 V170
0x251: V173 = SUB V172 V170
0x253: M[V170] = V173
0x257: V174 = M[V341]
0x259: M[V172] = V174
0x25a: V175 = 0x20
0x25c: V176 = ADD 0x20 V172
0x260: V177 = M[V341]
0x262: V178 = 0x20
0x264: V179 = ADD 0x20 V341
0x269: V180 = 0x0
---
Entry stack: [V11, 0x246, V341]
Stack pops: 1
Stack additions: [S0, V170, V170, V176, V179, V177, V177, V176, V179, 0x0]
Exit stack: [V11, 0x246, V341, V170, V170, V176, V179, V177, V177, V176, V179, 0x0]

================================

Block 0x26b
[0x26b:0x273]
---
Predecessors: [0x246, 0x274]
Successors: [0x274, 0x286]
---
0x26b JUMPDEST
0x26c DUP4
0x26d DUP2
0x26e LT
0x26f ISZERO
0x270 PUSH2 0x286
0x273 JUMPI
---
0x26b: JUMPDEST 
0x26e: V181 = LT S0 V177
0x26f: V182 = ISZERO V181
0x270: V183 = 0x286
0x273: JUMPI 0x286 V182
---
Entry stack: [V11, 0x246, V341, V170, V170, V176, V179, V177, V177, V176, V179, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x246, V341, V170, V170, V176, V179, V177, V177, V176, V179, S0]

================================

Block 0x274
[0x274:0x285]
---
Predecessors: [0x26b]
Successors: [0x26b]
---
0x274 DUP1
0x275 DUP3
0x276 ADD
0x277 MLOAD
0x278 DUP2
0x279 DUP5
0x27a ADD
0x27b MSTORE
0x27c PUSH1 0x20
0x27e DUP2
0x27f ADD
0x280 SWAP1
0x281 POP
0x282 PUSH2 0x26b
0x285 JUMP
---
0x276: V184 = ADD V179 S0
0x277: V185 = M[V184]
0x27a: V186 = ADD V176 S0
0x27b: M[V186] = V185
0x27c: V187 = 0x20
0x27f: V188 = ADD S0 0x20
0x282: V189 = 0x26b
0x285: JUMP 0x26b
---
Entry stack: [V11, 0x246, V341, V170, V170, V176, V179, V177, V177, V176, V179, S0]
Stack pops: 3
Stack additions: [S2, S1, V188]
Exit stack: [V11, 0x246, V341, V170, V170, V176, V179, V177, V177, V176, V179, V188]

================================

Block 0x286
[0x286:0x299]
---
Predecessors: [0x26b]
Successors: [0x29a, 0x2b3]
---
0x286 JUMPDEST
0x287 POP
0x288 POP
0x289 POP
0x28a POP
0x28b SWAP1
0x28c POP
0x28d SWAP1
0x28e DUP2
0x28f ADD
0x290 SWAP1
0x291 PUSH1 0x1f
0x293 AND
0x294 DUP1
0x295 ISZERO
0x296 PUSH2 0x2b3
0x299 JUMPI
---
0x286: JUMPDEST 
0x28f: V190 = ADD V177 V176
0x291: V191 = 0x1f
0x293: V192 = AND 0x1f V177
0x295: V193 = ISZERO V192
0x296: V194 = 0x2b3
0x299: JUMPI 0x2b3 V193
---
Entry stack: [V11, 0x246, V341, V170, V170, V176, V179, V177, V177, V176, V179, S0]
Stack pops: 7
Stack additions: [V190, V192]
Exit stack: [V11, 0x246, V341, V170, V170, V190, V192]

================================

Block 0x29a
[0x29a:0x2b2]
---
Predecessors: [0x286]
Successors: [0x2b3]
---
0x29a DUP1
0x29b DUP3
0x29c SUB
0x29d DUP1
0x29e MLOAD
0x29f PUSH1 0x1
0x2a1 DUP4
0x2a2 PUSH1 0x20
0x2a4 SUB
0x2a5 PUSH2 0x100
0x2a8 EXP
0x2a9 SUB
0x2aa NOT
0x2ab AND
0x2ac DUP2
0x2ad MSTORE
0x2ae PUSH1 0x20
0x2b0 ADD
0x2b1 SWAP2
0x2b2 POP
---
0x29c: V195 = SUB V190 V192
0x29e: V196 = M[V195]
0x29f: V197 = 0x1
0x2a2: V198 = 0x20
0x2a4: V199 = SUB 0x20 V192
0x2a5: V200 = 0x100
0x2a8: V201 = EXP 0x100 V199
0x2a9: V202 = SUB V201 0x1
0x2aa: V203 = NOT V202
0x2ab: V204 = AND V203 V196
0x2ad: M[V195] = V204
0x2ae: V205 = 0x20
0x2b0: V206 = ADD 0x20 V195
---
Entry stack: [V11, 0x246, V341, V170, V170, V190, V192]
Stack pops: 2
Stack additions: [V206, S0]
Exit stack: [V11, 0x246, V341, V170, V170, V206, V192]

================================

Block 0x2b3
[0x2b3:0x2c0]
---
Predecessors: [0x286, 0x29a]
Successors: []
---
0x2b3 JUMPDEST
0x2b4 POP
0x2b5 SWAP3
0x2b6 POP
0x2b7 POP
0x2b8 POP
0x2b9 PUSH1 0x40
0x2bb MLOAD
0x2bc DUP1
0x2bd SWAP2
0x2be SUB
0x2bf SWAP1
0x2c0 RETURN
---
0x2b3: JUMPDEST 
0x2b9: V207 = 0x40
0x2bb: V208 = M[0x40]
0x2be: V209 = SUB S1 V208
0x2c0: RETURN V208 V209
---
Entry stack: [V11, 0x246, V341, V170, V170, S1, V192]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x246]

================================

Block 0x2c1
[0x2c1:0x2c7]
---
Predecessors: [0x83]
Successors: [0x2c8, 0x2cc]
---
0x2c1 JUMPDEST
0x2c2 CALLVALUE
0x2c3 ISZERO
0x2c4 PUSH2 0x2cc
0x2c7 JUMPI
---
0x2c1: JUMPDEST 
0x2c2: V210 = CALLVALUE
0x2c3: V211 = ISZERO V210
0x2c4: V212 = 0x2cc
0x2c7: JUMPI 0x2cc V211
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2c8
[0x2c8:0x2cb]
---
Predecessors: [0x2c1]
Successors: []
---
0x2c8 PUSH1 0x0
0x2ca DUP1
0x2cb REVERT
---
0x2c8: V213 = 0x0
0x2cb: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2cc
[0x2cc:0x300]
---
Predecessors: [0x2c1]
Successors: [0x504]
---
0x2cc JUMPDEST
0x2cd PUSH2 0x301
0x2d0 PUSH1 0x4
0x2d2 DUP1
0x2d3 DUP1
0x2d4 CALLDATALOAD
0x2d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ea AND
0x2eb SWAP1
0x2ec PUSH1 0x20
0x2ee ADD
0x2ef SWAP1
0x2f0 SWAP2
0x2f1 SWAP1
0x2f2 DUP1
0x2f3 CALLDATALOAD
0x2f4 SWAP1
0x2f5 PUSH1 0x20
0x2f7 ADD
0x2f8 SWAP1
0x2f9 SWAP2
0x2fa SWAP1
0x2fb POP
0x2fc POP
0x2fd PUSH2 0x504
0x300 JUMP
---
0x2cc: JUMPDEST 
0x2cd: V214 = 0x301
0x2d0: V215 = 0x4
0x2d4: V216 = CALLDATALOAD 0x4
0x2d5: V217 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ea: V218 = AND 0xffffffffffffffffffffffffffffffffffffffff V216
0x2ec: V219 = 0x20
0x2ee: V220 = ADD 0x20 0x4
0x2f3: V221 = CALLDATALOAD 0x24
0x2f5: V222 = 0x20
0x2f7: V223 = ADD 0x20 0x24
0x2fd: V224 = 0x504
0x300: JUMP 0x504
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x301, V218, V221]
Exit stack: [V11, 0x301, V218, V221]

================================

Block 0x301
[0x301:0x31a]
---
Predecessors: [0x939]
Successors: []
---
0x301 JUMPDEST
0x302 PUSH1 0x40
0x304 MLOAD
0x305 DUP1
0x306 DUP3
0x307 ISZERO
0x308 ISZERO
0x309 ISZERO
0x30a ISZERO
0x30b DUP2
0x30c MSTORE
0x30d PUSH1 0x20
0x30f ADD
0x310 SWAP2
0x311 POP
0x312 POP
0x313 PUSH1 0x40
0x315 MLOAD
0x316 DUP1
0x317 SWAP2
0x318 SUB
0x319 SWAP1
0x31a RETURN
---
0x301: JUMPDEST 
0x302: V225 = 0x40
0x304: V226 = M[0x40]
0x307: V227 = ISZERO {0x0, 0x1}
0x308: V228 = ISZERO V227
0x309: V229 = ISZERO V228
0x30a: V230 = ISZERO V229
0x30c: M[V226] = V230
0x30d: V231 = 0x20
0x30f: V232 = ADD 0x20 V226
0x313: V233 = 0x40
0x315: V234 = M[0x40]
0x318: V235 = SUB V232 V234
0x31a: RETURN V234 V235
---
Entry stack: [V11, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x31b
[0x31b:0x353]
---
Predecessors: [0x9e]
Successors: [0xa6]
---
0x31b JUMPDEST
0x31c PUSH1 0x40
0x31e DUP1
0x31f MLOAD
0x320 SWAP1
0x321 DUP2
0x322 ADD
0x323 PUSH1 0x40
0x325 MSTORE
0x326 DUP1
0x327 PUSH1 0x9
0x329 DUP2
0x32a MSTORE
0x32b PUSH1 0x20
0x32d ADD
0x32e PUSH32 0x59554d20546f6b656e0000000000000000000000000000000000000000000000
0x34f DUP2
0x350 MSTORE
0x351 POP
0x352 DUP2
0x353 JUMP
---
0x31b: JUMPDEST 
0x31c: V236 = 0x40
0x31f: V237 = M[0x40]
0x322: V238 = ADD V237 0x40
0x323: V239 = 0x40
0x325: M[0x40] = V238
0x327: V240 = 0x9
0x32a: M[V237] = 0x9
0x32b: V241 = 0x20
0x32d: V242 = ADD 0x20 V237
0x32e: V243 = 0x59554d20546f6b656e0000000000000000000000000000000000000000000000
0x350: M[V242] = 0x59554d20546f6b656e0000000000000000000000000000000000000000000000
0x353: JUMP 0xa6
---
Entry stack: [V11, 0xa6]
Stack pops: 1
Stack additions: [S0, V237]
Exit stack: [V11, 0xa6, V237]

================================

Block 0x354
[0x354:0x39d]
---
Predecessors: [0x12c]
Successors: [0x39e, 0x39f]
---
0x354 JUMPDEST
0x355 PUSH20 0x45da370c3c0a1a55501f3b78becc78a084cc488
0x36a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x37f AND
0x380 CALLER
0x381 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x396 AND
0x397 EQ
0x398 ISZERO
0x399 ISZERO
0x39a PUSH2 0x39f
0x39d JUMPI
---
0x354: JUMPDEST 
0x355: V244 = 0x45da370c3c0a1a55501f3b78becc78a084cc488
0x36a: V245 = 0xffffffffffffffffffffffffffffffffffffffff
0x37f: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x45da370c3c0a1a55501f3b78becc78a084cc488
0x380: V247 = CALLER
0x381: V248 = 0xffffffffffffffffffffffffffffffffffffffff
0x396: V249 = AND 0xffffffffffffffffffffffffffffffffffffffff V247
0x397: V250 = EQ V249 0x45da370c3c0a1a55501f3b78becc78a084cc488
0x398: V251 = ISZERO V250
0x399: V252 = ISZERO V251
0x39a: V253 = 0x39f
0x39d: JUMPI 0x39f V252
---
Entry stack: [V11, 0x163, V92, V97]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x163, V92, V97]

================================

Block 0x39e
[0x39e:0x39e]
---
Predecessors: [0x354]
Successors: []
---
0x39e INVALID
---
0x39e: INVALID 
---
Entry stack: [V11, 0x163, V92, V97]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x163, V92, V97]

================================

Block 0x39f
[0x39f:0x3fb]
---
Predecessors: [0x354]
Successors: [0x3fc, 0x456]
---
0x39f JUMPDEST
0x3a0 DUP1
0x3a1 ISZERO
0x3a2 ISZERO
0x3a3 PUSH1 0x1
0x3a5 PUSH1 0x0
0x3a7 DUP5
0x3a8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3bd AND
0x3be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d3 AND
0x3d4 DUP2
0x3d5 MSTORE
0x3d6 PUSH1 0x20
0x3d8 ADD
0x3d9 SWAP1
0x3da DUP2
0x3db MSTORE
0x3dc PUSH1 0x20
0x3de ADD
0x3df PUSH1 0x0
0x3e1 SHA3
0x3e2 PUSH1 0x1
0x3e4 ADD
0x3e5 PUSH1 0x14
0x3e7 SWAP1
0x3e8 SLOAD
0x3e9 SWAP1
0x3ea PUSH2 0x100
0x3ed EXP
0x3ee SWAP1
0x3ef DIV
0x3f0 PUSH1 0xff
0x3f2 AND
0x3f3 ISZERO
0x3f4 ISZERO
0x3f5 EQ
0x3f6 ISZERO
0x3f7 ISZERO
0x3f8 PUSH2 0x456
0x3fb JUMPI
---
0x39f: JUMPDEST 
0x3a1: V254 = ISZERO V97
0x3a2: V255 = ISZERO V254
0x3a3: V256 = 0x1
0x3a5: V257 = 0x0
0x3a8: V258 = 0xffffffffffffffffffffffffffffffffffffffff
0x3bd: V259 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x3be: V260 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d3: V261 = AND 0xffffffffffffffffffffffffffffffffffffffff V259
0x3d5: M[0x0] = V261
0x3d6: V262 = 0x20
0x3d8: V263 = ADD 0x20 0x0
0x3db: M[0x20] = 0x1
0x3dc: V264 = 0x20
0x3de: V265 = ADD 0x20 0x20
0x3df: V266 = 0x0
0x3e1: V267 = SHA3 0x0 0x40
0x3e2: V268 = 0x1
0x3e4: V269 = ADD 0x1 V267
0x3e5: V270 = 0x14
0x3e8: V271 = S[V269]
0x3ea: V272 = 0x100
0x3ed: V273 = EXP 0x100 0x14
0x3ef: V274 = DIV V271 0x10000000000000000000000000000000000000000
0x3f0: V275 = 0xff
0x3f2: V276 = AND 0xff V274
0x3f3: V277 = ISZERO V276
0x3f4: V278 = ISZERO V277
0x3f5: V279 = EQ V278 V255
0x3f6: V280 = ISZERO V279
0x3f7: V281 = ISZERO V280
0x3f8: V282 = 0x456
0x3fb: JUMPI 0x456 V281
---
Entry stack: [V11, 0x163, V92, V97]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x163, V92, V97]

================================

Block 0x3fc
[0x3fc:0x455]
---
Predecessors: [0x39f]
Successors: [0x456]
---
0x3fc DUP1
0x3fd PUSH1 0x1
0x3ff PUSH1 0x0
0x401 DUP5
0x402 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x417 AND
0x418 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x42d AND
0x42e DUP2
0x42f MSTORE
0x430 PUSH1 0x20
0x432 ADD
0x433 SWAP1
0x434 DUP2
0x435 MSTORE
0x436 PUSH1 0x20
0x438 ADD
0x439 PUSH1 0x0
0x43b SHA3
0x43c PUSH1 0x1
0x43e ADD
0x43f PUSH1 0x14
0x441 PUSH2 0x100
0x444 EXP
0x445 DUP2
0x446 SLOAD
0x447 DUP2
0x448 PUSH1 0xff
0x44a MUL
0x44b NOT
0x44c AND
0x44d SWAP1
0x44e DUP4
0x44f ISZERO
0x450 ISZERO
0x451 MUL
0x452 OR
0x453 SWAP1
0x454 SSTORE
0x455 POP
---
0x3fd: V283 = 0x1
0x3ff: V284 = 0x0
0x402: V285 = 0xffffffffffffffffffffffffffffffffffffffff
0x417: V286 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x418: V287 = 0xffffffffffffffffffffffffffffffffffffffff
0x42d: V288 = AND 0xffffffffffffffffffffffffffffffffffffffff V286
0x42f: M[0x0] = V288
0x430: V289 = 0x20
0x432: V290 = ADD 0x20 0x0
0x435: M[0x20] = 0x1
0x436: V291 = 0x20
0x438: V292 = ADD 0x20 0x20
0x439: V293 = 0x0
0x43b: V294 = SHA3 0x0 0x40
0x43c: V295 = 0x1
0x43e: V296 = ADD 0x1 V294
0x43f: V297 = 0x14
0x441: V298 = 0x100
0x444: V299 = EXP 0x100 0x14
0x446: V300 = S[V296]
0x448: V301 = 0xff
0x44a: V302 = MUL 0xff 0x10000000000000000000000000000000000000000
0x44b: V303 = NOT 0xff0000000000000000000000000000000000000000
0x44c: V304 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V300
0x44f: V305 = ISZERO V97
0x450: V306 = ISZERO V305
0x451: V307 = MUL V306 0x10000000000000000000000000000000000000000
0x452: V308 = OR V307 V304
0x454: S[V296] = V308
---
Entry stack: [V11, 0x163, V92, V97]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x163, V92, V97]

================================

Block 0x456
[0x456:0x459]
---
Predecessors: [0x39f, 0x3fc]
Successors: [0x163]
---
0x456 JUMPDEST
0x457 POP
0x458 POP
0x459 JUMP
---
0x456: JUMPDEST 
0x459: JUMP 0x163
---
Entry stack: [V11, 0x163, V92, V97]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x45a
[0x45a:0x469]
---
Predecessors: [0x170]
Successors: [0x178]
---
0x45a JUMPDEST
0x45b PUSH1 0x12
0x45d PUSH1 0xff
0x45f AND
0x460 PUSH1 0xa
0x462 EXP
0x463 PUSH3 0x2dc6c0
0x467 MUL
0x468 DUP2
0x469 JUMP
---
0x45a: JUMPDEST 
0x45b: V309 = 0x12
0x45d: V310 = 0xff
0x45f: V311 = AND 0xff 0x12
0x460: V312 = 0xa
0x462: V313 = EXP 0xa 0x12
0x463: V314 = 0x2dc6c0
0x467: V315 = MUL 0x2dc6c0 0xde0b6b3a7640000
0x469: JUMP 0x178
---
Entry stack: [V11, 0x178]
Stack pops: 1
Stack additions: [S0, 0x27b46536c66c8e3000000]
Exit stack: [V11, 0x178, 0x27b46536c66c8e3000000]

================================

Block 0x46a
[0x46a:0x479]
---
Predecessors: [0x199]
Successors: [0x1a1]
---
0x46a JUMPDEST
0x46b PUSH1 0x12
0x46d PUSH1 0xff
0x46f AND
0x470 PUSH1 0xa
0x472 EXP
0x473 PUSH3 0x2dc6c0
0x477 MUL
0x478 DUP2
0x479 JUMP
---
0x46a: JUMPDEST 
0x46b: V316 = 0x12
0x46d: V317 = 0xff
0x46f: V318 = AND 0xff 0x12
0x470: V319 = 0xa
0x472: V320 = EXP 0xa 0x12
0x473: V321 = 0x2dc6c0
0x477: V322 = MUL 0x2dc6c0 0xde0b6b3a7640000
0x479: JUMP 0x1a1
---
Entry stack: [V11, 0x1a1]
Stack pops: 1
Stack additions: [S0, 0x27b46536c66c8e3000000]
Exit stack: [V11, 0x1a1, 0x27b46536c66c8e3000000]

================================

Block 0x47a
[0x47a:0x47e]
---
Predecessors: [0x1c2]
Successors: [0x1ca]
---
0x47a JUMPDEST
0x47b PUSH1 0x12
0x47d DUP2
0x47e JUMP
---
0x47a: JUMPDEST 
0x47b: V323 = 0x12
0x47e: JUMP 0x1ca
---
Entry stack: [V11, 0x1ca]
Stack pops: 1
Stack additions: [S0, 0x12]
Exit stack: [V11, 0x1ca, 0x12]

================================

Block 0x47f
[0x47f:0x4ca]
---
Predecessors: [0x1f1]
Successors: [0x21d]
---
0x47f JUMPDEST
0x480 PUSH1 0x0
0x482 PUSH1 0x1
0x484 PUSH1 0x0
0x486 DUP4
0x487 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x49c AND
0x49d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4b2 AND
0x4b3 DUP2
0x4b4 MSTORE
0x4b5 PUSH1 0x20
0x4b7 ADD
0x4b8 SWAP1
0x4b9 DUP2
0x4ba MSTORE
0x4bb PUSH1 0x20
0x4bd ADD
0x4be PUSH1 0x0
0x4c0 SHA3
0x4c1 PUSH1 0x0
0x4c3 ADD
0x4c4 SLOAD
0x4c5 SWAP1
0x4c6 POP
0x4c7 SWAP2
0x4c8 SWAP1
0x4c9 POP
0x4ca JUMP
---
0x47f: JUMPDEST 
0x480: V324 = 0x0
0x482: V325 = 0x1
0x484: V326 = 0x0
0x487: V327 = 0xffffffffffffffffffffffffffffffffffffffff
0x49c: V328 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0x49d: V329 = 0xffffffffffffffffffffffffffffffffffffffff
0x4b2: V330 = AND 0xffffffffffffffffffffffffffffffffffffffff V328
0x4b4: M[0x0] = V330
0x4b5: V331 = 0x20
0x4b7: V332 = ADD 0x20 0x0
0x4ba: M[0x20] = 0x1
0x4bb: V333 = 0x20
0x4bd: V334 = ADD 0x20 0x20
0x4be: V335 = 0x0
0x4c0: V336 = SHA3 0x0 0x40
0x4c1: V337 = 0x0
0x4c3: V338 = ADD 0x0 V336
0x4c4: V339 = S[V338]
0x4ca: JUMP 0x21d
---
Entry stack: [V11, 0x21d, V152]
Stack pops: 2
Stack additions: [V339]
Exit stack: [V11, V339]

================================

Block 0x4cb
[0x4cb:0x503]
---
Predecessors: [0x23e]
Successors: [0x246]
---
0x4cb JUMPDEST
0x4cc PUSH1 0x40
0x4ce DUP1
0x4cf MLOAD
0x4d0 SWAP1
0x4d1 DUP2
0x4d2 ADD
0x4d3 PUSH1 0x40
0x4d5 MSTORE
0x4d6 DUP1
0x4d7 PUSH1 0x3
0x4d9 DUP2
0x4da MSTORE
0x4db PUSH1 0x20
0x4dd ADD
0x4de PUSH32 0x59554d0000000000000000000000000000000000000000000000000000000000
0x4ff DUP2
0x500 MSTORE
0x501 POP
0x502 DUP2
0x503 JUMP
---
0x4cb: JUMPDEST 
0x4cc: V340 = 0x40
0x4cf: V341 = M[0x40]
0x4d2: V342 = ADD V341 0x40
0x4d3: V343 = 0x40
0x4d5: M[0x40] = V342
0x4d7: V344 = 0x3
0x4da: M[V341] = 0x3
0x4db: V345 = 0x20
0x4dd: V346 = ADD 0x20 V341
0x4de: V347 = 0x59554d0000000000000000000000000000000000000000000000000000000000
0x500: M[V346] = 0x59554d0000000000000000000000000000000000000000000000000000000000
0x503: JUMP 0x246
---
Entry stack: [V11, 0x246]
Stack pops: 1
Stack additions: [S0, V341]
Exit stack: [V11, 0x246, V341]

================================

Block 0x504
[0x504:0x53c]
---
Predecessors: [0x2cc]
Successors: [0x53d, 0x541]
---
0x504 JUMPDEST
0x505 PUSH1 0x0
0x507 DUP1
0x508 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x51d AND
0x51e DUP4
0x51f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x534 AND
0x535 EQ
0x536 ISZERO
0x537 ISZERO
0x538 ISZERO
0x539 PUSH2 0x541
0x53c JUMPI
---
0x504: JUMPDEST 
0x505: V348 = 0x0
0x508: V349 = 0xffffffffffffffffffffffffffffffffffffffff
0x51d: V350 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x51f: V351 = 0xffffffffffffffffffffffffffffffffffffffff
0x534: V352 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0x535: V353 = EQ V352 0x0
0x536: V354 = ISZERO V353
0x537: V355 = ISZERO V354
0x538: V356 = ISZERO V355
0x539: V357 = 0x541
0x53c: JUMPI 0x541 V356
---
Entry stack: [V11, 0x301, V218, V221]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V11, 0x301, V218, V221, 0x0]

================================

Block 0x53d
[0x53d:0x540]
---
Predecessors: [0x504]
Successors: []
---
0x53d PUSH1 0x0
0x53f DUP1
0x540 REVERT
---
0x53d: V358 = 0x0
0x540: REVERT 0x0 0x0
---
Entry stack: [V11, 0x301, V218, V221, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x301, V218, V221, 0x0]

================================

Block 0x541
[0x541:0x58d]
---
Predecessors: [0x504]
Successors: [0x58e, 0x592]
---
0x541 JUMPDEST
0x542 PUSH1 0x1
0x544 PUSH1 0x0
0x546 CALLER
0x547 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x55c AND
0x55d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x572 AND
0x573 DUP2
0x574 MSTORE
0x575 PUSH1 0x20
0x577 ADD
0x578 SWAP1
0x579 DUP2
0x57a MSTORE
0x57b PUSH1 0x20
0x57d ADD
0x57e PUSH1 0x0
0x580 SHA3
0x581 PUSH1 0x0
0x583 ADD
0x584 SLOAD
0x585 DUP3
0x586 GT
0x587 ISZERO
0x588 ISZERO
0x589 ISZERO
0x58a PUSH2 0x592
0x58d JUMPI
---
0x541: JUMPDEST 
0x542: V359 = 0x1
0x544: V360 = 0x0
0x546: V361 = CALLER
0x547: V362 = 0xffffffffffffffffffffffffffffffffffffffff
0x55c: V363 = AND 0xffffffffffffffffffffffffffffffffffffffff V361
0x55d: V364 = 0xffffffffffffffffffffffffffffffffffffffff
0x572: V365 = AND 0xffffffffffffffffffffffffffffffffffffffff V363
0x574: M[0x0] = V365
0x575: V366 = 0x20
0x577: V367 = ADD 0x20 0x0
0x57a: M[0x20] = 0x1
0x57b: V368 = 0x20
0x57d: V369 = ADD 0x20 0x20
0x57e: V370 = 0x0
0x580: V371 = SHA3 0x0 0x40
0x581: V372 = 0x0
0x583: V373 = ADD 0x0 V371
0x584: V374 = S[V373]
0x586: V375 = GT V221 V374
0x587: V376 = ISZERO V375
0x588: V377 = ISZERO V376
0x589: V378 = ISZERO V377
0x58a: V379 = 0x592
0x58d: JUMPI 0x592 V378
---
Entry stack: [V11, 0x301, V218, V221, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x301, V218, V221, 0x0]

================================

Block 0x58e
[0x58e:0x591]
---
Predecessors: [0x541]
Successors: []
---
0x58e PUSH1 0x0
0x590 DUP1
0x591 REVERT
---
0x58e: V380 = 0x0
0x591: REVERT 0x0 0x0
---
Entry stack: [V11, 0x301, V218, V221, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x301, V218, V221, 0x0]

================================

Block 0x592
[0x592:0x5db]
---
Predecessors: [0x541]
Successors: [0x5dc, 0x62e]
---
0x592 JUMPDEST
0x593 PUSH20 0x45da370c3c0a1a55501f3b78becc78a084cc488
0x5a8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5bd AND
0x5be CALLER
0x5bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d4 AND
0x5d5 EQ
0x5d6 DUP1
0x5d7 ISZERO
0x5d8 PUSH2 0x62e
0x5db JUMPI
---
0x592: JUMPDEST 
0x593: V381 = 0x45da370c3c0a1a55501f3b78becc78a084cc488
0x5a8: V382 = 0xffffffffffffffffffffffffffffffffffffffff
0x5bd: V383 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x45da370c3c0a1a55501f3b78becc78a084cc488
0x5be: V384 = CALLER
0x5bf: V385 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d4: V386 = AND 0xffffffffffffffffffffffffffffffffffffffff V384
0x5d5: V387 = EQ V386 0x45da370c3c0a1a55501f3b78becc78a084cc488
0x5d7: V388 = ISZERO V387
0x5d8: V389 = 0x62e
0x5db: JUMPI 0x62e V388
---
Entry stack: [V11, 0x301, V218, V221, 0x0]
Stack pops: 0
Stack additions: [V387]
Exit stack: [V11, 0x301, V218, V221, 0x0, V387]

================================

Block 0x5dc
[0x5dc:0x62d]
---
Predecessors: [0x592]
Successors: [0x62e]
---
0x5dc POP
0x5dd PUSH1 0x1
0x5df PUSH1 0x0
0x5e1 DUP5
0x5e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5f7 AND
0x5f8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x60d AND
0x60e DUP2
0x60f MSTORE
0x610 PUSH1 0x20
0x612 ADD
0x613 SWAP1
0x614 DUP2
0x615 MSTORE
0x616 PUSH1 0x20
0x618 ADD
0x619 PUSH1 0x0
0x61b SHA3
0x61c PUSH1 0x1
0x61e ADD
0x61f PUSH1 0x14
0x621 SWAP1
0x622 SLOAD
0x623 SWAP1
0x624 PUSH2 0x100
0x627 EXP
0x628 SWAP1
0x629 DIV
0x62a PUSH1 0xff
0x62c AND
0x62d ISZERO
---
0x5dd: V390 = 0x1
0x5df: V391 = 0x0
0x5e2: V392 = 0xffffffffffffffffffffffffffffffffffffffff
0x5f7: V393 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0x5f8: V394 = 0xffffffffffffffffffffffffffffffffffffffff
0x60d: V395 = AND 0xffffffffffffffffffffffffffffffffffffffff V393
0x60f: M[0x0] = V395
0x610: V396 = 0x20
0x612: V397 = ADD 0x20 0x0
0x615: M[0x20] = 0x1
0x616: V398 = 0x20
0x618: V399 = ADD 0x20 0x20
0x619: V400 = 0x0
0x61b: V401 = SHA3 0x0 0x40
0x61c: V402 = 0x1
0x61e: V403 = ADD 0x1 V401
0x61f: V404 = 0x14
0x622: V405 = S[V403]
0x624: V406 = 0x100
0x627: V407 = EXP 0x100 0x14
0x629: V408 = DIV V405 0x10000000000000000000000000000000000000000
0x62a: V409 = 0xff
0x62c: V410 = AND 0xff V408
0x62d: V411 = ISZERO V410
---
Entry stack: [V11, 0x301, V218, V221, 0x0, V387]
Stack pops: 4
Stack additions: [S3, S2, S1, V411]
Exit stack: [V11, 0x301, V218, V221, 0x0, V411]

================================

Block 0x62e
[0x62e:0x633]
---
Predecessors: [0x592, 0x5dc]
Successors: [0x634, 0x68e]
---
0x62e JUMPDEST
0x62f ISZERO
0x630 PUSH2 0x68e
0x633 JUMPI
---
0x62e: JUMPDEST 
0x62f: V412 = ISZERO S0
0x630: V413 = 0x68e
0x633: JUMPI 0x68e V412
---
Entry stack: [V11, 0x301, V218, V221, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x301, V218, V221, 0x0]

================================

Block 0x634
[0x634:0x68d]
---
Predecessors: [0x62e]
Successors: [0x68e]
---
0x634 PUSH1 0x1
0x636 DUP1
0x637 PUSH1 0x0
0x639 DUP6
0x63a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x64f AND
0x650 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x665 AND
0x666 DUP2
0x667 MSTORE
0x668 PUSH1 0x20
0x66a ADD
0x66b SWAP1
0x66c DUP2
0x66d MSTORE
0x66e PUSH1 0x20
0x670 ADD
0x671 PUSH1 0x0
0x673 SHA3
0x674 PUSH1 0x1
0x676 ADD
0x677 PUSH1 0x14
0x679 PUSH2 0x100
0x67c EXP
0x67d DUP2
0x67e SLOAD
0x67f DUP2
0x680 PUSH1 0xff
0x682 MUL
0x683 NOT
0x684 AND
0x685 SWAP1
0x686 DUP4
0x687 ISZERO
0x688 ISZERO
0x689 MUL
0x68a OR
0x68b SWAP1
0x68c SSTORE
0x68d POP
---
0x634: V414 = 0x1
0x637: V415 = 0x0
0x63a: V416 = 0xffffffffffffffffffffffffffffffffffffffff
0x64f: V417 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0x650: V418 = 0xffffffffffffffffffffffffffffffffffffffff
0x665: V419 = AND 0xffffffffffffffffffffffffffffffffffffffff V417
0x667: M[0x0] = V419
0x668: V420 = 0x20
0x66a: V421 = ADD 0x20 0x0
0x66d: M[0x20] = 0x1
0x66e: V422 = 0x20
0x670: V423 = ADD 0x20 0x20
0x671: V424 = 0x0
0x673: V425 = SHA3 0x0 0x40
0x674: V426 = 0x1
0x676: V427 = ADD 0x1 V425
0x677: V428 = 0x14
0x679: V429 = 0x100
0x67c: V430 = EXP 0x100 0x14
0x67e: V431 = S[V427]
0x680: V432 = 0xff
0x682: V433 = MUL 0xff 0x10000000000000000000000000000000000000000
0x683: V434 = NOT 0xff0000000000000000000000000000000000000000
0x684: V435 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V431
0x687: V436 = ISZERO 0x1
0x688: V437 = ISZERO 0x0
0x689: V438 = MUL 0x1 0x10000000000000000000000000000000000000000
0x68a: V439 = OR 0x10000000000000000000000000000000000000000 V435
0x68c: S[V427] = V439
---
Entry stack: [V11, 0x301, V218, V221, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x301, V218, V221, 0x0]

================================

Block 0x68e
[0x68e:0x6e4]
---
Predecessors: [0x62e, 0x634]
Successors: [0x6e5, 0x736]
---
0x68e JUMPDEST
0x68f PUSH1 0x1
0x691 PUSH1 0x0
0x693 CALLER
0x694 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a9 AND
0x6aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6bf AND
0x6c0 DUP2
0x6c1 MSTORE
0x6c2 PUSH1 0x20
0x6c4 ADD
0x6c5 SWAP1
0x6c6 DUP2
0x6c7 MSTORE
0x6c8 PUSH1 0x20
0x6ca ADD
0x6cb PUSH1 0x0
0x6cd SHA3
0x6ce PUSH1 0x1
0x6d0 ADD
0x6d1 PUSH1 0x14
0x6d3 SWAP1
0x6d4 SLOAD
0x6d5 SWAP1
0x6d6 PUSH2 0x100
0x6d9 EXP
0x6da SWAP1
0x6db DIV
0x6dc PUSH1 0xff
0x6de AND
0x6df DUP1
0x6e0 ISZERO
0x6e1 PUSH2 0x736
0x6e4 JUMPI
---
0x68e: JUMPDEST 
0x68f: V440 = 0x1
0x691: V441 = 0x0
0x693: V442 = CALLER
0x694: V443 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a9: V444 = AND 0xffffffffffffffffffffffffffffffffffffffff V442
0x6aa: V445 = 0xffffffffffffffffffffffffffffffffffffffff
0x6bf: V446 = AND 0xffffffffffffffffffffffffffffffffffffffff V444
0x6c1: M[0x0] = V446
0x6c2: V447 = 0x20
0x6c4: V448 = ADD 0x20 0x0
0x6c7: M[0x20] = 0x1
0x6c8: V449 = 0x20
0x6ca: V450 = ADD 0x20 0x20
0x6cb: V451 = 0x0
0x6cd: V452 = SHA3 0x0 0x40
0x6ce: V453 = 0x1
0x6d0: V454 = ADD 0x1 V452
0x6d1: V455 = 0x14
0x6d4: V456 = S[V454]
0x6d6: V457 = 0x100
0x6d9: V458 = EXP 0x100 0x14
0x6db: V459 = DIV V456 0x10000000000000000000000000000000000000000
0x6dc: V460 = 0xff
0x6de: V461 = AND 0xff V459
0x6e0: V462 = ISZERO V461
0x6e1: V463 = 0x736
0x6e4: JUMPI 0x736 V462
---
Entry stack: [V11, 0x301, V218, V221, 0x0]
Stack pops: 0
Stack additions: [V461]
Exit stack: [V11, 0x301, V218, V221, 0x0, V461]

================================

Block 0x6e5
[0x6e5:0x735]
---
Predecessors: [0x68e]
Successors: [0x736]
---
0x6e5 POP
0x6e6 PUSH1 0x1
0x6e8 PUSH1 0x0
0x6ea DUP5
0x6eb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x700 AND
0x701 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x716 AND
0x717 DUP2
0x718 MSTORE
0x719 PUSH1 0x20
0x71b ADD
0x71c SWAP1
0x71d DUP2
0x71e MSTORE
0x71f PUSH1 0x20
0x721 ADD
0x722 PUSH1 0x0
0x724 SHA3
0x725 PUSH1 0x1
0x727 ADD
0x728 PUSH1 0x14
0x72a SWAP1
0x72b SLOAD
0x72c SWAP1
0x72d PUSH2 0x100
0x730 EXP
0x731 SWAP1
0x732 DIV
0x733 PUSH1 0xff
0x735 AND
---
0x6e6: V464 = 0x1
0x6e8: V465 = 0x0
0x6eb: V466 = 0xffffffffffffffffffffffffffffffffffffffff
0x700: V467 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0x701: V468 = 0xffffffffffffffffffffffffffffffffffffffff
0x716: V469 = AND 0xffffffffffffffffffffffffffffffffffffffff V467
0x718: M[0x0] = V469
0x719: V470 = 0x20
0x71b: V471 = ADD 0x20 0x0
0x71e: M[0x20] = 0x1
0x71f: V472 = 0x20
0x721: V473 = ADD 0x20 0x20
0x722: V474 = 0x0
0x724: V475 = SHA3 0x0 0x40
0x725: V476 = 0x1
0x727: V477 = ADD 0x1 V475
0x728: V478 = 0x14
0x72b: V479 = S[V477]
0x72d: V480 = 0x100
0x730: V481 = EXP 0x100 0x14
0x732: V482 = DIV V479 0x10000000000000000000000000000000000000000
0x733: V483 = 0xff
0x735: V484 = AND 0xff V482
---
Entry stack: [V11, 0x301, V218, V221, 0x0, V461]
Stack pops: 4
Stack additions: [S3, S2, S1, V484]
Exit stack: [V11, 0x301, V218, V221, 0x0, V484]

================================

Block 0x736
[0x736:0x73c]
---
Predecessors: [0x68e, 0x6e5]
Successors: [0x73d, 0x784]
---
0x736 JUMPDEST
0x737 DUP1
0x738 ISZERO
0x739 PUSH2 0x784
0x73c JUMPI
---
0x736: JUMPDEST 
0x738: V485 = ISZERO S0
0x739: V486 = 0x784
0x73c: JUMPI 0x784 V485
---
Entry stack: [V11, 0x301, V218, V221, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x301, V218, V221, 0x0, S0]

================================

Block 0x73d
[0x73d:0x783]
---
Predecessors: [0x736]
Successors: [0x784]
---
0x73d POP
0x73e DUP2
0x73f PUSH1 0x1
0x741 PUSH1 0x0
0x743 CALLER
0x744 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x759 AND
0x75a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x76f AND
0x770 DUP2
0x771 MSTORE
0x772 PUSH1 0x20
0x774 ADD
0x775 SWAP1
0x776 DUP2
0x777 MSTORE
0x778 PUSH1 0x20
0x77a ADD
0x77b PUSH1 0x0
0x77d SHA3
0x77e PUSH1 0x0
0x780 ADD
0x781 SLOAD
0x782 LT
0x783 ISZERO
---
0x73f: V487 = 0x1
0x741: V488 = 0x0
0x743: V489 = CALLER
0x744: V490 = 0xffffffffffffffffffffffffffffffffffffffff
0x759: V491 = AND 0xffffffffffffffffffffffffffffffffffffffff V489
0x75a: V492 = 0xffffffffffffffffffffffffffffffffffffffff
0x76f: V493 = AND 0xffffffffffffffffffffffffffffffffffffffff V491
0x771: M[0x0] = V493
0x772: V494 = 0x20
0x774: V495 = ADD 0x20 0x0
0x777: M[0x20] = 0x1
0x778: V496 = 0x20
0x77a: V497 = ADD 0x20 0x20
0x77b: V498 = 0x0
0x77d: V499 = SHA3 0x0 0x40
0x77e: V500 = 0x0
0x780: V501 = ADD 0x0 V499
0x781: V502 = S[V501]
0x782: V503 = LT V502 V221
0x783: V504 = ISZERO V503
---
Entry stack: [V11, 0x301, V218, V221, 0x0, S0]
Stack pops: 3
Stack additions: [S2, S1, V504]
Exit stack: [V11, 0x301, V218, V221, 0x0, V504]

================================

Block 0x784
[0x784:0x78a]
---
Predecessors: [0x736, 0x73d]
Successors: [0x78b, 0x790]
---
0x784 JUMPDEST
0x785 DUP1
0x786 ISZERO
0x787 PUSH2 0x790
0x78a JUMPI
---
0x784: JUMPDEST 
0x786: V505 = ISZERO S0
0x787: V506 = 0x790
0x78a: JUMPI 0x790 V505
---
Entry stack: [V11, 0x301, V218, V221, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x301, V218, V221, 0x0, S0]

================================

Block 0x78b
[0x78b:0x78f]
---
Predecessors: [0x784]
Successors: [0x790]
---
0x78b POP
0x78c PUSH1 0x0
0x78e DUP3
0x78f GT
---
0x78c: V507 = 0x0
0x78f: V508 = GT V221 0x0
---
Entry stack: [V11, 0x301, V218, V221, 0x0, S0]
Stack pops: 3
Stack additions: [S2, S1, V508]
Exit stack: [V11, 0x301, V218, V221, 0x0, V508]

================================

Block 0x790
[0x790:0x796]
---
Predecessors: [0x784, 0x78b]
Successors: [0x797, 0x821]
---
0x790 JUMPDEST
0x791 DUP1
0x792 ISZERO
0x793 PUSH2 0x821
0x796 JUMPI
---
0x790: JUMPDEST 
0x792: V509 = ISZERO S0
0x793: V510 = 0x821
0x796: JUMPI 0x821 V509
---
Entry stack: [V11, 0x301, V218, V221, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x301, V218, V221, 0x0, S0]

================================

Block 0x797
[0x797:0x820]
---
Predecessors: [0x790]
Successors: [0x821]
---
0x797 POP
0x798 PUSH1 0x1
0x79a PUSH1 0x0
0x79c DUP5
0x79d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7b2 AND
0x7b3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7c8 AND
0x7c9 DUP2
0x7ca MSTORE
0x7cb PUSH1 0x20
0x7cd ADD
0x7ce SWAP1
0x7cf DUP2
0x7d0 MSTORE
0x7d1 PUSH1 0x20
0x7d3 ADD
0x7d4 PUSH1 0x0
0x7d6 SHA3
0x7d7 PUSH1 0x0
0x7d9 ADD
0x7da SLOAD
0x7db DUP3
0x7dc PUSH1 0x1
0x7de PUSH1 0x0
0x7e0 DUP7
0x7e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7f6 AND
0x7f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x80c AND
0x80d DUP2
0x80e MSTORE
0x80f PUSH1 0x20
0x811 ADD
0x812 SWAP1
0x813 DUP2
0x814 MSTORE
0x815 PUSH1 0x20
0x817 ADD
0x818 PUSH1 0x0
0x81a SHA3
0x81b PUSH1 0x0
0x81d ADD
0x81e SLOAD
0x81f ADD
0x820 GT
---
0x798: V511 = 0x1
0x79a: V512 = 0x0
0x79d: V513 = 0xffffffffffffffffffffffffffffffffffffffff
0x7b2: V514 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0x7b3: V515 = 0xffffffffffffffffffffffffffffffffffffffff
0x7c8: V516 = AND 0xffffffffffffffffffffffffffffffffffffffff V514
0x7ca: M[0x0] = V516
0x7cb: V517 = 0x20
0x7cd: V518 = ADD 0x20 0x0
0x7d0: M[0x20] = 0x1
0x7d1: V519 = 0x20
0x7d3: V520 = ADD 0x20 0x20
0x7d4: V521 = 0x0
0x7d6: V522 = SHA3 0x0 0x40
0x7d7: V523 = 0x0
0x7d9: V524 = ADD 0x0 V522
0x7da: V525 = S[V524]
0x7dc: V526 = 0x1
0x7de: V527 = 0x0
0x7e1: V528 = 0xffffffffffffffffffffffffffffffffffffffff
0x7f6: V529 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0x7f7: V530 = 0xffffffffffffffffffffffffffffffffffffffff
0x80c: V531 = AND 0xffffffffffffffffffffffffffffffffffffffff V529
0x80e: M[0x0] = V531
0x80f: V532 = 0x20
0x811: V533 = ADD 0x20 0x0
0x814: M[0x20] = 0x1
0x815: V534 = 0x20
0x817: V535 = ADD 0x20 0x20
0x818: V536 = 0x0
0x81a: V537 = SHA3 0x0 0x40
0x81b: V538 = 0x0
0x81d: V539 = ADD 0x0 V537
0x81e: V540 = S[V539]
0x81f: V541 = ADD V540 V221
0x820: V542 = GT V541 V525
---
Entry stack: [V11, 0x301, V218, V221, 0x0, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, V542]
Exit stack: [V11, 0x301, V218, V221, 0x0, V542]

================================

Block 0x821
[0x821:0x826]
---
Predecessors: [0x790, 0x797]
Successors: [0x827, 0x934]
---
0x821 JUMPDEST
0x822 ISZERO
0x823 PUSH2 0x934
0x826 JUMPI
---
0x821: JUMPDEST 
0x822: V543 = ISZERO S0
0x823: V544 = 0x934
0x826: JUMPI 0x934 V543
---
Entry stack: [V11, 0x301, V218, V221, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x301, V218, V221, 0x0]

================================

Block 0x827
[0x827:0x933]
---
Predecessors: [0x821]
Successors: [0x939]
---
0x827 DUP2
0x828 PUSH1 0x1
0x82a PUSH1 0x0
0x82c CALLER
0x82d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x842 AND
0x843 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x858 AND
0x859 DUP2
0x85a MSTORE
0x85b PUSH1 0x20
0x85d ADD
0x85e SWAP1
0x85f DUP2
0x860 MSTORE
0x861 PUSH1 0x20
0x863 ADD
0x864 PUSH1 0x0
0x866 SHA3
0x867 PUSH1 0x0
0x869 ADD
0x86a PUSH1 0x0
0x86c DUP3
0x86d DUP3
0x86e SLOAD
0x86f SUB
0x870 SWAP3
0x871 POP
0x872 POP
0x873 DUP2
0x874 SWAP1
0x875 SSTORE
0x876 POP
0x877 DUP2
0x878 PUSH1 0x1
0x87a PUSH1 0x0
0x87c DUP6
0x87d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x892 AND
0x893 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8a8 AND
0x8a9 DUP2
0x8aa MSTORE
0x8ab PUSH1 0x20
0x8ad ADD
0x8ae SWAP1
0x8af DUP2
0x8b0 MSTORE
0x8b1 PUSH1 0x20
0x8b3 ADD
0x8b4 PUSH1 0x0
0x8b6 SHA3
0x8b7 PUSH1 0x0
0x8b9 ADD
0x8ba PUSH1 0x0
0x8bc DUP3
0x8bd DUP3
0x8be SLOAD
0x8bf ADD
0x8c0 SWAP3
0x8c1 POP
0x8c2 POP
0x8c3 DUP2
0x8c4 SWAP1
0x8c5 SSTORE
0x8c6 POP
0x8c7 DUP3
0x8c8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8dd AND
0x8de CALLER
0x8df PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8f4 AND
0x8f5 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x916 DUP5
0x917 PUSH1 0x40
0x919 MLOAD
0x91a DUP1
0x91b DUP3
0x91c DUP2
0x91d MSTORE
0x91e PUSH1 0x20
0x920 ADD
0x921 SWAP2
0x922 POP
0x923 POP
0x924 PUSH1 0x40
0x926 MLOAD
0x927 DUP1
0x928 SWAP2
0x929 SUB
0x92a SWAP1
0x92b LOG3
0x92c PUSH1 0x1
0x92e SWAP1
0x92f POP
0x930 PUSH2 0x939
0x933 JUMP
---
0x828: V545 = 0x1
0x82a: V546 = 0x0
0x82c: V547 = CALLER
0x82d: V548 = 0xffffffffffffffffffffffffffffffffffffffff
0x842: V549 = AND 0xffffffffffffffffffffffffffffffffffffffff V547
0x843: V550 = 0xffffffffffffffffffffffffffffffffffffffff
0x858: V551 = AND 0xffffffffffffffffffffffffffffffffffffffff V549
0x85a: M[0x0] = V551
0x85b: V552 = 0x20
0x85d: V553 = ADD 0x20 0x0
0x860: M[0x20] = 0x1
0x861: V554 = 0x20
0x863: V555 = ADD 0x20 0x20
0x864: V556 = 0x0
0x866: V557 = SHA3 0x0 0x40
0x867: V558 = 0x0
0x869: V559 = ADD 0x0 V557
0x86a: V560 = 0x0
0x86e: V561 = S[V559]
0x86f: V562 = SUB V561 V221
0x875: S[V559] = V562
0x878: V563 = 0x1
0x87a: V564 = 0x0
0x87d: V565 = 0xffffffffffffffffffffffffffffffffffffffff
0x892: V566 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0x893: V567 = 0xffffffffffffffffffffffffffffffffffffffff
0x8a8: V568 = AND 0xffffffffffffffffffffffffffffffffffffffff V566
0x8aa: M[0x0] = V568
0x8ab: V569 = 0x20
0x8ad: V570 = ADD 0x20 0x0
0x8b0: M[0x20] = 0x1
0x8b1: V571 = 0x20
0x8b3: V572 = ADD 0x20 0x20
0x8b4: V573 = 0x0
0x8b6: V574 = SHA3 0x0 0x40
0x8b7: V575 = 0x0
0x8b9: V576 = ADD 0x0 V574
0x8ba: V577 = 0x0
0x8be: V578 = S[V576]
0x8bf: V579 = ADD V578 V221
0x8c5: S[V576] = V579
0x8c8: V580 = 0xffffffffffffffffffffffffffffffffffffffff
0x8dd: V581 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0x8de: V582 = CALLER
0x8df: V583 = 0xffffffffffffffffffffffffffffffffffffffff
0x8f4: V584 = AND 0xffffffffffffffffffffffffffffffffffffffff V582
0x8f5: V585 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x917: V586 = 0x40
0x919: V587 = M[0x40]
0x91d: M[V587] = V221
0x91e: V588 = 0x20
0x920: V589 = ADD 0x20 V587
0x924: V590 = 0x40
0x926: V591 = M[0x40]
0x929: V592 = SUB V589 V591
0x92b: LOG V591 V592 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V584 V581
0x92c: V593 = 0x1
0x930: V594 = 0x939
0x933: JUMP 0x939
---
Entry stack: [V11, 0x301, V218, V221, 0x0]
Stack pops: 3
Stack additions: [S2, S1, 0x1]
Exit stack: [V11, 0x301, V218, V221, 0x1]

================================

Block 0x934
[0x934:0x938]
---
Predecessors: [0x821]
Successors: [0x939]
---
0x934 JUMPDEST
0x935 PUSH1 0x0
0x937 SWAP1
0x938 POP
---
0x934: JUMPDEST 
0x935: V595 = 0x0
---
Entry stack: [V11, 0x301, V218, V221, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x301, V218, V221, 0x0]

================================

Block 0x939
[0x939:0x93e]
---
Predecessors: [0x827, 0x934]
Successors: [0x301]
---
0x939 JUMPDEST
0x93a SWAP3
0x93b SWAP2
0x93c POP
0x93d POP
0x93e JUMP
---
0x939: JUMPDEST 
0x93e: JUMP 0x301
---
Entry stack: [V11, 0x301, V218, V221, {0x0, 0x1}]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V11, {0x0, 0x1}]

================================

Block 0x93f
[0x93f:0x95b]
---
Predecessors: []
Successors: [0x95c]
---
0x93f STOP
0x940 LOG1
0x941 PUSH6 0x627a7a723058
0x948 SHA3
0x949 BLOCKHASH
0x94a STOP
0x94b MISSING 0xe0
0x94c CALL
0x94d PUSH2 0x26d9
0x950 CALLDATASIZE
0x951 DUP15
0x952 MISSING 0xaf
0x953 MISSING 0x21
0x954 MISSING 0xda
0x955 MISSING 0xb1
0x956 PUSH3 0xb62738
0x95a MISSING 0xce
0x95b SWAP15
---
0x93f: STOP 
0x940: LOG S0 S1 S2
0x941: V596 = 0x627a7a723058
0x948: V597 = SHA3 0x627a7a723058 S3
0x949: V598 = BLOCKHASH V597
0x94a: STOP 
0x94b: MISSING 0xe0
0x94c: V599 = CALL S0 S1 S2 S3 S4 S5 S6
0x94d: V600 = 0x26d9
0x950: V601 = CALLDATASIZE
0x952: MISSING 0xaf
0x953: MISSING 0x21
0x954: MISSING 0xda
0x955: MISSING 0xb1
0x956: V602 = 0xb62738
0x95a: MISSING 0xce
0x95b: NOP 
---
Entry stack: []
Stack pops: 0
Stack additions: [V598, S18, V601, 0x26d9, V599, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, 0xb62738, S15, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S0]
Exit stack: []

================================

Block 0x95c
[0x95c:0x96a]
---
Predecessors: [0x93f]
Successors: []
---
0x95c JUMPDEST
0x95d MISSING 0x5c
0x95e MISSING 0xe2
0x95f MISSING 0x46
0x960 MISSING 0xc9
0x961 MISSING 0xcf
0x962 SWAP11
0x963 MISSING 0xdd
0x964 DUP15
0x965 DIFFICULTY
0x966 MISSING 0x28
0x967 MISSING 0xed
0x968 DUP2
0x969 STOP
0x96a MISSING 0x29
---
0x95c: JUMPDEST 
0x95d: MISSING 0x5c
0x95e: MISSING 0xe2
0x95f: MISSING 0x46
0x960: MISSING 0xc9
0x961: MISSING 0xcf
0x963: MISSING 0xdd
0x965: V603 = DIFFICULTY
0x966: MISSING 0x28
0x967: MISSING 0xed
0x969: STOP 
0x96a: MISSING 0x29
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [S11, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S0, V603, S14, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S1, S0, S1]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x93
Exit block: 0x113
Body: 0x93, 0x9a, 0x9e, 0xa6, 0xcb, 0xd4, 0xe6, 0xfa, 0x113, 0x31b

Function 1:
Public function signature: 0x17fe72bb
Entry block: 0x121
Exit block: 0x163
Body: 0x121, 0x128, 0x12c, 0x163, 0x354, 0x39e, 0x39f, 0x3fc, 0x456

Function 2:
Public function signature: 0x18160ddd
Entry block: 0x165
Exit block: 0x178
Body: 0x165, 0x16c, 0x170, 0x178, 0x45a

Function 3:
Public function signature: 0x2ff2e9dc
Entry block: 0x18e
Exit block: 0x1a1
Body: 0x18e, 0x195, 0x199, 0x1a1, 0x46a

Function 4:
Public function signature: 0x313ce567
Entry block: 0x1b7
Exit block: 0x1ca
Body: 0x1b7, 0x1be, 0x1c2, 0x1ca, 0x47a

Function 5:
Public function signature: 0x70a08231
Entry block: 0x1e6
Exit block: 0x21d
Body: 0x1e6, 0x1ed, 0x1f1, 0x21d, 0x47f

Function 6:
Public function signature: 0x95d89b41
Entry block: 0x233
Exit block: 0x2b3
Body: 0x233, 0x23a, 0x23e, 0x246, 0x26b, 0x274, 0x286, 0x29a, 0x2b3, 0x4cb

Function 7:
Public function signature: 0xa9059cbb
Entry block: 0x2c1
Exit block: 0x301
Body: 0x2c1, 0x2c8, 0x2cc, 0x301, 0x504, 0x53d, 0x541, 0x58e, 0x592, 0x5dc, 0x62e, 0x634, 0x68e, 0x6e5, 0x736, 0x73d, 0x784, 0x78b, 0x790, 0x797, 0x821, 0x827, 0x934, 0x939

Function 8:
Public fallback function
Entry block: 0x8e
Exit block: 0x8e
Body: 0x8e

