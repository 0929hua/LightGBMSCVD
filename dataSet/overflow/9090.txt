Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x5c]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x8da5cb5b
0x3c EQ
0x3d PUSH2 0x5c
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x8da5cb5b
0x3c: V13 = EQ 0x8da5cb5b V11
0x3d: V14 = 0x5c
0x40: JUMPI 0x5c V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xb1]
---
0x41 DUP1
0x42 PUSH4 0xad8733ca
0x47 EQ
0x48 PUSH2 0xb1
0x4b JUMPI
---
0x42: V15 = 0xad8733ca
0x47: V16 = EQ 0xad8733ca V11
0x48: V17 = 0xb1
0x4b: JUMPI 0xb1 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x17e]
---
0x4c DUP1
0x4d PUSH4 0xf2fde38b
0x52 EQ
0x53 PUSH2 0x17e
0x56 JUMPI
---
0x4d: V18 = 0xf2fde38b
0x52: V19 = EQ 0xf2fde38b V11
0x53: V20 = 0x17e
0x56: JUMPI 0x17e V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x5b]
---
Predecessors: [0x0, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x57: JUMPDEST 
0x58: V21 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0x62]
---
Predecessors: [0xd, 0x520]
Successors: [0x63, 0x67]
---
0x5c JUMPDEST
0x5d CALLVALUE
0x5e ISZERO
0x5f PUSH2 0x67
0x62 JUMPI
---
0x5c: JUMPDEST 
0x5d: V22 = CALLVALUE
0x5e: V23 = ISZERO V22
0x5f: V24 = 0x67
0x62: JUMPI 0x67 V23
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x63
[0x63:0x66]
---
Predecessors: [0x5c]
Successors: []
---
0x63 PUSH1 0x0
0x65 DUP1
0x66 REVERT
---
0x63: V25 = 0x0
0x66: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x67
[0x67:0x6e]
---
Predecessors: [0x5c]
Successors: [0x1b7]
---
0x67 JUMPDEST
0x68 PUSH2 0x6f
0x6b PUSH2 0x1b7
0x6e JUMP
---
0x67: JUMPDEST 
0x68: V26 = 0x6f
0x6b: V27 = 0x1b7
0x6e: JUMP 0x1b7
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6f]
Exit stack: [V11, 0x6f]

================================

Block 0x6f
[0x6f:0xb0]
---
Predecessors: [0x1b7]
Successors: []
---
0x6f JUMPDEST
0x70 PUSH1 0x40
0x72 MLOAD
0x73 DUP1
0x74 DUP3
0x75 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8a AND
0x8b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa0 AND
0xa1 DUP2
0xa2 MSTORE
0xa3 PUSH1 0x20
0xa5 ADD
0xa6 SWAP2
0xa7 POP
0xa8 POP
0xa9 PUSH1 0x40
0xab MLOAD
0xac DUP1
0xad SWAP2
0xae SUB
0xaf SWAP1
0xb0 RETURN
---
0x6f: JUMPDEST 
0x70: V28 = 0x40
0x72: V29 = M[0x40]
0x75: V30 = 0xffffffffffffffffffffffffffffffffffffffff
0x8a: V31 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0x8b: V32 = 0xffffffffffffffffffffffffffffffffffffffff
0xa0: V33 = AND 0xffffffffffffffffffffffffffffffffffffffff V31
0xa2: M[V29] = V33
0xa3: V34 = 0x20
0xa5: V35 = ADD 0x20 V29
0xa9: V36 = 0x40
0xab: V37 = M[0x40]
0xae: V38 = SUB V35 V37
0xb0: RETURN V37 V38
---
Entry stack: [V11, 0x6f, V116]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x6f]

================================

Block 0xb1
[0xb1:0xb7]
---
Predecessors: [0x41, 0x52c]
Successors: [0xb8, 0xbc]
---
0xb1 JUMPDEST
0xb2 CALLVALUE
0xb3 ISZERO
0xb4 PUSH2 0xbc
0xb7 JUMPI
---
0xb1: JUMPDEST 
0xb2: V39 = CALLVALUE
0xb3: V40 = ISZERO V39
0xb4: V41 = 0xbc
0xb7: JUMPI 0xbc V40
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb8
[0xb8:0xbb]
---
Predecessors: [0xb1]
Successors: []
---
0xb8 PUSH1 0x0
0xba DUP1
0xbb REVERT
---
0xb8: V42 = 0x0
0xbb: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xbc
[0xbc:0x167]
---
Predecessors: [0xb1]
Successors: [0x1dc]
---
0xbc JUMPDEST
0xbd PUSH2 0x168
0xc0 PUSH1 0x4
0xc2 DUP1
0xc3 DUP1
0xc4 CALLDATALOAD
0xc5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xda AND
0xdb SWAP1
0xdc PUSH1 0x20
0xde ADD
0xdf SWAP1
0xe0 SWAP2
0xe1 SWAP1
0xe2 DUP1
0xe3 CALLDATALOAD
0xe4 SWAP1
0xe5 PUSH1 0x20
0xe7 ADD
0xe8 SWAP1
0xe9 DUP3
0xea ADD
0xeb DUP1
0xec CALLDATALOAD
0xed SWAP1
0xee PUSH1 0x20
0xf0 ADD
0xf1 SWAP1
0xf2 DUP1
0xf3 DUP1
0xf4 PUSH1 0x20
0xf6 MUL
0xf7 PUSH1 0x20
0xf9 ADD
0xfa PUSH1 0x40
0xfc MLOAD
0xfd SWAP1
0xfe DUP2
0xff ADD
0x100 PUSH1 0x40
0x102 MSTORE
0x103 DUP1
0x104 SWAP4
0x105 SWAP3
0x106 SWAP2
0x107 SWAP1
0x108 DUP2
0x109 DUP2
0x10a MSTORE
0x10b PUSH1 0x20
0x10d ADD
0x10e DUP4
0x10f DUP4
0x110 PUSH1 0x20
0x112 MUL
0x113 DUP1
0x114 DUP3
0x115 DUP5
0x116 CALLDATACOPY
0x117 DUP3
0x118 ADD
0x119 SWAP2
0x11a POP
0x11b POP
0x11c POP
0x11d POP
0x11e POP
0x11f POP
0x120 SWAP2
0x121 SWAP1
0x122 DUP1
0x123 CALLDATALOAD
0x124 SWAP1
0x125 PUSH1 0x20
0x127 ADD
0x128 SWAP1
0x129 DUP3
0x12a ADD
0x12b DUP1
0x12c CALLDATALOAD
0x12d SWAP1
0x12e PUSH1 0x20
0x130 ADD
0x131 SWAP1
0x132 DUP1
0x133 DUP1
0x134 PUSH1 0x20
0x136 MUL
0x137 PUSH1 0x20
0x139 ADD
0x13a PUSH1 0x40
0x13c MLOAD
0x13d SWAP1
0x13e DUP2
0x13f ADD
0x140 PUSH1 0x40
0x142 MSTORE
0x143 DUP1
0x144 SWAP4
0x145 SWAP3
0x146 SWAP2
0x147 SWAP1
0x148 DUP2
0x149 DUP2
0x14a MSTORE
0x14b PUSH1 0x20
0x14d ADD
0x14e DUP4
0x14f DUP4
0x150 PUSH1 0x20
0x152 MUL
0x153 DUP1
0x154 DUP3
0x155 DUP5
0x156 CALLDATACOPY
0x157 DUP3
0x158 ADD
0x159 SWAP2
0x15a POP
0x15b POP
0x15c POP
0x15d POP
0x15e POP
0x15f POP
0x160 SWAP2
0x161 SWAP1
0x162 POP
0x163 POP
0x164 PUSH2 0x1dc
0x167 JUMP
---
0xbc: JUMPDEST 
0xbd: V43 = 0x168
0xc0: V44 = 0x4
0xc4: V45 = CALLDATALOAD 0x4
0xc5: V46 = 0xffffffffffffffffffffffffffffffffffffffff
0xda: V47 = AND 0xffffffffffffffffffffffffffffffffffffffff V45
0xdc: V48 = 0x20
0xde: V49 = ADD 0x20 0x4
0xe3: V50 = CALLDATALOAD 0x24
0xe5: V51 = 0x20
0xe7: V52 = ADD 0x20 0x24
0xea: V53 = ADD 0x4 V50
0xec: V54 = CALLDATALOAD V53
0xee: V55 = 0x20
0xf0: V56 = ADD 0x20 V53
0xf4: V57 = 0x20
0xf6: V58 = MUL 0x20 V54
0xf7: V59 = 0x20
0xf9: V60 = ADD 0x20 V58
0xfa: V61 = 0x40
0xfc: V62 = M[0x40]
0xff: V63 = ADD V62 V60
0x100: V64 = 0x40
0x102: M[0x40] = V63
0x10a: M[V62] = V54
0x10b: V65 = 0x20
0x10d: V66 = ADD 0x20 V62
0x110: V67 = 0x20
0x112: V68 = MUL 0x20 V54
0x116: CALLDATACOPY V66 V56 V68
0x118: V69 = ADD V66 V68
0x123: V70 = CALLDATALOAD 0x44
0x125: V71 = 0x20
0x127: V72 = ADD 0x20 0x44
0x12a: V73 = ADD 0x4 V70
0x12c: V74 = CALLDATALOAD V73
0x12e: V75 = 0x20
0x130: V76 = ADD 0x20 V73
0x134: V77 = 0x20
0x136: V78 = MUL 0x20 V74
0x137: V79 = 0x20
0x139: V80 = ADD 0x20 V78
0x13a: V81 = 0x40
0x13c: V82 = M[0x40]
0x13f: V83 = ADD V82 V80
0x140: V84 = 0x40
0x142: M[0x40] = V83
0x14a: M[V82] = V74
0x14b: V85 = 0x20
0x14d: V86 = ADD 0x20 V82
0x150: V87 = 0x20
0x152: V88 = MUL 0x20 V74
0x156: CALLDATACOPY V86 V76 V88
0x158: V89 = ADD V86 V88
0x164: V90 = 0x1dc
0x167: JUMP 0x1dc
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x168, V47, V62, V82]
Exit stack: [V11, 0x168, V47, V62, V82]

================================

Block 0x168
[0x168:0x17d]
---
Predecessors: [0x348]
Successors: []
---
0x168 JUMPDEST
0x169 PUSH1 0x40
0x16b MLOAD
0x16c DUP1
0x16d DUP3
0x16e DUP2
0x16f MSTORE
0x170 PUSH1 0x20
0x172 ADD
0x173 SWAP2
0x174 POP
0x175 POP
0x176 PUSH1 0x40
0x178 MLOAD
0x179 DUP1
0x17a SWAP2
0x17b SUB
0x17c SWAP1
0x17d RETURN
---
0x168: JUMPDEST 
0x169: V91 = 0x40
0x16b: V92 = M[0x40]
0x16f: M[V92] = S0
0x170: V93 = 0x20
0x172: V94 = ADD 0x20 V92
0x176: V95 = 0x40
0x178: V96 = M[0x40]
0x17b: V97 = SUB V94 V96
0x17d: RETURN V96 V97
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x17e
[0x17e:0x184]
---
Predecessors: [0x4c]
Successors: [0x185, 0x189]
---
0x17e JUMPDEST
0x17f CALLVALUE
0x180 ISZERO
0x181 PUSH2 0x189
0x184 JUMPI
---
0x17e: JUMPDEST 
0x17f: V98 = CALLVALUE
0x180: V99 = ISZERO V98
0x181: V100 = 0x189
0x184: JUMPI 0x189 V99
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x185
[0x185:0x188]
---
Predecessors: [0x17e]
Successors: []
---
0x185 PUSH1 0x0
0x187 DUP1
0x188 REVERT
---
0x185: V101 = 0x0
0x188: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x189
[0x189:0x1b4]
---
Predecessors: [0x17e]
Successors: [0x353]
---
0x189 JUMPDEST
0x18a PUSH2 0x1b5
0x18d PUSH1 0x4
0x18f DUP1
0x190 DUP1
0x191 CALLDATALOAD
0x192 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a7 AND
0x1a8 SWAP1
0x1a9 PUSH1 0x20
0x1ab ADD
0x1ac SWAP1
0x1ad SWAP2
0x1ae SWAP1
0x1af POP
0x1b0 POP
0x1b1 PUSH2 0x353
0x1b4 JUMP
---
0x189: JUMPDEST 
0x18a: V102 = 0x1b5
0x18d: V103 = 0x4
0x191: V104 = CALLDATALOAD 0x4
0x192: V105 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a7: V106 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x1a9: V107 = 0x20
0x1ab: V108 = ADD 0x20 0x4
0x1b1: V109 = 0x353
0x1b4: JUMP 0x353
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1b5, V106]
Exit stack: [V11, 0x1b5, V106]

================================

Block 0x1b5
[0x1b5:0x1b6]
---
Predecessors: [0x3ea]
Successors: []
---
0x1b5 JUMPDEST
0x1b6 STOP
---
0x1b5: JUMPDEST 
0x1b6: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1b7
[0x1b7:0x1db]
---
Predecessors: [0x67]
Successors: [0x6f]
---
0x1b7 JUMPDEST
0x1b8 PUSH1 0x0
0x1ba DUP1
0x1bb SWAP1
0x1bc SLOAD
0x1bd SWAP1
0x1be PUSH2 0x100
0x1c1 EXP
0x1c2 SWAP1
0x1c3 DIV
0x1c4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d9 AND
0x1da DUP2
0x1db JUMP
---
0x1b7: JUMPDEST 
0x1b8: V110 = 0x0
0x1bc: V111 = S[0x0]
0x1be: V112 = 0x100
0x1c1: V113 = EXP 0x100 0x0
0x1c3: V114 = DIV V111 0x1
0x1c4: V115 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d9: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x1db: JUMP 0x6f
---
Entry stack: [V11, 0x6f]
Stack pops: 1
Stack additions: [S0, V116]
Exit stack: [V11, 0x6f, V116]

================================

Block 0x1dc
[0x1dc:0x235]
---
Predecessors: [0xbc]
Successors: [0x236, 0x23a]
---
0x1dc JUMPDEST
0x1dd PUSH1 0x0
0x1df DUP1
0x1e0 PUSH1 0x0
0x1e2 DUP1
0x1e3 SWAP1
0x1e4 SLOAD
0x1e5 SWAP1
0x1e6 PUSH2 0x100
0x1e9 EXP
0x1ea SWAP1
0x1eb DIV
0x1ec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x201 AND
0x202 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x217 AND
0x218 CALLER
0x219 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22e AND
0x22f EQ
0x230 ISZERO
0x231 ISZERO
0x232 PUSH2 0x23a
0x235 JUMPI
---
0x1dc: JUMPDEST 
0x1dd: V117 = 0x0
0x1e0: V118 = 0x0
0x1e4: V119 = S[0x0]
0x1e6: V120 = 0x100
0x1e9: V121 = EXP 0x100 0x0
0x1eb: V122 = DIV V119 0x1
0x1ec: V123 = 0xffffffffffffffffffffffffffffffffffffffff
0x201: V124 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x202: V125 = 0xffffffffffffffffffffffffffffffffffffffff
0x217: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V124
0x218: V127 = CALLER
0x219: V128 = 0xffffffffffffffffffffffffffffffffffffffff
0x22e: V129 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x22f: V130 = EQ V129 V126
0x230: V131 = ISZERO V130
0x231: V132 = ISZERO V131
0x232: V133 = 0x23a
0x235: JUMPI 0x23a V132
---
Entry stack: [V11, 0x168, V47, V62, V82]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0x168, V47, V62, V82, 0x0, 0x0]

================================

Block 0x236
[0x236:0x239]
---
Predecessors: [0x1dc]
Successors: []
---
0x236 PUSH1 0x0
0x238 DUP1
0x239 REVERT
---
0x236: V134 = 0x0
0x239: REVERT 0x0 0x0
---
Entry stack: [V11, 0x168, V47, V62, V82, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x168, V47, V62, V82, 0x0, 0x0]

================================

Block 0x23a
[0x23a:0x23e]
---
Predecessors: [0x1dc]
Successors: [0x23f]
---
0x23a JUMPDEST
0x23b PUSH1 0x0
0x23d SWAP1
0x23e POP
---
0x23a: JUMPDEST 
0x23b: V135 = 0x0
---
Entry stack: [V11, 0x168, V47, V62, V82, 0x0, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x168, V47, V62, V82, 0x0, 0x0]

================================

Block 0x23f
[0x23f:0x248]
---
Predecessors: [0x23a, 0x332]
Successors: [0x249, 0x348]
---
0x23f JUMPDEST
0x240 DUP4
0x241 MLOAD
0x242 DUP2
0x243 LT
0x244 ISZERO
0x245 PUSH2 0x348
0x248 JUMPI
---
0x23f: JUMPDEST 
0x241: V136 = M[V62]
0x243: V137 = LT S0 V136
0x244: V138 = ISZERO V137
0x245: V139 = 0x348
0x248: JUMPI 0x348 V138
---
Entry stack: [V11, 0x168, V47, V62, V82, 0x0, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x168, V47, V62, V82, 0x0, S0]

================================

Block 0x249
[0x249:0x270]
---
Predecessors: [0x23f]
Successors: [0x271, 0x272]
---
0x249 DUP5
0x24a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x25f AND
0x260 PUSH4 0xa9059cbb
0x265 DUP6
0x266 DUP4
0x267 DUP2
0x268 MLOAD
0x269 DUP2
0x26a LT
0x26b ISZERO
0x26c ISZERO
0x26d PUSH2 0x272
0x270 JUMPI
---
0x24a: V140 = 0xffffffffffffffffffffffffffffffffffffffff
0x25f: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff V47
0x260: V142 = 0xa9059cbb
0x268: V143 = M[V62]
0x26a: V144 = LT S0 V143
0x26b: V145 = ISZERO V144
0x26c: V146 = ISZERO V145
0x26d: V147 = 0x272
0x270: JUMPI 0x272 V146
---
Entry stack: [V11, 0x168, V47, V62, V82, 0x0, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V141, 0xa9059cbb, S3, S0]
Exit stack: [V11, 0x168, V47, V62, V82, 0x0, S0, V141, 0xa9059cbb, V62, S0]

================================

Block 0x271
[0x271:0x271]
---
Predecessors: [0x249]
Successors: []
---
0x271 INVALID
---
0x271: INVALID 
---
Entry stack: [V11, 0x168, V47, V62, V82, 0x0, S4, V141, 0xa9059cbb, V62, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x168, V47, V62, V82, 0x0, S4, V141, 0xa9059cbb, V62, S0]

================================

Block 0x272
[0x272:0x288]
---
Predecessors: [0x249]
Successors: [0x289, 0x28a]
---
0x272 JUMPDEST
0x273 SWAP1
0x274 PUSH1 0x20
0x276 ADD
0x277 SWAP1
0x278 PUSH1 0x20
0x27a MUL
0x27b ADD
0x27c MLOAD
0x27d DUP6
0x27e DUP5
0x27f DUP2
0x280 MLOAD
0x281 DUP2
0x282 LT
0x283 ISZERO
0x284 ISZERO
0x285 PUSH2 0x28a
0x288 JUMPI
---
0x272: JUMPDEST 
0x274: V148 = 0x20
0x276: V149 = ADD 0x20 V62
0x278: V150 = 0x20
0x27a: V151 = MUL 0x20 S0
0x27b: V152 = ADD V151 V149
0x27c: V153 = M[V152]
0x280: V154 = M[V82]
0x282: V155 = LT S4 V154
0x283: V156 = ISZERO V155
0x284: V157 = ISZERO V156
0x285: V158 = 0x28a
0x288: JUMPI 0x28a V157
---
Entry stack: [V11, 0x168, V47, V62, V82, 0x0, S4, V141, 0xa9059cbb, V62, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V153, S6, S4]
Exit stack: [V11, 0x168, V47, V62, V82, 0x0, S4, V141, 0xa9059cbb, V153, V82, S4]

================================

Block 0x289
[0x289:0x289]
---
Predecessors: [0x272]
Successors: []
---
0x289 INVALID
---
0x289: INVALID 
---
Entry stack: [V11, 0x168, V47, V62, V82, 0x0, S5, V141, 0xa9059cbb, V153, V82, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x168, V47, V62, V82, 0x0, S5, V141, 0xa9059cbb, V153, V82, S0]

================================

Block 0x28a
[0x28a:0x31c]
---
Predecessors: [0x272]
Successors: [0x31d, 0x321]
---
0x28a JUMPDEST
0x28b SWAP1
0x28c PUSH1 0x20
0x28e ADD
0x28f SWAP1
0x290 PUSH1 0x20
0x292 MUL
0x293 ADD
0x294 MLOAD
0x295 PUSH1 0x0
0x297 PUSH1 0x40
0x299 MLOAD
0x29a PUSH1 0x20
0x29c ADD
0x29d MSTORE
0x29e PUSH1 0x40
0x2a0 MLOAD
0x2a1 DUP4
0x2a2 PUSH4 0xffffffff
0x2a7 AND
0x2a8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c6 MUL
0x2c7 DUP2
0x2c8 MSTORE
0x2c9 PUSH1 0x4
0x2cb ADD
0x2cc DUP1
0x2cd DUP4
0x2ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e3 AND
0x2e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f9 AND
0x2fa DUP2
0x2fb MSTORE
0x2fc PUSH1 0x20
0x2fe ADD
0x2ff DUP3
0x300 DUP2
0x301 MSTORE
0x302 PUSH1 0x20
0x304 ADD
0x305 SWAP3
0x306 POP
0x307 POP
0x308 POP
0x309 PUSH1 0x20
0x30b PUSH1 0x40
0x30d MLOAD
0x30e DUP1
0x30f DUP4
0x310 SUB
0x311 DUP2
0x312 PUSH1 0x0
0x314 DUP8
0x315 DUP1
0x316 EXTCODESIZE
0x317 ISZERO
0x318 ISZERO
0x319 PUSH2 0x321
0x31c JUMPI
---
0x28a: JUMPDEST 
0x28c: V159 = 0x20
0x28e: V160 = ADD 0x20 V82
0x290: V161 = 0x20
0x292: V162 = MUL 0x20 S0
0x293: V163 = ADD V162 V160
0x294: V164 = M[V163]
0x295: V165 = 0x0
0x297: V166 = 0x40
0x299: V167 = M[0x40]
0x29a: V168 = 0x20
0x29c: V169 = ADD 0x20 V167
0x29d: M[V169] = 0x0
0x29e: V170 = 0x40
0x2a0: V171 = M[0x40]
0x2a2: V172 = 0xffffffff
0x2a7: V173 = AND 0xffffffff 0xa9059cbb
0x2a8: V174 = 0x100000000000000000000000000000000000000000000000000000000
0x2c6: V175 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x2c8: M[V171] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x2c9: V176 = 0x4
0x2cb: V177 = ADD 0x4 V171
0x2ce: V178 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e3: V179 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x2e4: V180 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f9: V181 = AND 0xffffffffffffffffffffffffffffffffffffffff V179
0x2fb: M[V177] = V181
0x2fc: V182 = 0x20
0x2fe: V183 = ADD 0x20 V177
0x301: M[V183] = V164
0x302: V184 = 0x20
0x304: V185 = ADD 0x20 V183
0x309: V186 = 0x20
0x30b: V187 = 0x40
0x30d: V188 = M[0x40]
0x310: V189 = SUB V185 V188
0x312: V190 = 0x0
0x316: V191 = EXTCODESIZE V141
0x317: V192 = ISZERO V191
0x318: V193 = ISZERO V192
0x319: V194 = 0x321
0x31c: JUMPI 0x321 V193
---
Entry stack: [V11, 0x168, V47, V62, V82, 0x0, S5, V141, 0xa9059cbb, V153, V82, S0]
Stack pops: 5
Stack additions: [S4, S3, V185, 0x20, V188, V189, V188, 0x0, S4]
Exit stack: [V11, 0x168, V47, V62, V82, 0x0, S5, V141, 0xa9059cbb, V185, 0x20, V188, V189, V188, 0x0, V141]

================================

Block 0x31d
[0x31d:0x320]
---
Predecessors: [0x28a]
Successors: []
---
0x31d PUSH1 0x0
0x31f DUP1
0x320 REVERT
---
0x31d: V195 = 0x0
0x320: REVERT 0x0 0x0
---
Entry stack: [V11, 0x168, V47, V62, V82, 0x0, S9, V141, 0xa9059cbb, V185, 0x20, V188, V189, V188, 0x0, V141]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x168, V47, V62, V82, 0x0, S9, V141, 0xa9059cbb, V185, 0x20, V188, V189, V188, 0x0, V141]

================================

Block 0x321
[0x321:0x32d]
---
Predecessors: [0x28a]
Successors: [0x32e, 0x332]
---
0x321 JUMPDEST
0x322 PUSH2 0x2c6
0x325 GAS
0x326 SUB
0x327 CALL
0x328 ISZERO
0x329 ISZERO
0x32a PUSH2 0x332
0x32d JUMPI
---
0x321: JUMPDEST 
0x322: V196 = 0x2c6
0x325: V197 = GAS
0x326: V198 = SUB V197 0x2c6
0x327: V199 = CALL V198 V141 0x0 V188 V189 V188 0x20
0x328: V200 = ISZERO V199
0x329: V201 = ISZERO V200
0x32a: V202 = 0x332
0x32d: JUMPI 0x332 V201
---
Entry stack: [V11, 0x168, V47, V62, V82, 0x0, S9, V141, 0xa9059cbb, V185, 0x20, V188, V189, V188, 0x0, V141]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x168, V47, V62, V82, 0x0, S9, V141, 0xa9059cbb, V185]

================================

Block 0x32e
[0x32e:0x331]
---
Predecessors: [0x321]
Successors: []
---
0x32e PUSH1 0x0
0x330 DUP1
0x331 REVERT
---
0x32e: V203 = 0x0
0x331: REVERT 0x0 0x0
---
Entry stack: [V11, 0x168, V47, V62, V82, 0x0, S3, V141, 0xa9059cbb, V185]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x168, V47, V62, V82, 0x0, S3, V141, 0xa9059cbb, V185]

================================

Block 0x332
[0x332:0x347]
---
Predecessors: [0x321]
Successors: [0x23f]
---
0x332 JUMPDEST
0x333 POP
0x334 POP
0x335 POP
0x336 PUSH1 0x40
0x338 MLOAD
0x339 DUP1
0x33a MLOAD
0x33b SWAP1
0x33c POP
0x33d POP
0x33e PUSH1 0x1
0x340 DUP2
0x341 ADD
0x342 SWAP1
0x343 POP
0x344 PUSH2 0x23f
0x347 JUMP
---
0x332: JUMPDEST 
0x336: V204 = 0x40
0x338: V205 = M[0x40]
0x33a: V206 = M[V205]
0x33e: V207 = 0x1
0x341: V208 = ADD S3 0x1
0x344: V209 = 0x23f
0x347: JUMP 0x23f
---
Entry stack: [V11, 0x168, V47, V62, V82, 0x0, S3, V141, 0xa9059cbb, V185]
Stack pops: 4
Stack additions: [V208]
Exit stack: [V11, 0x168, V47, V62, V82, 0x0, V208]

================================

Block 0x348
[0x348:0x352]
---
Predecessors: [0x23f]
Successors: [0x168]
---
0x348 JUMPDEST
0x349 DUP1
0x34a SWAP2
0x34b POP
0x34c POP
0x34d SWAP4
0x34e SWAP3
0x34f POP
0x350 POP
0x351 POP
0x352 JUMP
---
0x348: JUMPDEST 
0x352: JUMP 0x168
---
Entry stack: [V11, 0x168, V47, V62, V82, 0x0, S0]
Stack pops: 6
Stack additions: [S0]
Exit stack: [V11, S0]

================================

Block 0x353
[0x353:0x3a9]
---
Predecessors: [0x189]
Successors: [0x3aa, 0x3ae]
---
0x353 JUMPDEST
0x354 PUSH1 0x0
0x356 DUP1
0x357 SWAP1
0x358 SLOAD
0x359 SWAP1
0x35a PUSH2 0x100
0x35d EXP
0x35e SWAP1
0x35f DIV
0x360 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x375 AND
0x376 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x38b AND
0x38c CALLER
0x38d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a2 AND
0x3a3 EQ
0x3a4 ISZERO
0x3a5 ISZERO
0x3a6 PUSH2 0x3ae
0x3a9 JUMPI
---
0x353: JUMPDEST 
0x354: V210 = 0x0
0x358: V211 = S[0x0]
0x35a: V212 = 0x100
0x35d: V213 = EXP 0x100 0x0
0x35f: V214 = DIV V211 0x1
0x360: V215 = 0xffffffffffffffffffffffffffffffffffffffff
0x375: V216 = AND 0xffffffffffffffffffffffffffffffffffffffff V214
0x376: V217 = 0xffffffffffffffffffffffffffffffffffffffff
0x38b: V218 = AND 0xffffffffffffffffffffffffffffffffffffffff V216
0x38c: V219 = CALLER
0x38d: V220 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a2: V221 = AND 0xffffffffffffffffffffffffffffffffffffffff V219
0x3a3: V222 = EQ V221 V218
0x3a4: V223 = ISZERO V222
0x3a5: V224 = ISZERO V223
0x3a6: V225 = 0x3ae
0x3a9: JUMPI 0x3ae V224
---
Entry stack: [V11, 0x1b5, V106]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1b5, V106]

================================

Block 0x3aa
[0x3aa:0x3ad]
---
Predecessors: [0x353]
Successors: []
---
0x3aa PUSH1 0x0
0x3ac DUP1
0x3ad REVERT
---
0x3aa: V226 = 0x0
0x3ad: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1b5, V106]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1b5, V106]

================================

Block 0x3ae
[0x3ae:0x3e5]
---
Predecessors: [0x353]
Successors: [0x3e6, 0x3ea]
---
0x3ae JUMPDEST
0x3af PUSH1 0x0
0x3b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c6 AND
0x3c7 DUP2
0x3c8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3dd AND
0x3de EQ
0x3df ISZERO
0x3e0 ISZERO
0x3e1 ISZERO
0x3e2 PUSH2 0x3ea
0x3e5 JUMPI
---
0x3ae: JUMPDEST 
0x3af: V227 = 0x0
0x3b1: V228 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c6: V229 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x3c8: V230 = 0xffffffffffffffffffffffffffffffffffffffff
0x3dd: V231 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x3de: V232 = EQ V231 0x0
0x3df: V233 = ISZERO V232
0x3e0: V234 = ISZERO V233
0x3e1: V235 = ISZERO V234
0x3e2: V236 = 0x3ea
0x3e5: JUMPI 0x3ea V235
---
Entry stack: [V11, 0x1b5, V106]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x1b5, V106]

================================

Block 0x3e6
[0x3e6:0x3e9]
---
Predecessors: [0x3ae]
Successors: []
---
0x3e6 PUSH1 0x0
0x3e8 DUP1
0x3e9 REVERT
---
0x3e6: V237 = 0x0
0x3e9: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1b5, V106]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1b5, V106]

================================

Block 0x3ea
[0x3ea:0x4a7]
---
Predecessors: [0x3ae]
Successors: [0x1b5]
---
0x3ea JUMPDEST
0x3eb DUP1
0x3ec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x401 AND
0x402 PUSH1 0x0
0x404 DUP1
0x405 SWAP1
0x406 SLOAD
0x407 SWAP1
0x408 PUSH2 0x100
0x40b EXP
0x40c SWAP1
0x40d DIV
0x40e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x423 AND
0x424 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x439 AND
0x43a PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x45b PUSH1 0x40
0x45d MLOAD
0x45e PUSH1 0x40
0x460 MLOAD
0x461 DUP1
0x462 SWAP2
0x463 SUB
0x464 SWAP1
0x465 LOG3
0x466 DUP1
0x467 PUSH1 0x0
0x469 DUP1
0x46a PUSH2 0x100
0x46d EXP
0x46e DUP2
0x46f SLOAD
0x470 DUP2
0x471 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x486 MUL
0x487 NOT
0x488 AND
0x489 SWAP1
0x48a DUP4
0x48b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4a0 AND
0x4a1 MUL
0x4a2 OR
0x4a3 SWAP1
0x4a4 SSTORE
0x4a5 POP
0x4a6 POP
0x4a7 JUMP
---
0x3ea: JUMPDEST 
0x3ec: V238 = 0xffffffffffffffffffffffffffffffffffffffff
0x401: V239 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x402: V240 = 0x0
0x406: V241 = S[0x0]
0x408: V242 = 0x100
0x40b: V243 = EXP 0x100 0x0
0x40d: V244 = DIV V241 0x1
0x40e: V245 = 0xffffffffffffffffffffffffffffffffffffffff
0x423: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff V244
0x424: V247 = 0xffffffffffffffffffffffffffffffffffffffff
0x439: V248 = AND 0xffffffffffffffffffffffffffffffffffffffff V246
0x43a: V249 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x45b: V250 = 0x40
0x45d: V251 = M[0x40]
0x45e: V252 = 0x40
0x460: V253 = M[0x40]
0x463: V254 = SUB V251 V253
0x465: LOG V253 V254 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V248 V239
0x467: V255 = 0x0
0x46a: V256 = 0x100
0x46d: V257 = EXP 0x100 0x0
0x46f: V258 = S[0x0]
0x471: V259 = 0xffffffffffffffffffffffffffffffffffffffff
0x486: V260 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x487: V261 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x488: V262 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V258
0x48b: V263 = 0xffffffffffffffffffffffffffffffffffffffff
0x4a0: V264 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x4a1: V265 = MUL V264 0x1
0x4a2: V266 = OR V265 V262
0x4a4: S[0x0] = V266
0x4a7: JUMP 0x1b5
---
Entry stack: [V11, 0x1b5, V106]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x4a8
[0x4a8:0x4e0]
---
Predecessors: []
Successors: [0x4e1]
Has unresolved jump.
---
0x4a8 STOP
0x4a9 LOG1
0x4aa PUSH6 0x627a7a723058
0x4b1 SHA3
0x4b2 PUSH5 0xa5b6ac7d2
0x4b8 MISSING 0x23
0x4b9 DUP10
0x4ba MISSING 0xea
0x4bb MISSING 0xcc
0x4bc DUP10
0x4bd DUP8
0x4be MISSING 0xe8
0x4bf DUP2
0x4c0 MISSING 0xed
0x4c1 PUSH28 0x1fd7392e9dfb73099251b8676a00cf12002960606040526004361061
0x4de STOP
0x4df MISSING 0x4c
0x4e0 JUMPI
---
0x4a8: STOP 
0x4a9: LOG S0 S1 S2
0x4aa: V267 = 0x627a7a723058
0x4b1: V268 = SHA3 0x627a7a723058 S3
0x4b2: V269 = 0xa5b6ac7d2
0x4b8: MISSING 0x23
0x4ba: MISSING 0xea
0x4bb: MISSING 0xcc
0x4be: MISSING 0xe8
0x4c0: MISSING 0xed
0x4c1: V270 = 0x1fd7392e9dfb73099251b8676a00cf12002960606040526004361061
0x4de: STOP 
0x4df: MISSING 0x4c
0x4e0: JUMPI S0 S1
---
Entry stack: []
Stack pops: 0
Stack additions: [0xa5b6ac7d2, V268, S9, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S6, S9, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S1, S0, S1, 0x1fd7392e9dfb73099251b8676a00cf12002960606040526004361061]
Exit stack: []

================================

Block 0x4e1
[0x4e1:0x514]
---
Predecessors: [0x4a8]
Successors: [0x515]
---
0x4e1 PUSH1 0x0
0x4e3 CALLDATALOAD
0x4e4 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x502 SWAP1
0x503 DIV
0x504 PUSH4 0xffffffff
0x509 AND
0x50a DUP1
0x50b PUSH4 0x8da5cb5b
0x510 EQ
0x511 PUSH2 0x51
0x514 JUMPI
---
0x4e1: V271 = 0x0
0x4e3: V272 = CALLDATALOAD 0x0
0x4e4: V273 = 0x100000000000000000000000000000000000000000000000000000000
0x503: V274 = DIV V272 0x100000000000000000000000000000000000000000000000000000000
0x504: V275 = 0xffffffff
0x509: V276 = AND 0xffffffff V274
0x50b: V277 = 0x8da5cb5b
0x510: V278 = EQ 0x8da5cb5b V276
0x511: V279 = 0x51
0x514: THROWI V278
---
Entry stack: []
Stack pops: 0
Stack additions: [V276]
Exit stack: [V276]

================================

Block 0x515
[0x515:0x51f]
---
Predecessors: [0x4e1]
Successors: [0x520]
---
0x515 DUP1
0x516 PUSH4 0xf2fde38b
0x51b EQ
0x51c PUSH2 0xa6
0x51f JUMPI
---
0x516: V280 = 0xf2fde38b
0x51b: V281 = EQ 0xf2fde38b V276
0x51c: V282 = 0xa6
0x51f: THROWI V281
---
Entry stack: [V276]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V276]

================================

Block 0x520
[0x520:0x52b]
---
Predecessors: [0x515]
Successors: [0x5c, 0x52c]
---
0x520 JUMPDEST
0x521 PUSH1 0x0
0x523 DUP1
0x524 REVERT
0x525 JUMPDEST
0x526 CALLVALUE
0x527 ISZERO
0x528 PUSH2 0x5c
0x52b JUMPI
---
0x520: JUMPDEST 
0x521: V283 = 0x0
0x524: REVERT 0x0 0x0
0x525: JUMPDEST 
0x526: V284 = CALLVALUE
0x527: V285 = ISZERO V284
0x528: V286 = 0x5c
0x52b: JUMPI 0x5c V285
---
Entry stack: [V276]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x52c
[0x52c:0x580]
---
Predecessors: [0x520]
Successors: [0xb1, 0x581]
---
0x52c PUSH1 0x0
0x52e DUP1
0x52f REVERT
0x530 JUMPDEST
0x531 PUSH2 0x64
0x534 PUSH2 0xdf
0x537 JUMP
0x538 JUMPDEST
0x539 PUSH1 0x40
0x53b MLOAD
0x53c DUP1
0x53d DUP3
0x53e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x553 AND
0x554 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x569 AND
0x56a DUP2
0x56b MSTORE
0x56c PUSH1 0x20
0x56e ADD
0x56f SWAP2
0x570 POP
0x571 POP
0x572 PUSH1 0x40
0x574 MLOAD
0x575 DUP1
0x576 SWAP2
0x577 SUB
0x578 SWAP1
0x579 RETURN
0x57a JUMPDEST
0x57b CALLVALUE
0x57c ISZERO
0x57d PUSH2 0xb1
0x580 JUMPI
---
0x52c: V287 = 0x0
0x52f: REVERT 0x0 0x0
0x530: JUMPDEST 
0x531: V288 = 0x64
0x534: V289 = 0xdf
0x537: THROW 
0x538: JUMPDEST 
0x539: V290 = 0x40
0x53b: V291 = M[0x40]
0x53e: V292 = 0xffffffffffffffffffffffffffffffffffffffff
0x553: V293 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x554: V294 = 0xffffffffffffffffffffffffffffffffffffffff
0x569: V295 = AND 0xffffffffffffffffffffffffffffffffffffffff V293
0x56b: M[V291] = V295
0x56c: V296 = 0x20
0x56e: V297 = ADD 0x20 V291
0x572: V298 = 0x40
0x574: V299 = M[0x40]
0x577: V300 = SUB V297 V299
0x579: RETURN V299 V300
0x57a: JUMPDEST 
0x57b: V301 = CALLVALUE
0x57c: V302 = ISZERO V301
0x57d: V303 = 0xb1
0x580: JUMPI 0xb1 V302
---
Entry stack: []
Stack pops: 0
Stack additions: [0x64]
Exit stack: []

================================

Block 0x581
[0x581:0x62e]
---
Predecessors: [0x52c]
Successors: [0x62f]
---
0x581 PUSH1 0x0
0x583 DUP1
0x584 REVERT
0x585 JUMPDEST
0x586 PUSH2 0xdd
0x589 PUSH1 0x4
0x58b DUP1
0x58c DUP1
0x58d CALLDATALOAD
0x58e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5a3 AND
0x5a4 SWAP1
0x5a5 PUSH1 0x20
0x5a7 ADD
0x5a8 SWAP1
0x5a9 SWAP2
0x5aa SWAP1
0x5ab POP
0x5ac POP
0x5ad PUSH2 0x104
0x5b0 JUMP
0x5b1 JUMPDEST
0x5b2 STOP
0x5b3 JUMPDEST
0x5b4 PUSH1 0x0
0x5b6 DUP1
0x5b7 SWAP1
0x5b8 SLOAD
0x5b9 SWAP1
0x5ba PUSH2 0x100
0x5bd EXP
0x5be SWAP1
0x5bf DIV
0x5c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d5 AND
0x5d6 DUP2
0x5d7 JUMP
0x5d8 JUMPDEST
0x5d9 PUSH1 0x0
0x5db DUP1
0x5dc SWAP1
0x5dd SLOAD
0x5de SWAP1
0x5df PUSH2 0x100
0x5e2 EXP
0x5e3 SWAP1
0x5e4 DIV
0x5e5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5fa AND
0x5fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x610 AND
0x611 CALLER
0x612 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x627 AND
0x628 EQ
0x629 ISZERO
0x62a ISZERO
0x62b PUSH2 0x15f
0x62e JUMPI
---
0x581: V304 = 0x0
0x584: REVERT 0x0 0x0
0x585: JUMPDEST 
0x586: V305 = 0xdd
0x589: V306 = 0x4
0x58d: V307 = CALLDATALOAD 0x4
0x58e: V308 = 0xffffffffffffffffffffffffffffffffffffffff
0x5a3: V309 = AND 0xffffffffffffffffffffffffffffffffffffffff V307
0x5a5: V310 = 0x20
0x5a7: V311 = ADD 0x20 0x4
0x5ad: V312 = 0x104
0x5b0: THROW 
0x5b1: JUMPDEST 
0x5b2: STOP 
0x5b3: JUMPDEST 
0x5b4: V313 = 0x0
0x5b8: V314 = S[0x0]
0x5ba: V315 = 0x100
0x5bd: V316 = EXP 0x100 0x0
0x5bf: V317 = DIV V314 0x1
0x5c0: V318 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d5: V319 = AND 0xffffffffffffffffffffffffffffffffffffffff V317
0x5d7: JUMP S0
0x5d8: JUMPDEST 
0x5d9: V320 = 0x0
0x5dd: V321 = S[0x0]
0x5df: V322 = 0x100
0x5e2: V323 = EXP 0x100 0x0
0x5e4: V324 = DIV V321 0x1
0x5e5: V325 = 0xffffffffffffffffffffffffffffffffffffffff
0x5fa: V326 = AND 0xffffffffffffffffffffffffffffffffffffffff V324
0x5fb: V327 = 0xffffffffffffffffffffffffffffffffffffffff
0x610: V328 = AND 0xffffffffffffffffffffffffffffffffffffffff V326
0x611: V329 = CALLER
0x612: V330 = 0xffffffffffffffffffffffffffffffffffffffff
0x627: V331 = AND 0xffffffffffffffffffffffffffffffffffffffff V329
0x628: V332 = EQ V331 V328
0x629: V333 = ISZERO V332
0x62a: V334 = ISZERO V333
0x62b: V335 = 0x15f
0x62e: THROWI V334
---
Entry stack: []
Stack pops: 0
Stack additions: [V309, 0xdd, V319, S0]
Exit stack: []

================================

Block 0x62f
[0x62f:0x66a]
---
Predecessors: [0x581]
Successors: [0x66b]
---
0x62f PUSH1 0x0
0x631 DUP1
0x632 REVERT
0x633 JUMPDEST
0x634 PUSH1 0x0
0x636 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x64b AND
0x64c DUP2
0x64d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x662 AND
0x663 EQ
0x664 ISZERO
0x665 ISZERO
0x666 ISZERO
0x667 PUSH2 0x19b
0x66a JUMPI
---
0x62f: V336 = 0x0
0x632: REVERT 0x0 0x0
0x633: JUMPDEST 
0x634: V337 = 0x0
0x636: V338 = 0xffffffffffffffffffffffffffffffffffffffff
0x64b: V339 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x64d: V340 = 0xffffffffffffffffffffffffffffffffffffffff
0x662: V341 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x663: V342 = EQ V341 0x0
0x664: V343 = ISZERO V342
0x665: V344 = ISZERO V343
0x666: V345 = ISZERO V344
0x667: V346 = 0x19b
0x66a: THROWI V345
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x66b
[0x66b:0x758]
---
Predecessors: [0x62f]
Successors: []
---
0x66b PUSH1 0x0
0x66d DUP1
0x66e REVERT
0x66f JUMPDEST
0x670 DUP1
0x671 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x686 AND
0x687 PUSH1 0x0
0x689 DUP1
0x68a SWAP1
0x68b SLOAD
0x68c SWAP1
0x68d PUSH2 0x100
0x690 EXP
0x691 SWAP1
0x692 DIV
0x693 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a8 AND
0x6a9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6be AND
0x6bf PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x6e0 PUSH1 0x40
0x6e2 MLOAD
0x6e3 PUSH1 0x40
0x6e5 MLOAD
0x6e6 DUP1
0x6e7 SWAP2
0x6e8 SUB
0x6e9 SWAP1
0x6ea LOG3
0x6eb DUP1
0x6ec PUSH1 0x0
0x6ee DUP1
0x6ef PUSH2 0x100
0x6f2 EXP
0x6f3 DUP2
0x6f4 SLOAD
0x6f5 DUP2
0x6f6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x70b MUL
0x70c NOT
0x70d AND
0x70e SWAP1
0x70f DUP4
0x710 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x725 AND
0x726 MUL
0x727 OR
0x728 SWAP1
0x729 SSTORE
0x72a POP
0x72b POP
0x72c JUMP
0x72d STOP
0x72e LOG1
0x72f PUSH6 0x627a7a723058
0x736 SHA3
0x737 MISSING 0xe1
0x738 MISSING 0x2b
0x739 PUSH30 0x8cde4c6e27bb17b79a3397aa42489abb59edcd09135a6fcc716dc215e300
0x758 MISSING 0x29
---
0x66b: V347 = 0x0
0x66e: REVERT 0x0 0x0
0x66f: JUMPDEST 
0x671: V348 = 0xffffffffffffffffffffffffffffffffffffffff
0x686: V349 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x687: V350 = 0x0
0x68b: V351 = S[0x0]
0x68d: V352 = 0x100
0x690: V353 = EXP 0x100 0x0
0x692: V354 = DIV V351 0x1
0x693: V355 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a8: V356 = AND 0xffffffffffffffffffffffffffffffffffffffff V354
0x6a9: V357 = 0xffffffffffffffffffffffffffffffffffffffff
0x6be: V358 = AND 0xffffffffffffffffffffffffffffffffffffffff V356
0x6bf: V359 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x6e0: V360 = 0x40
0x6e2: V361 = M[0x40]
0x6e3: V362 = 0x40
0x6e5: V363 = M[0x40]
0x6e8: V364 = SUB V361 V363
0x6ea: LOG V363 V364 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V358 V349
0x6ec: V365 = 0x0
0x6ef: V366 = 0x100
0x6f2: V367 = EXP 0x100 0x0
0x6f4: V368 = S[0x0]
0x6f6: V369 = 0xffffffffffffffffffffffffffffffffffffffff
0x70b: V370 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x70c: V371 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x70d: V372 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V368
0x710: V373 = 0xffffffffffffffffffffffffffffffffffffffff
0x725: V374 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x726: V375 = MUL V374 0x1
0x727: V376 = OR V375 V372
0x729: S[0x0] = V376
0x72c: JUMP S1
0x72d: STOP 
0x72e: LOG S0 S1 S2
0x72f: V377 = 0x627a7a723058
0x736: V378 = SHA3 0x627a7a723058 S3
0x737: MISSING 0xe1
0x738: MISSING 0x2b
0x739: V379 = 0x8cde4c6e27bb17b79a3397aa42489abb59edcd09135a6fcc716dc215e300
0x758: MISSING 0x29
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [V378, 0x8cde4c6e27bb17b79a3397aa42489abb59edcd09135a6fcc716dc215e300]
Exit stack: []

================================

Function 0:
Public function signature: 0x8da5cb5b
Entry block: 0x5c
Exit block: 0x6f
Body: 0x5c, 0x63, 0x67, 0x6f, 0x1b7

Function 1:
Public function signature: 0xad8733ca
Entry block: 0xb1
Exit block: 0x32e
Body: 0xb1, 0xb8, 0xbc, 0x168, 0x1dc, 0x236, 0x23a, 0x23f, 0x249, 0x271, 0x272, 0x289, 0x28a, 0x31d, 0x321, 0x32e, 0x332, 0x348

Function 2:
Public function signature: 0xf2fde38b
Entry block: 0x17e
Exit block: 0x1b5
Body: 0x17e, 0x185, 0x189, 0x1b5, 0x353, 0x3aa, 0x3ae, 0x3e6, 0x3ea

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

