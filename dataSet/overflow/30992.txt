Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x76]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x76
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x76
0xa: JUMPI 0x76 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x7b]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x12065fe0
0x3a EQ
0x3b PUSH2 0x7b
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x12065fe0
0x3a: V12 = EQ 0x12065fe0 V10
0x3b: V13 = 0x7b
0x3e: JUMPI 0x7b V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0xa4]
---
0x3f DUP1
0x40 PUSH4 0x1c4261f4
0x45 EQ
0x46 PUSH2 0xa4
0x49 JUMPI
---
0x40: V14 = 0x1c4261f4
0x45: V15 = EQ 0x1c4261f4 V10
0x46: V16 = 0xa4
0x49: JUMPI 0xa4 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0xc0]
---
0x4a DUP1
0x4b PUSH4 0x6994a62b
0x50 EQ
0x51 PUSH2 0xc0
0x54 JUMPI
---
0x4b: V17 = 0x6994a62b
0x50: V18 = EQ 0x6994a62b V10
0x51: V19 = 0xc0
0x54: JUMPI 0xc0 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0xff]
---
0x55 DUP1
0x56 PUSH4 0x8da5cb5b
0x5b EQ
0x5c PUSH2 0xff
0x5f JUMPI
---
0x56: V20 = 0x8da5cb5b
0x5b: V21 = EQ 0x8da5cb5b V10
0x5c: V22 = 0xff
0x5f: JUMPI 0xff V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x154]
---
0x60 DUP1
0x61 PUSH4 0xb41960d4
0x66 EQ
0x67 PUSH2 0x154
0x6a JUMPI
---
0x61: V23 = 0xb41960d4
0x66: V24 = EQ 0xb41960d4 V10
0x67: V25 = 0x154
0x6a: JUMPI 0x154 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x60]
Successors: [0x76, 0x1e4]
---
0x6b DUP1
0x6c PUSH4 0xdb6be871
0x71 EQ
0x72 PUSH2 0x1e4
0x75 JUMPI
---
0x6c: V26 = 0xdb6be871
0x71: V27 = EQ 0xdb6be871 V10
0x72: V28 = 0x1e4
0x75: JUMPI 0x1e4 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x76
[0x76:0x7a]
---
Predecessors: [0x0, 0x6b]
Successors: []
---
0x76 JUMPDEST
0x77 PUSH1 0x0
0x79 DUP1
0x7a REVERT
---
0x76: JUMPDEST 
0x77: V29 = 0x0
0x7a: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x7b
[0x7b:0x81]
---
Predecessors: [0xb]
Successors: [0x82, 0x86]
---
0x7b JUMPDEST
0x7c CALLVALUE
0x7d ISZERO
0x7e PUSH2 0x86
0x81 JUMPI
---
0x7b: JUMPDEST 
0x7c: V30 = CALLVALUE
0x7d: V31 = ISZERO V30
0x7e: V32 = 0x86
0x81: JUMPI 0x86 V31
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x82
[0x82:0x85]
---
Predecessors: [0x7b]
Successors: []
---
0x82 PUSH1 0x0
0x84 DUP1
0x85 REVERT
---
0x82: V33 = 0x0
0x85: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x86
[0x86:0x8d]
---
Predecessors: [0x7b]
Successors: [0x21f]
---
0x86 JUMPDEST
0x87 PUSH2 0x8e
0x8a PUSH2 0x21f
0x8d JUMP
---
0x86: JUMPDEST 
0x87: V34 = 0x8e
0x8a: V35 = 0x21f
0x8d: JUMP 0x21f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x8e]
Exit stack: [V10, 0x8e]

================================

Block 0x8e
[0x8e:0xa3]
---
Predecessors: [0x21f]
Successors: []
---
0x8e JUMPDEST
0x8f PUSH1 0x40
0x91 MLOAD
0x92 DUP1
0x93 DUP3
0x94 DUP2
0x95 MSTORE
0x96 PUSH1 0x20
0x98 ADD
0x99 SWAP2
0x9a POP
0x9b POP
0x9c PUSH1 0x40
0x9e MLOAD
0x9f DUP1
0xa0 SWAP2
0xa1 SUB
0xa2 SWAP1
0xa3 RETURN
---
0x8e: JUMPDEST 
0x8f: V36 = 0x40
0x91: V37 = M[0x40]
0x95: M[V37] = V157
0x96: V38 = 0x20
0x98: V39 = ADD 0x20 V37
0x9c: V40 = 0x40
0x9e: V41 = M[0x40]
0xa1: V42 = SUB V39 V41
0xa3: RETURN V41 V42
---
Entry stack: [V10, V157]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xa4
[0xa4:0xbd]
---
Predecessors: [0x3f]
Successors: [0x23e]
---
0xa4 JUMPDEST
0xa5 PUSH2 0xbe
0xa8 PUSH1 0x4
0xaa DUP1
0xab DUP1
0xac CALLDATALOAD
0xad PUSH1 0x0
0xaf NOT
0xb0 AND
0xb1 SWAP1
0xb2 PUSH1 0x20
0xb4 ADD
0xb5 SWAP1
0xb6 SWAP2
0xb7 SWAP1
0xb8 POP
0xb9 POP
0xba PUSH2 0x23e
0xbd JUMP
---
0xa4: JUMPDEST 
0xa5: V43 = 0xbe
0xa8: V44 = 0x4
0xac: V45 = CALLDATALOAD 0x4
0xad: V46 = 0x0
0xaf: V47 = NOT 0x0
0xb0: V48 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V45
0xb2: V49 = 0x20
0xb4: V50 = ADD 0x20 0x4
0xba: V51 = 0x23e
0xbd: JUMP 0x23e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xbe, V48]
Exit stack: [V10, 0xbe, V48]

================================

Block 0xbe
[0xbe:0xbf]
---
Predecessors: [0x356]
Successors: []
---
0xbe JUMPDEST
0xbf STOP
---
0xbe: JUMPDEST 
0xbf: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xc0
[0xc0:0xc6]
---
Predecessors: [0x4a]
Successors: [0xc7, 0xcb]
---
0xc0 JUMPDEST
0xc1 CALLVALUE
0xc2 ISZERO
0xc3 PUSH2 0xcb
0xc6 JUMPI
---
0xc0: JUMPDEST 
0xc1: V52 = CALLVALUE
0xc2: V53 = ISZERO V52
0xc3: V54 = 0xcb
0xc6: JUMPI 0xcb V53
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xc7
[0xc7:0xca]
---
Predecessors: [0xc0]
Successors: []
---
0xc7 PUSH1 0x0
0xc9 DUP1
0xca REVERT
---
0xc7: V55 = 0x0
0xca: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xcb
[0xcb:0xe4]
---
Predecessors: [0xc0]
Successors: [0x35b]
---
0xcb JUMPDEST
0xcc PUSH2 0xe5
0xcf PUSH1 0x4
0xd1 DUP1
0xd2 DUP1
0xd3 CALLDATALOAD
0xd4 PUSH1 0x0
0xd6 NOT
0xd7 AND
0xd8 SWAP1
0xd9 PUSH1 0x20
0xdb ADD
0xdc SWAP1
0xdd SWAP2
0xde SWAP1
0xdf POP
0xe0 POP
0xe1 PUSH2 0x35b
0xe4 JUMP
---
0xcb: JUMPDEST 
0xcc: V56 = 0xe5
0xcf: V57 = 0x4
0xd3: V58 = CALLDATALOAD 0x4
0xd4: V59 = 0x0
0xd6: V60 = NOT 0x0
0xd7: V61 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V58
0xd9: V62 = 0x20
0xdb: V63 = ADD 0x20 0x4
0xe1: V64 = 0x35b
0xe4: JUMP 0x35b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xe5, V61]
Exit stack: [V10, 0xe5, V61]

================================

Block 0xe5
[0xe5:0xfe]
---
Predecessors: [0x35b]
Successors: []
---
0xe5 JUMPDEST
0xe6 PUSH1 0x40
0xe8 MLOAD
0xe9 DUP1
0xea DUP3
0xeb ISZERO
0xec ISZERO
0xed ISZERO
0xee ISZERO
0xef DUP2
0xf0 MSTORE
0xf1 PUSH1 0x20
0xf3 ADD
0xf4 SWAP2
0xf5 POP
0xf6 POP
0xf7 PUSH1 0x40
0xf9 MLOAD
0xfa DUP1
0xfb SWAP2
0xfc SUB
0xfd SWAP1
0xfe RETURN
---
0xe5: JUMPDEST 
0xe6: V65 = 0x40
0xe8: V66 = M[0x40]
0xeb: V67 = ISZERO V271
0xec: V68 = ISZERO V67
0xed: V69 = ISZERO V68
0xee: V70 = ISZERO V69
0xf0: M[V66] = V70
0xf1: V71 = 0x20
0xf3: V72 = ADD 0x20 V66
0xf7: V73 = 0x40
0xf9: V74 = M[0x40]
0xfc: V75 = SUB V72 V74
0xfe: RETURN V74 V75
---
Entry stack: [V10, V271]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xff
[0xff:0x105]
---
Predecessors: [0x55]
Successors: [0x106, 0x10a]
---
0xff JUMPDEST
0x100 CALLVALUE
0x101 ISZERO
0x102 PUSH2 0x10a
0x105 JUMPI
---
0xff: JUMPDEST 
0x100: V76 = CALLVALUE
0x101: V77 = ISZERO V76
0x102: V78 = 0x10a
0x105: JUMPI 0x10a V77
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x106
[0x106:0x109]
---
Predecessors: [0xff]
Successors: []
---
0x106 PUSH1 0x0
0x108 DUP1
0x109 REVERT
---
0x106: V79 = 0x0
0x109: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x10a
[0x10a:0x111]
---
Predecessors: [0xff]
Successors: [0x390]
---
0x10a JUMPDEST
0x10b PUSH2 0x112
0x10e PUSH2 0x390
0x111 JUMP
---
0x10a: JUMPDEST 
0x10b: V80 = 0x112
0x10e: V81 = 0x390
0x111: JUMP 0x390
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x112]
Exit stack: [V10, 0x112]

================================

Block 0x112
[0x112:0x153]
---
Predecessors: [0x390]
Successors: []
---
0x112 JUMPDEST
0x113 PUSH1 0x40
0x115 MLOAD
0x116 DUP1
0x117 DUP3
0x118 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12d AND
0x12e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x143 AND
0x144 DUP2
0x145 MSTORE
0x146 PUSH1 0x20
0x148 ADD
0x149 SWAP2
0x14a POP
0x14b POP
0x14c PUSH1 0x40
0x14e MLOAD
0x14f DUP1
0x150 SWAP2
0x151 SUB
0x152 SWAP1
0x153 RETURN
---
0x112: JUMPDEST 
0x113: V82 = 0x40
0x115: V83 = M[0x40]
0x118: V84 = 0xffffffffffffffffffffffffffffffffffffffff
0x12d: V85 = AND 0xffffffffffffffffffffffffffffffffffffffff V278
0x12e: V86 = 0xffffffffffffffffffffffffffffffffffffffff
0x143: V87 = AND 0xffffffffffffffffffffffffffffffffffffffff V85
0x145: M[V83] = V87
0x146: V88 = 0x20
0x148: V89 = ADD 0x20 V83
0x14c: V90 = 0x40
0x14e: V91 = M[0x40]
0x151: V92 = SUB V89 V91
0x153: RETURN V91 V92
---
Entry stack: [V10, 0x112, V278]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x112]

================================

Block 0x154
[0x154:0x15a]
---
Predecessors: [0x60]
Successors: [0x15b, 0x15f]
---
0x154 JUMPDEST
0x155 CALLVALUE
0x156 ISZERO
0x157 PUSH2 0x15f
0x15a JUMPI
---
0x154: JUMPDEST 
0x155: V93 = CALLVALUE
0x156: V94 = ISZERO V93
0x157: V95 = 0x15f
0x15a: JUMPI 0x15f V94
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x15b
[0x15b:0x15e]
---
Predecessors: [0x154]
Successors: []
---
0x15b PUSH1 0x0
0x15d DUP1
0x15e REVERT
---
0x15b: V96 = 0x0
0x15e: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x15f
[0x15f:0x1cd]
---
Predecessors: [0x154]
Successors: [0x3b5]
---
0x15f JUMPDEST
0x160 PUSH2 0x1ce
0x163 PUSH1 0x4
0x165 DUP1
0x166 DUP1
0x167 CALLDATALOAD
0x168 SWAP1
0x169 PUSH1 0x20
0x16b ADD
0x16c SWAP1
0x16d DUP3
0x16e ADD
0x16f DUP1
0x170 CALLDATALOAD
0x171 SWAP1
0x172 PUSH1 0x20
0x174 ADD
0x175 SWAP1
0x176 DUP1
0x177 DUP1
0x178 PUSH1 0x1f
0x17a ADD
0x17b PUSH1 0x20
0x17d DUP1
0x17e SWAP2
0x17f DIV
0x180 MUL
0x181 PUSH1 0x20
0x183 ADD
0x184 PUSH1 0x40
0x186 MLOAD
0x187 SWAP1
0x188 DUP2
0x189 ADD
0x18a PUSH1 0x40
0x18c MSTORE
0x18d DUP1
0x18e SWAP4
0x18f SWAP3
0x190 SWAP2
0x191 SWAP1
0x192 DUP2
0x193 DUP2
0x194 MSTORE
0x195 PUSH1 0x20
0x197 ADD
0x198 DUP4
0x199 DUP4
0x19a DUP1
0x19b DUP3
0x19c DUP5
0x19d CALLDATACOPY
0x19e DUP3
0x19f ADD
0x1a0 SWAP2
0x1a1 POP
0x1a2 POP
0x1a3 POP
0x1a4 POP
0x1a5 POP
0x1a6 POP
0x1a7 SWAP2
0x1a8 SWAP1
0x1a9 DUP1
0x1aa CALLDATALOAD
0x1ab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c0 AND
0x1c1 SWAP1
0x1c2 PUSH1 0x20
0x1c4 ADD
0x1c5 SWAP1
0x1c6 SWAP2
0x1c7 SWAP1
0x1c8 POP
0x1c9 POP
0x1ca PUSH2 0x3b5
0x1cd JUMP
---
0x15f: JUMPDEST 
0x160: V97 = 0x1ce
0x163: V98 = 0x4
0x167: V99 = CALLDATALOAD 0x4
0x169: V100 = 0x20
0x16b: V101 = ADD 0x20 0x4
0x16e: V102 = ADD 0x4 V99
0x170: V103 = CALLDATALOAD V102
0x172: V104 = 0x20
0x174: V105 = ADD 0x20 V102
0x178: V106 = 0x1f
0x17a: V107 = ADD 0x1f V103
0x17b: V108 = 0x20
0x17f: V109 = DIV V107 0x20
0x180: V110 = MUL V109 0x20
0x181: V111 = 0x20
0x183: V112 = ADD 0x20 V110
0x184: V113 = 0x40
0x186: V114 = M[0x40]
0x189: V115 = ADD V114 V112
0x18a: V116 = 0x40
0x18c: M[0x40] = V115
0x194: M[V114] = V103
0x195: V117 = 0x20
0x197: V118 = ADD 0x20 V114
0x19d: CALLDATACOPY V118 V105 V103
0x19f: V119 = ADD V118 V103
0x1aa: V120 = CALLDATALOAD 0x24
0x1ab: V121 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c0: V122 = AND 0xffffffffffffffffffffffffffffffffffffffff V120
0x1c2: V123 = 0x20
0x1c4: V124 = ADD 0x20 0x24
0x1ca: V125 = 0x3b5
0x1cd: JUMP 0x3b5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1ce, V114, V122]
Exit stack: [V10, 0x1ce, V114, V122]

================================

Block 0x1ce
[0x1ce:0x1e3]
---
Predecessors: [0x4d5]
Successors: []
---
0x1ce JUMPDEST
0x1cf PUSH1 0x40
0x1d1 MLOAD
0x1d2 DUP1
0x1d3 DUP3
0x1d4 DUP2
0x1d5 MSTORE
0x1d6 PUSH1 0x20
0x1d8 ADD
0x1d9 SWAP2
0x1da POP
0x1db POP
0x1dc PUSH1 0x40
0x1de MLOAD
0x1df DUP1
0x1e0 SWAP2
0x1e1 SUB
0x1e2 SWAP1
0x1e3 RETURN
---
0x1ce: JUMPDEST 
0x1cf: V126 = 0x40
0x1d1: V127 = M[0x40]
0x1d5: M[V127] = S0
0x1d6: V128 = 0x20
0x1d8: V129 = ADD 0x20 V127
0x1dc: V130 = 0x40
0x1de: V131 = M[0x40]
0x1e1: V132 = SUB V129 V131
0x1e3: RETURN V131 V132
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x1e4
[0x1e4:0x1ea]
---
Predecessors: [0x6b]
Successors: [0x1eb, 0x1ef]
---
0x1e4 JUMPDEST
0x1e5 CALLVALUE
0x1e6 ISZERO
0x1e7 PUSH2 0x1ef
0x1ea JUMPI
---
0x1e4: JUMPDEST 
0x1e5: V133 = CALLVALUE
0x1e6: V134 = ISZERO V133
0x1e7: V135 = 0x1ef
0x1ea: JUMPI 0x1ef V134
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1eb
[0x1eb:0x1ee]
---
Predecessors: [0x1e4]
Successors: []
---
0x1eb PUSH1 0x0
0x1ed DUP1
0x1ee REVERT
---
0x1eb: V136 = 0x0
0x1ee: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ef
[0x1ef:0x208]
---
Predecessors: [0x1e4]
Successors: [0x4de]
---
0x1ef JUMPDEST
0x1f0 PUSH2 0x209
0x1f3 PUSH1 0x4
0x1f5 DUP1
0x1f6 DUP1
0x1f7 CALLDATALOAD
0x1f8 PUSH1 0x0
0x1fa NOT
0x1fb AND
0x1fc SWAP1
0x1fd PUSH1 0x20
0x1ff ADD
0x200 SWAP1
0x201 SWAP2
0x202 SWAP1
0x203 POP
0x204 POP
0x205 PUSH2 0x4de
0x208 JUMP
---
0x1ef: JUMPDEST 
0x1f0: V137 = 0x209
0x1f3: V138 = 0x4
0x1f7: V139 = CALLDATALOAD 0x4
0x1f8: V140 = 0x0
0x1fa: V141 = NOT 0x0
0x1fb: V142 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V139
0x1fd: V143 = 0x20
0x1ff: V144 = ADD 0x20 0x4
0x205: V145 = 0x4de
0x208: JUMP 0x4de
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x209, V142]
Exit stack: [V10, 0x209, V142]

================================

Block 0x209
[0x209:0x21e]
---
Predecessors: [0x4de]
Successors: []
---
0x209 JUMPDEST
0x20a PUSH1 0x40
0x20c MLOAD
0x20d DUP1
0x20e DUP3
0x20f DUP2
0x210 MSTORE
0x211 PUSH1 0x20
0x213 ADD
0x214 SWAP2
0x215 POP
0x216 POP
0x217 PUSH1 0x40
0x219 MLOAD
0x21a DUP1
0x21b SWAP2
0x21c SUB
0x21d SWAP1
0x21e RETURN
---
0x209: JUMPDEST 
0x20a: V146 = 0x40
0x20c: V147 = M[0x40]
0x210: M[V147] = V401
0x211: V148 = 0x20
0x213: V149 = ADD 0x20 V147
0x217: V150 = 0x40
0x219: V151 = M[0x40]
0x21c: V152 = SUB V149 V151
0x21e: RETURN V151 V152
---
Entry stack: [V10, V401]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x21f
[0x21f:0x23d]
---
Predecessors: [0x86]
Successors: [0x8e]
---
0x21f JUMPDEST
0x220 PUSH1 0x0
0x222 ADDRESS
0x223 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x238 AND
0x239 BALANCE
0x23a SWAP1
0x23b POP
0x23c SWAP1
0x23d JUMP
---
0x21f: JUMPDEST 
0x220: V153 = 0x0
0x222: V154 = ADDRESS
0x223: V155 = 0xffffffffffffffffffffffffffffffffffffffff
0x238: V156 = AND 0xffffffffffffffffffffffffffffffffffffffff V154
0x239: V157 = BALANCE V156
0x23d: JUMP 0x8e
---
Entry stack: [V10, 0x8e]
Stack pops: 1
Stack additions: [V157]
Exit stack: [V10, V157]

================================

Block 0x23e
[0x23e:0x24e]
---
Predecessors: [0xa4]
Successors: [0x24f, 0x253]
---
0x23e JUMPDEST
0x23f PUSH1 0x0
0x241 DUP1
0x242 PUSH1 0x1
0x244 PUSH2 0x3e8
0x247 CALLVALUE
0x248 MUL
0x249 LT
0x24a ISZERO
0x24b PUSH2 0x253
0x24e JUMPI
---
0x23e: JUMPDEST 
0x23f: V158 = 0x0
0x242: V159 = 0x1
0x244: V160 = 0x3e8
0x247: V161 = CALLVALUE
0x248: V162 = MUL V161 0x3e8
0x249: V163 = LT V162 0x1
0x24a: V164 = ISZERO V163
0x24b: V165 = 0x253
0x24e: JUMPI 0x253 V164
---
Entry stack: [V10, 0xbe, V48]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V10, 0xbe, V48, 0x0, 0x0]

================================

Block 0x24f
[0x24f:0x252]
---
Predecessors: [0x23e]
Successors: [0x356]
---
0x24f PUSH2 0x356
0x252 JUMP
---
0x24f: V166 = 0x356
0x252: JUMP 0x356
---
Entry stack: [V10, 0xbe, V48, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xbe, V48, 0x0, 0x0]

================================

Block 0x253
[0x253:0x25e]
---
Predecessors: [0x23e]
Successors: [0x25f, 0x260]
---
0x253 JUMPDEST
0x254 PUSH1 0x2
0x256 SLOAD
0x257 CALLVALUE
0x258 DUP2
0x259 ISZERO
0x25a ISZERO
0x25b PUSH2 0x260
0x25e JUMPI
---
0x253: JUMPDEST 
0x254: V167 = 0x2
0x256: V168 = S[0x2]
0x257: V169 = CALLVALUE
0x259: V170 = ISZERO V168
0x25a: V171 = ISZERO V170
0x25b: V172 = 0x260
0x25e: JUMPI 0x260 V171
---
Entry stack: [V10, 0xbe, V48, 0x0, 0x0]
Stack pops: 0
Stack additions: [V168, V169]
Exit stack: [V10, 0xbe, V48, 0x0, 0x0, V168, V169]

================================

Block 0x25f
[0x25f:0x25f]
---
Predecessors: [0x253]
Successors: []
---
0x25f INVALID
---
0x25f: INVALID 
---
Entry stack: [V10, 0xbe, V48, 0x0, 0x0, V168, V169]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xbe, V48, 0x0, 0x0, V168, V169]

================================

Block 0x260
[0x260:0x350]
---
Predecessors: [0x253]
Successors: [0x351, 0x355]
---
0x260 JUMPDEST
0x261 DIV
0x262 SWAP2
0x263 POP
0x264 PUSH1 0x1
0x266 PUSH1 0x0
0x268 DUP5
0x269 PUSH1 0x0
0x26b NOT
0x26c AND
0x26d PUSH1 0x0
0x26f NOT
0x270 AND
0x271 DUP2
0x272 MSTORE
0x273 PUSH1 0x20
0x275 ADD
0x276 SWAP1
0x277 DUP2
0x278 MSTORE
0x279 PUSH1 0x20
0x27b ADD
0x27c PUSH1 0x0
0x27e SHA3
0x27f SWAP1
0x280 POP
0x281 CALLVALUE
0x282 DUP2
0x283 PUSH1 0x0
0x285 ADD
0x286 DUP2
0x287 SWAP1
0x288 SSTORE
0x289 POP
0x28a DUP2
0x28b CALLVALUE
0x28c SUB
0x28d DUP2
0x28e PUSH1 0x1
0x290 ADD
0x291 DUP2
0x292 SWAP1
0x293 SSTORE
0x294 POP
0x295 CALLER
0x296 DUP2
0x297 PUSH1 0x2
0x299 ADD
0x29a PUSH1 0x1
0x29c PUSH2 0x100
0x29f EXP
0x2a0 DUP2
0x2a1 SLOAD
0x2a2 DUP2
0x2a3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b8 MUL
0x2b9 NOT
0x2ba AND
0x2bb SWAP1
0x2bc DUP4
0x2bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d2 AND
0x2d3 MUL
0x2d4 OR
0x2d5 SWAP1
0x2d6 SSTORE
0x2d7 POP
0x2d8 PUSH1 0x0
0x2da DUP2
0x2db PUSH1 0x2
0x2dd ADD
0x2de PUSH1 0x0
0x2e0 PUSH2 0x100
0x2e3 EXP
0x2e4 DUP2
0x2e5 SLOAD
0x2e6 DUP2
0x2e7 PUSH1 0xff
0x2e9 MUL
0x2ea NOT
0x2eb AND
0x2ec SWAP1
0x2ed DUP4
0x2ee ISZERO
0x2ef ISZERO
0x2f0 MUL
0x2f1 OR
0x2f2 SWAP1
0x2f3 SSTORE
0x2f4 POP
0x2f5 PUSH1 0x0
0x2f7 DUP1
0x2f8 SWAP1
0x2f9 SLOAD
0x2fa SWAP1
0x2fb PUSH2 0x100
0x2fe EXP
0x2ff SWAP1
0x300 DIV
0x301 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x316 AND
0x317 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x32c AND
0x32d PUSH2 0x8fc
0x330 DUP4
0x331 SWAP1
0x332 DUP2
0x333 ISZERO
0x334 MUL
0x335 SWAP1
0x336 PUSH1 0x40
0x338 MLOAD
0x339 PUSH1 0x0
0x33b PUSH1 0x40
0x33d MLOAD
0x33e DUP1
0x33f DUP4
0x340 SUB
0x341 DUP2
0x342 DUP6
0x343 DUP9
0x344 DUP9
0x345 CALL
0x346 SWAP4
0x347 POP
0x348 POP
0x349 POP
0x34a POP
0x34b ISZERO
0x34c ISZERO
0x34d PUSH2 0x355
0x350 JUMPI
---
0x260: JUMPDEST 
0x261: V173 = DIV V169 V168
0x264: V174 = 0x1
0x266: V175 = 0x0
0x269: V176 = 0x0
0x26b: V177 = NOT 0x0
0x26c: V178 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V48
0x26d: V179 = 0x0
0x26f: V180 = NOT 0x0
0x270: V181 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V178
0x272: M[0x0] = V181
0x273: V182 = 0x20
0x275: V183 = ADD 0x20 0x0
0x278: M[0x20] = 0x1
0x279: V184 = 0x20
0x27b: V185 = ADD 0x20 0x20
0x27c: V186 = 0x0
0x27e: V187 = SHA3 0x0 0x40
0x281: V188 = CALLVALUE
0x283: V189 = 0x0
0x285: V190 = ADD 0x0 V187
0x288: S[V190] = V188
0x28b: V191 = CALLVALUE
0x28c: V192 = SUB V191 V173
0x28e: V193 = 0x1
0x290: V194 = ADD 0x1 V187
0x293: S[V194] = V192
0x295: V195 = CALLER
0x297: V196 = 0x2
0x299: V197 = ADD 0x2 V187
0x29a: V198 = 0x1
0x29c: V199 = 0x100
0x29f: V200 = EXP 0x100 0x1
0x2a1: V201 = S[V197]
0x2a3: V202 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b8: V203 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x100
0x2b9: V204 = NOT 0xffffffffffffffffffffffffffffffffffffffff00
0x2ba: V205 = AND 0xffffffffffffffffffffff0000000000000000000000000000000000000000ff V201
0x2bd: V206 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d2: V207 = AND 0xffffffffffffffffffffffffffffffffffffffff V195
0x2d3: V208 = MUL V207 0x100
0x2d4: V209 = OR V208 V205
0x2d6: S[V197] = V209
0x2d8: V210 = 0x0
0x2db: V211 = 0x2
0x2dd: V212 = ADD 0x2 V187
0x2de: V213 = 0x0
0x2e0: V214 = 0x100
0x2e3: V215 = EXP 0x100 0x0
0x2e5: V216 = S[V212]
0x2e7: V217 = 0xff
0x2e9: V218 = MUL 0xff 0x1
0x2ea: V219 = NOT 0xff
0x2eb: V220 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V216
0x2ee: V221 = ISZERO 0x0
0x2ef: V222 = ISZERO 0x1
0x2f0: V223 = MUL 0x0 0x1
0x2f1: V224 = OR 0x0 V220
0x2f3: S[V212] = V224
0x2f5: V225 = 0x0
0x2f9: V226 = S[0x0]
0x2fb: V227 = 0x100
0x2fe: V228 = EXP 0x100 0x0
0x300: V229 = DIV V226 0x1
0x301: V230 = 0xffffffffffffffffffffffffffffffffffffffff
0x316: V231 = AND 0xffffffffffffffffffffffffffffffffffffffff V229
0x317: V232 = 0xffffffffffffffffffffffffffffffffffffffff
0x32c: V233 = AND 0xffffffffffffffffffffffffffffffffffffffff V231
0x32d: V234 = 0x8fc
0x333: V235 = ISZERO V173
0x334: V236 = MUL V235 0x8fc
0x336: V237 = 0x40
0x338: V238 = M[0x40]
0x339: V239 = 0x0
0x33b: V240 = 0x40
0x33d: V241 = M[0x40]
0x340: V242 = SUB V238 V241
0x345: V243 = CALL V236 V233 V173 V241 V242 V241 0x0
0x34b: V244 = ISZERO V243
0x34c: V245 = ISZERO V244
0x34d: V246 = 0x355
0x350: JUMPI 0x355 V245
---
Entry stack: [V10, 0xbe, V48, 0x0, 0x0, V168, V169]
Stack pops: 5
Stack additions: [S4, V173, V187]
Exit stack: [V10, 0xbe, V48, V173, V187]

================================

Block 0x351
[0x351:0x354]
---
Predecessors: [0x260]
Successors: []
---
0x351 PUSH1 0x0
0x353 DUP1
0x354 REVERT
---
0x351: V247 = 0x0
0x354: REVERT 0x0 0x0
---
Entry stack: [V10, 0xbe, V48, V173, V187]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xbe, V48, V173, V187]

================================

Block 0x355
[0x355:0x355]
---
Predecessors: [0x260]
Successors: [0x356]
---
0x355 JUMPDEST
---
0x355: JUMPDEST 
---
Entry stack: [V10, 0xbe, V48, V173, V187]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xbe, V48, V173, V187]

================================

Block 0x356
[0x356:0x35a]
---
Predecessors: [0x24f, 0x355]
Successors: [0xbe]
---
0x356 JUMPDEST
0x357 POP
0x358 POP
0x359 POP
0x35a JUMP
---
0x356: JUMPDEST 
0x35a: JUMP 0xbe
---
Entry stack: [V10, 0xbe, V48, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V10]

================================

Block 0x35b
[0x35b:0x38f]
---
Predecessors: [0xcb]
Successors: [0xe5]
---
0x35b JUMPDEST
0x35c PUSH1 0x0
0x35e PUSH1 0x1
0x360 PUSH1 0x0
0x362 DUP4
0x363 PUSH1 0x0
0x365 NOT
0x366 AND
0x367 PUSH1 0x0
0x369 NOT
0x36a AND
0x36b DUP2
0x36c MSTORE
0x36d PUSH1 0x20
0x36f ADD
0x370 SWAP1
0x371 DUP2
0x372 MSTORE
0x373 PUSH1 0x20
0x375 ADD
0x376 PUSH1 0x0
0x378 SHA3
0x379 PUSH1 0x2
0x37b ADD
0x37c PUSH1 0x0
0x37e SWAP1
0x37f SLOAD
0x380 SWAP1
0x381 PUSH2 0x100
0x384 EXP
0x385 SWAP1
0x386 DIV
0x387 PUSH1 0xff
0x389 AND
0x38a SWAP1
0x38b POP
0x38c SWAP2
0x38d SWAP1
0x38e POP
0x38f JUMP
---
0x35b: JUMPDEST 
0x35c: V248 = 0x0
0x35e: V249 = 0x1
0x360: V250 = 0x0
0x363: V251 = 0x0
0x365: V252 = NOT 0x0
0x366: V253 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V61
0x367: V254 = 0x0
0x369: V255 = NOT 0x0
0x36a: V256 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V253
0x36c: M[0x0] = V256
0x36d: V257 = 0x20
0x36f: V258 = ADD 0x20 0x0
0x372: M[0x20] = 0x1
0x373: V259 = 0x20
0x375: V260 = ADD 0x20 0x20
0x376: V261 = 0x0
0x378: V262 = SHA3 0x0 0x40
0x379: V263 = 0x2
0x37b: V264 = ADD 0x2 V262
0x37c: V265 = 0x0
0x37f: V266 = S[V264]
0x381: V267 = 0x100
0x384: V268 = EXP 0x100 0x0
0x386: V269 = DIV V266 0x1
0x387: V270 = 0xff
0x389: V271 = AND 0xff V269
0x38f: JUMP 0xe5
---
Entry stack: [V10, 0xe5, V61]
Stack pops: 2
Stack additions: [V271]
Exit stack: [V10, V271]

================================

Block 0x390
[0x390:0x3b4]
---
Predecessors: [0x10a]
Successors: [0x112]
---
0x390 JUMPDEST
0x391 PUSH1 0x0
0x393 DUP1
0x394 SWAP1
0x395 SLOAD
0x396 SWAP1
0x397 PUSH2 0x100
0x39a EXP
0x39b SWAP1
0x39c DIV
0x39d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b2 AND
0x3b3 DUP2
0x3b4 JUMP
---
0x390: JUMPDEST 
0x391: V272 = 0x0
0x395: V273 = S[0x0]
0x397: V274 = 0x100
0x39a: V275 = EXP 0x100 0x0
0x39c: V276 = DIV V273 0x1
0x39d: V277 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b2: V278 = AND 0xffffffffffffffffffffffffffffffffffffffff V276
0x3b4: JUMP 0x112
---
Entry stack: [V10, 0x112]
Stack pops: 1
Stack additions: [S0, V278]
Exit stack: [V10, 0x112, V278]

================================

Block 0x3b5
[0x3b5:0x3cb]
---
Predecessors: [0x15f]
Successors: [0x3cc]
---
0x3b5 JUMPDEST
0x3b6 PUSH1 0x0
0x3b8 DUP1
0x3b9 PUSH1 0x0
0x3bb DUP1
0x3bc DUP6
0x3bd PUSH1 0x40
0x3bf MLOAD
0x3c0 DUP1
0x3c1 DUP3
0x3c2 DUP1
0x3c3 MLOAD
0x3c4 SWAP1
0x3c5 PUSH1 0x20
0x3c7 ADD
0x3c8 SWAP1
0x3c9 DUP1
0x3ca DUP4
0x3cb DUP4
---
0x3b5: JUMPDEST 
0x3b6: V279 = 0x0
0x3b9: V280 = 0x0
0x3bd: V281 = 0x40
0x3bf: V282 = M[0x40]
0x3c3: V283 = M[V114]
0x3c5: V284 = 0x20
0x3c7: V285 = ADD 0x20 V114
---
Entry stack: [V10, 0x1ce, V114, V122]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, 0x0, 0x0, S1, V282, V282, V285, V283, V283, V282, V285]
Exit stack: [V10, 0x1ce, V114, V122, 0x0, 0x0, 0x0, 0x0, V114, V282, V282, V285, V283, V283, V282, V285]

================================

Block 0x3cc
[0x3cc:0x3d6]
---
Predecessors: [0x3b5, 0x3d7]
Successors: [0x3d7, 0x3f1]
---
0x3cc JUMPDEST
0x3cd PUSH1 0x20
0x3cf DUP4
0x3d0 LT
0x3d1 ISZERO
0x3d2 ISZERO
0x3d3 PUSH2 0x3f1
0x3d6 JUMPI
---
0x3cc: JUMPDEST 
0x3cd: V286 = 0x20
0x3d0: V287 = LT S2 0x20
0x3d1: V288 = ISZERO V287
0x3d2: V289 = ISZERO V288
0x3d3: V290 = 0x3f1
0x3d6: JUMPI 0x3f1 V289
---
Entry stack: [V10, 0x1ce, V114, V122, 0x0, 0x0, 0x0, 0x0, V114, V282, V282, V285, V283, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x1ce, V114, V122, 0x0, 0x0, 0x0, 0x0, V114, V282, V282, V285, V283, S2, S1, S0]

================================

Block 0x3d7
[0x3d7:0x3f0]
---
Predecessors: [0x3cc]
Successors: [0x3cc]
---
0x3d7 DUP1
0x3d8 MLOAD
0x3d9 DUP3
0x3da MSTORE
0x3db PUSH1 0x20
0x3dd DUP3
0x3de ADD
0x3df SWAP2
0x3e0 POP
0x3e1 PUSH1 0x20
0x3e3 DUP2
0x3e4 ADD
0x3e5 SWAP1
0x3e6 POP
0x3e7 PUSH1 0x20
0x3e9 DUP4
0x3ea SUB
0x3eb SWAP3
0x3ec POP
0x3ed PUSH2 0x3cc
0x3f0 JUMP
---
0x3d8: V291 = M[S0]
0x3da: M[S1] = V291
0x3db: V292 = 0x20
0x3de: V293 = ADD S1 0x20
0x3e1: V294 = 0x20
0x3e4: V295 = ADD S0 0x20
0x3e7: V296 = 0x20
0x3ea: V297 = SUB S2 0x20
0x3ed: V298 = 0x3cc
0x3f0: JUMP 0x3cc
---
Entry stack: [V10, 0x1ce, V114, V122, 0x0, 0x0, 0x0, 0x0, V114, V282, V282, V285, V283, S2, S1, S0]
Stack pops: 3
Stack additions: [V297, V293, V295]
Exit stack: [V10, 0x1ce, V114, V122, 0x0, 0x0, 0x0, 0x0, V114, V282, V282, V285, V283, V297, V293, V295]

================================

Block 0x3f1
[0x3f1:0x44b]
---
Predecessors: [0x3cc]
Successors: [0x44c, 0x45f]
---
0x3f1 JUMPDEST
0x3f2 PUSH1 0x1
0x3f4 DUP4
0x3f5 PUSH1 0x20
0x3f7 SUB
0x3f8 PUSH2 0x100
0x3fb EXP
0x3fc SUB
0x3fd DUP1
0x3fe NOT
0x3ff DUP3
0x400 MLOAD
0x401 AND
0x402 DUP2
0x403 DUP5
0x404 MLOAD
0x405 AND
0x406 DUP1
0x407 DUP3
0x408 OR
0x409 DUP6
0x40a MSTORE
0x40b POP
0x40c POP
0x40d POP
0x40e POP
0x40f POP
0x410 POP
0x411 SWAP1
0x412 POP
0x413 ADD
0x414 SWAP2
0x415 POP
0x416 POP
0x417 PUSH1 0x40
0x419 MLOAD
0x41a DUP1
0x41b SWAP2
0x41c SUB
0x41d SWAP1
0x41e SHA3
0x41f SWAP3
0x420 POP
0x421 PUSH1 0x1
0x423 PUSH1 0x0
0x425 DUP5
0x426 PUSH1 0x0
0x428 NOT
0x429 AND
0x42a PUSH1 0x0
0x42c NOT
0x42d AND
0x42e DUP2
0x42f MSTORE
0x430 PUSH1 0x20
0x432 ADD
0x433 SWAP1
0x434 DUP2
0x435 MSTORE
0x436 PUSH1 0x20
0x438 ADD
0x439 PUSH1 0x0
0x43b SHA3
0x43c SWAP2
0x43d POP
0x43e PUSH1 0x0
0x440 DUP3
0x441 PUSH1 0x0
0x443 ADD
0x444 SLOAD
0x445 GT
0x446 ISZERO
0x447 DUP1
0x448 PUSH2 0x45f
0x44b JUMPI
---
0x3f1: JUMPDEST 
0x3f2: V299 = 0x1
0x3f5: V300 = 0x20
0x3f7: V301 = SUB 0x20 S2
0x3f8: V302 = 0x100
0x3fb: V303 = EXP 0x100 V301
0x3fc: V304 = SUB V303 0x1
0x3fe: V305 = NOT V304
0x400: V306 = M[S0]
0x401: V307 = AND V306 V305
0x404: V308 = M[S1]
0x405: V309 = AND V308 V304
0x408: V310 = OR V307 V309
0x40a: M[S1] = V310
0x413: V311 = ADD V283 V282
0x417: V312 = 0x40
0x419: V313 = M[0x40]
0x41c: V314 = SUB V311 V313
0x41e: V315 = SHA3 V313 V314
0x421: V316 = 0x1
0x423: V317 = 0x0
0x426: V318 = 0x0
0x428: V319 = NOT 0x0
0x429: V320 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V315
0x42a: V321 = 0x0
0x42c: V322 = NOT 0x0
0x42d: V323 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V320
0x42f: M[0x0] = V323
0x430: V324 = 0x20
0x432: V325 = ADD 0x20 0x0
0x435: M[0x20] = 0x1
0x436: V326 = 0x20
0x438: V327 = ADD 0x20 0x20
0x439: V328 = 0x0
0x43b: V329 = SHA3 0x0 0x40
0x43e: V330 = 0x0
0x441: V331 = 0x0
0x443: V332 = ADD 0x0 V329
0x444: V333 = S[V332]
0x445: V334 = GT V333 0x0
0x446: V335 = ISZERO V334
0x448: V336 = 0x45f
0x44b: JUMPI 0x45f V335
---
Entry stack: [V10, 0x1ce, V114, V122, 0x0, 0x0, 0x0, 0x0, V114, V282, V282, V285, V283, S2, S1, S0]
Stack pops: 11
Stack additions: [V315, V329, S8, V335]
Exit stack: [V10, 0x1ce, V114, V122, 0x0, V315, V329, 0x0, V335]

================================

Block 0x44c
[0x44c:0x45e]
---
Predecessors: [0x3f1]
Successors: [0x45f]
---
0x44c POP
0x44d DUP2
0x44e PUSH1 0x2
0x450 ADD
0x451 PUSH1 0x0
0x453 SWAP1
0x454 SLOAD
0x455 SWAP1
0x456 PUSH2 0x100
0x459 EXP
0x45a SWAP1
0x45b DIV
0x45c PUSH1 0xff
0x45e AND
---
0x44e: V337 = 0x2
0x450: V338 = ADD 0x2 V329
0x451: V339 = 0x0
0x454: V340 = S[V338]
0x456: V341 = 0x100
0x459: V342 = EXP 0x100 0x0
0x45b: V343 = DIV V340 0x1
0x45c: V344 = 0xff
0x45e: V345 = AND 0xff V343
---
Entry stack: [V10, 0x1ce, V114, V122, 0x0, V315, V329, 0x0, V335]
Stack pops: 3
Stack additions: [S2, S1, V345]
Exit stack: [V10, 0x1ce, V114, V122, 0x0, V315, V329, 0x0, V345]

================================

Block 0x45f
[0x45f:0x464]
---
Predecessors: [0x3f1, 0x44c]
Successors: [0x465, 0x46d]
---
0x45f JUMPDEST
0x460 ISZERO
0x461 PUSH2 0x46d
0x464 JUMPI
---
0x45f: JUMPDEST 
0x460: V346 = ISZERO S0
0x461: V347 = 0x46d
0x464: JUMPI 0x46d V346
---
Entry stack: [V10, 0x1ce, V114, V122, 0x0, V315, V329, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1ce, V114, V122, 0x0, V315, V329, 0x0]

================================

Block 0x465
[0x465:0x46c]
---
Predecessors: [0x45f]
Successors: [0x4d5]
---
0x465 PUSH1 0x0
0x467 SWAP4
0x468 POP
0x469 PUSH2 0x4d5
0x46c JUMP
---
0x465: V348 = 0x0
0x469: V349 = 0x4d5
0x46c: JUMP 0x4d5
---
Entry stack: [V10, 0x1ce, V114, V122, 0x0, V315, V329, 0x0]
Stack pops: 4
Stack additions: [0x0, S2, S1, S0]
Exit stack: [V10, 0x1ce, V114, V122, 0x0, V315, V329, 0x0]

================================

Block 0x46d
[0x46d:0x4af]
---
Predecessors: [0x45f]
Successors: [0x4b0, 0x4b4]
---
0x46d JUMPDEST
0x46e DUP2
0x46f PUSH1 0x1
0x471 ADD
0x472 SLOAD
0x473 SWAP1
0x474 POP
0x475 DUP5
0x476 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x48b AND
0x48c PUSH2 0x8fc
0x48f DUP3
0x490 SWAP1
0x491 DUP2
0x492 ISZERO
0x493 MUL
0x494 SWAP1
0x495 PUSH1 0x40
0x497 MLOAD
0x498 PUSH1 0x0
0x49a PUSH1 0x40
0x49c MLOAD
0x49d DUP1
0x49e DUP4
0x49f SUB
0x4a0 DUP2
0x4a1 DUP6
0x4a2 DUP9
0x4a3 DUP9
0x4a4 CALL
0x4a5 SWAP4
0x4a6 POP
0x4a7 POP
0x4a8 POP
0x4a9 POP
0x4aa ISZERO
0x4ab ISZERO
0x4ac PUSH2 0x4b4
0x4af JUMPI
---
0x46d: JUMPDEST 
0x46f: V350 = 0x1
0x471: V351 = ADD 0x1 V329
0x472: V352 = S[V351]
0x476: V353 = 0xffffffffffffffffffffffffffffffffffffffff
0x48b: V354 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x48c: V355 = 0x8fc
0x492: V356 = ISZERO V352
0x493: V357 = MUL V356 0x8fc
0x495: V358 = 0x40
0x497: V359 = M[0x40]
0x498: V360 = 0x0
0x49a: V361 = 0x40
0x49c: V362 = M[0x40]
0x49f: V363 = SUB V359 V362
0x4a4: V364 = CALL V357 V354 V352 V362 V363 V362 0x0
0x4aa: V365 = ISZERO V364
0x4ab: V366 = ISZERO V365
0x4ac: V367 = 0x4b4
0x4af: JUMPI 0x4b4 V366
---
Entry stack: [V10, 0x1ce, V114, V122, 0x0, V315, V329, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V352]
Exit stack: [V10, 0x1ce, V114, V122, 0x0, V315, V329, V352]

================================

Block 0x4b0
[0x4b0:0x4b3]
---
Predecessors: [0x46d]
Successors: []
---
0x4b0 PUSH1 0x0
0x4b2 DUP1
0x4b3 REVERT
---
0x4b0: V368 = 0x0
0x4b3: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1ce, V114, V122, 0x0, V315, V329, V352]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1ce, V114, V122, 0x0, V315, V329, V352]

================================

Block 0x4b4
[0x4b4:0x4d4]
---
Predecessors: [0x46d]
Successors: [0x4d5]
---
0x4b4 JUMPDEST
0x4b5 PUSH1 0x1
0x4b7 DUP3
0x4b8 PUSH1 0x2
0x4ba ADD
0x4bb PUSH1 0x0
0x4bd PUSH2 0x100
0x4c0 EXP
0x4c1 DUP2
0x4c2 SLOAD
0x4c3 DUP2
0x4c4 PUSH1 0xff
0x4c6 MUL
0x4c7 NOT
0x4c8 AND
0x4c9 SWAP1
0x4ca DUP4
0x4cb ISZERO
0x4cc ISZERO
0x4cd MUL
0x4ce OR
0x4cf SWAP1
0x4d0 SSTORE
0x4d1 POP
0x4d2 DUP1
0x4d3 SWAP4
0x4d4 POP
---
0x4b4: JUMPDEST 
0x4b5: V369 = 0x1
0x4b8: V370 = 0x2
0x4ba: V371 = ADD 0x2 V329
0x4bb: V372 = 0x0
0x4bd: V373 = 0x100
0x4c0: V374 = EXP 0x100 0x0
0x4c2: V375 = S[V371]
0x4c4: V376 = 0xff
0x4c6: V377 = MUL 0xff 0x1
0x4c7: V378 = NOT 0xff
0x4c8: V379 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V375
0x4cb: V380 = ISZERO 0x1
0x4cc: V381 = ISZERO 0x0
0x4cd: V382 = MUL 0x1 0x1
0x4ce: V383 = OR 0x1 V379
0x4d0: S[V371] = V383
---
Entry stack: [V10, 0x1ce, V114, V122, 0x0, V315, V329, V352]
Stack pops: 4
Stack additions: [S0, S2, S1, S0]
Exit stack: [V10, 0x1ce, V114, V122, V352, V315, V329, V352]

================================

Block 0x4d5
[0x4d5:0x4dd]
---
Predecessors: [0x465, 0x4b4]
Successors: [0x1ce]
---
0x4d5 JUMPDEST
0x4d6 POP
0x4d7 POP
0x4d8 POP
0x4d9 SWAP3
0x4da SWAP2
0x4db POP
0x4dc POP
0x4dd JUMP
---
0x4d5: JUMPDEST 
0x4dd: JUMP 0x1ce
---
Entry stack: [V10, 0x1ce, V114, V122, S3, V315, V329, S0]
Stack pops: 7
Stack additions: [S3]
Exit stack: [V10, S3]

================================

Block 0x4de
[0x4de:0x505]
---
Predecessors: [0x1ef]
Successors: [0x209]
---
0x4de JUMPDEST
0x4df PUSH1 0x0
0x4e1 PUSH1 0x1
0x4e3 PUSH1 0x0
0x4e5 DUP4
0x4e6 PUSH1 0x0
0x4e8 NOT
0x4e9 AND
0x4ea PUSH1 0x0
0x4ec NOT
0x4ed AND
0x4ee DUP2
0x4ef MSTORE
0x4f0 PUSH1 0x20
0x4f2 ADD
0x4f3 SWAP1
0x4f4 DUP2
0x4f5 MSTORE
0x4f6 PUSH1 0x20
0x4f8 ADD
0x4f9 PUSH1 0x0
0x4fb SHA3
0x4fc PUSH1 0x1
0x4fe ADD
0x4ff SLOAD
0x500 SWAP1
0x501 POP
0x502 SWAP2
0x503 SWAP1
0x504 POP
0x505 JUMP
---
0x4de: JUMPDEST 
0x4df: V384 = 0x0
0x4e1: V385 = 0x1
0x4e3: V386 = 0x0
0x4e6: V387 = 0x0
0x4e8: V388 = NOT 0x0
0x4e9: V389 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V142
0x4ea: V390 = 0x0
0x4ec: V391 = NOT 0x0
0x4ed: V392 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V389
0x4ef: M[0x0] = V392
0x4f0: V393 = 0x20
0x4f2: V394 = ADD 0x20 0x0
0x4f5: M[0x20] = 0x1
0x4f6: V395 = 0x20
0x4f8: V396 = ADD 0x20 0x20
0x4f9: V397 = 0x0
0x4fb: V398 = SHA3 0x0 0x40
0x4fc: V399 = 0x1
0x4fe: V400 = ADD 0x1 V398
0x4ff: V401 = S[V400]
0x505: JUMP 0x209
---
Entry stack: [V10, 0x209, V142]
Stack pops: 2
Stack additions: [V401]
Exit stack: [V10, V401]

================================

Block 0x506
[0x506:0x542]
---
Predecessors: []
Successors: []
---
0x506 STOP
0x507 LOG1
0x508 PUSH6 0x627a7a723058
0x50f SHA3
0x510 MISSING 0x4a
0x511 SMOD
0x512 ORIGIN
0x513 ADDRESS
0x514 MISSING 0xba
0x515 EQ
0x516 MISSING 0xb1
0x517 MISSING 0xf7
0x518 MISSING 0x2e
0x519 XOR
0x51a MISSING 0xa8
0x51b MISSING 0xcb
0x51c CREATE
0x51d MISSING 0xf8
0x51e MISSING 0x2a
0x51f DUP5
0x520 MISSING 0x21
0x521 MISSING 0xc4
0x522 MISSING 0xb1
0x523 MOD
0x524 SWAP10
0x525 MISSING 0xb7
0x526 MISSING 0xab
0x527 MISSING 0x24
0x528 MISSING 0xd7
0x529 CODESIZE
0x52a MISSING 0xd0
0x52b DUP14
0x52c MISSING 0xef
0x52d LOG3
0x52e PUSH20 0xd50029
---
0x506: STOP 
0x507: LOG S0 S1 S2
0x508: V402 = 0x627a7a723058
0x50f: V403 = SHA3 0x627a7a723058 S3
0x510: MISSING 0x4a
0x511: V404 = SMOD S0 S1
0x512: V405 = ORIGIN
0x513: V406 = ADDRESS
0x514: MISSING 0xba
0x515: V407 = EQ S0 S1
0x516: MISSING 0xb1
0x517: MISSING 0xf7
0x518: MISSING 0x2e
0x519: V408 = XOR S0 S1
0x51a: MISSING 0xa8
0x51b: MISSING 0xcb
0x51c: V409 = CREATE S0 S1 S2
0x51d: MISSING 0xf8
0x51e: MISSING 0x2a
0x520: MISSING 0x21
0x521: MISSING 0xc4
0x522: MISSING 0xb1
0x523: V410 = MOD S0 S1
0x525: MISSING 0xb7
0x526: MISSING 0xab
0x527: MISSING 0x24
0x528: MISSING 0xd7
0x529: V411 = CODESIZE
0x52a: MISSING 0xd0
0x52c: MISSING 0xef
0x52d: LOG S0 S1 S2 S3 S4
0x52e: V412 = 0xd50029
---
Entry stack: []
Stack pops: 0
Stack additions: [V403, V406, V405, V404, V407, V408, V409, S4, S0, S1, S2, S3, S4, S11, S2, S3, S4, S5, S6, S7, S8, S9, S10, V410, V411, S13, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, 0xd50029]
Exit stack: []

================================

Function 0:
Public function signature: 0x12065fe0
Entry block: 0x7b
Exit block: 0x8e
Body: 0x7b, 0x82, 0x86, 0x8e, 0x21f

Function 1:
Public function signature: 0x1c4261f4
Entry block: 0xa4
Exit block: 0x351
Body: 0xa4, 0xbe, 0x23e, 0x24f, 0x253, 0x25f, 0x260, 0x351, 0x355, 0x356

Function 2:
Public function signature: 0x6994a62b
Entry block: 0xc0
Exit block: 0xe5
Body: 0xc0, 0xc7, 0xcb, 0xe5, 0x35b

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0xff
Exit block: 0x112
Body: 0xff, 0x106, 0x10a, 0x112, 0x390

Function 4:
Public function signature: 0xb41960d4
Entry block: 0x154
Exit block: 0x1ce
Body: 0x154, 0x15b, 0x15f, 0x1ce, 0x3b5, 0x3cc, 0x3d7, 0x3f1, 0x44c, 0x45f, 0x465, 0x46d, 0x4b0, 0x4b4, 0x4d5

Function 5:
Public function signature: 0xdb6be871
Entry block: 0x1e4
Exit block: 0x209
Body: 0x1e4, 0x1eb, 0x1ef, 0x209, 0x4de

Function 6:
Public fallback function
Entry block: 0x76
Exit block: 0x76
Body: 0x76

