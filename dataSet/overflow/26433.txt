Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0xd7]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x37354a68
0x3c EQ
0x3d PUSH2 0xd7
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x37354a68
0x3c: V13 = EQ 0x37354a68 V11
0x3d: V14 = 0xd7
0x40: JUMPI 0xd7 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x124]
---
0x41 DUP1
0x42 PUSH4 0x41c0e1b5
0x47 EQ
0x48 PUSH2 0x124
0x4b JUMPI
---
0x42: V15 = 0x41c0e1b5
0x47: V16 = EQ 0x41c0e1b5 V11
0x48: V17 = 0x124
0x4b: JUMPI 0x124 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x139]
---
0x4c DUP1
0x4d PUSH4 0x80ca7aec
0x52 EQ
0x53 PUSH2 0x139
0x56 JUMPI
---
0x4d: V18 = 0x80ca7aec
0x52: V19 = EQ 0x80ca7aec V11
0x53: V20 = 0x139
0x56: JUMPI 0x139 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x14e]
---
0x57 DUP1
0x58 PUSH4 0xd11711a2
0x5d EQ
0x5e PUSH2 0x14e
0x61 JUMPI
---
0x58: V21 = 0xd11711a2
0x5d: V22 = EQ 0xd11711a2 V11
0x5e: V23 = 0x14e
0x61: JUMPI 0x14e V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x74]
---
Predecessors: [0x0, 0x57]
Successors: [0x75, 0xc7]
---
0x62 JUMPDEST
0x63 PUSH8 0x16345785d8a0000
0x6c CALLVALUE
0x6d LT
0x6e ISZERO
0x6f DUP1
0x70 ISZERO
0x71 PUSH2 0xc7
0x74 JUMPI
---
0x62: JUMPDEST 
0x63: V24 = 0x16345785d8a0000
0x6c: V25 = CALLVALUE
0x6d: V26 = LT V25 0x16345785d8a0000
0x6e: V27 = ISZERO V26
0x70: V28 = ISZERO V27
0x71: V29 = 0xc7
0x74: JUMPI 0xc7 V28
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V27]
Exit stack: [V11, V27]

================================

Block 0x75
[0x75:0xc6]
---
Predecessors: [0x62]
Successors: [0xc7]
---
0x75 POP
0x76 PUSH1 0x0
0x78 DUP1
0x79 SWAP1
0x7a SLOAD
0x7b SWAP1
0x7c PUSH2 0x100
0x7f EXP
0x80 SWAP1
0x81 DIV
0x82 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x97 AND
0x98 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xad AND
0xae CALLER
0xaf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc4 AND
0xc5 EQ
0xc6 ISZERO
---
0x76: V30 = 0x0
0x7a: V31 = S[0x0]
0x7c: V32 = 0x100
0x7f: V33 = EXP 0x100 0x0
0x81: V34 = DIV V31 0x1
0x82: V35 = 0xffffffffffffffffffffffffffffffffffffffff
0x97: V36 = AND 0xffffffffffffffffffffffffffffffffffffffff V34
0x98: V37 = 0xffffffffffffffffffffffffffffffffffffffff
0xad: V38 = AND 0xffffffffffffffffffffffffffffffffffffffff V36
0xae: V39 = CALLER
0xaf: V40 = 0xffffffffffffffffffffffffffffffffffffffff
0xc4: V41 = AND 0xffffffffffffffffffffffffffffffffffffffff V39
0xc5: V42 = EQ V41 V38
0xc6: V43 = ISZERO V42
---
Entry stack: [V11, V27]
Stack pops: 1
Stack additions: [V43]
Exit stack: [V11, V43]

================================

Block 0xc7
[0xc7:0xcc]
---
Predecessors: [0x62, 0x75]
Successors: [0xcd, 0xd5]
---
0xc7 JUMPDEST
0xc8 ISZERO
0xc9 PUSH2 0xd5
0xcc JUMPI
---
0xc7: JUMPDEST 
0xc8: V44 = ISZERO S0
0xc9: V45 = 0xd5
0xcc: JUMPI 0xd5 V44
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xcd
[0xcd:0xd3]
---
Predecessors: [0xc7]
Successors: [0x158]
---
0xcd PUSH2 0xd4
0xd0 PUSH2 0x158
0xd3 JUMP
---
0xcd: V46 = 0xd4
0xd0: V47 = 0x158
0xd3: JUMP 0x158
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xd4]
Exit stack: [V11, 0xd4]

================================

Block 0xd4
[0xd4:0xd4]
---
Predecessors: [0x315, 0x522]
Successors: [0xd5]
---
0xd4 JUMPDEST
---
0xd4: JUMPDEST 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd5
[0xd5:0xd6]
---
Predecessors: [0xc7, 0xd4]
Successors: []
---
0xd5 JUMPDEST
0xd6 STOP
---
0xd5: JUMPDEST 
0xd6: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd7
[0xd7:0xdd]
---
Predecessors: [0xd]
Successors: [0xde, 0xe2]
---
0xd7 JUMPDEST
0xd8 CALLVALUE
0xd9 ISZERO
0xda PUSH2 0xe2
0xdd JUMPI
---
0xd7: JUMPDEST 
0xd8: V48 = CALLVALUE
0xd9: V49 = ISZERO V48
0xda: V50 = 0xe2
0xdd: JUMPI 0xe2 V49
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xde
[0xde:0xe1]
---
Predecessors: [0xd7]
Successors: []
---
0xde PUSH1 0x0
0xe0 DUP1
0xe1 REVERT
---
0xde: V51 = 0x0
0xe1: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe2
[0xe2:0x10d]
---
Predecessors: [0xd7]
Successors: [0x318]
---
0xe2 JUMPDEST
0xe3 PUSH2 0x10e
0xe6 PUSH1 0x4
0xe8 DUP1
0xe9 DUP1
0xea CALLDATALOAD
0xeb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x100 AND
0x101 SWAP1
0x102 PUSH1 0x20
0x104 ADD
0x105 SWAP1
0x106 SWAP2
0x107 SWAP1
0x108 POP
0x109 POP
0x10a PUSH2 0x318
0x10d JUMP
---
0xe2: JUMPDEST 
0xe3: V52 = 0x10e
0xe6: V53 = 0x4
0xea: V54 = CALLDATALOAD 0x4
0xeb: V55 = 0xffffffffffffffffffffffffffffffffffffffff
0x100: V56 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0x102: V57 = 0x20
0x104: V58 = ADD 0x20 0x4
0x10a: V59 = 0x318
0x10d: JUMP 0x318
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x10e, V56]
Exit stack: [V11, 0x10e, V56]

================================

Block 0x10e
[0x10e:0x123]
---
Predecessors: [0x3af]
Successors: []
---
0x10e JUMPDEST
0x10f PUSH1 0x40
0x111 MLOAD
0x112 DUP1
0x113 DUP3
0x114 DUP2
0x115 MSTORE
0x116 PUSH1 0x20
0x118 ADD
0x119 SWAP2
0x11a POP
0x11b POP
0x11c PUSH1 0x40
0x11e MLOAD
0x11f DUP1
0x120 SWAP2
0x121 SUB
0x122 SWAP1
0x123 RETURN
---
0x10e: JUMPDEST 
0x10f: V60 = 0x40
0x111: V61 = M[0x40]
0x115: M[V61] = V245
0x116: V62 = 0x20
0x118: V63 = ADD 0x20 V61
0x11c: V64 = 0x40
0x11e: V65 = M[0x40]
0x121: V66 = SUB V63 V65
0x123: RETURN V65 V66
---
Entry stack: [V11, {0xd4, 0x156}, 0x0, S1, V245]
Stack pops: 1
Stack additions: []
Exit stack: [V11, {0xd4, 0x156}, 0x0, S1]

================================

Block 0x124
[0x124:0x12a]
---
Predecessors: [0x41]
Successors: [0x12b, 0x12f]
---
0x124 JUMPDEST
0x125 CALLVALUE
0x126 ISZERO
0x127 PUSH2 0x12f
0x12a JUMPI
---
0x124: JUMPDEST 
0x125: V67 = CALLVALUE
0x126: V68 = ISZERO V67
0x127: V69 = 0x12f
0x12a: JUMPI 0x12f V68
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x12b
[0x12b:0x12e]
---
Predecessors: [0x124]
Successors: []
---
0x12b PUSH1 0x0
0x12d DUP1
0x12e REVERT
---
0x12b: V70 = 0x0
0x12e: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x12f
[0x12f:0x136]
---
Predecessors: [0x124]
Successors: [0x3b7]
---
0x12f JUMPDEST
0x130 PUSH2 0x137
0x133 PUSH2 0x3b7
0x136 JUMP
---
0x12f: JUMPDEST 
0x130: V71 = 0x137
0x133: V72 = 0x3b7
0x136: JUMP 0x3b7
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x137]
Exit stack: [V11, 0x137]

================================

Block 0x137
[0x137:0x138]
---
Predecessors: []
Successors: []
---
0x137 JUMPDEST
0x138 STOP
---
0x137: JUMPDEST 
0x138: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x139
[0x139:0x13f]
---
Predecessors: [0x4c]
Successors: [0x140, 0x144]
---
0x139 JUMPDEST
0x13a CALLVALUE
0x13b ISZERO
0x13c PUSH2 0x144
0x13f JUMPI
---
0x139: JUMPDEST 
0x13a: V73 = CALLVALUE
0x13b: V74 = ISZERO V73
0x13c: V75 = 0x144
0x13f: JUMPI 0x144 V74
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x140
[0x140:0x143]
---
Predecessors: [0x139]
Successors: []
---
0x140 PUSH1 0x0
0x142 DUP1
0x143 REVERT
---
0x140: V76 = 0x0
0x143: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x144
[0x144:0x14b]
---
Predecessors: [0x139]
Successors: [0x42b]
---
0x144 JUMPDEST
0x145 PUSH2 0x14c
0x148 PUSH2 0x42b
0x14b JUMP
---
0x144: JUMPDEST 
0x145: V77 = 0x14c
0x148: V78 = 0x42b
0x14b: JUMP 0x42b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x14c]
Exit stack: [V11, 0x14c]

================================

Block 0x14c
[0x14c:0x14d]
---
Predecessors: [0x315, 0x522]
Successors: []
---
0x14c JUMPDEST
0x14d STOP
---
0x14c: JUMPDEST 
0x14d: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x14e
[0x14e:0x155]
---
Predecessors: [0x57]
Successors: [0x158]
---
0x14e JUMPDEST
0x14f PUSH2 0x156
0x152 PUSH2 0x158
0x155 JUMP
---
0x14e: JUMPDEST 
0x14f: V79 = 0x156
0x152: V80 = 0x158
0x155: JUMP 0x158
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x156]
Exit stack: [V11, 0x156]

================================

Block 0x156
[0x156:0x157]
---
Predecessors: [0x315, 0x522]
Successors: []
---
0x156 JUMPDEST
0x157 STOP
---
0x156: JUMPDEST 
0x157: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x158
[0x158:0x16a]
---
Predecessors: [0xcd, 0x14e]
Successors: [0x16b, 0x16f]
---
0x158 JUMPDEST
0x159 PUSH1 0x0
0x15b PUSH8 0x16345785d8a0000
0x164 CALLVALUE
0x165 LT
0x166 ISZERO
0x167 PUSH2 0x16f
0x16a JUMPI
---
0x158: JUMPDEST 
0x159: V81 = 0x0
0x15b: V82 = 0x16345785d8a0000
0x164: V83 = CALLVALUE
0x165: V84 = LT V83 0x16345785d8a0000
0x166: V85 = ISZERO V84
0x167: V86 = 0x16f
0x16a: JUMPI 0x16f V85
---
Entry stack: [V11, {0xd4, 0x156}]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, {0xd4, 0x156}, 0x0]

================================

Block 0x16b
[0x16b:0x16e]
---
Predecessors: [0x158]
Successors: [0x315]
---
0x16b PUSH2 0x315
0x16e JUMP
---
0x16b: V87 = 0x315
0x16e: JUMP 0x315
---
Entry stack: [V11, {0xd4, 0x156}, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0xd4, 0x156}, 0x0]

================================

Block 0x16f
[0x16f:0x1c9]
---
Predecessors: [0x158]
Successors: [0x1ca, 0x1ce]
---
0x16f JUMPDEST
0x170 PUSH1 0x0
0x172 ISZERO
0x173 ISZERO
0x174 PUSH1 0x4
0x176 PUSH1 0x0
0x178 CALLER
0x179 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18e AND
0x18f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a4 AND
0x1a5 DUP2
0x1a6 MSTORE
0x1a7 PUSH1 0x20
0x1a9 ADD
0x1aa SWAP1
0x1ab DUP2
0x1ac MSTORE
0x1ad PUSH1 0x20
0x1af ADD
0x1b0 PUSH1 0x0
0x1b2 SHA3
0x1b3 PUSH1 0x0
0x1b5 SWAP1
0x1b6 SLOAD
0x1b7 SWAP1
0x1b8 PUSH2 0x100
0x1bb EXP
0x1bc SWAP1
0x1bd DIV
0x1be PUSH1 0xff
0x1c0 AND
0x1c1 ISZERO
0x1c2 ISZERO
0x1c3 EQ
0x1c4 ISZERO
0x1c5 ISZERO
0x1c6 PUSH2 0x1ce
0x1c9 JUMPI
---
0x16f: JUMPDEST 
0x170: V88 = 0x0
0x172: V89 = ISZERO 0x0
0x173: V90 = ISZERO 0x1
0x174: V91 = 0x4
0x176: V92 = 0x0
0x178: V93 = CALLER
0x179: V94 = 0xffffffffffffffffffffffffffffffffffffffff
0x18e: V95 = AND 0xffffffffffffffffffffffffffffffffffffffff V93
0x18f: V96 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a4: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0x1a6: M[0x0] = V97
0x1a7: V98 = 0x20
0x1a9: V99 = ADD 0x20 0x0
0x1ac: M[0x20] = 0x4
0x1ad: V100 = 0x20
0x1af: V101 = ADD 0x20 0x20
0x1b0: V102 = 0x0
0x1b2: V103 = SHA3 0x0 0x40
0x1b3: V104 = 0x0
0x1b6: V105 = S[V103]
0x1b8: V106 = 0x100
0x1bb: V107 = EXP 0x100 0x0
0x1bd: V108 = DIV V105 0x1
0x1be: V109 = 0xff
0x1c0: V110 = AND 0xff V108
0x1c1: V111 = ISZERO V110
0x1c2: V112 = ISZERO V111
0x1c3: V113 = EQ V112 0x0
0x1c4: V114 = ISZERO V113
0x1c5: V115 = ISZERO V114
0x1c6: V116 = 0x1ce
0x1c9: JUMPI 0x1ce V115
---
Entry stack: [V11, {0xd4, 0x156}, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0xd4, 0x156}, 0x0]

================================

Block 0x1ca
[0x1ca:0x1cd]
---
Predecessors: [0x16f]
Successors: []
---
0x1ca PUSH1 0x0
0x1cc DUP1
0x1cd REVERT
---
0x1ca: V117 = 0x0
0x1cd: REVERT 0x0 0x0
---
Entry stack: [V11, {0xd4, 0x156}, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0xd4, 0x156}, 0x0]

================================

Block 0x1ce
[0x1ce:0x1d9]
---
Predecessors: [0x16f]
Successors: [0x318]
---
0x1ce JUMPDEST
0x1cf PUSH1 0x3
0x1d1 SLOAD
0x1d2 PUSH2 0x1da
0x1d5 CALLER
0x1d6 PUSH2 0x318
0x1d9 JUMP
---
0x1ce: JUMPDEST 
0x1cf: V118 = 0x3
0x1d1: V119 = S[0x3]
0x1d2: V120 = 0x1da
0x1d5: V121 = CALLER
0x1d6: V122 = 0x318
0x1d9: JUMP 0x318
---
Entry stack: [V11, {0xd4, 0x156}, 0x0]
Stack pops: 0
Stack additions: [V119, 0x1da, V121]
Exit stack: [V11, {0xd4, 0x156}, 0x0, V119, 0x1da, V121]

================================

Block 0x1da
[0x1da:0x1e0]
---
Predecessors: [0x3af]
Successors: [0x1e1, 0x2c5]
---
0x1da JUMPDEST
0x1db EQ
0x1dc ISZERO
0x1dd PUSH2 0x2c5
0x1e0 JUMPI
---
0x1da: JUMPDEST 
0x1db: V123 = EQ V245 S1
0x1dc: V124 = ISZERO V123
0x1dd: V125 = 0x2c5
0x1e0: JUMPI 0x2c5 V124
---
Entry stack: [V11, {0xd4, 0x156}, 0x0, S1, V245]
Stack pops: 2
Stack additions: []
Exit stack: [V11, {0xd4, 0x156}, 0x0]

================================

Block 0x1e1
[0x1e1:0x244]
---
Predecessors: [0x1da]
Successors: [0x245, 0x246]
---
0x1e1 PUSH1 0x1
0x1e3 PUSH1 0x4
0x1e5 PUSH1 0x0
0x1e7 CALLER
0x1e8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1fd AND
0x1fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x213 AND
0x214 DUP2
0x215 MSTORE
0x216 PUSH1 0x20
0x218 ADD
0x219 SWAP1
0x21a DUP2
0x21b MSTORE
0x21c PUSH1 0x20
0x21e ADD
0x21f PUSH1 0x0
0x221 SHA3
0x222 PUSH1 0x0
0x224 PUSH2 0x100
0x227 EXP
0x228 DUP2
0x229 SLOAD
0x22a DUP2
0x22b PUSH1 0xff
0x22d MUL
0x22e NOT
0x22f AND
0x230 SWAP1
0x231 DUP4
0x232 ISZERO
0x233 ISZERO
0x234 MUL
0x235 OR
0x236 SWAP1
0x237 SSTORE
0x238 POP
0x239 PUSH1 0x13
0x23b PUSH1 0xa
0x23d CALLVALUE
0x23e DUP2
0x23f ISZERO
0x240 ISZERO
0x241 PUSH2 0x246
0x244 JUMPI
---
0x1e1: V126 = 0x1
0x1e3: V127 = 0x4
0x1e5: V128 = 0x0
0x1e7: V129 = CALLER
0x1e8: V130 = 0xffffffffffffffffffffffffffffffffffffffff
0x1fd: V131 = AND 0xffffffffffffffffffffffffffffffffffffffff V129
0x1fe: V132 = 0xffffffffffffffffffffffffffffffffffffffff
0x213: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff V131
0x215: M[0x0] = V133
0x216: V134 = 0x20
0x218: V135 = ADD 0x20 0x0
0x21b: M[0x20] = 0x4
0x21c: V136 = 0x20
0x21e: V137 = ADD 0x20 0x20
0x21f: V138 = 0x0
0x221: V139 = SHA3 0x0 0x40
0x222: V140 = 0x0
0x224: V141 = 0x100
0x227: V142 = EXP 0x100 0x0
0x229: V143 = S[V139]
0x22b: V144 = 0xff
0x22d: V145 = MUL 0xff 0x1
0x22e: V146 = NOT 0xff
0x22f: V147 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V143
0x232: V148 = ISZERO 0x1
0x233: V149 = ISZERO 0x0
0x234: V150 = MUL 0x1 0x1
0x235: V151 = OR 0x1 V147
0x237: S[V139] = V151
0x239: V152 = 0x13
0x23b: V153 = 0xa
0x23d: V154 = CALLVALUE
0x23f: V155 = ISZERO 0xa
0x240: V156 = ISZERO 0x0
0x241: V157 = 0x246
0x244: JUMPI 0x246 0x1
---
Entry stack: [V11, {0xd4, 0x156}, 0x0]
Stack pops: 0
Stack additions: [0x13, 0xa, V154]
Exit stack: [V11, {0xd4, 0x156}, 0x0, 0x13, 0xa, V154]

================================

Block 0x245
[0x245:0x245]
---
Predecessors: [0x1e1]
Successors: []
---
0x245 INVALID
---
0x245: INVALID 
---
Entry stack: [V11, {0xd4, 0x156}, 0x0, 0x13, 0xa, V154]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0xd4, 0x156}, 0x0, 0x13, 0xa, V154]

================================

Block 0x246
[0x246:0x269]
---
Predecessors: [0x1e1]
Successors: [0x26a, 0x284]
---
0x246 JUMPDEST
0x247 DIV
0x248 MUL
0x249 SWAP1
0x24a POP
0x24b ADDRESS
0x24c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x261 AND
0x262 BALANCE
0x263 DUP2
0x264 GT
0x265 ISZERO
0x266 PUSH2 0x284
0x269 JUMPI
---
0x246: JUMPDEST 
0x247: V158 = DIV V154 0xa
0x248: V159 = MUL V158 0x13
0x24b: V160 = ADDRESS
0x24c: V161 = 0xffffffffffffffffffffffffffffffffffffffff
0x261: V162 = AND 0xffffffffffffffffffffffffffffffffffffffff V160
0x262: V163 = BALANCE V162
0x264: V164 = GT V159 V163
0x265: V165 = ISZERO V164
0x266: V166 = 0x284
0x269: JUMPI 0x284 V165
---
Entry stack: [V11, {0xd4, 0x156}, 0x0, 0x13, 0xa, V154]
Stack pops: 4
Stack additions: [V159]
Exit stack: [V11, {0xd4, 0x156}, V159]

================================

Block 0x26a
[0x26a:0x283]
---
Predecessors: [0x246]
Successors: [0x284]
---
0x26a ADDRESS
0x26b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x280 AND
0x281 BALANCE
0x282 SWAP1
0x283 POP
---
0x26a: V167 = ADDRESS
0x26b: V168 = 0xffffffffffffffffffffffffffffffffffffffff
0x280: V169 = AND 0xffffffffffffffffffffffffffffffffffffffff V167
0x281: V170 = BALANCE V169
---
Entry stack: [V11, {0xd4, 0x156}, V159]
Stack pops: 1
Stack additions: [V170]
Exit stack: [V11, {0xd4, 0x156}, V170]

================================

Block 0x284
[0x284:0x2bf]
---
Predecessors: [0x246, 0x26a]
Successors: [0x2c0, 0x2c4]
---
0x284 JUMPDEST
0x285 CALLER
0x286 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x29b AND
0x29c PUSH2 0x8fc
0x29f DUP3
0x2a0 SWAP1
0x2a1 DUP2
0x2a2 ISZERO
0x2a3 MUL
0x2a4 SWAP1
0x2a5 PUSH1 0x40
0x2a7 MLOAD
0x2a8 PUSH1 0x0
0x2aa PUSH1 0x40
0x2ac MLOAD
0x2ad DUP1
0x2ae DUP4
0x2af SUB
0x2b0 DUP2
0x2b1 DUP6
0x2b2 DUP9
0x2b3 DUP9
0x2b4 CALL
0x2b5 SWAP4
0x2b6 POP
0x2b7 POP
0x2b8 POP
0x2b9 POP
0x2ba ISZERO
0x2bb ISZERO
0x2bc PUSH2 0x2c4
0x2bf JUMPI
---
0x284: JUMPDEST 
0x285: V171 = CALLER
0x286: V172 = 0xffffffffffffffffffffffffffffffffffffffff
0x29b: V173 = AND 0xffffffffffffffffffffffffffffffffffffffff V171
0x29c: V174 = 0x8fc
0x2a2: V175 = ISZERO S0
0x2a3: V176 = MUL V175 0x8fc
0x2a5: V177 = 0x40
0x2a7: V178 = M[0x40]
0x2a8: V179 = 0x0
0x2aa: V180 = 0x40
0x2ac: V181 = M[0x40]
0x2af: V182 = SUB V178 V181
0x2b4: V183 = CALL V176 V173 S0 V181 V182 V181 0x0
0x2ba: V184 = ISZERO V183
0x2bb: V185 = ISZERO V184
0x2bc: V186 = 0x2c4
0x2bf: JUMPI 0x2c4 V185
---
Entry stack: [V11, {0xd4, 0x156}, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, {0xd4, 0x156}, S0]

================================

Block 0x2c0
[0x2c0:0x2c3]
---
Predecessors: [0x284]
Successors: []
---
0x2c0 PUSH1 0x0
0x2c2 DUP1
0x2c3 REVERT
---
0x2c0: V187 = 0x0
0x2c3: REVERT 0x0 0x0
---
Entry stack: [V11, {0xd4, 0x156}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0xd4, 0x156}, S0]

================================

Block 0x2c4
[0x2c4:0x2c4]
---
Predecessors: [0x284]
Successors: [0x2c5]
---
0x2c4 JUMPDEST
---
0x2c4: JUMPDEST 
---
Entry stack: [V11, {0xd4, 0x156}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0xd4, 0x156}, S0]

================================

Block 0x2c5
[0x2c5:0x2d3]
---
Predecessors: [0x1da, 0x2c4]
Successors: [0x2d4, 0x314]
---
0x2c5 JUMPDEST
0x2c6 PUSH2 0x3e8
0x2c9 PUSH1 0x2
0x2cb SLOAD
0x2cc NUMBER
0x2cd SUB
0x2ce GT
0x2cf ISZERO
0x2d0 PUSH2 0x314
0x2d3 JUMPI
---
0x2c5: JUMPDEST 
0x2c6: V188 = 0x3e8
0x2c9: V189 = 0x2
0x2cb: V190 = S[0x2]
0x2cc: V191 = NUMBER
0x2cd: V192 = SUB V191 V190
0x2ce: V193 = GT V192 0x3e8
0x2cf: V194 = ISZERO V193
0x2d0: V195 = 0x314
0x2d3: JUMPI 0x314 V194
---
Entry stack: [V11, {0xd4, 0x156}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0xd4, 0x156}, S0]

================================

Block 0x2d4
[0x2d4:0x312]
---
Predecessors: [0x2c5]
Successors: [0x525]
---
0x2d4 PUSH2 0x313
0x2d7 PUSH1 0x80
0x2d9 PUSH1 0x40
0x2db MLOAD
0x2dc SWAP1
0x2dd DUP2
0x2de ADD
0x2df PUSH1 0x40
0x2e1 MSTORE
0x2e2 DUP1
0x2e3 COINBASE
0x2e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f9 AND
0x2fa DUP2
0x2fb MSTORE
0x2fc PUSH1 0x20
0x2fe ADD
0x2ff DIFFICULTY
0x300 DUP2
0x301 MSTORE
0x302 PUSH1 0x20
0x304 ADD
0x305 GASLIMIT
0x306 DUP2
0x307 MSTORE
0x308 PUSH1 0x20
0x30a ADD
0x30b TIMESTAMP
0x30c DUP2
0x30d MSTORE
0x30e POP
0x30f PUSH2 0x525
0x312 JUMP
---
0x2d4: V196 = 0x313
0x2d7: V197 = 0x80
0x2d9: V198 = 0x40
0x2db: V199 = M[0x40]
0x2de: V200 = ADD V199 0x80
0x2df: V201 = 0x40
0x2e1: M[0x40] = V200
0x2e3: V202 = COINBASE
0x2e4: V203 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f9: V204 = AND 0xffffffffffffffffffffffffffffffffffffffff V202
0x2fb: M[V199] = V204
0x2fc: V205 = 0x20
0x2fe: V206 = ADD 0x20 V199
0x2ff: V207 = DIFFICULTY
0x301: M[V206] = V207
0x302: V208 = 0x20
0x304: V209 = ADD 0x20 V206
0x305: V210 = GASLIMIT
0x307: M[V209] = V210
0x308: V211 = 0x20
0x30a: V212 = ADD 0x20 V209
0x30b: V213 = TIMESTAMP
0x30d: M[V212] = V213
0x30f: V214 = 0x525
0x312: JUMP 0x525
---
Entry stack: [V11, {0xd4, 0x156}, S0]
Stack pops: 0
Stack additions: [0x313, V199]
Exit stack: [V11, {0xd4, 0x156}, S0, 0x313, V199]

================================

Block 0x313
[0x313:0x313]
---
Predecessors: [0x525]
Successors: [0x314]
---
0x313 JUMPDEST
---
0x313: JUMPDEST 
---
Entry stack: [V11, {0xd4, 0x14c, 0x156}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0xd4, 0x14c, 0x156}, S0]

================================

Block 0x314
[0x314:0x314]
---
Predecessors: [0x2c5, 0x313]
Successors: [0x315]
---
0x314 JUMPDEST
---
0x314: JUMPDEST 
---
Entry stack: [V11, {0xd4, 0x14c, 0x156}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0xd4, 0x14c, 0x156}, S0]

================================

Block 0x315
[0x315:0x317]
---
Predecessors: [0x16b, 0x314]
Successors: [0xd4, 0x14c, 0x156]
---
0x315 JUMPDEST
0x316 POP
0x317 JUMP
---
0x315: JUMPDEST 
0x317: JUMP {0xd4, 0x14c, 0x156}
---
Entry stack: [V11, {0xd4, 0x14c, 0x156}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x318
[0x318:0x35e]
---
Predecessors: [0xe2, 0x1ce]
Successors: [0x35f, 0x360]
---
0x318 JUMPDEST
0x319 PUSH1 0x0
0x31b PUSH1 0x2
0x31d DUP3
0x31e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x333 AND
0x334 PUSH1 0x1
0x336 SLOAD
0x337 PUSH1 0x40
0x339 MLOAD
0x33a DUP1
0x33b DUP4
0x33c DUP2
0x33d MSTORE
0x33e PUSH1 0x20
0x340 ADD
0x341 DUP3
0x342 DUP2
0x343 MSTORE
0x344 PUSH1 0x20
0x346 ADD
0x347 SWAP3
0x348 POP
0x349 POP
0x34a POP
0x34b PUSH1 0x40
0x34d MLOAD
0x34e DUP1
0x34f SWAP2
0x350 SUB
0x351 SWAP1
0x352 SHA3
0x353 PUSH1 0x0
0x355 PUSH1 0x20
0x357 DUP2
0x358 LT
0x359 ISZERO
0x35a ISZERO
0x35b PUSH2 0x360
0x35e JUMPI
---
0x318: JUMPDEST 
0x319: V215 = 0x0
0x31b: V216 = 0x2
0x31e: V217 = 0xffffffffffffffffffffffffffffffffffffffff
0x333: V218 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x334: V219 = 0x1
0x336: V220 = S[0x1]
0x337: V221 = 0x40
0x339: V222 = M[0x40]
0x33d: M[V222] = V218
0x33e: V223 = 0x20
0x340: V224 = ADD 0x20 V222
0x343: M[V224] = V220
0x344: V225 = 0x20
0x346: V226 = ADD 0x20 V224
0x34b: V227 = 0x40
0x34d: V228 = M[0x40]
0x350: V229 = SUB V226 V228
0x352: V230 = SHA3 V228 V229
0x353: V231 = 0x0
0x355: V232 = 0x20
0x358: V233 = LT 0x0 0x20
0x359: V234 = ISZERO 0x1
0x35a: V235 = ISZERO 0x0
0x35b: V236 = 0x360
0x35e: JUMPI 0x360 0x1
---
Entry stack: [V11, {0xd4, 0x156}, 0x0, S2, {0x10e, 0x1da}, S0]
Stack pops: 1
Stack additions: [S0, 0x0, 0x2, V230, 0x0]
Exit stack: [V11, {0xd4, 0x156}, 0x0, S2, {0x10e, 0x1da}, S0, 0x0, 0x2, V230, 0x0]

================================

Block 0x35f
[0x35f:0x35f]
---
Predecessors: [0x318]
Successors: []
---
0x35f INVALID
---
0x35f: INVALID 
---
Entry stack: [V11, {0xd4, 0x156}, 0x0, S6, {0x10e, 0x1da}, S4, 0x0, 0x2, V230, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0xd4, 0x156}, 0x0, S6, {0x10e, 0x1da}, S4, 0x0, 0x2, V230, 0x0]

================================

Block 0x360
[0x360:0x3ad]
---
Predecessors: [0x318]
Successors: [0x3ae, 0x3af]
---
0x360 JUMPDEST
0x361 BYTE
0x362 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x383 MUL
0x384 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x3a5 SWAP1
0x3a6 DIV
0x3a7 DUP2
0x3a8 ISZERO
0x3a9 ISZERO
0x3aa PUSH2 0x3af
0x3ad JUMPI
---
0x360: JUMPDEST 
0x361: V237 = BYTE 0x0 V230
0x362: V238 = 0x100000000000000000000000000000000000000000000000000000000000000
0x383: V239 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V237
0x384: V240 = 0x100000000000000000000000000000000000000000000000000000000000000
0x3a6: V241 = DIV V239 0x100000000000000000000000000000000000000000000000000000000000000
0x3a8: V242 = ISZERO 0x2
0x3a9: V243 = ISZERO 0x0
0x3aa: V244 = 0x3af
0x3ad: JUMPI 0x3af 0x1
---
Entry stack: [V11, {0xd4, 0x156}, 0x0, S6, {0x10e, 0x1da}, S4, 0x0, 0x2, V230, 0x0]
Stack pops: 3
Stack additions: [S2, V241]
Exit stack: [V11, {0xd4, 0x156}, 0x0, S6, {0x10e, 0x1da}, S4, 0x0, 0x2, V241]

================================

Block 0x3ae
[0x3ae:0x3ae]
---
Predecessors: [0x360]
Successors: []
---
0x3ae INVALID
---
0x3ae: INVALID 
---
Entry stack: [V11, {0xd4, 0x156}, 0x0, S5, {0x10e, 0x1da}, S3, 0x0, 0x2, V241]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0xd4, 0x156}, 0x0, S5, {0x10e, 0x1da}, S3, 0x0, 0x2, V241]

================================

Block 0x3af
[0x3af:0x3b6]
---
Predecessors: [0x360]
Successors: [0x10e, 0x1da]
---
0x3af JUMPDEST
0x3b0 MOD
0x3b1 SWAP1
0x3b2 POP
0x3b3 SWAP2
0x3b4 SWAP1
0x3b5 POP
0x3b6 JUMP
---
0x3af: JUMPDEST 
0x3b0: V245 = MOD V241 0x2
0x3b6: JUMP {0x10e, 0x1da}
---
Entry stack: [V11, {0xd4, 0x156}, 0x0, S5, {0x10e, 0x1da}, S3, 0x0, 0x2, V241]
Stack pops: 5
Stack additions: [V245]
Exit stack: [V11, {0xd4, 0x156}, 0x0, S5, V245]

================================

Block 0x3b7
[0x3b7:0x40d]
---
Predecessors: [0x12f]
Successors: [0x40e, 0x412]
---
0x3b7 JUMPDEST
0x3b8 PUSH1 0x0
0x3ba DUP1
0x3bb SWAP1
0x3bc SLOAD
0x3bd SWAP1
0x3be PUSH2 0x100
0x3c1 EXP
0x3c2 SWAP1
0x3c3 DIV
0x3c4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d9 AND
0x3da PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ef AND
0x3f0 CALLER
0x3f1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x406 AND
0x407 EQ
0x408 ISZERO
0x409 ISZERO
0x40a PUSH2 0x412
0x40d JUMPI
---
0x3b7: JUMPDEST 
0x3b8: V246 = 0x0
0x3bc: V247 = S[0x0]
0x3be: V248 = 0x100
0x3c1: V249 = EXP 0x100 0x0
0x3c3: V250 = DIV V247 0x1
0x3c4: V251 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d9: V252 = AND 0xffffffffffffffffffffffffffffffffffffffff V250
0x3da: V253 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ef: V254 = AND 0xffffffffffffffffffffffffffffffffffffffff V252
0x3f0: V255 = CALLER
0x3f1: V256 = 0xffffffffffffffffffffffffffffffffffffffff
0x406: V257 = AND 0xffffffffffffffffffffffffffffffffffffffff V255
0x407: V258 = EQ V257 V254
0x408: V259 = ISZERO V258
0x409: V260 = ISZERO V259
0x40a: V261 = 0x412
0x40d: JUMPI 0x412 V260
---
Entry stack: [V11, 0x137]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x137]

================================

Block 0x40e
[0x40e:0x411]
---
Predecessors: [0x3b7]
Successors: []
---
0x40e PUSH1 0x0
0x410 DUP1
0x411 REVERT
---
0x40e: V262 = 0x0
0x411: REVERT 0x0 0x0
---
Entry stack: [V11, 0x137]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x137]

================================

Block 0x412
[0x412:0x42a]
---
Predecessors: [0x3b7]
Successors: []
---
0x412 JUMPDEST
0x413 CALLER
0x414 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x429 AND
0x42a SELFDESTRUCT
---
0x412: JUMPDEST 
0x413: V263 = CALLER
0x414: V264 = 0xffffffffffffffffffffffffffffffffffffffff
0x429: V265 = AND 0xffffffffffffffffffffffffffffffffffffffff V263
0x42a: SELFDESTRUCT V265
---
Entry stack: [V11, 0x137]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x137]

================================

Block 0x42b
[0x42b:0x483]
---
Predecessors: [0x144]
Successors: [0x484, 0x488]
---
0x42b JUMPDEST
0x42c PUSH1 0x0
0x42e DUP1
0x42f PUSH1 0x0
0x431 SWAP1
0x432 SLOAD
0x433 SWAP1
0x434 PUSH2 0x100
0x437 EXP
0x438 SWAP1
0x439 DIV
0x43a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x44f AND
0x450 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x465 AND
0x466 CALLER
0x467 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x47c AND
0x47d EQ
0x47e ISZERO
0x47f ISZERO
0x480 PUSH2 0x488
0x483 JUMPI
---
0x42b: JUMPDEST 
0x42c: V266 = 0x0
0x42f: V267 = 0x0
0x432: V268 = S[0x0]
0x434: V269 = 0x100
0x437: V270 = EXP 0x100 0x0
0x439: V271 = DIV V268 0x1
0x43a: V272 = 0xffffffffffffffffffffffffffffffffffffffff
0x44f: V273 = AND 0xffffffffffffffffffffffffffffffffffffffff V271
0x450: V274 = 0xffffffffffffffffffffffffffffffffffffffff
0x465: V275 = AND 0xffffffffffffffffffffffffffffffffffffffff V273
0x466: V276 = CALLER
0x467: V277 = 0xffffffffffffffffffffffffffffffffffffffff
0x47c: V278 = AND 0xffffffffffffffffffffffffffffffffffffffff V276
0x47d: V279 = EQ V278 V275
0x47e: V280 = ISZERO V279
0x47f: V281 = ISZERO V280
0x480: V282 = 0x488
0x483: JUMPI 0x488 V281
---
Entry stack: [V11, 0x14c]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x14c, 0x0]

================================

Block 0x484
[0x484:0x487]
---
Predecessors: [0x42b]
Successors: []
---
0x484 PUSH1 0x0
0x486 DUP1
0x487 REVERT
---
0x484: V283 = 0x0
0x487: REVERT 0x0 0x0
---
Entry stack: [V11, 0x14c, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x14c, 0x0]

================================

Block 0x488
[0x488:0x521]
---
Predecessors: [0x42b]
Successors: [0x525]
---
0x488 JUMPDEST
0x489 CALLER
0x48a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x49f AND
0x4a0 DUP2
0x4a1 PUSH1 0x0
0x4a3 ADD
0x4a4 DUP2
0x4a5 SWAP1
0x4a6 SSTORE
0x4a7 POP
0x4a8 PUSH1 0x1
0x4aa NUMBER
0x4ab SUB
0x4ac BLOCKHASH
0x4ad PUSH1 0x1
0x4af SWAP1
0x4b0 DIV
0x4b1 DUP2
0x4b2 PUSH1 0x1
0x4b4 ADD
0x4b5 DUP2
0x4b6 SWAP1
0x4b7 SSTORE
0x4b8 POP
0x4b9 COINBASE
0x4ba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4cf AND
0x4d0 DIFFICULTY
0x4d1 MUL
0x4d2 DUP2
0x4d3 PUSH1 0x2
0x4d5 ADD
0x4d6 DUP2
0x4d7 SWAP1
0x4d8 SSTORE
0x4d9 POP
0x4da PUSH1 0x7
0x4dc GASPRICE
0x4dd MUL
0x4de DUP2
0x4df PUSH1 0x3
0x4e1 ADD
0x4e2 DUP2
0x4e3 SWAP1
0x4e4 SSTORE
0x4e5 POP
0x4e6 PUSH2 0x522
0x4e9 DUP2
0x4ea PUSH1 0x80
0x4ec PUSH1 0x40
0x4ee MLOAD
0x4ef SWAP1
0x4f0 DUP2
0x4f1 ADD
0x4f2 PUSH1 0x40
0x4f4 MSTORE
0x4f5 SWAP1
0x4f6 DUP2
0x4f7 PUSH1 0x0
0x4f9 DUP3
0x4fa ADD
0x4fb SLOAD
0x4fc DUP2
0x4fd MSTORE
0x4fe PUSH1 0x20
0x500 ADD
0x501 PUSH1 0x1
0x503 DUP3
0x504 ADD
0x505 SLOAD
0x506 DUP2
0x507 MSTORE
0x508 PUSH1 0x20
0x50a ADD
0x50b PUSH1 0x2
0x50d DUP3
0x50e ADD
0x50f SLOAD
0x510 DUP2
0x511 MSTORE
0x512 PUSH1 0x20
0x514 ADD
0x515 PUSH1 0x3
0x517 DUP3
0x518 ADD
0x519 SLOAD
0x51a DUP2
0x51b MSTORE
0x51c POP
0x51d POP
0x51e PUSH2 0x525
0x521 JUMP
---
0x488: JUMPDEST 
0x489: V284 = CALLER
0x48a: V285 = 0xffffffffffffffffffffffffffffffffffffffff
0x49f: V286 = AND 0xffffffffffffffffffffffffffffffffffffffff V284
0x4a1: V287 = 0x0
0x4a3: V288 = ADD 0x0 0x0
0x4a6: S[0x0] = V286
0x4a8: V289 = 0x1
0x4aa: V290 = NUMBER
0x4ab: V291 = SUB V290 0x1
0x4ac: V292 = BLOCKHASH V291
0x4ad: V293 = 0x1
0x4b0: V294 = DIV V292 0x1
0x4b2: V295 = 0x1
0x4b4: V296 = ADD 0x1 0x0
0x4b7: S[0x1] = V294
0x4b9: V297 = COINBASE
0x4ba: V298 = 0xffffffffffffffffffffffffffffffffffffffff
0x4cf: V299 = AND 0xffffffffffffffffffffffffffffffffffffffff V297
0x4d0: V300 = DIFFICULTY
0x4d1: V301 = MUL V300 V299
0x4d3: V302 = 0x2
0x4d5: V303 = ADD 0x2 0x0
0x4d8: S[0x2] = V301
0x4da: V304 = 0x7
0x4dc: V305 = GASPRICE
0x4dd: V306 = MUL V305 0x7
0x4df: V307 = 0x3
0x4e1: V308 = ADD 0x3 0x0
0x4e4: S[0x3] = V306
0x4e6: V309 = 0x522
0x4ea: V310 = 0x80
0x4ec: V311 = 0x40
0x4ee: V312 = M[0x40]
0x4f1: V313 = ADD V312 0x80
0x4f2: V314 = 0x40
0x4f4: M[0x40] = V313
0x4f7: V315 = 0x0
0x4fa: V316 = ADD 0x0 0x0
0x4fb: V317 = S[0x0]
0x4fd: M[V312] = V317
0x4fe: V318 = 0x20
0x500: V319 = ADD 0x20 V312
0x501: V320 = 0x1
0x504: V321 = ADD 0x0 0x1
0x505: V322 = S[0x1]
0x507: M[V319] = V322
0x508: V323 = 0x20
0x50a: V324 = ADD 0x20 V319
0x50b: V325 = 0x2
0x50e: V326 = ADD 0x0 0x2
0x50f: V327 = S[0x2]
0x511: M[V324] = V327
0x512: V328 = 0x20
0x514: V329 = ADD 0x20 V324
0x515: V330 = 0x3
0x518: V331 = ADD 0x0 0x3
0x519: V332 = S[0x3]
0x51b: M[V329] = V332
0x51e: V333 = 0x525
0x521: JUMP 0x525
---
Entry stack: [V11, 0x14c, 0x0]
Stack pops: 1
Stack additions: [S0, 0x522, V312]
Exit stack: [V11, 0x14c, 0x0, 0x522, V312]

================================

Block 0x522
[0x522:0x524]
---
Predecessors: [0x525]
Successors: [0xd4, 0x14c, 0x156]
---
0x522 JUMPDEST
0x523 POP
0x524 JUMP
---
0x522: JUMPDEST 
0x524: JUMP {0xd4, 0x14c, 0x156}
---
Entry stack: [V11, {0xd4, 0x14c, 0x156}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x525
[0x525:0x576]
---
Predecessors: [0x2d4, 0x488]
Successors: [0x313, 0x522]
---
0x525 JUMPDEST
0x526 DUP1
0x527 PUSH1 0x0
0x529 ADD
0x52a MLOAD
0x52b DUP2
0x52c PUSH1 0x20
0x52e ADD
0x52f MLOAD
0x530 DUP3
0x531 PUSH1 0x40
0x533 ADD
0x534 MLOAD
0x535 DUP4
0x536 PUSH1 0x60
0x538 ADD
0x539 MLOAD
0x53a PUSH1 0x40
0x53c MLOAD
0x53d DUP1
0x53e DUP6
0x53f DUP2
0x540 MSTORE
0x541 PUSH1 0x20
0x543 ADD
0x544 DUP5
0x545 DUP2
0x546 MSTORE
0x547 PUSH1 0x20
0x549 ADD
0x54a DUP4
0x54b DUP2
0x54c MSTORE
0x54d PUSH1 0x20
0x54f ADD
0x550 DUP3
0x551 DUP2
0x552 MSTORE
0x553 PUSH1 0x20
0x555 ADD
0x556 SWAP5
0x557 POP
0x558 POP
0x559 POP
0x55a POP
0x55b POP
0x55c PUSH1 0x40
0x55e MLOAD
0x55f DUP1
0x560 SWAP2
0x561 SUB
0x562 SWAP1
0x563 SHA3
0x564 PUSH1 0x1
0x566 SWAP1
0x567 DIV
0x568 PUSH1 0x1
0x56a DUP2
0x56b SWAP1
0x56c SSTORE
0x56d POP
0x56e NUMBER
0x56f PUSH1 0x2
0x571 DUP2
0x572 SWAP1
0x573 SSTORE
0x574 POP
0x575 POP
0x576 JUMP
---
0x525: JUMPDEST 
0x527: V334 = 0x0
0x529: V335 = ADD 0x0 S0
0x52a: V336 = M[V335]
0x52c: V337 = 0x20
0x52e: V338 = ADD 0x20 S0
0x52f: V339 = M[V338]
0x531: V340 = 0x40
0x533: V341 = ADD 0x40 S0
0x534: V342 = M[V341]
0x536: V343 = 0x60
0x538: V344 = ADD 0x60 S0
0x539: V345 = M[V344]
0x53a: V346 = 0x40
0x53c: V347 = M[0x40]
0x540: M[V347] = V336
0x541: V348 = 0x20
0x543: V349 = ADD 0x20 V347
0x546: M[V349] = V339
0x547: V350 = 0x20
0x549: V351 = ADD 0x20 V349
0x54c: M[V351] = V342
0x54d: V352 = 0x20
0x54f: V353 = ADD 0x20 V351
0x552: M[V353] = V345
0x553: V354 = 0x20
0x555: V355 = ADD 0x20 V353
0x55c: V356 = 0x40
0x55e: V357 = M[0x40]
0x561: V358 = SUB V355 V357
0x563: V359 = SHA3 V357 V358
0x564: V360 = 0x1
0x567: V361 = DIV V359 0x1
0x568: V362 = 0x1
0x56c: S[0x1] = V361
0x56e: V363 = NUMBER
0x56f: V364 = 0x2
0x573: S[0x2] = V363
0x576: JUMP {0x313, 0x522}
---
Entry stack: [V11, {0xd4, 0x14c, 0x156}, S2, {0x313, 0x522}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11, {0xd4, 0x14c, 0x156}, S2]

================================

Block 0x577
[0x577:0x5ad]
---
Predecessors: []
Successors: []
---
0x577 STOP
0x578 LOG1
0x579 PUSH6 0x627a7a723058
0x580 SHA3
0x581 MOD
0x582 MISSING 0x23
0x583 STOP
0x584 SWAP13
0x585 MISSING 0xd0
0x586 MISSING 0xd5
0x587 MISSING 0xba
0x588 MISSING 0xcf
0x589 MISSING 0xb7
0x58a MISSING 0xd3
0x58b MISSING 0x27
0x58c MISSING 0xbd
0x58d PUSH32 0xd38072f5eb5012f383e514e05bcbdf37954c170029
---
0x577: STOP 
0x578: LOG S0 S1 S2
0x579: V365 = 0x627a7a723058
0x580: V366 = SHA3 0x627a7a723058 S3
0x581: V367 = MOD V366 S4
0x582: MISSING 0x23
0x583: STOP 
0x585: MISSING 0xd0
0x586: MISSING 0xd5
0x587: MISSING 0xba
0x588: MISSING 0xcf
0x589: MISSING 0xb7
0x58a: MISSING 0xd3
0x58b: MISSING 0x27
0x58c: MISSING 0xbd
0x58d: V368 = 0xd38072f5eb5012f383e514e05bcbdf37954c170029
---
Entry stack: []
Stack pops: 0
Stack additions: [V367, S13, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S0, 0xd38072f5eb5012f383e514e05bcbdf37954c170029]
Exit stack: []

================================

Function 0:
Public function signature: 0x37354a68
Entry block: 0xd7
Exit block: 0x10e
Body: 0xd7, 0xde, 0xe2, 0x10e

Function 1:
Public function signature: 0x41c0e1b5
Entry block: 0x124
Exit block: 0x412
Body: 0x124, 0x12b, 0x12f, 0x3b7, 0x40e, 0x412

Function 2:
Public function signature: 0x80ca7aec
Entry block: 0x139
Exit block: 0xd5
Body: 0xd4, 0xd5, 0x139, 0x140, 0x144, 0x14c, 0x156, 0x42b, 0x484, 0x488, 0x522

Function 3:
Public function signature: 0xd11711a2
Entry block: 0x14e
Exit block: 0x156
Body: 0x14e, 0x156

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0xd5
Body: 0x62, 0x75, 0xc7, 0xcd, 0xd4, 0xd5

Function 5:
Private function
Entry block: 0x158
Exit block: 0x522
Body: 0x158, 0x16b, 0x16f, 0x1ce, 0x1da, 0x1e1, 0x246, 0x26a, 0x284, 0x2c4, 0x2c5, 0x2d4, 0x313, 0x314, 0x315

Function 6:
Private function
Entry block: 0x318
Exit block: 0x3af
Body: 0x318, 0x360, 0x3af

