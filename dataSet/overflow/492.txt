Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6d]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6d
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6d
0xc: JUMPI 0x6d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x6f]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x1f491389
0x3c EQ
0x3d PUSH2 0x6f
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x1f491389
0x3c: V13 = EQ 0x1f491389 V11
0x3d: V14 = 0x6f
0x40: JUMPI 0x6f V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x148]
---
0x41 DUP1
0x42 PUSH4 0x56049a86
0x47 EQ
0x48 PUSH2 0x148
0x4b JUMPI
---
0x42: V15 = 0x56049a86
0x47: V16 = EQ 0x56049a86 V11
0x48: V17 = 0x148
0x4b: JUMPI 0x148 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x1d8]
---
0x4c DUP1
0x4d PUSH4 0x718e6302
0x52 EQ
0x53 PUSH2 0x1d8
0x56 JUMPI
---
0x4d: V18 = 0x718e6302
0x52: V19 = EQ 0x718e6302 V11
0x53: V20 = 0x1d8
0x56: JUMPI 0x1d8 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x234]
---
0x57 DUP1
0x58 PUSH4 0x85bb7d69
0x5d EQ
0x5e PUSH2 0x234
0x61 JUMPI
---
0x58: V21 = 0x85bb7d69
0x5d: V22 = EQ 0x85bb7d69 V11
0x5e: V23 = 0x234
0x61: JUMPI 0x234 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x2c4]
---
0x62 DUP1
0x63 PUSH4 0x900a974e
0x68 EQ
0x69 PUSH2 0x2c4
0x6c JUMPI
---
0x63: V24 = 0x900a974e
0x68: V25 = EQ 0x900a974e V11
0x69: V26 = 0x2c4
0x6c: JUMPI 0x2c4 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x6e]
---
Predecessors: [0x0, 0x62]
Successors: []
---
0x6d JUMPDEST
0x6e STOP
---
0x6d: JUMPDEST 
0x6e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6f
[0x6f:0x76]
---
Predecessors: [0xd]
Successors: [0x77, 0x7b]
---
0x6f JUMPDEST
0x70 CALLVALUE
0x71 DUP1
0x72 ISZERO
0x73 PUSH2 0x7b
0x76 JUMPI
---
0x6f: JUMPDEST 
0x70: V27 = CALLVALUE
0x72: V28 = ISZERO V27
0x73: V29 = 0x7b
0x76: JUMPI 0x7b V28
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V27]
Exit stack: [V11, V27]

================================

Block 0x77
[0x77:0x7a]
---
Predecessors: [0x6f]
Successors: []
---
0x77 PUSH1 0x0
0x79 DUP1
0x7a REVERT
---
0x77: V30 = 0x0
0x7a: REVERT 0x0 0x0
---
Entry stack: [V11, V27]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V27]

================================

Block 0x7b
[0x7b:0x99]
---
Predecessors: [0x6f]
Successors: [0x32d]
---
0x7b JUMPDEST
0x7c POP
0x7d PUSH2 0x9a
0x80 PUSH1 0x4
0x82 DUP1
0x83 CALLDATASIZE
0x84 SUB
0x85 DUP2
0x86 ADD
0x87 SWAP1
0x88 DUP1
0x89 DUP1
0x8a CALLDATALOAD
0x8b SWAP1
0x8c PUSH1 0x20
0x8e ADD
0x8f SWAP1
0x90 SWAP3
0x91 SWAP2
0x92 SWAP1
0x93 POP
0x94 POP
0x95 POP
0x96 PUSH2 0x32d
0x99 JUMP
---
0x7b: JUMPDEST 
0x7d: V31 = 0x9a
0x80: V32 = 0x4
0x83: V33 = CALLDATASIZE
0x84: V34 = SUB V33 0x4
0x86: V35 = ADD 0x4 V34
0x8a: V36 = CALLDATALOAD 0x4
0x8c: V37 = 0x20
0x8e: V38 = ADD 0x20 0x4
0x96: V39 = 0x32d
0x99: JUMP 0x32d
---
Entry stack: [V11, V27]
Stack pops: 1
Stack additions: [0x9a, V36]
Exit stack: [V11, 0x9a, V36]

================================

Block 0x9a
[0x9a:0xf0]
---
Predecessors: [0x40e]
Successors: [0xf1]
---
0x9a JUMPDEST
0x9b PUSH1 0x40
0x9d MLOAD
0x9e DUP1
0x9f DUP4
0xa0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb5 AND
0xb6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcb AND
0xcc DUP2
0xcd MSTORE
0xce PUSH1 0x20
0xd0 ADD
0xd1 DUP1
0xd2 PUSH1 0x20
0xd4 ADD
0xd5 DUP3
0xd6 DUP2
0xd7 SUB
0xd8 DUP3
0xd9 MSTORE
0xda DUP4
0xdb DUP2
0xdc DUP2
0xdd MLOAD
0xde DUP2
0xdf MSTORE
0xe0 PUSH1 0x20
0xe2 ADD
0xe3 SWAP2
0xe4 POP
0xe5 DUP1
0xe6 MLOAD
0xe7 SWAP1
0xe8 PUSH1 0x20
0xea ADD
0xeb SWAP1
0xec DUP1
0xed DUP4
0xee DUP4
0xef PUSH1 0x0
---
0x9a: JUMPDEST 
0x9b: V40 = 0x40
0x9d: V41 = M[0x40]
0xa0: V42 = 0xffffffffffffffffffffffffffffffffffffffff
0xb5: V43 = AND 0xffffffffffffffffffffffffffffffffffffffff V261
0xb6: V44 = 0xffffffffffffffffffffffffffffffffffffffff
0xcb: V45 = AND 0xffffffffffffffffffffffffffffffffffffffff V43
0xcd: M[V41] = V45
0xce: V46 = 0x20
0xd0: V47 = ADD 0x20 V41
0xd2: V48 = 0x20
0xd4: V49 = ADD 0x20 V47
0xd7: V50 = SUB V49 V41
0xd9: M[V47] = V50
0xdd: V51 = M[V283]
0xdf: M[V49] = V51
0xe0: V52 = 0x20
0xe2: V53 = ADD 0x20 V49
0xe6: V54 = M[V283]
0xe8: V55 = 0x20
0xea: V56 = ADD 0x20 V283
0xef: V57 = 0x0
---
Entry stack: [V11, 0x9a, V261, V283]
Stack pops: 2
Stack additions: [S1, S0, V41, V47, V53, V56, V54, V54, V53, V56, 0x0]
Exit stack: [V11, 0x9a, V261, V283, V41, V47, V53, V56, V54, V54, V53, V56, 0x0]

================================

Block 0xf1
[0xf1:0xf9]
---
Predecessors: [0x9a, 0xfa]
Successors: [0xfa, 0x10c]
---
0xf1 JUMPDEST
0xf2 DUP4
0xf3 DUP2
0xf4 LT
0xf5 ISZERO
0xf6 PUSH2 0x10c
0xf9 JUMPI
---
0xf1: JUMPDEST 
0xf4: V58 = LT S0 V54
0xf5: V59 = ISZERO V58
0xf6: V60 = 0x10c
0xf9: JUMPI 0x10c V59
---
Entry stack: [V11, 0x9a, V261, V283, V41, V47, V53, V56, V54, V54, V53, V56, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x9a, V261, V283, V41, V47, V53, V56, V54, V54, V53, V56, S0]

================================

Block 0xfa
[0xfa:0x10b]
---
Predecessors: [0xf1]
Successors: [0xf1]
---
0xfa DUP1
0xfb DUP3
0xfc ADD
0xfd MLOAD
0xfe DUP2
0xff DUP5
0x100 ADD
0x101 MSTORE
0x102 PUSH1 0x20
0x104 DUP2
0x105 ADD
0x106 SWAP1
0x107 POP
0x108 PUSH2 0xf1
0x10b JUMP
---
0xfc: V61 = ADD V56 S0
0xfd: V62 = M[V61]
0x100: V63 = ADD V53 S0
0x101: M[V63] = V62
0x102: V64 = 0x20
0x105: V65 = ADD S0 0x20
0x108: V66 = 0xf1
0x10b: JUMP 0xf1
---
Entry stack: [V11, 0x9a, V261, V283, V41, V47, V53, V56, V54, V54, V53, V56, S0]
Stack pops: 3
Stack additions: [S2, S1, V65]
Exit stack: [V11, 0x9a, V261, V283, V41, V47, V53, V56, V54, V54, V53, V56, V65]

================================

Block 0x10c
[0x10c:0x11f]
---
Predecessors: [0xf1]
Successors: [0x120, 0x139]
---
0x10c JUMPDEST
0x10d POP
0x10e POP
0x10f POP
0x110 POP
0x111 SWAP1
0x112 POP
0x113 SWAP1
0x114 DUP2
0x115 ADD
0x116 SWAP1
0x117 PUSH1 0x1f
0x119 AND
0x11a DUP1
0x11b ISZERO
0x11c PUSH2 0x139
0x11f JUMPI
---
0x10c: JUMPDEST 
0x115: V67 = ADD V54 V53
0x117: V68 = 0x1f
0x119: V69 = AND 0x1f V54
0x11b: V70 = ISZERO V69
0x11c: V71 = 0x139
0x11f: JUMPI 0x139 V70
---
Entry stack: [V11, 0x9a, V261, V283, V41, V47, V53, V56, V54, V54, V53, V56, S0]
Stack pops: 7
Stack additions: [V67, V69]
Exit stack: [V11, 0x9a, V261, V283, V41, V47, V67, V69]

================================

Block 0x120
[0x120:0x138]
---
Predecessors: [0x10c]
Successors: [0x139]
---
0x120 DUP1
0x121 DUP3
0x122 SUB
0x123 DUP1
0x124 MLOAD
0x125 PUSH1 0x1
0x127 DUP4
0x128 PUSH1 0x20
0x12a SUB
0x12b PUSH2 0x100
0x12e EXP
0x12f SUB
0x130 NOT
0x131 AND
0x132 DUP2
0x133 MSTORE
0x134 PUSH1 0x20
0x136 ADD
0x137 SWAP2
0x138 POP
---
0x122: V72 = SUB V67 V69
0x124: V73 = M[V72]
0x125: V74 = 0x1
0x128: V75 = 0x20
0x12a: V76 = SUB 0x20 V69
0x12b: V77 = 0x100
0x12e: V78 = EXP 0x100 V76
0x12f: V79 = SUB V78 0x1
0x130: V80 = NOT V79
0x131: V81 = AND V80 V73
0x133: M[V72] = V81
0x134: V82 = 0x20
0x136: V83 = ADD 0x20 V72
---
Entry stack: [V11, 0x9a, V261, V283, V41, V47, V67, V69]
Stack pops: 2
Stack additions: [V83, S0]
Exit stack: [V11, 0x9a, V261, V283, V41, V47, V83, V69]

================================

Block 0x139
[0x139:0x147]
---
Predecessors: [0x10c, 0x120]
Successors: []
---
0x139 JUMPDEST
0x13a POP
0x13b SWAP4
0x13c POP
0x13d POP
0x13e POP
0x13f POP
0x140 PUSH1 0x40
0x142 MLOAD
0x143 DUP1
0x144 SWAP2
0x145 SUB
0x146 SWAP1
0x147 RETURN
---
0x139: JUMPDEST 
0x140: V84 = 0x40
0x142: V85 = M[0x40]
0x145: V86 = SUB S1 V85
0x147: RETURN V85 V86
---
Entry stack: [V11, 0x9a, V261, V283, V41, V47, S1, V69]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x9a]

================================

Block 0x148
[0x148:0x14f]
---
Predecessors: [0x41]
Successors: [0x150, 0x154]
---
0x148 JUMPDEST
0x149 CALLVALUE
0x14a DUP1
0x14b ISZERO
0x14c PUSH2 0x154
0x14f JUMPI
---
0x148: JUMPDEST 
0x149: V87 = CALLVALUE
0x14b: V88 = ISZERO V87
0x14c: V89 = 0x154
0x14f: JUMPI 0x154 V88
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V87]
Exit stack: [V11, V87]

================================

Block 0x150
[0x150:0x153]
---
Predecessors: [0x148]
Successors: []
---
0x150 PUSH1 0x0
0x152 DUP1
0x153 REVERT
---
0x150: V90 = 0x0
0x153: REVERT 0x0 0x0
---
Entry stack: [V11, V87]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V87]

================================

Block 0x154
[0x154:0x15c]
---
Predecessors: [0x148]
Successors: [0x418]
---
0x154 JUMPDEST
0x155 POP
0x156 PUSH2 0x15d
0x159 PUSH2 0x418
0x15c JUMP
---
0x154: JUMPDEST 
0x156: V91 = 0x15d
0x159: V92 = 0x418
0x15c: JUMP 0x418
---
Entry stack: [V11, V87]
Stack pops: 1
Stack additions: [0x15d]
Exit stack: [V11, 0x15d]

================================

Block 0x15d
[0x15d:0x181]
---
Predecessors: [0x4ae]
Successors: [0x182]
---
0x15d JUMPDEST
0x15e PUSH1 0x40
0x160 MLOAD
0x161 DUP1
0x162 DUP1
0x163 PUSH1 0x20
0x165 ADD
0x166 DUP3
0x167 DUP2
0x168 SUB
0x169 DUP3
0x16a MSTORE
0x16b DUP4
0x16c DUP2
0x16d DUP2
0x16e MLOAD
0x16f DUP2
0x170 MSTORE
0x171 PUSH1 0x20
0x173 ADD
0x174 SWAP2
0x175 POP
0x176 DUP1
0x177 MLOAD
0x178 SWAP1
0x179 PUSH1 0x20
0x17b ADD
0x17c SWAP1
0x17d DUP1
0x17e DUP4
0x17f DUP4
0x180 PUSH1 0x0
---
0x15d: JUMPDEST 
0x15e: V93 = 0x40
0x160: V94 = M[0x40]
0x163: V95 = 0x20
0x165: V96 = ADD 0x20 V94
0x168: V97 = SUB V96 V94
0x16a: M[V94] = V97
0x16e: V98 = M[V347]
0x170: M[V96] = V98
0x171: V99 = 0x20
0x173: V100 = ADD 0x20 V96
0x177: V101 = M[V347]
0x179: V102 = 0x20
0x17b: V103 = ADD 0x20 V347
0x180: V104 = 0x0
---
Entry stack: [V11, 0x15d, V347]
Stack pops: 1
Stack additions: [S0, V94, V94, V100, V103, V101, V101, V100, V103, 0x0]
Exit stack: [V11, 0x15d, V347, V94, V94, V100, V103, V101, V101, V100, V103, 0x0]

================================

Block 0x182
[0x182:0x18a]
---
Predecessors: [0x15d, 0x18b]
Successors: [0x18b, 0x19d]
---
0x182 JUMPDEST
0x183 DUP4
0x184 DUP2
0x185 LT
0x186 ISZERO
0x187 PUSH2 0x19d
0x18a JUMPI
---
0x182: JUMPDEST 
0x185: V105 = LT S0 V101
0x186: V106 = ISZERO V105
0x187: V107 = 0x19d
0x18a: JUMPI 0x19d V106
---
Entry stack: [V11, 0x15d, V347, V94, V94, V100, V103, V101, V101, V100, V103, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x15d, V347, V94, V94, V100, V103, V101, V101, V100, V103, S0]

================================

Block 0x18b
[0x18b:0x19c]
---
Predecessors: [0x182]
Successors: [0x182]
---
0x18b DUP1
0x18c DUP3
0x18d ADD
0x18e MLOAD
0x18f DUP2
0x190 DUP5
0x191 ADD
0x192 MSTORE
0x193 PUSH1 0x20
0x195 DUP2
0x196 ADD
0x197 SWAP1
0x198 POP
0x199 PUSH2 0x182
0x19c JUMP
---
0x18d: V108 = ADD V103 S0
0x18e: V109 = M[V108]
0x191: V110 = ADD V100 S0
0x192: M[V110] = V109
0x193: V111 = 0x20
0x196: V112 = ADD S0 0x20
0x199: V113 = 0x182
0x19c: JUMP 0x182
---
Entry stack: [V11, 0x15d, V347, V94, V94, V100, V103, V101, V101, V100, V103, S0]
Stack pops: 3
Stack additions: [S2, S1, V112]
Exit stack: [V11, 0x15d, V347, V94, V94, V100, V103, V101, V101, V100, V103, V112]

================================

Block 0x19d
[0x19d:0x1b0]
---
Predecessors: [0x182]
Successors: [0x1b1, 0x1ca]
---
0x19d JUMPDEST
0x19e POP
0x19f POP
0x1a0 POP
0x1a1 POP
0x1a2 SWAP1
0x1a3 POP
0x1a4 SWAP1
0x1a5 DUP2
0x1a6 ADD
0x1a7 SWAP1
0x1a8 PUSH1 0x1f
0x1aa AND
0x1ab DUP1
0x1ac ISZERO
0x1ad PUSH2 0x1ca
0x1b0 JUMPI
---
0x19d: JUMPDEST 
0x1a6: V114 = ADD V101 V100
0x1a8: V115 = 0x1f
0x1aa: V116 = AND 0x1f V101
0x1ac: V117 = ISZERO V116
0x1ad: V118 = 0x1ca
0x1b0: JUMPI 0x1ca V117
---
Entry stack: [V11, 0x15d, V347, V94, V94, V100, V103, V101, V101, V100, V103, S0]
Stack pops: 7
Stack additions: [V114, V116]
Exit stack: [V11, 0x15d, V347, V94, V94, V114, V116]

================================

Block 0x1b1
[0x1b1:0x1c9]
---
Predecessors: [0x19d]
Successors: [0x1ca]
---
0x1b1 DUP1
0x1b2 DUP3
0x1b3 SUB
0x1b4 DUP1
0x1b5 MLOAD
0x1b6 PUSH1 0x1
0x1b8 DUP4
0x1b9 PUSH1 0x20
0x1bb SUB
0x1bc PUSH2 0x100
0x1bf EXP
0x1c0 SUB
0x1c1 NOT
0x1c2 AND
0x1c3 DUP2
0x1c4 MSTORE
0x1c5 PUSH1 0x20
0x1c7 ADD
0x1c8 SWAP2
0x1c9 POP
---
0x1b3: V119 = SUB V114 V116
0x1b5: V120 = M[V119]
0x1b6: V121 = 0x1
0x1b9: V122 = 0x20
0x1bb: V123 = SUB 0x20 V116
0x1bc: V124 = 0x100
0x1bf: V125 = EXP 0x100 V123
0x1c0: V126 = SUB V125 0x1
0x1c1: V127 = NOT V126
0x1c2: V128 = AND V127 V120
0x1c4: M[V119] = V128
0x1c5: V129 = 0x20
0x1c7: V130 = ADD 0x20 V119
---
Entry stack: [V11, 0x15d, V347, V94, V94, V114, V116]
Stack pops: 2
Stack additions: [V130, S0]
Exit stack: [V11, 0x15d, V347, V94, V94, V130, V116]

================================

Block 0x1ca
[0x1ca:0x1d7]
---
Predecessors: [0x19d, 0x1b1]
Successors: []
---
0x1ca JUMPDEST
0x1cb POP
0x1cc SWAP3
0x1cd POP
0x1ce POP
0x1cf POP
0x1d0 PUSH1 0x40
0x1d2 MLOAD
0x1d3 DUP1
0x1d4 SWAP2
0x1d5 SUB
0x1d6 SWAP1
0x1d7 RETURN
---
0x1ca: JUMPDEST 
0x1d0: V131 = 0x40
0x1d2: V132 = M[0x40]
0x1d5: V133 = SUB S1 V132
0x1d7: RETURN V132 V133
---
Entry stack: [V11, 0x15d, V347, V94, V94, S1, V116]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x15d]

================================

Block 0x1d8
[0x1d8:0x231]
---
Predecessors: [0x4c]
Successors: [0x4b6]
---
0x1d8 JUMPDEST
0x1d9 PUSH2 0x232
0x1dc PUSH1 0x4
0x1de DUP1
0x1df CALLDATASIZE
0x1e0 SUB
0x1e1 DUP2
0x1e2 ADD
0x1e3 SWAP1
0x1e4 DUP1
0x1e5 DUP1
0x1e6 CALLDATALOAD
0x1e7 SWAP1
0x1e8 PUSH1 0x20
0x1ea ADD
0x1eb SWAP1
0x1ec DUP3
0x1ed ADD
0x1ee DUP1
0x1ef CALLDATALOAD
0x1f0 SWAP1
0x1f1 PUSH1 0x20
0x1f3 ADD
0x1f4 SWAP1
0x1f5 DUP1
0x1f6 DUP1
0x1f7 PUSH1 0x1f
0x1f9 ADD
0x1fa PUSH1 0x20
0x1fc DUP1
0x1fd SWAP2
0x1fe DIV
0x1ff MUL
0x200 PUSH1 0x20
0x202 ADD
0x203 PUSH1 0x40
0x205 MLOAD
0x206 SWAP1
0x207 DUP2
0x208 ADD
0x209 PUSH1 0x40
0x20b MSTORE
0x20c DUP1
0x20d SWAP4
0x20e SWAP3
0x20f SWAP2
0x210 SWAP1
0x211 DUP2
0x212 DUP2
0x213 MSTORE
0x214 PUSH1 0x20
0x216 ADD
0x217 DUP4
0x218 DUP4
0x219 DUP1
0x21a DUP3
0x21b DUP5
0x21c CALLDATACOPY
0x21d DUP3
0x21e ADD
0x21f SWAP2
0x220 POP
0x221 POP
0x222 POP
0x223 POP
0x224 POP
0x225 POP
0x226 SWAP2
0x227 SWAP3
0x228 SWAP2
0x229 SWAP3
0x22a SWAP1
0x22b POP
0x22c POP
0x22d POP
0x22e PUSH2 0x4b6
0x231 JUMP
---
0x1d8: JUMPDEST 
0x1d9: V134 = 0x232
0x1dc: V135 = 0x4
0x1df: V136 = CALLDATASIZE
0x1e0: V137 = SUB V136 0x4
0x1e2: V138 = ADD 0x4 V137
0x1e6: V139 = CALLDATALOAD 0x4
0x1e8: V140 = 0x20
0x1ea: V141 = ADD 0x20 0x4
0x1ed: V142 = ADD 0x4 V139
0x1ef: V143 = CALLDATALOAD V142
0x1f1: V144 = 0x20
0x1f3: V145 = ADD 0x20 V142
0x1f7: V146 = 0x1f
0x1f9: V147 = ADD 0x1f V143
0x1fa: V148 = 0x20
0x1fe: V149 = DIV V147 0x20
0x1ff: V150 = MUL V149 0x20
0x200: V151 = 0x20
0x202: V152 = ADD 0x20 V150
0x203: V153 = 0x40
0x205: V154 = M[0x40]
0x208: V155 = ADD V154 V152
0x209: V156 = 0x40
0x20b: M[0x40] = V155
0x213: M[V154] = V143
0x214: V157 = 0x20
0x216: V158 = ADD 0x20 V154
0x21c: CALLDATACOPY V158 V145 V143
0x21e: V159 = ADD V158 V143
0x22e: V160 = 0x4b6
0x231: JUMP 0x4b6
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x232, V154]
Exit stack: [V11, 0x232, V154]

================================

Block 0x232
[0x232:0x233]
---
Predecessors: [0x71a]
Successors: []
---
0x232 JUMPDEST
0x233 STOP
---
0x232: JUMPDEST 
0x233: STOP 
---
Entry stack: [S9, V443, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S9, V443, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x234
[0x234:0x23b]
---
Predecessors: [0x57]
Successors: [0x23c, 0x240]
---
0x234 JUMPDEST
0x235 CALLVALUE
0x236 DUP1
0x237 ISZERO
0x238 PUSH2 0x240
0x23b JUMPI
---
0x234: JUMPDEST 
0x235: V161 = CALLVALUE
0x237: V162 = ISZERO V161
0x238: V163 = 0x240
0x23b: JUMPI 0x240 V162
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V161]
Exit stack: [V11, V161]

================================

Block 0x23c
[0x23c:0x23f]
---
Predecessors: [0x234]
Successors: []
---
0x23c PUSH1 0x0
0x23e DUP1
0x23f REVERT
---
0x23c: V164 = 0x0
0x23f: REVERT 0x0 0x0
---
Entry stack: [V11, V161]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V161]

================================

Block 0x240
[0x240:0x248]
---
Predecessors: [0x234]
Successors: [0x71e]
---
0x240 JUMPDEST
0x241 POP
0x242 PUSH2 0x249
0x245 PUSH2 0x71e
0x248 JUMP
---
0x240: JUMPDEST 
0x242: V165 = 0x249
0x245: V166 = 0x71e
0x248: JUMP 0x71e
---
Entry stack: [V11, V161]
Stack pops: 1
Stack additions: [0x249]
Exit stack: [V11, 0x249]

================================

Block 0x249
[0x249:0x26d]
---
Predecessors: [0x7b4]
Successors: [0x26e]
---
0x249 JUMPDEST
0x24a PUSH1 0x40
0x24c MLOAD
0x24d DUP1
0x24e DUP1
0x24f PUSH1 0x20
0x251 ADD
0x252 DUP3
0x253 DUP2
0x254 SUB
0x255 DUP3
0x256 MSTORE
0x257 DUP4
0x258 DUP2
0x259 DUP2
0x25a MLOAD
0x25b DUP2
0x25c MSTORE
0x25d PUSH1 0x20
0x25f ADD
0x260 SWAP2
0x261 POP
0x262 DUP1
0x263 MLOAD
0x264 SWAP1
0x265 PUSH1 0x20
0x267 ADD
0x268 SWAP1
0x269 DUP1
0x26a DUP4
0x26b DUP4
0x26c PUSH1 0x0
---
0x249: JUMPDEST 
0x24a: V167 = 0x40
0x24c: V168 = M[0x40]
0x24f: V169 = 0x20
0x251: V170 = ADD 0x20 V168
0x254: V171 = SUB V170 V168
0x256: M[V168] = V171
0x25a: V172 = M[V604]
0x25c: M[V170] = V172
0x25d: V173 = 0x20
0x25f: V174 = ADD 0x20 V170
0x263: V175 = M[V604]
0x265: V176 = 0x20
0x267: V177 = ADD 0x20 V604
0x26c: V178 = 0x0
---
Entry stack: [V11, 0x249, V604]
Stack pops: 1
Stack additions: [S0, V168, V168, V174, V177, V175, V175, V174, V177, 0x0]
Exit stack: [V11, 0x249, V604, V168, V168, V174, V177, V175, V175, V174, V177, 0x0]

================================

Block 0x26e
[0x26e:0x276]
---
Predecessors: [0x249, 0x277]
Successors: [0x277, 0x289]
---
0x26e JUMPDEST
0x26f DUP4
0x270 DUP2
0x271 LT
0x272 ISZERO
0x273 PUSH2 0x289
0x276 JUMPI
---
0x26e: JUMPDEST 
0x271: V179 = LT S0 V175
0x272: V180 = ISZERO V179
0x273: V181 = 0x289
0x276: JUMPI 0x289 V180
---
Entry stack: [V11, 0x249, V604, V168, V168, V174, V177, V175, V175, V174, V177, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x249, V604, V168, V168, V174, V177, V175, V175, V174, V177, S0]

================================

Block 0x277
[0x277:0x288]
---
Predecessors: [0x26e]
Successors: [0x26e]
---
0x277 DUP1
0x278 DUP3
0x279 ADD
0x27a MLOAD
0x27b DUP2
0x27c DUP5
0x27d ADD
0x27e MSTORE
0x27f PUSH1 0x20
0x281 DUP2
0x282 ADD
0x283 SWAP1
0x284 POP
0x285 PUSH2 0x26e
0x288 JUMP
---
0x279: V182 = ADD V177 S0
0x27a: V183 = M[V182]
0x27d: V184 = ADD V174 S0
0x27e: M[V184] = V183
0x27f: V185 = 0x20
0x282: V186 = ADD S0 0x20
0x285: V187 = 0x26e
0x288: JUMP 0x26e
---
Entry stack: [V11, 0x249, V604, V168, V168, V174, V177, V175, V175, V174, V177, S0]
Stack pops: 3
Stack additions: [S2, S1, V186]
Exit stack: [V11, 0x249, V604, V168, V168, V174, V177, V175, V175, V174, V177, V186]

================================

Block 0x289
[0x289:0x29c]
---
Predecessors: [0x26e]
Successors: [0x29d, 0x2b6]
---
0x289 JUMPDEST
0x28a POP
0x28b POP
0x28c POP
0x28d POP
0x28e SWAP1
0x28f POP
0x290 SWAP1
0x291 DUP2
0x292 ADD
0x293 SWAP1
0x294 PUSH1 0x1f
0x296 AND
0x297 DUP1
0x298 ISZERO
0x299 PUSH2 0x2b6
0x29c JUMPI
---
0x289: JUMPDEST 
0x292: V188 = ADD V175 V174
0x294: V189 = 0x1f
0x296: V190 = AND 0x1f V175
0x298: V191 = ISZERO V190
0x299: V192 = 0x2b6
0x29c: JUMPI 0x2b6 V191
---
Entry stack: [V11, 0x249, V604, V168, V168, V174, V177, V175, V175, V174, V177, S0]
Stack pops: 7
Stack additions: [V188, V190]
Exit stack: [V11, 0x249, V604, V168, V168, V188, V190]

================================

Block 0x29d
[0x29d:0x2b5]
---
Predecessors: [0x289]
Successors: [0x2b6]
---
0x29d DUP1
0x29e DUP3
0x29f SUB
0x2a0 DUP1
0x2a1 MLOAD
0x2a2 PUSH1 0x1
0x2a4 DUP4
0x2a5 PUSH1 0x20
0x2a7 SUB
0x2a8 PUSH2 0x100
0x2ab EXP
0x2ac SUB
0x2ad NOT
0x2ae AND
0x2af DUP2
0x2b0 MSTORE
0x2b1 PUSH1 0x20
0x2b3 ADD
0x2b4 SWAP2
0x2b5 POP
---
0x29f: V193 = SUB V188 V190
0x2a1: V194 = M[V193]
0x2a2: V195 = 0x1
0x2a5: V196 = 0x20
0x2a7: V197 = SUB 0x20 V190
0x2a8: V198 = 0x100
0x2ab: V199 = EXP 0x100 V197
0x2ac: V200 = SUB V199 0x1
0x2ad: V201 = NOT V200
0x2ae: V202 = AND V201 V194
0x2b0: M[V193] = V202
0x2b1: V203 = 0x20
0x2b3: V204 = ADD 0x20 V193
---
Entry stack: [V11, 0x249, V604, V168, V168, V188, V190]
Stack pops: 2
Stack additions: [V204, S0]
Exit stack: [V11, 0x249, V604, V168, V168, V204, V190]

================================

Block 0x2b6
[0x2b6:0x2c3]
---
Predecessors: [0x289, 0x29d]
Successors: []
---
0x2b6 JUMPDEST
0x2b7 POP
0x2b8 SWAP3
0x2b9 POP
0x2ba POP
0x2bb POP
0x2bc PUSH1 0x40
0x2be MLOAD
0x2bf DUP1
0x2c0 SWAP2
0x2c1 SUB
0x2c2 SWAP1
0x2c3 RETURN
---
0x2b6: JUMPDEST 
0x2bc: V205 = 0x40
0x2be: V206 = M[0x40]
0x2c1: V207 = SUB S1 V206
0x2c3: RETURN V206 V207
---
Entry stack: [V11, 0x249, V604, V168, V168, S1, V190]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x249]

================================

Block 0x2c4
[0x2c4:0x2cb]
---
Predecessors: [0x62]
Successors: [0x2cc, 0x2d0]
---
0x2c4 JUMPDEST
0x2c5 CALLVALUE
0x2c6 DUP1
0x2c7 ISZERO
0x2c8 PUSH2 0x2d0
0x2cb JUMPI
---
0x2c4: JUMPDEST 
0x2c5: V208 = CALLVALUE
0x2c7: V209 = ISZERO V208
0x2c8: V210 = 0x2d0
0x2cb: JUMPI 0x2d0 V209
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V208]
Exit stack: [V11, V208]

================================

Block 0x2cc
[0x2cc:0x2cf]
---
Predecessors: [0x2c4]
Successors: []
---
0x2cc PUSH1 0x0
0x2ce DUP1
0x2cf REVERT
---
0x2cc: V211 = 0x0
0x2cf: REVERT 0x0 0x0
---
Entry stack: [V11, V208]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V208]

================================

Block 0x2d0
[0x2d0:0x32a]
---
Predecessors: [0x2c4]
Successors: [0x7bc]
---
0x2d0 JUMPDEST
0x2d1 POP
0x2d2 PUSH2 0x32b
0x2d5 PUSH1 0x4
0x2d7 DUP1
0x2d8 CALLDATASIZE
0x2d9 SUB
0x2da DUP2
0x2db ADD
0x2dc SWAP1
0x2dd DUP1
0x2de DUP1
0x2df CALLDATALOAD
0x2e0 SWAP1
0x2e1 PUSH1 0x20
0x2e3 ADD
0x2e4 SWAP1
0x2e5 DUP3
0x2e6 ADD
0x2e7 DUP1
0x2e8 CALLDATALOAD
0x2e9 SWAP1
0x2ea PUSH1 0x20
0x2ec ADD
0x2ed SWAP1
0x2ee DUP1
0x2ef DUP1
0x2f0 PUSH1 0x1f
0x2f2 ADD
0x2f3 PUSH1 0x20
0x2f5 DUP1
0x2f6 SWAP2
0x2f7 DIV
0x2f8 MUL
0x2f9 PUSH1 0x20
0x2fb ADD
0x2fc PUSH1 0x40
0x2fe MLOAD
0x2ff SWAP1
0x300 DUP2
0x301 ADD
0x302 PUSH1 0x40
0x304 MSTORE
0x305 DUP1
0x306 SWAP4
0x307 SWAP3
0x308 SWAP2
0x309 SWAP1
0x30a DUP2
0x30b DUP2
0x30c MSTORE
0x30d PUSH1 0x20
0x30f ADD
0x310 DUP4
0x311 DUP4
0x312 DUP1
0x313 DUP3
0x314 DUP5
0x315 CALLDATACOPY
0x316 DUP3
0x317 ADD
0x318 SWAP2
0x319 POP
0x31a POP
0x31b POP
0x31c POP
0x31d POP
0x31e POP
0x31f SWAP2
0x320 SWAP3
0x321 SWAP2
0x322 SWAP3
0x323 SWAP1
0x324 POP
0x325 POP
0x326 POP
0x327 PUSH2 0x7bc
0x32a JUMP
---
0x2d0: JUMPDEST 
0x2d2: V212 = 0x32b
0x2d5: V213 = 0x4
0x2d8: V214 = CALLDATASIZE
0x2d9: V215 = SUB V214 0x4
0x2db: V216 = ADD 0x4 V215
0x2df: V217 = CALLDATALOAD 0x4
0x2e1: V218 = 0x20
0x2e3: V219 = ADD 0x20 0x4
0x2e6: V220 = ADD 0x4 V217
0x2e8: V221 = CALLDATALOAD V220
0x2ea: V222 = 0x20
0x2ec: V223 = ADD 0x20 V220
0x2f0: V224 = 0x1f
0x2f2: V225 = ADD 0x1f V221
0x2f3: V226 = 0x20
0x2f7: V227 = DIV V225 0x20
0x2f8: V228 = MUL V227 0x20
0x2f9: V229 = 0x20
0x2fb: V230 = ADD 0x20 V228
0x2fc: V231 = 0x40
0x2fe: V232 = M[0x40]
0x301: V233 = ADD V232 V230
0x302: V234 = 0x40
0x304: M[0x40] = V233
0x30c: M[V232] = V221
0x30d: V235 = 0x20
0x30f: V236 = ADD 0x20 V232
0x315: CALLDATACOPY V236 V223 V221
0x317: V237 = ADD V236 V221
0x327: V238 = 0x7bc
0x32a: JUMP 0x7bc
---
Entry stack: [V11, V208]
Stack pops: 1
Stack additions: [0x32b, V232]
Exit stack: [V11, 0x32b, V232]

================================

Block 0x32b
[0x32b:0x32c]
---
Predecessors: [0x8a7]
Successors: []
---
0x32b JUMPDEST
0x32c STOP
---
0x32b: JUMPDEST 
0x32c: STOP 
---
Entry stack: [S10, V443, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S10, V443, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x32d
[0x32d:0x33a]
---
Predecessors: [0x7b]
Successors: [0x33b, 0x33c]
---
0x32d JUMPDEST
0x32e PUSH1 0x2
0x330 DUP2
0x331 DUP2
0x332 SLOAD
0x333 DUP2
0x334 LT
0x335 ISZERO
0x336 ISZERO
0x337 PUSH2 0x33c
0x33a JUMPI
---
0x32d: JUMPDEST 
0x32e: V239 = 0x2
0x332: V240 = S[0x2]
0x334: V241 = LT V36 V240
0x335: V242 = ISZERO V241
0x336: V243 = ISZERO V242
0x337: V244 = 0x33c
0x33a: JUMPI 0x33c V243
---
Entry stack: [V11, 0x9a, V36]
Stack pops: 1
Stack additions: [S0, 0x2, S0]
Exit stack: [V11, 0x9a, V36, 0x2, V36]

================================

Block 0x33b
[0x33b:0x33b]
---
Predecessors: [0x32d]
Successors: []
---
0x33b INVALID
---
0x33b: INVALID 
---
Entry stack: [V11, 0x9a, V36, 0x2, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9a, V36, 0x2, V36]

================================

Block 0x33c
[0x33c:0x3c7]
---
Predecessors: [0x32d]
Successors: [0x3c8, 0x40e]
---
0x33c JUMPDEST
0x33d SWAP1
0x33e PUSH1 0x0
0x340 MSTORE
0x341 PUSH1 0x20
0x343 PUSH1 0x0
0x345 SHA3
0x346 SWAP1
0x347 PUSH1 0x2
0x349 MUL
0x34a ADD
0x34b PUSH1 0x0
0x34d SWAP2
0x34e POP
0x34f SWAP1
0x350 POP
0x351 DUP1
0x352 PUSH1 0x0
0x354 ADD
0x355 PUSH1 0x0
0x357 SWAP1
0x358 SLOAD
0x359 SWAP1
0x35a PUSH2 0x100
0x35d EXP
0x35e SWAP1
0x35f DIV
0x360 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x375 AND
0x376 SWAP1
0x377 DUP1
0x378 PUSH1 0x1
0x37a ADD
0x37b DUP1
0x37c SLOAD
0x37d PUSH1 0x1
0x37f DUP2
0x380 PUSH1 0x1
0x382 AND
0x383 ISZERO
0x384 PUSH2 0x100
0x387 MUL
0x388 SUB
0x389 AND
0x38a PUSH1 0x2
0x38c SWAP1
0x38d DIV
0x38e DUP1
0x38f PUSH1 0x1f
0x391 ADD
0x392 PUSH1 0x20
0x394 DUP1
0x395 SWAP2
0x396 DIV
0x397 MUL
0x398 PUSH1 0x20
0x39a ADD
0x39b PUSH1 0x40
0x39d MLOAD
0x39e SWAP1
0x39f DUP2
0x3a0 ADD
0x3a1 PUSH1 0x40
0x3a3 MSTORE
0x3a4 DUP1
0x3a5 SWAP3
0x3a6 SWAP2
0x3a7 SWAP1
0x3a8 DUP2
0x3a9 DUP2
0x3aa MSTORE
0x3ab PUSH1 0x20
0x3ad ADD
0x3ae DUP3
0x3af DUP1
0x3b0 SLOAD
0x3b1 PUSH1 0x1
0x3b3 DUP2
0x3b4 PUSH1 0x1
0x3b6 AND
0x3b7 ISZERO
0x3b8 PUSH2 0x100
0x3bb MUL
0x3bc SUB
0x3bd AND
0x3be PUSH1 0x2
0x3c0 SWAP1
0x3c1 DIV
0x3c2 DUP1
0x3c3 ISZERO
0x3c4 PUSH2 0x40e
0x3c7 JUMPI
---
0x33c: JUMPDEST 
0x33e: V245 = 0x0
0x340: M[0x0] = 0x2
0x341: V246 = 0x20
0x343: V247 = 0x0
0x345: V248 = SHA3 0x0 0x20
0x347: V249 = 0x2
0x349: V250 = MUL 0x2 V36
0x34a: V251 = ADD V250 V248
0x34b: V252 = 0x0
0x352: V253 = 0x0
0x354: V254 = ADD 0x0 V251
0x355: V255 = 0x0
0x358: V256 = S[V254]
0x35a: V257 = 0x100
0x35d: V258 = EXP 0x100 0x0
0x35f: V259 = DIV V256 0x1
0x360: V260 = 0xffffffffffffffffffffffffffffffffffffffff
0x375: V261 = AND 0xffffffffffffffffffffffffffffffffffffffff V259
0x378: V262 = 0x1
0x37a: V263 = ADD 0x1 V251
0x37c: V264 = S[V263]
0x37d: V265 = 0x1
0x380: V266 = 0x1
0x382: V267 = AND 0x1 V264
0x383: V268 = ISZERO V267
0x384: V269 = 0x100
0x387: V270 = MUL 0x100 V268
0x388: V271 = SUB V270 0x1
0x389: V272 = AND V271 V264
0x38a: V273 = 0x2
0x38d: V274 = DIV V272 0x2
0x38f: V275 = 0x1f
0x391: V276 = ADD 0x1f V274
0x392: V277 = 0x20
0x396: V278 = DIV V276 0x20
0x397: V279 = MUL V278 0x20
0x398: V280 = 0x20
0x39a: V281 = ADD 0x20 V279
0x39b: V282 = 0x40
0x39d: V283 = M[0x40]
0x3a0: V284 = ADD V283 V281
0x3a1: V285 = 0x40
0x3a3: M[0x40] = V284
0x3aa: M[V283] = V274
0x3ab: V286 = 0x20
0x3ad: V287 = ADD 0x20 V283
0x3b0: V288 = S[V263]
0x3b1: V289 = 0x1
0x3b4: V290 = 0x1
0x3b6: V291 = AND 0x1 V288
0x3b7: V292 = ISZERO V291
0x3b8: V293 = 0x100
0x3bb: V294 = MUL 0x100 V292
0x3bc: V295 = SUB V294 0x1
0x3bd: V296 = AND V295 V288
0x3be: V297 = 0x2
0x3c1: V298 = DIV V296 0x2
0x3c3: V299 = ISZERO V298
0x3c4: V300 = 0x40e
0x3c7: JUMPI 0x40e V299
---
Entry stack: [V11, 0x9a, V36, 0x2, V36]
Stack pops: 3
Stack additions: [V261, V251, V283, V263, V274, V287, V263, V298]
Exit stack: [V11, 0x9a, V261, V251, V283, V263, V274, V287, V263, V298]

================================

Block 0x3c8
[0x3c8:0x3cf]
---
Predecessors: [0x33c]
Successors: [0x3d0, 0x3e3]
---
0x3c8 DUP1
0x3c9 PUSH1 0x1f
0x3cb LT
0x3cc PUSH2 0x3e3
0x3cf JUMPI
---
0x3c9: V301 = 0x1f
0x3cb: V302 = LT 0x1f V298
0x3cc: V303 = 0x3e3
0x3cf: JUMPI 0x3e3 V302
---
Entry stack: [V11, 0x9a, V261, V251, V283, V263, V274, V287, V263, V298]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x9a, V261, V251, V283, V263, V274, V287, V263, V298]

================================

Block 0x3d0
[0x3d0:0x3e2]
---
Predecessors: [0x3c8]
Successors: [0x40e]
---
0x3d0 PUSH2 0x100
0x3d3 DUP1
0x3d4 DUP4
0x3d5 SLOAD
0x3d6 DIV
0x3d7 MUL
0x3d8 DUP4
0x3d9 MSTORE
0x3da SWAP2
0x3db PUSH1 0x20
0x3dd ADD
0x3de SWAP2
0x3df PUSH2 0x40e
0x3e2 JUMP
---
0x3d0: V304 = 0x100
0x3d5: V305 = S[V263]
0x3d6: V306 = DIV V305 0x100
0x3d7: V307 = MUL V306 0x100
0x3d9: M[V287] = V307
0x3db: V308 = 0x20
0x3dd: V309 = ADD 0x20 V287
0x3df: V310 = 0x40e
0x3e2: JUMP 0x40e
---
Entry stack: [V11, 0x9a, V261, V251, V283, V263, V274, V287, V263, V298]
Stack pops: 3
Stack additions: [V309, S1, S0]
Exit stack: [V11, 0x9a, V261, V251, V283, V263, V274, V309, V263, V298]

================================

Block 0x3e3
[0x3e3:0x3f0]
---
Predecessors: [0x3c8]
Successors: [0x3f1]
---
0x3e3 JUMPDEST
0x3e4 DUP3
0x3e5 ADD
0x3e6 SWAP2
0x3e7 SWAP1
0x3e8 PUSH1 0x0
0x3ea MSTORE
0x3eb PUSH1 0x20
0x3ed PUSH1 0x0
0x3ef SHA3
0x3f0 SWAP1
---
0x3e3: JUMPDEST 
0x3e5: V311 = ADD V287 V298
0x3e8: V312 = 0x0
0x3ea: M[0x0] = V263
0x3eb: V313 = 0x20
0x3ed: V314 = 0x0
0x3ef: V315 = SHA3 0x0 0x20
---
Entry stack: [V11, 0x9a, V261, V251, V283, V263, V274, V287, V263, V298]
Stack pops: 3
Stack additions: [V311, V315, S2]
Exit stack: [V11, 0x9a, V261, V251, V283, V263, V274, V311, V315, V287]

================================

Block 0x3f1
[0x3f1:0x404]
---
Predecessors: [0x3e3, 0x3f1]
Successors: [0x3f1, 0x405]
---
0x3f1 JUMPDEST
0x3f2 DUP2
0x3f3 SLOAD
0x3f4 DUP2
0x3f5 MSTORE
0x3f6 SWAP1
0x3f7 PUSH1 0x1
0x3f9 ADD
0x3fa SWAP1
0x3fb PUSH1 0x20
0x3fd ADD
0x3fe DUP1
0x3ff DUP4
0x400 GT
0x401 PUSH2 0x3f1
0x404 JUMPI
---
0x3f1: JUMPDEST 
0x3f3: V316 = S[S1]
0x3f5: M[S0] = V316
0x3f7: V317 = 0x1
0x3f9: V318 = ADD 0x1 S1
0x3fb: V319 = 0x20
0x3fd: V320 = ADD 0x20 S0
0x400: V321 = GT V311 V320
0x401: V322 = 0x3f1
0x404: JUMPI 0x3f1 V321
---
Entry stack: [V11, 0x9a, V261, V251, V283, V263, V274, V311, S1, S0]
Stack pops: 3
Stack additions: [S2, V318, V320]
Exit stack: [V11, 0x9a, V261, V251, V283, V263, V274, V311, V318, V320]

================================

Block 0x405
[0x405:0x40d]
---
Predecessors: [0x3f1]
Successors: [0x40e]
---
0x405 DUP3
0x406 SWAP1
0x407 SUB
0x408 PUSH1 0x1f
0x40a AND
0x40b DUP3
0x40c ADD
0x40d SWAP2
---
0x407: V323 = SUB V320 V311
0x408: V324 = 0x1f
0x40a: V325 = AND 0x1f V323
0x40c: V326 = ADD V311 V325
---
Entry stack: [V11, 0x9a, V261, V251, V283, V263, V274, V311, V318, V320]
Stack pops: 3
Stack additions: [V326, S1, S2]
Exit stack: [V11, 0x9a, V261, V251, V283, V263, V274, V326, V318, V311]

================================

Block 0x40e
[0x40e:0x417]
---
Predecessors: [0x33c, 0x3d0, 0x405]
Successors: [0x9a]
---
0x40e JUMPDEST
0x40f POP
0x410 POP
0x411 POP
0x412 POP
0x413 POP
0x414 SWAP1
0x415 POP
0x416 DUP3
0x417 JUMP
---
0x40e: JUMPDEST 
0x417: JUMP 0x9a
---
Entry stack: [V11, 0x9a, V261, V251, V283, V263, V274, S2, S1, S0]
Stack pops: 9
Stack additions: [S8, S7, S5]
Exit stack: [V11, 0x9a, V261, V283]

================================

Block 0x418
[0x418:0x467]
---
Predecessors: [0x154]
Successors: [0x468, 0x4ae]
---
0x418 JUMPDEST
0x419 PUSH1 0x3
0x41b DUP1
0x41c SLOAD
0x41d PUSH1 0x1
0x41f DUP2
0x420 PUSH1 0x1
0x422 AND
0x423 ISZERO
0x424 PUSH2 0x100
0x427 MUL
0x428 SUB
0x429 AND
0x42a PUSH1 0x2
0x42c SWAP1
0x42d DIV
0x42e DUP1
0x42f PUSH1 0x1f
0x431 ADD
0x432 PUSH1 0x20
0x434 DUP1
0x435 SWAP2
0x436 DIV
0x437 MUL
0x438 PUSH1 0x20
0x43a ADD
0x43b PUSH1 0x40
0x43d MLOAD
0x43e SWAP1
0x43f DUP2
0x440 ADD
0x441 PUSH1 0x40
0x443 MSTORE
0x444 DUP1
0x445 SWAP3
0x446 SWAP2
0x447 SWAP1
0x448 DUP2
0x449 DUP2
0x44a MSTORE
0x44b PUSH1 0x20
0x44d ADD
0x44e DUP3
0x44f DUP1
0x450 SLOAD
0x451 PUSH1 0x1
0x453 DUP2
0x454 PUSH1 0x1
0x456 AND
0x457 ISZERO
0x458 PUSH2 0x100
0x45b MUL
0x45c SUB
0x45d AND
0x45e PUSH1 0x2
0x460 SWAP1
0x461 DIV
0x462 DUP1
0x463 ISZERO
0x464 PUSH2 0x4ae
0x467 JUMPI
---
0x418: JUMPDEST 
0x419: V327 = 0x3
0x41c: V328 = S[0x3]
0x41d: V329 = 0x1
0x420: V330 = 0x1
0x422: V331 = AND 0x1 V328
0x423: V332 = ISZERO V331
0x424: V333 = 0x100
0x427: V334 = MUL 0x100 V332
0x428: V335 = SUB V334 0x1
0x429: V336 = AND V335 V328
0x42a: V337 = 0x2
0x42d: V338 = DIV V336 0x2
0x42f: V339 = 0x1f
0x431: V340 = ADD 0x1f V338
0x432: V341 = 0x20
0x436: V342 = DIV V340 0x20
0x437: V343 = MUL V342 0x20
0x438: V344 = 0x20
0x43a: V345 = ADD 0x20 V343
0x43b: V346 = 0x40
0x43d: V347 = M[0x40]
0x440: V348 = ADD V347 V345
0x441: V349 = 0x40
0x443: M[0x40] = V348
0x44a: M[V347] = V338
0x44b: V350 = 0x20
0x44d: V351 = ADD 0x20 V347
0x450: V352 = S[0x3]
0x451: V353 = 0x1
0x454: V354 = 0x1
0x456: V355 = AND 0x1 V352
0x457: V356 = ISZERO V355
0x458: V357 = 0x100
0x45b: V358 = MUL 0x100 V356
0x45c: V359 = SUB V358 0x1
0x45d: V360 = AND V359 V352
0x45e: V361 = 0x2
0x461: V362 = DIV V360 0x2
0x463: V363 = ISZERO V362
0x464: V364 = 0x4ae
0x467: JUMPI 0x4ae V363
---
Entry stack: [V11, 0x15d]
Stack pops: 0
Stack additions: [V347, 0x3, V338, V351, 0x3, V362]
Exit stack: [V11, 0x15d, V347, 0x3, V338, V351, 0x3, V362]

================================

Block 0x468
[0x468:0x46f]
---
Predecessors: [0x418]
Successors: [0x470, 0x483]
---
0x468 DUP1
0x469 PUSH1 0x1f
0x46b LT
0x46c PUSH2 0x483
0x46f JUMPI
---
0x469: V365 = 0x1f
0x46b: V366 = LT 0x1f V362
0x46c: V367 = 0x483
0x46f: JUMPI 0x483 V366
---
Entry stack: [V11, 0x15d, V347, 0x3, V338, V351, 0x3, V362]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x15d, V347, 0x3, V338, V351, 0x3, V362]

================================

Block 0x470
[0x470:0x482]
---
Predecessors: [0x468]
Successors: [0x4ae]
---
0x470 PUSH2 0x100
0x473 DUP1
0x474 DUP4
0x475 SLOAD
0x476 DIV
0x477 MUL
0x478 DUP4
0x479 MSTORE
0x47a SWAP2
0x47b PUSH1 0x20
0x47d ADD
0x47e SWAP2
0x47f PUSH2 0x4ae
0x482 JUMP
---
0x470: V368 = 0x100
0x475: V369 = S[0x3]
0x476: V370 = DIV V369 0x100
0x477: V371 = MUL V370 0x100
0x479: M[V351] = V371
0x47b: V372 = 0x20
0x47d: V373 = ADD 0x20 V351
0x47f: V374 = 0x4ae
0x482: JUMP 0x4ae
---
Entry stack: [V11, 0x15d, V347, 0x3, V338, V351, 0x3, V362]
Stack pops: 3
Stack additions: [V373, S1, S0]
Exit stack: [V11, 0x15d, V347, 0x3, V338, V373, 0x3, V362]

================================

Block 0x483
[0x483:0x490]
---
Predecessors: [0x468]
Successors: [0x491]
---
0x483 JUMPDEST
0x484 DUP3
0x485 ADD
0x486 SWAP2
0x487 SWAP1
0x488 PUSH1 0x0
0x48a MSTORE
0x48b PUSH1 0x20
0x48d PUSH1 0x0
0x48f SHA3
0x490 SWAP1
---
0x483: JUMPDEST 
0x485: V375 = ADD V351 V362
0x488: V376 = 0x0
0x48a: M[0x0] = 0x3
0x48b: V377 = 0x20
0x48d: V378 = 0x0
0x48f: V379 = SHA3 0x0 0x20
---
Entry stack: [V11, 0x15d, V347, 0x3, V338, V351, 0x3, V362]
Stack pops: 3
Stack additions: [V375, V379, S2]
Exit stack: [V11, 0x15d, V347, 0x3, V338, V375, V379, V351]

================================

Block 0x491
[0x491:0x4a4]
---
Predecessors: [0x483, 0x491]
Successors: [0x491, 0x4a5]
---
0x491 JUMPDEST
0x492 DUP2
0x493 SLOAD
0x494 DUP2
0x495 MSTORE
0x496 SWAP1
0x497 PUSH1 0x1
0x499 ADD
0x49a SWAP1
0x49b PUSH1 0x20
0x49d ADD
0x49e DUP1
0x49f DUP4
0x4a0 GT
0x4a1 PUSH2 0x491
0x4a4 JUMPI
---
0x491: JUMPDEST 
0x493: V380 = S[S1]
0x495: M[S0] = V380
0x497: V381 = 0x1
0x499: V382 = ADD 0x1 S1
0x49b: V383 = 0x20
0x49d: V384 = ADD 0x20 S0
0x4a0: V385 = GT V375 V384
0x4a1: V386 = 0x491
0x4a4: JUMPI 0x491 V385
---
Entry stack: [V11, 0x15d, V347, 0x3, V338, V375, S1, S0]
Stack pops: 3
Stack additions: [S2, V382, V384]
Exit stack: [V11, 0x15d, V347, 0x3, V338, V375, V382, V384]

================================

Block 0x4a5
[0x4a5:0x4ad]
---
Predecessors: [0x491]
Successors: [0x4ae]
---
0x4a5 DUP3
0x4a6 SWAP1
0x4a7 SUB
0x4a8 PUSH1 0x1f
0x4aa AND
0x4ab DUP3
0x4ac ADD
0x4ad SWAP2
---
0x4a7: V387 = SUB V384 V375
0x4a8: V388 = 0x1f
0x4aa: V389 = AND 0x1f V387
0x4ac: V390 = ADD V375 V389
---
Entry stack: [V11, 0x15d, V347, 0x3, V338, V375, V382, V384]
Stack pops: 3
Stack additions: [V390, S1, S2]
Exit stack: [V11, 0x15d, V347, 0x3, V338, V390, V382, V375]

================================

Block 0x4ae
[0x4ae:0x4b5]
---
Predecessors: [0x418, 0x470, 0x4a5]
Successors: [0x15d]
---
0x4ae JUMPDEST
0x4af POP
0x4b0 POP
0x4b1 POP
0x4b2 POP
0x4b3 POP
0x4b4 DUP2
0x4b5 JUMP
---
0x4ae: JUMPDEST 
0x4b5: JUMP 0x15d
---
Entry stack: [V11, 0x15d, V347, 0x3, V338, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V11, 0x15d, V347]

================================

Block 0x4b6
[0x4b6:0x4ce]
---
Predecessors: [0x1d8]
Successors: [0x4cf, 0x4d3]
---
0x4b6 JUMPDEST
0x4b7 PUSH1 0x0
0x4b9 PUSH1 0x1
0x4bb PUSH1 0x0
0x4bd SWAP1
0x4be SLOAD
0x4bf SWAP1
0x4c0 PUSH2 0x100
0x4c3 EXP
0x4c4 SWAP1
0x4c5 DIV
0x4c6 PUSH1 0xff
0x4c8 AND
0x4c9 ISZERO
0x4ca ISZERO
0x4cb PUSH2 0x4d3
0x4ce JUMPI
---
0x4b6: JUMPDEST 
0x4b7: V391 = 0x0
0x4b9: V392 = 0x1
0x4bb: V393 = 0x0
0x4be: V394 = S[0x1]
0x4c0: V395 = 0x100
0x4c3: V396 = EXP 0x100 0x0
0x4c5: V397 = DIV V394 0x1
0x4c6: V398 = 0xff
0x4c8: V399 = AND 0xff V397
0x4c9: V400 = ISZERO V399
0x4ca: V401 = ISZERO V400
0x4cb: V402 = 0x4d3
0x4ce: JUMPI 0x4d3 V401
---
Entry stack: [V11, 0x232, V154]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x232, V154, 0x0]

================================

Block 0x4cf
[0x4cf:0x4d2]
---
Predecessors: [0x4b6]
Successors: []
---
0x4cf PUSH1 0x0
0x4d1 DUP1
0x4d2 REVERT
---
0x4cf: V403 = 0x0
0x4d2: REVERT 0x0 0x0
---
Entry stack: [V11, 0x232, V154, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x232, V154, 0x0]

================================

Block 0x4d3
[0x4d3:0x4e4]
---
Predecessors: [0x4b6]
Successors: [0x4e5, 0x4e9]
---
0x4d3 JUMPDEST
0x4d4 PUSH8 0xde0b6b3a7640000
0x4dd CALLVALUE
0x4de GT
0x4df ISZERO
0x4e0 ISZERO
0x4e1 PUSH2 0x4e9
0x4e4 JUMPI
---
0x4d3: JUMPDEST 
0x4d4: V404 = 0xde0b6b3a7640000
0x4dd: V405 = CALLVALUE
0x4de: V406 = GT V405 0xde0b6b3a7640000
0x4df: V407 = ISZERO V406
0x4e0: V408 = ISZERO V407
0x4e1: V409 = 0x4e9
0x4e4: JUMPI 0x4e9 V408
---
Entry stack: [V11, 0x232, V154, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x232, V154, 0x0]

================================

Block 0x4e5
[0x4e5:0x4e8]
---
Predecessors: [0x4d3]
Successors: []
---
0x4e5 PUSH1 0x0
0x4e7 DUP1
0x4e8 REVERT
---
0x4e5: V410 = 0x0
0x4e8: REVERT 0x0 0x0
---
Entry stack: [V11, 0x232, V154, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x232, V154, 0x0]

================================

Block 0x4e9
[0x4e9:0x4f4]
---
Predecessors: [0x4d3]
Successors: [0x4f5, 0x4f9]
---
0x4e9 JUMPDEST
0x4ea PUSH1 0x0
0x4ec DUP3
0x4ed MLOAD
0x4ee GT
0x4ef ISZERO
0x4f0 ISZERO
0x4f1 PUSH2 0x4f9
0x4f4 JUMPI
---
0x4e9: JUMPDEST 
0x4ea: V411 = 0x0
0x4ed: V412 = M[V154]
0x4ee: V413 = GT V412 0x0
0x4ef: V414 = ISZERO V413
0x4f0: V415 = ISZERO V414
0x4f1: V416 = 0x4f9
0x4f4: JUMPI 0x4f9 V415
---
Entry stack: [V11, 0x232, V154, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x232, V154, 0x0]

================================

Block 0x4f5
[0x4f5:0x4f8]
---
Predecessors: [0x4e9]
Successors: []
---
0x4f5 PUSH1 0x0
0x4f7 DUP1
0x4f8 REVERT
---
0x4f5: V417 = 0x0
0x4f8: REVERT 0x0 0x0
---
Entry stack: [V11, 0x232, V154, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x232, V154, 0x0]

================================

Block 0x4f9
[0x4f9:0x553]
---
Predecessors: [0x4e9]
Successors: [0x8ab]
---
0x4f9 JUMPDEST
0x4fa CALLER
0x4fb DUP2
0x4fc PUSH1 0x0
0x4fe ADD
0x4ff PUSH1 0x0
0x501 PUSH2 0x100
0x504 EXP
0x505 DUP2
0x506 SLOAD
0x507 DUP2
0x508 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x51d MUL
0x51e NOT
0x51f AND
0x520 SWAP1
0x521 DUP4
0x522 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x537 AND
0x538 MUL
0x539 OR
0x53a SWAP1
0x53b SSTORE
0x53c POP
0x53d DUP2
0x53e DUP2
0x53f PUSH1 0x1
0x541 ADD
0x542 SWAP1
0x543 DUP1
0x544 MLOAD
0x545 SWAP1
0x546 PUSH1 0x20
0x548 ADD
0x549 SWAP1
0x54a PUSH2 0x554
0x54d SWAP3
0x54e SWAP2
0x54f SWAP1
0x550 PUSH2 0x8ab
0x553 JUMP
---
0x4f9: JUMPDEST 
0x4fa: V418 = CALLER
0x4fc: V419 = 0x0
0x4fe: V420 = ADD 0x0 0x0
0x4ff: V421 = 0x0
0x501: V422 = 0x100
0x504: V423 = EXP 0x100 0x0
0x506: V424 = S[0x0]
0x508: V425 = 0xffffffffffffffffffffffffffffffffffffffff
0x51d: V426 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x51e: V427 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x51f: V428 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V424
0x522: V429 = 0xffffffffffffffffffffffffffffffffffffffff
0x537: V430 = AND 0xffffffffffffffffffffffffffffffffffffffff V418
0x538: V431 = MUL V430 0x1
0x539: V432 = OR V431 V428
0x53b: S[0x0] = V432
0x53f: V433 = 0x1
0x541: V434 = ADD 0x1 0x0
0x544: V435 = M[V154]
0x546: V436 = 0x20
0x548: V437 = ADD 0x20 V154
0x54a: V438 = 0x554
0x550: V439 = 0x8ab
0x553: JUMP 0x8ab
---
Entry stack: [V11, 0x232, V154, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0x554, 0x1, V437, V435]
Exit stack: [V11, 0x232, V154, 0x0, 0x554, 0x1, V437, V435]

================================

Block 0x554
[0x554:0x610]
---
Predecessors: [0x927, 0x9ae]
Successors: [0x92b]
---
0x554 JUMPDEST
0x555 POP
0x556 PUSH1 0x2
0x558 DUP2
0x559 SWAP1
0x55a DUP1
0x55b PUSH1 0x1
0x55d DUP2
0x55e SLOAD
0x55f ADD
0x560 DUP1
0x561 DUP3
0x562 SSTORE
0x563 DUP1
0x564 SWAP2
0x565 POP
0x566 POP
0x567 SWAP1
0x568 PUSH1 0x1
0x56a DUP3
0x56b SUB
0x56c SWAP1
0x56d PUSH1 0x0
0x56f MSTORE
0x570 PUSH1 0x20
0x572 PUSH1 0x0
0x574 SHA3
0x575 SWAP1
0x576 PUSH1 0x2
0x578 MUL
0x579 ADD
0x57a PUSH1 0x0
0x57c SWAP1
0x57d SWAP2
0x57e SWAP3
0x57f SWAP1
0x580 SWAP2
0x581 SWAP1
0x582 SWAP2
0x583 POP
0x584 PUSH1 0x0
0x586 DUP3
0x587 ADD
0x588 PUSH1 0x0
0x58a SWAP1
0x58b SLOAD
0x58c SWAP1
0x58d PUSH2 0x100
0x590 EXP
0x591 SWAP1
0x592 DIV
0x593 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5a8 AND
0x5a9 DUP2
0x5aa PUSH1 0x0
0x5ac ADD
0x5ad PUSH1 0x0
0x5af PUSH2 0x100
0x5b2 EXP
0x5b3 DUP2
0x5b4 SLOAD
0x5b5 DUP2
0x5b6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5cb MUL
0x5cc NOT
0x5cd AND
0x5ce SWAP1
0x5cf DUP4
0x5d0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5e5 AND
0x5e6 MUL
0x5e7 OR
0x5e8 SWAP1
0x5e9 SSTORE
0x5ea POP
0x5eb PUSH1 0x1
0x5ed DUP3
0x5ee ADD
0x5ef DUP2
0x5f0 PUSH1 0x1
0x5f2 ADD
0x5f3 SWAP1
0x5f4 DUP1
0x5f5 SLOAD
0x5f6 PUSH1 0x1
0x5f8 DUP2
0x5f9 PUSH1 0x1
0x5fb AND
0x5fc ISZERO
0x5fd PUSH2 0x100
0x600 MUL
0x601 SUB
0x602 AND
0x603 PUSH1 0x2
0x605 SWAP1
0x606 DIV
0x607 PUSH2 0x611
0x60a SWAP3
0x60b SWAP2
0x60c SWAP1
0x60d PUSH2 0x92b
0x610 JUMP
---
0x554: JUMPDEST 
0x556: V440 = 0x2
0x55b: V441 = 0x1
0x55e: V442 = S[0x2]
0x55f: V443 = ADD V442 0x1
0x562: S[0x2] = V443
0x568: V444 = 0x1
0x56b: V445 = SUB V443 0x1
0x56d: V446 = 0x0
0x56f: M[0x0] = 0x2
0x570: V447 = 0x20
0x572: V448 = 0x0
0x574: V449 = SHA3 0x0 0x20
0x576: V450 = 0x2
0x578: V451 = MUL 0x2 V445
0x579: V452 = ADD V451 V449
0x57a: V453 = 0x0
0x584: V454 = 0x0
0x587: V455 = ADD S1 0x0
0x588: V456 = 0x0
0x58b: V457 = S[V455]
0x58d: V458 = 0x100
0x590: V459 = EXP 0x100 0x0
0x592: V460 = DIV V457 0x1
0x593: V461 = 0xffffffffffffffffffffffffffffffffffffffff
0x5a8: V462 = AND 0xffffffffffffffffffffffffffffffffffffffff V460
0x5aa: V463 = 0x0
0x5ac: V464 = ADD 0x0 V452
0x5ad: V465 = 0x0
0x5af: V466 = 0x100
0x5b2: V467 = EXP 0x100 0x0
0x5b4: V468 = S[V464]
0x5b6: V469 = 0xffffffffffffffffffffffffffffffffffffffff
0x5cb: V470 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x5cc: V471 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x5cd: V472 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V468
0x5d0: V473 = 0xffffffffffffffffffffffffffffffffffffffff
0x5e5: V474 = AND 0xffffffffffffffffffffffffffffffffffffffff V462
0x5e6: V475 = MUL V474 0x1
0x5e7: V476 = OR V475 V472
0x5e9: S[V464] = V476
0x5eb: V477 = 0x1
0x5ee: V478 = ADD S1 0x1
0x5f0: V479 = 0x1
0x5f2: V480 = ADD 0x1 V452
0x5f5: V481 = S[V478]
0x5f6: V482 = 0x1
0x5f9: V483 = 0x1
0x5fb: V484 = AND 0x1 V481
0x5fc: V485 = ISZERO V484
0x5fd: V486 = 0x100
0x600: V487 = MUL 0x100 V485
0x601: V488 = SUB V487 0x1
0x602: V489 = AND V488 V481
0x603: V490 = 0x2
0x606: V491 = DIV V489 0x2
0x607: V492 = 0x611
0x60d: V493 = 0x92b
0x610: JUMP 0x92b
---
Entry stack: [S13, V443, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, V443, S1, V452, 0x611, V480, V478, V491]
Exit stack: [S13, V443, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V443, S1, V452, 0x611, V480, V478, V491]

================================

Block 0x611
[0x611:0x62c]
---
Predecessors: [0x927, 0x9ae]
Successors: [0x62d]
---
0x611 JUMPDEST
0x612 POP
0x613 POP
0x614 POP
0x615 POP
0x616 PUSH1 0x0
0x618 SLOAD
0x619 PUSH1 0x0
0x61b NOT
0x61c AND
0x61d DUP3
0x61e PUSH1 0x40
0x620 MLOAD
0x621 DUP1
0x622 DUP3
0x623 DUP1
0x624 MLOAD
0x625 SWAP1
0x626 PUSH1 0x20
0x628 ADD
0x629 SWAP1
0x62a DUP1
0x62b DUP4
0x62c DUP4
---
0x611: JUMPDEST 
0x616: V494 = 0x0
0x618: V495 = S[0x0]
0x619: V496 = 0x0
0x61b: V497 = NOT 0x0
0x61c: V498 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V495
0x61e: V499 = 0x40
0x620: V500 = M[0x40]
0x624: V501 = M[S5]
0x626: V502 = 0x20
0x628: V503 = ADD 0x20 S5
---
Entry stack: [S13, V443, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, V498, S5, V500, V500, V503, V501, V501, V500, V503]
Exit stack: [S13, V443, S11, S10, S9, S8, S7, S6, S5, S4, V498, S5, V500, V500, V503, V501, V501, V500, V503]

================================

Block 0x62d
[0x62d:0x637]
---
Predecessors: [0x611, 0x638]
Successors: [0x638, 0x652]
---
0x62d JUMPDEST
0x62e PUSH1 0x20
0x630 DUP4
0x631 LT
0x632 ISZERO
0x633 ISZERO
0x634 PUSH2 0x652
0x637 JUMPI
---
0x62d: JUMPDEST 
0x62e: V504 = 0x20
0x631: V505 = LT S2 0x20
0x632: V506 = ISZERO V505
0x633: V507 = ISZERO V506
0x634: V508 = 0x652
0x637: JUMPI 0x652 V507
---
Entry stack: [S18, V443, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S18, V443, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x638
[0x638:0x651]
---
Predecessors: [0x62d]
Successors: [0x62d]
---
0x638 DUP1
0x639 MLOAD
0x63a DUP3
0x63b MSTORE
0x63c PUSH1 0x20
0x63e DUP3
0x63f ADD
0x640 SWAP2
0x641 POP
0x642 PUSH1 0x20
0x644 DUP2
0x645 ADD
0x646 SWAP1
0x647 POP
0x648 PUSH1 0x20
0x64a DUP4
0x64b SUB
0x64c SWAP3
0x64d POP
0x64e PUSH2 0x62d
0x651 JUMP
---
0x639: V509 = M[S0]
0x63b: M[S1] = V509
0x63c: V510 = 0x20
0x63f: V511 = ADD S1 0x20
0x642: V512 = 0x20
0x645: V513 = ADD S0 0x20
0x648: V514 = 0x20
0x64b: V515 = SUB S2 0x20
0x64e: V516 = 0x62d
0x651: JUMP 0x62d
---
Entry stack: [S18, V443, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V515, V511, V513]
Exit stack: [S18, V443, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V515, V511, V513]

================================

Block 0x652
[0x652:0x689]
---
Predecessors: [0x62d]
Successors: [0x68a, 0x71a]
---
0x652 JUMPDEST
0x653 PUSH1 0x1
0x655 DUP4
0x656 PUSH1 0x20
0x658 SUB
0x659 PUSH2 0x100
0x65c EXP
0x65d SUB
0x65e DUP1
0x65f NOT
0x660 DUP3
0x661 MLOAD
0x662 AND
0x663 DUP2
0x664 DUP5
0x665 MLOAD
0x666 AND
0x667 DUP1
0x668 DUP3
0x669 OR
0x66a DUP6
0x66b MSTORE
0x66c POP
0x66d POP
0x66e POP
0x66f POP
0x670 POP
0x671 POP
0x672 SWAP1
0x673 POP
0x674 ADD
0x675 SWAP2
0x676 POP
0x677 POP
0x678 PUSH1 0x40
0x67a MLOAD
0x67b DUP1
0x67c SWAP2
0x67d SUB
0x67e SWAP1
0x67f SHA3
0x680 PUSH1 0x0
0x682 NOT
0x683 AND
0x684 EQ
0x685 ISZERO
0x686 PUSH2 0x71a
0x689 JUMPI
---
0x652: JUMPDEST 
0x653: V517 = 0x1
0x656: V518 = 0x20
0x658: V519 = SUB 0x20 S2
0x659: V520 = 0x100
0x65c: V521 = EXP 0x100 V519
0x65d: V522 = SUB V521 0x1
0x65f: V523 = NOT V522
0x661: V524 = M[S0]
0x662: V525 = AND V524 V523
0x665: V526 = M[S1]
0x666: V527 = AND V526 V522
0x669: V528 = OR V525 V527
0x66b: M[S1] = V528
0x674: V529 = ADD S3 S5
0x678: V530 = 0x40
0x67a: V531 = M[0x40]
0x67d: V532 = SUB V529 V531
0x67f: V533 = SHA3 V531 V532
0x680: V534 = 0x0
0x682: V535 = NOT 0x0
0x683: V536 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V533
0x684: V537 = EQ V536 S8
0x685: V538 = ISZERO V537
0x686: V539 = 0x71a
0x689: JUMPI 0x71a V538
---
Entry stack: [S18, V443, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 9
Stack additions: []
Exit stack: [S18, V443, S16, S15, S14, S13, S12, S11, S10, S9]

================================

Block 0x68a
[0x68a:0x69e]
---
Predecessors: [0x652]
Successors: [0x8ab]
---
0x68a DUP2
0x68b PUSH1 0x4
0x68d SWAP1
0x68e DUP1
0x68f MLOAD
0x690 SWAP1
0x691 PUSH1 0x20
0x693 ADD
0x694 SWAP1
0x695 PUSH2 0x69f
0x698 SWAP3
0x699 SWAP2
0x69a SWAP1
0x69b PUSH2 0x8ab
0x69e JUMP
---
0x68b: V540 = 0x4
0x68f: V541 = M[S1]
0x691: V542 = 0x20
0x693: V543 = ADD 0x20 S1
0x695: V544 = 0x69f
0x69b: V545 = 0x8ab
0x69e: JUMP 0x8ab
---
Entry stack: [S9, V443, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x69f, 0x4, V543, V541]
Exit stack: [S9, V443, S7, S6, S5, S4, S3, S2, S1, S0, 0x69f, 0x4, V543, V541]

================================

Block 0x69f
[0x69f:0x70e]
---
Predecessors: [0x927, 0x9ae]
Successors: [0x70f, 0x718]
---
0x69f JUMPDEST
0x6a0 POP
0x6a1 PUSH1 0x0
0x6a3 PUSH1 0x1
0x6a5 PUSH1 0x0
0x6a7 PUSH2 0x100
0x6aa EXP
0x6ab DUP2
0x6ac SLOAD
0x6ad DUP2
0x6ae PUSH1 0xff
0x6b0 MUL
0x6b1 NOT
0x6b2 AND
0x6b3 SWAP1
0x6b4 DUP4
0x6b5 ISZERO
0x6b6 ISZERO
0x6b7 MUL
0x6b8 OR
0x6b9 SWAP1
0x6ba SSTORE
0x6bb POP
0x6bc CALLER
0x6bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6d2 AND
0x6d3 PUSH2 0x8fc
0x6d6 ADDRESS
0x6d7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6ec AND
0x6ed BALANCE
0x6ee SWAP1
0x6ef DUP2
0x6f0 ISZERO
0x6f1 MUL
0x6f2 SWAP1
0x6f3 PUSH1 0x40
0x6f5 MLOAD
0x6f6 PUSH1 0x0
0x6f8 PUSH1 0x40
0x6fa MLOAD
0x6fb DUP1
0x6fc DUP4
0x6fd SUB
0x6fe DUP2
0x6ff DUP6
0x700 DUP9
0x701 DUP9
0x702 CALL
0x703 SWAP4
0x704 POP
0x705 POP
0x706 POP
0x707 POP
0x708 ISZERO
0x709 DUP1
0x70a ISZERO
0x70b PUSH2 0x718
0x70e JUMPI
---
0x69f: JUMPDEST 
0x6a1: V546 = 0x0
0x6a3: V547 = 0x1
0x6a5: V548 = 0x0
0x6a7: V549 = 0x100
0x6aa: V550 = EXP 0x100 0x0
0x6ac: V551 = S[0x1]
0x6ae: V552 = 0xff
0x6b0: V553 = MUL 0xff 0x1
0x6b1: V554 = NOT 0xff
0x6b2: V555 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V551
0x6b5: V556 = ISZERO 0x0
0x6b6: V557 = ISZERO 0x1
0x6b7: V558 = MUL 0x0 0x1
0x6b8: V559 = OR 0x0 V555
0x6ba: S[0x1] = V559
0x6bc: V560 = CALLER
0x6bd: V561 = 0xffffffffffffffffffffffffffffffffffffffff
0x6d2: V562 = AND 0xffffffffffffffffffffffffffffffffffffffff V560
0x6d3: V563 = 0x8fc
0x6d6: V564 = ADDRESS
0x6d7: V565 = 0xffffffffffffffffffffffffffffffffffffffff
0x6ec: V566 = AND 0xffffffffffffffffffffffffffffffffffffffff V564
0x6ed: V567 = BALANCE V566
0x6f0: V568 = ISZERO V567
0x6f1: V569 = MUL V568 0x8fc
0x6f3: V570 = 0x40
0x6f5: V571 = M[0x40]
0x6f6: V572 = 0x0
0x6f8: V573 = 0x40
0x6fa: V574 = M[0x40]
0x6fd: V575 = SUB V571 V574
0x702: V576 = CALL V569 V562 V567 V574 V575 V574 0x0
0x708: V577 = ISZERO V576
0x70a: V578 = ISZERO V577
0x70b: V579 = 0x718
0x70e: JUMPI 0x718 V578
---
Entry stack: [S13, V443, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V577]
Exit stack: [S13, V443, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V577]

================================

Block 0x70f
[0x70f:0x717]
---
Predecessors: [0x69f]
Successors: []
---
0x70f RETURNDATASIZE
0x710 PUSH1 0x0
0x712 DUP1
0x713 RETURNDATACOPY
0x714 RETURNDATASIZE
0x715 PUSH1 0x0
0x717 REVERT
---
0x70f: V580 = RETURNDATASIZE
0x710: V581 = 0x0
0x713: RETURNDATACOPY 0x0 0x0 V580
0x714: V582 = RETURNDATASIZE
0x715: V583 = 0x0
0x717: REVERT 0x0 V582
---
Entry stack: [S13, V443, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V577]
Stack pops: 0
Stack additions: []
Exit stack: [S13, V443, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V577]

================================

Block 0x718
[0x718:0x719]
---
Predecessors: [0x69f]
Successors: [0x71a]
---
0x718 JUMPDEST
0x719 POP
---
0x718: JUMPDEST 
---
Entry stack: [S13, V443, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V577]
Stack pops: 1
Stack additions: []
Exit stack: [S13, V443, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x71a
[0x71a:0x71d]
---
Predecessors: [0x652, 0x718]
Successors: [0x232]
---
0x71a JUMPDEST
0x71b POP
0x71c POP
0x71d JUMP
---
0x71a: JUMPDEST 
0x71d: JUMP S2
---
Entry stack: [S12, V443, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [S12, V443, S10, S9, S8, S7, S6, S5, S4, S3]

================================

Block 0x71e
[0x71e:0x76d]
---
Predecessors: [0x240]
Successors: [0x76e, 0x7b4]
---
0x71e JUMPDEST
0x71f PUSH1 0x4
0x721 DUP1
0x722 SLOAD
0x723 PUSH1 0x1
0x725 DUP2
0x726 PUSH1 0x1
0x728 AND
0x729 ISZERO
0x72a PUSH2 0x100
0x72d MUL
0x72e SUB
0x72f AND
0x730 PUSH1 0x2
0x732 SWAP1
0x733 DIV
0x734 DUP1
0x735 PUSH1 0x1f
0x737 ADD
0x738 PUSH1 0x20
0x73a DUP1
0x73b SWAP2
0x73c DIV
0x73d MUL
0x73e PUSH1 0x20
0x740 ADD
0x741 PUSH1 0x40
0x743 MLOAD
0x744 SWAP1
0x745 DUP2
0x746 ADD
0x747 PUSH1 0x40
0x749 MSTORE
0x74a DUP1
0x74b SWAP3
0x74c SWAP2
0x74d SWAP1
0x74e DUP2
0x74f DUP2
0x750 MSTORE
0x751 PUSH1 0x20
0x753 ADD
0x754 DUP3
0x755 DUP1
0x756 SLOAD
0x757 PUSH1 0x1
0x759 DUP2
0x75a PUSH1 0x1
0x75c AND
0x75d ISZERO
0x75e PUSH2 0x100
0x761 MUL
0x762 SUB
0x763 AND
0x764 PUSH1 0x2
0x766 SWAP1
0x767 DIV
0x768 DUP1
0x769 ISZERO
0x76a PUSH2 0x7b4
0x76d JUMPI
---
0x71e: JUMPDEST 
0x71f: V584 = 0x4
0x722: V585 = S[0x4]
0x723: V586 = 0x1
0x726: V587 = 0x1
0x728: V588 = AND 0x1 V585
0x729: V589 = ISZERO V588
0x72a: V590 = 0x100
0x72d: V591 = MUL 0x100 V589
0x72e: V592 = SUB V591 0x1
0x72f: V593 = AND V592 V585
0x730: V594 = 0x2
0x733: V595 = DIV V593 0x2
0x735: V596 = 0x1f
0x737: V597 = ADD 0x1f V595
0x738: V598 = 0x20
0x73c: V599 = DIV V597 0x20
0x73d: V600 = MUL V599 0x20
0x73e: V601 = 0x20
0x740: V602 = ADD 0x20 V600
0x741: V603 = 0x40
0x743: V604 = M[0x40]
0x746: V605 = ADD V604 V602
0x747: V606 = 0x40
0x749: M[0x40] = V605
0x750: M[V604] = V595
0x751: V607 = 0x20
0x753: V608 = ADD 0x20 V604
0x756: V609 = S[0x4]
0x757: V610 = 0x1
0x75a: V611 = 0x1
0x75c: V612 = AND 0x1 V609
0x75d: V613 = ISZERO V612
0x75e: V614 = 0x100
0x761: V615 = MUL 0x100 V613
0x762: V616 = SUB V615 0x1
0x763: V617 = AND V616 V609
0x764: V618 = 0x2
0x767: V619 = DIV V617 0x2
0x769: V620 = ISZERO V619
0x76a: V621 = 0x7b4
0x76d: JUMPI 0x7b4 V620
---
Entry stack: [V11, 0x249]
Stack pops: 0
Stack additions: [V604, 0x4, V595, V608, 0x4, V619]
Exit stack: [V11, 0x249, V604, 0x4, V595, V608, 0x4, V619]

================================

Block 0x76e
[0x76e:0x775]
---
Predecessors: [0x71e]
Successors: [0x776, 0x789]
---
0x76e DUP1
0x76f PUSH1 0x1f
0x771 LT
0x772 PUSH2 0x789
0x775 JUMPI
---
0x76f: V622 = 0x1f
0x771: V623 = LT 0x1f V619
0x772: V624 = 0x789
0x775: JUMPI 0x789 V623
---
Entry stack: [V11, 0x249, V604, 0x4, V595, V608, 0x4, V619]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x249, V604, 0x4, V595, V608, 0x4, V619]

================================

Block 0x776
[0x776:0x788]
---
Predecessors: [0x76e]
Successors: [0x7b4]
---
0x776 PUSH2 0x100
0x779 DUP1
0x77a DUP4
0x77b SLOAD
0x77c DIV
0x77d MUL
0x77e DUP4
0x77f MSTORE
0x780 SWAP2
0x781 PUSH1 0x20
0x783 ADD
0x784 SWAP2
0x785 PUSH2 0x7b4
0x788 JUMP
---
0x776: V625 = 0x100
0x77b: V626 = S[0x4]
0x77c: V627 = DIV V626 0x100
0x77d: V628 = MUL V627 0x100
0x77f: M[V608] = V628
0x781: V629 = 0x20
0x783: V630 = ADD 0x20 V608
0x785: V631 = 0x7b4
0x788: JUMP 0x7b4
---
Entry stack: [V11, 0x249, V604, 0x4, V595, V608, 0x4, V619]
Stack pops: 3
Stack additions: [V630, S1, S0]
Exit stack: [V11, 0x249, V604, 0x4, V595, V630, 0x4, V619]

================================

Block 0x789
[0x789:0x796]
---
Predecessors: [0x76e]
Successors: [0x797]
---
0x789 JUMPDEST
0x78a DUP3
0x78b ADD
0x78c SWAP2
0x78d SWAP1
0x78e PUSH1 0x0
0x790 MSTORE
0x791 PUSH1 0x20
0x793 PUSH1 0x0
0x795 SHA3
0x796 SWAP1
---
0x789: JUMPDEST 
0x78b: V632 = ADD V608 V619
0x78e: V633 = 0x0
0x790: M[0x0] = 0x4
0x791: V634 = 0x20
0x793: V635 = 0x0
0x795: V636 = SHA3 0x0 0x20
---
Entry stack: [V11, 0x249, V604, 0x4, V595, V608, 0x4, V619]
Stack pops: 3
Stack additions: [V632, V636, S2]
Exit stack: [V11, 0x249, V604, 0x4, V595, V632, V636, V608]

================================

Block 0x797
[0x797:0x7aa]
---
Predecessors: [0x789, 0x797]
Successors: [0x797, 0x7ab]
---
0x797 JUMPDEST
0x798 DUP2
0x799 SLOAD
0x79a DUP2
0x79b MSTORE
0x79c SWAP1
0x79d PUSH1 0x1
0x79f ADD
0x7a0 SWAP1
0x7a1 PUSH1 0x20
0x7a3 ADD
0x7a4 DUP1
0x7a5 DUP4
0x7a6 GT
0x7a7 PUSH2 0x797
0x7aa JUMPI
---
0x797: JUMPDEST 
0x799: V637 = S[S1]
0x79b: M[S0] = V637
0x79d: V638 = 0x1
0x79f: V639 = ADD 0x1 S1
0x7a1: V640 = 0x20
0x7a3: V641 = ADD 0x20 S0
0x7a6: V642 = GT V632 V641
0x7a7: V643 = 0x797
0x7aa: JUMPI 0x797 V642
---
Entry stack: [V11, 0x249, V604, 0x4, V595, V632, S1, S0]
Stack pops: 3
Stack additions: [S2, V639, V641]
Exit stack: [V11, 0x249, V604, 0x4, V595, V632, V639, V641]

================================

Block 0x7ab
[0x7ab:0x7b3]
---
Predecessors: [0x797]
Successors: [0x7b4]
---
0x7ab DUP3
0x7ac SWAP1
0x7ad SUB
0x7ae PUSH1 0x1f
0x7b0 AND
0x7b1 DUP3
0x7b2 ADD
0x7b3 SWAP2
---
0x7ad: V644 = SUB V641 V632
0x7ae: V645 = 0x1f
0x7b0: V646 = AND 0x1f V644
0x7b2: V647 = ADD V632 V646
---
Entry stack: [V11, 0x249, V604, 0x4, V595, V632, V639, V641]
Stack pops: 3
Stack additions: [V647, S1, S2]
Exit stack: [V11, 0x249, V604, 0x4, V595, V647, V639, V632]

================================

Block 0x7b4
[0x7b4:0x7bb]
---
Predecessors: [0x71e, 0x776, 0x7ab]
Successors: [0x249]
---
0x7b4 JUMPDEST
0x7b5 POP
0x7b6 POP
0x7b7 POP
0x7b8 POP
0x7b9 POP
0x7ba DUP2
0x7bb JUMP
---
0x7b4: JUMPDEST 
0x7bb: JUMP 0x249
---
Entry stack: [V11, 0x249, V604, 0x4, V595, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V11, 0x249, V604]

================================

Block 0x7bc
[0x7bc:0x813]
---
Predecessors: [0x2d0]
Successors: [0x814, 0x818]
---
0x7bc JUMPDEST
0x7bd PUSH1 0x5
0x7bf PUSH1 0x0
0x7c1 SWAP1
0x7c2 SLOAD
0x7c3 SWAP1
0x7c4 PUSH2 0x100
0x7c7 EXP
0x7c8 SWAP1
0x7c9 DIV
0x7ca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7df AND
0x7e0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7f5 AND
0x7f6 CALLER
0x7f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x80c AND
0x80d EQ
0x80e ISZERO
0x80f ISZERO
0x810 PUSH2 0x818
0x813 JUMPI
---
0x7bc: JUMPDEST 
0x7bd: V648 = 0x5
0x7bf: V649 = 0x0
0x7c2: V650 = S[0x5]
0x7c4: V651 = 0x100
0x7c7: V652 = EXP 0x100 0x0
0x7c9: V653 = DIV V650 0x1
0x7ca: V654 = 0xffffffffffffffffffffffffffffffffffffffff
0x7df: V655 = AND 0xffffffffffffffffffffffffffffffffffffffff V653
0x7e0: V656 = 0xffffffffffffffffffffffffffffffffffffffff
0x7f5: V657 = AND 0xffffffffffffffffffffffffffffffffffffffff V655
0x7f6: V658 = CALLER
0x7f7: V659 = 0xffffffffffffffffffffffffffffffffffffffff
0x80c: V660 = AND 0xffffffffffffffffffffffffffffffffffffffff V658
0x80d: V661 = EQ V660 V657
0x80e: V662 = ISZERO V661
0x80f: V663 = ISZERO V662
0x810: V664 = 0x818
0x813: JUMPI 0x818 V663
---
Entry stack: [V11, 0x32b, V232]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x32b, V232]

================================

Block 0x814
[0x814:0x817]
---
Predecessors: [0x7bc]
Successors: []
---
0x814 PUSH1 0x0
0x816 DUP1
0x817 REVERT
---
0x814: V665 = 0x0
0x817: REVERT 0x0 0x0
---
Entry stack: [V11, 0x32b, V232]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x32b, V232]

================================

Block 0x818
[0x818:0x82d]
---
Predecessors: [0x7bc]
Successors: [0x8ab]
---
0x818 JUMPDEST
0x819 DUP1
0x81a PUSH1 0x4
0x81c SWAP1
0x81d DUP1
0x81e MLOAD
0x81f SWAP1
0x820 PUSH1 0x20
0x822 ADD
0x823 SWAP1
0x824 PUSH2 0x82e
0x827 SWAP3
0x828 SWAP2
0x829 SWAP1
0x82a PUSH2 0x8ab
0x82d JUMP
---
0x818: JUMPDEST 
0x81a: V666 = 0x4
0x81e: V667 = M[V232]
0x820: V668 = 0x20
0x822: V669 = ADD 0x20 V232
0x824: V670 = 0x82e
0x82a: V671 = 0x8ab
0x82d: JUMP 0x8ab
---
Entry stack: [V11, 0x32b, V232]
Stack pops: 1
Stack additions: [S0, 0x82e, 0x4, V669, V667]
Exit stack: [V11, 0x32b, V232, 0x82e, 0x4, V669, V667]

================================

Block 0x82e
[0x82e:0x89d]
---
Predecessors: [0x927, 0x9ae]
Successors: [0x89e, 0x8a7]
---
0x82e JUMPDEST
0x82f POP
0x830 PUSH1 0x0
0x832 PUSH1 0x1
0x834 PUSH1 0x0
0x836 PUSH2 0x100
0x839 EXP
0x83a DUP2
0x83b SLOAD
0x83c DUP2
0x83d PUSH1 0xff
0x83f MUL
0x840 NOT
0x841 AND
0x842 SWAP1
0x843 DUP4
0x844 ISZERO
0x845 ISZERO
0x846 MUL
0x847 OR
0x848 SWAP1
0x849 SSTORE
0x84a POP
0x84b CALLER
0x84c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x861 AND
0x862 PUSH2 0x8fc
0x865 ADDRESS
0x866 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x87b AND
0x87c BALANCE
0x87d SWAP1
0x87e DUP2
0x87f ISZERO
0x880 MUL
0x881 SWAP1
0x882 PUSH1 0x40
0x884 MLOAD
0x885 PUSH1 0x0
0x887 PUSH1 0x40
0x889 MLOAD
0x88a DUP1
0x88b DUP4
0x88c SUB
0x88d DUP2
0x88e DUP6
0x88f DUP9
0x890 DUP9
0x891 CALL
0x892 SWAP4
0x893 POP
0x894 POP
0x895 POP
0x896 POP
0x897 ISZERO
0x898 DUP1
0x899 ISZERO
0x89a PUSH2 0x8a7
0x89d JUMPI
---
0x82e: JUMPDEST 
0x830: V672 = 0x0
0x832: V673 = 0x1
0x834: V674 = 0x0
0x836: V675 = 0x100
0x839: V676 = EXP 0x100 0x0
0x83b: V677 = S[0x1]
0x83d: V678 = 0xff
0x83f: V679 = MUL 0xff 0x1
0x840: V680 = NOT 0xff
0x841: V681 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V677
0x844: V682 = ISZERO 0x0
0x845: V683 = ISZERO 0x1
0x846: V684 = MUL 0x0 0x1
0x847: V685 = OR 0x0 V681
0x849: S[0x1] = V685
0x84b: V686 = CALLER
0x84c: V687 = 0xffffffffffffffffffffffffffffffffffffffff
0x861: V688 = AND 0xffffffffffffffffffffffffffffffffffffffff V686
0x862: V689 = 0x8fc
0x865: V690 = ADDRESS
0x866: V691 = 0xffffffffffffffffffffffffffffffffffffffff
0x87b: V692 = AND 0xffffffffffffffffffffffffffffffffffffffff V690
0x87c: V693 = BALANCE V692
0x87f: V694 = ISZERO V693
0x880: V695 = MUL V694 0x8fc
0x882: V696 = 0x40
0x884: V697 = M[0x40]
0x885: V698 = 0x0
0x887: V699 = 0x40
0x889: V700 = M[0x40]
0x88c: V701 = SUB V697 V700
0x891: V702 = CALL V695 V688 V693 V700 V701 V700 0x0
0x897: V703 = ISZERO V702
0x899: V704 = ISZERO V703
0x89a: V705 = 0x8a7
0x89d: JUMPI 0x8a7 V704
---
Entry stack: [S13, V443, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V703]
Exit stack: [S13, V443, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V703]

================================

Block 0x89e
[0x89e:0x8a6]
---
Predecessors: [0x82e]
Successors: []
---
0x89e RETURNDATASIZE
0x89f PUSH1 0x0
0x8a1 DUP1
0x8a2 RETURNDATACOPY
0x8a3 RETURNDATASIZE
0x8a4 PUSH1 0x0
0x8a6 REVERT
---
0x89e: V706 = RETURNDATASIZE
0x89f: V707 = 0x0
0x8a2: RETURNDATACOPY 0x0 0x0 V706
0x8a3: V708 = RETURNDATASIZE
0x8a4: V709 = 0x0
0x8a6: REVERT 0x0 V708
---
Entry stack: [S13, V443, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V703]
Stack pops: 0
Stack additions: []
Exit stack: [S13, V443, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V703]

================================

Block 0x8a7
[0x8a7:0x8aa]
---
Predecessors: [0x82e]
Successors: [0x32b]
---
0x8a7 JUMPDEST
0x8a8 POP
0x8a9 POP
0x8aa JUMP
---
0x8a7: JUMPDEST 
0x8aa: JUMP S2
---
Entry stack: [S13, V443, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V703]
Stack pops: 3
Stack additions: []
Exit stack: [S13, V443, S11, S10, S9, S8, S7, S6, S5, S4, S3]

================================

Block 0x8ab
[0x8ab:0x8db]
---
Predecessors: [0x4f9, 0x68a, 0x818]
Successors: [0x8dc, 0x8ec]
---
0x8ab JUMPDEST
0x8ac DUP3
0x8ad DUP1
0x8ae SLOAD
0x8af PUSH1 0x1
0x8b1 DUP2
0x8b2 PUSH1 0x1
0x8b4 AND
0x8b5 ISZERO
0x8b6 PUSH2 0x100
0x8b9 MUL
0x8ba SUB
0x8bb AND
0x8bc PUSH1 0x2
0x8be SWAP1
0x8bf DIV
0x8c0 SWAP1
0x8c1 PUSH1 0x0
0x8c3 MSTORE
0x8c4 PUSH1 0x20
0x8c6 PUSH1 0x0
0x8c8 SHA3
0x8c9 SWAP1
0x8ca PUSH1 0x1f
0x8cc ADD
0x8cd PUSH1 0x20
0x8cf SWAP1
0x8d0 DIV
0x8d1 DUP2
0x8d2 ADD
0x8d3 SWAP3
0x8d4 DUP3
0x8d5 PUSH1 0x1f
0x8d7 LT
0x8d8 PUSH2 0x8ec
0x8db JUMPI
---
0x8ab: JUMPDEST 
0x8ae: V710 = S[{0x1, 0x4}]
0x8af: V711 = 0x1
0x8b2: V712 = 0x1
0x8b4: V713 = AND 0x1 V710
0x8b5: V714 = ISZERO V713
0x8b6: V715 = 0x100
0x8b9: V716 = MUL 0x100 V714
0x8ba: V717 = SUB V716 0x1
0x8bb: V718 = AND V717 V710
0x8bc: V719 = 0x2
0x8bf: V720 = DIV V718 0x2
0x8c1: V721 = 0x0
0x8c3: M[0x0] = {0x1, 0x4}
0x8c4: V722 = 0x20
0x8c6: V723 = 0x0
0x8c8: V724 = SHA3 0x0 0x20
0x8ca: V725 = 0x1f
0x8cc: V726 = ADD 0x1f V720
0x8cd: V727 = 0x20
0x8d0: V728 = DIV V726 0x20
0x8d2: V729 = ADD V724 V728
0x8d5: V730 = 0x1f
0x8d7: V731 = LT 0x1f S0
0x8d8: V732 = 0x8ec
0x8db: JUMPI 0x8ec V731
---
Entry stack: [S13, V443, S11, S10, S9, S8, S7, S6, S5, S4, {0x554, 0x69f, 0x82e}, {0x1, 0x4}, S1, S0]
Stack pops: 3
Stack additions: [S2, V729, S0, V724, S1]
Exit stack: [S13, V443, S11, S10, S9, S8, S7, S6, S5, S4, {0x554, 0x69f, 0x82e}, {0x1, 0x4}, V729, S0, V724, S1]

================================

Block 0x8dc
[0x8dc:0x8eb]
---
Predecessors: [0x8ab]
Successors: [0x91a]
---
0x8dc DUP1
0x8dd MLOAD
0x8de PUSH1 0xff
0x8e0 NOT
0x8e1 AND
0x8e2 DUP4
0x8e3 DUP1
0x8e4 ADD
0x8e5 OR
0x8e6 DUP6
0x8e7 SSTORE
0x8e8 PUSH2 0x91a
0x8eb JUMP
---
0x8dd: V733 = M[S0]
0x8de: V734 = 0xff
0x8e0: V735 = NOT 0xff
0x8e1: V736 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V733
0x8e4: V737 = ADD S2 S2
0x8e5: V738 = OR V737 V736
0x8e7: S[{0x1, 0x4}] = V738
0x8e8: V739 = 0x91a
0x8eb: JUMP 0x91a
---
Entry stack: [S15, V443, S13, S12, S11, S10, S9, S8, S7, S6, {0x554, 0x69f, 0x82e}, {0x1, 0x4}, V729, S2, V724, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [S15, V443, S13, S12, S11, S10, S9, S8, S7, S6, {0x554, 0x69f, 0x82e}, {0x1, 0x4}, V729, S2, V724, S0]

================================

Block 0x8ec
[0x8ec:0x8fa]
---
Predecessors: [0x8ab]
Successors: [0x8fb, 0x91a]
---
0x8ec JUMPDEST
0x8ed DUP3
0x8ee DUP1
0x8ef ADD
0x8f0 PUSH1 0x1
0x8f2 ADD
0x8f3 DUP6
0x8f4 SSTORE
0x8f5 DUP3
0x8f6 ISZERO
0x8f7 PUSH2 0x91a
0x8fa JUMPI
---
0x8ec: JUMPDEST 
0x8ef: V740 = ADD S2 S2
0x8f0: V741 = 0x1
0x8f2: V742 = ADD 0x1 V740
0x8f4: S[{0x1, 0x4}] = V742
0x8f6: V743 = ISZERO S2
0x8f7: V744 = 0x91a
0x8fa: JUMPI 0x91a V743
---
Entry stack: [S15, V443, S13, S12, S11, S10, S9, S8, S7, S6, {0x554, 0x69f, 0x82e}, {0x1, 0x4}, V729, S2, V724, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [S15, V443, S13, S12, S11, S10, S9, S8, S7, S6, {0x554, 0x69f, 0x82e}, {0x1, 0x4}, V729, S2, V724, S0]

================================

Block 0x8fb
[0x8fb:0x8fd]
---
Predecessors: [0x8ec]
Successors: [0x8fe]
---
0x8fb SWAP2
0x8fc DUP3
0x8fd ADD
---
0x8fd: V745 = ADD S0 S2
---
Entry stack: [S15, V443, S13, S12, S11, S10, S9, S8, S7, S6, {0x554, 0x69f, 0x82e}, {0x1, 0x4}, V729, S2, V724, S0]
Stack pops: 3
Stack additions: [S0, S1, V745]
Exit stack: [S15, V443, S13, S12, S11, S10, S9, S8, S7, S6, {0x554, 0x69f, 0x82e}, {0x1, 0x4}, V729, S0, V724, V745]

================================

Block 0x8fe
[0x8fe:0x906]
---
Predecessors: [0x8fb, 0x907]
Successors: [0x907, 0x919]
---
0x8fe JUMPDEST
0x8ff DUP3
0x900 DUP2
0x901 GT
0x902 ISZERO
0x903 PUSH2 0x919
0x906 JUMPI
---
0x8fe: JUMPDEST 
0x901: V746 = GT V745 S2
0x902: V747 = ISZERO V746
0x903: V748 = 0x919
0x906: JUMPI 0x919 V747
---
Entry stack: [S15, V443, S13, S12, S11, S10, S9, S8, S7, S6, {0x554, 0x69f, 0x82e}, {0x1, 0x4}, V729, S2, S1, V745]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S15, V443, S13, S12, S11, S10, S9, S8, S7, S6, {0x554, 0x69f, 0x82e}, {0x1, 0x4}, V729, S2, S1, V745]

================================

Block 0x907
[0x907:0x918]
---
Predecessors: [0x8fe]
Successors: [0x8fe]
---
0x907 DUP3
0x908 MLOAD
0x909 DUP3
0x90a SSTORE
0x90b SWAP2
0x90c PUSH1 0x20
0x90e ADD
0x90f SWAP2
0x910 SWAP1
0x911 PUSH1 0x1
0x913 ADD
0x914 SWAP1
0x915 PUSH2 0x8fe
0x918 JUMP
---
0x908: V749 = M[S2]
0x90a: S[S1] = V749
0x90c: V750 = 0x20
0x90e: V751 = ADD 0x20 S2
0x911: V752 = 0x1
0x913: V753 = ADD 0x1 S1
0x915: V754 = 0x8fe
0x918: JUMP 0x8fe
---
Entry stack: [S15, V443, S13, S12, S11, S10, S9, S8, S7, S6, {0x554, 0x69f, 0x82e}, {0x1, 0x4}, V729, S2, S1, V745]
Stack pops: 3
Stack additions: [V751, V753, S0]
Exit stack: [S15, V443, S13, S12, S11, S10, S9, S8, S7, S6, {0x554, 0x69f, 0x82e}, {0x1, 0x4}, V729, V751, V753, V745]

================================

Block 0x919
[0x919:0x919]
---
Predecessors: [0x8fe]
Successors: [0x91a]
---
0x919 JUMPDEST
---
0x919: JUMPDEST 
---
Entry stack: [S15, V443, S13, S12, S11, S10, S9, S8, S7, S6, {0x554, 0x69f, 0x82e}, {0x1, 0x4}, V729, S2, S1, V745]
Stack pops: 0
Stack additions: []
Exit stack: [S15, V443, S13, S12, S11, S10, S9, S8, S7, S6, {0x554, 0x69f, 0x82e}, {0x1, 0x4}, V729, S2, S1, V745]

================================

Block 0x91a
[0x91a:0x926]
---
Predecessors: [0x8dc, 0x8ec, 0x919]
Successors: [0x9b2]
---
0x91a JUMPDEST
0x91b POP
0x91c SWAP1
0x91d POP
0x91e PUSH2 0x927
0x921 SWAP2
0x922 SWAP1
0x923 PUSH2 0x9b2
0x926 JUMP
---
0x91a: JUMPDEST 
0x91e: V755 = 0x927
0x923: V756 = 0x9b2
0x926: JUMP 0x9b2
---
Entry stack: [S15, V443, S13, S12, S11, S10, S9, S8, S7, S6, {0x554, 0x69f, 0x82e}, {0x1, 0x4}, V729, S2, S1, S0]
Stack pops: 4
Stack additions: [0x927, S3, S1]
Exit stack: [S15, V443, S13, S12, S11, S10, S9, S8, S7, S6, {0x554, 0x69f, 0x82e}, {0x1, 0x4}, 0x927, V729, S1]

================================

Block 0x927
[0x927:0x92a]
---
Predecessors: [0x9d4]
Successors: [0x554, 0x611, 0x69f, 0x82e]
---
0x927 JUMPDEST
0x928 POP
0x929 SWAP1
0x92a JUMP
---
0x927: JUMPDEST 
0x92a: JUMP {0x554, 0x611, 0x69f, 0x82e}
---
Entry stack: [S15, V443, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x554, 0x611, 0x69f, 0x82e}, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [S15, V443, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S1]

================================

Block 0x92b
[0x92b:0x95b]
---
Predecessors: [0x554]
Successors: [0x95c, 0x964]
---
0x92b JUMPDEST
0x92c DUP3
0x92d DUP1
0x92e SLOAD
0x92f PUSH1 0x1
0x931 DUP2
0x932 PUSH1 0x1
0x934 AND
0x935 ISZERO
0x936 PUSH2 0x100
0x939 MUL
0x93a SUB
0x93b AND
0x93c PUSH1 0x2
0x93e SWAP1
0x93f DIV
0x940 SWAP1
0x941 PUSH1 0x0
0x943 MSTORE
0x944 PUSH1 0x20
0x946 PUSH1 0x0
0x948 SHA3
0x949 SWAP1
0x94a PUSH1 0x1f
0x94c ADD
0x94d PUSH1 0x20
0x94f SWAP1
0x950 DIV
0x951 DUP2
0x952 ADD
0x953 SWAP3
0x954 DUP3
0x955 PUSH1 0x1f
0x957 LT
0x958 PUSH2 0x964
0x95b JUMPI
---
0x92b: JUMPDEST 
0x92e: V757 = S[V480]
0x92f: V758 = 0x1
0x932: V759 = 0x1
0x934: V760 = AND 0x1 V757
0x935: V761 = ISZERO V760
0x936: V762 = 0x100
0x939: V763 = MUL 0x100 V761
0x93a: V764 = SUB V763 0x1
0x93b: V765 = AND V764 V757
0x93c: V766 = 0x2
0x93f: V767 = DIV V765 0x2
0x941: V768 = 0x0
0x943: M[0x0] = V480
0x944: V769 = 0x20
0x946: V770 = 0x0
0x948: V771 = SHA3 0x0 0x20
0x94a: V772 = 0x1f
0x94c: V773 = ADD 0x1f V767
0x94d: V774 = 0x20
0x950: V775 = DIV V773 0x20
0x952: V776 = ADD V771 V775
0x955: V777 = 0x1f
0x957: V778 = LT 0x1f V491
0x958: V779 = 0x964
0x95b: JUMPI 0x964 V778
---
Entry stack: [S19, V443, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, V443, S5, V452, 0x611, V480, V478, V491]
Stack pops: 3
Stack additions: [S2, V776, S0, V771, S1]
Exit stack: [S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, 0x611, S2, V776, S0, V771, S1]

================================

Block 0x95c
[0x95c:0x963]
---
Predecessors: [0x92b]
Successors: [0x9a1]
---
0x95c DUP1
0x95d SLOAD
0x95e DUP6
0x95f SSTORE
0x960 PUSH2 0x9a1
0x963 JUMP
---
0x95d: V780 = S[V478]
0x95f: S[V480] = V780
0x960: V781 = 0x9a1
0x963: JUMP 0x9a1
---
Entry stack: [S18, V443, S16, S15, S14, S13, S12, S11, S10, S9, V443, S7, V452, 0x611, V480, V776, V491, V771, V478]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [S18, V443, S16, S15, S14, S13, S12, S11, S10, S9, V443, S7, V452, 0x611, V480, V776, V491, V771, V478]

================================

Block 0x964
[0x964:0x972]
---
Predecessors: [0x92b]
Successors: [0x973, 0x9a1]
---
0x964 JUMPDEST
0x965 DUP3
0x966 DUP1
0x967 ADD
0x968 PUSH1 0x1
0x96a ADD
0x96b DUP6
0x96c SSTORE
0x96d DUP3
0x96e ISZERO
0x96f PUSH2 0x9a1
0x972 JUMPI
---
0x964: JUMPDEST 
0x967: V782 = ADD V491 V491
0x968: V783 = 0x1
0x96a: V784 = ADD 0x1 V782
0x96c: S[V480] = V784
0x96e: V785 = ISZERO V491
0x96f: V786 = 0x9a1
0x972: JUMPI 0x9a1 V785
---
Entry stack: [S18, V443, S16, S15, S14, S13, S12, S11, S10, S9, V443, S7, V452, 0x611, V480, V776, V491, V771, V478]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [S18, V443, S16, S15, S14, S13, S12, S11, S10, S9, V443, S7, V452, 0x611, V480, V776, V491, V771, V478]

================================

Block 0x973
[0x973:0x984]
---
Predecessors: [0x964]
Successors: [0x985]
---
0x973 PUSH1 0x0
0x975 MSTORE
0x976 PUSH1 0x20
0x978 PUSH1 0x0
0x97a SHA3
0x97b SWAP2
0x97c PUSH1 0x1f
0x97e ADD
0x97f PUSH1 0x20
0x981 SWAP1
0x982 DIV
0x983 DUP3
0x984 ADD
---
0x973: V787 = 0x0
0x975: M[0x0] = V478
0x976: V788 = 0x20
0x978: V789 = 0x0
0x97a: V790 = SHA3 0x0 0x20
0x97c: V791 = 0x1f
0x97e: V792 = ADD 0x1f V491
0x97f: V793 = 0x20
0x982: V794 = DIV V792 0x20
0x984: V795 = ADD V790 V794
---
Entry stack: [S18, V443, S16, S15, S14, S13, S12, S11, S10, S9, V443, S7, V452, 0x611, V480, V776, V491, V771, V478]
Stack pops: 3
Stack additions: [V790, S1, V795]
Exit stack: [S18, V443, S16, S15, S14, S13, S12, S11, S10, S9, V443, S7, V452, 0x611, V480, V776, V790, V771, V795]

================================

Block 0x985
[0x985:0x98d]
---
Predecessors: [0x973, 0x98e]
Successors: [0x98e, 0x9a0]
---
0x985 JUMPDEST
0x986 DUP3
0x987 DUP2
0x988 GT
0x989 ISZERO
0x98a PUSH2 0x9a0
0x98d JUMPI
---
0x985: JUMPDEST 
0x988: V796 = GT V795 S2
0x989: V797 = ISZERO V796
0x98a: V798 = 0x9a0
0x98d: JUMPI 0x9a0 V797
---
Entry stack: [S18, V443, S16, S15, S14, S13, S12, S11, S10, S9, V443, S7, V452, 0x611, V480, V776, S2, S1, V795]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S18, V443, S16, S15, S14, S13, S12, S11, S10, S9, V443, S7, V452, 0x611, V480, V776, S2, S1, V795]

================================

Block 0x98e
[0x98e:0x99f]
---
Predecessors: [0x985]
Successors: [0x985]
---
0x98e DUP3
0x98f SLOAD
0x990 DUP3
0x991 SSTORE
0x992 SWAP2
0x993 PUSH1 0x1
0x995 ADD
0x996 SWAP2
0x997 SWAP1
0x998 PUSH1 0x1
0x99a ADD
0x99b SWAP1
0x99c PUSH2 0x985
0x99f JUMP
---
0x98f: V799 = S[S2]
0x991: S[S1] = V799
0x993: V800 = 0x1
0x995: V801 = ADD 0x1 S2
0x998: V802 = 0x1
0x99a: V803 = ADD 0x1 S1
0x99c: V804 = 0x985
0x99f: JUMP 0x985
---
Entry stack: [S18, V443, S16, S15, S14, S13, S12, S11, S10, S9, V443, S7, V452, 0x611, V480, V776, S2, S1, V795]
Stack pops: 3
Stack additions: [V801, V803, S0]
Exit stack: [S18, V443, S16, S15, S14, S13, S12, S11, S10, S9, V443, S7, V452, 0x611, V480, V776, V801, V803, V795]

================================

Block 0x9a0
[0x9a0:0x9a0]
---
Predecessors: [0x985]
Successors: [0x9a1]
---
0x9a0 JUMPDEST
---
0x9a0: JUMPDEST 
---
Entry stack: [S18, V443, S16, S15, S14, S13, S12, S11, S10, S9, V443, S7, V452, 0x611, V480, V776, S2, S1, V795]
Stack pops: 0
Stack additions: []
Exit stack: [S18, V443, S16, S15, S14, S13, S12, S11, S10, S9, V443, S7, V452, 0x611, V480, V776, S2, S1, V795]

================================

Block 0x9a1
[0x9a1:0x9ad]
---
Predecessors: [0x95c, 0x964, 0x9a0]
Successors: [0x9b2]
---
0x9a1 JUMPDEST
0x9a2 POP
0x9a3 SWAP1
0x9a4 POP
0x9a5 PUSH2 0x9ae
0x9a8 SWAP2
0x9a9 SWAP1
0x9aa PUSH2 0x9b2
0x9ad JUMP
---
0x9a1: JUMPDEST 
0x9a5: V805 = 0x9ae
0x9aa: V806 = 0x9b2
0x9ad: JUMP 0x9b2
---
Entry stack: [S18, V443, S16, S15, S14, S13, S12, S11, S10, S9, V443, S7, V452, 0x611, V480, V776, S2, S1, S0]
Stack pops: 4
Stack additions: [0x9ae, S3, S1]
Exit stack: [S18, V443, S16, S15, S14, S13, S12, S11, S10, S9, V443, S7, V452, 0x611, V480, 0x9ae, V776, S1]

================================

Block 0x9ae
[0x9ae:0x9b1]
---
Predecessors: [0x9d4]
Successors: [0x554, 0x611, 0x69f, 0x82e]
---
0x9ae JUMPDEST
0x9af POP
0x9b0 SWAP1
0x9b1 JUMP
---
0x9ae: JUMPDEST 
0x9b1: JUMP {0x554, 0x611, 0x69f, 0x82e}
---
Entry stack: [S15, V443, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x554, 0x611, 0x69f, 0x82e}, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [S15, V443, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S1]

================================

Block 0x9b2
[0x9b2:0x9b7]
---
Predecessors: [0x91a, 0x9a1]
Successors: [0x9b8]
---
0x9b2 JUMPDEST
0x9b3 PUSH2 0x9d4
0x9b6 SWAP2
0x9b7 SWAP1
---
0x9b2: JUMPDEST 
0x9b3: V807 = 0x9d4
---
Entry stack: [S17, V443, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x554, 0x611, 0x69f, 0x82e}, S3, {0x927, 0x9ae}, S1, S0]
Stack pops: 2
Stack additions: [0x9d4, S1, S0]
Exit stack: [S17, V443, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x554, 0x611, 0x69f, 0x82e}, S3, {0x927, 0x9ae}, 0x9d4, S1, S0]

================================

Block 0x9b8
[0x9b8:0x9c0]
---
Predecessors: [0x9b2, 0x9c1]
Successors: [0x9c1, 0x9d0]
---
0x9b8 JUMPDEST
0x9b9 DUP1
0x9ba DUP3
0x9bb GT
0x9bc ISZERO
0x9bd PUSH2 0x9d0
0x9c0 JUMPI
---
0x9b8: JUMPDEST 
0x9bb: V808 = GT S1 S0
0x9bc: V809 = ISZERO V808
0x9bd: V810 = 0x9d0
0x9c0: JUMPI 0x9d0 V809
---
Entry stack: [S18, V443, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x554, 0x611, 0x69f, 0x82e}, S4, {0x927, 0x9ae}, 0x9d4, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [S18, V443, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x554, 0x611, 0x69f, 0x82e}, S4, {0x927, 0x9ae}, 0x9d4, S1, S0]

================================

Block 0x9c1
[0x9c1:0x9cf]
---
Predecessors: [0x9b8]
Successors: [0x9b8]
---
0x9c1 PUSH1 0x0
0x9c3 DUP2
0x9c4 PUSH1 0x0
0x9c6 SWAP1
0x9c7 SSTORE
0x9c8 POP
0x9c9 PUSH1 0x1
0x9cb ADD
0x9cc PUSH2 0x9b8
0x9cf JUMP
---
0x9c1: V811 = 0x0
0x9c4: V812 = 0x0
0x9c7: S[S0] = 0x0
0x9c9: V813 = 0x1
0x9cb: V814 = ADD 0x1 S0
0x9cc: V815 = 0x9b8
0x9cf: JUMP 0x9b8
---
Entry stack: [S18, V443, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x554, 0x611, 0x69f, 0x82e}, S4, {0x927, 0x9ae}, 0x9d4, S1, S0]
Stack pops: 1
Stack additions: [V814]
Exit stack: [S18, V443, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x554, 0x611, 0x69f, 0x82e}, S4, {0x927, 0x9ae}, 0x9d4, S1, V814]

================================

Block 0x9d0
[0x9d0:0x9d3]
---
Predecessors: [0x9b8]
Successors: [0x9d4]
---
0x9d0 JUMPDEST
0x9d1 POP
0x9d2 SWAP1
0x9d3 JUMP
---
0x9d0: JUMPDEST 
0x9d3: JUMP 0x9d4
---
Entry stack: [S18, V443, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x554, 0x611, 0x69f, 0x82e}, S4, {0x927, 0x9ae}, 0x9d4, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [S18, V443, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x554, 0x611, 0x69f, 0x82e}, S4, {0x927, 0x9ae}, S1]

================================

Block 0x9d4
[0x9d4:0x9d6]
---
Predecessors: [0x9d0]
Successors: [0x927, 0x9ae]
---
0x9d4 JUMPDEST
0x9d5 SWAP1
0x9d6 JUMP
---
0x9d4: JUMPDEST 
0x9d6: JUMP {0x927, 0x9ae}
---
Entry stack: [S16, V443, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x554, 0x611, 0x69f, 0x82e}, S2, {0x927, 0x9ae}, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [S16, V443, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0x554, 0x611, 0x69f, 0x82e}, S2, S0]

================================

Block 0x9d7
[0x9d7:0xa05]
---
Predecessors: []
Successors: []
---
0x9d7 STOP
0x9d8 LOG1
0x9d9 PUSH6 0x627a7a723058
0x9e0 SHA3
0x9e1 RETURN
0x9e2 PUSH7 0x4cb0cdc3e9a150
0x9ea ADDMOD
0x9eb MUL
0x9ec MISSING 0xec
0x9ed SHR
0x9ee SGT
0x9ef LOG2
0x9f0 TIMESTAMP
0x9f1 MISSING 0x2b
0x9f2 PUSH19 0x3cf035f2736ea752bd3cee4027000029
---
0x9d7: STOP 
0x9d8: LOG S0 S1 S2
0x9d9: V816 = 0x627a7a723058
0x9e0: V817 = SHA3 0x627a7a723058 S3
0x9e1: RETURN V817 S4
0x9e2: V818 = 0x4cb0cdc3e9a150
0x9ea: V819 = ADDMOD 0x4cb0cdc3e9a150 S0 S1
0x9eb: V820 = MUL V819 S2
0x9ec: MISSING 0xec
0x9ed: V821 = SHR S0 S1
0x9ee: V822 = SGT V821 S2
0x9ef: LOG V822 S3 S4 S5
0x9f0: V823 = TIMESTAMP
0x9f1: MISSING 0x2b
0x9f2: V824 = 0x3cf035f2736ea752bd3cee4027000029
---
Entry stack: []
Stack pops: 0
Stack additions: [V820, V823, 0x3cf035f2736ea752bd3cee4027000029]
Exit stack: []

================================

Function 0:
Public function signature: 0x1f491389
Entry block: 0x6f
Exit block: 0x139
Body: 0x6f, 0x77, 0x7b, 0x9a, 0xf1, 0xfa, 0x10c, 0x120, 0x139, 0x32d, 0x33b, 0x33c, 0x3c8, 0x3d0, 0x3e3, 0x3f1, 0x405, 0x40e

Function 1:
Public function signature: 0x56049a86
Entry block: 0x148
Exit block: 0x1ca
Body: 0x148, 0x150, 0x154, 0x15d, 0x182, 0x18b, 0x19d, 0x1b1, 0x1ca, 0x418, 0x468, 0x470, 0x483, 0x491, 0x4a5, 0x4ae

Function 2:
Public function signature: 0x718e6302
Entry block: 0x1d8
Exit block: 0x32b
Body: 0x1d8, 0x232, 0x32b, 0x4b6, 0x4cf, 0x4d3, 0x4e5, 0x4e9, 0x4f5, 0x4f9, 0x554, 0x82e, 0x89e, 0x8a7, 0x92b, 0x95c, 0x964, 0x973, 0x985, 0x98e, 0x9a0, 0x9a1, 0x9ae

Function 3:
Public function signature: 0x85bb7d69
Entry block: 0x234
Exit block: 0x2b6
Body: 0x234, 0x23c, 0x240, 0x249, 0x26e, 0x277, 0x289, 0x29d, 0x2b6, 0x71e, 0x76e, 0x776, 0x789, 0x797, 0x7ab, 0x7b4

Function 4:
Public function signature: 0x900a974e
Entry block: 0x2c4
Exit block: 0x32b
Body: 0x2c4, 0x2cc, 0x2d0, 0x32b, 0x7bc, 0x814, 0x818, 0x82e, 0x89e, 0x8a7

Function 5:
Public fallback function
Entry block: 0x6d
Exit block: 0x6d
Body: 0x6d

Function 6:
Private function
Entry block: 0x9b2
Exit block: 0x9d4
Body: 0x9b2, 0x9b8, 0x9c1, 0x9d0, 0x9d4

Function 7:
Private function
Entry block: 0x8ab
Exit block: 0x9ae
Body: 0x611, 0x62d, 0x638, 0x652, 0x68a, 0x69f, 0x8ab, 0x8dc, 0x8ec, 0x8fb, 0x8fe, 0x907, 0x919, 0x91a, 0x91a, 0x91a, 0x927

