Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x67]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x4e71e0c8
0x3c EQ
0x3d PUSH2 0x67
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x4e71e0c8
0x3c: V13 = EQ 0x4e71e0c8 V11
0x3d: V14 = 0x67
0x40: JUMPI 0x67 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x7c]
---
0x41 DUP1
0x42 PUSH4 0x8da5cb5b
0x47 EQ
0x48 PUSH2 0x7c
0x4b JUMPI
---
0x42: V15 = 0x8da5cb5b
0x47: V16 = EQ 0x8da5cb5b V11
0x48: V17 = 0x7c
0x4b: JUMPI 0x7c V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xd1]
---
0x4c DUP1
0x4d PUSH4 0xe30c3978
0x52 EQ
0x53 PUSH2 0xd1
0x56 JUMPI
---
0x4d: V18 = 0xe30c3978
0x52: V19 = EQ 0xe30c3978 V11
0x53: V20 = 0xd1
0x56: JUMPI 0xd1 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x126]
---
0x57 DUP1
0x58 PUSH4 0xf2fde38b
0x5d EQ
0x5e PUSH2 0x126
0x61 JUMPI
---
0x58: V21 = 0xf2fde38b
0x5d: V22 = EQ 0xf2fde38b V11
0x5e: V23 = 0x126
0x61: JUMPI 0x126 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x66]
---
Predecessors: [0x0, 0x57]
Successors: []
---
0x62 JUMPDEST
0x63 PUSH1 0x0
0x65 DUP1
0x66 REVERT
---
0x62: JUMPDEST 
0x63: V24 = 0x0
0x66: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x67
[0x67:0x6d]
---
Predecessors: [0xd]
Successors: [0x6e, 0x72]
---
0x67 JUMPDEST
0x68 CALLVALUE
0x69 ISZERO
0x6a PUSH2 0x72
0x6d JUMPI
---
0x67: JUMPDEST 
0x68: V25 = CALLVALUE
0x69: V26 = ISZERO V25
0x6a: V27 = 0x72
0x6d: JUMPI 0x72 V26
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6e
[0x6e:0x71]
---
Predecessors: [0x67]
Successors: []
---
0x6e PUSH1 0x0
0x70 DUP1
0x71 REVERT
---
0x6e: V28 = 0x0
0x71: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x72
[0x72:0x79]
---
Predecessors: [0x67]
Successors: [0x15f]
---
0x72 JUMPDEST
0x73 PUSH2 0x7a
0x76 PUSH2 0x15f
0x79 JUMP
---
0x72: JUMPDEST 
0x73: V29 = 0x7a
0x76: V30 = 0x15f
0x79: JUMP 0x15f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x7a]
Exit stack: [V11, 0x7a]

================================

Block 0x7a
[0x7a:0x7b]
---
Predecessors: [0x1bb]
Successors: []
---
0x7a JUMPDEST
0x7b STOP
---
0x7a: JUMPDEST 
0x7b: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7c
[0x7c:0x82]
---
Predecessors: [0x41]
Successors: [0x83, 0x87]
---
0x7c JUMPDEST
0x7d CALLVALUE
0x7e ISZERO
0x7f PUSH2 0x87
0x82 JUMPI
---
0x7c: JUMPDEST 
0x7d: V31 = CALLVALUE
0x7e: V32 = ISZERO V31
0x7f: V33 = 0x87
0x82: JUMPI 0x87 V32
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x83
[0x83:0x86]
---
Predecessors: [0x7c]
Successors: []
---
0x83 PUSH1 0x0
0x85 DUP1
0x86 REVERT
---
0x83: V34 = 0x0
0x86: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x87
[0x87:0x8e]
---
Predecessors: [0x7c]
Successors: [0x2fe]
---
0x87 JUMPDEST
0x88 PUSH2 0x8f
0x8b PUSH2 0x2fe
0x8e JUMP
---
0x87: JUMPDEST 
0x88: V35 = 0x8f
0x8b: V36 = 0x2fe
0x8e: JUMP 0x2fe
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x8f]
Exit stack: [V11, 0x8f]

================================

Block 0x8f
[0x8f:0xd0]
---
Predecessors: [0x2fe]
Successors: []
---
0x8f JUMPDEST
0x90 PUSH1 0x40
0x92 MLOAD
0x93 DUP1
0x94 DUP3
0x95 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaa AND
0xab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc0 AND
0xc1 DUP2
0xc2 MSTORE
0xc3 PUSH1 0x20
0xc5 ADD
0xc6 SWAP2
0xc7 POP
0xc8 POP
0xc9 PUSH1 0x40
0xcb MLOAD
0xcc DUP1
0xcd SWAP2
0xce SUB
0xcf SWAP1
0xd0 RETURN
---
0x8f: JUMPDEST 
0x90: V37 = 0x40
0x92: V38 = M[0x40]
0x95: V39 = 0xffffffffffffffffffffffffffffffffffffffff
0xaa: V40 = AND 0xffffffffffffffffffffffffffffffffffffffff V160
0xab: V41 = 0xffffffffffffffffffffffffffffffffffffffff
0xc0: V42 = AND 0xffffffffffffffffffffffffffffffffffffffff V40
0xc2: M[V38] = V42
0xc3: V43 = 0x20
0xc5: V44 = ADD 0x20 V38
0xc9: V45 = 0x40
0xcb: V46 = M[0x40]
0xce: V47 = SUB V44 V46
0xd0: RETURN V46 V47
---
Entry stack: [V11, 0x8f, V160]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x8f]

================================

Block 0xd1
[0xd1:0xd7]
---
Predecessors: [0x4c]
Successors: [0xd8, 0xdc]
---
0xd1 JUMPDEST
0xd2 CALLVALUE
0xd3 ISZERO
0xd4 PUSH2 0xdc
0xd7 JUMPI
---
0xd1: JUMPDEST 
0xd2: V48 = CALLVALUE
0xd3: V49 = ISZERO V48
0xd4: V50 = 0xdc
0xd7: JUMPI 0xdc V49
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd8
[0xd8:0xdb]
---
Predecessors: [0xd1]
Successors: []
---
0xd8 PUSH1 0x0
0xda DUP1
0xdb REVERT
---
0xd8: V51 = 0x0
0xdb: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xdc
[0xdc:0xe3]
---
Predecessors: [0xd1]
Successors: [0x323]
---
0xdc JUMPDEST
0xdd PUSH2 0xe4
0xe0 PUSH2 0x323
0xe3 JUMP
---
0xdc: JUMPDEST 
0xdd: V52 = 0xe4
0xe0: V53 = 0x323
0xe3: JUMP 0x323
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe4]
Exit stack: [V11, 0xe4]

================================

Block 0xe4
[0xe4:0x125]
---
Predecessors: [0x323]
Successors: []
---
0xe4 JUMPDEST
0xe5 PUSH1 0x40
0xe7 MLOAD
0xe8 DUP1
0xe9 DUP3
0xea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xff AND
0x100 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x115 AND
0x116 DUP2
0x117 MSTORE
0x118 PUSH1 0x20
0x11a ADD
0x11b SWAP2
0x11c POP
0x11d POP
0x11e PUSH1 0x40
0x120 MLOAD
0x121 DUP1
0x122 SWAP2
0x123 SUB
0x124 SWAP1
0x125 RETURN
---
0xe4: JUMPDEST 
0xe5: V54 = 0x40
0xe7: V55 = M[0x40]
0xea: V56 = 0xffffffffffffffffffffffffffffffffffffffff
0xff: V57 = AND 0xffffffffffffffffffffffffffffffffffffffff V168
0x100: V58 = 0xffffffffffffffffffffffffffffffffffffffff
0x115: V59 = AND 0xffffffffffffffffffffffffffffffffffffffff V57
0x117: M[V55] = V59
0x118: V60 = 0x20
0x11a: V61 = ADD 0x20 V55
0x11e: V62 = 0x40
0x120: V63 = M[0x40]
0x123: V64 = SUB V61 V63
0x125: RETURN V63 V64
---
Entry stack: [V11, 0xe4, V168]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xe4]

================================

Block 0x126
[0x126:0x12c]
---
Predecessors: [0x57]
Successors: [0x12d, 0x131]
---
0x126 JUMPDEST
0x127 CALLVALUE
0x128 ISZERO
0x129 PUSH2 0x131
0x12c JUMPI
---
0x126: JUMPDEST 
0x127: V65 = CALLVALUE
0x128: V66 = ISZERO V65
0x129: V67 = 0x131
0x12c: JUMPI 0x131 V66
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x12d
[0x12d:0x130]
---
Predecessors: [0x126]
Successors: []
---
0x12d PUSH1 0x0
0x12f DUP1
0x130 REVERT
---
0x12d: V68 = 0x0
0x130: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x131
[0x131:0x15c]
---
Predecessors: [0x126]
Successors: [0x349]
---
0x131 JUMPDEST
0x132 PUSH2 0x15d
0x135 PUSH1 0x4
0x137 DUP1
0x138 DUP1
0x139 CALLDATALOAD
0x13a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14f AND
0x150 SWAP1
0x151 PUSH1 0x20
0x153 ADD
0x154 SWAP1
0x155 SWAP2
0x156 SWAP1
0x157 POP
0x158 POP
0x159 PUSH2 0x349
0x15c JUMP
---
0x131: JUMPDEST 
0x132: V69 = 0x15d
0x135: V70 = 0x4
0x139: V71 = CALLDATALOAD 0x4
0x13a: V72 = 0xffffffffffffffffffffffffffffffffffffffff
0x14f: V73 = AND 0xffffffffffffffffffffffffffffffffffffffff V71
0x151: V74 = 0x20
0x153: V75 = ADD 0x20 0x4
0x159: V76 = 0x349
0x15c: JUMP 0x349
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x15d, V73]
Exit stack: [V11, 0x15d, V73]

================================

Block 0x15d
[0x15d:0x15e]
---
Predecessors: [0x3a4]
Successors: []
---
0x15d JUMPDEST
0x15e STOP
---
0x15d: JUMPDEST 
0x15e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x15f
[0x15f:0x1b6]
---
Predecessors: [0x72, 0x4c1]
Successors: [0x1b7, 0x1bb]
---
0x15f JUMPDEST
0x160 PUSH1 0x1
0x162 PUSH1 0x0
0x164 SWAP1
0x165 SLOAD
0x166 SWAP1
0x167 PUSH2 0x100
0x16a EXP
0x16b SWAP1
0x16c DIV
0x16d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x182 AND
0x183 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x198 AND
0x199 CALLER
0x19a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1af AND
0x1b0 EQ
0x1b1 ISZERO
0x1b2 ISZERO
0x1b3 PUSH2 0x1bb
0x1b6 JUMPI
---
0x15f: JUMPDEST 
0x160: V77 = 0x1
0x162: V78 = 0x0
0x165: V79 = S[0x1]
0x167: V80 = 0x100
0x16a: V81 = EXP 0x100 0x0
0x16c: V82 = DIV V79 0x1
0x16d: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x182: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V82
0x183: V85 = 0xffffffffffffffffffffffffffffffffffffffff
0x198: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff V84
0x199: V87 = CALLER
0x19a: V88 = 0xffffffffffffffffffffffffffffffffffffffff
0x1af: V89 = AND 0xffffffffffffffffffffffffffffffffffffffff V87
0x1b0: V90 = EQ V89 V86
0x1b1: V91 = ISZERO V90
0x1b2: V92 = ISZERO V91
0x1b3: V93 = 0x1bb
0x1b6: JUMPI 0x1bb V92
---
Entry stack: [V11, 0x7a]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7a]

================================

Block 0x1b7
[0x1b7:0x1ba]
---
Predecessors: [0x15f]
Successors: []
---
0x1b7 PUSH1 0x0
0x1b9 DUP1
0x1ba REVERT
---
0x1b7: V94 = 0x0
0x1ba: REVERT 0x0 0x0
---
Entry stack: [V11, 0x7a]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7a]

================================

Block 0x1bb
[0x1bb:0x2fd]
---
Predecessors: [0x15f]
Successors: [0x7a]
---
0x1bb JUMPDEST
0x1bc PUSH1 0x1
0x1be PUSH1 0x0
0x1c0 SWAP1
0x1c1 SLOAD
0x1c2 SWAP1
0x1c3 PUSH2 0x100
0x1c6 EXP
0x1c7 SWAP1
0x1c8 DIV
0x1c9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1de AND
0x1df PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f4 AND
0x1f5 PUSH1 0x0
0x1f7 DUP1
0x1f8 SWAP1
0x1f9 SLOAD
0x1fa SWAP1
0x1fb PUSH2 0x100
0x1fe EXP
0x1ff SWAP1
0x200 DIV
0x201 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x216 AND
0x217 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22c AND
0x22d PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x24e PUSH1 0x40
0x250 MLOAD
0x251 PUSH1 0x40
0x253 MLOAD
0x254 DUP1
0x255 SWAP2
0x256 SUB
0x257 SWAP1
0x258 LOG3
0x259 PUSH1 0x1
0x25b PUSH1 0x0
0x25d SWAP1
0x25e SLOAD
0x25f SWAP1
0x260 PUSH2 0x100
0x263 EXP
0x264 SWAP1
0x265 DIV
0x266 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27b AND
0x27c PUSH1 0x0
0x27e DUP1
0x27f PUSH2 0x100
0x282 EXP
0x283 DUP2
0x284 SLOAD
0x285 DUP2
0x286 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x29b MUL
0x29c NOT
0x29d AND
0x29e SWAP1
0x29f DUP4
0x2a0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b5 AND
0x2b6 MUL
0x2b7 OR
0x2b8 SWAP1
0x2b9 SSTORE
0x2ba POP
0x2bb PUSH1 0x0
0x2bd PUSH1 0x1
0x2bf PUSH1 0x0
0x2c1 PUSH2 0x100
0x2c4 EXP
0x2c5 DUP2
0x2c6 SLOAD
0x2c7 DUP2
0x2c8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2dd MUL
0x2de NOT
0x2df AND
0x2e0 SWAP1
0x2e1 DUP4
0x2e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f7 AND
0x2f8 MUL
0x2f9 OR
0x2fa SWAP1
0x2fb SSTORE
0x2fc POP
0x2fd JUMP
---
0x1bb: JUMPDEST 
0x1bc: V95 = 0x1
0x1be: V96 = 0x0
0x1c1: V97 = S[0x1]
0x1c3: V98 = 0x100
0x1c6: V99 = EXP 0x100 0x0
0x1c8: V100 = DIV V97 0x1
0x1c9: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x1de: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x1df: V103 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f4: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x1f5: V105 = 0x0
0x1f9: V106 = S[0x0]
0x1fb: V107 = 0x100
0x1fe: V108 = EXP 0x100 0x0
0x200: V109 = DIV V106 0x1
0x201: V110 = 0xffffffffffffffffffffffffffffffffffffffff
0x216: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x217: V112 = 0xffffffffffffffffffffffffffffffffffffffff
0x22c: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x22d: V114 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x24e: V115 = 0x40
0x250: V116 = M[0x40]
0x251: V117 = 0x40
0x253: V118 = M[0x40]
0x256: V119 = SUB V116 V118
0x258: LOG V118 V119 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V113 V104
0x259: V120 = 0x1
0x25b: V121 = 0x0
0x25e: V122 = S[0x1]
0x260: V123 = 0x100
0x263: V124 = EXP 0x100 0x0
0x265: V125 = DIV V122 0x1
0x266: V126 = 0xffffffffffffffffffffffffffffffffffffffff
0x27b: V127 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x27c: V128 = 0x0
0x27f: V129 = 0x100
0x282: V130 = EXP 0x100 0x0
0x284: V131 = S[0x0]
0x286: V132 = 0xffffffffffffffffffffffffffffffffffffffff
0x29b: V133 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x29c: V134 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x29d: V135 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V131
0x2a0: V136 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b5: V137 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x2b6: V138 = MUL V137 0x1
0x2b7: V139 = OR V138 V135
0x2b9: S[0x0] = V139
0x2bb: V140 = 0x0
0x2bd: V141 = 0x1
0x2bf: V142 = 0x0
0x2c1: V143 = 0x100
0x2c4: V144 = EXP 0x100 0x0
0x2c6: V145 = S[0x1]
0x2c8: V146 = 0xffffffffffffffffffffffffffffffffffffffff
0x2dd: V147 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x2de: V148 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2df: V149 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V145
0x2e2: V150 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f7: V151 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x2f8: V152 = MUL 0x0 0x1
0x2f9: V153 = OR 0x0 V149
0x2fb: S[0x1] = V153
0x2fd: JUMP 0x7a
---
Entry stack: [V11, 0x7a]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x2fe
[0x2fe:0x322]
---
Predecessors: [0x87]
Successors: [0x8f]
---
0x2fe JUMPDEST
0x2ff PUSH1 0x0
0x301 DUP1
0x302 SWAP1
0x303 SLOAD
0x304 SWAP1
0x305 PUSH2 0x100
0x308 EXP
0x309 SWAP1
0x30a DIV
0x30b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x320 AND
0x321 DUP2
0x322 JUMP
---
0x2fe: JUMPDEST 
0x2ff: V154 = 0x0
0x303: V155 = S[0x0]
0x305: V156 = 0x100
0x308: V157 = EXP 0x100 0x0
0x30a: V158 = DIV V155 0x1
0x30b: V159 = 0xffffffffffffffffffffffffffffffffffffffff
0x320: V160 = AND 0xffffffffffffffffffffffffffffffffffffffff V158
0x322: JUMP 0x8f
---
Entry stack: [V11, 0x8f]
Stack pops: 1
Stack additions: [S0, V160]
Exit stack: [V11, 0x8f, V160]

================================

Block 0x323
[0x323:0x348]
---
Predecessors: [0xdc]
Successors: [0xe4]
---
0x323 JUMPDEST
0x324 PUSH1 0x1
0x326 PUSH1 0x0
0x328 SWAP1
0x329 SLOAD
0x32a SWAP1
0x32b PUSH2 0x100
0x32e EXP
0x32f SWAP1
0x330 DIV
0x331 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x346 AND
0x347 DUP2
0x348 JUMP
---
0x323: JUMPDEST 
0x324: V161 = 0x1
0x326: V162 = 0x0
0x329: V163 = S[0x1]
0x32b: V164 = 0x100
0x32e: V165 = EXP 0x100 0x0
0x330: V166 = DIV V163 0x1
0x331: V167 = 0xffffffffffffffffffffffffffffffffffffffff
0x346: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff V166
0x348: JUMP 0xe4
---
Entry stack: [V11, 0xe4]
Stack pops: 1
Stack additions: [S0, V168]
Exit stack: [V11, 0xe4, V168]

================================

Block 0x349
[0x349:0x39f]
---
Predecessors: [0x131]
Successors: [0x3a0, 0x3a4]
---
0x349 JUMPDEST
0x34a PUSH1 0x0
0x34c DUP1
0x34d SWAP1
0x34e SLOAD
0x34f SWAP1
0x350 PUSH2 0x100
0x353 EXP
0x354 SWAP1
0x355 DIV
0x356 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x36b AND
0x36c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x381 AND
0x382 CALLER
0x383 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x398 AND
0x399 EQ
0x39a ISZERO
0x39b ISZERO
0x39c PUSH2 0x3a4
0x39f JUMPI
---
0x349: JUMPDEST 
0x34a: V169 = 0x0
0x34e: V170 = S[0x0]
0x350: V171 = 0x100
0x353: V172 = EXP 0x100 0x0
0x355: V173 = DIV V170 0x1
0x356: V174 = 0xffffffffffffffffffffffffffffffffffffffff
0x36b: V175 = AND 0xffffffffffffffffffffffffffffffffffffffff V173
0x36c: V176 = 0xffffffffffffffffffffffffffffffffffffffff
0x381: V177 = AND 0xffffffffffffffffffffffffffffffffffffffff V175
0x382: V178 = CALLER
0x383: V179 = 0xffffffffffffffffffffffffffffffffffffffff
0x398: V180 = AND 0xffffffffffffffffffffffffffffffffffffffff V178
0x399: V181 = EQ V180 V177
0x39a: V182 = ISZERO V181
0x39b: V183 = ISZERO V182
0x39c: V184 = 0x3a4
0x39f: JUMPI 0x3a4 V183
---
Entry stack: [V11, 0x15d, V73]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x15d, V73]

================================

Block 0x3a0
[0x3a0:0x3a3]
---
Predecessors: [0x349]
Successors: []
---
0x3a0 PUSH1 0x0
0x3a2 DUP1
0x3a3 REVERT
---
0x3a0: V185 = 0x0
0x3a3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x15d, V73]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x15d, V73]

================================

Block 0x3a4
[0x3a4:0x3e7]
---
Predecessors: [0x349]
Successors: [0x15d]
---
0x3a4 JUMPDEST
0x3a5 DUP1
0x3a6 PUSH1 0x1
0x3a8 PUSH1 0x0
0x3aa PUSH2 0x100
0x3ad EXP
0x3ae DUP2
0x3af SLOAD
0x3b0 DUP2
0x3b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c6 MUL
0x3c7 NOT
0x3c8 AND
0x3c9 SWAP1
0x3ca DUP4
0x3cb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e0 AND
0x3e1 MUL
0x3e2 OR
0x3e3 SWAP1
0x3e4 SSTORE
0x3e5 POP
0x3e6 POP
0x3e7 JUMP
---
0x3a4: JUMPDEST 
0x3a6: V186 = 0x1
0x3a8: V187 = 0x0
0x3aa: V188 = 0x100
0x3ad: V189 = EXP 0x100 0x0
0x3af: V190 = S[0x1]
0x3b1: V191 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c6: V192 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x3c7: V193 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3c8: V194 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V190
0x3cb: V195 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e0: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff V73
0x3e1: V197 = MUL V196 0x1
0x3e2: V198 = OR V197 V194
0x3e4: S[0x1] = V198
0x3e7: JUMP 0x15d
---
Entry stack: [V11, 0x15d, V73]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x3e8
[0x3e8:0x420]
---
Predecessors: []
Successors: [0x421]
---
0x3e8 STOP
0x3e9 LOG1
0x3ea PUSH6 0x627a7a723058
0x3f1 SHA3
0x3f2 MISSING 0xf7
0x3f3 SLT
0x3f4 MISSING 0x2b
0x3f5 ORIGIN
0x3f6 PUSH25 0xd1dcaf41698b30b495a85ef9c7d3620d9117de2e3b3ca13529
0x410 MISSING 0x1e
0x411 GASLIMIT
0x412 STOP
0x413 MISSING 0x29
0x414 PUSH1 0x60
0x416 PUSH1 0x40
0x418 MSTORE
0x419 PUSH1 0x4
0x41b CALLDATASIZE
0x41c LT
0x41d PUSH2 0x4c
0x420 JUMPI
---
0x3e8: STOP 
0x3e9: LOG S0 S1 S2
0x3ea: V199 = 0x627a7a723058
0x3f1: V200 = SHA3 0x627a7a723058 S3
0x3f2: MISSING 0xf7
0x3f3: V201 = SLT S0 S1
0x3f4: MISSING 0x2b
0x3f5: V202 = ORIGIN
0x3f6: V203 = 0xd1dcaf41698b30b495a85ef9c7d3620d9117de2e3b3ca13529
0x410: MISSING 0x1e
0x411: V204 = GASLIMIT
0x412: STOP 
0x413: MISSING 0x29
0x414: V205 = 0x60
0x416: V206 = 0x40
0x418: M[0x40] = 0x60
0x419: V207 = 0x4
0x41b: V208 = CALLDATASIZE
0x41c: V209 = LT V208 0x4
0x41d: V210 = 0x4c
0x420: THROWI V209
---
Entry stack: []
Stack pops: 0
Stack additions: [V200, V201, 0xd1dcaf41698b30b495a85ef9c7d3620d9117de2e3b3ca13529, V202, V204]
Exit stack: []

================================

Block 0x421
[0x421:0x454]
---
Predecessors: [0x3e8]
Successors: [0x455]
---
0x421 PUSH1 0x0
0x423 CALLDATALOAD
0x424 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x442 SWAP1
0x443 DIV
0x444 PUSH4 0xffffffff
0x449 AND
0x44a DUP1
0x44b PUSH4 0x8da5cb5b
0x450 EQ
0x451 PUSH2 0x51
0x454 JUMPI
---
0x421: V211 = 0x0
0x423: V212 = CALLDATALOAD 0x0
0x424: V213 = 0x100000000000000000000000000000000000000000000000000000000
0x443: V214 = DIV V212 0x100000000000000000000000000000000000000000000000000000000
0x444: V215 = 0xffffffff
0x449: V216 = AND 0xffffffff V214
0x44b: V217 = 0x8da5cb5b
0x450: V218 = EQ 0x8da5cb5b V216
0x451: V219 = 0x51
0x454: THROWI V218
---
Entry stack: []
Stack pops: 0
Stack additions: [V216]
Exit stack: [V216]

================================

Block 0x455
[0x455:0x45f]
---
Predecessors: [0x421]
Successors: [0x460]
---
0x455 DUP1
0x456 PUSH4 0xf2fde38b
0x45b EQ
0x45c PUSH2 0xa6
0x45f JUMPI
---
0x456: V220 = 0xf2fde38b
0x45b: V221 = EQ 0xf2fde38b V216
0x45c: V222 = 0xa6
0x45f: THROWI V221
---
Entry stack: [V216]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V216]

================================

Block 0x460
[0x460:0x46b]
---
Predecessors: [0x455]
Successors: [0x46c]
---
0x460 JUMPDEST
0x461 PUSH1 0x0
0x463 DUP1
0x464 REVERT
0x465 JUMPDEST
0x466 CALLVALUE
0x467 ISZERO
0x468 PUSH2 0x5c
0x46b JUMPI
---
0x460: JUMPDEST 
0x461: V223 = 0x0
0x464: REVERT 0x0 0x0
0x465: JUMPDEST 
0x466: V224 = CALLVALUE
0x467: V225 = ISZERO V224
0x468: V226 = 0x5c
0x46b: THROWI V225
---
Entry stack: [V216]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x46c
[0x46c:0x4c0]
---
Predecessors: [0x460]
Successors: [0x4c1]
---
0x46c PUSH1 0x0
0x46e DUP1
0x46f REVERT
0x470 JUMPDEST
0x471 PUSH2 0x64
0x474 PUSH2 0xdf
0x477 JUMP
0x478 JUMPDEST
0x479 PUSH1 0x40
0x47b MLOAD
0x47c DUP1
0x47d DUP3
0x47e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x493 AND
0x494 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4a9 AND
0x4aa DUP2
0x4ab MSTORE
0x4ac PUSH1 0x20
0x4ae ADD
0x4af SWAP2
0x4b0 POP
0x4b1 POP
0x4b2 PUSH1 0x40
0x4b4 MLOAD
0x4b5 DUP1
0x4b6 SWAP2
0x4b7 SUB
0x4b8 SWAP1
0x4b9 RETURN
0x4ba JUMPDEST
0x4bb CALLVALUE
0x4bc ISZERO
0x4bd PUSH2 0xb1
0x4c0 JUMPI
---
0x46c: V227 = 0x0
0x46f: REVERT 0x0 0x0
0x470: JUMPDEST 
0x471: V228 = 0x64
0x474: V229 = 0xdf
0x477: THROW 
0x478: JUMPDEST 
0x479: V230 = 0x40
0x47b: V231 = M[0x40]
0x47e: V232 = 0xffffffffffffffffffffffffffffffffffffffff
0x493: V233 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x494: V234 = 0xffffffffffffffffffffffffffffffffffffffff
0x4a9: V235 = AND 0xffffffffffffffffffffffffffffffffffffffff V233
0x4ab: M[V231] = V235
0x4ac: V236 = 0x20
0x4ae: V237 = ADD 0x20 V231
0x4b2: V238 = 0x40
0x4b4: V239 = M[0x40]
0x4b7: V240 = SUB V237 V239
0x4b9: RETURN V239 V240
0x4ba: JUMPDEST 
0x4bb: V241 = CALLVALUE
0x4bc: V242 = ISZERO V241
0x4bd: V243 = 0xb1
0x4c0: THROWI V242
---
Entry stack: []
Stack pops: 0
Stack additions: [0x64]
Exit stack: []

================================

Block 0x4c1
[0x4c1:0x56e]
---
Predecessors: [0x46c]
Successors: [0x15f, 0x56f]
---
0x4c1 PUSH1 0x0
0x4c3 DUP1
0x4c4 REVERT
0x4c5 JUMPDEST
0x4c6 PUSH2 0xdd
0x4c9 PUSH1 0x4
0x4cb DUP1
0x4cc DUP1
0x4cd CALLDATALOAD
0x4ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4e3 AND
0x4e4 SWAP1
0x4e5 PUSH1 0x20
0x4e7 ADD
0x4e8 SWAP1
0x4e9 SWAP2
0x4ea SWAP1
0x4eb POP
0x4ec POP
0x4ed PUSH2 0x104
0x4f0 JUMP
0x4f1 JUMPDEST
0x4f2 STOP
0x4f3 JUMPDEST
0x4f4 PUSH1 0x0
0x4f6 DUP1
0x4f7 SWAP1
0x4f8 SLOAD
0x4f9 SWAP1
0x4fa PUSH2 0x100
0x4fd EXP
0x4fe SWAP1
0x4ff DIV
0x500 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x515 AND
0x516 DUP2
0x517 JUMP
0x518 JUMPDEST
0x519 PUSH1 0x0
0x51b DUP1
0x51c SWAP1
0x51d SLOAD
0x51e SWAP1
0x51f PUSH2 0x100
0x522 EXP
0x523 SWAP1
0x524 DIV
0x525 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x53a AND
0x53b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x550 AND
0x551 CALLER
0x552 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x567 AND
0x568 EQ
0x569 ISZERO
0x56a ISZERO
0x56b PUSH2 0x15f
0x56e JUMPI
---
0x4c1: V244 = 0x0
0x4c4: REVERT 0x0 0x0
0x4c5: JUMPDEST 
0x4c6: V245 = 0xdd
0x4c9: V246 = 0x4
0x4cd: V247 = CALLDATALOAD 0x4
0x4ce: V248 = 0xffffffffffffffffffffffffffffffffffffffff
0x4e3: V249 = AND 0xffffffffffffffffffffffffffffffffffffffff V247
0x4e5: V250 = 0x20
0x4e7: V251 = ADD 0x20 0x4
0x4ed: V252 = 0x104
0x4f0: THROW 
0x4f1: JUMPDEST 
0x4f2: STOP 
0x4f3: JUMPDEST 
0x4f4: V253 = 0x0
0x4f8: V254 = S[0x0]
0x4fa: V255 = 0x100
0x4fd: V256 = EXP 0x100 0x0
0x4ff: V257 = DIV V254 0x1
0x500: V258 = 0xffffffffffffffffffffffffffffffffffffffff
0x515: V259 = AND 0xffffffffffffffffffffffffffffffffffffffff V257
0x517: JUMP S0
0x518: JUMPDEST 
0x519: V260 = 0x0
0x51d: V261 = S[0x0]
0x51f: V262 = 0x100
0x522: V263 = EXP 0x100 0x0
0x524: V264 = DIV V261 0x1
0x525: V265 = 0xffffffffffffffffffffffffffffffffffffffff
0x53a: V266 = AND 0xffffffffffffffffffffffffffffffffffffffff V264
0x53b: V267 = 0xffffffffffffffffffffffffffffffffffffffff
0x550: V268 = AND 0xffffffffffffffffffffffffffffffffffffffff V266
0x551: V269 = CALLER
0x552: V270 = 0xffffffffffffffffffffffffffffffffffffffff
0x567: V271 = AND 0xffffffffffffffffffffffffffffffffffffffff V269
0x568: V272 = EQ V271 V268
0x569: V273 = ISZERO V272
0x56a: V274 = ISZERO V273
0x56b: V275 = 0x15f
0x56e: JUMPI 0x15f V274
---
Entry stack: []
Stack pops: 0
Stack additions: [V249, 0xdd, V259, S0]
Exit stack: []

================================

Block 0x56f
[0x56f:0x5aa]
---
Predecessors: [0x4c1]
Successors: [0x5ab]
---
0x56f PUSH1 0x0
0x571 DUP1
0x572 REVERT
0x573 JUMPDEST
0x574 PUSH1 0x0
0x576 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x58b AND
0x58c DUP2
0x58d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5a2 AND
0x5a3 EQ
0x5a4 ISZERO
0x5a5 ISZERO
0x5a6 ISZERO
0x5a7 PUSH2 0x19b
0x5aa JUMPI
---
0x56f: V276 = 0x0
0x572: REVERT 0x0 0x0
0x573: JUMPDEST 
0x574: V277 = 0x0
0x576: V278 = 0xffffffffffffffffffffffffffffffffffffffff
0x58b: V279 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x58d: V280 = 0xffffffffffffffffffffffffffffffffffffffff
0x5a2: V281 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x5a3: V282 = EQ V281 0x0
0x5a4: V283 = ISZERO V282
0x5a5: V284 = ISZERO V283
0x5a6: V285 = ISZERO V284
0x5a7: V286 = 0x19b
0x5aa: THROWI V285
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x5ab
[0x5ab:0x6a5]
---
Predecessors: [0x56f]
Successors: [0x6a6]
---
0x5ab PUSH1 0x0
0x5ad DUP1
0x5ae REVERT
0x5af JUMPDEST
0x5b0 DUP1
0x5b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5c6 AND
0x5c7 PUSH1 0x0
0x5c9 DUP1
0x5ca SWAP1
0x5cb SLOAD
0x5cc SWAP1
0x5cd PUSH2 0x100
0x5d0 EXP
0x5d1 SWAP1
0x5d2 DIV
0x5d3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5e8 AND
0x5e9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5fe AND
0x5ff PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x620 PUSH1 0x40
0x622 MLOAD
0x623 PUSH1 0x40
0x625 MLOAD
0x626 DUP1
0x627 SWAP2
0x628 SUB
0x629 SWAP1
0x62a LOG3
0x62b DUP1
0x62c PUSH1 0x0
0x62e DUP1
0x62f PUSH2 0x100
0x632 EXP
0x633 DUP2
0x634 SLOAD
0x635 DUP2
0x636 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x64b MUL
0x64c NOT
0x64d AND
0x64e SWAP1
0x64f DUP4
0x650 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x665 AND
0x666 MUL
0x667 OR
0x668 SWAP1
0x669 SSTORE
0x66a POP
0x66b POP
0x66c JUMP
0x66d STOP
0x66e LOG1
0x66f PUSH6 0x627a7a723058
0x676 SHA3
0x677 SWAP12
0x678 MISSING 0x5f
0x679 MOD
0x67a PUSH17 0x14e6d7adbaef50b4eba067258cdc7d57b2
0x68c SHA3
0x68d PUSH12 0xbcb76f6567be3f7ae0002960
0x69a PUSH1 0x60
0x69c BLOCKHASH
0x69d MSTORE
0x69e PUSH1 0x4
0x6a0 CALLDATASIZE
0x6a1 LT
0x6a2 PUSH2 0x83
0x6a5 JUMPI
---
0x5ab: V287 = 0x0
0x5ae: REVERT 0x0 0x0
0x5af: JUMPDEST 
0x5b1: V288 = 0xffffffffffffffffffffffffffffffffffffffff
0x5c6: V289 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x5c7: V290 = 0x0
0x5cb: V291 = S[0x0]
0x5cd: V292 = 0x100
0x5d0: V293 = EXP 0x100 0x0
0x5d2: V294 = DIV V291 0x1
0x5d3: V295 = 0xffffffffffffffffffffffffffffffffffffffff
0x5e8: V296 = AND 0xffffffffffffffffffffffffffffffffffffffff V294
0x5e9: V297 = 0xffffffffffffffffffffffffffffffffffffffff
0x5fe: V298 = AND 0xffffffffffffffffffffffffffffffffffffffff V296
0x5ff: V299 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x620: V300 = 0x40
0x622: V301 = M[0x40]
0x623: V302 = 0x40
0x625: V303 = M[0x40]
0x628: V304 = SUB V301 V303
0x62a: LOG V303 V304 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V298 V289
0x62c: V305 = 0x0
0x62f: V306 = 0x100
0x632: V307 = EXP 0x100 0x0
0x634: V308 = S[0x0]
0x636: V309 = 0xffffffffffffffffffffffffffffffffffffffff
0x64b: V310 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x64c: V311 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x64d: V312 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V308
0x650: V313 = 0xffffffffffffffffffffffffffffffffffffffff
0x665: V314 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x666: V315 = MUL V314 0x1
0x667: V316 = OR V315 V312
0x669: S[0x0] = V316
0x66c: JUMP S1
0x66d: STOP 
0x66e: LOG S0 S1 S2
0x66f: V317 = 0x627a7a723058
0x676: V318 = SHA3 0x627a7a723058 S3
0x678: MISSING 0x5f
0x679: V319 = MOD S0 S1
0x67a: V320 = 0x14e6d7adbaef50b4eba067258cdc7d57b2
0x68c: V321 = SHA3 0x14e6d7adbaef50b4eba067258cdc7d57b2 V319
0x68d: V322 = 0xbcb76f6567be3f7ae0002960
0x69a: V323 = 0x60
0x69c: V324 = BLOCKHASH 0x60
0x69d: M[V324] = 0xbcb76f6567be3f7ae0002960
0x69e: V325 = 0x4
0x6a0: V326 = CALLDATASIZE
0x6a1: V327 = LT V326 0x4
0x6a2: V328 = 0x83
0x6a5: THROWI V327
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [S15, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, V318, V321]
Exit stack: []

================================

Block 0x6a6
[0x6a6:0x6d9]
---
Predecessors: [0x5ab]
Successors: [0x6da]
---
0x6a6 PUSH1 0x0
0x6a8 CALLDATALOAD
0x6a9 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x6c7 SWAP1
0x6c8 DIV
0x6c9 PUSH4 0xffffffff
0x6ce AND
0x6cf DUP1
0x6d0 PUSH4 0x4e71e0c8
0x6d5 EQ
0x6d6 PUSH2 0x85
0x6d9 JUMPI
---
0x6a6: V329 = 0x0
0x6a8: V330 = CALLDATALOAD 0x0
0x6a9: V331 = 0x100000000000000000000000000000000000000000000000000000000
0x6c8: V332 = DIV V330 0x100000000000000000000000000000000000000000000000000000000
0x6c9: V333 = 0xffffffff
0x6ce: V334 = AND 0xffffffff V332
0x6d0: V335 = 0x4e71e0c8
0x6d5: V336 = EQ 0x4e71e0c8 V334
0x6d6: V337 = 0x85
0x6d9: THROWI V336
---
Entry stack: [V321]
Stack pops: 0
Stack additions: [V334]
Exit stack: [V321, V334]

================================

Block 0x6da
[0x6da:0x6e4]
---
Predecessors: [0x6a6]
Successors: [0x6e5]
---
0x6da DUP1
0x6db PUSH4 0x7970785d
0x6e0 EQ
0x6e1 PUSH2 0x9a
0x6e4 JUMPI
---
0x6db: V338 = 0x7970785d
0x6e0: V339 = EQ 0x7970785d V334
0x6e1: V340 = 0x9a
0x6e4: THROWI V339
---
Entry stack: [V321, V334]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V321, V334]

================================

Block 0x6e5
[0x6e5:0x6ef]
---
Predecessors: [0x6da]
Successors: [0x6f0]
---
0x6e5 DUP1
0x6e6 PUSH4 0x7c3a1d32
0x6eb EQ
0x6ec PUSH2 0x174
0x6ef JUMPI
---
0x6e6: V341 = 0x7c3a1d32
0x6eb: V342 = EQ 0x7c3a1d32 V334
0x6ec: V343 = 0x174
0x6ef: THROWI V342
---
Entry stack: [V321, V334]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V321, V334]

================================

Block 0x6f0
[0x6f0:0x6fa]
---
Predecessors: [0x6e5]
Successors: [0x6fb]
---
0x6f0 DUP1
0x6f1 PUSH4 0x8da5cb5b
0x6f6 EQ
0x6f7 PUSH2 0x1ad
0x6fa JUMPI
---
0x6f1: V344 = 0x8da5cb5b
0x6f6: V345 = EQ 0x8da5cb5b V334
0x6f7: V346 = 0x1ad
0x6fa: THROWI V345
---
Entry stack: [V321, V334]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V321, V334]

================================

Block 0x6fb
[0x6fb:0x705]
---
Predecessors: [0x6f0]
Successors: [0x706]
---
0x6fb DUP1
0x6fc PUSH4 0x9957ad05
0x701 EQ
0x702 PUSH2 0x202
0x705 JUMPI
---
0x6fc: V347 = 0x9957ad05
0x701: V348 = EQ 0x9957ad05 V334
0x702: V349 = 0x202
0x705: THROWI V348
---
Entry stack: [V321, V334]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V321, V334]

================================

Block 0x706
[0x706:0x710]
---
Predecessors: [0x6fb]
Successors: [0x711]
---
0x706 DUP1
0x707 PUSH4 0xe30c3978
0x70c EQ
0x70d PUSH2 0x257
0x710 JUMPI
---
0x707: V350 = 0xe30c3978
0x70c: V351 = EQ 0xe30c3978 V334
0x70d: V352 = 0x257
0x710: THROWI V351
---
Entry stack: [V321, V334]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V321, V334]

================================

Block 0x711
[0x711:0x71b]
---
Predecessors: [0x706]
Successors: [0x71c]
---
0x711 DUP1
0x712 PUSH4 0xf2fde38b
0x717 EQ
0x718 PUSH2 0x2ac
0x71b JUMPI
---
0x712: V353 = 0xf2fde38b
0x717: V354 = EQ 0xf2fde38b V334
0x718: V355 = 0x2ac
0x71b: THROWI V354
---
Entry stack: [V321, V334]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V321, V334]

================================

Block 0x71c
[0x71c:0x724]
---
Predecessors: [0x711]
Successors: [0x725]
---
0x71c JUMPDEST
0x71d STOP
0x71e JUMPDEST
0x71f CALLVALUE
0x720 ISZERO
0x721 PUSH2 0x90
0x724 JUMPI
---
0x71c: JUMPDEST 
0x71d: STOP 
0x71e: JUMPDEST 
0x71f: V356 = CALLVALUE
0x720: V357 = ISZERO V356
0x721: V358 = 0x90
0x724: THROWI V357
---
Entry stack: [V321, V334]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x725
[0x725:0x739]
---
Predecessors: [0x71c]
Successors: [0x73a]
---
0x725 PUSH1 0x0
0x727 DUP1
0x728 REVERT
0x729 JUMPDEST
0x72a PUSH2 0x98
0x72d PUSH2 0x2e5
0x730 JUMP
0x731 JUMPDEST
0x732 STOP
0x733 JUMPDEST
0x734 CALLVALUE
0x735 ISZERO
0x736 PUSH2 0xa5
0x739 JUMPI
---
0x725: V359 = 0x0
0x728: REVERT 0x0 0x0
0x729: JUMPDEST 
0x72a: V360 = 0x98
0x72d: V361 = 0x2e5
0x730: THROW 
0x731: JUMPDEST 
0x732: STOP 
0x733: JUMPDEST 
0x734: V362 = CALLVALUE
0x735: V363 = ISZERO V362
0x736: V364 = 0xa5
0x739: THROWI V363
---
Entry stack: []
Stack pops: 0
Stack additions: [0x98]
Exit stack: []

================================

Block 0x73a
[0x73a:0x813]
---
Predecessors: [0x725]
Successors: [0x814]
---
0x73a PUSH1 0x0
0x73c DUP1
0x73d REVERT
0x73e JUMPDEST
0x73f PUSH2 0x172
0x742 PUSH1 0x4
0x744 DUP1
0x745 DUP1
0x746 CALLDATALOAD
0x747 SWAP1
0x748 PUSH1 0x20
0x74a ADD
0x74b SWAP1
0x74c DUP3
0x74d ADD
0x74e DUP1
0x74f CALLDATALOAD
0x750 SWAP1
0x751 PUSH1 0x20
0x753 ADD
0x754 SWAP1
0x755 DUP1
0x756 DUP1
0x757 PUSH1 0x20
0x759 MUL
0x75a PUSH1 0x20
0x75c ADD
0x75d PUSH1 0x40
0x75f MLOAD
0x760 SWAP1
0x761 DUP2
0x762 ADD
0x763 PUSH1 0x40
0x765 MSTORE
0x766 DUP1
0x767 SWAP4
0x768 SWAP3
0x769 SWAP2
0x76a SWAP1
0x76b DUP2
0x76c DUP2
0x76d MSTORE
0x76e PUSH1 0x20
0x770 ADD
0x771 DUP4
0x772 DUP4
0x773 PUSH1 0x20
0x775 MUL
0x776 DUP1
0x777 DUP3
0x778 DUP5
0x779 CALLDATACOPY
0x77a DUP3
0x77b ADD
0x77c SWAP2
0x77d POP
0x77e POP
0x77f POP
0x780 POP
0x781 POP
0x782 POP
0x783 SWAP2
0x784 SWAP1
0x785 DUP1
0x786 CALLDATALOAD
0x787 SWAP1
0x788 PUSH1 0x20
0x78a ADD
0x78b SWAP1
0x78c DUP3
0x78d ADD
0x78e DUP1
0x78f CALLDATALOAD
0x790 SWAP1
0x791 PUSH1 0x20
0x793 ADD
0x794 SWAP1
0x795 DUP1
0x796 DUP1
0x797 PUSH1 0x20
0x799 MUL
0x79a PUSH1 0x20
0x79c ADD
0x79d PUSH1 0x40
0x79f MLOAD
0x7a0 SWAP1
0x7a1 DUP2
0x7a2 ADD
0x7a3 PUSH1 0x40
0x7a5 MSTORE
0x7a6 DUP1
0x7a7 SWAP4
0x7a8 SWAP3
0x7a9 SWAP2
0x7aa SWAP1
0x7ab DUP2
0x7ac DUP2
0x7ad MSTORE
0x7ae PUSH1 0x20
0x7b0 ADD
0x7b1 DUP4
0x7b2 DUP4
0x7b3 PUSH1 0x20
0x7b5 MUL
0x7b6 DUP1
0x7b7 DUP3
0x7b8 DUP5
0x7b9 CALLDATACOPY
0x7ba DUP3
0x7bb ADD
0x7bc SWAP2
0x7bd POP
0x7be POP
0x7bf POP
0x7c0 POP
0x7c1 POP
0x7c2 POP
0x7c3 SWAP2
0x7c4 SWAP1
0x7c5 DUP1
0x7c6 CALLDATALOAD
0x7c7 SWAP1
0x7c8 PUSH1 0x20
0x7ca ADD
0x7cb SWAP1
0x7cc DUP3
0x7cd ADD
0x7ce DUP1
0x7cf CALLDATALOAD
0x7d0 SWAP1
0x7d1 PUSH1 0x20
0x7d3 ADD
0x7d4 SWAP1
0x7d5 DUP1
0x7d6 DUP1
0x7d7 PUSH1 0x20
0x7d9 MUL
0x7da PUSH1 0x20
0x7dc ADD
0x7dd PUSH1 0x40
0x7df MLOAD
0x7e0 SWAP1
0x7e1 DUP2
0x7e2 ADD
0x7e3 PUSH1 0x40
0x7e5 MSTORE
0x7e6 DUP1
0x7e7 SWAP4
0x7e8 SWAP3
0x7e9 SWAP2
0x7ea SWAP1
0x7eb DUP2
0x7ec DUP2
0x7ed MSTORE
0x7ee PUSH1 0x20
0x7f0 ADD
0x7f1 DUP4
0x7f2 DUP4
0x7f3 PUSH1 0x20
0x7f5 MUL
0x7f6 DUP1
0x7f7 DUP3
0x7f8 DUP5
0x7f9 CALLDATACOPY
0x7fa DUP3
0x7fb ADD
0x7fc SWAP2
0x7fd POP
0x7fe POP
0x7ff POP
0x800 POP
0x801 POP
0x802 POP
0x803 SWAP2
0x804 SWAP1
0x805 POP
0x806 POP
0x807 PUSH2 0x484
0x80a JUMP
0x80b JUMPDEST
0x80c STOP
0x80d JUMPDEST
0x80e CALLVALUE
0x80f ISZERO
0x810 PUSH2 0x17f
0x813 JUMPI
---
0x73a: V365 = 0x0
0x73d: REVERT 0x0 0x0
0x73e: JUMPDEST 
0x73f: V366 = 0x172
0x742: V367 = 0x4
0x746: V368 = CALLDATALOAD 0x4
0x748: V369 = 0x20
0x74a: V370 = ADD 0x20 0x4
0x74d: V371 = ADD 0x4 V368
0x74f: V372 = CALLDATALOAD V371
0x751: V373 = 0x20
0x753: V374 = ADD 0x20 V371
0x757: V375 = 0x20
0x759: V376 = MUL 0x20 V372
0x75a: V377 = 0x20
0x75c: V378 = ADD 0x20 V376
0x75d: V379 = 0x40
0x75f: V380 = M[0x40]
0x762: V381 = ADD V380 V378
0x763: V382 = 0x40
0x765: M[0x40] = V381
0x76d: M[V380] = V372
0x76e: V383 = 0x20
0x770: V384 = ADD 0x20 V380
0x773: V385 = 0x20
0x775: V386 = MUL 0x20 V372
0x779: CALLDATACOPY V384 V374 V386
0x77b: V387 = ADD V384 V386
0x786: V388 = CALLDATALOAD 0x24
0x788: V389 = 0x20
0x78a: V390 = ADD 0x20 0x24
0x78d: V391 = ADD 0x4 V388
0x78f: V392 = CALLDATALOAD V391
0x791: V393 = 0x20
0x793: V394 = ADD 0x20 V391
0x797: V395 = 0x20
0x799: V396 = MUL 0x20 V392
0x79a: V397 = 0x20
0x79c: V398 = ADD 0x20 V396
0x79d: V399 = 0x40
0x79f: V400 = M[0x40]
0x7a2: V401 = ADD V400 V398
0x7a3: V402 = 0x40
0x7a5: M[0x40] = V401
0x7ad: M[V400] = V392
0x7ae: V403 = 0x20
0x7b0: V404 = ADD 0x20 V400
0x7b3: V405 = 0x20
0x7b5: V406 = MUL 0x20 V392
0x7b9: CALLDATACOPY V404 V394 V406
0x7bb: V407 = ADD V404 V406
0x7c6: V408 = CALLDATALOAD 0x44
0x7c8: V409 = 0x20
0x7ca: V410 = ADD 0x20 0x44
0x7cd: V411 = ADD 0x4 V408
0x7cf: V412 = CALLDATALOAD V411
0x7d1: V413 = 0x20
0x7d3: V414 = ADD 0x20 V411
0x7d7: V415 = 0x20
0x7d9: V416 = MUL 0x20 V412
0x7da: V417 = 0x20
0x7dc: V418 = ADD 0x20 V416
0x7dd: V419 = 0x40
0x7df: V420 = M[0x40]
0x7e2: V421 = ADD V420 V418
0x7e3: V422 = 0x40
0x7e5: M[0x40] = V421
0x7ed: M[V420] = V412
0x7ee: V423 = 0x20
0x7f0: V424 = ADD 0x20 V420
0x7f3: V425 = 0x20
0x7f5: V426 = MUL 0x20 V412
0x7f9: CALLDATACOPY V424 V414 V426
0x7fb: V427 = ADD V424 V426
0x807: V428 = 0x484
0x80a: THROW 
0x80b: JUMPDEST 
0x80c: STOP 
0x80d: JUMPDEST 
0x80e: V429 = CALLVALUE
0x80f: V430 = ISZERO V429
0x810: V431 = 0x17f
0x813: THROWI V430
---
Entry stack: []
Stack pops: 0
Stack additions: [V420, V400, V380, 0x172]
Exit stack: []

================================

Block 0x814
[0x814:0x84c]
---
Predecessors: [0x73a]
Successors: [0x84d]
---
0x814 PUSH1 0x0
0x816 DUP1
0x817 REVERT
0x818 JUMPDEST
0x819 PUSH2 0x1ab
0x81c PUSH1 0x4
0x81e DUP1
0x81f DUP1
0x820 CALLDATALOAD
0x821 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x836 AND
0x837 SWAP1
0x838 PUSH1 0x20
0x83a ADD
0x83b SWAP1
0x83c SWAP2
0x83d SWAP1
0x83e POP
0x83f POP
0x840 PUSH2 0x87e
0x843 JUMP
0x844 JUMPDEST
0x845 STOP
0x846 JUMPDEST
0x847 CALLVALUE
0x848 ISZERO
0x849 PUSH2 0x1b8
0x84c JUMPI
---
0x814: V432 = 0x0
0x817: REVERT 0x0 0x0
0x818: JUMPDEST 
0x819: V433 = 0x1ab
0x81c: V434 = 0x4
0x820: V435 = CALLDATALOAD 0x4
0x821: V436 = 0xffffffffffffffffffffffffffffffffffffffff
0x836: V437 = AND 0xffffffffffffffffffffffffffffffffffffffff V435
0x838: V438 = 0x20
0x83a: V439 = ADD 0x20 0x4
0x840: V440 = 0x87e
0x843: THROW 
0x844: JUMPDEST 
0x845: STOP 
0x846: JUMPDEST 
0x847: V441 = CALLVALUE
0x848: V442 = ISZERO V441
0x849: V443 = 0x1b8
0x84c: THROWI V442
---
Entry stack: []
Stack pops: 0
Stack additions: [V437, 0x1ab]
Exit stack: []

================================

Block 0x84d
[0x84d:0x8a1]
---
Predecessors: [0x814]
Successors: [0x8a2]
---
0x84d PUSH1 0x0
0x84f DUP1
0x850 REVERT
0x851 JUMPDEST
0x852 PUSH2 0x1c0
0x855 PUSH2 0x91d
0x858 JUMP
0x859 JUMPDEST
0x85a PUSH1 0x40
0x85c MLOAD
0x85d DUP1
0x85e DUP3
0x85f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x874 AND
0x875 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x88a AND
0x88b DUP2
0x88c MSTORE
0x88d PUSH1 0x20
0x88f ADD
0x890 SWAP2
0x891 POP
0x892 POP
0x893 PUSH1 0x40
0x895 MLOAD
0x896 DUP1
0x897 SWAP2
0x898 SUB
0x899 SWAP1
0x89a RETURN
0x89b JUMPDEST
0x89c CALLVALUE
0x89d ISZERO
0x89e PUSH2 0x20d
0x8a1 JUMPI
---
0x84d: V444 = 0x0
0x850: REVERT 0x0 0x0
0x851: JUMPDEST 
0x852: V445 = 0x1c0
0x855: V446 = 0x91d
0x858: THROW 
0x859: JUMPDEST 
0x85a: V447 = 0x40
0x85c: V448 = M[0x40]
0x85f: V449 = 0xffffffffffffffffffffffffffffffffffffffff
0x874: V450 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x875: V451 = 0xffffffffffffffffffffffffffffffffffffffff
0x88a: V452 = AND 0xffffffffffffffffffffffffffffffffffffffff V450
0x88c: M[V448] = V452
0x88d: V453 = 0x20
0x88f: V454 = ADD 0x20 V448
0x893: V455 = 0x40
0x895: V456 = M[0x40]
0x898: V457 = SUB V454 V456
0x89a: RETURN V456 V457
0x89b: JUMPDEST 
0x89c: V458 = CALLVALUE
0x89d: V459 = ISZERO V458
0x89e: V460 = 0x20d
0x8a1: THROWI V459
---
Entry stack: []
Stack pops: 0
Stack additions: [0x1c0]
Exit stack: []

================================

Block 0x8a2
[0x8a2:0x8f6]
---
Predecessors: [0x84d]
Successors: [0x8f7]
---
0x8a2 PUSH1 0x0
0x8a4 DUP1
0x8a5 REVERT
0x8a6 JUMPDEST
0x8a7 PUSH2 0x215
0x8aa PUSH2 0x942
0x8ad JUMP
0x8ae JUMPDEST
0x8af PUSH1 0x40
0x8b1 MLOAD
0x8b2 DUP1
0x8b3 DUP3
0x8b4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8c9 AND
0x8ca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8df AND
0x8e0 DUP2
0x8e1 MSTORE
0x8e2 PUSH1 0x20
0x8e4 ADD
0x8e5 SWAP2
0x8e6 POP
0x8e7 POP
0x8e8 PUSH1 0x40
0x8ea MLOAD
0x8eb DUP1
0x8ec SWAP2
0x8ed SUB
0x8ee SWAP1
0x8ef RETURN
0x8f0 JUMPDEST
0x8f1 CALLVALUE
0x8f2 ISZERO
0x8f3 PUSH2 0x262
0x8f6 JUMPI
---
0x8a2: V461 = 0x0
0x8a5: REVERT 0x0 0x0
0x8a6: JUMPDEST 
0x8a7: V462 = 0x215
0x8aa: V463 = 0x942
0x8ad: THROW 
0x8ae: JUMPDEST 
0x8af: V464 = 0x40
0x8b1: V465 = M[0x40]
0x8b4: V466 = 0xffffffffffffffffffffffffffffffffffffffff
0x8c9: V467 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x8ca: V468 = 0xffffffffffffffffffffffffffffffffffffffff
0x8df: V469 = AND 0xffffffffffffffffffffffffffffffffffffffff V467
0x8e1: M[V465] = V469
0x8e2: V470 = 0x20
0x8e4: V471 = ADD 0x20 V465
0x8e8: V472 = 0x40
0x8ea: V473 = M[0x40]
0x8ed: V474 = SUB V471 V473
0x8ef: RETURN V473 V474
0x8f0: JUMPDEST 
0x8f1: V475 = CALLVALUE
0x8f2: V476 = ISZERO V475
0x8f3: V477 = 0x262
0x8f6: THROWI V476
---
Entry stack: []
Stack pops: 0
Stack additions: [0x215]
Exit stack: []

================================

Block 0x8f7
[0x8f7:0x94b]
---
Predecessors: [0x8a2]
Successors: [0x94c]
---
0x8f7 PUSH1 0x0
0x8f9 DUP1
0x8fa REVERT
0x8fb JUMPDEST
0x8fc PUSH2 0x26a
0x8ff PUSH2 0x968
0x902 JUMP
0x903 JUMPDEST
0x904 PUSH1 0x40
0x906 MLOAD
0x907 DUP1
0x908 DUP3
0x909 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x91e AND
0x91f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x934 AND
0x935 DUP2
0x936 MSTORE
0x937 PUSH1 0x20
0x939 ADD
0x93a SWAP2
0x93b POP
0x93c POP
0x93d PUSH1 0x40
0x93f MLOAD
0x940 DUP1
0x941 SWAP2
0x942 SUB
0x943 SWAP1
0x944 RETURN
0x945 JUMPDEST
0x946 CALLVALUE
0x947 ISZERO
0x948 PUSH2 0x2b7
0x94b JUMPI
---
0x8f7: V478 = 0x0
0x8fa: REVERT 0x0 0x0
0x8fb: JUMPDEST 
0x8fc: V479 = 0x26a
0x8ff: V480 = 0x968
0x902: THROW 
0x903: JUMPDEST 
0x904: V481 = 0x40
0x906: V482 = M[0x40]
0x909: V483 = 0xffffffffffffffffffffffffffffffffffffffff
0x91e: V484 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x91f: V485 = 0xffffffffffffffffffffffffffffffffffffffff
0x934: V486 = AND 0xffffffffffffffffffffffffffffffffffffffff V484
0x936: M[V482] = V486
0x937: V487 = 0x20
0x939: V488 = ADD 0x20 V482
0x93d: V489 = 0x40
0x93f: V490 = M[0x40]
0x942: V491 = SUB V488 V490
0x944: RETURN V490 V491
0x945: JUMPDEST 
0x946: V492 = CALLVALUE
0x947: V493 = ISZERO V492
0x948: V494 = 0x2b7
0x94b: THROWI V493
---
Entry stack: []
Stack pops: 0
Stack additions: [0x26a]
Exit stack: []

================================

Block 0x94c
[0x94c:0x9d5]
---
Predecessors: [0x8f7]
Successors: [0x9d6]
---
0x94c PUSH1 0x0
0x94e DUP1
0x94f REVERT
0x950 JUMPDEST
0x951 PUSH2 0x2e3
0x954 PUSH1 0x4
0x956 DUP1
0x957 DUP1
0x958 CALLDATALOAD
0x959 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x96e AND
0x96f SWAP1
0x970 PUSH1 0x20
0x972 ADD
0x973 SWAP1
0x974 SWAP2
0x975 SWAP1
0x976 POP
0x977 POP
0x978 PUSH2 0x98e
0x97b JUMP
0x97c JUMPDEST
0x97d STOP
0x97e JUMPDEST
0x97f PUSH1 0x1
0x981 PUSH1 0x0
0x983 SWAP1
0x984 SLOAD
0x985 SWAP1
0x986 PUSH2 0x100
0x989 EXP
0x98a SWAP1
0x98b DIV
0x98c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9a1 AND
0x9a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9b7 AND
0x9b8 CALLER
0x9b9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9ce AND
0x9cf EQ
0x9d0 ISZERO
0x9d1 ISZERO
0x9d2 PUSH2 0x341
0x9d5 JUMPI
---
0x94c: V495 = 0x0
0x94f: REVERT 0x0 0x0
0x950: JUMPDEST 
0x951: V496 = 0x2e3
0x954: V497 = 0x4
0x958: V498 = CALLDATALOAD 0x4
0x959: V499 = 0xffffffffffffffffffffffffffffffffffffffff
0x96e: V500 = AND 0xffffffffffffffffffffffffffffffffffffffff V498
0x970: V501 = 0x20
0x972: V502 = ADD 0x20 0x4
0x978: V503 = 0x98e
0x97b: THROW 
0x97c: JUMPDEST 
0x97d: STOP 
0x97e: JUMPDEST 
0x97f: V504 = 0x1
0x981: V505 = 0x0
0x984: V506 = S[0x1]
0x986: V507 = 0x100
0x989: V508 = EXP 0x100 0x0
0x98b: V509 = DIV V506 0x1
0x98c: V510 = 0xffffffffffffffffffffffffffffffffffffffff
0x9a1: V511 = AND 0xffffffffffffffffffffffffffffffffffffffff V509
0x9a2: V512 = 0xffffffffffffffffffffffffffffffffffffffff
0x9b7: V513 = AND 0xffffffffffffffffffffffffffffffffffffffff V511
0x9b8: V514 = CALLER
0x9b9: V515 = 0xffffffffffffffffffffffffffffffffffffffff
0x9ce: V516 = AND 0xffffffffffffffffffffffffffffffffffffffff V514
0x9cf: V517 = EQ V516 V513
0x9d0: V518 = ISZERO V517
0x9d1: V519 = ISZERO V518
0x9d2: V520 = 0x341
0x9d5: THROWI V519
---
Entry stack: []
Stack pops: 0
Stack additions: [V500, 0x2e3]
Exit stack: []

================================

Block 0x9d6
[0x9d6:0xb79]
---
Predecessors: [0x94c]
Successors: [0xb7a]
---
0x9d6 PUSH1 0x0
0x9d8 DUP1
0x9d9 REVERT
0x9da JUMPDEST
0x9db PUSH1 0x1
0x9dd PUSH1 0x0
0x9df SWAP1
0x9e0 SLOAD
0x9e1 SWAP1
0x9e2 PUSH2 0x100
0x9e5 EXP
0x9e6 SWAP1
0x9e7 DIV
0x9e8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9fd AND
0x9fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa13 AND
0xa14 PUSH1 0x0
0xa16 DUP1
0xa17 SWAP1
0xa18 SLOAD
0xa19 SWAP1
0xa1a PUSH2 0x100
0xa1d EXP
0xa1e SWAP1
0xa1f DIV
0xa20 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa35 AND
0xa36 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa4b AND
0xa4c PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xa6d PUSH1 0x40
0xa6f MLOAD
0xa70 PUSH1 0x40
0xa72 MLOAD
0xa73 DUP1
0xa74 SWAP2
0xa75 SUB
0xa76 SWAP1
0xa77 LOG3
0xa78 PUSH1 0x1
0xa7a PUSH1 0x0
0xa7c SWAP1
0xa7d SLOAD
0xa7e SWAP1
0xa7f PUSH2 0x100
0xa82 EXP
0xa83 SWAP1
0xa84 DIV
0xa85 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa9a AND
0xa9b PUSH1 0x0
0xa9d DUP1
0xa9e PUSH2 0x100
0xaa1 EXP
0xaa2 DUP2
0xaa3 SLOAD
0xaa4 DUP2
0xaa5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaba MUL
0xabb NOT
0xabc AND
0xabd SWAP1
0xabe DUP4
0xabf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xad4 AND
0xad5 MUL
0xad6 OR
0xad7 SWAP1
0xad8 SSTORE
0xad9 POP
0xada PUSH1 0x0
0xadc PUSH1 0x1
0xade PUSH1 0x0
0xae0 PUSH2 0x100
0xae3 EXP
0xae4 DUP2
0xae5 SLOAD
0xae6 DUP2
0xae7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xafc MUL
0xafd NOT
0xafe AND
0xaff SWAP1
0xb00 DUP4
0xb01 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb16 AND
0xb17 MUL
0xb18 OR
0xb19 SWAP1
0xb1a SSTORE
0xb1b POP
0xb1c JUMP
0xb1d JUMPDEST
0xb1e PUSH1 0x0
0xb20 DUP1
0xb21 PUSH1 0x0
0xb23 DUP1
0xb24 PUSH1 0x2
0xb26 PUSH1 0x0
0xb28 SWAP1
0xb29 SLOAD
0xb2a SWAP1
0xb2b PUSH2 0x100
0xb2e EXP
0xb2f SWAP1
0xb30 DIV
0xb31 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb46 AND
0xb47 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb5c AND
0xb5d CALLER
0xb5e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb73 AND
0xb74 EQ
0xb75 DUP1
0xb76 PUSH2 0x532
0xb79 JUMPI
---
0x9d6: V521 = 0x0
0x9d9: REVERT 0x0 0x0
0x9da: JUMPDEST 
0x9db: V522 = 0x1
0x9dd: V523 = 0x0
0x9e0: V524 = S[0x1]
0x9e2: V525 = 0x100
0x9e5: V526 = EXP 0x100 0x0
0x9e7: V527 = DIV V524 0x1
0x9e8: V528 = 0xffffffffffffffffffffffffffffffffffffffff
0x9fd: V529 = AND 0xffffffffffffffffffffffffffffffffffffffff V527
0x9fe: V530 = 0xffffffffffffffffffffffffffffffffffffffff
0xa13: V531 = AND 0xffffffffffffffffffffffffffffffffffffffff V529
0xa14: V532 = 0x0
0xa18: V533 = S[0x0]
0xa1a: V534 = 0x100
0xa1d: V535 = EXP 0x100 0x0
0xa1f: V536 = DIV V533 0x1
0xa20: V537 = 0xffffffffffffffffffffffffffffffffffffffff
0xa35: V538 = AND 0xffffffffffffffffffffffffffffffffffffffff V536
0xa36: V539 = 0xffffffffffffffffffffffffffffffffffffffff
0xa4b: V540 = AND 0xffffffffffffffffffffffffffffffffffffffff V538
0xa4c: V541 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xa6d: V542 = 0x40
0xa6f: V543 = M[0x40]
0xa70: V544 = 0x40
0xa72: V545 = M[0x40]
0xa75: V546 = SUB V543 V545
0xa77: LOG V545 V546 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V540 V531
0xa78: V547 = 0x1
0xa7a: V548 = 0x0
0xa7d: V549 = S[0x1]
0xa7f: V550 = 0x100
0xa82: V551 = EXP 0x100 0x0
0xa84: V552 = DIV V549 0x1
0xa85: V553 = 0xffffffffffffffffffffffffffffffffffffffff
0xa9a: V554 = AND 0xffffffffffffffffffffffffffffffffffffffff V552
0xa9b: V555 = 0x0
0xa9e: V556 = 0x100
0xaa1: V557 = EXP 0x100 0x0
0xaa3: V558 = S[0x0]
0xaa5: V559 = 0xffffffffffffffffffffffffffffffffffffffff
0xaba: V560 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xabb: V561 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xabc: V562 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V558
0xabf: V563 = 0xffffffffffffffffffffffffffffffffffffffff
0xad4: V564 = AND 0xffffffffffffffffffffffffffffffffffffffff V554
0xad5: V565 = MUL V564 0x1
0xad6: V566 = OR V565 V562
0xad8: S[0x0] = V566
0xada: V567 = 0x0
0xadc: V568 = 0x1
0xade: V569 = 0x0
0xae0: V570 = 0x100
0xae3: V571 = EXP 0x100 0x0
0xae5: V572 = S[0x1]
0xae7: V573 = 0xffffffffffffffffffffffffffffffffffffffff
0xafc: V574 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xafd: V575 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xafe: V576 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V572
0xb01: V577 = 0xffffffffffffffffffffffffffffffffffffffff
0xb16: V578 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0xb17: V579 = MUL 0x0 0x1
0xb18: V580 = OR 0x0 V576
0xb1a: S[0x1] = V580
0xb1c: JUMP S0
0xb1d: JUMPDEST 
0xb1e: V581 = 0x0
0xb21: V582 = 0x0
0xb24: V583 = 0x2
0xb26: V584 = 0x0
0xb29: V585 = S[0x2]
0xb2b: V586 = 0x100
0xb2e: V587 = EXP 0x100 0x0
0xb30: V588 = DIV V585 0x1
0xb31: V589 = 0xffffffffffffffffffffffffffffffffffffffff
0xb46: V590 = AND 0xffffffffffffffffffffffffffffffffffffffff V588
0xb47: V591 = 0xffffffffffffffffffffffffffffffffffffffff
0xb5c: V592 = AND 0xffffffffffffffffffffffffffffffffffffffff V590
0xb5d: V593 = CALLER
0xb5e: V594 = 0xffffffffffffffffffffffffffffffffffffffff
0xb73: V595 = AND 0xffffffffffffffffffffffffffffffffffffffff V593
0xb74: V596 = EQ V595 V592
0xb76: V597 = 0x532
0xb79: THROWI V596
---
Entry stack: []
Stack pops: 0
Stack additions: [V596, 0x0, 0x0, 0x0, 0x0]
Exit stack: []

================================

Block 0xb7a
[0xb7a:0xbca]
---
Predecessors: [0x9d6]
Successors: [0xbcb]
---
0xb7a POP
0xb7b PUSH1 0x0
0xb7d DUP1
0xb7e SWAP1
0xb7f SLOAD
0xb80 SWAP1
0xb81 PUSH2 0x100
0xb84 EXP
0xb85 SWAP1
0xb86 DIV
0xb87 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb9c AND
0xb9d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbb2 AND
0xbb3 CALLER
0xbb4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbc9 AND
0xbca EQ
---
0xb7b: V598 = 0x0
0xb7f: V599 = S[0x0]
0xb81: V600 = 0x100
0xb84: V601 = EXP 0x100 0x0
0xb86: V602 = DIV V599 0x1
0xb87: V603 = 0xffffffffffffffffffffffffffffffffffffffff
0xb9c: V604 = AND 0xffffffffffffffffffffffffffffffffffffffff V602
0xb9d: V605 = 0xffffffffffffffffffffffffffffffffffffffff
0xbb2: V606 = AND 0xffffffffffffffffffffffffffffffffffffffff V604
0xbb3: V607 = CALLER
0xbb4: V608 = 0xffffffffffffffffffffffffffffffffffffffff
0xbc9: V609 = AND 0xffffffffffffffffffffffffffffffffffffffff V607
0xbca: V610 = EQ V609 V606
---
Entry stack: [0x0, 0x0, 0x0, 0x0, V596]
Stack pops: 1
Stack additions: [V610]
Exit stack: [0x0, 0x0, 0x0, 0x0, V610]

================================

Block 0xbcb
[0xbcb:0xbd1]
---
Predecessors: [0xb7a]
Successors: [0xbd2]
---
0xbcb JUMPDEST
0xbcc ISZERO
0xbcd ISZERO
0xbce PUSH2 0x53d
0xbd1 JUMPI
---
0xbcb: JUMPDEST 
0xbcc: V611 = ISZERO V610
0xbcd: V612 = ISZERO V611
0xbce: V613 = 0x53d
0xbd1: THROWI V612
---
Entry stack: [0x0, 0x0, 0x0, 0x0, V610]
Stack pops: 1
Stack additions: []
Exit stack: [0x0, 0x0, 0x0, 0x0]

================================

Block 0xbd2
[0xbd2:0xbe1]
---
Predecessors: [0xbcb]
Successors: [0xbe2]
---
0xbd2 PUSH1 0x0
0xbd4 DUP1
0xbd5 REVERT
0xbd6 JUMPDEST
0xbd7 DUP6
0xbd8 MLOAD
0xbd9 DUP8
0xbda MLOAD
0xbdb EQ
0xbdc DUP1
0xbdd ISZERO
0xbde PUSH2 0x54f
0xbe1 JUMPI
---
0xbd2: V614 = 0x0
0xbd5: REVERT 0x0 0x0
0xbd6: JUMPDEST 
0xbd8: V615 = M[S5]
0xbda: V616 = M[S6]
0xbdb: V617 = EQ V616 V615
0xbdd: V618 = ISZERO V617
0xbde: V619 = 0x54f
0xbe1: THROWI V618
---
Entry stack: [0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V617, S0, S1, S2, S3, S4, S5, S6]
Exit stack: []

================================

Block 0xbe2
[0xbe2:0xbe7]
---
Predecessors: [0xbd2]
Successors: [0xbe8]
---
0xbe2 POP
0xbe3 DUP5
0xbe4 MLOAD
0xbe5 DUP7
0xbe6 MLOAD
0xbe7 EQ
---
0xbe4: V620 = M[S5]
0xbe6: V621 = M[S6]
0xbe7: V622 = EQ V621 V620
---
Entry stack: [S7, S6, S5, S4, S3, S2, S1, V617]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, V622]
Exit stack: [S7, S6, S5, S4, S3, S2, S1, V622]

================================

Block 0xbe8
[0xbe8:0xbee]
---
Predecessors: [0xbe2]
Successors: [0xbef]
---
0xbe8 JUMPDEST
0xbe9 ISZERO
0xbea ISZERO
0xbeb PUSH2 0x55a
0xbee JUMPI
---
0xbe8: JUMPDEST 
0xbe9: V623 = ISZERO V622
0xbea: V624 = ISZERO V623
0xbeb: V625 = 0x55a
0xbee: THROWI V624
---
Entry stack: [S7, S6, S5, S4, S3, S2, S1, V622]
Stack pops: 1
Stack additions: []
Exit stack: [S7, S6, S5, S4, S3, S2, S1]

================================

Block 0xbef
[0xbef:0xbf7]
---
Predecessors: [0xbe8]
Successors: [0xbf8]
---
0xbef PUSH1 0x0
0xbf1 DUP1
0xbf2 REVERT
0xbf3 JUMPDEST
0xbf4 PUSH1 0x0
0xbf6 SWAP4
0xbf7 POP
---
0xbef: V626 = 0x0
0xbf2: REVERT 0x0 0x0
0xbf3: JUMPDEST 
0xbf4: V627 = 0x0
---
Entry stack: [S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [S0, S1, S2, 0x0]
Exit stack: []

================================

Block 0xbf8
[0xbf8:0xc01]
---
Predecessors: [0xbef]
Successors: [0xc02]
---
0xbf8 JUMPDEST
0xbf9 DUP7
0xbfa MLOAD
0xbfb DUP5
0xbfc LT
0xbfd ISZERO
0xbfe PUSH2 0x875
0xc01 JUMPI
---
0xbf8: JUMPDEST 
0xbfa: V628 = M[S6]
0xbfc: V629 = LT 0x0 V628
0xbfd: V630 = ISZERO V629
0xbfe: V631 = 0x875
0xc01: THROWI V630
---
Entry stack: [0x0, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0]
Exit stack: [S2, S1, S0, 0x0, S2, S1, S0]

================================

Block 0xc02
[0xc02:0xc0d]
---
Predecessors: [0xbf8]
Successors: [0xc0e]
---
0xc02 DUP5
0xc03 DUP5
0xc04 DUP2
0xc05 MLOAD
0xc06 DUP2
0xc07 LT
0xc08 ISZERO
0xc09 ISZERO
0xc0a PUSH2 0x576
0xc0d JUMPI
---
0xc05: V632 = M[S4]
0xc07: V633 = LT 0x0 V632
0xc08: V634 = ISZERO V633
0xc09: V635 = ISZERO V634
0xc0a: V636 = 0x576
0xc0d: THROWI V635
---
Entry stack: [S6, S5, S4, 0x0, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S4, S3]
Exit stack: [S6, S5, S4, 0x0, S2, S1, S0, S4, 0x0]

================================

Block 0xc0e
[0xc0e:0xc27]
---
Predecessors: [0xc02]
Successors: [0xc28]
---
0xc0e INVALID
0xc0f JUMPDEST
0xc10 SWAP1
0xc11 PUSH1 0x20
0xc13 ADD
0xc14 SWAP1
0xc15 PUSH1 0x20
0xc17 MUL
0xc18 ADD
0xc19 MLOAD
0xc1a SWAP3
0xc1b POP
0xc1c DUP6
0xc1d DUP5
0xc1e DUP2
0xc1f MLOAD
0xc20 DUP2
0xc21 LT
0xc22 ISZERO
0xc23 ISZERO
0xc24 PUSH2 0x590
0xc27 JUMPI
---
0xc0e: INVALID 
0xc0f: JUMPDEST 
0xc11: V637 = 0x20
0xc13: V638 = ADD 0x20 S1
0xc15: V639 = 0x20
0xc17: V640 = MUL 0x20 S0
0xc18: V641 = ADD V640 V638
0xc19: V642 = M[V641]
0xc1f: V643 = M[S7]
0xc21: V644 = LT S5 V643
0xc22: V645 = ISZERO V644
0xc23: V646 = ISZERO V645
0xc24: V647 = 0x590
0xc27: THROWI V646
---
Entry stack: [S8, S7, S6, 0x0, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: [S5, S7, S2, S3, V642, S5, S6, S7]
Exit stack: []

================================

Block 0xc28
[0xc28:0xc41]
---
Predecessors: [0xc0e]
Successors: [0xc42]
---
0xc28 INVALID
0xc29 JUMPDEST
0xc2a SWAP1
0xc2b PUSH1 0x20
0xc2d ADD
0xc2e SWAP1
0xc2f PUSH1 0x20
0xc31 MUL
0xc32 ADD
0xc33 MLOAD
0xc34 SWAP2
0xc35 POP
0xc36 DUP7
0xc37 DUP5
0xc38 DUP2
0xc39 MLOAD
0xc3a DUP2
0xc3b LT
0xc3c ISZERO
0xc3d ISZERO
0xc3e PUSH2 0x5aa
0xc41 JUMPI
---
0xc28: INVALID 
0xc29: JUMPDEST 
0xc2b: V648 = 0x20
0xc2d: V649 = ADD 0x20 S1
0xc2f: V650 = 0x20
0xc31: V651 = MUL 0x20 S0
0xc32: V652 = ADD V651 V649
0xc33: V653 = M[V652]
0xc39: V654 = M[S8]
0xc3b: V655 = LT S5 V654
0xc3c: V656 = ISZERO V655
0xc3d: V657 = ISZERO V656
0xc3e: V658 = 0x5aa
0xc41: THROWI V657
---
Entry stack: [S7, S6, S5, V642, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [S5, S8, S2, V653, S4, S5, S6, S7, S8]
Exit stack: []

================================

Block 0xc42
[0xc42:0xc84]
---
Predecessors: [0xc28]
Successors: [0xc85]
---
0xc42 INVALID
0xc43 JUMPDEST
0xc44 SWAP1
0xc45 PUSH1 0x20
0xc47 ADD
0xc48 SWAP1
0xc49 PUSH1 0x20
0xc4b MUL
0xc4c ADD
0xc4d MLOAD
0xc4e SWAP1
0xc4f POP
0xc50 PUSH1 0x0
0xc52 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc67 AND
0xc68 DUP4
0xc69 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc7e AND
0xc7f EQ
0xc80 ISZERO
0xc81 PUSH2 0x650
0xc84 JUMPI
---
0xc42: INVALID 
0xc43: JUMPDEST 
0xc45: V659 = 0x20
0xc47: V660 = ADD 0x20 S1
0xc49: V661 = 0x20
0xc4b: V662 = MUL 0x20 S0
0xc4c: V663 = ADD V662 V660
0xc4d: V664 = M[V663]
0xc50: V665 = 0x0
0xc52: V666 = 0xffffffffffffffffffffffffffffffffffffffff
0xc67: V667 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0xc69: V668 = 0xffffffffffffffffffffffffffffffffffffffff
0xc7e: V669 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xc7f: V670 = EQ V669 0x0
0xc80: V671 = ISZERO V670
0xc81: V672 = 0x650
0xc84: THROWI V671
---
Entry stack: [S8, S7, S6, S5, S4, V653, S2, S1, S0]
Stack pops: 0
Stack additions: [V664, S3, S4]
Exit stack: []

================================

Block 0xc85
[0xc85:0xca3]
---
Predecessors: [0xc42]
Successors: [0xca4]
---
0xc85 DUP2
0xc86 ADDRESS
0xc87 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc9c AND
0xc9d BALANCE
0xc9e LT
0xc9f ISZERO
0xca0 PUSH2 0x60f
0xca3 JUMPI
---
0xc86: V673 = ADDRESS
0xc87: V674 = 0xffffffffffffffffffffffffffffffffffffffff
0xc9c: V675 = AND 0xffffffffffffffffffffffffffffffffffffffff V673
0xc9d: V676 = BALANCE V675
0xc9e: V677 = LT V676 S1
0xc9f: V678 = ISZERO V677
0xca0: V679 = 0x60f
0xca3: THROWI V678
---
Entry stack: [S2, S1, V664]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [S2, S1, V664]

================================

Block 0xca4
[0xca4:0xcdf]
---
Predecessors: [0xc85]
Successors: [0xce0]
---
0xca4 PUSH2 0x868
0xca7 JUMP
0xca8 JUMPDEST
0xca9 DUP1
0xcaa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcbf AND
0xcc0 PUSH3 0x11170
0xcc4 DUP4
0xcc5 PUSH1 0x40
0xcc7 MLOAD
0xcc8 PUSH1 0x0
0xcca PUSH1 0x40
0xccc MLOAD
0xccd DUP1
0xcce DUP4
0xccf SUB
0xcd0 DUP2
0xcd1 DUP6
0xcd2 DUP9
0xcd3 DUP9
0xcd4 CALL
0xcd5 SWAP4
0xcd6 POP
0xcd7 POP
0xcd8 POP
0xcd9 POP
0xcda ISZERO
0xcdb ISZERO
0xcdc PUSH2 0x64b
0xcdf JUMPI
---
0xca4: V680 = 0x868
0xca7: THROW 
0xca8: JUMPDEST 
0xcaa: V681 = 0xffffffffffffffffffffffffffffffffffffffff
0xcbf: V682 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xcc0: V683 = 0x11170
0xcc5: V684 = 0x40
0xcc7: V685 = M[0x40]
0xcc8: V686 = 0x0
0xcca: V687 = 0x40
0xccc: V688 = M[0x40]
0xccf: V689 = SUB V685 V688
0xcd4: V690 = CALL 0x11170 V682 S1 V688 V689 V688 0x0
0xcda: V691 = ISZERO V690
0xcdb: V692 = ISZERO V691
0xcdc: V693 = 0x64b
0xcdf: THROWI V692
---
Entry stack: [S2, S1, V664]
Stack pops: 0
Stack additions: [S0, S1]
Exit stack: []

================================

Block 0xce0
[0xce0:0xd7f]
---
Predecessors: [0xca4]
Successors: [0xd80]
---
0xce0 PUSH2 0x868
0xce3 JUMP
0xce4 JUMPDEST
0xce5 PUSH2 0x7c8
0xce8 JUMP
0xce9 JUMPDEST
0xcea DUP2
0xceb DUP4
0xcec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd01 AND
0xd02 PUSH4 0x70a08231
0xd07 ADDRESS
0xd08 PUSH1 0x40
0xd0a MLOAD
0xd0b DUP3
0xd0c PUSH4 0xffffffff
0xd11 AND
0xd12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xd30 MUL
0xd31 DUP2
0xd32 MSTORE
0xd33 PUSH1 0x4
0xd35 ADD
0xd36 DUP1
0xd37 DUP3
0xd38 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd4d AND
0xd4e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd63 AND
0xd64 DUP2
0xd65 MSTORE
0xd66 PUSH1 0x20
0xd68 ADD
0xd69 SWAP2
0xd6a POP
0xd6b POP
0xd6c PUSH1 0x20
0xd6e PUSH1 0x40
0xd70 MLOAD
0xd71 DUP1
0xd72 DUP4
0xd73 SUB
0xd74 DUP2
0xd75 PUSH1 0x0
0xd77 DUP8
0xd78 DUP1
0xd79 EXTCODESIZE
0xd7a ISZERO
0xd7b ISZERO
0xd7c PUSH2 0x6eb
0xd7f JUMPI
---
0xce0: V694 = 0x868
0xce3: THROW 
0xce4: JUMPDEST 
0xce5: V695 = 0x7c8
0xce8: THROW 
0xce9: JUMPDEST 
0xcec: V696 = 0xffffffffffffffffffffffffffffffffffffffff
0xd01: V697 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xd02: V698 = 0x70a08231
0xd07: V699 = ADDRESS
0xd08: V700 = 0x40
0xd0a: V701 = M[0x40]
0xd0c: V702 = 0xffffffff
0xd11: V703 = AND 0xffffffff 0x70a08231
0xd12: V704 = 0x100000000000000000000000000000000000000000000000000000000
0xd30: V705 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0xd32: M[V701] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xd33: V706 = 0x4
0xd35: V707 = ADD 0x4 V701
0xd38: V708 = 0xffffffffffffffffffffffffffffffffffffffff
0xd4d: V709 = AND 0xffffffffffffffffffffffffffffffffffffffff V699
0xd4e: V710 = 0xffffffffffffffffffffffffffffffffffffffff
0xd63: V711 = AND 0xffffffffffffffffffffffffffffffffffffffff V709
0xd65: M[V707] = V711
0xd66: V712 = 0x20
0xd68: V713 = ADD 0x20 V707
0xd6c: V714 = 0x20
0xd6e: V715 = 0x40
0xd70: V716 = M[0x40]
0xd73: V717 = SUB V713 V716
0xd75: V718 = 0x0
0xd79: V719 = EXTCODESIZE V697
0xd7a: V720 = ISZERO V719
0xd7b: V721 = ISZERO V720
0xd7c: V722 = 0x6eb
0xd7f: THROWI V721
---
Entry stack: [S1, S0]
Stack pops: 0
Stack additions: [V697, 0x0, V716, V717, V716, 0x20, V713, 0x70a08231, V697, S1, S0, S1, S2]
Exit stack: []

================================

Block 0xd80
[0xd80:0xd8c]
---
Predecessors: [0xce0]
Successors: [0xd8d]
---
0xd80 PUSH1 0x0
0xd82 DUP1
0xd83 REVERT
0xd84 JUMPDEST
0xd85 GAS
0xd86 CALL
0xd87 ISZERO
0xd88 ISZERO
0xd89 PUSH2 0x6f8
0xd8c JUMPI
---
0xd80: V723 = 0x0
0xd83: REVERT 0x0 0x0
0xd84: JUMPDEST 
0xd85: V724 = GAS
0xd86: V725 = CALL V724 S0 S1 S2 S3 S4 S5
0xd87: V726 = ISZERO V725
0xd88: V727 = ISZERO V726
0xd89: V728 = 0x6f8
0xd8c: THROWI V727
---
Entry stack: [S12, S11, S10, S9, V697, 0x70a08231, V713, 0x20, V716, V717, V716, 0x0, V697]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd8d
[0xd8d:0xda1]
---
Predecessors: [0xd80]
Successors: [0xda2]
---
0xd8d PUSH1 0x0
0xd8f DUP1
0xd90 REVERT
0xd91 JUMPDEST
0xd92 POP
0xd93 POP
0xd94 POP
0xd95 PUSH1 0x40
0xd97 MLOAD
0xd98 DUP1
0xd99 MLOAD
0xd9a SWAP1
0xd9b POP
0xd9c LT
0xd9d ISZERO
0xd9e PUSH2 0x70d
0xda1 JUMPI
---
0xd8d: V729 = 0x0
0xd90: REVERT 0x0 0x0
0xd91: JUMPDEST 
0xd95: V730 = 0x40
0xd97: V731 = M[0x40]
0xd99: V732 = M[V731]
0xd9c: V733 = LT V732 S3
0xd9d: V734 = ISZERO V733
0xd9e: V735 = 0x70d
0xda1: THROWI V734
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xda2
[0xda2:0xe43]
---
Predecessors: [0xd8d]
Successors: [0xe44]
---
0xda2 PUSH2 0x868
0xda5 JUMP
0xda6 JUMPDEST
0xda7 DUP3
0xda8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdbd AND
0xdbe PUSH4 0xa9059cbb
0xdc3 DUP3
0xdc4 DUP5
0xdc5 PUSH1 0x40
0xdc7 MLOAD
0xdc8 DUP4
0xdc9 PUSH4 0xffffffff
0xdce AND
0xdcf PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xded MUL
0xdee DUP2
0xdef MSTORE
0xdf0 PUSH1 0x4
0xdf2 ADD
0xdf3 DUP1
0xdf4 DUP4
0xdf5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe0a AND
0xe0b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe20 AND
0xe21 DUP2
0xe22 MSTORE
0xe23 PUSH1 0x20
0xe25 ADD
0xe26 DUP3
0xe27 DUP2
0xe28 MSTORE
0xe29 PUSH1 0x20
0xe2b ADD
0xe2c SWAP3
0xe2d POP
0xe2e POP
0xe2f POP
0xe30 PUSH1 0x20
0xe32 PUSH1 0x40
0xe34 MLOAD
0xe35 DUP1
0xe36 DUP4
0xe37 SUB
0xe38 DUP2
0xe39 PUSH1 0x0
0xe3b DUP8
0xe3c DUP1
0xe3d EXTCODESIZE
0xe3e ISZERO
0xe3f ISZERO
0xe40 PUSH2 0x7af
0xe43 JUMPI
---
0xda2: V736 = 0x868
0xda5: THROW 
0xda6: JUMPDEST 
0xda8: V737 = 0xffffffffffffffffffffffffffffffffffffffff
0xdbd: V738 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xdbe: V739 = 0xa9059cbb
0xdc5: V740 = 0x40
0xdc7: V741 = M[0x40]
0xdc9: V742 = 0xffffffff
0xdce: V743 = AND 0xffffffff 0xa9059cbb
0xdcf: V744 = 0x100000000000000000000000000000000000000000000000000000000
0xded: V745 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0xdef: M[V741] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xdf0: V746 = 0x4
0xdf2: V747 = ADD 0x4 V741
0xdf5: V748 = 0xffffffffffffffffffffffffffffffffffffffff
0xe0a: V749 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xe0b: V750 = 0xffffffffffffffffffffffffffffffffffffffff
0xe20: V751 = AND 0xffffffffffffffffffffffffffffffffffffffff V749
0xe22: M[V747] = V751
0xe23: V752 = 0x20
0xe25: V753 = ADD 0x20 V747
0xe28: M[V753] = S1
0xe29: V754 = 0x20
0xe2b: V755 = ADD 0x20 V753
0xe30: V756 = 0x20
0xe32: V757 = 0x40
0xe34: V758 = M[0x40]
0xe37: V759 = SUB V755 V758
0xe39: V760 = 0x0
0xe3d: V761 = EXTCODESIZE V738
0xe3e: V762 = ISZERO V761
0xe3f: V763 = ISZERO V762
0xe40: V764 = 0x7af
0xe43: THROWI V763
---
Entry stack: []
Stack pops: 0
Stack additions: [V738, 0x0, V758, V759, V758, 0x20, V755, 0xa9059cbb, V738, S0, S1, S2]
Exit stack: []

================================

Block 0xe44
[0xe44:0xe50]
---
Predecessors: [0xda2]
Successors: [0xe51]
---
0xe44 PUSH1 0x0
0xe46 DUP1
0xe47 REVERT
0xe48 JUMPDEST
0xe49 GAS
0xe4a CALL
0xe4b ISZERO
0xe4c ISZERO
0xe4d PUSH2 0x7bc
0xe50 JUMPI
---
0xe44: V765 = 0x0
0xe47: REVERT 0x0 0x0
0xe48: JUMPDEST 
0xe49: V766 = GAS
0xe4a: V767 = CALL V766 S0 S1 S2 S3 S4 S5
0xe4b: V768 = ISZERO V767
0xe4c: V769 = ISZERO V768
0xe4d: V770 = 0x7bc
0xe50: THROWI V769
---
Entry stack: [S11, S10, S9, V738, 0xa9059cbb, V755, 0x20, V758, V759, V758, 0x0, V738]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xe51
[0xe51:0xe60]
---
Predecessors: [0xe44]
Successors: [0xe61]
---
0xe51 PUSH1 0x0
0xe53 DUP1
0xe54 REVERT
0xe55 JUMPDEST
0xe56 POP
0xe57 POP
0xe58 POP
0xe59 PUSH1 0x40
0xe5b MLOAD
0xe5c DUP1
0xe5d MLOAD
0xe5e SWAP1
0xe5f POP
0xe60 POP
---
0xe51: V771 = 0x0
0xe54: REVERT 0x0 0x0
0xe55: JUMPDEST 
0xe59: V772 = 0x40
0xe5b: V773 = M[0x40]
0xe5d: V774 = M[V773]
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xe61
[0xe61:0xf00]
---
Predecessors: [0xe51]
Successors: [0xf01]
---
0xe61 JUMPDEST
0xe62 PUSH32 0x3d6fc75d54a2a46de8436bf35964b091f2c69259f993b5b623a97caae4a6865f
0xe83 DUP2
0xe84 DUP4
0xe85 DUP6
0xe86 PUSH1 0x40
0xe88 MLOAD
0xe89 DUP1
0xe8a DUP5
0xe8b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xea0 AND
0xea1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xeb6 AND
0xeb7 DUP2
0xeb8 MSTORE
0xeb9 PUSH1 0x20
0xebb ADD
0xebc DUP4
0xebd DUP2
0xebe MSTORE
0xebf PUSH1 0x20
0xec1 ADD
0xec2 DUP3
0xec3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xed8 AND
0xed9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xeee AND
0xeef DUP2
0xef0 MSTORE
0xef1 PUSH1 0x20
0xef3 ADD
0xef4 SWAP4
0xef5 POP
0xef6 POP
0xef7 POP
0xef8 POP
0xef9 PUSH1 0x40
0xefb MLOAD
0xefc DUP1
0xefd SWAP2
0xefe SUB
0xeff SWAP1
0xf00 LOG1
---
0xe61: JUMPDEST 
0xe62: V775 = 0x3d6fc75d54a2a46de8436bf35964b091f2c69259f993b5b623a97caae4a6865f
0xe86: V776 = 0x40
0xe88: V777 = M[0x40]
0xe8b: V778 = 0xffffffffffffffffffffffffffffffffffffffff
0xea0: V779 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xea1: V780 = 0xffffffffffffffffffffffffffffffffffffffff
0xeb6: V781 = AND 0xffffffffffffffffffffffffffffffffffffffff V779
0xeb8: M[V777] = V781
0xeb9: V782 = 0x20
0xebb: V783 = ADD 0x20 V777
0xebe: M[V783] = S1
0xebf: V784 = 0x20
0xec1: V785 = ADD 0x20 V783
0xec3: V786 = 0xffffffffffffffffffffffffffffffffffffffff
0xed8: V787 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xed9: V788 = 0xffffffffffffffffffffffffffffffffffffffff
0xeee: V789 = AND 0xffffffffffffffffffffffffffffffffffffffff V787
0xef0: M[V785] = V789
0xef1: V790 = 0x20
0xef3: V791 = ADD 0x20 V785
0xef9: V792 = 0x40
0xefb: V793 = M[0x40]
0xefe: V794 = SUB V791 V793
0xf00: LOG V793 V794 0x3d6fc75d54a2a46de8436bf35964b091f2c69259f993b5b623a97caae4a6865f
---
Entry stack: []
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S2, S1, S0]

================================

Block 0xf01
[0xf01:0xf6d]
---
Predecessors: [0xe61]
Successors: [0xf6e]
---
0xf01 JUMPDEST
0xf02 DUP4
0xf03 DUP1
0xf04 PUSH1 0x1
0xf06 ADD
0xf07 SWAP5
0xf08 POP
0xf09 POP
0xf0a PUSH2 0x55f
0xf0d JUMP
0xf0e JUMPDEST
0xf0f POP
0xf10 POP
0xf11 POP
0xf12 POP
0xf13 POP
0xf14 POP
0xf15 POP
0xf16 JUMP
0xf17 JUMPDEST
0xf18 PUSH1 0x0
0xf1a DUP1
0xf1b SWAP1
0xf1c SLOAD
0xf1d SWAP1
0xf1e PUSH2 0x100
0xf21 EXP
0xf22 SWAP1
0xf23 DIV
0xf24 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf39 AND
0xf3a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf4f AND
0xf50 CALLER
0xf51 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf66 AND
0xf67 EQ
0xf68 ISZERO
0xf69 ISZERO
0xf6a PUSH2 0x8d9
0xf6d JUMPI
---
0xf01: JUMPDEST 
0xf04: V795 = 0x1
0xf06: V796 = ADD 0x1 S3
0xf0a: V797 = 0x55f
0xf0d: THROW 
0xf0e: JUMPDEST 
0xf16: JUMP S7
0xf17: JUMPDEST 
0xf18: V798 = 0x0
0xf1c: V799 = S[0x0]
0xf1e: V800 = 0x100
0xf21: V801 = EXP 0x100 0x0
0xf23: V802 = DIV V799 0x1
0xf24: V803 = 0xffffffffffffffffffffffffffffffffffffffff
0xf39: V804 = AND 0xffffffffffffffffffffffffffffffffffffffff V802
0xf3a: V805 = 0xffffffffffffffffffffffffffffffffffffffff
0xf4f: V806 = AND 0xffffffffffffffffffffffffffffffffffffffff V804
0xf50: V807 = CALLER
0xf51: V808 = 0xffffffffffffffffffffffffffffffffffffffff
0xf66: V809 = AND 0xffffffffffffffffffffffffffffffffffffffff V807
0xf67: V810 = EQ V809 V806
0xf68: V811 = ISZERO V810
0xf69: V812 = ISZERO V811
0xf6a: V813 = 0x8d9
0xf6d: THROWI V812
---
Entry stack: [S2, S1, S0]
Stack pops: 8
Stack additions: []
Exit stack: []

================================

Block 0xf6e
[0xf6e:0x107d]
---
Predecessors: [0xf01]
Successors: [0x107e]
---
0xf6e PUSH1 0x0
0xf70 DUP1
0xf71 REVERT
0xf72 JUMPDEST
0xf73 DUP1
0xf74 PUSH1 0x2
0xf76 PUSH1 0x0
0xf78 PUSH2 0x100
0xf7b EXP
0xf7c DUP2
0xf7d SLOAD
0xf7e DUP2
0xf7f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf94 MUL
0xf95 NOT
0xf96 AND
0xf97 SWAP1
0xf98 DUP4
0xf99 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfae AND
0xfaf MUL
0xfb0 OR
0xfb1 SWAP1
0xfb2 SSTORE
0xfb3 POP
0xfb4 POP
0xfb5 JUMP
0xfb6 JUMPDEST
0xfb7 PUSH1 0x0
0xfb9 DUP1
0xfba SWAP1
0xfbb SLOAD
0xfbc SWAP1
0xfbd PUSH2 0x100
0xfc0 EXP
0xfc1 SWAP1
0xfc2 DIV
0xfc3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfd8 AND
0xfd9 DUP2
0xfda JUMP
0xfdb JUMPDEST
0xfdc PUSH1 0x2
0xfde PUSH1 0x0
0xfe0 SWAP1
0xfe1 SLOAD
0xfe2 SWAP1
0xfe3 PUSH2 0x100
0xfe6 EXP
0xfe7 SWAP1
0xfe8 DIV
0xfe9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xffe AND
0xfff DUP2
0x1000 JUMP
0x1001 JUMPDEST
0x1002 PUSH1 0x1
0x1004 PUSH1 0x0
0x1006 SWAP1
0x1007 SLOAD
0x1008 SWAP1
0x1009 PUSH2 0x100
0x100c EXP
0x100d SWAP1
0x100e DIV
0x100f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1024 AND
0x1025 DUP2
0x1026 JUMP
0x1027 JUMPDEST
0x1028 PUSH1 0x0
0x102a DUP1
0x102b SWAP1
0x102c SLOAD
0x102d SWAP1
0x102e PUSH2 0x100
0x1031 EXP
0x1032 SWAP1
0x1033 DIV
0x1034 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1049 AND
0x104a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x105f AND
0x1060 CALLER
0x1061 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1076 AND
0x1077 EQ
0x1078 ISZERO
0x1079 ISZERO
0x107a PUSH2 0x9e9
0x107d JUMPI
---
0xf6e: V814 = 0x0
0xf71: REVERT 0x0 0x0
0xf72: JUMPDEST 
0xf74: V815 = 0x2
0xf76: V816 = 0x0
0xf78: V817 = 0x100
0xf7b: V818 = EXP 0x100 0x0
0xf7d: V819 = S[0x2]
0xf7f: V820 = 0xffffffffffffffffffffffffffffffffffffffff
0xf94: V821 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xf95: V822 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xf96: V823 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V819
0xf99: V824 = 0xffffffffffffffffffffffffffffffffffffffff
0xfae: V825 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xfaf: V826 = MUL V825 0x1
0xfb0: V827 = OR V826 V823
0xfb2: S[0x2] = V827
0xfb5: JUMP S1
0xfb6: JUMPDEST 
0xfb7: V828 = 0x0
0xfbb: V829 = S[0x0]
0xfbd: V830 = 0x100
0xfc0: V831 = EXP 0x100 0x0
0xfc2: V832 = DIV V829 0x1
0xfc3: V833 = 0xffffffffffffffffffffffffffffffffffffffff
0xfd8: V834 = AND 0xffffffffffffffffffffffffffffffffffffffff V832
0xfda: JUMP S0
0xfdb: JUMPDEST 
0xfdc: V835 = 0x2
0xfde: V836 = 0x0
0xfe1: V837 = S[0x2]
0xfe3: V838 = 0x100
0xfe6: V839 = EXP 0x100 0x0
0xfe8: V840 = DIV V837 0x1
0xfe9: V841 = 0xffffffffffffffffffffffffffffffffffffffff
0xffe: V842 = AND 0xffffffffffffffffffffffffffffffffffffffff V840
0x1000: JUMP S0
0x1001: JUMPDEST 
0x1002: V843 = 0x1
0x1004: V844 = 0x0
0x1007: V845 = S[0x1]
0x1009: V846 = 0x100
0x100c: V847 = EXP 0x100 0x0
0x100e: V848 = DIV V845 0x1
0x100f: V849 = 0xffffffffffffffffffffffffffffffffffffffff
0x1024: V850 = AND 0xffffffffffffffffffffffffffffffffffffffff V848
0x1026: JUMP S0
0x1027: JUMPDEST 
0x1028: V851 = 0x0
0x102c: V852 = S[0x0]
0x102e: V853 = 0x100
0x1031: V854 = EXP 0x100 0x0
0x1033: V855 = DIV V852 0x1
0x1034: V856 = 0xffffffffffffffffffffffffffffffffffffffff
0x1049: V857 = AND 0xffffffffffffffffffffffffffffffffffffffff V855
0x104a: V858 = 0xffffffffffffffffffffffffffffffffffffffff
0x105f: V859 = AND 0xffffffffffffffffffffffffffffffffffffffff V857
0x1060: V860 = CALLER
0x1061: V861 = 0xffffffffffffffffffffffffffffffffffffffff
0x1076: V862 = AND 0xffffffffffffffffffffffffffffffffffffffff V860
0x1077: V863 = EQ V862 V859
0x1078: V864 = ISZERO V863
0x1079: V865 = ISZERO V864
0x107a: V866 = 0x9e9
0x107d: THROWI V865
---
Entry stack: []
Stack pops: 0
Stack additions: [V834, S0, V842, S0, V850, S0]
Exit stack: []

================================

Block 0x107e
[0x107e:0x10f8]
---
Predecessors: [0xf6e]
Successors: []
---
0x107e PUSH1 0x0
0x1080 DUP1
0x1081 REVERT
0x1082 JUMPDEST
0x1083 DUP1
0x1084 PUSH1 0x1
0x1086 PUSH1 0x0
0x1088 PUSH2 0x100
0x108b EXP
0x108c DUP2
0x108d SLOAD
0x108e DUP2
0x108f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10a4 MUL
0x10a5 NOT
0x10a6 AND
0x10a7 SWAP1
0x10a8 DUP4
0x10a9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10be AND
0x10bf MUL
0x10c0 OR
0x10c1 SWAP1
0x10c2 SSTORE
0x10c3 POP
0x10c4 POP
0x10c5 JUMP
0x10c6 STOP
0x10c7 LOG1
0x10c8 PUSH6 0x627a7a723058
0x10cf SHA3
0x10d0 DUP8
0x10d1 PUSH1 0xe2
0x10d3 MISSING 0xf7
0x10d4 LOG1
0x10d5 RETURNDATACOPY
0x10d6 MSIZE
0x10d7 CREATE2
0x10d8 DUP6
0x10d9 MISSING 0x4b
0x10da CREATE2
0x10db EXTCODESIZE
0x10dc SUB
0x10dd MISSING 0xd3
0x10de MLOAD
0x10df DUP5
0x10e0 PUSH24 0xdc611c46faaebe85c514f2922c5d5f0029
---
0x107e: V867 = 0x0
0x1081: REVERT 0x0 0x0
0x1082: JUMPDEST 
0x1084: V868 = 0x1
0x1086: V869 = 0x0
0x1088: V870 = 0x100
0x108b: V871 = EXP 0x100 0x0
0x108d: V872 = S[0x1]
0x108f: V873 = 0xffffffffffffffffffffffffffffffffffffffff
0x10a4: V874 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x10a5: V875 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x10a6: V876 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V872
0x10a9: V877 = 0xffffffffffffffffffffffffffffffffffffffff
0x10be: V878 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x10bf: V879 = MUL V878 0x1
0x10c0: V880 = OR V879 V876
0x10c2: S[0x1] = V880
0x10c5: JUMP S1
0x10c6: STOP 
0x10c7: LOG S0 S1 S2
0x10c8: V881 = 0x627a7a723058
0x10cf: V882 = SHA3 0x627a7a723058 S3
0x10d1: V883 = 0xe2
0x10d3: MISSING 0xf7
0x10d4: LOG S0 S1 S2
0x10d5: RETURNDATACOPY S3 S4 S5
0x10d6: V884 = MSIZE
0x10d7: V885 = CREATE2 V884 S6 S7 S8
0x10d9: MISSING 0x4b
0x10da: V886 = CREATE2 S0 S1 S2 S3
0x10db: V887 = EXTCODESIZE V886
0x10dc: V888 = SUB V887 S4
0x10dd: MISSING 0xd3
0x10de: V889 = M[S0]
0x10e0: V890 = 0xdc611c46faaebe85c514f2922c5d5f0029
---
Entry stack: []
Stack pops: 0
Stack additions: [0xe2, S10, V882, S4, S5, S6, S7, S8, S9, S10, S13, V885, S9, S10, S11, S12, S13, V888, 0xdc611c46faaebe85c514f2922c5d5f0029, S4, V889, S1, S2, S3, S4]
Exit stack: []

================================

Function 0:
Public function signature: 0x4e71e0c8
Entry block: 0x67
Exit block: 0x7a
Body: 0x67, 0x6e, 0x72, 0x7a, 0x15f, 0x1b7, 0x1bb

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0x7c
Exit block: 0x8f
Body: 0x7c, 0x83, 0x87, 0x8f, 0x2fe

Function 2:
Public function signature: 0xe30c3978
Entry block: 0xd1
Exit block: 0xe4
Body: 0xd1, 0xd8, 0xdc, 0xe4, 0x323

Function 3:
Public function signature: 0xf2fde38b
Entry block: 0x126
Exit block: 0x15d
Body: 0x126, 0x12d, 0x131, 0x15d, 0x349, 0x3a0, 0x3a4

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x62
Body: 0x62

