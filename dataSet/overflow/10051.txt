Block 0x0
[0x0:0xb]
---
Predecessors: []
Successors: [0xc, 0x3f]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH1 0x3f
0xb JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x3f
0xb: JUMPI 0x3f V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc
[0xc:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x44]
---
0xc PUSH1 0x0
0xe CALLDATALOAD
0xf PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2d SWAP1
0x2e DIV
0x2f PUSH4 0xffffffff
0x34 AND
0x35 DUP1
0x36 PUSH4 0x8da5cb5b
0x3b EQ
0x3c PUSH1 0x44
0x3e JUMPI
---
0xc: V6 = 0x0
0xe: V7 = CALLDATALOAD 0x0
0xf: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x2f: V10 = 0xffffffff
0x34: V11 = AND 0xffffffff V9
0x36: V12 = 0x8da5cb5b
0x3b: V13 = EQ 0x8da5cb5b V11
0x3c: V14 = 0x44
0x3e: JUMPI 0x44 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x3f
[0x3f:0x43]
---
Predecessors: [0x0, 0xc]
Successors: []
---
0x3f JUMPDEST
0x40 PUSH1 0x0
0x42 DUP1
0x43 REVERT
---
0x3f: JUMPDEST 
0x40: V15 = 0x0
0x43: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x44
[0x44:0x4a]
---
Predecessors: [0xc]
Successors: [0x4b, 0x4f]
---
0x44 JUMPDEST
0x45 CALLVALUE
0x46 DUP1
0x47 ISZERO
0x48 PUSH1 0x4f
0x4a JUMPI
---
0x44: JUMPDEST 
0x45: V16 = CALLVALUE
0x47: V17 = ISZERO V16
0x48: V18 = 0x4f
0x4a: JUMPI 0x4f V17
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V16]
Exit stack: [V11, V16]

================================

Block 0x4b
[0x4b:0x4e]
---
Predecessors: [0x44]
Successors: []
---
0x4b PUSH1 0x0
0x4d DUP1
0x4e REVERT
---
0x4b: V19 = 0x0
0x4e: REVERT 0x0 0x0
---
Entry stack: [V11, V16]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V16]

================================

Block 0x4f
[0x4f:0x55]
---
Predecessors: [0x44]
Successors: [0x98]
---
0x4f JUMPDEST
0x50 POP
0x51 PUSH1 0x56
0x53 PUSH1 0x98
0x55 JUMP
---
0x4f: JUMPDEST 
0x51: V20 = 0x56
0x53: V21 = 0x98
0x55: JUMP 0x98
---
Entry stack: [V11, V16]
Stack pops: 1
Stack additions: [0x56]
Exit stack: [V11, 0x56]

================================

Block 0x56
[0x56:0x97]
---
Predecessors: [0x98]
Successors: []
---
0x56 JUMPDEST
0x57 PUSH1 0x40
0x59 MLOAD
0x5a DUP1
0x5b DUP3
0x5c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x71 AND
0x72 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x87 AND
0x88 DUP2
0x89 MSTORE
0x8a PUSH1 0x20
0x8c ADD
0x8d SWAP2
0x8e POP
0x8f POP
0x90 PUSH1 0x40
0x92 MLOAD
0x93 DUP1
0x94 SWAP2
0x95 SUB
0x96 SWAP1
0x97 RETURN
---
0x56: JUMPDEST 
0x57: V22 = 0x40
0x59: V23 = M[0x40]
0x5c: V24 = 0xffffffffffffffffffffffffffffffffffffffff
0x71: V25 = AND 0xffffffffffffffffffffffffffffffffffffffff V39
0x72: V26 = 0xffffffffffffffffffffffffffffffffffffffff
0x87: V27 = AND 0xffffffffffffffffffffffffffffffffffffffff V25
0x89: M[V23] = V27
0x8a: V28 = 0x20
0x8c: V29 = ADD 0x20 V23
0x90: V30 = 0x40
0x92: V31 = M[0x40]
0x95: V32 = SUB V29 V31
0x97: RETURN V31 V32
---
Entry stack: [V11, 0x56, V39]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x56]

================================

Block 0x98
[0x98:0xbc]
---
Predecessors: [0x4f]
Successors: [0x56]
---
0x98 JUMPDEST
0x99 PUSH1 0x0
0x9b DUP1
0x9c SWAP1
0x9d SLOAD
0x9e SWAP1
0x9f PUSH2 0x100
0xa2 EXP
0xa3 SWAP1
0xa4 DIV
0xa5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xba AND
0xbb DUP2
0xbc JUMP
---
0x98: JUMPDEST 
0x99: V33 = 0x0
0x9d: V34 = S[0x0]
0x9f: V35 = 0x100
0xa2: V36 = EXP 0x100 0x0
0xa4: V37 = DIV V34 0x1
0xa5: V38 = 0xffffffffffffffffffffffffffffffffffffffff
0xba: V39 = AND 0xffffffffffffffffffffffffffffffffffffffff V37
0xbc: JUMP 0x56
---
Entry stack: [V11, 0x56]
Stack pops: 1
Stack additions: [S0, V39]
Exit stack: [V11, 0x56, V39]

================================

Block 0xbd
[0xbd:0xf5]
---
Predecessors: []
Successors: [0xf6]
---
0xbd STOP
0xbe LOG1
0xbf PUSH6 0x627a7a723058
0xc6 SHA3
0xc7 GASLIMIT
0xc8 MISSING 0xc0
0xc9 MISSING 0xbe
0xca PUSH6 0xdfdf8625304d
0xd1 SWAP13
0xd2 MISSING 0xeb
0xd3 SWAP16
0xd4 MISSING 0x21
0xd5 MISSING 0xb3
0xd6 MISSING 0xd6
0xd7 MISSING 0xdb
0xd8 MISSING 0xcb
0xd9 PUSH4 0xe9b74ad8
0xde SHA3
0xdf MISSING 0xbd
0xe0 SWAP5
0xe1 MISSING 0xe5
0xe2 RETURNDATACOPY
0xe3 MISSING 0xb4
0xe4 RETURNDATACOPY
0xe5 DUP15
0xe6 MISSING 0xa7
0xe7 STOP
0xe8 MISSING 0x29
0xe9 PUSH1 0x80
0xeb PUSH1 0x40
0xed MSTORE
0xee PUSH1 0x4
0xf0 CALLDATASIZE
0xf1 LT
0xf2 PUSH2 0xaf
0xf5 JUMPI
---
0xbd: STOP 
0xbe: LOG S0 S1 S2
0xbf: V40 = 0x627a7a723058
0xc6: V41 = SHA3 0x627a7a723058 S3
0xc7: V42 = GASLIMIT
0xc8: MISSING 0xc0
0xc9: MISSING 0xbe
0xca: V43 = 0xdfdf8625304d
0xd2: MISSING 0xeb
0xd4: MISSING 0x21
0xd5: MISSING 0xb3
0xd6: MISSING 0xd6
0xd7: MISSING 0xdb
0xd8: MISSING 0xcb
0xd9: V44 = 0xe9b74ad8
0xde: V45 = SHA3 0xe9b74ad8 S0
0xdf: MISSING 0xbd
0xe1: MISSING 0xe5
0xe2: RETURNDATACOPY S0 S1 S2
0xe3: MISSING 0xb4
0xe4: RETURNDATACOPY S0 S1 S2
0xe6: MISSING 0xa7
0xe7: STOP 
0xe8: MISSING 0x29
0xe9: V46 = 0x80
0xeb: V47 = 0x40
0xed: M[0x40] = 0x80
0xee: V48 = 0x4
0xf0: V49 = CALLDATASIZE
0xf1: V50 = LT V49 0x4
0xf2: V51 = 0xaf
0xf5: THROWI V50
---
Entry stack: []
Stack pops: 0
Stack additions: [V42, V41, S12, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, 0xdfdf8625304d, S16, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S0, V45, S5, S1, S2, S3, S4, S0, S17, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17]
Exit stack: []

================================

Block 0xf6
[0xf6:0x129]
---
Predecessors: [0xbd]
Successors: [0x12a]
---
0xf6 PUSH1 0x0
0xf8 CALLDATALOAD
0xf9 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x117 SWAP1
0x118 DIV
0x119 PUSH4 0xffffffff
0x11e AND
0x11f DUP1
0x120 PUSH4 0x38af3eed
0x125 EQ
0x126 PUSH2 0x284
0x129 JUMPI
---
0xf6: V52 = 0x0
0xf8: V53 = CALLDATALOAD 0x0
0xf9: V54 = 0x100000000000000000000000000000000000000000000000000000000
0x118: V55 = DIV V53 0x100000000000000000000000000000000000000000000000000000000
0x119: V56 = 0xffffffff
0x11e: V57 = AND 0xffffffff V55
0x120: V58 = 0x38af3eed
0x125: V59 = EQ 0x38af3eed V57
0x126: V60 = 0x284
0x129: THROWI V59
---
Entry stack: []
Stack pops: 0
Stack additions: [V57]
Exit stack: [V57]

================================

Block 0x12a
[0x12a:0x134]
---
Predecessors: [0xf6]
Successors: [0x135]
---
0x12a DUP1
0x12b PUSH4 0x56238b02
0x130 EQ
0x131 PUSH2 0x2db
0x134 JUMPI
---
0x12b: V61 = 0x56238b02
0x130: V62 = EQ 0x56238b02 V57
0x131: V63 = 0x2db
0x134: THROWI V62
---
Entry stack: [V57]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V57]

================================

Block 0x135
[0x135:0x13f]
---
Predecessors: [0x12a]
Successors: [0x140]
---
0x135 DUP1
0x136 PUSH4 0x69bb4dc2
0x13b EQ
0x13c PUSH2 0x308
0x13f JUMPI
---
0x136: V64 = 0x69bb4dc2
0x13b: V65 = EQ 0x69bb4dc2 V57
0x13c: V66 = 0x308
0x13f: THROWI V65
---
Entry stack: [V57]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V57]

================================

Block 0x140
[0x140:0x14a]
---
Predecessors: [0x135]
Successors: [0x14b]
---
0x140 DUP1
0x141 PUSH4 0x6e66f6e9
0x146 EQ
0x147 PUSH2 0x333
0x14a JUMPI
---
0x141: V67 = 0x6e66f6e9
0x146: V68 = EQ 0x6e66f6e9 V57
0x147: V69 = 0x333
0x14a: THROWI V68
---
Entry stack: [V57]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V57]

================================

Block 0x14b
[0x14b:0x155]
---
Predecessors: [0x140]
Successors: [0x156]
---
0x14b DUP1
0x14c PUSH4 0x70a08231
0x151 EQ
0x152 PUSH2 0x38a
0x155 JUMPI
---
0x14c: V70 = 0x70a08231
0x151: V71 = EQ 0x70a08231 V57
0x152: V72 = 0x38a
0x155: THROWI V71
---
Entry stack: [V57]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V57]

================================

Block 0x156
[0x156:0x160]
---
Predecessors: [0x14b]
Successors: [0x161]
---
0x156 DUP1
0x157 PUSH4 0x754b997f
0x15c EQ
0x15d PUSH2 0x3e1
0x160 JUMPI
---
0x157: V73 = 0x754b997f
0x15c: V74 = EQ 0x754b997f V57
0x15d: V75 = 0x3e1
0x160: THROWI V74
---
Entry stack: [V57]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V57]

================================

Block 0x161
[0x161:0x16b]
---
Predecessors: [0x156]
Successors: [0x16c]
---
0x161 DUP1
0x162 PUSH4 0x8da5cb5b
0x167 EQ
0x168 PUSH2 0x42e
0x16b JUMPI
---
0x162: V76 = 0x8da5cb5b
0x167: V77 = EQ 0x8da5cb5b V57
0x168: V78 = 0x42e
0x16b: THROWI V77
---
Entry stack: [V57]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V57]

================================

Block 0x16c
[0x16c:0x176]
---
Predecessors: [0x161]
Successors: [0x177]
---
0x16c DUP1
0x16d PUSH4 0xa7292c74
0x172 EQ
0x173 PUSH2 0x485
0x176 JUMPI
---
0x16d: V79 = 0xa7292c74
0x172: V80 = EQ 0xa7292c74 V57
0x173: V81 = 0x485
0x176: THROWI V80
---
Entry stack: [V57]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V57]

================================

Block 0x177
[0x177:0x181]
---
Predecessors: [0x16c]
Successors: [0x182]
---
0x177 DUP1
0x178 PUSH4 0xba3f78ae
0x17d EQ
0x17e PUSH2 0x4b0
0x181 JUMPI
---
0x178: V82 = 0xba3f78ae
0x17d: V83 = EQ 0xba3f78ae V57
0x17e: V84 = 0x4b0
0x181: THROWI V83
---
Entry stack: [V57]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V57]

================================

Block 0x182
[0x182:0x18c]
---
Predecessors: [0x177]
Successors: [0x18d]
---
0x182 DUP1
0x183 PUSH4 0xd8f306a1
0x188 EQ
0x189 PUSH2 0x4fd
0x18c JUMPI
---
0x183: V85 = 0xd8f306a1
0x188: V86 = EQ 0xd8f306a1 V57
0x189: V87 = 0x4fd
0x18c: THROWI V86
---
Entry stack: [V57]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V57]

================================

Block 0x18d
[0x18d:0x197]
---
Predecessors: [0x182]
Successors: [0x198]
---
0x18d DUP1
0x18e PUSH4 0xde6ef007
0x193 EQ
0x194 PUSH2 0x52a
0x197 JUMPI
---
0x18e: V88 = 0xde6ef007
0x193: V89 = EQ 0xde6ef007 V57
0x194: V90 = 0x52a
0x197: THROWI V89
---
Entry stack: [V57]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V57]

================================

Block 0x198
[0x198:0x1b1]
---
Predecessors: [0x18d]
Successors: [0x1b2]
---
0x198 JUMPDEST
0x199 PUSH1 0x0
0x19b DUP1
0x19c CALLVALUE
0x19d SWAP2
0x19e POP
0x19f PUSH1 0x2
0x1a1 SLOAD
0x1a2 DUP3
0x1a3 MUL
0x1a4 SWAP1
0x1a5 POP
0x1a6 DUP2
0x1a7 PUSH1 0x4
0x1a9 SLOAD
0x1aa LT
0x1ab ISZERO
0x1ac ISZERO
0x1ad ISZERO
0x1ae PUSH2 0xcd
0x1b1 JUMPI
---
0x198: JUMPDEST 
0x199: V91 = 0x0
0x19c: V92 = CALLVALUE
0x19f: V93 = 0x2
0x1a1: V94 = S[0x2]
0x1a3: V95 = MUL V92 V94
0x1a7: V96 = 0x4
0x1a9: V97 = S[0x4]
0x1aa: V98 = LT V97 V92
0x1ab: V99 = ISZERO V98
0x1ac: V100 = ISZERO V99
0x1ad: V101 = ISZERO V100
0x1ae: V102 = 0xcd
0x1b1: THROWI V101
---
Entry stack: [V57]
Stack pops: 0
Stack additions: [V92, V95]
Exit stack: [V57, V92, V95]

================================

Block 0x1b2
[0x1b2:0x2e3]
---
Predecessors: [0x198]
Successors: [0x2e4]
---
0x1b2 PUSH1 0x0
0x1b4 DUP1
0x1b5 REVERT
0x1b6 JUMPDEST
0x1b7 DUP2
0x1b8 PUSH1 0x6
0x1ba PUSH1 0x0
0x1bc CALLER
0x1bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d2 AND
0x1d3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e8 AND
0x1e9 DUP2
0x1ea MSTORE
0x1eb PUSH1 0x20
0x1ed ADD
0x1ee SWAP1
0x1ef DUP2
0x1f0 MSTORE
0x1f1 PUSH1 0x20
0x1f3 ADD
0x1f4 PUSH1 0x0
0x1f6 SHA3
0x1f7 PUSH1 0x0
0x1f9 DUP3
0x1fa DUP3
0x1fb SLOAD
0x1fc ADD
0x1fd SWAP3
0x1fe POP
0x1ff POP
0x200 DUP2
0x201 SWAP1
0x202 SSTORE
0x203 POP
0x204 DUP1
0x205 PUSH1 0x4
0x207 PUSH1 0x0
0x209 DUP3
0x20a DUP3
0x20b SLOAD
0x20c SUB
0x20d SWAP3
0x20e POP
0x20f POP
0x210 DUP2
0x211 SWAP1
0x212 SSTORE
0x213 POP
0x214 DUP2
0x215 PUSH1 0x3
0x217 PUSH1 0x0
0x219 DUP3
0x21a DUP3
0x21b SLOAD
0x21c ADD
0x21d SWAP3
0x21e POP
0x21f POP
0x220 DUP2
0x221 SWAP1
0x222 SSTORE
0x223 POP
0x224 PUSH1 0x5
0x226 PUSH1 0x0
0x228 SWAP1
0x229 SLOAD
0x22a SWAP1
0x22b PUSH2 0x100
0x22e EXP
0x22f SWAP1
0x230 DIV
0x231 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x246 AND
0x247 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x25c AND
0x25d PUSH4 0xa9059cbb
0x262 CALLER
0x263 DUP4
0x264 PUSH1 0x40
0x266 MLOAD
0x267 DUP4
0x268 PUSH4 0xffffffff
0x26d AND
0x26e PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x28c MUL
0x28d DUP2
0x28e MSTORE
0x28f PUSH1 0x4
0x291 ADD
0x292 DUP1
0x293 DUP4
0x294 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a9 AND
0x2aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2bf AND
0x2c0 DUP2
0x2c1 MSTORE
0x2c2 PUSH1 0x20
0x2c4 ADD
0x2c5 DUP3
0x2c6 DUP2
0x2c7 MSTORE
0x2c8 PUSH1 0x20
0x2ca ADD
0x2cb SWAP3
0x2cc POP
0x2cd POP
0x2ce POP
0x2cf PUSH1 0x0
0x2d1 PUSH1 0x40
0x2d3 MLOAD
0x2d4 DUP1
0x2d5 DUP4
0x2d6 SUB
0x2d7 DUP2
0x2d8 PUSH1 0x0
0x2da DUP8
0x2db DUP1
0x2dc EXTCODESIZE
0x2dd ISZERO
0x2de DUP1
0x2df ISZERO
0x2e0 PUSH2 0x1ff
0x2e3 JUMPI
---
0x1b2: V103 = 0x0
0x1b5: REVERT 0x0 0x0
0x1b6: JUMPDEST 
0x1b8: V104 = 0x6
0x1ba: V105 = 0x0
0x1bc: V106 = CALLER
0x1bd: V107 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d2: V108 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x1d3: V109 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e8: V110 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x1ea: M[0x0] = V110
0x1eb: V111 = 0x20
0x1ed: V112 = ADD 0x20 0x0
0x1f0: M[0x20] = 0x6
0x1f1: V113 = 0x20
0x1f3: V114 = ADD 0x20 0x20
0x1f4: V115 = 0x0
0x1f6: V116 = SHA3 0x0 0x40
0x1f7: V117 = 0x0
0x1fb: V118 = S[V116]
0x1fc: V119 = ADD V118 S1
0x202: S[V116] = V119
0x205: V120 = 0x4
0x207: V121 = 0x0
0x20b: V122 = S[0x4]
0x20c: V123 = SUB V122 S0
0x212: S[0x4] = V123
0x215: V124 = 0x3
0x217: V125 = 0x0
0x21b: V126 = S[0x3]
0x21c: V127 = ADD V126 S1
0x222: S[0x3] = V127
0x224: V128 = 0x5
0x226: V129 = 0x0
0x229: V130 = S[0x5]
0x22b: V131 = 0x100
0x22e: V132 = EXP 0x100 0x0
0x230: V133 = DIV V130 0x1
0x231: V134 = 0xffffffffffffffffffffffffffffffffffffffff
0x246: V135 = AND 0xffffffffffffffffffffffffffffffffffffffff V133
0x247: V136 = 0xffffffffffffffffffffffffffffffffffffffff
0x25c: V137 = AND 0xffffffffffffffffffffffffffffffffffffffff V135
0x25d: V138 = 0xa9059cbb
0x262: V139 = CALLER
0x264: V140 = 0x40
0x266: V141 = M[0x40]
0x268: V142 = 0xffffffff
0x26d: V143 = AND 0xffffffff 0xa9059cbb
0x26e: V144 = 0x100000000000000000000000000000000000000000000000000000000
0x28c: V145 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x28e: M[V141] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x28f: V146 = 0x4
0x291: V147 = ADD 0x4 V141
0x294: V148 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a9: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x2aa: V150 = 0xffffffffffffffffffffffffffffffffffffffff
0x2bf: V151 = AND 0xffffffffffffffffffffffffffffffffffffffff V149
0x2c1: M[V147] = V151
0x2c2: V152 = 0x20
0x2c4: V153 = ADD 0x20 V147
0x2c7: M[V153] = S0
0x2c8: V154 = 0x20
0x2ca: V155 = ADD 0x20 V153
0x2cf: V156 = 0x0
0x2d1: V157 = 0x40
0x2d3: V158 = M[0x40]
0x2d6: V159 = SUB V155 V158
0x2d8: V160 = 0x0
0x2dc: V161 = EXTCODESIZE V137
0x2dd: V162 = ISZERO V161
0x2df: V163 = ISZERO V162
0x2e0: V164 = 0x1ff
0x2e3: THROWI V163
---
Entry stack: [V57, V92, V95]
Stack pops: 0
Stack additions: [V162, V137, 0x0, V158, V159, V158, 0x0, V155, 0xa9059cbb, V137, S0, S1]
Exit stack: []

================================

Block 0x2e4
[0x2e4:0x2f2]
---
Predecessors: [0x1b2]
Successors: [0x2f3]
---
0x2e4 PUSH1 0x0
0x2e6 DUP1
0x2e7 REVERT
0x2e8 JUMPDEST
0x2e9 POP
0x2ea GAS
0x2eb CALL
0x2ec ISZERO
0x2ed DUP1
0x2ee ISZERO
0x2ef PUSH2 0x213
0x2f2 JUMPI
---
0x2e4: V165 = 0x0
0x2e7: REVERT 0x0 0x0
0x2e8: JUMPDEST 
0x2ea: V166 = GAS
0x2eb: V167 = CALL V166 S1 S2 S3 S4 S5 S6
0x2ec: V168 = ISZERO V167
0x2ee: V169 = ISZERO V168
0x2ef: V170 = 0x213
0x2f2: THROWI V169
---
Entry stack: [S11, S10, V137, 0xa9059cbb, V155, 0x0, V158, V159, V158, 0x0, V137, V162]
Stack pops: 0
Stack additions: [V168]
Exit stack: []

================================

Block 0x2f3
[0x2f3:0x35e]
---
Predecessors: [0x2e4]
Successors: [0x35f]
---
0x2f3 RETURNDATASIZE
0x2f4 PUSH1 0x0
0x2f6 DUP1
0x2f7 RETURNDATACOPY
0x2f8 RETURNDATASIZE
0x2f9 PUSH1 0x0
0x2fb REVERT
0x2fc JUMPDEST
0x2fd POP
0x2fe POP
0x2ff POP
0x300 POP
0x301 PUSH1 0x1
0x303 PUSH1 0x0
0x305 SWAP1
0x306 SLOAD
0x307 SWAP1
0x308 PUSH2 0x100
0x30b EXP
0x30c SWAP1
0x30d DIV
0x30e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x323 AND
0x324 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x339 AND
0x33a PUSH2 0x8fc
0x33d DUP4
0x33e SWAP1
0x33f DUP2
0x340 ISZERO
0x341 MUL
0x342 SWAP1
0x343 PUSH1 0x40
0x345 MLOAD
0x346 PUSH1 0x0
0x348 PUSH1 0x40
0x34a MLOAD
0x34b DUP1
0x34c DUP4
0x34d SUB
0x34e DUP2
0x34f DUP6
0x350 DUP9
0x351 DUP9
0x352 CALL
0x353 SWAP4
0x354 POP
0x355 POP
0x356 POP
0x357 POP
0x358 ISZERO
0x359 DUP1
0x35a ISZERO
0x35b PUSH2 0x27f
0x35e JUMPI
---
0x2f3: V171 = RETURNDATASIZE
0x2f4: V172 = 0x0
0x2f7: RETURNDATACOPY 0x0 0x0 V171
0x2f8: V173 = RETURNDATASIZE
0x2f9: V174 = 0x0
0x2fb: REVERT 0x0 V173
0x2fc: JUMPDEST 
0x301: V175 = 0x1
0x303: V176 = 0x0
0x306: V177 = S[0x1]
0x308: V178 = 0x100
0x30b: V179 = EXP 0x100 0x0
0x30d: V180 = DIV V177 0x1
0x30e: V181 = 0xffffffffffffffffffffffffffffffffffffffff
0x323: V182 = AND 0xffffffffffffffffffffffffffffffffffffffff V180
0x324: V183 = 0xffffffffffffffffffffffffffffffffffffffff
0x339: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V182
0x33a: V185 = 0x8fc
0x340: V186 = ISZERO S5
0x341: V187 = MUL V186 0x8fc
0x343: V188 = 0x40
0x345: V189 = M[0x40]
0x346: V190 = 0x0
0x348: V191 = 0x40
0x34a: V192 = M[0x40]
0x34d: V193 = SUB V189 V192
0x352: V194 = CALL V187 V184 S5 V192 V193 V192 0x0
0x358: V195 = ISZERO V194
0x35a: V196 = ISZERO V195
0x35b: V197 = 0x27f
0x35e: THROWI V196
---
Entry stack: [V168]
Stack pops: 0
Stack additions: [V195, S4, S5]
Exit stack: []

================================

Block 0x35f
[0x35f:0x374]
---
Predecessors: [0x2f3]
Successors: [0x375]
---
0x35f RETURNDATASIZE
0x360 PUSH1 0x0
0x362 DUP1
0x363 RETURNDATACOPY
0x364 RETURNDATASIZE
0x365 PUSH1 0x0
0x367 REVERT
0x368 JUMPDEST
0x369 POP
0x36a POP
0x36b POP
0x36c STOP
0x36d JUMPDEST
0x36e CALLVALUE
0x36f DUP1
0x370 ISZERO
0x371 PUSH2 0x290
0x374 JUMPI
---
0x35f: V198 = RETURNDATASIZE
0x360: V199 = 0x0
0x363: RETURNDATACOPY 0x0 0x0 V198
0x364: V200 = RETURNDATASIZE
0x365: V201 = 0x0
0x367: REVERT 0x0 V200
0x368: JUMPDEST 
0x36c: STOP 
0x36d: JUMPDEST 
0x36e: V202 = CALLVALUE
0x370: V203 = ISZERO V202
0x371: V204 = 0x290
0x374: THROWI V203
---
Entry stack: [S2, S1, V195]
Stack pops: 0
Stack additions: [V202]
Exit stack: []

================================

Block 0x375
[0x375:0x3cb]
---
Predecessors: [0x35f]
Successors: [0x3cc]
---
0x375 PUSH1 0x0
0x377 DUP1
0x378 REVERT
0x379 JUMPDEST
0x37a POP
0x37b PUSH2 0x299
0x37e PUSH2 0x555
0x381 JUMP
0x382 JUMPDEST
0x383 PUSH1 0x40
0x385 MLOAD
0x386 DUP1
0x387 DUP3
0x388 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x39d AND
0x39e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b3 AND
0x3b4 DUP2
0x3b5 MSTORE
0x3b6 PUSH1 0x20
0x3b8 ADD
0x3b9 SWAP2
0x3ba POP
0x3bb POP
0x3bc PUSH1 0x40
0x3be MLOAD
0x3bf DUP1
0x3c0 SWAP2
0x3c1 SUB
0x3c2 SWAP1
0x3c3 RETURN
0x3c4 JUMPDEST
0x3c5 CALLVALUE
0x3c6 DUP1
0x3c7 ISZERO
0x3c8 PUSH2 0x2e7
0x3cb JUMPI
---
0x375: V205 = 0x0
0x378: REVERT 0x0 0x0
0x379: JUMPDEST 
0x37b: V206 = 0x299
0x37e: V207 = 0x555
0x381: THROW 
0x382: JUMPDEST 
0x383: V208 = 0x40
0x385: V209 = M[0x40]
0x388: V210 = 0xffffffffffffffffffffffffffffffffffffffff
0x39d: V211 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x39e: V212 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b3: V213 = AND 0xffffffffffffffffffffffffffffffffffffffff V211
0x3b5: M[V209] = V213
0x3b6: V214 = 0x20
0x3b8: V215 = ADD 0x20 V209
0x3bc: V216 = 0x40
0x3be: V217 = M[0x40]
0x3c1: V218 = SUB V215 V217
0x3c3: RETURN V217 V218
0x3c4: JUMPDEST 
0x3c5: V219 = CALLVALUE
0x3c7: V220 = ISZERO V219
0x3c8: V221 = 0x2e7
0x3cb: THROWI V220
---
Entry stack: [V202]
Stack pops: 0
Stack additions: [0x299, V219]
Exit stack: []

================================

Block 0x3cc
[0x3cc:0x3f8]
---
Predecessors: [0x375]
Successors: [0x3f9]
---
0x3cc PUSH1 0x0
0x3ce DUP1
0x3cf REVERT
0x3d0 JUMPDEST
0x3d1 POP
0x3d2 PUSH2 0x306
0x3d5 PUSH1 0x4
0x3d7 DUP1
0x3d8 CALLDATASIZE
0x3d9 SUB
0x3da DUP2
0x3db ADD
0x3dc SWAP1
0x3dd DUP1
0x3de DUP1
0x3df CALLDATALOAD
0x3e0 SWAP1
0x3e1 PUSH1 0x20
0x3e3 ADD
0x3e4 SWAP1
0x3e5 SWAP3
0x3e6 SWAP2
0x3e7 SWAP1
0x3e8 POP
0x3e9 POP
0x3ea POP
0x3eb PUSH2 0x57b
0x3ee JUMP
0x3ef JUMPDEST
0x3f0 STOP
0x3f1 JUMPDEST
0x3f2 CALLVALUE
0x3f3 DUP1
0x3f4 ISZERO
0x3f5 PUSH2 0x314
0x3f8 JUMPI
---
0x3cc: V222 = 0x0
0x3cf: REVERT 0x0 0x0
0x3d0: JUMPDEST 
0x3d2: V223 = 0x306
0x3d5: V224 = 0x4
0x3d8: V225 = CALLDATASIZE
0x3d9: V226 = SUB V225 0x4
0x3db: V227 = ADD 0x4 V226
0x3df: V228 = CALLDATALOAD 0x4
0x3e1: V229 = 0x20
0x3e3: V230 = ADD 0x20 0x4
0x3eb: V231 = 0x57b
0x3ee: THROW 
0x3ef: JUMPDEST 
0x3f0: STOP 
0x3f1: JUMPDEST 
0x3f2: V232 = CALLVALUE
0x3f4: V233 = ISZERO V232
0x3f5: V234 = 0x314
0x3f8: THROWI V233
---
Entry stack: [V219]
Stack pops: 0
Stack additions: [V228, 0x306, V232]
Exit stack: []

================================

Block 0x3f9
[0x3f9:0x423]
---
Predecessors: [0x3cc]
Successors: [0x424]
---
0x3f9 PUSH1 0x0
0x3fb DUP1
0x3fc REVERT
0x3fd JUMPDEST
0x3fe POP
0x3ff PUSH2 0x31d
0x402 PUSH2 0x5e0
0x405 JUMP
0x406 JUMPDEST
0x407 PUSH1 0x40
0x409 MLOAD
0x40a DUP1
0x40b DUP3
0x40c DUP2
0x40d MSTORE
0x40e PUSH1 0x20
0x410 ADD
0x411 SWAP2
0x412 POP
0x413 POP
0x414 PUSH1 0x40
0x416 MLOAD
0x417 DUP1
0x418 SWAP2
0x419 SUB
0x41a SWAP1
0x41b RETURN
0x41c JUMPDEST
0x41d CALLVALUE
0x41e DUP1
0x41f ISZERO
0x420 PUSH2 0x33f
0x423 JUMPI
---
0x3f9: V235 = 0x0
0x3fc: REVERT 0x0 0x0
0x3fd: JUMPDEST 
0x3ff: V236 = 0x31d
0x402: V237 = 0x5e0
0x405: THROW 
0x406: JUMPDEST 
0x407: V238 = 0x40
0x409: V239 = M[0x40]
0x40d: M[V239] = S0
0x40e: V240 = 0x20
0x410: V241 = ADD 0x20 V239
0x414: V242 = 0x40
0x416: V243 = M[0x40]
0x419: V244 = SUB V241 V243
0x41b: RETURN V243 V244
0x41c: JUMPDEST 
0x41d: V245 = CALLVALUE
0x41f: V246 = ISZERO V245
0x420: V247 = 0x33f
0x423: THROWI V246
---
Entry stack: [V232]
Stack pops: 0
Stack additions: [0x31d, V245]
Exit stack: []

================================

Block 0x424
[0x424:0x430]
---
Predecessors: [0x3f9]
Successors: [0x5e6]
---
0x424 PUSH1 0x0
0x426 DUP1
0x427 REVERT
0x428 JUMPDEST
0x429 POP
0x42a PUSH2 0x348
0x42d PUSH2 0x5e6
0x430 JUMP
---
0x424: V248 = 0x0
0x427: REVERT 0x0 0x0
0x428: JUMPDEST 
0x42a: V249 = 0x348
0x42d: V250 = 0x5e6
0x430: JUMP 0x5e6
---
Entry stack: [V245]
Stack pops: 0
Stack additions: [0x348]
Exit stack: []

================================

Block 0x431
[0x431:0x47a]
---
Predecessors: []
Successors: [0x47b]
---
0x431 JUMPDEST
0x432 PUSH1 0x40
0x434 MLOAD
0x435 DUP1
0x436 DUP3
0x437 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x44c AND
0x44d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x462 AND
0x463 DUP2
0x464 MSTORE
0x465 PUSH1 0x20
0x467 ADD
0x468 SWAP2
0x469 POP
0x46a POP
0x46b PUSH1 0x40
0x46d MLOAD
0x46e DUP1
0x46f SWAP2
0x470 SUB
0x471 SWAP1
0x472 RETURN
0x473 JUMPDEST
0x474 CALLVALUE
0x475 DUP1
0x476 ISZERO
0x477 PUSH2 0x396
0x47a JUMPI
---
0x431: JUMPDEST 
0x432: V251 = 0x40
0x434: V252 = M[0x40]
0x437: V253 = 0xffffffffffffffffffffffffffffffffffffffff
0x44c: V254 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x44d: V255 = 0xffffffffffffffffffffffffffffffffffffffff
0x462: V256 = AND 0xffffffffffffffffffffffffffffffffffffffff V254
0x464: M[V252] = V256
0x465: V257 = 0x20
0x467: V258 = ADD 0x20 V252
0x46b: V259 = 0x40
0x46d: V260 = M[0x40]
0x470: V261 = SUB V258 V260
0x472: RETURN V260 V261
0x473: JUMPDEST 
0x474: V262 = CALLVALUE
0x476: V263 = ISZERO V262
0x477: V264 = 0x396
0x47a: THROWI V263
---
Entry stack: []
Stack pops: 2
Stack additions: [V262]
Exit stack: []

================================

Block 0x47b
[0x47b:0x4d1]
---
Predecessors: [0x431]
Successors: [0x4d2]
---
0x47b PUSH1 0x0
0x47d DUP1
0x47e REVERT
0x47f JUMPDEST
0x480 POP
0x481 PUSH2 0x3cb
0x484 PUSH1 0x4
0x486 DUP1
0x487 CALLDATASIZE
0x488 SUB
0x489 DUP2
0x48a ADD
0x48b SWAP1
0x48c DUP1
0x48d DUP1
0x48e CALLDATALOAD
0x48f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4a4 AND
0x4a5 SWAP1
0x4a6 PUSH1 0x20
0x4a8 ADD
0x4a9 SWAP1
0x4aa SWAP3
0x4ab SWAP2
0x4ac SWAP1
0x4ad POP
0x4ae POP
0x4af POP
0x4b0 PUSH2 0x60c
0x4b3 JUMP
0x4b4 JUMPDEST
0x4b5 PUSH1 0x40
0x4b7 MLOAD
0x4b8 DUP1
0x4b9 DUP3
0x4ba DUP2
0x4bb MSTORE
0x4bc PUSH1 0x20
0x4be ADD
0x4bf SWAP2
0x4c0 POP
0x4c1 POP
0x4c2 PUSH1 0x40
0x4c4 MLOAD
0x4c5 DUP1
0x4c6 SWAP2
0x4c7 SUB
0x4c8 SWAP1
0x4c9 RETURN
0x4ca JUMPDEST
0x4cb CALLVALUE
0x4cc DUP1
0x4cd ISZERO
0x4ce PUSH2 0x3ed
0x4d1 JUMPI
---
0x47b: V265 = 0x0
0x47e: REVERT 0x0 0x0
0x47f: JUMPDEST 
0x481: V266 = 0x3cb
0x484: V267 = 0x4
0x487: V268 = CALLDATASIZE
0x488: V269 = SUB V268 0x4
0x48a: V270 = ADD 0x4 V269
0x48e: V271 = CALLDATALOAD 0x4
0x48f: V272 = 0xffffffffffffffffffffffffffffffffffffffff
0x4a4: V273 = AND 0xffffffffffffffffffffffffffffffffffffffff V271
0x4a6: V274 = 0x20
0x4a8: V275 = ADD 0x20 0x4
0x4b0: V276 = 0x60c
0x4b3: THROW 
0x4b4: JUMPDEST 
0x4b5: V277 = 0x40
0x4b7: V278 = M[0x40]
0x4bb: M[V278] = S0
0x4bc: V279 = 0x20
0x4be: V280 = ADD 0x20 V278
0x4c2: V281 = 0x40
0x4c4: V282 = M[0x40]
0x4c7: V283 = SUB V280 V282
0x4c9: RETURN V282 V283
0x4ca: JUMPDEST 
0x4cb: V284 = CALLVALUE
0x4cd: V285 = ISZERO V284
0x4ce: V286 = 0x3ed
0x4d1: THROWI V285
---
Entry stack: [V262]
Stack pops: 0
Stack additions: [V273, 0x3cb, V284]
Exit stack: []

================================

Block 0x4d2
[0x4d2:0x51e]
---
Predecessors: [0x47b]
Successors: [0x51f]
---
0x4d2 PUSH1 0x0
0x4d4 DUP1
0x4d5 REVERT
0x4d6 JUMPDEST
0x4d7 POP
0x4d8 PUSH2 0x42c
0x4db PUSH1 0x4
0x4dd DUP1
0x4de CALLDATASIZE
0x4df SUB
0x4e0 DUP2
0x4e1 ADD
0x4e2 SWAP1
0x4e3 DUP1
0x4e4 DUP1
0x4e5 CALLDATALOAD
0x4e6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4fb AND
0x4fc SWAP1
0x4fd PUSH1 0x20
0x4ff ADD
0x500 SWAP1
0x501 SWAP3
0x502 SWAP2
0x503 SWAP1
0x504 DUP1
0x505 CALLDATALOAD
0x506 SWAP1
0x507 PUSH1 0x20
0x509 ADD
0x50a SWAP1
0x50b SWAP3
0x50c SWAP2
0x50d SWAP1
0x50e POP
0x50f POP
0x510 POP
0x511 PUSH2 0x624
0x514 JUMP
0x515 JUMPDEST
0x516 STOP
0x517 JUMPDEST
0x518 CALLVALUE
0x519 DUP1
0x51a ISZERO
0x51b PUSH2 0x43a
0x51e JUMPI
---
0x4d2: V287 = 0x0
0x4d5: REVERT 0x0 0x0
0x4d6: JUMPDEST 
0x4d8: V288 = 0x42c
0x4db: V289 = 0x4
0x4de: V290 = CALLDATASIZE
0x4df: V291 = SUB V290 0x4
0x4e1: V292 = ADD 0x4 V291
0x4e5: V293 = CALLDATALOAD 0x4
0x4e6: V294 = 0xffffffffffffffffffffffffffffffffffffffff
0x4fb: V295 = AND 0xffffffffffffffffffffffffffffffffffffffff V293
0x4fd: V296 = 0x20
0x4ff: V297 = ADD 0x20 0x4
0x505: V298 = CALLDATALOAD 0x24
0x507: V299 = 0x20
0x509: V300 = ADD 0x20 0x24
0x511: V301 = 0x624
0x514: THROW 
0x515: JUMPDEST 
0x516: STOP 
0x517: JUMPDEST 
0x518: V302 = CALLVALUE
0x51a: V303 = ISZERO V302
0x51b: V304 = 0x43a
0x51e: THROWI V303
---
Entry stack: [V284]
Stack pops: 0
Stack additions: [V298, V295, 0x42c, V302]
Exit stack: []

================================

Block 0x51f
[0x51f:0x575]
---
Predecessors: [0x4d2]
Successors: [0x576]
---
0x51f PUSH1 0x0
0x521 DUP1
0x522 REVERT
0x523 JUMPDEST
0x524 POP
0x525 PUSH2 0x443
0x528 PUSH2 0x781
0x52b JUMP
0x52c JUMPDEST
0x52d PUSH1 0x40
0x52f MLOAD
0x530 DUP1
0x531 DUP3
0x532 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x547 AND
0x548 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x55d AND
0x55e DUP2
0x55f MSTORE
0x560 PUSH1 0x20
0x562 ADD
0x563 SWAP2
0x564 POP
0x565 POP
0x566 PUSH1 0x40
0x568 MLOAD
0x569 DUP1
0x56a SWAP2
0x56b SUB
0x56c SWAP1
0x56d RETURN
0x56e JUMPDEST
0x56f CALLVALUE
0x570 DUP1
0x571 ISZERO
0x572 PUSH2 0x491
0x575 JUMPI
---
0x51f: V305 = 0x0
0x522: REVERT 0x0 0x0
0x523: JUMPDEST 
0x525: V306 = 0x443
0x528: V307 = 0x781
0x52b: THROW 
0x52c: JUMPDEST 
0x52d: V308 = 0x40
0x52f: V309 = M[0x40]
0x532: V310 = 0xffffffffffffffffffffffffffffffffffffffff
0x547: V311 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x548: V312 = 0xffffffffffffffffffffffffffffffffffffffff
0x55d: V313 = AND 0xffffffffffffffffffffffffffffffffffffffff V311
0x55f: M[V309] = V313
0x560: V314 = 0x20
0x562: V315 = ADD 0x20 V309
0x566: V316 = 0x40
0x568: V317 = M[0x40]
0x56b: V318 = SUB V315 V317
0x56d: RETURN V317 V318
0x56e: JUMPDEST 
0x56f: V319 = CALLVALUE
0x571: V320 = ISZERO V319
0x572: V321 = 0x491
0x575: THROWI V320
---
Entry stack: [V302]
Stack pops: 0
Stack additions: [0x443, V319]
Exit stack: []

================================

Block 0x576
[0x576:0x5a0]
---
Predecessors: [0x51f]
Successors: [0x5a1]
---
0x576 PUSH1 0x0
0x578 DUP1
0x579 REVERT
0x57a JUMPDEST
0x57b POP
0x57c PUSH2 0x49a
0x57f PUSH2 0x7a6
0x582 JUMP
0x583 JUMPDEST
0x584 PUSH1 0x40
0x586 MLOAD
0x587 DUP1
0x588 DUP3
0x589 DUP2
0x58a MSTORE
0x58b PUSH1 0x20
0x58d ADD
0x58e SWAP2
0x58f POP
0x590 POP
0x591 PUSH1 0x40
0x593 MLOAD
0x594 DUP1
0x595 SWAP2
0x596 SUB
0x597 SWAP1
0x598 RETURN
0x599 JUMPDEST
0x59a CALLVALUE
0x59b DUP1
0x59c ISZERO
0x59d PUSH2 0x4bc
0x5a0 JUMPI
---
0x576: V322 = 0x0
0x579: REVERT 0x0 0x0
0x57a: JUMPDEST 
0x57c: V323 = 0x49a
0x57f: V324 = 0x7a6
0x582: THROW 
0x583: JUMPDEST 
0x584: V325 = 0x40
0x586: V326 = M[0x40]
0x58a: M[V326] = S0
0x58b: V327 = 0x20
0x58d: V328 = ADD 0x20 V326
0x591: V329 = 0x40
0x593: V330 = M[0x40]
0x596: V331 = SUB V328 V330
0x598: RETURN V330 V331
0x599: JUMPDEST 
0x59a: V332 = CALLVALUE
0x59c: V333 = ISZERO V332
0x59d: V334 = 0x4bc
0x5a0: THROWI V333
---
Entry stack: [V319]
Stack pops: 0
Stack additions: [0x49a, V332]
Exit stack: []

================================

Block 0x5a1
[0x5a1:0x5e5]
---
Predecessors: [0x576]
Successors: []
---
0x5a1 PUSH1 0x0
0x5a3 DUP1
0x5a4 REVERT
0x5a5 JUMPDEST
0x5a6 POP
0x5a7 PUSH2 0x4fb
0x5aa PUSH1 0x4
0x5ac DUP1
0x5ad CALLDATASIZE
0x5ae SUB
0x5af DUP2
0x5b0 ADD
0x5b1 SWAP1
0x5b2 DUP1
0x5b3 DUP1
0x5b4 CALLDATALOAD
0x5b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5ca AND
0x5cb SWAP1
0x5cc PUSH1 0x20
0x5ce ADD
0x5cf SWAP1
0x5d0 SWAP3
0x5d1 SWAP2
0x5d2 SWAP1
0x5d3 DUP1
0x5d4 CALLDATALOAD
0x5d5 SWAP1
0x5d6 PUSH1 0x20
0x5d8 ADD
0x5d9 SWAP1
0x5da SWAP3
0x5db SWAP2
0x5dc SWAP1
0x5dd POP
0x5de POP
0x5df POP
0x5e0 PUSH2 0x7ac
0x5e3 JUMP
0x5e4 JUMPDEST
0x5e5 STOP
---
0x5a1: V335 = 0x0
0x5a4: REVERT 0x0 0x0
0x5a5: JUMPDEST 
0x5a7: V336 = 0x4fb
0x5aa: V337 = 0x4
0x5ad: V338 = CALLDATASIZE
0x5ae: V339 = SUB V338 0x4
0x5b0: V340 = ADD 0x4 V339
0x5b4: V341 = CALLDATALOAD 0x4
0x5b5: V342 = 0xffffffffffffffffffffffffffffffffffffffff
0x5ca: V343 = AND 0xffffffffffffffffffffffffffffffffffffffff V341
0x5cc: V344 = 0x20
0x5ce: V345 = ADD 0x20 0x4
0x5d4: V346 = CALLDATALOAD 0x24
0x5d6: V347 = 0x20
0x5d8: V348 = ADD 0x20 0x24
0x5e0: V349 = 0x7ac
0x5e3: THROW 
0x5e4: JUMPDEST 
0x5e5: STOP 
---
Entry stack: [V332]
Stack pops: 0
Stack additions: [V346, V343, 0x4fb]
Exit stack: []

================================

Block 0x5e6
[0x5e6:0x5ed]
---
Predecessors: [0x424]
Successors: [0x5ee]
---
0x5e6 JUMPDEST
0x5e7 CALLVALUE
0x5e8 DUP1
0x5e9 ISZERO
0x5ea PUSH2 0x509
0x5ed JUMPI
---
0x5e6: JUMPDEST 
0x5e7: V350 = CALLVALUE
0x5e9: V351 = ISZERO V350
0x5ea: V352 = 0x509
0x5ed: THROWI V351
---
Entry stack: [0x348]
Stack pops: 0
Stack additions: [V350]
Exit stack: [0x348, V350]

================================

Block 0x5ee
[0x5ee:0x61a]
---
Predecessors: [0x5e6]
Successors: [0x61b]
---
0x5ee PUSH1 0x0
0x5f0 DUP1
0x5f1 REVERT
0x5f2 JUMPDEST
0x5f3 POP
0x5f4 PUSH2 0x528
0x5f7 PUSH1 0x4
0x5f9 DUP1
0x5fa CALLDATASIZE
0x5fb SUB
0x5fc DUP2
0x5fd ADD
0x5fe SWAP1
0x5ff DUP1
0x600 DUP1
0x601 CALLDATALOAD
0x602 SWAP1
0x603 PUSH1 0x20
0x605 ADD
0x606 SWAP1
0x607 SWAP3
0x608 SWAP2
0x609 SWAP1
0x60a POP
0x60b POP
0x60c POP
0x60d PUSH2 0x853
0x610 JUMP
0x611 JUMPDEST
0x612 STOP
0x613 JUMPDEST
0x614 CALLVALUE
0x615 DUP1
0x616 ISZERO
0x617 PUSH2 0x536
0x61a JUMPI
---
0x5ee: V353 = 0x0
0x5f1: REVERT 0x0 0x0
0x5f2: JUMPDEST 
0x5f4: V354 = 0x528
0x5f7: V355 = 0x4
0x5fa: V356 = CALLDATASIZE
0x5fb: V357 = SUB V356 0x4
0x5fd: V358 = ADD 0x4 V357
0x601: V359 = CALLDATALOAD 0x4
0x603: V360 = 0x20
0x605: V361 = ADD 0x20 0x4
0x60d: V362 = 0x853
0x610: THROW 
0x611: JUMPDEST 
0x612: STOP 
0x613: JUMPDEST 
0x614: V363 = CALLVALUE
0x616: V364 = ISZERO V363
0x617: V365 = 0x536
0x61a: THROWI V364
---
Entry stack: [0x348, V350]
Stack pops: 0
Stack additions: [V359, 0x528, V363]
Exit stack: []

================================

Block 0x61b
[0x61b:0x6ba]
---
Predecessors: [0x5ee]
Successors: [0x6bb]
---
0x61b PUSH1 0x0
0x61d DUP1
0x61e REVERT
0x61f JUMPDEST
0x620 POP
0x621 PUSH2 0x53f
0x624 PUSH2 0x8b8
0x627 JUMP
0x628 JUMPDEST
0x629 PUSH1 0x40
0x62b MLOAD
0x62c DUP1
0x62d DUP3
0x62e DUP2
0x62f MSTORE
0x630 PUSH1 0x20
0x632 ADD
0x633 SWAP2
0x634 POP
0x635 POP
0x636 PUSH1 0x40
0x638 MLOAD
0x639 DUP1
0x63a SWAP2
0x63b SUB
0x63c SWAP1
0x63d RETURN
0x63e JUMPDEST
0x63f PUSH1 0x1
0x641 PUSH1 0x0
0x643 SWAP1
0x644 SLOAD
0x645 SWAP1
0x646 PUSH2 0x100
0x649 EXP
0x64a SWAP1
0x64b DIV
0x64c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x661 AND
0x662 DUP2
0x663 JUMP
0x664 JUMPDEST
0x665 PUSH1 0x0
0x667 DUP1
0x668 SWAP1
0x669 SLOAD
0x66a SWAP1
0x66b PUSH2 0x100
0x66e EXP
0x66f SWAP1
0x670 DIV
0x671 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x686 AND
0x687 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x69c AND
0x69d CALLER
0x69e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6b3 AND
0x6b4 EQ
0x6b5 ISZERO
0x6b6 ISZERO
0x6b7 PUSH2 0x5d6
0x6ba JUMPI
---
0x61b: V366 = 0x0
0x61e: REVERT 0x0 0x0
0x61f: JUMPDEST 
0x621: V367 = 0x53f
0x624: V368 = 0x8b8
0x627: THROW 
0x628: JUMPDEST 
0x629: V369 = 0x40
0x62b: V370 = M[0x40]
0x62f: M[V370] = S0
0x630: V371 = 0x20
0x632: V372 = ADD 0x20 V370
0x636: V373 = 0x40
0x638: V374 = M[0x40]
0x63b: V375 = SUB V372 V374
0x63d: RETURN V374 V375
0x63e: JUMPDEST 
0x63f: V376 = 0x1
0x641: V377 = 0x0
0x644: V378 = S[0x1]
0x646: V379 = 0x100
0x649: V380 = EXP 0x100 0x0
0x64b: V381 = DIV V378 0x1
0x64c: V382 = 0xffffffffffffffffffffffffffffffffffffffff
0x661: V383 = AND 0xffffffffffffffffffffffffffffffffffffffff V381
0x663: JUMP S0
0x664: JUMPDEST 
0x665: V384 = 0x0
0x669: V385 = S[0x0]
0x66b: V386 = 0x100
0x66e: V387 = EXP 0x100 0x0
0x670: V388 = DIV V385 0x1
0x671: V389 = 0xffffffffffffffffffffffffffffffffffffffff
0x686: V390 = AND 0xffffffffffffffffffffffffffffffffffffffff V388
0x687: V391 = 0xffffffffffffffffffffffffffffffffffffffff
0x69c: V392 = AND 0xffffffffffffffffffffffffffffffffffffffff V390
0x69d: V393 = CALLER
0x69e: V394 = 0xffffffffffffffffffffffffffffffffffffffff
0x6b3: V395 = AND 0xffffffffffffffffffffffffffffffffffffffff V393
0x6b4: V396 = EQ V395 V392
0x6b5: V397 = ISZERO V396
0x6b6: V398 = ISZERO V397
0x6b7: V399 = 0x5d6
0x6ba: THROWI V398
---
Entry stack: [V363]
Stack pops: 0
Stack additions: [0x53f, V383, S0]
Exit stack: []

================================

Block 0x6bb
[0x6bb:0x763]
---
Predecessors: [0x61b]
Successors: [0x764]
---
0x6bb PUSH1 0x0
0x6bd DUP1
0x6be REVERT
0x6bf JUMPDEST
0x6c0 DUP1
0x6c1 PUSH1 0x2
0x6c3 DUP2
0x6c4 SWAP1
0x6c5 SSTORE
0x6c6 POP
0x6c7 POP
0x6c8 JUMP
0x6c9 JUMPDEST
0x6ca PUSH1 0x4
0x6cc SLOAD
0x6cd DUP2
0x6ce JUMP
0x6cf JUMPDEST
0x6d0 PUSH1 0x5
0x6d2 PUSH1 0x0
0x6d4 SWAP1
0x6d5 SLOAD
0x6d6 SWAP1
0x6d7 PUSH2 0x100
0x6da EXP
0x6db SWAP1
0x6dc DIV
0x6dd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6f2 AND
0x6f3 DUP2
0x6f4 JUMP
0x6f5 JUMPDEST
0x6f6 PUSH1 0x6
0x6f8 PUSH1 0x20
0x6fa MSTORE
0x6fb DUP1
0x6fc PUSH1 0x0
0x6fe MSTORE
0x6ff PUSH1 0x40
0x701 PUSH1 0x0
0x703 SHA3
0x704 PUSH1 0x0
0x706 SWAP2
0x707 POP
0x708 SWAP1
0x709 POP
0x70a SLOAD
0x70b DUP2
0x70c JUMP
0x70d JUMPDEST
0x70e PUSH1 0x0
0x710 DUP1
0x711 SWAP1
0x712 SLOAD
0x713 SWAP1
0x714 PUSH2 0x100
0x717 EXP
0x718 SWAP1
0x719 DIV
0x71a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x72f AND
0x730 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x745 AND
0x746 CALLER
0x747 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x75c AND
0x75d EQ
0x75e ISZERO
0x75f ISZERO
0x760 PUSH2 0x67f
0x763 JUMPI
---
0x6bb: V400 = 0x0
0x6be: REVERT 0x0 0x0
0x6bf: JUMPDEST 
0x6c1: V401 = 0x2
0x6c5: S[0x2] = S0
0x6c8: JUMP S1
0x6c9: JUMPDEST 
0x6ca: V402 = 0x4
0x6cc: V403 = S[0x4]
0x6ce: JUMP S0
0x6cf: JUMPDEST 
0x6d0: V404 = 0x5
0x6d2: V405 = 0x0
0x6d5: V406 = S[0x5]
0x6d7: V407 = 0x100
0x6da: V408 = EXP 0x100 0x0
0x6dc: V409 = DIV V406 0x1
0x6dd: V410 = 0xffffffffffffffffffffffffffffffffffffffff
0x6f2: V411 = AND 0xffffffffffffffffffffffffffffffffffffffff V409
0x6f4: JUMP S0
0x6f5: JUMPDEST 
0x6f6: V412 = 0x6
0x6f8: V413 = 0x20
0x6fa: M[0x20] = 0x6
0x6fc: V414 = 0x0
0x6fe: M[0x0] = S0
0x6ff: V415 = 0x40
0x701: V416 = 0x0
0x703: V417 = SHA3 0x0 0x40
0x704: V418 = 0x0
0x70a: V419 = S[V417]
0x70c: JUMP S1
0x70d: JUMPDEST 
0x70e: V420 = 0x0
0x712: V421 = S[0x0]
0x714: V422 = 0x100
0x717: V423 = EXP 0x100 0x0
0x719: V424 = DIV V421 0x1
0x71a: V425 = 0xffffffffffffffffffffffffffffffffffffffff
0x72f: V426 = AND 0xffffffffffffffffffffffffffffffffffffffff V424
0x730: V427 = 0xffffffffffffffffffffffffffffffffffffffff
0x745: V428 = AND 0xffffffffffffffffffffffffffffffffffffffff V426
0x746: V429 = CALLER
0x747: V430 = 0xffffffffffffffffffffffffffffffffffffffff
0x75c: V431 = AND 0xffffffffffffffffffffffffffffffffffffffff V429
0x75d: V432 = EQ V431 V428
0x75e: V433 = ISZERO V432
0x75f: V434 = ISZERO V433
0x760: V435 = 0x67f
0x763: THROWI V434
---
Entry stack: []
Stack pops: 0
Stack additions: [V403, S0, V411, S0, V419, S1]
Exit stack: []

================================

Block 0x764
[0x764:0x774]
---
Predecessors: [0x6bb]
Successors: [0x775]
---
0x764 PUSH1 0x0
0x766 DUP1
0x767 REVERT
0x768 JUMPDEST
0x769 DUP1
0x76a PUSH1 0x4
0x76c SLOAD
0x76d LT
0x76e ISZERO
0x76f ISZERO
0x770 ISZERO
0x771 PUSH2 0x690
0x774 JUMPI
---
0x764: V436 = 0x0
0x767: REVERT 0x0 0x0
0x768: JUMPDEST 
0x76a: V437 = 0x4
0x76c: V438 = S[0x4]
0x76d: V439 = LT V438 S0
0x76e: V440 = ISZERO V439
0x76f: V441 = ISZERO V440
0x770: V442 = ISZERO V441
0x771: V443 = 0x690
0x774: THROWI V442
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x775
[0x775:0x778]
---
Predecessors: [0x764]
Successors: []
---
0x775 PUSH1 0x0
0x777 DUP1
0x778 REVERT
---
0x775: V444 = 0x0
0x778: REVERT 0x0 0x0
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0x779
[0x779:0x849]
---
Predecessors: [0x84a]
Successors: [0x84a]
---
0x779 JUMPDEST
0x77a DUP1
0x77b PUSH1 0x4
0x77d PUSH1 0x0
0x77f DUP3
0x780 DUP3
0x781 SLOAD
0x782 SUB
0x783 SWAP3
0x784 POP
0x785 POP
0x786 DUP2
0x787 SWAP1
0x788 SSTORE
0x789 POP
0x78a PUSH1 0x5
0x78c PUSH1 0x0
0x78e SWAP1
0x78f SLOAD
0x790 SWAP1
0x791 PUSH2 0x100
0x794 EXP
0x795 SWAP1
0x796 DIV
0x797 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7ac AND
0x7ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7c2 AND
0x7c3 PUSH4 0xa9059cbb
0x7c8 DUP4
0x7c9 DUP4
0x7ca PUSH1 0x40
0x7cc MLOAD
0x7cd DUP4
0x7ce PUSH4 0xffffffff
0x7d3 AND
0x7d4 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x7f2 MUL
0x7f3 DUP2
0x7f4 MSTORE
0x7f5 PUSH1 0x4
0x7f7 ADD
0x7f8 DUP1
0x7f9 DUP4
0x7fa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x80f AND
0x810 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x825 AND
0x826 DUP2
0x827 MSTORE
0x828 PUSH1 0x20
0x82a ADD
0x82b DUP3
0x82c DUP2
0x82d MSTORE
0x82e PUSH1 0x20
0x830 ADD
0x831 SWAP3
0x832 POP
0x833 POP
0x834 POP
0x835 PUSH1 0x0
0x837 PUSH1 0x40
0x839 MLOAD
0x83a DUP1
0x83b DUP4
0x83c SUB
0x83d DUP2
0x83e PUSH1 0x0
0x840 DUP8
0x841 DUP1
0x842 EXTCODESIZE
0x843 ISZERO
0x844 DUP1
0x845 ISZERO
0x846 PUSH2 0x765
0x849 JUMPI
---
0x779: JUMPDEST 
0x77b: V445 = 0x4
0x77d: V446 = 0x0
0x781: V447 = S[0x4]
0x782: V448 = SUB V447 V488
0x788: S[0x4] = V448
0x78a: V449 = 0x5
0x78c: V450 = 0x0
0x78f: V451 = S[0x5]
0x791: V452 = 0x100
0x794: V453 = EXP 0x100 0x0
0x796: V454 = DIV V451 0x1
0x797: V455 = 0xffffffffffffffffffffffffffffffffffffffff
0x7ac: V456 = AND 0xffffffffffffffffffffffffffffffffffffffff V454
0x7ad: V457 = 0xffffffffffffffffffffffffffffffffffffffff
0x7c2: V458 = AND 0xffffffffffffffffffffffffffffffffffffffff V456
0x7c3: V459 = 0xa9059cbb
0x7ca: V460 = 0x40
0x7cc: V461 = M[0x40]
0x7ce: V462 = 0xffffffff
0x7d3: V463 = AND 0xffffffff 0xa9059cbb
0x7d4: V464 = 0x100000000000000000000000000000000000000000000000000000000
0x7f2: V465 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x7f4: M[V461] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x7f5: V466 = 0x4
0x7f7: V467 = ADD 0x4 V461
0x7fa: V468 = 0xffffffffffffffffffffffffffffffffffffffff
0x80f: V469 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x810: V470 = 0xffffffffffffffffffffffffffffffffffffffff
0x825: V471 = AND 0xffffffffffffffffffffffffffffffffffffffff V469
0x827: M[V467] = V471
0x828: V472 = 0x20
0x82a: V473 = ADD 0x20 V467
0x82d: M[V473] = V488
0x82e: V474 = 0x20
0x830: V475 = ADD 0x20 V473
0x835: V476 = 0x0
0x837: V477 = 0x40
0x839: V478 = M[0x40]
0x83c: V479 = SUB V475 V478
0x83e: V480 = 0x0
0x842: V481 = EXTCODESIZE V458
0x843: V482 = ISZERO V481
0x845: V483 = ISZERO V482
0x846: V484 = 0x765
0x849: THROWI V483
---
Entry stack: [V488]
Stack pops: 2
Stack additions: [S1, S0, V458, 0xa9059cbb, V475, 0x0, V478, V479, V478, 0x0, V458, V482]
Exit stack: [S0, V488, V458, 0xa9059cbb, V475, 0x0, V478, V479, V478, 0x0, V458, V482]

================================

Block 0x84a
[0x84a:0x858]
---
Predecessors: [0x779]
Successors: [0x779, 0x859]
---
0x84a PUSH1 0x0
0x84c DUP1
0x84d REVERT
0x84e JUMPDEST
0x84f POP
0x850 GAS
0x851 CALL
0x852 ISZERO
0x853 DUP1
0x854 ISZERO
0x855 PUSH2 0x779
0x858 JUMPI
---
0x84a: V485 = 0x0
0x84d: REVERT 0x0 0x0
0x84e: JUMPDEST 
0x850: V486 = GAS
0x851: V487 = CALL V486 S1 S2 S3 S4 S5 S6
0x852: V488 = ISZERO V487
0x854: V489 = ISZERO V488
0x855: V490 = 0x779
0x858: JUMPI 0x779 V489
---
Entry stack: [S11, V488, V458, 0xa9059cbb, V475, 0x0, V478, V479, V478, 0x0, V458, V482]
Stack pops: 0
Stack additions: [V488]
Exit stack: []

================================

Block 0x859
[0x859:0x8eb]
---
Predecessors: [0x84a]
Successors: [0x8ec]
---
0x859 RETURNDATASIZE
0x85a PUSH1 0x0
0x85c DUP1
0x85d RETURNDATACOPY
0x85e RETURNDATASIZE
0x85f PUSH1 0x0
0x861 REVERT
0x862 JUMPDEST
0x863 POP
0x864 POP
0x865 POP
0x866 POP
0x867 POP
0x868 POP
0x869 JUMP
0x86a JUMPDEST
0x86b PUSH1 0x0
0x86d DUP1
0x86e SWAP1
0x86f SLOAD
0x870 SWAP1
0x871 PUSH2 0x100
0x874 EXP
0x875 SWAP1
0x876 DIV
0x877 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x88c AND
0x88d DUP2
0x88e JUMP
0x88f JUMPDEST
0x890 PUSH1 0x3
0x892 SLOAD
0x893 DUP2
0x894 JUMP
0x895 JUMPDEST
0x896 PUSH1 0x0
0x898 DUP1
0x899 SWAP1
0x89a SLOAD
0x89b SWAP1
0x89c PUSH2 0x100
0x89f EXP
0x8a0 SWAP1
0x8a1 DIV
0x8a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8b7 AND
0x8b8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8cd AND
0x8ce CALLER
0x8cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8e4 AND
0x8e5 EQ
0x8e6 ISZERO
0x8e7 ISZERO
0x8e8 PUSH2 0x807
0x8eb JUMPI
---
0x859: V491 = RETURNDATASIZE
0x85a: V492 = 0x0
0x85d: RETURNDATACOPY 0x0 0x0 V491
0x85e: V493 = RETURNDATASIZE
0x85f: V494 = 0x0
0x861: REVERT 0x0 V493
0x862: JUMPDEST 
0x869: JUMP S6
0x86a: JUMPDEST 
0x86b: V495 = 0x0
0x86f: V496 = S[0x0]
0x871: V497 = 0x100
0x874: V498 = EXP 0x100 0x0
0x876: V499 = DIV V496 0x1
0x877: V500 = 0xffffffffffffffffffffffffffffffffffffffff
0x88c: V501 = AND 0xffffffffffffffffffffffffffffffffffffffff V499
0x88e: JUMP S0
0x88f: JUMPDEST 
0x890: V502 = 0x3
0x892: V503 = S[0x3]
0x894: JUMP S0
0x895: JUMPDEST 
0x896: V504 = 0x0
0x89a: V505 = S[0x0]
0x89c: V506 = 0x100
0x89f: V507 = EXP 0x100 0x0
0x8a1: V508 = DIV V505 0x1
0x8a2: V509 = 0xffffffffffffffffffffffffffffffffffffffff
0x8b7: V510 = AND 0xffffffffffffffffffffffffffffffffffffffff V508
0x8b8: V511 = 0xffffffffffffffffffffffffffffffffffffffff
0x8cd: V512 = AND 0xffffffffffffffffffffffffffffffffffffffff V510
0x8ce: V513 = CALLER
0x8cf: V514 = 0xffffffffffffffffffffffffffffffffffffffff
0x8e4: V515 = AND 0xffffffffffffffffffffffffffffffffffffffff V513
0x8e5: V516 = EQ V515 V512
0x8e6: V517 = ISZERO V516
0x8e7: V518 = ISZERO V517
0x8e8: V519 = 0x807
0x8eb: THROWI V518
---
Entry stack: [V488]
Stack pops: 0
Stack additions: [V501, S0, V503, S0]
Exit stack: []

================================

Block 0x8ec
[0x8ec:0x992]
---
Predecessors: [0x859]
Successors: [0x993]
---
0x8ec PUSH1 0x0
0x8ee DUP1
0x8ef REVERT
0x8f0 JUMPDEST
0x8f1 DUP2
0x8f2 PUSH1 0x5
0x8f4 PUSH1 0x0
0x8f6 PUSH2 0x100
0x8f9 EXP
0x8fa DUP2
0x8fb SLOAD
0x8fc DUP2
0x8fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x912 MUL
0x913 NOT
0x914 AND
0x915 SWAP1
0x916 DUP4
0x917 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x92c AND
0x92d MUL
0x92e OR
0x92f SWAP1
0x930 SSTORE
0x931 POP
0x932 DUP1
0x933 PUSH1 0x4
0x935 DUP2
0x936 SWAP1
0x937 SSTORE
0x938 POP
0x939 POP
0x93a POP
0x93b JUMP
0x93c JUMPDEST
0x93d PUSH1 0x0
0x93f DUP1
0x940 SWAP1
0x941 SLOAD
0x942 SWAP1
0x943 PUSH2 0x100
0x946 EXP
0x947 SWAP1
0x948 DIV
0x949 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x95e AND
0x95f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x974 AND
0x975 CALLER
0x976 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x98b AND
0x98c EQ
0x98d ISZERO
0x98e ISZERO
0x98f PUSH2 0x8ae
0x992 JUMPI
---
0x8ec: V520 = 0x0
0x8ef: REVERT 0x0 0x0
0x8f0: JUMPDEST 
0x8f2: V521 = 0x5
0x8f4: V522 = 0x0
0x8f6: V523 = 0x100
0x8f9: V524 = EXP 0x100 0x0
0x8fb: V525 = S[0x5]
0x8fd: V526 = 0xffffffffffffffffffffffffffffffffffffffff
0x912: V527 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x913: V528 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x914: V529 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V525
0x917: V530 = 0xffffffffffffffffffffffffffffffffffffffff
0x92c: V531 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x92d: V532 = MUL V531 0x1
0x92e: V533 = OR V532 V529
0x930: S[0x5] = V533
0x933: V534 = 0x4
0x937: S[0x4] = S0
0x93b: JUMP S2
0x93c: JUMPDEST 
0x93d: V535 = 0x0
0x941: V536 = S[0x0]
0x943: V537 = 0x100
0x946: V538 = EXP 0x100 0x0
0x948: V539 = DIV V536 0x1
0x949: V540 = 0xffffffffffffffffffffffffffffffffffffffff
0x95e: V541 = AND 0xffffffffffffffffffffffffffffffffffffffff V539
0x95f: V542 = 0xffffffffffffffffffffffffffffffffffffffff
0x974: V543 = AND 0xffffffffffffffffffffffffffffffffffffffff V541
0x975: V544 = CALLER
0x976: V545 = 0xffffffffffffffffffffffffffffffffffffffff
0x98b: V546 = AND 0xffffffffffffffffffffffffffffffffffffffff V544
0x98c: V547 = EQ V546 V543
0x98d: V548 = ISZERO V547
0x98e: V549 = ISZERO V548
0x98f: V550 = 0x8ae
0x992: THROWI V549
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x993
[0x993:0x9f0]
---
Predecessors: [0x8ec]
Successors: []
---
0x993 PUSH1 0x0
0x995 DUP1
0x996 REVERT
0x997 JUMPDEST
0x998 DUP1
0x999 PUSH1 0x4
0x99b DUP2
0x99c SWAP1
0x99d SSTORE
0x99e POP
0x99f POP
0x9a0 JUMP
0x9a1 JUMPDEST
0x9a2 PUSH1 0x2
0x9a4 SLOAD
0x9a5 DUP2
0x9a6 JUMP
0x9a7 STOP
0x9a8 LOG1
0x9a9 PUSH6 0x627a7a723058
0x9b0 SHA3
0x9b1 MISSING 0x28
0x9b2 MISSING 0xab
0x9b3 ADDMOD
0x9b4 PUSH25 0x72668a37ab0f28f822d3c793a83c92e33e8f7d8b568e9161ed
0x9ce MISSING 0xb9
0x9cf ADDRESS
0x9d0 PUSH32 0x29
---
0x993: V551 = 0x0
0x996: REVERT 0x0 0x0
0x997: JUMPDEST 
0x999: V552 = 0x4
0x99d: S[0x4] = S0
0x9a0: JUMP S1
0x9a1: JUMPDEST 
0x9a2: V553 = 0x2
0x9a4: V554 = S[0x2]
0x9a6: JUMP S0
0x9a7: STOP 
0x9a8: LOG S0 S1 S2
0x9a9: V555 = 0x627a7a723058
0x9b0: V556 = SHA3 0x627a7a723058 S3
0x9b1: MISSING 0x28
0x9b2: MISSING 0xab
0x9b3: V557 = ADDMOD S0 S1 S2
0x9b4: V558 = 0x72668a37ab0f28f822d3c793a83c92e33e8f7d8b568e9161ed
0x9ce: MISSING 0xb9
0x9cf: V559 = ADDRESS
0x9d0: V560 = 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V554, S0, V556, 0x72668a37ab0f28f822d3c793a83c92e33e8f7d8b568e9161ed, V557, 0x29, V559]
Exit stack: []

================================

Function 0:
Public function signature: 0x8da5cb5b
Entry block: 0x44
Exit block: 0x56
Body: 0x44, 0x4b, 0x4f, 0x56, 0x98

Function 1:
Public fallback function
Entry block: 0x3f
Exit block: 0x3f
Body: 0x3f

