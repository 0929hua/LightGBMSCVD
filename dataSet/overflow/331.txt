Block 0x0
[0x0:0x1f]
---
Predecessors: []
Successors: []
---
0x0 PUSH20 0x0
0x15 ADDRESS
0x16 EQ
0x17 PUSH1 0x80
0x19 PUSH1 0x40
0x1b MSTORE
0x1c PUSH1 0x0
0x1e DUP1
0x1f REVERT
---
0x0: V0 = 0x0
0x15: V1 = ADDRESS
0x16: V2 = EQ V1 0x0
0x17: V3 = 0x80
0x19: V4 = 0x40
0x1b: M[0x40] = 0x80
0x1c: V5 = 0x0
0x1f: REVERT 0x0 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: [V2]
Exit stack: [V2]

================================

Block 0x20
[0x20:0x38]
---
Predecessors: []
Successors: [0x39]
Has unresolved jump.
---
0x20 STOP
0x21 LOG1
0x22 PUSH6 0x627a7a723058
0x29 SHA3
0x2a MISSING 0xce
0x2b PUSH7 0x356a0cf75633b7
0x33 ADD
0x34 DUP15
0x35 CREATE
0x36 MISSING 0xde
0x37 MISSING 0xe
0x38 JUMPI
---
0x20: STOP 
0x21: LOG S0 S1 S2
0x22: V6 = 0x627a7a723058
0x29: V7 = SHA3 0x627a7a723058 S3
0x2a: MISSING 0xce
0x2b: V8 = 0x356a0cf75633b7
0x33: V9 = ADD 0x356a0cf75633b7 S0
0x35: V10 = CREATE S14 V9 S1
0x36: MISSING 0xde
0x37: MISSING 0xe
0x38: JUMPI S0 S1
---
Entry stack: []
Stack pops: 0
Stack additions: [V7, V10, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14]
Exit stack: []

================================

Block 0x39
[0x39:0x58]
---
Predecessors: [0x20]
Successors: [0x59]
---
0x39 DIFFICULTY
0x3a SWAP10
0x3b EXTCODECOPY
0x3c PUSH22 0xf712a2603a5a93a47b73cab450002960806040526004
0x53 CALLDATASIZE
0x54 LT
0x55 PUSH2 0x78
0x58 JUMPI
---
0x39: V11 = DIFFICULTY
0x3b: EXTCODECOPY S9 S0 S1 S2
0x3c: V12 = 0xf712a2603a5a93a47b73cab450002960806040526004
0x53: V13 = CALLDATASIZE
0x54: V14 = LT V13 0xf712a2603a5a93a47b73cab450002960806040526004
0x55: V15 = 0x78
0x58: THROWI V14
---
Entry stack: []
Stack pops: 10
Stack additions: [V11, S8, S7, S6, S5, S4, S3]
Exit stack: [V11, S8, S7, S6, S5, S4, S3]

================================

Block 0x59
[0x59:0x8c]
---
Predecessors: [0x39]
Successors: [0x8d]
---
0x59 PUSH1 0x0
0x5b CALLDATALOAD
0x5c PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x7a SWAP1
0x7b DIV
0x7c PUSH4 0xffffffff
0x81 AND
0x82 DUP1
0x83 PUSH4 0x8ae4b0c
0x88 EQ
0x89 PUSH2 0x293
0x8c JUMPI
---
0x59: V16 = 0x0
0x5b: V17 = CALLDATALOAD 0x0
0x5c: V18 = 0x100000000000000000000000000000000000000000000000000000000
0x7b: V19 = DIV V17 0x100000000000000000000000000000000000000000000000000000000
0x7c: V20 = 0xffffffff
0x81: V21 = AND 0xffffffff V19
0x83: V22 = 0x8ae4b0c
0x88: V23 = EQ 0x8ae4b0c V21
0x89: V24 = 0x293
0x8c: THROWI V23
---
Entry stack: [V11, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [V21]
Exit stack: [V11, S5, S4, S3, S2, S1, S0, V21]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x59]
Successors: [0x98]
---
0x8d DUP1
0x8e PUSH4 0x11aee380
0x93 EQ
0x94 PUSH2 0x2f1
0x97 JUMPI
---
0x8e: V25 = 0x11aee380
0x93: V26 = EQ 0x11aee380 V21
0x94: V27 = 0x2f1
0x97: THROWI V26
---
Entry stack: [V11, S6, S5, S4, S3, S2, S1, V21]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, S6, S5, S4, S3, S2, S1, V21]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x8d]
Successors: [0xa3]
---
0x98 DUP1
0x99 PUSH4 0x3ccfd60b
0x9e EQ
0x9f PUSH2 0x324
0xa2 JUMPI
---
0x99: V28 = 0x3ccfd60b
0x9e: V29 = EQ 0x3ccfd60b V21
0x9f: V30 = 0x324
0xa2: THROWI V29
---
Entry stack: [V11, S6, S5, S4, S3, S2, S1, V21]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, S6, S5, S4, S3, S2, S1, V21]

================================

Block 0xa3
[0xa3:0xad]
---
Predecessors: [0x98]
Successors: [0xae]
---
0xa3 DUP1
0xa4 PUSH4 0xc4cb291e
0xa9 EQ
0xaa PUSH2 0x33b
0xad JUMPI
---
0xa4: V31 = 0xc4cb291e
0xa9: V32 = EQ 0xc4cb291e V21
0xaa: V33 = 0x33b
0xad: THROWI V32
---
Entry stack: [V11, S6, S5, S4, S3, S2, S1, V21]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, S6, S5, S4, S3, S2, S1, V21]

================================

Block 0xae
[0xae:0xb8]
---
Predecessors: [0xa3]
Successors: [0xb9]
---
0xae DUP1
0xaf PUSH4 0xe3f6b544
0xb4 EQ
0xb5 PUSH2 0x366
0xb8 JUMPI
---
0xaf: V34 = 0xe3f6b544
0xb4: V35 = EQ 0xe3f6b544 V21
0xb5: V36 = 0x366
0xb8: THROWI V35
---
Entry stack: [V11, S6, S5, S4, S3, S2, S1, V21]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, S6, S5, S4, S3, S2, S1, V21]

================================

Block 0xb9
[0xb9:0xc3]
---
Predecessors: [0xae]
Successors: [0xc4]
---
0xb9 DUP1
0xba PUSH4 0xf12b3f02
0xbf EQ
0xc0 PUSH2 0x395
0xc3 JUMPI
---
0xba: V37 = 0xf12b3f02
0xbf: V38 = EQ 0xf12b3f02 V21
0xc0: V39 = 0x395
0xc3: THROWI V38
---
Entry stack: [V11, S6, S5, S4, S3, S2, S1, V21]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, S6, S5, S4, S3, S2, S1, V21]

================================

Block 0xc4
[0xc4:0xc9]
---
Predecessors: [0xb9]
Successors: [0xca]
---
0xc4 JUMPDEST
0xc5 PUSH1 0x0
0xc7 DUP1
0xc8 SWAP1
0xc9 POP
---
0xc4: JUMPDEST 
0xc5: V40 = 0x0
---
Entry stack: [V11, S6, S5, S4, S3, S2, S1, V21]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, S6, S5, S4, S3, S2, S1, V21, 0x0]

================================

Block 0xca
[0xca:0xd7]
---
Predecessors: [0xc4]
Successors: [0xd8]
---
0xca JUMPDEST
0xcb PUSH1 0x2
0xcd DUP1
0xce SLOAD
0xcf SWAP1
0xd0 POP
0xd1 DUP2
0xd2 LT
0xd3 ISZERO
0xd4 PUSH2 0x242
0xd7 JUMPI
---
0xca: JUMPDEST 
0xcb: V41 = 0x2
0xce: V42 = S[0x2]
0xd2: V43 = LT 0x0 V42
0xd3: V44 = ISZERO V43
0xd4: V45 = 0x242
0xd7: THROWI V44
---
Entry stack: [V11, S7, S6, S5, S4, S3, S2, V21, 0x0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, S7, S6, S5, S4, S3, S2, V21, 0x0]

================================

Block 0xd8
[0xd8:0xf3]
---
Predecessors: [0xca]
Successors: [0xf4]
---
0xd8 PUSH2 0x1b7
0xdb PUSH2 0x12e
0xde PUSH1 0x64
0xe0 PUSH2 0x120
0xe3 CALLVALUE
0xe4 PUSH1 0x0
0xe6 DUP1
0xe7 PUSH1 0x2
0xe9 DUP9
0xea DUP2
0xeb SLOAD
0xec DUP2
0xed LT
0xee ISZERO
0xef ISZERO
0xf0 PUSH2 0xa9
0xf3 JUMPI
---
0xd8: V46 = 0x1b7
0xdb: V47 = 0x12e
0xde: V48 = 0x64
0xe0: V49 = 0x120
0xe3: V50 = CALLVALUE
0xe4: V51 = 0x0
0xe7: V52 = 0x2
0xeb: V53 = S[0x2]
0xed: V54 = LT 0x0 V53
0xee: V55 = ISZERO V54
0xef: V56 = ISZERO V55
0xf0: V57 = 0xa9
0xf3: THROWI V56
---
Entry stack: [V11, S7, S6, S5, S4, S3, S2, V21, 0x0]
Stack pops: 1
Stack additions: [S0, 0x1b7, 0x12e, 0x64, 0x120, V50, 0x0, 0x0, 0x2, S0]
Exit stack: [V11, S7, S6, S5, S4, S3, S2, V21, 0x0, 0x1b7, 0x12e, 0x64, 0x120, V50, 0x0, 0x0, 0x2, 0x0]

================================

Block 0xf4
[0xf4:0x18a]
---
Predecessors: [0xd8]
Successors: [0x18b]
---
0xf4 INVALID
0xf5 JUMPDEST
0xf6 SWAP1
0xf7 PUSH1 0x0
0xf9 MSTORE
0xfa PUSH1 0x20
0xfc PUSH1 0x0
0xfe SHA3
0xff ADD
0x100 PUSH1 0x0
0x102 SWAP1
0x103 SLOAD
0x104 SWAP1
0x105 PUSH2 0x100
0x108 EXP
0x109 SWAP1
0x10a DIV
0x10b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x120 AND
0x121 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x136 AND
0x137 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14c AND
0x14d DUP2
0x14e MSTORE
0x14f PUSH1 0x20
0x151 ADD
0x152 SWAP1
0x153 DUP2
0x154 MSTORE
0x155 PUSH1 0x20
0x157 ADD
0x158 PUSH1 0x0
0x15a SHA3
0x15b PUSH1 0x0
0x15d ADD
0x15e SLOAD
0x15f PUSH2 0x402
0x162 SWAP1
0x163 SWAP2
0x164 SWAP1
0x165 PUSH4 0xffffffff
0x16a AND
0x16b JUMP
0x16c JUMPDEST
0x16d PUSH2 0x43a
0x170 SWAP1
0x171 SWAP2
0x172 SWAP1
0x173 PUSH4 0xffffffff
0x178 AND
0x179 JUMP
0x17a JUMPDEST
0x17b PUSH1 0x0
0x17d DUP1
0x17e PUSH1 0x2
0x180 DUP6
0x181 DUP2
0x182 SLOAD
0x183 DUP2
0x184 LT
0x185 ISZERO
0x186 ISZERO
0x187 PUSH2 0x140
0x18a JUMPI
---
0xf4: INVALID 
0xf5: JUMPDEST 
0xf7: V58 = 0x0
0xf9: M[0x0] = S1
0xfa: V59 = 0x20
0xfc: V60 = 0x0
0xfe: V61 = SHA3 0x0 0x20
0xff: V62 = ADD V61 S0
0x100: V63 = 0x0
0x103: V64 = S[V62]
0x105: V65 = 0x100
0x108: V66 = EXP 0x100 0x0
0x10a: V67 = DIV V64 0x1
0x10b: V68 = 0xffffffffffffffffffffffffffffffffffffffff
0x120: V69 = AND 0xffffffffffffffffffffffffffffffffffffffff V67
0x121: V70 = 0xffffffffffffffffffffffffffffffffffffffff
0x136: V71 = AND 0xffffffffffffffffffffffffffffffffffffffff V69
0x137: V72 = 0xffffffffffffffffffffffffffffffffffffffff
0x14c: V73 = AND 0xffffffffffffffffffffffffffffffffffffffff V71
0x14e: M[S2] = V73
0x14f: V74 = 0x20
0x151: V75 = ADD 0x20 S2
0x154: M[V75] = S3
0x155: V76 = 0x20
0x157: V77 = ADD 0x20 V75
0x158: V78 = 0x0
0x15a: V79 = SHA3 0x0 V77
0x15b: V80 = 0x0
0x15d: V81 = ADD 0x0 V79
0x15e: V82 = S[V81]
0x15f: V83 = 0x402
0x165: V84 = 0xffffffff
0x16a: V85 = AND 0xffffffff 0x402
0x16b: THROW 
0x16c: JUMPDEST 
0x16d: V86 = 0x43a
0x173: V87 = 0xffffffff
0x178: V88 = AND 0xffffffff 0x43a
0x179: THROW 
0x17a: JUMPDEST 
0x17b: V89 = 0x0
0x17e: V90 = 0x2
0x182: V91 = S[0x2]
0x184: V92 = LT S2 V91
0x185: V93 = ISZERO V92
0x186: V94 = ISZERO V93
0x187: V95 = 0x140
0x18a: THROWI V94
---
Entry stack: [V11, S16, S15, S14, S13, S12, S11, V21, 0x0, 0x1b7, 0x12e, 0x64, 0x120, V50, 0x0, 0x0, 0x2, 0x0]
Stack pops: 0
Stack additions: [S4, V82, S1, S0, S2, 0x2, 0x0, 0x0, S0, S1, S2]
Exit stack: []

================================

Block 0x18b
[0x18b:0x213]
---
Predecessors: [0xf4]
Successors: [0x214]
---
0x18b INVALID
0x18c JUMPDEST
0x18d SWAP1
0x18e PUSH1 0x0
0x190 MSTORE
0x191 PUSH1 0x20
0x193 PUSH1 0x0
0x195 SHA3
0x196 ADD
0x197 PUSH1 0x0
0x199 SWAP1
0x19a SLOAD
0x19b SWAP1
0x19c PUSH2 0x100
0x19f EXP
0x1a0 SWAP1
0x1a1 DIV
0x1a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b7 AND
0x1b8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1cd AND
0x1ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e3 AND
0x1e4 DUP2
0x1e5 MSTORE
0x1e6 PUSH1 0x20
0x1e8 ADD
0x1e9 SWAP1
0x1ea DUP2
0x1eb MSTORE
0x1ec PUSH1 0x20
0x1ee ADD
0x1ef PUSH1 0x0
0x1f1 SHA3
0x1f2 PUSH1 0x1
0x1f4 ADD
0x1f5 SLOAD
0x1f6 PUSH2 0x450
0x1f9 SWAP1
0x1fa SWAP2
0x1fb SWAP1
0x1fc PUSH4 0xffffffff
0x201 AND
0x202 JUMP
0x203 JUMPDEST
0x204 PUSH1 0x0
0x206 DUP1
0x207 PUSH1 0x2
0x209 DUP5
0x20a DUP2
0x20b SLOAD
0x20c DUP2
0x20d LT
0x20e ISZERO
0x20f ISZERO
0x210 PUSH2 0x1c9
0x213 JUMPI
---
0x18b: INVALID 
0x18c: JUMPDEST 
0x18e: V96 = 0x0
0x190: M[0x0] = S1
0x191: V97 = 0x20
0x193: V98 = 0x0
0x195: V99 = SHA3 0x0 0x20
0x196: V100 = ADD V99 S0
0x197: V101 = 0x0
0x19a: V102 = S[V100]
0x19c: V103 = 0x100
0x19f: V104 = EXP 0x100 0x0
0x1a1: V105 = DIV V102 0x1
0x1a2: V106 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b7: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V105
0x1b8: V108 = 0xffffffffffffffffffffffffffffffffffffffff
0x1cd: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff V107
0x1ce: V110 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e3: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x1e5: M[S2] = V111
0x1e6: V112 = 0x20
0x1e8: V113 = ADD 0x20 S2
0x1eb: M[V113] = S3
0x1ec: V114 = 0x20
0x1ee: V115 = ADD 0x20 V113
0x1ef: V116 = 0x0
0x1f1: V117 = SHA3 0x0 V115
0x1f2: V118 = 0x1
0x1f4: V119 = ADD 0x1 V117
0x1f5: V120 = S[V119]
0x1f6: V121 = 0x450
0x1fc: V122 = 0xffffffff
0x201: V123 = AND 0xffffffff 0x450
0x202: THROW 
0x203: JUMPDEST 
0x204: V124 = 0x0
0x207: V125 = 0x2
0x20b: V126 = S[0x2]
0x20d: V127 = LT S1 V126
0x20e: V128 = ISZERO V127
0x20f: V129 = ISZERO V128
0x210: V130 = 0x1c9
0x213: THROWI V129
---
Entry stack: [S6, S5, S4, 0x0, 0x0, 0x2, S0]
Stack pops: 0
Stack additions: [S4, V120, S1, 0x2, 0x0, 0x0, S0, S1]
Exit stack: []

================================

Block 0x214
[0x214:0x2e6]
---
Predecessors: [0x18b]
Successors: [0x2e7]
---
0x214 INVALID
0x215 JUMPDEST
0x216 SWAP1
0x217 PUSH1 0x0
0x219 MSTORE
0x21a PUSH1 0x20
0x21c PUSH1 0x0
0x21e SHA3
0x21f ADD
0x220 PUSH1 0x0
0x222 SWAP1
0x223 SLOAD
0x224 SWAP1
0x225 PUSH2 0x100
0x228 EXP
0x229 SWAP1
0x22a DIV
0x22b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x240 AND
0x241 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x256 AND
0x257 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x26c AND
0x26d DUP2
0x26e MSTORE
0x26f PUSH1 0x20
0x271 ADD
0x272 SWAP1
0x273 DUP2
0x274 MSTORE
0x275 PUSH1 0x20
0x277 ADD
0x278 PUSH1 0x0
0x27a SHA3
0x27b PUSH1 0x1
0x27d ADD
0x27e DUP2
0x27f SWAP1
0x280 SSTORE
0x281 POP
0x282 DUP1
0x283 DUP1
0x284 PUSH1 0x1
0x286 ADD
0x287 SWAP2
0x288 POP
0x289 POP
0x28a PUSH2 0x7e
0x28d JUMP
0x28e JUMPDEST
0x28f CALLER
0x290 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a5 AND
0x2a6 PUSH32 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
0x2c7 CALLVALUE
0x2c8 PUSH1 0x40
0x2ca MLOAD
0x2cb DUP1
0x2cc DUP3
0x2cd DUP2
0x2ce MSTORE
0x2cf PUSH1 0x20
0x2d1 ADD
0x2d2 SWAP2
0x2d3 POP
0x2d4 POP
0x2d5 PUSH1 0x40
0x2d7 MLOAD
0x2d8 DUP1
0x2d9 SWAP2
0x2da SUB
0x2db SWAP1
0x2dc LOG2
0x2dd POP
0x2de STOP
0x2df JUMPDEST
0x2e0 CALLVALUE
0x2e1 DUP1
0x2e2 ISZERO
0x2e3 PUSH2 0x29f
0x2e6 JUMPI
---
0x214: INVALID 
0x215: JUMPDEST 
0x217: V131 = 0x0
0x219: M[0x0] = S1
0x21a: V132 = 0x20
0x21c: V133 = 0x0
0x21e: V134 = SHA3 0x0 0x20
0x21f: V135 = ADD V134 S0
0x220: V136 = 0x0
0x223: V137 = S[V135]
0x225: V138 = 0x100
0x228: V139 = EXP 0x100 0x0
0x22a: V140 = DIV V137 0x1
0x22b: V141 = 0xffffffffffffffffffffffffffffffffffffffff
0x240: V142 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x241: V143 = 0xffffffffffffffffffffffffffffffffffffffff
0x256: V144 = AND 0xffffffffffffffffffffffffffffffffffffffff V142
0x257: V145 = 0xffffffffffffffffffffffffffffffffffffffff
0x26c: V146 = AND 0xffffffffffffffffffffffffffffffffffffffff V144
0x26e: M[S2] = V146
0x26f: V147 = 0x20
0x271: V148 = ADD 0x20 S2
0x274: M[V148] = S3
0x275: V149 = 0x20
0x277: V150 = ADD 0x20 V148
0x278: V151 = 0x0
0x27a: V152 = SHA3 0x0 V150
0x27b: V153 = 0x1
0x27d: V154 = ADD 0x1 V152
0x280: S[V154] = S4
0x284: V155 = 0x1
0x286: V156 = ADD 0x1 S5
0x28a: V157 = 0x7e
0x28d: THROW 
0x28e: JUMPDEST 
0x28f: V158 = CALLER
0x290: V159 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a5: V160 = AND 0xffffffffffffffffffffffffffffffffffffffff V158
0x2a6: V161 = 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
0x2c7: V162 = CALLVALUE
0x2c8: V163 = 0x40
0x2ca: V164 = M[0x40]
0x2ce: M[V164] = V162
0x2cf: V165 = 0x20
0x2d1: V166 = ADD 0x20 V164
0x2d5: V167 = 0x40
0x2d7: V168 = M[0x40]
0x2da: V169 = SUB V166 V168
0x2dc: LOG V168 V169 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c V160
0x2de: STOP 
0x2df: JUMPDEST 
0x2e0: V170 = CALLVALUE
0x2e2: V171 = ISZERO V170
0x2e3: V172 = 0x29f
0x2e6: THROWI V171
---
Entry stack: [S5, S4, 0x0, 0x0, 0x2, S0]
Stack pops: 0
Stack additions: [V156, V170]
Exit stack: []

================================

Block 0x2e7
[0x2e7:0x344]
---
Predecessors: [0x214]
Successors: [0x345]
---
0x2e7 PUSH1 0x0
0x2e9 DUP1
0x2ea REVERT
0x2eb JUMPDEST
0x2ec POP
0x2ed PUSH2 0x2d4
0x2f0 PUSH1 0x4
0x2f2 DUP1
0x2f3 CALLDATASIZE
0x2f4 SUB
0x2f5 DUP2
0x2f6 ADD
0x2f7 SWAP1
0x2f8 DUP1
0x2f9 DUP1
0x2fa CALLDATALOAD
0x2fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x310 AND
0x311 SWAP1
0x312 PUSH1 0x20
0x314 ADD
0x315 SWAP1
0x316 SWAP3
0x317 SWAP2
0x318 SWAP1
0x319 POP
0x31a POP
0x31b POP
0x31c PUSH2 0x46c
0x31f JUMP
0x320 JUMPDEST
0x321 PUSH1 0x40
0x323 MLOAD
0x324 DUP1
0x325 DUP4
0x326 DUP2
0x327 MSTORE
0x328 PUSH1 0x20
0x32a ADD
0x32b DUP3
0x32c DUP2
0x32d MSTORE
0x32e PUSH1 0x20
0x330 ADD
0x331 SWAP3
0x332 POP
0x333 POP
0x334 POP
0x335 PUSH1 0x40
0x337 MLOAD
0x338 DUP1
0x339 SWAP2
0x33a SUB
0x33b SWAP1
0x33c RETURN
0x33d JUMPDEST
0x33e CALLVALUE
0x33f DUP1
0x340 ISZERO
0x341 PUSH2 0x2fd
0x344 JUMPI
---
0x2e7: V173 = 0x0
0x2ea: REVERT 0x0 0x0
0x2eb: JUMPDEST 
0x2ed: V174 = 0x2d4
0x2f0: V175 = 0x4
0x2f3: V176 = CALLDATASIZE
0x2f4: V177 = SUB V176 0x4
0x2f6: V178 = ADD 0x4 V177
0x2fa: V179 = CALLDATALOAD 0x4
0x2fb: V180 = 0xffffffffffffffffffffffffffffffffffffffff
0x310: V181 = AND 0xffffffffffffffffffffffffffffffffffffffff V179
0x312: V182 = 0x20
0x314: V183 = ADD 0x20 0x4
0x31c: V184 = 0x46c
0x31f: THROW 
0x320: JUMPDEST 
0x321: V185 = 0x40
0x323: V186 = M[0x40]
0x327: M[V186] = S1
0x328: V187 = 0x20
0x32a: V188 = ADD 0x20 V186
0x32d: M[V188] = S0
0x32e: V189 = 0x20
0x330: V190 = ADD 0x20 V188
0x335: V191 = 0x40
0x337: V192 = M[0x40]
0x33a: V193 = SUB V190 V192
0x33c: RETURN V192 V193
0x33d: JUMPDEST 
0x33e: V194 = CALLVALUE
0x340: V195 = ISZERO V194
0x341: V196 = 0x2fd
0x344: THROWI V195
---
Entry stack: [V170]
Stack pops: 0
Stack additions: [V181, 0x2d4, V194]
Exit stack: []

================================

Block 0x345
[0x345:0x377]
---
Predecessors: [0x2e7]
Successors: [0x378]
---
0x345 PUSH1 0x0
0x347 DUP1
0x348 REVERT
0x349 JUMPDEST
0x34a POP
0x34b PUSH2 0x306
0x34e PUSH2 0x490
0x351 JUMP
0x352 JUMPDEST
0x353 PUSH1 0x40
0x355 MLOAD
0x356 DUP1
0x357 DUP3
0x358 PUSH2 0xffff
0x35b AND
0x35c PUSH2 0xffff
0x35f AND
0x360 DUP2
0x361 MSTORE
0x362 PUSH1 0x20
0x364 ADD
0x365 SWAP2
0x366 POP
0x367 POP
0x368 PUSH1 0x40
0x36a MLOAD
0x36b DUP1
0x36c SWAP2
0x36d SUB
0x36e SWAP1
0x36f RETURN
0x370 JUMPDEST
0x371 CALLVALUE
0x372 DUP1
0x373 ISZERO
0x374 PUSH2 0x330
0x377 JUMPI
---
0x345: V197 = 0x0
0x348: REVERT 0x0 0x0
0x349: JUMPDEST 
0x34b: V198 = 0x306
0x34e: V199 = 0x490
0x351: THROW 
0x352: JUMPDEST 
0x353: V200 = 0x40
0x355: V201 = M[0x40]
0x358: V202 = 0xffff
0x35b: V203 = AND 0xffff S0
0x35c: V204 = 0xffff
0x35f: V205 = AND 0xffff V203
0x361: M[V201] = V205
0x362: V206 = 0x20
0x364: V207 = ADD 0x20 V201
0x368: V208 = 0x40
0x36a: V209 = M[0x40]
0x36d: V210 = SUB V207 V209
0x36f: RETURN V209 V210
0x370: JUMPDEST 
0x371: V211 = CALLVALUE
0x373: V212 = ISZERO V211
0x374: V213 = 0x330
0x377: THROWI V212
---
Entry stack: [V194]
Stack pops: 0
Stack additions: [0x306, V211]
Exit stack: []

================================

Block 0x378
[0x378:0x38e]
---
Predecessors: [0x345]
Successors: [0x38f]
---
0x378 PUSH1 0x0
0x37a DUP1
0x37b REVERT
0x37c JUMPDEST
0x37d POP
0x37e PUSH2 0x339
0x381 PUSH2 0x4a4
0x384 JUMP
0x385 JUMPDEST
0x386 STOP
0x387 JUMPDEST
0x388 CALLVALUE
0x389 DUP1
0x38a ISZERO
0x38b PUSH2 0x347
0x38e JUMPI
---
0x378: V214 = 0x0
0x37b: REVERT 0x0 0x0
0x37c: JUMPDEST 
0x37e: V215 = 0x339
0x381: V216 = 0x4a4
0x384: THROW 
0x385: JUMPDEST 
0x386: STOP 
0x387: JUMPDEST 
0x388: V217 = CALLVALUE
0x38a: V218 = ISZERO V217
0x38b: V219 = 0x347
0x38e: THROWI V218
---
Entry stack: [V211]
Stack pops: 0
Stack additions: [0x339, V217]
Exit stack: []

================================

Block 0x38f
[0x38f:0x3b9]
---
Predecessors: [0x378]
Successors: [0x3ba]
---
0x38f PUSH1 0x0
0x391 DUP1
0x392 REVERT
0x393 JUMPDEST
0x394 POP
0x395 PUSH2 0x350
0x398 PUSH2 0x6bb
0x39b JUMP
0x39c JUMPDEST
0x39d PUSH1 0x40
0x39f MLOAD
0x3a0 DUP1
0x3a1 DUP3
0x3a2 DUP2
0x3a3 MSTORE
0x3a4 PUSH1 0x20
0x3a6 ADD
0x3a7 SWAP2
0x3a8 POP
0x3a9 POP
0x3aa PUSH1 0x40
0x3ac MLOAD
0x3ad DUP1
0x3ae SWAP2
0x3af SUB
0x3b0 SWAP1
0x3b1 RETURN
0x3b2 JUMPDEST
0x3b3 CALLVALUE
0x3b4 DUP1
0x3b5 ISZERO
0x3b6 PUSH2 0x372
0x3b9 JUMPI
---
0x38f: V220 = 0x0
0x392: REVERT 0x0 0x0
0x393: JUMPDEST 
0x395: V221 = 0x350
0x398: V222 = 0x6bb
0x39b: THROW 
0x39c: JUMPDEST 
0x39d: V223 = 0x40
0x39f: V224 = M[0x40]
0x3a3: M[V224] = S0
0x3a4: V225 = 0x20
0x3a6: V226 = ADD 0x20 V224
0x3aa: V227 = 0x40
0x3ac: V228 = M[0x40]
0x3af: V229 = SUB V226 V228
0x3b1: RETURN V228 V229
0x3b2: JUMPDEST 
0x3b3: V230 = CALLVALUE
0x3b5: V231 = ISZERO V230
0x3b6: V232 = 0x372
0x3b9: THROWI V231
---
Entry stack: [V217]
Stack pops: 0
Stack additions: [0x350, V230]
Exit stack: []

================================

Block 0x3ba
[0x3ba:0x3e8]
---
Predecessors: [0x38f]
Successors: [0x3e9]
---
0x3ba PUSH1 0x0
0x3bc DUP1
0x3bd REVERT
0x3be JUMPDEST
0x3bf POP
0x3c0 PUSH2 0x37b
0x3c3 PUSH2 0x717
0x3c6 JUMP
0x3c7 JUMPDEST
0x3c8 PUSH1 0x40
0x3ca MLOAD
0x3cb DUP1
0x3cc DUP3
0x3cd ISZERO
0x3ce ISZERO
0x3cf ISZERO
0x3d0 ISZERO
0x3d1 DUP2
0x3d2 MSTORE
0x3d3 PUSH1 0x20
0x3d5 ADD
0x3d6 SWAP2
0x3d7 POP
0x3d8 POP
0x3d9 PUSH1 0x40
0x3db MLOAD
0x3dc DUP1
0x3dd SWAP2
0x3de SUB
0x3df SWAP1
0x3e0 RETURN
0x3e1 JUMPDEST
0x3e2 CALLVALUE
0x3e3 DUP1
0x3e4 ISZERO
0x3e5 PUSH2 0x3a1
0x3e8 JUMPI
---
0x3ba: V233 = 0x0
0x3bd: REVERT 0x0 0x0
0x3be: JUMPDEST 
0x3c0: V234 = 0x37b
0x3c3: V235 = 0x717
0x3c6: THROW 
0x3c7: JUMPDEST 
0x3c8: V236 = 0x40
0x3ca: V237 = M[0x40]
0x3cd: V238 = ISZERO S0
0x3ce: V239 = ISZERO V238
0x3cf: V240 = ISZERO V239
0x3d0: V241 = ISZERO V240
0x3d2: M[V237] = V241
0x3d3: V242 = 0x20
0x3d5: V243 = ADD 0x20 V237
0x3d9: V244 = 0x40
0x3db: V245 = M[0x40]
0x3de: V246 = SUB V243 V245
0x3e0: RETURN V245 V246
0x3e1: JUMPDEST 
0x3e2: V247 = CALLVALUE
0x3e4: V248 = ISZERO V247
0x3e5: V249 = 0x3a1
0x3e8: THROWI V248
---
Entry stack: [V230]
Stack pops: 0
Stack additions: [0x37b, V247]
Exit stack: []

================================

Block 0x3e9
[0x3e9:0x458]
---
Predecessors: [0x3ba]
Successors: [0x459]
---
0x3e9 PUSH1 0x0
0x3eb DUP1
0x3ec REVERT
0x3ed JUMPDEST
0x3ee POP
0x3ef PUSH2 0x3c0
0x3f2 PUSH1 0x4
0x3f4 DUP1
0x3f5 CALLDATASIZE
0x3f6 SUB
0x3f7 DUP2
0x3f8 ADD
0x3f9 SWAP1
0x3fa DUP1
0x3fb DUP1
0x3fc CALLDATALOAD
0x3fd SWAP1
0x3fe PUSH1 0x20
0x400 ADD
0x401 SWAP1
0x402 SWAP3
0x403 SWAP2
0x404 SWAP1
0x405 POP
0x406 POP
0x407 POP
0x408 PUSH2 0x764
0x40b JUMP
0x40c JUMPDEST
0x40d PUSH1 0x40
0x40f MLOAD
0x410 DUP1
0x411 DUP3
0x412 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x427 AND
0x428 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x43d AND
0x43e DUP2
0x43f MSTORE
0x440 PUSH1 0x20
0x442 ADD
0x443 SWAP2
0x444 POP
0x445 POP
0x446 PUSH1 0x40
0x448 MLOAD
0x449 DUP1
0x44a SWAP2
0x44b SUB
0x44c SWAP1
0x44d RETURN
0x44e JUMPDEST
0x44f PUSH1 0x0
0x451 DUP1
0x452 DUP4
0x453 EQ
0x454 ISZERO
0x455 PUSH2 0x415
0x458 JUMPI
---
0x3e9: V250 = 0x0
0x3ec: REVERT 0x0 0x0
0x3ed: JUMPDEST 
0x3ef: V251 = 0x3c0
0x3f2: V252 = 0x4
0x3f5: V253 = CALLDATASIZE
0x3f6: V254 = SUB V253 0x4
0x3f8: V255 = ADD 0x4 V254
0x3fc: V256 = CALLDATALOAD 0x4
0x3fe: V257 = 0x20
0x400: V258 = ADD 0x20 0x4
0x408: V259 = 0x764
0x40b: THROW 
0x40c: JUMPDEST 
0x40d: V260 = 0x40
0x40f: V261 = M[0x40]
0x412: V262 = 0xffffffffffffffffffffffffffffffffffffffff
0x427: V263 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x428: V264 = 0xffffffffffffffffffffffffffffffffffffffff
0x43d: V265 = AND 0xffffffffffffffffffffffffffffffffffffffff V263
0x43f: M[V261] = V265
0x440: V266 = 0x20
0x442: V267 = ADD 0x20 V261
0x446: V268 = 0x40
0x448: V269 = M[0x40]
0x44b: V270 = SUB V267 V269
0x44d: RETURN V269 V270
0x44e: JUMPDEST 
0x44f: V271 = 0x0
0x453: V272 = EQ S1 0x0
0x454: V273 = ISZERO V272
0x455: V274 = 0x415
0x458: THROWI V273
---
Entry stack: [V247]
Stack pops: 0
Stack additions: [V256, 0x3c0, 0x0, S0, S1]
Exit stack: []

================================

Block 0x459
[0x459:0x470]
---
Predecessors: [0x3e9]
Successors: [0x471]
---
0x459 PUSH1 0x0
0x45b SWAP1
0x45c POP
0x45d PUSH2 0x434
0x460 JUMP
0x461 JUMPDEST
0x462 DUP2
0x463 DUP4
0x464 MUL
0x465 SWAP1
0x466 POP
0x467 DUP2
0x468 DUP4
0x469 DUP3
0x46a DUP2
0x46b ISZERO
0x46c ISZERO
0x46d PUSH2 0x426
0x470 JUMPI
---
0x459: V275 = 0x0
0x45d: V276 = 0x434
0x460: THROW 
0x461: JUMPDEST 
0x464: V277 = MUL S2 S1
0x46b: V278 = ISZERO S2
0x46c: V279 = ISZERO V278
0x46d: V280 = 0x426
0x470: THROWI V279
---
Entry stack: [S2, S1, 0x0]
Stack pops: 1
Stack additions: [V277, S2, S1, V277, S1, S2]
Exit stack: []

================================

Block 0x471
[0x471:0x47a]
---
Predecessors: [0x459]
Successors: [0x47b]
---
0x471 INVALID
0x472 JUMPDEST
0x473 DIV
0x474 EQ
0x475 ISZERO
0x476 ISZERO
0x477 PUSH2 0x430
0x47a JUMPI
---
0x471: INVALID 
0x472: JUMPDEST 
0x473: V281 = DIV S0 S1
0x474: V282 = EQ V281 S2
0x475: V283 = ISZERO V282
0x476: V284 = ISZERO V283
0x477: V285 = 0x430
0x47a: THROWI V284
---
Entry stack: [S5, S4, V277, S2, S1, V277]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x47b
[0x47b:0x47f]
---
Predecessors: [0x471]
Successors: [0x480]
---
0x47b INVALID
0x47c JUMPDEST
0x47d DUP1
0x47e SWAP1
0x47f POP
---
0x47b: INVALID 
0x47c: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x480
[0x480:0x491]
---
Predecessors: [0x47b]
Successors: [0x492]
---
0x480 JUMPDEST
0x481 SWAP3
0x482 SWAP2
0x483 POP
0x484 POP
0x485 JUMP
0x486 JUMPDEST
0x487 PUSH1 0x0
0x489 DUP2
0x48a DUP4
0x48b DUP2
0x48c ISZERO
0x48d ISZERO
0x48e PUSH2 0x447
0x491 JUMPI
---
0x480: JUMPDEST 
0x485: JUMP S3
0x486: JUMPDEST 
0x487: V286 = 0x0
0x48c: V287 = ISZERO S0
0x48d: V288 = ISZERO V287
0x48e: V289 = 0x447
0x491: THROWI V288
---
Entry stack: [S0]
Stack pops: 7
Stack additions: [S1, S0, 0x0, S0, S1]
Exit stack: []

================================

Block 0x492
[0x492:0x4ad]
---
Predecessors: [0x480]
Successors: [0x4ae]
---
0x492 INVALID
0x493 JUMPDEST
0x494 DIV
0x495 SWAP1
0x496 POP
0x497 SWAP3
0x498 SWAP2
0x499 POP
0x49a POP
0x49b JUMP
0x49c JUMPDEST
0x49d PUSH1 0x0
0x49f DUP2
0x4a0 DUP4
0x4a1 ADD
0x4a2 SWAP1
0x4a3 POP
0x4a4 DUP3
0x4a5 DUP2
0x4a6 LT
0x4a7 ISZERO
0x4a8 ISZERO
0x4a9 ISZERO
0x4aa PUSH2 0x463
0x4ad JUMPI
---
0x492: INVALID 
0x493: JUMPDEST 
0x494: V290 = DIV S0 S1
0x49b: JUMP S5
0x49c: JUMPDEST 
0x49d: V291 = 0x0
0x4a1: V292 = ADD S1 S0
0x4a6: V293 = LT V292 S1
0x4a7: V294 = ISZERO V293
0x4a8: V295 = ISZERO V294
0x4a9: V296 = ISZERO V295
0x4aa: V297 = 0x463
0x4ad: THROWI V296
---
Entry stack: [S4, S3, 0x0, S1, S0]
Stack pops: 0
Stack additions: [V290, V292, S0, S1]
Exit stack: []

================================

Block 0x4ae
[0x4ae:0x53d]
---
Predecessors: [0x492]
Successors: [0x53e]
---
0x4ae INVALID
0x4af JUMPDEST
0x4b0 DUP1
0x4b1 SWAP1
0x4b2 POP
0x4b3 SWAP3
0x4b4 SWAP2
0x4b5 POP
0x4b6 POP
0x4b7 JUMP
0x4b8 JUMPDEST
0x4b9 PUSH1 0x0
0x4bb PUSH1 0x20
0x4bd MSTORE
0x4be DUP1
0x4bf PUSH1 0x0
0x4c1 MSTORE
0x4c2 PUSH1 0x40
0x4c4 PUSH1 0x0
0x4c6 SHA3
0x4c7 PUSH1 0x0
0x4c9 SWAP2
0x4ca POP
0x4cb SWAP1
0x4cc POP
0x4cd DUP1
0x4ce PUSH1 0x0
0x4d0 ADD
0x4d1 SLOAD
0x4d2 SWAP1
0x4d3 DUP1
0x4d4 PUSH1 0x1
0x4d6 ADD
0x4d7 SLOAD
0x4d8 SWAP1
0x4d9 POP
0x4da DUP3
0x4db JUMP
0x4dc JUMPDEST
0x4dd PUSH1 0x1
0x4df PUSH1 0x0
0x4e1 SWAP1
0x4e2 SLOAD
0x4e3 SWAP1
0x4e4 PUSH2 0x100
0x4e7 EXP
0x4e8 SWAP1
0x4e9 DIV
0x4ea PUSH2 0xffff
0x4ed AND
0x4ee DUP2
0x4ef JUMP
0x4f0 JUMPDEST
0x4f1 PUSH1 0x0
0x4f3 PUSH1 0x1
0x4f5 PUSH1 0x0
0x4f7 DUP1
0x4f8 CALLER
0x4f9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x50e AND
0x50f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x524 AND
0x525 DUP2
0x526 MSTORE
0x527 PUSH1 0x20
0x529 ADD
0x52a SWAP1
0x52b DUP2
0x52c MSTORE
0x52d PUSH1 0x20
0x52f ADD
0x530 PUSH1 0x0
0x532 SHA3
0x533 PUSH1 0x1
0x535 ADD
0x536 SLOAD
0x537 GT
0x538 ISZERO
0x539 ISZERO
0x53a PUSH2 0x585
0x53d JUMPI
---
0x4ae: INVALID 
0x4af: JUMPDEST 
0x4b7: JUMP S3
0x4b8: JUMPDEST 
0x4b9: V298 = 0x0
0x4bb: V299 = 0x20
0x4bd: M[0x20] = 0x0
0x4bf: V300 = 0x0
0x4c1: M[0x0] = S0
0x4c2: V301 = 0x40
0x4c4: V302 = 0x0
0x4c6: V303 = SHA3 0x0 0x40
0x4c7: V304 = 0x0
0x4ce: V305 = 0x0
0x4d0: V306 = ADD 0x0 V303
0x4d1: V307 = S[V306]
0x4d4: V308 = 0x1
0x4d6: V309 = ADD 0x1 V303
0x4d7: V310 = S[V309]
0x4db: JUMP S1
0x4dc: JUMPDEST 
0x4dd: V311 = 0x1
0x4df: V312 = 0x0
0x4e2: V313 = S[0x1]
0x4e4: V314 = 0x100
0x4e7: V315 = EXP 0x100 0x0
0x4e9: V316 = DIV V313 0x1
0x4ea: V317 = 0xffff
0x4ed: V318 = AND 0xffff V316
0x4ef: JUMP S0
0x4f0: JUMPDEST 
0x4f1: V319 = 0x0
0x4f3: V320 = 0x1
0x4f5: V321 = 0x0
0x4f8: V322 = CALLER
0x4f9: V323 = 0xffffffffffffffffffffffffffffffffffffffff
0x50e: V324 = AND 0xffffffffffffffffffffffffffffffffffffffff V322
0x50f: V325 = 0xffffffffffffffffffffffffffffffffffffffff
0x524: V326 = AND 0xffffffffffffffffffffffffffffffffffffffff V324
0x526: M[0x0] = V326
0x527: V327 = 0x20
0x529: V328 = ADD 0x20 0x0
0x52c: M[0x20] = 0x0
0x52d: V329 = 0x20
0x52f: V330 = ADD 0x20 0x20
0x530: V331 = 0x0
0x532: V332 = SHA3 0x0 0x40
0x533: V333 = 0x1
0x535: V334 = ADD 0x1 V332
0x536: V335 = S[V334]
0x537: V336 = GT V335 0x1
0x538: V337 = ISZERO V336
0x539: V338 = ISZERO V337
0x53a: V339 = 0x585
0x53d: THROWI V338
---
Entry stack: [S2, S1, V292]
Stack pops: 0
Stack additions: [S0, V310, V307, S1, V318, S0, 0x0]
Exit stack: []

================================

Block 0x53e
[0x53e:0x6f9]
---
Predecessors: [0x4ae]
Successors: [0x6fa]
---
0x53e PUSH1 0x40
0x540 MLOAD
0x541 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x562 DUP2
0x563 MSTORE
0x564 PUSH1 0x4
0x566 ADD
0x567 DUP1
0x568 DUP1
0x569 PUSH1 0x20
0x56b ADD
0x56c DUP3
0x56d DUP2
0x56e SUB
0x56f DUP3
0x570 MSTORE
0x571 PUSH1 0x29
0x573 DUP2
0x574 MSTORE
0x575 PUSH1 0x20
0x577 ADD
0x578 DUP1
0x579 PUSH32 0x4e6f20756e706169642062616c616e6365206f72206e6f742061206d656d6265
0x59a DUP2
0x59b MSTORE
0x59c PUSH1 0x20
0x59e ADD
0x59f PUSH32 0x72206163636f756e740000000000000000000000000000000000000000000000
0x5c0 DUP2
0x5c1 MSTORE
0x5c2 POP
0x5c3 PUSH1 0x40
0x5c5 ADD
0x5c6 SWAP2
0x5c7 POP
0x5c8 POP
0x5c9 PUSH1 0x40
0x5cb MLOAD
0x5cc DUP1
0x5cd SWAP2
0x5ce SUB
0x5cf SWAP1
0x5d0 REVERT
0x5d1 JUMPDEST
0x5d2 PUSH2 0x5da
0x5d5 PUSH1 0x1
0x5d7 PUSH1 0x0
0x5d9 DUP1
0x5da CALLER
0x5db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5f0 AND
0x5f1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x606 AND
0x607 DUP2
0x608 MSTORE
0x609 PUSH1 0x20
0x60b ADD
0x60c SWAP1
0x60d DUP2
0x60e MSTORE
0x60f PUSH1 0x20
0x611 ADD
0x612 PUSH1 0x0
0x614 SHA3
0x615 PUSH1 0x1
0x617 ADD
0x618 SLOAD
0x619 PUSH2 0x7a2
0x61c SWAP1
0x61d SWAP2
0x61e SWAP1
0x61f PUSH4 0xffffffff
0x624 AND
0x625 JUMP
0x626 JUMPDEST
0x627 SWAP1
0x628 POP
0x629 PUSH1 0x1
0x62b PUSH1 0x0
0x62d DUP1
0x62e CALLER
0x62f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x644 AND
0x645 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x65a AND
0x65b DUP2
0x65c MSTORE
0x65d PUSH1 0x20
0x65f ADD
0x660 SWAP1
0x661 DUP2
0x662 MSTORE
0x663 PUSH1 0x20
0x665 ADD
0x666 PUSH1 0x0
0x668 SHA3
0x669 PUSH1 0x1
0x66b ADD
0x66c DUP2
0x66d SWAP1
0x66e SSTORE
0x66f POP
0x670 CALLER
0x671 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x686 AND
0x687 PUSH32 0x884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364
0x6a8 DUP3
0x6a9 PUSH1 0x40
0x6ab MLOAD
0x6ac DUP1
0x6ad DUP3
0x6ae DUP2
0x6af MSTORE
0x6b0 PUSH1 0x20
0x6b2 ADD
0x6b3 SWAP2
0x6b4 POP
0x6b5 POP
0x6b6 PUSH1 0x40
0x6b8 MLOAD
0x6b9 DUP1
0x6ba SWAP2
0x6bb SUB
0x6bc SWAP1
0x6bd LOG2
0x6be CALLER
0x6bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6d4 AND
0x6d5 PUSH2 0x8fc
0x6d8 DUP3
0x6d9 SWAP1
0x6da DUP2
0x6db ISZERO
0x6dc MUL
0x6dd SWAP1
0x6de PUSH1 0x40
0x6e0 MLOAD
0x6e1 PUSH1 0x0
0x6e3 PUSH1 0x40
0x6e5 MLOAD
0x6e6 DUP1
0x6e7 DUP4
0x6e8 SUB
0x6e9 DUP2
0x6ea DUP6
0x6eb DUP9
0x6ec DUP9
0x6ed CALL
0x6ee SWAP4
0x6ef POP
0x6f0 POP
0x6f1 POP
0x6f2 POP
0x6f3 ISZERO
0x6f4 DUP1
0x6f5 ISZERO
0x6f6 PUSH2 0x6b7
0x6f9 JUMPI
---
0x53e: V340 = 0x40
0x540: V341 = M[0x40]
0x541: V342 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x563: M[V341] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x564: V343 = 0x4
0x566: V344 = ADD 0x4 V341
0x569: V345 = 0x20
0x56b: V346 = ADD 0x20 V344
0x56e: V347 = SUB V346 V344
0x570: M[V344] = V347
0x571: V348 = 0x29
0x574: M[V346] = 0x29
0x575: V349 = 0x20
0x577: V350 = ADD 0x20 V346
0x579: V351 = 0x4e6f20756e706169642062616c616e6365206f72206e6f742061206d656d6265
0x59b: M[V350] = 0x4e6f20756e706169642062616c616e6365206f72206e6f742061206d656d6265
0x59c: V352 = 0x20
0x59e: V353 = ADD 0x20 V350
0x59f: V354 = 0x72206163636f756e740000000000000000000000000000000000000000000000
0x5c1: M[V353] = 0x72206163636f756e740000000000000000000000000000000000000000000000
0x5c3: V355 = 0x40
0x5c5: V356 = ADD 0x40 V350
0x5c9: V357 = 0x40
0x5cb: V358 = M[0x40]
0x5ce: V359 = SUB V356 V358
0x5d0: REVERT V358 V359
0x5d1: JUMPDEST 
0x5d2: V360 = 0x5da
0x5d5: V361 = 0x1
0x5d7: V362 = 0x0
0x5da: V363 = CALLER
0x5db: V364 = 0xffffffffffffffffffffffffffffffffffffffff
0x5f0: V365 = AND 0xffffffffffffffffffffffffffffffffffffffff V363
0x5f1: V366 = 0xffffffffffffffffffffffffffffffffffffffff
0x606: V367 = AND 0xffffffffffffffffffffffffffffffffffffffff V365
0x608: M[0x0] = V367
0x609: V368 = 0x20
0x60b: V369 = ADD 0x20 0x0
0x60e: M[0x20] = 0x0
0x60f: V370 = 0x20
0x611: V371 = ADD 0x20 0x20
0x612: V372 = 0x0
0x614: V373 = SHA3 0x0 0x40
0x615: V374 = 0x1
0x617: V375 = ADD 0x1 V373
0x618: V376 = S[V375]
0x619: V377 = 0x7a2
0x61f: V378 = 0xffffffff
0x624: V379 = AND 0xffffffff 0x7a2
0x625: THROW 
0x626: JUMPDEST 
0x629: V380 = 0x1
0x62b: V381 = 0x0
0x62e: V382 = CALLER
0x62f: V383 = 0xffffffffffffffffffffffffffffffffffffffff
0x644: V384 = AND 0xffffffffffffffffffffffffffffffffffffffff V382
0x645: V385 = 0xffffffffffffffffffffffffffffffffffffffff
0x65a: V386 = AND 0xffffffffffffffffffffffffffffffffffffffff V384
0x65c: M[0x0] = V386
0x65d: V387 = 0x20
0x65f: V388 = ADD 0x20 0x0
0x662: M[0x20] = 0x0
0x663: V389 = 0x20
0x665: V390 = ADD 0x20 0x20
0x666: V391 = 0x0
0x668: V392 = SHA3 0x0 0x40
0x669: V393 = 0x1
0x66b: V394 = ADD 0x1 V392
0x66e: S[V394] = 0x1
0x670: V395 = CALLER
0x671: V396 = 0xffffffffffffffffffffffffffffffffffffffff
0x686: V397 = AND 0xffffffffffffffffffffffffffffffffffffffff V395
0x687: V398 = 0x884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364
0x6a9: V399 = 0x40
0x6ab: V400 = M[0x40]
0x6af: M[V400] = S0
0x6b0: V401 = 0x20
0x6b2: V402 = ADD 0x20 V400
0x6b6: V403 = 0x40
0x6b8: V404 = M[0x40]
0x6bb: V405 = SUB V402 V404
0x6bd: LOG V404 V405 0x884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364 V397
0x6be: V406 = CALLER
0x6bf: V407 = 0xffffffffffffffffffffffffffffffffffffffff
0x6d4: V408 = AND 0xffffffffffffffffffffffffffffffffffffffff V406
0x6d5: V409 = 0x8fc
0x6db: V410 = ISZERO S0
0x6dc: V411 = MUL V410 0x8fc
0x6de: V412 = 0x40
0x6e0: V413 = M[0x40]
0x6e1: V414 = 0x0
0x6e3: V415 = 0x40
0x6e5: V416 = M[0x40]
0x6e8: V417 = SUB V413 V416
0x6ed: V418 = CALL V411 V408 S0 V416 V417 V416 0x0
0x6f3: V419 = ISZERO V418
0x6f5: V420 = ISZERO V419
0x6f6: V421 = 0x6b7
0x6f9: THROWI V420
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: [0x1, V376, 0x5da, V419, S0]
Exit stack: []

================================

Block 0x6fa
[0x6fa:0x7af]
---
Predecessors: [0x53e]
Successors: []
Has unresolved jump.
---
0x6fa RETURNDATASIZE
0x6fb PUSH1 0x0
0x6fd DUP1
0x6fe RETURNDATACOPY
0x6ff RETURNDATASIZE
0x700 PUSH1 0x0
0x702 REVERT
0x703 JUMPDEST
0x704 POP
0x705 POP
0x706 JUMP
0x707 JUMPDEST
0x708 PUSH1 0x0
0x70a PUSH2 0x712
0x70d PUSH1 0x1
0x70f PUSH1 0x0
0x711 DUP1
0x712 CALLER
0x713 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x728 AND
0x729 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x73e AND
0x73f DUP2
0x740 MSTORE
0x741 PUSH1 0x20
0x743 ADD
0x744 SWAP1
0x745 DUP2
0x746 MSTORE
0x747 PUSH1 0x20
0x749 ADD
0x74a PUSH1 0x0
0x74c SHA3
0x74d PUSH1 0x1
0x74f ADD
0x750 SLOAD
0x751 PUSH2 0x7a2
0x754 SWAP1
0x755 SWAP2
0x756 SWAP1
0x757 PUSH4 0xffffffff
0x75c AND
0x75d JUMP
0x75e JUMPDEST
0x75f SWAP1
0x760 POP
0x761 SWAP1
0x762 JUMP
0x763 JUMPDEST
0x764 PUSH1 0x0
0x766 PUSH1 0x1
0x768 PUSH1 0x0
0x76a DUP1
0x76b CALLER
0x76c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x781 AND
0x782 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x797 AND
0x798 DUP2
0x799 MSTORE
0x79a PUSH1 0x20
0x79c ADD
0x79d SWAP1
0x79e DUP2
0x79f MSTORE
0x7a0 PUSH1 0x20
0x7a2 ADD
0x7a3 PUSH1 0x0
0x7a5 SHA3
0x7a6 PUSH1 0x1
0x7a8 ADD
0x7a9 SLOAD
0x7aa LT
0x7ab ISZERO
0x7ac SWAP1
0x7ad POP
0x7ae SWAP1
0x7af JUMP
---
0x6fa: V422 = RETURNDATASIZE
0x6fb: V423 = 0x0
0x6fe: RETURNDATACOPY 0x0 0x0 V422
0x6ff: V424 = RETURNDATASIZE
0x700: V425 = 0x0
0x702: REVERT 0x0 V424
0x703: JUMPDEST 
0x706: JUMP S2
0x707: JUMPDEST 
0x708: V426 = 0x0
0x70a: V427 = 0x712
0x70d: V428 = 0x1
0x70f: V429 = 0x0
0x712: V430 = CALLER
0x713: V431 = 0xffffffffffffffffffffffffffffffffffffffff
0x728: V432 = AND 0xffffffffffffffffffffffffffffffffffffffff V430
0x729: V433 = 0xffffffffffffffffffffffffffffffffffffffff
0x73e: V434 = AND 0xffffffffffffffffffffffffffffffffffffffff V432
0x740: M[0x0] = V434
0x741: V435 = 0x20
0x743: V436 = ADD 0x20 0x0
0x746: M[0x20] = 0x0
0x747: V437 = 0x20
0x749: V438 = ADD 0x20 0x20
0x74a: V439 = 0x0
0x74c: V440 = SHA3 0x0 0x40
0x74d: V441 = 0x1
0x74f: V442 = ADD 0x1 V440
0x750: V443 = S[V442]
0x751: V444 = 0x7a2
0x757: V445 = 0xffffffff
0x75c: V446 = AND 0xffffffff 0x7a2
0x75d: THROW 
0x75e: JUMPDEST 
0x762: JUMP S2
0x763: JUMPDEST 
0x764: V447 = 0x0
0x766: V448 = 0x1
0x768: V449 = 0x0
0x76b: V450 = CALLER
0x76c: V451 = 0xffffffffffffffffffffffffffffffffffffffff
0x781: V452 = AND 0xffffffffffffffffffffffffffffffffffffffff V450
0x782: V453 = 0xffffffffffffffffffffffffffffffffffffffff
0x797: V454 = AND 0xffffffffffffffffffffffffffffffffffffffff V452
0x799: M[0x0] = V454
0x79a: V455 = 0x20
0x79c: V456 = ADD 0x20 0x0
0x79f: M[0x20] = 0x0
0x7a0: V457 = 0x20
0x7a2: V458 = ADD 0x20 0x20
0x7a3: V459 = 0x0
0x7a5: V460 = SHA3 0x0 0x40
0x7a6: V461 = 0x1
0x7a8: V462 = ADD 0x1 V460
0x7a9: V463 = S[V462]
0x7aa: V464 = LT V463 0x1
0x7ab: V465 = ISZERO V464
0x7af: JUMP S0
---
Entry stack: [S1, V419]
Stack pops: 0
Stack additions: [0x1, V443, 0x712, 0x0, S0, V465]
Exit stack: []

================================

Block 0x7b0
[0x7b0:0x7bd]
---
Predecessors: [0x7be]
Successors: [0x7be]
---
0x7b0 JUMPDEST
0x7b1 PUSH1 0x2
0x7b3 DUP2
0x7b4 DUP2
0x7b5 SLOAD
0x7b6 DUP2
0x7b7 LT
0x7b8 ISZERO
0x7b9 ISZERO
0x7ba PUSH2 0x773
0x7bd JUMPI
---
0x7b0: JUMPDEST 
0x7b1: V466 = 0x2
0x7b5: V467 = S[0x2]
0x7b7: V468 = LT 0x0 V467
0x7b8: V469 = ISZERO V468
0x7b9: V470 = ISZERO V469
0x7ba: V471 = 0x773
0x7bd: THROWI V470
---
Entry stack: [S2, S1, 0x0]
Stack pops: 1
Stack additions: [S0, 0x2, S0]
Exit stack: [S2, S1, 0x0, 0x2, 0x0]

================================

Block 0x7be
[0x7be:0x7fa]
---
Predecessors: [0x7b0]
Successors: [0x7b0, 0x7fb]
---
0x7be INVALID
0x7bf JUMPDEST
0x7c0 SWAP1
0x7c1 PUSH1 0x0
0x7c3 MSTORE
0x7c4 PUSH1 0x20
0x7c6 PUSH1 0x0
0x7c8 SHA3
0x7c9 ADD
0x7ca PUSH1 0x0
0x7cc SWAP2
0x7cd POP
0x7ce SLOAD
0x7cf SWAP1
0x7d0 PUSH2 0x100
0x7d3 EXP
0x7d4 SWAP1
0x7d5 DIV
0x7d6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7eb AND
0x7ec DUP2
0x7ed JUMP
0x7ee JUMPDEST
0x7ef PUSH1 0x0
0x7f1 DUP3
0x7f2 DUP3
0x7f3 GT
0x7f4 ISZERO
0x7f5 ISZERO
0x7f6 ISZERO
0x7f7 PUSH2 0x7b0
0x7fa JUMPI
---
0x7be: INVALID 
0x7bf: JUMPDEST 
0x7c1: V472 = 0x0
0x7c3: M[0x0] = S1
0x7c4: V473 = 0x20
0x7c6: V474 = 0x0
0x7c8: V475 = SHA3 0x0 0x20
0x7c9: V476 = ADD V475 S0
0x7ca: V477 = 0x0
0x7ce: V478 = S[V476]
0x7d0: V479 = 0x100
0x7d3: V480 = EXP 0x100 0x0
0x7d5: V481 = DIV V478 0x1
0x7d6: V482 = 0xffffffffffffffffffffffffffffffffffffffff
0x7eb: V483 = AND 0xffffffffffffffffffffffffffffffffffffffff V481
0x7ed: JUMP S3
0x7ee: JUMPDEST 
0x7ef: V484 = 0x0
0x7f3: V485 = GT S0 S1
0x7f4: V486 = ISZERO V485
0x7f5: V487 = ISZERO V486
0x7f6: V488 = ISZERO V487
0x7f7: V489 = 0x7b0
0x7fa: JUMPI 0x7b0 V488
---
Entry stack: [S4, S3, 0x0, 0x2, 0x0]
Stack pops: 0
Stack additions: [V483, S3, 0x0, S0, S1]
Exit stack: []

================================

Block 0x7fb
[0x7fb:0x832]
---
Predecessors: [0x7be]
Successors: []
---
0x7fb INVALID
0x7fc JUMPDEST
0x7fd DUP2
0x7fe DUP4
0x7ff SUB
0x800 SWAP1
0x801 POP
0x802 SWAP3
0x803 SWAP2
0x804 POP
0x805 POP
0x806 JUMP
0x807 STOP
0x808 LOG1
0x809 PUSH6 0x627a7a723058
0x810 SHA3
0x811 MISSING 0xa7
0x812 DELEGATECALL
0x813 SAR
0x814 MISSING 0xba
0x815 CREATE2
0x816 CALL
0x817 GT
0x818 PUSH25 0xda0356c6e144e17082cbcdfc392d734a939e86aa474281d400
0x832 MISSING 0x29
---
0x7fb: INVALID 
0x7fc: JUMPDEST 
0x7ff: V490 = SUB S2 S1
0x806: JUMP S3
0x807: STOP 
0x808: LOG S0 S1 S2
0x809: V491 = 0x627a7a723058
0x810: V492 = SHA3 0x627a7a723058 S3
0x811: MISSING 0xa7
0x812: V493 = DELEGATECALL S0 S1 S2 S3 S4 S5
0x813: V494 = SAR V493 S6
0x814: MISSING 0xba
0x815: V495 = CREATE2 S0 S1 S2 S3
0x816: V496 = CALL V495 S4 S5 S6 S7 S8 S9
0x817: V497 = GT V496 S10
0x818: V498 = 0xda0356c6e144e17082cbcdfc392d734a939e86aa474281d400
0x832: MISSING 0x29
---
Entry stack: [S2, S1, 0x0]
Stack pops: 0
Stack additions: [V490, V492, V494, 0xda0356c6e144e17082cbcdfc392d734a939e86aa474281d400, V497]
Exit stack: []

================================

Function 0:
Public fallback function
Entry block: 0xc4
Exit block: 0x6fa
Body: 0xc4, 0xca, 0xd8, 0xf4, 0x18b, 0x214, 0x2e7, 0x345, 0x378, 0x38f, 0x3ba, 0x3e9, 0x459, 0x471, 0x47b, 0x480, 0x492, 0x4ae, 0x53e, 0x6fa

