Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x97]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x97
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x97
0xa: JUMPI 0x97 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x9c]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x6fdde03
0x3a EQ
0x3b PUSH2 0x9c
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x6fdde03
0x3a: V12 = EQ 0x6fdde03 V10
0x3b: V13 = 0x9c
0x3e: JUMPI 0x9c V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x12b]
---
0x3f DUP1
0x40 PUSH4 0x18160ddd
0x45 EQ
0x46 PUSH2 0x12b
0x49 JUMPI
---
0x40: V14 = 0x18160ddd
0x45: V15 = EQ 0x18160ddd V10
0x46: V16 = 0x12b
0x49: JUMPI 0x12b V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x154]
---
0x4a DUP1
0x4b PUSH4 0x23b872dd
0x50 EQ
0x51 PUSH2 0x154
0x54 JUMPI
---
0x4b: V17 = 0x23b872dd
0x50: V18 = EQ 0x23b872dd V10
0x51: V19 = 0x154
0x54: JUMPI 0x154 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x1cd]
---
0x55 DUP1
0x56 PUSH4 0x313ce567
0x5b EQ
0x5c PUSH2 0x1cd
0x5f JUMPI
---
0x56: V20 = 0x313ce567
0x5b: V21 = EQ 0x313ce567 V10
0x5c: V22 = 0x1cd
0x5f: JUMPI 0x1cd V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x1fc]
---
0x60 DUP1
0x61 PUSH4 0x378dc3dc
0x66 EQ
0x67 PUSH2 0x1fc
0x6a JUMPI
---
0x61: V23 = 0x378dc3dc
0x66: V24 = EQ 0x378dc3dc V10
0x67: V25 = 0x1fc
0x6a: JUMPI 0x1fc V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x60]
Successors: [0x76, 0x225]
---
0x6b DUP1
0x6c PUSH4 0x70a08231
0x71 EQ
0x72 PUSH2 0x225
0x75 JUMPI
---
0x6c: V26 = 0x70a08231
0x71: V27 = EQ 0x70a08231 V10
0x72: V28 = 0x225
0x75: JUMPI 0x225 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x76
[0x76:0x80]
---
Predecessors: [0x6b]
Successors: [0x81, 0x272]
---
0x76 DUP1
0x77 PUSH4 0x95d89b41
0x7c EQ
0x7d PUSH2 0x272
0x80 JUMPI
---
0x77: V29 = 0x95d89b41
0x7c: V30 = EQ 0x95d89b41 V10
0x7d: V31 = 0x272
0x80: JUMPI 0x272 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x81
[0x81:0x8b]
---
Predecessors: [0x76]
Successors: [0x8c, 0x301]
---
0x81 DUP1
0x82 PUSH4 0xa9059cbb
0x87 EQ
0x88 PUSH2 0x301
0x8b JUMPI
---
0x82: V32 = 0xa9059cbb
0x87: V33 = EQ 0xa9059cbb V10
0x88: V34 = 0x301
0x8b: JUMPI 0x301 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8c
[0x8c:0x96]
---
Predecessors: [0x81]
Successors: [0x97, 0x343]
---
0x8c DUP1
0x8d PUSH4 0xdd62ed3e
0x92 EQ
0x93 PUSH2 0x343
0x96 JUMPI
---
0x8d: V35 = 0xdd62ed3e
0x92: V36 = EQ 0xdd62ed3e V10
0x93: V37 = 0x343
0x96: JUMPI 0x343 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x97
[0x97:0x9b]
---
Predecessors: [0x0, 0x8c]
Successors: []
---
0x97 JUMPDEST
0x98 PUSH1 0x0
0x9a DUP1
0x9b REVERT
---
0x97: JUMPDEST 
0x98: V38 = 0x0
0x9b: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x9c
[0x9c:0xa2]
---
Predecessors: [0xb]
Successors: [0xa3, 0xa7]
---
0x9c JUMPDEST
0x9d CALLVALUE
0x9e ISZERO
0x9f PUSH2 0xa7
0xa2 JUMPI
---
0x9c: JUMPDEST 
0x9d: V39 = CALLVALUE
0x9e: V40 = ISZERO V39
0x9f: V41 = 0xa7
0xa2: JUMPI 0xa7 V40
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xa3
[0xa3:0xa6]
---
Predecessors: [0x9c]
Successors: []
---
0xa3 PUSH1 0x0
0xa5 DUP1
0xa6 REVERT
---
0xa3: V42 = 0x0
0xa6: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xa7
[0xa7:0xae]
---
Predecessors: [0x9c]
Successors: [0x3af]
---
0xa7 JUMPDEST
0xa8 PUSH2 0xaf
0xab PUSH2 0x3af
0xae JUMP
---
0xa7: JUMPDEST 
0xa8: V43 = 0xaf
0xab: V44 = 0x3af
0xae: JUMP 0x3af
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xaf]
Exit stack: [V10, 0xaf]

================================

Block 0xaf
[0xaf:0xd3]
---
Predecessors: [0x3af]
Successors: [0xd4]
---
0xaf JUMPDEST
0xb0 PUSH1 0x40
0xb2 MLOAD
0xb3 DUP1
0xb4 DUP1
0xb5 PUSH1 0x20
0xb7 ADD
0xb8 DUP3
0xb9 DUP2
0xba SUB
0xbb DUP3
0xbc MSTORE
0xbd DUP4
0xbe DUP2
0xbf DUP2
0xc0 MLOAD
0xc1 DUP2
0xc2 MSTORE
0xc3 PUSH1 0x20
0xc5 ADD
0xc6 SWAP2
0xc7 POP
0xc8 DUP1
0xc9 MLOAD
0xca SWAP1
0xcb PUSH1 0x20
0xcd ADD
0xce SWAP1
0xcf DUP1
0xd0 DUP4
0xd1 DUP4
0xd2 PUSH1 0x0
---
0xaf: JUMPDEST 
0xb0: V45 = 0x40
0xb2: V46 = M[0x40]
0xb5: V47 = 0x20
0xb7: V48 = ADD 0x20 V46
0xba: V49 = SUB V48 V46
0xbc: M[V46] = V49
0xc0: V50 = M[V266]
0xc2: M[V48] = V50
0xc3: V51 = 0x20
0xc5: V52 = ADD 0x20 V48
0xc9: V53 = M[V266]
0xcb: V54 = 0x20
0xcd: V55 = ADD 0x20 V266
0xd2: V56 = 0x0
---
Entry stack: [V10, 0xaf, V266]
Stack pops: 1
Stack additions: [S0, V46, V46, V52, V55, V53, V53, V52, V55, 0x0]
Exit stack: [V10, 0xaf, V266, V46, V46, V52, V55, V53, V53, V52, V55, 0x0]

================================

Block 0xd4
[0xd4:0xdc]
---
Predecessors: [0xaf, 0xe5]
Successors: [0xdd, 0xf0]
---
0xd4 JUMPDEST
0xd5 DUP4
0xd6 DUP2
0xd7 LT
0xd8 ISZERO
0xd9 PUSH2 0xf0
0xdc JUMPI
---
0xd4: JUMPDEST 
0xd7: V57 = LT S0 V53
0xd8: V58 = ISZERO V57
0xd9: V59 = 0xf0
0xdc: JUMPI 0xf0 V58
---
Entry stack: [V10, 0xaf, V266, V46, V46, V52, V55, V53, V53, V52, V55, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0xaf, V266, V46, V46, V52, V55, V53, V53, V52, V55, S0]

================================

Block 0xdd
[0xdd:0xe4]
---
Predecessors: [0xd4]
Successors: [0xe5]
---
0xdd DUP1
0xde DUP3
0xdf ADD
0xe0 MLOAD
0xe1 DUP2
0xe2 DUP5
0xe3 ADD
0xe4 MSTORE
---
0xdf: V60 = ADD V55 S0
0xe0: V61 = M[V60]
0xe3: V62 = ADD V52 S0
0xe4: M[V62] = V61
---
Entry stack: [V10, 0xaf, V266, V46, V46, V52, V55, V53, V53, V52, V55, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0xaf, V266, V46, V46, V52, V55, V53, V53, V52, V55, S0]

================================

Block 0xe5
[0xe5:0xef]
---
Predecessors: [0xdd]
Successors: [0xd4]
---
0xe5 JUMPDEST
0xe6 PUSH1 0x20
0xe8 DUP2
0xe9 ADD
0xea SWAP1
0xeb POP
0xec PUSH2 0xd4
0xef JUMP
---
0xe5: JUMPDEST 
0xe6: V63 = 0x20
0xe9: V64 = ADD S0 0x20
0xec: V65 = 0xd4
0xef: JUMP 0xd4
---
Entry stack: [V10, 0xaf, V266, V46, V46, V52, V55, V53, V53, V52, V55, S0]
Stack pops: 1
Stack additions: [V64]
Exit stack: [V10, 0xaf, V266, V46, V46, V52, V55, V53, V53, V52, V55, V64]

================================

Block 0xf0
[0xf0:0x103]
---
Predecessors: [0xd4]
Successors: [0x104, 0x11d]
---
0xf0 JUMPDEST
0xf1 POP
0xf2 POP
0xf3 POP
0xf4 POP
0xf5 SWAP1
0xf6 POP
0xf7 SWAP1
0xf8 DUP2
0xf9 ADD
0xfa SWAP1
0xfb PUSH1 0x1f
0xfd AND
0xfe DUP1
0xff ISZERO
0x100 PUSH2 0x11d
0x103 JUMPI
---
0xf0: JUMPDEST 
0xf9: V66 = ADD V53 V52
0xfb: V67 = 0x1f
0xfd: V68 = AND 0x1f V53
0xff: V69 = ISZERO V68
0x100: V70 = 0x11d
0x103: JUMPI 0x11d V69
---
Entry stack: [V10, 0xaf, V266, V46, V46, V52, V55, V53, V53, V52, V55, S0]
Stack pops: 7
Stack additions: [V66, V68]
Exit stack: [V10, 0xaf, V266, V46, V46, V66, V68]

================================

Block 0x104
[0x104:0x11c]
---
Predecessors: [0xf0]
Successors: [0x11d]
---
0x104 DUP1
0x105 DUP3
0x106 SUB
0x107 DUP1
0x108 MLOAD
0x109 PUSH1 0x1
0x10b DUP4
0x10c PUSH1 0x20
0x10e SUB
0x10f PUSH2 0x100
0x112 EXP
0x113 SUB
0x114 NOT
0x115 AND
0x116 DUP2
0x117 MSTORE
0x118 PUSH1 0x20
0x11a ADD
0x11b SWAP2
0x11c POP
---
0x106: V71 = SUB V66 V68
0x108: V72 = M[V71]
0x109: V73 = 0x1
0x10c: V74 = 0x20
0x10e: V75 = SUB 0x20 V68
0x10f: V76 = 0x100
0x112: V77 = EXP 0x100 V75
0x113: V78 = SUB V77 0x1
0x114: V79 = NOT V78
0x115: V80 = AND V79 V72
0x117: M[V71] = V80
0x118: V81 = 0x20
0x11a: V82 = ADD 0x20 V71
---
Entry stack: [V10, 0xaf, V266, V46, V46, V66, V68]
Stack pops: 2
Stack additions: [V82, S0]
Exit stack: [V10, 0xaf, V266, V46, V46, V82, V68]

================================

Block 0x11d
[0x11d:0x12a]
---
Predecessors: [0xf0, 0x104]
Successors: []
---
0x11d JUMPDEST
0x11e POP
0x11f SWAP3
0x120 POP
0x121 POP
0x122 POP
0x123 PUSH1 0x40
0x125 MLOAD
0x126 DUP1
0x127 SWAP2
0x128 SUB
0x129 SWAP1
0x12a RETURN
---
0x11d: JUMPDEST 
0x123: V83 = 0x40
0x125: V84 = M[0x40]
0x128: V85 = SUB S1 V84
0x12a: RETURN V84 V85
---
Entry stack: [V10, 0xaf, V266, V46, V46, S1, V68]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0xaf]

================================

Block 0x12b
[0x12b:0x131]
---
Predecessors: [0x3f]
Successors: [0x132, 0x136]
---
0x12b JUMPDEST
0x12c CALLVALUE
0x12d ISZERO
0x12e PUSH2 0x136
0x131 JUMPI
---
0x12b: JUMPDEST 
0x12c: V86 = CALLVALUE
0x12d: V87 = ISZERO V86
0x12e: V88 = 0x136
0x131: JUMPI 0x136 V87
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x132
[0x132:0x135]
---
Predecessors: [0x12b]
Successors: []
---
0x132 PUSH1 0x0
0x134 DUP1
0x135 REVERT
---
0x132: V89 = 0x0
0x135: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x136
[0x136:0x13d]
---
Predecessors: [0x12b]
Successors: [0x3e8]
---
0x136 JUMPDEST
0x137 PUSH2 0x13e
0x13a PUSH2 0x3e8
0x13d JUMP
---
0x136: JUMPDEST 
0x137: V90 = 0x13e
0x13a: V91 = 0x3e8
0x13d: JUMP 0x3e8
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x13e]
Exit stack: [V10, 0x13e]

================================

Block 0x13e
[0x13e:0x153]
---
Predecessors: [0x3e8]
Successors: []
---
0x13e JUMPDEST
0x13f PUSH1 0x40
0x141 MLOAD
0x142 DUP1
0x143 DUP3
0x144 DUP2
0x145 MSTORE
0x146 PUSH1 0x20
0x148 ADD
0x149 SWAP2
0x14a POP
0x14b POP
0x14c PUSH1 0x40
0x14e MLOAD
0x14f DUP1
0x150 SWAP2
0x151 SUB
0x152 SWAP1
0x153 RETURN
---
0x13e: JUMPDEST 
0x13f: V92 = 0x40
0x141: V93 = M[0x40]
0x145: M[V93] = V274
0x146: V94 = 0x20
0x148: V95 = ADD 0x20 V93
0x14c: V96 = 0x40
0x14e: V97 = M[0x40]
0x151: V98 = SUB V95 V97
0x153: RETURN V97 V98
---
Entry stack: [V10, 0x13e, V274]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x13e]

================================

Block 0x154
[0x154:0x15a]
---
Predecessors: [0x4a]
Successors: [0x15b, 0x15f]
---
0x154 JUMPDEST
0x155 CALLVALUE
0x156 ISZERO
0x157 PUSH2 0x15f
0x15a JUMPI
---
0x154: JUMPDEST 
0x155: V99 = CALLVALUE
0x156: V100 = ISZERO V99
0x157: V101 = 0x15f
0x15a: JUMPI 0x15f V100
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x15b
[0x15b:0x15e]
---
Predecessors: [0x154]
Successors: []
---
0x15b PUSH1 0x0
0x15d DUP1
0x15e REVERT
---
0x15b: V102 = 0x0
0x15e: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x15f
[0x15f:0x1b2]
---
Predecessors: [0x154]
Successors: [0x3ee]
---
0x15f JUMPDEST
0x160 PUSH2 0x1b3
0x163 PUSH1 0x4
0x165 DUP1
0x166 DUP1
0x167 CALLDATALOAD
0x168 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17d AND
0x17e SWAP1
0x17f PUSH1 0x20
0x181 ADD
0x182 SWAP1
0x183 SWAP2
0x184 SWAP1
0x185 DUP1
0x186 CALLDATALOAD
0x187 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19c AND
0x19d SWAP1
0x19e PUSH1 0x20
0x1a0 ADD
0x1a1 SWAP1
0x1a2 SWAP2
0x1a3 SWAP1
0x1a4 DUP1
0x1a5 CALLDATALOAD
0x1a6 SWAP1
0x1a7 PUSH1 0x20
0x1a9 ADD
0x1aa SWAP1
0x1ab SWAP2
0x1ac SWAP1
0x1ad POP
0x1ae POP
0x1af PUSH2 0x3ee
0x1b2 JUMP
---
0x15f: JUMPDEST 
0x160: V103 = 0x1b3
0x163: V104 = 0x4
0x167: V105 = CALLDATALOAD 0x4
0x168: V106 = 0xffffffffffffffffffffffffffffffffffffffff
0x17d: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V105
0x17f: V108 = 0x20
0x181: V109 = ADD 0x20 0x4
0x186: V110 = CALLDATALOAD 0x24
0x187: V111 = 0xffffffffffffffffffffffffffffffffffffffff
0x19c: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x19e: V113 = 0x20
0x1a0: V114 = ADD 0x20 0x24
0x1a5: V115 = CALLDATALOAD 0x44
0x1a7: V116 = 0x20
0x1a9: V117 = ADD 0x20 0x44
0x1af: V118 = 0x3ee
0x1b2: JUMP 0x3ee
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b3, V107, V112, V115]
Exit stack: [V10, 0x1b3, V107, V112, V115]

================================

Block 0x1b3
[0x1b3:0x1cc]
---
Predecessors: [0x515]
Successors: []
---
0x1b3 JUMPDEST
0x1b4 PUSH1 0x40
0x1b6 MLOAD
0x1b7 DUP1
0x1b8 DUP3
0x1b9 ISZERO
0x1ba ISZERO
0x1bb ISZERO
0x1bc ISZERO
0x1bd DUP2
0x1be MSTORE
0x1bf PUSH1 0x20
0x1c1 ADD
0x1c2 SWAP2
0x1c3 POP
0x1c4 POP
0x1c5 PUSH1 0x40
0x1c7 MLOAD
0x1c8 DUP1
0x1c9 SWAP2
0x1ca SUB
0x1cb SWAP1
0x1cc RETURN
---
0x1b3: JUMPDEST 
0x1b4: V119 = 0x40
0x1b6: V120 = M[0x40]
0x1b9: V121 = ISZERO 0x1
0x1ba: V122 = ISZERO 0x0
0x1bb: V123 = ISZERO 0x1
0x1bc: V124 = ISZERO 0x0
0x1be: M[V120] = 0x1
0x1bf: V125 = 0x20
0x1c1: V126 = ADD 0x20 V120
0x1c5: V127 = 0x40
0x1c7: V128 = M[0x40]
0x1ca: V129 = SUB V126 V128
0x1cc: RETURN V128 V129
---
Entry stack: [V10, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x1cd
[0x1cd:0x1d3]
---
Predecessors: [0x55]
Successors: [0x1d4, 0x1d8]
---
0x1cd JUMPDEST
0x1ce CALLVALUE
0x1cf ISZERO
0x1d0 PUSH2 0x1d8
0x1d3 JUMPI
---
0x1cd: JUMPDEST 
0x1ce: V130 = CALLVALUE
0x1cf: V131 = ISZERO V130
0x1d0: V132 = 0x1d8
0x1d3: JUMPI 0x1d8 V131
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d4
[0x1d4:0x1d7]
---
Predecessors: [0x1cd]
Successors: []
---
0x1d4 PUSH1 0x0
0x1d6 DUP1
0x1d7 REVERT
---
0x1d4: V133 = 0x0
0x1d7: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d8
[0x1d8:0x1df]
---
Predecessors: [0x1cd]
Successors: [0x51c]
---
0x1d8 JUMPDEST
0x1d9 PUSH2 0x1e0
0x1dc PUSH2 0x51c
0x1df JUMP
---
0x1d8: JUMPDEST 
0x1d9: V134 = 0x1e0
0x1dc: V135 = 0x51c
0x1df: JUMP 0x51c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1e0]
Exit stack: [V10, 0x1e0]

================================

Block 0x1e0
[0x1e0:0x1fb]
---
Predecessors: [0x51c]
Successors: []
---
0x1e0 JUMPDEST
0x1e1 PUSH1 0x40
0x1e3 MLOAD
0x1e4 DUP1
0x1e5 DUP3
0x1e6 PUSH1 0xff
0x1e8 AND
0x1e9 PUSH1 0xff
0x1eb AND
0x1ec DUP2
0x1ed MSTORE
0x1ee PUSH1 0x20
0x1f0 ADD
0x1f1 SWAP2
0x1f2 POP
0x1f3 POP
0x1f4 PUSH1 0x40
0x1f6 MLOAD
0x1f7 DUP1
0x1f8 SWAP2
0x1f9 SUB
0x1fa SWAP1
0x1fb RETURN
---
0x1e0: JUMPDEST 
0x1e1: V136 = 0x40
0x1e3: V137 = M[0x40]
0x1e6: V138 = 0xff
0x1e8: V139 = AND 0xff 0x12
0x1e9: V140 = 0xff
0x1eb: V141 = AND 0xff 0x12
0x1ed: M[V137] = 0x12
0x1ee: V142 = 0x20
0x1f0: V143 = ADD 0x20 V137
0x1f4: V144 = 0x40
0x1f6: V145 = M[0x40]
0x1f9: V146 = SUB V143 V145
0x1fb: RETURN V145 V146
---
Entry stack: [V10, 0x1e0, 0x12]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1e0]

================================

Block 0x1fc
[0x1fc:0x202]
---
Predecessors: [0x60]
Successors: [0x203, 0x207]
---
0x1fc JUMPDEST
0x1fd CALLVALUE
0x1fe ISZERO
0x1ff PUSH2 0x207
0x202 JUMPI
---
0x1fc: JUMPDEST 
0x1fd: V147 = CALLVALUE
0x1fe: V148 = ISZERO V147
0x1ff: V149 = 0x207
0x202: JUMPI 0x207 V148
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x203
[0x203:0x206]
---
Predecessors: [0x1fc]
Successors: []
---
0x203 PUSH1 0x0
0x205 DUP1
0x206 REVERT
---
0x203: V150 = 0x0
0x206: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x207
[0x207:0x20e]
---
Predecessors: [0x1fc]
Successors: [0x521]
---
0x207 JUMPDEST
0x208 PUSH2 0x20f
0x20b PUSH2 0x521
0x20e JUMP
---
0x207: JUMPDEST 
0x208: V151 = 0x20f
0x20b: V152 = 0x521
0x20e: JUMP 0x521
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x20f]
Exit stack: [V10, 0x20f]

================================

Block 0x20f
[0x20f:0x224]
---
Predecessors: [0x521]
Successors: []
---
0x20f JUMPDEST
0x210 PUSH1 0x40
0x212 MLOAD
0x213 DUP1
0x214 DUP3
0x215 DUP2
0x216 MSTORE
0x217 PUSH1 0x20
0x219 ADD
0x21a SWAP2
0x21b POP
0x21c POP
0x21d PUSH1 0x40
0x21f MLOAD
0x220 DUP1
0x221 SWAP2
0x222 SUB
0x223 SWAP1
0x224 RETURN
---
0x20f: JUMPDEST 
0x210: V153 = 0x40
0x212: V154 = M[0x40]
0x216: M[V154] = V339
0x217: V155 = 0x20
0x219: V156 = ADD 0x20 V154
0x21d: V157 = 0x40
0x21f: V158 = M[0x40]
0x222: V159 = SUB V156 V158
0x224: RETURN V158 V159
---
Entry stack: [V10, 0x20f, V339]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x20f]

================================

Block 0x225
[0x225:0x22b]
---
Predecessors: [0x6b]
Successors: [0x22c, 0x230]
---
0x225 JUMPDEST
0x226 CALLVALUE
0x227 ISZERO
0x228 PUSH2 0x230
0x22b JUMPI
---
0x225: JUMPDEST 
0x226: V160 = CALLVALUE
0x227: V161 = ISZERO V160
0x228: V162 = 0x230
0x22b: JUMPI 0x230 V161
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x22c
[0x22c:0x22f]
---
Predecessors: [0x225]
Successors: []
---
0x22c PUSH1 0x0
0x22e DUP1
0x22f REVERT
---
0x22c: V163 = 0x0
0x22f: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x230
[0x230:0x25b]
---
Predecessors: [0x225]
Successors: [0x527]
---
0x230 JUMPDEST
0x231 PUSH2 0x25c
0x234 PUSH1 0x4
0x236 DUP1
0x237 DUP1
0x238 CALLDATALOAD
0x239 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24e AND
0x24f SWAP1
0x250 PUSH1 0x20
0x252 ADD
0x253 SWAP1
0x254 SWAP2
0x255 SWAP1
0x256 POP
0x257 POP
0x258 PUSH2 0x527
0x25b JUMP
---
0x230: JUMPDEST 
0x231: V164 = 0x25c
0x234: V165 = 0x4
0x238: V166 = CALLDATALOAD 0x4
0x239: V167 = 0xffffffffffffffffffffffffffffffffffffffff
0x24e: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff V166
0x250: V169 = 0x20
0x252: V170 = ADD 0x20 0x4
0x258: V171 = 0x527
0x25b: JUMP 0x527
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x25c, V168]
Exit stack: [V10, 0x25c, V168]

================================

Block 0x25c
[0x25c:0x271]
---
Predecessors: [0x527]
Successors: []
---
0x25c JUMPDEST
0x25d PUSH1 0x40
0x25f MLOAD
0x260 DUP1
0x261 DUP3
0x262 DUP2
0x263 MSTORE
0x264 PUSH1 0x20
0x266 ADD
0x267 SWAP2
0x268 POP
0x269 POP
0x26a PUSH1 0x40
0x26c MLOAD
0x26d DUP1
0x26e SWAP2
0x26f SUB
0x270 SWAP1
0x271 RETURN
---
0x25c: JUMPDEST 
0x25d: V172 = 0x40
0x25f: V173 = M[0x40]
0x263: M[V173] = V347
0x264: V174 = 0x20
0x266: V175 = ADD 0x20 V173
0x26a: V176 = 0x40
0x26c: V177 = M[0x40]
0x26f: V178 = SUB V175 V177
0x271: RETURN V177 V178
---
Entry stack: [V10, 0x25c, V347]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x25c]

================================

Block 0x272
[0x272:0x278]
---
Predecessors: [0x76]
Successors: [0x279, 0x27d]
---
0x272 JUMPDEST
0x273 CALLVALUE
0x274 ISZERO
0x275 PUSH2 0x27d
0x278 JUMPI
---
0x272: JUMPDEST 
0x273: V179 = CALLVALUE
0x274: V180 = ISZERO V179
0x275: V181 = 0x27d
0x278: JUMPI 0x27d V180
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x279
[0x279:0x27c]
---
Predecessors: [0x272]
Successors: []
---
0x279 PUSH1 0x0
0x27b DUP1
0x27c REVERT
---
0x279: V182 = 0x0
0x27c: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x27d
[0x27d:0x284]
---
Predecessors: [0x272]
Successors: [0x53f]
---
0x27d JUMPDEST
0x27e PUSH2 0x285
0x281 PUSH2 0x53f
0x284 JUMP
---
0x27d: JUMPDEST 
0x27e: V183 = 0x285
0x281: V184 = 0x53f
0x284: JUMP 0x53f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x285]
Exit stack: [V10, 0x285]

================================

Block 0x285
[0x285:0x2a9]
---
Predecessors: [0x53f]
Successors: [0x2aa]
---
0x285 JUMPDEST
0x286 PUSH1 0x40
0x288 MLOAD
0x289 DUP1
0x28a DUP1
0x28b PUSH1 0x20
0x28d ADD
0x28e DUP3
0x28f DUP2
0x290 SUB
0x291 DUP3
0x292 MSTORE
0x293 DUP4
0x294 DUP2
0x295 DUP2
0x296 MLOAD
0x297 DUP2
0x298 MSTORE
0x299 PUSH1 0x20
0x29b ADD
0x29c SWAP2
0x29d POP
0x29e DUP1
0x29f MLOAD
0x2a0 SWAP1
0x2a1 PUSH1 0x20
0x2a3 ADD
0x2a4 SWAP1
0x2a5 DUP1
0x2a6 DUP4
0x2a7 DUP4
0x2a8 PUSH1 0x0
---
0x285: JUMPDEST 
0x286: V185 = 0x40
0x288: V186 = M[0x40]
0x28b: V187 = 0x20
0x28d: V188 = ADD 0x20 V186
0x290: V189 = SUB V188 V186
0x292: M[V186] = V189
0x296: V190 = M[V349]
0x298: M[V188] = V190
0x299: V191 = 0x20
0x29b: V192 = ADD 0x20 V188
0x29f: V193 = M[V349]
0x2a1: V194 = 0x20
0x2a3: V195 = ADD 0x20 V349
0x2a8: V196 = 0x0
---
Entry stack: [V10, 0x285, V349]
Stack pops: 1
Stack additions: [S0, V186, V186, V192, V195, V193, V193, V192, V195, 0x0]
Exit stack: [V10, 0x285, V349, V186, V186, V192, V195, V193, V193, V192, V195, 0x0]

================================

Block 0x2aa
[0x2aa:0x2b2]
---
Predecessors: [0x285, 0x2bb]
Successors: [0x2b3, 0x2c6]
---
0x2aa JUMPDEST
0x2ab DUP4
0x2ac DUP2
0x2ad LT
0x2ae ISZERO
0x2af PUSH2 0x2c6
0x2b2 JUMPI
---
0x2aa: JUMPDEST 
0x2ad: V197 = LT S0 V193
0x2ae: V198 = ISZERO V197
0x2af: V199 = 0x2c6
0x2b2: JUMPI 0x2c6 V198
---
Entry stack: [V10, 0x285, V349, V186, V186, V192, V195, V193, V193, V192, V195, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x285, V349, V186, V186, V192, V195, V193, V193, V192, V195, S0]

================================

Block 0x2b3
[0x2b3:0x2ba]
---
Predecessors: [0x2aa]
Successors: [0x2bb]
---
0x2b3 DUP1
0x2b4 DUP3
0x2b5 ADD
0x2b6 MLOAD
0x2b7 DUP2
0x2b8 DUP5
0x2b9 ADD
0x2ba MSTORE
---
0x2b5: V200 = ADD V195 S0
0x2b6: V201 = M[V200]
0x2b9: V202 = ADD V192 S0
0x2ba: M[V202] = V201
---
Entry stack: [V10, 0x285, V349, V186, V186, V192, V195, V193, V193, V192, V195, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x285, V349, V186, V186, V192, V195, V193, V193, V192, V195, S0]

================================

Block 0x2bb
[0x2bb:0x2c5]
---
Predecessors: [0x2b3]
Successors: [0x2aa]
---
0x2bb JUMPDEST
0x2bc PUSH1 0x20
0x2be DUP2
0x2bf ADD
0x2c0 SWAP1
0x2c1 POP
0x2c2 PUSH2 0x2aa
0x2c5 JUMP
---
0x2bb: JUMPDEST 
0x2bc: V203 = 0x20
0x2bf: V204 = ADD S0 0x20
0x2c2: V205 = 0x2aa
0x2c5: JUMP 0x2aa
---
Entry stack: [V10, 0x285, V349, V186, V186, V192, V195, V193, V193, V192, V195, S0]
Stack pops: 1
Stack additions: [V204]
Exit stack: [V10, 0x285, V349, V186, V186, V192, V195, V193, V193, V192, V195, V204]

================================

Block 0x2c6
[0x2c6:0x2d9]
---
Predecessors: [0x2aa]
Successors: [0x2da, 0x2f3]
---
0x2c6 JUMPDEST
0x2c7 POP
0x2c8 POP
0x2c9 POP
0x2ca POP
0x2cb SWAP1
0x2cc POP
0x2cd SWAP1
0x2ce DUP2
0x2cf ADD
0x2d0 SWAP1
0x2d1 PUSH1 0x1f
0x2d3 AND
0x2d4 DUP1
0x2d5 ISZERO
0x2d6 PUSH2 0x2f3
0x2d9 JUMPI
---
0x2c6: JUMPDEST 
0x2cf: V206 = ADD V193 V192
0x2d1: V207 = 0x1f
0x2d3: V208 = AND 0x1f V193
0x2d5: V209 = ISZERO V208
0x2d6: V210 = 0x2f3
0x2d9: JUMPI 0x2f3 V209
---
Entry stack: [V10, 0x285, V349, V186, V186, V192, V195, V193, V193, V192, V195, S0]
Stack pops: 7
Stack additions: [V206, V208]
Exit stack: [V10, 0x285, V349, V186, V186, V206, V208]

================================

Block 0x2da
[0x2da:0x2f2]
---
Predecessors: [0x2c6]
Successors: [0x2f3]
---
0x2da DUP1
0x2db DUP3
0x2dc SUB
0x2dd DUP1
0x2de MLOAD
0x2df PUSH1 0x1
0x2e1 DUP4
0x2e2 PUSH1 0x20
0x2e4 SUB
0x2e5 PUSH2 0x100
0x2e8 EXP
0x2e9 SUB
0x2ea NOT
0x2eb AND
0x2ec DUP2
0x2ed MSTORE
0x2ee PUSH1 0x20
0x2f0 ADD
0x2f1 SWAP2
0x2f2 POP
---
0x2dc: V211 = SUB V206 V208
0x2de: V212 = M[V211]
0x2df: V213 = 0x1
0x2e2: V214 = 0x20
0x2e4: V215 = SUB 0x20 V208
0x2e5: V216 = 0x100
0x2e8: V217 = EXP 0x100 V215
0x2e9: V218 = SUB V217 0x1
0x2ea: V219 = NOT V218
0x2eb: V220 = AND V219 V212
0x2ed: M[V211] = V220
0x2ee: V221 = 0x20
0x2f0: V222 = ADD 0x20 V211
---
Entry stack: [V10, 0x285, V349, V186, V186, V206, V208]
Stack pops: 2
Stack additions: [V222, S0]
Exit stack: [V10, 0x285, V349, V186, V186, V222, V208]

================================

Block 0x2f3
[0x2f3:0x300]
---
Predecessors: [0x2c6, 0x2da]
Successors: []
---
0x2f3 JUMPDEST
0x2f4 POP
0x2f5 SWAP3
0x2f6 POP
0x2f7 POP
0x2f8 POP
0x2f9 PUSH1 0x40
0x2fb MLOAD
0x2fc DUP1
0x2fd SWAP2
0x2fe SUB
0x2ff SWAP1
0x300 RETURN
---
0x2f3: JUMPDEST 
0x2f9: V223 = 0x40
0x2fb: V224 = M[0x40]
0x2fe: V225 = SUB S1 V224
0x300: RETURN V224 V225
---
Entry stack: [V10, 0x285, V349, V186, V186, S1, V208]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x285]

================================

Block 0x301
[0x301:0x307]
---
Predecessors: [0x81]
Successors: [0x308, 0x30c]
---
0x301 JUMPDEST
0x302 CALLVALUE
0x303 ISZERO
0x304 PUSH2 0x30c
0x307 JUMPI
---
0x301: JUMPDEST 
0x302: V226 = CALLVALUE
0x303: V227 = ISZERO V226
0x304: V228 = 0x30c
0x307: JUMPI 0x30c V227
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x308
[0x308:0x30b]
---
Predecessors: [0x301]
Successors: []
---
0x308 PUSH1 0x0
0x30a DUP1
0x30b REVERT
---
0x308: V229 = 0x0
0x30b: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x30c
[0x30c:0x340]
---
Predecessors: [0x301]
Successors: [0x578]
---
0x30c JUMPDEST
0x30d PUSH2 0x341
0x310 PUSH1 0x4
0x312 DUP1
0x313 DUP1
0x314 CALLDATALOAD
0x315 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x32a AND
0x32b SWAP1
0x32c PUSH1 0x20
0x32e ADD
0x32f SWAP1
0x330 SWAP2
0x331 SWAP1
0x332 DUP1
0x333 CALLDATALOAD
0x334 SWAP1
0x335 PUSH1 0x20
0x337 ADD
0x338 SWAP1
0x339 SWAP2
0x33a SWAP1
0x33b POP
0x33c POP
0x33d PUSH2 0x578
0x340 JUMP
---
0x30c: JUMPDEST 
0x30d: V230 = 0x341
0x310: V231 = 0x4
0x314: V232 = CALLDATALOAD 0x4
0x315: V233 = 0xffffffffffffffffffffffffffffffffffffffff
0x32a: V234 = AND 0xffffffffffffffffffffffffffffffffffffffff V232
0x32c: V235 = 0x20
0x32e: V236 = ADD 0x20 0x4
0x333: V237 = CALLDATALOAD 0x24
0x335: V238 = 0x20
0x337: V239 = ADD 0x20 0x24
0x33d: V240 = 0x578
0x340: JUMP 0x578
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x341, V234, V237]
Exit stack: [V10, 0x341, V234, V237]

================================

Block 0x341
[0x341:0x342]
---
Predecessors: [0x584]
Successors: []
---
0x341 JUMPDEST
0x342 STOP
---
0x341: JUMPDEST 
0x342: STOP 
---
Entry stack: [V10, 0x1b3, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b3, S0]

================================

Block 0x343
[0x343:0x349]
---
Predecessors: [0x8c]
Successors: [0x34a, 0x34e]
---
0x343 JUMPDEST
0x344 CALLVALUE
0x345 ISZERO
0x346 PUSH2 0x34e
0x349 JUMPI
---
0x343: JUMPDEST 
0x344: V241 = CALLVALUE
0x345: V242 = ISZERO V241
0x346: V243 = 0x34e
0x349: JUMPI 0x34e V242
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x34a
[0x34a:0x34d]
---
Predecessors: [0x343]
Successors: []
---
0x34a PUSH1 0x0
0x34c DUP1
0x34d REVERT
---
0x34a: V244 = 0x0
0x34d: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x34e
[0x34e:0x398]
---
Predecessors: [0x343]
Successors: [0x588]
---
0x34e JUMPDEST
0x34f PUSH2 0x399
0x352 PUSH1 0x4
0x354 DUP1
0x355 DUP1
0x356 CALLDATALOAD
0x357 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x36c AND
0x36d SWAP1
0x36e PUSH1 0x20
0x370 ADD
0x371 SWAP1
0x372 SWAP2
0x373 SWAP1
0x374 DUP1
0x375 CALLDATALOAD
0x376 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x38b AND
0x38c SWAP1
0x38d PUSH1 0x20
0x38f ADD
0x390 SWAP1
0x391 SWAP2
0x392 SWAP1
0x393 POP
0x394 POP
0x395 PUSH2 0x588
0x398 JUMP
---
0x34e: JUMPDEST 
0x34f: V245 = 0x399
0x352: V246 = 0x4
0x356: V247 = CALLDATALOAD 0x4
0x357: V248 = 0xffffffffffffffffffffffffffffffffffffffff
0x36c: V249 = AND 0xffffffffffffffffffffffffffffffffffffffff V247
0x36e: V250 = 0x20
0x370: V251 = ADD 0x20 0x4
0x375: V252 = CALLDATALOAD 0x24
0x376: V253 = 0xffffffffffffffffffffffffffffffffffffffff
0x38b: V254 = AND 0xffffffffffffffffffffffffffffffffffffffff V252
0x38d: V255 = 0x20
0x38f: V256 = ADD 0x20 0x24
0x395: V257 = 0x588
0x398: JUMP 0x588
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x399, V249, V254]
Exit stack: [V10, 0x399, V249, V254]

================================

Block 0x399
[0x399:0x3ae]
---
Predecessors: [0x588]
Successors: []
---
0x399 JUMPDEST
0x39a PUSH1 0x40
0x39c MLOAD
0x39d DUP1
0x39e DUP3
0x39f DUP2
0x3a0 MSTORE
0x3a1 PUSH1 0x20
0x3a3 ADD
0x3a4 SWAP2
0x3a5 POP
0x3a6 POP
0x3a7 PUSH1 0x40
0x3a9 MLOAD
0x3aa DUP1
0x3ab SWAP2
0x3ac SUB
0x3ad SWAP1
0x3ae RETURN
---
0x399: JUMPDEST 
0x39a: V258 = 0x40
0x39c: V259 = M[0x40]
0x3a0: M[V259] = V371
0x3a1: V260 = 0x20
0x3a3: V261 = ADD 0x20 V259
0x3a7: V262 = 0x40
0x3a9: V263 = M[0x40]
0x3ac: V264 = SUB V261 V263
0x3ae: RETURN V263 V264
---
Entry stack: [V10, 0x399, V371]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x399]

================================

Block 0x3af
[0x3af:0x3e7]
---
Predecessors: [0xa7]
Successors: [0xaf]
---
0x3af JUMPDEST
0x3b0 PUSH1 0x40
0x3b2 DUP1
0x3b3 MLOAD
0x3b4 SWAP1
0x3b5 DUP2
0x3b6 ADD
0x3b7 PUSH1 0x40
0x3b9 MSTORE
0x3ba DUP1
0x3bb PUSH1 0x1b
0x3bd DUP2
0x3be MSTORE
0x3bf PUSH1 0x20
0x3c1 ADD
0x3c2 PUSH32 0x736d617274696c6c696f6e732e696f20436c6173732031204554480000000000
0x3e3 DUP2
0x3e4 MSTORE
0x3e5 POP
0x3e6 DUP2
0x3e7 JUMP
---
0x3af: JUMPDEST 
0x3b0: V265 = 0x40
0x3b3: V266 = M[0x40]
0x3b6: V267 = ADD V266 0x40
0x3b7: V268 = 0x40
0x3b9: M[0x40] = V267
0x3bb: V269 = 0x1b
0x3be: M[V266] = 0x1b
0x3bf: V270 = 0x20
0x3c1: V271 = ADD 0x20 V266
0x3c2: V272 = 0x736d617274696c6c696f6e732e696f20436c6173732031204554480000000000
0x3e4: M[V271] = 0x736d617274696c6c696f6e732e696f20436c6173732031204554480000000000
0x3e7: JUMP 0xaf
---
Entry stack: [V10, 0xaf]
Stack pops: 1
Stack additions: [S0, V266]
Exit stack: [V10, 0xaf, V266]

================================

Block 0x3e8
[0x3e8:0x3ed]
---
Predecessors: [0x136]
Successors: [0x13e]
---
0x3e8 JUMPDEST
0x3e9 PUSH1 0x0
0x3eb SLOAD
0x3ec DUP2
0x3ed JUMP
---
0x3e8: JUMPDEST 
0x3e9: V273 = 0x0
0x3eb: V274 = S[0x0]
0x3ed: JUMP 0x13e
---
Entry stack: [V10, 0x13e]
Stack pops: 1
Stack additions: [S0, V274]
Exit stack: [V10, 0x13e, V274]

================================

Block 0x3ee
[0x3ee:0x476]
---
Predecessors: [0x15f]
Successors: [0x477, 0x47b]
---
0x3ee JUMPDEST
0x3ef PUSH1 0x0
0x3f1 PUSH1 0x3
0x3f3 PUSH1 0x0
0x3f5 DUP6
0x3f6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x40b AND
0x40c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x421 AND
0x422 DUP2
0x423 MSTORE
0x424 PUSH1 0x20
0x426 ADD
0x427 SWAP1
0x428 DUP2
0x429 MSTORE
0x42a PUSH1 0x20
0x42c ADD
0x42d PUSH1 0x0
0x42f SHA3
0x430 PUSH1 0x0
0x432 CALLER
0x433 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x448 AND
0x449 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x45e AND
0x45f DUP2
0x460 MSTORE
0x461 PUSH1 0x20
0x463 ADD
0x464 SWAP1
0x465 DUP2
0x466 MSTORE
0x467 PUSH1 0x20
0x469 ADD
0x46a PUSH1 0x0
0x46c SHA3
0x46d SLOAD
0x46e DUP3
0x46f GT
0x470 ISZERO
0x471 ISZERO
0x472 ISZERO
0x473 PUSH2 0x47b
0x476 JUMPI
---
0x3ee: JUMPDEST 
0x3ef: V275 = 0x0
0x3f1: V276 = 0x3
0x3f3: V277 = 0x0
0x3f6: V278 = 0xffffffffffffffffffffffffffffffffffffffff
0x40b: V279 = AND 0xffffffffffffffffffffffffffffffffffffffff V107
0x40c: V280 = 0xffffffffffffffffffffffffffffffffffffffff
0x421: V281 = AND 0xffffffffffffffffffffffffffffffffffffffff V279
0x423: M[0x0] = V281
0x424: V282 = 0x20
0x426: V283 = ADD 0x20 0x0
0x429: M[0x20] = 0x3
0x42a: V284 = 0x20
0x42c: V285 = ADD 0x20 0x20
0x42d: V286 = 0x0
0x42f: V287 = SHA3 0x0 0x40
0x430: V288 = 0x0
0x432: V289 = CALLER
0x433: V290 = 0xffffffffffffffffffffffffffffffffffffffff
0x448: V291 = AND 0xffffffffffffffffffffffffffffffffffffffff V289
0x449: V292 = 0xffffffffffffffffffffffffffffffffffffffff
0x45e: V293 = AND 0xffffffffffffffffffffffffffffffffffffffff V291
0x460: M[0x0] = V293
0x461: V294 = 0x20
0x463: V295 = ADD 0x20 0x0
0x466: M[0x20] = V287
0x467: V296 = 0x20
0x469: V297 = ADD 0x20 0x20
0x46a: V298 = 0x0
0x46c: V299 = SHA3 0x0 0x40
0x46d: V300 = S[V299]
0x46f: V301 = GT V115 V300
0x470: V302 = ISZERO V301
0x471: V303 = ISZERO V302
0x472: V304 = ISZERO V303
0x473: V305 = 0x47b
0x476: JUMPI 0x47b V304
---
Entry stack: [V10, 0x1b3, V107, V112, V115]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0]
Exit stack: [V10, 0x1b3, V107, V112, V115, 0x0]

================================

Block 0x477
[0x477:0x47a]
---
Predecessors: [0x3ee]
Successors: []
---
0x477 PUSH1 0x0
0x479 DUP1
0x47a REVERT
---
0x477: V306 = 0x0
0x47a: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1b3, V107, V112, V115, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b3, V107, V112, V115, 0x0]

================================

Block 0x47b
[0x47b:0x50f]
---
Predecessors: [0x3ee]
Successors: [0x5ad]
---
0x47b JUMPDEST
0x47c DUP2
0x47d PUSH1 0x3
0x47f PUSH1 0x0
0x481 DUP7
0x482 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x497 AND
0x498 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ad AND
0x4ae DUP2
0x4af MSTORE
0x4b0 PUSH1 0x20
0x4b2 ADD
0x4b3 SWAP1
0x4b4 DUP2
0x4b5 MSTORE
0x4b6 PUSH1 0x20
0x4b8 ADD
0x4b9 PUSH1 0x0
0x4bb SHA3
0x4bc PUSH1 0x0
0x4be CALLER
0x4bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4d4 AND
0x4d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ea AND
0x4eb DUP2
0x4ec MSTORE
0x4ed PUSH1 0x20
0x4ef ADD
0x4f0 SWAP1
0x4f1 DUP2
0x4f2 MSTORE
0x4f3 PUSH1 0x20
0x4f5 ADD
0x4f6 PUSH1 0x0
0x4f8 SHA3
0x4f9 PUSH1 0x0
0x4fb DUP3
0x4fc DUP3
0x4fd SLOAD
0x4fe SUB
0x4ff SWAP3
0x500 POP
0x501 POP
0x502 DUP2
0x503 SWAP1
0x504 SSTORE
0x505 POP
0x506 PUSH2 0x510
0x509 DUP5
0x50a DUP5
0x50b DUP5
0x50c PUSH2 0x5ad
0x50f JUMP
---
0x47b: JUMPDEST 
0x47d: V307 = 0x3
0x47f: V308 = 0x0
0x482: V309 = 0xffffffffffffffffffffffffffffffffffffffff
0x497: V310 = AND 0xffffffffffffffffffffffffffffffffffffffff V107
0x498: V311 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ad: V312 = AND 0xffffffffffffffffffffffffffffffffffffffff V310
0x4af: M[0x0] = V312
0x4b0: V313 = 0x20
0x4b2: V314 = ADD 0x20 0x0
0x4b5: M[0x20] = 0x3
0x4b6: V315 = 0x20
0x4b8: V316 = ADD 0x20 0x20
0x4b9: V317 = 0x0
0x4bb: V318 = SHA3 0x0 0x40
0x4bc: V319 = 0x0
0x4be: V320 = CALLER
0x4bf: V321 = 0xffffffffffffffffffffffffffffffffffffffff
0x4d4: V322 = AND 0xffffffffffffffffffffffffffffffffffffffff V320
0x4d5: V323 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ea: V324 = AND 0xffffffffffffffffffffffffffffffffffffffff V322
0x4ec: M[0x0] = V324
0x4ed: V325 = 0x20
0x4ef: V326 = ADD 0x20 0x0
0x4f2: M[0x20] = V318
0x4f3: V327 = 0x20
0x4f5: V328 = ADD 0x20 0x20
0x4f6: V329 = 0x0
0x4f8: V330 = SHA3 0x0 0x40
0x4f9: V331 = 0x0
0x4fd: V332 = S[V330]
0x4fe: V333 = SUB V332 V115
0x504: S[V330] = V333
0x506: V334 = 0x510
0x50c: V335 = 0x5ad
0x50f: JUMP 0x5ad
---
Entry stack: [V10, 0x1b3, V107, V112, V115, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x510, S3, S2, S1]
Exit stack: [V10, 0x1b3, V107, V112, V115, 0x0, 0x510, V107, V112, V115]

================================

Block 0x510
[0x510:0x514]
---
Predecessors: [0x8be]
Successors: [0x515]
---
0x510 JUMPDEST
0x511 PUSH1 0x1
0x513 SWAP1
0x514 POP
---
0x510: JUMPDEST 
0x511: V336 = 0x1
---
Entry stack: [V10, 0x1b3, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V10, 0x1b3, S3, S2, S1, 0x1]

================================

Block 0x515
[0x515:0x51b]
---
Predecessors: [0x510]
Successors: [0x1b3]
---
0x515 JUMPDEST
0x516 SWAP4
0x517 SWAP3
0x518 POP
0x519 POP
0x51a POP
0x51b JUMP
---
0x515: JUMPDEST 
0x51b: JUMP 0x1b3
---
Entry stack: [V10, 0x1b3, S3, S2, S1, 0x1]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V10, 0x1]

================================

Block 0x51c
[0x51c:0x520]
---
Predecessors: [0x1d8]
Successors: [0x1e0]
---
0x51c JUMPDEST
0x51d PUSH1 0x12
0x51f DUP2
0x520 JUMP
---
0x51c: JUMPDEST 
0x51d: V337 = 0x12
0x520: JUMP 0x1e0
---
Entry stack: [V10, 0x1e0]
Stack pops: 1
Stack additions: [S0, 0x12]
Exit stack: [V10, 0x1e0, 0x12]

================================

Block 0x521
[0x521:0x526]
---
Predecessors: [0x207]
Successors: [0x20f]
---
0x521 JUMPDEST
0x522 PUSH1 0x1
0x524 SLOAD
0x525 DUP2
0x526 JUMP
---
0x521: JUMPDEST 
0x522: V338 = 0x1
0x524: V339 = S[0x1]
0x526: JUMP 0x20f
---
Entry stack: [V10, 0x20f]
Stack pops: 1
Stack additions: [S0, V339]
Exit stack: [V10, 0x20f, V339]

================================

Block 0x527
[0x527:0x53e]
---
Predecessors: [0x230]
Successors: [0x25c]
---
0x527 JUMPDEST
0x528 PUSH1 0x2
0x52a PUSH1 0x20
0x52c MSTORE
0x52d DUP1
0x52e PUSH1 0x0
0x530 MSTORE
0x531 PUSH1 0x40
0x533 PUSH1 0x0
0x535 SHA3
0x536 PUSH1 0x0
0x538 SWAP2
0x539 POP
0x53a SWAP1
0x53b POP
0x53c SLOAD
0x53d DUP2
0x53e JUMP
---
0x527: JUMPDEST 
0x528: V340 = 0x2
0x52a: V341 = 0x20
0x52c: M[0x20] = 0x2
0x52e: V342 = 0x0
0x530: M[0x0] = V168
0x531: V343 = 0x40
0x533: V344 = 0x0
0x535: V345 = SHA3 0x0 0x40
0x536: V346 = 0x0
0x53c: V347 = S[V345]
0x53e: JUMP 0x25c
---
Entry stack: [V10, 0x25c, V168]
Stack pops: 2
Stack additions: [S1, V347]
Exit stack: [V10, 0x25c, V347]

================================

Block 0x53f
[0x53f:0x577]
---
Predecessors: [0x27d]
Successors: [0x285]
---
0x53f JUMPDEST
0x540 PUSH1 0x40
0x542 DUP1
0x543 MLOAD
0x544 SWAP1
0x545 DUP2
0x546 ADD
0x547 PUSH1 0x40
0x549 MSTORE
0x54a DUP1
0x54b PUSH1 0x7
0x54d DUP2
0x54e MSTORE
0x54f PUSH1 0x20
0x551 ADD
0x552 PUSH32 0x504154454e545300000000000000000000000000000000000000000000000000
0x573 DUP2
0x574 MSTORE
0x575 POP
0x576 DUP2
0x577 JUMP
---
0x53f: JUMPDEST 
0x540: V348 = 0x40
0x543: V349 = M[0x40]
0x546: V350 = ADD V349 0x40
0x547: V351 = 0x40
0x549: M[0x40] = V350
0x54b: V352 = 0x7
0x54e: M[V349] = 0x7
0x54f: V353 = 0x20
0x551: V354 = ADD 0x20 V349
0x552: V355 = 0x504154454e545300000000000000000000000000000000000000000000000000
0x574: M[V354] = 0x504154454e545300000000000000000000000000000000000000000000000000
0x577: JUMP 0x285
---
Entry stack: [V10, 0x285]
Stack pops: 1
Stack additions: [S0, V349]
Exit stack: [V10, 0x285, V349]

================================

Block 0x578
[0x578:0x582]
---
Predecessors: [0x30c]
Successors: [0x5ad]
---
0x578 JUMPDEST
0x579 PUSH2 0x583
0x57c CALLER
0x57d DUP4
0x57e DUP4
0x57f PUSH2 0x5ad
0x582 JUMP
---
0x578: JUMPDEST 
0x579: V356 = 0x583
0x57c: V357 = CALLER
0x57f: V358 = 0x5ad
0x582: JUMP 0x5ad
---
Entry stack: [V10, 0x341, V234, V237]
Stack pops: 2
Stack additions: [S1, S0, 0x583, V357, S1, S0]
Exit stack: [V10, 0x341, V234, V237, 0x583, V357, V234, V237]

================================

Block 0x583
[0x583:0x583]
---
Predecessors: [0x8be]
Successors: [0x584]
---
0x583 JUMPDEST
---
0x583: JUMPDEST 
---
Entry stack: [V10, 0x1b3, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b3, S3, S2, S1, S0]

================================

Block 0x584
[0x584:0x587]
---
Predecessors: [0x583]
Successors: [0x341]
---
0x584 JUMPDEST
0x585 POP
0x586 POP
0x587 JUMP
---
0x584: JUMPDEST 
0x587: JUMP S2
---
Entry stack: [V10, 0x1b3, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x1b3, S3]

================================

Block 0x588
[0x588:0x5ac]
---
Predecessors: [0x34e]
Successors: [0x399]
---
0x588 JUMPDEST
0x589 PUSH1 0x3
0x58b PUSH1 0x20
0x58d MSTORE
0x58e DUP2
0x58f PUSH1 0x0
0x591 MSTORE
0x592 PUSH1 0x40
0x594 PUSH1 0x0
0x596 SHA3
0x597 PUSH1 0x20
0x599 MSTORE
0x59a DUP1
0x59b PUSH1 0x0
0x59d MSTORE
0x59e PUSH1 0x40
0x5a0 PUSH1 0x0
0x5a2 SHA3
0x5a3 PUSH1 0x0
0x5a5 SWAP2
0x5a6 POP
0x5a7 SWAP2
0x5a8 POP
0x5a9 POP
0x5aa SLOAD
0x5ab DUP2
0x5ac JUMP
---
0x588: JUMPDEST 
0x589: V359 = 0x3
0x58b: V360 = 0x20
0x58d: M[0x20] = 0x3
0x58f: V361 = 0x0
0x591: M[0x0] = V249
0x592: V362 = 0x40
0x594: V363 = 0x0
0x596: V364 = SHA3 0x0 0x40
0x597: V365 = 0x20
0x599: M[0x20] = V364
0x59b: V366 = 0x0
0x59d: M[0x0] = V254
0x59e: V367 = 0x40
0x5a0: V368 = 0x0
0x5a2: V369 = SHA3 0x0 0x40
0x5a3: V370 = 0x0
0x5aa: V371 = S[V369]
0x5ac: JUMP 0x399
---
Entry stack: [V10, 0x399, V249, V254]
Stack pops: 3
Stack additions: [S2, V371]
Exit stack: [V10, 0x399, V371]

================================

Block 0x5ad
[0x5ad:0x5cf]
---
Predecessors: [0x47b, 0x578]
Successors: [0x5d0, 0x5d4]
---
0x5ad JUMPDEST
0x5ae PUSH1 0x0
0x5b0 DUP1
0x5b1 DUP4
0x5b2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5c7 AND
0x5c8 EQ
0x5c9 ISZERO
0x5ca ISZERO
0x5cb ISZERO
0x5cc PUSH2 0x5d4
0x5cf JUMPI
---
0x5ad: JUMPDEST 
0x5ae: V372 = 0x0
0x5b2: V373 = 0xffffffffffffffffffffffffffffffffffffffff
0x5c7: V374 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x5c8: V375 = EQ V374 0x0
0x5c9: V376 = ISZERO V375
0x5ca: V377 = ISZERO V376
0x5cb: V378 = ISZERO V377
0x5cc: V379 = 0x5d4
0x5cf: JUMPI 0x5d4 V378
---
Entry stack: [V10, 0x1b3, S7, S6, S5, S4, {0x510, 0x583}, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V10, 0x1b3, S7, S6, S5, S4, {0x510, 0x583}, S2, S1, S0, 0x0]

================================

Block 0x5d0
[0x5d0:0x5d3]
---
Predecessors: [0x5ad]
Successors: []
---
0x5d0 PUSH1 0x0
0x5d2 DUP1
0x5d3 REVERT
---
0x5d0: V380 = 0x0
0x5d3: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1b3, S8, S7, S6, S5, {0x510, 0x583}, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b3, S8, S7, S6, S5, {0x510, 0x583}, S3, S2, S1, 0x0]

================================

Block 0x5d4
[0x5d4:0x61d]
---
Predecessors: [0x5ad]
Successors: [0x61e, 0x622]
---
0x5d4 JUMPDEST
0x5d5 DUP2
0x5d6 PUSH1 0x2
0x5d8 PUSH1 0x0
0x5da DUP7
0x5db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5f0 AND
0x5f1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x606 AND
0x607 DUP2
0x608 MSTORE
0x609 PUSH1 0x20
0x60b ADD
0x60c SWAP1
0x60d DUP2
0x60e MSTORE
0x60f PUSH1 0x20
0x611 ADD
0x612 PUSH1 0x0
0x614 SHA3
0x615 SLOAD
0x616 LT
0x617 ISZERO
0x618 ISZERO
0x619 ISZERO
0x61a PUSH2 0x622
0x61d JUMPI
---
0x5d4: JUMPDEST 
0x5d6: V381 = 0x2
0x5d8: V382 = 0x0
0x5db: V383 = 0xffffffffffffffffffffffffffffffffffffffff
0x5f0: V384 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x5f1: V385 = 0xffffffffffffffffffffffffffffffffffffffff
0x606: V386 = AND 0xffffffffffffffffffffffffffffffffffffffff V384
0x608: M[0x0] = V386
0x609: V387 = 0x20
0x60b: V388 = ADD 0x20 0x0
0x60e: M[0x20] = 0x2
0x60f: V389 = 0x20
0x611: V390 = ADD 0x20 0x20
0x612: V391 = 0x0
0x614: V392 = SHA3 0x0 0x40
0x615: V393 = S[V392]
0x616: V394 = LT V393 S1
0x617: V395 = ISZERO V394
0x618: V396 = ISZERO V395
0x619: V397 = ISZERO V396
0x61a: V398 = 0x622
0x61d: JUMPI 0x622 V397
---
Entry stack: [V10, 0x1b3, S8, S7, S6, S5, {0x510, 0x583}, S3, S2, S1, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x1b3, S8, S7, S6, S5, {0x510, 0x583}, S3, S2, S1, 0x0]

================================

Block 0x61e
[0x61e:0x621]
---
Predecessors: [0x5d4]
Successors: []
---
0x61e PUSH1 0x0
0x620 DUP1
0x621 REVERT
---
0x61e: V399 = 0x0
0x621: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1b3, S8, S7, S6, S5, {0x510, 0x583}, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b3, S8, S7, S6, S5, {0x510, 0x583}, S3, S2, S1, 0x0]

================================

Block 0x622
[0x622:0x6ab]
---
Predecessors: [0x5d4]
Successors: [0x6ac, 0x6b0]
---
0x622 JUMPDEST
0x623 PUSH1 0x2
0x625 PUSH1 0x0
0x627 DUP5
0x628 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x63d AND
0x63e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x653 AND
0x654 DUP2
0x655 MSTORE
0x656 PUSH1 0x20
0x658 ADD
0x659 SWAP1
0x65a DUP2
0x65b MSTORE
0x65c PUSH1 0x20
0x65e ADD
0x65f PUSH1 0x0
0x661 SHA3
0x662 SLOAD
0x663 DUP3
0x664 PUSH1 0x2
0x666 PUSH1 0x0
0x668 DUP7
0x669 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x67e AND
0x67f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x694 AND
0x695 DUP2
0x696 MSTORE
0x697 PUSH1 0x20
0x699 ADD
0x69a SWAP1
0x69b DUP2
0x69c MSTORE
0x69d PUSH1 0x20
0x69f ADD
0x6a0 PUSH1 0x0
0x6a2 SHA3
0x6a3 SLOAD
0x6a4 ADD
0x6a5 GT
0x6a6 ISZERO
0x6a7 ISZERO
0x6a8 PUSH2 0x6b0
0x6ab JUMPI
---
0x622: JUMPDEST 
0x623: V400 = 0x2
0x625: V401 = 0x0
0x628: V402 = 0xffffffffffffffffffffffffffffffffffffffff
0x63d: V403 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x63e: V404 = 0xffffffffffffffffffffffffffffffffffffffff
0x653: V405 = AND 0xffffffffffffffffffffffffffffffffffffffff V403
0x655: M[0x0] = V405
0x656: V406 = 0x20
0x658: V407 = ADD 0x20 0x0
0x65b: M[0x20] = 0x2
0x65c: V408 = 0x20
0x65e: V409 = ADD 0x20 0x20
0x65f: V410 = 0x0
0x661: V411 = SHA3 0x0 0x40
0x662: V412 = S[V411]
0x664: V413 = 0x2
0x666: V414 = 0x0
0x669: V415 = 0xffffffffffffffffffffffffffffffffffffffff
0x67e: V416 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x67f: V417 = 0xffffffffffffffffffffffffffffffffffffffff
0x694: V418 = AND 0xffffffffffffffffffffffffffffffffffffffff V416
0x696: M[0x0] = V418
0x697: V419 = 0x20
0x699: V420 = ADD 0x20 0x0
0x69c: M[0x20] = 0x2
0x69d: V421 = 0x20
0x69f: V422 = ADD 0x20 0x20
0x6a0: V423 = 0x0
0x6a2: V424 = SHA3 0x0 0x40
0x6a3: V425 = S[V424]
0x6a4: V426 = ADD V425 S1
0x6a5: V427 = GT V426 V412
0x6a6: V428 = ISZERO V427
0x6a7: V429 = ISZERO V428
0x6a8: V430 = 0x6b0
0x6ab: JUMPI 0x6b0 V429
---
Entry stack: [V10, 0x1b3, S8, S7, S6, S5, {0x510, 0x583}, S3, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x1b3, S8, S7, S6, S5, {0x510, 0x583}, S3, S2, S1, 0x0]

================================

Block 0x6ac
[0x6ac:0x6af]
---
Predecessors: [0x622]
Successors: []
---
0x6ac PUSH1 0x0
0x6ae DUP1
0x6af REVERT
---
0x6ac: V431 = 0x0
0x6af: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1b3, S8, S7, S6, S5, {0x510, 0x583}, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b3, S8, S7, S6, S5, {0x510, 0x583}, S3, S2, S1, 0x0]

================================

Block 0x6b0
[0x6b0:0x8bb]
---
Predecessors: [0x622]
Successors: [0x8bc, 0x8bd]
---
0x6b0 JUMPDEST
0x6b1 PUSH1 0x2
0x6b3 PUSH1 0x0
0x6b5 DUP5
0x6b6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6cb AND
0x6cc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6e1 AND
0x6e2 DUP2
0x6e3 MSTORE
0x6e4 PUSH1 0x20
0x6e6 ADD
0x6e7 SWAP1
0x6e8 DUP2
0x6e9 MSTORE
0x6ea PUSH1 0x20
0x6ec ADD
0x6ed PUSH1 0x0
0x6ef SHA3
0x6f0 SLOAD
0x6f1 PUSH1 0x2
0x6f3 PUSH1 0x0
0x6f5 DUP7
0x6f6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x70b AND
0x70c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x721 AND
0x722 DUP2
0x723 MSTORE
0x724 PUSH1 0x20
0x726 ADD
0x727 SWAP1
0x728 DUP2
0x729 MSTORE
0x72a PUSH1 0x20
0x72c ADD
0x72d PUSH1 0x0
0x72f SHA3
0x730 SLOAD
0x731 ADD
0x732 SWAP1
0x733 POP
0x734 DUP2
0x735 PUSH1 0x2
0x737 PUSH1 0x0
0x739 DUP7
0x73a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x74f AND
0x750 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x765 AND
0x766 DUP2
0x767 MSTORE
0x768 PUSH1 0x20
0x76a ADD
0x76b SWAP1
0x76c DUP2
0x76d MSTORE
0x76e PUSH1 0x20
0x770 ADD
0x771 PUSH1 0x0
0x773 SHA3
0x774 PUSH1 0x0
0x776 DUP3
0x777 DUP3
0x778 SLOAD
0x779 SUB
0x77a SWAP3
0x77b POP
0x77c POP
0x77d DUP2
0x77e SWAP1
0x77f SSTORE
0x780 POP
0x781 DUP2
0x782 PUSH1 0x2
0x784 PUSH1 0x0
0x786 DUP6
0x787 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x79c AND
0x79d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7b2 AND
0x7b3 DUP2
0x7b4 MSTORE
0x7b5 PUSH1 0x20
0x7b7 ADD
0x7b8 SWAP1
0x7b9 DUP2
0x7ba MSTORE
0x7bb PUSH1 0x20
0x7bd ADD
0x7be PUSH1 0x0
0x7c0 SHA3
0x7c1 PUSH1 0x0
0x7c3 DUP3
0x7c4 DUP3
0x7c5 SLOAD
0x7c6 ADD
0x7c7 SWAP3
0x7c8 POP
0x7c9 POP
0x7ca DUP2
0x7cb SWAP1
0x7cc SSTORE
0x7cd POP
0x7ce DUP3
0x7cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7e4 AND
0x7e5 DUP5
0x7e6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7fb AND
0x7fc PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x81d DUP5
0x81e PUSH1 0x40
0x820 MLOAD
0x821 DUP1
0x822 DUP3
0x823 DUP2
0x824 MSTORE
0x825 PUSH1 0x20
0x827 ADD
0x828 SWAP2
0x829 POP
0x82a POP
0x82b PUSH1 0x40
0x82d MLOAD
0x82e DUP1
0x82f SWAP2
0x830 SUB
0x831 SWAP1
0x832 LOG3
0x833 DUP1
0x834 PUSH1 0x2
0x836 PUSH1 0x0
0x838 DUP6
0x839 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x84e AND
0x84f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x864 AND
0x865 DUP2
0x866 MSTORE
0x867 PUSH1 0x20
0x869 ADD
0x86a SWAP1
0x86b DUP2
0x86c MSTORE
0x86d PUSH1 0x20
0x86f ADD
0x870 PUSH1 0x0
0x872 SHA3
0x873 SLOAD
0x874 PUSH1 0x2
0x876 PUSH1 0x0
0x878 DUP8
0x879 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x88e AND
0x88f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8a4 AND
0x8a5 DUP2
0x8a6 MSTORE
0x8a7 PUSH1 0x20
0x8a9 ADD
0x8aa SWAP1
0x8ab DUP2
0x8ac MSTORE
0x8ad PUSH1 0x20
0x8af ADD
0x8b0 PUSH1 0x0
0x8b2 SHA3
0x8b3 SLOAD
0x8b4 ADD
0x8b5 EQ
0x8b6 ISZERO
0x8b7 ISZERO
0x8b8 PUSH2 0x8bd
0x8bb JUMPI
---
0x6b0: JUMPDEST 
0x6b1: V432 = 0x2
0x6b3: V433 = 0x0
0x6b6: V434 = 0xffffffffffffffffffffffffffffffffffffffff
0x6cb: V435 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x6cc: V436 = 0xffffffffffffffffffffffffffffffffffffffff
0x6e1: V437 = AND 0xffffffffffffffffffffffffffffffffffffffff V435
0x6e3: M[0x0] = V437
0x6e4: V438 = 0x20
0x6e6: V439 = ADD 0x20 0x0
0x6e9: M[0x20] = 0x2
0x6ea: V440 = 0x20
0x6ec: V441 = ADD 0x20 0x20
0x6ed: V442 = 0x0
0x6ef: V443 = SHA3 0x0 0x40
0x6f0: V444 = S[V443]
0x6f1: V445 = 0x2
0x6f3: V446 = 0x0
0x6f6: V447 = 0xffffffffffffffffffffffffffffffffffffffff
0x70b: V448 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x70c: V449 = 0xffffffffffffffffffffffffffffffffffffffff
0x721: V450 = AND 0xffffffffffffffffffffffffffffffffffffffff V448
0x723: M[0x0] = V450
0x724: V451 = 0x20
0x726: V452 = ADD 0x20 0x0
0x729: M[0x20] = 0x2
0x72a: V453 = 0x20
0x72c: V454 = ADD 0x20 0x20
0x72d: V455 = 0x0
0x72f: V456 = SHA3 0x0 0x40
0x730: V457 = S[V456]
0x731: V458 = ADD V457 V444
0x735: V459 = 0x2
0x737: V460 = 0x0
0x73a: V461 = 0xffffffffffffffffffffffffffffffffffffffff
0x74f: V462 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x750: V463 = 0xffffffffffffffffffffffffffffffffffffffff
0x765: V464 = AND 0xffffffffffffffffffffffffffffffffffffffff V462
0x767: M[0x0] = V464
0x768: V465 = 0x20
0x76a: V466 = ADD 0x20 0x0
0x76d: M[0x20] = 0x2
0x76e: V467 = 0x20
0x770: V468 = ADD 0x20 0x20
0x771: V469 = 0x0
0x773: V470 = SHA3 0x0 0x40
0x774: V471 = 0x0
0x778: V472 = S[V470]
0x779: V473 = SUB V472 S1
0x77f: S[V470] = V473
0x782: V474 = 0x2
0x784: V475 = 0x0
0x787: V476 = 0xffffffffffffffffffffffffffffffffffffffff
0x79c: V477 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x79d: V478 = 0xffffffffffffffffffffffffffffffffffffffff
0x7b2: V479 = AND 0xffffffffffffffffffffffffffffffffffffffff V477
0x7b4: M[0x0] = V479
0x7b5: V480 = 0x20
0x7b7: V481 = ADD 0x20 0x0
0x7ba: M[0x20] = 0x2
0x7bb: V482 = 0x20
0x7bd: V483 = ADD 0x20 0x20
0x7be: V484 = 0x0
0x7c0: V485 = SHA3 0x0 0x40
0x7c1: V486 = 0x0
0x7c5: V487 = S[V485]
0x7c6: V488 = ADD V487 S1
0x7cc: S[V485] = V488
0x7cf: V489 = 0xffffffffffffffffffffffffffffffffffffffff
0x7e4: V490 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x7e6: V491 = 0xffffffffffffffffffffffffffffffffffffffff
0x7fb: V492 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x7fc: V493 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x81e: V494 = 0x40
0x820: V495 = M[0x40]
0x824: M[V495] = S1
0x825: V496 = 0x20
0x827: V497 = ADD 0x20 V495
0x82b: V498 = 0x40
0x82d: V499 = M[0x40]
0x830: V500 = SUB V497 V499
0x832: LOG V499 V500 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V492 V490
0x834: V501 = 0x2
0x836: V502 = 0x0
0x839: V503 = 0xffffffffffffffffffffffffffffffffffffffff
0x84e: V504 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x84f: V505 = 0xffffffffffffffffffffffffffffffffffffffff
0x864: V506 = AND 0xffffffffffffffffffffffffffffffffffffffff V504
0x866: M[0x0] = V506
0x867: V507 = 0x20
0x869: V508 = ADD 0x20 0x0
0x86c: M[0x20] = 0x2
0x86d: V509 = 0x20
0x86f: V510 = ADD 0x20 0x20
0x870: V511 = 0x0
0x872: V512 = SHA3 0x0 0x40
0x873: V513 = S[V512]
0x874: V514 = 0x2
0x876: V515 = 0x0
0x879: V516 = 0xffffffffffffffffffffffffffffffffffffffff
0x88e: V517 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x88f: V518 = 0xffffffffffffffffffffffffffffffffffffffff
0x8a4: V519 = AND 0xffffffffffffffffffffffffffffffffffffffff V517
0x8a6: M[0x0] = V519
0x8a7: V520 = 0x20
0x8a9: V521 = ADD 0x20 0x0
0x8ac: M[0x20] = 0x2
0x8ad: V522 = 0x20
0x8af: V523 = ADD 0x20 0x20
0x8b0: V524 = 0x0
0x8b2: V525 = SHA3 0x0 0x40
0x8b3: V526 = S[V525]
0x8b4: V527 = ADD V526 V513
0x8b5: V528 = EQ V527 V458
0x8b6: V529 = ISZERO V528
0x8b7: V530 = ISZERO V529
0x8b8: V531 = 0x8bd
0x8bb: JUMPI 0x8bd V530
---
Entry stack: [V10, 0x1b3, S8, S7, S6, S5, {0x510, 0x583}, S3, S2, S1, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, V458]
Exit stack: [V10, 0x1b3, S8, S7, S6, S5, {0x510, 0x583}, S3, S2, S1, V458]

================================

Block 0x8bc
[0x8bc:0x8bc]
---
Predecessors: [0x6b0]
Successors: []
---
0x8bc INVALID
---
0x8bc: INVALID 
---
Entry stack: [V10, 0x1b3, S8, S7, S6, S5, {0x510, 0x583}, S3, S2, S1, V458]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b3, S8, S7, S6, S5, {0x510, 0x583}, S3, S2, S1, V458]

================================

Block 0x8bd
[0x8bd:0x8bd]
---
Predecessors: [0x6b0]
Successors: [0x8be]
---
0x8bd JUMPDEST
---
0x8bd: JUMPDEST 
---
Entry stack: [V10, 0x1b3, S8, S7, S6, S5, {0x510, 0x583}, S3, S2, S1, V458]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1b3, S8, S7, S6, S5, {0x510, 0x583}, S3, S2, S1, V458]

================================

Block 0x8be
[0x8be:0x8c3]
---
Predecessors: [0x8bd]
Successors: [0x510, 0x583]
---
0x8be JUMPDEST
0x8bf POP
0x8c0 POP
0x8c1 POP
0x8c2 POP
0x8c3 JUMP
---
0x8be: JUMPDEST 
0x8c3: JUMP {0x510, 0x583}
---
Entry stack: [V10, 0x1b3, S8, S7, S6, S5, {0x510, 0x583}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x1b3, S8, S7, S6, S5]

================================

Block 0x8c4
[0x8c4:0x8d3]
---
Predecessors: []
Successors: [0x8d4]
Has unresolved jump.
---
0x8c4 STOP
0x8c5 LOG1
0x8c6 PUSH6 0x627a7a723058
0x8cd SHA3
0x8ce MISSING 0x1e
0x8cf MISSING 0xc7
0x8d0 LOG4
0x8d1 MISSING 0xcd
0x8d2 MISSING 0xd9
0x8d3 JUMPI
---
0x8c4: STOP 
0x8c5: LOG S0 S1 S2
0x8c6: V532 = 0x627a7a723058
0x8cd: V533 = SHA3 0x627a7a723058 S3
0x8ce: MISSING 0x1e
0x8cf: MISSING 0xc7
0x8d0: LOG S0 S1 S2 S3 S4 S5
0x8d1: MISSING 0xcd
0x8d2: MISSING 0xd9
0x8d3: JUMPI S0 S1
---
Entry stack: []
Stack pops: 0
Stack additions: [V533]
Exit stack: []

================================

Block 0x8d4
[0x8d4:0x8f2]
---
Predecessors: [0x8c4]
Successors: []
---
0x8d4 DUP9
0x8d5 PUSH2 0x2b97
0x8d8 LOG2
0x8d9 PUSH25 0xcfafb3713a96cbb36c7dba9dd03edd139b70da6f0029
---
0x8d5: V534 = 0x2b97
0x8d8: LOG 0x2b97 S8 S0 S1
0x8d9: V535 = 0xcfafb3713a96cbb36c7dba9dd03edd139b70da6f0029
---
Entry stack: []
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, 0xcfafb3713a96cbb36c7dba9dd03edd139b70da6f0029]
Exit stack: [S8, S7, S6, S5, S4, S3, S2, 0xcfafb3713a96cbb36c7dba9dd03edd139b70da6f0029]

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x9c
Exit block: 0x11d
Body: 0x9c, 0xa3, 0xa7, 0xaf, 0xd4, 0xdd, 0xe5, 0xf0, 0x104, 0x11d, 0x3af

Function 1:
Public function signature: 0x18160ddd
Entry block: 0x12b
Exit block: 0x13e
Body: 0x12b, 0x132, 0x136, 0x13e, 0x3e8

Function 2:
Public function signature: 0x23b872dd
Entry block: 0x154
Exit block: 0x1b3
Body: 0x154, 0x15b, 0x15f, 0x1b3, 0x3ee, 0x477, 0x47b, 0x510, 0x515

Function 3:
Public function signature: 0x313ce567
Entry block: 0x1cd
Exit block: 0x1e0
Body: 0x1cd, 0x1d4, 0x1d8, 0x1e0, 0x51c

Function 4:
Public function signature: 0x378dc3dc
Entry block: 0x1fc
Exit block: 0x20f
Body: 0x1fc, 0x203, 0x207, 0x20f, 0x521

Function 5:
Public function signature: 0x70a08231
Entry block: 0x225
Exit block: 0x25c
Body: 0x225, 0x22c, 0x230, 0x25c, 0x527

Function 6:
Public function signature: 0x95d89b41
Entry block: 0x272
Exit block: 0x2f3
Body: 0x272, 0x279, 0x27d, 0x285, 0x2aa, 0x2b3, 0x2bb, 0x2c6, 0x2da, 0x2f3, 0x53f

Function 7:
Public function signature: 0xa9059cbb
Entry block: 0x301
Exit block: 0x341
Body: 0x301, 0x308, 0x30c, 0x341, 0x578, 0x583, 0x584

Function 8:
Public function signature: 0xdd62ed3e
Entry block: 0x343
Exit block: 0x399
Body: 0x343, 0x34a, 0x34e, 0x399, 0x588

Function 9:
Public fallback function
Entry block: 0x97
Exit block: 0x97
Body: 0x97

Function 10:
Private function
Entry block: 0x5ad
Exit block: 0x8be
Body: 0x5ad, 0x5d4, 0x622, 0x6b0, 0x8bd, 0x8be

