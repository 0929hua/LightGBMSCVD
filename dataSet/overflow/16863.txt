Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x97]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x97
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x97
0xa: JUMPI 0x97 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x9c]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x6fdde03
0x3a EQ
0x3b PUSH2 0x9c
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x6fdde03
0x3a: V12 = EQ 0x6fdde03 V10
0x3b: V13 = 0x9c
0x3e: JUMPI 0x9c V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x12b]
---
0x3f DUP1
0x40 PUSH4 0x95ea7b3
0x45 EQ
0x46 PUSH2 0x12b
0x49 JUMPI
---
0x40: V14 = 0x95ea7b3
0x45: V15 = EQ 0x95ea7b3 V10
0x46: V16 = 0x12b
0x49: JUMPI 0x12b V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x185]
---
0x4a DUP1
0x4b PUSH4 0x18160ddd
0x50 EQ
0x51 PUSH2 0x185
0x54 JUMPI
---
0x4b: V17 = 0x18160ddd
0x50: V18 = EQ 0x18160ddd V10
0x51: V19 = 0x185
0x54: JUMPI 0x185 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x1ae]
---
0x55 DUP1
0x56 PUSH4 0x313ce567
0x5b EQ
0x5c PUSH2 0x1ae
0x5f JUMPI
---
0x56: V20 = 0x313ce567
0x5b: V21 = EQ 0x313ce567 V10
0x5c: V22 = 0x1ae
0x5f: JUMPI 0x1ae V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x1dd]
---
0x60 DUP1
0x61 PUSH4 0x70a08231
0x66 EQ
0x67 PUSH2 0x1dd
0x6a JUMPI
---
0x61: V23 = 0x70a08231
0x66: V24 = EQ 0x70a08231 V10
0x67: V25 = 0x1dd
0x6a: JUMPI 0x1dd V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x60]
Successors: [0x76, 0x22a]
---
0x6b DUP1
0x6c PUSH4 0x95d89b41
0x71 EQ
0x72 PUSH2 0x22a
0x75 JUMPI
---
0x6c: V26 = 0x95d89b41
0x71: V27 = EQ 0x95d89b41 V10
0x72: V28 = 0x22a
0x75: JUMPI 0x22a V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x76
[0x76:0x80]
---
Predecessors: [0x6b]
Successors: [0x81, 0x2b9]
---
0x76 DUP1
0x77 PUSH4 0xa9059cbb
0x7c EQ
0x7d PUSH2 0x2b9
0x80 JUMPI
---
0x77: V29 = 0xa9059cbb
0x7c: V30 = EQ 0xa9059cbb V10
0x7d: V31 = 0x2b9
0x80: JUMPI 0x2b9 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x81
[0x81:0x8b]
---
Predecessors: [0x76]
Successors: [0x8c, 0x2fb]
---
0x81 DUP1
0x82 PUSH4 0xcae9ca51
0x87 EQ
0x88 PUSH2 0x2fb
0x8b JUMPI
---
0x82: V32 = 0xcae9ca51
0x87: V33 = EQ 0xcae9ca51 V10
0x88: V34 = 0x2fb
0x8b: JUMPI 0x2fb V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8c
[0x8c:0x96]
---
Predecessors: [0x81]
Successors: [0x97, 0x398]
---
0x8c DUP1
0x8d PUSH4 0xdd62ed3e
0x92 EQ
0x93 PUSH2 0x398
0x96 JUMPI
---
0x8d: V35 = 0xdd62ed3e
0x92: V36 = EQ 0xdd62ed3e V10
0x93: V37 = 0x398
0x96: JUMPI 0x398 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x97
[0x97:0x9b]
---
Predecessors: [0x0, 0x8c]
Successors: []
---
0x97 JUMPDEST
0x98 PUSH1 0x0
0x9a DUP1
0x9b REVERT
---
0x97: JUMPDEST 
0x98: V38 = 0x0
0x9b: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x9c
[0x9c:0xa2]
---
Predecessors: [0xb]
Successors: [0xa3, 0xa7]
---
0x9c JUMPDEST
0x9d CALLVALUE
0x9e ISZERO
0x9f PUSH2 0xa7
0xa2 JUMPI
---
0x9c: JUMPDEST 
0x9d: V39 = CALLVALUE
0x9e: V40 = ISZERO V39
0x9f: V41 = 0xa7
0xa2: JUMPI 0xa7 V40
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xa3
[0xa3:0xa6]
---
Predecessors: [0x9c]
Successors: []
---
0xa3 PUSH1 0x0
0xa5 DUP1
0xa6 REVERT
---
0xa3: V42 = 0x0
0xa6: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xa7
[0xa7:0xae]
---
Predecessors: [0x9c]
Successors: [0x404]
---
0xa7 JUMPDEST
0xa8 PUSH2 0xaf
0xab PUSH2 0x404
0xae JUMP
---
0xa7: JUMPDEST 
0xa8: V43 = 0xaf
0xab: V44 = 0x404
0xae: JUMP 0x404
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xaf]
Exit stack: [V10, 0xaf]

================================

Block 0xaf
[0xaf:0xd3]
---
Predecessors: [0x49a]
Successors: [0xd4]
---
0xaf JUMPDEST
0xb0 PUSH1 0x40
0xb2 MLOAD
0xb3 DUP1
0xb4 DUP1
0xb5 PUSH1 0x20
0xb7 ADD
0xb8 DUP3
0xb9 DUP2
0xba SUB
0xbb DUP3
0xbc MSTORE
0xbd DUP4
0xbe DUP2
0xbf DUP2
0xc0 MLOAD
0xc1 DUP2
0xc2 MSTORE
0xc3 PUSH1 0x20
0xc5 ADD
0xc6 SWAP2
0xc7 POP
0xc8 DUP1
0xc9 MLOAD
0xca SWAP1
0xcb PUSH1 0x20
0xcd ADD
0xce SWAP1
0xcf DUP1
0xd0 DUP4
0xd1 DUP4
0xd2 PUSH1 0x0
---
0xaf: JUMPDEST 
0xb0: V45 = 0x40
0xb2: V46 = M[0x40]
0xb5: V47 = 0x20
0xb7: V48 = ADD 0x20 V46
0xba: V49 = SUB V48 V46
0xbc: M[V46] = V49
0xc0: V50 = M[V314]
0xc2: M[V48] = V50
0xc3: V51 = 0x20
0xc5: V52 = ADD 0x20 V48
0xc9: V53 = M[V314]
0xcb: V54 = 0x20
0xcd: V55 = ADD 0x20 V314
0xd2: V56 = 0x0
---
Entry stack: [V10, 0xaf, V314]
Stack pops: 1
Stack additions: [S0, V46, V46, V52, V55, V53, V53, V52, V55, 0x0]
Exit stack: [V10, 0xaf, V314, V46, V46, V52, V55, V53, V53, V52, V55, 0x0]

================================

Block 0xd4
[0xd4:0xdc]
---
Predecessors: [0xaf, 0xe5]
Successors: [0xdd, 0xf0]
---
0xd4 JUMPDEST
0xd5 DUP4
0xd6 DUP2
0xd7 LT
0xd8 ISZERO
0xd9 PUSH2 0xf0
0xdc JUMPI
---
0xd4: JUMPDEST 
0xd7: V57 = LT S0 V53
0xd8: V58 = ISZERO V57
0xd9: V59 = 0xf0
0xdc: JUMPI 0xf0 V58
---
Entry stack: [V10, 0xaf, V314, V46, V46, V52, V55, V53, V53, V52, V55, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0xaf, V314, V46, V46, V52, V55, V53, V53, V52, V55, S0]

================================

Block 0xdd
[0xdd:0xe4]
---
Predecessors: [0xd4]
Successors: [0xe5]
---
0xdd DUP1
0xde DUP3
0xdf ADD
0xe0 MLOAD
0xe1 DUP2
0xe2 DUP5
0xe3 ADD
0xe4 MSTORE
---
0xdf: V60 = ADD V55 S0
0xe0: V61 = M[V60]
0xe3: V62 = ADD V52 S0
0xe4: M[V62] = V61
---
Entry stack: [V10, 0xaf, V314, V46, V46, V52, V55, V53, V53, V52, V55, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0xaf, V314, V46, V46, V52, V55, V53, V53, V52, V55, S0]

================================

Block 0xe5
[0xe5:0xef]
---
Predecessors: [0xdd]
Successors: [0xd4]
---
0xe5 JUMPDEST
0xe6 PUSH1 0x20
0xe8 DUP2
0xe9 ADD
0xea SWAP1
0xeb POP
0xec PUSH2 0xd4
0xef JUMP
---
0xe5: JUMPDEST 
0xe6: V63 = 0x20
0xe9: V64 = ADD S0 0x20
0xec: V65 = 0xd4
0xef: JUMP 0xd4
---
Entry stack: [V10, 0xaf, V314, V46, V46, V52, V55, V53, V53, V52, V55, S0]
Stack pops: 1
Stack additions: [V64]
Exit stack: [V10, 0xaf, V314, V46, V46, V52, V55, V53, V53, V52, V55, V64]

================================

Block 0xf0
[0xf0:0x103]
---
Predecessors: [0xd4]
Successors: [0x104, 0x11d]
---
0xf0 JUMPDEST
0xf1 POP
0xf2 POP
0xf3 POP
0xf4 POP
0xf5 SWAP1
0xf6 POP
0xf7 SWAP1
0xf8 DUP2
0xf9 ADD
0xfa SWAP1
0xfb PUSH1 0x1f
0xfd AND
0xfe DUP1
0xff ISZERO
0x100 PUSH2 0x11d
0x103 JUMPI
---
0xf0: JUMPDEST 
0xf9: V66 = ADD V53 V52
0xfb: V67 = 0x1f
0xfd: V68 = AND 0x1f V53
0xff: V69 = ISZERO V68
0x100: V70 = 0x11d
0x103: JUMPI 0x11d V69
---
Entry stack: [V10, 0xaf, V314, V46, V46, V52, V55, V53, V53, V52, V55, S0]
Stack pops: 7
Stack additions: [V66, V68]
Exit stack: [V10, 0xaf, V314, V46, V46, V66, V68]

================================

Block 0x104
[0x104:0x11c]
---
Predecessors: [0xf0]
Successors: [0x11d]
---
0x104 DUP1
0x105 DUP3
0x106 SUB
0x107 DUP1
0x108 MLOAD
0x109 PUSH1 0x1
0x10b DUP4
0x10c PUSH1 0x20
0x10e SUB
0x10f PUSH2 0x100
0x112 EXP
0x113 SUB
0x114 NOT
0x115 AND
0x116 DUP2
0x117 MSTORE
0x118 PUSH1 0x20
0x11a ADD
0x11b SWAP2
0x11c POP
---
0x106: V71 = SUB V66 V68
0x108: V72 = M[V71]
0x109: V73 = 0x1
0x10c: V74 = 0x20
0x10e: V75 = SUB 0x20 V68
0x10f: V76 = 0x100
0x112: V77 = EXP 0x100 V75
0x113: V78 = SUB V77 0x1
0x114: V79 = NOT V78
0x115: V80 = AND V79 V72
0x117: M[V71] = V80
0x118: V81 = 0x20
0x11a: V82 = ADD 0x20 V71
---
Entry stack: [V10, 0xaf, V314, V46, V46, V66, V68]
Stack pops: 2
Stack additions: [V82, S0]
Exit stack: [V10, 0xaf, V314, V46, V46, V82, V68]

================================

Block 0x11d
[0x11d:0x12a]
---
Predecessors: [0xf0, 0x104]
Successors: []
---
0x11d JUMPDEST
0x11e POP
0x11f SWAP3
0x120 POP
0x121 POP
0x122 POP
0x123 PUSH1 0x40
0x125 MLOAD
0x126 DUP1
0x127 SWAP2
0x128 SUB
0x129 SWAP1
0x12a RETURN
---
0x11d: JUMPDEST 
0x123: V83 = 0x40
0x125: V84 = M[0x40]
0x128: V85 = SUB S1 V84
0x12a: RETURN V84 V85
---
Entry stack: [V10, 0xaf, V314, V46, V46, S1, V68]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0xaf]

================================

Block 0x12b
[0x12b:0x131]
---
Predecessors: [0x3f]
Successors: [0x132, 0x136]
---
0x12b JUMPDEST
0x12c CALLVALUE
0x12d ISZERO
0x12e PUSH2 0x136
0x131 JUMPI
---
0x12b: JUMPDEST 
0x12c: V86 = CALLVALUE
0x12d: V87 = ISZERO V86
0x12e: V88 = 0x136
0x131: JUMPI 0x136 V87
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x132
[0x132:0x135]
---
Predecessors: [0x12b]
Successors: []
---
0x132 PUSH1 0x0
0x134 DUP1
0x135 REVERT
---
0x132: V89 = 0x0
0x135: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x136
[0x136:0x16a]
---
Predecessors: [0x12b]
Successors: [0x4a2]
---
0x136 JUMPDEST
0x137 PUSH2 0x16b
0x13a PUSH1 0x4
0x13c DUP1
0x13d DUP1
0x13e CALLDATALOAD
0x13f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x154 AND
0x155 SWAP1
0x156 PUSH1 0x20
0x158 ADD
0x159 SWAP1
0x15a SWAP2
0x15b SWAP1
0x15c DUP1
0x15d CALLDATALOAD
0x15e SWAP1
0x15f PUSH1 0x20
0x161 ADD
0x162 SWAP1
0x163 SWAP2
0x164 SWAP1
0x165 POP
0x166 POP
0x167 PUSH2 0x4a2
0x16a JUMP
---
0x136: JUMPDEST 
0x137: V90 = 0x16b
0x13a: V91 = 0x4
0x13e: V92 = CALLDATALOAD 0x4
0x13f: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x154: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x156: V95 = 0x20
0x158: V96 = ADD 0x20 0x4
0x15d: V97 = CALLDATALOAD 0x24
0x15f: V98 = 0x20
0x161: V99 = ADD 0x20 0x24
0x167: V100 = 0x4a2
0x16a: JUMP 0x4a2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x16b, V94, V97]
Exit stack: [V10, 0x16b, V94, V97]

================================

Block 0x16b
[0x16b:0x184]
---
Predecessors: [0x52a]
Successors: []
---
0x16b JUMPDEST
0x16c PUSH1 0x40
0x16e MLOAD
0x16f DUP1
0x170 DUP3
0x171 ISZERO
0x172 ISZERO
0x173 ISZERO
0x174 ISZERO
0x175 DUP2
0x176 MSTORE
0x177 PUSH1 0x20
0x179 ADD
0x17a SWAP2
0x17b POP
0x17c POP
0x17d PUSH1 0x40
0x17f MLOAD
0x180 DUP1
0x181 SWAP2
0x182 SUB
0x183 SWAP1
0x184 RETURN
---
0x16b: JUMPDEST 
0x16c: V101 = 0x40
0x16e: V102 = M[0x40]
0x171: V103 = ISZERO 0x1
0x172: V104 = ISZERO 0x0
0x173: V105 = ISZERO 0x1
0x174: V106 = ISZERO 0x0
0x176: M[V102] = 0x1
0x177: V107 = 0x20
0x179: V108 = ADD 0x20 V102
0x17d: V109 = 0x40
0x17f: V110 = M[0x40]
0x182: V111 = SUB V108 V110
0x184: RETURN V110 V111
---
Entry stack: [V10, 0x37e, V231, V234, V252, 0x0, S1, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x37e, V231, V234, V252, 0x0, S1]

================================

Block 0x185
[0x185:0x18b]
---
Predecessors: [0x4a]
Successors: [0x18c, 0x190]
---
0x185 JUMPDEST
0x186 CALLVALUE
0x187 ISZERO
0x188 PUSH2 0x190
0x18b JUMPI
---
0x185: JUMPDEST 
0x186: V112 = CALLVALUE
0x187: V113 = ISZERO V112
0x188: V114 = 0x190
0x18b: JUMPI 0x190 V113
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x18c
[0x18c:0x18f]
---
Predecessors: [0x185]
Successors: []
---
0x18c PUSH1 0x0
0x18e DUP1
0x18f REVERT
---
0x18c: V115 = 0x0
0x18f: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x190
[0x190:0x197]
---
Predecessors: [0x185]
Successors: [0x530]
---
0x190 JUMPDEST
0x191 PUSH2 0x198
0x194 PUSH2 0x530
0x197 JUMP
---
0x190: JUMPDEST 
0x191: V116 = 0x198
0x194: V117 = 0x530
0x197: JUMP 0x530
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x198]
Exit stack: [V10, 0x198]

================================

Block 0x198
[0x198:0x1ad]
---
Predecessors: [0x530]
Successors: []
---
0x198 JUMPDEST
0x199 PUSH1 0x40
0x19b MLOAD
0x19c DUP1
0x19d DUP3
0x19e DUP2
0x19f MSTORE
0x1a0 PUSH1 0x20
0x1a2 ADD
0x1a3 SWAP2
0x1a4 POP
0x1a5 POP
0x1a6 PUSH1 0x40
0x1a8 MLOAD
0x1a9 DUP1
0x1aa SWAP2
0x1ab SUB
0x1ac SWAP1
0x1ad RETURN
---
0x198: JUMPDEST 
0x199: V118 = 0x40
0x19b: V119 = M[0x40]
0x19f: M[V119] = V385
0x1a0: V120 = 0x20
0x1a2: V121 = ADD 0x20 V119
0x1a6: V122 = 0x40
0x1a8: V123 = M[0x40]
0x1ab: V124 = SUB V121 V123
0x1ad: RETURN V123 V124
---
Entry stack: [V10, 0x198, V385]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x198]

================================

Block 0x1ae
[0x1ae:0x1b4]
---
Predecessors: [0x55]
Successors: [0x1b5, 0x1b9]
---
0x1ae JUMPDEST
0x1af CALLVALUE
0x1b0 ISZERO
0x1b1 PUSH2 0x1b9
0x1b4 JUMPI
---
0x1ae: JUMPDEST 
0x1af: V125 = CALLVALUE
0x1b0: V126 = ISZERO V125
0x1b1: V127 = 0x1b9
0x1b4: JUMPI 0x1b9 V126
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1b5
[0x1b5:0x1b8]
---
Predecessors: [0x1ae]
Successors: []
---
0x1b5 PUSH1 0x0
0x1b7 DUP1
0x1b8 REVERT
---
0x1b5: V128 = 0x0
0x1b8: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1b9
[0x1b9:0x1c0]
---
Predecessors: [0x1ae]
Successors: [0x536]
---
0x1b9 JUMPDEST
0x1ba PUSH2 0x1c1
0x1bd PUSH2 0x536
0x1c0 JUMP
---
0x1b9: JUMPDEST 
0x1ba: V129 = 0x1c1
0x1bd: V130 = 0x536
0x1c0: JUMP 0x536
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1c1]
Exit stack: [V10, 0x1c1]

================================

Block 0x1c1
[0x1c1:0x1dc]
---
Predecessors: [0x536]
Successors: []
---
0x1c1 JUMPDEST
0x1c2 PUSH1 0x40
0x1c4 MLOAD
0x1c5 DUP1
0x1c6 DUP3
0x1c7 PUSH1 0xff
0x1c9 AND
0x1ca PUSH1 0xff
0x1cc AND
0x1cd DUP2
0x1ce MSTORE
0x1cf PUSH1 0x20
0x1d1 ADD
0x1d2 SWAP2
0x1d3 POP
0x1d4 POP
0x1d5 PUSH1 0x40
0x1d7 MLOAD
0x1d8 DUP1
0x1d9 SWAP2
0x1da SUB
0x1db SWAP1
0x1dc RETURN
---
0x1c1: JUMPDEST 
0x1c2: V131 = 0x40
0x1c4: V132 = M[0x40]
0x1c7: V133 = 0xff
0x1c9: V134 = AND 0xff V393
0x1ca: V135 = 0xff
0x1cc: V136 = AND 0xff V134
0x1ce: M[V132] = V136
0x1cf: V137 = 0x20
0x1d1: V138 = ADD 0x20 V132
0x1d5: V139 = 0x40
0x1d7: V140 = M[0x40]
0x1da: V141 = SUB V138 V140
0x1dc: RETURN V140 V141
---
Entry stack: [V10, 0x1c1, V393]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1c1]

================================

Block 0x1dd
[0x1dd:0x1e3]
---
Predecessors: [0x60]
Successors: [0x1e4, 0x1e8]
---
0x1dd JUMPDEST
0x1de CALLVALUE
0x1df ISZERO
0x1e0 PUSH2 0x1e8
0x1e3 JUMPI
---
0x1dd: JUMPDEST 
0x1de: V142 = CALLVALUE
0x1df: V143 = ISZERO V142
0x1e0: V144 = 0x1e8
0x1e3: JUMPI 0x1e8 V143
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1e4
[0x1e4:0x1e7]
---
Predecessors: [0x1dd]
Successors: []
---
0x1e4 PUSH1 0x0
0x1e6 DUP1
0x1e7 REVERT
---
0x1e4: V145 = 0x0
0x1e7: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1e8
[0x1e8:0x213]
---
Predecessors: [0x1dd]
Successors: [0x549]
---
0x1e8 JUMPDEST
0x1e9 PUSH2 0x214
0x1ec PUSH1 0x4
0x1ee DUP1
0x1ef DUP1
0x1f0 CALLDATALOAD
0x1f1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x206 AND
0x207 SWAP1
0x208 PUSH1 0x20
0x20a ADD
0x20b SWAP1
0x20c SWAP2
0x20d SWAP1
0x20e POP
0x20f POP
0x210 PUSH2 0x549
0x213 JUMP
---
0x1e8: JUMPDEST 
0x1e9: V146 = 0x214
0x1ec: V147 = 0x4
0x1f0: V148 = CALLDATALOAD 0x4
0x1f1: V149 = 0xffffffffffffffffffffffffffffffffffffffff
0x206: V150 = AND 0xffffffffffffffffffffffffffffffffffffffff V148
0x208: V151 = 0x20
0x20a: V152 = ADD 0x20 0x4
0x210: V153 = 0x549
0x213: JUMP 0x549
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x214, V150]
Exit stack: [V10, 0x214, V150]

================================

Block 0x214
[0x214:0x229]
---
Predecessors: [0x549]
Successors: []
---
0x214 JUMPDEST
0x215 PUSH1 0x40
0x217 MLOAD
0x218 DUP1
0x219 DUP3
0x21a DUP2
0x21b MSTORE
0x21c PUSH1 0x20
0x21e ADD
0x21f SWAP2
0x220 POP
0x221 POP
0x222 PUSH1 0x40
0x224 MLOAD
0x225 DUP1
0x226 SWAP2
0x227 SUB
0x228 SWAP1
0x229 RETURN
---
0x214: JUMPDEST 
0x215: V154 = 0x40
0x217: V155 = M[0x40]
0x21b: M[V155] = V401
0x21c: V156 = 0x20
0x21e: V157 = ADD 0x20 V155
0x222: V158 = 0x40
0x224: V159 = M[0x40]
0x227: V160 = SUB V157 V159
0x229: RETURN V159 V160
---
Entry stack: [V10, 0x214, V401]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x214]

================================

Block 0x22a
[0x22a:0x230]
---
Predecessors: [0x6b]
Successors: [0x231, 0x235]
---
0x22a JUMPDEST
0x22b CALLVALUE
0x22c ISZERO
0x22d PUSH2 0x235
0x230 JUMPI
---
0x22a: JUMPDEST 
0x22b: V161 = CALLVALUE
0x22c: V162 = ISZERO V161
0x22d: V163 = 0x235
0x230: JUMPI 0x235 V162
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x231
[0x231:0x234]
---
Predecessors: [0x22a]
Successors: []
---
0x231 PUSH1 0x0
0x233 DUP1
0x234 REVERT
---
0x231: V164 = 0x0
0x234: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x235
[0x235:0x23c]
---
Predecessors: [0x22a]
Successors: [0x561]
---
0x235 JUMPDEST
0x236 PUSH2 0x23d
0x239 PUSH2 0x561
0x23c JUMP
---
0x235: JUMPDEST 
0x236: V165 = 0x23d
0x239: V166 = 0x561
0x23c: JUMP 0x561
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x23d]
Exit stack: [V10, 0x23d]

================================

Block 0x23d
[0x23d:0x261]
---
Predecessors: [0x5f7]
Successors: [0x262]
---
0x23d JUMPDEST
0x23e PUSH1 0x40
0x240 MLOAD
0x241 DUP1
0x242 DUP1
0x243 PUSH1 0x20
0x245 ADD
0x246 DUP3
0x247 DUP2
0x248 SUB
0x249 DUP3
0x24a MSTORE
0x24b DUP4
0x24c DUP2
0x24d DUP2
0x24e MLOAD
0x24f DUP2
0x250 MSTORE
0x251 PUSH1 0x20
0x253 ADD
0x254 SWAP2
0x255 POP
0x256 DUP1
0x257 MLOAD
0x258 SWAP1
0x259 PUSH1 0x20
0x25b ADD
0x25c SWAP1
0x25d DUP1
0x25e DUP4
0x25f DUP4
0x260 PUSH1 0x0
---
0x23d: JUMPDEST 
0x23e: V167 = 0x40
0x240: V168 = M[0x40]
0x243: V169 = 0x20
0x245: V170 = ADD 0x20 V168
0x248: V171 = SUB V170 V168
0x24a: M[V168] = V171
0x24e: V172 = M[V422]
0x250: M[V170] = V172
0x251: V173 = 0x20
0x253: V174 = ADD 0x20 V170
0x257: V175 = M[V422]
0x259: V176 = 0x20
0x25b: V177 = ADD 0x20 V422
0x260: V178 = 0x0
---
Entry stack: [V10, 0x23d, V422]
Stack pops: 1
Stack additions: [S0, V168, V168, V174, V177, V175, V175, V174, V177, 0x0]
Exit stack: [V10, 0x23d, V422, V168, V168, V174, V177, V175, V175, V174, V177, 0x0]

================================

Block 0x262
[0x262:0x26a]
---
Predecessors: [0x23d, 0x273]
Successors: [0x26b, 0x27e]
---
0x262 JUMPDEST
0x263 DUP4
0x264 DUP2
0x265 LT
0x266 ISZERO
0x267 PUSH2 0x27e
0x26a JUMPI
---
0x262: JUMPDEST 
0x265: V179 = LT S0 V175
0x266: V180 = ISZERO V179
0x267: V181 = 0x27e
0x26a: JUMPI 0x27e V180
---
Entry stack: [V10, 0x23d, V422, V168, V168, V174, V177, V175, V175, V174, V177, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x23d, V422, V168, V168, V174, V177, V175, V175, V174, V177, S0]

================================

Block 0x26b
[0x26b:0x272]
---
Predecessors: [0x262]
Successors: [0x273]
---
0x26b DUP1
0x26c DUP3
0x26d ADD
0x26e MLOAD
0x26f DUP2
0x270 DUP5
0x271 ADD
0x272 MSTORE
---
0x26d: V182 = ADD V177 S0
0x26e: V183 = M[V182]
0x271: V184 = ADD V174 S0
0x272: M[V184] = V183
---
Entry stack: [V10, 0x23d, V422, V168, V168, V174, V177, V175, V175, V174, V177, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x23d, V422, V168, V168, V174, V177, V175, V175, V174, V177, S0]

================================

Block 0x273
[0x273:0x27d]
---
Predecessors: [0x26b]
Successors: [0x262]
---
0x273 JUMPDEST
0x274 PUSH1 0x20
0x276 DUP2
0x277 ADD
0x278 SWAP1
0x279 POP
0x27a PUSH2 0x262
0x27d JUMP
---
0x273: JUMPDEST 
0x274: V185 = 0x20
0x277: V186 = ADD S0 0x20
0x27a: V187 = 0x262
0x27d: JUMP 0x262
---
Entry stack: [V10, 0x23d, V422, V168, V168, V174, V177, V175, V175, V174, V177, S0]
Stack pops: 1
Stack additions: [V186]
Exit stack: [V10, 0x23d, V422, V168, V168, V174, V177, V175, V175, V174, V177, V186]

================================

Block 0x27e
[0x27e:0x291]
---
Predecessors: [0x262]
Successors: [0x292, 0x2ab]
---
0x27e JUMPDEST
0x27f POP
0x280 POP
0x281 POP
0x282 POP
0x283 SWAP1
0x284 POP
0x285 SWAP1
0x286 DUP2
0x287 ADD
0x288 SWAP1
0x289 PUSH1 0x1f
0x28b AND
0x28c DUP1
0x28d ISZERO
0x28e PUSH2 0x2ab
0x291 JUMPI
---
0x27e: JUMPDEST 
0x287: V188 = ADD V175 V174
0x289: V189 = 0x1f
0x28b: V190 = AND 0x1f V175
0x28d: V191 = ISZERO V190
0x28e: V192 = 0x2ab
0x291: JUMPI 0x2ab V191
---
Entry stack: [V10, 0x23d, V422, V168, V168, V174, V177, V175, V175, V174, V177, S0]
Stack pops: 7
Stack additions: [V188, V190]
Exit stack: [V10, 0x23d, V422, V168, V168, V188, V190]

================================

Block 0x292
[0x292:0x2aa]
---
Predecessors: [0x27e]
Successors: [0x2ab]
---
0x292 DUP1
0x293 DUP3
0x294 SUB
0x295 DUP1
0x296 MLOAD
0x297 PUSH1 0x1
0x299 DUP4
0x29a PUSH1 0x20
0x29c SUB
0x29d PUSH2 0x100
0x2a0 EXP
0x2a1 SUB
0x2a2 NOT
0x2a3 AND
0x2a4 DUP2
0x2a5 MSTORE
0x2a6 PUSH1 0x20
0x2a8 ADD
0x2a9 SWAP2
0x2aa POP
---
0x294: V193 = SUB V188 V190
0x296: V194 = M[V193]
0x297: V195 = 0x1
0x29a: V196 = 0x20
0x29c: V197 = SUB 0x20 V190
0x29d: V198 = 0x100
0x2a0: V199 = EXP 0x100 V197
0x2a1: V200 = SUB V199 0x1
0x2a2: V201 = NOT V200
0x2a3: V202 = AND V201 V194
0x2a5: M[V193] = V202
0x2a6: V203 = 0x20
0x2a8: V204 = ADD 0x20 V193
---
Entry stack: [V10, 0x23d, V422, V168, V168, V188, V190]
Stack pops: 2
Stack additions: [V204, S0]
Exit stack: [V10, 0x23d, V422, V168, V168, V204, V190]

================================

Block 0x2ab
[0x2ab:0x2b8]
---
Predecessors: [0x27e, 0x292]
Successors: []
---
0x2ab JUMPDEST
0x2ac POP
0x2ad SWAP3
0x2ae POP
0x2af POP
0x2b0 POP
0x2b1 PUSH1 0x40
0x2b3 MLOAD
0x2b4 DUP1
0x2b5 SWAP2
0x2b6 SUB
0x2b7 SWAP1
0x2b8 RETURN
---
0x2ab: JUMPDEST 
0x2b1: V205 = 0x40
0x2b3: V206 = M[0x40]
0x2b6: V207 = SUB S1 V206
0x2b8: RETURN V206 V207
---
Entry stack: [V10, 0x23d, V422, V168, V168, S1, V190]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x23d]

================================

Block 0x2b9
[0x2b9:0x2bf]
---
Predecessors: [0x76]
Successors: [0x2c0, 0x2c4]
---
0x2b9 JUMPDEST
0x2ba CALLVALUE
0x2bb ISZERO
0x2bc PUSH2 0x2c4
0x2bf JUMPI
---
0x2b9: JUMPDEST 
0x2ba: V208 = CALLVALUE
0x2bb: V209 = ISZERO V208
0x2bc: V210 = 0x2c4
0x2bf: JUMPI 0x2c4 V209
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2c0
[0x2c0:0x2c3]
---
Predecessors: [0x2b9]
Successors: []
---
0x2c0 PUSH1 0x0
0x2c2 DUP1
0x2c3 REVERT
---
0x2c0: V211 = 0x0
0x2c3: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2c4
[0x2c4:0x2f8]
---
Predecessors: [0x2b9]
Successors: [0x5ff]
---
0x2c4 JUMPDEST
0x2c5 PUSH2 0x2f9
0x2c8 PUSH1 0x4
0x2ca DUP1
0x2cb DUP1
0x2cc CALLDATALOAD
0x2cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e2 AND
0x2e3 SWAP1
0x2e4 PUSH1 0x20
0x2e6 ADD
0x2e7 SWAP1
0x2e8 SWAP2
0x2e9 SWAP1
0x2ea DUP1
0x2eb CALLDATALOAD
0x2ec SWAP1
0x2ed PUSH1 0x20
0x2ef ADD
0x2f0 SWAP1
0x2f1 SWAP2
0x2f2 SWAP1
0x2f3 POP
0x2f4 POP
0x2f5 PUSH2 0x5ff
0x2f8 JUMP
---
0x2c4: JUMPDEST 
0x2c5: V212 = 0x2f9
0x2c8: V213 = 0x4
0x2cc: V214 = CALLDATALOAD 0x4
0x2cd: V215 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e2: V216 = AND 0xffffffffffffffffffffffffffffffffffffffff V214
0x2e4: V217 = 0x20
0x2e6: V218 = ADD 0x20 0x4
0x2eb: V219 = CALLDATALOAD 0x24
0x2ed: V220 = 0x20
0x2ef: V221 = ADD 0x20 0x24
0x2f5: V222 = 0x5ff
0x2f8: JUMP 0x5ff
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2f9, V216, V219]
Exit stack: [V10, 0x2f9, V216, V219]

================================

Block 0x2f9
[0x2f9:0x2fa]
---
Predecessors: [0x774]
Successors: []
---
0x2f9 JUMPDEST
0x2fa STOP
---
0x2f9: JUMPDEST 
0x2fa: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2fb
[0x2fb:0x301]
---
Predecessors: [0x81]
Successors: [0x302, 0x306]
---
0x2fb JUMPDEST
0x2fc CALLVALUE
0x2fd ISZERO
0x2fe PUSH2 0x306
0x301 JUMPI
---
0x2fb: JUMPDEST 
0x2fc: V223 = CALLVALUE
0x2fd: V224 = ISZERO V223
0x2fe: V225 = 0x306
0x301: JUMPI 0x306 V224
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x302
[0x302:0x305]
---
Predecessors: [0x2fb]
Successors: []
---
0x302 PUSH1 0x0
0x304 DUP1
0x305 REVERT
---
0x302: V226 = 0x0
0x305: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x306
[0x306:0x37d]
---
Predecessors: [0x2fb]
Successors: [0x778]
---
0x306 JUMPDEST
0x307 PUSH2 0x37e
0x30a PUSH1 0x4
0x30c DUP1
0x30d DUP1
0x30e CALLDATALOAD
0x30f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x324 AND
0x325 SWAP1
0x326 PUSH1 0x20
0x328 ADD
0x329 SWAP1
0x32a SWAP2
0x32b SWAP1
0x32c DUP1
0x32d CALLDATALOAD
0x32e SWAP1
0x32f PUSH1 0x20
0x331 ADD
0x332 SWAP1
0x333 SWAP2
0x334 SWAP1
0x335 DUP1
0x336 CALLDATALOAD
0x337 SWAP1
0x338 PUSH1 0x20
0x33a ADD
0x33b SWAP1
0x33c DUP3
0x33d ADD
0x33e DUP1
0x33f CALLDATALOAD
0x340 SWAP1
0x341 PUSH1 0x20
0x343 ADD
0x344 SWAP1
0x345 DUP1
0x346 DUP1
0x347 PUSH1 0x1f
0x349 ADD
0x34a PUSH1 0x20
0x34c DUP1
0x34d SWAP2
0x34e DIV
0x34f MUL
0x350 PUSH1 0x20
0x352 ADD
0x353 PUSH1 0x40
0x355 MLOAD
0x356 SWAP1
0x357 DUP2
0x358 ADD
0x359 PUSH1 0x40
0x35b MSTORE
0x35c DUP1
0x35d SWAP4
0x35e SWAP3
0x35f SWAP2
0x360 SWAP1
0x361 DUP2
0x362 DUP2
0x363 MSTORE
0x364 PUSH1 0x20
0x366 ADD
0x367 DUP4
0x368 DUP4
0x369 DUP1
0x36a DUP3
0x36b DUP5
0x36c CALLDATACOPY
0x36d DUP3
0x36e ADD
0x36f SWAP2
0x370 POP
0x371 POP
0x372 POP
0x373 POP
0x374 POP
0x375 POP
0x376 SWAP2
0x377 SWAP1
0x378 POP
0x379 POP
0x37a PUSH2 0x778
0x37d JUMP
---
0x306: JUMPDEST 
0x307: V227 = 0x37e
0x30a: V228 = 0x4
0x30e: V229 = CALLDATALOAD 0x4
0x30f: V230 = 0xffffffffffffffffffffffffffffffffffffffff
0x324: V231 = AND 0xffffffffffffffffffffffffffffffffffffffff V229
0x326: V232 = 0x20
0x328: V233 = ADD 0x20 0x4
0x32d: V234 = CALLDATALOAD 0x24
0x32f: V235 = 0x20
0x331: V236 = ADD 0x20 0x24
0x336: V237 = CALLDATALOAD 0x44
0x338: V238 = 0x20
0x33a: V239 = ADD 0x20 0x44
0x33d: V240 = ADD 0x4 V237
0x33f: V241 = CALLDATALOAD V240
0x341: V242 = 0x20
0x343: V243 = ADD 0x20 V240
0x347: V244 = 0x1f
0x349: V245 = ADD 0x1f V241
0x34a: V246 = 0x20
0x34e: V247 = DIV V245 0x20
0x34f: V248 = MUL V247 0x20
0x350: V249 = 0x20
0x352: V250 = ADD 0x20 V248
0x353: V251 = 0x40
0x355: V252 = M[0x40]
0x358: V253 = ADD V252 V250
0x359: V254 = 0x40
0x35b: M[0x40] = V253
0x363: M[V252] = V241
0x364: V255 = 0x20
0x366: V256 = ADD 0x20 V252
0x36c: CALLDATACOPY V256 V243 V241
0x36e: V257 = ADD V256 V241
0x37a: V258 = 0x778
0x37d: JUMP 0x778
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x37e, V231, V234, V252]
Exit stack: [V10, 0x37e, V231, V234, V252]

================================

Block 0x37e
[0x37e:0x397]
---
Predecessors: [0x8ef]
Successors: []
---
0x37e JUMPDEST
0x37f PUSH1 0x40
0x381 MLOAD
0x382 DUP1
0x383 DUP3
0x384 ISZERO
0x385 ISZERO
0x386 ISZERO
0x387 ISZERO
0x388 DUP2
0x389 MSTORE
0x38a PUSH1 0x20
0x38c ADD
0x38d SWAP2
0x38e POP
0x38f POP
0x390 PUSH1 0x40
0x392 MLOAD
0x393 DUP1
0x394 SWAP2
0x395 SUB
0x396 SWAP1
0x397 RETURN
---
0x37e: JUMPDEST 
0x37f: V259 = 0x40
0x381: V260 = M[0x40]
0x384: V261 = ISZERO {0x0, 0x1}
0x385: V262 = ISZERO V261
0x386: V263 = ISZERO V262
0x387: V264 = ISZERO V263
0x389: M[V260] = V264
0x38a: V265 = 0x20
0x38c: V266 = ADD 0x20 V260
0x390: V267 = 0x40
0x392: V268 = M[0x40]
0x395: V269 = SUB V266 V268
0x397: RETURN V268 V269
---
Entry stack: [V10, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x398
[0x398:0x39e]
---
Predecessors: [0x8c]
Successors: [0x39f, 0x3a3]
---
0x398 JUMPDEST
0x399 CALLVALUE
0x39a ISZERO
0x39b PUSH2 0x3a3
0x39e JUMPI
---
0x398: JUMPDEST 
0x399: V270 = CALLVALUE
0x39a: V271 = ISZERO V270
0x39b: V272 = 0x3a3
0x39e: JUMPI 0x3a3 V271
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x39f
[0x39f:0x3a2]
---
Predecessors: [0x398]
Successors: []
---
0x39f PUSH1 0x0
0x3a1 DUP1
0x3a2 REVERT
---
0x39f: V273 = 0x0
0x3a2: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3a3
[0x3a3:0x3ed]
---
Predecessors: [0x398]
Successors: [0x8f7]
---
0x3a3 JUMPDEST
0x3a4 PUSH2 0x3ee
0x3a7 PUSH1 0x4
0x3a9 DUP1
0x3aa DUP1
0x3ab CALLDATALOAD
0x3ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c1 AND
0x3c2 SWAP1
0x3c3 PUSH1 0x20
0x3c5 ADD
0x3c6 SWAP1
0x3c7 SWAP2
0x3c8 SWAP1
0x3c9 DUP1
0x3ca CALLDATALOAD
0x3cb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e0 AND
0x3e1 SWAP1
0x3e2 PUSH1 0x20
0x3e4 ADD
0x3e5 SWAP1
0x3e6 SWAP2
0x3e7 SWAP1
0x3e8 POP
0x3e9 POP
0x3ea PUSH2 0x8f7
0x3ed JUMP
---
0x3a3: JUMPDEST 
0x3a4: V274 = 0x3ee
0x3a7: V275 = 0x4
0x3ab: V276 = CALLDATALOAD 0x4
0x3ac: V277 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c1: V278 = AND 0xffffffffffffffffffffffffffffffffffffffff V276
0x3c3: V279 = 0x20
0x3c5: V280 = ADD 0x20 0x4
0x3ca: V281 = CALLDATALOAD 0x24
0x3cb: V282 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e0: V283 = AND 0xffffffffffffffffffffffffffffffffffffffff V281
0x3e2: V284 = 0x20
0x3e4: V285 = ADD 0x20 0x24
0x3ea: V286 = 0x8f7
0x3ed: JUMP 0x8f7
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3ee, V278, V283]
Exit stack: [V10, 0x3ee, V278, V283]

================================

Block 0x3ee
[0x3ee:0x403]
---
Predecessors: [0x8f7]
Successors: []
---
0x3ee JUMPDEST
0x3ef PUSH1 0x40
0x3f1 MLOAD
0x3f2 DUP1
0x3f3 DUP3
0x3f4 DUP2
0x3f5 MSTORE
0x3f6 PUSH1 0x20
0x3f8 ADD
0x3f9 SWAP2
0x3fa POP
0x3fb POP
0x3fc PUSH1 0x40
0x3fe MLOAD
0x3ff DUP1
0x400 SWAP2
0x401 SUB
0x402 SWAP1
0x403 RETURN
---
0x3ee: JUMPDEST 
0x3ef: V287 = 0x40
0x3f1: V288 = M[0x40]
0x3f5: M[V288] = V648
0x3f6: V289 = 0x20
0x3f8: V290 = ADD 0x20 V288
0x3fc: V291 = 0x40
0x3fe: V292 = M[0x40]
0x401: V293 = SUB V290 V292
0x403: RETURN V292 V293
---
Entry stack: [V10, 0x3ee, V648]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x3ee]

================================

Block 0x404
[0x404:0x453]
---
Predecessors: [0xa7]
Successors: [0x454, 0x49a]
---
0x404 JUMPDEST
0x405 PUSH1 0x0
0x407 DUP1
0x408 SLOAD
0x409 PUSH1 0x1
0x40b DUP2
0x40c PUSH1 0x1
0x40e AND
0x40f ISZERO
0x410 PUSH2 0x100
0x413 MUL
0x414 SUB
0x415 AND
0x416 PUSH1 0x2
0x418 SWAP1
0x419 DIV
0x41a DUP1
0x41b PUSH1 0x1f
0x41d ADD
0x41e PUSH1 0x20
0x420 DUP1
0x421 SWAP2
0x422 DIV
0x423 MUL
0x424 PUSH1 0x20
0x426 ADD
0x427 PUSH1 0x40
0x429 MLOAD
0x42a SWAP1
0x42b DUP2
0x42c ADD
0x42d PUSH1 0x40
0x42f MSTORE
0x430 DUP1
0x431 SWAP3
0x432 SWAP2
0x433 SWAP1
0x434 DUP2
0x435 DUP2
0x436 MSTORE
0x437 PUSH1 0x20
0x439 ADD
0x43a DUP3
0x43b DUP1
0x43c SLOAD
0x43d PUSH1 0x1
0x43f DUP2
0x440 PUSH1 0x1
0x442 AND
0x443 ISZERO
0x444 PUSH2 0x100
0x447 MUL
0x448 SUB
0x449 AND
0x44a PUSH1 0x2
0x44c SWAP1
0x44d DIV
0x44e DUP1
0x44f ISZERO
0x450 PUSH2 0x49a
0x453 JUMPI
---
0x404: JUMPDEST 
0x405: V294 = 0x0
0x408: V295 = S[0x0]
0x409: V296 = 0x1
0x40c: V297 = 0x1
0x40e: V298 = AND 0x1 V295
0x40f: V299 = ISZERO V298
0x410: V300 = 0x100
0x413: V301 = MUL 0x100 V299
0x414: V302 = SUB V301 0x1
0x415: V303 = AND V302 V295
0x416: V304 = 0x2
0x419: V305 = DIV V303 0x2
0x41b: V306 = 0x1f
0x41d: V307 = ADD 0x1f V305
0x41e: V308 = 0x20
0x422: V309 = DIV V307 0x20
0x423: V310 = MUL V309 0x20
0x424: V311 = 0x20
0x426: V312 = ADD 0x20 V310
0x427: V313 = 0x40
0x429: V314 = M[0x40]
0x42c: V315 = ADD V314 V312
0x42d: V316 = 0x40
0x42f: M[0x40] = V315
0x436: M[V314] = V305
0x437: V317 = 0x20
0x439: V318 = ADD 0x20 V314
0x43c: V319 = S[0x0]
0x43d: V320 = 0x1
0x440: V321 = 0x1
0x442: V322 = AND 0x1 V319
0x443: V323 = ISZERO V322
0x444: V324 = 0x100
0x447: V325 = MUL 0x100 V323
0x448: V326 = SUB V325 0x1
0x449: V327 = AND V326 V319
0x44a: V328 = 0x2
0x44d: V329 = DIV V327 0x2
0x44f: V330 = ISZERO V329
0x450: V331 = 0x49a
0x453: JUMPI 0x49a V330
---
Entry stack: [V10, 0xaf]
Stack pops: 0
Stack additions: [V314, 0x0, V305, V318, 0x0, V329]
Exit stack: [V10, 0xaf, V314, 0x0, V305, V318, 0x0, V329]

================================

Block 0x454
[0x454:0x45b]
---
Predecessors: [0x404]
Successors: [0x45c, 0x46f]
---
0x454 DUP1
0x455 PUSH1 0x1f
0x457 LT
0x458 PUSH2 0x46f
0x45b JUMPI
---
0x455: V332 = 0x1f
0x457: V333 = LT 0x1f V329
0x458: V334 = 0x46f
0x45b: JUMPI 0x46f V333
---
Entry stack: [V10, 0xaf, V314, 0x0, V305, V318, 0x0, V329]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0xaf, V314, 0x0, V305, V318, 0x0, V329]

================================

Block 0x45c
[0x45c:0x46e]
---
Predecessors: [0x454]
Successors: [0x49a]
---
0x45c PUSH2 0x100
0x45f DUP1
0x460 DUP4
0x461 SLOAD
0x462 DIV
0x463 MUL
0x464 DUP4
0x465 MSTORE
0x466 SWAP2
0x467 PUSH1 0x20
0x469 ADD
0x46a SWAP2
0x46b PUSH2 0x49a
0x46e JUMP
---
0x45c: V335 = 0x100
0x461: V336 = S[0x0]
0x462: V337 = DIV V336 0x100
0x463: V338 = MUL V337 0x100
0x465: M[V318] = V338
0x467: V339 = 0x20
0x469: V340 = ADD 0x20 V318
0x46b: V341 = 0x49a
0x46e: JUMP 0x49a
---
Entry stack: [V10, 0xaf, V314, 0x0, V305, V318, 0x0, V329]
Stack pops: 3
Stack additions: [V340, S1, S0]
Exit stack: [V10, 0xaf, V314, 0x0, V305, V340, 0x0, V329]

================================

Block 0x46f
[0x46f:0x47c]
---
Predecessors: [0x454]
Successors: [0x47d]
---
0x46f JUMPDEST
0x470 DUP3
0x471 ADD
0x472 SWAP2
0x473 SWAP1
0x474 PUSH1 0x0
0x476 MSTORE
0x477 PUSH1 0x20
0x479 PUSH1 0x0
0x47b SHA3
0x47c SWAP1
---
0x46f: JUMPDEST 
0x471: V342 = ADD V318 V329
0x474: V343 = 0x0
0x476: M[0x0] = 0x0
0x477: V344 = 0x20
0x479: V345 = 0x0
0x47b: V346 = SHA3 0x0 0x20
---
Entry stack: [V10, 0xaf, V314, 0x0, V305, V318, 0x0, V329]
Stack pops: 3
Stack additions: [V342, V346, S2]
Exit stack: [V10, 0xaf, V314, 0x0, V305, V342, V346, V318]

================================

Block 0x47d
[0x47d:0x490]
---
Predecessors: [0x46f, 0x47d]
Successors: [0x47d, 0x491]
---
0x47d JUMPDEST
0x47e DUP2
0x47f SLOAD
0x480 DUP2
0x481 MSTORE
0x482 SWAP1
0x483 PUSH1 0x1
0x485 ADD
0x486 SWAP1
0x487 PUSH1 0x20
0x489 ADD
0x48a DUP1
0x48b DUP4
0x48c GT
0x48d PUSH2 0x47d
0x490 JUMPI
---
0x47d: JUMPDEST 
0x47f: V347 = S[S1]
0x481: M[S0] = V347
0x483: V348 = 0x1
0x485: V349 = ADD 0x1 S1
0x487: V350 = 0x20
0x489: V351 = ADD 0x20 S0
0x48c: V352 = GT V342 V351
0x48d: V353 = 0x47d
0x490: JUMPI 0x47d V352
---
Entry stack: [V10, 0xaf, V314, 0x0, V305, V342, S1, S0]
Stack pops: 3
Stack additions: [S2, V349, V351]
Exit stack: [V10, 0xaf, V314, 0x0, V305, V342, V349, V351]

================================

Block 0x491
[0x491:0x499]
---
Predecessors: [0x47d]
Successors: [0x49a]
---
0x491 DUP3
0x492 SWAP1
0x493 SUB
0x494 PUSH1 0x1f
0x496 AND
0x497 DUP3
0x498 ADD
0x499 SWAP2
---
0x493: V354 = SUB V351 V342
0x494: V355 = 0x1f
0x496: V356 = AND 0x1f V354
0x498: V357 = ADD V342 V356
---
Entry stack: [V10, 0xaf, V314, 0x0, V305, V342, V349, V351]
Stack pops: 3
Stack additions: [V357, S1, S2]
Exit stack: [V10, 0xaf, V314, 0x0, V305, V357, V349, V342]

================================

Block 0x49a
[0x49a:0x4a1]
---
Predecessors: [0x404, 0x45c, 0x491]
Successors: [0xaf]
---
0x49a JUMPDEST
0x49b POP
0x49c POP
0x49d POP
0x49e POP
0x49f POP
0x4a0 DUP2
0x4a1 JUMP
---
0x49a: JUMPDEST 
0x4a1: JUMP 0xaf
---
Entry stack: [V10, 0xaf, V314, 0x0, V305, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V10, 0xaf, V314]

================================

Block 0x4a2
[0x4a2:0x529]
---
Predecessors: [0x136, 0x778]
Successors: [0x52a]
---
0x4a2 JUMPDEST
0x4a3 PUSH1 0x0
0x4a5 DUP2
0x4a6 PUSH1 0x5
0x4a8 PUSH1 0x0
0x4aa CALLER
0x4ab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c0 AND
0x4c1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4d6 AND
0x4d7 DUP2
0x4d8 MSTORE
0x4d9 PUSH1 0x20
0x4db ADD
0x4dc SWAP1
0x4dd DUP2
0x4de MSTORE
0x4df PUSH1 0x20
0x4e1 ADD
0x4e2 PUSH1 0x0
0x4e4 SHA3
0x4e5 PUSH1 0x0
0x4e7 DUP6
0x4e8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4fd AND
0x4fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x513 AND
0x514 DUP2
0x515 MSTORE
0x516 PUSH1 0x20
0x518 ADD
0x519 SWAP1
0x51a DUP2
0x51b MSTORE
0x51c PUSH1 0x20
0x51e ADD
0x51f PUSH1 0x0
0x521 SHA3
0x522 DUP2
0x523 SWAP1
0x524 SSTORE
0x525 POP
0x526 PUSH1 0x1
0x528 SWAP1
0x529 POP
---
0x4a2: JUMPDEST 
0x4a3: V358 = 0x0
0x4a6: V359 = 0x5
0x4a8: V360 = 0x0
0x4aa: V361 = CALLER
0x4ab: V362 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c0: V363 = AND 0xffffffffffffffffffffffffffffffffffffffff V361
0x4c1: V364 = 0xffffffffffffffffffffffffffffffffffffffff
0x4d6: V365 = AND 0xffffffffffffffffffffffffffffffffffffffff V363
0x4d8: M[0x0] = V365
0x4d9: V366 = 0x20
0x4db: V367 = ADD 0x20 0x0
0x4de: M[0x20] = 0x5
0x4df: V368 = 0x20
0x4e1: V369 = ADD 0x20 0x20
0x4e2: V370 = 0x0
0x4e4: V371 = SHA3 0x0 0x40
0x4e5: V372 = 0x0
0x4e8: V373 = 0xffffffffffffffffffffffffffffffffffffffff
0x4fd: V374 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x4fe: V375 = 0xffffffffffffffffffffffffffffffffffffffff
0x513: V376 = AND 0xffffffffffffffffffffffffffffffffffffffff V374
0x515: M[0x0] = V376
0x516: V377 = 0x20
0x518: V378 = ADD 0x20 0x0
0x51b: M[0x20] = V371
0x51c: V379 = 0x20
0x51e: V380 = ADD 0x20 0x20
0x51f: V381 = 0x0
0x521: V382 = SHA3 0x0 0x40
0x524: S[V382] = S0
0x526: V383 = 0x1
---
Entry stack: [V10, 0x37e, V231, V234, V252, 0x0, S3, {0x16b, 0x788}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x1]
Exit stack: [V10, 0x37e, V231, V234, V252, 0x0, S3, {0x16b, 0x788}, S1, S0, 0x1]

================================

Block 0x52a
[0x52a:0x52f]
---
Predecessors: [0x4a2]
Successors: [0x16b, 0x788]
---
0x52a JUMPDEST
0x52b SWAP3
0x52c SWAP2
0x52d POP
0x52e POP
0x52f JUMP
---
0x52a: JUMPDEST 
0x52f: JUMP {0x16b, 0x788}
---
Entry stack: [V10, 0x37e, V231, V234, V252, 0x0, S4, {0x16b, 0x788}, S2, S1, 0x1]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, 0x37e, V231, V234, V252, 0x0, S4, 0x1]

================================

Block 0x530
[0x530:0x535]
---
Predecessors: [0x190]
Successors: [0x198]
---
0x530 JUMPDEST
0x531 PUSH1 0x3
0x533 SLOAD
0x534 DUP2
0x535 JUMP
---
0x530: JUMPDEST 
0x531: V384 = 0x3
0x533: V385 = S[0x3]
0x535: JUMP 0x198
---
Entry stack: [V10, 0x198]
Stack pops: 1
Stack additions: [S0, V385]
Exit stack: [V10, 0x198, V385]

================================

Block 0x536
[0x536:0x548]
---
Predecessors: [0x1b9]
Successors: [0x1c1]
---
0x536 JUMPDEST
0x537 PUSH1 0x2
0x539 PUSH1 0x0
0x53b SWAP1
0x53c SLOAD
0x53d SWAP1
0x53e PUSH2 0x100
0x541 EXP
0x542 SWAP1
0x543 DIV
0x544 PUSH1 0xff
0x546 AND
0x547 DUP2
0x548 JUMP
---
0x536: JUMPDEST 
0x537: V386 = 0x2
0x539: V387 = 0x0
0x53c: V388 = S[0x2]
0x53e: V389 = 0x100
0x541: V390 = EXP 0x100 0x0
0x543: V391 = DIV V388 0x1
0x544: V392 = 0xff
0x546: V393 = AND 0xff V391
0x548: JUMP 0x1c1
---
Entry stack: [V10, 0x1c1]
Stack pops: 1
Stack additions: [S0, V393]
Exit stack: [V10, 0x1c1, V393]

================================

Block 0x549
[0x549:0x560]
---
Predecessors: [0x1e8]
Successors: [0x214]
---
0x549 JUMPDEST
0x54a PUSH1 0x4
0x54c PUSH1 0x20
0x54e MSTORE
0x54f DUP1
0x550 PUSH1 0x0
0x552 MSTORE
0x553 PUSH1 0x40
0x555 PUSH1 0x0
0x557 SHA3
0x558 PUSH1 0x0
0x55a SWAP2
0x55b POP
0x55c SWAP1
0x55d POP
0x55e SLOAD
0x55f DUP2
0x560 JUMP
---
0x549: JUMPDEST 
0x54a: V394 = 0x4
0x54c: V395 = 0x20
0x54e: M[0x20] = 0x4
0x550: V396 = 0x0
0x552: M[0x0] = V150
0x553: V397 = 0x40
0x555: V398 = 0x0
0x557: V399 = SHA3 0x0 0x40
0x558: V400 = 0x0
0x55e: V401 = S[V399]
0x560: JUMP 0x214
---
Entry stack: [V10, 0x214, V150]
Stack pops: 2
Stack additions: [S1, V401]
Exit stack: [V10, 0x214, V401]

================================

Block 0x561
[0x561:0x5b0]
---
Predecessors: [0x235]
Successors: [0x5b1, 0x5f7]
---
0x561 JUMPDEST
0x562 PUSH1 0x1
0x564 DUP1
0x565 SLOAD
0x566 PUSH1 0x1
0x568 DUP2
0x569 PUSH1 0x1
0x56b AND
0x56c ISZERO
0x56d PUSH2 0x100
0x570 MUL
0x571 SUB
0x572 AND
0x573 PUSH1 0x2
0x575 SWAP1
0x576 DIV
0x577 DUP1
0x578 PUSH1 0x1f
0x57a ADD
0x57b PUSH1 0x20
0x57d DUP1
0x57e SWAP2
0x57f DIV
0x580 MUL
0x581 PUSH1 0x20
0x583 ADD
0x584 PUSH1 0x40
0x586 MLOAD
0x587 SWAP1
0x588 DUP2
0x589 ADD
0x58a PUSH1 0x40
0x58c MSTORE
0x58d DUP1
0x58e SWAP3
0x58f SWAP2
0x590 SWAP1
0x591 DUP2
0x592 DUP2
0x593 MSTORE
0x594 PUSH1 0x20
0x596 ADD
0x597 DUP3
0x598 DUP1
0x599 SLOAD
0x59a PUSH1 0x1
0x59c DUP2
0x59d PUSH1 0x1
0x59f AND
0x5a0 ISZERO
0x5a1 PUSH2 0x100
0x5a4 MUL
0x5a5 SUB
0x5a6 AND
0x5a7 PUSH1 0x2
0x5a9 SWAP1
0x5aa DIV
0x5ab DUP1
0x5ac ISZERO
0x5ad PUSH2 0x5f7
0x5b0 JUMPI
---
0x561: JUMPDEST 
0x562: V402 = 0x1
0x565: V403 = S[0x1]
0x566: V404 = 0x1
0x569: V405 = 0x1
0x56b: V406 = AND 0x1 V403
0x56c: V407 = ISZERO V406
0x56d: V408 = 0x100
0x570: V409 = MUL 0x100 V407
0x571: V410 = SUB V409 0x1
0x572: V411 = AND V410 V403
0x573: V412 = 0x2
0x576: V413 = DIV V411 0x2
0x578: V414 = 0x1f
0x57a: V415 = ADD 0x1f V413
0x57b: V416 = 0x20
0x57f: V417 = DIV V415 0x20
0x580: V418 = MUL V417 0x20
0x581: V419 = 0x20
0x583: V420 = ADD 0x20 V418
0x584: V421 = 0x40
0x586: V422 = M[0x40]
0x589: V423 = ADD V422 V420
0x58a: V424 = 0x40
0x58c: M[0x40] = V423
0x593: M[V422] = V413
0x594: V425 = 0x20
0x596: V426 = ADD 0x20 V422
0x599: V427 = S[0x1]
0x59a: V428 = 0x1
0x59d: V429 = 0x1
0x59f: V430 = AND 0x1 V427
0x5a0: V431 = ISZERO V430
0x5a1: V432 = 0x100
0x5a4: V433 = MUL 0x100 V431
0x5a5: V434 = SUB V433 0x1
0x5a6: V435 = AND V434 V427
0x5a7: V436 = 0x2
0x5aa: V437 = DIV V435 0x2
0x5ac: V438 = ISZERO V437
0x5ad: V439 = 0x5f7
0x5b0: JUMPI 0x5f7 V438
---
Entry stack: [V10, 0x23d]
Stack pops: 0
Stack additions: [V422, 0x1, V413, V426, 0x1, V437]
Exit stack: [V10, 0x23d, V422, 0x1, V413, V426, 0x1, V437]

================================

Block 0x5b1
[0x5b1:0x5b8]
---
Predecessors: [0x561]
Successors: [0x5b9, 0x5cc]
---
0x5b1 DUP1
0x5b2 PUSH1 0x1f
0x5b4 LT
0x5b5 PUSH2 0x5cc
0x5b8 JUMPI
---
0x5b2: V440 = 0x1f
0x5b4: V441 = LT 0x1f V437
0x5b5: V442 = 0x5cc
0x5b8: JUMPI 0x5cc V441
---
Entry stack: [V10, 0x23d, V422, 0x1, V413, V426, 0x1, V437]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x23d, V422, 0x1, V413, V426, 0x1, V437]

================================

Block 0x5b9
[0x5b9:0x5cb]
---
Predecessors: [0x5b1]
Successors: [0x5f7]
---
0x5b9 PUSH2 0x100
0x5bc DUP1
0x5bd DUP4
0x5be SLOAD
0x5bf DIV
0x5c0 MUL
0x5c1 DUP4
0x5c2 MSTORE
0x5c3 SWAP2
0x5c4 PUSH1 0x20
0x5c6 ADD
0x5c7 SWAP2
0x5c8 PUSH2 0x5f7
0x5cb JUMP
---
0x5b9: V443 = 0x100
0x5be: V444 = S[0x1]
0x5bf: V445 = DIV V444 0x100
0x5c0: V446 = MUL V445 0x100
0x5c2: M[V426] = V446
0x5c4: V447 = 0x20
0x5c6: V448 = ADD 0x20 V426
0x5c8: V449 = 0x5f7
0x5cb: JUMP 0x5f7
---
Entry stack: [V10, 0x23d, V422, 0x1, V413, V426, 0x1, V437]
Stack pops: 3
Stack additions: [V448, S1, S0]
Exit stack: [V10, 0x23d, V422, 0x1, V413, V448, 0x1, V437]

================================

Block 0x5cc
[0x5cc:0x5d9]
---
Predecessors: [0x5b1]
Successors: [0x5da]
---
0x5cc JUMPDEST
0x5cd DUP3
0x5ce ADD
0x5cf SWAP2
0x5d0 SWAP1
0x5d1 PUSH1 0x0
0x5d3 MSTORE
0x5d4 PUSH1 0x20
0x5d6 PUSH1 0x0
0x5d8 SHA3
0x5d9 SWAP1
---
0x5cc: JUMPDEST 
0x5ce: V450 = ADD V426 V437
0x5d1: V451 = 0x0
0x5d3: M[0x0] = 0x1
0x5d4: V452 = 0x20
0x5d6: V453 = 0x0
0x5d8: V454 = SHA3 0x0 0x20
---
Entry stack: [V10, 0x23d, V422, 0x1, V413, V426, 0x1, V437]
Stack pops: 3
Stack additions: [V450, V454, S2]
Exit stack: [V10, 0x23d, V422, 0x1, V413, V450, V454, V426]

================================

Block 0x5da
[0x5da:0x5ed]
---
Predecessors: [0x5cc, 0x5da]
Successors: [0x5da, 0x5ee]
---
0x5da JUMPDEST
0x5db DUP2
0x5dc SLOAD
0x5dd DUP2
0x5de MSTORE
0x5df SWAP1
0x5e0 PUSH1 0x1
0x5e2 ADD
0x5e3 SWAP1
0x5e4 PUSH1 0x20
0x5e6 ADD
0x5e7 DUP1
0x5e8 DUP4
0x5e9 GT
0x5ea PUSH2 0x5da
0x5ed JUMPI
---
0x5da: JUMPDEST 
0x5dc: V455 = S[S1]
0x5de: M[S0] = V455
0x5e0: V456 = 0x1
0x5e2: V457 = ADD 0x1 S1
0x5e4: V458 = 0x20
0x5e6: V459 = ADD 0x20 S0
0x5e9: V460 = GT V450 V459
0x5ea: V461 = 0x5da
0x5ed: JUMPI 0x5da V460
---
Entry stack: [V10, 0x23d, V422, 0x1, V413, V450, S1, S0]
Stack pops: 3
Stack additions: [S2, V457, V459]
Exit stack: [V10, 0x23d, V422, 0x1, V413, V450, V457, V459]

================================

Block 0x5ee
[0x5ee:0x5f6]
---
Predecessors: [0x5da]
Successors: [0x5f7]
---
0x5ee DUP3
0x5ef SWAP1
0x5f0 SUB
0x5f1 PUSH1 0x1f
0x5f3 AND
0x5f4 DUP3
0x5f5 ADD
0x5f6 SWAP2
---
0x5f0: V462 = SUB V459 V450
0x5f1: V463 = 0x1f
0x5f3: V464 = AND 0x1f V462
0x5f5: V465 = ADD V450 V464
---
Entry stack: [V10, 0x23d, V422, 0x1, V413, V450, V457, V459]
Stack pops: 3
Stack additions: [V465, S1, S2]
Exit stack: [V10, 0x23d, V422, 0x1, V413, V465, V457, V450]

================================

Block 0x5f7
[0x5f7:0x5fe]
---
Predecessors: [0x561, 0x5b9, 0x5ee]
Successors: [0x23d]
---
0x5f7 JUMPDEST
0x5f8 POP
0x5f9 POP
0x5fa POP
0x5fb POP
0x5fc POP
0x5fd DUP2
0x5fe JUMP
---
0x5f7: JUMPDEST 
0x5fe: JUMP 0x23d
---
Entry stack: [V10, 0x23d, V422, 0x1, V413, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V10, 0x23d, V422]

================================

Block 0x5ff
[0x5ff:0x648]
---
Predecessors: [0x2c4]
Successors: [0x649, 0x6ce]
---
0x5ff JUMPDEST
0x600 DUP1
0x601 PUSH1 0x4
0x603 PUSH1 0x0
0x605 CALLER
0x606 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x61b AND
0x61c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x631 AND
0x632 DUP2
0x633 MSTORE
0x634 PUSH1 0x20
0x636 ADD
0x637 SWAP1
0x638 DUP2
0x639 MSTORE
0x63a PUSH1 0x20
0x63c ADD
0x63d PUSH1 0x0
0x63f SHA3
0x640 SLOAD
0x641 LT
0x642 ISZERO
0x643 DUP1
0x644 ISZERO
0x645 PUSH2 0x6ce
0x648 JUMPI
---
0x5ff: JUMPDEST 
0x601: V466 = 0x4
0x603: V467 = 0x0
0x605: V468 = CALLER
0x606: V469 = 0xffffffffffffffffffffffffffffffffffffffff
0x61b: V470 = AND 0xffffffffffffffffffffffffffffffffffffffff V468
0x61c: V471 = 0xffffffffffffffffffffffffffffffffffffffff
0x631: V472 = AND 0xffffffffffffffffffffffffffffffffffffffff V470
0x633: M[0x0] = V472
0x634: V473 = 0x20
0x636: V474 = ADD 0x20 0x0
0x639: M[0x20] = 0x4
0x63a: V475 = 0x20
0x63c: V476 = ADD 0x20 0x20
0x63d: V477 = 0x0
0x63f: V478 = SHA3 0x0 0x40
0x640: V479 = S[V478]
0x641: V480 = LT V479 V219
0x642: V481 = ISZERO V480
0x644: V482 = ISZERO V481
0x645: V483 = 0x6ce
0x648: JUMPI 0x6ce V482
---
Entry stack: [V10, 0x2f9, V216, V219]
Stack pops: 1
Stack additions: [S0, V481]
Exit stack: [V10, 0x2f9, V216, V219, V481]

================================

Block 0x649
[0x649:0x6cd]
---
Predecessors: [0x5ff]
Successors: [0x6ce]
---
0x649 POP
0x64a PUSH1 0x4
0x64c PUSH1 0x0
0x64e DUP4
0x64f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x664 AND
0x665 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x67a AND
0x67b DUP2
0x67c MSTORE
0x67d PUSH1 0x20
0x67f ADD
0x680 SWAP1
0x681 DUP2
0x682 MSTORE
0x683 PUSH1 0x20
0x685 ADD
0x686 PUSH1 0x0
0x688 SHA3
0x689 SLOAD
0x68a DUP2
0x68b PUSH1 0x4
0x68d PUSH1 0x0
0x68f DUP6
0x690 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a5 AND
0x6a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6bb AND
0x6bc DUP2
0x6bd MSTORE
0x6be PUSH1 0x20
0x6c0 ADD
0x6c1 SWAP1
0x6c2 DUP2
0x6c3 MSTORE
0x6c4 PUSH1 0x20
0x6c6 ADD
0x6c7 PUSH1 0x0
0x6c9 SHA3
0x6ca SLOAD
0x6cb ADD
0x6cc LT
0x6cd ISZERO
---
0x64a: V484 = 0x4
0x64c: V485 = 0x0
0x64f: V486 = 0xffffffffffffffffffffffffffffffffffffffff
0x664: V487 = AND 0xffffffffffffffffffffffffffffffffffffffff V216
0x665: V488 = 0xffffffffffffffffffffffffffffffffffffffff
0x67a: V489 = AND 0xffffffffffffffffffffffffffffffffffffffff V487
0x67c: M[0x0] = V489
0x67d: V490 = 0x20
0x67f: V491 = ADD 0x20 0x0
0x682: M[0x20] = 0x4
0x683: V492 = 0x20
0x685: V493 = ADD 0x20 0x20
0x686: V494 = 0x0
0x688: V495 = SHA3 0x0 0x40
0x689: V496 = S[V495]
0x68b: V497 = 0x4
0x68d: V498 = 0x0
0x690: V499 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a5: V500 = AND 0xffffffffffffffffffffffffffffffffffffffff V216
0x6a6: V501 = 0xffffffffffffffffffffffffffffffffffffffff
0x6bb: V502 = AND 0xffffffffffffffffffffffffffffffffffffffff V500
0x6bd: M[0x0] = V502
0x6be: V503 = 0x20
0x6c0: V504 = ADD 0x20 0x0
0x6c3: M[0x20] = 0x4
0x6c4: V505 = 0x20
0x6c6: V506 = ADD 0x20 0x20
0x6c7: V507 = 0x0
0x6c9: V508 = SHA3 0x0 0x40
0x6ca: V509 = S[V508]
0x6cb: V510 = ADD V509 V219
0x6cc: V511 = LT V510 V496
0x6cd: V512 = ISZERO V511
---
Entry stack: [V10, 0x2f9, V216, V219, V481]
Stack pops: 3
Stack additions: [S2, S1, V512]
Exit stack: [V10, 0x2f9, V216, V219, V512]

================================

Block 0x6ce
[0x6ce:0x6d4]
---
Predecessors: [0x5ff, 0x649]
Successors: [0x6d5, 0x6d9]
---
0x6ce JUMPDEST
0x6cf ISZERO
0x6d0 ISZERO
0x6d1 PUSH2 0x6d9
0x6d4 JUMPI
---
0x6ce: JUMPDEST 
0x6cf: V513 = ISZERO S0
0x6d0: V514 = ISZERO V513
0x6d1: V515 = 0x6d9
0x6d4: JUMPI 0x6d9 V514
---
Entry stack: [V10, 0x2f9, V216, V219, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x2f9, V216, V219]

================================

Block 0x6d5
[0x6d5:0x6d8]
---
Predecessors: [0x6ce]
Successors: []
---
0x6d5 PUSH1 0x0
0x6d7 DUP1
0x6d8 REVERT
---
0x6d5: V516 = 0x0
0x6d8: REVERT 0x0 0x0
---
Entry stack: [V10, 0x2f9, V216, V219]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2f9, V216, V219]

================================

Block 0x6d9
[0x6d9:0x773]
---
Predecessors: [0x6ce]
Successors: [0x774]
---
0x6d9 JUMPDEST
0x6da DUP1
0x6db PUSH1 0x4
0x6dd PUSH1 0x0
0x6df CALLER
0x6e0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6f5 AND
0x6f6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x70b AND
0x70c DUP2
0x70d MSTORE
0x70e PUSH1 0x20
0x710 ADD
0x711 SWAP1
0x712 DUP2
0x713 MSTORE
0x714 PUSH1 0x20
0x716 ADD
0x717 PUSH1 0x0
0x719 SHA3
0x71a PUSH1 0x0
0x71c DUP3
0x71d DUP3
0x71e SLOAD
0x71f SUB
0x720 SWAP3
0x721 POP
0x722 POP
0x723 DUP2
0x724 SWAP1
0x725 SSTORE
0x726 POP
0x727 DUP1
0x728 PUSH1 0x4
0x72a PUSH1 0x0
0x72c DUP5
0x72d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x742 AND
0x743 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x758 AND
0x759 DUP2
0x75a MSTORE
0x75b PUSH1 0x20
0x75d ADD
0x75e SWAP1
0x75f DUP2
0x760 MSTORE
0x761 PUSH1 0x20
0x763 ADD
0x764 PUSH1 0x0
0x766 SHA3
0x767 PUSH1 0x0
0x769 DUP3
0x76a DUP3
0x76b SLOAD
0x76c ADD
0x76d SWAP3
0x76e POP
0x76f POP
0x770 DUP2
0x771 SWAP1
0x772 SSTORE
0x773 POP
---
0x6d9: JUMPDEST 
0x6db: V517 = 0x4
0x6dd: V518 = 0x0
0x6df: V519 = CALLER
0x6e0: V520 = 0xffffffffffffffffffffffffffffffffffffffff
0x6f5: V521 = AND 0xffffffffffffffffffffffffffffffffffffffff V519
0x6f6: V522 = 0xffffffffffffffffffffffffffffffffffffffff
0x70b: V523 = AND 0xffffffffffffffffffffffffffffffffffffffff V521
0x70d: M[0x0] = V523
0x70e: V524 = 0x20
0x710: V525 = ADD 0x20 0x0
0x713: M[0x20] = 0x4
0x714: V526 = 0x20
0x716: V527 = ADD 0x20 0x20
0x717: V528 = 0x0
0x719: V529 = SHA3 0x0 0x40
0x71a: V530 = 0x0
0x71e: V531 = S[V529]
0x71f: V532 = SUB V531 V219
0x725: S[V529] = V532
0x728: V533 = 0x4
0x72a: V534 = 0x0
0x72d: V535 = 0xffffffffffffffffffffffffffffffffffffffff
0x742: V536 = AND 0xffffffffffffffffffffffffffffffffffffffff V216
0x743: V537 = 0xffffffffffffffffffffffffffffffffffffffff
0x758: V538 = AND 0xffffffffffffffffffffffffffffffffffffffff V536
0x75a: M[0x0] = V538
0x75b: V539 = 0x20
0x75d: V540 = ADD 0x20 0x0
0x760: M[0x20] = 0x4
0x761: V541 = 0x20
0x763: V542 = ADD 0x20 0x20
0x764: V543 = 0x0
0x766: V544 = SHA3 0x0 0x40
0x767: V545 = 0x0
0x76b: V546 = S[V544]
0x76c: V547 = ADD V546 V219
0x772: S[V544] = V547
---
Entry stack: [V10, 0x2f9, V216, V219]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x2f9, V216, V219]

================================

Block 0x774
[0x774:0x777]
---
Predecessors: [0x6d9]
Successors: [0x2f9]
---
0x774 JUMPDEST
0x775 POP
0x776 POP
0x777 JUMP
---
0x774: JUMPDEST 
0x777: JUMP 0x2f9
---
Entry stack: [V10, 0x2f9, V216, V219]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x778
[0x778:0x787]
---
Predecessors: [0x306]
Successors: [0x4a2]
---
0x778 JUMPDEST
0x779 PUSH1 0x0
0x77b DUP1
0x77c DUP5
0x77d SWAP1
0x77e POP
0x77f PUSH2 0x788
0x782 DUP6
0x783 DUP6
0x784 PUSH2 0x4a2
0x787 JUMP
---
0x778: JUMPDEST 
0x779: V548 = 0x0
0x77f: V549 = 0x788
0x784: V550 = 0x4a2
0x787: JUMP 0x4a2
---
Entry stack: [V10, 0x37e, V231, V234, V252]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, S2, 0x788, S2, S1]
Exit stack: [V10, 0x37e, V231, V234, V252, 0x0, V231, 0x788, V231, V234]

================================

Block 0x788
[0x788:0x78d]
---
Predecessors: [0x52a]
Successors: [0x78e, 0x8ee]
---
0x788 JUMPDEST
0x789 ISZERO
0x78a PUSH2 0x8ee
0x78d JUMPI
---
0x788: JUMPDEST 
0x789: V551 = ISZERO 0x1
0x78a: V552 = 0x8ee
0x78d: JUMPI 0x8ee 0x0
---
Entry stack: [V10, 0x37e, V231, V234, V252, 0x0, S1, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x37e, V231, V234, V252, 0x0, S1]

================================

Block 0x78e
[0x78e:0x866]
---
Predecessors: [0x788]
Successors: [0x867]
---
0x78e DUP1
0x78f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7a4 AND
0x7a5 PUSH4 0x8f4ffcb1
0x7aa CALLER
0x7ab DUP7
0x7ac ADDRESS
0x7ad DUP8
0x7ae PUSH1 0x40
0x7b0 MLOAD
0x7b1 DUP6
0x7b2 PUSH4 0xffffffff
0x7b7 AND
0x7b8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x7d6 MUL
0x7d7 DUP2
0x7d8 MSTORE
0x7d9 PUSH1 0x4
0x7db ADD
0x7dc DUP1
0x7dd DUP6
0x7de PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7f3 AND
0x7f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x809 AND
0x80a DUP2
0x80b MSTORE
0x80c PUSH1 0x20
0x80e ADD
0x80f DUP5
0x810 DUP2
0x811 MSTORE
0x812 PUSH1 0x20
0x814 ADD
0x815 DUP4
0x816 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x82b AND
0x82c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x841 AND
0x842 DUP2
0x843 MSTORE
0x844 PUSH1 0x20
0x846 ADD
0x847 DUP1
0x848 PUSH1 0x20
0x84a ADD
0x84b DUP3
0x84c DUP2
0x84d SUB
0x84e DUP3
0x84f MSTORE
0x850 DUP4
0x851 DUP2
0x852 DUP2
0x853 MLOAD
0x854 DUP2
0x855 MSTORE
0x856 PUSH1 0x20
0x858 ADD
0x859 SWAP2
0x85a POP
0x85b DUP1
0x85c MLOAD
0x85d SWAP1
0x85e PUSH1 0x20
0x860 ADD
0x861 SWAP1
0x862 DUP1
0x863 DUP4
0x864 DUP4
0x865 PUSH1 0x0
---
0x78f: V553 = 0xffffffffffffffffffffffffffffffffffffffff
0x7a4: V554 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x7a5: V555 = 0x8f4ffcb1
0x7aa: V556 = CALLER
0x7ac: V557 = ADDRESS
0x7ae: V558 = 0x40
0x7b0: V559 = M[0x40]
0x7b2: V560 = 0xffffffff
0x7b7: V561 = AND 0xffffffff 0x8f4ffcb1
0x7b8: V562 = 0x100000000000000000000000000000000000000000000000000000000
0x7d6: V563 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x8f4ffcb1
0x7d8: M[V559] = 0x8f4ffcb100000000000000000000000000000000000000000000000000000000
0x7d9: V564 = 0x4
0x7db: V565 = ADD 0x4 V559
0x7de: V566 = 0xffffffffffffffffffffffffffffffffffffffff
0x7f3: V567 = AND 0xffffffffffffffffffffffffffffffffffffffff V556
0x7f4: V568 = 0xffffffffffffffffffffffffffffffffffffffff
0x809: V569 = AND 0xffffffffffffffffffffffffffffffffffffffff V567
0x80b: M[V565] = V569
0x80c: V570 = 0x20
0x80e: V571 = ADD 0x20 V565
0x811: M[V571] = V234
0x812: V572 = 0x20
0x814: V573 = ADD 0x20 V571
0x816: V574 = 0xffffffffffffffffffffffffffffffffffffffff
0x82b: V575 = AND 0xffffffffffffffffffffffffffffffffffffffff V557
0x82c: V576 = 0xffffffffffffffffffffffffffffffffffffffff
0x841: V577 = AND 0xffffffffffffffffffffffffffffffffffffffff V575
0x843: M[V573] = V577
0x844: V578 = 0x20
0x846: V579 = ADD 0x20 V573
0x848: V580 = 0x20
0x84a: V581 = ADD 0x20 V579
0x84d: V582 = SUB V581 V565
0x84f: M[V579] = V582
0x853: V583 = M[V252]
0x855: M[V581] = V583
0x856: V584 = 0x20
0x858: V585 = ADD 0x20 V581
0x85c: V586 = M[V252]
0x85e: V587 = 0x20
0x860: V588 = ADD 0x20 V252
0x865: V589 = 0x0
---
Entry stack: [V10, 0x37e, V231, V234, V252, 0x0, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V554, 0x8f4ffcb1, V556, S3, V557, S2, V565, V579, V585, V588, V586, V586, V585, V588, 0x0]
Exit stack: [V10, 0x37e, V231, V234, V252, 0x0, S0, V554, 0x8f4ffcb1, V556, V234, V557, V252, V565, V579, V585, V588, V586, V586, V585, V588, 0x0]

================================

Block 0x867
[0x867:0x86f]
---
Predecessors: [0x78e, 0x878]
Successors: [0x870, 0x883]
---
0x867 JUMPDEST
0x868 DUP4
0x869 DUP2
0x86a LT
0x86b ISZERO
0x86c PUSH2 0x883
0x86f JUMPI
---
0x867: JUMPDEST 
0x86a: V590 = LT S0 V586
0x86b: V591 = ISZERO V590
0x86c: V592 = 0x883
0x86f: JUMPI 0x883 V591
---
Entry stack: [V10, 0x37e, V231, V234, V252, 0x0, S15, V554, 0x8f4ffcb1, V556, V234, V557, V252, V565, V579, V585, V588, V586, V586, V585, V588, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x37e, V231, V234, V252, 0x0, S15, V554, 0x8f4ffcb1, V556, V234, V557, V252, V565, V579, V585, V588, V586, V586, V585, V588, S0]

================================

Block 0x870
[0x870:0x877]
---
Predecessors: [0x867]
Successors: [0x878]
---
0x870 DUP1
0x871 DUP3
0x872 ADD
0x873 MLOAD
0x874 DUP2
0x875 DUP5
0x876 ADD
0x877 MSTORE
---
0x872: V593 = ADD V588 S0
0x873: V594 = M[V593]
0x876: V595 = ADD V585 S0
0x877: M[V595] = V594
---
Entry stack: [V10, 0x37e, V231, V234, V252, 0x0, S15, V554, 0x8f4ffcb1, V556, V234, V557, V252, V565, V579, V585, V588, V586, V586, V585, V588, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x37e, V231, V234, V252, 0x0, S15, V554, 0x8f4ffcb1, V556, V234, V557, V252, V565, V579, V585, V588, V586, V586, V585, V588, S0]

================================

Block 0x878
[0x878:0x882]
---
Predecessors: [0x870]
Successors: [0x867]
---
0x878 JUMPDEST
0x879 PUSH1 0x20
0x87b DUP2
0x87c ADD
0x87d SWAP1
0x87e POP
0x87f PUSH2 0x867
0x882 JUMP
---
0x878: JUMPDEST 
0x879: V596 = 0x20
0x87c: V597 = ADD S0 0x20
0x87f: V598 = 0x867
0x882: JUMP 0x867
---
Entry stack: [V10, 0x37e, V231, V234, V252, 0x0, S15, V554, 0x8f4ffcb1, V556, V234, V557, V252, V565, V579, V585, V588, V586, V586, V585, V588, S0]
Stack pops: 1
Stack additions: [V597]
Exit stack: [V10, 0x37e, V231, V234, V252, 0x0, S15, V554, 0x8f4ffcb1, V556, V234, V557, V252, V565, V579, V585, V588, V586, V586, V585, V588, V597]

================================

Block 0x883
[0x883:0x896]
---
Predecessors: [0x867]
Successors: [0x897, 0x8b0]
---
0x883 JUMPDEST
0x884 POP
0x885 POP
0x886 POP
0x887 POP
0x888 SWAP1
0x889 POP
0x88a SWAP1
0x88b DUP2
0x88c ADD
0x88d SWAP1
0x88e PUSH1 0x1f
0x890 AND
0x891 DUP1
0x892 ISZERO
0x893 PUSH2 0x8b0
0x896 JUMPI
---
0x883: JUMPDEST 
0x88c: V599 = ADD V586 V585
0x88e: V600 = 0x1f
0x890: V601 = AND 0x1f V586
0x892: V602 = ISZERO V601
0x893: V603 = 0x8b0
0x896: JUMPI 0x8b0 V602
---
Entry stack: [V10, 0x37e, V231, V234, V252, 0x0, S15, V554, 0x8f4ffcb1, V556, V234, V557, V252, V565, V579, V585, V588, V586, V586, V585, V588, S0]
Stack pops: 7
Stack additions: [V599, V601]
Exit stack: [V10, 0x37e, V231, V234, V252, 0x0, S15, V554, 0x8f4ffcb1, V556, V234, V557, V252, V565, V579, V599, V601]

================================

Block 0x897
[0x897:0x8af]
---
Predecessors: [0x883]
Successors: [0x8b0]
---
0x897 DUP1
0x898 DUP3
0x899 SUB
0x89a DUP1
0x89b MLOAD
0x89c PUSH1 0x1
0x89e DUP4
0x89f PUSH1 0x20
0x8a1 SUB
0x8a2 PUSH2 0x100
0x8a5 EXP
0x8a6 SUB
0x8a7 NOT
0x8a8 AND
0x8a9 DUP2
0x8aa MSTORE
0x8ab PUSH1 0x20
0x8ad ADD
0x8ae SWAP2
0x8af POP
---
0x899: V604 = SUB V599 V601
0x89b: V605 = M[V604]
0x89c: V606 = 0x1
0x89f: V607 = 0x20
0x8a1: V608 = SUB 0x20 V601
0x8a2: V609 = 0x100
0x8a5: V610 = EXP 0x100 V608
0x8a6: V611 = SUB V610 0x1
0x8a7: V612 = NOT V611
0x8a8: V613 = AND V612 V605
0x8aa: M[V604] = V613
0x8ab: V614 = 0x20
0x8ad: V615 = ADD 0x20 V604
---
Entry stack: [V10, 0x37e, V231, V234, V252, 0x0, S10, V554, 0x8f4ffcb1, V556, V234, V557, V252, V565, V579, V599, V601]
Stack pops: 2
Stack additions: [V615, S0]
Exit stack: [V10, 0x37e, V231, V234, V252, 0x0, S10, V554, 0x8f4ffcb1, V556, V234, V557, V252, V565, V579, V615, V601]

================================

Block 0x8b0
[0x8b0:0x8cc]
---
Predecessors: [0x883, 0x897]
Successors: [0x8cd, 0x8d1]
---
0x8b0 JUMPDEST
0x8b1 POP
0x8b2 SWAP6
0x8b3 POP
0x8b4 POP
0x8b5 POP
0x8b6 POP
0x8b7 POP
0x8b8 POP
0x8b9 PUSH1 0x0
0x8bb PUSH1 0x40
0x8bd MLOAD
0x8be DUP1
0x8bf DUP4
0x8c0 SUB
0x8c1 DUP2
0x8c2 PUSH1 0x0
0x8c4 DUP8
0x8c5 DUP1
0x8c6 EXTCODESIZE
0x8c7 ISZERO
0x8c8 ISZERO
0x8c9 PUSH2 0x8d1
0x8cc JUMPI
---
0x8b0: JUMPDEST 
0x8b9: V616 = 0x0
0x8bb: V617 = 0x40
0x8bd: V618 = M[0x40]
0x8c0: V619 = SUB S1 V618
0x8c2: V620 = 0x0
0x8c6: V621 = EXTCODESIZE V554
0x8c7: V622 = ISZERO V621
0x8c8: V623 = ISZERO V622
0x8c9: V624 = 0x8d1
0x8cc: JUMPI 0x8d1 V623
---
Entry stack: [V10, 0x37e, V231, V234, V252, 0x0, S10, V554, 0x8f4ffcb1, V556, V234, V557, V252, V565, V579, S1, V601]
Stack pops: 10
Stack additions: [S9, S8, S1, 0x0, V618, V619, V618, 0x0, S9]
Exit stack: [V10, 0x37e, V231, V234, V252, 0x0, S10, V554, 0x8f4ffcb1, S1, 0x0, V618, V619, V618, 0x0, V554]

================================

Block 0x8cd
[0x8cd:0x8d0]
---
Predecessors: [0x8b0]
Successors: []
---
0x8cd PUSH1 0x0
0x8cf DUP1
0x8d0 REVERT
---
0x8cd: V625 = 0x0
0x8d0: REVERT 0x0 0x0
---
Entry stack: [V10, 0x37e, V231, V234, V252, 0x0, S9, V554, 0x8f4ffcb1, S6, 0x0, V618, V619, V618, 0x0, V554]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x37e, V231, V234, V252, 0x0, S9, V554, 0x8f4ffcb1, S6, 0x0, V618, V619, V618, 0x0, V554]

================================

Block 0x8d1
[0x8d1:0x8dd]
---
Predecessors: [0x8b0]
Successors: [0x8de, 0x8e2]
---
0x8d1 JUMPDEST
0x8d2 PUSH2 0x2c6
0x8d5 GAS
0x8d6 SUB
0x8d7 CALL
0x8d8 ISZERO
0x8d9 ISZERO
0x8da PUSH2 0x8e2
0x8dd JUMPI
---
0x8d1: JUMPDEST 
0x8d2: V626 = 0x2c6
0x8d5: V627 = GAS
0x8d6: V628 = SUB V627 0x2c6
0x8d7: V629 = CALL V628 V554 0x0 V618 V619 V618 0x0
0x8d8: V630 = ISZERO V629
0x8d9: V631 = ISZERO V630
0x8da: V632 = 0x8e2
0x8dd: JUMPI 0x8e2 V631
---
Entry stack: [V10, 0x37e, V231, V234, V252, 0x0, S9, V554, 0x8f4ffcb1, S6, 0x0, V618, V619, V618, 0x0, V554]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x37e, V231, V234, V252, 0x0, S9, V554, 0x8f4ffcb1, S6]

================================

Block 0x8de
[0x8de:0x8e1]
---
Predecessors: [0x8d1]
Successors: []
---
0x8de PUSH1 0x0
0x8e0 DUP1
0x8e1 REVERT
---
0x8de: V633 = 0x0
0x8e1: REVERT 0x0 0x0
---
Entry stack: [V10, 0x37e, V231, V234, V252, 0x0, S3, V554, 0x8f4ffcb1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x37e, V231, V234, V252, 0x0, S3, V554, 0x8f4ffcb1, S0]

================================

Block 0x8e2
[0x8e2:0x8ed]
---
Predecessors: [0x8d1]
Successors: [0x8ef]
---
0x8e2 JUMPDEST
0x8e3 POP
0x8e4 POP
0x8e5 POP
0x8e6 PUSH1 0x1
0x8e8 SWAP2
0x8e9 POP
0x8ea PUSH2 0x8ef
0x8ed JUMP
---
0x8e2: JUMPDEST 
0x8e6: V634 = 0x1
0x8ea: V635 = 0x8ef
0x8ed: JUMP 0x8ef
---
Entry stack: [V10, 0x37e, V231, V234, V252, 0x0, S3, V554, 0x8f4ffcb1, S0]
Stack pops: 5
Stack additions: [0x1, S3]
Exit stack: [V10, 0x37e, V231, V234, V252, 0x1, S3]

================================

Block 0x8ee
[0x8ee:0x8ee]
---
Predecessors: [0x788]
Successors: [0x8ef]
---
0x8ee JUMPDEST
---
0x8ee: JUMPDEST 
---
Entry stack: [V10, 0x37e, V231, V234, V252, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x37e, V231, V234, V252, 0x0, S0]

================================

Block 0x8ef
[0x8ef:0x8f6]
---
Predecessors: [0x8e2, 0x8ee]
Successors: [0x37e]
---
0x8ef JUMPDEST
0x8f0 POP
0x8f1 SWAP4
0x8f2 SWAP3
0x8f3 POP
0x8f4 POP
0x8f5 POP
0x8f6 JUMP
---
0x8ef: JUMPDEST 
0x8f6: JUMP 0x37e
---
Entry stack: [V10, 0x37e, V231, V234, V252, {0x0, 0x1}, S0]
Stack pops: 6
Stack additions: [S1]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0x8f7
[0x8f7:0x91b]
---
Predecessors: [0x3a3]
Successors: [0x3ee]
---
0x8f7 JUMPDEST
0x8f8 PUSH1 0x5
0x8fa PUSH1 0x20
0x8fc MSTORE
0x8fd DUP2
0x8fe PUSH1 0x0
0x900 MSTORE
0x901 PUSH1 0x40
0x903 PUSH1 0x0
0x905 SHA3
0x906 PUSH1 0x20
0x908 MSTORE
0x909 DUP1
0x90a PUSH1 0x0
0x90c MSTORE
0x90d PUSH1 0x40
0x90f PUSH1 0x0
0x911 SHA3
0x912 PUSH1 0x0
0x914 SWAP2
0x915 POP
0x916 SWAP2
0x917 POP
0x918 POP
0x919 SLOAD
0x91a DUP2
0x91b JUMP
---
0x8f7: JUMPDEST 
0x8f8: V636 = 0x5
0x8fa: V637 = 0x20
0x8fc: M[0x20] = 0x5
0x8fe: V638 = 0x0
0x900: M[0x0] = V278
0x901: V639 = 0x40
0x903: V640 = 0x0
0x905: V641 = SHA3 0x0 0x40
0x906: V642 = 0x20
0x908: M[0x20] = V641
0x90a: V643 = 0x0
0x90c: M[0x0] = V283
0x90d: V644 = 0x40
0x90f: V645 = 0x0
0x911: V646 = SHA3 0x0 0x40
0x912: V647 = 0x0
0x919: V648 = S[V646]
0x91b: JUMP 0x3ee
---
Entry stack: [V10, 0x3ee, V278, V283]
Stack pops: 3
Stack additions: [S2, V648]
Exit stack: [V10, 0x3ee, V648]

================================

Block 0x91c
[0x91c:0x947]
---
Predecessors: []
Successors: []
---
0x91c STOP
0x91d LOG1
0x91e PUSH6 0x627a7a723058
0x925 SHA3
0x926 SWAP3
0x927 LOG1
0x928 MISSING 0xb2
0x929 MISSING 0x4e
0x92a CREATE2
0x92b MISSING 0xd6
0x92c MISSING 0xd5
0x92d MISSING 0xcb
0x92e COINBASE
0x92f MISSING 0xdb
0x930 PUSH20 0x82274d81496d1b46f6528e419e73e3af31df4340
0x945 MISSING 0x21
0x946 STOP
0x947 MISSING 0x29
---
0x91c: STOP 
0x91d: LOG S0 S1 S2
0x91e: V649 = 0x627a7a723058
0x925: V650 = SHA3 0x627a7a723058 S3
0x927: LOG S6 S4 S5
0x928: MISSING 0xb2
0x929: MISSING 0x4e
0x92a: V651 = CREATE2 S0 S1 S2 S3
0x92b: MISSING 0xd6
0x92c: MISSING 0xd5
0x92d: MISSING 0xcb
0x92e: V652 = COINBASE
0x92f: MISSING 0xdb
0x930: V653 = 0x82274d81496d1b46f6528e419e73e3af31df4340
0x945: MISSING 0x21
0x946: STOP 
0x947: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V650, V651, V652, 0x82274d81496d1b46f6528e419e73e3af31df4340]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x9c
Exit block: 0x11d
Body: 0x9c, 0xa3, 0xa7, 0xaf, 0xd4, 0xdd, 0xe5, 0xf0, 0x104, 0x11d, 0x404, 0x454, 0x45c, 0x46f, 0x47d, 0x491, 0x49a

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x12b
Exit block: 0x132
Body: 0x12b, 0x132, 0x136, 0x16b

Function 2:
Public function signature: 0x18160ddd
Entry block: 0x185
Exit block: 0x198
Body: 0x185, 0x18c, 0x190, 0x198, 0x530

Function 3:
Public function signature: 0x313ce567
Entry block: 0x1ae
Exit block: 0x1c1
Body: 0x1ae, 0x1b5, 0x1b9, 0x1c1, 0x536

Function 4:
Public function signature: 0x70a08231
Entry block: 0x1dd
Exit block: 0x214
Body: 0x1dd, 0x1e4, 0x1e8, 0x214, 0x549

Function 5:
Public function signature: 0x95d89b41
Entry block: 0x22a
Exit block: 0x2ab
Body: 0x22a, 0x231, 0x235, 0x23d, 0x262, 0x26b, 0x273, 0x27e, 0x292, 0x2ab, 0x561, 0x5b1, 0x5b9, 0x5cc, 0x5da, 0x5ee, 0x5f7

Function 6:
Public function signature: 0xa9059cbb
Entry block: 0x2b9
Exit block: 0x2f9
Body: 0x2b9, 0x2c0, 0x2c4, 0x2f9, 0x5ff, 0x649, 0x6ce, 0x6d5, 0x6d9, 0x774

Function 7:
Public function signature: 0xcae9ca51
Entry block: 0x2fb
Exit block: 0x8de
Body: 0x2fb, 0x302, 0x306, 0x37e, 0x778, 0x788, 0x78e, 0x867, 0x870, 0x878, 0x883, 0x897, 0x8b0, 0x8cd, 0x8d1, 0x8de, 0x8e2, 0x8ee, 0x8ef

Function 8:
Public function signature: 0xdd62ed3e
Entry block: 0x398
Exit block: 0x3ee
Body: 0x398, 0x39f, 0x3a3, 0x3ee, 0x8f7

Function 9:
Public fallback function
Entry block: 0x97
Exit block: 0x97
Body: 0x97

Function 10:
Private function
Entry block: 0x4a2
Exit block: 0x52a
Body: 0x4a2, 0x52a

