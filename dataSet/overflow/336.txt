Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x5c]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x72a503be
0x3c EQ
0x3d PUSH2 0x5c
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x72a503be
0x3c: V13 = EQ 0x72a503be V11
0x3d: V14 = 0x5c
0x40: JUMPI 0x5c V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x125]
---
0x41 DUP1
0x42 PUSH4 0x8da5cb5b
0x47 EQ
0x48 PUSH2 0x125
0x4b JUMPI
---
0x42: V15 = 0x8da5cb5b
0x47: V16 = EQ 0x8da5cb5b V11
0x48: V17 = 0x125
0x4b: JUMPI 0x125 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x17c]
---
0x4c DUP1
0x4d PUSH4 0xf2fde38b
0x52 EQ
0x53 PUSH2 0x17c
0x56 JUMPI
---
0x4d: V18 = 0xf2fde38b
0x52: V19 = EQ 0xf2fde38b V11
0x53: V20 = 0x17c
0x56: JUMPI 0x17c V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x5b]
---
Predecessors: [0x0, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x57: JUMPDEST 
0x58: V21 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0x63]
---
Predecessors: [0xd]
Successors: [0x64, 0x68]
---
0x5c JUMPDEST
0x5d CALLVALUE
0x5e DUP1
0x5f ISZERO
0x60 PUSH2 0x68
0x63 JUMPI
---
0x5c: JUMPDEST 
0x5d: V22 = CALLVALUE
0x5f: V23 = ISZERO V22
0x60: V24 = 0x68
0x63: JUMPI 0x68 V23
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V22]
Exit stack: [V11, V22]

================================

Block 0x64
[0x64:0x67]
---
Predecessors: [0x5c]
Successors: []
---
0x64 PUSH1 0x0
0x66 DUP1
0x67 REVERT
---
0x64: V25 = 0x0
0x67: REVERT 0x0 0x0
---
Entry stack: [V11, V22]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V22]

================================

Block 0x68
[0x68:0x122]
---
Predecessors: [0x5c]
Successors: [0x1bf]
---
0x68 JUMPDEST
0x69 POP
0x6a PUSH2 0x123
0x6d PUSH1 0x4
0x6f DUP1
0x70 CALLDATASIZE
0x71 SUB
0x72 DUP2
0x73 ADD
0x74 SWAP1
0x75 DUP1
0x76 DUP1
0x77 CALLDATALOAD
0x78 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8d AND
0x8e SWAP1
0x8f PUSH1 0x20
0x91 ADD
0x92 SWAP1
0x93 SWAP3
0x94 SWAP2
0x95 SWAP1
0x96 DUP1
0x97 CALLDATALOAD
0x98 SWAP1
0x99 PUSH1 0x20
0x9b ADD
0x9c SWAP1
0x9d DUP3
0x9e ADD
0x9f DUP1
0xa0 CALLDATALOAD
0xa1 SWAP1
0xa2 PUSH1 0x20
0xa4 ADD
0xa5 SWAP1
0xa6 DUP1
0xa7 DUP1
0xa8 PUSH1 0x20
0xaa MUL
0xab PUSH1 0x20
0xad ADD
0xae PUSH1 0x40
0xb0 MLOAD
0xb1 SWAP1
0xb2 DUP2
0xb3 ADD
0xb4 PUSH1 0x40
0xb6 MSTORE
0xb7 DUP1
0xb8 SWAP4
0xb9 SWAP3
0xba SWAP2
0xbb SWAP1
0xbc DUP2
0xbd DUP2
0xbe MSTORE
0xbf PUSH1 0x20
0xc1 ADD
0xc2 DUP4
0xc3 DUP4
0xc4 PUSH1 0x20
0xc6 MUL
0xc7 DUP1
0xc8 DUP3
0xc9 DUP5
0xca CALLDATACOPY
0xcb DUP3
0xcc ADD
0xcd SWAP2
0xce POP
0xcf POP
0xd0 POP
0xd1 POP
0xd2 POP
0xd3 POP
0xd4 SWAP2
0xd5 SWAP3
0xd6 SWAP2
0xd7 SWAP3
0xd8 SWAP1
0xd9 DUP1
0xda CALLDATALOAD
0xdb SWAP1
0xdc PUSH1 0x20
0xde ADD
0xdf SWAP1
0xe0 DUP3
0xe1 ADD
0xe2 DUP1
0xe3 CALLDATALOAD
0xe4 SWAP1
0xe5 PUSH1 0x20
0xe7 ADD
0xe8 SWAP1
0xe9 DUP1
0xea DUP1
0xeb PUSH1 0x20
0xed MUL
0xee PUSH1 0x20
0xf0 ADD
0xf1 PUSH1 0x40
0xf3 MLOAD
0xf4 SWAP1
0xf5 DUP2
0xf6 ADD
0xf7 PUSH1 0x40
0xf9 MSTORE
0xfa DUP1
0xfb SWAP4
0xfc SWAP3
0xfd SWAP2
0xfe SWAP1
0xff DUP2
0x100 DUP2
0x101 MSTORE
0x102 PUSH1 0x20
0x104 ADD
0x105 DUP4
0x106 DUP4
0x107 PUSH1 0x20
0x109 MUL
0x10a DUP1
0x10b DUP3
0x10c DUP5
0x10d CALLDATACOPY
0x10e DUP3
0x10f ADD
0x110 SWAP2
0x111 POP
0x112 POP
0x113 POP
0x114 POP
0x115 POP
0x116 POP
0x117 SWAP2
0x118 SWAP3
0x119 SWAP2
0x11a SWAP3
0x11b SWAP1
0x11c POP
0x11d POP
0x11e POP
0x11f PUSH2 0x1bf
0x122 JUMP
---
0x68: JUMPDEST 
0x6a: V26 = 0x123
0x6d: V27 = 0x4
0x70: V28 = CALLDATASIZE
0x71: V29 = SUB V28 0x4
0x73: V30 = ADD 0x4 V29
0x77: V31 = CALLDATALOAD 0x4
0x78: V32 = 0xffffffffffffffffffffffffffffffffffffffff
0x8d: V33 = AND 0xffffffffffffffffffffffffffffffffffffffff V31
0x8f: V34 = 0x20
0x91: V35 = ADD 0x20 0x4
0x97: V36 = CALLDATALOAD 0x24
0x99: V37 = 0x20
0x9b: V38 = ADD 0x20 0x24
0x9e: V39 = ADD 0x4 V36
0xa0: V40 = CALLDATALOAD V39
0xa2: V41 = 0x20
0xa4: V42 = ADD 0x20 V39
0xa8: V43 = 0x20
0xaa: V44 = MUL 0x20 V40
0xab: V45 = 0x20
0xad: V46 = ADD 0x20 V44
0xae: V47 = 0x40
0xb0: V48 = M[0x40]
0xb3: V49 = ADD V48 V46
0xb4: V50 = 0x40
0xb6: M[0x40] = V49
0xbe: M[V48] = V40
0xbf: V51 = 0x20
0xc1: V52 = ADD 0x20 V48
0xc4: V53 = 0x20
0xc6: V54 = MUL 0x20 V40
0xca: CALLDATACOPY V52 V42 V54
0xcc: V55 = ADD V52 V54
0xda: V56 = CALLDATALOAD 0x44
0xdc: V57 = 0x20
0xde: V58 = ADD 0x20 0x44
0xe1: V59 = ADD 0x4 V56
0xe3: V60 = CALLDATALOAD V59
0xe5: V61 = 0x20
0xe7: V62 = ADD 0x20 V59
0xeb: V63 = 0x20
0xed: V64 = MUL 0x20 V60
0xee: V65 = 0x20
0xf0: V66 = ADD 0x20 V64
0xf1: V67 = 0x40
0xf3: V68 = M[0x40]
0xf6: V69 = ADD V68 V66
0xf7: V70 = 0x40
0xf9: M[0x40] = V69
0x101: M[V68] = V60
0x102: V71 = 0x20
0x104: V72 = ADD 0x20 V68
0x107: V73 = 0x20
0x109: V74 = MUL 0x20 V60
0x10d: CALLDATACOPY V72 V62 V74
0x10f: V75 = ADD V72 V74
0x11f: V76 = 0x1bf
0x122: JUMP 0x1bf
---
Entry stack: [V11, V22]
Stack pops: 1
Stack additions: [0x123, V33, V48, V68]
Exit stack: [V11, 0x123, V33, V48, V68]

================================

Block 0x123
[0x123:0x124]
---
Predecessors: [0x370]
Successors: []
---
0x123 JUMPDEST
0x124 STOP
---
0x123: JUMPDEST 
0x124: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x125
[0x125:0x12c]
---
Predecessors: [0x41]
Successors: [0x12d, 0x131]
---
0x125 JUMPDEST
0x126 CALLVALUE
0x127 DUP1
0x128 ISZERO
0x129 PUSH2 0x131
0x12c JUMPI
---
0x125: JUMPDEST 
0x126: V77 = CALLVALUE
0x128: V78 = ISZERO V77
0x129: V79 = 0x131
0x12c: JUMPI 0x131 V78
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V77]
Exit stack: [V11, V77]

================================

Block 0x12d
[0x12d:0x130]
---
Predecessors: [0x125]
Successors: []
---
0x12d PUSH1 0x0
0x12f DUP1
0x130 REVERT
---
0x12d: V80 = 0x0
0x130: REVERT 0x0 0x0
---
Entry stack: [V11, V77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V77]

================================

Block 0x131
[0x131:0x139]
---
Predecessors: [0x125]
Successors: [0x377]
---
0x131 JUMPDEST
0x132 POP
0x133 PUSH2 0x13a
0x136 PUSH2 0x377
0x139 JUMP
---
0x131: JUMPDEST 
0x133: V81 = 0x13a
0x136: V82 = 0x377
0x139: JUMP 0x377
---
Entry stack: [V11, V77]
Stack pops: 1
Stack additions: [0x13a]
Exit stack: [V11, 0x13a]

================================

Block 0x13a
[0x13a:0x17b]
---
Predecessors: [0x377]
Successors: []
---
0x13a JUMPDEST
0x13b PUSH1 0x40
0x13d MLOAD
0x13e DUP1
0x13f DUP3
0x140 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x155 AND
0x156 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16b AND
0x16c DUP2
0x16d MSTORE
0x16e PUSH1 0x20
0x170 ADD
0x171 SWAP2
0x172 POP
0x173 POP
0x174 PUSH1 0x40
0x176 MLOAD
0x177 DUP1
0x178 SWAP2
0x179 SUB
0x17a SWAP1
0x17b RETURN
---
0x13a: JUMPDEST 
0x13b: V83 = 0x40
0x13d: V84 = M[0x40]
0x140: V85 = 0xffffffffffffffffffffffffffffffffffffffff
0x155: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff V219
0x156: V87 = 0xffffffffffffffffffffffffffffffffffffffff
0x16b: V88 = AND 0xffffffffffffffffffffffffffffffffffffffff V86
0x16d: M[V84] = V88
0x16e: V89 = 0x20
0x170: V90 = ADD 0x20 V84
0x174: V91 = 0x40
0x176: V92 = M[0x40]
0x179: V93 = SUB V90 V92
0x17b: RETURN V92 V93
---
Entry stack: [V11, 0x13a, V219]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x13a]

================================

Block 0x17c
[0x17c:0x183]
---
Predecessors: [0x4c]
Successors: [0x184, 0x188]
---
0x17c JUMPDEST
0x17d CALLVALUE
0x17e DUP1
0x17f ISZERO
0x180 PUSH2 0x188
0x183 JUMPI
---
0x17c: JUMPDEST 
0x17d: V94 = CALLVALUE
0x17f: V95 = ISZERO V94
0x180: V96 = 0x188
0x183: JUMPI 0x188 V95
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V94]
Exit stack: [V11, V94]

================================

Block 0x184
[0x184:0x187]
---
Predecessors: [0x17c]
Successors: []
---
0x184 PUSH1 0x0
0x186 DUP1
0x187 REVERT
---
0x184: V97 = 0x0
0x187: REVERT 0x0 0x0
---
Entry stack: [V11, V94]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V94]

================================

Block 0x188
[0x188:0x1bc]
---
Predecessors: [0x17c]
Successors: [0x39c]
---
0x188 JUMPDEST
0x189 POP
0x18a PUSH2 0x1bd
0x18d PUSH1 0x4
0x18f DUP1
0x190 CALLDATASIZE
0x191 SUB
0x192 DUP2
0x193 ADD
0x194 SWAP1
0x195 DUP1
0x196 DUP1
0x197 CALLDATALOAD
0x198 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ad AND
0x1ae SWAP1
0x1af PUSH1 0x20
0x1b1 ADD
0x1b2 SWAP1
0x1b3 SWAP3
0x1b4 SWAP2
0x1b5 SWAP1
0x1b6 POP
0x1b7 POP
0x1b8 POP
0x1b9 PUSH2 0x39c
0x1bc JUMP
---
0x188: JUMPDEST 
0x18a: V98 = 0x1bd
0x18d: V99 = 0x4
0x190: V100 = CALLDATASIZE
0x191: V101 = SUB V100 0x4
0x193: V102 = ADD 0x4 V101
0x197: V103 = CALLDATALOAD 0x4
0x198: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ad: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x1af: V106 = 0x20
0x1b1: V107 = ADD 0x20 0x4
0x1b9: V108 = 0x39c
0x1bc: JUMP 0x39c
---
Entry stack: [V11, V94]
Stack pops: 1
Stack additions: [0x1bd, V105]
Exit stack: [V11, 0x1bd, V105]

================================

Block 0x1bd
[0x1bd:0x1be]
---
Predecessors: [0x433]
Successors: []
---
0x1bd JUMPDEST
0x1be STOP
---
0x1bd: JUMPDEST 
0x1be: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1bf
[0x1bf:0x218]
---
Predecessors: [0x68]
Successors: [0x219, 0x21d]
---
0x1bf JUMPDEST
0x1c0 PUSH1 0x0
0x1c2 DUP1
0x1c3 PUSH1 0x0
0x1c5 DUP1
0x1c6 SWAP1
0x1c7 SLOAD
0x1c8 SWAP1
0x1c9 PUSH2 0x100
0x1cc EXP
0x1cd SWAP1
0x1ce DIV
0x1cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e4 AND
0x1e5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1fa AND
0x1fb CALLER
0x1fc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x211 AND
0x212 EQ
0x213 ISZERO
0x214 ISZERO
0x215 PUSH2 0x21d
0x218 JUMPI
---
0x1bf: JUMPDEST 
0x1c0: V109 = 0x0
0x1c3: V110 = 0x0
0x1c7: V111 = S[0x0]
0x1c9: V112 = 0x100
0x1cc: V113 = EXP 0x100 0x0
0x1ce: V114 = DIV V111 0x1
0x1cf: V115 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e4: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x1e5: V117 = 0xffffffffffffffffffffffffffffffffffffffff
0x1fa: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0x1fb: V119 = CALLER
0x1fc: V120 = 0xffffffffffffffffffffffffffffffffffffffff
0x211: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x212: V122 = EQ V121 V118
0x213: V123 = ISZERO V122
0x214: V124 = ISZERO V123
0x215: V125 = 0x21d
0x218: JUMPI 0x21d V124
---
Entry stack: [V11, 0x123, V33, V48, V68]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0x123, V33, V48, V68, 0x0, 0x0]

================================

Block 0x219
[0x219:0x21c]
---
Predecessors: [0x1bf]
Successors: []
---
0x219 PUSH1 0x0
0x21b DUP1
0x21c REVERT
---
0x219: V126 = 0x0
0x21c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x123, V33, V48, V68, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x123, V33, V48, V68, 0x0, 0x0]

================================

Block 0x21d
[0x21d:0x228]
---
Predecessors: [0x1bf]
Successors: [0x229, 0x22d]
---
0x21d JUMPDEST
0x21e DUP3
0x21f MLOAD
0x220 DUP5
0x221 MLOAD
0x222 EQ
0x223 ISZERO
0x224 ISZERO
0x225 PUSH2 0x22d
0x228 JUMPI
---
0x21d: JUMPDEST 
0x21f: V127 = M[V68]
0x221: V128 = M[V48]
0x222: V129 = EQ V128 V127
0x223: V130 = ISZERO V129
0x224: V131 = ISZERO V130
0x225: V132 = 0x22d
0x228: JUMPI 0x22d V131
---
Entry stack: [V11, 0x123, V33, V48, V68, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x123, V33, V48, V68, 0x0, 0x0]

================================

Block 0x229
[0x229:0x22c]
---
Predecessors: [0x21d]
Successors: []
---
0x229 PUSH1 0x0
0x22b DUP1
0x22c REVERT
---
0x229: V133 = 0x0
0x22c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x123, V33, V48, V68, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x123, V33, V48, V68, 0x0, 0x0]

================================

Block 0x22d
[0x22d:0x264]
---
Predecessors: [0x21d]
Successors: [0x265, 0x269]
---
0x22d JUMPDEST
0x22e PUSH1 0x0
0x230 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x245 AND
0x246 DUP6
0x247 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x25c AND
0x25d EQ
0x25e ISZERO
0x25f ISZERO
0x260 ISZERO
0x261 PUSH2 0x269
0x264 JUMPI
---
0x22d: JUMPDEST 
0x22e: V134 = 0x0
0x230: V135 = 0xffffffffffffffffffffffffffffffffffffffff
0x245: V136 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x247: V137 = 0xffffffffffffffffffffffffffffffffffffffff
0x25c: V138 = AND 0xffffffffffffffffffffffffffffffffffffffff V33
0x25d: V139 = EQ V138 0x0
0x25e: V140 = ISZERO V139
0x25f: V141 = ISZERO V140
0x260: V142 = ISZERO V141
0x261: V143 = 0x269
0x264: JUMPI 0x269 V142
---
Entry stack: [V11, 0x123, V33, V48, V68, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x123, V33, V48, V68, 0x0, 0x0]

================================

Block 0x265
[0x265:0x268]
---
Predecessors: [0x22d]
Successors: []
---
0x265 PUSH1 0x0
0x267 DUP1
0x268 REVERT
---
0x265: V144 = 0x0
0x268: REVERT 0x0 0x0
---
Entry stack: [V11, 0x123, V33, V48, V68, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x123, V33, V48, V68, 0x0, 0x0]

================================

Block 0x269
[0x269:0x270]
---
Predecessors: [0x22d]
Successors: [0x271]
---
0x269 JUMPDEST
0x26a DUP5
0x26b SWAP2
0x26c POP
0x26d PUSH1 0x0
0x26f SWAP1
0x270 POP
---
0x269: JUMPDEST 
0x26d: V145 = 0x0
---
Entry stack: [V11, 0x123, V33, V48, V68, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S4, 0x0]
Exit stack: [V11, 0x123, V33, V48, V68, V33, 0x0]

================================

Block 0x271
[0x271:0x27a]
---
Predecessors: [0x269, 0x35f]
Successors: [0x27b, 0x370]
---
0x271 JUMPDEST
0x272 DUP4
0x273 MLOAD
0x274 DUP2
0x275 LT
0x276 ISZERO
0x277 PUSH2 0x370
0x27a JUMPI
---
0x271: JUMPDEST 
0x273: V146 = M[V48]
0x275: V147 = LT S0 V146
0x276: V148 = ISZERO V147
0x277: V149 = 0x370
0x27a: JUMPI 0x370 V148
---
Entry stack: [V11, 0x123, V33, V48, V68, V33, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x123, V33, V48, V68, V33, S0]

================================

Block 0x27b
[0x27b:0x2a2]
---
Predecessors: [0x271]
Successors: [0x2a3, 0x2a4]
---
0x27b DUP2
0x27c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x291 AND
0x292 PUSH4 0xa9059cbb
0x297 DUP6
0x298 DUP4
0x299 DUP2
0x29a MLOAD
0x29b DUP2
0x29c LT
0x29d ISZERO
0x29e ISZERO
0x29f PUSH2 0x2a4
0x2a2 JUMPI
---
0x27c: V150 = 0xffffffffffffffffffffffffffffffffffffffff
0x291: V151 = AND 0xffffffffffffffffffffffffffffffffffffffff V33
0x292: V152 = 0xa9059cbb
0x29a: V153 = M[V48]
0x29c: V154 = LT S0 V153
0x29d: V155 = ISZERO V154
0x29e: V156 = ISZERO V155
0x29f: V157 = 0x2a4
0x2a2: JUMPI 0x2a4 V156
---
Entry stack: [V11, 0x123, V33, V48, V68, V33, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V151, 0xa9059cbb, S3, S0]
Exit stack: [V11, 0x123, V33, V48, V68, V33, S0, V151, 0xa9059cbb, V48, S0]

================================

Block 0x2a3
[0x2a3:0x2a3]
---
Predecessors: [0x27b]
Successors: []
---
0x2a3 INVALID
---
0x2a3: INVALID 
---
Entry stack: [V11, 0x123, V33, V48, V68, V33, S4, V151, 0xa9059cbb, V48, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x123, V33, V48, V68, V33, S4, V151, 0xa9059cbb, V48, S0]

================================

Block 0x2a4
[0x2a4:0x2ba]
---
Predecessors: [0x27b]
Successors: [0x2bb, 0x2bc]
---
0x2a4 JUMPDEST
0x2a5 SWAP1
0x2a6 PUSH1 0x20
0x2a8 ADD
0x2a9 SWAP1
0x2aa PUSH1 0x20
0x2ac MUL
0x2ad ADD
0x2ae MLOAD
0x2af DUP6
0x2b0 DUP5
0x2b1 DUP2
0x2b2 MLOAD
0x2b3 DUP2
0x2b4 LT
0x2b5 ISZERO
0x2b6 ISZERO
0x2b7 PUSH2 0x2bc
0x2ba JUMPI
---
0x2a4: JUMPDEST 
0x2a6: V158 = 0x20
0x2a8: V159 = ADD 0x20 V48
0x2aa: V160 = 0x20
0x2ac: V161 = MUL 0x20 S0
0x2ad: V162 = ADD V161 V159
0x2ae: V163 = M[V162]
0x2b2: V164 = M[V68]
0x2b4: V165 = LT S4 V164
0x2b5: V166 = ISZERO V165
0x2b6: V167 = ISZERO V166
0x2b7: V168 = 0x2bc
0x2ba: JUMPI 0x2bc V167
---
Entry stack: [V11, 0x123, V33, V48, V68, V33, S4, V151, 0xa9059cbb, V48, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V163, S6, S4]
Exit stack: [V11, 0x123, V33, V48, V68, V33, S4, V151, 0xa9059cbb, V163, V68, S4]

================================

Block 0x2bb
[0x2bb:0x2bb]
---
Predecessors: [0x2a4]
Successors: []
---
0x2bb INVALID
---
0x2bb: INVALID 
---
Entry stack: [V11, 0x123, V33, V48, V68, V33, S5, V151, 0xa9059cbb, V163, V68, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x123, V33, V48, V68, V33, S5, V151, 0xa9059cbb, V163, V68, S0]

================================

Block 0x2bc
[0x2bc:0x346]
---
Predecessors: [0x2a4]
Successors: [0x347, 0x34b]
---
0x2bc JUMPDEST
0x2bd SWAP1
0x2be PUSH1 0x20
0x2c0 ADD
0x2c1 SWAP1
0x2c2 PUSH1 0x20
0x2c4 MUL
0x2c5 ADD
0x2c6 MLOAD
0x2c7 PUSH1 0x40
0x2c9 MLOAD
0x2ca DUP4
0x2cb PUSH4 0xffffffff
0x2d0 AND
0x2d1 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2ef MUL
0x2f0 DUP2
0x2f1 MSTORE
0x2f2 PUSH1 0x4
0x2f4 ADD
0x2f5 DUP1
0x2f6 DUP4
0x2f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x30c AND
0x30d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x322 AND
0x323 DUP2
0x324 MSTORE
0x325 PUSH1 0x20
0x327 ADD
0x328 DUP3
0x329 DUP2
0x32a MSTORE
0x32b PUSH1 0x20
0x32d ADD
0x32e SWAP3
0x32f POP
0x330 POP
0x331 POP
0x332 PUSH1 0x0
0x334 PUSH1 0x40
0x336 MLOAD
0x337 DUP1
0x338 DUP4
0x339 SUB
0x33a DUP2
0x33b PUSH1 0x0
0x33d DUP8
0x33e DUP1
0x33f EXTCODESIZE
0x340 ISZERO
0x341 DUP1
0x342 ISZERO
0x343 PUSH2 0x34b
0x346 JUMPI
---
0x2bc: JUMPDEST 
0x2be: V169 = 0x20
0x2c0: V170 = ADD 0x20 V68
0x2c2: V171 = 0x20
0x2c4: V172 = MUL 0x20 S0
0x2c5: V173 = ADD V172 V170
0x2c6: V174 = M[V173]
0x2c7: V175 = 0x40
0x2c9: V176 = M[0x40]
0x2cb: V177 = 0xffffffff
0x2d0: V178 = AND 0xffffffff 0xa9059cbb
0x2d1: V179 = 0x100000000000000000000000000000000000000000000000000000000
0x2ef: V180 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x2f1: M[V176] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x2f2: V181 = 0x4
0x2f4: V182 = ADD 0x4 V176
0x2f7: V183 = 0xffffffffffffffffffffffffffffffffffffffff
0x30c: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V163
0x30d: V185 = 0xffffffffffffffffffffffffffffffffffffffff
0x322: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff V184
0x324: M[V182] = V186
0x325: V187 = 0x20
0x327: V188 = ADD 0x20 V182
0x32a: M[V188] = V174
0x32b: V189 = 0x20
0x32d: V190 = ADD 0x20 V188
0x332: V191 = 0x0
0x334: V192 = 0x40
0x336: V193 = M[0x40]
0x339: V194 = SUB V190 V193
0x33b: V195 = 0x0
0x33f: V196 = EXTCODESIZE V151
0x340: V197 = ISZERO V196
0x342: V198 = ISZERO V197
0x343: V199 = 0x34b
0x346: JUMPI 0x34b V198
---
Entry stack: [V11, 0x123, V33, V48, V68, V33, S5, V151, 0xa9059cbb, V163, V68, S0]
Stack pops: 5
Stack additions: [S4, S3, V190, 0x0, V193, V194, V193, 0x0, S4, V197]
Exit stack: [V11, 0x123, V33, V48, V68, V33, S5, V151, 0xa9059cbb, V190, 0x0, V193, V194, V193, 0x0, V151, V197]

================================

Block 0x347
[0x347:0x34a]
---
Predecessors: [0x2bc]
Successors: []
---
0x347 PUSH1 0x0
0x349 DUP1
0x34a REVERT
---
0x347: V200 = 0x0
0x34a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x123, V33, V48, V68, V33, S10, V151, 0xa9059cbb, V190, 0x0, V193, V194, V193, 0x0, V151, V197]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x123, V33, V48, V68, V33, S10, V151, 0xa9059cbb, V190, 0x0, V193, V194, V193, 0x0, V151, V197]

================================

Block 0x34b
[0x34b:0x355]
---
Predecessors: [0x2bc]
Successors: [0x356, 0x35f]
---
0x34b JUMPDEST
0x34c POP
0x34d GAS
0x34e CALL
0x34f ISZERO
0x350 DUP1
0x351 ISZERO
0x352 PUSH2 0x35f
0x355 JUMPI
---
0x34b: JUMPDEST 
0x34d: V201 = GAS
0x34e: V202 = CALL V201 V151 0x0 V193 V194 V193 0x0
0x34f: V203 = ISZERO V202
0x351: V204 = ISZERO V203
0x352: V205 = 0x35f
0x355: JUMPI 0x35f V204
---
Entry stack: [V11, 0x123, V33, V48, V68, V33, S10, V151, 0xa9059cbb, V190, 0x0, V193, V194, V193, 0x0, V151, V197]
Stack pops: 7
Stack additions: [V203]
Exit stack: [V11, 0x123, V33, V48, V68, V33, S10, V151, 0xa9059cbb, V190, V203]

================================

Block 0x356
[0x356:0x35e]
---
Predecessors: [0x34b]
Successors: []
---
0x356 RETURNDATASIZE
0x357 PUSH1 0x0
0x359 DUP1
0x35a RETURNDATACOPY
0x35b RETURNDATASIZE
0x35c PUSH1 0x0
0x35e REVERT
---
0x356: V206 = RETURNDATASIZE
0x357: V207 = 0x0
0x35a: RETURNDATACOPY 0x0 0x0 V206
0x35b: V208 = RETURNDATASIZE
0x35c: V209 = 0x0
0x35e: REVERT 0x0 V208
---
Entry stack: [V11, 0x123, V33, V48, V68, V33, S4, V151, 0xa9059cbb, V190, V203]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x123, V33, V48, V68, V33, S4, V151, 0xa9059cbb, V190, V203]

================================

Block 0x35f
[0x35f:0x36f]
---
Predecessors: [0x34b]
Successors: [0x271]
---
0x35f JUMPDEST
0x360 POP
0x361 POP
0x362 POP
0x363 POP
0x364 DUP1
0x365 DUP1
0x366 PUSH1 0x1
0x368 ADD
0x369 SWAP2
0x36a POP
0x36b POP
0x36c PUSH2 0x271
0x36f JUMP
---
0x35f: JUMPDEST 
0x366: V210 = 0x1
0x368: V211 = ADD 0x1 S4
0x36c: V212 = 0x271
0x36f: JUMP 0x271
---
Entry stack: [V11, 0x123, V33, V48, V68, V33, S4, V151, 0xa9059cbb, V190, V203]
Stack pops: 5
Stack additions: [V211]
Exit stack: [V11, 0x123, V33, V48, V68, V33, V211]

================================

Block 0x370
[0x370:0x376]
---
Predecessors: [0x271]
Successors: [0x123]
---
0x370 JUMPDEST
0x371 POP
0x372 POP
0x373 POP
0x374 POP
0x375 POP
0x376 JUMP
---
0x370: JUMPDEST 
0x376: JUMP 0x123
---
Entry stack: [V11, 0x123, V33, V48, V68, V33, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V11]

================================

Block 0x377
[0x377:0x39b]
---
Predecessors: [0x131]
Successors: [0x13a]
---
0x377 JUMPDEST
0x378 PUSH1 0x0
0x37a DUP1
0x37b SWAP1
0x37c SLOAD
0x37d SWAP1
0x37e PUSH2 0x100
0x381 EXP
0x382 SWAP1
0x383 DIV
0x384 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x399 AND
0x39a DUP2
0x39b JUMP
---
0x377: JUMPDEST 
0x378: V213 = 0x0
0x37c: V214 = S[0x0]
0x37e: V215 = 0x100
0x381: V216 = EXP 0x100 0x0
0x383: V217 = DIV V214 0x1
0x384: V218 = 0xffffffffffffffffffffffffffffffffffffffff
0x399: V219 = AND 0xffffffffffffffffffffffffffffffffffffffff V217
0x39b: JUMP 0x13a
---
Entry stack: [V11, 0x13a]
Stack pops: 1
Stack additions: [S0, V219]
Exit stack: [V11, 0x13a, V219]

================================

Block 0x39c
[0x39c:0x3f2]
---
Predecessors: [0x188]
Successors: [0x3f3, 0x3f7]
---
0x39c JUMPDEST
0x39d PUSH1 0x0
0x39f DUP1
0x3a0 SWAP1
0x3a1 SLOAD
0x3a2 SWAP1
0x3a3 PUSH2 0x100
0x3a6 EXP
0x3a7 SWAP1
0x3a8 DIV
0x3a9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3be AND
0x3bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d4 AND
0x3d5 CALLER
0x3d6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3eb AND
0x3ec EQ
0x3ed ISZERO
0x3ee ISZERO
0x3ef PUSH2 0x3f7
0x3f2 JUMPI
---
0x39c: JUMPDEST 
0x39d: V220 = 0x0
0x3a1: V221 = S[0x0]
0x3a3: V222 = 0x100
0x3a6: V223 = EXP 0x100 0x0
0x3a8: V224 = DIV V221 0x1
0x3a9: V225 = 0xffffffffffffffffffffffffffffffffffffffff
0x3be: V226 = AND 0xffffffffffffffffffffffffffffffffffffffff V224
0x3bf: V227 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d4: V228 = AND 0xffffffffffffffffffffffffffffffffffffffff V226
0x3d5: V229 = CALLER
0x3d6: V230 = 0xffffffffffffffffffffffffffffffffffffffff
0x3eb: V231 = AND 0xffffffffffffffffffffffffffffffffffffffff V229
0x3ec: V232 = EQ V231 V228
0x3ed: V233 = ISZERO V232
0x3ee: V234 = ISZERO V233
0x3ef: V235 = 0x3f7
0x3f2: JUMPI 0x3f7 V234
---
Entry stack: [V11, 0x1bd, V105]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1bd, V105]

================================

Block 0x3f3
[0x3f3:0x3f6]
---
Predecessors: [0x39c]
Successors: []
---
0x3f3 PUSH1 0x0
0x3f5 DUP1
0x3f6 REVERT
---
0x3f3: V236 = 0x0
0x3f6: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1bd, V105]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1bd, V105]

================================

Block 0x3f7
[0x3f7:0x42e]
---
Predecessors: [0x39c]
Successors: [0x42f, 0x433]
---
0x3f7 JUMPDEST
0x3f8 PUSH1 0x0
0x3fa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x40f AND
0x410 DUP2
0x411 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x426 AND
0x427 EQ
0x428 ISZERO
0x429 ISZERO
0x42a ISZERO
0x42b PUSH2 0x433
0x42e JUMPI
---
0x3f7: JUMPDEST 
0x3f8: V237 = 0x0
0x3fa: V238 = 0xffffffffffffffffffffffffffffffffffffffff
0x40f: V239 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x411: V240 = 0xffffffffffffffffffffffffffffffffffffffff
0x426: V241 = AND 0xffffffffffffffffffffffffffffffffffffffff V105
0x427: V242 = EQ V241 0x0
0x428: V243 = ISZERO V242
0x429: V244 = ISZERO V243
0x42a: V245 = ISZERO V244
0x42b: V246 = 0x433
0x42e: JUMPI 0x433 V245
---
Entry stack: [V11, 0x1bd, V105]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x1bd, V105]

================================

Block 0x42f
[0x42f:0x432]
---
Predecessors: [0x3f7]
Successors: []
---
0x42f PUSH1 0x0
0x431 DUP1
0x432 REVERT
---
0x42f: V247 = 0x0
0x432: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1bd, V105]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1bd, V105]

================================

Block 0x433
[0x433:0x4f0]
---
Predecessors: [0x3f7]
Successors: [0x1bd]
---
0x433 JUMPDEST
0x434 DUP1
0x435 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x44a AND
0x44b PUSH1 0x0
0x44d DUP1
0x44e SWAP1
0x44f SLOAD
0x450 SWAP1
0x451 PUSH2 0x100
0x454 EXP
0x455 SWAP1
0x456 DIV
0x457 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x46c AND
0x46d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x482 AND
0x483 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x4a4 PUSH1 0x40
0x4a6 MLOAD
0x4a7 PUSH1 0x40
0x4a9 MLOAD
0x4aa DUP1
0x4ab SWAP2
0x4ac SUB
0x4ad SWAP1
0x4ae LOG3
0x4af DUP1
0x4b0 PUSH1 0x0
0x4b2 DUP1
0x4b3 PUSH2 0x100
0x4b6 EXP
0x4b7 DUP2
0x4b8 SLOAD
0x4b9 DUP2
0x4ba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4cf MUL
0x4d0 NOT
0x4d1 AND
0x4d2 SWAP1
0x4d3 DUP4
0x4d4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4e9 AND
0x4ea MUL
0x4eb OR
0x4ec SWAP1
0x4ed SSTORE
0x4ee POP
0x4ef POP
0x4f0 JUMP
---
0x433: JUMPDEST 
0x435: V248 = 0xffffffffffffffffffffffffffffffffffffffff
0x44a: V249 = AND 0xffffffffffffffffffffffffffffffffffffffff V105
0x44b: V250 = 0x0
0x44f: V251 = S[0x0]
0x451: V252 = 0x100
0x454: V253 = EXP 0x100 0x0
0x456: V254 = DIV V251 0x1
0x457: V255 = 0xffffffffffffffffffffffffffffffffffffffff
0x46c: V256 = AND 0xffffffffffffffffffffffffffffffffffffffff V254
0x46d: V257 = 0xffffffffffffffffffffffffffffffffffffffff
0x482: V258 = AND 0xffffffffffffffffffffffffffffffffffffffff V256
0x483: V259 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x4a4: V260 = 0x40
0x4a6: V261 = M[0x40]
0x4a7: V262 = 0x40
0x4a9: V263 = M[0x40]
0x4ac: V264 = SUB V261 V263
0x4ae: LOG V263 V264 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V258 V249
0x4b0: V265 = 0x0
0x4b3: V266 = 0x100
0x4b6: V267 = EXP 0x100 0x0
0x4b8: V268 = S[0x0]
0x4ba: V269 = 0xffffffffffffffffffffffffffffffffffffffff
0x4cf: V270 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x4d0: V271 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x4d1: V272 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V268
0x4d4: V273 = 0xffffffffffffffffffffffffffffffffffffffff
0x4e9: V274 = AND 0xffffffffffffffffffffffffffffffffffffffff V105
0x4ea: V275 = MUL V274 0x1
0x4eb: V276 = OR V275 V272
0x4ed: S[0x0] = V276
0x4f0: JUMP 0x1bd
---
Entry stack: [V11, 0x1bd, V105]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x4f1
[0x4f1:0x55d]
---
Predecessors: []
Successors: [0x55e]
---
0x4f1 STOP
0x4f2 LOG1
0x4f3 PUSH6 0x627a7a723058
0x4fa SHA3
0x4fb MISSING 0xf8
0x4fc MISSING 0xac
0x4fd MISSING 0xe2
0x4fe SMOD
0x4ff MISSING 0xdd
0x500 MISSING 0x4b
0x501 EQ
0x502 LOG2
0x503 MISSING 0x4e
0x504 PUSH7 0x68ff1998134a55
0x50c MISSING 0xfc
0x50d MISSING 0xf9
0x50e MISSING 0xc6
0x50f DUP4
0x510 SSTORE
0x511 MISSING 0xd4
0x512 MISSING 0xd0
0x513 MISSING 0xe9
0x514 MISSING 0xd9
0x515 PUSH24 0xc02281f2dc002960806040526004361061004c576000357c
0x52e ADD
0x52f STOP
0x530 STOP
0x531 STOP
0x532 STOP
0x533 STOP
0x534 STOP
0x535 STOP
0x536 STOP
0x537 STOP
0x538 STOP
0x539 STOP
0x53a STOP
0x53b STOP
0x53c STOP
0x53d STOP
0x53e STOP
0x53f STOP
0x540 STOP
0x541 STOP
0x542 STOP
0x543 STOP
0x544 STOP
0x545 STOP
0x546 STOP
0x547 STOP
0x548 STOP
0x549 STOP
0x54a STOP
0x54b SWAP1
0x54c DIV
0x54d PUSH4 0xffffffff
0x552 AND
0x553 DUP1
0x554 PUSH4 0x8da5cb5b
0x559 EQ
0x55a PUSH2 0x51
0x55d JUMPI
---
0x4f1: STOP 
0x4f2: LOG S0 S1 S2
0x4f3: V277 = 0x627a7a723058
0x4fa: V278 = SHA3 0x627a7a723058 S3
0x4fb: MISSING 0xf8
0x4fc: MISSING 0xac
0x4fd: MISSING 0xe2
0x4fe: V279 = SMOD S0 S1
0x4ff: MISSING 0xdd
0x500: MISSING 0x4b
0x501: V280 = EQ S0 S1
0x502: LOG V280 S2 S3 S4
0x503: MISSING 0x4e
0x504: V281 = 0x68ff1998134a55
0x50c: MISSING 0xfc
0x50d: MISSING 0xf9
0x50e: MISSING 0xc6
0x510: S[S3] = S0
0x511: MISSING 0xd4
0x512: MISSING 0xd0
0x513: MISSING 0xe9
0x514: MISSING 0xd9
0x515: V282 = 0xc02281f2dc002960806040526004361061004c576000357c
0x52e: V283 = ADD 0xc02281f2dc002960806040526004361061004c576000357c S0
0x52f: STOP 
0x530: STOP 
0x531: STOP 
0x532: STOP 
0x533: STOP 
0x534: STOP 
0x535: STOP 
0x536: STOP 
0x537: STOP 
0x538: STOP 
0x539: STOP 
0x53a: STOP 
0x53b: STOP 
0x53c: STOP 
0x53d: STOP 
0x53e: STOP 
0x53f: STOP 
0x540: STOP 
0x541: STOP 
0x542: STOP 
0x543: STOP 
0x544: STOP 
0x545: STOP 
0x546: STOP 
0x547: STOP 
0x548: STOP 
0x549: STOP 
0x54a: STOP 
0x54c: V284 = DIV S1 S0
0x54d: V285 = 0xffffffff
0x552: V286 = AND 0xffffffff V284
0x554: V287 = 0x8da5cb5b
0x559: V288 = EQ 0x8da5cb5b V286
0x55a: V289 = 0x51
0x55d: THROWI V288
---
Entry stack: []
Stack pops: 0
Stack additions: [V278, V279, 0x68ff1998134a55, S1, S2, S3, V283, V286]
Exit stack: []

================================

Block 0x55e
[0x55e:0x568]
---
Predecessors: [0x4f1]
Successors: [0x569]
---
0x55e DUP1
0x55f PUSH4 0xf2fde38b
0x564 EQ
0x565 PUSH2 0xa8
0x568 JUMPI
---
0x55f: V290 = 0xf2fde38b
0x564: V291 = EQ 0xf2fde38b V286
0x565: V292 = 0xa8
0x568: THROWI V291
---
Entry stack: [V286]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V286]

================================

Block 0x569
[0x569:0x575]
---
Predecessors: [0x55e]
Successors: [0x576]
---
0x569 JUMPDEST
0x56a PUSH1 0x0
0x56c DUP1
0x56d REVERT
0x56e JUMPDEST
0x56f CALLVALUE
0x570 DUP1
0x571 ISZERO
0x572 PUSH2 0x5d
0x575 JUMPI
---
0x569: JUMPDEST 
0x56a: V293 = 0x0
0x56d: REVERT 0x0 0x0
0x56e: JUMPDEST 
0x56f: V294 = CALLVALUE
0x571: V295 = ISZERO V294
0x572: V296 = 0x5d
0x575: THROWI V295
---
Entry stack: [V286]
Stack pops: 0
Stack additions: [V294]
Exit stack: []

================================

Block 0x576
[0x576:0x5cc]
---
Predecessors: [0x569]
Successors: [0x5cd]
---
0x576 PUSH1 0x0
0x578 DUP1
0x579 REVERT
0x57a JUMPDEST
0x57b POP
0x57c PUSH2 0x66
0x57f PUSH2 0xeb
0x582 JUMP
0x583 JUMPDEST
0x584 PUSH1 0x40
0x586 MLOAD
0x587 DUP1
0x588 DUP3
0x589 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x59e AND
0x59f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5b4 AND
0x5b5 DUP2
0x5b6 MSTORE
0x5b7 PUSH1 0x20
0x5b9 ADD
0x5ba SWAP2
0x5bb POP
0x5bc POP
0x5bd PUSH1 0x40
0x5bf MLOAD
0x5c0 DUP1
0x5c1 SWAP2
0x5c2 SUB
0x5c3 SWAP1
0x5c4 RETURN
0x5c5 JUMPDEST
0x5c6 CALLVALUE
0x5c7 DUP1
0x5c8 ISZERO
0x5c9 PUSH2 0xb4
0x5cc JUMPI
---
0x576: V297 = 0x0
0x579: REVERT 0x0 0x0
0x57a: JUMPDEST 
0x57c: V298 = 0x66
0x57f: V299 = 0xeb
0x582: THROW 
0x583: JUMPDEST 
0x584: V300 = 0x40
0x586: V301 = M[0x40]
0x589: V302 = 0xffffffffffffffffffffffffffffffffffffffff
0x59e: V303 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x59f: V304 = 0xffffffffffffffffffffffffffffffffffffffff
0x5b4: V305 = AND 0xffffffffffffffffffffffffffffffffffffffff V303
0x5b6: M[V301] = V305
0x5b7: V306 = 0x20
0x5b9: V307 = ADD 0x20 V301
0x5bd: V308 = 0x40
0x5bf: V309 = M[0x40]
0x5c2: V310 = SUB V307 V309
0x5c4: RETURN V309 V310
0x5c5: JUMPDEST 
0x5c6: V311 = CALLVALUE
0x5c8: V312 = ISZERO V311
0x5c9: V313 = 0xb4
0x5cc: THROWI V312
---
Entry stack: [V294]
Stack pops: 0
Stack additions: [0x66, V311]
Exit stack: []

================================

Block 0x5cd
[0x5cd:0x683]
---
Predecessors: [0x576]
Successors: [0x684]
---
0x5cd PUSH1 0x0
0x5cf DUP1
0x5d0 REVERT
0x5d1 JUMPDEST
0x5d2 POP
0x5d3 PUSH2 0xe9
0x5d6 PUSH1 0x4
0x5d8 DUP1
0x5d9 CALLDATASIZE
0x5da SUB
0x5db DUP2
0x5dc ADD
0x5dd SWAP1
0x5de DUP1
0x5df DUP1
0x5e0 CALLDATALOAD
0x5e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5f6 AND
0x5f7 SWAP1
0x5f8 PUSH1 0x20
0x5fa ADD
0x5fb SWAP1
0x5fc SWAP3
0x5fd SWAP2
0x5fe SWAP1
0x5ff POP
0x600 POP
0x601 POP
0x602 PUSH2 0x110
0x605 JUMP
0x606 JUMPDEST
0x607 STOP
0x608 JUMPDEST
0x609 PUSH1 0x0
0x60b DUP1
0x60c SWAP1
0x60d SLOAD
0x60e SWAP1
0x60f PUSH2 0x100
0x612 EXP
0x613 SWAP1
0x614 DIV
0x615 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x62a AND
0x62b DUP2
0x62c JUMP
0x62d JUMPDEST
0x62e PUSH1 0x0
0x630 DUP1
0x631 SWAP1
0x632 SLOAD
0x633 SWAP1
0x634 PUSH2 0x100
0x637 EXP
0x638 SWAP1
0x639 DIV
0x63a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x64f AND
0x650 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x665 AND
0x666 CALLER
0x667 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x67c AND
0x67d EQ
0x67e ISZERO
0x67f ISZERO
0x680 PUSH2 0x16b
0x683 JUMPI
---
0x5cd: V314 = 0x0
0x5d0: REVERT 0x0 0x0
0x5d1: JUMPDEST 
0x5d3: V315 = 0xe9
0x5d6: V316 = 0x4
0x5d9: V317 = CALLDATASIZE
0x5da: V318 = SUB V317 0x4
0x5dc: V319 = ADD 0x4 V318
0x5e0: V320 = CALLDATALOAD 0x4
0x5e1: V321 = 0xffffffffffffffffffffffffffffffffffffffff
0x5f6: V322 = AND 0xffffffffffffffffffffffffffffffffffffffff V320
0x5f8: V323 = 0x20
0x5fa: V324 = ADD 0x20 0x4
0x602: V325 = 0x110
0x605: THROW 
0x606: JUMPDEST 
0x607: STOP 
0x608: JUMPDEST 
0x609: V326 = 0x0
0x60d: V327 = S[0x0]
0x60f: V328 = 0x100
0x612: V329 = EXP 0x100 0x0
0x614: V330 = DIV V327 0x1
0x615: V331 = 0xffffffffffffffffffffffffffffffffffffffff
0x62a: V332 = AND 0xffffffffffffffffffffffffffffffffffffffff V330
0x62c: JUMP S0
0x62d: JUMPDEST 
0x62e: V333 = 0x0
0x632: V334 = S[0x0]
0x634: V335 = 0x100
0x637: V336 = EXP 0x100 0x0
0x639: V337 = DIV V334 0x1
0x63a: V338 = 0xffffffffffffffffffffffffffffffffffffffff
0x64f: V339 = AND 0xffffffffffffffffffffffffffffffffffffffff V337
0x650: V340 = 0xffffffffffffffffffffffffffffffffffffffff
0x665: V341 = AND 0xffffffffffffffffffffffffffffffffffffffff V339
0x666: V342 = CALLER
0x667: V343 = 0xffffffffffffffffffffffffffffffffffffffff
0x67c: V344 = AND 0xffffffffffffffffffffffffffffffffffffffff V342
0x67d: V345 = EQ V344 V341
0x67e: V346 = ISZERO V345
0x67f: V347 = ISZERO V346
0x680: V348 = 0x16b
0x683: THROWI V347
---
Entry stack: [V311]
Stack pops: 0
Stack additions: [V322, 0xe9, V332, S0]
Exit stack: []

================================

Block 0x684
[0x684:0x6bf]
---
Predecessors: [0x5cd]
Successors: [0x6c0]
---
0x684 PUSH1 0x0
0x686 DUP1
0x687 REVERT
0x688 JUMPDEST
0x689 PUSH1 0x0
0x68b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a0 AND
0x6a1 DUP2
0x6a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6b7 AND
0x6b8 EQ
0x6b9 ISZERO
0x6ba ISZERO
0x6bb ISZERO
0x6bc PUSH2 0x1a7
0x6bf JUMPI
---
0x684: V349 = 0x0
0x687: REVERT 0x0 0x0
0x688: JUMPDEST 
0x689: V350 = 0x0
0x68b: V351 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a0: V352 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x6a2: V353 = 0xffffffffffffffffffffffffffffffffffffffff
0x6b7: V354 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x6b8: V355 = EQ V354 0x0
0x6b9: V356 = ISZERO V355
0x6ba: V357 = ISZERO V356
0x6bb: V358 = ISZERO V357
0x6bc: V359 = 0x1a7
0x6bf: THROWI V358
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x6c0
[0x6c0:0x7b6]
---
Predecessors: [0x684]
Successors: []
---
0x6c0 PUSH1 0x0
0x6c2 DUP1
0x6c3 REVERT
0x6c4 JUMPDEST
0x6c5 DUP1
0x6c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6db AND
0x6dc PUSH1 0x0
0x6de DUP1
0x6df SWAP1
0x6e0 SLOAD
0x6e1 SWAP1
0x6e2 PUSH2 0x100
0x6e5 EXP
0x6e6 SWAP1
0x6e7 DIV
0x6e8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6fd AND
0x6fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x713 AND
0x714 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x735 PUSH1 0x40
0x737 MLOAD
0x738 PUSH1 0x40
0x73a MLOAD
0x73b DUP1
0x73c SWAP2
0x73d SUB
0x73e SWAP1
0x73f LOG3
0x740 DUP1
0x741 PUSH1 0x0
0x743 DUP1
0x744 PUSH2 0x100
0x747 EXP
0x748 DUP2
0x749 SLOAD
0x74a DUP2
0x74b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x760 MUL
0x761 NOT
0x762 AND
0x763 SWAP1
0x764 DUP4
0x765 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x77a AND
0x77b MUL
0x77c OR
0x77d SWAP1
0x77e SSTORE
0x77f POP
0x780 POP
0x781 JUMP
0x782 STOP
0x783 LOG1
0x784 PUSH6 0x627a7a723058
0x78b SHA3
0x78c GT
0x78d JUMP
0x78e CALL
0x78f DUP5
0x790 SAR
0x791 MISSING 0xf
0x792 SELFDESTRUCT
0x793 MISSING 0xce
0x794 MISSING 0x5e
0x795 INVALID
0x796 LOG4
0x797 MISSING 0xe9
0x798 SHL
0x799 MISSING 0xab
0x79a LOG1
0x79b DUP11
0x79c PUSH26 0xb421499cfc34ccb6c97ff21336ca8c0029
---
0x6c0: V360 = 0x0
0x6c3: REVERT 0x0 0x0
0x6c4: JUMPDEST 
0x6c6: V361 = 0xffffffffffffffffffffffffffffffffffffffff
0x6db: V362 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x6dc: V363 = 0x0
0x6e0: V364 = S[0x0]
0x6e2: V365 = 0x100
0x6e5: V366 = EXP 0x100 0x0
0x6e7: V367 = DIV V364 0x1
0x6e8: V368 = 0xffffffffffffffffffffffffffffffffffffffff
0x6fd: V369 = AND 0xffffffffffffffffffffffffffffffffffffffff V367
0x6fe: V370 = 0xffffffffffffffffffffffffffffffffffffffff
0x713: V371 = AND 0xffffffffffffffffffffffffffffffffffffffff V369
0x714: V372 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x735: V373 = 0x40
0x737: V374 = M[0x40]
0x738: V375 = 0x40
0x73a: V376 = M[0x40]
0x73d: V377 = SUB V374 V376
0x73f: LOG V376 V377 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V371 V362
0x741: V378 = 0x0
0x744: V379 = 0x100
0x747: V380 = EXP 0x100 0x0
0x749: V381 = S[0x0]
0x74b: V382 = 0xffffffffffffffffffffffffffffffffffffffff
0x760: V383 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x761: V384 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x762: V385 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V381
0x765: V386 = 0xffffffffffffffffffffffffffffffffffffffff
0x77a: V387 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x77b: V388 = MUL V387 0x1
0x77c: V389 = OR V388 V385
0x77e: S[0x0] = V389
0x781: JUMP S1
0x782: STOP 
0x783: LOG S0 S1 S2
0x784: V390 = 0x627a7a723058
0x78b: V391 = SHA3 0x627a7a723058 S3
0x78c: V392 = GT V391 S4
0x78d: JUMP V392
0x78e: V393 = CALL S0 S1 S2 S3 S4 S5 S6
0x790: V394 = SAR S10 V393
0x791: MISSING 0xf
0x792: SELFDESTRUCT S0
0x793: MISSING 0xce
0x794: MISSING 0x5e
0x795: INVALID 
0x796: LOG S0 S1 S2 S3 S4 S5
0x797: MISSING 0xe9
0x798: V395 = SHL S0 S1
0x799: MISSING 0xab
0x79a: LOG S0 S1 S2
0x79c: V396 = 0xb421499cfc34ccb6c97ff21336ca8c0029
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [V394, S7, S8, S9, S10, V395, 0xb421499cfc34ccb6c97ff21336ca8c0029, S13, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13]
Exit stack: []

================================

Function 0:
Public function signature: 0x72a503be
Entry block: 0x5c
Exit block: 0x356
Body: 0x5c, 0x64, 0x68, 0x123, 0x1bf, 0x219, 0x21d, 0x229, 0x22d, 0x265, 0x269, 0x271, 0x27b, 0x2a3, 0x2a4, 0x2bb, 0x2bc, 0x347, 0x34b, 0x356, 0x35f, 0x370

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0x125
Exit block: 0x13a
Body: 0x125, 0x12d, 0x131, 0x13a, 0x377

Function 2:
Public function signature: 0xf2fde38b
Entry block: 0x17c
Exit block: 0x1bd
Body: 0x17c, 0x184, 0x188, 0x1bd, 0x39c, 0x3f3, 0x3f7, 0x42f, 0x433

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

