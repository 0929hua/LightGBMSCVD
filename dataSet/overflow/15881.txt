Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x51]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x8da5cb5b
0x3c EQ
0x3d PUSH2 0x51
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x8da5cb5b
0x3c: V13 = EQ 0x8da5cb5b V11
0x3d: V14 = 0x51
0x40: JUMPI 0x51 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xa6]
---
0x41 DUP1
0x42 PUSH4 0xf2fde38b
0x47 EQ
0x48 PUSH2 0xa6
0x4b JUMPI
---
0x42: V15 = 0xf2fde38b
0x47: V16 = EQ 0xf2fde38b V11
0x48: V17 = 0xa6
0x4b: JUMPI 0xa6 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x50]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d PUSH1 0x0
0x4f DUP1
0x50 REVERT
---
0x4c: JUMPDEST 
0x4d: V18 = 0x0
0x50: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x51
[0x51:0x57]
---
Predecessors: [0xd]
Successors: [0x58, 0x5c]
---
0x51 JUMPDEST
0x52 CALLVALUE
0x53 ISZERO
0x54 PUSH2 0x5c
0x57 JUMPI
---
0x51: JUMPDEST 
0x52: V19 = CALLVALUE
0x53: V20 = ISZERO V19
0x54: V21 = 0x5c
0x57: JUMPI 0x5c V20
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x58
[0x58:0x5b]
---
Predecessors: [0x51]
Successors: []
---
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x58: V22 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0x63]
---
Predecessors: [0x51]
Successors: [0xdf]
---
0x5c JUMPDEST
0x5d PUSH2 0x64
0x60 PUSH2 0xdf
0x63 JUMP
---
0x5c: JUMPDEST 
0x5d: V23 = 0x64
0x60: V24 = 0xdf
0x63: JUMP 0xdf
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x64]
Exit stack: [V11, 0x64]

================================

Block 0x64
[0x64:0xa5]
---
Predecessors: [0xdf]
Successors: []
---
0x64 JUMPDEST
0x65 PUSH1 0x40
0x67 MLOAD
0x68 DUP1
0x69 DUP3
0x6a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7f AND
0x80 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x95 AND
0x96 DUP2
0x97 MSTORE
0x98 PUSH1 0x20
0x9a ADD
0x9b SWAP2
0x9c POP
0x9d POP
0x9e PUSH1 0x40
0xa0 MLOAD
0xa1 DUP1
0xa2 SWAP2
0xa3 SUB
0xa4 SWAP1
0xa5 RETURN
---
0x64: JUMPDEST 
0x65: V25 = 0x40
0x67: V26 = M[0x40]
0x6a: V27 = 0xffffffffffffffffffffffffffffffffffffffff
0x7f: V28 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0x80: V29 = 0xffffffffffffffffffffffffffffffffffffffff
0x95: V30 = AND 0xffffffffffffffffffffffffffffffffffffffff V28
0x97: M[V26] = V30
0x98: V31 = 0x20
0x9a: V32 = ADD 0x20 V26
0x9e: V33 = 0x40
0xa0: V34 = M[0x40]
0xa3: V35 = SUB V32 V34
0xa5: RETURN V34 V35
---
Entry stack: [V11, 0x64, V54]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x64]

================================

Block 0xa6
[0xa6:0xac]
---
Predecessors: [0x41]
Successors: [0xad, 0xb1]
---
0xa6 JUMPDEST
0xa7 CALLVALUE
0xa8 ISZERO
0xa9 PUSH2 0xb1
0xac JUMPI
---
0xa6: JUMPDEST 
0xa7: V36 = CALLVALUE
0xa8: V37 = ISZERO V36
0xa9: V38 = 0xb1
0xac: JUMPI 0xb1 V37
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xad
[0xad:0xb0]
---
Predecessors: [0xa6]
Successors: []
---
0xad PUSH1 0x0
0xaf DUP1
0xb0 REVERT
---
0xad: V39 = 0x0
0xb0: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb1
[0xb1:0xdc]
---
Predecessors: [0xa6]
Successors: [0x104]
---
0xb1 JUMPDEST
0xb2 PUSH2 0xdd
0xb5 PUSH1 0x4
0xb7 DUP1
0xb8 DUP1
0xb9 CALLDATALOAD
0xba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcf AND
0xd0 SWAP1
0xd1 PUSH1 0x20
0xd3 ADD
0xd4 SWAP1
0xd5 SWAP2
0xd6 SWAP1
0xd7 POP
0xd8 POP
0xd9 PUSH2 0x104
0xdc JUMP
---
0xb1: JUMPDEST 
0xb2: V40 = 0xdd
0xb5: V41 = 0x4
0xb9: V42 = CALLDATALOAD 0x4
0xba: V43 = 0xffffffffffffffffffffffffffffffffffffffff
0xcf: V44 = AND 0xffffffffffffffffffffffffffffffffffffffff V42
0xd1: V45 = 0x20
0xd3: V46 = ADD 0x20 0x4
0xd9: V47 = 0x104
0xdc: JUMP 0x104
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xdd, V44]
Exit stack: [V11, 0xdd, V44]

================================

Block 0xdd
[0xdd:0xde]
---
Predecessors: [0x19b]
Successors: []
---
0xdd JUMPDEST
0xde STOP
---
0xdd: JUMPDEST 
0xde: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xdf
[0xdf:0x103]
---
Predecessors: [0x5c]
Successors: [0x64]
---
0xdf JUMPDEST
0xe0 PUSH1 0x0
0xe2 DUP1
0xe3 SWAP1
0xe4 SLOAD
0xe5 SWAP1
0xe6 PUSH2 0x100
0xe9 EXP
0xea SWAP1
0xeb DIV
0xec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x101 AND
0x102 DUP2
0x103 JUMP
---
0xdf: JUMPDEST 
0xe0: V48 = 0x0
0xe4: V49 = S[0x0]
0xe6: V50 = 0x100
0xe9: V51 = EXP 0x100 0x0
0xeb: V52 = DIV V49 0x1
0xec: V53 = 0xffffffffffffffffffffffffffffffffffffffff
0x101: V54 = AND 0xffffffffffffffffffffffffffffffffffffffff V52
0x103: JUMP 0x64
---
Entry stack: [V11, 0x64]
Stack pops: 1
Stack additions: [S0, V54]
Exit stack: [V11, 0x64, V54]

================================

Block 0x104
[0x104:0x15a]
---
Predecessors: [0xb1]
Successors: [0x15b, 0x15f]
---
0x104 JUMPDEST
0x105 PUSH1 0x0
0x107 DUP1
0x108 SWAP1
0x109 SLOAD
0x10a SWAP1
0x10b PUSH2 0x100
0x10e EXP
0x10f SWAP1
0x110 DIV
0x111 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x126 AND
0x127 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13c AND
0x13d CALLER
0x13e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x153 AND
0x154 EQ
0x155 ISZERO
0x156 ISZERO
0x157 PUSH2 0x15f
0x15a JUMPI
---
0x104: JUMPDEST 
0x105: V55 = 0x0
0x109: V56 = S[0x0]
0x10b: V57 = 0x100
0x10e: V58 = EXP 0x100 0x0
0x110: V59 = DIV V56 0x1
0x111: V60 = 0xffffffffffffffffffffffffffffffffffffffff
0x126: V61 = AND 0xffffffffffffffffffffffffffffffffffffffff V59
0x127: V62 = 0xffffffffffffffffffffffffffffffffffffffff
0x13c: V63 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0x13d: V64 = CALLER
0x13e: V65 = 0xffffffffffffffffffffffffffffffffffffffff
0x153: V66 = AND 0xffffffffffffffffffffffffffffffffffffffff V64
0x154: V67 = EQ V66 V63
0x155: V68 = ISZERO V67
0x156: V69 = ISZERO V68
0x157: V70 = 0x15f
0x15a: JUMPI 0x15f V69
---
Entry stack: [V11, 0xdd, V44]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdd, V44]

================================

Block 0x15b
[0x15b:0x15e]
---
Predecessors: [0x104]
Successors: []
---
0x15b PUSH1 0x0
0x15d DUP1
0x15e REVERT
---
0x15b: V71 = 0x0
0x15e: REVERT 0x0 0x0
---
Entry stack: [V11, 0xdd, V44]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdd, V44]

================================

Block 0x15f
[0x15f:0x196]
---
Predecessors: [0x104]
Successors: [0x197, 0x19b]
---
0x15f JUMPDEST
0x160 PUSH1 0x0
0x162 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x177 AND
0x178 DUP2
0x179 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18e AND
0x18f EQ
0x190 ISZERO
0x191 ISZERO
0x192 ISZERO
0x193 PUSH2 0x19b
0x196 JUMPI
---
0x15f: JUMPDEST 
0x160: V72 = 0x0
0x162: V73 = 0xffffffffffffffffffffffffffffffffffffffff
0x177: V74 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x179: V75 = 0xffffffffffffffffffffffffffffffffffffffff
0x18e: V76 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0x18f: V77 = EQ V76 0x0
0x190: V78 = ISZERO V77
0x191: V79 = ISZERO V78
0x192: V80 = ISZERO V79
0x193: V81 = 0x19b
0x196: JUMPI 0x19b V80
---
Entry stack: [V11, 0xdd, V44]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xdd, V44]

================================

Block 0x197
[0x197:0x19a]
---
Predecessors: [0x15f]
Successors: []
---
0x197 PUSH1 0x0
0x199 DUP1
0x19a REVERT
---
0x197: V82 = 0x0
0x19a: REVERT 0x0 0x0
---
Entry stack: [V11, 0xdd, V44]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdd, V44]

================================

Block 0x19b
[0x19b:0x258]
---
Predecessors: [0x15f]
Successors: [0xdd]
---
0x19b JUMPDEST
0x19c DUP1
0x19d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b2 AND
0x1b3 PUSH1 0x0
0x1b5 DUP1
0x1b6 SWAP1
0x1b7 SLOAD
0x1b8 SWAP1
0x1b9 PUSH2 0x100
0x1bc EXP
0x1bd SWAP1
0x1be DIV
0x1bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d4 AND
0x1d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ea AND
0x1eb PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x20c PUSH1 0x40
0x20e MLOAD
0x20f PUSH1 0x40
0x211 MLOAD
0x212 DUP1
0x213 SWAP2
0x214 SUB
0x215 SWAP1
0x216 LOG3
0x217 DUP1
0x218 PUSH1 0x0
0x21a DUP1
0x21b PUSH2 0x100
0x21e EXP
0x21f DUP2
0x220 SLOAD
0x221 DUP2
0x222 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x237 MUL
0x238 NOT
0x239 AND
0x23a SWAP1
0x23b DUP4
0x23c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x251 AND
0x252 MUL
0x253 OR
0x254 SWAP1
0x255 SSTORE
0x256 POP
0x257 POP
0x258 JUMP
---
0x19b: JUMPDEST 
0x19d: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b2: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0x1b3: V85 = 0x0
0x1b7: V86 = S[0x0]
0x1b9: V87 = 0x100
0x1bc: V88 = EXP 0x100 0x0
0x1be: V89 = DIV V86 0x1
0x1bf: V90 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d4: V91 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0x1d5: V92 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ea: V93 = AND 0xffffffffffffffffffffffffffffffffffffffff V91
0x1eb: V94 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x20c: V95 = 0x40
0x20e: V96 = M[0x40]
0x20f: V97 = 0x40
0x211: V98 = M[0x40]
0x214: V99 = SUB V96 V98
0x216: LOG V98 V99 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V93 V84
0x218: V100 = 0x0
0x21b: V101 = 0x100
0x21e: V102 = EXP 0x100 0x0
0x220: V103 = S[0x0]
0x222: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x237: V105 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x238: V106 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x239: V107 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V103
0x23c: V108 = 0xffffffffffffffffffffffffffffffffffffffff
0x251: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0x252: V110 = MUL V109 0x1
0x253: V111 = OR V110 V107
0x255: S[0x0] = V111
0x258: JUMP 0xdd
---
Entry stack: [V11, 0xdd, V44]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x259
[0x259:0x2c5]
---
Predecessors: []
Successors: [0x2c6]
---
0x259 STOP
0x25a LOG1
0x25b PUSH6 0x627a7a723058
0x262 SHA3
0x263 DUP7
0x264 MISSING 0x4f
0x265 DIV
0x266 MISSING 0xfb
0x267 MISSING 0x1f
0x268 SWAP14
0x269 MISSING 0xf8
0x26a CODECOPY
0x26b DUP15
0x26c COINBASE
0x26d SHA3
0x26e MISSING 0x2c
0x26f MISSING 0x24
0x270 MISSING 0xd1
0x271 XOR
0x272 MSTORE
0x273 MISSING 0xf7
0x274 PUSH32 0xcf41afad372d252cc3d45a6837ee002960606040526004361061007857600035
0x295 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2b3 SWAP1
0x2b4 DIV
0x2b5 PUSH4 0xffffffff
0x2ba AND
0x2bb DUP1
0x2bc PUSH4 0x3af32abf
0x2c1 EQ
0x2c2 PUSH2 0x7d
0x2c5 JUMPI
---
0x259: STOP 
0x25a: LOG S0 S1 S2
0x25b: V112 = 0x627a7a723058
0x262: V113 = SHA3 0x627a7a723058 S3
0x264: MISSING 0x4f
0x265: V114 = DIV S0 S1
0x266: MISSING 0xfb
0x267: MISSING 0x1f
0x269: MISSING 0xf8
0x26a: CODECOPY S0 S1 S2
0x26c: V115 = COINBASE
0x26d: V116 = SHA3 V115 S17
0x26e: MISSING 0x2c
0x26f: MISSING 0x24
0x270: MISSING 0xd1
0x271: V117 = XOR S0 S1
0x272: M[V117] = S2
0x273: MISSING 0xf7
0x274: V118 = 0xcf41afad372d252cc3d45a6837ee002960606040526004361061007857600035
0x295: V119 = 0x100000000000000000000000000000000000000000000000000000000
0x2b4: V120 = DIV 0xcf41afad372d252cc3d45a6837ee002960606040526004361061007857600035 0x100000000000000000000000000000000000000000000000000000000
0x2b5: V121 = 0xffffffff
0x2ba: V122 = AND 0xffffffff 0xcf41afad
0x2bc: V123 = 0x3af32abf
0x2c1: V124 = EQ 0x3af32abf 0xcf41afad
0x2c2: V125 = 0x7d
0x2c5: THROWI 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: [S9, V113, S4, S5, S6, S7, S8, S9, V114, S14, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S0, V116, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, 0xcf41afad]
Exit stack: []

================================

Block 0x2c6
[0x2c6:0x2d0]
---
Predecessors: [0x259]
Successors: [0x2d1]
---
0x2c6 DUP1
0x2c7 PUSH4 0x78bb5164
0x2cc EQ
0x2cd PUSH2 0xce
0x2d0 JUMPI
---
0x2c7: V126 = 0x78bb5164
0x2cc: V127 = EQ 0x78bb5164 0xcf41afad
0x2cd: V128 = 0xce
0x2d0: THROWI 0x0
---
Entry stack: [0xcf41afad]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0xcf41afad]

================================

Block 0x2d1
[0x2d1:0x2db]
---
Predecessors: [0x2c6]
Successors: [0x2dc]
---
0x2d1 DUP1
0x2d2 PUSH4 0x8da5cb5b
0x2d7 EQ
0x2d8 PUSH2 0xf7
0x2db JUMPI
---
0x2d2: V129 = 0x8da5cb5b
0x2d7: V130 = EQ 0x8da5cb5b 0xcf41afad
0x2d8: V131 = 0xf7
0x2db: THROWI 0x0
---
Entry stack: [0xcf41afad]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0xcf41afad]

================================

Block 0x2dc
[0x2dc:0x2e6]
---
Predecessors: [0x2d1]
Successors: [0x2e7]
---
0x2dc DUP1
0x2dd PUSH4 0xa75fe8e1
0x2e2 EQ
0x2e3 PUSH2 0x14c
0x2e6 JUMPI
---
0x2dd: V132 = 0xa75fe8e1
0x2e2: V133 = EQ 0xa75fe8e1 0xcf41afad
0x2e3: V134 = 0x14c
0x2e6: THROWI 0x0
---
Entry stack: [0xcf41afad]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0xcf41afad]

================================

Block 0x2e7
[0x2e7:0x2f1]
---
Predecessors: [0x2dc]
Successors: [0x2f2]
---
0x2e7 DUP1
0x2e8 PUSH4 0xefeb5f1f
0x2ed EQ
0x2ee PUSH2 0x185
0x2f1 JUMPI
---
0x2e8: V135 = 0xefeb5f1f
0x2ed: V136 = EQ 0xefeb5f1f 0xcf41afad
0x2ee: V137 = 0x185
0x2f1: THROWI 0x0
---
Entry stack: [0xcf41afad]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0xcf41afad]

================================

Block 0x2f2
[0x2f2:0x2fc]
---
Predecessors: [0x2e7]
Successors: [0x2fd]
---
0x2f2 DUP1
0x2f3 PUSH4 0xf2fde38b
0x2f8 EQ
0x2f9 PUSH2 0x1be
0x2fc JUMPI
---
0x2f3: V138 = 0xf2fde38b
0x2f8: V139 = EQ 0xf2fde38b 0xcf41afad
0x2f9: V140 = 0x1be
0x2fc: THROWI 0x0
---
Entry stack: [0xcf41afad]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0xcf41afad]

================================

Block 0x2fd
[0x2fd:0x308]
---
Predecessors: [0x2f2]
Successors: [0x309]
---
0x2fd JUMPDEST
0x2fe PUSH1 0x0
0x300 DUP1
0x301 REVERT
0x302 JUMPDEST
0x303 CALLVALUE
0x304 ISZERO
0x305 PUSH2 0x88
0x308 JUMPI
---
0x2fd: JUMPDEST 
0x2fe: V141 = 0x0
0x301: REVERT 0x0 0x0
0x302: JUMPDEST 
0x303: V142 = CALLVALUE
0x304: V143 = ISZERO V142
0x305: V144 = 0x88
0x308: THROWI V143
---
Entry stack: [0xcf41afad]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x309
[0x309:0x359]
---
Predecessors: [0x2fd]
Successors: [0x35a]
---
0x309 PUSH1 0x0
0x30b DUP1
0x30c REVERT
0x30d JUMPDEST
0x30e PUSH2 0xb4
0x311 PUSH1 0x4
0x313 DUP1
0x314 DUP1
0x315 CALLDATALOAD
0x316 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x32b AND
0x32c SWAP1
0x32d PUSH1 0x20
0x32f ADD
0x330 SWAP1
0x331 SWAP2
0x332 SWAP1
0x333 POP
0x334 POP
0x335 PUSH2 0x1f7
0x338 JUMP
0x339 JUMPDEST
0x33a PUSH1 0x40
0x33c MLOAD
0x33d DUP1
0x33e DUP3
0x33f ISZERO
0x340 ISZERO
0x341 ISZERO
0x342 ISZERO
0x343 DUP2
0x344 MSTORE
0x345 PUSH1 0x20
0x347 ADD
0x348 SWAP2
0x349 POP
0x34a POP
0x34b PUSH1 0x40
0x34d MLOAD
0x34e DUP1
0x34f SWAP2
0x350 SUB
0x351 SWAP1
0x352 RETURN
0x353 JUMPDEST
0x354 CALLVALUE
0x355 ISZERO
0x356 PUSH2 0xd9
0x359 JUMPI
---
0x309: V145 = 0x0
0x30c: REVERT 0x0 0x0
0x30d: JUMPDEST 
0x30e: V146 = 0xb4
0x311: V147 = 0x4
0x315: V148 = CALLDATALOAD 0x4
0x316: V149 = 0xffffffffffffffffffffffffffffffffffffffff
0x32b: V150 = AND 0xffffffffffffffffffffffffffffffffffffffff V148
0x32d: V151 = 0x20
0x32f: V152 = ADD 0x20 0x4
0x335: V153 = 0x1f7
0x338: THROW 
0x339: JUMPDEST 
0x33a: V154 = 0x40
0x33c: V155 = M[0x40]
0x33f: V156 = ISZERO S0
0x340: V157 = ISZERO V156
0x341: V158 = ISZERO V157
0x342: V159 = ISZERO V158
0x344: M[V155] = V159
0x345: V160 = 0x20
0x347: V161 = ADD 0x20 V155
0x34b: V162 = 0x40
0x34d: V163 = M[0x40]
0x350: V164 = SUB V161 V163
0x352: RETURN V163 V164
0x353: JUMPDEST 
0x354: V165 = CALLVALUE
0x355: V166 = ISZERO V165
0x356: V167 = 0xd9
0x359: THROWI V166
---
Entry stack: []
Stack pops: 0
Stack additions: [V150, 0xb4]
Exit stack: []

================================

Block 0x35a
[0x35a:0x382]
---
Predecessors: [0x309]
Successors: [0x383]
---
0x35a PUSH1 0x0
0x35c DUP1
0x35d REVERT
0x35e JUMPDEST
0x35f PUSH2 0xe1
0x362 PUSH2 0x24d
0x365 JUMP
0x366 JUMPDEST
0x367 PUSH1 0x40
0x369 MLOAD
0x36a DUP1
0x36b DUP3
0x36c DUP2
0x36d MSTORE
0x36e PUSH1 0x20
0x370 ADD
0x371 SWAP2
0x372 POP
0x373 POP
0x374 PUSH1 0x40
0x376 MLOAD
0x377 DUP1
0x378 SWAP2
0x379 SUB
0x37a SWAP1
0x37b RETURN
0x37c JUMPDEST
0x37d CALLVALUE
0x37e ISZERO
0x37f PUSH2 0x102
0x382 JUMPI
---
0x35a: V168 = 0x0
0x35d: REVERT 0x0 0x0
0x35e: JUMPDEST 
0x35f: V169 = 0xe1
0x362: V170 = 0x24d
0x365: THROW 
0x366: JUMPDEST 
0x367: V171 = 0x40
0x369: V172 = M[0x40]
0x36d: M[V172] = S0
0x36e: V173 = 0x20
0x370: V174 = ADD 0x20 V172
0x374: V175 = 0x40
0x376: V176 = M[0x40]
0x379: V177 = SUB V174 V176
0x37b: RETURN V176 V177
0x37c: JUMPDEST 
0x37d: V178 = CALLVALUE
0x37e: V179 = ISZERO V178
0x37f: V180 = 0x102
0x382: THROWI V179
---
Entry stack: []
Stack pops: 0
Stack additions: [0xe1]
Exit stack: []

================================

Block 0x383
[0x383:0x3d7]
---
Predecessors: [0x35a]
Successors: [0x3d8]
---
0x383 PUSH1 0x0
0x385 DUP1
0x386 REVERT
0x387 JUMPDEST
0x388 PUSH2 0x10a
0x38b PUSH2 0x253
0x38e JUMP
0x38f JUMPDEST
0x390 PUSH1 0x40
0x392 MLOAD
0x393 DUP1
0x394 DUP3
0x395 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3aa AND
0x3ab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c0 AND
0x3c1 DUP2
0x3c2 MSTORE
0x3c3 PUSH1 0x20
0x3c5 ADD
0x3c6 SWAP2
0x3c7 POP
0x3c8 POP
0x3c9 PUSH1 0x40
0x3cb MLOAD
0x3cc DUP1
0x3cd SWAP2
0x3ce SUB
0x3cf SWAP1
0x3d0 RETURN
0x3d1 JUMPDEST
0x3d2 CALLVALUE
0x3d3 ISZERO
0x3d4 PUSH2 0x157
0x3d7 JUMPI
---
0x383: V181 = 0x0
0x386: REVERT 0x0 0x0
0x387: JUMPDEST 
0x388: V182 = 0x10a
0x38b: V183 = 0x253
0x38e: THROW 
0x38f: JUMPDEST 
0x390: V184 = 0x40
0x392: V185 = M[0x40]
0x395: V186 = 0xffffffffffffffffffffffffffffffffffffffff
0x3aa: V187 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x3ab: V188 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c0: V189 = AND 0xffffffffffffffffffffffffffffffffffffffff V187
0x3c2: M[V185] = V189
0x3c3: V190 = 0x20
0x3c5: V191 = ADD 0x20 V185
0x3c9: V192 = 0x40
0x3cb: V193 = M[0x40]
0x3ce: V194 = SUB V191 V193
0x3d0: RETURN V193 V194
0x3d1: JUMPDEST 
0x3d2: V195 = CALLVALUE
0x3d3: V196 = ISZERO V195
0x3d4: V197 = 0x157
0x3d7: THROWI V196
---
Entry stack: []
Stack pops: 0
Stack additions: [0x10a]
Exit stack: []

================================

Block 0x3d8
[0x3d8:0x410]
---
Predecessors: [0x383]
Successors: [0x411]
---
0x3d8 PUSH1 0x0
0x3da DUP1
0x3db REVERT
0x3dc JUMPDEST
0x3dd PUSH2 0x183
0x3e0 PUSH1 0x4
0x3e2 DUP1
0x3e3 DUP1
0x3e4 CALLDATALOAD
0x3e5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3fa AND
0x3fb SWAP1
0x3fc PUSH1 0x20
0x3fe ADD
0x3ff SWAP1
0x400 SWAP2
0x401 SWAP1
0x402 POP
0x403 POP
0x404 PUSH2 0x278
0x407 JUMP
0x408 JUMPDEST
0x409 STOP
0x40a JUMPDEST
0x40b CALLVALUE
0x40c ISZERO
0x40d PUSH2 0x190
0x410 JUMPI
---
0x3d8: V198 = 0x0
0x3db: REVERT 0x0 0x0
0x3dc: JUMPDEST 
0x3dd: V199 = 0x183
0x3e0: V200 = 0x4
0x3e4: V201 = CALLDATALOAD 0x4
0x3e5: V202 = 0xffffffffffffffffffffffffffffffffffffffff
0x3fa: V203 = AND 0xffffffffffffffffffffffffffffffffffffffff V201
0x3fc: V204 = 0x20
0x3fe: V205 = ADD 0x20 0x4
0x404: V206 = 0x278
0x407: THROW 
0x408: JUMPDEST 
0x409: STOP 
0x40a: JUMPDEST 
0x40b: V207 = CALLVALUE
0x40c: V208 = ISZERO V207
0x40d: V209 = 0x190
0x410: THROWI V208
---
Entry stack: []
Stack pops: 0
Stack additions: [V203, 0x183]
Exit stack: []

================================

Block 0x411
[0x411:0x449]
---
Predecessors: [0x3d8]
Successors: [0x44a]
---
0x411 PUSH1 0x0
0x413 DUP1
0x414 REVERT
0x415 JUMPDEST
0x416 PUSH2 0x1bc
0x419 PUSH1 0x4
0x41b DUP1
0x41c DUP1
0x41d CALLDATALOAD
0x41e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x433 AND
0x434 SWAP1
0x435 PUSH1 0x20
0x437 ADD
0x438 SWAP1
0x439 SWAP2
0x43a SWAP1
0x43b POP
0x43c POP
0x43d PUSH2 0x391
0x440 JUMP
0x441 JUMPDEST
0x442 STOP
0x443 JUMPDEST
0x444 CALLVALUE
0x445 ISZERO
0x446 PUSH2 0x1c9
0x449 JUMPI
---
0x411: V210 = 0x0
0x414: REVERT 0x0 0x0
0x415: JUMPDEST 
0x416: V211 = 0x1bc
0x419: V212 = 0x4
0x41d: V213 = CALLDATALOAD 0x4
0x41e: V214 = 0xffffffffffffffffffffffffffffffffffffffff
0x433: V215 = AND 0xffffffffffffffffffffffffffffffffffffffff V213
0x435: V216 = 0x20
0x437: V217 = ADD 0x20 0x4
0x43d: V218 = 0x391
0x440: THROW 
0x441: JUMPDEST 
0x442: STOP 
0x443: JUMPDEST 
0x444: V219 = CALLVALUE
0x445: V220 = ISZERO V219
0x446: V221 = 0x1c9
0x449: THROWI V220
---
Entry stack: []
Stack pops: 0
Stack additions: [V215, 0x1bc]
Exit stack: []

================================

Block 0x44a
[0x44a:0x553]
---
Predecessors: [0x411]
Successors: [0x554]
---
0x44a PUSH1 0x0
0x44c DUP1
0x44d REVERT
0x44e JUMPDEST
0x44f PUSH2 0x1f5
0x452 PUSH1 0x4
0x454 DUP1
0x455 DUP1
0x456 CALLDATALOAD
0x457 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x46c AND
0x46d SWAP1
0x46e PUSH1 0x20
0x470 ADD
0x471 SWAP1
0x472 SWAP2
0x473 SWAP1
0x474 POP
0x475 POP
0x476 PUSH2 0x4a9
0x479 JUMP
0x47a JUMPDEST
0x47b STOP
0x47c JUMPDEST
0x47d PUSH1 0x0
0x47f PUSH1 0x1
0x481 PUSH1 0x0
0x483 DUP4
0x484 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x499 AND
0x49a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4af AND
0x4b0 DUP2
0x4b1 MSTORE
0x4b2 PUSH1 0x20
0x4b4 ADD
0x4b5 SWAP1
0x4b6 DUP2
0x4b7 MSTORE
0x4b8 PUSH1 0x20
0x4ba ADD
0x4bb PUSH1 0x0
0x4bd SHA3
0x4be PUSH1 0x0
0x4c0 SWAP1
0x4c1 SLOAD
0x4c2 SWAP1
0x4c3 PUSH2 0x100
0x4c6 EXP
0x4c7 SWAP1
0x4c8 DIV
0x4c9 PUSH1 0xff
0x4cb AND
0x4cc SWAP1
0x4cd POP
0x4ce SWAP2
0x4cf SWAP1
0x4d0 POP
0x4d1 JUMP
0x4d2 JUMPDEST
0x4d3 PUSH1 0x2
0x4d5 SLOAD
0x4d6 DUP2
0x4d7 JUMP
0x4d8 JUMPDEST
0x4d9 PUSH1 0x0
0x4db DUP1
0x4dc SWAP1
0x4dd SLOAD
0x4de SWAP1
0x4df PUSH2 0x100
0x4e2 EXP
0x4e3 SWAP1
0x4e4 DIV
0x4e5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4fa AND
0x4fb DUP2
0x4fc JUMP
0x4fd JUMPDEST
0x4fe PUSH1 0x0
0x500 DUP1
0x501 SWAP1
0x502 SLOAD
0x503 SWAP1
0x504 PUSH2 0x100
0x507 EXP
0x508 SWAP1
0x509 DIV
0x50a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x51f AND
0x520 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x535 AND
0x536 CALLER
0x537 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x54c AND
0x54d EQ
0x54e ISZERO
0x54f ISZERO
0x550 PUSH2 0x2d3
0x553 JUMPI
---
0x44a: V222 = 0x0
0x44d: REVERT 0x0 0x0
0x44e: JUMPDEST 
0x44f: V223 = 0x1f5
0x452: V224 = 0x4
0x456: V225 = CALLDATALOAD 0x4
0x457: V226 = 0xffffffffffffffffffffffffffffffffffffffff
0x46c: V227 = AND 0xffffffffffffffffffffffffffffffffffffffff V225
0x46e: V228 = 0x20
0x470: V229 = ADD 0x20 0x4
0x476: V230 = 0x4a9
0x479: THROW 
0x47a: JUMPDEST 
0x47b: STOP 
0x47c: JUMPDEST 
0x47d: V231 = 0x0
0x47f: V232 = 0x1
0x481: V233 = 0x0
0x484: V234 = 0xffffffffffffffffffffffffffffffffffffffff
0x499: V235 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x49a: V236 = 0xffffffffffffffffffffffffffffffffffffffff
0x4af: V237 = AND 0xffffffffffffffffffffffffffffffffffffffff V235
0x4b1: M[0x0] = V237
0x4b2: V238 = 0x20
0x4b4: V239 = ADD 0x20 0x0
0x4b7: M[0x20] = 0x1
0x4b8: V240 = 0x20
0x4ba: V241 = ADD 0x20 0x20
0x4bb: V242 = 0x0
0x4bd: V243 = SHA3 0x0 0x40
0x4be: V244 = 0x0
0x4c1: V245 = S[V243]
0x4c3: V246 = 0x100
0x4c6: V247 = EXP 0x100 0x0
0x4c8: V248 = DIV V245 0x1
0x4c9: V249 = 0xff
0x4cb: V250 = AND 0xff V248
0x4d1: JUMP S1
0x4d2: JUMPDEST 
0x4d3: V251 = 0x2
0x4d5: V252 = S[0x2]
0x4d7: JUMP S0
0x4d8: JUMPDEST 
0x4d9: V253 = 0x0
0x4dd: V254 = S[0x0]
0x4df: V255 = 0x100
0x4e2: V256 = EXP 0x100 0x0
0x4e4: V257 = DIV V254 0x1
0x4e5: V258 = 0xffffffffffffffffffffffffffffffffffffffff
0x4fa: V259 = AND 0xffffffffffffffffffffffffffffffffffffffff V257
0x4fc: JUMP S0
0x4fd: JUMPDEST 
0x4fe: V260 = 0x0
0x502: V261 = S[0x0]
0x504: V262 = 0x100
0x507: V263 = EXP 0x100 0x0
0x509: V264 = DIV V261 0x1
0x50a: V265 = 0xffffffffffffffffffffffffffffffffffffffff
0x51f: V266 = AND 0xffffffffffffffffffffffffffffffffffffffff V264
0x520: V267 = 0xffffffffffffffffffffffffffffffffffffffff
0x535: V268 = AND 0xffffffffffffffffffffffffffffffffffffffff V266
0x536: V269 = CALLER
0x537: V270 = 0xffffffffffffffffffffffffffffffffffffffff
0x54c: V271 = AND 0xffffffffffffffffffffffffffffffffffffffff V269
0x54d: V272 = EQ V271 V268
0x54e: V273 = ISZERO V272
0x54f: V274 = ISZERO V273
0x550: V275 = 0x2d3
0x553: THROWI V274
---
Entry stack: []
Stack pops: 0
Stack additions: [V227, 0x1f5, V250, V252, S0, V259, S0]
Exit stack: []

================================

Block 0x554
[0x554:0x58f]
---
Predecessors: [0x44a]
Successors: [0x590]
---
0x554 PUSH1 0x0
0x556 DUP1
0x557 REVERT
0x558 JUMPDEST
0x559 PUSH1 0x0
0x55b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x570 AND
0x571 DUP2
0x572 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x587 AND
0x588 EQ
0x589 ISZERO
0x58a ISZERO
0x58b ISZERO
0x58c PUSH2 0x30f
0x58f JUMPI
---
0x554: V276 = 0x0
0x557: REVERT 0x0 0x0
0x558: JUMPDEST 
0x559: V277 = 0x0
0x55b: V278 = 0xffffffffffffffffffffffffffffffffffffffff
0x570: V279 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x572: V280 = 0xffffffffffffffffffffffffffffffffffffffff
0x587: V281 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x588: V282 = EQ V281 0x0
0x589: V283 = ISZERO V282
0x58a: V284 = ISZERO V283
0x58b: V285 = ISZERO V284
0x58c: V286 = 0x30f
0x58f: THROWI V285
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x590
[0x590:0x5a3]
---
Predecessors: [0x554]
Successors: [0x5a4]
---
0x590 PUSH1 0x0
0x592 DUP1
0x593 REVERT
0x594 JUMPDEST
0x595 PUSH2 0x318
0x598 DUP2
0x599 PUSH2 0x1f7
0x59c JUMP
0x59d JUMPDEST
0x59e ISZERO
0x59f ISZERO
0x5a0 PUSH2 0x323
0x5a3 JUMPI
---
0x590: V287 = 0x0
0x593: REVERT 0x0 0x0
0x594: JUMPDEST 
0x595: V288 = 0x318
0x599: V289 = 0x1f7
0x59c: THROW 
0x59d: JUMPDEST 
0x59e: V290 = ISZERO S0
0x59f: V291 = ISZERO V290
0x5a0: V292 = 0x323
0x5a3: THROWI V291
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [S0, 0x318, S0]
Exit stack: []

================================

Block 0x5a4
[0x5a4:0x66c]
---
Predecessors: [0x590]
Successors: [0x66d]
---
0x5a4 PUSH1 0x0
0x5a6 DUP1
0x5a7 REVERT
0x5a8 JUMPDEST
0x5a9 PUSH1 0x0
0x5ab PUSH1 0x1
0x5ad PUSH1 0x0
0x5af DUP4
0x5b0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5c5 AND
0x5c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5db AND
0x5dc DUP2
0x5dd MSTORE
0x5de PUSH1 0x20
0x5e0 ADD
0x5e1 SWAP1
0x5e2 DUP2
0x5e3 MSTORE
0x5e4 PUSH1 0x20
0x5e6 ADD
0x5e7 PUSH1 0x0
0x5e9 SHA3
0x5ea PUSH1 0x0
0x5ec PUSH2 0x100
0x5ef EXP
0x5f0 DUP2
0x5f1 SLOAD
0x5f2 DUP2
0x5f3 PUSH1 0xff
0x5f5 MUL
0x5f6 NOT
0x5f7 AND
0x5f8 SWAP1
0x5f9 DUP4
0x5fa ISZERO
0x5fb ISZERO
0x5fc MUL
0x5fd OR
0x5fe SWAP1
0x5ff SSTORE
0x600 POP
0x601 PUSH1 0x2
0x603 PUSH1 0x0
0x605 DUP2
0x606 SLOAD
0x607 DUP1
0x608 SWAP3
0x609 SWAP2
0x60a SWAP1
0x60b PUSH1 0x1
0x60d SWAP1
0x60e SUB
0x60f SWAP2
0x610 SWAP1
0x611 POP
0x612 SSTORE
0x613 POP
0x614 POP
0x615 JUMP
0x616 JUMPDEST
0x617 PUSH1 0x0
0x619 DUP1
0x61a SWAP1
0x61b SLOAD
0x61c SWAP1
0x61d PUSH2 0x100
0x620 EXP
0x621 SWAP1
0x622 DIV
0x623 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x638 AND
0x639 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x64e AND
0x64f CALLER
0x650 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x665 AND
0x666 EQ
0x667 ISZERO
0x668 ISZERO
0x669 PUSH2 0x3ec
0x66c JUMPI
---
0x5a4: V293 = 0x0
0x5a7: REVERT 0x0 0x0
0x5a8: JUMPDEST 
0x5a9: V294 = 0x0
0x5ab: V295 = 0x1
0x5ad: V296 = 0x0
0x5b0: V297 = 0xffffffffffffffffffffffffffffffffffffffff
0x5c5: V298 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x5c6: V299 = 0xffffffffffffffffffffffffffffffffffffffff
0x5db: V300 = AND 0xffffffffffffffffffffffffffffffffffffffff V298
0x5dd: M[0x0] = V300
0x5de: V301 = 0x20
0x5e0: V302 = ADD 0x20 0x0
0x5e3: M[0x20] = 0x1
0x5e4: V303 = 0x20
0x5e6: V304 = ADD 0x20 0x20
0x5e7: V305 = 0x0
0x5e9: V306 = SHA3 0x0 0x40
0x5ea: V307 = 0x0
0x5ec: V308 = 0x100
0x5ef: V309 = EXP 0x100 0x0
0x5f1: V310 = S[V306]
0x5f3: V311 = 0xff
0x5f5: V312 = MUL 0xff 0x1
0x5f6: V313 = NOT 0xff
0x5f7: V314 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V310
0x5fa: V315 = ISZERO 0x0
0x5fb: V316 = ISZERO 0x1
0x5fc: V317 = MUL 0x0 0x1
0x5fd: V318 = OR 0x0 V314
0x5ff: S[V306] = V318
0x601: V319 = 0x2
0x603: V320 = 0x0
0x606: V321 = S[0x2]
0x60b: V322 = 0x1
0x60e: V323 = SUB V321 0x1
0x612: S[0x2] = V323
0x615: JUMP S1
0x616: JUMPDEST 
0x617: V324 = 0x0
0x61b: V325 = S[0x0]
0x61d: V326 = 0x100
0x620: V327 = EXP 0x100 0x0
0x622: V328 = DIV V325 0x1
0x623: V329 = 0xffffffffffffffffffffffffffffffffffffffff
0x638: V330 = AND 0xffffffffffffffffffffffffffffffffffffffff V328
0x639: V331 = 0xffffffffffffffffffffffffffffffffffffffff
0x64e: V332 = AND 0xffffffffffffffffffffffffffffffffffffffff V330
0x64f: V333 = CALLER
0x650: V334 = 0xffffffffffffffffffffffffffffffffffffffff
0x665: V335 = AND 0xffffffffffffffffffffffffffffffffffffffff V333
0x666: V336 = EQ V335 V332
0x667: V337 = ISZERO V336
0x668: V338 = ISZERO V337
0x669: V339 = 0x3ec
0x66c: THROWI V338
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x66d
[0x66d:0x6a8]
---
Predecessors: [0x5a4]
Successors: [0x6a9]
---
0x66d PUSH1 0x0
0x66f DUP1
0x670 REVERT
0x671 JUMPDEST
0x672 PUSH1 0x0
0x674 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x689 AND
0x68a DUP2
0x68b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a0 AND
0x6a1 EQ
0x6a2 ISZERO
0x6a3 ISZERO
0x6a4 ISZERO
0x6a5 PUSH2 0x428
0x6a8 JUMPI
---
0x66d: V340 = 0x0
0x670: REVERT 0x0 0x0
0x671: JUMPDEST 
0x672: V341 = 0x0
0x674: V342 = 0xffffffffffffffffffffffffffffffffffffffff
0x689: V343 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x68b: V344 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a0: V345 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x6a1: V346 = EQ V345 0x0
0x6a2: V347 = ISZERO V346
0x6a3: V348 = ISZERO V347
0x6a4: V349 = ISZERO V348
0x6a5: V350 = 0x428
0x6a8: THROWI V349
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x6a9
[0x6a9:0x6bd]
---
Predecessors: [0x66d]
Successors: [0x6be]
---
0x6a9 PUSH1 0x0
0x6ab DUP1
0x6ac REVERT
0x6ad JUMPDEST
0x6ae PUSH2 0x431
0x6b1 DUP2
0x6b2 PUSH2 0x1f7
0x6b5 JUMP
0x6b6 JUMPDEST
0x6b7 ISZERO
0x6b8 ISZERO
0x6b9 ISZERO
0x6ba PUSH2 0x43d
0x6bd JUMPI
---
0x6a9: V351 = 0x0
0x6ac: REVERT 0x0 0x0
0x6ad: JUMPDEST 
0x6ae: V352 = 0x431
0x6b2: V353 = 0x1f7
0x6b5: THROW 
0x6b6: JUMPDEST 
0x6b7: V354 = ISZERO S0
0x6b8: V355 = ISZERO V354
0x6b9: V356 = ISZERO V355
0x6ba: V357 = 0x43d
0x6bd: THROWI V356
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [S0, 0x431, S0]
Exit stack: []

================================

Block 0x6be
[0x6be:0x784]
---
Predecessors: [0x6a9]
Successors: [0x785]
---
0x6be PUSH1 0x0
0x6c0 DUP1
0x6c1 REVERT
0x6c2 JUMPDEST
0x6c3 PUSH1 0x1
0x6c5 DUP1
0x6c6 PUSH1 0x0
0x6c8 DUP4
0x6c9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6de AND
0x6df PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6f4 AND
0x6f5 DUP2
0x6f6 MSTORE
0x6f7 PUSH1 0x20
0x6f9 ADD
0x6fa SWAP1
0x6fb DUP2
0x6fc MSTORE
0x6fd PUSH1 0x20
0x6ff ADD
0x700 PUSH1 0x0
0x702 SHA3
0x703 PUSH1 0x0
0x705 PUSH2 0x100
0x708 EXP
0x709 DUP2
0x70a SLOAD
0x70b DUP2
0x70c PUSH1 0xff
0x70e MUL
0x70f NOT
0x710 AND
0x711 SWAP1
0x712 DUP4
0x713 ISZERO
0x714 ISZERO
0x715 MUL
0x716 OR
0x717 SWAP1
0x718 SSTORE
0x719 POP
0x71a PUSH1 0x2
0x71c PUSH1 0x0
0x71e DUP2
0x71f SLOAD
0x720 DUP1
0x721 SWAP3
0x722 SWAP2
0x723 SWAP1
0x724 PUSH1 0x1
0x726 ADD
0x727 SWAP2
0x728 SWAP1
0x729 POP
0x72a SSTORE
0x72b POP
0x72c POP
0x72d JUMP
0x72e JUMPDEST
0x72f PUSH1 0x0
0x731 DUP1
0x732 SWAP1
0x733 SLOAD
0x734 SWAP1
0x735 PUSH2 0x100
0x738 EXP
0x739 SWAP1
0x73a DIV
0x73b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x750 AND
0x751 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x766 AND
0x767 CALLER
0x768 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x77d AND
0x77e EQ
0x77f ISZERO
0x780 ISZERO
0x781 PUSH2 0x504
0x784 JUMPI
---
0x6be: V358 = 0x0
0x6c1: REVERT 0x0 0x0
0x6c2: JUMPDEST 
0x6c3: V359 = 0x1
0x6c6: V360 = 0x0
0x6c9: V361 = 0xffffffffffffffffffffffffffffffffffffffff
0x6de: V362 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x6df: V363 = 0xffffffffffffffffffffffffffffffffffffffff
0x6f4: V364 = AND 0xffffffffffffffffffffffffffffffffffffffff V362
0x6f6: M[0x0] = V364
0x6f7: V365 = 0x20
0x6f9: V366 = ADD 0x20 0x0
0x6fc: M[0x20] = 0x1
0x6fd: V367 = 0x20
0x6ff: V368 = ADD 0x20 0x20
0x700: V369 = 0x0
0x702: V370 = SHA3 0x0 0x40
0x703: V371 = 0x0
0x705: V372 = 0x100
0x708: V373 = EXP 0x100 0x0
0x70a: V374 = S[V370]
0x70c: V375 = 0xff
0x70e: V376 = MUL 0xff 0x1
0x70f: V377 = NOT 0xff
0x710: V378 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V374
0x713: V379 = ISZERO 0x1
0x714: V380 = ISZERO 0x0
0x715: V381 = MUL 0x1 0x1
0x716: V382 = OR 0x1 V378
0x718: S[V370] = V382
0x71a: V383 = 0x2
0x71c: V384 = 0x0
0x71f: V385 = S[0x2]
0x724: V386 = 0x1
0x726: V387 = ADD 0x1 V385
0x72a: S[0x2] = V387
0x72d: JUMP S1
0x72e: JUMPDEST 
0x72f: V388 = 0x0
0x733: V389 = S[0x0]
0x735: V390 = 0x100
0x738: V391 = EXP 0x100 0x0
0x73a: V392 = DIV V389 0x1
0x73b: V393 = 0xffffffffffffffffffffffffffffffffffffffff
0x750: V394 = AND 0xffffffffffffffffffffffffffffffffffffffff V392
0x751: V395 = 0xffffffffffffffffffffffffffffffffffffffff
0x766: V396 = AND 0xffffffffffffffffffffffffffffffffffffffff V394
0x767: V397 = CALLER
0x768: V398 = 0xffffffffffffffffffffffffffffffffffffffff
0x77d: V399 = AND 0xffffffffffffffffffffffffffffffffffffffff V397
0x77e: V400 = EQ V399 V396
0x77f: V401 = ISZERO V400
0x780: V402 = ISZERO V401
0x781: V403 = 0x504
0x784: THROWI V402
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x785
[0x785:0x7c0]
---
Predecessors: [0x6be]
Successors: [0x7c1]
---
0x785 PUSH1 0x0
0x787 DUP1
0x788 REVERT
0x789 JUMPDEST
0x78a PUSH1 0x0
0x78c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7a1 AND
0x7a2 DUP2
0x7a3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7b8 AND
0x7b9 EQ
0x7ba ISZERO
0x7bb ISZERO
0x7bc ISZERO
0x7bd PUSH2 0x540
0x7c0 JUMPI
---
0x785: V404 = 0x0
0x788: REVERT 0x0 0x0
0x789: JUMPDEST 
0x78a: V405 = 0x0
0x78c: V406 = 0xffffffffffffffffffffffffffffffffffffffff
0x7a1: V407 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x7a3: V408 = 0xffffffffffffffffffffffffffffffffffffffff
0x7b8: V409 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x7b9: V410 = EQ V409 0x0
0x7ba: V411 = ISZERO V410
0x7bb: V412 = ISZERO V411
0x7bc: V413 = ISZERO V412
0x7bd: V414 = 0x540
0x7c0: THROWI V413
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x7c1
[0x7c1:0x8b9]
---
Predecessors: [0x785]
Successors: []
---
0x7c1 PUSH1 0x0
0x7c3 DUP1
0x7c4 REVERT
0x7c5 JUMPDEST
0x7c6 DUP1
0x7c7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7dc AND
0x7dd PUSH1 0x0
0x7df DUP1
0x7e0 SWAP1
0x7e1 SLOAD
0x7e2 SWAP1
0x7e3 PUSH2 0x100
0x7e6 EXP
0x7e7 SWAP1
0x7e8 DIV
0x7e9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7fe AND
0x7ff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x814 AND
0x815 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x836 PUSH1 0x40
0x838 MLOAD
0x839 PUSH1 0x40
0x83b MLOAD
0x83c DUP1
0x83d SWAP2
0x83e SUB
0x83f SWAP1
0x840 LOG3
0x841 DUP1
0x842 PUSH1 0x0
0x844 DUP1
0x845 PUSH2 0x100
0x848 EXP
0x849 DUP2
0x84a SLOAD
0x84b DUP2
0x84c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x861 MUL
0x862 NOT
0x863 AND
0x864 SWAP1
0x865 DUP4
0x866 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x87b AND
0x87c MUL
0x87d OR
0x87e SWAP1
0x87f SSTORE
0x880 POP
0x881 POP
0x882 JUMP
0x883 STOP
0x884 LOG1
0x885 PUSH6 0x627a7a723058
0x88c SHA3
0x88d EXP
0x88e LOG3
0x88f DUP10
0x890 LOG2
0x891 MISSING 0x4c
0x892 LOG3
0x893 MISSING 0xb4
0x894 PUSH5 0x3a2b401fed
0x89a MISSING 0xfb
0x89b SWAP10
0x89c MISSING 0x23
0x89d MISSING 0xc9
0x89e SWAP14
0x89f DUP16
0x8a0 MISSING 0xbf
0x8a1 PUSH24 0x9171b064edb1226b10735b0029
---
0x7c1: V415 = 0x0
0x7c4: REVERT 0x0 0x0
0x7c5: JUMPDEST 
0x7c7: V416 = 0xffffffffffffffffffffffffffffffffffffffff
0x7dc: V417 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x7dd: V418 = 0x0
0x7e1: V419 = S[0x0]
0x7e3: V420 = 0x100
0x7e6: V421 = EXP 0x100 0x0
0x7e8: V422 = DIV V419 0x1
0x7e9: V423 = 0xffffffffffffffffffffffffffffffffffffffff
0x7fe: V424 = AND 0xffffffffffffffffffffffffffffffffffffffff V422
0x7ff: V425 = 0xffffffffffffffffffffffffffffffffffffffff
0x814: V426 = AND 0xffffffffffffffffffffffffffffffffffffffff V424
0x815: V427 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x836: V428 = 0x40
0x838: V429 = M[0x40]
0x839: V430 = 0x40
0x83b: V431 = M[0x40]
0x83e: V432 = SUB V429 V431
0x840: LOG V431 V432 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V426 V417
0x842: V433 = 0x0
0x845: V434 = 0x100
0x848: V435 = EXP 0x100 0x0
0x84a: V436 = S[0x0]
0x84c: V437 = 0xffffffffffffffffffffffffffffffffffffffff
0x861: V438 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x862: V439 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x863: V440 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V436
0x866: V441 = 0xffffffffffffffffffffffffffffffffffffffff
0x87b: V442 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x87c: V443 = MUL V442 0x1
0x87d: V444 = OR V443 V440
0x87f: S[0x0] = V444
0x882: JUMP S1
0x883: STOP 
0x884: LOG S0 S1 S2
0x885: V445 = 0x627a7a723058
0x88c: V446 = SHA3 0x627a7a723058 S3
0x88d: V447 = EXP V446 S4
0x88e: LOG V447 S5 S6 S7 S8
0x890: LOG S18 S9 S10 S11
0x891: MISSING 0x4c
0x892: LOG S0 S1 S2 S3 S4
0x893: MISSING 0xb4
0x894: V448 = 0x3a2b401fed
0x89a: MISSING 0xfb
0x89c: MISSING 0x23
0x89d: MISSING 0xc9
0x8a0: MISSING 0xbf
0x8a1: V449 = 0x9171b064edb1226b10735b0029
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [S12, S13, S14, S15, S16, S17, S18, 0x3a2b401fed, S10, S1, S2, S3, S4, S5, S6, S7, S8, S9, S0, S15, S14, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S0, S15, 0x9171b064edb1226b10735b0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x8da5cb5b
Entry block: 0x51
Exit block: 0x64
Body: 0x51, 0x58, 0x5c, 0x64, 0xdf

Function 1:
Public function signature: 0xf2fde38b
Entry block: 0xa6
Exit block: 0xdd
Body: 0xa6, 0xad, 0xb1, 0xdd, 0x104, 0x15b, 0x15f, 0x197, 0x19b

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

