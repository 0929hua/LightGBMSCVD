Block 0x0
[0x0:0x38]
---
Predecessors: []
Successors: [0x39, 0x5f]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 PUSH4 0xffffffff
0x2d AND
0x2e DUP1
0x2f PUSH4 0x79ba5097
0x34 EQ
0x35 PUSH2 0x5f
0x38 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x28: V6 = 0xffffffff
0x2d: V7 = AND 0xffffffff V5
0x2f: V8 = 0x79ba5097
0x34: V9 = EQ 0x79ba5097 V7
0x35: V10 = 0x5f
0x38: JUMPI 0x5f V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0x0]
Successors: [0x44, 0x74]
---
0x39 DUP1
0x3a PUSH4 0x8da5cb5b
0x3f EQ
0x40 PUSH2 0x74
0x43 JUMPI
---
0x3a: V11 = 0x8da5cb5b
0x3f: V12 = EQ 0x8da5cb5b V7
0x40: V13 = 0x74
0x43: JUMPI 0x74 V12
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x44
[0x44:0x4e]
---
Predecessors: [0x39]
Successors: [0x4f, 0xc9]
---
0x44 DUP1
0x45 PUSH4 0xd4ee1d90
0x4a EQ
0x4b PUSH2 0xc9
0x4e JUMPI
---
0x45: V14 = 0xd4ee1d90
0x4a: V15 = EQ 0xd4ee1d90 V7
0x4b: V16 = 0xc9
0x4e: JUMPI 0xc9 V15
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x4f
[0x4f:0x59]
---
Predecessors: [0x44]
Successors: [0x5a, 0x11e]
---
0x4f DUP1
0x50 PUSH4 0xf2fde38b
0x55 EQ
0x56 PUSH2 0x11e
0x59 JUMPI
---
0x50: V17 = 0xf2fde38b
0x55: V18 = EQ 0xf2fde38b V7
0x56: V19 = 0x11e
0x59: JUMPI 0x11e V18
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x5a
[0x5a:0x5e]
---
Predecessors: [0x4f]
Successors: []
---
0x5a JUMPDEST
0x5b PUSH1 0x0
0x5d DUP1
0x5e REVERT
---
0x5a: JUMPDEST 
0x5b: V20 = 0x0
0x5e: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x5f
[0x5f:0x65]
---
Predecessors: [0x0]
Successors: [0x66, 0x6a]
---
0x5f JUMPDEST
0x60 CALLVALUE
0x61 ISZERO
0x62 PUSH2 0x6a
0x65 JUMPI
---
0x5f: JUMPDEST 
0x60: V21 = CALLVALUE
0x61: V22 = ISZERO V21
0x62: V23 = 0x6a
0x65: JUMPI 0x6a V22
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x66
[0x66:0x69]
---
Predecessors: [0x5f]
Successors: []
---
0x66 PUSH1 0x0
0x68 DUP1
0x69 REVERT
---
0x66: V24 = 0x0
0x69: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x6a
[0x6a:0x71]
---
Predecessors: [0x5f]
Successors: [0x157]
---
0x6a JUMPDEST
0x6b PUSH2 0x72
0x6e PUSH2 0x157
0x71 JUMP
---
0x6a: JUMPDEST 
0x6b: V25 = 0x72
0x6e: V26 = 0x157
0x71: JUMP 0x157
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x72]
Exit stack: [V7, 0x72]

================================

Block 0x72
[0x72:0x73]
---
Predecessors: [0x332]
Successors: []
---
0x72 JUMPDEST
0x73 STOP
---
0x72: JUMPDEST 
0x73: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x74
[0x74:0x7a]
---
Predecessors: [0x39]
Successors: [0x7b, 0x7f]
---
0x74 JUMPDEST
0x75 CALLVALUE
0x76 ISZERO
0x77 PUSH2 0x7f
0x7a JUMPI
---
0x74: JUMPDEST 
0x75: V27 = CALLVALUE
0x76: V28 = ISZERO V27
0x77: V29 = 0x7f
0x7a: JUMPI 0x7f V28
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x7b
[0x7b:0x7e]
---
Predecessors: [0x74]
Successors: []
---
0x7b PUSH1 0x0
0x7d DUP1
0x7e REVERT
---
0x7b: V30 = 0x0
0x7e: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x7f
[0x7f:0x86]
---
Predecessors: [0x74]
Successors: [0x334]
---
0x7f JUMPDEST
0x80 PUSH2 0x87
0x83 PUSH2 0x334
0x86 JUMP
---
0x7f: JUMPDEST 
0x80: V31 = 0x87
0x83: V32 = 0x334
0x86: JUMP 0x334
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x87]
Exit stack: [V7, 0x87]

================================

Block 0x87
[0x87:0xc8]
---
Predecessors: [0x334]
Successors: []
---
0x87 JUMPDEST
0x88 PUSH1 0x40
0x8a MLOAD
0x8b DUP1
0x8c DUP3
0x8d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa2 AND
0xa3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb8 AND
0xb9 DUP2
0xba MSTORE
0xbb PUSH1 0x20
0xbd ADD
0xbe SWAP2
0xbf POP
0xc0 POP
0xc1 PUSH1 0x40
0xc3 MLOAD
0xc4 DUP1
0xc5 SWAP2
0xc6 SUB
0xc7 SWAP1
0xc8 RETURN
---
0x87: JUMPDEST 
0x88: V33 = 0x40
0x8a: V34 = M[0x40]
0x8d: V35 = 0xffffffffffffffffffffffffffffffffffffffff
0xa2: V36 = AND 0xffffffffffffffffffffffffffffffffffffffff V164
0xa3: V37 = 0xffffffffffffffffffffffffffffffffffffffff
0xb8: V38 = AND 0xffffffffffffffffffffffffffffffffffffffff V36
0xba: M[V34] = V38
0xbb: V39 = 0x20
0xbd: V40 = ADD 0x20 V34
0xc1: V41 = 0x40
0xc3: V42 = M[0x40]
0xc6: V43 = SUB V40 V42
0xc8: RETURN V42 V43
---
Entry stack: [V7, 0x87, V164]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0x87]

================================

Block 0xc9
[0xc9:0xcf]
---
Predecessors: [0x44]
Successors: [0xd0, 0xd4]
---
0xc9 JUMPDEST
0xca CALLVALUE
0xcb ISZERO
0xcc PUSH2 0xd4
0xcf JUMPI
---
0xc9: JUMPDEST 
0xca: V44 = CALLVALUE
0xcb: V45 = ISZERO V44
0xcc: V46 = 0xd4
0xcf: JUMPI 0xd4 V45
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xd0
[0xd0:0xd3]
---
Predecessors: [0xc9]
Successors: []
---
0xd0 PUSH1 0x0
0xd2 DUP1
0xd3 REVERT
---
0xd0: V47 = 0x0
0xd3: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xd4
[0xd4:0xdb]
---
Predecessors: [0xc9]
Successors: [0x359]
---
0xd4 JUMPDEST
0xd5 PUSH2 0xdc
0xd8 PUSH2 0x359
0xdb JUMP
---
0xd4: JUMPDEST 
0xd5: V48 = 0xdc
0xd8: V49 = 0x359
0xdb: JUMP 0x359
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0xdc]
Exit stack: [V7, 0xdc]

================================

Block 0xdc
[0xdc:0x11d]
---
Predecessors: [0x359]
Successors: []
---
0xdc JUMPDEST
0xdd PUSH1 0x40
0xdf MLOAD
0xe0 DUP1
0xe1 DUP3
0xe2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf7 AND
0xf8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10d AND
0x10e DUP2
0x10f MSTORE
0x110 PUSH1 0x20
0x112 ADD
0x113 SWAP2
0x114 POP
0x115 POP
0x116 PUSH1 0x40
0x118 MLOAD
0x119 DUP1
0x11a SWAP2
0x11b SUB
0x11c SWAP1
0x11d RETURN
---
0xdc: JUMPDEST 
0xdd: V50 = 0x40
0xdf: V51 = M[0x40]
0xe2: V52 = 0xffffffffffffffffffffffffffffffffffffffff
0xf7: V53 = AND 0xffffffffffffffffffffffffffffffffffffffff V172
0xf8: V54 = 0xffffffffffffffffffffffffffffffffffffffff
0x10d: V55 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0x10f: M[V51] = V55
0x110: V56 = 0x20
0x112: V57 = ADD 0x20 V51
0x116: V58 = 0x40
0x118: V59 = M[0x40]
0x11b: V60 = SUB V57 V59
0x11d: RETURN V59 V60
---
Entry stack: [V7, 0xdc, V172]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0xdc]

================================

Block 0x11e
[0x11e:0x124]
---
Predecessors: [0x4f]
Successors: [0x125, 0x129]
---
0x11e JUMPDEST
0x11f CALLVALUE
0x120 ISZERO
0x121 PUSH2 0x129
0x124 JUMPI
---
0x11e: JUMPDEST 
0x11f: V61 = CALLVALUE
0x120: V62 = ISZERO V61
0x121: V63 = 0x129
0x124: JUMPI 0x129 V62
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x125
[0x125:0x128]
---
Predecessors: [0x11e]
Successors: []
---
0x125 PUSH1 0x0
0x127 DUP1
0x128 REVERT
---
0x125: V64 = 0x0
0x128: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x129
[0x129:0x154]
---
Predecessors: [0x11e]
Successors: [0x37f]
---
0x129 JUMPDEST
0x12a PUSH2 0x155
0x12d PUSH1 0x4
0x12f DUP1
0x130 DUP1
0x131 CALLDATALOAD
0x132 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x147 AND
0x148 SWAP1
0x149 PUSH1 0x20
0x14b ADD
0x14c SWAP1
0x14d SWAP2
0x14e SWAP1
0x14f POP
0x150 POP
0x151 PUSH2 0x37f
0x154 JUMP
---
0x129: JUMPDEST 
0x12a: V65 = 0x155
0x12d: V66 = 0x4
0x131: V67 = CALLDATALOAD 0x4
0x132: V68 = 0xffffffffffffffffffffffffffffffffffffffff
0x147: V69 = AND 0xffffffffffffffffffffffffffffffffffffffff V67
0x149: V70 = 0x20
0x14b: V71 = ADD 0x20 0x4
0x151: V72 = 0x37f
0x154: JUMP 0x37f
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x155, V69]
Exit stack: [V7, 0x155, V69]

================================

Block 0x155
[0x155:0x156]
---
Predecessors: [0x476]
Successors: []
---
0x155 JUMPDEST
0x156 STOP
---
0x155: JUMPDEST 
0x156: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x157
[0x157:0x1ae]
---
Predecessors: [0x6a]
Successors: [0x1af, 0x1b3]
---
0x157 JUMPDEST
0x158 PUSH1 0x1
0x15a PUSH1 0x0
0x15c SWAP1
0x15d SLOAD
0x15e SWAP1
0x15f PUSH2 0x100
0x162 EXP
0x163 SWAP1
0x164 DIV
0x165 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17a AND
0x17b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x190 AND
0x191 CALLER
0x192 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a7 AND
0x1a8 EQ
0x1a9 ISZERO
0x1aa ISZERO
0x1ab PUSH2 0x1b3
0x1ae JUMPI
---
0x157: JUMPDEST 
0x158: V73 = 0x1
0x15a: V74 = 0x0
0x15d: V75 = S[0x1]
0x15f: V76 = 0x100
0x162: V77 = EXP 0x100 0x0
0x164: V78 = DIV V75 0x1
0x165: V79 = 0xffffffffffffffffffffffffffffffffffffffff
0x17a: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x17b: V81 = 0xffffffffffffffffffffffffffffffffffffffff
0x190: V82 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0x191: V83 = CALLER
0x192: V84 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a7: V85 = AND 0xffffffffffffffffffffffffffffffffffffffff V83
0x1a8: V86 = EQ V85 V82
0x1a9: V87 = ISZERO V86
0x1aa: V88 = ISZERO V87
0x1ab: V89 = 0x1b3
0x1ae: JUMPI 0x1b3 V88
---
Entry stack: [V7, 0x72]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x72]

================================

Block 0x1af
[0x1af:0x1b2]
---
Predecessors: [0x157]
Successors: []
---
0x1af PUSH1 0x0
0x1b1 DUP1
0x1b2 REVERT
---
0x1af: V90 = 0x0
0x1b2: REVERT 0x0 0x0
---
Entry stack: [V7, 0x72]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x72]

================================

Block 0x1b3
[0x1b3:0x331]
---
Predecessors: [0x157]
Successors: [0x332]
---
0x1b3 JUMPDEST
0x1b4 PUSH32 0x343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a
0x1d5 PUSH1 0x0
0x1d7 DUP1
0x1d8 SWAP1
0x1d9 SLOAD
0x1da SWAP1
0x1db PUSH2 0x100
0x1de EXP
0x1df SWAP1
0x1e0 DIV
0x1e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f6 AND
0x1f7 PUSH1 0x1
0x1f9 PUSH1 0x0
0x1fb SWAP1
0x1fc SLOAD
0x1fd SWAP1
0x1fe PUSH2 0x100
0x201 EXP
0x202 SWAP1
0x203 DIV
0x204 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x219 AND
0x21a PUSH1 0x40
0x21c MLOAD
0x21d DUP1
0x21e DUP4
0x21f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x234 AND
0x235 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24a AND
0x24b DUP2
0x24c MSTORE
0x24d PUSH1 0x20
0x24f ADD
0x250 DUP3
0x251 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x266 AND
0x267 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27c AND
0x27d DUP2
0x27e MSTORE
0x27f PUSH1 0x20
0x281 ADD
0x282 SWAP3
0x283 POP
0x284 POP
0x285 POP
0x286 PUSH1 0x40
0x288 MLOAD
0x289 DUP1
0x28a SWAP2
0x28b SUB
0x28c SWAP1
0x28d LOG1
0x28e PUSH1 0x1
0x290 PUSH1 0x0
0x292 SWAP1
0x293 SLOAD
0x294 SWAP1
0x295 PUSH2 0x100
0x298 EXP
0x299 SWAP1
0x29a DIV
0x29b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b0 AND
0x2b1 PUSH1 0x0
0x2b3 DUP1
0x2b4 PUSH2 0x100
0x2b7 EXP
0x2b8 DUP2
0x2b9 SLOAD
0x2ba DUP2
0x2bb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d0 MUL
0x2d1 NOT
0x2d2 AND
0x2d3 SWAP1
0x2d4 DUP4
0x2d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ea AND
0x2eb MUL
0x2ec OR
0x2ed SWAP1
0x2ee SSTORE
0x2ef POP
0x2f0 PUSH1 0x0
0x2f2 PUSH1 0x1
0x2f4 PUSH1 0x0
0x2f6 PUSH2 0x100
0x2f9 EXP
0x2fa DUP2
0x2fb SLOAD
0x2fc DUP2
0x2fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x312 MUL
0x313 NOT
0x314 AND
0x315 SWAP1
0x316 DUP4
0x317 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x32c AND
0x32d MUL
0x32e OR
0x32f SWAP1
0x330 SSTORE
0x331 POP
---
0x1b3: JUMPDEST 
0x1b4: V91 = 0x343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a
0x1d5: V92 = 0x0
0x1d9: V93 = S[0x0]
0x1db: V94 = 0x100
0x1de: V95 = EXP 0x100 0x0
0x1e0: V96 = DIV V93 0x1
0x1e1: V97 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f6: V98 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x1f7: V99 = 0x1
0x1f9: V100 = 0x0
0x1fc: V101 = S[0x1]
0x1fe: V102 = 0x100
0x201: V103 = EXP 0x100 0x0
0x203: V104 = DIV V101 0x1
0x204: V105 = 0xffffffffffffffffffffffffffffffffffffffff
0x219: V106 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x21a: V107 = 0x40
0x21c: V108 = M[0x40]
0x21f: V109 = 0xffffffffffffffffffffffffffffffffffffffff
0x234: V110 = AND 0xffffffffffffffffffffffffffffffffffffffff V98
0x235: V111 = 0xffffffffffffffffffffffffffffffffffffffff
0x24a: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x24c: M[V108] = V112
0x24d: V113 = 0x20
0x24f: V114 = ADD 0x20 V108
0x251: V115 = 0xffffffffffffffffffffffffffffffffffffffff
0x266: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x267: V117 = 0xffffffffffffffffffffffffffffffffffffffff
0x27c: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0x27e: M[V114] = V118
0x27f: V119 = 0x20
0x281: V120 = ADD 0x20 V114
0x286: V121 = 0x40
0x288: V122 = M[0x40]
0x28b: V123 = SUB V120 V122
0x28d: LOG V122 V123 0x343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a
0x28e: V124 = 0x1
0x290: V125 = 0x0
0x293: V126 = S[0x1]
0x295: V127 = 0x100
0x298: V128 = EXP 0x100 0x0
0x29a: V129 = DIV V126 0x1
0x29b: V130 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b0: V131 = AND 0xffffffffffffffffffffffffffffffffffffffff V129
0x2b1: V132 = 0x0
0x2b4: V133 = 0x100
0x2b7: V134 = EXP 0x100 0x0
0x2b9: V135 = S[0x0]
0x2bb: V136 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d0: V137 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x2d1: V138 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2d2: V139 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V135
0x2d5: V140 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ea: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff V131
0x2eb: V142 = MUL V141 0x1
0x2ec: V143 = OR V142 V139
0x2ee: S[0x0] = V143
0x2f0: V144 = 0x0
0x2f2: V145 = 0x1
0x2f4: V146 = 0x0
0x2f6: V147 = 0x100
0x2f9: V148 = EXP 0x100 0x0
0x2fb: V149 = S[0x1]
0x2fd: V150 = 0xffffffffffffffffffffffffffffffffffffffff
0x312: V151 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x313: V152 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x314: V153 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V149
0x317: V154 = 0xffffffffffffffffffffffffffffffffffffffff
0x32c: V155 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x32d: V156 = MUL 0x0 0x1
0x32e: V157 = OR 0x0 V153
0x330: S[0x1] = V157
---
Entry stack: [V7, 0x72]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x72]

================================

Block 0x332
[0x332:0x333]
---
Predecessors: [0x1b3]
Successors: [0x72]
---
0x332 JUMPDEST
0x333 JUMP
---
0x332: JUMPDEST 
0x333: JUMP 0x72
---
Entry stack: [V7, 0x72]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Block 0x334
[0x334:0x358]
---
Predecessors: [0x7f]
Successors: [0x87]
---
0x334 JUMPDEST
0x335 PUSH1 0x0
0x337 DUP1
0x338 SWAP1
0x339 SLOAD
0x33a SWAP1
0x33b PUSH2 0x100
0x33e EXP
0x33f SWAP1
0x340 DIV
0x341 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x356 AND
0x357 DUP2
0x358 JUMP
---
0x334: JUMPDEST 
0x335: V158 = 0x0
0x339: V159 = S[0x0]
0x33b: V160 = 0x100
0x33e: V161 = EXP 0x100 0x0
0x340: V162 = DIV V159 0x1
0x341: V163 = 0xffffffffffffffffffffffffffffffffffffffff
0x356: V164 = AND 0xffffffffffffffffffffffffffffffffffffffff V162
0x358: JUMP 0x87
---
Entry stack: [V7, 0x87]
Stack pops: 1
Stack additions: [S0, V164]
Exit stack: [V7, 0x87, V164]

================================

Block 0x359
[0x359:0x37e]
---
Predecessors: [0xd4]
Successors: [0xdc]
---
0x359 JUMPDEST
0x35a PUSH1 0x1
0x35c PUSH1 0x0
0x35e SWAP1
0x35f SLOAD
0x360 SWAP1
0x361 PUSH2 0x100
0x364 EXP
0x365 SWAP1
0x366 DIV
0x367 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x37c AND
0x37d DUP2
0x37e JUMP
---
0x359: JUMPDEST 
0x35a: V165 = 0x1
0x35c: V166 = 0x0
0x35f: V167 = S[0x1]
0x361: V168 = 0x100
0x364: V169 = EXP 0x100 0x0
0x366: V170 = DIV V167 0x1
0x367: V171 = 0xffffffffffffffffffffffffffffffffffffffff
0x37c: V172 = AND 0xffffffffffffffffffffffffffffffffffffffff V170
0x37e: JUMP 0xdc
---
Entry stack: [V7, 0xdc]
Stack pops: 1
Stack additions: [S0, V172]
Exit stack: [V7, 0xdc, V172]

================================

Block 0x37f
[0x37f:0x3d5]
---
Predecessors: [0x129]
Successors: [0x3d6, 0x3d7]
---
0x37f JUMPDEST
0x380 PUSH1 0x0
0x382 DUP1
0x383 SWAP1
0x384 SLOAD
0x385 SWAP1
0x386 PUSH2 0x100
0x389 EXP
0x38a SWAP1
0x38b DIV
0x38c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a1 AND
0x3a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b7 AND
0x3b8 CALLER
0x3b9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ce AND
0x3cf EQ
0x3d0 ISZERO
0x3d1 ISZERO
0x3d2 PUSH2 0x3d7
0x3d5 JUMPI
---
0x37f: JUMPDEST 
0x380: V173 = 0x0
0x384: V174 = S[0x0]
0x386: V175 = 0x100
0x389: V176 = EXP 0x100 0x0
0x38b: V177 = DIV V174 0x1
0x38c: V178 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a1: V179 = AND 0xffffffffffffffffffffffffffffffffffffffff V177
0x3a2: V180 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b7: V181 = AND 0xffffffffffffffffffffffffffffffffffffffff V179
0x3b8: V182 = CALLER
0x3b9: V183 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ce: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V182
0x3cf: V185 = EQ V184 V181
0x3d0: V186 = ISZERO V185
0x3d1: V187 = ISZERO V186
0x3d2: V188 = 0x3d7
0x3d5: JUMPI 0x3d7 V187
---
Entry stack: [V7, 0x155, V69]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x155, V69]

================================

Block 0x3d6
[0x3d6:0x3d6]
---
Predecessors: [0x37f]
Successors: []
---
0x3d6 INVALID
---
0x3d6: INVALID 
---
Entry stack: [V7, 0x155, V69]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x155, V69]

================================

Block 0x3d7
[0x3d7:0x42e]
---
Predecessors: [0x37f]
Successors: [0x42f, 0x433]
---
0x3d7 JUMPDEST
0x3d8 PUSH1 0x0
0x3da DUP1
0x3db SWAP1
0x3dc SLOAD
0x3dd SWAP1
0x3de PUSH2 0x100
0x3e1 EXP
0x3e2 SWAP1
0x3e3 DIV
0x3e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f9 AND
0x3fa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x40f AND
0x410 DUP2
0x411 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x426 AND
0x427 EQ
0x428 ISZERO
0x429 ISZERO
0x42a ISZERO
0x42b PUSH2 0x433
0x42e JUMPI
---
0x3d7: JUMPDEST 
0x3d8: V189 = 0x0
0x3dc: V190 = S[0x0]
0x3de: V191 = 0x100
0x3e1: V192 = EXP 0x100 0x0
0x3e3: V193 = DIV V190 0x1
0x3e4: V194 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f9: V195 = AND 0xffffffffffffffffffffffffffffffffffffffff V193
0x3fa: V196 = 0xffffffffffffffffffffffffffffffffffffffff
0x40f: V197 = AND 0xffffffffffffffffffffffffffffffffffffffff V195
0x411: V198 = 0xffffffffffffffffffffffffffffffffffffffff
0x426: V199 = AND 0xffffffffffffffffffffffffffffffffffffffff V69
0x427: V200 = EQ V199 V197
0x428: V201 = ISZERO V200
0x429: V202 = ISZERO V201
0x42a: V203 = ISZERO V202
0x42b: V204 = 0x433
0x42e: JUMPI 0x433 V203
---
Entry stack: [V7, 0x155, V69]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7, 0x155, V69]

================================

Block 0x42f
[0x42f:0x432]
---
Predecessors: [0x3d7]
Successors: []
---
0x42f PUSH1 0x0
0x431 DUP1
0x432 REVERT
---
0x42f: V205 = 0x0
0x432: REVERT 0x0 0x0
---
Entry stack: [V7, 0x155, V69]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x155, V69]

================================

Block 0x433
[0x433:0x474]
---
Predecessors: [0x3d7]
Successors: [0x475]
---
0x433 JUMPDEST
0x434 DUP1
0x435 PUSH1 0x1
0x437 PUSH1 0x0
0x439 PUSH2 0x100
0x43c EXP
0x43d DUP2
0x43e SLOAD
0x43f DUP2
0x440 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x455 MUL
0x456 NOT
0x457 AND
0x458 SWAP1
0x459 DUP4
0x45a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x46f AND
0x470 MUL
0x471 OR
0x472 SWAP1
0x473 SSTORE
0x474 POP
---
0x433: JUMPDEST 
0x435: V206 = 0x1
0x437: V207 = 0x0
0x439: V208 = 0x100
0x43c: V209 = EXP 0x100 0x0
0x43e: V210 = S[0x1]
0x440: V211 = 0xffffffffffffffffffffffffffffffffffffffff
0x455: V212 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x456: V213 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x457: V214 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V210
0x45a: V215 = 0xffffffffffffffffffffffffffffffffffffffff
0x46f: V216 = AND 0xffffffffffffffffffffffffffffffffffffffff V69
0x470: V217 = MUL V216 0x1
0x471: V218 = OR V217 V214
0x473: S[0x1] = V218
---
Entry stack: [V7, 0x155, V69]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7, 0x155, V69]

================================

Block 0x475
[0x475:0x475]
---
Predecessors: [0x433]
Successors: [0x476]
---
0x475 JUMPDEST
---
0x475: JUMPDEST 
---
Entry stack: [V7, 0x155, V69]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x155, V69]

================================

Block 0x476
[0x476:0x478]
---
Predecessors: [0x475]
Successors: [0x155]
---
0x476 JUMPDEST
0x477 POP
0x478 JUMP
---
0x476: JUMPDEST 
0x478: JUMP 0x155
---
Entry stack: [V7, 0x155, V69]
Stack pops: 2
Stack additions: []
Exit stack: [V7]

================================

Block 0x479
[0x479:0x4af]
---
Predecessors: []
Successors: [0x4b0]
---
0x479 STOP
0x47a LOG1
0x47b PUSH6 0x627a7a723058
0x482 SHA3
0x483 MISSING 0x22
0x484 MISSING 0xea
0x485 JUMPDEST
0x486 DUP6
0x487 PUSH27 0x57cef0f6031ea710c527f38652c5cbdc185cc2ab5677a7b91222c6
0x4a3 STOP
0x4a4 MISSING 0x29
0x4a5 PUSH1 0x60
0x4a7 PUSH1 0x40
0x4a9 MSTORE
0x4aa CALLDATASIZE
0x4ab ISZERO
0x4ac PUSH2 0x76
0x4af JUMPI
---
0x479: STOP 
0x47a: LOG S0 S1 S2
0x47b: V219 = 0x627a7a723058
0x482: V220 = SHA3 0x627a7a723058 S3
0x483: MISSING 0x22
0x484: MISSING 0xea
0x485: JUMPDEST 
0x487: V221 = 0x57cef0f6031ea710c527f38652c5cbdc185cc2ab5677a7b91222c6
0x4a3: STOP 
0x4a4: MISSING 0x29
0x4a5: V222 = 0x60
0x4a7: V223 = 0x40
0x4a9: M[0x40] = 0x60
0x4aa: V224 = CALLDATASIZE
0x4ab: V225 = ISZERO V224
0x4ac: V226 = 0x76
0x4af: THROWI V225
---
Entry stack: []
Stack pops: 0
Stack additions: [V220, 0x57cef0f6031ea710c527f38652c5cbdc185cc2ab5677a7b91222c6, S5, S0, S1, S2, S3, S4, S5]
Exit stack: []

================================

Block 0x4b0
[0x4b0:0x4e3]
---
Predecessors: [0x479]
Successors: [0x4e4]
---
0x4b0 PUSH1 0x0
0x4b2 CALLDATALOAD
0x4b3 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x4d1 SWAP1
0x4d2 DIV
0x4d3 PUSH4 0xffffffff
0x4d8 AND
0x4d9 DUP1
0x4da PUSH4 0x79ba5097
0x4df EQ
0x4e0 PUSH2 0x7b
0x4e3 JUMPI
---
0x4b0: V227 = 0x0
0x4b2: V228 = CALLDATALOAD 0x0
0x4b3: V229 = 0x100000000000000000000000000000000000000000000000000000000
0x4d2: V230 = DIV V228 0x100000000000000000000000000000000000000000000000000000000
0x4d3: V231 = 0xffffffff
0x4d8: V232 = AND 0xffffffff V230
0x4da: V233 = 0x79ba5097
0x4df: V234 = EQ 0x79ba5097 V232
0x4e0: V235 = 0x7b
0x4e3: THROWI V234
---
Entry stack: []
Stack pops: 0
Stack additions: [V232]
Exit stack: [V232]

================================

Block 0x4e4
[0x4e4:0x4ee]
---
Predecessors: [0x4b0]
Successors: [0x4ef]
---
0x4e4 DUP1
0x4e5 PUSH4 0x8da5cb5b
0x4ea EQ
0x4eb PUSH2 0x90
0x4ee JUMPI
---
0x4e5: V236 = 0x8da5cb5b
0x4ea: V237 = EQ 0x8da5cb5b V232
0x4eb: V238 = 0x90
0x4ee: THROWI V237
---
Entry stack: [V232]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V232]

================================

Block 0x4ef
[0x4ef:0x4f9]
---
Predecessors: [0x4e4]
Successors: [0x4fa]
---
0x4ef DUP1
0x4f0 PUSH4 0xaad41a41
0x4f5 EQ
0x4f6 PUSH2 0xe5
0x4f9 JUMPI
---
0x4f0: V239 = 0xaad41a41
0x4f5: V240 = EQ 0xaad41a41 V232
0x4f6: V241 = 0xe5
0x4f9: THROWI V240
---
Entry stack: [V232]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V232]

================================

Block 0x4fa
[0x4fa:0x504]
---
Predecessors: [0x4ef]
Successors: [0x505]
---
0x4fa DUP1
0x4fb PUSH4 0xd4ee1d90
0x500 EQ
0x501 PUSH2 0x193
0x504 JUMPI
---
0x4fb: V242 = 0xd4ee1d90
0x500: V243 = EQ 0xd4ee1d90 V232
0x501: V244 = 0x193
0x504: THROWI V243
---
Entry stack: [V232]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V232]

================================

Block 0x505
[0x505:0x50f]
---
Predecessors: [0x4fa]
Successors: [0x510]
---
0x505 DUP1
0x506 PUSH4 0xf2fde38b
0x50b EQ
0x50c PUSH2 0x1e8
0x50f JUMPI
---
0x506: V245 = 0xf2fde38b
0x50b: V246 = EQ 0xf2fde38b V232
0x50c: V247 = 0x1e8
0x50f: THROWI V246
---
Entry stack: [V232]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V232]

================================

Block 0x510
[0x510:0x51a]
---
Predecessors: [0x505]
Successors: [0x51b]
---
0x510 DUP1
0x511 PUSH4 0xfd3c1c43
0x516 EQ
0x517 PUSH2 0x221
0x51a JUMPI
---
0x511: V248 = 0xfd3c1c43
0x516: V249 = EQ 0xfd3c1c43 V232
0x517: V250 = 0x221
0x51a: THROWI V249
---
Entry stack: [V232]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V232]

================================

Block 0x51b
[0x51b:0x526]
---
Predecessors: [0x510]
Successors: [0x527]
---
0x51b JUMPDEST
0x51c PUSH1 0x0
0x51e DUP1
0x51f REVERT
0x520 JUMPDEST
0x521 CALLVALUE
0x522 ISZERO
0x523 PUSH2 0x86
0x526 JUMPI
---
0x51b: JUMPDEST 
0x51c: V251 = 0x0
0x51f: REVERT 0x0 0x0
0x520: JUMPDEST 
0x521: V252 = CALLVALUE
0x522: V253 = ISZERO V252
0x523: V254 = 0x86
0x526: THROWI V253
---
Entry stack: [V232]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x527
[0x527:0x53b]
---
Predecessors: [0x51b]
Successors: [0x53c]
---
0x527 PUSH1 0x0
0x529 DUP1
0x52a REVERT
0x52b JUMPDEST
0x52c PUSH2 0x8e
0x52f PUSH2 0x276
0x532 JUMP
0x533 JUMPDEST
0x534 STOP
0x535 JUMPDEST
0x536 CALLVALUE
0x537 ISZERO
0x538 PUSH2 0x9b
0x53b JUMPI
---
0x527: V255 = 0x0
0x52a: REVERT 0x0 0x0
0x52b: JUMPDEST 
0x52c: V256 = 0x8e
0x52f: V257 = 0x276
0x532: THROW 
0x533: JUMPDEST 
0x534: STOP 
0x535: JUMPDEST 
0x536: V258 = CALLVALUE
0x537: V259 = ISZERO V258
0x538: V260 = 0x9b
0x53b: THROWI V259
---
Entry stack: []
Stack pops: 0
Stack additions: [0x8e]
Exit stack: []

================================

Block 0x53c
[0x53c:0x590]
---
Predecessors: [0x527]
Successors: [0x591]
---
0x53c PUSH1 0x0
0x53e DUP1
0x53f REVERT
0x540 JUMPDEST
0x541 PUSH2 0xa3
0x544 PUSH2 0x453
0x547 JUMP
0x548 JUMPDEST
0x549 PUSH1 0x40
0x54b MLOAD
0x54c DUP1
0x54d DUP3
0x54e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x563 AND
0x564 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x579 AND
0x57a DUP2
0x57b MSTORE
0x57c PUSH1 0x20
0x57e ADD
0x57f SWAP2
0x580 POP
0x581 POP
0x582 PUSH1 0x40
0x584 MLOAD
0x585 DUP1
0x586 SWAP2
0x587 SUB
0x588 SWAP1
0x589 RETURN
0x58a JUMPDEST
0x58b CALLVALUE
0x58c ISZERO
0x58d PUSH2 0xf0
0x590 JUMPI
---
0x53c: V261 = 0x0
0x53f: REVERT 0x0 0x0
0x540: JUMPDEST 
0x541: V262 = 0xa3
0x544: V263 = 0x453
0x547: THROW 
0x548: JUMPDEST 
0x549: V264 = 0x40
0x54b: V265 = M[0x40]
0x54e: V266 = 0xffffffffffffffffffffffffffffffffffffffff
0x563: V267 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x564: V268 = 0xffffffffffffffffffffffffffffffffffffffff
0x579: V269 = AND 0xffffffffffffffffffffffffffffffffffffffff V267
0x57b: M[V265] = V269
0x57c: V270 = 0x20
0x57e: V271 = ADD 0x20 V265
0x582: V272 = 0x40
0x584: V273 = M[0x40]
0x587: V274 = SUB V271 V273
0x589: RETURN V273 V274
0x58a: JUMPDEST 
0x58b: V275 = CALLVALUE
0x58c: V276 = ISZERO V275
0x58d: V277 = 0xf0
0x590: THROWI V276
---
Entry stack: []
Stack pops: 0
Stack additions: [0xa3]
Exit stack: []

================================

Block 0x591
[0x591:0x63e]
---
Predecessors: [0x53c]
Successors: [0x63f]
---
0x591 PUSH1 0x0
0x593 DUP1
0x594 REVERT
0x595 JUMPDEST
0x596 PUSH2 0x17d
0x599 PUSH1 0x4
0x59b DUP1
0x59c DUP1
0x59d CALLDATALOAD
0x59e SWAP1
0x59f PUSH1 0x20
0x5a1 ADD
0x5a2 SWAP1
0x5a3 DUP3
0x5a4 ADD
0x5a5 DUP1
0x5a6 CALLDATALOAD
0x5a7 SWAP1
0x5a8 PUSH1 0x20
0x5aa ADD
0x5ab SWAP1
0x5ac DUP1
0x5ad DUP1
0x5ae PUSH1 0x20
0x5b0 MUL
0x5b1 PUSH1 0x20
0x5b3 ADD
0x5b4 PUSH1 0x40
0x5b6 MLOAD
0x5b7 SWAP1
0x5b8 DUP2
0x5b9 ADD
0x5ba PUSH1 0x40
0x5bc MSTORE
0x5bd DUP1
0x5be SWAP4
0x5bf SWAP3
0x5c0 SWAP2
0x5c1 SWAP1
0x5c2 DUP2
0x5c3 DUP2
0x5c4 MSTORE
0x5c5 PUSH1 0x20
0x5c7 ADD
0x5c8 DUP4
0x5c9 DUP4
0x5ca PUSH1 0x20
0x5cc MUL
0x5cd DUP1
0x5ce DUP3
0x5cf DUP5
0x5d0 CALLDATACOPY
0x5d1 DUP3
0x5d2 ADD
0x5d3 SWAP2
0x5d4 POP
0x5d5 POP
0x5d6 POP
0x5d7 POP
0x5d8 POP
0x5d9 POP
0x5da SWAP2
0x5db SWAP1
0x5dc DUP1
0x5dd CALLDATALOAD
0x5de SWAP1
0x5df PUSH1 0x20
0x5e1 ADD
0x5e2 SWAP1
0x5e3 DUP3
0x5e4 ADD
0x5e5 DUP1
0x5e6 CALLDATALOAD
0x5e7 SWAP1
0x5e8 PUSH1 0x20
0x5ea ADD
0x5eb SWAP1
0x5ec DUP1
0x5ed DUP1
0x5ee PUSH1 0x20
0x5f0 MUL
0x5f1 PUSH1 0x20
0x5f3 ADD
0x5f4 PUSH1 0x40
0x5f6 MLOAD
0x5f7 SWAP1
0x5f8 DUP2
0x5f9 ADD
0x5fa PUSH1 0x40
0x5fc MSTORE
0x5fd DUP1
0x5fe SWAP4
0x5ff SWAP3
0x600 SWAP2
0x601 SWAP1
0x602 DUP2
0x603 DUP2
0x604 MSTORE
0x605 PUSH1 0x20
0x607 ADD
0x608 DUP4
0x609 DUP4
0x60a PUSH1 0x20
0x60c MUL
0x60d DUP1
0x60e DUP3
0x60f DUP5
0x610 CALLDATACOPY
0x611 DUP3
0x612 ADD
0x613 SWAP2
0x614 POP
0x615 POP
0x616 POP
0x617 POP
0x618 POP
0x619 POP
0x61a SWAP2
0x61b SWAP1
0x61c POP
0x61d POP
0x61e PUSH2 0x478
0x621 JUMP
0x622 JUMPDEST
0x623 PUSH1 0x40
0x625 MLOAD
0x626 DUP1
0x627 DUP3
0x628 DUP2
0x629 MSTORE
0x62a PUSH1 0x20
0x62c ADD
0x62d SWAP2
0x62e POP
0x62f POP
0x630 PUSH1 0x40
0x632 MLOAD
0x633 DUP1
0x634 SWAP2
0x635 SUB
0x636 SWAP1
0x637 RETURN
0x638 JUMPDEST
0x639 CALLVALUE
0x63a ISZERO
0x63b PUSH2 0x19e
0x63e JUMPI
---
0x591: V278 = 0x0
0x594: REVERT 0x0 0x0
0x595: JUMPDEST 
0x596: V279 = 0x17d
0x599: V280 = 0x4
0x59d: V281 = CALLDATALOAD 0x4
0x59f: V282 = 0x20
0x5a1: V283 = ADD 0x20 0x4
0x5a4: V284 = ADD 0x4 V281
0x5a6: V285 = CALLDATALOAD V284
0x5a8: V286 = 0x20
0x5aa: V287 = ADD 0x20 V284
0x5ae: V288 = 0x20
0x5b0: V289 = MUL 0x20 V285
0x5b1: V290 = 0x20
0x5b3: V291 = ADD 0x20 V289
0x5b4: V292 = 0x40
0x5b6: V293 = M[0x40]
0x5b9: V294 = ADD V293 V291
0x5ba: V295 = 0x40
0x5bc: M[0x40] = V294
0x5c4: M[V293] = V285
0x5c5: V296 = 0x20
0x5c7: V297 = ADD 0x20 V293
0x5ca: V298 = 0x20
0x5cc: V299 = MUL 0x20 V285
0x5d0: CALLDATACOPY V297 V287 V299
0x5d2: V300 = ADD V297 V299
0x5dd: V301 = CALLDATALOAD 0x24
0x5df: V302 = 0x20
0x5e1: V303 = ADD 0x20 0x24
0x5e4: V304 = ADD 0x4 V301
0x5e6: V305 = CALLDATALOAD V304
0x5e8: V306 = 0x20
0x5ea: V307 = ADD 0x20 V304
0x5ee: V308 = 0x20
0x5f0: V309 = MUL 0x20 V305
0x5f1: V310 = 0x20
0x5f3: V311 = ADD 0x20 V309
0x5f4: V312 = 0x40
0x5f6: V313 = M[0x40]
0x5f9: V314 = ADD V313 V311
0x5fa: V315 = 0x40
0x5fc: M[0x40] = V314
0x604: M[V313] = V305
0x605: V316 = 0x20
0x607: V317 = ADD 0x20 V313
0x60a: V318 = 0x20
0x60c: V319 = MUL 0x20 V305
0x610: CALLDATACOPY V317 V307 V319
0x612: V320 = ADD V317 V319
0x61e: V321 = 0x478
0x621: THROW 
0x622: JUMPDEST 
0x623: V322 = 0x40
0x625: V323 = M[0x40]
0x629: M[V323] = S0
0x62a: V324 = 0x20
0x62c: V325 = ADD 0x20 V323
0x630: V326 = 0x40
0x632: V327 = M[0x40]
0x635: V328 = SUB V325 V327
0x637: RETURN V327 V328
0x638: JUMPDEST 
0x639: V329 = CALLVALUE
0x63a: V330 = ISZERO V329
0x63b: V331 = 0x19e
0x63e: THROWI V330
---
Entry stack: []
Stack pops: 0
Stack additions: [V313, V293, 0x17d]
Exit stack: []

================================

Block 0x63f
[0x63f:0x693]
---
Predecessors: [0x591]
Successors: [0x694]
---
0x63f PUSH1 0x0
0x641 DUP1
0x642 REVERT
0x643 JUMPDEST
0x644 PUSH2 0x1a6
0x647 PUSH2 0x60a
0x64a JUMP
0x64b JUMPDEST
0x64c PUSH1 0x40
0x64e MLOAD
0x64f DUP1
0x650 DUP3
0x651 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x666 AND
0x667 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x67c AND
0x67d DUP2
0x67e MSTORE
0x67f PUSH1 0x20
0x681 ADD
0x682 SWAP2
0x683 POP
0x684 POP
0x685 PUSH1 0x40
0x687 MLOAD
0x688 DUP1
0x689 SWAP2
0x68a SUB
0x68b SWAP1
0x68c RETURN
0x68d JUMPDEST
0x68e CALLVALUE
0x68f ISZERO
0x690 PUSH2 0x1f3
0x693 JUMPI
---
0x63f: V332 = 0x0
0x642: REVERT 0x0 0x0
0x643: JUMPDEST 
0x644: V333 = 0x1a6
0x647: V334 = 0x60a
0x64a: THROW 
0x64b: JUMPDEST 
0x64c: V335 = 0x40
0x64e: V336 = M[0x40]
0x651: V337 = 0xffffffffffffffffffffffffffffffffffffffff
0x666: V338 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x667: V339 = 0xffffffffffffffffffffffffffffffffffffffff
0x67c: V340 = AND 0xffffffffffffffffffffffffffffffffffffffff V338
0x67e: M[V336] = V340
0x67f: V341 = 0x20
0x681: V342 = ADD 0x20 V336
0x685: V343 = 0x40
0x687: V344 = M[0x40]
0x68a: V345 = SUB V342 V344
0x68c: RETURN V344 V345
0x68d: JUMPDEST 
0x68e: V346 = CALLVALUE
0x68f: V347 = ISZERO V346
0x690: V348 = 0x1f3
0x693: THROWI V347
---
Entry stack: []
Stack pops: 0
Stack additions: [0x1a6]
Exit stack: []

================================

Block 0x694
[0x694:0x6cc]
---
Predecessors: [0x63f]
Successors: [0x6cd]
---
0x694 PUSH1 0x0
0x696 DUP1
0x697 REVERT
0x698 JUMPDEST
0x699 PUSH2 0x21f
0x69c PUSH1 0x4
0x69e DUP1
0x69f DUP1
0x6a0 CALLDATALOAD
0x6a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6b6 AND
0x6b7 SWAP1
0x6b8 PUSH1 0x20
0x6ba ADD
0x6bb SWAP1
0x6bc SWAP2
0x6bd SWAP1
0x6be POP
0x6bf POP
0x6c0 PUSH2 0x630
0x6c3 JUMP
0x6c4 JUMPDEST
0x6c5 STOP
0x6c6 JUMPDEST
0x6c7 CALLVALUE
0x6c8 ISZERO
0x6c9 PUSH2 0x22c
0x6cc JUMPI
---
0x694: V349 = 0x0
0x697: REVERT 0x0 0x0
0x698: JUMPDEST 
0x699: V350 = 0x21f
0x69c: V351 = 0x4
0x6a0: V352 = CALLDATALOAD 0x4
0x6a1: V353 = 0xffffffffffffffffffffffffffffffffffffffff
0x6b6: V354 = AND 0xffffffffffffffffffffffffffffffffffffffff V352
0x6b8: V355 = 0x20
0x6ba: V356 = ADD 0x20 0x4
0x6c0: V357 = 0x630
0x6c3: THROW 
0x6c4: JUMPDEST 
0x6c5: STOP 
0x6c6: JUMPDEST 
0x6c7: V358 = CALLVALUE
0x6c8: V359 = ISZERO V358
0x6c9: V360 = 0x22c
0x6cc: THROWI V359
---
Entry stack: []
Stack pops: 0
Stack additions: [V354, 0x21f]
Exit stack: []

================================

Block 0x6cd
[0x6cd:0x772]
---
Predecessors: [0x694]
Successors: [0x773]
---
0x6cd PUSH1 0x0
0x6cf DUP1
0x6d0 REVERT
0x6d1 JUMPDEST
0x6d2 PUSH2 0x234
0x6d5 PUSH2 0x72a
0x6d8 JUMP
0x6d9 JUMPDEST
0x6da PUSH1 0x40
0x6dc MLOAD
0x6dd DUP1
0x6de DUP3
0x6df PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6f4 AND
0x6f5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x70a AND
0x70b DUP2
0x70c MSTORE
0x70d PUSH1 0x20
0x70f ADD
0x710 SWAP2
0x711 POP
0x712 POP
0x713 PUSH1 0x40
0x715 MLOAD
0x716 DUP1
0x717 SWAP2
0x718 SUB
0x719 SWAP1
0x71a RETURN
0x71b JUMPDEST
0x71c PUSH1 0x1
0x71e PUSH1 0x0
0x720 SWAP1
0x721 SLOAD
0x722 SWAP1
0x723 PUSH2 0x100
0x726 EXP
0x727 SWAP1
0x728 DIV
0x729 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x73e AND
0x73f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x754 AND
0x755 CALLER
0x756 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x76b AND
0x76c EQ
0x76d ISZERO
0x76e ISZERO
0x76f PUSH2 0x2d2
0x772 JUMPI
---
0x6cd: V361 = 0x0
0x6d0: REVERT 0x0 0x0
0x6d1: JUMPDEST 
0x6d2: V362 = 0x234
0x6d5: V363 = 0x72a
0x6d8: THROW 
0x6d9: JUMPDEST 
0x6da: V364 = 0x40
0x6dc: V365 = M[0x40]
0x6df: V366 = 0xffffffffffffffffffffffffffffffffffffffff
0x6f4: V367 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x6f5: V368 = 0xffffffffffffffffffffffffffffffffffffffff
0x70a: V369 = AND 0xffffffffffffffffffffffffffffffffffffffff V367
0x70c: M[V365] = V369
0x70d: V370 = 0x20
0x70f: V371 = ADD 0x20 V365
0x713: V372 = 0x40
0x715: V373 = M[0x40]
0x718: V374 = SUB V371 V373
0x71a: RETURN V373 V374
0x71b: JUMPDEST 
0x71c: V375 = 0x1
0x71e: V376 = 0x0
0x721: V377 = S[0x1]
0x723: V378 = 0x100
0x726: V379 = EXP 0x100 0x0
0x728: V380 = DIV V377 0x1
0x729: V381 = 0xffffffffffffffffffffffffffffffffffffffff
0x73e: V382 = AND 0xffffffffffffffffffffffffffffffffffffffff V380
0x73f: V383 = 0xffffffffffffffffffffffffffffffffffffffff
0x754: V384 = AND 0xffffffffffffffffffffffffffffffffffffffff V382
0x755: V385 = CALLER
0x756: V386 = 0xffffffffffffffffffffffffffffffffffffffff
0x76b: V387 = AND 0xffffffffffffffffffffffffffffffffffffffff V385
0x76c: V388 = EQ V387 V384
0x76d: V389 = ISZERO V388
0x76e: V390 = ISZERO V389
0x76f: V391 = 0x2d2
0x772: THROWI V390
---
Entry stack: []
Stack pops: 0
Stack additions: [0x234]
Exit stack: []

================================

Block 0x773
[0x773:0x8f5]
---
Predecessors: [0x6cd]
Successors: [0x8f6]
---
0x773 PUSH1 0x0
0x775 DUP1
0x776 REVERT
0x777 JUMPDEST
0x778 PUSH32 0x343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a
0x799 PUSH1 0x0
0x79b DUP1
0x79c SWAP1
0x79d SLOAD
0x79e SWAP1
0x79f PUSH2 0x100
0x7a2 EXP
0x7a3 SWAP1
0x7a4 DIV
0x7a5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7ba AND
0x7bb PUSH1 0x1
0x7bd PUSH1 0x0
0x7bf SWAP1
0x7c0 SLOAD
0x7c1 SWAP1
0x7c2 PUSH2 0x100
0x7c5 EXP
0x7c6 SWAP1
0x7c7 DIV
0x7c8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7dd AND
0x7de PUSH1 0x40
0x7e0 MLOAD
0x7e1 DUP1
0x7e2 DUP4
0x7e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7f8 AND
0x7f9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x80e AND
0x80f DUP2
0x810 MSTORE
0x811 PUSH1 0x20
0x813 ADD
0x814 DUP3
0x815 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x82a AND
0x82b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x840 AND
0x841 DUP2
0x842 MSTORE
0x843 PUSH1 0x20
0x845 ADD
0x846 SWAP3
0x847 POP
0x848 POP
0x849 POP
0x84a PUSH1 0x40
0x84c MLOAD
0x84d DUP1
0x84e SWAP2
0x84f SUB
0x850 SWAP1
0x851 LOG1
0x852 PUSH1 0x1
0x854 PUSH1 0x0
0x856 SWAP1
0x857 SLOAD
0x858 SWAP1
0x859 PUSH2 0x100
0x85c EXP
0x85d SWAP1
0x85e DIV
0x85f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x874 AND
0x875 PUSH1 0x0
0x877 DUP1
0x878 PUSH2 0x100
0x87b EXP
0x87c DUP2
0x87d SLOAD
0x87e DUP2
0x87f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x894 MUL
0x895 NOT
0x896 AND
0x897 SWAP1
0x898 DUP4
0x899 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8ae AND
0x8af MUL
0x8b0 OR
0x8b1 SWAP1
0x8b2 SSTORE
0x8b3 POP
0x8b4 PUSH1 0x0
0x8b6 PUSH1 0x1
0x8b8 PUSH1 0x0
0x8ba PUSH2 0x100
0x8bd EXP
0x8be DUP2
0x8bf SLOAD
0x8c0 DUP2
0x8c1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8d6 MUL
0x8d7 NOT
0x8d8 AND
0x8d9 SWAP1
0x8da DUP4
0x8db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8f0 AND
0x8f1 MUL
0x8f2 OR
0x8f3 SWAP1
0x8f4 SSTORE
0x8f5 POP
---
0x773: V392 = 0x0
0x776: REVERT 0x0 0x0
0x777: JUMPDEST 
0x778: V393 = 0x343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a
0x799: V394 = 0x0
0x79d: V395 = S[0x0]
0x79f: V396 = 0x100
0x7a2: V397 = EXP 0x100 0x0
0x7a4: V398 = DIV V395 0x1
0x7a5: V399 = 0xffffffffffffffffffffffffffffffffffffffff
0x7ba: V400 = AND 0xffffffffffffffffffffffffffffffffffffffff V398
0x7bb: V401 = 0x1
0x7bd: V402 = 0x0
0x7c0: V403 = S[0x1]
0x7c2: V404 = 0x100
0x7c5: V405 = EXP 0x100 0x0
0x7c7: V406 = DIV V403 0x1
0x7c8: V407 = 0xffffffffffffffffffffffffffffffffffffffff
0x7dd: V408 = AND 0xffffffffffffffffffffffffffffffffffffffff V406
0x7de: V409 = 0x40
0x7e0: V410 = M[0x40]
0x7e3: V411 = 0xffffffffffffffffffffffffffffffffffffffff
0x7f8: V412 = AND 0xffffffffffffffffffffffffffffffffffffffff V400
0x7f9: V413 = 0xffffffffffffffffffffffffffffffffffffffff
0x80e: V414 = AND 0xffffffffffffffffffffffffffffffffffffffff V412
0x810: M[V410] = V414
0x811: V415 = 0x20
0x813: V416 = ADD 0x20 V410
0x815: V417 = 0xffffffffffffffffffffffffffffffffffffffff
0x82a: V418 = AND 0xffffffffffffffffffffffffffffffffffffffff V408
0x82b: V419 = 0xffffffffffffffffffffffffffffffffffffffff
0x840: V420 = AND 0xffffffffffffffffffffffffffffffffffffffff V418
0x842: M[V416] = V420
0x843: V421 = 0x20
0x845: V422 = ADD 0x20 V416
0x84a: V423 = 0x40
0x84c: V424 = M[0x40]
0x84f: V425 = SUB V422 V424
0x851: LOG V424 V425 0x343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a
0x852: V426 = 0x1
0x854: V427 = 0x0
0x857: V428 = S[0x1]
0x859: V429 = 0x100
0x85c: V430 = EXP 0x100 0x0
0x85e: V431 = DIV V428 0x1
0x85f: V432 = 0xffffffffffffffffffffffffffffffffffffffff
0x874: V433 = AND 0xffffffffffffffffffffffffffffffffffffffff V431
0x875: V434 = 0x0
0x878: V435 = 0x100
0x87b: V436 = EXP 0x100 0x0
0x87d: V437 = S[0x0]
0x87f: V438 = 0xffffffffffffffffffffffffffffffffffffffff
0x894: V439 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x895: V440 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x896: V441 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V437
0x899: V442 = 0xffffffffffffffffffffffffffffffffffffffff
0x8ae: V443 = AND 0xffffffffffffffffffffffffffffffffffffffff V433
0x8af: V444 = MUL V443 0x1
0x8b0: V445 = OR V444 V441
0x8b2: S[0x0] = V445
0x8b4: V446 = 0x0
0x8b6: V447 = 0x1
0x8b8: V448 = 0x0
0x8ba: V449 = 0x100
0x8bd: V450 = EXP 0x100 0x0
0x8bf: V451 = S[0x1]
0x8c1: V452 = 0xffffffffffffffffffffffffffffffffffffffff
0x8d6: V453 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x8d7: V454 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x8d8: V455 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V451
0x8db: V456 = 0xffffffffffffffffffffffffffffffffffffffff
0x8f0: V457 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x8f1: V458 = MUL 0x0 0x1
0x8f2: V459 = OR 0x0 V455
0x8f4: S[0x1] = V459
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x8f6
[0x8f6:0x976]
---
Predecessors: [0x773]
Successors: [0x977]
---
0x8f6 JUMPDEST
0x8f7 JUMP
0x8f8 JUMPDEST
0x8f9 PUSH1 0x0
0x8fb DUP1
0x8fc SWAP1
0x8fd SLOAD
0x8fe SWAP1
0x8ff PUSH2 0x100
0x902 EXP
0x903 SWAP1
0x904 DIV
0x905 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x91a AND
0x91b DUP2
0x91c JUMP
0x91d JUMPDEST
0x91e PUSH1 0x0
0x920 DUP1
0x921 PUSH1 0x0
0x923 DUP1
0x924 SWAP1
0x925 SLOAD
0x926 SWAP1
0x927 PUSH2 0x100
0x92a EXP
0x92b SWAP1
0x92c DIV
0x92d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x942 AND
0x943 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x958 AND
0x959 CALLER
0x95a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x96f AND
0x970 EQ
0x971 ISZERO
0x972 ISZERO
0x973 PUSH2 0x4d3
0x976 JUMPI
---
0x8f6: JUMPDEST 
0x8f7: JUMP S0
0x8f8: JUMPDEST 
0x8f9: V460 = 0x0
0x8fd: V461 = S[0x0]
0x8ff: V462 = 0x100
0x902: V463 = EXP 0x100 0x0
0x904: V464 = DIV V461 0x1
0x905: V465 = 0xffffffffffffffffffffffffffffffffffffffff
0x91a: V466 = AND 0xffffffffffffffffffffffffffffffffffffffff V464
0x91c: JUMP S0
0x91d: JUMPDEST 
0x91e: V467 = 0x0
0x921: V468 = 0x0
0x925: V469 = S[0x0]
0x927: V470 = 0x100
0x92a: V471 = EXP 0x100 0x0
0x92c: V472 = DIV V469 0x1
0x92d: V473 = 0xffffffffffffffffffffffffffffffffffffffff
0x942: V474 = AND 0xffffffffffffffffffffffffffffffffffffffff V472
0x943: V475 = 0xffffffffffffffffffffffffffffffffffffffff
0x958: V476 = AND 0xffffffffffffffffffffffffffffffffffffffff V474
0x959: V477 = CALLER
0x95a: V478 = 0xffffffffffffffffffffffffffffffffffffffff
0x96f: V479 = AND 0xffffffffffffffffffffffffffffffffffffffff V477
0x970: V480 = EQ V479 V476
0x971: V481 = ISZERO V480
0x972: V482 = ISZERO V481
0x973: V483 = 0x4d3
0x976: THROWI V482
---
Entry stack: []
Stack pops: 2
Stack additions: [0x0, 0x0]
Exit stack: []

================================

Block 0x977
[0x977:0x987]
---
Predecessors: [0x8f6]
Successors: [0x988]
---
0x977 INVALID
0x978 JUMPDEST
0x979 PUSH1 0x0
0x97b SWAP1
0x97c POP
0x97d DUP3
0x97e MLOAD
0x97f DUP5
0x980 MLOAD
0x981 EQ
0x982 ISZERO
0x983 ISZERO
0x984 PUSH2 0x4e7
0x987 JUMPI
---
0x977: INVALID 
0x978: JUMPDEST 
0x979: V484 = 0x0
0x97e: V485 = M[S2]
0x980: V486 = M[S3]
0x981: V487 = EQ V486 V485
0x982: V488 = ISZERO V487
0x983: V489 = ISZERO V488
0x984: V490 = 0x4e7
0x987: THROWI V489
---
Entry stack: [0x0, 0x0]
Stack pops: 0
Stack additions: [0x0, S1, S2, S3]
Exit stack: []

================================

Block 0x988
[0x988:0x98c]
---
Predecessors: [0x977]
Successors: [0x98d]
---
0x988 PUSH1 0x0
0x98a DUP1
0x98b REVERT
0x98c JUMPDEST
---
0x988: V491 = 0x0
0x98b: REVERT 0x0 0x0
0x98c: JUMPDEST 
---
Entry stack: [S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x98d
[0x98d:0x996]
---
Predecessors: [0x988]
Successors: [0x997]
---
0x98d JUMPDEST
0x98e DUP4
0x98f MLOAD
0x990 DUP2
0x991 LT
0x992 ISZERO
0x993 PUSH2 0x5fe
0x996 JUMPI
---
0x98d: JUMPDEST 
0x98f: V492 = M[S3]
0x991: V493 = LT S0 V492
0x992: V494 = ISZERO V493
0x993: V495 = 0x5fe
0x996: THROWI V494
---
Entry stack: []
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S3, S2, S1, S0]

================================

Block 0x997
[0x997:0x9d2]
---
Predecessors: [0x98d]
Successors: [0x9d3]
---
0x997 PUSH20 0x728781e75735dc0962df3a51d7ef47e798a7107e
0x9ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9c1 AND
0x9c2 PUSH4 0xa9059cbb
0x9c7 DUP6
0x9c8 DUP4
0x9c9 DUP2
0x9ca MLOAD
0x9cb DUP2
0x9cc LT
0x9cd ISZERO
0x9ce ISZERO
0x9cf PUSH2 0x52f
0x9d2 JUMPI
---
0x997: V496 = 0x728781e75735dc0962df3a51d7ef47e798a7107e
0x9ac: V497 = 0xffffffffffffffffffffffffffffffffffffffff
0x9c1: V498 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x728781e75735dc0962df3a51d7ef47e798a7107e
0x9c2: V499 = 0xa9059cbb
0x9ca: V500 = M[S3]
0x9cc: V501 = LT S0 V500
0x9cd: V502 = ISZERO V501
0x9ce: V503 = ISZERO V502
0x9cf: V504 = 0x52f
0x9d2: THROWI V503
---
Entry stack: [S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x728781e75735dc0962df3a51d7ef47e798a7107e, 0xa9059cbb, S3, S0]
Exit stack: [S3, S2, S1, S0, 0x728781e75735dc0962df3a51d7ef47e798a7107e, 0xa9059cbb, S3, S0]

================================

Block 0x9d3
[0x9d3:0x9f3]
---
Predecessors: [0x997]
Successors: [0x9f4]
---
0x9d3 INVALID
0x9d4 JUMPDEST
0x9d5 SWAP1
0x9d6 PUSH1 0x20
0x9d8 ADD
0x9d9 SWAP1
0x9da PUSH1 0x20
0x9dc MUL
0x9dd ADD
0x9de MLOAD
0x9df PUSH8 0xde0b6b3a7640000
0x9e8 DUP7
0x9e9 DUP6
0x9ea DUP2
0x9eb MLOAD
0x9ec DUP2
0x9ed LT
0x9ee ISZERO
0x9ef ISZERO
0x9f0 PUSH2 0x550
0x9f3 JUMPI
---
0x9d3: INVALID 
0x9d4: JUMPDEST 
0x9d6: V505 = 0x20
0x9d8: V506 = ADD 0x20 S1
0x9da: V507 = 0x20
0x9dc: V508 = MUL 0x20 S0
0x9dd: V509 = ADD V508 V506
0x9de: V510 = M[V509]
0x9df: V511 = 0xde0b6b3a7640000
0x9eb: V512 = M[S6]
0x9ed: V513 = LT S4 V512
0x9ee: V514 = ISZERO V513
0x9ef: V515 = ISZERO V514
0x9f0: V516 = 0x550
0x9f3: THROWI V515
---
Entry stack: [S7, S6, S5, S4, 0x728781e75735dc0962df3a51d7ef47e798a7107e, 0xa9059cbb, S1, S0]
Stack pops: 0
Stack additions: [S4, S6, 0xde0b6b3a7640000, V510, S2, S3, S4, S5, S6]
Exit stack: []

================================

Block 0x9f4
[0x9f4:0xa7f]
---
Predecessors: [0x9d3]
Successors: [0xa80]
---
0x9f4 INVALID
0x9f5 JUMPDEST
0x9f6 SWAP1
0x9f7 PUSH1 0x20
0x9f9 ADD
0x9fa SWAP1
0x9fb PUSH1 0x20
0x9fd MUL
0x9fe ADD
0x9ff MLOAD
0xa00 MUL
0xa01 PUSH1 0x40
0xa03 MLOAD
0xa04 DUP4
0xa05 PUSH4 0xffffffff
0xa0a AND
0xa0b PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xa29 MUL
0xa2a DUP2
0xa2b MSTORE
0xa2c PUSH1 0x4
0xa2e ADD
0xa2f DUP1
0xa30 DUP4
0xa31 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa46 AND
0xa47 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa5c AND
0xa5d DUP2
0xa5e MSTORE
0xa5f PUSH1 0x20
0xa61 ADD
0xa62 DUP3
0xa63 DUP2
0xa64 MSTORE
0xa65 PUSH1 0x20
0xa67 ADD
0xa68 SWAP3
0xa69 POP
0xa6a POP
0xa6b POP
0xa6c PUSH1 0x0
0xa6e PUSH1 0x40
0xa70 MLOAD
0xa71 DUP1
0xa72 DUP4
0xa73 SUB
0xa74 DUP2
0xa75 PUSH1 0x0
0xa77 DUP8
0xa78 DUP1
0xa79 EXTCODESIZE
0xa7a ISZERO
0xa7b ISZERO
0xa7c PUSH2 0x5df
0xa7f JUMPI
---
0x9f4: INVALID 
0x9f5: JUMPDEST 
0x9f7: V517 = 0x20
0x9f9: V518 = ADD 0x20 S1
0x9fb: V519 = 0x20
0x9fd: V520 = MUL 0x20 S0
0x9fe: V521 = ADD V520 V518
0x9ff: V522 = M[V521]
0xa00: V523 = MUL V522 S2
0xa01: V524 = 0x40
0xa03: V525 = M[0x40]
0xa05: V526 = 0xffffffff
0xa0a: V527 = AND 0xffffffff S4
0xa0b: V528 = 0x100000000000000000000000000000000000000000000000000000000
0xa29: V529 = MUL 0x100000000000000000000000000000000000000000000000000000000 V527
0xa2b: M[V525] = V529
0xa2c: V530 = 0x4
0xa2e: V531 = ADD 0x4 V525
0xa31: V532 = 0xffffffffffffffffffffffffffffffffffffffff
0xa46: V533 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xa47: V534 = 0xffffffffffffffffffffffffffffffffffffffff
0xa5c: V535 = AND 0xffffffffffffffffffffffffffffffffffffffff V533
0xa5e: M[V531] = V535
0xa5f: V536 = 0x20
0xa61: V537 = ADD 0x20 V531
0xa64: M[V537] = V523
0xa65: V538 = 0x20
0xa67: V539 = ADD 0x20 V537
0xa6c: V540 = 0x0
0xa6e: V541 = 0x40
0xa70: V542 = M[0x40]
0xa73: V543 = SUB V539 V542
0xa75: V544 = 0x0
0xa79: V545 = EXTCODESIZE S5
0xa7a: V546 = ISZERO V545
0xa7b: V547 = ISZERO V546
0xa7c: V548 = 0x5df
0xa7f: THROWI V547
---
Entry stack: [S8, S7, S6, S5, S4, V510, 0xde0b6b3a7640000, S1, S0]
Stack pops: 0
Stack additions: [S5, 0x0, V542, V543, V542, 0x0, V539, S4, S5]
Exit stack: []

================================

Block 0xa80
[0xa80:0xa90]
---
Predecessors: [0x9f4]
Successors: [0xa91]
---
0xa80 PUSH1 0x0
0xa82 DUP1
0xa83 REVERT
0xa84 JUMPDEST
0xa85 PUSH2 0x2c6
0xa88 GAS
0xa89 SUB
0xa8a CALL
0xa8b ISZERO
0xa8c ISZERO
0xa8d PUSH2 0x5f0
0xa90 JUMPI
---
0xa80: V549 = 0x0
0xa83: REVERT 0x0 0x0
0xa84: JUMPDEST 
0xa85: V550 = 0x2c6
0xa88: V551 = GAS
0xa89: V552 = SUB V551 0x2c6
0xa8a: V553 = CALL V552 S0 S1 S2 S3 S4 S5
0xa8b: V554 = ISZERO V553
0xa8c: V555 = ISZERO V554
0xa8d: V556 = 0x5f0
0xa90: THROWI V555
---
Entry stack: [S8, S7, V539, 0x0, V542, V543, V542, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa91
[0xa91:0xaa6]
---
Predecessors: [0xa80]
Successors: [0xaa7]
---
0xa91 PUSH1 0x0
0xa93 DUP1
0xa94 REVERT
0xa95 JUMPDEST
0xa96 POP
0xa97 POP
0xa98 POP
0xa99 PUSH1 0x1
0xa9b DUP2
0xa9c ADD
0xa9d SWAP1
0xa9e POP
0xa9f PUSH2 0x4e8
0xaa2 JUMP
0xaa3 JUMPDEST
0xaa4 DUP1
0xaa5 SWAP2
0xaa6 POP
---
0xa91: V557 = 0x0
0xa94: REVERT 0x0 0x0
0xa95: JUMPDEST 
0xa99: V558 = 0x1
0xa9c: V559 = ADD S3 0x1
0xa9f: V560 = 0x4e8
0xaa2: THROW 
0xaa3: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: [V559, S0, S0]
Exit stack: []

================================

Block 0xaa7
[0xaa7:0xaa7]
---
Predecessors: [0xa91]
Successors: [0xaa8]
---
0xaa7 JUMPDEST
---
0xaa7: JUMPDEST 
---
Entry stack: [S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S1, S0]

================================

Block 0xaa8
[0xaa8:0xb2b]
---
Predecessors: [0xaa7]
Successors: [0xb2c]
---
0xaa8 JUMPDEST
0xaa9 POP
0xaaa SWAP3
0xaab SWAP2
0xaac POP
0xaad POP
0xaae JUMP
0xaaf JUMPDEST
0xab0 PUSH1 0x1
0xab2 PUSH1 0x0
0xab4 SWAP1
0xab5 SLOAD
0xab6 SWAP1
0xab7 PUSH2 0x100
0xaba EXP
0xabb SWAP1
0xabc DIV
0xabd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xad2 AND
0xad3 DUP2
0xad4 JUMP
0xad5 JUMPDEST
0xad6 PUSH1 0x0
0xad8 DUP1
0xad9 SWAP1
0xada SLOAD
0xadb SWAP1
0xadc PUSH2 0x100
0xadf EXP
0xae0 SWAP1
0xae1 DIV
0xae2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaf7 AND
0xaf8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb0d AND
0xb0e CALLER
0xb0f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb24 AND
0xb25 EQ
0xb26 ISZERO
0xb27 ISZERO
0xb28 PUSH2 0x688
0xb2b JUMPI
---
0xaa8: JUMPDEST 
0xaae: JUMP S4
0xaaf: JUMPDEST 
0xab0: V561 = 0x1
0xab2: V562 = 0x0
0xab5: V563 = S[0x1]
0xab7: V564 = 0x100
0xaba: V565 = EXP 0x100 0x0
0xabc: V566 = DIV V563 0x1
0xabd: V567 = 0xffffffffffffffffffffffffffffffffffffffff
0xad2: V568 = AND 0xffffffffffffffffffffffffffffffffffffffff V566
0xad4: JUMP S0
0xad5: JUMPDEST 
0xad6: V569 = 0x0
0xada: V570 = S[0x0]
0xadc: V571 = 0x100
0xadf: V572 = EXP 0x100 0x0
0xae1: V573 = DIV V570 0x1
0xae2: V574 = 0xffffffffffffffffffffffffffffffffffffffff
0xaf7: V575 = AND 0xffffffffffffffffffffffffffffffffffffffff V573
0xaf8: V576 = 0xffffffffffffffffffffffffffffffffffffffff
0xb0d: V577 = AND 0xffffffffffffffffffffffffffffffffffffffff V575
0xb0e: V578 = CALLER
0xb0f: V579 = 0xffffffffffffffffffffffffffffffffffffffff
0xb24: V580 = AND 0xffffffffffffffffffffffffffffffffffffffff V578
0xb25: V581 = EQ V580 V577
0xb26: V582 = ISZERO V581
0xb27: V583 = ISZERO V582
0xb28: V584 = 0x688
0xb2b: THROWI V583
---
Entry stack: [S1, S0]
Stack pops: 16
Stack additions: []
Exit stack: []

================================

Block 0xb2c
[0xb2c:0xb84]
---
Predecessors: [0xaa8]
Successors: [0xb85]
---
0xb2c INVALID
0xb2d JUMPDEST
0xb2e PUSH1 0x0
0xb30 DUP1
0xb31 SWAP1
0xb32 SLOAD
0xb33 SWAP1
0xb34 PUSH2 0x100
0xb37 EXP
0xb38 SWAP1
0xb39 DIV
0xb3a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb4f AND
0xb50 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb65 AND
0xb66 DUP2
0xb67 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb7c AND
0xb7d EQ
0xb7e ISZERO
0xb7f ISZERO
0xb80 ISZERO
0xb81 PUSH2 0x6e4
0xb84 JUMPI
---
0xb2c: INVALID 
0xb2d: JUMPDEST 
0xb2e: V585 = 0x0
0xb32: V586 = S[0x0]
0xb34: V587 = 0x100
0xb37: V588 = EXP 0x100 0x0
0xb39: V589 = DIV V586 0x1
0xb3a: V590 = 0xffffffffffffffffffffffffffffffffffffffff
0xb4f: V591 = AND 0xffffffffffffffffffffffffffffffffffffffff V589
0xb50: V592 = 0xffffffffffffffffffffffffffffffffffffffff
0xb65: V593 = AND 0xffffffffffffffffffffffffffffffffffffffff V591
0xb67: V594 = 0xffffffffffffffffffffffffffffffffffffffff
0xb7c: V595 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xb7d: V596 = EQ V595 V593
0xb7e: V597 = ISZERO V596
0xb7f: V598 = ISZERO V597
0xb80: V599 = ISZERO V598
0xb81: V600 = 0x6e4
0xb84: THROWI V599
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0xb85
[0xb85:0xbca]
---
Predecessors: [0xb2c]
Successors: [0xbcb]
---
0xb85 PUSH1 0x0
0xb87 DUP1
0xb88 REVERT
0xb89 JUMPDEST
0xb8a DUP1
0xb8b PUSH1 0x1
0xb8d PUSH1 0x0
0xb8f PUSH2 0x100
0xb92 EXP
0xb93 DUP2
0xb94 SLOAD
0xb95 DUP2
0xb96 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbab MUL
0xbac NOT
0xbad AND
0xbae SWAP1
0xbaf DUP4
0xbb0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbc5 AND
0xbc6 MUL
0xbc7 OR
0xbc8 SWAP1
0xbc9 SSTORE
0xbca POP
---
0xb85: V601 = 0x0
0xb88: REVERT 0x0 0x0
0xb89: JUMPDEST 
0xb8b: V602 = 0x1
0xb8d: V603 = 0x0
0xb8f: V604 = 0x100
0xb92: V605 = EXP 0x100 0x0
0xb94: V606 = S[0x1]
0xb96: V607 = 0xffffffffffffffffffffffffffffffffffffffff
0xbab: V608 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xbac: V609 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xbad: V610 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V606
0xbb0: V611 = 0xffffffffffffffffffffffffffffffffffffffff
0xbc5: V612 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xbc6: V613 = MUL V612 0x1
0xbc7: V614 = OR V613 V610
0xbc9: S[0x1] = V614
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0xbcb
[0xbcb:0xbcb]
---
Predecessors: [0xb85]
Successors: [0xbcc]
---
0xbcb JUMPDEST
---
0xbcb: JUMPDEST 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0xbcc
[0xbcc:0xc29]
---
Predecessors: [0xbcb]
Successors: []
---
0xbcc JUMPDEST
0xbcd POP
0xbce JUMP
0xbcf JUMPDEST
0xbd0 PUSH20 0x728781e75735dc0962df3a51d7ef47e798a7107e
0xbe5 DUP2
0xbe6 JUMP
0xbe7 STOP
0xbe8 LOG1
0xbe9 PUSH6 0x627a7a723058
0xbf0 SHA3
0xbf1 DUP10
0xbf2 DUP3
0xbf3 SWAP10
0xbf4 GAS
0xbf5 MISSING 0xe1
0xbf6 MISSING 0x5e
0xbf7 GAS
0xbf8 DUP3
0xbf9 MISSING 0xa6
0xbfa LOG0
0xbfb PUSH7 0xa40271e955e528
0xc03 SLT
0xc04 MISSING 0xf
0xc05 MISSING 0xe1
0xc06 MSTORE
0xc07 DIFFICULTY
0xc08 MISSING 0xdf
0xc09 RETURNDATASIZE
0xc0a EXTCODEHASH
0xc0b PUSH30 0xb8b02a2b5c0029
---
0xbcc: JUMPDEST 
0xbce: JUMP S1
0xbcf: JUMPDEST 
0xbd0: V615 = 0x728781e75735dc0962df3a51d7ef47e798a7107e
0xbe6: JUMP S0
0xbe7: STOP 
0xbe8: LOG S0 S1 S2
0xbe9: V616 = 0x627a7a723058
0xbf0: V617 = SHA3 0x627a7a723058 S3
0xbf4: V618 = GAS
0xbf5: MISSING 0xe1
0xbf6: MISSING 0x5e
0xbf7: V619 = GAS
0xbf9: MISSING 0xa6
0xbfa: LOG S0 S1
0xbfb: V620 = 0xa40271e955e528
0xc03: V621 = SLT 0xa40271e955e528 S2
0xc04: MISSING 0xf
0xc05: MISSING 0xe1
0xc06: M[S0] = S1
0xc07: V622 = DIFFICULTY
0xc08: MISSING 0xdf
0xc09: V623 = RETURNDATASIZE
0xc0a: V624 = EXTCODEHASH V623
0xc0b: V625 = 0xb8b02a2b5c0029
---
Entry stack: [S0]
Stack pops: 331
Stack additions: [0xb8b02a2b5c0029, V624]
Exit stack: []

================================

Function 0:
Public function signature: 0x79ba5097
Entry block: 0x5f
Exit block: 0x72
Body: 0x5f, 0x66, 0x6a, 0x72, 0x157, 0x1af, 0x1b3, 0x332

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0x74
Exit block: 0x87
Body: 0x74, 0x7b, 0x7f, 0x87, 0x334

Function 2:
Public function signature: 0xd4ee1d90
Entry block: 0xc9
Exit block: 0xdc
Body: 0xc9, 0xd0, 0xd4, 0xdc, 0x359

Function 3:
Public function signature: 0xf2fde38b
Entry block: 0x11e
Exit block: 0x155
Body: 0x11e, 0x125, 0x129, 0x155, 0x37f, 0x3d6, 0x3d7, 0x42f, 0x433, 0x475, 0x476

Function 4:
Public fallback function
Entry block: 0x5a
Exit block: 0x5a
Body: 0x5a

