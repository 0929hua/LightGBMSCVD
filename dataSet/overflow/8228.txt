Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x5c]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x8da5cb5b
0x3c EQ
0x3d PUSH2 0x5c
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x8da5cb5b
0x3c: V13 = EQ 0x8da5cb5b V11
0x3d: V14 = 0x5c
0x40: JUMPI 0x5c V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xb1]
---
0x41 DUP1
0x42 PUSH4 0xdd719d2c
0x47 EQ
0x48 PUSH2 0xb1
0x4b JUMPI
---
0x42: V15 = 0xdd719d2c
0x47: V16 = EQ 0xdd719d2c V11
0x48: V17 = 0xb1
0x4b: JUMPI 0xb1 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x189]
---
0x4c DUP1
0x4d PUSH4 0xf2fde38b
0x52 EQ
0x53 PUSH2 0x189
0x56 JUMPI
---
0x4d: V18 = 0xf2fde38b
0x52: V19 = EQ 0xf2fde38b V11
0x53: V20 = 0x189
0x56: JUMPI 0x189 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x5b]
---
Predecessors: [0x0, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x57: JUMPDEST 
0x58: V21 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0x62]
---
Predecessors: [0xd, 0x5cb]
Successors: [0x63, 0x67]
---
0x5c JUMPDEST
0x5d CALLVALUE
0x5e ISZERO
0x5f PUSH2 0x67
0x62 JUMPI
---
0x5c: JUMPDEST 
0x5d: V22 = CALLVALUE
0x5e: V23 = ISZERO V22
0x5f: V24 = 0x67
0x62: JUMPI 0x67 V23
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x63
[0x63:0x66]
---
Predecessors: [0x5c]
Successors: []
---
0x63 PUSH1 0x0
0x65 DUP1
0x66 REVERT
---
0x63: V25 = 0x0
0x66: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x67
[0x67:0x6e]
---
Predecessors: [0x5c]
Successors: [0x1c2]
---
0x67 JUMPDEST
0x68 PUSH2 0x6f
0x6b PUSH2 0x1c2
0x6e JUMP
---
0x67: JUMPDEST 
0x68: V26 = 0x6f
0x6b: V27 = 0x1c2
0x6e: JUMP 0x1c2
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6f]
Exit stack: [V11, 0x6f]

================================

Block 0x6f
[0x6f:0xb0]
---
Predecessors: [0x1c2]
Successors: []
---
0x6f JUMPDEST
0x70 PUSH1 0x40
0x72 MLOAD
0x73 DUP1
0x74 DUP3
0x75 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8a AND
0x8b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa0 AND
0xa1 DUP2
0xa2 MSTORE
0xa3 PUSH1 0x20
0xa5 ADD
0xa6 SWAP2
0xa7 POP
0xa8 POP
0xa9 PUSH1 0x40
0xab MLOAD
0xac DUP1
0xad SWAP2
0xae SUB
0xaf SWAP1
0xb0 RETURN
---
0x6f: JUMPDEST 
0x70: V28 = 0x40
0x72: V29 = M[0x40]
0x75: V30 = 0xffffffffffffffffffffffffffffffffffffffff
0x8a: V31 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x8b: V32 = 0xffffffffffffffffffffffffffffffffffffffff
0xa0: V33 = AND 0xffffffffffffffffffffffffffffffffffffffff V31
0xa2: M[V29] = V33
0xa3: V34 = 0x20
0xa5: V35 = ADD 0x20 V29
0xa9: V36 = 0x40
0xab: V37 = M[0x40]
0xae: V38 = SUB V35 V37
0xb0: RETURN V37 V38
---
Entry stack: [V11, 0x6f, V114]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x6f]

================================

Block 0xb1
[0xb1:0xb7]
---
Predecessors: [0x41, 0x5d7]
Successors: [0xb8, 0xbc]
---
0xb1 JUMPDEST
0xb2 CALLVALUE
0xb3 ISZERO
0xb4 PUSH2 0xbc
0xb7 JUMPI
---
0xb1: JUMPDEST 
0xb2: V39 = CALLVALUE
0xb3: V40 = ISZERO V39
0xb4: V41 = 0xbc
0xb7: JUMPI 0xbc V40
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb8
[0xb8:0xbb]
---
Predecessors: [0xb1]
Successors: []
---
0xb8 PUSH1 0x0
0xba DUP1
0xbb REVERT
---
0xb8: V42 = 0x0
0xbb: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xbc
[0xbc:0x186]
---
Predecessors: [0xb1]
Successors: [0x1e7]
---
0xbc JUMPDEST
0xbd PUSH2 0x187
0xc0 PUSH1 0x4
0xc2 DUP1
0xc3 DUP1
0xc4 CALLDATALOAD
0xc5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xda AND
0xdb SWAP1
0xdc PUSH1 0x20
0xde ADD
0xdf SWAP1
0xe0 SWAP2
0xe1 SWAP1
0xe2 DUP1
0xe3 CALLDATALOAD
0xe4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf9 AND
0xfa SWAP1
0xfb PUSH1 0x20
0xfd ADD
0xfe SWAP1
0xff SWAP2
0x100 SWAP1
0x101 DUP1
0x102 CALLDATALOAD
0x103 SWAP1
0x104 PUSH1 0x20
0x106 ADD
0x107 SWAP1
0x108 DUP3
0x109 ADD
0x10a DUP1
0x10b CALLDATALOAD
0x10c SWAP1
0x10d PUSH1 0x20
0x10f ADD
0x110 SWAP1
0x111 DUP1
0x112 DUP1
0x113 PUSH1 0x20
0x115 MUL
0x116 PUSH1 0x20
0x118 ADD
0x119 PUSH1 0x40
0x11b MLOAD
0x11c SWAP1
0x11d DUP2
0x11e ADD
0x11f PUSH1 0x40
0x121 MSTORE
0x122 DUP1
0x123 SWAP4
0x124 SWAP3
0x125 SWAP2
0x126 SWAP1
0x127 DUP2
0x128 DUP2
0x129 MSTORE
0x12a PUSH1 0x20
0x12c ADD
0x12d DUP4
0x12e DUP4
0x12f PUSH1 0x20
0x131 MUL
0x132 DUP1
0x133 DUP3
0x134 DUP5
0x135 CALLDATACOPY
0x136 DUP3
0x137 ADD
0x138 SWAP2
0x139 POP
0x13a POP
0x13b POP
0x13c POP
0x13d POP
0x13e POP
0x13f SWAP2
0x140 SWAP1
0x141 DUP1
0x142 CALLDATALOAD
0x143 SWAP1
0x144 PUSH1 0x20
0x146 ADD
0x147 SWAP1
0x148 DUP3
0x149 ADD
0x14a DUP1
0x14b CALLDATALOAD
0x14c SWAP1
0x14d PUSH1 0x20
0x14f ADD
0x150 SWAP1
0x151 DUP1
0x152 DUP1
0x153 PUSH1 0x20
0x155 MUL
0x156 PUSH1 0x20
0x158 ADD
0x159 PUSH1 0x40
0x15b MLOAD
0x15c SWAP1
0x15d DUP2
0x15e ADD
0x15f PUSH1 0x40
0x161 MSTORE
0x162 DUP1
0x163 SWAP4
0x164 SWAP3
0x165 SWAP2
0x166 SWAP1
0x167 DUP2
0x168 DUP2
0x169 MSTORE
0x16a PUSH1 0x20
0x16c ADD
0x16d DUP4
0x16e DUP4
0x16f PUSH1 0x20
0x171 MUL
0x172 DUP1
0x173 DUP3
0x174 DUP5
0x175 CALLDATACOPY
0x176 DUP3
0x177 ADD
0x178 SWAP2
0x179 POP
0x17a POP
0x17b POP
0x17c POP
0x17d POP
0x17e POP
0x17f SWAP2
0x180 SWAP1
0x181 POP
0x182 POP
0x183 PUSH2 0x1e7
0x186 JUMP
---
0xbc: JUMPDEST 
0xbd: V43 = 0x187
0xc0: V44 = 0x4
0xc4: V45 = CALLDATALOAD 0x4
0xc5: V46 = 0xffffffffffffffffffffffffffffffffffffffff
0xda: V47 = AND 0xffffffffffffffffffffffffffffffffffffffff V45
0xdc: V48 = 0x20
0xde: V49 = ADD 0x20 0x4
0xe3: V50 = CALLDATALOAD 0x24
0xe4: V51 = 0xffffffffffffffffffffffffffffffffffffffff
0xf9: V52 = AND 0xffffffffffffffffffffffffffffffffffffffff V50
0xfb: V53 = 0x20
0xfd: V54 = ADD 0x20 0x24
0x102: V55 = CALLDATALOAD 0x44
0x104: V56 = 0x20
0x106: V57 = ADD 0x20 0x44
0x109: V58 = ADD 0x4 V55
0x10b: V59 = CALLDATALOAD V58
0x10d: V60 = 0x20
0x10f: V61 = ADD 0x20 V58
0x113: V62 = 0x20
0x115: V63 = MUL 0x20 V59
0x116: V64 = 0x20
0x118: V65 = ADD 0x20 V63
0x119: V66 = 0x40
0x11b: V67 = M[0x40]
0x11e: V68 = ADD V67 V65
0x11f: V69 = 0x40
0x121: M[0x40] = V68
0x129: M[V67] = V59
0x12a: V70 = 0x20
0x12c: V71 = ADD 0x20 V67
0x12f: V72 = 0x20
0x131: V73 = MUL 0x20 V59
0x135: CALLDATACOPY V71 V61 V73
0x137: V74 = ADD V71 V73
0x142: V75 = CALLDATALOAD 0x64
0x144: V76 = 0x20
0x146: V77 = ADD 0x20 0x64
0x149: V78 = ADD 0x4 V75
0x14b: V79 = CALLDATALOAD V78
0x14d: V80 = 0x20
0x14f: V81 = ADD 0x20 V78
0x153: V82 = 0x20
0x155: V83 = MUL 0x20 V79
0x156: V84 = 0x20
0x158: V85 = ADD 0x20 V83
0x159: V86 = 0x40
0x15b: V87 = M[0x40]
0x15e: V88 = ADD V87 V85
0x15f: V89 = 0x40
0x161: M[0x40] = V88
0x169: M[V87] = V79
0x16a: V90 = 0x20
0x16c: V91 = ADD 0x20 V87
0x16f: V92 = 0x20
0x171: V93 = MUL 0x20 V79
0x175: CALLDATACOPY V91 V81 V93
0x177: V94 = ADD V91 V93
0x183: V95 = 0x1e7
0x186: JUMP 0x1e7
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x187, V47, V52, V67, V87]
Exit stack: [V11, 0x187, V47, V52, V67, V87]

================================

Block 0x187
[0x187:0x188]
---
Predecessors: [0x388]
Successors: []
---
0x187 JUMPDEST
0x188 STOP
---
0x187: JUMPDEST 
0x188: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x189
[0x189:0x18f]
---
Predecessors: [0x4c]
Successors: [0x190, 0x194]
---
0x189 JUMPDEST
0x18a CALLVALUE
0x18b ISZERO
0x18c PUSH2 0x194
0x18f JUMPI
---
0x189: JUMPDEST 
0x18a: V96 = CALLVALUE
0x18b: V97 = ISZERO V96
0x18c: V98 = 0x194
0x18f: JUMPI 0x194 V97
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x190
[0x190:0x193]
---
Predecessors: [0x189]
Successors: []
---
0x190 PUSH1 0x0
0x192 DUP1
0x193 REVERT
---
0x190: V99 = 0x0
0x193: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x194
[0x194:0x1bf]
---
Predecessors: [0x189]
Successors: [0x38f]
---
0x194 JUMPDEST
0x195 PUSH2 0x1c0
0x198 PUSH1 0x4
0x19a DUP1
0x19b DUP1
0x19c CALLDATALOAD
0x19d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b2 AND
0x1b3 SWAP1
0x1b4 PUSH1 0x20
0x1b6 ADD
0x1b7 SWAP1
0x1b8 SWAP2
0x1b9 SWAP1
0x1ba POP
0x1bb POP
0x1bc PUSH2 0x38f
0x1bf JUMP
---
0x194: JUMPDEST 
0x195: V100 = 0x1c0
0x198: V101 = 0x4
0x19c: V102 = CALLDATALOAD 0x4
0x19d: V103 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b2: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x1b4: V105 = 0x20
0x1b6: V106 = ADD 0x20 0x4
0x1bc: V107 = 0x38f
0x1bf: JUMP 0x38f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1c0, V104]
Exit stack: [V11, 0x1c0, V104]

================================

Block 0x1c0
[0x1c0:0x1c1]
---
Predecessors: [0x461]
Successors: []
---
0x1c0 JUMPDEST
0x1c1 STOP
---
0x1c0: JUMPDEST 
0x1c1: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1c2
[0x1c2:0x1e6]
---
Predecessors: [0x67]
Successors: [0x6f]
---
0x1c2 JUMPDEST
0x1c3 PUSH1 0x0
0x1c5 DUP1
0x1c6 SWAP1
0x1c7 SLOAD
0x1c8 SWAP1
0x1c9 PUSH2 0x100
0x1cc EXP
0x1cd SWAP1
0x1ce DIV
0x1cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e4 AND
0x1e5 DUP2
0x1e6 JUMP
---
0x1c2: JUMPDEST 
0x1c3: V108 = 0x0
0x1c7: V109 = S[0x0]
0x1c9: V110 = 0x100
0x1cc: V111 = EXP 0x100 0x0
0x1ce: V112 = DIV V109 0x1
0x1cf: V113 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e4: V114 = AND 0xffffffffffffffffffffffffffffffffffffffff V112
0x1e6: JUMP 0x6f
---
Entry stack: [V11, 0x6f]
Stack pops: 1
Stack additions: [S0, V114]
Exit stack: [V11, 0x6f, V114]

================================

Block 0x1e7
[0x1e7:0x23f]
---
Predecessors: [0xbc]
Successors: [0x240, 0x244]
---
0x1e7 JUMPDEST
0x1e8 PUSH1 0x0
0x1ea DUP1
0x1eb PUSH1 0x0
0x1ed SWAP1
0x1ee SLOAD
0x1ef SWAP1
0x1f0 PUSH2 0x100
0x1f3 EXP
0x1f4 SWAP1
0x1f5 DIV
0x1f6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20b AND
0x20c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x221 AND
0x222 CALLER
0x223 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x238 AND
0x239 EQ
0x23a ISZERO
0x23b ISZERO
0x23c PUSH2 0x244
0x23f JUMPI
---
0x1e7: JUMPDEST 
0x1e8: V115 = 0x0
0x1eb: V116 = 0x0
0x1ee: V117 = S[0x0]
0x1f0: V118 = 0x100
0x1f3: V119 = EXP 0x100 0x0
0x1f5: V120 = DIV V117 0x1
0x1f6: V121 = 0xffffffffffffffffffffffffffffffffffffffff
0x20b: V122 = AND 0xffffffffffffffffffffffffffffffffffffffff V120
0x20c: V123 = 0xffffffffffffffffffffffffffffffffffffffff
0x221: V124 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x222: V125 = CALLER
0x223: V126 = 0xffffffffffffffffffffffffffffffffffffffff
0x238: V127 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x239: V128 = EQ V127 V124
0x23a: V129 = ISZERO V128
0x23b: V130 = ISZERO V129
0x23c: V131 = 0x244
0x23f: JUMPI 0x244 V130
---
Entry stack: [V11, 0x187, V47, V52, V67, V87]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x187, V47, V52, V67, V87, 0x0]

================================

Block 0x240
[0x240:0x243]
---
Predecessors: [0x1e7]
Successors: []
---
0x240 PUSH1 0x0
0x242 DUP1
0x243 REVERT
---
0x240: V132 = 0x0
0x243: REVERT 0x0 0x0
---
Entry stack: [V11, 0x187, V47, V52, V67, V87, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x187, V47, V52, V67, V87, 0x0]

================================

Block 0x244
[0x244:0x248]
---
Predecessors: [0x1e7]
Successors: [0x249]
---
0x244 JUMPDEST
0x245 PUSH1 0x0
0x247 SWAP1
0x248 POP
---
0x244: JUMPDEST 
0x245: V133 = 0x0
---
Entry stack: [V11, 0x187, V47, V52, V67, V87, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x187, V47, V52, V67, V87, 0x0]

================================

Block 0x249
[0x249:0x252]
---
Predecessors: [0x244, 0x370]
Successors: [0x253, 0x388]
---
0x249 JUMPDEST
0x24a DUP3
0x24b MLOAD
0x24c DUP2
0x24d LT
0x24e ISZERO
0x24f PUSH2 0x388
0x252 JUMPI
---
0x249: JUMPDEST 
0x24b: V134 = M[V67]
0x24d: V135 = LT S0 V134
0x24e: V136 = ISZERO V135
0x24f: V137 = 0x388
0x252: JUMPI 0x388 V136
---
Entry stack: [V11, 0x187, V47, V52, V67, V87, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x187, V47, V52, V67, V87, S0]

================================

Block 0x253
[0x253:0x27b]
---
Predecessors: [0x249]
Successors: [0x27c, 0x27d]
---
0x253 DUP5
0x254 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x269 AND
0x26a PUSH4 0x23b872dd
0x26f DUP6
0x270 DUP6
0x271 DUP5
0x272 DUP2
0x273 MLOAD
0x274 DUP2
0x275 LT
0x276 ISZERO
0x277 ISZERO
0x278 PUSH2 0x27d
0x27b JUMPI
---
0x254: V138 = 0xffffffffffffffffffffffffffffffffffffffff
0x269: V139 = AND 0xffffffffffffffffffffffffffffffffffffffff V47
0x26a: V140 = 0x23b872dd
0x273: V141 = M[V67]
0x275: V142 = LT S0 V141
0x276: V143 = ISZERO V142
0x277: V144 = ISZERO V143
0x278: V145 = 0x27d
0x27b: JUMPI 0x27d V144
---
Entry stack: [V11, 0x187, V47, V52, V67, V87, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V139, 0x23b872dd, S3, S2, S0]
Exit stack: [V11, 0x187, V47, V52, V67, V87, S0, V139, 0x23b872dd, V52, V67, S0]

================================

Block 0x27c
[0x27c:0x27c]
---
Predecessors: [0x253]
Successors: []
---
0x27c INVALID
---
0x27c: INVALID 
---
Entry stack: [V11, 0x187, V47, V52, V67, V87, S5, V139, 0x23b872dd, V52, V67, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x187, V47, V52, V67, V87, S5, V139, 0x23b872dd, V52, V67, S0]

================================

Block 0x27d
[0x27d:0x293]
---
Predecessors: [0x253]
Successors: [0x294, 0x295]
---
0x27d JUMPDEST
0x27e SWAP1
0x27f PUSH1 0x20
0x281 ADD
0x282 SWAP1
0x283 PUSH1 0x20
0x285 MUL
0x286 ADD
0x287 MLOAD
0x288 DUP6
0x289 DUP6
0x28a DUP2
0x28b MLOAD
0x28c DUP2
0x28d LT
0x28e ISZERO
0x28f ISZERO
0x290 PUSH2 0x295
0x293 JUMPI
---
0x27d: JUMPDEST 
0x27f: V146 = 0x20
0x281: V147 = ADD 0x20 V67
0x283: V148 = 0x20
0x285: V149 = MUL 0x20 S0
0x286: V150 = ADD V149 V147
0x287: V151 = M[V150]
0x28b: V152 = M[V87]
0x28d: V153 = LT S5 V152
0x28e: V154 = ISZERO V153
0x28f: V155 = ISZERO V154
0x290: V156 = 0x295
0x293: JUMPI 0x295 V155
---
Entry stack: [V11, 0x187, V47, V52, V67, V87, S5, V139, 0x23b872dd, V52, V67, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V151, S6, S5]
Exit stack: [V11, 0x187, V47, V52, V67, V87, S5, V139, 0x23b872dd, V52, V151, V87, S5]

================================

Block 0x294
[0x294:0x294]
---
Predecessors: [0x27d]
Successors: []
---
0x294 INVALID
---
0x294: INVALID 
---
Entry stack: [V11, 0x187, V47, V52, V67, V87, S6, V139, 0x23b872dd, V52, V151, V87, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x187, V47, V52, V67, V87, S6, V139, 0x23b872dd, V52, V151, V87, S0]

================================

Block 0x295
[0x295:0x35a]
---
Predecessors: [0x27d]
Successors: [0x35b, 0x35f]
---
0x295 JUMPDEST
0x296 SWAP1
0x297 PUSH1 0x20
0x299 ADD
0x29a SWAP1
0x29b PUSH1 0x20
0x29d MUL
0x29e ADD
0x29f MLOAD
0x2a0 PUSH1 0x0
0x2a2 PUSH1 0x40
0x2a4 MLOAD
0x2a5 PUSH1 0x20
0x2a7 ADD
0x2a8 MSTORE
0x2a9 PUSH1 0x40
0x2ab MLOAD
0x2ac DUP5
0x2ad PUSH4 0xffffffff
0x2b2 AND
0x2b3 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2d1 MUL
0x2d2 DUP2
0x2d3 MSTORE
0x2d4 PUSH1 0x4
0x2d6 ADD
0x2d7 DUP1
0x2d8 DUP5
0x2d9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ee AND
0x2ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x304 AND
0x305 DUP2
0x306 MSTORE
0x307 PUSH1 0x20
0x309 ADD
0x30a DUP4
0x30b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x320 AND
0x321 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x336 AND
0x337 DUP2
0x338 MSTORE
0x339 PUSH1 0x20
0x33b ADD
0x33c DUP3
0x33d DUP2
0x33e MSTORE
0x33f PUSH1 0x20
0x341 ADD
0x342 SWAP4
0x343 POP
0x344 POP
0x345 POP
0x346 POP
0x347 PUSH1 0x20
0x349 PUSH1 0x40
0x34b MLOAD
0x34c DUP1
0x34d DUP4
0x34e SUB
0x34f DUP2
0x350 PUSH1 0x0
0x352 DUP8
0x353 DUP1
0x354 EXTCODESIZE
0x355 ISZERO
0x356 ISZERO
0x357 PUSH2 0x35f
0x35a JUMPI
---
0x295: JUMPDEST 
0x297: V157 = 0x20
0x299: V158 = ADD 0x20 V87
0x29b: V159 = 0x20
0x29d: V160 = MUL 0x20 S0
0x29e: V161 = ADD V160 V158
0x29f: V162 = M[V161]
0x2a0: V163 = 0x0
0x2a2: V164 = 0x40
0x2a4: V165 = M[0x40]
0x2a5: V166 = 0x20
0x2a7: V167 = ADD 0x20 V165
0x2a8: M[V167] = 0x0
0x2a9: V168 = 0x40
0x2ab: V169 = M[0x40]
0x2ad: V170 = 0xffffffff
0x2b2: V171 = AND 0xffffffff 0x23b872dd
0x2b3: V172 = 0x100000000000000000000000000000000000000000000000000000000
0x2d1: V173 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x23b872dd
0x2d3: M[V169] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x2d4: V174 = 0x4
0x2d6: V175 = ADD 0x4 V169
0x2d9: V176 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ee: V177 = AND 0xffffffffffffffffffffffffffffffffffffffff V52
0x2ef: V178 = 0xffffffffffffffffffffffffffffffffffffffff
0x304: V179 = AND 0xffffffffffffffffffffffffffffffffffffffff V177
0x306: M[V175] = V179
0x307: V180 = 0x20
0x309: V181 = ADD 0x20 V175
0x30b: V182 = 0xffffffffffffffffffffffffffffffffffffffff
0x320: V183 = AND 0xffffffffffffffffffffffffffffffffffffffff V151
0x321: V184 = 0xffffffffffffffffffffffffffffffffffffffff
0x336: V185 = AND 0xffffffffffffffffffffffffffffffffffffffff V183
0x338: M[V181] = V185
0x339: V186 = 0x20
0x33b: V187 = ADD 0x20 V181
0x33e: M[V187] = V162
0x33f: V188 = 0x20
0x341: V189 = ADD 0x20 V187
0x347: V190 = 0x20
0x349: V191 = 0x40
0x34b: V192 = M[0x40]
0x34e: V193 = SUB V189 V192
0x350: V194 = 0x0
0x354: V195 = EXTCODESIZE V139
0x355: V196 = ISZERO V195
0x356: V197 = ISZERO V196
0x357: V198 = 0x35f
0x35a: JUMPI 0x35f V197
---
Entry stack: [V11, 0x187, V47, V52, V67, V87, S6, V139, 0x23b872dd, V52, V151, V87, S0]
Stack pops: 6
Stack additions: [S5, S4, V189, 0x20, V192, V193, V192, 0x0, S5]
Exit stack: [V11, 0x187, V47, V52, V67, V87, S6, V139, 0x23b872dd, V189, 0x20, V192, V193, V192, 0x0, V139]

================================

Block 0x35b
[0x35b:0x35e]
---
Predecessors: [0x295]
Successors: []
---
0x35b PUSH1 0x0
0x35d DUP1
0x35e REVERT
---
0x35b: V199 = 0x0
0x35e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x187, V47, V52, V67, V87, S9, V139, 0x23b872dd, V189, 0x20, V192, V193, V192, 0x0, V139]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x187, V47, V52, V67, V87, S9, V139, 0x23b872dd, V189, 0x20, V192, V193, V192, 0x0, V139]

================================

Block 0x35f
[0x35f:0x36b]
---
Predecessors: [0x295]
Successors: [0x36c, 0x370]
---
0x35f JUMPDEST
0x360 PUSH2 0x2c6
0x363 GAS
0x364 SUB
0x365 CALL
0x366 ISZERO
0x367 ISZERO
0x368 PUSH2 0x370
0x36b JUMPI
---
0x35f: JUMPDEST 
0x360: V200 = 0x2c6
0x363: V201 = GAS
0x364: V202 = SUB V201 0x2c6
0x365: V203 = CALL V202 V139 0x0 V192 V193 V192 0x20
0x366: V204 = ISZERO V203
0x367: V205 = ISZERO V204
0x368: V206 = 0x370
0x36b: JUMPI 0x370 V205
---
Entry stack: [V11, 0x187, V47, V52, V67, V87, S9, V139, 0x23b872dd, V189, 0x20, V192, V193, V192, 0x0, V139]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x187, V47, V52, V67, V87, S9, V139, 0x23b872dd, V189]

================================

Block 0x36c
[0x36c:0x36f]
---
Predecessors: [0x35f]
Successors: []
---
0x36c PUSH1 0x0
0x36e DUP1
0x36f REVERT
---
0x36c: V207 = 0x0
0x36f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x187, V47, V52, V67, V87, S3, V139, 0x23b872dd, V189]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x187, V47, V52, V67, V87, S3, V139, 0x23b872dd, V189]

================================

Block 0x370
[0x370:0x387]
---
Predecessors: [0x35f]
Successors: [0x249]
---
0x370 JUMPDEST
0x371 POP
0x372 POP
0x373 POP
0x374 PUSH1 0x40
0x376 MLOAD
0x377 DUP1
0x378 MLOAD
0x379 SWAP1
0x37a POP
0x37b POP
0x37c DUP1
0x37d DUP1
0x37e PUSH1 0x1
0x380 ADD
0x381 SWAP2
0x382 POP
0x383 POP
0x384 PUSH2 0x249
0x387 JUMP
---
0x370: JUMPDEST 
0x374: V208 = 0x40
0x376: V209 = M[0x40]
0x378: V210 = M[V209]
0x37e: V211 = 0x1
0x380: V212 = ADD 0x1 S3
0x384: V213 = 0x249
0x387: JUMP 0x249
---
Entry stack: [V11, 0x187, V47, V52, V67, V87, S3, V139, 0x23b872dd, V189]
Stack pops: 4
Stack additions: [V212]
Exit stack: [V11, 0x187, V47, V52, V67, V87, V212]

================================

Block 0x388
[0x388:0x38e]
---
Predecessors: [0x249]
Successors: [0x187]
---
0x388 JUMPDEST
0x389 POP
0x38a POP
0x38b POP
0x38c POP
0x38d POP
0x38e JUMP
---
0x388: JUMPDEST 
0x38e: JUMP 0x187
---
Entry stack: [V11, 0x187, V47, V52, V67, V87, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V11]

================================

Block 0x38f
[0x38f:0x3e5]
---
Predecessors: [0x194]
Successors: [0x3e6, 0x3ea]
---
0x38f JUMPDEST
0x390 PUSH1 0x0
0x392 DUP1
0x393 SWAP1
0x394 SLOAD
0x395 SWAP1
0x396 PUSH2 0x100
0x399 EXP
0x39a SWAP1
0x39b DIV
0x39c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b1 AND
0x3b2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c7 AND
0x3c8 CALLER
0x3c9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3de AND
0x3df EQ
0x3e0 ISZERO
0x3e1 ISZERO
0x3e2 PUSH2 0x3ea
0x3e5 JUMPI
---
0x38f: JUMPDEST 
0x390: V214 = 0x0
0x394: V215 = S[0x0]
0x396: V216 = 0x100
0x399: V217 = EXP 0x100 0x0
0x39b: V218 = DIV V215 0x1
0x39c: V219 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b1: V220 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0x3b2: V221 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c7: V222 = AND 0xffffffffffffffffffffffffffffffffffffffff V220
0x3c8: V223 = CALLER
0x3c9: V224 = 0xffffffffffffffffffffffffffffffffffffffff
0x3de: V225 = AND 0xffffffffffffffffffffffffffffffffffffffff V223
0x3df: V226 = EQ V225 V222
0x3e0: V227 = ISZERO V226
0x3e1: V228 = ISZERO V227
0x3e2: V229 = 0x3ea
0x3e5: JUMPI 0x3ea V228
---
Entry stack: [V11, 0x1c0, V104]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1c0, V104]

================================

Block 0x3e6
[0x3e6:0x3e9]
---
Predecessors: [0x38f]
Successors: []
---
0x3e6 PUSH1 0x0
0x3e8 DUP1
0x3e9 REVERT
---
0x3e6: V230 = 0x0
0x3e9: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1c0, V104]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1c0, V104]

================================

Block 0x3ea
[0x3ea:0x420]
---
Predecessors: [0x38f]
Successors: [0x421, 0x461]
---
0x3ea JUMPDEST
0x3eb PUSH1 0x0
0x3ed PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x402 AND
0x403 DUP2
0x404 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x419 AND
0x41a EQ
0x41b ISZERO
0x41c ISZERO
0x41d PUSH2 0x461
0x420 JUMPI
---
0x3ea: JUMPDEST 
0x3eb: V231 = 0x0
0x3ed: V232 = 0xffffffffffffffffffffffffffffffffffffffff
0x402: V233 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x404: V234 = 0xffffffffffffffffffffffffffffffffffffffff
0x419: V235 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x41a: V236 = EQ V235 0x0
0x41b: V237 = ISZERO V236
0x41c: V238 = ISZERO V237
0x41d: V239 = 0x461
0x420: JUMPI 0x461 V238
---
Entry stack: [V11, 0x1c0, V104]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x1c0, V104]

================================

Block 0x421
[0x421:0x460]
---
Predecessors: [0x3ea]
Successors: [0x461]
---
0x421 DUP1
0x422 PUSH1 0x0
0x424 DUP1
0x425 PUSH2 0x100
0x428 EXP
0x429 DUP2
0x42a SLOAD
0x42b DUP2
0x42c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x441 MUL
0x442 NOT
0x443 AND
0x444 SWAP1
0x445 DUP4
0x446 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x45b AND
0x45c MUL
0x45d OR
0x45e SWAP1
0x45f SSTORE
0x460 POP
---
0x422: V240 = 0x0
0x425: V241 = 0x100
0x428: V242 = EXP 0x100 0x0
0x42a: V243 = S[0x0]
0x42c: V244 = 0xffffffffffffffffffffffffffffffffffffffff
0x441: V245 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x442: V246 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x443: V247 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V243
0x446: V248 = 0xffffffffffffffffffffffffffffffffffffffff
0x45b: V249 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x45c: V250 = MUL V249 0x1
0x45d: V251 = OR V250 V247
0x45f: S[0x0] = V251
---
Entry stack: [V11, 0x1c0, V104]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x1c0, V104]

================================

Block 0x461
[0x461:0x463]
---
Predecessors: [0x3ea, 0x421]
Successors: [0x1c0]
---
0x461 JUMPDEST
0x462 POP
0x463 JUMP
---
0x461: JUMPDEST 
0x463: JUMP 0x1c0
---
Entry stack: [V11, 0x1c0, V104]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x464
[0x464:0x49b]
---
Predecessors: []
Successors: [0x49c]
---
0x464 STOP
0x465 LOG1
0x466 PUSH6 0x627a7a723058
0x46d SHA3
0x46e DUP1
0x46f PUSH3 0xfec012
0x473 DUP14
0x474 ORIGIN
0x475 LOG0
0x476 SLOAD
0x477 PUSH28 0x2e1828cba672cb7c88f7ad104a8ec0f408cf8a9ede3d002960606040
0x494 MSTORE
0x495 PUSH1 0x4
0x497 CALLDATASIZE
0x498 LT
0x499 PUSH1 0x3f
0x49b JUMPI
---
0x464: STOP 
0x465: LOG S0 S1 S2
0x466: V252 = 0x627a7a723058
0x46d: V253 = SHA3 0x627a7a723058 S3
0x46f: V254 = 0xfec012
0x474: V255 = ORIGIN
0x475: LOG V255 S14
0x476: V256 = S[0xfec012]
0x477: V257 = 0x2e1828cba672cb7c88f7ad104a8ec0f408cf8a9ede3d002960606040
0x494: M[0x2e1828cba672cb7c88f7ad104a8ec0f408cf8a9ede3d002960606040] = V256
0x495: V258 = 0x4
0x497: V259 = CALLDATASIZE
0x498: V260 = LT V259 0x4
0x499: V261 = 0x3f
0x49b: THROWI V260
---
Entry stack: []
Stack pops: 0
Stack additions: [V253, V253, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14]
Exit stack: []

================================

Block 0x49c
[0x49c:0x4ce]
---
Predecessors: [0x464]
Successors: [0x4cf]
---
0x49c PUSH1 0x0
0x49e CALLDATALOAD
0x49f PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x4bd SWAP1
0x4be DIV
0x4bf PUSH4 0xffffffff
0x4c4 AND
0x4c5 DUP1
0x4c6 PUSH4 0x23b872dd
0x4cb EQ
0x4cc PUSH1 0x44
0x4ce JUMPI
---
0x49c: V262 = 0x0
0x49e: V263 = CALLDATALOAD 0x0
0x49f: V264 = 0x100000000000000000000000000000000000000000000000000000000
0x4be: V265 = DIV V263 0x100000000000000000000000000000000000000000000000000000000
0x4bf: V266 = 0xffffffff
0x4c4: V267 = AND 0xffffffff V265
0x4c6: V268 = 0x23b872dd
0x4cb: V269 = EQ 0x23b872dd V267
0x4cc: V270 = 0x44
0x4ce: THROWI V269
---
Entry stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V253, V253]
Stack pops: 0
Stack additions: [V267]
Exit stack: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V253, V253, V267]

================================

Block 0x4cf
[0x4cf:0x4d9]
---
Predecessors: [0x49c]
Successors: [0x4da]
---
0x4cf JUMPDEST
0x4d0 PUSH1 0x0
0x4d2 DUP1
0x4d3 REVERT
0x4d4 JUMPDEST
0x4d5 CALLVALUE
0x4d6 ISZERO
0x4d7 PUSH1 0x4e
0x4d9 JUMPI
---
0x4cf: JUMPDEST 
0x4d0: V271 = 0x0
0x4d3: REVERT 0x0 0x0
0x4d4: JUMPDEST 
0x4d5: V272 = CALLVALUE
0x4d6: V273 = ISZERO V272
0x4d7: V274 = 0x4e
0x4d9: THROWI V273
---
Entry stack: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V253, V253, V267]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x4da
[0x4da:0x58b]
---
Predecessors: [0x4cf]
Successors: [0x58c]
---
0x4da PUSH1 0x0
0x4dc DUP1
0x4dd REVERT
0x4de JUMPDEST
0x4df PUSH1 0xa0
0x4e1 PUSH1 0x4
0x4e3 DUP1
0x4e4 DUP1
0x4e5 CALLDATALOAD
0x4e6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4fb AND
0x4fc SWAP1
0x4fd PUSH1 0x20
0x4ff ADD
0x500 SWAP1
0x501 SWAP2
0x502 SWAP1
0x503 DUP1
0x504 CALLDATALOAD
0x505 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x51a AND
0x51b SWAP1
0x51c PUSH1 0x20
0x51e ADD
0x51f SWAP1
0x520 SWAP2
0x521 SWAP1
0x522 DUP1
0x523 CALLDATALOAD
0x524 SWAP1
0x525 PUSH1 0x20
0x527 ADD
0x528 SWAP1
0x529 SWAP2
0x52a SWAP1
0x52b POP
0x52c POP
0x52d PUSH1 0xba
0x52f JUMP
0x530 JUMPDEST
0x531 PUSH1 0x40
0x533 MLOAD
0x534 DUP1
0x535 DUP3
0x536 ISZERO
0x537 ISZERO
0x538 ISZERO
0x539 ISZERO
0x53a DUP2
0x53b MSTORE
0x53c PUSH1 0x20
0x53e ADD
0x53f SWAP2
0x540 POP
0x541 POP
0x542 PUSH1 0x40
0x544 MLOAD
0x545 DUP1
0x546 SWAP2
0x547 SUB
0x548 SWAP1
0x549 RETURN
0x54a JUMPDEST
0x54b PUSH1 0x0
0x54d SWAP4
0x54e SWAP3
0x54f POP
0x550 POP
0x551 POP
0x552 JUMP
0x553 STOP
0x554 LOG1
0x555 PUSH6 0x627a7a723058
0x55c SHA3
0x55d DUP2
0x55e MISSING 0x1e
0x55f MISSING 0x5e
0x560 MISSING 0xae
0x561 MISSING 0xef
0x562 MISSING 0xaa
0x563 MISSING 0xb0
0x564 MISSING 0xb1
0x565 LOG0
0x566 MISSING 0xd6
0x567 LOG3
0x568 OR
0x569 MISSING 0xf8
0x56a CALL
0x56b MISSING 0x4b
0x56c PUSH13 0xceda38cd03d245cbefa630a28
0x57a MISSING 0xbd
0x57b MUL
0x57c COINBASE
0x57d STOP
0x57e MISSING 0x29
0x57f PUSH1 0x60
0x581 PUSH1 0x40
0x583 MSTORE
0x584 PUSH1 0x4
0x586 CALLDATASIZE
0x587 LT
0x588 PUSH2 0x4c
0x58b JUMPI
---
0x4da: V275 = 0x0
0x4dd: REVERT 0x0 0x0
0x4de: JUMPDEST 
0x4df: V276 = 0xa0
0x4e1: V277 = 0x4
0x4e5: V278 = CALLDATALOAD 0x4
0x4e6: V279 = 0xffffffffffffffffffffffffffffffffffffffff
0x4fb: V280 = AND 0xffffffffffffffffffffffffffffffffffffffff V278
0x4fd: V281 = 0x20
0x4ff: V282 = ADD 0x20 0x4
0x504: V283 = CALLDATALOAD 0x24
0x505: V284 = 0xffffffffffffffffffffffffffffffffffffffff
0x51a: V285 = AND 0xffffffffffffffffffffffffffffffffffffffff V283
0x51c: V286 = 0x20
0x51e: V287 = ADD 0x20 0x24
0x523: V288 = CALLDATALOAD 0x44
0x525: V289 = 0x20
0x527: V290 = ADD 0x20 0x44
0x52d: V291 = 0xba
0x52f: THROW 
0x530: JUMPDEST 
0x531: V292 = 0x40
0x533: V293 = M[0x40]
0x536: V294 = ISZERO S0
0x537: V295 = ISZERO V294
0x538: V296 = ISZERO V295
0x539: V297 = ISZERO V296
0x53b: M[V293] = V297
0x53c: V298 = 0x20
0x53e: V299 = ADD 0x20 V293
0x542: V300 = 0x40
0x544: V301 = M[0x40]
0x547: V302 = SUB V299 V301
0x549: RETURN V301 V302
0x54a: JUMPDEST 
0x54b: V303 = 0x0
0x552: JUMP S3
0x553: STOP 
0x554: LOG S0 S1 S2
0x555: V304 = 0x627a7a723058
0x55c: V305 = SHA3 0x627a7a723058 S3
0x55e: MISSING 0x1e
0x55f: MISSING 0x5e
0x560: MISSING 0xae
0x561: MISSING 0xef
0x562: MISSING 0xaa
0x563: MISSING 0xb0
0x564: MISSING 0xb1
0x565: LOG S0 S1
0x566: MISSING 0xd6
0x567: LOG S0 S1 S2 S3 S4
0x568: V306 = OR S5 S6
0x569: MISSING 0xf8
0x56a: V307 = CALL S0 S1 S2 S3 S4 S5 S6
0x56b: MISSING 0x4b
0x56c: V308 = 0xceda38cd03d245cbefa630a28
0x57a: MISSING 0xbd
0x57b: V309 = MUL S0 S1
0x57c: V310 = COINBASE
0x57d: STOP 
0x57e: MISSING 0x29
0x57f: V311 = 0x60
0x581: V312 = 0x40
0x583: M[0x40] = 0x60
0x584: V313 = 0x4
0x586: V314 = CALLDATASIZE
0x587: V315 = LT V314 0x4
0x588: V316 = 0x4c
0x58b: THROWI V315
---
Entry stack: []
Stack pops: 0
Stack additions: [V288, V285, V280, 0xa0, 0x0, S4, V305, S4, V306, V307, 0xceda38cd03d245cbefa630a28, V310, V309]
Exit stack: []

================================

Block 0x58c
[0x58c:0x5bf]
---
Predecessors: [0x4da]
Successors: [0x5c0]
---
0x58c PUSH1 0x0
0x58e CALLDATALOAD
0x58f PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x5ad SWAP1
0x5ae DIV
0x5af PUSH4 0xffffffff
0x5b4 AND
0x5b5 DUP1
0x5b6 PUSH4 0x8da5cb5b
0x5bb EQ
0x5bc PUSH2 0x51
0x5bf JUMPI
---
0x58c: V317 = 0x0
0x58e: V318 = CALLDATALOAD 0x0
0x58f: V319 = 0x100000000000000000000000000000000000000000000000000000000
0x5ae: V320 = DIV V318 0x100000000000000000000000000000000000000000000000000000000
0x5af: V321 = 0xffffffff
0x5b4: V322 = AND 0xffffffff V320
0x5b6: V323 = 0x8da5cb5b
0x5bb: V324 = EQ 0x8da5cb5b V322
0x5bc: V325 = 0x51
0x5bf: THROWI V324
---
Entry stack: []
Stack pops: 0
Stack additions: [V322]
Exit stack: [V322]

================================

Block 0x5c0
[0x5c0:0x5ca]
---
Predecessors: [0x58c]
Successors: [0x5cb]
---
0x5c0 DUP1
0x5c1 PUSH4 0xf2fde38b
0x5c6 EQ
0x5c7 PUSH2 0xa6
0x5ca JUMPI
---
0x5c1: V326 = 0xf2fde38b
0x5c6: V327 = EQ 0xf2fde38b V322
0x5c7: V328 = 0xa6
0x5ca: THROWI V327
---
Entry stack: [V322]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V322]

================================

Block 0x5cb
[0x5cb:0x5d6]
---
Predecessors: [0x5c0]
Successors: [0x5c, 0x5d7]
---
0x5cb JUMPDEST
0x5cc PUSH1 0x0
0x5ce DUP1
0x5cf REVERT
0x5d0 JUMPDEST
0x5d1 CALLVALUE
0x5d2 ISZERO
0x5d3 PUSH2 0x5c
0x5d6 JUMPI
---
0x5cb: JUMPDEST 
0x5cc: V329 = 0x0
0x5cf: REVERT 0x0 0x0
0x5d0: JUMPDEST 
0x5d1: V330 = CALLVALUE
0x5d2: V331 = ISZERO V330
0x5d3: V332 = 0x5c
0x5d6: JUMPI 0x5c V331
---
Entry stack: [V322]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x5d7
[0x5d7:0x62b]
---
Predecessors: [0x5cb]
Successors: [0xb1, 0x62c]
---
0x5d7 PUSH1 0x0
0x5d9 DUP1
0x5da REVERT
0x5db JUMPDEST
0x5dc PUSH2 0x64
0x5df PUSH2 0xdf
0x5e2 JUMP
0x5e3 JUMPDEST
0x5e4 PUSH1 0x40
0x5e6 MLOAD
0x5e7 DUP1
0x5e8 DUP3
0x5e9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5fe AND
0x5ff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x614 AND
0x615 DUP2
0x616 MSTORE
0x617 PUSH1 0x20
0x619 ADD
0x61a SWAP2
0x61b POP
0x61c POP
0x61d PUSH1 0x40
0x61f MLOAD
0x620 DUP1
0x621 SWAP2
0x622 SUB
0x623 SWAP1
0x624 RETURN
0x625 JUMPDEST
0x626 CALLVALUE
0x627 ISZERO
0x628 PUSH2 0xb1
0x62b JUMPI
---
0x5d7: V333 = 0x0
0x5da: REVERT 0x0 0x0
0x5db: JUMPDEST 
0x5dc: V334 = 0x64
0x5df: V335 = 0xdf
0x5e2: THROW 
0x5e3: JUMPDEST 
0x5e4: V336 = 0x40
0x5e6: V337 = M[0x40]
0x5e9: V338 = 0xffffffffffffffffffffffffffffffffffffffff
0x5fe: V339 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x5ff: V340 = 0xffffffffffffffffffffffffffffffffffffffff
0x614: V341 = AND 0xffffffffffffffffffffffffffffffffffffffff V339
0x616: M[V337] = V341
0x617: V342 = 0x20
0x619: V343 = ADD 0x20 V337
0x61d: V344 = 0x40
0x61f: V345 = M[0x40]
0x622: V346 = SUB V343 V345
0x624: RETURN V345 V346
0x625: JUMPDEST 
0x626: V347 = CALLVALUE
0x627: V348 = ISZERO V347
0x628: V349 = 0xb1
0x62b: JUMPI 0xb1 V348
---
Entry stack: []
Stack pops: 0
Stack additions: [0x64]
Exit stack: []

================================

Block 0x62c
[0x62c:0x6d9]
---
Predecessors: [0x5d7]
Successors: [0x6da]
---
0x62c PUSH1 0x0
0x62e DUP1
0x62f REVERT
0x630 JUMPDEST
0x631 PUSH2 0xdd
0x634 PUSH1 0x4
0x636 DUP1
0x637 DUP1
0x638 CALLDATALOAD
0x639 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x64e AND
0x64f SWAP1
0x650 PUSH1 0x20
0x652 ADD
0x653 SWAP1
0x654 SWAP2
0x655 SWAP1
0x656 POP
0x657 POP
0x658 PUSH2 0x104
0x65b JUMP
0x65c JUMPDEST
0x65d STOP
0x65e JUMPDEST
0x65f PUSH1 0x0
0x661 DUP1
0x662 SWAP1
0x663 SLOAD
0x664 SWAP1
0x665 PUSH2 0x100
0x668 EXP
0x669 SWAP1
0x66a DIV
0x66b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x680 AND
0x681 DUP2
0x682 JUMP
0x683 JUMPDEST
0x684 PUSH1 0x0
0x686 DUP1
0x687 SWAP1
0x688 SLOAD
0x689 SWAP1
0x68a PUSH2 0x100
0x68d EXP
0x68e SWAP1
0x68f DIV
0x690 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a5 AND
0x6a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6bb AND
0x6bc CALLER
0x6bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6d2 AND
0x6d3 EQ
0x6d4 ISZERO
0x6d5 ISZERO
0x6d6 PUSH2 0x15f
0x6d9 JUMPI
---
0x62c: V350 = 0x0
0x62f: REVERT 0x0 0x0
0x630: JUMPDEST 
0x631: V351 = 0xdd
0x634: V352 = 0x4
0x638: V353 = CALLDATALOAD 0x4
0x639: V354 = 0xffffffffffffffffffffffffffffffffffffffff
0x64e: V355 = AND 0xffffffffffffffffffffffffffffffffffffffff V353
0x650: V356 = 0x20
0x652: V357 = ADD 0x20 0x4
0x658: V358 = 0x104
0x65b: THROW 
0x65c: JUMPDEST 
0x65d: STOP 
0x65e: JUMPDEST 
0x65f: V359 = 0x0
0x663: V360 = S[0x0]
0x665: V361 = 0x100
0x668: V362 = EXP 0x100 0x0
0x66a: V363 = DIV V360 0x1
0x66b: V364 = 0xffffffffffffffffffffffffffffffffffffffff
0x680: V365 = AND 0xffffffffffffffffffffffffffffffffffffffff V363
0x682: JUMP S0
0x683: JUMPDEST 
0x684: V366 = 0x0
0x688: V367 = S[0x0]
0x68a: V368 = 0x100
0x68d: V369 = EXP 0x100 0x0
0x68f: V370 = DIV V367 0x1
0x690: V371 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a5: V372 = AND 0xffffffffffffffffffffffffffffffffffffffff V370
0x6a6: V373 = 0xffffffffffffffffffffffffffffffffffffffff
0x6bb: V374 = AND 0xffffffffffffffffffffffffffffffffffffffff V372
0x6bc: V375 = CALLER
0x6bd: V376 = 0xffffffffffffffffffffffffffffffffffffffff
0x6d2: V377 = AND 0xffffffffffffffffffffffffffffffffffffffff V375
0x6d3: V378 = EQ V377 V374
0x6d4: V379 = ISZERO V378
0x6d5: V380 = ISZERO V379
0x6d6: V381 = 0x15f
0x6d9: THROWI V380
---
Entry stack: []
Stack pops: 0
Stack additions: [V355, 0xdd, V365, S0]
Exit stack: []

================================

Block 0x6da
[0x6da:0x714]
---
Predecessors: [0x62c]
Successors: [0x715]
---
0x6da PUSH1 0x0
0x6dc DUP1
0x6dd REVERT
0x6de JUMPDEST
0x6df PUSH1 0x0
0x6e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6f6 AND
0x6f7 DUP2
0x6f8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x70d AND
0x70e EQ
0x70f ISZERO
0x710 ISZERO
0x711 PUSH2 0x1d6
0x714 JUMPI
---
0x6da: V382 = 0x0
0x6dd: REVERT 0x0 0x0
0x6de: JUMPDEST 
0x6df: V383 = 0x0
0x6e1: V384 = 0xffffffffffffffffffffffffffffffffffffffff
0x6f6: V385 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x6f8: V386 = 0xffffffffffffffffffffffffffffffffffffffff
0x70d: V387 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x70e: V388 = EQ V387 0x0
0x70f: V389 = ISZERO V388
0x710: V390 = ISZERO V389
0x711: V391 = 0x1d6
0x714: THROWI V390
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x715
[0x715:0x754]
---
Predecessors: [0x6da]
Successors: [0x755]
---
0x715 DUP1
0x716 PUSH1 0x0
0x718 DUP1
0x719 PUSH2 0x100
0x71c EXP
0x71d DUP2
0x71e SLOAD
0x71f DUP2
0x720 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x735 MUL
0x736 NOT
0x737 AND
0x738 SWAP1
0x739 DUP4
0x73a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x74f AND
0x750 MUL
0x751 OR
0x752 SWAP1
0x753 SSTORE
0x754 POP
---
0x716: V392 = 0x0
0x719: V393 = 0x100
0x71c: V394 = EXP 0x100 0x0
0x71e: V395 = S[0x0]
0x720: V396 = 0xffffffffffffffffffffffffffffffffffffffff
0x735: V397 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x736: V398 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x737: V399 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V395
0x73a: V400 = 0xffffffffffffffffffffffffffffffffffffffff
0x74f: V401 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x750: V402 = MUL V401 0x1
0x751: V403 = OR V402 V399
0x753: S[0x0] = V403
---
Entry stack: [S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x755
[0x755:0x783]
---
Predecessors: [0x715]
Successors: []
---
0x755 JUMPDEST
0x756 POP
0x757 JUMP
0x758 STOP
0x759 LOG1
0x75a PUSH6 0x627a7a723058
0x761 SHA3
0x762 MISSING 0xa9
0x763 MISSING 0xdc
0x764 MISSING 0xd5
0x765 JUMPDEST
0x766 SWAP5
0x767 PUSH26 0xad4238147bb60fa883ebd91b2c24224ef4f801804e99c404690c
0x782 STOP
0x783 MISSING 0x29
---
0x755: JUMPDEST 
0x757: JUMP S1
0x758: STOP 
0x759: LOG S0 S1 S2
0x75a: V404 = 0x627a7a723058
0x761: V405 = SHA3 0x627a7a723058 S3
0x762: MISSING 0xa9
0x763: MISSING 0xdc
0x764: MISSING 0xd5
0x765: JUMPDEST 
0x767: V406 = 0xad4238147bb60fa883ebd91b2c24224ef4f801804e99c404690c
0x782: STOP 
0x783: MISSING 0x29
---
Entry stack: [S0]
Stack pops: 113
Stack additions: []
Exit stack: []

================================

Function 0:
Public function signature: 0x8da5cb5b
Entry block: 0x5c
Exit block: 0x6f
Body: 0x5c, 0x63, 0x67, 0x6f, 0x1c2

Function 1:
Public function signature: 0xdd719d2c
Entry block: 0xb1
Exit block: 0x36c
Body: 0xb1, 0xb8, 0xbc, 0x187, 0x1e7, 0x240, 0x244, 0x249, 0x253, 0x27c, 0x27d, 0x294, 0x295, 0x35b, 0x35f, 0x36c, 0x370, 0x388

Function 2:
Public function signature: 0xf2fde38b
Entry block: 0x189
Exit block: 0x1c0
Body: 0x189, 0x190, 0x194, 0x1c0, 0x38f, 0x3e6, 0x3ea, 0x421, 0x461

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

