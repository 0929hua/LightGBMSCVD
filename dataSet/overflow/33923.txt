Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x41]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x41
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x41
0xc: JUMPI 0x41 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x46]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0xf2fde38b
0x3c EQ
0x3d PUSH2 0x46
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0xf2fde38b
0x3c: V13 = EQ 0xf2fde38b V11
0x3d: V14 = 0x46
0x40: JUMPI 0x46 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x45]
---
Predecessors: [0x0, 0xd]
Successors: []
---
0x41 JUMPDEST
0x42 PUSH1 0x0
0x44 DUP1
0x45 REVERT
---
0x41: JUMPDEST 
0x42: V15 = 0x0
0x45: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x46
[0x46:0x4c]
---
Predecessors: [0xd]
Successors: [0x4d, 0x51]
---
0x46 JUMPDEST
0x47 CALLVALUE
0x48 ISZERO
0x49 PUSH2 0x51
0x4c JUMPI
---
0x46: JUMPDEST 
0x47: V16 = CALLVALUE
0x48: V17 = ISZERO V16
0x49: V18 = 0x51
0x4c: JUMPI 0x51 V17
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4d
[0x4d:0x50]
---
Predecessors: [0x46]
Successors: []
---
0x4d PUSH1 0x0
0x4f DUP1
0x50 REVERT
---
0x4d: V19 = 0x0
0x50: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x51
[0x51:0x7c]
---
Predecessors: [0x46]
Successors: [0x7f]
---
0x51 JUMPDEST
0x52 PUSH2 0x7d
0x55 PUSH1 0x4
0x57 DUP1
0x58 DUP1
0x59 CALLDATALOAD
0x5a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6f AND
0x70 SWAP1
0x71 PUSH1 0x20
0x73 ADD
0x74 SWAP1
0x75 SWAP2
0x76 SWAP1
0x77 POP
0x78 POP
0x79 PUSH2 0x7f
0x7c JUMP
---
0x51: JUMPDEST 
0x52: V20 = 0x7d
0x55: V21 = 0x4
0x59: V22 = CALLDATALOAD 0x4
0x5a: V23 = 0xffffffffffffffffffffffffffffffffffffffff
0x6f: V24 = AND 0xffffffffffffffffffffffffffffffffffffffff V22
0x71: V25 = 0x20
0x73: V26 = ADD 0x20 0x4
0x79: V27 = 0x7f
0x7c: JUMP 0x7f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x7d, V24]
Exit stack: [V11, 0x7d, V24]

================================

Block 0x7d
[0x7d:0x7e]
---
Predecessors: [0x115]
Successors: []
---
0x7d JUMPDEST
0x7e STOP
---
0x7d: JUMPDEST 
0x7e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7f
[0x7f:0xd4]
---
Predecessors: [0x51]
Successors: [0xd5, 0x115]
---
0x7f JUMPDEST
0x80 PUSH1 0x0
0x82 DUP1
0x83 SWAP1
0x84 SLOAD
0x85 SWAP1
0x86 PUSH2 0x100
0x89 EXP
0x8a SWAP1
0x8b DIV
0x8c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa1 AND
0xa2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb7 AND
0xb8 CALLER
0xb9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xce AND
0xcf EQ
0xd0 ISZERO
0xd1 PUSH2 0x115
0xd4 JUMPI
---
0x7f: JUMPDEST 
0x80: V28 = 0x0
0x84: V29 = S[0x0]
0x86: V30 = 0x100
0x89: V31 = EXP 0x100 0x0
0x8b: V32 = DIV V29 0x1
0x8c: V33 = 0xffffffffffffffffffffffffffffffffffffffff
0xa1: V34 = AND 0xffffffffffffffffffffffffffffffffffffffff V32
0xa2: V35 = 0xffffffffffffffffffffffffffffffffffffffff
0xb7: V36 = AND 0xffffffffffffffffffffffffffffffffffffffff V34
0xb8: V37 = CALLER
0xb9: V38 = 0xffffffffffffffffffffffffffffffffffffffff
0xce: V39 = AND 0xffffffffffffffffffffffffffffffffffffffff V37
0xcf: V40 = EQ V39 V36
0xd0: V41 = ISZERO V40
0xd1: V42 = 0x115
0xd4: JUMPI 0x115 V41
---
Entry stack: [V11, 0x7d, V24]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7d, V24]

================================

Block 0xd5
[0xd5:0x114]
---
Predecessors: [0x7f]
Successors: [0x115]
---
0xd5 DUP1
0xd6 PUSH1 0x0
0xd8 DUP1
0xd9 PUSH2 0x100
0xdc EXP
0xdd DUP2
0xde SLOAD
0xdf DUP2
0xe0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf5 MUL
0xf6 NOT
0xf7 AND
0xf8 SWAP1
0xf9 DUP4
0xfa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10f AND
0x110 MUL
0x111 OR
0x112 SWAP1
0x113 SSTORE
0x114 POP
---
0xd6: V43 = 0x0
0xd9: V44 = 0x100
0xdc: V45 = EXP 0x100 0x0
0xde: V46 = S[0x0]
0xe0: V47 = 0xffffffffffffffffffffffffffffffffffffffff
0xf5: V48 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xf6: V49 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xf7: V50 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V46
0xfa: V51 = 0xffffffffffffffffffffffffffffffffffffffff
0x10f: V52 = AND 0xffffffffffffffffffffffffffffffffffffffff V24
0x110: V53 = MUL V52 0x1
0x111: V54 = OR V53 V50
0x113: S[0x0] = V54
---
Entry stack: [V11, 0x7d, V24]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x7d, V24]

================================

Block 0x115
[0x115:0x117]
---
Predecessors: [0x7f, 0xd5]
Successors: [0x7d]
---
0x115 JUMPDEST
0x116 POP
0x117 JUMP
---
0x115: JUMPDEST 
0x117: JUMP 0x7d
---
Entry stack: [V11, 0x7d, V24]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x118
[0x118:0x150]
---
Predecessors: []
Successors: [0x151]
---
0x118 STOP
0x119 LOG1
0x11a PUSH6 0x627a7a723058
0x121 SHA3
0x122 EXTCODECOPY
0x123 MISSING 0x4d
0x124 SWAP15
0x125 POP
0x126 SHR
0x127 MISSING 0x49
0x128 PUSH29 0x13b7f2777b7b303863c9cb9ad9eb5d2577dc050fee162d955b00296060
0x146 PUSH1 0x40
0x148 MSTORE
0x149 PUSH1 0x4
0x14b CALLDATASIZE
0x14c LT
0x14d PUSH2 0x62
0x150 JUMPI
---
0x118: STOP 
0x119: LOG S0 S1 S2
0x11a: V55 = 0x627a7a723058
0x121: V56 = SHA3 0x627a7a723058 S3
0x122: EXTCODECOPY V56 S4 S5 S6
0x123: MISSING 0x4d
0x126: V57 = SHR S1 S2
0x127: MISSING 0x49
0x128: V58 = 0x13b7f2777b7b303863c9cb9ad9eb5d2577dc050fee162d955b00296060
0x146: V59 = 0x40
0x148: M[0x40] = 0x13b7f2777b7b303863c9cb9ad9eb5d2577dc050fee162d955b00296060
0x149: V60 = 0x4
0x14b: V61 = CALLDATASIZE
0x14c: V62 = LT V61 0x4
0x14d: V63 = 0x62
0x150: THROWI V62
---
Entry stack: []
Stack pops: 0
Stack additions: [V57, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S0]
Exit stack: []

================================

Block 0x151
[0x151:0x184]
---
Predecessors: [0x118]
Successors: [0x185]
---
0x151 PUSH1 0x0
0x153 CALLDATALOAD
0x154 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x172 SWAP1
0x173 DIV
0x174 PUSH4 0xffffffff
0x179 AND
0x17a DUP1
0x17b PUSH4 0x223c217b
0x180 EQ
0x181 PUSH2 0x67
0x184 JUMPI
---
0x151: V64 = 0x0
0x153: V65 = CALLDATALOAD 0x0
0x154: V66 = 0x100000000000000000000000000000000000000000000000000000000
0x173: V67 = DIV V65 0x100000000000000000000000000000000000000000000000000000000
0x174: V68 = 0xffffffff
0x179: V69 = AND 0xffffffff V67
0x17b: V70 = 0x223c217b
0x180: V71 = EQ 0x223c217b V69
0x181: V72 = 0x67
0x184: THROWI V71
---
Entry stack: []
Stack pops: 0
Stack additions: [V69]
Exit stack: [V69]

================================

Block 0x185
[0x185:0x18f]
---
Predecessors: [0x151]
Successors: [0x190]
---
0x185 DUP1
0x186 PUSH4 0x89476069
0x18b EQ
0x18c PUSH2 0xe0
0x18f JUMPI
---
0x186: V73 = 0x89476069
0x18b: V74 = EQ 0x89476069 V69
0x18c: V75 = 0xe0
0x18f: THROWI V74
---
Entry stack: [V69]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V69]

================================

Block 0x190
[0x190:0x19a]
---
Predecessors: [0x185]
Successors: [0x19b]
---
0x190 DUP1
0x191 PUSH4 0xb215814b
0x196 EQ
0x197 PUSH2 0x131
0x19a JUMPI
---
0x191: V76 = 0xb215814b
0x196: V77 = EQ 0xb215814b V69
0x197: V78 = 0x131
0x19a: THROWI V77
---
Entry stack: [V69]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V69]

================================

Block 0x19b
[0x19b:0x1a5]
---
Predecessors: [0x190]
Successors: [0x1a6]
---
0x19b DUP1
0x19c PUSH4 0xf2fde38b
0x1a1 EQ
0x1a2 PUSH2 0x1a1
0x1a5 JUMPI
---
0x19c: V79 = 0xf2fde38b
0x1a1: V80 = EQ 0xf2fde38b V69
0x1a2: V81 = 0x1a1
0x1a5: THROWI V80
---
Entry stack: [V69]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V69]

================================

Block 0x1a6
[0x1a6:0x1aa]
---
Predecessors: [0x19b]
Successors: []
---
0x1a6 JUMPDEST
0x1a7 PUSH1 0x0
0x1a9 DUP1
0x1aa REVERT
---
0x1a6: JUMPDEST 
0x1a7: V82 = 0x0
0x1aa: REVERT 0x0 0x0
---
Entry stack: [V69]
Stack pops: 0
Stack additions: []
Exit stack: [V69]

================================

Block 0x1ab
[0x1ab:0x1b1]
---
Predecessors: [0x703]
Successors: [0x1b2]
---
0x1ab JUMPDEST
0x1ac CALLVALUE
0x1ad ISZERO
0x1ae PUSH2 0x72
0x1b1 JUMPI
---
0x1ab: JUMPDEST 
0x1ac: V83 = CALLVALUE
0x1ad: V84 = ISZERO V83
0x1ae: V85 = 0x72
0x1b1: THROWI V84
---
Entry stack: [V370]
Stack pops: 0
Stack additions: []
Exit stack: [V370]

================================

Block 0x1b2
[0x1b2:0x1b5]
---
Predecessors: [0x1ab]
Successors: []
---
0x1b2 PUSH1 0x0
0x1b4 DUP1
0x1b5 REVERT
---
0x1b2: V86 = 0x0
0x1b5: REVERT 0x0 0x0
---
Entry stack: [V370]
Stack pops: 0
Stack additions: []
Exit stack: [V370]

================================

Block 0x1b6
[0x1b6:0x22a]
---
Predecessors: [0x81c]
Successors: [0x22b]
---
0x1b6 JUMPDEST
0x1b7 PUSH2 0xc6
0x1ba PUSH1 0x4
0x1bc DUP1
0x1bd DUP1
0x1be CALLDATALOAD
0x1bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d4 AND
0x1d5 SWAP1
0x1d6 PUSH1 0x20
0x1d8 ADD
0x1d9 SWAP1
0x1da SWAP2
0x1db SWAP1
0x1dc DUP1
0x1dd CALLDATALOAD
0x1de PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f3 AND
0x1f4 SWAP1
0x1f5 PUSH1 0x20
0x1f7 ADD
0x1f8 SWAP1
0x1f9 SWAP2
0x1fa SWAP1
0x1fb DUP1
0x1fc CALLDATALOAD
0x1fd SWAP1
0x1fe PUSH1 0x20
0x200 ADD
0x201 SWAP1
0x202 SWAP2
0x203 SWAP1
0x204 POP
0x205 POP
0x206 PUSH2 0x1da
0x209 JUMP
0x20a JUMPDEST
0x20b PUSH1 0x40
0x20d MLOAD
0x20e DUP1
0x20f DUP3
0x210 ISZERO
0x211 ISZERO
0x212 ISZERO
0x213 ISZERO
0x214 DUP2
0x215 MSTORE
0x216 PUSH1 0x20
0x218 ADD
0x219 SWAP2
0x21a POP
0x21b POP
0x21c PUSH1 0x40
0x21e MLOAD
0x21f DUP1
0x220 SWAP2
0x221 SUB
0x222 SWAP1
0x223 RETURN
0x224 JUMPDEST
0x225 CALLVALUE
0x226 ISZERO
0x227 PUSH2 0xeb
0x22a JUMPI
---
0x1b6: JUMPDEST 
0x1b7: V87 = 0xc6
0x1ba: V88 = 0x4
0x1be: V89 = CALLDATALOAD 0x4
0x1bf: V90 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d4: V91 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0x1d6: V92 = 0x20
0x1d8: V93 = ADD 0x20 0x4
0x1dd: V94 = CALLDATALOAD 0x24
0x1de: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f3: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x1f5: V97 = 0x20
0x1f7: V98 = ADD 0x20 0x24
0x1fc: V99 = CALLDATALOAD 0x44
0x1fe: V100 = 0x20
0x200: V101 = ADD 0x20 0x44
0x206: V102 = 0x1da
0x209: THROW 
0x20a: JUMPDEST 
0x20b: V103 = 0x40
0x20d: V104 = M[0x40]
0x210: V105 = ISZERO S0
0x211: V106 = ISZERO V105
0x212: V107 = ISZERO V106
0x213: V108 = ISZERO V107
0x215: M[V104] = V108
0x216: V109 = 0x20
0x218: V110 = ADD 0x20 V104
0x21c: V111 = 0x40
0x21e: V112 = M[0x40]
0x221: V113 = SUB V110 V112
0x223: RETURN V112 V113
0x224: JUMPDEST 
0x225: V114 = CALLVALUE
0x226: V115 = ISZERO V114
0x227: V116 = 0xeb
0x22a: THROWI V115
---
Entry stack: []
Stack pops: 0
Stack additions: [0xc6, V91, V96, V99]
Exit stack: []

================================

Block 0x22b
[0x22b:0x27b]
---
Predecessors: [0x1b6]
Successors: [0x27c]
---
0x22b PUSH1 0x0
0x22d DUP1
0x22e REVERT
0x22f JUMPDEST
0x230 PUSH2 0x117
0x233 PUSH1 0x4
0x235 DUP1
0x236 DUP1
0x237 CALLDATALOAD
0x238 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24d AND
0x24e SWAP1
0x24f PUSH1 0x20
0x251 ADD
0x252 SWAP1
0x253 SWAP2
0x254 SWAP1
0x255 POP
0x256 POP
0x257 PUSH2 0x301
0x25a JUMP
0x25b JUMPDEST
0x25c PUSH1 0x40
0x25e MLOAD
0x25f DUP1
0x260 DUP3
0x261 ISZERO
0x262 ISZERO
0x263 ISZERO
0x264 ISZERO
0x265 DUP2
0x266 MSTORE
0x267 PUSH1 0x20
0x269 ADD
0x26a SWAP2
0x26b POP
0x26c POP
0x26d PUSH1 0x40
0x26f MLOAD
0x270 DUP1
0x271 SWAP2
0x272 SUB
0x273 SWAP1
0x274 RETURN
0x275 JUMPDEST
0x276 CALLVALUE
0x277 ISZERO
0x278 PUSH2 0x13c
0x27b JUMPI
---
0x22b: V117 = 0x0
0x22e: REVERT 0x0 0x0
0x22f: JUMPDEST 
0x230: V118 = 0x117
0x233: V119 = 0x4
0x237: V120 = CALLDATALOAD 0x4
0x238: V121 = 0xffffffffffffffffffffffffffffffffffffffff
0x24d: V122 = AND 0xffffffffffffffffffffffffffffffffffffffff V120
0x24f: V123 = 0x20
0x251: V124 = ADD 0x20 0x4
0x257: V125 = 0x301
0x25a: THROW 
0x25b: JUMPDEST 
0x25c: V126 = 0x40
0x25e: V127 = M[0x40]
0x261: V128 = ISZERO S0
0x262: V129 = ISZERO V128
0x263: V130 = ISZERO V129
0x264: V131 = ISZERO V130
0x266: M[V127] = V131
0x267: V132 = 0x20
0x269: V133 = ADD 0x20 V127
0x26d: V134 = 0x40
0x26f: V135 = M[0x40]
0x272: V136 = SUB V133 V135
0x274: RETURN V135 V136
0x275: JUMPDEST 
0x276: V137 = CALLVALUE
0x277: V138 = ISZERO V137
0x278: V139 = 0x13c
0x27b: THROWI V138
---
Entry stack: []
Stack pops: 0
Stack additions: [V122, 0x117]
Exit stack: []

================================

Block 0x27c
[0x27c:0x2eb]
---
Predecessors: [0x22b]
Successors: [0x2ec]
---
0x27c PUSH1 0x0
0x27e DUP1
0x27f REVERT
0x280 JUMPDEST
0x281 PUSH2 0x187
0x284 PUSH1 0x4
0x286 DUP1
0x287 DUP1
0x288 CALLDATALOAD
0x289 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x29e AND
0x29f SWAP1
0x2a0 PUSH1 0x20
0x2a2 ADD
0x2a3 SWAP1
0x2a4 SWAP2
0x2a5 SWAP1
0x2a6 DUP1
0x2a7 CALLDATALOAD
0x2a8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2bd AND
0x2be SWAP1
0x2bf PUSH1 0x20
0x2c1 ADD
0x2c2 SWAP1
0x2c3 SWAP2
0x2c4 SWAP1
0x2c5 POP
0x2c6 POP
0x2c7 PUSH2 0x3d7
0x2ca JUMP
0x2cb JUMPDEST
0x2cc PUSH1 0x40
0x2ce MLOAD
0x2cf DUP1
0x2d0 DUP3
0x2d1 ISZERO
0x2d2 ISZERO
0x2d3 ISZERO
0x2d4 ISZERO
0x2d5 DUP2
0x2d6 MSTORE
0x2d7 PUSH1 0x20
0x2d9 ADD
0x2da SWAP2
0x2db POP
0x2dc POP
0x2dd PUSH1 0x40
0x2df MLOAD
0x2e0 DUP1
0x2e1 SWAP2
0x2e2 SUB
0x2e3 SWAP1
0x2e4 RETURN
0x2e5 JUMPDEST
0x2e6 CALLVALUE
0x2e7 ISZERO
0x2e8 PUSH2 0x1ac
0x2eb JUMPI
---
0x27c: V140 = 0x0
0x27f: REVERT 0x0 0x0
0x280: JUMPDEST 
0x281: V141 = 0x187
0x284: V142 = 0x4
0x288: V143 = CALLDATALOAD 0x4
0x289: V144 = 0xffffffffffffffffffffffffffffffffffffffff
0x29e: V145 = AND 0xffffffffffffffffffffffffffffffffffffffff V143
0x2a0: V146 = 0x20
0x2a2: V147 = ADD 0x20 0x4
0x2a7: V148 = CALLDATALOAD 0x24
0x2a8: V149 = 0xffffffffffffffffffffffffffffffffffffffff
0x2bd: V150 = AND 0xffffffffffffffffffffffffffffffffffffffff V148
0x2bf: V151 = 0x20
0x2c1: V152 = ADD 0x20 0x24
0x2c7: V153 = 0x3d7
0x2ca: THROW 
0x2cb: JUMPDEST 
0x2cc: V154 = 0x40
0x2ce: V155 = M[0x40]
0x2d1: V156 = ISZERO S0
0x2d2: V157 = ISZERO V156
0x2d3: V158 = ISZERO V157
0x2d4: V159 = ISZERO V158
0x2d6: M[V155] = V159
0x2d7: V160 = 0x20
0x2d9: V161 = ADD 0x20 V155
0x2dd: V162 = 0x40
0x2df: V163 = M[0x40]
0x2e2: V164 = SUB V161 V163
0x2e4: RETURN V163 V164
0x2e5: JUMPDEST 
0x2e6: V165 = CALLVALUE
0x2e7: V166 = ISZERO V165
0x2e8: V167 = 0x1ac
0x2eb: THROWI V166
---
Entry stack: []
Stack pops: 0
Stack additions: [V150, V145, 0x187]
Exit stack: []

================================

Block 0x2ec
[0x2ec:0x375]
---
Predecessors: [0x27c]
Successors: [0x376]
---
0x2ec PUSH1 0x0
0x2ee DUP1
0x2ef REVERT
0x2f0 JUMPDEST
0x2f1 PUSH2 0x1d8
0x2f4 PUSH1 0x4
0x2f6 DUP1
0x2f7 DUP1
0x2f8 CALLDATALOAD
0x2f9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x30e AND
0x30f SWAP1
0x310 PUSH1 0x20
0x312 ADD
0x313 SWAP1
0x314 SWAP2
0x315 SWAP1
0x316 POP
0x317 POP
0x318 PUSH2 0x4ae
0x31b JUMP
0x31c JUMPDEST
0x31d STOP
0x31e JUMPDEST
0x31f PUSH1 0x0
0x321 DUP1
0x322 PUSH1 0x0
0x324 SWAP1
0x325 SLOAD
0x326 SWAP1
0x327 PUSH2 0x100
0x32a EXP
0x32b SWAP1
0x32c DIV
0x32d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x342 AND
0x343 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x358 AND
0x359 CALLER
0x35a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x36f AND
0x370 EQ
0x371 ISZERO
0x372 PUSH2 0x2fa
0x375 JUMPI
---
0x2ec: V168 = 0x0
0x2ef: REVERT 0x0 0x0
0x2f0: JUMPDEST 
0x2f1: V169 = 0x1d8
0x2f4: V170 = 0x4
0x2f8: V171 = CALLDATALOAD 0x4
0x2f9: V172 = 0xffffffffffffffffffffffffffffffffffffffff
0x30e: V173 = AND 0xffffffffffffffffffffffffffffffffffffffff V171
0x310: V174 = 0x20
0x312: V175 = ADD 0x20 0x4
0x318: V176 = 0x4ae
0x31b: THROW 
0x31c: JUMPDEST 
0x31d: STOP 
0x31e: JUMPDEST 
0x31f: V177 = 0x0
0x322: V178 = 0x0
0x325: V179 = S[0x0]
0x327: V180 = 0x100
0x32a: V181 = EXP 0x100 0x0
0x32c: V182 = DIV V179 0x1
0x32d: V183 = 0xffffffffffffffffffffffffffffffffffffffff
0x342: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V182
0x343: V185 = 0xffffffffffffffffffffffffffffffffffffffff
0x358: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff V184
0x359: V187 = CALLER
0x35a: V188 = 0xffffffffffffffffffffffffffffffffffffffff
0x36f: V189 = AND 0xffffffffffffffffffffffffffffffffffffffff V187
0x370: V190 = EQ V189 V186
0x371: V191 = ISZERO V190
0x372: V192 = 0x2fa
0x375: THROWI V191
---
Entry stack: []
Stack pops: 0
Stack additions: [V173, 0x1d8, 0x0]
Exit stack: []

================================

Block 0x376
[0x376:0x41b]
---
Predecessors: [0x2ec]
Successors: [0x41c]
---
0x376 DUP4
0x377 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x38c AND
0x38d PUSH4 0xa9059cbb
0x392 DUP5
0x393 DUP5
0x394 PUSH1 0x0
0x396 PUSH1 0x40
0x398 MLOAD
0x399 PUSH1 0x20
0x39b ADD
0x39c MSTORE
0x39d PUSH1 0x40
0x39f MLOAD
0x3a0 DUP4
0x3a1 PUSH4 0xffffffff
0x3a6 AND
0x3a7 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x3c5 MUL
0x3c6 DUP2
0x3c7 MSTORE
0x3c8 PUSH1 0x4
0x3ca ADD
0x3cb DUP1
0x3cc DUP4
0x3cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e2 AND
0x3e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f8 AND
0x3f9 DUP2
0x3fa MSTORE
0x3fb PUSH1 0x20
0x3fd ADD
0x3fe DUP3
0x3ff DUP2
0x400 MSTORE
0x401 PUSH1 0x20
0x403 ADD
0x404 SWAP3
0x405 POP
0x406 POP
0x407 POP
0x408 PUSH1 0x20
0x40a PUSH1 0x40
0x40c MLOAD
0x40d DUP1
0x40e DUP4
0x40f SUB
0x410 DUP2
0x411 PUSH1 0x0
0x413 DUP8
0x414 DUP1
0x415 EXTCODESIZE
0x416 ISZERO
0x417 ISZERO
0x418 PUSH2 0x2dc
0x41b JUMPI
---
0x377: V193 = 0xffffffffffffffffffffffffffffffffffffffff
0x38c: V194 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x38d: V195 = 0xa9059cbb
0x394: V196 = 0x0
0x396: V197 = 0x40
0x398: V198 = M[0x40]
0x399: V199 = 0x20
0x39b: V200 = ADD 0x20 V198
0x39c: M[V200] = 0x0
0x39d: V201 = 0x40
0x39f: V202 = M[0x40]
0x3a1: V203 = 0xffffffff
0x3a6: V204 = AND 0xffffffff 0xa9059cbb
0x3a7: V205 = 0x100000000000000000000000000000000000000000000000000000000
0x3c5: V206 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x3c7: M[V202] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x3c8: V207 = 0x4
0x3ca: V208 = ADD 0x4 V202
0x3cd: V209 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e2: V210 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x3e3: V211 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f8: V212 = AND 0xffffffffffffffffffffffffffffffffffffffff V210
0x3fa: M[V208] = V212
0x3fb: V213 = 0x20
0x3fd: V214 = ADD 0x20 V208
0x400: M[V214] = S1
0x401: V215 = 0x20
0x403: V216 = ADD 0x20 V214
0x408: V217 = 0x20
0x40a: V218 = 0x40
0x40c: V219 = M[0x40]
0x40f: V220 = SUB V216 V219
0x411: V221 = 0x0
0x415: V222 = EXTCODESIZE V194
0x416: V223 = ISZERO V222
0x417: V224 = ISZERO V223
0x418: V225 = 0x2dc
0x41b: THROWI V224
---
Entry stack: [0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V194, 0xa9059cbb, V216, 0x20, V219, V220, V219, 0x0, V194]
Exit stack: [S2, S1, S0, 0x0, V194, 0xa9059cbb, V216, 0x20, V219, V220, V219, 0x0, V194]

================================

Block 0x41c
[0x41c:0x42c]
---
Predecessors: [0x376]
Successors: [0x42d]
---
0x41c PUSH1 0x0
0x41e DUP1
0x41f REVERT
0x420 JUMPDEST
0x421 PUSH2 0x2c6
0x424 GAS
0x425 SUB
0x426 CALL
0x427 ISZERO
0x428 ISZERO
0x429 PUSH2 0x2ed
0x42c JUMPI
---
0x41c: V226 = 0x0
0x41f: REVERT 0x0 0x0
0x420: JUMPDEST 
0x421: V227 = 0x2c6
0x424: V228 = GAS
0x425: V229 = SUB V228 0x2c6
0x426: V230 = CALL V229 S0 S1 S2 S3 S4 S5
0x427: V231 = ISZERO V230
0x428: V232 = ISZERO V231
0x429: V233 = 0x2ed
0x42c: THROWI V232
---
Entry stack: [S12, S11, S10, 0x0, V194, 0xa9059cbb, V216, 0x20, V219, V220, V219, 0x0, V194]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x42d
[0x42d:0x43d]
---
Predecessors: [0x41c]
Successors: [0x43e]
---
0x42d PUSH1 0x0
0x42f DUP1
0x430 REVERT
0x431 JUMPDEST
0x432 POP
0x433 POP
0x434 POP
0x435 PUSH1 0x40
0x437 MLOAD
0x438 DUP1
0x439 MLOAD
0x43a SWAP1
0x43b POP
0x43c SWAP1
0x43d POP
---
0x42d: V234 = 0x0
0x430: REVERT 0x0 0x0
0x431: JUMPDEST 
0x435: V235 = 0x40
0x437: V236 = M[0x40]
0x439: V237 = M[V236]
---
Entry stack: []
Stack pops: 0
Stack additions: [V237]
Exit stack: []

================================

Block 0x43e
[0x43e:0x4ee]
---
Predecessors: [0x42d]
Successors: [0x4ef]
---
0x43e JUMPDEST
0x43f SWAP4
0x440 SWAP3
0x441 POP
0x442 POP
0x443 POP
0x444 JUMP
0x445 JUMPDEST
0x446 PUSH1 0x0
0x448 DUP1
0x449 ADDRESS
0x44a SWAP1
0x44b POP
0x44c PUSH2 0x3cf
0x44f DUP4
0x450 CALLER
0x451 DUP6
0x452 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x467 AND
0x468 PUSH4 0x70a08231
0x46d DUP6
0x46e PUSH1 0x0
0x470 PUSH1 0x40
0x472 MLOAD
0x473 PUSH1 0x20
0x475 ADD
0x476 MSTORE
0x477 PUSH1 0x40
0x479 MLOAD
0x47a DUP3
0x47b PUSH4 0xffffffff
0x480 AND
0x481 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x49f MUL
0x4a0 DUP2
0x4a1 MSTORE
0x4a2 PUSH1 0x4
0x4a4 ADD
0x4a5 DUP1
0x4a6 DUP3
0x4a7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4bc AND
0x4bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4d2 AND
0x4d3 DUP2
0x4d4 MSTORE
0x4d5 PUSH1 0x20
0x4d7 ADD
0x4d8 SWAP2
0x4d9 POP
0x4da POP
0x4db PUSH1 0x20
0x4dd PUSH1 0x40
0x4df MLOAD
0x4e0 DUP1
0x4e1 DUP4
0x4e2 SUB
0x4e3 DUP2
0x4e4 PUSH1 0x0
0x4e6 DUP8
0x4e7 DUP1
0x4e8 EXTCODESIZE
0x4e9 ISZERO
0x4ea ISZERO
0x4eb PUSH2 0x3af
0x4ee JUMPI
---
0x43e: JUMPDEST 
0x444: JUMP S4
0x445: JUMPDEST 
0x446: V238 = 0x0
0x449: V239 = ADDRESS
0x44c: V240 = 0x3cf
0x450: V241 = CALLER
0x452: V242 = 0xffffffffffffffffffffffffffffffffffffffff
0x467: V243 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x468: V244 = 0x70a08231
0x46e: V245 = 0x0
0x470: V246 = 0x40
0x472: V247 = M[0x40]
0x473: V248 = 0x20
0x475: V249 = ADD 0x20 V247
0x476: M[V249] = 0x0
0x477: V250 = 0x40
0x479: V251 = M[0x40]
0x47b: V252 = 0xffffffff
0x480: V253 = AND 0xffffffff 0x70a08231
0x481: V254 = 0x100000000000000000000000000000000000000000000000000000000
0x49f: V255 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x4a1: M[V251] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x4a2: V256 = 0x4
0x4a4: V257 = ADD 0x4 V251
0x4a7: V258 = 0xffffffffffffffffffffffffffffffffffffffff
0x4bc: V259 = AND 0xffffffffffffffffffffffffffffffffffffffff V239
0x4bd: V260 = 0xffffffffffffffffffffffffffffffffffffffff
0x4d2: V261 = AND 0xffffffffffffffffffffffffffffffffffffffff V259
0x4d4: M[V257] = V261
0x4d5: V262 = 0x20
0x4d7: V263 = ADD 0x20 V257
0x4db: V264 = 0x20
0x4dd: V265 = 0x40
0x4df: V266 = M[0x40]
0x4e2: V267 = SUB V263 V266
0x4e4: V268 = 0x0
0x4e8: V269 = EXTCODESIZE V243
0x4e9: V270 = ISZERO V269
0x4ea: V271 = ISZERO V270
0x4eb: V272 = 0x3af
0x4ee: THROWI V271
---
Entry stack: [V237]
Stack pops: 9
Stack additions: [V243, 0x0, V266, V267, V266, 0x20, V263, 0x70a08231, V243, V241, S0, 0x3cf, V239, 0x0, S0]
Exit stack: []

================================

Block 0x4ef
[0x4ef:0x4ff]
---
Predecessors: [0x43e]
Successors: [0x500]
---
0x4ef PUSH1 0x0
0x4f1 DUP1
0x4f2 REVERT
0x4f3 JUMPDEST
0x4f4 PUSH2 0x2c6
0x4f7 GAS
0x4f8 SUB
0x4f9 CALL
0x4fa ISZERO
0x4fb ISZERO
0x4fc PUSH2 0x3c0
0x4ff JUMPI
---
0x4ef: V273 = 0x0
0x4f2: REVERT 0x0 0x0
0x4f3: JUMPDEST 
0x4f4: V274 = 0x2c6
0x4f7: V275 = GAS
0x4f8: V276 = SUB V275 0x2c6
0x4f9: V277 = CALL V276 S0 S1 S2 S3 S4 S5
0x4fa: V278 = ISZERO V277
0x4fb: V279 = ISZERO V278
0x4fc: V280 = 0x3c0
0x4ff: THROWI V279
---
Entry stack: [S14, 0x0, V239, 0x3cf, S10, V241, V243, 0x70a08231, V263, 0x20, V266, V267, V266, 0x0, V243]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x500
[0x500:0x5c4]
---
Predecessors: [0x4ef]
Successors: [0x5c5]
---
0x500 PUSH1 0x0
0x502 DUP1
0x503 REVERT
0x504 JUMPDEST
0x505 POP
0x506 POP
0x507 POP
0x508 PUSH1 0x40
0x50a MLOAD
0x50b DUP1
0x50c MLOAD
0x50d SWAP1
0x50e POP
0x50f PUSH2 0x1da
0x512 JUMP
0x513 JUMPDEST
0x514 SWAP2
0x515 POP
0x516 POP
0x517 SWAP2
0x518 SWAP1
0x519 POP
0x51a JUMP
0x51b JUMPDEST
0x51c PUSH1 0x0
0x51e DUP1
0x51f ADDRESS
0x520 SWAP1
0x521 POP
0x522 PUSH2 0x4a5
0x525 DUP5
0x526 DUP5
0x527 DUP7
0x528 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x53d AND
0x53e PUSH4 0x70a08231
0x543 DUP6
0x544 PUSH1 0x0
0x546 PUSH1 0x40
0x548 MLOAD
0x549 PUSH1 0x20
0x54b ADD
0x54c MSTORE
0x54d PUSH1 0x40
0x54f MLOAD
0x550 DUP3
0x551 PUSH4 0xffffffff
0x556 AND
0x557 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x575 MUL
0x576 DUP2
0x577 MSTORE
0x578 PUSH1 0x4
0x57a ADD
0x57b DUP1
0x57c DUP3
0x57d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x592 AND
0x593 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5a8 AND
0x5a9 DUP2
0x5aa MSTORE
0x5ab PUSH1 0x20
0x5ad ADD
0x5ae SWAP2
0x5af POP
0x5b0 POP
0x5b1 PUSH1 0x20
0x5b3 PUSH1 0x40
0x5b5 MLOAD
0x5b6 DUP1
0x5b7 DUP4
0x5b8 SUB
0x5b9 DUP2
0x5ba PUSH1 0x0
0x5bc DUP8
0x5bd DUP1
0x5be EXTCODESIZE
0x5bf ISZERO
0x5c0 ISZERO
0x5c1 PUSH2 0x485
0x5c4 JUMPI
---
0x500: V281 = 0x0
0x503: REVERT 0x0 0x0
0x504: JUMPDEST 
0x508: V282 = 0x40
0x50a: V283 = M[0x40]
0x50c: V284 = M[V283]
0x50f: V285 = 0x1da
0x512: THROW 
0x513: JUMPDEST 
0x51a: JUMP S4
0x51b: JUMPDEST 
0x51c: V286 = 0x0
0x51f: V287 = ADDRESS
0x522: V288 = 0x4a5
0x528: V289 = 0xffffffffffffffffffffffffffffffffffffffff
0x53d: V290 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x53e: V291 = 0x70a08231
0x544: V292 = 0x0
0x546: V293 = 0x40
0x548: V294 = M[0x40]
0x549: V295 = 0x20
0x54b: V296 = ADD 0x20 V294
0x54c: M[V296] = 0x0
0x54d: V297 = 0x40
0x54f: V298 = M[0x40]
0x551: V299 = 0xffffffff
0x556: V300 = AND 0xffffffff 0x70a08231
0x557: V301 = 0x100000000000000000000000000000000000000000000000000000000
0x575: V302 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x577: M[V298] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x578: V303 = 0x4
0x57a: V304 = ADD 0x4 V298
0x57d: V305 = 0xffffffffffffffffffffffffffffffffffffffff
0x592: V306 = AND 0xffffffffffffffffffffffffffffffffffffffff V287
0x593: V307 = 0xffffffffffffffffffffffffffffffffffffffff
0x5a8: V308 = AND 0xffffffffffffffffffffffffffffffffffffffff V306
0x5aa: M[V304] = V308
0x5ab: V309 = 0x20
0x5ad: V310 = ADD 0x20 V304
0x5b1: V311 = 0x20
0x5b3: V312 = 0x40
0x5b5: V313 = M[0x40]
0x5b8: V314 = SUB V310 V313
0x5ba: V315 = 0x0
0x5be: V316 = EXTCODESIZE V290
0x5bf: V317 = ISZERO V316
0x5c0: V318 = ISZERO V317
0x5c1: V319 = 0x485
0x5c4: THROWI V318
---
Entry stack: []
Stack pops: 0
Stack additions: [V284, S0, V290, 0x0, V313, V314, V313, 0x20, V310, 0x70a08231, V290, S0, S1, 0x4a5, V287, 0x0, S0, S1]
Exit stack: []

================================

Block 0x5c5
[0x5c5:0x5d5]
---
Predecessors: [0x500]
Successors: [0x5d6]
---
0x5c5 PUSH1 0x0
0x5c7 DUP1
0x5c8 REVERT
0x5c9 JUMPDEST
0x5ca PUSH2 0x2c6
0x5cd GAS
0x5ce SUB
0x5cf CALL
0x5d0 ISZERO
0x5d1 ISZERO
0x5d2 PUSH2 0x496
0x5d5 JUMPI
---
0x5c5: V320 = 0x0
0x5c8: REVERT 0x0 0x0
0x5c9: JUMPDEST 
0x5ca: V321 = 0x2c6
0x5cd: V322 = GAS
0x5ce: V323 = SUB V322 0x2c6
0x5cf: V324 = CALL V323 S0 S1 S2 S3 S4 S5
0x5d0: V325 = ISZERO V324
0x5d1: V326 = ISZERO V325
0x5d2: V327 = 0x496
0x5d5: THROWI V326
---
Entry stack: [S15, S14, 0x0, V287, 0x4a5, S10, S9, V290, 0x70a08231, V310, 0x20, V313, V314, V313, 0x0, V290]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x5d6
[0x5d6:0x647]
---
Predecessors: [0x5c5]
Successors: [0x648]
---
0x5d6 PUSH1 0x0
0x5d8 DUP1
0x5d9 REVERT
0x5da JUMPDEST
0x5db POP
0x5dc POP
0x5dd POP
0x5de PUSH1 0x40
0x5e0 MLOAD
0x5e1 DUP1
0x5e2 MLOAD
0x5e3 SWAP1
0x5e4 POP
0x5e5 PUSH2 0x1da
0x5e8 JUMP
0x5e9 JUMPDEST
0x5ea SWAP2
0x5eb POP
0x5ec POP
0x5ed SWAP3
0x5ee SWAP2
0x5ef POP
0x5f0 POP
0x5f1 JUMP
0x5f2 JUMPDEST
0x5f3 PUSH1 0x0
0x5f5 DUP1
0x5f6 SWAP1
0x5f7 SLOAD
0x5f8 SWAP1
0x5f9 PUSH2 0x100
0x5fc EXP
0x5fd SWAP1
0x5fe DIV
0x5ff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x614 AND
0x615 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x62a AND
0x62b CALLER
0x62c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x641 AND
0x642 EQ
0x643 ISZERO
0x644 PUSH2 0x544
0x647 JUMPI
---
0x5d6: V328 = 0x0
0x5d9: REVERT 0x0 0x0
0x5da: JUMPDEST 
0x5de: V329 = 0x40
0x5e0: V330 = M[0x40]
0x5e2: V331 = M[V330]
0x5e5: V332 = 0x1da
0x5e8: THROW 
0x5e9: JUMPDEST 
0x5f1: JUMP S5
0x5f2: JUMPDEST 
0x5f3: V333 = 0x0
0x5f7: V334 = S[0x0]
0x5f9: V335 = 0x100
0x5fc: V336 = EXP 0x100 0x0
0x5fe: V337 = DIV V334 0x1
0x5ff: V338 = 0xffffffffffffffffffffffffffffffffffffffff
0x614: V339 = AND 0xffffffffffffffffffffffffffffffffffffffff V337
0x615: V340 = 0xffffffffffffffffffffffffffffffffffffffff
0x62a: V341 = AND 0xffffffffffffffffffffffffffffffffffffffff V339
0x62b: V342 = CALLER
0x62c: V343 = 0xffffffffffffffffffffffffffffffffffffffff
0x641: V344 = AND 0xffffffffffffffffffffffffffffffffffffffff V342
0x642: V345 = EQ V344 V341
0x643: V346 = ISZERO V345
0x644: V347 = 0x544
0x647: THROWI V346
---
Entry stack: []
Stack pops: 0
Stack additions: [V331, S0]
Exit stack: []

================================

Block 0x648
[0x648:0x687]
---
Predecessors: [0x5d6]
Successors: [0x688]
---
0x648 DUP1
0x649 PUSH1 0x0
0x64b DUP1
0x64c PUSH2 0x100
0x64f EXP
0x650 DUP2
0x651 SLOAD
0x652 DUP2
0x653 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x668 MUL
0x669 NOT
0x66a AND
0x66b SWAP1
0x66c DUP4
0x66d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x682 AND
0x683 MUL
0x684 OR
0x685 SWAP1
0x686 SSTORE
0x687 POP
---
0x649: V348 = 0x0
0x64c: V349 = 0x100
0x64f: V350 = EXP 0x100 0x0
0x651: V351 = S[0x0]
0x653: V352 = 0xffffffffffffffffffffffffffffffffffffffff
0x668: V353 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x669: V354 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x66a: V355 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V351
0x66d: V356 = 0xffffffffffffffffffffffffffffffffffffffff
0x682: V357 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x683: V358 = MUL V357 0x1
0x684: V359 = OR V358 V355
0x686: S[0x0] = V359
---
Entry stack: []
Stack pops: 1
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x688
[0x688:0x6c3]
---
Predecessors: [0x648]
Successors: [0x6c4]
Has unresolved jump.
---
0x688 JUMPDEST
0x689 POP
0x68a JUMP
0x68b STOP
0x68c LOG1
0x68d PUSH6 0x627a7a723058
0x694 SHA3
0x695 MISSING 0xbd
0x696 DUP7
0x697 MISSING 0xdf
0x698 CREATE
0x699 MISSING 0xaa
0x69a MISSING 0xfb
0x69b MISSING 0xe
0x69c MISSING 0xc7
0x69d MISSING 0xd9
0x69e RETURN
0x69f LOG0
0x6a0 MISSING 0xa9
0x6a1 PUSH3 0xe04f22
0x6a5 PUSH27 0xb0182a6d03063f2078267a79868bf9002960606040526004361061
0x6c1 STOP
0x6c2 MISSING 0xdb
0x6c3 JUMPI
---
0x688: JUMPDEST 
0x68a: JUMP S1
0x68b: STOP 
0x68c: LOG S0 S1 S2
0x68d: V360 = 0x627a7a723058
0x694: V361 = SHA3 0x627a7a723058 S3
0x695: MISSING 0xbd
0x697: MISSING 0xdf
0x698: V362 = CREATE S0 S1 S2
0x699: MISSING 0xaa
0x69a: MISSING 0xfb
0x69b: MISSING 0xe
0x69c: MISSING 0xc7
0x69d: MISSING 0xd9
0x69e: RETURN S0 S1
0x69f: LOG S0 S1
0x6a0: MISSING 0xa9
0x6a1: V363 = 0xe04f22
0x6a5: V364 = 0xb0182a6d03063f2078267a79868bf9002960606040526004361061
0x6c1: STOP 
0x6c2: MISSING 0xdb
0x6c3: JUMPI S0 S1
---
Entry stack: [S0]
Stack pops: 11004
Stack additions: []
Exit stack: []

================================

Block 0x6c4
[0x6c4:0x6f7]
---
Predecessors: [0x688]
Successors: [0x6f8]
---
0x6c4 PUSH1 0x0
0x6c6 CALLDATALOAD
0x6c7 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x6e5 SWAP1
0x6e6 DIV
0x6e7 PUSH4 0xffffffff
0x6ec AND
0x6ed DUP1
0x6ee PUSH4 0x223c217b
0x6f3 EQ
0x6f4 PUSH2 0xe5
0x6f7 JUMPI
---
0x6c4: V365 = 0x0
0x6c6: V366 = CALLDATALOAD 0x0
0x6c7: V367 = 0x100000000000000000000000000000000000000000000000000000000
0x6e6: V368 = DIV V366 0x100000000000000000000000000000000000000000000000000000000
0x6e7: V369 = 0xffffffff
0x6ec: V370 = AND 0xffffffff V368
0x6ee: V371 = 0x223c217b
0x6f3: V372 = EQ 0x223c217b V370
0x6f4: V373 = 0xe5
0x6f7: THROWI V372
---
Entry stack: []
Stack pops: 0
Stack additions: [V370]
Exit stack: [V370]

================================

Block 0x6f8
[0x6f8:0x702]
---
Predecessors: [0x6c4]
Successors: [0x703]
---
0x6f8 DUP1
0x6f9 PUSH4 0x3ee2d7c2
0x6fe EQ
0x6ff PUSH2 0x15e
0x702 JUMPI
---
0x6f9: V374 = 0x3ee2d7c2
0x6fe: V375 = EQ 0x3ee2d7c2 V370
0x6ff: V376 = 0x15e
0x702: THROWI V375
---
Entry stack: [V370]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V370]

================================

Block 0x703
[0x703:0x70d]
---
Predecessors: [0x6f8]
Successors: [0x1ab, 0x70e]
---
0x703 DUP1
0x704 PUSH4 0x41c0e1b5
0x709 EQ
0x70a PUSH2 0x1ab
0x70d JUMPI
---
0x704: V377 = 0x41c0e1b5
0x709: V378 = EQ 0x41c0e1b5 V370
0x70a: V379 = 0x1ab
0x70d: JUMPI 0x1ab V378
---
Entry stack: [V370]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V370]

================================

Block 0x70e
[0x70e:0x718]
---
Predecessors: [0x703]
Successors: [0x719]
---
0x70e DUP1
0x70f PUSH4 0x893d20e8
0x714 EQ
0x715 PUSH2 0x1c0
0x718 JUMPI
---
0x70f: V380 = 0x893d20e8
0x714: V381 = EQ 0x893d20e8 V370
0x715: V382 = 0x1c0
0x718: THROWI V381
---
Entry stack: [V370]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V370]

================================

Block 0x719
[0x719:0x723]
---
Predecessors: [0x70e]
Successors: [0x724]
---
0x719 DUP1
0x71a PUSH4 0x89476069
0x71f EQ
0x720 PUSH2 0x215
0x723 JUMPI
---
0x71a: V383 = 0x89476069
0x71f: V384 = EQ 0x89476069 V370
0x720: V385 = 0x215
0x723: THROWI V384
---
Entry stack: [V370]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V370]

================================

Block 0x724
[0x724:0x72e]
---
Predecessors: [0x719]
Successors: [0x72f]
---
0x724 DUP1
0x725 PUSH4 0x8cf49cad
0x72a EQ
0x72b PUSH2 0x266
0x72e JUMPI
---
0x725: V386 = 0x8cf49cad
0x72a: V387 = EQ 0x8cf49cad V370
0x72b: V388 = 0x266
0x72e: THROWI V387
---
Entry stack: [V370]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V370]

================================

Block 0x72f
[0x72f:0x739]
---
Predecessors: [0x724]
Successors: [0x73a]
---
0x72f DUP1
0x730 PUSH4 0xb215814b
0x735 EQ
0x736 PUSH2 0x28f
0x739 JUMPI
---
0x730: V389 = 0xb215814b
0x735: V390 = EQ 0xb215814b V370
0x736: V391 = 0x28f
0x739: THROWI V390
---
Entry stack: [V370]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V370]

================================

Block 0x73a
[0x73a:0x744]
---
Predecessors: [0x72f]
Successors: [0x745]
---
0x73a DUP1
0x73b PUSH4 0xbe3eac25
0x740 EQ
0x741 PUSH2 0x2ff
0x744 JUMPI
---
0x73b: V392 = 0xbe3eac25
0x740: V393 = EQ 0xbe3eac25 V370
0x741: V394 = 0x2ff
0x744: THROWI V393
---
Entry stack: [V370]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V370]

================================

Block 0x745
[0x745:0x74f]
---
Predecessors: [0x73a]
Successors: [0x750]
---
0x745 DUP1
0x746 PUSH4 0xc635a9f2
0x74b EQ
0x74c PUSH2 0x32c
0x74f JUMPI
---
0x746: V395 = 0xc635a9f2
0x74b: V396 = EQ 0xc635a9f2 V370
0x74c: V397 = 0x32c
0x74f: THROWI V396
---
Entry stack: [V370]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V370]

================================

Block 0x750
[0x750:0x75a]
---
Predecessors: [0x745]
Successors: [0x75b]
---
0x750 DUP1
0x751 PUSH4 0xcfa4f3e8
0x756 EQ
0x757 PUSH2 0x355
0x75a JUMPI
---
0x751: V398 = 0xcfa4f3e8
0x756: V399 = EQ 0xcfa4f3e8 V370
0x757: V400 = 0x355
0x75a: THROWI V399
---
Entry stack: [V370]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V370]

================================

Block 0x75b
[0x75b:0x765]
---
Predecessors: [0x750]
Successors: [0x766]
---
0x75b DUP1
0x75c PUSH4 0xd0e30db0
0x761 EQ
0x762 PUSH2 0x378
0x765 JUMPI
---
0x75c: V401 = 0xd0e30db0
0x761: V402 = EQ 0xd0e30db0 V370
0x762: V403 = 0x378
0x765: THROWI V402
---
Entry stack: [V370]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V370]

================================

Block 0x766
[0x766:0x770]
---
Predecessors: [0x75b]
Successors: [0x771]
---
0x766 DUP1
0x767 PUSH4 0xe1c7392a
0x76c EQ
0x76d PUSH2 0x382
0x770 JUMPI
---
0x767: V404 = 0xe1c7392a
0x76c: V405 = EQ 0xe1c7392a V370
0x76d: V406 = 0x382
0x770: THROWI V405
---
Entry stack: [V370]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V370]

================================

Block 0x771
[0x771:0x77b]
---
Predecessors: [0x766]
Successors: [0x77c]
---
0x771 DUP1
0x772 PUSH4 0xf2fde38b
0x777 EQ
0x778 PUSH2 0x38c
0x77b JUMPI
---
0x772: V407 = 0xf2fde38b
0x777: V408 = EQ 0xf2fde38b V370
0x778: V409 = 0x38c
0x77b: THROWI V408
---
Entry stack: [V370]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V370]

================================

Block 0x77c
[0x77c:0x786]
---
Predecessors: [0x771]
Successors: [0x787]
---
0x77c DUP1
0x77d PUSH4 0xf3fef3a3
0x782 EQ
0x783 PUSH2 0x3c5
0x786 JUMPI
---
0x77d: V410 = 0xf3fef3a3
0x782: V411 = EQ 0xf3fef3a3 V370
0x783: V412 = 0x3c5
0x786: THROWI V411
---
Entry stack: [V370]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V370]

================================

Block 0x787
[0x787:0x791]
---
Predecessors: [0x77c]
Successors: [0x792]
---
0x787 DUP1
0x788 PUSH4 0xf83d08ba
0x78d EQ
0x78e PUSH2 0x407
0x791 JUMPI
---
0x788: V413 = 0xf83d08ba
0x78d: V414 = EQ 0xf83d08ba V370
0x78e: V415 = 0x407
0x791: THROWI V414
---
Entry stack: [V370]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V370]

================================

Block 0x792
[0x792:0x7a2]
---
Predecessors: [0x787]
Successors: [0x7a3]
---
0x792 JUMPDEST
0x793 PUSH2 0xe3
0x796 PUSH2 0x41c
0x799 JUMP
0x79a JUMPDEST
0x79b STOP
0x79c JUMPDEST
0x79d CALLVALUE
0x79e ISZERO
0x79f PUSH2 0xf0
0x7a2 JUMPI
---
0x792: JUMPDEST 
0x793: V416 = 0xe3
0x796: V417 = 0x41c
0x799: THROW 
0x79a: JUMPDEST 
0x79b: STOP 
0x79c: JUMPDEST 
0x79d: V418 = CALLVALUE
0x79e: V419 = ISZERO V418
0x79f: V420 = 0xf0
0x7a2: THROWI V419
---
Entry stack: [V370]
Stack pops: 0
Stack additions: [0xe3]
Exit stack: []

================================

Block 0x7a3
[0x7a3:0x81b]
---
Predecessors: [0x792]
Successors: [0x81c]
---
0x7a3 PUSH1 0x0
0x7a5 DUP1
0x7a6 REVERT
0x7a7 JUMPDEST
0x7a8 PUSH2 0x144
0x7ab PUSH1 0x4
0x7ad DUP1
0x7ae DUP1
0x7af CALLDATALOAD
0x7b0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7c5 AND
0x7c6 SWAP1
0x7c7 PUSH1 0x20
0x7c9 ADD
0x7ca SWAP1
0x7cb SWAP2
0x7cc SWAP1
0x7cd DUP1
0x7ce CALLDATALOAD
0x7cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7e4 AND
0x7e5 SWAP1
0x7e6 PUSH1 0x20
0x7e8 ADD
0x7e9 SWAP1
0x7ea SWAP2
0x7eb SWAP1
0x7ec DUP1
0x7ed CALLDATALOAD
0x7ee SWAP1
0x7ef PUSH1 0x20
0x7f1 ADD
0x7f2 SWAP1
0x7f3 SWAP2
0x7f4 SWAP1
0x7f5 POP
0x7f6 POP
0x7f7 PUSH2 0x4d4
0x7fa JUMP
0x7fb JUMPDEST
0x7fc PUSH1 0x40
0x7fe MLOAD
0x7ff DUP1
0x800 DUP3
0x801 ISZERO
0x802 ISZERO
0x803 ISZERO
0x804 ISZERO
0x805 DUP2
0x806 MSTORE
0x807 PUSH1 0x20
0x809 ADD
0x80a SWAP2
0x80b POP
0x80c POP
0x80d PUSH1 0x40
0x80f MLOAD
0x810 DUP1
0x811 SWAP2
0x812 SUB
0x813 SWAP1
0x814 RETURN
0x815 JUMPDEST
0x816 CALLVALUE
0x817 ISZERO
0x818 PUSH2 0x169
0x81b JUMPI
---
0x7a3: V421 = 0x0
0x7a6: REVERT 0x0 0x0
0x7a7: JUMPDEST 
0x7a8: V422 = 0x144
0x7ab: V423 = 0x4
0x7af: V424 = CALLDATALOAD 0x4
0x7b0: V425 = 0xffffffffffffffffffffffffffffffffffffffff
0x7c5: V426 = AND 0xffffffffffffffffffffffffffffffffffffffff V424
0x7c7: V427 = 0x20
0x7c9: V428 = ADD 0x20 0x4
0x7ce: V429 = CALLDATALOAD 0x24
0x7cf: V430 = 0xffffffffffffffffffffffffffffffffffffffff
0x7e4: V431 = AND 0xffffffffffffffffffffffffffffffffffffffff V429
0x7e6: V432 = 0x20
0x7e8: V433 = ADD 0x20 0x24
0x7ed: V434 = CALLDATALOAD 0x44
0x7ef: V435 = 0x20
0x7f1: V436 = ADD 0x20 0x44
0x7f7: V437 = 0x4d4
0x7fa: THROW 
0x7fb: JUMPDEST 
0x7fc: V438 = 0x40
0x7fe: V439 = M[0x40]
0x801: V440 = ISZERO S0
0x802: V441 = ISZERO V440
0x803: V442 = ISZERO V441
0x804: V443 = ISZERO V442
0x806: M[V439] = V443
0x807: V444 = 0x20
0x809: V445 = ADD 0x20 V439
0x80d: V446 = 0x40
0x80f: V447 = M[0x40]
0x812: V448 = SUB V445 V447
0x814: RETURN V447 V448
0x815: JUMPDEST 
0x816: V449 = CALLVALUE
0x817: V450 = ISZERO V449
0x818: V451 = 0x169
0x81b: THROWI V450
---
Entry stack: []
Stack pops: 0
Stack additions: [V434, V431, V426, 0x144]
Exit stack: []

================================

Block 0x81c
[0x81c:0x868]
---
Predecessors: [0x7a3]
Successors: [0x1b6, 0x869]
---
0x81c PUSH1 0x0
0x81e DUP1
0x81f REVERT
0x820 JUMPDEST
0x821 PUSH2 0x195
0x824 PUSH1 0x4
0x826 DUP1
0x827 DUP1
0x828 CALLDATALOAD
0x829 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x83e AND
0x83f SWAP1
0x840 PUSH1 0x20
0x842 ADD
0x843 SWAP1
0x844 SWAP2
0x845 SWAP1
0x846 POP
0x847 POP
0x848 PUSH2 0x5fb
0x84b JUMP
0x84c JUMPDEST
0x84d PUSH1 0x40
0x84f MLOAD
0x850 DUP1
0x851 DUP3
0x852 DUP2
0x853 MSTORE
0x854 PUSH1 0x20
0x856 ADD
0x857 SWAP2
0x858 POP
0x859 POP
0x85a PUSH1 0x40
0x85c MLOAD
0x85d DUP1
0x85e SWAP2
0x85f SUB
0x860 SWAP1
0x861 RETURN
0x862 JUMPDEST
0x863 CALLVALUE
0x864 ISZERO
0x865 PUSH2 0x1b6
0x868 JUMPI
---
0x81c: V452 = 0x0
0x81f: REVERT 0x0 0x0
0x820: JUMPDEST 
0x821: V453 = 0x195
0x824: V454 = 0x4
0x828: V455 = CALLDATALOAD 0x4
0x829: V456 = 0xffffffffffffffffffffffffffffffffffffffff
0x83e: V457 = AND 0xffffffffffffffffffffffffffffffffffffffff V455
0x840: V458 = 0x20
0x842: V459 = ADD 0x20 0x4
0x848: V460 = 0x5fb
0x84b: THROW 
0x84c: JUMPDEST 
0x84d: V461 = 0x40
0x84f: V462 = M[0x40]
0x853: M[V462] = S0
0x854: V463 = 0x20
0x856: V464 = ADD 0x20 V462
0x85a: V465 = 0x40
0x85c: V466 = M[0x40]
0x85f: V467 = SUB V464 V466
0x861: RETURN V466 V467
0x862: JUMPDEST 
0x863: V468 = CALLVALUE
0x864: V469 = ISZERO V468
0x865: V470 = 0x1b6
0x868: JUMPI 0x1b6 V469
---
Entry stack: []
Stack pops: 0
Stack additions: [V457, 0x195]
Exit stack: []

================================

Block 0x869
[0x869:0x87d]
---
Predecessors: [0x81c]
Successors: [0x87e]
---
0x869 PUSH1 0x0
0x86b DUP1
0x86c REVERT
0x86d JUMPDEST
0x86e PUSH2 0x1be
0x871 PUSH2 0x613
0x874 JUMP
0x875 JUMPDEST
0x876 STOP
0x877 JUMPDEST
0x878 CALLVALUE
0x879 ISZERO
0x87a PUSH2 0x1cb
0x87d JUMPI
---
0x869: V471 = 0x0
0x86c: REVERT 0x0 0x0
0x86d: JUMPDEST 
0x86e: V472 = 0x1be
0x871: V473 = 0x613
0x874: THROW 
0x875: JUMPDEST 
0x876: STOP 
0x877: JUMPDEST 
0x878: V474 = CALLVALUE
0x879: V475 = ISZERO V474
0x87a: V476 = 0x1cb
0x87d: THROWI V475
---
Entry stack: []
Stack pops: 0
Stack additions: [0x1be]
Exit stack: []

================================

Block 0x87e
[0x87e:0x8d2]
---
Predecessors: [0x869]
Successors: [0x8d3]
---
0x87e PUSH1 0x0
0x880 DUP1
0x881 REVERT
0x882 JUMPDEST
0x883 PUSH2 0x1d3
0x886 PUSH2 0x673
0x889 JUMP
0x88a JUMPDEST
0x88b PUSH1 0x40
0x88d MLOAD
0x88e DUP1
0x88f DUP3
0x890 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8a5 AND
0x8a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8bb AND
0x8bc DUP2
0x8bd MSTORE
0x8be PUSH1 0x20
0x8c0 ADD
0x8c1 SWAP2
0x8c2 POP
0x8c3 POP
0x8c4 PUSH1 0x40
0x8c6 MLOAD
0x8c7 DUP1
0x8c8 SWAP2
0x8c9 SUB
0x8ca SWAP1
0x8cb RETURN
0x8cc JUMPDEST
0x8cd CALLVALUE
0x8ce ISZERO
0x8cf PUSH2 0x220
0x8d2 JUMPI
---
0x87e: V477 = 0x0
0x881: REVERT 0x0 0x0
0x882: JUMPDEST 
0x883: V478 = 0x1d3
0x886: V479 = 0x673
0x889: THROW 
0x88a: JUMPDEST 
0x88b: V480 = 0x40
0x88d: V481 = M[0x40]
0x890: V482 = 0xffffffffffffffffffffffffffffffffffffffff
0x8a5: V483 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x8a6: V484 = 0xffffffffffffffffffffffffffffffffffffffff
0x8bb: V485 = AND 0xffffffffffffffffffffffffffffffffffffffff V483
0x8bd: M[V481] = V485
0x8be: V486 = 0x20
0x8c0: V487 = ADD 0x20 V481
0x8c4: V488 = 0x40
0x8c6: V489 = M[0x40]
0x8c9: V490 = SUB V487 V489
0x8cb: RETURN V489 V490
0x8cc: JUMPDEST 
0x8cd: V491 = CALLVALUE
0x8ce: V492 = ISZERO V491
0x8cf: V493 = 0x220
0x8d2: THROWI V492
---
Entry stack: []
Stack pops: 0
Stack additions: [0x1d3]
Exit stack: []

================================

Block 0x8d3
[0x8d3:0x923]
---
Predecessors: [0x87e]
Successors: [0x924]
---
0x8d3 PUSH1 0x0
0x8d5 DUP1
0x8d6 REVERT
0x8d7 JUMPDEST
0x8d8 PUSH2 0x24c
0x8db PUSH1 0x4
0x8dd DUP1
0x8de DUP1
0x8df CALLDATALOAD
0x8e0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8f5 AND
0x8f6 SWAP1
0x8f7 PUSH1 0x20
0x8f9 ADD
0x8fa SWAP1
0x8fb SWAP2
0x8fc SWAP1
0x8fd POP
0x8fe POP
0x8ff PUSH2 0x69d
0x902 JUMP
0x903 JUMPDEST
0x904 PUSH1 0x40
0x906 MLOAD
0x907 DUP1
0x908 DUP3
0x909 ISZERO
0x90a ISZERO
0x90b ISZERO
0x90c ISZERO
0x90d DUP2
0x90e MSTORE
0x90f PUSH1 0x20
0x911 ADD
0x912 SWAP2
0x913 POP
0x914 POP
0x915 PUSH1 0x40
0x917 MLOAD
0x918 DUP1
0x919 SWAP2
0x91a SUB
0x91b SWAP1
0x91c RETURN
0x91d JUMPDEST
0x91e CALLVALUE
0x91f ISZERO
0x920 PUSH2 0x271
0x923 JUMPI
---
0x8d3: V494 = 0x0
0x8d6: REVERT 0x0 0x0
0x8d7: JUMPDEST 
0x8d8: V495 = 0x24c
0x8db: V496 = 0x4
0x8df: V497 = CALLDATALOAD 0x4
0x8e0: V498 = 0xffffffffffffffffffffffffffffffffffffffff
0x8f5: V499 = AND 0xffffffffffffffffffffffffffffffffffffffff V497
0x8f7: V500 = 0x20
0x8f9: V501 = ADD 0x20 0x4
0x8ff: V502 = 0x69d
0x902: THROW 
0x903: JUMPDEST 
0x904: V503 = 0x40
0x906: V504 = M[0x40]
0x909: V505 = ISZERO S0
0x90a: V506 = ISZERO V505
0x90b: V507 = ISZERO V506
0x90c: V508 = ISZERO V507
0x90e: M[V504] = V508
0x90f: V509 = 0x20
0x911: V510 = ADD 0x20 V504
0x915: V511 = 0x40
0x917: V512 = M[0x40]
0x91a: V513 = SUB V510 V512
0x91c: RETURN V512 V513
0x91d: JUMPDEST 
0x91e: V514 = CALLVALUE
0x91f: V515 = ISZERO V514
0x920: V516 = 0x271
0x923: THROWI V515
---
Entry stack: []
Stack pops: 0
Stack additions: [V499, 0x24c]
Exit stack: []

================================

Block 0x924
[0x924:0x94c]
---
Predecessors: [0x8d3]
Successors: [0x94d]
---
0x924 PUSH1 0x0
0x926 DUP1
0x927 REVERT
0x928 JUMPDEST
0x929 PUSH2 0x279
0x92c PUSH2 0x773
0x92f JUMP
0x930 JUMPDEST
0x931 PUSH1 0x40
0x933 MLOAD
0x934 DUP1
0x935 DUP3
0x936 DUP2
0x937 MSTORE
0x938 PUSH1 0x20
0x93a ADD
0x93b SWAP2
0x93c POP
0x93d POP
0x93e PUSH1 0x40
0x940 MLOAD
0x941 DUP1
0x942 SWAP2
0x943 SUB
0x944 SWAP1
0x945 RETURN
0x946 JUMPDEST
0x947 CALLVALUE
0x948 ISZERO
0x949 PUSH2 0x29a
0x94c JUMPI
---
0x924: V517 = 0x0
0x927: REVERT 0x0 0x0
0x928: JUMPDEST 
0x929: V518 = 0x279
0x92c: V519 = 0x773
0x92f: THROW 
0x930: JUMPDEST 
0x931: V520 = 0x40
0x933: V521 = M[0x40]
0x937: M[V521] = S0
0x938: V522 = 0x20
0x93a: V523 = ADD 0x20 V521
0x93e: V524 = 0x40
0x940: V525 = M[0x40]
0x943: V526 = SUB V523 V525
0x945: RETURN V525 V526
0x946: JUMPDEST 
0x947: V527 = CALLVALUE
0x948: V528 = ISZERO V527
0x949: V529 = 0x29a
0x94c: THROWI V528
---
Entry stack: []
Stack pops: 0
Stack additions: [0x279]
Exit stack: []

================================

Block 0x94d
[0x94d:0x9bc]
---
Predecessors: [0x924]
Successors: [0x9bd]
---
0x94d PUSH1 0x0
0x94f DUP1
0x950 REVERT
0x951 JUMPDEST
0x952 PUSH2 0x2e5
0x955 PUSH1 0x4
0x957 DUP1
0x958 DUP1
0x959 CALLDATALOAD
0x95a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x96f AND
0x970 SWAP1
0x971 PUSH1 0x20
0x973 ADD
0x974 SWAP1
0x975 SWAP2
0x976 SWAP1
0x977 DUP1
0x978 CALLDATALOAD
0x979 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x98e AND
0x98f SWAP1
0x990 PUSH1 0x20
0x992 ADD
0x993 SWAP1
0x994 SWAP2
0x995 SWAP1
0x996 POP
0x997 POP
0x998 PUSH2 0x77d
0x99b JUMP
0x99c JUMPDEST
0x99d PUSH1 0x40
0x99f MLOAD
0x9a0 DUP1
0x9a1 DUP3
0x9a2 ISZERO
0x9a3 ISZERO
0x9a4 ISZERO
0x9a5 ISZERO
0x9a6 DUP2
0x9a7 MSTORE
0x9a8 PUSH1 0x20
0x9aa ADD
0x9ab SWAP2
0x9ac POP
0x9ad POP
0x9ae PUSH1 0x40
0x9b0 MLOAD
0x9b1 DUP1
0x9b2 SWAP2
0x9b3 SUB
0x9b4 SWAP1
0x9b5 RETURN
0x9b6 JUMPDEST
0x9b7 CALLVALUE
0x9b8 ISZERO
0x9b9 PUSH2 0x30a
0x9bc JUMPI
---
0x94d: V530 = 0x0
0x950: REVERT 0x0 0x0
0x951: JUMPDEST 
0x952: V531 = 0x2e5
0x955: V532 = 0x4
0x959: V533 = CALLDATALOAD 0x4
0x95a: V534 = 0xffffffffffffffffffffffffffffffffffffffff
0x96f: V535 = AND 0xffffffffffffffffffffffffffffffffffffffff V533
0x971: V536 = 0x20
0x973: V537 = ADD 0x20 0x4
0x978: V538 = CALLDATALOAD 0x24
0x979: V539 = 0xffffffffffffffffffffffffffffffffffffffff
0x98e: V540 = AND 0xffffffffffffffffffffffffffffffffffffffff V538
0x990: V541 = 0x20
0x992: V542 = ADD 0x20 0x24
0x998: V543 = 0x77d
0x99b: THROW 
0x99c: JUMPDEST 
0x99d: V544 = 0x40
0x99f: V545 = M[0x40]
0x9a2: V546 = ISZERO S0
0x9a3: V547 = ISZERO V546
0x9a4: V548 = ISZERO V547
0x9a5: V549 = ISZERO V548
0x9a7: M[V545] = V549
0x9a8: V550 = 0x20
0x9aa: V551 = ADD 0x20 V545
0x9ae: V552 = 0x40
0x9b0: V553 = M[0x40]
0x9b3: V554 = SUB V551 V553
0x9b5: RETURN V553 V554
0x9b6: JUMPDEST 
0x9b7: V555 = CALLVALUE
0x9b8: V556 = ISZERO V555
0x9b9: V557 = 0x30a
0x9bc: THROWI V556
---
Entry stack: []
Stack pops: 0
Stack additions: [V540, V535, 0x2e5]
Exit stack: []

================================

Block 0x9bd
[0x9bd:0x9e9]
---
Predecessors: [0x94d]
Successors: [0x9ea]
---
0x9bd PUSH1 0x0
0x9bf DUP1
0x9c0 REVERT
0x9c1 JUMPDEST
0x9c2 PUSH2 0x312
0x9c5 PUSH2 0x854
0x9c8 JUMP
0x9c9 JUMPDEST
0x9ca PUSH1 0x40
0x9cc MLOAD
0x9cd DUP1
0x9ce DUP3
0x9cf ISZERO
0x9d0 ISZERO
0x9d1 ISZERO
0x9d2 ISZERO
0x9d3 DUP2
0x9d4 MSTORE
0x9d5 PUSH1 0x20
0x9d7 ADD
0x9d8 SWAP2
0x9d9 POP
0x9da POP
0x9db PUSH1 0x40
0x9dd MLOAD
0x9de DUP1
0x9df SWAP2
0x9e0 SUB
0x9e1 SWAP1
0x9e2 RETURN
0x9e3 JUMPDEST
0x9e4 CALLVALUE
0x9e5 ISZERO
0x9e6 PUSH2 0x337
0x9e9 JUMPI
---
0x9bd: V558 = 0x0
0x9c0: REVERT 0x0 0x0
0x9c1: JUMPDEST 
0x9c2: V559 = 0x312
0x9c5: V560 = 0x854
0x9c8: THROW 
0x9c9: JUMPDEST 
0x9ca: V561 = 0x40
0x9cc: V562 = M[0x40]
0x9cf: V563 = ISZERO S0
0x9d0: V564 = ISZERO V563
0x9d1: V565 = ISZERO V564
0x9d2: V566 = ISZERO V565
0x9d4: M[V562] = V566
0x9d5: V567 = 0x20
0x9d7: V568 = ADD 0x20 V562
0x9db: V569 = 0x40
0x9dd: V570 = M[0x40]
0x9e0: V571 = SUB V568 V570
0x9e2: RETURN V570 V571
0x9e3: JUMPDEST 
0x9e4: V572 = CALLVALUE
0x9e5: V573 = ISZERO V572
0x9e6: V574 = 0x337
0x9e9: THROWI V573
---
Entry stack: []
Stack pops: 0
Stack additions: [0x312]
Exit stack: []

================================

Block 0x9ea
[0x9ea:0xa12]
---
Predecessors: [0x9bd]
Successors: [0xa13]
---
0x9ea PUSH1 0x0
0x9ec DUP1
0x9ed REVERT
0x9ee JUMPDEST
0x9ef PUSH2 0x33f
0x9f2 PUSH2 0x86e
0x9f5 JUMP
0x9f6 JUMPDEST
0x9f7 PUSH1 0x40
0x9f9 MLOAD
0x9fa DUP1
0x9fb DUP3
0x9fc DUP2
0x9fd MSTORE
0x9fe PUSH1 0x20
0xa00 ADD
0xa01 SWAP2
0xa02 POP
0xa03 POP
0xa04 PUSH1 0x40
0xa06 MLOAD
0xa07 DUP1
0xa08 SWAP2
0xa09 SUB
0xa0a SWAP1
0xa0b RETURN
0xa0c JUMPDEST
0xa0d CALLVALUE
0xa0e ISZERO
0xa0f PUSH2 0x360
0xa12 JUMPI
---
0x9ea: V575 = 0x0
0x9ed: REVERT 0x0 0x0
0x9ee: JUMPDEST 
0x9ef: V576 = 0x33f
0x9f2: V577 = 0x86e
0x9f5: THROW 
0x9f6: JUMPDEST 
0x9f7: V578 = 0x40
0x9f9: V579 = M[0x40]
0x9fd: M[V579] = S0
0x9fe: V580 = 0x20
0xa00: V581 = ADD 0x20 V579
0xa04: V582 = 0x40
0xa06: V583 = M[0x40]
0xa09: V584 = SUB V581 V583
0xa0b: RETURN V583 V584
0xa0c: JUMPDEST 
0xa0d: V585 = CALLVALUE
0xa0e: V586 = ISZERO V585
0xa0f: V587 = 0x360
0xa12: THROWI V586
---
Entry stack: []
Stack pops: 0
Stack additions: [0x33f]
Exit stack: []

================================

Block 0xa13
[0xa13:0xa49]
---
Predecessors: [0x9ea]
Successors: [0xa4a]
---
0xa13 PUSH1 0x0
0xa15 DUP1
0xa16 REVERT
0xa17 JUMPDEST
0xa18 PUSH2 0x376
0xa1b PUSH1 0x4
0xa1d DUP1
0xa1e DUP1
0xa1f CALLDATALOAD
0xa20 SWAP1
0xa21 PUSH1 0x20
0xa23 ADD
0xa24 SWAP1
0xa25 SWAP2
0xa26 SWAP1
0xa27 POP
0xa28 POP
0xa29 PUSH2 0x878
0xa2c JUMP
0xa2d JUMPDEST
0xa2e STOP
0xa2f JUMPDEST
0xa30 PUSH2 0x380
0xa33 PUSH2 0x41c
0xa36 JUMP
0xa37 JUMPDEST
0xa38 STOP
0xa39 JUMPDEST
0xa3a PUSH2 0x38a
0xa3d PUSH2 0x8bb
0xa40 JUMP
0xa41 JUMPDEST
0xa42 STOP
0xa43 JUMPDEST
0xa44 CALLVALUE
0xa45 ISZERO
0xa46 PUSH2 0x397
0xa49 JUMPI
---
0xa13: V588 = 0x0
0xa16: REVERT 0x0 0x0
0xa17: JUMPDEST 
0xa18: V589 = 0x376
0xa1b: V590 = 0x4
0xa1f: V591 = CALLDATALOAD 0x4
0xa21: V592 = 0x20
0xa23: V593 = ADD 0x20 0x4
0xa29: V594 = 0x878
0xa2c: THROW 
0xa2d: JUMPDEST 
0xa2e: STOP 
0xa2f: JUMPDEST 
0xa30: V595 = 0x380
0xa33: V596 = 0x41c
0xa36: THROW 
0xa37: JUMPDEST 
0xa38: STOP 
0xa39: JUMPDEST 
0xa3a: V597 = 0x38a
0xa3d: V598 = 0x8bb
0xa40: THROW 
0xa41: JUMPDEST 
0xa42: STOP 
0xa43: JUMPDEST 
0xa44: V599 = CALLVALUE
0xa45: V600 = ISZERO V599
0xa46: V601 = 0x397
0xa49: THROWI V600
---
Entry stack: []
Stack pops: 0
Stack additions: [V591, 0x376, 0x380, 0x38a]
Exit stack: []

================================

Block 0xa4a
[0xa4a:0xa82]
---
Predecessors: [0xa13]
Successors: [0xa83]
---
0xa4a PUSH1 0x0
0xa4c DUP1
0xa4d REVERT
0xa4e JUMPDEST
0xa4f PUSH2 0x3c3
0xa52 PUSH1 0x4
0xa54 DUP1
0xa55 DUP1
0xa56 CALLDATALOAD
0xa57 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa6c AND
0xa6d SWAP1
0xa6e PUSH1 0x20
0xa70 ADD
0xa71 SWAP1
0xa72 SWAP2
0xa73 SWAP1
0xa74 POP
0xa75 POP
0xa76 PUSH2 0x987
0xa79 JUMP
0xa7a JUMPDEST
0xa7b STOP
0xa7c JUMPDEST
0xa7d CALLVALUE
0xa7e ISZERO
0xa7f PUSH2 0x3d0
0xa82 JUMPI
---
0xa4a: V602 = 0x0
0xa4d: REVERT 0x0 0x0
0xa4e: JUMPDEST 
0xa4f: V603 = 0x3c3
0xa52: V604 = 0x4
0xa56: V605 = CALLDATALOAD 0x4
0xa57: V606 = 0xffffffffffffffffffffffffffffffffffffffff
0xa6c: V607 = AND 0xffffffffffffffffffffffffffffffffffffffff V605
0xa6e: V608 = 0x20
0xa70: V609 = ADD 0x20 0x4
0xa76: V610 = 0x987
0xa79: THROW 
0xa7a: JUMPDEST 
0xa7b: STOP 
0xa7c: JUMPDEST 
0xa7d: V611 = CALLVALUE
0xa7e: V612 = ISZERO V611
0xa7f: V613 = 0x3d0
0xa82: THROWI V612
---
Entry stack: []
Stack pops: 0
Stack additions: [V607, 0x3c3]
Exit stack: []

================================

Block 0xa83
[0xa83:0xac4]
---
Predecessors: [0xa4a]
Successors: [0xac5]
---
0xa83 PUSH1 0x0
0xa85 DUP1
0xa86 REVERT
0xa87 JUMPDEST
0xa88 PUSH2 0x405
0xa8b PUSH1 0x4
0xa8d DUP1
0xa8e DUP1
0xa8f CALLDATALOAD
0xa90 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaa5 AND
0xaa6 SWAP1
0xaa7 PUSH1 0x20
0xaa9 ADD
0xaaa SWAP1
0xaab SWAP2
0xaac SWAP1
0xaad DUP1
0xaae CALLDATALOAD
0xaaf SWAP1
0xab0 PUSH1 0x20
0xab2 ADD
0xab3 SWAP1
0xab4 SWAP2
0xab5 SWAP1
0xab6 POP
0xab7 POP
0xab8 PUSH2 0xa20
0xabb JUMP
0xabc JUMPDEST
0xabd STOP
0xabe JUMPDEST
0xabf CALLVALUE
0xac0 ISZERO
0xac1 PUSH2 0x412
0xac4 JUMPI
---
0xa83: V614 = 0x0
0xa86: REVERT 0x0 0x0
0xa87: JUMPDEST 
0xa88: V615 = 0x405
0xa8b: V616 = 0x4
0xa8f: V617 = CALLDATALOAD 0x4
0xa90: V618 = 0xffffffffffffffffffffffffffffffffffffffff
0xaa5: V619 = AND 0xffffffffffffffffffffffffffffffffffffffff V617
0xaa7: V620 = 0x20
0xaa9: V621 = ADD 0x20 0x4
0xaae: V622 = CALLDATALOAD 0x24
0xab0: V623 = 0x20
0xab2: V624 = ADD 0x20 0x24
0xab8: V625 = 0xa20
0xabb: THROW 
0xabc: JUMPDEST 
0xabd: STOP 
0xabe: JUMPDEST 
0xabf: V626 = CALLVALUE
0xac0: V627 = ISZERO V626
0xac1: V628 = 0x412
0xac4: THROWI V627
---
Entry stack: []
Stack pops: 0
Stack additions: [V622, V619, 0x405]
Exit stack: []

================================

Block 0xac5
[0xac5:0xadc]
---
Predecessors: [0xa83]
Successors: [0xadd]
---
0xac5 PUSH1 0x0
0xac7 DUP1
0xac8 REVERT
0xac9 JUMPDEST
0xaca PUSH2 0x41a
0xacd PUSH2 0xb71
0xad0 JUMP
0xad1 JUMPDEST
0xad2 STOP
0xad3 JUMPDEST
0xad4 PUSH1 0x0
0xad6 CALLVALUE
0xad7 GT
0xad8 ISZERO
0xad9 PUSH2 0x4d2
0xadc JUMPI
---
0xac5: V629 = 0x0
0xac8: REVERT 0x0 0x0
0xac9: JUMPDEST 
0xaca: V630 = 0x41a
0xacd: V631 = 0xb71
0xad0: THROW 
0xad1: JUMPDEST 
0xad2: STOP 
0xad3: JUMPDEST 
0xad4: V632 = 0x0
0xad6: V633 = CALLVALUE
0xad7: V634 = GT V633 0x0
0xad8: V635 = ISZERO V634
0xad9: V636 = 0x4d2
0xadc: THROWI V635
---
Entry stack: []
Stack pops: 0
Stack additions: [0x41a]
Exit stack: []

================================

Block 0xadd
[0xadd:0xaec]
---
Predecessors: [0xac5]
Successors: [0xaed]
---
0xadd PUSH2 0x42d
0xae0 PUSH2 0x86e
0xae3 JUMP
0xae4 JUMPDEST
0xae5 CALLVALUE
0xae6 LT
0xae7 ISZERO
0xae8 ISZERO
0xae9 PUSH2 0x483
0xaec JUMPI
---
0xadd: V637 = 0x42d
0xae0: V638 = 0x86e
0xae3: THROW 
0xae4: JUMPDEST 
0xae5: V639 = CALLVALUE
0xae6: V640 = LT V639 S0
0xae7: V641 = ISZERO V640
0xae8: V642 = ISZERO V641
0xae9: V643 = 0x483
0xaec: THROWI V642
---
Entry stack: []
Stack pops: 0
Stack additions: [0x42d]
Exit stack: []

================================

Block 0xaed
[0xaed:0xb39]
---
Predecessors: [0xadd]
Successors: [0xb3a]
---
0xaed CALLVALUE
0xaee PUSH1 0x1
0xaf0 PUSH1 0x0
0xaf2 CALLER
0xaf3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb08 AND
0xb09 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb1e AND
0xb1f DUP2
0xb20 MSTORE
0xb21 PUSH1 0x20
0xb23 ADD
0xb24 SWAP1
0xb25 DUP2
0xb26 MSTORE
0xb27 PUSH1 0x20
0xb29 ADD
0xb2a PUSH1 0x0
0xb2c SHA3
0xb2d PUSH1 0x0
0xb2f DUP3
0xb30 DUP3
0xb31 SLOAD
0xb32 ADD
0xb33 SWAP3
0xb34 POP
0xb35 POP
0xb36 DUP2
0xb37 SWAP1
0xb38 SSTORE
0xb39 POP
---
0xaed: V644 = CALLVALUE
0xaee: V645 = 0x1
0xaf0: V646 = 0x0
0xaf2: V647 = CALLER
0xaf3: V648 = 0xffffffffffffffffffffffffffffffffffffffff
0xb08: V649 = AND 0xffffffffffffffffffffffffffffffffffffffff V647
0xb09: V650 = 0xffffffffffffffffffffffffffffffffffffffff
0xb1e: V651 = AND 0xffffffffffffffffffffffffffffffffffffffff V649
0xb20: M[0x0] = V651
0xb21: V652 = 0x20
0xb23: V653 = ADD 0x20 0x0
0xb26: M[0x20] = 0x1
0xb27: V654 = 0x20
0xb29: V655 = ADD 0x20 0x20
0xb2a: V656 = 0x0
0xb2c: V657 = SHA3 0x0 0x40
0xb2d: V658 = 0x0
0xb31: V659 = S[V657]
0xb32: V660 = ADD V659 V644
0xb38: S[V657] = V660
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb3a
[0xb3a:0xb88]
---
Predecessors: [0xaed]
Successors: [0xb89]
---
0xb3a JUMPDEST
0xb3b CALLER
0xb3c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb51 AND
0xb52 PUSH32 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
0xb73 CALLVALUE
0xb74 PUSH1 0x40
0xb76 MLOAD
0xb77 DUP1
0xb78 DUP3
0xb79 DUP2
0xb7a MSTORE
0xb7b PUSH1 0x20
0xb7d ADD
0xb7e SWAP2
0xb7f POP
0xb80 POP
0xb81 PUSH1 0x40
0xb83 MLOAD
0xb84 DUP1
0xb85 SWAP2
0xb86 SUB
0xb87 SWAP1
0xb88 LOG2
---
0xb3a: JUMPDEST 
0xb3b: V661 = CALLER
0xb3c: V662 = 0xffffffffffffffffffffffffffffffffffffffff
0xb51: V663 = AND 0xffffffffffffffffffffffffffffffffffffffff V661
0xb52: V664 = 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
0xb73: V665 = CALLVALUE
0xb74: V666 = 0x40
0xb76: V667 = M[0x40]
0xb7a: M[V667] = V665
0xb7b: V668 = 0x20
0xb7d: V669 = ADD 0x20 V667
0xb81: V670 = 0x40
0xb83: V671 = M[0x40]
0xb86: V672 = SUB V669 V671
0xb88: LOG V671 V672 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c V663
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb89
[0xb89:0xbe2]
---
Predecessors: [0xb3a]
Successors: [0xbe3]
---
0xb89 JUMPDEST
0xb8a JUMP
0xb8b JUMPDEST
0xb8c PUSH1 0x0
0xb8e DUP1
0xb8f PUSH1 0x0
0xb91 SWAP1
0xb92 SLOAD
0xb93 SWAP1
0xb94 PUSH2 0x100
0xb97 EXP
0xb98 SWAP1
0xb99 DIV
0xb9a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbaf AND
0xbb0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbc5 AND
0xbc6 CALLER
0xbc7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbdc AND
0xbdd EQ
0xbde ISZERO
0xbdf PUSH2 0x5f4
0xbe2 JUMPI
---
0xb89: JUMPDEST 
0xb8a: JUMP S0
0xb8b: JUMPDEST 
0xb8c: V673 = 0x0
0xb8f: V674 = 0x0
0xb92: V675 = S[0x0]
0xb94: V676 = 0x100
0xb97: V677 = EXP 0x100 0x0
0xb99: V678 = DIV V675 0x1
0xb9a: V679 = 0xffffffffffffffffffffffffffffffffffffffff
0xbaf: V680 = AND 0xffffffffffffffffffffffffffffffffffffffff V678
0xbb0: V681 = 0xffffffffffffffffffffffffffffffffffffffff
0xbc5: V682 = AND 0xffffffffffffffffffffffffffffffffffffffff V680
0xbc6: V683 = CALLER
0xbc7: V684 = 0xffffffffffffffffffffffffffffffffffffffff
0xbdc: V685 = AND 0xffffffffffffffffffffffffffffffffffffffff V683
0xbdd: V686 = EQ V685 V682
0xbde: V687 = ISZERO V686
0xbdf: V688 = 0x5f4
0xbe2: THROWI V687
---
Entry stack: []
Stack pops: 2
Stack additions: [0x0]
Exit stack: []

================================

Block 0xbe3
[0xbe3:0xc88]
---
Predecessors: [0xb89]
Successors: [0xc89]
---
0xbe3 DUP4
0xbe4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbf9 AND
0xbfa PUSH4 0xa9059cbb
0xbff DUP5
0xc00 DUP5
0xc01 PUSH1 0x0
0xc03 PUSH1 0x40
0xc05 MLOAD
0xc06 PUSH1 0x20
0xc08 ADD
0xc09 MSTORE
0xc0a PUSH1 0x40
0xc0c MLOAD
0xc0d DUP4
0xc0e PUSH4 0xffffffff
0xc13 AND
0xc14 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xc32 MUL
0xc33 DUP2
0xc34 MSTORE
0xc35 PUSH1 0x4
0xc37 ADD
0xc38 DUP1
0xc39 DUP4
0xc3a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc4f AND
0xc50 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc65 AND
0xc66 DUP2
0xc67 MSTORE
0xc68 PUSH1 0x20
0xc6a ADD
0xc6b DUP3
0xc6c DUP2
0xc6d MSTORE
0xc6e PUSH1 0x20
0xc70 ADD
0xc71 SWAP3
0xc72 POP
0xc73 POP
0xc74 POP
0xc75 PUSH1 0x20
0xc77 PUSH1 0x40
0xc79 MLOAD
0xc7a DUP1
0xc7b DUP4
0xc7c SUB
0xc7d DUP2
0xc7e PUSH1 0x0
0xc80 DUP8
0xc81 DUP1
0xc82 EXTCODESIZE
0xc83 ISZERO
0xc84 ISZERO
0xc85 PUSH2 0x5d6
0xc88 JUMPI
---
0xbe4: V689 = 0xffffffffffffffffffffffffffffffffffffffff
0xbf9: V690 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xbfa: V691 = 0xa9059cbb
0xc01: V692 = 0x0
0xc03: V693 = 0x40
0xc05: V694 = M[0x40]
0xc06: V695 = 0x20
0xc08: V696 = ADD 0x20 V694
0xc09: M[V696] = 0x0
0xc0a: V697 = 0x40
0xc0c: V698 = M[0x40]
0xc0e: V699 = 0xffffffff
0xc13: V700 = AND 0xffffffff 0xa9059cbb
0xc14: V701 = 0x100000000000000000000000000000000000000000000000000000000
0xc32: V702 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0xc34: M[V698] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xc35: V703 = 0x4
0xc37: V704 = ADD 0x4 V698
0xc3a: V705 = 0xffffffffffffffffffffffffffffffffffffffff
0xc4f: V706 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xc50: V707 = 0xffffffffffffffffffffffffffffffffffffffff
0xc65: V708 = AND 0xffffffffffffffffffffffffffffffffffffffff V706
0xc67: M[V704] = V708
0xc68: V709 = 0x20
0xc6a: V710 = ADD 0x20 V704
0xc6d: M[V710] = S1
0xc6e: V711 = 0x20
0xc70: V712 = ADD 0x20 V710
0xc75: V713 = 0x20
0xc77: V714 = 0x40
0xc79: V715 = M[0x40]
0xc7c: V716 = SUB V712 V715
0xc7e: V717 = 0x0
0xc82: V718 = EXTCODESIZE V690
0xc83: V719 = ISZERO V718
0xc84: V720 = ISZERO V719
0xc85: V721 = 0x5d6
0xc88: THROWI V720
---
Entry stack: [0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V690, 0xa9059cbb, V712, 0x20, V715, V716, V715, 0x0, V690]
Exit stack: [S2, S1, S0, 0x0, V690, 0xa9059cbb, V712, 0x20, V715, V716, V715, 0x0, V690]

================================

Block 0xc89
[0xc89:0xc99]
---
Predecessors: [0xbe3]
Successors: [0xc9a]
---
0xc89 PUSH1 0x0
0xc8b DUP1
0xc8c REVERT
0xc8d JUMPDEST
0xc8e PUSH2 0x2c6
0xc91 GAS
0xc92 SUB
0xc93 CALL
0xc94 ISZERO
0xc95 ISZERO
0xc96 PUSH2 0x5e7
0xc99 JUMPI
---
0xc89: V722 = 0x0
0xc8c: REVERT 0x0 0x0
0xc8d: JUMPDEST 
0xc8e: V723 = 0x2c6
0xc91: V724 = GAS
0xc92: V725 = SUB V724 0x2c6
0xc93: V726 = CALL V725 S0 S1 S2 S3 S4 S5
0xc94: V727 = ISZERO V726
0xc95: V728 = ISZERO V727
0xc96: V729 = 0x5e7
0xc99: THROWI V728
---
Entry stack: [S12, S11, S10, 0x0, V690, 0xa9059cbb, V712, 0x20, V715, V716, V715, 0x0, V690]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc9a
[0xc9a:0xcaa]
---
Predecessors: [0xc89]
Successors: [0xcab]
---
0xc9a PUSH1 0x0
0xc9c DUP1
0xc9d REVERT
0xc9e JUMPDEST
0xc9f POP
0xca0 POP
0xca1 POP
0xca2 PUSH1 0x40
0xca4 MLOAD
0xca5 DUP1
0xca6 MLOAD
0xca7 SWAP1
0xca8 POP
0xca9 SWAP1
0xcaa POP
---
0xc9a: V730 = 0x0
0xc9d: REVERT 0x0 0x0
0xc9e: JUMPDEST 
0xca2: V731 = 0x40
0xca4: V732 = M[0x40]
0xca6: V733 = M[V732]
---
Entry stack: []
Stack pops: 0
Stack additions: [V733]
Exit stack: []

================================

Block 0xcab
[0xcab:0xceb]
---
Predecessors: [0xc9a]
Successors: [0xcec]
---
0xcab JUMPDEST
0xcac SWAP4
0xcad SWAP3
0xcae POP
0xcaf POP
0xcb0 POP
0xcb1 JUMP
0xcb2 JUMPDEST
0xcb3 PUSH1 0x1
0xcb5 PUSH1 0x20
0xcb7 MSTORE
0xcb8 DUP1
0xcb9 PUSH1 0x0
0xcbb MSTORE
0xcbc PUSH1 0x40
0xcbe PUSH1 0x0
0xcc0 SHA3
0xcc1 PUSH1 0x0
0xcc3 SWAP2
0xcc4 POP
0xcc5 SWAP1
0xcc6 POP
0xcc7 SLOAD
0xcc8 DUP2
0xcc9 JUMP
0xcca JUMPDEST
0xccb PUSH1 0x0
0xccd ADDRESS
0xcce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xce3 AND
0xce4 BALANCE
0xce5 EQ
0xce6 ISZERO
0xce7 ISZERO
0xce8 PUSH2 0x639
0xceb JUMPI
---
0xcab: JUMPDEST 
0xcb1: JUMP S4
0xcb2: JUMPDEST 
0xcb3: V734 = 0x1
0xcb5: V735 = 0x20
0xcb7: M[0x20] = 0x1
0xcb9: V736 = 0x0
0xcbb: M[0x0] = S0
0xcbc: V737 = 0x40
0xcbe: V738 = 0x0
0xcc0: V739 = SHA3 0x0 0x40
0xcc1: V740 = 0x0
0xcc7: V741 = S[V739]
0xcc9: JUMP S1
0xcca: JUMPDEST 
0xccb: V742 = 0x0
0xccd: V743 = ADDRESS
0xcce: V744 = 0xffffffffffffffffffffffffffffffffffffffff
0xce3: V745 = AND 0xffffffffffffffffffffffffffffffffffffffff V743
0xce4: V746 = BALANCE V745
0xce5: V747 = EQ V746 0x0
0xce6: V748 = ISZERO V747
0xce7: V749 = ISZERO V748
0xce8: V750 = 0x639
0xceb: THROWI V749
---
Entry stack: [V733]
Stack pops: 16
Stack additions: []
Exit stack: []

================================

Block 0xcec
[0xcec:0xdfd]
---
Predecessors: [0xcab]
Successors: [0xdfe]
---
0xcec PUSH1 0x0
0xcee DUP1
0xcef REVERT
0xcf0 JUMPDEST
0xcf1 PUSH1 0x0
0xcf3 DUP1
0xcf4 SWAP1
0xcf5 SLOAD
0xcf6 SWAP1
0xcf7 PUSH2 0x100
0xcfa EXP
0xcfb SWAP1
0xcfc DIV
0xcfd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd12 AND
0xd13 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd28 AND
0xd29 SELFDESTRUCT
0xd2a JUMPDEST
0xd2b PUSH1 0x0
0xd2d PUSH1 0x5
0xd2f PUSH1 0x0
0xd31 SWAP1
0xd32 SLOAD
0xd33 SWAP1
0xd34 PUSH2 0x100
0xd37 EXP
0xd38 SWAP1
0xd39 DIV
0xd3a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd4f AND
0xd50 SWAP1
0xd51 POP
0xd52 SWAP1
0xd53 JUMP
0xd54 JUMPDEST
0xd55 PUSH1 0x0
0xd57 DUP1
0xd58 ADDRESS
0xd59 SWAP1
0xd5a POP
0xd5b PUSH2 0x76b
0xd5e DUP4
0xd5f CALLER
0xd60 DUP6
0xd61 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd76 AND
0xd77 PUSH4 0x70a08231
0xd7c DUP6
0xd7d PUSH1 0x0
0xd7f PUSH1 0x40
0xd81 MLOAD
0xd82 PUSH1 0x20
0xd84 ADD
0xd85 MSTORE
0xd86 PUSH1 0x40
0xd88 MLOAD
0xd89 DUP3
0xd8a PUSH4 0xffffffff
0xd8f AND
0xd90 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xdae MUL
0xdaf DUP2
0xdb0 MSTORE
0xdb1 PUSH1 0x4
0xdb3 ADD
0xdb4 DUP1
0xdb5 DUP3
0xdb6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdcb AND
0xdcc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xde1 AND
0xde2 DUP2
0xde3 MSTORE
0xde4 PUSH1 0x20
0xde6 ADD
0xde7 SWAP2
0xde8 POP
0xde9 POP
0xdea PUSH1 0x20
0xdec PUSH1 0x40
0xdee MLOAD
0xdef DUP1
0xdf0 DUP4
0xdf1 SUB
0xdf2 DUP2
0xdf3 PUSH1 0x0
0xdf5 DUP8
0xdf6 DUP1
0xdf7 EXTCODESIZE
0xdf8 ISZERO
0xdf9 ISZERO
0xdfa PUSH2 0x74b
0xdfd JUMPI
---
0xcec: V751 = 0x0
0xcef: REVERT 0x0 0x0
0xcf0: JUMPDEST 
0xcf1: V752 = 0x0
0xcf5: V753 = S[0x0]
0xcf7: V754 = 0x100
0xcfa: V755 = EXP 0x100 0x0
0xcfc: V756 = DIV V753 0x1
0xcfd: V757 = 0xffffffffffffffffffffffffffffffffffffffff
0xd12: V758 = AND 0xffffffffffffffffffffffffffffffffffffffff V756
0xd13: V759 = 0xffffffffffffffffffffffffffffffffffffffff
0xd28: V760 = AND 0xffffffffffffffffffffffffffffffffffffffff V758
0xd29: SELFDESTRUCT V760
0xd2a: JUMPDEST 
0xd2b: V761 = 0x0
0xd2d: V762 = 0x5
0xd2f: V763 = 0x0
0xd32: V764 = S[0x5]
0xd34: V765 = 0x100
0xd37: V766 = EXP 0x100 0x0
0xd39: V767 = DIV V764 0x1
0xd3a: V768 = 0xffffffffffffffffffffffffffffffffffffffff
0xd4f: V769 = AND 0xffffffffffffffffffffffffffffffffffffffff V767
0xd53: JUMP S0
0xd54: JUMPDEST 
0xd55: V770 = 0x0
0xd58: V771 = ADDRESS
0xd5b: V772 = 0x76b
0xd5f: V773 = CALLER
0xd61: V774 = 0xffffffffffffffffffffffffffffffffffffffff
0xd76: V775 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xd77: V776 = 0x70a08231
0xd7d: V777 = 0x0
0xd7f: V778 = 0x40
0xd81: V779 = M[0x40]
0xd82: V780 = 0x20
0xd84: V781 = ADD 0x20 V779
0xd85: M[V781] = 0x0
0xd86: V782 = 0x40
0xd88: V783 = M[0x40]
0xd8a: V784 = 0xffffffff
0xd8f: V785 = AND 0xffffffff 0x70a08231
0xd90: V786 = 0x100000000000000000000000000000000000000000000000000000000
0xdae: V787 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0xdb0: M[V783] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xdb1: V788 = 0x4
0xdb3: V789 = ADD 0x4 V783
0xdb6: V790 = 0xffffffffffffffffffffffffffffffffffffffff
0xdcb: V791 = AND 0xffffffffffffffffffffffffffffffffffffffff V771
0xdcc: V792 = 0xffffffffffffffffffffffffffffffffffffffff
0xde1: V793 = AND 0xffffffffffffffffffffffffffffffffffffffff V791
0xde3: M[V789] = V793
0xde4: V794 = 0x20
0xde6: V795 = ADD 0x20 V789
0xdea: V796 = 0x20
0xdec: V797 = 0x40
0xdee: V798 = M[0x40]
0xdf1: V799 = SUB V795 V798
0xdf3: V800 = 0x0
0xdf7: V801 = EXTCODESIZE V775
0xdf8: V802 = ISZERO V801
0xdf9: V803 = ISZERO V802
0xdfa: V804 = 0x74b
0xdfd: THROWI V803
---
Entry stack: []
Stack pops: 0
Stack additions: [V769, V775, 0x0, V798, V799, V798, 0x20, V795, 0x70a08231, V775, V773, S0, 0x76b, V771, 0x0, S0]
Exit stack: []

================================

Block 0xdfe
[0xdfe:0xe0e]
---
Predecessors: [0xcec]
Successors: [0xe0f]
---
0xdfe PUSH1 0x0
0xe00 DUP1
0xe01 REVERT
0xe02 JUMPDEST
0xe03 PUSH2 0x2c6
0xe06 GAS
0xe07 SUB
0xe08 CALL
0xe09 ISZERO
0xe0a ISZERO
0xe0b PUSH2 0x75c
0xe0e JUMPI
---
0xdfe: V805 = 0x0
0xe01: REVERT 0x0 0x0
0xe02: JUMPDEST 
0xe03: V806 = 0x2c6
0xe06: V807 = GAS
0xe07: V808 = SUB V807 0x2c6
0xe08: V809 = CALL V808 S0 S1 S2 S3 S4 S5
0xe09: V810 = ISZERO V809
0xe0a: V811 = ISZERO V810
0xe0b: V812 = 0x75c
0xe0e: THROWI V811
---
Entry stack: [S14, 0x0, V771, 0x76b, S10, V773, V775, 0x70a08231, V795, 0x20, V798, V799, V798, 0x0, V775]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xe0f
[0xe0f:0xedd]
---
Predecessors: [0xdfe]
Successors: [0xede]
---
0xe0f PUSH1 0x0
0xe11 DUP1
0xe12 REVERT
0xe13 JUMPDEST
0xe14 POP
0xe15 POP
0xe16 POP
0xe17 PUSH1 0x40
0xe19 MLOAD
0xe1a DUP1
0xe1b MLOAD
0xe1c SWAP1
0xe1d POP
0xe1e PUSH2 0x4d4
0xe21 JUMP
0xe22 JUMPDEST
0xe23 SWAP2
0xe24 POP
0xe25 POP
0xe26 SWAP2
0xe27 SWAP1
0xe28 POP
0xe29 JUMP
0xe2a JUMPDEST
0xe2b PUSH1 0x0
0xe2d PUSH1 0x4
0xe2f SLOAD
0xe30 SWAP1
0xe31 POP
0xe32 SWAP1
0xe33 JUMP
0xe34 JUMPDEST
0xe35 PUSH1 0x0
0xe37 DUP1
0xe38 ADDRESS
0xe39 SWAP1
0xe3a POP
0xe3b PUSH2 0x84b
0xe3e DUP5
0xe3f DUP5
0xe40 DUP7
0xe41 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe56 AND
0xe57 PUSH4 0x70a08231
0xe5c DUP6
0xe5d PUSH1 0x0
0xe5f PUSH1 0x40
0xe61 MLOAD
0xe62 PUSH1 0x20
0xe64 ADD
0xe65 MSTORE
0xe66 PUSH1 0x40
0xe68 MLOAD
0xe69 DUP3
0xe6a PUSH4 0xffffffff
0xe6f AND
0xe70 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xe8e MUL
0xe8f DUP2
0xe90 MSTORE
0xe91 PUSH1 0x4
0xe93 ADD
0xe94 DUP1
0xe95 DUP3
0xe96 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xeab AND
0xeac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xec1 AND
0xec2 DUP2
0xec3 MSTORE
0xec4 PUSH1 0x20
0xec6 ADD
0xec7 SWAP2
0xec8 POP
0xec9 POP
0xeca PUSH1 0x20
0xecc PUSH1 0x40
0xece MLOAD
0xecf DUP1
0xed0 DUP4
0xed1 SUB
0xed2 DUP2
0xed3 PUSH1 0x0
0xed5 DUP8
0xed6 DUP1
0xed7 EXTCODESIZE
0xed8 ISZERO
0xed9 ISZERO
0xeda PUSH2 0x82b
0xedd JUMPI
---
0xe0f: V813 = 0x0
0xe12: REVERT 0x0 0x0
0xe13: JUMPDEST 
0xe17: V814 = 0x40
0xe19: V815 = M[0x40]
0xe1b: V816 = M[V815]
0xe1e: V817 = 0x4d4
0xe21: THROW 
0xe22: JUMPDEST 
0xe29: JUMP S4
0xe2a: JUMPDEST 
0xe2b: V818 = 0x0
0xe2d: V819 = 0x4
0xe2f: V820 = S[0x4]
0xe33: JUMP S0
0xe34: JUMPDEST 
0xe35: V821 = 0x0
0xe38: V822 = ADDRESS
0xe3b: V823 = 0x84b
0xe41: V824 = 0xffffffffffffffffffffffffffffffffffffffff
0xe56: V825 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xe57: V826 = 0x70a08231
0xe5d: V827 = 0x0
0xe5f: V828 = 0x40
0xe61: V829 = M[0x40]
0xe62: V830 = 0x20
0xe64: V831 = ADD 0x20 V829
0xe65: M[V831] = 0x0
0xe66: V832 = 0x40
0xe68: V833 = M[0x40]
0xe6a: V834 = 0xffffffff
0xe6f: V835 = AND 0xffffffff 0x70a08231
0xe70: V836 = 0x100000000000000000000000000000000000000000000000000000000
0xe8e: V837 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0xe90: M[V833] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xe91: V838 = 0x4
0xe93: V839 = ADD 0x4 V833
0xe96: V840 = 0xffffffffffffffffffffffffffffffffffffffff
0xeab: V841 = AND 0xffffffffffffffffffffffffffffffffffffffff V822
0xeac: V842 = 0xffffffffffffffffffffffffffffffffffffffff
0xec1: V843 = AND 0xffffffffffffffffffffffffffffffffffffffff V841
0xec3: M[V839] = V843
0xec4: V844 = 0x20
0xec6: V845 = ADD 0x20 V839
0xeca: V846 = 0x20
0xecc: V847 = 0x40
0xece: V848 = M[0x40]
0xed1: V849 = SUB V845 V848
0xed3: V850 = 0x0
0xed7: V851 = EXTCODESIZE V825
0xed8: V852 = ISZERO V851
0xed9: V853 = ISZERO V852
0xeda: V854 = 0x82b
0xedd: THROWI V853
---
Entry stack: []
Stack pops: 0
Stack additions: [V816, S0, V820, V825, 0x0, V848, V849, V848, 0x20, V845, 0x70a08231, V825, S0, S1, 0x84b, V822, 0x0, S0, S1]
Exit stack: []

================================

Block 0xede
[0xede:0xeee]
---
Predecessors: [0xe0f]
Successors: [0xeef]
---
0xede PUSH1 0x0
0xee0 DUP1
0xee1 REVERT
0xee2 JUMPDEST
0xee3 PUSH2 0x2c6
0xee6 GAS
0xee7 SUB
0xee8 CALL
0xee9 ISZERO
0xeea ISZERO
0xeeb PUSH2 0x83c
0xeee JUMPI
---
0xede: V855 = 0x0
0xee1: REVERT 0x0 0x0
0xee2: JUMPDEST 
0xee3: V856 = 0x2c6
0xee6: V857 = GAS
0xee7: V858 = SUB V857 0x2c6
0xee8: V859 = CALL V858 S0 S1 S2 S3 S4 S5
0xee9: V860 = ISZERO V859
0xeea: V861 = ISZERO V860
0xeeb: V862 = 0x83c
0xeee: THROWI V861
---
Entry stack: [S15, S14, 0x0, V822, 0x84b, S10, S9, V825, 0x70a08231, V845, 0x20, V848, V849, V848, 0x0, V825]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xeef
[0xeef:0xf18]
---
Predecessors: [0xede]
Successors: [0xf19]
---
0xeef PUSH1 0x0
0xef1 DUP1
0xef2 REVERT
0xef3 JUMPDEST
0xef4 POP
0xef5 POP
0xef6 POP
0xef7 PUSH1 0x40
0xef9 MLOAD
0xefa DUP1
0xefb MLOAD
0xefc SWAP1
0xefd POP
0xefe PUSH2 0x4d4
0xf01 JUMP
0xf02 JUMPDEST
0xf03 SWAP2
0xf04 POP
0xf05 POP
0xf06 SWAP3
0xf07 SWAP2
0xf08 POP
0xf09 POP
0xf0a JUMP
0xf0b JUMPDEST
0xf0c PUSH1 0x0
0xf0e DUP1
0xf0f PUSH1 0x4
0xf11 SLOAD
0xf12 GT
0xf13 DUP1
0xf14 ISZERO
0xf15 PUSH2 0x869
0xf18 JUMPI
---
0xeef: V863 = 0x0
0xef2: REVERT 0x0 0x0
0xef3: JUMPDEST 
0xef7: V864 = 0x40
0xef9: V865 = M[0x40]
0xefb: V866 = M[V865]
0xefe: V867 = 0x4d4
0xf01: THROW 
0xf02: JUMPDEST 
0xf0a: JUMP S5
0xf0b: JUMPDEST 
0xf0c: V868 = 0x0
0xf0f: V869 = 0x4
0xf11: V870 = S[0x4]
0xf12: V871 = GT V870 0x0
0xf14: V872 = ISZERO V871
0xf15: V873 = 0x869
0xf18: THROWI V872
---
Entry stack: []
Stack pops: 0
Stack additions: [V866, S0, V871, 0x0]
Exit stack: []

================================

Block 0xf19
[0xf19:0xf1f]
---
Predecessors: [0xeef]
Successors: [0xf20]
---
0xf19 POP
0xf1a TIMESTAMP
0xf1b PUSH1 0x4
0xf1d SLOAD
0xf1e GT
0xf1f ISZERO
---
0xf1a: V874 = TIMESTAMP
0xf1b: V875 = 0x4
0xf1d: V876 = S[0x4]
0xf1e: V877 = GT V876 V874
0xf1f: V878 = ISZERO V877
---
Entry stack: [0x0, V871]
Stack pops: 1
Stack additions: [V878]
Exit stack: [0x0, V878]

================================

Block 0xf20
[0xf20:0xf88]
---
Predecessors: [0xf19]
Successors: [0xf89]
---
0xf20 JUMPDEST
0xf21 SWAP1
0xf22 POP
0xf23 SWAP1
0xf24 JUMP
0xf25 JUMPDEST
0xf26 PUSH1 0x0
0xf28 PUSH1 0x2
0xf2a SLOAD
0xf2b SWAP1
0xf2c POP
0xf2d SWAP1
0xf2e JUMP
0xf2f JUMPDEST
0xf30 DUP1
0xf31 PUSH1 0x4
0xf33 DUP2
0xf34 SWAP1
0xf35 SSTORE
0xf36 POP
0xf37 PUSH32 0x92414f92852596a89f5b8bdacf2959c3bac4aa99997f039f871996efd9a00a68
0xf58 PUSH1 0x4
0xf5a SLOAD
0xf5b PUSH1 0x40
0xf5d MLOAD
0xf5e DUP1
0xf5f DUP3
0xf60 DUP2
0xf61 MSTORE
0xf62 PUSH1 0x20
0xf64 ADD
0xf65 SWAP2
0xf66 POP
0xf67 POP
0xf68 PUSH1 0x40
0xf6a MLOAD
0xf6b DUP1
0xf6c SWAP2
0xf6d SUB
0xf6e SWAP1
0xf6f LOG1
0xf70 POP
0xf71 JUMP
0xf72 JUMPDEST
0xf73 PUSH1 0x3
0xf75 PUSH1 0x0
0xf77 SWAP1
0xf78 SLOAD
0xf79 SWAP1
0xf7a PUSH2 0x100
0xf7d EXP
0xf7e SWAP1
0xf7f DIV
0xf80 PUSH1 0xff
0xf82 AND
0xf83 ISZERO
0xf84 ISZERO
0xf85 PUSH2 0x944
0xf88 JUMPI
---
0xf20: JUMPDEST 
0xf24: JUMP S2
0xf25: JUMPDEST 
0xf26: V879 = 0x0
0xf28: V880 = 0x2
0xf2a: V881 = S[0x2]
0xf2e: JUMP S0
0xf2f: JUMPDEST 
0xf31: V882 = 0x4
0xf35: S[0x4] = S0
0xf37: V883 = 0x92414f92852596a89f5b8bdacf2959c3bac4aa99997f039f871996efd9a00a68
0xf58: V884 = 0x4
0xf5a: V885 = S[0x4]
0xf5b: V886 = 0x40
0xf5d: V887 = M[0x40]
0xf61: M[V887] = V885
0xf62: V888 = 0x20
0xf64: V889 = ADD 0x20 V887
0xf68: V890 = 0x40
0xf6a: V891 = M[0x40]
0xf6d: V892 = SUB V889 V891
0xf6f: LOG V891 V892 0x92414f92852596a89f5b8bdacf2959c3bac4aa99997f039f871996efd9a00a68
0xf71: JUMP S1
0xf72: JUMPDEST 
0xf73: V893 = 0x3
0xf75: V894 = 0x0
0xf78: V895 = S[0x3]
0xf7a: V896 = 0x100
0xf7d: V897 = EXP 0x100 0x0
0xf7f: V898 = DIV V895 0x1
0xf80: V899 = 0xff
0xf82: V900 = AND 0xff V898
0xf83: V901 = ISZERO V900
0xf84: V902 = ISZERO V901
0xf85: V903 = 0x944
0xf88: THROWI V902
---
Entry stack: [0x0, V878]
Stack pops: 18
Stack additions: []
Exit stack: []

================================

Block 0xf89
[0xf89:0xffa]
---
Predecessors: [0xf20]
Successors: [0xffb]
---
0xf89 CALLER
0xf8a PUSH1 0x0
0xf8c DUP1
0xf8d PUSH2 0x100
0xf90 EXP
0xf91 DUP2
0xf92 SLOAD
0xf93 DUP2
0xf94 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfa9 MUL
0xfaa NOT
0xfab AND
0xfac SWAP1
0xfad DUP4
0xfae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfc3 AND
0xfc4 MUL
0xfc5 OR
0xfc6 SWAP1
0xfc7 SSTORE
0xfc8 POP
0xfc9 PUSH8 0x6f05b59d3b20000
0xfd2 PUSH1 0x2
0xfd4 DUP2
0xfd5 SWAP1
0xfd6 SSTORE
0xfd7 POP
0xfd8 PUSH1 0x0
0xfda PUSH1 0x3
0xfdc PUSH1 0x0
0xfde PUSH2 0x100
0xfe1 EXP
0xfe2 DUP2
0xfe3 SLOAD
0xfe4 DUP2
0xfe5 PUSH1 0xff
0xfe7 MUL
0xfe8 NOT
0xfe9 AND
0xfea SWAP1
0xfeb DUP4
0xfec ISZERO
0xfed ISZERO
0xfee MUL
0xfef OR
0xff0 SWAP1
0xff1 SSTORE
0xff2 POP
0xff3 PUSH2 0x943
0xff6 PUSH2 0x41c
0xff9 JUMP
0xffa JUMPDEST
---
0xf89: V904 = CALLER
0xf8a: V905 = 0x0
0xf8d: V906 = 0x100
0xf90: V907 = EXP 0x100 0x0
0xf92: V908 = S[0x0]
0xf94: V909 = 0xffffffffffffffffffffffffffffffffffffffff
0xfa9: V910 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xfaa: V911 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xfab: V912 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V908
0xfae: V913 = 0xffffffffffffffffffffffffffffffffffffffff
0xfc3: V914 = AND 0xffffffffffffffffffffffffffffffffffffffff V904
0xfc4: V915 = MUL V914 0x1
0xfc5: V916 = OR V915 V912
0xfc7: S[0x0] = V916
0xfc9: V917 = 0x6f05b59d3b20000
0xfd2: V918 = 0x2
0xfd6: S[0x2] = 0x6f05b59d3b20000
0xfd8: V919 = 0x0
0xfda: V920 = 0x3
0xfdc: V921 = 0x0
0xfde: V922 = 0x100
0xfe1: V923 = EXP 0x100 0x0
0xfe3: V924 = S[0x3]
0xfe5: V925 = 0xff
0xfe7: V926 = MUL 0xff 0x1
0xfe8: V927 = NOT 0xff
0xfe9: V928 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V924
0xfec: V929 = ISZERO 0x0
0xfed: V930 = ISZERO 0x1
0xfee: V931 = MUL 0x0 0x1
0xfef: V932 = OR 0x0 V928
0xff1: S[0x3] = V932
0xff3: V933 = 0x943
0xff6: V934 = 0x41c
0xff9: THROW 
0xffa: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: [0x943]
Exit stack: []

================================

Block 0xffb
[0xffb:0x1093]
---
Predecessors: [0xf89]
Successors: [0x1094]
---
0xffb JUMPDEST
0xffc CALLER
0xffd PUSH1 0x5
0xfff PUSH1 0x0
0x1001 PUSH2 0x100
0x1004 EXP
0x1005 DUP2
0x1006 SLOAD
0x1007 DUP2
0x1008 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x101d MUL
0x101e NOT
0x101f AND
0x1020 SWAP1
0x1021 DUP4
0x1022 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1037 AND
0x1038 MUL
0x1039 OR
0x103a SWAP1
0x103b SSTORE
0x103c POP
0x103d JUMP
0x103e JUMPDEST
0x103f PUSH1 0x0
0x1041 DUP1
0x1042 SWAP1
0x1043 SLOAD
0x1044 SWAP1
0x1045 PUSH2 0x100
0x1048 EXP
0x1049 SWAP1
0x104a DIV
0x104b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1060 AND
0x1061 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1076 AND
0x1077 CALLER
0x1078 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x108d AND
0x108e EQ
0x108f ISZERO
0x1090 PUSH2 0xa1d
0x1093 JUMPI
---
0xffb: JUMPDEST 
0xffc: V935 = CALLER
0xffd: V936 = 0x5
0xfff: V937 = 0x0
0x1001: V938 = 0x100
0x1004: V939 = EXP 0x100 0x0
0x1006: V940 = S[0x5]
0x1008: V941 = 0xffffffffffffffffffffffffffffffffffffffff
0x101d: V942 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x101e: V943 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x101f: V944 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V940
0x1022: V945 = 0xffffffffffffffffffffffffffffffffffffffff
0x1037: V946 = AND 0xffffffffffffffffffffffffffffffffffffffff V935
0x1038: V947 = MUL V946 0x1
0x1039: V948 = OR V947 V944
0x103b: S[0x5] = V948
0x103d: JUMP S0
0x103e: JUMPDEST 
0x103f: V949 = 0x0
0x1043: V950 = S[0x0]
0x1045: V951 = 0x100
0x1048: V952 = EXP 0x100 0x0
0x104a: V953 = DIV V950 0x1
0x104b: V954 = 0xffffffffffffffffffffffffffffffffffffffff
0x1060: V955 = AND 0xffffffffffffffffffffffffffffffffffffffff V953
0x1061: V956 = 0xffffffffffffffffffffffffffffffffffffffff
0x1076: V957 = AND 0xffffffffffffffffffffffffffffffffffffffff V955
0x1077: V958 = CALLER
0x1078: V959 = 0xffffffffffffffffffffffffffffffffffffffff
0x108d: V960 = AND 0xffffffffffffffffffffffffffffffffffffffff V958
0x108e: V961 = EQ V960 V957
0x108f: V962 = ISZERO V961
0x1090: V963 = 0xa1d
0x1093: THROWI V962
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x1094
[0x1094:0x10d3]
---
Predecessors: [0xffb]
Successors: [0x10d4]
---
0x1094 DUP1
0x1095 PUSH1 0x0
0x1097 DUP1
0x1098 PUSH2 0x100
0x109b EXP
0x109c DUP2
0x109d SLOAD
0x109e DUP2
0x109f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10b4 MUL
0x10b5 NOT
0x10b6 AND
0x10b7 SWAP1
0x10b8 DUP4
0x10b9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10ce AND
0x10cf MUL
0x10d0 OR
0x10d1 SWAP1
0x10d2 SSTORE
0x10d3 POP
---
0x1095: V964 = 0x0
0x1098: V965 = 0x100
0x109b: V966 = EXP 0x100 0x0
0x109d: V967 = S[0x0]
0x109f: V968 = 0xffffffffffffffffffffffffffffffffffffffff
0x10b4: V969 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x10b5: V970 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x10b6: V971 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V967
0x10b9: V972 = 0xffffffffffffffffffffffffffffffffffffffff
0x10ce: V973 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x10cf: V974 = MUL V973 0x1
0x10d0: V975 = OR V974 V971
0x10d2: S[0x0] = V975
---
Entry stack: []
Stack pops: 1
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x10d4
[0x10d4:0x112e]
---
Predecessors: [0x1094]
Successors: [0x112f]
---
0x10d4 JUMPDEST
0x10d5 POP
0x10d6 JUMP
0x10d7 JUMPDEST
0x10d8 PUSH1 0x0
0x10da DUP1
0x10db PUSH1 0x0
0x10dd SWAP1
0x10de SLOAD
0x10df SWAP1
0x10e0 PUSH2 0x100
0x10e3 EXP
0x10e4 SWAP1
0x10e5 DIV
0x10e6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10fb AND
0x10fc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1111 AND
0x1112 CALLER
0x1113 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1128 AND
0x1129 EQ
0x112a ISZERO
0x112b PUSH2 0xb6c
0x112e JUMPI
---
0x10d4: JUMPDEST 
0x10d6: JUMP S1
0x10d7: JUMPDEST 
0x10d8: V976 = 0x0
0x10db: V977 = 0x0
0x10de: V978 = S[0x0]
0x10e0: V979 = 0x100
0x10e3: V980 = EXP 0x100 0x0
0x10e5: V981 = DIV V978 0x1
0x10e6: V982 = 0xffffffffffffffffffffffffffffffffffffffff
0x10fb: V983 = AND 0xffffffffffffffffffffffffffffffffffffffff V981
0x10fc: V984 = 0xffffffffffffffffffffffffffffffffffffffff
0x1111: V985 = AND 0xffffffffffffffffffffffffffffffffffffffff V983
0x1112: V986 = CALLER
0x1113: V987 = 0xffffffffffffffffffffffffffffffffffffffff
0x1128: V988 = AND 0xffffffffffffffffffffffffffffffffffffffff V986
0x1129: V989 = EQ V988 V985
0x112a: V990 = ISZERO V989
0x112b: V991 = 0xb6c
0x112e: THROWI V990
---
Entry stack: [S0]
Stack pops: 4
Stack additions: [0x0]
Exit stack: []

================================

Block 0x112f
[0x112f:0x113b]
---
Predecessors: [0x10d4]
Successors: [0x113c]
---
0x112f PUSH2 0xa7f
0x1132 PUSH2 0x854
0x1135 JUMP
0x1136 JUMPDEST
0x1137 ISZERO
0x1138 PUSH2 0xb6b
0x113b JUMPI
---
0x112f: V992 = 0xa7f
0x1132: V993 = 0x854
0x1135: THROW 
0x1136: JUMPDEST 
0x1137: V994 = ISZERO S0
0x1138: V995 = 0xb6b
0x113b: THROWI V994
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: [0xa7f]
Exit stack: []

================================

Block 0x113c
[0x113c:0x1187]
---
Predecessors: [0x112f]
Successors: [0x1188]
---
0x113c PUSH1 0x1
0x113e PUSH1 0x0
0x1140 CALLER
0x1141 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1156 AND
0x1157 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x116c AND
0x116d DUP2
0x116e MSTORE
0x116f PUSH1 0x20
0x1171 ADD
0x1172 SWAP1
0x1173 DUP2
0x1174 MSTORE
0x1175 PUSH1 0x20
0x1177 ADD
0x1178 PUSH1 0x0
0x117a SHA3
0x117b SLOAD
0x117c SWAP1
0x117d POP
0x117e PUSH1 0x0
0x1180 DUP2
0x1181 GT
0x1182 DUP1
0x1183 ISZERO
0x1184 PUSH2 0xad6
0x1187 JUMPI
---
0x113c: V996 = 0x1
0x113e: V997 = 0x0
0x1140: V998 = CALLER
0x1141: V999 = 0xffffffffffffffffffffffffffffffffffffffff
0x1156: V1000 = AND 0xffffffffffffffffffffffffffffffffffffffff V998
0x1157: V1001 = 0xffffffffffffffffffffffffffffffffffffffff
0x116c: V1002 = AND 0xffffffffffffffffffffffffffffffffffffffff V1000
0x116e: M[0x0] = V1002
0x116f: V1003 = 0x20
0x1171: V1004 = ADD 0x20 0x0
0x1174: M[0x20] = 0x1
0x1175: V1005 = 0x20
0x1177: V1006 = ADD 0x20 0x20
0x1178: V1007 = 0x0
0x117a: V1008 = SHA3 0x0 0x40
0x117b: V1009 = S[V1008]
0x117e: V1010 = 0x0
0x1181: V1011 = GT V1009 0x0
0x1183: V1012 = ISZERO V1011
0x1184: V1013 = 0xad6
0x1187: THROWI V1012
---
Entry stack: []
Stack pops: 1
Stack additions: [V1009, V1011]
Exit stack: [V1009, V1011]

================================

Block 0x1188
[0x1188:0x118c]
---
Predecessors: [0x113c]
Successors: [0x118d]
---
0x1188 POP
0x1189 DUP1
0x118a DUP3
0x118b GT
0x118c ISZERO
---
0x118b: V1014 = GT S2 V1009
0x118c: V1015 = ISZERO V1014
---
Entry stack: [V1009, V1011]
Stack pops: 3
Stack additions: [S2, S1, V1015]
Exit stack: [S0, V1009, V1015]

================================

Block 0x118d
[0x118d:0x1192]
---
Predecessors: [0x1188]
Successors: [0x1193]
---
0x118d JUMPDEST
0x118e ISZERO
0x118f PUSH2 0xb6a
0x1192 JUMPI
---
0x118d: JUMPDEST 
0x118e: V1016 = ISZERO V1015
0x118f: V1017 = 0xb6a
0x1192: THROWI V1016
---
Entry stack: [S2, V1009, V1015]
Stack pops: 1
Stack additions: []
Exit stack: [S2, V1009]

================================

Block 0x1193
[0x1193:0x11cd]
---
Predecessors: [0x118d]
Successors: [0x11ce]
---
0x1193 DUP3
0x1194 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11a9 AND
0x11aa PUSH2 0x8fc
0x11ad DUP4
0x11ae SWAP1
0x11af DUP2
0x11b0 ISZERO
0x11b1 MUL
0x11b2 SWAP1
0x11b3 PUSH1 0x40
0x11b5 MLOAD
0x11b6 PUSH1 0x0
0x11b8 PUSH1 0x40
0x11ba MLOAD
0x11bb DUP1
0x11bc DUP4
0x11bd SUB
0x11be DUP2
0x11bf DUP6
0x11c0 DUP9
0x11c1 DUP9
0x11c2 CALL
0x11c3 SWAP4
0x11c4 POP
0x11c5 POP
0x11c6 POP
0x11c7 POP
0x11c8 ISZERO
0x11c9 ISZERO
0x11ca PUSH2 0xb1b
0x11cd JUMPI
---
0x1194: V1018 = 0xffffffffffffffffffffffffffffffffffffffff
0x11a9: V1019 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x11aa: V1020 = 0x8fc
0x11b0: V1021 = ISZERO S1
0x11b1: V1022 = MUL V1021 0x8fc
0x11b3: V1023 = 0x40
0x11b5: V1024 = M[0x40]
0x11b6: V1025 = 0x0
0x11b8: V1026 = 0x40
0x11ba: V1027 = M[0x40]
0x11bd: V1028 = SUB V1024 V1027
0x11c2: V1029 = CALL V1022 V1019 S1 V1027 V1028 V1027 0x0
0x11c8: V1030 = ISZERO V1029
0x11c9: V1031 = ISZERO V1030
0x11ca: V1032 = 0xb1b
0x11cd: THROWI V1031
---
Entry stack: [S1, V1009]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S0, S1, V1009]

================================

Block 0x11ce
[0x11ce:0x1220]
---
Predecessors: [0x1193]
Successors: [0x1221]
---
0x11ce PUSH1 0x0
0x11d0 DUP1
0x11d1 REVERT
0x11d2 JUMPDEST
0x11d3 DUP3
0x11d4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11e9 AND
0x11ea PUSH32 0x7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65
0x120b DUP4
0x120c PUSH1 0x40
0x120e MLOAD
0x120f DUP1
0x1210 DUP3
0x1211 DUP2
0x1212 MSTORE
0x1213 PUSH1 0x20
0x1215 ADD
0x1216 SWAP2
0x1217 POP
0x1218 POP
0x1219 PUSH1 0x40
0x121b MLOAD
0x121c DUP1
0x121d SWAP2
0x121e SUB
0x121f SWAP1
0x1220 LOG2
---
0x11ce: V1033 = 0x0
0x11d1: REVERT 0x0 0x0
0x11d2: JUMPDEST 
0x11d4: V1034 = 0xffffffffffffffffffffffffffffffffffffffff
0x11e9: V1035 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x11ea: V1036 = 0x7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65
0x120c: V1037 = 0x40
0x120e: V1038 = M[0x40]
0x1212: M[V1038] = S1
0x1213: V1039 = 0x20
0x1215: V1040 = ADD 0x20 V1038
0x1219: V1041 = 0x40
0x121b: V1042 = M[0x40]
0x121e: V1043 = SUB V1040 V1042
0x1220: LOG V1042 V1043 0x7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65 V1035
---
Entry stack: [S2, S1, V1009]
Stack pops: 0
Stack additions: [S0, S1, S2]
Exit stack: []

================================

Block 0x1221
[0x1221:0x1221]
---
Predecessors: [0x11ce]
Successors: [0x1222]
---
0x1221 JUMPDEST
---
0x1221: JUMPDEST 
---
Entry stack: [S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S2, S1, S0]

================================

Block 0x1222
[0x1222:0x1222]
---
Predecessors: [0x1221]
Successors: [0x1223]
---
0x1222 JUMPDEST
---
0x1222: JUMPDEST 
---
Entry stack: [S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S2, S1, S0]

================================

Block 0x1223
[0x1223:0x1281]
---
Predecessors: [0x1222]
Successors: []
---
0x1223 JUMPDEST
0x1224 POP
0x1225 POP
0x1226 POP
0x1227 JUMP
0x1228 JUMPDEST
0x1229 PUSH1 0x1
0x122b PUSH1 0x3
0x122d PUSH1 0x0
0x122f PUSH2 0x100
0x1232 EXP
0x1233 DUP2
0x1234 SLOAD
0x1235 DUP2
0x1236 PUSH1 0xff
0x1238 MUL
0x1239 NOT
0x123a AND
0x123b SWAP1
0x123c DUP4
0x123d ISZERO
0x123e ISZERO
0x123f MUL
0x1240 OR
0x1241 SWAP1
0x1242 SSTORE
0x1243 POP
0x1244 JUMP
0x1245 STOP
0x1246 LOG1
0x1247 PUSH6 0x627a7a723058
0x124e SHA3
0x124f MISSING 0xe7
0x1250 SHA3
0x1251 MISSING 0xb9
0x1252 SSTORE
0x1253 MISSING 0xdf
0x1254 MISSING 0xbb
0x1255 MISSING 0xd1
0x1256 PUSH18 0x2fd79119f0804ef87ac8342be55d00abd97d
0x1269 MISSING 0x46
0x126a PUSH23 0x7987fc50029
---
0x1223: JUMPDEST 
0x1227: JUMP S3
0x1228: JUMPDEST 
0x1229: V1044 = 0x1
0x122b: V1045 = 0x3
0x122d: V1046 = 0x0
0x122f: V1047 = 0x100
0x1232: V1048 = EXP 0x100 0x0
0x1234: V1049 = S[0x3]
0x1236: V1050 = 0xff
0x1238: V1051 = MUL 0xff 0x1
0x1239: V1052 = NOT 0xff
0x123a: V1053 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1049
0x123d: V1054 = ISZERO 0x1
0x123e: V1055 = ISZERO 0x0
0x123f: V1056 = MUL 0x1 0x1
0x1240: V1057 = OR 0x1 V1053
0x1242: S[0x3] = V1057
0x1244: JUMP S0
0x1245: STOP 
0x1246: LOG S0 S1 S2
0x1247: V1058 = 0x627a7a723058
0x124e: V1059 = SHA3 0x627a7a723058 S3
0x124f: MISSING 0xe7
0x1250: V1060 = SHA3 S0 S1
0x1251: MISSING 0xb9
0x1252: S[S0] = S1
0x1253: MISSING 0xdf
0x1254: MISSING 0xbb
0x1255: MISSING 0xd1
0x1256: V1061 = 0x2fd79119f0804ef87ac8342be55d00abd97d
0x1269: MISSING 0x46
0x126a: V1062 = 0x7987fc50029
---
Entry stack: [S2, S1, S0]
Stack pops: 1999
Stack additions: [0x7987fc50029]
Exit stack: []

================================

Function 0:
Public function signature: 0xf2fde38b
Entry block: 0x46
Exit block: 0x7d
Body: 0x46, 0x4d, 0x51, 0x7d, 0x7f, 0xd5, 0x115

Function 1:
Public fallback function
Entry block: 0x41
Exit block: 0x41
Body: 0x41

