Block 0x0
[0x0:0x4]
---
Predecessors: []
Successors: [0x5]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x5
[0x5:0x9]
---
Predecessors: [0x0]
Successors: []
---
0x5 JUMPDEST
0x6 PUSH1 0x0
0x8 DUP1
0x9 REVERT
---
0x5: JUMPDEST 
0x6: V2 = 0x0
0x9: REVERT 0x0 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa
[0xa:0x40]
---
Predecessors: []
Successors: [0x41]
---
0xa STOP
0xb LOG1
0xc PUSH6 0x627a7a723058
0x13 SHA3
0x14 MISSING 0xb5
0x15 MISSING 0xf7
0x16 BYTE
0x17 PUSH11 0x2e210ad9392af0a2944972
0x23 SWAP2
0x24 MISSING 0xe8
0x25 MISSING 0x21
0x26 MISSING 0xdc
0x27 MISSING 0xea
0x28 SWAP2
0x29 MISSING 0x49
0x2a RETURNDATASIZE
0x2b PUSH17 0x41de645c73aabd57002960606040523615
0x3d PUSH2 0x97
0x40 JUMPI
---
0xa: STOP 
0xb: LOG S0 S1 S2
0xc: V3 = 0x627a7a723058
0x13: V4 = SHA3 0x627a7a723058 S3
0x14: MISSING 0xb5
0x15: MISSING 0xf7
0x16: V5 = BYTE S0 S1
0x17: V6 = 0x2e210ad9392af0a2944972
0x24: MISSING 0xe8
0x25: MISSING 0x21
0x26: MISSING 0xdc
0x27: MISSING 0xea
0x29: MISSING 0x49
0x2a: V7 = RETURNDATASIZE
0x2b: V8 = 0x41de645c73aabd57002960606040523615
0x3d: V9 = 0x97
0x40: THROWI 0x41de645c73aabd57002960606040523615
---
Entry stack: []
Stack pops: 0
Stack additions: [V4, S2, V5, 0x2e210ad9392af0a2944972, S2, S1, S0, V7]
Exit stack: []

================================

Block 0x41
[0x41:0x74]
---
Predecessors: [0xa]
Successors: [0x75]
---
0x41 PUSH1 0x0
0x43 CALLDATALOAD
0x44 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x62 SWAP1
0x63 DIV
0x64 PUSH4 0xffffffff
0x69 AND
0x6a DUP1
0x6b PUSH4 0x6fdde03
0x70 EQ
0x71 PUSH2 0xaa
0x74 JUMPI
---
0x41: V10 = 0x0
0x43: V11 = CALLDATALOAD 0x0
0x44: V12 = 0x100000000000000000000000000000000000000000000000000000000
0x63: V13 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x64: V14 = 0xffffffff
0x69: V15 = AND 0xffffffff V13
0x6b: V16 = 0x6fdde03
0x70: V17 = EQ 0x6fdde03 V15
0x71: V18 = 0xaa
0x74: THROWI V17
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [V15]
Exit stack: [V7, V15]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x41]
Successors: [0x80]
---
0x75 DUP1
0x76 PUSH4 0x95ea7b3
0x7b EQ
0x7c PUSH2 0x139
0x7f JUMPI
---
0x76: V19 = 0x95ea7b3
0x7b: V20 = EQ 0x95ea7b3 V15
0x7c: V21 = 0x139
0x7f: THROWI V20
---
Entry stack: [V7, V15]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7, V15]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b]
---
0x80 DUP1
0x81 PUSH4 0x18160ddd
0x86 EQ
0x87 PUSH2 0x193
0x8a JUMPI
---
0x81: V22 = 0x18160ddd
0x86: V23 = EQ 0x18160ddd V15
0x87: V24 = 0x193
0x8a: THROWI V23
---
Entry stack: [V7, V15]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7, V15]

================================

Block 0x8b
[0x8b:0x95]
---
Predecessors: [0x80]
Successors: [0x96]
---
0x8b DUP1
0x8c PUSH4 0x23b872dd
0x91 EQ
0x92 PUSH2 0x1bc
0x95 JUMPI
---
0x8c: V25 = 0x23b872dd
0x91: V26 = EQ 0x23b872dd V15
0x92: V27 = 0x1bc
0x95: THROWI V26
---
Entry stack: [V7, V15]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7, V15]

================================

Block 0x96
[0x96:0xa0]
---
Predecessors: [0x8b]
Successors: [0xa1]
---
0x96 DUP1
0x97 PUSH4 0x313ce567
0x9c EQ
0x9d PUSH2 0x235
0xa0 JUMPI
---
0x97: V28 = 0x313ce567
0x9c: V29 = EQ 0x313ce567 V15
0x9d: V30 = 0x235
0xa0: THROWI V29
---
Entry stack: [V7, V15]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7, V15]

================================

Block 0xa1
[0xa1:0xab]
---
Predecessors: [0x96]
Successors: [0xac]
---
0xa1 DUP1
0xa2 PUSH4 0x70a08231
0xa7 EQ
0xa8 PUSH2 0x25e
0xab JUMPI
---
0xa2: V31 = 0x70a08231
0xa7: V32 = EQ 0x70a08231 V15
0xa8: V33 = 0x25e
0xab: THROWI V32
---
Entry stack: [V7, V15]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7, V15]

================================

Block 0xac
[0xac:0xb6]
---
Predecessors: [0xa1]
Successors: [0xb7]
---
0xac DUP1
0xad PUSH4 0x95d89b41
0xb2 EQ
0xb3 PUSH2 0x2ab
0xb6 JUMPI
---
0xad: V34 = 0x95d89b41
0xb2: V35 = EQ 0x95d89b41 V15
0xb3: V36 = 0x2ab
0xb6: THROWI V35
---
Entry stack: [V7, V15]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7, V15]

================================

Block 0xb7
[0xb7:0xc1]
---
Predecessors: [0xac]
Successors: [0xc2]
---
0xb7 DUP1
0xb8 PUSH4 0xa9059cbb
0xbd EQ
0xbe PUSH2 0x33a
0xc1 JUMPI
---
0xb8: V37 = 0xa9059cbb
0xbd: V38 = EQ 0xa9059cbb V15
0xbe: V39 = 0x33a
0xc1: THROWI V38
---
Entry stack: [V7, V15]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7, V15]

================================

Block 0xc2
[0xc2:0xcc]
---
Predecessors: [0xb7]
Successors: [0xcd]
---
0xc2 DUP1
0xc3 PUSH4 0xdd62ed3e
0xc8 EQ
0xc9 PUSH2 0x394
0xcc JUMPI
---
0xc3: V40 = 0xdd62ed3e
0xc8: V41 = EQ 0xdd62ed3e V15
0xc9: V42 = 0x394
0xcc: THROWI V41
---
Entry stack: [V7, V15]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7, V15]

================================

Block 0xcd
[0xcd:0xd3]
---
Predecessors: [0xc2]
Successors: [0xd4]
---
0xcd JUMPDEST
0xce CALLVALUE
0xcf ISZERO
0xd0 PUSH2 0xa2
0xd3 JUMPI
---
0xcd: JUMPDEST 
0xce: V43 = CALLVALUE
0xcf: V44 = ISZERO V43
0xd0: V45 = 0xa2
0xd3: THROWI V44
---
Entry stack: [V7, V15]
Stack pops: 0
Stack additions: []
Exit stack: [V7, V15]

================================

Block 0xd4
[0xd4:0xd8]
---
Predecessors: [0xcd]
Successors: [0xd9]
---
0xd4 PUSH1 0x0
0xd6 DUP1
0xd7 REVERT
0xd8 JUMPDEST
---
0xd4: V46 = 0x0
0xd7: REVERT 0x0 0x0
0xd8: JUMPDEST 
---
Entry stack: [V7, V15]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd9
[0xd9:0xe6]
---
Predecessors: [0xd4]
Successors: [0xe7]
---
0xd9 JUMPDEST
0xda PUSH1 0x0
0xdc DUP1
0xdd REVERT
0xde JUMPDEST
0xdf STOP
0xe0 JUMPDEST
0xe1 CALLVALUE
0xe2 ISZERO
0xe3 PUSH2 0xb5
0xe6 JUMPI
---
0xd9: JUMPDEST 
0xda: V47 = 0x0
0xdd: REVERT 0x0 0x0
0xde: JUMPDEST 
0xdf: STOP 
0xe0: JUMPDEST 
0xe1: V48 = CALLVALUE
0xe2: V49 = ISZERO V48
0xe3: V50 = 0xb5
0xe6: THROWI V49
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xe7
[0xe7:0x117]
---
Predecessors: [0xd9]
Successors: [0x118]
---
0xe7 PUSH1 0x0
0xe9 DUP1
0xea REVERT
0xeb JUMPDEST
0xec PUSH2 0xbd
0xef PUSH2 0x400
0xf2 JUMP
0xf3 JUMPDEST
0xf4 PUSH1 0x40
0xf6 MLOAD
0xf7 DUP1
0xf8 DUP1
0xf9 PUSH1 0x20
0xfb ADD
0xfc DUP3
0xfd DUP2
0xfe SUB
0xff DUP3
0x100 MSTORE
0x101 DUP4
0x102 DUP2
0x103 DUP2
0x104 MLOAD
0x105 DUP2
0x106 MSTORE
0x107 PUSH1 0x20
0x109 ADD
0x10a SWAP2
0x10b POP
0x10c DUP1
0x10d MLOAD
0x10e SWAP1
0x10f PUSH1 0x20
0x111 ADD
0x112 SWAP1
0x113 DUP1
0x114 DUP4
0x115 DUP4
0x116 PUSH1 0x0
---
0xe7: V51 = 0x0
0xea: REVERT 0x0 0x0
0xeb: JUMPDEST 
0xec: V52 = 0xbd
0xef: V53 = 0x400
0xf2: THROW 
0xf3: JUMPDEST 
0xf4: V54 = 0x40
0xf6: V55 = M[0x40]
0xf9: V56 = 0x20
0xfb: V57 = ADD 0x20 V55
0xfe: V58 = SUB V57 V55
0x100: M[V55] = V58
0x104: V59 = M[S0]
0x106: M[V57] = V59
0x107: V60 = 0x20
0x109: V61 = ADD 0x20 V57
0x10d: V62 = M[S0]
0x10f: V63 = 0x20
0x111: V64 = ADD 0x20 S0
0x116: V65 = 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: [0xbd, 0x0, V64, V61, V62, V62, V64, V61, V55, V55, S0]
Exit stack: []

================================

Block 0x118
[0x118:0x120]
---
Predecessors: [0xe7]
Successors: [0x121]
---
0x118 JUMPDEST
0x119 DUP4
0x11a DUP2
0x11b LT
0x11c ISZERO
0x11d PUSH2 0xfe
0x120 JUMPI
---
0x118: JUMPDEST 
0x11b: V66 = LT 0x0 V62
0x11c: V67 = ISZERO V66
0x11d: V68 = 0xfe
0x120: THROWI V67
---
Entry stack: [S9, V55, V55, V61, V64, V62, V62, V61, V64, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V55, V55, V61, V64, V62, V62, V61, V64, 0x0]

================================

Block 0x121
[0x121:0x128]
---
Predecessors: [0x118]
Successors: [0x129]
---
0x121 DUP1
0x122 DUP3
0x123 ADD
0x124 MLOAD
0x125 DUP2
0x126 DUP5
0x127 ADD
0x128 MSTORE
---
0x123: V69 = ADD V64 0x0
0x124: V70 = M[V69]
0x127: V71 = ADD V61 0x0
0x128: M[V71] = V70
---
Entry stack: [S9, V55, V55, V61, V64, V62, V62, V61, V64, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S9, V55, V55, V61, V64, V62, V62, V61, V64, 0x0]

================================

Block 0x129
[0x129:0x147]
---
Predecessors: [0x121]
Successors: [0x148]
---
0x129 JUMPDEST
0x12a PUSH1 0x20
0x12c DUP2
0x12d ADD
0x12e SWAP1
0x12f POP
0x130 PUSH2 0xe2
0x133 JUMP
0x134 JUMPDEST
0x135 POP
0x136 POP
0x137 POP
0x138 POP
0x139 SWAP1
0x13a POP
0x13b SWAP1
0x13c DUP2
0x13d ADD
0x13e SWAP1
0x13f PUSH1 0x1f
0x141 AND
0x142 DUP1
0x143 ISZERO
0x144 PUSH2 0x12b
0x147 JUMPI
---
0x129: JUMPDEST 
0x12a: V72 = 0x20
0x12d: V73 = ADD 0x0 0x20
0x130: V74 = 0xe2
0x133: THROW 
0x134: JUMPDEST 
0x13d: V75 = ADD S4 S6
0x13f: V76 = 0x1f
0x141: V77 = AND 0x1f S4
0x143: V78 = ISZERO V77
0x144: V79 = 0x12b
0x147: THROWI V78
---
Entry stack: [S9, V55, V55, V61, V64, V62, V62, V61, V64, 0x0]
Stack pops: 1
Stack additions: [V77, V75]
Exit stack: []

================================

Block 0x148
[0x148:0x160]
---
Predecessors: [0x129]
Successors: [0x161]
---
0x148 DUP1
0x149 DUP3
0x14a SUB
0x14b DUP1
0x14c MLOAD
0x14d PUSH1 0x1
0x14f DUP4
0x150 PUSH1 0x20
0x152 SUB
0x153 PUSH2 0x100
0x156 EXP
0x157 SUB
0x158 NOT
0x159 AND
0x15a DUP2
0x15b MSTORE
0x15c PUSH1 0x20
0x15e ADD
0x15f SWAP2
0x160 POP
---
0x14a: V80 = SUB V75 V77
0x14c: V81 = M[V80]
0x14d: V82 = 0x1
0x150: V83 = 0x20
0x152: V84 = SUB 0x20 V77
0x153: V85 = 0x100
0x156: V86 = EXP 0x100 V84
0x157: V87 = SUB V86 0x1
0x158: V88 = NOT V87
0x159: V89 = AND V88 V81
0x15b: M[V80] = V89
0x15c: V90 = 0x20
0x15e: V91 = ADD 0x20 V80
---
Entry stack: [V75, V77]
Stack pops: 2
Stack additions: [V91, S0]
Exit stack: [V91, V77]

================================

Block 0x161
[0x161:0x175]
---
Predecessors: [0x148]
Successors: [0x176]
---
0x161 JUMPDEST
0x162 POP
0x163 SWAP3
0x164 POP
0x165 POP
0x166 POP
0x167 PUSH1 0x40
0x169 MLOAD
0x16a DUP1
0x16b SWAP2
0x16c SUB
0x16d SWAP1
0x16e RETURN
0x16f JUMPDEST
0x170 CALLVALUE
0x171 ISZERO
0x172 PUSH2 0x144
0x175 JUMPI
---
0x161: JUMPDEST 
0x167: V92 = 0x40
0x169: V93 = M[0x40]
0x16c: V94 = SUB V91 V93
0x16e: RETURN V93 V94
0x16f: JUMPDEST 
0x170: V95 = CALLVALUE
0x171: V96 = ISZERO V95
0x172: V97 = 0x144
0x175: THROWI V96
---
Entry stack: [V91, V77]
Stack pops: 10
Stack additions: []
Exit stack: []

================================

Block 0x176
[0x176:0x1cf]
---
Predecessors: [0x161]
Successors: [0x1d0]
---
0x176 PUSH1 0x0
0x178 DUP1
0x179 REVERT
0x17a JUMPDEST
0x17b PUSH2 0x179
0x17e PUSH1 0x4
0x180 DUP1
0x181 DUP1
0x182 CALLDATALOAD
0x183 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x198 AND
0x199 SWAP1
0x19a PUSH1 0x20
0x19c ADD
0x19d SWAP1
0x19e SWAP2
0x19f SWAP1
0x1a0 DUP1
0x1a1 CALLDATALOAD
0x1a2 SWAP1
0x1a3 PUSH1 0x20
0x1a5 ADD
0x1a6 SWAP1
0x1a7 SWAP2
0x1a8 SWAP1
0x1a9 POP
0x1aa POP
0x1ab PUSH2 0x439
0x1ae JUMP
0x1af JUMPDEST
0x1b0 PUSH1 0x40
0x1b2 MLOAD
0x1b3 DUP1
0x1b4 DUP3
0x1b5 ISZERO
0x1b6 ISZERO
0x1b7 ISZERO
0x1b8 ISZERO
0x1b9 DUP2
0x1ba MSTORE
0x1bb PUSH1 0x20
0x1bd ADD
0x1be SWAP2
0x1bf POP
0x1c0 POP
0x1c1 PUSH1 0x40
0x1c3 MLOAD
0x1c4 DUP1
0x1c5 SWAP2
0x1c6 SUB
0x1c7 SWAP1
0x1c8 RETURN
0x1c9 JUMPDEST
0x1ca CALLVALUE
0x1cb ISZERO
0x1cc PUSH2 0x19e
0x1cf JUMPI
---
0x176: V98 = 0x0
0x179: REVERT 0x0 0x0
0x17a: JUMPDEST 
0x17b: V99 = 0x179
0x17e: V100 = 0x4
0x182: V101 = CALLDATALOAD 0x4
0x183: V102 = 0xffffffffffffffffffffffffffffffffffffffff
0x198: V103 = AND 0xffffffffffffffffffffffffffffffffffffffff V101
0x19a: V104 = 0x20
0x19c: V105 = ADD 0x20 0x4
0x1a1: V106 = CALLDATALOAD 0x24
0x1a3: V107 = 0x20
0x1a5: V108 = ADD 0x20 0x24
0x1ab: V109 = 0x439
0x1ae: THROW 
0x1af: JUMPDEST 
0x1b0: V110 = 0x40
0x1b2: V111 = M[0x40]
0x1b5: V112 = ISZERO S0
0x1b6: V113 = ISZERO V112
0x1b7: V114 = ISZERO V113
0x1b8: V115 = ISZERO V114
0x1ba: M[V111] = V115
0x1bb: V116 = 0x20
0x1bd: V117 = ADD 0x20 V111
0x1c1: V118 = 0x40
0x1c3: V119 = M[0x40]
0x1c6: V120 = SUB V117 V119
0x1c8: RETURN V119 V120
0x1c9: JUMPDEST 
0x1ca: V121 = CALLVALUE
0x1cb: V122 = ISZERO V121
0x1cc: V123 = 0x19e
0x1cf: THROWI V122
---
Entry stack: []
Stack pops: 0
Stack additions: [V106, V103, 0x179]
Exit stack: []

================================

Block 0x1d0
[0x1d0:0x1f8]
---
Predecessors: [0x176]
Successors: [0x1f9]
---
0x1d0 PUSH1 0x0
0x1d2 DUP1
0x1d3 REVERT
0x1d4 JUMPDEST
0x1d5 PUSH2 0x1a6
0x1d8 PUSH2 0x52c
0x1db JUMP
0x1dc JUMPDEST
0x1dd PUSH1 0x40
0x1df MLOAD
0x1e0 DUP1
0x1e1 DUP3
0x1e2 DUP2
0x1e3 MSTORE
0x1e4 PUSH1 0x20
0x1e6 ADD
0x1e7 SWAP2
0x1e8 POP
0x1e9 POP
0x1ea PUSH1 0x40
0x1ec MLOAD
0x1ed DUP1
0x1ee SWAP2
0x1ef SUB
0x1f0 SWAP1
0x1f1 RETURN
0x1f2 JUMPDEST
0x1f3 CALLVALUE
0x1f4 ISZERO
0x1f5 PUSH2 0x1c7
0x1f8 JUMPI
---
0x1d0: V124 = 0x0
0x1d3: REVERT 0x0 0x0
0x1d4: JUMPDEST 
0x1d5: V125 = 0x1a6
0x1d8: V126 = 0x52c
0x1db: THROW 
0x1dc: JUMPDEST 
0x1dd: V127 = 0x40
0x1df: V128 = M[0x40]
0x1e3: M[V128] = S0
0x1e4: V129 = 0x20
0x1e6: V130 = ADD 0x20 V128
0x1ea: V131 = 0x40
0x1ec: V132 = M[0x40]
0x1ef: V133 = SUB V130 V132
0x1f1: RETURN V132 V133
0x1f2: JUMPDEST 
0x1f3: V134 = CALLVALUE
0x1f4: V135 = ISZERO V134
0x1f5: V136 = 0x1c7
0x1f8: THROWI V135
---
Entry stack: []
Stack pops: 0
Stack additions: [0x1a6]
Exit stack: []

================================

Block 0x1f9
[0x1f9:0x271]
---
Predecessors: [0x1d0]
Successors: [0x272]
---
0x1f9 PUSH1 0x0
0x1fb DUP1
0x1fc REVERT
0x1fd JUMPDEST
0x1fe PUSH2 0x21b
0x201 PUSH1 0x4
0x203 DUP1
0x204 DUP1
0x205 CALLDATALOAD
0x206 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21b AND
0x21c SWAP1
0x21d PUSH1 0x20
0x21f ADD
0x220 SWAP1
0x221 SWAP2
0x222 SWAP1
0x223 DUP1
0x224 CALLDATALOAD
0x225 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x23a AND
0x23b SWAP1
0x23c PUSH1 0x20
0x23e ADD
0x23f SWAP1
0x240 SWAP2
0x241 SWAP1
0x242 DUP1
0x243 CALLDATALOAD
0x244 SWAP1
0x245 PUSH1 0x20
0x247 ADD
0x248 SWAP1
0x249 SWAP2
0x24a SWAP1
0x24b POP
0x24c POP
0x24d PUSH2 0x532
0x250 JUMP
0x251 JUMPDEST
0x252 PUSH1 0x40
0x254 MLOAD
0x255 DUP1
0x256 DUP3
0x257 ISZERO
0x258 ISZERO
0x259 ISZERO
0x25a ISZERO
0x25b DUP2
0x25c MSTORE
0x25d PUSH1 0x20
0x25f ADD
0x260 SWAP2
0x261 POP
0x262 POP
0x263 PUSH1 0x40
0x265 MLOAD
0x266 DUP1
0x267 SWAP2
0x268 SUB
0x269 SWAP1
0x26a RETURN
0x26b JUMPDEST
0x26c CALLVALUE
0x26d ISZERO
0x26e PUSH2 0x240
0x271 JUMPI
---
0x1f9: V137 = 0x0
0x1fc: REVERT 0x0 0x0
0x1fd: JUMPDEST 
0x1fe: V138 = 0x21b
0x201: V139 = 0x4
0x205: V140 = CALLDATALOAD 0x4
0x206: V141 = 0xffffffffffffffffffffffffffffffffffffffff
0x21b: V142 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x21d: V143 = 0x20
0x21f: V144 = ADD 0x20 0x4
0x224: V145 = CALLDATALOAD 0x24
0x225: V146 = 0xffffffffffffffffffffffffffffffffffffffff
0x23a: V147 = AND 0xffffffffffffffffffffffffffffffffffffffff V145
0x23c: V148 = 0x20
0x23e: V149 = ADD 0x20 0x24
0x243: V150 = CALLDATALOAD 0x44
0x245: V151 = 0x20
0x247: V152 = ADD 0x20 0x44
0x24d: V153 = 0x532
0x250: THROW 
0x251: JUMPDEST 
0x252: V154 = 0x40
0x254: V155 = M[0x40]
0x257: V156 = ISZERO S0
0x258: V157 = ISZERO V156
0x259: V158 = ISZERO V157
0x25a: V159 = ISZERO V158
0x25c: M[V155] = V159
0x25d: V160 = 0x20
0x25f: V161 = ADD 0x20 V155
0x263: V162 = 0x40
0x265: V163 = M[0x40]
0x268: V164 = SUB V161 V163
0x26a: RETURN V163 V164
0x26b: JUMPDEST 
0x26c: V165 = CALLVALUE
0x26d: V166 = ISZERO V165
0x26e: V167 = 0x240
0x271: THROWI V166
---
Entry stack: []
Stack pops: 0
Stack additions: [V150, V147, V142, 0x21b]
Exit stack: []

================================

Block 0x272
[0x272:0x29a]
---
Predecessors: [0x1f9]
Successors: [0x29b]
---
0x272 PUSH1 0x0
0x274 DUP1
0x275 REVERT
0x276 JUMPDEST
0x277 PUSH2 0x248
0x27a PUSH2 0x8c8
0x27d JUMP
0x27e JUMPDEST
0x27f PUSH1 0x40
0x281 MLOAD
0x282 DUP1
0x283 DUP3
0x284 DUP2
0x285 MSTORE
0x286 PUSH1 0x20
0x288 ADD
0x289 SWAP2
0x28a POP
0x28b POP
0x28c PUSH1 0x40
0x28e MLOAD
0x28f DUP1
0x290 SWAP2
0x291 SUB
0x292 SWAP1
0x293 RETURN
0x294 JUMPDEST
0x295 CALLVALUE
0x296 ISZERO
0x297 PUSH2 0x269
0x29a JUMPI
---
0x272: V168 = 0x0
0x275: REVERT 0x0 0x0
0x276: JUMPDEST 
0x277: V169 = 0x248
0x27a: V170 = 0x8c8
0x27d: THROW 
0x27e: JUMPDEST 
0x27f: V171 = 0x40
0x281: V172 = M[0x40]
0x285: M[V172] = S0
0x286: V173 = 0x20
0x288: V174 = ADD 0x20 V172
0x28c: V175 = 0x40
0x28e: V176 = M[0x40]
0x291: V177 = SUB V174 V176
0x293: RETURN V176 V177
0x294: JUMPDEST 
0x295: V178 = CALLVALUE
0x296: V179 = ISZERO V178
0x297: V180 = 0x269
0x29a: THROWI V179
---
Entry stack: []
Stack pops: 0
Stack additions: [0x248]
Exit stack: []

================================

Block 0x29b
[0x29b:0x2e7]
---
Predecessors: [0x272]
Successors: [0x2e8]
---
0x29b PUSH1 0x0
0x29d DUP1
0x29e REVERT
0x29f JUMPDEST
0x2a0 PUSH2 0x295
0x2a3 PUSH1 0x4
0x2a5 DUP1
0x2a6 DUP1
0x2a7 CALLDATALOAD
0x2a8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2bd AND
0x2be SWAP1
0x2bf PUSH1 0x20
0x2c1 ADD
0x2c2 SWAP1
0x2c3 SWAP2
0x2c4 SWAP1
0x2c5 POP
0x2c6 POP
0x2c7 PUSH2 0x8cd
0x2ca JUMP
0x2cb JUMPDEST
0x2cc PUSH1 0x40
0x2ce MLOAD
0x2cf DUP1
0x2d0 DUP3
0x2d1 DUP2
0x2d2 MSTORE
0x2d3 PUSH1 0x20
0x2d5 ADD
0x2d6 SWAP2
0x2d7 POP
0x2d8 POP
0x2d9 PUSH1 0x40
0x2db MLOAD
0x2dc DUP1
0x2dd SWAP2
0x2de SUB
0x2df SWAP1
0x2e0 RETURN
0x2e1 JUMPDEST
0x2e2 CALLVALUE
0x2e3 ISZERO
0x2e4 PUSH2 0x2b6
0x2e7 JUMPI
---
0x29b: V181 = 0x0
0x29e: REVERT 0x0 0x0
0x29f: JUMPDEST 
0x2a0: V182 = 0x295
0x2a3: V183 = 0x4
0x2a7: V184 = CALLDATALOAD 0x4
0x2a8: V185 = 0xffffffffffffffffffffffffffffffffffffffff
0x2bd: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff V184
0x2bf: V187 = 0x20
0x2c1: V188 = ADD 0x20 0x4
0x2c7: V189 = 0x8cd
0x2ca: THROW 
0x2cb: JUMPDEST 
0x2cc: V190 = 0x40
0x2ce: V191 = M[0x40]
0x2d2: M[V191] = S0
0x2d3: V192 = 0x20
0x2d5: V193 = ADD 0x20 V191
0x2d9: V194 = 0x40
0x2db: V195 = M[0x40]
0x2de: V196 = SUB V193 V195
0x2e0: RETURN V195 V196
0x2e1: JUMPDEST 
0x2e2: V197 = CALLVALUE
0x2e3: V198 = ISZERO V197
0x2e4: V199 = 0x2b6
0x2e7: THROWI V198
---
Entry stack: []
Stack pops: 0
Stack additions: [V186, 0x295]
Exit stack: []

================================

Block 0x2e8
[0x2e8:0x318]
---
Predecessors: [0x29b]
Successors: [0x319]
---
0x2e8 PUSH1 0x0
0x2ea DUP1
0x2eb REVERT
0x2ec JUMPDEST
0x2ed PUSH2 0x2be
0x2f0 PUSH2 0x917
0x2f3 JUMP
0x2f4 JUMPDEST
0x2f5 PUSH1 0x40
0x2f7 MLOAD
0x2f8 DUP1
0x2f9 DUP1
0x2fa PUSH1 0x20
0x2fc ADD
0x2fd DUP3
0x2fe DUP2
0x2ff SUB
0x300 DUP3
0x301 MSTORE
0x302 DUP4
0x303 DUP2
0x304 DUP2
0x305 MLOAD
0x306 DUP2
0x307 MSTORE
0x308 PUSH1 0x20
0x30a ADD
0x30b SWAP2
0x30c POP
0x30d DUP1
0x30e MLOAD
0x30f SWAP1
0x310 PUSH1 0x20
0x312 ADD
0x313 SWAP1
0x314 DUP1
0x315 DUP4
0x316 DUP4
0x317 PUSH1 0x0
---
0x2e8: V200 = 0x0
0x2eb: REVERT 0x0 0x0
0x2ec: JUMPDEST 
0x2ed: V201 = 0x2be
0x2f0: V202 = 0x917
0x2f3: THROW 
0x2f4: JUMPDEST 
0x2f5: V203 = 0x40
0x2f7: V204 = M[0x40]
0x2fa: V205 = 0x20
0x2fc: V206 = ADD 0x20 V204
0x2ff: V207 = SUB V206 V204
0x301: M[V204] = V207
0x305: V208 = M[S0]
0x307: M[V206] = V208
0x308: V209 = 0x20
0x30a: V210 = ADD 0x20 V206
0x30e: V211 = M[S0]
0x310: V212 = 0x20
0x312: V213 = ADD 0x20 S0
0x317: V214 = 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: [0x2be, 0x0, V213, V210, V211, V211, V213, V210, V204, V204, S0]
Exit stack: []

================================

Block 0x319
[0x319:0x321]
---
Predecessors: [0x2e8]
Successors: [0x322]
---
0x319 JUMPDEST
0x31a DUP4
0x31b DUP2
0x31c LT
0x31d ISZERO
0x31e PUSH2 0x2ff
0x321 JUMPI
---
0x319: JUMPDEST 
0x31c: V215 = LT 0x0 V211
0x31d: V216 = ISZERO V215
0x31e: V217 = 0x2ff
0x321: THROWI V216
---
Entry stack: [S9, V204, V204, V210, V213, V211, V211, V210, V213, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V204, V204, V210, V213, V211, V211, V210, V213, 0x0]

================================

Block 0x322
[0x322:0x329]
---
Predecessors: [0x319]
Successors: [0x32a]
---
0x322 DUP1
0x323 DUP3
0x324 ADD
0x325 MLOAD
0x326 DUP2
0x327 DUP5
0x328 ADD
0x329 MSTORE
---
0x324: V218 = ADD V213 0x0
0x325: V219 = M[V218]
0x328: V220 = ADD V210 0x0
0x329: M[V220] = V219
---
Entry stack: [S9, V204, V204, V210, V213, V211, V211, V210, V213, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S9, V204, V204, V210, V213, V211, V211, V210, V213, 0x0]

================================

Block 0x32a
[0x32a:0x348]
---
Predecessors: [0x322]
Successors: [0x349]
---
0x32a JUMPDEST
0x32b PUSH1 0x20
0x32d DUP2
0x32e ADD
0x32f SWAP1
0x330 POP
0x331 PUSH2 0x2e3
0x334 JUMP
0x335 JUMPDEST
0x336 POP
0x337 POP
0x338 POP
0x339 POP
0x33a SWAP1
0x33b POP
0x33c SWAP1
0x33d DUP2
0x33e ADD
0x33f SWAP1
0x340 PUSH1 0x1f
0x342 AND
0x343 DUP1
0x344 ISZERO
0x345 PUSH2 0x32c
0x348 JUMPI
---
0x32a: JUMPDEST 
0x32b: V221 = 0x20
0x32e: V222 = ADD 0x0 0x20
0x331: V223 = 0x2e3
0x334: THROW 
0x335: JUMPDEST 
0x33e: V224 = ADD S4 S6
0x340: V225 = 0x1f
0x342: V226 = AND 0x1f S4
0x344: V227 = ISZERO V226
0x345: V228 = 0x32c
0x348: THROWI V227
---
Entry stack: [S9, V204, V204, V210, V213, V211, V211, V210, V213, 0x0]
Stack pops: 1
Stack additions: [V226, V224]
Exit stack: []

================================

Block 0x349
[0x349:0x361]
---
Predecessors: [0x32a]
Successors: [0x362]
---
0x349 DUP1
0x34a DUP3
0x34b SUB
0x34c DUP1
0x34d MLOAD
0x34e PUSH1 0x1
0x350 DUP4
0x351 PUSH1 0x20
0x353 SUB
0x354 PUSH2 0x100
0x357 EXP
0x358 SUB
0x359 NOT
0x35a AND
0x35b DUP2
0x35c MSTORE
0x35d PUSH1 0x20
0x35f ADD
0x360 SWAP2
0x361 POP
---
0x34b: V229 = SUB V224 V226
0x34d: V230 = M[V229]
0x34e: V231 = 0x1
0x351: V232 = 0x20
0x353: V233 = SUB 0x20 V226
0x354: V234 = 0x100
0x357: V235 = EXP 0x100 V233
0x358: V236 = SUB V235 0x1
0x359: V237 = NOT V236
0x35a: V238 = AND V237 V230
0x35c: M[V229] = V238
0x35d: V239 = 0x20
0x35f: V240 = ADD 0x20 V229
---
Entry stack: [V224, V226]
Stack pops: 2
Stack additions: [V240, S0]
Exit stack: [V240, V226]

================================

Block 0x362
[0x362:0x376]
---
Predecessors: [0x349]
Successors: [0x377]
---
0x362 JUMPDEST
0x363 POP
0x364 SWAP3
0x365 POP
0x366 POP
0x367 POP
0x368 PUSH1 0x40
0x36a MLOAD
0x36b DUP1
0x36c SWAP2
0x36d SUB
0x36e SWAP1
0x36f RETURN
0x370 JUMPDEST
0x371 CALLVALUE
0x372 ISZERO
0x373 PUSH2 0x345
0x376 JUMPI
---
0x362: JUMPDEST 
0x368: V241 = 0x40
0x36a: V242 = M[0x40]
0x36d: V243 = SUB V240 V242
0x36f: RETURN V242 V243
0x370: JUMPDEST 
0x371: V244 = CALLVALUE
0x372: V245 = ISZERO V244
0x373: V246 = 0x345
0x376: THROWI V245
---
Entry stack: [V240, V226]
Stack pops: 10
Stack additions: []
Exit stack: []

================================

Block 0x377
[0x377:0x3d0]
---
Predecessors: [0x362]
Successors: [0x3d1]
---
0x377 PUSH1 0x0
0x379 DUP1
0x37a REVERT
0x37b JUMPDEST
0x37c PUSH2 0x37a
0x37f PUSH1 0x4
0x381 DUP1
0x382 DUP1
0x383 CALLDATALOAD
0x384 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x399 AND
0x39a SWAP1
0x39b PUSH1 0x20
0x39d ADD
0x39e SWAP1
0x39f SWAP2
0x3a0 SWAP1
0x3a1 DUP1
0x3a2 CALLDATALOAD
0x3a3 SWAP1
0x3a4 PUSH1 0x20
0x3a6 ADD
0x3a7 SWAP1
0x3a8 SWAP2
0x3a9 SWAP1
0x3aa POP
0x3ab POP
0x3ac PUSH2 0x950
0x3af JUMP
0x3b0 JUMPDEST
0x3b1 PUSH1 0x40
0x3b3 MLOAD
0x3b4 DUP1
0x3b5 DUP3
0x3b6 ISZERO
0x3b7 ISZERO
0x3b8 ISZERO
0x3b9 ISZERO
0x3ba DUP2
0x3bb MSTORE
0x3bc PUSH1 0x20
0x3be ADD
0x3bf SWAP2
0x3c0 POP
0x3c1 POP
0x3c2 PUSH1 0x40
0x3c4 MLOAD
0x3c5 DUP1
0x3c6 SWAP2
0x3c7 SUB
0x3c8 SWAP1
0x3c9 RETURN
0x3ca JUMPDEST
0x3cb CALLVALUE
0x3cc ISZERO
0x3cd PUSH2 0x39f
0x3d0 JUMPI
---
0x377: V247 = 0x0
0x37a: REVERT 0x0 0x0
0x37b: JUMPDEST 
0x37c: V248 = 0x37a
0x37f: V249 = 0x4
0x383: V250 = CALLDATALOAD 0x4
0x384: V251 = 0xffffffffffffffffffffffffffffffffffffffff
0x399: V252 = AND 0xffffffffffffffffffffffffffffffffffffffff V250
0x39b: V253 = 0x20
0x39d: V254 = ADD 0x20 0x4
0x3a2: V255 = CALLDATALOAD 0x24
0x3a4: V256 = 0x20
0x3a6: V257 = ADD 0x20 0x24
0x3ac: V258 = 0x950
0x3af: THROW 
0x3b0: JUMPDEST 
0x3b1: V259 = 0x40
0x3b3: V260 = M[0x40]
0x3b6: V261 = ISZERO S0
0x3b7: V262 = ISZERO V261
0x3b8: V263 = ISZERO V262
0x3b9: V264 = ISZERO V263
0x3bb: M[V260] = V264
0x3bc: V265 = 0x20
0x3be: V266 = ADD 0x20 V260
0x3c2: V267 = 0x40
0x3c4: V268 = M[0x40]
0x3c7: V269 = SUB V266 V268
0x3c9: RETURN V268 V269
0x3ca: JUMPDEST 
0x3cb: V270 = CALLVALUE
0x3cc: V271 = ISZERO V270
0x3cd: V272 = 0x39f
0x3d0: THROWI V271
---
Entry stack: []
Stack pops: 0
Stack additions: [V255, V252, 0x37a]
Exit stack: []

================================

Block 0x3d1
[0x3d1:0x55b]
---
Predecessors: [0x377]
Successors: [0x55c]
---
0x3d1 PUSH1 0x0
0x3d3 DUP1
0x3d4 REVERT
0x3d5 JUMPDEST
0x3d6 PUSH2 0x3ea
0x3d9 PUSH1 0x4
0x3db DUP1
0x3dc DUP1
0x3dd CALLDATALOAD
0x3de PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f3 AND
0x3f4 SWAP1
0x3f5 PUSH1 0x20
0x3f7 ADD
0x3f8 SWAP1
0x3f9 SWAP2
0x3fa SWAP1
0x3fb DUP1
0x3fc CALLDATALOAD
0x3fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x412 AND
0x413 SWAP1
0x414 PUSH1 0x20
0x416 ADD
0x417 SWAP1
0x418 SWAP2
0x419 SWAP1
0x41a POP
0x41b POP
0x41c PUSH2 0xb4e
0x41f JUMP
0x420 JUMPDEST
0x421 PUSH1 0x40
0x423 MLOAD
0x424 DUP1
0x425 DUP3
0x426 DUP2
0x427 MSTORE
0x428 PUSH1 0x20
0x42a ADD
0x42b SWAP2
0x42c POP
0x42d POP
0x42e PUSH1 0x40
0x430 MLOAD
0x431 DUP1
0x432 SWAP2
0x433 SUB
0x434 SWAP1
0x435 RETURN
0x436 JUMPDEST
0x437 PUSH1 0x40
0x439 DUP1
0x43a MLOAD
0x43b SWAP1
0x43c DUP2
0x43d ADD
0x43e PUSH1 0x40
0x440 MSTORE
0x441 DUP1
0x442 PUSH1 0x5
0x444 DUP2
0x445 MSTORE
0x446 PUSH1 0x20
0x448 ADD
0x449 PUSH32 0x54504f4d5a000000000000000000000000000000000000000000000000000000
0x46a DUP2
0x46b MSTORE
0x46c POP
0x46d DUP2
0x46e JUMP
0x46f JUMPDEST
0x470 PUSH1 0x0
0x472 DUP2
0x473 PUSH1 0x2
0x475 PUSH1 0x0
0x477 CALLER
0x478 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x48d AND
0x48e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4a3 AND
0x4a4 DUP2
0x4a5 MSTORE
0x4a6 PUSH1 0x20
0x4a8 ADD
0x4a9 SWAP1
0x4aa DUP2
0x4ab MSTORE
0x4ac PUSH1 0x20
0x4ae ADD
0x4af PUSH1 0x0
0x4b1 SHA3
0x4b2 PUSH1 0x0
0x4b4 DUP6
0x4b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ca AND
0x4cb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4e0 AND
0x4e1 DUP2
0x4e2 MSTORE
0x4e3 PUSH1 0x20
0x4e5 ADD
0x4e6 SWAP1
0x4e7 DUP2
0x4e8 MSTORE
0x4e9 PUSH1 0x20
0x4eb ADD
0x4ec PUSH1 0x0
0x4ee SHA3
0x4ef DUP2
0x4f0 SWAP1
0x4f1 SSTORE
0x4f2 POP
0x4f3 DUP3
0x4f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x509 AND
0x50a CALLER
0x50b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x520 AND
0x521 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x542 DUP5
0x543 PUSH1 0x40
0x545 MLOAD
0x546 DUP1
0x547 DUP3
0x548 DUP2
0x549 MSTORE
0x54a PUSH1 0x20
0x54c ADD
0x54d SWAP2
0x54e POP
0x54f POP
0x550 PUSH1 0x40
0x552 MLOAD
0x553 DUP1
0x554 SWAP2
0x555 SUB
0x556 SWAP1
0x557 LOG3
0x558 PUSH1 0x1
0x55a SWAP1
0x55b POP
---
0x3d1: V273 = 0x0
0x3d4: REVERT 0x0 0x0
0x3d5: JUMPDEST 
0x3d6: V274 = 0x3ea
0x3d9: V275 = 0x4
0x3dd: V276 = CALLDATALOAD 0x4
0x3de: V277 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f3: V278 = AND 0xffffffffffffffffffffffffffffffffffffffff V276
0x3f5: V279 = 0x20
0x3f7: V280 = ADD 0x20 0x4
0x3fc: V281 = CALLDATALOAD 0x24
0x3fd: V282 = 0xffffffffffffffffffffffffffffffffffffffff
0x412: V283 = AND 0xffffffffffffffffffffffffffffffffffffffff V281
0x414: V284 = 0x20
0x416: V285 = ADD 0x20 0x24
0x41c: V286 = 0xb4e
0x41f: THROW 
0x420: JUMPDEST 
0x421: V287 = 0x40
0x423: V288 = M[0x40]
0x427: M[V288] = S0
0x428: V289 = 0x20
0x42a: V290 = ADD 0x20 V288
0x42e: V291 = 0x40
0x430: V292 = M[0x40]
0x433: V293 = SUB V290 V292
0x435: RETURN V292 V293
0x436: JUMPDEST 
0x437: V294 = 0x40
0x43a: V295 = M[0x40]
0x43d: V296 = ADD V295 0x40
0x43e: V297 = 0x40
0x440: M[0x40] = V296
0x442: V298 = 0x5
0x445: M[V295] = 0x5
0x446: V299 = 0x20
0x448: V300 = ADD 0x20 V295
0x449: V301 = 0x54504f4d5a000000000000000000000000000000000000000000000000000000
0x46b: M[V300] = 0x54504f4d5a000000000000000000000000000000000000000000000000000000
0x46e: JUMP S0
0x46f: JUMPDEST 
0x470: V302 = 0x0
0x473: V303 = 0x2
0x475: V304 = 0x0
0x477: V305 = CALLER
0x478: V306 = 0xffffffffffffffffffffffffffffffffffffffff
0x48d: V307 = AND 0xffffffffffffffffffffffffffffffffffffffff V305
0x48e: V308 = 0xffffffffffffffffffffffffffffffffffffffff
0x4a3: V309 = AND 0xffffffffffffffffffffffffffffffffffffffff V307
0x4a5: M[0x0] = V309
0x4a6: V310 = 0x20
0x4a8: V311 = ADD 0x20 0x0
0x4ab: M[0x20] = 0x2
0x4ac: V312 = 0x20
0x4ae: V313 = ADD 0x20 0x20
0x4af: V314 = 0x0
0x4b1: V315 = SHA3 0x0 0x40
0x4b2: V316 = 0x0
0x4b5: V317 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ca: V318 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x4cb: V319 = 0xffffffffffffffffffffffffffffffffffffffff
0x4e0: V320 = AND 0xffffffffffffffffffffffffffffffffffffffff V318
0x4e2: M[0x0] = V320
0x4e3: V321 = 0x20
0x4e5: V322 = ADD 0x20 0x0
0x4e8: M[0x20] = V315
0x4e9: V323 = 0x20
0x4eb: V324 = ADD 0x20 0x20
0x4ec: V325 = 0x0
0x4ee: V326 = SHA3 0x0 0x40
0x4f1: S[V326] = S0
0x4f4: V327 = 0xffffffffffffffffffffffffffffffffffffffff
0x509: V328 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x50a: V329 = CALLER
0x50b: V330 = 0xffffffffffffffffffffffffffffffffffffffff
0x520: V331 = AND 0xffffffffffffffffffffffffffffffffffffffff V329
0x521: V332 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x543: V333 = 0x40
0x545: V334 = M[0x40]
0x549: M[V334] = S0
0x54a: V335 = 0x20
0x54c: V336 = ADD 0x20 V334
0x550: V337 = 0x40
0x552: V338 = M[0x40]
0x555: V339 = SUB V336 V338
0x557: LOG V338 V339 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V331 V328
0x558: V340 = 0x1
---
Entry stack: []
Stack pops: 0
Stack additions: [V283, V278, 0x3ea, V295, S0, 0x1, S0, S1]
Exit stack: []

================================

Block 0x55c
[0x55c:0x5b3]
---
Predecessors: [0x3d1]
Successors: [0x5b4]
---
0x55c JUMPDEST
0x55d SWAP3
0x55e SWAP2
0x55f POP
0x560 POP
0x561 JUMP
0x562 JUMPDEST
0x563 PUSH1 0x3
0x565 SLOAD
0x566 DUP2
0x567 JUMP
0x568 JUMPDEST
0x569 PUSH1 0x0
0x56b DUP2
0x56c PUSH1 0x1
0x56e PUSH1 0x0
0x570 DUP7
0x571 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x586 AND
0x587 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x59c AND
0x59d DUP2
0x59e MSTORE
0x59f PUSH1 0x20
0x5a1 ADD
0x5a2 SWAP1
0x5a3 DUP2
0x5a4 MSTORE
0x5a5 PUSH1 0x20
0x5a7 ADD
0x5a8 PUSH1 0x0
0x5aa SHA3
0x5ab SLOAD
0x5ac LT
0x5ad ISZERO
0x5ae DUP1
0x5af ISZERO
0x5b0 PUSH2 0x5ff
0x5b3 JUMPI
---
0x55c: JUMPDEST 
0x561: JUMP S3
0x562: JUMPDEST 
0x563: V341 = 0x3
0x565: V342 = S[0x3]
0x567: JUMP S0
0x568: JUMPDEST 
0x569: V343 = 0x0
0x56c: V344 = 0x1
0x56e: V345 = 0x0
0x571: V346 = 0xffffffffffffffffffffffffffffffffffffffff
0x586: V347 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x587: V348 = 0xffffffffffffffffffffffffffffffffffffffff
0x59c: V349 = AND 0xffffffffffffffffffffffffffffffffffffffff V347
0x59e: M[0x0] = V349
0x59f: V350 = 0x20
0x5a1: V351 = ADD 0x20 0x0
0x5a4: M[0x20] = 0x1
0x5a5: V352 = 0x20
0x5a7: V353 = ADD 0x20 0x20
0x5a8: V354 = 0x0
0x5aa: V355 = SHA3 0x0 0x40
0x5ab: V356 = S[V355]
0x5ac: V357 = LT V356 S0
0x5ad: V358 = ISZERO V357
0x5af: V359 = ISZERO V358
0x5b0: V360 = 0x5ff
0x5b3: THROWI V359
---
Entry stack: [S2, S1, 0x1]
Stack pops: 12
Stack additions: [V358, 0x0, S0, S1, S2]
Exit stack: []

================================

Block 0x5b4
[0x5b4:0x634]
---
Predecessors: [0x55c]
Successors: [0x635]
---
0x5b4 POP
0x5b5 DUP2
0x5b6 PUSH1 0x2
0x5b8 PUSH1 0x0
0x5ba DUP7
0x5bb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d0 AND
0x5d1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5e6 AND
0x5e7 DUP2
0x5e8 MSTORE
0x5e9 PUSH1 0x20
0x5eb ADD
0x5ec SWAP1
0x5ed DUP2
0x5ee MSTORE
0x5ef PUSH1 0x20
0x5f1 ADD
0x5f2 PUSH1 0x0
0x5f4 SHA3
0x5f5 PUSH1 0x0
0x5f7 CALLER
0x5f8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x60d AND
0x60e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x623 AND
0x624 DUP2
0x625 MSTORE
0x626 PUSH1 0x20
0x628 ADD
0x629 SWAP1
0x62a DUP2
0x62b MSTORE
0x62c PUSH1 0x20
0x62e ADD
0x62f PUSH1 0x0
0x631 SHA3
0x632 SLOAD
0x633 LT
0x634 ISZERO
---
0x5b6: V361 = 0x2
0x5b8: V362 = 0x0
0x5bb: V363 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d0: V364 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x5d1: V365 = 0xffffffffffffffffffffffffffffffffffffffff
0x5e6: V366 = AND 0xffffffffffffffffffffffffffffffffffffffff V364
0x5e8: M[0x0] = V366
0x5e9: V367 = 0x20
0x5eb: V368 = ADD 0x20 0x0
0x5ee: M[0x20] = 0x2
0x5ef: V369 = 0x20
0x5f1: V370 = ADD 0x20 0x20
0x5f2: V371 = 0x0
0x5f4: V372 = SHA3 0x0 0x40
0x5f5: V373 = 0x0
0x5f7: V374 = CALLER
0x5f8: V375 = 0xffffffffffffffffffffffffffffffffffffffff
0x60d: V376 = AND 0xffffffffffffffffffffffffffffffffffffffff V374
0x60e: V377 = 0xffffffffffffffffffffffffffffffffffffffff
0x623: V378 = AND 0xffffffffffffffffffffffffffffffffffffffff V376
0x625: M[0x0] = V378
0x626: V379 = 0x20
0x628: V380 = ADD 0x20 0x0
0x62b: M[0x20] = V372
0x62c: V381 = 0x20
0x62e: V382 = ADD 0x20 0x20
0x62f: V383 = 0x0
0x631: V384 = SHA3 0x0 0x40
0x632: V385 = S[V384]
0x633: V386 = LT V385 S2
0x634: V387 = ISZERO V386
---
Entry stack: [S4, S3, S2, 0x0, V358]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V387]
Exit stack: [S4, S3, S2, 0x0, V387]

================================

Block 0x635
[0x635:0x63b]
---
Predecessors: [0x5b4]
Successors: [0x63c]
---
0x635 JUMPDEST
0x636 DUP1
0x637 ISZERO
0x638 PUSH2 0x60b
0x63b JUMPI
---
0x635: JUMPDEST 
0x637: V388 = ISZERO V387
0x638: V389 = 0x60b
0x63b: THROWI V388
---
Entry stack: [S4, S3, S2, 0x0, V387]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S4, S3, S2, 0x0, V387]

================================

Block 0x63c
[0x63c:0x640]
---
Predecessors: [0x635]
Successors: [0x641]
---
0x63c POP
0x63d PUSH1 0x0
0x63f DUP3
0x640 GT
---
0x63d: V390 = 0x0
0x640: V391 = GT S2 0x0
---
Entry stack: [S4, S3, S2, 0x0, V387]
Stack pops: 3
Stack additions: [S2, S1, V391]
Exit stack: [S4, S3, S2, 0x0, V391]

================================

Block 0x641
[0x641:0x646]
---
Predecessors: [0x63c]
Successors: [0x647]
---
0x641 JUMPDEST
0x642 ISZERO
0x643 PUSH2 0x8b7
0x646 JUMPI
---
0x641: JUMPDEST 
0x642: V392 = ISZERO V391
0x643: V393 = 0x8b7
0x646: THROWI V392
---
Entry stack: [S4, S3, S2, 0x0, V391]
Stack pops: 1
Stack additions: []
Exit stack: [S4, S3, S2, 0x0]

================================

Block 0x647
[0x647:0x8f6]
---
Predecessors: [0x641]
Successors: [0x8f7]
---
0x647 PUSH2 0x662
0x64a DUP3
0x64b PUSH1 0x1
0x64d PUSH1 0x0
0x64f DUP8
0x650 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x665 AND
0x666 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x67b AND
0x67c DUP2
0x67d MSTORE
0x67e PUSH1 0x20
0x680 ADD
0x681 SWAP1
0x682 DUP2
0x683 MSTORE
0x684 PUSH1 0x20
0x686 ADD
0x687 PUSH1 0x0
0x689 SHA3
0x68a SLOAD
0x68b PUSH2 0xbd6
0x68e SWAP1
0x68f SWAP2
0x690 SWAP1
0x691 PUSH4 0xffffffff
0x696 AND
0x697 JUMP
0x698 JUMPDEST
0x699 PUSH1 0x1
0x69b PUSH1 0x0
0x69d DUP7
0x69e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6b3 AND
0x6b4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6c9 AND
0x6ca DUP2
0x6cb MSTORE
0x6cc PUSH1 0x20
0x6ce ADD
0x6cf SWAP1
0x6d0 DUP2
0x6d1 MSTORE
0x6d2 PUSH1 0x20
0x6d4 ADD
0x6d5 PUSH1 0x0
0x6d7 SHA3
0x6d8 DUP2
0x6d9 SWAP1
0x6da SSTORE
0x6db POP
0x6dc PUSH2 0x734
0x6df DUP3
0x6e0 PUSH1 0x2
0x6e2 PUSH1 0x0
0x6e4 DUP8
0x6e5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6fa AND
0x6fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x710 AND
0x711 DUP2
0x712 MSTORE
0x713 PUSH1 0x20
0x715 ADD
0x716 SWAP1
0x717 DUP2
0x718 MSTORE
0x719 PUSH1 0x20
0x71b ADD
0x71c PUSH1 0x0
0x71e SHA3
0x71f PUSH1 0x0
0x721 CALLER
0x722 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x737 AND
0x738 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x74d AND
0x74e DUP2
0x74f MSTORE
0x750 PUSH1 0x20
0x752 ADD
0x753 SWAP1
0x754 DUP2
0x755 MSTORE
0x756 PUSH1 0x20
0x758 ADD
0x759 PUSH1 0x0
0x75b SHA3
0x75c SLOAD
0x75d PUSH2 0xbd6
0x760 SWAP1
0x761 SWAP2
0x762 SWAP1
0x763 PUSH4 0xffffffff
0x768 AND
0x769 JUMP
0x76a JUMPDEST
0x76b PUSH1 0x2
0x76d PUSH1 0x0
0x76f DUP7
0x770 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x785 AND
0x786 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x79b AND
0x79c DUP2
0x79d MSTORE
0x79e PUSH1 0x20
0x7a0 ADD
0x7a1 SWAP1
0x7a2 DUP2
0x7a3 MSTORE
0x7a4 PUSH1 0x20
0x7a6 ADD
0x7a7 PUSH1 0x0
0x7a9 SHA3
0x7aa PUSH1 0x0
0x7ac CALLER
0x7ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7c2 AND
0x7c3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7d8 AND
0x7d9 DUP2
0x7da MSTORE
0x7db PUSH1 0x20
0x7dd ADD
0x7de SWAP1
0x7df DUP2
0x7e0 MSTORE
0x7e1 PUSH1 0x20
0x7e3 ADD
0x7e4 PUSH1 0x0
0x7e6 SHA3
0x7e7 DUP2
0x7e8 SWAP1
0x7e9 SSTORE
0x7ea POP
0x7eb PUSH2 0x806
0x7ee DUP3
0x7ef PUSH1 0x1
0x7f1 PUSH1 0x0
0x7f3 DUP7
0x7f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x809 AND
0x80a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x81f AND
0x820 DUP2
0x821 MSTORE
0x822 PUSH1 0x20
0x824 ADD
0x825 SWAP1
0x826 DUP2
0x827 MSTORE
0x828 PUSH1 0x20
0x82a ADD
0x82b PUSH1 0x0
0x82d SHA3
0x82e SLOAD
0x82f PUSH2 0xbf0
0x832 SWAP1
0x833 SWAP2
0x834 SWAP1
0x835 PUSH4 0xffffffff
0x83a AND
0x83b JUMP
0x83c JUMPDEST
0x83d PUSH1 0x1
0x83f PUSH1 0x0
0x841 DUP6
0x842 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x857 AND
0x858 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x86d AND
0x86e DUP2
0x86f MSTORE
0x870 PUSH1 0x20
0x872 ADD
0x873 SWAP1
0x874 DUP2
0x875 MSTORE
0x876 PUSH1 0x20
0x878 ADD
0x879 PUSH1 0x0
0x87b SHA3
0x87c DUP2
0x87d SWAP1
0x87e SSTORE
0x87f POP
0x880 DUP3
0x881 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x896 AND
0x897 DUP5
0x898 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8ad AND
0x8ae PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x8cf DUP5
0x8d0 PUSH1 0x40
0x8d2 MLOAD
0x8d3 DUP1
0x8d4 DUP3
0x8d5 DUP2
0x8d6 MSTORE
0x8d7 PUSH1 0x20
0x8d9 ADD
0x8da SWAP2
0x8db POP
0x8dc POP
0x8dd PUSH1 0x40
0x8df MLOAD
0x8e0 DUP1
0x8e1 SWAP2
0x8e2 SUB
0x8e3 SWAP1
0x8e4 LOG3
0x8e5 PUSH1 0x1
0x8e7 SWAP1
0x8e8 POP
0x8e9 PUSH2 0x8c1
0x8ec JUMP
0x8ed JUMPDEST
0x8ee PUSH1 0x0
0x8f0 SWAP1
0x8f1 POP
0x8f2 PUSH2 0x8c1
0x8f5 JUMP
0x8f6 JUMPDEST
---
0x647: V394 = 0x662
0x64b: V395 = 0x1
0x64d: V396 = 0x0
0x650: V397 = 0xffffffffffffffffffffffffffffffffffffffff
0x665: V398 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x666: V399 = 0xffffffffffffffffffffffffffffffffffffffff
0x67b: V400 = AND 0xffffffffffffffffffffffffffffffffffffffff V398
0x67d: M[0x0] = V400
0x67e: V401 = 0x20
0x680: V402 = ADD 0x20 0x0
0x683: M[0x20] = 0x1
0x684: V403 = 0x20
0x686: V404 = ADD 0x20 0x20
0x687: V405 = 0x0
0x689: V406 = SHA3 0x0 0x40
0x68a: V407 = S[V406]
0x68b: V408 = 0xbd6
0x691: V409 = 0xffffffff
0x696: V410 = AND 0xffffffff 0xbd6
0x697: THROW 
0x698: JUMPDEST 
0x699: V411 = 0x1
0x69b: V412 = 0x0
0x69e: V413 = 0xffffffffffffffffffffffffffffffffffffffff
0x6b3: V414 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x6b4: V415 = 0xffffffffffffffffffffffffffffffffffffffff
0x6c9: V416 = AND 0xffffffffffffffffffffffffffffffffffffffff V414
0x6cb: M[0x0] = V416
0x6cc: V417 = 0x20
0x6ce: V418 = ADD 0x20 0x0
0x6d1: M[0x20] = 0x1
0x6d2: V419 = 0x20
0x6d4: V420 = ADD 0x20 0x20
0x6d5: V421 = 0x0
0x6d7: V422 = SHA3 0x0 0x40
0x6da: S[V422] = S0
0x6dc: V423 = 0x734
0x6e0: V424 = 0x2
0x6e2: V425 = 0x0
0x6e5: V426 = 0xffffffffffffffffffffffffffffffffffffffff
0x6fa: V427 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x6fb: V428 = 0xffffffffffffffffffffffffffffffffffffffff
0x710: V429 = AND 0xffffffffffffffffffffffffffffffffffffffff V427
0x712: M[0x0] = V429
0x713: V430 = 0x20
0x715: V431 = ADD 0x20 0x0
0x718: M[0x20] = 0x2
0x719: V432 = 0x20
0x71b: V433 = ADD 0x20 0x20
0x71c: V434 = 0x0
0x71e: V435 = SHA3 0x0 0x40
0x71f: V436 = 0x0
0x721: V437 = CALLER
0x722: V438 = 0xffffffffffffffffffffffffffffffffffffffff
0x737: V439 = AND 0xffffffffffffffffffffffffffffffffffffffff V437
0x738: V440 = 0xffffffffffffffffffffffffffffffffffffffff
0x74d: V441 = AND 0xffffffffffffffffffffffffffffffffffffffff V439
0x74f: M[0x0] = V441
0x750: V442 = 0x20
0x752: V443 = ADD 0x20 0x0
0x755: M[0x20] = V435
0x756: V444 = 0x20
0x758: V445 = ADD 0x20 0x20
0x759: V446 = 0x0
0x75b: V447 = SHA3 0x0 0x40
0x75c: V448 = S[V447]
0x75d: V449 = 0xbd6
0x763: V450 = 0xffffffff
0x768: V451 = AND 0xffffffff 0xbd6
0x769: THROW 
0x76a: JUMPDEST 
0x76b: V452 = 0x2
0x76d: V453 = 0x0
0x770: V454 = 0xffffffffffffffffffffffffffffffffffffffff
0x785: V455 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x786: V456 = 0xffffffffffffffffffffffffffffffffffffffff
0x79b: V457 = AND 0xffffffffffffffffffffffffffffffffffffffff V455
0x79d: M[0x0] = V457
0x79e: V458 = 0x20
0x7a0: V459 = ADD 0x20 0x0
0x7a3: M[0x20] = 0x2
0x7a4: V460 = 0x20
0x7a6: V461 = ADD 0x20 0x20
0x7a7: V462 = 0x0
0x7a9: V463 = SHA3 0x0 0x40
0x7aa: V464 = 0x0
0x7ac: V465 = CALLER
0x7ad: V466 = 0xffffffffffffffffffffffffffffffffffffffff
0x7c2: V467 = AND 0xffffffffffffffffffffffffffffffffffffffff V465
0x7c3: V468 = 0xffffffffffffffffffffffffffffffffffffffff
0x7d8: V469 = AND 0xffffffffffffffffffffffffffffffffffffffff V467
0x7da: M[0x0] = V469
0x7db: V470 = 0x20
0x7dd: V471 = ADD 0x20 0x0
0x7e0: M[0x20] = V463
0x7e1: V472 = 0x20
0x7e3: V473 = ADD 0x20 0x20
0x7e4: V474 = 0x0
0x7e6: V475 = SHA3 0x0 0x40
0x7e9: S[V475] = S0
0x7eb: V476 = 0x806
0x7ef: V477 = 0x1
0x7f1: V478 = 0x0
0x7f4: V479 = 0xffffffffffffffffffffffffffffffffffffffff
0x809: V480 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x80a: V481 = 0xffffffffffffffffffffffffffffffffffffffff
0x81f: V482 = AND 0xffffffffffffffffffffffffffffffffffffffff V480
0x821: M[0x0] = V482
0x822: V483 = 0x20
0x824: V484 = ADD 0x20 0x0
0x827: M[0x20] = 0x1
0x828: V485 = 0x20
0x82a: V486 = ADD 0x20 0x20
0x82b: V487 = 0x0
0x82d: V488 = SHA3 0x0 0x40
0x82e: V489 = S[V488]
0x82f: V490 = 0xbf0
0x835: V491 = 0xffffffff
0x83a: V492 = AND 0xffffffff 0xbf0
0x83b: THROW 
0x83c: JUMPDEST 
0x83d: V493 = 0x1
0x83f: V494 = 0x0
0x842: V495 = 0xffffffffffffffffffffffffffffffffffffffff
0x857: V496 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x858: V497 = 0xffffffffffffffffffffffffffffffffffffffff
0x86d: V498 = AND 0xffffffffffffffffffffffffffffffffffffffff V496
0x86f: M[0x0] = V498
0x870: V499 = 0x20
0x872: V500 = ADD 0x20 0x0
0x875: M[0x20] = 0x1
0x876: V501 = 0x20
0x878: V502 = ADD 0x20 0x20
0x879: V503 = 0x0
0x87b: V504 = SHA3 0x0 0x40
0x87e: S[V504] = S0
0x881: V505 = 0xffffffffffffffffffffffffffffffffffffffff
0x896: V506 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x898: V507 = 0xffffffffffffffffffffffffffffffffffffffff
0x8ad: V508 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x8ae: V509 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x8d0: V510 = 0x40
0x8d2: V511 = M[0x40]
0x8d6: M[V511] = S2
0x8d7: V512 = 0x20
0x8d9: V513 = ADD 0x20 V511
0x8dd: V514 = 0x40
0x8df: V515 = M[0x40]
0x8e2: V516 = SUB V513 V515
0x8e4: LOG V515 V516 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V508 V506
0x8e5: V517 = 0x1
0x8e9: V518 = 0x8c1
0x8ec: THROW 
0x8ed: JUMPDEST 
0x8ee: V519 = 0x0
0x8f2: V520 = 0x8c1
0x8f5: THROW 
0x8f6: JUMPDEST 
---
Entry stack: [S3, S2, S1, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S2, V448, 0x734]
Exit stack: []

================================

Block 0x8f7
[0x8f7:0x947]
---
Predecessors: [0x647]
Successors: [0x948]
---
0x8f7 JUMPDEST
0x8f8 SWAP4
0x8f9 SWAP3
0x8fa POP
0x8fb POP
0x8fc POP
0x8fd JUMP
0x8fe JUMPDEST
0x8ff PUSH1 0x8
0x901 DUP2
0x902 JUMP
0x903 JUMPDEST
0x904 PUSH1 0x0
0x906 PUSH1 0x1
0x908 PUSH1 0x0
0x90a DUP4
0x90b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x920 AND
0x921 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x936 AND
0x937 DUP2
0x938 MSTORE
0x939 PUSH1 0x20
0x93b ADD
0x93c SWAP1
0x93d DUP2
0x93e MSTORE
0x93f PUSH1 0x20
0x941 ADD
0x942 PUSH1 0x0
0x944 SHA3
0x945 SLOAD
0x946 SWAP1
0x947 POP
---
0x8f7: JUMPDEST 
0x8fd: JUMP S4
0x8fe: JUMPDEST 
0x8ff: V521 = 0x8
0x902: JUMP S0
0x903: JUMPDEST 
0x904: V522 = 0x0
0x906: V523 = 0x1
0x908: V524 = 0x0
0x90b: V525 = 0xffffffffffffffffffffffffffffffffffffffff
0x920: V526 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x921: V527 = 0xffffffffffffffffffffffffffffffffffffffff
0x936: V528 = AND 0xffffffffffffffffffffffffffffffffffffffff V526
0x938: M[0x0] = V528
0x939: V529 = 0x20
0x93b: V530 = ADD 0x20 0x0
0x93e: M[0x20] = 0x1
0x93f: V531 = 0x20
0x941: V532 = ADD 0x20 0x20
0x942: V533 = 0x0
0x944: V534 = SHA3 0x0 0x40
0x945: V535 = S[V534]
---
Entry stack: []
Stack pops: 16
Stack additions: [V535, S0]
Exit stack: []

================================

Block 0x948
[0x948:0x9d1]
---
Predecessors: [0x8f7]
Successors: [0x9d2]
---
0x948 JUMPDEST
0x949 SWAP2
0x94a SWAP1
0x94b POP
0x94c JUMP
0x94d JUMPDEST
0x94e PUSH1 0x40
0x950 DUP1
0x951 MLOAD
0x952 SWAP1
0x953 DUP2
0x954 ADD
0x955 PUSH1 0x40
0x957 MSTORE
0x958 DUP1
0x959 PUSH1 0x5
0x95b DUP2
0x95c MSTORE
0x95d PUSH1 0x20
0x95f ADD
0x960 PUSH32 0x54504f4d5a000000000000000000000000000000000000000000000000000000
0x981 DUP2
0x982 MSTORE
0x983 POP
0x984 DUP2
0x985 JUMP
0x986 JUMPDEST
0x987 PUSH1 0x0
0x989 DUP2
0x98a PUSH1 0x1
0x98c PUSH1 0x0
0x98e CALLER
0x98f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9a4 AND
0x9a5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9ba AND
0x9bb DUP2
0x9bc MSTORE
0x9bd PUSH1 0x20
0x9bf ADD
0x9c0 SWAP1
0x9c1 DUP2
0x9c2 MSTORE
0x9c3 PUSH1 0x20
0x9c5 ADD
0x9c6 PUSH1 0x0
0x9c8 SHA3
0x9c9 SLOAD
0x9ca LT
0x9cb ISZERO
0x9cc DUP1
0x9cd ISZERO
0x9ce PUSH2 0x9a1
0x9d1 JUMPI
---
0x948: JUMPDEST 
0x94c: JUMP S2
0x94d: JUMPDEST 
0x94e: V536 = 0x40
0x951: V537 = M[0x40]
0x954: V538 = ADD V537 0x40
0x955: V539 = 0x40
0x957: M[0x40] = V538
0x959: V540 = 0x5
0x95c: M[V537] = 0x5
0x95d: V541 = 0x20
0x95f: V542 = ADD 0x20 V537
0x960: V543 = 0x54504f4d5a000000000000000000000000000000000000000000000000000000
0x982: M[V542] = 0x54504f4d5a000000000000000000000000000000000000000000000000000000
0x985: JUMP S0
0x986: JUMPDEST 
0x987: V544 = 0x0
0x98a: V545 = 0x1
0x98c: V546 = 0x0
0x98e: V547 = CALLER
0x98f: V548 = 0xffffffffffffffffffffffffffffffffffffffff
0x9a4: V549 = AND 0xffffffffffffffffffffffffffffffffffffffff V547
0x9a5: V550 = 0xffffffffffffffffffffffffffffffffffffffff
0x9ba: V551 = AND 0xffffffffffffffffffffffffffffffffffffffff V549
0x9bc: M[0x0] = V551
0x9bd: V552 = 0x20
0x9bf: V553 = ADD 0x20 0x0
0x9c2: M[0x20] = 0x1
0x9c3: V554 = 0x20
0x9c5: V555 = ADD 0x20 0x20
0x9c6: V556 = 0x0
0x9c8: V557 = SHA3 0x0 0x40
0x9c9: V558 = S[V557]
0x9ca: V559 = LT V558 S0
0x9cb: V560 = ISZERO V559
0x9cd: V561 = ISZERO V560
0x9ce: V562 = 0x9a1
0x9d1: THROWI V561
---
Entry stack: [S1, V535]
Stack pops: 8
Stack additions: [V560, 0x0, S0]
Exit stack: []

================================

Block 0x9d2
[0x9d2:0x9d6]
---
Predecessors: [0x948]
Successors: [0x9d7]
---
0x9d2 POP
0x9d3 PUSH1 0x0
0x9d5 DUP3
0x9d6 GT
---
0x9d3: V563 = 0x0
0x9d6: V564 = GT S2 0x0
---
Entry stack: [S2, 0x0, V560]
Stack pops: 3
Stack additions: [S2, S1, V564]
Exit stack: [S2, 0x0, V564]

================================

Block 0x9d7
[0x9d7:0x9dc]
---
Predecessors: [0x9d2]
Successors: [0x9dd]
---
0x9d7 JUMPDEST
0x9d8 ISZERO
0x9d9 PUSH2 0xb3e
0x9dc JUMPI
---
0x9d7: JUMPDEST 
0x9d8: V565 = ISZERO V564
0x9d9: V566 = 0xb3e
0x9dc: THROWI V565
---
Entry stack: [S2, 0x0, V564]
Stack pops: 1
Stack additions: []
Exit stack: [S2, 0x0]

================================

Block 0x9dd
[0x9dd:0xb7d]
---
Predecessors: [0x9d7]
Successors: [0xb7e]
---
0x9dd PUSH2 0x9f8
0x9e0 DUP3
0x9e1 PUSH1 0x1
0x9e3 PUSH1 0x0
0x9e5 CALLER
0x9e6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9fb AND
0x9fc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa11 AND
0xa12 DUP2
0xa13 MSTORE
0xa14 PUSH1 0x20
0xa16 ADD
0xa17 SWAP1
0xa18 DUP2
0xa19 MSTORE
0xa1a PUSH1 0x20
0xa1c ADD
0xa1d PUSH1 0x0
0xa1f SHA3
0xa20 SLOAD
0xa21 PUSH2 0xbd6
0xa24 SWAP1
0xa25 SWAP2
0xa26 SWAP1
0xa27 PUSH4 0xffffffff
0xa2c AND
0xa2d JUMP
0xa2e JUMPDEST
0xa2f PUSH1 0x1
0xa31 PUSH1 0x0
0xa33 CALLER
0xa34 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa49 AND
0xa4a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa5f AND
0xa60 DUP2
0xa61 MSTORE
0xa62 PUSH1 0x20
0xa64 ADD
0xa65 SWAP1
0xa66 DUP2
0xa67 MSTORE
0xa68 PUSH1 0x20
0xa6a ADD
0xa6b PUSH1 0x0
0xa6d SHA3
0xa6e DUP2
0xa6f SWAP1
0xa70 SSTORE
0xa71 POP
0xa72 PUSH2 0xa8d
0xa75 DUP3
0xa76 PUSH1 0x1
0xa78 PUSH1 0x0
0xa7a DUP7
0xa7b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa90 AND
0xa91 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaa6 AND
0xaa7 DUP2
0xaa8 MSTORE
0xaa9 PUSH1 0x20
0xaab ADD
0xaac SWAP1
0xaad DUP2
0xaae MSTORE
0xaaf PUSH1 0x20
0xab1 ADD
0xab2 PUSH1 0x0
0xab4 SHA3
0xab5 SLOAD
0xab6 PUSH2 0xbf0
0xab9 SWAP1
0xaba SWAP2
0xabb SWAP1
0xabc PUSH4 0xffffffff
0xac1 AND
0xac2 JUMP
0xac3 JUMPDEST
0xac4 PUSH1 0x1
0xac6 PUSH1 0x0
0xac8 DUP6
0xac9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xade AND
0xadf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaf4 AND
0xaf5 DUP2
0xaf6 MSTORE
0xaf7 PUSH1 0x20
0xaf9 ADD
0xafa SWAP1
0xafb DUP2
0xafc MSTORE
0xafd PUSH1 0x20
0xaff ADD
0xb00 PUSH1 0x0
0xb02 SHA3
0xb03 DUP2
0xb04 SWAP1
0xb05 SSTORE
0xb06 POP
0xb07 DUP3
0xb08 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb1d AND
0xb1e CALLER
0xb1f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb34 AND
0xb35 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xb56 DUP5
0xb57 PUSH1 0x40
0xb59 MLOAD
0xb5a DUP1
0xb5b DUP3
0xb5c DUP2
0xb5d MSTORE
0xb5e PUSH1 0x20
0xb60 ADD
0xb61 SWAP2
0xb62 POP
0xb63 POP
0xb64 PUSH1 0x40
0xb66 MLOAD
0xb67 DUP1
0xb68 SWAP2
0xb69 SUB
0xb6a SWAP1
0xb6b LOG3
0xb6c PUSH1 0x1
0xb6e SWAP1
0xb6f POP
0xb70 PUSH2 0xb48
0xb73 JUMP
0xb74 JUMPDEST
0xb75 PUSH1 0x0
0xb77 SWAP1
0xb78 POP
0xb79 PUSH2 0xb48
0xb7c JUMP
0xb7d JUMPDEST
---
0x9dd: V567 = 0x9f8
0x9e1: V568 = 0x1
0x9e3: V569 = 0x0
0x9e5: V570 = CALLER
0x9e6: V571 = 0xffffffffffffffffffffffffffffffffffffffff
0x9fb: V572 = AND 0xffffffffffffffffffffffffffffffffffffffff V570
0x9fc: V573 = 0xffffffffffffffffffffffffffffffffffffffff
0xa11: V574 = AND 0xffffffffffffffffffffffffffffffffffffffff V572
0xa13: M[0x0] = V574
0xa14: V575 = 0x20
0xa16: V576 = ADD 0x20 0x0
0xa19: M[0x20] = 0x1
0xa1a: V577 = 0x20
0xa1c: V578 = ADD 0x20 0x20
0xa1d: V579 = 0x0
0xa1f: V580 = SHA3 0x0 0x40
0xa20: V581 = S[V580]
0xa21: V582 = 0xbd6
0xa27: V583 = 0xffffffff
0xa2c: V584 = AND 0xffffffff 0xbd6
0xa2d: THROW 
0xa2e: JUMPDEST 
0xa2f: V585 = 0x1
0xa31: V586 = 0x0
0xa33: V587 = CALLER
0xa34: V588 = 0xffffffffffffffffffffffffffffffffffffffff
0xa49: V589 = AND 0xffffffffffffffffffffffffffffffffffffffff V587
0xa4a: V590 = 0xffffffffffffffffffffffffffffffffffffffff
0xa5f: V591 = AND 0xffffffffffffffffffffffffffffffffffffffff V589
0xa61: M[0x0] = V591
0xa62: V592 = 0x20
0xa64: V593 = ADD 0x20 0x0
0xa67: M[0x20] = 0x1
0xa68: V594 = 0x20
0xa6a: V595 = ADD 0x20 0x20
0xa6b: V596 = 0x0
0xa6d: V597 = SHA3 0x0 0x40
0xa70: S[V597] = S0
0xa72: V598 = 0xa8d
0xa76: V599 = 0x1
0xa78: V600 = 0x0
0xa7b: V601 = 0xffffffffffffffffffffffffffffffffffffffff
0xa90: V602 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xa91: V603 = 0xffffffffffffffffffffffffffffffffffffffff
0xaa6: V604 = AND 0xffffffffffffffffffffffffffffffffffffffff V602
0xaa8: M[0x0] = V604
0xaa9: V605 = 0x20
0xaab: V606 = ADD 0x20 0x0
0xaae: M[0x20] = 0x1
0xaaf: V607 = 0x20
0xab1: V608 = ADD 0x20 0x20
0xab2: V609 = 0x0
0xab4: V610 = SHA3 0x0 0x40
0xab5: V611 = S[V610]
0xab6: V612 = 0xbf0
0xabc: V613 = 0xffffffff
0xac1: V614 = AND 0xffffffff 0xbf0
0xac2: THROW 
0xac3: JUMPDEST 
0xac4: V615 = 0x1
0xac6: V616 = 0x0
0xac9: V617 = 0xffffffffffffffffffffffffffffffffffffffff
0xade: V618 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xadf: V619 = 0xffffffffffffffffffffffffffffffffffffffff
0xaf4: V620 = AND 0xffffffffffffffffffffffffffffffffffffffff V618
0xaf6: M[0x0] = V620
0xaf7: V621 = 0x20
0xaf9: V622 = ADD 0x20 0x0
0xafc: M[0x20] = 0x1
0xafd: V623 = 0x20
0xaff: V624 = ADD 0x20 0x20
0xb00: V625 = 0x0
0xb02: V626 = SHA3 0x0 0x40
0xb05: S[V626] = S0
0xb08: V627 = 0xffffffffffffffffffffffffffffffffffffffff
0xb1d: V628 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xb1e: V629 = CALLER
0xb1f: V630 = 0xffffffffffffffffffffffffffffffffffffffff
0xb34: V631 = AND 0xffffffffffffffffffffffffffffffffffffffff V629
0xb35: V632 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xb57: V633 = 0x40
0xb59: V634 = M[0x40]
0xb5d: M[V634] = S2
0xb5e: V635 = 0x20
0xb60: V636 = ADD 0x20 V634
0xb64: V637 = 0x40
0xb66: V638 = M[0x40]
0xb69: V639 = SUB V636 V638
0xb6b: LOG V638 V639 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V631 V628
0xb6c: V640 = 0x1
0xb70: V641 = 0xb48
0xb73: THROW 
0xb74: JUMPDEST 
0xb75: V642 = 0x0
0xb79: V643 = 0xb48
0xb7c: THROW 
0xb7d: JUMPDEST 
---
Entry stack: [S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0x9f8, S2, V611, 0xa8d, S1]
Exit stack: []

================================

Block 0xb7e
[0xb7e:0xc05]
---
Predecessors: [0x9dd]
Successors: [0xc06]
---
0xb7e JUMPDEST
0xb7f SWAP3
0xb80 SWAP2
0xb81 POP
0xb82 POP
0xb83 JUMP
0xb84 JUMPDEST
0xb85 PUSH1 0x0
0xb87 PUSH1 0x2
0xb89 PUSH1 0x0
0xb8b DUP5
0xb8c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xba1 AND
0xba2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbb7 AND
0xbb8 DUP2
0xbb9 MSTORE
0xbba PUSH1 0x20
0xbbc ADD
0xbbd SWAP1
0xbbe DUP2
0xbbf MSTORE
0xbc0 PUSH1 0x20
0xbc2 ADD
0xbc3 PUSH1 0x0
0xbc5 SHA3
0xbc6 PUSH1 0x0
0xbc8 DUP4
0xbc9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbde AND
0xbdf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbf4 AND
0xbf5 DUP2
0xbf6 MSTORE
0xbf7 PUSH1 0x20
0xbf9 ADD
0xbfa SWAP1
0xbfb DUP2
0xbfc MSTORE
0xbfd PUSH1 0x20
0xbff ADD
0xc00 PUSH1 0x0
0xc02 SHA3
0xc03 SLOAD
0xc04 SWAP1
0xc05 POP
---
0xb7e: JUMPDEST 
0xb83: JUMP S3
0xb84: JUMPDEST 
0xb85: V644 = 0x0
0xb87: V645 = 0x2
0xb89: V646 = 0x0
0xb8c: V647 = 0xffffffffffffffffffffffffffffffffffffffff
0xba1: V648 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xba2: V649 = 0xffffffffffffffffffffffffffffffffffffffff
0xbb7: V650 = AND 0xffffffffffffffffffffffffffffffffffffffff V648
0xbb9: M[0x0] = V650
0xbba: V651 = 0x20
0xbbc: V652 = ADD 0x20 0x0
0xbbf: M[0x20] = 0x2
0xbc0: V653 = 0x20
0xbc2: V654 = ADD 0x20 0x20
0xbc3: V655 = 0x0
0xbc5: V656 = SHA3 0x0 0x40
0xbc6: V657 = 0x0
0xbc9: V658 = 0xffffffffffffffffffffffffffffffffffffffff
0xbde: V659 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xbdf: V660 = 0xffffffffffffffffffffffffffffffffffffffff
0xbf4: V661 = AND 0xffffffffffffffffffffffffffffffffffffffff V659
0xbf6: M[0x0] = V661
0xbf7: V662 = 0x20
0xbf9: V663 = ADD 0x20 0x0
0xbfc: M[0x20] = V656
0xbfd: V664 = 0x20
0xbff: V665 = ADD 0x20 0x20
0xc00: V666 = 0x0
0xc02: V667 = SHA3 0x0 0x40
0xc03: V668 = S[V667]
---
Entry stack: []
Stack pops: 7
Stack additions: [V668, S0, S1]
Exit stack: []

================================

Block 0xc06
[0xc06:0xc18]
---
Predecessors: [0xb7e]
Successors: [0xc19]
---
0xc06 JUMPDEST
0xc07 SWAP3
0xc08 SWAP2
0xc09 POP
0xc0a POP
0xc0b JUMP
0xc0c JUMPDEST
0xc0d PUSH1 0x0
0xc0f DUP3
0xc10 DUP3
0xc11 GT
0xc12 ISZERO
0xc13 ISZERO
0xc14 ISZERO
0xc15 PUSH2 0xbe4
0xc18 JUMPI
---
0xc06: JUMPDEST 
0xc0b: JUMP S3
0xc0c: JUMPDEST 
0xc0d: V669 = 0x0
0xc11: V670 = GT S0 S1
0xc12: V671 = ISZERO V670
0xc13: V672 = ISZERO V671
0xc14: V673 = ISZERO V672
0xc15: V674 = 0xbe4
0xc18: THROWI V673
---
Entry stack: [S2, S1, V668]
Stack pops: 7
Stack additions: [0x0, S0, S1]
Exit stack: []

================================

Block 0xc19
[0xc19:0xc1f]
---
Predecessors: [0xc06]
Successors: [0xc20]
---
0xc19 INVALID
0xc1a JUMPDEST
0xc1b DUP2
0xc1c DUP4
0xc1d SUB
0xc1e SWAP1
0xc1f POP
---
0xc19: INVALID 
0xc1a: JUMPDEST 
0xc1d: V675 = SUB S2 S1
---
Entry stack: [S2, S1, 0x0]
Stack pops: 0
Stack additions: [V675, S1, S2]
Exit stack: []

================================

Block 0xc20
[0xc20:0xc38]
---
Predecessors: [0xc19]
Successors: [0xc39]
---
0xc20 JUMPDEST
0xc21 SWAP3
0xc22 SWAP2
0xc23 POP
0xc24 POP
0xc25 JUMP
0xc26 JUMPDEST
0xc27 PUSH1 0x0
0xc29 DUP1
0xc2a DUP3
0xc2b DUP5
0xc2c ADD
0xc2d SWAP1
0xc2e POP
0xc2f DUP4
0xc30 DUP2
0xc31 LT
0xc32 ISZERO
0xc33 ISZERO
0xc34 ISZERO
0xc35 PUSH2 0xc04
0xc38 JUMPI
---
0xc20: JUMPDEST 
0xc25: JUMP S3
0xc26: JUMPDEST 
0xc27: V676 = 0x0
0xc2c: V677 = ADD S1 S0
0xc31: V678 = LT V677 S1
0xc32: V679 = ISZERO V678
0xc33: V680 = ISZERO V679
0xc34: V681 = ISZERO V680
0xc35: V682 = 0xc04
0xc38: THROWI V681
---
Entry stack: [S2, S1, V675]
Stack pops: 7
Stack additions: [V677, 0x0, S0, S1]
Exit stack: []

================================

Block 0xc39
[0xc39:0xc3d]
---
Predecessors: [0xc20]
Successors: [0xc3e]
---
0xc39 INVALID
0xc3a JUMPDEST
0xc3b DUP1
0xc3c SWAP2
0xc3d POP
---
0xc39: INVALID 
0xc3a: JUMPDEST 
---
Entry stack: [S3, S2, 0x0, V677]
Stack pops: 0
Stack additions: [S0, S0]
Exit stack: []

================================

Block 0xc3e
[0xc3e:0xc76]
---
Predecessors: [0xc39]
Successors: []
---
0xc3e JUMPDEST
0xc3f POP
0xc40 SWAP3
0xc41 SWAP2
0xc42 POP
0xc43 POP
0xc44 JUMP
0xc45 STOP
0xc46 LOG1
0xc47 PUSH6 0x627a7a723058
0xc4e SHA3
0xc4f CODESIZE
0xc50 INVALID
0xc51 MSTORE8
0xc52 DUP13
0xc53 MISSING 0xbf
0xc54 SDIV
0xc55 EXP
0xc56 CALLCODE
0xc57 MISSING 0x2a
0xc58 MISSING 0x4c
0xc59 MISSING 0xcc
0xc5a CALL
0xc5b MISSING 0xd3
0xc5c MISSING 0xa6
0xc5d TIMESTAMP
0xc5e REVERT
0xc5f MISSING 0xb6
0xc60 MULMOD
0xc61 PUSH21 0xb591f652f73f46fc16932464220029
---
0xc3e: JUMPDEST 
0xc44: JUMP S4
0xc45: STOP 
0xc46: LOG S0 S1 S2
0xc47: V683 = 0x627a7a723058
0xc4e: V684 = SHA3 0x627a7a723058 S3
0xc4f: V685 = CODESIZE
0xc50: INVALID 
0xc51: M8[S0] = S1
0xc53: MISSING 0xbf
0xc54: V686 = SDIV S0 S1
0xc55: V687 = EXP V686 S2
0xc56: V688 = CALLCODE V687 S3 S4 S5 S6 S7 S8
0xc57: MISSING 0x2a
0xc58: MISSING 0x4c
0xc59: MISSING 0xcc
0xc5a: V689 = CALL S0 S1 S2 S3 S4 S5 S6
0xc5b: MISSING 0xd3
0xc5c: MISSING 0xa6
0xc5d: V690 = TIMESTAMP
0xc5e: REVERT V690 S0
0xc5f: MISSING 0xb6
0xc60: V691 = MULMOD S0 S1 S2
0xc61: V692 = 0xb591f652f73f46fc16932464220029
---
Entry stack: [S1, S0]
Stack pops: 6840
Stack additions: [0xb591f652f73f46fc16932464220029, V691]
Exit stack: []

================================

Function 0:
Public fallback function
Entry block: 0xcd
Exit block: 0xc3e
Body: 0xcd, 0xd4, 0xd9, 0xe7, 0x118, 0x121, 0x129, 0x148, 0x161, 0x176, 0x1d0, 0x1f9, 0x272, 0x29b, 0x2e8, 0x319, 0x322, 0x32a, 0x349, 0x362, 0x377, 0x3d1, 0x55c, 0x5b4, 0x635, 0x63c, 0x641, 0x647, 0x8f7, 0x948, 0x9d2, 0x9d7, 0x9dd, 0xb7e, 0xc06, 0xc19, 0xc20, 0xc39, 0xc3e

