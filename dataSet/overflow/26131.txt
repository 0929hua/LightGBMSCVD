Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x59]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x57ea89b6
0x3c EQ
0x3d PUSH2 0x59
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x57ea89b6
0x3c: V13 = EQ 0x57ea89b6 V11
0x3d: V14 = 0x59
0x40: JUMPI 0x59 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x6e]
---
0x41 DUP1
0x42 PUSH4 0x75f96ead
0x47 EQ
0x48 PUSH2 0x6e
0x4b JUMPI
---
0x42: V15 = 0x75f96ead
0x47: V16 = EQ 0x75f96ead V11
0x48: V17 = 0x6e
0x4b: JUMPI 0x6e V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x86]
---
0x4c DUP1
0x4d PUSH4 0xc2610cda
0x52 EQ
0x53 PUSH2 0x86
0x56 JUMPI
---
0x4d: V18 = 0xc2610cda
0x52: V19 = EQ 0xc2610cda V11
0x53: V20 = 0x86
0x56: JUMPI 0x86 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x58]
---
Predecessors: [0x0, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 STOP
---
0x57: JUMPDEST 
0x58: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x59
[0x59:0x5f]
---
Predecessors: [0xd]
Successors: [0x60, 0x64]
---
0x59 JUMPDEST
0x5a CALLVALUE
0x5b ISZERO
0x5c PUSH2 0x64
0x5f JUMPI
---
0x59: JUMPDEST 
0x5a: V21 = CALLVALUE
0x5b: V22 = ISZERO V21
0x5c: V23 = 0x64
0x5f: JUMPI 0x64 V22
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x60
[0x60:0x63]
---
Predecessors: [0x59]
Successors: []
---
0x60 PUSH1 0x0
0x62 DUP1
0x63 REVERT
---
0x60: V24 = 0x0
0x63: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x64
[0x64:0x6b]
---
Predecessors: [0x59]
Successors: [0xaf]
---
0x64 JUMPDEST
0x65 PUSH2 0x6c
0x68 PUSH2 0xaf
0x6b JUMP
---
0x64: JUMPDEST 
0x65: V25 = 0x6c
0x68: V26 = 0xaf
0x6b: JUMP 0xaf
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6c]
Exit stack: [V11, 0x6c]

================================

Block 0x6c
[0x6c:0x6d]
---
Predecessors: [0x182]
Successors: []
---
0x6c JUMPDEST
0x6d STOP
---
0x6c: JUMPDEST 
0x6d: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6e
[0x6e:0x83]
---
Predecessors: [0x41]
Successors: [0x184]
---
0x6e JUMPDEST
0x6f PUSH2 0x84
0x72 PUSH1 0x4
0x74 DUP1
0x75 DUP1
0x76 CALLDATALOAD
0x77 SWAP1
0x78 PUSH1 0x20
0x7a ADD
0x7b SWAP1
0x7c SWAP2
0x7d SWAP1
0x7e POP
0x7f POP
0x80 PUSH2 0x184
0x83 JUMP
---
0x6e: JUMPDEST 
0x6f: V27 = 0x84
0x72: V28 = 0x4
0x76: V29 = CALLDATALOAD 0x4
0x78: V30 = 0x20
0x7a: V31 = ADD 0x20 0x4
0x80: V32 = 0x184
0x83: JUMP 0x184
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x84, V29]
Exit stack: [V11, 0x84, V29]

================================

Block 0x84
[0x84:0x85]
---
Predecessors: [0x22d]
Successors: []
---
0x84 JUMPDEST
0x85 STOP
---
0x84: JUMPDEST 
0x85: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x86
[0x86:0x8c]
---
Predecessors: [0x4c]
Successors: [0x8d, 0x91]
---
0x86 JUMPDEST
0x87 CALLVALUE
0x88 ISZERO
0x89 PUSH2 0x91
0x8c JUMPI
---
0x86: JUMPDEST 
0x87: V33 = CALLVALUE
0x88: V34 = ISZERO V33
0x89: V35 = 0x91
0x8c: JUMPI 0x91 V34
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x90]
---
Predecessors: [0x86]
Successors: []
---
0x8d PUSH1 0x0
0x8f DUP1
0x90 REVERT
---
0x8d: V36 = 0x0
0x90: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x91
[0x91:0x98]
---
Predecessors: [0x86]
Successors: [0x230]
---
0x91 JUMPDEST
0x92 PUSH2 0x99
0x95 PUSH2 0x230
0x98 JUMP
---
0x91: JUMPDEST 
0x92: V37 = 0x99
0x95: V38 = 0x230
0x98: JUMP 0x230
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x99]
Exit stack: [V11, 0x99]

================================

Block 0x99
[0x99:0xae]
---
Predecessors: [0x230]
Successors: []
---
0x99 JUMPDEST
0x9a PUSH1 0x40
0x9c MLOAD
0x9d DUP1
0x9e DUP3
0x9f DUP2
0xa0 MSTORE
0xa1 PUSH1 0x20
0xa3 ADD
0xa4 SWAP2
0xa5 POP
0xa6 POP
0xa7 PUSH1 0x40
0xa9 MLOAD
0xaa DUP1
0xab SWAP2
0xac SUB
0xad SWAP1
0xae RETURN
---
0x99: JUMPDEST 
0x9a: V39 = 0x40
0x9c: V40 = M[0x40]
0xa0: M[V40] = V141
0xa1: V41 = 0x20
0xa3: V42 = ADD 0x20 V40
0xa7: V43 = 0x40
0xa9: V44 = M[0x40]
0xac: V45 = SUB V42 V44
0xae: RETURN V44 V45
---
Entry stack: [V11, 0x99, V141]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x99]

================================

Block 0xaf
[0xaf:0x105]
---
Predecessors: [0x64]
Successors: [0x106, 0x10a]
---
0xaf JUMPDEST
0xb0 PUSH1 0x0
0xb2 DUP1
0xb3 SWAP1
0xb4 SLOAD
0xb5 SWAP1
0xb6 PUSH2 0x100
0xb9 EXP
0xba SWAP1
0xbb DIV
0xbc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd1 AND
0xd2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe7 AND
0xe8 CALLER
0xe9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfe AND
0xff EQ
0x100 ISZERO
0x101 ISZERO
0x102 PUSH2 0x10a
0x105 JUMPI
---
0xaf: JUMPDEST 
0xb0: V46 = 0x0
0xb4: V47 = S[0x0]
0xb6: V48 = 0x100
0xb9: V49 = EXP 0x100 0x0
0xbb: V50 = DIV V47 0x1
0xbc: V51 = 0xffffffffffffffffffffffffffffffffffffffff
0xd1: V52 = AND 0xffffffffffffffffffffffffffffffffffffffff V50
0xd2: V53 = 0xffffffffffffffffffffffffffffffffffffffff
0xe7: V54 = AND 0xffffffffffffffffffffffffffffffffffffffff V52
0xe8: V55 = CALLER
0xe9: V56 = 0xffffffffffffffffffffffffffffffffffffffff
0xfe: V57 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0xff: V58 = EQ V57 V54
0x100: V59 = ISZERO V58
0x101: V60 = ISZERO V59
0x102: V61 = 0x10a
0x105: JUMPI 0x10a V60
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0x106
[0x106:0x109]
---
Predecessors: [0xaf]
Successors: []
---
0x106 PUSH1 0x0
0x108 DUP1
0x109 REVERT
---
0x106: V62 = 0x0
0x109: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0x10a
[0x10a:0x17d]
---
Predecessors: [0xaf]
Successors: [0x17e, 0x182]
---
0x10a JUMPDEST
0x10b PUSH1 0x0
0x10d DUP1
0x10e SWAP1
0x10f SLOAD
0x110 SWAP1
0x111 PUSH2 0x100
0x114 EXP
0x115 SWAP1
0x116 DIV
0x117 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12c AND
0x12d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x142 AND
0x143 PUSH2 0x8fc
0x146 ADDRESS
0x147 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15c AND
0x15d BALANCE
0x15e SWAP1
0x15f DUP2
0x160 ISZERO
0x161 MUL
0x162 SWAP1
0x163 PUSH1 0x40
0x165 MLOAD
0x166 PUSH1 0x0
0x168 PUSH1 0x40
0x16a MLOAD
0x16b DUP1
0x16c DUP4
0x16d SUB
0x16e DUP2
0x16f DUP6
0x170 DUP9
0x171 DUP9
0x172 CALL
0x173 SWAP4
0x174 POP
0x175 POP
0x176 POP
0x177 POP
0x178 ISZERO
0x179 ISZERO
0x17a PUSH2 0x182
0x17d JUMPI
---
0x10a: JUMPDEST 
0x10b: V63 = 0x0
0x10f: V64 = S[0x0]
0x111: V65 = 0x100
0x114: V66 = EXP 0x100 0x0
0x116: V67 = DIV V64 0x1
0x117: V68 = 0xffffffffffffffffffffffffffffffffffffffff
0x12c: V69 = AND 0xffffffffffffffffffffffffffffffffffffffff V67
0x12d: V70 = 0xffffffffffffffffffffffffffffffffffffffff
0x142: V71 = AND 0xffffffffffffffffffffffffffffffffffffffff V69
0x143: V72 = 0x8fc
0x146: V73 = ADDRESS
0x147: V74 = 0xffffffffffffffffffffffffffffffffffffffff
0x15c: V75 = AND 0xffffffffffffffffffffffffffffffffffffffff V73
0x15d: V76 = BALANCE V75
0x160: V77 = ISZERO V76
0x161: V78 = MUL V77 0x8fc
0x163: V79 = 0x40
0x165: V80 = M[0x40]
0x166: V81 = 0x0
0x168: V82 = 0x40
0x16a: V83 = M[0x40]
0x16d: V84 = SUB V80 V83
0x172: V85 = CALL V78 V71 V76 V83 V84 V83 0x0
0x178: V86 = ISZERO V85
0x179: V87 = ISZERO V86
0x17a: V88 = 0x182
0x17d: JUMPI 0x182 V87
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0x17e
[0x17e:0x181]
---
Predecessors: [0x10a]
Successors: []
---
0x17e PUSH1 0x0
0x180 DUP1
0x181 REVERT
---
0x17e: V89 = 0x0
0x181: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0x182
[0x182:0x183]
---
Predecessors: [0x10a]
Successors: [0x6c]
---
0x182 JUMPDEST
0x183 JUMP
---
0x182: JUMPDEST 
0x183: JUMP 0x6c
---
Entry stack: [V11, 0x6c]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x184
[0x184:0x1a5]
---
Predecessors: [0x6e]
Successors: [0x1a6, 0x1b2]
---
0x184 JUMPDEST
0x185 ADDRESS
0x186 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19b AND
0x19c BALANCE
0x19d CALLVALUE
0x19e LT
0x19f ISZERO
0x1a0 DUP1
0x1a1 ISZERO
0x1a2 PUSH2 0x1b2
0x1a5 JUMPI
---
0x184: JUMPDEST 
0x185: V90 = ADDRESS
0x186: V91 = 0xffffffffffffffffffffffffffffffffffffffff
0x19b: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff V90
0x19c: V93 = BALANCE V92
0x19d: V94 = CALLVALUE
0x19e: V95 = LT V94 V93
0x19f: V96 = ISZERO V95
0x1a1: V97 = ISZERO V96
0x1a2: V98 = 0x1b2
0x1a5: JUMPI 0x1b2 V97
---
Entry stack: [V11, 0x84, V29]
Stack pops: 0
Stack additions: [V96]
Exit stack: [V11, 0x84, V29, V96]

================================

Block 0x1a6
[0x1a6:0x1b1]
---
Predecessors: [0x184]
Successors: [0x1b2]
---
0x1a6 POP
0x1a7 PUSH8 0x16345785d8a0000
0x1b0 CALLVALUE
0x1b1 GT
---
0x1a7: V99 = 0x16345785d8a0000
0x1b0: V100 = CALLVALUE
0x1b1: V101 = GT V100 0x16345785d8a0000
---
Entry stack: [V11, 0x84, V29, V96]
Stack pops: 1
Stack additions: [V101]
Exit stack: [V11, 0x84, V29, V101]

================================

Block 0x1b2
[0x1b2:0x1b7]
---
Predecessors: [0x184, 0x1a6]
Successors: [0x1b8, 0x22d]
---
0x1b2 JUMPDEST
0x1b3 ISZERO
0x1b4 PUSH2 0x22d
0x1b7 JUMPI
---
0x1b2: JUMPDEST 
0x1b3: V102 = ISZERO S0
0x1b4: V103 = 0x22d
0x1b7: JUMPI 0x22d V102
---
Entry stack: [V11, 0x84, V29, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x84, V29]

================================

Block 0x1b8
[0x1b8:0x1c8]
---
Predecessors: [0x1b2]
Successors: [0x1c9, 0x1ca]
---
0x1b8 PUSH1 0x1
0x1ba SLOAD
0x1bb PUSH1 0x7
0x1bd PUSH1 0x2
0x1bf DUP4
0x1c0 DUP5
0x1c1 MUL
0x1c2 DUP2
0x1c3 ISZERO
0x1c4 ISZERO
0x1c5 PUSH2 0x1ca
0x1c8 JUMPI
---
0x1b8: V104 = 0x1
0x1ba: V105 = S[0x1]
0x1bb: V106 = 0x7
0x1bd: V107 = 0x2
0x1c1: V108 = MUL V29 V29
0x1c3: V109 = ISZERO 0x2
0x1c4: V110 = ISZERO 0x0
0x1c5: V111 = 0x1ca
0x1c8: JUMPI 0x1ca 0x1
---
Entry stack: [V11, 0x84, V29]
Stack pops: 1
Stack additions: [S0, V105, 0x7, 0x2, V108]
Exit stack: [V11, 0x84, V29, V105, 0x7, 0x2, V108]

================================

Block 0x1c9
[0x1c9:0x1c9]
---
Predecessors: [0x1b8]
Successors: []
---
0x1c9 INVALID
---
0x1c9: INVALID 
---
Entry stack: [V11, 0x84, V29, V105, 0x7, 0x2, V108]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x84, V29, V105, 0x7, 0x2, V108]

================================

Block 0x1ca
[0x1ca:0x1d2]
---
Predecessors: [0x1b8]
Successors: [0x1d3, 0x22c]
---
0x1ca JUMPDEST
0x1cb DIV
0x1cc ADD
0x1cd EQ
0x1ce ISZERO
0x1cf PUSH2 0x22c
0x1d2 JUMPI
---
0x1ca: JUMPDEST 
0x1cb: V112 = DIV V108 0x2
0x1cc: V113 = ADD V112 0x7
0x1cd: V114 = EQ V113 V105
0x1ce: V115 = ISZERO V114
0x1cf: V116 = 0x22c
0x1d2: JUMPI 0x22c V115
---
Entry stack: [V11, 0x84, V29, V105, 0x7, 0x2, V108]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x84, V29]

================================

Block 0x1d3
[0x1d3:0x226]
---
Predecessors: [0x1ca]
Successors: [0x227, 0x22b]
---
0x1d3 CALLER
0x1d4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e9 AND
0x1ea PUSH2 0x8fc
0x1ed CALLVALUE
0x1ee ADDRESS
0x1ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x204 AND
0x205 BALANCE
0x206 ADD
0x207 SWAP1
0x208 DUP2
0x209 ISZERO
0x20a MUL
0x20b SWAP1
0x20c PUSH1 0x40
0x20e MLOAD
0x20f PUSH1 0x0
0x211 PUSH1 0x40
0x213 MLOAD
0x214 DUP1
0x215 DUP4
0x216 SUB
0x217 DUP2
0x218 DUP6
0x219 DUP9
0x21a DUP9
0x21b CALL
0x21c SWAP4
0x21d POP
0x21e POP
0x21f POP
0x220 POP
0x221 ISZERO
0x222 ISZERO
0x223 PUSH2 0x22b
0x226 JUMPI
---
0x1d3: V117 = CALLER
0x1d4: V118 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e9: V119 = AND 0xffffffffffffffffffffffffffffffffffffffff V117
0x1ea: V120 = 0x8fc
0x1ed: V121 = CALLVALUE
0x1ee: V122 = ADDRESS
0x1ef: V123 = 0xffffffffffffffffffffffffffffffffffffffff
0x204: V124 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x205: V125 = BALANCE V124
0x206: V126 = ADD V125 V121
0x209: V127 = ISZERO V126
0x20a: V128 = MUL V127 0x8fc
0x20c: V129 = 0x40
0x20e: V130 = M[0x40]
0x20f: V131 = 0x0
0x211: V132 = 0x40
0x213: V133 = M[0x40]
0x216: V134 = SUB V130 V133
0x21b: V135 = CALL V128 V119 V126 V133 V134 V133 0x0
0x221: V136 = ISZERO V135
0x222: V137 = ISZERO V136
0x223: V138 = 0x22b
0x226: JUMPI 0x22b V137
---
Entry stack: [V11, 0x84, V29]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x84, V29]

================================

Block 0x227
[0x227:0x22a]
---
Predecessors: [0x1d3]
Successors: []
---
0x227 PUSH1 0x0
0x229 DUP1
0x22a REVERT
---
0x227: V139 = 0x0
0x22a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x84, V29]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x84, V29]

================================

Block 0x22b
[0x22b:0x22b]
---
Predecessors: [0x1d3]
Successors: [0x22c]
---
0x22b JUMPDEST
---
0x22b: JUMPDEST 
---
Entry stack: [V11, 0x84, V29]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x84, V29]

================================

Block 0x22c
[0x22c:0x22c]
---
Predecessors: [0x1ca, 0x22b]
Successors: [0x22d]
---
0x22c JUMPDEST
---
0x22c: JUMPDEST 
---
Entry stack: [V11, 0x84, V29]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x84, V29]

================================

Block 0x22d
[0x22d:0x22f]
---
Predecessors: [0x1b2, 0x22c]
Successors: [0x84]
---
0x22d JUMPDEST
0x22e POP
0x22f JUMP
---
0x22d: JUMPDEST 
0x22f: JUMP 0x84
---
Entry stack: [V11, 0x84, V29]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x230
[0x230:0x235]
---
Predecessors: [0x91]
Successors: [0x99]
---
0x230 JUMPDEST
0x231 PUSH1 0x1
0x233 SLOAD
0x234 DUP2
0x235 JUMP
---
0x230: JUMPDEST 
0x231: V140 = 0x1
0x233: V141 = S[0x1]
0x235: JUMP 0x99
---
Entry stack: [V11, 0x99]
Stack pops: 1
Stack additions: [S0, V141]
Exit stack: [V11, 0x99, V141]

================================

Block 0x236
[0x236:0x261]
---
Predecessors: []
Successors: []
---
0x236 STOP
0x237 LOG1
0x238 PUSH6 0x627a7a723058
0x23f SHA3
0x240 MISSING 0xdd
0x241 PUSH30 0xd0613f2e8972bc137f44939eda1bd9e8f1124a2a9da210d1c3111cb408b0
0x260 STOP
0x261 MISSING 0x29
---
0x236: STOP 
0x237: LOG S0 S1 S2
0x238: V142 = 0x627a7a723058
0x23f: V143 = SHA3 0x627a7a723058 S3
0x240: MISSING 0xdd
0x241: V144 = 0xd0613f2e8972bc137f44939eda1bd9e8f1124a2a9da210d1c3111cb408b0
0x260: STOP 
0x261: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V143, 0xd0613f2e8972bc137f44939eda1bd9e8f1124a2a9da210d1c3111cb408b0]
Exit stack: []

================================

Function 0:
Public function signature: 0x57ea89b6
Entry block: 0x59
Exit block: 0x6c
Body: 0x59, 0x60, 0x64, 0x6c, 0xaf, 0x106, 0x10a, 0x17e, 0x182

Function 1:
Public function signature: 0x75f96ead
Entry block: 0x6e
Exit block: 0x227
Body: 0x6e, 0x84, 0x184, 0x1a6, 0x1b2, 0x1b8, 0x1c9, 0x1ca, 0x1d3, 0x227, 0x22b, 0x22c, 0x22d

Function 2:
Public function signature: 0xc2610cda
Entry block: 0x86
Exit block: 0x99
Body: 0x86, 0x8d, 0x91, 0x99, 0x230

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

