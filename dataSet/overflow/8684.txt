Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x51]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x7ed0c3b2
0x3c EQ
0x3d PUSH2 0x51
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x7ed0c3b2
0x3c: V13 = EQ 0x7ed0c3b2 V11
0x3d: V14 = 0x51
0x40: JUMPI 0x51 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xfa]
---
0x41 DUP1
0x42 PUSH4 0x8bf4515c
0x47 EQ
0x48 PUSH2 0xfa
0x4b JUMPI
---
0x42: V15 = 0x8bf4515c
0x47: V16 = EQ 0x8bf4515c V11
0x48: V17 = 0xfa
0x4b: JUMPI 0xfa V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x50]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d PUSH1 0x0
0x4f DUP1
0x50 REVERT
---
0x4c: JUMPDEST 
0x4d: V18 = 0x0
0x50: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x51
[0x51:0x58]
---
Predecessors: [0xd]
Successors: [0x59, 0x5d]
---
0x51 JUMPDEST
0x52 CALLVALUE
0x53 DUP1
0x54 ISZERO
0x55 PUSH2 0x5d
0x58 JUMPI
---
0x51: JUMPDEST 
0x52: V19 = CALLVALUE
0x54: V20 = ISZERO V19
0x55: V21 = 0x5d
0x58: JUMPI 0x5d V20
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V19]
Exit stack: [V11, V19]

================================

Block 0x59
[0x59:0x5c]
---
Predecessors: [0x51]
Successors: []
---
0x59 PUSH1 0x0
0x5b DUP1
0x5c REVERT
---
0x59: V22 = 0x0
0x5c: REVERT 0x0 0x0
---
Entry stack: [V11, V19]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V19]

================================

Block 0x5d
[0x5d:0xb7]
---
Predecessors: [0x51]
Successors: [0x1a3]
---
0x5d JUMPDEST
0x5e POP
0x5f PUSH2 0xb8
0x62 PUSH1 0x4
0x64 DUP1
0x65 CALLDATASIZE
0x66 SUB
0x67 DUP2
0x68 ADD
0x69 SWAP1
0x6a DUP1
0x6b DUP1
0x6c CALLDATALOAD
0x6d SWAP1
0x6e PUSH1 0x20
0x70 ADD
0x71 SWAP1
0x72 DUP3
0x73 ADD
0x74 DUP1
0x75 CALLDATALOAD
0x76 SWAP1
0x77 PUSH1 0x20
0x79 ADD
0x7a SWAP1
0x7b DUP1
0x7c DUP1
0x7d PUSH1 0x1f
0x7f ADD
0x80 PUSH1 0x20
0x82 DUP1
0x83 SWAP2
0x84 DIV
0x85 MUL
0x86 PUSH1 0x20
0x88 ADD
0x89 PUSH1 0x40
0x8b MLOAD
0x8c SWAP1
0x8d DUP2
0x8e ADD
0x8f PUSH1 0x40
0x91 MSTORE
0x92 DUP1
0x93 SWAP4
0x94 SWAP3
0x95 SWAP2
0x96 SWAP1
0x97 DUP2
0x98 DUP2
0x99 MSTORE
0x9a PUSH1 0x20
0x9c ADD
0x9d DUP4
0x9e DUP4
0x9f DUP1
0xa0 DUP3
0xa1 DUP5
0xa2 CALLDATACOPY
0xa3 DUP3
0xa4 ADD
0xa5 SWAP2
0xa6 POP
0xa7 POP
0xa8 POP
0xa9 POP
0xaa POP
0xab POP
0xac SWAP2
0xad SWAP3
0xae SWAP2
0xaf SWAP3
0xb0 SWAP1
0xb1 POP
0xb2 POP
0xb3 POP
0xb4 PUSH2 0x1a3
0xb7 JUMP
---
0x5d: JUMPDEST 
0x5f: V23 = 0xb8
0x62: V24 = 0x4
0x65: V25 = CALLDATASIZE
0x66: V26 = SUB V25 0x4
0x68: V27 = ADD 0x4 V26
0x6c: V28 = CALLDATALOAD 0x4
0x6e: V29 = 0x20
0x70: V30 = ADD 0x20 0x4
0x73: V31 = ADD 0x4 V28
0x75: V32 = CALLDATALOAD V31
0x77: V33 = 0x20
0x79: V34 = ADD 0x20 V31
0x7d: V35 = 0x1f
0x7f: V36 = ADD 0x1f V32
0x80: V37 = 0x20
0x84: V38 = DIV V36 0x20
0x85: V39 = MUL V38 0x20
0x86: V40 = 0x20
0x88: V41 = ADD 0x20 V39
0x89: V42 = 0x40
0x8b: V43 = M[0x40]
0x8e: V44 = ADD V43 V41
0x8f: V45 = 0x40
0x91: M[0x40] = V44
0x99: M[V43] = V32
0x9a: V46 = 0x20
0x9c: V47 = ADD 0x20 V43
0xa2: CALLDATACOPY V47 V34 V32
0xa4: V48 = ADD V47 V32
0xb4: V49 = 0x1a3
0xb7: JUMP 0x1a3
---
Entry stack: [V11, V19]
Stack pops: 1
Stack additions: [0xb8, V43]
Exit stack: [V11, 0xb8, V43]

================================

Block 0xb8
[0xb8:0xf9]
---
Predecessors: [0x1fd]
Successors: []
---
0xb8 JUMPDEST
0xb9 PUSH1 0x40
0xbb MLOAD
0xbc DUP1
0xbd DUP3
0xbe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd3 AND
0xd4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe9 AND
0xea DUP2
0xeb MSTORE
0xec PUSH1 0x20
0xee ADD
0xef SWAP2
0xf0 POP
0xf1 POP
0xf2 PUSH1 0x40
0xf4 MLOAD
0xf5 DUP1
0xf6 SWAP2
0xf7 SUB
0xf8 SWAP1
0xf9 RETURN
---
0xb8: JUMPDEST 
0xb9: V50 = 0x40
0xbb: V51 = M[0x40]
0xbe: V52 = 0xffffffffffffffffffffffffffffffffffffffff
0xd3: V53 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0xd4: V54 = 0xffffffffffffffffffffffffffffffffffffffff
0xe9: V55 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0xeb: M[V51] = V55
0xec: V56 = 0x20
0xee: V57 = ADD 0x20 V51
0xf2: V58 = 0x40
0xf4: V59 = M[0x40]
0xf7: V60 = SUB V57 V59
0xf9: RETURN V59 V60
---
Entry stack: [V11, V108]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xfa
[0xfa:0x101]
---
Predecessors: [0x41]
Successors: [0x102, 0x106]
---
0xfa JUMPDEST
0xfb CALLVALUE
0xfc DUP1
0xfd ISZERO
0xfe PUSH2 0x106
0x101 JUMPI
---
0xfa: JUMPDEST 
0xfb: V61 = CALLVALUE
0xfd: V62 = ISZERO V61
0xfe: V63 = 0x106
0x101: JUMPI 0x106 V62
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V61]
Exit stack: [V11, V61]

================================

Block 0x102
[0x102:0x105]
---
Predecessors: [0xfa]
Successors: []
---
0x102 PUSH1 0x0
0x104 DUP1
0x105 REVERT
---
0x102: V64 = 0x0
0x105: REVERT 0x0 0x0
---
Entry stack: [V11, V61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V61]

================================

Block 0x106
[0x106:0x160]
---
Predecessors: [0xfa]
Successors: [0x28b]
---
0x106 JUMPDEST
0x107 POP
0x108 PUSH2 0x161
0x10b PUSH1 0x4
0x10d DUP1
0x10e CALLDATASIZE
0x10f SUB
0x110 DUP2
0x111 ADD
0x112 SWAP1
0x113 DUP1
0x114 DUP1
0x115 CALLDATALOAD
0x116 SWAP1
0x117 PUSH1 0x20
0x119 ADD
0x11a SWAP1
0x11b DUP3
0x11c ADD
0x11d DUP1
0x11e CALLDATALOAD
0x11f SWAP1
0x120 PUSH1 0x20
0x122 ADD
0x123 SWAP1
0x124 DUP1
0x125 DUP1
0x126 PUSH1 0x1f
0x128 ADD
0x129 PUSH1 0x20
0x12b DUP1
0x12c SWAP2
0x12d DIV
0x12e MUL
0x12f PUSH1 0x20
0x131 ADD
0x132 PUSH1 0x40
0x134 MLOAD
0x135 SWAP1
0x136 DUP2
0x137 ADD
0x138 PUSH1 0x40
0x13a MSTORE
0x13b DUP1
0x13c SWAP4
0x13d SWAP3
0x13e SWAP2
0x13f SWAP1
0x140 DUP2
0x141 DUP2
0x142 MSTORE
0x143 PUSH1 0x20
0x145 ADD
0x146 DUP4
0x147 DUP4
0x148 DUP1
0x149 DUP3
0x14a DUP5
0x14b CALLDATACOPY
0x14c DUP3
0x14d ADD
0x14e SWAP2
0x14f POP
0x150 POP
0x151 POP
0x152 POP
0x153 POP
0x154 POP
0x155 SWAP2
0x156 SWAP3
0x157 SWAP2
0x158 SWAP3
0x159 SWAP1
0x15a POP
0x15b POP
0x15c POP
0x15d PUSH2 0x28b
0x160 JUMP
---
0x106: JUMPDEST 
0x108: V65 = 0x161
0x10b: V66 = 0x4
0x10e: V67 = CALLDATASIZE
0x10f: V68 = SUB V67 0x4
0x111: V69 = ADD 0x4 V68
0x115: V70 = CALLDATALOAD 0x4
0x117: V71 = 0x20
0x119: V72 = ADD 0x20 0x4
0x11c: V73 = ADD 0x4 V70
0x11e: V74 = CALLDATALOAD V73
0x120: V75 = 0x20
0x122: V76 = ADD 0x20 V73
0x126: V77 = 0x1f
0x128: V78 = ADD 0x1f V74
0x129: V79 = 0x20
0x12d: V80 = DIV V78 0x20
0x12e: V81 = MUL V80 0x20
0x12f: V82 = 0x20
0x131: V83 = ADD 0x20 V81
0x132: V84 = 0x40
0x134: V85 = M[0x40]
0x137: V86 = ADD V85 V83
0x138: V87 = 0x40
0x13a: M[0x40] = V86
0x142: M[V85] = V74
0x143: V88 = 0x20
0x145: V89 = ADD 0x20 V85
0x14b: CALLDATACOPY V89 V76 V74
0x14d: V90 = ADD V89 V74
0x15d: V91 = 0x28b
0x160: JUMP 0x28b
---
Entry stack: [V11, V61]
Stack pops: 1
Stack additions: [0x161, V85]
Exit stack: [V11, 0x161, V85]

================================

Block 0x161
[0x161:0x1a2]
---
Predecessors: [0x2c4]
Successors: []
---
0x161 JUMPDEST
0x162 PUSH1 0x40
0x164 MLOAD
0x165 DUP1
0x166 DUP3
0x167 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17c AND
0x17d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x192 AND
0x193 DUP2
0x194 MSTORE
0x195 PUSH1 0x20
0x197 ADD
0x198 SWAP2
0x199 POP
0x19a POP
0x19b PUSH1 0x40
0x19d MLOAD
0x19e DUP1
0x19f SWAP2
0x1a0 SUB
0x1a1 SWAP1
0x1a2 RETURN
---
0x161: JUMPDEST 
0x162: V92 = 0x40
0x164: V93 = M[0x40]
0x167: V94 = 0xffffffffffffffffffffffffffffffffffffffff
0x17c: V95 = AND 0xffffffffffffffffffffffffffffffffffffffff V231
0x17d: V96 = 0xffffffffffffffffffffffffffffffffffffffff
0x192: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0x194: M[V93] = V97
0x195: V98 = 0x20
0x197: V99 = ADD 0x20 V93
0x19b: V100 = 0x40
0x19d: V101 = M[0x40]
0x1a0: V102 = SUB V99 V101
0x1a2: RETURN V101 V102
---
Entry stack: [V11, V231]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1a3
[0x1a3:0x1bc]
---
Predecessors: [0x5d]
Successors: [0x1bd, 0x1c1]
---
0x1a3 JUMPDEST
0x1a4 PUSH1 0x0
0x1a6 DUP1
0x1a7 DUP3
0x1a8 MLOAD
0x1a9 PUSH1 0x20
0x1ab DUP5
0x1ac ADD
0x1ad PUSH1 0x0
0x1af CREATE
0x1b0 SWAP2
0x1b1 POP
0x1b2 DUP2
0x1b3 EXTCODESIZE
0x1b4 ISZERO
0x1b5 PUSH1 0x1
0x1b7 DUP2
0x1b8 EQ
0x1b9 PUSH2 0x1c1
0x1bc JUMPI
---
0x1a3: JUMPDEST 
0x1a4: V103 = 0x0
0x1a8: V104 = M[V43]
0x1a9: V105 = 0x20
0x1ac: V106 = ADD V43 0x20
0x1ad: V107 = 0x0
0x1af: V108 = CREATE 0x0 V106 V104
0x1b3: V109 = EXTCODESIZE V108
0x1b4: V110 = ISZERO V109
0x1b5: V111 = 0x1
0x1b8: V112 = EQ V110 0x1
0x1b9: V113 = 0x1c1
0x1bc: JUMPI 0x1c1 V112
---
Entry stack: [V11, 0xb8, V43]
Stack pops: 1
Stack additions: [S0, V108, 0x0, V110]
Exit stack: [V11, 0xb8, V43, V108, 0x0, V110]

================================

Block 0x1bd
[0x1bd:0x1c0]
---
Predecessors: [0x1a3]
Successors: [0x1c6]
---
0x1bd PUSH2 0x1c6
0x1c0 JUMP
---
0x1bd: V114 = 0x1c6
0x1c0: JUMP 0x1c6
---
Entry stack: [V11, 0xb8, V43, V108, 0x0, V110]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb8, V43, V108, 0x0, V110]

================================

Block 0x1c1
[0x1c1:0x1c5]
---
Predecessors: [0x1a3]
Successors: []
---
0x1c1 JUMPDEST
0x1c2 PUSH1 0x0
0x1c4 DUP1
0x1c5 REVERT
---
0x1c1: JUMPDEST 
0x1c2: V115 = 0x0
0x1c5: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb8, V43, V108, 0x0, V110]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb8, V43, V108, 0x0, V110]

================================

Block 0x1c6
[0x1c6:0x1d7]
---
Predecessors: [0x1bd]
Successors: [0x1d8]
---
0x1c6 JUMPDEST
0x1c7 POP
0x1c8 DUP3
0x1c9 PUSH1 0x40
0x1cb MLOAD
0x1cc DUP1
0x1cd DUP3
0x1ce DUP1
0x1cf MLOAD
0x1d0 SWAP1
0x1d1 PUSH1 0x20
0x1d3 ADD
0x1d4 SWAP1
0x1d5 DUP1
0x1d6 DUP4
0x1d7 DUP4
---
0x1c6: JUMPDEST 
0x1c9: V116 = 0x40
0x1cb: V117 = M[0x40]
0x1cf: V118 = M[V43]
0x1d1: V119 = 0x20
0x1d3: V120 = ADD 0x20 V43
---
Entry stack: [V11, 0xb8, V43, V108, 0x0, V110]
Stack pops: 4
Stack additions: [S3, S2, S1, S3, V117, V117, V120, V118, V118, V117, V120]
Exit stack: [V11, 0xb8, V43, V108, 0x0, V43, V117, V117, V120, V118, V118, V117, V120]

================================

Block 0x1d8
[0x1d8:0x1e2]
---
Predecessors: [0x1c6, 0x1e3]
Successors: [0x1e3, 0x1fd]
---
0x1d8 JUMPDEST
0x1d9 PUSH1 0x20
0x1db DUP4
0x1dc LT
0x1dd ISZERO
0x1de ISZERO
0x1df PUSH2 0x1fd
0x1e2 JUMPI
---
0x1d8: JUMPDEST 
0x1d9: V121 = 0x20
0x1dc: V122 = LT S2 0x20
0x1dd: V123 = ISZERO V122
0x1de: V124 = ISZERO V123
0x1df: V125 = 0x1fd
0x1e2: JUMPI 0x1fd V124
---
Entry stack: [V11, 0xb8, V43, V108, 0x0, V43, V117, V117, V120, V118, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0xb8, V43, V108, 0x0, V43, V117, V117, V120, V118, S2, S1, S0]

================================

Block 0x1e3
[0x1e3:0x1fc]
---
Predecessors: [0x1d8]
Successors: [0x1d8]
---
0x1e3 DUP1
0x1e4 MLOAD
0x1e5 DUP3
0x1e6 MSTORE
0x1e7 PUSH1 0x20
0x1e9 DUP3
0x1ea ADD
0x1eb SWAP2
0x1ec POP
0x1ed PUSH1 0x20
0x1ef DUP2
0x1f0 ADD
0x1f1 SWAP1
0x1f2 POP
0x1f3 PUSH1 0x20
0x1f5 DUP4
0x1f6 SUB
0x1f7 SWAP3
0x1f8 POP
0x1f9 PUSH2 0x1d8
0x1fc JUMP
---
0x1e4: V126 = M[S0]
0x1e6: M[S1] = V126
0x1e7: V127 = 0x20
0x1ea: V128 = ADD S1 0x20
0x1ed: V129 = 0x20
0x1f0: V130 = ADD S0 0x20
0x1f3: V131 = 0x20
0x1f6: V132 = SUB S2 0x20
0x1f9: V133 = 0x1d8
0x1fc: JUMP 0x1d8
---
Entry stack: [V11, 0xb8, V43, V108, 0x0, V43, V117, V117, V120, V118, S2, S1, S0]
Stack pops: 3
Stack additions: [V132, V128, V130]
Exit stack: [V11, 0xb8, V43, V108, 0x0, V43, V117, V117, V120, V118, V132, V128, V130]

================================

Block 0x1fd
[0x1fd:0x28a]
---
Predecessors: [0x1d8]
Successors: [0xb8]
---
0x1fd JUMPDEST
0x1fe PUSH1 0x1
0x200 DUP4
0x201 PUSH1 0x20
0x203 SUB
0x204 PUSH2 0x100
0x207 EXP
0x208 SUB
0x209 DUP1
0x20a NOT
0x20b DUP3
0x20c MLOAD
0x20d AND
0x20e DUP2
0x20f DUP5
0x210 MLOAD
0x211 AND
0x212 DUP1
0x213 DUP3
0x214 OR
0x215 DUP6
0x216 MSTORE
0x217 POP
0x218 POP
0x219 POP
0x21a POP
0x21b POP
0x21c POP
0x21d SWAP1
0x21e POP
0x21f ADD
0x220 SWAP2
0x221 POP
0x222 POP
0x223 PUSH1 0x40
0x225 MLOAD
0x226 DUP1
0x227 SWAP2
0x228 SUB
0x229 SWAP1
0x22a SHA3
0x22b SWAP1
0x22c POP
0x22d DUP2
0x22e PUSH1 0x0
0x230 DUP1
0x231 DUP4
0x232 PUSH1 0x0
0x234 NOT
0x235 AND
0x236 PUSH1 0x0
0x238 NOT
0x239 AND
0x23a DUP2
0x23b MSTORE
0x23c PUSH1 0x20
0x23e ADD
0x23f SWAP1
0x240 DUP2
0x241 MSTORE
0x242 PUSH1 0x20
0x244 ADD
0x245 PUSH1 0x0
0x247 SHA3
0x248 PUSH1 0x0
0x24a PUSH2 0x100
0x24d EXP
0x24e DUP2
0x24f SLOAD
0x250 DUP2
0x251 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x266 MUL
0x267 NOT
0x268 AND
0x269 SWAP1
0x26a DUP4
0x26b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x280 AND
0x281 MUL
0x282 OR
0x283 SWAP1
0x284 SSTORE
0x285 POP
0x286 POP
0x287 SWAP2
0x288 SWAP1
0x289 POP
0x28a JUMP
---
0x1fd: JUMPDEST 
0x1fe: V134 = 0x1
0x201: V135 = 0x20
0x203: V136 = SUB 0x20 S2
0x204: V137 = 0x100
0x207: V138 = EXP 0x100 V136
0x208: V139 = SUB V138 0x1
0x20a: V140 = NOT V139
0x20c: V141 = M[S0]
0x20d: V142 = AND V141 V140
0x210: V143 = M[S1]
0x211: V144 = AND V143 V139
0x214: V145 = OR V142 V144
0x216: M[S1] = V145
0x21f: V146 = ADD V118 V117
0x223: V147 = 0x40
0x225: V148 = M[0x40]
0x228: V149 = SUB V146 V148
0x22a: V150 = SHA3 V148 V149
0x22e: V151 = 0x0
0x232: V152 = 0x0
0x234: V153 = NOT 0x0
0x235: V154 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V150
0x236: V155 = 0x0
0x238: V156 = NOT 0x0
0x239: V157 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V154
0x23b: M[0x0] = V157
0x23c: V158 = 0x20
0x23e: V159 = ADD 0x20 0x0
0x241: M[0x20] = 0x0
0x242: V160 = 0x20
0x244: V161 = ADD 0x20 0x20
0x245: V162 = 0x0
0x247: V163 = SHA3 0x0 0x40
0x248: V164 = 0x0
0x24a: V165 = 0x100
0x24d: V166 = EXP 0x100 0x0
0x24f: V167 = S[V163]
0x251: V168 = 0xffffffffffffffffffffffffffffffffffffffff
0x266: V169 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x267: V170 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x268: V171 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V167
0x26b: V172 = 0xffffffffffffffffffffffffffffffffffffffff
0x280: V173 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x281: V174 = MUL V173 0x1
0x282: V175 = OR V174 V171
0x284: S[V163] = V175
0x28a: JUMP 0xb8
---
Entry stack: [V11, 0xb8, V43, V108, 0x0, V43, V117, V117, V120, V118, S2, S1, S0]
Stack pops: 12
Stack additions: [S9]
Exit stack: [V11, V108]

================================

Block 0x28b
[0x28b:0x29e]
---
Predecessors: [0x106]
Successors: [0x29f]
---
0x28b JUMPDEST
0x28c PUSH1 0x0
0x28e DUP1
0x28f DUP3
0x290 PUSH1 0x40
0x292 MLOAD
0x293 DUP1
0x294 DUP3
0x295 DUP1
0x296 MLOAD
0x297 SWAP1
0x298 PUSH1 0x20
0x29a ADD
0x29b SWAP1
0x29c DUP1
0x29d DUP4
0x29e DUP4
---
0x28b: JUMPDEST 
0x28c: V176 = 0x0
0x290: V177 = 0x40
0x292: V178 = M[0x40]
0x296: V179 = M[V85]
0x298: V180 = 0x20
0x29a: V181 = ADD 0x20 V85
---
Entry stack: [V11, 0x161, V85]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, S0, V178, V178, V181, V179, V179, V178, V181]
Exit stack: [V11, 0x161, V85, 0x0, 0x0, V85, V178, V178, V181, V179, V179, V178, V181]

================================

Block 0x29f
[0x29f:0x2a9]
---
Predecessors: [0x28b, 0x2aa]
Successors: [0x2aa, 0x2c4]
---
0x29f JUMPDEST
0x2a0 PUSH1 0x20
0x2a2 DUP4
0x2a3 LT
0x2a4 ISZERO
0x2a5 ISZERO
0x2a6 PUSH2 0x2c4
0x2a9 JUMPI
---
0x29f: JUMPDEST 
0x2a0: V182 = 0x20
0x2a3: V183 = LT S2 0x20
0x2a4: V184 = ISZERO V183
0x2a5: V185 = ISZERO V184
0x2a6: V186 = 0x2c4
0x2a9: JUMPI 0x2c4 V185
---
Entry stack: [V11, 0x161, V85, 0x0, 0x0, V85, V178, V178, V181, V179, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x161, V85, 0x0, 0x0, V85, V178, V178, V181, V179, S2, S1, S0]

================================

Block 0x2aa
[0x2aa:0x2c3]
---
Predecessors: [0x29f]
Successors: [0x29f]
---
0x2aa DUP1
0x2ab MLOAD
0x2ac DUP3
0x2ad MSTORE
0x2ae PUSH1 0x20
0x2b0 DUP3
0x2b1 ADD
0x2b2 SWAP2
0x2b3 POP
0x2b4 PUSH1 0x20
0x2b6 DUP2
0x2b7 ADD
0x2b8 SWAP1
0x2b9 POP
0x2ba PUSH1 0x20
0x2bc DUP4
0x2bd SUB
0x2be SWAP3
0x2bf POP
0x2c0 PUSH2 0x29f
0x2c3 JUMP
---
0x2ab: V187 = M[S0]
0x2ad: M[S1] = V187
0x2ae: V188 = 0x20
0x2b1: V189 = ADD S1 0x20
0x2b4: V190 = 0x20
0x2b7: V191 = ADD S0 0x20
0x2ba: V192 = 0x20
0x2bd: V193 = SUB S2 0x20
0x2c0: V194 = 0x29f
0x2c3: JUMP 0x29f
---
Entry stack: [V11, 0x161, V85, 0x0, 0x0, V85, V178, V178, V181, V179, S2, S1, S0]
Stack pops: 3
Stack additions: [V193, V189, V191]
Exit stack: [V11, 0x161, V85, 0x0, 0x0, V85, V178, V178, V181, V179, V193, V189, V191]

================================

Block 0x2c4
[0x2c4:0x335]
---
Predecessors: [0x29f]
Successors: [0x161]
---
0x2c4 JUMPDEST
0x2c5 PUSH1 0x1
0x2c7 DUP4
0x2c8 PUSH1 0x20
0x2ca SUB
0x2cb PUSH2 0x100
0x2ce EXP
0x2cf SUB
0x2d0 DUP1
0x2d1 NOT
0x2d2 DUP3
0x2d3 MLOAD
0x2d4 AND
0x2d5 DUP2
0x2d6 DUP5
0x2d7 MLOAD
0x2d8 AND
0x2d9 DUP1
0x2da DUP3
0x2db OR
0x2dc DUP6
0x2dd MSTORE
0x2de POP
0x2df POP
0x2e0 POP
0x2e1 POP
0x2e2 POP
0x2e3 POP
0x2e4 SWAP1
0x2e5 POP
0x2e6 ADD
0x2e7 SWAP2
0x2e8 POP
0x2e9 POP
0x2ea PUSH1 0x40
0x2ec MLOAD
0x2ed DUP1
0x2ee SWAP2
0x2ef SUB
0x2f0 SWAP1
0x2f1 SHA3
0x2f2 SWAP1
0x2f3 POP
0x2f4 PUSH1 0x0
0x2f6 DUP1
0x2f7 DUP3
0x2f8 PUSH1 0x0
0x2fa NOT
0x2fb AND
0x2fc PUSH1 0x0
0x2fe NOT
0x2ff AND
0x300 DUP2
0x301 MSTORE
0x302 PUSH1 0x20
0x304 ADD
0x305 SWAP1
0x306 DUP2
0x307 MSTORE
0x308 PUSH1 0x20
0x30a ADD
0x30b PUSH1 0x0
0x30d SHA3
0x30e PUSH1 0x0
0x310 SWAP1
0x311 SLOAD
0x312 SWAP1
0x313 PUSH2 0x100
0x316 EXP
0x317 SWAP1
0x318 DIV
0x319 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x32e AND
0x32f SWAP2
0x330 POP
0x331 POP
0x332 SWAP2
0x333 SWAP1
0x334 POP
0x335 JUMP
---
0x2c4: JUMPDEST 
0x2c5: V195 = 0x1
0x2c8: V196 = 0x20
0x2ca: V197 = SUB 0x20 S2
0x2cb: V198 = 0x100
0x2ce: V199 = EXP 0x100 V197
0x2cf: V200 = SUB V199 0x1
0x2d1: V201 = NOT V200
0x2d3: V202 = M[S0]
0x2d4: V203 = AND V202 V201
0x2d7: V204 = M[S1]
0x2d8: V205 = AND V204 V200
0x2db: V206 = OR V203 V205
0x2dd: M[S1] = V206
0x2e6: V207 = ADD V179 V178
0x2ea: V208 = 0x40
0x2ec: V209 = M[0x40]
0x2ef: V210 = SUB V207 V209
0x2f1: V211 = SHA3 V209 V210
0x2f4: V212 = 0x0
0x2f8: V213 = 0x0
0x2fa: V214 = NOT 0x0
0x2fb: V215 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V211
0x2fc: V216 = 0x0
0x2fe: V217 = NOT 0x0
0x2ff: V218 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V215
0x301: M[0x0] = V218
0x302: V219 = 0x20
0x304: V220 = ADD 0x20 0x0
0x307: M[0x20] = 0x0
0x308: V221 = 0x20
0x30a: V222 = ADD 0x20 0x20
0x30b: V223 = 0x0
0x30d: V224 = SHA3 0x0 0x40
0x30e: V225 = 0x0
0x311: V226 = S[V224]
0x313: V227 = 0x100
0x316: V228 = EXP 0x100 0x0
0x318: V229 = DIV V226 0x1
0x319: V230 = 0xffffffffffffffffffffffffffffffffffffffff
0x32e: V231 = AND 0xffffffffffffffffffffffffffffffffffffffff V229
0x335: JUMP 0x161
---
Entry stack: [V11, 0x161, V85, 0x0, 0x0, V85, V178, V178, V181, V179, S2, S1, S0]
Stack pops: 12
Stack additions: [V231]
Exit stack: [V11, V231]

================================

Block 0x336
[0x336:0x361]
---
Predecessors: []
Successors: []
---
0x336 STOP
0x337 LOG1
0x338 PUSH6 0x627a7a723058
0x33f SHA3
0x340 MISSING 0xcd
0x341 MISSING 0xc4
0x342 MISSING 0xbd
0x343 MISSING 0xee
0x344 DUP16
0x345 MISSING 0xc7
0x346 PUSH21 0x57badd64b10b4e52c9e5267c58e392c8aa622b20d4
0x35c MISSING 0xe0
0x35d MISSING 0xe4
0x35e MISSING 0x4f
0x35f MISSING 0xf6
0x360 STOP
0x361 MISSING 0x29
---
0x336: STOP 
0x337: LOG S0 S1 S2
0x338: V232 = 0x627a7a723058
0x33f: V233 = SHA3 0x627a7a723058 S3
0x340: MISSING 0xcd
0x341: MISSING 0xc4
0x342: MISSING 0xbd
0x343: MISSING 0xee
0x345: MISSING 0xc7
0x346: V234 = 0x57badd64b10b4e52c9e5267c58e392c8aa622b20d4
0x35c: MISSING 0xe0
0x35d: MISSING 0xe4
0x35e: MISSING 0x4f
0x35f: MISSING 0xf6
0x360: STOP 
0x361: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V233, S15, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, 0x57badd64b10b4e52c9e5267c58e392c8aa622b20d4]
Exit stack: []

================================

Function 0:
Public function signature: 0x7ed0c3b2
Entry block: 0x51
Exit block: 0xb8
Body: 0x51, 0x59, 0x5d, 0xb8, 0x1a3, 0x1bd, 0x1c1, 0x1c6, 0x1d8, 0x1e3, 0x1fd

Function 1:
Public function signature: 0x8bf4515c
Entry block: 0xfa
Exit block: 0x161
Body: 0xfa, 0x102, 0x106, 0x161, 0x28b, 0x29f, 0x2aa, 0x2c4

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

