Block 0x0
[0x0:0x38]
---
Predecessors: []
Successors: [0x39, 0x54]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 PUSH4 0xffffffff
0x2d AND
0x2e DUP1
0x2f PUSH4 0x18160ddd
0x34 EQ
0x35 PUSH2 0x54
0x38 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x28: V6 = 0xffffffff
0x2d: V7 = AND 0xffffffff V5
0x2f: V8 = 0x18160ddd
0x34: V9 = EQ 0x18160ddd V7
0x35: V10 = 0x54
0x38: JUMPI 0x54 V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0x0]
Successors: [0x44, 0x7d]
---
0x39 DUP1
0x3a PUSH4 0x70a08231
0x3f EQ
0x40 PUSH2 0x7d
0x43 JUMPI
---
0x3a: V11 = 0x70a08231
0x3f: V12 = EQ 0x70a08231 V7
0x40: V13 = 0x7d
0x43: JUMPI 0x7d V12
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x44
[0x44:0x4e]
---
Predecessors: [0x39]
Successors: [0x4f, 0xca]
---
0x44 DUP1
0x45 PUSH4 0xa9059cbb
0x4a EQ
0x4b PUSH2 0xca
0x4e JUMPI
---
0x45: V14 = 0xa9059cbb
0x4a: V15 = EQ 0xa9059cbb V7
0x4b: V16 = 0xca
0x4e: JUMPI 0xca V15
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x4f
[0x4f:0x53]
---
Predecessors: [0x44]
Successors: []
---
0x4f JUMPDEST
0x50 PUSH1 0x0
0x52 DUP1
0x53 REVERT
---
0x4f: JUMPDEST 
0x50: V17 = 0x0
0x53: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x54
[0x54:0x5a]
---
Predecessors: [0x0]
Successors: [0x5b, 0x5f]
---
0x54 JUMPDEST
0x55 CALLVALUE
0x56 ISZERO
0x57 PUSH2 0x5f
0x5a JUMPI
---
0x54: JUMPDEST 
0x55: V18 = CALLVALUE
0x56: V19 = ISZERO V18
0x57: V20 = 0x5f
0x5a: JUMPI 0x5f V19
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x5b
[0x5b:0x5e]
---
Predecessors: [0x54]
Successors: []
---
0x5b PUSH1 0x0
0x5d DUP1
0x5e REVERT
---
0x5b: V21 = 0x0
0x5e: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x5f
[0x5f:0x66]
---
Predecessors: [0x54]
Successors: [0x124]
---
0x5f JUMPDEST
0x60 PUSH2 0x67
0x63 PUSH2 0x124
0x66 JUMP
---
0x5f: JUMPDEST 
0x60: V22 = 0x67
0x63: V23 = 0x124
0x66: JUMP 0x124
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x67]
Exit stack: [V7, 0x67]

================================

Block 0x67
[0x67:0x7c]
---
Predecessors: [0x124]
Successors: []
---
0x67 JUMPDEST
0x68 PUSH1 0x40
0x6a MLOAD
0x6b DUP1
0x6c DUP3
0x6d DUP2
0x6e MSTORE
0x6f PUSH1 0x20
0x71 ADD
0x72 SWAP2
0x73 POP
0x74 POP
0x75 PUSH1 0x40
0x77 MLOAD
0x78 DUP1
0x79 SWAP2
0x7a SUB
0x7b SWAP1
0x7c RETURN
---
0x67: JUMPDEST 
0x68: V24 = 0x40
0x6a: V25 = M[0x40]
0x6e: M[V25] = V77
0x6f: V26 = 0x20
0x71: V27 = ADD 0x20 V25
0x75: V28 = 0x40
0x77: V29 = M[0x40]
0x7a: V30 = SUB V27 V29
0x7c: RETURN V29 V30
---
Entry stack: [V7, 0x67, V77]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0x67]

================================

Block 0x7d
[0x7d:0x83]
---
Predecessors: [0x39]
Successors: [0x84, 0x88]
---
0x7d JUMPDEST
0x7e CALLVALUE
0x7f ISZERO
0x80 PUSH2 0x88
0x83 JUMPI
---
0x7d: JUMPDEST 
0x7e: V31 = CALLVALUE
0x7f: V32 = ISZERO V31
0x80: V33 = 0x88
0x83: JUMPI 0x88 V32
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x84
[0x84:0x87]
---
Predecessors: [0x7d]
Successors: []
---
0x84 PUSH1 0x0
0x86 DUP1
0x87 REVERT
---
0x84: V34 = 0x0
0x87: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x88
[0x88:0xb3]
---
Predecessors: [0x7d]
Successors: [0x12a]
---
0x88 JUMPDEST
0x89 PUSH2 0xb4
0x8c PUSH1 0x4
0x8e DUP1
0x8f DUP1
0x90 CALLDATALOAD
0x91 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa6 AND
0xa7 SWAP1
0xa8 PUSH1 0x20
0xaa ADD
0xab SWAP1
0xac SWAP2
0xad SWAP1
0xae POP
0xaf POP
0xb0 PUSH2 0x12a
0xb3 JUMP
---
0x88: JUMPDEST 
0x89: V35 = 0xb4
0x8c: V36 = 0x4
0x90: V37 = CALLDATALOAD 0x4
0x91: V38 = 0xffffffffffffffffffffffffffffffffffffffff
0xa6: V39 = AND 0xffffffffffffffffffffffffffffffffffffffff V37
0xa8: V40 = 0x20
0xaa: V41 = ADD 0x20 0x4
0xb0: V42 = 0x12a
0xb3: JUMP 0x12a
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0xb4, V39]
Exit stack: [V7, 0xb4, V39]

================================

Block 0xb4
[0xb4:0xc9]
---
Predecessors: [0x16f]
Successors: []
---
0xb4 JUMPDEST
0xb5 PUSH1 0x40
0xb7 MLOAD
0xb8 DUP1
0xb9 DUP3
0xba DUP2
0xbb MSTORE
0xbc PUSH1 0x20
0xbe ADD
0xbf SWAP2
0xc0 POP
0xc1 POP
0xc2 PUSH1 0x40
0xc4 MLOAD
0xc5 DUP1
0xc6 SWAP2
0xc7 SUB
0xc8 SWAP1
0xc9 RETURN
---
0xb4: JUMPDEST 
0xb5: V43 = 0x40
0xb7: V44 = M[0x40]
0xbb: M[V44] = V91
0xbc: V45 = 0x20
0xbe: V46 = ADD 0x20 V44
0xc2: V47 = 0x40
0xc4: V48 = M[0x40]
0xc7: V49 = SUB V46 V48
0xc9: RETURN V48 V49
---
Entry stack: [V7, V91]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Block 0xca
[0xca:0xd0]
---
Predecessors: [0x44]
Successors: [0xd1, 0xd5]
---
0xca JUMPDEST
0xcb CALLVALUE
0xcc ISZERO
0xcd PUSH2 0xd5
0xd0 JUMPI
---
0xca: JUMPDEST 
0xcb: V50 = CALLVALUE
0xcc: V51 = ISZERO V50
0xcd: V52 = 0xd5
0xd0: JUMPI 0xd5 V51
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xd1
[0xd1:0xd4]
---
Predecessors: [0xca]
Successors: []
---
0xd1 PUSH1 0x0
0xd3 DUP1
0xd4 REVERT
---
0xd1: V53 = 0x0
0xd4: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xd5
[0xd5:0x109]
---
Predecessors: [0xca, 0x1052]
Successors: [0x174]
---
0xd5 JUMPDEST
0xd6 PUSH2 0x10a
0xd9 PUSH1 0x4
0xdb DUP1
0xdc DUP1
0xdd CALLDATALOAD
0xde PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf3 AND
0xf4 SWAP1
0xf5 PUSH1 0x20
0xf7 ADD
0xf8 SWAP1
0xf9 SWAP2
0xfa SWAP1
0xfb DUP1
0xfc CALLDATALOAD
0xfd SWAP1
0xfe PUSH1 0x20
0x100 ADD
0x101 SWAP1
0x102 SWAP2
0x103 SWAP1
0x104 POP
0x105 POP
0x106 PUSH2 0x174
0x109 JUMP
---
0xd5: JUMPDEST 
0xd6: V54 = 0x10a
0xd9: V55 = 0x4
0xdd: V56 = CALLDATALOAD 0x4
0xde: V57 = 0xffffffffffffffffffffffffffffffffffffffff
0xf3: V58 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0xf5: V59 = 0x20
0xf7: V60 = ADD 0x20 0x4
0xfc: V61 = CALLDATALOAD 0x24
0xfe: V62 = 0x20
0x100: V63 = ADD 0x20 0x24
0x106: V64 = 0x174
0x109: JUMP 0x174
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [0x10a, V58, V61]
Exit stack: [S0, 0x10a, V58, V61]

================================

Block 0x10a
[0x10a:0x123]
---
Predecessors: [0x30a]
Successors: []
---
0x10a JUMPDEST
0x10b PUSH1 0x40
0x10d MLOAD
0x10e DUP1
0x10f DUP3
0x110 ISZERO
0x111 ISZERO
0x112 ISZERO
0x113 ISZERO
0x114 DUP2
0x115 MSTORE
0x116 PUSH1 0x20
0x118 ADD
0x119 SWAP2
0x11a POP
0x11b POP
0x11c PUSH1 0x40
0x11e MLOAD
0x11f DUP1
0x120 SWAP2
0x121 SUB
0x122 SWAP1
0x123 RETURN
---
0x10a: JUMPDEST 
0x10b: V65 = 0x40
0x10d: V66 = M[0x40]
0x110: V67 = ISZERO 0x1
0x111: V68 = ISZERO 0x0
0x112: V69 = ISZERO 0x1
0x113: V70 = ISZERO 0x0
0x115: M[V66] = 0x1
0x116: V71 = 0x20
0x118: V72 = ADD 0x20 V66
0x11c: V73 = 0x40
0x11e: V74 = M[0x40]
0x121: V75 = SUB V72 V74
0x123: RETURN V74 V75
---
Entry stack: [S1, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [S1]

================================

Block 0x124
[0x124:0x129]
---
Predecessors: [0x5f]
Successors: [0x67]
---
0x124 JUMPDEST
0x125 PUSH1 0x0
0x127 SLOAD
0x128 DUP2
0x129 JUMP
---
0x124: JUMPDEST 
0x125: V76 = 0x0
0x127: V77 = S[0x0]
0x129: JUMP 0x67
---
Entry stack: [V7, 0x67]
Stack pops: 1
Stack additions: [S0, V77]
Exit stack: [V7, 0x67, V77]

================================

Block 0x12a
[0x12a:0x16e]
---
Predecessors: [0x88]
Successors: [0x16f]
---
0x12a JUMPDEST
0x12b PUSH1 0x0
0x12d PUSH1 0x1
0x12f PUSH1 0x0
0x131 DUP4
0x132 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x147 AND
0x148 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15d AND
0x15e DUP2
0x15f MSTORE
0x160 PUSH1 0x20
0x162 ADD
0x163 SWAP1
0x164 DUP2
0x165 MSTORE
0x166 PUSH1 0x20
0x168 ADD
0x169 PUSH1 0x0
0x16b SHA3
0x16c SLOAD
0x16d SWAP1
0x16e POP
---
0x12a: JUMPDEST 
0x12b: V78 = 0x0
0x12d: V79 = 0x1
0x12f: V80 = 0x0
0x132: V81 = 0xffffffffffffffffffffffffffffffffffffffff
0x147: V82 = AND 0xffffffffffffffffffffffffffffffffffffffff V39
0x148: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x15d: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V82
0x15f: M[0x0] = V84
0x160: V85 = 0x20
0x162: V86 = ADD 0x20 0x0
0x165: M[0x20] = 0x1
0x166: V87 = 0x20
0x168: V88 = ADD 0x20 0x20
0x169: V89 = 0x0
0x16b: V90 = SHA3 0x0 0x40
0x16c: V91 = S[V90]
---
Entry stack: [V7, 0xb4, V39]
Stack pops: 1
Stack additions: [S0, V91]
Exit stack: [V7, 0xb4, V39, V91]

================================

Block 0x16f
[0x16f:0x173]
---
Predecessors: [0x12a]
Successors: [0xb4]
---
0x16f JUMPDEST
0x170 SWAP2
0x171 SWAP1
0x172 POP
0x173 JUMP
---
0x16f: JUMPDEST 
0x173: JUMP 0xb4
---
Entry stack: [V7, 0xb4, V39, V91]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V7, V91]

================================

Block 0x174
[0x174:0x1c7]
---
Predecessors: [0xd5]
Successors: [0x310]
---
0x174 JUMPDEST
0x175 PUSH1 0x0
0x177 PUSH2 0x1c8
0x17a DUP3
0x17b PUSH1 0x1
0x17d PUSH1 0x0
0x17f CALLER
0x180 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x195 AND
0x196 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ab AND
0x1ac DUP2
0x1ad MSTORE
0x1ae PUSH1 0x20
0x1b0 ADD
0x1b1 SWAP1
0x1b2 DUP2
0x1b3 MSTORE
0x1b4 PUSH1 0x20
0x1b6 ADD
0x1b7 PUSH1 0x0
0x1b9 SHA3
0x1ba SLOAD
0x1bb PUSH2 0x310
0x1be SWAP1
0x1bf SWAP2
0x1c0 SWAP1
0x1c1 PUSH4 0xffffffff
0x1c6 AND
0x1c7 JUMP
---
0x174: JUMPDEST 
0x175: V92 = 0x0
0x177: V93 = 0x1c8
0x17b: V94 = 0x1
0x17d: V95 = 0x0
0x17f: V96 = CALLER
0x180: V97 = 0xffffffffffffffffffffffffffffffffffffffff
0x195: V98 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x196: V99 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ab: V100 = AND 0xffffffffffffffffffffffffffffffffffffffff V98
0x1ad: M[0x0] = V100
0x1ae: V101 = 0x20
0x1b0: V102 = ADD 0x20 0x0
0x1b3: M[0x20] = 0x1
0x1b4: V103 = 0x20
0x1b6: V104 = ADD 0x20 0x20
0x1b7: V105 = 0x0
0x1b9: V106 = SHA3 0x0 0x40
0x1ba: V107 = S[V106]
0x1bb: V108 = 0x310
0x1c1: V109 = 0xffffffff
0x1c6: V110 = AND 0xffffffff 0x310
0x1c7: JUMP 0x310
---
Entry stack: [S3, 0x10a, V58, V61]
Stack pops: 1
Stack additions: [S0, 0x0, 0x1c8, V107, S0]
Exit stack: [S3, 0x10a, V58, V61, 0x0, 0x1c8, V107, V61]

================================

Block 0x1c8
[0x1c8:0x25c]
---
Predecessors: [0x324]
Successors: [0x32a]
---
0x1c8 JUMPDEST
0x1c9 PUSH1 0x1
0x1cb PUSH1 0x0
0x1cd CALLER
0x1ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e3 AND
0x1e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f9 AND
0x1fa DUP2
0x1fb MSTORE
0x1fc PUSH1 0x20
0x1fe ADD
0x1ff SWAP1
0x200 DUP2
0x201 MSTORE
0x202 PUSH1 0x20
0x204 ADD
0x205 PUSH1 0x0
0x207 SHA3
0x208 DUP2
0x209 SWAP1
0x20a SSTORE
0x20b POP
0x20c PUSH2 0x25d
0x20f DUP3
0x210 PUSH1 0x1
0x212 PUSH1 0x0
0x214 DUP7
0x215 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22a AND
0x22b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x240 AND
0x241 DUP2
0x242 MSTORE
0x243 PUSH1 0x20
0x245 ADD
0x246 SWAP1
0x247 DUP2
0x248 MSTORE
0x249 PUSH1 0x20
0x24b ADD
0x24c PUSH1 0x0
0x24e SHA3
0x24f SLOAD
0x250 PUSH2 0x32a
0x253 SWAP1
0x254 SWAP2
0x255 SWAP1
0x256 PUSH4 0xffffffff
0x25b AND
0x25c JUMP
---
0x1c8: JUMPDEST 
0x1c9: V111 = 0x1
0x1cb: V112 = 0x0
0x1cd: V113 = CALLER
0x1ce: V114 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e3: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x1e4: V116 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f9: V117 = AND 0xffffffffffffffffffffffffffffffffffffffff V115
0x1fb: M[0x0] = V117
0x1fc: V118 = 0x20
0x1fe: V119 = ADD 0x20 0x0
0x201: M[0x20] = 0x1
0x202: V120 = 0x20
0x204: V121 = ADD 0x20 0x20
0x205: V122 = 0x0
0x207: V123 = SHA3 0x0 0x40
0x20a: S[V123] = V173
0x20c: V124 = 0x25d
0x210: V125 = 0x1
0x212: V126 = 0x0
0x215: V127 = 0xffffffffffffffffffffffffffffffffffffffff
0x22a: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V58
0x22b: V129 = 0xffffffffffffffffffffffffffffffffffffffff
0x240: V130 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x242: M[0x0] = V130
0x243: V131 = 0x20
0x245: V132 = ADD 0x20 0x0
0x248: M[0x20] = 0x1
0x249: V133 = 0x20
0x24b: V134 = ADD 0x20 0x20
0x24c: V135 = 0x0
0x24e: V136 = SHA3 0x0 0x40
0x24f: V137 = S[V136]
0x250: V138 = 0x32a
0x256: V139 = 0xffffffff
0x25b: V140 = AND 0xffffffff 0x32a
0x25c: JUMP 0x32a
---
Entry stack: [S5, 0x10a, V58, V61, 0x0, V173]
Stack pops: 4
Stack additions: [S3, S2, S1, 0x25d, V137, S2]
Exit stack: [S5, 0x10a, V58, V61, 0x0, 0x25d, V137, V61]

================================

Block 0x25d
[0x25d:0x309]
---
Predecessors: [0x342]
Successors: [0x30a]
---
0x25d JUMPDEST
0x25e PUSH1 0x1
0x260 PUSH1 0x0
0x262 DUP6
0x263 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x278 AND
0x279 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28e AND
0x28f DUP2
0x290 MSTORE
0x291 PUSH1 0x20
0x293 ADD
0x294 SWAP1
0x295 DUP2
0x296 MSTORE
0x297 PUSH1 0x20
0x299 ADD
0x29a PUSH1 0x0
0x29c SHA3
0x29d DUP2
0x29e SWAP1
0x29f SSTORE
0x2a0 POP
0x2a1 DUP3
0x2a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b7 AND
0x2b8 CALLER
0x2b9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ce AND
0x2cf PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x2f0 DUP5
0x2f1 PUSH1 0x40
0x2f3 MLOAD
0x2f4 DUP1
0x2f5 DUP3
0x2f6 DUP2
0x2f7 MSTORE
0x2f8 PUSH1 0x20
0x2fa ADD
0x2fb SWAP2
0x2fc POP
0x2fd POP
0x2fe PUSH1 0x40
0x300 MLOAD
0x301 DUP1
0x302 SWAP2
0x303 SUB
0x304 SWAP1
0x305 LOG3
0x306 PUSH1 0x1
0x308 SWAP1
0x309 POP
---
0x25d: JUMPDEST 
0x25e: V141 = 0x1
0x260: V142 = 0x0
0x263: V143 = 0xffffffffffffffffffffffffffffffffffffffff
0x278: V144 = AND 0xffffffffffffffffffffffffffffffffffffffff V58
0x279: V145 = 0xffffffffffffffffffffffffffffffffffffffff
0x28e: V146 = AND 0xffffffffffffffffffffffffffffffffffffffff V144
0x290: M[0x0] = V146
0x291: V147 = 0x20
0x293: V148 = ADD 0x20 0x0
0x296: M[0x20] = 0x1
0x297: V149 = 0x20
0x299: V150 = ADD 0x20 0x20
0x29a: V151 = 0x0
0x29c: V152 = SHA3 0x0 0x40
0x29f: S[V152] = V175
0x2a2: V153 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b7: V154 = AND 0xffffffffffffffffffffffffffffffffffffffff V58
0x2b8: V155 = CALLER
0x2b9: V156 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ce: V157 = AND 0xffffffffffffffffffffffffffffffffffffffff V155
0x2cf: V158 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x2f1: V159 = 0x40
0x2f3: V160 = M[0x40]
0x2f7: M[V160] = V61
0x2f8: V161 = 0x20
0x2fa: V162 = ADD 0x20 V160
0x2fe: V163 = 0x40
0x300: V164 = M[0x40]
0x303: V165 = SUB V162 V164
0x305: LOG V164 V165 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V157 V154
0x306: V166 = 0x1
---
Entry stack: [S5, 0x10a, V58, V61, 0x0, V175]
Stack pops: 4
Stack additions: [S3, S2, 0x1]
Exit stack: [S5, 0x10a, V58, V61, 0x1]

================================

Block 0x30a
[0x30a:0x30f]
---
Predecessors: [0x25d]
Successors: [0x10a]
---
0x30a JUMPDEST
0x30b SWAP3
0x30c SWAP2
0x30d POP
0x30e POP
0x30f JUMP
---
0x30a: JUMPDEST 
0x30f: JUMP 0x10a
---
Entry stack: [S4, 0x10a, V58, V61, 0x1]
Stack pops: 4
Stack additions: [S0]
Exit stack: [S4, 0x1]

================================

Block 0x310
[0x310:0x31c]
---
Predecessors: [0x174]
Successors: [0x31d, 0x31e]
---
0x310 JUMPDEST
0x311 PUSH1 0x0
0x313 DUP3
0x314 DUP3
0x315 GT
0x316 ISZERO
0x317 ISZERO
0x318 ISZERO
0x319 PUSH2 0x31e
0x31c JUMPI
---
0x310: JUMPDEST 
0x311: V167 = 0x0
0x315: V168 = GT V61 V107
0x316: V169 = ISZERO V168
0x317: V170 = ISZERO V169
0x318: V171 = ISZERO V170
0x319: V172 = 0x31e
0x31c: JUMPI 0x31e V171
---
Entry stack: [S7, 0x10a, V58, V61, 0x0, 0x1c8, V107, V61]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [S7, 0x10a, V58, V61, 0x0, 0x1c8, V107, V61, 0x0]

================================

Block 0x31d
[0x31d:0x31d]
---
Predecessors: [0x310]
Successors: []
---
0x31d INVALID
---
0x31d: INVALID 
---
Entry stack: [S8, 0x10a, V58, V61, 0x0, 0x1c8, V107, V61, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [S8, 0x10a, V58, V61, 0x0, 0x1c8, V107, V61, 0x0]

================================

Block 0x31e
[0x31e:0x323]
---
Predecessors: [0x310]
Successors: [0x324]
---
0x31e JUMPDEST
0x31f DUP2
0x320 DUP4
0x321 SUB
0x322 SWAP1
0x323 POP
---
0x31e: JUMPDEST 
0x321: V173 = SUB V107 V61
---
Entry stack: [S8, 0x10a, V58, V61, 0x0, 0x1c8, V107, V61, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V173]
Exit stack: [S8, 0x10a, V58, V61, 0x0, 0x1c8, V107, V61, V173]

================================

Block 0x324
[0x324:0x329]
---
Predecessors: [0x31e]
Successors: [0x1c8]
---
0x324 JUMPDEST
0x325 SWAP3
0x326 SWAP2
0x327 POP
0x328 POP
0x329 JUMP
---
0x324: JUMPDEST 
0x329: JUMP 0x1c8
---
Entry stack: [S8, 0x10a, V58, V61, 0x0, 0x1c8, V107, V61, V173]
Stack pops: 4
Stack additions: [S0]
Exit stack: [S8, 0x10a, V58, V61, 0x0, V173]

================================

Block 0x32a
[0x32a:0x33c]
---
Predecessors: [0x1c8]
Successors: [0x33d, 0x33e]
---
0x32a JUMPDEST
0x32b PUSH1 0x0
0x32d DUP1
0x32e DUP3
0x32f DUP5
0x330 ADD
0x331 SWAP1
0x332 POP
0x333 DUP4
0x334 DUP2
0x335 LT
0x336 ISZERO
0x337 ISZERO
0x338 ISZERO
0x339 PUSH2 0x33e
0x33c JUMPI
---
0x32a: JUMPDEST 
0x32b: V174 = 0x0
0x330: V175 = ADD V137 V61
0x335: V176 = LT V175 V137
0x336: V177 = ISZERO V176
0x337: V178 = ISZERO V177
0x338: V179 = ISZERO V178
0x339: V180 = 0x33e
0x33c: JUMPI 0x33e V179
---
Entry stack: [S7, 0x10a, V58, V61, 0x0, 0x25d, V137, V61]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V175]
Exit stack: [S7, 0x10a, V58, V61, 0x0, 0x25d, V137, V61, 0x0, V175]

================================

Block 0x33d
[0x33d:0x33d]
---
Predecessors: [0x32a]
Successors: []
---
0x33d INVALID
---
0x33d: INVALID 
---
Entry stack: [S9, 0x10a, V58, V61, 0x0, 0x25d, V137, V61, 0x0, V175]
Stack pops: 0
Stack additions: []
Exit stack: [S9, 0x10a, V58, V61, 0x0, 0x25d, V137, V61, 0x0, V175]

================================

Block 0x33e
[0x33e:0x341]
---
Predecessors: [0x32a]
Successors: [0x342]
---
0x33e JUMPDEST
0x33f DUP1
0x340 SWAP2
0x341 POP
---
0x33e: JUMPDEST 
---
Entry stack: [S9, 0x10a, V58, V61, 0x0, 0x25d, V137, V61, 0x0, V175]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [S9, 0x10a, V58, V61, 0x0, 0x25d, V137, V61, V175, V175]

================================

Block 0x342
[0x342:0x348]
---
Predecessors: [0x33e]
Successors: [0x25d]
---
0x342 JUMPDEST
0x343 POP
0x344 SWAP3
0x345 SWAP2
0x346 POP
0x347 POP
0x348 JUMP
---
0x342: JUMPDEST 
0x348: JUMP 0x25d
---
Entry stack: [S9, 0x10a, V58, V61, 0x0, 0x25d, V137, V61, V175, V175]
Stack pops: 5
Stack additions: [S1]
Exit stack: [S9, 0x10a, V58, V61, 0x0, V175]

================================

Block 0x349
[0x349:0x37f]
---
Predecessors: []
Successors: [0x380]
---
0x349 STOP
0x34a LOG1
0x34b PUSH6 0x627a7a723058
0x352 SHA3
0x353 RETURNDATASIZE
0x354 LOG0
0x355 MISSING 0xf6
0x356 LT
0x357 EXTCODEHASH
0x358 MISSING 0x2f
0x359 MISSING 0xe7
0x35a PUSH20 0x385bed339e548acb51b64ef62e1729c94c5541db
0x36f PUSH15 0x2a7b440029606060405236156100a2
0x37f JUMPI
---
0x349: STOP 
0x34a: LOG S0 S1 S2
0x34b: V181 = 0x627a7a723058
0x352: V182 = SHA3 0x627a7a723058 S3
0x353: V183 = RETURNDATASIZE
0x354: LOG V183 V182
0x355: MISSING 0xf6
0x356: V184 = LT S0 S1
0x357: V185 = EXTCODEHASH V184
0x358: MISSING 0x2f
0x359: MISSING 0xe7
0x35a: V186 = 0x385bed339e548acb51b64ef62e1729c94c5541db
0x36f: V187 = 0x2a7b440029606060405236156100a2
0x37f: THROWI 0x385bed339e548acb51b64ef62e1729c94c5541db
---
Entry stack: []
Stack pops: 0
Stack additions: [V185]
Exit stack: []

================================

Block 0x380
[0x380:0x3b3]
---
Predecessors: [0x349]
Successors: [0x3b4]
---
0x380 PUSH1 0x0
0x382 CALLDATALOAD
0x383 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x3a1 SWAP1
0x3a2 DIV
0x3a3 PUSH4 0xffffffff
0x3a8 AND
0x3a9 DUP1
0x3aa PUSH4 0x6fdde03
0x3af EQ
0x3b0 PUSH2 0xba
0x3b3 JUMPI
---
0x380: V188 = 0x0
0x382: V189 = CALLDATALOAD 0x0
0x383: V190 = 0x100000000000000000000000000000000000000000000000000000000
0x3a2: V191 = DIV V189 0x100000000000000000000000000000000000000000000000000000000
0x3a3: V192 = 0xffffffff
0x3a8: V193 = AND 0xffffffff V191
0x3aa: V194 = 0x6fdde03
0x3af: V195 = EQ 0x6fdde03 V193
0x3b0: V196 = 0xba
0x3b3: THROWI V195
---
Entry stack: []
Stack pops: 0
Stack additions: [V193]
Exit stack: [V193]

================================

Block 0x3b4
[0x3b4:0x3be]
---
Predecessors: [0x380]
Successors: [0x3bf]
---
0x3b4 DUP1
0x3b5 PUSH4 0x95ea7b3
0x3ba EQ
0x3bb PUSH2 0x149
0x3be JUMPI
---
0x3b5: V197 = 0x95ea7b3
0x3ba: V198 = EQ 0x95ea7b3 V193
0x3bb: V199 = 0x149
0x3be: THROWI V198
---
Entry stack: [V193]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V193]

================================

Block 0x3bf
[0x3bf:0x3c9]
---
Predecessors: [0x3b4]
Successors: [0x3ca]
---
0x3bf DUP1
0x3c0 PUSH4 0x18160ddd
0x3c5 EQ
0x3c6 PUSH2 0x1a3
0x3c9 JUMPI
---
0x3c0: V200 = 0x18160ddd
0x3c5: V201 = EQ 0x18160ddd V193
0x3c6: V202 = 0x1a3
0x3c9: THROWI V201
---
Entry stack: [V193]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V193]

================================

Block 0x3ca
[0x3ca:0x3d4]
---
Predecessors: [0x3bf]
Successors: [0x3d5]
---
0x3ca DUP1
0x3cb PUSH4 0x23b872dd
0x3d0 EQ
0x3d1 PUSH2 0x1cc
0x3d4 JUMPI
---
0x3cb: V203 = 0x23b872dd
0x3d0: V204 = EQ 0x23b872dd V193
0x3d1: V205 = 0x1cc
0x3d4: THROWI V204
---
Entry stack: [V193]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V193]

================================

Block 0x3d5
[0x3d5:0x3df]
---
Predecessors: [0x3ca]
Successors: [0x3e0]
---
0x3d5 DUP1
0x3d6 PUSH4 0x313ce567
0x3db EQ
0x3dc PUSH2 0x245
0x3df JUMPI
---
0x3d6: V206 = 0x313ce567
0x3db: V207 = EQ 0x313ce567 V193
0x3dc: V208 = 0x245
0x3df: THROWI V207
---
Entry stack: [V193]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V193]

================================

Block 0x3e0
[0x3e0:0x3ea]
---
Predecessors: [0x3d5]
Successors: [0x3eb]
---
0x3e0 DUP1
0x3e1 PUSH4 0x54fd4d50
0x3e6 EQ
0x3e7 PUSH2 0x26e
0x3ea JUMPI
---
0x3e1: V209 = 0x54fd4d50
0x3e6: V210 = EQ 0x54fd4d50 V193
0x3e7: V211 = 0x26e
0x3ea: THROWI V210
---
Entry stack: [V193]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V193]

================================

Block 0x3eb
[0x3eb:0x3f5]
---
Predecessors: [0x3e0]
Successors: [0x3f6]
---
0x3eb DUP1
0x3ec PUSH4 0x70a08231
0x3f1 EQ
0x3f2 PUSH2 0x2fd
0x3f5 JUMPI
---
0x3ec: V212 = 0x70a08231
0x3f1: V213 = EQ 0x70a08231 V193
0x3f2: V214 = 0x2fd
0x3f5: THROWI V213
---
Entry stack: [V193]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V193]

================================

Block 0x3f6
[0x3f6:0x400]
---
Predecessors: [0x3eb]
Successors: [0x401]
---
0x3f6 DUP1
0x3f7 PUSH4 0x95d89b41
0x3fc EQ
0x3fd PUSH2 0x34a
0x400 JUMPI
---
0x3f7: V215 = 0x95d89b41
0x3fc: V216 = EQ 0x95d89b41 V193
0x3fd: V217 = 0x34a
0x400: THROWI V216
---
Entry stack: [V193]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V193]

================================

Block 0x401
[0x401:0x40b]
---
Predecessors: [0x3f6]
Successors: [0x40c]
---
0x401 DUP1
0x402 PUSH4 0xa9059cbb
0x407 EQ
0x408 PUSH2 0x3d9
0x40b JUMPI
---
0x402: V218 = 0xa9059cbb
0x407: V219 = EQ 0xa9059cbb V193
0x408: V220 = 0x3d9
0x40b: THROWI V219
---
Entry stack: [V193]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V193]

================================

Block 0x40c
[0x40c:0x416]
---
Predecessors: [0x401]
Successors: [0x417]
---
0x40c DUP1
0x40d PUSH4 0xdd62ed3e
0x412 EQ
0x413 PUSH2 0x433
0x416 JUMPI
---
0x40d: V221 = 0xdd62ed3e
0x412: V222 = EQ 0xdd62ed3e V193
0x413: V223 = 0x433
0x416: THROWI V222
---
Entry stack: [V193]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V193]

================================

Block 0x417
[0x417:0x41d]
---
Predecessors: [0x40c]
Successors: [0x41e]
---
0x417 JUMPDEST
0x418 CALLVALUE
0x419 ISZERO
0x41a PUSH2 0xad
0x41d JUMPI
---
0x417: JUMPDEST 
0x418: V224 = CALLVALUE
0x419: V225 = ISZERO V224
0x41a: V226 = 0xad
0x41d: THROWI V225
---
Entry stack: [V193]
Stack pops: 0
Stack additions: []
Exit stack: [V193]

================================

Block 0x41e
[0x41e:0x425]
---
Predecessors: [0x417]
Successors: [0x426]
---
0x41e PUSH1 0x0
0x420 DUP1
0x421 REVERT
0x422 JUMPDEST
0x423 PUSH2 0xb8
---
0x41e: V227 = 0x0
0x421: REVERT 0x0 0x0
0x422: JUMPDEST 
0x423: V228 = 0xb8
---
Entry stack: [V193]
Stack pops: 0
Stack additions: [0xb8]
Exit stack: []

================================

Block 0x426
[0x426:0x435]
---
Predecessors: [0x41e]
Successors: [0x436]
---
0x426 JUMPDEST
0x427 PUSH1 0x0
0x429 DUP1
0x42a REVERT
0x42b JUMPDEST
0x42c JUMP
0x42d JUMPDEST
0x42e STOP
0x42f JUMPDEST
0x430 CALLVALUE
0x431 ISZERO
0x432 PUSH2 0xc5
0x435 JUMPI
---
0x426: JUMPDEST 
0x427: V229 = 0x0
0x42a: REVERT 0x0 0x0
0x42b: JUMPDEST 
0x42c: JUMP S0
0x42d: JUMPDEST 
0x42e: STOP 
0x42f: JUMPDEST 
0x430: V230 = CALLVALUE
0x431: V231 = ISZERO V230
0x432: V232 = 0xc5
0x435: THROWI V231
---
Entry stack: [0xb8]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x436
[0x436:0x466]
---
Predecessors: [0x426]
Successors: [0x467]
---
0x436 PUSH1 0x0
0x438 DUP1
0x439 REVERT
0x43a JUMPDEST
0x43b PUSH2 0xcd
0x43e PUSH2 0x49f
0x441 JUMP
0x442 JUMPDEST
0x443 PUSH1 0x40
0x445 MLOAD
0x446 DUP1
0x447 DUP1
0x448 PUSH1 0x20
0x44a ADD
0x44b DUP3
0x44c DUP2
0x44d SUB
0x44e DUP3
0x44f MSTORE
0x450 DUP4
0x451 DUP2
0x452 DUP2
0x453 MLOAD
0x454 DUP2
0x455 MSTORE
0x456 PUSH1 0x20
0x458 ADD
0x459 SWAP2
0x45a POP
0x45b DUP1
0x45c MLOAD
0x45d SWAP1
0x45e PUSH1 0x20
0x460 ADD
0x461 SWAP1
0x462 DUP1
0x463 DUP4
0x464 DUP4
0x465 PUSH1 0x0
---
0x436: V233 = 0x0
0x439: REVERT 0x0 0x0
0x43a: JUMPDEST 
0x43b: V234 = 0xcd
0x43e: V235 = 0x49f
0x441: THROW 
0x442: JUMPDEST 
0x443: V236 = 0x40
0x445: V237 = M[0x40]
0x448: V238 = 0x20
0x44a: V239 = ADD 0x20 V237
0x44d: V240 = SUB V239 V237
0x44f: M[V237] = V240
0x453: V241 = M[S0]
0x455: M[V239] = V241
0x456: V242 = 0x20
0x458: V243 = ADD 0x20 V239
0x45c: V244 = M[S0]
0x45e: V245 = 0x20
0x460: V246 = ADD 0x20 S0
0x465: V247 = 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: [0xcd, 0x0, V246, V243, V244, V244, V246, V243, V237, V237, S0]
Exit stack: []

================================

Block 0x467
[0x467:0x46f]
---
Predecessors: [0x436]
Successors: [0x470]
---
0x467 JUMPDEST
0x468 DUP4
0x469 DUP2
0x46a LT
0x46b ISZERO
0x46c PUSH2 0x10e
0x46f JUMPI
---
0x467: JUMPDEST 
0x46a: V248 = LT 0x0 V244
0x46b: V249 = ISZERO V248
0x46c: V250 = 0x10e
0x46f: THROWI V249
---
Entry stack: [S9, V237, V237, V243, V246, V244, V244, V243, V246, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V237, V237, V243, V246, V244, V244, V243, V246, 0x0]

================================

Block 0x470
[0x470:0x477]
---
Predecessors: [0x467]
Successors: [0x478]
---
0x470 DUP1
0x471 DUP3
0x472 ADD
0x473 MLOAD
0x474 DUP2
0x475 DUP5
0x476 ADD
0x477 MSTORE
---
0x472: V251 = ADD V246 0x0
0x473: V252 = M[V251]
0x476: V253 = ADD V243 0x0
0x477: M[V253] = V252
---
Entry stack: [S9, V237, V237, V243, V246, V244, V244, V243, V246, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S9, V237, V237, V243, V246, V244, V244, V243, V246, 0x0]

================================

Block 0x478
[0x478:0x496]
---
Predecessors: [0x470]
Successors: [0x497]
---
0x478 JUMPDEST
0x479 PUSH1 0x20
0x47b DUP2
0x47c ADD
0x47d SWAP1
0x47e POP
0x47f PUSH2 0xf2
0x482 JUMP
0x483 JUMPDEST
0x484 POP
0x485 POP
0x486 POP
0x487 POP
0x488 SWAP1
0x489 POP
0x48a SWAP1
0x48b DUP2
0x48c ADD
0x48d SWAP1
0x48e PUSH1 0x1f
0x490 AND
0x491 DUP1
0x492 ISZERO
0x493 PUSH2 0x13b
0x496 JUMPI
---
0x478: JUMPDEST 
0x479: V254 = 0x20
0x47c: V255 = ADD 0x0 0x20
0x47f: V256 = 0xf2
0x482: THROW 
0x483: JUMPDEST 
0x48c: V257 = ADD S4 S6
0x48e: V258 = 0x1f
0x490: V259 = AND 0x1f S4
0x492: V260 = ISZERO V259
0x493: V261 = 0x13b
0x496: THROWI V260
---
Entry stack: [S9, V237, V237, V243, V246, V244, V244, V243, V246, 0x0]
Stack pops: 1
Stack additions: [V259, V257]
Exit stack: []

================================

Block 0x497
[0x497:0x4af]
---
Predecessors: [0x478]
Successors: [0x4b0]
---
0x497 DUP1
0x498 DUP3
0x499 SUB
0x49a DUP1
0x49b MLOAD
0x49c PUSH1 0x1
0x49e DUP4
0x49f PUSH1 0x20
0x4a1 SUB
0x4a2 PUSH2 0x100
0x4a5 EXP
0x4a6 SUB
0x4a7 NOT
0x4a8 AND
0x4a9 DUP2
0x4aa MSTORE
0x4ab PUSH1 0x20
0x4ad ADD
0x4ae SWAP2
0x4af POP
---
0x499: V262 = SUB V257 V259
0x49b: V263 = M[V262]
0x49c: V264 = 0x1
0x49f: V265 = 0x20
0x4a1: V266 = SUB 0x20 V259
0x4a2: V267 = 0x100
0x4a5: V268 = EXP 0x100 V266
0x4a6: V269 = SUB V268 0x1
0x4a7: V270 = NOT V269
0x4a8: V271 = AND V270 V263
0x4aa: M[V262] = V271
0x4ab: V272 = 0x20
0x4ad: V273 = ADD 0x20 V262
---
Entry stack: [V257, V259]
Stack pops: 2
Stack additions: [V273, S0]
Exit stack: [V273, V259]

================================

Block 0x4b0
[0x4b0:0x4c4]
---
Predecessors: [0x497]
Successors: [0x4c5]
---
0x4b0 JUMPDEST
0x4b1 POP
0x4b2 SWAP3
0x4b3 POP
0x4b4 POP
0x4b5 POP
0x4b6 PUSH1 0x40
0x4b8 MLOAD
0x4b9 DUP1
0x4ba SWAP2
0x4bb SUB
0x4bc SWAP1
0x4bd RETURN
0x4be JUMPDEST
0x4bf CALLVALUE
0x4c0 ISZERO
0x4c1 PUSH2 0x154
0x4c4 JUMPI
---
0x4b0: JUMPDEST 
0x4b6: V274 = 0x40
0x4b8: V275 = M[0x40]
0x4bb: V276 = SUB V273 V275
0x4bd: RETURN V275 V276
0x4be: JUMPDEST 
0x4bf: V277 = CALLVALUE
0x4c0: V278 = ISZERO V277
0x4c1: V279 = 0x154
0x4c4: THROWI V278
---
Entry stack: [V273, V259]
Stack pops: 10
Stack additions: []
Exit stack: []

================================

Block 0x4c5
[0x4c5:0x51e]
---
Predecessors: [0x4b0]
Successors: [0x51f]
---
0x4c5 PUSH1 0x0
0x4c7 DUP1
0x4c8 REVERT
0x4c9 JUMPDEST
0x4ca PUSH2 0x189
0x4cd PUSH1 0x4
0x4cf DUP1
0x4d0 DUP1
0x4d1 CALLDATALOAD
0x4d2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4e7 AND
0x4e8 SWAP1
0x4e9 PUSH1 0x20
0x4eb ADD
0x4ec SWAP1
0x4ed SWAP2
0x4ee SWAP1
0x4ef DUP1
0x4f0 CALLDATALOAD
0x4f1 SWAP1
0x4f2 PUSH1 0x20
0x4f4 ADD
0x4f5 SWAP1
0x4f6 SWAP2
0x4f7 SWAP1
0x4f8 POP
0x4f9 POP
0x4fa PUSH2 0x4d8
0x4fd JUMP
0x4fe JUMPDEST
0x4ff PUSH1 0x40
0x501 MLOAD
0x502 DUP1
0x503 DUP3
0x504 ISZERO
0x505 ISZERO
0x506 ISZERO
0x507 ISZERO
0x508 DUP2
0x509 MSTORE
0x50a PUSH1 0x20
0x50c ADD
0x50d SWAP2
0x50e POP
0x50f POP
0x510 PUSH1 0x40
0x512 MLOAD
0x513 DUP1
0x514 SWAP2
0x515 SUB
0x516 SWAP1
0x517 RETURN
0x518 JUMPDEST
0x519 CALLVALUE
0x51a ISZERO
0x51b PUSH2 0x1ae
0x51e JUMPI
---
0x4c5: V280 = 0x0
0x4c8: REVERT 0x0 0x0
0x4c9: JUMPDEST 
0x4ca: V281 = 0x189
0x4cd: V282 = 0x4
0x4d1: V283 = CALLDATALOAD 0x4
0x4d2: V284 = 0xffffffffffffffffffffffffffffffffffffffff
0x4e7: V285 = AND 0xffffffffffffffffffffffffffffffffffffffff V283
0x4e9: V286 = 0x20
0x4eb: V287 = ADD 0x20 0x4
0x4f0: V288 = CALLDATALOAD 0x24
0x4f2: V289 = 0x20
0x4f4: V290 = ADD 0x20 0x24
0x4fa: V291 = 0x4d8
0x4fd: THROW 
0x4fe: JUMPDEST 
0x4ff: V292 = 0x40
0x501: V293 = M[0x40]
0x504: V294 = ISZERO S0
0x505: V295 = ISZERO V294
0x506: V296 = ISZERO V295
0x507: V297 = ISZERO V296
0x509: M[V293] = V297
0x50a: V298 = 0x20
0x50c: V299 = ADD 0x20 V293
0x510: V300 = 0x40
0x512: V301 = M[0x40]
0x515: V302 = SUB V299 V301
0x517: RETURN V301 V302
0x518: JUMPDEST 
0x519: V303 = CALLVALUE
0x51a: V304 = ISZERO V303
0x51b: V305 = 0x1ae
0x51e: THROWI V304
---
Entry stack: []
Stack pops: 0
Stack additions: [V288, V285, 0x189]
Exit stack: []

================================

Block 0x51f
[0x51f:0x547]
---
Predecessors: [0x4c5]
Successors: [0x548]
---
0x51f PUSH1 0x0
0x521 DUP1
0x522 REVERT
0x523 JUMPDEST
0x524 PUSH2 0x1b6
0x527 PUSH2 0x660
0x52a JUMP
0x52b JUMPDEST
0x52c PUSH1 0x40
0x52e MLOAD
0x52f DUP1
0x530 DUP3
0x531 DUP2
0x532 MSTORE
0x533 PUSH1 0x20
0x535 ADD
0x536 SWAP2
0x537 POP
0x538 POP
0x539 PUSH1 0x40
0x53b MLOAD
0x53c DUP1
0x53d SWAP2
0x53e SUB
0x53f SWAP1
0x540 RETURN
0x541 JUMPDEST
0x542 CALLVALUE
0x543 ISZERO
0x544 PUSH2 0x1d7
0x547 JUMPI
---
0x51f: V306 = 0x0
0x522: REVERT 0x0 0x0
0x523: JUMPDEST 
0x524: V307 = 0x1b6
0x527: V308 = 0x660
0x52a: THROW 
0x52b: JUMPDEST 
0x52c: V309 = 0x40
0x52e: V310 = M[0x40]
0x532: M[V310] = S0
0x533: V311 = 0x20
0x535: V312 = ADD 0x20 V310
0x539: V313 = 0x40
0x53b: V314 = M[0x40]
0x53e: V315 = SUB V312 V314
0x540: RETURN V314 V315
0x541: JUMPDEST 
0x542: V316 = CALLVALUE
0x543: V317 = ISZERO V316
0x544: V318 = 0x1d7
0x547: THROWI V317
---
Entry stack: []
Stack pops: 0
Stack additions: [0x1b6]
Exit stack: []

================================

Block 0x548
[0x548:0x5c0]
---
Predecessors: [0x51f]
Successors: [0x5c1]
---
0x548 PUSH1 0x0
0x54a DUP1
0x54b REVERT
0x54c JUMPDEST
0x54d PUSH2 0x22b
0x550 PUSH1 0x4
0x552 DUP1
0x553 DUP1
0x554 CALLDATALOAD
0x555 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x56a AND
0x56b SWAP1
0x56c PUSH1 0x20
0x56e ADD
0x56f SWAP1
0x570 SWAP2
0x571 SWAP1
0x572 DUP1
0x573 CALLDATALOAD
0x574 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x589 AND
0x58a SWAP1
0x58b PUSH1 0x20
0x58d ADD
0x58e SWAP1
0x58f SWAP2
0x590 SWAP1
0x591 DUP1
0x592 CALLDATALOAD
0x593 SWAP1
0x594 PUSH1 0x20
0x596 ADD
0x597 SWAP1
0x598 SWAP2
0x599 SWAP1
0x59a POP
0x59b POP
0x59c PUSH2 0x66d
0x59f JUMP
0x5a0 JUMPDEST
0x5a1 PUSH1 0x40
0x5a3 MLOAD
0x5a4 DUP1
0x5a5 DUP3
0x5a6 ISZERO
0x5a7 ISZERO
0x5a8 ISZERO
0x5a9 ISZERO
0x5aa DUP2
0x5ab MSTORE
0x5ac PUSH1 0x20
0x5ae ADD
0x5af SWAP2
0x5b0 POP
0x5b1 POP
0x5b2 PUSH1 0x40
0x5b4 MLOAD
0x5b5 DUP1
0x5b6 SWAP2
0x5b7 SUB
0x5b8 SWAP1
0x5b9 RETURN
0x5ba JUMPDEST
0x5bb CALLVALUE
0x5bc ISZERO
0x5bd PUSH2 0x250
0x5c0 JUMPI
---
0x548: V319 = 0x0
0x54b: REVERT 0x0 0x0
0x54c: JUMPDEST 
0x54d: V320 = 0x22b
0x550: V321 = 0x4
0x554: V322 = CALLDATALOAD 0x4
0x555: V323 = 0xffffffffffffffffffffffffffffffffffffffff
0x56a: V324 = AND 0xffffffffffffffffffffffffffffffffffffffff V322
0x56c: V325 = 0x20
0x56e: V326 = ADD 0x20 0x4
0x573: V327 = CALLDATALOAD 0x24
0x574: V328 = 0xffffffffffffffffffffffffffffffffffffffff
0x589: V329 = AND 0xffffffffffffffffffffffffffffffffffffffff V327
0x58b: V330 = 0x20
0x58d: V331 = ADD 0x20 0x24
0x592: V332 = CALLDATALOAD 0x44
0x594: V333 = 0x20
0x596: V334 = ADD 0x20 0x44
0x59c: V335 = 0x66d
0x59f: THROW 
0x5a0: JUMPDEST 
0x5a1: V336 = 0x40
0x5a3: V337 = M[0x40]
0x5a6: V338 = ISZERO S0
0x5a7: V339 = ISZERO V338
0x5a8: V340 = ISZERO V339
0x5a9: V341 = ISZERO V340
0x5ab: M[V337] = V341
0x5ac: V342 = 0x20
0x5ae: V343 = ADD 0x20 V337
0x5b2: V344 = 0x40
0x5b4: V345 = M[0x40]
0x5b7: V346 = SUB V343 V345
0x5b9: RETURN V345 V346
0x5ba: JUMPDEST 
0x5bb: V347 = CALLVALUE
0x5bc: V348 = ISZERO V347
0x5bd: V349 = 0x250
0x5c0: THROWI V348
---
Entry stack: []
Stack pops: 0
Stack additions: [V332, V329, V324, 0x22b]
Exit stack: []

================================

Block 0x5c1
[0x5c1:0x5e9]
---
Predecessors: [0x548]
Successors: [0x5ea]
---
0x5c1 PUSH1 0x0
0x5c3 DUP1
0x5c4 REVERT
0x5c5 JUMPDEST
0x5c6 PUSH2 0x258
0x5c9 PUSH2 0x91e
0x5cc JUMP
0x5cd JUMPDEST
0x5ce PUSH1 0x40
0x5d0 MLOAD
0x5d1 DUP1
0x5d2 DUP3
0x5d3 DUP2
0x5d4 MSTORE
0x5d5 PUSH1 0x20
0x5d7 ADD
0x5d8 SWAP2
0x5d9 POP
0x5da POP
0x5db PUSH1 0x40
0x5dd MLOAD
0x5de DUP1
0x5df SWAP2
0x5e0 SUB
0x5e1 SWAP1
0x5e2 RETURN
0x5e3 JUMPDEST
0x5e4 CALLVALUE
0x5e5 ISZERO
0x5e6 PUSH2 0x279
0x5e9 JUMPI
---
0x5c1: V350 = 0x0
0x5c4: REVERT 0x0 0x0
0x5c5: JUMPDEST 
0x5c6: V351 = 0x258
0x5c9: V352 = 0x91e
0x5cc: THROW 
0x5cd: JUMPDEST 
0x5ce: V353 = 0x40
0x5d0: V354 = M[0x40]
0x5d4: M[V354] = S0
0x5d5: V355 = 0x20
0x5d7: V356 = ADD 0x20 V354
0x5db: V357 = 0x40
0x5dd: V358 = M[0x40]
0x5e0: V359 = SUB V356 V358
0x5e2: RETURN V358 V359
0x5e3: JUMPDEST 
0x5e4: V360 = CALLVALUE
0x5e5: V361 = ISZERO V360
0x5e6: V362 = 0x279
0x5e9: THROWI V361
---
Entry stack: []
Stack pops: 0
Stack additions: [0x258]
Exit stack: []

================================

Block 0x5ea
[0x5ea:0x61a]
---
Predecessors: [0x5c1]
Successors: [0x61b]
---
0x5ea PUSH1 0x0
0x5ec DUP1
0x5ed REVERT
0x5ee JUMPDEST
0x5ef PUSH2 0x281
0x5f2 PUSH2 0x923
0x5f5 JUMP
0x5f6 JUMPDEST
0x5f7 PUSH1 0x40
0x5f9 MLOAD
0x5fa DUP1
0x5fb DUP1
0x5fc PUSH1 0x20
0x5fe ADD
0x5ff DUP3
0x600 DUP2
0x601 SUB
0x602 DUP3
0x603 MSTORE
0x604 DUP4
0x605 DUP2
0x606 DUP2
0x607 MLOAD
0x608 DUP2
0x609 MSTORE
0x60a PUSH1 0x20
0x60c ADD
0x60d SWAP2
0x60e POP
0x60f DUP1
0x610 MLOAD
0x611 SWAP1
0x612 PUSH1 0x20
0x614 ADD
0x615 SWAP1
0x616 DUP1
0x617 DUP4
0x618 DUP4
0x619 PUSH1 0x0
---
0x5ea: V363 = 0x0
0x5ed: REVERT 0x0 0x0
0x5ee: JUMPDEST 
0x5ef: V364 = 0x281
0x5f2: V365 = 0x923
0x5f5: THROW 
0x5f6: JUMPDEST 
0x5f7: V366 = 0x40
0x5f9: V367 = M[0x40]
0x5fc: V368 = 0x20
0x5fe: V369 = ADD 0x20 V367
0x601: V370 = SUB V369 V367
0x603: M[V367] = V370
0x607: V371 = M[S0]
0x609: M[V369] = V371
0x60a: V372 = 0x20
0x60c: V373 = ADD 0x20 V369
0x610: V374 = M[S0]
0x612: V375 = 0x20
0x614: V376 = ADD 0x20 S0
0x619: V377 = 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: [0x281, 0x0, V376, V373, V374, V374, V376, V373, V367, V367, S0]
Exit stack: []

================================

Block 0x61b
[0x61b:0x623]
---
Predecessors: [0x5ea]
Successors: [0x624]
---
0x61b JUMPDEST
0x61c DUP4
0x61d DUP2
0x61e LT
0x61f ISZERO
0x620 PUSH2 0x2c2
0x623 JUMPI
---
0x61b: JUMPDEST 
0x61e: V378 = LT 0x0 V374
0x61f: V379 = ISZERO V378
0x620: V380 = 0x2c2
0x623: THROWI V379
---
Entry stack: [S9, V367, V367, V373, V376, V374, V374, V373, V376, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V367, V367, V373, V376, V374, V374, V373, V376, 0x0]

================================

Block 0x624
[0x624:0x62b]
---
Predecessors: [0x61b]
Successors: [0x62c]
---
0x624 DUP1
0x625 DUP3
0x626 ADD
0x627 MLOAD
0x628 DUP2
0x629 DUP5
0x62a ADD
0x62b MSTORE
---
0x626: V381 = ADD V376 0x0
0x627: V382 = M[V381]
0x62a: V383 = ADD V373 0x0
0x62b: M[V383] = V382
---
Entry stack: [S9, V367, V367, V373, V376, V374, V374, V373, V376, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S9, V367, V367, V373, V376, V374, V374, V373, V376, 0x0]

================================

Block 0x62c
[0x62c:0x64a]
---
Predecessors: [0x624]
Successors: [0x64b]
---
0x62c JUMPDEST
0x62d PUSH1 0x20
0x62f DUP2
0x630 ADD
0x631 SWAP1
0x632 POP
0x633 PUSH2 0x2a6
0x636 JUMP
0x637 JUMPDEST
0x638 POP
0x639 POP
0x63a POP
0x63b POP
0x63c SWAP1
0x63d POP
0x63e SWAP1
0x63f DUP2
0x640 ADD
0x641 SWAP1
0x642 PUSH1 0x1f
0x644 AND
0x645 DUP1
0x646 ISZERO
0x647 PUSH2 0x2ef
0x64a JUMPI
---
0x62c: JUMPDEST 
0x62d: V384 = 0x20
0x630: V385 = ADD 0x0 0x20
0x633: V386 = 0x2a6
0x636: THROW 
0x637: JUMPDEST 
0x640: V387 = ADD S4 S6
0x642: V388 = 0x1f
0x644: V389 = AND 0x1f S4
0x646: V390 = ISZERO V389
0x647: V391 = 0x2ef
0x64a: THROWI V390
---
Entry stack: [S9, V367, V367, V373, V376, V374, V374, V373, V376, 0x0]
Stack pops: 1
Stack additions: [V389, V387]
Exit stack: []

================================

Block 0x64b
[0x64b:0x663]
---
Predecessors: [0x62c]
Successors: [0x664]
---
0x64b DUP1
0x64c DUP3
0x64d SUB
0x64e DUP1
0x64f MLOAD
0x650 PUSH1 0x1
0x652 DUP4
0x653 PUSH1 0x20
0x655 SUB
0x656 PUSH2 0x100
0x659 EXP
0x65a SUB
0x65b NOT
0x65c AND
0x65d DUP2
0x65e MSTORE
0x65f PUSH1 0x20
0x661 ADD
0x662 SWAP2
0x663 POP
---
0x64d: V392 = SUB V387 V389
0x64f: V393 = M[V392]
0x650: V394 = 0x1
0x653: V395 = 0x20
0x655: V396 = SUB 0x20 V389
0x656: V397 = 0x100
0x659: V398 = EXP 0x100 V396
0x65a: V399 = SUB V398 0x1
0x65b: V400 = NOT V399
0x65c: V401 = AND V400 V393
0x65e: M[V392] = V401
0x65f: V402 = 0x20
0x661: V403 = ADD 0x20 V392
---
Entry stack: [V387, V389]
Stack pops: 2
Stack additions: [V403, S0]
Exit stack: [V403, V389]

================================

Block 0x664
[0x664:0x678]
---
Predecessors: [0x64b]
Successors: [0x679]
---
0x664 JUMPDEST
0x665 POP
0x666 SWAP3
0x667 POP
0x668 POP
0x669 POP
0x66a PUSH1 0x40
0x66c MLOAD
0x66d DUP1
0x66e SWAP2
0x66f SUB
0x670 SWAP1
0x671 RETURN
0x672 JUMPDEST
0x673 CALLVALUE
0x674 ISZERO
0x675 PUSH2 0x308
0x678 JUMPI
---
0x664: JUMPDEST 
0x66a: V404 = 0x40
0x66c: V405 = M[0x40]
0x66f: V406 = SUB V403 V405
0x671: RETURN V405 V406
0x672: JUMPDEST 
0x673: V407 = CALLVALUE
0x674: V408 = ISZERO V407
0x675: V409 = 0x308
0x678: THROWI V408
---
Entry stack: [V403, V389]
Stack pops: 10
Stack additions: []
Exit stack: []

================================

Block 0x679
[0x679:0x6c5]
---
Predecessors: [0x664]
Successors: [0x6c6]
---
0x679 PUSH1 0x0
0x67b DUP1
0x67c REVERT
0x67d JUMPDEST
0x67e PUSH2 0x334
0x681 PUSH1 0x4
0x683 DUP1
0x684 DUP1
0x685 CALLDATALOAD
0x686 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x69b AND
0x69c SWAP1
0x69d PUSH1 0x20
0x69f ADD
0x6a0 SWAP1
0x6a1 SWAP2
0x6a2 SWAP1
0x6a3 POP
0x6a4 POP
0x6a5 PUSH2 0x95c
0x6a8 JUMP
0x6a9 JUMPDEST
0x6aa PUSH1 0x40
0x6ac MLOAD
0x6ad DUP1
0x6ae DUP3
0x6af DUP2
0x6b0 MSTORE
0x6b1 PUSH1 0x20
0x6b3 ADD
0x6b4 SWAP2
0x6b5 POP
0x6b6 POP
0x6b7 PUSH1 0x40
0x6b9 MLOAD
0x6ba DUP1
0x6bb SWAP2
0x6bc SUB
0x6bd SWAP1
0x6be RETURN
0x6bf JUMPDEST
0x6c0 CALLVALUE
0x6c1 ISZERO
0x6c2 PUSH2 0x355
0x6c5 JUMPI
---
0x679: V410 = 0x0
0x67c: REVERT 0x0 0x0
0x67d: JUMPDEST 
0x67e: V411 = 0x334
0x681: V412 = 0x4
0x685: V413 = CALLDATALOAD 0x4
0x686: V414 = 0xffffffffffffffffffffffffffffffffffffffff
0x69b: V415 = AND 0xffffffffffffffffffffffffffffffffffffffff V413
0x69d: V416 = 0x20
0x69f: V417 = ADD 0x20 0x4
0x6a5: V418 = 0x95c
0x6a8: THROW 
0x6a9: JUMPDEST 
0x6aa: V419 = 0x40
0x6ac: V420 = M[0x40]
0x6b0: M[V420] = S0
0x6b1: V421 = 0x20
0x6b3: V422 = ADD 0x20 V420
0x6b7: V423 = 0x40
0x6b9: V424 = M[0x40]
0x6bc: V425 = SUB V422 V424
0x6be: RETURN V424 V425
0x6bf: JUMPDEST 
0x6c0: V426 = CALLVALUE
0x6c1: V427 = ISZERO V426
0x6c2: V428 = 0x355
0x6c5: THROWI V427
---
Entry stack: []
Stack pops: 0
Stack additions: [V415, 0x334]
Exit stack: []

================================

Block 0x6c6
[0x6c6:0x6f6]
---
Predecessors: [0x679]
Successors: [0x6f7]
---
0x6c6 PUSH1 0x0
0x6c8 DUP1
0x6c9 REVERT
0x6ca JUMPDEST
0x6cb PUSH2 0x35d
0x6ce PUSH2 0x9a6
0x6d1 JUMP
0x6d2 JUMPDEST
0x6d3 PUSH1 0x40
0x6d5 MLOAD
0x6d6 DUP1
0x6d7 DUP1
0x6d8 PUSH1 0x20
0x6da ADD
0x6db DUP3
0x6dc DUP2
0x6dd SUB
0x6de DUP3
0x6df MSTORE
0x6e0 DUP4
0x6e1 DUP2
0x6e2 DUP2
0x6e3 MLOAD
0x6e4 DUP2
0x6e5 MSTORE
0x6e6 PUSH1 0x20
0x6e8 ADD
0x6e9 SWAP2
0x6ea POP
0x6eb DUP1
0x6ec MLOAD
0x6ed SWAP1
0x6ee PUSH1 0x20
0x6f0 ADD
0x6f1 SWAP1
0x6f2 DUP1
0x6f3 DUP4
0x6f4 DUP4
0x6f5 PUSH1 0x0
---
0x6c6: V429 = 0x0
0x6c9: REVERT 0x0 0x0
0x6ca: JUMPDEST 
0x6cb: V430 = 0x35d
0x6ce: V431 = 0x9a6
0x6d1: THROW 
0x6d2: JUMPDEST 
0x6d3: V432 = 0x40
0x6d5: V433 = M[0x40]
0x6d8: V434 = 0x20
0x6da: V435 = ADD 0x20 V433
0x6dd: V436 = SUB V435 V433
0x6df: M[V433] = V436
0x6e3: V437 = M[S0]
0x6e5: M[V435] = V437
0x6e6: V438 = 0x20
0x6e8: V439 = ADD 0x20 V435
0x6ec: V440 = M[S0]
0x6ee: V441 = 0x20
0x6f0: V442 = ADD 0x20 S0
0x6f5: V443 = 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: [0x35d, 0x0, V442, V439, V440, V440, V442, V439, V433, V433, S0]
Exit stack: []

================================

Block 0x6f7
[0x6f7:0x6ff]
---
Predecessors: [0x6c6]
Successors: [0x700]
---
0x6f7 JUMPDEST
0x6f8 DUP4
0x6f9 DUP2
0x6fa LT
0x6fb ISZERO
0x6fc PUSH2 0x39e
0x6ff JUMPI
---
0x6f7: JUMPDEST 
0x6fa: V444 = LT 0x0 V440
0x6fb: V445 = ISZERO V444
0x6fc: V446 = 0x39e
0x6ff: THROWI V445
---
Entry stack: [S9, V433, V433, V439, V442, V440, V440, V439, V442, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V433, V433, V439, V442, V440, V440, V439, V442, 0x0]

================================

Block 0x700
[0x700:0x707]
---
Predecessors: [0x6f7]
Successors: [0x708]
---
0x700 DUP1
0x701 DUP3
0x702 ADD
0x703 MLOAD
0x704 DUP2
0x705 DUP5
0x706 ADD
0x707 MSTORE
---
0x702: V447 = ADD V442 0x0
0x703: V448 = M[V447]
0x706: V449 = ADD V439 0x0
0x707: M[V449] = V448
---
Entry stack: [S9, V433, V433, V439, V442, V440, V440, V439, V442, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S9, V433, V433, V439, V442, V440, V440, V439, V442, 0x0]

================================

Block 0x708
[0x708:0x712]
---
Predecessors: [0x700]
Successors: []
---
0x708 JUMPDEST
0x709 PUSH1 0x20
0x70b DUP2
0x70c ADD
0x70d SWAP1
0x70e POP
0x70f PUSH2 0x382
0x712 JUMP
---
0x708: JUMPDEST 
0x709: V450 = 0x20
0x70c: V451 = ADD 0x0 0x20
0x70f: V452 = 0x382
0x712: THROW 
---
Entry stack: [S9, V433, V433, V439, V442, V440, V440, V439, V442, 0x0]
Stack pops: 1
Stack additions: [0x20]
Exit stack: [S9, V433, V433, V439, V442, V440, V440, V439, V442, 0x20]

================================

Block 0x713
[0x713:0x726]
---
Predecessors: [0x11de]
Successors: [0x727]
---
0x713 JUMPDEST
0x714 POP
0x715 POP
0x716 POP
0x717 POP
0x718 SWAP1
0x719 POP
0x71a SWAP1
0x71b DUP2
0x71c ADD
0x71d SWAP1
0x71e PUSH1 0x1f
0x720 AND
0x721 DUP1
0x722 ISZERO
0x723 PUSH2 0x3cb
0x726 JUMPI
---
0x713: JUMPDEST 
0x71c: V453 = ADD S4 S6
0x71e: V454 = 0x1f
0x720: V455 = AND 0x1f S4
0x722: V456 = ISZERO V455
0x723: V457 = 0x3cb
0x726: THROWI V456
---
Entry stack: [0x204, V1024, V1027]
Stack pops: 7
Stack additions: [V453, V455]
Exit stack: [V453, V455]

================================

Block 0x727
[0x727:0x73f]
---
Predecessors: [0x713]
Successors: [0x740]
---
0x727 DUP1
0x728 DUP3
0x729 SUB
0x72a DUP1
0x72b MLOAD
0x72c PUSH1 0x1
0x72e DUP4
0x72f PUSH1 0x20
0x731 SUB
0x732 PUSH2 0x100
0x735 EXP
0x736 SUB
0x737 NOT
0x738 AND
0x739 DUP2
0x73a MSTORE
0x73b PUSH1 0x20
0x73d ADD
0x73e SWAP2
0x73f POP
---
0x729: V458 = SUB V453 V455
0x72b: V459 = M[V458]
0x72c: V460 = 0x1
0x72f: V461 = 0x20
0x731: V462 = SUB 0x20 V455
0x732: V463 = 0x100
0x735: V464 = EXP 0x100 V462
0x736: V465 = SUB V464 0x1
0x737: V466 = NOT V465
0x738: V467 = AND V466 V459
0x73a: M[V458] = V467
0x73b: V468 = 0x20
0x73d: V469 = ADD 0x20 V458
---
Entry stack: [V453, V455]
Stack pops: 2
Stack additions: [V469, S0]
Exit stack: [V469, V455]

================================

Block 0x740
[0x740:0x754]
---
Predecessors: [0x727]
Successors: [0x755]
---
0x740 JUMPDEST
0x741 POP
0x742 SWAP3
0x743 POP
0x744 POP
0x745 POP
0x746 PUSH1 0x40
0x748 MLOAD
0x749 DUP1
0x74a SWAP2
0x74b SUB
0x74c SWAP1
0x74d RETURN
0x74e JUMPDEST
0x74f CALLVALUE
0x750 ISZERO
0x751 PUSH2 0x3e4
0x754 JUMPI
---
0x740: JUMPDEST 
0x746: V470 = 0x40
0x748: V471 = M[0x40]
0x74b: V472 = SUB V469 V471
0x74d: RETURN V471 V472
0x74e: JUMPDEST 
0x74f: V473 = CALLVALUE
0x750: V474 = ISZERO V473
0x751: V475 = 0x3e4
0x754: THROWI V474
---
Entry stack: [V469, V455]
Stack pops: 10
Stack additions: []
Exit stack: []

================================

Block 0x755
[0x755:0x7ae]
---
Predecessors: [0x740]
Successors: [0x7af]
---
0x755 PUSH1 0x0
0x757 DUP1
0x758 REVERT
0x759 JUMPDEST
0x75a PUSH2 0x419
0x75d PUSH1 0x4
0x75f DUP1
0x760 DUP1
0x761 CALLDATALOAD
0x762 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x777 AND
0x778 SWAP1
0x779 PUSH1 0x20
0x77b ADD
0x77c SWAP1
0x77d SWAP2
0x77e SWAP1
0x77f DUP1
0x780 CALLDATALOAD
0x781 SWAP1
0x782 PUSH1 0x20
0x784 ADD
0x785 SWAP1
0x786 SWAP2
0x787 SWAP1
0x788 POP
0x789 POP
0x78a PUSH2 0x9df
0x78d JUMP
0x78e JUMPDEST
0x78f PUSH1 0x40
0x791 MLOAD
0x792 DUP1
0x793 DUP3
0x794 ISZERO
0x795 ISZERO
0x796 ISZERO
0x797 ISZERO
0x798 DUP2
0x799 MSTORE
0x79a PUSH1 0x20
0x79c ADD
0x79d SWAP2
0x79e POP
0x79f POP
0x7a0 PUSH1 0x40
0x7a2 MLOAD
0x7a3 DUP1
0x7a4 SWAP2
0x7a5 SUB
0x7a6 SWAP1
0x7a7 RETURN
0x7a8 JUMPDEST
0x7a9 CALLVALUE
0x7aa ISZERO
0x7ab PUSH2 0x43e
0x7ae JUMPI
---
0x755: V476 = 0x0
0x758: REVERT 0x0 0x0
0x759: JUMPDEST 
0x75a: V477 = 0x419
0x75d: V478 = 0x4
0x761: V479 = CALLDATALOAD 0x4
0x762: V480 = 0xffffffffffffffffffffffffffffffffffffffff
0x777: V481 = AND 0xffffffffffffffffffffffffffffffffffffffff V479
0x779: V482 = 0x20
0x77b: V483 = ADD 0x20 0x4
0x780: V484 = CALLDATALOAD 0x24
0x782: V485 = 0x20
0x784: V486 = ADD 0x20 0x24
0x78a: V487 = 0x9df
0x78d: THROW 
0x78e: JUMPDEST 
0x78f: V488 = 0x40
0x791: V489 = M[0x40]
0x794: V490 = ISZERO S0
0x795: V491 = ISZERO V490
0x796: V492 = ISZERO V491
0x797: V493 = ISZERO V492
0x799: M[V489] = V493
0x79a: V494 = 0x20
0x79c: V495 = ADD 0x20 V489
0x7a0: V496 = 0x40
0x7a2: V497 = M[0x40]
0x7a5: V498 = SUB V495 V497
0x7a7: RETURN V497 V498
0x7a8: JUMPDEST 
0x7a9: V499 = CALLVALUE
0x7aa: V500 = ISZERO V499
0x7ab: V501 = 0x43e
0x7ae: THROWI V500
---
Entry stack: []
Stack pops: 0
Stack additions: [V484, V481, 0x419]
Exit stack: []

================================

Block 0x7af
[0x7af:0x857]
---
Predecessors: [0x755]
Successors: [0x858]
---
0x7af PUSH1 0x0
0x7b1 DUP1
0x7b2 REVERT
0x7b3 JUMPDEST
0x7b4 PUSH2 0x489
0x7b7 PUSH1 0x4
0x7b9 DUP1
0x7ba DUP1
0x7bb CALLDATALOAD
0x7bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7d1 AND
0x7d2 SWAP1
0x7d3 PUSH1 0x20
0x7d5 ADD
0x7d6 SWAP1
0x7d7 SWAP2
0x7d8 SWAP1
0x7d9 DUP1
0x7da CALLDATALOAD
0x7db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7f0 AND
0x7f1 SWAP1
0x7f2 PUSH1 0x20
0x7f4 ADD
0x7f5 SWAP1
0x7f6 SWAP2
0x7f7 SWAP1
0x7f8 POP
0x7f9 POP
0x7fa PUSH2 0xb7b
0x7fd JUMP
0x7fe JUMPDEST
0x7ff PUSH1 0x40
0x801 MLOAD
0x802 DUP1
0x803 DUP3
0x804 DUP2
0x805 MSTORE
0x806 PUSH1 0x20
0x808 ADD
0x809 SWAP2
0x80a POP
0x80b POP
0x80c PUSH1 0x40
0x80e MLOAD
0x80f DUP1
0x810 SWAP2
0x811 SUB
0x812 SWAP1
0x813 RETURN
0x814 JUMPDEST
0x815 PUSH1 0x40
0x817 DUP1
0x818 MLOAD
0x819 SWAP1
0x81a DUP2
0x81b ADD
0x81c PUSH1 0x40
0x81e MSTORE
0x81f DUP1
0x820 PUSH1 0x6
0x822 DUP2
0x823 MSTORE
0x824 PUSH1 0x20
0x826 ADD
0x827 PUSH32 0x4c69717565740000000000000000000000000000000000000000000000000000
0x848 DUP2
0x849 MSTORE
0x84a POP
0x84b DUP2
0x84c JUMP
0x84d JUMPDEST
0x84e PUSH1 0x0
0x850 DUP1
0x851 DUP3
0x852 EQ
0x853 DUP1
0x854 PUSH2 0x564
0x857 JUMPI
---
0x7af: V502 = 0x0
0x7b2: REVERT 0x0 0x0
0x7b3: JUMPDEST 
0x7b4: V503 = 0x489
0x7b7: V504 = 0x4
0x7bb: V505 = CALLDATALOAD 0x4
0x7bc: V506 = 0xffffffffffffffffffffffffffffffffffffffff
0x7d1: V507 = AND 0xffffffffffffffffffffffffffffffffffffffff V505
0x7d3: V508 = 0x20
0x7d5: V509 = ADD 0x20 0x4
0x7da: V510 = CALLDATALOAD 0x24
0x7db: V511 = 0xffffffffffffffffffffffffffffffffffffffff
0x7f0: V512 = AND 0xffffffffffffffffffffffffffffffffffffffff V510
0x7f2: V513 = 0x20
0x7f4: V514 = ADD 0x20 0x24
0x7fa: V515 = 0xb7b
0x7fd: THROW 
0x7fe: JUMPDEST 
0x7ff: V516 = 0x40
0x801: V517 = M[0x40]
0x805: M[V517] = S0
0x806: V518 = 0x20
0x808: V519 = ADD 0x20 V517
0x80c: V520 = 0x40
0x80e: V521 = M[0x40]
0x811: V522 = SUB V519 V521
0x813: RETURN V521 V522
0x814: JUMPDEST 
0x815: V523 = 0x40
0x818: V524 = M[0x40]
0x81b: V525 = ADD V524 0x40
0x81c: V526 = 0x40
0x81e: M[0x40] = V525
0x820: V527 = 0x6
0x823: M[V524] = 0x6
0x824: V528 = 0x20
0x826: V529 = ADD 0x20 V524
0x827: V530 = 0x4c69717565740000000000000000000000000000000000000000000000000000
0x849: M[V529] = 0x4c69717565740000000000000000000000000000000000000000000000000000
0x84c: JUMP S0
0x84d: JUMPDEST 
0x84e: V531 = 0x0
0x852: V532 = EQ S0 0x0
0x854: V533 = 0x564
0x857: THROWI V532
---
Entry stack: []
Stack pops: 0
Stack additions: [V512, V507, 0x489, V524, S0, V532, 0x0, S0]
Exit stack: []

================================

Block 0x858
[0x858:0x8d8]
---
Predecessors: [0x7af]
Successors: [0x8d9]
---
0x858 POP
0x859 PUSH1 0x0
0x85b PUSH1 0x2
0x85d PUSH1 0x0
0x85f CALLER
0x860 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x875 AND
0x876 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x88b AND
0x88c DUP2
0x88d MSTORE
0x88e PUSH1 0x20
0x890 ADD
0x891 SWAP1
0x892 DUP2
0x893 MSTORE
0x894 PUSH1 0x20
0x896 ADD
0x897 PUSH1 0x0
0x899 SHA3
0x89a PUSH1 0x0
0x89c DUP6
0x89d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8b2 AND
0x8b3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8c8 AND
0x8c9 DUP2
0x8ca MSTORE
0x8cb PUSH1 0x20
0x8cd ADD
0x8ce SWAP1
0x8cf DUP2
0x8d0 MSTORE
0x8d1 PUSH1 0x20
0x8d3 ADD
0x8d4 PUSH1 0x0
0x8d6 SHA3
0x8d7 SLOAD
0x8d8 EQ
---
0x859: V534 = 0x0
0x85b: V535 = 0x2
0x85d: V536 = 0x0
0x85f: V537 = CALLER
0x860: V538 = 0xffffffffffffffffffffffffffffffffffffffff
0x875: V539 = AND 0xffffffffffffffffffffffffffffffffffffffff V537
0x876: V540 = 0xffffffffffffffffffffffffffffffffffffffff
0x88b: V541 = AND 0xffffffffffffffffffffffffffffffffffffffff V539
0x88d: M[0x0] = V541
0x88e: V542 = 0x20
0x890: V543 = ADD 0x20 0x0
0x893: M[0x20] = 0x2
0x894: V544 = 0x20
0x896: V545 = ADD 0x20 0x20
0x897: V546 = 0x0
0x899: V547 = SHA3 0x0 0x40
0x89a: V548 = 0x0
0x89d: V549 = 0xffffffffffffffffffffffffffffffffffffffff
0x8b2: V550 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x8b3: V551 = 0xffffffffffffffffffffffffffffffffffffffff
0x8c8: V552 = AND 0xffffffffffffffffffffffffffffffffffffffff V550
0x8ca: M[0x0] = V552
0x8cb: V553 = 0x20
0x8cd: V554 = ADD 0x20 0x0
0x8d0: M[0x20] = V547
0x8d1: V555 = 0x20
0x8d3: V556 = ADD 0x20 0x20
0x8d4: V557 = 0x0
0x8d6: V558 = SHA3 0x0 0x40
0x8d7: V559 = S[V558]
0x8d8: V560 = EQ V559 0x0
---
Entry stack: [S2, 0x0, V532]
Stack pops: 4
Stack additions: [S3, S2, S1, V560]
Exit stack: [S0, S2, 0x0, V560]

================================

Block 0x8d9
[0x8d9:0x8df]
---
Predecessors: [0x858]
Successors: [0x8e0]
---
0x8d9 JUMPDEST
0x8da ISZERO
0x8db ISZERO
0x8dc PUSH2 0x56f
0x8df JUMPI
---
0x8d9: JUMPDEST 
0x8da: V561 = ISZERO V560
0x8db: V562 = ISZERO V561
0x8dc: V563 = 0x56f
0x8df: THROWI V562
---
Entry stack: [S3, S2, 0x0, V560]
Stack pops: 1
Stack additions: []
Exit stack: [S3, S2, 0x0]

================================

Block 0x8e0
[0x8e0:0x9ce]
---
Predecessors: [0x8d9]
Successors: [0x9cf]
---
0x8e0 PUSH1 0x0
0x8e2 DUP1
0x8e3 REVERT
0x8e4 JUMPDEST
0x8e5 DUP2
0x8e6 PUSH1 0x2
0x8e8 PUSH1 0x0
0x8ea CALLER
0x8eb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x900 AND
0x901 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x916 AND
0x917 DUP2
0x918 MSTORE
0x919 PUSH1 0x20
0x91b ADD
0x91c SWAP1
0x91d DUP2
0x91e MSTORE
0x91f PUSH1 0x20
0x921 ADD
0x922 PUSH1 0x0
0x924 SHA3
0x925 PUSH1 0x0
0x927 DUP6
0x928 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x93d AND
0x93e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x953 AND
0x954 DUP2
0x955 MSTORE
0x956 PUSH1 0x20
0x958 ADD
0x959 SWAP1
0x95a DUP2
0x95b MSTORE
0x95c PUSH1 0x20
0x95e ADD
0x95f PUSH1 0x0
0x961 SHA3
0x962 DUP2
0x963 SWAP1
0x964 SSTORE
0x965 POP
0x966 DUP3
0x967 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x97c AND
0x97d CALLER
0x97e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x993 AND
0x994 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x9b5 DUP5
0x9b6 PUSH1 0x40
0x9b8 MLOAD
0x9b9 DUP1
0x9ba DUP3
0x9bb DUP2
0x9bc MSTORE
0x9bd PUSH1 0x20
0x9bf ADD
0x9c0 SWAP2
0x9c1 POP
0x9c2 POP
0x9c3 PUSH1 0x40
0x9c5 MLOAD
0x9c6 DUP1
0x9c7 SWAP2
0x9c8 SUB
0x9c9 SWAP1
0x9ca LOG3
0x9cb PUSH1 0x1
0x9cd SWAP1
0x9ce POP
---
0x8e0: V564 = 0x0
0x8e3: REVERT 0x0 0x0
0x8e4: JUMPDEST 
0x8e6: V565 = 0x2
0x8e8: V566 = 0x0
0x8ea: V567 = CALLER
0x8eb: V568 = 0xffffffffffffffffffffffffffffffffffffffff
0x900: V569 = AND 0xffffffffffffffffffffffffffffffffffffffff V567
0x901: V570 = 0xffffffffffffffffffffffffffffffffffffffff
0x916: V571 = AND 0xffffffffffffffffffffffffffffffffffffffff V569
0x918: M[0x0] = V571
0x919: V572 = 0x20
0x91b: V573 = ADD 0x20 0x0
0x91e: M[0x20] = 0x2
0x91f: V574 = 0x20
0x921: V575 = ADD 0x20 0x20
0x922: V576 = 0x0
0x924: V577 = SHA3 0x0 0x40
0x925: V578 = 0x0
0x928: V579 = 0xffffffffffffffffffffffffffffffffffffffff
0x93d: V580 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x93e: V581 = 0xffffffffffffffffffffffffffffffffffffffff
0x953: V582 = AND 0xffffffffffffffffffffffffffffffffffffffff V580
0x955: M[0x0] = V582
0x956: V583 = 0x20
0x958: V584 = ADD 0x20 0x0
0x95b: M[0x20] = V577
0x95c: V585 = 0x20
0x95e: V586 = ADD 0x20 0x20
0x95f: V587 = 0x0
0x961: V588 = SHA3 0x0 0x40
0x964: S[V588] = S1
0x967: V589 = 0xffffffffffffffffffffffffffffffffffffffff
0x97c: V590 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x97d: V591 = CALLER
0x97e: V592 = 0xffffffffffffffffffffffffffffffffffffffff
0x993: V593 = AND 0xffffffffffffffffffffffffffffffffffffffff V591
0x994: V594 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x9b6: V595 = 0x40
0x9b8: V596 = M[0x40]
0x9bc: M[V596] = S1
0x9bd: V597 = 0x20
0x9bf: V598 = ADD 0x20 V596
0x9c3: V599 = 0x40
0x9c5: V600 = M[0x40]
0x9c8: V601 = SUB V598 V600
0x9ca: LOG V600 V601 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V593 V590
0x9cb: V602 = 0x1
---
Entry stack: [S2, S1, 0x0]
Stack pops: 0
Stack additions: [0x1, S1, S2]
Exit stack: []

================================

Block 0x9cf
[0x9cf:0xc8a]
---
Predecessors: [0x8e0]
Successors: [0xc8b]
---
0x9cf JUMPDEST
0x9d0 SWAP3
0x9d1 SWAP2
0x9d2 POP
0x9d3 POP
0x9d4 JUMP
0x9d5 JUMPDEST
0x9d6 PUSH1 0x12
0x9d8 PUSH1 0xa
0x9da EXP
0x9db PUSH3 0x989680
0x9df MUL
0x9e0 DUP2
0x9e1 JUMP
0x9e2 JUMPDEST
0x9e3 PUSH1 0x0
0x9e5 DUP1
0x9e6 PUSH1 0x2
0x9e8 PUSH1 0x0
0x9ea DUP7
0x9eb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa00 AND
0xa01 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa16 AND
0xa17 DUP2
0xa18 MSTORE
0xa19 PUSH1 0x20
0xa1b ADD
0xa1c SWAP1
0xa1d DUP2
0xa1e MSTORE
0xa1f PUSH1 0x20
0xa21 ADD
0xa22 PUSH1 0x0
0xa24 SHA3
0xa25 PUSH1 0x0
0xa27 CALLER
0xa28 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa3d AND
0xa3e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa53 AND
0xa54 DUP2
0xa55 MSTORE
0xa56 PUSH1 0x20
0xa58 ADD
0xa59 SWAP1
0xa5a DUP2
0xa5b MSTORE
0xa5c PUSH1 0x20
0xa5e ADD
0xa5f PUSH1 0x0
0xa61 SHA3
0xa62 SLOAD
0xa63 SWAP1
0xa64 POP
0xa65 PUSH2 0x741
0xa68 DUP4
0xa69 PUSH1 0x1
0xa6b PUSH1 0x0
0xa6d DUP8
0xa6e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa83 AND
0xa84 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa99 AND
0xa9a DUP2
0xa9b MSTORE
0xa9c PUSH1 0x20
0xa9e ADD
0xa9f SWAP1
0xaa0 DUP2
0xaa1 MSTORE
0xaa2 PUSH1 0x20
0xaa4 ADD
0xaa5 PUSH1 0x0
0xaa7 SHA3
0xaa8 SLOAD
0xaa9 PUSH2 0xc03
0xaac SWAP1
0xaad SWAP2
0xaae SWAP1
0xaaf PUSH4 0xffffffff
0xab4 AND
0xab5 JUMP
0xab6 JUMPDEST
0xab7 PUSH1 0x1
0xab9 PUSH1 0x0
0xabb DUP7
0xabc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xad1 AND
0xad2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xae7 AND
0xae8 DUP2
0xae9 MSTORE
0xaea PUSH1 0x20
0xaec ADD
0xaed SWAP1
0xaee DUP2
0xaef MSTORE
0xaf0 PUSH1 0x20
0xaf2 ADD
0xaf3 PUSH1 0x0
0xaf5 SHA3
0xaf6 DUP2
0xaf7 SWAP1
0xaf8 SSTORE
0xaf9 POP
0xafa PUSH2 0x7d6
0xafd DUP4
0xafe PUSH1 0x1
0xb00 PUSH1 0x0
0xb02 DUP9
0xb03 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb18 AND
0xb19 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb2e AND
0xb2f DUP2
0xb30 MSTORE
0xb31 PUSH1 0x20
0xb33 ADD
0xb34 SWAP1
0xb35 DUP2
0xb36 MSTORE
0xb37 PUSH1 0x20
0xb39 ADD
0xb3a PUSH1 0x0
0xb3c SHA3
0xb3d SLOAD
0xb3e PUSH2 0xc22
0xb41 SWAP1
0xb42 SWAP2
0xb43 SWAP1
0xb44 PUSH4 0xffffffff
0xb49 AND
0xb4a JUMP
0xb4b JUMPDEST
0xb4c PUSH1 0x1
0xb4e PUSH1 0x0
0xb50 DUP8
0xb51 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb66 AND
0xb67 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb7c AND
0xb7d DUP2
0xb7e MSTORE
0xb7f PUSH1 0x20
0xb81 ADD
0xb82 SWAP1
0xb83 DUP2
0xb84 MSTORE
0xb85 PUSH1 0x20
0xb87 ADD
0xb88 PUSH1 0x0
0xb8a SHA3
0xb8b DUP2
0xb8c SWAP1
0xb8d SSTORE
0xb8e POP
0xb8f PUSH2 0x82c
0xb92 DUP4
0xb93 DUP3
0xb94 PUSH2 0xc22
0xb97 SWAP1
0xb98 SWAP2
0xb99 SWAP1
0xb9a PUSH4 0xffffffff
0xb9f AND
0xba0 JUMP
0xba1 JUMPDEST
0xba2 PUSH1 0x2
0xba4 PUSH1 0x0
0xba6 DUP8
0xba7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbbc AND
0xbbd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbd2 AND
0xbd3 DUP2
0xbd4 MSTORE
0xbd5 PUSH1 0x20
0xbd7 ADD
0xbd8 SWAP1
0xbd9 DUP2
0xbda MSTORE
0xbdb PUSH1 0x20
0xbdd ADD
0xbde PUSH1 0x0
0xbe0 SHA3
0xbe1 PUSH1 0x0
0xbe3 CALLER
0xbe4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbf9 AND
0xbfa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc0f AND
0xc10 DUP2
0xc11 MSTORE
0xc12 PUSH1 0x20
0xc14 ADD
0xc15 SWAP1
0xc16 DUP2
0xc17 MSTORE
0xc18 PUSH1 0x20
0xc1a ADD
0xc1b PUSH1 0x0
0xc1d SHA3
0xc1e DUP2
0xc1f SWAP1
0xc20 SSTORE
0xc21 POP
0xc22 DUP4
0xc23 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc38 AND
0xc39 DUP6
0xc3a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc4f AND
0xc50 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xc71 DUP6
0xc72 PUSH1 0x40
0xc74 MLOAD
0xc75 DUP1
0xc76 DUP3
0xc77 DUP2
0xc78 MSTORE
0xc79 PUSH1 0x20
0xc7b ADD
0xc7c SWAP2
0xc7d POP
0xc7e POP
0xc7f PUSH1 0x40
0xc81 MLOAD
0xc82 DUP1
0xc83 SWAP2
0xc84 SUB
0xc85 SWAP1
0xc86 LOG3
0xc87 PUSH1 0x1
0xc89 SWAP2
0xc8a POP
---
0x9cf: JUMPDEST 
0x9d4: JUMP S3
0x9d5: JUMPDEST 
0x9d6: V603 = 0x12
0x9d8: V604 = 0xa
0x9da: V605 = EXP 0xa 0x12
0x9db: V606 = 0x989680
0x9df: V607 = MUL 0x989680 0xde0b6b3a7640000
0x9e1: JUMP S0
0x9e2: JUMPDEST 
0x9e3: V608 = 0x0
0x9e6: V609 = 0x2
0x9e8: V610 = 0x0
0x9eb: V611 = 0xffffffffffffffffffffffffffffffffffffffff
0xa00: V612 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xa01: V613 = 0xffffffffffffffffffffffffffffffffffffffff
0xa16: V614 = AND 0xffffffffffffffffffffffffffffffffffffffff V612
0xa18: M[0x0] = V614
0xa19: V615 = 0x20
0xa1b: V616 = ADD 0x20 0x0
0xa1e: M[0x20] = 0x2
0xa1f: V617 = 0x20
0xa21: V618 = ADD 0x20 0x20
0xa22: V619 = 0x0
0xa24: V620 = SHA3 0x0 0x40
0xa25: V621 = 0x0
0xa27: V622 = CALLER
0xa28: V623 = 0xffffffffffffffffffffffffffffffffffffffff
0xa3d: V624 = AND 0xffffffffffffffffffffffffffffffffffffffff V622
0xa3e: V625 = 0xffffffffffffffffffffffffffffffffffffffff
0xa53: V626 = AND 0xffffffffffffffffffffffffffffffffffffffff V624
0xa55: M[0x0] = V626
0xa56: V627 = 0x20
0xa58: V628 = ADD 0x20 0x0
0xa5b: M[0x20] = V620
0xa5c: V629 = 0x20
0xa5e: V630 = ADD 0x20 0x20
0xa5f: V631 = 0x0
0xa61: V632 = SHA3 0x0 0x40
0xa62: V633 = S[V632]
0xa65: V634 = 0x741
0xa69: V635 = 0x1
0xa6b: V636 = 0x0
0xa6e: V637 = 0xffffffffffffffffffffffffffffffffffffffff
0xa83: V638 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xa84: V639 = 0xffffffffffffffffffffffffffffffffffffffff
0xa99: V640 = AND 0xffffffffffffffffffffffffffffffffffffffff V638
0xa9b: M[0x0] = V640
0xa9c: V641 = 0x20
0xa9e: V642 = ADD 0x20 0x0
0xaa1: M[0x20] = 0x1
0xaa2: V643 = 0x20
0xaa4: V644 = ADD 0x20 0x20
0xaa5: V645 = 0x0
0xaa7: V646 = SHA3 0x0 0x40
0xaa8: V647 = S[V646]
0xaa9: V648 = 0xc03
0xaaf: V649 = 0xffffffff
0xab4: V650 = AND 0xffffffff 0xc03
0xab5: THROW 
0xab6: JUMPDEST 
0xab7: V651 = 0x1
0xab9: V652 = 0x0
0xabc: V653 = 0xffffffffffffffffffffffffffffffffffffffff
0xad1: V654 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xad2: V655 = 0xffffffffffffffffffffffffffffffffffffffff
0xae7: V656 = AND 0xffffffffffffffffffffffffffffffffffffffff V654
0xae9: M[0x0] = V656
0xaea: V657 = 0x20
0xaec: V658 = ADD 0x20 0x0
0xaef: M[0x20] = 0x1
0xaf0: V659 = 0x20
0xaf2: V660 = ADD 0x20 0x20
0xaf3: V661 = 0x0
0xaf5: V662 = SHA3 0x0 0x40
0xaf8: S[V662] = S0
0xafa: V663 = 0x7d6
0xafe: V664 = 0x1
0xb00: V665 = 0x0
0xb03: V666 = 0xffffffffffffffffffffffffffffffffffffffff
0xb18: V667 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0xb19: V668 = 0xffffffffffffffffffffffffffffffffffffffff
0xb2e: V669 = AND 0xffffffffffffffffffffffffffffffffffffffff V667
0xb30: M[0x0] = V669
0xb31: V670 = 0x20
0xb33: V671 = ADD 0x20 0x0
0xb36: M[0x20] = 0x1
0xb37: V672 = 0x20
0xb39: V673 = ADD 0x20 0x20
0xb3a: V674 = 0x0
0xb3c: V675 = SHA3 0x0 0x40
0xb3d: V676 = S[V675]
0xb3e: V677 = 0xc22
0xb44: V678 = 0xffffffff
0xb49: V679 = AND 0xffffffff 0xc22
0xb4a: THROW 
0xb4b: JUMPDEST 
0xb4c: V680 = 0x1
0xb4e: V681 = 0x0
0xb51: V682 = 0xffffffffffffffffffffffffffffffffffffffff
0xb66: V683 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0xb67: V684 = 0xffffffffffffffffffffffffffffffffffffffff
0xb7c: V685 = AND 0xffffffffffffffffffffffffffffffffffffffff V683
0xb7e: M[0x0] = V685
0xb7f: V686 = 0x20
0xb81: V687 = ADD 0x20 0x0
0xb84: M[0x20] = 0x1
0xb85: V688 = 0x20
0xb87: V689 = ADD 0x20 0x20
0xb88: V690 = 0x0
0xb8a: V691 = SHA3 0x0 0x40
0xb8d: S[V691] = S0
0xb8f: V692 = 0x82c
0xb94: V693 = 0xc22
0xb9a: V694 = 0xffffffff
0xb9f: V695 = AND 0xffffffff 0xc22
0xba0: THROW 
0xba1: JUMPDEST 
0xba2: V696 = 0x2
0xba4: V697 = 0x0
0xba7: V698 = 0xffffffffffffffffffffffffffffffffffffffff
0xbbc: V699 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0xbbd: V700 = 0xffffffffffffffffffffffffffffffffffffffff
0xbd2: V701 = AND 0xffffffffffffffffffffffffffffffffffffffff V699
0xbd4: M[0x0] = V701
0xbd5: V702 = 0x20
0xbd7: V703 = ADD 0x20 0x0
0xbda: M[0x20] = 0x2
0xbdb: V704 = 0x20
0xbdd: V705 = ADD 0x20 0x20
0xbde: V706 = 0x0
0xbe0: V707 = SHA3 0x0 0x40
0xbe1: V708 = 0x0
0xbe3: V709 = CALLER
0xbe4: V710 = 0xffffffffffffffffffffffffffffffffffffffff
0xbf9: V711 = AND 0xffffffffffffffffffffffffffffffffffffffff V709
0xbfa: V712 = 0xffffffffffffffffffffffffffffffffffffffff
0xc0f: V713 = AND 0xffffffffffffffffffffffffffffffffffffffff V711
0xc11: M[0x0] = V713
0xc12: V714 = 0x20
0xc14: V715 = ADD 0x20 0x0
0xc17: M[0x20] = V707
0xc18: V716 = 0x20
0xc1a: V717 = ADD 0x20 0x20
0xc1b: V718 = 0x0
0xc1d: V719 = SHA3 0x0 0x40
0xc20: S[V719] = S0
0xc23: V720 = 0xffffffffffffffffffffffffffffffffffffffff
0xc38: V721 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xc3a: V722 = 0xffffffffffffffffffffffffffffffffffffffff
0xc4f: V723 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0xc50: V724 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xc72: V725 = 0x40
0xc74: V726 = M[0x40]
0xc78: M[V726] = S3
0xc79: V727 = 0x20
0xc7b: V728 = ADD 0x20 V726
0xc7f: V729 = 0x40
0xc81: V730 = M[0x40]
0xc84: V731 = SUB V728 V730
0xc86: LOG V730 V731 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V723 V721
0xc87: V732 = 0x1
---
Entry stack: [S2, S1, 0x1]
Stack pops: 40
Stack additions: [S1, 0x1, S3, S4, S5]
Exit stack: []

================================

Block 0xc8b
[0xc8b:0xd15]
---
Predecessors: [0x9cf]
Successors: [0xd16]
---
0xc8b JUMPDEST
0xc8c POP
0xc8d SWAP4
0xc8e SWAP3
0xc8f POP
0xc90 POP
0xc91 POP
0xc92 JUMP
0xc93 JUMPDEST
0xc94 PUSH1 0x12
0xc96 DUP2
0xc97 JUMP
0xc98 JUMPDEST
0xc99 PUSH1 0x40
0xc9b DUP1
0xc9c MLOAD
0xc9d SWAP1
0xc9e DUP2
0xc9f ADD
0xca0 PUSH1 0x40
0xca2 MSTORE
0xca3 DUP1
0xca4 PUSH1 0x3
0xca6 DUP2
0xca7 MSTORE
0xca8 PUSH1 0x20
0xcaa ADD
0xcab PUSH32 0x312e300000000000000000000000000000000000000000000000000000000000
0xccc DUP2
0xccd MSTORE
0xcce POP
0xccf DUP2
0xcd0 JUMP
0xcd1 JUMPDEST
0xcd2 PUSH1 0x0
0xcd4 PUSH1 0x1
0xcd6 PUSH1 0x0
0xcd8 DUP4
0xcd9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcee AND
0xcef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd04 AND
0xd05 DUP2
0xd06 MSTORE
0xd07 PUSH1 0x20
0xd09 ADD
0xd0a SWAP1
0xd0b DUP2
0xd0c MSTORE
0xd0d PUSH1 0x20
0xd0f ADD
0xd10 PUSH1 0x0
0xd12 SHA3
0xd13 SLOAD
0xd14 SWAP1
0xd15 POP
---
0xc8b: JUMPDEST 
0xc92: JUMP S5
0xc93: JUMPDEST 
0xc94: V733 = 0x12
0xc97: JUMP S0
0xc98: JUMPDEST 
0xc99: V734 = 0x40
0xc9c: V735 = M[0x40]
0xc9f: V736 = ADD V735 0x40
0xca0: V737 = 0x40
0xca2: M[0x40] = V736
0xca4: V738 = 0x3
0xca7: M[V735] = 0x3
0xca8: V739 = 0x20
0xcaa: V740 = ADD 0x20 V735
0xcab: V741 = 0x312e300000000000000000000000000000000000000000000000000000000000
0xccd: M[V740] = 0x312e300000000000000000000000000000000000000000000000000000000000
0xcd0: JUMP S0
0xcd1: JUMPDEST 
0xcd2: V742 = 0x0
0xcd4: V743 = 0x1
0xcd6: V744 = 0x0
0xcd9: V745 = 0xffffffffffffffffffffffffffffffffffffffff
0xcee: V746 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xcef: V747 = 0xffffffffffffffffffffffffffffffffffffffff
0xd04: V748 = AND 0xffffffffffffffffffffffffffffffffffffffff V746
0xd06: M[0x0] = V748
0xd07: V749 = 0x20
0xd09: V750 = ADD 0x20 0x0
0xd0c: M[0x20] = 0x1
0xd0d: V751 = 0x20
0xd0f: V752 = ADD 0x20 0x20
0xd10: V753 = 0x0
0xd12: V754 = SHA3 0x0 0x40
0xd13: V755 = S[V754]
---
Entry stack: [S4, S3, S2, 0x1, S0]
Stack pops: 38
Stack additions: [V755, S0]
Exit stack: []

================================

Block 0xd16
[0xd16:0xee9]
---
Predecessors: [0xc8b]
Successors: [0xeea]
---
0xd16 JUMPDEST
0xd17 SWAP2
0xd18 SWAP1
0xd19 POP
0xd1a JUMP
0xd1b JUMPDEST
0xd1c PUSH1 0x40
0xd1e DUP1
0xd1f MLOAD
0xd20 SWAP1
0xd21 DUP2
0xd22 ADD
0xd23 PUSH1 0x40
0xd25 MSTORE
0xd26 DUP1
0xd27 PUSH1 0x3
0xd29 DUP2
0xd2a MSTORE
0xd2b PUSH1 0x20
0xd2d ADD
0xd2e PUSH32 0x4c51540000000000000000000000000000000000000000000000000000000000
0xd4f DUP2
0xd50 MSTORE
0xd51 POP
0xd52 DUP2
0xd53 JUMP
0xd54 JUMPDEST
0xd55 PUSH1 0x0
0xd57 PUSH2 0xa33
0xd5a DUP3
0xd5b PUSH1 0x1
0xd5d PUSH1 0x0
0xd5f CALLER
0xd60 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd75 AND
0xd76 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd8b AND
0xd8c DUP2
0xd8d MSTORE
0xd8e PUSH1 0x20
0xd90 ADD
0xd91 SWAP1
0xd92 DUP2
0xd93 MSTORE
0xd94 PUSH1 0x20
0xd96 ADD
0xd97 PUSH1 0x0
0xd99 SHA3
0xd9a SLOAD
0xd9b PUSH2 0xc22
0xd9e SWAP1
0xd9f SWAP2
0xda0 SWAP1
0xda1 PUSH4 0xffffffff
0xda6 AND
0xda7 JUMP
0xda8 JUMPDEST
0xda9 PUSH1 0x1
0xdab PUSH1 0x0
0xdad CALLER
0xdae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdc3 AND
0xdc4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdd9 AND
0xdda DUP2
0xddb MSTORE
0xddc PUSH1 0x20
0xdde ADD
0xddf SWAP1
0xde0 DUP2
0xde1 MSTORE
0xde2 PUSH1 0x20
0xde4 ADD
0xde5 PUSH1 0x0
0xde7 SHA3
0xde8 DUP2
0xde9 SWAP1
0xdea SSTORE
0xdeb POP
0xdec PUSH2 0xac8
0xdef DUP3
0xdf0 PUSH1 0x1
0xdf2 PUSH1 0x0
0xdf4 DUP7
0xdf5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe0a AND
0xe0b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe20 AND
0xe21 DUP2
0xe22 MSTORE
0xe23 PUSH1 0x20
0xe25 ADD
0xe26 SWAP1
0xe27 DUP2
0xe28 MSTORE
0xe29 PUSH1 0x20
0xe2b ADD
0xe2c PUSH1 0x0
0xe2e SHA3
0xe2f SLOAD
0xe30 PUSH2 0xc03
0xe33 SWAP1
0xe34 SWAP2
0xe35 SWAP1
0xe36 PUSH4 0xffffffff
0xe3b AND
0xe3c JUMP
0xe3d JUMPDEST
0xe3e PUSH1 0x1
0xe40 PUSH1 0x0
0xe42 DUP6
0xe43 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe58 AND
0xe59 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe6e AND
0xe6f DUP2
0xe70 MSTORE
0xe71 PUSH1 0x20
0xe73 ADD
0xe74 SWAP1
0xe75 DUP2
0xe76 MSTORE
0xe77 PUSH1 0x20
0xe79 ADD
0xe7a PUSH1 0x0
0xe7c SHA3
0xe7d DUP2
0xe7e SWAP1
0xe7f SSTORE
0xe80 POP
0xe81 DUP3
0xe82 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe97 AND
0xe98 CALLER
0xe99 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xeae AND
0xeaf PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xed0 DUP5
0xed1 PUSH1 0x40
0xed3 MLOAD
0xed4 DUP1
0xed5 DUP3
0xed6 DUP2
0xed7 MSTORE
0xed8 PUSH1 0x20
0xeda ADD
0xedb SWAP2
0xedc POP
0xedd POP
0xede PUSH1 0x40
0xee0 MLOAD
0xee1 DUP1
0xee2 SWAP2
0xee3 SUB
0xee4 SWAP1
0xee5 LOG3
0xee6 PUSH1 0x1
0xee8 SWAP1
0xee9 POP
---
0xd16: JUMPDEST 
0xd1a: JUMP S2
0xd1b: JUMPDEST 
0xd1c: V756 = 0x40
0xd1f: V757 = M[0x40]
0xd22: V758 = ADD V757 0x40
0xd23: V759 = 0x40
0xd25: M[0x40] = V758
0xd27: V760 = 0x3
0xd2a: M[V757] = 0x3
0xd2b: V761 = 0x20
0xd2d: V762 = ADD 0x20 V757
0xd2e: V763 = 0x4c51540000000000000000000000000000000000000000000000000000000000
0xd50: M[V762] = 0x4c51540000000000000000000000000000000000000000000000000000000000
0xd53: JUMP S0
0xd54: JUMPDEST 
0xd55: V764 = 0x0
0xd57: V765 = 0xa33
0xd5b: V766 = 0x1
0xd5d: V767 = 0x0
0xd5f: V768 = CALLER
0xd60: V769 = 0xffffffffffffffffffffffffffffffffffffffff
0xd75: V770 = AND 0xffffffffffffffffffffffffffffffffffffffff V768
0xd76: V771 = 0xffffffffffffffffffffffffffffffffffffffff
0xd8b: V772 = AND 0xffffffffffffffffffffffffffffffffffffffff V770
0xd8d: M[0x0] = V772
0xd8e: V773 = 0x20
0xd90: V774 = ADD 0x20 0x0
0xd93: M[0x20] = 0x1
0xd94: V775 = 0x20
0xd96: V776 = ADD 0x20 0x20
0xd97: V777 = 0x0
0xd99: V778 = SHA3 0x0 0x40
0xd9a: V779 = S[V778]
0xd9b: V780 = 0xc22
0xda1: V781 = 0xffffffff
0xda6: V782 = AND 0xffffffff 0xc22
0xda7: THROW 
0xda8: JUMPDEST 
0xda9: V783 = 0x1
0xdab: V784 = 0x0
0xdad: V785 = CALLER
0xdae: V786 = 0xffffffffffffffffffffffffffffffffffffffff
0xdc3: V787 = AND 0xffffffffffffffffffffffffffffffffffffffff V785
0xdc4: V788 = 0xffffffffffffffffffffffffffffffffffffffff
0xdd9: V789 = AND 0xffffffffffffffffffffffffffffffffffffffff V787
0xddb: M[0x0] = V789
0xddc: V790 = 0x20
0xdde: V791 = ADD 0x20 0x0
0xde1: M[0x20] = 0x1
0xde2: V792 = 0x20
0xde4: V793 = ADD 0x20 0x20
0xde5: V794 = 0x0
0xde7: V795 = SHA3 0x0 0x40
0xdea: S[V795] = S0
0xdec: V796 = 0xac8
0xdf0: V797 = 0x1
0xdf2: V798 = 0x0
0xdf5: V799 = 0xffffffffffffffffffffffffffffffffffffffff
0xe0a: V800 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xe0b: V801 = 0xffffffffffffffffffffffffffffffffffffffff
0xe20: V802 = AND 0xffffffffffffffffffffffffffffffffffffffff V800
0xe22: M[0x0] = V802
0xe23: V803 = 0x20
0xe25: V804 = ADD 0x20 0x0
0xe28: M[0x20] = 0x1
0xe29: V805 = 0x20
0xe2b: V806 = ADD 0x20 0x20
0xe2c: V807 = 0x0
0xe2e: V808 = SHA3 0x0 0x40
0xe2f: V809 = S[V808]
0xe30: V810 = 0xc03
0xe36: V811 = 0xffffffff
0xe3b: V812 = AND 0xffffffff 0xc03
0xe3c: THROW 
0xe3d: JUMPDEST 
0xe3e: V813 = 0x1
0xe40: V814 = 0x0
0xe43: V815 = 0xffffffffffffffffffffffffffffffffffffffff
0xe58: V816 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xe59: V817 = 0xffffffffffffffffffffffffffffffffffffffff
0xe6e: V818 = AND 0xffffffffffffffffffffffffffffffffffffffff V816
0xe70: M[0x0] = V818
0xe71: V819 = 0x20
0xe73: V820 = ADD 0x20 0x0
0xe76: M[0x20] = 0x1
0xe77: V821 = 0x20
0xe79: V822 = ADD 0x20 0x20
0xe7a: V823 = 0x0
0xe7c: V824 = SHA3 0x0 0x40
0xe7f: S[V824] = S0
0xe82: V825 = 0xffffffffffffffffffffffffffffffffffffffff
0xe97: V826 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xe98: V827 = CALLER
0xe99: V828 = 0xffffffffffffffffffffffffffffffffffffffff
0xeae: V829 = AND 0xffffffffffffffffffffffffffffffffffffffff V827
0xeaf: V830 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xed1: V831 = 0x40
0xed3: V832 = M[0x40]
0xed7: M[V832] = S2
0xed8: V833 = 0x20
0xeda: V834 = ADD 0x20 V832
0xede: V835 = 0x40
0xee0: V836 = M[0x40]
0xee3: V837 = SUB V834 V836
0xee5: LOG V836 V837 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V829 V826
0xee6: V838 = 0x1
---
Entry stack: [S1, V755]
Stack pops: 16
Stack additions: [0x1, S2, S3]
Exit stack: []

================================

Block 0xeea
[0xeea:0xf71]
---
Predecessors: [0xd16]
Successors: [0xf72]
---
0xeea JUMPDEST
0xeeb SWAP3
0xeec SWAP2
0xeed POP
0xeee POP
0xeef JUMP
0xef0 JUMPDEST
0xef1 PUSH1 0x0
0xef3 PUSH1 0x2
0xef5 PUSH1 0x0
0xef7 DUP5
0xef8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf0d AND
0xf0e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf23 AND
0xf24 DUP2
0xf25 MSTORE
0xf26 PUSH1 0x20
0xf28 ADD
0xf29 SWAP1
0xf2a DUP2
0xf2b MSTORE
0xf2c PUSH1 0x20
0xf2e ADD
0xf2f PUSH1 0x0
0xf31 SHA3
0xf32 PUSH1 0x0
0xf34 DUP4
0xf35 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf4a AND
0xf4b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf60 AND
0xf61 DUP2
0xf62 MSTORE
0xf63 PUSH1 0x20
0xf65 ADD
0xf66 SWAP1
0xf67 DUP2
0xf68 MSTORE
0xf69 PUSH1 0x20
0xf6b ADD
0xf6c PUSH1 0x0
0xf6e SHA3
0xf6f SLOAD
0xf70 SWAP1
0xf71 POP
---
0xeea: JUMPDEST 
0xeef: JUMP S3
0xef0: JUMPDEST 
0xef1: V839 = 0x0
0xef3: V840 = 0x2
0xef5: V841 = 0x0
0xef8: V842 = 0xffffffffffffffffffffffffffffffffffffffff
0xf0d: V843 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xf0e: V844 = 0xffffffffffffffffffffffffffffffffffffffff
0xf23: V845 = AND 0xffffffffffffffffffffffffffffffffffffffff V843
0xf25: M[0x0] = V845
0xf26: V846 = 0x20
0xf28: V847 = ADD 0x20 0x0
0xf2b: M[0x20] = 0x2
0xf2c: V848 = 0x20
0xf2e: V849 = ADD 0x20 0x20
0xf2f: V850 = 0x0
0xf31: V851 = SHA3 0x0 0x40
0xf32: V852 = 0x0
0xf35: V853 = 0xffffffffffffffffffffffffffffffffffffffff
0xf4a: V854 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xf4b: V855 = 0xffffffffffffffffffffffffffffffffffffffff
0xf60: V856 = AND 0xffffffffffffffffffffffffffffffffffffffff V854
0xf62: M[0x0] = V856
0xf63: V857 = 0x20
0xf65: V858 = ADD 0x20 0x0
0xf68: M[0x20] = V851
0xf69: V859 = 0x20
0xf6b: V860 = ADD 0x20 0x20
0xf6c: V861 = 0x0
0xf6e: V862 = SHA3 0x0 0x40
0xf6f: V863 = S[V862]
---
Entry stack: [S2, S1, 0x1]
Stack pops: 7
Stack additions: [V863, S0, S1]
Exit stack: []

================================

Block 0xf72
[0xf72:0xf8a]
---
Predecessors: [0xeea]
Successors: [0xf8b]
---
0xf72 JUMPDEST
0xf73 SWAP3
0xf74 SWAP2
0xf75 POP
0xf76 POP
0xf77 JUMP
0xf78 JUMPDEST
0xf79 PUSH1 0x0
0xf7b DUP1
0xf7c DUP3
0xf7d DUP5
0xf7e ADD
0xf7f SWAP1
0xf80 POP
0xf81 DUP4
0xf82 DUP2
0xf83 LT
0xf84 ISZERO
0xf85 ISZERO
0xf86 ISZERO
0xf87 PUSH2 0xc17
0xf8a JUMPI
---
0xf72: JUMPDEST 
0xf77: JUMP S3
0xf78: JUMPDEST 
0xf79: V864 = 0x0
0xf7e: V865 = ADD S1 S0
0xf83: V866 = LT V865 S1
0xf84: V867 = ISZERO V866
0xf85: V868 = ISZERO V867
0xf86: V869 = ISZERO V868
0xf87: V870 = 0xc17
0xf8a: THROWI V869
---
Entry stack: [S2, S1, V863]
Stack pops: 7
Stack additions: [V865, 0x0, S0, S1]
Exit stack: []

================================

Block 0xf8b
[0xf8b:0xf8f]
---
Predecessors: [0xf72]
Successors: [0xf90]
---
0xf8b INVALID
0xf8c JUMPDEST
0xf8d DUP1
0xf8e SWAP2
0xf8f POP
---
0xf8b: INVALID 
0xf8c: JUMPDEST 
---
Entry stack: [S3, S2, 0x0, V865]
Stack pops: 0
Stack additions: [S0, S0]
Exit stack: []

================================

Block 0xf90
[0xf90:0xfa3]
---
Predecessors: [0xf8b]
Successors: [0xfa4]
---
0xf90 JUMPDEST
0xf91 POP
0xf92 SWAP3
0xf93 SWAP2
0xf94 POP
0xf95 POP
0xf96 JUMP
0xf97 JUMPDEST
0xf98 PUSH1 0x0
0xf9a DUP3
0xf9b DUP3
0xf9c GT
0xf9d ISZERO
0xf9e ISZERO
0xf9f ISZERO
0xfa0 PUSH2 0xc30
0xfa3 JUMPI
---
0xf90: JUMPDEST 
0xf96: JUMP S4
0xf97: JUMPDEST 
0xf98: V871 = 0x0
0xf9c: V872 = GT S0 S1
0xf9d: V873 = ISZERO V872
0xf9e: V874 = ISZERO V873
0xf9f: V875 = ISZERO V874
0xfa0: V876 = 0xc30
0xfa3: THROWI V875
---
Entry stack: [S1, S0]
Stack pops: 9
Stack additions: [0x0, S0, S1]
Exit stack: []

================================

Block 0xfa4
[0xfa4:0xfaa]
---
Predecessors: [0xf90]
Successors: [0xfab]
---
0xfa4 INVALID
0xfa5 JUMPDEST
0xfa6 DUP2
0xfa7 DUP4
0xfa8 SUB
0xfa9 SWAP1
0xfaa POP
---
0xfa4: INVALID 
0xfa5: JUMPDEST 
0xfa8: V877 = SUB S2 S1
---
Entry stack: [S2, S1, 0x0]
Stack pops: 0
Stack additions: [V877, S1, S2]
Exit stack: []

================================

Block 0xfab
[0xfab:0xfe1]
---
Predecessors: [0xfa4]
Successors: [0xfe2]
---
0xfab JUMPDEST
0xfac SWAP3
0xfad SWAP2
0xfae POP
0xfaf POP
0xfb0 JUMP
0xfb1 STOP
0xfb2 LOG1
0xfb3 PUSH6 0x627a7a723058
0xfba SHA3
0xfbb LT
0xfbc MISSING 0x21
0xfbd MISSING 0xb7
0xfbe MISSING 0xbe
0xfbf ADDMOD
0xfc0 GASPRICE
0xfc1 MISSING 0xd0
0xfc2 PUSH27 0x912b3baac2bda9f49bc7d62801a5bb39eb7778e741decccb002960
0xfde PUSH1 0x60
0xfe0 BLOCKHASH
0xfe1 MSTORE
---
0xfab: JUMPDEST 
0xfb0: JUMP S3
0xfb1: STOP 
0xfb2: LOG S0 S1 S2
0xfb3: V878 = 0x627a7a723058
0xfba: V879 = SHA3 0x627a7a723058 S3
0xfbb: V880 = LT V879 S4
0xfbc: MISSING 0x21
0xfbd: MISSING 0xb7
0xfbe: MISSING 0xbe
0xfbf: V881 = ADDMOD S0 S1 S2
0xfc0: V882 = GASPRICE
0xfc1: MISSING 0xd0
0xfc2: V883 = 0x912b3baac2bda9f49bc7d62801a5bb39eb7778e741decccb002960
0xfde: V884 = 0x60
0xfe0: V885 = BLOCKHASH 0x60
0xfe1: M[V885] = 0x912b3baac2bda9f49bc7d62801a5bb39eb7778e741decccb002960
---
Entry stack: [S2, S1, V877]
Stack pops: 214
Stack additions: []
Exit stack: []

================================

Block 0xfe2
[0xfe2:0x101d]
---
Predecessors: [0xfab]
Successors: [0x101e]
---
0xfe2 JUMPDEST
0xfe3 PUSH1 0x0
0xfe5 DUP1
0xfe6 REVERT
0xfe7 STOP
0xfe8 LOG1
0xfe9 PUSH6 0x627a7a723058
0xff0 SHA3
0xff1 SWAP16
0xff2 MISSING 0xc7
0xff3 SAR
0xff4 SWAP12
0xff5 MISSING 0xb0
0xff6 SWAP4
0xff7 MISSING 0xaa
0xff8 BYTE
0xff9 MISSING 0x27
0xffa MSIZE
0xffb PUSH6 0x4c149a1c814c
0x1002 PUSH3 0x5df4b1
0x1006 MISSING 0x25
0x1007 MISSING 0x1f
0x1008 STOP
0x1009 MISSING 0xe0
0x100a DUP11
0x100b LT
0x100c MISSING 0xb4
0x100d LT
0x100e SWAP4
0x100f EQ
0x1010 MISSING 0xac
0x1011 STOP
0x1012 MISSING 0x29
0x1013 PUSH1 0x60
0x1015 PUSH1 0x40
0x1017 MSTORE
0x1018 CALLDATASIZE
0x1019 ISZERO
0x101a PUSH2 0x76
0x101d JUMPI
---
0xfe2: JUMPDEST 
0xfe3: V886 = 0x0
0xfe6: REVERT 0x0 0x0
0xfe7: STOP 
0xfe8: LOG S0 S1 S2
0xfe9: V887 = 0x627a7a723058
0xff0: V888 = SHA3 0x627a7a723058 S3
0xff2: MISSING 0xc7
0xff3: V889 = SAR S0 S1
0xff5: MISSING 0xb0
0xff7: MISSING 0xaa
0xff8: V890 = BYTE S0 S1
0xff9: MISSING 0x27
0xffa: V891 = MSIZE
0xffb: V892 = 0x4c149a1c814c
0x1002: V893 = 0x5df4b1
0x1006: MISSING 0x25
0x1007: MISSING 0x1f
0x1008: STOP 
0x1009: MISSING 0xe0
0x100b: V894 = LT S10 S0
0x100c: MISSING 0xb4
0x100d: V895 = LT S0 S1
0x100f: V896 = EQ S5 S2
0x1010: MISSING 0xac
0x1011: STOP 
0x1012: MISSING 0x29
0x1013: V897 = 0x60
0x1015: V898 = 0x40
0x1017: M[0x40] = 0x60
0x1018: V899 = CALLDATASIZE
0x1019: V900 = ISZERO V899
0x101a: V901 = 0x76
0x101d: THROWI V900
---
Entry stack: []
Stack pops: 0
Stack additions: [S19, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, V888, S13, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, V889, S4, S1, S2, S3, S0, V890, 0x5df4b1, 0x4c149a1c814c, V891, V894, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, V896, S3, S4, V895]
Exit stack: []

================================

Block 0x101e
[0x101e:0x1051]
---
Predecessors: [0xfe2]
Successors: [0x1052]
---
0x101e PUSH1 0x0
0x1020 CALLDATALOAD
0x1021 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x103f SWAP1
0x1040 DIV
0x1041 PUSH4 0xffffffff
0x1046 AND
0x1047 DUP1
0x1048 PUSH4 0x95ea7b3
0x104d EQ
0x104e PUSH2 0x7b
0x1051 JUMPI
---
0x101e: V902 = 0x0
0x1020: V903 = CALLDATALOAD 0x0
0x1021: V904 = 0x100000000000000000000000000000000000000000000000000000000
0x1040: V905 = DIV V903 0x100000000000000000000000000000000000000000000000000000000
0x1041: V906 = 0xffffffff
0x1046: V907 = AND 0xffffffff V905
0x1048: V908 = 0x95ea7b3
0x104d: V909 = EQ 0x95ea7b3 V907
0x104e: V910 = 0x7b
0x1051: THROWI V909
---
Entry stack: []
Stack pops: 0
Stack additions: [V907]
Exit stack: [V907]

================================

Block 0x1052
[0x1052:0x105c]
---
Predecessors: [0x101e]
Successors: [0xd5, 0x105d]
---
0x1052 DUP1
0x1053 PUSH4 0x18160ddd
0x1058 EQ
0x1059 PUSH2 0xd5
0x105c JUMPI
---
0x1053: V911 = 0x18160ddd
0x1058: V912 = EQ 0x18160ddd V907
0x1059: V913 = 0xd5
0x105c: JUMPI 0xd5 V912
---
Entry stack: [V907]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V907]

================================

Block 0x105d
[0x105d:0x1067]
---
Predecessors: [0x1052]
Successors: [0x1068]
---
0x105d DUP1
0x105e PUSH4 0x23b872dd
0x1063 EQ
0x1064 PUSH2 0xfe
0x1067 JUMPI
---
0x105e: V914 = 0x23b872dd
0x1063: V915 = EQ 0x23b872dd V907
0x1064: V916 = 0xfe
0x1067: THROWI V915
---
Entry stack: [V907]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V907]

================================

Block 0x1068
[0x1068:0x1072]
---
Predecessors: [0x105d]
Successors: [0x1073]
---
0x1068 DUP1
0x1069 PUSH4 0x70a08231
0x106e EQ
0x106f PUSH2 0x177
0x1072 JUMPI
---
0x1069: V917 = 0x70a08231
0x106e: V918 = EQ 0x70a08231 V907
0x106f: V919 = 0x177
0x1072: THROWI V918
---
Entry stack: [V907]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V907]

================================

Block 0x1073
[0x1073:0x107d]
---
Predecessors: [0x1068]
Successors: [0x107e]
---
0x1073 DUP1
0x1074 PUSH4 0xa9059cbb
0x1079 EQ
0x107a PUSH2 0x1c4
0x107d JUMPI
---
0x1074: V920 = 0xa9059cbb
0x1079: V921 = EQ 0xa9059cbb V907
0x107a: V922 = 0x1c4
0x107d: THROWI V921
---
Entry stack: [V907]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V907]

================================

Block 0x107e
[0x107e:0x1088]
---
Predecessors: [0x1073]
Successors: [0x1089]
---
0x107e DUP1
0x107f PUSH4 0xdd62ed3e
0x1084 EQ
0x1085 PUSH2 0x21e
0x1088 JUMPI
---
0x107f: V923 = 0xdd62ed3e
0x1084: V924 = EQ 0xdd62ed3e V907
0x1085: V925 = 0x21e
0x1088: THROWI V924
---
Entry stack: [V907]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V907]

================================

Block 0x1089
[0x1089:0x1094]
---
Predecessors: [0x107e]
Successors: [0x1095]
---
0x1089 JUMPDEST
0x108a PUSH1 0x0
0x108c DUP1
0x108d REVERT
0x108e JUMPDEST
0x108f CALLVALUE
0x1090 ISZERO
0x1091 PUSH2 0x86
0x1094 JUMPI
---
0x1089: JUMPDEST 
0x108a: V926 = 0x0
0x108d: REVERT 0x0 0x0
0x108e: JUMPDEST 
0x108f: V927 = CALLVALUE
0x1090: V928 = ISZERO V927
0x1091: V929 = 0x86
0x1094: THROWI V928
---
Entry stack: [V907]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1095
[0x1095:0x10ee]
---
Predecessors: [0x1089]
Successors: [0x10ef]
---
0x1095 PUSH1 0x0
0x1097 DUP1
0x1098 REVERT
0x1099 JUMPDEST
0x109a PUSH2 0xbb
0x109d PUSH1 0x4
0x109f DUP1
0x10a0 DUP1
0x10a1 CALLDATALOAD
0x10a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10b7 AND
0x10b8 SWAP1
0x10b9 PUSH1 0x20
0x10bb ADD
0x10bc SWAP1
0x10bd SWAP2
0x10be SWAP1
0x10bf DUP1
0x10c0 CALLDATALOAD
0x10c1 SWAP1
0x10c2 PUSH1 0x20
0x10c4 ADD
0x10c5 SWAP1
0x10c6 SWAP2
0x10c7 SWAP1
0x10c8 POP
0x10c9 POP
0x10ca PUSH2 0x28a
0x10cd JUMP
0x10ce JUMPDEST
0x10cf PUSH1 0x40
0x10d1 MLOAD
0x10d2 DUP1
0x10d3 DUP3
0x10d4 ISZERO
0x10d5 ISZERO
0x10d6 ISZERO
0x10d7 ISZERO
0x10d8 DUP2
0x10d9 MSTORE
0x10da PUSH1 0x20
0x10dc ADD
0x10dd SWAP2
0x10de POP
0x10df POP
0x10e0 PUSH1 0x40
0x10e2 MLOAD
0x10e3 DUP1
0x10e4 SWAP2
0x10e5 SUB
0x10e6 SWAP1
0x10e7 RETURN
0x10e8 JUMPDEST
0x10e9 CALLVALUE
0x10ea ISZERO
0x10eb PUSH2 0xe0
0x10ee JUMPI
---
0x1095: V930 = 0x0
0x1098: REVERT 0x0 0x0
0x1099: JUMPDEST 
0x109a: V931 = 0xbb
0x109d: V932 = 0x4
0x10a1: V933 = CALLDATALOAD 0x4
0x10a2: V934 = 0xffffffffffffffffffffffffffffffffffffffff
0x10b7: V935 = AND 0xffffffffffffffffffffffffffffffffffffffff V933
0x10b9: V936 = 0x20
0x10bb: V937 = ADD 0x20 0x4
0x10c0: V938 = CALLDATALOAD 0x24
0x10c2: V939 = 0x20
0x10c4: V940 = ADD 0x20 0x24
0x10ca: V941 = 0x28a
0x10cd: THROW 
0x10ce: JUMPDEST 
0x10cf: V942 = 0x40
0x10d1: V943 = M[0x40]
0x10d4: V944 = ISZERO S0
0x10d5: V945 = ISZERO V944
0x10d6: V946 = ISZERO V945
0x10d7: V947 = ISZERO V946
0x10d9: M[V943] = V947
0x10da: V948 = 0x20
0x10dc: V949 = ADD 0x20 V943
0x10e0: V950 = 0x40
0x10e2: V951 = M[0x40]
0x10e5: V952 = SUB V949 V951
0x10e7: RETURN V951 V952
0x10e8: JUMPDEST 
0x10e9: V953 = CALLVALUE
0x10ea: V954 = ISZERO V953
0x10eb: V955 = 0xe0
0x10ee: THROWI V954
---
Entry stack: []
Stack pops: 0
Stack additions: [V938, V935, 0xbb]
Exit stack: []

================================

Block 0x10ef
[0x10ef:0x1117]
---
Predecessors: [0x1095]
Successors: [0x1118]
---
0x10ef PUSH1 0x0
0x10f1 DUP1
0x10f2 REVERT
0x10f3 JUMPDEST
0x10f4 PUSH2 0xe8
0x10f7 PUSH2 0x412
0x10fa JUMP
0x10fb JUMPDEST
0x10fc PUSH1 0x40
0x10fe MLOAD
0x10ff DUP1
0x1100 DUP3
0x1101 DUP2
0x1102 MSTORE
0x1103 PUSH1 0x20
0x1105 ADD
0x1106 SWAP2
0x1107 POP
0x1108 POP
0x1109 PUSH1 0x40
0x110b MLOAD
0x110c DUP1
0x110d SWAP2
0x110e SUB
0x110f SWAP1
0x1110 RETURN
0x1111 JUMPDEST
0x1112 CALLVALUE
0x1113 ISZERO
0x1114 PUSH2 0x109
0x1117 JUMPI
---
0x10ef: V956 = 0x0
0x10f2: REVERT 0x0 0x0
0x10f3: JUMPDEST 
0x10f4: V957 = 0xe8
0x10f7: V958 = 0x412
0x10fa: THROW 
0x10fb: JUMPDEST 
0x10fc: V959 = 0x40
0x10fe: V960 = M[0x40]
0x1102: M[V960] = S0
0x1103: V961 = 0x20
0x1105: V962 = ADD 0x20 V960
0x1109: V963 = 0x40
0x110b: V964 = M[0x40]
0x110e: V965 = SUB V962 V964
0x1110: RETURN V964 V965
0x1111: JUMPDEST 
0x1112: V966 = CALLVALUE
0x1113: V967 = ISZERO V966
0x1114: V968 = 0x109
0x1117: THROWI V967
---
Entry stack: []
Stack pops: 0
Stack additions: [0xe8]
Exit stack: []

================================

Block 0x1118
[0x1118:0x1190]
---
Predecessors: [0x10ef]
Successors: [0x1191]
---
0x1118 PUSH1 0x0
0x111a DUP1
0x111b REVERT
0x111c JUMPDEST
0x111d PUSH2 0x15d
0x1120 PUSH1 0x4
0x1122 DUP1
0x1123 DUP1
0x1124 CALLDATALOAD
0x1125 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x113a AND
0x113b SWAP1
0x113c PUSH1 0x20
0x113e ADD
0x113f SWAP1
0x1140 SWAP2
0x1141 SWAP1
0x1142 DUP1
0x1143 CALLDATALOAD
0x1144 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1159 AND
0x115a SWAP1
0x115b PUSH1 0x20
0x115d ADD
0x115e SWAP1
0x115f SWAP2
0x1160 SWAP1
0x1161 DUP1
0x1162 CALLDATALOAD
0x1163 SWAP1
0x1164 PUSH1 0x20
0x1166 ADD
0x1167 SWAP1
0x1168 SWAP2
0x1169 SWAP1
0x116a POP
0x116b POP
0x116c PUSH2 0x418
0x116f JUMP
0x1170 JUMPDEST
0x1171 PUSH1 0x40
0x1173 MLOAD
0x1174 DUP1
0x1175 DUP3
0x1176 ISZERO
0x1177 ISZERO
0x1178 ISZERO
0x1179 ISZERO
0x117a DUP2
0x117b MSTORE
0x117c PUSH1 0x20
0x117e ADD
0x117f SWAP2
0x1180 POP
0x1181 POP
0x1182 PUSH1 0x40
0x1184 MLOAD
0x1185 DUP1
0x1186 SWAP2
0x1187 SUB
0x1188 SWAP1
0x1189 RETURN
0x118a JUMPDEST
0x118b CALLVALUE
0x118c ISZERO
0x118d PUSH2 0x182
0x1190 JUMPI
---
0x1118: V969 = 0x0
0x111b: REVERT 0x0 0x0
0x111c: JUMPDEST 
0x111d: V970 = 0x15d
0x1120: V971 = 0x4
0x1124: V972 = CALLDATALOAD 0x4
0x1125: V973 = 0xffffffffffffffffffffffffffffffffffffffff
0x113a: V974 = AND 0xffffffffffffffffffffffffffffffffffffffff V972
0x113c: V975 = 0x20
0x113e: V976 = ADD 0x20 0x4
0x1143: V977 = CALLDATALOAD 0x24
0x1144: V978 = 0xffffffffffffffffffffffffffffffffffffffff
0x1159: V979 = AND 0xffffffffffffffffffffffffffffffffffffffff V977
0x115b: V980 = 0x20
0x115d: V981 = ADD 0x20 0x24
0x1162: V982 = CALLDATALOAD 0x44
0x1164: V983 = 0x20
0x1166: V984 = ADD 0x20 0x44
0x116c: V985 = 0x418
0x116f: THROW 
0x1170: JUMPDEST 
0x1171: V986 = 0x40
0x1173: V987 = M[0x40]
0x1176: V988 = ISZERO S0
0x1177: V989 = ISZERO V988
0x1178: V990 = ISZERO V989
0x1179: V991 = ISZERO V990
0x117b: M[V987] = V991
0x117c: V992 = 0x20
0x117e: V993 = ADD 0x20 V987
0x1182: V994 = 0x40
0x1184: V995 = M[0x40]
0x1187: V996 = SUB V993 V995
0x1189: RETURN V995 V996
0x118a: JUMPDEST 
0x118b: V997 = CALLVALUE
0x118c: V998 = ISZERO V997
0x118d: V999 = 0x182
0x1190: THROWI V998
---
Entry stack: []
Stack pops: 0
Stack additions: [V982, V979, V974, 0x15d]
Exit stack: []

================================

Block 0x1191
[0x1191:0x11dd]
---
Predecessors: [0x1118]
Successors: [0x11de]
---
0x1191 PUSH1 0x0
0x1193 DUP1
0x1194 REVERT
0x1195 JUMPDEST
0x1196 PUSH2 0x1ae
0x1199 PUSH1 0x4
0x119b DUP1
0x119c DUP1
0x119d CALLDATALOAD
0x119e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11b3 AND
0x11b4 SWAP1
0x11b5 PUSH1 0x20
0x11b7 ADD
0x11b8 SWAP1
0x11b9 SWAP2
0x11ba SWAP1
0x11bb POP
0x11bc POP
0x11bd PUSH2 0x6c9
0x11c0 JUMP
0x11c1 JUMPDEST
0x11c2 PUSH1 0x40
0x11c4 MLOAD
0x11c5 DUP1
0x11c6 DUP3
0x11c7 DUP2
0x11c8 MSTORE
0x11c9 PUSH1 0x20
0x11cb ADD
0x11cc SWAP2
0x11cd POP
0x11ce POP
0x11cf PUSH1 0x40
0x11d1 MLOAD
0x11d2 DUP1
0x11d3 SWAP2
0x11d4 SUB
0x11d5 SWAP1
0x11d6 RETURN
0x11d7 JUMPDEST
0x11d8 CALLVALUE
0x11d9 ISZERO
0x11da PUSH2 0x1cf
0x11dd JUMPI
---
0x1191: V1000 = 0x0
0x1194: REVERT 0x0 0x0
0x1195: JUMPDEST 
0x1196: V1001 = 0x1ae
0x1199: V1002 = 0x4
0x119d: V1003 = CALLDATALOAD 0x4
0x119e: V1004 = 0xffffffffffffffffffffffffffffffffffffffff
0x11b3: V1005 = AND 0xffffffffffffffffffffffffffffffffffffffff V1003
0x11b5: V1006 = 0x20
0x11b7: V1007 = ADD 0x20 0x4
0x11bd: V1008 = 0x6c9
0x11c0: THROW 
0x11c1: JUMPDEST 
0x11c2: V1009 = 0x40
0x11c4: V1010 = M[0x40]
0x11c8: M[V1010] = S0
0x11c9: V1011 = 0x20
0x11cb: V1012 = ADD 0x20 V1010
0x11cf: V1013 = 0x40
0x11d1: V1014 = M[0x40]
0x11d4: V1015 = SUB V1012 V1014
0x11d6: RETURN V1014 V1015
0x11d7: JUMPDEST 
0x11d8: V1016 = CALLVALUE
0x11d9: V1017 = ISZERO V1016
0x11da: V1018 = 0x1cf
0x11dd: THROWI V1017
---
Entry stack: []
Stack pops: 0
Stack additions: [V1005, 0x1ae]
Exit stack: []

================================

Block 0x11de
[0x11de:0x1216]
---
Predecessors: [0x1191]
Successors: [0x713]
---
0x11de PUSH1 0x0
0x11e0 DUP1
0x11e1 REVERT
0x11e2 JUMPDEST
0x11e3 PUSH2 0x204
0x11e6 PUSH1 0x4
0x11e8 DUP1
0x11e9 DUP1
0x11ea CALLDATALOAD
0x11eb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1200 AND
0x1201 SWAP1
0x1202 PUSH1 0x20
0x1204 ADD
0x1205 SWAP1
0x1206 SWAP2
0x1207 SWAP1
0x1208 DUP1
0x1209 CALLDATALOAD
0x120a SWAP1
0x120b PUSH1 0x20
0x120d ADD
0x120e SWAP1
0x120f SWAP2
0x1210 SWAP1
0x1211 POP
0x1212 POP
0x1213 PUSH2 0x713
0x1216 JUMP
---
0x11de: V1019 = 0x0
0x11e1: REVERT 0x0 0x0
0x11e2: JUMPDEST 
0x11e3: V1020 = 0x204
0x11e6: V1021 = 0x4
0x11ea: V1022 = CALLDATALOAD 0x4
0x11eb: V1023 = 0xffffffffffffffffffffffffffffffffffffffff
0x1200: V1024 = AND 0xffffffffffffffffffffffffffffffffffffffff V1022
0x1202: V1025 = 0x20
0x1204: V1026 = ADD 0x20 0x4
0x1209: V1027 = CALLDATALOAD 0x24
0x120b: V1028 = 0x20
0x120d: V1029 = ADD 0x20 0x24
0x1213: V1030 = 0x713
0x1216: JUMP 0x713
---
Entry stack: []
Stack pops: 0
Stack additions: [V1027, V1024, 0x204]
Exit stack: []

================================

Block 0x1217
[0x1217:0x1237]
---
Predecessors: []
Successors: [0x1238]
---
0x1217 JUMPDEST
0x1218 PUSH1 0x40
0x121a MLOAD
0x121b DUP1
0x121c DUP3
0x121d ISZERO
0x121e ISZERO
0x121f ISZERO
0x1220 ISZERO
0x1221 DUP2
0x1222 MSTORE
0x1223 PUSH1 0x20
0x1225 ADD
0x1226 SWAP2
0x1227 POP
0x1228 POP
0x1229 PUSH1 0x40
0x122b MLOAD
0x122c DUP1
0x122d SWAP2
0x122e SUB
0x122f SWAP1
0x1230 RETURN
0x1231 JUMPDEST
0x1232 CALLVALUE
0x1233 ISZERO
0x1234 PUSH2 0x229
0x1237 JUMPI
---
0x1217: JUMPDEST 
0x1218: V1031 = 0x40
0x121a: V1032 = M[0x40]
0x121d: V1033 = ISZERO S0
0x121e: V1034 = ISZERO V1033
0x121f: V1035 = ISZERO V1034
0x1220: V1036 = ISZERO V1035
0x1222: M[V1032] = V1036
0x1223: V1037 = 0x20
0x1225: V1038 = ADD 0x20 V1032
0x1229: V1039 = 0x40
0x122b: V1040 = M[0x40]
0x122e: V1041 = SUB V1038 V1040
0x1230: RETURN V1040 V1041
0x1231: JUMPDEST 
0x1232: V1042 = CALLVALUE
0x1233: V1043 = ISZERO V1042
0x1234: V1044 = 0x229
0x1237: THROWI V1043
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x1238
[0x1238:0x12a7]
---
Predecessors: [0x1217]
Successors: [0x12a8]
---
0x1238 PUSH1 0x0
0x123a DUP1
0x123b REVERT
0x123c JUMPDEST
0x123d PUSH2 0x274
0x1240 PUSH1 0x4
0x1242 DUP1
0x1243 DUP1
0x1244 CALLDATALOAD
0x1245 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x125a AND
0x125b SWAP1
0x125c PUSH1 0x20
0x125e ADD
0x125f SWAP1
0x1260 SWAP2
0x1261 SWAP1
0x1262 DUP1
0x1263 CALLDATALOAD
0x1264 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1279 AND
0x127a SWAP1
0x127b PUSH1 0x20
0x127d ADD
0x127e SWAP1
0x127f SWAP2
0x1280 SWAP1
0x1281 POP
0x1282 POP
0x1283 PUSH2 0x8af
0x1286 JUMP
0x1287 JUMPDEST
0x1288 PUSH1 0x40
0x128a MLOAD
0x128b DUP1
0x128c DUP3
0x128d DUP2
0x128e MSTORE
0x128f PUSH1 0x20
0x1291 ADD
0x1292 SWAP2
0x1293 POP
0x1294 POP
0x1295 PUSH1 0x40
0x1297 MLOAD
0x1298 DUP1
0x1299 SWAP2
0x129a SUB
0x129b SWAP1
0x129c RETURN
0x129d JUMPDEST
0x129e PUSH1 0x0
0x12a0 DUP1
0x12a1 DUP3
0x12a2 EQ
0x12a3 DUP1
0x12a4 PUSH2 0x316
0x12a7 JUMPI
---
0x1238: V1045 = 0x0
0x123b: REVERT 0x0 0x0
0x123c: JUMPDEST 
0x123d: V1046 = 0x274
0x1240: V1047 = 0x4
0x1244: V1048 = CALLDATALOAD 0x4
0x1245: V1049 = 0xffffffffffffffffffffffffffffffffffffffff
0x125a: V1050 = AND 0xffffffffffffffffffffffffffffffffffffffff V1048
0x125c: V1051 = 0x20
0x125e: V1052 = ADD 0x20 0x4
0x1263: V1053 = CALLDATALOAD 0x24
0x1264: V1054 = 0xffffffffffffffffffffffffffffffffffffffff
0x1279: V1055 = AND 0xffffffffffffffffffffffffffffffffffffffff V1053
0x127b: V1056 = 0x20
0x127d: V1057 = ADD 0x20 0x24
0x1283: V1058 = 0x8af
0x1286: THROW 
0x1287: JUMPDEST 
0x1288: V1059 = 0x40
0x128a: V1060 = M[0x40]
0x128e: M[V1060] = S0
0x128f: V1061 = 0x20
0x1291: V1062 = ADD 0x20 V1060
0x1295: V1063 = 0x40
0x1297: V1064 = M[0x40]
0x129a: V1065 = SUB V1062 V1064
0x129c: RETURN V1064 V1065
0x129d: JUMPDEST 
0x129e: V1066 = 0x0
0x12a2: V1067 = EQ S0 0x0
0x12a4: V1068 = 0x316
0x12a7: THROWI V1067
---
Entry stack: []
Stack pops: 0
Stack additions: [V1055, V1050, 0x274, V1067, 0x0, S0]
Exit stack: []

================================

Block 0x12a8
[0x12a8:0x1328]
---
Predecessors: [0x1238]
Successors: [0x1329]
---
0x12a8 POP
0x12a9 PUSH1 0x0
0x12ab PUSH1 0x2
0x12ad PUSH1 0x0
0x12af CALLER
0x12b0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12c5 AND
0x12c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12db AND
0x12dc DUP2
0x12dd MSTORE
0x12de PUSH1 0x20
0x12e0 ADD
0x12e1 SWAP1
0x12e2 DUP2
0x12e3 MSTORE
0x12e4 PUSH1 0x20
0x12e6 ADD
0x12e7 PUSH1 0x0
0x12e9 SHA3
0x12ea PUSH1 0x0
0x12ec DUP6
0x12ed PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1302 AND
0x1303 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1318 AND
0x1319 DUP2
0x131a MSTORE
0x131b PUSH1 0x20
0x131d ADD
0x131e SWAP1
0x131f DUP2
0x1320 MSTORE
0x1321 PUSH1 0x20
0x1323 ADD
0x1324 PUSH1 0x0
0x1326 SHA3
0x1327 SLOAD
0x1328 EQ
---
0x12a9: V1069 = 0x0
0x12ab: V1070 = 0x2
0x12ad: V1071 = 0x0
0x12af: V1072 = CALLER
0x12b0: V1073 = 0xffffffffffffffffffffffffffffffffffffffff
0x12c5: V1074 = AND 0xffffffffffffffffffffffffffffffffffffffff V1072
0x12c6: V1075 = 0xffffffffffffffffffffffffffffffffffffffff
0x12db: V1076 = AND 0xffffffffffffffffffffffffffffffffffffffff V1074
0x12dd: M[0x0] = V1076
0x12de: V1077 = 0x20
0x12e0: V1078 = ADD 0x20 0x0
0x12e3: M[0x20] = 0x2
0x12e4: V1079 = 0x20
0x12e6: V1080 = ADD 0x20 0x20
0x12e7: V1081 = 0x0
0x12e9: V1082 = SHA3 0x0 0x40
0x12ea: V1083 = 0x0
0x12ed: V1084 = 0xffffffffffffffffffffffffffffffffffffffff
0x1302: V1085 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x1303: V1086 = 0xffffffffffffffffffffffffffffffffffffffff
0x1318: V1087 = AND 0xffffffffffffffffffffffffffffffffffffffff V1085
0x131a: M[0x0] = V1087
0x131b: V1088 = 0x20
0x131d: V1089 = ADD 0x20 0x0
0x1320: M[0x20] = V1082
0x1321: V1090 = 0x20
0x1323: V1091 = ADD 0x20 0x20
0x1324: V1092 = 0x0
0x1326: V1093 = SHA3 0x0 0x40
0x1327: V1094 = S[V1093]
0x1328: V1095 = EQ V1094 0x0
---
Entry stack: [S2, 0x0, V1067]
Stack pops: 4
Stack additions: [S3, S2, S1, V1095]
Exit stack: [S0, S2, 0x0, V1095]

================================

Block 0x1329
[0x1329:0x132f]
---
Predecessors: [0x12a8]
Successors: [0x1330]
---
0x1329 JUMPDEST
0x132a ISZERO
0x132b ISZERO
0x132c PUSH2 0x321
0x132f JUMPI
---
0x1329: JUMPDEST 
0x132a: V1096 = ISZERO V1095
0x132b: V1097 = ISZERO V1096
0x132c: V1098 = 0x321
0x132f: THROWI V1097
---
Entry stack: [S3, S2, 0x0, V1095]
Stack pops: 1
Stack additions: []
Exit stack: [S3, S2, 0x0]

================================

Block 0x1330
[0x1330:0x141e]
---
Predecessors: [0x1329]
Successors: [0x141f]
---
0x1330 PUSH1 0x0
0x1332 DUP1
0x1333 REVERT
0x1334 JUMPDEST
0x1335 DUP2
0x1336 PUSH1 0x2
0x1338 PUSH1 0x0
0x133a CALLER
0x133b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1350 AND
0x1351 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1366 AND
0x1367 DUP2
0x1368 MSTORE
0x1369 PUSH1 0x20
0x136b ADD
0x136c SWAP1
0x136d DUP2
0x136e MSTORE
0x136f PUSH1 0x20
0x1371 ADD
0x1372 PUSH1 0x0
0x1374 SHA3
0x1375 PUSH1 0x0
0x1377 DUP6
0x1378 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x138d AND
0x138e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13a3 AND
0x13a4 DUP2
0x13a5 MSTORE
0x13a6 PUSH1 0x20
0x13a8 ADD
0x13a9 SWAP1
0x13aa DUP2
0x13ab MSTORE
0x13ac PUSH1 0x20
0x13ae ADD
0x13af PUSH1 0x0
0x13b1 SHA3
0x13b2 DUP2
0x13b3 SWAP1
0x13b4 SSTORE
0x13b5 POP
0x13b6 DUP3
0x13b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13cc AND
0x13cd CALLER
0x13ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13e3 AND
0x13e4 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x1405 DUP5
0x1406 PUSH1 0x40
0x1408 MLOAD
0x1409 DUP1
0x140a DUP3
0x140b DUP2
0x140c MSTORE
0x140d PUSH1 0x20
0x140f ADD
0x1410 SWAP2
0x1411 POP
0x1412 POP
0x1413 PUSH1 0x40
0x1415 MLOAD
0x1416 DUP1
0x1417 SWAP2
0x1418 SUB
0x1419 SWAP1
0x141a LOG3
0x141b PUSH1 0x1
0x141d SWAP1
0x141e POP
---
0x1330: V1099 = 0x0
0x1333: REVERT 0x0 0x0
0x1334: JUMPDEST 
0x1336: V1100 = 0x2
0x1338: V1101 = 0x0
0x133a: V1102 = CALLER
0x133b: V1103 = 0xffffffffffffffffffffffffffffffffffffffff
0x1350: V1104 = AND 0xffffffffffffffffffffffffffffffffffffffff V1102
0x1351: V1105 = 0xffffffffffffffffffffffffffffffffffffffff
0x1366: V1106 = AND 0xffffffffffffffffffffffffffffffffffffffff V1104
0x1368: M[0x0] = V1106
0x1369: V1107 = 0x20
0x136b: V1108 = ADD 0x20 0x0
0x136e: M[0x20] = 0x2
0x136f: V1109 = 0x20
0x1371: V1110 = ADD 0x20 0x20
0x1372: V1111 = 0x0
0x1374: V1112 = SHA3 0x0 0x40
0x1375: V1113 = 0x0
0x1378: V1114 = 0xffffffffffffffffffffffffffffffffffffffff
0x138d: V1115 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x138e: V1116 = 0xffffffffffffffffffffffffffffffffffffffff
0x13a3: V1117 = AND 0xffffffffffffffffffffffffffffffffffffffff V1115
0x13a5: M[0x0] = V1117
0x13a6: V1118 = 0x20
0x13a8: V1119 = ADD 0x20 0x0
0x13ab: M[0x20] = V1112
0x13ac: V1120 = 0x20
0x13ae: V1121 = ADD 0x20 0x20
0x13af: V1122 = 0x0
0x13b1: V1123 = SHA3 0x0 0x40
0x13b4: S[V1123] = S1
0x13b7: V1124 = 0xffffffffffffffffffffffffffffffffffffffff
0x13cc: V1125 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x13cd: V1126 = CALLER
0x13ce: V1127 = 0xffffffffffffffffffffffffffffffffffffffff
0x13e3: V1128 = AND 0xffffffffffffffffffffffffffffffffffffffff V1126
0x13e4: V1129 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x1406: V1130 = 0x40
0x1408: V1131 = M[0x40]
0x140c: M[V1131] = S1
0x140d: V1132 = 0x20
0x140f: V1133 = ADD 0x20 V1131
0x1413: V1134 = 0x40
0x1415: V1135 = M[0x40]
0x1418: V1136 = SUB V1133 V1135
0x141a: LOG V1135 V1136 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V1128 V1125
0x141b: V1137 = 0x1
---
Entry stack: [S2, S1, 0x0]
Stack pops: 0
Stack additions: [0x1, S1, S2]
Exit stack: []

================================

Block 0x141f
[0x141f:0x16d3]
---
Predecessors: [0x1330]
Successors: [0x16d4]
---
0x141f JUMPDEST
0x1420 SWAP3
0x1421 SWAP2
0x1422 POP
0x1423 POP
0x1424 JUMP
0x1425 JUMPDEST
0x1426 PUSH1 0x0
0x1428 SLOAD
0x1429 DUP2
0x142a JUMP
0x142b JUMPDEST
0x142c PUSH1 0x0
0x142e DUP1
0x142f PUSH1 0x2
0x1431 PUSH1 0x0
0x1433 DUP7
0x1434 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1449 AND
0x144a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x145f AND
0x1460 DUP2
0x1461 MSTORE
0x1462 PUSH1 0x20
0x1464 ADD
0x1465 SWAP1
0x1466 DUP2
0x1467 MSTORE
0x1468 PUSH1 0x20
0x146a ADD
0x146b PUSH1 0x0
0x146d SHA3
0x146e PUSH1 0x0
0x1470 CALLER
0x1471 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1486 AND
0x1487 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x149c AND
0x149d DUP2
0x149e MSTORE
0x149f PUSH1 0x20
0x14a1 ADD
0x14a2 SWAP1
0x14a3 DUP2
0x14a4 MSTORE
0x14a5 PUSH1 0x20
0x14a7 ADD
0x14a8 PUSH1 0x0
0x14aa SHA3
0x14ab SLOAD
0x14ac SWAP1
0x14ad POP
0x14ae PUSH2 0x4ec
0x14b1 DUP4
0x14b2 PUSH1 0x1
0x14b4 PUSH1 0x0
0x14b6 DUP8
0x14b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14cc AND
0x14cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14e2 AND
0x14e3 DUP2
0x14e4 MSTORE
0x14e5 PUSH1 0x20
0x14e7 ADD
0x14e8 SWAP1
0x14e9 DUP2
0x14ea MSTORE
0x14eb PUSH1 0x20
0x14ed ADD
0x14ee PUSH1 0x0
0x14f0 SHA3
0x14f1 SLOAD
0x14f2 PUSH2 0x937
0x14f5 SWAP1
0x14f6 SWAP2
0x14f7 SWAP1
0x14f8 PUSH4 0xffffffff
0x14fd AND
0x14fe JUMP
0x14ff JUMPDEST
0x1500 PUSH1 0x1
0x1502 PUSH1 0x0
0x1504 DUP7
0x1505 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x151a AND
0x151b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1530 AND
0x1531 DUP2
0x1532 MSTORE
0x1533 PUSH1 0x20
0x1535 ADD
0x1536 SWAP1
0x1537 DUP2
0x1538 MSTORE
0x1539 PUSH1 0x20
0x153b ADD
0x153c PUSH1 0x0
0x153e SHA3
0x153f DUP2
0x1540 SWAP1
0x1541 SSTORE
0x1542 POP
0x1543 PUSH2 0x581
0x1546 DUP4
0x1547 PUSH1 0x1
0x1549 PUSH1 0x0
0x154b DUP9
0x154c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1561 AND
0x1562 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1577 AND
0x1578 DUP2
0x1579 MSTORE
0x157a PUSH1 0x20
0x157c ADD
0x157d SWAP1
0x157e DUP2
0x157f MSTORE
0x1580 PUSH1 0x20
0x1582 ADD
0x1583 PUSH1 0x0
0x1585 SHA3
0x1586 SLOAD
0x1587 PUSH2 0x956
0x158a SWAP1
0x158b SWAP2
0x158c SWAP1
0x158d PUSH4 0xffffffff
0x1592 AND
0x1593 JUMP
0x1594 JUMPDEST
0x1595 PUSH1 0x1
0x1597 PUSH1 0x0
0x1599 DUP8
0x159a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15af AND
0x15b0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15c5 AND
0x15c6 DUP2
0x15c7 MSTORE
0x15c8 PUSH1 0x20
0x15ca ADD
0x15cb SWAP1
0x15cc DUP2
0x15cd MSTORE
0x15ce PUSH1 0x20
0x15d0 ADD
0x15d1 PUSH1 0x0
0x15d3 SHA3
0x15d4 DUP2
0x15d5 SWAP1
0x15d6 SSTORE
0x15d7 POP
0x15d8 PUSH2 0x5d7
0x15db DUP4
0x15dc DUP3
0x15dd PUSH2 0x956
0x15e0 SWAP1
0x15e1 SWAP2
0x15e2 SWAP1
0x15e3 PUSH4 0xffffffff
0x15e8 AND
0x15e9 JUMP
0x15ea JUMPDEST
0x15eb PUSH1 0x2
0x15ed PUSH1 0x0
0x15ef DUP8
0x15f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1605 AND
0x1606 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x161b AND
0x161c DUP2
0x161d MSTORE
0x161e PUSH1 0x20
0x1620 ADD
0x1621 SWAP1
0x1622 DUP2
0x1623 MSTORE
0x1624 PUSH1 0x20
0x1626 ADD
0x1627 PUSH1 0x0
0x1629 SHA3
0x162a PUSH1 0x0
0x162c CALLER
0x162d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1642 AND
0x1643 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1658 AND
0x1659 DUP2
0x165a MSTORE
0x165b PUSH1 0x20
0x165d ADD
0x165e SWAP1
0x165f DUP2
0x1660 MSTORE
0x1661 PUSH1 0x20
0x1663 ADD
0x1664 PUSH1 0x0
0x1666 SHA3
0x1667 DUP2
0x1668 SWAP1
0x1669 SSTORE
0x166a POP
0x166b DUP4
0x166c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1681 AND
0x1682 DUP6
0x1683 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1698 AND
0x1699 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x16ba DUP6
0x16bb PUSH1 0x40
0x16bd MLOAD
0x16be DUP1
0x16bf DUP3
0x16c0 DUP2
0x16c1 MSTORE
0x16c2 PUSH1 0x20
0x16c4 ADD
0x16c5 SWAP2
0x16c6 POP
0x16c7 POP
0x16c8 PUSH1 0x40
0x16ca MLOAD
0x16cb DUP1
0x16cc SWAP2
0x16cd SUB
0x16ce SWAP1
0x16cf LOG3
0x16d0 PUSH1 0x1
0x16d2 SWAP2
0x16d3 POP
---
0x141f: JUMPDEST 
0x1424: JUMP S3
0x1425: JUMPDEST 
0x1426: V1138 = 0x0
0x1428: V1139 = S[0x0]
0x142a: JUMP S0
0x142b: JUMPDEST 
0x142c: V1140 = 0x0
0x142f: V1141 = 0x2
0x1431: V1142 = 0x0
0x1434: V1143 = 0xffffffffffffffffffffffffffffffffffffffff
0x1449: V1144 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x144a: V1145 = 0xffffffffffffffffffffffffffffffffffffffff
0x145f: V1146 = AND 0xffffffffffffffffffffffffffffffffffffffff V1144
0x1461: M[0x0] = V1146
0x1462: V1147 = 0x20
0x1464: V1148 = ADD 0x20 0x0
0x1467: M[0x20] = 0x2
0x1468: V1149 = 0x20
0x146a: V1150 = ADD 0x20 0x20
0x146b: V1151 = 0x0
0x146d: V1152 = SHA3 0x0 0x40
0x146e: V1153 = 0x0
0x1470: V1154 = CALLER
0x1471: V1155 = 0xffffffffffffffffffffffffffffffffffffffff
0x1486: V1156 = AND 0xffffffffffffffffffffffffffffffffffffffff V1154
0x1487: V1157 = 0xffffffffffffffffffffffffffffffffffffffff
0x149c: V1158 = AND 0xffffffffffffffffffffffffffffffffffffffff V1156
0x149e: M[0x0] = V1158
0x149f: V1159 = 0x20
0x14a1: V1160 = ADD 0x20 0x0
0x14a4: M[0x20] = V1152
0x14a5: V1161 = 0x20
0x14a7: V1162 = ADD 0x20 0x20
0x14a8: V1163 = 0x0
0x14aa: V1164 = SHA3 0x0 0x40
0x14ab: V1165 = S[V1164]
0x14ae: V1166 = 0x4ec
0x14b2: V1167 = 0x1
0x14b4: V1168 = 0x0
0x14b7: V1169 = 0xffffffffffffffffffffffffffffffffffffffff
0x14cc: V1170 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x14cd: V1171 = 0xffffffffffffffffffffffffffffffffffffffff
0x14e2: V1172 = AND 0xffffffffffffffffffffffffffffffffffffffff V1170
0x14e4: M[0x0] = V1172
0x14e5: V1173 = 0x20
0x14e7: V1174 = ADD 0x20 0x0
0x14ea: M[0x20] = 0x1
0x14eb: V1175 = 0x20
0x14ed: V1176 = ADD 0x20 0x20
0x14ee: V1177 = 0x0
0x14f0: V1178 = SHA3 0x0 0x40
0x14f1: V1179 = S[V1178]
0x14f2: V1180 = 0x937
0x14f8: V1181 = 0xffffffff
0x14fd: V1182 = AND 0xffffffff 0x937
0x14fe: THROW 
0x14ff: JUMPDEST 
0x1500: V1183 = 0x1
0x1502: V1184 = 0x0
0x1505: V1185 = 0xffffffffffffffffffffffffffffffffffffffff
0x151a: V1186 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x151b: V1187 = 0xffffffffffffffffffffffffffffffffffffffff
0x1530: V1188 = AND 0xffffffffffffffffffffffffffffffffffffffff V1186
0x1532: M[0x0] = V1188
0x1533: V1189 = 0x20
0x1535: V1190 = ADD 0x20 0x0
0x1538: M[0x20] = 0x1
0x1539: V1191 = 0x20
0x153b: V1192 = ADD 0x20 0x20
0x153c: V1193 = 0x0
0x153e: V1194 = SHA3 0x0 0x40
0x1541: S[V1194] = S0
0x1543: V1195 = 0x581
0x1547: V1196 = 0x1
0x1549: V1197 = 0x0
0x154c: V1198 = 0xffffffffffffffffffffffffffffffffffffffff
0x1561: V1199 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x1562: V1200 = 0xffffffffffffffffffffffffffffffffffffffff
0x1577: V1201 = AND 0xffffffffffffffffffffffffffffffffffffffff V1199
0x1579: M[0x0] = V1201
0x157a: V1202 = 0x20
0x157c: V1203 = ADD 0x20 0x0
0x157f: M[0x20] = 0x1
0x1580: V1204 = 0x20
0x1582: V1205 = ADD 0x20 0x20
0x1583: V1206 = 0x0
0x1585: V1207 = SHA3 0x0 0x40
0x1586: V1208 = S[V1207]
0x1587: V1209 = 0x956
0x158d: V1210 = 0xffffffff
0x1592: V1211 = AND 0xffffffff 0x956
0x1593: THROW 
0x1594: JUMPDEST 
0x1595: V1212 = 0x1
0x1597: V1213 = 0x0
0x159a: V1214 = 0xffffffffffffffffffffffffffffffffffffffff
0x15af: V1215 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x15b0: V1216 = 0xffffffffffffffffffffffffffffffffffffffff
0x15c5: V1217 = AND 0xffffffffffffffffffffffffffffffffffffffff V1215
0x15c7: M[0x0] = V1217
0x15c8: V1218 = 0x20
0x15ca: V1219 = ADD 0x20 0x0
0x15cd: M[0x20] = 0x1
0x15ce: V1220 = 0x20
0x15d0: V1221 = ADD 0x20 0x20
0x15d1: V1222 = 0x0
0x15d3: V1223 = SHA3 0x0 0x40
0x15d6: S[V1223] = S0
0x15d8: V1224 = 0x5d7
0x15dd: V1225 = 0x956
0x15e3: V1226 = 0xffffffff
0x15e8: V1227 = AND 0xffffffff 0x956
0x15e9: THROW 
0x15ea: JUMPDEST 
0x15eb: V1228 = 0x2
0x15ed: V1229 = 0x0
0x15f0: V1230 = 0xffffffffffffffffffffffffffffffffffffffff
0x1605: V1231 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x1606: V1232 = 0xffffffffffffffffffffffffffffffffffffffff
0x161b: V1233 = AND 0xffffffffffffffffffffffffffffffffffffffff V1231
0x161d: M[0x0] = V1233
0x161e: V1234 = 0x20
0x1620: V1235 = ADD 0x20 0x0
0x1623: M[0x20] = 0x2
0x1624: V1236 = 0x20
0x1626: V1237 = ADD 0x20 0x20
0x1627: V1238 = 0x0
0x1629: V1239 = SHA3 0x0 0x40
0x162a: V1240 = 0x0
0x162c: V1241 = CALLER
0x162d: V1242 = 0xffffffffffffffffffffffffffffffffffffffff
0x1642: V1243 = AND 0xffffffffffffffffffffffffffffffffffffffff V1241
0x1643: V1244 = 0xffffffffffffffffffffffffffffffffffffffff
0x1658: V1245 = AND 0xffffffffffffffffffffffffffffffffffffffff V1243
0x165a: M[0x0] = V1245
0x165b: V1246 = 0x20
0x165d: V1247 = ADD 0x20 0x0
0x1660: M[0x20] = V1239
0x1661: V1248 = 0x20
0x1663: V1249 = ADD 0x20 0x20
0x1664: V1250 = 0x0
0x1666: V1251 = SHA3 0x0 0x40
0x1669: S[V1251] = S0
0x166c: V1252 = 0xffffffffffffffffffffffffffffffffffffffff
0x1681: V1253 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x1683: V1254 = 0xffffffffffffffffffffffffffffffffffffffff
0x1698: V1255 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x1699: V1256 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x16bb: V1257 = 0x40
0x16bd: V1258 = M[0x40]
0x16c1: M[V1258] = S3
0x16c2: V1259 = 0x20
0x16c4: V1260 = ADD 0x20 V1258
0x16c8: V1261 = 0x40
0x16ca: V1262 = M[0x40]
0x16cd: V1263 = SUB V1260 V1262
0x16cf: LOG V1262 V1263 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V1255 V1253
0x16d0: V1264 = 0x1
---
Entry stack: [S2, S1, 0x1]
Stack pops: 40
Stack additions: [S1, 0x1, S3, S4, S5]
Exit stack: []

================================

Block 0x16d4
[0x16d4:0x1720]
---
Predecessors: [0x141f]
Successors: [0x1721]
---
0x16d4 JUMPDEST
0x16d5 POP
0x16d6 SWAP4
0x16d7 SWAP3
0x16d8 POP
0x16d9 POP
0x16da POP
0x16db JUMP
0x16dc JUMPDEST
0x16dd PUSH1 0x0
0x16df PUSH1 0x1
0x16e1 PUSH1 0x0
0x16e3 DUP4
0x16e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16f9 AND
0x16fa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x170f AND
0x1710 DUP2
0x1711 MSTORE
0x1712 PUSH1 0x20
0x1714 ADD
0x1715 SWAP1
0x1716 DUP2
0x1717 MSTORE
0x1718 PUSH1 0x20
0x171a ADD
0x171b PUSH1 0x0
0x171d SHA3
0x171e SLOAD
0x171f SWAP1
0x1720 POP
---
0x16d4: JUMPDEST 
0x16db: JUMP S5
0x16dc: JUMPDEST 
0x16dd: V1265 = 0x0
0x16df: V1266 = 0x1
0x16e1: V1267 = 0x0
0x16e4: V1268 = 0xffffffffffffffffffffffffffffffffffffffff
0x16f9: V1269 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x16fa: V1270 = 0xffffffffffffffffffffffffffffffffffffffff
0x170f: V1271 = AND 0xffffffffffffffffffffffffffffffffffffffff V1269
0x1711: M[0x0] = V1271
0x1712: V1272 = 0x20
0x1714: V1273 = ADD 0x20 0x0
0x1717: M[0x20] = 0x1
0x1718: V1274 = 0x20
0x171a: V1275 = ADD 0x20 0x20
0x171b: V1276 = 0x0
0x171d: V1277 = SHA3 0x0 0x40
0x171e: V1278 = S[V1277]
---
Entry stack: [S4, S3, S2, 0x1, S0]
Stack pops: 11
Stack additions: [V1278, S0]
Exit stack: []

================================

Block 0x1721
[0x1721:0x18bb]
---
Predecessors: [0x16d4]
Successors: [0x18bc]
---
0x1721 JUMPDEST
0x1722 SWAP2
0x1723 SWAP1
0x1724 POP
0x1725 JUMP
0x1726 JUMPDEST
0x1727 PUSH1 0x0
0x1729 PUSH2 0x767
0x172c DUP3
0x172d PUSH1 0x1
0x172f PUSH1 0x0
0x1731 CALLER
0x1732 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1747 AND
0x1748 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x175d AND
0x175e DUP2
0x175f MSTORE
0x1760 PUSH1 0x20
0x1762 ADD
0x1763 SWAP1
0x1764 DUP2
0x1765 MSTORE
0x1766 PUSH1 0x20
0x1768 ADD
0x1769 PUSH1 0x0
0x176b SHA3
0x176c SLOAD
0x176d PUSH2 0x956
0x1770 SWAP1
0x1771 SWAP2
0x1772 SWAP1
0x1773 PUSH4 0xffffffff
0x1778 AND
0x1779 JUMP
0x177a JUMPDEST
0x177b PUSH1 0x1
0x177d PUSH1 0x0
0x177f CALLER
0x1780 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1795 AND
0x1796 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17ab AND
0x17ac DUP2
0x17ad MSTORE
0x17ae PUSH1 0x20
0x17b0 ADD
0x17b1 SWAP1
0x17b2 DUP2
0x17b3 MSTORE
0x17b4 PUSH1 0x20
0x17b6 ADD
0x17b7 PUSH1 0x0
0x17b9 SHA3
0x17ba DUP2
0x17bb SWAP1
0x17bc SSTORE
0x17bd POP
0x17be PUSH2 0x7fc
0x17c1 DUP3
0x17c2 PUSH1 0x1
0x17c4 PUSH1 0x0
0x17c6 DUP7
0x17c7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17dc AND
0x17dd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17f2 AND
0x17f3 DUP2
0x17f4 MSTORE
0x17f5 PUSH1 0x20
0x17f7 ADD
0x17f8 SWAP1
0x17f9 DUP2
0x17fa MSTORE
0x17fb PUSH1 0x20
0x17fd ADD
0x17fe PUSH1 0x0
0x1800 SHA3
0x1801 SLOAD
0x1802 PUSH2 0x937
0x1805 SWAP1
0x1806 SWAP2
0x1807 SWAP1
0x1808 PUSH4 0xffffffff
0x180d AND
0x180e JUMP
0x180f JUMPDEST
0x1810 PUSH1 0x1
0x1812 PUSH1 0x0
0x1814 DUP6
0x1815 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x182a AND
0x182b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1840 AND
0x1841 DUP2
0x1842 MSTORE
0x1843 PUSH1 0x20
0x1845 ADD
0x1846 SWAP1
0x1847 DUP2
0x1848 MSTORE
0x1849 PUSH1 0x20
0x184b ADD
0x184c PUSH1 0x0
0x184e SHA3
0x184f DUP2
0x1850 SWAP1
0x1851 SSTORE
0x1852 POP
0x1853 DUP3
0x1854 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1869 AND
0x186a CALLER
0x186b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1880 AND
0x1881 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x18a2 DUP5
0x18a3 PUSH1 0x40
0x18a5 MLOAD
0x18a6 DUP1
0x18a7 DUP3
0x18a8 DUP2
0x18a9 MSTORE
0x18aa PUSH1 0x20
0x18ac ADD
0x18ad SWAP2
0x18ae POP
0x18af POP
0x18b0 PUSH1 0x40
0x18b2 MLOAD
0x18b3 DUP1
0x18b4 SWAP2
0x18b5 SUB
0x18b6 SWAP1
0x18b7 LOG3
0x18b8 PUSH1 0x1
0x18ba SWAP1
0x18bb POP
---
0x1721: JUMPDEST 
0x1725: JUMP S2
0x1726: JUMPDEST 
0x1727: V1279 = 0x0
0x1729: V1280 = 0x767
0x172d: V1281 = 0x1
0x172f: V1282 = 0x0
0x1731: V1283 = CALLER
0x1732: V1284 = 0xffffffffffffffffffffffffffffffffffffffff
0x1747: V1285 = AND 0xffffffffffffffffffffffffffffffffffffffff V1283
0x1748: V1286 = 0xffffffffffffffffffffffffffffffffffffffff
0x175d: V1287 = AND 0xffffffffffffffffffffffffffffffffffffffff V1285
0x175f: M[0x0] = V1287
0x1760: V1288 = 0x20
0x1762: V1289 = ADD 0x20 0x0
0x1765: M[0x20] = 0x1
0x1766: V1290 = 0x20
0x1768: V1291 = ADD 0x20 0x20
0x1769: V1292 = 0x0
0x176b: V1293 = SHA3 0x0 0x40
0x176c: V1294 = S[V1293]
0x176d: V1295 = 0x956
0x1773: V1296 = 0xffffffff
0x1778: V1297 = AND 0xffffffff 0x956
0x1779: THROW 
0x177a: JUMPDEST 
0x177b: V1298 = 0x1
0x177d: V1299 = 0x0
0x177f: V1300 = CALLER
0x1780: V1301 = 0xffffffffffffffffffffffffffffffffffffffff
0x1795: V1302 = AND 0xffffffffffffffffffffffffffffffffffffffff V1300
0x1796: V1303 = 0xffffffffffffffffffffffffffffffffffffffff
0x17ab: V1304 = AND 0xffffffffffffffffffffffffffffffffffffffff V1302
0x17ad: M[0x0] = V1304
0x17ae: V1305 = 0x20
0x17b0: V1306 = ADD 0x20 0x0
0x17b3: M[0x20] = 0x1
0x17b4: V1307 = 0x20
0x17b6: V1308 = ADD 0x20 0x20
0x17b7: V1309 = 0x0
0x17b9: V1310 = SHA3 0x0 0x40
0x17bc: S[V1310] = S0
0x17be: V1311 = 0x7fc
0x17c2: V1312 = 0x1
0x17c4: V1313 = 0x0
0x17c7: V1314 = 0xffffffffffffffffffffffffffffffffffffffff
0x17dc: V1315 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x17dd: V1316 = 0xffffffffffffffffffffffffffffffffffffffff
0x17f2: V1317 = AND 0xffffffffffffffffffffffffffffffffffffffff V1315
0x17f4: M[0x0] = V1317
0x17f5: V1318 = 0x20
0x17f7: V1319 = ADD 0x20 0x0
0x17fa: M[0x20] = 0x1
0x17fb: V1320 = 0x20
0x17fd: V1321 = ADD 0x20 0x20
0x17fe: V1322 = 0x0
0x1800: V1323 = SHA3 0x0 0x40
0x1801: V1324 = S[V1323]
0x1802: V1325 = 0x937
0x1808: V1326 = 0xffffffff
0x180d: V1327 = AND 0xffffffff 0x937
0x180e: THROW 
0x180f: JUMPDEST 
0x1810: V1328 = 0x1
0x1812: V1329 = 0x0
0x1815: V1330 = 0xffffffffffffffffffffffffffffffffffffffff
0x182a: V1331 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x182b: V1332 = 0xffffffffffffffffffffffffffffffffffffffff
0x1840: V1333 = AND 0xffffffffffffffffffffffffffffffffffffffff V1331
0x1842: M[0x0] = V1333
0x1843: V1334 = 0x20
0x1845: V1335 = ADD 0x20 0x0
0x1848: M[0x20] = 0x1
0x1849: V1336 = 0x20
0x184b: V1337 = ADD 0x20 0x20
0x184c: V1338 = 0x0
0x184e: V1339 = SHA3 0x0 0x40
0x1851: S[V1339] = S0
0x1854: V1340 = 0xffffffffffffffffffffffffffffffffffffffff
0x1869: V1341 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x186a: V1342 = CALLER
0x186b: V1343 = 0xffffffffffffffffffffffffffffffffffffffff
0x1880: V1344 = AND 0xffffffffffffffffffffffffffffffffffffffff V1342
0x1881: V1345 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x18a3: V1346 = 0x40
0x18a5: V1347 = M[0x40]
0x18a9: M[V1347] = S2
0x18aa: V1348 = 0x20
0x18ac: V1349 = ADD 0x20 V1347
0x18b0: V1350 = 0x40
0x18b2: V1351 = M[0x40]
0x18b5: V1352 = SUB V1349 V1351
0x18b7: LOG V1351 V1352 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V1344 V1341
0x18b8: V1353 = 0x1
---
Entry stack: [S1, V1278]
Stack pops: 5
Stack additions: [S2, 0x1, S2, S3]
Exit stack: []

================================

Block 0x18bc
[0x18bc:0x1943]
---
Predecessors: [0x1721]
Successors: [0x1944]
---
0x18bc JUMPDEST
0x18bd SWAP3
0x18be SWAP2
0x18bf POP
0x18c0 POP
0x18c1 JUMP
0x18c2 JUMPDEST
0x18c3 PUSH1 0x0
0x18c5 PUSH1 0x2
0x18c7 PUSH1 0x0
0x18c9 DUP5
0x18ca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18df AND
0x18e0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18f5 AND
0x18f6 DUP2
0x18f7 MSTORE
0x18f8 PUSH1 0x20
0x18fa ADD
0x18fb SWAP1
0x18fc DUP2
0x18fd MSTORE
0x18fe PUSH1 0x20
0x1900 ADD
0x1901 PUSH1 0x0
0x1903 SHA3
0x1904 PUSH1 0x0
0x1906 DUP4
0x1907 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x191c AND
0x191d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1932 AND
0x1933 DUP2
0x1934 MSTORE
0x1935 PUSH1 0x20
0x1937 ADD
0x1938 SWAP1
0x1939 DUP2
0x193a MSTORE
0x193b PUSH1 0x20
0x193d ADD
0x193e PUSH1 0x0
0x1940 SHA3
0x1941 SLOAD
0x1942 SWAP1
0x1943 POP
---
0x18bc: JUMPDEST 
0x18c1: JUMP S3
0x18c2: JUMPDEST 
0x18c3: V1354 = 0x0
0x18c5: V1355 = 0x2
0x18c7: V1356 = 0x0
0x18ca: V1357 = 0xffffffffffffffffffffffffffffffffffffffff
0x18df: V1358 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x18e0: V1359 = 0xffffffffffffffffffffffffffffffffffffffff
0x18f5: V1360 = AND 0xffffffffffffffffffffffffffffffffffffffff V1358
0x18f7: M[0x0] = V1360
0x18f8: V1361 = 0x20
0x18fa: V1362 = ADD 0x20 0x0
0x18fd: M[0x20] = 0x2
0x18fe: V1363 = 0x20
0x1900: V1364 = ADD 0x20 0x20
0x1901: V1365 = 0x0
0x1903: V1366 = SHA3 0x0 0x40
0x1904: V1367 = 0x0
0x1907: V1368 = 0xffffffffffffffffffffffffffffffffffffffff
0x191c: V1369 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x191d: V1370 = 0xffffffffffffffffffffffffffffffffffffffff
0x1932: V1371 = AND 0xffffffffffffffffffffffffffffffffffffffff V1369
0x1934: M[0x0] = V1371
0x1935: V1372 = 0x20
0x1937: V1373 = ADD 0x20 0x0
0x193a: M[0x20] = V1366
0x193b: V1374 = 0x20
0x193d: V1375 = ADD 0x20 0x20
0x193e: V1376 = 0x0
0x1940: V1377 = SHA3 0x0 0x40
0x1941: V1378 = S[V1377]
---
Entry stack: [S2, S1, 0x1]
Stack pops: 7
Stack additions: [V1378, S0, S1]
Exit stack: []

================================

Block 0x1944
[0x1944:0x195c]
---
Predecessors: [0x18bc]
Successors: [0x195d]
---
0x1944 JUMPDEST
0x1945 SWAP3
0x1946 SWAP2
0x1947 POP
0x1948 POP
0x1949 JUMP
0x194a JUMPDEST
0x194b PUSH1 0x0
0x194d DUP1
0x194e DUP3
0x194f DUP5
0x1950 ADD
0x1951 SWAP1
0x1952 POP
0x1953 DUP4
0x1954 DUP2
0x1955 LT
0x1956 ISZERO
0x1957 ISZERO
0x1958 ISZERO
0x1959 PUSH2 0x94b
0x195c JUMPI
---
0x1944: JUMPDEST 
0x1949: JUMP S3
0x194a: JUMPDEST 
0x194b: V1379 = 0x0
0x1950: V1380 = ADD S1 S0
0x1955: V1381 = LT V1380 S1
0x1956: V1382 = ISZERO V1381
0x1957: V1383 = ISZERO V1382
0x1958: V1384 = ISZERO V1383
0x1959: V1385 = 0x94b
0x195c: THROWI V1384
---
Entry stack: [S2, S1, V1378]
Stack pops: 7
Stack additions: [V1380, 0x0, S0, S1]
Exit stack: []

================================

Block 0x195d
[0x195d:0x1961]
---
Predecessors: [0x1944]
Successors: [0x1962]
---
0x195d INVALID
0x195e JUMPDEST
0x195f DUP1
0x1960 SWAP2
0x1961 POP
---
0x195d: INVALID 
0x195e: JUMPDEST 
---
Entry stack: [S3, S2, 0x0, V1380]
Stack pops: 0
Stack additions: [S0, S0]
Exit stack: []

================================

Block 0x1962
[0x1962:0x1975]
---
Predecessors: [0x195d]
Successors: [0x1976]
---
0x1962 JUMPDEST
0x1963 POP
0x1964 SWAP3
0x1965 SWAP2
0x1966 POP
0x1967 POP
0x1968 JUMP
0x1969 JUMPDEST
0x196a PUSH1 0x0
0x196c DUP3
0x196d DUP3
0x196e GT
0x196f ISZERO
0x1970 ISZERO
0x1971 ISZERO
0x1972 PUSH2 0x964
0x1975 JUMPI
---
0x1962: JUMPDEST 
0x1968: JUMP S4
0x1969: JUMPDEST 
0x196a: V1386 = 0x0
0x196e: V1387 = GT S0 S1
0x196f: V1388 = ISZERO V1387
0x1970: V1389 = ISZERO V1388
0x1971: V1390 = ISZERO V1389
0x1972: V1391 = 0x964
0x1975: THROWI V1390
---
Entry stack: [S1, S0]
Stack pops: 9
Stack additions: [0x0, S0, S1]
Exit stack: []

================================

Block 0x1976
[0x1976:0x197c]
---
Predecessors: [0x1962]
Successors: [0x197d]
---
0x1976 INVALID
0x1977 JUMPDEST
0x1978 DUP2
0x1979 DUP4
0x197a SUB
0x197b SWAP1
0x197c POP
---
0x1976: INVALID 
0x1977: JUMPDEST 
0x197a: V1392 = SUB S2 S1
---
Entry stack: [S2, S1, 0x0]
Stack pops: 0
Stack additions: [V1392, S1, S2]
Exit stack: []

================================

Block 0x197d
[0x197d:0x19b0]
---
Predecessors: [0x1976]
Successors: []
---
0x197d JUMPDEST
0x197e SWAP3
0x197f SWAP2
0x1980 POP
0x1981 POP
0x1982 JUMP
0x1983 STOP
0x1984 LOG1
0x1985 PUSH6 0x627a7a723058
0x198c SHA3
0x198d SWAP9
0x198e MISSING 0xd2
0x198f MISSING 0xfc
0x1990 MISSING 0xf7
0x1991 MISSING 0xef
0x1992 GT
0x1993 POP
0x1994 MISSING 0xb5
0x1995 MISSING 0x4a
0x1996 MISSING 0xe7
0x1997 MISSING 0xe0
0x1998 MISSING 0xd8
0x1999 MISSING 0xbe
0x199a PUSH12 0x7e4391f8e6602ffc7cde4c5d
0x19a7 XOR
0x19a8 MISSING 0xd8
0x19a9 CALLER
0x19aa MISSING 0xc3
0x19ab PUSH5 0xbc0029
---
0x197d: JUMPDEST 
0x1982: JUMP S3
0x1983: STOP 
0x1984: LOG S0 S1 S2
0x1985: V1393 = 0x627a7a723058
0x198c: V1394 = SHA3 0x627a7a723058 S3
0x198e: MISSING 0xd2
0x198f: MISSING 0xfc
0x1990: MISSING 0xf7
0x1991: MISSING 0xef
0x1992: V1395 = GT S0 S1
0x1994: MISSING 0xb5
0x1995: MISSING 0x4a
0x1996: MISSING 0xe7
0x1997: MISSING 0xe0
0x1998: MISSING 0xd8
0x1999: MISSING 0xbe
0x199a: V1396 = 0x7e4391f8e6602ffc7cde4c5d
0x19a7: V1397 = XOR 0x7e4391f8e6602ffc7cde4c5d S0
0x19a8: MISSING 0xd8
0x19a9: V1398 = CALLER
0x19aa: MISSING 0xc3
0x19ab: V1399 = 0xbc0029
---
Entry stack: [S2, S1, V1392]
Stack pops: 36861
Stack additions: [0xbc0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x18160ddd
Entry block: 0x54
Exit block: 0x67
Body: 0x54, 0x5b, 0x5f, 0x67, 0x124

Function 1:
Public function signature: 0x70a08231
Entry block: 0x7d
Exit block: 0xb4
Body: 0x7d, 0x84, 0x88, 0xb4, 0x12a, 0x16f

Function 2:
Public function signature: 0xa9059cbb
Entry block: 0xca
Exit block: 0x10a
Body: 0xca, 0xd1, 0xd5, 0x10a, 0x174, 0x1c8, 0x25d, 0x30a, 0x310, 0x31d, 0x31e, 0x324, 0x32a, 0x33d, 0x33e, 0x342

Function 3:
Public fallback function
Entry block: 0x4f
Exit block: 0x4f
Body: 0x4f

