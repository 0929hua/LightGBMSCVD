Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xce]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xce
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xce
0xa: JUMPI 0xce V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0xd3]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x6fdde03
0x3a EQ
0x3b PUSH2 0xd3
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x6fdde03
0x3a: V12 = EQ 0x6fdde03 V10
0x3b: V13 = 0xd3
0x3e: JUMPI 0xd3 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x161]
---
0x3f DUP1
0x40 PUSH4 0x95ea7b3
0x45 EQ
0x46 PUSH2 0x161
0x49 JUMPI
---
0x40: V14 = 0x95ea7b3
0x45: V15 = EQ 0x95ea7b3 V10
0x46: V16 = 0x161
0x49: JUMPI 0x161 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x1bb]
---
0x4a DUP1
0x4b PUSH4 0x18160ddd
0x50 EQ
0x51 PUSH2 0x1bb
0x54 JUMPI
---
0x4b: V17 = 0x18160ddd
0x50: V18 = EQ 0x18160ddd V10
0x51: V19 = 0x1bb
0x54: JUMPI 0x1bb V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x1e4]
---
0x55 DUP1
0x56 PUSH4 0x23b872dd
0x5b EQ
0x5c PUSH2 0x1e4
0x5f JUMPI
---
0x56: V20 = 0x23b872dd
0x5b: V21 = EQ 0x23b872dd V10
0x5c: V22 = 0x1e4
0x5f: JUMPI 0x1e4 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x25d]
---
0x60 DUP1
0x61 PUSH4 0x2b68b9c6
0x66 EQ
0x67 PUSH2 0x25d
0x6a JUMPI
---
0x61: V23 = 0x2b68b9c6
0x66: V24 = EQ 0x2b68b9c6 V10
0x67: V25 = 0x25d
0x6a: JUMPI 0x25d V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x60]
Successors: [0x76, 0x272]
---
0x6b DUP1
0x6c PUSH4 0x313ce567
0x71 EQ
0x72 PUSH2 0x272
0x75 JUMPI
---
0x6c: V26 = 0x313ce567
0x71: V27 = EQ 0x313ce567 V10
0x72: V28 = 0x272
0x75: JUMPI 0x272 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x76
[0x76:0x80]
---
Predecessors: [0x6b]
Successors: [0x81, 0x2a1]
---
0x76 DUP1
0x77 PUSH4 0x40c10f19
0x7c EQ
0x7d PUSH2 0x2a1
0x80 JUMPI
---
0x77: V29 = 0x40c10f19
0x7c: V30 = EQ 0x40c10f19 V10
0x7d: V31 = 0x2a1
0x80: JUMPI 0x2a1 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x81
[0x81:0x8b]
---
Predecessors: [0x76]
Successors: [0x8c, 0x2e3]
---
0x81 DUP1
0x82 PUSH4 0x70a08231
0x87 EQ
0x88 PUSH2 0x2e3
0x8b JUMPI
---
0x82: V32 = 0x70a08231
0x87: V33 = EQ 0x70a08231 V10
0x88: V34 = 0x2e3
0x8b: JUMPI 0x2e3 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8c
[0x8c:0x96]
---
Predecessors: [0x81]
Successors: [0x97, 0x330]
---
0x8c DUP1
0x8d PUSH4 0x8da5cb5b
0x92 EQ
0x93 PUSH2 0x330
0x96 JUMPI
---
0x8d: V35 = 0x8da5cb5b
0x92: V36 = EQ 0x8da5cb5b V10
0x93: V37 = 0x330
0x96: JUMPI 0x330 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x97
[0x97:0xa1]
---
Predecessors: [0x8c]
Successors: [0xa2, 0x385]
---
0x97 DUP1
0x98 PUSH4 0x95d89b41
0x9d EQ
0x9e PUSH2 0x385
0xa1 JUMPI
---
0x98: V38 = 0x95d89b41
0x9d: V39 = EQ 0x95d89b41 V10
0x9e: V40 = 0x385
0xa1: JUMPI 0x385 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa2
[0xa2:0xac]
---
Predecessors: [0x97]
Successors: [0xad, 0x413]
---
0xa2 DUP1
0xa3 PUSH4 0xa6f9dae1
0xa8 EQ
0xa9 PUSH2 0x413
0xac JUMPI
---
0xa3: V41 = 0xa6f9dae1
0xa8: V42 = EQ 0xa6f9dae1 V10
0xa9: V43 = 0x413
0xac: JUMPI 0x413 V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xad
[0xad:0xb7]
---
Predecessors: [0xa2]
Successors: [0xb8, 0x44c]
---
0xad DUP1
0xae PUSH4 0xa9059cbb
0xb3 EQ
0xb4 PUSH2 0x44c
0xb7 JUMPI
---
0xae: V44 = 0xa9059cbb
0xb3: V45 = EQ 0xa9059cbb V10
0xb4: V46 = 0x44c
0xb7: JUMPI 0x44c V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xb8
[0xb8:0xc2]
---
Predecessors: [0xad]
Successors: [0xc3, 0x4a6]
---
0xb8 DUP1
0xb9 PUSH4 0xbe45fd62
0xbe EQ
0xbf PUSH2 0x4a6
0xc2 JUMPI
---
0xb9: V47 = 0xbe45fd62
0xbe: V48 = EQ 0xbe45fd62 V10
0xbf: V49 = 0x4a6
0xc2: JUMPI 0x4a6 V48
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xc3
[0xc3:0xcd]
---
Predecessors: [0xb8]
Successors: [0xce, 0x52b]
---
0xc3 DUP1
0xc4 PUSH4 0xdd62ed3e
0xc9 EQ
0xca PUSH2 0x52b
0xcd JUMPI
---
0xc4: V50 = 0xdd62ed3e
0xc9: V51 = EQ 0xdd62ed3e V10
0xca: V52 = 0x52b
0xcd: JUMPI 0x52b V51
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xce
[0xce:0xd2]
---
Predecessors: [0x0, 0xc3]
Successors: []
---
0xce JUMPDEST
0xcf PUSH1 0x0
0xd1 DUP1
0xd2 REVERT
---
0xce: JUMPDEST 
0xcf: V53 = 0x0
0xd2: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xd3
[0xd3:0xd9]
---
Predecessors: [0xb]
Successors: [0xda, 0xde]
---
0xd3 JUMPDEST
0xd4 CALLVALUE
0xd5 ISZERO
0xd6 PUSH2 0xde
0xd9 JUMPI
---
0xd3: JUMPDEST 
0xd4: V54 = CALLVALUE
0xd5: V55 = ISZERO V54
0xd6: V56 = 0xde
0xd9: JUMPI 0xde V55
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xda
[0xda:0xdd]
---
Predecessors: [0xd3]
Successors: []
---
0xda PUSH1 0x0
0xdc DUP1
0xdd REVERT
---
0xda: V57 = 0x0
0xdd: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xde
[0xde:0xe5]
---
Predecessors: [0xd3]
Successors: [0x597]
---
0xde JUMPDEST
0xdf PUSH2 0xe6
0xe2 PUSH2 0x597
0xe5 JUMP
---
0xde: JUMPDEST 
0xdf: V58 = 0xe6
0xe2: V59 = 0x597
0xe5: JUMP 0x597
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xe6]
Exit stack: [V10, 0xe6]

================================

Block 0xe6
[0xe6:0x10a]
---
Predecessors: [0x597]
Successors: [0x10b]
---
0xe6 JUMPDEST
0xe7 PUSH1 0x40
0xe9 MLOAD
0xea DUP1
0xeb DUP1
0xec PUSH1 0x20
0xee ADD
0xef DUP3
0xf0 DUP2
0xf1 SUB
0xf2 DUP3
0xf3 MSTORE
0xf4 DUP4
0xf5 DUP2
0xf6 DUP2
0xf7 MLOAD
0xf8 DUP2
0xf9 MSTORE
0xfa PUSH1 0x20
0xfc ADD
0xfd SWAP2
0xfe POP
0xff DUP1
0x100 MLOAD
0x101 SWAP1
0x102 PUSH1 0x20
0x104 ADD
0x105 SWAP1
0x106 DUP1
0x107 DUP4
0x108 DUP4
0x109 PUSH1 0x0
---
0xe6: JUMPDEST 
0xe7: V60 = 0x40
0xe9: V61 = M[0x40]
0xec: V62 = 0x20
0xee: V63 = ADD 0x20 V61
0xf1: V64 = SUB V63 V61
0xf3: M[V61] = V64
0xf7: V65 = M[V391]
0xf9: M[V63] = V65
0xfa: V66 = 0x20
0xfc: V67 = ADD 0x20 V63
0x100: V68 = M[V391]
0x102: V69 = 0x20
0x104: V70 = ADD 0x20 V391
0x109: V71 = 0x0
---
Entry stack: [V10, 0xe6, V391]
Stack pops: 1
Stack additions: [S0, V61, V61, V67, V70, V68, V68, V67, V70, 0x0]
Exit stack: [V10, 0xe6, V391, V61, V61, V67, V70, V68, V68, V67, V70, 0x0]

================================

Block 0x10b
[0x10b:0x113]
---
Predecessors: [0xe6, 0x114]
Successors: [0x114, 0x126]
---
0x10b JUMPDEST
0x10c DUP4
0x10d DUP2
0x10e LT
0x10f ISZERO
0x110 PUSH2 0x126
0x113 JUMPI
---
0x10b: JUMPDEST 
0x10e: V72 = LT S0 V68
0x10f: V73 = ISZERO V72
0x110: V74 = 0x126
0x113: JUMPI 0x126 V73
---
Entry stack: [V10, 0xe6, V391, V61, V61, V67, V70, V68, V68, V67, V70, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0xe6, V391, V61, V61, V67, V70, V68, V68, V67, V70, S0]

================================

Block 0x114
[0x114:0x125]
---
Predecessors: [0x10b]
Successors: [0x10b]
---
0x114 DUP1
0x115 DUP3
0x116 ADD
0x117 MLOAD
0x118 DUP2
0x119 DUP5
0x11a ADD
0x11b MSTORE
0x11c PUSH1 0x20
0x11e DUP2
0x11f ADD
0x120 SWAP1
0x121 POP
0x122 PUSH2 0x10b
0x125 JUMP
---
0x116: V75 = ADD V70 S0
0x117: V76 = M[V75]
0x11a: V77 = ADD V67 S0
0x11b: M[V77] = V76
0x11c: V78 = 0x20
0x11f: V79 = ADD S0 0x20
0x122: V80 = 0x10b
0x125: JUMP 0x10b
---
Entry stack: [V10, 0xe6, V391, V61, V61, V67, V70, V68, V68, V67, V70, S0]
Stack pops: 3
Stack additions: [S2, S1, V79]
Exit stack: [V10, 0xe6, V391, V61, V61, V67, V70, V68, V68, V67, V70, V79]

================================

Block 0x126
[0x126:0x139]
---
Predecessors: [0x10b]
Successors: [0x13a, 0x153]
---
0x126 JUMPDEST
0x127 POP
0x128 POP
0x129 POP
0x12a POP
0x12b SWAP1
0x12c POP
0x12d SWAP1
0x12e DUP2
0x12f ADD
0x130 SWAP1
0x131 PUSH1 0x1f
0x133 AND
0x134 DUP1
0x135 ISZERO
0x136 PUSH2 0x153
0x139 JUMPI
---
0x126: JUMPDEST 
0x12f: V81 = ADD V68 V67
0x131: V82 = 0x1f
0x133: V83 = AND 0x1f V68
0x135: V84 = ISZERO V83
0x136: V85 = 0x153
0x139: JUMPI 0x153 V84
---
Entry stack: [V10, 0xe6, V391, V61, V61, V67, V70, V68, V68, V67, V70, S0]
Stack pops: 7
Stack additions: [V81, V83]
Exit stack: [V10, 0xe6, V391, V61, V61, V81, V83]

================================

Block 0x13a
[0x13a:0x152]
---
Predecessors: [0x126]
Successors: [0x153]
---
0x13a DUP1
0x13b DUP3
0x13c SUB
0x13d DUP1
0x13e MLOAD
0x13f PUSH1 0x1
0x141 DUP4
0x142 PUSH1 0x20
0x144 SUB
0x145 PUSH2 0x100
0x148 EXP
0x149 SUB
0x14a NOT
0x14b AND
0x14c DUP2
0x14d MSTORE
0x14e PUSH1 0x20
0x150 ADD
0x151 SWAP2
0x152 POP
---
0x13c: V86 = SUB V81 V83
0x13e: V87 = M[V86]
0x13f: V88 = 0x1
0x142: V89 = 0x20
0x144: V90 = SUB 0x20 V83
0x145: V91 = 0x100
0x148: V92 = EXP 0x100 V90
0x149: V93 = SUB V92 0x1
0x14a: V94 = NOT V93
0x14b: V95 = AND V94 V87
0x14d: M[V86] = V95
0x14e: V96 = 0x20
0x150: V97 = ADD 0x20 V86
---
Entry stack: [V10, 0xe6, V391, V61, V61, V81, V83]
Stack pops: 2
Stack additions: [V97, S0]
Exit stack: [V10, 0xe6, V391, V61, V61, V97, V83]

================================

Block 0x153
[0x153:0x160]
---
Predecessors: [0x126, 0x13a]
Successors: []
---
0x153 JUMPDEST
0x154 POP
0x155 SWAP3
0x156 POP
0x157 POP
0x158 POP
0x159 PUSH1 0x40
0x15b MLOAD
0x15c DUP1
0x15d SWAP2
0x15e SUB
0x15f SWAP1
0x160 RETURN
---
0x153: JUMPDEST 
0x159: V98 = 0x40
0x15b: V99 = M[0x40]
0x15e: V100 = SUB S1 V99
0x160: RETURN V99 V100
---
Entry stack: [V10, 0xe6, V391, V61, V61, S1, V83]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0xe6]

================================

Block 0x161
[0x161:0x167]
---
Predecessors: [0x3f]
Successors: [0x168, 0x16c]
---
0x161 JUMPDEST
0x162 CALLVALUE
0x163 ISZERO
0x164 PUSH2 0x16c
0x167 JUMPI
---
0x161: JUMPDEST 
0x162: V101 = CALLVALUE
0x163: V102 = ISZERO V101
0x164: V103 = 0x16c
0x167: JUMPI 0x16c V102
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x168
[0x168:0x16b]
---
Predecessors: [0x161]
Successors: []
---
0x168 PUSH1 0x0
0x16a DUP1
0x16b REVERT
---
0x168: V104 = 0x0
0x16b: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x16c
[0x16c:0x1a0]
---
Predecessors: [0x161]
Successors: [0x5d0]
---
0x16c JUMPDEST
0x16d PUSH2 0x1a1
0x170 PUSH1 0x4
0x172 DUP1
0x173 DUP1
0x174 CALLDATALOAD
0x175 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18a AND
0x18b SWAP1
0x18c PUSH1 0x20
0x18e ADD
0x18f SWAP1
0x190 SWAP2
0x191 SWAP1
0x192 DUP1
0x193 CALLDATALOAD
0x194 SWAP1
0x195 PUSH1 0x20
0x197 ADD
0x198 SWAP1
0x199 SWAP2
0x19a SWAP1
0x19b POP
0x19c POP
0x19d PUSH2 0x5d0
0x1a0 JUMP
---
0x16c: JUMPDEST 
0x16d: V105 = 0x1a1
0x170: V106 = 0x4
0x174: V107 = CALLDATALOAD 0x4
0x175: V108 = 0xffffffffffffffffffffffffffffffffffffffff
0x18a: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff V107
0x18c: V110 = 0x20
0x18e: V111 = ADD 0x20 0x4
0x193: V112 = CALLDATALOAD 0x24
0x195: V113 = 0x20
0x197: V114 = ADD 0x20 0x24
0x19d: V115 = 0x5d0
0x1a0: JUMP 0x5d0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1a1, V109, V112]
Exit stack: [V10, 0x1a1, V109, V112]

================================

Block 0x1a1
[0x1a1:0x1ba]
---
Predecessors: [0x5d0]
Successors: []
---
0x1a1 JUMPDEST
0x1a2 PUSH1 0x40
0x1a4 MLOAD
0x1a5 DUP1
0x1a6 DUP3
0x1a7 ISZERO
0x1a8 ISZERO
0x1a9 ISZERO
0x1aa ISZERO
0x1ab DUP2
0x1ac MSTORE
0x1ad PUSH1 0x20
0x1af ADD
0x1b0 SWAP2
0x1b1 POP
0x1b2 POP
0x1b3 PUSH1 0x40
0x1b5 MLOAD
0x1b6 DUP1
0x1b7 SWAP2
0x1b8 SUB
0x1b9 SWAP1
0x1ba RETURN
---
0x1a1: JUMPDEST 
0x1a2: V116 = 0x40
0x1a4: V117 = M[0x40]
0x1a7: V118 = ISZERO 0x1
0x1a8: V119 = ISZERO 0x0
0x1a9: V120 = ISZERO 0x1
0x1aa: V121 = ISZERO 0x0
0x1ac: M[V117] = 0x1
0x1ad: V122 = 0x20
0x1af: V123 = ADD 0x20 V117
0x1b3: V124 = 0x40
0x1b5: V125 = M[0x40]
0x1b8: V126 = SUB V123 V125
0x1ba: RETURN V125 V126
---
Entry stack: [V10, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x1bb
[0x1bb:0x1c1]
---
Predecessors: [0x4a]
Successors: [0x1c2, 0x1c6]
---
0x1bb JUMPDEST
0x1bc CALLVALUE
0x1bd ISZERO
0x1be PUSH2 0x1c6
0x1c1 JUMPI
---
0x1bb: JUMPDEST 
0x1bc: V127 = CALLVALUE
0x1bd: V128 = ISZERO V127
0x1be: V129 = 0x1c6
0x1c1: JUMPI 0x1c6 V128
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1c2
[0x1c2:0x1c5]
---
Predecessors: [0x1bb]
Successors: []
---
0x1c2 PUSH1 0x0
0x1c4 DUP1
0x1c5 REVERT
---
0x1c2: V130 = 0x0
0x1c5: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1c6
[0x1c6:0x1cd]
---
Predecessors: [0x1bb]
Successors: [0x6c2]
---
0x1c6 JUMPDEST
0x1c7 PUSH2 0x1ce
0x1ca PUSH2 0x6c2
0x1cd JUMP
---
0x1c6: JUMPDEST 
0x1c7: V131 = 0x1ce
0x1ca: V132 = 0x6c2
0x1cd: JUMP 0x6c2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1ce]
Exit stack: [V10, 0x1ce]

================================

Block 0x1ce
[0x1ce:0x1e3]
---
Predecessors: [0x6c2]
Successors: []
---
0x1ce JUMPDEST
0x1cf PUSH1 0x40
0x1d1 MLOAD
0x1d2 DUP1
0x1d3 DUP3
0x1d4 DUP2
0x1d5 MSTORE
0x1d6 PUSH1 0x20
0x1d8 ADD
0x1d9 SWAP2
0x1da POP
0x1db POP
0x1dc PUSH1 0x40
0x1de MLOAD
0x1df DUP1
0x1e0 SWAP2
0x1e1 SUB
0x1e2 SWAP1
0x1e3 RETURN
---
0x1ce: JUMPDEST 
0x1cf: V133 = 0x40
0x1d1: V134 = M[0x40]
0x1d5: M[V134] = V438
0x1d6: V135 = 0x20
0x1d8: V136 = ADD 0x20 V134
0x1dc: V137 = 0x40
0x1de: V138 = M[0x40]
0x1e1: V139 = SUB V136 V138
0x1e3: RETURN V138 V139
---
Entry stack: [V10, 0x1ce, V438]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1ce]

================================

Block 0x1e4
[0x1e4:0x1ea]
---
Predecessors: [0x55]
Successors: [0x1eb, 0x1ef]
---
0x1e4 JUMPDEST
0x1e5 CALLVALUE
0x1e6 ISZERO
0x1e7 PUSH2 0x1ef
0x1ea JUMPI
---
0x1e4: JUMPDEST 
0x1e5: V140 = CALLVALUE
0x1e6: V141 = ISZERO V140
0x1e7: V142 = 0x1ef
0x1ea: JUMPI 0x1ef V141
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1eb
[0x1eb:0x1ee]
---
Predecessors: [0x1e4]
Successors: []
---
0x1eb PUSH1 0x0
0x1ed DUP1
0x1ee REVERT
---
0x1eb: V143 = 0x0
0x1ee: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ef
[0x1ef:0x242]
---
Predecessors: [0x1e4]
Successors: [0x6c8]
---
0x1ef JUMPDEST
0x1f0 PUSH2 0x243
0x1f3 PUSH1 0x4
0x1f5 DUP1
0x1f6 DUP1
0x1f7 CALLDATALOAD
0x1f8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20d AND
0x20e SWAP1
0x20f PUSH1 0x20
0x211 ADD
0x212 SWAP1
0x213 SWAP2
0x214 SWAP1
0x215 DUP1
0x216 CALLDATALOAD
0x217 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22c AND
0x22d SWAP1
0x22e PUSH1 0x20
0x230 ADD
0x231 SWAP1
0x232 SWAP2
0x233 SWAP1
0x234 DUP1
0x235 CALLDATALOAD
0x236 SWAP1
0x237 PUSH1 0x20
0x239 ADD
0x23a SWAP1
0x23b SWAP2
0x23c SWAP1
0x23d POP
0x23e POP
0x23f PUSH2 0x6c8
0x242 JUMP
---
0x1ef: JUMPDEST 
0x1f0: V144 = 0x243
0x1f3: V145 = 0x4
0x1f7: V146 = CALLDATALOAD 0x4
0x1f8: V147 = 0xffffffffffffffffffffffffffffffffffffffff
0x20d: V148 = AND 0xffffffffffffffffffffffffffffffffffffffff V146
0x20f: V149 = 0x20
0x211: V150 = ADD 0x20 0x4
0x216: V151 = CALLDATALOAD 0x24
0x217: V152 = 0xffffffffffffffffffffffffffffffffffffffff
0x22c: V153 = AND 0xffffffffffffffffffffffffffffffffffffffff V151
0x22e: V154 = 0x20
0x230: V155 = ADD 0x20 0x24
0x235: V156 = CALLDATALOAD 0x44
0x237: V157 = 0x20
0x239: V158 = ADD 0x20 0x44
0x23f: V159 = 0x6c8
0x242: JUMP 0x6c8
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x243, V148, V153, V156]
Exit stack: [V10, 0x243, V148, V153, V156]

================================

Block 0x243
[0x243:0x25c]
---
Predecessors: [0x8ad]
Successors: []
---
0x243 JUMPDEST
0x244 PUSH1 0x40
0x246 MLOAD
0x247 DUP1
0x248 DUP3
0x249 ISZERO
0x24a ISZERO
0x24b ISZERO
0x24c ISZERO
0x24d DUP2
0x24e MSTORE
0x24f PUSH1 0x20
0x251 ADD
0x252 SWAP2
0x253 POP
0x254 POP
0x255 PUSH1 0x40
0x257 MLOAD
0x258 DUP1
0x259 SWAP2
0x25a SUB
0x25b SWAP1
0x25c RETURN
---
0x243: JUMPDEST 
0x244: V160 = 0x40
0x246: V161 = M[0x40]
0x249: V162 = ISZERO 0x1
0x24a: V163 = ISZERO 0x0
0x24b: V164 = ISZERO 0x1
0x24c: V165 = ISZERO 0x0
0x24e: M[V161] = 0x1
0x24f: V166 = 0x20
0x251: V167 = ADD 0x20 V161
0x255: V168 = 0x40
0x257: V169 = M[0x40]
0x25a: V170 = SUB V167 V169
0x25c: RETURN V169 V170
---
Entry stack: [V10, S2, S1, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S2, S1]

================================

Block 0x25d
[0x25d:0x263]
---
Predecessors: [0x60]
Successors: [0x264, 0x268]
---
0x25d JUMPDEST
0x25e CALLVALUE
0x25f ISZERO
0x260 PUSH2 0x268
0x263 JUMPI
---
0x25d: JUMPDEST 
0x25e: V171 = CALLVALUE
0x25f: V172 = ISZERO V171
0x260: V173 = 0x268
0x263: JUMPI 0x268 V172
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x264
[0x264:0x267]
---
Predecessors: [0x25d]
Successors: []
---
0x264 PUSH1 0x0
0x266 DUP1
0x267 REVERT
---
0x264: V174 = 0x0
0x267: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x268
[0x268:0x26f]
---
Predecessors: [0x25d]
Successors: [0x960]
---
0x268 JUMPDEST
0x269 PUSH2 0x270
0x26c PUSH2 0x960
0x26f JUMP
---
0x268: JUMPDEST 
0x269: V175 = 0x270
0x26c: V176 = 0x960
0x26f: JUMP 0x960
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x270]
Exit stack: [V10, 0x270]

================================

Block 0x270
[0x270:0x271]
---
Predecessors: []
Successors: []
---
0x270 JUMPDEST
0x271 STOP
---
0x270: JUMPDEST 
0x271: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x272
[0x272:0x278]
---
Predecessors: [0x6b]
Successors: [0x279, 0x27d]
---
0x272 JUMPDEST
0x273 CALLVALUE
0x274 ISZERO
0x275 PUSH2 0x27d
0x278 JUMPI
---
0x272: JUMPDEST 
0x273: V177 = CALLVALUE
0x274: V178 = ISZERO V177
0x275: V179 = 0x27d
0x278: JUMPI 0x27d V178
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x279
[0x279:0x27c]
---
Predecessors: [0x272]
Successors: []
---
0x279 PUSH1 0x0
0x27b DUP1
0x27c REVERT
---
0x279: V180 = 0x0
0x27c: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x27d
[0x27d:0x284]
---
Predecessors: [0x272]
Successors: [0x9f7]
---
0x27d JUMPDEST
0x27e PUSH2 0x285
0x281 PUSH2 0x9f7
0x284 JUMP
---
0x27d: JUMPDEST 
0x27e: V181 = 0x285
0x281: V182 = 0x9f7
0x284: JUMP 0x9f7
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x285]
Exit stack: [V10, 0x285]

================================

Block 0x285
[0x285:0x2a0]
---
Predecessors: [0x9f7]
Successors: []
---
0x285 JUMPDEST
0x286 PUSH1 0x40
0x288 MLOAD
0x289 DUP1
0x28a DUP3
0x28b PUSH1 0xff
0x28d AND
0x28e PUSH1 0xff
0x290 AND
0x291 DUP2
0x292 MSTORE
0x293 PUSH1 0x20
0x295 ADD
0x296 SWAP2
0x297 POP
0x298 POP
0x299 PUSH1 0x40
0x29b MLOAD
0x29c DUP1
0x29d SWAP2
0x29e SUB
0x29f SWAP1
0x2a0 RETURN
---
0x285: JUMPDEST 
0x286: V183 = 0x40
0x288: V184 = M[0x40]
0x28b: V185 = 0xff
0x28d: V186 = AND 0xff 0x12
0x28e: V187 = 0xff
0x290: V188 = AND 0xff 0x12
0x292: M[V184] = 0x12
0x293: V189 = 0x20
0x295: V190 = ADD 0x20 V184
0x299: V191 = 0x40
0x29b: V192 = M[0x40]
0x29e: V193 = SUB V190 V192
0x2a0: RETURN V192 V193
---
Entry stack: [V10, 0x285, 0x12]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x285]

================================

Block 0x2a1
[0x2a1:0x2a7]
---
Predecessors: [0x76]
Successors: [0x2a8, 0x2ac]
---
0x2a1 JUMPDEST
0x2a2 CALLVALUE
0x2a3 ISZERO
0x2a4 PUSH2 0x2ac
0x2a7 JUMPI
---
0x2a1: JUMPDEST 
0x2a2: V194 = CALLVALUE
0x2a3: V195 = ISZERO V194
0x2a4: V196 = 0x2ac
0x2a7: JUMPI 0x2ac V195
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2a8
[0x2a8:0x2ab]
---
Predecessors: [0x2a1]
Successors: []
---
0x2a8 PUSH1 0x0
0x2aa DUP1
0x2ab REVERT
---
0x2a8: V197 = 0x0
0x2ab: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2ac
[0x2ac:0x2e0]
---
Predecessors: [0x2a1]
Successors: [0x9fc]
---
0x2ac JUMPDEST
0x2ad PUSH2 0x2e1
0x2b0 PUSH1 0x4
0x2b2 DUP1
0x2b3 DUP1
0x2b4 CALLDATALOAD
0x2b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ca AND
0x2cb SWAP1
0x2cc PUSH1 0x20
0x2ce ADD
0x2cf SWAP1
0x2d0 SWAP2
0x2d1 SWAP1
0x2d2 DUP1
0x2d3 CALLDATALOAD
0x2d4 SWAP1
0x2d5 PUSH1 0x20
0x2d7 ADD
0x2d8 SWAP1
0x2d9 SWAP2
0x2da SWAP1
0x2db POP
0x2dc POP
0x2dd PUSH2 0x9fc
0x2e0 JUMP
---
0x2ac: JUMPDEST 
0x2ad: V198 = 0x2e1
0x2b0: V199 = 0x4
0x2b4: V200 = CALLDATALOAD 0x4
0x2b5: V201 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ca: V202 = AND 0xffffffffffffffffffffffffffffffffffffffff V200
0x2cc: V203 = 0x20
0x2ce: V204 = ADD 0x20 0x4
0x2d3: V205 = CALLDATALOAD 0x24
0x2d5: V206 = 0x20
0x2d7: V207 = ADD 0x20 0x24
0x2dd: V208 = 0x9fc
0x2e0: JUMP 0x9fc
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2e1, V202, V205]
Exit stack: [V10, 0x2e1, V202, V205]

================================

Block 0x2e1
[0x2e1:0x2e2]
---
Predecessors: [0xab3]
Successors: []
---
0x2e1 JUMPDEST
0x2e2 STOP
---
0x2e1: JUMPDEST 
0x2e2: STOP 
---
Entry stack: [V10, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S3, S2, S1, S0]

================================

Block 0x2e3
[0x2e3:0x2e9]
---
Predecessors: [0x81]
Successors: [0x2ea, 0x2ee]
---
0x2e3 JUMPDEST
0x2e4 CALLVALUE
0x2e5 ISZERO
0x2e6 PUSH2 0x2ee
0x2e9 JUMPI
---
0x2e3: JUMPDEST 
0x2e4: V209 = CALLVALUE
0x2e5: V210 = ISZERO V209
0x2e6: V211 = 0x2ee
0x2e9: JUMPI 0x2ee V210
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2ea
[0x2ea:0x2ed]
---
Predecessors: [0x2e3]
Successors: []
---
0x2ea PUSH1 0x0
0x2ec DUP1
0x2ed REVERT
---
0x2ea: V212 = 0x0
0x2ed: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2ee
[0x2ee:0x319]
---
Predecessors: [0x2e3]
Successors: [0xafa]
---
0x2ee JUMPDEST
0x2ef PUSH2 0x31a
0x2f2 PUSH1 0x4
0x2f4 DUP1
0x2f5 DUP1
0x2f6 CALLDATALOAD
0x2f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x30c AND
0x30d SWAP1
0x30e PUSH1 0x20
0x310 ADD
0x311 SWAP1
0x312 SWAP2
0x313 SWAP1
0x314 POP
0x315 POP
0x316 PUSH2 0xafa
0x319 JUMP
---
0x2ee: JUMPDEST 
0x2ef: V213 = 0x31a
0x2f2: V214 = 0x4
0x2f6: V215 = CALLDATALOAD 0x4
0x2f7: V216 = 0xffffffffffffffffffffffffffffffffffffffff
0x30c: V217 = AND 0xffffffffffffffffffffffffffffffffffffffff V215
0x30e: V218 = 0x20
0x310: V219 = ADD 0x20 0x4
0x316: V220 = 0xafa
0x319: JUMP 0xafa
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x31a, V217]
Exit stack: [V10, 0x31a, V217]

================================

Block 0x31a
[0x31a:0x32f]
---
Predecessors: [0xafa]
Successors: []
---
0x31a JUMPDEST
0x31b PUSH1 0x40
0x31d MLOAD
0x31e DUP1
0x31f DUP3
0x320 DUP2
0x321 MSTORE
0x322 PUSH1 0x20
0x324 ADD
0x325 SWAP2
0x326 POP
0x327 POP
0x328 PUSH1 0x40
0x32a MLOAD
0x32b DUP1
0x32c SWAP2
0x32d SUB
0x32e SWAP1
0x32f RETURN
---
0x31a: JUMPDEST 
0x31b: V221 = 0x40
0x31d: V222 = M[0x40]
0x321: M[V222] = V652
0x322: V223 = 0x20
0x324: V224 = ADD 0x20 V222
0x328: V225 = 0x40
0x32a: V226 = M[0x40]
0x32d: V227 = SUB V224 V226
0x32f: RETURN V226 V227
---
Entry stack: [V10, V652]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x330
[0x330:0x336]
---
Predecessors: [0x8c]
Successors: [0x337, 0x33b]
---
0x330 JUMPDEST
0x331 CALLVALUE
0x332 ISZERO
0x333 PUSH2 0x33b
0x336 JUMPI
---
0x330: JUMPDEST 
0x331: V228 = CALLVALUE
0x332: V229 = ISZERO V228
0x333: V230 = 0x33b
0x336: JUMPI 0x33b V229
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x337
[0x337:0x33a]
---
Predecessors: [0x330]
Successors: []
---
0x337 PUSH1 0x0
0x339 DUP1
0x33a REVERT
---
0x337: V231 = 0x0
0x33a: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x33b
[0x33b:0x342]
---
Predecessors: [0x330]
Successors: [0xb43]
---
0x33b JUMPDEST
0x33c PUSH2 0x343
0x33f PUSH2 0xb43
0x342 JUMP
---
0x33b: JUMPDEST 
0x33c: V232 = 0x343
0x33f: V233 = 0xb43
0x342: JUMP 0xb43
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x343]
Exit stack: [V10, 0x343]

================================

Block 0x343
[0x343:0x384]
---
Predecessors: [0xb43]
Successors: []
---
0x343 JUMPDEST
0x344 PUSH1 0x40
0x346 MLOAD
0x347 DUP1
0x348 DUP3
0x349 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x35e AND
0x35f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x374 AND
0x375 DUP2
0x376 MSTORE
0x377 PUSH1 0x20
0x379 ADD
0x37a SWAP2
0x37b POP
0x37c POP
0x37d PUSH1 0x40
0x37f MLOAD
0x380 DUP1
0x381 SWAP2
0x382 SUB
0x383 SWAP1
0x384 RETURN
---
0x343: JUMPDEST 
0x344: V234 = 0x40
0x346: V235 = M[0x40]
0x349: V236 = 0xffffffffffffffffffffffffffffffffffffffff
0x35e: V237 = AND 0xffffffffffffffffffffffffffffffffffffffff V660
0x35f: V238 = 0xffffffffffffffffffffffffffffffffffffffff
0x374: V239 = AND 0xffffffffffffffffffffffffffffffffffffffff V237
0x376: M[V235] = V239
0x377: V240 = 0x20
0x379: V241 = ADD 0x20 V235
0x37d: V242 = 0x40
0x37f: V243 = M[0x40]
0x382: V244 = SUB V241 V243
0x384: RETURN V243 V244
---
Entry stack: [V10, 0x343, V660]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x343]

================================

Block 0x385
[0x385:0x38b]
---
Predecessors: [0x97]
Successors: [0x38c, 0x390]
---
0x385 JUMPDEST
0x386 CALLVALUE
0x387 ISZERO
0x388 PUSH2 0x390
0x38b JUMPI
---
0x385: JUMPDEST 
0x386: V245 = CALLVALUE
0x387: V246 = ISZERO V245
0x388: V247 = 0x390
0x38b: JUMPI 0x390 V246
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x38c
[0x38c:0x38f]
---
Predecessors: [0x385]
Successors: []
---
0x38c PUSH1 0x0
0x38e DUP1
0x38f REVERT
---
0x38c: V248 = 0x0
0x38f: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x390
[0x390:0x397]
---
Predecessors: [0x385]
Successors: [0xb69]
---
0x390 JUMPDEST
0x391 PUSH2 0x398
0x394 PUSH2 0xb69
0x397 JUMP
---
0x390: JUMPDEST 
0x391: V249 = 0x398
0x394: V250 = 0xb69
0x397: JUMP 0xb69
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x398]
Exit stack: [V10, 0x398]

================================

Block 0x398
[0x398:0x3bc]
---
Predecessors: [0xb69]
Successors: [0x3bd]
---
0x398 JUMPDEST
0x399 PUSH1 0x40
0x39b MLOAD
0x39c DUP1
0x39d DUP1
0x39e PUSH1 0x20
0x3a0 ADD
0x3a1 DUP3
0x3a2 DUP2
0x3a3 SUB
0x3a4 DUP3
0x3a5 MSTORE
0x3a6 DUP4
0x3a7 DUP2
0x3a8 DUP2
0x3a9 MLOAD
0x3aa DUP2
0x3ab MSTORE
0x3ac PUSH1 0x20
0x3ae ADD
0x3af SWAP2
0x3b0 POP
0x3b1 DUP1
0x3b2 MLOAD
0x3b3 SWAP1
0x3b4 PUSH1 0x20
0x3b6 ADD
0x3b7 SWAP1
0x3b8 DUP1
0x3b9 DUP4
0x3ba DUP4
0x3bb PUSH1 0x0
---
0x398: JUMPDEST 
0x399: V251 = 0x40
0x39b: V252 = M[0x40]
0x39e: V253 = 0x20
0x3a0: V254 = ADD 0x20 V252
0x3a3: V255 = SUB V254 V252
0x3a5: M[V252] = V255
0x3a9: V256 = M[V662]
0x3ab: M[V254] = V256
0x3ac: V257 = 0x20
0x3ae: V258 = ADD 0x20 V254
0x3b2: V259 = M[V662]
0x3b4: V260 = 0x20
0x3b6: V261 = ADD 0x20 V662
0x3bb: V262 = 0x0
---
Entry stack: [V10, 0x398, V662]
Stack pops: 1
Stack additions: [S0, V252, V252, V258, V261, V259, V259, V258, V261, 0x0]
Exit stack: [V10, 0x398, V662, V252, V252, V258, V261, V259, V259, V258, V261, 0x0]

================================

Block 0x3bd
[0x3bd:0x3c5]
---
Predecessors: [0x398, 0x3c6]
Successors: [0x3c6, 0x3d8]
---
0x3bd JUMPDEST
0x3be DUP4
0x3bf DUP2
0x3c0 LT
0x3c1 ISZERO
0x3c2 PUSH2 0x3d8
0x3c5 JUMPI
---
0x3bd: JUMPDEST 
0x3c0: V263 = LT S0 V259
0x3c1: V264 = ISZERO V263
0x3c2: V265 = 0x3d8
0x3c5: JUMPI 0x3d8 V264
---
Entry stack: [V10, 0x398, V662, V252, V252, V258, V261, V259, V259, V258, V261, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, 0x398, V662, V252, V252, V258, V261, V259, V259, V258, V261, S0]

================================

Block 0x3c6
[0x3c6:0x3d7]
---
Predecessors: [0x3bd]
Successors: [0x3bd]
---
0x3c6 DUP1
0x3c7 DUP3
0x3c8 ADD
0x3c9 MLOAD
0x3ca DUP2
0x3cb DUP5
0x3cc ADD
0x3cd MSTORE
0x3ce PUSH1 0x20
0x3d0 DUP2
0x3d1 ADD
0x3d2 SWAP1
0x3d3 POP
0x3d4 PUSH2 0x3bd
0x3d7 JUMP
---
0x3c8: V266 = ADD V261 S0
0x3c9: V267 = M[V266]
0x3cc: V268 = ADD V258 S0
0x3cd: M[V268] = V267
0x3ce: V269 = 0x20
0x3d1: V270 = ADD S0 0x20
0x3d4: V271 = 0x3bd
0x3d7: JUMP 0x3bd
---
Entry stack: [V10, 0x398, V662, V252, V252, V258, V261, V259, V259, V258, V261, S0]
Stack pops: 3
Stack additions: [S2, S1, V270]
Exit stack: [V10, 0x398, V662, V252, V252, V258, V261, V259, V259, V258, V261, V270]

================================

Block 0x3d8
[0x3d8:0x3eb]
---
Predecessors: [0x3bd]
Successors: [0x3ec, 0x405]
---
0x3d8 JUMPDEST
0x3d9 POP
0x3da POP
0x3db POP
0x3dc POP
0x3dd SWAP1
0x3de POP
0x3df SWAP1
0x3e0 DUP2
0x3e1 ADD
0x3e2 SWAP1
0x3e3 PUSH1 0x1f
0x3e5 AND
0x3e6 DUP1
0x3e7 ISZERO
0x3e8 PUSH2 0x405
0x3eb JUMPI
---
0x3d8: JUMPDEST 
0x3e1: V272 = ADD V259 V258
0x3e3: V273 = 0x1f
0x3e5: V274 = AND 0x1f V259
0x3e7: V275 = ISZERO V274
0x3e8: V276 = 0x405
0x3eb: JUMPI 0x405 V275
---
Entry stack: [V10, 0x398, V662, V252, V252, V258, V261, V259, V259, V258, V261, S0]
Stack pops: 7
Stack additions: [V272, V274]
Exit stack: [V10, 0x398, V662, V252, V252, V272, V274]

================================

Block 0x3ec
[0x3ec:0x404]
---
Predecessors: [0x3d8]
Successors: [0x405]
---
0x3ec DUP1
0x3ed DUP3
0x3ee SUB
0x3ef DUP1
0x3f0 MLOAD
0x3f1 PUSH1 0x1
0x3f3 DUP4
0x3f4 PUSH1 0x20
0x3f6 SUB
0x3f7 PUSH2 0x100
0x3fa EXP
0x3fb SUB
0x3fc NOT
0x3fd AND
0x3fe DUP2
0x3ff MSTORE
0x400 PUSH1 0x20
0x402 ADD
0x403 SWAP2
0x404 POP
---
0x3ee: V277 = SUB V272 V274
0x3f0: V278 = M[V277]
0x3f1: V279 = 0x1
0x3f4: V280 = 0x20
0x3f6: V281 = SUB 0x20 V274
0x3f7: V282 = 0x100
0x3fa: V283 = EXP 0x100 V281
0x3fb: V284 = SUB V283 0x1
0x3fc: V285 = NOT V284
0x3fd: V286 = AND V285 V278
0x3ff: M[V277] = V286
0x400: V287 = 0x20
0x402: V288 = ADD 0x20 V277
---
Entry stack: [V10, 0x398, V662, V252, V252, V272, V274]
Stack pops: 2
Stack additions: [V288, S0]
Exit stack: [V10, 0x398, V662, V252, V252, V288, V274]

================================

Block 0x405
[0x405:0x412]
---
Predecessors: [0x3d8, 0x3ec]
Successors: []
---
0x405 JUMPDEST
0x406 POP
0x407 SWAP3
0x408 POP
0x409 POP
0x40a POP
0x40b PUSH1 0x40
0x40d MLOAD
0x40e DUP1
0x40f SWAP2
0x410 SUB
0x411 SWAP1
0x412 RETURN
---
0x405: JUMPDEST 
0x40b: V289 = 0x40
0x40d: V290 = M[0x40]
0x410: V291 = SUB S1 V290
0x412: RETURN V290 V291
---
Entry stack: [V10, 0x398, V662, V252, V252, S1, V274]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x398]

================================

Block 0x413
[0x413:0x419]
---
Predecessors: [0xa2]
Successors: [0x41a, 0x41e]
---
0x413 JUMPDEST
0x414 CALLVALUE
0x415 ISZERO
0x416 PUSH2 0x41e
0x419 JUMPI
---
0x413: JUMPDEST 
0x414: V292 = CALLVALUE
0x415: V293 = ISZERO V292
0x416: V294 = 0x41e
0x419: JUMPI 0x41e V293
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x41a
[0x41a:0x41d]
---
Predecessors: [0x413]
Successors: []
---
0x41a PUSH1 0x0
0x41c DUP1
0x41d REVERT
---
0x41a: V295 = 0x0
0x41d: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x41e
[0x41e:0x449]
---
Predecessors: [0x413]
Successors: [0xba2]
---
0x41e JUMPDEST
0x41f PUSH2 0x44a
0x422 PUSH1 0x4
0x424 DUP1
0x425 DUP1
0x426 CALLDATALOAD
0x427 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x43c AND
0x43d SWAP1
0x43e PUSH1 0x20
0x440 ADD
0x441 SWAP1
0x442 SWAP2
0x443 SWAP1
0x444 POP
0x445 POP
0x446 PUSH2 0xba2
0x449 JUMP
---
0x41e: JUMPDEST 
0x41f: V296 = 0x44a
0x422: V297 = 0x4
0x426: V298 = CALLDATALOAD 0x4
0x427: V299 = 0xffffffffffffffffffffffffffffffffffffffff
0x43c: V300 = AND 0xffffffffffffffffffffffffffffffffffffffff V298
0x43e: V301 = 0x20
0x440: V302 = ADD 0x20 0x4
0x446: V303 = 0xba2
0x449: JUMP 0xba2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x44a, V300]
Exit stack: [V10, 0x44a, V300]

================================

Block 0x44a
[0x44a:0x44b]
---
Predecessors: [0xbfe]
Successors: []
---
0x44a JUMPDEST
0x44b STOP
---
0x44a: JUMPDEST 
0x44b: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x44c
[0x44c:0x452]
---
Predecessors: [0xad]
Successors: [0x453, 0x457]
---
0x44c JUMPDEST
0x44d CALLVALUE
0x44e ISZERO
0x44f PUSH2 0x457
0x452 JUMPI
---
0x44c: JUMPDEST 
0x44d: V304 = CALLVALUE
0x44e: V305 = ISZERO V304
0x44f: V306 = 0x457
0x452: JUMPI 0x457 V305
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x453
[0x453:0x456]
---
Predecessors: [0x44c]
Successors: []
---
0x453 PUSH1 0x0
0x455 DUP1
0x456 REVERT
---
0x453: V307 = 0x0
0x456: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x457
[0x457:0x48b]
---
Predecessors: [0x44c]
Successors: [0xc42]
---
0x457 JUMPDEST
0x458 PUSH2 0x48c
0x45b PUSH1 0x4
0x45d DUP1
0x45e DUP1
0x45f CALLDATALOAD
0x460 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x475 AND
0x476 SWAP1
0x477 PUSH1 0x20
0x479 ADD
0x47a SWAP1
0x47b SWAP2
0x47c SWAP1
0x47d DUP1
0x47e CALLDATALOAD
0x47f SWAP1
0x480 PUSH1 0x20
0x482 ADD
0x483 SWAP1
0x484 SWAP2
0x485 SWAP1
0x486 POP
0x487 POP
0x488 PUSH2 0xc42
0x48b JUMP
---
0x457: JUMPDEST 
0x458: V308 = 0x48c
0x45b: V309 = 0x4
0x45f: V310 = CALLDATALOAD 0x4
0x460: V311 = 0xffffffffffffffffffffffffffffffffffffffff
0x475: V312 = AND 0xffffffffffffffffffffffffffffffffffffffff V310
0x477: V313 = 0x20
0x479: V314 = ADD 0x20 0x4
0x47e: V315 = CALLDATALOAD 0x24
0x480: V316 = 0x20
0x482: V317 = ADD 0x20 0x24
0x488: V318 = 0xc42
0x48b: JUMP 0xc42
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x48c, V312, V315]
Exit stack: [V10, 0x48c, V312, V315]

================================

Block 0x48c
[0x48c:0x4a5]
---
Predecessors: [0xf67]
Successors: []
---
0x48c JUMPDEST
0x48d PUSH1 0x40
0x48f MLOAD
0x490 DUP1
0x491 DUP3
0x492 ISZERO
0x493 ISZERO
0x494 ISZERO
0x495 ISZERO
0x496 DUP2
0x497 MSTORE
0x498 PUSH1 0x20
0x49a ADD
0x49b SWAP2
0x49c POP
0x49d POP
0x49e PUSH1 0x40
0x4a0 MLOAD
0x4a1 DUP1
0x4a2 SWAP2
0x4a3 SUB
0x4a4 SWAP1
0x4a5 RETURN
---
0x48c: JUMPDEST 
0x48d: V319 = 0x40
0x48f: V320 = M[0x40]
0x492: V321 = ISZERO 0x1
0x493: V322 = ISZERO 0x0
0x494: V323 = ISZERO 0x1
0x495: V324 = ISZERO 0x0
0x497: M[V320] = 0x1
0x498: V325 = 0x20
0x49a: V326 = ADD 0x20 V320
0x49e: V327 = 0x40
0x4a0: V328 = M[0x40]
0x4a3: V329 = SUB V326 V328
0x4a5: RETURN V328 V329
---
Entry stack: [0x1]
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4a6
[0x4a6:0x4ac]
---
Predecessors: [0xb8]
Successors: [0x4ad, 0x4b1]
---
0x4a6 JUMPDEST
0x4a7 CALLVALUE
0x4a8 ISZERO
0x4a9 PUSH2 0x4b1
0x4ac JUMPI
---
0x4a6: JUMPDEST 
0x4a7: V330 = CALLVALUE
0x4a8: V331 = ISZERO V330
0x4a9: V332 = 0x4b1
0x4ac: JUMPI 0x4b1 V331
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4ad
[0x4ad:0x4b0]
---
Predecessors: [0x4a6]
Successors: []
---
0x4ad PUSH1 0x0
0x4af DUP1
0x4b0 REVERT
---
0x4ad: V333 = 0x0
0x4b0: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4b1
[0x4b1:0x528]
---
Predecessors: [0x4a6]
Successors: [0xf82]
---
0x4b1 JUMPDEST
0x4b2 PUSH2 0x529
0x4b5 PUSH1 0x4
0x4b7 DUP1
0x4b8 DUP1
0x4b9 CALLDATALOAD
0x4ba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4cf AND
0x4d0 SWAP1
0x4d1 PUSH1 0x20
0x4d3 ADD
0x4d4 SWAP1
0x4d5 SWAP2
0x4d6 SWAP1
0x4d7 DUP1
0x4d8 CALLDATALOAD
0x4d9 SWAP1
0x4da PUSH1 0x20
0x4dc ADD
0x4dd SWAP1
0x4de SWAP2
0x4df SWAP1
0x4e0 DUP1
0x4e1 CALLDATALOAD
0x4e2 SWAP1
0x4e3 PUSH1 0x20
0x4e5 ADD
0x4e6 SWAP1
0x4e7 DUP3
0x4e8 ADD
0x4e9 DUP1
0x4ea CALLDATALOAD
0x4eb SWAP1
0x4ec PUSH1 0x20
0x4ee ADD
0x4ef SWAP1
0x4f0 DUP1
0x4f1 DUP1
0x4f2 PUSH1 0x1f
0x4f4 ADD
0x4f5 PUSH1 0x20
0x4f7 DUP1
0x4f8 SWAP2
0x4f9 DIV
0x4fa MUL
0x4fb PUSH1 0x20
0x4fd ADD
0x4fe PUSH1 0x40
0x500 MLOAD
0x501 SWAP1
0x502 DUP2
0x503 ADD
0x504 PUSH1 0x40
0x506 MSTORE
0x507 DUP1
0x508 SWAP4
0x509 SWAP3
0x50a SWAP2
0x50b SWAP1
0x50c DUP2
0x50d DUP2
0x50e MSTORE
0x50f PUSH1 0x20
0x511 ADD
0x512 DUP4
0x513 DUP4
0x514 DUP1
0x515 DUP3
0x516 DUP5
0x517 CALLDATACOPY
0x518 DUP3
0x519 ADD
0x51a SWAP2
0x51b POP
0x51c POP
0x51d POP
0x51e POP
0x51f POP
0x520 POP
0x521 SWAP2
0x522 SWAP1
0x523 POP
0x524 POP
0x525 PUSH2 0xf82
0x528 JUMP
---
0x4b1: JUMPDEST 
0x4b2: V334 = 0x529
0x4b5: V335 = 0x4
0x4b9: V336 = CALLDATALOAD 0x4
0x4ba: V337 = 0xffffffffffffffffffffffffffffffffffffffff
0x4cf: V338 = AND 0xffffffffffffffffffffffffffffffffffffffff V336
0x4d1: V339 = 0x20
0x4d3: V340 = ADD 0x20 0x4
0x4d8: V341 = CALLDATALOAD 0x24
0x4da: V342 = 0x20
0x4dc: V343 = ADD 0x20 0x24
0x4e1: V344 = CALLDATALOAD 0x44
0x4e3: V345 = 0x20
0x4e5: V346 = ADD 0x20 0x44
0x4e8: V347 = ADD 0x4 V344
0x4ea: V348 = CALLDATALOAD V347
0x4ec: V349 = 0x20
0x4ee: V350 = ADD 0x20 V347
0x4f2: V351 = 0x1f
0x4f4: V352 = ADD 0x1f V348
0x4f5: V353 = 0x20
0x4f9: V354 = DIV V352 0x20
0x4fa: V355 = MUL V354 0x20
0x4fb: V356 = 0x20
0x4fd: V357 = ADD 0x20 V355
0x4fe: V358 = 0x40
0x500: V359 = M[0x40]
0x503: V360 = ADD V359 V357
0x504: V361 = 0x40
0x506: M[0x40] = V360
0x50e: M[V359] = V348
0x50f: V362 = 0x20
0x511: V363 = ADD 0x20 V359
0x517: CALLDATACOPY V363 V350 V348
0x519: V364 = ADD V363 V348
0x525: V365 = 0xf82
0x528: JUMP 0xf82
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x529, V338, V341, V359]
Exit stack: [V10, 0x529, V338, V341, V359]

================================

Block 0x529
[0x529:0x52a]
---
Predecessors: [0x129d]
Successors: []
---
0x529 JUMPDEST
0x52a STOP
---
0x529: JUMPDEST 
0x52a: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x52b
[0x52b:0x531]
---
Predecessors: [0xc3]
Successors: [0x532, 0x536]
---
0x52b JUMPDEST
0x52c CALLVALUE
0x52d ISZERO
0x52e PUSH2 0x536
0x531 JUMPI
---
0x52b: JUMPDEST 
0x52c: V366 = CALLVALUE
0x52d: V367 = ISZERO V366
0x52e: V368 = 0x536
0x531: JUMPI 0x536 V367
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x532
[0x532:0x535]
---
Predecessors: [0x52b]
Successors: []
---
0x532 PUSH1 0x0
0x534 DUP1
0x535 REVERT
---
0x532: V369 = 0x0
0x535: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x536
[0x536:0x580]
---
Predecessors: [0x52b]
Successors: [0x12b2]
---
0x536 JUMPDEST
0x537 PUSH2 0x581
0x53a PUSH1 0x4
0x53c DUP1
0x53d DUP1
0x53e CALLDATALOAD
0x53f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x554 AND
0x555 SWAP1
0x556 PUSH1 0x20
0x558 ADD
0x559 SWAP1
0x55a SWAP2
0x55b SWAP1
0x55c DUP1
0x55d CALLDATALOAD
0x55e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x573 AND
0x574 SWAP1
0x575 PUSH1 0x20
0x577 ADD
0x578 SWAP1
0x579 SWAP2
0x57a SWAP1
0x57b POP
0x57c POP
0x57d PUSH2 0x12b2
0x580 JUMP
---
0x536: JUMPDEST 
0x537: V370 = 0x581
0x53a: V371 = 0x4
0x53e: V372 = CALLDATALOAD 0x4
0x53f: V373 = 0xffffffffffffffffffffffffffffffffffffffff
0x554: V374 = AND 0xffffffffffffffffffffffffffffffffffffffff V372
0x556: V375 = 0x20
0x558: V376 = ADD 0x20 0x4
0x55d: V377 = CALLDATALOAD 0x24
0x55e: V378 = 0xffffffffffffffffffffffffffffffffffffffff
0x573: V379 = AND 0xffffffffffffffffffffffffffffffffffffffff V377
0x575: V380 = 0x20
0x577: V381 = ADD 0x20 0x24
0x57d: V382 = 0x12b2
0x580: JUMP 0x12b2
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x581, V374, V379]
Exit stack: [V10, 0x581, V374, V379]

================================

Block 0x581
[0x581:0x596]
---
Predecessors: [0x12b2]
Successors: []
---
0x581 JUMPDEST
0x582 PUSH1 0x40
0x584 MLOAD
0x585 DUP1
0x586 DUP3
0x587 DUP2
0x588 MSTORE
0x589 PUSH1 0x20
0x58b ADD
0x58c SWAP2
0x58d POP
0x58e POP
0x58f PUSH1 0x40
0x591 MLOAD
0x592 DUP1
0x593 SWAP2
0x594 SUB
0x595 SWAP1
0x596 RETURN
---
0x581: JUMPDEST 
0x582: V383 = 0x40
0x584: V384 = M[0x40]
0x588: M[V384] = V1102
0x589: V385 = 0x20
0x58b: V386 = ADD 0x20 V384
0x58f: V387 = 0x40
0x591: V388 = M[0x40]
0x594: V389 = SUB V386 V388
0x596: RETURN V388 V389
---
Entry stack: [V10, V1102]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x597
[0x597:0x5cf]
---
Predecessors: [0xde]
Successors: [0xe6]
---
0x597 JUMPDEST
0x598 PUSH1 0x40
0x59a DUP1
0x59b MLOAD
0x59c SWAP1
0x59d DUP2
0x59e ADD
0x59f PUSH1 0x40
0x5a1 MSTORE
0x5a2 DUP1
0x5a3 PUSH1 0xd
0x5a5 DUP2
0x5a6 MSTORE
0x5a7 PUSH1 0x20
0x5a9 ADD
0x5aa PUSH32 0x313078416d696e20546f6b656e00000000000000000000000000000000000000
0x5cb DUP2
0x5cc MSTORE
0x5cd POP
0x5ce DUP2
0x5cf JUMP
---
0x597: JUMPDEST 
0x598: V390 = 0x40
0x59b: V391 = M[0x40]
0x59e: V392 = ADD V391 0x40
0x59f: V393 = 0x40
0x5a1: M[0x40] = V392
0x5a3: V394 = 0xd
0x5a6: M[V391] = 0xd
0x5a7: V395 = 0x20
0x5a9: V396 = ADD 0x20 V391
0x5aa: V397 = 0x313078416d696e20546f6b656e00000000000000000000000000000000000000
0x5cc: M[V396] = 0x313078416d696e20546f6b656e00000000000000000000000000000000000000
0x5cf: JUMP 0xe6
---
Entry stack: [V10, 0xe6]
Stack pops: 1
Stack additions: [S0, V391]
Exit stack: [V10, 0xe6, V391]

================================

Block 0x5d0
[0x5d0:0x6c1]
---
Predecessors: [0x16c]
Successors: [0x1a1]
---
0x5d0 JUMPDEST
0x5d1 PUSH1 0x0
0x5d3 DUP2
0x5d4 PUSH1 0x4
0x5d6 PUSH1 0x0
0x5d8 CALLER
0x5d9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5ee AND
0x5ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x604 AND
0x605 DUP2
0x606 MSTORE
0x607 PUSH1 0x20
0x609 ADD
0x60a SWAP1
0x60b DUP2
0x60c MSTORE
0x60d PUSH1 0x20
0x60f ADD
0x610 PUSH1 0x0
0x612 SHA3
0x613 PUSH1 0x0
0x615 DUP6
0x616 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x62b AND
0x62c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x641 AND
0x642 DUP2
0x643 MSTORE
0x644 PUSH1 0x20
0x646 ADD
0x647 SWAP1
0x648 DUP2
0x649 MSTORE
0x64a PUSH1 0x20
0x64c ADD
0x64d PUSH1 0x0
0x64f SHA3
0x650 DUP2
0x651 SWAP1
0x652 SSTORE
0x653 POP
0x654 DUP3
0x655 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x66a AND
0x66b CALLER
0x66c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x681 AND
0x682 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x6a3 DUP5
0x6a4 PUSH1 0x40
0x6a6 MLOAD
0x6a7 DUP1
0x6a8 DUP3
0x6a9 DUP2
0x6aa MSTORE
0x6ab PUSH1 0x20
0x6ad ADD
0x6ae SWAP2
0x6af POP
0x6b0 POP
0x6b1 PUSH1 0x40
0x6b3 MLOAD
0x6b4 DUP1
0x6b5 SWAP2
0x6b6 SUB
0x6b7 SWAP1
0x6b8 LOG3
0x6b9 PUSH1 0x1
0x6bb SWAP1
0x6bc POP
0x6bd SWAP3
0x6be SWAP2
0x6bf POP
0x6c0 POP
0x6c1 JUMP
---
0x5d0: JUMPDEST 
0x5d1: V398 = 0x0
0x5d4: V399 = 0x4
0x5d6: V400 = 0x0
0x5d8: V401 = CALLER
0x5d9: V402 = 0xffffffffffffffffffffffffffffffffffffffff
0x5ee: V403 = AND 0xffffffffffffffffffffffffffffffffffffffff V401
0x5ef: V404 = 0xffffffffffffffffffffffffffffffffffffffff
0x604: V405 = AND 0xffffffffffffffffffffffffffffffffffffffff V403
0x606: M[0x0] = V405
0x607: V406 = 0x20
0x609: V407 = ADD 0x20 0x0
0x60c: M[0x20] = 0x4
0x60d: V408 = 0x20
0x60f: V409 = ADD 0x20 0x20
0x610: V410 = 0x0
0x612: V411 = SHA3 0x0 0x40
0x613: V412 = 0x0
0x616: V413 = 0xffffffffffffffffffffffffffffffffffffffff
0x62b: V414 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x62c: V415 = 0xffffffffffffffffffffffffffffffffffffffff
0x641: V416 = AND 0xffffffffffffffffffffffffffffffffffffffff V414
0x643: M[0x0] = V416
0x644: V417 = 0x20
0x646: V418 = ADD 0x20 0x0
0x649: M[0x20] = V411
0x64a: V419 = 0x20
0x64c: V420 = ADD 0x20 0x20
0x64d: V421 = 0x0
0x64f: V422 = SHA3 0x0 0x40
0x652: S[V422] = V112
0x655: V423 = 0xffffffffffffffffffffffffffffffffffffffff
0x66a: V424 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x66b: V425 = CALLER
0x66c: V426 = 0xffffffffffffffffffffffffffffffffffffffff
0x681: V427 = AND 0xffffffffffffffffffffffffffffffffffffffff V425
0x682: V428 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x6a4: V429 = 0x40
0x6a6: V430 = M[0x40]
0x6aa: M[V430] = V112
0x6ab: V431 = 0x20
0x6ad: V432 = ADD 0x20 V430
0x6b1: V433 = 0x40
0x6b3: V434 = M[0x40]
0x6b6: V435 = SUB V432 V434
0x6b8: LOG V434 V435 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V427 V424
0x6b9: V436 = 0x1
0x6c1: JUMP 0x1a1
---
Entry stack: [V10, 0x1a1, V109, V112]
Stack pops: 3
Stack additions: [0x1]
Exit stack: [V10, 0x1]

================================

Block 0x6c2
[0x6c2:0x6c7]
---
Predecessors: [0x1c6]
Successors: [0x1ce]
---
0x6c2 JUMPDEST
0x6c3 PUSH1 0x2
0x6c5 SLOAD
0x6c6 DUP2
0x6c7 JUMP
---
0x6c2: JUMPDEST 
0x6c3: V437 = 0x2
0x6c5: V438 = S[0x2]
0x6c7: JUMP 0x1ce
---
Entry stack: [V10, 0x1ce]
Stack pops: 1
Stack additions: [S0, V438]
Exit stack: [V10, 0x1ce, V438]

================================

Block 0x6c8
[0x6c8:0x712]
---
Predecessors: [0x1ef]
Successors: [0x1339]
---
0x6c8 JUMPDEST
0x6c9 PUSH1 0x0
0x6cb PUSH2 0x713
0x6ce PUSH1 0x3
0x6d0 PUSH1 0x0
0x6d2 DUP7
0x6d3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6e8 AND
0x6e9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6fe AND
0x6ff DUP2
0x700 MSTORE
0x701 PUSH1 0x20
0x703 ADD
0x704 SWAP1
0x705 DUP2
0x706 MSTORE
0x707 PUSH1 0x20
0x709 ADD
0x70a PUSH1 0x0
0x70c SHA3
0x70d SLOAD
0x70e DUP4
0x70f PUSH2 0x1339
0x712 JUMP
---
0x6c8: JUMPDEST 
0x6c9: V439 = 0x0
0x6cb: V440 = 0x713
0x6ce: V441 = 0x3
0x6d0: V442 = 0x0
0x6d3: V443 = 0xffffffffffffffffffffffffffffffffffffffff
0x6e8: V444 = AND 0xffffffffffffffffffffffffffffffffffffffff V148
0x6e9: V445 = 0xffffffffffffffffffffffffffffffffffffffff
0x6fe: V446 = AND 0xffffffffffffffffffffffffffffffffffffffff V444
0x700: M[0x0] = V446
0x701: V447 = 0x20
0x703: V448 = ADD 0x20 0x0
0x706: M[0x20] = 0x3
0x707: V449 = 0x20
0x709: V450 = ADD 0x20 0x20
0x70a: V451 = 0x0
0x70c: V452 = SHA3 0x0 0x40
0x70d: V453 = S[V452]
0x70f: V454 = 0x1339
0x712: JUMP 0x1339
---
Entry stack: [V10, 0x243, V148, V153, V156]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, 0x713, V453, S0]
Exit stack: [V10, 0x243, V148, V153, V156, 0x0, 0x713, V453, V156]

================================

Block 0x713
[0x713:0x7db]
---
Predecessors: [0x1347]
Successors: [0x1339]
---
0x713 JUMPDEST
0x714 PUSH1 0x3
0x716 PUSH1 0x0
0x718 DUP7
0x719 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x72e AND
0x72f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x744 AND
0x745 DUP2
0x746 MSTORE
0x747 PUSH1 0x20
0x749 ADD
0x74a SWAP1
0x74b DUP2
0x74c MSTORE
0x74d PUSH1 0x20
0x74f ADD
0x750 PUSH1 0x0
0x752 SHA3
0x753 DUP2
0x754 SWAP1
0x755 SSTORE
0x756 POP
0x757 PUSH2 0x7dc
0x75a PUSH1 0x4
0x75c PUSH1 0x0
0x75e DUP7
0x75f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x774 AND
0x775 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x78a AND
0x78b DUP2
0x78c MSTORE
0x78d PUSH1 0x20
0x78f ADD
0x790 SWAP1
0x791 DUP2
0x792 MSTORE
0x793 PUSH1 0x20
0x795 ADD
0x796 PUSH1 0x0
0x798 SHA3
0x799 PUSH1 0x0
0x79b CALLER
0x79c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7b1 AND
0x7b2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7c7 AND
0x7c8 DUP2
0x7c9 MSTORE
0x7ca PUSH1 0x20
0x7cc ADD
0x7cd SWAP1
0x7ce DUP2
0x7cf MSTORE
0x7d0 PUSH1 0x20
0x7d2 ADD
0x7d3 PUSH1 0x0
0x7d5 SHA3
0x7d6 SLOAD
0x7d7 DUP4
0x7d8 PUSH2 0x1339
0x7db JUMP
---
0x713: JUMPDEST 
0x714: V455 = 0x3
0x716: V456 = 0x0
0x719: V457 = 0xffffffffffffffffffffffffffffffffffffffff
0x72e: V458 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x72f: V459 = 0xffffffffffffffffffffffffffffffffffffffff
0x744: V460 = AND 0xffffffffffffffffffffffffffffffffffffffff V458
0x746: M[0x0] = V460
0x747: V461 = 0x20
0x749: V462 = ADD 0x20 0x0
0x74c: M[0x20] = 0x3
0x74d: V463 = 0x20
0x74f: V464 = ADD 0x20 0x20
0x750: V465 = 0x0
0x752: V466 = SHA3 0x0 0x40
0x755: S[V466] = V1109
0x757: V467 = 0x7dc
0x75a: V468 = 0x4
0x75c: V469 = 0x0
0x75f: V470 = 0xffffffffffffffffffffffffffffffffffffffff
0x774: V471 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x775: V472 = 0xffffffffffffffffffffffffffffffffffffffff
0x78a: V473 = AND 0xffffffffffffffffffffffffffffffffffffffff V471
0x78c: M[0x0] = V473
0x78d: V474 = 0x20
0x78f: V475 = ADD 0x20 0x0
0x792: M[0x20] = 0x4
0x793: V476 = 0x20
0x795: V477 = ADD 0x20 0x20
0x796: V478 = 0x0
0x798: V479 = SHA3 0x0 0x40
0x799: V480 = 0x0
0x79b: V481 = CALLER
0x79c: V482 = 0xffffffffffffffffffffffffffffffffffffffff
0x7b1: V483 = AND 0xffffffffffffffffffffffffffffffffffffffff V481
0x7b2: V484 = 0xffffffffffffffffffffffffffffffffffffffff
0x7c7: V485 = AND 0xffffffffffffffffffffffffffffffffffffffff V483
0x7c9: M[0x0] = V485
0x7ca: V486 = 0x20
0x7cc: V487 = ADD 0x20 0x0
0x7cf: M[0x20] = V479
0x7d0: V488 = 0x20
0x7d2: V489 = ADD 0x20 0x20
0x7d3: V490 = 0x0
0x7d5: V491 = SHA3 0x0 0x40
0x7d6: V492 = S[V491]
0x7d8: V493 = 0x1339
0x7db: JUMP 0x1339
---
Entry stack: [V10, S7, S6, S5, S4, S3, S2, 0x0, V1109]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, 0x7dc, V492, S2]
Exit stack: [V10, S7, S6, S5, S4, S3, S2, 0x0, 0x7dc, V492, S2]

================================

Block 0x7dc
[0x7dc:0x8a7]
---
Predecessors: [0x1347]
Successors: [0x1352]
---
0x7dc JUMPDEST
0x7dd PUSH1 0x4
0x7df PUSH1 0x0
0x7e1 DUP7
0x7e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7f7 AND
0x7f8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x80d AND
0x80e DUP2
0x80f MSTORE
0x810 PUSH1 0x20
0x812 ADD
0x813 SWAP1
0x814 DUP2
0x815 MSTORE
0x816 PUSH1 0x20
0x818 ADD
0x819 PUSH1 0x0
0x81b SHA3
0x81c PUSH1 0x0
0x81e CALLER
0x81f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x834 AND
0x835 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x84a AND
0x84b DUP2
0x84c MSTORE
0x84d PUSH1 0x20
0x84f ADD
0x850 SWAP1
0x851 DUP2
0x852 MSTORE
0x853 PUSH1 0x20
0x855 ADD
0x856 PUSH1 0x0
0x858 SHA3
0x859 DUP2
0x85a SWAP1
0x85b SSTORE
0x85c POP
0x85d PUSH2 0x8ad
0x860 PUSH1 0x3
0x862 PUSH1 0x0
0x864 DUP6
0x865 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x87a AND
0x87b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x890 AND
0x891 DUP2
0x892 MSTORE
0x893 PUSH1 0x20
0x895 ADD
0x896 SWAP1
0x897 DUP2
0x898 MSTORE
0x899 PUSH1 0x20
0x89b ADD
0x89c PUSH1 0x0
0x89e SHA3
0x89f SLOAD
0x8a0 PUSH2 0x8a8
0x8a3 DUP5
0x8a4 PUSH2 0x1352
0x8a7 JUMP
---
0x7dc: JUMPDEST 
0x7dd: V494 = 0x4
0x7df: V495 = 0x0
0x7e2: V496 = 0xffffffffffffffffffffffffffffffffffffffff
0x7f7: V497 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x7f8: V498 = 0xffffffffffffffffffffffffffffffffffffffff
0x80d: V499 = AND 0xffffffffffffffffffffffffffffffffffffffff V497
0x80f: M[0x0] = V499
0x810: V500 = 0x20
0x812: V501 = ADD 0x20 0x0
0x815: M[0x20] = 0x4
0x816: V502 = 0x20
0x818: V503 = ADD 0x20 0x20
0x819: V504 = 0x0
0x81b: V505 = SHA3 0x0 0x40
0x81c: V506 = 0x0
0x81e: V507 = CALLER
0x81f: V508 = 0xffffffffffffffffffffffffffffffffffffffff
0x834: V509 = AND 0xffffffffffffffffffffffffffffffffffffffff V507
0x835: V510 = 0xffffffffffffffffffffffffffffffffffffffff
0x84a: V511 = AND 0xffffffffffffffffffffffffffffffffffffffff V509
0x84c: M[0x0] = V511
0x84d: V512 = 0x20
0x84f: V513 = ADD 0x20 0x0
0x852: M[0x20] = V505
0x853: V514 = 0x20
0x855: V515 = ADD 0x20 0x20
0x856: V516 = 0x0
0x858: V517 = SHA3 0x0 0x40
0x85b: S[V517] = V1109
0x85d: V518 = 0x8ad
0x860: V519 = 0x3
0x862: V520 = 0x0
0x865: V521 = 0xffffffffffffffffffffffffffffffffffffffff
0x87a: V522 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x87b: V523 = 0xffffffffffffffffffffffffffffffffffffffff
0x890: V524 = AND 0xffffffffffffffffffffffffffffffffffffffff V522
0x892: M[0x0] = V524
0x893: V525 = 0x20
0x895: V526 = ADD 0x20 0x0
0x898: M[0x20] = 0x3
0x899: V527 = 0x20
0x89b: V528 = ADD 0x20 0x20
0x89c: V529 = 0x0
0x89e: V530 = SHA3 0x0 0x40
0x89f: V531 = S[V530]
0x8a0: V532 = 0x8a8
0x8a4: V533 = 0x1352
0x8a7: JUMP 0x1352
---
Entry stack: [V10, S7, S6, S5, S4, S3, S2, 0x0, V1109]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, 0x8ad, V531, 0x8a8, S2]
Exit stack: [V10, S7, S6, S5, S4, S3, S2, 0x0, 0x8ad, V531, 0x8a8, S2]

================================

Block 0x8a8
[0x8a8:0x8ac]
---
Predecessors: [0x13a6]
Successors: [0x13ac]
---
0x8a8 JUMPDEST
0x8a9 PUSH2 0x13ac
0x8ac JUMP
---
0x8a8: JUMPDEST 
0x8a9: V534 = 0x13ac
0x8ac: JUMP 0x13ac
---
Entry stack: [V10, S9, S8, S7, S6, S5, S4, 0x0, {0x8ad, 0xd30, 0x1066}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S9, S8, S7, S6, S5, S4, 0x0, {0x8ad, 0xd30, 0x1066}, S1, S0]

================================

Block 0x8ad
[0x8ad:0x95f]
---
Predecessors: [0x13c0]
Successors: [0x243]
---
0x8ad JUMPDEST
0x8ae PUSH1 0x3
0x8b0 PUSH1 0x0
0x8b2 DUP6
0x8b3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8c8 AND
0x8c9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8de AND
0x8df DUP2
0x8e0 MSTORE
0x8e1 PUSH1 0x20
0x8e3 ADD
0x8e4 SWAP1
0x8e5 DUP2
0x8e6 MSTORE
0x8e7 PUSH1 0x20
0x8e9 ADD
0x8ea PUSH1 0x0
0x8ec SHA3
0x8ed DUP2
0x8ee SWAP1
0x8ef SSTORE
0x8f0 POP
0x8f1 DUP3
0x8f2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x907 AND
0x908 DUP5
0x909 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x91e AND
0x91f PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x940 DUP5
0x941 PUSH1 0x40
0x943 MLOAD
0x944 DUP1
0x945 DUP3
0x946 DUP2
0x947 MSTORE
0x948 PUSH1 0x20
0x94a ADD
0x94b SWAP2
0x94c POP
0x94d POP
0x94e PUSH1 0x40
0x950 MLOAD
0x951 DUP1
0x952 SWAP2
0x953 SUB
0x954 SWAP1
0x955 LOG3
0x956 PUSH1 0x1
0x958 SWAP1
0x959 POP
0x95a SWAP4
0x95b SWAP3
0x95c POP
0x95d POP
0x95e POP
0x95f JUMP
---
0x8ad: JUMPDEST 
0x8ae: V535 = 0x3
0x8b0: V536 = 0x0
0x8b3: V537 = 0xffffffffffffffffffffffffffffffffffffffff
0x8c8: V538 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x8c9: V539 = 0xffffffffffffffffffffffffffffffffffffffff
0x8de: V540 = AND 0xffffffffffffffffffffffffffffffffffffffff V538
0x8e0: M[0x0] = V540
0x8e1: V541 = 0x20
0x8e3: V542 = ADD 0x20 0x0
0x8e6: M[0x20] = 0x3
0x8e7: V543 = 0x20
0x8e9: V544 = ADD 0x20 0x20
0x8ea: V545 = 0x0
0x8ec: V546 = SHA3 0x0 0x40
0x8ef: S[V546] = S0
0x8f2: V547 = 0xffffffffffffffffffffffffffffffffffffffff
0x907: V548 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x909: V549 = 0xffffffffffffffffffffffffffffffffffffffff
0x91e: V550 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x91f: V551 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x941: V552 = 0x40
0x943: V553 = M[0x40]
0x947: M[V553] = S2
0x948: V554 = 0x20
0x94a: V555 = ADD 0x20 V553
0x94e: V556 = 0x40
0x950: V557 = M[0x40]
0x953: V558 = SUB V555 V557
0x955: LOG V557 V558 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V550 V548
0x956: V559 = 0x1
0x95f: JUMP S5
---
Entry stack: [V10, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [0x1]
Exit stack: [V10, S7, S6, 0x1]

================================

Block 0x960
[0x960:0x9b7]
---
Predecessors: [0x268]
Successors: [0x9b8, 0x9bc]
---
0x960 JUMPDEST
0x961 PUSH1 0x1
0x963 PUSH1 0x0
0x965 SWAP1
0x966 SLOAD
0x967 SWAP1
0x968 PUSH2 0x100
0x96b EXP
0x96c SWAP1
0x96d DIV
0x96e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x983 AND
0x984 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x999 AND
0x99a CALLER
0x99b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9b0 AND
0x9b1 EQ
0x9b2 ISZERO
0x9b3 ISZERO
0x9b4 PUSH2 0x9bc
0x9b7 JUMPI
---
0x960: JUMPDEST 
0x961: V560 = 0x1
0x963: V561 = 0x0
0x966: V562 = S[0x1]
0x968: V563 = 0x100
0x96b: V564 = EXP 0x100 0x0
0x96d: V565 = DIV V562 0x1
0x96e: V566 = 0xffffffffffffffffffffffffffffffffffffffff
0x983: V567 = AND 0xffffffffffffffffffffffffffffffffffffffff V565
0x984: V568 = 0xffffffffffffffffffffffffffffffffffffffff
0x999: V569 = AND 0xffffffffffffffffffffffffffffffffffffffff V567
0x99a: V570 = CALLER
0x99b: V571 = 0xffffffffffffffffffffffffffffffffffffffff
0x9b0: V572 = AND 0xffffffffffffffffffffffffffffffffffffffff V570
0x9b1: V573 = EQ V572 V569
0x9b2: V574 = ISZERO V573
0x9b3: V575 = ISZERO V574
0x9b4: V576 = 0x9bc
0x9b7: JUMPI 0x9bc V575
---
Entry stack: [V10, 0x270]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x270]

================================

Block 0x9b8
[0x9b8:0x9bb]
---
Predecessors: [0x960]
Successors: []
---
0x9b8 PUSH1 0x0
0x9ba DUP1
0x9bb REVERT
---
0x9b8: V577 = 0x0
0x9bb: REVERT 0x0 0x0
---
Entry stack: [V10, 0x270]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x270]

================================

Block 0x9bc
[0x9bc:0x9f6]
---
Predecessors: [0x960]
Successors: []
---
0x9bc JUMPDEST
0x9bd PUSH1 0x1
0x9bf PUSH1 0x0
0x9c1 SWAP1
0x9c2 SLOAD
0x9c3 SWAP1
0x9c4 PUSH2 0x100
0x9c7 EXP
0x9c8 SWAP1
0x9c9 DIV
0x9ca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9df AND
0x9e0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9f5 AND
0x9f6 SELFDESTRUCT
---
0x9bc: JUMPDEST 
0x9bd: V578 = 0x1
0x9bf: V579 = 0x0
0x9c2: V580 = S[0x1]
0x9c4: V581 = 0x100
0x9c7: V582 = EXP 0x100 0x0
0x9c9: V583 = DIV V580 0x1
0x9ca: V584 = 0xffffffffffffffffffffffffffffffffffffffff
0x9df: V585 = AND 0xffffffffffffffffffffffffffffffffffffffff V583
0x9e0: V586 = 0xffffffffffffffffffffffffffffffffffffffff
0x9f5: V587 = AND 0xffffffffffffffffffffffffffffffffffffffff V585
0x9f6: SELFDESTRUCT V587
---
Entry stack: [V10, 0x270]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x270]

================================

Block 0x9f7
[0x9f7:0x9fb]
---
Predecessors: [0x27d]
Successors: [0x285]
---
0x9f7 JUMPDEST
0x9f8 PUSH1 0x12
0x9fa DUP2
0x9fb JUMP
---
0x9f7: JUMPDEST 
0x9f8: V588 = 0x12
0x9fb: JUMP 0x285
---
Entry stack: [V10, 0x285]
Stack pops: 1
Stack additions: [S0, 0x12]
Exit stack: [V10, 0x285, 0x12]

================================

Block 0x9fc
[0x9fc:0xa53]
---
Predecessors: [0x2ac]
Successors: [0xa54, 0xa58]
---
0x9fc JUMPDEST
0x9fd PUSH1 0x1
0x9ff PUSH1 0x0
0xa01 SWAP1
0xa02 SLOAD
0xa03 SWAP1
0xa04 PUSH2 0x100
0xa07 EXP
0xa08 SWAP1
0xa09 DIV
0xa0a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa1f AND
0xa20 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa35 AND
0xa36 CALLER
0xa37 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa4c AND
0xa4d EQ
0xa4e ISZERO
0xa4f ISZERO
0xa50 PUSH2 0xa58
0xa53 JUMPI
---
0x9fc: JUMPDEST 
0x9fd: V589 = 0x1
0x9ff: V590 = 0x0
0xa02: V591 = S[0x1]
0xa04: V592 = 0x100
0xa07: V593 = EXP 0x100 0x0
0xa09: V594 = DIV V591 0x1
0xa0a: V595 = 0xffffffffffffffffffffffffffffffffffffffff
0xa1f: V596 = AND 0xffffffffffffffffffffffffffffffffffffffff V594
0xa20: V597 = 0xffffffffffffffffffffffffffffffffffffffff
0xa35: V598 = AND 0xffffffffffffffffffffffffffffffffffffffff V596
0xa36: V599 = CALLER
0xa37: V600 = 0xffffffffffffffffffffffffffffffffffffffff
0xa4c: V601 = AND 0xffffffffffffffffffffffffffffffffffffffff V599
0xa4d: V602 = EQ V601 V598
0xa4e: V603 = ISZERO V602
0xa4f: V604 = ISZERO V603
0xa50: V605 = 0xa58
0xa53: JUMPI 0xa58 V604
---
Entry stack: [V10, 0x2e1, V202, V205]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2e1, V202, V205]

================================

Block 0xa54
[0xa54:0xa57]
---
Predecessors: [0x9fc]
Successors: []
---
0xa54 PUSH1 0x0
0xa56 DUP1
0xa57 REVERT
---
0xa54: V606 = 0x0
0xa57: REVERT 0x0 0x0
---
Entry stack: [V10, 0x2e1, V202, V205]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2e1, V202, V205]

================================

Block 0xa58
[0xa58:0xa63]
---
Predecessors: [0x9fc]
Successors: [0x13ac]
---
0xa58 JUMPDEST
0xa59 PUSH2 0xa64
0xa5c PUSH1 0x2
0xa5e SLOAD
0xa5f DUP3
0xa60 PUSH2 0x13ac
0xa63 JUMP
---
0xa58: JUMPDEST 
0xa59: V607 = 0xa64
0xa5c: V608 = 0x2
0xa5e: V609 = S[0x2]
0xa60: V610 = 0x13ac
0xa63: JUMP 0x13ac
---
Entry stack: [V10, 0x2e1, V202, V205]
Stack pops: 1
Stack additions: [S0, 0xa64, V609, S0]
Exit stack: [V10, 0x2e1, V202, V205, 0xa64, V609, V205]

================================

Block 0xa64
[0xa64:0xab2]
---
Predecessors: [0x13c0]
Successors: [0x13ac]
---
0xa64 JUMPDEST
0xa65 PUSH1 0x2
0xa67 DUP2
0xa68 SWAP1
0xa69 SSTORE
0xa6a POP
0xa6b PUSH2 0xab3
0xa6e PUSH1 0x3
0xa70 PUSH1 0x0
0xa72 DUP5
0xa73 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa88 AND
0xa89 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa9e AND
0xa9f DUP2
0xaa0 MSTORE
0xaa1 PUSH1 0x20
0xaa3 ADD
0xaa4 SWAP1
0xaa5 DUP2
0xaa6 MSTORE
0xaa7 PUSH1 0x20
0xaa9 ADD
0xaaa PUSH1 0x0
0xaac SHA3
0xaad SLOAD
0xaae DUP3
0xaaf PUSH2 0x13ac
0xab2 JUMP
---
0xa64: JUMPDEST 
0xa65: V611 = 0x2
0xa69: S[0x2] = V1139
0xa6b: V612 = 0xab3
0xa6e: V613 = 0x3
0xa70: V614 = 0x0
0xa73: V615 = 0xffffffffffffffffffffffffffffffffffffffff
0xa88: V616 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xa89: V617 = 0xffffffffffffffffffffffffffffffffffffffff
0xa9e: V618 = AND 0xffffffffffffffffffffffffffffffffffffffff V616
0xaa0: M[0x0] = V618
0xaa1: V619 = 0x20
0xaa3: V620 = ADD 0x20 0x0
0xaa6: M[0x20] = 0x3
0xaa7: V621 = 0x20
0xaa9: V622 = ADD 0x20 0x20
0xaaa: V623 = 0x0
0xaac: V624 = SHA3 0x0 0x40
0xaad: V625 = S[V624]
0xaaf: V626 = 0x13ac
0xab2: JUMP 0x13ac
---
Entry stack: [V10, S7, S6, S5, S4, S3, S2, S1, V1139]
Stack pops: 3
Stack additions: [S2, S1, 0xab3, V625, S1]
Exit stack: [V10, S7, S6, S5, S4, S3, S2, S1, 0xab3, V625, S1]

================================

Block 0xab3
[0xab3:0xaf9]
---
Predecessors: [0x13c0]
Successors: [0x2e1]
---
0xab3 JUMPDEST
0xab4 PUSH1 0x3
0xab6 PUSH1 0x0
0xab8 DUP5
0xab9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xace AND
0xacf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xae4 AND
0xae5 DUP2
0xae6 MSTORE
0xae7 PUSH1 0x20
0xae9 ADD
0xaea SWAP1
0xaeb DUP2
0xaec MSTORE
0xaed PUSH1 0x20
0xaef ADD
0xaf0 PUSH1 0x0
0xaf2 SHA3
0xaf3 DUP2
0xaf4 SWAP1
0xaf5 SSTORE
0xaf6 POP
0xaf7 POP
0xaf8 POP
0xaf9 JUMP
---
0xab3: JUMPDEST 
0xab4: V627 = 0x3
0xab6: V628 = 0x0
0xab9: V629 = 0xffffffffffffffffffffffffffffffffffffffff
0xace: V630 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xacf: V631 = 0xffffffffffffffffffffffffffffffffffffffff
0xae4: V632 = AND 0xffffffffffffffffffffffffffffffffffffffff V630
0xae6: M[0x0] = V632
0xae7: V633 = 0x20
0xae9: V634 = ADD 0x20 0x0
0xaec: M[0x20] = 0x3
0xaed: V635 = 0x20
0xaef: V636 = ADD 0x20 0x20
0xaf0: V637 = 0x0
0xaf2: V638 = SHA3 0x0 0x40
0xaf5: S[V638] = V1139
0xaf9: JUMP S3
---
Entry stack: [V10, S7, S6, S5, S4, S3, S2, S1, V1139]
Stack pops: 4
Stack additions: []
Exit stack: [V10, S7, S6, S5, S4]

================================

Block 0xafa
[0xafa:0xb42]
---
Predecessors: [0x2ee]
Successors: [0x31a]
---
0xafa JUMPDEST
0xafb PUSH1 0x0
0xafd PUSH1 0x3
0xaff PUSH1 0x0
0xb01 DUP4
0xb02 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb17 AND
0xb18 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb2d AND
0xb2e DUP2
0xb2f MSTORE
0xb30 PUSH1 0x20
0xb32 ADD
0xb33 SWAP1
0xb34 DUP2
0xb35 MSTORE
0xb36 PUSH1 0x20
0xb38 ADD
0xb39 PUSH1 0x0
0xb3b SHA3
0xb3c SLOAD
0xb3d SWAP1
0xb3e POP
0xb3f SWAP2
0xb40 SWAP1
0xb41 POP
0xb42 JUMP
---
0xafa: JUMPDEST 
0xafb: V639 = 0x0
0xafd: V640 = 0x3
0xaff: V641 = 0x0
0xb02: V642 = 0xffffffffffffffffffffffffffffffffffffffff
0xb17: V643 = AND 0xffffffffffffffffffffffffffffffffffffffff V217
0xb18: V644 = 0xffffffffffffffffffffffffffffffffffffffff
0xb2d: V645 = AND 0xffffffffffffffffffffffffffffffffffffffff V643
0xb2f: M[0x0] = V645
0xb30: V646 = 0x20
0xb32: V647 = ADD 0x20 0x0
0xb35: M[0x20] = 0x3
0xb36: V648 = 0x20
0xb38: V649 = ADD 0x20 0x20
0xb39: V650 = 0x0
0xb3b: V651 = SHA3 0x0 0x40
0xb3c: V652 = S[V651]
0xb42: JUMP 0x31a
---
Entry stack: [V10, 0x31a, V217]
Stack pops: 2
Stack additions: [V652]
Exit stack: [V10, V652]

================================

Block 0xb43
[0xb43:0xb68]
---
Predecessors: [0x33b]
Successors: [0x343]
---
0xb43 JUMPDEST
0xb44 PUSH1 0x1
0xb46 PUSH1 0x0
0xb48 SWAP1
0xb49 SLOAD
0xb4a SWAP1
0xb4b PUSH2 0x100
0xb4e EXP
0xb4f SWAP1
0xb50 DIV
0xb51 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb66 AND
0xb67 DUP2
0xb68 JUMP
---
0xb43: JUMPDEST 
0xb44: V653 = 0x1
0xb46: V654 = 0x0
0xb49: V655 = S[0x1]
0xb4b: V656 = 0x100
0xb4e: V657 = EXP 0x100 0x0
0xb50: V658 = DIV V655 0x1
0xb51: V659 = 0xffffffffffffffffffffffffffffffffffffffff
0xb66: V660 = AND 0xffffffffffffffffffffffffffffffffffffffff V658
0xb68: JUMP 0x343
---
Entry stack: [V10, 0x343]
Stack pops: 1
Stack additions: [S0, V660]
Exit stack: [V10, 0x343, V660]

================================

Block 0xb69
[0xb69:0xba1]
---
Predecessors: [0x390]
Successors: [0x398]
---
0xb69 JUMPDEST
0xb6a PUSH1 0x40
0xb6c DUP1
0xb6d MLOAD
0xb6e SWAP1
0xb6f DUP2
0xb70 ADD
0xb71 PUSH1 0x40
0xb73 MSTORE
0xb74 DUP1
0xb75 PUSH1 0x7
0xb77 DUP2
0xb78 MSTORE
0xb79 PUSH1 0x20
0xb7b ADD
0xb7c PUSH32 0x313078414d494e00000000000000000000000000000000000000000000000000
0xb9d DUP2
0xb9e MSTORE
0xb9f POP
0xba0 DUP2
0xba1 JUMP
---
0xb69: JUMPDEST 
0xb6a: V661 = 0x40
0xb6d: V662 = M[0x40]
0xb70: V663 = ADD V662 0x40
0xb71: V664 = 0x40
0xb73: M[0x40] = V663
0xb75: V665 = 0x7
0xb78: M[V662] = 0x7
0xb79: V666 = 0x20
0xb7b: V667 = ADD 0x20 V662
0xb7c: V668 = 0x313078414d494e00000000000000000000000000000000000000000000000000
0xb9e: M[V667] = 0x313078414d494e00000000000000000000000000000000000000000000000000
0xba1: JUMP 0x398
---
Entry stack: [V10, 0x398]
Stack pops: 1
Stack additions: [S0, V662]
Exit stack: [V10, 0x398, V662]

================================

Block 0xba2
[0xba2:0xbf9]
---
Predecessors: [0x41e]
Successors: [0xbfa, 0xbfe]
---
0xba2 JUMPDEST
0xba3 PUSH1 0x1
0xba5 PUSH1 0x0
0xba7 SWAP1
0xba8 SLOAD
0xba9 SWAP1
0xbaa PUSH2 0x100
0xbad EXP
0xbae SWAP1
0xbaf DIV
0xbb0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbc5 AND
0xbc6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbdb AND
0xbdc CALLER
0xbdd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbf2 AND
0xbf3 EQ
0xbf4 ISZERO
0xbf5 ISZERO
0xbf6 PUSH2 0xbfe
0xbf9 JUMPI
---
0xba2: JUMPDEST 
0xba3: V669 = 0x1
0xba5: V670 = 0x0
0xba8: V671 = S[0x1]
0xbaa: V672 = 0x100
0xbad: V673 = EXP 0x100 0x0
0xbaf: V674 = DIV V671 0x1
0xbb0: V675 = 0xffffffffffffffffffffffffffffffffffffffff
0xbc5: V676 = AND 0xffffffffffffffffffffffffffffffffffffffff V674
0xbc6: V677 = 0xffffffffffffffffffffffffffffffffffffffff
0xbdb: V678 = AND 0xffffffffffffffffffffffffffffffffffffffff V676
0xbdc: V679 = CALLER
0xbdd: V680 = 0xffffffffffffffffffffffffffffffffffffffff
0xbf2: V681 = AND 0xffffffffffffffffffffffffffffffffffffffff V679
0xbf3: V682 = EQ V681 V678
0xbf4: V683 = ISZERO V682
0xbf5: V684 = ISZERO V683
0xbf6: V685 = 0xbfe
0xbf9: JUMPI 0xbfe V684
---
Entry stack: [V10, 0x44a, V300]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x44a, V300]

================================

Block 0xbfa
[0xbfa:0xbfd]
---
Predecessors: [0xba2]
Successors: []
---
0xbfa PUSH1 0x0
0xbfc DUP1
0xbfd REVERT
---
0xbfa: V686 = 0x0
0xbfd: REVERT 0x0 0x0
---
Entry stack: [V10, 0x44a, V300]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x44a, V300]

================================

Block 0xbfe
[0xbfe:0xc41]
---
Predecessors: [0xba2]
Successors: [0x44a]
---
0xbfe JUMPDEST
0xbff DUP1
0xc00 PUSH1 0x1
0xc02 PUSH1 0x0
0xc04 PUSH2 0x100
0xc07 EXP
0xc08 DUP2
0xc09 SLOAD
0xc0a DUP2
0xc0b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc20 MUL
0xc21 NOT
0xc22 AND
0xc23 SWAP1
0xc24 DUP4
0xc25 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc3a AND
0xc3b MUL
0xc3c OR
0xc3d SWAP1
0xc3e SSTORE
0xc3f POP
0xc40 POP
0xc41 JUMP
---
0xbfe: JUMPDEST 
0xc00: V687 = 0x1
0xc02: V688 = 0x0
0xc04: V689 = 0x100
0xc07: V690 = EXP 0x100 0x0
0xc09: V691 = S[0x1]
0xc0b: V692 = 0xffffffffffffffffffffffffffffffffffffffff
0xc20: V693 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xc21: V694 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xc22: V695 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V691
0xc25: V696 = 0xffffffffffffffffffffffffffffffffffffffff
0xc3a: V697 = AND 0xffffffffffffffffffffffffffffffffffffffff V300
0xc3b: V698 = MUL V697 0x1
0xc3c: V699 = OR V698 V695
0xc3e: S[0x1] = V699
0xc41: JUMP 0x44a
---
Entry stack: [V10, 0x44a, V300]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0xc42
[0xc42:0xc4c]
---
Predecessors: [0x457]
Successors: [0x1418]
---
0xc42 JUMPDEST
0xc43 PUSH1 0x0
0xc45 DUP1
0xc46 PUSH2 0xc4d
0xc49 PUSH2 0x1418
0xc4c JUMP
---
0xc42: JUMPDEST 
0xc43: V700 = 0x0
0xc46: V701 = 0xc4d
0xc49: V702 = 0x1418
0xc4c: JUMP 0x1418
---
Entry stack: [V10, 0x48c, V312, V315]
Stack pops: 0
Stack additions: [0x0, 0x0, 0xc4d]
Exit stack: [V10, 0x48c, V312, V315, 0x0, 0x0, 0xc4d]

================================

Block 0xc4d
[0xc4d:0xc9b]
---
Predecessors: [0x1418]
Successors: [0x1339]
---
0xc4d JUMPDEST
0xc4e PUSH1 0x0
0xc50 DUP6
0xc51 EXTCODESIZE
0xc52 SWAP3
0xc53 POP
0xc54 PUSH2 0xc9c
0xc57 PUSH1 0x3
0xc59 PUSH1 0x0
0xc5b CALLER
0xc5c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc71 AND
0xc72 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc87 AND
0xc88 DUP2
0xc89 MSTORE
0xc8a PUSH1 0x20
0xc8c ADD
0xc8d SWAP1
0xc8e DUP2
0xc8f MSTORE
0xc90 PUSH1 0x20
0xc92 ADD
0xc93 PUSH1 0x0
0xc95 SHA3
0xc96 SLOAD
0xc97 DUP7
0xc98 PUSH2 0x1339
0xc9b JUMP
---
0xc4d: JUMPDEST 
0xc4e: V703 = 0x0
0xc51: V704 = EXTCODESIZE V312
0xc54: V705 = 0xc9c
0xc57: V706 = 0x3
0xc59: V707 = 0x0
0xc5b: V708 = CALLER
0xc5c: V709 = 0xffffffffffffffffffffffffffffffffffffffff
0xc71: V710 = AND 0xffffffffffffffffffffffffffffffffffffffff V708
0xc72: V711 = 0xffffffffffffffffffffffffffffffffffffffff
0xc87: V712 = AND 0xffffffffffffffffffffffffffffffffffffffff V710
0xc89: M[0x0] = V712
0xc8a: V713 = 0x20
0xc8c: V714 = ADD 0x20 0x0
0xc8f: M[0x20] = 0x3
0xc90: V715 = 0x20
0xc92: V716 = ADD 0x20 0x20
0xc93: V717 = 0x0
0xc95: V718 = SHA3 0x0 0x40
0xc96: V719 = S[V718]
0xc98: V720 = 0x1339
0xc9b: JUMP 0x1339
---
Entry stack: [V10, 0x48c, V312, V315, 0x0, 0x0, V1165]
Stack pops: 5
Stack additions: [S4, S3, S2, V704, S0, 0x0, 0xc9c, V719, S3]
Exit stack: [V10, 0x48c, V312, V315, 0x0, V704, V1165, 0x0, 0xc9c, V719, V315]

================================

Block 0xc9c
[0xc9c:0xd2a]
---
Predecessors: [0x1347]
Successors: [0x1352]
---
0xc9c JUMPDEST
0xc9d PUSH1 0x3
0xc9f PUSH1 0x0
0xca1 CALLER
0xca2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcb7 AND
0xcb8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xccd AND
0xcce DUP2
0xccf MSTORE
0xcd0 PUSH1 0x20
0xcd2 ADD
0xcd3 SWAP1
0xcd4 DUP2
0xcd5 MSTORE
0xcd6 PUSH1 0x20
0xcd8 ADD
0xcd9 PUSH1 0x0
0xcdb SHA3
0xcdc DUP2
0xcdd SWAP1
0xcde SSTORE
0xcdf POP
0xce0 PUSH2 0xd30
0xce3 PUSH1 0x3
0xce5 PUSH1 0x0
0xce7 DUP9
0xce8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcfd AND
0xcfe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd13 AND
0xd14 DUP2
0xd15 MSTORE
0xd16 PUSH1 0x20
0xd18 ADD
0xd19 SWAP1
0xd1a DUP2
0xd1b MSTORE
0xd1c PUSH1 0x20
0xd1e ADD
0xd1f PUSH1 0x0
0xd21 SHA3
0xd22 SLOAD
0xd23 PUSH2 0xd2b
0xd26 DUP8
0xd27 PUSH2 0x1352
0xd2a JUMP
---
0xc9c: JUMPDEST 
0xc9d: V721 = 0x3
0xc9f: V722 = 0x0
0xca1: V723 = CALLER
0xca2: V724 = 0xffffffffffffffffffffffffffffffffffffffff
0xcb7: V725 = AND 0xffffffffffffffffffffffffffffffffffffffff V723
0xcb8: V726 = 0xffffffffffffffffffffffffffffffffffffffff
0xccd: V727 = AND 0xffffffffffffffffffffffffffffffffffffffff V725
0xccf: M[0x0] = V727
0xcd0: V728 = 0x20
0xcd2: V729 = ADD 0x20 0x0
0xcd5: M[0x20] = 0x3
0xcd6: V730 = 0x20
0xcd8: V731 = ADD 0x20 0x20
0xcd9: V732 = 0x0
0xcdb: V733 = SHA3 0x0 0x40
0xcde: S[V733] = V1109
0xce0: V734 = 0xd30
0xce3: V735 = 0x3
0xce5: V736 = 0x0
0xce8: V737 = 0xffffffffffffffffffffffffffffffffffffffff
0xcfd: V738 = AND 0xffffffffffffffffffffffffffffffffffffffff S6
0xcfe: V739 = 0xffffffffffffffffffffffffffffffffffffffff
0xd13: V740 = AND 0xffffffffffffffffffffffffffffffffffffffff V738
0xd15: M[0x0] = V740
0xd16: V741 = 0x20
0xd18: V742 = ADD 0x20 0x0
0xd1b: M[0x20] = 0x3
0xd1c: V743 = 0x20
0xd1e: V744 = ADD 0x20 0x20
0xd1f: V745 = 0x0
0xd21: V746 = SHA3 0x0 0x40
0xd22: V747 = S[V746]
0xd23: V748 = 0xd2b
0xd27: V749 = 0x1352
0xd2a: JUMP 0x1352
---
Entry stack: [V10, S7, S6, S5, S4, S3, S2, 0x0, V1109]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, 0xd30, V747, 0xd2b, S5]
Exit stack: [V10, S7, S6, S5, S4, S3, S2, 0x0, 0xd30, V747, 0xd2b, S5]

================================

Block 0xd2b
[0xd2b:0xd2f]
---
Predecessors: [0x13a6]
Successors: [0x13ac]
---
0xd2b JUMPDEST
0xd2c PUSH2 0x13ac
0xd2f JUMP
---
0xd2b: JUMPDEST 
0xd2c: V750 = 0x13ac
0xd2f: JUMP 0x13ac
---
Entry stack: [V10, S9, S8, S7, S6, S5, S4, 0x0, {0x8ad, 0xd30, 0x1066}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S9, S8, S7, S6, S5, S4, 0x0, {0x8ad, 0xd30, 0x1066}, S1, S0]

================================

Block 0xd30
[0xd30:0xd7c]
---
Predecessors: [0x13c0]
Successors: [0xd7d, 0xea3]
---
0xd30 JUMPDEST
0xd31 PUSH1 0x3
0xd33 PUSH1 0x0
0xd35 DUP9
0xd36 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd4b AND
0xd4c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd61 AND
0xd62 DUP2
0xd63 MSTORE
0xd64 PUSH1 0x20
0xd66 ADD
0xd67 SWAP1
0xd68 DUP2
0xd69 MSTORE
0xd6a PUSH1 0x20
0xd6c ADD
0xd6d PUSH1 0x0
0xd6f SHA3
0xd70 DUP2
0xd71 SWAP1
0xd72 SSTORE
0xd73 POP
0xd74 PUSH1 0x0
0xd76 DUP4
0xd77 GT
0xd78 ISZERO
0xd79 PUSH2 0xea3
0xd7c JUMPI
---
0xd30: JUMPDEST 
0xd31: V751 = 0x3
0xd33: V752 = 0x0
0xd36: V753 = 0xffffffffffffffffffffffffffffffffffffffff
0xd4b: V754 = AND 0xffffffffffffffffffffffffffffffffffffffff S6
0xd4c: V755 = 0xffffffffffffffffffffffffffffffffffffffff
0xd61: V756 = AND 0xffffffffffffffffffffffffffffffffffffffff V754
0xd63: M[0x0] = V756
0xd64: V757 = 0x20
0xd66: V758 = ADD 0x20 0x0
0xd69: M[0x20] = 0x3
0xd6a: V759 = 0x20
0xd6c: V760 = ADD 0x20 0x20
0xd6d: V761 = 0x0
0xd6f: V762 = SHA3 0x0 0x40
0xd72: S[V762] = S0
0xd74: V763 = 0x0
0xd77: V764 = GT S3 0x0
0xd78: V765 = ISZERO V764
0xd79: V766 = 0xea3
0xd7c: JUMPI 0xea3 V765
---
Entry stack: [V10, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1]
Exit stack: [V10, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0xd7d
[0xd7d:0xe25]
---
Predecessors: [0xd30]
Successors: [0xe26]
---
0xd7d DUP6
0xd7e SWAP1
0xd7f POP
0xd80 DUP1
0xd81 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd96 AND
0xd97 PUSH4 0xc0ee0b8a
0xd9c CALLER
0xd9d DUP8
0xd9e DUP6
0xd9f PUSH1 0x40
0xda1 MLOAD
0xda2 DUP5
0xda3 PUSH4 0xffffffff
0xda8 AND
0xda9 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xdc7 MUL
0xdc8 DUP2
0xdc9 MSTORE
0xdca PUSH1 0x4
0xdcc ADD
0xdcd DUP1
0xdce DUP5
0xdcf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xde4 AND
0xde5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdfa AND
0xdfb DUP2
0xdfc MSTORE
0xdfd PUSH1 0x20
0xdff ADD
0xe00 DUP4
0xe01 DUP2
0xe02 MSTORE
0xe03 PUSH1 0x20
0xe05 ADD
0xe06 DUP1
0xe07 PUSH1 0x20
0xe09 ADD
0xe0a DUP3
0xe0b DUP2
0xe0c SUB
0xe0d DUP3
0xe0e MSTORE
0xe0f DUP4
0xe10 DUP2
0xe11 DUP2
0xe12 MLOAD
0xe13 DUP2
0xe14 MSTORE
0xe15 PUSH1 0x20
0xe17 ADD
0xe18 SWAP2
0xe19 POP
0xe1a DUP1
0xe1b MLOAD
0xe1c SWAP1
0xe1d PUSH1 0x20
0xe1f ADD
0xe20 SWAP1
0xe21 DUP1
0xe22 DUP4
0xe23 DUP4
0xe24 PUSH1 0x0
---
0xd81: V767 = 0xffffffffffffffffffffffffffffffffffffffff
0xd96: V768 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0xd97: V769 = 0xc0ee0b8a
0xd9c: V770 = CALLER
0xd9f: V771 = 0x40
0xda1: V772 = M[0x40]
0xda3: V773 = 0xffffffff
0xda8: V774 = AND 0xffffffff 0xc0ee0b8a
0xda9: V775 = 0x100000000000000000000000000000000000000000000000000000000
0xdc7: V776 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xc0ee0b8a
0xdc9: M[V772] = 0xc0ee0b8a00000000000000000000000000000000000000000000000000000000
0xdca: V777 = 0x4
0xdcc: V778 = ADD 0x4 V772
0xdcf: V779 = 0xffffffffffffffffffffffffffffffffffffffff
0xde4: V780 = AND 0xffffffffffffffffffffffffffffffffffffffff V770
0xde5: V781 = 0xffffffffffffffffffffffffffffffffffffffff
0xdfa: V782 = AND 0xffffffffffffffffffffffffffffffffffffffff V780
0xdfc: M[V778] = V782
0xdfd: V783 = 0x20
0xdff: V784 = ADD 0x20 V778
0xe02: M[V784] = S4
0xe03: V785 = 0x20
0xe05: V786 = ADD 0x20 V784
0xe07: V787 = 0x20
0xe09: V788 = ADD 0x20 V786
0xe0c: V789 = SUB V788 V778
0xe0e: M[V786] = V789
0xe12: V790 = M[S1]
0xe14: M[V788] = V790
0xe15: V791 = 0x20
0xe17: V792 = ADD 0x20 V788
0xe1b: V793 = M[S1]
0xe1d: V794 = 0x20
0xe1f: V795 = ADD 0x20 S1
0xe24: V796 = 0x0
---
Entry stack: [V10, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S5, V768, 0xc0ee0b8a, V770, S4, S1, V778, V786, V792, V795, V793, V793, V792, V795, 0x0]
Exit stack: [V10, S6, S5, S4, S3, S2, S1, S5, V768, 0xc0ee0b8a, V770, S4, S1, V778, V786, V792, V795, V793, V793, V792, V795, 0x0]

================================

Block 0xe26
[0xe26:0xe2e]
---
Predecessors: [0xd7d, 0xe2f]
Successors: [0xe2f, 0xe41]
---
0xe26 JUMPDEST
0xe27 DUP4
0xe28 DUP2
0xe29 LT
0xe2a ISZERO
0xe2b PUSH2 0xe41
0xe2e JUMPI
---
0xe26: JUMPDEST 
0xe29: V797 = LT S0 V793
0xe2a: V798 = ISZERO V797
0xe2b: V799 = 0xe41
0xe2e: JUMPI 0xe41 V798
---
Entry stack: [V10, S20, S19, S18, S17, S16, S15, S14, V768, 0xc0ee0b8a, V770, S10, S9, V778, V786, V792, V795, V793, V793, V792, V795, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, S20, S19, S18, S17, S16, S15, S14, V768, 0xc0ee0b8a, V770, S10, S9, V778, V786, V792, V795, V793, V793, V792, V795, S0]

================================

Block 0xe2f
[0xe2f:0xe40]
---
Predecessors: [0xe26]
Successors: [0xe26]
---
0xe2f DUP1
0xe30 DUP3
0xe31 ADD
0xe32 MLOAD
0xe33 DUP2
0xe34 DUP5
0xe35 ADD
0xe36 MSTORE
0xe37 PUSH1 0x20
0xe39 DUP2
0xe3a ADD
0xe3b SWAP1
0xe3c POP
0xe3d PUSH2 0xe26
0xe40 JUMP
---
0xe31: V800 = ADD V795 S0
0xe32: V801 = M[V800]
0xe35: V802 = ADD V792 S0
0xe36: M[V802] = V801
0xe37: V803 = 0x20
0xe3a: V804 = ADD S0 0x20
0xe3d: V805 = 0xe26
0xe40: JUMP 0xe26
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, V768, 0xc0ee0b8a, V770, S10, S9, V778, V786, V792, V795, V793, V793, V792, V795, S0]
Stack pops: 3
Stack additions: [S2, S1, V804]
Exit stack: [S20, S19, S18, S17, S16, S15, S14, V768, 0xc0ee0b8a, V770, S10, S9, V778, V786, V792, V795, V793, V793, V792, V795, V804]

================================

Block 0xe41
[0xe41:0xe54]
---
Predecessors: [0xe26]
Successors: [0xe55, 0xe6e]
---
0xe41 JUMPDEST
0xe42 POP
0xe43 POP
0xe44 POP
0xe45 POP
0xe46 SWAP1
0xe47 POP
0xe48 SWAP1
0xe49 DUP2
0xe4a ADD
0xe4b SWAP1
0xe4c PUSH1 0x1f
0xe4e AND
0xe4f DUP1
0xe50 ISZERO
0xe51 PUSH2 0xe6e
0xe54 JUMPI
---
0xe41: JUMPDEST 
0xe4a: V806 = ADD V793 V792
0xe4c: V807 = 0x1f
0xe4e: V808 = AND 0x1f V793
0xe50: V809 = ISZERO V808
0xe51: V810 = 0xe6e
0xe54: JUMPI 0xe6e V809
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, V768, 0xc0ee0b8a, V770, S10, S9, V778, V786, V792, V795, V793, V793, V792, V795, S0]
Stack pops: 7
Stack additions: [V806, V808]
Exit stack: [S20, S19, S18, S17, S16, S15, S14, V768, 0xc0ee0b8a, V770, S10, S9, V778, V786, V806, V808]

================================

Block 0xe55
[0xe55:0xe6d]
---
Predecessors: [0xe41]
Successors: [0xe6e]
---
0xe55 DUP1
0xe56 DUP3
0xe57 SUB
0xe58 DUP1
0xe59 MLOAD
0xe5a PUSH1 0x1
0xe5c DUP4
0xe5d PUSH1 0x20
0xe5f SUB
0xe60 PUSH2 0x100
0xe63 EXP
0xe64 SUB
0xe65 NOT
0xe66 AND
0xe67 DUP2
0xe68 MSTORE
0xe69 PUSH1 0x20
0xe6b ADD
0xe6c SWAP2
0xe6d POP
---
0xe57: V811 = SUB V806 V808
0xe59: V812 = M[V811]
0xe5a: V813 = 0x1
0xe5d: V814 = 0x20
0xe5f: V815 = SUB 0x20 V808
0xe60: V816 = 0x100
0xe63: V817 = EXP 0x100 V815
0xe64: V818 = SUB V817 0x1
0xe65: V819 = NOT V818
0xe66: V820 = AND V819 V812
0xe68: M[V811] = V820
0xe69: V821 = 0x20
0xe6b: V822 = ADD 0x20 V811
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, V768, 0xc0ee0b8a, V770, S5, S4, V778, V786, V806, V808]
Stack pops: 2
Stack additions: [V822, S0]
Exit stack: [S15, S14, S13, S12, S11, S10, S9, V768, 0xc0ee0b8a, V770, S5, S4, V778, V786, V822, V808]

================================

Block 0xe6e
[0xe6e:0xe89]
---
Predecessors: [0xe41, 0xe55]
Successors: [0xe8a, 0xe8e]
---
0xe6e JUMPDEST
0xe6f POP
0xe70 SWAP5
0xe71 POP
0xe72 POP
0xe73 POP
0xe74 POP
0xe75 POP
0xe76 PUSH1 0x0
0xe78 PUSH1 0x40
0xe7a MLOAD
0xe7b DUP1
0xe7c DUP4
0xe7d SUB
0xe7e DUP2
0xe7f PUSH1 0x0
0xe81 DUP8
0xe82 DUP1
0xe83 EXTCODESIZE
0xe84 ISZERO
0xe85 ISZERO
0xe86 PUSH2 0xe8e
0xe89 JUMPI
---
0xe6e: JUMPDEST 
0xe76: V823 = 0x0
0xe78: V824 = 0x40
0xe7a: V825 = M[0x40]
0xe7d: V826 = SUB S1 V825
0xe7f: V827 = 0x0
0xe83: V828 = EXTCODESIZE V768
0xe84: V829 = ISZERO V828
0xe85: V830 = ISZERO V829
0xe86: V831 = 0xe8e
0xe89: JUMPI 0xe8e V830
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, V768, 0xc0ee0b8a, V770, S5, S4, V778, V786, S1, V808]
Stack pops: 9
Stack additions: [S8, S7, S1, 0x0, V825, V826, V825, 0x0, S8]
Exit stack: [S15, S14, S13, S12, S11, S10, S9, V768, 0xc0ee0b8a, S1, 0x0, V825, V826, V825, 0x0, V768]

================================

Block 0xe8a
[0xe8a:0xe8d]
---
Predecessors: [0xe6e]
Successors: []
---
0xe8a PUSH1 0x0
0xe8c DUP1
0xe8d REVERT
---
0xe8a: V832 = 0x0
0xe8d: REVERT 0x0 0x0
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, V768, 0xc0ee0b8a, S6, 0x0, V825, V826, V825, 0x0, V768]
Stack pops: 0
Stack additions: []
Exit stack: [S15, S14, S13, S12, S11, S10, S9, V768, 0xc0ee0b8a, S6, 0x0, V825, V826, V825, 0x0, V768]

================================

Block 0xe8e
[0xe8e:0xe9a]
---
Predecessors: [0xe6e]
Successors: [0xe9b, 0xe9f]
---
0xe8e JUMPDEST
0xe8f PUSH2 0x2c6
0xe92 GAS
0xe93 SUB
0xe94 CALL
0xe95 ISZERO
0xe96 ISZERO
0xe97 PUSH2 0xe9f
0xe9a JUMPI
---
0xe8e: JUMPDEST 
0xe8f: V833 = 0x2c6
0xe92: V834 = GAS
0xe93: V835 = SUB V834 0x2c6
0xe94: V836 = CALL V835 V768 0x0 V825 V826 V825 0x0
0xe95: V837 = ISZERO V836
0xe96: V838 = ISZERO V837
0xe97: V839 = 0xe9f
0xe9a: JUMPI 0xe9f V838
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, V768, 0xc0ee0b8a, S6, 0x0, V825, V826, V825, 0x0, V768]
Stack pops: 6
Stack additions: []
Exit stack: [S15, S14, S13, S12, S11, S10, S9, V768, 0xc0ee0b8a, S6]

================================

Block 0xe9b
[0xe9b:0xe9e]
---
Predecessors: [0xe8e]
Successors: []
---
0xe9b PUSH1 0x0
0xe9d DUP1
0xe9e REVERT
---
0xe9b: V840 = 0x0
0xe9e: REVERT 0x0 0x0
---
Entry stack: [S9, S8, S7, S6, S5, S4, S3, V768, 0xc0ee0b8a, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S9, S8, S7, S6, S5, S4, S3, V768, 0xc0ee0b8a, S0]

================================

Block 0xe9f
[0xe9f:0xea2]
---
Predecessors: [0xe8e]
Successors: [0xea3]
---
0xe9f JUMPDEST
0xea0 POP
0xea1 POP
0xea2 POP
---
0xe9f: JUMPDEST 
---
Entry stack: [S9, S8, S7, S6, S5, S4, S3, V768, 0xc0ee0b8a, S0]
Stack pops: 3
Stack additions: []
Exit stack: [S9, S8, S7, S6, S5, S4, S3]

================================

Block 0xea3
[0xea3:0xf1e]
---
Predecessors: [0xd30, 0xe9f]
Successors: [0xf1f]
---
0xea3 JUMPDEST
0xea4 DUP6
0xea5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xeba AND
0xebb CALLER
0xebc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xed1 AND
0xed2 PUSH32 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16
0xef3 DUP8
0xef4 DUP6
0xef5 PUSH1 0x40
0xef7 MLOAD
0xef8 DUP1
0xef9 DUP4
0xefa DUP2
0xefb MSTORE
0xefc PUSH1 0x20
0xefe ADD
0xeff DUP1
0xf00 PUSH1 0x20
0xf02 ADD
0xf03 DUP3
0xf04 DUP2
0xf05 SUB
0xf06 DUP3
0xf07 MSTORE
0xf08 DUP4
0xf09 DUP2
0xf0a DUP2
0xf0b MLOAD
0xf0c DUP2
0xf0d MSTORE
0xf0e PUSH1 0x20
0xf10 ADD
0xf11 SWAP2
0xf12 POP
0xf13 DUP1
0xf14 MLOAD
0xf15 SWAP1
0xf16 PUSH1 0x20
0xf18 ADD
0xf19 SWAP1
0xf1a DUP1
0xf1b DUP4
0xf1c DUP4
0xf1d PUSH1 0x0
---
0xea3: JUMPDEST 
0xea5: V841 = 0xffffffffffffffffffffffffffffffffffffffff
0xeba: V842 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0xebb: V843 = CALLER
0xebc: V844 = 0xffffffffffffffffffffffffffffffffffffffff
0xed1: V845 = AND 0xffffffffffffffffffffffffffffffffffffffff V843
0xed2: V846 = 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16
0xef5: V847 = 0x40
0xef7: V848 = M[0x40]
0xefb: M[V848] = S4
0xefc: V849 = 0x20
0xefe: V850 = ADD 0x20 V848
0xf00: V851 = 0x20
0xf02: V852 = ADD 0x20 V850
0xf05: V853 = SUB V852 V848
0xf07: M[V850] = V853
0xf0b: V854 = M[S1]
0xf0d: M[V852] = V854
0xf0e: V855 = 0x20
0xf10: V856 = ADD 0x20 V852
0xf14: V857 = M[S1]
0xf16: V858 = 0x20
0xf18: V859 = ADD 0x20 S1
0xf1d: V860 = 0x0
---
Entry stack: [V10, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, V842, V845, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S4, S1, V848, V850, V856, V859, V857, V857, V856, V859, 0x0]
Exit stack: [V10, S6, S5, S4, S3, S2, S1, S0, V842, V845, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S4, S1, V848, V850, V856, V859, V857, V857, V856, V859, 0x0]

================================

Block 0xf1f
[0xf1f:0xf27]
---
Predecessors: [0xea3, 0xf28]
Successors: [0xf28, 0xf3a]
---
0xf1f JUMPDEST
0xf20 DUP4
0xf21 DUP2
0xf22 LT
0xf23 ISZERO
0xf24 PUSH2 0xf3a
0xf27 JUMPI
---
0xf1f: JUMPDEST 
0xf22: V861 = LT S0 V857
0xf23: V862 = ISZERO V861
0xf24: V863 = 0xf3a
0xf27: JUMPI 0xf3a V862
---
Entry stack: [V10, S20, S19, S18, S17, S16, S15, S14, V842, V845, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S10, S9, V848, V850, V856, V859, V857, V857, V856, V859, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, S20, S19, S18, S17, S16, S15, S14, V842, V845, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S10, S9, V848, V850, V856, V859, V857, V857, V856, V859, S0]

================================

Block 0xf28
[0xf28:0xf39]
---
Predecessors: [0xf1f]
Successors: [0xf1f]
---
0xf28 DUP1
0xf29 DUP3
0xf2a ADD
0xf2b MLOAD
0xf2c DUP2
0xf2d DUP5
0xf2e ADD
0xf2f MSTORE
0xf30 PUSH1 0x20
0xf32 DUP2
0xf33 ADD
0xf34 SWAP1
0xf35 POP
0xf36 PUSH2 0xf1f
0xf39 JUMP
---
0xf2a: V864 = ADD V859 S0
0xf2b: V865 = M[V864]
0xf2e: V866 = ADD V856 S0
0xf2f: M[V866] = V865
0xf30: V867 = 0x20
0xf33: V868 = ADD S0 0x20
0xf36: V869 = 0xf1f
0xf39: JUMP 0xf1f
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, V842, V845, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S10, S9, V848, V850, V856, V859, V857, V857, V856, V859, S0]
Stack pops: 3
Stack additions: [S2, S1, V868]
Exit stack: [S20, S19, S18, S17, S16, S15, S14, V842, V845, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S10, S9, V848, V850, V856, V859, V857, V857, V856, V859, V868]

================================

Block 0xf3a
[0xf3a:0xf4d]
---
Predecessors: [0xf1f]
Successors: [0xf4e, 0xf67]
---
0xf3a JUMPDEST
0xf3b POP
0xf3c POP
0xf3d POP
0xf3e POP
0xf3f SWAP1
0xf40 POP
0xf41 SWAP1
0xf42 DUP2
0xf43 ADD
0xf44 SWAP1
0xf45 PUSH1 0x1f
0xf47 AND
0xf48 DUP1
0xf49 ISZERO
0xf4a PUSH2 0xf67
0xf4d JUMPI
---
0xf3a: JUMPDEST 
0xf43: V870 = ADD V857 V856
0xf45: V871 = 0x1f
0xf47: V872 = AND 0x1f V857
0xf49: V873 = ISZERO V872
0xf4a: V874 = 0xf67
0xf4d: JUMPI 0xf67 V873
---
Entry stack: [V10, S20, S19, S18, S17, S16, S15, S14, V842, V845, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S10, S9, V848, V850, V856, V859, V857, V857, V856, V859, S0]
Stack pops: 7
Stack additions: [V870, V872]
Exit stack: [V10, S20, S19, S18, S17, S16, S15, S14, V842, V845, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S10, S9, V848, V850, V870, V872]

================================

Block 0xf4e
[0xf4e:0xf66]
---
Predecessors: [0xf3a]
Successors: [0xf67]
---
0xf4e DUP1
0xf4f DUP3
0xf50 SUB
0xf51 DUP1
0xf52 MLOAD
0xf53 PUSH1 0x1
0xf55 DUP4
0xf56 PUSH1 0x20
0xf58 SUB
0xf59 PUSH2 0x100
0xf5c EXP
0xf5d SUB
0xf5e NOT
0xf5f AND
0xf60 DUP2
0xf61 MSTORE
0xf62 PUSH1 0x20
0xf64 ADD
0xf65 SWAP2
0xf66 POP
---
0xf50: V875 = SUB V870 V872
0xf52: V876 = M[V875]
0xf53: V877 = 0x1
0xf56: V878 = 0x20
0xf58: V879 = SUB 0x20 V872
0xf59: V880 = 0x100
0xf5c: V881 = EXP 0x100 V879
0xf5d: V882 = SUB V881 0x1
0xf5e: V883 = NOT V882
0xf5f: V884 = AND V883 V876
0xf61: M[V875] = V884
0xf62: V885 = 0x20
0xf64: V886 = ADD 0x20 V875
---
Entry stack: [V10, S15, S14, S13, S12, S11, S10, S9, V842, V845, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S5, S4, V848, V850, V870, V872]
Stack pops: 2
Stack additions: [V886, S0]
Exit stack: [V10, S15, S14, S13, S12, S11, S10, S9, V842, V845, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S5, S4, V848, V850, V886, V872]

================================

Block 0xf67
[0xf67:0xf81]
---
Predecessors: [0xf3a, 0xf4e]
Successors: [0x48c]
---
0xf67 JUMPDEST
0xf68 POP
0xf69 SWAP4
0xf6a POP
0xf6b POP
0xf6c POP
0xf6d POP
0xf6e PUSH1 0x40
0xf70 MLOAD
0xf71 DUP1
0xf72 SWAP2
0xf73 SUB
0xf74 SWAP1
0xf75 LOG3
0xf76 PUSH1 0x1
0xf78 SWAP4
0xf79 POP
0xf7a POP
0xf7b POP
0xf7c POP
0xf7d SWAP3
0xf7e SWAP2
0xf7f POP
0xf80 POP
0xf81 JUMP
---
0xf67: JUMPDEST 
0xf6e: V887 = 0x40
0xf70: V888 = M[0x40]
0xf73: V889 = SUB S1 V888
0xf75: LOG V888 V889 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16 V845 V842
0xf76: V890 = 0x1
0xf81: JUMP S15
---
Entry stack: [V10, S15, S14, S13, S12, S11, S10, S9, V842, V845, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S5, S4, V848, V850, S1, V872]
Stack pops: 16
Stack additions: [0x1]
Exit stack: [V10, 0x1]

================================

Block 0xf82
[0xf82:0xfd1]
---
Predecessors: [0x4b1]
Successors: [0x1339]
---
0xf82 JUMPDEST
0xf83 PUSH1 0x0
0xf85 DUP1
0xf86 DUP5
0xf87 EXTCODESIZE
0xf88 SWAP2
0xf89 POP
0xf8a PUSH2 0xfd2
0xf8d PUSH1 0x3
0xf8f PUSH1 0x0
0xf91 CALLER
0xf92 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfa7 AND
0xfa8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfbd AND
0xfbe DUP2
0xfbf MSTORE
0xfc0 PUSH1 0x20
0xfc2 ADD
0xfc3 SWAP1
0xfc4 DUP2
0xfc5 MSTORE
0xfc6 PUSH1 0x20
0xfc8 ADD
0xfc9 PUSH1 0x0
0xfcb SHA3
0xfcc SLOAD
0xfcd DUP6
0xfce PUSH2 0x1339
0xfd1 JUMP
---
0xf82: JUMPDEST 
0xf83: V891 = 0x0
0xf87: V892 = EXTCODESIZE V338
0xf8a: V893 = 0xfd2
0xf8d: V894 = 0x3
0xf8f: V895 = 0x0
0xf91: V896 = CALLER
0xf92: V897 = 0xffffffffffffffffffffffffffffffffffffffff
0xfa7: V898 = AND 0xffffffffffffffffffffffffffffffffffffffff V896
0xfa8: V899 = 0xffffffffffffffffffffffffffffffffffffffff
0xfbd: V900 = AND 0xffffffffffffffffffffffffffffffffffffffff V898
0xfbf: M[0x0] = V900
0xfc0: V901 = 0x20
0xfc2: V902 = ADD 0x20 0x0
0xfc5: M[0x20] = 0x3
0xfc6: V903 = 0x20
0xfc8: V904 = ADD 0x20 0x20
0xfc9: V905 = 0x0
0xfcb: V906 = SHA3 0x0 0x40
0xfcc: V907 = S[V906]
0xfce: V908 = 0x1339
0xfd1: JUMP 0x1339
---
Entry stack: [V10, 0x529, V338, V341, V359]
Stack pops: 3
Stack additions: [S2, S1, S0, V892, 0x0, 0xfd2, V907, S1]
Exit stack: [V10, 0x529, V338, V341, V359, V892, 0x0, 0xfd2, V907, V341]

================================

Block 0xfd2
[0xfd2:0x1060]
---
Predecessors: [0x1347]
Successors: [0x1352]
---
0xfd2 JUMPDEST
0xfd3 PUSH1 0x3
0xfd5 PUSH1 0x0
0xfd7 CALLER
0xfd8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfed AND
0xfee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1003 AND
0x1004 DUP2
0x1005 MSTORE
0x1006 PUSH1 0x20
0x1008 ADD
0x1009 SWAP1
0x100a DUP2
0x100b MSTORE
0x100c PUSH1 0x20
0x100e ADD
0x100f PUSH1 0x0
0x1011 SHA3
0x1012 DUP2
0x1013 SWAP1
0x1014 SSTORE
0x1015 POP
0x1016 PUSH2 0x1066
0x1019 PUSH1 0x3
0x101b PUSH1 0x0
0x101d DUP8
0x101e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1033 AND
0x1034 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1049 AND
0x104a DUP2
0x104b MSTORE
0x104c PUSH1 0x20
0x104e ADD
0x104f SWAP1
0x1050 DUP2
0x1051 MSTORE
0x1052 PUSH1 0x20
0x1054 ADD
0x1055 PUSH1 0x0
0x1057 SHA3
0x1058 SLOAD
0x1059 PUSH2 0x1061
0x105c DUP7
0x105d PUSH2 0x1352
0x1060 JUMP
---
0xfd2: JUMPDEST 
0xfd3: V909 = 0x3
0xfd5: V910 = 0x0
0xfd7: V911 = CALLER
0xfd8: V912 = 0xffffffffffffffffffffffffffffffffffffffff
0xfed: V913 = AND 0xffffffffffffffffffffffffffffffffffffffff V911
0xfee: V914 = 0xffffffffffffffffffffffffffffffffffffffff
0x1003: V915 = AND 0xffffffffffffffffffffffffffffffffffffffff V913
0x1005: M[0x0] = V915
0x1006: V916 = 0x20
0x1008: V917 = ADD 0x20 0x0
0x100b: M[0x20] = 0x3
0x100c: V918 = 0x20
0x100e: V919 = ADD 0x20 0x20
0x100f: V920 = 0x0
0x1011: V921 = SHA3 0x0 0x40
0x1014: S[V921] = V1109
0x1016: V922 = 0x1066
0x1019: V923 = 0x3
0x101b: V924 = 0x0
0x101e: V925 = 0xffffffffffffffffffffffffffffffffffffffff
0x1033: V926 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x1034: V927 = 0xffffffffffffffffffffffffffffffffffffffff
0x1049: V928 = AND 0xffffffffffffffffffffffffffffffffffffffff V926
0x104b: M[0x0] = V928
0x104c: V929 = 0x20
0x104e: V930 = ADD 0x20 0x0
0x1051: M[0x20] = 0x3
0x1052: V931 = 0x20
0x1054: V932 = ADD 0x20 0x20
0x1055: V933 = 0x0
0x1057: V934 = SHA3 0x0 0x40
0x1058: V935 = S[V934]
0x1059: V936 = 0x1061
0x105d: V937 = 0x1352
0x1060: JUMP 0x1352
---
Entry stack: [V10, S7, S6, S5, S4, S3, S2, 0x0, V1109]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, 0x1066, V935, 0x1061, S4]
Exit stack: [V10, S7, S6, S5, S4, S3, S2, 0x0, 0x1066, V935, 0x1061, S4]

================================

Block 0x1061
[0x1061:0x1065]
---
Predecessors: [0x13a6]
Successors: [0x13ac]
---
0x1061 JUMPDEST
0x1062 PUSH2 0x13ac
0x1065 JUMP
---
0x1061: JUMPDEST 
0x1062: V938 = 0x13ac
0x1065: JUMP 0x13ac
---
Entry stack: [V10, S9, S8, S7, S6, S5, S4, 0x0, {0x8ad, 0xd30, 0x1066}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S9, S8, S7, S6, S5, S4, 0x0, {0x8ad, 0xd30, 0x1066}, S1, S0]

================================

Block 0x1066
[0x1066:0x10b2]
---
Predecessors: [0x13c0]
Successors: [0x10b3, 0x11d9]
---
0x1066 JUMPDEST
0x1067 PUSH1 0x3
0x1069 PUSH1 0x0
0x106b DUP8
0x106c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1081 AND
0x1082 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1097 AND
0x1098 DUP2
0x1099 MSTORE
0x109a PUSH1 0x20
0x109c ADD
0x109d SWAP1
0x109e DUP2
0x109f MSTORE
0x10a0 PUSH1 0x20
0x10a2 ADD
0x10a3 PUSH1 0x0
0x10a5 SHA3
0x10a6 DUP2
0x10a7 SWAP1
0x10a8 SSTORE
0x10a9 POP
0x10aa PUSH1 0x0
0x10ac DUP3
0x10ad GT
0x10ae ISZERO
0x10af PUSH2 0x11d9
0x10b2 JUMPI
---
0x1066: JUMPDEST 
0x1067: V939 = 0x3
0x1069: V940 = 0x0
0x106c: V941 = 0xffffffffffffffffffffffffffffffffffffffff
0x1081: V942 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x1082: V943 = 0xffffffffffffffffffffffffffffffffffffffff
0x1097: V944 = AND 0xffffffffffffffffffffffffffffffffffffffff V942
0x1099: M[0x0] = V944
0x109a: V945 = 0x20
0x109c: V946 = ADD 0x20 0x0
0x109f: M[0x20] = 0x3
0x10a0: V947 = 0x20
0x10a2: V948 = ADD 0x20 0x20
0x10a3: V949 = 0x0
0x10a5: V950 = SHA3 0x0 0x40
0x10a8: S[V950] = S0
0x10aa: V951 = 0x0
0x10ad: V952 = GT S2 0x0
0x10ae: V953 = ISZERO V952
0x10af: V954 = 0x11d9
0x10b2: JUMPI 0x11d9 V953
---
Entry stack: [V10, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1]
Exit stack: [V10, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x10b3
[0x10b3:0x115b]
---
Predecessors: [0x1066]
Successors: [0x115c]
---
0x10b3 DUP5
0x10b4 SWAP1
0x10b5 POP
0x10b6 DUP1
0x10b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10cc AND
0x10cd PUSH4 0xc0ee0b8a
0x10d2 CALLER
0x10d3 DUP7
0x10d4 DUP7
0x10d5 PUSH1 0x40
0x10d7 MLOAD
0x10d8 DUP5
0x10d9 PUSH4 0xffffffff
0x10de AND
0x10df PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x10fd MUL
0x10fe DUP2
0x10ff MSTORE
0x1100 PUSH1 0x4
0x1102 ADD
0x1103 DUP1
0x1104 DUP5
0x1105 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x111a AND
0x111b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1130 AND
0x1131 DUP2
0x1132 MSTORE
0x1133 PUSH1 0x20
0x1135 ADD
0x1136 DUP4
0x1137 DUP2
0x1138 MSTORE
0x1139 PUSH1 0x20
0x113b ADD
0x113c DUP1
0x113d PUSH1 0x20
0x113f ADD
0x1140 DUP3
0x1141 DUP2
0x1142 SUB
0x1143 DUP3
0x1144 MSTORE
0x1145 DUP4
0x1146 DUP2
0x1147 DUP2
0x1148 MLOAD
0x1149 DUP2
0x114a MSTORE
0x114b PUSH1 0x20
0x114d ADD
0x114e SWAP2
0x114f POP
0x1150 DUP1
0x1151 MLOAD
0x1152 SWAP1
0x1153 PUSH1 0x20
0x1155 ADD
0x1156 SWAP1
0x1157 DUP1
0x1158 DUP4
0x1159 DUP4
0x115a PUSH1 0x0
---
0x10b7: V955 = 0xffffffffffffffffffffffffffffffffffffffff
0x10cc: V956 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x10cd: V957 = 0xc0ee0b8a
0x10d2: V958 = CALLER
0x10d5: V959 = 0x40
0x10d7: V960 = M[0x40]
0x10d9: V961 = 0xffffffff
0x10de: V962 = AND 0xffffffff 0xc0ee0b8a
0x10df: V963 = 0x100000000000000000000000000000000000000000000000000000000
0x10fd: V964 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xc0ee0b8a
0x10ff: M[V960] = 0xc0ee0b8a00000000000000000000000000000000000000000000000000000000
0x1100: V965 = 0x4
0x1102: V966 = ADD 0x4 V960
0x1105: V967 = 0xffffffffffffffffffffffffffffffffffffffff
0x111a: V968 = AND 0xffffffffffffffffffffffffffffffffffffffff V958
0x111b: V969 = 0xffffffffffffffffffffffffffffffffffffffff
0x1130: V970 = AND 0xffffffffffffffffffffffffffffffffffffffff V968
0x1132: M[V966] = V970
0x1133: V971 = 0x20
0x1135: V972 = ADD 0x20 V966
0x1138: M[V972] = S3
0x1139: V973 = 0x20
0x113b: V974 = ADD 0x20 V972
0x113d: V975 = 0x20
0x113f: V976 = ADD 0x20 V974
0x1142: V977 = SUB V976 V966
0x1144: M[V974] = V977
0x1148: V978 = M[S2]
0x114a: M[V976] = V978
0x114b: V979 = 0x20
0x114d: V980 = ADD 0x20 V976
0x1151: V981 = M[S2]
0x1153: V982 = 0x20
0x1155: V983 = ADD 0x20 S2
0x115a: V984 = 0x0
---
Entry stack: [V10, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S4, V956, 0xc0ee0b8a, V958, S3, S2, V966, V974, V980, V983, V981, V981, V980, V983, 0x0]
Exit stack: [V10, S6, S5, S4, S3, S2, S1, S4, V956, 0xc0ee0b8a, V958, S3, S2, V966, V974, V980, V983, V981, V981, V980, V983, 0x0]

================================

Block 0x115c
[0x115c:0x1164]
---
Predecessors: [0x10b3, 0x1165]
Successors: [0x1165, 0x1177]
---
0x115c JUMPDEST
0x115d DUP4
0x115e DUP2
0x115f LT
0x1160 ISZERO
0x1161 PUSH2 0x1177
0x1164 JUMPI
---
0x115c: JUMPDEST 
0x115f: V985 = LT S0 V981
0x1160: V986 = ISZERO V985
0x1161: V987 = 0x1177
0x1164: JUMPI 0x1177 V986
---
Entry stack: [V10, S20, S19, S18, S17, S16, S15, S14, V956, 0xc0ee0b8a, V958, S10, S9, V966, V974, V980, V983, V981, V981, V980, V983, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, S20, S19, S18, S17, S16, S15, S14, V956, 0xc0ee0b8a, V958, S10, S9, V966, V974, V980, V983, V981, V981, V980, V983, S0]

================================

Block 0x1165
[0x1165:0x1176]
---
Predecessors: [0x115c]
Successors: [0x115c]
---
0x1165 DUP1
0x1166 DUP3
0x1167 ADD
0x1168 MLOAD
0x1169 DUP2
0x116a DUP5
0x116b ADD
0x116c MSTORE
0x116d PUSH1 0x20
0x116f DUP2
0x1170 ADD
0x1171 SWAP1
0x1172 POP
0x1173 PUSH2 0x115c
0x1176 JUMP
---
0x1167: V988 = ADD V983 S0
0x1168: V989 = M[V988]
0x116b: V990 = ADD V980 S0
0x116c: M[V990] = V989
0x116d: V991 = 0x20
0x1170: V992 = ADD S0 0x20
0x1173: V993 = 0x115c
0x1176: JUMP 0x115c
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, V956, 0xc0ee0b8a, V958, S10, S9, V966, V974, V980, V983, V981, V981, V980, V983, S0]
Stack pops: 3
Stack additions: [S2, S1, V992]
Exit stack: [S20, S19, S18, S17, S16, S15, S14, V956, 0xc0ee0b8a, V958, S10, S9, V966, V974, V980, V983, V981, V981, V980, V983, V992]

================================

Block 0x1177
[0x1177:0x118a]
---
Predecessors: [0x115c]
Successors: [0x118b, 0x11a4]
---
0x1177 JUMPDEST
0x1178 POP
0x1179 POP
0x117a POP
0x117b POP
0x117c SWAP1
0x117d POP
0x117e SWAP1
0x117f DUP2
0x1180 ADD
0x1181 SWAP1
0x1182 PUSH1 0x1f
0x1184 AND
0x1185 DUP1
0x1186 ISZERO
0x1187 PUSH2 0x11a4
0x118a JUMPI
---
0x1177: JUMPDEST 
0x1180: V994 = ADD V981 V980
0x1182: V995 = 0x1f
0x1184: V996 = AND 0x1f V981
0x1186: V997 = ISZERO V996
0x1187: V998 = 0x11a4
0x118a: JUMPI 0x11a4 V997
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, V956, 0xc0ee0b8a, V958, S10, S9, V966, V974, V980, V983, V981, V981, V980, V983, S0]
Stack pops: 7
Stack additions: [V994, V996]
Exit stack: [S20, S19, S18, S17, S16, S15, S14, V956, 0xc0ee0b8a, V958, S10, S9, V966, V974, V994, V996]

================================

Block 0x118b
[0x118b:0x11a3]
---
Predecessors: [0x1177]
Successors: [0x11a4]
---
0x118b DUP1
0x118c DUP3
0x118d SUB
0x118e DUP1
0x118f MLOAD
0x1190 PUSH1 0x1
0x1192 DUP4
0x1193 PUSH1 0x20
0x1195 SUB
0x1196 PUSH2 0x100
0x1199 EXP
0x119a SUB
0x119b NOT
0x119c AND
0x119d DUP2
0x119e MSTORE
0x119f PUSH1 0x20
0x11a1 ADD
0x11a2 SWAP2
0x11a3 POP
---
0x118d: V999 = SUB V994 V996
0x118f: V1000 = M[V999]
0x1190: V1001 = 0x1
0x1193: V1002 = 0x20
0x1195: V1003 = SUB 0x20 V996
0x1196: V1004 = 0x100
0x1199: V1005 = EXP 0x100 V1003
0x119a: V1006 = SUB V1005 0x1
0x119b: V1007 = NOT V1006
0x119c: V1008 = AND V1007 V1000
0x119e: M[V999] = V1008
0x119f: V1009 = 0x20
0x11a1: V1010 = ADD 0x20 V999
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, V956, 0xc0ee0b8a, V958, S5, S4, V966, V974, V994, V996]
Stack pops: 2
Stack additions: [V1010, S0]
Exit stack: [S15, S14, S13, S12, S11, S10, S9, V956, 0xc0ee0b8a, V958, S5, S4, V966, V974, V1010, V996]

================================

Block 0x11a4
[0x11a4:0x11bf]
---
Predecessors: [0x1177, 0x118b]
Successors: [0x11c0, 0x11c4]
---
0x11a4 JUMPDEST
0x11a5 POP
0x11a6 SWAP5
0x11a7 POP
0x11a8 POP
0x11a9 POP
0x11aa POP
0x11ab POP
0x11ac PUSH1 0x0
0x11ae PUSH1 0x40
0x11b0 MLOAD
0x11b1 DUP1
0x11b2 DUP4
0x11b3 SUB
0x11b4 DUP2
0x11b5 PUSH1 0x0
0x11b7 DUP8
0x11b8 DUP1
0x11b9 EXTCODESIZE
0x11ba ISZERO
0x11bb ISZERO
0x11bc PUSH2 0x11c4
0x11bf JUMPI
---
0x11a4: JUMPDEST 
0x11ac: V1011 = 0x0
0x11ae: V1012 = 0x40
0x11b0: V1013 = M[0x40]
0x11b3: V1014 = SUB S1 V1013
0x11b5: V1015 = 0x0
0x11b9: V1016 = EXTCODESIZE V956
0x11ba: V1017 = ISZERO V1016
0x11bb: V1018 = ISZERO V1017
0x11bc: V1019 = 0x11c4
0x11bf: JUMPI 0x11c4 V1018
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, V956, 0xc0ee0b8a, V958, S5, S4, V966, V974, S1, V996]
Stack pops: 9
Stack additions: [S8, S7, S1, 0x0, V1013, V1014, V1013, 0x0, S8]
Exit stack: [S15, S14, S13, S12, S11, S10, S9, V956, 0xc0ee0b8a, S1, 0x0, V1013, V1014, V1013, 0x0, V956]

================================

Block 0x11c0
[0x11c0:0x11c3]
---
Predecessors: [0x11a4]
Successors: []
---
0x11c0 PUSH1 0x0
0x11c2 DUP1
0x11c3 REVERT
---
0x11c0: V1020 = 0x0
0x11c3: REVERT 0x0 0x0
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, V956, 0xc0ee0b8a, S6, 0x0, V1013, V1014, V1013, 0x0, V956]
Stack pops: 0
Stack additions: []
Exit stack: [S15, S14, S13, S12, S11, S10, S9, V956, 0xc0ee0b8a, S6, 0x0, V1013, V1014, V1013, 0x0, V956]

================================

Block 0x11c4
[0x11c4:0x11d0]
---
Predecessors: [0x11a4]
Successors: [0x11d1, 0x11d5]
---
0x11c4 JUMPDEST
0x11c5 PUSH2 0x2c6
0x11c8 GAS
0x11c9 SUB
0x11ca CALL
0x11cb ISZERO
0x11cc ISZERO
0x11cd PUSH2 0x11d5
0x11d0 JUMPI
---
0x11c4: JUMPDEST 
0x11c5: V1021 = 0x2c6
0x11c8: V1022 = GAS
0x11c9: V1023 = SUB V1022 0x2c6
0x11ca: V1024 = CALL V1023 V956 0x0 V1013 V1014 V1013 0x0
0x11cb: V1025 = ISZERO V1024
0x11cc: V1026 = ISZERO V1025
0x11cd: V1027 = 0x11d5
0x11d0: JUMPI 0x11d5 V1026
---
Entry stack: [S15, S14, S13, S12, S11, S10, S9, V956, 0xc0ee0b8a, S6, 0x0, V1013, V1014, V1013, 0x0, V956]
Stack pops: 6
Stack additions: []
Exit stack: [S15, S14, S13, S12, S11, S10, S9, V956, 0xc0ee0b8a, S6]

================================

Block 0x11d1
[0x11d1:0x11d4]
---
Predecessors: [0x11c4]
Successors: []
---
0x11d1 PUSH1 0x0
0x11d3 DUP1
0x11d4 REVERT
---
0x11d1: V1028 = 0x0
0x11d4: REVERT 0x0 0x0
---
Entry stack: [S9, S8, S7, S6, S5, S4, S3, V956, 0xc0ee0b8a, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S9, S8, S7, S6, S5, S4, S3, V956, 0xc0ee0b8a, S0]

================================

Block 0x11d5
[0x11d5:0x11d8]
---
Predecessors: [0x11c4]
Successors: [0x11d9]
---
0x11d5 JUMPDEST
0x11d6 POP
0x11d7 POP
0x11d8 POP
---
0x11d5: JUMPDEST 
---
Entry stack: [S9, S8, S7, S6, S5, S4, S3, V956, 0xc0ee0b8a, S0]
Stack pops: 3
Stack additions: []
Exit stack: [S9, S8, S7, S6, S5, S4, S3]

================================

Block 0x11d9
[0x11d9:0x1254]
---
Predecessors: [0x1066, 0x11d5]
Successors: [0x1255]
---
0x11d9 JUMPDEST
0x11da DUP5
0x11db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11f0 AND
0x11f1 CALLER
0x11f2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1207 AND
0x1208 PUSH32 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16
0x1229 DUP7
0x122a DUP7
0x122b PUSH1 0x40
0x122d MLOAD
0x122e DUP1
0x122f DUP4
0x1230 DUP2
0x1231 MSTORE
0x1232 PUSH1 0x20
0x1234 ADD
0x1235 DUP1
0x1236 PUSH1 0x20
0x1238 ADD
0x1239 DUP3
0x123a DUP2
0x123b SUB
0x123c DUP3
0x123d MSTORE
0x123e DUP4
0x123f DUP2
0x1240 DUP2
0x1241 MLOAD
0x1242 DUP2
0x1243 MSTORE
0x1244 PUSH1 0x20
0x1246 ADD
0x1247 SWAP2
0x1248 POP
0x1249 DUP1
0x124a MLOAD
0x124b SWAP1
0x124c PUSH1 0x20
0x124e ADD
0x124f SWAP1
0x1250 DUP1
0x1251 DUP4
0x1252 DUP4
0x1253 PUSH1 0x0
---
0x11d9: JUMPDEST 
0x11db: V1029 = 0xffffffffffffffffffffffffffffffffffffffff
0x11f0: V1030 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x11f1: V1031 = CALLER
0x11f2: V1032 = 0xffffffffffffffffffffffffffffffffffffffff
0x1207: V1033 = AND 0xffffffffffffffffffffffffffffffffffffffff V1031
0x1208: V1034 = 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16
0x122b: V1035 = 0x40
0x122d: V1036 = M[0x40]
0x1231: M[V1036] = S3
0x1232: V1037 = 0x20
0x1234: V1038 = ADD 0x20 V1036
0x1236: V1039 = 0x20
0x1238: V1040 = ADD 0x20 V1038
0x123b: V1041 = SUB V1040 V1036
0x123d: M[V1038] = V1041
0x1241: V1042 = M[S2]
0x1243: M[V1040] = V1042
0x1244: V1043 = 0x20
0x1246: V1044 = ADD 0x20 V1040
0x124a: V1045 = M[S2]
0x124c: V1046 = 0x20
0x124e: V1047 = ADD 0x20 S2
0x1253: V1048 = 0x0
---
Entry stack: [V10, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V1030, V1033, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S3, S2, V1036, V1038, V1044, V1047, V1045, V1045, V1044, V1047, 0x0]
Exit stack: [V10, S6, S5, S4, S3, S2, S1, S0, V1030, V1033, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S3, S2, V1036, V1038, V1044, V1047, V1045, V1045, V1044, V1047, 0x0]

================================

Block 0x1255
[0x1255:0x125d]
---
Predecessors: [0x11d9, 0x125e]
Successors: [0x125e, 0x1270]
---
0x1255 JUMPDEST
0x1256 DUP4
0x1257 DUP2
0x1258 LT
0x1259 ISZERO
0x125a PUSH2 0x1270
0x125d JUMPI
---
0x1255: JUMPDEST 
0x1258: V1049 = LT S0 S3
0x1259: V1050 = ISZERO V1049
0x125a: V1051 = 0x1270
0x125d: JUMPI 0x1270 V1050
---
Entry stack: [V10, S20, S19, S18, S17, S16, S15, S14, S13, S12, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, S20, S19, S18, S17, S16, S15, S14, S13, S12, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x125e
[0x125e:0x126f]
---
Predecessors: [0x1255]
Successors: [0x1255]
---
0x125e DUP1
0x125f DUP3
0x1260 ADD
0x1261 MLOAD
0x1262 DUP2
0x1263 DUP5
0x1264 ADD
0x1265 MSTORE
0x1266 PUSH1 0x20
0x1268 DUP2
0x1269 ADD
0x126a SWAP1
0x126b POP
0x126c PUSH2 0x1255
0x126f JUMP
---
0x1260: V1052 = ADD S1 S0
0x1261: V1053 = M[V1052]
0x1264: V1054 = ADD S2 S0
0x1265: M[V1054] = V1053
0x1266: V1055 = 0x20
0x1269: V1056 = ADD S0 0x20
0x126c: V1057 = 0x1255
0x126f: JUMP 0x1255
---
Entry stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, V1056]
Exit stack: [S20, S19, S18, S17, S16, S15, S14, S13, S12, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1056]

================================

Block 0x1270
[0x1270:0x1283]
---
Predecessors: [0x1255]
Successors: [0x1284, 0x129d]
---
0x1270 JUMPDEST
0x1271 POP
0x1272 POP
0x1273 POP
0x1274 POP
0x1275 SWAP1
0x1276 POP
0x1277 SWAP1
0x1278 DUP2
0x1279 ADD
0x127a SWAP1
0x127b PUSH1 0x1f
0x127d AND
0x127e DUP1
0x127f ISZERO
0x1280 PUSH2 0x129d
0x1283 JUMPI
---
0x1270: JUMPDEST 
0x1279: V1058 = ADD S4 S6
0x127b: V1059 = 0x1f
0x127d: V1060 = AND 0x1f S4
0x127f: V1061 = ISZERO V1060
0x1280: V1062 = 0x129d
0x1283: JUMPI 0x129d V1061
---
Entry stack: [V10, S20, S19, S18, S17, S16, S15, S14, S13, S12, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [V1058, V1060]
Exit stack: [V10, S20, S19, S18, S17, S16, S15, S14, S13, S12, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S10, S9, S8, S7, V1058, V1060]

================================

Block 0x1284
[0x1284:0x129c]
---
Predecessors: [0x1270]
Successors: [0x129d]
---
0x1284 DUP1
0x1285 DUP3
0x1286 SUB
0x1287 DUP1
0x1288 MLOAD
0x1289 PUSH1 0x1
0x128b DUP4
0x128c PUSH1 0x20
0x128e SUB
0x128f PUSH2 0x100
0x1292 EXP
0x1293 SUB
0x1294 NOT
0x1295 AND
0x1296 DUP2
0x1297 MSTORE
0x1298 PUSH1 0x20
0x129a ADD
0x129b SWAP2
0x129c POP
---
0x1286: V1063 = SUB V1058 V1060
0x1288: V1064 = M[V1063]
0x1289: V1065 = 0x1
0x128c: V1066 = 0x20
0x128e: V1067 = SUB 0x20 V1060
0x128f: V1068 = 0x100
0x1292: V1069 = EXP 0x100 V1067
0x1293: V1070 = SUB V1069 0x1
0x1294: V1071 = NOT V1070
0x1295: V1072 = AND V1071 V1064
0x1297: M[V1063] = V1072
0x1298: V1073 = 0x20
0x129a: V1074 = ADD 0x20 V1063
---
Entry stack: [V10, S15, S14, S13, S12, S11, S10, S9, S8, S7, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S5, S4, S3, S2, V1058, V1060]
Stack pops: 2
Stack additions: [V1074, S0]
Exit stack: [V10, S15, S14, S13, S12, S11, S10, S9, S8, S7, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S5, S4, S3, S2, V1074, V1060]

================================

Block 0x129d
[0x129d:0x12b1]
---
Predecessors: [0x1270, 0x1284]
Successors: [0x529]
---
0x129d JUMPDEST
0x129e POP
0x129f SWAP4
0x12a0 POP
0x12a1 POP
0x12a2 POP
0x12a3 POP
0x12a4 PUSH1 0x40
0x12a6 MLOAD
0x12a7 DUP1
0x12a8 SWAP2
0x12a9 SUB
0x12aa SWAP1
0x12ab LOG3
0x12ac POP
0x12ad POP
0x12ae POP
0x12af POP
0x12b0 POP
0x12b1 JUMP
---
0x129d: JUMPDEST 
0x12a4: V1075 = 0x40
0x12a6: V1076 = M[0x40]
0x12a9: V1077 = SUB S1 V1076
0x12ab: LOG V1076 V1077 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16 S7 S8
0x12b1: JUMP S14
---
Entry stack: [V10, S15, S14, S13, S12, S11, S10, S9, S8, S7, 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16, S5, S4, S3, S2, S1, V1060]
Stack pops: 15
Stack additions: []
Exit stack: [V10, S15]

================================

Block 0x12b2
[0x12b2:0x1338]
---
Predecessors: [0x536]
Successors: [0x581]
---
0x12b2 JUMPDEST
0x12b3 PUSH1 0x0
0x12b5 PUSH1 0x4
0x12b7 PUSH1 0x0
0x12b9 DUP5
0x12ba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12cf AND
0x12d0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12e5 AND
0x12e6 DUP2
0x12e7 MSTORE
0x12e8 PUSH1 0x20
0x12ea ADD
0x12eb SWAP1
0x12ec DUP2
0x12ed MSTORE
0x12ee PUSH1 0x20
0x12f0 ADD
0x12f1 PUSH1 0x0
0x12f3 SHA3
0x12f4 PUSH1 0x0
0x12f6 DUP4
0x12f7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x130c AND
0x130d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1322 AND
0x1323 DUP2
0x1324 MSTORE
0x1325 PUSH1 0x20
0x1327 ADD
0x1328 SWAP1
0x1329 DUP2
0x132a MSTORE
0x132b PUSH1 0x20
0x132d ADD
0x132e PUSH1 0x0
0x1330 SHA3
0x1331 SLOAD
0x1332 SWAP1
0x1333 POP
0x1334 SWAP3
0x1335 SWAP2
0x1336 POP
0x1337 POP
0x1338 JUMP
---
0x12b2: JUMPDEST 
0x12b3: V1078 = 0x0
0x12b5: V1079 = 0x4
0x12b7: V1080 = 0x0
0x12ba: V1081 = 0xffffffffffffffffffffffffffffffffffffffff
0x12cf: V1082 = AND 0xffffffffffffffffffffffffffffffffffffffff V374
0x12d0: V1083 = 0xffffffffffffffffffffffffffffffffffffffff
0x12e5: V1084 = AND 0xffffffffffffffffffffffffffffffffffffffff V1082
0x12e7: M[0x0] = V1084
0x12e8: V1085 = 0x20
0x12ea: V1086 = ADD 0x20 0x0
0x12ed: M[0x20] = 0x4
0x12ee: V1087 = 0x20
0x12f0: V1088 = ADD 0x20 0x20
0x12f1: V1089 = 0x0
0x12f3: V1090 = SHA3 0x0 0x40
0x12f4: V1091 = 0x0
0x12f7: V1092 = 0xffffffffffffffffffffffffffffffffffffffff
0x130c: V1093 = AND 0xffffffffffffffffffffffffffffffffffffffff V379
0x130d: V1094 = 0xffffffffffffffffffffffffffffffffffffffff
0x1322: V1095 = AND 0xffffffffffffffffffffffffffffffffffffffff V1093
0x1324: M[0x0] = V1095
0x1325: V1096 = 0x20
0x1327: V1097 = ADD 0x20 0x0
0x132a: M[0x20] = V1090
0x132b: V1098 = 0x20
0x132d: V1099 = ADD 0x20 0x20
0x132e: V1100 = 0x0
0x1330: V1101 = SHA3 0x0 0x40
0x1331: V1102 = S[V1101]
0x1338: JUMP 0x581
---
Entry stack: [V10, 0x581, V374, V379]
Stack pops: 3
Stack additions: [V1102]
Exit stack: [V10, V1102]

================================

Block 0x1339
[0x1339:0x1345]
---
Predecessors: [0x6c8, 0x713, 0xc4d, 0xf82]
Successors: [0x1346, 0x1347]
---
0x1339 JUMPDEST
0x133a PUSH1 0x0
0x133c DUP3
0x133d DUP3
0x133e GT
0x133f ISZERO
0x1340 ISZERO
0x1341 ISZERO
0x1342 PUSH2 0x1347
0x1345 JUMPI
---
0x1339: JUMPDEST 
0x133a: V1103 = 0x0
0x133e: V1104 = GT S0 S1
0x133f: V1105 = ISZERO V1104
0x1340: V1106 = ISZERO V1105
0x1341: V1107 = ISZERO V1106
0x1342: V1108 = 0x1347
0x1345: JUMPI 0x1347 V1107
---
Entry stack: [V10, S9, S8, S7, S6, S5, S4, 0x0, {0x713, 0x7dc, 0xc9c, 0xfd2}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V10, S9, S8, S7, S6, S5, S4, 0x0, {0x713, 0x7dc, 0xc9c, 0xfd2}, S1, S0, 0x0]

================================

Block 0x1346
[0x1346:0x1346]
---
Predecessors: [0x1339]
Successors: []
---
0x1346 INVALID
---
0x1346: INVALID 
---
Entry stack: [V10, S10, S9, S8, S7, S6, S5, 0x0, {0x713, 0x7dc, 0xc9c, 0xfd2}, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S10, S9, S8, S7, S6, S5, 0x0, {0x713, 0x7dc, 0xc9c, 0xfd2}, S2, S1, 0x0]

================================

Block 0x1347
[0x1347:0x1351]
---
Predecessors: [0x1339]
Successors: [0x713, 0x7dc, 0xc9c, 0xfd2]
---
0x1347 JUMPDEST
0x1348 DUP2
0x1349 DUP4
0x134a SUB
0x134b SWAP1
0x134c POP
0x134d SWAP3
0x134e SWAP2
0x134f POP
0x1350 POP
0x1351 JUMP
---
0x1347: JUMPDEST 
0x134a: V1109 = SUB S2 S1
0x1351: JUMP {0x713, 0x7dc, 0xc9c, 0xfd2}
---
Entry stack: [V10, S10, S9, S8, S7, S6, S5, 0x0, {0x713, 0x7dc, 0xc9c, 0xfd2}, S2, S1, 0x0]
Stack pops: 4
Stack additions: [V1109]
Exit stack: [V10, S10, S9, S8, S7, S6, S5, 0x0, V1109]

================================

Block 0x1352
[0x1352:0x1367]
---
Predecessors: [0x7dc, 0xc9c, 0xfd2]
Successors: [0x1368, 0x1369]
---
0x1352 JUMPDEST
0x1353 PUSH1 0x0
0x1355 DUP1
0x1356 PUSH1 0x64
0x1358 PUSH1 0x1
0x135a NUMBER
0x135b SUB
0x135c BLOCKHASH
0x135d PUSH1 0x1
0x135f SWAP1
0x1360 DIV
0x1361 DUP2
0x1362 ISZERO
0x1363 ISZERO
0x1364 PUSH2 0x1369
0x1367 JUMPI
---
0x1352: JUMPDEST 
0x1353: V1110 = 0x0
0x1356: V1111 = 0x64
0x1358: V1112 = 0x1
0x135a: V1113 = NUMBER
0x135b: V1114 = SUB V1113 0x1
0x135c: V1115 = BLOCKHASH V1114
0x135d: V1116 = 0x1
0x1360: V1117 = DIV V1115 0x1
0x1362: V1118 = ISZERO 0x64
0x1363: V1119 = ISZERO 0x0
0x1364: V1120 = 0x1369
0x1367: JUMPI 0x1369 0x1
---
Entry stack: [V10, S10, S9, S8, S7, S6, S5, 0x0, {0x8ad, 0xd30, 0x1066}, S2, {0x8a8, 0xd2b, 0x1061}, S0]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x64, V1117]
Exit stack: [V10, S10, S9, S8, S7, S6, S5, 0x0, {0x8ad, 0xd30, 0x1066}, S2, {0x8a8, 0xd2b, 0x1061}, S0, 0x0, 0x0, 0x64, V1117]

================================

Block 0x1368
[0x1368:0x1368]
---
Predecessors: [0x1352]
Successors: []
---
0x1368 INVALID
---
0x1368: INVALID 
---
Entry stack: [V10, S14, S13, S12, S11, S10, S9, 0x0, {0x8ad, 0xd30, 0x1066}, S6, {0x8a8, 0xd2b, 0x1061}, S4, 0x0, 0x0, 0x64, V1117]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S14, S13, S12, S11, S10, S9, 0x0, {0x8ad, 0xd30, 0x1066}, S6, {0x8a8, 0xd2b, 0x1061}, S4, 0x0, 0x0, 0x64, V1117]

================================

Block 0x1369
[0x1369:0x1375]
---
Predecessors: [0x1352]
Successors: [0x1376, 0x1387]
---
0x1369 JUMPDEST
0x136a MOD
0x136b SWAP1
0x136c POP
0x136d PUSH1 0x28
0x136f DUP2
0x1370 LT
0x1371 ISZERO
0x1372 PUSH2 0x1387
0x1375 JUMPI
---
0x1369: JUMPDEST 
0x136a: V1121 = MOD V1117 0x64
0x136d: V1122 = 0x28
0x1370: V1123 = LT V1121 0x28
0x1371: V1124 = ISZERO V1123
0x1372: V1125 = 0x1387
0x1375: JUMPI 0x1387 V1124
---
Entry stack: [V10, S14, S13, S12, S11, S10, S9, 0x0, {0x8ad, 0xd30, 0x1066}, S6, {0x8a8, 0xd2b, 0x1061}, S4, 0x0, 0x0, 0x64, V1117]
Stack pops: 3
Stack additions: [V1121]
Exit stack: [V10, S14, S13, S12, S11, S10, S9, 0x0, {0x8ad, 0xd30, 0x1066}, S6, {0x8a8, 0xd2b, 0x1061}, S4, 0x0, V1121]

================================

Block 0x1376
[0x1376:0x137f]
---
Predecessors: [0x1369]
Successors: [0x13ca]
---
0x1376 PUSH2 0x1380
0x1379 DUP4
0x137a PUSH1 0xa
0x137c PUSH2 0x13ca
0x137f JUMP
---
0x1376: V1126 = 0x1380
0x137a: V1127 = 0xa
0x137c: V1128 = 0x13ca
0x137f: JUMP 0x13ca
---
Entry stack: [V10, S12, S11, S10, S9, S8, S7, 0x0, {0x8ad, 0xd30, 0x1066}, S4, {0x8a8, 0xd2b, 0x1061}, S2, 0x0, V1121]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x1380, S2, 0xa]
Exit stack: [V10, S12, S11, S10, S9, S8, S7, 0x0, {0x8ad, 0xd30, 0x1066}, S4, {0x8a8, 0xd2b, 0x1061}, S2, 0x0, V1121, 0x1380, S2, 0xa]

================================

Block 0x1380
[0x1380:0x1386]
---
Predecessors: [0x13d8]
Successors: [0x13a6]
---
0x1380 JUMPDEST
0x1381 SWAP2
0x1382 POP
0x1383 PUSH2 0x13a6
0x1386 JUMP
---
0x1380: JUMPDEST 
0x1383: V1129 = 0x13a6
0x1386: JUMP 0x13a6
---
Entry stack: [V10, S13, S12, S11, S10, S9, S8, 0x0, {0x8ad, 0xd30, 0x1066}, S5, {0x8a8, 0xd2b, 0x1061}, S3, 0x0, S1, V1149]
Stack pops: 3
Stack additions: [S0, S1]
Exit stack: [V10, S13, S12, S11, S10, S9, S8, 0x0, {0x8ad, 0xd30, 0x1066}, S5, {0x8a8, 0xd2b, 0x1061}, S3, V1149, S1]

================================

Block 0x1387
[0x1387:0x1390]
---
Predecessors: [0x1369]
Successors: [0x1391, 0x13a2]
---
0x1387 JUMPDEST
0x1388 PUSH1 0x50
0x138a DUP2
0x138b LT
0x138c ISZERO
0x138d PUSH2 0x13a2
0x1390 JUMPI
---
0x1387: JUMPDEST 
0x1388: V1130 = 0x50
0x138b: V1131 = LT V1121 0x50
0x138c: V1132 = ISZERO V1131
0x138d: V1133 = 0x13a2
0x1390: JUMPI 0x13a2 V1132
---
Entry stack: [V10, S12, S11, S10, S9, S8, S7, 0x0, {0x8ad, 0xd30, 0x1066}, S4, {0x8a8, 0xd2b, 0x1061}, S2, 0x0, V1121]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, S12, S11, S10, S9, S8, S7, 0x0, {0x8ad, 0xd30, 0x1066}, S4, {0x8a8, 0xd2b, 0x1061}, S2, 0x0, V1121]

================================

Block 0x1391
[0x1391:0x139a]
---
Predecessors: [0x1387]
Successors: [0x13e5]
---
0x1391 PUSH2 0x139b
0x1394 DUP4
0x1395 PUSH1 0xa
0x1397 PUSH2 0x13e5
0x139a JUMP
---
0x1391: V1134 = 0x139b
0x1395: V1135 = 0xa
0x1397: V1136 = 0x13e5
0x139a: JUMP 0x13e5
---
Entry stack: [V10, S12, S11, S10, S9, S8, S7, 0x0, {0x8ad, 0xd30, 0x1066}, S4, {0x8a8, 0xd2b, 0x1061}, S2, 0x0, V1121]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x139b, S2, 0xa]
Exit stack: [V10, S12, S11, S10, S9, S8, S7, 0x0, {0x8ad, 0xd30, 0x1066}, S4, {0x8a8, 0xd2b, 0x1061}, S2, 0x0, V1121, 0x139b, S2, 0xa]

================================

Block 0x139b
[0x139b:0x13a1]
---
Predecessors: [0x140e]
Successors: [0x13a6]
---
0x139b JUMPDEST
0x139c SWAP2
0x139d POP
0x139e PUSH2 0x13a6
0x13a1 JUMP
---
0x139b: JUMPDEST 
0x139e: V1137 = 0x13a6
0x13a1: JUMP 0x13a6
---
Entry stack: [V10, S13, S12, S11, S10, S9, S8, 0x0, {0x8ad, 0xd30, 0x1066}, S5, {0x8a8, 0xd2b, 0x1061}, S3, 0x0, S1, V1151]
Stack pops: 3
Stack additions: [S0, S1]
Exit stack: [V10, S13, S12, S11, S10, S9, S8, 0x0, {0x8ad, 0xd30, 0x1066}, S5, {0x8a8, 0xd2b, 0x1061}, S3, V1151, S1]

================================

Block 0x13a2
[0x13a2:0x13a5]
---
Predecessors: [0x1387]
Successors: [0x13a6]
---
0x13a2 JUMPDEST
0x13a3 DUP3
0x13a4 SWAP2
0x13a5 POP
---
0x13a2: JUMPDEST 
---
Entry stack: [V10, S12, S11, S10, S9, S8, S7, 0x0, {0x8ad, 0xd30, 0x1066}, S4, {0x8a8, 0xd2b, 0x1061}, S2, 0x0, V1121]
Stack pops: 3
Stack additions: [S2, S2, S0]
Exit stack: [V10, S12, S11, S10, S9, S8, S7, 0x0, {0x8ad, 0xd30, 0x1066}, S4, {0x8a8, 0xd2b, 0x1061}, S2, S2, V1121]

================================

Block 0x13a6
[0x13a6:0x13ab]
---
Predecessors: [0x1380, 0x139b, 0x13a2]
Successors: [0x8a8, 0xd2b, 0x1061]
---
0x13a6 JUMPDEST
0x13a7 POP
0x13a8 SWAP2
0x13a9 SWAP1
0x13aa POP
0x13ab JUMP
---
0x13a6: JUMPDEST 
0x13ab: JUMP {0x8a8, 0xd2b, 0x1061}
---
Entry stack: [V10, S12, S11, S10, S9, S8, S7, 0x0, {0x8ad, 0xd30, 0x1066}, S4, {0x8a8, 0xd2b, 0x1061}, S2, S1, S0]
Stack pops: 4
Stack additions: [S1]
Exit stack: [V10, S12, S11, S10, S9, S8, S7, 0x0, {0x8ad, 0xd30, 0x1066}, S4, S1]

================================

Block 0x13ac
[0x13ac:0x13be]
---
Predecessors: [0x8a8, 0xa58, 0xa64, 0xd2b, 0x1061]
Successors: [0x13bf, 0x13c0]
---
0x13ac JUMPDEST
0x13ad PUSH1 0x0
0x13af DUP1
0x13b0 DUP3
0x13b1 DUP5
0x13b2 ADD
0x13b3 SWAP1
0x13b4 POP
0x13b5 DUP4
0x13b6 DUP2
0x13b7 LT
0x13b8 ISZERO
0x13b9 ISZERO
0x13ba ISZERO
0x13bb PUSH2 0x13c0
0x13be JUMPI
---
0x13ac: JUMPDEST 
0x13ad: V1138 = 0x0
0x13b2: V1139 = ADD S1 S0
0x13b7: V1140 = LT V1139 S1
0x13b8: V1141 = ISZERO V1140
0x13b9: V1142 = ISZERO V1141
0x13ba: V1143 = ISZERO V1142
0x13bb: V1144 = 0x13c0
0x13be: JUMPI 0x13c0 V1143
---
Entry stack: [V10, S9, S8, S7, S6, S5, S4, S3, {0x8ad, 0xa64, 0xab3, 0xd30, 0x1066}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1139]
Exit stack: [V10, S9, S8, S7, S6, S5, S4, S3, {0x8ad, 0xa64, 0xab3, 0xd30, 0x1066}, S1, S0, 0x0, V1139]

================================

Block 0x13bf
[0x13bf:0x13bf]
---
Predecessors: [0x13ac]
Successors: []
---
0x13bf INVALID
---
0x13bf: INVALID 
---
Entry stack: [V10, S11, S10, S9, S8, S7, S6, S5, {0x8ad, 0xa64, 0xab3, 0xd30, 0x1066}, S3, S2, 0x0, V1139]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S11, S10, S9, S8, S7, S6, S5, {0x8ad, 0xa64, 0xab3, 0xd30, 0x1066}, S3, S2, 0x0, V1139]

================================

Block 0x13c0
[0x13c0:0x13c9]
---
Predecessors: [0x13ac]
Successors: [0x8ad, 0xa64, 0xab3, 0xd30, 0x1066]
---
0x13c0 JUMPDEST
0x13c1 DUP1
0x13c2 SWAP2
0x13c3 POP
0x13c4 POP
0x13c5 SWAP3
0x13c6 SWAP2
0x13c7 POP
0x13c8 POP
0x13c9 JUMP
---
0x13c0: JUMPDEST 
0x13c9: JUMP {0x8ad, 0xa64, 0xab3, 0xd30, 0x1066}
---
Entry stack: [V10, S11, S10, S9, S8, S7, S6, S5, {0x8ad, 0xa64, 0xab3, 0xd30, 0x1066}, S3, S2, 0x0, V1139]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V10, S11, S10, S9, S8, S7, S6, S5, V1139]

================================

Block 0x13ca
[0x13ca:0x13d6]
---
Predecessors: [0x1376]
Successors: [0x13d7, 0x13d8]
---
0x13ca JUMPDEST
0x13cb PUSH1 0x0
0x13cd DUP1
0x13ce DUP3
0x13cf DUP5
0x13d0 DUP2
0x13d1 ISZERO
0x13d2 ISZERO
0x13d3 PUSH2 0x13d8
0x13d6 JUMPI
---
0x13ca: JUMPDEST 
0x13cb: V1145 = 0x0
0x13d1: V1146 = ISZERO 0xa
0x13d2: V1147 = ISZERO 0x0
0x13d3: V1148 = 0x13d8
0x13d6: JUMPI 0x13d8 0x1
---
Entry stack: [V10, S15, S14, S13, S12, S11, S10, 0x0, {0x8ad, 0xd30, 0x1066}, S7, {0x8a8, 0xd2b, 0x1061}, S5, 0x0, S3, 0x1380, S1, 0xa]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, S0, S1]
Exit stack: [V10, S15, S14, S13, S12, S11, S10, 0x0, {0x8ad, 0xd30, 0x1066}, S7, {0x8a8, 0xd2b, 0x1061}, S5, 0x0, S3, 0x1380, S1, 0xa, 0x0, 0x0, 0xa, S1]

================================

Block 0x13d7
[0x13d7:0x13d7]
---
Predecessors: [0x13ca]
Successors: []
---
0x13d7 INVALID
---
0x13d7: INVALID 
---
Entry stack: [V10, S19, S18, S17, S16, S15, S14, 0x0, {0x8ad, 0xd30, 0x1066}, S11, {0x8a8, 0xd2b, 0x1061}, S9, 0x0, S7, 0x1380, S5, 0xa, 0x0, 0x0, 0xa, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S19, S18, S17, S16, S15, S14, 0x0, {0x8ad, 0xd30, 0x1066}, S11, {0x8a8, 0xd2b, 0x1061}, S9, 0x0, S7, 0x1380, S5, 0xa, 0x0, 0x0, 0xa, S0]

================================

Block 0x13d8
[0x13d8:0x13e4]
---
Predecessors: [0x13ca]
Successors: [0x1380]
---
0x13d8 JUMPDEST
0x13d9 DIV
0x13da SWAP1
0x13db POP
0x13dc DUP1
0x13dd SWAP2
0x13de POP
0x13df POP
0x13e0 SWAP3
0x13e1 SWAP2
0x13e2 POP
0x13e3 POP
0x13e4 JUMP
---
0x13d8: JUMPDEST 
0x13d9: V1149 = DIV S0 0xa
0x13e4: JUMP 0x1380
---
Entry stack: [V10, S19, S18, S17, S16, S15, S14, 0x0, {0x8ad, 0xd30, 0x1066}, S11, {0x8a8, 0xd2b, 0x1061}, S9, 0x0, S7, 0x1380, S5, 0xa, 0x0, 0x0, 0xa, S0]
Stack pops: 7
Stack additions: [V1149]
Exit stack: [V10, S19, S18, S17, S16, S15, S14, 0x0, {0x8ad, 0xd30, 0x1066}, S11, {0x8a8, 0xd2b, 0x1061}, S9, 0x0, S7, V1149]

================================

Block 0x13e5
[0x13e5:0x13f6]
---
Predecessors: [0x1391]
Successors: [0x13f7, 0x1406]
---
0x13e5 JUMPDEST
0x13e6 PUSH1 0x0
0x13e8 DUP1
0x13e9 DUP3
0x13ea DUP5
0x13eb MUL
0x13ec SWAP1
0x13ed POP
0x13ee PUSH1 0x0
0x13f0 DUP5
0x13f1 EQ
0x13f2 DUP1
0x13f3 PUSH2 0x1406
0x13f6 JUMPI
---
0x13e5: JUMPDEST 
0x13e6: V1150 = 0x0
0x13eb: V1151 = MUL S1 0xa
0x13ee: V1152 = 0x0
0x13f1: V1153 = EQ S1 0x0
0x13f3: V1154 = 0x1406
0x13f6: JUMPI 0x1406 V1153
---
Entry stack: [V10, S15, S14, S13, S12, S11, S10, 0x0, {0x8ad, 0xd30, 0x1066}, S7, {0x8a8, 0xd2b, 0x1061}, S5, 0x0, V1121, 0x139b, S1, 0xa]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1151, V1153]
Exit stack: [V10, S15, S14, S13, S12, S11, S10, 0x0, {0x8ad, 0xd30, 0x1066}, S7, {0x8a8, 0xd2b, 0x1061}, S5, 0x0, V1121, 0x139b, S1, 0xa, 0x0, V1151, V1153]

================================

Block 0x13f7
[0x13f7:0x1401]
---
Predecessors: [0x13e5]
Successors: [0x1402, 0x1403]
---
0x13f7 POP
0x13f8 DUP3
0x13f9 DUP5
0x13fa DUP3
0x13fb DUP2
0x13fc ISZERO
0x13fd ISZERO
0x13fe PUSH2 0x1403
0x1401 JUMPI
---
0x13fc: V1155 = ISZERO S4
0x13fd: V1156 = ISZERO V1155
0x13fe: V1157 = 0x1403
0x1401: JUMPI 0x1403 V1156
---
Entry stack: [V10, S18, S17, S16, S15, S14, S13, 0x0, {0x8ad, 0xd30, 0x1066}, S10, {0x8a8, 0xd2b, 0x1061}, S8, 0x0, V1121, 0x139b, S4, 0xa, 0x0, V1151, V1153]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S3, S4, S1]
Exit stack: [V10, S18, S17, S16, S15, S14, S13, 0x0, {0x8ad, 0xd30, 0x1066}, S10, {0x8a8, 0xd2b, 0x1061}, S8, 0x0, V1121, 0x139b, S4, 0xa, 0x0, V1151, 0xa, S4, V1151]

================================

Block 0x1402
[0x1402:0x1402]
---
Predecessors: [0x13f7]
Successors: []
---
0x1402 INVALID
---
0x1402: INVALID 
---
Entry stack: [V10, S20, S19, S18, S17, S16, S15, 0x0, {0x8ad, 0xd30, 0x1066}, S12, {0x8a8, 0xd2b, 0x1061}, S10, 0x0, V1121, 0x139b, S6, 0xa, 0x0, V1151, 0xa, S1, V1151]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S20, S19, S18, S17, S16, S15, 0x0, {0x8ad, 0xd30, 0x1066}, S12, {0x8a8, 0xd2b, 0x1061}, S10, 0x0, V1121, 0x139b, S6, 0xa, 0x0, V1151, 0xa, S1, V1151]

================================

Block 0x1403
[0x1403:0x1405]
---
Predecessors: [0x13f7]
Successors: [0x1406]
---
0x1403 JUMPDEST
0x1404 DIV
0x1405 EQ
---
0x1403: JUMPDEST 
0x1404: V1158 = DIV V1151 S1
0x1405: V1159 = EQ V1158 0xa
---
Entry stack: [V10, S20, S19, S18, S17, S16, S15, 0x0, {0x8ad, 0xd30, 0x1066}, S12, {0x8a8, 0xd2b, 0x1061}, S10, 0x0, V1121, 0x139b, S6, 0xa, 0x0, V1151, 0xa, S1, V1151]
Stack pops: 3
Stack additions: [V1159]
Exit stack: [V10, S20, S19, S18, S17, S16, S15, 0x0, {0x8ad, 0xd30, 0x1066}, S12, {0x8a8, 0xd2b, 0x1061}, S10, 0x0, V1121, 0x139b, S6, 0xa, 0x0, V1151, V1159]

================================

Block 0x1406
[0x1406:0x140c]
---
Predecessors: [0x13e5, 0x1403]
Successors: [0x140d, 0x140e]
---
0x1406 JUMPDEST
0x1407 ISZERO
0x1408 ISZERO
0x1409 PUSH2 0x140e
0x140c JUMPI
---
0x1406: JUMPDEST 
0x1407: V1160 = ISZERO S0
0x1408: V1161 = ISZERO V1160
0x1409: V1162 = 0x140e
0x140c: JUMPI 0x140e V1161
---
Entry stack: [V10, S18, S17, S16, S15, S14, S13, 0x0, {0x8ad, 0xd30, 0x1066}, S10, {0x8a8, 0xd2b, 0x1061}, S8, 0x0, V1121, 0x139b, S4, 0xa, 0x0, V1151, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S18, S17, S16, S15, S14, S13, 0x0, {0x8ad, 0xd30, 0x1066}, S10, {0x8a8, 0xd2b, 0x1061}, S8, 0x0, V1121, 0x139b, S4, 0xa, 0x0, V1151]

================================

Block 0x140d
[0x140d:0x140d]
---
Predecessors: [0x1406]
Successors: []
---
0x140d INVALID
---
0x140d: INVALID 
---
Entry stack: [V10, S17, S16, S15, S14, S13, S12, 0x0, {0x8ad, 0xd30, 0x1066}, S9, {0x8a8, 0xd2b, 0x1061}, S7, 0x0, S5, 0x139b, S3, 0xa, 0x0, V1151]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S17, S16, S15, S14, S13, S12, 0x0, {0x8ad, 0xd30, 0x1066}, S9, {0x8a8, 0xd2b, 0x1061}, S7, 0x0, S5, 0x139b, S3, 0xa, 0x0, V1151]

================================

Block 0x140e
[0x140e:0x1417]
---
Predecessors: [0x1406]
Successors: [0x139b]
---
0x140e JUMPDEST
0x140f DUP1
0x1410 SWAP2
0x1411 POP
0x1412 POP
0x1413 SWAP3
0x1414 SWAP2
0x1415 POP
0x1416 POP
0x1417 JUMP
---
0x140e: JUMPDEST 
0x1417: JUMP 0x139b
---
Entry stack: [V10, S17, S16, S15, S14, S13, S12, 0x0, {0x8ad, 0xd30, 0x1066}, S9, {0x8a8, 0xd2b, 0x1061}, S7, 0x0, S5, 0x139b, S3, 0xa, 0x0, V1151]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V10, S17, S16, S15, S14, S13, S12, 0x0, {0x8ad, 0xd30, 0x1066}, S9, {0x8a8, 0xd2b, 0x1061}, S7, 0x0, S5, V1151]

================================

Block 0x1418
[0x1418:0x142b]
---
Predecessors: [0xc42]
Successors: [0xc4d]
---
0x1418 JUMPDEST
0x1419 PUSH1 0x20
0x141b PUSH1 0x40
0x141d MLOAD
0x141e SWAP1
0x141f DUP2
0x1420 ADD
0x1421 PUSH1 0x40
0x1423 MSTORE
0x1424 DUP1
0x1425 PUSH1 0x0
0x1427 DUP2
0x1428 MSTORE
0x1429 POP
0x142a SWAP1
0x142b JUMP
---
0x1418: JUMPDEST 
0x1419: V1163 = 0x20
0x141b: V1164 = 0x40
0x141d: V1165 = M[0x40]
0x1420: V1166 = ADD V1165 0x20
0x1421: V1167 = 0x40
0x1423: M[0x40] = V1166
0x1425: V1168 = 0x0
0x1428: M[V1165] = 0x0
0x142b: JUMP 0xc4d
---
Entry stack: [V10, 0x48c, V312, V315, 0x0, 0x0, 0xc4d]
Stack pops: 1
Stack additions: [V1165]
Exit stack: [V10, 0x48c, V312, V315, 0x0, 0x0, V1165]

================================

Block 0x142c
[0x142c:0x1458]
---
Predecessors: []
Successors: []
---
0x142c STOP
0x142d LOG1
0x142e PUSH6 0x627a7a723058
0x1435 SHA3
0x1436 DUP12
0x1437 MISSING 0xbc
0x1438 DUP14
0x1439 MSTORE8
0x143a MSTORE
0x143b MISSING 0xc7
0x143c ISZERO
0x143d MISSING 0xd3
0x143e BLOCKHASH
0x143f MISSING 0xa7
0x1440 PUSH24 0x2e5125e18aa514fbbb326003b6f63cec4a834649c50029
---
0x142c: STOP 
0x142d: LOG S0 S1 S2
0x142e: V1169 = 0x627a7a723058
0x1435: V1170 = SHA3 0x627a7a723058 S3
0x1437: MISSING 0xbc
0x1439: M8[S13] = S0
0x143a: M[S1] = S2
0x143b: MISSING 0xc7
0x143c: V1171 = ISZERO S0
0x143d: MISSING 0xd3
0x143e: V1172 = BLOCKHASH S0
0x143f: MISSING 0xa7
0x1440: V1173 = 0x2e5125e18aa514fbbb326003b6f63cec4a834649c50029
---
Entry stack: []
Stack pops: 0
Stack additions: [S14, V1170, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, V1171, V1172, 0x2e5125e18aa514fbbb326003b6f63cec4a834649c50029]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0xd3
Exit block: 0x153
Body: 0xd3, 0xda, 0xde, 0xe6, 0x10b, 0x114, 0x126, 0x13a, 0x153, 0x597

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x161
Exit block: 0x1a1
Body: 0x161, 0x168, 0x16c, 0x1a1, 0x5d0

Function 2:
Public function signature: 0x18160ddd
Entry block: 0x1bb
Exit block: 0x1ce
Body: 0x1bb, 0x1c2, 0x1c6, 0x1ce, 0x6c2

Function 3:
Public function signature: 0x23b872dd
Entry block: 0x1e4
Exit block: 0x2e1
Body: 0x1e4, 0x1eb, 0x1ef, 0x2e1, 0x6c8, 0x713

Function 4:
Public function signature: 0x2b68b9c6
Entry block: 0x25d
Exit block: 0x9b8
Body: 0x25d, 0x264, 0x268, 0x960, 0x9b8, 0x9bc

Function 5:
Public function signature: 0x313ce567
Entry block: 0x272
Exit block: 0x285
Body: 0x272, 0x279, 0x27d, 0x285, 0x9f7

Function 6:
Public function signature: 0x40c10f19
Entry block: 0x2a1
Exit block: 0x11d1
Body: 0x243, 0x2a1, 0x2a8, 0x2ac, 0x2e1, 0x48c, 0x529, 0x8ad, 0x9fc, 0xa54, 0xa58, 0xa64, 0xab3, 0xd30, 0xd7d, 0xe26, 0xe2f, 0xe41, 0xe55, 0xe6e, 0xe8a, 0xe8e, 0xe9b, 0xe9f, 0xea3, 0xf1f, 0xf28, 0xf3a, 0xf4e, 0xf67, 0x1066, 0x10b3, 0x115c, 0x1165, 0x1177, 0x118b, 0x11a4, 0x11c0, 0x11c4, 0x11d1, 0x11d5, 0x11d9, 0x1255, 0x125e, 0x1270, 0x1284, 0x129d, 0x13ac, 0x13bf, 0x13c0

Function 7:
Public function signature: 0x70a08231
Entry block: 0x2e3
Exit block: 0x31a
Body: 0x2e3, 0x2ea, 0x2ee, 0x31a, 0xafa

Function 8:
Public function signature: 0x8da5cb5b
Entry block: 0x330
Exit block: 0x343
Body: 0x330, 0x337, 0x33b, 0x343, 0xb43

Function 9:
Public function signature: 0x95d89b41
Entry block: 0x385
Exit block: 0x405
Body: 0x385, 0x38c, 0x390, 0x398, 0x3bd, 0x3c6, 0x3d8, 0x3ec, 0x405, 0xb69

Function 10:
Public function signature: 0xa6f9dae1
Entry block: 0x413
Exit block: 0x44a
Body: 0x413, 0x41a, 0x41e, 0x44a, 0xba2, 0xbfa, 0xbfe

Function 11:
Public function signature: 0xa9059cbb
Entry block: 0x44c
Exit block: 0x2e1
Body: 0x2e1, 0x44c, 0x453, 0x457, 0xc42, 0xc4d, 0xc9c, 0x1418

Function 12:
Public function signature: 0xbe45fd62
Entry block: 0x4a6
Exit block: 0x2e1
Body: 0x2e1, 0x4a6, 0x4ad, 0x4b1, 0xf82, 0xfd2

Function 13:
Public function signature: 0xdd62ed3e
Entry block: 0x52b
Exit block: 0x581
Body: 0x52b, 0x532, 0x536, 0x581, 0x12b2

Function 14:
Public fallback function
Entry block: 0xce
Exit block: 0xce
Body: 0xce

Function 15:
Private function
Entry block: 0x1352
Exit block: 0x13a6
Body: 0x1352, 0x1369, 0x1376, 0x1380, 0x1387, 0x1391, 0x139b, 0x13a2, 0x13a6, 0x13ca, 0x13d8, 0x13e5, 0x13f7, 0x1403, 0x1406, 0x140e

Function 16:
Private function
Entry block: 0x1339
Exit block: 0x1347
Body: 0x1339, 0x1347

