Block 0x0
[0x0:0x1f]
---
Predecessors: []
Successors: []
---
0x0 PUSH20 0x0
0x15 ADDRESS
0x16 EQ
0x17 PUSH1 0x80
0x19 PUSH1 0x40
0x1b MSTORE
0x1c PUSH1 0x0
0x1e DUP1
0x1f REVERT
---
0x0: V0 = 0x0
0x15: V1 = ADDRESS
0x16: V2 = EQ V1 0x0
0x17: V3 = 0x80
0x19: V4 = 0x40
0x1b: M[0x40] = 0x80
0x1c: V5 = 0x0
0x1f: REVERT 0x0 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: [V2]
Exit stack: [V2]

================================

Block 0x20
[0x20:0x58]
---
Predecessors: []
Successors: [0x59]
---
0x20 STOP
0x21 LOG1
0x22 PUSH6 0x627a7a723058
0x29 SHA3
0x2a PUSH31 0x60c6ea51473a2a5533fbe6fffcd1005be7207b4d2e22627776175b597b3a96
0x4a STOP
0x4b MISSING 0x29
0x4c PUSH1 0x80
0x4e PUSH1 0x40
0x50 MSTORE
0x51 PUSH1 0x4
0x53 CALLDATASIZE
0x54 LT
0x55 PUSH2 0xdb
0x58 JUMPI
---
0x20: STOP 
0x21: LOG S0 S1 S2
0x22: V6 = 0x627a7a723058
0x29: V7 = SHA3 0x627a7a723058 S3
0x2a: V8 = 0x60c6ea51473a2a5533fbe6fffcd1005be7207b4d2e22627776175b597b3a96
0x4a: STOP 
0x4b: MISSING 0x29
0x4c: V9 = 0x80
0x4e: V10 = 0x40
0x50: M[0x40] = 0x80
0x51: V11 = 0x4
0x53: V12 = CALLDATASIZE
0x54: V13 = LT V12 0x4
0x55: V14 = 0xdb
0x58: THROWI V13
---
Entry stack: []
Stack pops: 0
Stack additions: [0x60c6ea51473a2a5533fbe6fffcd1005be7207b4d2e22627776175b597b3a96, V7]
Exit stack: []

================================

Block 0x59
[0x59:0x8c]
---
Predecessors: [0x20]
Successors: [0x8d]
---
0x59 PUSH1 0x0
0x5b CALLDATALOAD
0x5c PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x7a SWAP1
0x7b DIV
0x7c PUSH4 0xffffffff
0x81 AND
0x82 DUP1
0x83 PUSH4 0x3cc4c6ce
0x88 EQ
0x89 PUSH2 0xdd
0x8c JUMPI
---
0x59: V15 = 0x0
0x5b: V16 = CALLDATALOAD 0x0
0x5c: V17 = 0x100000000000000000000000000000000000000000000000000000000
0x7b: V18 = DIV V16 0x100000000000000000000000000000000000000000000000000000000
0x7c: V19 = 0xffffffff
0x81: V20 = AND 0xffffffff V18
0x83: V21 = 0x3cc4c6ce
0x88: V22 = EQ 0x3cc4c6ce V20
0x89: V23 = 0xdd
0x8c: THROWI V22
---
Entry stack: []
Stack pops: 0
Stack additions: [V20]
Exit stack: [V20]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x59]
Successors: [0x98]
---
0x8d DUP1
0x8e PUSH4 0x499831f2
0x93 EQ
0x94 PUSH2 0xf4
0x97 JUMPI
---
0x8e: V24 = 0x499831f2
0x93: V25 = EQ 0x499831f2 V20
0x94: V26 = 0xf4
0x97: THROWI V25
---
Entry stack: [V20]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V20]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x8d]
Successors: [0xa3]
---
0x98 DUP1
0x99 PUSH4 0x5e123ce4
0x9e EQ
0x9f PUSH2 0x10b
0xa2 JUMPI
---
0x99: V27 = 0x5e123ce4
0x9e: V28 = EQ 0x5e123ce4 V20
0x9f: V29 = 0x10b
0xa2: THROWI V28
---
Entry stack: [V20]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V20]

================================

Block 0xa3
[0xa3:0xad]
---
Predecessors: [0x98]
Successors: [0xae]
---
0xa3 DUP1
0xa4 PUSH4 0x722713f7
0xa9 EQ
0xaa PUSH2 0x136
0xad JUMPI
---
0xa4: V30 = 0x722713f7
0xa9: V31 = EQ 0x722713f7 V20
0xaa: V32 = 0x136
0xad: THROWI V31
---
Entry stack: [V20]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V20]

================================

Block 0xae
[0xae:0xb8]
---
Predecessors: [0xa3]
Successors: [0xb9]
---
0xae DUP1
0xaf PUSH4 0x8b7afe2e
0xb4 EQ
0xb5 PUSH2 0x161
0xb8 JUMPI
---
0xaf: V33 = 0x8b7afe2e
0xb4: V34 = EQ 0x8b7afe2e V20
0xb5: V35 = 0x161
0xb8: THROWI V34
---
Entry stack: [V20]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V20]

================================

Block 0xb9
[0xb9:0xc3]
---
Predecessors: [0xae]
Successors: [0xc4]
---
0xb9 DUP1
0xba PUSH4 0xa378bba5
0xbf EQ
0xc0 PUSH2 0x18c
0xc3 JUMPI
---
0xba: V36 = 0xa378bba5
0xbf: V37 = EQ 0xa378bba5 V20
0xc0: V38 = 0x18c
0xc3: THROWI V37
---
Entry stack: [V20]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V20]

================================

Block 0xc4
[0xc4:0xce]
---
Predecessors: [0xb9]
Successors: [0xcf]
---
0xc4 DUP1
0xc5 PUSH4 0xa6f9dae1
0xca EQ
0xcb PUSH2 0x1b7
0xce JUMPI
---
0xc5: V39 = 0xa6f9dae1
0xca: V40 = EQ 0xa6f9dae1 V20
0xcb: V41 = 0x1b7
0xce: THROWI V40
---
Entry stack: [V20]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V20]

================================

Block 0xcf
[0xcf:0xd9]
---
Predecessors: [0xc4]
Successors: [0xda]
---
0xcf DUP1
0xd0 PUSH4 0xa78bcf6e
0xd5 EQ
0xd6 PUSH2 0x1fa
0xd9 JUMPI
---
0xd0: V42 = 0xa78bcf6e
0xd5: V43 = EQ 0xa78bcf6e V20
0xd6: V44 = 0x1fa
0xd9: THROWI V43
---
Entry stack: [V20]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V20]

================================

Block 0xda
[0xda:0xe4]
---
Predecessors: [0xcf]
Successors: [0xe5]
---
0xda DUP1
0xdb PUSH4 0xaabe2fe3
0xe0 EQ
0xe1 PUSH2 0x23d
0xe4 JUMPI
---
0xdb: V45 = 0xaabe2fe3
0xe0: V46 = EQ 0xaabe2fe3 V20
0xe1: V47 = 0x23d
0xe4: THROWI V46
---
Entry stack: [V20]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V20]

================================

Block 0xe5
[0xe5:0xef]
---
Predecessors: [0xda]
Successors: [0xf0]
---
0xe5 DUP1
0xe6 PUSH4 0xafa9a86e
0xeb EQ
0xec PUSH2 0x294
0xef JUMPI
---
0xe6: V48 = 0xafa9a86e
0xeb: V49 = EQ 0xafa9a86e V20
0xec: V50 = 0x294
0xef: THROWI V49
---
Entry stack: [V20]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V20]

================================

Block 0xf0
[0xf0:0xfa]
---
Predecessors: [0xe5]
Successors: [0xfb]
---
0xf0 DUP1
0xf1 PUSH4 0xc0ee0b8a
0xf6 EQ
0xf7 PUSH2 0x2bf
0xfa JUMPI
---
0xf1: V51 = 0xc0ee0b8a
0xf6: V52 = EQ 0xc0ee0b8a V20
0xf7: V53 = 0x2bf
0xfa: THROWI V52
---
Entry stack: [V20]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V20]

================================

Block 0xfb
[0xfb:0x105]
---
Predecessors: [0xf0]
Successors: [0x106]
---
0xfb DUP1
0xfc PUSH4 0xd6ccf7a7
0x101 EQ
0x102 PUSH2 0x36a
0x105 JUMPI
---
0xfc: V54 = 0xd6ccf7a7
0x101: V55 = EQ 0xd6ccf7a7 V20
0x102: V56 = 0x36a
0x105: THROWI V55
---
Entry stack: [V20]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V20]

================================

Block 0x106
[0x106:0x110]
---
Predecessors: [0xfb]
Successors: [0x111]
---
0x106 DUP1
0x107 PUSH4 0xf020044f
0x10c EQ
0x10d PUSH2 0x3a1
0x110 JUMPI
---
0x107: V57 = 0xf020044f
0x10c: V58 = EQ 0xf020044f V20
0x10d: V59 = 0x3a1
0x110: THROWI V58
---
Entry stack: [V20]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V20]

================================

Block 0x111
[0x111:0x11b]
---
Predecessors: [0x106]
Successors: [0x11c]
---
0x111 DUP1
0x112 PUSH4 0xf41f4b10
0x117 EQ
0x118 PUSH2 0x3d0
0x11b JUMPI
---
0x112: V60 = 0xf41f4b10
0x117: V61 = EQ 0xf41f4b10 V20
0x118: V62 = 0x3d0
0x11b: THROWI V61
---
Entry stack: [V20]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V20]

================================

Block 0x11c
[0x11c:0x126]
---
Predecessors: [0x111]
Successors: [0x127]
---
0x11c DUP1
0x11d PUSH4 0xf79d6687
0x122 EQ
0x123 PUSH2 0x3e7
0x126 JUMPI
---
0x11d: V63 = 0xf79d6687
0x122: V64 = EQ 0xf79d6687 V20
0x123: V65 = 0x3e7
0x126: THROWI V64
---
Entry stack: [V20]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V20]

================================

Block 0x127
[0x127:0x130]
---
Predecessors: [0x11c]
Successors: [0x131]
---
0x127 JUMPDEST
0x128 STOP
0x129 JUMPDEST
0x12a CALLVALUE
0x12b DUP1
0x12c ISZERO
0x12d PUSH2 0xe9
0x130 JUMPI
---
0x127: JUMPDEST 
0x128: STOP 
0x129: JUMPDEST 
0x12a: V66 = CALLVALUE
0x12c: V67 = ISZERO V66
0x12d: V68 = 0xe9
0x130: THROWI V67
---
Entry stack: [V20]
Stack pops: 0
Stack additions: [V66]
Exit stack: []

================================

Block 0x131
[0x131:0x147]
---
Predecessors: [0x127]
Successors: [0x148]
---
0x131 PUSH1 0x0
0x133 DUP1
0x134 REVERT
0x135 JUMPDEST
0x136 POP
0x137 PUSH2 0xf2
0x13a PUSH2 0x414
0x13d JUMP
0x13e JUMPDEST
0x13f STOP
0x140 JUMPDEST
0x141 CALLVALUE
0x142 DUP1
0x143 ISZERO
0x144 PUSH2 0x100
0x147 JUMPI
---
0x131: V69 = 0x0
0x134: REVERT 0x0 0x0
0x135: JUMPDEST 
0x137: V70 = 0xf2
0x13a: V71 = 0x414
0x13d: THROW 
0x13e: JUMPDEST 
0x13f: STOP 
0x140: JUMPDEST 
0x141: V72 = CALLVALUE
0x143: V73 = ISZERO V72
0x144: V74 = 0x100
0x147: THROWI V73
---
Entry stack: [V66]
Stack pops: 0
Stack additions: [0xf2, V72]
Exit stack: []

================================

Block 0x148
[0x148:0x15e]
---
Predecessors: [0x131]
Successors: [0x15f]
---
0x148 PUSH1 0x0
0x14a DUP1
0x14b REVERT
0x14c JUMPDEST
0x14d POP
0x14e PUSH2 0x109
0x151 PUSH2 0x48c
0x154 JUMP
0x155 JUMPDEST
0x156 STOP
0x157 JUMPDEST
0x158 CALLVALUE
0x159 DUP1
0x15a ISZERO
0x15b PUSH2 0x117
0x15e JUMPI
---
0x148: V75 = 0x0
0x14b: REVERT 0x0 0x0
0x14c: JUMPDEST 
0x14e: V76 = 0x109
0x151: V77 = 0x48c
0x154: THROW 
0x155: JUMPDEST 
0x156: STOP 
0x157: JUMPDEST 
0x158: V78 = CALLVALUE
0x15a: V79 = ISZERO V78
0x15b: V80 = 0x117
0x15e: THROWI V79
---
Entry stack: [V72]
Stack pops: 0
Stack additions: [0x109, V78]
Exit stack: []

================================

Block 0x15f
[0x15f:0x189]
---
Predecessors: [0x148]
Successors: [0x18a]
---
0x15f PUSH1 0x0
0x161 DUP1
0x162 REVERT
0x163 JUMPDEST
0x164 POP
0x165 PUSH2 0x120
0x168 PUSH2 0x504
0x16b JUMP
0x16c JUMPDEST
0x16d PUSH1 0x40
0x16f MLOAD
0x170 DUP1
0x171 DUP3
0x172 DUP2
0x173 MSTORE
0x174 PUSH1 0x20
0x176 ADD
0x177 SWAP2
0x178 POP
0x179 POP
0x17a PUSH1 0x40
0x17c MLOAD
0x17d DUP1
0x17e SWAP2
0x17f SUB
0x180 SWAP1
0x181 RETURN
0x182 JUMPDEST
0x183 CALLVALUE
0x184 DUP1
0x185 ISZERO
0x186 PUSH2 0x142
0x189 JUMPI
---
0x15f: V81 = 0x0
0x162: REVERT 0x0 0x0
0x163: JUMPDEST 
0x165: V82 = 0x120
0x168: V83 = 0x504
0x16b: THROW 
0x16c: JUMPDEST 
0x16d: V84 = 0x40
0x16f: V85 = M[0x40]
0x173: M[V85] = S0
0x174: V86 = 0x20
0x176: V87 = ADD 0x20 V85
0x17a: V88 = 0x40
0x17c: V89 = M[0x40]
0x17f: V90 = SUB V87 V89
0x181: RETURN V89 V90
0x182: JUMPDEST 
0x183: V91 = CALLVALUE
0x185: V92 = ISZERO V91
0x186: V93 = 0x142
0x189: THROWI V92
---
Entry stack: [V78]
Stack pops: 0
Stack additions: [0x120, V91]
Exit stack: []

================================

Block 0x18a
[0x18a:0x1b4]
---
Predecessors: [0x15f]
Successors: [0x1b5]
---
0x18a PUSH1 0x0
0x18c DUP1
0x18d REVERT
0x18e JUMPDEST
0x18f POP
0x190 PUSH2 0x14b
0x193 PUSH2 0x50a
0x196 JUMP
0x197 JUMPDEST
0x198 PUSH1 0x40
0x19a MLOAD
0x19b DUP1
0x19c DUP3
0x19d DUP2
0x19e MSTORE
0x19f PUSH1 0x20
0x1a1 ADD
0x1a2 SWAP2
0x1a3 POP
0x1a4 POP
0x1a5 PUSH1 0x40
0x1a7 MLOAD
0x1a8 DUP1
0x1a9 SWAP2
0x1aa SUB
0x1ab SWAP1
0x1ac RETURN
0x1ad JUMPDEST
0x1ae CALLVALUE
0x1af DUP1
0x1b0 ISZERO
0x1b1 PUSH2 0x16d
0x1b4 JUMPI
---
0x18a: V94 = 0x0
0x18d: REVERT 0x0 0x0
0x18e: JUMPDEST 
0x190: V95 = 0x14b
0x193: V96 = 0x50a
0x196: THROW 
0x197: JUMPDEST 
0x198: V97 = 0x40
0x19a: V98 = M[0x40]
0x19e: M[V98] = S0
0x19f: V99 = 0x20
0x1a1: V100 = ADD 0x20 V98
0x1a5: V101 = 0x40
0x1a7: V102 = M[0x40]
0x1aa: V103 = SUB V100 V102
0x1ac: RETURN V102 V103
0x1ad: JUMPDEST 
0x1ae: V104 = CALLVALUE
0x1b0: V105 = ISZERO V104
0x1b1: V106 = 0x16d
0x1b4: THROWI V105
---
Entry stack: [V91]
Stack pops: 0
Stack additions: [0x14b, V104]
Exit stack: []

================================

Block 0x1b5
[0x1b5:0x1df]
---
Predecessors: [0x18a]
Successors: [0x1e0]
---
0x1b5 PUSH1 0x0
0x1b7 DUP1
0x1b8 REVERT
0x1b9 JUMPDEST
0x1ba POP
0x1bb PUSH2 0x176
0x1be PUSH2 0x514
0x1c1 JUMP
0x1c2 JUMPDEST
0x1c3 PUSH1 0x40
0x1c5 MLOAD
0x1c6 DUP1
0x1c7 DUP3
0x1c8 DUP2
0x1c9 MSTORE
0x1ca PUSH1 0x20
0x1cc ADD
0x1cd SWAP2
0x1ce POP
0x1cf POP
0x1d0 PUSH1 0x40
0x1d2 MLOAD
0x1d3 DUP1
0x1d4 SWAP2
0x1d5 SUB
0x1d6 SWAP1
0x1d7 RETURN
0x1d8 JUMPDEST
0x1d9 CALLVALUE
0x1da DUP1
0x1db ISZERO
0x1dc PUSH2 0x198
0x1df JUMPI
---
0x1b5: V107 = 0x0
0x1b8: REVERT 0x0 0x0
0x1b9: JUMPDEST 
0x1bb: V108 = 0x176
0x1be: V109 = 0x514
0x1c1: THROW 
0x1c2: JUMPDEST 
0x1c3: V110 = 0x40
0x1c5: V111 = M[0x40]
0x1c9: M[V111] = S0
0x1ca: V112 = 0x20
0x1cc: V113 = ADD 0x20 V111
0x1d0: V114 = 0x40
0x1d2: V115 = M[0x40]
0x1d5: V116 = SUB V113 V115
0x1d7: RETURN V115 V116
0x1d8: JUMPDEST 
0x1d9: V117 = CALLVALUE
0x1db: V118 = ISZERO V117
0x1dc: V119 = 0x198
0x1df: THROWI V118
---
Entry stack: [V104]
Stack pops: 0
Stack additions: [0x176, V117]
Exit stack: []

================================

Block 0x1e0
[0x1e0:0x20a]
---
Predecessors: [0x1b5]
Successors: [0x20b]
---
0x1e0 PUSH1 0x0
0x1e2 DUP1
0x1e3 REVERT
0x1e4 JUMPDEST
0x1e5 POP
0x1e6 PUSH2 0x1a1
0x1e9 PUSH2 0x51a
0x1ec JUMP
0x1ed JUMPDEST
0x1ee PUSH1 0x40
0x1f0 MLOAD
0x1f1 DUP1
0x1f2 DUP3
0x1f3 DUP2
0x1f4 MSTORE
0x1f5 PUSH1 0x20
0x1f7 ADD
0x1f8 SWAP2
0x1f9 POP
0x1fa POP
0x1fb PUSH1 0x40
0x1fd MLOAD
0x1fe DUP1
0x1ff SWAP2
0x200 SUB
0x201 SWAP1
0x202 RETURN
0x203 JUMPDEST
0x204 CALLVALUE
0x205 DUP1
0x206 ISZERO
0x207 PUSH2 0x1c3
0x20a JUMPI
---
0x1e0: V120 = 0x0
0x1e3: REVERT 0x0 0x0
0x1e4: JUMPDEST 
0x1e6: V121 = 0x1a1
0x1e9: V122 = 0x51a
0x1ec: THROW 
0x1ed: JUMPDEST 
0x1ee: V123 = 0x40
0x1f0: V124 = M[0x40]
0x1f4: M[V124] = S0
0x1f5: V125 = 0x20
0x1f7: V126 = ADD 0x20 V124
0x1fb: V127 = 0x40
0x1fd: V128 = M[0x40]
0x200: V129 = SUB V126 V128
0x202: RETURN V128 V129
0x203: JUMPDEST 
0x204: V130 = CALLVALUE
0x206: V131 = ISZERO V130
0x207: V132 = 0x1c3
0x20a: THROWI V131
---
Entry stack: [V117]
Stack pops: 0
Stack additions: [0x1a1, V130]
Exit stack: []

================================

Block 0x20b
[0x20b:0x24d]
---
Predecessors: [0x1e0]
Successors: [0x24e]
---
0x20b PUSH1 0x0
0x20d DUP1
0x20e REVERT
0x20f JUMPDEST
0x210 POP
0x211 PUSH2 0x1f8
0x214 PUSH1 0x4
0x216 DUP1
0x217 CALLDATASIZE
0x218 SUB
0x219 DUP2
0x21a ADD
0x21b SWAP1
0x21c DUP1
0x21d DUP1
0x21e CALLDATALOAD
0x21f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x234 AND
0x235 SWAP1
0x236 PUSH1 0x20
0x238 ADD
0x239 SWAP1
0x23a SWAP3
0x23b SWAP2
0x23c SWAP1
0x23d POP
0x23e POP
0x23f POP
0x240 PUSH2 0x520
0x243 JUMP
0x244 JUMPDEST
0x245 STOP
0x246 JUMPDEST
0x247 CALLVALUE
0x248 DUP1
0x249 ISZERO
0x24a PUSH2 0x206
0x24d JUMPI
---
0x20b: V133 = 0x0
0x20e: REVERT 0x0 0x0
0x20f: JUMPDEST 
0x211: V134 = 0x1f8
0x214: V135 = 0x4
0x217: V136 = CALLDATASIZE
0x218: V137 = SUB V136 0x4
0x21a: V138 = ADD 0x4 V137
0x21e: V139 = CALLDATALOAD 0x4
0x21f: V140 = 0xffffffffffffffffffffffffffffffffffffffff
0x234: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x236: V142 = 0x20
0x238: V143 = ADD 0x20 0x4
0x240: V144 = 0x520
0x243: THROW 
0x244: JUMPDEST 
0x245: STOP 
0x246: JUMPDEST 
0x247: V145 = CALLVALUE
0x249: V146 = ISZERO V145
0x24a: V147 = 0x206
0x24d: THROWI V146
---
Entry stack: [V130]
Stack pops: 0
Stack additions: [V141, 0x1f8, V145]
Exit stack: []

================================

Block 0x24e
[0x24e:0x290]
---
Predecessors: [0x20b]
Successors: [0x291]
---
0x24e PUSH1 0x0
0x250 DUP1
0x251 REVERT
0x252 JUMPDEST
0x253 POP
0x254 PUSH2 0x23b
0x257 PUSH1 0x4
0x259 DUP1
0x25a CALLDATASIZE
0x25b SUB
0x25c DUP2
0x25d ADD
0x25e SWAP1
0x25f DUP1
0x260 DUP1
0x261 CALLDATALOAD
0x262 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x277 AND
0x278 SWAP1
0x279 PUSH1 0x20
0x27b ADD
0x27c SWAP1
0x27d SWAP3
0x27e SWAP2
0x27f SWAP1
0x280 POP
0x281 POP
0x282 POP
0x283 PUSH2 0x5be
0x286 JUMP
0x287 JUMPDEST
0x288 STOP
0x289 JUMPDEST
0x28a CALLVALUE
0x28b DUP1
0x28c ISZERO
0x28d PUSH2 0x249
0x290 JUMPI
---
0x24e: V148 = 0x0
0x251: REVERT 0x0 0x0
0x252: JUMPDEST 
0x254: V149 = 0x23b
0x257: V150 = 0x4
0x25a: V151 = CALLDATASIZE
0x25b: V152 = SUB V151 0x4
0x25d: V153 = ADD 0x4 V152
0x261: V154 = CALLDATALOAD 0x4
0x262: V155 = 0xffffffffffffffffffffffffffffffffffffffff
0x277: V156 = AND 0xffffffffffffffffffffffffffffffffffffffff V154
0x279: V157 = 0x20
0x27b: V158 = ADD 0x20 0x4
0x283: V159 = 0x5be
0x286: THROW 
0x287: JUMPDEST 
0x288: STOP 
0x289: JUMPDEST 
0x28a: V160 = CALLVALUE
0x28c: V161 = ISZERO V160
0x28d: V162 = 0x249
0x290: THROWI V161
---
Entry stack: [V145]
Stack pops: 0
Stack additions: [V156, 0x23b, V160]
Exit stack: []

================================

Block 0x291
[0x291:0x2e7]
---
Predecessors: [0x24e]
Successors: [0x2e8]
---
0x291 PUSH1 0x0
0x293 DUP1
0x294 REVERT
0x295 JUMPDEST
0x296 POP
0x297 PUSH2 0x252
0x29a PUSH2 0x65d
0x29d JUMP
0x29e JUMPDEST
0x29f PUSH1 0x40
0x2a1 MLOAD
0x2a2 DUP1
0x2a3 DUP3
0x2a4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b9 AND
0x2ba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2cf AND
0x2d0 DUP2
0x2d1 MSTORE
0x2d2 PUSH1 0x20
0x2d4 ADD
0x2d5 SWAP2
0x2d6 POP
0x2d7 POP
0x2d8 PUSH1 0x40
0x2da MLOAD
0x2db DUP1
0x2dc SWAP2
0x2dd SUB
0x2de SWAP1
0x2df RETURN
0x2e0 JUMPDEST
0x2e1 CALLVALUE
0x2e2 DUP1
0x2e3 ISZERO
0x2e4 PUSH2 0x2a0
0x2e7 JUMPI
---
0x291: V163 = 0x0
0x294: REVERT 0x0 0x0
0x295: JUMPDEST 
0x297: V164 = 0x252
0x29a: V165 = 0x65d
0x29d: THROW 
0x29e: JUMPDEST 
0x29f: V166 = 0x40
0x2a1: V167 = M[0x40]
0x2a4: V168 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b9: V169 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x2ba: V170 = 0xffffffffffffffffffffffffffffffffffffffff
0x2cf: V171 = AND 0xffffffffffffffffffffffffffffffffffffffff V169
0x2d1: M[V167] = V171
0x2d2: V172 = 0x20
0x2d4: V173 = ADD 0x20 V167
0x2d8: V174 = 0x40
0x2da: V175 = M[0x40]
0x2dd: V176 = SUB V173 V175
0x2df: RETURN V175 V176
0x2e0: JUMPDEST 
0x2e1: V177 = CALLVALUE
0x2e3: V178 = ISZERO V177
0x2e4: V179 = 0x2a0
0x2e7: THROWI V178
---
Entry stack: [V160]
Stack pops: 0
Stack additions: [0x252, V177]
Exit stack: []

================================

Block 0x2e8
[0x2e8:0x312]
---
Predecessors: [0x291]
Successors: [0x313]
---
0x2e8 PUSH1 0x0
0x2ea DUP1
0x2eb REVERT
0x2ec JUMPDEST
0x2ed POP
0x2ee PUSH2 0x2a9
0x2f1 PUSH2 0x683
0x2f4 JUMP
0x2f5 JUMPDEST
0x2f6 PUSH1 0x40
0x2f8 MLOAD
0x2f9 DUP1
0x2fa DUP3
0x2fb DUP2
0x2fc MSTORE
0x2fd PUSH1 0x20
0x2ff ADD
0x300 SWAP2
0x301 POP
0x302 POP
0x303 PUSH1 0x40
0x305 MLOAD
0x306 DUP1
0x307 SWAP2
0x308 SUB
0x309 SWAP1
0x30a RETURN
0x30b JUMPDEST
0x30c CALLVALUE
0x30d DUP1
0x30e ISZERO
0x30f PUSH2 0x2cb
0x312 JUMPI
---
0x2e8: V180 = 0x0
0x2eb: REVERT 0x0 0x0
0x2ec: JUMPDEST 
0x2ee: V181 = 0x2a9
0x2f1: V182 = 0x683
0x2f4: THROW 
0x2f5: JUMPDEST 
0x2f6: V183 = 0x40
0x2f8: V184 = M[0x40]
0x2fc: M[V184] = S0
0x2fd: V185 = 0x20
0x2ff: V186 = ADD 0x20 V184
0x303: V187 = 0x40
0x305: V188 = M[0x40]
0x308: V189 = SUB V186 V188
0x30a: RETURN V188 V189
0x30b: JUMPDEST 
0x30c: V190 = CALLVALUE
0x30e: V191 = ISZERO V190
0x30f: V192 = 0x2cb
0x312: THROWI V191
---
Entry stack: [V177]
Stack pops: 0
Stack additions: [0x2a9, V190]
Exit stack: []

================================

Block 0x313
[0x313:0x3bd]
---
Predecessors: [0x2e8]
Successors: [0x3be]
---
0x313 PUSH1 0x0
0x315 DUP1
0x316 REVERT
0x317 JUMPDEST
0x318 POP
0x319 PUSH2 0x350
0x31c PUSH1 0x4
0x31e DUP1
0x31f CALLDATASIZE
0x320 SUB
0x321 DUP2
0x322 ADD
0x323 SWAP1
0x324 DUP1
0x325 DUP1
0x326 CALLDATALOAD
0x327 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x33c AND
0x33d SWAP1
0x33e PUSH1 0x20
0x340 ADD
0x341 SWAP1
0x342 SWAP3
0x343 SWAP2
0x344 SWAP1
0x345 DUP1
0x346 CALLDATALOAD
0x347 SWAP1
0x348 PUSH1 0x20
0x34a ADD
0x34b SWAP1
0x34c SWAP3
0x34d SWAP2
0x34e SWAP1
0x34f DUP1
0x350 CALLDATALOAD
0x351 SWAP1
0x352 PUSH1 0x20
0x354 ADD
0x355 SWAP1
0x356 DUP3
0x357 ADD
0x358 DUP1
0x359 CALLDATALOAD
0x35a SWAP1
0x35b PUSH1 0x20
0x35d ADD
0x35e SWAP1
0x35f DUP1
0x360 DUP1
0x361 PUSH1 0x1f
0x363 ADD
0x364 PUSH1 0x20
0x366 DUP1
0x367 SWAP2
0x368 DIV
0x369 MUL
0x36a PUSH1 0x20
0x36c ADD
0x36d PUSH1 0x40
0x36f MLOAD
0x370 SWAP1
0x371 DUP2
0x372 ADD
0x373 PUSH1 0x40
0x375 MSTORE
0x376 DUP1
0x377 SWAP4
0x378 SWAP3
0x379 SWAP2
0x37a SWAP1
0x37b DUP2
0x37c DUP2
0x37d MSTORE
0x37e PUSH1 0x20
0x380 ADD
0x381 DUP4
0x382 DUP4
0x383 DUP1
0x384 DUP3
0x385 DUP5
0x386 CALLDATACOPY
0x387 DUP3
0x388 ADD
0x389 SWAP2
0x38a POP
0x38b POP
0x38c POP
0x38d POP
0x38e POP
0x38f POP
0x390 SWAP2
0x391 SWAP3
0x392 SWAP2
0x393 SWAP3
0x394 SWAP1
0x395 POP
0x396 POP
0x397 POP
0x398 PUSH2 0x689
0x39b JUMP
0x39c JUMPDEST
0x39d PUSH1 0x40
0x39f MLOAD
0x3a0 DUP1
0x3a1 DUP3
0x3a2 ISZERO
0x3a3 ISZERO
0x3a4 ISZERO
0x3a5 ISZERO
0x3a6 DUP2
0x3a7 MSTORE
0x3a8 PUSH1 0x20
0x3aa ADD
0x3ab SWAP2
0x3ac POP
0x3ad POP
0x3ae PUSH1 0x40
0x3b0 MLOAD
0x3b1 DUP1
0x3b2 SWAP2
0x3b3 SUB
0x3b4 SWAP1
0x3b5 RETURN
0x3b6 JUMPDEST
0x3b7 CALLVALUE
0x3b8 DUP1
0x3b9 ISZERO
0x3ba PUSH2 0x376
0x3bd JUMPI
---
0x313: V193 = 0x0
0x316: REVERT 0x0 0x0
0x317: JUMPDEST 
0x319: V194 = 0x350
0x31c: V195 = 0x4
0x31f: V196 = CALLDATASIZE
0x320: V197 = SUB V196 0x4
0x322: V198 = ADD 0x4 V197
0x326: V199 = CALLDATALOAD 0x4
0x327: V200 = 0xffffffffffffffffffffffffffffffffffffffff
0x33c: V201 = AND 0xffffffffffffffffffffffffffffffffffffffff V199
0x33e: V202 = 0x20
0x340: V203 = ADD 0x20 0x4
0x346: V204 = CALLDATALOAD 0x24
0x348: V205 = 0x20
0x34a: V206 = ADD 0x20 0x24
0x350: V207 = CALLDATALOAD 0x44
0x352: V208 = 0x20
0x354: V209 = ADD 0x20 0x44
0x357: V210 = ADD 0x4 V207
0x359: V211 = CALLDATALOAD V210
0x35b: V212 = 0x20
0x35d: V213 = ADD 0x20 V210
0x361: V214 = 0x1f
0x363: V215 = ADD 0x1f V211
0x364: V216 = 0x20
0x368: V217 = DIV V215 0x20
0x369: V218 = MUL V217 0x20
0x36a: V219 = 0x20
0x36c: V220 = ADD 0x20 V218
0x36d: V221 = 0x40
0x36f: V222 = M[0x40]
0x372: V223 = ADD V222 V220
0x373: V224 = 0x40
0x375: M[0x40] = V223
0x37d: M[V222] = V211
0x37e: V225 = 0x20
0x380: V226 = ADD 0x20 V222
0x386: CALLDATACOPY V226 V213 V211
0x388: V227 = ADD V226 V211
0x398: V228 = 0x689
0x39b: THROW 
0x39c: JUMPDEST 
0x39d: V229 = 0x40
0x39f: V230 = M[0x40]
0x3a2: V231 = ISZERO S0
0x3a3: V232 = ISZERO V231
0x3a4: V233 = ISZERO V232
0x3a5: V234 = ISZERO V233
0x3a7: M[V230] = V234
0x3a8: V235 = 0x20
0x3aa: V236 = ADD 0x20 V230
0x3ae: V237 = 0x40
0x3b0: V238 = M[0x40]
0x3b3: V239 = SUB V236 V238
0x3b5: RETURN V238 V239
0x3b6: JUMPDEST 
0x3b7: V240 = CALLVALUE
0x3b9: V241 = ISZERO V240
0x3ba: V242 = 0x376
0x3bd: THROWI V241
---
Entry stack: [V190]
Stack pops: 0
Stack additions: [V222, V204, V201, 0x350, V240]
Exit stack: []

================================

Block 0x3be
[0x3be:0x3f4]
---
Predecessors: [0x313]
Successors: [0x3f5]
---
0x3be PUSH1 0x0
0x3c0 DUP1
0x3c1 REVERT
0x3c2 JUMPDEST
0x3c3 POP
0x3c4 PUSH2 0x39f
0x3c7 PUSH1 0x4
0x3c9 DUP1
0x3ca CALLDATASIZE
0x3cb SUB
0x3cc DUP2
0x3cd ADD
0x3ce SWAP1
0x3cf DUP1
0x3d0 DUP1
0x3d1 CALLDATALOAD
0x3d2 SWAP1
0x3d3 PUSH1 0x20
0x3d5 ADD
0x3d6 SWAP1
0x3d7 SWAP3
0x3d8 SWAP2
0x3d9 SWAP1
0x3da DUP1
0x3db CALLDATALOAD
0x3dc SWAP1
0x3dd PUSH1 0x20
0x3df ADD
0x3e0 SWAP1
0x3e1 SWAP3
0x3e2 SWAP2
0x3e3 SWAP1
0x3e4 POP
0x3e5 POP
0x3e6 POP
0x3e7 PUSH2 0x6ea
0x3ea JUMP
0x3eb JUMPDEST
0x3ec STOP
0x3ed JUMPDEST
0x3ee CALLVALUE
0x3ef DUP1
0x3f0 ISZERO
0x3f1 PUSH2 0x3ad
0x3f4 JUMPI
---
0x3be: V243 = 0x0
0x3c1: REVERT 0x0 0x0
0x3c2: JUMPDEST 
0x3c4: V244 = 0x39f
0x3c7: V245 = 0x4
0x3ca: V246 = CALLDATASIZE
0x3cb: V247 = SUB V246 0x4
0x3cd: V248 = ADD 0x4 V247
0x3d1: V249 = CALLDATALOAD 0x4
0x3d3: V250 = 0x20
0x3d5: V251 = ADD 0x20 0x4
0x3db: V252 = CALLDATALOAD 0x24
0x3dd: V253 = 0x20
0x3df: V254 = ADD 0x20 0x24
0x3e7: V255 = 0x6ea
0x3ea: THROW 
0x3eb: JUMPDEST 
0x3ec: STOP 
0x3ed: JUMPDEST 
0x3ee: V256 = CALLVALUE
0x3f0: V257 = ISZERO V256
0x3f1: V258 = 0x3ad
0x3f4: THROWI V257
---
Entry stack: [V240]
Stack pops: 0
Stack additions: [V252, V249, 0x39f, V256]
Exit stack: []

================================

Block 0x3f5
[0x3f5:0x423]
---
Predecessors: [0x3be]
Successors: [0x424]
---
0x3f5 PUSH1 0x0
0x3f7 DUP1
0x3f8 REVERT
0x3f9 JUMPDEST
0x3fa POP
0x3fb PUSH2 0x3b6
0x3fe PUSH2 0x78d
0x401 JUMP
0x402 JUMPDEST
0x403 PUSH1 0x40
0x405 MLOAD
0x406 DUP1
0x407 DUP3
0x408 ISZERO
0x409 ISZERO
0x40a ISZERO
0x40b ISZERO
0x40c DUP2
0x40d MSTORE
0x40e PUSH1 0x20
0x410 ADD
0x411 SWAP2
0x412 POP
0x413 POP
0x414 PUSH1 0x40
0x416 MLOAD
0x417 DUP1
0x418 SWAP2
0x419 SUB
0x41a SWAP1
0x41b RETURN
0x41c JUMPDEST
0x41d CALLVALUE
0x41e DUP1
0x41f ISZERO
0x420 PUSH2 0x3dc
0x423 JUMPI
---
0x3f5: V259 = 0x0
0x3f8: REVERT 0x0 0x0
0x3f9: JUMPDEST 
0x3fb: V260 = 0x3b6
0x3fe: V261 = 0x78d
0x401: THROW 
0x402: JUMPDEST 
0x403: V262 = 0x40
0x405: V263 = M[0x40]
0x408: V264 = ISZERO S0
0x409: V265 = ISZERO V264
0x40a: V266 = ISZERO V265
0x40b: V267 = ISZERO V266
0x40d: M[V263] = V267
0x40e: V268 = 0x20
0x410: V269 = ADD 0x20 V263
0x414: V270 = 0x40
0x416: V271 = M[0x40]
0x419: V272 = SUB V269 V271
0x41b: RETURN V271 V272
0x41c: JUMPDEST 
0x41d: V273 = CALLVALUE
0x41f: V274 = ISZERO V273
0x420: V275 = 0x3dc
0x423: THROWI V274
---
Entry stack: [V256]
Stack pops: 0
Stack additions: [0x3b6, V273]
Exit stack: []

================================

Block 0x424
[0x424:0x43a]
---
Predecessors: [0x3f5]
Successors: [0x43b]
---
0x424 PUSH1 0x0
0x426 DUP1
0x427 REVERT
0x428 JUMPDEST
0x429 POP
0x42a PUSH2 0x3e5
0x42d PUSH2 0x7a0
0x430 JUMP
0x431 JUMPDEST
0x432 STOP
0x433 JUMPDEST
0x434 CALLVALUE
0x435 DUP1
0x436 ISZERO
0x437 PUSH2 0x3f3
0x43a JUMPI
---
0x424: V276 = 0x0
0x427: REVERT 0x0 0x0
0x428: JUMPDEST 
0x42a: V277 = 0x3e5
0x42d: V278 = 0x7a0
0x430: THROW 
0x431: JUMPDEST 
0x432: STOP 
0x433: JUMPDEST 
0x434: V279 = CALLVALUE
0x436: V280 = ISZERO V279
0x437: V281 = 0x3f3
0x43a: THROWI V280
---
Entry stack: [V273]
Stack pops: 0
Stack additions: [0x3e5, V279]
Exit stack: []

================================

Block 0x43b
[0x43b:0x4b6]
---
Predecessors: [0x424]
Successors: [0x4b7]
---
0x43b PUSH1 0x0
0x43d DUP1
0x43e REVERT
0x43f JUMPDEST
0x440 POP
0x441 PUSH2 0x412
0x444 PUSH1 0x4
0x446 DUP1
0x447 CALLDATASIZE
0x448 SUB
0x449 DUP2
0x44a ADD
0x44b SWAP1
0x44c DUP1
0x44d DUP1
0x44e CALLDATALOAD
0x44f SWAP1
0x450 PUSH1 0x20
0x452 ADD
0x453 SWAP1
0x454 SWAP3
0x455 SWAP2
0x456 SWAP1
0x457 POP
0x458 POP
0x459 POP
0x45a PUSH2 0x9e2
0x45d JUMP
0x45e JUMPDEST
0x45f STOP
0x460 JUMPDEST
0x461 PUSH1 0x0
0x463 DUP1
0x464 SWAP1
0x465 SLOAD
0x466 SWAP1
0x467 PUSH2 0x100
0x46a EXP
0x46b SWAP1
0x46c DIV
0x46d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x482 AND
0x483 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x498 AND
0x499 CALLER
0x49a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4af AND
0x4b0 EQ
0x4b1 ISZERO
0x4b2 ISZERO
0x4b3 PUSH2 0x46f
0x4b6 JUMPI
---
0x43b: V282 = 0x0
0x43e: REVERT 0x0 0x0
0x43f: JUMPDEST 
0x441: V283 = 0x412
0x444: V284 = 0x4
0x447: V285 = CALLDATASIZE
0x448: V286 = SUB V285 0x4
0x44a: V287 = ADD 0x4 V286
0x44e: V288 = CALLDATALOAD 0x4
0x450: V289 = 0x20
0x452: V290 = ADD 0x20 0x4
0x45a: V291 = 0x9e2
0x45d: THROW 
0x45e: JUMPDEST 
0x45f: STOP 
0x460: JUMPDEST 
0x461: V292 = 0x0
0x465: V293 = S[0x0]
0x467: V294 = 0x100
0x46a: V295 = EXP 0x100 0x0
0x46c: V296 = DIV V293 0x1
0x46d: V297 = 0xffffffffffffffffffffffffffffffffffffffff
0x482: V298 = AND 0xffffffffffffffffffffffffffffffffffffffff V296
0x483: V299 = 0xffffffffffffffffffffffffffffffffffffffff
0x498: V300 = AND 0xffffffffffffffffffffffffffffffffffffffff V298
0x499: V301 = CALLER
0x49a: V302 = 0xffffffffffffffffffffffffffffffffffffffff
0x4af: V303 = AND 0xffffffffffffffffffffffffffffffffffffffff V301
0x4b0: V304 = EQ V303 V300
0x4b1: V305 = ISZERO V304
0x4b2: V306 = ISZERO V305
0x4b3: V307 = 0x46f
0x4b6: THROWI V306
---
Entry stack: [V279]
Stack pops: 0
Stack additions: [V288, 0x412]
Exit stack: []

================================

Block 0x4b7
[0x4b7:0x52e]
---
Predecessors: [0x43b]
Successors: [0x52f]
---
0x4b7 PUSH1 0x0
0x4b9 DUP1
0x4ba REVERT
0x4bb JUMPDEST
0x4bc PUSH1 0x1
0x4be PUSH1 0x8
0x4c0 PUSH1 0x0
0x4c2 PUSH2 0x100
0x4c5 EXP
0x4c6 DUP2
0x4c7 SLOAD
0x4c8 DUP2
0x4c9 PUSH1 0xff
0x4cb MUL
0x4cc NOT
0x4cd AND
0x4ce SWAP1
0x4cf DUP4
0x4d0 ISZERO
0x4d1 ISZERO
0x4d2 MUL
0x4d3 OR
0x4d4 SWAP1
0x4d5 SSTORE
0x4d6 POP
0x4d7 JUMP
0x4d8 JUMPDEST
0x4d9 PUSH1 0x0
0x4db DUP1
0x4dc SWAP1
0x4dd SLOAD
0x4de SWAP1
0x4df PUSH2 0x100
0x4e2 EXP
0x4e3 SWAP1
0x4e4 DIV
0x4e5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4fa AND
0x4fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x510 AND
0x511 CALLER
0x512 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x527 AND
0x528 EQ
0x529 ISZERO
0x52a ISZERO
0x52b PUSH2 0x4e7
0x52e JUMPI
---
0x4b7: V308 = 0x0
0x4ba: REVERT 0x0 0x0
0x4bb: JUMPDEST 
0x4bc: V309 = 0x1
0x4be: V310 = 0x8
0x4c0: V311 = 0x0
0x4c2: V312 = 0x100
0x4c5: V313 = EXP 0x100 0x0
0x4c7: V314 = S[0x8]
0x4c9: V315 = 0xff
0x4cb: V316 = MUL 0xff 0x1
0x4cc: V317 = NOT 0xff
0x4cd: V318 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V314
0x4d0: V319 = ISZERO 0x1
0x4d1: V320 = ISZERO 0x0
0x4d2: V321 = MUL 0x1 0x1
0x4d3: V322 = OR 0x1 V318
0x4d5: S[0x8] = V322
0x4d7: JUMP S0
0x4d8: JUMPDEST 
0x4d9: V323 = 0x0
0x4dd: V324 = S[0x0]
0x4df: V325 = 0x100
0x4e2: V326 = EXP 0x100 0x0
0x4e4: V327 = DIV V324 0x1
0x4e5: V328 = 0xffffffffffffffffffffffffffffffffffffffff
0x4fa: V329 = AND 0xffffffffffffffffffffffffffffffffffffffff V327
0x4fb: V330 = 0xffffffffffffffffffffffffffffffffffffffff
0x510: V331 = AND 0xffffffffffffffffffffffffffffffffffffffff V329
0x511: V332 = CALLER
0x512: V333 = 0xffffffffffffffffffffffffffffffffffffffff
0x527: V334 = AND 0xffffffffffffffffffffffffffffffffffffffff V332
0x528: V335 = EQ V334 V331
0x529: V336 = ISZERO V335
0x52a: V337 = ISZERO V336
0x52b: V338 = 0x4e7
0x52e: THROWI V337
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x52f
[0x52f:0x5c2]
---
Predecessors: [0x4b7]
Successors: [0x5c3]
---
0x52f PUSH1 0x0
0x531 DUP1
0x532 REVERT
0x533 JUMPDEST
0x534 PUSH1 0x0
0x536 PUSH1 0x8
0x538 PUSH1 0x0
0x53a PUSH2 0x100
0x53d EXP
0x53e DUP2
0x53f SLOAD
0x540 DUP2
0x541 PUSH1 0xff
0x543 MUL
0x544 NOT
0x545 AND
0x546 SWAP1
0x547 DUP4
0x548 ISZERO
0x549 ISZERO
0x54a MUL
0x54b OR
0x54c SWAP1
0x54d SSTORE
0x54e POP
0x54f JUMP
0x550 JUMPDEST
0x551 PUSH1 0x6
0x553 SLOAD
0x554 DUP2
0x555 JUMP
0x556 JUMPDEST
0x557 PUSH1 0x0
0x559 PUSH1 0x4
0x55b SLOAD
0x55c SWAP1
0x55d POP
0x55e SWAP1
0x55f JUMP
0x560 JUMPDEST
0x561 PUSH1 0x4
0x563 SLOAD
0x564 DUP2
0x565 JUMP
0x566 JUMPDEST
0x567 PUSH1 0x7
0x569 SLOAD
0x56a DUP2
0x56b JUMP
0x56c JUMPDEST
0x56d PUSH1 0x0
0x56f DUP1
0x570 SWAP1
0x571 SLOAD
0x572 SWAP1
0x573 PUSH2 0x100
0x576 EXP
0x577 SWAP1
0x578 DIV
0x579 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x58e AND
0x58f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5a4 AND
0x5a5 CALLER
0x5a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5bb AND
0x5bc EQ
0x5bd ISZERO
0x5be ISZERO
0x5bf PUSH2 0x57b
0x5c2 JUMPI
---
0x52f: V339 = 0x0
0x532: REVERT 0x0 0x0
0x533: JUMPDEST 
0x534: V340 = 0x0
0x536: V341 = 0x8
0x538: V342 = 0x0
0x53a: V343 = 0x100
0x53d: V344 = EXP 0x100 0x0
0x53f: V345 = S[0x8]
0x541: V346 = 0xff
0x543: V347 = MUL 0xff 0x1
0x544: V348 = NOT 0xff
0x545: V349 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V345
0x548: V350 = ISZERO 0x0
0x549: V351 = ISZERO 0x1
0x54a: V352 = MUL 0x0 0x1
0x54b: V353 = OR 0x0 V349
0x54d: S[0x8] = V353
0x54f: JUMP S0
0x550: JUMPDEST 
0x551: V354 = 0x6
0x553: V355 = S[0x6]
0x555: JUMP S0
0x556: JUMPDEST 
0x557: V356 = 0x0
0x559: V357 = 0x4
0x55b: V358 = S[0x4]
0x55f: JUMP S0
0x560: JUMPDEST 
0x561: V359 = 0x4
0x563: V360 = S[0x4]
0x565: JUMP S0
0x566: JUMPDEST 
0x567: V361 = 0x7
0x569: V362 = S[0x7]
0x56b: JUMP S0
0x56c: JUMPDEST 
0x56d: V363 = 0x0
0x571: V364 = S[0x0]
0x573: V365 = 0x100
0x576: V366 = EXP 0x100 0x0
0x578: V367 = DIV V364 0x1
0x579: V368 = 0xffffffffffffffffffffffffffffffffffffffff
0x58e: V369 = AND 0xffffffffffffffffffffffffffffffffffffffff V367
0x58f: V370 = 0xffffffffffffffffffffffffffffffffffffffff
0x5a4: V371 = AND 0xffffffffffffffffffffffffffffffffffffffff V369
0x5a5: V372 = CALLER
0x5a6: V373 = 0xffffffffffffffffffffffffffffffffffffffff
0x5bb: V374 = AND 0xffffffffffffffffffffffffffffffffffffffff V372
0x5bc: V375 = EQ V374 V371
0x5bd: V376 = ISZERO V375
0x5be: V377 = ISZERO V376
0x5bf: V378 = 0x57b
0x5c2: THROWI V377
---
Entry stack: []
Stack pops: 0
Stack additions: [V355, S0, V358, V360, S0, V362, S0]
Exit stack: []

================================

Block 0x5c3
[0x5c3:0x660]
---
Predecessors: [0x52f]
Successors: [0x661]
---
0x5c3 PUSH1 0x0
0x5c5 DUP1
0x5c6 REVERT
0x5c7 JUMPDEST
0x5c8 DUP1
0x5c9 PUSH1 0x0
0x5cb DUP1
0x5cc PUSH2 0x100
0x5cf EXP
0x5d0 DUP2
0x5d1 SLOAD
0x5d2 DUP2
0x5d3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5e8 MUL
0x5e9 NOT
0x5ea AND
0x5eb SWAP1
0x5ec DUP4
0x5ed PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x602 AND
0x603 MUL
0x604 OR
0x605 SWAP1
0x606 SSTORE
0x607 POP
0x608 POP
0x609 JUMP
0x60a JUMPDEST
0x60b PUSH1 0x0
0x60d DUP1
0x60e SWAP1
0x60f SLOAD
0x610 SWAP1
0x611 PUSH2 0x100
0x614 EXP
0x615 SWAP1
0x616 DIV
0x617 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x62c AND
0x62d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x642 AND
0x643 CALLER
0x644 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x659 AND
0x65a EQ
0x65b ISZERO
0x65c ISZERO
0x65d PUSH2 0x619
0x660 JUMPI
---
0x5c3: V379 = 0x0
0x5c6: REVERT 0x0 0x0
0x5c7: JUMPDEST 
0x5c9: V380 = 0x0
0x5cc: V381 = 0x100
0x5cf: V382 = EXP 0x100 0x0
0x5d1: V383 = S[0x0]
0x5d3: V384 = 0xffffffffffffffffffffffffffffffffffffffff
0x5e8: V385 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x5e9: V386 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x5ea: V387 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V383
0x5ed: V388 = 0xffffffffffffffffffffffffffffffffffffffff
0x602: V389 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x603: V390 = MUL V389 0x1
0x604: V391 = OR V390 V387
0x606: S[0x0] = V391
0x609: JUMP S1
0x60a: JUMPDEST 
0x60b: V392 = 0x0
0x60f: V393 = S[0x0]
0x611: V394 = 0x100
0x614: V395 = EXP 0x100 0x0
0x616: V396 = DIV V393 0x1
0x617: V397 = 0xffffffffffffffffffffffffffffffffffffffff
0x62c: V398 = AND 0xffffffffffffffffffffffffffffffffffffffff V396
0x62d: V399 = 0xffffffffffffffffffffffffffffffffffffffff
0x642: V400 = AND 0xffffffffffffffffffffffffffffffffffffffff V398
0x643: V401 = CALLER
0x644: V402 = 0xffffffffffffffffffffffffffffffffffffffff
0x659: V403 = AND 0xffffffffffffffffffffffffffffffffffffffff V401
0x65a: V404 = EQ V403 V400
0x65b: V405 = ISZERO V404
0x65c: V406 = ISZERO V405
0x65d: V407 = 0x619
0x660: THROWI V406
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x661
[0x661:0x78c]
---
Predecessors: [0x5c3]
Successors: [0x78d]
---
0x661 PUSH1 0x0
0x663 DUP1
0x664 REVERT
0x665 JUMPDEST
0x666 DUP1
0x667 PUSH1 0x1
0x669 PUSH1 0x0
0x66b PUSH2 0x100
0x66e EXP
0x66f DUP2
0x670 SLOAD
0x671 DUP2
0x672 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x687 MUL
0x688 NOT
0x689 AND
0x68a SWAP1
0x68b DUP4
0x68c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a1 AND
0x6a2 MUL
0x6a3 OR
0x6a4 SWAP1
0x6a5 SSTORE
0x6a6 POP
0x6a7 POP
0x6a8 JUMP
0x6a9 JUMPDEST
0x6aa PUSH1 0x5
0x6ac PUSH1 0x0
0x6ae SWAP1
0x6af SLOAD
0x6b0 SWAP1
0x6b1 PUSH2 0x100
0x6b4 EXP
0x6b5 SWAP1
0x6b6 DIV
0x6b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6cc AND
0x6cd DUP2
0x6ce JUMP
0x6cf JUMPDEST
0x6d0 PUSH1 0x3
0x6d2 SLOAD
0x6d3 DUP2
0x6d4 JUMP
0x6d5 JUMPDEST
0x6d6 PUSH1 0x0
0x6d8 PUSH2 0x693
0x6db PUSH2 0x101f
0x6de JUMP
0x6df JUMPDEST
0x6e0 DUP5
0x6e1 DUP2
0x6e2 PUSH1 0x0
0x6e4 ADD
0x6e5 SWAP1
0x6e6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6fb AND
0x6fc SWAP1
0x6fd DUP2
0x6fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x713 AND
0x714 DUP2
0x715 MSTORE
0x716 POP
0x717 POP
0x718 DUP4
0x719 DUP2
0x71a PUSH1 0x20
0x71c ADD
0x71d DUP2
0x71e DUP2
0x71f MSTORE
0x720 POP
0x721 POP
0x722 PUSH2 0x6de
0x725 DUP2
0x726 PUSH2 0xa88
0x729 JUMP
0x72a JUMPDEST
0x72b PUSH1 0x1
0x72d SWAP2
0x72e POP
0x72f POP
0x730 SWAP4
0x731 SWAP3
0x732 POP
0x733 POP
0x734 POP
0x735 JUMP
0x736 JUMPDEST
0x737 PUSH1 0x0
0x739 DUP1
0x73a SWAP1
0x73b SLOAD
0x73c SWAP1
0x73d PUSH2 0x100
0x740 EXP
0x741 SWAP1
0x742 DIV
0x743 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x758 AND
0x759 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x76e AND
0x76f CALLER
0x770 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x785 AND
0x786 EQ
0x787 ISZERO
0x788 ISZERO
0x789 PUSH2 0x745
0x78c JUMPI
---
0x661: V408 = 0x0
0x664: REVERT 0x0 0x0
0x665: JUMPDEST 
0x667: V409 = 0x1
0x669: V410 = 0x0
0x66b: V411 = 0x100
0x66e: V412 = EXP 0x100 0x0
0x670: V413 = S[0x1]
0x672: V414 = 0xffffffffffffffffffffffffffffffffffffffff
0x687: V415 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x688: V416 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x689: V417 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V413
0x68c: V418 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a1: V419 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x6a2: V420 = MUL V419 0x1
0x6a3: V421 = OR V420 V417
0x6a5: S[0x1] = V421
0x6a8: JUMP S1
0x6a9: JUMPDEST 
0x6aa: V422 = 0x5
0x6ac: V423 = 0x0
0x6af: V424 = S[0x5]
0x6b1: V425 = 0x100
0x6b4: V426 = EXP 0x100 0x0
0x6b6: V427 = DIV V424 0x1
0x6b7: V428 = 0xffffffffffffffffffffffffffffffffffffffff
0x6cc: V429 = AND 0xffffffffffffffffffffffffffffffffffffffff V427
0x6ce: JUMP S0
0x6cf: JUMPDEST 
0x6d0: V430 = 0x3
0x6d2: V431 = S[0x3]
0x6d4: JUMP S0
0x6d5: JUMPDEST 
0x6d6: V432 = 0x0
0x6d8: V433 = 0x693
0x6db: V434 = 0x101f
0x6de: THROW 
0x6df: JUMPDEST 
0x6e2: V435 = 0x0
0x6e4: V436 = ADD 0x0 S0
0x6e6: V437 = 0xffffffffffffffffffffffffffffffffffffffff
0x6fb: V438 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x6fe: V439 = 0xffffffffffffffffffffffffffffffffffffffff
0x713: V440 = AND 0xffffffffffffffffffffffffffffffffffffffff V438
0x715: M[V436] = V440
0x71a: V441 = 0x20
0x71c: V442 = ADD 0x20 S0
0x71f: M[V442] = S3
0x722: V443 = 0x6de
0x726: V444 = 0xa88
0x729: THROW 
0x72a: JUMPDEST 
0x72b: V445 = 0x1
0x735: JUMP S5
0x736: JUMPDEST 
0x737: V446 = 0x0
0x73b: V447 = S[0x0]
0x73d: V448 = 0x100
0x740: V449 = EXP 0x100 0x0
0x742: V450 = DIV V447 0x1
0x743: V451 = 0xffffffffffffffffffffffffffffffffffffffff
0x758: V452 = AND 0xffffffffffffffffffffffffffffffffffffffff V450
0x759: V453 = 0xffffffffffffffffffffffffffffffffffffffff
0x76e: V454 = AND 0xffffffffffffffffffffffffffffffffffffffff V452
0x76f: V455 = CALLER
0x770: V456 = 0xffffffffffffffffffffffffffffffffffffffff
0x785: V457 = AND 0xffffffffffffffffffffffffffffffffffffffff V455
0x786: V458 = EQ V457 V454
0x787: V459 = ISZERO V458
0x788: V460 = ISZERO V459
0x789: V461 = 0x745
0x78c: THROWI V460
---
Entry stack: []
Stack pops: 0
Stack additions: [V429, S0, V431, S0, 0x693, 0x0, S0, 0x6de, S0, S1, S2, S3, S4, 0x1]
Exit stack: []

================================

Block 0x78d
[0x78d:0x843]
---
Predecessors: [0x661]
Successors: [0x844]
---
0x78d PUSH1 0x0
0x78f DUP1
0x790 REVERT
0x791 JUMPDEST
0x792 PUSH1 0x1
0x794 PUSH1 0xb
0x796 PUSH1 0x0
0x798 DUP5
0x799 DUP2
0x79a MSTORE
0x79b PUSH1 0x20
0x79d ADD
0x79e SWAP1
0x79f DUP2
0x7a0 MSTORE
0x7a1 PUSH1 0x20
0x7a3 ADD
0x7a4 PUSH1 0x0
0x7a6 SHA3
0x7a7 PUSH1 0x0
0x7a9 PUSH2 0x100
0x7ac EXP
0x7ad DUP2
0x7ae SLOAD
0x7af DUP2
0x7b0 PUSH1 0xff
0x7b2 MUL
0x7b3 NOT
0x7b4 AND
0x7b5 SWAP1
0x7b6 DUP4
0x7b7 ISZERO
0x7b8 ISZERO
0x7b9 MUL
0x7ba OR
0x7bb SWAP1
0x7bc SSTORE
0x7bd POP
0x7be DUP1
0x7bf PUSH1 0xc
0x7c1 PUSH1 0x0
0x7c3 DUP5
0x7c4 DUP2
0x7c5 MSTORE
0x7c6 PUSH1 0x20
0x7c8 ADD
0x7c9 SWAP1
0x7ca DUP2
0x7cb MSTORE
0x7cc PUSH1 0x20
0x7ce ADD
0x7cf PUSH1 0x0
0x7d1 SHA3
0x7d2 DUP2
0x7d3 SWAP1
0x7d4 SSTORE
0x7d5 POP
0x7d6 POP
0x7d7 POP
0x7d8 JUMP
0x7d9 JUMPDEST
0x7da PUSH1 0x8
0x7dc PUSH1 0x0
0x7de SWAP1
0x7df SLOAD
0x7e0 SWAP1
0x7e1 PUSH2 0x100
0x7e4 EXP
0x7e5 SWAP1
0x7e6 DIV
0x7e7 PUSH1 0xff
0x7e9 AND
0x7ea DUP2
0x7eb JUMP
0x7ec JUMPDEST
0x7ed PUSH1 0x0
0x7ef DUP1
0x7f0 PUSH1 0x0
0x7f2 SWAP1
0x7f3 SLOAD
0x7f4 SWAP1
0x7f5 PUSH2 0x100
0x7f8 EXP
0x7f9 SWAP1
0x7fa DIV
0x7fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x810 AND
0x811 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x826 AND
0x827 CALLER
0x828 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x83d AND
0x83e EQ
0x83f DUP1
0x840 PUSH2 0x84a
0x843 JUMPI
---
0x78d: V462 = 0x0
0x790: REVERT 0x0 0x0
0x791: JUMPDEST 
0x792: V463 = 0x1
0x794: V464 = 0xb
0x796: V465 = 0x0
0x79a: M[0x0] = S1
0x79b: V466 = 0x20
0x79d: V467 = ADD 0x20 0x0
0x7a0: M[0x20] = 0xb
0x7a1: V468 = 0x20
0x7a3: V469 = ADD 0x20 0x20
0x7a4: V470 = 0x0
0x7a6: V471 = SHA3 0x0 0x40
0x7a7: V472 = 0x0
0x7a9: V473 = 0x100
0x7ac: V474 = EXP 0x100 0x0
0x7ae: V475 = S[V471]
0x7b0: V476 = 0xff
0x7b2: V477 = MUL 0xff 0x1
0x7b3: V478 = NOT 0xff
0x7b4: V479 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V475
0x7b7: V480 = ISZERO 0x1
0x7b8: V481 = ISZERO 0x0
0x7b9: V482 = MUL 0x1 0x1
0x7ba: V483 = OR 0x1 V479
0x7bc: S[V471] = V483
0x7bf: V484 = 0xc
0x7c1: V485 = 0x0
0x7c5: M[0x0] = S1
0x7c6: V486 = 0x20
0x7c8: V487 = ADD 0x20 0x0
0x7cb: M[0x20] = 0xc
0x7cc: V488 = 0x20
0x7ce: V489 = ADD 0x20 0x20
0x7cf: V490 = 0x0
0x7d1: V491 = SHA3 0x0 0x40
0x7d4: S[V491] = S0
0x7d8: JUMP S2
0x7d9: JUMPDEST 
0x7da: V492 = 0x8
0x7dc: V493 = 0x0
0x7df: V494 = S[0x8]
0x7e1: V495 = 0x100
0x7e4: V496 = EXP 0x100 0x0
0x7e6: V497 = DIV V494 0x1
0x7e7: V498 = 0xff
0x7e9: V499 = AND 0xff V497
0x7eb: JUMP S0
0x7ec: JUMPDEST 
0x7ed: V500 = 0x0
0x7f0: V501 = 0x0
0x7f3: V502 = S[0x0]
0x7f5: V503 = 0x100
0x7f8: V504 = EXP 0x100 0x0
0x7fa: V505 = DIV V502 0x1
0x7fb: V506 = 0xffffffffffffffffffffffffffffffffffffffff
0x810: V507 = AND 0xffffffffffffffffffffffffffffffffffffffff V505
0x811: V508 = 0xffffffffffffffffffffffffffffffffffffffff
0x826: V509 = AND 0xffffffffffffffffffffffffffffffffffffffff V507
0x827: V510 = CALLER
0x828: V511 = 0xffffffffffffffffffffffffffffffffffffffff
0x83d: V512 = AND 0xffffffffffffffffffffffffffffffffffffffff V510
0x83e: V513 = EQ V512 V509
0x840: V514 = 0x84a
0x843: THROWI V513
---
Entry stack: []
Stack pops: 0
Stack additions: [V499, S0, V513, 0x0]
Exit stack: []

================================

Block 0x844
[0x844:0x895]
---
Predecessors: [0x78d]
Successors: [0x896]
---
0x844 POP
0x845 PUSH1 0x1
0x847 PUSH1 0x0
0x849 SWAP1
0x84a SLOAD
0x84b SWAP1
0x84c PUSH2 0x100
0x84f EXP
0x850 SWAP1
0x851 DIV
0x852 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x867 AND
0x868 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x87d AND
0x87e CALLER
0x87f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x894 AND
0x895 EQ
---
0x845: V515 = 0x1
0x847: V516 = 0x0
0x84a: V517 = S[0x1]
0x84c: V518 = 0x100
0x84f: V519 = EXP 0x100 0x0
0x851: V520 = DIV V517 0x1
0x852: V521 = 0xffffffffffffffffffffffffffffffffffffffff
0x867: V522 = AND 0xffffffffffffffffffffffffffffffffffffffff V520
0x868: V523 = 0xffffffffffffffffffffffffffffffffffffffff
0x87d: V524 = AND 0xffffffffffffffffffffffffffffffffffffffff V522
0x87e: V525 = CALLER
0x87f: V526 = 0xffffffffffffffffffffffffffffffffffffffff
0x894: V527 = AND 0xffffffffffffffffffffffffffffffffffffffff V525
0x895: V528 = EQ V527 V524
---
Entry stack: [0x0, V513]
Stack pops: 1
Stack additions: [V528]
Exit stack: [0x0, V528]

================================

Block 0x896
[0x896:0x89c]
---
Predecessors: [0x844]
Successors: [0x89d]
---
0x896 JUMPDEST
0x897 ISZERO
0x898 ISZERO
0x899 PUSH2 0x855
0x89c JUMPI
---
0x896: JUMPDEST 
0x897: V529 = ISZERO V528
0x898: V530 = ISZERO V529
0x899: V531 = 0x855
0x89c: THROWI V530
---
Entry stack: [0x0, V528]
Stack pops: 1
Stack additions: []
Exit stack: [0x0]

================================

Block 0x89d
[0x89d:0x9ab]
---
Predecessors: [0x896]
Successors: [0x9ac]
---
0x89d PUSH1 0x0
0x89f DUP1
0x8a0 REVERT
0x8a1 JUMPDEST
0x8a2 PUSH1 0x2
0x8a4 SLOAD
0x8a5 SWAP1
0x8a6 POP
0x8a7 PUSH1 0x0
0x8a9 PUSH1 0x2
0x8ab DUP2
0x8ac SWAP1
0x8ad SSTORE
0x8ae POP
0x8af PUSH2 0x877
0x8b2 DUP2
0x8b3 PUSH1 0x4
0x8b5 SLOAD
0x8b6 PUSH2 0xc8d
0x8b9 SWAP1
0x8ba SWAP2
0x8bb SWAP1
0x8bc PUSH4 0xffffffff
0x8c1 AND
0x8c2 JUMP
0x8c3 JUMPDEST
0x8c4 PUSH1 0x4
0x8c6 DUP2
0x8c7 SWAP1
0x8c8 SSTORE
0x8c9 POP
0x8ca PUSH1 0xa
0x8cc PUSH1 0x0
0x8ce SWAP1
0x8cf SLOAD
0x8d0 SWAP1
0x8d1 PUSH2 0x100
0x8d4 EXP
0x8d5 SWAP1
0x8d6 DIV
0x8d7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8ec AND
0x8ed PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x902 AND
0x903 PUSH4 0xa9059cbb
0x908 PUSH1 0x1
0x90a PUSH1 0x0
0x90c SWAP1
0x90d SLOAD
0x90e SWAP1
0x90f PUSH2 0x100
0x912 EXP
0x913 SWAP1
0x914 DIV
0x915 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x92a AND
0x92b DUP4
0x92c PUSH1 0x40
0x92e MLOAD
0x92f DUP4
0x930 PUSH4 0xffffffff
0x935 AND
0x936 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x954 MUL
0x955 DUP2
0x956 MSTORE
0x957 PUSH1 0x4
0x959 ADD
0x95a DUP1
0x95b DUP4
0x95c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x971 AND
0x972 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x987 AND
0x988 DUP2
0x989 MSTORE
0x98a PUSH1 0x20
0x98c ADD
0x98d DUP3
0x98e DUP2
0x98f MSTORE
0x990 PUSH1 0x20
0x992 ADD
0x993 SWAP3
0x994 POP
0x995 POP
0x996 POP
0x997 PUSH1 0x20
0x999 PUSH1 0x40
0x99b MLOAD
0x99c DUP1
0x99d DUP4
0x99e SUB
0x99f DUP2
0x9a0 PUSH1 0x0
0x9a2 DUP8
0x9a3 DUP1
0x9a4 EXTCODESIZE
0x9a5 ISZERO
0x9a6 DUP1
0x9a7 ISZERO
0x9a8 PUSH2 0x964
0x9ab JUMPI
---
0x89d: V532 = 0x0
0x8a0: REVERT 0x0 0x0
0x8a1: JUMPDEST 
0x8a2: V533 = 0x2
0x8a4: V534 = S[0x2]
0x8a7: V535 = 0x0
0x8a9: V536 = 0x2
0x8ad: S[0x2] = 0x0
0x8af: V537 = 0x877
0x8b3: V538 = 0x4
0x8b5: V539 = S[0x4]
0x8b6: V540 = 0xc8d
0x8bc: V541 = 0xffffffff
0x8c1: V542 = AND 0xffffffff 0xc8d
0x8c2: THROW 
0x8c3: JUMPDEST 
0x8c4: V543 = 0x4
0x8c8: S[0x4] = S0
0x8ca: V544 = 0xa
0x8cc: V545 = 0x0
0x8cf: V546 = S[0xa]
0x8d1: V547 = 0x100
0x8d4: V548 = EXP 0x100 0x0
0x8d6: V549 = DIV V546 0x1
0x8d7: V550 = 0xffffffffffffffffffffffffffffffffffffffff
0x8ec: V551 = AND 0xffffffffffffffffffffffffffffffffffffffff V549
0x8ed: V552 = 0xffffffffffffffffffffffffffffffffffffffff
0x902: V553 = AND 0xffffffffffffffffffffffffffffffffffffffff V551
0x903: V554 = 0xa9059cbb
0x908: V555 = 0x1
0x90a: V556 = 0x0
0x90d: V557 = S[0x1]
0x90f: V558 = 0x100
0x912: V559 = EXP 0x100 0x0
0x914: V560 = DIV V557 0x1
0x915: V561 = 0xffffffffffffffffffffffffffffffffffffffff
0x92a: V562 = AND 0xffffffffffffffffffffffffffffffffffffffff V560
0x92c: V563 = 0x40
0x92e: V564 = M[0x40]
0x930: V565 = 0xffffffff
0x935: V566 = AND 0xffffffff 0xa9059cbb
0x936: V567 = 0x100000000000000000000000000000000000000000000000000000000
0x954: V568 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x956: M[V564] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x957: V569 = 0x4
0x959: V570 = ADD 0x4 V564
0x95c: V571 = 0xffffffffffffffffffffffffffffffffffffffff
0x971: V572 = AND 0xffffffffffffffffffffffffffffffffffffffff V562
0x972: V573 = 0xffffffffffffffffffffffffffffffffffffffff
0x987: V574 = AND 0xffffffffffffffffffffffffffffffffffffffff V572
0x989: M[V570] = V574
0x98a: V575 = 0x20
0x98c: V576 = ADD 0x20 V570
0x98f: M[V576] = S1
0x990: V577 = 0x20
0x992: V578 = ADD 0x20 V576
0x997: V579 = 0x20
0x999: V580 = 0x40
0x99b: V581 = M[0x40]
0x99e: V582 = SUB V578 V581
0x9a0: V583 = 0x0
0x9a4: V584 = EXTCODESIZE V553
0x9a5: V585 = ISZERO V584
0x9a7: V586 = ISZERO V585
0x9a8: V587 = 0x964
0x9ab: THROWI V586
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: [V534, V539, 0x877, V534, V585, V553, 0x0, V581, V582, V581, 0x20, V578, 0xa9059cbb, V553, S1]
Exit stack: []

================================

Block 0x9ac
[0x9ac:0x9ba]
---
Predecessors: [0x89d]
Successors: [0x9bb]
---
0x9ac PUSH1 0x0
0x9ae DUP1
0x9af REVERT
0x9b0 JUMPDEST
0x9b1 POP
0x9b2 GAS
0x9b3 CALL
0x9b4 ISZERO
0x9b5 DUP1
0x9b6 ISZERO
0x9b7 PUSH2 0x978
0x9ba JUMPI
---
0x9ac: V588 = 0x0
0x9af: REVERT 0x0 0x0
0x9b0: JUMPDEST 
0x9b2: V589 = GAS
0x9b3: V590 = CALL V589 S1 S2 S3 S4 S5 S6
0x9b4: V591 = ISZERO V590
0x9b6: V592 = ISZERO V591
0x9b7: V593 = 0x978
0x9ba: THROWI V592
---
Entry stack: [S10, V553, 0xa9059cbb, V578, 0x20, V581, V582, V581, 0x0, V553, V585]
Stack pops: 0
Stack additions: [V591]
Exit stack: []

================================

Block 0x9bb
[0x9bb:0x9d5]
---
Predecessors: [0x9ac]
Successors: [0x9d6]
---
0x9bb RETURNDATASIZE
0x9bc PUSH1 0x0
0x9be DUP1
0x9bf RETURNDATACOPY
0x9c0 RETURNDATASIZE
0x9c1 PUSH1 0x0
0x9c3 REVERT
0x9c4 JUMPDEST
0x9c5 POP
0x9c6 POP
0x9c7 POP
0x9c8 POP
0x9c9 PUSH1 0x40
0x9cb MLOAD
0x9cc RETURNDATASIZE
0x9cd PUSH1 0x20
0x9cf DUP2
0x9d0 LT
0x9d1 ISZERO
0x9d2 PUSH2 0x98e
0x9d5 JUMPI
---
0x9bb: V594 = RETURNDATASIZE
0x9bc: V595 = 0x0
0x9bf: RETURNDATACOPY 0x0 0x0 V594
0x9c0: V596 = RETURNDATASIZE
0x9c1: V597 = 0x0
0x9c3: REVERT 0x0 V596
0x9c4: JUMPDEST 
0x9c9: V598 = 0x40
0x9cb: V599 = M[0x40]
0x9cc: V600 = RETURNDATASIZE
0x9cd: V601 = 0x20
0x9d0: V602 = LT V600 0x20
0x9d1: V603 = ISZERO V602
0x9d2: V604 = 0x98e
0x9d5: THROWI V603
---
Entry stack: [V591]
Stack pops: 0
Stack additions: [V600, V599]
Exit stack: []

================================

Block 0x9d6
[0x9d6:0xa84]
---
Predecessors: [0x9bb]
Successors: [0xa85]
---
0x9d6 PUSH1 0x0
0x9d8 DUP1
0x9d9 REVERT
0x9da JUMPDEST
0x9db DUP2
0x9dc ADD
0x9dd SWAP1
0x9de DUP1
0x9df DUP1
0x9e0 MLOAD
0x9e1 SWAP1
0x9e2 PUSH1 0x20
0x9e4 ADD
0x9e5 SWAP1
0x9e6 SWAP3
0x9e7 SWAP2
0x9e8 SWAP1
0x9e9 POP
0x9ea POP
0x9eb POP
0x9ec POP
0x9ed PUSH32 0x95a874a43e2b35cd8dd5c26d75b8c95ea2cd8152f17d40ac971f7844a976f051
0xa0e TIMESTAMP
0xa0f DUP3
0xa10 PUSH1 0x40
0xa12 MLOAD
0xa13 DUP1
0xa14 DUP4
0xa15 DUP2
0xa16 MSTORE
0xa17 PUSH1 0x20
0xa19 ADD
0xa1a DUP3
0xa1b DUP2
0xa1c MSTORE
0xa1d PUSH1 0x20
0xa1f ADD
0xa20 SWAP3
0xa21 POP
0xa22 POP
0xa23 POP
0xa24 PUSH1 0x40
0xa26 MLOAD
0xa27 DUP1
0xa28 SWAP2
0xa29 SUB
0xa2a SWAP1
0xa2b LOG1
0xa2c POP
0xa2d JUMP
0xa2e JUMPDEST
0xa2f PUSH1 0x0
0xa31 DUP1
0xa32 SWAP1
0xa33 SLOAD
0xa34 SWAP1
0xa35 PUSH2 0x100
0xa38 EXP
0xa39 SWAP1
0xa3a DIV
0xa3b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa50 AND
0xa51 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa66 AND
0xa67 CALLER
0xa68 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa7d AND
0xa7e EQ
0xa7f ISZERO
0xa80 ISZERO
0xa81 PUSH2 0xa3d
0xa84 JUMPI
---
0x9d6: V605 = 0x0
0x9d9: REVERT 0x0 0x0
0x9da: JUMPDEST 
0x9dc: V606 = ADD S1 S0
0x9e0: V607 = M[S1]
0x9e2: V608 = 0x20
0x9e4: V609 = ADD 0x20 S1
0x9ed: V610 = 0x95a874a43e2b35cd8dd5c26d75b8c95ea2cd8152f17d40ac971f7844a976f051
0xa0e: V611 = TIMESTAMP
0xa10: V612 = 0x40
0xa12: V613 = M[0x40]
0xa16: M[V613] = V611
0xa17: V614 = 0x20
0xa19: V615 = ADD 0x20 V613
0xa1c: M[V615] = S2
0xa1d: V616 = 0x20
0xa1f: V617 = ADD 0x20 V615
0xa24: V618 = 0x40
0xa26: V619 = M[0x40]
0xa29: V620 = SUB V617 V619
0xa2b: LOG V619 V620 0x95a874a43e2b35cd8dd5c26d75b8c95ea2cd8152f17d40ac971f7844a976f051
0xa2d: JUMP S3
0xa2e: JUMPDEST 
0xa2f: V621 = 0x0
0xa33: V622 = S[0x0]
0xa35: V623 = 0x100
0xa38: V624 = EXP 0x100 0x0
0xa3a: V625 = DIV V622 0x1
0xa3b: V626 = 0xffffffffffffffffffffffffffffffffffffffff
0xa50: V627 = AND 0xffffffffffffffffffffffffffffffffffffffff V625
0xa51: V628 = 0xffffffffffffffffffffffffffffffffffffffff
0xa66: V629 = AND 0xffffffffffffffffffffffffffffffffffffffff V627
0xa67: V630 = CALLER
0xa68: V631 = 0xffffffffffffffffffffffffffffffffffffffff
0xa7d: V632 = AND 0xffffffffffffffffffffffffffffffffffffffff V630
0xa7e: V633 = EQ V632 V629
0xa7f: V634 = ISZERO V633
0xa80: V635 = ISZERO V634
0xa81: V636 = 0xa3d
0xa84: THROWI V635
---
Entry stack: [V599, V600]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa85
[0xa85:0xaf5]
---
Predecessors: [0x9d6]
Successors: [0xaf6]
---
0xa85 PUSH1 0x0
0xa87 DUP1
0xa88 REVERT
0xa89 JUMPDEST
0xa8a PUSH1 0x0
0xa8c PUSH1 0xb
0xa8e PUSH1 0x0
0xa90 DUP4
0xa91 DUP2
0xa92 MSTORE
0xa93 PUSH1 0x20
0xa95 ADD
0xa96 SWAP1
0xa97 DUP2
0xa98 MSTORE
0xa99 PUSH1 0x20
0xa9b ADD
0xa9c PUSH1 0x0
0xa9e SHA3
0xa9f PUSH1 0x0
0xaa1 PUSH2 0x100
0xaa4 EXP
0xaa5 DUP2
0xaa6 SLOAD
0xaa7 DUP2
0xaa8 PUSH1 0xff
0xaaa MUL
0xaab NOT
0xaac AND
0xaad SWAP1
0xaae DUP4
0xaaf ISZERO
0xab0 ISZERO
0xab1 MUL
0xab2 OR
0xab3 SWAP1
0xab4 SSTORE
0xab5 POP
0xab6 PUSH4 0x131dc00
0xabb PUSH1 0xc
0xabd PUSH1 0x0
0xabf DUP4
0xac0 DUP2
0xac1 MSTORE
0xac2 PUSH1 0x20
0xac4 ADD
0xac5 SWAP1
0xac6 DUP2
0xac7 MSTORE
0xac8 PUSH1 0x20
0xaca ADD
0xacb PUSH1 0x0
0xacd SHA3
0xace DUP2
0xacf SWAP1
0xad0 SSTORE
0xad1 POP
0xad2 POP
0xad3 JUMP
0xad4 JUMPDEST
0xad5 PUSH1 0x0
0xad7 DUP1
0xad8 PUSH1 0x0
0xada DUP1
0xadb PUSH1 0x0
0xadd DUP1
0xade PUSH1 0x0
0xae0 PUSH1 0x8
0xae2 PUSH1 0x0
0xae4 SWAP1
0xae5 SLOAD
0xae6 SWAP1
0xae7 PUSH2 0x100
0xaea EXP
0xaeb SWAP1
0xaec DIV
0xaed PUSH1 0xff
0xaef AND
0xaf0 ISZERO
0xaf1 ISZERO
0xaf2 PUSH2 0xaae
0xaf5 JUMPI
---
0xa85: V637 = 0x0
0xa88: REVERT 0x0 0x0
0xa89: JUMPDEST 
0xa8a: V638 = 0x0
0xa8c: V639 = 0xb
0xa8e: V640 = 0x0
0xa92: M[0x0] = S0
0xa93: V641 = 0x20
0xa95: V642 = ADD 0x20 0x0
0xa98: M[0x20] = 0xb
0xa99: V643 = 0x20
0xa9b: V644 = ADD 0x20 0x20
0xa9c: V645 = 0x0
0xa9e: V646 = SHA3 0x0 0x40
0xa9f: V647 = 0x0
0xaa1: V648 = 0x100
0xaa4: V649 = EXP 0x100 0x0
0xaa6: V650 = S[V646]
0xaa8: V651 = 0xff
0xaaa: V652 = MUL 0xff 0x1
0xaab: V653 = NOT 0xff
0xaac: V654 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V650
0xaaf: V655 = ISZERO 0x0
0xab0: V656 = ISZERO 0x1
0xab1: V657 = MUL 0x0 0x1
0xab2: V658 = OR 0x0 V654
0xab4: S[V646] = V658
0xab6: V659 = 0x131dc00
0xabb: V660 = 0xc
0xabd: V661 = 0x0
0xac1: M[0x0] = S0
0xac2: V662 = 0x20
0xac4: V663 = ADD 0x20 0x0
0xac7: M[0x20] = 0xc
0xac8: V664 = 0x20
0xaca: V665 = ADD 0x20 0x20
0xacb: V666 = 0x0
0xacd: V667 = SHA3 0x0 0x40
0xad0: S[V667] = 0x131dc00
0xad3: JUMP S1
0xad4: JUMPDEST 
0xad5: V668 = 0x0
0xad8: V669 = 0x0
0xadb: V670 = 0x0
0xade: V671 = 0x0
0xae0: V672 = 0x8
0xae2: V673 = 0x0
0xae5: V674 = S[0x8]
0xae7: V675 = 0x100
0xaea: V676 = EXP 0x100 0x0
0xaec: V677 = DIV V674 0x1
0xaed: V678 = 0xff
0xaef: V679 = AND 0xff V677
0xaf0: V680 = ISZERO V679
0xaf1: V681 = ISZERO V680
0xaf2: V682 = 0xaae
0xaf5: THROWI V681
---
Entry stack: []
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: []

================================

Block 0xaf6
[0xaf6:0xb09]
---
Predecessors: [0xa85]
Successors: [0xb0a]
---
0xaf6 PUSH1 0x0
0xaf8 DUP1
0xaf9 REVERT
0xafa JUMPDEST
0xafb PUSH2 0xab7
0xafe CALLER
0xaff PUSH2 0xca6
0xb02 JUMP
0xb03 JUMPDEST
0xb04 ISZERO
0xb05 ISZERO
0xb06 PUSH2 0xac2
0xb09 JUMPI
---
0xaf6: V683 = 0x0
0xaf9: REVERT 0x0 0x0
0xafa: JUMPDEST 
0xafb: V684 = 0xab7
0xafe: V685 = CALLER
0xaff: V686 = 0xca6
0xb02: THROW 
0xb03: JUMPDEST 
0xb04: V687 = ISZERO S0
0xb05: V688 = ISZERO V687
0xb06: V689 = 0xac2
0xb09: THROWI V688
---
Entry stack: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V685, 0xab7]
Exit stack: []

================================

Block 0xb0a
[0xb0a:0xb39]
---
Predecessors: [0xaf6]
Successors: [0xb3a]
---
0xb0a PUSH1 0x0
0xb0c DUP1
0xb0d REVERT
0xb0e JUMPDEST
0xb0f PUSH1 0xb
0xb11 PUSH1 0x0
0xb13 DUP10
0xb14 PUSH1 0x20
0xb16 ADD
0xb17 MLOAD
0xb18 DUP2
0xb19 MSTORE
0xb1a PUSH1 0x20
0xb1c ADD
0xb1d SWAP1
0xb1e DUP2
0xb1f MSTORE
0xb20 PUSH1 0x20
0xb22 ADD
0xb23 PUSH1 0x0
0xb25 SHA3
0xb26 PUSH1 0x0
0xb28 SWAP1
0xb29 SLOAD
0xb2a SWAP1
0xb2b PUSH2 0x100
0xb2e EXP
0xb2f SWAP1
0xb30 DIV
0xb31 PUSH1 0xff
0xb33 AND
0xb34 ISZERO
0xb35 ISZERO
0xb36 PUSH2 0xaf2
0xb39 JUMPI
---
0xb0a: V690 = 0x0
0xb0d: REVERT 0x0 0x0
0xb0e: JUMPDEST 
0xb0f: V691 = 0xb
0xb11: V692 = 0x0
0xb14: V693 = 0x20
0xb16: V694 = ADD 0x20 S7
0xb17: V695 = M[V694]
0xb19: M[0x0] = V695
0xb1a: V696 = 0x20
0xb1c: V697 = ADD 0x20 0x0
0xb1f: M[0x20] = 0xb
0xb20: V698 = 0x20
0xb22: V699 = ADD 0x20 0x20
0xb23: V700 = 0x0
0xb25: V701 = SHA3 0x0 0x40
0xb26: V702 = 0x0
0xb29: V703 = S[V701]
0xb2b: V704 = 0x100
0xb2e: V705 = EXP 0x100 0x0
0xb30: V706 = DIV V703 0x1
0xb31: V707 = 0xff
0xb33: V708 = AND 0xff V706
0xb34: V709 = ISZERO V708
0xb35: V710 = ISZERO V709
0xb36: V711 = 0xaf2
0xb39: THROWI V710
---
Entry stack: []
Stack pops: 0
Stack additions: [S0, S1, S2, S3, S4, S5, S6, S7]
Exit stack: []

================================

Block 0xb3a
[0xb3a:0xb48]
---
Predecessors: [0xb0a]
Successors: [0xb49]
---
0xb3a PUSH1 0x0
0xb3c DUP1
0xb3d REVERT
0xb3e JUMPDEST
0xb3f PUSH1 0x7
0xb41 SLOAD
0xb42 TIMESTAMP
0xb43 GT
0xb44 ISZERO
0xb45 PUSH2 0xb05
0xb48 JUMPI
---
0xb3a: V712 = 0x0
0xb3d: REVERT 0x0 0x0
0xb3e: JUMPDEST 
0xb3f: V713 = 0x7
0xb41: V714 = S[0x7]
0xb42: V715 = TIMESTAMP
0xb43: V716 = GT V715 V714
0xb44: V717 = ISZERO V716
0xb45: V718 = 0xb05
0xb48: THROWI V717
---
Entry stack: [S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb49
[0xb49:0xb50]
---
Predecessors: [0xb3a]
Successors: [0xb51]
---
0xb49 PUSH2 0xb04
0xb4c PUSH2 0xd00
0xb4f JUMP
0xb50 JUMPDEST
---
0xb49: V719 = 0xb04
0xb4c: V720 = 0xd00
0xb4f: THROW 
0xb50: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: [0xb04]
Exit stack: []

================================

Block 0xb51
[0xb51:0xce5]
---
Predecessors: [0xb49]
Successors: [0xce6]
---
0xb51 JUMPDEST
0xb52 DUP8
0xb53 PUSH1 0x0
0xb55 ADD
0xb56 MLOAD
0xb57 SWAP7
0xb58 POP
0xb59 DUP8
0xb5a PUSH1 0x20
0xb5c ADD
0xb5d MLOAD
0xb5e SWAP6
0xb5f POP
0xb60 TIMESTAMP
0xb61 SWAP5
0xb62 POP
0xb63 PUSH1 0xc
0xb65 PUSH1 0x0
0xb67 DUP10
0xb68 PUSH1 0x20
0xb6a ADD
0xb6b MLOAD
0xb6c DUP2
0xb6d MSTORE
0xb6e PUSH1 0x20
0xb70 ADD
0xb71 SWAP1
0xb72 DUP2
0xb73 MSTORE
0xb74 PUSH1 0x20
0xb76 ADD
0xb77 PUSH1 0x0
0xb79 SHA3
0xb7a SLOAD
0xb7b SWAP4
0xb7c POP
0xb7d PUSH2 0xb43
0xb80 DUP5
0xb81 DUP7
0xb82 PUSH2 0xfe6
0xb85 SWAP1
0xb86 SWAP2
0xb87 SWAP1
0xb88 PUSH4 0xffffffff
0xb8d AND
0xb8e JUMP
0xb8f JUMPDEST
0xb90 SWAP3
0xb91 POP
0xb92 DUP5
0xb93 PUSH1 0x6
0xb95 DUP2
0xb96 SWAP1
0xb97 SSTORE
0xb98 POP
0xb99 DUP3
0xb9a PUSH1 0x7
0xb9c DUP2
0xb9d SWAP1
0xb9e SSTORE
0xb9f POP
0xba0 DUP7
0xba1 PUSH1 0x5
0xba3 PUSH1 0x0
0xba5 PUSH2 0x100
0xba8 EXP
0xba9 DUP2
0xbaa SLOAD
0xbab DUP2
0xbac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbc1 MUL
0xbc2 NOT
0xbc3 AND
0xbc4 SWAP1
0xbc5 DUP4
0xbc6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbdb AND
0xbdc MUL
0xbdd OR
0xbde SWAP1
0xbdf SSTORE
0xbe0 POP
0xbe1 PUSH2 0xba9
0xbe4 DUP7
0xbe5 PUSH1 0x4
0xbe7 SLOAD
0xbe8 PUSH2 0xfe6
0xbeb SWAP1
0xbec SWAP2
0xbed SWAP1
0xbee PUSH4 0xffffffff
0xbf3 AND
0xbf4 JUMP
0xbf5 JUMPDEST
0xbf6 PUSH1 0x4
0xbf8 DUP2
0xbf9 SWAP1
0xbfa SSTORE
0xbfb POP
0xbfc PUSH2 0xbc3
0xbff PUSH1 0x64
0xc01 DUP8
0xc02 PUSH2 0x1004
0xc05 SWAP1
0xc06 SWAP2
0xc07 SWAP1
0xc08 PUSH4 0xffffffff
0xc0d AND
0xc0e JUMP
0xc0f JUMPDEST
0xc10 SWAP2
0xc11 POP
0xc12 PUSH2 0xbd8
0xc15 DUP3
0xc16 DUP8
0xc17 PUSH2 0xc8d
0xc1a SWAP1
0xc1b SWAP2
0xc1c SWAP1
0xc1d PUSH4 0xffffffff
0xc22 AND
0xc23 JUMP
0xc24 JUMPDEST
0xc25 SWAP1
0xc26 POP
0xc27 PUSH2 0xbef
0xc2a DUP3
0xc2b PUSH1 0x2
0xc2d SLOAD
0xc2e PUSH2 0xfe6
0xc31 SWAP1
0xc32 SWAP2
0xc33 SWAP1
0xc34 PUSH4 0xffffffff
0xc39 AND
0xc3a JUMP
0xc3b JUMPDEST
0xc3c PUSH1 0x2
0xc3e DUP2
0xc3f SWAP1
0xc40 SSTORE
0xc41 POP
0xc42 PUSH2 0xc0a
0xc45 DUP2
0xc46 PUSH1 0x3
0xc48 SLOAD
0xc49 PUSH2 0xfe6
0xc4c SWAP1
0xc4d SWAP2
0xc4e SWAP1
0xc4f PUSH4 0xffffffff
0xc54 AND
0xc55 JUMP
0xc56 JUMPDEST
0xc57 PUSH1 0x3
0xc59 DUP2
0xc5a SWAP1
0xc5b SSTORE
0xc5c POP
0xc5d PUSH32 0xf6dbe9ed7a14e9a58a34b1833a363a95a7d19a785c6657b8aeea89c18b80752b
0xc7e DUP8
0xc7f DUP8
0xc80 DUP6
0xc81 PUSH1 0x40
0xc83 MLOAD
0xc84 DUP1
0xc85 DUP5
0xc86 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc9b AND
0xc9c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcb1 AND
0xcb2 DUP2
0xcb3 MSTORE
0xcb4 PUSH1 0x20
0xcb6 ADD
0xcb7 DUP4
0xcb8 DUP2
0xcb9 MSTORE
0xcba PUSH1 0x20
0xcbc ADD
0xcbd DUP3
0xcbe DUP2
0xcbf MSTORE
0xcc0 PUSH1 0x20
0xcc2 ADD
0xcc3 SWAP4
0xcc4 POP
0xcc5 POP
0xcc6 POP
0xcc7 POP
0xcc8 PUSH1 0x40
0xcca MLOAD
0xccb DUP1
0xccc SWAP2
0xccd SUB
0xcce SWAP1
0xccf LOG1
0xcd0 POP
0xcd1 POP
0xcd2 POP
0xcd3 POP
0xcd4 POP
0xcd5 POP
0xcd6 POP
0xcd7 POP
0xcd8 JUMP
0xcd9 JUMPDEST
0xcda PUSH1 0x0
0xcdc DUP3
0xcdd DUP3
0xcde GT
0xcdf ISZERO
0xce0 ISZERO
0xce1 ISZERO
0xce2 PUSH2 0xc9b
0xce5 JUMPI
---
0xb51: JUMPDEST 
0xb53: V721 = 0x0
0xb55: V722 = ADD 0x0 S7
0xb56: V723 = M[V722]
0xb5a: V724 = 0x20
0xb5c: V725 = ADD 0x20 S7
0xb5d: V726 = M[V725]
0xb60: V727 = TIMESTAMP
0xb63: V728 = 0xc
0xb65: V729 = 0x0
0xb68: V730 = 0x20
0xb6a: V731 = ADD 0x20 S7
0xb6b: V732 = M[V731]
0xb6d: M[0x0] = V732
0xb6e: V733 = 0x20
0xb70: V734 = ADD 0x20 0x0
0xb73: M[0x20] = 0xc
0xb74: V735 = 0x20
0xb76: V736 = ADD 0x20 0x20
0xb77: V737 = 0x0
0xb79: V738 = SHA3 0x0 0x40
0xb7a: V739 = S[V738]
0xb7d: V740 = 0xb43
0xb82: V741 = 0xfe6
0xb88: V742 = 0xffffffff
0xb8d: V743 = AND 0xffffffff 0xfe6
0xb8e: THROW 
0xb8f: JUMPDEST 
0xb93: V744 = 0x6
0xb97: S[0x6] = S5
0xb9a: V745 = 0x7
0xb9e: S[0x7] = S0
0xba1: V746 = 0x5
0xba3: V747 = 0x0
0xba5: V748 = 0x100
0xba8: V749 = EXP 0x100 0x0
0xbaa: V750 = S[0x5]
0xbac: V751 = 0xffffffffffffffffffffffffffffffffffffffff
0xbc1: V752 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xbc2: V753 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xbc3: V754 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V750
0xbc6: V755 = 0xffffffffffffffffffffffffffffffffffffffff
0xbdb: V756 = AND 0xffffffffffffffffffffffffffffffffffffffff S7
0xbdc: V757 = MUL V756 0x1
0xbdd: V758 = OR V757 V754
0xbdf: S[0x5] = V758
0xbe1: V759 = 0xba9
0xbe5: V760 = 0x4
0xbe7: V761 = S[0x4]
0xbe8: V762 = 0xfe6
0xbee: V763 = 0xffffffff
0xbf3: V764 = AND 0xffffffff 0xfe6
0xbf4: THROW 
0xbf5: JUMPDEST 
0xbf6: V765 = 0x4
0xbfa: S[0x4] = S0
0xbfc: V766 = 0xbc3
0xbff: V767 = 0x64
0xc02: V768 = 0x1004
0xc08: V769 = 0xffffffff
0xc0d: V770 = AND 0xffffffff 0x1004
0xc0e: THROW 
0xc0f: JUMPDEST 
0xc12: V771 = 0xbd8
0xc17: V772 = 0xc8d
0xc1d: V773 = 0xffffffff
0xc22: V774 = AND 0xffffffff 0xc8d
0xc23: THROW 
0xc24: JUMPDEST 
0xc27: V775 = 0xbef
0xc2b: V776 = 0x2
0xc2d: V777 = S[0x2]
0xc2e: V778 = 0xfe6
0xc34: V779 = 0xffffffff
0xc39: V780 = AND 0xffffffff 0xfe6
0xc3a: THROW 
0xc3b: JUMPDEST 
0xc3c: V781 = 0x2
0xc40: S[0x2] = S0
0xc42: V782 = 0xc0a
0xc46: V783 = 0x3
0xc48: V784 = S[0x3]
0xc49: V785 = 0xfe6
0xc4f: V786 = 0xffffffff
0xc54: V787 = AND 0xffffffff 0xfe6
0xc55: THROW 
0xc56: JUMPDEST 
0xc57: V788 = 0x3
0xc5b: S[0x3] = S0
0xc5d: V789 = 0xf6dbe9ed7a14e9a58a34b1833a363a95a7d19a785c6657b8aeea89c18b80752b
0xc81: V790 = 0x40
0xc83: V791 = M[0x40]
0xc86: V792 = 0xffffffffffffffffffffffffffffffffffffffff
0xc9b: V793 = AND 0xffffffffffffffffffffffffffffffffffffffff S7
0xc9c: V794 = 0xffffffffffffffffffffffffffffffffffffffff
0xcb1: V795 = AND 0xffffffffffffffffffffffffffffffffffffffff V793
0xcb3: M[V791] = V795
0xcb4: V796 = 0x20
0xcb6: V797 = ADD 0x20 V791
0xcb9: M[V797] = S6
0xcba: V798 = 0x20
0xcbc: V799 = ADD 0x20 V797
0xcbf: M[V799] = S3
0xcc0: V800 = 0x20
0xcc2: V801 = ADD 0x20 V799
0xcc8: V802 = 0x40
0xcca: V803 = M[0x40]
0xccd: V804 = SUB V801 V803
0xccf: LOG V803 V804 0xf6dbe9ed7a14e9a58a34b1833a363a95a7d19a785c6657b8aeea89c18b80752b
0xcd8: JUMP S9
0xcd9: JUMPDEST 
0xcda: V805 = 0x0
0xcde: V806 = GT S0 S1
0xcdf: V807 = ISZERO V806
0xce0: V808 = ISZERO V807
0xce1: V809 = ISZERO V808
0xce2: V810 = 0xc9b
0xce5: THROWI V809
---
Entry stack: []
Stack pops: 16
Stack additions: [0x0, S0, S1]
Exit stack: []

================================

Block 0xce6
[0xce6:0xd74]
---
Predecessors: [0xb51]
Successors: [0xd75]
---
0xce6 INVALID
0xce7 JUMPDEST
0xce8 DUP2
0xce9 DUP4
0xcea SUB
0xceb SWAP1
0xcec POP
0xced SWAP3
0xcee SWAP2
0xcef POP
0xcf0 POP
0xcf1 JUMP
0xcf2 JUMPDEST
0xcf3 PUSH1 0x0
0xcf5 PUSH1 0x8
0xcf7 PUSH1 0x1
0xcf9 SWAP1
0xcfa SLOAD
0xcfb SWAP1
0xcfc PUSH2 0x100
0xcff EXP
0xd00 SWAP1
0xd01 DIV
0xd02 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd17 AND
0xd18 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd2d AND
0xd2e DUP3
0xd2f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd44 AND
0xd45 EQ
0xd46 SWAP1
0xd47 POP
0xd48 SWAP2
0xd49 SWAP1
0xd4a POP
0xd4b JUMP
0xd4c JUMPDEST
0xd4d PUSH1 0x0
0xd4f DUP1
0xd50 PUSH1 0x8
0xd52 PUSH1 0x0
0xd54 PUSH2 0x100
0xd57 EXP
0xd58 DUP2
0xd59 SLOAD
0xd5a DUP2
0xd5b PUSH1 0xff
0xd5d MUL
0xd5e NOT
0xd5f AND
0xd60 SWAP1
0xd61 DUP4
0xd62 ISZERO
0xd63 ISZERO
0xd64 MUL
0xd65 OR
0xd66 SWAP1
0xd67 SSTORE
0xd68 POP
0xd69 PUSH1 0x2
0xd6b PUSH1 0x3
0xd6d SLOAD
0xd6e DUP2
0xd6f ISZERO
0xd70 ISZERO
0xd71 PUSH2 0xd2a
0xd74 JUMPI
---
0xce6: INVALID 
0xce7: JUMPDEST 
0xcea: V811 = SUB S2 S1
0xcf1: JUMP S3
0xcf2: JUMPDEST 
0xcf3: V812 = 0x0
0xcf5: V813 = 0x8
0xcf7: V814 = 0x1
0xcfa: V815 = S[0x8]
0xcfc: V816 = 0x100
0xcff: V817 = EXP 0x100 0x1
0xd01: V818 = DIV V815 0x100
0xd02: V819 = 0xffffffffffffffffffffffffffffffffffffffff
0xd17: V820 = AND 0xffffffffffffffffffffffffffffffffffffffff V818
0xd18: V821 = 0xffffffffffffffffffffffffffffffffffffffff
0xd2d: V822 = AND 0xffffffffffffffffffffffffffffffffffffffff V820
0xd2f: V823 = 0xffffffffffffffffffffffffffffffffffffffff
0xd44: V824 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xd45: V825 = EQ V824 V822
0xd4b: JUMP S1
0xd4c: JUMPDEST 
0xd4d: V826 = 0x0
0xd50: V827 = 0x8
0xd52: V828 = 0x0
0xd54: V829 = 0x100
0xd57: V830 = EXP 0x100 0x0
0xd59: V831 = S[0x8]
0xd5b: V832 = 0xff
0xd5d: V833 = MUL 0xff 0x1
0xd5e: V834 = NOT 0xff
0xd5f: V835 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V831
0xd62: V836 = ISZERO 0x0
0xd63: V837 = ISZERO 0x1
0xd64: V838 = MUL 0x0 0x1
0xd65: V839 = OR 0x0 V835
0xd67: S[0x8] = V839
0xd69: V840 = 0x2
0xd6b: V841 = 0x3
0xd6d: V842 = S[0x3]
0xd6f: V843 = ISZERO 0x2
0xd70: V844 = ISZERO 0x0
0xd71: V845 = 0xd2a
0xd74: THROWI 0x1
---
Entry stack: [S2, S1, 0x0]
Stack pops: 0
Stack additions: [V811, V825, V842, 0x2, 0x0]
Exit stack: []

================================

Block 0xd75
[0xd75:0xd9f]
---
Predecessors: [0xce6]
Successors: [0xda0]
---
0xd75 INVALID
0xd76 JUMPDEST
0xd77 DIV
0xd78 SWAP1
0xd79 POP
0xd7a PUSH2 0xd42
0xd7d DUP2
0xd7e PUSH1 0x4
0xd80 SLOAD
0xd81 PUSH2 0xc8d
0xd84 SWAP1
0xd85 SWAP2
0xd86 SWAP1
0xd87 PUSH4 0xffffffff
0xd8c AND
0xd8d JUMP
0xd8e JUMPDEST
0xd8f PUSH1 0x4
0xd91 DUP2
0xd92 SWAP1
0xd93 SSTORE
0xd94 POP
0xd95 PUSH1 0x0
0xd97 PUSH1 0x3
0xd99 SLOAD
0xd9a GT
0xd9b ISZERO
0xd9c PUSH2 0xf18
0xd9f JUMPI
---
0xd75: INVALID 
0xd76: JUMPDEST 
0xd77: V846 = DIV S0 S1
0xd7a: V847 = 0xd42
0xd7e: V848 = 0x4
0xd80: V849 = S[0x4]
0xd81: V850 = 0xc8d
0xd87: V851 = 0xffffffff
0xd8c: V852 = AND 0xffffffff 0xc8d
0xd8d: THROW 
0xd8e: JUMPDEST 
0xd8f: V853 = 0x4
0xd93: S[0x4] = S0
0xd95: V854 = 0x0
0xd97: V855 = 0x3
0xd99: V856 = S[0x3]
0xd9a: V857 = GT V856 0x0
0xd9b: V858 = ISZERO V857
0xd9c: V859 = 0xf18
0xd9f: THROWI V858
---
Entry stack: [0x0, 0x2, V842]
Stack pops: 0
Stack additions: [V846, V849, 0xd42, V846]
Exit stack: []

================================

Block 0xda0
[0xda0:0xe81]
---
Predecessors: [0xd75]
Successors: [0xe82]
---
0xda0 PUSH1 0xa
0xda2 PUSH1 0x0
0xda4 SWAP1
0xda5 SLOAD
0xda6 SWAP1
0xda7 PUSH2 0x100
0xdaa EXP
0xdab SWAP1
0xdac DIV
0xdad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdc2 AND
0xdc3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdd8 AND
0xdd9 PUSH4 0xa9059cbb
0xdde PUSH1 0x5
0xde0 PUSH1 0x0
0xde2 SWAP1
0xde3 SLOAD
0xde4 SWAP1
0xde5 PUSH2 0x100
0xde8 EXP
0xde9 SWAP1
0xdea DIV
0xdeb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe00 AND
0xe01 DUP4
0xe02 PUSH1 0x40
0xe04 MLOAD
0xe05 DUP4
0xe06 PUSH4 0xffffffff
0xe0b AND
0xe0c PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xe2a MUL
0xe2b DUP2
0xe2c MSTORE
0xe2d PUSH1 0x4
0xe2f ADD
0xe30 DUP1
0xe31 DUP4
0xe32 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe47 AND
0xe48 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe5d AND
0xe5e DUP2
0xe5f MSTORE
0xe60 PUSH1 0x20
0xe62 ADD
0xe63 DUP3
0xe64 DUP2
0xe65 MSTORE
0xe66 PUSH1 0x20
0xe68 ADD
0xe69 SWAP3
0xe6a POP
0xe6b POP
0xe6c POP
0xe6d PUSH1 0x20
0xe6f PUSH1 0x40
0xe71 MLOAD
0xe72 DUP1
0xe73 DUP4
0xe74 SUB
0xe75 DUP2
0xe76 PUSH1 0x0
0xe78 DUP8
0xe79 DUP1
0xe7a EXTCODESIZE
0xe7b ISZERO
0xe7c DUP1
0xe7d ISZERO
0xe7e PUSH2 0xe3a
0xe81 JUMPI
---
0xda0: V860 = 0xa
0xda2: V861 = 0x0
0xda5: V862 = S[0xa]
0xda7: V863 = 0x100
0xdaa: V864 = EXP 0x100 0x0
0xdac: V865 = DIV V862 0x1
0xdad: V866 = 0xffffffffffffffffffffffffffffffffffffffff
0xdc2: V867 = AND 0xffffffffffffffffffffffffffffffffffffffff V865
0xdc3: V868 = 0xffffffffffffffffffffffffffffffffffffffff
0xdd8: V869 = AND 0xffffffffffffffffffffffffffffffffffffffff V867
0xdd9: V870 = 0xa9059cbb
0xdde: V871 = 0x5
0xde0: V872 = 0x0
0xde3: V873 = S[0x5]
0xde5: V874 = 0x100
0xde8: V875 = EXP 0x100 0x0
0xdea: V876 = DIV V873 0x1
0xdeb: V877 = 0xffffffffffffffffffffffffffffffffffffffff
0xe00: V878 = AND 0xffffffffffffffffffffffffffffffffffffffff V876
0xe02: V879 = 0x40
0xe04: V880 = M[0x40]
0xe06: V881 = 0xffffffff
0xe0b: V882 = AND 0xffffffff 0xa9059cbb
0xe0c: V883 = 0x100000000000000000000000000000000000000000000000000000000
0xe2a: V884 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0xe2c: M[V880] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xe2d: V885 = 0x4
0xe2f: V886 = ADD 0x4 V880
0xe32: V887 = 0xffffffffffffffffffffffffffffffffffffffff
0xe47: V888 = AND 0xffffffffffffffffffffffffffffffffffffffff V878
0xe48: V889 = 0xffffffffffffffffffffffffffffffffffffffff
0xe5d: V890 = AND 0xffffffffffffffffffffffffffffffffffffffff V888
0xe5f: M[V886] = V890
0xe60: V891 = 0x20
0xe62: V892 = ADD 0x20 V886
0xe65: M[V892] = S0
0xe66: V893 = 0x20
0xe68: V894 = ADD 0x20 V892
0xe6d: V895 = 0x20
0xe6f: V896 = 0x40
0xe71: V897 = M[0x40]
0xe74: V898 = SUB V894 V897
0xe76: V899 = 0x0
0xe7a: V900 = EXTCODESIZE V869
0xe7b: V901 = ISZERO V900
0xe7d: V902 = ISZERO V901
0xe7e: V903 = 0xe3a
0xe81: THROWI V902
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, V869, 0xa9059cbb, V894, 0x20, V897, V898, V897, 0x0, V869, V901]
Exit stack: [S0, V869, 0xa9059cbb, V894, 0x20, V897, V898, V897, 0x0, V869, V901]

================================

Block 0xe82
[0xe82:0xe90]
---
Predecessors: [0xda0]
Successors: [0xe91]
---
0xe82 PUSH1 0x0
0xe84 DUP1
0xe85 REVERT
0xe86 JUMPDEST
0xe87 POP
0xe88 GAS
0xe89 CALL
0xe8a ISZERO
0xe8b DUP1
0xe8c ISZERO
0xe8d PUSH2 0xe4e
0xe90 JUMPI
---
0xe82: V904 = 0x0
0xe85: REVERT 0x0 0x0
0xe86: JUMPDEST 
0xe88: V905 = GAS
0xe89: V906 = CALL V905 S1 S2 S3 S4 S5 S6
0xe8a: V907 = ISZERO V906
0xe8c: V908 = ISZERO V907
0xe8d: V909 = 0xe4e
0xe90: THROWI V908
---
Entry stack: [S10, V869, 0xa9059cbb, V894, 0x20, V897, V898, V897, 0x0, V869, V901]
Stack pops: 0
Stack additions: [V907]
Exit stack: []

================================

Block 0xe91
[0xe91:0xeab]
---
Predecessors: [0xe82]
Successors: [0xeac]
---
0xe91 RETURNDATASIZE
0xe92 PUSH1 0x0
0xe94 DUP1
0xe95 RETURNDATACOPY
0xe96 RETURNDATASIZE
0xe97 PUSH1 0x0
0xe99 REVERT
0xe9a JUMPDEST
0xe9b POP
0xe9c POP
0xe9d POP
0xe9e POP
0xe9f PUSH1 0x40
0xea1 MLOAD
0xea2 RETURNDATASIZE
0xea3 PUSH1 0x20
0xea5 DUP2
0xea6 LT
0xea7 ISZERO
0xea8 PUSH2 0xe64
0xeab JUMPI
---
0xe91: V910 = RETURNDATASIZE
0xe92: V911 = 0x0
0xe95: RETURNDATACOPY 0x0 0x0 V910
0xe96: V912 = RETURNDATASIZE
0xe97: V913 = 0x0
0xe99: REVERT 0x0 V912
0xe9a: JUMPDEST 
0xe9f: V914 = 0x40
0xea1: V915 = M[0x40]
0xea2: V916 = RETURNDATASIZE
0xea3: V917 = 0x20
0xea6: V918 = LT V916 0x20
0xea7: V919 = ISZERO V918
0xea8: V920 = 0xe64
0xeab: THROWI V919
---
Entry stack: [V907]
Stack pops: 0
Stack additions: [V916, V915]
Exit stack: []

================================

Block 0xeac
[0xeac:0xee2]
---
Predecessors: [0xe91]
Successors: [0xee3]
---
0xeac PUSH1 0x0
0xeae DUP1
0xeaf REVERT
0xeb0 JUMPDEST
0xeb1 DUP2
0xeb2 ADD
0xeb3 SWAP1
0xeb4 DUP1
0xeb5 DUP1
0xeb6 MLOAD
0xeb7 SWAP1
0xeb8 PUSH1 0x20
0xeba ADD
0xebb SWAP1
0xebc SWAP3
0xebd SWAP2
0xebe SWAP1
0xebf POP
0xec0 POP
0xec1 POP
0xec2 POP
0xec3 PUSH1 0x0
0xec5 ADDRESS
0xec6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xedb AND
0xedc BALANCE
0xedd GT
0xede ISZERO
0xedf PUSH2 0xf17
0xee2 JUMPI
---
0xeac: V921 = 0x0
0xeaf: REVERT 0x0 0x0
0xeb0: JUMPDEST 
0xeb2: V922 = ADD S1 S0
0xeb6: V923 = M[S1]
0xeb8: V924 = 0x20
0xeba: V925 = ADD 0x20 S1
0xec3: V926 = 0x0
0xec5: V927 = ADDRESS
0xec6: V928 = 0xffffffffffffffffffffffffffffffffffffffff
0xedb: V929 = AND 0xffffffffffffffffffffffffffffffffffffffff V927
0xedc: V930 = BALANCE V929
0xedd: V931 = GT V930 0x0
0xede: V932 = ISZERO V931
0xedf: V933 = 0xf17
0xee2: THROWI V932
---
Entry stack: [V915, V916]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xee3
[0xee3:0xf57]
---
Predecessors: [0xeac]
Successors: [0xf58]
---
0xee3 PUSH1 0x9
0xee5 PUSH1 0x0
0xee7 SWAP1
0xee8 SLOAD
0xee9 SWAP1
0xeea PUSH2 0x100
0xeed EXP
0xeee SWAP1
0xeef DIV
0xef0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf05 AND
0xf06 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf1b AND
0xf1c PUSH2 0x8fc
0xf1f ADDRESS
0xf20 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf35 AND
0xf36 BALANCE
0xf37 SWAP1
0xf38 DUP2
0xf39 ISZERO
0xf3a MUL
0xf3b SWAP1
0xf3c PUSH1 0x40
0xf3e MLOAD
0xf3f PUSH1 0x0
0xf41 PUSH1 0x40
0xf43 MLOAD
0xf44 DUP1
0xf45 DUP4
0xf46 SUB
0xf47 DUP2
0xf48 DUP6
0xf49 DUP9
0xf4a DUP9
0xf4b CALL
0xf4c SWAP4
0xf4d POP
0xf4e POP
0xf4f POP
0xf50 POP
0xf51 ISZERO
0xf52 DUP1
0xf53 ISZERO
0xf54 PUSH2 0xf15
0xf57 JUMPI
---
0xee3: V934 = 0x9
0xee5: V935 = 0x0
0xee8: V936 = S[0x9]
0xeea: V937 = 0x100
0xeed: V938 = EXP 0x100 0x0
0xeef: V939 = DIV V936 0x1
0xef0: V940 = 0xffffffffffffffffffffffffffffffffffffffff
0xf05: V941 = AND 0xffffffffffffffffffffffffffffffffffffffff V939
0xf06: V942 = 0xffffffffffffffffffffffffffffffffffffffff
0xf1b: V943 = AND 0xffffffffffffffffffffffffffffffffffffffff V941
0xf1c: V944 = 0x8fc
0xf1f: V945 = ADDRESS
0xf20: V946 = 0xffffffffffffffffffffffffffffffffffffffff
0xf35: V947 = AND 0xffffffffffffffffffffffffffffffffffffffff V945
0xf36: V948 = BALANCE V947
0xf39: V949 = ISZERO V948
0xf3a: V950 = MUL V949 0x8fc
0xf3c: V951 = 0x40
0xf3e: V952 = M[0x40]
0xf3f: V953 = 0x0
0xf41: V954 = 0x40
0xf43: V955 = M[0x40]
0xf46: V956 = SUB V952 V955
0xf4b: V957 = CALL V950 V943 V948 V955 V956 V955 0x0
0xf51: V958 = ISZERO V957
0xf53: V959 = ISZERO V958
0xf54: V960 = 0xf15
0xf57: THROWI V959
---
Entry stack: []
Stack pops: 0
Stack additions: [V958]
Exit stack: [V958]

================================

Block 0xf58
[0xf58:0xf62]
---
Predecessors: [0xee3]
Successors: [0xf63]
---
0xf58 RETURNDATASIZE
0xf59 PUSH1 0x0
0xf5b DUP1
0xf5c RETURNDATACOPY
0xf5d RETURNDATASIZE
0xf5e PUSH1 0x0
0xf60 REVERT
0xf61 JUMPDEST
0xf62 POP
---
0xf58: V961 = RETURNDATASIZE
0xf59: V962 = 0x0
0xf5c: RETURNDATACOPY 0x0 0x0 V961
0xf5d: V963 = RETURNDATASIZE
0xf5e: V964 = 0x0
0xf60: REVERT 0x0 V963
0xf61: JUMPDEST 
---
Entry stack: [V958]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xf63
[0xf63:0xf63]
---
Predecessors: [0xf58]
Successors: [0xf64]
---
0xf63 JUMPDEST
---
0xf63: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xf64
[0xf64:0x1044]
---
Predecessors: [0xf63]
Successors: [0x1045]
---
0xf64 JUMPDEST
0xf65 PUSH32 0x8420a32dd381606a863bf5711eb04325b7da1cb03e87d6167fab0afe1a9da80c
0xf86 PUSH1 0x5
0xf88 PUSH1 0x0
0xf8a SWAP1
0xf8b SLOAD
0xf8c SWAP1
0xf8d PUSH2 0x100
0xf90 EXP
0xf91 SWAP1
0xf92 DIV
0xf93 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfa8 AND
0xfa9 DUP3
0xfaa TIMESTAMP
0xfab PUSH1 0x40
0xfad MLOAD
0xfae DUP1
0xfaf DUP5
0xfb0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfc5 AND
0xfc6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfdb AND
0xfdc DUP2
0xfdd MSTORE
0xfde PUSH1 0x20
0xfe0 ADD
0xfe1 DUP4
0xfe2 DUP2
0xfe3 MSTORE
0xfe4 PUSH1 0x20
0xfe6 ADD
0xfe7 DUP3
0xfe8 DUP2
0xfe9 MSTORE
0xfea PUSH1 0x20
0xfec ADD
0xfed SWAP4
0xfee POP
0xfef POP
0xff0 POP
0xff1 POP
0xff2 PUSH1 0x40
0xff4 MLOAD
0xff5 DUP1
0xff6 SWAP2
0xff7 SUB
0xff8 SWAP1
0xff9 LOG1
0xffa PUSH2 0xfc2
0xffd DUP2
0xffe PUSH1 0x3
0x1000 SLOAD
0x1001 PUSH2 0xc8d
0x1004 SWAP1
0x1005 SWAP2
0x1006 SWAP1
0x1007 PUSH4 0xffffffff
0x100c AND
0x100d JUMP
0x100e JUMPDEST
0x100f PUSH1 0x3
0x1011 DUP2
0x1012 SWAP1
0x1013 SSTORE
0x1014 POP
0x1015 PUSH1 0x1
0x1017 PUSH1 0x8
0x1019 PUSH1 0x0
0x101b PUSH2 0x100
0x101e EXP
0x101f DUP2
0x1020 SLOAD
0x1021 DUP2
0x1022 PUSH1 0xff
0x1024 MUL
0x1025 NOT
0x1026 AND
0x1027 SWAP1
0x1028 DUP4
0x1029 ISZERO
0x102a ISZERO
0x102b MUL
0x102c OR
0x102d SWAP1
0x102e SSTORE
0x102f POP
0x1030 POP
0x1031 JUMP
0x1032 JUMPDEST
0x1033 PUSH1 0x0
0x1035 DUP1
0x1036 DUP3
0x1037 DUP5
0x1038 ADD
0x1039 SWAP1
0x103a POP
0x103b DUP4
0x103c DUP2
0x103d LT
0x103e ISZERO
0x103f ISZERO
0x1040 ISZERO
0x1041 PUSH2 0xffa
0x1044 JUMPI
---
0xf64: JUMPDEST 
0xf65: V965 = 0x8420a32dd381606a863bf5711eb04325b7da1cb03e87d6167fab0afe1a9da80c
0xf86: V966 = 0x5
0xf88: V967 = 0x0
0xf8b: V968 = S[0x5]
0xf8d: V969 = 0x100
0xf90: V970 = EXP 0x100 0x0
0xf92: V971 = DIV V968 0x1
0xf93: V972 = 0xffffffffffffffffffffffffffffffffffffffff
0xfa8: V973 = AND 0xffffffffffffffffffffffffffffffffffffffff V971
0xfaa: V974 = TIMESTAMP
0xfab: V975 = 0x40
0xfad: V976 = M[0x40]
0xfb0: V977 = 0xffffffffffffffffffffffffffffffffffffffff
0xfc5: V978 = AND 0xffffffffffffffffffffffffffffffffffffffff V973
0xfc6: V979 = 0xffffffffffffffffffffffffffffffffffffffff
0xfdb: V980 = AND 0xffffffffffffffffffffffffffffffffffffffff V978
0xfdd: M[V976] = V980
0xfde: V981 = 0x20
0xfe0: V982 = ADD 0x20 V976
0xfe3: M[V982] = S0
0xfe4: V983 = 0x20
0xfe6: V984 = ADD 0x20 V982
0xfe9: M[V984] = V974
0xfea: V985 = 0x20
0xfec: V986 = ADD 0x20 V984
0xff2: V987 = 0x40
0xff4: V988 = M[0x40]
0xff7: V989 = SUB V986 V988
0xff9: LOG V988 V989 0x8420a32dd381606a863bf5711eb04325b7da1cb03e87d6167fab0afe1a9da80c
0xffa: V990 = 0xfc2
0xffe: V991 = 0x3
0x1000: V992 = S[0x3]
0x1001: V993 = 0xc8d
0x1007: V994 = 0xffffffff
0x100c: V995 = AND 0xffffffff 0xc8d
0x100d: THROW 
0x100e: JUMPDEST 
0x100f: V996 = 0x3
0x1013: S[0x3] = S0
0x1015: V997 = 0x1
0x1017: V998 = 0x8
0x1019: V999 = 0x0
0x101b: V1000 = 0x100
0x101e: V1001 = EXP 0x100 0x0
0x1020: V1002 = S[0x8]
0x1022: V1003 = 0xff
0x1024: V1004 = MUL 0xff 0x1
0x1025: V1005 = NOT 0xff
0x1026: V1006 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1002
0x1029: V1007 = ISZERO 0x1
0x102a: V1008 = ISZERO 0x0
0x102b: V1009 = MUL 0x1 0x1
0x102c: V1010 = OR 0x1 V1006
0x102e: S[0x8] = V1010
0x1031: JUMP S2
0x1032: JUMPDEST 
0x1033: V1011 = 0x0
0x1038: V1012 = ADD S1 S0
0x103d: V1013 = LT V1012 S1
0x103e: V1014 = ISZERO V1013
0x103f: V1015 = ISZERO V1014
0x1040: V1016 = ISZERO V1015
0x1041: V1017 = 0xffa
0x1044: THROWI V1016
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, 0xfc2, V1012, 0x0, S0, S1]
Exit stack: []

================================

Block 0x1045
[0x1045:0x105c]
---
Predecessors: [0xf64]
Successors: [0x105d]
---
0x1045 INVALID
0x1046 JUMPDEST
0x1047 DUP1
0x1048 SWAP2
0x1049 POP
0x104a POP
0x104b SWAP3
0x104c SWAP2
0x104d POP
0x104e POP
0x104f JUMP
0x1050 JUMPDEST
0x1051 PUSH1 0x0
0x1053 DUP1
0x1054 DUP3
0x1055 DUP5
0x1056 DUP2
0x1057 ISZERO
0x1058 ISZERO
0x1059 PUSH2 0x1012
0x105c JUMPI
---
0x1045: INVALID 
0x1046: JUMPDEST 
0x104f: JUMP S4
0x1050: JUMPDEST 
0x1051: V1018 = 0x0
0x1057: V1019 = ISZERO S0
0x1058: V1020 = ISZERO V1019
0x1059: V1021 = 0x1012
0x105c: THROWI V1020
---
Entry stack: [S3, S2, 0x0, V1012]
Stack pops: 0
Stack additions: [S0, S1, S0, 0x0, 0x0, S0, S1]
Exit stack: []

================================

Block 0x105d
[0x105d:0x10c6]
---
Predecessors: [0x1045]
Successors: []
---
0x105d INVALID
0x105e JUMPDEST
0x105f DIV
0x1060 SWAP1
0x1061 POP
0x1062 DUP1
0x1063 SWAP2
0x1064 POP
0x1065 POP
0x1066 SWAP3
0x1067 SWAP2
0x1068 POP
0x1069 POP
0x106a JUMP
0x106b JUMPDEST
0x106c PUSH1 0x40
0x106e DUP1
0x106f MLOAD
0x1070 SWAP1
0x1071 DUP2
0x1072 ADD
0x1073 PUSH1 0x40
0x1075 MSTORE
0x1076 DUP1
0x1077 PUSH1 0x0
0x1079 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x108e AND
0x108f DUP2
0x1090 MSTORE
0x1091 PUSH1 0x20
0x1093 ADD
0x1094 PUSH1 0x0
0x1096 DUP2
0x1097 MSTORE
0x1098 POP
0x1099 SWAP1
0x109a JUMP
0x109b STOP
0x109c LOG1
0x109d PUSH6 0x627a7a723058
0x10a4 SHA3
0x10a5 PUSH7 0x1e2598405eb0e7
0x10ad MISSING 0xa8
0x10ae SWAP3
0x10af ADDRESS
0x10b0 DUP4
0x10b1 MISSING 0xdd
0x10b2 MISSING 0x5e
0x10b3 REVERT
0x10b4 MISSING 0xf6
0x10b5 MISSING 0xcc
0x10b6 SGT
0x10b7 DUP2
0x10b8 MISSING 0xe5
0x10b9 SSTORE
0x10ba MISSING 0xc5
0x10bb MISSING 0x2e
0x10bc DELEGATECALL
0x10bd MISSING 0xc0
0x10be GAS
0x10bf MISSING 0xad
0x10c0 EXP
0x10c1 MSIZE
0x10c2 MISSING 0x5f
0x10c3 GASLIMIT
0x10c4 DELEGATECALL
0x10c5 STOP
0x10c6 MISSING 0x29
---
0x105d: INVALID 
0x105e: JUMPDEST 
0x105f: V1022 = DIV S0 S1
0x106a: JUMP S6
0x106b: JUMPDEST 
0x106c: V1023 = 0x40
0x106f: V1024 = M[0x40]
0x1072: V1025 = ADD V1024 0x40
0x1073: V1026 = 0x40
0x1075: M[0x40] = V1025
0x1077: V1027 = 0x0
0x1079: V1028 = 0xffffffffffffffffffffffffffffffffffffffff
0x108e: V1029 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x1090: M[V1024] = 0x0
0x1091: V1030 = 0x20
0x1093: V1031 = ADD 0x20 V1024
0x1094: V1032 = 0x0
0x1097: M[V1031] = 0x0
0x109a: JUMP S0
0x109b: STOP 
0x109c: LOG S0 S1 S2
0x109d: V1033 = 0x627a7a723058
0x10a4: V1034 = SHA3 0x627a7a723058 S3
0x10a5: V1035 = 0x1e2598405eb0e7
0x10ad: MISSING 0xa8
0x10af: V1036 = ADDRESS
0x10b1: MISSING 0xdd
0x10b2: MISSING 0x5e
0x10b3: REVERT S0 S1
0x10b4: MISSING 0xf6
0x10b5: MISSING 0xcc
0x10b6: V1037 = SGT S0 S1
0x10b8: MISSING 0xe5
0x10b9: S[S0] = S1
0x10ba: MISSING 0xc5
0x10bb: MISSING 0x2e
0x10bc: V1038 = DELEGATECALL S0 S1 S2 S3 S4 S5
0x10bd: MISSING 0xc0
0x10be: V1039 = GAS
0x10bf: MISSING 0xad
0x10c0: V1040 = EXP S0 S1
0x10c1: V1041 = MSIZE
0x10c2: MISSING 0x5f
0x10c3: V1042 = GASLIMIT
0x10c4: V1043 = DELEGATECALL V1042 S0 S1 S2 S3 S4
0x10c5: STOP 
0x10c6: MISSING 0x29
---
Entry stack: [S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 0
Stack additions: [V1022, V1024, 0x1e2598405eb0e7, V1034, S2, V1036, S3, S1, S2, S0, S2, V1037, S2, V1038, V1039, V1041, V1040, V1043]
Exit stack: []

================================

Function 0:
Public function signature: 0xf79d6687
Entry block: 0x127
Exit block: 0x105d
Body: 0x127, 0x131, 0x148, 0x15f, 0x18a, 0x1b5, 0x1e0, 0x20b, 0x24e, 0x291, 0x2e8, 0x313, 0x3be, 0x3f5, 0x424, 0x43b, 0x4b7, 0x52f, 0x5c3, 0x661, 0x78d, 0x844, 0x896, 0x89d, 0x9ac, 0x9bb, 0x9d6, 0xa85, 0xaf6, 0xb0a, 0xb3a, 0xb49, 0xb51, 0xce6, 0xd75, 0xda0, 0xe82, 0xe91, 0xeac, 0xee3, 0xf58, 0xf63, 0xf64, 0x1045, 0x105d

Function 1:
Public fallback function
Entry block: 0x127
Exit block: 0x127
Body: 0x127

