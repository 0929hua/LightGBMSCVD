Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x67]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x79ba5097
0x3c EQ
0x3d PUSH2 0x67
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x79ba5097
0x3c: V13 = EQ 0x79ba5097 V11
0x3d: V14 = 0x67
0x40: JUMPI 0x67 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x7e]
---
0x41 DUP1
0x42 PUSH4 0x8da5cb5b
0x47 EQ
0x48 PUSH2 0x7e
0x4b JUMPI
---
0x42: V15 = 0x8da5cb5b
0x47: V16 = EQ 0x8da5cb5b V11
0x48: V17 = 0x7e
0x4b: JUMPI 0x7e V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xd5]
---
0x4c DUP1
0x4d PUSH4 0xd4ee1d90
0x52 EQ
0x53 PUSH2 0xd5
0x56 JUMPI
---
0x4d: V18 = 0xd4ee1d90
0x52: V19 = EQ 0xd4ee1d90 V11
0x53: V20 = 0xd5
0x56: JUMPI 0xd5 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x12c]
---
0x57 DUP1
0x58 PUSH4 0xf2fde38b
0x5d EQ
0x5e PUSH2 0x12c
0x61 JUMPI
---
0x58: V21 = 0xf2fde38b
0x5d: V22 = EQ 0xf2fde38b V11
0x5e: V23 = 0x12c
0x61: JUMPI 0x12c V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x66]
---
Predecessors: [0x0, 0x57]
Successors: []
---
0x62 JUMPDEST
0x63 PUSH1 0x0
0x65 DUP1
0x66 REVERT
---
0x62: JUMPDEST 
0x63: V24 = 0x0
0x66: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x67
[0x67:0x6e]
---
Predecessors: [0xd]
Successors: [0x6f, 0x73]
---
0x67 JUMPDEST
0x68 CALLVALUE
0x69 DUP1
0x6a ISZERO
0x6b PUSH2 0x73
0x6e JUMPI
---
0x67: JUMPDEST 
0x68: V25 = CALLVALUE
0x6a: V26 = ISZERO V25
0x6b: V27 = 0x73
0x6e: JUMPI 0x73 V26
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V25]
Exit stack: [V11, V25]

================================

Block 0x6f
[0x6f:0x72]
---
Predecessors: [0x67]
Successors: []
---
0x6f PUSH1 0x0
0x71 DUP1
0x72 REVERT
---
0x6f: V28 = 0x0
0x72: REVERT 0x0 0x0
---
Entry stack: [V11, V25]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V25]

================================

Block 0x73
[0x73:0x7b]
---
Predecessors: [0x67]
Successors: [0x16f]
---
0x73 JUMPDEST
0x74 POP
0x75 PUSH2 0x7c
0x78 PUSH2 0x16f
0x7b JUMP
---
0x73: JUMPDEST 
0x75: V29 = 0x7c
0x78: V30 = 0x16f
0x7b: JUMP 0x16f
---
Entry stack: [V11, V25]
Stack pops: 1
Stack additions: [0x7c]
Exit stack: [V11, 0x7c]

================================

Block 0x7c
[0x7c:0x7d]
---
Predecessors: [0x2c5]
Successors: []
---
0x7c JUMPDEST
0x7d STOP
---
0x7c: JUMPDEST 
0x7d: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7e
[0x7e:0x85]
---
Predecessors: [0x41]
Successors: [0x86, 0x8a]
---
0x7e JUMPDEST
0x7f CALLVALUE
0x80 DUP1
0x81 ISZERO
0x82 PUSH2 0x8a
0x85 JUMPI
---
0x7e: JUMPDEST 
0x7f: V31 = CALLVALUE
0x81: V32 = ISZERO V31
0x82: V33 = 0x8a
0x85: JUMPI 0x8a V32
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V31]
Exit stack: [V11, V31]

================================

Block 0x86
[0x86:0x89]
---
Predecessors: [0x7e]
Successors: []
---
0x86 PUSH1 0x0
0x88 DUP1
0x89 REVERT
---
0x86: V34 = 0x0
0x89: REVERT 0x0 0x0
---
Entry stack: [V11, V31]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V31]

================================

Block 0x8a
[0x8a:0x92]
---
Predecessors: [0x7e]
Successors: [0x2c7]
---
0x8a JUMPDEST
0x8b POP
0x8c PUSH2 0x93
0x8f PUSH2 0x2c7
0x92 JUMP
---
0x8a: JUMPDEST 
0x8c: V35 = 0x93
0x8f: V36 = 0x2c7
0x92: JUMP 0x2c7
---
Entry stack: [V11, V31]
Stack pops: 1
Stack additions: [0x93]
Exit stack: [V11, 0x93]

================================

Block 0x93
[0x93:0xd4]
---
Predecessors: [0x2c7]
Successors: []
---
0x93 JUMPDEST
0x94 PUSH1 0x40
0x96 MLOAD
0x97 DUP1
0x98 DUP3
0x99 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xae AND
0xaf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc4 AND
0xc5 DUP2
0xc6 MSTORE
0xc7 PUSH1 0x20
0xc9 ADD
0xca SWAP2
0xcb POP
0xcc POP
0xcd PUSH1 0x40
0xcf MLOAD
0xd0 DUP1
0xd1 SWAP2
0xd2 SUB
0xd3 SWAP1
0xd4 RETURN
---
0x93: JUMPDEST 
0x94: V37 = 0x40
0x96: V38 = M[0x40]
0x99: V39 = 0xffffffffffffffffffffffffffffffffffffffff
0xae: V40 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0xaf: V41 = 0xffffffffffffffffffffffffffffffffffffffff
0xc4: V42 = AND 0xffffffffffffffffffffffffffffffffffffffff V40
0xc6: M[V38] = V42
0xc7: V43 = 0x20
0xc9: V44 = ADD 0x20 V38
0xcd: V45 = 0x40
0xcf: V46 = M[0x40]
0xd2: V47 = SUB V44 V46
0xd4: RETURN V46 V47
---
Entry stack: [V11, 0x93, V147]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x93]

================================

Block 0xd5
[0xd5:0xdc]
---
Predecessors: [0x4c]
Successors: [0xdd, 0xe1]
---
0xd5 JUMPDEST
0xd6 CALLVALUE
0xd7 DUP1
0xd8 ISZERO
0xd9 PUSH2 0xe1
0xdc JUMPI
---
0xd5: JUMPDEST 
0xd6: V48 = CALLVALUE
0xd8: V49 = ISZERO V48
0xd9: V50 = 0xe1
0xdc: JUMPI 0xe1 V49
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V48]
Exit stack: [V11, V48]

================================

Block 0xdd
[0xdd:0xe0]
---
Predecessors: [0xd5]
Successors: []
---
0xdd PUSH1 0x0
0xdf DUP1
0xe0 REVERT
---
0xdd: V51 = 0x0
0xe0: REVERT 0x0 0x0
---
Entry stack: [V11, V48]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V48]

================================

Block 0xe1
[0xe1:0xe9]
---
Predecessors: [0xd5]
Successors: [0x2ec]
---
0xe1 JUMPDEST
0xe2 POP
0xe3 PUSH2 0xea
0xe6 PUSH2 0x2ec
0xe9 JUMP
---
0xe1: JUMPDEST 
0xe3: V52 = 0xea
0xe6: V53 = 0x2ec
0xe9: JUMP 0x2ec
---
Entry stack: [V11, V48]
Stack pops: 1
Stack additions: [0xea]
Exit stack: [V11, 0xea]

================================

Block 0xea
[0xea:0x12b]
---
Predecessors: [0x2ec]
Successors: []
---
0xea JUMPDEST
0xeb PUSH1 0x40
0xed MLOAD
0xee DUP1
0xef DUP3
0xf0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x105 AND
0x106 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11b AND
0x11c DUP2
0x11d MSTORE
0x11e PUSH1 0x20
0x120 ADD
0x121 SWAP2
0x122 POP
0x123 POP
0x124 PUSH1 0x40
0x126 MLOAD
0x127 DUP1
0x128 SWAP2
0x129 SUB
0x12a SWAP1
0x12b RETURN
---
0xea: JUMPDEST 
0xeb: V54 = 0x40
0xed: V55 = M[0x40]
0xf0: V56 = 0xffffffffffffffffffffffffffffffffffffffff
0x105: V57 = AND 0xffffffffffffffffffffffffffffffffffffffff V155
0x106: V58 = 0xffffffffffffffffffffffffffffffffffffffff
0x11b: V59 = AND 0xffffffffffffffffffffffffffffffffffffffff V57
0x11d: M[V55] = V59
0x11e: V60 = 0x20
0x120: V61 = ADD 0x20 V55
0x124: V62 = 0x40
0x126: V63 = M[0x40]
0x129: V64 = SUB V61 V63
0x12b: RETURN V63 V64
---
Entry stack: [V11, 0xea, V155]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xea]

================================

Block 0x12c
[0x12c:0x133]
---
Predecessors: [0x57]
Successors: [0x134, 0x138]
---
0x12c JUMPDEST
0x12d CALLVALUE
0x12e DUP1
0x12f ISZERO
0x130 PUSH2 0x138
0x133 JUMPI
---
0x12c: JUMPDEST 
0x12d: V65 = CALLVALUE
0x12f: V66 = ISZERO V65
0x130: V67 = 0x138
0x133: JUMPI 0x138 V66
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V65]
Exit stack: [V11, V65]

================================

Block 0x134
[0x134:0x137]
---
Predecessors: [0x12c]
Successors: []
---
0x134 PUSH1 0x0
0x136 DUP1
0x137 REVERT
---
0x134: V68 = 0x0
0x137: REVERT 0x0 0x0
---
Entry stack: [V11, V65]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V65]

================================

Block 0x138
[0x138:0x16c]
---
Predecessors: [0x12c]
Successors: [0x312]
---
0x138 JUMPDEST
0x139 POP
0x13a PUSH2 0x16d
0x13d PUSH1 0x4
0x13f DUP1
0x140 CALLDATASIZE
0x141 SUB
0x142 DUP2
0x143 ADD
0x144 SWAP1
0x145 DUP1
0x146 DUP1
0x147 CALLDATALOAD
0x148 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15d AND
0x15e SWAP1
0x15f PUSH1 0x20
0x161 ADD
0x162 SWAP1
0x163 SWAP3
0x164 SWAP2
0x165 SWAP1
0x166 POP
0x167 POP
0x168 POP
0x169 PUSH2 0x312
0x16c JUMP
---
0x138: JUMPDEST 
0x13a: V69 = 0x16d
0x13d: V70 = 0x4
0x140: V71 = CALLDATASIZE
0x141: V72 = SUB V71 0x4
0x143: V73 = ADD 0x4 V72
0x147: V74 = CALLDATALOAD 0x4
0x148: V75 = 0xffffffffffffffffffffffffffffffffffffffff
0x15d: V76 = AND 0xffffffffffffffffffffffffffffffffffffffff V74
0x15f: V77 = 0x20
0x161: V78 = ADD 0x20 0x4
0x169: V79 = 0x312
0x16c: JUMP 0x312
---
Entry stack: [V11, V65]
Stack pops: 1
Stack additions: [0x16d, V76]
Exit stack: [V11, 0x16d, V76]

================================

Block 0x16d
[0x16d:0x16e]
---
Predecessors: [0x36d]
Successors: []
---
0x16d JUMPDEST
0x16e STOP
---
0x16d: JUMPDEST 
0x16e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x16f
[0x16f:0x1c5]
---
Predecessors: [0x73]
Successors: [0x1c6, 0x2c5]
---
0x16f JUMPDEST
0x170 PUSH1 0x1
0x172 PUSH1 0x0
0x174 SWAP1
0x175 SLOAD
0x176 SWAP1
0x177 PUSH2 0x100
0x17a EXP
0x17b SWAP1
0x17c DIV
0x17d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x192 AND
0x193 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a8 AND
0x1a9 CALLER
0x1aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1bf AND
0x1c0 EQ
0x1c1 ISZERO
0x1c2 PUSH2 0x2c5
0x1c5 JUMPI
---
0x16f: JUMPDEST 
0x170: V80 = 0x1
0x172: V81 = 0x0
0x175: V82 = S[0x1]
0x177: V83 = 0x100
0x17a: V84 = EXP 0x100 0x0
0x17c: V85 = DIV V82 0x1
0x17d: V86 = 0xffffffffffffffffffffffffffffffffffffffff
0x192: V87 = AND 0xffffffffffffffffffffffffffffffffffffffff V85
0x193: V88 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a8: V89 = AND 0xffffffffffffffffffffffffffffffffffffffff V87
0x1a9: V90 = CALLER
0x1aa: V91 = 0xffffffffffffffffffffffffffffffffffffffff
0x1bf: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff V90
0x1c0: V93 = EQ V92 V89
0x1c1: V94 = ISZERO V93
0x1c2: V95 = 0x2c5
0x1c5: JUMPI 0x2c5 V94
---
Entry stack: [V11, 0x7c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7c]

================================

Block 0x1c6
[0x1c6:0x2c4]
---
Predecessors: [0x16f]
Successors: [0x2c5]
---
0x1c6 PUSH1 0x1
0x1c8 PUSH1 0x0
0x1ca SWAP1
0x1cb SLOAD
0x1cc SWAP1
0x1cd PUSH2 0x100
0x1d0 EXP
0x1d1 SWAP1
0x1d2 DIV
0x1d3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e8 AND
0x1e9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1fe AND
0x1ff PUSH1 0x0
0x201 DUP1
0x202 SWAP1
0x203 SLOAD
0x204 SWAP1
0x205 PUSH2 0x100
0x208 EXP
0x209 SWAP1
0x20a DIV
0x20b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x220 AND
0x221 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x236 AND
0x237 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x258 PUSH1 0x40
0x25a MLOAD
0x25b PUSH1 0x40
0x25d MLOAD
0x25e DUP1
0x25f SWAP2
0x260 SUB
0x261 SWAP1
0x262 LOG3
0x263 PUSH1 0x1
0x265 PUSH1 0x0
0x267 SWAP1
0x268 SLOAD
0x269 SWAP1
0x26a PUSH2 0x100
0x26d EXP
0x26e SWAP1
0x26f DIV
0x270 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x285 AND
0x286 PUSH1 0x0
0x288 DUP1
0x289 PUSH2 0x100
0x28c EXP
0x28d DUP2
0x28e SLOAD
0x28f DUP2
0x290 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a5 MUL
0x2a6 NOT
0x2a7 AND
0x2a8 SWAP1
0x2a9 DUP4
0x2aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2bf AND
0x2c0 MUL
0x2c1 OR
0x2c2 SWAP1
0x2c3 SSTORE
0x2c4 POP
---
0x1c6: V96 = 0x1
0x1c8: V97 = 0x0
0x1cb: V98 = S[0x1]
0x1cd: V99 = 0x100
0x1d0: V100 = EXP 0x100 0x0
0x1d2: V101 = DIV V98 0x1
0x1d3: V102 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e8: V103 = AND 0xffffffffffffffffffffffffffffffffffffffff V101
0x1e9: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x1fe: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x1ff: V106 = 0x0
0x203: V107 = S[0x0]
0x205: V108 = 0x100
0x208: V109 = EXP 0x100 0x0
0x20a: V110 = DIV V107 0x1
0x20b: V111 = 0xffffffffffffffffffffffffffffffffffffffff
0x220: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x221: V113 = 0xffffffffffffffffffffffffffffffffffffffff
0x236: V114 = AND 0xffffffffffffffffffffffffffffffffffffffff V112
0x237: V115 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x258: V116 = 0x40
0x25a: V117 = M[0x40]
0x25b: V118 = 0x40
0x25d: V119 = M[0x40]
0x260: V120 = SUB V117 V119
0x262: LOG V119 V120 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V114 V105
0x263: V121 = 0x1
0x265: V122 = 0x0
0x268: V123 = S[0x1]
0x26a: V124 = 0x100
0x26d: V125 = EXP 0x100 0x0
0x26f: V126 = DIV V123 0x1
0x270: V127 = 0xffffffffffffffffffffffffffffffffffffffff
0x285: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x286: V129 = 0x0
0x289: V130 = 0x100
0x28c: V131 = EXP 0x100 0x0
0x28e: V132 = S[0x0]
0x290: V133 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a5: V134 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x2a6: V135 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2a7: V136 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V132
0x2aa: V137 = 0xffffffffffffffffffffffffffffffffffffffff
0x2bf: V138 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x2c0: V139 = MUL V138 0x1
0x2c1: V140 = OR V139 V136
0x2c3: S[0x0] = V140
---
Entry stack: [V11, 0x7c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7c]

================================

Block 0x2c5
[0x2c5:0x2c6]
---
Predecessors: [0x16f, 0x1c6]
Successors: [0x7c]
---
0x2c5 JUMPDEST
0x2c6 JUMP
---
0x2c5: JUMPDEST 
0x2c6: JUMP 0x7c
---
Entry stack: [V11, 0x7c]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x2c7
[0x2c7:0x2eb]
---
Predecessors: [0x8a]
Successors: [0x93]
---
0x2c7 JUMPDEST
0x2c8 PUSH1 0x0
0x2ca DUP1
0x2cb SWAP1
0x2cc SLOAD
0x2cd SWAP1
0x2ce PUSH2 0x100
0x2d1 EXP
0x2d2 SWAP1
0x2d3 DIV
0x2d4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e9 AND
0x2ea DUP2
0x2eb JUMP
---
0x2c7: JUMPDEST 
0x2c8: V141 = 0x0
0x2cc: V142 = S[0x0]
0x2ce: V143 = 0x100
0x2d1: V144 = EXP 0x100 0x0
0x2d3: V145 = DIV V142 0x1
0x2d4: V146 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e9: V147 = AND 0xffffffffffffffffffffffffffffffffffffffff V145
0x2eb: JUMP 0x93
---
Entry stack: [V11, 0x93]
Stack pops: 1
Stack additions: [S0, V147]
Exit stack: [V11, 0x93, V147]

================================

Block 0x2ec
[0x2ec:0x311]
---
Predecessors: [0xe1]
Successors: [0xea]
---
0x2ec JUMPDEST
0x2ed PUSH1 0x1
0x2ef PUSH1 0x0
0x2f1 SWAP1
0x2f2 SLOAD
0x2f3 SWAP1
0x2f4 PUSH2 0x100
0x2f7 EXP
0x2f8 SWAP1
0x2f9 DIV
0x2fa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x30f AND
0x310 DUP2
0x311 JUMP
---
0x2ec: JUMPDEST 
0x2ed: V148 = 0x1
0x2ef: V149 = 0x0
0x2f2: V150 = S[0x1]
0x2f4: V151 = 0x100
0x2f7: V152 = EXP 0x100 0x0
0x2f9: V153 = DIV V150 0x1
0x2fa: V154 = 0xffffffffffffffffffffffffffffffffffffffff
0x30f: V155 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x311: JUMP 0xea
---
Entry stack: [V11, 0xea]
Stack pops: 1
Stack additions: [S0, V155]
Exit stack: [V11, 0xea, V155]

================================

Block 0x312
[0x312:0x368]
---
Predecessors: [0x138]
Successors: [0x369, 0x36d]
---
0x312 JUMPDEST
0x313 PUSH1 0x0
0x315 DUP1
0x316 SWAP1
0x317 SLOAD
0x318 SWAP1
0x319 PUSH2 0x100
0x31c EXP
0x31d SWAP1
0x31e DIV
0x31f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x334 AND
0x335 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x34a AND
0x34b CALLER
0x34c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x361 AND
0x362 EQ
0x363 ISZERO
0x364 ISZERO
0x365 PUSH2 0x36d
0x368 JUMPI
---
0x312: JUMPDEST 
0x313: V156 = 0x0
0x317: V157 = S[0x0]
0x319: V158 = 0x100
0x31c: V159 = EXP 0x100 0x0
0x31e: V160 = DIV V157 0x1
0x31f: V161 = 0xffffffffffffffffffffffffffffffffffffffff
0x334: V162 = AND 0xffffffffffffffffffffffffffffffffffffffff V160
0x335: V163 = 0xffffffffffffffffffffffffffffffffffffffff
0x34a: V164 = AND 0xffffffffffffffffffffffffffffffffffffffff V162
0x34b: V165 = CALLER
0x34c: V166 = 0xffffffffffffffffffffffffffffffffffffffff
0x361: V167 = AND 0xffffffffffffffffffffffffffffffffffffffff V165
0x362: V168 = EQ V167 V164
0x363: V169 = ISZERO V168
0x364: V170 = ISZERO V169
0x365: V171 = 0x36d
0x368: JUMPI 0x36d V170
---
Entry stack: [V11, 0x16d, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x16d, V76]

================================

Block 0x369
[0x369:0x36c]
---
Predecessors: [0x312]
Successors: []
---
0x369 PUSH1 0x0
0x36b DUP1
0x36c REVERT
---
0x369: V172 = 0x0
0x36c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x16d, V76]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x16d, V76]

================================

Block 0x36d
[0x36d:0x3b0]
---
Predecessors: [0x312]
Successors: [0x16d]
---
0x36d JUMPDEST
0x36e DUP1
0x36f PUSH1 0x1
0x371 PUSH1 0x0
0x373 PUSH2 0x100
0x376 EXP
0x377 DUP2
0x378 SLOAD
0x379 DUP2
0x37a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x38f MUL
0x390 NOT
0x391 AND
0x392 SWAP1
0x393 DUP4
0x394 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a9 AND
0x3aa MUL
0x3ab OR
0x3ac SWAP1
0x3ad SSTORE
0x3ae POP
0x3af POP
0x3b0 JUMP
---
0x36d: JUMPDEST 
0x36f: V173 = 0x1
0x371: V174 = 0x0
0x373: V175 = 0x100
0x376: V176 = EXP 0x100 0x0
0x378: V177 = S[0x1]
0x37a: V178 = 0xffffffffffffffffffffffffffffffffffffffff
0x38f: V179 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x390: V180 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x391: V181 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V177
0x394: V182 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a9: V183 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0x3aa: V184 = MUL V183 0x1
0x3ab: V185 = OR V184 V181
0x3ad: S[0x1] = V185
0x3b0: JUMP 0x16d
---
Entry stack: [V11, 0x16d, V76]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x3b1
[0x3b1:0x3e9]
---
Predecessors: []
Successors: [0x3ea]
---
0x3b1 STOP
0x3b2 LOG1
0x3b3 PUSH6 0x627a7a723058
0x3ba SHA3
0x3bb MISSING 0xca
0x3bc SWAP2
0x3bd MISSING 0x27
0x3be MISSING 0x1f
0x3bf PUSH28 0xd50c5ecbc1955d902e9b9d050e64ef626773e1695d6c036577525e00
0x3dc MISSING 0x29
0x3dd PUSH1 0x80
0x3df PUSH1 0x40
0x3e1 MSTORE
0x3e2 PUSH1 0x4
0x3e4 CALLDATASIZE
0x3e5 LT
0x3e6 PUSH2 0x78
0x3e9 JUMPI
---
0x3b1: STOP 
0x3b2: LOG S0 S1 S2
0x3b3: V186 = 0x627a7a723058
0x3ba: V187 = SHA3 0x627a7a723058 S3
0x3bb: MISSING 0xca
0x3bd: MISSING 0x27
0x3be: MISSING 0x1f
0x3bf: V188 = 0xd50c5ecbc1955d902e9b9d050e64ef626773e1695d6c036577525e00
0x3dc: MISSING 0x29
0x3dd: V189 = 0x80
0x3df: V190 = 0x40
0x3e1: M[0x40] = 0x80
0x3e2: V191 = 0x4
0x3e4: V192 = CALLDATASIZE
0x3e5: V193 = LT V192 0x4
0x3e6: V194 = 0x78
0x3e9: THROWI V193
---
Entry stack: []
Stack pops: 0
Stack additions: [V187, S2, S1, S0, 0xd50c5ecbc1955d902e9b9d050e64ef626773e1695d6c036577525e00]
Exit stack: []

================================

Block 0x3ea
[0x3ea:0x41d]
---
Predecessors: [0x3b1]
Successors: [0x41e]
---
0x3ea PUSH1 0x0
0x3ec CALLDATALOAD
0x3ed PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x40b SWAP1
0x40c DIV
0x40d PUSH4 0xffffffff
0x412 AND
0x413 DUP1
0x414 PUSH4 0x79ba5097
0x419 EQ
0x41a PUSH2 0x7d
0x41d JUMPI
---
0x3ea: V195 = 0x0
0x3ec: V196 = CALLDATALOAD 0x0
0x3ed: V197 = 0x100000000000000000000000000000000000000000000000000000000
0x40c: V198 = DIV V196 0x100000000000000000000000000000000000000000000000000000000
0x40d: V199 = 0xffffffff
0x412: V200 = AND 0xffffffff V198
0x414: V201 = 0x79ba5097
0x419: V202 = EQ 0x79ba5097 V200
0x41a: V203 = 0x7d
0x41d: THROWI V202
---
Entry stack: []
Stack pops: 0
Stack additions: [V200]
Exit stack: [V200]

================================

Block 0x41e
[0x41e:0x428]
---
Predecessors: [0x3ea]
Successors: [0x429]
---
0x41e DUP1
0x41f PUSH4 0x8da5cb5b
0x424 EQ
0x425 PUSH2 0x94
0x428 JUMPI
---
0x41f: V204 = 0x8da5cb5b
0x424: V205 = EQ 0x8da5cb5b V200
0x425: V206 = 0x94
0x428: THROWI V205
---
Entry stack: [V200]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V200]

================================

Block 0x429
[0x429:0x433]
---
Predecessors: [0x41e]
Successors: [0x434]
---
0x429 DUP1
0x42a PUSH4 0x9894ba7c
0x42f EQ
0x430 PUSH2 0xeb
0x433 JUMPI
---
0x42a: V207 = 0x9894ba7c
0x42f: V208 = EQ 0x9894ba7c V200
0x430: V209 = 0xeb
0x433: THROWI V208
---
Entry stack: [V200]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V200]

================================

Block 0x434
[0x434:0x43e]
---
Predecessors: [0x429]
Successors: [0x43f]
---
0x434 DUP1
0x435 PUSH4 0xd4ee1d90
0x43a EQ
0x43b PUSH2 0x12e
0x43e JUMPI
---
0x435: V210 = 0xd4ee1d90
0x43a: V211 = EQ 0xd4ee1d90 V200
0x43b: V212 = 0x12e
0x43e: THROWI V211
---
Entry stack: [V200]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V200]

================================

Block 0x43f
[0x43f:0x449]
---
Predecessors: [0x434]
Successors: [0x44a]
---
0x43f DUP1
0x440 PUSH4 0xd5c61301
0x445 EQ
0x446 PUSH2 0x185
0x449 JUMPI
---
0x440: V213 = 0xd5c61301
0x445: V214 = EQ 0xd5c61301 V200
0x446: V215 = 0x185
0x449: THROWI V214
---
Entry stack: [V200]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V200]

================================

Block 0x44a
[0x44a:0x454]
---
Predecessors: [0x43f]
Successors: [0x455]
---
0x44a DUP1
0x44b PUSH4 0xf2fde38b
0x450 EQ
0x451 PUSH2 0x1ee
0x454 JUMPI
---
0x44b: V216 = 0xf2fde38b
0x450: V217 = EQ 0xf2fde38b V200
0x451: V218 = 0x1ee
0x454: THROWI V217
---
Entry stack: [V200]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V200]

================================

Block 0x455
[0x455:0x461]
---
Predecessors: [0x44a]
Successors: [0x462]
---
0x455 JUMPDEST
0x456 PUSH1 0x0
0x458 DUP1
0x459 REVERT
0x45a JUMPDEST
0x45b CALLVALUE
0x45c DUP1
0x45d ISZERO
0x45e PUSH2 0x89
0x461 JUMPI
---
0x455: JUMPDEST 
0x456: V219 = 0x0
0x459: REVERT 0x0 0x0
0x45a: JUMPDEST 
0x45b: V220 = CALLVALUE
0x45d: V221 = ISZERO V220
0x45e: V222 = 0x89
0x461: THROWI V221
---
Entry stack: [V200]
Stack pops: 0
Stack additions: [V220]
Exit stack: []

================================

Block 0x462
[0x462:0x478]
---
Predecessors: [0x455]
Successors: [0x479]
---
0x462 PUSH1 0x0
0x464 DUP1
0x465 REVERT
0x466 JUMPDEST
0x467 POP
0x468 PUSH2 0x92
0x46b PUSH2 0x231
0x46e JUMP
0x46f JUMPDEST
0x470 STOP
0x471 JUMPDEST
0x472 CALLVALUE
0x473 DUP1
0x474 ISZERO
0x475 PUSH2 0xa0
0x478 JUMPI
---
0x462: V223 = 0x0
0x465: REVERT 0x0 0x0
0x466: JUMPDEST 
0x468: V224 = 0x92
0x46b: V225 = 0x231
0x46e: THROW 
0x46f: JUMPDEST 
0x470: STOP 
0x471: JUMPDEST 
0x472: V226 = CALLVALUE
0x474: V227 = ISZERO V226
0x475: V228 = 0xa0
0x478: THROWI V227
---
Entry stack: [V220]
Stack pops: 0
Stack additions: [0x92, V226]
Exit stack: []

================================

Block 0x479
[0x479:0x4cf]
---
Predecessors: [0x462]
Successors: [0x4d0]
---
0x479 PUSH1 0x0
0x47b DUP1
0x47c REVERT
0x47d JUMPDEST
0x47e POP
0x47f PUSH2 0xa9
0x482 PUSH2 0x389
0x485 JUMP
0x486 JUMPDEST
0x487 PUSH1 0x40
0x489 MLOAD
0x48a DUP1
0x48b DUP3
0x48c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4a1 AND
0x4a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4b7 AND
0x4b8 DUP2
0x4b9 MSTORE
0x4ba PUSH1 0x20
0x4bc ADD
0x4bd SWAP2
0x4be POP
0x4bf POP
0x4c0 PUSH1 0x40
0x4c2 MLOAD
0x4c3 DUP1
0x4c4 SWAP2
0x4c5 SUB
0x4c6 SWAP1
0x4c7 RETURN
0x4c8 JUMPDEST
0x4c9 CALLVALUE
0x4ca DUP1
0x4cb ISZERO
0x4cc PUSH2 0xf7
0x4cf JUMPI
---
0x479: V229 = 0x0
0x47c: REVERT 0x0 0x0
0x47d: JUMPDEST 
0x47f: V230 = 0xa9
0x482: V231 = 0x389
0x485: THROW 
0x486: JUMPDEST 
0x487: V232 = 0x40
0x489: V233 = M[0x40]
0x48c: V234 = 0xffffffffffffffffffffffffffffffffffffffff
0x4a1: V235 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x4a2: V236 = 0xffffffffffffffffffffffffffffffffffffffff
0x4b7: V237 = AND 0xffffffffffffffffffffffffffffffffffffffff V235
0x4b9: M[V233] = V237
0x4ba: V238 = 0x20
0x4bc: V239 = ADD 0x20 V233
0x4c0: V240 = 0x40
0x4c2: V241 = M[0x40]
0x4c5: V242 = SUB V239 V241
0x4c7: RETURN V241 V242
0x4c8: JUMPDEST 
0x4c9: V243 = CALLVALUE
0x4cb: V244 = ISZERO V243
0x4cc: V245 = 0xf7
0x4cf: THROWI V244
---
Entry stack: [V226]
Stack pops: 0
Stack additions: [0xa9, V243]
Exit stack: []

================================

Block 0x4d0
[0x4d0:0x512]
---
Predecessors: [0x479]
Successors: [0x513]
---
0x4d0 PUSH1 0x0
0x4d2 DUP1
0x4d3 REVERT
0x4d4 JUMPDEST
0x4d5 POP
0x4d6 PUSH2 0x12c
0x4d9 PUSH1 0x4
0x4db DUP1
0x4dc CALLDATASIZE
0x4dd SUB
0x4de DUP2
0x4df ADD
0x4e0 SWAP1
0x4e1 DUP1
0x4e2 DUP1
0x4e3 CALLDATALOAD
0x4e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4f9 AND
0x4fa SWAP1
0x4fb PUSH1 0x20
0x4fd ADD
0x4fe SWAP1
0x4ff SWAP3
0x500 SWAP2
0x501 SWAP1
0x502 POP
0x503 POP
0x504 POP
0x505 PUSH2 0x3ae
0x508 JUMP
0x509 JUMPDEST
0x50a STOP
0x50b JUMPDEST
0x50c CALLVALUE
0x50d DUP1
0x50e ISZERO
0x50f PUSH2 0x13a
0x512 JUMPI
---
0x4d0: V246 = 0x0
0x4d3: REVERT 0x0 0x0
0x4d4: JUMPDEST 
0x4d6: V247 = 0x12c
0x4d9: V248 = 0x4
0x4dc: V249 = CALLDATASIZE
0x4dd: V250 = SUB V249 0x4
0x4df: V251 = ADD 0x4 V250
0x4e3: V252 = CALLDATALOAD 0x4
0x4e4: V253 = 0xffffffffffffffffffffffffffffffffffffffff
0x4f9: V254 = AND 0xffffffffffffffffffffffffffffffffffffffff V252
0x4fb: V255 = 0x20
0x4fd: V256 = ADD 0x20 0x4
0x505: V257 = 0x3ae
0x508: THROW 
0x509: JUMPDEST 
0x50a: STOP 
0x50b: JUMPDEST 
0x50c: V258 = CALLVALUE
0x50e: V259 = ISZERO V258
0x50f: V260 = 0x13a
0x512: THROWI V259
---
Entry stack: [V243]
Stack pops: 0
Stack additions: [V254, 0x12c, V258]
Exit stack: []

================================

Block 0x513
[0x513:0x569]
---
Predecessors: [0x4d0]
Successors: [0x56a]
---
0x513 PUSH1 0x0
0x515 DUP1
0x516 REVERT
0x517 JUMPDEST
0x518 POP
0x519 PUSH2 0x143
0x51c PUSH2 0x6a6
0x51f JUMP
0x520 JUMPDEST
0x521 PUSH1 0x40
0x523 MLOAD
0x524 DUP1
0x525 DUP3
0x526 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x53b AND
0x53c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x551 AND
0x552 DUP2
0x553 MSTORE
0x554 PUSH1 0x20
0x556 ADD
0x557 SWAP2
0x558 POP
0x559 POP
0x55a PUSH1 0x40
0x55c MLOAD
0x55d DUP1
0x55e SWAP2
0x55f SUB
0x560 SWAP1
0x561 RETURN
0x562 JUMPDEST
0x563 CALLVALUE
0x564 DUP1
0x565 ISZERO
0x566 PUSH2 0x191
0x569 JUMPI
---
0x513: V261 = 0x0
0x516: REVERT 0x0 0x0
0x517: JUMPDEST 
0x519: V262 = 0x143
0x51c: V263 = 0x6a6
0x51f: THROW 
0x520: JUMPDEST 
0x521: V264 = 0x40
0x523: V265 = M[0x40]
0x526: V266 = 0xffffffffffffffffffffffffffffffffffffffff
0x53b: V267 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x53c: V268 = 0xffffffffffffffffffffffffffffffffffffffff
0x551: V269 = AND 0xffffffffffffffffffffffffffffffffffffffff V267
0x553: M[V265] = V269
0x554: V270 = 0x20
0x556: V271 = ADD 0x20 V265
0x55a: V272 = 0x40
0x55c: V273 = M[0x40]
0x55f: V274 = SUB V271 V273
0x561: RETURN V273 V274
0x562: JUMPDEST 
0x563: V275 = CALLVALUE
0x565: V276 = ISZERO V275
0x566: V277 = 0x191
0x569: THROWI V276
---
Entry stack: [V258]
Stack pops: 0
Stack additions: [0x143, V275]
Exit stack: []

================================

Block 0x56a
[0x56a:0x5d2]
---
Predecessors: [0x513]
Successors: [0x5d3]
---
0x56a PUSH1 0x0
0x56c DUP1
0x56d REVERT
0x56e JUMPDEST
0x56f POP
0x570 PUSH2 0x1ec
0x573 PUSH1 0x4
0x575 DUP1
0x576 CALLDATASIZE
0x577 SUB
0x578 DUP2
0x579 ADD
0x57a SWAP1
0x57b DUP1
0x57c DUP1
0x57d CALLDATALOAD
0x57e SWAP1
0x57f PUSH1 0x20
0x581 ADD
0x582 SWAP1
0x583 DUP3
0x584 ADD
0x585 DUP1
0x586 CALLDATALOAD
0x587 SWAP1
0x588 PUSH1 0x20
0x58a ADD
0x58b SWAP1
0x58c DUP1
0x58d DUP1
0x58e PUSH1 0x1f
0x590 ADD
0x591 PUSH1 0x20
0x593 DUP1
0x594 SWAP2
0x595 DIV
0x596 MUL
0x597 PUSH1 0x20
0x599 ADD
0x59a PUSH1 0x40
0x59c MLOAD
0x59d SWAP1
0x59e DUP2
0x59f ADD
0x5a0 PUSH1 0x40
0x5a2 MSTORE
0x5a3 DUP1
0x5a4 SWAP4
0x5a5 SWAP3
0x5a6 SWAP2
0x5a7 SWAP1
0x5a8 DUP2
0x5a9 DUP2
0x5aa MSTORE
0x5ab PUSH1 0x20
0x5ad ADD
0x5ae DUP4
0x5af DUP4
0x5b0 DUP1
0x5b1 DUP3
0x5b2 DUP5
0x5b3 CALLDATACOPY
0x5b4 DUP3
0x5b5 ADD
0x5b6 SWAP2
0x5b7 POP
0x5b8 POP
0x5b9 POP
0x5ba POP
0x5bb POP
0x5bc POP
0x5bd SWAP2
0x5be SWAP3
0x5bf SWAP2
0x5c0 SWAP3
0x5c1 SWAP1
0x5c2 POP
0x5c3 POP
0x5c4 POP
0x5c5 PUSH2 0x6cc
0x5c8 JUMP
0x5c9 JUMPDEST
0x5ca STOP
0x5cb JUMPDEST
0x5cc CALLVALUE
0x5cd DUP1
0x5ce ISZERO
0x5cf PUSH2 0x1fa
0x5d2 JUMPI
---
0x56a: V278 = 0x0
0x56d: REVERT 0x0 0x0
0x56e: JUMPDEST 
0x570: V279 = 0x1ec
0x573: V280 = 0x4
0x576: V281 = CALLDATASIZE
0x577: V282 = SUB V281 0x4
0x579: V283 = ADD 0x4 V282
0x57d: V284 = CALLDATALOAD 0x4
0x57f: V285 = 0x20
0x581: V286 = ADD 0x20 0x4
0x584: V287 = ADD 0x4 V284
0x586: V288 = CALLDATALOAD V287
0x588: V289 = 0x20
0x58a: V290 = ADD 0x20 V287
0x58e: V291 = 0x1f
0x590: V292 = ADD 0x1f V288
0x591: V293 = 0x20
0x595: V294 = DIV V292 0x20
0x596: V295 = MUL V294 0x20
0x597: V296 = 0x20
0x599: V297 = ADD 0x20 V295
0x59a: V298 = 0x40
0x59c: V299 = M[0x40]
0x59f: V300 = ADD V299 V297
0x5a0: V301 = 0x40
0x5a2: M[0x40] = V300
0x5aa: M[V299] = V288
0x5ab: V302 = 0x20
0x5ad: V303 = ADD 0x20 V299
0x5b3: CALLDATACOPY V303 V290 V288
0x5b5: V304 = ADD V303 V288
0x5c5: V305 = 0x6cc
0x5c8: THROW 
0x5c9: JUMPDEST 
0x5ca: STOP 
0x5cb: JUMPDEST 
0x5cc: V306 = CALLVALUE
0x5ce: V307 = ISZERO V306
0x5cf: V308 = 0x1fa
0x5d2: THROWI V307
---
Entry stack: [V275]
Stack pops: 0
Stack additions: [V299, 0x1ec, V306]
Exit stack: []

================================

Block 0x5d3
[0x5d3:0x664]
---
Predecessors: [0x56a]
Successors: [0x665]
---
0x5d3 PUSH1 0x0
0x5d5 DUP1
0x5d6 REVERT
0x5d7 JUMPDEST
0x5d8 POP
0x5d9 PUSH2 0x22f
0x5dc PUSH1 0x4
0x5de DUP1
0x5df CALLDATASIZE
0x5e0 SUB
0x5e1 DUP2
0x5e2 ADD
0x5e3 SWAP1
0x5e4 DUP1
0x5e5 DUP1
0x5e6 CALLDATALOAD
0x5e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5fc AND
0x5fd SWAP1
0x5fe PUSH1 0x20
0x600 ADD
0x601 SWAP1
0x602 SWAP3
0x603 SWAP2
0x604 SWAP1
0x605 POP
0x606 POP
0x607 POP
0x608 PUSH2 0x782
0x60b JUMP
0x60c JUMPDEST
0x60d STOP
0x60e JUMPDEST
0x60f PUSH1 0x1
0x611 PUSH1 0x0
0x613 SWAP1
0x614 SLOAD
0x615 SWAP1
0x616 PUSH2 0x100
0x619 EXP
0x61a SWAP1
0x61b DIV
0x61c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x631 AND
0x632 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x647 AND
0x648 CALLER
0x649 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x65e AND
0x65f EQ
0x660 ISZERO
0x661 PUSH2 0x387
0x664 JUMPI
---
0x5d3: V309 = 0x0
0x5d6: REVERT 0x0 0x0
0x5d7: JUMPDEST 
0x5d9: V310 = 0x22f
0x5dc: V311 = 0x4
0x5df: V312 = CALLDATASIZE
0x5e0: V313 = SUB V312 0x4
0x5e2: V314 = ADD 0x4 V313
0x5e6: V315 = CALLDATALOAD 0x4
0x5e7: V316 = 0xffffffffffffffffffffffffffffffffffffffff
0x5fc: V317 = AND 0xffffffffffffffffffffffffffffffffffffffff V315
0x5fe: V318 = 0x20
0x600: V319 = ADD 0x20 0x4
0x608: V320 = 0x782
0x60b: THROW 
0x60c: JUMPDEST 
0x60d: STOP 
0x60e: JUMPDEST 
0x60f: V321 = 0x1
0x611: V322 = 0x0
0x614: V323 = S[0x1]
0x616: V324 = 0x100
0x619: V325 = EXP 0x100 0x0
0x61b: V326 = DIV V323 0x1
0x61c: V327 = 0xffffffffffffffffffffffffffffffffffffffff
0x631: V328 = AND 0xffffffffffffffffffffffffffffffffffffffff V326
0x632: V329 = 0xffffffffffffffffffffffffffffffffffffffff
0x647: V330 = AND 0xffffffffffffffffffffffffffffffffffffffff V328
0x648: V331 = CALLER
0x649: V332 = 0xffffffffffffffffffffffffffffffffffffffff
0x65e: V333 = AND 0xffffffffffffffffffffffffffffffffffffffff V331
0x65f: V334 = EQ V333 V330
0x660: V335 = ISZERO V334
0x661: V336 = 0x387
0x664: THROWI V335
---
Entry stack: [V306]
Stack pops: 0
Stack additions: [V317, 0x22f]
Exit stack: []

================================

Block 0x665
[0x665:0x763]
---
Predecessors: [0x5d3]
Successors: [0x764]
---
0x665 PUSH1 0x1
0x667 PUSH1 0x0
0x669 SWAP1
0x66a SLOAD
0x66b SWAP1
0x66c PUSH2 0x100
0x66f EXP
0x670 SWAP1
0x671 DIV
0x672 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x687 AND
0x688 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x69d AND
0x69e PUSH1 0x0
0x6a0 DUP1
0x6a1 SWAP1
0x6a2 SLOAD
0x6a3 SWAP1
0x6a4 PUSH2 0x100
0x6a7 EXP
0x6a8 SWAP1
0x6a9 DIV
0x6aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6bf AND
0x6c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6d5 AND
0x6d6 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x6f7 PUSH1 0x40
0x6f9 MLOAD
0x6fa PUSH1 0x40
0x6fc MLOAD
0x6fd DUP1
0x6fe SWAP2
0x6ff SUB
0x700 SWAP1
0x701 LOG3
0x702 PUSH1 0x1
0x704 PUSH1 0x0
0x706 SWAP1
0x707 SLOAD
0x708 SWAP1
0x709 PUSH2 0x100
0x70c EXP
0x70d SWAP1
0x70e DIV
0x70f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x724 AND
0x725 PUSH1 0x0
0x727 DUP1
0x728 PUSH2 0x100
0x72b EXP
0x72c DUP2
0x72d SLOAD
0x72e DUP2
0x72f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x744 MUL
0x745 NOT
0x746 AND
0x747 SWAP1
0x748 DUP4
0x749 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x75e AND
0x75f MUL
0x760 OR
0x761 SWAP1
0x762 SSTORE
0x763 POP
---
0x665: V337 = 0x1
0x667: V338 = 0x0
0x66a: V339 = S[0x1]
0x66c: V340 = 0x100
0x66f: V341 = EXP 0x100 0x0
0x671: V342 = DIV V339 0x1
0x672: V343 = 0xffffffffffffffffffffffffffffffffffffffff
0x687: V344 = AND 0xffffffffffffffffffffffffffffffffffffffff V342
0x688: V345 = 0xffffffffffffffffffffffffffffffffffffffff
0x69d: V346 = AND 0xffffffffffffffffffffffffffffffffffffffff V344
0x69e: V347 = 0x0
0x6a2: V348 = S[0x0]
0x6a4: V349 = 0x100
0x6a7: V350 = EXP 0x100 0x0
0x6a9: V351 = DIV V348 0x1
0x6aa: V352 = 0xffffffffffffffffffffffffffffffffffffffff
0x6bf: V353 = AND 0xffffffffffffffffffffffffffffffffffffffff V351
0x6c0: V354 = 0xffffffffffffffffffffffffffffffffffffffff
0x6d5: V355 = AND 0xffffffffffffffffffffffffffffffffffffffff V353
0x6d6: V356 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x6f7: V357 = 0x40
0x6f9: V358 = M[0x40]
0x6fa: V359 = 0x40
0x6fc: V360 = M[0x40]
0x6ff: V361 = SUB V358 V360
0x701: LOG V360 V361 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V355 V346
0x702: V362 = 0x1
0x704: V363 = 0x0
0x707: V364 = S[0x1]
0x709: V365 = 0x100
0x70c: V366 = EXP 0x100 0x0
0x70e: V367 = DIV V364 0x1
0x70f: V368 = 0xffffffffffffffffffffffffffffffffffffffff
0x724: V369 = AND 0xffffffffffffffffffffffffffffffffffffffff V367
0x725: V370 = 0x0
0x728: V371 = 0x100
0x72b: V372 = EXP 0x100 0x0
0x72d: V373 = S[0x0]
0x72f: V374 = 0xffffffffffffffffffffffffffffffffffffffff
0x744: V375 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x745: V376 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x746: V377 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V373
0x749: V378 = 0xffffffffffffffffffffffffffffffffffffffff
0x75e: V379 = AND 0xffffffffffffffffffffffffffffffffffffffff V369
0x75f: V380 = MUL V379 0x1
0x760: V381 = OR V380 V377
0x762: S[0x0] = V381
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x764
[0x764:0x7e4]
---
Predecessors: [0x665]
Successors: [0x7e5]
---
0x764 JUMPDEST
0x765 JUMP
0x766 JUMPDEST
0x767 PUSH1 0x0
0x769 DUP1
0x76a SWAP1
0x76b SLOAD
0x76c SWAP1
0x76d PUSH2 0x100
0x770 EXP
0x771 SWAP1
0x772 DIV
0x773 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x788 AND
0x789 DUP2
0x78a JUMP
0x78b JUMPDEST
0x78c PUSH1 0x0
0x78e DUP1
0x78f PUSH1 0x0
0x791 DUP1
0x792 SWAP1
0x793 SLOAD
0x794 SWAP1
0x795 PUSH2 0x100
0x798 EXP
0x799 SWAP1
0x79a DIV
0x79b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7b0 AND
0x7b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7c6 AND
0x7c7 CALLER
0x7c8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7dd AND
0x7de EQ
0x7df ISZERO
0x7e0 ISZERO
0x7e1 PUSH2 0x40c
0x7e4 JUMPI
---
0x764: JUMPDEST 
0x765: JUMP S0
0x766: JUMPDEST 
0x767: V382 = 0x0
0x76b: V383 = S[0x0]
0x76d: V384 = 0x100
0x770: V385 = EXP 0x100 0x0
0x772: V386 = DIV V383 0x1
0x773: V387 = 0xffffffffffffffffffffffffffffffffffffffff
0x788: V388 = AND 0xffffffffffffffffffffffffffffffffffffffff V386
0x78a: JUMP S0
0x78b: JUMPDEST 
0x78c: V389 = 0x0
0x78f: V390 = 0x0
0x793: V391 = S[0x0]
0x795: V392 = 0x100
0x798: V393 = EXP 0x100 0x0
0x79a: V394 = DIV V391 0x1
0x79b: V395 = 0xffffffffffffffffffffffffffffffffffffffff
0x7b0: V396 = AND 0xffffffffffffffffffffffffffffffffffffffff V394
0x7b1: V397 = 0xffffffffffffffffffffffffffffffffffffffff
0x7c6: V398 = AND 0xffffffffffffffffffffffffffffffffffffffff V396
0x7c7: V399 = CALLER
0x7c8: V400 = 0xffffffffffffffffffffffffffffffffffffffff
0x7dd: V401 = AND 0xffffffffffffffffffffffffffffffffffffffff V399
0x7de: V402 = EQ V401 V398
0x7df: V403 = ISZERO V402
0x7e0: V404 = ISZERO V403
0x7e1: V405 = 0x40c
0x7e4: THROWI V404
---
Entry stack: []
Stack pops: 2
Stack additions: [0x0, 0x0]
Exit stack: []

================================

Block 0x7e5
[0x7e5:0x81e]
---
Predecessors: [0x764]
Successors: [0x81f]
---
0x7e5 PUSH1 0x0
0x7e7 DUP1
0x7e8 REVERT
0x7e9 JUMPDEST
0x7ea PUSH1 0x0
0x7ec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x801 AND
0x802 DUP4
0x803 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x818 AND
0x819 EQ
0x81a ISZERO
0x81b PUSH2 0x4c5
0x81e JUMPI
---
0x7e5: V406 = 0x0
0x7e8: REVERT 0x0 0x0
0x7e9: JUMPDEST 
0x7ea: V407 = 0x0
0x7ec: V408 = 0xffffffffffffffffffffffffffffffffffffffff
0x801: V409 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x803: V410 = 0xffffffffffffffffffffffffffffffffffffffff
0x818: V411 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x819: V412 = EQ V411 0x0
0x81a: V413 = ISZERO V412
0x81b: V414 = 0x4c5
0x81e: THROWI V413
---
Entry stack: [0x0, 0x0]
Stack pops: 0
Stack additions: [S0, S1, S2]
Exit stack: []

================================

Block 0x81f
[0x81f:0x892]
---
Predecessors: [0x7e5]
Successors: [0x893]
---
0x81f PUSH1 0x0
0x821 DUP1
0x822 SWAP1
0x823 SLOAD
0x824 SWAP1
0x825 PUSH2 0x100
0x828 EXP
0x829 SWAP1
0x82a DIV
0x82b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x840 AND
0x841 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x856 AND
0x857 PUSH2 0x8fc
0x85a ADDRESS
0x85b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x870 AND
0x871 BALANCE
0x872 SWAP1
0x873 DUP2
0x874 ISZERO
0x875 MUL
0x876 SWAP1
0x877 PUSH1 0x40
0x879 MLOAD
0x87a PUSH1 0x0
0x87c PUSH1 0x40
0x87e MLOAD
0x87f DUP1
0x880 DUP4
0x881 SUB
0x882 DUP2
0x883 DUP6
0x884 DUP9
0x885 DUP9
0x886 CALL
0x887 SWAP4
0x888 POP
0x889 POP
0x88a POP
0x88b POP
0x88c ISZERO
0x88d DUP1
0x88e ISZERO
0x88f PUSH2 0x4bf
0x892 JUMPI
---
0x81f: V415 = 0x0
0x823: V416 = S[0x0]
0x825: V417 = 0x100
0x828: V418 = EXP 0x100 0x0
0x82a: V419 = DIV V416 0x1
0x82b: V420 = 0xffffffffffffffffffffffffffffffffffffffff
0x840: V421 = AND 0xffffffffffffffffffffffffffffffffffffffff V419
0x841: V422 = 0xffffffffffffffffffffffffffffffffffffffff
0x856: V423 = AND 0xffffffffffffffffffffffffffffffffffffffff V421
0x857: V424 = 0x8fc
0x85a: V425 = ADDRESS
0x85b: V426 = 0xffffffffffffffffffffffffffffffffffffffff
0x870: V427 = AND 0xffffffffffffffffffffffffffffffffffffffff V425
0x871: V428 = BALANCE V427
0x874: V429 = ISZERO V428
0x875: V430 = MUL V429 0x8fc
0x877: V431 = 0x40
0x879: V432 = M[0x40]
0x87a: V433 = 0x0
0x87c: V434 = 0x40
0x87e: V435 = M[0x40]
0x881: V436 = SUB V432 V435
0x886: V437 = CALL V430 V423 V428 V435 V436 V435 0x0
0x88c: V438 = ISZERO V437
0x88e: V439 = ISZERO V438
0x88f: V440 = 0x4bf
0x892: THROWI V439
---
Entry stack: [S2, S1, S0]
Stack pops: 0
Stack additions: [V438]
Exit stack: [S2, S1, S0, V438]

================================

Block 0x893
[0x893:0x93b]
---
Predecessors: [0x81f]
Successors: [0x93c]
---
0x893 RETURNDATASIZE
0x894 PUSH1 0x0
0x896 DUP1
0x897 RETURNDATACOPY
0x898 RETURNDATASIZE
0x899 PUSH1 0x0
0x89b REVERT
0x89c JUMPDEST
0x89d POP
0x89e PUSH2 0x6a1
0x8a1 JUMP
0x8a2 JUMPDEST
0x8a3 DUP3
0x8a4 SWAP2
0x8a5 POP
0x8a6 DUP2
0x8a7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8bc AND
0x8bd PUSH4 0x70a08231
0x8c2 ADDRESS
0x8c3 PUSH1 0x40
0x8c5 MLOAD
0x8c6 DUP3
0x8c7 PUSH4 0xffffffff
0x8cc AND
0x8cd PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x8eb MUL
0x8ec DUP2
0x8ed MSTORE
0x8ee PUSH1 0x4
0x8f0 ADD
0x8f1 DUP1
0x8f2 DUP3
0x8f3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x908 AND
0x909 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x91e AND
0x91f DUP2
0x920 MSTORE
0x921 PUSH1 0x20
0x923 ADD
0x924 SWAP2
0x925 POP
0x926 POP
0x927 PUSH1 0x20
0x929 PUSH1 0x40
0x92b MLOAD
0x92c DUP1
0x92d DUP4
0x92e SUB
0x92f DUP2
0x930 PUSH1 0x0
0x932 DUP8
0x933 DUP1
0x934 EXTCODESIZE
0x935 ISZERO
0x936 DUP1
0x937 ISZERO
0x938 PUSH2 0x563
0x93b JUMPI
---
0x893: V441 = RETURNDATASIZE
0x894: V442 = 0x0
0x897: RETURNDATACOPY 0x0 0x0 V441
0x898: V443 = RETURNDATASIZE
0x899: V444 = 0x0
0x89b: REVERT 0x0 V443
0x89c: JUMPDEST 
0x89e: V445 = 0x6a1
0x8a1: THROW 
0x8a2: JUMPDEST 
0x8a7: V446 = 0xffffffffffffffffffffffffffffffffffffffff
0x8bc: V447 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x8bd: V448 = 0x70a08231
0x8c2: V449 = ADDRESS
0x8c3: V450 = 0x40
0x8c5: V451 = M[0x40]
0x8c7: V452 = 0xffffffff
0x8cc: V453 = AND 0xffffffff 0x70a08231
0x8cd: V454 = 0x100000000000000000000000000000000000000000000000000000000
0x8eb: V455 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x8ed: M[V451] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x8ee: V456 = 0x4
0x8f0: V457 = ADD 0x4 V451
0x8f3: V458 = 0xffffffffffffffffffffffffffffffffffffffff
0x908: V459 = AND 0xffffffffffffffffffffffffffffffffffffffff V449
0x909: V460 = 0xffffffffffffffffffffffffffffffffffffffff
0x91e: V461 = AND 0xffffffffffffffffffffffffffffffffffffffff V459
0x920: M[V457] = V461
0x921: V462 = 0x20
0x923: V463 = ADD 0x20 V457
0x927: V464 = 0x20
0x929: V465 = 0x40
0x92b: V466 = M[0x40]
0x92e: V467 = SUB V463 V466
0x930: V468 = 0x0
0x934: V469 = EXTCODESIZE V447
0x935: V470 = ISZERO V469
0x937: V471 = ISZERO V470
0x938: V472 = 0x563
0x93b: THROWI V471
---
Entry stack: [S3, S2, S1, V438]
Stack pops: 0
Stack additions: [V470, V447, 0x0, V466, V467, V466, 0x20, V463, 0x70a08231, V447, S0, S2, S2]
Exit stack: []

================================

Block 0x93c
[0x93c:0x94a]
---
Predecessors: [0x893]
Successors: [0x94b]
---
0x93c PUSH1 0x0
0x93e DUP1
0x93f REVERT
0x940 JUMPDEST
0x941 POP
0x942 GAS
0x943 CALL
0x944 ISZERO
0x945 DUP1
0x946 ISZERO
0x947 PUSH2 0x577
0x94a JUMPI
---
0x93c: V473 = 0x0
0x93f: REVERT 0x0 0x0
0x940: JUMPDEST 
0x942: V474 = GAS
0x943: V475 = CALL V474 S1 S2 S3 S4 S5 S6
0x944: V476 = ISZERO V475
0x946: V477 = ISZERO V476
0x947: V478 = 0x577
0x94a: THROWI V477
---
Entry stack: [S12, S11, S10, V447, 0x70a08231, V463, 0x20, V466, V467, V466, 0x0, V447, V470]
Stack pops: 0
Stack additions: [V476]
Exit stack: []

================================

Block 0x94b
[0x94b:0x965]
---
Predecessors: [0x93c]
Successors: [0x966]
---
0x94b RETURNDATASIZE
0x94c PUSH1 0x0
0x94e DUP1
0x94f RETURNDATACOPY
0x950 RETURNDATASIZE
0x951 PUSH1 0x0
0x953 REVERT
0x954 JUMPDEST
0x955 POP
0x956 POP
0x957 POP
0x958 POP
0x959 PUSH1 0x40
0x95b MLOAD
0x95c RETURNDATASIZE
0x95d PUSH1 0x20
0x95f DUP2
0x960 LT
0x961 ISZERO
0x962 PUSH2 0x58d
0x965 JUMPI
---
0x94b: V479 = RETURNDATASIZE
0x94c: V480 = 0x0
0x94f: RETURNDATACOPY 0x0 0x0 V479
0x950: V481 = RETURNDATASIZE
0x951: V482 = 0x0
0x953: REVERT 0x0 V481
0x954: JUMPDEST 
0x959: V483 = 0x40
0x95b: V484 = M[0x40]
0x95c: V485 = RETURNDATASIZE
0x95d: V486 = 0x20
0x960: V487 = LT V485 0x20
0x961: V488 = ISZERO V487
0x962: V489 = 0x58d
0x965: THROWI V488
---
Entry stack: [V476]
Stack pops: 0
Stack additions: [V485, V484]
Exit stack: []

================================

Block 0x966
[0x966:0xa3c]
---
Predecessors: [0x94b]
Successors: [0xa3d]
---
0x966 PUSH1 0x0
0x968 DUP1
0x969 REVERT
0x96a JUMPDEST
0x96b DUP2
0x96c ADD
0x96d SWAP1
0x96e DUP1
0x96f DUP1
0x970 MLOAD
0x971 SWAP1
0x972 PUSH1 0x20
0x974 ADD
0x975 SWAP1
0x976 SWAP3
0x977 SWAP2
0x978 SWAP1
0x979 POP
0x97a POP
0x97b POP
0x97c SWAP1
0x97d POP
0x97e DUP2
0x97f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x994 AND
0x995 PUSH4 0xa9059cbb
0x99a PUSH1 0x0
0x99c DUP1
0x99d SWAP1
0x99e SLOAD
0x99f SWAP1
0x9a0 PUSH2 0x100
0x9a3 EXP
0x9a4 SWAP1
0x9a5 DIV
0x9a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9bb AND
0x9bc DUP4
0x9bd PUSH1 0x40
0x9bf MLOAD
0x9c0 DUP4
0x9c1 PUSH4 0xffffffff
0x9c6 AND
0x9c7 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x9e5 MUL
0x9e6 DUP2
0x9e7 MSTORE
0x9e8 PUSH1 0x4
0x9ea ADD
0x9eb DUP1
0x9ec DUP4
0x9ed PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa02 AND
0xa03 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa18 AND
0xa19 DUP2
0xa1a MSTORE
0xa1b PUSH1 0x20
0xa1d ADD
0xa1e DUP3
0xa1f DUP2
0xa20 MSTORE
0xa21 PUSH1 0x20
0xa23 ADD
0xa24 SWAP3
0xa25 POP
0xa26 POP
0xa27 POP
0xa28 PUSH1 0x20
0xa2a PUSH1 0x40
0xa2c MLOAD
0xa2d DUP1
0xa2e DUP4
0xa2f SUB
0xa30 DUP2
0xa31 PUSH1 0x0
0xa33 DUP8
0xa34 DUP1
0xa35 EXTCODESIZE
0xa36 ISZERO
0xa37 DUP1
0xa38 ISZERO
0xa39 PUSH2 0x664
0xa3c JUMPI
---
0x966: V490 = 0x0
0x969: REVERT 0x0 0x0
0x96a: JUMPDEST 
0x96c: V491 = ADD S1 S0
0x970: V492 = M[S1]
0x972: V493 = 0x20
0x974: V494 = ADD 0x20 S1
0x97f: V495 = 0xffffffffffffffffffffffffffffffffffffffff
0x994: V496 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x995: V497 = 0xa9059cbb
0x99a: V498 = 0x0
0x99e: V499 = S[0x0]
0x9a0: V500 = 0x100
0x9a3: V501 = EXP 0x100 0x0
0x9a5: V502 = DIV V499 0x1
0x9a6: V503 = 0xffffffffffffffffffffffffffffffffffffffff
0x9bb: V504 = AND 0xffffffffffffffffffffffffffffffffffffffff V502
0x9bd: V505 = 0x40
0x9bf: V506 = M[0x40]
0x9c1: V507 = 0xffffffff
0x9c6: V508 = AND 0xffffffff 0xa9059cbb
0x9c7: V509 = 0x100000000000000000000000000000000000000000000000000000000
0x9e5: V510 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x9e7: M[V506] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x9e8: V511 = 0x4
0x9ea: V512 = ADD 0x4 V506
0x9ed: V513 = 0xffffffffffffffffffffffffffffffffffffffff
0xa02: V514 = AND 0xffffffffffffffffffffffffffffffffffffffff V504
0xa03: V515 = 0xffffffffffffffffffffffffffffffffffffffff
0xa18: V516 = AND 0xffffffffffffffffffffffffffffffffffffffff V514
0xa1a: M[V512] = V516
0xa1b: V517 = 0x20
0xa1d: V518 = ADD 0x20 V512
0xa20: M[V518] = V492
0xa21: V519 = 0x20
0xa23: V520 = ADD 0x20 V518
0xa28: V521 = 0x20
0xa2a: V522 = 0x40
0xa2c: V523 = M[0x40]
0xa2f: V524 = SUB V520 V523
0xa31: V525 = 0x0
0xa35: V526 = EXTCODESIZE V496
0xa36: V527 = ISZERO V526
0xa38: V528 = ISZERO V527
0xa39: V529 = 0x664
0xa3c: THROWI V528
---
Entry stack: [V484, V485]
Stack pops: 0
Stack additions: [V527, V496, 0x0, V523, V524, V523, 0x20, V520, 0xa9059cbb, V496, V492, S3]
Exit stack: []

================================

Block 0xa3d
[0xa3d:0xa4b]
---
Predecessors: [0x966]
Successors: [0xa4c]
---
0xa3d PUSH1 0x0
0xa3f DUP1
0xa40 REVERT
0xa41 JUMPDEST
0xa42 POP
0xa43 GAS
0xa44 CALL
0xa45 ISZERO
0xa46 DUP1
0xa47 ISZERO
0xa48 PUSH2 0x678
0xa4b JUMPI
---
0xa3d: V530 = 0x0
0xa40: REVERT 0x0 0x0
0xa41: JUMPDEST 
0xa43: V531 = GAS
0xa44: V532 = CALL V531 S1 S2 S3 S4 S5 S6
0xa45: V533 = ISZERO V532
0xa47: V534 = ISZERO V533
0xa48: V535 = 0x678
0xa4b: THROWI V534
---
Entry stack: [S11, V492, V496, 0xa9059cbb, V520, 0x20, V523, V524, V523, 0x0, V496, V527]
Stack pops: 0
Stack additions: [V533]
Exit stack: []

================================

Block 0xa4c
[0xa4c:0xa66]
---
Predecessors: [0xa3d]
Successors: [0xa67]
---
0xa4c RETURNDATASIZE
0xa4d PUSH1 0x0
0xa4f DUP1
0xa50 RETURNDATACOPY
0xa51 RETURNDATASIZE
0xa52 PUSH1 0x0
0xa54 REVERT
0xa55 JUMPDEST
0xa56 POP
0xa57 POP
0xa58 POP
0xa59 POP
0xa5a PUSH1 0x40
0xa5c MLOAD
0xa5d RETURNDATASIZE
0xa5e PUSH1 0x20
0xa60 DUP2
0xa61 LT
0xa62 ISZERO
0xa63 PUSH2 0x68e
0xa66 JUMPI
---
0xa4c: V536 = RETURNDATASIZE
0xa4d: V537 = 0x0
0xa50: RETURNDATACOPY 0x0 0x0 V536
0xa51: V538 = RETURNDATASIZE
0xa52: V539 = 0x0
0xa54: REVERT 0x0 V538
0xa55: JUMPDEST 
0xa5a: V540 = 0x40
0xa5c: V541 = M[0x40]
0xa5d: V542 = RETURNDATASIZE
0xa5e: V543 = 0x20
0xa61: V544 = LT V542 0x20
0xa62: V545 = ISZERO V544
0xa63: V546 = 0x68e
0xa66: THROWI V545
---
Entry stack: [V533]
Stack pops: 0
Stack additions: [V542, V541]
Exit stack: []

================================

Block 0xa67
[0xa67:0xa7d]
---
Predecessors: [0xa4c]
Successors: [0xa7e]
---
0xa67 PUSH1 0x0
0xa69 DUP1
0xa6a REVERT
0xa6b JUMPDEST
0xa6c DUP2
0xa6d ADD
0xa6e SWAP1
0xa6f DUP1
0xa70 DUP1
0xa71 MLOAD
0xa72 SWAP1
0xa73 PUSH1 0x20
0xa75 ADD
0xa76 SWAP1
0xa77 SWAP3
0xa78 SWAP2
0xa79 SWAP1
0xa7a POP
0xa7b POP
0xa7c POP
0xa7d POP
---
0xa67: V547 = 0x0
0xa6a: REVERT 0x0 0x0
0xa6b: JUMPDEST 
0xa6d: V548 = ADD S1 S0
0xa71: V549 = M[S1]
0xa73: V550 = 0x20
0xa75: V551 = ADD 0x20 S1
---
Entry stack: [V541, V542]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa7e
[0xa7e:0xb06]
---
Predecessors: [0xa67]
Successors: [0xb07]
---
0xa7e JUMPDEST
0xa7f POP
0xa80 POP
0xa81 POP
0xa82 JUMP
0xa83 JUMPDEST
0xa84 PUSH1 0x1
0xa86 PUSH1 0x0
0xa88 SWAP1
0xa89 SLOAD
0xa8a SWAP1
0xa8b PUSH2 0x100
0xa8e EXP
0xa8f SWAP1
0xa90 DIV
0xa91 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaa6 AND
0xaa7 DUP2
0xaa8 JUMP
0xaa9 JUMPDEST
0xaaa CALLER
0xaab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xac0 AND
0xac1 PUSH32 0xa060111156d5f720030be65ed2be6dfb71f0acd50716d7ea9fb44bf7be3b7115
0xae2 DUP3
0xae3 PUSH1 0x40
0xae5 MLOAD
0xae6 DUP1
0xae7 DUP1
0xae8 PUSH1 0x20
0xaea ADD
0xaeb DUP3
0xaec DUP2
0xaed SUB
0xaee DUP3
0xaef MSTORE
0xaf0 DUP4
0xaf1 DUP2
0xaf2 DUP2
0xaf3 MLOAD
0xaf4 DUP2
0xaf5 MSTORE
0xaf6 PUSH1 0x20
0xaf8 ADD
0xaf9 SWAP2
0xafa POP
0xafb DUP1
0xafc MLOAD
0xafd SWAP1
0xafe PUSH1 0x20
0xb00 ADD
0xb01 SWAP1
0xb02 DUP1
0xb03 DUP4
0xb04 DUP4
0xb05 PUSH1 0x0
---
0xa7e: JUMPDEST 
0xa82: JUMP S3
0xa83: JUMPDEST 
0xa84: V552 = 0x1
0xa86: V553 = 0x0
0xa89: V554 = S[0x1]
0xa8b: V555 = 0x100
0xa8e: V556 = EXP 0x100 0x0
0xa90: V557 = DIV V554 0x1
0xa91: V558 = 0xffffffffffffffffffffffffffffffffffffffff
0xaa6: V559 = AND 0xffffffffffffffffffffffffffffffffffffffff V557
0xaa8: JUMP S0
0xaa9: JUMPDEST 
0xaaa: V560 = CALLER
0xaab: V561 = 0xffffffffffffffffffffffffffffffffffffffff
0xac0: V562 = AND 0xffffffffffffffffffffffffffffffffffffffff V560
0xac1: V563 = 0xa060111156d5f720030be65ed2be6dfb71f0acd50716d7ea9fb44bf7be3b7115
0xae3: V564 = 0x40
0xae5: V565 = M[0x40]
0xae8: V566 = 0x20
0xaea: V567 = ADD 0x20 V565
0xaed: V568 = SUB V567 V565
0xaef: M[V565] = V568
0xaf3: V569 = M[S0]
0xaf5: M[V567] = V569
0xaf6: V570 = 0x20
0xaf8: V571 = ADD 0x20 V567
0xafc: V572 = M[S0]
0xafe: V573 = 0x20
0xb00: V574 = ADD 0x20 S0
0xb05: V575 = 0x0
---
Entry stack: []
Stack pops: 14
Stack additions: [0x0, V574, V571, V572, V572, V574, V571, V565, V565, S0, 0xa060111156d5f720030be65ed2be6dfb71f0acd50716d7ea9fb44bf7be3b7115, V562, S0]
Exit stack: []

================================

Block 0xb07
[0xb07:0xb0f]
---
Predecessors: [0xa7e]
Successors: [0xb10]
---
0xb07 JUMPDEST
0xb08 DUP4
0xb09 DUP2
0xb0a LT
0xb0b ISZERO
0xb0c PUSH2 0x745
0xb0f JUMPI
---
0xb07: JUMPDEST 
0xb0a: V576 = LT 0x0 V572
0xb0b: V577 = ISZERO V576
0xb0c: V578 = 0x745
0xb0f: THROWI V577
---
Entry stack: [S12, V562, 0xa060111156d5f720030be65ed2be6dfb71f0acd50716d7ea9fb44bf7be3b7115, S9, V565, V565, V571, V574, V572, V572, V571, V574, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S12, V562, 0xa060111156d5f720030be65ed2be6dfb71f0acd50716d7ea9fb44bf7be3b7115, S9, V565, V565, V571, V574, V572, V572, V571, V574, 0x0]

================================

Block 0xb10
[0xb10:0xb35]
---
Predecessors: [0xb07]
Successors: [0xb36]
---
0xb10 DUP1
0xb11 DUP3
0xb12 ADD
0xb13 MLOAD
0xb14 DUP2
0xb15 DUP5
0xb16 ADD
0xb17 MSTORE
0xb18 PUSH1 0x20
0xb1a DUP2
0xb1b ADD
0xb1c SWAP1
0xb1d POP
0xb1e PUSH2 0x72a
0xb21 JUMP
0xb22 JUMPDEST
0xb23 POP
0xb24 POP
0xb25 POP
0xb26 POP
0xb27 SWAP1
0xb28 POP
0xb29 SWAP1
0xb2a DUP2
0xb2b ADD
0xb2c SWAP1
0xb2d PUSH1 0x1f
0xb2f AND
0xb30 DUP1
0xb31 ISZERO
0xb32 PUSH2 0x772
0xb35 JUMPI
---
0xb12: V579 = ADD V574 0x0
0xb13: V580 = M[V579]
0xb16: V581 = ADD V571 0x0
0xb17: M[V581] = V580
0xb18: V582 = 0x20
0xb1b: V583 = ADD 0x0 0x20
0xb1e: V584 = 0x72a
0xb21: THROW 
0xb22: JUMPDEST 
0xb2b: V585 = ADD S4 S6
0xb2d: V586 = 0x1f
0xb2f: V587 = AND 0x1f S4
0xb31: V588 = ISZERO V587
0xb32: V589 = 0x772
0xb35: THROWI V588
---
Entry stack: [S12, V562, 0xa060111156d5f720030be65ed2be6dfb71f0acd50716d7ea9fb44bf7be3b7115, S9, V565, V565, V571, V574, V572, V572, V571, V574, 0x0]
Stack pops: 3
Stack additions: [V587, V585]
Exit stack: []

================================

Block 0xb36
[0xb36:0xb4e]
---
Predecessors: [0xb10]
Successors: [0xb4f]
---
0xb36 DUP1
0xb37 DUP3
0xb38 SUB
0xb39 DUP1
0xb3a MLOAD
0xb3b PUSH1 0x1
0xb3d DUP4
0xb3e PUSH1 0x20
0xb40 SUB
0xb41 PUSH2 0x100
0xb44 EXP
0xb45 SUB
0xb46 NOT
0xb47 AND
0xb48 DUP2
0xb49 MSTORE
0xb4a PUSH1 0x20
0xb4c ADD
0xb4d SWAP2
0xb4e POP
---
0xb38: V590 = SUB V585 V587
0xb3a: V591 = M[V590]
0xb3b: V592 = 0x1
0xb3e: V593 = 0x20
0xb40: V594 = SUB 0x20 V587
0xb41: V595 = 0x100
0xb44: V596 = EXP 0x100 V594
0xb45: V597 = SUB V596 0x1
0xb46: V598 = NOT V597
0xb47: V599 = AND V598 V591
0xb49: M[V590] = V599
0xb4a: V600 = 0x20
0xb4c: V601 = ADD 0x20 V590
---
Entry stack: [V585, V587]
Stack pops: 2
Stack additions: [V601, S0]
Exit stack: [V601, V587]

================================

Block 0xb4f
[0xb4f:0xbb5]
---
Predecessors: [0xb36]
Successors: [0xbb6]
---
0xb4f JUMPDEST
0xb50 POP
0xb51 SWAP3
0xb52 POP
0xb53 POP
0xb54 POP
0xb55 PUSH1 0x40
0xb57 MLOAD
0xb58 DUP1
0xb59 SWAP2
0xb5a SUB
0xb5b SWAP1
0xb5c LOG2
0xb5d POP
0xb5e JUMP
0xb5f JUMPDEST
0xb60 PUSH1 0x0
0xb62 DUP1
0xb63 SWAP1
0xb64 SLOAD
0xb65 SWAP1
0xb66 PUSH2 0x100
0xb69 EXP
0xb6a SWAP1
0xb6b DIV
0xb6c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb81 AND
0xb82 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb97 AND
0xb98 CALLER
0xb99 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbae AND
0xbaf EQ
0xbb0 ISZERO
0xbb1 ISZERO
0xbb2 PUSH2 0x7dd
0xbb5 JUMPI
---
0xb4f: JUMPDEST 
0xb55: V602 = 0x40
0xb57: V603 = M[0x40]
0xb5a: V604 = SUB V601 V603
0xb5c: LOG V603 V604 S5 S6
0xb5e: JUMP S8
0xb5f: JUMPDEST 
0xb60: V605 = 0x0
0xb64: V606 = S[0x0]
0xb66: V607 = 0x100
0xb69: V608 = EXP 0x100 0x0
0xb6b: V609 = DIV V606 0x1
0xb6c: V610 = 0xffffffffffffffffffffffffffffffffffffffff
0xb81: V611 = AND 0xffffffffffffffffffffffffffffffffffffffff V609
0xb82: V612 = 0xffffffffffffffffffffffffffffffffffffffff
0xb97: V613 = AND 0xffffffffffffffffffffffffffffffffffffffff V611
0xb98: V614 = CALLER
0xb99: V615 = 0xffffffffffffffffffffffffffffffffffffffff
0xbae: V616 = AND 0xffffffffffffffffffffffffffffffffffffffff V614
0xbaf: V617 = EQ V616 V613
0xbb0: V618 = ISZERO V617
0xbb1: V619 = ISZERO V618
0xbb2: V620 = 0x7dd
0xbb5: THROWI V619
---
Entry stack: [V601, V587]
Stack pops: 18
Stack additions: []
Exit stack: []

================================

Block 0xbb6
[0xbb6:0xc3e]
---
Predecessors: [0xb4f]
Successors: []
---
0xbb6 PUSH1 0x0
0xbb8 DUP1
0xbb9 REVERT
0xbba JUMPDEST
0xbbb DUP1
0xbbc PUSH1 0x1
0xbbe PUSH1 0x0
0xbc0 PUSH2 0x100
0xbc3 EXP
0xbc4 DUP2
0xbc5 SLOAD
0xbc6 DUP2
0xbc7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbdc MUL
0xbdd NOT
0xbde AND
0xbdf SWAP1
0xbe0 DUP4
0xbe1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbf6 AND
0xbf7 MUL
0xbf8 OR
0xbf9 SWAP1
0xbfa SSTORE
0xbfb POP
0xbfc POP
0xbfd JUMP
0xbfe STOP
0xbff LOG1
0xc00 PUSH6 0x627a7a723058
0xc07 SHA3
0xc08 MISSING 0xb9
0xc09 PUSH27 0x4ba209efb153216cd5615361bb6f9560becb51c2a82d2cc5e71998
0xc25 MISSING 0x27
0xc26 MISSING 0xc2
0xc27 PUSH23 0x29
---
0xbb6: V621 = 0x0
0xbb9: REVERT 0x0 0x0
0xbba: JUMPDEST 
0xbbc: V622 = 0x1
0xbbe: V623 = 0x0
0xbc0: V624 = 0x100
0xbc3: V625 = EXP 0x100 0x0
0xbc5: V626 = S[0x1]
0xbc7: V627 = 0xffffffffffffffffffffffffffffffffffffffff
0xbdc: V628 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xbdd: V629 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xbde: V630 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V626
0xbe1: V631 = 0xffffffffffffffffffffffffffffffffffffffff
0xbf6: V632 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xbf7: V633 = MUL V632 0x1
0xbf8: V634 = OR V633 V630
0xbfa: S[0x1] = V634
0xbfd: JUMP S1
0xbfe: STOP 
0xbff: LOG S0 S1 S2
0xc00: V635 = 0x627a7a723058
0xc07: V636 = SHA3 0x627a7a723058 S3
0xc08: MISSING 0xb9
0xc09: V637 = 0x4ba209efb153216cd5615361bb6f9560becb51c2a82d2cc5e71998
0xc25: MISSING 0x27
0xc26: MISSING 0xc2
0xc27: V638 = 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V636, 0x4ba209efb153216cd5615361bb6f9560becb51c2a82d2cc5e71998, 0x29]
Exit stack: []

================================

Function 0:
Public function signature: 0x79ba5097
Entry block: 0x67
Exit block: 0x7c
Body: 0x67, 0x6f, 0x73, 0x7c, 0x16f, 0x1c6, 0x2c5

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0x7e
Exit block: 0x93
Body: 0x7e, 0x86, 0x8a, 0x93, 0x2c7

Function 2:
Public function signature: 0xd4ee1d90
Entry block: 0xd5
Exit block: 0xea
Body: 0xd5, 0xdd, 0xe1, 0xea, 0x2ec

Function 3:
Public function signature: 0xf2fde38b
Entry block: 0x12c
Exit block: 0x16d
Body: 0x12c, 0x134, 0x138, 0x16d, 0x312, 0x369, 0x36d

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x62
Body: 0x62

