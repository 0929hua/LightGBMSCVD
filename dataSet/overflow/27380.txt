Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xa4]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xa4
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xa4
0xc: JUMPI 0xa4 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0xa9]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x6fdde03
0x3c EQ
0x3d PUSH2 0xa9
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x6fdde03
0x3c: V13 = EQ 0x6fdde03 V11
0x3d: V14 = 0xa9
0x40: JUMPI 0xa9 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x137]
---
0x41 DUP1
0x42 PUSH4 0x18160ddd
0x47 EQ
0x48 PUSH2 0x137
0x4b JUMPI
---
0x42: V15 = 0x18160ddd
0x47: V16 = EQ 0x18160ddd V11
0x48: V17 = 0x137
0x4b: JUMPI 0x137 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x160]
---
0x4c DUP1
0x4d PUSH4 0x216e3449
0x52 EQ
0x53 PUSH2 0x160
0x56 JUMPI
---
0x4d: V18 = 0x216e3449
0x52: V19 = EQ 0x216e3449 V11
0x53: V20 = 0x160
0x56: JUMPI 0x160 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x200]
---
0x57 DUP1
0x58 PUSH4 0x27e235e3
0x5d EQ
0x5e PUSH2 0x200
0x61 JUMPI
---
0x58: V21 = 0x27e235e3
0x5d: V22 = EQ 0x27e235e3 V11
0x5e: V23 = 0x200
0x61: JUMPI 0x200 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x24d]
---
0x62 DUP1
0x63 PUSH4 0x313ce567
0x68 EQ
0x69 PUSH2 0x24d
0x6c JUMPI
---
0x63: V24 = 0x313ce567
0x68: V25 = EQ 0x313ce567 V11
0x69: V26 = 0x24d
0x6c: JUMPI 0x24d V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x27c]
---
0x6d DUP1
0x6e PUSH4 0x3bed33ce
0x73 EQ
0x74 PUSH2 0x27c
0x77 JUMPI
---
0x6e: V27 = 0x3bed33ce
0x73: V28 = EQ 0x3bed33ce V11
0x74: V29 = 0x27c
0x77: JUMPI 0x27c V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x29f]
---
0x78 DUP1
0x79 PUSH4 0x8da5cb5b
0x7e EQ
0x7f PUSH2 0x29f
0x82 JUMPI
---
0x79: V30 = 0x8da5cb5b
0x7e: V31 = EQ 0x8da5cb5b V11
0x7f: V32 = 0x29f
0x82: JUMPI 0x29f V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x8d]
---
Predecessors: [0x78]
Successors: [0x8e, 0x2f4]
---
0x83 DUP1
0x84 PUSH4 0x95d89b41
0x89 EQ
0x8a PUSH2 0x2f4
0x8d JUMPI
---
0x84: V33 = 0x95d89b41
0x89: V34 = EQ 0x95d89b41 V11
0x8a: V35 = 0x2f4
0x8d: JUMPI 0x2f4 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8e
[0x8e:0x98]
---
Predecessors: [0x83]
Successors: [0x99, 0x382]
---
0x8e DUP1
0x8f PUSH4 0xa6f2ae3a
0x94 EQ
0x95 PUSH2 0x382
0x98 JUMPI
---
0x8f: V36 = 0xa6f2ae3a
0x94: V37 = EQ 0xa6f2ae3a V11
0x95: V38 = 0x382
0x98: JUMPI 0x382 V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x99
[0x99:0xa3]
---
Predecessors: [0x8e]
Successors: [0xa4, 0x38c]
---
0x99 DUP1
0x9a PUSH4 0xa9059cbb
0x9f EQ
0xa0 PUSH2 0x38c
0xa3 JUMPI
---
0x9a: V39 = 0xa9059cbb
0x9f: V40 = EQ 0xa9059cbb V11
0xa0: V41 = 0x38c
0xa3: JUMPI 0x38c V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa4
[0xa4:0xa8]
---
Predecessors: [0x0, 0x99]
Successors: []
---
0xa4 JUMPDEST
0xa5 PUSH1 0x0
0xa7 DUP1
0xa8 REVERT
---
0xa4: JUMPDEST 
0xa5: V42 = 0x0
0xa8: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa9
[0xa9:0xaf]
---
Predecessors: [0xd]
Successors: [0xb0, 0xb4]
---
0xa9 JUMPDEST
0xaa CALLVALUE
0xab ISZERO
0xac PUSH2 0xb4
0xaf JUMPI
---
0xa9: JUMPDEST 
0xaa: V43 = CALLVALUE
0xab: V44 = ISZERO V43
0xac: V45 = 0xb4
0xaf: JUMPI 0xb4 V44
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb0
[0xb0:0xb3]
---
Predecessors: [0xa9]
Successors: []
---
0xb0 PUSH1 0x0
0xb2 DUP1
0xb3 REVERT
---
0xb0: V46 = 0x0
0xb3: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb4
[0xb4:0xbb]
---
Predecessors: [0xa9]
Successors: [0x3e6]
---
0xb4 JUMPDEST
0xb5 PUSH2 0xbc
0xb8 PUSH2 0x3e6
0xbb JUMP
---
0xb4: JUMPDEST 
0xb5: V47 = 0xbc
0xb8: V48 = 0x3e6
0xbb: JUMP 0x3e6
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xbc]
Exit stack: [V11, 0xbc]

================================

Block 0xbc
[0xbc:0xe0]
---
Predecessors: [0x47c]
Successors: [0xe1]
---
0xbc JUMPDEST
0xbd PUSH1 0x40
0xbf MLOAD
0xc0 DUP1
0xc1 DUP1
0xc2 PUSH1 0x20
0xc4 ADD
0xc5 DUP3
0xc6 DUP2
0xc7 SUB
0xc8 DUP3
0xc9 MSTORE
0xca DUP4
0xcb DUP2
0xcc DUP2
0xcd MLOAD
0xce DUP2
0xcf MSTORE
0xd0 PUSH1 0x20
0xd2 ADD
0xd3 SWAP2
0xd4 POP
0xd5 DUP1
0xd6 MLOAD
0xd7 SWAP1
0xd8 PUSH1 0x20
0xda ADD
0xdb SWAP1
0xdc DUP1
0xdd DUP4
0xde DUP4
0xdf PUSH1 0x0
---
0xbc: JUMPDEST 
0xbd: V49 = 0x40
0xbf: V50 = M[0x40]
0xc2: V51 = 0x20
0xc4: V52 = ADD 0x20 V50
0xc7: V53 = SUB V52 V50
0xc9: M[V50] = V53
0xcd: V54 = M[V310]
0xcf: M[V52] = V54
0xd0: V55 = 0x20
0xd2: V56 = ADD 0x20 V52
0xd6: V57 = M[V310]
0xd8: V58 = 0x20
0xda: V59 = ADD 0x20 V310
0xdf: V60 = 0x0
---
Entry stack: [V11, 0xbc, V310]
Stack pops: 1
Stack additions: [S0, V50, V50, V56, V59, V57, V57, V56, V59, 0x0]
Exit stack: [V11, 0xbc, V310, V50, V50, V56, V59, V57, V57, V56, V59, 0x0]

================================

Block 0xe1
[0xe1:0xe9]
---
Predecessors: [0xbc, 0xea]
Successors: [0xea, 0xfc]
---
0xe1 JUMPDEST
0xe2 DUP4
0xe3 DUP2
0xe4 LT
0xe5 ISZERO
0xe6 PUSH2 0xfc
0xe9 JUMPI
---
0xe1: JUMPDEST 
0xe4: V61 = LT S0 V57
0xe5: V62 = ISZERO V61
0xe6: V63 = 0xfc
0xe9: JUMPI 0xfc V62
---
Entry stack: [V11, 0xbc, V310, V50, V50, V56, V59, V57, V57, V56, V59, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0xbc, V310, V50, V50, V56, V59, V57, V57, V56, V59, S0]

================================

Block 0xea
[0xea:0xfb]
---
Predecessors: [0xe1]
Successors: [0xe1]
---
0xea DUP1
0xeb DUP3
0xec ADD
0xed MLOAD
0xee DUP2
0xef DUP5
0xf0 ADD
0xf1 MSTORE
0xf2 PUSH1 0x20
0xf4 DUP2
0xf5 ADD
0xf6 SWAP1
0xf7 POP
0xf8 PUSH2 0xe1
0xfb JUMP
---
0xec: V64 = ADD V59 S0
0xed: V65 = M[V64]
0xf0: V66 = ADD V56 S0
0xf1: M[V66] = V65
0xf2: V67 = 0x20
0xf5: V68 = ADD S0 0x20
0xf8: V69 = 0xe1
0xfb: JUMP 0xe1
---
Entry stack: [V11, 0xbc, V310, V50, V50, V56, V59, V57, V57, V56, V59, S0]
Stack pops: 3
Stack additions: [S2, S1, V68]
Exit stack: [V11, 0xbc, V310, V50, V50, V56, V59, V57, V57, V56, V59, V68]

================================

Block 0xfc
[0xfc:0x10f]
---
Predecessors: [0xe1]
Successors: [0x110, 0x129]
---
0xfc JUMPDEST
0xfd POP
0xfe POP
0xff POP
0x100 POP
0x101 SWAP1
0x102 POP
0x103 SWAP1
0x104 DUP2
0x105 ADD
0x106 SWAP1
0x107 PUSH1 0x1f
0x109 AND
0x10a DUP1
0x10b ISZERO
0x10c PUSH2 0x129
0x10f JUMPI
---
0xfc: JUMPDEST 
0x105: V70 = ADD V57 V56
0x107: V71 = 0x1f
0x109: V72 = AND 0x1f V57
0x10b: V73 = ISZERO V72
0x10c: V74 = 0x129
0x10f: JUMPI 0x129 V73
---
Entry stack: [V11, 0xbc, V310, V50, V50, V56, V59, V57, V57, V56, V59, S0]
Stack pops: 7
Stack additions: [V70, V72]
Exit stack: [V11, 0xbc, V310, V50, V50, V70, V72]

================================

Block 0x110
[0x110:0x128]
---
Predecessors: [0xfc]
Successors: [0x129]
---
0x110 DUP1
0x111 DUP3
0x112 SUB
0x113 DUP1
0x114 MLOAD
0x115 PUSH1 0x1
0x117 DUP4
0x118 PUSH1 0x20
0x11a SUB
0x11b PUSH2 0x100
0x11e EXP
0x11f SUB
0x120 NOT
0x121 AND
0x122 DUP2
0x123 MSTORE
0x124 PUSH1 0x20
0x126 ADD
0x127 SWAP2
0x128 POP
---
0x112: V75 = SUB V70 V72
0x114: V76 = M[V75]
0x115: V77 = 0x1
0x118: V78 = 0x20
0x11a: V79 = SUB 0x20 V72
0x11b: V80 = 0x100
0x11e: V81 = EXP 0x100 V79
0x11f: V82 = SUB V81 0x1
0x120: V83 = NOT V82
0x121: V84 = AND V83 V76
0x123: M[V75] = V84
0x124: V85 = 0x20
0x126: V86 = ADD 0x20 V75
---
Entry stack: [V11, 0xbc, V310, V50, V50, V70, V72]
Stack pops: 2
Stack additions: [V86, S0]
Exit stack: [V11, 0xbc, V310, V50, V50, V86, V72]

================================

Block 0x129
[0x129:0x136]
---
Predecessors: [0xfc, 0x110]
Successors: []
---
0x129 JUMPDEST
0x12a POP
0x12b SWAP3
0x12c POP
0x12d POP
0x12e POP
0x12f PUSH1 0x40
0x131 MLOAD
0x132 DUP1
0x133 SWAP2
0x134 SUB
0x135 SWAP1
0x136 RETURN
---
0x129: JUMPDEST 
0x12f: V87 = 0x40
0x131: V88 = M[0x40]
0x134: V89 = SUB S1 V88
0x136: RETURN V88 V89
---
Entry stack: [V11, 0xbc, V310, V50, V50, S1, V72]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0xbc]

================================

Block 0x137
[0x137:0x13d]
---
Predecessors: [0x41]
Successors: [0x13e, 0x142]
---
0x137 JUMPDEST
0x138 CALLVALUE
0x139 ISZERO
0x13a PUSH2 0x142
0x13d JUMPI
---
0x137: JUMPDEST 
0x138: V90 = CALLVALUE
0x139: V91 = ISZERO V90
0x13a: V92 = 0x142
0x13d: JUMPI 0x142 V91
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x13e
[0x13e:0x141]
---
Predecessors: [0x137]
Successors: []
---
0x13e PUSH1 0x0
0x140 DUP1
0x141 REVERT
---
0x13e: V93 = 0x0
0x141: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x142
[0x142:0x149]
---
Predecessors: [0x137]
Successors: [0x484]
---
0x142 JUMPDEST
0x143 PUSH2 0x14a
0x146 PUSH2 0x484
0x149 JUMP
---
0x142: JUMPDEST 
0x143: V94 = 0x14a
0x146: V95 = 0x484
0x149: JUMP 0x484
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x14a]
Exit stack: [V11, 0x14a]

================================

Block 0x14a
[0x14a:0x15f]
---
Predecessors: [0x484]
Successors: []
---
0x14a JUMPDEST
0x14b PUSH1 0x40
0x14d MLOAD
0x14e DUP1
0x14f DUP3
0x150 DUP2
0x151 MSTORE
0x152 PUSH1 0x20
0x154 ADD
0x155 SWAP2
0x156 POP
0x157 POP
0x158 PUSH1 0x40
0x15a MLOAD
0x15b DUP1
0x15c SWAP2
0x15d SUB
0x15e SWAP1
0x15f RETURN
---
0x14a: JUMPDEST 
0x14b: V96 = 0x40
0x14d: V97 = M[0x40]
0x151: M[V97] = V355
0x152: V98 = 0x20
0x154: V99 = ADD 0x20 V97
0x158: V100 = 0x40
0x15a: V101 = M[0x40]
0x15d: V102 = SUB V99 V101
0x15f: RETURN V101 V102
---
Entry stack: [V11, 0x14a, V355]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x14a]

================================

Block 0x160
[0x160:0x166]
---
Predecessors: [0x4c]
Successors: [0x167, 0x16b]
---
0x160 JUMPDEST
0x161 CALLVALUE
0x162 ISZERO
0x163 PUSH2 0x16b
0x166 JUMPI
---
0x160: JUMPDEST 
0x161: V103 = CALLVALUE
0x162: V104 = ISZERO V103
0x163: V105 = 0x16b
0x166: JUMPI 0x16b V104
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x167
[0x167:0x16a]
---
Predecessors: [0x160]
Successors: []
---
0x167 PUSH1 0x0
0x169 DUP1
0x16a REVERT
---
0x167: V106 = 0x0
0x16a: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x16b
[0x16b:0x1fd]
---
Predecessors: [0x160]
Successors: [0x48a]
---
0x16b JUMPDEST
0x16c PUSH2 0x1fe
0x16f PUSH1 0x4
0x171 DUP1
0x172 DUP1
0x173 CALLDATALOAD
0x174 SWAP1
0x175 PUSH1 0x20
0x177 ADD
0x178 SWAP1
0x179 DUP3
0x17a ADD
0x17b DUP1
0x17c CALLDATALOAD
0x17d SWAP1
0x17e PUSH1 0x20
0x180 ADD
0x181 SWAP1
0x182 DUP1
0x183 DUP1
0x184 PUSH1 0x1f
0x186 ADD
0x187 PUSH1 0x20
0x189 DUP1
0x18a SWAP2
0x18b DIV
0x18c MUL
0x18d PUSH1 0x20
0x18f ADD
0x190 PUSH1 0x40
0x192 MLOAD
0x193 SWAP1
0x194 DUP2
0x195 ADD
0x196 PUSH1 0x40
0x198 MSTORE
0x199 DUP1
0x19a SWAP4
0x19b SWAP3
0x19c SWAP2
0x19d SWAP1
0x19e DUP2
0x19f DUP2
0x1a0 MSTORE
0x1a1 PUSH1 0x20
0x1a3 ADD
0x1a4 DUP4
0x1a5 DUP4
0x1a6 DUP1
0x1a7 DUP3
0x1a8 DUP5
0x1a9 CALLDATACOPY
0x1aa DUP3
0x1ab ADD
0x1ac SWAP2
0x1ad POP
0x1ae POP
0x1af POP
0x1b0 POP
0x1b1 POP
0x1b2 POP
0x1b3 SWAP2
0x1b4 SWAP1
0x1b5 DUP1
0x1b6 CALLDATALOAD
0x1b7 SWAP1
0x1b8 PUSH1 0x20
0x1ba ADD
0x1bb SWAP1
0x1bc DUP3
0x1bd ADD
0x1be DUP1
0x1bf CALLDATALOAD
0x1c0 SWAP1
0x1c1 PUSH1 0x20
0x1c3 ADD
0x1c4 SWAP1
0x1c5 DUP1
0x1c6 DUP1
0x1c7 PUSH1 0x1f
0x1c9 ADD
0x1ca PUSH1 0x20
0x1cc DUP1
0x1cd SWAP2
0x1ce DIV
0x1cf MUL
0x1d0 PUSH1 0x20
0x1d2 ADD
0x1d3 PUSH1 0x40
0x1d5 MLOAD
0x1d6 SWAP1
0x1d7 DUP2
0x1d8 ADD
0x1d9 PUSH1 0x40
0x1db MSTORE
0x1dc DUP1
0x1dd SWAP4
0x1de SWAP3
0x1df SWAP2
0x1e0 SWAP1
0x1e1 DUP2
0x1e2 DUP2
0x1e3 MSTORE
0x1e4 PUSH1 0x20
0x1e6 ADD
0x1e7 DUP4
0x1e8 DUP4
0x1e9 DUP1
0x1ea DUP3
0x1eb DUP5
0x1ec CALLDATACOPY
0x1ed DUP3
0x1ee ADD
0x1ef SWAP2
0x1f0 POP
0x1f1 POP
0x1f2 POP
0x1f3 POP
0x1f4 POP
0x1f5 POP
0x1f6 SWAP2
0x1f7 SWAP1
0x1f8 POP
0x1f9 POP
0x1fa PUSH2 0x48a
0x1fd JUMP
---
0x16b: JUMPDEST 
0x16c: V107 = 0x1fe
0x16f: V108 = 0x4
0x173: V109 = CALLDATALOAD 0x4
0x175: V110 = 0x20
0x177: V111 = ADD 0x20 0x4
0x17a: V112 = ADD 0x4 V109
0x17c: V113 = CALLDATALOAD V112
0x17e: V114 = 0x20
0x180: V115 = ADD 0x20 V112
0x184: V116 = 0x1f
0x186: V117 = ADD 0x1f V113
0x187: V118 = 0x20
0x18b: V119 = DIV V117 0x20
0x18c: V120 = MUL V119 0x20
0x18d: V121 = 0x20
0x18f: V122 = ADD 0x20 V120
0x190: V123 = 0x40
0x192: V124 = M[0x40]
0x195: V125 = ADD V124 V122
0x196: V126 = 0x40
0x198: M[0x40] = V125
0x1a0: M[V124] = V113
0x1a1: V127 = 0x20
0x1a3: V128 = ADD 0x20 V124
0x1a9: CALLDATACOPY V128 V115 V113
0x1ab: V129 = ADD V128 V113
0x1b6: V130 = CALLDATALOAD 0x24
0x1b8: V131 = 0x20
0x1ba: V132 = ADD 0x20 0x24
0x1bd: V133 = ADD 0x4 V130
0x1bf: V134 = CALLDATALOAD V133
0x1c1: V135 = 0x20
0x1c3: V136 = ADD 0x20 V133
0x1c7: V137 = 0x1f
0x1c9: V138 = ADD 0x1f V134
0x1ca: V139 = 0x20
0x1ce: V140 = DIV V138 0x20
0x1cf: V141 = MUL V140 0x20
0x1d0: V142 = 0x20
0x1d2: V143 = ADD 0x20 V141
0x1d3: V144 = 0x40
0x1d5: V145 = M[0x40]
0x1d8: V146 = ADD V145 V143
0x1d9: V147 = 0x40
0x1db: M[0x40] = V146
0x1e3: M[V145] = V134
0x1e4: V148 = 0x20
0x1e6: V149 = ADD 0x20 V145
0x1ec: CALLDATACOPY V149 V136 V134
0x1ee: V150 = ADD V149 V134
0x1fa: V151 = 0x48a
0x1fd: JUMP 0x48a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1fe, V124, V145]
Exit stack: [V11, 0x1fe, V124, V145]

================================

Block 0x1fe
[0x1fe:0x1ff]
---
Predecessors: [0x513]
Successors: []
---
0x1fe JUMPDEST
0x1ff STOP
---
0x1fe: JUMPDEST 
0x1ff: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x200
[0x200:0x206]
---
Predecessors: [0x57]
Successors: [0x207, 0x20b]
---
0x200 JUMPDEST
0x201 CALLVALUE
0x202 ISZERO
0x203 PUSH2 0x20b
0x206 JUMPI
---
0x200: JUMPDEST 
0x201: V152 = CALLVALUE
0x202: V153 = ISZERO V152
0x203: V154 = 0x20b
0x206: JUMPI 0x20b V153
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x207
[0x207:0x20a]
---
Predecessors: [0x200]
Successors: []
---
0x207 PUSH1 0x0
0x209 DUP1
0x20a REVERT
---
0x207: V155 = 0x0
0x20a: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x20b
[0x20b:0x236]
---
Predecessors: [0x200]
Successors: [0x518]
---
0x20b JUMPDEST
0x20c PUSH2 0x237
0x20f PUSH1 0x4
0x211 DUP1
0x212 DUP1
0x213 CALLDATALOAD
0x214 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x229 AND
0x22a SWAP1
0x22b PUSH1 0x20
0x22d ADD
0x22e SWAP1
0x22f SWAP2
0x230 SWAP1
0x231 POP
0x232 POP
0x233 PUSH2 0x518
0x236 JUMP
---
0x20b: JUMPDEST 
0x20c: V156 = 0x237
0x20f: V157 = 0x4
0x213: V158 = CALLDATALOAD 0x4
0x214: V159 = 0xffffffffffffffffffffffffffffffffffffffff
0x229: V160 = AND 0xffffffffffffffffffffffffffffffffffffffff V158
0x22b: V161 = 0x20
0x22d: V162 = ADD 0x20 0x4
0x233: V163 = 0x518
0x236: JUMP 0x518
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x237, V160]
Exit stack: [V11, 0x237, V160]

================================

Block 0x237
[0x237:0x24c]
---
Predecessors: [0x518]
Successors: []
---
0x237 JUMPDEST
0x238 PUSH1 0x40
0x23a MLOAD
0x23b DUP1
0x23c DUP3
0x23d DUP2
0x23e MSTORE
0x23f PUSH1 0x20
0x241 ADD
0x242 SWAP2
0x243 POP
0x244 POP
0x245 PUSH1 0x40
0x247 MLOAD
0x248 DUP1
0x249 SWAP2
0x24a SUB
0x24b SWAP1
0x24c RETURN
---
0x237: JUMPDEST 
0x238: V164 = 0x40
0x23a: V165 = M[0x40]
0x23e: M[V165] = V393
0x23f: V166 = 0x20
0x241: V167 = ADD 0x20 V165
0x245: V168 = 0x40
0x247: V169 = M[0x40]
0x24a: V170 = SUB V167 V169
0x24c: RETURN V169 V170
---
Entry stack: [V11, 0x237, V393]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x237]

================================

Block 0x24d
[0x24d:0x253]
---
Predecessors: [0x62]
Successors: [0x254, 0x258]
---
0x24d JUMPDEST
0x24e CALLVALUE
0x24f ISZERO
0x250 PUSH2 0x258
0x253 JUMPI
---
0x24d: JUMPDEST 
0x24e: V171 = CALLVALUE
0x24f: V172 = ISZERO V171
0x250: V173 = 0x258
0x253: JUMPI 0x258 V172
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x254
[0x254:0x257]
---
Predecessors: [0x24d]
Successors: []
---
0x254 PUSH1 0x0
0x256 DUP1
0x257 REVERT
---
0x254: V174 = 0x0
0x257: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x258
[0x258:0x25f]
---
Predecessors: [0x24d]
Successors: [0x530]
---
0x258 JUMPDEST
0x259 PUSH2 0x260
0x25c PUSH2 0x530
0x25f JUMP
---
0x258: JUMPDEST 
0x259: V175 = 0x260
0x25c: V176 = 0x530
0x25f: JUMP 0x530
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x260]
Exit stack: [V11, 0x260]

================================

Block 0x260
[0x260:0x27b]
---
Predecessors: [0x530]
Successors: []
---
0x260 JUMPDEST
0x261 PUSH1 0x40
0x263 MLOAD
0x264 DUP1
0x265 DUP3
0x266 PUSH1 0xff
0x268 AND
0x269 PUSH1 0xff
0x26b AND
0x26c DUP2
0x26d MSTORE
0x26e PUSH1 0x20
0x270 ADD
0x271 SWAP2
0x272 POP
0x273 POP
0x274 PUSH1 0x40
0x276 MLOAD
0x277 DUP1
0x278 SWAP2
0x279 SUB
0x27a SWAP1
0x27b RETURN
---
0x260: JUMPDEST 
0x261: V177 = 0x40
0x263: V178 = M[0x40]
0x266: V179 = 0xff
0x268: V180 = AND 0xff V401
0x269: V181 = 0xff
0x26b: V182 = AND 0xff V180
0x26d: M[V178] = V182
0x26e: V183 = 0x20
0x270: V184 = ADD 0x20 V178
0x274: V185 = 0x40
0x276: V186 = M[0x40]
0x279: V187 = SUB V184 V186
0x27b: RETURN V186 V187
---
Entry stack: [V11, 0x260, V401]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x260]

================================

Block 0x27c
[0x27c:0x282]
---
Predecessors: [0x6d]
Successors: [0x283, 0x287]
---
0x27c JUMPDEST
0x27d CALLVALUE
0x27e ISZERO
0x27f PUSH2 0x287
0x282 JUMPI
---
0x27c: JUMPDEST 
0x27d: V188 = CALLVALUE
0x27e: V189 = ISZERO V188
0x27f: V190 = 0x287
0x282: JUMPI 0x287 V189
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x283
[0x283:0x286]
---
Predecessors: [0x27c]
Successors: []
---
0x283 PUSH1 0x0
0x285 DUP1
0x286 REVERT
---
0x283: V191 = 0x0
0x286: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x287
[0x287:0x29c]
---
Predecessors: [0x27c]
Successors: [0x543]
---
0x287 JUMPDEST
0x288 PUSH2 0x29d
0x28b PUSH1 0x4
0x28d DUP1
0x28e DUP1
0x28f CALLDATALOAD
0x290 SWAP1
0x291 PUSH1 0x20
0x293 ADD
0x294 SWAP1
0x295 SWAP2
0x296 SWAP1
0x297 POP
0x298 POP
0x299 PUSH2 0x543
0x29c JUMP
---
0x287: JUMPDEST 
0x288: V192 = 0x29d
0x28b: V193 = 0x4
0x28f: V194 = CALLDATALOAD 0x4
0x291: V195 = 0x20
0x293: V196 = ADD 0x20 0x4
0x299: V197 = 0x543
0x29c: JUMP 0x543
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x29d, V194]
Exit stack: [V11, 0x29d, V194]

================================

Block 0x29d
[0x29d:0x29e]
---
Predecessors: [0x601]
Successors: []
---
0x29d JUMPDEST
0x29e STOP
---
0x29d: JUMPDEST 
0x29e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x29f
[0x29f:0x2a5]
---
Predecessors: [0x78]
Successors: [0x2a6, 0x2aa]
---
0x29f JUMPDEST
0x2a0 CALLVALUE
0x2a1 ISZERO
0x2a2 PUSH2 0x2aa
0x2a5 JUMPI
---
0x29f: JUMPDEST 
0x2a0: V198 = CALLVALUE
0x2a1: V199 = ISZERO V198
0x2a2: V200 = 0x2aa
0x2a5: JUMPI 0x2aa V199
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2a6
[0x2a6:0x2a9]
---
Predecessors: [0x29f]
Successors: []
---
0x2a6 PUSH1 0x0
0x2a8 DUP1
0x2a9 REVERT
---
0x2a6: V201 = 0x0
0x2a9: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2aa
[0x2aa:0x2b1]
---
Predecessors: [0x29f]
Successors: [0x604]
---
0x2aa JUMPDEST
0x2ab PUSH2 0x2b2
0x2ae PUSH2 0x604
0x2b1 JUMP
---
0x2aa: JUMPDEST 
0x2ab: V202 = 0x2b2
0x2ae: V203 = 0x604
0x2b1: JUMP 0x604
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x2b2]
Exit stack: [V11, 0x2b2]

================================

Block 0x2b2
[0x2b2:0x2f3]
---
Predecessors: [0x604]
Successors: []
---
0x2b2 JUMPDEST
0x2b3 PUSH1 0x40
0x2b5 MLOAD
0x2b6 DUP1
0x2b7 DUP3
0x2b8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2cd AND
0x2ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e3 AND
0x2e4 DUP2
0x2e5 MSTORE
0x2e6 PUSH1 0x20
0x2e8 ADD
0x2e9 SWAP2
0x2ea POP
0x2eb POP
0x2ec PUSH1 0x40
0x2ee MLOAD
0x2ef DUP1
0x2f0 SWAP2
0x2f1 SUB
0x2f2 SWAP1
0x2f3 RETURN
---
0x2b2: JUMPDEST 
0x2b3: V204 = 0x40
0x2b5: V205 = M[0x40]
0x2b8: V206 = 0xffffffffffffffffffffffffffffffffffffffff
0x2cd: V207 = AND 0xffffffffffffffffffffffffffffffffffffffff V451
0x2ce: V208 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e3: V209 = AND 0xffffffffffffffffffffffffffffffffffffffff V207
0x2e5: M[V205] = V209
0x2e6: V210 = 0x20
0x2e8: V211 = ADD 0x20 V205
0x2ec: V212 = 0x40
0x2ee: V213 = M[0x40]
0x2f1: V214 = SUB V211 V213
0x2f3: RETURN V213 V214
---
Entry stack: [V11, 0x2b2, V451]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x2b2]

================================

Block 0x2f4
[0x2f4:0x2fa]
---
Predecessors: [0x83]
Successors: [0x2fb, 0x2ff]
---
0x2f4 JUMPDEST
0x2f5 CALLVALUE
0x2f6 ISZERO
0x2f7 PUSH2 0x2ff
0x2fa JUMPI
---
0x2f4: JUMPDEST 
0x2f5: V215 = CALLVALUE
0x2f6: V216 = ISZERO V215
0x2f7: V217 = 0x2ff
0x2fa: JUMPI 0x2ff V216
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2fb
[0x2fb:0x2fe]
---
Predecessors: [0x2f4]
Successors: []
---
0x2fb PUSH1 0x0
0x2fd DUP1
0x2fe REVERT
---
0x2fb: V218 = 0x0
0x2fe: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2ff
[0x2ff:0x306]
---
Predecessors: [0x2f4]
Successors: [0x62a]
---
0x2ff JUMPDEST
0x300 PUSH2 0x307
0x303 PUSH2 0x62a
0x306 JUMP
---
0x2ff: JUMPDEST 
0x300: V219 = 0x307
0x303: V220 = 0x62a
0x306: JUMP 0x62a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x307]
Exit stack: [V11, 0x307]

================================

Block 0x307
[0x307:0x32b]
---
Predecessors: [0x6c0]
Successors: [0x32c]
---
0x307 JUMPDEST
0x308 PUSH1 0x40
0x30a MLOAD
0x30b DUP1
0x30c DUP1
0x30d PUSH1 0x20
0x30f ADD
0x310 DUP3
0x311 DUP2
0x312 SUB
0x313 DUP3
0x314 MSTORE
0x315 DUP4
0x316 DUP2
0x317 DUP2
0x318 MLOAD
0x319 DUP2
0x31a MSTORE
0x31b PUSH1 0x20
0x31d ADD
0x31e SWAP2
0x31f POP
0x320 DUP1
0x321 MLOAD
0x322 SWAP1
0x323 PUSH1 0x20
0x325 ADD
0x326 SWAP1
0x327 DUP1
0x328 DUP4
0x329 DUP4
0x32a PUSH1 0x0
---
0x307: JUMPDEST 
0x308: V221 = 0x40
0x30a: V222 = M[0x40]
0x30d: V223 = 0x20
0x30f: V224 = ADD 0x20 V222
0x312: V225 = SUB V224 V222
0x314: M[V222] = V225
0x318: V226 = M[V472]
0x31a: M[V224] = V226
0x31b: V227 = 0x20
0x31d: V228 = ADD 0x20 V224
0x321: V229 = M[V472]
0x323: V230 = 0x20
0x325: V231 = ADD 0x20 V472
0x32a: V232 = 0x0
---
Entry stack: [V11, 0x307, V472]
Stack pops: 1
Stack additions: [S0, V222, V222, V228, V231, V229, V229, V228, V231, 0x0]
Exit stack: [V11, 0x307, V472, V222, V222, V228, V231, V229, V229, V228, V231, 0x0]

================================

Block 0x32c
[0x32c:0x334]
---
Predecessors: [0x307, 0x335]
Successors: [0x335, 0x347]
---
0x32c JUMPDEST
0x32d DUP4
0x32e DUP2
0x32f LT
0x330 ISZERO
0x331 PUSH2 0x347
0x334 JUMPI
---
0x32c: JUMPDEST 
0x32f: V233 = LT S0 V229
0x330: V234 = ISZERO V233
0x331: V235 = 0x347
0x334: JUMPI 0x347 V234
---
Entry stack: [V11, 0x307, V472, V222, V222, V228, V231, V229, V229, V228, V231, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x307, V472, V222, V222, V228, V231, V229, V229, V228, V231, S0]

================================

Block 0x335
[0x335:0x346]
---
Predecessors: [0x32c]
Successors: [0x32c]
---
0x335 DUP1
0x336 DUP3
0x337 ADD
0x338 MLOAD
0x339 DUP2
0x33a DUP5
0x33b ADD
0x33c MSTORE
0x33d PUSH1 0x20
0x33f DUP2
0x340 ADD
0x341 SWAP1
0x342 POP
0x343 PUSH2 0x32c
0x346 JUMP
---
0x337: V236 = ADD V231 S0
0x338: V237 = M[V236]
0x33b: V238 = ADD V228 S0
0x33c: M[V238] = V237
0x33d: V239 = 0x20
0x340: V240 = ADD S0 0x20
0x343: V241 = 0x32c
0x346: JUMP 0x32c
---
Entry stack: [V11, 0x307, V472, V222, V222, V228, V231, V229, V229, V228, V231, S0]
Stack pops: 3
Stack additions: [S2, S1, V240]
Exit stack: [V11, 0x307, V472, V222, V222, V228, V231, V229, V229, V228, V231, V240]

================================

Block 0x347
[0x347:0x35a]
---
Predecessors: [0x32c]
Successors: [0x35b, 0x374]
---
0x347 JUMPDEST
0x348 POP
0x349 POP
0x34a POP
0x34b POP
0x34c SWAP1
0x34d POP
0x34e SWAP1
0x34f DUP2
0x350 ADD
0x351 SWAP1
0x352 PUSH1 0x1f
0x354 AND
0x355 DUP1
0x356 ISZERO
0x357 PUSH2 0x374
0x35a JUMPI
---
0x347: JUMPDEST 
0x350: V242 = ADD V229 V228
0x352: V243 = 0x1f
0x354: V244 = AND 0x1f V229
0x356: V245 = ISZERO V244
0x357: V246 = 0x374
0x35a: JUMPI 0x374 V245
---
Entry stack: [V11, 0x307, V472, V222, V222, V228, V231, V229, V229, V228, V231, S0]
Stack pops: 7
Stack additions: [V242, V244]
Exit stack: [V11, 0x307, V472, V222, V222, V242, V244]

================================

Block 0x35b
[0x35b:0x373]
---
Predecessors: [0x347]
Successors: [0x374]
---
0x35b DUP1
0x35c DUP3
0x35d SUB
0x35e DUP1
0x35f MLOAD
0x360 PUSH1 0x1
0x362 DUP4
0x363 PUSH1 0x20
0x365 SUB
0x366 PUSH2 0x100
0x369 EXP
0x36a SUB
0x36b NOT
0x36c AND
0x36d DUP2
0x36e MSTORE
0x36f PUSH1 0x20
0x371 ADD
0x372 SWAP2
0x373 POP
---
0x35d: V247 = SUB V242 V244
0x35f: V248 = M[V247]
0x360: V249 = 0x1
0x363: V250 = 0x20
0x365: V251 = SUB 0x20 V244
0x366: V252 = 0x100
0x369: V253 = EXP 0x100 V251
0x36a: V254 = SUB V253 0x1
0x36b: V255 = NOT V254
0x36c: V256 = AND V255 V248
0x36e: M[V247] = V256
0x36f: V257 = 0x20
0x371: V258 = ADD 0x20 V247
---
Entry stack: [V11, 0x307, V472, V222, V222, V242, V244]
Stack pops: 2
Stack additions: [V258, S0]
Exit stack: [V11, 0x307, V472, V222, V222, V258, V244]

================================

Block 0x374
[0x374:0x381]
---
Predecessors: [0x347, 0x35b]
Successors: []
---
0x374 JUMPDEST
0x375 POP
0x376 SWAP3
0x377 POP
0x378 POP
0x379 POP
0x37a PUSH1 0x40
0x37c MLOAD
0x37d DUP1
0x37e SWAP2
0x37f SUB
0x380 SWAP1
0x381 RETURN
---
0x374: JUMPDEST 
0x37a: V259 = 0x40
0x37c: V260 = M[0x40]
0x37f: V261 = SUB S1 V260
0x381: RETURN V260 V261
---
Entry stack: [V11, 0x307, V472, V222, V222, S1, V244]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x307]

================================

Block 0x382
[0x382:0x389]
---
Predecessors: [0x8e]
Successors: [0x6c8]
---
0x382 JUMPDEST
0x383 PUSH2 0x38a
0x386 PUSH2 0x6c8
0x389 JUMP
---
0x382: JUMPDEST 
0x383: V262 = 0x38a
0x386: V263 = 0x6c8
0x389: JUMP 0x6c8
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x38a]
Exit stack: [V11, 0x38a]

================================

Block 0x38a
[0x38a:0x38b]
---
Predecessors: [0x6c8]
Successors: []
---
0x38a JUMPDEST
0x38b STOP
---
0x38a: JUMPDEST 
0x38b: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x38c
[0x38c:0x392]
---
Predecessors: [0x99]
Successors: [0x393, 0x397]
---
0x38c JUMPDEST
0x38d CALLVALUE
0x38e ISZERO
0x38f PUSH2 0x397
0x392 JUMPI
---
0x38c: JUMPDEST 
0x38d: V264 = CALLVALUE
0x38e: V265 = ISZERO V264
0x38f: V266 = 0x397
0x392: JUMPI 0x397 V265
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x393
[0x393:0x396]
---
Predecessors: [0x38c]
Successors: []
---
0x393 PUSH1 0x0
0x395 DUP1
0x396 REVERT
---
0x393: V267 = 0x0
0x396: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x397
[0x397:0x3cb]
---
Predecessors: [0x38c]
Successors: [0x7d4]
---
0x397 JUMPDEST
0x398 PUSH2 0x3cc
0x39b PUSH1 0x4
0x39d DUP1
0x39e DUP1
0x39f CALLDATALOAD
0x3a0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b5 AND
0x3b6 SWAP1
0x3b7 PUSH1 0x20
0x3b9 ADD
0x3ba SWAP1
0x3bb SWAP2
0x3bc SWAP1
0x3bd DUP1
0x3be CALLDATALOAD
0x3bf SWAP1
0x3c0 PUSH1 0x20
0x3c2 ADD
0x3c3 SWAP1
0x3c4 SWAP2
0x3c5 SWAP1
0x3c6 POP
0x3c7 POP
0x3c8 PUSH2 0x7d4
0x3cb JUMP
---
0x397: JUMPDEST 
0x398: V268 = 0x3cc
0x39b: V269 = 0x4
0x39f: V270 = CALLDATALOAD 0x4
0x3a0: V271 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b5: V272 = AND 0xffffffffffffffffffffffffffffffffffffffff V270
0x3b7: V273 = 0x20
0x3b9: V274 = ADD 0x20 0x4
0x3be: V275 = CALLDATALOAD 0x24
0x3c0: V276 = 0x20
0x3c2: V277 = ADD 0x20 0x24
0x3c8: V278 = 0x7d4
0x3cb: JUMP 0x7d4
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x3cc, V272, V275]
Exit stack: [V11, 0x3cc, V272, V275]

================================

Block 0x3cc
[0x3cc:0x3e5]
---
Predecessors: [0x85f]
Successors: []
---
0x3cc JUMPDEST
0x3cd PUSH1 0x40
0x3cf MLOAD
0x3d0 DUP1
0x3d1 DUP3
0x3d2 ISZERO
0x3d3 ISZERO
0x3d4 ISZERO
0x3d5 ISZERO
0x3d6 DUP2
0x3d7 MSTORE
0x3d8 PUSH1 0x20
0x3da ADD
0x3db SWAP2
0x3dc POP
0x3dd POP
0x3de PUSH1 0x40
0x3e0 MLOAD
0x3e1 DUP1
0x3e2 SWAP2
0x3e3 SUB
0x3e4 SWAP1
0x3e5 RETURN
---
0x3cc: JUMPDEST 
0x3cd: V279 = 0x40
0x3cf: V280 = M[0x40]
0x3d2: V281 = ISZERO 0x1
0x3d3: V282 = ISZERO 0x0
0x3d4: V283 = ISZERO 0x1
0x3d5: V284 = ISZERO 0x0
0x3d7: M[V280] = 0x1
0x3d8: V285 = 0x20
0x3da: V286 = ADD 0x20 V280
0x3de: V287 = 0x40
0x3e0: V288 = M[0x40]
0x3e3: V289 = SUB V286 V288
0x3e5: RETURN V288 V289
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x3e6
[0x3e6:0x435]
---
Predecessors: [0xb4]
Successors: [0x436, 0x47c]
---
0x3e6 JUMPDEST
0x3e7 PUSH1 0x3
0x3e9 DUP1
0x3ea SLOAD
0x3eb PUSH1 0x1
0x3ed DUP2
0x3ee PUSH1 0x1
0x3f0 AND
0x3f1 ISZERO
0x3f2 PUSH2 0x100
0x3f5 MUL
0x3f6 SUB
0x3f7 AND
0x3f8 PUSH1 0x2
0x3fa SWAP1
0x3fb DIV
0x3fc DUP1
0x3fd PUSH1 0x1f
0x3ff ADD
0x400 PUSH1 0x20
0x402 DUP1
0x403 SWAP2
0x404 DIV
0x405 MUL
0x406 PUSH1 0x20
0x408 ADD
0x409 PUSH1 0x40
0x40b MLOAD
0x40c SWAP1
0x40d DUP2
0x40e ADD
0x40f PUSH1 0x40
0x411 MSTORE
0x412 DUP1
0x413 SWAP3
0x414 SWAP2
0x415 SWAP1
0x416 DUP2
0x417 DUP2
0x418 MSTORE
0x419 PUSH1 0x20
0x41b ADD
0x41c DUP3
0x41d DUP1
0x41e SLOAD
0x41f PUSH1 0x1
0x421 DUP2
0x422 PUSH1 0x1
0x424 AND
0x425 ISZERO
0x426 PUSH2 0x100
0x429 MUL
0x42a SUB
0x42b AND
0x42c PUSH1 0x2
0x42e SWAP1
0x42f DIV
0x430 DUP1
0x431 ISZERO
0x432 PUSH2 0x47c
0x435 JUMPI
---
0x3e6: JUMPDEST 
0x3e7: V290 = 0x3
0x3ea: V291 = S[0x3]
0x3eb: V292 = 0x1
0x3ee: V293 = 0x1
0x3f0: V294 = AND 0x1 V291
0x3f1: V295 = ISZERO V294
0x3f2: V296 = 0x100
0x3f5: V297 = MUL 0x100 V295
0x3f6: V298 = SUB V297 0x1
0x3f7: V299 = AND V298 V291
0x3f8: V300 = 0x2
0x3fb: V301 = DIV V299 0x2
0x3fd: V302 = 0x1f
0x3ff: V303 = ADD 0x1f V301
0x400: V304 = 0x20
0x404: V305 = DIV V303 0x20
0x405: V306 = MUL V305 0x20
0x406: V307 = 0x20
0x408: V308 = ADD 0x20 V306
0x409: V309 = 0x40
0x40b: V310 = M[0x40]
0x40e: V311 = ADD V310 V308
0x40f: V312 = 0x40
0x411: M[0x40] = V311
0x418: M[V310] = V301
0x419: V313 = 0x20
0x41b: V314 = ADD 0x20 V310
0x41e: V315 = S[0x3]
0x41f: V316 = 0x1
0x422: V317 = 0x1
0x424: V318 = AND 0x1 V315
0x425: V319 = ISZERO V318
0x426: V320 = 0x100
0x429: V321 = MUL 0x100 V319
0x42a: V322 = SUB V321 0x1
0x42b: V323 = AND V322 V315
0x42c: V324 = 0x2
0x42f: V325 = DIV V323 0x2
0x431: V326 = ISZERO V325
0x432: V327 = 0x47c
0x435: JUMPI 0x47c V326
---
Entry stack: [V11, 0xbc]
Stack pops: 0
Stack additions: [V310, 0x3, V301, V314, 0x3, V325]
Exit stack: [V11, 0xbc, V310, 0x3, V301, V314, 0x3, V325]

================================

Block 0x436
[0x436:0x43d]
---
Predecessors: [0x3e6]
Successors: [0x43e, 0x451]
---
0x436 DUP1
0x437 PUSH1 0x1f
0x439 LT
0x43a PUSH2 0x451
0x43d JUMPI
---
0x437: V328 = 0x1f
0x439: V329 = LT 0x1f V325
0x43a: V330 = 0x451
0x43d: JUMPI 0x451 V329
---
Entry stack: [V11, 0xbc, V310, 0x3, V301, V314, 0x3, V325]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xbc, V310, 0x3, V301, V314, 0x3, V325]

================================

Block 0x43e
[0x43e:0x450]
---
Predecessors: [0x436]
Successors: [0x47c]
---
0x43e PUSH2 0x100
0x441 DUP1
0x442 DUP4
0x443 SLOAD
0x444 DIV
0x445 MUL
0x446 DUP4
0x447 MSTORE
0x448 SWAP2
0x449 PUSH1 0x20
0x44b ADD
0x44c SWAP2
0x44d PUSH2 0x47c
0x450 JUMP
---
0x43e: V331 = 0x100
0x443: V332 = S[0x3]
0x444: V333 = DIV V332 0x100
0x445: V334 = MUL V333 0x100
0x447: M[V314] = V334
0x449: V335 = 0x20
0x44b: V336 = ADD 0x20 V314
0x44d: V337 = 0x47c
0x450: JUMP 0x47c
---
Entry stack: [V11, 0xbc, V310, 0x3, V301, V314, 0x3, V325]
Stack pops: 3
Stack additions: [V336, S1, S0]
Exit stack: [V11, 0xbc, V310, 0x3, V301, V336, 0x3, V325]

================================

Block 0x451
[0x451:0x45e]
---
Predecessors: [0x436]
Successors: [0x45f]
---
0x451 JUMPDEST
0x452 DUP3
0x453 ADD
0x454 SWAP2
0x455 SWAP1
0x456 PUSH1 0x0
0x458 MSTORE
0x459 PUSH1 0x20
0x45b PUSH1 0x0
0x45d SHA3
0x45e SWAP1
---
0x451: JUMPDEST 
0x453: V338 = ADD V314 V325
0x456: V339 = 0x0
0x458: M[0x0] = 0x3
0x459: V340 = 0x20
0x45b: V341 = 0x0
0x45d: V342 = SHA3 0x0 0x20
---
Entry stack: [V11, 0xbc, V310, 0x3, V301, V314, 0x3, V325]
Stack pops: 3
Stack additions: [V338, V342, S2]
Exit stack: [V11, 0xbc, V310, 0x3, V301, V338, V342, V314]

================================

Block 0x45f
[0x45f:0x472]
---
Predecessors: [0x451, 0x45f]
Successors: [0x45f, 0x473]
---
0x45f JUMPDEST
0x460 DUP2
0x461 SLOAD
0x462 DUP2
0x463 MSTORE
0x464 SWAP1
0x465 PUSH1 0x1
0x467 ADD
0x468 SWAP1
0x469 PUSH1 0x20
0x46b ADD
0x46c DUP1
0x46d DUP4
0x46e GT
0x46f PUSH2 0x45f
0x472 JUMPI
---
0x45f: JUMPDEST 
0x461: V343 = S[S1]
0x463: M[S0] = V343
0x465: V344 = 0x1
0x467: V345 = ADD 0x1 S1
0x469: V346 = 0x20
0x46b: V347 = ADD 0x20 S0
0x46e: V348 = GT V338 V347
0x46f: V349 = 0x45f
0x472: JUMPI 0x45f V348
---
Entry stack: [V11, 0xbc, V310, 0x3, V301, V338, S1, S0]
Stack pops: 3
Stack additions: [S2, V345, V347]
Exit stack: [V11, 0xbc, V310, 0x3, V301, V338, V345, V347]

================================

Block 0x473
[0x473:0x47b]
---
Predecessors: [0x45f]
Successors: [0x47c]
---
0x473 DUP3
0x474 SWAP1
0x475 SUB
0x476 PUSH1 0x1f
0x478 AND
0x479 DUP3
0x47a ADD
0x47b SWAP2
---
0x475: V350 = SUB V347 V338
0x476: V351 = 0x1f
0x478: V352 = AND 0x1f V350
0x47a: V353 = ADD V338 V352
---
Entry stack: [V11, 0xbc, V310, 0x3, V301, V338, V345, V347]
Stack pops: 3
Stack additions: [V353, S1, S2]
Exit stack: [V11, 0xbc, V310, 0x3, V301, V353, V345, V338]

================================

Block 0x47c
[0x47c:0x483]
---
Predecessors: [0x3e6, 0x43e, 0x473]
Successors: [0xbc]
---
0x47c JUMPDEST
0x47d POP
0x47e POP
0x47f POP
0x480 POP
0x481 POP
0x482 DUP2
0x483 JUMP
---
0x47c: JUMPDEST 
0x483: JUMP 0xbc
---
Entry stack: [V11, 0xbc, V310, 0x3, V301, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V11, 0xbc, V310]

================================

Block 0x484
[0x484:0x489]
---
Predecessors: [0x142]
Successors: [0x14a]
---
0x484 JUMPDEST
0x485 PUSH1 0x0
0x487 SLOAD
0x488 DUP2
0x489 JUMP
---
0x484: JUMPDEST 
0x485: V354 = 0x0
0x487: V355 = S[0x0]
0x489: JUMP 0x14a
---
Entry stack: [V11, 0x14a]
Stack pops: 1
Stack additions: [S0, V355]
Exit stack: [V11, 0x14a, V355]

================================

Block 0x48a
[0x48a:0x4e1]
---
Predecessors: [0x16b]
Successors: [0x4e2, 0x4e6]
---
0x48a JUMPDEST
0x48b PUSH1 0x2
0x48d PUSH1 0x0
0x48f SWAP1
0x490 SLOAD
0x491 SWAP1
0x492 PUSH2 0x100
0x495 EXP
0x496 SWAP1
0x497 DIV
0x498 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ad AND
0x4ae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c3 AND
0x4c4 CALLER
0x4c5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4da AND
0x4db EQ
0x4dc ISZERO
0x4dd ISZERO
0x4de PUSH2 0x4e6
0x4e1 JUMPI
---
0x48a: JUMPDEST 
0x48b: V356 = 0x2
0x48d: V357 = 0x0
0x490: V358 = S[0x2]
0x492: V359 = 0x100
0x495: V360 = EXP 0x100 0x0
0x497: V361 = DIV V358 0x1
0x498: V362 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ad: V363 = AND 0xffffffffffffffffffffffffffffffffffffffff V361
0x4ae: V364 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c3: V365 = AND 0xffffffffffffffffffffffffffffffffffffffff V363
0x4c4: V366 = CALLER
0x4c5: V367 = 0xffffffffffffffffffffffffffffffffffffffff
0x4da: V368 = AND 0xffffffffffffffffffffffffffffffffffffffff V366
0x4db: V369 = EQ V368 V365
0x4dc: V370 = ISZERO V369
0x4dd: V371 = ISZERO V370
0x4de: V372 = 0x4e6
0x4e1: JUMPI 0x4e6 V371
---
Entry stack: [V11, 0x1fe, V124, V145]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1fe, V124, V145]

================================

Block 0x4e2
[0x4e2:0x4e5]
---
Predecessors: [0x48a]
Successors: []
---
0x4e2 PUSH1 0x0
0x4e4 DUP1
0x4e5 REVERT
---
0x4e2: V373 = 0x0
0x4e5: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1fe, V124, V145]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1fe, V124, V145]

================================

Block 0x4e6
[0x4e6:0x4fb]
---
Predecessors: [0x48a]
Successors: [0x968]
---
0x4e6 JUMPDEST
0x4e7 DUP2
0x4e8 PUSH1 0x3
0x4ea SWAP1
0x4eb DUP1
0x4ec MLOAD
0x4ed SWAP1
0x4ee PUSH1 0x20
0x4f0 ADD
0x4f1 SWAP1
0x4f2 PUSH2 0x4fc
0x4f5 SWAP3
0x4f6 SWAP2
0x4f7 SWAP1
0x4f8 PUSH2 0x968
0x4fb JUMP
---
0x4e6: JUMPDEST 
0x4e8: V374 = 0x3
0x4ec: V375 = M[V124]
0x4ee: V376 = 0x20
0x4f0: V377 = ADD 0x20 V124
0x4f2: V378 = 0x4fc
0x4f8: V379 = 0x968
0x4fb: JUMP 0x968
---
Entry stack: [V11, 0x1fe, V124, V145]
Stack pops: 2
Stack additions: [S1, S0, 0x4fc, 0x3, V377, V375]
Exit stack: [V11, 0x1fe, V124, V145, 0x4fc, 0x3, V377, V375]

================================

Block 0x4fc
[0x4fc:0x512]
---
Predecessors: [0x9e4]
Successors: [0x968]
---
0x4fc JUMPDEST
0x4fd POP
0x4fe DUP1
0x4ff PUSH1 0x5
0x501 SWAP1
0x502 DUP1
0x503 MLOAD
0x504 SWAP1
0x505 PUSH1 0x20
0x507 ADD
0x508 SWAP1
0x509 PUSH2 0x513
0x50c SWAP3
0x50d SWAP2
0x50e SWAP1
0x50f PUSH2 0x968
0x512 JUMP
---
0x4fc: JUMPDEST 
0x4ff: V380 = 0x5
0x503: V381 = M[V145]
0x505: V382 = 0x20
0x507: V383 = ADD 0x20 V145
0x509: V384 = 0x513
0x50f: V385 = 0x968
0x512: JUMP 0x968
---
Entry stack: [V11, 0x1fe, V124, V145, {0x3, 0x5}]
Stack pops: 2
Stack additions: [S1, 0x513, 0x5, V383, V381]
Exit stack: [V11, 0x1fe, V124, V145, 0x513, 0x5, V383, V381]

================================

Block 0x513
[0x513:0x517]
---
Predecessors: [0x9e4]
Successors: [0x1fe]
---
0x513 JUMPDEST
0x514 POP
0x515 POP
0x516 POP
0x517 JUMP
---
0x513: JUMPDEST 
0x517: JUMP 0x1fe
---
Entry stack: [V11, 0x1fe, V124, V145, {0x3, 0x5}]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x518
[0x518:0x52f]
---
Predecessors: [0x20b]
Successors: [0x237]
---
0x518 JUMPDEST
0x519 PUSH1 0x1
0x51b PUSH1 0x20
0x51d MSTORE
0x51e DUP1
0x51f PUSH1 0x0
0x521 MSTORE
0x522 PUSH1 0x40
0x524 PUSH1 0x0
0x526 SHA3
0x527 PUSH1 0x0
0x529 SWAP2
0x52a POP
0x52b SWAP1
0x52c POP
0x52d SLOAD
0x52e DUP2
0x52f JUMP
---
0x518: JUMPDEST 
0x519: V386 = 0x1
0x51b: V387 = 0x20
0x51d: M[0x20] = 0x1
0x51f: V388 = 0x0
0x521: M[0x0] = V160
0x522: V389 = 0x40
0x524: V390 = 0x0
0x526: V391 = SHA3 0x0 0x40
0x527: V392 = 0x0
0x52d: V393 = S[V391]
0x52f: JUMP 0x237
---
Entry stack: [V11, 0x237, V160]
Stack pops: 2
Stack additions: [S1, V393]
Exit stack: [V11, 0x237, V393]

================================

Block 0x530
[0x530:0x542]
---
Predecessors: [0x258]
Successors: [0x260]
---
0x530 JUMPDEST
0x531 PUSH1 0x4
0x533 PUSH1 0x0
0x535 SWAP1
0x536 SLOAD
0x537 SWAP1
0x538 PUSH2 0x100
0x53b EXP
0x53c SWAP1
0x53d DIV
0x53e PUSH1 0xff
0x540 AND
0x541 DUP2
0x542 JUMP
---
0x530: JUMPDEST 
0x531: V394 = 0x4
0x533: V395 = 0x0
0x536: V396 = S[0x4]
0x538: V397 = 0x100
0x53b: V398 = EXP 0x100 0x0
0x53d: V399 = DIV V396 0x1
0x53e: V400 = 0xff
0x540: V401 = AND 0xff V399
0x542: JUMP 0x260
---
Entry stack: [V11, 0x260]
Stack pops: 1
Stack additions: [S0, V401]
Exit stack: [V11, 0x260, V401]

================================

Block 0x543
[0x543:0x59a]
---
Predecessors: [0x287]
Successors: [0x59b, 0x59f]
---
0x543 JUMPDEST
0x544 PUSH1 0x2
0x546 PUSH1 0x0
0x548 SWAP1
0x549 SLOAD
0x54a SWAP1
0x54b PUSH2 0x100
0x54e EXP
0x54f SWAP1
0x550 DIV
0x551 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x566 AND
0x567 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x57c AND
0x57d CALLER
0x57e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x593 AND
0x594 EQ
0x595 ISZERO
0x596 ISZERO
0x597 PUSH2 0x59f
0x59a JUMPI
---
0x543: JUMPDEST 
0x544: V402 = 0x2
0x546: V403 = 0x0
0x549: V404 = S[0x2]
0x54b: V405 = 0x100
0x54e: V406 = EXP 0x100 0x0
0x550: V407 = DIV V404 0x1
0x551: V408 = 0xffffffffffffffffffffffffffffffffffffffff
0x566: V409 = AND 0xffffffffffffffffffffffffffffffffffffffff V407
0x567: V410 = 0xffffffffffffffffffffffffffffffffffffffff
0x57c: V411 = AND 0xffffffffffffffffffffffffffffffffffffffff V409
0x57d: V412 = CALLER
0x57e: V413 = 0xffffffffffffffffffffffffffffffffffffffff
0x593: V414 = AND 0xffffffffffffffffffffffffffffffffffffffff V412
0x594: V415 = EQ V414 V411
0x595: V416 = ISZERO V415
0x596: V417 = ISZERO V416
0x597: V418 = 0x59f
0x59a: JUMPI 0x59f V417
---
Entry stack: [V11, 0x29d, V194]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x29d, V194]

================================

Block 0x59b
[0x59b:0x59e]
---
Predecessors: [0x543]
Successors: []
---
0x59b PUSH1 0x0
0x59d DUP1
0x59e REVERT
---
0x59b: V419 = 0x0
0x59e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x29d, V194]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x29d, V194]

================================

Block 0x59f
[0x59f:0x5fc]
---
Predecessors: [0x543]
Successors: [0x5fd, 0x601]
---
0x59f JUMPDEST
0x5a0 PUSH1 0x2
0x5a2 PUSH1 0x0
0x5a4 SWAP1
0x5a5 SLOAD
0x5a6 SWAP1
0x5a7 PUSH2 0x100
0x5aa EXP
0x5ab SWAP1
0x5ac DIV
0x5ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5c2 AND
0x5c3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d8 AND
0x5d9 PUSH2 0x8fc
0x5dc DUP3
0x5dd SWAP1
0x5de DUP2
0x5df ISZERO
0x5e0 MUL
0x5e1 SWAP1
0x5e2 PUSH1 0x40
0x5e4 MLOAD
0x5e5 PUSH1 0x0
0x5e7 PUSH1 0x40
0x5e9 MLOAD
0x5ea DUP1
0x5eb DUP4
0x5ec SUB
0x5ed DUP2
0x5ee DUP6
0x5ef DUP9
0x5f0 DUP9
0x5f1 CALL
0x5f2 SWAP4
0x5f3 POP
0x5f4 POP
0x5f5 POP
0x5f6 POP
0x5f7 ISZERO
0x5f8 ISZERO
0x5f9 PUSH2 0x601
0x5fc JUMPI
---
0x59f: JUMPDEST 
0x5a0: V420 = 0x2
0x5a2: V421 = 0x0
0x5a5: V422 = S[0x2]
0x5a7: V423 = 0x100
0x5aa: V424 = EXP 0x100 0x0
0x5ac: V425 = DIV V422 0x1
0x5ad: V426 = 0xffffffffffffffffffffffffffffffffffffffff
0x5c2: V427 = AND 0xffffffffffffffffffffffffffffffffffffffff V425
0x5c3: V428 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d8: V429 = AND 0xffffffffffffffffffffffffffffffffffffffff V427
0x5d9: V430 = 0x8fc
0x5df: V431 = ISZERO V194
0x5e0: V432 = MUL V431 0x8fc
0x5e2: V433 = 0x40
0x5e4: V434 = M[0x40]
0x5e5: V435 = 0x0
0x5e7: V436 = 0x40
0x5e9: V437 = M[0x40]
0x5ec: V438 = SUB V434 V437
0x5f1: V439 = CALL V432 V429 V194 V437 V438 V437 0x0
0x5f7: V440 = ISZERO V439
0x5f8: V441 = ISZERO V440
0x5f9: V442 = 0x601
0x5fc: JUMPI 0x601 V441
---
Entry stack: [V11, 0x29d, V194]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x29d, V194]

================================

Block 0x5fd
[0x5fd:0x600]
---
Predecessors: [0x59f]
Successors: []
---
0x5fd PUSH1 0x0
0x5ff DUP1
0x600 REVERT
---
0x5fd: V443 = 0x0
0x600: REVERT 0x0 0x0
---
Entry stack: [V11, 0x29d, V194]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x29d, V194]

================================

Block 0x601
[0x601:0x603]
---
Predecessors: [0x59f]
Successors: [0x29d]
---
0x601 JUMPDEST
0x602 POP
0x603 JUMP
---
0x601: JUMPDEST 
0x603: JUMP 0x29d
---
Entry stack: [V11, 0x29d, V194]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x604
[0x604:0x629]
---
Predecessors: [0x2aa]
Successors: [0x2b2]
---
0x604 JUMPDEST
0x605 PUSH1 0x2
0x607 PUSH1 0x0
0x609 SWAP1
0x60a SLOAD
0x60b SWAP1
0x60c PUSH2 0x100
0x60f EXP
0x610 SWAP1
0x611 DIV
0x612 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x627 AND
0x628 DUP2
0x629 JUMP
---
0x604: JUMPDEST 
0x605: V444 = 0x2
0x607: V445 = 0x0
0x60a: V446 = S[0x2]
0x60c: V447 = 0x100
0x60f: V448 = EXP 0x100 0x0
0x611: V449 = DIV V446 0x1
0x612: V450 = 0xffffffffffffffffffffffffffffffffffffffff
0x627: V451 = AND 0xffffffffffffffffffffffffffffffffffffffff V449
0x629: JUMP 0x2b2
---
Entry stack: [V11, 0x2b2]
Stack pops: 1
Stack additions: [S0, V451]
Exit stack: [V11, 0x2b2, V451]

================================

Block 0x62a
[0x62a:0x679]
---
Predecessors: [0x2ff]
Successors: [0x67a, 0x6c0]
---
0x62a JUMPDEST
0x62b PUSH1 0x5
0x62d DUP1
0x62e SLOAD
0x62f PUSH1 0x1
0x631 DUP2
0x632 PUSH1 0x1
0x634 AND
0x635 ISZERO
0x636 PUSH2 0x100
0x639 MUL
0x63a SUB
0x63b AND
0x63c PUSH1 0x2
0x63e SWAP1
0x63f DIV
0x640 DUP1
0x641 PUSH1 0x1f
0x643 ADD
0x644 PUSH1 0x20
0x646 DUP1
0x647 SWAP2
0x648 DIV
0x649 MUL
0x64a PUSH1 0x20
0x64c ADD
0x64d PUSH1 0x40
0x64f MLOAD
0x650 SWAP1
0x651 DUP2
0x652 ADD
0x653 PUSH1 0x40
0x655 MSTORE
0x656 DUP1
0x657 SWAP3
0x658 SWAP2
0x659 SWAP1
0x65a DUP2
0x65b DUP2
0x65c MSTORE
0x65d PUSH1 0x20
0x65f ADD
0x660 DUP3
0x661 DUP1
0x662 SLOAD
0x663 PUSH1 0x1
0x665 DUP2
0x666 PUSH1 0x1
0x668 AND
0x669 ISZERO
0x66a PUSH2 0x100
0x66d MUL
0x66e SUB
0x66f AND
0x670 PUSH1 0x2
0x672 SWAP1
0x673 DIV
0x674 DUP1
0x675 ISZERO
0x676 PUSH2 0x6c0
0x679 JUMPI
---
0x62a: JUMPDEST 
0x62b: V452 = 0x5
0x62e: V453 = S[0x5]
0x62f: V454 = 0x1
0x632: V455 = 0x1
0x634: V456 = AND 0x1 V453
0x635: V457 = ISZERO V456
0x636: V458 = 0x100
0x639: V459 = MUL 0x100 V457
0x63a: V460 = SUB V459 0x1
0x63b: V461 = AND V460 V453
0x63c: V462 = 0x2
0x63f: V463 = DIV V461 0x2
0x641: V464 = 0x1f
0x643: V465 = ADD 0x1f V463
0x644: V466 = 0x20
0x648: V467 = DIV V465 0x20
0x649: V468 = MUL V467 0x20
0x64a: V469 = 0x20
0x64c: V470 = ADD 0x20 V468
0x64d: V471 = 0x40
0x64f: V472 = M[0x40]
0x652: V473 = ADD V472 V470
0x653: V474 = 0x40
0x655: M[0x40] = V473
0x65c: M[V472] = V463
0x65d: V475 = 0x20
0x65f: V476 = ADD 0x20 V472
0x662: V477 = S[0x5]
0x663: V478 = 0x1
0x666: V479 = 0x1
0x668: V480 = AND 0x1 V477
0x669: V481 = ISZERO V480
0x66a: V482 = 0x100
0x66d: V483 = MUL 0x100 V481
0x66e: V484 = SUB V483 0x1
0x66f: V485 = AND V484 V477
0x670: V486 = 0x2
0x673: V487 = DIV V485 0x2
0x675: V488 = ISZERO V487
0x676: V489 = 0x6c0
0x679: JUMPI 0x6c0 V488
---
Entry stack: [V11, 0x307]
Stack pops: 0
Stack additions: [V472, 0x5, V463, V476, 0x5, V487]
Exit stack: [V11, 0x307, V472, 0x5, V463, V476, 0x5, V487]

================================

Block 0x67a
[0x67a:0x681]
---
Predecessors: [0x62a]
Successors: [0x682, 0x695]
---
0x67a DUP1
0x67b PUSH1 0x1f
0x67d LT
0x67e PUSH2 0x695
0x681 JUMPI
---
0x67b: V490 = 0x1f
0x67d: V491 = LT 0x1f V487
0x67e: V492 = 0x695
0x681: JUMPI 0x695 V491
---
Entry stack: [V11, 0x307, V472, 0x5, V463, V476, 0x5, V487]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x307, V472, 0x5, V463, V476, 0x5, V487]

================================

Block 0x682
[0x682:0x694]
---
Predecessors: [0x67a]
Successors: [0x6c0]
---
0x682 PUSH2 0x100
0x685 DUP1
0x686 DUP4
0x687 SLOAD
0x688 DIV
0x689 MUL
0x68a DUP4
0x68b MSTORE
0x68c SWAP2
0x68d PUSH1 0x20
0x68f ADD
0x690 SWAP2
0x691 PUSH2 0x6c0
0x694 JUMP
---
0x682: V493 = 0x100
0x687: V494 = S[0x5]
0x688: V495 = DIV V494 0x100
0x689: V496 = MUL V495 0x100
0x68b: M[V476] = V496
0x68d: V497 = 0x20
0x68f: V498 = ADD 0x20 V476
0x691: V499 = 0x6c0
0x694: JUMP 0x6c0
---
Entry stack: [V11, 0x307, V472, 0x5, V463, V476, 0x5, V487]
Stack pops: 3
Stack additions: [V498, S1, S0]
Exit stack: [V11, 0x307, V472, 0x5, V463, V498, 0x5, V487]

================================

Block 0x695
[0x695:0x6a2]
---
Predecessors: [0x67a]
Successors: [0x6a3]
---
0x695 JUMPDEST
0x696 DUP3
0x697 ADD
0x698 SWAP2
0x699 SWAP1
0x69a PUSH1 0x0
0x69c MSTORE
0x69d PUSH1 0x20
0x69f PUSH1 0x0
0x6a1 SHA3
0x6a2 SWAP1
---
0x695: JUMPDEST 
0x697: V500 = ADD V476 V487
0x69a: V501 = 0x0
0x69c: M[0x0] = 0x5
0x69d: V502 = 0x20
0x69f: V503 = 0x0
0x6a1: V504 = SHA3 0x0 0x20
---
Entry stack: [V11, 0x307, V472, 0x5, V463, V476, 0x5, V487]
Stack pops: 3
Stack additions: [V500, V504, S2]
Exit stack: [V11, 0x307, V472, 0x5, V463, V500, V504, V476]

================================

Block 0x6a3
[0x6a3:0x6b6]
---
Predecessors: [0x695, 0x6a3]
Successors: [0x6a3, 0x6b7]
---
0x6a3 JUMPDEST
0x6a4 DUP2
0x6a5 SLOAD
0x6a6 DUP2
0x6a7 MSTORE
0x6a8 SWAP1
0x6a9 PUSH1 0x1
0x6ab ADD
0x6ac SWAP1
0x6ad PUSH1 0x20
0x6af ADD
0x6b0 DUP1
0x6b1 DUP4
0x6b2 GT
0x6b3 PUSH2 0x6a3
0x6b6 JUMPI
---
0x6a3: JUMPDEST 
0x6a5: V505 = S[S1]
0x6a7: M[S0] = V505
0x6a9: V506 = 0x1
0x6ab: V507 = ADD 0x1 S1
0x6ad: V508 = 0x20
0x6af: V509 = ADD 0x20 S0
0x6b2: V510 = GT V500 V509
0x6b3: V511 = 0x6a3
0x6b6: JUMPI 0x6a3 V510
---
Entry stack: [V11, 0x307, V472, 0x5, V463, V500, S1, S0]
Stack pops: 3
Stack additions: [S2, V507, V509]
Exit stack: [V11, 0x307, V472, 0x5, V463, V500, V507, V509]

================================

Block 0x6b7
[0x6b7:0x6bf]
---
Predecessors: [0x6a3]
Successors: [0x6c0]
---
0x6b7 DUP3
0x6b8 SWAP1
0x6b9 SUB
0x6ba PUSH1 0x1f
0x6bc AND
0x6bd DUP3
0x6be ADD
0x6bf SWAP2
---
0x6b9: V512 = SUB V509 V500
0x6ba: V513 = 0x1f
0x6bc: V514 = AND 0x1f V512
0x6be: V515 = ADD V500 V514
---
Entry stack: [V11, 0x307, V472, 0x5, V463, V500, V507, V509]
Stack pops: 3
Stack additions: [V515, S1, S2]
Exit stack: [V11, 0x307, V472, 0x5, V463, V515, V507, V500]

================================

Block 0x6c0
[0x6c0:0x6c7]
---
Predecessors: [0x62a, 0x682, 0x6b7]
Successors: [0x307]
---
0x6c0 JUMPDEST
0x6c1 POP
0x6c2 POP
0x6c3 POP
0x6c4 POP
0x6c5 POP
0x6c6 DUP2
0x6c7 JUMP
---
0x6c0: JUMPDEST 
0x6c7: JUMP 0x307
---
Entry stack: [V11, 0x307, V472, 0x5, V463, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V11, 0x307, V472]

================================

Block 0x6c8
[0x6c8:0x7d3]
---
Predecessors: [0x382]
Successors: [0x38a]
---
0x6c8 JUMPDEST
0x6c9 PUSH1 0x4
0x6cb PUSH1 0x0
0x6cd SWAP1
0x6ce SLOAD
0x6cf SWAP1
0x6d0 PUSH2 0x100
0x6d3 EXP
0x6d4 SWAP1
0x6d5 DIV
0x6d6 PUSH1 0xff
0x6d8 AND
0x6d9 PUSH1 0xff
0x6db AND
0x6dc PUSH1 0xa
0x6de EXP
0x6df PUSH2 0x3e8
0x6e2 CALLVALUE
0x6e3 MUL
0x6e4 MUL
0x6e5 PUSH1 0x1
0x6e7 PUSH1 0x0
0x6e9 CALLER
0x6ea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6ff AND
0x700 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x715 AND
0x716 DUP2
0x717 MSTORE
0x718 PUSH1 0x20
0x71a ADD
0x71b SWAP1
0x71c DUP2
0x71d MSTORE
0x71e PUSH1 0x20
0x720 ADD
0x721 PUSH1 0x0
0x723 SHA3
0x724 PUSH1 0x0
0x726 DUP3
0x727 DUP3
0x728 SLOAD
0x729 ADD
0x72a SWAP3
0x72b POP
0x72c POP
0x72d DUP2
0x72e SWAP1
0x72f SSTORE
0x730 POP
0x731 CALLER
0x732 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x747 AND
0x748 PUSH1 0x2
0x74a PUSH1 0x0
0x74c SWAP1
0x74d SLOAD
0x74e SWAP1
0x74f PUSH2 0x100
0x752 EXP
0x753 SWAP1
0x754 DIV
0x755 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x76a AND
0x76b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x780 AND
0x781 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x7a2 PUSH1 0x4
0x7a4 PUSH1 0x0
0x7a6 SWAP1
0x7a7 SLOAD
0x7a8 SWAP1
0x7a9 PUSH2 0x100
0x7ac EXP
0x7ad SWAP1
0x7ae DIV
0x7af PUSH1 0xff
0x7b1 AND
0x7b2 PUSH1 0xff
0x7b4 AND
0x7b5 PUSH1 0xa
0x7b7 EXP
0x7b8 PUSH2 0x3e8
0x7bb CALLVALUE
0x7bc MUL
0x7bd MUL
0x7be PUSH1 0x40
0x7c0 MLOAD
0x7c1 DUP1
0x7c2 DUP3
0x7c3 DUP2
0x7c4 MSTORE
0x7c5 PUSH1 0x20
0x7c7 ADD
0x7c8 SWAP2
0x7c9 POP
0x7ca POP
0x7cb PUSH1 0x40
0x7cd MLOAD
0x7ce DUP1
0x7cf SWAP2
0x7d0 SUB
0x7d1 SWAP1
0x7d2 LOG3
0x7d3 JUMP
---
0x6c8: JUMPDEST 
0x6c9: V516 = 0x4
0x6cb: V517 = 0x0
0x6ce: V518 = S[0x4]
0x6d0: V519 = 0x100
0x6d3: V520 = EXP 0x100 0x0
0x6d5: V521 = DIV V518 0x1
0x6d6: V522 = 0xff
0x6d8: V523 = AND 0xff V521
0x6d9: V524 = 0xff
0x6db: V525 = AND 0xff V523
0x6dc: V526 = 0xa
0x6de: V527 = EXP 0xa V525
0x6df: V528 = 0x3e8
0x6e2: V529 = CALLVALUE
0x6e3: V530 = MUL V529 0x3e8
0x6e4: V531 = MUL V530 V527
0x6e5: V532 = 0x1
0x6e7: V533 = 0x0
0x6e9: V534 = CALLER
0x6ea: V535 = 0xffffffffffffffffffffffffffffffffffffffff
0x6ff: V536 = AND 0xffffffffffffffffffffffffffffffffffffffff V534
0x700: V537 = 0xffffffffffffffffffffffffffffffffffffffff
0x715: V538 = AND 0xffffffffffffffffffffffffffffffffffffffff V536
0x717: M[0x0] = V538
0x718: V539 = 0x20
0x71a: V540 = ADD 0x20 0x0
0x71d: M[0x20] = 0x1
0x71e: V541 = 0x20
0x720: V542 = ADD 0x20 0x20
0x721: V543 = 0x0
0x723: V544 = SHA3 0x0 0x40
0x724: V545 = 0x0
0x728: V546 = S[V544]
0x729: V547 = ADD V546 V531
0x72f: S[V544] = V547
0x731: V548 = CALLER
0x732: V549 = 0xffffffffffffffffffffffffffffffffffffffff
0x747: V550 = AND 0xffffffffffffffffffffffffffffffffffffffff V548
0x748: V551 = 0x2
0x74a: V552 = 0x0
0x74d: V553 = S[0x2]
0x74f: V554 = 0x100
0x752: V555 = EXP 0x100 0x0
0x754: V556 = DIV V553 0x1
0x755: V557 = 0xffffffffffffffffffffffffffffffffffffffff
0x76a: V558 = AND 0xffffffffffffffffffffffffffffffffffffffff V556
0x76b: V559 = 0xffffffffffffffffffffffffffffffffffffffff
0x780: V560 = AND 0xffffffffffffffffffffffffffffffffffffffff V558
0x781: V561 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x7a2: V562 = 0x4
0x7a4: V563 = 0x0
0x7a7: V564 = S[0x4]
0x7a9: V565 = 0x100
0x7ac: V566 = EXP 0x100 0x0
0x7ae: V567 = DIV V564 0x1
0x7af: V568 = 0xff
0x7b1: V569 = AND 0xff V567
0x7b2: V570 = 0xff
0x7b4: V571 = AND 0xff V569
0x7b5: V572 = 0xa
0x7b7: V573 = EXP 0xa V571
0x7b8: V574 = 0x3e8
0x7bb: V575 = CALLVALUE
0x7bc: V576 = MUL V575 0x3e8
0x7bd: V577 = MUL V576 V573
0x7be: V578 = 0x40
0x7c0: V579 = M[0x40]
0x7c4: M[V579] = V577
0x7c5: V580 = 0x20
0x7c7: V581 = ADD 0x20 V579
0x7cb: V582 = 0x40
0x7cd: V583 = M[0x40]
0x7d0: V584 = SUB V581 V583
0x7d2: LOG V583 V584 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V560 V550
0x7d3: JUMP 0x38a
---
Entry stack: [V11, 0x38a]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x7d4
[0x7d4:0x80c]
---
Predecessors: [0x397]
Successors: [0x80d, 0x811]
---
0x7d4 JUMPDEST
0x7d5 PUSH1 0x0
0x7d7 DUP1
0x7d8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7ed AND
0x7ee DUP4
0x7ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x804 AND
0x805 EQ
0x806 ISZERO
0x807 ISZERO
0x808 ISZERO
0x809 PUSH2 0x811
0x80c JUMPI
---
0x7d4: JUMPDEST 
0x7d5: V585 = 0x0
0x7d8: V586 = 0xffffffffffffffffffffffffffffffffffffffff
0x7ed: V587 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x7ef: V588 = 0xffffffffffffffffffffffffffffffffffffffff
0x804: V589 = AND 0xffffffffffffffffffffffffffffffffffffffff V272
0x805: V590 = EQ V589 0x0
0x806: V591 = ISZERO V590
0x807: V592 = ISZERO V591
0x808: V593 = ISZERO V592
0x809: V594 = 0x811
0x80c: JUMPI 0x811 V593
---
Entry stack: [V11, 0x3cc, V272, V275]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V11, 0x3cc, V272, V275, 0x0]

================================

Block 0x80d
[0x80d:0x810]
---
Predecessors: [0x7d4]
Successors: []
---
0x80d PUSH1 0x0
0x80f DUP1
0x810 REVERT
---
0x80d: V595 = 0x0
0x810: REVERT 0x0 0x0
---
Entry stack: [V11, 0x3cc, V272, V275, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x3cc, V272, V275, 0x0]

================================

Block 0x811
[0x811:0x85a]
---
Predecessors: [0x7d4]
Successors: [0x85b, 0x85f]
---
0x811 JUMPDEST
0x812 PUSH1 0x1
0x814 PUSH1 0x0
0x816 CALLER
0x817 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x82c AND
0x82d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x842 AND
0x843 DUP2
0x844 MSTORE
0x845 PUSH1 0x20
0x847 ADD
0x848 SWAP1
0x849 DUP2
0x84a MSTORE
0x84b PUSH1 0x20
0x84d ADD
0x84e PUSH1 0x0
0x850 SHA3
0x851 SLOAD
0x852 DUP3
0x853 GT
0x854 ISZERO
0x855 ISZERO
0x856 ISZERO
0x857 PUSH2 0x85f
0x85a JUMPI
---
0x811: JUMPDEST 
0x812: V596 = 0x1
0x814: V597 = 0x0
0x816: V598 = CALLER
0x817: V599 = 0xffffffffffffffffffffffffffffffffffffffff
0x82c: V600 = AND 0xffffffffffffffffffffffffffffffffffffffff V598
0x82d: V601 = 0xffffffffffffffffffffffffffffffffffffffff
0x842: V602 = AND 0xffffffffffffffffffffffffffffffffffffffff V600
0x844: M[0x0] = V602
0x845: V603 = 0x20
0x847: V604 = ADD 0x20 0x0
0x84a: M[0x20] = 0x1
0x84b: V605 = 0x20
0x84d: V606 = ADD 0x20 0x20
0x84e: V607 = 0x0
0x850: V608 = SHA3 0x0 0x40
0x851: V609 = S[V608]
0x853: V610 = GT V275 V609
0x854: V611 = ISZERO V610
0x855: V612 = ISZERO V611
0x856: V613 = ISZERO V612
0x857: V614 = 0x85f
0x85a: JUMPI 0x85f V613
---
Entry stack: [V11, 0x3cc, V272, V275, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x3cc, V272, V275, 0x0]

================================

Block 0x85b
[0x85b:0x85e]
---
Predecessors: [0x811]
Successors: []
---
0x85b PUSH1 0x0
0x85d DUP1
0x85e REVERT
---
0x85b: V615 = 0x0
0x85e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x3cc, V272, V275, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x3cc, V272, V275, 0x0]

================================

Block 0x85f
[0x85f:0x967]
---
Predecessors: [0x811]
Successors: [0x3cc]
---
0x85f JUMPDEST
0x860 DUP2
0x861 PUSH1 0x1
0x863 PUSH1 0x0
0x865 CALLER
0x866 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x87b AND
0x87c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x891 AND
0x892 DUP2
0x893 MSTORE
0x894 PUSH1 0x20
0x896 ADD
0x897 SWAP1
0x898 DUP2
0x899 MSTORE
0x89a PUSH1 0x20
0x89c ADD
0x89d PUSH1 0x0
0x89f SHA3
0x8a0 PUSH1 0x0
0x8a2 DUP3
0x8a3 DUP3
0x8a4 SLOAD
0x8a5 SUB
0x8a6 SWAP3
0x8a7 POP
0x8a8 POP
0x8a9 DUP2
0x8aa SWAP1
0x8ab SSTORE
0x8ac POP
0x8ad DUP2
0x8ae PUSH1 0x1
0x8b0 PUSH1 0x0
0x8b2 DUP6
0x8b3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8c8 AND
0x8c9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8de AND
0x8df DUP2
0x8e0 MSTORE
0x8e1 PUSH1 0x20
0x8e3 ADD
0x8e4 SWAP1
0x8e5 DUP2
0x8e6 MSTORE
0x8e7 PUSH1 0x20
0x8e9 ADD
0x8ea PUSH1 0x0
0x8ec SHA3
0x8ed PUSH1 0x0
0x8ef DUP3
0x8f0 DUP3
0x8f1 SLOAD
0x8f2 ADD
0x8f3 SWAP3
0x8f4 POP
0x8f5 POP
0x8f6 DUP2
0x8f7 SWAP1
0x8f8 SSTORE
0x8f9 POP
0x8fa DUP3
0x8fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x910 AND
0x911 CALLER
0x912 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x927 AND
0x928 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x949 DUP5
0x94a PUSH1 0x40
0x94c MLOAD
0x94d DUP1
0x94e DUP3
0x94f DUP2
0x950 MSTORE
0x951 PUSH1 0x20
0x953 ADD
0x954 SWAP2
0x955 POP
0x956 POP
0x957 PUSH1 0x40
0x959 MLOAD
0x95a DUP1
0x95b SWAP2
0x95c SUB
0x95d SWAP1
0x95e LOG3
0x95f PUSH1 0x1
0x961 SWAP1
0x962 POP
0x963 SWAP3
0x964 SWAP2
0x965 POP
0x966 POP
0x967 JUMP
---
0x85f: JUMPDEST 
0x861: V616 = 0x1
0x863: V617 = 0x0
0x865: V618 = CALLER
0x866: V619 = 0xffffffffffffffffffffffffffffffffffffffff
0x87b: V620 = AND 0xffffffffffffffffffffffffffffffffffffffff V618
0x87c: V621 = 0xffffffffffffffffffffffffffffffffffffffff
0x891: V622 = AND 0xffffffffffffffffffffffffffffffffffffffff V620
0x893: M[0x0] = V622
0x894: V623 = 0x20
0x896: V624 = ADD 0x20 0x0
0x899: M[0x20] = 0x1
0x89a: V625 = 0x20
0x89c: V626 = ADD 0x20 0x20
0x89d: V627 = 0x0
0x89f: V628 = SHA3 0x0 0x40
0x8a0: V629 = 0x0
0x8a4: V630 = S[V628]
0x8a5: V631 = SUB V630 V275
0x8ab: S[V628] = V631
0x8ae: V632 = 0x1
0x8b0: V633 = 0x0
0x8b3: V634 = 0xffffffffffffffffffffffffffffffffffffffff
0x8c8: V635 = AND 0xffffffffffffffffffffffffffffffffffffffff V272
0x8c9: V636 = 0xffffffffffffffffffffffffffffffffffffffff
0x8de: V637 = AND 0xffffffffffffffffffffffffffffffffffffffff V635
0x8e0: M[0x0] = V637
0x8e1: V638 = 0x20
0x8e3: V639 = ADD 0x20 0x0
0x8e6: M[0x20] = 0x1
0x8e7: V640 = 0x20
0x8e9: V641 = ADD 0x20 0x20
0x8ea: V642 = 0x0
0x8ec: V643 = SHA3 0x0 0x40
0x8ed: V644 = 0x0
0x8f1: V645 = S[V643]
0x8f2: V646 = ADD V645 V275
0x8f8: S[V643] = V646
0x8fb: V647 = 0xffffffffffffffffffffffffffffffffffffffff
0x910: V648 = AND 0xffffffffffffffffffffffffffffffffffffffff V272
0x911: V649 = CALLER
0x912: V650 = 0xffffffffffffffffffffffffffffffffffffffff
0x927: V651 = AND 0xffffffffffffffffffffffffffffffffffffffff V649
0x928: V652 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x94a: V653 = 0x40
0x94c: V654 = M[0x40]
0x950: M[V654] = V275
0x951: V655 = 0x20
0x953: V656 = ADD 0x20 V654
0x957: V657 = 0x40
0x959: V658 = M[0x40]
0x95c: V659 = SUB V656 V658
0x95e: LOG V658 V659 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V651 V648
0x95f: V660 = 0x1
0x967: JUMP 0x3cc
---
Entry stack: [V11, 0x3cc, V272, V275, 0x0]
Stack pops: 4
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x968
[0x968:0x998]
---
Predecessors: [0x4e6, 0x4fc]
Successors: [0x999, 0x9a9]
---
0x968 JUMPDEST
0x969 DUP3
0x96a DUP1
0x96b SLOAD
0x96c PUSH1 0x1
0x96e DUP2
0x96f PUSH1 0x1
0x971 AND
0x972 ISZERO
0x973 PUSH2 0x100
0x976 MUL
0x977 SUB
0x978 AND
0x979 PUSH1 0x2
0x97b SWAP1
0x97c DIV
0x97d SWAP1
0x97e PUSH1 0x0
0x980 MSTORE
0x981 PUSH1 0x20
0x983 PUSH1 0x0
0x985 SHA3
0x986 SWAP1
0x987 PUSH1 0x1f
0x989 ADD
0x98a PUSH1 0x20
0x98c SWAP1
0x98d DIV
0x98e DUP2
0x98f ADD
0x990 SWAP3
0x991 DUP3
0x992 PUSH1 0x1f
0x994 LT
0x995 PUSH2 0x9a9
0x998 JUMPI
---
0x968: JUMPDEST 
0x96b: V661 = S[{0x3, 0x5}]
0x96c: V662 = 0x1
0x96f: V663 = 0x1
0x971: V664 = AND 0x1 V661
0x972: V665 = ISZERO V664
0x973: V666 = 0x100
0x976: V667 = MUL 0x100 V665
0x977: V668 = SUB V667 0x1
0x978: V669 = AND V668 V661
0x979: V670 = 0x2
0x97c: V671 = DIV V669 0x2
0x97e: V672 = 0x0
0x980: M[0x0] = {0x3, 0x5}
0x981: V673 = 0x20
0x983: V674 = 0x0
0x985: V675 = SHA3 0x0 0x20
0x987: V676 = 0x1f
0x989: V677 = ADD 0x1f V671
0x98a: V678 = 0x20
0x98d: V679 = DIV V677 0x20
0x98f: V680 = ADD V675 V679
0x992: V681 = 0x1f
0x994: V682 = LT 0x1f S0
0x995: V683 = 0x9a9
0x998: JUMPI 0x9a9 V682
---
Entry stack: [V11, 0x1fe, V124, V145, {0x4fc, 0x513}, {0x3, 0x5}, S1, S0]
Stack pops: 3
Stack additions: [S2, V680, S0, V675, S1]
Exit stack: [V11, 0x1fe, V124, V145, {0x4fc, 0x513}, {0x3, 0x5}, V680, S0, V675, S1]

================================

Block 0x999
[0x999:0x9a8]
---
Predecessors: [0x968]
Successors: [0x9d7]
---
0x999 DUP1
0x99a MLOAD
0x99b PUSH1 0xff
0x99d NOT
0x99e AND
0x99f DUP4
0x9a0 DUP1
0x9a1 ADD
0x9a2 OR
0x9a3 DUP6
0x9a4 SSTORE
0x9a5 PUSH2 0x9d7
0x9a8 JUMP
---
0x99a: V684 = M[S0]
0x99b: V685 = 0xff
0x99d: V686 = NOT 0xff
0x99e: V687 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V684
0x9a1: V688 = ADD S2 S2
0x9a2: V689 = OR V688 V687
0x9a4: S[{0x3, 0x5}] = V689
0x9a5: V690 = 0x9d7
0x9a8: JUMP 0x9d7
---
Entry stack: [V11, 0x1fe, V124, V145, {0x4fc, 0x513}, {0x3, 0x5}, V680, S2, V675, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x1fe, V124, V145, {0x4fc, 0x513}, {0x3, 0x5}, V680, S2, V675, S0]

================================

Block 0x9a9
[0x9a9:0x9b7]
---
Predecessors: [0x968]
Successors: [0x9b8, 0x9d7]
---
0x9a9 JUMPDEST
0x9aa DUP3
0x9ab DUP1
0x9ac ADD
0x9ad PUSH1 0x1
0x9af ADD
0x9b0 DUP6
0x9b1 SSTORE
0x9b2 DUP3
0x9b3 ISZERO
0x9b4 PUSH2 0x9d7
0x9b7 JUMPI
---
0x9a9: JUMPDEST 
0x9ac: V691 = ADD S2 S2
0x9ad: V692 = 0x1
0x9af: V693 = ADD 0x1 V691
0x9b1: S[{0x3, 0x5}] = V693
0x9b3: V694 = ISZERO S2
0x9b4: V695 = 0x9d7
0x9b7: JUMPI 0x9d7 V694
---
Entry stack: [V11, 0x1fe, V124, V145, {0x4fc, 0x513}, {0x3, 0x5}, V680, S2, V675, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x1fe, V124, V145, {0x4fc, 0x513}, {0x3, 0x5}, V680, S2, V675, S0]

================================

Block 0x9b8
[0x9b8:0x9ba]
---
Predecessors: [0x9a9]
Successors: [0x9bb]
---
0x9b8 SWAP2
0x9b9 DUP3
0x9ba ADD
---
0x9ba: V696 = ADD S0 S2
---
Entry stack: [V11, 0x1fe, V124, V145, {0x4fc, 0x513}, {0x3, 0x5}, V680, S2, V675, S0]
Stack pops: 3
Stack additions: [S0, S1, V696]
Exit stack: [V11, 0x1fe, V124, V145, {0x4fc, 0x513}, {0x3, 0x5}, V680, S0, V675, V696]

================================

Block 0x9bb
[0x9bb:0x9c3]
---
Predecessors: [0x9b8, 0x9c4]
Successors: [0x9c4, 0x9d6]
---
0x9bb JUMPDEST
0x9bc DUP3
0x9bd DUP2
0x9be GT
0x9bf ISZERO
0x9c0 PUSH2 0x9d6
0x9c3 JUMPI
---
0x9bb: JUMPDEST 
0x9be: V697 = GT V696 S2
0x9bf: V698 = ISZERO V697
0x9c0: V699 = 0x9d6
0x9c3: JUMPI 0x9d6 V698
---
Entry stack: [V11, 0x1fe, V124, V145, {0x4fc, 0x513}, {0x3, 0x5}, S3, S2, S1, V696]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x1fe, V124, V145, {0x4fc, 0x513}, {0x3, 0x5}, S3, S2, S1, V696]

================================

Block 0x9c4
[0x9c4:0x9d5]
---
Predecessors: [0x9bb]
Successors: [0x9bb]
---
0x9c4 DUP3
0x9c5 MLOAD
0x9c6 DUP3
0x9c7 SSTORE
0x9c8 SWAP2
0x9c9 PUSH1 0x20
0x9cb ADD
0x9cc SWAP2
0x9cd SWAP1
0x9ce PUSH1 0x1
0x9d0 ADD
0x9d1 SWAP1
0x9d2 PUSH2 0x9bb
0x9d5 JUMP
---
0x9c5: V700 = M[S2]
0x9c7: S[S1] = V700
0x9c9: V701 = 0x20
0x9cb: V702 = ADD 0x20 S2
0x9ce: V703 = 0x1
0x9d0: V704 = ADD 0x1 S1
0x9d2: V705 = 0x9bb
0x9d5: JUMP 0x9bb
---
Entry stack: [V11, 0x1fe, V124, V145, {0x4fc, 0x513}, {0x3, 0x5}, S3, S2, S1, V696]
Stack pops: 3
Stack additions: [V702, V704, S0]
Exit stack: [V11, 0x1fe, V124, V145, {0x4fc, 0x513}, {0x3, 0x5}, S3, V702, V704, V696]

================================

Block 0x9d6
[0x9d6:0x9d6]
---
Predecessors: [0x9bb]
Successors: [0x9d7]
---
0x9d6 JUMPDEST
---
0x9d6: JUMPDEST 
---
Entry stack: [V11, 0x1fe, V124, V145, {0x4fc, 0x513}, {0x3, 0x5}, S3, S2, S1, V696]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1fe, V124, V145, {0x4fc, 0x513}, {0x3, 0x5}, S3, S2, S1, V696]

================================

Block 0x9d7
[0x9d7:0x9e3]
---
Predecessors: [0x999, 0x9a9, 0x9d6]
Successors: [0x9e8]
---
0x9d7 JUMPDEST
0x9d8 POP
0x9d9 SWAP1
0x9da POP
0x9db PUSH2 0x9e4
0x9de SWAP2
0x9df SWAP1
0x9e0 PUSH2 0x9e8
0x9e3 JUMP
---
0x9d7: JUMPDEST 
0x9db: V706 = 0x9e4
0x9e0: V707 = 0x9e8
0x9e3: JUMP 0x9e8
---
Entry stack: [V11, 0x1fe, V124, V145, {0x4fc, 0x513}, {0x3, 0x5}, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [0x9e4, S3, S1]
Exit stack: [V11, 0x1fe, V124, V145, {0x4fc, 0x513}, {0x3, 0x5}, 0x9e4, S3, S1]

================================

Block 0x9e4
[0x9e4:0x9e7]
---
Predecessors: [0xa0a]
Successors: [0x4fc, 0x513]
---
0x9e4 JUMPDEST
0x9e5 POP
0x9e6 SWAP1
0x9e7 JUMP
---
0x9e4: JUMPDEST 
0x9e7: JUMP {0x4fc, 0x513}
---
Entry stack: [V11, 0x1fe, V124, V145, {0x4fc, 0x513}, {0x3, 0x5}, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0x1fe, V124, V145, {0x3, 0x5}]

================================

Block 0x9e8
[0x9e8:0x9ed]
---
Predecessors: [0x9d7]
Successors: [0x9ee]
---
0x9e8 JUMPDEST
0x9e9 PUSH2 0xa0a
0x9ec SWAP2
0x9ed SWAP1
---
0x9e8: JUMPDEST 
0x9e9: V708 = 0xa0a
---
Entry stack: [V11, 0x1fe, V124, V145, {0x4fc, 0x513}, {0x3, 0x5}, 0x9e4, S1, S0]
Stack pops: 2
Stack additions: [0xa0a, S1, S0]
Exit stack: [V11, 0x1fe, V124, V145, {0x4fc, 0x513}, {0x3, 0x5}, 0x9e4, 0xa0a, S1, S0]

================================

Block 0x9ee
[0x9ee:0x9f6]
---
Predecessors: [0x9e8, 0x9f7]
Successors: [0x9f7, 0xa06]
---
0x9ee JUMPDEST
0x9ef DUP1
0x9f0 DUP3
0x9f1 GT
0x9f2 ISZERO
0x9f3 PUSH2 0xa06
0x9f6 JUMPI
---
0x9ee: JUMPDEST 
0x9f1: V709 = GT S1 S0
0x9f2: V710 = ISZERO V709
0x9f3: V711 = 0xa06
0x9f6: JUMPI 0xa06 V710
---
Entry stack: [V11, 0x1fe, V124, V145, {0x4fc, 0x513}, {0x3, 0x5}, 0x9e4, 0xa0a, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x1fe, V124, V145, {0x4fc, 0x513}, {0x3, 0x5}, 0x9e4, 0xa0a, S1, S0]

================================

Block 0x9f7
[0x9f7:0xa05]
---
Predecessors: [0x9ee]
Successors: [0x9ee]
---
0x9f7 PUSH1 0x0
0x9f9 DUP2
0x9fa PUSH1 0x0
0x9fc SWAP1
0x9fd SSTORE
0x9fe POP
0x9ff PUSH1 0x1
0xa01 ADD
0xa02 PUSH2 0x9ee
0xa05 JUMP
---
0x9f7: V712 = 0x0
0x9fa: V713 = 0x0
0x9fd: S[S0] = 0x0
0x9ff: V714 = 0x1
0xa01: V715 = ADD 0x1 S0
0xa02: V716 = 0x9ee
0xa05: JUMP 0x9ee
---
Entry stack: [V11, 0x1fe, V124, V145, {0x4fc, 0x513}, {0x3, 0x5}, 0x9e4, 0xa0a, S1, S0]
Stack pops: 1
Stack additions: [V715]
Exit stack: [V11, 0x1fe, V124, V145, {0x4fc, 0x513}, {0x3, 0x5}, 0x9e4, 0xa0a, S1, V715]

================================

Block 0xa06
[0xa06:0xa09]
---
Predecessors: [0x9ee]
Successors: [0xa0a]
---
0xa06 JUMPDEST
0xa07 POP
0xa08 SWAP1
0xa09 JUMP
---
0xa06: JUMPDEST 
0xa09: JUMP 0xa0a
---
Entry stack: [V11, 0x1fe, V124, V145, {0x4fc, 0x513}, {0x3, 0x5}, 0x9e4, 0xa0a, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0x1fe, V124, V145, {0x4fc, 0x513}, {0x3, 0x5}, 0x9e4, S1]

================================

Block 0xa0a
[0xa0a:0xa0c]
---
Predecessors: [0xa06]
Successors: [0x9e4]
---
0xa0a JUMPDEST
0xa0b SWAP1
0xa0c JUMP
---
0xa0a: JUMPDEST 
0xa0c: JUMP 0x9e4
---
Entry stack: [V11, 0x1fe, V124, V145, {0x4fc, 0x513}, {0x3, 0x5}, 0x9e4, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0x1fe, V124, V145, {0x4fc, 0x513}, {0x3, 0x5}, S0]

================================

Block 0xa0d
[0xa0d:0xa1e]
---
Predecessors: []
Successors: [0xa1f]
Has unresolved jump.
---
0xa0d STOP
0xa0e LOG1
0xa0f PUSH6 0x627a7a723058
0xa16 SHA3
0xa17 CODECOPY
0xa18 BLOCKHASH
0xa19 DUP2
0xa1a MISSING 0xe5
0xa1b MISSING 0x5d
0xa1c BALANCE
0xa1d STATICCALL
0xa1e JUMPI
---
0xa0d: STOP 
0xa0e: LOG S0 S1 S2
0xa0f: V717 = 0x627a7a723058
0xa16: V718 = SHA3 0x627a7a723058 S3
0xa17: CODECOPY V718 S4 S5
0xa18: V719 = BLOCKHASH S6
0xa1a: MISSING 0xe5
0xa1b: MISSING 0x5d
0xa1c: V720 = BALANCE S0
0xa1d: V721 = STATICCALL V720 S1 S2 S3 S4 S5
0xa1e: JUMPI V721 S6
---
Entry stack: []
Stack pops: 0
Stack additions: [S7, V719, S7]
Exit stack: []

================================

Block 0xa1f
[0xa1f:0xa40]
---
Predecessors: [0xa0d]
Successors: []
---
0xa1f MISSING 0xd5
0xa20 XOR
0xa21 SAR
0xa22 MISSING 0xb2
0xa23 NOT
0xa24 DIFFICULTY
0xa25 ISZERO
0xa26 GASLIMIT
0xa27 PUSH25 0x8bd161ac55eebce58f8518a99b68b60029
---
0xa1f: MISSING 0xd5
0xa20: V722 = XOR S0 S1
0xa21: V723 = SAR V722 S2
0xa22: MISSING 0xb2
0xa23: V724 = NOT S0
0xa24: V725 = DIFFICULTY
0xa25: V726 = ISZERO V725
0xa26: V727 = GASLIMIT
0xa27: V728 = 0x8bd161ac55eebce58f8518a99b68b60029
---
Entry stack: []
Stack pops: 0
Stack additions: [V723, 0x8bd161ac55eebce58f8518a99b68b60029, V727, V726, V724]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0xa9
Exit block: 0x129
Body: 0xa9, 0xb0, 0xb4, 0xbc, 0xe1, 0xea, 0xfc, 0x110, 0x129, 0x3e6, 0x436, 0x43e, 0x451, 0x45f, 0x473, 0x47c

Function 1:
Public function signature: 0x18160ddd
Entry block: 0x137
Exit block: 0x14a
Body: 0x137, 0x13e, 0x142, 0x14a, 0x484

Function 2:
Public function signature: 0x216e3449
Entry block: 0x160
Exit block: 0x1fe
Body: 0x160, 0x167, 0x16b, 0x1fe, 0x48a, 0x4e2, 0x4e6, 0x4fc

Function 3:
Public function signature: 0x27e235e3
Entry block: 0x200
Exit block: 0x237
Body: 0x200, 0x207, 0x20b, 0x237, 0x518

Function 4:
Public function signature: 0x313ce567
Entry block: 0x24d
Exit block: 0x260
Body: 0x24d, 0x254, 0x258, 0x260, 0x530

Function 5:
Public function signature: 0x3bed33ce
Entry block: 0x27c
Exit block: 0x29d
Body: 0x27c, 0x283, 0x287, 0x29d, 0x543, 0x59b, 0x59f, 0x5fd, 0x601

Function 6:
Public function signature: 0x8da5cb5b
Entry block: 0x29f
Exit block: 0x2b2
Body: 0x29f, 0x2a6, 0x2aa, 0x2b2, 0x604

Function 7:
Public function signature: 0x95d89b41
Entry block: 0x2f4
Exit block: 0x374
Body: 0x2f4, 0x2fb, 0x2ff, 0x307, 0x32c, 0x335, 0x347, 0x35b, 0x374, 0x62a, 0x67a, 0x682, 0x695, 0x6a3, 0x6b7, 0x6c0

Function 8:
Public function signature: 0xa6f2ae3a
Entry block: 0x382
Exit block: 0x38a
Body: 0x382, 0x38a, 0x6c8

Function 9:
Public function signature: 0xa9059cbb
Entry block: 0x38c
Exit block: 0x3cc
Body: 0x38c, 0x393, 0x397, 0x3cc, 0x7d4, 0x80d, 0x811, 0x85b, 0x85f

Function 10:
Public fallback function
Entry block: 0xa4
Exit block: 0xa4
Body: 0xa4

Function 11:
Private function
Entry block: 0x968
Exit block: 0x9e4
Body: 0x968, 0x999, 0x9a9, 0x9b8, 0x9bb, 0x9c4, 0x9d6, 0x9d7, 0x9e4, 0x9e8, 0x9ee, 0x9f7, 0xa06, 0xa0a

