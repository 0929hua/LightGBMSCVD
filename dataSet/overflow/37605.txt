Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x60]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x60
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x60
0xa: JUMPI 0x60 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x2c8]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x29dcb0cf
0x3a EQ
0x3b PUSH2 0x2c8
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x29dcb0cf
0x3a: V12 = EQ 0x29dcb0cf V10
0x3b: V13 = 0x2c8
0x3e: JUMPI 0x2c8 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x2f1]
---
0x3f DUP1
0x40 PUSH4 0x3b1bebd1
0x45 EQ
0x46 PUSH2 0x2f1
0x49 JUMPI
---
0x40: V14 = 0x3b1bebd1
0x45: V15 = EQ 0x3b1bebd1 V10
0x46: V16 = 0x2f1
0x49: JUMPI 0x2f1 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x346]
---
0x4a DUP1
0x4b PUSH4 0xb6f3d256
0x50 EQ
0x51 PUSH2 0x346
0x54 JUMPI
---
0x4b: V17 = 0xb6f3d256
0x50: V18 = EQ 0xb6f3d256 V10
0x51: V19 = 0x346
0x54: JUMPI 0x346 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x36f]
---
0x55 DUP1
0x56 PUSH4 0xd57bde79
0x5b EQ
0x5c PUSH2 0x36f
0x5f JUMPI
---
0x56: V20 = 0xd57bde79
0x5b: V21 = EQ 0xd57bde79 V10
0x5c: V22 = 0x36f
0x5f: JUMPI 0x36f V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x60]
---
Predecessors: [0x0, 0x55]
Successors: [0x61]
---
0x60 JUMPDEST
---
0x60: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x61
[0x61:0x76]
---
Predecessors: [0x60]
Successors: [0x77, 0x78]
---
0x61 JUMPDEST
0x62 PUSH1 0x0
0x64 DUP1
0x65 PUSH1 0x0
0x67 PUSH7 0x71afd498d0000
0x6f CALLVALUE
0x70 DUP2
0x71 ISZERO
0x72 ISZERO
0x73 PUSH2 0x78
0x76 JUMPI
---
0x61: JUMPDEST 
0x62: V23 = 0x0
0x65: V24 = 0x0
0x67: V25 = 0x71afd498d0000
0x6f: V26 = CALLVALUE
0x71: V27 = ISZERO 0x71afd498d0000
0x72: V28 = ISZERO 0x0
0x73: V29 = 0x78
0x76: JUMPI 0x78 0x1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x71afd498d0000, V26]
Exit stack: [V10, 0x0, 0x0, 0x0, 0x71afd498d0000, V26]

================================

Block 0x77
[0x77:0x77]
---
Predecessors: [0x61]
Successors: []
---
0x77 INVALID
---
0x77: INVALID 
---
Entry stack: [V10, 0x0, 0x0, 0x0, 0x71afd498d0000, V26]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x0, 0x0, 0x0, 0x71afd498d0000, V26]

================================

Block 0x78
[0x78:0x80]
---
Predecessors: [0x61]
Successors: [0x81, 0x85]
---
0x78 JUMPDEST
0x79 MOD
0x7a EQ
0x7b ISZERO
0x7c ISZERO
0x7d PUSH2 0x85
0x80 JUMPI
---
0x78: JUMPDEST 
0x79: V30 = MOD V26 0x71afd498d0000
0x7a: V31 = EQ V30 0x0
0x7b: V32 = ISZERO V31
0x7c: V33 = ISZERO V32
0x7d: V34 = 0x85
0x80: JUMPI 0x85 V33
---
Entry stack: [V10, 0x0, 0x0, 0x0, 0x71afd498d0000, V26]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x0, 0x0]

================================

Block 0x81
[0x81:0x84]
---
Predecessors: [0x78]
Successors: []
---
0x81 PUSH1 0x0
0x83 DUP1
0x84 REVERT
---
0x81: V35 = 0x0
0x84: REVERT 0x0 0x0
---
Entry stack: [V10, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x0, 0x0]

================================

Block 0x85
[0x85:0x8f]
---
Predecessors: [0x78]
Successors: [0x90, 0xb9]
---
0x85 JUMPDEST
0x86 PUSH1 0x2
0x88 SLOAD
0x89 CALLVALUE
0x8a GT
0x8b ISZERO
0x8c PUSH2 0xb9
0x8f JUMPI
---
0x85: JUMPDEST 
0x86: V36 = 0x2
0x88: V37 = S[0x2]
0x89: V38 = CALLVALUE
0x8a: V39 = GT V38 V37
0x8b: V40 = ISZERO V39
0x8c: V41 = 0xb9
0x8f: JUMPI 0xb9 V40
---
Entry stack: [V10, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x0, 0x0]

================================

Block 0x90
[0x90:0xb3]
---
Predecessors: [0x85]
Successors: [0xb4, 0xb8]
---
0x90 PUSH1 0x1
0x92 SLOAD
0x93 CALLVALUE
0x94 ADDRESS
0x95 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaa AND
0xab BALANCE
0xac SUB
0xad LT
0xae ISZERO
0xaf ISZERO
0xb0 PUSH2 0xb8
0xb3 JUMPI
---
0x90: V42 = 0x1
0x92: V43 = S[0x1]
0x93: V44 = CALLVALUE
0x94: V45 = ADDRESS
0x95: V46 = 0xffffffffffffffffffffffffffffffffffffffff
0xaa: V47 = AND 0xffffffffffffffffffffffffffffffffffffffff V45
0xab: V48 = BALANCE V47
0xac: V49 = SUB V48 V44
0xad: V50 = LT V49 V43
0xae: V51 = ISZERO V50
0xaf: V52 = ISZERO V51
0xb0: V53 = 0xb8
0xb3: JUMPI 0xb8 V52
---
Entry stack: [V10, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x0, 0x0]

================================

Block 0xb4
[0xb4:0xb7]
---
Predecessors: [0x90]
Successors: []
---
0xb4 PUSH1 0x0
0xb6 DUP1
0xb7 REVERT
---
0xb4: V54 = 0x0
0xb7: REVERT 0x0 0x0
---
Entry stack: [V10, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x0, 0x0]

================================

Block 0xb8
[0xb8:0xb8]
---
Predecessors: [0x90]
Successors: [0xb9]
---
0xb8 JUMPDEST
---
0xb8: JUMPDEST 
---
Entry stack: [V10, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x0, 0x0]

================================

Block 0xb9
[0xb9:0xc3]
---
Predecessors: [0x85, 0xb8]
Successors: [0xc4, 0xcb]
---
0xb9 JUMPDEST
0xba PUSH1 0x3
0xbc SLOAD
0xbd CALLVALUE
0xbe LT
0xbf ISZERO
0xc0 PUSH2 0xcb
0xc3 JUMPI
---
0xb9: JUMPDEST 
0xba: V55 = 0x3
0xbc: V56 = S[0x3]
0xbd: V57 = CALLVALUE
0xbe: V58 = LT V57 V56
0xbf: V59 = ISZERO V58
0xc0: V60 = 0xcb
0xc3: JUMPI 0xcb V59
---
Entry stack: [V10, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x0, 0x0]

================================

Block 0xc4
[0xc4:0xca]
---
Predecessors: [0xb9]
Successors: [0xcb]
---
0xc4 CALLVALUE
0xc5 PUSH1 0x3
0xc7 DUP2
0xc8 SWAP1
0xc9 SSTORE
0xca POP
---
0xc4: V61 = CALLVALUE
0xc5: V62 = 0x3
0xc9: S[0x3] = V61
---
Entry stack: [V10, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x0, 0x0]

================================

Block 0xcb
[0xcb:0xd5]
---
Predecessors: [0xb9, 0xc4]
Successors: [0xd6, 0xdd]
---
0xcb JUMPDEST
0xcc PUSH1 0x2
0xce SLOAD
0xcf CALLVALUE
0xd0 GT
0xd1 ISZERO
0xd2 PUSH2 0xdd
0xd5 JUMPI
---
0xcb: JUMPDEST 
0xcc: V63 = 0x2
0xce: V64 = S[0x2]
0xcf: V65 = CALLVALUE
0xd0: V66 = GT V65 V64
0xd1: V67 = ISZERO V66
0xd2: V68 = 0xdd
0xd5: JUMPI 0xdd V67
---
Entry stack: [V10, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x0, 0x0]

================================

Block 0xd6
[0xd6:0xdc]
---
Predecessors: [0xcb]
Successors: [0xdd]
---
0xd6 CALLVALUE
0xd7 PUSH1 0x2
0xd9 DUP2
0xda SWAP1
0xdb SSTORE
0xdc POP
---
0xd6: V69 = CALLVALUE
0xd7: V70 = 0x2
0xdb: S[0x2] = V69
---
Entry stack: [V10, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x0, 0x0]

================================

Block 0xdd
[0xdd:0x150]
---
Predecessors: [0xcb, 0xd6]
Successors: [0x151, 0x2c3]
---
0xdd JUMPDEST
0xde CALLER
0xdf PUSH1 0x0
0xe1 DUP1
0xe2 CALLVALUE
0xe3 DUP2
0xe4 MSTORE
0xe5 PUSH1 0x20
0xe7 ADD
0xe8 SWAP1
0xe9 DUP2
0xea MSTORE
0xeb PUSH1 0x20
0xed ADD
0xee PUSH1 0x0
0xf0 SHA3
0xf1 PUSH1 0x0
0xf3 PUSH2 0x100
0xf6 EXP
0xf7 DUP2
0xf8 SLOAD
0xf9 DUP2
0xfa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10f MUL
0x110 NOT
0x111 AND
0x112 SWAP1
0x113 DUP4
0x114 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x129 AND
0x12a MUL
0x12b OR
0x12c SWAP1
0x12d SSTORE
0x12e POP
0x12f PUSH1 0x1
0x131 SLOAD
0x132 ADDRESS
0x133 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x148 AND
0x149 BALANCE
0x14a LT
0x14b ISZERO
0x14c ISZERO
0x14d PUSH2 0x2c3
0x150 JUMPI
---
0xdd: JUMPDEST 
0xde: V71 = CALLER
0xdf: V72 = 0x0
0xe2: V73 = CALLVALUE
0xe4: M[0x0] = V73
0xe5: V74 = 0x20
0xe7: V75 = ADD 0x20 0x0
0xea: M[0x20] = 0x0
0xeb: V76 = 0x20
0xed: V77 = ADD 0x20 0x20
0xee: V78 = 0x0
0xf0: V79 = SHA3 0x0 0x40
0xf1: V80 = 0x0
0xf3: V81 = 0x100
0xf6: V82 = EXP 0x100 0x0
0xf8: V83 = S[V79]
0xfa: V84 = 0xffffffffffffffffffffffffffffffffffffffff
0x10f: V85 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x110: V86 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x111: V87 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V83
0x114: V88 = 0xffffffffffffffffffffffffffffffffffffffff
0x129: V89 = AND 0xffffffffffffffffffffffffffffffffffffffff V71
0x12a: V90 = MUL V89 0x1
0x12b: V91 = OR V90 V87
0x12d: S[V79] = V91
0x12f: V92 = 0x1
0x131: V93 = S[0x1]
0x132: V94 = ADDRESS
0x133: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x148: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x149: V97 = BALANCE V96
0x14a: V98 = LT V97 V93
0x14b: V99 = ISZERO V98
0x14c: V100 = ISZERO V99
0x14d: V101 = 0x2c3
0x150: JUMPI 0x2c3 V100
---
Entry stack: [V10, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x0, 0x0]

================================

Block 0x151
[0x151:0x160]
---
Predecessors: [0xdd]
Successors: [0x161, 0x162]
---
0x151 PUSH1 0x2
0x153 PUSH1 0x3
0x155 SLOAD
0x156 PUSH1 0x2
0x158 SLOAD
0x159 ADD
0x15a DUP2
0x15b ISZERO
0x15c ISZERO
0x15d PUSH2 0x162
0x160 JUMPI
---
0x151: V102 = 0x2
0x153: V103 = 0x3
0x155: V104 = S[0x3]
0x156: V105 = 0x2
0x158: V106 = S[0x2]
0x159: V107 = ADD V106 V104
0x15b: V108 = ISZERO 0x2
0x15c: V109 = ISZERO 0x0
0x15d: V110 = 0x162
0x160: JUMPI 0x162 0x1
---
Entry stack: [V10, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x2, V107]
Exit stack: [V10, 0x0, 0x0, 0x2, V107]

================================

Block 0x161
[0x161:0x161]
---
Predecessors: [0x151]
Successors: []
---
0x161 INVALID
---
0x161: INVALID 
---
Entry stack: [V10, 0x0, 0x0, 0x2, V107]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x0, 0x0, 0x2, V107]

================================

Block 0x162
[0x162:0x1b9]
---
Predecessors: [0x151]
Successors: [0x1ba, 0x1f1]
---
0x162 JUMPDEST
0x163 DIV
0x164 SWAP2
0x165 POP
0x166 PUSH1 0x0
0x168 DUP1
0x169 DUP4
0x16a DUP2
0x16b MSTORE
0x16c PUSH1 0x20
0x16e ADD
0x16f SWAP1
0x170 DUP2
0x171 MSTORE
0x172 PUSH1 0x20
0x174 ADD
0x175 PUSH1 0x0
0x177 SHA3
0x178 PUSH1 0x0
0x17a SWAP1
0x17b SLOAD
0x17c SWAP1
0x17d PUSH2 0x100
0x180 EXP
0x181 SWAP1
0x182 DIV
0x183 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x198 AND
0x199 SWAP1
0x19a POP
0x19b PUSH1 0x0
0x19d DUP2
0x19e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b3 AND
0x1b4 EQ
0x1b5 ISZERO
0x1b6 PUSH2 0x1f1
0x1b9 JUMPI
---
0x162: JUMPDEST 
0x163: V111 = DIV V107 0x2
0x166: V112 = 0x0
0x16b: M[0x0] = V111
0x16c: V113 = 0x20
0x16e: V114 = ADD 0x20 0x0
0x171: M[0x20] = 0x0
0x172: V115 = 0x20
0x174: V116 = ADD 0x20 0x20
0x175: V117 = 0x0
0x177: V118 = SHA3 0x0 0x40
0x178: V119 = 0x0
0x17b: V120 = S[V118]
0x17d: V121 = 0x100
0x180: V122 = EXP 0x100 0x0
0x182: V123 = DIV V120 0x1
0x183: V124 = 0xffffffffffffffffffffffffffffffffffffffff
0x198: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V123
0x19b: V126 = 0x0
0x19e: V127 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b3: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x1b4: V129 = EQ V128 0x0
0x1b5: V130 = ISZERO V129
0x1b6: V131 = 0x1f1
0x1b9: JUMPI 0x1f1 V130
---
Entry stack: [V10, 0x0, 0x0, 0x2, V107]
Stack pops: 4
Stack additions: [V111, V125]
Exit stack: [V10, V111, V125]

================================

Block 0x1ba
[0x1ba:0x1f0]
---
Predecessors: [0x162]
Successors: [0x1f1]
---
0x1ba PUSH1 0x0
0x1bc DUP1
0x1bd PUSH1 0x2
0x1bf SLOAD
0x1c0 DUP2
0x1c1 MSTORE
0x1c2 PUSH1 0x20
0x1c4 ADD
0x1c5 SWAP1
0x1c6 DUP2
0x1c7 MSTORE
0x1c8 PUSH1 0x20
0x1ca ADD
0x1cb PUSH1 0x0
0x1cd SHA3
0x1ce PUSH1 0x0
0x1d0 SWAP1
0x1d1 SLOAD
0x1d2 SWAP1
0x1d3 PUSH2 0x100
0x1d6 EXP
0x1d7 SWAP1
0x1d8 DIV
0x1d9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ee AND
0x1ef SWAP1
0x1f0 POP
---
0x1ba: V132 = 0x0
0x1bd: V133 = 0x2
0x1bf: V134 = S[0x2]
0x1c1: M[0x0] = V134
0x1c2: V135 = 0x20
0x1c4: V136 = ADD 0x20 0x0
0x1c7: M[0x20] = 0x0
0x1c8: V137 = 0x20
0x1ca: V138 = ADD 0x20 0x20
0x1cb: V139 = 0x0
0x1cd: V140 = SHA3 0x0 0x40
0x1ce: V141 = 0x0
0x1d1: V142 = S[V140]
0x1d3: V143 = 0x100
0x1d6: V144 = EXP 0x100 0x0
0x1d8: V145 = DIV V142 0x1
0x1d9: V146 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ee: V147 = AND 0xffffffffffffffffffffffffffffffffffffffff V145
---
Entry stack: [V10, V111, V125]
Stack pops: 1
Stack additions: [V147]
Exit stack: [V10, V111, V147]

================================

Block 0x1f1
[0x1f1:0x261]
---
Predecessors: [0x162, 0x1ba]
Successors: [0x262, 0x266]
---
0x1f1 JUMPDEST
0x1f2 PUSH1 0x0
0x1f4 PUSH1 0x2
0x1f6 DUP2
0x1f7 SWAP1
0x1f8 SSTORE
0x1f9 POP
0x1fa PUSH1 0x2
0x1fc PUSH1 0x1
0x1fe SLOAD
0x1ff MUL
0x200 PUSH1 0x3
0x202 DUP2
0x203 SWAP1
0x204 SSTORE
0x205 POP
0x206 DUP1
0x207 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21c AND
0x21d PUSH2 0x8fc
0x220 PUSH8 0x16345785d8a0000
0x229 ADDRESS
0x22a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x23f AND
0x240 BALANCE
0x241 SUB
0x242 SWAP1
0x243 DUP2
0x244 ISZERO
0x245 MUL
0x246 SWAP1
0x247 PUSH1 0x40
0x249 MLOAD
0x24a PUSH1 0x0
0x24c PUSH1 0x40
0x24e MLOAD
0x24f DUP1
0x250 DUP4
0x251 SUB
0x252 DUP2
0x253 DUP6
0x254 DUP9
0x255 DUP9
0x256 CALL
0x257 SWAP4
0x258 POP
0x259 POP
0x25a POP
0x25b POP
0x25c ISZERO
0x25d ISZERO
0x25e PUSH2 0x266
0x261 JUMPI
---
0x1f1: JUMPDEST 
0x1f2: V148 = 0x0
0x1f4: V149 = 0x2
0x1f8: S[0x2] = 0x0
0x1fa: V150 = 0x2
0x1fc: V151 = 0x1
0x1fe: V152 = S[0x1]
0x1ff: V153 = MUL V152 0x2
0x200: V154 = 0x3
0x204: S[0x3] = V153
0x207: V155 = 0xffffffffffffffffffffffffffffffffffffffff
0x21c: V156 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x21d: V157 = 0x8fc
0x220: V158 = 0x16345785d8a0000
0x229: V159 = ADDRESS
0x22a: V160 = 0xffffffffffffffffffffffffffffffffffffffff
0x23f: V161 = AND 0xffffffffffffffffffffffffffffffffffffffff V159
0x240: V162 = BALANCE V161
0x241: V163 = SUB V162 0x16345785d8a0000
0x244: V164 = ISZERO V163
0x245: V165 = MUL V164 0x8fc
0x247: V166 = 0x40
0x249: V167 = M[0x40]
0x24a: V168 = 0x0
0x24c: V169 = 0x40
0x24e: V170 = M[0x40]
0x251: V171 = SUB V167 V170
0x256: V172 = CALL V165 V156 V163 V170 V171 V170 0x0
0x25c: V173 = ISZERO V172
0x25d: V174 = ISZERO V173
0x25e: V175 = 0x266
0x261: JUMPI 0x266 V174
---
Entry stack: [V10, V111, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, V111, S0]

================================

Block 0x262
[0x262:0x265]
---
Predecessors: [0x1f1]
Successors: []
---
0x262 PUSH1 0x0
0x264 DUP1
0x265 REVERT
---
0x262: V176 = 0x0
0x265: REVERT 0x0 0x0
---
Entry stack: [V10, V111, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V111, S0]

================================

Block 0x266
[0x266:0x2bd]
---
Predecessors: [0x1f1]
Successors: [0x2be, 0x2c2]
---
0x266 JUMPDEST
0x267 PUSH20 0x6a0d0ebf1e532840baf224e1bd6a1d4489d5d78d
0x27c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x291 AND
0x292 PUSH2 0x8fc
0x295 PUSH8 0x16345785d8a0000
0x29e SWAP1
0x29f DUP2
0x2a0 ISZERO
0x2a1 MUL
0x2a2 SWAP1
0x2a3 PUSH1 0x40
0x2a5 MLOAD
0x2a6 PUSH1 0x0
0x2a8 PUSH1 0x40
0x2aa MLOAD
0x2ab DUP1
0x2ac DUP4
0x2ad SUB
0x2ae DUP2
0x2af DUP6
0x2b0 DUP9
0x2b1 DUP9
0x2b2 CALL
0x2b3 SWAP4
0x2b4 POP
0x2b5 POP
0x2b6 POP
0x2b7 POP
0x2b8 ISZERO
0x2b9 ISZERO
0x2ba PUSH2 0x2c2
0x2bd JUMPI
---
0x266: JUMPDEST 
0x267: V177 = 0x6a0d0ebf1e532840baf224e1bd6a1d4489d5d78d
0x27c: V178 = 0xffffffffffffffffffffffffffffffffffffffff
0x291: V179 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x6a0d0ebf1e532840baf224e1bd6a1d4489d5d78d
0x292: V180 = 0x8fc
0x295: V181 = 0x16345785d8a0000
0x2a0: V182 = ISZERO 0x16345785d8a0000
0x2a1: V183 = MUL 0x0 0x8fc
0x2a3: V184 = 0x40
0x2a5: V185 = M[0x40]
0x2a6: V186 = 0x0
0x2a8: V187 = 0x40
0x2aa: V188 = M[0x40]
0x2ad: V189 = SUB V185 V188
0x2b2: V190 = CALL 0x0 0x6a0d0ebf1e532840baf224e1bd6a1d4489d5d78d 0x16345785d8a0000 V188 V189 V188 0x0
0x2b8: V191 = ISZERO V190
0x2b9: V192 = ISZERO V191
0x2ba: V193 = 0x2c2
0x2bd: JUMPI 0x2c2 V192
---
Entry stack: [V10, V111, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V111, S0]

================================

Block 0x2be
[0x2be:0x2c1]
---
Predecessors: [0x266]
Successors: []
---
0x2be PUSH1 0x0
0x2c0 DUP1
0x2c1 REVERT
---
0x2be: V194 = 0x0
0x2c1: REVERT 0x0 0x0
---
Entry stack: [V10, V111, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V111, S0]

================================

Block 0x2c2
[0x2c2:0x2c2]
---
Predecessors: [0x266]
Successors: [0x2c3]
---
0x2c2 JUMPDEST
---
0x2c2: JUMPDEST 
---
Entry stack: [V10, V111, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, V111, S0]

================================

Block 0x2c3
[0x2c3:0x2c3]
---
Predecessors: [0xdd, 0x2c2]
Successors: [0x2c4]
---
0x2c3 JUMPDEST
---
0x2c3: JUMPDEST 
---
Entry stack: [V10, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, S0]

================================

Block 0x2c4
[0x2c4:0x2c7]
---
Predecessors: [0x2c3]
Successors: []
---
0x2c4 JUMPDEST
0x2c5 POP
0x2c6 POP
0x2c7 STOP
---
0x2c4: JUMPDEST 
0x2c7: STOP 
---
Entry stack: [V10, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x2c8
[0x2c8:0x2ce]
---
Predecessors: [0xb]
Successors: [0x2cf, 0x2d3]
---
0x2c8 JUMPDEST
0x2c9 CALLVALUE
0x2ca ISZERO
0x2cb PUSH2 0x2d3
0x2ce JUMPI
---
0x2c8: JUMPDEST 
0x2c9: V195 = CALLVALUE
0x2ca: V196 = ISZERO V195
0x2cb: V197 = 0x2d3
0x2ce: JUMPI 0x2d3 V196
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2cf
[0x2cf:0x2d2]
---
Predecessors: [0x2c8]
Successors: []
---
0x2cf PUSH1 0x0
0x2d1 DUP1
0x2d2 REVERT
---
0x2cf: V198 = 0x0
0x2d2: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2d3
[0x2d3:0x2da]
---
Predecessors: [0x2c8]
Successors: [0x398]
---
0x2d3 JUMPDEST
0x2d4 PUSH2 0x2db
0x2d7 PUSH2 0x398
0x2da JUMP
---
0x2d3: JUMPDEST 
0x2d4: V199 = 0x2db
0x2d7: V200 = 0x398
0x2da: JUMP 0x398
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2db]
Exit stack: [V10, 0x2db]

================================

Block 0x2db
[0x2db:0x2f0]
---
Predecessors: [0x398]
Successors: []
---
0x2db JUMPDEST
0x2dc PUSH1 0x40
0x2de MLOAD
0x2df DUP1
0x2e0 DUP3
0x2e1 DUP2
0x2e2 MSTORE
0x2e3 PUSH1 0x20
0x2e5 ADD
0x2e6 SWAP2
0x2e7 POP
0x2e8 POP
0x2e9 PUSH1 0x40
0x2eb MLOAD
0x2ec DUP1
0x2ed SWAP2
0x2ee SUB
0x2ef SWAP1
0x2f0 RETURN
---
0x2db: JUMPDEST 
0x2dc: V201 = 0x40
0x2de: V202 = M[0x40]
0x2e2: M[V202] = V252
0x2e3: V203 = 0x20
0x2e5: V204 = ADD 0x20 V202
0x2e9: V205 = 0x40
0x2eb: V206 = M[0x40]
0x2ee: V207 = SUB V204 V206
0x2f0: RETURN V206 V207
---
Entry stack: [V10, 0x2db, V252]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x2db]

================================

Block 0x2f1
[0x2f1:0x2f7]
---
Predecessors: [0x3f]
Successors: [0x2f8, 0x2fc]
---
0x2f1 JUMPDEST
0x2f2 CALLVALUE
0x2f3 ISZERO
0x2f4 PUSH2 0x2fc
0x2f7 JUMPI
---
0x2f1: JUMPDEST 
0x2f2: V208 = CALLVALUE
0x2f3: V209 = ISZERO V208
0x2f4: V210 = 0x2fc
0x2f7: JUMPI 0x2fc V209
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2f8
[0x2f8:0x2fb]
---
Predecessors: [0x2f1]
Successors: []
---
0x2f8 PUSH1 0x0
0x2fa DUP1
0x2fb REVERT
---
0x2f8: V211 = 0x0
0x2fb: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2fc
[0x2fc:0x303]
---
Predecessors: [0x2f1]
Successors: [0x39e]
---
0x2fc JUMPDEST
0x2fd PUSH2 0x304
0x300 PUSH2 0x39e
0x303 JUMP
---
0x2fc: JUMPDEST 
0x2fd: V212 = 0x304
0x300: V213 = 0x39e
0x303: JUMP 0x39e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x304]
Exit stack: [V10, 0x304]

================================

Block 0x304
[0x304:0x345]
---
Predecessors: [0x39e]
Successors: []
---
0x304 JUMPDEST
0x305 PUSH1 0x40
0x307 MLOAD
0x308 DUP1
0x309 DUP3
0x30a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x31f AND
0x320 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x335 AND
0x336 DUP2
0x337 MSTORE
0x338 PUSH1 0x20
0x33a ADD
0x33b SWAP2
0x33c POP
0x33d POP
0x33e PUSH1 0x40
0x340 MLOAD
0x341 DUP1
0x342 SWAP2
0x343 SUB
0x344 SWAP1
0x345 RETURN
---
0x304: JUMPDEST 
0x305: V214 = 0x40
0x307: V215 = M[0x40]
0x30a: V216 = 0xffffffffffffffffffffffffffffffffffffffff
0x31f: V217 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x6a0d0ebf1e532840baf224e1bd6a1d4489d5d78d
0x320: V218 = 0xffffffffffffffffffffffffffffffffffffffff
0x335: V219 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x6a0d0ebf1e532840baf224e1bd6a1d4489d5d78d
0x337: M[V215] = 0x6a0d0ebf1e532840baf224e1bd6a1d4489d5d78d
0x338: V220 = 0x20
0x33a: V221 = ADD 0x20 V215
0x33e: V222 = 0x40
0x340: V223 = M[0x40]
0x343: V224 = SUB V221 V223
0x345: RETURN V223 V224
---
Entry stack: [V10, 0x304, 0x6a0d0ebf1e532840baf224e1bd6a1d4489d5d78d]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x304]

================================

Block 0x346
[0x346:0x34c]
---
Predecessors: [0x4a]
Successors: [0x34d, 0x351]
---
0x346 JUMPDEST
0x347 CALLVALUE
0x348 ISZERO
0x349 PUSH2 0x351
0x34c JUMPI
---
0x346: JUMPDEST 
0x347: V225 = CALLVALUE
0x348: V226 = ISZERO V225
0x349: V227 = 0x351
0x34c: JUMPI 0x351 V226
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x34d
[0x34d:0x350]
---
Predecessors: [0x346]
Successors: []
---
0x34d PUSH1 0x0
0x34f DUP1
0x350 REVERT
---
0x34d: V228 = 0x0
0x350: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x351
[0x351:0x358]
---
Predecessors: [0x346]
Successors: [0x3b6]
---
0x351 JUMPDEST
0x352 PUSH2 0x359
0x355 PUSH2 0x3b6
0x358 JUMP
---
0x351: JUMPDEST 
0x352: V229 = 0x359
0x355: V230 = 0x3b6
0x358: JUMP 0x3b6
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x359]
Exit stack: [V10, 0x359]

================================

Block 0x359
[0x359:0x36e]
---
Predecessors: [0x3b6]
Successors: []
---
0x359 JUMPDEST
0x35a PUSH1 0x40
0x35c MLOAD
0x35d DUP1
0x35e DUP3
0x35f DUP2
0x360 MSTORE
0x361 PUSH1 0x20
0x363 ADD
0x364 SWAP2
0x365 POP
0x366 POP
0x367 PUSH1 0x40
0x369 MLOAD
0x36a DUP1
0x36b SWAP2
0x36c SUB
0x36d SWAP1
0x36e RETURN
---
0x359: JUMPDEST 
0x35a: V231 = 0x40
0x35c: V232 = M[0x40]
0x360: M[V232] = V255
0x361: V233 = 0x20
0x363: V234 = ADD 0x20 V232
0x367: V235 = 0x40
0x369: V236 = M[0x40]
0x36c: V237 = SUB V234 V236
0x36e: RETURN V236 V237
---
Entry stack: [V10, 0x359, V255]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x359]

================================

Block 0x36f
[0x36f:0x375]
---
Predecessors: [0x55]
Successors: [0x376, 0x37a]
---
0x36f JUMPDEST
0x370 CALLVALUE
0x371 ISZERO
0x372 PUSH2 0x37a
0x375 JUMPI
---
0x36f: JUMPDEST 
0x370: V238 = CALLVALUE
0x371: V239 = ISZERO V238
0x372: V240 = 0x37a
0x375: JUMPI 0x37a V239
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x376
[0x376:0x379]
---
Predecessors: [0x36f]
Successors: []
---
0x376 PUSH1 0x0
0x378 DUP1
0x379 REVERT
---
0x376: V241 = 0x0
0x379: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x37a
[0x37a:0x381]
---
Predecessors: [0x36f]
Successors: [0x3bc]
---
0x37a JUMPDEST
0x37b PUSH2 0x382
0x37e PUSH2 0x3bc
0x381 JUMP
---
0x37a: JUMPDEST 
0x37b: V242 = 0x382
0x37e: V243 = 0x3bc
0x381: JUMP 0x3bc
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x382]
Exit stack: [V10, 0x382]

================================

Block 0x382
[0x382:0x397]
---
Predecessors: [0x3bc]
Successors: []
---
0x382 JUMPDEST
0x383 PUSH1 0x40
0x385 MLOAD
0x386 DUP1
0x387 DUP3
0x388 DUP2
0x389 MSTORE
0x38a PUSH1 0x20
0x38c ADD
0x38d SWAP2
0x38e POP
0x38f POP
0x390 PUSH1 0x40
0x392 MLOAD
0x393 DUP1
0x394 SWAP2
0x395 SUB
0x396 SWAP1
0x397 RETURN
---
0x382: JUMPDEST 
0x383: V244 = 0x40
0x385: V245 = M[0x40]
0x389: M[V245] = V257
0x38a: V246 = 0x20
0x38c: V247 = ADD 0x20 V245
0x390: V248 = 0x40
0x392: V249 = M[0x40]
0x395: V250 = SUB V247 V249
0x397: RETURN V249 V250
---
Entry stack: [V10, 0x382, V257]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x382]

================================

Block 0x398
[0x398:0x39d]
---
Predecessors: [0x2d3]
Successors: [0x2db]
---
0x398 JUMPDEST
0x399 PUSH1 0x1
0x39b SLOAD
0x39c DUP2
0x39d JUMP
---
0x398: JUMPDEST 
0x399: V251 = 0x1
0x39b: V252 = S[0x1]
0x39d: JUMP 0x2db
---
Entry stack: [V10, 0x2db]
Stack pops: 1
Stack additions: [S0, V252]
Exit stack: [V10, 0x2db, V252]

================================

Block 0x39e
[0x39e:0x3b5]
---
Predecessors: [0x2fc]
Successors: [0x304]
---
0x39e JUMPDEST
0x39f PUSH20 0x6a0d0ebf1e532840baf224e1bd6a1d4489d5d78d
0x3b4 DUP2
0x3b5 JUMP
---
0x39e: JUMPDEST 
0x39f: V253 = 0x6a0d0ebf1e532840baf224e1bd6a1d4489d5d78d
0x3b5: JUMP 0x304
---
Entry stack: [V10, 0x304]
Stack pops: 1
Stack additions: [S0, 0x6a0d0ebf1e532840baf224e1bd6a1d4489d5d78d]
Exit stack: [V10, 0x304, 0x6a0d0ebf1e532840baf224e1bd6a1d4489d5d78d]

================================

Block 0x3b6
[0x3b6:0x3bb]
---
Predecessors: [0x351]
Successors: [0x359]
---
0x3b6 JUMPDEST
0x3b7 PUSH1 0x3
0x3b9 SLOAD
0x3ba DUP2
0x3bb JUMP
---
0x3b6: JUMPDEST 
0x3b7: V254 = 0x3
0x3b9: V255 = S[0x3]
0x3bb: JUMP 0x359
---
Entry stack: [V10, 0x359]
Stack pops: 1
Stack additions: [S0, V255]
Exit stack: [V10, 0x359, V255]

================================

Block 0x3bc
[0x3bc:0x3c1]
---
Predecessors: [0x37a]
Successors: [0x382]
---
0x3bc JUMPDEST
0x3bd PUSH1 0x2
0x3bf SLOAD
0x3c0 DUP2
0x3c1 JUMP
---
0x3bc: JUMPDEST 
0x3bd: V256 = 0x2
0x3bf: V257 = S[0x2]
0x3c1: JUMP 0x382
---
Entry stack: [V10, 0x382]
Stack pops: 1
Stack additions: [S0, V257]
Exit stack: [V10, 0x382, V257]

================================

Block 0x3c2
[0x3c2:0x3ed]
---
Predecessors: []
Successors: []
---
0x3c2 STOP
0x3c3 LOG1
0x3c4 PUSH6 0x627a7a723058
0x3cb SHA3
0x3cc MISSING 0xea
0x3cd GASPRICE
0x3ce MISSING 0xef
0x3cf LT
0x3d0 MISSING 0xa7
0x3d1 ADD
0x3d2 MISSING 0x5f
0x3d3 CREATE2
0x3d4 PUSH13 0xd3344f0bd1be65d5d111a96c81
0x3e2 POP
0x3e3 EXP
0x3e4 DUP5
0x3e5 MISSING 0xb4
0x3e6 BALANCE
0x3e7 ADDRESS
0x3e8 MISSING 0x4d
0x3e9 MISSING 0xcd
0x3ea JUMPDEST
0x3eb SELFDESTRUCT
0x3ec STOP
0x3ed MISSING 0x29
---
0x3c2: STOP 
0x3c3: LOG S0 S1 S2
0x3c4: V258 = 0x627a7a723058
0x3cb: V259 = SHA3 0x627a7a723058 S3
0x3cc: MISSING 0xea
0x3cd: V260 = GASPRICE
0x3ce: MISSING 0xef
0x3cf: V261 = LT S0 S1
0x3d0: MISSING 0xa7
0x3d1: V262 = ADD S0 S1
0x3d2: MISSING 0x5f
0x3d3: V263 = CREATE2 S0 S1 S2 S3
0x3d4: V264 = 0xd3344f0bd1be65d5d111a96c81
0x3e3: V265 = EXP V263 S4
0x3e5: MISSING 0xb4
0x3e6: V266 = BALANCE S0
0x3e7: V267 = ADDRESS
0x3e8: MISSING 0x4d
0x3e9: MISSING 0xcd
0x3ea: JUMPDEST 
0x3eb: SELFDESTRUCT S0
0x3ec: STOP 
0x3ed: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V259, V260, V261, V262, S8, V265, S5, S6, S7, S8, V267, V266]
Exit stack: []

================================

Function 0:
Public function signature: 0x29dcb0cf
Entry block: 0x2c8
Exit block: 0x2db
Body: 0x2c8, 0x2cf, 0x2d3, 0x2db, 0x398

Function 1:
Public function signature: 0x3b1bebd1
Entry block: 0x2f1
Exit block: 0x304
Body: 0x2f1, 0x2f8, 0x2fc, 0x304, 0x39e

Function 2:
Public function signature: 0xb6f3d256
Entry block: 0x346
Exit block: 0x359
Body: 0x346, 0x34d, 0x351, 0x359, 0x3b6

Function 3:
Public function signature: 0xd57bde79
Entry block: 0x36f
Exit block: 0x382
Body: 0x36f, 0x376, 0x37a, 0x382, 0x3bc

Function 4:
Public fallback function
Entry block: 0x60
Exit block: 0x2be
Body: 0x60, 0x61, 0x77, 0x78, 0x81, 0x85, 0x90, 0xb4, 0xb8, 0xb9, 0xc4, 0xcb, 0xd6, 0xdd, 0x151, 0x161, 0x162, 0x1ba, 0x1f1, 0x262, 0x266, 0x2be, 0x2c2, 0x2c3, 0x2c4

