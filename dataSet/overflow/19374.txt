Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x4a]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x4a
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x4a
0xa: JUMPI 0x4a V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x57]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x1049334f
0x3a EQ
0x3b PUSH2 0x57
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x1049334f
0x3a: V12 = EQ 0x1049334f V10
0x3b: V13 = 0x57
0x3e: JUMPI 0x57 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0xc3]
---
0x3f DUP1
0x40 PUSH4 0xcac7fc71
0x45 EQ
0x46 PUSH2 0xc3
0x49 JUMPI
---
0x40: V14 = 0xcac7fc71
0x45: V15 = EQ 0xcac7fc71 V10
0x46: V16 = 0xc3
0x49: JUMPI 0xc3 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x4d]
---
Predecessors: [0x0, 0x3f]
Successors: [0x4e]
---
0x4a JUMPDEST
0x4b PUSH2 0x55
---
0x4a: JUMPDEST 
0x4b: V17 = 0x55
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x55]
Exit stack: [V10, 0x55]

================================

Block 0x4e
[0x4e:0x52]
---
Predecessors: [0x4a]
Successors: []
---
0x4e JUMPDEST
0x4f PUSH1 0x0
0x51 DUP1
0x52 REVERT
---
0x4e: JUMPDEST 
0x4f: V18 = 0x0
0x52: REVERT 0x0 0x0
---
Entry stack: [V10, 0x55]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x55]

================================

Block 0x53
[0x53:0x56]
---
Predecessors: []
Successors: []
---
0x53 JUMPDEST
0x54 JUMP
0x55 JUMPDEST
0x56 STOP
---
0x53: JUMPDEST 
0x54: JUMP S0
0x55: JUMPDEST 
0x56: STOP 
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x57
[0x57:0x5d]
---
Predecessors: [0xb]
Successors: [0x5e, 0x62]
---
0x57 JUMPDEST
0x58 CALLVALUE
0x59 ISZERO
0x5a PUSH2 0x62
0x5d JUMPI
---
0x57: JUMPDEST 
0x58: V19 = CALLVALUE
0x59: V20 = ISZERO V19
0x5a: V21 = 0x62
0x5d: JUMPI 0x62 V20
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x5e
[0x5e:0x61]
---
Predecessors: [0x57]
Successors: []
---
0x5e PUSH1 0x0
0x60 DUP1
0x61 REVERT
---
0x5e: V22 = 0x0
0x61: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x62
[0x62:0xac]
---
Predecessors: [0x57]
Successors: [0x185]
---
0x62 JUMPDEST
0x63 PUSH2 0xad
0x66 PUSH1 0x4
0x68 DUP1
0x69 DUP1
0x6a CALLDATALOAD
0x6b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x80 AND
0x81 SWAP1
0x82 PUSH1 0x20
0x84 ADD
0x85 SWAP1
0x86 SWAP2
0x87 SWAP1
0x88 DUP1
0x89 CALLDATALOAD
0x8a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9f AND
0xa0 SWAP1
0xa1 PUSH1 0x20
0xa3 ADD
0xa4 SWAP1
0xa5 SWAP2
0xa6 SWAP1
0xa7 POP
0xa8 POP
0xa9 PUSH2 0x185
0xac JUMP
---
0x62: JUMPDEST 
0x63: V23 = 0xad
0x66: V24 = 0x4
0x6a: V25 = CALLDATALOAD 0x4
0x6b: V26 = 0xffffffffffffffffffffffffffffffffffffffff
0x80: V27 = AND 0xffffffffffffffffffffffffffffffffffffffff V25
0x82: V28 = 0x20
0x84: V29 = ADD 0x20 0x4
0x89: V30 = CALLDATALOAD 0x24
0x8a: V31 = 0xffffffffffffffffffffffffffffffffffffffff
0x9f: V32 = AND 0xffffffffffffffffffffffffffffffffffffffff V30
0xa1: V33 = 0x20
0xa3: V34 = ADD 0x20 0x24
0xa9: V35 = 0x185
0xac: JUMP 0x185
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xad, V27, V32]
Exit stack: [V10, 0xad, V27, V32]

================================

Block 0xad
[0xad:0xc2]
---
Predecessors: [0x342]
Successors: []
---
0xad JUMPDEST
0xae PUSH1 0x40
0xb0 MLOAD
0xb1 DUP1
0xb2 DUP3
0xb3 DUP2
0xb4 MSTORE
0xb5 PUSH1 0x20
0xb7 ADD
0xb8 SWAP2
0xb9 POP
0xba POP
0xbb PUSH1 0x40
0xbd MLOAD
0xbe DUP1
0xbf SWAP2
0xc0 SUB
0xc1 SWAP1
0xc2 RETURN
---
0xad: JUMPDEST 
0xae: V36 = 0x40
0xb0: V37 = M[0x40]
0xb4: M[V37] = S0
0xb5: V38 = 0x20
0xb7: V39 = ADD 0x20 V37
0xbb: V40 = 0x40
0xbd: V41 = M[0x40]
0xc0: V42 = SUB V39 V41
0xc2: RETURN V41 V42
---
Entry stack: [V10, 0x12d, V51, V56, V65, V63, V337, V51, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x12d, V51, V56, V65, V63, V337, V51, S3, S2, S1]

================================

Block 0xc3
[0xc3:0xc9]
---
Predecessors: [0x3f]
Successors: [0xca, 0xce]
---
0xc3 JUMPDEST
0xc4 CALLVALUE
0xc5 ISZERO
0xc6 PUSH2 0xce
0xc9 JUMPI
---
0xc3: JUMPDEST 
0xc4: V43 = CALLVALUE
0xc5: V44 = ISZERO V43
0xc6: V45 = 0xce
0xc9: JUMPI 0xce V44
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xca
[0xca:0xcd]
---
Predecessors: [0xc3]
Successors: []
---
0xca PUSH1 0x0
0xcc DUP1
0xcd REVERT
---
0xca: V46 = 0x0
0xcd: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xce
[0xce:0x12c]
---
Predecessors: [0xc3]
Successors: [0x349]
---
0xce JUMPDEST
0xcf PUSH2 0x12d
0xd2 PUSH1 0x4
0xd4 DUP1
0xd5 DUP1
0xd6 CALLDATALOAD
0xd7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xec AND
0xed SWAP1
0xee PUSH1 0x20
0xf0 ADD
0xf1 SWAP1
0xf2 SWAP2
0xf3 SWAP1
0xf4 DUP1
0xf5 CALLDATALOAD
0xf6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10b AND
0x10c SWAP1
0x10d PUSH1 0x20
0x10f ADD
0x110 SWAP1
0x111 SWAP2
0x112 SWAP1
0x113 DUP1
0x114 CALLDATALOAD
0x115 SWAP1
0x116 PUSH1 0x20
0x118 ADD
0x119 SWAP1
0x11a DUP3
0x11b ADD
0x11c DUP1
0x11d CALLDATALOAD
0x11e SWAP1
0x11f PUSH1 0x20
0x121 ADD
0x122 SWAP2
0x123 SWAP1
0x124 SWAP2
0x125 SWAP3
0x126 SWAP1
0x127 POP
0x128 POP
0x129 PUSH2 0x349
0x12c JUMP
---
0xce: JUMPDEST 
0xcf: V47 = 0x12d
0xd2: V48 = 0x4
0xd6: V49 = CALLDATALOAD 0x4
0xd7: V50 = 0xffffffffffffffffffffffffffffffffffffffff
0xec: V51 = AND 0xffffffffffffffffffffffffffffffffffffffff V49
0xee: V52 = 0x20
0xf0: V53 = ADD 0x20 0x4
0xf5: V54 = CALLDATALOAD 0x24
0xf6: V55 = 0xffffffffffffffffffffffffffffffffffffffff
0x10b: V56 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0x10d: V57 = 0x20
0x10f: V58 = ADD 0x20 0x24
0x114: V59 = CALLDATALOAD 0x44
0x116: V60 = 0x20
0x118: V61 = ADD 0x20 0x44
0x11b: V62 = ADD 0x4 V59
0x11d: V63 = CALLDATALOAD V62
0x11f: V64 = 0x20
0x121: V65 = ADD 0x20 V62
0x129: V66 = 0x349
0x12c: JUMP 0x349
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x12d, V51, V56, V65, V63]
Exit stack: [V10, 0x12d, V51, V56, V65, V63]

================================

Block 0x12d
[0x12d:0x154]
---
Predecessors: [0x5d9]
Successors: [0x155]
---
0x12d JUMPDEST
0x12e PUSH1 0x40
0x130 MLOAD
0x131 DUP1
0x132 DUP1
0x133 PUSH1 0x20
0x135 ADD
0x136 DUP3
0x137 DUP2
0x138 SUB
0x139 DUP3
0x13a MSTORE
0x13b DUP4
0x13c DUP2
0x13d DUP2
0x13e MLOAD
0x13f DUP2
0x140 MSTORE
0x141 PUSH1 0x20
0x143 ADD
0x144 SWAP2
0x145 POP
0x146 DUP1
0x147 MLOAD
0x148 SWAP1
0x149 PUSH1 0x20
0x14b ADD
0x14c SWAP1
0x14d PUSH1 0x20
0x14f MUL
0x150 DUP1
0x151 DUP4
0x152 DUP4
0x153 PUSH1 0x0
---
0x12d: JUMPDEST 
0x12e: V67 = 0x40
0x130: V68 = M[0x40]
0x133: V69 = 0x20
0x135: V70 = ADD 0x20 V68
0x138: V71 = SUB V70 V68
0x13a: M[V68] = V71
0x13e: V72 = M[S0]
0x140: M[V70] = V72
0x141: V73 = 0x20
0x143: V74 = ADD 0x20 V70
0x147: V75 = M[S0]
0x149: V76 = 0x20
0x14b: V77 = ADD 0x20 S0
0x14d: V78 = 0x20
0x14f: V79 = MUL 0x20 V75
0x153: V80 = 0x0
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: [S0, V68, V68, V74, V77, V79, V79, V74, V77, 0x0]
Exit stack: [V10, S0, V68, V68, V74, V77, V79, V79, V74, V77, 0x0]

================================

Block 0x155
[0x155:0x15d]
---
Predecessors: [0x12d, 0x166]
Successors: [0x15e, 0x171]
---
0x155 JUMPDEST
0x156 DUP4
0x157 DUP2
0x158 LT
0x159 ISZERO
0x15a PUSH2 0x171
0x15d JUMPI
---
0x155: JUMPDEST 
0x158: V81 = LT S0 V79
0x159: V82 = ISZERO V81
0x15a: V83 = 0x171
0x15d: JUMPI 0x171 V82
---
Entry stack: [V10, S9, V68, V68, V74, V77, V79, V79, V74, V77, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, S9, V68, V68, V74, V77, V79, V79, V74, V77, S0]

================================

Block 0x15e
[0x15e:0x165]
---
Predecessors: [0x155]
Successors: [0x166]
---
0x15e DUP1
0x15f DUP3
0x160 ADD
0x161 MLOAD
0x162 DUP2
0x163 DUP5
0x164 ADD
0x165 MSTORE
---
0x160: V84 = ADD V77 S0
0x161: V85 = M[V84]
0x164: V86 = ADD V74 S0
0x165: M[V86] = V85
---
Entry stack: [V10, S9, V68, V68, V74, V77, V79, V79, V74, V77, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, S9, V68, V68, V74, V77, V79, V79, V74, V77, S0]

================================

Block 0x166
[0x166:0x170]
---
Predecessors: [0x15e]
Successors: [0x155]
---
0x166 JUMPDEST
0x167 PUSH1 0x20
0x169 DUP2
0x16a ADD
0x16b SWAP1
0x16c POP
0x16d PUSH2 0x155
0x170 JUMP
---
0x166: JUMPDEST 
0x167: V87 = 0x20
0x16a: V88 = ADD S0 0x20
0x16d: V89 = 0x155
0x170: JUMP 0x155
---
Entry stack: [V10, S9, V68, V68, V74, V77, V79, V79, V74, V77, S0]
Stack pops: 1
Stack additions: [V88]
Exit stack: [V10, S9, V68, V68, V74, V77, V79, V79, V74, V77, V88]

================================

Block 0x171
[0x171:0x184]
---
Predecessors: [0x155]
Successors: []
---
0x171 JUMPDEST
0x172 POP
0x173 POP
0x174 POP
0x175 POP
0x176 SWAP1
0x177 POP
0x178 ADD
0x179 SWAP3
0x17a POP
0x17b POP
0x17c POP
0x17d PUSH1 0x40
0x17f MLOAD
0x180 DUP1
0x181 SWAP2
0x182 SUB
0x183 SWAP1
0x184 RETURN
---
0x171: JUMPDEST 
0x178: V90 = ADD V79 V74
0x17d: V91 = 0x40
0x17f: V92 = M[0x40]
0x182: V93 = SUB V90 V92
0x184: RETURN V92 V93
---
Entry stack: [V10, S9, V68, V68, V74, V77, V79, V79, V74, V77, S0]
Stack pops: 10
Stack additions: []
Exit stack: [V10]

================================

Block 0x185
[0x185:0x196]
---
Predecessors: [0x62, 0x549]
Successors: [0x197, 0x26e]
---
0x185 JUMPDEST
0x186 PUSH1 0x0
0x188 DUP1
0x189 DUP3
0x18a EXTCODESIZE
0x18b SWAP1
0x18c POP
0x18d PUSH1 0x0
0x18f DUP2
0x190 GT
0x191 DUP1
0x192 ISZERO
0x193 PUSH2 0x26e
0x196 JUMPI
---
0x185: JUMPDEST 
0x186: V94 = 0x0
0x18a: V95 = EXTCODESIZE S0
0x18d: V96 = 0x0
0x190: V97 = GT V95 0x0
0x192: V98 = ISZERO V97
0x193: V99 = 0x26e
0x196: JUMPI 0x26e V98
---
Entry stack: [V10, 0x12d, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0xad, 0x56b}, S1, S0]
Stack pops: 1
Stack additions: [S0, 0x0, V95, V97]
Exit stack: [V10, 0x12d, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0xad, 0x56b}, S1, S0, 0x0, V95, V97]

================================

Block 0x197
[0x197:0x26d]
---
Predecessors: [0x185]
Successors: [0x26e]
---
0x197 POP
0x198 DUP3
0x199 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ae AND
0x1af PUSH4 0x70a08231
0x1b4 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1d2 MUL
0x1d3 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1f1 SWAP1
0x1f2 DIV
0x1f3 DUP6
0x1f4 PUSH1 0x40
0x1f6 MLOAD
0x1f7 DUP3
0x1f8 PUSH4 0xffffffff
0x1fd AND
0x1fe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x21c MUL
0x21d DUP2
0x21e MSTORE
0x21f PUSH1 0x4
0x221 ADD
0x222 DUP1
0x223 DUP3
0x224 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x239 AND
0x23a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24f AND
0x250 DUP2
0x251 MSTORE
0x252 PUSH1 0x20
0x254 ADD
0x255 SWAP2
0x256 POP
0x257 POP
0x258 PUSH1 0x0
0x25a PUSH1 0x40
0x25c MLOAD
0x25d DUP1
0x25e DUP4
0x25f SUB
0x260 DUP2
0x261 PUSH1 0x0
0x263 DUP8
0x264 PUSH2 0x646e
0x267 GAS
0x268 SUB
0x269 CALL
0x26a SWAP3
0x26b POP
0x26c POP
0x26d POP
---
0x199: V100 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ae: V101 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x1af: V102 = 0x70a08231
0x1b4: V103 = 0x100000000000000000000000000000000000000000000000000000000
0x1d2: V104 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x1d3: V105 = 0x100000000000000000000000000000000000000000000000000000000
0x1f2: V106 = DIV 0x70a0823100000000000000000000000000000000000000000000000000000000 0x100000000000000000000000000000000000000000000000000000000
0x1f4: V107 = 0x40
0x1f6: V108 = M[0x40]
0x1f8: V109 = 0xffffffff
0x1fd: V110 = AND 0xffffffff 0x70a08231
0x1fe: V111 = 0x100000000000000000000000000000000000000000000000000000000
0x21c: V112 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x21e: M[V108] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x21f: V113 = 0x4
0x221: V114 = ADD 0x4 V108
0x224: V115 = 0xffffffffffffffffffffffffffffffffffffffff
0x239: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x23a: V117 = 0xffffffffffffffffffffffffffffffffffffffff
0x24f: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0x251: M[V114] = V118
0x252: V119 = 0x20
0x254: V120 = ADD 0x20 V114
0x258: V121 = 0x0
0x25a: V122 = 0x40
0x25c: V123 = M[0x40]
0x25f: V124 = SUB V120 V123
0x261: V125 = 0x0
0x264: V126 = 0x646e
0x267: V127 = GAS
0x268: V128 = SUB V127 0x646e
0x269: V129 = CALL V128 V101 0x0 V123 V124 V123 0x0
---
Entry stack: [V10, 0x12d, V51, V56, V65, V63, V337, V51, S8, S7, S6, {0xad, 0x56b}, S4, S3, 0x0, V95, V97]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V129]
Exit stack: [V10, 0x12d, V51, V56, V65, V63, V337, V51, S8, S7, S6, {0xad, 0x56b}, S4, S3, 0x0, V95, V129]

================================

Block 0x26e
[0x26e:0x273]
---
Predecessors: [0x185, 0x197]
Successors: [0x274, 0x338]
---
0x26e JUMPDEST
0x26f ISZERO
0x270 PUSH2 0x338
0x273 JUMPI
---
0x26e: JUMPDEST 
0x26f: V130 = ISZERO S0
0x270: V131 = 0x338
0x273: JUMPI 0x338 V130
---
Entry stack: [V10, 0x12d, V51, V56, V65, V63, V337, V51, S8, S7, S6, {0xad, 0x56b}, S4, S3, 0x0, V95, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x12d, V51, V56, V65, V63, V337, V51, S8, S7, S6, {0xad, 0x56b}, S4, S3, 0x0, V95]

================================

Block 0x274
[0x274:0x311]
---
Predecessors: [0x26e]
Successors: [0x312, 0x316]
---
0x274 DUP3
0x275 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28a AND
0x28b PUSH4 0x70a08231
0x290 DUP6
0x291 PUSH1 0x0
0x293 PUSH1 0x40
0x295 MLOAD
0x296 PUSH1 0x20
0x298 ADD
0x299 MSTORE
0x29a PUSH1 0x40
0x29c MLOAD
0x29d DUP3
0x29e PUSH4 0xffffffff
0x2a3 AND
0x2a4 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c2 MUL
0x2c3 DUP2
0x2c4 MSTORE
0x2c5 PUSH1 0x4
0x2c7 ADD
0x2c8 DUP1
0x2c9 DUP3
0x2ca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2df AND
0x2e0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f5 AND
0x2f6 DUP2
0x2f7 MSTORE
0x2f8 PUSH1 0x20
0x2fa ADD
0x2fb SWAP2
0x2fc POP
0x2fd POP
0x2fe PUSH1 0x20
0x300 PUSH1 0x40
0x302 MLOAD
0x303 DUP1
0x304 DUP4
0x305 SUB
0x306 DUP2
0x307 PUSH1 0x0
0x309 DUP8
0x30a DUP1
0x30b EXTCODESIZE
0x30c ISZERO
0x30d ISZERO
0x30e PUSH2 0x316
0x311 JUMPI
---
0x275: V132 = 0xffffffffffffffffffffffffffffffffffffffff
0x28a: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x28b: V134 = 0x70a08231
0x291: V135 = 0x0
0x293: V136 = 0x40
0x295: V137 = M[0x40]
0x296: V138 = 0x20
0x298: V139 = ADD 0x20 V137
0x299: M[V139] = 0x0
0x29a: V140 = 0x40
0x29c: V141 = M[0x40]
0x29e: V142 = 0xffffffff
0x2a3: V143 = AND 0xffffffff 0x70a08231
0x2a4: V144 = 0x100000000000000000000000000000000000000000000000000000000
0x2c2: V145 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x2c4: M[V141] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x2c5: V146 = 0x4
0x2c7: V147 = ADD 0x4 V141
0x2ca: V148 = 0xffffffffffffffffffffffffffffffffffffffff
0x2df: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x2e0: V150 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f5: V151 = AND 0xffffffffffffffffffffffffffffffffffffffff V149
0x2f7: M[V147] = V151
0x2f8: V152 = 0x20
0x2fa: V153 = ADD 0x20 V147
0x2fe: V154 = 0x20
0x300: V155 = 0x40
0x302: V156 = M[0x40]
0x305: V157 = SUB V153 V156
0x307: V158 = 0x0
0x30b: V159 = EXTCODESIZE V133
0x30c: V160 = ISZERO V159
0x30d: V161 = ISZERO V160
0x30e: V162 = 0x316
0x311: JUMPI 0x316 V161
---
Entry stack: [V10, 0x12d, V51, V56, V65, V63, V337, V51, S7, S6, S5, {0xad, 0x56b}, S3, S2, 0x0, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V133, 0x70a08231, V153, 0x20, V156, V157, V156, 0x0, V133]
Exit stack: [V10, 0x12d, V51, V56, V65, V63, V337, V51, S7, S6, S5, {0xad, 0x56b}, S3, S2, 0x0, S0, V133, 0x70a08231, V153, 0x20, V156, V157, V156, 0x0, V133]

================================

Block 0x312
[0x312:0x315]
---
Predecessors: [0x274]
Successors: []
---
0x312 PUSH1 0x0
0x314 DUP1
0x315 REVERT
---
0x312: V163 = 0x0
0x315: REVERT 0x0 0x0
---
Entry stack: [V10, 0x12d, V51, V56, V65, V63, V337, V51, S16, S15, S14, {0xad, 0x56b}, S12, S11, 0x0, S9, V133, 0x70a08231, V153, 0x20, V156, V157, V156, 0x0, V133]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x12d, V51, V56, V65, V63, V337, V51, S16, S15, S14, {0xad, 0x56b}, S12, S11, 0x0, S9, V133, 0x70a08231, V153, 0x20, V156, V157, V156, 0x0, V133]

================================

Block 0x316
[0x316:0x322]
---
Predecessors: [0x274]
Successors: [0x323, 0x327]
---
0x316 JUMPDEST
0x317 PUSH2 0x2c6
0x31a GAS
0x31b SUB
0x31c CALL
0x31d ISZERO
0x31e ISZERO
0x31f PUSH2 0x327
0x322 JUMPI
---
0x316: JUMPDEST 
0x317: V164 = 0x2c6
0x31a: V165 = GAS
0x31b: V166 = SUB V165 0x2c6
0x31c: V167 = CALL V166 V133 0x0 V156 V157 V156 0x20
0x31d: V168 = ISZERO V167
0x31e: V169 = ISZERO V168
0x31f: V170 = 0x327
0x322: JUMPI 0x327 V169
---
Entry stack: [V10, 0x12d, V51, V56, V65, V63, V337, V51, S16, S15, S14, {0xad, 0x56b}, S12, S11, 0x0, S9, V133, 0x70a08231, V153, 0x20, V156, V157, V156, 0x0, V133]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x12d, V51, V56, V65, V63, V337, V51, S16, S15, S14, {0xad, 0x56b}, S12, S11, 0x0, S9, V133, 0x70a08231, V153]

================================

Block 0x323
[0x323:0x326]
---
Predecessors: [0x316]
Successors: []
---
0x323 PUSH1 0x0
0x325 DUP1
0x326 REVERT
---
0x323: V171 = 0x0
0x326: REVERT 0x0 0x0
---
Entry stack: [V10, 0x12d, V51, V56, V65, V63, V337, V51, S10, S9, S8, {0xad, 0x56b}, S6, S5, 0x0, S3, S2, 0x70a08231, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x12d, V51, V56, V65, V63, V337, V51, S10, S9, S8, {0xad, 0x56b}, S6, S5, 0x0, S3, S2, 0x70a08231, S0]

================================

Block 0x327
[0x327:0x337]
---
Predecessors: [0x316]
Successors: [0x342]
---
0x327 JUMPDEST
0x328 POP
0x329 POP
0x32a POP
0x32b PUSH1 0x40
0x32d MLOAD
0x32e DUP1
0x32f MLOAD
0x330 SWAP1
0x331 POP
0x332 SWAP2
0x333 POP
0x334 PUSH2 0x342
0x337 JUMP
---
0x327: JUMPDEST 
0x32b: V172 = 0x40
0x32d: V173 = M[0x40]
0x32f: V174 = M[V173]
0x334: V175 = 0x342
0x337: JUMP 0x342
---
Entry stack: [V10, 0x12d, V51, V56, V65, V63, V337, V51, S10, S9, S8, {0xad, 0x56b}, S6, S5, 0x0, S3, S2, 0x70a08231, S0]
Stack pops: 5
Stack additions: [V174, S3]
Exit stack: [V10, 0x12d, V51, V56, V65, V63, V337, V51, S10, S9, S8, {0xad, 0x56b}, S6, S5, V174, S3]

================================

Block 0x338
[0x338:0x340]
---
Predecessors: [0x26e]
Successors: [0x342]
---
0x338 JUMPDEST
0x339 PUSH1 0x0
0x33b SWAP2
0x33c POP
0x33d PUSH2 0x342
0x340 JUMP
---
0x338: JUMPDEST 
0x339: V176 = 0x0
0x33d: V177 = 0x342
0x340: JUMP 0x342
---
Entry stack: [V10, 0x12d, V51, V56, V65, V63, V337, V51, S7, S6, S5, {0xad, 0x56b}, S3, S2, 0x0, V95]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V10, 0x12d, V51, V56, V65, V63, V337, V51, S7, S6, S5, {0xad, 0x56b}, S3, S2, 0x0, V95]

================================

Block 0x341
[0x341:0x341]
---
Predecessors: []
Successors: [0x342]
---
0x341 JUMPDEST
---
0x341: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x342
[0x342:0x348]
---
Predecessors: [0x327, 0x338, 0x341]
Successors: [0xad, 0x56b]
---
0x342 JUMPDEST
0x343 POP
0x344 SWAP3
0x345 SWAP2
0x346 POP
0x347 POP
0x348 JUMP
---
0x342: JUMPDEST 
0x348: JUMP {0xad, 0x56b}
---
Entry stack: [V10, 0x12d, V51, V56, V65, V63, V337, V51, S7, S6, S5, {0xad, 0x56b}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V10, 0x12d, V51, V56, V65, V63, V337, V51, S7, S6, S5, S1]

================================

Block 0x349
[0x349:0x350]
---
Predecessors: [0xce]
Successors: [0x5e5]
---
0x349 JUMPDEST
0x34a PUSH2 0x351
0x34d PUSH2 0x5e5
0x350 JUMP
---
0x349: JUMPDEST 
0x34a: V178 = 0x351
0x34d: V179 = 0x5e5
0x350: JUMP 0x5e5
---
Entry stack: [V10, 0x12d, V51, V56, V65, V63]
Stack pops: 0
Stack additions: [0x351]
Exit stack: [V10, 0x12d, V51, V56, V65, V63, 0x351]

================================

Block 0x351
[0x351:0x35a]
---
Predecessors: [0x5e5]
Successors: [0x5e5]
---
0x351 JUMPDEST
0x352 PUSH1 0x0
0x354 PUSH2 0x35b
0x357 PUSH2 0x5e5
0x35a JUMP
---
0x351: JUMPDEST 
0x352: V180 = 0x0
0x354: V181 = 0x35b
0x357: V182 = 0x5e5
0x35a: JUMP 0x5e5
---
Entry stack: [V10, 0x12d, S8, S7, S6, S5, S4, S3, S2, S1, V337]
Stack pops: 0
Stack additions: [0x0, 0x35b]
Exit stack: [V10, 0x12d, S8, S7, S6, S5, S4, S3, S2, S1, V337, 0x0, 0x35b]

================================

Block 0x35b
[0x35b:0x372]
---
Predecessors: [0x5e5]
Successors: [0x373, 0x375]
---
0x35b JUMPDEST
0x35c PUSH1 0x0
0x35e DUP1
0x35f DUP9
0x360 SWAP4
0x361 POP
0x362 PUSH1 0x2
0x364 DUP8
0x365 DUP8
0x366 SWAP1
0x367 POP
0x368 MUL
0x369 PUSH1 0x40
0x36b MLOAD
0x36c DUP1
0x36d MSIZE
0x36e LT
0x36f PUSH2 0x375
0x372 JUMPI
---
0x35b: JUMPDEST 
0x35c: V183 = 0x0
0x362: V184 = 0x2
0x368: V185 = MUL S3 0x2
0x369: V186 = 0x40
0x36b: V187 = M[0x40]
0x36d: V188 = MSIZE
0x36e: V189 = LT V188 V187
0x36f: V190 = 0x375
0x372: JUMPI 0x375 V189
---
Entry stack: [V10, 0x12d, S8, S7, S6, S5, S4, S3, S2, S1, V337]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S6, S0, 0x0, 0x0, V185, V187]
Exit stack: [V10, 0x12d, S8, S7, S6, S5, S4, S3, S2, S6, V337, 0x0, 0x0, V185, V187]

================================

Block 0x373
[0x373:0x374]
---
Predecessors: [0x35b]
Successors: [0x375]
---
0x373 POP
0x374 MSIZE
---
0x374: V191 = MSIZE
---
Entry stack: [V10, 0x12d, S12, S11, S10, S9, S8, S7, S6, S5, V337, 0x0, 0x0, V185, V187]
Stack pops: 1
Stack additions: [V191]
Exit stack: [V10, 0x12d, S12, S11, S10, S9, S8, S7, S6, S5, V337, 0x0, 0x0, V185, V191]

================================

Block 0x375
[0x375:0x385]
---
Predecessors: [0x35b, 0x373]
Successors: [0x386]
---
0x375 JUMPDEST
0x376 SWAP1
0x377 DUP1
0x378 DUP3
0x379 MSTORE
0x37a DUP1
0x37b PUSH1 0x20
0x37d MUL
0x37e PUSH1 0x20
0x380 ADD
0x381 DUP3
0x382 ADD
0x383 PUSH1 0x40
0x385 MSTORE
---
0x375: JUMPDEST 
0x379: M[S0] = V185
0x37b: V192 = 0x20
0x37d: V193 = MUL 0x20 V185
0x37e: V194 = 0x20
0x380: V195 = ADD 0x20 V193
0x382: V196 = ADD S0 V195
0x383: V197 = 0x40
0x385: M[0x40] = V196
---
Entry stack: [V10, 0x12d, S12, S11, S10, S9, S8, S7, S6, S5, V337, 0x0, 0x0, V185, S0]
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [V10, 0x12d, S12, S11, S10, S9, S8, S7, S6, S5, V337, 0x0, 0x0, S0, V185]

================================

Block 0x386
[0x386:0x38d]
---
Predecessors: [0x375]
Successors: [0x38e]
---
0x386 JUMPDEST
0x387 POP
0x388 SWAP3
0x389 POP
0x38a PUSH1 0x0
0x38c SWAP2
0x38d POP
---
0x386: JUMPDEST 
0x38a: V198 = 0x0
---
Entry stack: [V10, 0x12d, S12, S11, S10, S9, S8, S7, S6, S5, V337, 0x0, 0x0, S1, V185]
Stack pops: 5
Stack additions: [S1, 0x0, S2]
Exit stack: [V10, 0x12d, S12, S11, S10, S9, S8, S7, S6, S5, S1, 0x0, 0x0]

================================

Block 0x38e
[0x38e:0x399]
---
Predecessors: [0x386, 0x5c8]
Successors: [0x39a, 0x5d5]
---
0x38e JUMPDEST
0x38f DUP7
0x390 DUP7
0x391 SWAP1
0x392 POP
0x393 DUP3
0x394 LT
0x395 ISZERO
0x396 PUSH2 0x5d5
0x399 JUMPI
---
0x38e: JUMPDEST 
0x394: V199 = LT S1 S5
0x395: V200 = ISZERO V199
0x396: V201 = 0x5d5
0x399: JUMPI 0x5d5 V200
---
Entry stack: [V10, 0x12d, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V10, 0x12d, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x39a
[0x39a:0x3c7]
---
Predecessors: [0x38e]
Successors: [0x3c8, 0x3c9]
---
0x39a PUSH1 0x2
0x39c DUP3
0x39d MUL
0x39e SWAP1
0x39f POP
0x3a0 DUP4
0x3a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b6 AND
0x3b7 PUSH4 0xf7888aec
0x3bc DUP9
0x3bd DUP9
0x3be DUP6
0x3bf DUP2
0x3c0 DUP2
0x3c1 LT
0x3c2 ISZERO
0x3c3 ISZERO
0x3c4 PUSH2 0x3c9
0x3c7 JUMPI
---
0x39a: V202 = 0x2
0x39d: V203 = MUL S1 0x2
0x3a1: V204 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b6: V205 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x3b7: V206 = 0xf7888aec
0x3c1: V207 = LT S1 S5
0x3c2: V208 = ISZERO V207
0x3c3: V209 = ISZERO V208
0x3c4: V210 = 0x3c9
0x3c7: JUMPI 0x3c9 V209
---
Entry stack: [V10, 0x12d, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, V203, V205, 0xf7888aec, S6, S5, S1]
Exit stack: [V10, 0x12d, S8, S7, S6, S5, S4, S3, S2, S1, V203, V205, 0xf7888aec, S6, S5, S1]

================================

Block 0x3c8
[0x3c8:0x3c8]
---
Predecessors: [0x39a]
Successors: []
---
0x3c8 INVALID
---
0x3c8: INVALID 
---
Entry stack: [V10, 0x12d, S13, S12, S11, S10, S9, S8, S7, S6, V203, V205, 0xf7888aec, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x12d, S13, S12, S11, S10, S9, S8, S7, S6, V203, V205, 0xf7888aec, S2, S1, S0]

================================

Block 0x3c9
[0x3c9:0x49b]
---
Predecessors: [0x39a]
Successors: [0x49c, 0x4a0]
---
0x3c9 JUMPDEST
0x3ca SWAP1
0x3cb POP
0x3cc PUSH1 0x20
0x3ce MUL
0x3cf ADD
0x3d0 CALLDATALOAD
0x3d1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e6 AND
0x3e7 DUP11
0x3e8 PUSH1 0x0
0x3ea PUSH1 0x40
0x3ec MLOAD
0x3ed PUSH1 0x20
0x3ef ADD
0x3f0 MSTORE
0x3f1 PUSH1 0x40
0x3f3 MLOAD
0x3f4 DUP4
0x3f5 PUSH4 0xffffffff
0x3fa AND
0x3fb PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x419 MUL
0x41a DUP2
0x41b MSTORE
0x41c PUSH1 0x4
0x41e ADD
0x41f DUP1
0x420 DUP4
0x421 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x436 AND
0x437 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x44c AND
0x44d DUP2
0x44e MSTORE
0x44f PUSH1 0x20
0x451 ADD
0x452 DUP3
0x453 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x468 AND
0x469 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x47e AND
0x47f DUP2
0x480 MSTORE
0x481 PUSH1 0x20
0x483 ADD
0x484 SWAP3
0x485 POP
0x486 POP
0x487 POP
0x488 PUSH1 0x20
0x48a PUSH1 0x40
0x48c MLOAD
0x48d DUP1
0x48e DUP4
0x48f SUB
0x490 DUP2
0x491 PUSH1 0x0
0x493 DUP8
0x494 DUP1
0x495 EXTCODESIZE
0x496 ISZERO
0x497 ISZERO
0x498 PUSH2 0x4a0
0x49b JUMPI
---
0x3c9: JUMPDEST 
0x3cc: V211 = 0x20
0x3ce: V212 = MUL 0x20 S0
0x3cf: V213 = ADD V212 S2
0x3d0: V214 = CALLDATALOAD V213
0x3d1: V215 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e6: V216 = AND 0xffffffffffffffffffffffffffffffffffffffff V214
0x3e8: V217 = 0x0
0x3ea: V218 = 0x40
0x3ec: V219 = M[0x40]
0x3ed: V220 = 0x20
0x3ef: V221 = ADD 0x20 V219
0x3f0: M[V221] = 0x0
0x3f1: V222 = 0x40
0x3f3: V223 = M[0x40]
0x3f5: V224 = 0xffffffff
0x3fa: V225 = AND 0xffffffff 0xf7888aec
0x3fb: V226 = 0x100000000000000000000000000000000000000000000000000000000
0x419: V227 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xf7888aec
0x41b: M[V223] = 0xf7888aec00000000000000000000000000000000000000000000000000000000
0x41c: V228 = 0x4
0x41e: V229 = ADD 0x4 V223
0x421: V230 = 0xffffffffffffffffffffffffffffffffffffffff
0x436: V231 = AND 0xffffffffffffffffffffffffffffffffffffffff V216
0x437: V232 = 0xffffffffffffffffffffffffffffffffffffffff
0x44c: V233 = AND 0xffffffffffffffffffffffffffffffffffffffff V231
0x44e: M[V229] = V233
0x44f: V234 = 0x20
0x451: V235 = ADD 0x20 V229
0x453: V236 = 0xffffffffffffffffffffffffffffffffffffffff
0x468: V237 = AND 0xffffffffffffffffffffffffffffffffffffffff S12
0x469: V238 = 0xffffffffffffffffffffffffffffffffffffffff
0x47e: V239 = AND 0xffffffffffffffffffffffffffffffffffffffff V237
0x480: M[V235] = V239
0x481: V240 = 0x20
0x483: V241 = ADD 0x20 V235
0x488: V242 = 0x20
0x48a: V243 = 0x40
0x48c: V244 = M[0x40]
0x48f: V245 = SUB V241 V244
0x491: V246 = 0x0
0x495: V247 = EXTCODESIZE V205
0x496: V248 = ISZERO V247
0x497: V249 = ISZERO V248
0x498: V250 = 0x4a0
0x49b: JUMPI 0x4a0 V249
---
Entry stack: [V10, 0x12d, S13, S12, S11, S10, S9, S8, S7, S6, V203, V205, 0xf7888aec, S2, S1, S0]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V241, 0x20, V244, V245, V244, 0x0, S4]
Exit stack: [V10, 0x12d, S13, S12, S11, S10, S9, S8, S7, S6, V203, V205, 0xf7888aec, V241, 0x20, V244, V245, V244, 0x0, V205]

================================

Block 0x49c
[0x49c:0x49f]
---
Predecessors: [0x3c9]
Successors: []
---
0x49c PUSH1 0x0
0x49e DUP1
0x49f REVERT
---
0x49c: V251 = 0x0
0x49f: REVERT 0x0 0x0
---
Entry stack: [V10, 0x12d, S17, S16, S15, S14, S13, S12, S11, S10, V203, V205, 0xf7888aec, V241, 0x20, V244, V245, V244, 0x0, V205]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x12d, S17, S16, S15, S14, S13, S12, S11, S10, V203, V205, 0xf7888aec, V241, 0x20, V244, V245, V244, 0x0, V205]

================================

Block 0x4a0
[0x4a0:0x4ac]
---
Predecessors: [0x3c9]
Successors: [0x4ad, 0x4b1]
---
0x4a0 JUMPDEST
0x4a1 PUSH2 0x2c6
0x4a4 GAS
0x4a5 SUB
0x4a6 CALL
0x4a7 ISZERO
0x4a8 ISZERO
0x4a9 PUSH2 0x4b1
0x4ac JUMPI
---
0x4a0: JUMPDEST 
0x4a1: V252 = 0x2c6
0x4a4: V253 = GAS
0x4a5: V254 = SUB V253 0x2c6
0x4a6: V255 = CALL V254 V205 0x0 V244 V245 V244 0x20
0x4a7: V256 = ISZERO V255
0x4a8: V257 = ISZERO V256
0x4a9: V258 = 0x4b1
0x4ac: JUMPI 0x4b1 V257
---
Entry stack: [V10, 0x12d, S17, S16, S15, S14, S13, S12, S11, S10, V203, V205, 0xf7888aec, V241, 0x20, V244, V245, V244, 0x0, V205]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x12d, S17, S16, S15, S14, S13, S12, S11, S10, V203, V205, 0xf7888aec, V241]

================================

Block 0x4ad
[0x4ad:0x4b0]
---
Predecessors: [0x4a0]
Successors: []
---
0x4ad PUSH1 0x0
0x4af DUP1
0x4b0 REVERT
---
0x4ad: V259 = 0x0
0x4b0: REVERT 0x0 0x0
---
Entry stack: [V10, 0x12d, S11, S10, S9, S8, S7, S6, S5, S4, V203, V205, 0xf7888aec, V241]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x12d, S11, S10, S9, S8, S7, S6, S5, S4, V203, V205, 0xf7888aec, V241]

================================

Block 0x4b1
[0x4b1:0x4c7]
---
Predecessors: [0x4a0]
Successors: [0x4c8, 0x4c9]
---
0x4b1 JUMPDEST
0x4b2 POP
0x4b3 POP
0x4b4 POP
0x4b5 PUSH1 0x40
0x4b7 MLOAD
0x4b8 DUP1
0x4b9 MLOAD
0x4ba SWAP1
0x4bb POP
0x4bc DUP4
0x4bd DUP3
0x4be DUP2
0x4bf MLOAD
0x4c0 DUP2
0x4c1 LT
0x4c2 ISZERO
0x4c3 ISZERO
0x4c4 PUSH2 0x4c9
0x4c7 JUMPI
---
0x4b1: JUMPDEST 
0x4b5: V260 = 0x40
0x4b7: V261 = M[0x40]
0x4b9: V262 = M[V261]
0x4bf: V263 = M[S5]
0x4c1: V264 = LT V203 V263
0x4c2: V265 = ISZERO V264
0x4c3: V266 = ISZERO V265
0x4c4: V267 = 0x4c9
0x4c7: JUMPI 0x4c9 V266
---
Entry stack: [V10, 0x12d, S11, S10, S9, S8, S7, S6, S5, S4, V203, V205, 0xf7888aec, V241]
Stack pops: 6
Stack additions: [S5, S4, S3, V262, S5, S3]
Exit stack: [V10, 0x12d, S11, S10, S9, S8, S7, S6, S5, S4, V203, V262, S5, V203]

================================

Block 0x4c8
[0x4c8:0x4c8]
---
Predecessors: [0x4b1]
Successors: []
---
0x4c8 INVALID
---
0x4c8: INVALID 
---
Entry stack: [V10, 0x12d, S11, S10, S9, S8, S7, S6, S5, S4, V203, V262, S1, V203]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x12d, S11, S10, S9, S8, S7, S6, S5, S4, V203, V262, S1, V203]

================================

Block 0x4c9
[0x4c9:0x4fb]
---
Predecessors: [0x4b1]
Successors: [0x4fc, 0x4fd]
---
0x4c9 JUMPDEST
0x4ca SWAP1
0x4cb PUSH1 0x20
0x4cd ADD
0x4ce SWAP1
0x4cf PUSH1 0x20
0x4d1 MUL
0x4d2 ADD
0x4d3 DUP2
0x4d4 DUP2
0x4d5 MSTORE
0x4d6 POP
0x4d7 POP
0x4d8 PUSH1 0x0
0x4da PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ef AND
0x4f0 DUP8
0x4f1 DUP8
0x4f2 DUP5
0x4f3 DUP2
0x4f4 DUP2
0x4f5 LT
0x4f6 ISZERO
0x4f7 ISZERO
0x4f8 PUSH2 0x4fd
0x4fb JUMPI
---
0x4c9: JUMPDEST 
0x4cb: V268 = 0x20
0x4cd: V269 = ADD 0x20 S1
0x4cf: V270 = 0x20
0x4d1: V271 = MUL 0x20 V203
0x4d2: V272 = ADD V271 V269
0x4d5: M[V272] = V262
0x4d8: V273 = 0x0
0x4da: V274 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ef: V275 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x4f5: V276 = LT S4 S8
0x4f6: V277 = ISZERO V276
0x4f7: V278 = ISZERO V277
0x4f8: V279 = 0x4fd
0x4fb: JUMPI 0x4fd V278
---
Entry stack: [V10, 0x12d, S11, S10, S9, S8, S7, S6, S5, S4, V203, V262, S1, V203]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, 0x0, S9, S8, S4]
Exit stack: [V10, 0x12d, S11, S10, S9, S8, S7, S6, S5, S4, V203, 0x0, S9, S8, S4]

================================

Block 0x4fc
[0x4fc:0x4fc]
---
Predecessors: [0x4c9]
Successors: []
---
0x4fc INVALID
---
0x4fc: INVALID 
---
Entry stack: [V10, 0x12d, S12, S11, S10, S9, S8, S7, S6, S5, V203, 0x0, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x12d, S12, S11, S10, S9, S8, S7, S6, S5, V203, 0x0, S2, S1, S0]

================================

Block 0x4fd
[0x4fd:0x537]
---
Predecessors: [0x4c9]
Successors: [0x538, 0x58f]
---
0x4fd JUMPDEST
0x4fe SWAP1
0x4ff POP
0x500 PUSH1 0x20
0x502 MUL
0x503 ADD
0x504 CALLDATALOAD
0x505 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x51a AND
0x51b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x530 AND
0x531 EQ
0x532 ISZERO
0x533 ISZERO
0x534 PUSH2 0x58f
0x537 JUMPI
---
0x4fd: JUMPDEST 
0x500: V280 = 0x20
0x502: V281 = MUL 0x20 S0
0x503: V282 = ADD V281 S2
0x504: V283 = CALLDATALOAD V282
0x505: V284 = 0xffffffffffffffffffffffffffffffffffffffff
0x51a: V285 = AND 0xffffffffffffffffffffffffffffffffffffffff V283
0x51b: V286 = 0xffffffffffffffffffffffffffffffffffffffff
0x530: V287 = AND 0xffffffffffffffffffffffffffffffffffffffff V285
0x531: V288 = EQ V287 0x0
0x532: V289 = ISZERO V288
0x533: V290 = ISZERO V289
0x534: V291 = 0x58f
0x537: JUMPI 0x58f V290
---
Entry stack: [V10, 0x12d, S12, S11, S10, S9, S8, S7, S6, S5, V203, 0x0, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V10, 0x12d, S12, S11, S10, S9, S8, S7, S6, S5, V203]

================================

Block 0x538
[0x538:0x547]
---
Predecessors: [0x4fd]
Successors: [0x548, 0x549]
---
0x538 PUSH2 0x56b
0x53b DUP9
0x53c DUP9
0x53d DUP9
0x53e DUP6
0x53f DUP2
0x540 DUP2
0x541 LT
0x542 ISZERO
0x543 ISZERO
0x544 PUSH2 0x549
0x547 JUMPI
---
0x538: V292 = 0x56b
0x541: V293 = LT S1 S5
0x542: V294 = ISZERO V293
0x543: V295 = ISZERO V294
0x544: V296 = 0x549
0x547: JUMPI 0x549 V295
---
Entry stack: [V10, 0x12d, S8, S7, S6, S5, S4, S3, S2, S1, V203]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0, 0x56b, S7, S6, S5, S1]
Exit stack: [V10, 0x12d, S8, S7, S6, S5, S4, S3, S2, S1, V203, 0x56b, S7, S6, S5, S1]

================================

Block 0x548
[0x548:0x548]
---
Predecessors: [0x538]
Successors: []
---
0x548 INVALID
---
0x548: INVALID 
---
Entry stack: [V10, 0x12d, S13, S12, S11, S10, S9, S8, S7, S6, V203, 0x56b, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x12d, S13, S12, S11, S10, S9, S8, S7, S6, V203, 0x56b, S3, S2, S1, S0]

================================

Block 0x549
[0x549:0x56a]
---
Predecessors: [0x538]
Successors: [0x185]
---
0x549 JUMPDEST
0x54a SWAP1
0x54b POP
0x54c PUSH1 0x20
0x54e MUL
0x54f ADD
0x550 CALLDATALOAD
0x551 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x566 AND
0x567 PUSH2 0x185
0x56a JUMP
---
0x549: JUMPDEST 
0x54c: V297 = 0x20
0x54e: V298 = MUL 0x20 S0
0x54f: V299 = ADD V298 S2
0x550: V300 = CALLDATALOAD V299
0x551: V301 = 0xffffffffffffffffffffffffffffffffffffffff
0x566: V302 = AND 0xffffffffffffffffffffffffffffffffffffffff V300
0x567: V303 = 0x185
0x56a: JUMP 0x185
---
Entry stack: [V10, 0x12d, S13, S12, S11, S10, S9, S8, S7, S6, V203, 0x56b, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V302]
Exit stack: [V10, 0x12d, S13, S12, S11, S10, S9, S8, S7, S6, V203, 0x56b, S3, V302]

================================

Block 0x56b
[0x56b:0x57a]
---
Predecessors: [0x342]
Successors: [0x57b, 0x57c]
---
0x56b JUMPDEST
0x56c DUP4
0x56d PUSH1 0x1
0x56f DUP4
0x570 ADD
0x571 DUP2
0x572 MLOAD
0x573 DUP2
0x574 LT
0x575 ISZERO
0x576 ISZERO
0x577 PUSH2 0x57c
0x57a JUMPI
---
0x56b: JUMPDEST 
0x56d: V304 = 0x1
0x570: V305 = ADD S1 0x1
0x572: V306 = M[S3]
0x574: V307 = LT V305 V306
0x575: V308 = ISZERO V307
0x576: V309 = ISZERO V308
0x577: V310 = 0x57c
0x57a: JUMPI 0x57c V309
---
Entry stack: [V10, 0x12d, V51, V56, V65, V63, V337, V51, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S3, V305]
Exit stack: [V10, 0x12d, V51, V56, V65, V63, V337, V51, S3, S2, S1, S0, S3, V305]

================================

Block 0x57b
[0x57b:0x57b]
---
Predecessors: [0x56b]
Successors: []
---
0x57b INVALID
---
0x57b: INVALID 
---
Entry stack: [V10, 0x12d, V51, V56, V65, V63, V337, V51, S5, S4, S3, S2, S1, V305]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x12d, V51, V56, V65, V63, V337, V51, S5, S4, S3, S2, S1, V305]

================================

Block 0x57c
[0x57c:0x58e]
---
Predecessors: [0x56b]
Successors: [0x5c7]
---
0x57c JUMPDEST
0x57d SWAP1
0x57e PUSH1 0x20
0x580 ADD
0x581 SWAP1
0x582 PUSH1 0x20
0x584 MUL
0x585 ADD
0x586 DUP2
0x587 DUP2
0x588 MSTORE
0x589 POP
0x58a POP
0x58b PUSH2 0x5c7
0x58e JUMP
---
0x57c: JUMPDEST 
0x57e: V311 = 0x20
0x580: V312 = ADD 0x20 S1
0x582: V313 = 0x20
0x584: V314 = MUL 0x20 V305
0x585: V315 = ADD V314 V312
0x588: M[V315] = S2
0x58b: V316 = 0x5c7
0x58e: JUMP 0x5c7
---
Entry stack: [V10, 0x12d, V51, V56, V65, V63, V337, V51, S5, S4, S3, S2, S1, V305]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x12d, V51, V56, V65, V63, V337, V51, S5, S4, S3]

================================

Block 0x58f
[0x58f:0x5b6]
---
Predecessors: [0x4fd]
Successors: [0x5b7, 0x5b8]
---
0x58f JUMPDEST
0x590 DUP8
0x591 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5a6 AND
0x5a7 BALANCE
0x5a8 DUP4
0x5a9 PUSH1 0x1
0x5ab DUP4
0x5ac ADD
0x5ad DUP2
0x5ae MLOAD
0x5af DUP2
0x5b0 LT
0x5b1 ISZERO
0x5b2 ISZERO
0x5b3 PUSH2 0x5b8
0x5b6 JUMPI
---
0x58f: JUMPDEST 
0x591: V317 = 0xffffffffffffffffffffffffffffffffffffffff
0x5a6: V318 = AND 0xffffffffffffffffffffffffffffffffffffffff S7
0x5a7: V319 = BALANCE V318
0x5a9: V320 = 0x1
0x5ac: V321 = ADD V203 0x1
0x5ae: V322 = M[S2]
0x5b0: V323 = LT V321 V322
0x5b1: V324 = ISZERO V323
0x5b2: V325 = ISZERO V324
0x5b3: V326 = 0x5b8
0x5b6: JUMPI 0x5b8 V325
---
Entry stack: [V10, 0x12d, S8, S7, S6, S5, S4, S3, S2, S1, V203]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0, V319, S2, V321]
Exit stack: [V10, 0x12d, S8, S7, S6, S5, S4, S3, S2, S1, V203, V319, S2, V321]

================================

Block 0x5b7
[0x5b7:0x5b7]
---
Predecessors: [0x58f]
Successors: []
---
0x5b7 INVALID
---
0x5b7: INVALID 
---
Entry stack: [V10, 0x12d, S11, S10, S9, S8, S7, S6, S5, S4, V203, V319, S1, V321]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x12d, S11, S10, S9, S8, S7, S6, S5, S4, V203, V319, S1, V321]

================================

Block 0x5b8
[0x5b8:0x5c6]
---
Predecessors: [0x58f]
Successors: [0x5c7]
---
0x5b8 JUMPDEST
0x5b9 SWAP1
0x5ba PUSH1 0x20
0x5bc ADD
0x5bd SWAP1
0x5be PUSH1 0x20
0x5c0 MUL
0x5c1 ADD
0x5c2 DUP2
0x5c3 DUP2
0x5c4 MSTORE
0x5c5 POP
0x5c6 POP
---
0x5b8: JUMPDEST 
0x5ba: V327 = 0x20
0x5bc: V328 = ADD 0x20 S1
0x5be: V329 = 0x20
0x5c0: V330 = MUL 0x20 V321
0x5c1: V331 = ADD V330 V328
0x5c4: M[V331] = V319
---
Entry stack: [V10, 0x12d, S11, S10, S9, S8, S7, S6, S5, S4, V203, V319, S1, V321]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x12d, S11, S10, S9, S8, S7, S6, S5, S4, V203]

================================

Block 0x5c7
[0x5c7:0x5c7]
---
Predecessors: [0x57c, 0x5b8]
Successors: [0x5c8]
---
0x5c7 JUMPDEST
---
0x5c7: JUMPDEST 
---
Entry stack: [V10, 0x12d, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x12d, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x5c8
[0x5c8:0x5d4]
---
Predecessors: [0x5c7]
Successors: [0x38e]
---
0x5c8 JUMPDEST
0x5c9 DUP2
0x5ca DUP1
0x5cb PUSH1 0x1
0x5cd ADD
0x5ce SWAP3
0x5cf POP
0x5d0 POP
0x5d1 PUSH2 0x38e
0x5d4 JUMP
---
0x5c8: JUMPDEST 
0x5cb: V332 = 0x1
0x5cd: V333 = ADD 0x1 S1
0x5d1: V334 = 0x38e
0x5d4: JUMP 0x38e
---
Entry stack: [V10, 0x12d, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [V333, S0]
Exit stack: [V10, 0x12d, S8, S7, S6, S5, S4, S3, S2, V333, S0]

================================

Block 0x5d5
[0x5d5:0x5d8]
---
Predecessors: [0x38e]
Successors: [0x5d9]
---
0x5d5 JUMPDEST
0x5d6 DUP3
0x5d7 SWAP5
0x5d8 POP
---
0x5d5: JUMPDEST 
---
Entry stack: [V10, 0x12d, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S2, S3, S2, S1, S0]
Exit stack: [V10, 0x12d, S8, S7, S6, S5, S2, S3, S2, S1, S0]

================================

Block 0x5d9
[0x5d9:0x5e4]
---
Predecessors: [0x5d5]
Successors: [0x12d]
---
0x5d9 JUMPDEST
0x5da POP
0x5db POP
0x5dc POP
0x5dd POP
0x5de SWAP5
0x5df SWAP4
0x5e0 POP
0x5e1 POP
0x5e2 POP
0x5e3 POP
0x5e4 JUMP
---
0x5d9: JUMPDEST 
0x5e4: JUMP 0x12d
---
Entry stack: [V10, 0x12d, V51, V56, V65, V63, S4, V51, S2, S1, S0]
Stack pops: 10
Stack additions: [S4]
Exit stack: [V10, S4]

================================

Block 0x5e5
[0x5e5:0x5f8]
---
Predecessors: [0x349, 0x351]
Successors: [0x351, 0x35b]
---
0x5e5 JUMPDEST
0x5e6 PUSH1 0x20
0x5e8 PUSH1 0x40
0x5ea MLOAD
0x5eb SWAP1
0x5ec DUP2
0x5ed ADD
0x5ee PUSH1 0x40
0x5f0 MSTORE
0x5f1 DUP1
0x5f2 PUSH1 0x0
0x5f4 DUP2
0x5f5 MSTORE
0x5f6 POP
0x5f7 SWAP1
0x5f8 JUMP
---
0x5e5: JUMPDEST 
0x5e6: V335 = 0x20
0x5e8: V336 = 0x40
0x5ea: V337 = M[0x40]
0x5ed: V338 = ADD V337 0x20
0x5ee: V339 = 0x40
0x5f0: M[0x40] = V338
0x5f2: V340 = 0x0
0x5f5: M[V337] = 0x0
0x5f8: JUMP {0x351, 0x35b}
---
Entry stack: [V10, 0x12d, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x351, 0x35b}]
Stack pops: 1
Stack additions: [V337]
Exit stack: [V10, 0x12d, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V337]

================================

Block 0x5f9
[0x5f9:0x624]
---
Predecessors: []
Successors: []
---
0x5f9 STOP
0x5fa LOG1
0x5fb PUSH6 0x627a7a723058
0x602 SHA3
0x603 MISSING 0xdc
0x604 MISSING 0xe8
0x605 ORIGIN
0x606 BLOCKHASH
0x607 LOG2
0x608 MISSING 0x2f
0x609 ISZERO
0x60a LOG2
0x60b MISSING 0xc5
0x60c DELEGATECALL
0x60d MISSING 0xd8
0x60e PUSH17 0xbe300687dd68b413d576597078c3b89567
0x620 DUP14
0x621 SELFDESTRUCT
0x622 MISSING 0xa6
0x623 STOP
0x624 MISSING 0x29
---
0x5f9: STOP 
0x5fa: LOG S0 S1 S2
0x5fb: V341 = 0x627a7a723058
0x602: V342 = SHA3 0x627a7a723058 S3
0x603: MISSING 0xdc
0x604: MISSING 0xe8
0x605: V343 = ORIGIN
0x606: V344 = BLOCKHASH V343
0x607: LOG V344 S0 S1 S2
0x608: MISSING 0x2f
0x609: V345 = ISZERO S0
0x60a: LOG V345 S1 S2 S3
0x60b: MISSING 0xc5
0x60c: V346 = DELEGATECALL S0 S1 S2 S3 S4 S5
0x60d: MISSING 0xd8
0x60e: V347 = 0xbe300687dd68b413d576597078c3b89567
0x621: SELFDESTRUCT S12
0x622: MISSING 0xa6
0x623: STOP 
0x624: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V342, V346, 0xbe300687dd68b413d576597078c3b89567, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12]
Exit stack: []

================================

Function 0:
Public function signature: 0x1049334f
Entry block: 0x57
Exit block: 0x548
Body: 0x57, 0x5e, 0x62, 0xad, 0x12d, 0x155, 0x15e, 0x166, 0x171, 0x185, 0x197, 0x26e, 0x274, 0x312, 0x316, 0x323, 0x327, 0x338, 0x342, 0x38e, 0x39a, 0x3c8, 0x3c9, 0x49c, 0x4a0, 0x4ad, 0x4b1, 0x4c8, 0x4c9, 0x4fc, 0x4fd, 0x538, 0x548, 0x549, 0x56b, 0x57b, 0x57c, 0x58f, 0x5b7, 0x5b8, 0x5c7, 0x5c8, 0x5d5, 0x5d9

Function 1:
Public function signature: 0xcac7fc71
Entry block: 0xc3
Exit block: 0x57b
Body: 0xad, 0xc3, 0xca, 0xce, 0x12d, 0x155, 0x15e, 0x166, 0x171, 0x185, 0x197, 0x26e, 0x274, 0x312, 0x316, 0x323, 0x327, 0x338, 0x342, 0x349, 0x351, 0x35b, 0x373, 0x375, 0x386, 0x38e, 0x39a, 0x3c8, 0x3c9, 0x49c, 0x4a0, 0x4ad, 0x4b1, 0x4c8, 0x4c9, 0x4fc, 0x4fd, 0x538, 0x548, 0x549, 0x56b, 0x57b, 0x57c, 0x58f, 0x5b7, 0x5b8, 0x5c7, 0x5c8, 0x5d5, 0x5d9, 0x5e5

Function 2:
Public fallback function
Entry block: 0x4a
Exit block: 0x4e
Body: 0x4a, 0x4e

