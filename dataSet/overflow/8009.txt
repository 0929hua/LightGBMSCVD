Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x5c]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x1f6d4942
0x3c EQ
0x3d PUSH2 0x5c
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x1f6d4942
0x3c: V13 = EQ 0x1f6d4942 V11
0x3d: V14 = 0x5c
0x40: JUMPI 0x5c V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xcc]
---
0x41 DUP1
0x42 PUSH4 0x88e6afa6
0x47 EQ
0x48 PUSH2 0xcc
0x4b JUMPI
---
0x42: V15 = 0x88e6afa6
0x47: V16 = EQ 0x88e6afa6 V11
0x48: V17 = 0xcc
0x4b: JUMPI 0xcc V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xf7]
---
0x4c DUP1
0x4d PUSH4 0xc42bb1e4
0x52 EQ
0x53 PUSH2 0xf7
0x56 JUMPI
---
0x4d: V18 = 0xc42bb1e4
0x52: V19 = EQ 0xc42bb1e4 V11
0x53: V20 = 0xf7
0x56: JUMPI 0xf7 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x5b]
---
Predecessors: [0x0, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x57: JUMPDEST 
0x58: V21 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0x63]
---
Predecessors: [0xd]
Successors: [0x64, 0x68]
---
0x5c JUMPDEST
0x5d CALLVALUE
0x5e DUP1
0x5f ISZERO
0x60 PUSH2 0x68
0x63 JUMPI
---
0x5c: JUMPDEST 
0x5d: V22 = CALLVALUE
0x5f: V23 = ISZERO V22
0x60: V24 = 0x68
0x63: JUMPI 0x68 V23
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V22]
Exit stack: [V11, V22]

================================

Block 0x64
[0x64:0x67]
---
Predecessors: [0x5c]
Successors: []
---
0x64 PUSH1 0x0
0x66 DUP1
0x67 REVERT
---
0x64: V25 = 0x0
0x67: REVERT 0x0 0x0
---
Entry stack: [V11, V22]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V22]

================================

Block 0x68
[0x68:0x9c]
---
Predecessors: [0x5c]
Successors: [0x122]
---
0x68 JUMPDEST
0x69 POP
0x6a PUSH2 0x9d
0x6d PUSH1 0x4
0x6f DUP1
0x70 CALLDATASIZE
0x71 SUB
0x72 DUP2
0x73 ADD
0x74 SWAP1
0x75 DUP1
0x76 DUP1
0x77 CALLDATALOAD
0x78 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8d AND
0x8e SWAP1
0x8f PUSH1 0x20
0x91 ADD
0x92 SWAP1
0x93 SWAP3
0x94 SWAP2
0x95 SWAP1
0x96 POP
0x97 POP
0x98 POP
0x99 PUSH2 0x122
0x9c JUMP
---
0x68: JUMPDEST 
0x6a: V26 = 0x9d
0x6d: V27 = 0x4
0x70: V28 = CALLDATASIZE
0x71: V29 = SUB V28 0x4
0x73: V30 = ADD 0x4 V29
0x77: V31 = CALLDATALOAD 0x4
0x78: V32 = 0xffffffffffffffffffffffffffffffffffffffff
0x8d: V33 = AND 0xffffffffffffffffffffffffffffffffffffffff V31
0x8f: V34 = 0x20
0x91: V35 = ADD 0x20 0x4
0x99: V36 = 0x122
0x9c: JUMP 0x122
---
Entry stack: [V11, V22]
Stack pops: 1
Stack additions: [0x9d, V33]
Exit stack: [V11, 0x9d, V33]

================================

Block 0x9d
[0x9d:0xcb]
---
Predecessors: [0x122]
Successors: []
---
0x9d JUMPDEST
0x9e PUSH1 0x40
0xa0 MLOAD
0xa1 DUP1
0xa2 DUP6
0xa3 DUP2
0xa4 MSTORE
0xa5 PUSH1 0x20
0xa7 ADD
0xa8 DUP5
0xa9 DUP2
0xaa MSTORE
0xab PUSH1 0x20
0xad ADD
0xae DUP4
0xaf DUP2
0xb0 MSTORE
0xb1 PUSH1 0x20
0xb3 ADD
0xb4 DUP3
0xb5 ISZERO
0xb6 ISZERO
0xb7 ISZERO
0xb8 ISZERO
0xb9 DUP2
0xba MSTORE
0xbb PUSH1 0x20
0xbd ADD
0xbe SWAP5
0xbf POP
0xc0 POP
0xc1 POP
0xc2 POP
0xc3 POP
0xc4 PUSH1 0x40
0xc6 MLOAD
0xc7 DUP1
0xc8 SWAP2
0xc9 SUB
0xca SWAP1
0xcb RETURN
---
0x9d: JUMPDEST 
0x9e: V37 = 0x40
0xa0: V38 = M[0x40]
0xa4: M[V38] = V89
0xa5: V39 = 0x20
0xa7: V40 = ADD 0x20 V38
0xaa: M[V40] = V92
0xab: V41 = 0x20
0xad: V42 = ADD 0x20 V40
0xb0: M[V42] = V95
0xb1: V43 = 0x20
0xb3: V44 = ADD 0x20 V42
0xb5: V45 = ISZERO V104
0xb6: V46 = ISZERO V45
0xb7: V47 = ISZERO V46
0xb8: V48 = ISZERO V47
0xba: M[V44] = V48
0xbb: V49 = 0x20
0xbd: V50 = ADD 0x20 V44
0xc4: V51 = 0x40
0xc6: V52 = M[0x40]
0xc9: V53 = SUB V50 V52
0xcb: RETURN V52 V53
---
Entry stack: [V11, 0x9d, V89, V92, V95, V104]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x9d]

================================

Block 0xcc
[0xcc:0xd3]
---
Predecessors: [0x41]
Successors: [0xd4, 0xd8]
---
0xcc JUMPDEST
0xcd CALLVALUE
0xce DUP1
0xcf ISZERO
0xd0 PUSH2 0xd8
0xd3 JUMPI
---
0xcc: JUMPDEST 
0xcd: V54 = CALLVALUE
0xcf: V55 = ISZERO V54
0xd0: V56 = 0xd8
0xd3: JUMPI 0xd8 V55
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V54]
Exit stack: [V11, V54]

================================

Block 0xd4
[0xd4:0xd7]
---
Predecessors: [0xcc]
Successors: []
---
0xd4 PUSH1 0x0
0xd6 DUP1
0xd7 REVERT
---
0xd4: V57 = 0x0
0xd7: REVERT 0x0 0x0
---
Entry stack: [V11, V54]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V54]

================================

Block 0xd8
[0xd8:0xe0]
---
Predecessors: [0xcc]
Successors: [0x15f]
---
0xd8 JUMPDEST
0xd9 POP
0xda PUSH2 0xe1
0xdd PUSH2 0x15f
0xe0 JUMP
---
0xd8: JUMPDEST 
0xda: V58 = 0xe1
0xdd: V59 = 0x15f
0xe0: JUMP 0x15f
---
Entry stack: [V11, V54]
Stack pops: 1
Stack additions: [0xe1]
Exit stack: [V11, 0xe1]

================================

Block 0xe1
[0xe1:0xf6]
---
Predecessors: [0x15f]
Successors: []
---
0xe1 JUMPDEST
0xe2 PUSH1 0x40
0xe4 MLOAD
0xe5 DUP1
0xe6 DUP3
0xe7 DUP2
0xe8 MSTORE
0xe9 PUSH1 0x20
0xeb ADD
0xec SWAP2
0xed POP
0xee POP
0xef PUSH1 0x40
0xf1 MLOAD
0xf2 DUP1
0xf3 SWAP2
0xf4 SUB
0xf5 SWAP1
0xf6 RETURN
---
0xe1: JUMPDEST 
0xe2: V60 = 0x40
0xe4: V61 = M[0x40]
0xe8: M[V61] = V106
0xe9: V62 = 0x20
0xeb: V63 = ADD 0x20 V61
0xef: V64 = 0x40
0xf1: V65 = M[0x40]
0xf4: V66 = SUB V63 V65
0xf6: RETURN V65 V66
---
Entry stack: [V11, 0xe1, V106]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xe1]

================================

Block 0xf7
[0xf7:0xfe]
---
Predecessors: [0x4c]
Successors: [0xff, 0x103]
---
0xf7 JUMPDEST
0xf8 CALLVALUE
0xf9 DUP1
0xfa ISZERO
0xfb PUSH2 0x103
0xfe JUMPI
---
0xf7: JUMPDEST 
0xf8: V67 = CALLVALUE
0xfa: V68 = ISZERO V67
0xfb: V69 = 0x103
0xfe: JUMPI 0x103 V68
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V67]
Exit stack: [V11, V67]

================================

Block 0xff
[0xff:0x102]
---
Predecessors: [0xf7]
Successors: []
---
0xff PUSH1 0x0
0x101 DUP1
0x102 REVERT
---
0xff: V70 = 0x0
0x102: REVERT 0x0 0x0
---
Entry stack: [V11, V67]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V67]

================================

Block 0x103
[0x103:0x10b]
---
Predecessors: [0xf7]
Successors: [0x165]
---
0x103 JUMPDEST
0x104 POP
0x105 PUSH2 0x10c
0x108 PUSH2 0x165
0x10b JUMP
---
0x103: JUMPDEST 
0x105: V71 = 0x10c
0x108: V72 = 0x165
0x10b: JUMP 0x165
---
Entry stack: [V11, V67]
Stack pops: 1
Stack additions: [0x10c]
Exit stack: [V11, 0x10c]

================================

Block 0x10c
[0x10c:0x121]
---
Predecessors: [0x165]
Successors: []
---
0x10c JUMPDEST
0x10d PUSH1 0x40
0x10f MLOAD
0x110 DUP1
0x111 DUP3
0x112 DUP2
0x113 MSTORE
0x114 PUSH1 0x20
0x116 ADD
0x117 SWAP2
0x118 POP
0x119 POP
0x11a PUSH1 0x40
0x11c MLOAD
0x11d DUP1
0x11e SWAP2
0x11f SUB
0x120 SWAP1
0x121 RETURN
---
0x10c: JUMPDEST 
0x10d: V73 = 0x40
0x10f: V74 = M[0x40]
0x113: M[V74] = V108
0x114: V75 = 0x20
0x116: V76 = ADD 0x20 V74
0x11a: V77 = 0x40
0x11c: V78 = M[0x40]
0x11f: V79 = SUB V76 V78
0x121: RETURN V78 V79
---
Entry stack: [V11, 0x10c, V108]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x10c]

================================

Block 0x122
[0x122:0x15e]
---
Predecessors: [0x68]
Successors: [0x9d]
---
0x122 JUMPDEST
0x123 PUSH1 0x0
0x125 PUSH1 0x20
0x127 MSTORE
0x128 DUP1
0x129 PUSH1 0x0
0x12b MSTORE
0x12c PUSH1 0x40
0x12e PUSH1 0x0
0x130 SHA3
0x131 PUSH1 0x0
0x133 SWAP2
0x134 POP
0x135 SWAP1
0x136 POP
0x137 DUP1
0x138 PUSH1 0x0
0x13a ADD
0x13b SLOAD
0x13c SWAP1
0x13d DUP1
0x13e PUSH1 0x1
0x140 ADD
0x141 SLOAD
0x142 SWAP1
0x143 DUP1
0x144 PUSH1 0x2
0x146 ADD
0x147 SLOAD
0x148 SWAP1
0x149 DUP1
0x14a PUSH1 0x3
0x14c ADD
0x14d PUSH1 0x0
0x14f SWAP1
0x150 SLOAD
0x151 SWAP1
0x152 PUSH2 0x100
0x155 EXP
0x156 SWAP1
0x157 DIV
0x158 PUSH1 0xff
0x15a AND
0x15b SWAP1
0x15c POP
0x15d DUP5
0x15e JUMP
---
0x122: JUMPDEST 
0x123: V80 = 0x0
0x125: V81 = 0x20
0x127: M[0x20] = 0x0
0x129: V82 = 0x0
0x12b: M[0x0] = V33
0x12c: V83 = 0x40
0x12e: V84 = 0x0
0x130: V85 = SHA3 0x0 0x40
0x131: V86 = 0x0
0x138: V87 = 0x0
0x13a: V88 = ADD 0x0 V85
0x13b: V89 = S[V88]
0x13e: V90 = 0x1
0x140: V91 = ADD 0x1 V85
0x141: V92 = S[V91]
0x144: V93 = 0x2
0x146: V94 = ADD 0x2 V85
0x147: V95 = S[V94]
0x14a: V96 = 0x3
0x14c: V97 = ADD 0x3 V85
0x14d: V98 = 0x0
0x150: V99 = S[V97]
0x152: V100 = 0x100
0x155: V101 = EXP 0x100 0x0
0x157: V102 = DIV V99 0x1
0x158: V103 = 0xff
0x15a: V104 = AND 0xff V102
0x15e: JUMP 0x9d
---
Entry stack: [V11, 0x9d, V33]
Stack pops: 2
Stack additions: [S1, V89, V92, V95, V104]
Exit stack: [V11, 0x9d, V89, V92, V95, V104]

================================

Block 0x15f
[0x15f:0x164]
---
Predecessors: [0xd8]
Successors: [0xe1]
---
0x15f JUMPDEST
0x160 PUSH1 0x2
0x162 SLOAD
0x163 DUP2
0x164 JUMP
---
0x15f: JUMPDEST 
0x160: V105 = 0x2
0x162: V106 = S[0x2]
0x164: JUMP 0xe1
---
Entry stack: [V11, 0xe1]
Stack pops: 1
Stack additions: [S0, V106]
Exit stack: [V11, 0xe1, V106]

================================

Block 0x165
[0x165:0x16a]
---
Predecessors: [0x103]
Successors: [0x10c]
---
0x165 JUMPDEST
0x166 PUSH1 0x1
0x168 SLOAD
0x169 DUP2
0x16a JUMP
---
0x165: JUMPDEST 
0x166: V107 = 0x1
0x168: V108 = S[0x1]
0x16a: JUMP 0x10c
---
Entry stack: [V11, 0x10c]
Stack pops: 1
Stack additions: [S0, V108]
Exit stack: [V11, 0x10c, V108]

================================

Block 0x16b
[0x16b:0x1a3]
---
Predecessors: []
Successors: [0x1a4]
---
0x16b STOP
0x16c LOG1
0x16d PUSH6 0x627a7a723058
0x174 SHA3
0x175 DIFFICULTY
0x176 MISSING 0xc5
0x177 SWAP1
0x178 DUP6
0x179 MISSING 0xe2
0x17a DUP11
0x17b DUP11
0x17c MSTORE8
0x17d MISSING 0xce
0x17e NUMBER
0x17f MISSING 0xa8
0x180 GT
0x181 MISSING 0xc8
0x182 EQ
0x183 BYTE
0x184 MISSING 0x28
0x185 MISSING 0xe0
0x186 MISSING 0xd8
0x187 MISSING 0x22
0x188 MISSING 0x46
0x189 MISSING 0xbb
0x18a SSTORE
0x18b MISSING 0xe4
0x18c MISSING 0xe9
0x18d MISSING 0xfc
0x18e MISSING 0xc8
0x18f MISSING 0xaf
0x190 MISSING 0xb7
0x191 MISSING 0xae
0x192 MISSING 0x46
0x193 SSTORE
0x194 SHR
0x195 STOP
0x196 MISSING 0x29
0x197 PUSH1 0x80
0x199 PUSH1 0x40
0x19b MSTORE
0x19c PUSH1 0x4
0x19e CALLDATASIZE
0x19f LT
0x1a0 PUSH2 0xc5
0x1a3 JUMPI
---
0x16b: STOP 
0x16c: LOG S0 S1 S2
0x16d: V109 = 0x627a7a723058
0x174: V110 = SHA3 0x627a7a723058 S3
0x175: V111 = DIFFICULTY
0x176: MISSING 0xc5
0x179: MISSING 0xe2
0x17c: M8[S9] = S10
0x17d: MISSING 0xce
0x17e: V112 = NUMBER
0x17f: MISSING 0xa8
0x180: V113 = GT S0 S1
0x181: MISSING 0xc8
0x182: V114 = EQ S0 S1
0x183: V115 = BYTE V114 S2
0x184: MISSING 0x28
0x185: MISSING 0xe0
0x186: MISSING 0xd8
0x187: MISSING 0x22
0x188: MISSING 0x46
0x189: MISSING 0xbb
0x18a: S[S0] = S1
0x18b: MISSING 0xe4
0x18c: MISSING 0xe9
0x18d: MISSING 0xfc
0x18e: MISSING 0xc8
0x18f: MISSING 0xaf
0x190: MISSING 0xb7
0x191: MISSING 0xae
0x192: MISSING 0x46
0x193: S[S0] = S1
0x194: V116 = SHR S2 S3
0x195: STOP 
0x196: MISSING 0x29
0x197: V117 = 0x80
0x199: V118 = 0x40
0x19b: M[0x40] = 0x80
0x19c: V119 = 0x4
0x19e: V120 = CALLDATASIZE
0x19f: V121 = LT V120 0x4
0x1a0: V122 = 0xc5
0x1a3: THROWI V121
---
Entry stack: []
Stack pops: 0
Stack additions: [V111, V110, S5, S1, S0, S2, S3, S4, S5, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, V112, V113, V115, V116]
Exit stack: []

================================

Block 0x1a4
[0x1a4:0x1d7]
---
Predecessors: [0x16b]
Successors: [0x1d8]
---
0x1a4 PUSH1 0x0
0x1a6 CALLDATALOAD
0x1a7 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1c5 SWAP1
0x1c6 DIV
0x1c7 PUSH4 0xffffffff
0x1cc AND
0x1cd DUP1
0x1ce PUSH4 0x1769f049
0x1d3 EQ
0x1d4 PUSH2 0xca
0x1d7 JUMPI
---
0x1a4: V123 = 0x0
0x1a6: V124 = CALLDATALOAD 0x0
0x1a7: V125 = 0x100000000000000000000000000000000000000000000000000000000
0x1c6: V126 = DIV V124 0x100000000000000000000000000000000000000000000000000000000
0x1c7: V127 = 0xffffffff
0x1cc: V128 = AND 0xffffffff V126
0x1ce: V129 = 0x1769f049
0x1d3: V130 = EQ 0x1769f049 V128
0x1d4: V131 = 0xca
0x1d7: THROWI V130
---
Entry stack: []
Stack pops: 0
Stack additions: [V128]
Exit stack: [V128]

================================

Block 0x1d8
[0x1d8:0x1e2]
---
Predecessors: [0x1a4]
Successors: [0x1e3]
---
0x1d8 DUP1
0x1d9 PUSH4 0x306c7290
0x1de EQ
0x1df PUSH2 0xf5
0x1e2 JUMPI
---
0x1d9: V132 = 0x306c7290
0x1de: V133 = EQ 0x306c7290 V128
0x1df: V134 = 0xf5
0x1e2: THROWI V133
---
Entry stack: [V128]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V128]

================================

Block 0x1e3
[0x1e3:0x1ed]
---
Predecessors: [0x1d8]
Successors: [0x1ee]
---
0x1e3 DUP1
0x1e4 PUSH4 0x3ccfd60b
0x1e9 EQ
0x1ea PUSH2 0x120
0x1ed JUMPI
---
0x1e4: V135 = 0x3ccfd60b
0x1e9: V136 = EQ 0x3ccfd60b V128
0x1ea: V137 = 0x120
0x1ed: THROWI V136
---
Entry stack: [V128]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V128]

================================

Block 0x1ee
[0x1ee:0x1f8]
---
Predecessors: [0x1e3]
Successors: [0x1f9]
---
0x1ee DUP1
0x1ef PUSH4 0x42263aa2
0x1f4 EQ
0x1f5 PUSH2 0x137
0x1f8 JUMPI
---
0x1ef: V138 = 0x42263aa2
0x1f4: V139 = EQ 0x42263aa2 V128
0x1f5: V140 = 0x137
0x1f8: THROWI V139
---
Entry stack: [V128]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V128]

================================

Block 0x1f9
[0x1f9:0x203]
---
Predecessors: [0x1ee]
Successors: [0x204]
---
0x1f9 DUP1
0x1fa PUSH4 0x48103077
0x1ff EQ
0x200 PUSH2 0x17a
0x203 JUMPI
---
0x1fa: V141 = 0x48103077
0x1ff: V142 = EQ 0x48103077 V128
0x200: V143 = 0x17a
0x203: THROWI V142
---
Entry stack: [V128]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V128]

================================

Block 0x204
[0x204:0x20e]
---
Predecessors: [0x1f9]
Successors: [0x20f]
---
0x204 DUP1
0x205 PUSH4 0x60e393c6
0x20a EQ
0x20b PUSH2 0x191
0x20e JUMPI
---
0x205: V144 = 0x60e393c6
0x20a: V145 = EQ 0x60e393c6 V128
0x20b: V146 = 0x191
0x20e: THROWI V145
---
Entry stack: [V128]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V128]

================================

Block 0x20f
[0x20f:0x219]
---
Predecessors: [0x204]
Successors: [0x21a]
---
0x20f DUP1
0x210 PUSH4 0x82b2f95f
0x215 EQ
0x216 PUSH2 0x1e8
0x219 JUMPI
---
0x210: V147 = 0x82b2f95f
0x215: V148 = EQ 0x82b2f95f V128
0x216: V149 = 0x1e8
0x219: THROWI V148
---
Entry stack: [V128]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V128]

================================

Block 0x21a
[0x21a:0x224]
---
Predecessors: [0x20f]
Successors: [0x225]
---
0x21a DUP1
0x21b PUSH4 0x885ae1dd
0x220 EQ
0x221 PUSH2 0x23f
0x224 JUMPI
---
0x21b: V150 = 0x885ae1dd
0x220: V151 = EQ 0x885ae1dd V128
0x221: V152 = 0x23f
0x224: THROWI V151
---
Entry stack: [V128]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V128]

================================

Block 0x225
[0x225:0x22f]
---
Predecessors: [0x21a]
Successors: [0x230]
---
0x225 DUP1
0x226 PUSH4 0xa2e800ad
0x22b EQ
0x22c PUSH2 0x29c
0x22f JUMPI
---
0x226: V153 = 0xa2e800ad
0x22b: V154 = EQ 0xa2e800ad V128
0x22c: V155 = 0x29c
0x22f: THROWI V154
---
Entry stack: [V128]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V128]

================================

Block 0x230
[0x230:0x23a]
---
Predecessors: [0x225]
Successors: [0x23b]
---
0x230 DUP1
0x231 PUSH4 0xa852d5ba
0x236 EQ
0x237 PUSH2 0x2cd
0x23a JUMPI
---
0x231: V156 = 0xa852d5ba
0x236: V157 = EQ 0xa852d5ba V128
0x237: V158 = 0x2cd
0x23a: THROWI V157
---
Entry stack: [V128]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V128]

================================

Block 0x23b
[0x23b:0x245]
---
Predecessors: [0x230]
Successors: [0x246]
---
0x23b DUP1
0x23c PUSH4 0xd54839bf
0x241 EQ
0x242 PUSH2 0x310
0x245 JUMPI
---
0x23c: V159 = 0xd54839bf
0x241: V160 = EQ 0xd54839bf V128
0x242: V161 = 0x310
0x245: THROWI V160
---
Entry stack: [V128]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V128]

================================

Block 0x246
[0x246:0x250]
---
Predecessors: [0x23b]
Successors: [0x251]
---
0x246 DUP1
0x247 PUSH4 0xd6565a2d
0x24c EQ
0x24d PUSH2 0x33b
0x250 JUMPI
---
0x247: V162 = 0xd6565a2d
0x24c: V163 = EQ 0xd6565a2d V128
0x24d: V164 = 0x33b
0x250: THROWI V163
---
Entry stack: [V128]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V128]

================================

Block 0x251
[0x251:0x25b]
---
Predecessors: [0x246]
Successors: [0x25c]
---
0x251 DUP1
0x252 PUSH4 0xfc0c546a
0x257 EQ
0x258 PUSH2 0x383
0x25b JUMPI
---
0x252: V165 = 0xfc0c546a
0x257: V166 = EQ 0xfc0c546a V128
0x258: V167 = 0x383
0x25b: THROWI V166
---
Entry stack: [V128]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V128]

================================

Block 0x25c
[0x25c:0x268]
---
Predecessors: [0x251]
Successors: [0x269]
---
0x25c JUMPDEST
0x25d PUSH1 0x0
0x25f DUP1
0x260 REVERT
0x261 JUMPDEST
0x262 CALLVALUE
0x263 DUP1
0x264 ISZERO
0x265 PUSH2 0xd6
0x268 JUMPI
---
0x25c: JUMPDEST 
0x25d: V168 = 0x0
0x260: REVERT 0x0 0x0
0x261: JUMPDEST 
0x262: V169 = CALLVALUE
0x264: V170 = ISZERO V169
0x265: V171 = 0xd6
0x268: THROWI V170
---
Entry stack: [V128]
Stack pops: 0
Stack additions: [V169]
Exit stack: []

================================

Block 0x269
[0x269:0x293]
---
Predecessors: [0x25c]
Successors: [0x294]
---
0x269 PUSH1 0x0
0x26b DUP1
0x26c REVERT
0x26d JUMPDEST
0x26e POP
0x26f PUSH2 0xdf
0x272 PUSH2 0x3da
0x275 JUMP
0x276 JUMPDEST
0x277 PUSH1 0x40
0x279 MLOAD
0x27a DUP1
0x27b DUP3
0x27c DUP2
0x27d MSTORE
0x27e PUSH1 0x20
0x280 ADD
0x281 SWAP2
0x282 POP
0x283 POP
0x284 PUSH1 0x40
0x286 MLOAD
0x287 DUP1
0x288 SWAP2
0x289 SUB
0x28a SWAP1
0x28b RETURN
0x28c JUMPDEST
0x28d CALLVALUE
0x28e DUP1
0x28f ISZERO
0x290 PUSH2 0x101
0x293 JUMPI
---
0x269: V172 = 0x0
0x26c: REVERT 0x0 0x0
0x26d: JUMPDEST 
0x26f: V173 = 0xdf
0x272: V174 = 0x3da
0x275: THROW 
0x276: JUMPDEST 
0x277: V175 = 0x40
0x279: V176 = M[0x40]
0x27d: M[V176] = S0
0x27e: V177 = 0x20
0x280: V178 = ADD 0x20 V176
0x284: V179 = 0x40
0x286: V180 = M[0x40]
0x289: V181 = SUB V178 V180
0x28b: RETURN V180 V181
0x28c: JUMPDEST 
0x28d: V182 = CALLVALUE
0x28f: V183 = ISZERO V182
0x290: V184 = 0x101
0x293: THROWI V183
---
Entry stack: [V169]
Stack pops: 0
Stack additions: [0xdf, V182]
Exit stack: []

================================

Block 0x294
[0x294:0x2be]
---
Predecessors: [0x269]
Successors: [0x2bf]
---
0x294 PUSH1 0x0
0x296 DUP1
0x297 REVERT
0x298 JUMPDEST
0x299 POP
0x29a PUSH2 0x10a
0x29d PUSH2 0x3e0
0x2a0 JUMP
0x2a1 JUMPDEST
0x2a2 PUSH1 0x40
0x2a4 MLOAD
0x2a5 DUP1
0x2a6 DUP3
0x2a7 DUP2
0x2a8 MSTORE
0x2a9 PUSH1 0x20
0x2ab ADD
0x2ac SWAP2
0x2ad POP
0x2ae POP
0x2af PUSH1 0x40
0x2b1 MLOAD
0x2b2 DUP1
0x2b3 SWAP2
0x2b4 SUB
0x2b5 SWAP1
0x2b6 RETURN
0x2b7 JUMPDEST
0x2b8 CALLVALUE
0x2b9 DUP1
0x2ba ISZERO
0x2bb PUSH2 0x12c
0x2be JUMPI
---
0x294: V185 = 0x0
0x297: REVERT 0x0 0x0
0x298: JUMPDEST 
0x29a: V186 = 0x10a
0x29d: V187 = 0x3e0
0x2a0: THROW 
0x2a1: JUMPDEST 
0x2a2: V188 = 0x40
0x2a4: V189 = M[0x40]
0x2a8: M[V189] = S0
0x2a9: V190 = 0x20
0x2ab: V191 = ADD 0x20 V189
0x2af: V192 = 0x40
0x2b1: V193 = M[0x40]
0x2b4: V194 = SUB V191 V193
0x2b6: RETURN V193 V194
0x2b7: JUMPDEST 
0x2b8: V195 = CALLVALUE
0x2ba: V196 = ISZERO V195
0x2bb: V197 = 0x12c
0x2be: THROWI V196
---
Entry stack: [V182]
Stack pops: 0
Stack additions: [0x10a, V195]
Exit stack: []

================================

Block 0x2bf
[0x2bf:0x2d5]
---
Predecessors: [0x294]
Successors: [0x2d6]
---
0x2bf PUSH1 0x0
0x2c1 DUP1
0x2c2 REVERT
0x2c3 JUMPDEST
0x2c4 POP
0x2c5 PUSH2 0x135
0x2c8 PUSH2 0x3e6
0x2cb JUMP
0x2cc JUMPDEST
0x2cd STOP
0x2ce JUMPDEST
0x2cf CALLVALUE
0x2d0 DUP1
0x2d1 ISZERO
0x2d2 PUSH2 0x143
0x2d5 JUMPI
---
0x2bf: V198 = 0x0
0x2c2: REVERT 0x0 0x0
0x2c3: JUMPDEST 
0x2c5: V199 = 0x135
0x2c8: V200 = 0x3e6
0x2cb: THROW 
0x2cc: JUMPDEST 
0x2cd: STOP 
0x2ce: JUMPDEST 
0x2cf: V201 = CALLVALUE
0x2d1: V202 = ISZERO V201
0x2d2: V203 = 0x143
0x2d5: THROWI V202
---
Entry stack: [V195]
Stack pops: 0
Stack additions: [0x135, V201]
Exit stack: []

================================

Block 0x2d6
[0x2d6:0x318]
---
Predecessors: [0x2bf]
Successors: [0x319]
---
0x2d6 PUSH1 0x0
0x2d8 DUP1
0x2d9 REVERT
0x2da JUMPDEST
0x2db POP
0x2dc PUSH2 0x178
0x2df PUSH1 0x4
0x2e1 DUP1
0x2e2 CALLDATASIZE
0x2e3 SUB
0x2e4 DUP2
0x2e5 ADD
0x2e6 SWAP1
0x2e7 DUP1
0x2e8 DUP1
0x2e9 CALLDATALOAD
0x2ea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ff AND
0x300 SWAP1
0x301 PUSH1 0x20
0x303 ADD
0x304 SWAP1
0x305 SWAP3
0x306 SWAP2
0x307 SWAP1
0x308 POP
0x309 POP
0x30a POP
0x30b PUSH2 0x89f
0x30e JUMP
0x30f JUMPDEST
0x310 STOP
0x311 JUMPDEST
0x312 CALLVALUE
0x313 DUP1
0x314 ISZERO
0x315 PUSH2 0x186
0x318 JUMPI
---
0x2d6: V204 = 0x0
0x2d9: REVERT 0x0 0x0
0x2da: JUMPDEST 
0x2dc: V205 = 0x178
0x2df: V206 = 0x4
0x2e2: V207 = CALLDATASIZE
0x2e3: V208 = SUB V207 0x4
0x2e5: V209 = ADD 0x4 V208
0x2e9: V210 = CALLDATALOAD 0x4
0x2ea: V211 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ff: V212 = AND 0xffffffffffffffffffffffffffffffffffffffff V210
0x301: V213 = 0x20
0x303: V214 = ADD 0x20 0x4
0x30b: V215 = 0x89f
0x30e: THROW 
0x30f: JUMPDEST 
0x310: STOP 
0x311: JUMPDEST 
0x312: V216 = CALLVALUE
0x314: V217 = ISZERO V216
0x315: V218 = 0x186
0x318: THROWI V217
---
Entry stack: [V201]
Stack pops: 0
Stack additions: [V212, 0x178, V216]
Exit stack: []

================================

Block 0x319
[0x319:0x32f]
---
Predecessors: [0x2d6]
Successors: [0x330]
---
0x319 PUSH1 0x0
0x31b DUP1
0x31c REVERT
0x31d JUMPDEST
0x31e POP
0x31f PUSH2 0x18f
0x322 PUSH2 0x962
0x325 JUMP
0x326 JUMPDEST
0x327 STOP
0x328 JUMPDEST
0x329 CALLVALUE
0x32a DUP1
0x32b ISZERO
0x32c PUSH2 0x19d
0x32f JUMPI
---
0x319: V219 = 0x0
0x31c: REVERT 0x0 0x0
0x31d: JUMPDEST 
0x31f: V220 = 0x18f
0x322: V221 = 0x962
0x325: THROW 
0x326: JUMPDEST 
0x327: STOP 
0x328: JUMPDEST 
0x329: V222 = CALLVALUE
0x32b: V223 = ISZERO V222
0x32c: V224 = 0x19d
0x32f: THROWI V223
---
Entry stack: [V216]
Stack pops: 0
Stack additions: [0x18f, V222]
Exit stack: []

================================

Block 0x330
[0x330:0x386]
---
Predecessors: [0x319]
Successors: [0x387]
---
0x330 PUSH1 0x0
0x332 DUP1
0x333 REVERT
0x334 JUMPDEST
0x335 POP
0x336 PUSH2 0x1a6
0x339 PUSH2 0xbb6
0x33c JUMP
0x33d JUMPDEST
0x33e PUSH1 0x40
0x340 MLOAD
0x341 DUP1
0x342 DUP3
0x343 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x358 AND
0x359 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x36e AND
0x36f DUP2
0x370 MSTORE
0x371 PUSH1 0x20
0x373 ADD
0x374 SWAP2
0x375 POP
0x376 POP
0x377 PUSH1 0x40
0x379 MLOAD
0x37a DUP1
0x37b SWAP2
0x37c SUB
0x37d SWAP1
0x37e RETURN
0x37f JUMPDEST
0x380 CALLVALUE
0x381 DUP1
0x382 ISZERO
0x383 PUSH2 0x1f4
0x386 JUMPI
---
0x330: V225 = 0x0
0x333: REVERT 0x0 0x0
0x334: JUMPDEST 
0x336: V226 = 0x1a6
0x339: V227 = 0xbb6
0x33c: THROW 
0x33d: JUMPDEST 
0x33e: V228 = 0x40
0x340: V229 = M[0x40]
0x343: V230 = 0xffffffffffffffffffffffffffffffffffffffff
0x358: V231 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x359: V232 = 0xffffffffffffffffffffffffffffffffffffffff
0x36e: V233 = AND 0xffffffffffffffffffffffffffffffffffffffff V231
0x370: M[V229] = V233
0x371: V234 = 0x20
0x373: V235 = ADD 0x20 V229
0x377: V236 = 0x40
0x379: V237 = M[0x40]
0x37c: V238 = SUB V235 V237
0x37e: RETURN V237 V238
0x37f: JUMPDEST 
0x380: V239 = CALLVALUE
0x382: V240 = ISZERO V239
0x383: V241 = 0x1f4
0x386: THROWI V240
---
Entry stack: [V222]
Stack pops: 0
Stack additions: [0x1a6, V239]
Exit stack: []

================================

Block 0x387
[0x387:0x3dd]
---
Predecessors: [0x330]
Successors: [0x3de]
---
0x387 PUSH1 0x0
0x389 DUP1
0x38a REVERT
0x38b JUMPDEST
0x38c POP
0x38d PUSH2 0x1fd
0x390 PUSH2 0xbce
0x393 JUMP
0x394 JUMPDEST
0x395 PUSH1 0x40
0x397 MLOAD
0x398 DUP1
0x399 DUP3
0x39a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3af AND
0x3b0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c5 AND
0x3c6 DUP2
0x3c7 MSTORE
0x3c8 PUSH1 0x20
0x3ca ADD
0x3cb SWAP2
0x3cc POP
0x3cd POP
0x3ce PUSH1 0x40
0x3d0 MLOAD
0x3d1 DUP1
0x3d2 SWAP2
0x3d3 SUB
0x3d4 SWAP1
0x3d5 RETURN
0x3d6 JUMPDEST
0x3d7 CALLVALUE
0x3d8 DUP1
0x3d9 ISZERO
0x3da PUSH2 0x24b
0x3dd JUMPI
---
0x387: V242 = 0x0
0x38a: REVERT 0x0 0x0
0x38b: JUMPDEST 
0x38d: V243 = 0x1fd
0x390: V244 = 0xbce
0x393: THROW 
0x394: JUMPDEST 
0x395: V245 = 0x40
0x397: V246 = M[0x40]
0x39a: V247 = 0xffffffffffffffffffffffffffffffffffffffff
0x3af: V248 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x3b0: V249 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c5: V250 = AND 0xffffffffffffffffffffffffffffffffffffffff V248
0x3c7: M[V246] = V250
0x3c8: V251 = 0x20
0x3ca: V252 = ADD 0x20 V246
0x3ce: V253 = 0x40
0x3d0: V254 = M[0x40]
0x3d3: V255 = SUB V252 V254
0x3d5: RETURN V254 V255
0x3d6: JUMPDEST 
0x3d7: V256 = CALLVALUE
0x3d9: V257 = ISZERO V256
0x3da: V258 = 0x24b
0x3dd: THROWI V257
---
Entry stack: [V239]
Stack pops: 0
Stack additions: [0x1fd, V256]
Exit stack: []

================================

Block 0x3de
[0x3de:0x43a]
---
Predecessors: [0x387]
Successors: [0x43b]
---
0x3de PUSH1 0x0
0x3e0 DUP1
0x3e1 REVERT
0x3e2 JUMPDEST
0x3e3 POP
0x3e4 PUSH2 0x280
0x3e7 PUSH1 0x4
0x3e9 DUP1
0x3ea CALLDATASIZE
0x3eb SUB
0x3ec DUP2
0x3ed ADD
0x3ee SWAP1
0x3ef DUP1
0x3f0 DUP1
0x3f1 CALLDATALOAD
0x3f2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x407 AND
0x408 SWAP1
0x409 PUSH1 0x20
0x40b ADD
0x40c SWAP1
0x40d SWAP3
0x40e SWAP2
0x40f SWAP1
0x410 POP
0x411 POP
0x412 POP
0x413 PUSH2 0xbe6
0x416 JUMP
0x417 JUMPDEST
0x418 PUSH1 0x40
0x41a MLOAD
0x41b DUP1
0x41c DUP3
0x41d PUSH1 0xff
0x41f AND
0x420 PUSH1 0xff
0x422 AND
0x423 DUP2
0x424 MSTORE
0x425 PUSH1 0x20
0x427 ADD
0x428 SWAP2
0x429 POP
0x42a POP
0x42b PUSH1 0x40
0x42d MLOAD
0x42e DUP1
0x42f SWAP2
0x430 SUB
0x431 SWAP1
0x432 RETURN
0x433 JUMPDEST
0x434 CALLVALUE
0x435 DUP1
0x436 ISZERO
0x437 PUSH2 0x2a8
0x43a JUMPI
---
0x3de: V259 = 0x0
0x3e1: REVERT 0x0 0x0
0x3e2: JUMPDEST 
0x3e4: V260 = 0x280
0x3e7: V261 = 0x4
0x3ea: V262 = CALLDATASIZE
0x3eb: V263 = SUB V262 0x4
0x3ed: V264 = ADD 0x4 V263
0x3f1: V265 = CALLDATALOAD 0x4
0x3f2: V266 = 0xffffffffffffffffffffffffffffffffffffffff
0x407: V267 = AND 0xffffffffffffffffffffffffffffffffffffffff V265
0x409: V268 = 0x20
0x40b: V269 = ADD 0x20 0x4
0x413: V270 = 0xbe6
0x416: THROW 
0x417: JUMPDEST 
0x418: V271 = 0x40
0x41a: V272 = M[0x40]
0x41d: V273 = 0xff
0x41f: V274 = AND 0xff S0
0x420: V275 = 0xff
0x422: V276 = AND 0xff V274
0x424: M[V272] = V276
0x425: V277 = 0x20
0x427: V278 = ADD 0x20 V272
0x42b: V279 = 0x40
0x42d: V280 = M[0x40]
0x430: V281 = SUB V278 V280
0x432: RETURN V280 V281
0x433: JUMPDEST 
0x434: V282 = CALLVALUE
0x436: V283 = ISZERO V282
0x437: V284 = 0x2a8
0x43a: THROWI V283
---
Entry stack: [V256]
Stack pops: 0
Stack additions: [V267, 0x280, V282]
Exit stack: []

================================

Block 0x43b
[0x43b:0x46b]
---
Predecessors: [0x3de]
Successors: [0x46c]
---
0x43b PUSH1 0x0
0x43d DUP1
0x43e REVERT
0x43f JUMPDEST
0x440 POP
0x441 PUSH2 0x2b1
0x444 PUSH2 0xc06
0x447 JUMP
0x448 JUMPDEST
0x449 PUSH1 0x40
0x44b MLOAD
0x44c DUP1
0x44d DUP3
0x44e PUSH1 0xff
0x450 AND
0x451 PUSH1 0xff
0x453 AND
0x454 DUP2
0x455 MSTORE
0x456 PUSH1 0x20
0x458 ADD
0x459 SWAP2
0x45a POP
0x45b POP
0x45c PUSH1 0x40
0x45e MLOAD
0x45f DUP1
0x460 SWAP2
0x461 SUB
0x462 SWAP1
0x463 RETURN
0x464 JUMPDEST
0x465 CALLVALUE
0x466 DUP1
0x467 ISZERO
0x468 PUSH2 0x2d9
0x46b JUMPI
---
0x43b: V285 = 0x0
0x43e: REVERT 0x0 0x0
0x43f: JUMPDEST 
0x441: V286 = 0x2b1
0x444: V287 = 0xc06
0x447: THROW 
0x448: JUMPDEST 
0x449: V288 = 0x40
0x44b: V289 = M[0x40]
0x44e: V290 = 0xff
0x450: V291 = AND 0xff S0
0x451: V292 = 0xff
0x453: V293 = AND 0xff V291
0x455: M[V289] = V293
0x456: V294 = 0x20
0x458: V295 = ADD 0x20 V289
0x45c: V296 = 0x40
0x45e: V297 = M[0x40]
0x461: V298 = SUB V295 V297
0x463: RETURN V297 V298
0x464: JUMPDEST 
0x465: V299 = CALLVALUE
0x467: V300 = ISZERO V299
0x468: V301 = 0x2d9
0x46b: THROWI V300
---
Entry stack: [V282]
Stack pops: 0
Stack additions: [0x2b1, V299]
Exit stack: []

================================

Block 0x46c
[0x46c:0x4ae]
---
Predecessors: [0x43b]
Successors: [0x4af]
---
0x46c PUSH1 0x0
0x46e DUP1
0x46f REVERT
0x470 JUMPDEST
0x471 POP
0x472 PUSH2 0x30e
0x475 PUSH1 0x4
0x477 DUP1
0x478 CALLDATASIZE
0x479 SUB
0x47a DUP2
0x47b ADD
0x47c SWAP1
0x47d DUP1
0x47e DUP1
0x47f CALLDATALOAD
0x480 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x495 AND
0x496 SWAP1
0x497 PUSH1 0x20
0x499 ADD
0x49a SWAP1
0x49b SWAP3
0x49c SWAP2
0x49d SWAP1
0x49e POP
0x49f POP
0x4a0 POP
0x4a1 PUSH2 0xc19
0x4a4 JUMP
0x4a5 JUMPDEST
0x4a6 STOP
0x4a7 JUMPDEST
0x4a8 CALLVALUE
0x4a9 DUP1
0x4aa ISZERO
0x4ab PUSH2 0x31c
0x4ae JUMPI
---
0x46c: V302 = 0x0
0x46f: REVERT 0x0 0x0
0x470: JUMPDEST 
0x472: V303 = 0x30e
0x475: V304 = 0x4
0x478: V305 = CALLDATASIZE
0x479: V306 = SUB V305 0x4
0x47b: V307 = ADD 0x4 V306
0x47f: V308 = CALLDATALOAD 0x4
0x480: V309 = 0xffffffffffffffffffffffffffffffffffffffff
0x495: V310 = AND 0xffffffffffffffffffffffffffffffffffffffff V308
0x497: V311 = 0x20
0x499: V312 = ADD 0x20 0x4
0x4a1: V313 = 0xc19
0x4a4: THROW 
0x4a5: JUMPDEST 
0x4a6: STOP 
0x4a7: JUMPDEST 
0x4a8: V314 = CALLVALUE
0x4aa: V315 = ISZERO V314
0x4ab: V316 = 0x31c
0x4ae: THROWI V315
---
Entry stack: [V299]
Stack pops: 0
Stack additions: [V310, 0x30e, V314]
Exit stack: []

================================

Block 0x4af
[0x4af:0x4d9]
---
Predecessors: [0x46c]
Successors: [0x4da]
---
0x4af PUSH1 0x0
0x4b1 DUP1
0x4b2 REVERT
0x4b3 JUMPDEST
0x4b4 POP
0x4b5 PUSH2 0x325
0x4b8 PUSH2 0xe58
0x4bb JUMP
0x4bc JUMPDEST
0x4bd PUSH1 0x40
0x4bf MLOAD
0x4c0 DUP1
0x4c1 DUP3
0x4c2 DUP2
0x4c3 MSTORE
0x4c4 PUSH1 0x20
0x4c6 ADD
0x4c7 SWAP2
0x4c8 POP
0x4c9 POP
0x4ca PUSH1 0x40
0x4cc MLOAD
0x4cd DUP1
0x4ce SWAP2
0x4cf SUB
0x4d0 SWAP1
0x4d1 RETURN
0x4d2 JUMPDEST
0x4d3 CALLVALUE
0x4d4 DUP1
0x4d5 ISZERO
0x4d6 PUSH2 0x347
0x4d9 JUMPI
---
0x4af: V317 = 0x0
0x4b2: REVERT 0x0 0x0
0x4b3: JUMPDEST 
0x4b5: V318 = 0x325
0x4b8: V319 = 0xe58
0x4bb: THROW 
0x4bc: JUMPDEST 
0x4bd: V320 = 0x40
0x4bf: V321 = M[0x40]
0x4c3: M[V321] = S0
0x4c4: V322 = 0x20
0x4c6: V323 = ADD 0x20 V321
0x4ca: V324 = 0x40
0x4cc: V325 = M[0x40]
0x4cf: V326 = SUB V323 V325
0x4d1: RETURN V325 V326
0x4d2: JUMPDEST 
0x4d3: V327 = CALLVALUE
0x4d5: V328 = ISZERO V327
0x4d6: V329 = 0x347
0x4d9: THROWI V328
---
Entry stack: [V314]
Stack pops: 0
Stack additions: [0x325, V327]
Exit stack: []

================================

Block 0x4da
[0x4da:0x521]
---
Predecessors: [0x4af]
Successors: [0x522]
---
0x4da PUSH1 0x0
0x4dc DUP1
0x4dd REVERT
0x4de JUMPDEST
0x4df POP
0x4e0 PUSH2 0x366
0x4e3 PUSH1 0x4
0x4e5 DUP1
0x4e6 CALLDATASIZE
0x4e7 SUB
0x4e8 DUP2
0x4e9 ADD
0x4ea SWAP1
0x4eb DUP1
0x4ec DUP1
0x4ed CALLDATALOAD
0x4ee SWAP1
0x4ef PUSH1 0x20
0x4f1 ADD
0x4f2 SWAP1
0x4f3 SWAP3
0x4f4 SWAP2
0x4f5 SWAP1
0x4f6 POP
0x4f7 POP
0x4f8 POP
0x4f9 PUSH2 0xe5e
0x4fc JUMP
0x4fd JUMPDEST
0x4fe PUSH1 0x40
0x500 MLOAD
0x501 DUP1
0x502 DUP4
0x503 DUP2
0x504 MSTORE
0x505 PUSH1 0x20
0x507 ADD
0x508 DUP3
0x509 DUP2
0x50a MSTORE
0x50b PUSH1 0x20
0x50d ADD
0x50e SWAP3
0x50f POP
0x510 POP
0x511 POP
0x512 PUSH1 0x40
0x514 MLOAD
0x515 DUP1
0x516 SWAP2
0x517 SUB
0x518 SWAP1
0x519 RETURN
0x51a JUMPDEST
0x51b CALLVALUE
0x51c DUP1
0x51d ISZERO
0x51e PUSH2 0x38f
0x521 JUMPI
---
0x4da: V330 = 0x0
0x4dd: REVERT 0x0 0x0
0x4de: JUMPDEST 
0x4e0: V331 = 0x366
0x4e3: V332 = 0x4
0x4e6: V333 = CALLDATASIZE
0x4e7: V334 = SUB V333 0x4
0x4e9: V335 = ADD 0x4 V334
0x4ed: V336 = CALLDATALOAD 0x4
0x4ef: V337 = 0x20
0x4f1: V338 = ADD 0x20 0x4
0x4f9: V339 = 0xe5e
0x4fc: THROW 
0x4fd: JUMPDEST 
0x4fe: V340 = 0x40
0x500: V341 = M[0x40]
0x504: M[V341] = S1
0x505: V342 = 0x20
0x507: V343 = ADD 0x20 V341
0x50a: M[V343] = S0
0x50b: V344 = 0x20
0x50d: V345 = ADD 0x20 V343
0x512: V346 = 0x40
0x514: V347 = M[0x40]
0x517: V348 = SUB V345 V347
0x519: RETURN V347 V348
0x51a: JUMPDEST 
0x51b: V349 = CALLVALUE
0x51d: V350 = ISZERO V349
0x51e: V351 = 0x38f
0x521: THROWI V350
---
Entry stack: [V327]
Stack pops: 0
Stack additions: [V336, 0x366, V349]
Exit stack: []

================================

Block 0x522
[0x522:0x640]
---
Predecessors: [0x4da]
Successors: [0x641]
---
0x522 PUSH1 0x0
0x524 DUP1
0x525 REVERT
0x526 JUMPDEST
0x527 POP
0x528 PUSH2 0x398
0x52b PUSH2 0xe91
0x52e JUMP
0x52f JUMPDEST
0x530 PUSH1 0x40
0x532 MLOAD
0x533 DUP1
0x534 DUP3
0x535 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x54a AND
0x54b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x560 AND
0x561 DUP2
0x562 MSTORE
0x563 PUSH1 0x20
0x565 ADD
0x566 SWAP2
0x567 POP
0x568 POP
0x569 PUSH1 0x40
0x56b MLOAD
0x56c DUP1
0x56d SWAP2
0x56e SUB
0x56f SWAP1
0x570 RETURN
0x571 JUMPDEST
0x572 PUSH1 0x2
0x574 SLOAD
0x575 DUP2
0x576 JUMP
0x577 JUMPDEST
0x578 PUSH1 0x1
0x57a SLOAD
0x57b DUP2
0x57c JUMP
0x57d JUMPDEST
0x57e PUSH1 0x0
0x580 DUP1
0x581 PUSH1 0x0
0x583 DUP1
0x584 PUSH1 0x0
0x586 DUP1
0x587 PUSH1 0x0
0x589 PUSH1 0x3
0x58b PUSH1 0x0
0x58d SWAP1
0x58e SLOAD
0x58f SWAP1
0x590 PUSH2 0x100
0x593 EXP
0x594 SWAP1
0x595 DIV
0x596 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5ab AND
0x5ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5c1 AND
0x5c2 PUSH4 0x70a08231
0x5c7 ADDRESS
0x5c8 PUSH1 0x40
0x5ca MLOAD
0x5cb DUP3
0x5cc PUSH4 0xffffffff
0x5d1 AND
0x5d2 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x5f0 MUL
0x5f1 DUP2
0x5f2 MSTORE
0x5f3 PUSH1 0x4
0x5f5 ADD
0x5f6 DUP1
0x5f7 DUP3
0x5f8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x60d AND
0x60e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x623 AND
0x624 DUP2
0x625 MSTORE
0x626 PUSH1 0x20
0x628 ADD
0x629 SWAP2
0x62a POP
0x62b POP
0x62c PUSH1 0x20
0x62e PUSH1 0x40
0x630 MLOAD
0x631 DUP1
0x632 DUP4
0x633 SUB
0x634 DUP2
0x635 PUSH1 0x0
0x637 DUP8
0x638 DUP1
0x639 EXTCODESIZE
0x63a ISZERO
0x63b DUP1
0x63c ISZERO
0x63d PUSH2 0x4ae
0x640 JUMPI
---
0x522: V352 = 0x0
0x525: REVERT 0x0 0x0
0x526: JUMPDEST 
0x528: V353 = 0x398
0x52b: V354 = 0xe91
0x52e: THROW 
0x52f: JUMPDEST 
0x530: V355 = 0x40
0x532: V356 = M[0x40]
0x535: V357 = 0xffffffffffffffffffffffffffffffffffffffff
0x54a: V358 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x54b: V359 = 0xffffffffffffffffffffffffffffffffffffffff
0x560: V360 = AND 0xffffffffffffffffffffffffffffffffffffffff V358
0x562: M[V356] = V360
0x563: V361 = 0x20
0x565: V362 = ADD 0x20 V356
0x569: V363 = 0x40
0x56b: V364 = M[0x40]
0x56e: V365 = SUB V362 V364
0x570: RETURN V364 V365
0x571: JUMPDEST 
0x572: V366 = 0x2
0x574: V367 = S[0x2]
0x576: JUMP S0
0x577: JUMPDEST 
0x578: V368 = 0x1
0x57a: V369 = S[0x1]
0x57c: JUMP S0
0x57d: JUMPDEST 
0x57e: V370 = 0x0
0x581: V371 = 0x0
0x584: V372 = 0x0
0x587: V373 = 0x0
0x589: V374 = 0x3
0x58b: V375 = 0x0
0x58e: V376 = S[0x3]
0x590: V377 = 0x100
0x593: V378 = EXP 0x100 0x0
0x595: V379 = DIV V376 0x1
0x596: V380 = 0xffffffffffffffffffffffffffffffffffffffff
0x5ab: V381 = AND 0xffffffffffffffffffffffffffffffffffffffff V379
0x5ac: V382 = 0xffffffffffffffffffffffffffffffffffffffff
0x5c1: V383 = AND 0xffffffffffffffffffffffffffffffffffffffff V381
0x5c2: V384 = 0x70a08231
0x5c7: V385 = ADDRESS
0x5c8: V386 = 0x40
0x5ca: V387 = M[0x40]
0x5cc: V388 = 0xffffffff
0x5d1: V389 = AND 0xffffffff 0x70a08231
0x5d2: V390 = 0x100000000000000000000000000000000000000000000000000000000
0x5f0: V391 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x5f2: M[V387] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x5f3: V392 = 0x4
0x5f5: V393 = ADD 0x4 V387
0x5f8: V394 = 0xffffffffffffffffffffffffffffffffffffffff
0x60d: V395 = AND 0xffffffffffffffffffffffffffffffffffffffff V385
0x60e: V396 = 0xffffffffffffffffffffffffffffffffffffffff
0x623: V397 = AND 0xffffffffffffffffffffffffffffffffffffffff V395
0x625: M[V393] = V397
0x626: V398 = 0x20
0x628: V399 = ADD 0x20 V393
0x62c: V400 = 0x20
0x62e: V401 = 0x40
0x630: V402 = M[0x40]
0x633: V403 = SUB V399 V402
0x635: V404 = 0x0
0x639: V405 = EXTCODESIZE V383
0x63a: V406 = ISZERO V405
0x63c: V407 = ISZERO V406
0x63d: V408 = 0x4ae
0x640: THROWI V407
---
Entry stack: [V349]
Stack pops: 0
Stack additions: [0x398, V367, S0, V369, S0, V406, V383, 0x0, V402, V403, V402, 0x20, V399, 0x70a08231, V383, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: []

================================

Block 0x641
[0x641:0x64f]
---
Predecessors: [0x522]
Successors: [0x650]
---
0x641 PUSH1 0x0
0x643 DUP1
0x644 REVERT
0x645 JUMPDEST
0x646 POP
0x647 GAS
0x648 CALL
0x649 ISZERO
0x64a DUP1
0x64b ISZERO
0x64c PUSH2 0x4c2
0x64f JUMPI
---
0x641: V409 = 0x0
0x644: REVERT 0x0 0x0
0x645: JUMPDEST 
0x647: V410 = GAS
0x648: V411 = CALL V410 S1 S2 S3 S4 S5 S6
0x649: V412 = ISZERO V411
0x64b: V413 = ISZERO V412
0x64c: V414 = 0x4c2
0x64f: THROWI V413
---
Entry stack: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, V383, 0x70a08231, V399, 0x20, V402, V403, V402, 0x0, V383, V406]
Stack pops: 0
Stack additions: [V412]
Exit stack: []

================================

Block 0x650
[0x650:0x66a]
---
Predecessors: [0x641]
Successors: [0x66b]
---
0x650 RETURNDATASIZE
0x651 PUSH1 0x0
0x653 DUP1
0x654 RETURNDATACOPY
0x655 RETURNDATASIZE
0x656 PUSH1 0x0
0x658 REVERT
0x659 JUMPDEST
0x65a POP
0x65b POP
0x65c POP
0x65d POP
0x65e PUSH1 0x40
0x660 MLOAD
0x661 RETURNDATASIZE
0x662 PUSH1 0x20
0x664 DUP2
0x665 LT
0x666 ISZERO
0x667 PUSH2 0x4d8
0x66a JUMPI
---
0x650: V415 = RETURNDATASIZE
0x651: V416 = 0x0
0x654: RETURNDATACOPY 0x0 0x0 V415
0x655: V417 = RETURNDATASIZE
0x656: V418 = 0x0
0x658: REVERT 0x0 V417
0x659: JUMPDEST 
0x65e: V419 = 0x40
0x660: V420 = M[0x40]
0x661: V421 = RETURNDATASIZE
0x662: V422 = 0x20
0x665: V423 = LT V421 0x20
0x666: V424 = ISZERO V423
0x667: V425 = 0x4d8
0x66a: THROWI V424
---
Entry stack: [V412]
Stack pops: 0
Stack additions: [V421, V420]
Exit stack: []

================================

Block 0x66b
[0x66b:0x739]
---
Predecessors: [0x650]
Successors: [0x73a]
---
0x66b PUSH1 0x0
0x66d DUP1
0x66e REVERT
0x66f JUMPDEST
0x670 DUP2
0x671 ADD
0x672 SWAP1
0x673 DUP1
0x674 DUP1
0x675 MLOAD
0x676 SWAP1
0x677 PUSH1 0x20
0x679 ADD
0x67a SWAP1
0x67b SWAP3
0x67c SWAP2
0x67d SWAP1
0x67e POP
0x67f POP
0x680 POP
0x681 SWAP7
0x682 POP
0x683 PUSH1 0x0
0x685 DUP1
0x686 SWAP1
0x687 SLOAD
0x688 SWAP1
0x689 PUSH2 0x100
0x68c EXP
0x68d SWAP1
0x68e DIV
0x68f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a4 AND
0x6a5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6ba AND
0x6bb PUSH4 0x1f6d4942
0x6c0 CALLER
0x6c1 PUSH1 0x40
0x6c3 MLOAD
0x6c4 DUP3
0x6c5 PUSH4 0xffffffff
0x6ca AND
0x6cb PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x6e9 MUL
0x6ea DUP2
0x6eb MSTORE
0x6ec PUSH1 0x4
0x6ee ADD
0x6ef DUP1
0x6f0 DUP3
0x6f1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x706 AND
0x707 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x71c AND
0x71d DUP2
0x71e MSTORE
0x71f PUSH1 0x20
0x721 ADD
0x722 SWAP2
0x723 POP
0x724 POP
0x725 PUSH1 0x80
0x727 PUSH1 0x40
0x729 MLOAD
0x72a DUP1
0x72b DUP4
0x72c SUB
0x72d DUP2
0x72e PUSH1 0x0
0x730 DUP8
0x731 DUP1
0x732 EXTCODESIZE
0x733 ISZERO
0x734 DUP1
0x735 ISZERO
0x736 PUSH2 0x5a7
0x739 JUMPI
---
0x66b: V426 = 0x0
0x66e: REVERT 0x0 0x0
0x66f: JUMPDEST 
0x671: V427 = ADD S1 S0
0x675: V428 = M[S1]
0x677: V429 = 0x20
0x679: V430 = ADD 0x20 S1
0x683: V431 = 0x0
0x687: V432 = S[0x0]
0x689: V433 = 0x100
0x68c: V434 = EXP 0x100 0x0
0x68e: V435 = DIV V432 0x1
0x68f: V436 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a4: V437 = AND 0xffffffffffffffffffffffffffffffffffffffff V435
0x6a5: V438 = 0xffffffffffffffffffffffffffffffffffffffff
0x6ba: V439 = AND 0xffffffffffffffffffffffffffffffffffffffff V437
0x6bb: V440 = 0x1f6d4942
0x6c0: V441 = CALLER
0x6c1: V442 = 0x40
0x6c3: V443 = M[0x40]
0x6c5: V444 = 0xffffffff
0x6ca: V445 = AND 0xffffffff 0x1f6d4942
0x6cb: V446 = 0x100000000000000000000000000000000000000000000000000000000
0x6e9: V447 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x1f6d4942
0x6eb: M[V443] = 0x1f6d494200000000000000000000000000000000000000000000000000000000
0x6ec: V448 = 0x4
0x6ee: V449 = ADD 0x4 V443
0x6f1: V450 = 0xffffffffffffffffffffffffffffffffffffffff
0x706: V451 = AND 0xffffffffffffffffffffffffffffffffffffffff V441
0x707: V452 = 0xffffffffffffffffffffffffffffffffffffffff
0x71c: V453 = AND 0xffffffffffffffffffffffffffffffffffffffff V451
0x71e: M[V449] = V453
0x71f: V454 = 0x20
0x721: V455 = ADD 0x20 V449
0x725: V456 = 0x80
0x727: V457 = 0x40
0x729: V458 = M[0x40]
0x72c: V459 = SUB V455 V458
0x72e: V460 = 0x0
0x732: V461 = EXTCODESIZE V439
0x733: V462 = ISZERO V461
0x735: V463 = ISZERO V462
0x736: V464 = 0x5a7
0x739: THROWI V463
---
Entry stack: [V420, V421]
Stack pops: 0
Stack additions: [V462, V439, 0x0, V458, V459, V458, 0x80, V455, 0x1f6d4942, V439, S2, S3, S4, S5, S6, S7, V428]
Exit stack: []

================================

Block 0x73a
[0x73a:0x748]
---
Predecessors: [0x66b]
Successors: [0x749]
---
0x73a PUSH1 0x0
0x73c DUP1
0x73d REVERT
0x73e JUMPDEST
0x73f POP
0x740 GAS
0x741 CALL
0x742 ISZERO
0x743 DUP1
0x744 ISZERO
0x745 PUSH2 0x5bb
0x748 JUMPI
---
0x73a: V465 = 0x0
0x73d: REVERT 0x0 0x0
0x73e: JUMPDEST 
0x740: V466 = GAS
0x741: V467 = CALL V466 S1 S2 S3 S4 S5 S6
0x742: V468 = ISZERO V467
0x744: V469 = ISZERO V468
0x745: V470 = 0x5bb
0x748: THROWI V469
---
Entry stack: [V428, S15, S14, S13, S12, S11, S10, V439, 0x1f6d4942, V455, 0x80, V458, V459, V458, 0x0, V439, V462]
Stack pops: 0
Stack additions: [V468]
Exit stack: []

================================

Block 0x749
[0x749:0x763]
---
Predecessors: [0x73a]
Successors: [0x764]
---
0x749 RETURNDATASIZE
0x74a PUSH1 0x0
0x74c DUP1
0x74d RETURNDATACOPY
0x74e RETURNDATASIZE
0x74f PUSH1 0x0
0x751 REVERT
0x752 JUMPDEST
0x753 POP
0x754 POP
0x755 POP
0x756 POP
0x757 PUSH1 0x40
0x759 MLOAD
0x75a RETURNDATASIZE
0x75b PUSH1 0x80
0x75d DUP2
0x75e LT
0x75f ISZERO
0x760 PUSH2 0x5d1
0x763 JUMPI
---
0x749: V471 = RETURNDATASIZE
0x74a: V472 = 0x0
0x74d: RETURNDATACOPY 0x0 0x0 V471
0x74e: V473 = RETURNDATASIZE
0x74f: V474 = 0x0
0x751: REVERT 0x0 V473
0x752: JUMPDEST 
0x757: V475 = 0x40
0x759: V476 = M[0x40]
0x75a: V477 = RETURNDATASIZE
0x75b: V478 = 0x80
0x75e: V479 = LT V477 0x80
0x75f: V480 = ISZERO V479
0x760: V481 = 0x5d1
0x763: THROWI V480
---
Entry stack: [V468]
Stack pops: 0
Stack additions: [V477, V476]
Exit stack: []

================================

Block 0x764
[0x764:0x808]
---
Predecessors: [0x749]
Successors: [0x809]
---
0x764 PUSH1 0x0
0x766 DUP1
0x767 REVERT
0x768 JUMPDEST
0x769 DUP2
0x76a ADD
0x76b SWAP1
0x76c DUP1
0x76d DUP1
0x76e MLOAD
0x76f SWAP1
0x770 PUSH1 0x20
0x772 ADD
0x773 SWAP1
0x774 SWAP3
0x775 SWAP2
0x776 SWAP1
0x777 DUP1
0x778 MLOAD
0x779 SWAP1
0x77a PUSH1 0x20
0x77c ADD
0x77d SWAP1
0x77e SWAP3
0x77f SWAP2
0x780 SWAP1
0x781 DUP1
0x782 MLOAD
0x783 SWAP1
0x784 PUSH1 0x20
0x786 ADD
0x787 SWAP1
0x788 SWAP3
0x789 SWAP2
0x78a SWAP1
0x78b DUP1
0x78c MLOAD
0x78d SWAP1
0x78e PUSH1 0x20
0x790 ADD
0x791 SWAP1
0x792 SWAP3
0x793 SWAP2
0x794 SWAP1
0x795 POP
0x796 POP
0x797 POP
0x798 SWAP6
0x799 POP
0x79a SWAP6
0x79b POP
0x79c SWAP6
0x79d POP
0x79e SWAP6
0x79f POP
0x7a0 PUSH1 0x6
0x7a2 PUSH1 0x14
0x7a4 SWAP1
0x7a5 SLOAD
0x7a6 SWAP1
0x7a7 PUSH2 0x100
0x7aa EXP
0x7ab SWAP1
0x7ac DIV
0x7ad PUSH1 0xff
0x7af AND
0x7b0 PUSH1 0xff
0x7b2 AND
0x7b3 PUSH1 0x4
0x7b5 PUSH1 0x0
0x7b7 CALLER
0x7b8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7cd AND
0x7ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7e3 AND
0x7e4 DUP2
0x7e5 MSTORE
0x7e6 PUSH1 0x20
0x7e8 ADD
0x7e9 SWAP1
0x7ea DUP2
0x7eb MSTORE
0x7ec PUSH1 0x20
0x7ee ADD
0x7ef PUSH1 0x0
0x7f1 SHA3
0x7f2 PUSH1 0x0
0x7f4 SWAP1
0x7f5 SLOAD
0x7f6 SWAP1
0x7f7 PUSH2 0x100
0x7fa EXP
0x7fb SWAP1
0x7fc DIV
0x7fd PUSH1 0xff
0x7ff AND
0x800 PUSH1 0xff
0x802 AND
0x803 LT
0x804 ISZERO
0x805 PUSH2 0x896
0x808 JUMPI
---
0x764: V482 = 0x0
0x767: REVERT 0x0 0x0
0x768: JUMPDEST 
0x76a: V483 = ADD S1 S0
0x76e: V484 = M[S1]
0x770: V485 = 0x20
0x772: V486 = ADD 0x20 S1
0x778: V487 = M[V486]
0x77a: V488 = 0x20
0x77c: V489 = ADD 0x20 V486
0x782: V490 = M[V489]
0x784: V491 = 0x20
0x786: V492 = ADD 0x20 V489
0x78c: V493 = M[V492]
0x78e: V494 = 0x20
0x790: V495 = ADD 0x20 V492
0x7a0: V496 = 0x6
0x7a2: V497 = 0x14
0x7a5: V498 = S[0x6]
0x7a7: V499 = 0x100
0x7aa: V500 = EXP 0x100 0x14
0x7ac: V501 = DIV V498 0x10000000000000000000000000000000000000000
0x7ad: V502 = 0xff
0x7af: V503 = AND 0xff V501
0x7b0: V504 = 0xff
0x7b2: V505 = AND 0xff V503
0x7b3: V506 = 0x4
0x7b5: V507 = 0x0
0x7b7: V508 = CALLER
0x7b8: V509 = 0xffffffffffffffffffffffffffffffffffffffff
0x7cd: V510 = AND 0xffffffffffffffffffffffffffffffffffffffff V508
0x7ce: V511 = 0xffffffffffffffffffffffffffffffffffffffff
0x7e3: V512 = AND 0xffffffffffffffffffffffffffffffffffffffff V510
0x7e5: M[0x0] = V512
0x7e6: V513 = 0x20
0x7e8: V514 = ADD 0x20 0x0
0x7eb: M[0x20] = 0x4
0x7ec: V515 = 0x20
0x7ee: V516 = ADD 0x20 0x20
0x7ef: V517 = 0x0
0x7f1: V518 = SHA3 0x0 0x40
0x7f2: V519 = 0x0
0x7f5: V520 = S[V518]
0x7f7: V521 = 0x100
0x7fa: V522 = EXP 0x100 0x0
0x7fc: V523 = DIV V520 0x1
0x7fd: V524 = 0xff
0x7ff: V525 = AND 0xff V523
0x800: V526 = 0xff
0x802: V527 = AND 0xff V525
0x803: V528 = LT V527 V505
0x804: V529 = ISZERO V528
0x805: V530 = 0x896
0x808: THROWI V529
---
Entry stack: [V476, V477]
Stack pops: 0
Stack additions: [S2, S3, V493, V490, V487, V484]
Exit stack: []

================================

Block 0x809
[0x809:0x864]
---
Predecessors: [0x764]
Successors: [0x865]
---
0x809 PUSH1 0x5
0x80b PUSH1 0x4
0x80d PUSH1 0x0
0x80f CALLER
0x810 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x825 AND
0x826 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x83b AND
0x83c DUP2
0x83d MSTORE
0x83e PUSH1 0x20
0x840 ADD
0x841 SWAP1
0x842 DUP2
0x843 MSTORE
0x844 PUSH1 0x20
0x846 ADD
0x847 PUSH1 0x0
0x849 SHA3
0x84a PUSH1 0x0
0x84c SWAP1
0x84d SLOAD
0x84e SWAP1
0x84f PUSH2 0x100
0x852 EXP
0x853 SWAP1
0x854 DIV
0x855 PUSH1 0xff
0x857 AND
0x858 PUSH1 0xff
0x85a AND
0x85b DUP2
0x85c SLOAD
0x85d DUP2
0x85e LT
0x85f ISZERO
0x860 ISZERO
0x861 PUSH2 0x6cf
0x864 JUMPI
---
0x809: V531 = 0x5
0x80b: V532 = 0x4
0x80d: V533 = 0x0
0x80f: V534 = CALLER
0x810: V535 = 0xffffffffffffffffffffffffffffffffffffffff
0x825: V536 = AND 0xffffffffffffffffffffffffffffffffffffffff V534
0x826: V537 = 0xffffffffffffffffffffffffffffffffffffffff
0x83b: V538 = AND 0xffffffffffffffffffffffffffffffffffffffff V536
0x83d: M[0x0] = V538
0x83e: V539 = 0x20
0x840: V540 = ADD 0x20 0x0
0x843: M[0x20] = 0x4
0x844: V541 = 0x20
0x846: V542 = ADD 0x20 0x20
0x847: V543 = 0x0
0x849: V544 = SHA3 0x0 0x40
0x84a: V545 = 0x0
0x84d: V546 = S[V544]
0x84f: V547 = 0x100
0x852: V548 = EXP 0x100 0x0
0x854: V549 = DIV V546 0x1
0x855: V550 = 0xff
0x857: V551 = AND 0xff V549
0x858: V552 = 0xff
0x85a: V553 = AND 0xff V551
0x85c: V554 = S[0x5]
0x85e: V555 = LT V553 V554
0x85f: V556 = ISZERO V555
0x860: V557 = ISZERO V556
0x861: V558 = 0x6cf
0x864: THROWI V557
---
Entry stack: [V484, V487, V490, V493, S1, S0]
Stack pops: 0
Stack additions: [0x5, V553]
Exit stack: [V484, V487, V490, V493, S1, S0, 0x5, V553]

================================

Block 0x865
[0x865:0x889]
---
Predecessors: [0x809]
Successors: [0x88a]
---
0x865 INVALID
0x866 JUMPDEST
0x867 SWAP1
0x868 PUSH1 0x0
0x86a MSTORE
0x86b PUSH1 0x20
0x86d PUSH1 0x0
0x86f SHA3
0x870 SWAP1
0x871 PUSH1 0x2
0x873 MUL
0x874 ADD
0x875 SWAP2
0x876 POP
0x877 DUP2
0x878 PUSH1 0x1
0x87a ADD
0x87b SLOAD
0x87c DUP3
0x87d PUSH1 0x0
0x87f ADD
0x880 SLOAD
0x881 DUP8
0x882 MUL
0x883 DUP2
0x884 ISZERO
0x885 ISZERO
0x886 PUSH2 0x6f4
0x889 JUMPI
---
0x865: INVALID 
0x866: JUMPDEST 
0x868: V559 = 0x0
0x86a: M[0x0] = S1
0x86b: V560 = 0x20
0x86d: V561 = 0x0
0x86f: V562 = SHA3 0x0 0x20
0x871: V563 = 0x2
0x873: V564 = MUL 0x2 S0
0x874: V565 = ADD V564 V562
0x878: V566 = 0x1
0x87a: V567 = ADD 0x1 V565
0x87b: V568 = S[V567]
0x87d: V569 = 0x0
0x87f: V570 = ADD 0x0 V565
0x880: V571 = S[V570]
0x882: V572 = MUL S7 V571
0x884: V573 = ISZERO V568
0x885: V574 = ISZERO V573
0x886: V575 = 0x6f4
0x889: THROWI V574
---
Entry stack: [V484, V487, V490, V493, S3, S2, 0x5, V553]
Stack pops: 0
Stack additions: [V572, V568, S2, V565, S4, S5, S6, S7]
Exit stack: []

================================

Block 0x88a
[0x88a:0x9e1]
---
Predecessors: [0x865]
Successors: [0x9e2]
---
0x88a INVALID
0x88b JUMPDEST
0x88c DIV
0x88d SWAP1
0x88e POP
0x88f DUP1
0x890 DUP3
0x891 PUSH1 0x0
0x893 ADD
0x894 PUSH1 0x0
0x896 DUP3
0x897 DUP3
0x898 SLOAD
0x899 SUB
0x89a SWAP3
0x89b POP
0x89c POP
0x89d DUP2
0x89e SWAP1
0x89f SSTORE
0x8a0 POP
0x8a1 DUP6
0x8a2 DUP3
0x8a3 PUSH1 0x1
0x8a5 ADD
0x8a6 PUSH1 0x0
0x8a8 DUP3
0x8a9 DUP3
0x8aa SLOAD
0x8ab SUB
0x8ac SWAP3
0x8ad POP
0x8ae POP
0x8af DUP2
0x8b0 SWAP1
0x8b1 SSTORE
0x8b2 POP
0x8b3 PUSH1 0x4
0x8b5 PUSH1 0x0
0x8b7 CALLER
0x8b8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8cd AND
0x8ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8e3 AND
0x8e4 DUP2
0x8e5 MSTORE
0x8e6 PUSH1 0x20
0x8e8 ADD
0x8e9 SWAP1
0x8ea DUP2
0x8eb MSTORE
0x8ec PUSH1 0x20
0x8ee ADD
0x8ef PUSH1 0x0
0x8f1 SHA3
0x8f2 PUSH1 0x0
0x8f4 DUP2
0x8f5 DUP2
0x8f6 SWAP1
0x8f7 SLOAD
0x8f8 SWAP1
0x8f9 PUSH2 0x100
0x8fc EXP
0x8fd SWAP1
0x8fe DIV
0x8ff PUSH1 0xff
0x901 AND
0x902 DUP1
0x903 SWAP3
0x904 SWAP2
0x905 SWAP1
0x906 PUSH1 0x1
0x908 ADD
0x909 SWAP2
0x90a SWAP1
0x90b PUSH2 0x100
0x90e EXP
0x90f DUP2
0x910 SLOAD
0x911 DUP2
0x912 PUSH1 0xff
0x914 MUL
0x915 NOT
0x916 AND
0x917 SWAP1
0x918 DUP4
0x919 PUSH1 0xff
0x91b AND
0x91c MUL
0x91d OR
0x91e SWAP1
0x91f SSTORE
0x920 POP
0x921 POP
0x922 PUSH1 0x3
0x924 PUSH1 0x0
0x926 SWAP1
0x927 SLOAD
0x928 SWAP1
0x929 PUSH2 0x100
0x92c EXP
0x92d SWAP1
0x92e DIV
0x92f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x944 AND
0x945 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x95a AND
0x95b PUSH4 0xa9059cbb
0x960 CALLER
0x961 DUP4
0x962 PUSH1 0x40
0x964 MLOAD
0x965 DUP4
0x966 PUSH4 0xffffffff
0x96b AND
0x96c PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x98a MUL
0x98b DUP2
0x98c MSTORE
0x98d PUSH1 0x4
0x98f ADD
0x990 DUP1
0x991 DUP4
0x992 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9a7 AND
0x9a8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9bd AND
0x9be DUP2
0x9bf MSTORE
0x9c0 PUSH1 0x20
0x9c2 ADD
0x9c3 DUP3
0x9c4 DUP2
0x9c5 MSTORE
0x9c6 PUSH1 0x20
0x9c8 ADD
0x9c9 SWAP3
0x9ca POP
0x9cb POP
0x9cc POP
0x9cd PUSH1 0x20
0x9cf PUSH1 0x40
0x9d1 MLOAD
0x9d2 DUP1
0x9d3 DUP4
0x9d4 SUB
0x9d5 DUP2
0x9d6 PUSH1 0x0
0x9d8 DUP8
0x9d9 DUP1
0x9da EXTCODESIZE
0x9db ISZERO
0x9dc DUP1
0x9dd ISZERO
0x9de PUSH2 0x84f
0x9e1 JUMPI
---
0x88a: INVALID 
0x88b: JUMPDEST 
0x88c: V576 = DIV S0 S1
0x891: V577 = 0x0
0x893: V578 = ADD 0x0 S3
0x894: V579 = 0x0
0x898: V580 = S[V578]
0x899: V581 = SUB V580 V576
0x89f: S[V578] = V581
0x8a3: V582 = 0x1
0x8a5: V583 = ADD 0x1 S3
0x8a6: V584 = 0x0
0x8aa: V585 = S[V583]
0x8ab: V586 = SUB V585 S7
0x8b1: S[V583] = V586
0x8b3: V587 = 0x4
0x8b5: V588 = 0x0
0x8b7: V589 = CALLER
0x8b8: V590 = 0xffffffffffffffffffffffffffffffffffffffff
0x8cd: V591 = AND 0xffffffffffffffffffffffffffffffffffffffff V589
0x8ce: V592 = 0xffffffffffffffffffffffffffffffffffffffff
0x8e3: V593 = AND 0xffffffffffffffffffffffffffffffffffffffff V591
0x8e5: M[0x0] = V593
0x8e6: V594 = 0x20
0x8e8: V595 = ADD 0x20 0x0
0x8eb: M[0x20] = 0x4
0x8ec: V596 = 0x20
0x8ee: V597 = ADD 0x20 0x20
0x8ef: V598 = 0x0
0x8f1: V599 = SHA3 0x0 0x40
0x8f2: V600 = 0x0
0x8f7: V601 = S[V599]
0x8f9: V602 = 0x100
0x8fc: V603 = EXP 0x100 0x0
0x8fe: V604 = DIV V601 0x1
0x8ff: V605 = 0xff
0x901: V606 = AND 0xff V604
0x906: V607 = 0x1
0x908: V608 = ADD 0x1 V606
0x90b: V609 = 0x100
0x90e: V610 = EXP 0x100 0x0
0x910: V611 = S[V599]
0x912: V612 = 0xff
0x914: V613 = MUL 0xff 0x1
0x915: V614 = NOT 0xff
0x916: V615 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V611
0x919: V616 = 0xff
0x91b: V617 = AND 0xff V608
0x91c: V618 = MUL V617 0x1
0x91d: V619 = OR V618 V615
0x91f: S[V599] = V619
0x922: V620 = 0x3
0x924: V621 = 0x0
0x927: V622 = S[0x3]
0x929: V623 = 0x100
0x92c: V624 = EXP 0x100 0x0
0x92e: V625 = DIV V622 0x1
0x92f: V626 = 0xffffffffffffffffffffffffffffffffffffffff
0x944: V627 = AND 0xffffffffffffffffffffffffffffffffffffffff V625
0x945: V628 = 0xffffffffffffffffffffffffffffffffffffffff
0x95a: V629 = AND 0xffffffffffffffffffffffffffffffffffffffff V627
0x95b: V630 = 0xa9059cbb
0x960: V631 = CALLER
0x962: V632 = 0x40
0x964: V633 = M[0x40]
0x966: V634 = 0xffffffff
0x96b: V635 = AND 0xffffffff 0xa9059cbb
0x96c: V636 = 0x100000000000000000000000000000000000000000000000000000000
0x98a: V637 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x98c: M[V633] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x98d: V638 = 0x4
0x98f: V639 = ADD 0x4 V633
0x992: V640 = 0xffffffffffffffffffffffffffffffffffffffff
0x9a7: V641 = AND 0xffffffffffffffffffffffffffffffffffffffff V631
0x9a8: V642 = 0xffffffffffffffffffffffffffffffffffffffff
0x9bd: V643 = AND 0xffffffffffffffffffffffffffffffffffffffff V641
0x9bf: M[V639] = V643
0x9c0: V644 = 0x20
0x9c2: V645 = ADD 0x20 V639
0x9c5: M[V645] = V576
0x9c6: V646 = 0x20
0x9c8: V647 = ADD 0x20 V645
0x9cd: V648 = 0x20
0x9cf: V649 = 0x40
0x9d1: V650 = M[0x40]
0x9d4: V651 = SUB V647 V650
0x9d6: V652 = 0x0
0x9da: V653 = EXTCODESIZE V629
0x9db: V654 = ISZERO V653
0x9dd: V655 = ISZERO V654
0x9de: V656 = 0x84f
0x9e1: THROWI V655
---
Entry stack: [S7, S6, S5, S4, V565, S2, V568, V572]
Stack pops: 0
Stack additions: [V654, V629, 0x0, V650, V651, V650, 0x20, V647, 0xa9059cbb, V629, V576, S3, S4, S5, S6, S7]
Exit stack: []

================================

Block 0x9e2
[0x9e2:0x9f0]
---
Predecessors: [0x88a]
Successors: [0x9f1]
---
0x9e2 PUSH1 0x0
0x9e4 DUP1
0x9e5 REVERT
0x9e6 JUMPDEST
0x9e7 POP
0x9e8 GAS
0x9e9 CALL
0x9ea ISZERO
0x9eb DUP1
0x9ec ISZERO
0x9ed PUSH2 0x863
0x9f0 JUMPI
---
0x9e2: V657 = 0x0
0x9e5: REVERT 0x0 0x0
0x9e6: JUMPDEST 
0x9e8: V658 = GAS
0x9e9: V659 = CALL V658 S1 S2 S3 S4 S5 S6
0x9ea: V660 = ISZERO V659
0x9ec: V661 = ISZERO V660
0x9ed: V662 = 0x863
0x9f0: THROWI V661
---
Entry stack: [S15, S14, S13, S12, S11, V576, V629, 0xa9059cbb, V647, 0x20, V650, V651, V650, 0x0, V629, V654]
Stack pops: 0
Stack additions: [V660]
Exit stack: []

================================

Block 0x9f1
[0x9f1:0xa0b]
---
Predecessors: [0x9e2]
Successors: [0xa0c]
---
0x9f1 RETURNDATASIZE
0x9f2 PUSH1 0x0
0x9f4 DUP1
0x9f5 RETURNDATACOPY
0x9f6 RETURNDATASIZE
0x9f7 PUSH1 0x0
0x9f9 REVERT
0x9fa JUMPDEST
0x9fb POP
0x9fc POP
0x9fd POP
0x9fe POP
0x9ff PUSH1 0x40
0xa01 MLOAD
0xa02 RETURNDATASIZE
0xa03 PUSH1 0x20
0xa05 DUP2
0xa06 LT
0xa07 ISZERO
0xa08 PUSH2 0x879
0xa0b JUMPI
---
0x9f1: V663 = RETURNDATASIZE
0x9f2: V664 = 0x0
0x9f5: RETURNDATACOPY 0x0 0x0 V663
0x9f6: V665 = RETURNDATASIZE
0x9f7: V666 = 0x0
0x9f9: REVERT 0x0 V665
0x9fa: JUMPDEST 
0x9ff: V667 = 0x40
0xa01: V668 = M[0x40]
0xa02: V669 = RETURNDATASIZE
0xa03: V670 = 0x20
0xa06: V671 = LT V669 0x20
0xa07: V672 = ISZERO V671
0xa08: V673 = 0x879
0xa0b: THROWI V672
---
Entry stack: [V660]
Stack pops: 0
Stack additions: [V669, V668]
Exit stack: []

================================

Block 0xa0c
[0xa0c:0xa27]
---
Predecessors: [0x9f1]
Successors: [0xa28]
---
0xa0c PUSH1 0x0
0xa0e DUP1
0xa0f REVERT
0xa10 JUMPDEST
0xa11 DUP2
0xa12 ADD
0xa13 SWAP1
0xa14 DUP1
0xa15 DUP1
0xa16 MLOAD
0xa17 SWAP1
0xa18 PUSH1 0x20
0xa1a ADD
0xa1b SWAP1
0xa1c SWAP3
0xa1d SWAP2
0xa1e SWAP1
0xa1f POP
0xa20 POP
0xa21 POP
0xa22 ISZERO
0xa23 ISZERO
0xa24 PUSH2 0x895
0xa27 JUMPI
---
0xa0c: V674 = 0x0
0xa0f: REVERT 0x0 0x0
0xa10: JUMPDEST 
0xa12: V675 = ADD S1 S0
0xa16: V676 = M[S1]
0xa18: V677 = 0x20
0xa1a: V678 = ADD 0x20 S1
0xa22: V679 = ISZERO V676
0xa23: V680 = ISZERO V679
0xa24: V681 = 0x895
0xa27: THROWI V680
---
Entry stack: [V668, V669]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa28
[0xa28:0xa2c]
---
Predecessors: [0xa0c]
Successors: [0xa2d]
---
0xa28 PUSH1 0x0
0xa2a DUP1
0xa2b REVERT
0xa2c JUMPDEST
---
0xa28: V682 = 0x0
0xa2b: REVERT 0x0 0x0
0xa2c: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa2d
[0xa2d:0xa8d]
---
Predecessors: [0xa28]
Successors: [0xa8e]
---
0xa2d JUMPDEST
0xa2e POP
0xa2f POP
0xa30 POP
0xa31 POP
0xa32 POP
0xa33 POP
0xa34 POP
0xa35 JUMP
0xa36 JUMPDEST
0xa37 PUSH1 0x6
0xa39 PUSH1 0x0
0xa3b SWAP1
0xa3c SLOAD
0xa3d SWAP1
0xa3e PUSH2 0x100
0xa41 EXP
0xa42 SWAP1
0xa43 DIV
0xa44 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa59 AND
0xa5a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa6f AND
0xa70 CALLER
0xa71 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa86 AND
0xa87 EQ
0xa88 DUP1
0xa89 ISZERO
0xa8a PUSH2 0x913
0xa8d JUMPI
---
0xa2d: JUMPDEST 
0xa35: JUMP S7
0xa36: JUMPDEST 
0xa37: V683 = 0x6
0xa39: V684 = 0x0
0xa3c: V685 = S[0x6]
0xa3e: V686 = 0x100
0xa41: V687 = EXP 0x100 0x0
0xa43: V688 = DIV V685 0x1
0xa44: V689 = 0xffffffffffffffffffffffffffffffffffffffff
0xa59: V690 = AND 0xffffffffffffffffffffffffffffffffffffffff V688
0xa5a: V691 = 0xffffffffffffffffffffffffffffffffffffffff
0xa6f: V692 = AND 0xffffffffffffffffffffffffffffffffffffffff V690
0xa70: V693 = CALLER
0xa71: V694 = 0xffffffffffffffffffffffffffffffffffffffff
0xa86: V695 = AND 0xffffffffffffffffffffffffffffffffffffffff V693
0xa87: V696 = EQ V695 V692
0xa89: V697 = ISZERO V696
0xa8a: V698 = 0x913
0xa8d: THROWI V697
---
Entry stack: []
Stack pops: 16
Stack additions: [V696]
Exit stack: []

================================

Block 0xa8e
[0xa8e:0xaa9]
---
Predecessors: [0xa2d]
Successors: [0xaaa]
---
0xa8e POP
0xa8f PUSH1 0x0
0xa91 DUP2
0xa92 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaa7 AND
0xaa8 EQ
0xaa9 ISZERO
---
0xa8f: V699 = 0x0
0xa92: V700 = 0xffffffffffffffffffffffffffffffffffffffff
0xaa7: V701 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xaa8: V702 = EQ V701 0x0
0xaa9: V703 = ISZERO V702
---
Entry stack: [V696]
Stack pops: 2
Stack additions: [S1, V703]
Exit stack: [S0, V703]

================================

Block 0xaaa
[0xaaa:0xab0]
---
Predecessors: [0xa8e]
Successors: [0xab1]
---
0xaaa JUMPDEST
0xaab ISZERO
0xaac ISZERO
0xaad PUSH2 0x91e
0xab0 JUMPI
---
0xaaa: JUMPDEST 
0xaab: V704 = ISZERO V703
0xaac: V705 = ISZERO V704
0xaad: V706 = 0x91e
0xab0: THROWI V705
---
Entry stack: [S1, V703]
Stack pops: 1
Stack additions: []
Exit stack: [S1]

================================

Block 0xab1
[0xab1:0xb55]
---
Predecessors: [0xaaa]
Successors: [0xb56]
---
0xab1 PUSH1 0x0
0xab3 DUP1
0xab4 REVERT
0xab5 JUMPDEST
0xab6 DUP1
0xab7 PUSH1 0x3
0xab9 PUSH1 0x0
0xabb PUSH2 0x100
0xabe EXP
0xabf DUP2
0xac0 SLOAD
0xac1 DUP2
0xac2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xad7 MUL
0xad8 NOT
0xad9 AND
0xada SWAP1
0xadb DUP4
0xadc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaf1 AND
0xaf2 MUL
0xaf3 OR
0xaf4 SWAP1
0xaf5 SSTORE
0xaf6 POP
0xaf7 POP
0xaf8 JUMP
0xaf9 JUMPDEST
0xafa PUSH1 0x0
0xafc DUP1
0xafd PUSH1 0x0
0xaff PUSH1 0x6
0xb01 PUSH1 0x0
0xb03 SWAP1
0xb04 SLOAD
0xb05 SWAP1
0xb06 PUSH2 0x100
0xb09 EXP
0xb0a SWAP1
0xb0b DIV
0xb0c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb21 AND
0xb22 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb37 AND
0xb38 CALLER
0xb39 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb4e AND
0xb4f EQ
0xb50 ISZERO
0xb51 ISZERO
0xb52 PUSH2 0x9c3
0xb55 JUMPI
---
0xab1: V707 = 0x0
0xab4: REVERT 0x0 0x0
0xab5: JUMPDEST 
0xab7: V708 = 0x3
0xab9: V709 = 0x0
0xabb: V710 = 0x100
0xabe: V711 = EXP 0x100 0x0
0xac0: V712 = S[0x3]
0xac2: V713 = 0xffffffffffffffffffffffffffffffffffffffff
0xad7: V714 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xad8: V715 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xad9: V716 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V712
0xadc: V717 = 0xffffffffffffffffffffffffffffffffffffffff
0xaf1: V718 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xaf2: V719 = MUL V718 0x1
0xaf3: V720 = OR V719 V716
0xaf5: S[0x3] = V720
0xaf8: JUMP S1
0xaf9: JUMPDEST 
0xafa: V721 = 0x0
0xafd: V722 = 0x0
0xaff: V723 = 0x6
0xb01: V724 = 0x0
0xb04: V725 = S[0x6]
0xb06: V726 = 0x100
0xb09: V727 = EXP 0x100 0x0
0xb0b: V728 = DIV V725 0x1
0xb0c: V729 = 0xffffffffffffffffffffffffffffffffffffffff
0xb21: V730 = AND 0xffffffffffffffffffffffffffffffffffffffff V728
0xb22: V731 = 0xffffffffffffffffffffffffffffffffffffffff
0xb37: V732 = AND 0xffffffffffffffffffffffffffffffffffffffff V730
0xb38: V733 = CALLER
0xb39: V734 = 0xffffffffffffffffffffffffffffffffffffffff
0xb4e: V735 = AND 0xffffffffffffffffffffffffffffffffffffffff V733
0xb4f: V736 = EQ V735 V732
0xb50: V737 = ISZERO V736
0xb51: V738 = ISZERO V737
0xb52: V739 = 0x9c3
0xb55: THROWI V738
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: []

================================

Block 0xb56
[0xb56:0xb5e]
---
Predecessors: [0xab1]
Successors: [0xb5f]
---
0xb56 PUSH1 0x0
0xb58 DUP1
0xb59 REVERT
0xb5a JUMPDEST
0xb5b PUSH1 0x0
0xb5d SWAP1
0xb5e POP
---
0xb56: V740 = 0x0
0xb59: REVERT 0x0 0x0
0xb5a: JUMPDEST 
0xb5b: V741 = 0x0
---
Entry stack: [0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: []

================================

Block 0xb5f
[0xb5f:0xb6f]
---
Predecessors: [0xb56]
Successors: [0xb70]
---
0xb5f JUMPDEST
0xb60 PUSH1 0x5
0xb62 DUP1
0xb63 SLOAD
0xb64 SWAP1
0xb65 POP
0xb66 DUP2
0xb67 PUSH1 0xff
0xb69 AND
0xb6a LT
0xb6b ISZERO
0xb6c PUSH2 0xa0d
0xb6f JUMPI
---
0xb5f: JUMPDEST 
0xb60: V742 = 0x5
0xb63: V743 = S[0x5]
0xb67: V744 = 0xff
0xb69: V745 = AND 0xff 0x0
0xb6a: V746 = LT 0x0 V743
0xb6b: V747 = ISZERO V746
0xb6c: V748 = 0xa0d
0xb6f: THROWI V747
---
Entry stack: [0x0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0x0]

================================

Block 0xb70
[0xb70:0xb7f]
---
Predecessors: [0xb5f]
Successors: [0xb80]
---
0xb70 PUSH1 0x5
0xb72 DUP2
0xb73 PUSH1 0xff
0xb75 AND
0xb76 DUP2
0xb77 SLOAD
0xb78 DUP2
0xb79 LT
0xb7a ISZERO
0xb7b ISZERO
0xb7c PUSH2 0x9ea
0xb7f JUMPI
---
0xb70: V749 = 0x5
0xb73: V750 = 0xff
0xb75: V751 = AND 0xff 0x0
0xb77: V752 = S[0x5]
0xb79: V753 = LT 0x0 V752
0xb7a: V754 = ISZERO V753
0xb7b: V755 = ISZERO V754
0xb7c: V756 = 0x9ea
0xb7f: THROWI V755
---
Entry stack: [0x0]
Stack pops: 1
Stack additions: [S0, 0x5, 0x0]
Exit stack: [0x0, 0x5, 0x0]

================================

Block 0xb80
[0xb80:0xc5d]
---
Predecessors: [0xb70]
Successors: [0xc5e]
---
0xb80 INVALID
0xb81 JUMPDEST
0xb82 SWAP1
0xb83 PUSH1 0x0
0xb85 MSTORE
0xb86 PUSH1 0x20
0xb88 PUSH1 0x0
0xb8a SHA3
0xb8b SWAP1
0xb8c PUSH1 0x2
0xb8e MUL
0xb8f ADD
0xb90 PUSH1 0x0
0xb92 ADD
0xb93 SLOAD
0xb94 DUP4
0xb95 ADD
0xb96 SWAP3
0xb97 POP
0xb98 DUP1
0xb99 DUP1
0xb9a PUSH1 0x1
0xb9c ADD
0xb9d SWAP2
0xb9e POP
0xb9f POP
0xba0 PUSH2 0x9c8
0xba3 JUMP
0xba4 JUMPDEST
0xba5 DUP3
0xba6 PUSH1 0x3
0xba8 PUSH1 0x0
0xbaa SWAP1
0xbab SLOAD
0xbac SWAP1
0xbad PUSH2 0x100
0xbb0 EXP
0xbb1 SWAP1
0xbb2 DIV
0xbb3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbc8 AND
0xbc9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbde AND
0xbdf PUSH4 0x70a08231
0xbe4 ADDRESS
0xbe5 PUSH1 0x40
0xbe7 MLOAD
0xbe8 DUP3
0xbe9 PUSH4 0xffffffff
0xbee AND
0xbef PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xc0d MUL
0xc0e DUP2
0xc0f MSTORE
0xc10 PUSH1 0x4
0xc12 ADD
0xc13 DUP1
0xc14 DUP3
0xc15 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc2a AND
0xc2b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc40 AND
0xc41 DUP2
0xc42 MSTORE
0xc43 PUSH1 0x20
0xc45 ADD
0xc46 SWAP2
0xc47 POP
0xc48 POP
0xc49 PUSH1 0x20
0xc4b PUSH1 0x40
0xc4d MLOAD
0xc4e DUP1
0xc4f DUP4
0xc50 SUB
0xc51 DUP2
0xc52 PUSH1 0x0
0xc54 DUP8
0xc55 DUP1
0xc56 EXTCODESIZE
0xc57 ISZERO
0xc58 DUP1
0xc59 ISZERO
0xc5a PUSH2 0xacb
0xc5d JUMPI
---
0xb80: INVALID 
0xb81: JUMPDEST 
0xb83: V757 = 0x0
0xb85: M[0x0] = S1
0xb86: V758 = 0x20
0xb88: V759 = 0x0
0xb8a: V760 = SHA3 0x0 0x20
0xb8c: V761 = 0x2
0xb8e: V762 = MUL 0x2 S0
0xb8f: V763 = ADD V762 V760
0xb90: V764 = 0x0
0xb92: V765 = ADD 0x0 V763
0xb93: V766 = S[V765]
0xb95: V767 = ADD S4 V766
0xb9a: V768 = 0x1
0xb9c: V769 = ADD 0x1 S2
0xba0: V770 = 0x9c8
0xba3: THROW 
0xba4: JUMPDEST 
0xba6: V771 = 0x3
0xba8: V772 = 0x0
0xbab: V773 = S[0x3]
0xbad: V774 = 0x100
0xbb0: V775 = EXP 0x100 0x0
0xbb2: V776 = DIV V773 0x1
0xbb3: V777 = 0xffffffffffffffffffffffffffffffffffffffff
0xbc8: V778 = AND 0xffffffffffffffffffffffffffffffffffffffff V776
0xbc9: V779 = 0xffffffffffffffffffffffffffffffffffffffff
0xbde: V780 = AND 0xffffffffffffffffffffffffffffffffffffffff V778
0xbdf: V781 = 0x70a08231
0xbe4: V782 = ADDRESS
0xbe5: V783 = 0x40
0xbe7: V784 = M[0x40]
0xbe9: V785 = 0xffffffff
0xbee: V786 = AND 0xffffffff 0x70a08231
0xbef: V787 = 0x100000000000000000000000000000000000000000000000000000000
0xc0d: V788 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0xc0f: M[V784] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xc10: V789 = 0x4
0xc12: V790 = ADD 0x4 V784
0xc15: V791 = 0xffffffffffffffffffffffffffffffffffffffff
0xc2a: V792 = AND 0xffffffffffffffffffffffffffffffffffffffff V782
0xc2b: V793 = 0xffffffffffffffffffffffffffffffffffffffff
0xc40: V794 = AND 0xffffffffffffffffffffffffffffffffffffffff V792
0xc42: M[V790] = V794
0xc43: V795 = 0x20
0xc45: V796 = ADD 0x20 V790
0xc49: V797 = 0x20
0xc4b: V798 = 0x40
0xc4d: V799 = M[0x40]
0xc50: V800 = SUB V796 V799
0xc52: V801 = 0x0
0xc56: V802 = EXTCODESIZE V780
0xc57: V803 = ISZERO V802
0xc59: V804 = ISZERO V803
0xc5a: V805 = 0xacb
0xc5d: THROWI V804
---
Entry stack: [0x0, 0x5, 0x0]
Stack pops: 0
Stack additions: [V769, S3, V767, V803, V780, 0x0, V799, V800, V799, 0x20, V796, 0x70a08231, V780, S2, S0, S1, S2]
Exit stack: []

================================

Block 0xc5e
[0xc5e:0xc6c]
---
Predecessors: [0xb80]
Successors: [0xc6d]
---
0xc5e PUSH1 0x0
0xc60 DUP1
0xc61 REVERT
0xc62 JUMPDEST
0xc63 POP
0xc64 GAS
0xc65 CALL
0xc66 ISZERO
0xc67 DUP1
0xc68 ISZERO
0xc69 PUSH2 0xadf
0xc6c JUMPI
---
0xc5e: V806 = 0x0
0xc61: REVERT 0x0 0x0
0xc62: JUMPDEST 
0xc64: V807 = GAS
0xc65: V808 = CALL V807 S1 S2 S3 S4 S5 S6
0xc66: V809 = ISZERO V808
0xc68: V810 = ISZERO V809
0xc69: V811 = 0xadf
0xc6c: THROWI V810
---
Entry stack: [S13, S12, S11, S10, V780, 0x70a08231, V796, 0x20, V799, V800, V799, 0x0, V780, V803]
Stack pops: 0
Stack additions: [V809]
Exit stack: []

================================

Block 0xc6d
[0xc6d:0xc87]
---
Predecessors: [0xc5e]
Successors: [0xc88]
---
0xc6d RETURNDATASIZE
0xc6e PUSH1 0x0
0xc70 DUP1
0xc71 RETURNDATACOPY
0xc72 RETURNDATASIZE
0xc73 PUSH1 0x0
0xc75 REVERT
0xc76 JUMPDEST
0xc77 POP
0xc78 POP
0xc79 POP
0xc7a POP
0xc7b PUSH1 0x40
0xc7d MLOAD
0xc7e RETURNDATASIZE
0xc7f PUSH1 0x20
0xc81 DUP2
0xc82 LT
0xc83 ISZERO
0xc84 PUSH2 0xaf5
0xc87 JUMPI
---
0xc6d: V812 = RETURNDATASIZE
0xc6e: V813 = 0x0
0xc71: RETURNDATACOPY 0x0 0x0 V812
0xc72: V814 = RETURNDATASIZE
0xc73: V815 = 0x0
0xc75: REVERT 0x0 V814
0xc76: JUMPDEST 
0xc7b: V816 = 0x40
0xc7d: V817 = M[0x40]
0xc7e: V818 = RETURNDATASIZE
0xc7f: V819 = 0x20
0xc82: V820 = LT V818 0x20
0xc83: V821 = ISZERO V820
0xc84: V822 = 0xaf5
0xc87: THROWI V821
---
Entry stack: [V809]
Stack pops: 0
Stack additions: [V818, V817]
Exit stack: []

================================

Block 0xc88
[0xc88:0xcab]
---
Predecessors: [0xc6d]
Successors: [0xcac]
---
0xc88 PUSH1 0x0
0xc8a DUP1
0xc8b REVERT
0xc8c JUMPDEST
0xc8d DUP2
0xc8e ADD
0xc8f SWAP1
0xc90 DUP1
0xc91 DUP1
0xc92 MLOAD
0xc93 SWAP1
0xc94 PUSH1 0x20
0xc96 ADD
0xc97 SWAP1
0xc98 SWAP3
0xc99 SWAP2
0xc9a SWAP1
0xc9b POP
0xc9c POP
0xc9d POP
0xc9e SUB
0xc9f SWAP2
0xca0 POP
0xca1 PUSH1 0x0
0xca3 DUP3
0xca4 EQ
0xca5 ISZERO
0xca6 ISZERO
0xca7 ISZERO
0xca8 PUSH2 0xb19
0xcab JUMPI
---
0xc88: V823 = 0x0
0xc8b: REVERT 0x0 0x0
0xc8c: JUMPDEST 
0xc8e: V824 = ADD S1 S0
0xc92: V825 = M[S1]
0xc94: V826 = 0x20
0xc96: V827 = ADD 0x20 S1
0xc9e: V828 = SUB V825 S2
0xca1: V829 = 0x0
0xca4: V830 = EQ V828 0x0
0xca5: V831 = ISZERO V830
0xca6: V832 = ISZERO V831
0xca7: V833 = ISZERO V832
0xca8: V834 = 0xb19
0xcab: THROWI V833
---
Entry stack: [V817, V818]
Stack pops: 0
Stack additions: [S3, V828]
Exit stack: []

================================

Block 0xcac
[0xcac:0xe07]
---
Predecessors: [0xc88]
Successors: [0xe08]
---
0xcac PUSH1 0x0
0xcae DUP1
0xcaf REVERT
0xcb0 JUMPDEST
0xcb1 PUSH2 0xb22
0xcb4 DUP3
0xcb5 PUSH2 0xeb7
0xcb8 JUMP
0xcb9 JUMPDEST
0xcba SWAP2
0xcbb POP
0xcbc PUSH1 0x5
0xcbe PUSH1 0x40
0xcc0 DUP1
0xcc1 MLOAD
0xcc2 SWAP1
0xcc3 DUP2
0xcc4 ADD
0xcc5 PUSH1 0x40
0xcc7 MSTORE
0xcc8 DUP1
0xcc9 DUP5
0xcca DUP2
0xccb MSTORE
0xccc PUSH1 0x20
0xcce ADD
0xccf PUSH1 0x1
0xcd1 SLOAD
0xcd2 DUP2
0xcd3 MSTORE
0xcd4 POP
0xcd5 SWAP1
0xcd6 DUP1
0xcd7 PUSH1 0x1
0xcd9 DUP2
0xcda SLOAD
0xcdb ADD
0xcdc DUP1
0xcdd DUP3
0xcde SSTORE
0xcdf DUP1
0xce0 SWAP2
0xce1 POP
0xce2 POP
0xce3 SWAP1
0xce4 PUSH1 0x1
0xce6 DUP3
0xce7 SUB
0xce8 SWAP1
0xce9 PUSH1 0x0
0xceb MSTORE
0xcec PUSH1 0x20
0xcee PUSH1 0x0
0xcf0 SHA3
0xcf1 SWAP1
0xcf2 PUSH1 0x2
0xcf4 MUL
0xcf5 ADD
0xcf6 PUSH1 0x0
0xcf8 SWAP1
0xcf9 SWAP2
0xcfa SWAP3
0xcfb SWAP1
0xcfc SWAP2
0xcfd SWAP1
0xcfe SWAP2
0xcff POP
0xd00 PUSH1 0x0
0xd02 DUP3
0xd03 ADD
0xd04 MLOAD
0xd05 DUP2
0xd06 PUSH1 0x0
0xd08 ADD
0xd09 SSTORE
0xd0a PUSH1 0x20
0xd0c DUP3
0xd0d ADD
0xd0e MLOAD
0xd0f DUP2
0xd10 PUSH1 0x1
0xd12 ADD
0xd13 SSTORE
0xd14 POP
0xd15 POP
0xd16 POP
0xd17 PUSH1 0x6
0xd19 PUSH1 0x14
0xd1b DUP2
0xd1c DUP2
0xd1d SWAP1
0xd1e SLOAD
0xd1f SWAP1
0xd20 PUSH2 0x100
0xd23 EXP
0xd24 SWAP1
0xd25 DIV
0xd26 PUSH1 0xff
0xd28 AND
0xd29 DUP1
0xd2a SWAP3
0xd2b SWAP2
0xd2c SWAP1
0xd2d PUSH1 0x1
0xd2f ADD
0xd30 SWAP2
0xd31 SWAP1
0xd32 PUSH2 0x100
0xd35 EXP
0xd36 DUP2
0xd37 SLOAD
0xd38 DUP2
0xd39 PUSH1 0xff
0xd3b MUL
0xd3c NOT
0xd3d AND
0xd3e SWAP1
0xd3f DUP4
0xd40 PUSH1 0xff
0xd42 AND
0xd43 MUL
0xd44 OR
0xd45 SWAP1
0xd46 SSTORE
0xd47 POP
0xd48 POP
0xd49 POP
0xd4a POP
0xd4b POP
0xd4c JUMP
0xd4d JUMPDEST
0xd4e PUSH20 0x63f7547ac277ea0b52a0b060be6af8c5904953aa
0xd63 DUP2
0xd64 JUMP
0xd65 JUMPDEST
0xd66 PUSH20 0xee06bddaffa56a303718de53a5bc347efbe4c68f
0xd7b DUP2
0xd7c JUMP
0xd7d JUMPDEST
0xd7e PUSH1 0x4
0xd80 PUSH1 0x20
0xd82 MSTORE
0xd83 DUP1
0xd84 PUSH1 0x0
0xd86 MSTORE
0xd87 PUSH1 0x40
0xd89 PUSH1 0x0
0xd8b SHA3
0xd8c PUSH1 0x0
0xd8e SWAP2
0xd8f POP
0xd90 SLOAD
0xd91 SWAP1
0xd92 PUSH2 0x100
0xd95 EXP
0xd96 SWAP1
0xd97 DIV
0xd98 PUSH1 0xff
0xd9a AND
0xd9b DUP2
0xd9c JUMP
0xd9d JUMPDEST
0xd9e PUSH1 0x6
0xda0 PUSH1 0x14
0xda2 SWAP1
0xda3 SLOAD
0xda4 SWAP1
0xda5 PUSH2 0x100
0xda8 EXP
0xda9 SWAP1
0xdaa DIV
0xdab PUSH1 0xff
0xdad AND
0xdae DUP2
0xdaf JUMP
0xdb0 JUMPDEST
0xdb1 PUSH1 0x6
0xdb3 PUSH1 0x0
0xdb5 SWAP1
0xdb6 SLOAD
0xdb7 SWAP1
0xdb8 PUSH2 0x100
0xdbb EXP
0xdbc SWAP1
0xdbd DIV
0xdbe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdd3 AND
0xdd4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xde9 AND
0xdea CALLER
0xdeb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe00 AND
0xe01 EQ
0xe02 ISZERO
0xe03 ISZERO
0xe04 PUSH2 0xc75
0xe07 JUMPI
---
0xcac: V835 = 0x0
0xcaf: REVERT 0x0 0x0
0xcb0: JUMPDEST 
0xcb1: V836 = 0xb22
0xcb5: V837 = 0xeb7
0xcb8: THROW 
0xcb9: JUMPDEST 
0xcbc: V838 = 0x5
0xcbe: V839 = 0x40
0xcc1: V840 = M[0x40]
0xcc4: V841 = ADD V840 0x40
0xcc5: V842 = 0x40
0xcc7: M[0x40] = V841
0xccb: M[V840] = S0
0xccc: V843 = 0x20
0xcce: V844 = ADD 0x20 V840
0xccf: V845 = 0x1
0xcd1: V846 = S[0x1]
0xcd3: M[V844] = V846
0xcd7: V847 = 0x1
0xcda: V848 = S[0x5]
0xcdb: V849 = ADD V848 0x1
0xcde: S[0x5] = V849
0xce4: V850 = 0x1
0xce7: V851 = SUB V849 0x1
0xce9: V852 = 0x0
0xceb: M[0x0] = 0x5
0xcec: V853 = 0x20
0xcee: V854 = 0x0
0xcf0: V855 = SHA3 0x0 0x20
0xcf2: V856 = 0x2
0xcf4: V857 = MUL 0x2 V851
0xcf5: V858 = ADD V857 V855
0xcf6: V859 = 0x0
0xd00: V860 = 0x0
0xd03: V861 = ADD V840 0x0
0xd04: V862 = M[V861]
0xd06: V863 = 0x0
0xd08: V864 = ADD 0x0 V858
0xd09: S[V864] = V862
0xd0a: V865 = 0x20
0xd0d: V866 = ADD V840 0x20
0xd0e: V867 = M[V866]
0xd10: V868 = 0x1
0xd12: V869 = ADD 0x1 V858
0xd13: S[V869] = V867
0xd17: V870 = 0x6
0xd19: V871 = 0x14
0xd1e: V872 = S[0x6]
0xd20: V873 = 0x100
0xd23: V874 = EXP 0x100 0x14
0xd25: V875 = DIV V872 0x10000000000000000000000000000000000000000
0xd26: V876 = 0xff
0xd28: V877 = AND 0xff V875
0xd2d: V878 = 0x1
0xd2f: V879 = ADD 0x1 V877
0xd32: V880 = 0x100
0xd35: V881 = EXP 0x100 0x14
0xd37: V882 = S[0x6]
0xd39: V883 = 0xff
0xd3b: V884 = MUL 0xff 0x10000000000000000000000000000000000000000
0xd3c: V885 = NOT 0xff0000000000000000000000000000000000000000
0xd3d: V886 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V882
0xd40: V887 = 0xff
0xd42: V888 = AND 0xff V879
0xd43: V889 = MUL V888 0x10000000000000000000000000000000000000000
0xd44: V890 = OR V889 V886
0xd46: S[0x6] = V890
0xd4c: JUMP S4
0xd4d: JUMPDEST 
0xd4e: V891 = 0x63f7547ac277ea0b52a0b060be6af8c5904953aa
0xd64: JUMP S0
0xd65: JUMPDEST 
0xd66: V892 = 0xee06bddaffa56a303718de53a5bc347efbe4c68f
0xd7c: JUMP S0
0xd7d: JUMPDEST 
0xd7e: V893 = 0x4
0xd80: V894 = 0x20
0xd82: M[0x20] = 0x4
0xd84: V895 = 0x0
0xd86: M[0x0] = S0
0xd87: V896 = 0x40
0xd89: V897 = 0x0
0xd8b: V898 = SHA3 0x0 0x40
0xd8c: V899 = 0x0
0xd90: V900 = S[V898]
0xd92: V901 = 0x100
0xd95: V902 = EXP 0x100 0x0
0xd97: V903 = DIV V900 0x1
0xd98: V904 = 0xff
0xd9a: V905 = AND 0xff V903
0xd9c: JUMP S1
0xd9d: JUMPDEST 
0xd9e: V906 = 0x6
0xda0: V907 = 0x14
0xda3: V908 = S[0x6]
0xda5: V909 = 0x100
0xda8: V910 = EXP 0x100 0x14
0xdaa: V911 = DIV V908 0x10000000000000000000000000000000000000000
0xdab: V912 = 0xff
0xdad: V913 = AND 0xff V911
0xdaf: JUMP S0
0xdb0: JUMPDEST 
0xdb1: V914 = 0x6
0xdb3: V915 = 0x0
0xdb6: V916 = S[0x6]
0xdb8: V917 = 0x100
0xdbb: V918 = EXP 0x100 0x0
0xdbd: V919 = DIV V916 0x1
0xdbe: V920 = 0xffffffffffffffffffffffffffffffffffffffff
0xdd3: V921 = AND 0xffffffffffffffffffffffffffffffffffffffff V919
0xdd4: V922 = 0xffffffffffffffffffffffffffffffffffffffff
0xde9: V923 = AND 0xffffffffffffffffffffffffffffffffffffffff V921
0xdea: V924 = CALLER
0xdeb: V925 = 0xffffffffffffffffffffffffffffffffffffffff
0xe00: V926 = AND 0xffffffffffffffffffffffffffffffffffffffff V924
0xe01: V927 = EQ V926 V923
0xe02: V928 = ISZERO V927
0xe03: V929 = ISZERO V928
0xe04: V930 = 0xc75
0xe07: THROWI V929
---
Entry stack: [V828, S0]
Stack pops: 0
Stack additions: [S1, 0xb22, S0, S1, 0x63f7547ac277ea0b52a0b060be6af8c5904953aa, S0, 0xee06bddaffa56a303718de53a5bc347efbe4c68f, S0, V905, S1, V913, S0]
Exit stack: []

================================

Block 0xe08
[0xe08:0xee1]
---
Predecessors: [0xcac]
Successors: [0xee2]
---
0xe08 PUSH1 0x0
0xe0a DUP1
0xe0b REVERT
0xe0c JUMPDEST
0xe0d DUP1
0xe0e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe23 AND
0xe24 PUSH4 0xa9059cbb
0xe29 PUSH1 0x6
0xe2b PUSH1 0x0
0xe2d SWAP1
0xe2e SLOAD
0xe2f SWAP1
0xe30 PUSH2 0x100
0xe33 EXP
0xe34 SWAP1
0xe35 DIV
0xe36 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe4b AND
0xe4c DUP4
0xe4d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe62 AND
0xe63 PUSH4 0x70a08231
0xe68 ADDRESS
0xe69 PUSH1 0x40
0xe6b MLOAD
0xe6c DUP3
0xe6d PUSH4 0xffffffff
0xe72 AND
0xe73 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xe91 MUL
0xe92 DUP2
0xe93 MSTORE
0xe94 PUSH1 0x4
0xe96 ADD
0xe97 DUP1
0xe98 DUP3
0xe99 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xeae AND
0xeaf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xec4 AND
0xec5 DUP2
0xec6 MSTORE
0xec7 PUSH1 0x20
0xec9 ADD
0xeca SWAP2
0xecb POP
0xecc POP
0xecd PUSH1 0x20
0xecf PUSH1 0x40
0xed1 MLOAD
0xed2 DUP1
0xed3 DUP4
0xed4 SUB
0xed5 DUP2
0xed6 PUSH1 0x0
0xed8 DUP8
0xed9 DUP1
0xeda EXTCODESIZE
0xedb ISZERO
0xedc DUP1
0xedd ISZERO
0xede PUSH2 0xd4f
0xee1 JUMPI
---
0xe08: V931 = 0x0
0xe0b: REVERT 0x0 0x0
0xe0c: JUMPDEST 
0xe0e: V932 = 0xffffffffffffffffffffffffffffffffffffffff
0xe23: V933 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xe24: V934 = 0xa9059cbb
0xe29: V935 = 0x6
0xe2b: V936 = 0x0
0xe2e: V937 = S[0x6]
0xe30: V938 = 0x100
0xe33: V939 = EXP 0x100 0x0
0xe35: V940 = DIV V937 0x1
0xe36: V941 = 0xffffffffffffffffffffffffffffffffffffffff
0xe4b: V942 = AND 0xffffffffffffffffffffffffffffffffffffffff V940
0xe4d: V943 = 0xffffffffffffffffffffffffffffffffffffffff
0xe62: V944 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xe63: V945 = 0x70a08231
0xe68: V946 = ADDRESS
0xe69: V947 = 0x40
0xe6b: V948 = M[0x40]
0xe6d: V949 = 0xffffffff
0xe72: V950 = AND 0xffffffff 0x70a08231
0xe73: V951 = 0x100000000000000000000000000000000000000000000000000000000
0xe91: V952 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0xe93: M[V948] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xe94: V953 = 0x4
0xe96: V954 = ADD 0x4 V948
0xe99: V955 = 0xffffffffffffffffffffffffffffffffffffffff
0xeae: V956 = AND 0xffffffffffffffffffffffffffffffffffffffff V946
0xeaf: V957 = 0xffffffffffffffffffffffffffffffffffffffff
0xec4: V958 = AND 0xffffffffffffffffffffffffffffffffffffffff V956
0xec6: M[V954] = V958
0xec7: V959 = 0x20
0xec9: V960 = ADD 0x20 V954
0xecd: V961 = 0x20
0xecf: V962 = 0x40
0xed1: V963 = M[0x40]
0xed4: V964 = SUB V960 V963
0xed6: V965 = 0x0
0xeda: V966 = EXTCODESIZE V944
0xedb: V967 = ISZERO V966
0xedd: V968 = ISZERO V967
0xede: V969 = 0xd4f
0xee1: THROWI V968
---
Entry stack: []
Stack pops: 0
Stack additions: [V967, V944, 0x0, V963, V964, V963, 0x20, V960, 0x70a08231, V944, V942, 0xa9059cbb, V933, S0]
Exit stack: []

================================

Block 0xee2
[0xee2:0xef0]
---
Predecessors: [0xe08]
Successors: [0xef1]
---
0xee2 PUSH1 0x0
0xee4 DUP1
0xee5 REVERT
0xee6 JUMPDEST
0xee7 POP
0xee8 GAS
0xee9 CALL
0xeea ISZERO
0xeeb DUP1
0xeec ISZERO
0xeed PUSH2 0xd63
0xef0 JUMPI
---
0xee2: V970 = 0x0
0xee5: REVERT 0x0 0x0
0xee6: JUMPDEST 
0xee8: V971 = GAS
0xee9: V972 = CALL V971 S1 S2 S3 S4 S5 S6
0xeea: V973 = ISZERO V972
0xeec: V974 = ISZERO V973
0xeed: V975 = 0xd63
0xef0: THROWI V974
---
Entry stack: [S13, V933, 0xa9059cbb, V942, V944, 0x70a08231, V960, 0x20, V963, V964, V963, 0x0, V944, V967]
Stack pops: 0
Stack additions: [V973]
Exit stack: []

================================

Block 0xef1
[0xef1:0xf0b]
---
Predecessors: [0xee2]
Successors: [0xf0c]
---
0xef1 RETURNDATASIZE
0xef2 PUSH1 0x0
0xef4 DUP1
0xef5 RETURNDATACOPY
0xef6 RETURNDATASIZE
0xef7 PUSH1 0x0
0xef9 REVERT
0xefa JUMPDEST
0xefb POP
0xefc POP
0xefd POP
0xefe POP
0xeff PUSH1 0x40
0xf01 MLOAD
0xf02 RETURNDATASIZE
0xf03 PUSH1 0x20
0xf05 DUP2
0xf06 LT
0xf07 ISZERO
0xf08 PUSH2 0xd79
0xf0b JUMPI
---
0xef1: V976 = RETURNDATASIZE
0xef2: V977 = 0x0
0xef5: RETURNDATACOPY 0x0 0x0 V976
0xef6: V978 = RETURNDATASIZE
0xef7: V979 = 0x0
0xef9: REVERT 0x0 V978
0xefa: JUMPDEST 
0xeff: V980 = 0x40
0xf01: V981 = M[0x40]
0xf02: V982 = RETURNDATASIZE
0xf03: V983 = 0x20
0xf06: V984 = LT V982 0x20
0xf07: V985 = ISZERO V984
0xf08: V986 = 0xd79
0xf0b: THROWI V985
---
Entry stack: [V973]
Stack pops: 0
Stack additions: [V982, V981]
Exit stack: []

================================

Block 0xf0c
[0xf0c:0xfa1]
---
Predecessors: [0xef1]
Successors: [0xfa2]
---
0xf0c PUSH1 0x0
0xf0e DUP1
0xf0f REVERT
0xf10 JUMPDEST
0xf11 DUP2
0xf12 ADD
0xf13 SWAP1
0xf14 DUP1
0xf15 DUP1
0xf16 MLOAD
0xf17 SWAP1
0xf18 PUSH1 0x20
0xf1a ADD
0xf1b SWAP1
0xf1c SWAP3
0xf1d SWAP2
0xf1e SWAP1
0xf1f POP
0xf20 POP
0xf21 POP
0xf22 PUSH1 0x40
0xf24 MLOAD
0xf25 DUP4
0xf26 PUSH4 0xffffffff
0xf2b AND
0xf2c PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xf4a MUL
0xf4b DUP2
0xf4c MSTORE
0xf4d PUSH1 0x4
0xf4f ADD
0xf50 DUP1
0xf51 DUP4
0xf52 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf67 AND
0xf68 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf7d AND
0xf7e DUP2
0xf7f MSTORE
0xf80 PUSH1 0x20
0xf82 ADD
0xf83 DUP3
0xf84 DUP2
0xf85 MSTORE
0xf86 PUSH1 0x20
0xf88 ADD
0xf89 SWAP3
0xf8a POP
0xf8b POP
0xf8c POP
0xf8d PUSH1 0x20
0xf8f PUSH1 0x40
0xf91 MLOAD
0xf92 DUP1
0xf93 DUP4
0xf94 SUB
0xf95 DUP2
0xf96 PUSH1 0x0
0xf98 DUP8
0xf99 DUP1
0xf9a EXTCODESIZE
0xf9b ISZERO
0xf9c DUP1
0xf9d ISZERO
0xf9e PUSH2 0xe0f
0xfa1 JUMPI
---
0xf0c: V987 = 0x0
0xf0f: REVERT 0x0 0x0
0xf10: JUMPDEST 
0xf12: V988 = ADD S1 S0
0xf16: V989 = M[S1]
0xf18: V990 = 0x20
0xf1a: V991 = ADD 0x20 S1
0xf22: V992 = 0x40
0xf24: V993 = M[0x40]
0xf26: V994 = 0xffffffff
0xf2b: V995 = AND 0xffffffff S3
0xf2c: V996 = 0x100000000000000000000000000000000000000000000000000000000
0xf4a: V997 = MUL 0x100000000000000000000000000000000000000000000000000000000 V995
0xf4c: M[V993] = V997
0xf4d: V998 = 0x4
0xf4f: V999 = ADD 0x4 V993
0xf52: V1000 = 0xffffffffffffffffffffffffffffffffffffffff
0xf67: V1001 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xf68: V1002 = 0xffffffffffffffffffffffffffffffffffffffff
0xf7d: V1003 = AND 0xffffffffffffffffffffffffffffffffffffffff V1001
0xf7f: M[V999] = V1003
0xf80: V1004 = 0x20
0xf82: V1005 = ADD 0x20 V999
0xf85: M[V1005] = V989
0xf86: V1006 = 0x20
0xf88: V1007 = ADD 0x20 V1005
0xf8d: V1008 = 0x20
0xf8f: V1009 = 0x40
0xf91: V1010 = M[0x40]
0xf94: V1011 = SUB V1007 V1010
0xf96: V1012 = 0x0
0xf9a: V1013 = EXTCODESIZE S4
0xf9b: V1014 = ISZERO V1013
0xf9d: V1015 = ISZERO V1014
0xf9e: V1016 = 0xe0f
0xfa1: THROWI V1015
---
Entry stack: [V981, V982]
Stack pops: 0
Stack additions: [V1014, S4, 0x0, V1010, V1011, V1010, 0x20, V1007, S3, S4]
Exit stack: []

================================

Block 0xfa2
[0xfa2:0xfb0]
---
Predecessors: [0xf0c]
Successors: [0xfb1]
---
0xfa2 PUSH1 0x0
0xfa4 DUP1
0xfa5 REVERT
0xfa6 JUMPDEST
0xfa7 POP
0xfa8 GAS
0xfa9 CALL
0xfaa ISZERO
0xfab DUP1
0xfac ISZERO
0xfad PUSH2 0xe23
0xfb0 JUMPI
---
0xfa2: V1017 = 0x0
0xfa5: REVERT 0x0 0x0
0xfa6: JUMPDEST 
0xfa8: V1018 = GAS
0xfa9: V1019 = CALL V1018 S1 S2 S3 S4 S5 S6
0xfaa: V1020 = ISZERO V1019
0xfac: V1021 = ISZERO V1020
0xfad: V1022 = 0xe23
0xfb0: THROWI V1021
---
Entry stack: [S9, S8, V1007, 0x20, V1010, V1011, V1010, 0x0, S1, V1014]
Stack pops: 0
Stack additions: [V1020]
Exit stack: []

================================

Block 0xfb1
[0xfb1:0xfcb]
---
Predecessors: [0xfa2]
Successors: [0xfcc]
---
0xfb1 RETURNDATASIZE
0xfb2 PUSH1 0x0
0xfb4 DUP1
0xfb5 RETURNDATACOPY
0xfb6 RETURNDATASIZE
0xfb7 PUSH1 0x0
0xfb9 REVERT
0xfba JUMPDEST
0xfbb POP
0xfbc POP
0xfbd POP
0xfbe POP
0xfbf PUSH1 0x40
0xfc1 MLOAD
0xfc2 RETURNDATASIZE
0xfc3 PUSH1 0x20
0xfc5 DUP2
0xfc6 LT
0xfc7 ISZERO
0xfc8 PUSH2 0xe39
0xfcb JUMPI
---
0xfb1: V1023 = RETURNDATASIZE
0xfb2: V1024 = 0x0
0xfb5: RETURNDATACOPY 0x0 0x0 V1023
0xfb6: V1025 = RETURNDATASIZE
0xfb7: V1026 = 0x0
0xfb9: REVERT 0x0 V1025
0xfba: JUMPDEST 
0xfbf: V1027 = 0x40
0xfc1: V1028 = M[0x40]
0xfc2: V1029 = RETURNDATASIZE
0xfc3: V1030 = 0x20
0xfc6: V1031 = LT V1029 0x20
0xfc7: V1032 = ISZERO V1031
0xfc8: V1033 = 0xe39
0xfcb: THROWI V1032
---
Entry stack: [V1020]
Stack pops: 0
Stack additions: [V1029, V1028]
Exit stack: []

================================

Block 0xfcc
[0xfcc:0xfe7]
---
Predecessors: [0xfb1]
Successors: [0xfe8]
---
0xfcc PUSH1 0x0
0xfce DUP1
0xfcf REVERT
0xfd0 JUMPDEST
0xfd1 DUP2
0xfd2 ADD
0xfd3 SWAP1
0xfd4 DUP1
0xfd5 DUP1
0xfd6 MLOAD
0xfd7 SWAP1
0xfd8 PUSH1 0x20
0xfda ADD
0xfdb SWAP1
0xfdc SWAP3
0xfdd SWAP2
0xfde SWAP1
0xfdf POP
0xfe0 POP
0xfe1 POP
0xfe2 ISZERO
0xfe3 ISZERO
0xfe4 PUSH2 0xe55
0xfe7 JUMPI
---
0xfcc: V1034 = 0x0
0xfcf: REVERT 0x0 0x0
0xfd0: JUMPDEST 
0xfd2: V1035 = ADD S1 S0
0xfd6: V1036 = M[S1]
0xfd8: V1037 = 0x20
0xfda: V1038 = ADD 0x20 S1
0xfe2: V1039 = ISZERO V1036
0xfe3: V1040 = ISZERO V1039
0xfe4: V1041 = 0xe55
0xfe7: THROWI V1040
---
Entry stack: [V1028, V1029]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xfe8
[0xfe8:0x1002]
---
Predecessors: [0xfcc]
Successors: [0x1003]
---
0xfe8 PUSH1 0x0
0xfea DUP1
0xfeb REVERT
0xfec JUMPDEST
0xfed POP
0xfee JUMP
0xfef JUMPDEST
0xff0 PUSH2 0x1f4
0xff3 DUP2
0xff4 JUMP
0xff5 JUMPDEST
0xff6 PUSH1 0x5
0xff8 DUP2
0xff9 DUP2
0xffa SLOAD
0xffb DUP2
0xffc LT
0xffd ISZERO
0xffe ISZERO
0xfff PUSH2 0xe6d
0x1002 JUMPI
---
0xfe8: V1042 = 0x0
0xfeb: REVERT 0x0 0x0
0xfec: JUMPDEST 
0xfee: JUMP S1
0xfef: JUMPDEST 
0xff0: V1043 = 0x1f4
0xff4: JUMP S0
0xff5: JUMPDEST 
0xff6: V1044 = 0x5
0xffa: V1045 = S[0x5]
0xffc: V1046 = LT S0 V1045
0xffd: V1047 = ISZERO V1046
0xffe: V1048 = ISZERO V1047
0xfff: V1049 = 0xe6d
0x1002: THROWI V1048
---
Entry stack: []
Stack pops: 0
Stack additions: [0x1f4, S0, S0, 0x5, S0]
Exit stack: []

================================

Block 0x1003
[0x1003:0x105c]
---
Predecessors: [0xfe8]
Successors: [0x105d]
---
0x1003 INVALID
0x1004 JUMPDEST
0x1005 SWAP1
0x1006 PUSH1 0x0
0x1008 MSTORE
0x1009 PUSH1 0x20
0x100b PUSH1 0x0
0x100d SHA3
0x100e SWAP1
0x100f PUSH1 0x2
0x1011 MUL
0x1012 ADD
0x1013 PUSH1 0x0
0x1015 SWAP2
0x1016 POP
0x1017 SWAP1
0x1018 POP
0x1019 DUP1
0x101a PUSH1 0x0
0x101c ADD
0x101d SLOAD
0x101e SWAP1
0x101f DUP1
0x1020 PUSH1 0x1
0x1022 ADD
0x1023 SLOAD
0x1024 SWAP1
0x1025 POP
0x1026 DUP3
0x1027 JUMP
0x1028 JUMPDEST
0x1029 PUSH1 0x3
0x102b PUSH1 0x0
0x102d SWAP1
0x102e SLOAD
0x102f SWAP1
0x1030 PUSH2 0x100
0x1033 EXP
0x1034 SWAP1
0x1035 DIV
0x1036 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x104b AND
0x104c DUP2
0x104d JUMP
0x104e JUMPDEST
0x104f PUSH1 0x0
0x1051 DUP1
0x1052 PUSH2 0x1f4
0x1055 DUP4
0x1056 DUP2
0x1057 ISZERO
0x1058 ISZERO
0x1059 PUSH2 0xec7
0x105c JUMPI
---
0x1003: INVALID 
0x1004: JUMPDEST 
0x1006: V1050 = 0x0
0x1008: M[0x0] = S1
0x1009: V1051 = 0x20
0x100b: V1052 = 0x0
0x100d: V1053 = SHA3 0x0 0x20
0x100f: V1054 = 0x2
0x1011: V1055 = MUL 0x2 S0
0x1012: V1056 = ADD V1055 V1053
0x1013: V1057 = 0x0
0x101a: V1058 = 0x0
0x101c: V1059 = ADD 0x0 V1056
0x101d: V1060 = S[V1059]
0x1020: V1061 = 0x1
0x1022: V1062 = ADD 0x1 V1056
0x1023: V1063 = S[V1062]
0x1027: JUMP S3
0x1028: JUMPDEST 
0x1029: V1064 = 0x3
0x102b: V1065 = 0x0
0x102e: V1066 = S[0x3]
0x1030: V1067 = 0x100
0x1033: V1068 = EXP 0x100 0x0
0x1035: V1069 = DIV V1066 0x1
0x1036: V1070 = 0xffffffffffffffffffffffffffffffffffffffff
0x104b: V1071 = AND 0xffffffffffffffffffffffffffffffffffffffff V1069
0x104d: JUMP S0
0x104e: JUMPDEST 
0x104f: V1072 = 0x0
0x1052: V1073 = 0x1f4
0x1057: V1074 = ISZERO 0x1f4
0x1058: V1075 = ISZERO 0x0
0x1059: V1076 = 0xec7
0x105c: THROWI 0x1
---
Entry stack: [S2, 0x5, S0]
Stack pops: 0
Stack additions: [V1063, V1060, S3, V1071, S0, S0, 0x1f4, 0x0, 0x0, S0]
Exit stack: []

================================

Block 0x105d
[0x105d:0x1135]
---
Predecessors: [0x1003]
Successors: [0x1136]
---
0x105d INVALID
0x105e JUMPDEST
0x105f DIV
0x1060 SWAP1
0x1061 POP
0x1062 PUSH1 0x3
0x1064 PUSH1 0x0
0x1066 SWAP1
0x1067 SLOAD
0x1068 SWAP1
0x1069 PUSH2 0x100
0x106c EXP
0x106d SWAP1
0x106e DIV
0x106f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1084 AND
0x1085 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x109a AND
0x109b PUSH4 0xa9059cbb
0x10a0 PUSH20 0xee06bddaffa56a303718de53a5bc347efbe4c68f
0x10b5 DUP4
0x10b6 PUSH1 0x40
0x10b8 MLOAD
0x10b9 DUP4
0x10ba PUSH4 0xffffffff
0x10bf AND
0x10c0 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x10de MUL
0x10df DUP2
0x10e0 MSTORE
0x10e1 PUSH1 0x4
0x10e3 ADD
0x10e4 DUP1
0x10e5 DUP4
0x10e6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10fb AND
0x10fc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1111 AND
0x1112 DUP2
0x1113 MSTORE
0x1114 PUSH1 0x20
0x1116 ADD
0x1117 DUP3
0x1118 DUP2
0x1119 MSTORE
0x111a PUSH1 0x20
0x111c ADD
0x111d SWAP3
0x111e POP
0x111f POP
0x1120 POP
0x1121 PUSH1 0x20
0x1123 PUSH1 0x40
0x1125 MLOAD
0x1126 DUP1
0x1127 DUP4
0x1128 SUB
0x1129 DUP2
0x112a PUSH1 0x0
0x112c DUP8
0x112d DUP1
0x112e EXTCODESIZE
0x112f ISZERO
0x1130 DUP1
0x1131 ISZERO
0x1132 PUSH2 0xfa3
0x1135 JUMPI
---
0x105d: INVALID 
0x105e: JUMPDEST 
0x105f: V1077 = DIV S0 S1
0x1062: V1078 = 0x3
0x1064: V1079 = 0x0
0x1067: V1080 = S[0x3]
0x1069: V1081 = 0x100
0x106c: V1082 = EXP 0x100 0x0
0x106e: V1083 = DIV V1080 0x1
0x106f: V1084 = 0xffffffffffffffffffffffffffffffffffffffff
0x1084: V1085 = AND 0xffffffffffffffffffffffffffffffffffffffff V1083
0x1085: V1086 = 0xffffffffffffffffffffffffffffffffffffffff
0x109a: V1087 = AND 0xffffffffffffffffffffffffffffffffffffffff V1085
0x109b: V1088 = 0xa9059cbb
0x10a0: V1089 = 0xee06bddaffa56a303718de53a5bc347efbe4c68f
0x10b6: V1090 = 0x40
0x10b8: V1091 = M[0x40]
0x10ba: V1092 = 0xffffffff
0x10bf: V1093 = AND 0xffffffff 0xa9059cbb
0x10c0: V1094 = 0x100000000000000000000000000000000000000000000000000000000
0x10de: V1095 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x10e0: M[V1091] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x10e1: V1096 = 0x4
0x10e3: V1097 = ADD 0x4 V1091
0x10e6: V1098 = 0xffffffffffffffffffffffffffffffffffffffff
0x10fb: V1099 = AND 0xffffffffffffffffffffffffffffffffffffffff 0xee06bddaffa56a303718de53a5bc347efbe4c68f
0x10fc: V1100 = 0xffffffffffffffffffffffffffffffffffffffff
0x1111: V1101 = AND 0xffffffffffffffffffffffffffffffffffffffff 0xee06bddaffa56a303718de53a5bc347efbe4c68f
0x1113: M[V1097] = 0xee06bddaffa56a303718de53a5bc347efbe4c68f
0x1114: V1102 = 0x20
0x1116: V1103 = ADD 0x20 V1097
0x1119: M[V1103] = V1077
0x111a: V1104 = 0x20
0x111c: V1105 = ADD 0x20 V1103
0x1121: V1106 = 0x20
0x1123: V1107 = 0x40
0x1125: V1108 = M[0x40]
0x1128: V1109 = SUB V1105 V1108
0x112a: V1110 = 0x0
0x112e: V1111 = EXTCODESIZE V1087
0x112f: V1112 = ISZERO V1111
0x1131: V1113 = ISZERO V1112
0x1132: V1114 = 0xfa3
0x1135: THROWI V1113
---
Entry stack: [S4, 0x0, 0x0, 0x1f4, S0]
Stack pops: 0
Stack additions: [V1112, V1087, 0x0, V1108, V1109, V1108, 0x20, V1105, 0xa9059cbb, V1087, V1077]
Exit stack: []

================================

Block 0x1136
[0x1136:0x1144]
---
Predecessors: [0x105d]
Successors: [0x1145]
---
0x1136 PUSH1 0x0
0x1138 DUP1
0x1139 REVERT
0x113a JUMPDEST
0x113b POP
0x113c GAS
0x113d CALL
0x113e ISZERO
0x113f DUP1
0x1140 ISZERO
0x1141 PUSH2 0xfb7
0x1144 JUMPI
---
0x1136: V1115 = 0x0
0x1139: REVERT 0x0 0x0
0x113a: JUMPDEST 
0x113c: V1116 = GAS
0x113d: V1117 = CALL V1116 S1 S2 S3 S4 S5 S6
0x113e: V1118 = ISZERO V1117
0x1140: V1119 = ISZERO V1118
0x1141: V1120 = 0xfb7
0x1144: THROWI V1119
---
Entry stack: [V1077, V1087, 0xa9059cbb, V1105, 0x20, V1108, V1109, V1108, 0x0, V1087, V1112]
Stack pops: 0
Stack additions: [V1118]
Exit stack: []

================================

Block 0x1145
[0x1145:0x115f]
---
Predecessors: [0x1136]
Successors: [0x1160]
---
0x1145 RETURNDATASIZE
0x1146 PUSH1 0x0
0x1148 DUP1
0x1149 RETURNDATACOPY
0x114a RETURNDATASIZE
0x114b PUSH1 0x0
0x114d REVERT
0x114e JUMPDEST
0x114f POP
0x1150 POP
0x1151 POP
0x1152 POP
0x1153 PUSH1 0x40
0x1155 MLOAD
0x1156 RETURNDATASIZE
0x1157 PUSH1 0x20
0x1159 DUP2
0x115a LT
0x115b ISZERO
0x115c PUSH2 0xfcd
0x115f JUMPI
---
0x1145: V1121 = RETURNDATASIZE
0x1146: V1122 = 0x0
0x1149: RETURNDATACOPY 0x0 0x0 V1121
0x114a: V1123 = RETURNDATASIZE
0x114b: V1124 = 0x0
0x114d: REVERT 0x0 V1123
0x114e: JUMPDEST 
0x1153: V1125 = 0x40
0x1155: V1126 = M[0x40]
0x1156: V1127 = RETURNDATASIZE
0x1157: V1128 = 0x20
0x115a: V1129 = LT V1127 0x20
0x115b: V1130 = ISZERO V1129
0x115c: V1131 = 0xfcd
0x115f: THROWI V1130
---
Entry stack: [V1118]
Stack pops: 0
Stack additions: [V1127, V1126]
Exit stack: []

================================

Block 0x1160
[0x1160:0x117b]
---
Predecessors: [0x1145]
Successors: [0x117c]
---
0x1160 PUSH1 0x0
0x1162 DUP1
0x1163 REVERT
0x1164 JUMPDEST
0x1165 DUP2
0x1166 ADD
0x1167 SWAP1
0x1168 DUP1
0x1169 DUP1
0x116a MLOAD
0x116b SWAP1
0x116c PUSH1 0x20
0x116e ADD
0x116f SWAP1
0x1170 SWAP3
0x1171 SWAP2
0x1172 SWAP1
0x1173 POP
0x1174 POP
0x1175 POP
0x1176 ISZERO
0x1177 ISZERO
0x1178 PUSH2 0xfe9
0x117b JUMPI
---
0x1160: V1132 = 0x0
0x1163: REVERT 0x0 0x0
0x1164: JUMPDEST 
0x1166: V1133 = ADD S1 S0
0x116a: V1134 = M[S1]
0x116c: V1135 = 0x20
0x116e: V1136 = ADD 0x20 S1
0x1176: V1137 = ISZERO V1134
0x1177: V1138 = ISZERO V1137
0x1178: V1139 = 0xfe9
0x117b: THROWI V1138
---
Entry stack: [V1126, V1127]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x117c
[0x117c:0x1254]
---
Predecessors: [0x1160]
Successors: [0x1255]
---
0x117c PUSH1 0x0
0x117e DUP1
0x117f REVERT
0x1180 JUMPDEST
0x1181 PUSH1 0x3
0x1183 PUSH1 0x0
0x1185 SWAP1
0x1186 SLOAD
0x1187 SWAP1
0x1188 PUSH2 0x100
0x118b EXP
0x118c SWAP1
0x118d DIV
0x118e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11a3 AND
0x11a4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11b9 AND
0x11ba PUSH4 0xa9059cbb
0x11bf PUSH20 0x63f7547ac277ea0b52a0b060be6af8c5904953aa
0x11d4 DUP4
0x11d5 PUSH1 0x40
0x11d7 MLOAD
0x11d8 DUP4
0x11d9 PUSH4 0xffffffff
0x11de AND
0x11df PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x11fd MUL
0x11fe DUP2
0x11ff MSTORE
0x1200 PUSH1 0x4
0x1202 ADD
0x1203 DUP1
0x1204 DUP4
0x1205 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x121a AND
0x121b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1230 AND
0x1231 DUP2
0x1232 MSTORE
0x1233 PUSH1 0x20
0x1235 ADD
0x1236 DUP3
0x1237 DUP2
0x1238 MSTORE
0x1239 PUSH1 0x20
0x123b ADD
0x123c SWAP3
0x123d POP
0x123e POP
0x123f POP
0x1240 PUSH1 0x20
0x1242 PUSH1 0x40
0x1244 MLOAD
0x1245 DUP1
0x1246 DUP4
0x1247 SUB
0x1248 DUP2
0x1249 PUSH1 0x0
0x124b DUP8
0x124c DUP1
0x124d EXTCODESIZE
0x124e ISZERO
0x124f DUP1
0x1250 ISZERO
0x1251 PUSH2 0x10c2
0x1254 JUMPI
---
0x117c: V1140 = 0x0
0x117f: REVERT 0x0 0x0
0x1180: JUMPDEST 
0x1181: V1141 = 0x3
0x1183: V1142 = 0x0
0x1186: V1143 = S[0x3]
0x1188: V1144 = 0x100
0x118b: V1145 = EXP 0x100 0x0
0x118d: V1146 = DIV V1143 0x1
0x118e: V1147 = 0xffffffffffffffffffffffffffffffffffffffff
0x11a3: V1148 = AND 0xffffffffffffffffffffffffffffffffffffffff V1146
0x11a4: V1149 = 0xffffffffffffffffffffffffffffffffffffffff
0x11b9: V1150 = AND 0xffffffffffffffffffffffffffffffffffffffff V1148
0x11ba: V1151 = 0xa9059cbb
0x11bf: V1152 = 0x63f7547ac277ea0b52a0b060be6af8c5904953aa
0x11d5: V1153 = 0x40
0x11d7: V1154 = M[0x40]
0x11d9: V1155 = 0xffffffff
0x11de: V1156 = AND 0xffffffff 0xa9059cbb
0x11df: V1157 = 0x100000000000000000000000000000000000000000000000000000000
0x11fd: V1158 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x11ff: M[V1154] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x1200: V1159 = 0x4
0x1202: V1160 = ADD 0x4 V1154
0x1205: V1161 = 0xffffffffffffffffffffffffffffffffffffffff
0x121a: V1162 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x63f7547ac277ea0b52a0b060be6af8c5904953aa
0x121b: V1163 = 0xffffffffffffffffffffffffffffffffffffffff
0x1230: V1164 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x63f7547ac277ea0b52a0b060be6af8c5904953aa
0x1232: M[V1160] = 0x63f7547ac277ea0b52a0b060be6af8c5904953aa
0x1233: V1165 = 0x20
0x1235: V1166 = ADD 0x20 V1160
0x1238: M[V1166] = S0
0x1239: V1167 = 0x20
0x123b: V1168 = ADD 0x20 V1166
0x1240: V1169 = 0x20
0x1242: V1170 = 0x40
0x1244: V1171 = M[0x40]
0x1247: V1172 = SUB V1168 V1171
0x1249: V1173 = 0x0
0x124d: V1174 = EXTCODESIZE V1150
0x124e: V1175 = ISZERO V1174
0x1250: V1176 = ISZERO V1175
0x1251: V1177 = 0x10c2
0x1254: THROWI V1176
---
Entry stack: []
Stack pops: 0
Stack additions: [V1175, V1150, 0x0, V1171, V1172, V1171, 0x20, V1168, 0xa9059cbb, V1150, S0]
Exit stack: []

================================

Block 0x1255
[0x1255:0x1263]
---
Predecessors: [0x117c]
Successors: [0x1264]
---
0x1255 PUSH1 0x0
0x1257 DUP1
0x1258 REVERT
0x1259 JUMPDEST
0x125a POP
0x125b GAS
0x125c CALL
0x125d ISZERO
0x125e DUP1
0x125f ISZERO
0x1260 PUSH2 0x10d6
0x1263 JUMPI
---
0x1255: V1178 = 0x0
0x1258: REVERT 0x0 0x0
0x1259: JUMPDEST 
0x125b: V1179 = GAS
0x125c: V1180 = CALL V1179 S1 S2 S3 S4 S5 S6
0x125d: V1181 = ISZERO V1180
0x125f: V1182 = ISZERO V1181
0x1260: V1183 = 0x10d6
0x1263: THROWI V1182
---
Entry stack: [S10, V1150, 0xa9059cbb, V1168, 0x20, V1171, V1172, V1171, 0x0, V1150, V1175]
Stack pops: 0
Stack additions: [V1181]
Exit stack: []

================================

Block 0x1264
[0x1264:0x127e]
---
Predecessors: [0x1255]
Successors: [0x127f]
---
0x1264 RETURNDATASIZE
0x1265 PUSH1 0x0
0x1267 DUP1
0x1268 RETURNDATACOPY
0x1269 RETURNDATASIZE
0x126a PUSH1 0x0
0x126c REVERT
0x126d JUMPDEST
0x126e POP
0x126f POP
0x1270 POP
0x1271 POP
0x1272 PUSH1 0x40
0x1274 MLOAD
0x1275 RETURNDATASIZE
0x1276 PUSH1 0x20
0x1278 DUP2
0x1279 LT
0x127a ISZERO
0x127b PUSH2 0x10ec
0x127e JUMPI
---
0x1264: V1184 = RETURNDATASIZE
0x1265: V1185 = 0x0
0x1268: RETURNDATACOPY 0x0 0x0 V1184
0x1269: V1186 = RETURNDATASIZE
0x126a: V1187 = 0x0
0x126c: REVERT 0x0 V1186
0x126d: JUMPDEST 
0x1272: V1188 = 0x40
0x1274: V1189 = M[0x40]
0x1275: V1190 = RETURNDATASIZE
0x1276: V1191 = 0x20
0x1279: V1192 = LT V1190 0x20
0x127a: V1193 = ISZERO V1192
0x127b: V1194 = 0x10ec
0x127e: THROWI V1193
---
Entry stack: [V1181]
Stack pops: 0
Stack additions: [V1190, V1189]
Exit stack: []

================================

Block 0x127f
[0x127f:0x129a]
---
Predecessors: [0x1264]
Successors: [0x129b]
---
0x127f PUSH1 0x0
0x1281 DUP1
0x1282 REVERT
0x1283 JUMPDEST
0x1284 DUP2
0x1285 ADD
0x1286 SWAP1
0x1287 DUP1
0x1288 DUP1
0x1289 MLOAD
0x128a SWAP1
0x128b PUSH1 0x20
0x128d ADD
0x128e SWAP1
0x128f SWAP3
0x1290 SWAP2
0x1291 SWAP1
0x1292 POP
0x1293 POP
0x1294 POP
0x1295 ISZERO
0x1296 ISZERO
0x1297 PUSH2 0x1108
0x129a JUMPI
---
0x127f: V1195 = 0x0
0x1282: REVERT 0x0 0x0
0x1283: JUMPDEST 
0x1285: V1196 = ADD S1 S0
0x1289: V1197 = M[S1]
0x128b: V1198 = 0x20
0x128d: V1199 = ADD 0x20 S1
0x1295: V1200 = ISZERO V1197
0x1296: V1201 = ISZERO V1200
0x1297: V1202 = 0x1108
0x129a: THROWI V1201
---
Entry stack: [V1189, V1190]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x129b
[0x129b:0x12db]
---
Predecessors: [0x127f]
Successors: []
---
0x129b PUSH1 0x0
0x129d DUP1
0x129e REVERT
0x129f JUMPDEST
0x12a0 DUP1
0x12a1 PUSH1 0x2
0x12a3 MUL
0x12a4 DUP4
0x12a5 SUB
0x12a6 SWAP3
0x12a7 POP
0x12a8 DUP3
0x12a9 SWAP2
0x12aa POP
0x12ab POP
0x12ac SWAP2
0x12ad SWAP1
0x12ae POP
0x12af JUMP
0x12b0 STOP
0x12b1 LOG1
0x12b2 PUSH6 0x627a7a723058
0x12b9 SHA3
0x12ba SWAP1
0x12bb MISSING 0xd1
0x12bc GT
0x12bd MISSING 0xe2
0x12be PUSH28 0x77ddaf8257c8c6e995e9131bf62af4e6fa6ff11756ac9618da3da400
0x12db MISSING 0x29
---
0x129b: V1203 = 0x0
0x129e: REVERT 0x0 0x0
0x129f: JUMPDEST 
0x12a1: V1204 = 0x2
0x12a3: V1205 = MUL 0x2 S0
0x12a5: V1206 = SUB S2 V1205
0x12af: JUMP S3
0x12b0: STOP 
0x12b1: LOG S0 S1 S2
0x12b2: V1207 = 0x627a7a723058
0x12b9: V1208 = SHA3 0x627a7a723058 S3
0x12bb: MISSING 0xd1
0x12bc: V1209 = GT S0 S1
0x12bd: MISSING 0xe2
0x12be: V1210 = 0x77ddaf8257c8c6e995e9131bf62af4e6fa6ff11756ac9618da3da400
0x12db: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V1206, S4, V1208, V1209, 0x77ddaf8257c8c6e995e9131bf62af4e6fa6ff11756ac9618da3da400]
Exit stack: []

================================

Function 0:
Public function signature: 0x1f6d4942
Entry block: 0x5c
Exit block: 0x9d
Body: 0x5c, 0x64, 0x68, 0x9d, 0x122

Function 1:
Public function signature: 0x88e6afa6
Entry block: 0xcc
Exit block: 0xe1
Body: 0xcc, 0xd4, 0xd8, 0xe1, 0x15f

Function 2:
Public function signature: 0xc42bb1e4
Entry block: 0xf7
Exit block: 0x10c
Body: 0xf7, 0xff, 0x103, 0x10c, 0x165

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

