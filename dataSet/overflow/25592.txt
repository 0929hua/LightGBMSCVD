Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x8c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x8c
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x8c
0xa: JUMPI 0x8c V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x30e]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x2d05d3f
0x3a EQ
0x3b PUSH2 0x30e
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x2d05d3f
0x3a: V12 = EQ 0x2d05d3f V10
0x3b: V13 = 0x30e
0x3e: JUMPI 0x30e V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x363]
---
0x3f DUP1
0x40 PUSH4 0x13af4035
0x45 EQ
0x46 PUSH2 0x363
0x49 JUMPI
---
0x40: V14 = 0x13af4035
0x45: V15 = EQ 0x13af4035 V10
0x46: V16 = 0x363
0x49: JUMPI 0x363 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x39c]
---
0x4a DUP1
0x4b PUSH4 0x144fa6d7
0x50 EQ
0x51 PUSH2 0x39c
0x54 JUMPI
---
0x4b: V17 = 0x144fa6d7
0x50: V18 = EQ 0x144fa6d7 V10
0x51: V19 = 0x39c
0x54: JUMPI 0x39c V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x3d5]
---
0x55 DUP1
0x56 PUSH4 0x3f516018
0x5b EQ
0x5c PUSH2 0x3d5
0x5f JUMPI
---
0x56: V20 = 0x3f516018
0x5b: V21 = EQ 0x3f516018 V10
0x5c: V22 = 0x3d5
0x5f: JUMPI 0x3d5 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x40e]
---
0x60 DUP1
0x61 PUSH4 0x412664ae
0x66 EQ
0x67 PUSH2 0x40e
0x6a JUMPI
---
0x61: V23 = 0x412664ae
0x66: V24 = EQ 0x412664ae V10
0x67: V25 = 0x40e
0x6a: JUMPI 0x40e V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x60]
Successors: [0x76, 0x450]
---
0x6b DUP1
0x6c PUSH4 0x41c0e1b5
0x71 EQ
0x72 PUSH2 0x450
0x75 JUMPI
---
0x6c: V26 = 0x41c0e1b5
0x71: V27 = EQ 0x41c0e1b5 V10
0x72: V28 = 0x450
0x75: JUMPI 0x450 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x76
[0x76:0x80]
---
Predecessors: [0x6b]
Successors: [0x81, 0x465]
---
0x76 DUP1
0x77 PUSH4 0x6e66f6e9
0x7c EQ
0x7d PUSH2 0x465
0x80 JUMPI
---
0x77: V29 = 0x6e66f6e9
0x7c: V30 = EQ 0x6e66f6e9 V10
0x7d: V31 = 0x465
0x80: JUMPI 0x465 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x81
[0x81:0x8b]
---
Predecessors: [0x76]
Successors: [0x8c, 0x4ba]
---
0x81 DUP1
0x82 PUSH4 0x8da5cb5b
0x87 EQ
0x88 PUSH2 0x4ba
0x8b JUMPI
---
0x82: V32 = 0x8da5cb5b
0x87: V33 = EQ 0x8da5cb5b V10
0x88: V34 = 0x4ba
0x8b: JUMPI 0x4ba V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8c
[0x8c:0x8c]
---
Predecessors: [0x0, 0x81]
Successors: [0x8d]
---
0x8c JUMPDEST
---
0x8c: JUMPDEST 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x8d
[0x8d:0x98]
---
Predecessors: [0x8c]
Successors: [0x99, 0x9d]
---
0x8d JUMPDEST
0x8e PUSH1 0x0
0x90 DUP1
0x91 CALLVALUE
0x92 GT
0x93 ISZERO
0x94 ISZERO
0x95 PUSH2 0x9d
0x98 JUMPI
---
0x8d: JUMPDEST 
0x8e: V35 = 0x0
0x91: V36 = CALLVALUE
0x92: V37 = GT V36 0x0
0x93: V38 = ISZERO V37
0x94: V39 = ISZERO V38
0x95: V40 = 0x9d
0x98: JUMPI 0x9d V39
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x0]

================================

Block 0x99
[0x99:0x9c]
---
Predecessors: [0x8d]
Successors: []
---
0x99 PUSH1 0x0
0x9b DUP1
0x9c REVERT
---
0x99: V41 = 0x0
0x9c: REVERT 0x0 0x0
---
Entry stack: [V10, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x0]

================================

Block 0x9d
[0x9d:0xaa]
---
Predecessors: [0x8d]
Successors: [0xab, 0xb3]
---
0x9d JUMPDEST
0x9e PUSH4 0x5a974280
0xa3 TIMESTAMP
0xa4 GT
0xa5 DUP1
0xa6 ISZERO
0xa7 PUSH2 0xb3
0xaa JUMPI
---
0x9d: JUMPDEST 
0x9e: V42 = 0x5a974280
0xa3: V43 = TIMESTAMP
0xa4: V44 = GT V43 0x5a974280
0xa6: V45 = ISZERO V44
0xa7: V46 = 0xb3
0xaa: JUMPI 0xb3 V45
---
Entry stack: [V10, 0x0]
Stack pops: 0
Stack additions: [V44]
Exit stack: [V10, 0x0, V44]

================================

Block 0xab
[0xab:0xb2]
---
Predecessors: [0x9d]
Successors: [0xb3]
---
0xab POP
0xac PUSH4 0x5ab829f0
0xb1 TIMESTAMP
0xb2 LT
---
0xac: V47 = 0x5ab829f0
0xb1: V48 = TIMESTAMP
0xb2: V49 = LT V48 0x5ab829f0
---
Entry stack: [V10, 0x0, V44]
Stack pops: 1
Stack additions: [V49]
Exit stack: [V10, 0x0, V49]

================================

Block 0xb3
[0xb3:0xb9]
---
Predecessors: [0x9d, 0xab]
Successors: [0xba, 0xc3]
---
0xb3 JUMPDEST
0xb4 DUP1
0xb5 ISZERO
0xb6 PUSH2 0xc3
0xb9 JUMPI
---
0xb3: JUMPDEST 
0xb5: V50 = ISZERO S0
0xb6: V51 = 0xc3
0xb9: JUMPI 0xc3 V50
---
Entry stack: [V10, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x0, S0]

================================

Block 0xba
[0xba:0xc2]
---
Predecessors: [0xb3]
Successors: [0xc3]
---
0xba POP
0xbb PUSH3 0x200b21
0xbf PUSH1 0x3
0xc1 SLOAD
0xc2 LT
---
0xbb: V52 = 0x200b21
0xbf: V53 = 0x3
0xc1: V54 = S[0x3]
0xc2: V55 = LT V54 0x200b21
---
Entry stack: [V10, 0x0, S0]
Stack pops: 1
Stack additions: [V55]
Exit stack: [V10, 0x0, V55]

================================

Block 0xc3
[0xc3:0xc8]
---
Predecessors: [0xb3, 0xba]
Successors: [0xc9, 0xd0]
---
0xc3 JUMPDEST
0xc4 ISZERO
0xc5 PUSH2 0xd0
0xc8 JUMPI
---
0xc3: JUMPDEST 
0xc4: V56 = ISZERO S0
0xc5: V57 = 0xd0
0xc8: JUMPI 0xd0 V56
---
Entry stack: [V10, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x0]

================================

Block 0xc9
[0xc9:0xcf]
---
Predecessors: [0xc3]
Successors: [0xd0]
---
0xc9 PUSH2 0x258
0xcc CALLVALUE
0xcd MUL
0xce SWAP1
0xcf POP
---
0xc9: V58 = 0x258
0xcc: V59 = CALLVALUE
0xcd: V60 = MUL V59 0x258
---
Entry stack: [V10, 0x0]
Stack pops: 1
Stack additions: [V60]
Exit stack: [V10, V60]

================================

Block 0xd0
[0xd0:0xdd]
---
Predecessors: [0xc3, 0xc9]
Successors: [0xde, 0xe6]
---
0xd0 JUMPDEST
0xd1 PUSH4 0x5ac012f0
0xd6 TIMESTAMP
0xd7 GT
0xd8 DUP1
0xd9 ISZERO
0xda PUSH2 0xe6
0xdd JUMPI
---
0xd0: JUMPDEST 
0xd1: V61 = 0x5ac012f0
0xd6: V62 = TIMESTAMP
0xd7: V63 = GT V62 0x5ac012f0
0xd9: V64 = ISZERO V63
0xda: V65 = 0xe6
0xdd: JUMPI 0xe6 V64
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: [V63]
Exit stack: [V10, S0, V63]

================================

Block 0xde
[0xde:0xe5]
---
Predecessors: [0xd0]
Successors: [0xe6]
---
0xde POP
0xdf PUSH4 0x5ae10870
0xe4 TIMESTAMP
0xe5 LT
---
0xdf: V66 = 0x5ae10870
0xe4: V67 = TIMESTAMP
0xe5: V68 = LT V67 0x5ae10870
---
Entry stack: [V10, S1, V63]
Stack pops: 1
Stack additions: [V68]
Exit stack: [V10, S1, V68]

================================

Block 0xe6
[0xe6:0xec]
---
Predecessors: [0xd0, 0xde]
Successors: [0xed, 0xf6]
---
0xe6 JUMPDEST
0xe7 DUP1
0xe8 ISZERO
0xe9 PUSH2 0xf6
0xec JUMPI
---
0xe6: JUMPDEST 
0xe8: V69 = ISZERO S0
0xe9: V70 = 0xf6
0xec: JUMPI 0xf6 V69
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, S1, S0]

================================

Block 0xed
[0xed:0xf5]
---
Predecessors: [0xe6]
Successors: [0xf6]
---
0xed POP
0xee PUSH3 0x602161
0xf2 PUSH1 0x3
0xf4 SLOAD
0xf5 LT
---
0xee: V71 = 0x602161
0xf2: V72 = 0x3
0xf4: V73 = S[0x3]
0xf5: V74 = LT V73 0x602161
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: [V74]
Exit stack: [V10, S1, V74]

================================

Block 0xf6
[0xf6:0xfb]
---
Predecessors: [0xe6, 0xed]
Successors: [0xfc, 0x103]
---
0xf6 JUMPDEST
0xf7 ISZERO
0xf8 PUSH2 0x103
0xfb JUMPI
---
0xf6: JUMPDEST 
0xf7: V75 = ISZERO S0
0xf8: V76 = 0x103
0xfb: JUMPI 0x103 V75
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0xfc
[0xfc:0x102]
---
Predecessors: [0xf6]
Successors: [0x103]
---
0xfc PUSH2 0x1f4
0xff CALLVALUE
0x100 MUL
0x101 SWAP1
0x102 POP
---
0xfc: V77 = 0x1f4
0xff: V78 = CALLVALUE
0x100: V79 = MUL V78 0x1f4
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: [V79]
Exit stack: [V10, V79]

================================

Block 0x103
[0x103:0x110]
---
Predecessors: [0xf6, 0xfc]
Successors: [0x111, 0x119]
---
0x103 JUMPDEST
0x104 PUSH4 0x5ae79ff0
0x109 TIMESTAMP
0x10a GT
0x10b DUP1
0x10c ISZERO
0x10d PUSH2 0x119
0x110 JUMPI
---
0x103: JUMPDEST 
0x104: V80 = 0x5ae79ff0
0x109: V81 = TIMESTAMP
0x10a: V82 = GT V81 0x5ae79ff0
0x10c: V83 = ISZERO V82
0x10d: V84 = 0x119
0x110: JUMPI 0x119 V83
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: [V82]
Exit stack: [V10, S0, V82]

================================

Block 0x111
[0x111:0x118]
---
Predecessors: [0x103]
Successors: [0x119]
---
0x111 POP
0x112 PUSH4 0x5b0f2cf0
0x117 TIMESTAMP
0x118 LT
---
0x112: V85 = 0x5b0f2cf0
0x117: V86 = TIMESTAMP
0x118: V87 = LT V86 0x5b0f2cf0
---
Entry stack: [V10, S1, V82]
Stack pops: 1
Stack additions: [V87]
Exit stack: [V10, S1, V87]

================================

Block 0x119
[0x119:0x11f]
---
Predecessors: [0x103, 0x111]
Successors: [0x120, 0x129]
---
0x119 JUMPDEST
0x11a DUP1
0x11b ISZERO
0x11c PUSH2 0x129
0x11f JUMPI
---
0x119: JUMPDEST 
0x11b: V88 = ISZERO S0
0x11c: V89 = 0x129
0x11f: JUMPI 0x129 V88
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, S1, S0]

================================

Block 0x120
[0x120:0x128]
---
Predecessors: [0x119]
Successors: [0x129]
---
0x120 POP
0x121 PUSH3 0xc042c1
0x125 PUSH1 0x3
0x127 SLOAD
0x128 LT
---
0x121: V90 = 0xc042c1
0x125: V91 = 0x3
0x127: V92 = S[0x3]
0x128: V93 = LT V92 0xc042c1
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: [V93]
Exit stack: [V10, S1, V93]

================================

Block 0x129
[0x129:0x12e]
---
Predecessors: [0x119, 0x120]
Successors: [0x12f, 0x136]
---
0x129 JUMPDEST
0x12a ISZERO
0x12b PUSH2 0x136
0x12e JUMPI
---
0x129: JUMPDEST 
0x12a: V94 = ISZERO S0
0x12b: V95 = 0x136
0x12e: JUMPI 0x136 V94
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x12f
[0x12f:0x135]
---
Predecessors: [0x129]
Successors: [0x136]
---
0x12f PUSH2 0x190
0x132 CALLVALUE
0x133 MUL
0x134 SWAP1
0x135 POP
---
0x12f: V96 = 0x190
0x132: V97 = CALLVALUE
0x133: V98 = MUL V97 0x190
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: [V98]
Exit stack: [V10, V98]

================================

Block 0x136
[0x136:0x147]
---
Predecessors: [0x129, 0x12f]
Successors: [0x148, 0x149]
---
0x136 JUMPDEST
0x137 PUSH8 0xde0b6b3a7640000
0x140 DUP2
0x141 DUP2
0x142 ISZERO
0x143 ISZERO
0x144 PUSH2 0x149
0x147 JUMPI
---
0x136: JUMPDEST 
0x137: V99 = 0xde0b6b3a7640000
0x142: V100 = ISZERO 0xde0b6b3a7640000
0x143: V101 = ISZERO 0x0
0x144: V102 = 0x149
0x147: JUMPI 0x149 0x1
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: [S0, 0xde0b6b3a7640000, S0]
Exit stack: [V10, S0, 0xde0b6b3a7640000, S0]

================================

Block 0x148
[0x148:0x148]
---
Predecessors: [0x136]
Successors: []
---
0x148 INVALID
---
0x148: INVALID 
---
Entry stack: [V10, S2, 0xde0b6b3a7640000, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S2, 0xde0b6b3a7640000, S0]

================================

Block 0x149
[0x149:0x217]
---
Predecessors: [0x136]
Successors: [0x218, 0x21c]
---
0x149 JUMPDEST
0x14a DIV
0x14b PUSH1 0x3
0x14d PUSH1 0x0
0x14f DUP3
0x150 DUP3
0x151 SLOAD
0x152 ADD
0x153 SWAP3
0x154 POP
0x155 POP
0x156 DUP2
0x157 SWAP1
0x158 SSTORE
0x159 POP
0x15a PUSH1 0x0
0x15c DUP1
0x15d SWAP1
0x15e SLOAD
0x15f SWAP1
0x160 PUSH2 0x100
0x163 EXP
0x164 SWAP1
0x165 DIV
0x166 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17b AND
0x17c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x191 AND
0x192 PUSH4 0xa9059cbb
0x197 CALLER
0x198 DUP4
0x199 PUSH1 0x40
0x19b MLOAD
0x19c DUP4
0x19d PUSH4 0xffffffff
0x1a2 AND
0x1a3 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1c1 MUL
0x1c2 DUP2
0x1c3 MSTORE
0x1c4 PUSH1 0x4
0x1c6 ADD
0x1c7 DUP1
0x1c8 DUP4
0x1c9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1de AND
0x1df PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f4 AND
0x1f5 DUP2
0x1f6 MSTORE
0x1f7 PUSH1 0x20
0x1f9 ADD
0x1fa DUP3
0x1fb DUP2
0x1fc MSTORE
0x1fd PUSH1 0x20
0x1ff ADD
0x200 SWAP3
0x201 POP
0x202 POP
0x203 POP
0x204 PUSH1 0x0
0x206 PUSH1 0x40
0x208 MLOAD
0x209 DUP1
0x20a DUP4
0x20b SUB
0x20c DUP2
0x20d PUSH1 0x0
0x20f DUP8
0x210 DUP1
0x211 EXTCODESIZE
0x212 ISZERO
0x213 ISZERO
0x214 PUSH2 0x21c
0x217 JUMPI
---
0x149: JUMPDEST 
0x14a: V103 = DIV S0 0xde0b6b3a7640000
0x14b: V104 = 0x3
0x14d: V105 = 0x0
0x151: V106 = S[0x3]
0x152: V107 = ADD V106 V103
0x158: S[0x3] = V107
0x15a: V108 = 0x0
0x15e: V109 = S[0x0]
0x160: V110 = 0x100
0x163: V111 = EXP 0x100 0x0
0x165: V112 = DIV V109 0x1
0x166: V113 = 0xffffffffffffffffffffffffffffffffffffffff
0x17b: V114 = AND 0xffffffffffffffffffffffffffffffffffffffff V112
0x17c: V115 = 0xffffffffffffffffffffffffffffffffffffffff
0x191: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V114
0x192: V117 = 0xa9059cbb
0x197: V118 = CALLER
0x199: V119 = 0x40
0x19b: V120 = M[0x40]
0x19d: V121 = 0xffffffff
0x1a2: V122 = AND 0xffffffff 0xa9059cbb
0x1a3: V123 = 0x100000000000000000000000000000000000000000000000000000000
0x1c1: V124 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x1c3: M[V120] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x1c4: V125 = 0x4
0x1c6: V126 = ADD 0x4 V120
0x1c9: V127 = 0xffffffffffffffffffffffffffffffffffffffff
0x1de: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V118
0x1df: V129 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f4: V130 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x1f6: M[V126] = V130
0x1f7: V131 = 0x20
0x1f9: V132 = ADD 0x20 V126
0x1fc: M[V132] = S2
0x1fd: V133 = 0x20
0x1ff: V134 = ADD 0x20 V132
0x204: V135 = 0x0
0x206: V136 = 0x40
0x208: V137 = M[0x40]
0x20b: V138 = SUB V134 V137
0x20d: V139 = 0x0
0x211: V140 = EXTCODESIZE V116
0x212: V141 = ISZERO V140
0x213: V142 = ISZERO V141
0x214: V143 = 0x21c
0x217: JUMPI 0x21c V142
---
Entry stack: [V10, S2, 0xde0b6b3a7640000, S0]
Stack pops: 3
Stack additions: [S2, V116, 0xa9059cbb, V134, 0x0, V137, V138, V137, 0x0, V116]
Exit stack: [V10, S2, V116, 0xa9059cbb, V134, 0x0, V137, V138, V137, 0x0, V116]

================================

Block 0x218
[0x218:0x21b]
---
Predecessors: [0x149]
Successors: []
---
0x218 PUSH1 0x0
0x21a DUP1
0x21b REVERT
---
0x218: V144 = 0x0
0x21b: REVERT 0x0 0x0
---
Entry stack: [V10, S9, V116, 0xa9059cbb, V134, 0x0, V137, V138, V137, 0x0, V116]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S9, V116, 0xa9059cbb, V134, 0x0, V137, V138, V137, 0x0, V116]

================================

Block 0x21c
[0x21c:0x228]
---
Predecessors: [0x149]
Successors: [0x229, 0x22d]
---
0x21c JUMPDEST
0x21d PUSH2 0x2c6
0x220 GAS
0x221 SUB
0x222 CALL
0x223 ISZERO
0x224 ISZERO
0x225 PUSH2 0x22d
0x228 JUMPI
---
0x21c: JUMPDEST 
0x21d: V145 = 0x2c6
0x220: V146 = GAS
0x221: V147 = SUB V146 0x2c6
0x222: V148 = CALL V147 V116 0x0 V137 V138 V137 0x0
0x223: V149 = ISZERO V148
0x224: V150 = ISZERO V149
0x225: V151 = 0x22d
0x228: JUMPI 0x22d V150
---
Entry stack: [V10, S9, V116, 0xa9059cbb, V134, 0x0, V137, V138, V137, 0x0, V116]
Stack pops: 6
Stack additions: []
Exit stack: [V10, S9, V116, 0xa9059cbb, V134]

================================

Block 0x229
[0x229:0x22c]
---
Predecessors: [0x21c]
Successors: []
---
0x229 PUSH1 0x0
0x22b DUP1
0x22c REVERT
---
0x229: V152 = 0x0
0x22c: REVERT 0x0 0x0
---
Entry stack: [V10, S3, V116, 0xa9059cbb, V134]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S3, V116, 0xa9059cbb, V134]

================================

Block 0x22d
[0x22d:0x305]
---
Predecessors: [0x21c]
Successors: [0x306, 0x30a]
---
0x22d JUMPDEST
0x22e POP
0x22f POP
0x230 POP
0x231 PUSH32 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x252 CALLER
0x253 DUP3
0x254 PUSH1 0x1
0x256 PUSH1 0x40
0x258 MLOAD
0x259 DUP1
0x25a DUP5
0x25b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x270 AND
0x271 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x286 AND
0x287 DUP2
0x288 MSTORE
0x289 PUSH1 0x20
0x28b ADD
0x28c DUP4
0x28d DUP2
0x28e MSTORE
0x28f PUSH1 0x20
0x291 ADD
0x292 DUP3
0x293 ISZERO
0x294 ISZERO
0x295 ISZERO
0x296 ISZERO
0x297 DUP2
0x298 MSTORE
0x299 PUSH1 0x20
0x29b ADD
0x29c SWAP4
0x29d POP
0x29e POP
0x29f POP
0x2a0 POP
0x2a1 PUSH1 0x40
0x2a3 MLOAD
0x2a4 DUP1
0x2a5 SWAP2
0x2a6 SUB
0x2a7 SWAP1
0x2a8 LOG1
0x2a9 PUSH1 0x2
0x2ab PUSH1 0x0
0x2ad SWAP1
0x2ae SLOAD
0x2af SWAP1
0x2b0 PUSH2 0x100
0x2b3 EXP
0x2b4 SWAP1
0x2b5 DIV
0x2b6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2cb AND
0x2cc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e1 AND
0x2e2 PUSH2 0x8fc
0x2e5 CALLVALUE
0x2e6 SWAP1
0x2e7 DUP2
0x2e8 ISZERO
0x2e9 MUL
0x2ea SWAP1
0x2eb PUSH1 0x40
0x2ed MLOAD
0x2ee PUSH1 0x0
0x2f0 PUSH1 0x40
0x2f2 MLOAD
0x2f3 DUP1
0x2f4 DUP4
0x2f5 SUB
0x2f6 DUP2
0x2f7 DUP6
0x2f8 DUP9
0x2f9 DUP9
0x2fa CALL
0x2fb SWAP4
0x2fc POP
0x2fd POP
0x2fe POP
0x2ff POP
0x300 ISZERO
0x301 ISZERO
0x302 PUSH2 0x30a
0x305 JUMPI
---
0x22d: JUMPDEST 
0x231: V153 = 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x252: V154 = CALLER
0x254: V155 = 0x1
0x256: V156 = 0x40
0x258: V157 = M[0x40]
0x25b: V158 = 0xffffffffffffffffffffffffffffffffffffffff
0x270: V159 = AND 0xffffffffffffffffffffffffffffffffffffffff V154
0x271: V160 = 0xffffffffffffffffffffffffffffffffffffffff
0x286: V161 = AND 0xffffffffffffffffffffffffffffffffffffffff V159
0x288: M[V157] = V161
0x289: V162 = 0x20
0x28b: V163 = ADD 0x20 V157
0x28e: M[V163] = S3
0x28f: V164 = 0x20
0x291: V165 = ADD 0x20 V163
0x293: V166 = ISZERO 0x1
0x294: V167 = ISZERO 0x0
0x295: V168 = ISZERO 0x1
0x296: V169 = ISZERO 0x0
0x298: M[V165] = 0x1
0x299: V170 = 0x20
0x29b: V171 = ADD 0x20 V165
0x2a1: V172 = 0x40
0x2a3: V173 = M[0x40]
0x2a6: V174 = SUB V171 V173
0x2a8: LOG V173 V174 0xe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6
0x2a9: V175 = 0x2
0x2ab: V176 = 0x0
0x2ae: V177 = S[0x2]
0x2b0: V178 = 0x100
0x2b3: V179 = EXP 0x100 0x0
0x2b5: V180 = DIV V177 0x1
0x2b6: V181 = 0xffffffffffffffffffffffffffffffffffffffff
0x2cb: V182 = AND 0xffffffffffffffffffffffffffffffffffffffff V180
0x2cc: V183 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e1: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V182
0x2e2: V185 = 0x8fc
0x2e5: V186 = CALLVALUE
0x2e8: V187 = ISZERO V186
0x2e9: V188 = MUL V187 0x8fc
0x2eb: V189 = 0x40
0x2ed: V190 = M[0x40]
0x2ee: V191 = 0x0
0x2f0: V192 = 0x40
0x2f2: V193 = M[0x40]
0x2f5: V194 = SUB V190 V193
0x2fa: V195 = CALL V188 V184 V186 V193 V194 V193 0x0
0x300: V196 = ISZERO V195
0x301: V197 = ISZERO V196
0x302: V198 = 0x30a
0x305: JUMPI 0x30a V197
---
Entry stack: [V10, S3, V116, 0xa9059cbb, V134]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V10, S3]

================================

Block 0x306
[0x306:0x309]
---
Predecessors: [0x22d]
Successors: []
---
0x306 PUSH1 0x0
0x308 DUP1
0x309 REVERT
---
0x306: V199 = 0x0
0x309: REVERT 0x0 0x0
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0x30a
[0x30a:0x30a]
---
Predecessors: [0x22d]
Successors: [0x30b]
---
0x30a JUMPDEST
---
0x30a: JUMPDEST 
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0x30b
[0x30b:0x30d]
---
Predecessors: [0x30a]
Successors: []
---
0x30b JUMPDEST
0x30c POP
0x30d STOP
---
0x30b: JUMPDEST 
0x30d: STOP 
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x30e
[0x30e:0x314]
---
Predecessors: [0xb]
Successors: [0x315, 0x319]
---
0x30e JUMPDEST
0x30f CALLVALUE
0x310 ISZERO
0x311 PUSH2 0x319
0x314 JUMPI
---
0x30e: JUMPDEST 
0x30f: V200 = CALLVALUE
0x310: V201 = ISZERO V200
0x311: V202 = 0x319
0x314: JUMPI 0x319 V201
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x315
[0x315:0x318]
---
Predecessors: [0x30e]
Successors: []
---
0x315 PUSH1 0x0
0x317 DUP1
0x318 REVERT
---
0x315: V203 = 0x0
0x318: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x319
[0x319:0x320]
---
Predecessors: [0x30e]
Successors: [0x50f]
---
0x319 JUMPDEST
0x31a PUSH2 0x321
0x31d PUSH2 0x50f
0x320 JUMP
---
0x319: JUMPDEST 
0x31a: V204 = 0x321
0x31d: V205 = 0x50f
0x320: JUMP 0x50f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x321]
Exit stack: [V10, 0x321]

================================

Block 0x321
[0x321:0x362]
---
Predecessors: [0x50f]
Successors: []
---
0x321 JUMPDEST
0x322 PUSH1 0x40
0x324 MLOAD
0x325 DUP1
0x326 DUP3
0x327 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x33c AND
0x33d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x352 AND
0x353 DUP2
0x354 MSTORE
0x355 PUSH1 0x20
0x357 ADD
0x358 SWAP2
0x359 POP
0x35a POP
0x35b PUSH1 0x40
0x35d MLOAD
0x35e DUP1
0x35f SWAP2
0x360 SUB
0x361 SWAP1
0x362 RETURN
---
0x321: JUMPDEST 
0x322: V206 = 0x40
0x324: V207 = M[0x40]
0x327: V208 = 0xffffffffffffffffffffffffffffffffffffffff
0x33c: V209 = AND 0xffffffffffffffffffffffffffffffffffffffff V315
0x33d: V210 = 0xffffffffffffffffffffffffffffffffffffffff
0x352: V211 = AND 0xffffffffffffffffffffffffffffffffffffffff V209
0x354: M[V207] = V211
0x355: V212 = 0x20
0x357: V213 = ADD 0x20 V207
0x35b: V214 = 0x40
0x35d: V215 = M[0x40]
0x360: V216 = SUB V213 V215
0x362: RETURN V215 V216
---
Entry stack: [V10, 0x321, V315]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x321]

================================

Block 0x363
[0x363:0x369]
---
Predecessors: [0x3f]
Successors: [0x36a, 0x36e]
---
0x363 JUMPDEST
0x364 CALLVALUE
0x365 ISZERO
0x366 PUSH2 0x36e
0x369 JUMPI
---
0x363: JUMPDEST 
0x364: V217 = CALLVALUE
0x365: V218 = ISZERO V217
0x366: V219 = 0x36e
0x369: JUMPI 0x36e V218
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x36a
[0x36a:0x36d]
---
Predecessors: [0x363]
Successors: []
---
0x36a PUSH1 0x0
0x36c DUP1
0x36d REVERT
---
0x36a: V220 = 0x0
0x36d: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x36e
[0x36e:0x399]
---
Predecessors: [0x363]
Successors: [0x535]
---
0x36e JUMPDEST
0x36f PUSH2 0x39a
0x372 PUSH1 0x4
0x374 DUP1
0x375 DUP1
0x376 CALLDATALOAD
0x377 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x38c AND
0x38d SWAP1
0x38e PUSH1 0x20
0x390 ADD
0x391 SWAP1
0x392 SWAP2
0x393 SWAP1
0x394 POP
0x395 POP
0x396 PUSH2 0x535
0x399 JUMP
---
0x36e: JUMPDEST 
0x36f: V221 = 0x39a
0x372: V222 = 0x4
0x376: V223 = CALLDATALOAD 0x4
0x377: V224 = 0xffffffffffffffffffffffffffffffffffffffff
0x38c: V225 = AND 0xffffffffffffffffffffffffffffffffffffffff V223
0x38e: V226 = 0x20
0x390: V227 = ADD 0x20 0x4
0x396: V228 = 0x535
0x399: JUMP 0x535
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x39a, V225]
Exit stack: [V10, 0x39a, V225]

================================

Block 0x39a
[0x39a:0x39b]
---
Predecessors: [0x5d4]
Successors: []
---
0x39a JUMPDEST
0x39b STOP
---
0x39a: JUMPDEST 
0x39b: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x39c
[0x39c:0x3a2]
---
Predecessors: [0x4a]
Successors: [0x3a3, 0x3a7]
---
0x39c JUMPDEST
0x39d CALLVALUE
0x39e ISZERO
0x39f PUSH2 0x3a7
0x3a2 JUMPI
---
0x39c: JUMPDEST 
0x39d: V229 = CALLVALUE
0x39e: V230 = ISZERO V229
0x39f: V231 = 0x3a7
0x3a2: JUMPI 0x3a7 V230
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3a3
[0x3a3:0x3a6]
---
Predecessors: [0x39c]
Successors: []
---
0x3a3 PUSH1 0x0
0x3a5 DUP1
0x3a6 REVERT
---
0x3a3: V232 = 0x0
0x3a6: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3a7
[0x3a7:0x3d2]
---
Predecessors: [0x39c]
Successors: [0x5d7]
---
0x3a7 JUMPDEST
0x3a8 PUSH2 0x3d3
0x3ab PUSH1 0x4
0x3ad DUP1
0x3ae DUP1
0x3af CALLDATALOAD
0x3b0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c5 AND
0x3c6 SWAP1
0x3c7 PUSH1 0x20
0x3c9 ADD
0x3ca SWAP1
0x3cb SWAP2
0x3cc SWAP1
0x3cd POP
0x3ce POP
0x3cf PUSH2 0x5d7
0x3d2 JUMP
---
0x3a7: JUMPDEST 
0x3a8: V233 = 0x3d3
0x3ab: V234 = 0x4
0x3af: V235 = CALLDATALOAD 0x4
0x3b0: V236 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c5: V237 = AND 0xffffffffffffffffffffffffffffffffffffffff V235
0x3c7: V238 = 0x20
0x3c9: V239 = ADD 0x20 0x4
0x3cf: V240 = 0x5d7
0x3d2: JUMP 0x5d7
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3d3, V237]
Exit stack: [V10, 0x3d3, V237]

================================

Block 0x3d3
[0x3d3:0x3d4]
---
Predecessors: [0x675]
Successors: []
---
0x3d3 JUMPDEST
0x3d4 STOP
---
0x3d3: JUMPDEST 
0x3d4: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3d5
[0x3d5:0x3db]
---
Predecessors: [0x55]
Successors: [0x3dc, 0x3e0]
---
0x3d5 JUMPDEST
0x3d6 CALLVALUE
0x3d7 ISZERO
0x3d8 PUSH2 0x3e0
0x3db JUMPI
---
0x3d5: JUMPDEST 
0x3d6: V241 = CALLVALUE
0x3d7: V242 = ISZERO V241
0x3d8: V243 = 0x3e0
0x3db: JUMPI 0x3e0 V242
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3dc
[0x3dc:0x3df]
---
Predecessors: [0x3d5]
Successors: []
---
0x3dc PUSH1 0x0
0x3de DUP1
0x3df REVERT
---
0x3dc: V244 = 0x0
0x3df: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3e0
[0x3e0:0x40b]
---
Predecessors: [0x3d5]
Successors: [0x678]
---
0x3e0 JUMPDEST
0x3e1 PUSH2 0x40c
0x3e4 PUSH1 0x4
0x3e6 DUP1
0x3e7 DUP1
0x3e8 CALLDATALOAD
0x3e9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3fe AND
0x3ff SWAP1
0x400 PUSH1 0x20
0x402 ADD
0x403 SWAP1
0x404 SWAP2
0x405 SWAP1
0x406 POP
0x407 POP
0x408 PUSH2 0x678
0x40b JUMP
---
0x3e0: JUMPDEST 
0x3e1: V245 = 0x40c
0x3e4: V246 = 0x4
0x3e8: V247 = CALLDATALOAD 0x4
0x3e9: V248 = 0xffffffffffffffffffffffffffffffffffffffff
0x3fe: V249 = AND 0xffffffffffffffffffffffffffffffffffffffff V247
0x400: V250 = 0x20
0x402: V251 = ADD 0x20 0x4
0x408: V252 = 0x678
0x40b: JUMP 0x678
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x40c, V249]
Exit stack: [V10, 0x40c, V249]

================================

Block 0x40c
[0x40c:0x40d]
---
Predecessors: [0x717]
Successors: []
---
0x40c JUMPDEST
0x40d STOP
---
0x40c: JUMPDEST 
0x40d: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x40e
[0x40e:0x414]
---
Predecessors: [0x60]
Successors: [0x415, 0x419]
---
0x40e JUMPDEST
0x40f CALLVALUE
0x410 ISZERO
0x411 PUSH2 0x419
0x414 JUMPI
---
0x40e: JUMPDEST 
0x40f: V253 = CALLVALUE
0x410: V254 = ISZERO V253
0x411: V255 = 0x419
0x414: JUMPI 0x419 V254
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x415
[0x415:0x418]
---
Predecessors: [0x40e]
Successors: []
---
0x415 PUSH1 0x0
0x417 DUP1
0x418 REVERT
---
0x415: V256 = 0x0
0x418: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x419
[0x419:0x44d]
---
Predecessors: [0x40e]
Successors: [0x71a]
---
0x419 JUMPDEST
0x41a PUSH2 0x44e
0x41d PUSH1 0x4
0x41f DUP1
0x420 DUP1
0x421 CALLDATALOAD
0x422 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x437 AND
0x438 SWAP1
0x439 PUSH1 0x20
0x43b ADD
0x43c SWAP1
0x43d SWAP2
0x43e SWAP1
0x43f DUP1
0x440 CALLDATALOAD
0x441 SWAP1
0x442 PUSH1 0x20
0x444 ADD
0x445 SWAP1
0x446 SWAP2
0x447 SWAP1
0x448 POP
0x449 POP
0x44a PUSH2 0x71a
0x44d JUMP
---
0x419: JUMPDEST 
0x41a: V257 = 0x44e
0x41d: V258 = 0x4
0x421: V259 = CALLDATALOAD 0x4
0x422: V260 = 0xffffffffffffffffffffffffffffffffffffffff
0x437: V261 = AND 0xffffffffffffffffffffffffffffffffffffffff V259
0x439: V262 = 0x20
0x43b: V263 = ADD 0x20 0x4
0x440: V264 = CALLDATALOAD 0x24
0x442: V265 = 0x20
0x444: V266 = ADD 0x20 0x24
0x44a: V267 = 0x71a
0x44d: JUMP 0x71a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x44e, V261, V264]
Exit stack: [V10, 0x44e, V261, V264]

================================

Block 0x44e
[0x44e:0x44f]
---
Predecessors: [0x84f]
Successors: []
---
0x44e JUMPDEST
0x44f STOP
---
0x44e: JUMPDEST 
0x44f: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x450
[0x450:0x456]
---
Predecessors: [0x6b]
Successors: [0x457, 0x45b]
---
0x450 JUMPDEST
0x451 CALLVALUE
0x452 ISZERO
0x453 PUSH2 0x45b
0x456 JUMPI
---
0x450: JUMPDEST 
0x451: V268 = CALLVALUE
0x452: V269 = ISZERO V268
0x453: V270 = 0x45b
0x456: JUMPI 0x45b V269
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x457
[0x457:0x45a]
---
Predecessors: [0x450]
Successors: []
---
0x457 PUSH1 0x0
0x459 DUP1
0x45a REVERT
---
0x457: V271 = 0x0
0x45a: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x45b
[0x45b:0x462]
---
Predecessors: [0x450]
Successors: [0x853]
---
0x45b JUMPDEST
0x45c PUSH2 0x463
0x45f PUSH2 0x853
0x462 JUMP
---
0x45b: JUMPDEST 
0x45c: V272 = 0x463
0x45f: V273 = 0x853
0x462: JUMP 0x853
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x463]
Exit stack: [V10, 0x463]

================================

Block 0x463
[0x463:0x464]
---
Predecessors: []
Successors: []
---
0x463 JUMPDEST
0x464 STOP
---
0x463: JUMPDEST 
0x464: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x465
[0x465:0x46b]
---
Predecessors: [0x76]
Successors: [0x46c, 0x470]
---
0x465 JUMPDEST
0x466 CALLVALUE
0x467 ISZERO
0x468 PUSH2 0x470
0x46b JUMPI
---
0x465: JUMPDEST 
0x466: V274 = CALLVALUE
0x467: V275 = ISZERO V274
0x468: V276 = 0x470
0x46b: JUMPI 0x470 V275
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x46c
[0x46c:0x46f]
---
Predecessors: [0x465]
Successors: []
---
0x46c PUSH1 0x0
0x46e DUP1
0x46f REVERT
---
0x46c: V277 = 0x0
0x46f: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x470
[0x470:0x477]
---
Predecessors: [0x465]
Successors: [0x8ed]
---
0x470 JUMPDEST
0x471 PUSH2 0x478
0x474 PUSH2 0x8ed
0x477 JUMP
---
0x470: JUMPDEST 
0x471: V278 = 0x478
0x474: V279 = 0x8ed
0x477: JUMP 0x8ed
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x478]
Exit stack: [V10, 0x478]

================================

Block 0x478
[0x478:0x4b9]
---
Predecessors: [0x8ed]
Successors: []
---
0x478 JUMPDEST
0x479 PUSH1 0x40
0x47b MLOAD
0x47c DUP1
0x47d DUP3
0x47e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x493 AND
0x494 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4a9 AND
0x4aa DUP2
0x4ab MSTORE
0x4ac PUSH1 0x20
0x4ae ADD
0x4af SWAP2
0x4b0 POP
0x4b1 POP
0x4b2 PUSH1 0x40
0x4b4 MLOAD
0x4b5 DUP1
0x4b6 SWAP2
0x4b7 SUB
0x4b8 SWAP1
0x4b9 RETURN
---
0x478: JUMPDEST 
0x479: V280 = 0x40
0x47b: V281 = M[0x40]
0x47e: V282 = 0xffffffffffffffffffffffffffffffffffffffff
0x493: V283 = AND 0xffffffffffffffffffffffffffffffffffffffff V504
0x494: V284 = 0xffffffffffffffffffffffffffffffffffffffff
0x4a9: V285 = AND 0xffffffffffffffffffffffffffffffffffffffff V283
0x4ab: M[V281] = V285
0x4ac: V286 = 0x20
0x4ae: V287 = ADD 0x20 V281
0x4b2: V288 = 0x40
0x4b4: V289 = M[0x40]
0x4b7: V290 = SUB V287 V289
0x4b9: RETURN V289 V290
---
Entry stack: [V10, 0x478, V504]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x478]

================================

Block 0x4ba
[0x4ba:0x4c0]
---
Predecessors: [0x81]
Successors: [0x4c1, 0x4c5]
---
0x4ba JUMPDEST
0x4bb CALLVALUE
0x4bc ISZERO
0x4bd PUSH2 0x4c5
0x4c0 JUMPI
---
0x4ba: JUMPDEST 
0x4bb: V291 = CALLVALUE
0x4bc: V292 = ISZERO V291
0x4bd: V293 = 0x4c5
0x4c0: JUMPI 0x4c5 V292
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4c1
[0x4c1:0x4c4]
---
Predecessors: [0x4ba]
Successors: []
---
0x4c1 PUSH1 0x0
0x4c3 DUP1
0x4c4 REVERT
---
0x4c1: V294 = 0x0
0x4c4: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4c5
[0x4c5:0x4cc]
---
Predecessors: [0x4ba]
Successors: [0x912]
---
0x4c5 JUMPDEST
0x4c6 PUSH2 0x4cd
0x4c9 PUSH2 0x912
0x4cc JUMP
---
0x4c5: JUMPDEST 
0x4c6: V295 = 0x4cd
0x4c9: V296 = 0x912
0x4cc: JUMP 0x912
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x4cd]
Exit stack: [V10, 0x4cd]

================================

Block 0x4cd
[0x4cd:0x50e]
---
Predecessors: [0x912]
Successors: []
---
0x4cd JUMPDEST
0x4ce PUSH1 0x40
0x4d0 MLOAD
0x4d1 DUP1
0x4d2 DUP3
0x4d3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4e8 AND
0x4e9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4fe AND
0x4ff DUP2
0x500 MSTORE
0x501 PUSH1 0x20
0x503 ADD
0x504 SWAP2
0x505 POP
0x506 POP
0x507 PUSH1 0x40
0x509 MLOAD
0x50a DUP1
0x50b SWAP2
0x50c SUB
0x50d SWAP1
0x50e RETURN
---
0x4cd: JUMPDEST 
0x4ce: V297 = 0x40
0x4d0: V298 = M[0x40]
0x4d3: V299 = 0xffffffffffffffffffffffffffffffffffffffff
0x4e8: V300 = AND 0xffffffffffffffffffffffffffffffffffffffff V512
0x4e9: V301 = 0xffffffffffffffffffffffffffffffffffffffff
0x4fe: V302 = AND 0xffffffffffffffffffffffffffffffffffffffff V300
0x500: M[V298] = V302
0x501: V303 = 0x20
0x503: V304 = ADD 0x20 V298
0x507: V305 = 0x40
0x509: V306 = M[0x40]
0x50c: V307 = SUB V304 V306
0x50e: RETURN V306 V307
---
Entry stack: [V10, 0x4cd, V512]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x4cd]

================================

Block 0x50f
[0x50f:0x534]
---
Predecessors: [0x319]
Successors: [0x321]
---
0x50f JUMPDEST
0x510 PUSH1 0x1
0x512 PUSH1 0x0
0x514 SWAP1
0x515 SLOAD
0x516 SWAP1
0x517 PUSH2 0x100
0x51a EXP
0x51b SWAP1
0x51c DIV
0x51d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x532 AND
0x533 DUP2
0x534 JUMP
---
0x50f: JUMPDEST 
0x510: V308 = 0x1
0x512: V309 = 0x0
0x515: V310 = S[0x1]
0x517: V311 = 0x100
0x51a: V312 = EXP 0x100 0x0
0x51c: V313 = DIV V310 0x1
0x51d: V314 = 0xffffffffffffffffffffffffffffffffffffffff
0x532: V315 = AND 0xffffffffffffffffffffffffffffffffffffffff V313
0x534: JUMP 0x321
---
Entry stack: [V10, 0x321]
Stack pops: 1
Stack additions: [S0, V315]
Exit stack: [V10, 0x321, V315]

================================

Block 0x535
[0x535:0x58c]
---
Predecessors: [0x36e]
Successors: [0x58d, 0x591]
---
0x535 JUMPDEST
0x536 PUSH1 0x1
0x538 PUSH1 0x0
0x53a SWAP1
0x53b SLOAD
0x53c SWAP1
0x53d PUSH2 0x100
0x540 EXP
0x541 SWAP1
0x542 DIV
0x543 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x558 AND
0x559 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x56e AND
0x56f CALLER
0x570 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x585 AND
0x586 EQ
0x587 ISZERO
0x588 ISZERO
0x589 PUSH2 0x591
0x58c JUMPI
---
0x535: JUMPDEST 
0x536: V316 = 0x1
0x538: V317 = 0x0
0x53b: V318 = S[0x1]
0x53d: V319 = 0x100
0x540: V320 = EXP 0x100 0x0
0x542: V321 = DIV V318 0x1
0x543: V322 = 0xffffffffffffffffffffffffffffffffffffffff
0x558: V323 = AND 0xffffffffffffffffffffffffffffffffffffffff V321
0x559: V324 = 0xffffffffffffffffffffffffffffffffffffffff
0x56e: V325 = AND 0xffffffffffffffffffffffffffffffffffffffff V323
0x56f: V326 = CALLER
0x570: V327 = 0xffffffffffffffffffffffffffffffffffffffff
0x585: V328 = AND 0xffffffffffffffffffffffffffffffffffffffff V326
0x586: V329 = EQ V328 V325
0x587: V330 = ISZERO V329
0x588: V331 = ISZERO V330
0x589: V332 = 0x591
0x58c: JUMPI 0x591 V331
---
Entry stack: [V10, 0x39a, V225]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x39a, V225]

================================

Block 0x58d
[0x58d:0x590]
---
Predecessors: [0x535]
Successors: []
---
0x58d PUSH1 0x0
0x58f DUP1
0x590 REVERT
---
0x58d: V333 = 0x0
0x590: REVERT 0x0 0x0
---
Entry stack: [V10, 0x39a, V225]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x39a, V225]

================================

Block 0x591
[0x591:0x5d2]
---
Predecessors: [0x535]
Successors: [0x5d3]
---
0x591 JUMPDEST
0x592 DUP1
0x593 PUSH1 0x2
0x595 PUSH1 0x0
0x597 PUSH2 0x100
0x59a EXP
0x59b DUP2
0x59c SLOAD
0x59d DUP2
0x59e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5b3 MUL
0x5b4 NOT
0x5b5 AND
0x5b6 SWAP1
0x5b7 DUP4
0x5b8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5cd AND
0x5ce MUL
0x5cf OR
0x5d0 SWAP1
0x5d1 SSTORE
0x5d2 POP
---
0x591: JUMPDEST 
0x593: V334 = 0x2
0x595: V335 = 0x0
0x597: V336 = 0x100
0x59a: V337 = EXP 0x100 0x0
0x59c: V338 = S[0x2]
0x59e: V339 = 0xffffffffffffffffffffffffffffffffffffffff
0x5b3: V340 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x5b4: V341 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x5b5: V342 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V338
0x5b8: V343 = 0xffffffffffffffffffffffffffffffffffffffff
0x5cd: V344 = AND 0xffffffffffffffffffffffffffffffffffffffff V225
0x5ce: V345 = MUL V344 0x1
0x5cf: V346 = OR V345 V342
0x5d1: S[0x2] = V346
---
Entry stack: [V10, 0x39a, V225]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x39a, V225]

================================

Block 0x5d3
[0x5d3:0x5d3]
---
Predecessors: [0x591]
Successors: [0x5d4]
---
0x5d3 JUMPDEST
---
0x5d3: JUMPDEST 
---
Entry stack: [V10, 0x39a, V225]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x39a, V225]

================================

Block 0x5d4
[0x5d4:0x5d6]
---
Predecessors: [0x5d3]
Successors: [0x39a]
---
0x5d4 JUMPDEST
0x5d5 POP
0x5d6 JUMP
---
0x5d4: JUMPDEST 
0x5d6: JUMP 0x39a
---
Entry stack: [V10, 0x39a, V225]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x5d7
[0x5d7:0x62e]
---
Predecessors: [0x3a7]
Successors: [0x62f, 0x633]
---
0x5d7 JUMPDEST
0x5d8 PUSH1 0x1
0x5da PUSH1 0x0
0x5dc SWAP1
0x5dd SLOAD
0x5de SWAP1
0x5df PUSH2 0x100
0x5e2 EXP
0x5e3 SWAP1
0x5e4 DIV
0x5e5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5fa AND
0x5fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x610 AND
0x611 CALLER
0x612 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x627 AND
0x628 EQ
0x629 ISZERO
0x62a ISZERO
0x62b PUSH2 0x633
0x62e JUMPI
---
0x5d7: JUMPDEST 
0x5d8: V347 = 0x1
0x5da: V348 = 0x0
0x5dd: V349 = S[0x1]
0x5df: V350 = 0x100
0x5e2: V351 = EXP 0x100 0x0
0x5e4: V352 = DIV V349 0x1
0x5e5: V353 = 0xffffffffffffffffffffffffffffffffffffffff
0x5fa: V354 = AND 0xffffffffffffffffffffffffffffffffffffffff V352
0x5fb: V355 = 0xffffffffffffffffffffffffffffffffffffffff
0x610: V356 = AND 0xffffffffffffffffffffffffffffffffffffffff V354
0x611: V357 = CALLER
0x612: V358 = 0xffffffffffffffffffffffffffffffffffffffff
0x627: V359 = AND 0xffffffffffffffffffffffffffffffffffffffff V357
0x628: V360 = EQ V359 V356
0x629: V361 = ISZERO V360
0x62a: V362 = ISZERO V361
0x62b: V363 = 0x633
0x62e: JUMPI 0x633 V362
---
Entry stack: [V10, 0x3d3, V237]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3d3, V237]

================================

Block 0x62f
[0x62f:0x632]
---
Predecessors: [0x5d7]
Successors: []
---
0x62f PUSH1 0x0
0x631 DUP1
0x632 REVERT
---
0x62f: V364 = 0x0
0x632: REVERT 0x0 0x0
---
Entry stack: [V10, 0x3d3, V237]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3d3, V237]

================================

Block 0x633
[0x633:0x673]
---
Predecessors: [0x5d7]
Successors: [0x674]
---
0x633 JUMPDEST
0x634 DUP1
0x635 PUSH1 0x0
0x637 DUP1
0x638 PUSH2 0x100
0x63b EXP
0x63c DUP2
0x63d SLOAD
0x63e DUP2
0x63f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x654 MUL
0x655 NOT
0x656 AND
0x657 SWAP1
0x658 DUP4
0x659 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x66e AND
0x66f MUL
0x670 OR
0x671 SWAP1
0x672 SSTORE
0x673 POP
---
0x633: JUMPDEST 
0x635: V365 = 0x0
0x638: V366 = 0x100
0x63b: V367 = EXP 0x100 0x0
0x63d: V368 = S[0x0]
0x63f: V369 = 0xffffffffffffffffffffffffffffffffffffffff
0x654: V370 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x655: V371 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x656: V372 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V368
0x659: V373 = 0xffffffffffffffffffffffffffffffffffffffff
0x66e: V374 = AND 0xffffffffffffffffffffffffffffffffffffffff V237
0x66f: V375 = MUL V374 0x1
0x670: V376 = OR V375 V372
0x672: S[0x0] = V376
---
Entry stack: [V10, 0x3d3, V237]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x3d3, V237]

================================

Block 0x674
[0x674:0x674]
---
Predecessors: [0x633]
Successors: [0x675]
---
0x674 JUMPDEST
---
0x674: JUMPDEST 
---
Entry stack: [V10, 0x3d3, V237]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3d3, V237]

================================

Block 0x675
[0x675:0x677]
---
Predecessors: [0x674]
Successors: [0x3d3]
---
0x675 JUMPDEST
0x676 POP
0x677 JUMP
---
0x675: JUMPDEST 
0x677: JUMP 0x3d3
---
Entry stack: [V10, 0x3d3, V237]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x678
[0x678:0x6cf]
---
Predecessors: [0x3e0]
Successors: [0x6d0, 0x6d4]
---
0x678 JUMPDEST
0x679 PUSH1 0x1
0x67b PUSH1 0x0
0x67d SWAP1
0x67e SLOAD
0x67f SWAP1
0x680 PUSH2 0x100
0x683 EXP
0x684 SWAP1
0x685 DIV
0x686 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x69b AND
0x69c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6b1 AND
0x6b2 CALLER
0x6b3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6c8 AND
0x6c9 EQ
0x6ca ISZERO
0x6cb ISZERO
0x6cc PUSH2 0x6d4
0x6cf JUMPI
---
0x678: JUMPDEST 
0x679: V377 = 0x1
0x67b: V378 = 0x0
0x67e: V379 = S[0x1]
0x680: V380 = 0x100
0x683: V381 = EXP 0x100 0x0
0x685: V382 = DIV V379 0x1
0x686: V383 = 0xffffffffffffffffffffffffffffffffffffffff
0x69b: V384 = AND 0xffffffffffffffffffffffffffffffffffffffff V382
0x69c: V385 = 0xffffffffffffffffffffffffffffffffffffffff
0x6b1: V386 = AND 0xffffffffffffffffffffffffffffffffffffffff V384
0x6b2: V387 = CALLER
0x6b3: V388 = 0xffffffffffffffffffffffffffffffffffffffff
0x6c8: V389 = AND 0xffffffffffffffffffffffffffffffffffffffff V387
0x6c9: V390 = EQ V389 V386
0x6ca: V391 = ISZERO V390
0x6cb: V392 = ISZERO V391
0x6cc: V393 = 0x6d4
0x6cf: JUMPI 0x6d4 V392
---
Entry stack: [V10, 0x40c, V249]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x40c, V249]

================================

Block 0x6d0
[0x6d0:0x6d3]
---
Predecessors: [0x678]
Successors: []
---
0x6d0 PUSH1 0x0
0x6d2 DUP1
0x6d3 REVERT
---
0x6d0: V394 = 0x0
0x6d3: REVERT 0x0 0x0
---
Entry stack: [V10, 0x40c, V249]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x40c, V249]

================================

Block 0x6d4
[0x6d4:0x715]
---
Predecessors: [0x678]
Successors: [0x716]
---
0x6d4 JUMPDEST
0x6d5 DUP1
0x6d6 PUSH1 0x1
0x6d8 PUSH1 0x0
0x6da PUSH2 0x100
0x6dd EXP
0x6de DUP2
0x6df SLOAD
0x6e0 DUP2
0x6e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6f6 MUL
0x6f7 NOT
0x6f8 AND
0x6f9 SWAP1
0x6fa DUP4
0x6fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x710 AND
0x711 MUL
0x712 OR
0x713 SWAP1
0x714 SSTORE
0x715 POP
---
0x6d4: JUMPDEST 
0x6d6: V395 = 0x1
0x6d8: V396 = 0x0
0x6da: V397 = 0x100
0x6dd: V398 = EXP 0x100 0x0
0x6df: V399 = S[0x1]
0x6e1: V400 = 0xffffffffffffffffffffffffffffffffffffffff
0x6f6: V401 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x6f7: V402 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x6f8: V403 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V399
0x6fb: V404 = 0xffffffffffffffffffffffffffffffffffffffff
0x710: V405 = AND 0xffffffffffffffffffffffffffffffffffffffff V249
0x711: V406 = MUL V405 0x1
0x712: V407 = OR V406 V403
0x714: S[0x1] = V407
---
Entry stack: [V10, 0x40c, V249]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x40c, V249]

================================

Block 0x716
[0x716:0x716]
---
Predecessors: [0x6d4]
Successors: [0x717]
---
0x716 JUMPDEST
---
0x716: JUMPDEST 
---
Entry stack: [V10, 0x40c, V249]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x40c, V249]

================================

Block 0x717
[0x717:0x719]
---
Predecessors: [0x716]
Successors: [0x40c]
---
0x717 JUMPDEST
0x718 POP
0x719 JUMP
---
0x717: JUMPDEST 
0x719: JUMP 0x40c
---
Entry stack: [V10, 0x40c, V249]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x71a
[0x71a:0x771]
---
Predecessors: [0x419]
Successors: [0x772, 0x776]
---
0x71a JUMPDEST
0x71b PUSH1 0x1
0x71d PUSH1 0x0
0x71f SWAP1
0x720 SLOAD
0x721 SWAP1
0x722 PUSH2 0x100
0x725 EXP
0x726 SWAP1
0x727 DIV
0x728 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x73d AND
0x73e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x753 AND
0x754 CALLER
0x755 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x76a AND
0x76b EQ
0x76c ISZERO
0x76d ISZERO
0x76e PUSH2 0x776
0x771 JUMPI
---
0x71a: JUMPDEST 
0x71b: V408 = 0x1
0x71d: V409 = 0x0
0x720: V410 = S[0x1]
0x722: V411 = 0x100
0x725: V412 = EXP 0x100 0x0
0x727: V413 = DIV V410 0x1
0x728: V414 = 0xffffffffffffffffffffffffffffffffffffffff
0x73d: V415 = AND 0xffffffffffffffffffffffffffffffffffffffff V413
0x73e: V416 = 0xffffffffffffffffffffffffffffffffffffffff
0x753: V417 = AND 0xffffffffffffffffffffffffffffffffffffffff V415
0x754: V418 = CALLER
0x755: V419 = 0xffffffffffffffffffffffffffffffffffffffff
0x76a: V420 = AND 0xffffffffffffffffffffffffffffffffffffffff V418
0x76b: V421 = EQ V420 V417
0x76c: V422 = ISZERO V421
0x76d: V423 = ISZERO V422
0x76e: V424 = 0x776
0x771: JUMPI 0x776 V423
---
Entry stack: [V10, 0x44e, V261, V264]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x44e, V261, V264]

================================

Block 0x772
[0x772:0x775]
---
Predecessors: [0x71a]
Successors: []
---
0x772 PUSH1 0x0
0x774 DUP1
0x775 REVERT
---
0x772: V425 = 0x0
0x775: REVERT 0x0 0x0
---
Entry stack: [V10, 0x44e, V261, V264]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x44e, V261, V264]

================================

Block 0x776
[0x776:0x834]
---
Predecessors: [0x71a]
Successors: [0x835, 0x839]
---
0x776 JUMPDEST
0x777 PUSH1 0x0
0x779 DUP1
0x77a SWAP1
0x77b SLOAD
0x77c SWAP1
0x77d PUSH2 0x100
0x780 EXP
0x781 SWAP1
0x782 DIV
0x783 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x798 AND
0x799 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7ae AND
0x7af PUSH4 0xa9059cbb
0x7b4 DUP4
0x7b5 DUP4
0x7b6 PUSH1 0x40
0x7b8 MLOAD
0x7b9 DUP4
0x7ba PUSH4 0xffffffff
0x7bf AND
0x7c0 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x7de MUL
0x7df DUP2
0x7e0 MSTORE
0x7e1 PUSH1 0x4
0x7e3 ADD
0x7e4 DUP1
0x7e5 DUP4
0x7e6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7fb AND
0x7fc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x811 AND
0x812 DUP2
0x813 MSTORE
0x814 PUSH1 0x20
0x816 ADD
0x817 DUP3
0x818 DUP2
0x819 MSTORE
0x81a PUSH1 0x20
0x81c ADD
0x81d SWAP3
0x81e POP
0x81f POP
0x820 POP
0x821 PUSH1 0x0
0x823 PUSH1 0x40
0x825 MLOAD
0x826 DUP1
0x827 DUP4
0x828 SUB
0x829 DUP2
0x82a PUSH1 0x0
0x82c DUP8
0x82d DUP1
0x82e EXTCODESIZE
0x82f ISZERO
0x830 ISZERO
0x831 PUSH2 0x839
0x834 JUMPI
---
0x776: JUMPDEST 
0x777: V426 = 0x0
0x77b: V427 = S[0x0]
0x77d: V428 = 0x100
0x780: V429 = EXP 0x100 0x0
0x782: V430 = DIV V427 0x1
0x783: V431 = 0xffffffffffffffffffffffffffffffffffffffff
0x798: V432 = AND 0xffffffffffffffffffffffffffffffffffffffff V430
0x799: V433 = 0xffffffffffffffffffffffffffffffffffffffff
0x7ae: V434 = AND 0xffffffffffffffffffffffffffffffffffffffff V432
0x7af: V435 = 0xa9059cbb
0x7b6: V436 = 0x40
0x7b8: V437 = M[0x40]
0x7ba: V438 = 0xffffffff
0x7bf: V439 = AND 0xffffffff 0xa9059cbb
0x7c0: V440 = 0x100000000000000000000000000000000000000000000000000000000
0x7de: V441 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x7e0: M[V437] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x7e1: V442 = 0x4
0x7e3: V443 = ADD 0x4 V437
0x7e6: V444 = 0xffffffffffffffffffffffffffffffffffffffff
0x7fb: V445 = AND 0xffffffffffffffffffffffffffffffffffffffff V261
0x7fc: V446 = 0xffffffffffffffffffffffffffffffffffffffff
0x811: V447 = AND 0xffffffffffffffffffffffffffffffffffffffff V445
0x813: M[V443] = V447
0x814: V448 = 0x20
0x816: V449 = ADD 0x20 V443
0x819: M[V449] = V264
0x81a: V450 = 0x20
0x81c: V451 = ADD 0x20 V449
0x821: V452 = 0x0
0x823: V453 = 0x40
0x825: V454 = M[0x40]
0x828: V455 = SUB V451 V454
0x82a: V456 = 0x0
0x82e: V457 = EXTCODESIZE V434
0x82f: V458 = ISZERO V457
0x830: V459 = ISZERO V458
0x831: V460 = 0x839
0x834: JUMPI 0x839 V459
---
Entry stack: [V10, 0x44e, V261, V264]
Stack pops: 2
Stack additions: [S1, S0, V434, 0xa9059cbb, V451, 0x0, V454, V455, V454, 0x0, V434]
Exit stack: [V10, 0x44e, V261, V264, V434, 0xa9059cbb, V451, 0x0, V454, V455, V454, 0x0, V434]

================================

Block 0x835
[0x835:0x838]
---
Predecessors: [0x776]
Successors: []
---
0x835 PUSH1 0x0
0x837 DUP1
0x838 REVERT
---
0x835: V461 = 0x0
0x838: REVERT 0x0 0x0
---
Entry stack: [V10, 0x44e, V261, V264, V434, 0xa9059cbb, V451, 0x0, V454, V455, V454, 0x0, V434]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x44e, V261, V264, V434, 0xa9059cbb, V451, 0x0, V454, V455, V454, 0x0, V434]

================================

Block 0x839
[0x839:0x845]
---
Predecessors: [0x776]
Successors: [0x846, 0x84a]
---
0x839 JUMPDEST
0x83a PUSH2 0x2c6
0x83d GAS
0x83e SUB
0x83f CALL
0x840 ISZERO
0x841 ISZERO
0x842 PUSH2 0x84a
0x845 JUMPI
---
0x839: JUMPDEST 
0x83a: V462 = 0x2c6
0x83d: V463 = GAS
0x83e: V464 = SUB V463 0x2c6
0x83f: V465 = CALL V464 V434 0x0 V454 V455 V454 0x0
0x840: V466 = ISZERO V465
0x841: V467 = ISZERO V466
0x842: V468 = 0x84a
0x845: JUMPI 0x84a V467
---
Entry stack: [V10, 0x44e, V261, V264, V434, 0xa9059cbb, V451, 0x0, V454, V455, V454, 0x0, V434]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x44e, V261, V264, V434, 0xa9059cbb, V451]

================================

Block 0x846
[0x846:0x849]
---
Predecessors: [0x839]
Successors: []
---
0x846 PUSH1 0x0
0x848 DUP1
0x849 REVERT
---
0x846: V469 = 0x0
0x849: REVERT 0x0 0x0
---
Entry stack: [V10, 0x44e, V261, V264, V434, 0xa9059cbb, V451]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x44e, V261, V264, V434, 0xa9059cbb, V451]

================================

Block 0x84a
[0x84a:0x84d]
---
Predecessors: [0x839]
Successors: [0x84e]
---
0x84a JUMPDEST
0x84b POP
0x84c POP
0x84d POP
---
0x84a: JUMPDEST 
---
Entry stack: [V10, 0x44e, V261, V264, V434, 0xa9059cbb, V451]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x44e, V261, V264]

================================

Block 0x84e
[0x84e:0x84e]
---
Predecessors: [0x84a]
Successors: [0x84f]
---
0x84e JUMPDEST
---
0x84e: JUMPDEST 
---
Entry stack: [V10, 0x44e, V261, V264]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x44e, V261, V264]

================================

Block 0x84f
[0x84f:0x852]
---
Predecessors: [0x84e]
Successors: [0x44e]
---
0x84f JUMPDEST
0x850 POP
0x851 POP
0x852 JUMP
---
0x84f: JUMPDEST 
0x852: JUMP 0x44e
---
Entry stack: [V10, 0x44e, V261, V264]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x853
[0x853:0x8aa]
---
Predecessors: [0x45b]
Successors: [0x8ab, 0x8af]
---
0x853 JUMPDEST
0x854 PUSH1 0x1
0x856 PUSH1 0x0
0x858 SWAP1
0x859 SLOAD
0x85a SWAP1
0x85b PUSH2 0x100
0x85e EXP
0x85f SWAP1
0x860 DIV
0x861 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x876 AND
0x877 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x88c AND
0x88d CALLER
0x88e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8a3 AND
0x8a4 EQ
0x8a5 ISZERO
0x8a6 ISZERO
0x8a7 PUSH2 0x8af
0x8aa JUMPI
---
0x853: JUMPDEST 
0x854: V470 = 0x1
0x856: V471 = 0x0
0x859: V472 = S[0x1]
0x85b: V473 = 0x100
0x85e: V474 = EXP 0x100 0x0
0x860: V475 = DIV V472 0x1
0x861: V476 = 0xffffffffffffffffffffffffffffffffffffffff
0x876: V477 = AND 0xffffffffffffffffffffffffffffffffffffffff V475
0x877: V478 = 0xffffffffffffffffffffffffffffffffffffffff
0x88c: V479 = AND 0xffffffffffffffffffffffffffffffffffffffff V477
0x88d: V480 = CALLER
0x88e: V481 = 0xffffffffffffffffffffffffffffffffffffffff
0x8a3: V482 = AND 0xffffffffffffffffffffffffffffffffffffffff V480
0x8a4: V483 = EQ V482 V479
0x8a5: V484 = ISZERO V483
0x8a6: V485 = ISZERO V484
0x8a7: V486 = 0x8af
0x8aa: JUMPI 0x8af V485
---
Entry stack: [V10, 0x463]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x463]

================================

Block 0x8ab
[0x8ab:0x8ae]
---
Predecessors: [0x853]
Successors: []
---
0x8ab PUSH1 0x0
0x8ad DUP1
0x8ae REVERT
---
0x8ab: V487 = 0x0
0x8ae: REVERT 0x0 0x0
---
Entry stack: [V10, 0x463]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x463]

================================

Block 0x8af
[0x8af:0x8e9]
---
Predecessors: [0x853]
Successors: []
---
0x8af JUMPDEST
0x8b0 PUSH1 0x2
0x8b2 PUSH1 0x0
0x8b4 SWAP1
0x8b5 SLOAD
0x8b6 SWAP1
0x8b7 PUSH2 0x100
0x8ba EXP
0x8bb SWAP1
0x8bc DIV
0x8bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8d2 AND
0x8d3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8e8 AND
0x8e9 SELFDESTRUCT
---
0x8af: JUMPDEST 
0x8b0: V488 = 0x2
0x8b2: V489 = 0x0
0x8b5: V490 = S[0x2]
0x8b7: V491 = 0x100
0x8ba: V492 = EXP 0x100 0x0
0x8bc: V493 = DIV V490 0x1
0x8bd: V494 = 0xffffffffffffffffffffffffffffffffffffffff
0x8d2: V495 = AND 0xffffffffffffffffffffffffffffffffffffffff V493
0x8d3: V496 = 0xffffffffffffffffffffffffffffffffffffffff
0x8e8: V497 = AND 0xffffffffffffffffffffffffffffffffffffffff V495
0x8e9: SELFDESTRUCT V497
---
Entry stack: [V10, 0x463]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x463]

================================

Block 0x8ea
[0x8ea:0x8ea]
---
Predecessors: []
Successors: [0x8eb]
---
0x8ea JUMPDEST
---
0x8ea: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x8eb
[0x8eb:0x8ec]
---
Predecessors: [0x8ea]
Successors: []
Has unresolved jump.
---
0x8eb JUMPDEST
0x8ec JUMP
---
0x8eb: JUMPDEST 
0x8ec: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x8ed
[0x8ed:0x911]
---
Predecessors: [0x470]
Successors: [0x478]
---
0x8ed JUMPDEST
0x8ee PUSH1 0x0
0x8f0 DUP1
0x8f1 SWAP1
0x8f2 SLOAD
0x8f3 SWAP1
0x8f4 PUSH2 0x100
0x8f7 EXP
0x8f8 SWAP1
0x8f9 DIV
0x8fa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x90f AND
0x910 DUP2
0x911 JUMP
---
0x8ed: JUMPDEST 
0x8ee: V498 = 0x0
0x8f2: V499 = S[0x0]
0x8f4: V500 = 0x100
0x8f7: V501 = EXP 0x100 0x0
0x8f9: V502 = DIV V499 0x1
0x8fa: V503 = 0xffffffffffffffffffffffffffffffffffffffff
0x90f: V504 = AND 0xffffffffffffffffffffffffffffffffffffffff V502
0x911: JUMP 0x478
---
Entry stack: [V10, 0x478]
Stack pops: 1
Stack additions: [S0, V504]
Exit stack: [V10, 0x478, V504]

================================

Block 0x912
[0x912:0x937]
---
Predecessors: [0x4c5]
Successors: [0x4cd]
---
0x912 JUMPDEST
0x913 PUSH1 0x2
0x915 PUSH1 0x0
0x917 SWAP1
0x918 SLOAD
0x919 SWAP1
0x91a PUSH2 0x100
0x91d EXP
0x91e SWAP1
0x91f DIV
0x920 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x935 AND
0x936 DUP2
0x937 JUMP
---
0x912: JUMPDEST 
0x913: V505 = 0x2
0x915: V506 = 0x0
0x918: V507 = S[0x2]
0x91a: V508 = 0x100
0x91d: V509 = EXP 0x100 0x0
0x91f: V510 = DIV V507 0x1
0x920: V511 = 0xffffffffffffffffffffffffffffffffffffffff
0x935: V512 = AND 0xffffffffffffffffffffffffffffffffffffffff V510
0x937: JUMP 0x4cd
---
Entry stack: [V10, 0x4cd]
Stack pops: 1
Stack additions: [S0, V512]
Exit stack: [V10, 0x4cd, V512]

================================

Block 0x938
[0x938:0x963]
---
Predecessors: []
Successors: []
---
0x938 STOP
0x939 LOG1
0x93a PUSH6 0x627a7a723058
0x941 SHA3
0x942 SWAP3
0x943 PUSH31 0x310b2bd2a94bcc7f0c0558d9eb2e1b52c254c7c7376d85471984c32d05b100
0x963 MISSING 0x29
---
0x938: STOP 
0x939: LOG S0 S1 S2
0x93a: V513 = 0x627a7a723058
0x941: V514 = SHA3 0x627a7a723058 S3
0x943: V515 = 0x310b2bd2a94bcc7f0c0558d9eb2e1b52c254c7c7376d85471984c32d05b100
0x963: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0x310b2bd2a94bcc7f0c0558d9eb2e1b52c254c7c7376d85471984c32d05b100, S6, S4, S5, V514]
Exit stack: []

================================

Function 0:
Public function signature: 0x2d05d3f
Entry block: 0x30e
Exit block: 0x321
Body: 0x30e, 0x315, 0x319, 0x321, 0x50f

Function 1:
Public function signature: 0x13af4035
Entry block: 0x363
Exit block: 0x39a
Body: 0x363, 0x36a, 0x36e, 0x39a, 0x535, 0x58d, 0x591, 0x5d3, 0x5d4

Function 2:
Public function signature: 0x144fa6d7
Entry block: 0x39c
Exit block: 0x3d3
Body: 0x39c, 0x3a3, 0x3a7, 0x3d3, 0x5d7, 0x62f, 0x633, 0x674, 0x675

Function 3:
Public function signature: 0x3f516018
Entry block: 0x3d5
Exit block: 0x40c
Body: 0x3d5, 0x3dc, 0x3e0, 0x40c, 0x678, 0x6d0, 0x6d4, 0x716, 0x717

Function 4:
Public function signature: 0x412664ae
Entry block: 0x40e
Exit block: 0x44e
Body: 0x40e, 0x415, 0x419, 0x44e, 0x71a, 0x772, 0x776, 0x835, 0x839, 0x846, 0x84a, 0x84e, 0x84f

Function 5:
Public function signature: 0x41c0e1b5
Entry block: 0x450
Exit block: 0x8af
Body: 0x450, 0x457, 0x45b, 0x853, 0x8ab, 0x8af

Function 6:
Public function signature: 0x6e66f6e9
Entry block: 0x465
Exit block: 0x478
Body: 0x465, 0x46c, 0x470, 0x478, 0x8ed

Function 7:
Public function signature: 0x8da5cb5b
Entry block: 0x4ba
Exit block: 0x4cd
Body: 0x4ba, 0x4c1, 0x4c5, 0x4cd, 0x912

Function 8:
Public fallback function
Entry block: 0x8c
Exit block: 0x30b
Body: 0x8c, 0x8d, 0x99, 0x9d, 0xab, 0xb3, 0xba, 0xc3, 0xc9, 0xd0, 0xde, 0xe6, 0xed, 0xf6, 0xfc, 0x103, 0x111, 0x119, 0x120, 0x129, 0x12f, 0x136, 0x148, 0x149, 0x218, 0x21c, 0x229, 0x22d, 0x306, 0x30a, 0x30b

