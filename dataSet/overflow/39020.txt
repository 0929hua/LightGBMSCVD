Block 0x0
[0x0:0x38]
---
Predecessors: []
Successors: [0x39, 0x5c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 PUSH4 0xffffffff
0x2d AND
0x2e DUP1
0x2f PUSH4 0xa3b0a4f
0x34 EQ
0x35 PUSH2 0x5c
0x38 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x28: V6 = 0xffffffff
0x2d: V7 = AND 0xffffffff V5
0x2f: V8 = 0xa3b0a4f
0x34: V9 = EQ 0xa3b0a4f V7
0x35: V10 = 0x5c
0x38: JUMPI 0x5c V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0x0]
Successors: [0x44, 0x92]
---
0x39 DUP1
0x3a PUSH4 0x80c9419e
0x3f EQ
0x40 PUSH2 0x92
0x43 JUMPI
---
0x3a: V11 = 0x80c9419e
0x3f: V12 = EQ 0x80c9419e V7
0x40: V13 = 0x92
0x43: JUMPI 0x92 V12
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x44
[0x44:0x4e]
---
Predecessors: [0x39]
Successors: [0x4f, 0xf2]
---
0x44 DUP1
0x45 PUSH4 0xa87d942c
0x4a EQ
0x4b PUSH2 0xf2
0x4e JUMPI
---
0x45: V14 = 0xa87d942c
0x4a: V15 = EQ 0xa87d942c V7
0x4b: V16 = 0xf2
0x4e: JUMPI 0xf2 V15
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x4f
[0x4f:0x59]
---
Predecessors: [0x44]
Successors: [0x5a, 0x118]
---
0x4f DUP1
0x50 PUSH4 0xb93f9b0a
0x55 EQ
0x56 PUSH2 0x118
0x59 JUMPI
---
0x50: V17 = 0xb93f9b0a
0x55: V18 = EQ 0xb93f9b0a V7
0x56: V19 = 0x118
0x59: JUMPI 0x118 V18
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x5a
[0x5a:0x5b]
---
Predecessors: [0x4f]
Successors: []
---
0x5a JUMPDEST
0x5b INVALID
---
0x5a: JUMPDEST 
0x5b: INVALID 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x5c
[0x5c:0x62]
---
Predecessors: [0x0]
Successors: [0x63, 0x64]
---
0x5c JUMPDEST
0x5d CALLVALUE
0x5e ISZERO
0x5f PUSH2 0x64
0x62 JUMPI
---
0x5c: JUMPDEST 
0x5d: V20 = CALLVALUE
0x5e: V21 = ISZERO V20
0x5f: V22 = 0x64
0x62: JUMPI 0x64 V21
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x63
[0x63:0x63]
---
Predecessors: [0x5c]
Successors: []
---
0x63 INVALID
---
0x63: INVALID 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x64
[0x64:0x8f]
---
Predecessors: [0x5c]
Successors: [0x178]
---
0x64 JUMPDEST
0x65 PUSH2 0x90
0x68 PUSH1 0x4
0x6a DUP1
0x6b DUP1
0x6c CALLDATALOAD
0x6d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x82 AND
0x83 SWAP1
0x84 PUSH1 0x20
0x86 ADD
0x87 SWAP1
0x88 SWAP2
0x89 SWAP1
0x8a POP
0x8b POP
0x8c PUSH2 0x178
0x8f JUMP
---
0x64: JUMPDEST 
0x65: V23 = 0x90
0x68: V24 = 0x4
0x6c: V25 = CALLDATALOAD 0x4
0x6d: V26 = 0xffffffffffffffffffffffffffffffffffffffff
0x82: V27 = AND 0xffffffffffffffffffffffffffffffffffffffff V25
0x84: V28 = 0x20
0x86: V29 = ADD 0x20 0x4
0x8c: V30 = 0x178
0x8f: JUMP 0x178
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x90, V27]
Exit stack: [V7, 0x90, V27]

================================

Block 0x90
[0x90:0x91]
---
Predecessors: [0x240]
Successors: []
---
0x90 JUMPDEST
0x91 STOP
---
0x90: JUMPDEST 
0x91: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x92
[0x92:0x98]
---
Predecessors: [0x39]
Successors: [0x99, 0x9a]
---
0x92 JUMPDEST
0x93 CALLVALUE
0x94 ISZERO
0x95 PUSH2 0x9a
0x98 JUMPI
---
0x92: JUMPDEST 
0x93: V31 = CALLVALUE
0x94: V32 = ISZERO V31
0x95: V33 = 0x9a
0x98: JUMPI 0x9a V32
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x99
[0x99:0x99]
---
Predecessors: [0x92]
Successors: []
---
0x99 INVALID
---
0x99: INVALID 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x9a
[0x9a:0xaf]
---
Predecessors: [0x92]
Successors: [0x243]
---
0x9a JUMPDEST
0x9b PUSH2 0xb0
0x9e PUSH1 0x4
0xa0 DUP1
0xa1 DUP1
0xa2 CALLDATALOAD
0xa3 SWAP1
0xa4 PUSH1 0x20
0xa6 ADD
0xa7 SWAP1
0xa8 SWAP2
0xa9 SWAP1
0xaa POP
0xab POP
0xac PUSH2 0x243
0xaf JUMP
---
0x9a: JUMPDEST 
0x9b: V34 = 0xb0
0x9e: V35 = 0x4
0xa2: V36 = CALLDATALOAD 0x4
0xa4: V37 = 0x20
0xa6: V38 = ADD 0x20 0x4
0xac: V39 = 0x243
0xaf: JUMP 0x243
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0xb0, V36]
Exit stack: [V7, 0xb0, V36]

================================

Block 0xb0
[0xb0:0xf1]
---
Predecessors: [0x260]
Successors: []
---
0xb0 JUMPDEST
0xb1 PUSH1 0x40
0xb3 MLOAD
0xb4 DUP1
0xb5 DUP3
0xb6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcb AND
0xcc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe1 AND
0xe2 DUP2
0xe3 MSTORE
0xe4 PUSH1 0x20
0xe6 ADD
0xe7 SWAP2
0xe8 POP
0xe9 POP
0xea PUSH1 0x40
0xec MLOAD
0xed DUP1
0xee SWAP2
0xef SUB
0xf0 SWAP1
0xf1 RETURN
---
0xb0: JUMPDEST 
0xb1: V40 = 0x40
0xb3: V41 = M[0x40]
0xb6: V42 = 0xffffffffffffffffffffffffffffffffffffffff
0xcb: V43 = AND 0xffffffffffffffffffffffffffffffffffffffff V135
0xcc: V44 = 0xffffffffffffffffffffffffffffffffffffffff
0xe1: V45 = AND 0xffffffffffffffffffffffffffffffffffffffff V43
0xe3: M[V41] = V45
0xe4: V46 = 0x20
0xe6: V47 = ADD 0x20 V41
0xea: V48 = 0x40
0xec: V49 = M[0x40]
0xef: V50 = SUB V47 V49
0xf1: RETURN V49 V50
---
Entry stack: [V7, 0xb0, V135]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0xb0]

================================

Block 0xf2
[0xf2:0xf8]
---
Predecessors: [0x44]
Successors: [0xf9, 0xfa]
---
0xf2 JUMPDEST
0xf3 CALLVALUE
0xf4 ISZERO
0xf5 PUSH2 0xfa
0xf8 JUMPI
---
0xf2: JUMPDEST 
0xf3: V51 = CALLVALUE
0xf4: V52 = ISZERO V51
0xf5: V53 = 0xfa
0xf8: JUMPI 0xfa V52
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xf9
[0xf9:0xf9]
---
Predecessors: [0xf2]
Successors: []
---
0xf9 INVALID
---
0xf9: INVALID 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xfa
[0xfa:0x101]
---
Predecessors: [0xf2]
Successors: [0x283]
---
0xfa JUMPDEST
0xfb PUSH2 0x102
0xfe PUSH2 0x283
0x101 JUMP
---
0xfa: JUMPDEST 
0xfb: V54 = 0x102
0xfe: V55 = 0x283
0x101: JUMP 0x283
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x102]
Exit stack: [V7, 0x102]

================================

Block 0x102
[0x102:0x117]
---
Predecessors: [0x28e]
Successors: []
---
0x102 JUMPDEST
0x103 PUSH1 0x40
0x105 MLOAD
0x106 DUP1
0x107 DUP3
0x108 DUP2
0x109 MSTORE
0x10a PUSH1 0x20
0x10c ADD
0x10d SWAP2
0x10e POP
0x10f POP
0x110 PUSH1 0x40
0x112 MLOAD
0x113 DUP1
0x114 SWAP2
0x115 SUB
0x116 SWAP1
0x117 RETURN
---
0x102: JUMPDEST 
0x103: V56 = 0x40
0x105: V57 = M[0x40]
0x109: M[V57] = V138
0x10a: V58 = 0x20
0x10c: V59 = ADD 0x20 V57
0x110: V60 = 0x40
0x112: V61 = M[0x40]
0x115: V62 = SUB V59 V61
0x117: RETURN V61 V62
---
Entry stack: [V7, V138]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Block 0x118
[0x118:0x11e]
---
Predecessors: [0x4f]
Successors: [0x11f, 0x120]
---
0x118 JUMPDEST
0x119 CALLVALUE
0x11a ISZERO
0x11b PUSH2 0x120
0x11e JUMPI
---
0x118: JUMPDEST 
0x119: V63 = CALLVALUE
0x11a: V64 = ISZERO V63
0x11b: V65 = 0x120
0x11e: JUMPI 0x120 V64
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x11f
[0x11f:0x11f]
---
Predecessors: [0x118]
Successors: []
---
0x11f INVALID
---
0x11f: INVALID 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x120
[0x120:0x135]
---
Predecessors: [0x118]
Successors: [0x291]
---
0x120 JUMPDEST
0x121 PUSH2 0x136
0x124 PUSH1 0x4
0x126 DUP1
0x127 DUP1
0x128 CALLDATALOAD
0x129 SWAP1
0x12a PUSH1 0x20
0x12c ADD
0x12d SWAP1
0x12e SWAP2
0x12f SWAP1
0x130 POP
0x131 POP
0x132 PUSH2 0x291
0x135 JUMP
---
0x120: JUMPDEST 
0x121: V66 = 0x136
0x124: V67 = 0x4
0x128: V68 = CALLDATALOAD 0x4
0x12a: V69 = 0x20
0x12c: V70 = ADD 0x20 0x4
0x132: V71 = 0x291
0x135: JUMP 0x291
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x136, V68]
Exit stack: [V7, 0x136, V68]

================================

Block 0x136
[0x136:0x177]
---
Predecessors: [0x2d2]
Successors: []
---
0x136 JUMPDEST
0x137 PUSH1 0x40
0x139 MLOAD
0x13a DUP1
0x13b DUP3
0x13c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x151 AND
0x152 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x167 AND
0x168 DUP2
0x169 MSTORE
0x16a PUSH1 0x20
0x16c ADD
0x16d SWAP2
0x16e POP
0x16f POP
0x170 PUSH1 0x40
0x172 MLOAD
0x173 DUP1
0x174 SWAP2
0x175 SUB
0x176 SWAP1
0x177 RETURN
---
0x136: JUMPDEST 
0x137: V72 = 0x40
0x139: V73 = M[0x40]
0x13c: V74 = 0xffffffffffffffffffffffffffffffffffffffff
0x151: V75 = AND 0xffffffffffffffffffffffffffffffffffffffff V157
0x152: V76 = 0xffffffffffffffffffffffffffffffffffffffff
0x167: V77 = AND 0xffffffffffffffffffffffffffffffffffffffff V75
0x169: M[V73] = V77
0x16a: V78 = 0x20
0x16c: V79 = ADD 0x20 V73
0x170: V80 = 0x40
0x172: V81 = M[0x40]
0x175: V82 = SUB V79 V81
0x177: RETURN V81 V82
---
Entry stack: [V7, V157]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Block 0x178
[0x178:0x18b]
---
Predecessors: [0x64]
Successors: [0x2d7]
---
0x178 JUMPDEST
0x179 PUSH1 0x0
0x17b DUP1
0x17c SLOAD
0x17d DUP1
0x17e PUSH1 0x1
0x180 ADD
0x181 DUP3
0x182 DUP2
0x183 PUSH2 0x18c
0x186 SWAP2
0x187 SWAP1
0x188 PUSH2 0x2d7
0x18b JUMP
---
0x178: JUMPDEST 
0x179: V83 = 0x0
0x17c: V84 = S[0x0]
0x17e: V85 = 0x1
0x180: V86 = ADD 0x1 V84
0x183: V87 = 0x18c
0x188: V88 = 0x2d7
0x18b: JUMP 0x2d7
---
Entry stack: [V7, 0x90, V27]
Stack pops: 0
Stack additions: [0x0, V84, V86, 0x18c, 0x0, V86]
Exit stack: [V7, 0x90, V27, 0x0, V84, V86, 0x18c, 0x0, V86]

================================

Block 0x18c
[0x18c:0x199]
---
Predecessors: [0x2fe]
Successors: [0x19a]
---
0x18c JUMPDEST
0x18d SWAP2
0x18e PUSH1 0x0
0x190 MSTORE
0x191 PUSH1 0x20
0x193 PUSH1 0x0
0x195 SHA3
0x196 SWAP1
0x197 ADD
0x198 PUSH1 0x0
---
0x18c: JUMPDEST 
0x18e: V89 = 0x0
0x190: M[0x0] = 0x0
0x191: V90 = 0x20
0x193: V91 = 0x0
0x195: V92 = SHA3 0x0 0x20
0x197: V93 = ADD V84 V92
0x198: V94 = 0x0
---
Entry stack: [V7, 0x90, V27, 0x0, V84, V86]
Stack pops: 3
Stack additions: [S0, V93, 0x0]
Exit stack: [V7, 0x90, V27, V86, V93, 0x0]

================================

Block 0x19a
[0x19a:0x23f]
---
Predecessors: [0x18c]
Successors: [0x240]
---
0x19a JUMPDEST
0x19b DUP4
0x19c SWAP1
0x19d SWAP2
0x19e SWAP1
0x19f SWAP2
0x1a0 PUSH2 0x100
0x1a3 EXP
0x1a4 DUP2
0x1a5 SLOAD
0x1a6 DUP2
0x1a7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1bc MUL
0x1bd NOT
0x1be AND
0x1bf SWAP1
0x1c0 DUP4
0x1c1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d6 AND
0x1d7 MUL
0x1d8 OR
0x1d9 SWAP1
0x1da SSTORE
0x1db POP
0x1dc POP
0x1dd PUSH32 0xdcfefddfe354ab15def7a2a6a8758e2ad4100c920318c627db94e29d833e1567
0x1fe DUP2
0x1ff PUSH1 0x40
0x201 MLOAD
0x202 DUP1
0x203 DUP3
0x204 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x219 AND
0x21a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22f AND
0x230 DUP2
0x231 MSTORE
0x232 PUSH1 0x20
0x234 ADD
0x235 SWAP2
0x236 POP
0x237 POP
0x238 PUSH1 0x40
0x23a MLOAD
0x23b DUP1
0x23c SWAP2
0x23d SUB
0x23e SWAP1
0x23f LOG1
---
0x19a: JUMPDEST 
0x1a0: V95 = 0x100
0x1a3: V96 = EXP 0x100 0x0
0x1a5: V97 = S[V93]
0x1a7: V98 = 0xffffffffffffffffffffffffffffffffffffffff
0x1bc: V99 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x1bd: V100 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1be: V101 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V97
0x1c1: V102 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d6: V103 = AND 0xffffffffffffffffffffffffffffffffffffffff V27
0x1d7: V104 = MUL V103 0x1
0x1d8: V105 = OR V104 V101
0x1da: S[V93] = V105
0x1dd: V106 = 0xdcfefddfe354ab15def7a2a6a8758e2ad4100c920318c627db94e29d833e1567
0x1ff: V107 = 0x40
0x201: V108 = M[0x40]
0x204: V109 = 0xffffffffffffffffffffffffffffffffffffffff
0x219: V110 = AND 0xffffffffffffffffffffffffffffffffffffffff V27
0x21a: V111 = 0xffffffffffffffffffffffffffffffffffffffff
0x22f: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x231: M[V108] = V112
0x232: V113 = 0x20
0x234: V114 = ADD 0x20 V108
0x238: V115 = 0x40
0x23a: V116 = M[0x40]
0x23d: V117 = SUB V114 V116
0x23f: LOG V116 V117 0xdcfefddfe354ab15def7a2a6a8758e2ad4100c920318c627db94e29d833e1567
---
Entry stack: [V7, 0x90, V27, V86, V93, 0x0]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V7, 0x90, V27]

================================

Block 0x240
[0x240:0x242]
---
Predecessors: [0x19a]
Successors: [0x90]
---
0x240 JUMPDEST
0x241 POP
0x242 JUMP
---
0x240: JUMPDEST 
0x242: JUMP 0x90
---
Entry stack: [V7, 0x90, V27]
Stack pops: 2
Stack additions: []
Exit stack: [V7]

================================

Block 0x243
[0x243:0x250]
---
Predecessors: [0x9a]
Successors: [0x251, 0x252]
---
0x243 JUMPDEST
0x244 PUSH1 0x0
0x246 DUP2
0x247 DUP2
0x248 SLOAD
0x249 DUP2
0x24a LT
0x24b ISZERO
0x24c ISZERO
0x24d PUSH2 0x252
0x250 JUMPI
---
0x243: JUMPDEST 
0x244: V118 = 0x0
0x248: V119 = S[0x0]
0x24a: V120 = LT V36 V119
0x24b: V121 = ISZERO V120
0x24c: V122 = ISZERO V121
0x24d: V123 = 0x252
0x250: JUMPI 0x252 V122
---
Entry stack: [V7, 0xb0, V36]
Stack pops: 1
Stack additions: [S0, 0x0, S0]
Exit stack: [V7, 0xb0, V36, 0x0, V36]

================================

Block 0x251
[0x251:0x251]
---
Predecessors: [0x243]
Successors: []
---
0x251 INVALID
---
0x251: INVALID 
---
Entry stack: [V7, 0xb0, V36, 0x0, V36]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xb0, V36, 0x0, V36]

================================

Block 0x252
[0x252:0x25f]
---
Predecessors: [0x243]
Successors: [0x260]
---
0x252 JUMPDEST
0x253 SWAP1
0x254 PUSH1 0x0
0x256 MSTORE
0x257 PUSH1 0x20
0x259 PUSH1 0x0
0x25b SHA3
0x25c SWAP1
0x25d ADD
0x25e PUSH1 0x0
---
0x252: JUMPDEST 
0x254: V124 = 0x0
0x256: M[0x0] = 0x0
0x257: V125 = 0x20
0x259: V126 = 0x0
0x25b: V127 = SHA3 0x0 0x20
0x25d: V128 = ADD V36 V127
0x25e: V129 = 0x0
---
Entry stack: [V7, 0xb0, V36, 0x0, V36]
Stack pops: 2
Stack additions: [V128, 0x0]
Exit stack: [V7, 0xb0, V36, V128, 0x0]

================================

Block 0x260
[0x260:0x282]
---
Predecessors: [0x252]
Successors: [0xb0]
---
0x260 JUMPDEST
0x261 SWAP2
0x262 POP
0x263 SLOAD
0x264 SWAP1
0x265 PUSH2 0x100
0x268 EXP
0x269 SWAP1
0x26a DIV
0x26b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x280 AND
0x281 DUP2
0x282 JUMP
---
0x260: JUMPDEST 
0x263: V130 = S[V128]
0x265: V131 = 0x100
0x268: V132 = EXP 0x100 0x0
0x26a: V133 = DIV V130 0x1
0x26b: V134 = 0xffffffffffffffffffffffffffffffffffffffff
0x280: V135 = AND 0xffffffffffffffffffffffffffffffffffffffff V133
0x282: JUMP 0xb0
---
Entry stack: [V7, 0xb0, V36, V128, 0x0]
Stack pops: 4
Stack additions: [S3, V135]
Exit stack: [V7, 0xb0, V135]

================================

Block 0x283
[0x283:0x28d]
---
Predecessors: [0xfa]
Successors: [0x28e]
---
0x283 JUMPDEST
0x284 PUSH1 0x0
0x286 PUSH1 0x0
0x288 DUP1
0x289 SLOAD
0x28a SWAP1
0x28b POP
0x28c SWAP1
0x28d POP
---
0x283: JUMPDEST 
0x284: V136 = 0x0
0x286: V137 = 0x0
0x289: V138 = S[0x0]
---
Entry stack: [V7, 0x102]
Stack pops: 0
Stack additions: [V138]
Exit stack: [V7, 0x102, V138]

================================

Block 0x28e
[0x28e:0x290]
---
Predecessors: [0x283]
Successors: [0x102]
---
0x28e JUMPDEST
0x28f SWAP1
0x290 JUMP
---
0x28e: JUMPDEST 
0x290: JUMP 0x102
---
Entry stack: [V7, 0x102, V138]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V7, V138]

================================

Block 0x291
[0x291:0x2a0]
---
Predecessors: [0x120]
Successors: [0x2a1, 0x2a2]
---
0x291 JUMPDEST
0x292 PUSH1 0x0
0x294 PUSH1 0x0
0x296 DUP3
0x297 DUP2
0x298 SLOAD
0x299 DUP2
0x29a LT
0x29b ISZERO
0x29c ISZERO
0x29d PUSH2 0x2a2
0x2a0 JUMPI
---
0x291: JUMPDEST 
0x292: V139 = 0x0
0x294: V140 = 0x0
0x298: V141 = S[0x0]
0x29a: V142 = LT V68 V141
0x29b: V143 = ISZERO V142
0x29c: V144 = ISZERO V143
0x29d: V145 = 0x2a2
0x2a0: JUMPI 0x2a2 V144
---
Entry stack: [V7, 0x136, V68]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, S0]
Exit stack: [V7, 0x136, V68, 0x0, 0x0, V68]

================================

Block 0x2a1
[0x2a1:0x2a1]
---
Predecessors: [0x291]
Successors: []
---
0x2a1 INVALID
---
0x2a1: INVALID 
---
Entry stack: [V7, 0x136, V68, 0x0, 0x0, V68]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x136, V68, 0x0, 0x0, V68]

================================

Block 0x2a2
[0x2a2:0x2af]
---
Predecessors: [0x291]
Successors: [0x2b0]
---
0x2a2 JUMPDEST
0x2a3 SWAP1
0x2a4 PUSH1 0x0
0x2a6 MSTORE
0x2a7 PUSH1 0x20
0x2a9 PUSH1 0x0
0x2ab SHA3
0x2ac SWAP1
0x2ad ADD
0x2ae PUSH1 0x0
---
0x2a2: JUMPDEST 
0x2a4: V146 = 0x0
0x2a6: M[0x0] = 0x0
0x2a7: V147 = 0x20
0x2a9: V148 = 0x0
0x2ab: V149 = SHA3 0x0 0x20
0x2ad: V150 = ADD V68 V149
0x2ae: V151 = 0x0
---
Entry stack: [V7, 0x136, V68, 0x0, 0x0, V68]
Stack pops: 2
Stack additions: [V150, 0x0]
Exit stack: [V7, 0x136, V68, 0x0, V150, 0x0]

================================

Block 0x2b0
[0x2b0:0x2d1]
---
Predecessors: [0x2a2]
Successors: [0x2d2]
---
0x2b0 JUMPDEST
0x2b1 SWAP1
0x2b2 SLOAD
0x2b3 SWAP1
0x2b4 PUSH2 0x100
0x2b7 EXP
0x2b8 SWAP1
0x2b9 DIV
0x2ba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2cf AND
0x2d0 SWAP1
0x2d1 POP
---
0x2b0: JUMPDEST 
0x2b2: V152 = S[V150]
0x2b4: V153 = 0x100
0x2b7: V154 = EXP 0x100 0x0
0x2b9: V155 = DIV V152 0x1
0x2ba: V156 = 0xffffffffffffffffffffffffffffffffffffffff
0x2cf: V157 = AND 0xffffffffffffffffffffffffffffffffffffffff V155
---
Entry stack: [V7, 0x136, V68, 0x0, V150, 0x0]
Stack pops: 3
Stack additions: [V157]
Exit stack: [V7, 0x136, V68, V157]

================================

Block 0x2d2
[0x2d2:0x2d6]
---
Predecessors: [0x2b0]
Successors: [0x136]
---
0x2d2 JUMPDEST
0x2d3 SWAP2
0x2d4 SWAP1
0x2d5 POP
0x2d6 JUMP
---
0x2d2: JUMPDEST 
0x2d6: JUMP 0x136
---
Entry stack: [V7, 0x136, V68, V157]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V7, V157]

================================

Block 0x2d7
[0x2d7:0x2e4]
---
Predecessors: [0x178]
Successors: [0x2e5, 0x2fe]
---
0x2d7 JUMPDEST
0x2d8 DUP2
0x2d9 SLOAD
0x2da DUP2
0x2db DUP4
0x2dc SSTORE
0x2dd DUP2
0x2de DUP2
0x2df ISZERO
0x2e0 GT
0x2e1 PUSH2 0x2fe
0x2e4 JUMPI
---
0x2d7: JUMPDEST 
0x2d9: V158 = S[0x0]
0x2dc: S[0x0] = V86
0x2df: V159 = ISZERO V158
0x2e0: V160 = GT V159 V86
0x2e1: V161 = 0x2fe
0x2e4: JUMPI 0x2fe V160
---
Entry stack: [V7, 0x90, V27, 0x0, V84, V86, 0x18c, 0x0, V86]
Stack pops: 2
Stack additions: [S1, S0, V158]
Exit stack: [V7, 0x90, V27, 0x0, V84, V86, 0x18c, 0x0, V86, V158]

================================

Block 0x2e5
[0x2e5:0x2fc]
---
Predecessors: [0x2d7]
Successors: [0x303]
---
0x2e5 DUP2
0x2e6 DUP4
0x2e7 PUSH1 0x0
0x2e9 MSTORE
0x2ea PUSH1 0x20
0x2ec PUSH1 0x0
0x2ee SHA3
0x2ef SWAP2
0x2f0 DUP3
0x2f1 ADD
0x2f2 SWAP2
0x2f3 ADD
0x2f4 PUSH2 0x2fd
0x2f7 SWAP2
0x2f8 SWAP1
0x2f9 PUSH2 0x303
0x2fc JUMP
---
0x2e7: V162 = 0x0
0x2e9: M[0x0] = 0x0
0x2ea: V163 = 0x20
0x2ec: V164 = 0x0
0x2ee: V165 = SHA3 0x0 0x20
0x2f1: V166 = ADD V165 V158
0x2f3: V167 = ADD V165 V86
0x2f4: V168 = 0x2fd
0x2f9: V169 = 0x303
0x2fc: JUMP 0x303
---
Entry stack: [V7, 0x90, V27, 0x0, V84, V86, 0x18c, 0x0, V86, V158]
Stack pops: 3
Stack additions: [S2, S1, 0x2fd, V166, V167]
Exit stack: [V7, 0x90, V27, 0x0, V84, V86, 0x18c, 0x0, V86, 0x2fd, V166, V167]

================================

Block 0x2fd
[0x2fd:0x2fd]
---
Predecessors: [0x325]
Successors: [0x2fe]
---
0x2fd JUMPDEST
---
0x2fd: JUMPDEST 
---
Entry stack: [V7, 0x90, V27, 0x0, V84, V86, 0x18c, 0x0, V86, V166]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x90, V27, 0x0, V84, V86, 0x18c, 0x0, V86, V166]

================================

Block 0x2fe
[0x2fe:0x302]
---
Predecessors: [0x2d7, 0x2fd]
Successors: [0x18c]
---
0x2fe JUMPDEST
0x2ff POP
0x300 POP
0x301 POP
0x302 JUMP
---
0x2fe: JUMPDEST 
0x302: JUMP 0x18c
---
Entry stack: [V7, 0x90, V27, 0x0, V84, V86, 0x18c, 0x0, V86, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V7, 0x90, V27, 0x0, V84, V86]

================================

Block 0x303
[0x303:0x308]
---
Predecessors: [0x2e5]
Successors: [0x309]
---
0x303 JUMPDEST
0x304 PUSH2 0x325
0x307 SWAP2
0x308 SWAP1
---
0x303: JUMPDEST 
0x304: V170 = 0x325
---
Entry stack: [V7, 0x90, V27, 0x0, V84, V86, 0x18c, 0x0, V86, 0x2fd, V166, V167]
Stack pops: 2
Stack additions: [0x325, S1, S0]
Exit stack: [V7, 0x90, V27, 0x0, V84, V86, 0x18c, 0x0, V86, 0x2fd, 0x325, V166, V167]

================================

Block 0x309
[0x309:0x311]
---
Predecessors: [0x303, 0x312]
Successors: [0x312, 0x321]
---
0x309 JUMPDEST
0x30a DUP1
0x30b DUP3
0x30c GT
0x30d ISZERO
0x30e PUSH2 0x321
0x311 JUMPI
---
0x309: JUMPDEST 
0x30c: V171 = GT V166 S0
0x30d: V172 = ISZERO V171
0x30e: V173 = 0x321
0x311: JUMPI 0x321 V172
---
Entry stack: [V7, 0x90, V27, 0x0, V84, V86, 0x18c, 0x0, V86, 0x2fd, 0x325, V166, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V7, 0x90, V27, 0x0, V84, V86, 0x18c, 0x0, V86, 0x2fd, 0x325, V166, S0]

================================

Block 0x312
[0x312:0x320]
---
Predecessors: [0x309]
Successors: [0x309]
---
0x312 PUSH1 0x0
0x314 DUP2
0x315 PUSH1 0x0
0x317 SWAP1
0x318 SSTORE
0x319 POP
0x31a PUSH1 0x1
0x31c ADD
0x31d PUSH2 0x309
0x320 JUMP
---
0x312: V174 = 0x0
0x315: V175 = 0x0
0x318: S[S0] = 0x0
0x31a: V176 = 0x1
0x31c: V177 = ADD 0x1 S0
0x31d: V178 = 0x309
0x320: JUMP 0x309
---
Entry stack: [V7, 0x90, V27, 0x0, V84, V86, 0x18c, 0x0, V86, 0x2fd, 0x325, V166, S0]
Stack pops: 1
Stack additions: [V177]
Exit stack: [V7, 0x90, V27, 0x0, V84, V86, 0x18c, 0x0, V86, 0x2fd, 0x325, V166, V177]

================================

Block 0x321
[0x321:0x324]
---
Predecessors: [0x309]
Successors: [0x325]
---
0x321 JUMPDEST
0x322 POP
0x323 SWAP1
0x324 JUMP
---
0x321: JUMPDEST 
0x324: JUMP 0x325
---
Entry stack: [V7, 0x90, V27, 0x0, V84, V86, 0x18c, 0x0, V86, 0x2fd, 0x325, V166, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V7, 0x90, V27, 0x0, V84, V86, 0x18c, 0x0, V86, 0x2fd, V166]

================================

Block 0x325
[0x325:0x327]
---
Predecessors: [0x321]
Successors: [0x2fd]
---
0x325 JUMPDEST
0x326 SWAP1
0x327 JUMP
---
0x325: JUMPDEST 
0x327: JUMP 0x2fd
---
Entry stack: [V7, 0x90, V27, 0x0, V84, V86, 0x18c, 0x0, V86, 0x2fd, V166]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V7, 0x90, V27, 0x0, V84, V86, 0x18c, 0x0, V86, V166]

================================

Block 0x328
[0x328:0x353]
---
Predecessors: []
Successors: []
---
0x328 STOP
0x329 LOG1
0x32a PUSH6 0x627a7a723058
0x331 SHA3
0x332 MISSING 0xa8
0x333 MISSING 0xed
0x334 PUSH25 0x20fa356b548e5040190f11a8c0adbf108ad6b1d9e56a202b6f
0x34e DIV
0x34f CALLDATACOPY
0x350 SWAP1
0x351 DUP12
0x352 STOP
0x353 MISSING 0x29
---
0x328: STOP 
0x329: LOG S0 S1 S2
0x32a: V179 = 0x627a7a723058
0x331: V180 = SHA3 0x627a7a723058 S3
0x332: MISSING 0xa8
0x333: MISSING 0xed
0x334: V181 = 0x20fa356b548e5040190f11a8c0adbf108ad6b1d9e56a202b6f
0x34e: V182 = DIV 0x20fa356b548e5040190f11a8c0adbf108ad6b1d9e56a202b6f S0
0x34f: CALLDATACOPY V182 S1 S2
0x352: STOP 
0x353: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V180, S14, S4, S3, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14]
Exit stack: []

================================

Function 0:
Public function signature: 0xa3b0a4f
Entry block: 0x5c
Exit block: 0x90
Body: 0x5c, 0x63, 0x64, 0x90, 0x178, 0x18c, 0x19a, 0x240, 0x2d7, 0x2e5, 0x2fd, 0x2fe, 0x303, 0x309, 0x312, 0x321, 0x325

Function 1:
Public function signature: 0x80c9419e
Entry block: 0x92
Exit block: 0xb0
Body: 0x92, 0x99, 0x9a, 0xb0, 0x243, 0x251, 0x252, 0x260

Function 2:
Public function signature: 0xa87d942c
Entry block: 0xf2
Exit block: 0x102
Body: 0xf2, 0xf9, 0xfa, 0x102, 0x283, 0x28e

Function 3:
Public function signature: 0xb93f9b0a
Entry block: 0x118
Exit block: 0x136
Body: 0x118, 0x11f, 0x120, 0x136, 0x291, 0x2a1, 0x2a2, 0x2b0, 0x2d2

Function 4:
Public fallback function
Entry block: 0x5a
Exit block: 0x5a
Body: 0x5a

