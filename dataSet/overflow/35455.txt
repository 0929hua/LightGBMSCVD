Block 0x0
[0x0:0x4]
---
Predecessors: []
Successors: [0x5]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x5
[0x5:0x9]
---
Predecessors: [0x0]
Successors: []
---
0x5 JUMPDEST
0x6 PUSH1 0x0
0x8 DUP1
0x9 REVERT
---
0x5: JUMPDEST 
0x6: V2 = 0x0
0x9: REVERT 0x0 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xa
[0xa:0x6e]
---
Predecessors: []
Successors: [0x6f]
---
0xa STOP
0xb LOG1
0xc PUSH6 0x627a7a723058
0x13 SHA3
0x14 SWAP7
0x15 PUSH15 0xc25d59113e56750d81a580ae33f606
0x25 PUSH8 0x891b99e3ea77ef04
0x2e MISSING 0xda
0x2f MISSING 0xa6
0x30 MISSING 0xce
0x31 CODESIZE
0x32 DUP11
0x33 MISSING 0x4a
0x34 STOP
0x35 MISSING 0x29
0x36 PUSH1 0x60
0x38 PUSH1 0x40
0x3a MSTORE
0x3b PUSH1 0x0
0x3d CALLDATALOAD
0x3e PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x5c SWAP1
0x5d DIV
0x5e PUSH4 0xffffffff
0x63 AND
0x64 DUP1
0x65 PUSH4 0x2f54bf6e
0x6a EQ
0x6b PUSH2 0x49
0x6e JUMPI
---
0xa: STOP 
0xb: LOG S0 S1 S2
0xc: V3 = 0x627a7a723058
0x13: V4 = SHA3 0x627a7a723058 S3
0x15: V5 = 0xc25d59113e56750d81a580ae33f606
0x25: V6 = 0x891b99e3ea77ef04
0x2e: MISSING 0xda
0x2f: MISSING 0xa6
0x30: MISSING 0xce
0x31: V7 = CODESIZE
0x33: MISSING 0x4a
0x34: STOP 
0x35: MISSING 0x29
0x36: V8 = 0x60
0x38: V9 = 0x40
0x3a: M[0x40] = 0x60
0x3b: V10 = 0x0
0x3d: V11 = CALLDATALOAD 0x0
0x3e: V12 = 0x100000000000000000000000000000000000000000000000000000000
0x5d: V13 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x5e: V14 = 0xffffffff
0x63: V15 = AND 0xffffffff V13
0x65: V16 = 0x2f54bf6e
0x6a: V17 = EQ 0x2f54bf6e V15
0x6b: V18 = 0x49
0x6e: THROWI V17
---
Entry stack: []
Stack pops: 0
Stack additions: [0x891b99e3ea77ef04, 0xc25d59113e56750d81a580ae33f606, S10, S4, S5, S6, S7, S8, S9, V4, S9, V7, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, V15]
Exit stack: []

================================

Block 0x6f
[0x6f:0x79]
---
Predecessors: [0xa]
Successors: [0x7a]
---
0x6f DUP1
0x70 PUSH4 0x893d20e8
0x75 EQ
0x76 PUSH2 0x9a
0x79 JUMPI
---
0x70: V19 = 0x893d20e8
0x75: V20 = EQ 0x893d20e8 V15
0x76: V21 = 0x9a
0x79: THROWI V20
---
Entry stack: [V15]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V15]

================================

Block 0x7a
[0x7a:0x85]
---
Predecessors: [0x6f]
Successors: [0x86]
---
0x7a JUMPDEST
0x7b PUSH1 0x0
0x7d DUP1
0x7e REVERT
0x7f JUMPDEST
0x80 CALLVALUE
0x81 ISZERO
0x82 PUSH2 0x54
0x85 JUMPI
---
0x7a: JUMPDEST 
0x7b: V22 = 0x0
0x7e: REVERT 0x0 0x0
0x7f: JUMPDEST 
0x80: V23 = CALLVALUE
0x81: V24 = ISZERO V23
0x82: V25 = 0x54
0x85: THROWI V24
---
Entry stack: [V15]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x86
[0x86:0xd6]
---
Predecessors: [0x7a]
Successors: [0xd7]
---
0x86 PUSH1 0x0
0x88 DUP1
0x89 REVERT
0x8a JUMPDEST
0x8b PUSH2 0x80
0x8e PUSH1 0x4
0x90 DUP1
0x91 DUP1
0x92 CALLDATALOAD
0x93 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa8 AND
0xa9 SWAP1
0xaa PUSH1 0x20
0xac ADD
0xad SWAP1
0xae SWAP2
0xaf SWAP1
0xb0 POP
0xb1 POP
0xb2 PUSH2 0xef
0xb5 JUMP
0xb6 JUMPDEST
0xb7 PUSH1 0x40
0xb9 MLOAD
0xba DUP1
0xbb DUP3
0xbc ISZERO
0xbd ISZERO
0xbe ISZERO
0xbf ISZERO
0xc0 DUP2
0xc1 MSTORE
0xc2 PUSH1 0x20
0xc4 ADD
0xc5 SWAP2
0xc6 POP
0xc7 POP
0xc8 PUSH1 0x40
0xca MLOAD
0xcb DUP1
0xcc SWAP2
0xcd SUB
0xce SWAP1
0xcf RETURN
0xd0 JUMPDEST
0xd1 CALLVALUE
0xd2 ISZERO
0xd3 PUSH2 0xa5
0xd6 JUMPI
---
0x86: V26 = 0x0
0x89: REVERT 0x0 0x0
0x8a: JUMPDEST 
0x8b: V27 = 0x80
0x8e: V28 = 0x4
0x92: V29 = CALLDATALOAD 0x4
0x93: V30 = 0xffffffffffffffffffffffffffffffffffffffff
0xa8: V31 = AND 0xffffffffffffffffffffffffffffffffffffffff V29
0xaa: V32 = 0x20
0xac: V33 = ADD 0x20 0x4
0xb2: V34 = 0xef
0xb5: THROW 
0xb6: JUMPDEST 
0xb7: V35 = 0x40
0xb9: V36 = M[0x40]
0xbc: V37 = ISZERO S0
0xbd: V38 = ISZERO V37
0xbe: V39 = ISZERO V38
0xbf: V40 = ISZERO V39
0xc1: M[V36] = V40
0xc2: V41 = 0x20
0xc4: V42 = ADD 0x20 V36
0xc8: V43 = 0x40
0xca: V44 = M[0x40]
0xcd: V45 = SUB V42 V44
0xcf: RETURN V44 V45
0xd0: JUMPDEST 
0xd1: V46 = CALLVALUE
0xd2: V47 = ISZERO V46
0xd3: V48 = 0xa5
0xd6: THROWI V47
---
Entry stack: []
Stack pops: 0
Stack additions: [V31, 0x80]
Exit stack: []

================================

Block 0xd7
[0xd7:0x179]
---
Predecessors: [0x86]
Successors: [0x17a]
---
0xd7 PUSH1 0x0
0xd9 DUP1
0xda REVERT
0xdb JUMPDEST
0xdc PUSH2 0xad
0xdf PUSH2 0x149
0xe2 JUMP
0xe3 JUMPDEST
0xe4 PUSH1 0x40
0xe6 MLOAD
0xe7 DUP1
0xe8 DUP3
0xe9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfe AND
0xff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x114 AND
0x115 DUP2
0x116 MSTORE
0x117 PUSH1 0x20
0x119 ADD
0x11a SWAP2
0x11b POP
0x11c POP
0x11d PUSH1 0x40
0x11f MLOAD
0x120 DUP1
0x121 SWAP2
0x122 SUB
0x123 SWAP1
0x124 RETURN
0x125 JUMPDEST
0x126 PUSH1 0x0
0x128 DUP1
0x129 PUSH1 0x0
0x12b SWAP1
0x12c SLOAD
0x12d SWAP1
0x12e PUSH2 0x100
0x131 EXP
0x132 SWAP1
0x133 DIV
0x134 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x149 AND
0x14a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15f AND
0x160 DUP3
0x161 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x176 AND
0x177 EQ
0x178 SWAP1
0x179 POP
---
0xd7: V49 = 0x0
0xda: REVERT 0x0 0x0
0xdb: JUMPDEST 
0xdc: V50 = 0xad
0xdf: V51 = 0x149
0xe2: THROW 
0xe3: JUMPDEST 
0xe4: V52 = 0x40
0xe6: V53 = M[0x40]
0xe9: V54 = 0xffffffffffffffffffffffffffffffffffffffff
0xfe: V55 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xff: V56 = 0xffffffffffffffffffffffffffffffffffffffff
0x114: V57 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0x116: M[V53] = V57
0x117: V58 = 0x20
0x119: V59 = ADD 0x20 V53
0x11d: V60 = 0x40
0x11f: V61 = M[0x40]
0x122: V62 = SUB V59 V61
0x124: RETURN V61 V62
0x125: JUMPDEST 
0x126: V63 = 0x0
0x129: V64 = 0x0
0x12c: V65 = S[0x0]
0x12e: V66 = 0x100
0x131: V67 = EXP 0x100 0x0
0x133: V68 = DIV V65 0x1
0x134: V69 = 0xffffffffffffffffffffffffffffffffffffffff
0x149: V70 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0x14a: V71 = 0xffffffffffffffffffffffffffffffffffffffff
0x15f: V72 = AND 0xffffffffffffffffffffffffffffffffffffffff V70
0x161: V73 = 0xffffffffffffffffffffffffffffffffffffffff
0x176: V74 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x177: V75 = EQ V74 V72
---
Entry stack: []
Stack pops: 0
Stack additions: [0xad, V75, S0]
Exit stack: []

================================

Block 0x17a
[0x17a:0x1a5]
---
Predecessors: [0xd7]
Successors: [0x1a6]
---
0x17a JUMPDEST
0x17b SWAP2
0x17c SWAP1
0x17d POP
0x17e JUMP
0x17f JUMPDEST
0x180 PUSH1 0x0
0x182 DUP1
0x183 PUSH1 0x0
0x185 SWAP1
0x186 SLOAD
0x187 SWAP1
0x188 PUSH2 0x100
0x18b EXP
0x18c SWAP1
0x18d DIV
0x18e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a3 AND
0x1a4 SWAP1
0x1a5 POP
---
0x17a: JUMPDEST 
0x17e: JUMP S2
0x17f: JUMPDEST 
0x180: V76 = 0x0
0x183: V77 = 0x0
0x186: V78 = S[0x0]
0x188: V79 = 0x100
0x18b: V80 = EXP 0x100 0x0
0x18d: V81 = DIV V78 0x1
0x18e: V82 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a3: V83 = AND 0xffffffffffffffffffffffffffffffffffffffff V81
---
Entry stack: [S1, V75]
Stack pops: 5
Stack additions: [V83]
Exit stack: []

================================

Block 0x1a6
[0x1a6:0x1b4]
---
Predecessors: [0x17a]
Successors: [0x1b5]
Has unresolved jump.
---
0x1a6 JUMPDEST
0x1a7 SWAP1
0x1a8 JUMP
0x1a9 STOP
0x1aa LOG1
0x1ab PUSH6 0x627a7a723058
0x1b2 SHA3
0x1b3 GAS
0x1b4 JUMPI
---
0x1a6: JUMPDEST 
0x1a8: JUMP S1
0x1a9: STOP 
0x1aa: LOG S0 S1 S2
0x1ab: V84 = 0x627a7a723058
0x1b2: V85 = SHA3 0x627a7a723058 S3
0x1b3: V86 = GAS
0x1b4: JUMPI V86 V85
---
Entry stack: [V83]
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0x1b5
[0x1b5:0x20d]
---
Predecessors: [0x1a6]
Successors: [0x20e]
---
0x1b5 PUSH4 0x67ef23bd
0x1ba MISSING 0xe8
0x1bb DUP7
0x1bc MULMOD
0x1bd GASPRICE
0x1be MISSING 0xc9
0x1bf MISSING 0xe3
0x1c0 MISSING 0x25
0x1c1 MISSING 0xe7
0x1c2 MSTORE8
0x1c3 DIFFICULTY
0x1c4 MISSING 0xd7
0x1c5 MISSING 0xdb
0x1c6 MISSING 0xec
0x1c7 DUP1
0x1c8 INVALID
0x1c9 MISSING 0xdc
0x1ca REVERT
0x1cb CODESIZE
0x1cc MISSING 0xb3
0x1cd DUP2
0x1ce MISSING 0x23
0x1cf PUSH24 0x7309f5002960606040526000357c01000000000000000000
0x1e8 STOP
0x1e9 STOP
0x1ea STOP
0x1eb STOP
0x1ec STOP
0x1ed STOP
0x1ee STOP
0x1ef STOP
0x1f0 STOP
0x1f1 STOP
0x1f2 STOP
0x1f3 STOP
0x1f4 STOP
0x1f5 STOP
0x1f6 STOP
0x1f7 STOP
0x1f8 STOP
0x1f9 STOP
0x1fa STOP
0x1fb SWAP1
0x1fc DIV
0x1fd PUSH4 0xffffffff
0x202 AND
0x203 DUP1
0x204 PUSH4 0x2f54bf6e
0x209 EQ
0x20a PUSH2 0x54
0x20d JUMPI
---
0x1b5: V87 = 0x67ef23bd
0x1ba: MISSING 0xe8
0x1bc: V88 = MULMOD S6 S0 S1
0x1bd: V89 = GASPRICE
0x1be: MISSING 0xc9
0x1bf: MISSING 0xe3
0x1c0: MISSING 0x25
0x1c1: MISSING 0xe7
0x1c2: M8[S0] = S1
0x1c3: V90 = DIFFICULTY
0x1c4: MISSING 0xd7
0x1c5: MISSING 0xdb
0x1c6: MISSING 0xec
0x1c8: INVALID 
0x1c9: MISSING 0xdc
0x1ca: REVERT S0 S1
0x1cb: V91 = CODESIZE
0x1cc: MISSING 0xb3
0x1ce: MISSING 0x23
0x1cf: V92 = 0x7309f5002960606040526000357c01000000000000000000
0x1e8: STOP 
0x1e9: STOP 
0x1ea: STOP 
0x1eb: STOP 
0x1ec: STOP 
0x1ed: STOP 
0x1ee: STOP 
0x1ef: STOP 
0x1f0: STOP 
0x1f1: STOP 
0x1f2: STOP 
0x1f3: STOP 
0x1f4: STOP 
0x1f5: STOP 
0x1f6: STOP 
0x1f7: STOP 
0x1f8: STOP 
0x1f9: STOP 
0x1fa: STOP 
0x1fc: V93 = DIV S1 S0
0x1fd: V94 = 0xffffffff
0x202: V95 = AND 0xffffffff V93
0x204: V96 = 0x2f54bf6e
0x209: V97 = EQ 0x2f54bf6e V95
0x20a: V98 = 0x54
0x20d: THROWI V97
---
Entry stack: []
Stack pops: 0
Stack additions: [0x67ef23bd, V89, V88, S2, S3, S4, S5, S6, V90, S0, S0, V91, S1, S0, S1, 0x7309f5002960606040526000357c01000000000000000000, V95]
Exit stack: []

================================

Block 0x20e
[0x20e:0x218]
---
Predecessors: [0x1b5]
Successors: [0x219]
---
0x20e DUP1
0x20f PUSH4 0x893d20e8
0x214 EQ
0x215 PUSH2 0xa5
0x218 JUMPI
---
0x20f: V99 = 0x893d20e8
0x214: V100 = EQ 0x893d20e8 V95
0x215: V101 = 0xa5
0x218: THROWI V100
---
Entry stack: [V95]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V95]

================================

Block 0x219
[0x219:0x223]
---
Predecessors: [0x20e]
Successors: [0x224]
---
0x219 DUP1
0x21a PUSH4 0xf2fde38b
0x21f EQ
0x220 PUSH2 0xfa
0x223 JUMPI
---
0x21a: V102 = 0xf2fde38b
0x21f: V103 = EQ 0xf2fde38b V95
0x220: V104 = 0xfa
0x223: THROWI V103
---
Entry stack: [V95]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V95]

================================

Block 0x224
[0x224:0x22f]
---
Predecessors: [0x219]
Successors: [0x230]
---
0x224 JUMPDEST
0x225 PUSH1 0x0
0x227 DUP1
0x228 REVERT
0x229 JUMPDEST
0x22a CALLVALUE
0x22b ISZERO
0x22c PUSH2 0x5f
0x22f JUMPI
---
0x224: JUMPDEST 
0x225: V105 = 0x0
0x228: REVERT 0x0 0x0
0x229: JUMPDEST 
0x22a: V106 = CALLVALUE
0x22b: V107 = ISZERO V106
0x22c: V108 = 0x5f
0x22f: THROWI V107
---
Entry stack: [V95]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x230
[0x230:0x280]
---
Predecessors: [0x224]
Successors: [0x281]
---
0x230 PUSH1 0x0
0x232 DUP1
0x233 REVERT
0x234 JUMPDEST
0x235 PUSH2 0x8b
0x238 PUSH1 0x4
0x23a DUP1
0x23b DUP1
0x23c CALLDATALOAD
0x23d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x252 AND
0x253 SWAP1
0x254 PUSH1 0x20
0x256 ADD
0x257 SWAP1
0x258 SWAP2
0x259 SWAP1
0x25a POP
0x25b POP
0x25c PUSH2 0x133
0x25f JUMP
0x260 JUMPDEST
0x261 PUSH1 0x40
0x263 MLOAD
0x264 DUP1
0x265 DUP3
0x266 ISZERO
0x267 ISZERO
0x268 ISZERO
0x269 ISZERO
0x26a DUP2
0x26b MSTORE
0x26c PUSH1 0x20
0x26e ADD
0x26f SWAP2
0x270 POP
0x271 POP
0x272 PUSH1 0x40
0x274 MLOAD
0x275 DUP1
0x276 SWAP2
0x277 SUB
0x278 SWAP1
0x279 RETURN
0x27a JUMPDEST
0x27b CALLVALUE
0x27c ISZERO
0x27d PUSH2 0xb0
0x280 JUMPI
---
0x230: V109 = 0x0
0x233: REVERT 0x0 0x0
0x234: JUMPDEST 
0x235: V110 = 0x8b
0x238: V111 = 0x4
0x23c: V112 = CALLDATALOAD 0x4
0x23d: V113 = 0xffffffffffffffffffffffffffffffffffffffff
0x252: V114 = AND 0xffffffffffffffffffffffffffffffffffffffff V112
0x254: V115 = 0x20
0x256: V116 = ADD 0x20 0x4
0x25c: V117 = 0x133
0x25f: THROW 
0x260: JUMPDEST 
0x261: V118 = 0x40
0x263: V119 = M[0x40]
0x266: V120 = ISZERO S0
0x267: V121 = ISZERO V120
0x268: V122 = ISZERO V121
0x269: V123 = ISZERO V122
0x26b: M[V119] = V123
0x26c: V124 = 0x20
0x26e: V125 = ADD 0x20 V119
0x272: V126 = 0x40
0x274: V127 = M[0x40]
0x277: V128 = SUB V125 V127
0x279: RETURN V127 V128
0x27a: JUMPDEST 
0x27b: V129 = CALLVALUE
0x27c: V130 = ISZERO V129
0x27d: V131 = 0xb0
0x280: THROWI V130
---
Entry stack: []
Stack pops: 0
Stack additions: [V114, 0x8b]
Exit stack: []

================================

Block 0x281
[0x281:0x2d5]
---
Predecessors: [0x230]
Successors: [0x2d6]
---
0x281 PUSH1 0x0
0x283 DUP1
0x284 REVERT
0x285 JUMPDEST
0x286 PUSH2 0xb8
0x289 PUSH2 0x18d
0x28c JUMP
0x28d JUMPDEST
0x28e PUSH1 0x40
0x290 MLOAD
0x291 DUP1
0x292 DUP3
0x293 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a8 AND
0x2a9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2be AND
0x2bf DUP2
0x2c0 MSTORE
0x2c1 PUSH1 0x20
0x2c3 ADD
0x2c4 SWAP2
0x2c5 POP
0x2c6 POP
0x2c7 PUSH1 0x40
0x2c9 MLOAD
0x2ca DUP1
0x2cb SWAP2
0x2cc SUB
0x2cd SWAP1
0x2ce RETURN
0x2cf JUMPDEST
0x2d0 CALLVALUE
0x2d1 ISZERO
0x2d2 PUSH2 0x105
0x2d5 JUMPI
---
0x281: V132 = 0x0
0x284: REVERT 0x0 0x0
0x285: JUMPDEST 
0x286: V133 = 0xb8
0x289: V134 = 0x18d
0x28c: THROW 
0x28d: JUMPDEST 
0x28e: V135 = 0x40
0x290: V136 = M[0x40]
0x293: V137 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a8: V138 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x2a9: V139 = 0xffffffffffffffffffffffffffffffffffffffff
0x2be: V140 = AND 0xffffffffffffffffffffffffffffffffffffffff V138
0x2c0: M[V136] = V140
0x2c1: V141 = 0x20
0x2c3: V142 = ADD 0x20 V136
0x2c7: V143 = 0x40
0x2c9: V144 = M[0x40]
0x2cc: V145 = SUB V142 V144
0x2ce: RETURN V144 V145
0x2cf: JUMPDEST 
0x2d0: V146 = CALLVALUE
0x2d1: V147 = ISZERO V146
0x2d2: V148 = 0x105
0x2d5: THROWI V147
---
Entry stack: []
Stack pops: 0
Stack additions: [0xb8]
Exit stack: []

================================

Block 0x2d6
[0x2d6:0x35c]
---
Predecessors: [0x281]
Successors: [0x35d]
---
0x2d6 PUSH1 0x0
0x2d8 DUP1
0x2d9 REVERT
0x2da JUMPDEST
0x2db PUSH2 0x131
0x2de PUSH1 0x4
0x2e0 DUP1
0x2e1 DUP1
0x2e2 CALLDATALOAD
0x2e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f8 AND
0x2f9 SWAP1
0x2fa PUSH1 0x20
0x2fc ADD
0x2fd SWAP1
0x2fe SWAP2
0x2ff SWAP1
0x300 POP
0x301 POP
0x302 PUSH2 0x1b7
0x305 JUMP
0x306 JUMPDEST
0x307 STOP
0x308 JUMPDEST
0x309 PUSH1 0x0
0x30b DUP1
0x30c PUSH1 0x0
0x30e SWAP1
0x30f SLOAD
0x310 SWAP1
0x311 PUSH2 0x100
0x314 EXP
0x315 SWAP1
0x316 DIV
0x317 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x32c AND
0x32d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x342 AND
0x343 DUP3
0x344 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x359 AND
0x35a EQ
0x35b SWAP1
0x35c POP
---
0x2d6: V149 = 0x0
0x2d9: REVERT 0x0 0x0
0x2da: JUMPDEST 
0x2db: V150 = 0x131
0x2de: V151 = 0x4
0x2e2: V152 = CALLDATALOAD 0x4
0x2e3: V153 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f8: V154 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0x2fa: V155 = 0x20
0x2fc: V156 = ADD 0x20 0x4
0x302: V157 = 0x1b7
0x305: THROW 
0x306: JUMPDEST 
0x307: STOP 
0x308: JUMPDEST 
0x309: V158 = 0x0
0x30c: V159 = 0x0
0x30f: V160 = S[0x0]
0x311: V161 = 0x100
0x314: V162 = EXP 0x100 0x0
0x316: V163 = DIV V160 0x1
0x317: V164 = 0xffffffffffffffffffffffffffffffffffffffff
0x32c: V165 = AND 0xffffffffffffffffffffffffffffffffffffffff V163
0x32d: V166 = 0xffffffffffffffffffffffffffffffffffffffff
0x342: V167 = AND 0xffffffffffffffffffffffffffffffffffffffff V165
0x344: V168 = 0xffffffffffffffffffffffffffffffffffffffff
0x359: V169 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x35a: V170 = EQ V169 V167
---
Entry stack: []
Stack pops: 0
Stack additions: [V154, 0x131, V170, S0]
Exit stack: []

================================

Block 0x35d
[0x35d:0x388]
---
Predecessors: [0x2d6]
Successors: [0x389]
---
0x35d JUMPDEST
0x35e SWAP2
0x35f SWAP1
0x360 POP
0x361 JUMP
0x362 JUMPDEST
0x363 PUSH1 0x0
0x365 DUP1
0x366 PUSH1 0x0
0x368 SWAP1
0x369 SLOAD
0x36a SWAP1
0x36b PUSH2 0x100
0x36e EXP
0x36f SWAP1
0x370 DIV
0x371 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x386 AND
0x387 SWAP1
0x388 POP
---
0x35d: JUMPDEST 
0x361: JUMP S2
0x362: JUMPDEST 
0x363: V171 = 0x0
0x366: V172 = 0x0
0x369: V173 = S[0x0]
0x36b: V174 = 0x100
0x36e: V175 = EXP 0x100 0x0
0x370: V176 = DIV V173 0x1
0x371: V177 = 0xffffffffffffffffffffffffffffffffffffffff
0x386: V178 = AND 0xffffffffffffffffffffffffffffffffffffffff V176
---
Entry stack: [S1, V170]
Stack pops: 5
Stack additions: [V178]
Exit stack: []

================================

Block 0x389
[0x389:0x3e2]
---
Predecessors: [0x35d]
Successors: [0x3e3]
---
0x389 JUMPDEST
0x38a SWAP1
0x38b JUMP
0x38c JUMPDEST
0x38d PUSH1 0x0
0x38f DUP1
0x390 SWAP1
0x391 SLOAD
0x392 SWAP1
0x393 PUSH2 0x100
0x396 EXP
0x397 SWAP1
0x398 DIV
0x399 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ae AND
0x3af PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c4 AND
0x3c5 CALLER
0x3c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3db AND
0x3dc EQ
0x3dd ISZERO
0x3de ISZERO
0x3df PUSH2 0x212
0x3e2 JUMPI
---
0x389: JUMPDEST 
0x38b: JUMP S1
0x38c: JUMPDEST 
0x38d: V179 = 0x0
0x391: V180 = S[0x0]
0x393: V181 = 0x100
0x396: V182 = EXP 0x100 0x0
0x398: V183 = DIV V180 0x1
0x399: V184 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ae: V185 = AND 0xffffffffffffffffffffffffffffffffffffffff V183
0x3af: V186 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c4: V187 = AND 0xffffffffffffffffffffffffffffffffffffffff V185
0x3c5: V188 = CALLER
0x3c6: V189 = 0xffffffffffffffffffffffffffffffffffffffff
0x3db: V190 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x3dc: V191 = EQ V190 V187
0x3dd: V192 = ISZERO V191
0x3de: V193 = ISZERO V192
0x3df: V194 = 0x212
0x3e2: THROWI V193
---
Entry stack: [V178]
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0x3e3
[0x3e3:0x427]
---
Predecessors: [0x389]
Successors: [0x428]
---
0x3e3 PUSH1 0x0
0x3e5 DUP1
0x3e6 REVERT
0x3e7 JUMPDEST
0x3e8 DUP1
0x3e9 PUSH1 0x0
0x3eb DUP1
0x3ec PUSH2 0x100
0x3ef EXP
0x3f0 DUP2
0x3f1 SLOAD
0x3f2 DUP2
0x3f3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x408 MUL
0x409 NOT
0x40a AND
0x40b SWAP1
0x40c DUP4
0x40d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x422 AND
0x423 MUL
0x424 OR
0x425 SWAP1
0x426 SSTORE
0x427 POP
---
0x3e3: V195 = 0x0
0x3e6: REVERT 0x0 0x0
0x3e7: JUMPDEST 
0x3e9: V196 = 0x0
0x3ec: V197 = 0x100
0x3ef: V198 = EXP 0x100 0x0
0x3f1: V199 = S[0x0]
0x3f3: V200 = 0xffffffffffffffffffffffffffffffffffffffff
0x408: V201 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x409: V202 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x40a: V203 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V199
0x40d: V204 = 0xffffffffffffffffffffffffffffffffffffffff
0x422: V205 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x423: V206 = MUL V205 0x1
0x424: V207 = OR V206 V203
0x426: S[0x0] = V207
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x428
[0x428:0x428]
---
Predecessors: [0x3e3]
Successors: [0x429]
---
0x428 JUMPDEST
---
0x428: JUMPDEST 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0x429
[0x429:0x496]
---
Predecessors: [0x428]
Successors: [0x497]
---
0x429 JUMPDEST
0x42a POP
0x42b JUMP
0x42c STOP
0x42d LOG1
0x42e PUSH6 0x627a7a723058
0x435 SHA3
0x436 MISSING 0xc6
0x437 MISSING 0xce
0x438 MISSING 0x4d
0x439 MISSING 0x4c
0x43a OR
0x43b ADDMOD
0x43c PUSH7 0x2bfca6b097373
0x444 DUP1
0x445 SWAP13
0x446 MISSING 0xe
0x447 MISSING 0xb7
0x448 BYTE
0x449 MISSING 0xbd
0x44a DUP2
0x44b SWAP6
0x44c SELFDESTRUCT
0x44d MISSING 0xc2
0x44e GT
0x44f SWAP9
0x450 MISSING 0xa5
0x451 MISSING 0xc3
0x452 MISSING 0xdd
0x453 MISSING 0xe9
0x454 PUSH16 0x6d002960606040523615610081576000
0x465 CALLDATALOAD
0x466 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x484 SWAP1
0x485 DIV
0x486 PUSH4 0xffffffff
0x48b AND
0x48c DUP1
0x48d PUSH4 0x8e0d29d
0x492 EQ
0x493 PUSH2 0x86
0x496 JUMPI
---
0x429: JUMPDEST 
0x42b: JUMP S1
0x42c: STOP 
0x42d: LOG S0 S1 S2
0x42e: V208 = 0x627a7a723058
0x435: V209 = SHA3 0x627a7a723058 S3
0x436: MISSING 0xc6
0x437: MISSING 0xce
0x438: MISSING 0x4d
0x439: MISSING 0x4c
0x43a: V210 = OR S0 S1
0x43b: V211 = ADDMOD V210 S2 S3
0x43c: V212 = 0x2bfca6b097373
0x446: MISSING 0xe
0x447: MISSING 0xb7
0x448: V213 = BYTE S0 S1
0x449: MISSING 0xbd
0x44c: SELFDESTRUCT S5
0x44d: MISSING 0xc2
0x44e: V214 = GT S0 S1
0x450: MISSING 0xa5
0x451: MISSING 0xc3
0x452: MISSING 0xdd
0x453: MISSING 0xe9
0x454: V215 = 0x6d002960606040523615610081576000
0x465: V216 = CALLDATALOAD 0x6d002960606040523615610081576000
0x466: V217 = 0x100000000000000000000000000000000000000000000000000000000
0x485: V218 = DIV V216 0x100000000000000000000000000000000000000000000000000000000
0x486: V219 = 0xffffffff
0x48b: V220 = AND 0xffffffff V218
0x48d: V221 = 0x8e0d29d
0x492: V222 = EQ 0x8e0d29d V220
0x493: V223 = 0x86
0x496: THROWI V222
---
Entry stack: [S0]
Stack pops: 57520
Stack additions: [V220]
Exit stack: []

================================

Block 0x497
[0x497:0x4a1]
---
Predecessors: [0x429]
Successors: [0x4a2]
---
0x497 DUP1
0x498 PUSH4 0xa3b0a4f
0x49d EQ
0x49e PUSH2 0xd7
0x4a1 JUMPI
---
0x498: V224 = 0xa3b0a4f
0x49d: V225 = EQ 0xa3b0a4f V220
0x49e: V226 = 0xd7
0x4a1: THROWI V225
---
Entry stack: [V220]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V220]

================================

Block 0x4a2
[0x4a2:0x4ac]
---
Predecessors: [0x497]
Successors: [0x4ad]
---
0x4a2 DUP1
0x4a3 PUSH4 0x29092d0e
0x4a8 EQ
0x4a9 PUSH2 0x110
0x4ac JUMPI
---
0x4a3: V227 = 0x29092d0e
0x4a8: V228 = EQ 0x29092d0e V220
0x4a9: V229 = 0x110
0x4ac: THROWI V228
---
Entry stack: [V220]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V220]

================================

Block 0x4ad
[0x4ad:0x4b7]
---
Predecessors: [0x4a2]
Successors: [0x4b8]
---
0x4ad DUP1
0x4ae PUSH4 0x2f54bf6e
0x4b3 EQ
0x4b4 PUSH2 0x149
0x4b7 JUMPI
---
0x4ae: V230 = 0x2f54bf6e
0x4b3: V231 = EQ 0x2f54bf6e V220
0x4b4: V232 = 0x149
0x4b7: THROWI V231
---
Entry stack: [V220]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V220]

================================

Block 0x4b8
[0x4b8:0x4c2]
---
Predecessors: [0x4ad]
Successors: [0x4c3]
---
0x4b8 DUP1
0x4b9 PUSH4 0x893d20e8
0x4be EQ
0x4bf PUSH2 0x19a
0x4c2 JUMPI
---
0x4b9: V233 = 0x893d20e8
0x4be: V234 = EQ 0x893d20e8 V220
0x4bf: V235 = 0x19a
0x4c2: THROWI V234
---
Entry stack: [V220]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V220]

================================

Block 0x4c3
[0x4c3:0x4cd]
---
Predecessors: [0x4b8]
Successors: [0x4ce]
---
0x4c3 DUP1
0x4c4 PUSH4 0xa25047a2
0x4c9 EQ
0x4ca PUSH2 0x1ef
0x4cd JUMPI
---
0x4c4: V236 = 0xa25047a2
0x4c9: V237 = EQ 0xa25047a2 V220
0x4ca: V238 = 0x1ef
0x4cd: THROWI V237
---
Entry stack: [V220]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V220]

================================

Block 0x4ce
[0x4ce:0x4d8]
---
Predecessors: [0x4c3]
Successors: [0x4d9]
---
0x4ce DUP1
0x4cf PUSH4 0xf2fde38b
0x4d4 EQ
0x4d5 PUSH2 0x240
0x4d8 JUMPI
---
0x4cf: V239 = 0xf2fde38b
0x4d4: V240 = EQ 0xf2fde38b V220
0x4d5: V241 = 0x240
0x4d8: THROWI V240
---
Entry stack: [V220]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V220]

================================

Block 0x4d9
[0x4d9:0x4e4]
---
Predecessors: [0x4ce]
Successors: [0x4e5]
---
0x4d9 JUMPDEST
0x4da PUSH1 0x0
0x4dc DUP1
0x4dd REVERT
0x4de JUMPDEST
0x4df CALLVALUE
0x4e0 ISZERO
0x4e1 PUSH2 0x91
0x4e4 JUMPI
---
0x4d9: JUMPDEST 
0x4da: V242 = 0x0
0x4dd: REVERT 0x0 0x0
0x4de: JUMPDEST 
0x4df: V243 = CALLVALUE
0x4e0: V244 = ISZERO V243
0x4e1: V245 = 0x91
0x4e4: THROWI V244
---
Entry stack: [V220]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x4e5
[0x4e5:0x535]
---
Predecessors: [0x4d9]
Successors: [0x536]
---
0x4e5 PUSH1 0x0
0x4e7 DUP1
0x4e8 REVERT
0x4e9 JUMPDEST
0x4ea PUSH2 0xbd
0x4ed PUSH1 0x4
0x4ef DUP1
0x4f0 DUP1
0x4f1 CALLDATALOAD
0x4f2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x507 AND
0x508 SWAP1
0x509 PUSH1 0x20
0x50b ADD
0x50c SWAP1
0x50d SWAP2
0x50e SWAP1
0x50f POP
0x510 POP
0x511 PUSH2 0x279
0x514 JUMP
0x515 JUMPDEST
0x516 PUSH1 0x40
0x518 MLOAD
0x519 DUP1
0x51a DUP3
0x51b ISZERO
0x51c ISZERO
0x51d ISZERO
0x51e ISZERO
0x51f DUP2
0x520 MSTORE
0x521 PUSH1 0x20
0x523 ADD
0x524 SWAP2
0x525 POP
0x526 POP
0x527 PUSH1 0x40
0x529 MLOAD
0x52a DUP1
0x52b SWAP2
0x52c SUB
0x52d SWAP1
0x52e RETURN
0x52f JUMPDEST
0x530 CALLVALUE
0x531 ISZERO
0x532 PUSH2 0xe2
0x535 JUMPI
---
0x4e5: V246 = 0x0
0x4e8: REVERT 0x0 0x0
0x4e9: JUMPDEST 
0x4ea: V247 = 0xbd
0x4ed: V248 = 0x4
0x4f1: V249 = CALLDATALOAD 0x4
0x4f2: V250 = 0xffffffffffffffffffffffffffffffffffffffff
0x507: V251 = AND 0xffffffffffffffffffffffffffffffffffffffff V249
0x509: V252 = 0x20
0x50b: V253 = ADD 0x20 0x4
0x511: V254 = 0x279
0x514: THROW 
0x515: JUMPDEST 
0x516: V255 = 0x40
0x518: V256 = M[0x40]
0x51b: V257 = ISZERO S0
0x51c: V258 = ISZERO V257
0x51d: V259 = ISZERO V258
0x51e: V260 = ISZERO V259
0x520: M[V256] = V260
0x521: V261 = 0x20
0x523: V262 = ADD 0x20 V256
0x527: V263 = 0x40
0x529: V264 = M[0x40]
0x52c: V265 = SUB V262 V264
0x52e: RETURN V264 V265
0x52f: JUMPDEST 
0x530: V266 = CALLVALUE
0x531: V267 = ISZERO V266
0x532: V268 = 0xe2
0x535: THROWI V267
---
Entry stack: []
Stack pops: 0
Stack additions: [V251, 0xbd]
Exit stack: []

================================

Block 0x536
[0x536:0x56e]
---
Predecessors: [0x4e5]
Successors: [0x56f]
---
0x536 PUSH1 0x0
0x538 DUP1
0x539 REVERT
0x53a JUMPDEST
0x53b PUSH2 0x10e
0x53e PUSH1 0x4
0x540 DUP1
0x541 DUP1
0x542 CALLDATALOAD
0x543 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x558 AND
0x559 SWAP1
0x55a PUSH1 0x20
0x55c ADD
0x55d SWAP1
0x55e SWAP2
0x55f SWAP1
0x560 POP
0x561 POP
0x562 PUSH2 0x2d3
0x565 JUMP
0x566 JUMPDEST
0x567 STOP
0x568 JUMPDEST
0x569 CALLVALUE
0x56a ISZERO
0x56b PUSH2 0x11b
0x56e JUMPI
---
0x536: V269 = 0x0
0x539: REVERT 0x0 0x0
0x53a: JUMPDEST 
0x53b: V270 = 0x10e
0x53e: V271 = 0x4
0x542: V272 = CALLDATALOAD 0x4
0x543: V273 = 0xffffffffffffffffffffffffffffffffffffffff
0x558: V274 = AND 0xffffffffffffffffffffffffffffffffffffffff V272
0x55a: V275 = 0x20
0x55c: V276 = ADD 0x20 0x4
0x562: V277 = 0x2d3
0x565: THROW 
0x566: JUMPDEST 
0x567: STOP 
0x568: JUMPDEST 
0x569: V278 = CALLVALUE
0x56a: V279 = ISZERO V278
0x56b: V280 = 0x11b
0x56e: THROWI V279
---
Entry stack: []
Stack pops: 0
Stack additions: [V274, 0x10e]
Exit stack: []

================================

Block 0x56f
[0x56f:0x5a7]
---
Predecessors: [0x536]
Successors: [0x5a8]
---
0x56f PUSH1 0x0
0x571 DUP1
0x572 REVERT
0x573 JUMPDEST
0x574 PUSH2 0x147
0x577 PUSH1 0x4
0x579 DUP1
0x57a DUP1
0x57b CALLDATALOAD
0x57c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x591 AND
0x592 SWAP1
0x593 PUSH1 0x20
0x595 ADD
0x596 SWAP1
0x597 SWAP2
0x598 SWAP1
0x599 POP
0x59a POP
0x59b PUSH2 0x4c5
0x59e JUMP
0x59f JUMPDEST
0x5a0 STOP
0x5a1 JUMPDEST
0x5a2 CALLVALUE
0x5a3 ISZERO
0x5a4 PUSH2 0x154
0x5a7 JUMPI
---
0x56f: V281 = 0x0
0x572: REVERT 0x0 0x0
0x573: JUMPDEST 
0x574: V282 = 0x147
0x577: V283 = 0x4
0x57b: V284 = CALLDATALOAD 0x4
0x57c: V285 = 0xffffffffffffffffffffffffffffffffffffffff
0x591: V286 = AND 0xffffffffffffffffffffffffffffffffffffffff V284
0x593: V287 = 0x20
0x595: V288 = ADD 0x20 0x4
0x59b: V289 = 0x4c5
0x59e: THROW 
0x59f: JUMPDEST 
0x5a0: STOP 
0x5a1: JUMPDEST 
0x5a2: V290 = CALLVALUE
0x5a3: V291 = ISZERO V290
0x5a4: V292 = 0x154
0x5a7: THROWI V291
---
Entry stack: []
Stack pops: 0
Stack additions: [V286, 0x147]
Exit stack: []

================================

Block 0x5a8
[0x5a8:0x5f8]
---
Predecessors: [0x56f]
Successors: [0x5f9]
---
0x5a8 PUSH1 0x0
0x5aa DUP1
0x5ab REVERT
0x5ac JUMPDEST
0x5ad PUSH2 0x180
0x5b0 PUSH1 0x4
0x5b2 DUP1
0x5b3 DUP1
0x5b4 CALLDATALOAD
0x5b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5ca AND
0x5cb SWAP1
0x5cc PUSH1 0x20
0x5ce ADD
0x5cf SWAP1
0x5d0 SWAP2
0x5d1 SWAP1
0x5d2 POP
0x5d3 POP
0x5d4 PUSH2 0x59e
0x5d7 JUMP
0x5d8 JUMPDEST
0x5d9 PUSH1 0x40
0x5db MLOAD
0x5dc DUP1
0x5dd DUP3
0x5de ISZERO
0x5df ISZERO
0x5e0 ISZERO
0x5e1 ISZERO
0x5e2 DUP2
0x5e3 MSTORE
0x5e4 PUSH1 0x20
0x5e6 ADD
0x5e7 SWAP2
0x5e8 POP
0x5e9 POP
0x5ea PUSH1 0x40
0x5ec MLOAD
0x5ed DUP1
0x5ee SWAP2
0x5ef SUB
0x5f0 SWAP1
0x5f1 RETURN
0x5f2 JUMPDEST
0x5f3 CALLVALUE
0x5f4 ISZERO
0x5f5 PUSH2 0x1a5
0x5f8 JUMPI
---
0x5a8: V293 = 0x0
0x5ab: REVERT 0x0 0x0
0x5ac: JUMPDEST 
0x5ad: V294 = 0x180
0x5b0: V295 = 0x4
0x5b4: V296 = CALLDATALOAD 0x4
0x5b5: V297 = 0xffffffffffffffffffffffffffffffffffffffff
0x5ca: V298 = AND 0xffffffffffffffffffffffffffffffffffffffff V296
0x5cc: V299 = 0x20
0x5ce: V300 = ADD 0x20 0x4
0x5d4: V301 = 0x59e
0x5d7: THROW 
0x5d8: JUMPDEST 
0x5d9: V302 = 0x40
0x5db: V303 = M[0x40]
0x5de: V304 = ISZERO S0
0x5df: V305 = ISZERO V304
0x5e0: V306 = ISZERO V305
0x5e1: V307 = ISZERO V306
0x5e3: M[V303] = V307
0x5e4: V308 = 0x20
0x5e6: V309 = ADD 0x20 V303
0x5ea: V310 = 0x40
0x5ec: V311 = M[0x40]
0x5ef: V312 = SUB V309 V311
0x5f1: RETURN V311 V312
0x5f2: JUMPDEST 
0x5f3: V313 = CALLVALUE
0x5f4: V314 = ISZERO V313
0x5f5: V315 = 0x1a5
0x5f8: THROWI V314
---
Entry stack: []
Stack pops: 0
Stack additions: [V298, 0x180]
Exit stack: []

================================

Block 0x5f9
[0x5f9:0x64d]
---
Predecessors: [0x5a8]
Successors: [0x64e]
---
0x5f9 PUSH1 0x0
0x5fb DUP1
0x5fc REVERT
0x5fd JUMPDEST
0x5fe PUSH2 0x1ad
0x601 PUSH2 0x5f8
0x604 JUMP
0x605 JUMPDEST
0x606 PUSH1 0x40
0x608 MLOAD
0x609 DUP1
0x60a DUP3
0x60b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x620 AND
0x621 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x636 AND
0x637 DUP2
0x638 MSTORE
0x639 PUSH1 0x20
0x63b ADD
0x63c SWAP2
0x63d POP
0x63e POP
0x63f PUSH1 0x40
0x641 MLOAD
0x642 DUP1
0x643 SWAP2
0x644 SUB
0x645 SWAP1
0x646 RETURN
0x647 JUMPDEST
0x648 CALLVALUE
0x649 ISZERO
0x64a PUSH2 0x1fa
0x64d JUMPI
---
0x5f9: V316 = 0x0
0x5fc: REVERT 0x0 0x0
0x5fd: JUMPDEST 
0x5fe: V317 = 0x1ad
0x601: V318 = 0x5f8
0x604: THROW 
0x605: JUMPDEST 
0x606: V319 = 0x40
0x608: V320 = M[0x40]
0x60b: V321 = 0xffffffffffffffffffffffffffffffffffffffff
0x620: V322 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x621: V323 = 0xffffffffffffffffffffffffffffffffffffffff
0x636: V324 = AND 0xffffffffffffffffffffffffffffffffffffffff V322
0x638: M[V320] = V324
0x639: V325 = 0x20
0x63b: V326 = ADD 0x20 V320
0x63f: V327 = 0x40
0x641: V328 = M[0x40]
0x644: V329 = SUB V326 V328
0x646: RETURN V328 V329
0x647: JUMPDEST 
0x648: V330 = CALLVALUE
0x649: V331 = ISZERO V330
0x64a: V332 = 0x1fa
0x64d: THROWI V331
---
Entry stack: []
Stack pops: 0
Stack additions: [0x1ad]
Exit stack: []

================================

Block 0x64e
[0x64e:0x69e]
---
Predecessors: [0x5f9]
Successors: [0x69f]
---
0x64e PUSH1 0x0
0x650 DUP1
0x651 REVERT
0x652 JUMPDEST
0x653 PUSH2 0x226
0x656 PUSH1 0x4
0x658 DUP1
0x659 DUP1
0x65a CALLDATALOAD
0x65b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x670 AND
0x671 SWAP1
0x672 PUSH1 0x20
0x674 ADD
0x675 SWAP1
0x676 SWAP2
0x677 SWAP1
0x678 POP
0x679 POP
0x67a PUSH2 0x622
0x67d JUMP
0x67e JUMPDEST
0x67f PUSH1 0x40
0x681 MLOAD
0x682 DUP1
0x683 DUP3
0x684 ISZERO
0x685 ISZERO
0x686 ISZERO
0x687 ISZERO
0x688 DUP2
0x689 MSTORE
0x68a PUSH1 0x20
0x68c ADD
0x68d SWAP2
0x68e POP
0x68f POP
0x690 PUSH1 0x40
0x692 MLOAD
0x693 DUP1
0x694 SWAP2
0x695 SUB
0x696 SWAP1
0x697 RETURN
0x698 JUMPDEST
0x699 CALLVALUE
0x69a ISZERO
0x69b PUSH2 0x24b
0x69e JUMPI
---
0x64e: V333 = 0x0
0x651: REVERT 0x0 0x0
0x652: JUMPDEST 
0x653: V334 = 0x226
0x656: V335 = 0x4
0x65a: V336 = CALLDATALOAD 0x4
0x65b: V337 = 0xffffffffffffffffffffffffffffffffffffffff
0x670: V338 = AND 0xffffffffffffffffffffffffffffffffffffffff V336
0x672: V339 = 0x20
0x674: V340 = ADD 0x20 0x4
0x67a: V341 = 0x622
0x67d: THROW 
0x67e: JUMPDEST 
0x67f: V342 = 0x40
0x681: V343 = M[0x40]
0x684: V344 = ISZERO S0
0x685: V345 = ISZERO V344
0x686: V346 = ISZERO V345
0x687: V347 = ISZERO V346
0x689: M[V343] = V347
0x68a: V348 = 0x20
0x68c: V349 = ADD 0x20 V343
0x690: V350 = 0x40
0x692: V351 = M[0x40]
0x695: V352 = SUB V349 V351
0x697: RETURN V351 V352
0x698: JUMPDEST 
0x699: V353 = CALLVALUE
0x69a: V354 = ISZERO V353
0x69b: V355 = 0x24b
0x69e: THROWI V354
---
Entry stack: []
Stack pops: 0
Stack additions: [V338, 0x226]
Exit stack: []

================================

Block 0x69f
[0x69f:0x725]
---
Predecessors: [0x64e]
Successors: [0x726]
---
0x69f PUSH1 0x0
0x6a1 DUP1
0x6a2 REVERT
0x6a3 JUMPDEST
0x6a4 PUSH2 0x277
0x6a7 PUSH1 0x4
0x6a9 DUP1
0x6aa DUP1
0x6ab CALLDATALOAD
0x6ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6c1 AND
0x6c2 SWAP1
0x6c3 PUSH1 0x20
0x6c5 ADD
0x6c6 SWAP1
0x6c7 SWAP2
0x6c8 SWAP1
0x6c9 POP
0x6ca POP
0x6cb PUSH2 0x6e8
0x6ce JUMP
0x6cf JUMPDEST
0x6d0 STOP
0x6d1 JUMPDEST
0x6d2 PUSH1 0x0
0x6d4 PUSH1 0x1
0x6d6 PUSH1 0x0
0x6d8 DUP4
0x6d9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6ee AND
0x6ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x704 AND
0x705 DUP2
0x706 MSTORE
0x707 PUSH1 0x20
0x709 ADD
0x70a SWAP1
0x70b DUP2
0x70c MSTORE
0x70d PUSH1 0x20
0x70f ADD
0x710 PUSH1 0x0
0x712 SHA3
0x713 PUSH1 0x1
0x715 ADD
0x716 PUSH1 0x0
0x718 SWAP1
0x719 SLOAD
0x71a SWAP1
0x71b PUSH2 0x100
0x71e EXP
0x71f SWAP1
0x720 DIV
0x721 PUSH1 0xff
0x723 AND
0x724 SWAP1
0x725 POP
---
0x69f: V356 = 0x0
0x6a2: REVERT 0x0 0x0
0x6a3: JUMPDEST 
0x6a4: V357 = 0x277
0x6a7: V358 = 0x4
0x6ab: V359 = CALLDATALOAD 0x4
0x6ac: V360 = 0xffffffffffffffffffffffffffffffffffffffff
0x6c1: V361 = AND 0xffffffffffffffffffffffffffffffffffffffff V359
0x6c3: V362 = 0x20
0x6c5: V363 = ADD 0x20 0x4
0x6cb: V364 = 0x6e8
0x6ce: THROW 
0x6cf: JUMPDEST 
0x6d0: STOP 
0x6d1: JUMPDEST 
0x6d2: V365 = 0x0
0x6d4: V366 = 0x1
0x6d6: V367 = 0x0
0x6d9: V368 = 0xffffffffffffffffffffffffffffffffffffffff
0x6ee: V369 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x6ef: V370 = 0xffffffffffffffffffffffffffffffffffffffff
0x704: V371 = AND 0xffffffffffffffffffffffffffffffffffffffff V369
0x706: M[0x0] = V371
0x707: V372 = 0x20
0x709: V373 = ADD 0x20 0x0
0x70c: M[0x20] = 0x1
0x70d: V374 = 0x20
0x70f: V375 = ADD 0x20 0x20
0x710: V376 = 0x0
0x712: V377 = SHA3 0x0 0x40
0x713: V378 = 0x1
0x715: V379 = ADD 0x1 V377
0x716: V380 = 0x0
0x719: V381 = S[V379]
0x71b: V382 = 0x100
0x71e: V383 = EXP 0x100 0x0
0x720: V384 = DIV V381 0x1
0x721: V385 = 0xff
0x723: V386 = AND 0xff V384
---
Entry stack: []
Stack pops: 0
Stack additions: [V361, 0x277, V386, S0]
Exit stack: []

================================

Block 0x726
[0x726:0x783]
---
Predecessors: [0x69f]
Successors: [0x784]
---
0x726 JUMPDEST
0x727 SWAP2
0x728 SWAP1
0x729 POP
0x72a JUMP
0x72b JUMPDEST
0x72c PUSH1 0x0
0x72e DUP1
0x72f PUSH1 0x0
0x731 SWAP1
0x732 SLOAD
0x733 SWAP1
0x734 PUSH2 0x100
0x737 EXP
0x738 SWAP1
0x739 DIV
0x73a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x74f AND
0x750 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x765 AND
0x766 CALLER
0x767 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x77c AND
0x77d EQ
0x77e ISZERO
0x77f ISZERO
0x780 PUSH2 0x330
0x783 JUMPI
---
0x726: JUMPDEST 
0x72a: JUMP S2
0x72b: JUMPDEST 
0x72c: V387 = 0x0
0x72f: V388 = 0x0
0x732: V389 = S[0x0]
0x734: V390 = 0x100
0x737: V391 = EXP 0x100 0x0
0x739: V392 = DIV V389 0x1
0x73a: V393 = 0xffffffffffffffffffffffffffffffffffffffff
0x74f: V394 = AND 0xffffffffffffffffffffffffffffffffffffffff V392
0x750: V395 = 0xffffffffffffffffffffffffffffffffffffffff
0x765: V396 = AND 0xffffffffffffffffffffffffffffffffffffffff V394
0x766: V397 = CALLER
0x767: V398 = 0xffffffffffffffffffffffffffffffffffffffff
0x77c: V399 = AND 0xffffffffffffffffffffffffffffffffffffffff V397
0x77d: V400 = EQ V399 V396
0x77e: V401 = ISZERO V400
0x77f: V402 = ISZERO V401
0x780: V403 = 0x330
0x783: THROWI V402
---
Entry stack: [S1, V386]
Stack pops: 5
Stack additions: [0x0]
Exit stack: []

================================

Block 0x784
[0x784:0x787]
---
Predecessors: [0x726]
Successors: []
---
0x784 PUSH1 0x0
0x786 DUP1
0x787 REVERT
---
0x784: V404 = 0x0
0x787: REVERT 0x0 0x0
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: []
Exit stack: [0x0]

================================

Block 0x788
[0x788:0x797]
---
Predecessors: [0x798]
Successors: [0x798]
---
0x788 JUMPDEST
0x789 PUSH2 0x339
0x78c DUP3
0x78d PUSH2 0x622
0x790 JUMP
0x791 JUMPDEST
0x792 ISZERO
0x793 ISZERO
0x794 PUSH2 0x43e
0x797 JUMPI
---
0x788: JUMPDEST 
0x789: V405 = 0x339
0x78d: V406 = 0x622
0x790: THROW 
0x791: JUMPDEST 
0x792: V407 = ISZERO S0
0x793: V408 = ISZERO V407
0x794: V409 = 0x43e
0x797: THROWI V408
---
Entry stack: [V412, V422, 0x1, 0x2, V425, V427, 0x370, 0x2, V427]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: []

================================

Block 0x798
[0x798:0x7c7]
---
Predecessors: [0x788]
Successors: [0x788]
---
0x798 PUSH1 0x60
0x79a PUSH1 0x40
0x79c MLOAD
0x79d SWAP1
0x79e DUP2
0x79f ADD
0x7a0 PUSH1 0x40
0x7a2 MSTORE
0x7a3 DUP1
0x7a4 TIMESTAMP
0x7a5 DUP2
0x7a6 MSTORE
0x7a7 PUSH1 0x20
0x7a9 ADD
0x7aa PUSH1 0x1
0x7ac ISZERO
0x7ad ISZERO
0x7ae DUP2
0x7af MSTORE
0x7b0 PUSH1 0x20
0x7b2 ADD
0x7b3 PUSH1 0x1
0x7b5 PUSH1 0x2
0x7b7 DUP1
0x7b8 SLOAD
0x7b9 DUP1
0x7ba PUSH1 0x1
0x7bc ADD
0x7bd DUP3
0x7be DUP2
0x7bf PUSH2 0x370
0x7c2 SWAP2
0x7c3 SWAP1
0x7c4 PUSH2 0x788
0x7c7 JUMP
---
0x798: V410 = 0x60
0x79a: V411 = 0x40
0x79c: V412 = M[0x40]
0x79f: V413 = ADD V412 0x60
0x7a0: V414 = 0x40
0x7a2: M[0x40] = V413
0x7a4: V415 = TIMESTAMP
0x7a6: M[V412] = V415
0x7a7: V416 = 0x20
0x7a9: V417 = ADD 0x20 V412
0x7aa: V418 = 0x1
0x7ac: V419 = ISZERO 0x1
0x7ad: V420 = ISZERO 0x0
0x7af: M[V417] = 0x1
0x7b0: V421 = 0x20
0x7b2: V422 = ADD 0x20 V417
0x7b3: V423 = 0x1
0x7b5: V424 = 0x2
0x7b8: V425 = S[0x2]
0x7ba: V426 = 0x1
0x7bc: V427 = ADD 0x1 V425
0x7bf: V428 = 0x370
0x7c4: V429 = 0x788
0x7c7: JUMP 0x788
---
Entry stack: []
Stack pops: 0
Stack additions: [V412, V422, 0x1, 0x2, V425, V427, 0x370, 0x2, V427]
Exit stack: [V412, V422, 0x1, 0x2, V425, V427, 0x370, 0x2, V427]

================================

Block 0x7c8
[0x7c8:0x7d5]
---
Predecessors: []
Successors: [0x7d6]
---
0x7c8 JUMPDEST
0x7c9 SWAP2
0x7ca PUSH1 0x0
0x7cc MSTORE
0x7cd PUSH1 0x20
0x7cf PUSH1 0x0
0x7d1 SHA3
0x7d2 SWAP1
0x7d3 ADD
0x7d4 PUSH1 0x0
---
0x7c8: JUMPDEST 
0x7ca: V430 = 0x0
0x7cc: M[0x0] = S2
0x7cd: V431 = 0x20
0x7cf: V432 = 0x0
0x7d1: V433 = SHA3 0x0 0x20
0x7d3: V434 = ADD S1 V433
0x7d4: V435 = 0x0
---
Entry stack: []
Stack pops: 3
Stack additions: [S0, V434, 0x0]
Exit stack: [S0, V434, 0x0]

================================

Block 0x7d6
[0x7d6:0x8ef]
---
Predecessors: [0x7c8]
Successors: [0x8f0]
---
0x7d6 JUMPDEST
0x7d7 DUP8
0x7d8 SWAP1
0x7d9 SWAP2
0x7da SWAP1
0x7db SWAP2
0x7dc PUSH2 0x100
0x7df EXP
0x7e0 DUP2
0x7e1 SLOAD
0x7e2 DUP2
0x7e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7f8 MUL
0x7f9 NOT
0x7fa AND
0x7fb SWAP1
0x7fc DUP4
0x7fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x812 AND
0x813 MUL
0x814 OR
0x815 SWAP1
0x816 SSTORE
0x817 POP
0x818 SUB
0x819 DUP2
0x81a MSTORE
0x81b POP
0x81c PUSH1 0x1
0x81e PUSH1 0x0
0x820 DUP5
0x821 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x836 AND
0x837 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x84c AND
0x84d DUP2
0x84e MSTORE
0x84f PUSH1 0x20
0x851 ADD
0x852 SWAP1
0x853 DUP2
0x854 MSTORE
0x855 PUSH1 0x20
0x857 ADD
0x858 PUSH1 0x0
0x85a SHA3
0x85b PUSH1 0x0
0x85d DUP3
0x85e ADD
0x85f MLOAD
0x860 DUP2
0x861 PUSH1 0x0
0x863 ADD
0x864 SSTORE
0x865 PUSH1 0x20
0x867 DUP3
0x868 ADD
0x869 MLOAD
0x86a DUP2
0x86b PUSH1 0x1
0x86d ADD
0x86e PUSH1 0x0
0x870 PUSH2 0x100
0x873 EXP
0x874 DUP2
0x875 SLOAD
0x876 DUP2
0x877 PUSH1 0xff
0x879 MUL
0x87a NOT
0x87b AND
0x87c SWAP1
0x87d DUP4
0x87e ISZERO
0x87f ISZERO
0x880 MUL
0x881 OR
0x882 SWAP1
0x883 SSTORE
0x884 POP
0x885 PUSH1 0x40
0x887 DUP3
0x888 ADD
0x889 MLOAD
0x88a DUP2
0x88b PUSH1 0x2
0x88d ADD
0x88e SSTORE
0x88f SWAP1
0x890 POP
0x891 POP
0x892 PUSH2 0x4bf
0x895 JUMP
0x896 JUMPDEST
0x897 PUSH1 0x1
0x899 PUSH1 0x0
0x89b DUP4
0x89c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8b1 AND
0x8b2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8c7 AND
0x8c8 DUP2
0x8c9 MSTORE
0x8ca PUSH1 0x20
0x8cc ADD
0x8cd SWAP1
0x8ce DUP2
0x8cf MSTORE
0x8d0 PUSH1 0x20
0x8d2 ADD
0x8d3 PUSH1 0x0
0x8d5 SHA3
0x8d6 SWAP1
0x8d7 POP
0x8d8 DUP1
0x8d9 PUSH1 0x1
0x8db ADD
0x8dc PUSH1 0x0
0x8de SWAP1
0x8df SLOAD
0x8e0 SWAP1
0x8e1 PUSH2 0x100
0x8e4 EXP
0x8e5 SWAP1
0x8e6 DIV
0x8e7 PUSH1 0xff
0x8e9 AND
0x8ea ISZERO
0x8eb ISZERO
0x8ec PUSH2 0x4be
0x8ef JUMPI
---
0x7d6: JUMPDEST 
0x7dc: V436 = 0x100
0x7df: V437 = EXP 0x100 0x0
0x7e1: V438 = S[V434]
0x7e3: V439 = 0xffffffffffffffffffffffffffffffffffffffff
0x7f8: V440 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x7f9: V441 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x7fa: V442 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V438
0x7fd: V443 = 0xffffffffffffffffffffffffffffffffffffffff
0x812: V444 = AND 0xffffffffffffffffffffffffffffffffffffffff S7
0x813: V445 = MUL V444 0x1
0x814: V446 = OR V445 V442
0x816: S[V434] = V446
0x818: V447 = SUB S2 S3
0x81a: M[S4] = V447
0x81c: V448 = 0x1
0x81e: V449 = 0x0
0x821: V450 = 0xffffffffffffffffffffffffffffffffffffffff
0x836: V451 = AND 0xffffffffffffffffffffffffffffffffffffffff S7
0x837: V452 = 0xffffffffffffffffffffffffffffffffffffffff
0x84c: V453 = AND 0xffffffffffffffffffffffffffffffffffffffff V451
0x84e: M[0x0] = V453
0x84f: V454 = 0x20
0x851: V455 = ADD 0x20 0x0
0x854: M[0x20] = 0x1
0x855: V456 = 0x20
0x857: V457 = ADD 0x20 0x20
0x858: V458 = 0x0
0x85a: V459 = SHA3 0x0 0x40
0x85b: V460 = 0x0
0x85e: V461 = ADD S5 0x0
0x85f: V462 = M[V461]
0x861: V463 = 0x0
0x863: V464 = ADD 0x0 V459
0x864: S[V464] = V462
0x865: V465 = 0x20
0x868: V466 = ADD S5 0x20
0x869: V467 = M[V466]
0x86b: V468 = 0x1
0x86d: V469 = ADD 0x1 V459
0x86e: V470 = 0x0
0x870: V471 = 0x100
0x873: V472 = EXP 0x100 0x0
0x875: V473 = S[V469]
0x877: V474 = 0xff
0x879: V475 = MUL 0xff 0x1
0x87a: V476 = NOT 0xff
0x87b: V477 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V473
0x87e: V478 = ISZERO V467
0x87f: V479 = ISZERO V478
0x880: V480 = MUL V479 0x1
0x881: V481 = OR V480 V477
0x883: S[V469] = V481
0x885: V482 = 0x40
0x888: V483 = ADD S5 0x40
0x889: V484 = M[V483]
0x88b: V485 = 0x2
0x88d: V486 = ADD 0x2 V459
0x88e: S[V486] = V484
0x892: V487 = 0x4bf
0x895: THROW 
0x896: JUMPDEST 
0x897: V488 = 0x1
0x899: V489 = 0x0
0x89c: V490 = 0xffffffffffffffffffffffffffffffffffffffff
0x8b1: V491 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x8b2: V492 = 0xffffffffffffffffffffffffffffffffffffffff
0x8c7: V493 = AND 0xffffffffffffffffffffffffffffffffffffffff V491
0x8c9: M[0x0] = V493
0x8ca: V494 = 0x20
0x8cc: V495 = ADD 0x20 0x0
0x8cf: M[0x20] = 0x1
0x8d0: V496 = 0x20
0x8d2: V497 = ADD 0x20 0x20
0x8d3: V498 = 0x0
0x8d5: V499 = SHA3 0x0 0x40
0x8d9: V500 = 0x1
0x8db: V501 = ADD 0x1 V499
0x8dc: V502 = 0x0
0x8df: V503 = S[V501]
0x8e1: V504 = 0x100
0x8e4: V505 = EXP 0x100 0x0
0x8e6: V506 = DIV V503 0x1
0x8e7: V507 = 0xff
0x8e9: V508 = AND 0xff V506
0x8ea: V509 = ISZERO V508
0x8eb: V510 = ISZERO V509
0x8ec: V511 = 0x4be
0x8ef: THROWI V510
---
Entry stack: [S2, V434, 0x0]
Stack pops: 14
Stack additions: [V499, S1]
Exit stack: []

================================

Block 0x8f0
[0x8f0:0x915]
---
Predecessors: [0x7d6]
Successors: [0x916]
---
0x8f0 PUSH1 0x1
0x8f2 DUP2
0x8f3 PUSH1 0x1
0x8f5 ADD
0x8f6 PUSH1 0x0
0x8f8 PUSH2 0x100
0x8fb EXP
0x8fc DUP2
0x8fd SLOAD
0x8fe DUP2
0x8ff PUSH1 0xff
0x901 MUL
0x902 NOT
0x903 AND
0x904 SWAP1
0x905 DUP4
0x906 ISZERO
0x907 ISZERO
0x908 MUL
0x909 OR
0x90a SWAP1
0x90b SSTORE
0x90c POP
0x90d TIMESTAMP
0x90e DUP2
0x90f PUSH1 0x0
0x911 ADD
0x912 DUP2
0x913 SWAP1
0x914 SSTORE
0x915 POP
---
0x8f0: V512 = 0x1
0x8f3: V513 = 0x1
0x8f5: V514 = ADD 0x1 V499
0x8f6: V515 = 0x0
0x8f8: V516 = 0x100
0x8fb: V517 = EXP 0x100 0x0
0x8fd: V518 = S[V514]
0x8ff: V519 = 0xff
0x901: V520 = MUL 0xff 0x1
0x902: V521 = NOT 0xff
0x903: V522 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V518
0x906: V523 = ISZERO 0x1
0x907: V524 = ISZERO 0x0
0x908: V525 = MUL 0x1 0x1
0x909: V526 = OR 0x1 V522
0x90b: S[V514] = V526
0x90d: V527 = TIMESTAMP
0x90f: V528 = 0x0
0x911: V529 = ADD 0x0 V499
0x914: S[V529] = V527
---
Entry stack: [S1, V499]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S1, V499]

================================

Block 0x916
[0x916:0x916]
---
Predecessors: [0x8f0]
Successors: [0x917]
---
0x916 JUMPDEST
---
0x916: JUMPDEST 
---
Entry stack: [S1, V499]
Stack pops: 0
Stack additions: []
Exit stack: [S1, V499]

================================

Block 0x917
[0x917:0x917]
---
Predecessors: [0x916]
Successors: [0x918]
---
0x917 JUMPDEST
---
0x917: JUMPDEST 
---
Entry stack: [S1, V499]
Stack pops: 0
Stack additions: []
Exit stack: [S1, V499]

================================

Block 0x918
[0x918:0x918]
---
Predecessors: [0x917]
Successors: [0x919]
---
0x918 JUMPDEST
---
0x918: JUMPDEST 
---
Entry stack: [S1, V499]
Stack pops: 0
Stack additions: []
Exit stack: [S1, V499]

================================

Block 0x919
[0x919:0x975]
---
Predecessors: [0x918]
Successors: [0x976]
---
0x919 JUMPDEST
0x91a POP
0x91b POP
0x91c JUMP
0x91d JUMPDEST
0x91e PUSH1 0x0
0x920 DUP1
0x921 PUSH1 0x0
0x923 SWAP1
0x924 SLOAD
0x925 SWAP1
0x926 PUSH2 0x100
0x929 EXP
0x92a SWAP1
0x92b DIV
0x92c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x941 AND
0x942 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x957 AND
0x958 CALLER
0x959 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x96e AND
0x96f EQ
0x970 ISZERO
0x971 ISZERO
0x972 PUSH2 0x522
0x975 JUMPI
---
0x919: JUMPDEST 
0x91c: JUMP S2
0x91d: JUMPDEST 
0x91e: V530 = 0x0
0x921: V531 = 0x0
0x924: V532 = S[0x0]
0x926: V533 = 0x100
0x929: V534 = EXP 0x100 0x0
0x92b: V535 = DIV V532 0x1
0x92c: V536 = 0xffffffffffffffffffffffffffffffffffffffff
0x941: V537 = AND 0xffffffffffffffffffffffffffffffffffffffff V535
0x942: V538 = 0xffffffffffffffffffffffffffffffffffffffff
0x957: V539 = AND 0xffffffffffffffffffffffffffffffffffffffff V537
0x958: V540 = CALLER
0x959: V541 = 0xffffffffffffffffffffffffffffffffffffffff
0x96e: V542 = AND 0xffffffffffffffffffffffffffffffffffffffff V540
0x96f: V543 = EQ V542 V539
0x970: V544 = ISZERO V543
0x971: V545 = ISZERO V544
0x972: V546 = 0x522
0x975: THROWI V545
---
Entry stack: [S1, V499]
Stack pops: 6
Stack additions: [0x0]
Exit stack: []

================================

Block 0x976
[0x976:0x988]
---
Predecessors: [0x919]
Successors: [0x989]
---
0x976 PUSH1 0x0
0x978 DUP1
0x979 REVERT
0x97a JUMPDEST
0x97b PUSH2 0x52b
0x97e DUP3
0x97f PUSH2 0x622
0x982 JUMP
0x983 JUMPDEST
0x984 ISZERO
0x985 PUSH2 0x598
0x988 JUMPI
---
0x976: V547 = 0x0
0x979: REVERT 0x0 0x0
0x97a: JUMPDEST 
0x97b: V548 = 0x52b
0x97f: V549 = 0x622
0x982: THROW 
0x983: JUMPDEST 
0x984: V550 = ISZERO S0
0x985: V551 = 0x598
0x988: THROWI V550
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: [S1, 0x52b, S0, S1]
Exit stack: []

================================

Block 0x989
[0x989:0x9ef]
---
Predecessors: [0x976]
Successors: [0x9f0]
---
0x989 PUSH1 0x1
0x98b PUSH1 0x0
0x98d DUP4
0x98e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9a3 AND
0x9a4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9b9 AND
0x9ba DUP2
0x9bb MSTORE
0x9bc PUSH1 0x20
0x9be ADD
0x9bf SWAP1
0x9c0 DUP2
0x9c1 MSTORE
0x9c2 PUSH1 0x20
0x9c4 ADD
0x9c5 PUSH1 0x0
0x9c7 SHA3
0x9c8 SWAP1
0x9c9 POP
0x9ca PUSH1 0x0
0x9cc DUP2
0x9cd PUSH1 0x1
0x9cf ADD
0x9d0 PUSH1 0x0
0x9d2 PUSH2 0x100
0x9d5 EXP
0x9d6 DUP2
0x9d7 SLOAD
0x9d8 DUP2
0x9d9 PUSH1 0xff
0x9db MUL
0x9dc NOT
0x9dd AND
0x9de SWAP1
0x9df DUP4
0x9e0 ISZERO
0x9e1 ISZERO
0x9e2 MUL
0x9e3 OR
0x9e4 SWAP1
0x9e5 SSTORE
0x9e6 POP
0x9e7 TIMESTAMP
0x9e8 DUP2
0x9e9 PUSH1 0x0
0x9eb ADD
0x9ec DUP2
0x9ed SWAP1
0x9ee SSTORE
0x9ef POP
---
0x989: V552 = 0x1
0x98b: V553 = 0x0
0x98e: V554 = 0xffffffffffffffffffffffffffffffffffffffff
0x9a3: V555 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x9a4: V556 = 0xffffffffffffffffffffffffffffffffffffffff
0x9b9: V557 = AND 0xffffffffffffffffffffffffffffffffffffffff V555
0x9bb: M[0x0] = V557
0x9bc: V558 = 0x20
0x9be: V559 = ADD 0x20 0x0
0x9c1: M[0x20] = 0x1
0x9c2: V560 = 0x20
0x9c4: V561 = ADD 0x20 0x20
0x9c5: V562 = 0x0
0x9c7: V563 = SHA3 0x0 0x40
0x9ca: V564 = 0x0
0x9cd: V565 = 0x1
0x9cf: V566 = ADD 0x1 V563
0x9d0: V567 = 0x0
0x9d2: V568 = 0x100
0x9d5: V569 = EXP 0x100 0x0
0x9d7: V570 = S[V566]
0x9d9: V571 = 0xff
0x9db: V572 = MUL 0xff 0x1
0x9dc: V573 = NOT 0xff
0x9dd: V574 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V570
0x9e0: V575 = ISZERO 0x0
0x9e1: V576 = ISZERO 0x1
0x9e2: V577 = MUL 0x0 0x1
0x9e3: V578 = OR 0x0 V574
0x9e5: S[V566] = V578
0x9e7: V579 = TIMESTAMP
0x9e9: V580 = 0x0
0x9eb: V581 = ADD 0x0 V563
0x9ee: S[V581] = V579
---
Entry stack: []
Stack pops: 2
Stack additions: [S1, V563]
Exit stack: [S1, V563]

================================

Block 0x9f0
[0x9f0:0x9f0]
---
Predecessors: [0x989]
Successors: [0x9f1]
---
0x9f0 JUMPDEST
---
0x9f0: JUMPDEST 
---
Entry stack: [S1, V563]
Stack pops: 0
Stack additions: []
Exit stack: [S1, V563]

================================

Block 0x9f1
[0x9f1:0x9f1]
---
Predecessors: [0x9f0]
Successors: [0x9f2]
---
0x9f1 JUMPDEST
---
0x9f1: JUMPDEST 
---
Entry stack: [S1, V563]
Stack pops: 0
Stack additions: []
Exit stack: [S1, V563]

================================

Block 0x9f2
[0x9f2:0xa4a]
---
Predecessors: [0x9f1]
Successors: [0xa4b]
---
0x9f2 JUMPDEST
0x9f3 POP
0x9f4 POP
0x9f5 JUMP
0x9f6 JUMPDEST
0x9f7 PUSH1 0x0
0x9f9 DUP1
0x9fa PUSH1 0x0
0x9fc SWAP1
0x9fd SLOAD
0x9fe SWAP1
0x9ff PUSH2 0x100
0xa02 EXP
0xa03 SWAP1
0xa04 DIV
0xa05 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa1a AND
0xa1b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa30 AND
0xa31 DUP3
0xa32 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa47 AND
0xa48 EQ
0xa49 SWAP1
0xa4a POP
---
0x9f2: JUMPDEST 
0x9f5: JUMP S2
0x9f6: JUMPDEST 
0x9f7: V582 = 0x0
0x9fa: V583 = 0x0
0x9fd: V584 = S[0x0]
0x9ff: V585 = 0x100
0xa02: V586 = EXP 0x100 0x0
0xa04: V587 = DIV V584 0x1
0xa05: V588 = 0xffffffffffffffffffffffffffffffffffffffff
0xa1a: V589 = AND 0xffffffffffffffffffffffffffffffffffffffff V587
0xa1b: V590 = 0xffffffffffffffffffffffffffffffffffffffff
0xa30: V591 = AND 0xffffffffffffffffffffffffffffffffffffffff V589
0xa32: V592 = 0xffffffffffffffffffffffffffffffffffffffff
0xa47: V593 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xa48: V594 = EQ V593 V591
---
Entry stack: [S1, V563]
Stack pops: 6
Stack additions: [V594, S0]
Exit stack: []

================================

Block 0xa4b
[0xa4b:0xa76]
---
Predecessors: [0x9f2]
Successors: [0xa77]
---
0xa4b JUMPDEST
0xa4c SWAP2
0xa4d SWAP1
0xa4e POP
0xa4f JUMP
0xa50 JUMPDEST
0xa51 PUSH1 0x0
0xa53 DUP1
0xa54 PUSH1 0x0
0xa56 SWAP1
0xa57 SLOAD
0xa58 SWAP1
0xa59 PUSH2 0x100
0xa5c EXP
0xa5d SWAP1
0xa5e DIV
0xa5f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa74 AND
0xa75 SWAP1
0xa76 POP
---
0xa4b: JUMPDEST 
0xa4f: JUMP S2
0xa50: JUMPDEST 
0xa51: V595 = 0x0
0xa54: V596 = 0x0
0xa57: V597 = S[0x0]
0xa59: V598 = 0x100
0xa5c: V599 = EXP 0x100 0x0
0xa5e: V600 = DIV V597 0x1
0xa5f: V601 = 0xffffffffffffffffffffffffffffffffffffffff
0xa74: V602 = AND 0xffffffffffffffffffffffffffffffffffffffff V600
---
Entry stack: [S1, V594]
Stack pops: 5
Stack additions: [V602]
Exit stack: []

================================

Block 0xa77
[0xa77:0xa8a]
---
Predecessors: [0xa4b]
Successors: [0xa8b]
---
0xa77 JUMPDEST
0xa78 SWAP1
0xa79 JUMP
0xa7a JUMPDEST
0xa7b PUSH1 0x0
0xa7d DUP1
0xa7e PUSH1 0x2
0xa80 DUP1
0xa81 SLOAD
0xa82 SWAP1
0xa83 POP
0xa84 GT
0xa85 DUP1
0xa86 ISZERO
0xa87 PUSH2 0x6e0
0xa8a JUMPI
---
0xa77: JUMPDEST 
0xa79: JUMP S1
0xa7a: JUMPDEST 
0xa7b: V603 = 0x0
0xa7e: V604 = 0x2
0xa81: V605 = S[0x2]
0xa84: V606 = GT V605 0x0
0xa86: V607 = ISZERO V606
0xa87: V608 = 0x6e0
0xa8a: THROWI V607
---
Entry stack: [V602]
Stack pops: 3
Stack additions: [V606, 0x0]
Exit stack: []

================================

Block 0xa8b
[0xa8b:0xada]
---
Predecessors: [0xa77]
Successors: [0xadb]
---
0xa8b POP
0xa8c PUSH1 0x2
0xa8e PUSH1 0x1
0xa90 PUSH1 0x0
0xa92 DUP5
0xa93 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaa8 AND
0xaa9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xabe AND
0xabf DUP2
0xac0 MSTORE
0xac1 PUSH1 0x20
0xac3 ADD
0xac4 SWAP1
0xac5 DUP2
0xac6 MSTORE
0xac7 PUSH1 0x20
0xac9 ADD
0xaca PUSH1 0x0
0xacc SHA3
0xacd PUSH1 0x2
0xacf ADD
0xad0 SLOAD
0xad1 DUP2
0xad2 SLOAD
0xad3 DUP2
0xad4 LT
0xad5 ISZERO
0xad6 ISZERO
0xad7 PUSH2 0x684
0xada JUMPI
---
0xa8c: V609 = 0x2
0xa8e: V610 = 0x1
0xa90: V611 = 0x0
0xa93: V612 = 0xffffffffffffffffffffffffffffffffffffffff
0xaa8: V613 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xaa9: V614 = 0xffffffffffffffffffffffffffffffffffffffff
0xabe: V615 = AND 0xffffffffffffffffffffffffffffffffffffffff V613
0xac0: M[0x0] = V615
0xac1: V616 = 0x20
0xac3: V617 = ADD 0x20 0x0
0xac6: M[0x20] = 0x1
0xac7: V618 = 0x20
0xac9: V619 = ADD 0x20 0x20
0xaca: V620 = 0x0
0xacc: V621 = SHA3 0x0 0x40
0xacd: V622 = 0x2
0xacf: V623 = ADD 0x2 V621
0xad0: V624 = S[V623]
0xad2: V625 = S[0x2]
0xad4: V626 = LT V624 V625
0xad5: V627 = ISZERO V626
0xad6: V628 = ISZERO V627
0xad7: V629 = 0x684
0xada: THROWI V628
---
Entry stack: [0x0, V606]
Stack pops: 3
Stack additions: [S2, S1, 0x2, V624]
Exit stack: [S0, 0x0, 0x2, V624]

================================

Block 0xadb
[0xadb:0xae9]
---
Predecessors: [0xa8b]
Successors: [0xaea]
---
0xadb INVALID
0xadc JUMPDEST
0xadd SWAP1
0xade PUSH1 0x0
0xae0 MSTORE
0xae1 PUSH1 0x20
0xae3 PUSH1 0x0
0xae5 SHA3
0xae6 SWAP1
0xae7 ADD
0xae8 PUSH1 0x0
---
0xadb: INVALID 
0xadc: JUMPDEST 
0xade: V630 = 0x0
0xae0: M[0x0] = S1
0xae1: V631 = 0x20
0xae3: V632 = 0x0
0xae5: V633 = SHA3 0x0 0x20
0xae7: V634 = ADD S0 V633
0xae8: V635 = 0x0
---
Entry stack: [S3, 0x0, 0x2, V624]
Stack pops: 0
Stack additions: [0x0, V634]
Exit stack: []

================================

Block 0xaea
[0xaea:0xb37]
---
Predecessors: [0xadb]
Successors: [0xb38]
---
0xaea JUMPDEST
0xaeb SWAP1
0xaec SLOAD
0xaed SWAP1
0xaee PUSH2 0x100
0xaf1 EXP
0xaf2 SWAP1
0xaf3 DIV
0xaf4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb09 AND
0xb0a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb1f AND
0xb20 DUP3
0xb21 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb36 AND
0xb37 EQ
---
0xaea: JUMPDEST 
0xaec: V636 = S[V634]
0xaee: V637 = 0x100
0xaf1: V638 = EXP 0x100 0x0
0xaf3: V639 = DIV V636 0x1
0xaf4: V640 = 0xffffffffffffffffffffffffffffffffffffffff
0xb09: V641 = AND 0xffffffffffffffffffffffffffffffffffffffff V639
0xb0a: V642 = 0xffffffffffffffffffffffffffffffffffffffff
0xb1f: V643 = AND 0xffffffffffffffffffffffffffffffffffffffff V641
0xb21: V644 = 0xffffffffffffffffffffffffffffffffffffffff
0xb36: V645 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xb37: V646 = EQ V645 V643
---
Entry stack: [V634, 0x0]
Stack pops: 4
Stack additions: [S3, S2, V646]
Exit stack: [S1, S0, V646]

================================

Block 0xb38
[0xb38:0xb3a]
---
Predecessors: [0xaea]
Successors: [0xb3b]
---
0xb38 JUMPDEST
0xb39 SWAP1
0xb3a POP
---
0xb38: JUMPDEST 
---
Entry stack: [S2, S1, V646]
Stack pops: 2
Stack additions: [S0]
Exit stack: [S2, V646]

================================

Block 0xb3b
[0xb3b:0xb96]
---
Predecessors: [0xb38]
Successors: [0xb97]
---
0xb3b JUMPDEST
0xb3c SWAP2
0xb3d SWAP1
0xb3e POP
0xb3f JUMP
0xb40 JUMPDEST
0xb41 PUSH1 0x0
0xb43 DUP1
0xb44 SWAP1
0xb45 SLOAD
0xb46 SWAP1
0xb47 PUSH2 0x100
0xb4a EXP
0xb4b SWAP1
0xb4c DIV
0xb4d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb62 AND
0xb63 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb78 AND
0xb79 CALLER
0xb7a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb8f AND
0xb90 EQ
0xb91 ISZERO
0xb92 ISZERO
0xb93 PUSH2 0x743
0xb96 JUMPI
---
0xb3b: JUMPDEST 
0xb3f: JUMP S2
0xb40: JUMPDEST 
0xb41: V647 = 0x0
0xb45: V648 = S[0x0]
0xb47: V649 = 0x100
0xb4a: V650 = EXP 0x100 0x0
0xb4c: V651 = DIV V648 0x1
0xb4d: V652 = 0xffffffffffffffffffffffffffffffffffffffff
0xb62: V653 = AND 0xffffffffffffffffffffffffffffffffffffffff V651
0xb63: V654 = 0xffffffffffffffffffffffffffffffffffffffff
0xb78: V655 = AND 0xffffffffffffffffffffffffffffffffffffffff V653
0xb79: V656 = CALLER
0xb7a: V657 = 0xffffffffffffffffffffffffffffffffffffffff
0xb8f: V658 = AND 0xffffffffffffffffffffffffffffffffffffffff V656
0xb90: V659 = EQ V658 V655
0xb91: V660 = ISZERO V659
0xb92: V661 = ISZERO V660
0xb93: V662 = 0x743
0xb96: THROWI V661
---
Entry stack: [S1, V646]
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0xb97
[0xb97:0xbdb]
---
Predecessors: [0xb3b]
Successors: [0xbdc]
---
0xb97 PUSH1 0x0
0xb99 DUP1
0xb9a REVERT
0xb9b JUMPDEST
0xb9c DUP1
0xb9d PUSH1 0x0
0xb9f DUP1
0xba0 PUSH2 0x100
0xba3 EXP
0xba4 DUP2
0xba5 SLOAD
0xba6 DUP2
0xba7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbbc MUL
0xbbd NOT
0xbbe AND
0xbbf SWAP1
0xbc0 DUP4
0xbc1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbd6 AND
0xbd7 MUL
0xbd8 OR
0xbd9 SWAP1
0xbda SSTORE
0xbdb POP
---
0xb97: V663 = 0x0
0xb9a: REVERT 0x0 0x0
0xb9b: JUMPDEST 
0xb9d: V664 = 0x0
0xba0: V665 = 0x100
0xba3: V666 = EXP 0x100 0x0
0xba5: V667 = S[0x0]
0xba7: V668 = 0xffffffffffffffffffffffffffffffffffffffff
0xbbc: V669 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xbbd: V670 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xbbe: V671 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V667
0xbc1: V672 = 0xffffffffffffffffffffffffffffffffffffffff
0xbd6: V673 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xbd7: V674 = MUL V673 0x1
0xbd8: V675 = OR V674 V671
0xbda: S[0x0] = V675
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0xbdc
[0xbdc:0xbdc]
---
Predecessors: [0xb97]
Successors: [0xbdd]
---
0xbdc JUMPDEST
---
0xbdc: JUMPDEST 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0xbdd
[0xbdd:0xbed]
---
Predecessors: [0xbdc]
Successors: [0xbee]
---
0xbdd JUMPDEST
0xbde POP
0xbdf JUMP
0xbe0 JUMPDEST
0xbe1 DUP2
0xbe2 SLOAD
0xbe3 DUP2
0xbe4 DUP4
0xbe5 SSTORE
0xbe6 DUP2
0xbe7 DUP2
0xbe8 ISZERO
0xbe9 GT
0xbea PUSH2 0x7af
0xbed JUMPI
---
0xbdd: JUMPDEST 
0xbdf: JUMP S1
0xbe0: JUMPDEST 
0xbe2: V676 = S[S1]
0xbe5: S[S1] = S0
0xbe8: V677 = ISZERO V676
0xbe9: V678 = GT V677 S0
0xbea: V679 = 0x7af
0xbed: THROWI V678
---
Entry stack: [S0]
Stack pops: 4
Stack additions: [V676, S0, S1]
Exit stack: []

================================

Block 0xbee
[0xbee:0xc06]
---
Predecessors: [0xbdd]
Successors: [0xc07]
---
0xbee DUP2
0xbef DUP4
0xbf0 PUSH1 0x0
0xbf2 MSTORE
0xbf3 PUSH1 0x20
0xbf5 PUSH1 0x0
0xbf7 SHA3
0xbf8 SWAP2
0xbf9 DUP3
0xbfa ADD
0xbfb SWAP2
0xbfc ADD
0xbfd PUSH2 0x7ae
0xc00 SWAP2
0xc01 SWAP1
0xc02 PUSH2 0x7b4
0xc05 JUMP
0xc06 JUMPDEST
---
0xbf0: V680 = 0x0
0xbf2: M[0x0] = S2
0xbf3: V681 = 0x20
0xbf5: V682 = 0x0
0xbf7: V683 = SHA3 0x0 0x20
0xbfa: V684 = ADD V683 V676
0xbfc: V685 = ADD V683 S1
0xbfd: V686 = 0x7ae
0xc02: V687 = 0x7b4
0xc05: THROW 
0xc06: JUMPDEST 
---
Entry stack: [S2, S1, V676]
Stack pops: 3
Stack additions: [S2, S1]
Exit stack: []

================================

Block 0xc07
[0xc07:0xc11]
---
Predecessors: [0xbee]
Successors: [0xc12]
---
0xc07 JUMPDEST
0xc08 POP
0xc09 POP
0xc0a POP
0xc0b JUMP
0xc0c JUMPDEST
0xc0d PUSH2 0x7d6
0xc10 SWAP2
0xc11 SWAP1
---
0xc07: JUMPDEST 
0xc0b: JUMP S3
0xc0c: JUMPDEST 
0xc0d: V688 = 0x7d6
---
Entry stack: []
Stack pops: 8
Stack additions: [S0, S1, 0x7d6]
Exit stack: []

================================

Block 0xc12
[0xc12:0xc1a]
---
Predecessors: [0xc07]
Successors: [0xc1b]
---
0xc12 JUMPDEST
0xc13 DUP1
0xc14 DUP3
0xc15 GT
0xc16 ISZERO
0xc17 PUSH2 0x7d2
0xc1a JUMPI
---
0xc12: JUMPDEST 
0xc15: V689 = GT S1 S0
0xc16: V690 = ISZERO V689
0xc17: V691 = 0x7d2
0xc1a: THROWI V690
---
Entry stack: [0x7d6, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [0x7d6, S1, S0]

================================

Block 0xc1b
[0xc1b:0xc5f]
---
Predecessors: [0xc12]
Successors: []
---
0xc1b PUSH1 0x0
0xc1d DUP2
0xc1e PUSH1 0x0
0xc20 SWAP1
0xc21 SSTORE
0xc22 POP
0xc23 PUSH1 0x1
0xc25 ADD
0xc26 PUSH2 0x7ba
0xc29 JUMP
0xc2a JUMPDEST
0xc2b POP
0xc2c SWAP1
0xc2d JUMP
0xc2e JUMPDEST
0xc2f SWAP1
0xc30 JUMP
0xc31 STOP
0xc32 LOG1
0xc33 PUSH6 0x627a7a723058
0xc3a SHA3
0xc3b SHL
0xc3c MISSING 0xf6
0xc3d STATICCALL
0xc3e MISSING 0x22
0xc3f CALLCODE
0xc40 SHL
0xc41 PUSH6 0xb78d9af0a060
0xc48 ISZERO
0xc49 PUSH12 0x418166ed46a420979a50f07
0xc56 PUSH9 0x8d27bbae0029
---
0xc1b: V692 = 0x0
0xc1e: V693 = 0x0
0xc21: S[S0] = 0x0
0xc23: V694 = 0x1
0xc25: V695 = ADD 0x1 S0
0xc26: V696 = 0x7ba
0xc29: THROW 
0xc2a: JUMPDEST 
0xc2d: JUMP S2
0xc2e: JUMPDEST 
0xc30: JUMP S1
0xc31: STOP 
0xc32: LOG S0 S1 S2
0xc33: V697 = 0x627a7a723058
0xc3a: V698 = SHA3 0x627a7a723058 S3
0xc3b: V699 = SHL V698 S4
0xc3c: MISSING 0xf6
0xc3d: V700 = STATICCALL S0 S1 S2 S3 S4 S5
0xc3e: MISSING 0x22
0xc3f: V701 = CALLCODE S0 S1 S2 S3 S4 S5 S6
0xc40: V702 = SHL V701 S7
0xc41: V703 = 0xb78d9af0a060
0xc48: V704 = ISZERO 0xb78d9af0a060
0xc49: V705 = 0x418166ed46a420979a50f07
0xc56: V706 = 0x8d27bbae0029
---
Entry stack: [0x7d6, S1, S0]
Stack pops: 5
Stack additions: [0x8d27bbae0029, 0x418166ed46a420979a50f07, 0x0, V702]
Exit stack: []

================================

Function 0:
Public function signature: 0x893d20e8
Entry block: 0x7a
Exit block: 0x784
Body: 0x7a, 0x86, 0xd7, 0x17a, 0x1a6, 0x1b5, 0x20e, 0x219, 0x224, 0x230, 0x281, 0x2d6, 0x35d, 0x389, 0x3e3, 0x428, 0x429, 0x497, 0x4a2, 0x4ad, 0x4b8, 0x4c3, 0x4ce, 0x4d9, 0x4e5, 0x536, 0x56f, 0x5a8, 0x5f9, 0x64e, 0x69f, 0x726, 0x784

Function 1:
Public function signature: 0x2f54bf6e
Entry block: 0x6f
Exit block: 0x784
Body: 0x6f, 0x7a, 0x86, 0xd7, 0x17a, 0x1a6, 0x1b5, 0x20e, 0x219, 0x224, 0x230, 0x281, 0x2d6, 0x35d, 0x389, 0x3e3, 0x428, 0x429, 0x497, 0x4a2, 0x4ad, 0x4b8, 0x4c3, 0x4ce, 0x4d9, 0x4e5, 0x536, 0x56f, 0x5a8, 0x5f9, 0x64e, 0x69f, 0x726, 0x784

Function 2:
Public fallback function
Entry block: 0x7a
Exit block: 0x7a
Body: 0x7a

