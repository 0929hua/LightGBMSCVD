Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x51]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x8da5cb5b
0x3c EQ
0x3d PUSH2 0x51
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x8da5cb5b
0x3c: V13 = EQ 0x8da5cb5b V11
0x3d: V14 = 0x51
0x40: JUMPI 0x51 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xa6]
---
0x41 DUP1
0x42 PUSH4 0xf2fde38b
0x47 EQ
0x48 PUSH2 0xa6
0x4b JUMPI
---
0x42: V15 = 0xf2fde38b
0x47: V16 = EQ 0xf2fde38b V11
0x48: V17 = 0xa6
0x4b: JUMPI 0xa6 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x50]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d PUSH1 0x0
0x4f DUP1
0x50 REVERT
---
0x4c: JUMPDEST 
0x4d: V18 = 0x0
0x50: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x51
[0x51:0x57]
---
Predecessors: [0xd]
Successors: [0x58, 0x5c]
---
0x51 JUMPDEST
0x52 CALLVALUE
0x53 ISZERO
0x54 PUSH2 0x5c
0x57 JUMPI
---
0x51: JUMPDEST 
0x52: V19 = CALLVALUE
0x53: V20 = ISZERO V19
0x54: V21 = 0x5c
0x57: JUMPI 0x5c V20
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x58
[0x58:0x5b]
---
Predecessors: [0x51]
Successors: []
---
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x58: V22 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0x63]
---
Predecessors: [0x51]
Successors: [0xdf]
---
0x5c JUMPDEST
0x5d PUSH2 0x64
0x60 PUSH2 0xdf
0x63 JUMP
---
0x5c: JUMPDEST 
0x5d: V23 = 0x64
0x60: V24 = 0xdf
0x63: JUMP 0xdf
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x64]
Exit stack: [V11, 0x64]

================================

Block 0x64
[0x64:0xa5]
---
Predecessors: [0xdf]
Successors: []
---
0x64 JUMPDEST
0x65 PUSH1 0x40
0x67 MLOAD
0x68 DUP1
0x69 DUP3
0x6a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7f AND
0x80 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x95 AND
0x96 DUP2
0x97 MSTORE
0x98 PUSH1 0x20
0x9a ADD
0x9b SWAP2
0x9c POP
0x9d POP
0x9e PUSH1 0x40
0xa0 MLOAD
0xa1 DUP1
0xa2 SWAP2
0xa3 SUB
0xa4 SWAP1
0xa5 RETURN
---
0x64: JUMPDEST 
0x65: V25 = 0x40
0x67: V26 = M[0x40]
0x6a: V27 = 0xffffffffffffffffffffffffffffffffffffffff
0x7f: V28 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0x80: V29 = 0xffffffffffffffffffffffffffffffffffffffff
0x95: V30 = AND 0xffffffffffffffffffffffffffffffffffffffff V28
0x97: M[V26] = V30
0x98: V31 = 0x20
0x9a: V32 = ADD 0x20 V26
0x9e: V33 = 0x40
0xa0: V34 = M[0x40]
0xa3: V35 = SUB V32 V34
0xa5: RETURN V34 V35
---
Entry stack: [V11, 0x64, V54]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x64]

================================

Block 0xa6
[0xa6:0xac]
---
Predecessors: [0x41]
Successors: [0xad, 0xb1]
---
0xa6 JUMPDEST
0xa7 CALLVALUE
0xa8 ISZERO
0xa9 PUSH2 0xb1
0xac JUMPI
---
0xa6: JUMPDEST 
0xa7: V36 = CALLVALUE
0xa8: V37 = ISZERO V36
0xa9: V38 = 0xb1
0xac: JUMPI 0xb1 V37
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xad
[0xad:0xb0]
---
Predecessors: [0xa6]
Successors: []
---
0xad PUSH1 0x0
0xaf DUP1
0xb0 REVERT
---
0xad: V39 = 0x0
0xb0: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb1
[0xb1:0xdc]
---
Predecessors: [0xa6]
Successors: [0x104]
---
0xb1 JUMPDEST
0xb2 PUSH2 0xdd
0xb5 PUSH1 0x4
0xb7 DUP1
0xb8 DUP1
0xb9 CALLDATALOAD
0xba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcf AND
0xd0 SWAP1
0xd1 PUSH1 0x20
0xd3 ADD
0xd4 SWAP1
0xd5 SWAP2
0xd6 SWAP1
0xd7 POP
0xd8 POP
0xd9 PUSH2 0x104
0xdc JUMP
---
0xb1: JUMPDEST 
0xb2: V40 = 0xdd
0xb5: V41 = 0x4
0xb9: V42 = CALLDATALOAD 0x4
0xba: V43 = 0xffffffffffffffffffffffffffffffffffffffff
0xcf: V44 = AND 0xffffffffffffffffffffffffffffffffffffffff V42
0xd1: V45 = 0x20
0xd3: V46 = ADD 0x20 0x4
0xd9: V47 = 0x104
0xdc: JUMP 0x104
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xdd, V44]
Exit stack: [V11, 0xdd, V44]

================================

Block 0xdd
[0xdd:0xde]
---
Predecessors: [0x19b]
Successors: []
---
0xdd JUMPDEST
0xde STOP
---
0xdd: JUMPDEST 
0xde: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xdf
[0xdf:0x103]
---
Predecessors: [0x5c]
Successors: [0x64]
---
0xdf JUMPDEST
0xe0 PUSH1 0x0
0xe2 DUP1
0xe3 SWAP1
0xe4 SLOAD
0xe5 SWAP1
0xe6 PUSH2 0x100
0xe9 EXP
0xea SWAP1
0xeb DIV
0xec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x101 AND
0x102 DUP2
0x103 JUMP
---
0xdf: JUMPDEST 
0xe0: V48 = 0x0
0xe4: V49 = S[0x0]
0xe6: V50 = 0x100
0xe9: V51 = EXP 0x100 0x0
0xeb: V52 = DIV V49 0x1
0xec: V53 = 0xffffffffffffffffffffffffffffffffffffffff
0x101: V54 = AND 0xffffffffffffffffffffffffffffffffffffffff V52
0x103: JUMP 0x64
---
Entry stack: [V11, 0x64]
Stack pops: 1
Stack additions: [S0, V54]
Exit stack: [V11, 0x64, V54]

================================

Block 0x104
[0x104:0x15a]
---
Predecessors: [0xb1]
Successors: [0x15b, 0x15f]
---
0x104 JUMPDEST
0x105 PUSH1 0x0
0x107 DUP1
0x108 SWAP1
0x109 SLOAD
0x10a SWAP1
0x10b PUSH2 0x100
0x10e EXP
0x10f SWAP1
0x110 DIV
0x111 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x126 AND
0x127 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13c AND
0x13d CALLER
0x13e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x153 AND
0x154 EQ
0x155 ISZERO
0x156 ISZERO
0x157 PUSH2 0x15f
0x15a JUMPI
---
0x104: JUMPDEST 
0x105: V55 = 0x0
0x109: V56 = S[0x0]
0x10b: V57 = 0x100
0x10e: V58 = EXP 0x100 0x0
0x110: V59 = DIV V56 0x1
0x111: V60 = 0xffffffffffffffffffffffffffffffffffffffff
0x126: V61 = AND 0xffffffffffffffffffffffffffffffffffffffff V59
0x127: V62 = 0xffffffffffffffffffffffffffffffffffffffff
0x13c: V63 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0x13d: V64 = CALLER
0x13e: V65 = 0xffffffffffffffffffffffffffffffffffffffff
0x153: V66 = AND 0xffffffffffffffffffffffffffffffffffffffff V64
0x154: V67 = EQ V66 V63
0x155: V68 = ISZERO V67
0x156: V69 = ISZERO V68
0x157: V70 = 0x15f
0x15a: JUMPI 0x15f V69
---
Entry stack: [V11, 0xdd, V44]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdd, V44]

================================

Block 0x15b
[0x15b:0x15e]
---
Predecessors: [0x104]
Successors: []
---
0x15b PUSH1 0x0
0x15d DUP1
0x15e REVERT
---
0x15b: V71 = 0x0
0x15e: REVERT 0x0 0x0
---
Entry stack: [V11, 0xdd, V44]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdd, V44]

================================

Block 0x15f
[0x15f:0x196]
---
Predecessors: [0x104, 0x3a7]
Successors: [0x197, 0x19b]
---
0x15f JUMPDEST
0x160 PUSH1 0x0
0x162 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x177 AND
0x178 DUP2
0x179 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18e AND
0x18f EQ
0x190 ISZERO
0x191 ISZERO
0x192 ISZERO
0x193 PUSH2 0x19b
0x196 JUMPI
---
0x15f: JUMPDEST 
0x160: V72 = 0x0
0x162: V73 = 0xffffffffffffffffffffffffffffffffffffffff
0x177: V74 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x179: V75 = 0xffffffffffffffffffffffffffffffffffffffff
0x18e: V76 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0x18f: V77 = EQ V76 0x0
0x190: V78 = ISZERO V77
0x191: V79 = ISZERO V78
0x192: V80 = ISZERO V79
0x193: V81 = 0x19b
0x196: JUMPI 0x19b V80
---
Entry stack: [V11, 0xdd, V44]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xdd, V44]

================================

Block 0x197
[0x197:0x19a]
---
Predecessors: [0x15f]
Successors: []
---
0x197 PUSH1 0x0
0x199 DUP1
0x19a REVERT
---
0x197: V82 = 0x0
0x19a: REVERT 0x0 0x0
---
Entry stack: [V11, 0xdd, V44]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdd, V44]

================================

Block 0x19b
[0x19b:0x258]
---
Predecessors: [0x15f]
Successors: [0xdd]
---
0x19b JUMPDEST
0x19c DUP1
0x19d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b2 AND
0x1b3 PUSH1 0x0
0x1b5 DUP1
0x1b6 SWAP1
0x1b7 SLOAD
0x1b8 SWAP1
0x1b9 PUSH2 0x100
0x1bc EXP
0x1bd SWAP1
0x1be DIV
0x1bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d4 AND
0x1d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ea AND
0x1eb PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x20c PUSH1 0x40
0x20e MLOAD
0x20f PUSH1 0x40
0x211 MLOAD
0x212 DUP1
0x213 SWAP2
0x214 SUB
0x215 SWAP1
0x216 LOG3
0x217 DUP1
0x218 PUSH1 0x0
0x21a DUP1
0x21b PUSH2 0x100
0x21e EXP
0x21f DUP2
0x220 SLOAD
0x221 DUP2
0x222 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x237 MUL
0x238 NOT
0x239 AND
0x23a SWAP1
0x23b DUP4
0x23c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x251 AND
0x252 MUL
0x253 OR
0x254 SWAP1
0x255 SSTORE
0x256 POP
0x257 POP
0x258 JUMP
---
0x19b: JUMPDEST 
0x19d: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b2: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0x1b3: V85 = 0x0
0x1b7: V86 = S[0x0]
0x1b9: V87 = 0x100
0x1bc: V88 = EXP 0x100 0x0
0x1be: V89 = DIV V86 0x1
0x1bf: V90 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d4: V91 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0x1d5: V92 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ea: V93 = AND 0xffffffffffffffffffffffffffffffffffffffff V91
0x1eb: V94 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x20c: V95 = 0x40
0x20e: V96 = M[0x40]
0x20f: V97 = 0x40
0x211: V98 = M[0x40]
0x214: V99 = SUB V96 V98
0x216: LOG V98 V99 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V93 V84
0x218: V100 = 0x0
0x21b: V101 = 0x100
0x21e: V102 = EXP 0x100 0x0
0x220: V103 = S[0x0]
0x222: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x237: V105 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x238: V106 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x239: V107 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V103
0x23c: V108 = 0xffffffffffffffffffffffffffffffffffffffff
0x251: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0x252: V110 = MUL V109 0x1
0x253: V111 = OR V110 V107
0x255: S[0x0] = V111
0x258: JUMP 0xdd
---
Entry stack: [V11, 0xdd, V44]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x259
[0x259:0x291]
---
Predecessors: []
Successors: [0x292]
---
0x259 STOP
0x25a LOG1
0x25b PUSH6 0x627a7a723058
0x262 SHA3
0x263 MISSING 0xb7
0x264 PUSH3 0xe0718
0x268 MISSING 0xd9
0x269 MISSING 0xcc
0x26a DUP3
0x26b SWAP4
0x26c MISSING 0xba
0x26d MISSING 0xe3
0x26e PUSH23 0x873ed3f86bc79f76d6a0102b66b81c8a7a0c2b39002960
0x286 PUSH1 0x60
0x288 BLOCKHASH
0x289 MSTORE
0x28a PUSH1 0x4
0x28c CALLDATASIZE
0x28d LT
0x28e PUSH2 0x83
0x291 JUMPI
---
0x259: STOP 
0x25a: LOG S0 S1 S2
0x25b: V112 = 0x627a7a723058
0x262: V113 = SHA3 0x627a7a723058 S3
0x263: MISSING 0xb7
0x264: V114 = 0xe0718
0x268: MISSING 0xd9
0x269: MISSING 0xcc
0x26c: MISSING 0xba
0x26d: MISSING 0xe3
0x26e: V115 = 0x873ed3f86bc79f76d6a0102b66b81c8a7a0c2b39002960
0x286: V116 = 0x60
0x288: V117 = BLOCKHASH 0x60
0x289: M[V117] = 0x873ed3f86bc79f76d6a0102b66b81c8a7a0c2b39002960
0x28a: V118 = 0x4
0x28c: V119 = CALLDATASIZE
0x28d: V120 = LT V119 0x4
0x28e: V121 = 0x83
0x291: THROWI V120
---
Entry stack: []
Stack pops: 0
Stack additions: [V113, 0xe0718, S3, S0, S1, S2, S2]
Exit stack: []

================================

Block 0x292
[0x292:0x2c5]
---
Predecessors: [0x259]
Successors: [0x2c6]
---
0x292 PUSH1 0x0
0x294 CALLDATALOAD
0x295 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2b3 SWAP1
0x2b4 DIV
0x2b5 PUSH4 0xffffffff
0x2ba AND
0x2bb DUP1
0x2bc PUSH4 0x675f818e
0x2c1 EQ
0x2c2 PUSH2 0x88
0x2c5 JUMPI
---
0x292: V122 = 0x0
0x294: V123 = CALLDATALOAD 0x0
0x295: V124 = 0x100000000000000000000000000000000000000000000000000000000
0x2b4: V125 = DIV V123 0x100000000000000000000000000000000000000000000000000000000
0x2b5: V126 = 0xffffffff
0x2ba: V127 = AND 0xffffffff V125
0x2bc: V128 = 0x675f818e
0x2c1: V129 = EQ 0x675f818e V127
0x2c2: V130 = 0x88
0x2c5: THROWI V129
---
Entry stack: []
Stack pops: 0
Stack additions: [V127]
Exit stack: [V127]

================================

Block 0x2c6
[0x2c6:0x2d0]
---
Predecessors: [0x292]
Successors: [0x2d1]
---
0x2c6 DUP1
0x2c7 PUSH4 0x6deb515d
0x2cc EQ
0x2cd PUSH2 0xc1
0x2d0 JUMPI
---
0x2c7: V131 = 0x6deb515d
0x2cc: V132 = EQ 0x6deb515d V127
0x2cd: V133 = 0xc1
0x2d0: THROWI V132
---
Entry stack: [V127]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V127]

================================

Block 0x2d1
[0x2d1:0x2db]
---
Predecessors: [0x2c6]
Successors: [0x2dc]
---
0x2d1 DUP1
0x2d2 PUSH4 0x7de14129
0x2d7 EQ
0x2d8 PUSH2 0x11b
0x2db JUMPI
---
0x2d2: V134 = 0x7de14129
0x2d7: V135 = EQ 0x7de14129 V127
0x2d8: V136 = 0x11b
0x2db: THROWI V135
---
Entry stack: [V127]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V127]

================================

Block 0x2dc
[0x2dc:0x2e6]
---
Predecessors: [0x2d1]
Successors: [0x2e7]
---
0x2dc DUP1
0x2dd PUSH4 0x8da5cb5b
0x2e2 EQ
0x2e3 PUSH2 0x154
0x2e6 JUMPI
---
0x2dd: V137 = 0x8da5cb5b
0x2e2: V138 = EQ 0x8da5cb5b V127
0x2e3: V139 = 0x154
0x2e6: THROWI V138
---
Entry stack: [V127]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V127]

================================

Block 0x2e7
[0x2e7:0x2f1]
---
Predecessors: [0x2dc]
Successors: [0x2f2]
---
0x2e7 DUP1
0x2e8 PUSH4 0xa59af340
0x2ed EQ
0x2ee PUSH2 0x1a9
0x2f1 JUMPI
---
0x2e8: V140 = 0xa59af340
0x2ed: V141 = EQ 0xa59af340 V127
0x2ee: V142 = 0x1a9
0x2f1: THROWI V141
---
Entry stack: [V127]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V127]

================================

Block 0x2f2
[0x2f2:0x2fc]
---
Predecessors: [0x2e7]
Successors: [0x2fd]
---
0x2f2 DUP1
0x2f3 PUSH4 0xf2fde38b
0x2f8 EQ
0x2f9 PUSH2 0x1fa
0x2fc JUMPI
---
0x2f3: V143 = 0xf2fde38b
0x2f8: V144 = EQ 0xf2fde38b V127
0x2f9: V145 = 0x1fa
0x2fc: THROWI V144
---
Entry stack: [V127]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V127]

================================

Block 0x2fd
[0x2fd:0x307]
---
Predecessors: [0x2f2]
Successors: [0x308]
---
0x2fd DUP1
0x2fe PUSH4 0xf79acad3
0x303 EQ
0x304 PUSH2 0x233
0x307 JUMPI
---
0x2fe: V146 = 0xf79acad3
0x303: V147 = EQ 0xf79acad3 V127
0x304: V148 = 0x233
0x307: THROWI V147
---
Entry stack: [V127]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V127]

================================

Block 0x308
[0x308:0x313]
---
Predecessors: [0x2fd]
Successors: [0x314]
---
0x308 JUMPDEST
0x309 PUSH1 0x0
0x30b DUP1
0x30c REVERT
0x30d JUMPDEST
0x30e CALLVALUE
0x30f ISZERO
0x310 PUSH2 0x93
0x313 JUMPI
---
0x308: JUMPDEST 
0x309: V149 = 0x0
0x30c: REVERT 0x0 0x0
0x30d: JUMPDEST 
0x30e: V150 = CALLVALUE
0x30f: V151 = ISZERO V150
0x310: V152 = 0x93
0x313: THROWI V151
---
Entry stack: [V127]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x314
[0x314:0x34c]
---
Predecessors: [0x308]
Successors: [0x34d]
---
0x314 PUSH1 0x0
0x316 DUP1
0x317 REVERT
0x318 JUMPDEST
0x319 PUSH2 0xbf
0x31c PUSH1 0x4
0x31e DUP1
0x31f DUP1
0x320 CALLDATALOAD
0x321 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x336 AND
0x337 SWAP1
0x338 PUSH1 0x20
0x33a ADD
0x33b SWAP1
0x33c SWAP2
0x33d SWAP1
0x33e POP
0x33f POP
0x340 PUSH2 0x28d
0x343 JUMP
0x344 JUMPDEST
0x345 STOP
0x346 JUMPDEST
0x347 CALLVALUE
0x348 ISZERO
0x349 PUSH2 0xcc
0x34c JUMPI
---
0x314: V153 = 0x0
0x317: REVERT 0x0 0x0
0x318: JUMPDEST 
0x319: V154 = 0xbf
0x31c: V155 = 0x4
0x320: V156 = CALLDATALOAD 0x4
0x321: V157 = 0xffffffffffffffffffffffffffffffffffffffff
0x336: V158 = AND 0xffffffffffffffffffffffffffffffffffffffff V156
0x338: V159 = 0x20
0x33a: V160 = ADD 0x20 0x4
0x340: V161 = 0x28d
0x343: THROW 
0x344: JUMPDEST 
0x345: STOP 
0x346: JUMPDEST 
0x347: V162 = CALLVALUE
0x348: V163 = ISZERO V162
0x349: V164 = 0xcc
0x34c: THROWI V163
---
Entry stack: []
Stack pops: 0
Stack additions: [V158, 0xbf]
Exit stack: []

================================

Block 0x34d
[0x34d:0x3a6]
---
Predecessors: [0x314]
Successors: [0x3a7]
---
0x34d PUSH1 0x0
0x34f DUP1
0x350 REVERT
0x351 JUMPDEST
0x352 PUSH2 0x119
0x355 PUSH1 0x4
0x357 DUP1
0x358 DUP1
0x359 CALLDATALOAD
0x35a SWAP1
0x35b PUSH1 0x20
0x35d ADD
0x35e SWAP1
0x35f DUP3
0x360 ADD
0x361 DUP1
0x362 CALLDATALOAD
0x363 SWAP1
0x364 PUSH1 0x20
0x366 ADD
0x367 SWAP1
0x368 DUP1
0x369 DUP1
0x36a PUSH1 0x20
0x36c MUL
0x36d PUSH1 0x20
0x36f ADD
0x370 PUSH1 0x40
0x372 MLOAD
0x373 SWAP1
0x374 DUP2
0x375 ADD
0x376 PUSH1 0x40
0x378 MSTORE
0x379 DUP1
0x37a SWAP4
0x37b SWAP3
0x37c SWAP2
0x37d SWAP1
0x37e DUP2
0x37f DUP2
0x380 MSTORE
0x381 PUSH1 0x20
0x383 ADD
0x384 DUP4
0x385 DUP4
0x386 PUSH1 0x20
0x388 MUL
0x389 DUP1
0x38a DUP3
0x38b DUP5
0x38c CALLDATACOPY
0x38d DUP3
0x38e ADD
0x38f SWAP2
0x390 POP
0x391 POP
0x392 POP
0x393 POP
0x394 POP
0x395 POP
0x396 SWAP2
0x397 SWAP1
0x398 POP
0x399 POP
0x39a PUSH2 0x37d
0x39d JUMP
0x39e JUMPDEST
0x39f STOP
0x3a0 JUMPDEST
0x3a1 CALLVALUE
0x3a2 ISZERO
0x3a3 PUSH2 0x126
0x3a6 JUMPI
---
0x34d: V165 = 0x0
0x350: REVERT 0x0 0x0
0x351: JUMPDEST 
0x352: V166 = 0x119
0x355: V167 = 0x4
0x359: V168 = CALLDATALOAD 0x4
0x35b: V169 = 0x20
0x35d: V170 = ADD 0x20 0x4
0x360: V171 = ADD 0x4 V168
0x362: V172 = CALLDATALOAD V171
0x364: V173 = 0x20
0x366: V174 = ADD 0x20 V171
0x36a: V175 = 0x20
0x36c: V176 = MUL 0x20 V172
0x36d: V177 = 0x20
0x36f: V178 = ADD 0x20 V176
0x370: V179 = 0x40
0x372: V180 = M[0x40]
0x375: V181 = ADD V180 V178
0x376: V182 = 0x40
0x378: M[0x40] = V181
0x380: M[V180] = V172
0x381: V183 = 0x20
0x383: V184 = ADD 0x20 V180
0x386: V185 = 0x20
0x388: V186 = MUL 0x20 V172
0x38c: CALLDATACOPY V184 V174 V186
0x38e: V187 = ADD V184 V186
0x39a: V188 = 0x37d
0x39d: THROW 
0x39e: JUMPDEST 
0x39f: STOP 
0x3a0: JUMPDEST 
0x3a1: V189 = CALLVALUE
0x3a2: V190 = ISZERO V189
0x3a3: V191 = 0x126
0x3a6: THROWI V190
---
Entry stack: []
Stack pops: 0
Stack additions: [V180, 0x119]
Exit stack: []

================================

Block 0x3a7
[0x3a7:0x3df]
---
Predecessors: [0x34d]
Successors: [0x15f, 0x3e0]
---
0x3a7 PUSH1 0x0
0x3a9 DUP1
0x3aa REVERT
0x3ab JUMPDEST
0x3ac PUSH2 0x152
0x3af PUSH1 0x4
0x3b1 DUP1
0x3b2 DUP1
0x3b3 CALLDATALOAD
0x3b4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c9 AND
0x3ca SWAP1
0x3cb PUSH1 0x20
0x3cd ADD
0x3ce SWAP1
0x3cf SWAP2
0x3d0 SWAP1
0x3d1 POP
0x3d2 POP
0x3d3 PUSH2 0x4b9
0x3d6 JUMP
0x3d7 JUMPDEST
0x3d8 STOP
0x3d9 JUMPDEST
0x3da CALLVALUE
0x3db ISZERO
0x3dc PUSH2 0x15f
0x3df JUMPI
---
0x3a7: V192 = 0x0
0x3aa: REVERT 0x0 0x0
0x3ab: JUMPDEST 
0x3ac: V193 = 0x152
0x3af: V194 = 0x4
0x3b3: V195 = CALLDATALOAD 0x4
0x3b4: V196 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c9: V197 = AND 0xffffffffffffffffffffffffffffffffffffffff V195
0x3cb: V198 = 0x20
0x3cd: V199 = ADD 0x20 0x4
0x3d3: V200 = 0x4b9
0x3d6: THROW 
0x3d7: JUMPDEST 
0x3d8: STOP 
0x3d9: JUMPDEST 
0x3da: V201 = CALLVALUE
0x3db: V202 = ISZERO V201
0x3dc: V203 = 0x15f
0x3df: JUMPI 0x15f V202
---
Entry stack: []
Stack pops: 0
Stack additions: [V197, 0x152]
Exit stack: []

================================

Block 0x3e0
[0x3e0:0x434]
---
Predecessors: [0x3a7]
Successors: [0x435]
---
0x3e0 PUSH1 0x0
0x3e2 DUP1
0x3e3 REVERT
0x3e4 JUMPDEST
0x3e5 PUSH2 0x167
0x3e8 PUSH2 0x5b1
0x3eb JUMP
0x3ec JUMPDEST
0x3ed PUSH1 0x40
0x3ef MLOAD
0x3f0 DUP1
0x3f1 DUP3
0x3f2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x407 AND
0x408 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x41d AND
0x41e DUP2
0x41f MSTORE
0x420 PUSH1 0x20
0x422 ADD
0x423 SWAP2
0x424 POP
0x425 POP
0x426 PUSH1 0x40
0x428 MLOAD
0x429 DUP1
0x42a SWAP2
0x42b SUB
0x42c SWAP1
0x42d RETURN
0x42e JUMPDEST
0x42f CALLVALUE
0x430 ISZERO
0x431 PUSH2 0x1b4
0x434 JUMPI
---
0x3e0: V204 = 0x0
0x3e3: REVERT 0x0 0x0
0x3e4: JUMPDEST 
0x3e5: V205 = 0x167
0x3e8: V206 = 0x5b1
0x3eb: THROW 
0x3ec: JUMPDEST 
0x3ed: V207 = 0x40
0x3ef: V208 = M[0x40]
0x3f2: V209 = 0xffffffffffffffffffffffffffffffffffffffff
0x407: V210 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x408: V211 = 0xffffffffffffffffffffffffffffffffffffffff
0x41d: V212 = AND 0xffffffffffffffffffffffffffffffffffffffff V210
0x41f: M[V208] = V212
0x420: V213 = 0x20
0x422: V214 = ADD 0x20 V208
0x426: V215 = 0x40
0x428: V216 = M[0x40]
0x42b: V217 = SUB V214 V216
0x42d: RETURN V216 V217
0x42e: JUMPDEST 
0x42f: V218 = CALLVALUE
0x430: V219 = ISZERO V218
0x431: V220 = 0x1b4
0x434: THROWI V219
---
Entry stack: []
Stack pops: 0
Stack additions: [0x167]
Exit stack: []

================================

Block 0x435
[0x435:0x485]
---
Predecessors: [0x3e0]
Successors: [0x486]
---
0x435 PUSH1 0x0
0x437 DUP1
0x438 REVERT
0x439 JUMPDEST
0x43a PUSH2 0x1e0
0x43d PUSH1 0x4
0x43f DUP1
0x440 DUP1
0x441 CALLDATALOAD
0x442 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x457 AND
0x458 SWAP1
0x459 PUSH1 0x20
0x45b ADD
0x45c SWAP1
0x45d SWAP2
0x45e SWAP1
0x45f POP
0x460 POP
0x461 PUSH2 0x5d6
0x464 JUMP
0x465 JUMPDEST
0x466 PUSH1 0x40
0x468 MLOAD
0x469 DUP1
0x46a DUP3
0x46b ISZERO
0x46c ISZERO
0x46d ISZERO
0x46e ISZERO
0x46f DUP2
0x470 MSTORE
0x471 PUSH1 0x20
0x473 ADD
0x474 SWAP2
0x475 POP
0x476 POP
0x477 PUSH1 0x40
0x479 MLOAD
0x47a DUP1
0x47b SWAP2
0x47c SUB
0x47d SWAP1
0x47e RETURN
0x47f JUMPDEST
0x480 CALLVALUE
0x481 ISZERO
0x482 PUSH2 0x205
0x485 JUMPI
---
0x435: V221 = 0x0
0x438: REVERT 0x0 0x0
0x439: JUMPDEST 
0x43a: V222 = 0x1e0
0x43d: V223 = 0x4
0x441: V224 = CALLDATALOAD 0x4
0x442: V225 = 0xffffffffffffffffffffffffffffffffffffffff
0x457: V226 = AND 0xffffffffffffffffffffffffffffffffffffffff V224
0x459: V227 = 0x20
0x45b: V228 = ADD 0x20 0x4
0x461: V229 = 0x5d6
0x464: THROW 
0x465: JUMPDEST 
0x466: V230 = 0x40
0x468: V231 = M[0x40]
0x46b: V232 = ISZERO S0
0x46c: V233 = ISZERO V232
0x46d: V234 = ISZERO V233
0x46e: V235 = ISZERO V234
0x470: M[V231] = V235
0x471: V236 = 0x20
0x473: V237 = ADD 0x20 V231
0x477: V238 = 0x40
0x479: V239 = M[0x40]
0x47c: V240 = SUB V237 V239
0x47e: RETURN V239 V240
0x47f: JUMPDEST 
0x480: V241 = CALLVALUE
0x481: V242 = ISZERO V241
0x482: V243 = 0x205
0x485: THROWI V242
---
Entry stack: []
Stack pops: 0
Stack additions: [V226, 0x1e0]
Exit stack: []

================================

Block 0x486
[0x486:0x4be]
---
Predecessors: [0x435]
Successors: [0x4bf]
---
0x486 PUSH1 0x0
0x488 DUP1
0x489 REVERT
0x48a JUMPDEST
0x48b PUSH2 0x231
0x48e PUSH1 0x4
0x490 DUP1
0x491 DUP1
0x492 CALLDATALOAD
0x493 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4a8 AND
0x4a9 SWAP1
0x4aa PUSH1 0x20
0x4ac ADD
0x4ad SWAP1
0x4ae SWAP2
0x4af SWAP1
0x4b0 POP
0x4b1 POP
0x4b2 PUSH2 0x5f6
0x4b5 JUMP
0x4b6 JUMPDEST
0x4b7 STOP
0x4b8 JUMPDEST
0x4b9 CALLVALUE
0x4ba ISZERO
0x4bb PUSH2 0x23e
0x4be JUMPI
---
0x486: V244 = 0x0
0x489: REVERT 0x0 0x0
0x48a: JUMPDEST 
0x48b: V245 = 0x231
0x48e: V246 = 0x4
0x492: V247 = CALLDATALOAD 0x4
0x493: V248 = 0xffffffffffffffffffffffffffffffffffffffff
0x4a8: V249 = AND 0xffffffffffffffffffffffffffffffffffffffff V247
0x4aa: V250 = 0x20
0x4ac: V251 = ADD 0x20 0x4
0x4b2: V252 = 0x5f6
0x4b5: THROW 
0x4b6: JUMPDEST 
0x4b7: STOP 
0x4b8: JUMPDEST 
0x4b9: V253 = CALLVALUE
0x4ba: V254 = ISZERO V253
0x4bb: V255 = 0x23e
0x4be: THROWI V254
---
Entry stack: []
Stack pops: 0
Stack additions: [V249, 0x231]
Exit stack: []

================================

Block 0x4bf
[0x4bf:0x568]
---
Predecessors: [0x486]
Successors: [0x569]
---
0x4bf PUSH1 0x0
0x4c1 DUP1
0x4c2 REVERT
0x4c3 JUMPDEST
0x4c4 PUSH2 0x28b
0x4c7 PUSH1 0x4
0x4c9 DUP1
0x4ca DUP1
0x4cb CALLDATALOAD
0x4cc SWAP1
0x4cd PUSH1 0x20
0x4cf ADD
0x4d0 SWAP1
0x4d1 DUP3
0x4d2 ADD
0x4d3 DUP1
0x4d4 CALLDATALOAD
0x4d5 SWAP1
0x4d6 PUSH1 0x20
0x4d8 ADD
0x4d9 SWAP1
0x4da DUP1
0x4db DUP1
0x4dc PUSH1 0x20
0x4de MUL
0x4df PUSH1 0x20
0x4e1 ADD
0x4e2 PUSH1 0x40
0x4e4 MLOAD
0x4e5 SWAP1
0x4e6 DUP2
0x4e7 ADD
0x4e8 PUSH1 0x40
0x4ea MSTORE
0x4eb DUP1
0x4ec SWAP4
0x4ed SWAP3
0x4ee SWAP2
0x4ef SWAP1
0x4f0 DUP2
0x4f1 DUP2
0x4f2 MSTORE
0x4f3 PUSH1 0x20
0x4f5 ADD
0x4f6 DUP4
0x4f7 DUP4
0x4f8 PUSH1 0x20
0x4fa MUL
0x4fb DUP1
0x4fc DUP3
0x4fd DUP5
0x4fe CALLDATACOPY
0x4ff DUP3
0x500 ADD
0x501 SWAP2
0x502 POP
0x503 POP
0x504 POP
0x505 POP
0x506 POP
0x507 POP
0x508 SWAP2
0x509 SWAP1
0x50a POP
0x50b POP
0x50c PUSH2 0x74b
0x50f JUMP
0x510 JUMPDEST
0x511 STOP
0x512 JUMPDEST
0x513 PUSH1 0x0
0x515 DUP1
0x516 SWAP1
0x517 SLOAD
0x518 SWAP1
0x519 PUSH2 0x100
0x51c EXP
0x51d SWAP1
0x51e DIV
0x51f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x534 AND
0x535 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x54a AND
0x54b CALLER
0x54c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x561 AND
0x562 EQ
0x563 ISZERO
0x564 ISZERO
0x565 PUSH2 0x2e8
0x568 JUMPI
---
0x4bf: V256 = 0x0
0x4c2: REVERT 0x0 0x0
0x4c3: JUMPDEST 
0x4c4: V257 = 0x28b
0x4c7: V258 = 0x4
0x4cb: V259 = CALLDATALOAD 0x4
0x4cd: V260 = 0x20
0x4cf: V261 = ADD 0x20 0x4
0x4d2: V262 = ADD 0x4 V259
0x4d4: V263 = CALLDATALOAD V262
0x4d6: V264 = 0x20
0x4d8: V265 = ADD 0x20 V262
0x4dc: V266 = 0x20
0x4de: V267 = MUL 0x20 V263
0x4df: V268 = 0x20
0x4e1: V269 = ADD 0x20 V267
0x4e2: V270 = 0x40
0x4e4: V271 = M[0x40]
0x4e7: V272 = ADD V271 V269
0x4e8: V273 = 0x40
0x4ea: M[0x40] = V272
0x4f2: M[V271] = V263
0x4f3: V274 = 0x20
0x4f5: V275 = ADD 0x20 V271
0x4f8: V276 = 0x20
0x4fa: V277 = MUL 0x20 V263
0x4fe: CALLDATACOPY V275 V265 V277
0x500: V278 = ADD V275 V277
0x50c: V279 = 0x74b
0x50f: THROW 
0x510: JUMPDEST 
0x511: STOP 
0x512: JUMPDEST 
0x513: V280 = 0x0
0x517: V281 = S[0x0]
0x519: V282 = 0x100
0x51c: V283 = EXP 0x100 0x0
0x51e: V284 = DIV V281 0x1
0x51f: V285 = 0xffffffffffffffffffffffffffffffffffffffff
0x534: V286 = AND 0xffffffffffffffffffffffffffffffffffffffff V284
0x535: V287 = 0xffffffffffffffffffffffffffffffffffffffff
0x54a: V288 = AND 0xffffffffffffffffffffffffffffffffffffffff V286
0x54b: V289 = CALLER
0x54c: V290 = 0xffffffffffffffffffffffffffffffffffffffff
0x561: V291 = AND 0xffffffffffffffffffffffffffffffffffffffff V289
0x562: V292 = EQ V291 V288
0x563: V293 = ISZERO V292
0x564: V294 = ISZERO V293
0x565: V295 = 0x2e8
0x568: THROWI V294
---
Entry stack: []
Stack pops: 0
Stack additions: [V271, 0x28b]
Exit stack: []

================================

Block 0x569
[0x569:0x65a]
---
Predecessors: [0x4bf]
Successors: [0x65b]
---
0x569 PUSH1 0x0
0x56b DUP1
0x56c REVERT
0x56d JUMPDEST
0x56e PUSH1 0x1
0x570 PUSH1 0x0
0x572 DUP3
0x573 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x588 AND
0x589 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x59e AND
0x59f DUP2
0x5a0 MSTORE
0x5a1 PUSH1 0x20
0x5a3 ADD
0x5a4 SWAP1
0x5a5 DUP2
0x5a6 MSTORE
0x5a7 PUSH1 0x20
0x5a9 ADD
0x5aa PUSH1 0x0
0x5ac SHA3
0x5ad PUSH1 0x0
0x5af PUSH2 0x100
0x5b2 EXP
0x5b3 DUP2
0x5b4 SLOAD
0x5b5 SWAP1
0x5b6 PUSH1 0xff
0x5b8 MUL
0x5b9 NOT
0x5ba AND
0x5bb SWAP1
0x5bc SSTORE
0x5bd DUP1
0x5be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d3 AND
0x5d4 PUSH32 0x397e549cd5c892fc5a94e2bdf95875a84a2298a36b47123ad898f3ca3af496e8
0x5f5 PUSH1 0x40
0x5f7 MLOAD
0x5f8 PUSH1 0x40
0x5fa MLOAD
0x5fb DUP1
0x5fc SWAP2
0x5fd SUB
0x5fe SWAP1
0x5ff LOG2
0x600 POP
0x601 JUMP
0x602 JUMPDEST
0x603 PUSH1 0x0
0x605 DUP1
0x606 PUSH1 0x0
0x608 SWAP1
0x609 SLOAD
0x60a SWAP1
0x60b PUSH2 0x100
0x60e EXP
0x60f SWAP1
0x610 DIV
0x611 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x626 AND
0x627 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x63c AND
0x63d CALLER
0x63e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x653 AND
0x654 EQ
0x655 ISZERO
0x656 ISZERO
0x657 PUSH2 0x3da
0x65a JUMPI
---
0x569: V296 = 0x0
0x56c: REVERT 0x0 0x0
0x56d: JUMPDEST 
0x56e: V297 = 0x1
0x570: V298 = 0x0
0x573: V299 = 0xffffffffffffffffffffffffffffffffffffffff
0x588: V300 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x589: V301 = 0xffffffffffffffffffffffffffffffffffffffff
0x59e: V302 = AND 0xffffffffffffffffffffffffffffffffffffffff V300
0x5a0: M[0x0] = V302
0x5a1: V303 = 0x20
0x5a3: V304 = ADD 0x20 0x0
0x5a6: M[0x20] = 0x1
0x5a7: V305 = 0x20
0x5a9: V306 = ADD 0x20 0x20
0x5aa: V307 = 0x0
0x5ac: V308 = SHA3 0x0 0x40
0x5ad: V309 = 0x0
0x5af: V310 = 0x100
0x5b2: V311 = EXP 0x100 0x0
0x5b4: V312 = S[V308]
0x5b6: V313 = 0xff
0x5b8: V314 = MUL 0xff 0x1
0x5b9: V315 = NOT 0xff
0x5ba: V316 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V312
0x5bc: S[V308] = V316
0x5be: V317 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d3: V318 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x5d4: V319 = 0x397e549cd5c892fc5a94e2bdf95875a84a2298a36b47123ad898f3ca3af496e8
0x5f5: V320 = 0x40
0x5f7: V321 = M[0x40]
0x5f8: V322 = 0x40
0x5fa: V323 = M[0x40]
0x5fd: V324 = SUB V321 V323
0x5ff: LOG V323 V324 0x397e549cd5c892fc5a94e2bdf95875a84a2298a36b47123ad898f3ca3af496e8 V318
0x601: JUMP S1
0x602: JUMPDEST 
0x603: V325 = 0x0
0x606: V326 = 0x0
0x609: V327 = S[0x0]
0x60b: V328 = 0x100
0x60e: V329 = EXP 0x100 0x0
0x610: V330 = DIV V327 0x1
0x611: V331 = 0xffffffffffffffffffffffffffffffffffffffff
0x626: V332 = AND 0xffffffffffffffffffffffffffffffffffffffff V330
0x627: V333 = 0xffffffffffffffffffffffffffffffffffffffff
0x63c: V334 = AND 0xffffffffffffffffffffffffffffffffffffffff V332
0x63d: V335 = CALLER
0x63e: V336 = 0xffffffffffffffffffffffffffffffffffffffff
0x653: V337 = AND 0xffffffffffffffffffffffffffffffffffffffff V335
0x654: V338 = EQ V337 V334
0x655: V339 = ISZERO V338
0x656: V340 = ISZERO V339
0x657: V341 = 0x3da
0x65a: THROWI V340
---
Entry stack: []
Stack pops: 0
Stack additions: [0x0]
Exit stack: []

================================

Block 0x65b
[0x65b:0x663]
---
Predecessors: [0x569]
Successors: [0x664]
---
0x65b PUSH1 0x0
0x65d DUP1
0x65e REVERT
0x65f JUMPDEST
0x660 PUSH1 0x0
0x662 SWAP1
0x663 POP
---
0x65b: V342 = 0x0
0x65e: REVERT 0x0 0x0
0x65f: JUMPDEST 
0x660: V343 = 0x0
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: []

================================

Block 0x664
[0x664:0x66d]
---
Predecessors: [0x65b]
Successors: [0x66e]
---
0x664 JUMPDEST
0x665 DUP2
0x666 MLOAD
0x667 DUP2
0x668 LT
0x669 ISZERO
0x66a PUSH2 0x4b5
0x66d JUMPI
---
0x664: JUMPDEST 
0x666: V344 = M[S1]
0x668: V345 = LT 0x0 V344
0x669: V346 = ISZERO V345
0x66a: V347 = 0x4b5
0x66d: THROWI V346
---
Entry stack: [0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [S0, 0x0]

================================

Block 0x66e
[0x66e:0x67d]
---
Predecessors: [0x664]
Successors: [0x67e]
---
0x66e PUSH1 0x1
0x670 PUSH1 0x0
0x672 DUP4
0x673 DUP4
0x674 DUP2
0x675 MLOAD
0x676 DUP2
0x677 LT
0x678 ISZERO
0x679 ISZERO
0x67a PUSH2 0x3fa
0x67d JUMPI
---
0x66e: V348 = 0x1
0x670: V349 = 0x0
0x675: V350 = M[S1]
0x677: V351 = LT 0x0 V350
0x678: V352 = ISZERO V351
0x679: V353 = ISZERO V352
0x67a: V354 = 0x3fa
0x67d: THROWI V353
---
Entry stack: [S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0x1, 0x0, S1, S0]
Exit stack: [S1, 0x0, 0x1, 0x0, S1, 0x0]

================================

Block 0x67e
[0x67e:0x6df]
---
Predecessors: [0x66e]
Successors: [0x6e0]
---
0x67e INVALID
0x67f JUMPDEST
0x680 SWAP1
0x681 PUSH1 0x20
0x683 ADD
0x684 SWAP1
0x685 PUSH1 0x20
0x687 MUL
0x688 ADD
0x689 MLOAD
0x68a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x69f AND
0x6a0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6b5 AND
0x6b6 DUP2
0x6b7 MSTORE
0x6b8 PUSH1 0x20
0x6ba ADD
0x6bb SWAP1
0x6bc DUP2
0x6bd MSTORE
0x6be PUSH1 0x20
0x6c0 ADD
0x6c1 PUSH1 0x0
0x6c3 SHA3
0x6c4 PUSH1 0x0
0x6c6 PUSH2 0x100
0x6c9 EXP
0x6ca DUP2
0x6cb SLOAD
0x6cc SWAP1
0x6cd PUSH1 0xff
0x6cf MUL
0x6d0 NOT
0x6d1 AND
0x6d2 SWAP1
0x6d3 SSTORE
0x6d4 DUP2
0x6d5 DUP2
0x6d6 DUP2
0x6d7 MLOAD
0x6d8 DUP2
0x6d9 LT
0x6da ISZERO
0x6db ISZERO
0x6dc PUSH2 0x45c
0x6df JUMPI
---
0x67e: INVALID 
0x67f: JUMPDEST 
0x681: V355 = 0x20
0x683: V356 = ADD 0x20 S1
0x685: V357 = 0x20
0x687: V358 = MUL 0x20 S0
0x688: V359 = ADD V358 V356
0x689: V360 = M[V359]
0x68a: V361 = 0xffffffffffffffffffffffffffffffffffffffff
0x69f: V362 = AND 0xffffffffffffffffffffffffffffffffffffffff V360
0x6a0: V363 = 0xffffffffffffffffffffffffffffffffffffffff
0x6b5: V364 = AND 0xffffffffffffffffffffffffffffffffffffffff V362
0x6b7: M[S2] = V364
0x6b8: V365 = 0x20
0x6ba: V366 = ADD 0x20 S2
0x6bd: M[V366] = S3
0x6be: V367 = 0x20
0x6c0: V368 = ADD 0x20 V366
0x6c1: V369 = 0x0
0x6c3: V370 = SHA3 0x0 V368
0x6c4: V371 = 0x0
0x6c6: V372 = 0x100
0x6c9: V373 = EXP 0x100 0x0
0x6cb: V374 = S[V370]
0x6cd: V375 = 0xff
0x6cf: V376 = MUL 0xff 0x1
0x6d0: V377 = NOT 0xff
0x6d1: V378 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V374
0x6d3: S[V370] = V378
0x6d7: V379 = M[S5]
0x6d9: V380 = LT S4 V379
0x6da: V381 = ISZERO V380
0x6db: V382 = ISZERO V381
0x6dc: V383 = 0x45c
0x6df: THROWI V382
---
Entry stack: [S5, 0x0, 0x1, 0x0, S1, 0x0]
Stack pops: 0
Stack additions: [S4, S5, S4, S5]
Exit stack: []

================================

Block 0x6e0
[0x6e0:0x794]
---
Predecessors: [0x67e]
Successors: [0x795]
---
0x6e0 INVALID
0x6e1 JUMPDEST
0x6e2 SWAP1
0x6e3 PUSH1 0x20
0x6e5 ADD
0x6e6 SWAP1
0x6e7 PUSH1 0x20
0x6e9 MUL
0x6ea ADD
0x6eb MLOAD
0x6ec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x701 AND
0x702 PUSH32 0x397e549cd5c892fc5a94e2bdf95875a84a2298a36b47123ad898f3ca3af496e8
0x723 PUSH1 0x40
0x725 MLOAD
0x726 PUSH1 0x40
0x728 MLOAD
0x729 DUP1
0x72a SWAP2
0x72b SUB
0x72c SWAP1
0x72d LOG2
0x72e DUP1
0x72f DUP1
0x730 PUSH1 0x1
0x732 ADD
0x733 SWAP2
0x734 POP
0x735 POP
0x736 PUSH2 0x3df
0x739 JUMP
0x73a JUMPDEST
0x73b POP
0x73c POP
0x73d JUMP
0x73e JUMPDEST
0x73f PUSH1 0x0
0x741 DUP1
0x742 SWAP1
0x743 SLOAD
0x744 SWAP1
0x745 PUSH2 0x100
0x748 EXP
0x749 SWAP1
0x74a DIV
0x74b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x760 AND
0x761 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x776 AND
0x777 CALLER
0x778 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x78d AND
0x78e EQ
0x78f ISZERO
0x790 ISZERO
0x791 PUSH2 0x514
0x794 JUMPI
---
0x6e0: INVALID 
0x6e1: JUMPDEST 
0x6e3: V384 = 0x20
0x6e5: V385 = ADD 0x20 S1
0x6e7: V386 = 0x20
0x6e9: V387 = MUL 0x20 S0
0x6ea: V388 = ADD V387 V385
0x6eb: V389 = M[V388]
0x6ec: V390 = 0xffffffffffffffffffffffffffffffffffffffff
0x701: V391 = AND 0xffffffffffffffffffffffffffffffffffffffff V389
0x702: V392 = 0x397e549cd5c892fc5a94e2bdf95875a84a2298a36b47123ad898f3ca3af496e8
0x723: V393 = 0x40
0x725: V394 = M[0x40]
0x726: V395 = 0x40
0x728: V396 = M[0x40]
0x72b: V397 = SUB V394 V396
0x72d: LOG V396 V397 0x397e549cd5c892fc5a94e2bdf95875a84a2298a36b47123ad898f3ca3af496e8 V391
0x730: V398 = 0x1
0x732: V399 = ADD 0x1 S2
0x736: V400 = 0x3df
0x739: THROW 
0x73a: JUMPDEST 
0x73d: JUMP S2
0x73e: JUMPDEST 
0x73f: V401 = 0x0
0x743: V402 = S[0x0]
0x745: V403 = 0x100
0x748: V404 = EXP 0x100 0x0
0x74a: V405 = DIV V402 0x1
0x74b: V406 = 0xffffffffffffffffffffffffffffffffffffffff
0x760: V407 = AND 0xffffffffffffffffffffffffffffffffffffffff V405
0x761: V408 = 0xffffffffffffffffffffffffffffffffffffffff
0x776: V409 = AND 0xffffffffffffffffffffffffffffffffffffffff V407
0x777: V410 = CALLER
0x778: V411 = 0xffffffffffffffffffffffffffffffffffffffff
0x78d: V412 = AND 0xffffffffffffffffffffffffffffffffffffffff V410
0x78e: V413 = EQ V412 V409
0x78f: V414 = ISZERO V413
0x790: V415 = ISZERO V414
0x791: V416 = 0x514
0x794: THROWI V415
---
Entry stack: [S3, S2, S1, S0]
Stack pops: 0
Stack additions: [V399]
Exit stack: []

================================

Block 0x795
[0x795:0x8d1]
---
Predecessors: [0x6e0]
Successors: [0x8d2]
---
0x795 PUSH1 0x0
0x797 DUP1
0x798 REVERT
0x799 JUMPDEST
0x79a PUSH1 0x1
0x79c DUP1
0x79d PUSH1 0x0
0x79f DUP4
0x7a0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7b5 AND
0x7b6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7cb AND
0x7cc DUP2
0x7cd MSTORE
0x7ce PUSH1 0x20
0x7d0 ADD
0x7d1 SWAP1
0x7d2 DUP2
0x7d3 MSTORE
0x7d4 PUSH1 0x20
0x7d6 ADD
0x7d7 PUSH1 0x0
0x7d9 SHA3
0x7da PUSH1 0x0
0x7dc PUSH2 0x100
0x7df EXP
0x7e0 DUP2
0x7e1 SLOAD
0x7e2 DUP2
0x7e3 PUSH1 0xff
0x7e5 MUL
0x7e6 NOT
0x7e7 AND
0x7e8 SWAP1
0x7e9 DUP4
0x7ea ISZERO
0x7eb ISZERO
0x7ec MUL
0x7ed OR
0x7ee SWAP1
0x7ef SSTORE
0x7f0 POP
0x7f1 DUP1
0x7f2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x807 AND
0x808 PUSH32 0x5d91bd0cecc45fef102af61de92c5462fadc884a5ce9d21c15e8a85198f2349e
0x829 PUSH1 0x40
0x82b MLOAD
0x82c PUSH1 0x40
0x82e MLOAD
0x82f DUP1
0x830 SWAP2
0x831 SUB
0x832 SWAP1
0x833 LOG2
0x834 POP
0x835 JUMP
0x836 JUMPDEST
0x837 PUSH1 0x0
0x839 DUP1
0x83a SWAP1
0x83b SLOAD
0x83c SWAP1
0x83d PUSH2 0x100
0x840 EXP
0x841 SWAP1
0x842 DIV
0x843 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x858 AND
0x859 DUP2
0x85a JUMP
0x85b JUMPDEST
0x85c PUSH1 0x1
0x85e PUSH1 0x20
0x860 MSTORE
0x861 DUP1
0x862 PUSH1 0x0
0x864 MSTORE
0x865 PUSH1 0x40
0x867 PUSH1 0x0
0x869 SHA3
0x86a PUSH1 0x0
0x86c SWAP2
0x86d POP
0x86e SLOAD
0x86f SWAP1
0x870 PUSH2 0x100
0x873 EXP
0x874 SWAP1
0x875 DIV
0x876 PUSH1 0xff
0x878 AND
0x879 DUP2
0x87a JUMP
0x87b JUMPDEST
0x87c PUSH1 0x0
0x87e DUP1
0x87f SWAP1
0x880 SLOAD
0x881 SWAP1
0x882 PUSH2 0x100
0x885 EXP
0x886 SWAP1
0x887 DIV
0x888 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x89d AND
0x89e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8b3 AND
0x8b4 CALLER
0x8b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8ca AND
0x8cb EQ
0x8cc ISZERO
0x8cd ISZERO
0x8ce PUSH2 0x651
0x8d1 JUMPI
---
0x795: V417 = 0x0
0x798: REVERT 0x0 0x0
0x799: JUMPDEST 
0x79a: V418 = 0x1
0x79d: V419 = 0x0
0x7a0: V420 = 0xffffffffffffffffffffffffffffffffffffffff
0x7b5: V421 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x7b6: V422 = 0xffffffffffffffffffffffffffffffffffffffff
0x7cb: V423 = AND 0xffffffffffffffffffffffffffffffffffffffff V421
0x7cd: M[0x0] = V423
0x7ce: V424 = 0x20
0x7d0: V425 = ADD 0x20 0x0
0x7d3: M[0x20] = 0x1
0x7d4: V426 = 0x20
0x7d6: V427 = ADD 0x20 0x20
0x7d7: V428 = 0x0
0x7d9: V429 = SHA3 0x0 0x40
0x7da: V430 = 0x0
0x7dc: V431 = 0x100
0x7df: V432 = EXP 0x100 0x0
0x7e1: V433 = S[V429]
0x7e3: V434 = 0xff
0x7e5: V435 = MUL 0xff 0x1
0x7e6: V436 = NOT 0xff
0x7e7: V437 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V433
0x7ea: V438 = ISZERO 0x1
0x7eb: V439 = ISZERO 0x0
0x7ec: V440 = MUL 0x1 0x1
0x7ed: V441 = OR 0x1 V437
0x7ef: S[V429] = V441
0x7f2: V442 = 0xffffffffffffffffffffffffffffffffffffffff
0x807: V443 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x808: V444 = 0x5d91bd0cecc45fef102af61de92c5462fadc884a5ce9d21c15e8a85198f2349e
0x829: V445 = 0x40
0x82b: V446 = M[0x40]
0x82c: V447 = 0x40
0x82e: V448 = M[0x40]
0x831: V449 = SUB V446 V448
0x833: LOG V448 V449 0x5d91bd0cecc45fef102af61de92c5462fadc884a5ce9d21c15e8a85198f2349e V443
0x835: JUMP S1
0x836: JUMPDEST 
0x837: V450 = 0x0
0x83b: V451 = S[0x0]
0x83d: V452 = 0x100
0x840: V453 = EXP 0x100 0x0
0x842: V454 = DIV V451 0x1
0x843: V455 = 0xffffffffffffffffffffffffffffffffffffffff
0x858: V456 = AND 0xffffffffffffffffffffffffffffffffffffffff V454
0x85a: JUMP S0
0x85b: JUMPDEST 
0x85c: V457 = 0x1
0x85e: V458 = 0x20
0x860: M[0x20] = 0x1
0x862: V459 = 0x0
0x864: M[0x0] = S0
0x865: V460 = 0x40
0x867: V461 = 0x0
0x869: V462 = SHA3 0x0 0x40
0x86a: V463 = 0x0
0x86e: V464 = S[V462]
0x870: V465 = 0x100
0x873: V466 = EXP 0x100 0x0
0x875: V467 = DIV V464 0x1
0x876: V468 = 0xff
0x878: V469 = AND 0xff V467
0x87a: JUMP S1
0x87b: JUMPDEST 
0x87c: V470 = 0x0
0x880: V471 = S[0x0]
0x882: V472 = 0x100
0x885: V473 = EXP 0x100 0x0
0x887: V474 = DIV V471 0x1
0x888: V475 = 0xffffffffffffffffffffffffffffffffffffffff
0x89d: V476 = AND 0xffffffffffffffffffffffffffffffffffffffff V474
0x89e: V477 = 0xffffffffffffffffffffffffffffffffffffffff
0x8b3: V478 = AND 0xffffffffffffffffffffffffffffffffffffffff V476
0x8b4: V479 = CALLER
0x8b5: V480 = 0xffffffffffffffffffffffffffffffffffffffff
0x8ca: V481 = AND 0xffffffffffffffffffffffffffffffffffffffff V479
0x8cb: V482 = EQ V481 V478
0x8cc: V483 = ISZERO V482
0x8cd: V484 = ISZERO V483
0x8ce: V485 = 0x651
0x8d1: THROWI V484
---
Entry stack: []
Stack pops: 0
Stack additions: [V456, S0, V469, S1]
Exit stack: []

================================

Block 0x8d2
[0x8d2:0x90d]
---
Predecessors: [0x795]
Successors: [0x90e]
---
0x8d2 PUSH1 0x0
0x8d4 DUP1
0x8d5 REVERT
0x8d6 JUMPDEST
0x8d7 PUSH1 0x0
0x8d9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8ee AND
0x8ef DUP2
0x8f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x905 AND
0x906 EQ
0x907 ISZERO
0x908 ISZERO
0x909 ISZERO
0x90a PUSH2 0x68d
0x90d JUMPI
---
0x8d2: V486 = 0x0
0x8d5: REVERT 0x0 0x0
0x8d6: JUMPDEST 
0x8d7: V487 = 0x0
0x8d9: V488 = 0xffffffffffffffffffffffffffffffffffffffff
0x8ee: V489 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x8f0: V490 = 0xffffffffffffffffffffffffffffffffffffffff
0x905: V491 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x906: V492 = EQ V491 0x0
0x907: V493 = ISZERO V492
0x908: V494 = ISZERO V493
0x909: V495 = ISZERO V494
0x90a: V496 = 0x68d
0x90d: THROWI V495
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x90e
[0x90e:0xa28]
---
Predecessors: [0x8d2]
Successors: [0xa29]
---
0x90e PUSH1 0x0
0x910 DUP1
0x911 REVERT
0x912 JUMPDEST
0x913 DUP1
0x914 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x929 AND
0x92a PUSH1 0x0
0x92c DUP1
0x92d SWAP1
0x92e SLOAD
0x92f SWAP1
0x930 PUSH2 0x100
0x933 EXP
0x934 SWAP1
0x935 DIV
0x936 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x94b AND
0x94c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x961 AND
0x962 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x983 PUSH1 0x40
0x985 MLOAD
0x986 PUSH1 0x40
0x988 MLOAD
0x989 DUP1
0x98a SWAP2
0x98b SUB
0x98c SWAP1
0x98d LOG3
0x98e DUP1
0x98f PUSH1 0x0
0x991 DUP1
0x992 PUSH2 0x100
0x995 EXP
0x996 DUP2
0x997 SLOAD
0x998 DUP2
0x999 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9ae MUL
0x9af NOT
0x9b0 AND
0x9b1 SWAP1
0x9b2 DUP4
0x9b3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9c8 AND
0x9c9 MUL
0x9ca OR
0x9cb SWAP1
0x9cc SSTORE
0x9cd POP
0x9ce POP
0x9cf JUMP
0x9d0 JUMPDEST
0x9d1 PUSH1 0x0
0x9d3 DUP1
0x9d4 PUSH1 0x0
0x9d6 SWAP1
0x9d7 SLOAD
0x9d8 SWAP1
0x9d9 PUSH2 0x100
0x9dc EXP
0x9dd SWAP1
0x9de DIV
0x9df PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9f4 AND
0x9f5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa0a AND
0xa0b CALLER
0xa0c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa21 AND
0xa22 EQ
0xa23 ISZERO
0xa24 ISZERO
0xa25 PUSH2 0x7a8
0xa28 JUMPI
---
0x90e: V497 = 0x0
0x911: REVERT 0x0 0x0
0x912: JUMPDEST 
0x914: V498 = 0xffffffffffffffffffffffffffffffffffffffff
0x929: V499 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x92a: V500 = 0x0
0x92e: V501 = S[0x0]
0x930: V502 = 0x100
0x933: V503 = EXP 0x100 0x0
0x935: V504 = DIV V501 0x1
0x936: V505 = 0xffffffffffffffffffffffffffffffffffffffff
0x94b: V506 = AND 0xffffffffffffffffffffffffffffffffffffffff V504
0x94c: V507 = 0xffffffffffffffffffffffffffffffffffffffff
0x961: V508 = AND 0xffffffffffffffffffffffffffffffffffffffff V506
0x962: V509 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x983: V510 = 0x40
0x985: V511 = M[0x40]
0x986: V512 = 0x40
0x988: V513 = M[0x40]
0x98b: V514 = SUB V511 V513
0x98d: LOG V513 V514 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V508 V499
0x98f: V515 = 0x0
0x992: V516 = 0x100
0x995: V517 = EXP 0x100 0x0
0x997: V518 = S[0x0]
0x999: V519 = 0xffffffffffffffffffffffffffffffffffffffff
0x9ae: V520 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x9af: V521 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x9b0: V522 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V518
0x9b3: V523 = 0xffffffffffffffffffffffffffffffffffffffff
0x9c8: V524 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x9c9: V525 = MUL V524 0x1
0x9ca: V526 = OR V525 V522
0x9cc: S[0x0] = V526
0x9cf: JUMP S1
0x9d0: JUMPDEST 
0x9d1: V527 = 0x0
0x9d4: V528 = 0x0
0x9d7: V529 = S[0x0]
0x9d9: V530 = 0x100
0x9dc: V531 = EXP 0x100 0x0
0x9de: V532 = DIV V529 0x1
0x9df: V533 = 0xffffffffffffffffffffffffffffffffffffffff
0x9f4: V534 = AND 0xffffffffffffffffffffffffffffffffffffffff V532
0x9f5: V535 = 0xffffffffffffffffffffffffffffffffffffffff
0xa0a: V536 = AND 0xffffffffffffffffffffffffffffffffffffffff V534
0xa0b: V537 = CALLER
0xa0c: V538 = 0xffffffffffffffffffffffffffffffffffffffff
0xa21: V539 = AND 0xffffffffffffffffffffffffffffffffffffffff V537
0xa22: V540 = EQ V539 V536
0xa23: V541 = ISZERO V540
0xa24: V542 = ISZERO V541
0xa25: V543 = 0x7a8
0xa28: THROWI V542
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: []

================================

Block 0xa29
[0xa29:0xa31]
---
Predecessors: [0x90e]
Successors: [0xa32]
---
0xa29 PUSH1 0x0
0xa2b DUP1
0xa2c REVERT
0xa2d JUMPDEST
0xa2e PUSH1 0x0
0xa30 SWAP1
0xa31 POP
---
0xa29: V544 = 0x0
0xa2c: REVERT 0x0 0x0
0xa2d: JUMPDEST 
0xa2e: V545 = 0x0
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: []

================================

Block 0xa32
[0xa32:0xa3b]
---
Predecessors: [0xa29]
Successors: [0xa3c]
---
0xa32 JUMPDEST
0xa33 DUP2
0xa34 MLOAD
0xa35 DUP2
0xa36 LT
0xa37 ISZERO
0xa38 PUSH2 0x88b
0xa3b JUMPI
---
0xa32: JUMPDEST 
0xa34: V546 = M[S1]
0xa36: V547 = LT 0x0 V546
0xa37: V548 = ISZERO V547
0xa38: V549 = 0x88b
0xa3b: THROWI V548
---
Entry stack: [0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [S0, 0x0]

================================

Block 0xa3c
[0xa3c:0xa4c]
---
Predecessors: [0xa32]
Successors: [0xa4d]
---
0xa3c PUSH1 0x1
0xa3e DUP1
0xa3f PUSH1 0x0
0xa41 DUP5
0xa42 DUP5
0xa43 DUP2
0xa44 MLOAD
0xa45 DUP2
0xa46 LT
0xa47 ISZERO
0xa48 ISZERO
0xa49 PUSH2 0x7c9
0xa4c JUMPI
---
0xa3c: V550 = 0x1
0xa3f: V551 = 0x0
0xa44: V552 = M[S1]
0xa46: V553 = LT 0x0 V552
0xa47: V554 = ISZERO V553
0xa48: V555 = ISZERO V554
0xa49: V556 = 0x7c9
0xa4c: THROWI V555
---
Entry stack: [S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0x1, 0x1, 0x0, S1, S0]
Exit stack: [S1, 0x0, 0x1, 0x1, 0x0, S1, 0x0]

================================

Block 0xa4d
[0xa4d:0xab5]
---
Predecessors: [0xa3c]
Successors: [0xab6]
---
0xa4d INVALID
0xa4e JUMPDEST
0xa4f SWAP1
0xa50 PUSH1 0x20
0xa52 ADD
0xa53 SWAP1
0xa54 PUSH1 0x20
0xa56 MUL
0xa57 ADD
0xa58 MLOAD
0xa59 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa6e AND
0xa6f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa84 AND
0xa85 DUP2
0xa86 MSTORE
0xa87 PUSH1 0x20
0xa89 ADD
0xa8a SWAP1
0xa8b DUP2
0xa8c MSTORE
0xa8d PUSH1 0x20
0xa8f ADD
0xa90 PUSH1 0x0
0xa92 SHA3
0xa93 PUSH1 0x0
0xa95 PUSH2 0x100
0xa98 EXP
0xa99 DUP2
0xa9a SLOAD
0xa9b DUP2
0xa9c PUSH1 0xff
0xa9e MUL
0xa9f NOT
0xaa0 AND
0xaa1 SWAP1
0xaa2 DUP4
0xaa3 ISZERO
0xaa4 ISZERO
0xaa5 MUL
0xaa6 OR
0xaa7 SWAP1
0xaa8 SSTORE
0xaa9 POP
0xaaa DUP2
0xaab DUP2
0xaac DUP2
0xaad MLOAD
0xaae DUP2
0xaaf LT
0xab0 ISZERO
0xab1 ISZERO
0xab2 PUSH2 0x832
0xab5 JUMPI
---
0xa4d: INVALID 
0xa4e: JUMPDEST 
0xa50: V557 = 0x20
0xa52: V558 = ADD 0x20 S1
0xa54: V559 = 0x20
0xa56: V560 = MUL 0x20 S0
0xa57: V561 = ADD V560 V558
0xa58: V562 = M[V561]
0xa59: V563 = 0xffffffffffffffffffffffffffffffffffffffff
0xa6e: V564 = AND 0xffffffffffffffffffffffffffffffffffffffff V562
0xa6f: V565 = 0xffffffffffffffffffffffffffffffffffffffff
0xa84: V566 = AND 0xffffffffffffffffffffffffffffffffffffffff V564
0xa86: M[S2] = V566
0xa87: V567 = 0x20
0xa89: V568 = ADD 0x20 S2
0xa8c: M[V568] = S3
0xa8d: V569 = 0x20
0xa8f: V570 = ADD 0x20 V568
0xa90: V571 = 0x0
0xa92: V572 = SHA3 0x0 V570
0xa93: V573 = 0x0
0xa95: V574 = 0x100
0xa98: V575 = EXP 0x100 0x0
0xa9a: V576 = S[V572]
0xa9c: V577 = 0xff
0xa9e: V578 = MUL 0xff 0x1
0xa9f: V579 = NOT 0xff
0xaa0: V580 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V576
0xaa3: V581 = ISZERO S4
0xaa4: V582 = ISZERO V581
0xaa5: V583 = MUL V582 0x1
0xaa6: V584 = OR V583 V580
0xaa8: S[V572] = V584
0xaad: V585 = M[S6]
0xaaf: V586 = LT S5 V585
0xab0: V587 = ISZERO V586
0xab1: V588 = ISZERO V587
0xab2: V589 = 0x832
0xab5: THROWI V588
---
Entry stack: [S6, 0x0, 0x1, 0x1, 0x0, S1, 0x0]
Stack pops: 0
Stack additions: [S5, S6, S5, S6]
Exit stack: []

================================

Block 0xab6
[0xab6:0xb44]
---
Predecessors: [0xa4d]
Successors: []
---
0xab6 INVALID
0xab7 JUMPDEST
0xab8 SWAP1
0xab9 PUSH1 0x20
0xabb ADD
0xabc SWAP1
0xabd PUSH1 0x20
0xabf MUL
0xac0 ADD
0xac1 MLOAD
0xac2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xad7 AND
0xad8 PUSH32 0x5d91bd0cecc45fef102af61de92c5462fadc884a5ce9d21c15e8a85198f2349e
0xaf9 PUSH1 0x40
0xafb MLOAD
0xafc PUSH1 0x40
0xafe MLOAD
0xaff DUP1
0xb00 SWAP2
0xb01 SUB
0xb02 SWAP1
0xb03 LOG2
0xb04 DUP1
0xb05 DUP1
0xb06 PUSH1 0x1
0xb08 ADD
0xb09 SWAP2
0xb0a POP
0xb0b POP
0xb0c PUSH2 0x7ad
0xb0f JUMP
0xb10 JUMPDEST
0xb11 POP
0xb12 POP
0xb13 JUMP
0xb14 STOP
0xb15 LOG1
0xb16 PUSH6 0x627a7a723058
0xb1d SHA3
0xb1e MISSING 0x49
0xb1f PUSH23 0xd821b540cee8d254edec67eeb76b9b0a40e61919212528
0xb37 MISSING 0xc1
0xb38 POP
0xb39 PUSH11 0x4c5bb7b00029
---
0xab6: INVALID 
0xab7: JUMPDEST 
0xab9: V590 = 0x20
0xabb: V591 = ADD 0x20 S1
0xabd: V592 = 0x20
0xabf: V593 = MUL 0x20 S0
0xac0: V594 = ADD V593 V591
0xac1: V595 = M[V594]
0xac2: V596 = 0xffffffffffffffffffffffffffffffffffffffff
0xad7: V597 = AND 0xffffffffffffffffffffffffffffffffffffffff V595
0xad8: V598 = 0x5d91bd0cecc45fef102af61de92c5462fadc884a5ce9d21c15e8a85198f2349e
0xaf9: V599 = 0x40
0xafb: V600 = M[0x40]
0xafc: V601 = 0x40
0xafe: V602 = M[0x40]
0xb01: V603 = SUB V600 V602
0xb03: LOG V602 V603 0x5d91bd0cecc45fef102af61de92c5462fadc884a5ce9d21c15e8a85198f2349e V597
0xb06: V604 = 0x1
0xb08: V605 = ADD 0x1 S2
0xb0c: V606 = 0x7ad
0xb0f: THROW 
0xb10: JUMPDEST 
0xb13: JUMP S2
0xb14: STOP 
0xb15: LOG S0 S1 S2
0xb16: V607 = 0x627a7a723058
0xb1d: V608 = SHA3 0x627a7a723058 S3
0xb1e: MISSING 0x49
0xb1f: V609 = 0xd821b540cee8d254edec67eeb76b9b0a40e61919212528
0xb37: MISSING 0xc1
0xb39: V610 = 0x4c5bb7b00029
---
Entry stack: [S3, S2, S1, S0]
Stack pops: 0
Stack additions: [V605, V608, 0xd821b540cee8d254edec67eeb76b9b0a40e61919212528, 0x4c5bb7b00029]
Exit stack: []

================================

Function 0:
Public function signature: 0x8da5cb5b
Entry block: 0x51
Exit block: 0x64
Body: 0x51, 0x58, 0x5c, 0x64, 0xdf

Function 1:
Public function signature: 0xf2fde38b
Entry block: 0xa6
Exit block: 0xdd
Body: 0xa6, 0xad, 0xb1, 0xdd, 0x104, 0x15b, 0x15f, 0x197, 0x19b

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

