Block 0x0
[0x0:0x38]
---
Predecessors: []
Successors: [0x39, 0x3d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 PUSH4 0xffffffff
0x2d AND
0x2e DUP1
0x2f PUSH4 0xf2fde38b
0x34 EQ
0x35 PUSH2 0x3d
0x38 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x28: V6 = 0xffffffff
0x2d: V7 = AND 0xffffffff V5
0x2f: V8 = 0xf2fde38b
0x34: V9 = EQ 0xf2fde38b V7
0x35: V10 = 0x3d
0x38: JUMPI 0x3d V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x39
[0x39:0x3c]
---
Predecessors: [0x0]
Successors: []
---
0x39 PUSH1 0x0
0x3b DUP1
0x3c REVERT
---
0x39: V11 = 0x0
0x3c: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x3d
[0x3d:0x43]
---
Predecessors: [0x0]
Successors: [0x44, 0x48]
---
0x3d JUMPDEST
0x3e CALLVALUE
0x3f ISZERO
0x40 PUSH2 0x48
0x43 JUMPI
---
0x3d: JUMPDEST 
0x3e: V12 = CALLVALUE
0x3f: V13 = ISZERO V12
0x40: V14 = 0x48
0x43: JUMPI 0x48 V13
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x44
[0x44:0x47]
---
Predecessors: [0x3d]
Successors: []
---
0x44 PUSH1 0x0
0x46 DUP1
0x47 REVERT
---
0x44: V15 = 0x0
0x47: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x48
[0x48:0x73]
---
Predecessors: [0x3d]
Successors: [0x76]
---
0x48 JUMPDEST
0x49 PUSH2 0x74
0x4c PUSH1 0x4
0x4e DUP1
0x4f DUP1
0x50 CALLDATALOAD
0x51 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x66 AND
0x67 SWAP1
0x68 PUSH1 0x20
0x6a ADD
0x6b SWAP1
0x6c SWAP2
0x6d SWAP1
0x6e POP
0x6f POP
0x70 PUSH2 0x76
0x73 JUMP
---
0x48: JUMPDEST 
0x49: V16 = 0x74
0x4c: V17 = 0x4
0x50: V18 = CALLDATALOAD 0x4
0x51: V19 = 0xffffffffffffffffffffffffffffffffffffffff
0x66: V20 = AND 0xffffffffffffffffffffffffffffffffffffffff V18
0x68: V21 = 0x20
0x6a: V22 = ADD 0x20 0x4
0x70: V23 = 0x76
0x73: JUMP 0x76
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x74, V20]
Exit stack: [V7, 0x74, V20]

================================

Block 0x74
[0x74:0x75]
---
Predecessors: [0x10c]
Successors: []
---
0x74 JUMPDEST
0x75 STOP
---
0x74: JUMPDEST 
0x75: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x76
[0x76:0xcb]
---
Predecessors: [0x48]
Successors: [0xcc, 0x10c]
---
0x76 JUMPDEST
0x77 PUSH1 0x0
0x79 DUP1
0x7a SWAP1
0x7b SLOAD
0x7c SWAP1
0x7d PUSH2 0x100
0x80 EXP
0x81 SWAP1
0x82 DIV
0x83 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x98 AND
0x99 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xae AND
0xaf CALLER
0xb0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc5 AND
0xc6 EQ
0xc7 ISZERO
0xc8 PUSH2 0x10c
0xcb JUMPI
---
0x76: JUMPDEST 
0x77: V24 = 0x0
0x7b: V25 = S[0x0]
0x7d: V26 = 0x100
0x80: V27 = EXP 0x100 0x0
0x82: V28 = DIV V25 0x1
0x83: V29 = 0xffffffffffffffffffffffffffffffffffffffff
0x98: V30 = AND 0xffffffffffffffffffffffffffffffffffffffff V28
0x99: V31 = 0xffffffffffffffffffffffffffffffffffffffff
0xae: V32 = AND 0xffffffffffffffffffffffffffffffffffffffff V30
0xaf: V33 = CALLER
0xb0: V34 = 0xffffffffffffffffffffffffffffffffffffffff
0xc5: V35 = AND 0xffffffffffffffffffffffffffffffffffffffff V33
0xc6: V36 = EQ V35 V32
0xc7: V37 = ISZERO V36
0xc8: V38 = 0x10c
0xcb: JUMPI 0x10c V37
---
Entry stack: [V7, 0x74, V20]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x74, V20]

================================

Block 0xcc
[0xcc:0x10b]
---
Predecessors: [0x76]
Successors: [0x10c]
---
0xcc DUP1
0xcd PUSH1 0x0
0xcf DUP1
0xd0 PUSH2 0x100
0xd3 EXP
0xd4 DUP2
0xd5 SLOAD
0xd6 DUP2
0xd7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xec MUL
0xed NOT
0xee AND
0xef SWAP1
0xf0 DUP4
0xf1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x106 AND
0x107 MUL
0x108 OR
0x109 SWAP1
0x10a SSTORE
0x10b POP
---
0xcd: V39 = 0x0
0xd0: V40 = 0x100
0xd3: V41 = EXP 0x100 0x0
0xd5: V42 = S[0x0]
0xd7: V43 = 0xffffffffffffffffffffffffffffffffffffffff
0xec: V44 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xed: V45 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xee: V46 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V42
0xf1: V47 = 0xffffffffffffffffffffffffffffffffffffffff
0x106: V48 = AND 0xffffffffffffffffffffffffffffffffffffffff V20
0x107: V49 = MUL V48 0x1
0x108: V50 = OR V49 V46
0x10a: S[0x0] = V50
---
Entry stack: [V7, 0x74, V20]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7, 0x74, V20]

================================

Block 0x10c
[0x10c:0x10e]
---
Predecessors: [0x76, 0xcc]
Successors: [0x74]
---
0x10c JUMPDEST
0x10d POP
0x10e JUMP
---
0x10c: JUMPDEST 
0x10e: JUMP 0x74
---
Entry stack: [V7, 0x74, V20]
Stack pops: 2
Stack additions: []
Exit stack: [V7]

================================

Block 0x10f
[0x10f:0x173]
---
Predecessors: []
Successors: [0x174]
---
0x10f STOP
0x110 LOG1
0x111 PUSH6 0x627a7a723058
0x118 SHA3
0x119 SWAP15
0x11a DIV
0x11b MISSING 0xb2
0x11c MISSING 0xd8
0x11d SWAP10
0x11e ADDRESS
0x11f MISSING 0x5f
0x120 MISSING 0xe
0x121 PUSH28 0xaebad6f5892b136e16aa5cd69b158dd794e91fa254f9840029606060
0x13e BLOCKHASH
0x13f MSTORE
0x140 PUSH1 0x0
0x142 CALLDATALOAD
0x143 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x161 SWAP1
0x162 DIV
0x163 PUSH4 0xffffffff
0x168 AND
0x169 DUP1
0x16a PUSH4 0x223c217b
0x16f EQ
0x170 PUSH2 0x5e
0x173 JUMPI
---
0x10f: STOP 
0x110: LOG S0 S1 S2
0x111: V51 = 0x627a7a723058
0x118: V52 = SHA3 0x627a7a723058 S3
0x11a: V53 = DIV S18 S4
0x11b: MISSING 0xb2
0x11c: MISSING 0xd8
0x11e: V54 = ADDRESS
0x11f: MISSING 0x5f
0x120: MISSING 0xe
0x121: V55 = 0xaebad6f5892b136e16aa5cd69b158dd794e91fa254f9840029606060
0x13e: V56 = BLOCKHASH 0xaebad6f5892b136e16aa5cd69b158dd794e91fa254f9840029606060
0x13f: M[V56] = S0
0x140: V57 = 0x0
0x142: V58 = CALLDATALOAD 0x0
0x143: V59 = 0x100000000000000000000000000000000000000000000000000000000
0x162: V60 = DIV V58 0x100000000000000000000000000000000000000000000000000000000
0x163: V61 = 0xffffffff
0x168: V62 = AND 0xffffffff V60
0x16a: V63 = 0x223c217b
0x16f: V64 = EQ 0x223c217b V62
0x170: V65 = 0x5e
0x173: THROWI V64
---
Entry stack: []
Stack pops: 0
Stack additions: [V53, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, V52, V54, S10, S1, S2, S3, S4, S5, S6, S7, S8, S9, S0, V62]
Exit stack: []

================================

Block 0x174
[0x174:0x17e]
---
Predecessors: [0x10f]
Successors: [0x17f]
---
0x174 DUP1
0x175 PUSH4 0x89476069
0x17a EQ
0x17b PUSH2 0xd7
0x17e JUMPI
---
0x175: V66 = 0x89476069
0x17a: V67 = EQ 0x89476069 V62
0x17b: V68 = 0xd7
0x17e: THROWI V67
---
Entry stack: [V62]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V62]

================================

Block 0x17f
[0x17f:0x189]
---
Predecessors: [0x174]
Successors: [0x18a]
---
0x17f DUP1
0x180 PUSH4 0xb215814b
0x185 EQ
0x186 PUSH2 0x128
0x189 JUMPI
---
0x180: V69 = 0xb215814b
0x185: V70 = EQ 0xb215814b V62
0x186: V71 = 0x128
0x189: THROWI V70
---
Entry stack: [V62]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V62]

================================

Block 0x18a
[0x18a:0x194]
---
Predecessors: [0x17f]
Successors: [0x195]
---
0x18a DUP1
0x18b PUSH4 0xf2fde38b
0x190 EQ
0x191 PUSH2 0x198
0x194 JUMPI
---
0x18b: V72 = 0xf2fde38b
0x190: V73 = EQ 0xf2fde38b V62
0x191: V74 = 0x198
0x194: THROWI V73
---
Entry stack: [V62]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V62]

================================

Block 0x195
[0x195:0x19f]
---
Predecessors: [0x18a]
Successors: [0x1a0]
---
0x195 PUSH1 0x0
0x197 DUP1
0x198 REVERT
0x199 JUMPDEST
0x19a CALLVALUE
0x19b ISZERO
0x19c PUSH2 0x69
0x19f JUMPI
---
0x195: V75 = 0x0
0x198: REVERT 0x0 0x0
0x199: JUMPDEST 
0x19a: V76 = CALLVALUE
0x19b: V77 = ISZERO V76
0x19c: V78 = 0x69
0x19f: THROWI V77
---
Entry stack: [V62]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1a0
[0x1a0:0x218]
---
Predecessors: [0x195]
Successors: [0x219]
---
0x1a0 PUSH1 0x0
0x1a2 DUP1
0x1a3 REVERT
0x1a4 JUMPDEST
0x1a5 PUSH2 0xbd
0x1a8 PUSH1 0x4
0x1aa DUP1
0x1ab DUP1
0x1ac CALLDATALOAD
0x1ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c2 AND
0x1c3 SWAP1
0x1c4 PUSH1 0x20
0x1c6 ADD
0x1c7 SWAP1
0x1c8 SWAP2
0x1c9 SWAP1
0x1ca DUP1
0x1cb CALLDATALOAD
0x1cc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e1 AND
0x1e2 SWAP1
0x1e3 PUSH1 0x20
0x1e5 ADD
0x1e6 SWAP1
0x1e7 SWAP2
0x1e8 SWAP1
0x1e9 DUP1
0x1ea CALLDATALOAD
0x1eb SWAP1
0x1ec PUSH1 0x20
0x1ee ADD
0x1ef SWAP1
0x1f0 SWAP2
0x1f1 SWAP1
0x1f2 POP
0x1f3 POP
0x1f4 PUSH2 0x1d1
0x1f7 JUMP
0x1f8 JUMPDEST
0x1f9 PUSH1 0x40
0x1fb MLOAD
0x1fc DUP1
0x1fd DUP3
0x1fe ISZERO
0x1ff ISZERO
0x200 ISZERO
0x201 ISZERO
0x202 DUP2
0x203 MSTORE
0x204 PUSH1 0x20
0x206 ADD
0x207 SWAP2
0x208 POP
0x209 POP
0x20a PUSH1 0x40
0x20c MLOAD
0x20d DUP1
0x20e SWAP2
0x20f SUB
0x210 SWAP1
0x211 RETURN
0x212 JUMPDEST
0x213 CALLVALUE
0x214 ISZERO
0x215 PUSH2 0xe2
0x218 JUMPI
---
0x1a0: V79 = 0x0
0x1a3: REVERT 0x0 0x0
0x1a4: JUMPDEST 
0x1a5: V80 = 0xbd
0x1a8: V81 = 0x4
0x1ac: V82 = CALLDATALOAD 0x4
0x1ad: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c2: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V82
0x1c4: V85 = 0x20
0x1c6: V86 = ADD 0x20 0x4
0x1cb: V87 = CALLDATALOAD 0x24
0x1cc: V88 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e1: V89 = AND 0xffffffffffffffffffffffffffffffffffffffff V87
0x1e3: V90 = 0x20
0x1e5: V91 = ADD 0x20 0x24
0x1ea: V92 = CALLDATALOAD 0x44
0x1ec: V93 = 0x20
0x1ee: V94 = ADD 0x20 0x44
0x1f4: V95 = 0x1d1
0x1f7: THROW 
0x1f8: JUMPDEST 
0x1f9: V96 = 0x40
0x1fb: V97 = M[0x40]
0x1fe: V98 = ISZERO S0
0x1ff: V99 = ISZERO V98
0x200: V100 = ISZERO V99
0x201: V101 = ISZERO V100
0x203: M[V97] = V101
0x204: V102 = 0x20
0x206: V103 = ADD 0x20 V97
0x20a: V104 = 0x40
0x20c: V105 = M[0x40]
0x20f: V106 = SUB V103 V105
0x211: RETURN V105 V106
0x212: JUMPDEST 
0x213: V107 = CALLVALUE
0x214: V108 = ISZERO V107
0x215: V109 = 0xe2
0x218: THROWI V108
---
Entry stack: []
Stack pops: 0
Stack additions: [V92, V89, V84, 0xbd]
Exit stack: []

================================

Block 0x219
[0x219:0x21c]
---
Predecessors: [0x1a0]
Successors: []
---
0x219 PUSH1 0x0
0x21b DUP1
0x21c REVERT
---
0x219: V110 = 0x0
0x21c: REVERT 0x0 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x21d
[0x21d:0x269]
---
Predecessors: [0x74a]
Successors: [0x26a]
---
0x21d JUMPDEST
0x21e PUSH2 0x10e
0x221 PUSH1 0x4
0x223 DUP1
0x224 DUP1
0x225 CALLDATALOAD
0x226 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x23b AND
0x23c SWAP1
0x23d PUSH1 0x20
0x23f ADD
0x240 SWAP1
0x241 SWAP2
0x242 SWAP1
0x243 POP
0x244 POP
0x245 PUSH2 0x2f8
0x248 JUMP
0x249 JUMPDEST
0x24a PUSH1 0x40
0x24c MLOAD
0x24d DUP1
0x24e DUP3
0x24f ISZERO
0x250 ISZERO
0x251 ISZERO
0x252 ISZERO
0x253 DUP2
0x254 MSTORE
0x255 PUSH1 0x20
0x257 ADD
0x258 SWAP2
0x259 POP
0x25a POP
0x25b PUSH1 0x40
0x25d MLOAD
0x25e DUP1
0x25f SWAP2
0x260 SUB
0x261 SWAP1
0x262 RETURN
0x263 JUMPDEST
0x264 CALLVALUE
0x265 ISZERO
0x266 PUSH2 0x133
0x269 JUMPI
---
0x21d: JUMPDEST 
0x21e: V111 = 0x10e
0x221: V112 = 0x4
0x225: V113 = CALLDATALOAD 0x4
0x226: V114 = 0xffffffffffffffffffffffffffffffffffffffff
0x23b: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x23d: V116 = 0x20
0x23f: V117 = ADD 0x20 0x4
0x245: V118 = 0x2f8
0x248: THROW 
0x249: JUMPDEST 
0x24a: V119 = 0x40
0x24c: V120 = M[0x40]
0x24f: V121 = ISZERO S0
0x250: V122 = ISZERO V121
0x251: V123 = ISZERO V122
0x252: V124 = ISZERO V123
0x254: M[V120] = V124
0x255: V125 = 0x20
0x257: V126 = ADD 0x20 V120
0x25b: V127 = 0x40
0x25d: V128 = M[0x40]
0x260: V129 = SUB V126 V128
0x262: RETURN V128 V129
0x263: JUMPDEST 
0x264: V130 = CALLVALUE
0x265: V131 = ISZERO V130
0x266: V132 = 0x133
0x269: THROWI V131
---
Entry stack: [0x2d4131c2d8fe5acde5ad78badc340029, V382]
Stack pops: 0
Stack additions: [0x10e, V115]
Exit stack: []

================================

Block 0x26a
[0x26a:0x26d]
---
Predecessors: [0x21d]
Successors: []
---
0x26a PUSH1 0x0
0x26c DUP1
0x26d REVERT
---
0x26a: V133 = 0x0
0x26d: REVERT 0x0 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x26e
[0x26e:0x2d2]
---
Predecessors: [0x755]
Successors: []
---
0x26e JUMPDEST
0x26f PUSH2 0x17e
0x272 PUSH1 0x4
0x274 DUP1
0x275 DUP1
0x276 CALLDATALOAD
0x277 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28c AND
0x28d SWAP1
0x28e PUSH1 0x20
0x290 ADD
0x291 SWAP1
0x292 SWAP2
0x293 SWAP1
0x294 DUP1
0x295 CALLDATALOAD
0x296 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ab AND
0x2ac SWAP1
0x2ad PUSH1 0x20
0x2af ADD
0x2b0 SWAP1
0x2b1 SWAP2
0x2b2 SWAP1
0x2b3 POP
0x2b4 POP
0x2b5 PUSH2 0x3eb
0x2b8 JUMP
0x2b9 JUMPDEST
0x2ba PUSH1 0x40
0x2bc MLOAD
0x2bd DUP1
0x2be DUP3
0x2bf ISZERO
0x2c0 ISZERO
0x2c1 ISZERO
0x2c2 ISZERO
0x2c3 DUP2
0x2c4 MSTORE
0x2c5 PUSH1 0x20
0x2c7 ADD
0x2c8 SWAP2
0x2c9 POP
0x2ca POP
0x2cb PUSH1 0x40
0x2cd MLOAD
0x2ce DUP1
0x2cf SWAP2
0x2d0 SUB
0x2d1 SWAP1
0x2d2 RETURN
---
0x26e: JUMPDEST 
0x26f: V134 = 0x17e
0x272: V135 = 0x4
0x276: V136 = CALLDATALOAD 0x4
0x277: V137 = 0xffffffffffffffffffffffffffffffffffffffff
0x28c: V138 = AND 0xffffffffffffffffffffffffffffffffffffffff V136
0x28e: V139 = 0x20
0x290: V140 = ADD 0x20 0x4
0x295: V141 = CALLDATALOAD 0x24
0x296: V142 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ab: V143 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0x2ad: V144 = 0x20
0x2af: V145 = ADD 0x20 0x24
0x2b5: V146 = 0x3eb
0x2b8: THROW 
0x2b9: JUMPDEST 
0x2ba: V147 = 0x40
0x2bc: V148 = M[0x40]
0x2bf: V149 = ISZERO S0
0x2c0: V150 = ISZERO V149
0x2c1: V151 = ISZERO V150
0x2c2: V152 = ISZERO V151
0x2c4: M[V148] = V152
0x2c5: V153 = 0x20
0x2c7: V154 = ADD 0x20 V148
0x2cb: V155 = 0x40
0x2cd: V156 = M[0x40]
0x2d0: V157 = SUB V154 V156
0x2d2: RETURN V156 V157
---
Entry stack: [0x2d4131c2d8fe5acde5ad78badc340029, V382]
Stack pops: 0
Stack additions: [0x17e, V138, V143]
Exit stack: []

================================

Block 0x2d3
[0x2d3:0x2d9]
---
Predecessors: [0x364]
Successors: [0x2da]
---
0x2d3 JUMPDEST
0x2d4 CALLVALUE
0x2d5 ISZERO
0x2d6 PUSH2 0x1a3
0x2d9 JUMPI
---
0x2d3: JUMPDEST 
0x2d4: V158 = CALLVALUE
0x2d5: V159 = ISZERO V158
0x2d6: V160 = 0x1a3
0x2d9: THROWI V159
---
Entry stack: [S12, S11, S10, 0x0, V187, 0xa9059cbb, V209, 0x20, V212, V213, V212, 0x0, V187]
Stack pops: 0
Stack additions: []
Exit stack: [S12, S11, S10, 0x0, V187, 0xa9059cbb, V209, 0x20, V212, V213, V212, 0x0, V187]

================================

Block 0x2da
[0x2da:0x363]
---
Predecessors: [0x2d3]
Successors: [0x364]
---
0x2da PUSH1 0x0
0x2dc DUP1
0x2dd REVERT
0x2de JUMPDEST
0x2df PUSH2 0x1cf
0x2e2 PUSH1 0x4
0x2e4 DUP1
0x2e5 DUP1
0x2e6 CALLDATALOAD
0x2e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2fc AND
0x2fd SWAP1
0x2fe PUSH1 0x20
0x300 ADD
0x301 SWAP1
0x302 SWAP2
0x303 SWAP1
0x304 POP
0x305 POP
0x306 PUSH2 0x4df
0x309 JUMP
0x30a JUMPDEST
0x30b STOP
0x30c JUMPDEST
0x30d PUSH1 0x0
0x30f DUP1
0x310 PUSH1 0x0
0x312 SWAP1
0x313 SLOAD
0x314 SWAP1
0x315 PUSH2 0x100
0x318 EXP
0x319 SWAP1
0x31a DIV
0x31b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x330 AND
0x331 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x346 AND
0x347 CALLER
0x348 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x35d AND
0x35e EQ
0x35f ISZERO
0x360 PUSH2 0x2f1
0x363 JUMPI
---
0x2da: V161 = 0x0
0x2dd: REVERT 0x0 0x0
0x2de: JUMPDEST 
0x2df: V162 = 0x1cf
0x2e2: V163 = 0x4
0x2e6: V164 = CALLDATALOAD 0x4
0x2e7: V165 = 0xffffffffffffffffffffffffffffffffffffffff
0x2fc: V166 = AND 0xffffffffffffffffffffffffffffffffffffffff V164
0x2fe: V167 = 0x20
0x300: V168 = ADD 0x20 0x4
0x306: V169 = 0x4df
0x309: THROW 
0x30a: JUMPDEST 
0x30b: STOP 
0x30c: JUMPDEST 
0x30d: V170 = 0x0
0x310: V171 = 0x0
0x313: V172 = S[0x0]
0x315: V173 = 0x100
0x318: V174 = EXP 0x100 0x0
0x31a: V175 = DIV V172 0x1
0x31b: V176 = 0xffffffffffffffffffffffffffffffffffffffff
0x330: V177 = AND 0xffffffffffffffffffffffffffffffffffffffff V175
0x331: V178 = 0xffffffffffffffffffffffffffffffffffffffff
0x346: V179 = AND 0xffffffffffffffffffffffffffffffffffffffff V177
0x347: V180 = CALLER
0x348: V181 = 0xffffffffffffffffffffffffffffffffffffffff
0x35d: V182 = AND 0xffffffffffffffffffffffffffffffffffffffff V180
0x35e: V183 = EQ V182 V179
0x35f: V184 = ISZERO V183
0x360: V185 = 0x2f1
0x363: THROWI V184
---
Entry stack: [S12, S11, S10, 0x0, V187, 0xa9059cbb, V209, 0x20, V212, V213, V212, 0x0, V187]
Stack pops: 0
Stack additions: [V166, 0x1cf, 0x0]
Exit stack: []

================================

Block 0x364
[0x364:0x409]
---
Predecessors: [0x2da]
Successors: [0x2d3, 0x40a]
---
0x364 DUP4
0x365 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x37a AND
0x37b PUSH4 0xa9059cbb
0x380 DUP5
0x381 DUP5
0x382 PUSH1 0x0
0x384 PUSH1 0x40
0x386 MLOAD
0x387 PUSH1 0x20
0x389 ADD
0x38a MSTORE
0x38b PUSH1 0x40
0x38d MLOAD
0x38e DUP4
0x38f PUSH4 0xffffffff
0x394 AND
0x395 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x3b3 MUL
0x3b4 DUP2
0x3b5 MSTORE
0x3b6 PUSH1 0x4
0x3b8 ADD
0x3b9 DUP1
0x3ba DUP4
0x3bb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d0 AND
0x3d1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e6 AND
0x3e7 DUP2
0x3e8 MSTORE
0x3e9 PUSH1 0x20
0x3eb ADD
0x3ec DUP3
0x3ed DUP2
0x3ee MSTORE
0x3ef PUSH1 0x20
0x3f1 ADD
0x3f2 SWAP3
0x3f3 POP
0x3f4 POP
0x3f5 POP
0x3f6 PUSH1 0x20
0x3f8 PUSH1 0x40
0x3fa MLOAD
0x3fb DUP1
0x3fc DUP4
0x3fd SUB
0x3fe DUP2
0x3ff PUSH1 0x0
0x401 DUP8
0x402 DUP1
0x403 EXTCODESIZE
0x404 ISZERO
0x405 ISZERO
0x406 PUSH2 0x2d3
0x409 JUMPI
---
0x365: V186 = 0xffffffffffffffffffffffffffffffffffffffff
0x37a: V187 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x37b: V188 = 0xa9059cbb
0x382: V189 = 0x0
0x384: V190 = 0x40
0x386: V191 = M[0x40]
0x387: V192 = 0x20
0x389: V193 = ADD 0x20 V191
0x38a: M[V193] = 0x0
0x38b: V194 = 0x40
0x38d: V195 = M[0x40]
0x38f: V196 = 0xffffffff
0x394: V197 = AND 0xffffffff 0xa9059cbb
0x395: V198 = 0x100000000000000000000000000000000000000000000000000000000
0x3b3: V199 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x3b5: M[V195] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x3b6: V200 = 0x4
0x3b8: V201 = ADD 0x4 V195
0x3bb: V202 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d0: V203 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x3d1: V204 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e6: V205 = AND 0xffffffffffffffffffffffffffffffffffffffff V203
0x3e8: M[V201] = V205
0x3e9: V206 = 0x20
0x3eb: V207 = ADD 0x20 V201
0x3ee: M[V207] = S1
0x3ef: V208 = 0x20
0x3f1: V209 = ADD 0x20 V207
0x3f6: V210 = 0x20
0x3f8: V211 = 0x40
0x3fa: V212 = M[0x40]
0x3fd: V213 = SUB V209 V212
0x3ff: V214 = 0x0
0x403: V215 = EXTCODESIZE V187
0x404: V216 = ISZERO V215
0x405: V217 = ISZERO V216
0x406: V218 = 0x2d3
0x409: JUMPI 0x2d3 V217
---
Entry stack: [0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V187, 0xa9059cbb, V209, 0x20, V212, V213, V212, 0x0, V187]
Exit stack: [S2, S1, S0, 0x0, V187, 0xa9059cbb, V209, 0x20, V212, V213, V212, 0x0, V187]

================================

Block 0x40a
[0x40a:0x41a]
---
Predecessors: [0x364]
Successors: [0x41b]
---
0x40a PUSH1 0x0
0x40c DUP1
0x40d REVERT
0x40e JUMPDEST
0x40f PUSH2 0x2c6
0x412 GAS
0x413 SUB
0x414 CALL
0x415 ISZERO
0x416 ISZERO
0x417 PUSH2 0x2e4
0x41a JUMPI
---
0x40a: V219 = 0x0
0x40d: REVERT 0x0 0x0
0x40e: JUMPDEST 
0x40f: V220 = 0x2c6
0x412: V221 = GAS
0x413: V222 = SUB V221 0x2c6
0x414: V223 = CALL V222 S0 S1 S2 S3 S4 S5
0x415: V224 = ISZERO V223
0x416: V225 = ISZERO V224
0x417: V226 = 0x2e4
0x41a: THROWI V225
---
Entry stack: [S12, S11, S10, 0x0, V187, 0xa9059cbb, V209, 0x20, V212, V213, V212, 0x0, V187]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x41b
[0x41b:0x42b]
---
Predecessors: [0x40a]
Successors: [0x42c]
---
0x41b PUSH1 0x0
0x41d DUP1
0x41e REVERT
0x41f JUMPDEST
0x420 POP
0x421 POP
0x422 POP
0x423 PUSH1 0x40
0x425 MLOAD
0x426 DUP1
0x427 MLOAD
0x428 SWAP1
0x429 POP
0x42a SWAP1
0x42b POP
---
0x41b: V227 = 0x0
0x41e: REVERT 0x0 0x0
0x41f: JUMPDEST 
0x423: V228 = 0x40
0x425: V229 = M[0x40]
0x427: V230 = M[V229]
---
Entry stack: []
Stack pops: 0
Stack additions: [V230]
Exit stack: []

================================

Block 0x42c
[0x42c:0x4fa]
---
Predecessors: [0x41b]
Successors: [0x4fb]
---
0x42c JUMPDEST
0x42d SWAP4
0x42e SWAP3
0x42f POP
0x430 POP
0x431 POP
0x432 JUMP
0x433 JUMPDEST
0x434 PUSH1 0x0
0x436 PUSH2 0x3e4
0x439 DUP3
0x43a CALLER
0x43b DUP5
0x43c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x451 AND
0x452 PUSH4 0x70a08231
0x457 PUSH1 0x1
0x459 PUSH1 0x0
0x45b SWAP1
0x45c SLOAD
0x45d SWAP1
0x45e PUSH2 0x100
0x461 EXP
0x462 SWAP1
0x463 DIV
0x464 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x479 AND
0x47a PUSH1 0x0
0x47c PUSH1 0x40
0x47e MLOAD
0x47f PUSH1 0x20
0x481 ADD
0x482 MSTORE
0x483 PUSH1 0x40
0x485 MLOAD
0x486 DUP3
0x487 PUSH4 0xffffffff
0x48c AND
0x48d PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x4ab MUL
0x4ac DUP2
0x4ad MSTORE
0x4ae PUSH1 0x4
0x4b0 ADD
0x4b1 DUP1
0x4b2 DUP3
0x4b3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c8 AND
0x4c9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4de AND
0x4df DUP2
0x4e0 MSTORE
0x4e1 PUSH1 0x20
0x4e3 ADD
0x4e4 SWAP2
0x4e5 POP
0x4e6 POP
0x4e7 PUSH1 0x20
0x4e9 PUSH1 0x40
0x4eb MLOAD
0x4ec DUP1
0x4ed DUP4
0x4ee SUB
0x4ef DUP2
0x4f0 PUSH1 0x0
0x4f2 DUP8
0x4f3 DUP1
0x4f4 EXTCODESIZE
0x4f5 ISZERO
0x4f6 ISZERO
0x4f7 PUSH2 0x3c4
0x4fa JUMPI
---
0x42c: JUMPDEST 
0x432: JUMP S4
0x433: JUMPDEST 
0x434: V231 = 0x0
0x436: V232 = 0x3e4
0x43a: V233 = CALLER
0x43c: V234 = 0xffffffffffffffffffffffffffffffffffffffff
0x451: V235 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x452: V236 = 0x70a08231
0x457: V237 = 0x1
0x459: V238 = 0x0
0x45c: V239 = S[0x1]
0x45e: V240 = 0x100
0x461: V241 = EXP 0x100 0x0
0x463: V242 = DIV V239 0x1
0x464: V243 = 0xffffffffffffffffffffffffffffffffffffffff
0x479: V244 = AND 0xffffffffffffffffffffffffffffffffffffffff V242
0x47a: V245 = 0x0
0x47c: V246 = 0x40
0x47e: V247 = M[0x40]
0x47f: V248 = 0x20
0x481: V249 = ADD 0x20 V247
0x482: M[V249] = 0x0
0x483: V250 = 0x40
0x485: V251 = M[0x40]
0x487: V252 = 0xffffffff
0x48c: V253 = AND 0xffffffff 0x70a08231
0x48d: V254 = 0x100000000000000000000000000000000000000000000000000000000
0x4ab: V255 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x4ad: M[V251] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x4ae: V256 = 0x4
0x4b0: V257 = ADD 0x4 V251
0x4b3: V258 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c8: V259 = AND 0xffffffffffffffffffffffffffffffffffffffff V244
0x4c9: V260 = 0xffffffffffffffffffffffffffffffffffffffff
0x4de: V261 = AND 0xffffffffffffffffffffffffffffffffffffffff V259
0x4e0: M[V257] = V261
0x4e1: V262 = 0x20
0x4e3: V263 = ADD 0x20 V257
0x4e7: V264 = 0x20
0x4e9: V265 = 0x40
0x4eb: V266 = M[0x40]
0x4ee: V267 = SUB V263 V266
0x4f0: V268 = 0x0
0x4f4: V269 = EXTCODESIZE V235
0x4f5: V270 = ISZERO V269
0x4f6: V271 = ISZERO V270
0x4f7: V272 = 0x3c4
0x4fa: THROWI V271
---
Entry stack: [V230]
Stack pops: 9
Stack additions: [V235, 0x0, V266, V267, V266, 0x20, V263, 0x70a08231, V235, V233, S0, 0x3e4, 0x0, S0]
Exit stack: []

================================

Block 0x4fb
[0x4fb:0x50b]
---
Predecessors: [0x42c]
Successors: [0x50c]
---
0x4fb PUSH1 0x0
0x4fd DUP1
0x4fe REVERT
0x4ff JUMPDEST
0x500 PUSH2 0x2c6
0x503 GAS
0x504 SUB
0x505 CALL
0x506 ISZERO
0x507 ISZERO
0x508 PUSH2 0x3d5
0x50b JUMPI
---
0x4fb: V273 = 0x0
0x4fe: REVERT 0x0 0x0
0x4ff: JUMPDEST 
0x500: V274 = 0x2c6
0x503: V275 = GAS
0x504: V276 = SUB V275 0x2c6
0x505: V277 = CALL V276 S0 S1 S2 S3 S4 S5
0x506: V278 = ISZERO V277
0x507: V279 = ISZERO V278
0x508: V280 = 0x3d5
0x50b: THROWI V279
---
Entry stack: [S13, 0x0, 0x3e4, S10, V233, V235, 0x70a08231, V263, 0x20, V266, V267, V266, 0x0, V235]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x50c
[0x50c:0x5ed]
---
Predecessors: [0x4fb]
Successors: [0x5ee]
---
0x50c PUSH1 0x0
0x50e DUP1
0x50f REVERT
0x510 JUMPDEST
0x511 POP
0x512 POP
0x513 POP
0x514 PUSH1 0x40
0x516 MLOAD
0x517 DUP1
0x518 MLOAD
0x519 SWAP1
0x51a POP
0x51b PUSH2 0x1d1
0x51e JUMP
0x51f JUMPDEST
0x520 SWAP1
0x521 POP
0x522 SWAP2
0x523 SWAP1
0x524 POP
0x525 JUMP
0x526 JUMPDEST
0x527 PUSH1 0x0
0x529 PUSH2 0x4d7
0x52c DUP4
0x52d DUP4
0x52e DUP6
0x52f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x544 AND
0x545 PUSH4 0x70a08231
0x54a PUSH1 0x1
0x54c PUSH1 0x0
0x54e SWAP1
0x54f SLOAD
0x550 SWAP1
0x551 PUSH2 0x100
0x554 EXP
0x555 SWAP1
0x556 DIV
0x557 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x56c AND
0x56d PUSH1 0x0
0x56f PUSH1 0x40
0x571 MLOAD
0x572 PUSH1 0x20
0x574 ADD
0x575 MSTORE
0x576 PUSH1 0x40
0x578 MLOAD
0x579 DUP3
0x57a PUSH4 0xffffffff
0x57f AND
0x580 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x59e MUL
0x59f DUP2
0x5a0 MSTORE
0x5a1 PUSH1 0x4
0x5a3 ADD
0x5a4 DUP1
0x5a5 DUP3
0x5a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5bb AND
0x5bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d1 AND
0x5d2 DUP2
0x5d3 MSTORE
0x5d4 PUSH1 0x20
0x5d6 ADD
0x5d7 SWAP2
0x5d8 POP
0x5d9 POP
0x5da PUSH1 0x20
0x5dc PUSH1 0x40
0x5de MLOAD
0x5df DUP1
0x5e0 DUP4
0x5e1 SUB
0x5e2 DUP2
0x5e3 PUSH1 0x0
0x5e5 DUP8
0x5e6 DUP1
0x5e7 EXTCODESIZE
0x5e8 ISZERO
0x5e9 ISZERO
0x5ea PUSH2 0x4b7
0x5ed JUMPI
---
0x50c: V281 = 0x0
0x50f: REVERT 0x0 0x0
0x510: JUMPDEST 
0x514: V282 = 0x40
0x516: V283 = M[0x40]
0x518: V284 = M[V283]
0x51b: V285 = 0x1d1
0x51e: THROW 
0x51f: JUMPDEST 
0x525: JUMP S3
0x526: JUMPDEST 
0x527: V286 = 0x0
0x529: V287 = 0x4d7
0x52f: V288 = 0xffffffffffffffffffffffffffffffffffffffff
0x544: V289 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x545: V290 = 0x70a08231
0x54a: V291 = 0x1
0x54c: V292 = 0x0
0x54f: V293 = S[0x1]
0x551: V294 = 0x100
0x554: V295 = EXP 0x100 0x0
0x556: V296 = DIV V293 0x1
0x557: V297 = 0xffffffffffffffffffffffffffffffffffffffff
0x56c: V298 = AND 0xffffffffffffffffffffffffffffffffffffffff V296
0x56d: V299 = 0x0
0x56f: V300 = 0x40
0x571: V301 = M[0x40]
0x572: V302 = 0x20
0x574: V303 = ADD 0x20 V301
0x575: M[V303] = 0x0
0x576: V304 = 0x40
0x578: V305 = M[0x40]
0x57a: V306 = 0xffffffff
0x57f: V307 = AND 0xffffffff 0x70a08231
0x580: V308 = 0x100000000000000000000000000000000000000000000000000000000
0x59e: V309 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x5a0: M[V305] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x5a1: V310 = 0x4
0x5a3: V311 = ADD 0x4 V305
0x5a6: V312 = 0xffffffffffffffffffffffffffffffffffffffff
0x5bb: V313 = AND 0xffffffffffffffffffffffffffffffffffffffff V298
0x5bc: V314 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d1: V315 = AND 0xffffffffffffffffffffffffffffffffffffffff V313
0x5d3: M[V311] = V315
0x5d4: V316 = 0x20
0x5d6: V317 = ADD 0x20 V311
0x5da: V318 = 0x20
0x5dc: V319 = 0x40
0x5de: V320 = M[0x40]
0x5e1: V321 = SUB V317 V320
0x5e3: V322 = 0x0
0x5e7: V323 = EXTCODESIZE V289
0x5e8: V324 = ISZERO V323
0x5e9: V325 = ISZERO V324
0x5ea: V326 = 0x4b7
0x5ed: THROWI V325
---
Entry stack: []
Stack pops: 0
Stack additions: [V284, S0, V289, 0x0, V320, V321, V320, 0x20, V317, 0x70a08231, V289, S0, S1, 0x4d7, 0x0, S0, S1]
Exit stack: []

================================

Block 0x5ee
[0x5ee:0x5f1]
---
Predecessors: [0x50c]
Successors: []
---
0x5ee PUSH1 0x0
0x5f0 DUP1
0x5f1 REVERT
---
0x5ee: V327 = 0x0
0x5f1: REVERT 0x0 0x0
---
Entry stack: [S14, S13, 0x0, 0x4d7, S10, S9, V289, 0x70a08231, V317, 0x20, V320, V321, V320, 0x0, V289]
Stack pops: 0
Stack additions: []
Exit stack: [S14, S13, 0x0, 0x4d7, S10, S9, V289, 0x70a08231, V317, 0x20, V320, V321, V320, 0x0, V289]

================================

Block 0x5f2
[0x5f2:0x5fe]
---
Predecessors: [0xbaf]
Successors: [0x5ff]
---
0x5f2 JUMPDEST
0x5f3 PUSH2 0x2c6
0x5f6 GAS
0x5f7 SUB
0x5f8 CALL
0x5f9 ISZERO
0x5fa ISZERO
0x5fb PUSH2 0x4c8
0x5fe JUMPI
---
0x5f2: JUMPDEST 
0x5f3: V328 = 0x2c6
0x5f6: V329 = GAS
0x5f7: V330 = SUB V329 0x2c6
0x5f8: V331 = CALL V330 0x0 S1 S2 S3 S4 S5
0x5f9: V332 = ISZERO V331
0x5fa: V333 = ISZERO V332
0x5fb: V334 = 0x4c8
0x5fe: THROWI V333
---
Entry stack: [0x0]
Stack pops: 6
Stack additions: []
Exit stack: []

================================

Block 0x5ff
[0x5ff:0x66f]
---
Predecessors: [0x5f2]
Successors: [0x670]
---
0x5ff PUSH1 0x0
0x601 DUP1
0x602 REVERT
0x603 JUMPDEST
0x604 POP
0x605 POP
0x606 POP
0x607 PUSH1 0x40
0x609 MLOAD
0x60a DUP1
0x60b MLOAD
0x60c SWAP1
0x60d POP
0x60e PUSH2 0x1d1
0x611 JUMP
0x612 JUMPDEST
0x613 SWAP1
0x614 POP
0x615 SWAP3
0x616 SWAP2
0x617 POP
0x618 POP
0x619 JUMP
0x61a JUMPDEST
0x61b PUSH1 0x0
0x61d DUP1
0x61e SWAP1
0x61f SLOAD
0x620 SWAP1
0x621 PUSH2 0x100
0x624 EXP
0x625 SWAP1
0x626 DIV
0x627 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x63c AND
0x63d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x652 AND
0x653 CALLER
0x654 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x669 AND
0x66a EQ
0x66b ISZERO
0x66c PUSH2 0x575
0x66f JUMPI
---
0x5ff: V335 = 0x0
0x602: REVERT 0x0 0x0
0x603: JUMPDEST 
0x607: V336 = 0x40
0x609: V337 = M[0x40]
0x60b: V338 = M[V337]
0x60e: V339 = 0x1d1
0x611: THROW 
0x612: JUMPDEST 
0x619: JUMP S4
0x61a: JUMPDEST 
0x61b: V340 = 0x0
0x61f: V341 = S[0x0]
0x621: V342 = 0x100
0x624: V343 = EXP 0x100 0x0
0x626: V344 = DIV V341 0x1
0x627: V345 = 0xffffffffffffffffffffffffffffffffffffffff
0x63c: V346 = AND 0xffffffffffffffffffffffffffffffffffffffff V344
0x63d: V347 = 0xffffffffffffffffffffffffffffffffffffffff
0x652: V348 = AND 0xffffffffffffffffffffffffffffffffffffffff V346
0x653: V349 = CALLER
0x654: V350 = 0xffffffffffffffffffffffffffffffffffffffff
0x669: V351 = AND 0xffffffffffffffffffffffffffffffffffffffff V349
0x66a: V352 = EQ V351 V348
0x66b: V353 = ISZERO V352
0x66c: V354 = 0x575
0x66f: THROWI V353
---
Entry stack: []
Stack pops: 0
Stack additions: [V338, S0]
Exit stack: []

================================

Block 0x670
[0x670:0x6af]
---
Predecessors: [0x5ff]
Successors: [0x6b0]
---
0x670 DUP1
0x671 PUSH1 0x0
0x673 DUP1
0x674 PUSH2 0x100
0x677 EXP
0x678 DUP2
0x679 SLOAD
0x67a DUP2
0x67b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x690 MUL
0x691 NOT
0x692 AND
0x693 SWAP1
0x694 DUP4
0x695 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6aa AND
0x6ab MUL
0x6ac OR
0x6ad SWAP1
0x6ae SSTORE
0x6af POP
---
0x671: V355 = 0x0
0x674: V356 = 0x100
0x677: V357 = EXP 0x100 0x0
0x679: V358 = S[0x0]
0x67b: V359 = 0xffffffffffffffffffffffffffffffffffffffff
0x690: V360 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x691: V361 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x692: V362 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V358
0x695: V363 = 0xffffffffffffffffffffffffffffffffffffffff
0x6aa: V364 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x6ab: V365 = MUL V364 0x1
0x6ac: V366 = OR V365 V362
0x6ae: S[0x0] = V366
---
Entry stack: []
Stack pops: 1
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x6b0
[0x6b0:0x6e9]
---
Predecessors: [0x670]
Successors: [0x6ea]
---
0x6b0 JUMPDEST
0x6b1 POP
0x6b2 JUMP
0x6b3 STOP
0x6b4 LOG1
0x6b5 PUSH6 0x627a7a723058
0x6bc SHA3
0x6bd MISSING 0xea
0x6be DUP6
0x6bf PUSH8 0xeb7d0f0345247b8
0x6c8 MISSING 0xc0
0x6c9 MISSING 0xee
0x6ca CALLER
0x6cb MISSING 0x4b
0x6cc MISSING 0xd4
0x6cd MISSING 0xc8
0x6ce PUSH16 0x2d4131c2d8fe5acde5ad78badc340029
0x6df PUSH1 0x60
0x6e1 PUSH1 0x40
0x6e3 MSTORE
0x6e4 CALLDATASIZE
0x6e5 ISZERO
0x6e6 PUSH2 0xd9
0x6e9 JUMPI
---
0x6b0: JUMPDEST 
0x6b2: JUMP S1
0x6b3: STOP 
0x6b4: LOG S0 S1 S2
0x6b5: V367 = 0x627a7a723058
0x6bc: V368 = SHA3 0x627a7a723058 S3
0x6bd: MISSING 0xea
0x6bf: V369 = 0xeb7d0f0345247b8
0x6c8: MISSING 0xc0
0x6c9: MISSING 0xee
0x6ca: V370 = CALLER
0x6cb: MISSING 0x4b
0x6cc: MISSING 0xd4
0x6cd: MISSING 0xc8
0x6ce: V371 = 0x2d4131c2d8fe5acde5ad78badc340029
0x6df: V372 = 0x60
0x6e1: V373 = 0x40
0x6e3: M[0x40] = 0x60
0x6e4: V374 = CALLDATASIZE
0x6e5: V375 = ISZERO V374
0x6e6: V376 = 0xd9
0x6e9: THROWI V375
---
Entry stack: [S0]
Stack pops: 348
Stack additions: [0x2d4131c2d8fe5acde5ad78badc340029]
Exit stack: []

================================

Block 0x6ea
[0x6ea:0x71d]
---
Predecessors: [0x6b0]
Successors: [0x71e]
---
0x6ea PUSH1 0x0
0x6ec CALLDATALOAD
0x6ed PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x70b SWAP1
0x70c DIV
0x70d PUSH4 0xffffffff
0x712 AND
0x713 DUP1
0x714 PUSH4 0x223c217b
0x719 EQ
0x71a PUSH2 0xe3
0x71d JUMPI
---
0x6ea: V377 = 0x0
0x6ec: V378 = CALLDATALOAD 0x0
0x6ed: V379 = 0x100000000000000000000000000000000000000000000000000000000
0x70c: V380 = DIV V378 0x100000000000000000000000000000000000000000000000000000000
0x70d: V381 = 0xffffffff
0x712: V382 = AND 0xffffffff V380
0x714: V383 = 0x223c217b
0x719: V384 = EQ 0x223c217b V382
0x71a: V385 = 0xe3
0x71d: THROWI V384
---
Entry stack: [0x2d4131c2d8fe5acde5ad78badc340029]
Stack pops: 0
Stack additions: [V382]
Exit stack: [0x2d4131c2d8fe5acde5ad78badc340029, V382]

================================

Block 0x71e
[0x71e:0x728]
---
Predecessors: [0x6ea]
Successors: [0x729]
---
0x71e DUP1
0x71f PUSH4 0x3ee2d7c2
0x724 EQ
0x725 PUSH2 0x15c
0x728 JUMPI
---
0x71f: V386 = 0x3ee2d7c2
0x724: V387 = EQ 0x3ee2d7c2 V382
0x725: V388 = 0x15c
0x728: THROWI V387
---
Entry stack: [0x2d4131c2d8fe5acde5ad78badc340029, V382]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0x2d4131c2d8fe5acde5ad78badc340029, V382]

================================

Block 0x729
[0x729:0x733]
---
Predecessors: [0x71e]
Successors: [0x734]
---
0x729 DUP1
0x72a PUSH4 0x41c0e1b5
0x72f EQ
0x730 PUSH2 0x1a9
0x733 JUMPI
---
0x72a: V389 = 0x41c0e1b5
0x72f: V390 = EQ 0x41c0e1b5 V382
0x730: V391 = 0x1a9
0x733: THROWI V390
---
Entry stack: [0x2d4131c2d8fe5acde5ad78badc340029, V382]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0x2d4131c2d8fe5acde5ad78badc340029, V382]

================================

Block 0x734
[0x734:0x73e]
---
Predecessors: [0x729]
Successors: [0x73f]
---
0x734 DUP1
0x735 PUSH4 0x7c65f503
0x73a EQ
0x73b PUSH2 0x1be
0x73e JUMPI
---
0x735: V392 = 0x7c65f503
0x73a: V393 = EQ 0x7c65f503 V382
0x73b: V394 = 0x1be
0x73e: THROWI V393
---
Entry stack: [0x2d4131c2d8fe5acde5ad78badc340029, V382]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0x2d4131c2d8fe5acde5ad78badc340029, V382]

================================

Block 0x73f
[0x73f:0x749]
---
Predecessors: [0x734]
Successors: [0x74a]
---
0x73f DUP1
0x740 PUSH4 0x893d20e8
0x745 EQ
0x746 PUSH2 0x1c8
0x749 JUMPI
---
0x740: V395 = 0x893d20e8
0x745: V396 = EQ 0x893d20e8 V382
0x746: V397 = 0x1c8
0x749: THROWI V396
---
Entry stack: [0x2d4131c2d8fe5acde5ad78badc340029, V382]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0x2d4131c2d8fe5acde5ad78badc340029, V382]

================================

Block 0x74a
[0x74a:0x754]
---
Predecessors: [0x73f]
Successors: [0x21d, 0x755]
---
0x74a DUP1
0x74b PUSH4 0x89476069
0x750 EQ
0x751 PUSH2 0x21d
0x754 JUMPI
---
0x74b: V398 = 0x89476069
0x750: V399 = EQ 0x89476069 V382
0x751: V400 = 0x21d
0x754: JUMPI 0x21d V399
---
Entry stack: [0x2d4131c2d8fe5acde5ad78badc340029, V382]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0x2d4131c2d8fe5acde5ad78badc340029, V382]

================================

Block 0x755
[0x755:0x75f]
---
Predecessors: [0x74a]
Successors: [0x26e, 0x760]
---
0x755 DUP1
0x756 PUSH4 0x8cf49cad
0x75b EQ
0x75c PUSH2 0x26e
0x75f JUMPI
---
0x756: V401 = 0x8cf49cad
0x75b: V402 = EQ 0x8cf49cad V382
0x75c: V403 = 0x26e
0x75f: JUMPI 0x26e V402
---
Entry stack: [0x2d4131c2d8fe5acde5ad78badc340029, V382]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0x2d4131c2d8fe5acde5ad78badc340029, V382]

================================

Block 0x760
[0x760:0x76a]
---
Predecessors: [0x755]
Successors: [0x76b]
---
0x760 DUP1
0x761 PUSH4 0xb215814b
0x766 EQ
0x767 PUSH2 0x297
0x76a JUMPI
---
0x761: V404 = 0xb215814b
0x766: V405 = EQ 0xb215814b V382
0x767: V406 = 0x297
0x76a: THROWI V405
---
Entry stack: [0x2d4131c2d8fe5acde5ad78badc340029, V382]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0x2d4131c2d8fe5acde5ad78badc340029, V382]

================================

Block 0x76b
[0x76b:0x775]
---
Predecessors: [0x760]
Successors: [0x776]
---
0x76b DUP1
0x76c PUSH4 0xbe3eac25
0x771 EQ
0x772 PUSH2 0x307
0x775 JUMPI
---
0x76c: V407 = 0xbe3eac25
0x771: V408 = EQ 0xbe3eac25 V382
0x772: V409 = 0x307
0x775: THROWI V408
---
Entry stack: [0x2d4131c2d8fe5acde5ad78badc340029, V382]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0x2d4131c2d8fe5acde5ad78badc340029, V382]

================================

Block 0x776
[0x776:0x780]
---
Predecessors: [0x76b]
Successors: [0x781]
---
0x776 DUP1
0x777 PUSH4 0xc635a9f2
0x77c EQ
0x77d PUSH2 0x334
0x780 JUMPI
---
0x777: V410 = 0xc635a9f2
0x77c: V411 = EQ 0xc635a9f2 V382
0x77d: V412 = 0x334
0x780: THROWI V411
---
Entry stack: [0x2d4131c2d8fe5acde5ad78badc340029, V382]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0x2d4131c2d8fe5acde5ad78badc340029, V382]

================================

Block 0x781
[0x781:0x78b]
---
Predecessors: [0x776]
Successors: [0x78c]
---
0x781 DUP1
0x782 PUSH4 0xcfa4f3e8
0x787 EQ
0x788 PUSH2 0x35d
0x78b JUMPI
---
0x782: V413 = 0xcfa4f3e8
0x787: V414 = EQ 0xcfa4f3e8 V382
0x788: V415 = 0x35d
0x78b: THROWI V414
---
Entry stack: [0x2d4131c2d8fe5acde5ad78badc340029, V382]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0x2d4131c2d8fe5acde5ad78badc340029, V382]

================================

Block 0x78c
[0x78c:0x796]
---
Predecessors: [0x781]
Successors: [0x797]
---
0x78c DUP1
0x78d PUSH4 0xd0e30db0
0x792 EQ
0x793 PUSH2 0x380
0x796 JUMPI
---
0x78d: V416 = 0xd0e30db0
0x792: V417 = EQ 0xd0e30db0 V382
0x793: V418 = 0x380
0x796: THROWI V417
---
Entry stack: [0x2d4131c2d8fe5acde5ad78badc340029, V382]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0x2d4131c2d8fe5acde5ad78badc340029, V382]

================================

Block 0x797
[0x797:0x7a1]
---
Predecessors: [0x78c]
Successors: [0x7a2]
---
0x797 DUP1
0x798 PUSH4 0xf2fde38b
0x79d EQ
0x79e PUSH2 0x38a
0x7a1 JUMPI
---
0x798: V419 = 0xf2fde38b
0x79d: V420 = EQ 0xf2fde38b V382
0x79e: V421 = 0x38a
0x7a1: THROWI V420
---
Entry stack: [0x2d4131c2d8fe5acde5ad78badc340029, V382]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0x2d4131c2d8fe5acde5ad78badc340029, V382]

================================

Block 0x7a2
[0x7a2:0x7ac]
---
Predecessors: [0x797]
Successors: [0x7ad]
---
0x7a2 DUP1
0x7a3 PUSH4 0xf3fef3a3
0x7a8 EQ
0x7a9 PUSH2 0x3c3
0x7ac JUMPI
---
0x7a3: V422 = 0xf3fef3a3
0x7a8: V423 = EQ 0xf3fef3a3 V382
0x7a9: V424 = 0x3c3
0x7ac: THROWI V423
---
Entry stack: [0x2d4131c2d8fe5acde5ad78badc340029, V382]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0x2d4131c2d8fe5acde5ad78badc340029, V382]

================================

Block 0x7ad
[0x7ad:0x7b7]
---
Predecessors: [0x7a2]
Successors: [0x7b8]
---
0x7ad DUP1
0x7ae PUSH4 0xf83d08ba
0x7b3 EQ
0x7b4 PUSH2 0x405
0x7b7 JUMPI
---
0x7ae: V425 = 0xf83d08ba
0x7b3: V426 = EQ 0xf83d08ba V382
0x7b4: V427 = 0x405
0x7b7: THROWI V426
---
Entry stack: [0x2d4131c2d8fe5acde5ad78badc340029, V382]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0x2d4131c2d8fe5acde5ad78badc340029, V382]

================================

Block 0x7b8
[0x7b8:0x7c8]
---
Predecessors: [0x7ad]
Successors: [0x7c9]
---
0x7b8 JUMPDEST
0x7b9 PUSH2 0xe1
0x7bc PUSH2 0x41a
0x7bf JUMP
0x7c0 JUMPDEST
0x7c1 STOP
0x7c2 JUMPDEST
0x7c3 CALLVALUE
0x7c4 ISZERO
0x7c5 PUSH2 0xee
0x7c8 JUMPI
---
0x7b8: JUMPDEST 
0x7b9: V428 = 0xe1
0x7bc: V429 = 0x41a
0x7bf: THROW 
0x7c0: JUMPDEST 
0x7c1: STOP 
0x7c2: JUMPDEST 
0x7c3: V430 = CALLVALUE
0x7c4: V431 = ISZERO V430
0x7c5: V432 = 0xee
0x7c8: THROWI V431
---
Entry stack: [0x2d4131c2d8fe5acde5ad78badc340029, V382]
Stack pops: 0
Stack additions: [0xe1]
Exit stack: []

================================

Block 0x7c9
[0x7c9:0x841]
---
Predecessors: [0x7b8]
Successors: [0x842]
---
0x7c9 PUSH1 0x0
0x7cb DUP1
0x7cc REVERT
0x7cd JUMPDEST
0x7ce PUSH2 0x142
0x7d1 PUSH1 0x4
0x7d3 DUP1
0x7d4 DUP1
0x7d5 CALLDATALOAD
0x7d6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7eb AND
0x7ec SWAP1
0x7ed PUSH1 0x20
0x7ef ADD
0x7f0 SWAP1
0x7f1 SWAP2
0x7f2 SWAP1
0x7f3 DUP1
0x7f4 CALLDATALOAD
0x7f5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x80a AND
0x80b SWAP1
0x80c PUSH1 0x20
0x80e ADD
0x80f SWAP1
0x810 SWAP2
0x811 SWAP1
0x812 DUP1
0x813 CALLDATALOAD
0x814 SWAP1
0x815 PUSH1 0x20
0x817 ADD
0x818 SWAP1
0x819 SWAP2
0x81a SWAP1
0x81b POP
0x81c POP
0x81d PUSH2 0x4d2
0x820 JUMP
0x821 JUMPDEST
0x822 PUSH1 0x40
0x824 MLOAD
0x825 DUP1
0x826 DUP3
0x827 ISZERO
0x828 ISZERO
0x829 ISZERO
0x82a ISZERO
0x82b DUP2
0x82c MSTORE
0x82d PUSH1 0x20
0x82f ADD
0x830 SWAP2
0x831 POP
0x832 POP
0x833 PUSH1 0x40
0x835 MLOAD
0x836 DUP1
0x837 SWAP2
0x838 SUB
0x839 SWAP1
0x83a RETURN
0x83b JUMPDEST
0x83c CALLVALUE
0x83d ISZERO
0x83e PUSH2 0x167
0x841 JUMPI
---
0x7c9: V433 = 0x0
0x7cc: REVERT 0x0 0x0
0x7cd: JUMPDEST 
0x7ce: V434 = 0x142
0x7d1: V435 = 0x4
0x7d5: V436 = CALLDATALOAD 0x4
0x7d6: V437 = 0xffffffffffffffffffffffffffffffffffffffff
0x7eb: V438 = AND 0xffffffffffffffffffffffffffffffffffffffff V436
0x7ed: V439 = 0x20
0x7ef: V440 = ADD 0x20 0x4
0x7f4: V441 = CALLDATALOAD 0x24
0x7f5: V442 = 0xffffffffffffffffffffffffffffffffffffffff
0x80a: V443 = AND 0xffffffffffffffffffffffffffffffffffffffff V441
0x80c: V444 = 0x20
0x80e: V445 = ADD 0x20 0x24
0x813: V446 = CALLDATALOAD 0x44
0x815: V447 = 0x20
0x817: V448 = ADD 0x20 0x44
0x81d: V449 = 0x4d2
0x820: THROW 
0x821: JUMPDEST 
0x822: V450 = 0x40
0x824: V451 = M[0x40]
0x827: V452 = ISZERO S0
0x828: V453 = ISZERO V452
0x829: V454 = ISZERO V453
0x82a: V455 = ISZERO V454
0x82c: M[V451] = V455
0x82d: V456 = 0x20
0x82f: V457 = ADD 0x20 V451
0x833: V458 = 0x40
0x835: V459 = M[0x40]
0x838: V460 = SUB V457 V459
0x83a: RETURN V459 V460
0x83b: JUMPDEST 
0x83c: V461 = CALLVALUE
0x83d: V462 = ISZERO V461
0x83e: V463 = 0x167
0x841: THROWI V462
---
Entry stack: []
Stack pops: 0
Stack additions: [V446, V443, V438, 0x142]
Exit stack: []

================================

Block 0x842
[0x842:0x88e]
---
Predecessors: [0x7c9]
Successors: [0x88f]
---
0x842 PUSH1 0x0
0x844 DUP1
0x845 REVERT
0x846 JUMPDEST
0x847 PUSH2 0x193
0x84a PUSH1 0x4
0x84c DUP1
0x84d DUP1
0x84e CALLDATALOAD
0x84f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x864 AND
0x865 SWAP1
0x866 PUSH1 0x20
0x868 ADD
0x869 SWAP1
0x86a SWAP2
0x86b SWAP1
0x86c POP
0x86d POP
0x86e PUSH2 0x5f9
0x871 JUMP
0x872 JUMPDEST
0x873 PUSH1 0x40
0x875 MLOAD
0x876 DUP1
0x877 DUP3
0x878 DUP2
0x879 MSTORE
0x87a PUSH1 0x20
0x87c ADD
0x87d SWAP2
0x87e POP
0x87f POP
0x880 PUSH1 0x40
0x882 MLOAD
0x883 DUP1
0x884 SWAP2
0x885 SUB
0x886 SWAP1
0x887 RETURN
0x888 JUMPDEST
0x889 CALLVALUE
0x88a ISZERO
0x88b PUSH2 0x1b4
0x88e JUMPI
---
0x842: V464 = 0x0
0x845: REVERT 0x0 0x0
0x846: JUMPDEST 
0x847: V465 = 0x193
0x84a: V466 = 0x4
0x84e: V467 = CALLDATALOAD 0x4
0x84f: V468 = 0xffffffffffffffffffffffffffffffffffffffff
0x864: V469 = AND 0xffffffffffffffffffffffffffffffffffffffff V467
0x866: V470 = 0x20
0x868: V471 = ADD 0x20 0x4
0x86e: V472 = 0x5f9
0x871: THROW 
0x872: JUMPDEST 
0x873: V473 = 0x40
0x875: V474 = M[0x40]
0x879: M[V474] = S0
0x87a: V475 = 0x20
0x87c: V476 = ADD 0x20 V474
0x880: V477 = 0x40
0x882: V478 = M[0x40]
0x885: V479 = SUB V476 V478
0x887: RETURN V478 V479
0x888: JUMPDEST 
0x889: V480 = CALLVALUE
0x88a: V481 = ISZERO V480
0x88b: V482 = 0x1b4
0x88e: THROWI V481
---
Entry stack: []
Stack pops: 0
Stack additions: [V469, 0x193]
Exit stack: []

================================

Block 0x88f
[0x88f:0x8ad]
---
Predecessors: [0x842]
Successors: [0x8ae]
---
0x88f PUSH1 0x0
0x891 DUP1
0x892 REVERT
0x893 JUMPDEST
0x894 PUSH2 0x1bc
0x897 PUSH2 0x611
0x89a JUMP
0x89b JUMPDEST
0x89c STOP
0x89d JUMPDEST
0x89e PUSH2 0x1c6
0x8a1 PUSH2 0x671
0x8a4 JUMP
0x8a5 JUMPDEST
0x8a6 STOP
0x8a7 JUMPDEST
0x8a8 CALLVALUE
0x8a9 ISZERO
0x8aa PUSH2 0x1d3
0x8ad JUMPI
---
0x88f: V483 = 0x0
0x892: REVERT 0x0 0x0
0x893: JUMPDEST 
0x894: V484 = 0x1bc
0x897: V485 = 0x611
0x89a: THROW 
0x89b: JUMPDEST 
0x89c: STOP 
0x89d: JUMPDEST 
0x89e: V486 = 0x1c6
0x8a1: V487 = 0x671
0x8a4: THROW 
0x8a5: JUMPDEST 
0x8a6: STOP 
0x8a7: JUMPDEST 
0x8a8: V488 = CALLVALUE
0x8a9: V489 = ISZERO V488
0x8aa: V490 = 0x1d3
0x8ad: THROWI V489
---
Entry stack: []
Stack pops: 0
Stack additions: [0x1bc, 0x1c6]
Exit stack: []

================================

Block 0x8ae
[0x8ae:0x902]
---
Predecessors: [0x88f]
Successors: [0x903]
---
0x8ae PUSH1 0x0
0x8b0 DUP1
0x8b1 REVERT
0x8b2 JUMPDEST
0x8b3 PUSH2 0x1db
0x8b6 PUSH2 0x73d
0x8b9 JUMP
0x8ba JUMPDEST
0x8bb PUSH1 0x40
0x8bd MLOAD
0x8be DUP1
0x8bf DUP3
0x8c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8d5 AND
0x8d6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8eb AND
0x8ec DUP2
0x8ed MSTORE
0x8ee PUSH1 0x20
0x8f0 ADD
0x8f1 SWAP2
0x8f2 POP
0x8f3 POP
0x8f4 PUSH1 0x40
0x8f6 MLOAD
0x8f7 DUP1
0x8f8 SWAP2
0x8f9 SUB
0x8fa SWAP1
0x8fb RETURN
0x8fc JUMPDEST
0x8fd CALLVALUE
0x8fe ISZERO
0x8ff PUSH2 0x228
0x902 JUMPI
---
0x8ae: V491 = 0x0
0x8b1: REVERT 0x0 0x0
0x8b2: JUMPDEST 
0x8b3: V492 = 0x1db
0x8b6: V493 = 0x73d
0x8b9: THROW 
0x8ba: JUMPDEST 
0x8bb: V494 = 0x40
0x8bd: V495 = M[0x40]
0x8c0: V496 = 0xffffffffffffffffffffffffffffffffffffffff
0x8d5: V497 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x8d6: V498 = 0xffffffffffffffffffffffffffffffffffffffff
0x8eb: V499 = AND 0xffffffffffffffffffffffffffffffffffffffff V497
0x8ed: M[V495] = V499
0x8ee: V500 = 0x20
0x8f0: V501 = ADD 0x20 V495
0x8f4: V502 = 0x40
0x8f6: V503 = M[0x40]
0x8f9: V504 = SUB V501 V503
0x8fb: RETURN V503 V504
0x8fc: JUMPDEST 
0x8fd: V505 = CALLVALUE
0x8fe: V506 = ISZERO V505
0x8ff: V507 = 0x228
0x902: THROWI V506
---
Entry stack: []
Stack pops: 0
Stack additions: [0x1db]
Exit stack: []

================================

Block 0x903
[0x903:0x953]
---
Predecessors: [0x8ae]
Successors: [0x954]
---
0x903 PUSH1 0x0
0x905 DUP1
0x906 REVERT
0x907 JUMPDEST
0x908 PUSH2 0x254
0x90b PUSH1 0x4
0x90d DUP1
0x90e DUP1
0x90f CALLDATALOAD
0x910 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x925 AND
0x926 SWAP1
0x927 PUSH1 0x20
0x929 ADD
0x92a SWAP1
0x92b SWAP2
0x92c SWAP1
0x92d POP
0x92e POP
0x92f PUSH2 0x767
0x932 JUMP
0x933 JUMPDEST
0x934 PUSH1 0x40
0x936 MLOAD
0x937 DUP1
0x938 DUP3
0x939 ISZERO
0x93a ISZERO
0x93b ISZERO
0x93c ISZERO
0x93d DUP2
0x93e MSTORE
0x93f PUSH1 0x20
0x941 ADD
0x942 SWAP2
0x943 POP
0x944 POP
0x945 PUSH1 0x40
0x947 MLOAD
0x948 DUP1
0x949 SWAP2
0x94a SUB
0x94b SWAP1
0x94c RETURN
0x94d JUMPDEST
0x94e CALLVALUE
0x94f ISZERO
0x950 PUSH2 0x279
0x953 JUMPI
---
0x903: V508 = 0x0
0x906: REVERT 0x0 0x0
0x907: JUMPDEST 
0x908: V509 = 0x254
0x90b: V510 = 0x4
0x90f: V511 = CALLDATALOAD 0x4
0x910: V512 = 0xffffffffffffffffffffffffffffffffffffffff
0x925: V513 = AND 0xffffffffffffffffffffffffffffffffffffffff V511
0x927: V514 = 0x20
0x929: V515 = ADD 0x20 0x4
0x92f: V516 = 0x767
0x932: THROW 
0x933: JUMPDEST 
0x934: V517 = 0x40
0x936: V518 = M[0x40]
0x939: V519 = ISZERO S0
0x93a: V520 = ISZERO V519
0x93b: V521 = ISZERO V520
0x93c: V522 = ISZERO V521
0x93e: M[V518] = V522
0x93f: V523 = 0x20
0x941: V524 = ADD 0x20 V518
0x945: V525 = 0x40
0x947: V526 = M[0x40]
0x94a: V527 = SUB V524 V526
0x94c: RETURN V526 V527
0x94d: JUMPDEST 
0x94e: V528 = CALLVALUE
0x94f: V529 = ISZERO V528
0x950: V530 = 0x279
0x953: THROWI V529
---
Entry stack: []
Stack pops: 0
Stack additions: [V513, 0x254]
Exit stack: []

================================

Block 0x954
[0x954:0x957]
---
Predecessors: [0x903]
Successors: []
---
0x954 PUSH1 0x0
0x956 DUP1
0x957 REVERT
---
0x954: V531 = 0x0
0x957: REVERT 0x0 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x958
[0x958:0x97c]
---
Predecessors: [0x9ed, 0x118f]
Successors: [0x97d]
---
0x958 JUMPDEST
0x959 PUSH2 0x281
0x95c PUSH2 0x85a
0x95f JUMP
0x960 JUMPDEST
0x961 PUSH1 0x40
0x963 MLOAD
0x964 DUP1
0x965 DUP3
0x966 DUP2
0x967 MSTORE
0x968 PUSH1 0x20
0x96a ADD
0x96b SWAP2
0x96c POP
0x96d POP
0x96e PUSH1 0x40
0x970 MLOAD
0x971 DUP1
0x972 SWAP2
0x973 SUB
0x974 SWAP1
0x975 RETURN
0x976 JUMPDEST
0x977 CALLVALUE
0x978 ISZERO
0x979 PUSH2 0x2a2
0x97c JUMPI
---
0x958: JUMPDEST 
0x959: V532 = 0x281
0x95c: V533 = 0x85a
0x95f: THROW 
0x960: JUMPDEST 
0x961: V534 = 0x40
0x963: V535 = M[0x40]
0x967: M[V535] = S0
0x968: V536 = 0x20
0x96a: V537 = ADD 0x20 V535
0x96e: V538 = 0x40
0x970: V539 = M[0x40]
0x973: V540 = SUB V537 V539
0x975: RETURN V539 V540
0x976: JUMPDEST 
0x977: V541 = CALLVALUE
0x978: V542 = ISZERO V541
0x979: V543 = 0x2a2
0x97c: THROWI V542
---
Entry stack: [0x0, {0x31a, 0xab7}]
Stack pops: 0
Stack additions: [0x281]
Exit stack: []

================================

Block 0x97d
[0x97d:0x9ec]
---
Predecessors: [0x958]
Successors: [0x9ed]
---
0x97d PUSH1 0x0
0x97f DUP1
0x980 REVERT
0x981 JUMPDEST
0x982 PUSH2 0x2ed
0x985 PUSH1 0x4
0x987 DUP1
0x988 DUP1
0x989 CALLDATALOAD
0x98a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x99f AND
0x9a0 SWAP1
0x9a1 PUSH1 0x20
0x9a3 ADD
0x9a4 SWAP1
0x9a5 SWAP2
0x9a6 SWAP1
0x9a7 DUP1
0x9a8 CALLDATALOAD
0x9a9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9be AND
0x9bf SWAP1
0x9c0 PUSH1 0x20
0x9c2 ADD
0x9c3 SWAP1
0x9c4 SWAP2
0x9c5 SWAP1
0x9c6 POP
0x9c7 POP
0x9c8 PUSH2 0x864
0x9cb JUMP
0x9cc JUMPDEST
0x9cd PUSH1 0x40
0x9cf MLOAD
0x9d0 DUP1
0x9d1 DUP3
0x9d2 ISZERO
0x9d3 ISZERO
0x9d4 ISZERO
0x9d5 ISZERO
0x9d6 DUP2
0x9d7 MSTORE
0x9d8 PUSH1 0x20
0x9da ADD
0x9db SWAP2
0x9dc POP
0x9dd POP
0x9de PUSH1 0x40
0x9e0 MLOAD
0x9e1 DUP1
0x9e2 SWAP2
0x9e3 SUB
0x9e4 SWAP1
0x9e5 RETURN
0x9e6 JUMPDEST
0x9e7 CALLVALUE
0x9e8 ISZERO
0x9e9 PUSH2 0x312
0x9ec JUMPI
---
0x97d: V544 = 0x0
0x980: REVERT 0x0 0x0
0x981: JUMPDEST 
0x982: V545 = 0x2ed
0x985: V546 = 0x4
0x989: V547 = CALLDATALOAD 0x4
0x98a: V548 = 0xffffffffffffffffffffffffffffffffffffffff
0x99f: V549 = AND 0xffffffffffffffffffffffffffffffffffffffff V547
0x9a1: V550 = 0x20
0x9a3: V551 = ADD 0x20 0x4
0x9a8: V552 = CALLDATALOAD 0x24
0x9a9: V553 = 0xffffffffffffffffffffffffffffffffffffffff
0x9be: V554 = AND 0xffffffffffffffffffffffffffffffffffffffff V552
0x9c0: V555 = 0x20
0x9c2: V556 = ADD 0x20 0x24
0x9c8: V557 = 0x864
0x9cb: THROW 
0x9cc: JUMPDEST 
0x9cd: V558 = 0x40
0x9cf: V559 = M[0x40]
0x9d2: V560 = ISZERO S0
0x9d3: V561 = ISZERO V560
0x9d4: V562 = ISZERO V561
0x9d5: V563 = ISZERO V562
0x9d7: M[V559] = V563
0x9d8: V564 = 0x20
0x9da: V565 = ADD 0x20 V559
0x9de: V566 = 0x40
0x9e0: V567 = M[0x40]
0x9e3: V568 = SUB V565 V567
0x9e5: RETURN V567 V568
0x9e6: JUMPDEST 
0x9e7: V569 = CALLVALUE
0x9e8: V570 = ISZERO V569
0x9e9: V571 = 0x312
0x9ec: THROWI V570
---
Entry stack: []
Stack pops: 0
Stack additions: [V554, V549, 0x2ed]
Exit stack: []

================================

Block 0x9ed
[0x9ed:0x9f8]
---
Predecessors: [0x97d]
Successors: [0x958]
---
0x9ed PUSH1 0x0
0x9ef DUP1
0x9f0 REVERT
0x9f1 JUMPDEST
0x9f2 PUSH2 0x31a
0x9f5 PUSH2 0x958
0x9f8 JUMP
---
0x9ed: V572 = 0x0
0x9f0: REVERT 0x0 0x0
0x9f1: JUMPDEST 
0x9f2: V573 = 0x31a
0x9f5: V574 = 0x958
0x9f8: JUMP 0x958
---
Entry stack: []
Stack pops: 0
Stack additions: [0x31a]
Exit stack: []

================================

Block 0x9f9
[0x9f9:0xa19]
---
Predecessors: []
Successors: [0xa1a]
---
0x9f9 JUMPDEST
0x9fa PUSH1 0x40
0x9fc MLOAD
0x9fd DUP1
0x9fe DUP3
0x9ff ISZERO
0xa00 ISZERO
0xa01 ISZERO
0xa02 ISZERO
0xa03 DUP2
0xa04 MSTORE
0xa05 PUSH1 0x20
0xa07 ADD
0xa08 SWAP2
0xa09 POP
0xa0a POP
0xa0b PUSH1 0x40
0xa0d MLOAD
0xa0e DUP1
0xa0f SWAP2
0xa10 SUB
0xa11 SWAP1
0xa12 RETURN
0xa13 JUMPDEST
0xa14 CALLVALUE
0xa15 ISZERO
0xa16 PUSH2 0x33f
0xa19 JUMPI
---
0x9f9: JUMPDEST 
0x9fa: V575 = 0x40
0x9fc: V576 = M[0x40]
0x9ff: V577 = ISZERO S0
0xa00: V578 = ISZERO V577
0xa01: V579 = ISZERO V578
0xa02: V580 = ISZERO V579
0xa04: M[V576] = V580
0xa05: V581 = 0x20
0xa07: V582 = ADD 0x20 V576
0xa0b: V583 = 0x40
0xa0d: V584 = M[0x40]
0xa10: V585 = SUB V582 V584
0xa12: RETURN V584 V585
0xa13: JUMPDEST 
0xa14: V586 = CALLVALUE
0xa15: V587 = ISZERO V586
0xa16: V588 = 0x33f
0xa19: THROWI V587
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0xa1a
[0xa1a:0xa42]
---
Predecessors: [0x9f9]
Successors: [0xa43]
---
0xa1a PUSH1 0x0
0xa1c DUP1
0xa1d REVERT
0xa1e JUMPDEST
0xa1f PUSH2 0x347
0xa22 PUSH2 0x972
0xa25 JUMP
0xa26 JUMPDEST
0xa27 PUSH1 0x40
0xa29 MLOAD
0xa2a DUP1
0xa2b DUP3
0xa2c DUP2
0xa2d MSTORE
0xa2e PUSH1 0x20
0xa30 ADD
0xa31 SWAP2
0xa32 POP
0xa33 POP
0xa34 PUSH1 0x40
0xa36 MLOAD
0xa37 DUP1
0xa38 SWAP2
0xa39 SUB
0xa3a SWAP1
0xa3b RETURN
0xa3c JUMPDEST
0xa3d CALLVALUE
0xa3e ISZERO
0xa3f PUSH2 0x368
0xa42 JUMPI
---
0xa1a: V589 = 0x0
0xa1d: REVERT 0x0 0x0
0xa1e: JUMPDEST 
0xa1f: V590 = 0x347
0xa22: V591 = 0x972
0xa25: THROW 
0xa26: JUMPDEST 
0xa27: V592 = 0x40
0xa29: V593 = M[0x40]
0xa2d: M[V593] = S0
0xa2e: V594 = 0x20
0xa30: V595 = ADD 0x20 V593
0xa34: V596 = 0x40
0xa36: V597 = M[0x40]
0xa39: V598 = SUB V595 V597
0xa3b: RETURN V597 V598
0xa3c: JUMPDEST 
0xa3d: V599 = CALLVALUE
0xa3e: V600 = ISZERO V599
0xa3f: V601 = 0x368
0xa42: THROWI V600
---
Entry stack: []
Stack pops: 0
Stack additions: [0x347]
Exit stack: []

================================

Block 0xa43
[0xa43:0xa6f]
---
Predecessors: [0xa1a]
Successors: [0xa70]
---
0xa43 PUSH1 0x0
0xa45 DUP1
0xa46 REVERT
0xa47 JUMPDEST
0xa48 PUSH2 0x37e
0xa4b PUSH1 0x4
0xa4d DUP1
0xa4e DUP1
0xa4f CALLDATALOAD
0xa50 SWAP1
0xa51 PUSH1 0x20
0xa53 ADD
0xa54 SWAP1
0xa55 SWAP2
0xa56 SWAP1
0xa57 POP
0xa58 POP
0xa59 PUSH2 0x97c
0xa5c JUMP
0xa5d JUMPDEST
0xa5e STOP
0xa5f JUMPDEST
0xa60 PUSH2 0x388
0xa63 PUSH2 0x41a
0xa66 JUMP
0xa67 JUMPDEST
0xa68 STOP
0xa69 JUMPDEST
0xa6a CALLVALUE
0xa6b ISZERO
0xa6c PUSH2 0x395
0xa6f JUMPI
---
0xa43: V602 = 0x0
0xa46: REVERT 0x0 0x0
0xa47: JUMPDEST 
0xa48: V603 = 0x37e
0xa4b: V604 = 0x4
0xa4f: V605 = CALLDATALOAD 0x4
0xa51: V606 = 0x20
0xa53: V607 = ADD 0x20 0x4
0xa59: V608 = 0x97c
0xa5c: THROW 
0xa5d: JUMPDEST 
0xa5e: STOP 
0xa5f: JUMPDEST 
0xa60: V609 = 0x388
0xa63: V610 = 0x41a
0xa66: THROW 
0xa67: JUMPDEST 
0xa68: STOP 
0xa69: JUMPDEST 
0xa6a: V611 = CALLVALUE
0xa6b: V612 = ISZERO V611
0xa6c: V613 = 0x395
0xa6f: THROWI V612
---
Entry stack: []
Stack pops: 0
Stack additions: [V605, 0x37e, 0x388]
Exit stack: []

================================

Block 0xa70
[0xa70:0xaa8]
---
Predecessors: [0xa43]
Successors: [0xaa9]
---
0xa70 PUSH1 0x0
0xa72 DUP1
0xa73 REVERT
0xa74 JUMPDEST
0xa75 PUSH2 0x3c1
0xa78 PUSH1 0x4
0xa7a DUP1
0xa7b DUP1
0xa7c CALLDATALOAD
0xa7d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa92 AND
0xa93 SWAP1
0xa94 PUSH1 0x20
0xa96 ADD
0xa97 SWAP1
0xa98 SWAP2
0xa99 SWAP1
0xa9a POP
0xa9b POP
0xa9c PUSH2 0x9bf
0xa9f JUMP
0xaa0 JUMPDEST
0xaa1 STOP
0xaa2 JUMPDEST
0xaa3 CALLVALUE
0xaa4 ISZERO
0xaa5 PUSH2 0x3ce
0xaa8 JUMPI
---
0xa70: V614 = 0x0
0xa73: REVERT 0x0 0x0
0xa74: JUMPDEST 
0xa75: V615 = 0x3c1
0xa78: V616 = 0x4
0xa7c: V617 = CALLDATALOAD 0x4
0xa7d: V618 = 0xffffffffffffffffffffffffffffffffffffffff
0xa92: V619 = AND 0xffffffffffffffffffffffffffffffffffffffff V617
0xa94: V620 = 0x20
0xa96: V621 = ADD 0x20 0x4
0xa9c: V622 = 0x9bf
0xa9f: THROW 
0xaa0: JUMPDEST 
0xaa1: STOP 
0xaa2: JUMPDEST 
0xaa3: V623 = CALLVALUE
0xaa4: V624 = ISZERO V623
0xaa5: V625 = 0x3ce
0xaa8: THROWI V624
---
Entry stack: []
Stack pops: 0
Stack additions: [V619, 0x3c1]
Exit stack: []

================================

Block 0xaa9
[0xaa9:0xaea]
---
Predecessors: [0xa70]
Successors: [0xaeb]
---
0xaa9 PUSH1 0x0
0xaab DUP1
0xaac REVERT
0xaad JUMPDEST
0xaae PUSH2 0x403
0xab1 PUSH1 0x4
0xab3 DUP1
0xab4 DUP1
0xab5 CALLDATALOAD
0xab6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xacb AND
0xacc SWAP1
0xacd PUSH1 0x20
0xacf ADD
0xad0 SWAP1
0xad1 SWAP2
0xad2 SWAP1
0xad3 DUP1
0xad4 CALLDATALOAD
0xad5 SWAP1
0xad6 PUSH1 0x20
0xad8 ADD
0xad9 SWAP1
0xada SWAP2
0xadb SWAP1
0xadc POP
0xadd POP
0xade PUSH2 0xa58
0xae1 JUMP
0xae2 JUMPDEST
0xae3 STOP
0xae4 JUMPDEST
0xae5 CALLVALUE
0xae6 ISZERO
0xae7 PUSH2 0x410
0xaea JUMPI
---
0xaa9: V626 = 0x0
0xaac: REVERT 0x0 0x0
0xaad: JUMPDEST 
0xaae: V627 = 0x403
0xab1: V628 = 0x4
0xab5: V629 = CALLDATALOAD 0x4
0xab6: V630 = 0xffffffffffffffffffffffffffffffffffffffff
0xacb: V631 = AND 0xffffffffffffffffffffffffffffffffffffffff V629
0xacd: V632 = 0x20
0xacf: V633 = ADD 0x20 0x4
0xad4: V634 = CALLDATALOAD 0x24
0xad6: V635 = 0x20
0xad8: V636 = ADD 0x20 0x24
0xade: V637 = 0xa58
0xae1: THROW 
0xae2: JUMPDEST 
0xae3: STOP 
0xae4: JUMPDEST 
0xae5: V638 = CALLVALUE
0xae6: V639 = ISZERO V638
0xae7: V640 = 0x410
0xaea: THROWI V639
---
Entry stack: []
Stack pops: 0
Stack additions: [V634, V631, 0x403]
Exit stack: []

================================

Block 0xaeb
[0xaeb:0xb02]
---
Predecessors: [0xaa9]
Successors: [0xb03]
---
0xaeb PUSH1 0x0
0xaed DUP1
0xaee REVERT
0xaef JUMPDEST
0xaf0 PUSH2 0x418
0xaf3 PUSH2 0xba9
0xaf6 JUMP
0xaf7 JUMPDEST
0xaf8 STOP
0xaf9 JUMPDEST
0xafa PUSH1 0x0
0xafc CALLVALUE
0xafd GT
0xafe ISZERO
0xaff PUSH2 0x4d0
0xb02 JUMPI
---
0xaeb: V641 = 0x0
0xaee: REVERT 0x0 0x0
0xaef: JUMPDEST 
0xaf0: V642 = 0x418
0xaf3: V643 = 0xba9
0xaf6: THROW 
0xaf7: JUMPDEST 
0xaf8: STOP 
0xaf9: JUMPDEST 
0xafa: V644 = 0x0
0xafc: V645 = CALLVALUE
0xafd: V646 = GT V645 0x0
0xafe: V647 = ISZERO V646
0xaff: V648 = 0x4d0
0xb02: THROWI V647
---
Entry stack: []
Stack pops: 0
Stack additions: [0x418]
Exit stack: []

================================

Block 0xb03
[0xb03:0xb12]
---
Predecessors: [0xaeb]
Successors: [0xb13]
---
0xb03 PUSH2 0x42b
0xb06 PUSH2 0x972
0xb09 JUMP
0xb0a JUMPDEST
0xb0b CALLVALUE
0xb0c LT
0xb0d ISZERO
0xb0e ISZERO
0xb0f PUSH2 0x481
0xb12 JUMPI
---
0xb03: V649 = 0x42b
0xb06: V650 = 0x972
0xb09: THROW 
0xb0a: JUMPDEST 
0xb0b: V651 = CALLVALUE
0xb0c: V652 = LT V651 S0
0xb0d: V653 = ISZERO V652
0xb0e: V654 = ISZERO V653
0xb0f: V655 = 0x481
0xb12: THROWI V654
---
Entry stack: []
Stack pops: 0
Stack additions: [0x42b]
Exit stack: []

================================

Block 0xb13
[0xb13:0xb5f]
---
Predecessors: [0xb03]
Successors: [0xb60]
---
0xb13 CALLVALUE
0xb14 PUSH1 0x2
0xb16 PUSH1 0x0
0xb18 CALLER
0xb19 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb2e AND
0xb2f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb44 AND
0xb45 DUP2
0xb46 MSTORE
0xb47 PUSH1 0x20
0xb49 ADD
0xb4a SWAP1
0xb4b DUP2
0xb4c MSTORE
0xb4d PUSH1 0x20
0xb4f ADD
0xb50 PUSH1 0x0
0xb52 SHA3
0xb53 PUSH1 0x0
0xb55 DUP3
0xb56 DUP3
0xb57 SLOAD
0xb58 ADD
0xb59 SWAP3
0xb5a POP
0xb5b POP
0xb5c DUP2
0xb5d SWAP1
0xb5e SSTORE
0xb5f POP
---
0xb13: V656 = CALLVALUE
0xb14: V657 = 0x2
0xb16: V658 = 0x0
0xb18: V659 = CALLER
0xb19: V660 = 0xffffffffffffffffffffffffffffffffffffffff
0xb2e: V661 = AND 0xffffffffffffffffffffffffffffffffffffffff V659
0xb2f: V662 = 0xffffffffffffffffffffffffffffffffffffffff
0xb44: V663 = AND 0xffffffffffffffffffffffffffffffffffffffff V661
0xb46: M[0x0] = V663
0xb47: V664 = 0x20
0xb49: V665 = ADD 0x20 0x0
0xb4c: M[0x20] = 0x2
0xb4d: V666 = 0x20
0xb4f: V667 = ADD 0x20 0x20
0xb50: V668 = 0x0
0xb52: V669 = SHA3 0x0 0x40
0xb53: V670 = 0x0
0xb57: V671 = S[V669]
0xb58: V672 = ADD V671 V656
0xb5e: S[V669] = V672
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb60
[0xb60:0xbae]
---
Predecessors: [0xb13]
Successors: [0xbaf]
---
0xb60 JUMPDEST
0xb61 CALLER
0xb62 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb77 AND
0xb78 PUSH32 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
0xb99 CALLVALUE
0xb9a PUSH1 0x40
0xb9c MLOAD
0xb9d DUP1
0xb9e DUP3
0xb9f DUP2
0xba0 MSTORE
0xba1 PUSH1 0x20
0xba3 ADD
0xba4 SWAP2
0xba5 POP
0xba6 POP
0xba7 PUSH1 0x40
0xba9 MLOAD
0xbaa DUP1
0xbab SWAP2
0xbac SUB
0xbad SWAP1
0xbae LOG2
---
0xb60: JUMPDEST 
0xb61: V673 = CALLER
0xb62: V674 = 0xffffffffffffffffffffffffffffffffffffffff
0xb77: V675 = AND 0xffffffffffffffffffffffffffffffffffffffff V673
0xb78: V676 = 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
0xb99: V677 = CALLVALUE
0xb9a: V678 = 0x40
0xb9c: V679 = M[0x40]
0xba0: M[V679] = V677
0xba1: V680 = 0x20
0xba3: V681 = ADD 0x20 V679
0xba7: V682 = 0x40
0xba9: V683 = M[0x40]
0xbac: V684 = SUB V681 V683
0xbae: LOG V683 V684 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c V675
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xbaf
[0xbaf:0xc08]
---
Predecessors: [0xb60]
Successors: [0x5f2, 0xc09]
---
0xbaf JUMPDEST
0xbb0 JUMP
0xbb1 JUMPDEST
0xbb2 PUSH1 0x0
0xbb4 DUP1
0xbb5 PUSH1 0x0
0xbb7 SWAP1
0xbb8 SLOAD
0xbb9 SWAP1
0xbba PUSH2 0x100
0xbbd EXP
0xbbe SWAP1
0xbbf DIV
0xbc0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbd5 AND
0xbd6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbeb AND
0xbec CALLER
0xbed PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc02 AND
0xc03 EQ
0xc04 ISZERO
0xc05 PUSH2 0x5f2
0xc08 JUMPI
---
0xbaf: JUMPDEST 
0xbb0: JUMP S0
0xbb1: JUMPDEST 
0xbb2: V685 = 0x0
0xbb5: V686 = 0x0
0xbb8: V687 = S[0x0]
0xbba: V688 = 0x100
0xbbd: V689 = EXP 0x100 0x0
0xbbf: V690 = DIV V687 0x1
0xbc0: V691 = 0xffffffffffffffffffffffffffffffffffffffff
0xbd5: V692 = AND 0xffffffffffffffffffffffffffffffffffffffff V690
0xbd6: V693 = 0xffffffffffffffffffffffffffffffffffffffff
0xbeb: V694 = AND 0xffffffffffffffffffffffffffffffffffffffff V692
0xbec: V695 = CALLER
0xbed: V696 = 0xffffffffffffffffffffffffffffffffffffffff
0xc02: V697 = AND 0xffffffffffffffffffffffffffffffffffffffff V695
0xc03: V698 = EQ V697 V694
0xc04: V699 = ISZERO V698
0xc05: V700 = 0x5f2
0xc08: JUMPI 0x5f2 V699
---
Entry stack: []
Stack pops: 2
Stack additions: [0x0]
Exit stack: []

================================

Block 0xc09
[0xc09:0xcae]
---
Predecessors: [0xbaf]
Successors: [0xcaf]
---
0xc09 DUP4
0xc0a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc1f AND
0xc20 PUSH4 0xa9059cbb
0xc25 DUP5
0xc26 DUP5
0xc27 PUSH1 0x0
0xc29 PUSH1 0x40
0xc2b MLOAD
0xc2c PUSH1 0x20
0xc2e ADD
0xc2f MSTORE
0xc30 PUSH1 0x40
0xc32 MLOAD
0xc33 DUP4
0xc34 PUSH4 0xffffffff
0xc39 AND
0xc3a PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xc58 MUL
0xc59 DUP2
0xc5a MSTORE
0xc5b PUSH1 0x4
0xc5d ADD
0xc5e DUP1
0xc5f DUP4
0xc60 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc75 AND
0xc76 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc8b AND
0xc8c DUP2
0xc8d MSTORE
0xc8e PUSH1 0x20
0xc90 ADD
0xc91 DUP3
0xc92 DUP2
0xc93 MSTORE
0xc94 PUSH1 0x20
0xc96 ADD
0xc97 SWAP3
0xc98 POP
0xc99 POP
0xc9a POP
0xc9b PUSH1 0x20
0xc9d PUSH1 0x40
0xc9f MLOAD
0xca0 DUP1
0xca1 DUP4
0xca2 SUB
0xca3 DUP2
0xca4 PUSH1 0x0
0xca6 DUP8
0xca7 DUP1
0xca8 EXTCODESIZE
0xca9 ISZERO
0xcaa ISZERO
0xcab PUSH2 0x5d4
0xcae JUMPI
---
0xc0a: V701 = 0xffffffffffffffffffffffffffffffffffffffff
0xc1f: V702 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xc20: V703 = 0xa9059cbb
0xc27: V704 = 0x0
0xc29: V705 = 0x40
0xc2b: V706 = M[0x40]
0xc2c: V707 = 0x20
0xc2e: V708 = ADD 0x20 V706
0xc2f: M[V708] = 0x0
0xc30: V709 = 0x40
0xc32: V710 = M[0x40]
0xc34: V711 = 0xffffffff
0xc39: V712 = AND 0xffffffff 0xa9059cbb
0xc3a: V713 = 0x100000000000000000000000000000000000000000000000000000000
0xc58: V714 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0xc5a: M[V710] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xc5b: V715 = 0x4
0xc5d: V716 = ADD 0x4 V710
0xc60: V717 = 0xffffffffffffffffffffffffffffffffffffffff
0xc75: V718 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xc76: V719 = 0xffffffffffffffffffffffffffffffffffffffff
0xc8b: V720 = AND 0xffffffffffffffffffffffffffffffffffffffff V718
0xc8d: M[V716] = V720
0xc8e: V721 = 0x20
0xc90: V722 = ADD 0x20 V716
0xc93: M[V722] = S1
0xc94: V723 = 0x20
0xc96: V724 = ADD 0x20 V722
0xc9b: V725 = 0x20
0xc9d: V726 = 0x40
0xc9f: V727 = M[0x40]
0xca2: V728 = SUB V724 V727
0xca4: V729 = 0x0
0xca8: V730 = EXTCODESIZE V702
0xca9: V731 = ISZERO V730
0xcaa: V732 = ISZERO V731
0xcab: V733 = 0x5d4
0xcae: THROWI V732
---
Entry stack: [0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V702, 0xa9059cbb, V724, 0x20, V727, V728, V727, 0x0, V702]
Exit stack: [S2, S1, S0, 0x0, V702, 0xa9059cbb, V724, 0x20, V727, V728, V727, 0x0, V702]

================================

Block 0xcaf
[0xcaf:0xcbf]
---
Predecessors: [0xc09]
Successors: [0xcc0]
---
0xcaf PUSH1 0x0
0xcb1 DUP1
0xcb2 REVERT
0xcb3 JUMPDEST
0xcb4 PUSH2 0x2c6
0xcb7 GAS
0xcb8 SUB
0xcb9 CALL
0xcba ISZERO
0xcbb ISZERO
0xcbc PUSH2 0x5e5
0xcbf JUMPI
---
0xcaf: V734 = 0x0
0xcb2: REVERT 0x0 0x0
0xcb3: JUMPDEST 
0xcb4: V735 = 0x2c6
0xcb7: V736 = GAS
0xcb8: V737 = SUB V736 0x2c6
0xcb9: V738 = CALL V737 S0 S1 S2 S3 S4 S5
0xcba: V739 = ISZERO V738
0xcbb: V740 = ISZERO V739
0xcbc: V741 = 0x5e5
0xcbf: THROWI V740
---
Entry stack: [S12, S11, S10, 0x0, V702, 0xa9059cbb, V724, 0x20, V727, V728, V727, 0x0, V702]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xcc0
[0xcc0:0xcd0]
---
Predecessors: [0xcaf]
Successors: [0xcd1]
---
0xcc0 PUSH1 0x0
0xcc2 DUP1
0xcc3 REVERT
0xcc4 JUMPDEST
0xcc5 POP
0xcc6 POP
0xcc7 POP
0xcc8 PUSH1 0x40
0xcca MLOAD
0xccb DUP1
0xccc MLOAD
0xccd SWAP1
0xcce POP
0xccf SWAP1
0xcd0 POP
---
0xcc0: V742 = 0x0
0xcc3: REVERT 0x0 0x0
0xcc4: JUMPDEST 
0xcc8: V743 = 0x40
0xcca: V744 = M[0x40]
0xccc: V745 = M[V744]
---
Entry stack: []
Stack pops: 0
Stack additions: [V745]
Exit stack: []

================================

Block 0xcd1
[0xcd1:0xd11]
---
Predecessors: [0xcc0]
Successors: [0xd12]
---
0xcd1 JUMPDEST
0xcd2 SWAP4
0xcd3 SWAP3
0xcd4 POP
0xcd5 POP
0xcd6 POP
0xcd7 JUMP
0xcd8 JUMPDEST
0xcd9 PUSH1 0x2
0xcdb PUSH1 0x20
0xcdd MSTORE
0xcde DUP1
0xcdf PUSH1 0x0
0xce1 MSTORE
0xce2 PUSH1 0x40
0xce4 PUSH1 0x0
0xce6 SHA3
0xce7 PUSH1 0x0
0xce9 SWAP2
0xcea POP
0xceb SWAP1
0xcec POP
0xced SLOAD
0xcee DUP2
0xcef JUMP
0xcf0 JUMPDEST
0xcf1 PUSH1 0x0
0xcf3 ADDRESS
0xcf4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd09 AND
0xd0a BALANCE
0xd0b EQ
0xd0c ISZERO
0xd0d ISZERO
0xd0e PUSH2 0x637
0xd11 JUMPI
---
0xcd1: JUMPDEST 
0xcd7: JUMP S4
0xcd8: JUMPDEST 
0xcd9: V746 = 0x2
0xcdb: V747 = 0x20
0xcdd: M[0x20] = 0x2
0xcdf: V748 = 0x0
0xce1: M[0x0] = S0
0xce2: V749 = 0x40
0xce4: V750 = 0x0
0xce6: V751 = SHA3 0x0 0x40
0xce7: V752 = 0x0
0xced: V753 = S[V751]
0xcef: JUMP S1
0xcf0: JUMPDEST 
0xcf1: V754 = 0x0
0xcf3: V755 = ADDRESS
0xcf4: V756 = 0xffffffffffffffffffffffffffffffffffffffff
0xd09: V757 = AND 0xffffffffffffffffffffffffffffffffffffffff V755
0xd0a: V758 = BALANCE V757
0xd0b: V759 = EQ V758 0x0
0xd0c: V760 = ISZERO V759
0xd0d: V761 = ISZERO V760
0xd0e: V762 = 0x637
0xd11: THROWI V761
---
Entry stack: [V745]
Stack pops: 16
Stack additions: []
Exit stack: []

================================

Block 0xd12
[0xd12:0xd66]
---
Predecessors: [0xcd1]
Successors: [0xd67]
---
0xd12 PUSH1 0x0
0xd14 DUP1
0xd15 REVERT
0xd16 JUMPDEST
0xd17 PUSH1 0x0
0xd19 DUP1
0xd1a SWAP1
0xd1b SLOAD
0xd1c SWAP1
0xd1d PUSH2 0x100
0xd20 EXP
0xd21 SWAP1
0xd22 DIV
0xd23 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd38 AND
0xd39 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd4e AND
0xd4f SELFDESTRUCT
0xd50 JUMPDEST
0xd51 PUSH1 0x4
0xd53 PUSH1 0x0
0xd55 SWAP1
0xd56 SLOAD
0xd57 SWAP1
0xd58 PUSH2 0x100
0xd5b EXP
0xd5c SWAP1
0xd5d DIV
0xd5e PUSH1 0xff
0xd60 AND
0xd61 ISZERO
0xd62 ISZERO
0xd63 PUSH2 0x6fa
0xd66 JUMPI
---
0xd12: V763 = 0x0
0xd15: REVERT 0x0 0x0
0xd16: JUMPDEST 
0xd17: V764 = 0x0
0xd1b: V765 = S[0x0]
0xd1d: V766 = 0x100
0xd20: V767 = EXP 0x100 0x0
0xd22: V768 = DIV V765 0x1
0xd23: V769 = 0xffffffffffffffffffffffffffffffffffffffff
0xd38: V770 = AND 0xffffffffffffffffffffffffffffffffffffffff V768
0xd39: V771 = 0xffffffffffffffffffffffffffffffffffffffff
0xd4e: V772 = AND 0xffffffffffffffffffffffffffffffffffffffff V770
0xd4f: SELFDESTRUCT V772
0xd50: JUMPDEST 
0xd51: V773 = 0x4
0xd53: V774 = 0x0
0xd56: V775 = S[0x4]
0xd58: V776 = 0x100
0xd5b: V777 = EXP 0x100 0x0
0xd5d: V778 = DIV V775 0x1
0xd5e: V779 = 0xff
0xd60: V780 = AND 0xff V778
0xd61: V781 = ISZERO V780
0xd62: V782 = ISZERO V781
0xd63: V783 = 0x6fa
0xd66: THROWI V782
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd67
[0xd67:0xdd8]
---
Predecessors: [0xd12]
Successors: [0xdd9]
---
0xd67 CALLER
0xd68 PUSH1 0x0
0xd6a DUP1
0xd6b PUSH2 0x100
0xd6e EXP
0xd6f DUP2
0xd70 SLOAD
0xd71 DUP2
0xd72 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd87 MUL
0xd88 NOT
0xd89 AND
0xd8a SWAP1
0xd8b DUP4
0xd8c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xda1 AND
0xda2 MUL
0xda3 OR
0xda4 SWAP1
0xda5 SSTORE
0xda6 POP
0xda7 PUSH8 0x3782dace9d90000
0xdb0 PUSH1 0x3
0xdb2 DUP2
0xdb3 SWAP1
0xdb4 SSTORE
0xdb5 POP
0xdb6 PUSH1 0x0
0xdb8 PUSH1 0x4
0xdba PUSH1 0x0
0xdbc PUSH2 0x100
0xdbf EXP
0xdc0 DUP2
0xdc1 SLOAD
0xdc2 DUP2
0xdc3 PUSH1 0xff
0xdc5 MUL
0xdc6 NOT
0xdc7 AND
0xdc8 SWAP1
0xdc9 DUP4
0xdca ISZERO
0xdcb ISZERO
0xdcc MUL
0xdcd OR
0xdce SWAP1
0xdcf SSTORE
0xdd0 POP
0xdd1 PUSH2 0x6f9
0xdd4 PUSH2 0x41a
0xdd7 JUMP
0xdd8 JUMPDEST
---
0xd67: V784 = CALLER
0xd68: V785 = 0x0
0xd6b: V786 = 0x100
0xd6e: V787 = EXP 0x100 0x0
0xd70: V788 = S[0x0]
0xd72: V789 = 0xffffffffffffffffffffffffffffffffffffffff
0xd87: V790 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xd88: V791 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xd89: V792 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V788
0xd8c: V793 = 0xffffffffffffffffffffffffffffffffffffffff
0xda1: V794 = AND 0xffffffffffffffffffffffffffffffffffffffff V784
0xda2: V795 = MUL V794 0x1
0xda3: V796 = OR V795 V792
0xda5: S[0x0] = V796
0xda7: V797 = 0x3782dace9d90000
0xdb0: V798 = 0x3
0xdb4: S[0x3] = 0x3782dace9d90000
0xdb6: V799 = 0x0
0xdb8: V800 = 0x4
0xdba: V801 = 0x0
0xdbc: V802 = 0x100
0xdbf: V803 = EXP 0x100 0x0
0xdc1: V804 = S[0x4]
0xdc3: V805 = 0xff
0xdc5: V806 = MUL 0xff 0x1
0xdc6: V807 = NOT 0xff
0xdc7: V808 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V804
0xdca: V809 = ISZERO 0x0
0xdcb: V810 = ISZERO 0x1
0xdcc: V811 = MUL 0x0 0x1
0xdcd: V812 = OR 0x0 V808
0xdcf: S[0x4] = V812
0xdd1: V813 = 0x6f9
0xdd4: V814 = 0x41a
0xdd7: THROW 
0xdd8: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: [0x6f9]
Exit stack: []

================================

Block 0xdd9
[0xdd9:0xf0d]
---
Predecessors: [0xd67]
Successors: [0xf0e]
---
0xdd9 JUMPDEST
0xdda CALLER
0xddb PUSH1 0x6
0xddd PUSH1 0x0
0xddf PUSH2 0x100
0xde2 EXP
0xde3 DUP2
0xde4 SLOAD
0xde5 DUP2
0xde6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdfb MUL
0xdfc NOT
0xdfd AND
0xdfe SWAP1
0xdff DUP4
0xe00 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe15 AND
0xe16 MUL
0xe17 OR
0xe18 SWAP1
0xe19 SSTORE
0xe1a POP
0xe1b JUMP
0xe1c JUMPDEST
0xe1d PUSH1 0x0
0xe1f PUSH1 0x6
0xe21 PUSH1 0x0
0xe23 SWAP1
0xe24 SLOAD
0xe25 SWAP1
0xe26 PUSH2 0x100
0xe29 EXP
0xe2a SWAP1
0xe2b DIV
0xe2c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe41 AND
0xe42 SWAP1
0xe43 POP
0xe44 SWAP1
0xe45 JUMP
0xe46 JUMPDEST
0xe47 PUSH1 0x0
0xe49 PUSH2 0x853
0xe4c DUP3
0xe4d CALLER
0xe4e DUP5
0xe4f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe64 AND
0xe65 PUSH4 0x70a08231
0xe6a PUSH1 0x1
0xe6c PUSH1 0x0
0xe6e SWAP1
0xe6f SLOAD
0xe70 SWAP1
0xe71 PUSH2 0x100
0xe74 EXP
0xe75 SWAP1
0xe76 DIV
0xe77 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe8c AND
0xe8d PUSH1 0x0
0xe8f PUSH1 0x40
0xe91 MLOAD
0xe92 PUSH1 0x20
0xe94 ADD
0xe95 MSTORE
0xe96 PUSH1 0x40
0xe98 MLOAD
0xe99 DUP3
0xe9a PUSH4 0xffffffff
0xe9f AND
0xea0 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xebe MUL
0xebf DUP2
0xec0 MSTORE
0xec1 PUSH1 0x4
0xec3 ADD
0xec4 DUP1
0xec5 DUP3
0xec6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xedb AND
0xedc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xef1 AND
0xef2 DUP2
0xef3 MSTORE
0xef4 PUSH1 0x20
0xef6 ADD
0xef7 SWAP2
0xef8 POP
0xef9 POP
0xefa PUSH1 0x20
0xefc PUSH1 0x40
0xefe MLOAD
0xeff DUP1
0xf00 DUP4
0xf01 SUB
0xf02 DUP2
0xf03 PUSH1 0x0
0xf05 DUP8
0xf06 DUP1
0xf07 EXTCODESIZE
0xf08 ISZERO
0xf09 ISZERO
0xf0a PUSH2 0x833
0xf0d JUMPI
---
0xdd9: JUMPDEST 
0xdda: V815 = CALLER
0xddb: V816 = 0x6
0xddd: V817 = 0x0
0xddf: V818 = 0x100
0xde2: V819 = EXP 0x100 0x0
0xde4: V820 = S[0x6]
0xde6: V821 = 0xffffffffffffffffffffffffffffffffffffffff
0xdfb: V822 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xdfc: V823 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xdfd: V824 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V820
0xe00: V825 = 0xffffffffffffffffffffffffffffffffffffffff
0xe15: V826 = AND 0xffffffffffffffffffffffffffffffffffffffff V815
0xe16: V827 = MUL V826 0x1
0xe17: V828 = OR V827 V824
0xe19: S[0x6] = V828
0xe1b: JUMP S0
0xe1c: JUMPDEST 
0xe1d: V829 = 0x0
0xe1f: V830 = 0x6
0xe21: V831 = 0x0
0xe24: V832 = S[0x6]
0xe26: V833 = 0x100
0xe29: V834 = EXP 0x100 0x0
0xe2b: V835 = DIV V832 0x1
0xe2c: V836 = 0xffffffffffffffffffffffffffffffffffffffff
0xe41: V837 = AND 0xffffffffffffffffffffffffffffffffffffffff V835
0xe45: JUMP S0
0xe46: JUMPDEST 
0xe47: V838 = 0x0
0xe49: V839 = 0x853
0xe4d: V840 = CALLER
0xe4f: V841 = 0xffffffffffffffffffffffffffffffffffffffff
0xe64: V842 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xe65: V843 = 0x70a08231
0xe6a: V844 = 0x1
0xe6c: V845 = 0x0
0xe6f: V846 = S[0x1]
0xe71: V847 = 0x100
0xe74: V848 = EXP 0x100 0x0
0xe76: V849 = DIV V846 0x1
0xe77: V850 = 0xffffffffffffffffffffffffffffffffffffffff
0xe8c: V851 = AND 0xffffffffffffffffffffffffffffffffffffffff V849
0xe8d: V852 = 0x0
0xe8f: V853 = 0x40
0xe91: V854 = M[0x40]
0xe92: V855 = 0x20
0xe94: V856 = ADD 0x20 V854
0xe95: M[V856] = 0x0
0xe96: V857 = 0x40
0xe98: V858 = M[0x40]
0xe9a: V859 = 0xffffffff
0xe9f: V860 = AND 0xffffffff 0x70a08231
0xea0: V861 = 0x100000000000000000000000000000000000000000000000000000000
0xebe: V862 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0xec0: M[V858] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xec1: V863 = 0x4
0xec3: V864 = ADD 0x4 V858
0xec6: V865 = 0xffffffffffffffffffffffffffffffffffffffff
0xedb: V866 = AND 0xffffffffffffffffffffffffffffffffffffffff V851
0xedc: V867 = 0xffffffffffffffffffffffffffffffffffffffff
0xef1: V868 = AND 0xffffffffffffffffffffffffffffffffffffffff V866
0xef3: M[V864] = V868
0xef4: V869 = 0x20
0xef6: V870 = ADD 0x20 V864
0xefa: V871 = 0x20
0xefc: V872 = 0x40
0xefe: V873 = M[0x40]
0xf01: V874 = SUB V870 V873
0xf03: V875 = 0x0
0xf07: V876 = EXTCODESIZE V842
0xf08: V877 = ISZERO V876
0xf09: V878 = ISZERO V877
0xf0a: V879 = 0x833
0xf0d: THROWI V878
---
Entry stack: []
Stack pops: 3
Stack additions: [V842, 0x0, V873, V874, V873, 0x20, V870, 0x70a08231, V842, V840, S0, 0x853, 0x0, S0]
Exit stack: []

================================

Block 0xf0e
[0xf0e:0xf1e]
---
Predecessors: [0xdd9]
Successors: [0xf1f]
---
0xf0e PUSH1 0x0
0xf10 DUP1
0xf11 REVERT
0xf12 JUMPDEST
0xf13 PUSH2 0x2c6
0xf16 GAS
0xf17 SUB
0xf18 CALL
0xf19 ISZERO
0xf1a ISZERO
0xf1b PUSH2 0x844
0xf1e JUMPI
---
0xf0e: V880 = 0x0
0xf11: REVERT 0x0 0x0
0xf12: JUMPDEST 
0xf13: V881 = 0x2c6
0xf16: V882 = GAS
0xf17: V883 = SUB V882 0x2c6
0xf18: V884 = CALL V883 S0 S1 S2 S3 S4 S5
0xf19: V885 = ISZERO V884
0xf1a: V886 = ISZERO V885
0xf1b: V887 = 0x844
0xf1e: THROWI V886
---
Entry stack: [S13, 0x0, 0x853, S10, V840, V842, 0x70a08231, V870, 0x20, V873, V874, V873, 0x0, V842]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xf1f
[0xf1f:0x100a]
---
Predecessors: [0xf0e]
Successors: [0x100b]
---
0xf1f PUSH1 0x0
0xf21 DUP1
0xf22 REVERT
0xf23 JUMPDEST
0xf24 POP
0xf25 POP
0xf26 POP
0xf27 PUSH1 0x40
0xf29 MLOAD
0xf2a DUP1
0xf2b MLOAD
0xf2c SWAP1
0xf2d POP
0xf2e PUSH2 0x4d2
0xf31 JUMP
0xf32 JUMPDEST
0xf33 SWAP1
0xf34 POP
0xf35 SWAP2
0xf36 SWAP1
0xf37 POP
0xf38 JUMP
0xf39 JUMPDEST
0xf3a PUSH1 0x0
0xf3c PUSH1 0x5
0xf3e SLOAD
0xf3f SWAP1
0xf40 POP
0xf41 SWAP1
0xf42 JUMP
0xf43 JUMPDEST
0xf44 PUSH1 0x0
0xf46 PUSH2 0x950
0xf49 DUP4
0xf4a DUP4
0xf4b DUP6
0xf4c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf61 AND
0xf62 PUSH4 0x70a08231
0xf67 PUSH1 0x1
0xf69 PUSH1 0x0
0xf6b SWAP1
0xf6c SLOAD
0xf6d SWAP1
0xf6e PUSH2 0x100
0xf71 EXP
0xf72 SWAP1
0xf73 DIV
0xf74 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf89 AND
0xf8a PUSH1 0x0
0xf8c PUSH1 0x40
0xf8e MLOAD
0xf8f PUSH1 0x20
0xf91 ADD
0xf92 MSTORE
0xf93 PUSH1 0x40
0xf95 MLOAD
0xf96 DUP3
0xf97 PUSH4 0xffffffff
0xf9c AND
0xf9d PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xfbb MUL
0xfbc DUP2
0xfbd MSTORE
0xfbe PUSH1 0x4
0xfc0 ADD
0xfc1 DUP1
0xfc2 DUP3
0xfc3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfd8 AND
0xfd9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfee AND
0xfef DUP2
0xff0 MSTORE
0xff1 PUSH1 0x20
0xff3 ADD
0xff4 SWAP2
0xff5 POP
0xff6 POP
0xff7 PUSH1 0x20
0xff9 PUSH1 0x40
0xffb MLOAD
0xffc DUP1
0xffd DUP4
0xffe SUB
0xfff DUP2
0x1000 PUSH1 0x0
0x1002 DUP8
0x1003 DUP1
0x1004 EXTCODESIZE
0x1005 ISZERO
0x1006 ISZERO
0x1007 PUSH2 0x930
0x100a JUMPI
---
0xf1f: V888 = 0x0
0xf22: REVERT 0x0 0x0
0xf23: JUMPDEST 
0xf27: V889 = 0x40
0xf29: V890 = M[0x40]
0xf2b: V891 = M[V890]
0xf2e: V892 = 0x4d2
0xf31: THROW 
0xf32: JUMPDEST 
0xf38: JUMP S3
0xf39: JUMPDEST 
0xf3a: V893 = 0x0
0xf3c: V894 = 0x5
0xf3e: V895 = S[0x5]
0xf42: JUMP S0
0xf43: JUMPDEST 
0xf44: V896 = 0x0
0xf46: V897 = 0x950
0xf4c: V898 = 0xffffffffffffffffffffffffffffffffffffffff
0xf61: V899 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xf62: V900 = 0x70a08231
0xf67: V901 = 0x1
0xf69: V902 = 0x0
0xf6c: V903 = S[0x1]
0xf6e: V904 = 0x100
0xf71: V905 = EXP 0x100 0x0
0xf73: V906 = DIV V903 0x1
0xf74: V907 = 0xffffffffffffffffffffffffffffffffffffffff
0xf89: V908 = AND 0xffffffffffffffffffffffffffffffffffffffff V906
0xf8a: V909 = 0x0
0xf8c: V910 = 0x40
0xf8e: V911 = M[0x40]
0xf8f: V912 = 0x20
0xf91: V913 = ADD 0x20 V911
0xf92: M[V913] = 0x0
0xf93: V914 = 0x40
0xf95: V915 = M[0x40]
0xf97: V916 = 0xffffffff
0xf9c: V917 = AND 0xffffffff 0x70a08231
0xf9d: V918 = 0x100000000000000000000000000000000000000000000000000000000
0xfbb: V919 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0xfbd: M[V915] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xfbe: V920 = 0x4
0xfc0: V921 = ADD 0x4 V915
0xfc3: V922 = 0xffffffffffffffffffffffffffffffffffffffff
0xfd8: V923 = AND 0xffffffffffffffffffffffffffffffffffffffff V908
0xfd9: V924 = 0xffffffffffffffffffffffffffffffffffffffff
0xfee: V925 = AND 0xffffffffffffffffffffffffffffffffffffffff V923
0xff0: M[V921] = V925
0xff1: V926 = 0x20
0xff3: V927 = ADD 0x20 V921
0xff7: V928 = 0x20
0xff9: V929 = 0x40
0xffb: V930 = M[0x40]
0xffe: V931 = SUB V927 V930
0x1000: V932 = 0x0
0x1004: V933 = EXTCODESIZE V899
0x1005: V934 = ISZERO V933
0x1006: V935 = ISZERO V934
0x1007: V936 = 0x930
0x100a: THROWI V935
---
Entry stack: []
Stack pops: 0
Stack additions: [V891, S0, V895, V899, 0x0, V930, V931, V930, 0x20, V927, 0x70a08231, V899, S0, S1, 0x950, 0x0, S0, S1]
Exit stack: []

================================

Block 0x100b
[0x100b:0x101b]
---
Predecessors: [0xf1f]
Successors: [0x101c]
---
0x100b PUSH1 0x0
0x100d DUP1
0x100e REVERT
0x100f JUMPDEST
0x1010 PUSH2 0x2c6
0x1013 GAS
0x1014 SUB
0x1015 CALL
0x1016 ISZERO
0x1017 ISZERO
0x1018 PUSH2 0x941
0x101b JUMPI
---
0x100b: V937 = 0x0
0x100e: REVERT 0x0 0x0
0x100f: JUMPDEST 
0x1010: V938 = 0x2c6
0x1013: V939 = GAS
0x1014: V940 = SUB V939 0x2c6
0x1015: V941 = CALL V940 S0 S1 S2 S3 S4 S5
0x1016: V942 = ISZERO V941
0x1017: V943 = ISZERO V942
0x1018: V944 = 0x941
0x101b: THROWI V943
---
Entry stack: [S14, S13, 0x0, 0x950, S10, S9, V899, 0x70a08231, V927, 0x20, V930, V931, V930, 0x0, V899]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x101c
[0x101c:0x1044]
---
Predecessors: [0x100b]
Successors: [0x1045]
---
0x101c PUSH1 0x0
0x101e DUP1
0x101f REVERT
0x1020 JUMPDEST
0x1021 POP
0x1022 POP
0x1023 POP
0x1024 PUSH1 0x40
0x1026 MLOAD
0x1027 DUP1
0x1028 MLOAD
0x1029 SWAP1
0x102a POP
0x102b PUSH2 0x4d2
0x102e JUMP
0x102f JUMPDEST
0x1030 SWAP1
0x1031 POP
0x1032 SWAP3
0x1033 SWAP2
0x1034 POP
0x1035 POP
0x1036 JUMP
0x1037 JUMPDEST
0x1038 PUSH1 0x0
0x103a DUP1
0x103b PUSH1 0x5
0x103d SLOAD
0x103e GT
0x103f DUP1
0x1040 ISZERO
0x1041 PUSH2 0x96d
0x1044 JUMPI
---
0x101c: V945 = 0x0
0x101f: REVERT 0x0 0x0
0x1020: JUMPDEST 
0x1024: V946 = 0x40
0x1026: V947 = M[0x40]
0x1028: V948 = M[V947]
0x102b: V949 = 0x4d2
0x102e: THROW 
0x102f: JUMPDEST 
0x1036: JUMP S4
0x1037: JUMPDEST 
0x1038: V950 = 0x0
0x103b: V951 = 0x5
0x103d: V952 = S[0x5]
0x103e: V953 = GT V952 0x0
0x1040: V954 = ISZERO V953
0x1041: V955 = 0x96d
0x1044: THROWI V954
---
Entry stack: []
Stack pops: 0
Stack additions: [V948, S0, V953, 0x0]
Exit stack: []

================================

Block 0x1045
[0x1045:0x104b]
---
Predecessors: [0x101c]
Successors: [0x104c]
---
0x1045 POP
0x1046 TIMESTAMP
0x1047 PUSH1 0x5
0x1049 SLOAD
0x104a GT
0x104b ISZERO
---
0x1046: V956 = TIMESTAMP
0x1047: V957 = 0x5
0x1049: V958 = S[0x5]
0x104a: V959 = GT V958 V956
0x104b: V960 = ISZERO V959
---
Entry stack: [0x0, V953]
Stack pops: 1
Stack additions: [V960]
Exit stack: [0x0, V960]

================================

Block 0x104c
[0x104c:0x10f3]
---
Predecessors: [0x1045]
Successors: [0x10f4]
---
0x104c JUMPDEST
0x104d SWAP1
0x104e POP
0x104f SWAP1
0x1050 JUMP
0x1051 JUMPDEST
0x1052 PUSH1 0x0
0x1054 PUSH1 0x3
0x1056 SLOAD
0x1057 SWAP1
0x1058 POP
0x1059 SWAP1
0x105a JUMP
0x105b JUMPDEST
0x105c DUP1
0x105d PUSH1 0x5
0x105f DUP2
0x1060 SWAP1
0x1061 SSTORE
0x1062 POP
0x1063 PUSH32 0x92414f92852596a89f5b8bdacf2959c3bac4aa99997f039f871996efd9a00a68
0x1084 PUSH1 0x5
0x1086 SLOAD
0x1087 PUSH1 0x40
0x1089 MLOAD
0x108a DUP1
0x108b DUP3
0x108c DUP2
0x108d MSTORE
0x108e PUSH1 0x20
0x1090 ADD
0x1091 SWAP2
0x1092 POP
0x1093 POP
0x1094 PUSH1 0x40
0x1096 MLOAD
0x1097 DUP1
0x1098 SWAP2
0x1099 SUB
0x109a SWAP1
0x109b LOG1
0x109c POP
0x109d JUMP
0x109e JUMPDEST
0x109f PUSH1 0x0
0x10a1 DUP1
0x10a2 SWAP1
0x10a3 SLOAD
0x10a4 SWAP1
0x10a5 PUSH2 0x100
0x10a8 EXP
0x10a9 SWAP1
0x10aa DIV
0x10ab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10c0 AND
0x10c1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10d6 AND
0x10d7 CALLER
0x10d8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10ed AND
0x10ee EQ
0x10ef ISZERO
0x10f0 PUSH2 0xa55
0x10f3 JUMPI
---
0x104c: JUMPDEST 
0x1050: JUMP S2
0x1051: JUMPDEST 
0x1052: V961 = 0x0
0x1054: V962 = 0x3
0x1056: V963 = S[0x3]
0x105a: JUMP S0
0x105b: JUMPDEST 
0x105d: V964 = 0x5
0x1061: S[0x5] = S0
0x1063: V965 = 0x92414f92852596a89f5b8bdacf2959c3bac4aa99997f039f871996efd9a00a68
0x1084: V966 = 0x5
0x1086: V967 = S[0x5]
0x1087: V968 = 0x40
0x1089: V969 = M[0x40]
0x108d: M[V969] = V967
0x108e: V970 = 0x20
0x1090: V971 = ADD 0x20 V969
0x1094: V972 = 0x40
0x1096: V973 = M[0x40]
0x1099: V974 = SUB V971 V973
0x109b: LOG V973 V974 0x92414f92852596a89f5b8bdacf2959c3bac4aa99997f039f871996efd9a00a68
0x109d: JUMP S1
0x109e: JUMPDEST 
0x109f: V975 = 0x0
0x10a3: V976 = S[0x0]
0x10a5: V977 = 0x100
0x10a8: V978 = EXP 0x100 0x0
0x10aa: V979 = DIV V976 0x1
0x10ab: V980 = 0xffffffffffffffffffffffffffffffffffffffff
0x10c0: V981 = AND 0xffffffffffffffffffffffffffffffffffffffff V979
0x10c1: V982 = 0xffffffffffffffffffffffffffffffffffffffff
0x10d6: V983 = AND 0xffffffffffffffffffffffffffffffffffffffff V981
0x10d7: V984 = CALLER
0x10d8: V985 = 0xffffffffffffffffffffffffffffffffffffffff
0x10ed: V986 = AND 0xffffffffffffffffffffffffffffffffffffffff V984
0x10ee: V987 = EQ V986 V983
0x10ef: V988 = ISZERO V987
0x10f0: V989 = 0xa55
0x10f3: THROWI V988
---
Entry stack: [0x0, V960]
Stack pops: 18
Stack additions: []
Exit stack: []

================================

Block 0x10f4
[0x10f4:0x1133]
---
Predecessors: [0x104c]
Successors: [0x1134]
---
0x10f4 DUP1
0x10f5 PUSH1 0x0
0x10f7 DUP1
0x10f8 PUSH2 0x100
0x10fb EXP
0x10fc DUP2
0x10fd SLOAD
0x10fe DUP2
0x10ff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1114 MUL
0x1115 NOT
0x1116 AND
0x1117 SWAP1
0x1118 DUP4
0x1119 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x112e AND
0x112f MUL
0x1130 OR
0x1131 SWAP1
0x1132 SSTORE
0x1133 POP
---
0x10f5: V990 = 0x0
0x10f8: V991 = 0x100
0x10fb: V992 = EXP 0x100 0x0
0x10fd: V993 = S[0x0]
0x10ff: V994 = 0xffffffffffffffffffffffffffffffffffffffff
0x1114: V995 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x1115: V996 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1116: V997 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V993
0x1119: V998 = 0xffffffffffffffffffffffffffffffffffffffff
0x112e: V999 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x112f: V1000 = MUL V999 0x1
0x1130: V1001 = OR V1000 V997
0x1132: S[0x0] = V1001
---
Entry stack: []
Stack pops: 1
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x1134
[0x1134:0x118e]
---
Predecessors: [0x10f4]
Successors: [0x118f]
---
0x1134 JUMPDEST
0x1135 POP
0x1136 JUMP
0x1137 JUMPDEST
0x1138 PUSH1 0x0
0x113a DUP1
0x113b PUSH1 0x0
0x113d SWAP1
0x113e SLOAD
0x113f SWAP1
0x1140 PUSH2 0x100
0x1143 EXP
0x1144 SWAP1
0x1145 DIV
0x1146 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x115b AND
0x115c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1171 AND
0x1172 CALLER
0x1173 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1188 AND
0x1189 EQ
0x118a ISZERO
0x118b PUSH2 0xba4
0x118e JUMPI
---
0x1134: JUMPDEST 
0x1136: JUMP S1
0x1137: JUMPDEST 
0x1138: V1002 = 0x0
0x113b: V1003 = 0x0
0x113e: V1004 = S[0x0]
0x1140: V1005 = 0x100
0x1143: V1006 = EXP 0x100 0x0
0x1145: V1007 = DIV V1004 0x1
0x1146: V1008 = 0xffffffffffffffffffffffffffffffffffffffff
0x115b: V1009 = AND 0xffffffffffffffffffffffffffffffffffffffff V1007
0x115c: V1010 = 0xffffffffffffffffffffffffffffffffffffffff
0x1171: V1011 = AND 0xffffffffffffffffffffffffffffffffffffffff V1009
0x1172: V1012 = CALLER
0x1173: V1013 = 0xffffffffffffffffffffffffffffffffffffffff
0x1188: V1014 = AND 0xffffffffffffffffffffffffffffffffffffffff V1012
0x1189: V1015 = EQ V1014 V1011
0x118a: V1016 = ISZERO V1015
0x118b: V1017 = 0xba4
0x118e: THROWI V1016
---
Entry stack: [S0]
Stack pops: 4
Stack additions: [0x0]
Exit stack: []

================================

Block 0x118f
[0x118f:0x1195]
---
Predecessors: [0x1134]
Successors: [0x958]
---
0x118f PUSH2 0xab7
0x1192 PUSH2 0x958
0x1195 JUMP
---
0x118f: V1018 = 0xab7
0x1192: V1019 = 0x958
0x1195: JUMP 0x958
---
Entry stack: [0x0]
Stack pops: 0
Stack additions: [0xab7]
Exit stack: [0x0, 0xab7]

================================

Block 0x1196
[0x1196:0x119b]
---
Predecessors: []
Successors: [0x119c]
---
0x1196 JUMPDEST
0x1197 ISZERO
0x1198 PUSH2 0xba3
0x119b JUMPI
---
0x1196: JUMPDEST 
0x1197: V1020 = ISZERO S0
0x1198: V1021 = 0xba3
0x119b: THROWI V1020
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x119c
[0x119c:0x11e7]
---
Predecessors: [0x1196]
Successors: [0x11e8]
---
0x119c PUSH1 0x2
0x119e PUSH1 0x0
0x11a0 CALLER
0x11a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11b6 AND
0x11b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11cc AND
0x11cd DUP2
0x11ce MSTORE
0x11cf PUSH1 0x20
0x11d1 ADD
0x11d2 SWAP1
0x11d3 DUP2
0x11d4 MSTORE
0x11d5 PUSH1 0x20
0x11d7 ADD
0x11d8 PUSH1 0x0
0x11da SHA3
0x11db SLOAD
0x11dc SWAP1
0x11dd POP
0x11de PUSH1 0x0
0x11e0 DUP2
0x11e1 GT
0x11e2 DUP1
0x11e3 ISZERO
0x11e4 PUSH2 0xb0e
0x11e7 JUMPI
---
0x119c: V1022 = 0x2
0x119e: V1023 = 0x0
0x11a0: V1024 = CALLER
0x11a1: V1025 = 0xffffffffffffffffffffffffffffffffffffffff
0x11b6: V1026 = AND 0xffffffffffffffffffffffffffffffffffffffff V1024
0x11b7: V1027 = 0xffffffffffffffffffffffffffffffffffffffff
0x11cc: V1028 = AND 0xffffffffffffffffffffffffffffffffffffffff V1026
0x11ce: M[0x0] = V1028
0x11cf: V1029 = 0x20
0x11d1: V1030 = ADD 0x20 0x0
0x11d4: M[0x20] = 0x2
0x11d5: V1031 = 0x20
0x11d7: V1032 = ADD 0x20 0x20
0x11d8: V1033 = 0x0
0x11da: V1034 = SHA3 0x0 0x40
0x11db: V1035 = S[V1034]
0x11de: V1036 = 0x0
0x11e1: V1037 = GT V1035 0x0
0x11e3: V1038 = ISZERO V1037
0x11e4: V1039 = 0xb0e
0x11e7: THROWI V1038
---
Entry stack: []
Stack pops: 1
Stack additions: [V1035, V1037]
Exit stack: [V1035, V1037]

================================

Block 0x11e8
[0x11e8:0x11ec]
---
Predecessors: [0x119c]
Successors: [0x11ed]
---
0x11e8 POP
0x11e9 DUP1
0x11ea DUP3
0x11eb GT
0x11ec ISZERO
---
0x11eb: V1040 = GT S2 V1035
0x11ec: V1041 = ISZERO V1040
---
Entry stack: [V1035, V1037]
Stack pops: 3
Stack additions: [S2, S1, V1041]
Exit stack: [S0, V1035, V1041]

================================

Block 0x11ed
[0x11ed:0x11f2]
---
Predecessors: [0x11e8]
Successors: [0x11f3]
---
0x11ed JUMPDEST
0x11ee ISZERO
0x11ef PUSH2 0xba2
0x11f2 JUMPI
---
0x11ed: JUMPDEST 
0x11ee: V1042 = ISZERO V1041
0x11ef: V1043 = 0xba2
0x11f2: THROWI V1042
---
Entry stack: [S2, V1035, V1041]
Stack pops: 1
Stack additions: []
Exit stack: [S2, V1035]

================================

Block 0x11f3
[0x11f3:0x122d]
---
Predecessors: [0x11ed]
Successors: [0x122e]
---
0x11f3 DUP3
0x11f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1209 AND
0x120a PUSH2 0x8fc
0x120d DUP4
0x120e SWAP1
0x120f DUP2
0x1210 ISZERO
0x1211 MUL
0x1212 SWAP1
0x1213 PUSH1 0x40
0x1215 MLOAD
0x1216 PUSH1 0x0
0x1218 PUSH1 0x40
0x121a MLOAD
0x121b DUP1
0x121c DUP4
0x121d SUB
0x121e DUP2
0x121f DUP6
0x1220 DUP9
0x1221 DUP9
0x1222 CALL
0x1223 SWAP4
0x1224 POP
0x1225 POP
0x1226 POP
0x1227 POP
0x1228 ISZERO
0x1229 ISZERO
0x122a PUSH2 0xb53
0x122d JUMPI
---
0x11f4: V1044 = 0xffffffffffffffffffffffffffffffffffffffff
0x1209: V1045 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x120a: V1046 = 0x8fc
0x1210: V1047 = ISZERO S1
0x1211: V1048 = MUL V1047 0x8fc
0x1213: V1049 = 0x40
0x1215: V1050 = M[0x40]
0x1216: V1051 = 0x0
0x1218: V1052 = 0x40
0x121a: V1053 = M[0x40]
0x121d: V1054 = SUB V1050 V1053
0x1222: V1055 = CALL V1048 V1045 S1 V1053 V1054 V1053 0x0
0x1228: V1056 = ISZERO V1055
0x1229: V1057 = ISZERO V1056
0x122a: V1058 = 0xb53
0x122d: THROWI V1057
---
Entry stack: [S1, V1035]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S0, S1, V1035]

================================

Block 0x122e
[0x122e:0x1280]
---
Predecessors: [0x11f3]
Successors: [0x1281]
---
0x122e PUSH1 0x0
0x1230 DUP1
0x1231 REVERT
0x1232 JUMPDEST
0x1233 DUP3
0x1234 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1249 AND
0x124a PUSH32 0x7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65
0x126b DUP4
0x126c PUSH1 0x40
0x126e MLOAD
0x126f DUP1
0x1270 DUP3
0x1271 DUP2
0x1272 MSTORE
0x1273 PUSH1 0x20
0x1275 ADD
0x1276 SWAP2
0x1277 POP
0x1278 POP
0x1279 PUSH1 0x40
0x127b MLOAD
0x127c DUP1
0x127d SWAP2
0x127e SUB
0x127f SWAP1
0x1280 LOG2
---
0x122e: V1059 = 0x0
0x1231: REVERT 0x0 0x0
0x1232: JUMPDEST 
0x1234: V1060 = 0xffffffffffffffffffffffffffffffffffffffff
0x1249: V1061 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x124a: V1062 = 0x7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65
0x126c: V1063 = 0x40
0x126e: V1064 = M[0x40]
0x1272: M[V1064] = S1
0x1273: V1065 = 0x20
0x1275: V1066 = ADD 0x20 V1064
0x1279: V1067 = 0x40
0x127b: V1068 = M[0x40]
0x127e: V1069 = SUB V1066 V1068
0x1280: LOG V1068 V1069 0x7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65 V1061
---
Entry stack: [S2, S1, V1035]
Stack pops: 0
Stack additions: [S0, S1, S2]
Exit stack: []

================================

Block 0x1281
[0x1281:0x1281]
---
Predecessors: [0x122e]
Successors: [0x1282]
---
0x1281 JUMPDEST
---
0x1281: JUMPDEST 
---
Entry stack: [S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S2, S1, S0]

================================

Block 0x1282
[0x1282:0x1282]
---
Predecessors: [0x1281]
Successors: [0x1283]
---
0x1282 JUMPDEST
---
0x1282: JUMPDEST 
---
Entry stack: [S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S2, S1, S0]

================================

Block 0x1283
[0x1283:0x12d0]
---
Predecessors: [0x1282]
Successors: []
---
0x1283 JUMPDEST
0x1284 POP
0x1285 POP
0x1286 POP
0x1287 JUMP
0x1288 JUMPDEST
0x1289 PUSH1 0x1
0x128b PUSH1 0x4
0x128d PUSH1 0x0
0x128f PUSH2 0x100
0x1292 EXP
0x1293 DUP2
0x1294 SLOAD
0x1295 DUP2
0x1296 PUSH1 0xff
0x1298 MUL
0x1299 NOT
0x129a AND
0x129b SWAP1
0x129c DUP4
0x129d ISZERO
0x129e ISZERO
0x129f MUL
0x12a0 OR
0x12a1 SWAP1
0x12a2 SSTORE
0x12a3 POP
0x12a4 JUMP
0x12a5 STOP
0x12a6 LOG1
0x12a7 PUSH6 0x627a7a723058
0x12ae SHA3
0x12af MISSING 0xe7
0x12b0 PUSH28 0x1de8cc1f880ad1a74216ee9b9d77c79032f11bf0db3ffd3725f1bb7f
0x12cd MISSING 0x47
0x12ce EQ
0x12cf STOP
0x12d0 MISSING 0x29
---
0x1283: JUMPDEST 
0x1287: JUMP S3
0x1288: JUMPDEST 
0x1289: V1070 = 0x1
0x128b: V1071 = 0x4
0x128d: V1072 = 0x0
0x128f: V1073 = 0x100
0x1292: V1074 = EXP 0x100 0x0
0x1294: V1075 = S[0x4]
0x1296: V1076 = 0xff
0x1298: V1077 = MUL 0xff 0x1
0x1299: V1078 = NOT 0xff
0x129a: V1079 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1075
0x129d: V1080 = ISZERO 0x1
0x129e: V1081 = ISZERO 0x0
0x129f: V1082 = MUL 0x1 0x1
0x12a0: V1083 = OR 0x1 V1079
0x12a2: S[0x4] = V1083
0x12a4: JUMP S0
0x12a5: STOP 
0x12a6: LOG S0 S1 S2
0x12a7: V1084 = 0x627a7a723058
0x12ae: V1085 = SHA3 0x627a7a723058 S3
0x12af: MISSING 0xe7
0x12b0: V1086 = 0x1de8cc1f880ad1a74216ee9b9d77c79032f11bf0db3ffd3725f1bb7f
0x12cd: MISSING 0x47
0x12ce: V1087 = EQ S0 S1
0x12cf: STOP 
0x12d0: MISSING 0x29
---
Entry stack: [S2, S1, S0]
Stack pops: 249
Stack additions: []
Exit stack: []

================================

Function 0:
Public function signature: 0xf2fde38b
Entry block: 0x3d
Exit block: 0x74
Body: 0x3d, 0x44, 0x48, 0x74, 0x76, 0xcc, 0x10c

Function 1:
Public fallback function
Entry block: 0x39
Exit block: 0x39
Body: 0x39

