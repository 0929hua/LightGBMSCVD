Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x5c]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x3ccfd60b
0x3c EQ
0x3d PUSH2 0x5c
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x3ccfd60b
0x3c: V13 = EQ 0x3ccfd60b V11
0x3d: V14 = 0x5c
0x40: JUMPI 0x5c V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x71]
---
0x41 DUP1
0x42 PUSH4 0x8da5cb5b
0x47 EQ
0x48 PUSH2 0x71
0x4b JUMPI
---
0x42: V15 = 0x8da5cb5b
0x47: V16 = EQ 0x8da5cb5b V11
0x48: V17 = 0x71
0x4b: JUMPI 0x71 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xc6]
---
0x4c DUP1
0x4d PUSH4 0xad8733ca
0x52 EQ
0x53 PUSH2 0xc6
0x56 JUMPI
---
0x4d: V18 = 0xad8733ca
0x52: V19 = EQ 0xad8733ca V11
0x53: V20 = 0xc6
0x56: JUMPI 0xc6 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x5b]
---
Predecessors: [0x0, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x57: JUMPDEST 
0x58: V21 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0x62]
---
Predecessors: [0xd]
Successors: [0x63, 0x67]
---
0x5c JUMPDEST
0x5d CALLVALUE
0x5e ISZERO
0x5f PUSH2 0x67
0x62 JUMPI
---
0x5c: JUMPDEST 
0x5d: V22 = CALLVALUE
0x5e: V23 = ISZERO V22
0x5f: V24 = 0x67
0x62: JUMPI 0x67 V23
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x63
[0x63:0x66]
---
Predecessors: [0x5c]
Successors: []
---
0x63 PUSH1 0x0
0x65 DUP1
0x66 REVERT
---
0x63: V25 = 0x0
0x66: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x67
[0x67:0x6e]
---
Predecessors: [0x5c]
Successors: [0x193]
---
0x67 JUMPDEST
0x68 PUSH2 0x6f
0x6b PUSH2 0x193
0x6e JUMP
---
0x67: JUMPDEST 
0x68: V26 = 0x6f
0x6b: V27 = 0x193
0x6e: JUMP 0x193
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6f]
Exit stack: [V11, 0x6f]

================================

Block 0x6f
[0x6f:0x70]
---
Predecessors: [0x266]
Successors: []
---
0x6f JUMPDEST
0x70 STOP
---
0x6f: JUMPDEST 
0x70: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x71
[0x71:0x77]
---
Predecessors: [0x41]
Successors: [0x78, 0x7c]
---
0x71 JUMPDEST
0x72 CALLVALUE
0x73 ISZERO
0x74 PUSH2 0x7c
0x77 JUMPI
---
0x71: JUMPDEST 
0x72: V28 = CALLVALUE
0x73: V29 = ISZERO V28
0x74: V30 = 0x7c
0x77: JUMPI 0x7c V29
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x78
[0x78:0x7b]
---
Predecessors: [0x71]
Successors: []
---
0x78 PUSH1 0x0
0x7a DUP1
0x7b REVERT
---
0x78: V31 = 0x0
0x7b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7c
[0x7c:0x83]
---
Predecessors: [0x71]
Successors: [0x268]
---
0x7c JUMPDEST
0x7d PUSH2 0x84
0x80 PUSH2 0x268
0x83 JUMP
---
0x7c: JUMPDEST 
0x7d: V32 = 0x84
0x80: V33 = 0x268
0x83: JUMP 0x268
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x84]
Exit stack: [V11, 0x84]

================================

Block 0x84
[0x84:0xc5]
---
Predecessors: [0x268]
Successors: []
---
0x84 JUMPDEST
0x85 PUSH1 0x40
0x87 MLOAD
0x88 DUP1
0x89 DUP3
0x8a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9f AND
0xa0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb5 AND
0xb6 DUP2
0xb7 MSTORE
0xb8 PUSH1 0x20
0xba ADD
0xbb SWAP2
0xbc POP
0xbd POP
0xbe PUSH1 0x40
0xc0 MLOAD
0xc1 DUP1
0xc2 SWAP2
0xc3 SUB
0xc4 SWAP1
0xc5 RETURN
---
0x84: JUMPDEST 
0x85: V34 = 0x40
0x87: V35 = M[0x40]
0x8a: V36 = 0xffffffffffffffffffffffffffffffffffffffff
0x9f: V37 = AND 0xffffffffffffffffffffffffffffffffffffffff V154
0xa0: V38 = 0xffffffffffffffffffffffffffffffffffffffff
0xb5: V39 = AND 0xffffffffffffffffffffffffffffffffffffffff V37
0xb7: M[V35] = V39
0xb8: V40 = 0x20
0xba: V41 = ADD 0x20 V35
0xbe: V42 = 0x40
0xc0: V43 = M[0x40]
0xc3: V44 = SUB V41 V43
0xc5: RETURN V43 V44
---
Entry stack: [V11, 0x84, V154]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x84]

================================

Block 0xc6
[0xc6:0xcc]
---
Predecessors: [0x4c]
Successors: [0xcd, 0xd1]
---
0xc6 JUMPDEST
0xc7 CALLVALUE
0xc8 ISZERO
0xc9 PUSH2 0xd1
0xcc JUMPI
---
0xc6: JUMPDEST 
0xc7: V45 = CALLVALUE
0xc8: V46 = ISZERO V45
0xc9: V47 = 0xd1
0xcc: JUMPI 0xd1 V46
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xcd
[0xcd:0xd0]
---
Predecessors: [0xc6]
Successors: []
---
0xcd PUSH1 0x0
0xcf DUP1
0xd0 REVERT
---
0xcd: V48 = 0x0
0xd0: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd1
[0xd1:0x17c]
---
Predecessors: [0xc6]
Successors: [0x28d]
---
0xd1 JUMPDEST
0xd2 PUSH2 0x17d
0xd5 PUSH1 0x4
0xd7 DUP1
0xd8 DUP1
0xd9 CALLDATALOAD
0xda PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xef AND
0xf0 SWAP1
0xf1 PUSH1 0x20
0xf3 ADD
0xf4 SWAP1
0xf5 SWAP2
0xf6 SWAP1
0xf7 DUP1
0xf8 CALLDATALOAD
0xf9 SWAP1
0xfa PUSH1 0x20
0xfc ADD
0xfd SWAP1
0xfe DUP3
0xff ADD
0x100 DUP1
0x101 CALLDATALOAD
0x102 SWAP1
0x103 PUSH1 0x20
0x105 ADD
0x106 SWAP1
0x107 DUP1
0x108 DUP1
0x109 PUSH1 0x20
0x10b MUL
0x10c PUSH1 0x20
0x10e ADD
0x10f PUSH1 0x40
0x111 MLOAD
0x112 SWAP1
0x113 DUP2
0x114 ADD
0x115 PUSH1 0x40
0x117 MSTORE
0x118 DUP1
0x119 SWAP4
0x11a SWAP3
0x11b SWAP2
0x11c SWAP1
0x11d DUP2
0x11e DUP2
0x11f MSTORE
0x120 PUSH1 0x20
0x122 ADD
0x123 DUP4
0x124 DUP4
0x125 PUSH1 0x20
0x127 MUL
0x128 DUP1
0x129 DUP3
0x12a DUP5
0x12b CALLDATACOPY
0x12c DUP3
0x12d ADD
0x12e SWAP2
0x12f POP
0x130 POP
0x131 POP
0x132 POP
0x133 POP
0x134 POP
0x135 SWAP2
0x136 SWAP1
0x137 DUP1
0x138 CALLDATALOAD
0x139 SWAP1
0x13a PUSH1 0x20
0x13c ADD
0x13d SWAP1
0x13e DUP3
0x13f ADD
0x140 DUP1
0x141 CALLDATALOAD
0x142 SWAP1
0x143 PUSH1 0x20
0x145 ADD
0x146 SWAP1
0x147 DUP1
0x148 DUP1
0x149 PUSH1 0x20
0x14b MUL
0x14c PUSH1 0x20
0x14e ADD
0x14f PUSH1 0x40
0x151 MLOAD
0x152 SWAP1
0x153 DUP2
0x154 ADD
0x155 PUSH1 0x40
0x157 MSTORE
0x158 DUP1
0x159 SWAP4
0x15a SWAP3
0x15b SWAP2
0x15c SWAP1
0x15d DUP2
0x15e DUP2
0x15f MSTORE
0x160 PUSH1 0x20
0x162 ADD
0x163 DUP4
0x164 DUP4
0x165 PUSH1 0x20
0x167 MUL
0x168 DUP1
0x169 DUP3
0x16a DUP5
0x16b CALLDATACOPY
0x16c DUP3
0x16d ADD
0x16e SWAP2
0x16f POP
0x170 POP
0x171 POP
0x172 POP
0x173 POP
0x174 POP
0x175 SWAP2
0x176 SWAP1
0x177 POP
0x178 POP
0x179 PUSH2 0x28d
0x17c JUMP
---
0xd1: JUMPDEST 
0xd2: V49 = 0x17d
0xd5: V50 = 0x4
0xd9: V51 = CALLDATALOAD 0x4
0xda: V52 = 0xffffffffffffffffffffffffffffffffffffffff
0xef: V53 = AND 0xffffffffffffffffffffffffffffffffffffffff V51
0xf1: V54 = 0x20
0xf3: V55 = ADD 0x20 0x4
0xf8: V56 = CALLDATALOAD 0x24
0xfa: V57 = 0x20
0xfc: V58 = ADD 0x20 0x24
0xff: V59 = ADD 0x4 V56
0x101: V60 = CALLDATALOAD V59
0x103: V61 = 0x20
0x105: V62 = ADD 0x20 V59
0x109: V63 = 0x20
0x10b: V64 = MUL 0x20 V60
0x10c: V65 = 0x20
0x10e: V66 = ADD 0x20 V64
0x10f: V67 = 0x40
0x111: V68 = M[0x40]
0x114: V69 = ADD V68 V66
0x115: V70 = 0x40
0x117: M[0x40] = V69
0x11f: M[V68] = V60
0x120: V71 = 0x20
0x122: V72 = ADD 0x20 V68
0x125: V73 = 0x20
0x127: V74 = MUL 0x20 V60
0x12b: CALLDATACOPY V72 V62 V74
0x12d: V75 = ADD V72 V74
0x138: V76 = CALLDATALOAD 0x44
0x13a: V77 = 0x20
0x13c: V78 = ADD 0x20 0x44
0x13f: V79 = ADD 0x4 V76
0x141: V80 = CALLDATALOAD V79
0x143: V81 = 0x20
0x145: V82 = ADD 0x20 V79
0x149: V83 = 0x20
0x14b: V84 = MUL 0x20 V80
0x14c: V85 = 0x20
0x14e: V86 = ADD 0x20 V84
0x14f: V87 = 0x40
0x151: V88 = M[0x40]
0x154: V89 = ADD V88 V86
0x155: V90 = 0x40
0x157: M[0x40] = V89
0x15f: M[V88] = V80
0x160: V91 = 0x20
0x162: V92 = ADD 0x20 V88
0x165: V93 = 0x20
0x167: V94 = MUL 0x20 V80
0x16b: CALLDATACOPY V92 V82 V94
0x16d: V95 = ADD V92 V94
0x179: V96 = 0x28d
0x17c: JUMP 0x28d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x17d, V53, V68, V88]
Exit stack: [V11, 0x17d, V53, V68, V88]

================================

Block 0x17d
[0x17d:0x192]
---
Predecessors: [0x3c5]
Successors: []
---
0x17d JUMPDEST
0x17e PUSH1 0x40
0x180 MLOAD
0x181 DUP1
0x182 DUP3
0x183 DUP2
0x184 MSTORE
0x185 PUSH1 0x20
0x187 ADD
0x188 SWAP2
0x189 POP
0x18a POP
0x18b PUSH1 0x40
0x18d MLOAD
0x18e DUP1
0x18f SWAP2
0x190 SUB
0x191 SWAP1
0x192 RETURN
---
0x17d: JUMPDEST 
0x17e: V97 = 0x40
0x180: V98 = M[0x40]
0x184: M[V98] = S0
0x185: V99 = 0x20
0x187: V100 = ADD 0x20 V98
0x18b: V101 = 0x40
0x18d: V102 = M[0x40]
0x190: V103 = SUB V100 V102
0x192: RETURN V102 V103
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x193
[0x193:0x1e9]
---
Predecessors: [0x67]
Successors: [0x1ea, 0x1ee]
---
0x193 JUMPDEST
0x194 PUSH1 0x0
0x196 DUP1
0x197 SWAP1
0x198 SLOAD
0x199 SWAP1
0x19a PUSH2 0x100
0x19d EXP
0x19e SWAP1
0x19f DIV
0x1a0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b5 AND
0x1b6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1cb AND
0x1cc CALLER
0x1cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e2 AND
0x1e3 EQ
0x1e4 ISZERO
0x1e5 ISZERO
0x1e6 PUSH2 0x1ee
0x1e9 JUMPI
---
0x193: JUMPDEST 
0x194: V104 = 0x0
0x198: V105 = S[0x0]
0x19a: V106 = 0x100
0x19d: V107 = EXP 0x100 0x0
0x19f: V108 = DIV V105 0x1
0x1a0: V109 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b5: V110 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x1b6: V111 = 0xffffffffffffffffffffffffffffffffffffffff
0x1cb: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x1cc: V113 = CALLER
0x1cd: V114 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e2: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x1e3: V116 = EQ V115 V112
0x1e4: V117 = ISZERO V116
0x1e5: V118 = ISZERO V117
0x1e6: V119 = 0x1ee
0x1e9: JUMPI 0x1ee V118
---
Entry stack: [V11, 0x6f]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6f]

================================

Block 0x1ea
[0x1ea:0x1ed]
---
Predecessors: [0x193]
Successors: []
---
0x1ea PUSH1 0x0
0x1ec DUP1
0x1ed REVERT
---
0x1ea: V120 = 0x0
0x1ed: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6f]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6f]

================================

Block 0x1ee
[0x1ee:0x261]
---
Predecessors: [0x193]
Successors: [0x262, 0x266]
---
0x1ee JUMPDEST
0x1ef PUSH1 0x0
0x1f1 DUP1
0x1f2 SWAP1
0x1f3 SLOAD
0x1f4 SWAP1
0x1f5 PUSH2 0x100
0x1f8 EXP
0x1f9 SWAP1
0x1fa DIV
0x1fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x210 AND
0x211 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x226 AND
0x227 PUSH2 0x8fc
0x22a ADDRESS
0x22b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x240 AND
0x241 BALANCE
0x242 SWAP1
0x243 DUP2
0x244 ISZERO
0x245 MUL
0x246 SWAP1
0x247 PUSH1 0x40
0x249 MLOAD
0x24a PUSH1 0x0
0x24c PUSH1 0x40
0x24e MLOAD
0x24f DUP1
0x250 DUP4
0x251 SUB
0x252 DUP2
0x253 DUP6
0x254 DUP9
0x255 DUP9
0x256 CALL
0x257 SWAP4
0x258 POP
0x259 POP
0x25a POP
0x25b POP
0x25c ISZERO
0x25d ISZERO
0x25e PUSH2 0x266
0x261 JUMPI
---
0x1ee: JUMPDEST 
0x1ef: V121 = 0x0
0x1f3: V122 = S[0x0]
0x1f5: V123 = 0x100
0x1f8: V124 = EXP 0x100 0x0
0x1fa: V125 = DIV V122 0x1
0x1fb: V126 = 0xffffffffffffffffffffffffffffffffffffffff
0x210: V127 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x211: V128 = 0xffffffffffffffffffffffffffffffffffffffff
0x226: V129 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x227: V130 = 0x8fc
0x22a: V131 = ADDRESS
0x22b: V132 = 0xffffffffffffffffffffffffffffffffffffffff
0x240: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff V131
0x241: V134 = BALANCE V133
0x244: V135 = ISZERO V134
0x245: V136 = MUL V135 0x8fc
0x247: V137 = 0x40
0x249: V138 = M[0x40]
0x24a: V139 = 0x0
0x24c: V140 = 0x40
0x24e: V141 = M[0x40]
0x251: V142 = SUB V138 V141
0x256: V143 = CALL V136 V129 V134 V141 V142 V141 0x0
0x25c: V144 = ISZERO V143
0x25d: V145 = ISZERO V144
0x25e: V146 = 0x266
0x261: JUMPI 0x266 V145
---
Entry stack: [V11, 0x6f]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6f]

================================

Block 0x262
[0x262:0x265]
---
Predecessors: [0x1ee]
Successors: []
---
0x262 PUSH1 0x0
0x264 DUP1
0x265 REVERT
---
0x262: V147 = 0x0
0x265: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6f]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6f]

================================

Block 0x266
[0x266:0x267]
---
Predecessors: [0x1ee]
Successors: [0x6f]
---
0x266 JUMPDEST
0x267 JUMP
---
0x266: JUMPDEST 
0x267: JUMP 0x6f
---
Entry stack: [V11, 0x6f]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x268
[0x268:0x28c]
---
Predecessors: [0x7c]
Successors: [0x84]
---
0x268 JUMPDEST
0x269 PUSH1 0x0
0x26b DUP1
0x26c SWAP1
0x26d SLOAD
0x26e SWAP1
0x26f PUSH2 0x100
0x272 EXP
0x273 SWAP1
0x274 DIV
0x275 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28a AND
0x28b DUP2
0x28c JUMP
---
0x268: JUMPDEST 
0x269: V148 = 0x0
0x26d: V149 = S[0x0]
0x26f: V150 = 0x100
0x272: V151 = EXP 0x100 0x0
0x274: V152 = DIV V149 0x1
0x275: V153 = 0xffffffffffffffffffffffffffffffffffffffff
0x28a: V154 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0x28c: JUMP 0x84
---
Entry stack: [V11, 0x84]
Stack pops: 1
Stack additions: [S0, V154]
Exit stack: [V11, 0x84, V154]

================================

Block 0x28d
[0x28d:0x294]
---
Predecessors: [0xd1]
Successors: [0x295]
---
0x28d JUMPDEST
0x28e PUSH1 0x0
0x290 DUP1
0x291 PUSH1 0x0
0x293 SWAP1
0x294 POP
---
0x28d: JUMPDEST 
0x28e: V155 = 0x0
0x291: V156 = 0x0
---
Entry stack: [V11, 0x17d, V53, V68, V88]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V11, 0x17d, V53, V68, V88, 0x0, 0x0]

================================

Block 0x295
[0x295:0x29e]
---
Predecessors: [0x28d, 0x3af]
Successors: [0x29f, 0x3c5]
---
0x295 JUMPDEST
0x296 DUP4
0x297 MLOAD
0x298 DUP2
0x299 LT
0x29a ISZERO
0x29b PUSH2 0x3c5
0x29e JUMPI
---
0x295: JUMPDEST 
0x297: V157 = M[V68]
0x299: V158 = LT S0 V157
0x29a: V159 = ISZERO V158
0x29b: V160 = 0x3c5
0x29e: JUMPI 0x3c5 V159
---
Entry stack: [V11, 0x17d, V53, V68, V88, 0x0, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x17d, V53, V68, V88, 0x0, S0]

================================

Block 0x29f
[0x29f:0x2c7]
---
Predecessors: [0x295]
Successors: [0x2c8, 0x2c9]
---
0x29f DUP5
0x2a0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b5 AND
0x2b6 PUSH4 0x23b872dd
0x2bb CALLER
0x2bc DUP7
0x2bd DUP5
0x2be DUP2
0x2bf MLOAD
0x2c0 DUP2
0x2c1 LT
0x2c2 ISZERO
0x2c3 ISZERO
0x2c4 PUSH2 0x2c9
0x2c7 JUMPI
---
0x2a0: V161 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b5: V162 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0x2b6: V163 = 0x23b872dd
0x2bb: V164 = CALLER
0x2bf: V165 = M[V68]
0x2c1: V166 = LT S0 V165
0x2c2: V167 = ISZERO V166
0x2c3: V168 = ISZERO V167
0x2c4: V169 = 0x2c9
0x2c7: JUMPI 0x2c9 V168
---
Entry stack: [V11, 0x17d, V53, V68, V88, 0x0, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V162, 0x23b872dd, V164, S3, S0]
Exit stack: [V11, 0x17d, V53, V68, V88, 0x0, S0, V162, 0x23b872dd, V164, V68, S0]

================================

Block 0x2c8
[0x2c8:0x2c8]
---
Predecessors: [0x29f]
Successors: []
---
0x2c8 INVALID
---
0x2c8: INVALID 
---
Entry stack: [V11, 0x17d, V53, V68, V88, 0x0, S5, V162, 0x23b872dd, V164, V68, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x17d, V53, V68, V88, 0x0, S5, V162, 0x23b872dd, V164, V68, S0]

================================

Block 0x2c9
[0x2c9:0x2df]
---
Predecessors: [0x29f]
Successors: [0x2e0, 0x2e1]
---
0x2c9 JUMPDEST
0x2ca SWAP1
0x2cb PUSH1 0x20
0x2cd ADD
0x2ce SWAP1
0x2cf PUSH1 0x20
0x2d1 MUL
0x2d2 ADD
0x2d3 MLOAD
0x2d4 DUP7
0x2d5 DUP6
0x2d6 DUP2
0x2d7 MLOAD
0x2d8 DUP2
0x2d9 LT
0x2da ISZERO
0x2db ISZERO
0x2dc PUSH2 0x2e1
0x2df JUMPI
---
0x2c9: JUMPDEST 
0x2cb: V170 = 0x20
0x2cd: V171 = ADD 0x20 V68
0x2cf: V172 = 0x20
0x2d1: V173 = MUL 0x20 S0
0x2d2: V174 = ADD V173 V171
0x2d3: V175 = M[V174]
0x2d7: V176 = M[V88]
0x2d9: V177 = LT S5 V176
0x2da: V178 = ISZERO V177
0x2db: V179 = ISZERO V178
0x2dc: V180 = 0x2e1
0x2df: JUMPI 0x2e1 V179
---
Entry stack: [V11, 0x17d, V53, V68, V88, 0x0, S5, V162, 0x23b872dd, V164, V68, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, V175, S7, S5]
Exit stack: [V11, 0x17d, V53, V68, V88, 0x0, S5, V162, 0x23b872dd, V164, V175, V88, S5]

================================

Block 0x2e0
[0x2e0:0x2e0]
---
Predecessors: [0x2c9]
Successors: []
---
0x2e0 INVALID
---
0x2e0: INVALID 
---
Entry stack: [V11, 0x17d, V53, V68, V88, 0x0, S6, V162, 0x23b872dd, V164, V175, V88, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x17d, V53, V68, V88, 0x0, S6, V162, 0x23b872dd, V164, V175, V88, S0]

================================

Block 0x2e1
[0x2e1:0x39d]
---
Predecessors: [0x2c9]
Successors: [0x39e, 0x3a2]
---
0x2e1 JUMPDEST
0x2e2 SWAP1
0x2e3 PUSH1 0x20
0x2e5 ADD
0x2e6 SWAP1
0x2e7 PUSH1 0x20
0x2e9 MUL
0x2ea ADD
0x2eb MLOAD
0x2ec PUSH1 0x40
0x2ee MLOAD
0x2ef DUP5
0x2f0 PUSH4 0xffffffff
0x2f5 AND
0x2f6 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x314 MUL
0x315 DUP2
0x316 MSTORE
0x317 PUSH1 0x4
0x319 ADD
0x31a DUP1
0x31b DUP5
0x31c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x331 AND
0x332 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x347 AND
0x348 DUP2
0x349 MSTORE
0x34a PUSH1 0x20
0x34c ADD
0x34d DUP4
0x34e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x363 AND
0x364 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x379 AND
0x37a DUP2
0x37b MSTORE
0x37c PUSH1 0x20
0x37e ADD
0x37f DUP3
0x380 DUP2
0x381 MSTORE
0x382 PUSH1 0x20
0x384 ADD
0x385 SWAP4
0x386 POP
0x387 POP
0x388 POP
0x389 POP
0x38a PUSH1 0x20
0x38c PUSH1 0x40
0x38e MLOAD
0x38f DUP1
0x390 DUP4
0x391 SUB
0x392 DUP2
0x393 PUSH1 0x0
0x395 DUP8
0x396 DUP1
0x397 EXTCODESIZE
0x398 ISZERO
0x399 ISZERO
0x39a PUSH2 0x3a2
0x39d JUMPI
---
0x2e1: JUMPDEST 
0x2e3: V181 = 0x20
0x2e5: V182 = ADD 0x20 V88
0x2e7: V183 = 0x20
0x2e9: V184 = MUL 0x20 S0
0x2ea: V185 = ADD V184 V182
0x2eb: V186 = M[V185]
0x2ec: V187 = 0x40
0x2ee: V188 = M[0x40]
0x2f0: V189 = 0xffffffff
0x2f5: V190 = AND 0xffffffff 0x23b872dd
0x2f6: V191 = 0x100000000000000000000000000000000000000000000000000000000
0x314: V192 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x23b872dd
0x316: M[V188] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x317: V193 = 0x4
0x319: V194 = ADD 0x4 V188
0x31c: V195 = 0xffffffffffffffffffffffffffffffffffffffff
0x331: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff V164
0x332: V197 = 0xffffffffffffffffffffffffffffffffffffffff
0x347: V198 = AND 0xffffffffffffffffffffffffffffffffffffffff V196
0x349: M[V194] = V198
0x34a: V199 = 0x20
0x34c: V200 = ADD 0x20 V194
0x34e: V201 = 0xffffffffffffffffffffffffffffffffffffffff
0x363: V202 = AND 0xffffffffffffffffffffffffffffffffffffffff V175
0x364: V203 = 0xffffffffffffffffffffffffffffffffffffffff
0x379: V204 = AND 0xffffffffffffffffffffffffffffffffffffffff V202
0x37b: M[V200] = V204
0x37c: V205 = 0x20
0x37e: V206 = ADD 0x20 V200
0x381: M[V206] = V186
0x382: V207 = 0x20
0x384: V208 = ADD 0x20 V206
0x38a: V209 = 0x20
0x38c: V210 = 0x40
0x38e: V211 = M[0x40]
0x391: V212 = SUB V208 V211
0x393: V213 = 0x0
0x397: V214 = EXTCODESIZE V162
0x398: V215 = ISZERO V214
0x399: V216 = ISZERO V215
0x39a: V217 = 0x3a2
0x39d: JUMPI 0x3a2 V216
---
Entry stack: [V11, 0x17d, V53, V68, V88, 0x0, S6, V162, 0x23b872dd, V164, V175, V88, S0]
Stack pops: 6
Stack additions: [S5, S4, V208, 0x20, V211, V212, V211, 0x0, S5]
Exit stack: [V11, 0x17d, V53, V68, V88, 0x0, S6, V162, 0x23b872dd, V208, 0x20, V211, V212, V211, 0x0, V162]

================================

Block 0x39e
[0x39e:0x3a1]
---
Predecessors: [0x2e1]
Successors: []
---
0x39e PUSH1 0x0
0x3a0 DUP1
0x3a1 REVERT
---
0x39e: V218 = 0x0
0x3a1: REVERT 0x0 0x0
---
Entry stack: [V11, 0x17d, V53, V68, V88, 0x0, S9, V162, 0x23b872dd, V208, 0x20, V211, V212, V211, 0x0, V162]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x17d, V53, V68, V88, 0x0, S9, V162, 0x23b872dd, V208, 0x20, V211, V212, V211, 0x0, V162]

================================

Block 0x3a2
[0x3a2:0x3aa]
---
Predecessors: [0x2e1]
Successors: [0x3ab, 0x3af]
---
0x3a2 JUMPDEST
0x3a3 GAS
0x3a4 CALL
0x3a5 ISZERO
0x3a6 ISZERO
0x3a7 PUSH2 0x3af
0x3aa JUMPI
---
0x3a2: JUMPDEST 
0x3a3: V219 = GAS
0x3a4: V220 = CALL V219 V162 0x0 V211 V212 V211 0x20
0x3a5: V221 = ISZERO V220
0x3a6: V222 = ISZERO V221
0x3a7: V223 = 0x3af
0x3aa: JUMPI 0x3af V222
---
Entry stack: [V11, 0x17d, V53, V68, V88, 0x0, S9, V162, 0x23b872dd, V208, 0x20, V211, V212, V211, 0x0, V162]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x17d, V53, V68, V88, 0x0, S9, V162, 0x23b872dd, V208]

================================

Block 0x3ab
[0x3ab:0x3ae]
---
Predecessors: [0x3a2]
Successors: []
---
0x3ab PUSH1 0x0
0x3ad DUP1
0x3ae REVERT
---
0x3ab: V224 = 0x0
0x3ae: REVERT 0x0 0x0
---
Entry stack: [V11, 0x17d, V53, V68, V88, 0x0, S3, V162, 0x23b872dd, V208]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x17d, V53, V68, V88, 0x0, S3, V162, 0x23b872dd, V208]

================================

Block 0x3af
[0x3af:0x3c4]
---
Predecessors: [0x3a2]
Successors: [0x295]
---
0x3af JUMPDEST
0x3b0 POP
0x3b1 POP
0x3b2 POP
0x3b3 PUSH1 0x40
0x3b5 MLOAD
0x3b6 DUP1
0x3b7 MLOAD
0x3b8 SWAP1
0x3b9 POP
0x3ba POP
0x3bb PUSH1 0x1
0x3bd DUP2
0x3be ADD
0x3bf SWAP1
0x3c0 POP
0x3c1 PUSH2 0x295
0x3c4 JUMP
---
0x3af: JUMPDEST 
0x3b3: V225 = 0x40
0x3b5: V226 = M[0x40]
0x3b7: V227 = M[V226]
0x3bb: V228 = 0x1
0x3be: V229 = ADD S3 0x1
0x3c1: V230 = 0x295
0x3c4: JUMP 0x295
---
Entry stack: [V11, 0x17d, V53, V68, V88, 0x0, S3, V162, 0x23b872dd, V208]
Stack pops: 4
Stack additions: [V229]
Exit stack: [V11, 0x17d, V53, V68, V88, 0x0, V229]

================================

Block 0x3c5
[0x3c5:0x3cf]
---
Predecessors: [0x295]
Successors: [0x17d]
---
0x3c5 JUMPDEST
0x3c6 DUP1
0x3c7 SWAP2
0x3c8 POP
0x3c9 POP
0x3ca SWAP4
0x3cb SWAP3
0x3cc POP
0x3cd POP
0x3ce POP
0x3cf JUMP
---
0x3c5: JUMPDEST 
0x3cf: JUMP 0x17d
---
Entry stack: [V11, 0x17d, V53, V68, V88, 0x0, S0]
Stack pops: 6
Stack additions: [S0]
Exit stack: [V11, S0]

================================

Block 0x3d0
[0x3d0:0x3fb]
---
Predecessors: []
Successors: []
---
0x3d0 STOP
0x3d1 LOG1
0x3d2 PUSH6 0x627a7a723058
0x3d9 SHA3
0x3da MISSING 0xc9
0x3db PUSH11 0x1aa88283e37b73d45cdea2
0x3e7 MISSING 0x28
0x3e8 SWAP12
0x3e9 MSTORE
0x3ea CALL
0x3eb MISSING 0xb2
0x3ec PUSH10 0x8de1c982cb186556da25
0x3f7 SUB
0x3f8 MISSING 0x4e
0x3f9 MISSING 0xfc
0x3fa STOP
0x3fb MISSING 0x29
---
0x3d0: STOP 
0x3d1: LOG S0 S1 S2
0x3d2: V231 = 0x627a7a723058
0x3d9: V232 = SHA3 0x627a7a723058 S3
0x3da: MISSING 0xc9
0x3db: V233 = 0x1aa88283e37b73d45cdea2
0x3e7: MISSING 0x28
0x3e9: M[S12] = S1
0x3ea: V234 = CALL S2 S3 S4 S5 S6 S7 S8
0x3eb: MISSING 0xb2
0x3ec: V235 = 0x8de1c982cb186556da25
0x3f7: V236 = SUB 0x8de1c982cb186556da25 S0
0x3f8: MISSING 0x4e
0x3f9: MISSING 0xfc
0x3fa: STOP 
0x3fb: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V232, 0x1aa88283e37b73d45cdea2, V234, S9, S10, S11, S0, V236]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0x5c
Exit block: 0x6f
Body: 0x5c, 0x63, 0x67, 0x6f, 0x193, 0x1ea, 0x1ee, 0x262, 0x266

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0x71
Exit block: 0x84
Body: 0x71, 0x78, 0x7c, 0x84, 0x268

Function 2:
Public function signature: 0xad8733ca
Entry block: 0xc6
Exit block: 0x3ab
Body: 0xc6, 0xcd, 0xd1, 0x17d, 0x28d, 0x295, 0x29f, 0x2c8, 0x2c9, 0x2e0, 0x2e1, 0x39e, 0x3a2, 0x3ab, 0x3af, 0x3c5

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

