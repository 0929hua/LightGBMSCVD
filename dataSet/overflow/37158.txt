Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xa2]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xa2
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xa2
0xa: JUMPI 0xa2 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0xb3]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x27e235e3
0x3a EQ
0x3b PUSH2 0xb3
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x27e235e3
0x3a: V12 = EQ 0x27e235e3 V10
0x3b: V13 = 0xb3
0x3e: JUMPI 0xb3 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x100]
---
0x3f DUP1
0x40 PUSH4 0x28b8e9cf
0x45 EQ
0x46 PUSH2 0x100
0x49 JUMPI
---
0x40: V14 = 0x28b8e9cf
0x45: V15 = EQ 0x28b8e9cf V10
0x46: V16 = 0x100
0x49: JUMPI 0x100 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x115]
---
0x4a DUP1
0x4b PUSH4 0x2a2fbd4b
0x50 EQ
0x51 PUSH2 0x115
0x54 JUMPI
---
0x4b: V17 = 0x2a2fbd4b
0x50: V18 = EQ 0x2a2fbd4b V10
0x51: V19 = 0x115
0x54: JUMPI 0x115 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x13e]
---
0x55 DUP1
0x56 PUSH4 0x5259347d
0x5b EQ
0x5c PUSH2 0x13e
0x5f JUMPI
---
0x56: V20 = 0x5259347d
0x5b: V21 = EQ 0x5259347d V10
0x5c: V22 = 0x13e
0x5f: JUMPI 0x13e V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x148]
---
0x60 DUP1
0x61 PUSH4 0x62568d83
0x66 EQ
0x67 PUSH2 0x148
0x6a JUMPI
---
0x61: V23 = 0x62568d83
0x66: V24 = EQ 0x62568d83 V10
0x67: V25 = 0x148
0x6a: JUMPI 0x148 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x60]
Successors: [0x76, 0x171]
---
0x6b DUP1
0x6c PUSH4 0x6360fc3f
0x71 EQ
0x72 PUSH2 0x171
0x75 JUMPI
---
0x6c: V26 = 0x6360fc3f
0x71: V27 = EQ 0x6360fc3f V10
0x72: V28 = 0x171
0x75: JUMPI 0x171 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x76
[0x76:0x80]
---
Predecessors: [0x6b]
Successors: [0x81, 0x19e]
---
0x76 DUP1
0x77 PUSH4 0x6ad1fe02
0x7c EQ
0x7d PUSH2 0x19e
0x80 JUMPI
---
0x77: V29 = 0x6ad1fe02
0x7c: V30 = EQ 0x6ad1fe02 V10
0x7d: V31 = 0x19e
0x80: JUMPI 0x19e V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x81
[0x81:0x8b]
---
Predecessors: [0x76]
Successors: [0x8c, 0x1f3]
---
0x81 DUP1
0x82 PUSH4 0x81702c34
0x87 EQ
0x88 PUSH2 0x1f3
0x8b JUMPI
---
0x82: V32 = 0x81702c34
0x87: V33 = EQ 0x81702c34 V10
0x88: V34 = 0x1f3
0x8b: JUMPI 0x1f3 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8c
[0x8c:0x96]
---
Predecessors: [0x81]
Successors: [0x97, 0x208]
---
0x8c DUP1
0x8d PUSH4 0xc42bb1e4
0x92 EQ
0x93 PUSH2 0x208
0x96 JUMPI
---
0x8d: V35 = 0xc42bb1e4
0x92: V36 = EQ 0xc42bb1e4 V10
0x93: V37 = 0x208
0x96: JUMPI 0x208 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x97
[0x97:0xa1]
---
Predecessors: [0x8c]
Successors: [0xa2, 0x231]
---
0x97 DUP1
0x98 PUSH4 0xfcfdbc23
0x9d EQ
0x9e PUSH2 0x231
0xa1 JUMPI
---
0x98: V38 = 0xfcfdbc23
0x9d: V39 = EQ 0xfcfdbc23 V10
0x9e: V40 = 0x231
0xa1: JUMPI 0x231 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa2
[0xa2:0xa5]
---
Predecessors: [0x0, 0x97]
Successors: [0xa6]
---
0xa2 JUMPDEST
0xa3 PUSH2 0xb1
---
0xa2: JUMPDEST 
0xa3: V41 = 0xb1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xb1]
Exit stack: [V10, 0xb1]

================================

Block 0xa6
[0xa6:0xad]
---
Predecessors: [0xa2]
Successors: [0x26a]
---
0xa6 JUMPDEST
0xa7 PUSH2 0xae
0xaa PUSH2 0x26a
0xad JUMP
---
0xa6: JUMPDEST 
0xa7: V42 = 0xae
0xaa: V43 = 0x26a
0xad: JUMP 0x26a
---
Entry stack: [V10, 0xb1]
Stack pops: 0
Stack additions: [0xae]
Exit stack: [V10, 0xb1, 0xae]

================================

Block 0xae
[0xae:0xae]
---
Predecessors: [0x36a]
Successors: [0xaf]
---
0xae JUMPDEST
---
0xae: JUMPDEST 
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0xaf
[0xaf:0xb0]
---
Predecessors: [0xae]
Successors: [0xb1]
---
0xaf JUMPDEST
0xb0 JUMP
---
0xaf: JUMPDEST 
0xb0: JUMP S0
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xb1
[0xb1:0xb2]
---
Predecessors: [0xaf]
Successors: []
---
0xb1 JUMPDEST
0xb2 STOP
---
0xb1: JUMPDEST 
0xb2: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xb3
[0xb3:0xb9]
---
Predecessors: [0xb]
Successors: [0xba, 0xbe]
---
0xb3 JUMPDEST
0xb4 CALLVALUE
0xb5 ISZERO
0xb6 PUSH2 0xbe
0xb9 JUMPI
---
0xb3: JUMPDEST 
0xb4: V44 = CALLVALUE
0xb5: V45 = ISZERO V44
0xb6: V46 = 0xbe
0xb9: JUMPI 0xbe V45
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xba
[0xba:0xbd]
---
Predecessors: [0xb3]
Successors: []
---
0xba PUSH1 0x0
0xbc DUP1
0xbd REVERT
---
0xba: V47 = 0x0
0xbd: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xbe
[0xbe:0xe9]
---
Predecessors: [0xb3]
Successors: [0x36e]
---
0xbe JUMPDEST
0xbf PUSH2 0xea
0xc2 PUSH1 0x4
0xc4 DUP1
0xc5 DUP1
0xc6 CALLDATALOAD
0xc7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdc AND
0xdd SWAP1
0xde PUSH1 0x20
0xe0 ADD
0xe1 SWAP1
0xe2 SWAP2
0xe3 SWAP1
0xe4 POP
0xe5 POP
0xe6 PUSH2 0x36e
0xe9 JUMP
---
0xbe: JUMPDEST 
0xbf: V48 = 0xea
0xc2: V49 = 0x4
0xc6: V50 = CALLDATALOAD 0x4
0xc7: V51 = 0xffffffffffffffffffffffffffffffffffffffff
0xdc: V52 = AND 0xffffffffffffffffffffffffffffffffffffffff V50
0xde: V53 = 0x20
0xe0: V54 = ADD 0x20 0x4
0xe6: V55 = 0x36e
0xe9: JUMP 0x36e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xea, V52]
Exit stack: [V10, 0xea, V52]

================================

Block 0xea
[0xea:0xff]
---
Predecessors: [0x36e]
Successors: []
---
0xea JUMPDEST
0xeb PUSH1 0x40
0xed MLOAD
0xee DUP1
0xef DUP3
0xf0 DUP2
0xf1 MSTORE
0xf2 PUSH1 0x20
0xf4 ADD
0xf5 SWAP2
0xf6 POP
0xf7 POP
0xf8 PUSH1 0x40
0xfa MLOAD
0xfb DUP1
0xfc SWAP2
0xfd SUB
0xfe SWAP1
0xff RETURN
---
0xea: JUMPDEST 
0xeb: V56 = 0x40
0xed: V57 = M[0x40]
0xf1: M[V57] = V229
0xf2: V58 = 0x20
0xf4: V59 = ADD 0x20 V57
0xf8: V60 = 0x40
0xfa: V61 = M[0x40]
0xfd: V62 = SUB V59 V61
0xff: RETURN V61 V62
---
Entry stack: [V10, 0xea, V229]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xea]

================================

Block 0x100
[0x100:0x106]
---
Predecessors: [0x3f]
Successors: [0x107, 0x10b]
---
0x100 JUMPDEST
0x101 CALLVALUE
0x102 ISZERO
0x103 PUSH2 0x10b
0x106 JUMPI
---
0x100: JUMPDEST 
0x101: V63 = CALLVALUE
0x102: V64 = ISZERO V63
0x103: V65 = 0x10b
0x106: JUMPI 0x10b V64
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x107
[0x107:0x10a]
---
Predecessors: [0x100]
Successors: []
---
0x107 PUSH1 0x0
0x109 DUP1
0x10a REVERT
---
0x107: V66 = 0x0
0x10a: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x10b
[0x10b:0x112]
---
Predecessors: [0x100]
Successors: [0x386]
---
0x10b JUMPDEST
0x10c PUSH2 0x113
0x10f PUSH2 0x386
0x112 JUMP
---
0x10b: JUMPDEST 
0x10c: V67 = 0x113
0x10f: V68 = 0x386
0x112: JUMP 0x386
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x113]
Exit stack: [V10, 0x113]

================================

Block 0x113
[0x113:0x114]
---
Predecessors: [0x46c]
Successors: []
---
0x113 JUMPDEST
0x114 STOP
---
0x113: JUMPDEST 
0x114: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x115
[0x115:0x11b]
---
Predecessors: [0x4a]
Successors: [0x11c, 0x120]
---
0x115 JUMPDEST
0x116 CALLVALUE
0x117 ISZERO
0x118 PUSH2 0x120
0x11b JUMPI
---
0x115: JUMPDEST 
0x116: V69 = CALLVALUE
0x117: V70 = ISZERO V69
0x118: V71 = 0x120
0x11b: JUMPI 0x120 V70
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x11c
[0x11c:0x11f]
---
Predecessors: [0x115]
Successors: []
---
0x11c PUSH1 0x0
0x11e DUP1
0x11f REVERT
---
0x11c: V72 = 0x0
0x11f: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x120
[0x120:0x127]
---
Predecessors: [0x115]
Successors: [0x46e]
---
0x120 JUMPDEST
0x121 PUSH2 0x128
0x124 PUSH2 0x46e
0x127 JUMP
---
0x120: JUMPDEST 
0x121: V73 = 0x128
0x124: V74 = 0x46e
0x127: JUMP 0x46e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x128]
Exit stack: [V10, 0x128]

================================

Block 0x128
[0x128:0x13d]
---
Predecessors: [0x46e]
Successors: []
---
0x128 JUMPDEST
0x129 PUSH1 0x40
0x12b MLOAD
0x12c DUP1
0x12d DUP3
0x12e DUP2
0x12f MSTORE
0x130 PUSH1 0x20
0x132 ADD
0x133 SWAP2
0x134 POP
0x135 POP
0x136 PUSH1 0x40
0x138 MLOAD
0x139 DUP1
0x13a SWAP2
0x13b SUB
0x13c SWAP1
0x13d RETURN
---
0x128: JUMPDEST 
0x129: V75 = 0x40
0x12b: V76 = M[0x40]
0x12f: M[V76] = 0x1043561a8829300000
0x130: V77 = 0x20
0x132: V78 = ADD 0x20 V76
0x136: V79 = 0x40
0x138: V80 = M[0x40]
0x13b: V81 = SUB V78 V80
0x13d: RETURN V80 V81
---
Entry stack: [V10, 0x128, 0x1043561a8829300000]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x128]

================================

Block 0x13e
[0x13e:0x145]
---
Predecessors: [0x55]
Successors: [0x26a]
---
0x13e JUMPDEST
0x13f PUSH2 0x146
0x142 PUSH2 0x26a
0x145 JUMP
---
0x13e: JUMPDEST 
0x13f: V82 = 0x146
0x142: V83 = 0x26a
0x145: JUMP 0x26a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x146]
Exit stack: [V10, 0x146]

================================

Block 0x146
[0x146:0x147]
---
Predecessors: [0x36a]
Successors: []
---
0x146 JUMPDEST
0x147 STOP
---
0x146: JUMPDEST 
0x147: STOP 
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0x148
[0x148:0x14e]
---
Predecessors: [0x60]
Successors: [0x14f, 0x153]
---
0x148 JUMPDEST
0x149 CALLVALUE
0x14a ISZERO
0x14b PUSH2 0x153
0x14e JUMPI
---
0x148: JUMPDEST 
0x149: V84 = CALLVALUE
0x14a: V85 = ISZERO V84
0x14b: V86 = 0x153
0x14e: JUMPI 0x153 V85
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x14f
[0x14f:0x152]
---
Predecessors: [0x148]
Successors: []
---
0x14f PUSH1 0x0
0x151 DUP1
0x152 REVERT
---
0x14f: V87 = 0x0
0x152: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x153
[0x153:0x15a]
---
Predecessors: [0x148]
Successors: [0x47b]
---
0x153 JUMPDEST
0x154 PUSH2 0x15b
0x157 PUSH2 0x47b
0x15a JUMP
---
0x153: JUMPDEST 
0x154: V88 = 0x15b
0x157: V89 = 0x47b
0x15a: JUMP 0x47b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x15b]
Exit stack: [V10, 0x15b]

================================

Block 0x15b
[0x15b:0x170]
---
Predecessors: [0x47b]
Successors: []
---
0x15b JUMPDEST
0x15c PUSH1 0x40
0x15e MLOAD
0x15f DUP1
0x160 DUP3
0x161 DUP2
0x162 MSTORE
0x163 PUSH1 0x20
0x165 ADD
0x166 SWAP2
0x167 POP
0x168 POP
0x169 PUSH1 0x40
0x16b MLOAD
0x16c DUP1
0x16d SWAP2
0x16e SUB
0x16f SWAP1
0x170 RETURN
---
0x15b: JUMPDEST 
0x15c: V90 = 0x40
0x15e: V91 = M[0x40]
0x162: M[V91] = V297
0x163: V92 = 0x20
0x165: V93 = ADD 0x20 V91
0x169: V94 = 0x40
0x16b: V95 = M[0x40]
0x16e: V96 = SUB V93 V95
0x170: RETURN V95 V96
---
Entry stack: [V10, 0x15b, V297]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x15b]

================================

Block 0x171
[0x171:0x177]
---
Predecessors: [0x6b]
Successors: [0x178, 0x17c]
---
0x171 JUMPDEST
0x172 CALLVALUE
0x173 ISZERO
0x174 PUSH2 0x17c
0x177 JUMPI
---
0x171: JUMPDEST 
0x172: V97 = CALLVALUE
0x173: V98 = ISZERO V97
0x174: V99 = 0x17c
0x177: JUMPI 0x17c V98
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x178
[0x178:0x17b]
---
Predecessors: [0x171]
Successors: []
---
0x178 PUSH1 0x0
0x17a DUP1
0x17b REVERT
---
0x178: V100 = 0x0
0x17b: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x17c
[0x17c:0x183]
---
Predecessors: [0x171]
Successors: [0x481]
---
0x17c JUMPDEST
0x17d PUSH2 0x184
0x180 PUSH2 0x481
0x183 JUMP
---
0x17c: JUMPDEST 
0x17d: V101 = 0x184
0x180: V102 = 0x481
0x183: JUMP 0x481
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x184]
Exit stack: [V10, 0x184]

================================

Block 0x184
[0x184:0x19d]
---
Predecessors: [0x481]
Successors: []
---
0x184 JUMPDEST
0x185 PUSH1 0x40
0x187 MLOAD
0x188 DUP1
0x189 DUP3
0x18a ISZERO
0x18b ISZERO
0x18c ISZERO
0x18d ISZERO
0x18e DUP2
0x18f MSTORE
0x190 PUSH1 0x20
0x192 ADD
0x193 SWAP2
0x194 POP
0x195 POP
0x196 PUSH1 0x40
0x198 MLOAD
0x199 DUP1
0x19a SWAP2
0x19b SUB
0x19c SWAP1
0x19d RETURN
---
0x184: JUMPDEST 
0x185: V103 = 0x40
0x187: V104 = M[0x40]
0x18a: V105 = ISZERO V305
0x18b: V106 = ISZERO V105
0x18c: V107 = ISZERO V106
0x18d: V108 = ISZERO V107
0x18f: M[V104] = V108
0x190: V109 = 0x20
0x192: V110 = ADD 0x20 V104
0x196: V111 = 0x40
0x198: V112 = M[0x40]
0x19b: V113 = SUB V110 V112
0x19d: RETURN V112 V113
---
Entry stack: [V10, 0x184, V305]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x184]

================================

Block 0x19e
[0x19e:0x1a4]
---
Predecessors: [0x76]
Successors: [0x1a5, 0x1a9]
---
0x19e JUMPDEST
0x19f CALLVALUE
0x1a0 ISZERO
0x1a1 PUSH2 0x1a9
0x1a4 JUMPI
---
0x19e: JUMPDEST 
0x19f: V114 = CALLVALUE
0x1a0: V115 = ISZERO V114
0x1a1: V116 = 0x1a9
0x1a4: JUMPI 0x1a9 V115
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1a5
[0x1a5:0x1a8]
---
Predecessors: [0x19e]
Successors: []
---
0x1a5 PUSH1 0x0
0x1a7 DUP1
0x1a8 REVERT
---
0x1a5: V117 = 0x0
0x1a8: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1a9
[0x1a9:0x1b0]
---
Predecessors: [0x19e]
Successors: [0x494]
---
0x1a9 JUMPDEST
0x1aa PUSH2 0x1b1
0x1ad PUSH2 0x494
0x1b0 JUMP
---
0x1a9: JUMPDEST 
0x1aa: V118 = 0x1b1
0x1ad: V119 = 0x494
0x1b0: JUMP 0x494
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1b1]
Exit stack: [V10, 0x1b1]

================================

Block 0x1b1
[0x1b1:0x1f2]
---
Predecessors: [0x494]
Successors: []
---
0x1b1 JUMPDEST
0x1b2 PUSH1 0x40
0x1b4 MLOAD
0x1b5 DUP1
0x1b6 DUP3
0x1b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1cc AND
0x1cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e2 AND
0x1e3 DUP2
0x1e4 MSTORE
0x1e5 PUSH1 0x20
0x1e7 ADD
0x1e8 SWAP2
0x1e9 POP
0x1ea POP
0x1eb PUSH1 0x40
0x1ed MLOAD
0x1ee DUP1
0x1ef SWAP2
0x1f0 SUB
0x1f1 SWAP1
0x1f2 RETURN
---
0x1b1: JUMPDEST 
0x1b2: V120 = 0x40
0x1b4: V121 = M[0x40]
0x1b7: V122 = 0xffffffffffffffffffffffffffffffffffffffff
0x1cc: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x54e80390434b8bfcabc823e9656c57d018c1dc77
0x1cd: V124 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e2: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x54e80390434b8bfcabc823e9656c57d018c1dc77
0x1e4: M[V121] = 0x54e80390434b8bfcabc823e9656c57d018c1dc77
0x1e5: V126 = 0x20
0x1e7: V127 = ADD 0x20 V121
0x1eb: V128 = 0x40
0x1ed: V129 = M[0x40]
0x1f0: V130 = SUB V127 V129
0x1f2: RETURN V129 V130
---
Entry stack: [V10, 0x1b1, 0x54e80390434b8bfcabc823e9656c57d018c1dc77]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1b1]

================================

Block 0x1f3
[0x1f3:0x1f9]
---
Predecessors: [0x81]
Successors: [0x1fa, 0x1fe]
---
0x1f3 JUMPDEST
0x1f4 CALLVALUE
0x1f5 ISZERO
0x1f6 PUSH2 0x1fe
0x1f9 JUMPI
---
0x1f3: JUMPDEST 
0x1f4: V131 = CALLVALUE
0x1f5: V132 = ISZERO V131
0x1f6: V133 = 0x1fe
0x1f9: JUMPI 0x1fe V132
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1fa
[0x1fa:0x1fd]
---
Predecessors: [0x1f3]
Successors: []
---
0x1fa PUSH1 0x0
0x1fc DUP1
0x1fd REVERT
---
0x1fa: V134 = 0x0
0x1fd: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1fe
[0x1fe:0x205]
---
Predecessors: [0x1f3]
Successors: [0x4ac]
---
0x1fe JUMPDEST
0x1ff PUSH2 0x206
0x202 PUSH2 0x4ac
0x205 JUMP
---
0x1fe: JUMPDEST 
0x1ff: V135 = 0x206
0x202: V136 = 0x4ac
0x205: JUMP 0x4ac
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x206]
Exit stack: [V10, 0x206]

================================

Block 0x206
[0x206:0x207]
---
Predecessors: [0x58e]
Successors: []
---
0x206 JUMPDEST
0x207 STOP
---
0x206: JUMPDEST 
0x207: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x208
[0x208:0x20e]
---
Predecessors: [0x8c]
Successors: [0x20f, 0x213]
---
0x208 JUMPDEST
0x209 CALLVALUE
0x20a ISZERO
0x20b PUSH2 0x213
0x20e JUMPI
---
0x208: JUMPDEST 
0x209: V137 = CALLVALUE
0x20a: V138 = ISZERO V137
0x20b: V139 = 0x213
0x20e: JUMPI 0x213 V138
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x20f
[0x20f:0x212]
---
Predecessors: [0x208]
Successors: []
---
0x20f PUSH1 0x0
0x211 DUP1
0x212 REVERT
---
0x20f: V140 = 0x0
0x212: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x213
[0x213:0x21a]
---
Predecessors: [0x208]
Successors: [0x591]
---
0x213 JUMPDEST
0x214 PUSH2 0x21b
0x217 PUSH2 0x591
0x21a JUMP
---
0x213: JUMPDEST 
0x214: V141 = 0x21b
0x217: V142 = 0x591
0x21a: JUMP 0x591
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x21b]
Exit stack: [V10, 0x21b]

================================

Block 0x21b
[0x21b:0x230]
---
Predecessors: [0x591]
Successors: []
---
0x21b JUMPDEST
0x21c PUSH1 0x40
0x21e MLOAD
0x21f DUP1
0x220 DUP3
0x221 DUP2
0x222 MSTORE
0x223 PUSH1 0x20
0x225 ADD
0x226 SWAP2
0x227 POP
0x228 POP
0x229 PUSH1 0x40
0x22b MLOAD
0x22c DUP1
0x22d SWAP2
0x22e SUB
0x22f SWAP1
0x230 RETURN
---
0x21b: JUMPDEST 
0x21c: V143 = 0x40
0x21e: V144 = M[0x40]
0x222: M[V144] = V363
0x223: V145 = 0x20
0x225: V146 = ADD 0x20 V144
0x229: V147 = 0x40
0x22b: V148 = M[0x40]
0x22e: V149 = SUB V146 V148
0x230: RETURN V148 V149
---
Entry stack: [V10, 0x21b, V363]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x21b]

================================

Block 0x231
[0x231:0x237]
---
Predecessors: [0x97]
Successors: [0x238, 0x23c]
---
0x231 JUMPDEST
0x232 CALLVALUE
0x233 ISZERO
0x234 PUSH2 0x23c
0x237 JUMPI
---
0x231: JUMPDEST 
0x232: V150 = CALLVALUE
0x233: V151 = ISZERO V150
0x234: V152 = 0x23c
0x237: JUMPI 0x23c V151
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x238
[0x238:0x23b]
---
Predecessors: [0x231]
Successors: []
---
0x238 PUSH1 0x0
0x23a DUP1
0x23b REVERT
---
0x238: V153 = 0x0
0x23b: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x23c
[0x23c:0x267]
---
Predecessors: [0x231]
Successors: [0x597]
---
0x23c JUMPDEST
0x23d PUSH2 0x268
0x240 PUSH1 0x4
0x242 DUP1
0x243 DUP1
0x244 CALLDATALOAD
0x245 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x25a AND
0x25b SWAP1
0x25c PUSH1 0x20
0x25e ADD
0x25f SWAP1
0x260 SWAP2
0x261 SWAP1
0x262 POP
0x263 POP
0x264 PUSH2 0x597
0x267 JUMP
---
0x23c: JUMPDEST 
0x23d: V154 = 0x268
0x240: V155 = 0x4
0x244: V156 = CALLDATALOAD 0x4
0x245: V157 = 0xffffffffffffffffffffffffffffffffffffffff
0x25a: V158 = AND 0xffffffffffffffffffffffffffffffffffffffff V156
0x25c: V159 = 0x20
0x25e: V160 = ADD 0x20 0x4
0x264: V161 = 0x597
0x267: JUMP 0x597
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x268, V158]
Exit stack: [V10, 0x268, V158]

================================

Block 0x268
[0x268:0x269]
---
Predecessors: [0x83c]
Successors: []
---
0x268 JUMPDEST
0x269 STOP
---
0x268: JUMPDEST 
0x269: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x26a
[0x26a:0x282]
---
Predecessors: [0xa6, 0x13e]
Successors: [0x283, 0x287]
---
0x26a JUMPDEST
0x26b PUSH1 0x0
0x26d DUP1
0x26e PUSH1 0x1
0x270 PUSH1 0x0
0x272 SWAP1
0x273 SLOAD
0x274 SWAP1
0x275 PUSH2 0x100
0x278 EXP
0x279 SWAP1
0x27a DIV
0x27b PUSH1 0xff
0x27d AND
0x27e ISZERO
0x27f PUSH2 0x287
0x282 JUMPI
---
0x26a: JUMPDEST 
0x26b: V162 = 0x0
0x26e: V163 = 0x1
0x270: V164 = 0x0
0x273: V165 = S[0x1]
0x275: V166 = 0x100
0x278: V167 = EXP 0x100 0x0
0x27a: V168 = DIV V165 0x1
0x27b: V169 = 0xff
0x27d: V170 = AND 0xff V168
0x27e: V171 = ISZERO V170
0x27f: V172 = 0x287
0x282: JUMPI 0x287 V171
---
Entry stack: [V10, S1, {0xae, 0x146}]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V10, S1, {0xae, 0x146}, 0x0, 0x0]

================================

Block 0x283
[0x283:0x286]
---
Predecessors: [0x26a]
Successors: []
---
0x283 PUSH1 0x0
0x285 DUP1
0x286 REVERT
---
0x283: V173 = 0x0
0x286: REVERT 0x0 0x0
---
Entry stack: [V10, S3, {0xae, 0x146}, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S3, {0xae, 0x146}, 0x0, 0x0]

================================

Block 0x287
[0x287:0x2b2]
---
Predecessors: [0x26a]
Successors: [0x2b3, 0x31d]
---
0x287 JUMPDEST
0x288 CALLVALUE
0x289 SWAP2
0x28a POP
0x28b PUSH9 0x1043561a8829300000
0x295 ADDRESS
0x296 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ab AND
0x2ac BALANCE
0x2ad GT
0x2ae ISZERO
0x2af PUSH2 0x31d
0x2b2 JUMPI
---
0x287: JUMPDEST 
0x288: V174 = CALLVALUE
0x28b: V175 = 0x1043561a8829300000
0x295: V176 = ADDRESS
0x296: V177 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ab: V178 = AND 0xffffffffffffffffffffffffffffffffffffffff V176
0x2ac: V179 = BALANCE V178
0x2ad: V180 = GT V179 0x1043561a8829300000
0x2ae: V181 = ISZERO V180
0x2af: V182 = 0x31d
0x2b2: JUMPI 0x31d V181
---
Entry stack: [V10, S3, {0xae, 0x146}, 0x0, 0x0]
Stack pops: 2
Stack additions: [V174, S0]
Exit stack: [V10, S3, {0xae, 0x146}, V174, 0x0]

================================

Block 0x2b3
[0x2b3:0x317]
---
Predecessors: [0x287]
Successors: [0x318, 0x31c]
---
0x2b3 PUSH9 0x1043561a8829300000
0x2bd ADDRESS
0x2be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d3 AND
0x2d4 BALANCE
0x2d5 SUB
0x2d6 SWAP1
0x2d7 POP
0x2d8 DUP1
0x2d9 DUP3
0x2da SUB
0x2db SWAP2
0x2dc POP
0x2dd CALLER
0x2de PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f3 AND
0x2f4 PUSH2 0x8fc
0x2f7 DUP3
0x2f8 SWAP1
0x2f9 DUP2
0x2fa ISZERO
0x2fb MUL
0x2fc SWAP1
0x2fd PUSH1 0x40
0x2ff MLOAD
0x300 PUSH1 0x0
0x302 PUSH1 0x40
0x304 MLOAD
0x305 DUP1
0x306 DUP4
0x307 SUB
0x308 DUP2
0x309 DUP6
0x30a DUP9
0x30b DUP9
0x30c CALL
0x30d SWAP4
0x30e POP
0x30f POP
0x310 POP
0x311 POP
0x312 ISZERO
0x313 ISZERO
0x314 PUSH2 0x31c
0x317 JUMPI
---
0x2b3: V183 = 0x1043561a8829300000
0x2bd: V184 = ADDRESS
0x2be: V185 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d3: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff V184
0x2d4: V187 = BALANCE V186
0x2d5: V188 = SUB V187 0x1043561a8829300000
0x2da: V189 = SUB V174 V188
0x2dd: V190 = CALLER
0x2de: V191 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f3: V192 = AND 0xffffffffffffffffffffffffffffffffffffffff V190
0x2f4: V193 = 0x8fc
0x2fa: V194 = ISZERO V188
0x2fb: V195 = MUL V194 0x8fc
0x2fd: V196 = 0x40
0x2ff: V197 = M[0x40]
0x300: V198 = 0x0
0x302: V199 = 0x40
0x304: V200 = M[0x40]
0x307: V201 = SUB V197 V200
0x30c: V202 = CALL V195 V192 V188 V200 V201 V200 0x0
0x312: V203 = ISZERO V202
0x313: V204 = ISZERO V203
0x314: V205 = 0x31c
0x317: JUMPI 0x31c V204
---
Entry stack: [V10, S3, {0xae, 0x146}, V174, 0x0]
Stack pops: 2
Stack additions: [V189, V188]
Exit stack: [V10, S3, {0xae, 0x146}, V189, V188]

================================

Block 0x318
[0x318:0x31b]
---
Predecessors: [0x2b3]
Successors: []
---
0x318 PUSH1 0x0
0x31a DUP1
0x31b REVERT
---
0x318: V206 = 0x0
0x31b: REVERT 0x0 0x0
---
Entry stack: [V10, S3, {0xae, 0x146}, V189, V188]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S3, {0xae, 0x146}, V189, V188]

================================

Block 0x31c
[0x31c:0x31c]
---
Predecessors: [0x2b3]
Successors: [0x31d]
---
0x31c JUMPDEST
---
0x31c: JUMPDEST 
---
Entry stack: [V10, S3, {0xae, 0x146}, V189, V188]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S3, {0xae, 0x146}, V189, V188]

================================

Block 0x31d
[0x31d:0x369]
---
Predecessors: [0x287, 0x31c]
Successors: [0x36a]
---
0x31d JUMPDEST
0x31e DUP2
0x31f PUSH1 0x0
0x321 DUP1
0x322 CALLER
0x323 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x338 AND
0x339 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x34e AND
0x34f DUP2
0x350 MSTORE
0x351 PUSH1 0x20
0x353 ADD
0x354 SWAP1
0x355 DUP2
0x356 MSTORE
0x357 PUSH1 0x20
0x359 ADD
0x35a PUSH1 0x0
0x35c SHA3
0x35d PUSH1 0x0
0x35f DUP3
0x360 DUP3
0x361 SLOAD
0x362 ADD
0x363 SWAP3
0x364 POP
0x365 POP
0x366 DUP2
0x367 SWAP1
0x368 SSTORE
0x369 POP
---
0x31d: JUMPDEST 
0x31f: V207 = 0x0
0x322: V208 = CALLER
0x323: V209 = 0xffffffffffffffffffffffffffffffffffffffff
0x338: V210 = AND 0xffffffffffffffffffffffffffffffffffffffff V208
0x339: V211 = 0xffffffffffffffffffffffffffffffffffffffff
0x34e: V212 = AND 0xffffffffffffffffffffffffffffffffffffffff V210
0x350: M[0x0] = V212
0x351: V213 = 0x20
0x353: V214 = ADD 0x20 0x0
0x356: M[0x20] = 0x0
0x357: V215 = 0x20
0x359: V216 = ADD 0x20 0x20
0x35a: V217 = 0x0
0x35c: V218 = SHA3 0x0 0x40
0x35d: V219 = 0x0
0x361: V220 = S[V218]
0x362: V221 = ADD V220 S1
0x368: S[V218] = V221
---
Entry stack: [V10, S3, {0xae, 0x146}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, S3, {0xae, 0x146}, S1, S0]

================================

Block 0x36a
[0x36a:0x36d]
---
Predecessors: [0x31d]
Successors: [0xae, 0x146]
---
0x36a JUMPDEST
0x36b POP
0x36c POP
0x36d JUMP
---
0x36a: JUMPDEST 
0x36d: JUMP {0xae, 0x146}
---
Entry stack: [V10, S3, {0xae, 0x146}, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V10, S3]

================================

Block 0x36e
[0x36e:0x385]
---
Predecessors: [0xbe]
Successors: [0xea]
---
0x36e JUMPDEST
0x36f PUSH1 0x0
0x371 PUSH1 0x20
0x373 MSTORE
0x374 DUP1
0x375 PUSH1 0x0
0x377 MSTORE
0x378 PUSH1 0x40
0x37a PUSH1 0x0
0x37c SHA3
0x37d PUSH1 0x0
0x37f SWAP2
0x380 POP
0x381 SWAP1
0x382 POP
0x383 SLOAD
0x384 DUP2
0x385 JUMP
---
0x36e: JUMPDEST 
0x36f: V222 = 0x0
0x371: V223 = 0x20
0x373: M[0x20] = 0x0
0x375: V224 = 0x0
0x377: M[0x0] = V52
0x378: V225 = 0x40
0x37a: V226 = 0x0
0x37c: V227 = SHA3 0x0 0x40
0x37d: V228 = 0x0
0x383: V229 = S[V227]
0x385: JUMP 0xea
---
Entry stack: [V10, 0xea, V52]
Stack pops: 2
Stack additions: [S1, V229]
Exit stack: [V10, 0xea, V229]

================================

Block 0x386
[0x386:0x39b]
---
Predecessors: [0x10b]
Successors: [0x39c, 0x3a0]
---
0x386 JUMPDEST
0x387 PUSH1 0x1
0x389 PUSH1 0x0
0x38b SWAP1
0x38c SLOAD
0x38d SWAP1
0x38e PUSH2 0x100
0x391 EXP
0x392 SWAP1
0x393 DIV
0x394 PUSH1 0xff
0x396 AND
0x397 ISZERO
0x398 PUSH2 0x3a0
0x39b JUMPI
---
0x386: JUMPDEST 
0x387: V230 = 0x1
0x389: V231 = 0x0
0x38c: V232 = S[0x1]
0x38e: V233 = 0x100
0x391: V234 = EXP 0x100 0x0
0x393: V235 = DIV V232 0x1
0x394: V236 = 0xff
0x396: V237 = AND 0xff V235
0x397: V238 = ISZERO V237
0x398: V239 = 0x3a0
0x39b: JUMPI 0x3a0 V238
---
Entry stack: [V10, 0x113]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x113]

================================

Block 0x39c
[0x39c:0x39f]
---
Predecessors: [0x386]
Successors: [0x46c]
---
0x39c PUSH2 0x46c
0x39f JUMP
---
0x39c: V240 = 0x46c
0x39f: JUMP 0x46c
---
Entry stack: [V10, 0x113]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x113]

================================

Block 0x3a0
[0x3a0:0x3c9]
---
Predecessors: [0x386]
Successors: [0x3ca, 0x3ce]
---
0x3a0 JUMPDEST
0x3a1 PUSH9 0x1043561a8829300000
0x3ab ADDRESS
0x3ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c1 AND
0x3c2 BALANCE
0x3c3 EQ
0x3c4 ISZERO
0x3c5 ISZERO
0x3c6 PUSH2 0x3ce
0x3c9 JUMPI
---
0x3a0: JUMPDEST 
0x3a1: V241 = 0x1043561a8829300000
0x3ab: V242 = ADDRESS
0x3ac: V243 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c1: V244 = AND 0xffffffffffffffffffffffffffffffffffffffff V242
0x3c2: V245 = BALANCE V244
0x3c3: V246 = EQ V245 0x1043561a8829300000
0x3c4: V247 = ISZERO V246
0x3c5: V248 = ISZERO V247
0x3c6: V249 = 0x3ce
0x3c9: JUMPI 0x3ce V248
---
Entry stack: [V10, 0x113]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x113]

================================

Block 0x3ca
[0x3ca:0x3cd]
---
Predecessors: [0x3a0]
Successors: []
---
0x3ca PUSH1 0x0
0x3cc DUP1
0x3cd REVERT
---
0x3ca: V250 = 0x0
0x3cd: REVERT 0x0 0x0
---
Entry stack: [V10, 0x113]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x113]

================================

Block 0x3ce
[0x3ce:0x3d8]
---
Predecessors: [0x3a0]
Successors: [0x3d9, 0x3dd]
---
0x3ce JUMPDEST
0x3cf PUSH1 0x3
0x3d1 SLOAD
0x3d2 NUMBER
0x3d3 LT
0x3d4 ISZERO
0x3d5 PUSH2 0x3dd
0x3d8 JUMPI
---
0x3ce: JUMPDEST 
0x3cf: V251 = 0x3
0x3d1: V252 = S[0x3]
0x3d2: V253 = NUMBER
0x3d3: V254 = LT V253 V252
0x3d4: V255 = ISZERO V254
0x3d5: V256 = 0x3dd
0x3d8: JUMPI 0x3dd V255
---
Entry stack: [V10, 0x113]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x113]

================================

Block 0x3d9
[0x3d9:0x3dc]
---
Predecessors: [0x3ce]
Successors: []
---
0x3d9 PUSH1 0x0
0x3db DUP1
0x3dc REVERT
---
0x3d9: V257 = 0x0
0x3dc: REVERT 0x0 0x0
---
Entry stack: [V10, 0x113]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x113]

================================

Block 0x3dd
[0x3dd:0x466]
---
Predecessors: [0x3ce]
Successors: [0x467, 0x46b]
---
0x3dd JUMPDEST
0x3de PUSH1 0x1
0x3e0 DUP1
0x3e1 PUSH1 0x0
0x3e3 PUSH2 0x100
0x3e6 EXP
0x3e7 DUP2
0x3e8 SLOAD
0x3e9 DUP2
0x3ea PUSH1 0xff
0x3ec MUL
0x3ed NOT
0x3ee AND
0x3ef SWAP1
0x3f0 DUP4
0x3f1 ISZERO
0x3f2 ISZERO
0x3f3 MUL
0x3f4 OR
0x3f5 SWAP1
0x3f6 SSTORE
0x3f7 POP
0x3f8 ADDRESS
0x3f9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x40e AND
0x40f BALANCE
0x410 PUSH1 0x2
0x412 DUP2
0x413 SWAP1
0x414 SSTORE
0x415 POP
0x416 PUSH20 0x54e80390434b8bfcabc823e9656c57d018c1dc77
0x42b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x440 AND
0x441 PUSH2 0x8fc
0x444 PUSH1 0x2
0x446 SLOAD
0x447 SWAP1
0x448 DUP2
0x449 ISZERO
0x44a MUL
0x44b SWAP1
0x44c PUSH1 0x40
0x44e MLOAD
0x44f PUSH1 0x0
0x451 PUSH1 0x40
0x453 MLOAD
0x454 DUP1
0x455 DUP4
0x456 SUB
0x457 DUP2
0x458 DUP6
0x459 DUP9
0x45a DUP9
0x45b CALL
0x45c SWAP4
0x45d POP
0x45e POP
0x45f POP
0x460 POP
0x461 ISZERO
0x462 ISZERO
0x463 PUSH2 0x46b
0x466 JUMPI
---
0x3dd: JUMPDEST 
0x3de: V258 = 0x1
0x3e1: V259 = 0x0
0x3e3: V260 = 0x100
0x3e6: V261 = EXP 0x100 0x0
0x3e8: V262 = S[0x1]
0x3ea: V263 = 0xff
0x3ec: V264 = MUL 0xff 0x1
0x3ed: V265 = NOT 0xff
0x3ee: V266 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V262
0x3f1: V267 = ISZERO 0x1
0x3f2: V268 = ISZERO 0x0
0x3f3: V269 = MUL 0x1 0x1
0x3f4: V270 = OR 0x1 V266
0x3f6: S[0x1] = V270
0x3f8: V271 = ADDRESS
0x3f9: V272 = 0xffffffffffffffffffffffffffffffffffffffff
0x40e: V273 = AND 0xffffffffffffffffffffffffffffffffffffffff V271
0x40f: V274 = BALANCE V273
0x410: V275 = 0x2
0x414: S[0x2] = V274
0x416: V276 = 0x54e80390434b8bfcabc823e9656c57d018c1dc77
0x42b: V277 = 0xffffffffffffffffffffffffffffffffffffffff
0x440: V278 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x54e80390434b8bfcabc823e9656c57d018c1dc77
0x441: V279 = 0x8fc
0x444: V280 = 0x2
0x446: V281 = S[0x2]
0x449: V282 = ISZERO V281
0x44a: V283 = MUL V282 0x8fc
0x44c: V284 = 0x40
0x44e: V285 = M[0x40]
0x44f: V286 = 0x0
0x451: V287 = 0x40
0x453: V288 = M[0x40]
0x456: V289 = SUB V285 V288
0x45b: V290 = CALL V283 0x54e80390434b8bfcabc823e9656c57d018c1dc77 V281 V288 V289 V288 0x0
0x461: V291 = ISZERO V290
0x462: V292 = ISZERO V291
0x463: V293 = 0x46b
0x466: JUMPI 0x46b V292
---
Entry stack: [V10, 0x113]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x113]

================================

Block 0x467
[0x467:0x46a]
---
Predecessors: [0x3dd]
Successors: []
---
0x467 PUSH1 0x0
0x469 DUP1
0x46a REVERT
---
0x467: V294 = 0x0
0x46a: REVERT 0x0 0x0
---
Entry stack: [V10, 0x113]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x113]

================================

Block 0x46b
[0x46b:0x46b]
---
Predecessors: [0x3dd]
Successors: [0x46c]
---
0x46b JUMPDEST
---
0x46b: JUMPDEST 
---
Entry stack: [V10, 0x113]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x113]

================================

Block 0x46c
[0x46c:0x46d]
---
Predecessors: [0x39c, 0x46b]
Successors: [0x113]
---
0x46c JUMPDEST
0x46d JUMP
---
0x46c: JUMPDEST 
0x46d: JUMP 0x113
---
Entry stack: [V10, 0x113]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x46e
[0x46e:0x47a]
---
Predecessors: [0x120]
Successors: [0x128]
---
0x46e JUMPDEST
0x46f PUSH9 0x1043561a8829300000
0x479 DUP2
0x47a JUMP
---
0x46e: JUMPDEST 
0x46f: V295 = 0x1043561a8829300000
0x47a: JUMP 0x128
---
Entry stack: [V10, 0x128]
Stack pops: 1
Stack additions: [S0, 0x1043561a8829300000]
Exit stack: [V10, 0x128, 0x1043561a8829300000]

================================

Block 0x47b
[0x47b:0x480]
---
Predecessors: [0x153]
Successors: [0x15b]
---
0x47b JUMPDEST
0x47c PUSH1 0x3
0x47e SLOAD
0x47f DUP2
0x480 JUMP
---
0x47b: JUMPDEST 
0x47c: V296 = 0x3
0x47e: V297 = S[0x3]
0x480: JUMP 0x15b
---
Entry stack: [V10, 0x15b]
Stack pops: 1
Stack additions: [S0, V297]
Exit stack: [V10, 0x15b, V297]

================================

Block 0x481
[0x481:0x493]
---
Predecessors: [0x17c]
Successors: [0x184]
---
0x481 JUMPDEST
0x482 PUSH1 0x1
0x484 PUSH1 0x0
0x486 SWAP1
0x487 SLOAD
0x488 SWAP1
0x489 PUSH2 0x100
0x48c EXP
0x48d SWAP1
0x48e DIV
0x48f PUSH1 0xff
0x491 AND
0x492 DUP2
0x493 JUMP
---
0x481: JUMPDEST 
0x482: V298 = 0x1
0x484: V299 = 0x0
0x487: V300 = S[0x1]
0x489: V301 = 0x100
0x48c: V302 = EXP 0x100 0x0
0x48e: V303 = DIV V300 0x1
0x48f: V304 = 0xff
0x491: V305 = AND 0xff V303
0x493: JUMP 0x184
---
Entry stack: [V10, 0x184]
Stack pops: 1
Stack additions: [S0, V305]
Exit stack: [V10, 0x184, V305]

================================

Block 0x494
[0x494:0x4ab]
---
Predecessors: [0x1a9]
Successors: [0x1b1]
---
0x494 JUMPDEST
0x495 PUSH20 0x54e80390434b8bfcabc823e9656c57d018c1dc77
0x4aa DUP2
0x4ab JUMP
---
0x494: JUMPDEST 
0x495: V306 = 0x54e80390434b8bfcabc823e9656c57d018c1dc77
0x4ab: JUMP 0x1b1
---
Entry stack: [V10, 0x1b1]
Stack pops: 1
Stack additions: [S0, 0x54e80390434b8bfcabc823e9656c57d018c1dc77]
Exit stack: [V10, 0x1b1, 0x54e80390434b8bfcabc823e9656c57d018c1dc77]

================================

Block 0x4ac
[0x4ac:0x4c3]
---
Predecessors: [0x1fe]
Successors: [0x4c4, 0x4c8]
---
0x4ac JUMPDEST
0x4ad PUSH1 0x0
0x4af PUSH1 0x1
0x4b1 PUSH1 0x0
0x4b3 SWAP1
0x4b4 SLOAD
0x4b5 SWAP1
0x4b6 PUSH2 0x100
0x4b9 EXP
0x4ba SWAP1
0x4bb DIV
0x4bc PUSH1 0xff
0x4be AND
0x4bf ISZERO
0x4c0 PUSH2 0x4c8
0x4c3 JUMPI
---
0x4ac: JUMPDEST 
0x4ad: V307 = 0x0
0x4af: V308 = 0x1
0x4b1: V309 = 0x0
0x4b4: V310 = S[0x1]
0x4b6: V311 = 0x100
0x4b9: V312 = EXP 0x100 0x0
0x4bb: V313 = DIV V310 0x1
0x4bc: V314 = 0xff
0x4be: V315 = AND 0xff V313
0x4bf: V316 = ISZERO V315
0x4c0: V317 = 0x4c8
0x4c3: JUMPI 0x4c8 V316
---
Entry stack: [V10, 0x206]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x206, 0x0]

================================

Block 0x4c4
[0x4c4:0x4c7]
---
Predecessors: [0x4ac]
Successors: []
---
0x4c4 PUSH1 0x0
0x4c6 DUP1
0x4c7 REVERT
---
0x4c4: V318 = 0x0
0x4c7: REVERT 0x0 0x0
---
Entry stack: [V10, 0x206, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x206, 0x0]

================================

Block 0x4c8
[0x4c8:0x588]
---
Predecessors: [0x4ac]
Successors: [0x589, 0x58d]
---
0x4c8 JUMPDEST
0x4c9 PUSH1 0x0
0x4cb DUP1
0x4cc CALLER
0x4cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4e2 AND
0x4e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4f8 AND
0x4f9 DUP2
0x4fa MSTORE
0x4fb PUSH1 0x20
0x4fd ADD
0x4fe SWAP1
0x4ff DUP2
0x500 MSTORE
0x501 PUSH1 0x20
0x503 ADD
0x504 PUSH1 0x0
0x506 SHA3
0x507 SLOAD
0x508 SWAP1
0x509 POP
0x50a PUSH1 0x0
0x50c DUP1
0x50d PUSH1 0x0
0x50f CALLER
0x510 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x525 AND
0x526 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x53b AND
0x53c DUP2
0x53d MSTORE
0x53e PUSH1 0x20
0x540 ADD
0x541 SWAP1
0x542 DUP2
0x543 MSTORE
0x544 PUSH1 0x20
0x546 ADD
0x547 PUSH1 0x0
0x549 SHA3
0x54a DUP2
0x54b SWAP1
0x54c SSTORE
0x54d POP
0x54e CALLER
0x54f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x564 AND
0x565 PUSH2 0x8fc
0x568 DUP3
0x569 SWAP1
0x56a DUP2
0x56b ISZERO
0x56c MUL
0x56d SWAP1
0x56e PUSH1 0x40
0x570 MLOAD
0x571 PUSH1 0x0
0x573 PUSH1 0x40
0x575 MLOAD
0x576 DUP1
0x577 DUP4
0x578 SUB
0x579 DUP2
0x57a DUP6
0x57b DUP9
0x57c DUP9
0x57d CALL
0x57e SWAP4
0x57f POP
0x580 POP
0x581 POP
0x582 POP
0x583 ISZERO
0x584 ISZERO
0x585 PUSH2 0x58d
0x588 JUMPI
---
0x4c8: JUMPDEST 
0x4c9: V319 = 0x0
0x4cc: V320 = CALLER
0x4cd: V321 = 0xffffffffffffffffffffffffffffffffffffffff
0x4e2: V322 = AND 0xffffffffffffffffffffffffffffffffffffffff V320
0x4e3: V323 = 0xffffffffffffffffffffffffffffffffffffffff
0x4f8: V324 = AND 0xffffffffffffffffffffffffffffffffffffffff V322
0x4fa: M[0x0] = V324
0x4fb: V325 = 0x20
0x4fd: V326 = ADD 0x20 0x0
0x500: M[0x20] = 0x0
0x501: V327 = 0x20
0x503: V328 = ADD 0x20 0x20
0x504: V329 = 0x0
0x506: V330 = SHA3 0x0 0x40
0x507: V331 = S[V330]
0x50a: V332 = 0x0
0x50d: V333 = 0x0
0x50f: V334 = CALLER
0x510: V335 = 0xffffffffffffffffffffffffffffffffffffffff
0x525: V336 = AND 0xffffffffffffffffffffffffffffffffffffffff V334
0x526: V337 = 0xffffffffffffffffffffffffffffffffffffffff
0x53b: V338 = AND 0xffffffffffffffffffffffffffffffffffffffff V336
0x53d: M[0x0] = V338
0x53e: V339 = 0x20
0x540: V340 = ADD 0x20 0x0
0x543: M[0x20] = 0x0
0x544: V341 = 0x20
0x546: V342 = ADD 0x20 0x20
0x547: V343 = 0x0
0x549: V344 = SHA3 0x0 0x40
0x54c: S[V344] = 0x0
0x54e: V345 = CALLER
0x54f: V346 = 0xffffffffffffffffffffffffffffffffffffffff
0x564: V347 = AND 0xffffffffffffffffffffffffffffffffffffffff V345
0x565: V348 = 0x8fc
0x56b: V349 = ISZERO V331
0x56c: V350 = MUL V349 0x8fc
0x56e: V351 = 0x40
0x570: V352 = M[0x40]
0x571: V353 = 0x0
0x573: V354 = 0x40
0x575: V355 = M[0x40]
0x578: V356 = SUB V352 V355
0x57d: V357 = CALL V350 V347 V331 V355 V356 V355 0x0
0x583: V358 = ISZERO V357
0x584: V359 = ISZERO V358
0x585: V360 = 0x58d
0x588: JUMPI 0x58d V359
---
Entry stack: [V10, 0x206, 0x0]
Stack pops: 1
Stack additions: [V331]
Exit stack: [V10, 0x206, V331]

================================

Block 0x589
[0x589:0x58c]
---
Predecessors: [0x4c8]
Successors: []
---
0x589 PUSH1 0x0
0x58b DUP1
0x58c REVERT
---
0x589: V361 = 0x0
0x58c: REVERT 0x0 0x0
---
Entry stack: [V10, 0x206, V331]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x206, V331]

================================

Block 0x58d
[0x58d:0x58d]
---
Predecessors: [0x4c8]
Successors: [0x58e]
---
0x58d JUMPDEST
---
0x58d: JUMPDEST 
---
Entry stack: [V10, 0x206, V331]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x206, V331]

================================

Block 0x58e
[0x58e:0x590]
---
Predecessors: [0x58d]
Successors: [0x206]
---
0x58e JUMPDEST
0x58f POP
0x590 JUMP
---
0x58e: JUMPDEST 
0x590: JUMP 0x206
---
Entry stack: [V10, 0x206, V331]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x591
[0x591:0x596]
---
Predecessors: [0x213]
Successors: [0x21b]
---
0x591 JUMPDEST
0x592 PUSH1 0x2
0x594 SLOAD
0x595 DUP2
0x596 JUMP
---
0x591: JUMPDEST 
0x592: V362 = 0x2
0x594: V363 = S[0x2]
0x596: JUMP 0x21b
---
Entry stack: [V10, 0x21b]
Stack pops: 1
Stack additions: [S0, V363]
Exit stack: [V10, 0x21b, V363]

================================

Block 0x597
[0x597:0x5b2]
---
Predecessors: [0x23c]
Successors: [0x5b3, 0x5b7]
---
0x597 JUMPDEST
0x598 PUSH1 0x0
0x59a DUP1
0x59b PUSH1 0x0
0x59d PUSH1 0x1
0x59f PUSH1 0x0
0x5a1 SWAP1
0x5a2 SLOAD
0x5a3 SWAP1
0x5a4 PUSH2 0x100
0x5a7 EXP
0x5a8 SWAP1
0x5a9 DIV
0x5aa PUSH1 0xff
0x5ac AND
0x5ad ISZERO
0x5ae ISZERO
0x5af PUSH2 0x5b7
0x5b2 JUMPI
---
0x597: JUMPDEST 
0x598: V364 = 0x0
0x59b: V365 = 0x0
0x59d: V366 = 0x1
0x59f: V367 = 0x0
0x5a2: V368 = S[0x1]
0x5a4: V369 = 0x100
0x5a7: V370 = EXP 0x100 0x0
0x5a9: V371 = DIV V368 0x1
0x5aa: V372 = 0xff
0x5ac: V373 = AND 0xff V371
0x5ad: V374 = ISZERO V373
0x5ae: V375 = ISZERO V374
0x5af: V376 = 0x5b7
0x5b2: JUMPI 0x5b7 V375
---
Entry stack: [V10, 0x268, V158]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V10, 0x268, V158, 0x0, 0x0, 0x0]

================================

Block 0x5b3
[0x5b3:0x5b6]
---
Predecessors: [0x597]
Successors: []
---
0x5b3 PUSH1 0x0
0x5b5 DUP1
0x5b6 REVERT
---
0x5b3: V377 = 0x0
0x5b6: REVERT 0x0 0x0
---
Entry stack: [V10, 0x268, V158, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x268, V158, 0x0, 0x0, 0x0]

================================

Block 0x5b7
[0x5b7:0x658]
---
Predecessors: [0x597]
Successors: [0x659, 0x65d]
---
0x5b7 JUMPDEST
0x5b8 DUP4
0x5b9 SWAP3
0x5ba POP
0x5bb DUP3
0x5bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d1 AND
0x5d2 PUSH4 0x70a08231
0x5d7 ADDRESS
0x5d8 PUSH1 0x0
0x5da PUSH1 0x40
0x5dc MLOAD
0x5dd PUSH1 0x20
0x5df ADD
0x5e0 MSTORE
0x5e1 PUSH1 0x40
0x5e3 MLOAD
0x5e4 DUP3
0x5e5 PUSH4 0xffffffff
0x5ea AND
0x5eb PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x609 MUL
0x60a DUP2
0x60b MSTORE
0x60c PUSH1 0x4
0x60e ADD
0x60f DUP1
0x610 DUP3
0x611 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x626 AND
0x627 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x63c AND
0x63d DUP2
0x63e MSTORE
0x63f PUSH1 0x20
0x641 ADD
0x642 SWAP2
0x643 POP
0x644 POP
0x645 PUSH1 0x20
0x647 PUSH1 0x40
0x649 MLOAD
0x64a DUP1
0x64b DUP4
0x64c SUB
0x64d DUP2
0x64e PUSH1 0x0
0x650 DUP8
0x651 DUP1
0x652 EXTCODESIZE
0x653 ISZERO
0x654 ISZERO
0x655 PUSH2 0x65d
0x658 JUMPI
---
0x5b7: JUMPDEST 
0x5bc: V378 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d1: V379 = AND 0xffffffffffffffffffffffffffffffffffffffff V158
0x5d2: V380 = 0x70a08231
0x5d7: V381 = ADDRESS
0x5d8: V382 = 0x0
0x5da: V383 = 0x40
0x5dc: V384 = M[0x40]
0x5dd: V385 = 0x20
0x5df: V386 = ADD 0x20 V384
0x5e0: M[V386] = 0x0
0x5e1: V387 = 0x40
0x5e3: V388 = M[0x40]
0x5e5: V389 = 0xffffffff
0x5ea: V390 = AND 0xffffffff 0x70a08231
0x5eb: V391 = 0x100000000000000000000000000000000000000000000000000000000
0x609: V392 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x60b: M[V388] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x60c: V393 = 0x4
0x60e: V394 = ADD 0x4 V388
0x611: V395 = 0xffffffffffffffffffffffffffffffffffffffff
0x626: V396 = AND 0xffffffffffffffffffffffffffffffffffffffff V381
0x627: V397 = 0xffffffffffffffffffffffffffffffffffffffff
0x63c: V398 = AND 0xffffffffffffffffffffffffffffffffffffffff V396
0x63e: M[V394] = V398
0x63f: V399 = 0x20
0x641: V400 = ADD 0x20 V394
0x645: V401 = 0x20
0x647: V402 = 0x40
0x649: V403 = M[0x40]
0x64c: V404 = SUB V400 V403
0x64e: V405 = 0x0
0x652: V406 = EXTCODESIZE V379
0x653: V407 = ISZERO V406
0x654: V408 = ISZERO V407
0x655: V409 = 0x65d
0x658: JUMPI 0x65d V408
---
Entry stack: [V10, 0x268, V158, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S3, S1, S0, V379, 0x70a08231, V400, 0x20, V403, V404, V403, 0x0, V379]
Exit stack: [V10, 0x268, V158, V158, 0x0, 0x0, V379, 0x70a08231, V400, 0x20, V403, V404, V403, 0x0, V379]

================================

Block 0x659
[0x659:0x65c]
---
Predecessors: [0x5b7]
Successors: []
---
0x659 PUSH1 0x0
0x65b DUP1
0x65c REVERT
---
0x659: V410 = 0x0
0x65c: REVERT 0x0 0x0
---
Entry stack: [V10, 0x268, V158, V158, 0x0, 0x0, V379, 0x70a08231, V400, 0x20, V403, V404, V403, 0x0, V379]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x268, V158, V158, 0x0, 0x0, V379, 0x70a08231, V400, 0x20, V403, V404, V403, 0x0, V379]

================================

Block 0x65d
[0x65d:0x669]
---
Predecessors: [0x5b7]
Successors: [0x66a, 0x66e]
---
0x65d JUMPDEST
0x65e PUSH2 0x2c6
0x661 GAS
0x662 SUB
0x663 CALL
0x664 ISZERO
0x665 ISZERO
0x666 PUSH2 0x66e
0x669 JUMPI
---
0x65d: JUMPDEST 
0x65e: V411 = 0x2c6
0x661: V412 = GAS
0x662: V413 = SUB V412 0x2c6
0x663: V414 = CALL V413 V379 0x0 V403 V404 V403 0x20
0x664: V415 = ISZERO V414
0x665: V416 = ISZERO V415
0x666: V417 = 0x66e
0x669: JUMPI 0x66e V416
---
Entry stack: [V10, 0x268, V158, V158, 0x0, 0x0, V379, 0x70a08231, V400, 0x20, V403, V404, V403, 0x0, V379]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x268, V158, V158, 0x0, 0x0, V379, 0x70a08231, V400]

================================

Block 0x66a
[0x66a:0x66d]
---
Predecessors: [0x65d]
Successors: []
---
0x66a PUSH1 0x0
0x66c DUP1
0x66d REVERT
---
0x66a: V418 = 0x0
0x66d: REVERT 0x0 0x0
---
Entry stack: [V10, 0x268, V158, V158, 0x0, 0x0, V379, 0x70a08231, V400]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x268, V158, V158, 0x0, 0x0, V379, 0x70a08231, V400]

================================

Block 0x66e
[0x66e:0x683]
---
Predecessors: [0x65d]
Successors: [0x684, 0x688]
---
0x66e JUMPDEST
0x66f POP
0x670 POP
0x671 POP
0x672 PUSH1 0x40
0x674 MLOAD
0x675 DUP1
0x676 MLOAD
0x677 SWAP1
0x678 POP
0x679 SWAP2
0x67a POP
0x67b PUSH1 0x0
0x67d DUP3
0x67e EQ
0x67f ISZERO
0x680 PUSH2 0x688
0x683 JUMPI
---
0x66e: JUMPDEST 
0x672: V419 = 0x40
0x674: V420 = M[0x40]
0x676: V421 = M[V420]
0x67b: V422 = 0x0
0x67e: V423 = EQ V421 0x0
0x67f: V424 = ISZERO V423
0x680: V425 = 0x688
0x683: JUMPI 0x688 V424
---
Entry stack: [V10, 0x268, V158, V158, 0x0, 0x0, V379, 0x70a08231, V400]
Stack pops: 5
Stack additions: [V421, S3]
Exit stack: [V10, 0x268, V158, V158, V421, 0x0]

================================

Block 0x684
[0x684:0x687]
---
Predecessors: [0x66e]
Successors: []
---
0x684 PUSH1 0x0
0x686 DUP1
0x687 REVERT
---
0x684: V426 = 0x0
0x687: REVERT 0x0 0x0
---
Entry stack: [V10, 0x268, V158, V158, V421, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x268, V158, V158, V421, 0x0]

================================

Block 0x688
[0x688:0x6d3]
---
Predecessors: [0x66e]
Successors: [0x6d4, 0x6d5]
---
0x688 JUMPDEST
0x689 PUSH1 0x2
0x68b SLOAD
0x68c DUP3
0x68d PUSH1 0x0
0x68f DUP1
0x690 CALLER
0x691 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a6 AND
0x6a7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6bc AND
0x6bd DUP2
0x6be MSTORE
0x6bf PUSH1 0x20
0x6c1 ADD
0x6c2 SWAP1
0x6c3 DUP2
0x6c4 MSTORE
0x6c5 PUSH1 0x20
0x6c7 ADD
0x6c8 PUSH1 0x0
0x6ca SHA3
0x6cb SLOAD
0x6cc MUL
0x6cd DUP2
0x6ce ISZERO
0x6cf ISZERO
0x6d0 PUSH2 0x6d5
0x6d3 JUMPI
---
0x688: JUMPDEST 
0x689: V427 = 0x2
0x68b: V428 = S[0x2]
0x68d: V429 = 0x0
0x690: V430 = CALLER
0x691: V431 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a6: V432 = AND 0xffffffffffffffffffffffffffffffffffffffff V430
0x6a7: V433 = 0xffffffffffffffffffffffffffffffffffffffff
0x6bc: V434 = AND 0xffffffffffffffffffffffffffffffffffffffff V432
0x6be: M[0x0] = V434
0x6bf: V435 = 0x20
0x6c1: V436 = ADD 0x20 0x0
0x6c4: M[0x20] = 0x0
0x6c5: V437 = 0x20
0x6c7: V438 = ADD 0x20 0x20
0x6c8: V439 = 0x0
0x6ca: V440 = SHA3 0x0 0x40
0x6cb: V441 = S[V440]
0x6cc: V442 = MUL V441 V421
0x6ce: V443 = ISZERO V428
0x6cf: V444 = ISZERO V443
0x6d0: V445 = 0x6d5
0x6d3: JUMPI 0x6d5 V444
---
Entry stack: [V10, 0x268, V158, V158, V421, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V428, V442]
Exit stack: [V10, 0x268, V158, V158, V421, 0x0, V428, V442]

================================

Block 0x6d4
[0x6d4:0x6d4]
---
Predecessors: [0x688]
Successors: []
---
0x6d4 INVALID
---
0x6d4: INVALID 
---
Entry stack: [V10, 0x268, V158, V158, V421, 0x0, V428, V442]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x268, V158, V158, V421, 0x0, V428, V442]

================================

Block 0x6d5
[0x6d5:0x810]
---
Predecessors: [0x688]
Successors: [0x811, 0x815]
---
0x6d5 JUMPDEST
0x6d6 DIV
0x6d7 SWAP1
0x6d8 POP
0x6d9 PUSH1 0x0
0x6db DUP1
0x6dc CALLER
0x6dd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6f2 AND
0x6f3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x708 AND
0x709 DUP2
0x70a MSTORE
0x70b PUSH1 0x20
0x70d ADD
0x70e SWAP1
0x70f DUP2
0x710 MSTORE
0x711 PUSH1 0x20
0x713 ADD
0x714 PUSH1 0x0
0x716 SHA3
0x717 SLOAD
0x718 PUSH1 0x2
0x71a PUSH1 0x0
0x71c DUP3
0x71d DUP3
0x71e SLOAD
0x71f SUB
0x720 SWAP3
0x721 POP
0x722 POP
0x723 DUP2
0x724 SWAP1
0x725 SSTORE
0x726 POP
0x727 PUSH1 0x0
0x729 DUP1
0x72a PUSH1 0x0
0x72c CALLER
0x72d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x742 AND
0x743 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x758 AND
0x759 DUP2
0x75a MSTORE
0x75b PUSH1 0x20
0x75d ADD
0x75e SWAP1
0x75f DUP2
0x760 MSTORE
0x761 PUSH1 0x20
0x763 ADD
0x764 PUSH1 0x0
0x766 SHA3
0x767 DUP2
0x768 SWAP1
0x769 SSTORE
0x76a POP
0x76b DUP3
0x76c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x781 AND
0x782 PUSH4 0xa9059cbb
0x787 CALLER
0x788 DUP4
0x789 PUSH1 0x0
0x78b PUSH1 0x40
0x78d MLOAD
0x78e PUSH1 0x20
0x790 ADD
0x791 MSTORE
0x792 PUSH1 0x40
0x794 MLOAD
0x795 DUP4
0x796 PUSH4 0xffffffff
0x79b AND
0x79c PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x7ba MUL
0x7bb DUP2
0x7bc MSTORE
0x7bd PUSH1 0x4
0x7bf ADD
0x7c0 DUP1
0x7c1 DUP4
0x7c2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7d7 AND
0x7d8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7ed AND
0x7ee DUP2
0x7ef MSTORE
0x7f0 PUSH1 0x20
0x7f2 ADD
0x7f3 DUP3
0x7f4 DUP2
0x7f5 MSTORE
0x7f6 PUSH1 0x20
0x7f8 ADD
0x7f9 SWAP3
0x7fa POP
0x7fb POP
0x7fc POP
0x7fd PUSH1 0x20
0x7ff PUSH1 0x40
0x801 MLOAD
0x802 DUP1
0x803 DUP4
0x804 SUB
0x805 DUP2
0x806 PUSH1 0x0
0x808 DUP8
0x809 DUP1
0x80a EXTCODESIZE
0x80b ISZERO
0x80c ISZERO
0x80d PUSH2 0x815
0x810 JUMPI
---
0x6d5: JUMPDEST 
0x6d6: V446 = DIV V442 V428
0x6d9: V447 = 0x0
0x6dc: V448 = CALLER
0x6dd: V449 = 0xffffffffffffffffffffffffffffffffffffffff
0x6f2: V450 = AND 0xffffffffffffffffffffffffffffffffffffffff V448
0x6f3: V451 = 0xffffffffffffffffffffffffffffffffffffffff
0x708: V452 = AND 0xffffffffffffffffffffffffffffffffffffffff V450
0x70a: M[0x0] = V452
0x70b: V453 = 0x20
0x70d: V454 = ADD 0x20 0x0
0x710: M[0x20] = 0x0
0x711: V455 = 0x20
0x713: V456 = ADD 0x20 0x20
0x714: V457 = 0x0
0x716: V458 = SHA3 0x0 0x40
0x717: V459 = S[V458]
0x718: V460 = 0x2
0x71a: V461 = 0x0
0x71e: V462 = S[0x2]
0x71f: V463 = SUB V462 V459
0x725: S[0x2] = V463
0x727: V464 = 0x0
0x72a: V465 = 0x0
0x72c: V466 = CALLER
0x72d: V467 = 0xffffffffffffffffffffffffffffffffffffffff
0x742: V468 = AND 0xffffffffffffffffffffffffffffffffffffffff V466
0x743: V469 = 0xffffffffffffffffffffffffffffffffffffffff
0x758: V470 = AND 0xffffffffffffffffffffffffffffffffffffffff V468
0x75a: M[0x0] = V470
0x75b: V471 = 0x20
0x75d: V472 = ADD 0x20 0x0
0x760: M[0x20] = 0x0
0x761: V473 = 0x20
0x763: V474 = ADD 0x20 0x20
0x764: V475 = 0x0
0x766: V476 = SHA3 0x0 0x40
0x769: S[V476] = 0x0
0x76c: V477 = 0xffffffffffffffffffffffffffffffffffffffff
0x781: V478 = AND 0xffffffffffffffffffffffffffffffffffffffff V158
0x782: V479 = 0xa9059cbb
0x787: V480 = CALLER
0x789: V481 = 0x0
0x78b: V482 = 0x40
0x78d: V483 = M[0x40]
0x78e: V484 = 0x20
0x790: V485 = ADD 0x20 V483
0x791: M[V485] = 0x0
0x792: V486 = 0x40
0x794: V487 = M[0x40]
0x796: V488 = 0xffffffff
0x79b: V489 = AND 0xffffffff 0xa9059cbb
0x79c: V490 = 0x100000000000000000000000000000000000000000000000000000000
0x7ba: V491 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x7bc: M[V487] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x7bd: V492 = 0x4
0x7bf: V493 = ADD 0x4 V487
0x7c2: V494 = 0xffffffffffffffffffffffffffffffffffffffff
0x7d7: V495 = AND 0xffffffffffffffffffffffffffffffffffffffff V480
0x7d8: V496 = 0xffffffffffffffffffffffffffffffffffffffff
0x7ed: V497 = AND 0xffffffffffffffffffffffffffffffffffffffff V495
0x7ef: M[V493] = V497
0x7f0: V498 = 0x20
0x7f2: V499 = ADD 0x20 V493
0x7f5: M[V499] = V446
0x7f6: V500 = 0x20
0x7f8: V501 = ADD 0x20 V499
0x7fd: V502 = 0x20
0x7ff: V503 = 0x40
0x801: V504 = M[0x40]
0x804: V505 = SUB V501 V504
0x806: V506 = 0x0
0x80a: V507 = EXTCODESIZE V478
0x80b: V508 = ISZERO V507
0x80c: V509 = ISZERO V508
0x80d: V510 = 0x815
0x810: JUMPI 0x815 V509
---
Entry stack: [V10, 0x268, V158, V158, V421, 0x0, V428, V442]
Stack pops: 5
Stack additions: [S4, S3, V446, V478, 0xa9059cbb, V501, 0x20, V504, V505, V504, 0x0, V478]
Exit stack: [V10, 0x268, V158, V158, V421, V446, V478, 0xa9059cbb, V501, 0x20, V504, V505, V504, 0x0, V478]

================================

Block 0x811
[0x811:0x814]
---
Predecessors: [0x6d5]
Successors: []
---
0x811 PUSH1 0x0
0x813 DUP1
0x814 REVERT
---
0x811: V511 = 0x0
0x814: REVERT 0x0 0x0
---
Entry stack: [V10, 0x268, V158, V158, V421, V446, V478, 0xa9059cbb, V501, 0x20, V504, V505, V504, 0x0, V478]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x268, V158, V158, V421, V446, V478, 0xa9059cbb, V501, 0x20, V504, V505, V504, 0x0, V478]

================================

Block 0x815
[0x815:0x821]
---
Predecessors: [0x6d5]
Successors: [0x822, 0x826]
---
0x815 JUMPDEST
0x816 PUSH2 0x2c6
0x819 GAS
0x81a SUB
0x81b CALL
0x81c ISZERO
0x81d ISZERO
0x81e PUSH2 0x826
0x821 JUMPI
---
0x815: JUMPDEST 
0x816: V512 = 0x2c6
0x819: V513 = GAS
0x81a: V514 = SUB V513 0x2c6
0x81b: V515 = CALL V514 V478 0x0 V504 V505 V504 0x20
0x81c: V516 = ISZERO V515
0x81d: V517 = ISZERO V516
0x81e: V518 = 0x826
0x821: JUMPI 0x826 V517
---
Entry stack: [V10, 0x268, V158, V158, V421, V446, V478, 0xa9059cbb, V501, 0x20, V504, V505, V504, 0x0, V478]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x268, V158, V158, V421, V446, V478, 0xa9059cbb, V501]

================================

Block 0x822
[0x822:0x825]
---
Predecessors: [0x815]
Successors: []
---
0x822 PUSH1 0x0
0x824 DUP1
0x825 REVERT
---
0x822: V519 = 0x0
0x825: REVERT 0x0 0x0
---
Entry stack: [V10, 0x268, V158, V158, V421, V446, V478, 0xa9059cbb, V501]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x268, V158, V158, V421, V446, V478, 0xa9059cbb, V501]

================================

Block 0x826
[0x826:0x836]
---
Predecessors: [0x815]
Successors: [0x837, 0x83b]
---
0x826 JUMPDEST
0x827 POP
0x828 POP
0x829 POP
0x82a PUSH1 0x40
0x82c MLOAD
0x82d DUP1
0x82e MLOAD
0x82f SWAP1
0x830 POP
0x831 ISZERO
0x832 ISZERO
0x833 PUSH2 0x83b
0x836 JUMPI
---
0x826: JUMPDEST 
0x82a: V520 = 0x40
0x82c: V521 = M[0x40]
0x82e: V522 = M[V521]
0x831: V523 = ISZERO V522
0x832: V524 = ISZERO V523
0x833: V525 = 0x83b
0x836: JUMPI 0x83b V524
---
Entry stack: [V10, 0x268, V158, V158, V421, V446, V478, 0xa9059cbb, V501]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x268, V158, V158, V421, V446]

================================

Block 0x837
[0x837:0x83a]
---
Predecessors: [0x826]
Successors: []
---
0x837 PUSH1 0x0
0x839 DUP1
0x83a REVERT
---
0x837: V526 = 0x0
0x83a: REVERT 0x0 0x0
---
Entry stack: [V10, 0x268, V158, V158, V421, V446]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x268, V158, V158, V421, V446]

================================

Block 0x83b
[0x83b:0x83b]
---
Predecessors: [0x826]
Successors: [0x83c]
---
0x83b JUMPDEST
---
0x83b: JUMPDEST 
---
Entry stack: [V10, 0x268, V158, V158, V421, V446]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x268, V158, V158, V421, V446]

================================

Block 0x83c
[0x83c:0x841]
---
Predecessors: [0x83b]
Successors: [0x268]
---
0x83c JUMPDEST
0x83d POP
0x83e POP
0x83f POP
0x840 POP
0x841 JUMP
---
0x83c: JUMPDEST 
0x841: JUMP 0x268
---
Entry stack: [V10, 0x268, V158, V158, V421, V446]
Stack pops: 5
Stack additions: []
Exit stack: [V10]

================================

Block 0x842
[0x842:0x86f]
---
Predecessors: []
Successors: []
---
0x842 STOP
0x843 LOG1
0x844 PUSH6 0x627a7a723058
0x84b SHA3
0x84c DUP6
0x84d PUSH11 0x12d038790a9645af53eb06
0x859 MISSING 0xfc
0x85a PUSH21 0x4c047ba2ecd19a15229b401d312b322f3e0029
---
0x842: STOP 
0x843: LOG S0 S1 S2
0x844: V527 = 0x627a7a723058
0x84b: V528 = SHA3 0x627a7a723058 S3
0x84d: V529 = 0x12d038790a9645af53eb06
0x859: MISSING 0xfc
0x85a: V530 = 0x4c047ba2ecd19a15229b401d312b322f3e0029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x12d038790a9645af53eb06, S8, V528, S4, S5, S6, S7, S8, 0x4c047ba2ecd19a15229b401d312b322f3e0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x27e235e3
Entry block: 0xb3
Exit block: 0xea
Body: 0xb3, 0xba, 0xbe, 0xea, 0x36e

Function 1:
Public function signature: 0x28b8e9cf
Entry block: 0x100
Exit block: 0x467
Body: 0x100, 0x107, 0x10b, 0x113, 0x386, 0x39c, 0x3a0, 0x3ca, 0x3ce, 0x3d9, 0x3dd, 0x467, 0x46b, 0x46c

Function 2:
Public function signature: 0x2a2fbd4b
Entry block: 0x115
Exit block: 0x128
Body: 0x115, 0x11c, 0x120, 0x128, 0x46e

Function 3:
Public function signature: 0x5259347d
Entry block: 0x13e
Exit block: 0x146
Body: 0x13e, 0x146

Function 4:
Public function signature: 0x62568d83
Entry block: 0x148
Exit block: 0x15b
Body: 0x148, 0x14f, 0x153, 0x15b, 0x47b

Function 5:
Public function signature: 0x6360fc3f
Entry block: 0x171
Exit block: 0x184
Body: 0x171, 0x178, 0x17c, 0x184, 0x481

Function 6:
Public function signature: 0x6ad1fe02
Entry block: 0x19e
Exit block: 0x1b1
Body: 0x19e, 0x1a5, 0x1a9, 0x1b1, 0x494

Function 7:
Public function signature: 0x81702c34
Entry block: 0x1f3
Exit block: 0x206
Body: 0x1f3, 0x1fa, 0x1fe, 0x206, 0x4ac, 0x4c4, 0x4c8, 0x589, 0x58d, 0x58e

Function 8:
Public function signature: 0xc42bb1e4
Entry block: 0x208
Exit block: 0x21b
Body: 0x208, 0x20f, 0x213, 0x21b, 0x591

Function 9:
Public function signature: 0xfcfdbc23
Entry block: 0x231
Exit block: 0x268
Body: 0x231, 0x238, 0x23c, 0x268, 0x597, 0x5b3, 0x5b7, 0x659, 0x65d, 0x66a, 0x66e, 0x684, 0x688, 0x6d4, 0x6d5, 0x811, 0x815, 0x822, 0x826, 0x837, 0x83b, 0x83c

Function 10:
Public fallback function
Entry block: 0xa2
Exit block: 0xb1
Body: 0xa2, 0xa6, 0xae, 0xaf, 0xb1

Function 11:
Private function
Entry block: 0x26a
Exit block: 0x36a
Body: 0x26a, 0x287, 0x2b3, 0x31c, 0x31d, 0x36a

