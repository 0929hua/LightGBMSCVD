Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x4a]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x4a
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x4a
0xa: JUMPI 0x4a V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x1fa]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x13332c6c
0x3a EQ
0x3b PUSH2 0x1fa
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x13332c6c
0x3a: V12 = EQ 0x13332c6c V10
0x3b: V13 = 0x1fa
0x3e: JUMPI 0x1fa V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x24c]
---
0x3f DUP1
0x40 PUSH4 0xc2052403
0x45 EQ
0x46 PUSH2 0x24c
0x49 JUMPI
---
0x40: V14 = 0xc2052403
0x45: V15 = EQ 0xc2052403 V10
0x46: V16 = 0x24c
0x49: JUMPI 0x24c V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x4d]
---
Predecessors: [0x0, 0x3f]
Successors: [0x4e]
---
0x4a JUMPDEST
0x4b PUSH2 0x1f8
---
0x4a: JUMPDEST 
0x4b: V17 = 0x1f8
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1f8]
Exit stack: [V10, 0x1f8]

================================

Block 0x4e
[0x4e:0x118]
---
Predecessors: [0x4a]
Successors: [0x119, 0x11a]
---
0x4e JUMPDEST
0x4f PUSH1 0x0
0x51 PUSH1 0x0
0x53 SWAP1
0x54 SLOAD
0x55 SWAP1
0x56 PUSH2 0x100
0x59 EXP
0x5a SWAP1
0x5b DIV
0x5c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x71 AND
0x72 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x87 AND
0x88 PUSH4 0x633dfc70
0x8d PUSH1 0x0
0x8f PUSH1 0x0
0x91 SWAP1
0x92 SLOAD
0x93 SWAP1
0x94 PUSH2 0x100
0x97 EXP
0x98 SWAP1
0x99 DIV
0x9a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaf AND
0xb0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc5 AND
0xc6 PUSH4 0xd3604bc9
0xcb PUSH1 0x0
0xcd PUSH1 0x40
0xcf MLOAD
0xd0 PUSH1 0x20
0xd2 ADD
0xd3 MSTORE
0xd4 PUSH1 0x40
0xd6 MLOAD
0xd7 DUP2
0xd8 PUSH4 0xffffffff
0xdd AND
0xde PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xfc MUL
0xfd DUP2
0xfe MSTORE
0xff PUSH1 0x4
0x101 ADD
0x102 DUP1
0x103 SWAP1
0x104 POP
0x105 PUSH1 0x20
0x107 PUSH1 0x40
0x109 MLOAD
0x10a DUP1
0x10b DUP4
0x10c SUB
0x10d DUP2
0x10e PUSH1 0x0
0x110 DUP8
0x111 DUP1
0x112 EXTCODESIZE
0x113 ISZERO
0x114 ISZERO
0x115 PUSH2 0x11a
0x118 JUMPI
---
0x4e: JUMPDEST 
0x4f: V18 = 0x0
0x51: V19 = 0x0
0x54: V20 = S[0x0]
0x56: V21 = 0x100
0x59: V22 = EXP 0x100 0x0
0x5b: V23 = DIV V20 0x1
0x5c: V24 = 0xffffffffffffffffffffffffffffffffffffffff
0x71: V25 = AND 0xffffffffffffffffffffffffffffffffffffffff V23
0x72: V26 = 0xffffffffffffffffffffffffffffffffffffffff
0x87: V27 = AND 0xffffffffffffffffffffffffffffffffffffffff V25
0x88: V28 = 0x633dfc70
0x8d: V29 = 0x0
0x8f: V30 = 0x0
0x92: V31 = S[0x0]
0x94: V32 = 0x100
0x97: V33 = EXP 0x100 0x0
0x99: V34 = DIV V31 0x1
0x9a: V35 = 0xffffffffffffffffffffffffffffffffffffffff
0xaf: V36 = AND 0xffffffffffffffffffffffffffffffffffffffff V34
0xb0: V37 = 0xffffffffffffffffffffffffffffffffffffffff
0xc5: V38 = AND 0xffffffffffffffffffffffffffffffffffffffff V36
0xc6: V39 = 0xd3604bc9
0xcb: V40 = 0x0
0xcd: V41 = 0x40
0xcf: V42 = M[0x40]
0xd0: V43 = 0x20
0xd2: V44 = ADD 0x20 V42
0xd3: M[V44] = 0x0
0xd4: V45 = 0x40
0xd6: V46 = M[0x40]
0xd8: V47 = 0xffffffff
0xdd: V48 = AND 0xffffffff 0xd3604bc9
0xde: V49 = 0x100000000000000000000000000000000000000000000000000000000
0xfc: V50 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd3604bc9
0xfe: M[V46] = 0xd3604bc900000000000000000000000000000000000000000000000000000000
0xff: V51 = 0x4
0x101: V52 = ADD 0x4 V46
0x105: V53 = 0x20
0x107: V54 = 0x40
0x109: V55 = M[0x40]
0x10c: V56 = SUB V52 V55
0x10e: V57 = 0x0
0x112: V58 = EXTCODESIZE V38
0x113: V59 = ISZERO V58
0x114: V60 = ISZERO V59
0x115: V61 = 0x11a
0x118: JUMPI 0x11a V60
---
Entry stack: [V10, 0x1f8]
Stack pops: 0
Stack additions: [V27, 0x633dfc70, V38, 0xd3604bc9, V52, 0x20, V55, V56, V55, 0x0, V38]
Exit stack: [V10, 0x1f8, V27, 0x633dfc70, V38, 0xd3604bc9, V52, 0x20, V55, V56, V55, 0x0, V38]

================================

Block 0x119
[0x119:0x119]
---
Predecessors: [0x4e]
Successors: []
---
0x119 INVALID
---
0x119: INVALID 
---
Entry stack: [V10, 0x1f8, V27, 0x633dfc70, V38, 0xd3604bc9, V52, 0x20, V55, V56, V55, 0x0, V38]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1f8, V27, 0x633dfc70, V38, 0xd3604bc9, V52, 0x20, V55, V56, V55, 0x0, V38]

================================

Block 0x11a
[0x11a:0x125]
---
Predecessors: [0x4e]
Successors: [0x126, 0x127]
---
0x11a JUMPDEST
0x11b PUSH1 0x32
0x11d GAS
0x11e SUB
0x11f CALL
0x120 ISZERO
0x121 ISZERO
0x122 PUSH2 0x127
0x125 JUMPI
---
0x11a: JUMPDEST 
0x11b: V62 = 0x32
0x11d: V63 = GAS
0x11e: V64 = SUB V63 0x32
0x11f: V65 = CALL V64 V38 0x0 V55 V56 V55 0x20
0x120: V66 = ISZERO V65
0x121: V67 = ISZERO V66
0x122: V68 = 0x127
0x125: JUMPI 0x127 V67
---
Entry stack: [V10, 0x1f8, V27, 0x633dfc70, V38, 0xd3604bc9, V52, 0x20, V55, V56, V55, 0x0, V38]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x1f8, V27, 0x633dfc70, V38, 0xd3604bc9, V52]

================================

Block 0x126
[0x126:0x126]
---
Predecessors: [0x11a]
Successors: []
---
0x126 INVALID
---
0x126: INVALID 
---
Entry stack: [V10, 0x1f8, V27, 0x633dfc70, V38, 0xd3604bc9, V52]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1f8, V27, 0x633dfc70, V38, 0xd3604bc9, V52]

================================

Block 0x127
[0x127:0x1e3]
---
Predecessors: [0x11a]
Successors: [0x1e4, 0x1e5]
---
0x127 JUMPDEST
0x128 POP
0x129 POP
0x12a POP
0x12b PUSH1 0x40
0x12d MLOAD
0x12e DUP1
0x12f MLOAD
0x130 SWAP1
0x131 POP
0x132 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x147 AND
0x148 ADDRESS
0x149 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15e AND
0x15f EQ
0x160 CALLER
0x161 PUSH1 0x40
0x163 MLOAD
0x164 DUP4
0x165 PUSH4 0xffffffff
0x16a AND
0x16b PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x189 MUL
0x18a DUP2
0x18b MSTORE
0x18c PUSH1 0x4
0x18e ADD
0x18f DUP1
0x190 DUP4
0x191 ISZERO
0x192 ISZERO
0x193 ISZERO
0x194 ISZERO
0x195 DUP2
0x196 MSTORE
0x197 PUSH1 0x20
0x199 ADD
0x19a DUP3
0x19b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b0 AND
0x1b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c6 AND
0x1c7 DUP2
0x1c8 MSTORE
0x1c9 PUSH1 0x20
0x1cb ADD
0x1cc SWAP3
0x1cd POP
0x1ce POP
0x1cf POP
0x1d0 PUSH1 0x0
0x1d2 PUSH1 0x40
0x1d4 MLOAD
0x1d5 DUP1
0x1d6 DUP4
0x1d7 SUB
0x1d8 DUP2
0x1d9 PUSH1 0x0
0x1db DUP8
0x1dc DUP1
0x1dd EXTCODESIZE
0x1de ISZERO
0x1df ISZERO
0x1e0 PUSH2 0x1e5
0x1e3 JUMPI
---
0x127: JUMPDEST 
0x12b: V69 = 0x40
0x12d: V70 = M[0x40]
0x12f: V71 = M[V70]
0x132: V72 = 0xffffffffffffffffffffffffffffffffffffffff
0x147: V73 = AND 0xffffffffffffffffffffffffffffffffffffffff V71
0x148: V74 = ADDRESS
0x149: V75 = 0xffffffffffffffffffffffffffffffffffffffff
0x15e: V76 = AND 0xffffffffffffffffffffffffffffffffffffffff V74
0x15f: V77 = EQ V76 V73
0x160: V78 = CALLER
0x161: V79 = 0x40
0x163: V80 = M[0x40]
0x165: V81 = 0xffffffff
0x16a: V82 = AND 0xffffffff 0x633dfc70
0x16b: V83 = 0x100000000000000000000000000000000000000000000000000000000
0x189: V84 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x633dfc70
0x18b: M[V80] = 0x633dfc7000000000000000000000000000000000000000000000000000000000
0x18c: V85 = 0x4
0x18e: V86 = ADD 0x4 V80
0x191: V87 = ISZERO V77
0x192: V88 = ISZERO V87
0x193: V89 = ISZERO V88
0x194: V90 = ISZERO V89
0x196: M[V86] = V90
0x197: V91 = 0x20
0x199: V92 = ADD 0x20 V86
0x19b: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b0: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x1b1: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c6: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x1c8: M[V92] = V96
0x1c9: V97 = 0x20
0x1cb: V98 = ADD 0x20 V92
0x1d0: V99 = 0x0
0x1d2: V100 = 0x40
0x1d4: V101 = M[0x40]
0x1d7: V102 = SUB V98 V101
0x1d9: V103 = 0x0
0x1dd: V104 = EXTCODESIZE V27
0x1de: V105 = ISZERO V104
0x1df: V106 = ISZERO V105
0x1e0: V107 = 0x1e5
0x1e3: JUMPI 0x1e5 V106
---
Entry stack: [V10, 0x1f8, V27, 0x633dfc70, V38, 0xd3604bc9, V52]
Stack pops: 5
Stack additions: [S4, S3, V98, 0x0, V101, V102, V101, 0x0, S4]
Exit stack: [V10, 0x1f8, V27, 0x633dfc70, V98, 0x0, V101, V102, V101, 0x0, V27]

================================

Block 0x1e4
[0x1e4:0x1e4]
---
Predecessors: [0x127]
Successors: []
---
0x1e4 INVALID
---
0x1e4: INVALID 
---
Entry stack: [V10, 0x1f8, V27, 0x633dfc70, V98, 0x0, V101, V102, V101, 0x0, V27]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1f8, V27, 0x633dfc70, V98, 0x0, V101, V102, V101, 0x0, V27]

================================

Block 0x1e5
[0x1e5:0x1f0]
---
Predecessors: [0x127]
Successors: [0x1f1, 0x1f2]
---
0x1e5 JUMPDEST
0x1e6 PUSH1 0x32
0x1e8 GAS
0x1e9 SUB
0x1ea CALL
0x1eb ISZERO
0x1ec ISZERO
0x1ed PUSH2 0x1f2
0x1f0 JUMPI
---
0x1e5: JUMPDEST 
0x1e6: V108 = 0x32
0x1e8: V109 = GAS
0x1e9: V110 = SUB V109 0x32
0x1ea: V111 = CALL V110 V27 0x0 V101 V102 V101 0x0
0x1eb: V112 = ISZERO V111
0x1ec: V113 = ISZERO V112
0x1ed: V114 = 0x1f2
0x1f0: JUMPI 0x1f2 V113
---
Entry stack: [V10, 0x1f8, V27, 0x633dfc70, V98, 0x0, V101, V102, V101, 0x0, V27]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x1f8, V27, 0x633dfc70, V98]

================================

Block 0x1f1
[0x1f1:0x1f1]
---
Predecessors: [0x1e5]
Successors: []
---
0x1f1 INVALID
---
0x1f1: INVALID 
---
Entry stack: [V10, 0x1f8, V27, 0x633dfc70, V98]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1f8, V27, 0x633dfc70, V98]

================================

Block 0x1f2
[0x1f2:0x1f5]
---
Predecessors: [0x1e5]
Successors: [0x1f6]
---
0x1f2 JUMPDEST
0x1f3 POP
0x1f4 POP
0x1f5 POP
---
0x1f2: JUMPDEST 
---
Entry stack: [V10, 0x1f8, V27, 0x633dfc70, V98]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x1f8]

================================

Block 0x1f6
[0x1f6:0x1f7]
---
Predecessors: [0x1f2]
Successors: [0x1f8]
---
0x1f6 JUMPDEST
0x1f7 JUMP
---
0x1f6: JUMPDEST 
0x1f7: JUMP 0x1f8
---
Entry stack: [V10, 0x1f8]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x1f8
[0x1f8:0x1f9]
---
Predecessors: [0x1f6]
Successors: []
---
0x1f8 JUMPDEST
0x1f9 STOP
---
0x1f8: JUMPDEST 
0x1f9: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1fa
[0x1fa:0x200]
---
Predecessors: [0xb]
Successors: [0x201, 0x202]
---
0x1fa JUMPDEST
0x1fb CALLVALUE
0x1fc ISZERO
0x1fd PUSH2 0x202
0x200 JUMPI
---
0x1fa: JUMPDEST 
0x1fb: V115 = CALLVALUE
0x1fc: V116 = ISZERO V115
0x1fd: V117 = 0x202
0x200: JUMPI 0x202 V116
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x201
[0x201:0x201]
---
Predecessors: [0x1fa]
Successors: []
---
0x201 INVALID
---
0x201: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x202
[0x202:0x209]
---
Predecessors: [0x1fa]
Successors: [0x25e]
---
0x202 JUMPDEST
0x203 PUSH2 0x20a
0x206 PUSH2 0x25e
0x209 JUMP
---
0x202: JUMPDEST 
0x203: V118 = 0x20a
0x206: V119 = 0x25e
0x209: JUMP 0x25e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x20a]
Exit stack: [V10, 0x20a]

================================

Block 0x20a
[0x20a:0x24b]
---
Predecessors: [0x25e]
Successors: []
---
0x20a JUMPDEST
0x20b PUSH1 0x40
0x20d MLOAD
0x20e DUP1
0x20f DUP3
0x210 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x225 AND
0x226 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x23b AND
0x23c DUP2
0x23d MSTORE
0x23e PUSH1 0x20
0x240 ADD
0x241 SWAP2
0x242 POP
0x243 POP
0x244 PUSH1 0x40
0x246 MLOAD
0x247 DUP1
0x248 SWAP2
0x249 SUB
0x24a SWAP1
0x24b RETURN
---
0x20a: JUMPDEST 
0x20b: V120 = 0x40
0x20d: V121 = M[0x40]
0x210: V122 = 0xffffffffffffffffffffffffffffffffffffffff
0x225: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V143
0x226: V124 = 0xffffffffffffffffffffffffffffffffffffffff
0x23b: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V123
0x23d: M[V121] = V125
0x23e: V126 = 0x20
0x240: V127 = ADD 0x20 V121
0x244: V128 = 0x40
0x246: V129 = M[0x40]
0x249: V130 = SUB V127 V129
0x24b: RETURN V129 V130
---
Entry stack: [V10, 0x20a, V143]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x20a]

================================

Block 0x24c
[0x24c:0x252]
---
Predecessors: [0x3f]
Successors: [0x253, 0x254]
---
0x24c JUMPDEST
0x24d CALLVALUE
0x24e ISZERO
0x24f PUSH2 0x254
0x252 JUMPI
---
0x24c: JUMPDEST 
0x24d: V131 = CALLVALUE
0x24e: V132 = ISZERO V131
0x24f: V133 = 0x254
0x252: JUMPI 0x254 V132
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x253
[0x253:0x253]
---
Predecessors: [0x24c]
Successors: []
---
0x253 INVALID
---
0x253: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x254
[0x254:0x25b]
---
Predecessors: [0x24c]
Successors: [0x284]
---
0x254 JUMPDEST
0x255 PUSH2 0x25c
0x258 PUSH2 0x284
0x25b JUMP
---
0x254: JUMPDEST 
0x255: V134 = 0x25c
0x258: V135 = 0x284
0x25b: JUMP 0x284
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x25c]
Exit stack: [V10, 0x25c]

================================

Block 0x25c
[0x25c:0x25d]
---
Predecessors: [0x2d5]
Successors: []
---
0x25c JUMPDEST
0x25d STOP
---
0x25c: JUMPDEST 
0x25d: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x25e
[0x25e:0x283]
---
Predecessors: [0x202]
Successors: [0x20a]
---
0x25e JUMPDEST
0x25f PUSH1 0x0
0x261 PUSH1 0x0
0x263 SWAP1
0x264 SLOAD
0x265 SWAP1
0x266 PUSH2 0x100
0x269 EXP
0x26a SWAP1
0x26b DIV
0x26c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x281 AND
0x282 DUP2
0x283 JUMP
---
0x25e: JUMPDEST 
0x25f: V136 = 0x0
0x261: V137 = 0x0
0x264: V138 = S[0x0]
0x266: V139 = 0x100
0x269: V140 = EXP 0x100 0x0
0x26b: V141 = DIV V138 0x1
0x26c: V142 = 0xffffffffffffffffffffffffffffffffffffffff
0x281: V143 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0x283: JUMP 0x20a
---
Entry stack: [V10, 0x20a]
Stack pops: 1
Stack additions: [S0, V143]
Exit stack: [V10, 0x20a, V143]

================================

Block 0x284
[0x284:0x2d4]
---
Predecessors: [0x254]
Successors: [0x2d5]
---
0x284 JUMPDEST
0x285 CALLER
0x286 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x29b AND
0x29c PUSH2 0x8fc
0x29f ADDRESS
0x2a0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b5 AND
0x2b6 BALANCE
0x2b7 SWAP1
0x2b8 DUP2
0x2b9 ISZERO
0x2ba MUL
0x2bb SWAP1
0x2bc PUSH1 0x40
0x2be MLOAD
0x2bf DUP1
0x2c0 SWAP1
0x2c1 POP
0x2c2 PUSH1 0x0
0x2c4 PUSH1 0x40
0x2c6 MLOAD
0x2c7 DUP1
0x2c8 DUP4
0x2c9 SUB
0x2ca DUP2
0x2cb DUP6
0x2cc DUP9
0x2cd DUP9
0x2ce CALL
0x2cf SWAP4
0x2d0 POP
0x2d1 POP
0x2d2 POP
0x2d3 POP
0x2d4 POP
---
0x284: JUMPDEST 
0x285: V144 = CALLER
0x286: V145 = 0xffffffffffffffffffffffffffffffffffffffff
0x29b: V146 = AND 0xffffffffffffffffffffffffffffffffffffffff V144
0x29c: V147 = 0x8fc
0x29f: V148 = ADDRESS
0x2a0: V149 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b5: V150 = AND 0xffffffffffffffffffffffffffffffffffffffff V148
0x2b6: V151 = BALANCE V150
0x2b9: V152 = ISZERO V151
0x2ba: V153 = MUL V152 0x8fc
0x2bc: V154 = 0x40
0x2be: V155 = M[0x40]
0x2c2: V156 = 0x0
0x2c4: V157 = 0x40
0x2c6: V158 = M[0x40]
0x2c9: V159 = SUB V155 V158
0x2ce: V160 = CALL V153 V146 V151 V158 V159 V158 0x0
---
Entry stack: [V10, 0x25c]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x25c]

================================

Block 0x2d5
[0x2d5:0x2d6]
---
Predecessors: [0x284]
Successors: [0x25c]
---
0x2d5 JUMPDEST
0x2d6 JUMP
---
0x2d5: JUMPDEST 
0x2d6: JUMP 0x25c
---
Entry stack: [V10, 0x25c]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x2d7
[0x2d7:0x30d]
---
Predecessors: []
Successors: [0x30e]
---
0x2d7 STOP
0x2d8 LOG1
0x2d9 PUSH6 0x627a7a723058
0x2e0 SHA3
0x2e1 DUP4
0x2e2 TIMESTAMP
0x2e3 CALLCODE
0x2e4 DUP14
0x2e5 MISSING 0xd
0x2e6 MISSING 0xdc
0x2e7 SWAP3
0x2e8 MISSING 0xb9
0x2e9 CALLDATACOPY
0x2ea COINBASE
0x2eb MISSING 0xa8
0x2ec PUSH5 0x8a53c16e1b
0x2f2 MISSING 0xf9
0x2f3 CALLVALUE
0x2f4 MISSING 0xe
0x2f5 CALLDATASIZE
0x2f6 MISSING 0xa9
0x2f7 CODESIZE
0x2f8 DIFFICULTY
0x2f9 SWAP7
0x2fa LOG1
0x2fb PUSH14 0x8a7b61348a002960606040523615
0x30a PUSH2 0xd9
0x30d JUMPI
---
0x2d7: STOP 
0x2d8: LOG S0 S1 S2
0x2d9: V161 = 0x627a7a723058
0x2e0: V162 = SHA3 0x627a7a723058 S3
0x2e2: V163 = TIMESTAMP
0x2e3: V164 = CALLCODE V163 S6 V162 S4 S5 S6 S7
0x2e5: MISSING 0xd
0x2e6: MISSING 0xdc
0x2e8: MISSING 0xb9
0x2e9: CALLDATACOPY S0 S1 S2
0x2ea: V165 = COINBASE
0x2eb: MISSING 0xa8
0x2ec: V166 = 0x8a53c16e1b
0x2f2: MISSING 0xf9
0x2f3: V167 = CALLVALUE
0x2f4: MISSING 0xe
0x2f5: V168 = CALLDATASIZE
0x2f6: MISSING 0xa9
0x2f7: V169 = CODESIZE
0x2f8: V170 = DIFFICULTY
0x2fa: LOG S5 V169 S0
0x2fb: V171 = 0x8a7b61348a002960606040523615
0x30a: V172 = 0xd9
0x30d: THROWI 0x8a7b61348a002960606040523615
---
Entry stack: []
Stack pops: 0
Stack additions: [S20, V164, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S3, S1, S2, S0, V165, 0x8a53c16e1b, V167, V168, S1, S2, S3, S4, V170]
Exit stack: []

================================

Block 0x30e
[0x30e:0x341]
---
Predecessors: [0x2d7]
Successors: [0x342]
---
0x30e PUSH1 0x0
0x310 CALLDATALOAD
0x311 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x32f SWAP1
0x330 DIV
0x331 PUSH4 0xffffffff
0x336 AND
0x337 DUP1
0x338 PUSH4 0xeedc7b5
0x33d EQ
0x33e PUSH2 0x133
0x341 JUMPI
---
0x30e: V173 = 0x0
0x310: V174 = CALLDATALOAD 0x0
0x311: V175 = 0x100000000000000000000000000000000000000000000000000000000
0x330: V176 = DIV V174 0x100000000000000000000000000000000000000000000000000000000
0x331: V177 = 0xffffffff
0x336: V178 = AND 0xffffffff V176
0x338: V179 = 0xeedc7b5
0x33d: V180 = EQ 0xeedc7b5 V178
0x33e: V181 = 0x133
0x341: THROWI V180
---
Entry stack: [V170, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [V178]
Exit stack: [V170, S3, S2, S1, S0, V178]

================================

Block 0x342
[0x342:0x34c]
---
Predecessors: [0x30e]
Successors: [0x34d]
---
0x342 DUP1
0x343 PUSH4 0x329b8f38
0x348 EQ
0x349 PUSH2 0x1da
0x34c JUMPI
---
0x343: V182 = 0x329b8f38
0x348: V183 = EQ 0x329b8f38 V178
0x349: V184 = 0x1da
0x34c: THROWI V183
---
Entry stack: [V170, S4, S3, S2, S1, V178]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V170, S4, S3, S2, S1, V178]

================================

Block 0x34d
[0x34d:0x357]
---
Predecessors: [0x342]
Successors: [0x358]
---
0x34d DUP1
0x34e PUSH4 0x42545825
0x353 EQ
0x354 PUSH2 0x20e
0x357 JUMPI
---
0x34e: V185 = 0x42545825
0x353: V186 = EQ 0x42545825 V178
0x354: V187 = 0x20e
0x357: THROWI V186
---
Entry stack: [V170, S4, S3, S2, S1, V178]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V170, S4, S3, S2, S1, V178]

================================

Block 0x358
[0x358:0x362]
---
Predecessors: [0x34d]
Successors: [0x363]
---
0x358 DUP1
0x359 PUSH4 0x4fb2e45d
0x35e EQ
0x35f PUSH2 0x265
0x362 JUMPI
---
0x359: V188 = 0x4fb2e45d
0x35e: V189 = EQ 0x4fb2e45d V178
0x35f: V190 = 0x265
0x362: THROWI V189
---
Entry stack: [V170, S4, S3, S2, S1, V178]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V170, S4, S3, S2, S1, V178]

================================

Block 0x363
[0x363:0x36d]
---
Predecessors: [0x358]
Successors: [0x36e]
---
0x363 DUP1
0x364 PUSH4 0x54f9cbb3
0x369 EQ
0x36a PUSH2 0x29b
0x36d JUMPI
---
0x364: V191 = 0x54f9cbb3
0x369: V192 = EQ 0x54f9cbb3 V178
0x36a: V193 = 0x29b
0x36d: THROWI V192
---
Entry stack: [V170, S4, S3, S2, S1, V178]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V170, S4, S3, S2, S1, V178]

================================

Block 0x36e
[0x36e:0x378]
---
Predecessors: [0x363]
Successors: [0x379]
---
0x36e DUP1
0x36f PUSH4 0x633dfc70
0x374 EQ
0x375 PUSH2 0x2fe
0x378 JUMPI
---
0x36f: V194 = 0x633dfc70
0x374: V195 = EQ 0x633dfc70 V178
0x375: V196 = 0x2fe
0x378: THROWI V195
---
Entry stack: [V170, S4, S3, S2, S1, V178]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V170, S4, S3, S2, S1, V178]

================================

Block 0x379
[0x379:0x383]
---
Predecessors: [0x36e]
Successors: [0x384]
---
0x379 DUP1
0x37a PUSH4 0x842ff2bd
0x37f EQ
0x380 PUSH2 0x33f
0x383 JUMPI
---
0x37a: V197 = 0x842ff2bd
0x37f: V198 = EQ 0x842ff2bd V178
0x380: V199 = 0x33f
0x383: THROWI V198
---
Entry stack: [V170, S4, S3, S2, S1, V178]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V170, S4, S3, S2, S1, V178]

================================

Block 0x384
[0x384:0x38e]
---
Predecessors: [0x379]
Successors: [0x38f]
---
0x384 DUP1
0x385 PUSH4 0x8da5cb5b
0x38a EQ
0x38b PUSH2 0x365
0x38e JUMPI
---
0x385: V200 = 0x8da5cb5b
0x38a: V201 = EQ 0x8da5cb5b V178
0x38b: V202 = 0x365
0x38e: THROWI V201
---
Entry stack: [V170, S4, S3, S2, S1, V178]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V170, S4, S3, S2, S1, V178]

================================

Block 0x38f
[0x38f:0x399]
---
Predecessors: [0x384]
Successors: [0x39a]
---
0x38f DUP1
0x390 PUSH4 0xa4b195ff
0x395 EQ
0x396 PUSH2 0x3b7
0x399 JUMPI
---
0x390: V203 = 0xa4b195ff
0x395: V204 = EQ 0xa4b195ff V178
0x396: V205 = 0x3b7
0x399: THROWI V204
---
Entry stack: [V170, S4, S3, S2, S1, V178]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V170, S4, S3, S2, S1, V178]

================================

Block 0x39a
[0x39a:0x3a4]
---
Predecessors: [0x38f]
Successors: [0x3a5]
---
0x39a DUP1
0x39b PUSH4 0xafd7bf92
0x3a0 EQ
0x3a1 PUSH2 0x3eb
0x3a4 JUMPI
---
0x39b: V206 = 0xafd7bf92
0x3a0: V207 = EQ 0xafd7bf92 V178
0x3a1: V208 = 0x3eb
0x3a4: THROWI V207
---
Entry stack: [V170, S4, S3, S2, S1, V178]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V170, S4, S3, S2, S1, V178]

================================

Block 0x3a5
[0x3a5:0x3af]
---
Predecessors: [0x39a]
Successors: [0x3b0]
---
0x3a5 DUP1
0x3a6 PUSH4 0xbb0d6fb6
0x3ab EQ
0x3ac PUSH2 0x43d
0x3af JUMPI
---
0x3a6: V209 = 0xbb0d6fb6
0x3ab: V210 = EQ 0xbb0d6fb6 V178
0x3ac: V211 = 0x43d
0x3af: THROWI V210
---
Entry stack: [V170, S4, S3, S2, S1, V178]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V170, S4, S3, S2, S1, V178]

================================

Block 0x3b0
[0x3b0:0x3ba]
---
Predecessors: [0x3a5]
Successors: [0x3bb]
---
0x3b0 DUP1
0x3b1 PUSH4 0xc2052403
0x3b6 EQ
0x3b7 PUSH2 0x471
0x3ba JUMPI
---
0x3b1: V212 = 0xc2052403
0x3b6: V213 = EQ 0xc2052403 V178
0x3b7: V214 = 0x471
0x3ba: THROWI V213
---
Entry stack: [V170, S4, S3, S2, S1, V178]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V170, S4, S3, S2, S1, V178]

================================

Block 0x3bb
[0x3bb:0x3c5]
---
Predecessors: [0x3b0]
Successors: [0x3c6]
---
0x3bb DUP1
0x3bc PUSH4 0xd3604bc9
0x3c1 EQ
0x3c2 PUSH2 0x483
0x3c5 JUMPI
---
0x3bc: V215 = 0xd3604bc9
0x3c1: V216 = EQ 0xd3604bc9 V178
0x3c2: V217 = 0x483
0x3c5: THROWI V216
---
Entry stack: [V170, S4, S3, S2, S1, V178]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V170, S4, S3, S2, S1, V178]

================================

Block 0x3c6
[0x3c6:0x3d0]
---
Predecessors: [0x3bb]
Successors: [0x3d1]
---
0x3c6 DUP1
0x3c7 PUSH4 0xd3856f3b
0x3cc EQ
0x3cd PUSH2 0x4d5
0x3d0 JUMPI
---
0x3c7: V218 = 0xd3856f3b
0x3cc: V219 = EQ 0xd3856f3b V178
0x3cd: V220 = 0x4d5
0x3d0: THROWI V219
---
Entry stack: [V170, S4, S3, S2, S1, V178]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V170, S4, S3, S2, S1, V178]

================================

Block 0x3d1
[0x3d1:0x3db]
---
Predecessors: [0x3c6]
Successors: [0x3dc]
---
0x3d1 DUP1
0x3d2 PUSH4 0xdb530222
0x3d7 EQ
0x3d8 PUSH2 0x53e
0x3db JUMPI
---
0x3d2: V221 = 0xdb530222
0x3d7: V222 = EQ 0xdb530222 V178
0x3d8: V223 = 0x53e
0x3db: THROWI V222
---
Entry stack: [V170, S4, S3, S2, S1, V178]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V170, S4, S3, S2, S1, V178]

================================

Block 0x3dc
[0x3dc:0x3df]
---
Predecessors: [0x3d1]
Successors: [0x3e0]
---
0x3dc JUMPDEST
0x3dd PUSH2 0x131
---
0x3dc: JUMPDEST 
0x3dd: V224 = 0x131
---
Entry stack: [V170, S4, S3, S2, S1, V178]
Stack pops: 0
Stack additions: [0x131]
Exit stack: [V170, S4, S3, S2, S1, V178, 0x131]

================================

Block 0x3e0
[0x3e0:0x3ee]
---
Predecessors: [0x3dc]
Successors: [0x3ef]
---
0x3e0 JUMPDEST
0x3e1 PUSH2 0x258
0x3e4 TIMESTAMP
0x3e5 ADD
0x3e6 PUSH1 0x2
0x3e8 SLOAD
0x3e9 LT
0x3ea ISZERO
0x3eb PUSH2 0x12e
0x3ee JUMPI
---
0x3e0: JUMPDEST 
0x3e1: V225 = 0x258
0x3e4: V226 = TIMESTAMP
0x3e5: V227 = ADD V226 0x258
0x3e6: V228 = 0x2
0x3e8: V229 = S[0x2]
0x3e9: V230 = LT V229 V227
0x3ea: V231 = ISZERO V230
0x3eb: V232 = 0x12e
0x3ee: THROWI V231
---
Entry stack: [V170, S5, S4, S3, S2, V178, 0x131]
Stack pops: 0
Stack additions: []
Exit stack: [V170, S5, S4, S3, S2, V178, 0x131]

================================

Block 0x3ef
[0x3ef:0x430]
---
Predecessors: [0x3e0]
Successors: [0x431]
---
0x3ef PUSH2 0x12d
0x3f2 PUSH2 0x258
0x3f5 PUSH1 0x40
0x3f7 PUSH1 0x40
0x3f9 MLOAD
0x3fa SWAP1
0x3fb DUP2
0x3fc ADD
0x3fd PUSH1 0x40
0x3ff MSTORE
0x400 DUP1
0x401 PUSH1 0x1a
0x403 DUP2
0x404 MSTORE
0x405 PUSH1 0x20
0x407 ADD
0x408 PUSH32 0x566f7465206f6e20746178207265696d62757273656d656e7473000000000000
0x429 DUP2
0x42a MSTORE
0x42b POP
0x42c PUSH2 0x564
0x42f JUMP
0x430 JUMPDEST
---
0x3ef: V233 = 0x12d
0x3f2: V234 = 0x258
0x3f5: V235 = 0x40
0x3f7: V236 = 0x40
0x3f9: V237 = M[0x40]
0x3fc: V238 = ADD V237 0x40
0x3fd: V239 = 0x40
0x3ff: M[0x40] = V238
0x401: V240 = 0x1a
0x404: M[V237] = 0x1a
0x405: V241 = 0x20
0x407: V242 = ADD 0x20 V237
0x408: V243 = 0x566f7465206f6e20746178207265696d62757273656d656e7473000000000000
0x42a: M[V242] = 0x566f7465206f6e20746178207265696d62757273656d656e7473000000000000
0x42c: V244 = 0x564
0x42f: THROW 
0x430: JUMPDEST 
---
Entry stack: [V170, S5, S4, S3, S2, V178, 0x131]
Stack pops: 0
Stack additions: [0x12d, 0x258, V237]
Exit stack: []

================================

Block 0x431
[0x431:0x431]
---
Predecessors: [0x3ef]
Successors: [0x432]
---
0x431 JUMPDEST
---
0x431: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x432
[0x432:0x43c]
---
Predecessors: [0x431]
Successors: [0x43d]
---
0x432 JUMPDEST
0x433 JUMP
0x434 JUMPDEST
0x435 STOP
0x436 JUMPDEST
0x437 CALLVALUE
0x438 ISZERO
0x439 PUSH2 0x13b
0x43c JUMPI
---
0x432: JUMPDEST 
0x433: JUMP S0
0x434: JUMPDEST 
0x435: STOP 
0x436: JUMPDEST 
0x437: V245 = CALLVALUE
0x438: V246 = ISZERO V245
0x439: V247 = 0x13b
0x43c: THROWI V246
---
Entry stack: []
Stack pops: 4
Stack additions: []
Exit stack: []

================================

Block 0x43d
[0x43d:0x47e]
---
Predecessors: [0x432]
Successors: [0x47f]
---
0x43d INVALID
0x43e JUMPDEST
0x43f PUSH2 0x151
0x442 PUSH1 0x4
0x444 DUP1
0x445 DUP1
0x446 CALLDATALOAD
0x447 SWAP1
0x448 PUSH1 0x20
0x44a ADD
0x44b SWAP1
0x44c SWAP2
0x44d SWAP1
0x44e POP
0x44f POP
0x450 PUSH2 0x6a9
0x453 JUMP
0x454 JUMPDEST
0x455 PUSH1 0x40
0x457 MLOAD
0x458 DUP1
0x459 DUP1
0x45a PUSH1 0x20
0x45c ADD
0x45d DUP3
0x45e DUP2
0x45f SUB
0x460 DUP3
0x461 MSTORE
0x462 DUP4
0x463 DUP2
0x464 DUP2
0x465 MLOAD
0x466 DUP2
0x467 MSTORE
0x468 PUSH1 0x20
0x46a ADD
0x46b SWAP2
0x46c POP
0x46d DUP1
0x46e MLOAD
0x46f SWAP1
0x470 PUSH1 0x20
0x472 ADD
0x473 SWAP1
0x474 DUP1
0x475 DUP4
0x476 DUP4
0x477 PUSH1 0x0
0x479 DUP4
0x47a EQ
0x47b PUSH2 0x1a0
0x47e JUMPI
---
0x43d: INVALID 
0x43e: JUMPDEST 
0x43f: V248 = 0x151
0x442: V249 = 0x4
0x446: V250 = CALLDATALOAD 0x4
0x448: V251 = 0x20
0x44a: V252 = ADD 0x20 0x4
0x450: V253 = 0x6a9
0x453: THROW 
0x454: JUMPDEST 
0x455: V254 = 0x40
0x457: V255 = M[0x40]
0x45a: V256 = 0x20
0x45c: V257 = ADD 0x20 V255
0x45f: V258 = SUB V257 V255
0x461: M[V255] = V258
0x465: V259 = M[S0]
0x467: M[V257] = V259
0x468: V260 = 0x20
0x46a: V261 = ADD 0x20 V257
0x46e: V262 = M[S0]
0x470: V263 = 0x20
0x472: V264 = ADD 0x20 S0
0x477: V265 = 0x0
0x47a: V266 = EQ V262 0x0
0x47b: V267 = 0x1a0
0x47e: THROWI V266
---
Entry stack: []
Stack pops: 0
Stack additions: [V250, 0x151, V264, V261, V262, V262, V264, V261, V255, V255, S0]
Exit stack: []

================================

Block 0x47f
[0x47f:0x48c]
---
Predecessors: [0x43d]
Successors: [0x48d]
---
0x47f JUMPDEST
0x480 DUP1
0x481 MLOAD
0x482 DUP3
0x483 MSTORE
0x484 PUSH1 0x20
0x486 DUP4
0x487 GT
0x488 ISZERO
0x489 PUSH2 0x1a0
0x48c JUMPI
---
0x47f: JUMPDEST 
0x481: V268 = M[V264]
0x483: M[V261] = V268
0x484: V269 = 0x20
0x487: V270 = GT V262 0x20
0x488: V271 = ISZERO V270
0x489: V272 = 0x1a0
0x48c: THROWI V271
---
Entry stack: [S8, V255, V255, V261, V264, V262, V262, V261, V264]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S8, V255, V255, V261, V264, V262, V262, V261, V264]

================================

Block 0x48d
[0x48d:0x4b5]
---
Predecessors: [0x47f]
Successors: [0x4b6]
---
0x48d PUSH1 0x20
0x48f DUP3
0x490 ADD
0x491 SWAP2
0x492 POP
0x493 PUSH1 0x20
0x495 DUP2
0x496 ADD
0x497 SWAP1
0x498 POP
0x499 PUSH1 0x20
0x49b DUP4
0x49c SUB
0x49d SWAP3
0x49e POP
0x49f PUSH2 0x17c
0x4a2 JUMP
0x4a3 JUMPDEST
0x4a4 POP
0x4a5 POP
0x4a6 POP
0x4a7 SWAP1
0x4a8 POP
0x4a9 SWAP1
0x4aa DUP2
0x4ab ADD
0x4ac SWAP1
0x4ad PUSH1 0x1f
0x4af AND
0x4b0 DUP1
0x4b1 ISZERO
0x4b2 PUSH2 0x1cc
0x4b5 JUMPI
---
0x48d: V273 = 0x20
0x490: V274 = ADD V261 0x20
0x493: V275 = 0x20
0x496: V276 = ADD V264 0x20
0x499: V277 = 0x20
0x49c: V278 = SUB V262 0x20
0x49f: V279 = 0x17c
0x4a2: THROW 
0x4a3: JUMPDEST 
0x4ab: V280 = ADD S3 S5
0x4ad: V281 = 0x1f
0x4af: V282 = AND 0x1f S3
0x4b1: V283 = ISZERO V282
0x4b2: V284 = 0x1cc
0x4b5: THROWI V283
---
Entry stack: [S8, V255, V255, V261, V264, V262, V262, V261, V264]
Stack pops: 3
Stack additions: [V282, V280]
Exit stack: []

================================

Block 0x4b6
[0x4b6:0x4ce]
---
Predecessors: [0x48d]
Successors: [0x4cf]
---
0x4b6 DUP1
0x4b7 DUP3
0x4b8 SUB
0x4b9 DUP1
0x4ba MLOAD
0x4bb PUSH1 0x1
0x4bd DUP4
0x4be PUSH1 0x20
0x4c0 SUB
0x4c1 PUSH2 0x100
0x4c4 EXP
0x4c5 SUB
0x4c6 NOT
0x4c7 AND
0x4c8 DUP2
0x4c9 MSTORE
0x4ca PUSH1 0x20
0x4cc ADD
0x4cd SWAP2
0x4ce POP
---
0x4b8: V285 = SUB V280 V282
0x4ba: V286 = M[V285]
0x4bb: V287 = 0x1
0x4be: V288 = 0x20
0x4c0: V289 = SUB 0x20 V282
0x4c1: V290 = 0x100
0x4c4: V291 = EXP 0x100 V289
0x4c5: V292 = SUB V291 0x1
0x4c6: V293 = NOT V292
0x4c7: V294 = AND V293 V286
0x4c9: M[V285] = V294
0x4ca: V295 = 0x20
0x4cc: V296 = ADD 0x20 V285
---
Entry stack: [V280, V282]
Stack pops: 2
Stack additions: [V296, S0]
Exit stack: [V296, V282]

================================

Block 0x4cf
[0x4cf:0x4dc]
---
Predecessors: [0x4b6]
Successors: []
---
0x4cf JUMPDEST
0x4d0 POP
0x4d1 SWAP3
0x4d2 POP
0x4d3 POP
0x4d4 POP
0x4d5 PUSH1 0x40
0x4d7 MLOAD
0x4d8 DUP1
0x4d9 SWAP2
0x4da SUB
0x4db SWAP1
0x4dc RETURN
---
0x4cf: JUMPDEST 
0x4d5: V297 = 0x40
0x4d7: V298 = M[0x40]
0x4da: V299 = SUB V296 V298
0x4dc: RETURN V298 V299
---
Entry stack: [V296, V282]
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0x4dd
[0x4dd:0x4e3]
---
Predecessors: [0x78d]
Successors: [0x4e4]
---
0x4dd JUMPDEST
0x4de CALLVALUE
0x4df ISZERO
0x4e0 PUSH2 0x1e2
0x4e3 JUMPI
---
0x4dd: JUMPDEST 
0x4de: V300 = CALLVALUE
0x4df: V301 = ISZERO V300
0x4e0: V302 = 0x1e2
0x4e3: THROWI V301
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x4e4
[0x4e4:0x517]
---
Predecessors: [0x4dd]
Successors: [0x518]
---
0x4e4 INVALID
0x4e5 JUMPDEST
0x4e6 PUSH2 0x1f8
0x4e9 PUSH1 0x4
0x4eb DUP1
0x4ec DUP1
0x4ed CALLDATALOAD
0x4ee SWAP1
0x4ef PUSH1 0x20
0x4f1 ADD
0x4f2 SWAP1
0x4f3 SWAP2
0x4f4 SWAP1
0x4f5 POP
0x4f6 POP
0x4f7 PUSH2 0x759
0x4fa JUMP
0x4fb JUMPDEST
0x4fc PUSH1 0x40
0x4fe MLOAD
0x4ff DUP1
0x500 DUP3
0x501 DUP2
0x502 MSTORE
0x503 PUSH1 0x20
0x505 ADD
0x506 SWAP2
0x507 POP
0x508 POP
0x509 PUSH1 0x40
0x50b MLOAD
0x50c DUP1
0x50d SWAP2
0x50e SUB
0x50f SWAP1
0x510 RETURN
0x511 JUMPDEST
0x512 CALLVALUE
0x513 ISZERO
0x514 PUSH2 0x216
0x517 JUMPI
---
0x4e4: INVALID 
0x4e5: JUMPDEST 
0x4e6: V303 = 0x1f8
0x4e9: V304 = 0x4
0x4ed: V305 = CALLDATALOAD 0x4
0x4ef: V306 = 0x20
0x4f1: V307 = ADD 0x20 0x4
0x4f7: V308 = 0x759
0x4fa: THROW 
0x4fb: JUMPDEST 
0x4fc: V309 = 0x40
0x4fe: V310 = M[0x40]
0x502: M[V310] = S0
0x503: V311 = 0x20
0x505: V312 = ADD 0x20 V310
0x509: V313 = 0x40
0x50b: V314 = M[0x40]
0x50e: V315 = SUB V312 V314
0x510: RETURN V314 V315
0x511: JUMPDEST 
0x512: V316 = CALLVALUE
0x513: V317 = ISZERO V316
0x514: V318 = 0x216
0x517: THROWI V317
---
Entry stack: []
Stack pops: 0
Stack additions: [V305, 0x1f8]
Exit stack: []

================================

Block 0x518
[0x518:0x56e]
---
Predecessors: [0x4e4]
Successors: [0x56f]
---
0x518 INVALID
0x519 JUMPDEST
0x51a PUSH2 0x24b
0x51d PUSH1 0x4
0x51f DUP1
0x520 DUP1
0x521 CALLDATALOAD
0x522 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x537 AND
0x538 SWAP1
0x539 PUSH1 0x20
0x53b ADD
0x53c SWAP1
0x53d SWAP2
0x53e SWAP1
0x53f DUP1
0x540 CALLDATALOAD
0x541 SWAP1
0x542 PUSH1 0x20
0x544 ADD
0x545 SWAP1
0x546 SWAP2
0x547 SWAP1
0x548 POP
0x549 POP
0x54a PUSH2 0x771
0x54d JUMP
0x54e JUMPDEST
0x54f PUSH1 0x40
0x551 MLOAD
0x552 DUP1
0x553 DUP3
0x554 ISZERO
0x555 ISZERO
0x556 ISZERO
0x557 ISZERO
0x558 DUP2
0x559 MSTORE
0x55a PUSH1 0x20
0x55c ADD
0x55d SWAP2
0x55e POP
0x55f POP
0x560 PUSH1 0x40
0x562 MLOAD
0x563 DUP1
0x564 SWAP2
0x565 SUB
0x566 SWAP1
0x567 RETURN
0x568 JUMPDEST
0x569 CALLVALUE
0x56a ISZERO
0x56b PUSH2 0x26d
0x56e JUMPI
---
0x518: INVALID 
0x519: JUMPDEST 
0x51a: V319 = 0x24b
0x51d: V320 = 0x4
0x521: V321 = CALLDATALOAD 0x4
0x522: V322 = 0xffffffffffffffffffffffffffffffffffffffff
0x537: V323 = AND 0xffffffffffffffffffffffffffffffffffffffff V321
0x539: V324 = 0x20
0x53b: V325 = ADD 0x20 0x4
0x540: V326 = CALLDATALOAD 0x24
0x542: V327 = 0x20
0x544: V328 = ADD 0x20 0x24
0x54a: V329 = 0x771
0x54d: THROW 
0x54e: JUMPDEST 
0x54f: V330 = 0x40
0x551: V331 = M[0x40]
0x554: V332 = ISZERO S0
0x555: V333 = ISZERO V332
0x556: V334 = ISZERO V333
0x557: V335 = ISZERO V334
0x559: M[V331] = V335
0x55a: V336 = 0x20
0x55c: V337 = ADD 0x20 V331
0x560: V338 = 0x40
0x562: V339 = M[0x40]
0x565: V340 = SUB V337 V339
0x567: RETURN V339 V340
0x568: JUMPDEST 
0x569: V341 = CALLVALUE
0x56a: V342 = ISZERO V341
0x56b: V343 = 0x26d
0x56e: THROWI V342
---
Entry stack: []
Stack pops: 0
Stack additions: [V326, V323, 0x24b]
Exit stack: []

================================

Block 0x56f
[0x56f:0x5a4]
---
Predecessors: [0x518]
Successors: [0x5a5]
---
0x56f INVALID
0x570 JUMPDEST
0x571 PUSH2 0x299
0x574 PUSH1 0x4
0x576 DUP1
0x577 DUP1
0x578 CALLDATALOAD
0x579 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x58e AND
0x58f SWAP1
0x590 PUSH1 0x20
0x592 ADD
0x593 SWAP1
0x594 SWAP2
0x595 SWAP1
0x596 POP
0x597 POP
0x598 PUSH2 0x7a0
0x59b JUMP
0x59c JUMPDEST
0x59d STOP
0x59e JUMPDEST
0x59f CALLVALUE
0x5a0 ISZERO
0x5a1 PUSH2 0x2a3
0x5a4 JUMPI
---
0x56f: INVALID 
0x570: JUMPDEST 
0x571: V344 = 0x299
0x574: V345 = 0x4
0x578: V346 = CALLDATALOAD 0x4
0x579: V347 = 0xffffffffffffffffffffffffffffffffffffffff
0x58e: V348 = AND 0xffffffffffffffffffffffffffffffffffffffff V346
0x590: V349 = 0x20
0x592: V350 = ADD 0x20 0x4
0x598: V351 = 0x7a0
0x59b: THROW 
0x59c: JUMPDEST 
0x59d: STOP 
0x59e: JUMPDEST 
0x59f: V352 = CALLVALUE
0x5a0: V353 = ISZERO V352
0x5a1: V354 = 0x2a3
0x5a4: THROWI V353
---
Entry stack: []
Stack pops: 0
Stack additions: [V348, 0x299]
Exit stack: []

================================

Block 0x5a5
[0x5a5:0x607]
---
Predecessors: [0x56f]
Successors: [0x608]
---
0x5a5 INVALID
0x5a6 JUMPDEST
0x5a7 PUSH2 0x2fc
0x5aa PUSH1 0x4
0x5ac DUP1
0x5ad DUP1
0x5ae CALLDATALOAD
0x5af SWAP1
0x5b0 PUSH1 0x20
0x5b2 ADD
0x5b3 SWAP1
0x5b4 SWAP2
0x5b5 SWAP1
0x5b6 DUP1
0x5b7 CALLDATALOAD
0x5b8 SWAP1
0x5b9 PUSH1 0x20
0x5bb ADD
0x5bc SWAP1
0x5bd DUP3
0x5be ADD
0x5bf DUP1
0x5c0 CALLDATALOAD
0x5c1 SWAP1
0x5c2 PUSH1 0x20
0x5c4 ADD
0x5c5 SWAP1
0x5c6 DUP1
0x5c7 DUP1
0x5c8 PUSH1 0x1f
0x5ca ADD
0x5cb PUSH1 0x20
0x5cd DUP1
0x5ce SWAP2
0x5cf DIV
0x5d0 MUL
0x5d1 PUSH1 0x20
0x5d3 ADD
0x5d4 PUSH1 0x40
0x5d6 MLOAD
0x5d7 SWAP1
0x5d8 DUP2
0x5d9 ADD
0x5da PUSH1 0x40
0x5dc MSTORE
0x5dd DUP1
0x5de SWAP4
0x5df SWAP3
0x5e0 SWAP2
0x5e1 SWAP1
0x5e2 DUP2
0x5e3 DUP2
0x5e4 MSTORE
0x5e5 PUSH1 0x20
0x5e7 ADD
0x5e8 DUP4
0x5e9 DUP4
0x5ea DUP1
0x5eb DUP3
0x5ec DUP5
0x5ed CALLDATACOPY
0x5ee DUP3
0x5ef ADD
0x5f0 SWAP2
0x5f1 POP
0x5f2 POP
0x5f3 POP
0x5f4 POP
0x5f5 POP
0x5f6 POP
0x5f7 SWAP2
0x5f8 SWAP1
0x5f9 POP
0x5fa POP
0x5fb PUSH2 0x8a6
0x5fe JUMP
0x5ff JUMPDEST
0x600 STOP
0x601 JUMPDEST
0x602 CALLVALUE
0x603 ISZERO
0x604 PUSH2 0x306
0x607 JUMPI
---
0x5a5: INVALID 
0x5a6: JUMPDEST 
0x5a7: V355 = 0x2fc
0x5aa: V356 = 0x4
0x5ae: V357 = CALLDATALOAD 0x4
0x5b0: V358 = 0x20
0x5b2: V359 = ADD 0x20 0x4
0x5b7: V360 = CALLDATALOAD 0x24
0x5b9: V361 = 0x20
0x5bb: V362 = ADD 0x20 0x24
0x5be: V363 = ADD 0x4 V360
0x5c0: V364 = CALLDATALOAD V363
0x5c2: V365 = 0x20
0x5c4: V366 = ADD 0x20 V363
0x5c8: V367 = 0x1f
0x5ca: V368 = ADD 0x1f V364
0x5cb: V369 = 0x20
0x5cf: V370 = DIV V368 0x20
0x5d0: V371 = MUL V370 0x20
0x5d1: V372 = 0x20
0x5d3: V373 = ADD 0x20 V371
0x5d4: V374 = 0x40
0x5d6: V375 = M[0x40]
0x5d9: V376 = ADD V375 V373
0x5da: V377 = 0x40
0x5dc: M[0x40] = V376
0x5e4: M[V375] = V364
0x5e5: V378 = 0x20
0x5e7: V379 = ADD 0x20 V375
0x5ed: CALLDATACOPY V379 V366 V364
0x5ef: V380 = ADD V379 V364
0x5fb: V381 = 0x8a6
0x5fe: THROW 
0x5ff: JUMPDEST 
0x600: STOP 
0x601: JUMPDEST 
0x602: V382 = CALLVALUE
0x603: V383 = ISZERO V382
0x604: V384 = 0x306
0x607: THROWI V383
---
Entry stack: []
Stack pops: 0
Stack additions: [V375, V357, 0x2fc]
Exit stack: []

================================

Block 0x608
[0x608:0x648]
---
Predecessors: [0x5a5]
Successors: [0x649]
---
0x608 INVALID
0x609 JUMPDEST
0x60a PUSH2 0x33d
0x60d PUSH1 0x4
0x60f DUP1
0x610 DUP1
0x611 CALLDATALOAD
0x612 ISZERO
0x613 ISZERO
0x614 SWAP1
0x615 PUSH1 0x20
0x617 ADD
0x618 SWAP1
0x619 SWAP2
0x61a SWAP1
0x61b DUP1
0x61c CALLDATALOAD
0x61d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x632 AND
0x633 SWAP1
0x634 PUSH1 0x20
0x636 ADD
0x637 SWAP1
0x638 SWAP2
0x639 SWAP1
0x63a POP
0x63b POP
0x63c PUSH2 0x913
0x63f JUMP
0x640 JUMPDEST
0x641 STOP
0x642 JUMPDEST
0x643 CALLVALUE
0x644 ISZERO
0x645 PUSH2 0x347
0x648 JUMPI
---
0x608: INVALID 
0x609: JUMPDEST 
0x60a: V385 = 0x33d
0x60d: V386 = 0x4
0x611: V387 = CALLDATALOAD 0x4
0x612: V388 = ISZERO V387
0x613: V389 = ISZERO V388
0x615: V390 = 0x20
0x617: V391 = ADD 0x20 0x4
0x61c: V392 = CALLDATALOAD 0x24
0x61d: V393 = 0xffffffffffffffffffffffffffffffffffffffff
0x632: V394 = AND 0xffffffffffffffffffffffffffffffffffffffff V392
0x634: V395 = 0x20
0x636: V396 = ADD 0x20 0x24
0x63c: V397 = 0x913
0x63f: THROW 
0x640: JUMPDEST 
0x641: STOP 
0x642: JUMPDEST 
0x643: V398 = CALLVALUE
0x644: V399 = ISZERO V398
0x645: V400 = 0x347
0x648: THROWI V399
---
Entry stack: []
Stack pops: 0
Stack additions: [V394, V389, 0x33d]
Exit stack: []

================================

Block 0x649
[0x649:0x667]
---
Predecessors: [0x608]
Successors: []
---
0x649 INVALID
0x64a JUMPDEST
0x64b PUSH2 0x34f
0x64e PUSH2 0xc02
0x651 JUMP
0x652 JUMPDEST
0x653 PUSH1 0x40
0x655 MLOAD
0x656 DUP1
0x657 DUP3
0x658 DUP2
0x659 MSTORE
0x65a PUSH1 0x20
0x65c ADD
0x65d SWAP2
0x65e POP
0x65f POP
0x660 PUSH1 0x40
0x662 MLOAD
0x663 DUP1
0x664 SWAP2
0x665 SUB
0x666 SWAP1
0x667 RETURN
---
0x649: INVALID 
0x64a: JUMPDEST 
0x64b: V401 = 0x34f
0x64e: V402 = 0xc02
0x651: THROW 
0x652: JUMPDEST 
0x653: V403 = 0x40
0x655: V404 = M[0x40]
0x659: M[V404] = S0
0x65a: V405 = 0x20
0x65c: V406 = ADD 0x20 V404
0x660: V407 = 0x40
0x662: V408 = M[0x40]
0x665: V409 = SUB V406 V408
0x667: RETURN V408 V409
---
Entry stack: []
Stack pops: 0
Stack additions: [0x34f]
Exit stack: []

================================

Block 0x668
[0x668:0x66e]
---
Predecessors: [0x873, 0x947]
Successors: [0x66f]
---
0x668 JUMPDEST
0x669 CALLVALUE
0x66a ISZERO
0x66b PUSH2 0x36d
0x66e JUMPI
---
0x668: JUMPDEST 
0x669: V410 = CALLVALUE
0x66a: V411 = ISZERO V410
0x66b: V412 = 0x36d
0x66e: THROWI V411
---
Entry stack: [S14, S13, 0x5e5f2e37a107027aca176a003538367c64873f56354747b862af157cdd5643bd, V558, S10, S9, V563, V565, V573, V581, V584, V582, V582, V581, V584]
Stack pops: 0
Stack additions: []
Exit stack: [S14, S13, 0x5e5f2e37a107027aca176a003538367c64873f56354747b862af157cdd5643bd, V558, S10, S9, V563, V565, V573, V581, V584, V582, V582, V581, V584]

================================

Block 0x66f
[0x66f:0x6c0]
---
Predecessors: [0x668]
Successors: [0x6c1]
---
0x66f INVALID
0x670 JUMPDEST
0x671 PUSH2 0x375
0x674 PUSH2 0xc08
0x677 JUMP
0x678 JUMPDEST
0x679 PUSH1 0x40
0x67b MLOAD
0x67c DUP1
0x67d DUP3
0x67e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x693 AND
0x694 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a9 AND
0x6aa DUP2
0x6ab MSTORE
0x6ac PUSH1 0x20
0x6ae ADD
0x6af SWAP2
0x6b0 POP
0x6b1 POP
0x6b2 PUSH1 0x40
0x6b4 MLOAD
0x6b5 DUP1
0x6b6 SWAP2
0x6b7 SUB
0x6b8 SWAP1
0x6b9 RETURN
0x6ba JUMPDEST
0x6bb CALLVALUE
0x6bc ISZERO
0x6bd PUSH2 0x3bf
0x6c0 JUMPI
---
0x66f: INVALID 
0x670: JUMPDEST 
0x671: V413 = 0x375
0x674: V414 = 0xc08
0x677: THROW 
0x678: JUMPDEST 
0x679: V415 = 0x40
0x67b: V416 = M[0x40]
0x67e: V417 = 0xffffffffffffffffffffffffffffffffffffffff
0x693: V418 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x694: V419 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a9: V420 = AND 0xffffffffffffffffffffffffffffffffffffffff V418
0x6ab: M[V416] = V420
0x6ac: V421 = 0x20
0x6ae: V422 = ADD 0x20 V416
0x6b2: V423 = 0x40
0x6b4: V424 = M[0x40]
0x6b7: V425 = SUB V422 V424
0x6b9: RETURN V424 V425
0x6ba: JUMPDEST 
0x6bb: V426 = CALLVALUE
0x6bc: V427 = ISZERO V426
0x6bd: V428 = 0x3bf
0x6c0: THROWI V427
---
Entry stack: [S14, S13, 0x5e5f2e37a107027aca176a003538367c64873f56354747b862af157cdd5643bd, V558, S10, S9, V563, V565, V573, V581, V584, V582, V582, V581, V584]
Stack pops: 0
Stack additions: [0x375]
Exit stack: []

================================

Block 0x6c1
[0x6c1:0x6f4]
---
Predecessors: [0x66f]
Successors: [0x6f5]
---
0x6c1 INVALID
0x6c2 JUMPDEST
0x6c3 PUSH2 0x3d5
0x6c6 PUSH1 0x4
0x6c8 DUP1
0x6c9 DUP1
0x6ca CALLDATALOAD
0x6cb SWAP1
0x6cc PUSH1 0x20
0x6ce ADD
0x6cf SWAP1
0x6d0 SWAP2
0x6d1 SWAP1
0x6d2 POP
0x6d3 POP
0x6d4 PUSH2 0xc2e
0x6d7 JUMP
0x6d8 JUMPDEST
0x6d9 PUSH1 0x40
0x6db MLOAD
0x6dc DUP1
0x6dd DUP3
0x6de DUP2
0x6df MSTORE
0x6e0 PUSH1 0x20
0x6e2 ADD
0x6e3 SWAP2
0x6e4 POP
0x6e5 POP
0x6e6 PUSH1 0x40
0x6e8 MLOAD
0x6e9 DUP1
0x6ea SWAP2
0x6eb SUB
0x6ec SWAP1
0x6ed RETURN
0x6ee JUMPDEST
0x6ef CALLVALUE
0x6f0 ISZERO
0x6f1 PUSH2 0x3f3
0x6f4 JUMPI
---
0x6c1: INVALID 
0x6c2: JUMPDEST 
0x6c3: V429 = 0x3d5
0x6c6: V430 = 0x4
0x6ca: V431 = CALLDATALOAD 0x4
0x6cc: V432 = 0x20
0x6ce: V433 = ADD 0x20 0x4
0x6d4: V434 = 0xc2e
0x6d7: THROW 
0x6d8: JUMPDEST 
0x6d9: V435 = 0x40
0x6db: V436 = M[0x40]
0x6df: M[V436] = S0
0x6e0: V437 = 0x20
0x6e2: V438 = ADD 0x20 V436
0x6e6: V439 = 0x40
0x6e8: V440 = M[0x40]
0x6eb: V441 = SUB V438 V440
0x6ed: RETURN V440 V441
0x6ee: JUMPDEST 
0x6ef: V442 = CALLVALUE
0x6f0: V443 = ISZERO V442
0x6f1: V444 = 0x3f3
0x6f4: THROWI V443
---
Entry stack: []
Stack pops: 0
Stack additions: [V431, 0x3d5]
Exit stack: []

================================

Block 0x6f5
[0x6f5:0x746]
---
Predecessors: [0x6c1]
Successors: [0x747]
---
0x6f5 INVALID
0x6f6 JUMPDEST
0x6f7 PUSH2 0x3fb
0x6fa PUSH2 0xc46
0x6fd JUMP
0x6fe JUMPDEST
0x6ff PUSH1 0x40
0x701 MLOAD
0x702 DUP1
0x703 DUP3
0x704 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x719 AND
0x71a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x72f AND
0x730 DUP2
0x731 MSTORE
0x732 PUSH1 0x20
0x734 ADD
0x735 SWAP2
0x736 POP
0x737 POP
0x738 PUSH1 0x40
0x73a MLOAD
0x73b DUP1
0x73c SWAP2
0x73d SUB
0x73e SWAP1
0x73f RETURN
0x740 JUMPDEST
0x741 CALLVALUE
0x742 ISZERO
0x743 PUSH2 0x445
0x746 JUMPI
---
0x6f5: INVALID 
0x6f6: JUMPDEST 
0x6f7: V445 = 0x3fb
0x6fa: V446 = 0xc46
0x6fd: THROW 
0x6fe: JUMPDEST 
0x6ff: V447 = 0x40
0x701: V448 = M[0x40]
0x704: V449 = 0xffffffffffffffffffffffffffffffffffffffff
0x719: V450 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x71a: V451 = 0xffffffffffffffffffffffffffffffffffffffff
0x72f: V452 = AND 0xffffffffffffffffffffffffffffffffffffffff V450
0x731: M[V448] = V452
0x732: V453 = 0x20
0x734: V454 = ADD 0x20 V448
0x738: V455 = 0x40
0x73a: V456 = M[0x40]
0x73d: V457 = SUB V454 V456
0x73f: RETURN V456 V457
0x740: JUMPDEST 
0x741: V458 = CALLVALUE
0x742: V459 = ISZERO V458
0x743: V460 = 0x445
0x746: THROWI V459
---
Entry stack: []
Stack pops: 0
Stack additions: [0x3fb]
Exit stack: []

================================

Block 0x747
[0x747:0x77a]
---
Predecessors: [0x6f5]
Successors: [0x77b]
---
0x747 INVALID
0x748 JUMPDEST
0x749 PUSH2 0x45b
0x74c PUSH1 0x4
0x74e DUP1
0x74f DUP1
0x750 CALLDATALOAD
0x751 SWAP1
0x752 PUSH1 0x20
0x754 ADD
0x755 SWAP1
0x756 SWAP2
0x757 SWAP1
0x758 POP
0x759 POP
0x75a PUSH2 0xc6c
0x75d JUMP
0x75e JUMPDEST
0x75f PUSH1 0x40
0x761 MLOAD
0x762 DUP1
0x763 DUP3
0x764 DUP2
0x765 MSTORE
0x766 PUSH1 0x20
0x768 ADD
0x769 SWAP2
0x76a POP
0x76b POP
0x76c PUSH1 0x40
0x76e MLOAD
0x76f DUP1
0x770 SWAP2
0x771 SUB
0x772 SWAP1
0x773 RETURN
0x774 JUMPDEST
0x775 CALLVALUE
0x776 ISZERO
0x777 PUSH2 0x479
0x77a JUMPI
---
0x747: INVALID 
0x748: JUMPDEST 
0x749: V461 = 0x45b
0x74c: V462 = 0x4
0x750: V463 = CALLDATALOAD 0x4
0x752: V464 = 0x20
0x754: V465 = ADD 0x20 0x4
0x75a: V466 = 0xc6c
0x75d: THROW 
0x75e: JUMPDEST 
0x75f: V467 = 0x40
0x761: V468 = M[0x40]
0x765: M[V468] = S0
0x766: V469 = 0x20
0x768: V470 = ADD 0x20 V468
0x76c: V471 = 0x40
0x76e: V472 = M[0x40]
0x771: V473 = SUB V470 V472
0x773: RETURN V472 V473
0x774: JUMPDEST 
0x775: V474 = CALLVALUE
0x776: V475 = ISZERO V474
0x777: V476 = 0x479
0x77a: THROWI V475
---
Entry stack: []
Stack pops: 0
Stack additions: [V463, 0x45b]
Exit stack: []

================================

Block 0x77b
[0x77b:0x78c]
---
Predecessors: [0x747]
Successors: [0x78d]
---
0x77b INVALID
0x77c JUMPDEST
0x77d PUSH2 0x481
0x780 PUSH2 0xc84
0x783 JUMP
0x784 JUMPDEST
0x785 STOP
0x786 JUMPDEST
0x787 CALLVALUE
0x788 ISZERO
0x789 PUSH2 0x48b
0x78c JUMPI
---
0x77b: INVALID 
0x77c: JUMPDEST 
0x77d: V477 = 0x481
0x780: V478 = 0xc84
0x783: THROW 
0x784: JUMPDEST 
0x785: STOP 
0x786: JUMPDEST 
0x787: V479 = CALLVALUE
0x788: V480 = ISZERO V479
0x789: V481 = 0x48b
0x78c: THROWI V480
---
Entry stack: []
Stack pops: 0
Stack additions: [0x481]
Exit stack: []

================================

Block 0x78d
[0x78d:0x7de]
---
Predecessors: [0x77b]
Successors: [0x4dd, 0x7df]
---
0x78d INVALID
0x78e JUMPDEST
0x78f PUSH2 0x493
0x792 PUSH2 0xd57
0x795 JUMP
0x796 JUMPDEST
0x797 PUSH1 0x40
0x799 MLOAD
0x79a DUP1
0x79b DUP3
0x79c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7b1 AND
0x7b2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7c7 AND
0x7c8 DUP2
0x7c9 MSTORE
0x7ca PUSH1 0x20
0x7cc ADD
0x7cd SWAP2
0x7ce POP
0x7cf POP
0x7d0 PUSH1 0x40
0x7d2 MLOAD
0x7d3 DUP1
0x7d4 SWAP2
0x7d5 SUB
0x7d6 SWAP1
0x7d7 RETURN
0x7d8 JUMPDEST
0x7d9 CALLVALUE
0x7da ISZERO
0x7db PUSH2 0x4dd
0x7de JUMPI
---
0x78d: INVALID 
0x78e: JUMPDEST 
0x78f: V482 = 0x493
0x792: V483 = 0xd57
0x795: THROW 
0x796: JUMPDEST 
0x797: V484 = 0x40
0x799: V485 = M[0x40]
0x79c: V486 = 0xffffffffffffffffffffffffffffffffffffffff
0x7b1: V487 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x7b2: V488 = 0xffffffffffffffffffffffffffffffffffffffff
0x7c7: V489 = AND 0xffffffffffffffffffffffffffffffffffffffff V487
0x7c9: M[V485] = V489
0x7ca: V490 = 0x20
0x7cc: V491 = ADD 0x20 V485
0x7d0: V492 = 0x40
0x7d2: V493 = M[0x40]
0x7d5: V494 = SUB V491 V493
0x7d7: RETURN V493 V494
0x7d8: JUMPDEST 
0x7d9: V495 = CALLVALUE
0x7da: V496 = ISZERO V495
0x7db: V497 = 0x4dd
0x7de: JUMPI 0x4dd V496
---
Entry stack: []
Stack pops: 0
Stack additions: [0x493]
Exit stack: []

================================

Block 0x7df
[0x7df:0x847]
---
Predecessors: [0x78d]
Successors: [0x848]
---
0x7df INVALID
0x7e0 JUMPDEST
0x7e1 PUSH2 0x4fc
0x7e4 PUSH1 0x4
0x7e6 DUP1
0x7e7 DUP1
0x7e8 CALLDATALOAD
0x7e9 SWAP1
0x7ea PUSH1 0x20
0x7ec ADD
0x7ed SWAP1
0x7ee SWAP2
0x7ef SWAP1
0x7f0 DUP1
0x7f1 CALLDATALOAD
0x7f2 SWAP1
0x7f3 PUSH1 0x20
0x7f5 ADD
0x7f6 SWAP1
0x7f7 SWAP2
0x7f8 SWAP1
0x7f9 POP
0x7fa POP
0x7fb PUSH2 0xd7d
0x7fe JUMP
0x7ff JUMPDEST
0x800 PUSH1 0x40
0x802 MLOAD
0x803 DUP1
0x804 DUP3
0x805 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x81a AND
0x81b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x830 AND
0x831 DUP2
0x832 MSTORE
0x833 PUSH1 0x20
0x835 ADD
0x836 SWAP2
0x837 POP
0x838 POP
0x839 PUSH1 0x40
0x83b MLOAD
0x83c DUP1
0x83d SWAP2
0x83e SUB
0x83f SWAP1
0x840 RETURN
0x841 JUMPDEST
0x842 CALLVALUE
0x843 ISZERO
0x844 PUSH2 0x546
0x847 JUMPI
---
0x7df: INVALID 
0x7e0: JUMPDEST 
0x7e1: V498 = 0x4fc
0x7e4: V499 = 0x4
0x7e8: V500 = CALLDATALOAD 0x4
0x7ea: V501 = 0x20
0x7ec: V502 = ADD 0x20 0x4
0x7f1: V503 = CALLDATALOAD 0x24
0x7f3: V504 = 0x20
0x7f5: V505 = ADD 0x20 0x24
0x7fb: V506 = 0xd7d
0x7fe: THROW 
0x7ff: JUMPDEST 
0x800: V507 = 0x40
0x802: V508 = M[0x40]
0x805: V509 = 0xffffffffffffffffffffffffffffffffffffffff
0x81a: V510 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x81b: V511 = 0xffffffffffffffffffffffffffffffffffffffff
0x830: V512 = AND 0xffffffffffffffffffffffffffffffffffffffff V510
0x832: M[V508] = V512
0x833: V513 = 0x20
0x835: V514 = ADD 0x20 V508
0x839: V515 = 0x40
0x83b: V516 = M[0x40]
0x83e: V517 = SUB V514 V516
0x840: RETURN V516 V517
0x841: JUMPDEST 
0x842: V518 = CALLVALUE
0x843: V519 = ISZERO V518
0x844: V520 = 0x546
0x847: THROWI V519
---
Entry stack: []
Stack pops: 0
Stack additions: [V503, V500, 0x4fc]
Exit stack: []

================================

Block 0x848
[0x848:0x872]
---
Predecessors: [0x7df]
Successors: [0x873]
---
0x848 INVALID
0x849 JUMPDEST
0x84a PUSH2 0x54e
0x84d PUSH2 0xdbf
0x850 JUMP
0x851 JUMPDEST
0x852 PUSH1 0x40
0x854 MLOAD
0x855 DUP1
0x856 DUP3
0x857 DUP2
0x858 MSTORE
0x859 PUSH1 0x20
0x85b ADD
0x85c SWAP2
0x85d POP
0x85e POP
0x85f PUSH1 0x40
0x861 MLOAD
0x862 DUP1
0x863 SWAP2
0x864 SUB
0x865 SWAP1
0x866 RETURN
0x867 JUMPDEST
0x868 PUSH1 0x2
0x86a SLOAD
0x86b TIMESTAMP
0x86c GT
0x86d ISZERO
0x86e ISZERO
0x86f PUSH2 0x575
0x872 JUMPI
---
0x848: INVALID 
0x849: JUMPDEST 
0x84a: V521 = 0x54e
0x84d: V522 = 0xdbf
0x850: THROW 
0x851: JUMPDEST 
0x852: V523 = 0x40
0x854: V524 = M[0x40]
0x858: M[V524] = S0
0x859: V525 = 0x20
0x85b: V526 = ADD 0x20 V524
0x85f: V527 = 0x40
0x861: V528 = M[0x40]
0x864: V529 = SUB V526 V528
0x866: RETURN V528 V529
0x867: JUMPDEST 
0x868: V530 = 0x2
0x86a: V531 = S[0x2]
0x86b: V532 = TIMESTAMP
0x86c: V533 = GT V532 V531
0x86d: V534 = ISZERO V533
0x86e: V535 = ISZERO V534
0x86f: V536 = 0x575
0x872: THROWI V535
---
Entry stack: []
Stack pops: 0
Stack additions: [0x54e]
Exit stack: []

================================

Block 0x873
[0x873:0x946]
---
Predecessors: [0x848]
Successors: [0x668, 0x947]
---
0x873 PUSH1 0x0
0x875 PUSH1 0x0
0x877 REVERT
0x878 JUMPDEST
0x879 DUP2
0x87a TIMESTAMP
0x87b ADD
0x87c PUSH1 0x2
0x87e DUP2
0x87f SWAP1
0x880 SSTORE
0x881 POP
0x882 DUP1
0x883 PUSH1 0x5
0x885 PUSH1 0x0
0x887 PUSH1 0x1
0x889 SLOAD
0x88a DUP2
0x88b MSTORE
0x88c PUSH1 0x20
0x88e ADD
0x88f SWAP1
0x890 DUP2
0x891 MSTORE
0x892 PUSH1 0x20
0x894 ADD
0x895 PUSH1 0x0
0x897 SHA3
0x898 SWAP1
0x899 DUP1
0x89a MLOAD
0x89b SWAP1
0x89c PUSH1 0x20
0x89e ADD
0x89f SWAP1
0x8a0 PUSH2 0x5a7
0x8a3 SWAP3
0x8a4 SWAP2
0x8a5 SWAP1
0x8a6 PUSH2 0xdc5
0x8a9 JUMP
0x8aa JUMPDEST
0x8ab POP
0x8ac PUSH32 0x5e5f2e37a107027aca176a003538367c64873f56354747b862af157cdd5643bd
0x8cd CALLER
0x8ce DUP4
0x8cf DUP4
0x8d0 PUSH1 0x1
0x8d2 PUSH1 0x0
0x8d4 DUP2
0x8d5 SLOAD
0x8d6 PUSH1 0x1
0x8d8 ADD
0x8d9 SWAP2
0x8da SWAP1
0x8db POP
0x8dc DUP2
0x8dd SWAP1
0x8de SSTORE
0x8df PUSH1 0x40
0x8e1 MLOAD
0x8e2 DUP1
0x8e3 DUP6
0x8e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8f9 AND
0x8fa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x90f AND
0x910 DUP2
0x911 MSTORE
0x912 PUSH1 0x20
0x914 ADD
0x915 DUP5
0x916 DUP2
0x917 MSTORE
0x918 PUSH1 0x20
0x91a ADD
0x91b DUP1
0x91c PUSH1 0x20
0x91e ADD
0x91f DUP4
0x920 DUP2
0x921 MSTORE
0x922 PUSH1 0x20
0x924 ADD
0x925 DUP3
0x926 DUP2
0x927 SUB
0x928 DUP3
0x929 MSTORE
0x92a DUP5
0x92b DUP2
0x92c DUP2
0x92d MLOAD
0x92e DUP2
0x92f MSTORE
0x930 PUSH1 0x20
0x932 ADD
0x933 SWAP2
0x934 POP
0x935 DUP1
0x936 MLOAD
0x937 SWAP1
0x938 PUSH1 0x20
0x93a ADD
0x93b SWAP1
0x93c DUP1
0x93d DUP4
0x93e DUP4
0x93f PUSH1 0x0
0x941 DUP4
0x942 EQ
0x943 PUSH2 0x668
0x946 JUMPI
---
0x873: V537 = 0x0
0x875: V538 = 0x0
0x877: REVERT 0x0 0x0
0x878: JUMPDEST 
0x87a: V539 = TIMESTAMP
0x87b: V540 = ADD V539 S1
0x87c: V541 = 0x2
0x880: S[0x2] = V540
0x883: V542 = 0x5
0x885: V543 = 0x0
0x887: V544 = 0x1
0x889: V545 = S[0x1]
0x88b: M[0x0] = V545
0x88c: V546 = 0x20
0x88e: V547 = ADD 0x20 0x0
0x891: M[0x20] = 0x5
0x892: V548 = 0x20
0x894: V549 = ADD 0x20 0x20
0x895: V550 = 0x0
0x897: V551 = SHA3 0x0 0x40
0x89a: V552 = M[S0]
0x89c: V553 = 0x20
0x89e: V554 = ADD 0x20 S0
0x8a0: V555 = 0x5a7
0x8a6: V556 = 0xdc5
0x8a9: THROW 
0x8aa: JUMPDEST 
0x8ac: V557 = 0x5e5f2e37a107027aca176a003538367c64873f56354747b862af157cdd5643bd
0x8cd: V558 = CALLER
0x8d0: V559 = 0x1
0x8d2: V560 = 0x0
0x8d5: V561 = S[0x1]
0x8d6: V562 = 0x1
0x8d8: V563 = ADD 0x1 V561
0x8de: S[0x1] = V563
0x8df: V564 = 0x40
0x8e1: V565 = M[0x40]
0x8e4: V566 = 0xffffffffffffffffffffffffffffffffffffffff
0x8f9: V567 = AND 0xffffffffffffffffffffffffffffffffffffffff V558
0x8fa: V568 = 0xffffffffffffffffffffffffffffffffffffffff
0x90f: V569 = AND 0xffffffffffffffffffffffffffffffffffffffff V567
0x911: M[V565] = V569
0x912: V570 = 0x20
0x914: V571 = ADD 0x20 V565
0x917: M[V571] = S2
0x918: V572 = 0x20
0x91a: V573 = ADD 0x20 V571
0x91c: V574 = 0x20
0x91e: V575 = ADD 0x20 V573
0x921: M[V575] = V563
0x922: V576 = 0x20
0x924: V577 = ADD 0x20 V575
0x927: V578 = SUB V577 V565
0x929: M[V573] = V578
0x92d: V579 = M[S1]
0x92f: M[V577] = V579
0x930: V580 = 0x20
0x932: V581 = ADD 0x20 V577
0x936: V582 = M[S1]
0x938: V583 = 0x20
0x93a: V584 = ADD 0x20 S1
0x93f: V585 = 0x0
0x942: V586 = EQ V582 0x0
0x943: V587 = 0x668
0x946: JUMPI 0x668 V586
---
Entry stack: []
Stack pops: 0
Stack additions: [V552, V554, V551, 0x5a7, S0, S1, V584, V581, V582, V582, V584, V581, V573, V565, V563, S1, S2, V558, 0x5e5f2e37a107027aca176a003538367c64873f56354747b862af157cdd5643bd, S1, S2]
Exit stack: []

================================

Block 0x947
[0x947:0x954]
---
Predecessors: [0x873]
Successors: [0x668, 0x955]
---
0x947 JUMPDEST
0x948 DUP1
0x949 MLOAD
0x94a DUP3
0x94b MSTORE
0x94c PUSH1 0x20
0x94e DUP4
0x94f GT
0x950 ISZERO
0x951 PUSH2 0x668
0x954 JUMPI
---
0x947: JUMPDEST 
0x949: V588 = M[V584]
0x94b: M[V581] = V588
0x94c: V589 = 0x20
0x94f: V590 = GT V582 0x20
0x950: V591 = ISZERO V590
0x951: V592 = 0x668
0x954: JUMPI 0x668 V591
---
Entry stack: [S14, S13, 0x5e5f2e37a107027aca176a003538367c64873f56354747b862af157cdd5643bd, V558, S10, S9, V563, V565, V573, V581, V584, V582, V582, V581, V584]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S14, S13, 0x5e5f2e37a107027aca176a003538367c64873f56354747b862af157cdd5643bd, V558, S10, S9, V563, V565, V573, V581, V584, V582, V582, V581, V584]

================================

Block 0x955
[0x955:0x97d]
---
Predecessors: [0x947]
Successors: [0x97e]
---
0x955 PUSH1 0x20
0x957 DUP3
0x958 ADD
0x959 SWAP2
0x95a POP
0x95b PUSH1 0x20
0x95d DUP2
0x95e ADD
0x95f SWAP1
0x960 POP
0x961 PUSH1 0x20
0x963 DUP4
0x964 SUB
0x965 SWAP3
0x966 POP
0x967 PUSH2 0x644
0x96a JUMP
0x96b JUMPDEST
0x96c POP
0x96d POP
0x96e POP
0x96f SWAP1
0x970 POP
0x971 SWAP1
0x972 DUP2
0x973 ADD
0x974 SWAP1
0x975 PUSH1 0x1f
0x977 AND
0x978 DUP1
0x979 ISZERO
0x97a PUSH2 0x694
0x97d JUMPI
---
0x955: V593 = 0x20
0x958: V594 = ADD V581 0x20
0x95b: V595 = 0x20
0x95e: V596 = ADD V584 0x20
0x961: V597 = 0x20
0x964: V598 = SUB V582 0x20
0x967: V599 = 0x644
0x96a: THROW 
0x96b: JUMPDEST 
0x973: V600 = ADD S3 S5
0x975: V601 = 0x1f
0x977: V602 = AND 0x1f S3
0x979: V603 = ISZERO V602
0x97a: V604 = 0x694
0x97d: THROWI V603
---
Entry stack: [S14, S13, 0x5e5f2e37a107027aca176a003538367c64873f56354747b862af157cdd5643bd, V558, S10, S9, V563, V565, V573, V581, V584, V582, V582, V581, V584]
Stack pops: 3
Stack additions: [V602, V600]
Exit stack: []

================================

Block 0x97e
[0x97e:0x996]
---
Predecessors: [0x955]
Successors: [0x997]
---
0x97e DUP1
0x97f DUP3
0x980 SUB
0x981 DUP1
0x982 MLOAD
0x983 PUSH1 0x1
0x985 DUP4
0x986 PUSH1 0x20
0x988 SUB
0x989 PUSH2 0x100
0x98c EXP
0x98d SUB
0x98e NOT
0x98f AND
0x990 DUP2
0x991 MSTORE
0x992 PUSH1 0x20
0x994 ADD
0x995 SWAP2
0x996 POP
---
0x980: V605 = SUB V600 V602
0x982: V606 = M[V605]
0x983: V607 = 0x1
0x986: V608 = 0x20
0x988: V609 = SUB 0x20 V602
0x989: V610 = 0x100
0x98c: V611 = EXP 0x100 V609
0x98d: V612 = SUB V611 0x1
0x98e: V613 = NOT V612
0x98f: V614 = AND V613 V606
0x991: M[V605] = V614
0x992: V615 = 0x20
0x994: V616 = ADD 0x20 V605
---
Entry stack: [V600, V602]
Stack pops: 2
Stack additions: [V616, S0]
Exit stack: [V616, V602]

================================

Block 0x997
[0x997:0x9a7]
---
Predecessors: [0x97e]
Successors: [0x9a8]
---
0x997 JUMPDEST
0x998 POP
0x999 SWAP6
0x99a POP
0x99b POP
0x99c POP
0x99d POP
0x99e POP
0x99f POP
0x9a0 PUSH1 0x40
0x9a2 MLOAD
0x9a3 DUP1
0x9a4 SWAP2
0x9a5 SUB
0x9a6 SWAP1
0x9a7 LOG1
---
0x997: JUMPDEST 
0x9a0: V617 = 0x40
0x9a2: V618 = M[0x40]
0x9a5: V619 = SUB V616 V618
0x9a7: LOG V618 V619 S8
---
Entry stack: [V616, V602]
Stack pops: 9
Stack additions: []
Exit stack: []

================================

Block 0x9a8
[0x9a8:0xa0d]
---
Predecessors: [0x997]
Successors: [0xa0e]
---
0x9a8 JUMPDEST
0x9a9 POP
0x9aa POP
0x9ab JUMP
0x9ac JUMPDEST
0x9ad PUSH1 0x5
0x9af PUSH1 0x20
0x9b1 MSTORE
0x9b2 DUP1
0x9b3 PUSH1 0x0
0x9b5 MSTORE
0x9b6 PUSH1 0x40
0x9b8 PUSH1 0x0
0x9ba SHA3
0x9bb PUSH1 0x0
0x9bd SWAP2
0x9be POP
0x9bf SWAP1
0x9c0 POP
0x9c1 DUP1
0x9c2 SLOAD
0x9c3 PUSH1 0x1
0x9c5 DUP2
0x9c6 PUSH1 0x1
0x9c8 AND
0x9c9 ISZERO
0x9ca PUSH2 0x100
0x9cd MUL
0x9ce SUB
0x9cf AND
0x9d0 PUSH1 0x2
0x9d2 SWAP1
0x9d3 DIV
0x9d4 DUP1
0x9d5 PUSH1 0x1f
0x9d7 ADD
0x9d8 PUSH1 0x20
0x9da DUP1
0x9db SWAP2
0x9dc DIV
0x9dd MUL
0x9de PUSH1 0x20
0x9e0 ADD
0x9e1 PUSH1 0x40
0x9e3 MLOAD
0x9e4 SWAP1
0x9e5 DUP2
0x9e6 ADD
0x9e7 PUSH1 0x40
0x9e9 MSTORE
0x9ea DUP1
0x9eb SWAP3
0x9ec SWAP2
0x9ed SWAP1
0x9ee DUP2
0x9ef DUP2
0x9f0 MSTORE
0x9f1 PUSH1 0x20
0x9f3 ADD
0x9f4 DUP3
0x9f5 DUP1
0x9f6 SLOAD
0x9f7 PUSH1 0x1
0x9f9 DUP2
0x9fa PUSH1 0x1
0x9fc AND
0x9fd ISZERO
0x9fe PUSH2 0x100
0xa01 MUL
0xa02 SUB
0xa03 AND
0xa04 PUSH1 0x2
0xa06 SWAP1
0xa07 DIV
0xa08 DUP1
0xa09 ISZERO
0xa0a PUSH2 0x751
0xa0d JUMPI
---
0x9a8: JUMPDEST 
0x9ab: JUMP S2
0x9ac: JUMPDEST 
0x9ad: V620 = 0x5
0x9af: V621 = 0x20
0x9b1: M[0x20] = 0x5
0x9b3: V622 = 0x0
0x9b5: M[0x0] = S0
0x9b6: V623 = 0x40
0x9b8: V624 = 0x0
0x9ba: V625 = SHA3 0x0 0x40
0x9bb: V626 = 0x0
0x9c2: V627 = S[V625]
0x9c3: V628 = 0x1
0x9c6: V629 = 0x1
0x9c8: V630 = AND 0x1 V627
0x9c9: V631 = ISZERO V630
0x9ca: V632 = 0x100
0x9cd: V633 = MUL 0x100 V631
0x9ce: V634 = SUB V633 0x1
0x9cf: V635 = AND V634 V627
0x9d0: V636 = 0x2
0x9d3: V637 = DIV V635 0x2
0x9d5: V638 = 0x1f
0x9d7: V639 = ADD 0x1f V637
0x9d8: V640 = 0x20
0x9dc: V641 = DIV V639 0x20
0x9dd: V642 = MUL V641 0x20
0x9de: V643 = 0x20
0x9e0: V644 = ADD 0x20 V642
0x9e1: V645 = 0x40
0x9e3: V646 = M[0x40]
0x9e6: V647 = ADD V646 V644
0x9e7: V648 = 0x40
0x9e9: M[0x40] = V647
0x9f0: M[V646] = V637
0x9f1: V649 = 0x20
0x9f3: V650 = ADD 0x20 V646
0x9f6: V651 = S[V625]
0x9f7: V652 = 0x1
0x9fa: V653 = 0x1
0x9fc: V654 = AND 0x1 V651
0x9fd: V655 = ISZERO V654
0x9fe: V656 = 0x100
0xa01: V657 = MUL 0x100 V655
0xa02: V658 = SUB V657 0x1
0xa03: V659 = AND V658 V651
0xa04: V660 = 0x2
0xa07: V661 = DIV V659 0x2
0xa09: V662 = ISZERO V661
0xa0a: V663 = 0x751
0xa0d: THROWI V662
---
Entry stack: []
Stack pops: 6
Stack additions: [V661, V625, V650, V637, V625, V646]
Exit stack: []

================================

Block 0xa0e
[0xa0e:0xa15]
---
Predecessors: [0x9a8]
Successors: [0xa16]
---
0xa0e DUP1
0xa0f PUSH1 0x1f
0xa11 LT
0xa12 PUSH2 0x726
0xa15 JUMPI
---
0xa0f: V664 = 0x1f
0xa11: V665 = LT 0x1f V661
0xa12: V666 = 0x726
0xa15: THROWI V665
---
Entry stack: [V646, V625, V637, V650, V625, V661]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V646, V625, V637, V650, V625, V661]

================================

Block 0xa16
[0xa16:0xa36]
---
Predecessors: [0xa0e]
Successors: [0xa37]
---
0xa16 PUSH2 0x100
0xa19 DUP1
0xa1a DUP4
0xa1b SLOAD
0xa1c DIV
0xa1d MUL
0xa1e DUP4
0xa1f MSTORE
0xa20 SWAP2
0xa21 PUSH1 0x20
0xa23 ADD
0xa24 SWAP2
0xa25 PUSH2 0x751
0xa28 JUMP
0xa29 JUMPDEST
0xa2a DUP3
0xa2b ADD
0xa2c SWAP2
0xa2d SWAP1
0xa2e PUSH1 0x0
0xa30 MSTORE
0xa31 PUSH1 0x20
0xa33 PUSH1 0x0
0xa35 SHA3
0xa36 SWAP1
---
0xa16: V667 = 0x100
0xa1b: V668 = S[V625]
0xa1c: V669 = DIV V668 0x100
0xa1d: V670 = MUL V669 0x100
0xa1f: M[V650] = V670
0xa21: V671 = 0x20
0xa23: V672 = ADD 0x20 V650
0xa25: V673 = 0x751
0xa28: THROW 
0xa29: JUMPDEST 
0xa2b: V674 = ADD S2 S0
0xa2e: V675 = 0x0
0xa30: M[0x0] = S1
0xa31: V676 = 0x20
0xa33: V677 = 0x0
0xa35: V678 = SHA3 0x0 0x20
---
Entry stack: [V646, V625, V637, V650, V625, V661]
Stack pops: 3
Stack additions: [S2, V678, V674]
Exit stack: []

================================

Block 0xa37
[0xa37:0xa4a]
---
Predecessors: [0xa16]
Successors: [0xa4b]
---
0xa37 JUMPDEST
0xa38 DUP2
0xa39 SLOAD
0xa3a DUP2
0xa3b MSTORE
0xa3c SWAP1
0xa3d PUSH1 0x1
0xa3f ADD
0xa40 SWAP1
0xa41 PUSH1 0x20
0xa43 ADD
0xa44 DUP1
0xa45 DUP4
0xa46 GT
0xa47 PUSH2 0x734
0xa4a JUMPI
---
0xa37: JUMPDEST 
0xa39: V679 = S[V678]
0xa3b: M[S0] = V679
0xa3d: V680 = 0x1
0xa3f: V681 = ADD 0x1 V678
0xa41: V682 = 0x20
0xa43: V683 = ADD 0x20 S0
0xa46: V684 = GT V674 V683
0xa47: V685 = 0x734
0xa4a: THROWI V684
---
Entry stack: [V674, V678, S0]
Stack pops: 3
Stack additions: [S2, V681, V683]
Exit stack: [V674, V681, V683]

================================

Block 0xa4b
[0xa4b:0xa53]
---
Predecessors: [0xa37]
Successors: [0xa54]
---
0xa4b DUP3
0xa4c SWAP1
0xa4d SUB
0xa4e PUSH1 0x1f
0xa50 AND
0xa51 DUP3
0xa52 ADD
0xa53 SWAP2
---
0xa4d: V686 = SUB V683 V674
0xa4e: V687 = 0x1f
0xa50: V688 = AND 0x1f V686
0xa52: V689 = ADD V674 V688
---
Entry stack: [V674, V681, V683]
Stack pops: 3
Stack additions: [V689, S1, S2]
Exit stack: [V689, V681, V674]

================================

Block 0xa54
[0xa54:0xafa]
---
Predecessors: [0xa4b]
Successors: [0xafb]
---
0xa54 JUMPDEST
0xa55 POP
0xa56 POP
0xa57 POP
0xa58 POP
0xa59 POP
0xa5a DUP2
0xa5b JUMP
0xa5c JUMPDEST
0xa5d PUSH1 0x9
0xa5f PUSH1 0x20
0xa61 MSTORE
0xa62 DUP1
0xa63 PUSH1 0x0
0xa65 MSTORE
0xa66 PUSH1 0x40
0xa68 PUSH1 0x0
0xa6a SHA3
0xa6b PUSH1 0x0
0xa6d SWAP2
0xa6e POP
0xa6f SWAP1
0xa70 POP
0xa71 SLOAD
0xa72 DUP2
0xa73 JUMP
0xa74 JUMPDEST
0xa75 PUSH1 0x6
0xa77 PUSH1 0x20
0xa79 MSTORE
0xa7a DUP2
0xa7b PUSH1 0x0
0xa7d MSTORE
0xa7e PUSH1 0x40
0xa80 PUSH1 0x0
0xa82 SHA3
0xa83 PUSH1 0x20
0xa85 MSTORE
0xa86 DUP1
0xa87 PUSH1 0x0
0xa89 MSTORE
0xa8a PUSH1 0x40
0xa8c PUSH1 0x0
0xa8e SHA3
0xa8f PUSH1 0x0
0xa91 SWAP2
0xa92 POP
0xa93 SWAP2
0xa94 POP
0xa95 SWAP1
0xa96 SLOAD
0xa97 SWAP1
0xa98 PUSH2 0x100
0xa9b EXP
0xa9c SWAP1
0xa9d DIV
0xa9e PUSH1 0xff
0xaa0 AND
0xaa1 DUP2
0xaa2 JUMP
0xaa3 JUMPDEST
0xaa4 PUSH1 0x0
0xaa6 PUSH1 0x0
0xaa8 SWAP1
0xaa9 SLOAD
0xaaa SWAP1
0xaab PUSH2 0x100
0xaae EXP
0xaaf SWAP1
0xab0 DIV
0xab1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xac6 AND
0xac7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xadc AND
0xadd CALLER
0xade PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaf3 AND
0xaf4 EQ
0xaf5 ISZERO
0xaf6 ISZERO
0xaf7 PUSH2 0x7fd
0xafa JUMPI
---
0xa54: JUMPDEST 
0xa5b: JUMP S6
0xa5c: JUMPDEST 
0xa5d: V690 = 0x9
0xa5f: V691 = 0x20
0xa61: M[0x20] = 0x9
0xa63: V692 = 0x0
0xa65: M[0x0] = S0
0xa66: V693 = 0x40
0xa68: V694 = 0x0
0xa6a: V695 = SHA3 0x0 0x40
0xa6b: V696 = 0x0
0xa71: V697 = S[V695]
0xa73: JUMP S1
0xa74: JUMPDEST 
0xa75: V698 = 0x6
0xa77: V699 = 0x20
0xa79: M[0x20] = 0x6
0xa7b: V700 = 0x0
0xa7d: M[0x0] = S1
0xa7e: V701 = 0x40
0xa80: V702 = 0x0
0xa82: V703 = SHA3 0x0 0x40
0xa83: V704 = 0x20
0xa85: M[0x20] = V703
0xa87: V705 = 0x0
0xa89: M[0x0] = S0
0xa8a: V706 = 0x40
0xa8c: V707 = 0x0
0xa8e: V708 = SHA3 0x0 0x40
0xa8f: V709 = 0x0
0xa96: V710 = S[V708]
0xa98: V711 = 0x100
0xa9b: V712 = EXP 0x100 0x0
0xa9d: V713 = DIV V710 0x1
0xa9e: V714 = 0xff
0xaa0: V715 = AND 0xff V713
0xaa2: JUMP S2
0xaa3: JUMPDEST 
0xaa4: V716 = 0x0
0xaa6: V717 = 0x0
0xaa9: V718 = S[0x0]
0xaab: V719 = 0x100
0xaae: V720 = EXP 0x100 0x0
0xab0: V721 = DIV V718 0x1
0xab1: V722 = 0xffffffffffffffffffffffffffffffffffffffff
0xac6: V723 = AND 0xffffffffffffffffffffffffffffffffffffffff V721
0xac7: V724 = 0xffffffffffffffffffffffffffffffffffffffff
0xadc: V725 = AND 0xffffffffffffffffffffffffffffffffffffffff V723
0xadd: V726 = CALLER
0xade: V727 = 0xffffffffffffffffffffffffffffffffffffffff
0xaf3: V728 = AND 0xffffffffffffffffffffffffffffffffffffffff V726
0xaf4: V729 = EQ V728 V725
0xaf5: V730 = ISZERO V729
0xaf6: V731 = ISZERO V730
0xaf7: V732 = 0x7fd
0xafa: THROWI V731
---
Entry stack: [V689, V681, V674]
Stack pops: 42
Stack additions: []
Exit stack: []

================================

Block 0xafb
[0xafb:0xba4]
---
Predecessors: [0xa54]
Successors: [0xba5]
---
0xafb PUSH1 0x0
0xafd PUSH1 0x0
0xaff REVERT
0xb00 JUMPDEST
0xb01 DUP1
0xb02 PUSH1 0x0
0xb04 PUSH1 0x0
0xb06 PUSH2 0x100
0xb09 EXP
0xb0a DUP2
0xb0b SLOAD
0xb0c DUP2
0xb0d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb22 MUL
0xb23 NOT
0xb24 AND
0xb25 SWAP1
0xb26 DUP4
0xb27 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb3c AND
0xb3d MUL
0xb3e OR
0xb3f SWAP1
0xb40 SSTORE
0xb41 POP
0xb42 PUSH32 0xa96654ee94d54e5aa50fdb379a0994fcef184db1c7dcd69e9601d82390e3e116
0xb63 DUP2
0xb64 PUSH1 0x40
0xb66 MLOAD
0xb67 DUP1
0xb68 DUP3
0xb69 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb7e AND
0xb7f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb94 AND
0xb95 DUP2
0xb96 MSTORE
0xb97 PUSH1 0x20
0xb99 ADD
0xb9a SWAP2
0xb9b POP
0xb9c POP
0xb9d PUSH1 0x40
0xb9f MLOAD
0xba0 DUP1
0xba1 SWAP2
0xba2 SUB
0xba3 SWAP1
0xba4 LOG1
---
0xafb: V733 = 0x0
0xafd: V734 = 0x0
0xaff: REVERT 0x0 0x0
0xb00: JUMPDEST 
0xb02: V735 = 0x0
0xb04: V736 = 0x0
0xb06: V737 = 0x100
0xb09: V738 = EXP 0x100 0x0
0xb0b: V739 = S[0x0]
0xb0d: V740 = 0xffffffffffffffffffffffffffffffffffffffff
0xb22: V741 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xb23: V742 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xb24: V743 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V739
0xb27: V744 = 0xffffffffffffffffffffffffffffffffffffffff
0xb3c: V745 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xb3d: V746 = MUL V745 0x1
0xb3e: V747 = OR V746 V743
0xb40: S[0x0] = V747
0xb42: V748 = 0xa96654ee94d54e5aa50fdb379a0994fcef184db1c7dcd69e9601d82390e3e116
0xb64: V749 = 0x40
0xb66: V750 = M[0x40]
0xb69: V751 = 0xffffffffffffffffffffffffffffffffffffffff
0xb7e: V752 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xb7f: V753 = 0xffffffffffffffffffffffffffffffffffffffff
0xb94: V754 = AND 0xffffffffffffffffffffffffffffffffffffffff V752
0xb96: M[V750] = V754
0xb97: V755 = 0x20
0xb99: V756 = ADD 0x20 V750
0xb9d: V757 = 0x40
0xb9f: V758 = M[0x40]
0xba2: V759 = SUB V756 V758
0xba4: LOG V758 V759 0xa96654ee94d54e5aa50fdb379a0994fcef184db1c7dcd69e9601d82390e3e116
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0xba5
[0xba5:0xba5]
---
Predecessors: [0xafb]
Successors: [0xba6]
---
0xba5 JUMPDEST
---
0xba5: JUMPDEST 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0xba6
[0xba6:0xc00]
---
Predecessors: [0xba5]
Successors: [0xc01]
---
0xba6 JUMPDEST
0xba7 POP
0xba8 JUMP
0xba9 JUMPDEST
0xbaa PUSH1 0x0
0xbac PUSH1 0x0
0xbae SWAP1
0xbaf SLOAD
0xbb0 SWAP1
0xbb1 PUSH2 0x100
0xbb4 EXP
0xbb5 SWAP1
0xbb6 DIV
0xbb7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbcc AND
0xbcd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbe2 AND
0xbe3 CALLER
0xbe4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbf9 AND
0xbfa EQ
0xbfb ISZERO
0xbfc ISZERO
0xbfd PUSH2 0x903
0xc00 JUMPI
---
0xba6: JUMPDEST 
0xba8: JUMP S1
0xba9: JUMPDEST 
0xbaa: V760 = 0x0
0xbac: V761 = 0x0
0xbaf: V762 = S[0x0]
0xbb1: V763 = 0x100
0xbb4: V764 = EXP 0x100 0x0
0xbb6: V765 = DIV V762 0x1
0xbb7: V766 = 0xffffffffffffffffffffffffffffffffffffffff
0xbcc: V767 = AND 0xffffffffffffffffffffffffffffffffffffffff V765
0xbcd: V768 = 0xffffffffffffffffffffffffffffffffffffffff
0xbe2: V769 = AND 0xffffffffffffffffffffffffffffffffffffffff V767
0xbe3: V770 = CALLER
0xbe4: V771 = 0xffffffffffffffffffffffffffffffffffffffff
0xbf9: V772 = AND 0xffffffffffffffffffffffffffffffffffffffff V770
0xbfa: V773 = EQ V772 V769
0xbfb: V774 = ISZERO V773
0xbfc: V775 = ISZERO V774
0xbfd: V776 = 0x903
0xc00: THROWI V775
---
Entry stack: [S0]
Stack pops: 4
Stack additions: []
Exit stack: []

================================

Block 0xc01
[0xc01:0xc10]
---
Predecessors: [0xba6]
Successors: [0xc11]
---
0xc01 PUSH1 0x0
0xc03 PUSH1 0x0
0xc05 REVERT
0xc06 JUMPDEST
0xc07 PUSH2 0x90d
0xc0a DUP3
0xc0b DUP3
0xc0c PUSH2 0x564
0xc0f JUMP
0xc10 JUMPDEST
---
0xc01: V777 = 0x0
0xc03: V778 = 0x0
0xc05: REVERT 0x0 0x0
0xc06: JUMPDEST 
0xc07: V779 = 0x90d
0xc0c: V780 = 0x564
0xc0f: THROW 
0xc10: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: [S0, S1, 0x90d, S0, S1]
Exit stack: []

================================

Block 0xc11
[0xc11:0xc11]
---
Predecessors: [0xc01]
Successors: [0xc12]
---
0xc11 JUMPDEST
---
0xc11: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc12
[0xc12:0xc6e]
---
Predecessors: [0xc11]
Successors: [0xc6f]
---
0xc12 JUMPDEST
0xc13 POP
0xc14 POP
0xc15 JUMP
0xc16 JUMPDEST
0xc17 PUSH1 0x3
0xc19 PUSH1 0x0
0xc1b SWAP1
0xc1c SLOAD
0xc1d SWAP1
0xc1e PUSH2 0x100
0xc21 EXP
0xc22 SWAP1
0xc23 DIV
0xc24 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc39 AND
0xc3a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc4f AND
0xc50 CALLER
0xc51 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc66 AND
0xc67 EQ
0xc68 ISZERO
0xc69 DUP1
0xc6a ISZERO
0xc6b PUSH2 0x9bf
0xc6e JUMPI
---
0xc12: JUMPDEST 
0xc15: JUMP S2
0xc16: JUMPDEST 
0xc17: V781 = 0x3
0xc19: V782 = 0x0
0xc1c: V783 = S[0x3]
0xc1e: V784 = 0x100
0xc21: V785 = EXP 0x100 0x0
0xc23: V786 = DIV V783 0x1
0xc24: V787 = 0xffffffffffffffffffffffffffffffffffffffff
0xc39: V788 = AND 0xffffffffffffffffffffffffffffffffffffffff V786
0xc3a: V789 = 0xffffffffffffffffffffffffffffffffffffffff
0xc4f: V790 = AND 0xffffffffffffffffffffffffffffffffffffffff V788
0xc50: V791 = CALLER
0xc51: V792 = 0xffffffffffffffffffffffffffffffffffffffff
0xc66: V793 = AND 0xffffffffffffffffffffffffffffffffffffffff V791
0xc67: V794 = EQ V793 V790
0xc68: V795 = ISZERO V794
0xc6a: V796 = ISZERO V795
0xc6b: V797 = 0x9bf
0xc6e: THROWI V796
---
Entry stack: []
Stack pops: 6
Stack additions: [V795]
Exit stack: []

================================

Block 0xc6f
[0xc6f:0xcc1]
---
Predecessors: [0xc12]
Successors: [0xcc2]
---
0xc6f POP
0xc70 PUSH1 0x4
0xc72 PUSH1 0x0
0xc74 SWAP1
0xc75 SLOAD
0xc76 SWAP1
0xc77 PUSH2 0x100
0xc7a EXP
0xc7b SWAP1
0xc7c DIV
0xc7d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc92 AND
0xc93 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xca8 AND
0xca9 CALLER
0xcaa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcbf AND
0xcc0 EQ
0xcc1 ISZERO
---
0xc70: V798 = 0x4
0xc72: V799 = 0x0
0xc75: V800 = S[0x4]
0xc77: V801 = 0x100
0xc7a: V802 = EXP 0x100 0x0
0xc7c: V803 = DIV V800 0x1
0xc7d: V804 = 0xffffffffffffffffffffffffffffffffffffffff
0xc92: V805 = AND 0xffffffffffffffffffffffffffffffffffffffff V803
0xc93: V806 = 0xffffffffffffffffffffffffffffffffffffffff
0xca8: V807 = AND 0xffffffffffffffffffffffffffffffffffffffff V805
0xca9: V808 = CALLER
0xcaa: V809 = 0xffffffffffffffffffffffffffffffffffffffff
0xcbf: V810 = AND 0xffffffffffffffffffffffffffffffffffffffff V808
0xcc0: V811 = EQ V810 V807
0xcc1: V812 = ISZERO V811
---
Entry stack: [V795]
Stack pops: 1
Stack additions: [V812]
Exit stack: [V812]

================================

Block 0xcc2
[0xcc2:0xcc7]
---
Predecessors: [0xc6f]
Successors: [0xcc8]
---
0xcc2 JUMPDEST
0xcc3 ISZERO
0xcc4 PUSH2 0x9ca
0xcc7 JUMPI
---
0xcc2: JUMPDEST 
0xcc3: V813 = ISZERO V812
0xcc4: V814 = 0x9ca
0xcc7: THROWI V813
---
Entry stack: [V812]
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xcc8
[0xcc8:0xcd7]
---
Predecessors: [0xcc2]
Successors: [0xcd8]
---
0xcc8 PUSH1 0x0
0xcca PUSH1 0x0
0xccc REVERT
0xccd JUMPDEST
0xcce PUSH1 0x2
0xcd0 SLOAD
0xcd1 TIMESTAMP
0xcd2 GT
0xcd3 ISZERO
0xcd4 PUSH2 0x9da
0xcd7 JUMPI
---
0xcc8: V815 = 0x0
0xcca: V816 = 0x0
0xccc: REVERT 0x0 0x0
0xccd: JUMPDEST 
0xcce: V817 = 0x2
0xcd0: V818 = S[0x2]
0xcd1: V819 = TIMESTAMP
0xcd2: V820 = GT V819 V818
0xcd3: V821 = ISZERO V820
0xcd4: V822 = 0x9da
0xcd7: THROWI V821
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xcd8
[0xcd8:0xd42]
---
Predecessors: [0xcc8]
Successors: [0xd43]
---
0xcd8 PUSH1 0x0
0xcda PUSH1 0x0
0xcdc REVERT
0xcdd JUMPDEST
0xcde PUSH1 0x6
0xce0 PUSH1 0x0
0xce2 DUP3
0xce3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcf8 AND
0xcf9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd0e AND
0xd0f DUP2
0xd10 MSTORE
0xd11 PUSH1 0x20
0xd13 ADD
0xd14 SWAP1
0xd15 DUP2
0xd16 MSTORE
0xd17 PUSH1 0x20
0xd19 ADD
0xd1a PUSH1 0x0
0xd1c SHA3
0xd1d PUSH1 0x0
0xd1f PUSH1 0x1
0xd21 SLOAD
0xd22 DUP2
0xd23 MSTORE
0xd24 PUSH1 0x20
0xd26 ADD
0xd27 SWAP1
0xd28 DUP2
0xd29 MSTORE
0xd2a PUSH1 0x20
0xd2c ADD
0xd2d PUSH1 0x0
0xd2f SHA3
0xd30 PUSH1 0x0
0xd32 SWAP1
0xd33 SLOAD
0xd34 SWAP1
0xd35 PUSH2 0x100
0xd38 EXP
0xd39 SWAP1
0xd3a DIV
0xd3b PUSH1 0xff
0xd3d AND
0xd3e ISZERO
0xd3f PUSH2 0xa45
0xd42 JUMPI
---
0xcd8: V823 = 0x0
0xcda: V824 = 0x0
0xcdc: REVERT 0x0 0x0
0xcdd: JUMPDEST 
0xcde: V825 = 0x6
0xce0: V826 = 0x0
0xce3: V827 = 0xffffffffffffffffffffffffffffffffffffffff
0xcf8: V828 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xcf9: V829 = 0xffffffffffffffffffffffffffffffffffffffff
0xd0e: V830 = AND 0xffffffffffffffffffffffffffffffffffffffff V828
0xd10: M[0x0] = V830
0xd11: V831 = 0x20
0xd13: V832 = ADD 0x20 0x0
0xd16: M[0x20] = 0x6
0xd17: V833 = 0x20
0xd19: V834 = ADD 0x20 0x20
0xd1a: V835 = 0x0
0xd1c: V836 = SHA3 0x0 0x40
0xd1d: V837 = 0x0
0xd1f: V838 = 0x1
0xd21: V839 = S[0x1]
0xd23: M[0x0] = V839
0xd24: V840 = 0x20
0xd26: V841 = ADD 0x20 0x0
0xd29: M[0x20] = V836
0xd2a: V842 = 0x20
0xd2c: V843 = ADD 0x20 0x20
0xd2d: V844 = 0x0
0xd2f: V845 = SHA3 0x0 0x40
0xd30: V846 = 0x0
0xd33: V847 = S[V845]
0xd35: V848 = 0x100
0xd38: V849 = EXP 0x100 0x0
0xd3a: V850 = DIV V847 0x1
0xd3b: V851 = 0xff
0xd3d: V852 = AND 0xff V850
0xd3e: V853 = ISZERO V852
0xd3f: V854 = 0xa45
0xd42: THROWI V853
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0xd43
[0xd43:0xe41]
---
Predecessors: [0xcd8]
Successors: [0xe42]
---
0xd43 PUSH1 0x0
0xd45 PUSH1 0x0
0xd47 REVERT
0xd48 JUMPDEST
0xd49 PUSH1 0x1
0xd4b PUSH1 0x6
0xd4d PUSH1 0x0
0xd4f DUP4
0xd50 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd65 AND
0xd66 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd7b AND
0xd7c DUP2
0xd7d MSTORE
0xd7e PUSH1 0x20
0xd80 ADD
0xd81 SWAP1
0xd82 DUP2
0xd83 MSTORE
0xd84 PUSH1 0x20
0xd86 ADD
0xd87 PUSH1 0x0
0xd89 SHA3
0xd8a PUSH1 0x0
0xd8c PUSH1 0x1
0xd8e SLOAD
0xd8f DUP2
0xd90 MSTORE
0xd91 PUSH1 0x20
0xd93 ADD
0xd94 SWAP1
0xd95 DUP2
0xd96 MSTORE
0xd97 PUSH1 0x20
0xd99 ADD
0xd9a PUSH1 0x0
0xd9c SHA3
0xd9d PUSH1 0x0
0xd9f PUSH2 0x100
0xda2 EXP
0xda3 DUP2
0xda4 SLOAD
0xda5 DUP2
0xda6 PUSH1 0xff
0xda8 MUL
0xda9 NOT
0xdaa AND
0xdab SWAP1
0xdac DUP4
0xdad ISZERO
0xdae ISZERO
0xdaf MUL
0xdb0 OR
0xdb1 SWAP1
0xdb2 SSTORE
0xdb3 POP
0xdb4 DUP1
0xdb5 PUSH1 0x8
0xdb7 PUSH1 0x0
0xdb9 PUSH1 0x1
0xdbb SLOAD
0xdbc DUP2
0xdbd MSTORE
0xdbe PUSH1 0x20
0xdc0 ADD
0xdc1 SWAP1
0xdc2 DUP2
0xdc3 MSTORE
0xdc4 PUSH1 0x20
0xdc6 ADD
0xdc7 PUSH1 0x0
0xdc9 SHA3
0xdca PUSH1 0x0
0xdcc PUSH1 0x7
0xdce PUSH1 0x0
0xdd0 PUSH1 0x1
0xdd2 SLOAD
0xdd3 DUP2
0xdd4 MSTORE
0xdd5 PUSH1 0x20
0xdd7 ADD
0xdd8 SWAP1
0xdd9 DUP2
0xdda MSTORE
0xddb PUSH1 0x20
0xddd ADD
0xdde PUSH1 0x0
0xde0 SHA3
0xde1 PUSH1 0x0
0xde3 DUP2
0xde4 SLOAD
0xde5 DUP1
0xde6 SWAP3
0xde7 SWAP2
0xde8 SWAP1
0xde9 PUSH1 0x1
0xdeb ADD
0xdec SWAP2
0xded SWAP1
0xdee POP
0xdef SSTORE
0xdf0 DUP2
0xdf1 MSTORE
0xdf2 PUSH1 0x20
0xdf4 ADD
0xdf5 SWAP1
0xdf6 DUP2
0xdf7 MSTORE
0xdf8 PUSH1 0x20
0xdfa ADD
0xdfb PUSH1 0x0
0xdfd SHA3
0xdfe PUSH1 0x0
0xe00 PUSH2 0x100
0xe03 EXP
0xe04 DUP2
0xe05 SLOAD
0xe06 DUP2
0xe07 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe1c MUL
0xe1d NOT
0xe1e AND
0xe1f SWAP1
0xe20 DUP4
0xe21 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe36 AND
0xe37 MUL
0xe38 OR
0xe39 SWAP1
0xe3a SSTORE
0xe3b POP
0xe3c DUP2
0xe3d ISZERO
0xe3e PUSH2 0xb68
0xe41 JUMPI
---
0xd43: V855 = 0x0
0xd45: V856 = 0x0
0xd47: REVERT 0x0 0x0
0xd48: JUMPDEST 
0xd49: V857 = 0x1
0xd4b: V858 = 0x6
0xd4d: V859 = 0x0
0xd50: V860 = 0xffffffffffffffffffffffffffffffffffffffff
0xd65: V861 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xd66: V862 = 0xffffffffffffffffffffffffffffffffffffffff
0xd7b: V863 = AND 0xffffffffffffffffffffffffffffffffffffffff V861
0xd7d: M[0x0] = V863
0xd7e: V864 = 0x20
0xd80: V865 = ADD 0x20 0x0
0xd83: M[0x20] = 0x6
0xd84: V866 = 0x20
0xd86: V867 = ADD 0x20 0x20
0xd87: V868 = 0x0
0xd89: V869 = SHA3 0x0 0x40
0xd8a: V870 = 0x0
0xd8c: V871 = 0x1
0xd8e: V872 = S[0x1]
0xd90: M[0x0] = V872
0xd91: V873 = 0x20
0xd93: V874 = ADD 0x20 0x0
0xd96: M[0x20] = V869
0xd97: V875 = 0x20
0xd99: V876 = ADD 0x20 0x20
0xd9a: V877 = 0x0
0xd9c: V878 = SHA3 0x0 0x40
0xd9d: V879 = 0x0
0xd9f: V880 = 0x100
0xda2: V881 = EXP 0x100 0x0
0xda4: V882 = S[V878]
0xda6: V883 = 0xff
0xda8: V884 = MUL 0xff 0x1
0xda9: V885 = NOT 0xff
0xdaa: V886 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V882
0xdad: V887 = ISZERO 0x1
0xdae: V888 = ISZERO 0x0
0xdaf: V889 = MUL 0x1 0x1
0xdb0: V890 = OR 0x1 V886
0xdb2: S[V878] = V890
0xdb5: V891 = 0x8
0xdb7: V892 = 0x0
0xdb9: V893 = 0x1
0xdbb: V894 = S[0x1]
0xdbd: M[0x0] = V894
0xdbe: V895 = 0x20
0xdc0: V896 = ADD 0x20 0x0
0xdc3: M[0x20] = 0x8
0xdc4: V897 = 0x20
0xdc6: V898 = ADD 0x20 0x20
0xdc7: V899 = 0x0
0xdc9: V900 = SHA3 0x0 0x40
0xdca: V901 = 0x0
0xdcc: V902 = 0x7
0xdce: V903 = 0x0
0xdd0: V904 = 0x1
0xdd2: V905 = S[0x1]
0xdd4: M[0x0] = V905
0xdd5: V906 = 0x20
0xdd7: V907 = ADD 0x20 0x0
0xdda: M[0x20] = 0x7
0xddb: V908 = 0x20
0xddd: V909 = ADD 0x20 0x20
0xdde: V910 = 0x0
0xde0: V911 = SHA3 0x0 0x40
0xde1: V912 = 0x0
0xde4: V913 = S[V911]
0xde9: V914 = 0x1
0xdeb: V915 = ADD 0x1 V913
0xdef: S[V911] = V915
0xdf1: M[0x0] = V913
0xdf2: V916 = 0x20
0xdf4: V917 = ADD 0x20 0x0
0xdf7: M[0x20] = V900
0xdf8: V918 = 0x20
0xdfa: V919 = ADD 0x20 0x20
0xdfb: V920 = 0x0
0xdfd: V921 = SHA3 0x0 0x40
0xdfe: V922 = 0x0
0xe00: V923 = 0x100
0xe03: V924 = EXP 0x100 0x0
0xe05: V925 = S[V921]
0xe07: V926 = 0xffffffffffffffffffffffffffffffffffffffff
0xe1c: V927 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xe1d: V928 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xe1e: V929 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V925
0xe21: V930 = 0xffffffffffffffffffffffffffffffffffffffff
0xe36: V931 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xe37: V932 = MUL V931 0x1
0xe38: V933 = OR V932 V929
0xe3a: S[V921] = V933
0xe3d: V934 = ISZERO S1
0xe3e: V935 = 0xb68
0xe41: THROWI V934
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [S0, S1]
Exit stack: []

================================

Block 0xe42
[0xe42:0xe90]
---
Predecessors: [0xd43]
Successors: [0xe91]
---
0xe42 PUSH1 0x9
0xe44 PUSH1 0x0
0xe46 PUSH1 0x1
0xe48 SLOAD
0xe49 DUP2
0xe4a MSTORE
0xe4b PUSH1 0x20
0xe4d ADD
0xe4e SWAP1
0xe4f DUP2
0xe50 MSTORE
0xe51 PUSH1 0x20
0xe53 ADD
0xe54 PUSH1 0x0
0xe56 SHA3
0xe57 PUSH1 0x0
0xe59 DUP2
0xe5a SLOAD
0xe5b DUP1
0xe5c SWAP3
0xe5d SWAP2
0xe5e SWAP1
0xe5f PUSH1 0x1
0xe61 ADD
0xe62 SWAP2
0xe63 SWAP1
0xe64 POP
0xe65 SSTORE
0xe66 POP
0xe67 PUSH2 0xb8e
0xe6a JUMP
0xe6b JUMPDEST
0xe6c PUSH1 0xa
0xe6e PUSH1 0x0
0xe70 PUSH1 0x1
0xe72 SLOAD
0xe73 DUP2
0xe74 MSTORE
0xe75 PUSH1 0x20
0xe77 ADD
0xe78 SWAP1
0xe79 DUP2
0xe7a MSTORE
0xe7b PUSH1 0x20
0xe7d ADD
0xe7e PUSH1 0x0
0xe80 SHA3
0xe81 PUSH1 0x0
0xe83 DUP2
0xe84 SLOAD
0xe85 DUP1
0xe86 SWAP3
0xe87 SWAP2
0xe88 SWAP1
0xe89 PUSH1 0x1
0xe8b ADD
0xe8c SWAP2
0xe8d SWAP1
0xe8e POP
0xe8f SSTORE
0xe90 POP
---
0xe42: V936 = 0x9
0xe44: V937 = 0x0
0xe46: V938 = 0x1
0xe48: V939 = S[0x1]
0xe4a: M[0x0] = V939
0xe4b: V940 = 0x20
0xe4d: V941 = ADD 0x20 0x0
0xe50: M[0x20] = 0x9
0xe51: V942 = 0x20
0xe53: V943 = ADD 0x20 0x20
0xe54: V944 = 0x0
0xe56: V945 = SHA3 0x0 0x40
0xe57: V946 = 0x0
0xe5a: V947 = S[V945]
0xe5f: V948 = 0x1
0xe61: V949 = ADD 0x1 V947
0xe65: S[V945] = V949
0xe67: V950 = 0xb8e
0xe6a: THROW 
0xe6b: JUMPDEST 
0xe6c: V951 = 0xa
0xe6e: V952 = 0x0
0xe70: V953 = 0x1
0xe72: V954 = S[0x1]
0xe74: M[0x0] = V954
0xe75: V955 = 0x20
0xe77: V956 = ADD 0x20 0x0
0xe7a: M[0x20] = 0xa
0xe7b: V957 = 0x20
0xe7d: V958 = ADD 0x20 0x20
0xe7e: V959 = 0x0
0xe80: V960 = SHA3 0x0 0x40
0xe81: V961 = 0x0
0xe84: V962 = S[V960]
0xe89: V963 = 0x1
0xe8b: V964 = ADD 0x1 V962
0xe8f: S[V960] = V964
---
Entry stack: [S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xe91
[0xe91:0xf00]
---
Predecessors: [0xe42]
Successors: [0xf01]
---
0xe91 JUMPDEST
0xe92 PUSH32 0xf3f16a15f074b71c5138107dfc7c63b80524d5411cb967caa97d8d9f12b2fd6b
0xeb3 DUP2
0xeb4 DUP4
0xeb5 PUSH1 0x40
0xeb7 MLOAD
0xeb8 DUP1
0xeb9 DUP4
0xeba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xecf AND
0xed0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xee5 AND
0xee6 DUP2
0xee7 MSTORE
0xee8 PUSH1 0x20
0xeea ADD
0xeeb DUP3
0xeec ISZERO
0xeed ISZERO
0xeee ISZERO
0xeef ISZERO
0xef0 DUP2
0xef1 MSTORE
0xef2 PUSH1 0x20
0xef4 ADD
0xef5 SWAP3
0xef6 POP
0xef7 POP
0xef8 POP
0xef9 PUSH1 0x40
0xefb MLOAD
0xefc DUP1
0xefd SWAP2
0xefe SUB
0xeff SWAP1
0xf00 LOG1
---
0xe91: JUMPDEST 
0xe92: V965 = 0xf3f16a15f074b71c5138107dfc7c63b80524d5411cb967caa97d8d9f12b2fd6b
0xeb5: V966 = 0x40
0xeb7: V967 = M[0x40]
0xeba: V968 = 0xffffffffffffffffffffffffffffffffffffffff
0xecf: V969 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xed0: V970 = 0xffffffffffffffffffffffffffffffffffffffff
0xee5: V971 = AND 0xffffffffffffffffffffffffffffffffffffffff V969
0xee7: M[V967] = V971
0xee8: V972 = 0x20
0xeea: V973 = ADD 0x20 V967
0xeec: V974 = ISZERO S1
0xeed: V975 = ISZERO V974
0xeee: V976 = ISZERO V975
0xeef: V977 = ISZERO V976
0xef1: M[V973] = V977
0xef2: V978 = 0x20
0xef4: V979 = ADD 0x20 V973
0xef9: V980 = 0x40
0xefb: V981 = M[0x40]
0xefe: V982 = SUB V979 V981
0xf00: LOG V981 V982 0xf3f16a15f074b71c5138107dfc7c63b80524d5411cb967caa97d8d9f12b2fd6b
---
Entry stack: []
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [S1, S0]

================================

Block 0xf01
[0xf01:0xfde]
---
Predecessors: [0xe91]
Successors: [0xfdf]
---
0xf01 JUMPDEST
0xf02 POP
0xf03 POP
0xf04 JUMP
0xf05 JUMPDEST
0xf06 PUSH1 0x1
0xf08 SLOAD
0xf09 DUP2
0xf0a JUMP
0xf0b JUMPDEST
0xf0c PUSH1 0x0
0xf0e PUSH1 0x0
0xf10 SWAP1
0xf11 SLOAD
0xf12 SWAP1
0xf13 PUSH2 0x100
0xf16 EXP
0xf17 SWAP1
0xf18 DIV
0xf19 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf2e AND
0xf2f DUP2
0xf30 JUMP
0xf31 JUMPDEST
0xf32 PUSH1 0x7
0xf34 PUSH1 0x20
0xf36 MSTORE
0xf37 DUP1
0xf38 PUSH1 0x0
0xf3a MSTORE
0xf3b PUSH1 0x40
0xf3d PUSH1 0x0
0xf3f SHA3
0xf40 PUSH1 0x0
0xf42 SWAP2
0xf43 POP
0xf44 SWAP1
0xf45 POP
0xf46 SLOAD
0xf47 DUP2
0xf48 JUMP
0xf49 JUMPDEST
0xf4a PUSH1 0x4
0xf4c PUSH1 0x0
0xf4e SWAP1
0xf4f SLOAD
0xf50 SWAP1
0xf51 PUSH2 0x100
0xf54 EXP
0xf55 SWAP1
0xf56 DIV
0xf57 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf6c AND
0xf6d DUP2
0xf6e JUMP
0xf6f JUMPDEST
0xf70 PUSH1 0xa
0xf72 PUSH1 0x20
0xf74 MSTORE
0xf75 DUP1
0xf76 PUSH1 0x0
0xf78 MSTORE
0xf79 PUSH1 0x40
0xf7b PUSH1 0x0
0xf7d SHA3
0xf7e PUSH1 0x0
0xf80 SWAP2
0xf81 POP
0xf82 SWAP1
0xf83 POP
0xf84 SLOAD
0xf85 DUP2
0xf86 JUMP
0xf87 JUMPDEST
0xf88 PUSH1 0x0
0xf8a PUSH1 0x0
0xf8c SWAP1
0xf8d SLOAD
0xf8e SWAP1
0xf8f PUSH2 0x100
0xf92 EXP
0xf93 SWAP1
0xf94 DIV
0xf95 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfaa AND
0xfab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfc0 AND
0xfc1 CALLER
0xfc2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfd7 AND
0xfd8 EQ
0xfd9 ISZERO
0xfda ISZERO
0xfdb PUSH2 0xce1
0xfde JUMPI
---
0xf01: JUMPDEST 
0xf04: JUMP S2
0xf05: JUMPDEST 
0xf06: V983 = 0x1
0xf08: V984 = S[0x1]
0xf0a: JUMP S0
0xf0b: JUMPDEST 
0xf0c: V985 = 0x0
0xf0e: V986 = 0x0
0xf11: V987 = S[0x0]
0xf13: V988 = 0x100
0xf16: V989 = EXP 0x100 0x0
0xf18: V990 = DIV V987 0x1
0xf19: V991 = 0xffffffffffffffffffffffffffffffffffffffff
0xf2e: V992 = AND 0xffffffffffffffffffffffffffffffffffffffff V990
0xf30: JUMP S0
0xf31: JUMPDEST 
0xf32: V993 = 0x7
0xf34: V994 = 0x20
0xf36: M[0x20] = 0x7
0xf38: V995 = 0x0
0xf3a: M[0x0] = S0
0xf3b: V996 = 0x40
0xf3d: V997 = 0x0
0xf3f: V998 = SHA3 0x0 0x40
0xf40: V999 = 0x0
0xf46: V1000 = S[V998]
0xf48: JUMP S1
0xf49: JUMPDEST 
0xf4a: V1001 = 0x4
0xf4c: V1002 = 0x0
0xf4f: V1003 = S[0x4]
0xf51: V1004 = 0x100
0xf54: V1005 = EXP 0x100 0x0
0xf56: V1006 = DIV V1003 0x1
0xf57: V1007 = 0xffffffffffffffffffffffffffffffffffffffff
0xf6c: V1008 = AND 0xffffffffffffffffffffffffffffffffffffffff V1006
0xf6e: JUMP S0
0xf6f: JUMPDEST 
0xf70: V1009 = 0xa
0xf72: V1010 = 0x20
0xf74: M[0x20] = 0xa
0xf76: V1011 = 0x0
0xf78: M[0x0] = S0
0xf79: V1012 = 0x40
0xf7b: V1013 = 0x0
0xf7d: V1014 = SHA3 0x0 0x40
0xf7e: V1015 = 0x0
0xf84: V1016 = S[V1014]
0xf86: JUMP S1
0xf87: JUMPDEST 
0xf88: V1017 = 0x0
0xf8a: V1018 = 0x0
0xf8d: V1019 = S[0x0]
0xf8f: V1020 = 0x100
0xf92: V1021 = EXP 0x100 0x0
0xf94: V1022 = DIV V1019 0x1
0xf95: V1023 = 0xffffffffffffffffffffffffffffffffffffffff
0xfaa: V1024 = AND 0xffffffffffffffffffffffffffffffffffffffff V1022
0xfab: V1025 = 0xffffffffffffffffffffffffffffffffffffffff
0xfc0: V1026 = AND 0xffffffffffffffffffffffffffffffffffffffff V1024
0xfc1: V1027 = CALLER
0xfc2: V1028 = 0xffffffffffffffffffffffffffffffffffffffff
0xfd7: V1029 = AND 0xffffffffffffffffffffffffffffffffffffffff V1027
0xfd8: V1030 = EQ V1029 V1026
0xfd9: V1031 = ISZERO V1030
0xfda: V1032 = ISZERO V1031
0xfdb: V1033 = 0xce1
0xfde: THROWI V1032
---
Entry stack: [S1, S0]
Stack pops: 130
Stack additions: []
Exit stack: []

================================

Block 0xfdf
[0xfdf:0x1056]
---
Predecessors: [0xf01]
Successors: [0x1057]
---
0xfdf PUSH1 0x0
0xfe1 PUSH1 0x0
0xfe3 REVERT
0xfe4 JUMPDEST
0xfe5 PUSH1 0x0
0xfe7 PUSH1 0x0
0xfe9 SWAP1
0xfea SLOAD
0xfeb SWAP1
0xfec PUSH2 0x100
0xfef EXP
0xff0 SWAP1
0xff1 DIV
0xff2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1007 AND
0x1008 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x101d AND
0x101e PUSH2 0x8fc
0x1021 ADDRESS
0x1022 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1037 AND
0x1038 BALANCE
0x1039 SWAP1
0x103a DUP2
0x103b ISZERO
0x103c MUL
0x103d SWAP1
0x103e PUSH1 0x40
0x1040 MLOAD
0x1041 DUP1
0x1042 SWAP1
0x1043 POP
0x1044 PUSH1 0x0
0x1046 PUSH1 0x40
0x1048 MLOAD
0x1049 DUP1
0x104a DUP4
0x104b SUB
0x104c DUP2
0x104d DUP6
0x104e DUP9
0x104f DUP9
0x1050 CALL
0x1051 SWAP4
0x1052 POP
0x1053 POP
0x1054 POP
0x1055 POP
0x1056 POP
---
0xfdf: V1034 = 0x0
0xfe1: V1035 = 0x0
0xfe3: REVERT 0x0 0x0
0xfe4: JUMPDEST 
0xfe5: V1036 = 0x0
0xfe7: V1037 = 0x0
0xfea: V1038 = S[0x0]
0xfec: V1039 = 0x100
0xfef: V1040 = EXP 0x100 0x0
0xff1: V1041 = DIV V1038 0x1
0xff2: V1042 = 0xffffffffffffffffffffffffffffffffffffffff
0x1007: V1043 = AND 0xffffffffffffffffffffffffffffffffffffffff V1041
0x1008: V1044 = 0xffffffffffffffffffffffffffffffffffffffff
0x101d: V1045 = AND 0xffffffffffffffffffffffffffffffffffffffff V1043
0x101e: V1046 = 0x8fc
0x1021: V1047 = ADDRESS
0x1022: V1048 = 0xffffffffffffffffffffffffffffffffffffffff
0x1037: V1049 = AND 0xffffffffffffffffffffffffffffffffffffffff V1047
0x1038: V1050 = BALANCE V1049
0x103b: V1051 = ISZERO V1050
0x103c: V1052 = MUL V1051 0x8fc
0x103e: V1053 = 0x40
0x1040: V1054 = M[0x40]
0x1044: V1055 = 0x0
0x1046: V1056 = 0x40
0x1048: V1057 = M[0x40]
0x104b: V1058 = SUB V1054 V1057
0x1050: V1059 = CALL V1052 V1045 V1050 V1057 V1058 V1057 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1057
[0x1057:0x1057]
---
Predecessors: [0xfdf]
Successors: [0x1058]
---
0x1057 JUMPDEST
---
0x1057: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1058
[0x1058:0x10f8]
---
Predecessors: [0x1057]
Successors: [0x10f9]
---
0x1058 JUMPDEST
0x1059 JUMP
0x105a JUMPDEST
0x105b PUSH1 0x3
0x105d PUSH1 0x0
0x105f SWAP1
0x1060 SLOAD
0x1061 SWAP1
0x1062 PUSH2 0x100
0x1065 EXP
0x1066 SWAP1
0x1067 DIV
0x1068 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x107d AND
0x107e DUP2
0x107f JUMP
0x1080 JUMPDEST
0x1081 PUSH1 0x8
0x1083 PUSH1 0x20
0x1085 MSTORE
0x1086 DUP2
0x1087 PUSH1 0x0
0x1089 MSTORE
0x108a PUSH1 0x40
0x108c PUSH1 0x0
0x108e SHA3
0x108f PUSH1 0x20
0x1091 MSTORE
0x1092 DUP1
0x1093 PUSH1 0x0
0x1095 MSTORE
0x1096 PUSH1 0x40
0x1098 PUSH1 0x0
0x109a SHA3
0x109b PUSH1 0x0
0x109d SWAP2
0x109e POP
0x109f SWAP2
0x10a0 POP
0x10a1 SWAP1
0x10a2 SLOAD
0x10a3 SWAP1
0x10a4 PUSH2 0x100
0x10a7 EXP
0x10a8 SWAP1
0x10a9 DIV
0x10aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10bf AND
0x10c0 DUP2
0x10c1 JUMP
0x10c2 JUMPDEST
0x10c3 PUSH1 0x2
0x10c5 SLOAD
0x10c6 DUP2
0x10c7 JUMP
0x10c8 JUMPDEST
0x10c9 DUP3
0x10ca DUP1
0x10cb SLOAD
0x10cc PUSH1 0x1
0x10ce DUP2
0x10cf PUSH1 0x1
0x10d1 AND
0x10d2 ISZERO
0x10d3 PUSH2 0x100
0x10d6 MUL
0x10d7 SUB
0x10d8 AND
0x10d9 PUSH1 0x2
0x10db SWAP1
0x10dc DIV
0x10dd SWAP1
0x10de PUSH1 0x0
0x10e0 MSTORE
0x10e1 PUSH1 0x20
0x10e3 PUSH1 0x0
0x10e5 SHA3
0x10e6 SWAP1
0x10e7 PUSH1 0x1f
0x10e9 ADD
0x10ea PUSH1 0x20
0x10ec SWAP1
0x10ed DIV
0x10ee DUP2
0x10ef ADD
0x10f0 SWAP3
0x10f1 DUP3
0x10f2 PUSH1 0x1f
0x10f4 LT
0x10f5 PUSH2 0xe06
0x10f8 JUMPI
---
0x1058: JUMPDEST 
0x1059: JUMP S0
0x105a: JUMPDEST 
0x105b: V1060 = 0x3
0x105d: V1061 = 0x0
0x1060: V1062 = S[0x3]
0x1062: V1063 = 0x100
0x1065: V1064 = EXP 0x100 0x0
0x1067: V1065 = DIV V1062 0x1
0x1068: V1066 = 0xffffffffffffffffffffffffffffffffffffffff
0x107d: V1067 = AND 0xffffffffffffffffffffffffffffffffffffffff V1065
0x107f: JUMP S0
0x1080: JUMPDEST 
0x1081: V1068 = 0x8
0x1083: V1069 = 0x20
0x1085: M[0x20] = 0x8
0x1087: V1070 = 0x0
0x1089: M[0x0] = S1
0x108a: V1071 = 0x40
0x108c: V1072 = 0x0
0x108e: V1073 = SHA3 0x0 0x40
0x108f: V1074 = 0x20
0x1091: M[0x20] = V1073
0x1093: V1075 = 0x0
0x1095: M[0x0] = S0
0x1096: V1076 = 0x40
0x1098: V1077 = 0x0
0x109a: V1078 = SHA3 0x0 0x40
0x109b: V1079 = 0x0
0x10a2: V1080 = S[V1078]
0x10a4: V1081 = 0x100
0x10a7: V1082 = EXP 0x100 0x0
0x10a9: V1083 = DIV V1080 0x1
0x10aa: V1084 = 0xffffffffffffffffffffffffffffffffffffffff
0x10bf: V1085 = AND 0xffffffffffffffffffffffffffffffffffffffff V1083
0x10c1: JUMP S2
0x10c2: JUMPDEST 
0x10c3: V1086 = 0x2
0x10c5: V1087 = S[0x2]
0x10c7: JUMP S0
0x10c8: JUMPDEST 
0x10cb: V1088 = S[S2]
0x10cc: V1089 = 0x1
0x10cf: V1090 = 0x1
0x10d1: V1091 = AND 0x1 V1088
0x10d2: V1092 = ISZERO V1091
0x10d3: V1093 = 0x100
0x10d6: V1094 = MUL 0x100 V1092
0x10d7: V1095 = SUB V1094 0x1
0x10d8: V1096 = AND V1095 V1088
0x10d9: V1097 = 0x2
0x10dc: V1098 = DIV V1096 0x2
0x10de: V1099 = 0x0
0x10e0: M[0x0] = S2
0x10e1: V1100 = 0x20
0x10e3: V1101 = 0x0
0x10e5: V1102 = SHA3 0x0 0x20
0x10e7: V1103 = 0x1f
0x10e9: V1104 = ADD 0x1f V1098
0x10ea: V1105 = 0x20
0x10ed: V1106 = DIV V1104 0x20
0x10ef: V1107 = ADD V1102 V1106
0x10f2: V1108 = 0x1f
0x10f4: V1109 = LT 0x1f S0
0x10f5: V1110 = 0xe06
0x10f8: THROWI V1109
---
Entry stack: []
Stack pops: 2
Stack additions: [S1, V1102, S0, V1107, S2]
Exit stack: []

================================

Block 0x10f9
[0x10f9:0x1117]
---
Predecessors: [0x1058]
Successors: [0x1118]
---
0x10f9 DUP1
0x10fa MLOAD
0x10fb PUSH1 0xff
0x10fd NOT
0x10fe AND
0x10ff DUP4
0x1100 DUP1
0x1101 ADD
0x1102 OR
0x1103 DUP6
0x1104 SSTORE
0x1105 PUSH2 0xe34
0x1108 JUMP
0x1109 JUMPDEST
0x110a DUP3
0x110b DUP1
0x110c ADD
0x110d PUSH1 0x1
0x110f ADD
0x1110 DUP6
0x1111 SSTORE
0x1112 DUP3
0x1113 ISZERO
0x1114 PUSH2 0xe34
0x1117 JUMPI
---
0x10fa: V1111 = M[S0]
0x10fb: V1112 = 0xff
0x10fd: V1113 = NOT 0xff
0x10fe: V1114 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1111
0x1101: V1115 = ADD S2 S2
0x1102: V1116 = OR V1115 V1114
0x1104: S[S4] = V1116
0x1105: V1117 = 0xe34
0x1108: THROW 
0x1109: JUMPDEST 
0x110c: V1118 = ADD S2 S2
0x110d: V1119 = 0x1
0x110f: V1120 = ADD 0x1 V1118
0x1111: S[S4] = V1120
0x1113: V1121 = ISZERO S2
0x1114: V1122 = 0xe34
0x1117: THROWI V1121
---
Entry stack: [S4, V1107, S2, V1102, S0]
Stack pops: 5
Stack additions: [S0, S1, S2, S3, S4]
Exit stack: []

================================

Block 0x1118
[0x1118:0x111a]
---
Predecessors: [0x10f9]
Successors: [0x111b]
---
0x1118 SWAP2
0x1119 DUP3
0x111a ADD
---
0x111a: V1123 = ADD S0 S2
---
Entry stack: [S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S0, S1, V1123]
Exit stack: [S4, S3, S0, S1, V1123]

================================

Block 0x111b
[0x111b:0x1123]
---
Predecessors: [0x1118]
Successors: [0x1124]
---
0x111b JUMPDEST
0x111c DUP3
0x111d DUP2
0x111e GT
0x111f ISZERO
0x1120 PUSH2 0xe33
0x1123 JUMPI
---
0x111b: JUMPDEST 
0x111e: V1124 = GT V1123 S2
0x111f: V1125 = ISZERO V1124
0x1120: V1126 = 0xe33
0x1123: THROWI V1125
---
Entry stack: [S4, S3, S2, S1, V1123]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S4, S3, S2, S1, V1123]

================================

Block 0x1124
[0x1124:0x1136]
---
Predecessors: [0x111b]
Successors: [0x1137]
---
0x1124 DUP3
0x1125 MLOAD
0x1126 DUP3
0x1127 SSTORE
0x1128 SWAP2
0x1129 PUSH1 0x20
0x112b ADD
0x112c SWAP2
0x112d SWAP1
0x112e PUSH1 0x1
0x1130 ADD
0x1131 SWAP1
0x1132 PUSH2 0xe18
0x1135 JUMP
0x1136 JUMPDEST
---
0x1125: V1127 = M[S2]
0x1127: S[S1] = V1127
0x1129: V1128 = 0x20
0x112b: V1129 = ADD 0x20 S2
0x112e: V1130 = 0x1
0x1130: V1131 = ADD 0x1 S1
0x1132: V1132 = 0xe18
0x1135: THROW 
0x1136: JUMPDEST 
---
Entry stack: [S4, S3, S2, S1, V1123]
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0x1137
[0x1137:0x114d]
---
Predecessors: [0x1124]
Successors: [0x114e]
---
0x1137 JUMPDEST
0x1138 POP
0x1139 SWAP1
0x113a POP
0x113b PUSH2 0xe41
0x113e SWAP2
0x113f SWAP1
0x1140 PUSH2 0xe45
0x1143 JUMP
0x1144 JUMPDEST
0x1145 POP
0x1146 SWAP1
0x1147 JUMP
0x1148 JUMPDEST
0x1149 PUSH2 0xe67
0x114c SWAP2
0x114d SWAP1
---
0x1137: JUMPDEST 
0x113b: V1133 = 0xe41
0x1140: V1134 = 0xe45
0x1143: THROW 
0x1144: JUMPDEST 
0x1147: JUMP S2
0x1148: JUMPDEST 
0x1149: V1135 = 0xe67
---
Entry stack: []
Stack pops: 9
Stack additions: [S0, S1, 0xe67]
Exit stack: []

================================

Block 0x114e
[0x114e:0x1156]
---
Predecessors: [0x1137]
Successors: [0x1157]
---
0x114e JUMPDEST
0x114f DUP1
0x1150 DUP3
0x1151 GT
0x1152 ISZERO
0x1153 PUSH2 0xe63
0x1156 JUMPI
---
0x114e: JUMPDEST 
0x1151: V1136 = GT S1 S0
0x1152: V1137 = ISZERO V1136
0x1153: V1138 = 0xe63
0x1156: THROWI V1137
---
Entry stack: [0xe67, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [0xe67, S1, S0]

================================

Block 0x1157
[0x1157:0x1198]
---
Predecessors: [0x114e]
Successors: []
---
0x1157 PUSH1 0x0
0x1159 DUP2
0x115a PUSH1 0x0
0x115c SWAP1
0x115d SSTORE
0x115e POP
0x115f PUSH1 0x1
0x1161 ADD
0x1162 PUSH2 0xe4b
0x1165 JUMP
0x1166 JUMPDEST
0x1167 POP
0x1168 SWAP1
0x1169 JUMP
0x116a JUMPDEST
0x116b SWAP1
0x116c JUMP
0x116d STOP
0x116e LOG1
0x116f PUSH6 0x627a7a723058
0x1176 SHA3
0x1177 MISSING 0xbf
0x1178 MISSING 0xe0
0x1179 PUSH13 0xccc4359f18caf57e191b3cfed
0x1187 BLOCKHASH
0x1188 DUP2
0x1189 SWAP10
0x118a MISSING 0x2c
0x118b MISSING 0xfc
0x118c SLT
0x118d BALANCE
0x118e CREATE
0x118f MISSING 0xc5
0x1190 MISSING 0xf9
0x1191 MISSING 0xde
0x1192 MSTORE8
0x1193 GASPRICE
0x1194 MISSING 0xf7
0x1195 MISSING 0xb9
0x1196 MISSING 0xa5
0x1197 STOP
0x1198 MISSING 0x29
---
0x1157: V1139 = 0x0
0x115a: V1140 = 0x0
0x115d: S[S0] = 0x0
0x115f: V1141 = 0x1
0x1161: V1142 = ADD 0x1 S0
0x1162: V1143 = 0xe4b
0x1165: THROW 
0x1166: JUMPDEST 
0x1169: JUMP S2
0x116a: JUMPDEST 
0x116c: JUMP S1
0x116d: STOP 
0x116e: LOG S0 S1 S2
0x116f: V1144 = 0x627a7a723058
0x1176: V1145 = SHA3 0x627a7a723058 S3
0x1177: MISSING 0xbf
0x1178: MISSING 0xe0
0x1179: V1146 = 0xccc4359f18caf57e191b3cfed
0x1187: V1147 = BLOCKHASH 0xccc4359f18caf57e191b3cfed
0x118a: MISSING 0x2c
0x118b: MISSING 0xfc
0x118c: V1148 = SLT S0 S1
0x118d: V1149 = BALANCE V1148
0x118e: V1150 = CREATE V1149 S2 S3
0x118f: MISSING 0xc5
0x1190: MISSING 0xf9
0x1191: MISSING 0xde
0x1192: M8[S0] = S1
0x1193: V1151 = GASPRICE
0x1194: MISSING 0xf7
0x1195: MISSING 0xb9
0x1196: MISSING 0xa5
0x1197: STOP 
0x1198: MISSING 0x29
---
Entry stack: [0xe67, S1, S0]
Stack pops: 824
Stack additions: []
Exit stack: []

================================

Function 0:
Public function signature: 0x13332c6c
Entry block: 0x1fa
Exit block: 0x20a
Body: 0x1fa, 0x201, 0x202, 0x20a, 0x25e

Function 1:
Public function signature: 0xc2052403
Entry block: 0x24c
Exit block: 0x25c
Body: 0x24c, 0x253, 0x254, 0x25c, 0x284, 0x2d5

Function 2:
Public fallback function
Entry block: 0x4a
Exit block: 0x1f8
Body: 0x4a, 0x4e, 0x119, 0x11a, 0x126, 0x127, 0x1e4, 0x1e5, 0x1f1, 0x1f2, 0x1f6, 0x1f8

