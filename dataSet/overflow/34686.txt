Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x6b]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x6b
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x6b
0xa: JUMPI 0x6b V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x6d]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0xa6fbb05
0x3a EQ
0x3b PUSH2 0x6d
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0xa6fbb05
0x3a: V12 = EQ 0xa6fbb05 V10
0x3b: V13 = 0x6d
0x3e: JUMPI 0x6d V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x89]
---
0x3f DUP1
0x40 PUSH4 0x181ffc5f
0x45 EQ
0x46 PUSH2 0x89
0x49 JUMPI
---
0x40: V14 = 0x181ffc5f
0x45: V15 = EQ 0x181ffc5f V10
0x46: V16 = 0x89
0x49: JUMPI 0x89 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0xe6]
---
0x4a DUP1
0x4b PUSH4 0x31fd725a
0x50 EQ
0x51 PUSH2 0xe6
0x54 JUMPI
---
0x4b: V17 = 0x31fd725a
0x50: V18 = EQ 0x31fd725a V10
0x51: V19 = 0xe6
0x54: JUMPI 0xe6 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x10d]
---
0x55 DUP1
0x56 PUSH4 0x87f24484
0x5b EQ
0x5c PUSH2 0x10d
0x5f JUMPI
---
0x56: V20 = 0x87f24484
0x5b: V21 = EQ 0x87f24484 V10
0x5c: V22 = 0x10d
0x5f: JUMPI 0x10d V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x13e]
---
0x60 DUP1
0x61 PUSH4 0xb456ecc5
0x66 EQ
0x67 PUSH2 0x13e
0x6a JUMPI
---
0x61: V23 = 0xb456ecc5
0x66: V24 = EQ 0xb456ecc5 V10
0x67: V25 = 0x13e
0x6a: JUMPI 0x13e V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x6c]
---
Predecessors: [0x0, 0x60]
Successors: []
---
0x6b JUMPDEST
0x6c STOP
---
0x6b: JUMPDEST 
0x6c: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x6d
[0x6d:0x86]
---
Predecessors: [0xb]
Successors: [0x1b7]
---
0x6d JUMPDEST
0x6e PUSH2 0x87
0x71 PUSH1 0x4
0x73 DUP1
0x74 DUP1
0x75 CALLDATALOAD
0x76 PUSH1 0x0
0x78 NOT
0x79 AND
0x7a SWAP1
0x7b PUSH1 0x20
0x7d ADD
0x7e SWAP1
0x7f SWAP2
0x80 SWAP1
0x81 POP
0x82 POP
0x83 PUSH2 0x1b7
0x86 JUMP
---
0x6d: JUMPDEST 
0x6e: V26 = 0x87
0x71: V27 = 0x4
0x75: V28 = CALLDATALOAD 0x4
0x76: V29 = 0x0
0x78: V30 = NOT 0x0
0x79: V31 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V28
0x7b: V32 = 0x20
0x7d: V33 = ADD 0x20 0x4
0x83: V34 = 0x1b7
0x86: JUMP 0x1b7
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x87, V31]
Exit stack: [V10, 0x87, V31]

================================

Block 0x87
[0x87:0x88]
---
Predecessors: [0x1ec]
Successors: []
---
0x87 JUMPDEST
0x88 STOP
---
0x87: JUMPDEST 
0x88: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x89
[0x89:0x8f]
---
Predecessors: [0x3f]
Successors: [0x90, 0x94]
---
0x89 JUMPDEST
0x8a CALLVALUE
0x8b ISZERO
0x8c PUSH2 0x94
0x8f JUMPI
---
0x89: JUMPDEST 
0x8a: V35 = CALLVALUE
0x8b: V36 = ISZERO V35
0x8c: V37 = 0x94
0x8f: JUMPI 0x94 V36
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x90
[0x90:0x93]
---
Predecessors: [0x89]
Successors: []
---
0x90 PUSH1 0x0
0x92 DUP1
0x93 REVERT
---
0x90: V38 = 0x0
0x93: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x94
[0x94:0xe3]
---
Predecessors: [0x89]
Successors: [0x1ef]
---
0x94 JUMPDEST
0x95 PUSH2 0xe4
0x98 PUSH1 0x4
0x9a DUP1
0x9b DUP1
0x9c CALLDATALOAD
0x9d SWAP1
0x9e PUSH1 0x20
0xa0 ADD
0xa1 SWAP1
0xa2 DUP3
0xa3 ADD
0xa4 DUP1
0xa5 CALLDATALOAD
0xa6 SWAP1
0xa7 PUSH1 0x20
0xa9 ADD
0xaa SWAP1
0xab DUP1
0xac DUP1
0xad PUSH1 0x1f
0xaf ADD
0xb0 PUSH1 0x20
0xb2 DUP1
0xb3 SWAP2
0xb4 DIV
0xb5 MUL
0xb6 PUSH1 0x20
0xb8 ADD
0xb9 PUSH1 0x40
0xbb MLOAD
0xbc SWAP1
0xbd DUP2
0xbe ADD
0xbf PUSH1 0x40
0xc1 MSTORE
0xc2 DUP1
0xc3 SWAP4
0xc4 SWAP3
0xc5 SWAP2
0xc6 SWAP1
0xc7 DUP2
0xc8 DUP2
0xc9 MSTORE
0xca PUSH1 0x20
0xcc ADD
0xcd DUP4
0xce DUP4
0xcf DUP1
0xd0 DUP3
0xd1 DUP5
0xd2 CALLDATACOPY
0xd3 DUP3
0xd4 ADD
0xd5 SWAP2
0xd6 POP
0xd7 POP
0xd8 POP
0xd9 POP
0xda POP
0xdb POP
0xdc SWAP2
0xdd SWAP1
0xde POP
0xdf POP
0xe0 PUSH2 0x1ef
0xe3 JUMP
---
0x94: JUMPDEST 
0x95: V39 = 0xe4
0x98: V40 = 0x4
0x9c: V41 = CALLDATALOAD 0x4
0x9e: V42 = 0x20
0xa0: V43 = ADD 0x20 0x4
0xa3: V44 = ADD 0x4 V41
0xa5: V45 = CALLDATALOAD V44
0xa7: V46 = 0x20
0xa9: V47 = ADD 0x20 V44
0xad: V48 = 0x1f
0xaf: V49 = ADD 0x1f V45
0xb0: V50 = 0x20
0xb4: V51 = DIV V49 0x20
0xb5: V52 = MUL V51 0x20
0xb6: V53 = 0x20
0xb8: V54 = ADD 0x20 V52
0xb9: V55 = 0x40
0xbb: V56 = M[0x40]
0xbe: V57 = ADD V56 V54
0xbf: V58 = 0x40
0xc1: M[0x40] = V57
0xc9: M[V56] = V45
0xca: V59 = 0x20
0xcc: V60 = ADD 0x20 V56
0xd2: CALLDATACOPY V60 V47 V45
0xd4: V61 = ADD V60 V45
0xe0: V62 = 0x1ef
0xe3: JUMP 0x1ef
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xe4, V56]
Exit stack: [V10, 0xe4, V56]

================================

Block 0xe4
[0xe4:0xe5]
---
Predecessors: [0x2bb]
Successors: []
---
0xe4 JUMPDEST
0xe5 STOP
---
0xe4: JUMPDEST 
0xe5: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xe6
[0xe6:0xec]
---
Predecessors: [0x4a]
Successors: [0xed, 0xf1]
---
0xe6 JUMPDEST
0xe7 CALLVALUE
0xe8 ISZERO
0xe9 PUSH2 0xf1
0xec JUMPI
---
0xe6: JUMPDEST 
0xe7: V63 = CALLVALUE
0xe8: V64 = ISZERO V63
0xe9: V65 = 0xf1
0xec: JUMPI 0xf1 V64
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xed
[0xed:0xf0]
---
Predecessors: [0xe6]
Successors: []
---
0xed PUSH1 0x0
0xef DUP1
0xf0 REVERT
---
0xed: V66 = 0x0
0xf0: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xf1
[0xf1:0x10a]
---
Predecessors: [0xe6]
Successors: [0x2be]
---
0xf1 JUMPDEST
0xf2 PUSH2 0x10b
0xf5 PUSH1 0x4
0xf7 DUP1
0xf8 DUP1
0xf9 CALLDATALOAD
0xfa PUSH1 0x0
0xfc NOT
0xfd AND
0xfe SWAP1
0xff PUSH1 0x20
0x101 ADD
0x102 SWAP1
0x103 SWAP2
0x104 SWAP1
0x105 POP
0x106 POP
0x107 PUSH2 0x2be
0x10a JUMP
---
0xf1: JUMPDEST 
0xf2: V67 = 0x10b
0xf5: V68 = 0x4
0xf9: V69 = CALLDATALOAD 0x4
0xfa: V70 = 0x0
0xfc: V71 = NOT 0x0
0xfd: V72 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V69
0xff: V73 = 0x20
0x101: V74 = ADD 0x20 0x4
0x107: V75 = 0x2be
0x10a: JUMP 0x2be
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x10b, V72]
Exit stack: [V10, 0x10b, V72]

================================

Block 0x10b
[0x10b:0x10c]
---
Predecessors: [0x2eb]
Successors: []
---
0x10b JUMPDEST
0x10c STOP
---
0x10b: JUMPDEST 
0x10c: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x10d
[0x10d:0x113]
---
Predecessors: [0x55]
Successors: [0x114, 0x118]
---
0x10d JUMPDEST
0x10e CALLVALUE
0x10f ISZERO
0x110 PUSH2 0x118
0x113 JUMPI
---
0x10d: JUMPDEST 
0x10e: V76 = CALLVALUE
0x10f: V77 = ISZERO V76
0x110: V78 = 0x118
0x113: JUMPI 0x118 V77
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x114
[0x114:0x117]
---
Predecessors: [0x10d]
Successors: []
---
0x114 PUSH1 0x0
0x116 DUP1
0x117 REVERT
---
0x114: V79 = 0x0
0x117: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x118
[0x118:0x11f]
---
Predecessors: [0x10d]
Successors: [0x2ee]
---
0x118 JUMPDEST
0x119 PUSH2 0x120
0x11c PUSH2 0x2ee
0x11f JUMP
---
0x118: JUMPDEST 
0x119: V80 = 0x120
0x11c: V81 = 0x2ee
0x11f: JUMP 0x2ee
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x120]
Exit stack: [V10, 0x120]

================================

Block 0x120
[0x120:0x13d]
---
Predecessors: [0x2ee]
Successors: []
---
0x120 JUMPDEST
0x121 PUSH1 0x40
0x123 MLOAD
0x124 DUP1
0x125 DUP3
0x126 PUSH1 0x0
0x128 NOT
0x129 AND
0x12a PUSH1 0x0
0x12c NOT
0x12d AND
0x12e DUP2
0x12f MSTORE
0x130 PUSH1 0x20
0x132 ADD
0x133 SWAP2
0x134 POP
0x135 POP
0x136 PUSH1 0x40
0x138 MLOAD
0x139 DUP1
0x13a SWAP2
0x13b SUB
0x13c SWAP1
0x13d RETURN
---
0x120: JUMPDEST 
0x121: V82 = 0x40
0x123: V83 = M[0x40]
0x126: V84 = 0x0
0x128: V85 = NOT 0x0
0x129: V86 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V248
0x12a: V87 = 0x0
0x12c: V88 = NOT 0x0
0x12d: V89 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V86
0x12f: M[V83] = V89
0x130: V90 = 0x20
0x132: V91 = ADD 0x20 V83
0x136: V92 = 0x40
0x138: V93 = M[0x40]
0x13b: V94 = SUB V91 V93
0x13d: RETURN V93 V94
---
Entry stack: [V10, 0x120, V248]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x120]

================================

Block 0x13e
[0x13e:0x144]
---
Predecessors: [0x60]
Successors: [0x145, 0x149]
---
0x13e JUMPDEST
0x13f CALLVALUE
0x140 ISZERO
0x141 PUSH2 0x149
0x144 JUMPI
---
0x13e: JUMPDEST 
0x13f: V95 = CALLVALUE
0x140: V96 = ISZERO V95
0x141: V97 = 0x149
0x144: JUMPI 0x149 V96
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x145
[0x145:0x148]
---
Predecessors: [0x13e]
Successors: []
---
0x145 PUSH1 0x0
0x147 DUP1
0x148 REVERT
---
0x145: V98 = 0x0
0x148: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x149
[0x149:0x198]
---
Predecessors: [0x13e]
Successors: [0x2f4]
---
0x149 JUMPDEST
0x14a PUSH2 0x199
0x14d PUSH1 0x4
0x14f DUP1
0x150 DUP1
0x151 CALLDATALOAD
0x152 SWAP1
0x153 PUSH1 0x20
0x155 ADD
0x156 SWAP1
0x157 DUP3
0x158 ADD
0x159 DUP1
0x15a CALLDATALOAD
0x15b SWAP1
0x15c PUSH1 0x20
0x15e ADD
0x15f SWAP1
0x160 DUP1
0x161 DUP1
0x162 PUSH1 0x1f
0x164 ADD
0x165 PUSH1 0x20
0x167 DUP1
0x168 SWAP2
0x169 DIV
0x16a MUL
0x16b PUSH1 0x20
0x16d ADD
0x16e PUSH1 0x40
0x170 MLOAD
0x171 SWAP1
0x172 DUP2
0x173 ADD
0x174 PUSH1 0x40
0x176 MSTORE
0x177 DUP1
0x178 SWAP4
0x179 SWAP3
0x17a SWAP2
0x17b SWAP1
0x17c DUP2
0x17d DUP2
0x17e MSTORE
0x17f PUSH1 0x20
0x181 ADD
0x182 DUP4
0x183 DUP4
0x184 DUP1
0x185 DUP3
0x186 DUP5
0x187 CALLDATACOPY
0x188 DUP3
0x189 ADD
0x18a SWAP2
0x18b POP
0x18c POP
0x18d POP
0x18e POP
0x18f POP
0x190 POP
0x191 SWAP2
0x192 SWAP1
0x193 POP
0x194 POP
0x195 PUSH2 0x2f4
0x198 JUMP
---
0x149: JUMPDEST 
0x14a: V99 = 0x199
0x14d: V100 = 0x4
0x151: V101 = CALLDATALOAD 0x4
0x153: V102 = 0x20
0x155: V103 = ADD 0x20 0x4
0x158: V104 = ADD 0x4 V101
0x15a: V105 = CALLDATALOAD V104
0x15c: V106 = 0x20
0x15e: V107 = ADD 0x20 V104
0x162: V108 = 0x1f
0x164: V109 = ADD 0x1f V105
0x165: V110 = 0x20
0x169: V111 = DIV V109 0x20
0x16a: V112 = MUL V111 0x20
0x16b: V113 = 0x20
0x16d: V114 = ADD 0x20 V112
0x16e: V115 = 0x40
0x170: V116 = M[0x40]
0x173: V117 = ADD V116 V114
0x174: V118 = 0x40
0x176: M[0x40] = V117
0x17e: M[V116] = V105
0x17f: V119 = 0x20
0x181: V120 = ADD 0x20 V116
0x187: CALLDATACOPY V120 V107 V105
0x189: V121 = ADD V120 V105
0x195: V122 = 0x2f4
0x198: JUMP 0x2f4
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x199, V116]
Exit stack: [V10, 0x199, V116]

================================

Block 0x199
[0x199:0x1b6]
---
Predecessors: [0x32c]
Successors: []
---
0x199 JUMPDEST
0x19a PUSH1 0x40
0x19c MLOAD
0x19d DUP1
0x19e DUP3
0x19f PUSH1 0x0
0x1a1 NOT
0x1a2 AND
0x1a3 PUSH1 0x0
0x1a5 NOT
0x1a6 AND
0x1a7 DUP2
0x1a8 MSTORE
0x1a9 PUSH1 0x20
0x1ab ADD
0x1ac SWAP2
0x1ad POP
0x1ae POP
0x1af PUSH1 0x40
0x1b1 MLOAD
0x1b2 DUP1
0x1b3 SWAP2
0x1b4 SUB
0x1b5 SWAP1
0x1b6 RETURN
---
0x199: JUMPDEST 
0x19a: V123 = 0x40
0x19c: V124 = M[0x40]
0x19f: V125 = 0x0
0x1a1: V126 = NOT 0x0
0x1a2: V127 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V284
0x1a3: V128 = 0x0
0x1a5: V129 = NOT 0x0
0x1a6: V130 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V127
0x1a8: M[V124] = V130
0x1a9: V131 = 0x20
0x1ab: V132 = ADD 0x20 V124
0x1af: V133 = 0x40
0x1b1: V134 = M[0x40]
0x1b4: V135 = SUB V132 V134
0x1b6: RETURN V134 V135
---
Entry stack: [V10, V284]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x1b7
[0x1b7:0x1cd]
---
Predecessors: [0x6d]
Successors: [0x1ce, 0x1db]
---
0x1b7 JUMPDEST
0x1b8 PUSH1 0x0
0x1ba DUP1
0x1bb SWAP1
0x1bc SLOAD
0x1bd SWAP1
0x1be PUSH2 0x100
0x1c1 EXP
0x1c2 SWAP1
0x1c3 DIV
0x1c4 PUSH1 0xff
0x1c6 AND
0x1c7 ISZERO
0x1c8 DUP1
0x1c9 ISZERO
0x1ca PUSH2 0x1db
0x1cd JUMPI
---
0x1b7: JUMPDEST 
0x1b8: V136 = 0x0
0x1bc: V137 = S[0x0]
0x1be: V138 = 0x100
0x1c1: V139 = EXP 0x100 0x0
0x1c3: V140 = DIV V137 0x1
0x1c4: V141 = 0xff
0x1c6: V142 = AND 0xff V140
0x1c7: V143 = ISZERO V142
0x1c9: V144 = ISZERO V143
0x1ca: V145 = 0x1db
0x1cd: JUMPI 0x1db V144
---
Entry stack: [V10, 0x87, V31]
Stack pops: 0
Stack additions: [V143]
Exit stack: [V10, 0x87, V31, V143]

================================

Block 0x1ce
[0x1ce:0x1da]
---
Predecessors: [0x1b7]
Successors: [0x1db]
---
0x1ce POP
0x1cf PUSH8 0xde0b6b3a7640000
0x1d8 CALLVALUE
0x1d9 LT
0x1da ISZERO
---
0x1cf: V146 = 0xde0b6b3a7640000
0x1d8: V147 = CALLVALUE
0x1d9: V148 = LT V147 0xde0b6b3a7640000
0x1da: V149 = ISZERO V148
---
Entry stack: [V10, 0x87, V31, V143]
Stack pops: 1
Stack additions: [V149]
Exit stack: [V10, 0x87, V31, V149]

================================

Block 0x1db
[0x1db:0x1e0]
---
Predecessors: [0x1b7, 0x1ce]
Successors: [0x1e1, 0x1ec]
---
0x1db JUMPDEST
0x1dc ISZERO
0x1dd PUSH2 0x1ec
0x1e0 JUMPI
---
0x1db: JUMPDEST 
0x1dc: V150 = ISZERO S0
0x1dd: V151 = 0x1ec
0x1e0: JUMPI 0x1ec V150
---
Entry stack: [V10, 0x87, V31, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x87, V31]

================================

Block 0x1e1
[0x1e1:0x1eb]
---
Predecessors: [0x1db]
Successors: [0x1ec]
---
0x1e1 DUP1
0x1e2 PUSH1 0x1
0x1e4 DUP2
0x1e5 PUSH1 0x0
0x1e7 NOT
0x1e8 AND
0x1e9 SWAP1
0x1ea SSTORE
0x1eb POP
---
0x1e2: V152 = 0x1
0x1e5: V153 = 0x0
0x1e7: V154 = NOT 0x0
0x1e8: V155 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V31
0x1ea: S[0x1] = V155
---
Entry stack: [V10, 0x87, V31]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x87, V31]

================================

Block 0x1ec
[0x1ec:0x1ee]
---
Predecessors: [0x1db, 0x1e1]
Successors: [0x87]
---
0x1ec JUMPDEST
0x1ed POP
0x1ee JUMP
---
0x1ec: JUMPDEST 
0x1ee: JUMP 0x87
---
Entry stack: [V10, 0x87, V31]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ef
[0x1ef:0x1ff]
---
Predecessors: [0x94]
Successors: [0x200]
---
0x1ef JUMPDEST
0x1f0 DUP1
0x1f1 PUSH1 0x40
0x1f3 MLOAD
0x1f4 DUP1
0x1f5 DUP3
0x1f6 DUP1
0x1f7 MLOAD
0x1f8 SWAP1
0x1f9 PUSH1 0x20
0x1fb ADD
0x1fc SWAP1
0x1fd DUP1
0x1fe DUP4
0x1ff DUP4
---
0x1ef: JUMPDEST 
0x1f1: V156 = 0x40
0x1f3: V157 = M[0x40]
0x1f7: V158 = M[V56]
0x1f9: V159 = 0x20
0x1fb: V160 = ADD 0x20 V56
---
Entry stack: [V10, 0xe4, V56]
Stack pops: 1
Stack additions: [S0, S0, V157, V157, V160, V158, V158, V157, V160]
Exit stack: [V10, 0xe4, V56, V56, V157, V157, V160, V158, V158, V157, V160]

================================

Block 0x200
[0x200:0x20a]
---
Predecessors: [0x1ef, 0x20b]
Successors: [0x20b, 0x225]
---
0x200 JUMPDEST
0x201 PUSH1 0x20
0x203 DUP4
0x204 LT
0x205 ISZERO
0x206 ISZERO
0x207 PUSH2 0x225
0x20a JUMPI
---
0x200: JUMPDEST 
0x201: V161 = 0x20
0x204: V162 = LT S2 0x20
0x205: V163 = ISZERO V162
0x206: V164 = ISZERO V163
0x207: V165 = 0x225
0x20a: JUMPI 0x225 V164
---
Entry stack: [V10, 0xe4, V56, V56, V157, V157, V160, V158, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0xe4, V56, V56, V157, V157, V160, V158, S2, S1, S0]

================================

Block 0x20b
[0x20b:0x224]
---
Predecessors: [0x200]
Successors: [0x200]
---
0x20b DUP1
0x20c MLOAD
0x20d DUP3
0x20e MSTORE
0x20f PUSH1 0x20
0x211 DUP3
0x212 ADD
0x213 SWAP2
0x214 POP
0x215 PUSH1 0x20
0x217 DUP2
0x218 ADD
0x219 SWAP1
0x21a POP
0x21b PUSH1 0x20
0x21d DUP4
0x21e SUB
0x21f SWAP3
0x220 POP
0x221 PUSH2 0x200
0x224 JUMP
---
0x20c: V166 = M[S0]
0x20e: M[S1] = V166
0x20f: V167 = 0x20
0x212: V168 = ADD S1 0x20
0x215: V169 = 0x20
0x218: V170 = ADD S0 0x20
0x21b: V171 = 0x20
0x21e: V172 = SUB S2 0x20
0x221: V173 = 0x200
0x224: JUMP 0x200
---
Entry stack: [V10, 0xe4, V56, V56, V157, V157, V160, V158, S2, S1, S0]
Stack pops: 3
Stack additions: [V172, V168, V170]
Exit stack: [V10, 0xe4, V56, V56, V157, V157, V160, V158, V172, V168, V170]

================================

Block 0x225
[0x225:0x263]
---
Predecessors: [0x200]
Successors: [0x264, 0x2bb]
---
0x225 JUMPDEST
0x226 PUSH1 0x1
0x228 DUP4
0x229 PUSH1 0x20
0x22b SUB
0x22c PUSH2 0x100
0x22f EXP
0x230 SUB
0x231 DUP1
0x232 NOT
0x233 DUP3
0x234 MLOAD
0x235 AND
0x236 DUP2
0x237 DUP5
0x238 MLOAD
0x239 AND
0x23a DUP1
0x23b DUP3
0x23c OR
0x23d DUP6
0x23e MSTORE
0x23f POP
0x240 POP
0x241 POP
0x242 POP
0x243 POP
0x244 POP
0x245 SWAP1
0x246 POP
0x247 ADD
0x248 SWAP2
0x249 POP
0x24a POP
0x24b PUSH1 0x40
0x24d MLOAD
0x24e DUP1
0x24f SWAP2
0x250 SUB
0x251 SWAP1
0x252 SHA3
0x253 PUSH1 0x0
0x255 NOT
0x256 AND
0x257 PUSH1 0x1
0x259 SLOAD
0x25a PUSH1 0x0
0x25c NOT
0x25d AND
0x25e EQ
0x25f ISZERO
0x260 PUSH2 0x2bb
0x263 JUMPI
---
0x225: JUMPDEST 
0x226: V174 = 0x1
0x229: V175 = 0x20
0x22b: V176 = SUB 0x20 S2
0x22c: V177 = 0x100
0x22f: V178 = EXP 0x100 V176
0x230: V179 = SUB V178 0x1
0x232: V180 = NOT V179
0x234: V181 = M[S0]
0x235: V182 = AND V181 V180
0x238: V183 = M[S1]
0x239: V184 = AND V183 V179
0x23c: V185 = OR V182 V184
0x23e: M[S1] = V185
0x247: V186 = ADD V158 V157
0x24b: V187 = 0x40
0x24d: V188 = M[0x40]
0x250: V189 = SUB V186 V188
0x252: V190 = SHA3 V188 V189
0x253: V191 = 0x0
0x255: V192 = NOT 0x0
0x256: V193 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V190
0x257: V194 = 0x1
0x259: V195 = S[0x1]
0x25a: V196 = 0x0
0x25c: V197 = NOT 0x0
0x25d: V198 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V195
0x25e: V199 = EQ V198 V193
0x25f: V200 = ISZERO V199
0x260: V201 = 0x2bb
0x263: JUMPI 0x2bb V200
---
Entry stack: [V10, 0xe4, V56, V56, V157, V157, V160, V158, S2, S1, S0]
Stack pops: 8
Stack additions: []
Exit stack: [V10, 0xe4, V56]

================================

Block 0x264
[0x264:0x2b5]
---
Predecessors: [0x225]
Successors: [0x2b6, 0x2ba]
---
0x264 CALLER
0x265 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27a AND
0x27b PUSH2 0x8fc
0x27e ADDRESS
0x27f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x294 AND
0x295 BALANCE
0x296 SWAP1
0x297 DUP2
0x298 ISZERO
0x299 MUL
0x29a SWAP1
0x29b PUSH1 0x40
0x29d MLOAD
0x29e PUSH1 0x0
0x2a0 PUSH1 0x40
0x2a2 MLOAD
0x2a3 DUP1
0x2a4 DUP4
0x2a5 SUB
0x2a6 DUP2
0x2a7 DUP6
0x2a8 DUP9
0x2a9 DUP9
0x2aa CALL
0x2ab SWAP4
0x2ac POP
0x2ad POP
0x2ae POP
0x2af POP
0x2b0 ISZERO
0x2b1 ISZERO
0x2b2 PUSH2 0x2ba
0x2b5 JUMPI
---
0x264: V202 = CALLER
0x265: V203 = 0xffffffffffffffffffffffffffffffffffffffff
0x27a: V204 = AND 0xffffffffffffffffffffffffffffffffffffffff V202
0x27b: V205 = 0x8fc
0x27e: V206 = ADDRESS
0x27f: V207 = 0xffffffffffffffffffffffffffffffffffffffff
0x294: V208 = AND 0xffffffffffffffffffffffffffffffffffffffff V206
0x295: V209 = BALANCE V208
0x298: V210 = ISZERO V209
0x299: V211 = MUL V210 0x8fc
0x29b: V212 = 0x40
0x29d: V213 = M[0x40]
0x29e: V214 = 0x0
0x2a0: V215 = 0x40
0x2a2: V216 = M[0x40]
0x2a5: V217 = SUB V213 V216
0x2aa: V218 = CALL V211 V204 V209 V216 V217 V216 0x0
0x2b0: V219 = ISZERO V218
0x2b1: V220 = ISZERO V219
0x2b2: V221 = 0x2ba
0x2b5: JUMPI 0x2ba V220
---
Entry stack: [V10, 0xe4, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe4, V56]

================================

Block 0x2b6
[0x2b6:0x2b9]
---
Predecessors: [0x264]
Successors: []
---
0x2b6 PUSH1 0x0
0x2b8 DUP1
0x2b9 REVERT
---
0x2b6: V222 = 0x0
0x2b9: REVERT 0x0 0x0
---
Entry stack: [V10, 0xe4, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe4, V56]

================================

Block 0x2ba
[0x2ba:0x2ba]
---
Predecessors: [0x264]
Successors: [0x2bb]
---
0x2ba JUMPDEST
---
0x2ba: JUMPDEST 
---
Entry stack: [V10, 0xe4, V56]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xe4, V56]

================================

Block 0x2bb
[0x2bb:0x2bd]
---
Predecessors: [0x225, 0x2ba]
Successors: [0xe4]
---
0x2bb JUMPDEST
0x2bc POP
0x2bd JUMP
---
0x2bb: JUMPDEST 
0x2bd: JUMP 0xe4
---
Entry stack: [V10, 0xe4, V56]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x2be
[0x2be:0x2d0]
---
Predecessors: [0xf1]
Successors: [0x2d1, 0x2eb]
---
0x2be JUMPDEST
0x2bf PUSH1 0x1
0x2c1 SLOAD
0x2c2 PUSH1 0x0
0x2c4 NOT
0x2c5 AND
0x2c6 DUP2
0x2c7 PUSH1 0x0
0x2c9 NOT
0x2ca AND
0x2cb EQ
0x2cc ISZERO
0x2cd PUSH2 0x2eb
0x2d0 JUMPI
---
0x2be: JUMPDEST 
0x2bf: V223 = 0x1
0x2c1: V224 = S[0x1]
0x2c2: V225 = 0x0
0x2c4: V226 = NOT 0x0
0x2c5: V227 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V224
0x2c7: V228 = 0x0
0x2c9: V229 = NOT 0x0
0x2ca: V230 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V72
0x2cb: V231 = EQ V230 V227
0x2cc: V232 = ISZERO V231
0x2cd: V233 = 0x2eb
0x2d0: JUMPI 0x2eb V232
---
Entry stack: [V10, 0x10b, V72]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x10b, V72]

================================

Block 0x2d1
[0x2d1:0x2ea]
---
Predecessors: [0x2be]
Successors: [0x2eb]
---
0x2d1 PUSH1 0x1
0x2d3 PUSH1 0x0
0x2d5 DUP1
0x2d6 PUSH2 0x100
0x2d9 EXP
0x2da DUP2
0x2db SLOAD
0x2dc DUP2
0x2dd PUSH1 0xff
0x2df MUL
0x2e0 NOT
0x2e1 AND
0x2e2 SWAP1
0x2e3 DUP4
0x2e4 ISZERO
0x2e5 ISZERO
0x2e6 MUL
0x2e7 OR
0x2e8 SWAP1
0x2e9 SSTORE
0x2ea POP
---
0x2d1: V234 = 0x1
0x2d3: V235 = 0x0
0x2d6: V236 = 0x100
0x2d9: V237 = EXP 0x100 0x0
0x2db: V238 = S[0x0]
0x2dd: V239 = 0xff
0x2df: V240 = MUL 0xff 0x1
0x2e0: V241 = NOT 0xff
0x2e1: V242 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V238
0x2e4: V243 = ISZERO 0x1
0x2e5: V244 = ISZERO 0x0
0x2e6: V245 = MUL 0x1 0x1
0x2e7: V246 = OR 0x1 V242
0x2e9: S[0x0] = V246
---
Entry stack: [V10, 0x10b, V72]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10b, V72]

================================

Block 0x2eb
[0x2eb:0x2ed]
---
Predecessors: [0x2be, 0x2d1]
Successors: [0x10b]
---
0x2eb JUMPDEST
0x2ec POP
0x2ed JUMP
---
0x2eb: JUMPDEST 
0x2ed: JUMP 0x10b
---
Entry stack: [V10, 0x10b, V72]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x2ee
[0x2ee:0x2f3]
---
Predecessors: [0x118]
Successors: [0x120]
---
0x2ee JUMPDEST
0x2ef PUSH1 0x1
0x2f1 SLOAD
0x2f2 DUP2
0x2f3 JUMP
---
0x2ee: JUMPDEST 
0x2ef: V247 = 0x1
0x2f1: V248 = S[0x1]
0x2f3: JUMP 0x120
---
Entry stack: [V10, 0x120]
Stack pops: 1
Stack additions: [S0, V248]
Exit stack: [V10, 0x120, V248]

================================

Block 0x2f4
[0x2f4:0x306]
---
Predecessors: [0x149]
Successors: [0x307]
---
0x2f4 JUMPDEST
0x2f5 PUSH1 0x0
0x2f7 DUP2
0x2f8 PUSH1 0x40
0x2fa MLOAD
0x2fb DUP1
0x2fc DUP3
0x2fd DUP1
0x2fe MLOAD
0x2ff SWAP1
0x300 PUSH1 0x20
0x302 ADD
0x303 SWAP1
0x304 DUP1
0x305 DUP4
0x306 DUP4
---
0x2f4: JUMPDEST 
0x2f5: V249 = 0x0
0x2f8: V250 = 0x40
0x2fa: V251 = M[0x40]
0x2fe: V252 = M[V116]
0x300: V253 = 0x20
0x302: V254 = ADD 0x20 V116
---
Entry stack: [V10, 0x199, V116]
Stack pops: 1
Stack additions: [S0, 0x0, S0, V251, V251, V254, V252, V252, V251, V254]
Exit stack: [V10, 0x199, V116, 0x0, V116, V251, V251, V254, V252, V252, V251, V254]

================================

Block 0x307
[0x307:0x311]
---
Predecessors: [0x2f4, 0x312]
Successors: [0x312, 0x32c]
---
0x307 JUMPDEST
0x308 PUSH1 0x20
0x30a DUP4
0x30b LT
0x30c ISZERO
0x30d ISZERO
0x30e PUSH2 0x32c
0x311 JUMPI
---
0x307: JUMPDEST 
0x308: V255 = 0x20
0x30b: V256 = LT S2 0x20
0x30c: V257 = ISZERO V256
0x30d: V258 = ISZERO V257
0x30e: V259 = 0x32c
0x311: JUMPI 0x32c V258
---
Entry stack: [V10, 0x199, V116, 0x0, V116, V251, V251, V254, V252, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x199, V116, 0x0, V116, V251, V251, V254, V252, S2, S1, S0]

================================

Block 0x312
[0x312:0x32b]
---
Predecessors: [0x307]
Successors: [0x307]
---
0x312 DUP1
0x313 MLOAD
0x314 DUP3
0x315 MSTORE
0x316 PUSH1 0x20
0x318 DUP3
0x319 ADD
0x31a SWAP2
0x31b POP
0x31c PUSH1 0x20
0x31e DUP2
0x31f ADD
0x320 SWAP1
0x321 POP
0x322 PUSH1 0x20
0x324 DUP4
0x325 SUB
0x326 SWAP3
0x327 POP
0x328 PUSH2 0x307
0x32b JUMP
---
0x313: V260 = M[S0]
0x315: M[S1] = V260
0x316: V261 = 0x20
0x319: V262 = ADD S1 0x20
0x31c: V263 = 0x20
0x31f: V264 = ADD S0 0x20
0x322: V265 = 0x20
0x325: V266 = SUB S2 0x20
0x328: V267 = 0x307
0x32b: JUMP 0x307
---
Entry stack: [V10, 0x199, V116, 0x0, V116, V251, V251, V254, V252, S2, S1, S0]
Stack pops: 3
Stack additions: [V266, V262, V264]
Exit stack: [V10, 0x199, V116, 0x0, V116, V251, V251, V254, V252, V266, V262, V264]

================================

Block 0x32c
[0x32c:0x35f]
---
Predecessors: [0x307]
Successors: [0x199]
---
0x32c JUMPDEST
0x32d PUSH1 0x1
0x32f DUP4
0x330 PUSH1 0x20
0x332 SUB
0x333 PUSH2 0x100
0x336 EXP
0x337 SUB
0x338 DUP1
0x339 NOT
0x33a DUP3
0x33b MLOAD
0x33c AND
0x33d DUP2
0x33e DUP5
0x33f MLOAD
0x340 AND
0x341 DUP1
0x342 DUP3
0x343 OR
0x344 DUP6
0x345 MSTORE
0x346 POP
0x347 POP
0x348 POP
0x349 POP
0x34a POP
0x34b POP
0x34c SWAP1
0x34d POP
0x34e ADD
0x34f SWAP2
0x350 POP
0x351 POP
0x352 PUSH1 0x40
0x354 MLOAD
0x355 DUP1
0x356 SWAP2
0x357 SUB
0x358 SWAP1
0x359 SHA3
0x35a SWAP1
0x35b POP
0x35c SWAP2
0x35d SWAP1
0x35e POP
0x35f JUMP
---
0x32c: JUMPDEST 
0x32d: V268 = 0x1
0x330: V269 = 0x20
0x332: V270 = SUB 0x20 S2
0x333: V271 = 0x100
0x336: V272 = EXP 0x100 V270
0x337: V273 = SUB V272 0x1
0x339: V274 = NOT V273
0x33b: V275 = M[S0]
0x33c: V276 = AND V275 V274
0x33f: V277 = M[S1]
0x340: V278 = AND V277 V273
0x343: V279 = OR V276 V278
0x345: M[S1] = V279
0x34e: V280 = ADD V252 V251
0x352: V281 = 0x40
0x354: V282 = M[0x40]
0x357: V283 = SUB V280 V282
0x359: V284 = SHA3 V282 V283
0x35f: JUMP 0x199
---
Entry stack: [V10, 0x199, V116, 0x0, V116, V251, V251, V254, V252, S2, S1, S0]
Stack pops: 11
Stack additions: [V284]
Exit stack: [V10, V284]

================================

Block 0x360
[0x360:0x39c]
---
Predecessors: []
Successors: []
---
0x360 STOP
0x361 LOG1
0x362 PUSH6 0x627a7a723058
0x369 SHA3
0x36a MISSING 0xef
0x36b MISSING 0xba
0x36c SWAP10
0x36d MISSING 0xbe
0x36e MISSING 0xb5
0x36f MISSING 0x29
0x370 MISSING 0xee
0x371 MISSING 0xbd
0x372 MISSING 0xdc
0x373 MISSING 0xee
0x374 PUSH2 0x19e8
0x377 MISSING 0xd3
0x378 ADD
0x379 MISSING 0xe1
0x37a CREATE
0x37b MISSING 0xa7
0x37c PUSH32 0xda256f1a7220aee4bfaa55dacd0029
---
0x360: STOP 
0x361: LOG S0 S1 S2
0x362: V285 = 0x627a7a723058
0x369: V286 = SHA3 0x627a7a723058 S3
0x36a: MISSING 0xef
0x36b: MISSING 0xba
0x36d: MISSING 0xbe
0x36e: MISSING 0xb5
0x36f: MISSING 0x29
0x370: MISSING 0xee
0x371: MISSING 0xbd
0x372: MISSING 0xdc
0x373: MISSING 0xee
0x374: V287 = 0x19e8
0x377: MISSING 0xd3
0x378: V288 = ADD S0 S1
0x379: MISSING 0xe1
0x37a: V289 = CREATE S0 S1 S2
0x37b: MISSING 0xa7
0x37c: V290 = 0xda256f1a7220aee4bfaa55dacd0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V286, S10, S1, S2, S3, S4, S5, S6, S7, S8, S9, S0, 0x19e8, V288, V289, 0xda256f1a7220aee4bfaa55dacd0029]
Exit stack: []

================================

Function 0:
Public function signature: 0xa6fbb05
Entry block: 0x6d
Exit block: 0x87
Body: 0x6d, 0x87, 0x1b7, 0x1ce, 0x1db, 0x1e1, 0x1ec

Function 1:
Public function signature: 0x181ffc5f
Entry block: 0x89
Exit block: 0xe4
Body: 0x89, 0x90, 0x94, 0xe4, 0x1ef, 0x200, 0x20b, 0x225, 0x264, 0x2b6, 0x2ba, 0x2bb

Function 2:
Public function signature: 0x31fd725a
Entry block: 0xe6
Exit block: 0x10b
Body: 0xe6, 0xed, 0xf1, 0x10b, 0x2be, 0x2d1, 0x2eb

Function 3:
Public function signature: 0x87f24484
Entry block: 0x10d
Exit block: 0x120
Body: 0x10d, 0x114, 0x118, 0x120, 0x2ee

Function 4:
Public function signature: 0xb456ecc5
Entry block: 0x13e
Exit block: 0x199
Body: 0x13e, 0x145, 0x149, 0x199, 0x2f4, 0x307, 0x312, 0x32c

Function 5:
Public fallback function
Entry block: 0x6b
Exit block: 0x6b
Body: 0x6b

