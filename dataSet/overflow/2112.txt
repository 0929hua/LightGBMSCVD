Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x64]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0xb1976a02
0x3c EQ
0x3d PUSH2 0x64
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0xb1976a02
0x3c: V13 = EQ 0xb1976a02 V11
0x3d: V14 = 0x64
0x40: JUMPI 0x64 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x6e]
---
0x41 DUP1
0x42 PUSH4 0xc35789cc
0x47 EQ
0x48 PUSH2 0x6e
0x4b JUMPI
---
0x42: V15 = 0xc35789cc
0x47: V16 = EQ 0xc35789cc V11
0x48: V17 = 0x6e
0x4b: JUMPI 0x6e V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x85]
---
0x4c DUP1
0x4d PUSH4 0xe5b5fe72
0x52 EQ
0x53 PUSH2 0x85
0x56 JUMPI
---
0x4d: V18 = 0xe5b5fe72
0x52: V19 = EQ 0xe5b5fe72 V11
0x53: V20 = 0x85
0x56: JUMPI 0x85 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0xbb]
---
0x57 DUP1
0x58 PUSH4 0xf4d0b67f
0x5d EQ
0x5e PUSH2 0xbb
0x61 JUMPI
---
0x58: V21 = 0xf4d0b67f
0x5d: V22 = EQ 0xf4d0b67f V11
0x5e: V23 = 0xbb
0x61: JUMPI 0xbb V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x63]
---
Predecessors: [0x0, 0x57]
Successors: []
---
0x62 JUMPDEST
0x63 STOP
---
0x62: JUMPDEST 
0x63: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x64
[0x64:0x6b]
---
Predecessors: [0xd]
Successors: [0xe8]
---
0x64 JUMPDEST
0x65 PUSH2 0x6c
0x68 PUSH2 0xe8
0x6b JUMP
---
0x64: JUMPDEST 
0x65: V24 = 0x6c
0x68: V25 = 0xe8
0x6b: JUMP 0xe8
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6c]
Exit stack: [V11, 0x6c]

================================

Block 0x6c
[0x6c:0x6d]
---
Predecessors: [0x1ab]
Successors: []
---
0x6c JUMPDEST
0x6d STOP
---
0x6c: JUMPDEST 
0x6d: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6e
[0x6e:0x75]
---
Predecessors: [0x41]
Successors: [0x76, 0x7a]
---
0x6e JUMPDEST
0x6f CALLVALUE
0x70 DUP1
0x71 ISZERO
0x72 PUSH2 0x7a
0x75 JUMPI
---
0x6e: JUMPDEST 
0x6f: V26 = CALLVALUE
0x71: V27 = ISZERO V26
0x72: V28 = 0x7a
0x75: JUMPI 0x7a V27
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V26]
Exit stack: [V11, V26]

================================

Block 0x76
[0x76:0x79]
---
Predecessors: [0x6e]
Successors: []
---
0x76 PUSH1 0x0
0x78 DUP1
0x79 REVERT
---
0x76: V29 = 0x0
0x79: REVERT 0x0 0x0
---
Entry stack: [V11, V26]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V26]

================================

Block 0x7a
[0x7a:0x82]
---
Predecessors: [0x6e]
Successors: [0x1ad]
---
0x7a JUMPDEST
0x7b POP
0x7c PUSH2 0x83
0x7f PUSH2 0x1ad
0x82 JUMP
---
0x7a: JUMPDEST 
0x7c: V30 = 0x83
0x7f: V31 = 0x1ad
0x82: JUMP 0x1ad
---
Entry stack: [V11, V26]
Stack pops: 1
Stack additions: [0x83]
Exit stack: [V11, 0x83]

================================

Block 0x83
[0x83:0x84]
---
Predecessors: [0x21e]
Successors: []
---
0x83 JUMPDEST
0x84 STOP
---
0x83: JUMPDEST 
0x84: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x85
[0x85:0xb8]
---
Predecessors: [0x4c]
Successors: [0x220]
---
0x85 JUMPDEST
0x86 PUSH2 0xb9
0x89 PUSH1 0x4
0x8b DUP1
0x8c CALLDATASIZE
0x8d SUB
0x8e DUP2
0x8f ADD
0x90 SWAP1
0x91 DUP1
0x92 DUP1
0x93 CALLDATALOAD
0x94 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa9 AND
0xaa SWAP1
0xab PUSH1 0x20
0xad ADD
0xae SWAP1
0xaf SWAP3
0xb0 SWAP2
0xb1 SWAP1
0xb2 POP
0xb3 POP
0xb4 POP
0xb5 PUSH2 0x220
0xb8 JUMP
---
0x85: JUMPDEST 
0x86: V32 = 0xb9
0x89: V33 = 0x4
0x8c: V34 = CALLDATASIZE
0x8d: V35 = SUB V34 0x4
0x8f: V36 = ADD 0x4 V35
0x93: V37 = CALLDATALOAD 0x4
0x94: V38 = 0xffffffffffffffffffffffffffffffffffffffff
0xa9: V39 = AND 0xffffffffffffffffffffffffffffffffffffffff V37
0xab: V40 = 0x20
0xad: V41 = ADD 0x20 0x4
0xb5: V42 = 0x220
0xb8: JUMP 0x220
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xb9, V39]
Exit stack: [V11, 0xb9, V39]

================================

Block 0xb9
[0xb9:0xba]
---
Predecessors: [0x31e]
Successors: []
---
0xb9 JUMPDEST
0xba STOP
---
0xb9: JUMPDEST 
0xba: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xbb
[0xbb:0xc2]
---
Predecessors: [0x57]
Successors: [0xc3, 0xc7]
---
0xbb JUMPDEST
0xbc CALLVALUE
0xbd DUP1
0xbe ISZERO
0xbf PUSH2 0xc7
0xc2 JUMPI
---
0xbb: JUMPDEST 
0xbc: V43 = CALLVALUE
0xbe: V44 = ISZERO V43
0xbf: V45 = 0xc7
0xc2: JUMPI 0xc7 V44
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V43]
Exit stack: [V11, V43]

================================

Block 0xc3
[0xc3:0xc6]
---
Predecessors: [0xbb]
Successors: []
---
0xc3 PUSH1 0x0
0xc5 DUP1
0xc6 REVERT
---
0xc3: V46 = 0x0
0xc6: REVERT 0x0 0x0
---
Entry stack: [V11, V43]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V43]

================================

Block 0xc7
[0xc7:0xe5]
---
Predecessors: [0xbb]
Successors: [0x321]
---
0xc7 JUMPDEST
0xc8 POP
0xc9 PUSH2 0xe6
0xcc PUSH1 0x4
0xce DUP1
0xcf CALLDATASIZE
0xd0 SUB
0xd1 DUP2
0xd2 ADD
0xd3 SWAP1
0xd4 DUP1
0xd5 DUP1
0xd6 CALLDATALOAD
0xd7 SWAP1
0xd8 PUSH1 0x20
0xda ADD
0xdb SWAP1
0xdc SWAP3
0xdd SWAP2
0xde SWAP1
0xdf POP
0xe0 POP
0xe1 POP
0xe2 PUSH2 0x321
0xe5 JUMP
---
0xc7: JUMPDEST 
0xc9: V47 = 0xe6
0xcc: V48 = 0x4
0xcf: V49 = CALLDATASIZE
0xd0: V50 = SUB V49 0x4
0xd2: V51 = ADD 0x4 V50
0xd6: V52 = CALLDATALOAD 0x4
0xd8: V53 = 0x20
0xda: V54 = ADD 0x20 0x4
0xe2: V55 = 0x321
0xe5: JUMP 0x321
---
Entry stack: [V11, V43]
Stack pops: 1
Stack additions: [0xe6, V52]
Exit stack: [V11, 0xe6, V52]

================================

Block 0xe6
[0xe6:0xe7]
---
Predecessors: [0x37f]
Successors: []
---
0xe6 JUMPDEST
0xe7 STOP
---
0xe6: JUMPDEST 
0xe7: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe8
[0xe8:0x13f]
---
Predecessors: [0x64]
Successors: [0x140, 0x147]
---
0xe8 JUMPDEST
0xe9 CALLER
0xea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xff AND
0x100 PUSH1 0x3
0x102 PUSH1 0x0
0x104 SWAP1
0x105 SLOAD
0x106 SWAP1
0x107 PUSH2 0x100
0x10a EXP
0x10b SWAP1
0x10c DIV
0x10d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x122 AND
0x123 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x138 AND
0x139 EQ
0x13a DUP1
0x13b ISZERO
0x13c PUSH2 0x147
0x13f JUMPI
---
0xe8: JUMPDEST 
0xe9: V56 = CALLER
0xea: V57 = 0xffffffffffffffffffffffffffffffffffffffff
0xff: V58 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0x100: V59 = 0x3
0x102: V60 = 0x0
0x105: V61 = S[0x3]
0x107: V62 = 0x100
0x10a: V63 = EXP 0x100 0x0
0x10c: V64 = DIV V61 0x1
0x10d: V65 = 0xffffffffffffffffffffffffffffffffffffffff
0x122: V66 = AND 0xffffffffffffffffffffffffffffffffffffffff V64
0x123: V67 = 0xffffffffffffffffffffffffffffffffffffffff
0x138: V68 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0x139: V69 = EQ V68 V58
0x13b: V70 = ISZERO V69
0x13c: V71 = 0x147
0x13f: JUMPI 0x147 V70
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: [V69]
Exit stack: [V11, 0x6c, V69]

================================

Block 0x140
[0x140:0x146]
---
Predecessors: [0xe8]
Successors: [0x147]
---
0x140 POP
0x141 PUSH1 0x1
0x143 SLOAD
0x144 TIMESTAMP
0x145 LT
0x146 ISZERO
---
0x141: V72 = 0x1
0x143: V73 = S[0x1]
0x144: V74 = TIMESTAMP
0x145: V75 = LT V74 V73
0x146: V76 = ISZERO V75
---
Entry stack: [V11, 0x6c, V69]
Stack pops: 1
Stack additions: [V76]
Exit stack: [V11, 0x6c, V76]

================================

Block 0x147
[0x147:0x14c]
---
Predecessors: [0xe8, 0x140]
Successors: [0x14d, 0x1ab]
---
0x147 JUMPDEST
0x148 ISZERO
0x149 PUSH2 0x1ab
0x14c JUMPI
---
0x147: JUMPDEST 
0x148: V77 = ISZERO S0
0x149: V78 = 0x1ab
0x14c: JUMPI 0x1ab V77
---
Entry stack: [V11, 0x6c, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0x14d
[0x14d:0x19f]
---
Predecessors: [0x147]
Successors: [0x1a0, 0x1a9]
---
0x14d CALLER
0x14e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x163 AND
0x164 PUSH2 0x8fc
0x167 ADDRESS
0x168 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17d AND
0x17e BALANCE
0x17f SWAP1
0x180 DUP2
0x181 ISZERO
0x182 MUL
0x183 SWAP1
0x184 PUSH1 0x40
0x186 MLOAD
0x187 PUSH1 0x0
0x189 PUSH1 0x40
0x18b MLOAD
0x18c DUP1
0x18d DUP4
0x18e SUB
0x18f DUP2
0x190 DUP6
0x191 DUP9
0x192 DUP9
0x193 CALL
0x194 SWAP4
0x195 POP
0x196 POP
0x197 POP
0x198 POP
0x199 ISZERO
0x19a DUP1
0x19b ISZERO
0x19c PUSH2 0x1a9
0x19f JUMPI
---
0x14d: V79 = CALLER
0x14e: V80 = 0xffffffffffffffffffffffffffffffffffffffff
0x163: V81 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x164: V82 = 0x8fc
0x167: V83 = ADDRESS
0x168: V84 = 0xffffffffffffffffffffffffffffffffffffffff
0x17d: V85 = AND 0xffffffffffffffffffffffffffffffffffffffff V83
0x17e: V86 = BALANCE V85
0x181: V87 = ISZERO V86
0x182: V88 = MUL V87 0x8fc
0x184: V89 = 0x40
0x186: V90 = M[0x40]
0x187: V91 = 0x0
0x189: V92 = 0x40
0x18b: V93 = M[0x40]
0x18e: V94 = SUB V90 V93
0x193: V95 = CALL V88 V81 V86 V93 V94 V93 0x0
0x199: V96 = ISZERO V95
0x19b: V97 = ISZERO V96
0x19c: V98 = 0x1a9
0x19f: JUMPI 0x1a9 V97
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: [V96]
Exit stack: [V11, 0x6c, V96]

================================

Block 0x1a0
[0x1a0:0x1a8]
---
Predecessors: [0x14d]
Successors: []
---
0x1a0 RETURNDATASIZE
0x1a1 PUSH1 0x0
0x1a3 DUP1
0x1a4 RETURNDATACOPY
0x1a5 RETURNDATASIZE
0x1a6 PUSH1 0x0
0x1a8 REVERT
---
0x1a0: V99 = RETURNDATASIZE
0x1a1: V100 = 0x0
0x1a4: RETURNDATACOPY 0x0 0x0 V99
0x1a5: V101 = RETURNDATASIZE
0x1a6: V102 = 0x0
0x1a8: REVERT 0x0 V101
---
Entry stack: [V11, 0x6c, V96]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V96]

================================

Block 0x1a9
[0x1a9:0x1aa]
---
Predecessors: [0x14d]
Successors: [0x1ab]
---
0x1a9 JUMPDEST
0x1aa POP
---
0x1a9: JUMPDEST 
---
Entry stack: [V11, 0x6c, V96]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0x1ab
[0x1ab:0x1ac]
---
Predecessors: [0x147, 0x1a9]
Successors: [0x6c]
---
0x1ab JUMPDEST
0x1ac JUMP
---
0x1ab: JUMPDEST 
0x1ac: JUMP 0x6c
---
Entry stack: [V11, 0x6c]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1ad
[0x1ad:0x203]
---
Predecessors: [0x7a]
Successors: [0x204, 0x21e]
---
0x1ad JUMPDEST
0x1ae CALLER
0x1af PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c4 AND
0x1c5 PUSH1 0x2
0x1c7 PUSH1 0x0
0x1c9 SWAP1
0x1ca SLOAD
0x1cb SWAP1
0x1cc PUSH2 0x100
0x1cf EXP
0x1d0 SWAP1
0x1d1 DIV
0x1d2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e7 AND
0x1e8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1fd AND
0x1fe EQ
0x1ff ISZERO
0x200 PUSH2 0x21e
0x203 JUMPI
---
0x1ad: JUMPDEST 
0x1ae: V103 = CALLER
0x1af: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c4: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x1c5: V106 = 0x2
0x1c7: V107 = 0x0
0x1ca: V108 = S[0x2]
0x1cc: V109 = 0x100
0x1cf: V110 = EXP 0x100 0x0
0x1d1: V111 = DIV V108 0x1
0x1d2: V112 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e7: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x1e8: V114 = 0xffffffffffffffffffffffffffffffffffffffff
0x1fd: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x1fe: V116 = EQ V115 V105
0x1ff: V117 = ISZERO V116
0x200: V118 = 0x21e
0x203: JUMPI 0x21e V117
---
Entry stack: [V11, 0x83]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x83]

================================

Block 0x204
[0x204:0x21d]
---
Predecessors: [0x1ad]
Successors: [0x21e]
---
0x204 PUSH1 0x1
0x206 PUSH1 0x0
0x208 DUP1
0x209 PUSH2 0x100
0x20c EXP
0x20d DUP2
0x20e SLOAD
0x20f DUP2
0x210 PUSH1 0xff
0x212 MUL
0x213 NOT
0x214 AND
0x215 SWAP1
0x216 DUP4
0x217 ISZERO
0x218 ISZERO
0x219 MUL
0x21a OR
0x21b SWAP1
0x21c SSTORE
0x21d POP
---
0x204: V119 = 0x1
0x206: V120 = 0x0
0x209: V121 = 0x100
0x20c: V122 = EXP 0x100 0x0
0x20e: V123 = S[0x0]
0x210: V124 = 0xff
0x212: V125 = MUL 0xff 0x1
0x213: V126 = NOT 0xff
0x214: V127 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V123
0x217: V128 = ISZERO 0x1
0x218: V129 = ISZERO 0x0
0x219: V130 = MUL 0x1 0x1
0x21a: V131 = OR 0x1 V127
0x21c: S[0x0] = V131
---
Entry stack: [V11, 0x83]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x83]

================================

Block 0x21e
[0x21e:0x21f]
---
Predecessors: [0x1ad, 0x204]
Successors: [0x83]
---
0x21e JUMPDEST
0x21f JUMP
---
0x21e: JUMPDEST 
0x21f: JUMP 0x83
---
Entry stack: [V11, 0x83]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x220
[0x220:0x236]
---
Predecessors: [0x85]
Successors: [0x237, 0x243]
---
0x220 JUMPDEST
0x221 PUSH1 0x0
0x223 DUP1
0x224 SWAP1
0x225 SLOAD
0x226 SWAP1
0x227 PUSH2 0x100
0x22a EXP
0x22b SWAP1
0x22c DIV
0x22d PUSH1 0xff
0x22f AND
0x230 ISZERO
0x231 DUP1
0x232 ISZERO
0x233 PUSH2 0x243
0x236 JUMPI
---
0x220: JUMPDEST 
0x221: V132 = 0x0
0x225: V133 = S[0x0]
0x227: V134 = 0x100
0x22a: V135 = EXP 0x100 0x0
0x22c: V136 = DIV V133 0x1
0x22d: V137 = 0xff
0x22f: V138 = AND 0xff V136
0x230: V139 = ISZERO V138
0x232: V140 = ISZERO V139
0x233: V141 = 0x243
0x236: JUMPI 0x243 V140
---
Entry stack: [V11, 0xb9, V39]
Stack pops: 0
Stack additions: [V139]
Exit stack: [V11, 0xb9, V39, V139]

================================

Block 0x237
[0x237:0x242]
---
Predecessors: [0x220]
Successors: [0x243]
---
0x237 POP
0x238 PUSH8 0x6f05b59d3b20000
0x241 CALLVALUE
0x242 GT
---
0x238: V142 = 0x6f05b59d3b20000
0x241: V143 = CALLVALUE
0x242: V144 = GT V143 0x6f05b59d3b20000
---
Entry stack: [V11, 0xb9, V39, V139]
Stack pops: 1
Stack additions: [V144]
Exit stack: [V11, 0xb9, V39, V144]

================================

Block 0x243
[0x243:0x248]
---
Predecessors: [0x220, 0x237]
Successors: [0x249, 0x286]
---
0x243 JUMPDEST
0x244 DUP1
0x245 PUSH2 0x286
0x248 JUMPI
---
0x243: JUMPDEST 
0x245: V145 = 0x286
0x248: JUMPI 0x286 S0
---
Entry stack: [V11, 0xb9, V39, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xb9, V39, S0]

================================

Block 0x249
[0x249:0x285]
---
Predecessors: [0x243]
Successors: [0x286]
---
0x249 POP
0x24a PUSH1 0x0
0x24c PUSH1 0x2
0x24e PUSH1 0x0
0x250 SWAP1
0x251 SLOAD
0x252 SWAP1
0x253 PUSH2 0x100
0x256 EXP
0x257 SWAP1
0x258 DIV
0x259 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x26e AND
0x26f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x284 AND
0x285 EQ
---
0x24a: V146 = 0x0
0x24c: V147 = 0x2
0x24e: V148 = 0x0
0x251: V149 = S[0x2]
0x253: V150 = 0x100
0x256: V151 = EXP 0x100 0x0
0x258: V152 = DIV V149 0x1
0x259: V153 = 0xffffffffffffffffffffffffffffffffffffffff
0x26e: V154 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0x26f: V155 = 0xffffffffffffffffffffffffffffffffffffffff
0x284: V156 = AND 0xffffffffffffffffffffffffffffffffffffffff V154
0x285: V157 = EQ V156 0x0
---
Entry stack: [V11, 0xb9, V39, S0]
Stack pops: 1
Stack additions: [V157]
Exit stack: [V11, 0xb9, V39, V157]

================================

Block 0x286
[0x286:0x28b]
---
Predecessors: [0x243, 0x249]
Successors: [0x28c, 0x31e]
---
0x286 JUMPDEST
0x287 ISZERO
0x288 PUSH2 0x31e
0x28b JUMPI
---
0x286: JUMPDEST 
0x287: V158 = ISZERO S0
0x288: V159 = 0x31e
0x28b: JUMPI 0x31e V158
---
Entry stack: [V11, 0xb9, V39, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xb9, V39]

================================

Block 0x28c
[0x28c:0x31d]
---
Predecessors: [0x286]
Successors: [0x31e]
---
0x28c CALLER
0x28d PUSH1 0x2
0x28f PUSH1 0x0
0x291 PUSH2 0x100
0x294 EXP
0x295 DUP2
0x296 SLOAD
0x297 DUP2
0x298 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ad MUL
0x2ae NOT
0x2af AND
0x2b0 SWAP1
0x2b1 DUP4
0x2b2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c7 AND
0x2c8 MUL
0x2c9 OR
0x2ca SWAP1
0x2cb SSTORE
0x2cc POP
0x2cd DUP1
0x2ce PUSH1 0x3
0x2d0 PUSH1 0x0
0x2d2 PUSH2 0x100
0x2d5 EXP
0x2d6 DUP2
0x2d7 SLOAD
0x2d8 DUP2
0x2d9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ee MUL
0x2ef NOT
0x2f0 AND
0x2f1 SWAP1
0x2f2 DUP4
0x2f3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x308 AND
0x309 MUL
0x30a OR
0x30b SWAP1
0x30c SSTORE
0x30d POP
0x30e TIMESTAMP
0x30f PUSH1 0x1
0x311 PUSH1 0x0
0x313 DUP3
0x314 DUP3
0x315 SLOAD
0x316 ADD
0x317 SWAP3
0x318 POP
0x319 POP
0x31a DUP2
0x31b SWAP1
0x31c SSTORE
0x31d POP
---
0x28c: V160 = CALLER
0x28d: V161 = 0x2
0x28f: V162 = 0x0
0x291: V163 = 0x100
0x294: V164 = EXP 0x100 0x0
0x296: V165 = S[0x2]
0x298: V166 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ad: V167 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x2ae: V168 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2af: V169 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V165
0x2b2: V170 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c7: V171 = AND 0xffffffffffffffffffffffffffffffffffffffff V160
0x2c8: V172 = MUL V171 0x1
0x2c9: V173 = OR V172 V169
0x2cb: S[0x2] = V173
0x2ce: V174 = 0x3
0x2d0: V175 = 0x0
0x2d2: V176 = 0x100
0x2d5: V177 = EXP 0x100 0x0
0x2d7: V178 = S[0x3]
0x2d9: V179 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ee: V180 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x2ef: V181 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2f0: V182 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V178
0x2f3: V183 = 0xffffffffffffffffffffffffffffffffffffffff
0x308: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V39
0x309: V185 = MUL V184 0x1
0x30a: V186 = OR V185 V182
0x30c: S[0x3] = V186
0x30e: V187 = TIMESTAMP
0x30f: V188 = 0x1
0x311: V189 = 0x0
0x315: V190 = S[0x1]
0x316: V191 = ADD V190 V187
0x31c: S[0x1] = V191
---
Entry stack: [V11, 0xb9, V39]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xb9, V39]

================================

Block 0x31e
[0x31e:0x320]
---
Predecessors: [0x286, 0x28c]
Successors: [0xb9]
---
0x31e JUMPDEST
0x31f POP
0x320 JUMP
---
0x31e: JUMPDEST 
0x320: JUMP 0xb9
---
Entry stack: [V11, 0xb9, V39]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x321
[0x321:0x377]
---
Predecessors: [0xc7]
Successors: [0x378, 0x37f]
---
0x321 JUMPDEST
0x322 PUSH1 0x2
0x324 PUSH1 0x0
0x326 SWAP1
0x327 SLOAD
0x328 SWAP1
0x329 PUSH2 0x100
0x32c EXP
0x32d SWAP1
0x32e DIV
0x32f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x344 AND
0x345 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x35a AND
0x35b CALLER
0x35c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x371 AND
0x372 EQ
0x373 ISZERO
0x374 PUSH2 0x37f
0x377 JUMPI
---
0x321: JUMPDEST 
0x322: V192 = 0x2
0x324: V193 = 0x0
0x327: V194 = S[0x2]
0x329: V195 = 0x100
0x32c: V196 = EXP 0x100 0x0
0x32e: V197 = DIV V194 0x1
0x32f: V198 = 0xffffffffffffffffffffffffffffffffffffffff
0x344: V199 = AND 0xffffffffffffffffffffffffffffffffffffffff V197
0x345: V200 = 0xffffffffffffffffffffffffffffffffffffffff
0x35a: V201 = AND 0xffffffffffffffffffffffffffffffffffffffff V199
0x35b: V202 = CALLER
0x35c: V203 = 0xffffffffffffffffffffffffffffffffffffffff
0x371: V204 = AND 0xffffffffffffffffffffffffffffffffffffffff V202
0x372: V205 = EQ V204 V201
0x373: V206 = ISZERO V205
0x374: V207 = 0x37f
0x377: JUMPI 0x37f V206
---
Entry stack: [V11, 0xe6, V52]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe6, V52]

================================

Block 0x378
[0x378:0x37e]
---
Predecessors: [0x321]
Successors: [0x37f]
---
0x378 DUP1
0x379 PUSH1 0x1
0x37b DUP2
0x37c SWAP1
0x37d SSTORE
0x37e POP
---
0x379: V208 = 0x1
0x37d: S[0x1] = V52
---
Entry stack: [V11, 0xe6, V52]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xe6, V52]

================================

Block 0x37f
[0x37f:0x381]
---
Predecessors: [0x321, 0x378]
Successors: [0xe6]
---
0x37f JUMPDEST
0x380 POP
0x381 JUMP
---
0x37f: JUMPDEST 
0x381: JUMP 0xe6
---
Entry stack: [V11, 0xe6, V52]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x382
[0x382:0x3b6]
---
Predecessors: []
Successors: []
---
0x382 STOP
0x383 LOG1
0x384 PUSH6 0x627a7a723058
0x38b SHA3
0x38c SLT
0x38d SWAP16
0x38e MISSING 0xbf
0x38f MISSING 0x2a
0x390 CALLDATASIZE
0x391 MISSING 0xaa
0x392 MISSING 0xd8
0x393 CALLVALUE
0x394 DUP15
0x395 EXTCODESIZE
0x396 DUP16
0x397 PUSH1 0xf3
0x399 MISSING 0xc9
0x39a GASPRICE
0x39b MISSING 0x26
0x39c CALL
0x39d PUSH25 0xfe4c2fdf13665343e7f7bf5a17700029
---
0x382: STOP 
0x383: LOG S0 S1 S2
0x384: V209 = 0x627a7a723058
0x38b: V210 = SHA3 0x627a7a723058 S3
0x38c: V211 = SLT V210 S4
0x38e: MISSING 0xbf
0x38f: MISSING 0x2a
0x390: V212 = CALLDATASIZE
0x391: MISSING 0xaa
0x392: MISSING 0xd8
0x393: V213 = CALLVALUE
0x395: V214 = EXTCODESIZE S13
0x397: V215 = 0xf3
0x399: MISSING 0xc9
0x39a: V216 = GASPRICE
0x39b: MISSING 0x26
0x39c: V217 = CALL S0 S1 S2 S3 S4 S5 S6
0x39d: V218 = 0xfe4c2fdf13665343e7f7bf5a17700029
---
Entry stack: []
Stack pops: 0
Stack additions: [S20, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, V211, V212, 0xf3, S13, V214, V213, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, V216, 0xfe4c2fdf13665343e7f7bf5a17700029, V217]
Exit stack: []

================================

Function 0:
Public function signature: 0xb1976a02
Entry block: 0x64
Exit block: 0x1a0
Body: 0x64, 0x6c, 0xe8, 0x140, 0x147, 0x14d, 0x1a0, 0x1a9, 0x1ab

Function 1:
Public function signature: 0xc35789cc
Entry block: 0x6e
Exit block: 0x83
Body: 0x6e, 0x76, 0x7a, 0x83, 0x1ad, 0x204, 0x21e

Function 2:
Public function signature: 0xe5b5fe72
Entry block: 0x85
Exit block: 0xb9
Body: 0x85, 0xb9, 0x220, 0x237, 0x243, 0x249, 0x286, 0x28c, 0x31e

Function 3:
Public function signature: 0xf4d0b67f
Entry block: 0xbb
Exit block: 0xe6
Body: 0xbb, 0xc3, 0xc7, 0xe6, 0x321, 0x378, 0x37f

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x62
Body: 0x62

