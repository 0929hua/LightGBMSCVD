Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x51]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x8da5cb5b
0x3c EQ
0x3d PUSH2 0x51
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x8da5cb5b
0x3c: V13 = EQ 0x8da5cb5b V11
0x3d: V14 = 0x51
0x40: JUMPI 0x51 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xa6]
---
0x41 DUP1
0x42 PUSH4 0xf2fde38b
0x47 EQ
0x48 PUSH2 0xa6
0x4b JUMPI
---
0x42: V15 = 0xf2fde38b
0x47: V16 = EQ 0xf2fde38b V11
0x48: V17 = 0xa6
0x4b: JUMPI 0xa6 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x50]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d PUSH1 0x0
0x4f DUP1
0x50 REVERT
---
0x4c: JUMPDEST 
0x4d: V18 = 0x0
0x50: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x51
[0x51:0x57]
---
Predecessors: [0xd]
Successors: [0x58, 0x5c]
---
0x51 JUMPDEST
0x52 CALLVALUE
0x53 ISZERO
0x54 PUSH2 0x5c
0x57 JUMPI
---
0x51: JUMPDEST 
0x52: V19 = CALLVALUE
0x53: V20 = ISZERO V19
0x54: V21 = 0x5c
0x57: JUMPI 0x5c V20
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x58
[0x58:0x5b]
---
Predecessors: [0x51]
Successors: []
---
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x58: V22 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0x63]
---
Predecessors: [0x51]
Successors: [0xdf]
---
0x5c JUMPDEST
0x5d PUSH2 0x64
0x60 PUSH2 0xdf
0x63 JUMP
---
0x5c: JUMPDEST 
0x5d: V23 = 0x64
0x60: V24 = 0xdf
0x63: JUMP 0xdf
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x64]
Exit stack: [V11, 0x64]

================================

Block 0x64
[0x64:0xa5]
---
Predecessors: [0xdf]
Successors: []
---
0x64 JUMPDEST
0x65 PUSH1 0x40
0x67 MLOAD
0x68 DUP1
0x69 DUP3
0x6a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7f AND
0x80 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x95 AND
0x96 DUP2
0x97 MSTORE
0x98 PUSH1 0x20
0x9a ADD
0x9b SWAP2
0x9c POP
0x9d POP
0x9e PUSH1 0x40
0xa0 MLOAD
0xa1 DUP1
0xa2 SWAP2
0xa3 SUB
0xa4 SWAP1
0xa5 RETURN
---
0x64: JUMPDEST 
0x65: V25 = 0x40
0x67: V26 = M[0x40]
0x6a: V27 = 0xffffffffffffffffffffffffffffffffffffffff
0x7f: V28 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0x80: V29 = 0xffffffffffffffffffffffffffffffffffffffff
0x95: V30 = AND 0xffffffffffffffffffffffffffffffffffffffff V28
0x97: M[V26] = V30
0x98: V31 = 0x20
0x9a: V32 = ADD 0x20 V26
0x9e: V33 = 0x40
0xa0: V34 = M[0x40]
0xa3: V35 = SUB V32 V34
0xa5: RETURN V34 V35
---
Entry stack: [V11, 0x64, V54]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x64]

================================

Block 0xa6
[0xa6:0xac]
---
Predecessors: [0x41]
Successors: [0xad, 0xb1]
---
0xa6 JUMPDEST
0xa7 CALLVALUE
0xa8 ISZERO
0xa9 PUSH2 0xb1
0xac JUMPI
---
0xa6: JUMPDEST 
0xa7: V36 = CALLVALUE
0xa8: V37 = ISZERO V36
0xa9: V38 = 0xb1
0xac: JUMPI 0xb1 V37
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xad
[0xad:0xb0]
---
Predecessors: [0xa6]
Successors: []
---
0xad PUSH1 0x0
0xaf DUP1
0xb0 REVERT
---
0xad: V39 = 0x0
0xb0: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb1
[0xb1:0xdc]
---
Predecessors: [0xa6]
Successors: [0x104]
---
0xb1 JUMPDEST
0xb2 PUSH2 0xdd
0xb5 PUSH1 0x4
0xb7 DUP1
0xb8 DUP1
0xb9 CALLDATALOAD
0xba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcf AND
0xd0 SWAP1
0xd1 PUSH1 0x20
0xd3 ADD
0xd4 SWAP1
0xd5 SWAP2
0xd6 SWAP1
0xd7 POP
0xd8 POP
0xd9 PUSH2 0x104
0xdc JUMP
---
0xb1: JUMPDEST 
0xb2: V40 = 0xdd
0xb5: V41 = 0x4
0xb9: V42 = CALLDATALOAD 0x4
0xba: V43 = 0xffffffffffffffffffffffffffffffffffffffff
0xcf: V44 = AND 0xffffffffffffffffffffffffffffffffffffffff V42
0xd1: V45 = 0x20
0xd3: V46 = ADD 0x20 0x4
0xd9: V47 = 0x104
0xdc: JUMP 0x104
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xdd, V44]
Exit stack: [V11, 0xdd, V44]

================================

Block 0xdd
[0xdd:0xde]
---
Predecessors: [0x19b]
Successors: []
---
0xdd JUMPDEST
0xde STOP
---
0xdd: JUMPDEST 
0xde: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xdf
[0xdf:0x103]
---
Predecessors: [0x5c]
Successors: [0x64]
---
0xdf JUMPDEST
0xe0 PUSH1 0x0
0xe2 DUP1
0xe3 SWAP1
0xe4 SLOAD
0xe5 SWAP1
0xe6 PUSH2 0x100
0xe9 EXP
0xea SWAP1
0xeb DIV
0xec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x101 AND
0x102 DUP2
0x103 JUMP
---
0xdf: JUMPDEST 
0xe0: V48 = 0x0
0xe4: V49 = S[0x0]
0xe6: V50 = 0x100
0xe9: V51 = EXP 0x100 0x0
0xeb: V52 = DIV V49 0x1
0xec: V53 = 0xffffffffffffffffffffffffffffffffffffffff
0x101: V54 = AND 0xffffffffffffffffffffffffffffffffffffffff V52
0x103: JUMP 0x64
---
Entry stack: [V11, 0x64]
Stack pops: 1
Stack additions: [S0, V54]
Exit stack: [V11, 0x64, V54]

================================

Block 0x104
[0x104:0x15a]
---
Predecessors: [0xb1]
Successors: [0x15b, 0x15f]
---
0x104 JUMPDEST
0x105 PUSH1 0x0
0x107 DUP1
0x108 SWAP1
0x109 SLOAD
0x10a SWAP1
0x10b PUSH2 0x100
0x10e EXP
0x10f SWAP1
0x110 DIV
0x111 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x126 AND
0x127 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13c AND
0x13d CALLER
0x13e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x153 AND
0x154 EQ
0x155 ISZERO
0x156 ISZERO
0x157 PUSH2 0x15f
0x15a JUMPI
---
0x104: JUMPDEST 
0x105: V55 = 0x0
0x109: V56 = S[0x0]
0x10b: V57 = 0x100
0x10e: V58 = EXP 0x100 0x0
0x110: V59 = DIV V56 0x1
0x111: V60 = 0xffffffffffffffffffffffffffffffffffffffff
0x126: V61 = AND 0xffffffffffffffffffffffffffffffffffffffff V59
0x127: V62 = 0xffffffffffffffffffffffffffffffffffffffff
0x13c: V63 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0x13d: V64 = CALLER
0x13e: V65 = 0xffffffffffffffffffffffffffffffffffffffff
0x153: V66 = AND 0xffffffffffffffffffffffffffffffffffffffff V64
0x154: V67 = EQ V66 V63
0x155: V68 = ISZERO V67
0x156: V69 = ISZERO V68
0x157: V70 = 0x15f
0x15a: JUMPI 0x15f V69
---
Entry stack: [V11, 0xdd, V44]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdd, V44]

================================

Block 0x15b
[0x15b:0x15e]
---
Predecessors: [0x104]
Successors: []
---
0x15b PUSH1 0x0
0x15d DUP1
0x15e REVERT
---
0x15b: V71 = 0x0
0x15e: REVERT 0x0 0x0
---
Entry stack: [V11, 0xdd, V44]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdd, V44]

================================

Block 0x15f
[0x15f:0x196]
---
Predecessors: [0x104]
Successors: [0x197, 0x19b]
---
0x15f JUMPDEST
0x160 PUSH1 0x0
0x162 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x177 AND
0x178 DUP2
0x179 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18e AND
0x18f EQ
0x190 ISZERO
0x191 ISZERO
0x192 ISZERO
0x193 PUSH2 0x19b
0x196 JUMPI
---
0x15f: JUMPDEST 
0x160: V72 = 0x0
0x162: V73 = 0xffffffffffffffffffffffffffffffffffffffff
0x177: V74 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x179: V75 = 0xffffffffffffffffffffffffffffffffffffffff
0x18e: V76 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0x18f: V77 = EQ V76 0x0
0x190: V78 = ISZERO V77
0x191: V79 = ISZERO V78
0x192: V80 = ISZERO V79
0x193: V81 = 0x19b
0x196: JUMPI 0x19b V80
---
Entry stack: [V11, 0xdd, V44]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xdd, V44]

================================

Block 0x197
[0x197:0x19a]
---
Predecessors: [0x15f]
Successors: []
---
0x197 PUSH1 0x0
0x199 DUP1
0x19a REVERT
---
0x197: V82 = 0x0
0x19a: REVERT 0x0 0x0
---
Entry stack: [V11, 0xdd, V44]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdd, V44]

================================

Block 0x19b
[0x19b:0x258]
---
Predecessors: [0x15f]
Successors: [0xdd]
---
0x19b JUMPDEST
0x19c DUP1
0x19d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b2 AND
0x1b3 PUSH1 0x0
0x1b5 DUP1
0x1b6 SWAP1
0x1b7 SLOAD
0x1b8 SWAP1
0x1b9 PUSH2 0x100
0x1bc EXP
0x1bd SWAP1
0x1be DIV
0x1bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d4 AND
0x1d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ea AND
0x1eb PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x20c PUSH1 0x40
0x20e MLOAD
0x20f PUSH1 0x40
0x211 MLOAD
0x212 DUP1
0x213 SWAP2
0x214 SUB
0x215 SWAP1
0x216 LOG3
0x217 DUP1
0x218 PUSH1 0x0
0x21a DUP1
0x21b PUSH2 0x100
0x21e EXP
0x21f DUP2
0x220 SLOAD
0x221 DUP2
0x222 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x237 MUL
0x238 NOT
0x239 AND
0x23a SWAP1
0x23b DUP4
0x23c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x251 AND
0x252 MUL
0x253 OR
0x254 SWAP1
0x255 SSTORE
0x256 POP
0x257 POP
0x258 JUMP
---
0x19b: JUMPDEST 
0x19d: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b2: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0x1b3: V85 = 0x0
0x1b7: V86 = S[0x0]
0x1b9: V87 = 0x100
0x1bc: V88 = EXP 0x100 0x0
0x1be: V89 = DIV V86 0x1
0x1bf: V90 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d4: V91 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0x1d5: V92 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ea: V93 = AND 0xffffffffffffffffffffffffffffffffffffffff V91
0x1eb: V94 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x20c: V95 = 0x40
0x20e: V96 = M[0x40]
0x20f: V97 = 0x40
0x211: V98 = M[0x40]
0x214: V99 = SUB V96 V98
0x216: LOG V98 V99 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V93 V84
0x218: V100 = 0x0
0x21b: V101 = 0x100
0x21e: V102 = EXP 0x100 0x0
0x220: V103 = S[0x0]
0x222: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x237: V105 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x238: V106 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x239: V107 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V103
0x23c: V108 = 0xffffffffffffffffffffffffffffffffffffffff
0x251: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff V44
0x252: V110 = MUL V109 0x1
0x253: V111 = OR V110 V107
0x255: S[0x0] = V111
0x258: JUMP 0xdd
---
Entry stack: [V11, 0xdd, V44]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x259
[0x259:0x329]
---
Predecessors: []
Successors: [0x32a]
---
0x259 STOP
0x25a LOG1
0x25b PUSH6 0x627a7a723058
0x262 SHA3
0x263 MISSING 0xaf
0x264 PUSH13 0x1305f69a8d5a618f83eec46aa6
0x272 MISSING 0x5f
0x273 MISSING 0xe
0x274 MISSING 0x29
0x275 SWAP9
0x276 EQ
0x277 MISSING 0xb2
0x278 GAS
0x279 LOG2
0x27a MISSING 0xbe
0x27b MISSING 0xda
0x27c PUSH22 0x6ac115e6a6c00297300000000000000000000000000
0x293 STOP
0x294 STOP
0x295 STOP
0x296 STOP
0x297 STOP
0x298 STOP
0x299 STOP
0x29a ADDRESS
0x29b EQ
0x29c PUSH1 0x60
0x29e PUSH1 0x40
0x2a0 MSTORE
0x2a1 PUSH1 0x0
0x2a3 DUP1
0x2a4 REVERT
0x2a5 STOP
0x2a6 LOG1
0x2a7 PUSH6 0x627a7a723058
0x2ae SHA3
0x2af SWAP9
0x2b0 MISSING 0xe3
0x2b1 SWAP3
0x2b2 MISSING 0x2a
0x2b3 MISSING 0xa6
0x2b4 MISSING 0xe6
0x2b5 MISSING 0xea
0x2b6 MISSING 0xcb
0x2b7 JUMPDEST
0x2b8 MISSING 0x1f
0x2b9 SWAP2
0x2ba MISSING 0xc7
0x2bb POP
0x2bc PUSH17 0xe00a2ac97dccf334d04aed54ef3c1ca381
0x2ce SUB
0x2cf STOP
0x2d0 MISSING 0x29
0x2d1 PUSH20 0x0
0x2e6 ADDRESS
0x2e7 EQ
0x2e8 PUSH1 0x60
0x2ea PUSH1 0x40
0x2ec MSTORE
0x2ed PUSH1 0x0
0x2ef DUP1
0x2f0 REVERT
0x2f1 STOP
0x2f2 LOG1
0x2f3 PUSH6 0x627a7a723058
0x2fa SHA3
0x2fb MISSING 0xb6
0x2fc DUP13
0x2fd EXTCODECOPY
0x2fe MISSING 0x1e
0x2ff MISSING 0xd3
0x300 SELFDESTRUCT
0x301 MISSING 0xd5
0x302 MISSING 0xa5
0x303 MISSING 0xe1
0x304 MISSING 0xb1
0x305 MISSING 0xc3
0x306 EQ
0x307 DUP16
0x308 MISSING 0xc4
0x309 DUP8
0x30a MISSING 0xcd
0x30b MISSING 0xc6
0x30c SHR
0x30d MISSING 0xf8
0x30e MISSING 0xb4
0x30f LOG1
0x310 CALLDATALOAD
0x311 MISSING 0xf8
0x312 MISSING 0x1e
0x313 MISSING 0xd0
0x314 MLOAD
0x315 SHL
0x316 MISSING 0x5e
0x317 CODESIZE
0x318 MISSING 0xbd
0x319 MISSING 0xcb
0x31a MISSING 0xba
0x31b STOP
0x31c MISSING 0x29
0x31d PUSH1 0x60
0x31f PUSH1 0x40
0x321 MSTORE
0x322 PUSH1 0x4
0x324 CALLDATASIZE
0x325 LT
0x326 PUSH2 0xc5
0x329 JUMPI
---
0x259: STOP 
0x25a: LOG S0 S1 S2
0x25b: V112 = 0x627a7a723058
0x262: V113 = SHA3 0x627a7a723058 S3
0x263: MISSING 0xaf
0x264: V114 = 0x1305f69a8d5a618f83eec46aa6
0x272: MISSING 0x5f
0x273: MISSING 0xe
0x274: MISSING 0x29
0x276: V115 = EQ S9 S1
0x277: MISSING 0xb2
0x278: V116 = GAS
0x279: LOG V116 S0 S1 S2
0x27a: MISSING 0xbe
0x27b: MISSING 0xda
0x27c: V117 = 0x6ac115e6a6c00297300000000000000000000000000
0x293: STOP 
0x294: STOP 
0x295: STOP 
0x296: STOP 
0x297: STOP 
0x298: STOP 
0x299: STOP 
0x29a: V118 = ADDRESS
0x29b: V119 = EQ V118 S0
0x29c: V120 = 0x60
0x29e: V121 = 0x40
0x2a0: M[0x40] = 0x60
0x2a1: V122 = 0x0
0x2a4: REVERT 0x0 0x0
0x2a5: STOP 
0x2a6: LOG S0 S1 S2
0x2a7: V123 = 0x627a7a723058
0x2ae: V124 = SHA3 0x627a7a723058 S3
0x2b0: MISSING 0xe3
0x2b2: MISSING 0x2a
0x2b3: MISSING 0xa6
0x2b4: MISSING 0xe6
0x2b5: MISSING 0xea
0x2b6: MISSING 0xcb
0x2b7: JUMPDEST 
0x2b8: MISSING 0x1f
0x2ba: MISSING 0xc7
0x2bc: V125 = 0xe00a2ac97dccf334d04aed54ef3c1ca381
0x2ce: V126 = SUB 0xe00a2ac97dccf334d04aed54ef3c1ca381 S1
0x2cf: STOP 
0x2d0: MISSING 0x29
0x2d1: V127 = 0x0
0x2e6: V128 = ADDRESS
0x2e7: V129 = EQ V128 0x0
0x2e8: V130 = 0x60
0x2ea: V131 = 0x40
0x2ec: M[0x40] = 0x60
0x2ed: V132 = 0x0
0x2f0: REVERT 0x0 0x0
0x2f1: STOP 
0x2f2: LOG S0 S1 S2
0x2f3: V133 = 0x627a7a723058
0x2fa: V134 = SHA3 0x627a7a723058 S3
0x2fb: MISSING 0xb6
0x2fd: EXTCODECOPY S12 S0 S1 S2
0x2fe: MISSING 0x1e
0x2ff: MISSING 0xd3
0x300: SELFDESTRUCT S0
0x301: MISSING 0xd5
0x302: MISSING 0xa5
0x303: MISSING 0xe1
0x304: MISSING 0xb1
0x305: MISSING 0xc3
0x306: V135 = EQ S0 S1
0x308: MISSING 0xc4
0x30a: MISSING 0xcd
0x30b: MISSING 0xc6
0x30c: V136 = SHR S0 S1
0x30d: MISSING 0xf8
0x30e: MISSING 0xb4
0x30f: LOG S0 S1 S2
0x310: V137 = CALLDATALOAD S3
0x311: MISSING 0xf8
0x312: MISSING 0x1e
0x313: MISSING 0xd0
0x314: V138 = M[S0]
0x315: V139 = SHL V138 S1
0x316: MISSING 0x5e
0x317: V140 = CODESIZE
0x318: MISSING 0xbd
0x319: MISSING 0xcb
0x31a: MISSING 0xba
0x31b: STOP 
0x31c: MISSING 0x29
0x31d: V141 = 0x60
0x31f: V142 = 0x40
0x321: M[0x40] = 0x60
0x322: V143 = 0x4
0x324: V144 = CALLDATASIZE
0x325: V145 = LT V144 0x4
0x326: V146 = 0xc5
0x329: THROWI V145
---
Entry stack: []
Stack pops: 0
Stack additions: [V113, 0x1305f69a8d5a618f83eec46aa6, V115, S2, S3, S4, S5, S6, S7, S8, S0, 0x6ac115e6a6c00297300000000000000000000000000, V119, S12, S4, S5, S6, S7, S8, S9, S10, S11, V124, S3, S1, S2, S0, S2, S1, S0, V126, V129, V134, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S16, V135, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S7, S0, S1, S2, S3, S4, S5, S6, S7, V136, V137, V139, V140]
Exit stack: []

================================

Block 0x32a
[0x32a:0x35d]
---
Predecessors: [0x259]
Successors: [0x35e]
---
0x32a PUSH1 0x0
0x32c CALLDATALOAD
0x32d PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x34b SWAP1
0x34c DIV
0x34d PUSH4 0xffffffff
0x352 AND
0x353 DUP1
0x354 PUSH4 0xfb5a6b4
0x359 EQ
0x35a PUSH2 0xca
0x35d JUMPI
---
0x32a: V147 = 0x0
0x32c: V148 = CALLDATALOAD 0x0
0x32d: V149 = 0x100000000000000000000000000000000000000000000000000000000
0x34c: V150 = DIV V148 0x100000000000000000000000000000000000000000000000000000000
0x34d: V151 = 0xffffffff
0x352: V152 = AND 0xffffffff V150
0x354: V153 = 0xfb5a6b4
0x359: V154 = EQ 0xfb5a6b4 V152
0x35a: V155 = 0xca
0x35d: THROWI V154
---
Entry stack: []
Stack pops: 0
Stack additions: [V152]
Exit stack: [V152]

================================

Block 0x35e
[0x35e:0x368]
---
Predecessors: [0x32a]
Successors: [0x369]
---
0x35e DUP1
0x35f PUSH4 0x13d033c0
0x364 EQ
0x365 PUSH2 0xf3
0x368 JUMPI
---
0x35f: V156 = 0x13d033c0
0x364: V157 = EQ 0x13d033c0 V152
0x365: V158 = 0xf3
0x368: THROWI V157
---
Entry stack: [V152]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V152]

================================

Block 0x369
[0x369:0x373]
---
Predecessors: [0x35e]
Successors: [0x374]
---
0x369 DUP1
0x36a PUSH4 0x1726cbc8
0x36f EQ
0x370 PUSH2 0x11c
0x373 JUMPI
---
0x36a: V159 = 0x1726cbc8
0x36f: V160 = EQ 0x1726cbc8 V152
0x370: V161 = 0x11c
0x373: THROWI V160
---
Entry stack: [V152]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V152]

================================

Block 0x374
[0x374:0x37e]
---
Predecessors: [0x369]
Successors: [0x37f]
---
0x374 DUP1
0x375 PUSH4 0x19165587
0x37a EQ
0x37b PUSH2 0x169
0x37e JUMPI
---
0x375: V162 = 0x19165587
0x37a: V163 = EQ 0x19165587 V152
0x37b: V164 = 0x169
0x37e: THROWI V163
---
Entry stack: [V152]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V152]

================================

Block 0x37f
[0x37f:0x389]
---
Predecessors: [0x374]
Successors: [0x38a]
---
0x37f DUP1
0x380 PUSH4 0x384711cc
0x385 EQ
0x386 PUSH2 0x1a2
0x389 JUMPI
---
0x380: V165 = 0x384711cc
0x385: V166 = EQ 0x384711cc V152
0x386: V167 = 0x1a2
0x389: THROWI V166
---
Entry stack: [V152]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V152]

================================

Block 0x38a
[0x38a:0x394]
---
Predecessors: [0x37f]
Successors: [0x395]
---
0x38a DUP1
0x38b PUSH4 0x38af3eed
0x390 EQ
0x391 PUSH2 0x1ef
0x394 JUMPI
---
0x38b: V168 = 0x38af3eed
0x390: V169 = EQ 0x38af3eed V152
0x391: V170 = 0x1ef
0x394: THROWI V169
---
Entry stack: [V152]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V152]

================================

Block 0x395
[0x395:0x39f]
---
Predecessors: [0x38a]
Successors: [0x3a0]
---
0x395 DUP1
0x396 PUSH4 0x74a8f103
0x39b EQ
0x39c PUSH2 0x244
0x39f JUMPI
---
0x396: V171 = 0x74a8f103
0x39b: V172 = EQ 0x74a8f103 V152
0x39c: V173 = 0x244
0x39f: THROWI V172
---
Entry stack: [V152]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V152]

================================

Block 0x3a0
[0x3a0:0x3aa]
---
Predecessors: [0x395]
Successors: [0x3ab]
---
0x3a0 DUP1
0x3a1 PUSH4 0x872a7810
0x3a6 EQ
0x3a7 PUSH2 0x27d
0x3aa JUMPI
---
0x3a1: V174 = 0x872a7810
0x3a6: V175 = EQ 0x872a7810 V152
0x3a7: V176 = 0x27d
0x3aa: THROWI V175
---
Entry stack: [V152]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V152]

================================

Block 0x3ab
[0x3ab:0x3b5]
---
Predecessors: [0x3a0]
Successors: [0x3b6]
---
0x3ab DUP1
0x3ac PUSH4 0x8da5cb5b
0x3b1 EQ
0x3b2 PUSH2 0x2aa
0x3b5 JUMPI
---
0x3ac: V177 = 0x8da5cb5b
0x3b1: V178 = EQ 0x8da5cb5b V152
0x3b2: V179 = 0x2aa
0x3b5: THROWI V178
---
Entry stack: [V152]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V152]

================================

Block 0x3b6
[0x3b6:0x3c0]
---
Predecessors: [0x3ab]
Successors: [0x3c1]
---
0x3b6 DUP1
0x3b7 PUSH4 0x9852595c
0x3bc EQ
0x3bd PUSH2 0x2ff
0x3c0 JUMPI
---
0x3b7: V180 = 0x9852595c
0x3bc: V181 = EQ 0x9852595c V152
0x3bd: V182 = 0x2ff
0x3c0: THROWI V181
---
Entry stack: [V152]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V152]

================================

Block 0x3c1
[0x3c1:0x3cb]
---
Predecessors: [0x3b6]
Successors: [0x3cc]
---
0x3c1 DUP1
0x3c2 PUSH4 0xbe9a6555
0x3c7 EQ
0x3c8 PUSH2 0x34c
0x3cb JUMPI
---
0x3c2: V183 = 0xbe9a6555
0x3c7: V184 = EQ 0xbe9a6555 V152
0x3c8: V185 = 0x34c
0x3cb: THROWI V184
---
Entry stack: [V152]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V152]

================================

Block 0x3cc
[0x3cc:0x3d6]
---
Predecessors: [0x3c1]
Successors: [0x3d7]
---
0x3cc DUP1
0x3cd PUSH4 0xf2fde38b
0x3d2 EQ
0x3d3 PUSH2 0x375
0x3d6 JUMPI
---
0x3cd: V186 = 0xf2fde38b
0x3d2: V187 = EQ 0xf2fde38b V152
0x3d3: V188 = 0x375
0x3d6: THROWI V187
---
Entry stack: [V152]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V152]

================================

Block 0x3d7
[0x3d7:0x3e1]
---
Predecessors: [0x3cc]
Successors: [0x3e2]
---
0x3d7 DUP1
0x3d8 PUSH4 0xfa01dc06
0x3dd EQ
0x3de PUSH2 0x3ae
0x3e1 JUMPI
---
0x3d8: V189 = 0xfa01dc06
0x3dd: V190 = EQ 0xfa01dc06 V152
0x3de: V191 = 0x3ae
0x3e1: THROWI V190
---
Entry stack: [V152]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V152]

================================

Block 0x3e2
[0x3e2:0x3ed]
---
Predecessors: [0x3d7]
Successors: [0x3ee]
---
0x3e2 JUMPDEST
0x3e3 PUSH1 0x0
0x3e5 DUP1
0x3e6 REVERT
0x3e7 JUMPDEST
0x3e8 CALLVALUE
0x3e9 ISZERO
0x3ea PUSH2 0xd5
0x3ed JUMPI
---
0x3e2: JUMPDEST 
0x3e3: V192 = 0x0
0x3e6: REVERT 0x0 0x0
0x3e7: JUMPDEST 
0x3e8: V193 = CALLVALUE
0x3e9: V194 = ISZERO V193
0x3ea: V195 = 0xd5
0x3ed: THROWI V194
---
Entry stack: [V152]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3ee
[0x3ee:0x416]
---
Predecessors: [0x3e2]
Successors: [0x417]
---
0x3ee PUSH1 0x0
0x3f0 DUP1
0x3f1 REVERT
0x3f2 JUMPDEST
0x3f3 PUSH2 0xdd
0x3f6 PUSH2 0x3ff
0x3f9 JUMP
0x3fa JUMPDEST
0x3fb PUSH1 0x40
0x3fd MLOAD
0x3fe DUP1
0x3ff DUP3
0x400 DUP2
0x401 MSTORE
0x402 PUSH1 0x20
0x404 ADD
0x405 SWAP2
0x406 POP
0x407 POP
0x408 PUSH1 0x40
0x40a MLOAD
0x40b DUP1
0x40c SWAP2
0x40d SUB
0x40e SWAP1
0x40f RETURN
0x410 JUMPDEST
0x411 CALLVALUE
0x412 ISZERO
0x413 PUSH2 0xfe
0x416 JUMPI
---
0x3ee: V196 = 0x0
0x3f1: REVERT 0x0 0x0
0x3f2: JUMPDEST 
0x3f3: V197 = 0xdd
0x3f6: V198 = 0x3ff
0x3f9: THROW 
0x3fa: JUMPDEST 
0x3fb: V199 = 0x40
0x3fd: V200 = M[0x40]
0x401: M[V200] = S0
0x402: V201 = 0x20
0x404: V202 = ADD 0x20 V200
0x408: V203 = 0x40
0x40a: V204 = M[0x40]
0x40d: V205 = SUB V202 V204
0x40f: RETURN V204 V205
0x410: JUMPDEST 
0x411: V206 = CALLVALUE
0x412: V207 = ISZERO V206
0x413: V208 = 0xfe
0x416: THROWI V207
---
Entry stack: []
Stack pops: 0
Stack additions: [0xdd]
Exit stack: []

================================

Block 0x417
[0x417:0x43f]
---
Predecessors: [0x3ee]
Successors: [0x440]
---
0x417 PUSH1 0x0
0x419 DUP1
0x41a REVERT
0x41b JUMPDEST
0x41c PUSH2 0x106
0x41f PUSH2 0x405
0x422 JUMP
0x423 JUMPDEST
0x424 PUSH1 0x40
0x426 MLOAD
0x427 DUP1
0x428 DUP3
0x429 DUP2
0x42a MSTORE
0x42b PUSH1 0x20
0x42d ADD
0x42e SWAP2
0x42f POP
0x430 POP
0x431 PUSH1 0x40
0x433 MLOAD
0x434 DUP1
0x435 SWAP2
0x436 SUB
0x437 SWAP1
0x438 RETURN
0x439 JUMPDEST
0x43a CALLVALUE
0x43b ISZERO
0x43c PUSH2 0x127
0x43f JUMPI
---
0x417: V209 = 0x0
0x41a: REVERT 0x0 0x0
0x41b: JUMPDEST 
0x41c: V210 = 0x106
0x41f: V211 = 0x405
0x422: THROW 
0x423: JUMPDEST 
0x424: V212 = 0x40
0x426: V213 = M[0x40]
0x42a: M[V213] = S0
0x42b: V214 = 0x20
0x42d: V215 = ADD 0x20 V213
0x431: V216 = 0x40
0x433: V217 = M[0x40]
0x436: V218 = SUB V215 V217
0x438: RETURN V217 V218
0x439: JUMPDEST 
0x43a: V219 = CALLVALUE
0x43b: V220 = ISZERO V219
0x43c: V221 = 0x127
0x43f: THROWI V220
---
Entry stack: []
Stack pops: 0
Stack additions: [0x106]
Exit stack: []

================================

Block 0x440
[0x440:0x48c]
---
Predecessors: [0x417]
Successors: [0x48d]
---
0x440 PUSH1 0x0
0x442 DUP1
0x443 REVERT
0x444 JUMPDEST
0x445 PUSH2 0x153
0x448 PUSH1 0x4
0x44a DUP1
0x44b DUP1
0x44c CALLDATALOAD
0x44d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x462 AND
0x463 SWAP1
0x464 PUSH1 0x20
0x466 ADD
0x467 SWAP1
0x468 SWAP2
0x469 SWAP1
0x46a POP
0x46b POP
0x46c PUSH2 0x40b
0x46f JUMP
0x470 JUMPDEST
0x471 PUSH1 0x40
0x473 MLOAD
0x474 DUP1
0x475 DUP3
0x476 DUP2
0x477 MSTORE
0x478 PUSH1 0x20
0x47a ADD
0x47b SWAP2
0x47c POP
0x47d POP
0x47e PUSH1 0x40
0x480 MLOAD
0x481 DUP1
0x482 SWAP2
0x483 SUB
0x484 SWAP1
0x485 RETURN
0x486 JUMPDEST
0x487 CALLVALUE
0x488 ISZERO
0x489 PUSH2 0x174
0x48c JUMPI
---
0x440: V222 = 0x0
0x443: REVERT 0x0 0x0
0x444: JUMPDEST 
0x445: V223 = 0x153
0x448: V224 = 0x4
0x44c: V225 = CALLDATALOAD 0x4
0x44d: V226 = 0xffffffffffffffffffffffffffffffffffffffff
0x462: V227 = AND 0xffffffffffffffffffffffffffffffffffffffff V225
0x464: V228 = 0x20
0x466: V229 = ADD 0x20 0x4
0x46c: V230 = 0x40b
0x46f: THROW 
0x470: JUMPDEST 
0x471: V231 = 0x40
0x473: V232 = M[0x40]
0x477: M[V232] = S0
0x478: V233 = 0x20
0x47a: V234 = ADD 0x20 V232
0x47e: V235 = 0x40
0x480: V236 = M[0x40]
0x483: V237 = SUB V234 V236
0x485: RETURN V236 V237
0x486: JUMPDEST 
0x487: V238 = CALLVALUE
0x488: V239 = ISZERO V238
0x489: V240 = 0x174
0x48c: THROWI V239
---
Entry stack: []
Stack pops: 0
Stack additions: [V227, 0x153]
Exit stack: []

================================

Block 0x48d
[0x48d:0x4c5]
---
Predecessors: [0x440]
Successors: [0x4c6]
---
0x48d PUSH1 0x0
0x48f DUP1
0x490 REVERT
0x491 JUMPDEST
0x492 PUSH2 0x1a0
0x495 PUSH1 0x4
0x497 DUP1
0x498 DUP1
0x499 CALLDATALOAD
0x49a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4af AND
0x4b0 SWAP1
0x4b1 PUSH1 0x20
0x4b3 ADD
0x4b4 SWAP1
0x4b5 SWAP2
0x4b6 SWAP1
0x4b7 POP
0x4b8 POP
0x4b9 PUSH2 0x46e
0x4bc JUMP
0x4bd JUMPDEST
0x4be STOP
0x4bf JUMPDEST
0x4c0 CALLVALUE
0x4c1 ISZERO
0x4c2 PUSH2 0x1ad
0x4c5 JUMPI
---
0x48d: V241 = 0x0
0x490: REVERT 0x0 0x0
0x491: JUMPDEST 
0x492: V242 = 0x1a0
0x495: V243 = 0x4
0x499: V244 = CALLDATALOAD 0x4
0x49a: V245 = 0xffffffffffffffffffffffffffffffffffffffff
0x4af: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff V244
0x4b1: V247 = 0x20
0x4b3: V248 = ADD 0x20 0x4
0x4b9: V249 = 0x46e
0x4bc: THROW 
0x4bd: JUMPDEST 
0x4be: STOP 
0x4bf: JUMPDEST 
0x4c0: V250 = CALLVALUE
0x4c1: V251 = ISZERO V250
0x4c2: V252 = 0x1ad
0x4c5: THROWI V251
---
Entry stack: []
Stack pops: 0
Stack additions: [V246, 0x1a0]
Exit stack: []

================================

Block 0x4c6
[0x4c6:0x512]
---
Predecessors: [0x48d]
Successors: [0x513]
---
0x4c6 PUSH1 0x0
0x4c8 DUP1
0x4c9 REVERT
0x4ca JUMPDEST
0x4cb PUSH2 0x1d9
0x4ce PUSH1 0x4
0x4d0 DUP1
0x4d1 DUP1
0x4d2 CALLDATALOAD
0x4d3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4e8 AND
0x4e9 SWAP1
0x4ea PUSH1 0x20
0x4ec ADD
0x4ed SWAP1
0x4ee SWAP2
0x4ef SWAP1
0x4f0 POP
0x4f1 POP
0x4f2 PUSH2 0x5a7
0x4f5 JUMP
0x4f6 JUMPDEST
0x4f7 PUSH1 0x40
0x4f9 MLOAD
0x4fa DUP1
0x4fb DUP3
0x4fc DUP2
0x4fd MSTORE
0x4fe PUSH1 0x20
0x500 ADD
0x501 SWAP2
0x502 POP
0x503 POP
0x504 PUSH1 0x40
0x506 MLOAD
0x507 DUP1
0x508 SWAP2
0x509 SUB
0x50a SWAP1
0x50b RETURN
0x50c JUMPDEST
0x50d CALLVALUE
0x50e ISZERO
0x50f PUSH2 0x1fa
0x512 JUMPI
---
0x4c6: V253 = 0x0
0x4c9: REVERT 0x0 0x0
0x4ca: JUMPDEST 
0x4cb: V254 = 0x1d9
0x4ce: V255 = 0x4
0x4d2: V256 = CALLDATALOAD 0x4
0x4d3: V257 = 0xffffffffffffffffffffffffffffffffffffffff
0x4e8: V258 = AND 0xffffffffffffffffffffffffffffffffffffffff V256
0x4ea: V259 = 0x20
0x4ec: V260 = ADD 0x20 0x4
0x4f2: V261 = 0x5a7
0x4f5: THROW 
0x4f6: JUMPDEST 
0x4f7: V262 = 0x40
0x4f9: V263 = M[0x40]
0x4fd: M[V263] = S0
0x4fe: V264 = 0x20
0x500: V265 = ADD 0x20 V263
0x504: V266 = 0x40
0x506: V267 = M[0x40]
0x509: V268 = SUB V265 V267
0x50b: RETURN V267 V268
0x50c: JUMPDEST 
0x50d: V269 = CALLVALUE
0x50e: V270 = ISZERO V269
0x50f: V271 = 0x1fa
0x512: THROWI V270
---
Entry stack: []
Stack pops: 0
Stack additions: [V258, 0x1d9]
Exit stack: []

================================

Block 0x513
[0x513:0x567]
---
Predecessors: [0x4c6]
Successors: [0x568]
---
0x513 PUSH1 0x0
0x515 DUP1
0x516 REVERT
0x517 JUMPDEST
0x518 PUSH2 0x202
0x51b PUSH2 0x786
0x51e JUMP
0x51f JUMPDEST
0x520 PUSH1 0x40
0x522 MLOAD
0x523 DUP1
0x524 DUP3
0x525 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x53a AND
0x53b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x550 AND
0x551 DUP2
0x552 MSTORE
0x553 PUSH1 0x20
0x555 ADD
0x556 SWAP2
0x557 POP
0x558 POP
0x559 PUSH1 0x40
0x55b MLOAD
0x55c DUP1
0x55d SWAP2
0x55e SUB
0x55f SWAP1
0x560 RETURN
0x561 JUMPDEST
0x562 CALLVALUE
0x563 ISZERO
0x564 PUSH2 0x24f
0x567 JUMPI
---
0x513: V272 = 0x0
0x516: REVERT 0x0 0x0
0x517: JUMPDEST 
0x518: V273 = 0x202
0x51b: V274 = 0x786
0x51e: THROW 
0x51f: JUMPDEST 
0x520: V275 = 0x40
0x522: V276 = M[0x40]
0x525: V277 = 0xffffffffffffffffffffffffffffffffffffffff
0x53a: V278 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x53b: V279 = 0xffffffffffffffffffffffffffffffffffffffff
0x550: V280 = AND 0xffffffffffffffffffffffffffffffffffffffff V278
0x552: M[V276] = V280
0x553: V281 = 0x20
0x555: V282 = ADD 0x20 V276
0x559: V283 = 0x40
0x55b: V284 = M[0x40]
0x55e: V285 = SUB V282 V284
0x560: RETURN V284 V285
0x561: JUMPDEST 
0x562: V286 = CALLVALUE
0x563: V287 = ISZERO V286
0x564: V288 = 0x24f
0x567: THROWI V287
---
Entry stack: []
Stack pops: 0
Stack additions: [0x202]
Exit stack: []

================================

Block 0x568
[0x568:0x5a0]
---
Predecessors: [0x513]
Successors: [0x5a1]
---
0x568 PUSH1 0x0
0x56a DUP1
0x56b REVERT
0x56c JUMPDEST
0x56d PUSH2 0x27b
0x570 PUSH1 0x4
0x572 DUP1
0x573 DUP1
0x574 CALLDATALOAD
0x575 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x58a AND
0x58b SWAP1
0x58c PUSH1 0x20
0x58e ADD
0x58f SWAP1
0x590 SWAP2
0x591 SWAP1
0x592 POP
0x593 POP
0x594 PUSH2 0x7ac
0x597 JUMP
0x598 JUMPDEST
0x599 STOP
0x59a JUMPDEST
0x59b CALLVALUE
0x59c ISZERO
0x59d PUSH2 0x288
0x5a0 JUMPI
---
0x568: V289 = 0x0
0x56b: REVERT 0x0 0x0
0x56c: JUMPDEST 
0x56d: V290 = 0x27b
0x570: V291 = 0x4
0x574: V292 = CALLDATALOAD 0x4
0x575: V293 = 0xffffffffffffffffffffffffffffffffffffffff
0x58a: V294 = AND 0xffffffffffffffffffffffffffffffffffffffff V292
0x58c: V295 = 0x20
0x58e: V296 = ADD 0x20 0x4
0x594: V297 = 0x7ac
0x597: THROW 
0x598: JUMPDEST 
0x599: STOP 
0x59a: JUMPDEST 
0x59b: V298 = CALLVALUE
0x59c: V299 = ISZERO V298
0x59d: V300 = 0x288
0x5a0: THROWI V299
---
Entry stack: []
Stack pops: 0
Stack additions: [V294, 0x27b]
Exit stack: []

================================

Block 0x5a1
[0x5a1:0x5cd]
---
Predecessors: [0x568]
Successors: [0x5ce]
---
0x5a1 PUSH1 0x0
0x5a3 DUP1
0x5a4 REVERT
0x5a5 JUMPDEST
0x5a6 PUSH2 0x290
0x5a9 PUSH2 0xa29
0x5ac JUMP
0x5ad JUMPDEST
0x5ae PUSH1 0x40
0x5b0 MLOAD
0x5b1 DUP1
0x5b2 DUP3
0x5b3 ISZERO
0x5b4 ISZERO
0x5b5 ISZERO
0x5b6 ISZERO
0x5b7 DUP2
0x5b8 MSTORE
0x5b9 PUSH1 0x20
0x5bb ADD
0x5bc SWAP2
0x5bd POP
0x5be POP
0x5bf PUSH1 0x40
0x5c1 MLOAD
0x5c2 DUP1
0x5c3 SWAP2
0x5c4 SUB
0x5c5 SWAP1
0x5c6 RETURN
0x5c7 JUMPDEST
0x5c8 CALLVALUE
0x5c9 ISZERO
0x5ca PUSH2 0x2b5
0x5cd JUMPI
---
0x5a1: V301 = 0x0
0x5a4: REVERT 0x0 0x0
0x5a5: JUMPDEST 
0x5a6: V302 = 0x290
0x5a9: V303 = 0xa29
0x5ac: THROW 
0x5ad: JUMPDEST 
0x5ae: V304 = 0x40
0x5b0: V305 = M[0x40]
0x5b3: V306 = ISZERO S0
0x5b4: V307 = ISZERO V306
0x5b5: V308 = ISZERO V307
0x5b6: V309 = ISZERO V308
0x5b8: M[V305] = V309
0x5b9: V310 = 0x20
0x5bb: V311 = ADD 0x20 V305
0x5bf: V312 = 0x40
0x5c1: V313 = M[0x40]
0x5c4: V314 = SUB V311 V313
0x5c6: RETURN V313 V314
0x5c7: JUMPDEST 
0x5c8: V315 = CALLVALUE
0x5c9: V316 = ISZERO V315
0x5ca: V317 = 0x2b5
0x5cd: THROWI V316
---
Entry stack: []
Stack pops: 0
Stack additions: [0x290]
Exit stack: []

================================

Block 0x5ce
[0x5ce:0x622]
---
Predecessors: [0x5a1]
Successors: [0x623]
---
0x5ce PUSH1 0x0
0x5d0 DUP1
0x5d1 REVERT
0x5d2 JUMPDEST
0x5d3 PUSH2 0x2bd
0x5d6 PUSH2 0xa3c
0x5d9 JUMP
0x5da JUMPDEST
0x5db PUSH1 0x40
0x5dd MLOAD
0x5de DUP1
0x5df DUP3
0x5e0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5f5 AND
0x5f6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x60b AND
0x60c DUP2
0x60d MSTORE
0x60e PUSH1 0x20
0x610 ADD
0x611 SWAP2
0x612 POP
0x613 POP
0x614 PUSH1 0x40
0x616 MLOAD
0x617 DUP1
0x618 SWAP2
0x619 SUB
0x61a SWAP1
0x61b RETURN
0x61c JUMPDEST
0x61d CALLVALUE
0x61e ISZERO
0x61f PUSH2 0x30a
0x622 JUMPI
---
0x5ce: V318 = 0x0
0x5d1: REVERT 0x0 0x0
0x5d2: JUMPDEST 
0x5d3: V319 = 0x2bd
0x5d6: V320 = 0xa3c
0x5d9: THROW 
0x5da: JUMPDEST 
0x5db: V321 = 0x40
0x5dd: V322 = M[0x40]
0x5e0: V323 = 0xffffffffffffffffffffffffffffffffffffffff
0x5f5: V324 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x5f6: V325 = 0xffffffffffffffffffffffffffffffffffffffff
0x60b: V326 = AND 0xffffffffffffffffffffffffffffffffffffffff V324
0x60d: M[V322] = V326
0x60e: V327 = 0x20
0x610: V328 = ADD 0x20 V322
0x614: V329 = 0x40
0x616: V330 = M[0x40]
0x619: V331 = SUB V328 V330
0x61b: RETURN V330 V331
0x61c: JUMPDEST 
0x61d: V332 = CALLVALUE
0x61e: V333 = ISZERO V332
0x61f: V334 = 0x30a
0x622: THROWI V333
---
Entry stack: []
Stack pops: 0
Stack additions: [0x2bd]
Exit stack: []

================================

Block 0x623
[0x623:0x652]
---
Predecessors: [0x5ce]
Successors: []
---
0x623 PUSH1 0x0
0x625 DUP1
0x626 REVERT
0x627 JUMPDEST
0x628 PUSH2 0x336
0x62b PUSH1 0x4
0x62d DUP1
0x62e DUP1
0x62f CALLDATALOAD
0x630 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x645 AND
0x646 SWAP1
0x647 PUSH1 0x20
0x649 ADD
0x64a SWAP1
0x64b SWAP2
0x64c SWAP1
0x64d POP
0x64e POP
0x64f PUSH2 0xa61
0x652 JUMP
---
0x623: V335 = 0x0
0x626: REVERT 0x0 0x0
0x627: JUMPDEST 
0x628: V336 = 0x336
0x62b: V337 = 0x4
0x62f: V338 = CALLDATALOAD 0x4
0x630: V339 = 0xffffffffffffffffffffffffffffffffffffffff
0x645: V340 = AND 0xffffffffffffffffffffffffffffffffffffffff V338
0x647: V341 = 0x20
0x649: V342 = ADD 0x20 0x4
0x64f: V343 = 0xa61
0x652: THROW 
---
Entry stack: []
Stack pops: 0
Stack additions: [V340, 0x336]
Exit stack: []

================================

Block 0x653
[0x653:0x66f]
---
Predecessors: [0x95f]
Successors: [0x670]
---
0x653 JUMPDEST
0x654 PUSH1 0x40
0x656 MLOAD
0x657 DUP1
0x658 DUP3
0x659 DUP2
0x65a MSTORE
0x65b PUSH1 0x20
0x65d ADD
0x65e SWAP2
0x65f POP
0x660 POP
0x661 PUSH1 0x40
0x663 MLOAD
0x664 DUP1
0x665 SWAP2
0x666 SUB
0x667 SWAP1
0x668 RETURN
0x669 JUMPDEST
0x66a CALLVALUE
0x66b ISZERO
0x66c PUSH2 0x357
0x66f JUMPI
---
0x653: JUMPDEST 
0x654: V344 = 0x40
0x656: V345 = M[0x40]
0x65a: M[V345] = S0
0x65b: V346 = 0x20
0x65d: V347 = ADD 0x20 V345
0x661: V348 = 0x40
0x663: V349 = M[0x40]
0x666: V350 = SUB V347 V349
0x668: RETURN V349 V350
0x669: JUMPDEST 
0x66a: V351 = CALLVALUE
0x66b: V352 = ISZERO V351
0x66c: V353 = 0x357
0x66f: THROWI V352
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x670
[0x670:0x698]
---
Predecessors: [0x653]
Successors: [0x699]
---
0x670 PUSH1 0x0
0x672 DUP1
0x673 REVERT
0x674 JUMPDEST
0x675 PUSH2 0x35f
0x678 PUSH2 0xa79
0x67b JUMP
0x67c JUMPDEST
0x67d PUSH1 0x40
0x67f MLOAD
0x680 DUP1
0x681 DUP3
0x682 DUP2
0x683 MSTORE
0x684 PUSH1 0x20
0x686 ADD
0x687 SWAP2
0x688 POP
0x689 POP
0x68a PUSH1 0x40
0x68c MLOAD
0x68d DUP1
0x68e SWAP2
0x68f SUB
0x690 SWAP1
0x691 RETURN
0x692 JUMPDEST
0x693 CALLVALUE
0x694 ISZERO
0x695 PUSH2 0x380
0x698 JUMPI
---
0x670: V354 = 0x0
0x673: REVERT 0x0 0x0
0x674: JUMPDEST 
0x675: V355 = 0x35f
0x678: V356 = 0xa79
0x67b: THROW 
0x67c: JUMPDEST 
0x67d: V357 = 0x40
0x67f: V358 = M[0x40]
0x683: M[V358] = S0
0x684: V359 = 0x20
0x686: V360 = ADD 0x20 V358
0x68a: V361 = 0x40
0x68c: V362 = M[0x40]
0x68f: V363 = SUB V360 V362
0x691: RETURN V362 V363
0x692: JUMPDEST 
0x693: V364 = CALLVALUE
0x694: V365 = ISZERO V364
0x695: V366 = 0x380
0x698: THROWI V365
---
Entry stack: []
Stack pops: 0
Stack additions: [0x35f]
Exit stack: []

================================

Block 0x699
[0x699:0x6d1]
---
Predecessors: [0x670]
Successors: [0x6d2]
---
0x699 PUSH1 0x0
0x69b DUP1
0x69c REVERT
0x69d JUMPDEST
0x69e PUSH2 0x3ac
0x6a1 PUSH1 0x4
0x6a3 DUP1
0x6a4 DUP1
0x6a5 CALLDATALOAD
0x6a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6bb AND
0x6bc SWAP1
0x6bd PUSH1 0x20
0x6bf ADD
0x6c0 SWAP1
0x6c1 SWAP2
0x6c2 SWAP1
0x6c3 POP
0x6c4 POP
0x6c5 PUSH2 0xa7f
0x6c8 JUMP
0x6c9 JUMPDEST
0x6ca STOP
0x6cb JUMPDEST
0x6cc CALLVALUE
0x6cd ISZERO
0x6ce PUSH2 0x3b9
0x6d1 JUMPI
---
0x699: V367 = 0x0
0x69c: REVERT 0x0 0x0
0x69d: JUMPDEST 
0x69e: V368 = 0x3ac
0x6a1: V369 = 0x4
0x6a5: V370 = CALLDATALOAD 0x4
0x6a6: V371 = 0xffffffffffffffffffffffffffffffffffffffff
0x6bb: V372 = AND 0xffffffffffffffffffffffffffffffffffffffff V370
0x6bd: V373 = 0x20
0x6bf: V374 = ADD 0x20 0x4
0x6c5: V375 = 0xa7f
0x6c8: THROW 
0x6c9: JUMPDEST 
0x6ca: STOP 
0x6cb: JUMPDEST 
0x6cc: V376 = CALLVALUE
0x6cd: V377 = ISZERO V376
0x6ce: V378 = 0x3b9
0x6d1: THROWI V377
---
Entry stack: []
Stack pops: 0
Stack additions: [V372, 0x3ac]
Exit stack: []

================================

Block 0x6d2
[0x6d2:0x7a2]
---
Predecessors: [0x699]
Successors: [0x7a3]
---
0x6d2 PUSH1 0x0
0x6d4 DUP1
0x6d5 REVERT
0x6d6 JUMPDEST
0x6d7 PUSH2 0x3e5
0x6da PUSH1 0x4
0x6dc DUP1
0x6dd DUP1
0x6de CALLDATALOAD
0x6df PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6f4 AND
0x6f5 SWAP1
0x6f6 PUSH1 0x20
0x6f8 ADD
0x6f9 SWAP1
0x6fa SWAP2
0x6fb SWAP1
0x6fc POP
0x6fd POP
0x6fe PUSH2 0xbd4
0x701 JUMP
0x702 JUMPDEST
0x703 PUSH1 0x40
0x705 MLOAD
0x706 DUP1
0x707 DUP3
0x708 ISZERO
0x709 ISZERO
0x70a ISZERO
0x70b ISZERO
0x70c DUP2
0x70d MSTORE
0x70e PUSH1 0x20
0x710 ADD
0x711 SWAP2
0x712 POP
0x713 POP
0x714 PUSH1 0x40
0x716 MLOAD
0x717 DUP1
0x718 SWAP2
0x719 SUB
0x71a SWAP1
0x71b RETURN
0x71c JUMPDEST
0x71d PUSH1 0x4
0x71f SLOAD
0x720 DUP2
0x721 JUMP
0x722 JUMPDEST
0x723 PUSH1 0x2
0x725 SLOAD
0x726 DUP2
0x727 JUMP
0x728 JUMPDEST
0x729 PUSH1 0x0
0x72b PUSH2 0x467
0x72e PUSH1 0x6
0x730 PUSH1 0x0
0x732 DUP5
0x733 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x748 AND
0x749 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x75e AND
0x75f DUP2
0x760 MSTORE
0x761 PUSH1 0x20
0x763 ADD
0x764 SWAP1
0x765 DUP2
0x766 MSTORE
0x767 PUSH1 0x20
0x769 ADD
0x76a PUSH1 0x0
0x76c SHA3
0x76d SLOAD
0x76e PUSH2 0x459
0x771 DUP5
0x772 PUSH2 0x5a7
0x775 JUMP
0x776 JUMPDEST
0x777 PUSH2 0xbf4
0x77a SWAP1
0x77b SWAP2
0x77c SWAP1
0x77d PUSH4 0xffffffff
0x782 AND
0x783 JUMP
0x784 JUMPDEST
0x785 SWAP1
0x786 POP
0x787 SWAP2
0x788 SWAP1
0x789 POP
0x78a JUMP
0x78b JUMPDEST
0x78c PUSH1 0x0
0x78e PUSH2 0x479
0x791 DUP3
0x792 PUSH2 0x40b
0x795 JUMP
0x796 JUMPDEST
0x797 SWAP1
0x798 POP
0x799 PUSH1 0x0
0x79b DUP2
0x79c GT
0x79d ISZERO
0x79e ISZERO
0x79f PUSH2 0x48a
0x7a2 JUMPI
---
0x6d2: V379 = 0x0
0x6d5: REVERT 0x0 0x0
0x6d6: JUMPDEST 
0x6d7: V380 = 0x3e5
0x6da: V381 = 0x4
0x6de: V382 = CALLDATALOAD 0x4
0x6df: V383 = 0xffffffffffffffffffffffffffffffffffffffff
0x6f4: V384 = AND 0xffffffffffffffffffffffffffffffffffffffff V382
0x6f6: V385 = 0x20
0x6f8: V386 = ADD 0x20 0x4
0x6fe: V387 = 0xbd4
0x701: THROW 
0x702: JUMPDEST 
0x703: V388 = 0x40
0x705: V389 = M[0x40]
0x708: V390 = ISZERO S0
0x709: V391 = ISZERO V390
0x70a: V392 = ISZERO V391
0x70b: V393 = ISZERO V392
0x70d: M[V389] = V393
0x70e: V394 = 0x20
0x710: V395 = ADD 0x20 V389
0x714: V396 = 0x40
0x716: V397 = M[0x40]
0x719: V398 = SUB V395 V397
0x71b: RETURN V397 V398
0x71c: JUMPDEST 
0x71d: V399 = 0x4
0x71f: V400 = S[0x4]
0x721: JUMP S0
0x722: JUMPDEST 
0x723: V401 = 0x2
0x725: V402 = S[0x2]
0x727: JUMP S0
0x728: JUMPDEST 
0x729: V403 = 0x0
0x72b: V404 = 0x467
0x72e: V405 = 0x6
0x730: V406 = 0x0
0x733: V407 = 0xffffffffffffffffffffffffffffffffffffffff
0x748: V408 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x749: V409 = 0xffffffffffffffffffffffffffffffffffffffff
0x75e: V410 = AND 0xffffffffffffffffffffffffffffffffffffffff V408
0x760: M[0x0] = V410
0x761: V411 = 0x20
0x763: V412 = ADD 0x20 0x0
0x766: M[0x20] = 0x6
0x767: V413 = 0x20
0x769: V414 = ADD 0x20 0x20
0x76a: V415 = 0x0
0x76c: V416 = SHA3 0x0 0x40
0x76d: V417 = S[V416]
0x76e: V418 = 0x459
0x772: V419 = 0x5a7
0x775: THROW 
0x776: JUMPDEST 
0x777: V420 = 0xbf4
0x77d: V421 = 0xffffffff
0x782: V422 = AND 0xffffffff 0xbf4
0x783: THROW 
0x784: JUMPDEST 
0x78a: JUMP S3
0x78b: JUMPDEST 
0x78c: V423 = 0x0
0x78e: V424 = 0x479
0x792: V425 = 0x40b
0x795: THROW 
0x796: JUMPDEST 
0x799: V426 = 0x0
0x79c: V427 = GT S0 0x0
0x79d: V428 = ISZERO V427
0x79e: V429 = ISZERO V428
0x79f: V430 = 0x48a
0x7a2: THROWI V429
---
Entry stack: []
Stack pops: 0
Stack additions: [V384, 0x3e5, V400, S0, V402, S0, S0, 0x459, V417, 0x467, 0x0, S0, S1, S0, S0, S0, 0x479, 0x0, S0, S0]
Exit stack: []

================================

Block 0x7a3
[0x7a3:0x95e]
---
Predecessors: [0x6d2]
Successors: [0x95f]
---
0x7a3 PUSH1 0x0
0x7a5 DUP1
0x7a6 REVERT
0x7a7 JUMPDEST
0x7a8 PUSH2 0x4dc
0x7ab DUP2
0x7ac PUSH1 0x6
0x7ae PUSH1 0x0
0x7b0 DUP6
0x7b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7c6 AND
0x7c7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7dc AND
0x7dd DUP2
0x7de MSTORE
0x7df PUSH1 0x20
0x7e1 ADD
0x7e2 SWAP1
0x7e3 DUP2
0x7e4 MSTORE
0x7e5 PUSH1 0x20
0x7e7 ADD
0x7e8 PUSH1 0x0
0x7ea SHA3
0x7eb SLOAD
0x7ec PUSH2 0xc0d
0x7ef SWAP1
0x7f0 SWAP2
0x7f1 SWAP1
0x7f2 PUSH4 0xffffffff
0x7f7 AND
0x7f8 JUMP
0x7f9 JUMPDEST
0x7fa PUSH1 0x6
0x7fc PUSH1 0x0
0x7fe DUP5
0x7ff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x814 AND
0x815 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x82a AND
0x82b DUP2
0x82c MSTORE
0x82d PUSH1 0x20
0x82f ADD
0x830 SWAP1
0x831 DUP2
0x832 MSTORE
0x833 PUSH1 0x20
0x835 ADD
0x836 PUSH1 0x0
0x838 SHA3
0x839 DUP2
0x83a SWAP1
0x83b SSTORE
0x83c POP
0x83d PUSH2 0x56c
0x840 PUSH1 0x1
0x842 PUSH1 0x0
0x844 SWAP1
0x845 SLOAD
0x846 SWAP1
0x847 PUSH2 0x100
0x84a EXP
0x84b SWAP1
0x84c DIV
0x84d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x862 AND
0x863 DUP3
0x864 DUP5
0x865 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x87a AND
0x87b PUSH2 0xc2b
0x87e SWAP1
0x87f SWAP3
0x880 SWAP2
0x881 SWAP1
0x882 PUSH4 0xffffffff
0x887 AND
0x888 JUMP
0x889 JUMPDEST
0x88a PUSH32 0xfb81f9b30d73d830c3544b34d827c08142579ee75710b490bab0b3995468c565
0x8ab DUP2
0x8ac PUSH1 0x40
0x8ae MLOAD
0x8af DUP1
0x8b0 DUP3
0x8b1 DUP2
0x8b2 MSTORE
0x8b3 PUSH1 0x20
0x8b5 ADD
0x8b6 SWAP2
0x8b7 POP
0x8b8 POP
0x8b9 PUSH1 0x40
0x8bb MLOAD
0x8bc DUP1
0x8bd SWAP2
0x8be SUB
0x8bf SWAP1
0x8c0 LOG1
0x8c1 POP
0x8c2 POP
0x8c3 JUMP
0x8c4 JUMPDEST
0x8c5 PUSH1 0x0
0x8c7 DUP1
0x8c8 PUSH1 0x0
0x8ca DUP4
0x8cb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8e0 AND
0x8e1 PUSH4 0x70a08231
0x8e6 ADDRESS
0x8e7 PUSH1 0x40
0x8e9 MLOAD
0x8ea DUP3
0x8eb PUSH4 0xffffffff
0x8f0 AND
0x8f1 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x90f MUL
0x910 DUP2
0x911 MSTORE
0x912 PUSH1 0x4
0x914 ADD
0x915 DUP1
0x916 DUP3
0x917 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x92c AND
0x92d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x942 AND
0x943 DUP2
0x944 MSTORE
0x945 PUSH1 0x20
0x947 ADD
0x948 SWAP2
0x949 POP
0x94a POP
0x94b PUSH1 0x20
0x94d PUSH1 0x40
0x94f MLOAD
0x950 DUP1
0x951 DUP4
0x952 SUB
0x953 DUP2
0x954 PUSH1 0x0
0x956 DUP8
0x957 DUP1
0x958 EXTCODESIZE
0x959 ISZERO
0x95a ISZERO
0x95b PUSH2 0x646
0x95e JUMPI
---
0x7a3: V431 = 0x0
0x7a6: REVERT 0x0 0x0
0x7a7: JUMPDEST 
0x7a8: V432 = 0x4dc
0x7ac: V433 = 0x6
0x7ae: V434 = 0x0
0x7b1: V435 = 0xffffffffffffffffffffffffffffffffffffffff
0x7c6: V436 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x7c7: V437 = 0xffffffffffffffffffffffffffffffffffffffff
0x7dc: V438 = AND 0xffffffffffffffffffffffffffffffffffffffff V436
0x7de: M[0x0] = V438
0x7df: V439 = 0x20
0x7e1: V440 = ADD 0x20 0x0
0x7e4: M[0x20] = 0x6
0x7e5: V441 = 0x20
0x7e7: V442 = ADD 0x20 0x20
0x7e8: V443 = 0x0
0x7ea: V444 = SHA3 0x0 0x40
0x7eb: V445 = S[V444]
0x7ec: V446 = 0xc0d
0x7f2: V447 = 0xffffffff
0x7f7: V448 = AND 0xffffffff 0xc0d
0x7f8: THROW 
0x7f9: JUMPDEST 
0x7fa: V449 = 0x6
0x7fc: V450 = 0x0
0x7ff: V451 = 0xffffffffffffffffffffffffffffffffffffffff
0x814: V452 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x815: V453 = 0xffffffffffffffffffffffffffffffffffffffff
0x82a: V454 = AND 0xffffffffffffffffffffffffffffffffffffffff V452
0x82c: M[0x0] = V454
0x82d: V455 = 0x20
0x82f: V456 = ADD 0x20 0x0
0x832: M[0x20] = 0x6
0x833: V457 = 0x20
0x835: V458 = ADD 0x20 0x20
0x836: V459 = 0x0
0x838: V460 = SHA3 0x0 0x40
0x83b: S[V460] = S0
0x83d: V461 = 0x56c
0x840: V462 = 0x1
0x842: V463 = 0x0
0x845: V464 = S[0x1]
0x847: V465 = 0x100
0x84a: V466 = EXP 0x100 0x0
0x84c: V467 = DIV V464 0x1
0x84d: V468 = 0xffffffffffffffffffffffffffffffffffffffff
0x862: V469 = AND 0xffffffffffffffffffffffffffffffffffffffff V467
0x865: V470 = 0xffffffffffffffffffffffffffffffffffffffff
0x87a: V471 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x87b: V472 = 0xc2b
0x882: V473 = 0xffffffff
0x887: V474 = AND 0xffffffff 0xc2b
0x888: THROW 
0x889: JUMPDEST 
0x88a: V475 = 0xfb81f9b30d73d830c3544b34d827c08142579ee75710b490bab0b3995468c565
0x8ac: V476 = 0x40
0x8ae: V477 = M[0x40]
0x8b2: M[V477] = S0
0x8b3: V478 = 0x20
0x8b5: V479 = ADD 0x20 V477
0x8b9: V480 = 0x40
0x8bb: V481 = M[0x40]
0x8be: V482 = SUB V479 V481
0x8c0: LOG V481 V482 0xfb81f9b30d73d830c3544b34d827c08142579ee75710b490bab0b3995468c565
0x8c3: JUMP S2
0x8c4: JUMPDEST 
0x8c5: V483 = 0x0
0x8c8: V484 = 0x0
0x8cb: V485 = 0xffffffffffffffffffffffffffffffffffffffff
0x8e0: V486 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x8e1: V487 = 0x70a08231
0x8e6: V488 = ADDRESS
0x8e7: V489 = 0x40
0x8e9: V490 = M[0x40]
0x8eb: V491 = 0xffffffff
0x8f0: V492 = AND 0xffffffff 0x70a08231
0x8f1: V493 = 0x100000000000000000000000000000000000000000000000000000000
0x90f: V494 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x911: M[V490] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x912: V495 = 0x4
0x914: V496 = ADD 0x4 V490
0x917: V497 = 0xffffffffffffffffffffffffffffffffffffffff
0x92c: V498 = AND 0xffffffffffffffffffffffffffffffffffffffff V488
0x92d: V499 = 0xffffffffffffffffffffffffffffffffffffffff
0x942: V500 = AND 0xffffffffffffffffffffffffffffffffffffffff V498
0x944: M[V496] = V500
0x945: V501 = 0x20
0x947: V502 = ADD 0x20 V496
0x94b: V503 = 0x20
0x94d: V504 = 0x40
0x94f: V505 = M[0x40]
0x952: V506 = SUB V502 V505
0x954: V507 = 0x0
0x958: V508 = EXTCODESIZE V486
0x959: V509 = ISZERO V508
0x95a: V510 = ISZERO V509
0x95b: V511 = 0x646
0x95e: THROWI V510
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [S0, V445, 0x4dc, S0, S1, S1, V469, V471, 0x56c, S1, S2, V486, 0x0, V505, V506, V505, 0x20, V502, 0x70a08231, V486, 0x0, 0x0, 0x0, S0]
Exit stack: []

================================

Block 0x95f
[0x95f:0x96b]
---
Predecessors: [0x7a3]
Successors: [0x653, 0x96c]
---
0x95f PUSH1 0x0
0x961 DUP1
0x962 REVERT
0x963 JUMPDEST
0x964 GAS
0x965 CALL
0x966 ISZERO
0x967 ISZERO
0x968 PUSH2 0x653
0x96b JUMPI
---
0x95f: V512 = 0x0
0x962: REVERT 0x0 0x0
0x963: JUMPDEST 
0x964: V513 = GAS
0x965: V514 = CALL V513 S0 S1 S2 S3 S4 S5
0x966: V515 = ISZERO V514
0x967: V516 = ISZERO V515
0x968: V517 = 0x653
0x96b: JUMPI 0x653 V516
---
Entry stack: [S12, 0x0, 0x0, 0x0, V486, 0x70a08231, V502, 0x20, V505, V506, V505, 0x0, V486]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x96c
[0x96c:0x9da]
---
Predecessors: [0x95f]
Successors: [0x9db]
---
0x96c PUSH1 0x0
0x96e DUP1
0x96f REVERT
0x970 JUMPDEST
0x971 POP
0x972 POP
0x973 POP
0x974 PUSH1 0x40
0x976 MLOAD
0x977 DUP1
0x978 MLOAD
0x979 SWAP1
0x97a POP
0x97b SWAP2
0x97c POP
0x97d PUSH2 0x6b1
0x980 PUSH1 0x6
0x982 PUSH1 0x0
0x984 DUP7
0x985 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x99a AND
0x99b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9b0 AND
0x9b1 DUP2
0x9b2 MSTORE
0x9b3 PUSH1 0x20
0x9b5 ADD
0x9b6 SWAP1
0x9b7 DUP2
0x9b8 MSTORE
0x9b9 PUSH1 0x20
0x9bb ADD
0x9bc PUSH1 0x0
0x9be SHA3
0x9bf SLOAD
0x9c0 DUP4
0x9c1 PUSH2 0xc0d
0x9c4 SWAP1
0x9c5 SWAP2
0x9c6 SWAP1
0x9c7 PUSH4 0xffffffff
0x9cc AND
0x9cd JUMP
0x9ce JUMPDEST
0x9cf SWAP1
0x9d0 POP
0x9d1 PUSH1 0x2
0x9d3 SLOAD
0x9d4 TIMESTAMP
0x9d5 LT
0x9d6 ISZERO
0x9d7 PUSH2 0x6c6
0x9da JUMPI
---
0x96c: V518 = 0x0
0x96f: REVERT 0x0 0x0
0x970: JUMPDEST 
0x974: V519 = 0x40
0x976: V520 = M[0x40]
0x978: V521 = M[V520]
0x97d: V522 = 0x6b1
0x980: V523 = 0x6
0x982: V524 = 0x0
0x985: V525 = 0xffffffffffffffffffffffffffffffffffffffff
0x99a: V526 = AND 0xffffffffffffffffffffffffffffffffffffffff S6
0x99b: V527 = 0xffffffffffffffffffffffffffffffffffffffff
0x9b0: V528 = AND 0xffffffffffffffffffffffffffffffffffffffff V526
0x9b2: M[0x0] = V528
0x9b3: V529 = 0x20
0x9b5: V530 = ADD 0x20 0x0
0x9b8: M[0x20] = 0x6
0x9b9: V531 = 0x20
0x9bb: V532 = ADD 0x20 0x20
0x9bc: V533 = 0x0
0x9be: V534 = SHA3 0x0 0x40
0x9bf: V535 = S[V534]
0x9c1: V536 = 0xc0d
0x9c7: V537 = 0xffffffff
0x9cc: V538 = AND 0xffffffff 0xc0d
0x9cd: THROW 
0x9ce: JUMPDEST 
0x9d1: V539 = 0x2
0x9d3: V540 = S[0x2]
0x9d4: V541 = TIMESTAMP
0x9d5: V542 = LT V541 V540
0x9d6: V543 = ISZERO V542
0x9d7: V544 = 0x6c6
0x9da: THROWI V543
---
Entry stack: []
Stack pops: 0
Stack additions: [V535, V521, 0x6b1, S3, V521, S5, S6, S0]
Exit stack: []

================================

Block 0x9db
[0x9db:0xa02]
---
Predecessors: [0x96c]
Successors: [0xa03]
---
0x9db PUSH1 0x0
0x9dd SWAP3
0x9de POP
0x9df PUSH2 0x77f
0x9e2 JUMP
0x9e3 JUMPDEST
0x9e4 PUSH2 0x6dd
0x9e7 PUSH1 0x4
0x9e9 SLOAD
0x9ea PUSH1 0x3
0x9ec SLOAD
0x9ed PUSH2 0xc0d
0x9f0 SWAP1
0x9f1 SWAP2
0x9f2 SWAP1
0x9f3 PUSH4 0xffffffff
0x9f8 AND
0x9f9 JUMP
0x9fa JUMPDEST
0x9fb TIMESTAMP
0x9fc LT
0x9fd ISZERO
0x9fe DUP1
0x9ff PUSH2 0x734
0xa02 JUMPI
---
0x9db: V545 = 0x0
0x9df: V546 = 0x77f
0x9e2: THROW 
0x9e3: JUMPDEST 
0x9e4: V547 = 0x6dd
0x9e7: V548 = 0x4
0x9e9: V549 = S[0x4]
0x9ea: V550 = 0x3
0x9ec: V551 = S[0x3]
0x9ed: V552 = 0xc0d
0x9f3: V553 = 0xffffffff
0x9f8: V554 = AND 0xffffffff 0xc0d
0x9f9: THROW 
0x9fa: JUMPDEST 
0x9fb: V555 = TIMESTAMP
0x9fc: V556 = LT V555 S0
0x9fd: V557 = ISZERO V556
0x9ff: V558 = 0x734
0xa02: THROWI V557
---
Entry stack: [S0]
Stack pops: 3
Stack additions: [V557]
Exit stack: []

================================

Block 0xa03
[0xa03:0xa50]
---
Predecessors: [0x9db]
Successors: [0xa51]
---
0xa03 POP
0xa04 PUSH1 0x7
0xa06 PUSH1 0x0
0xa08 DUP6
0xa09 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa1e AND
0xa1f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa34 AND
0xa35 DUP2
0xa36 MSTORE
0xa37 PUSH1 0x20
0xa39 ADD
0xa3a SWAP1
0xa3b DUP2
0xa3c MSTORE
0xa3d PUSH1 0x20
0xa3f ADD
0xa40 PUSH1 0x0
0xa42 SHA3
0xa43 PUSH1 0x0
0xa45 SWAP1
0xa46 SLOAD
0xa47 SWAP1
0xa48 PUSH2 0x100
0xa4b EXP
0xa4c SWAP1
0xa4d DIV
0xa4e PUSH1 0xff
0xa50 AND
---
0xa04: V559 = 0x7
0xa06: V560 = 0x0
0xa09: V561 = 0xffffffffffffffffffffffffffffffffffffffff
0xa1e: V562 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xa1f: V563 = 0xffffffffffffffffffffffffffffffffffffffff
0xa34: V564 = AND 0xffffffffffffffffffffffffffffffffffffffff V562
0xa36: M[0x0] = V564
0xa37: V565 = 0x20
0xa39: V566 = ADD 0x20 0x0
0xa3c: M[0x20] = 0x7
0xa3d: V567 = 0x20
0xa3f: V568 = ADD 0x20 0x20
0xa40: V569 = 0x0
0xa42: V570 = SHA3 0x0 0x40
0xa43: V571 = 0x0
0xa46: V572 = S[V570]
0xa48: V573 = 0x100
0xa4b: V574 = EXP 0x100 0x0
0xa4d: V575 = DIV V572 0x1
0xa4e: V576 = 0xff
0xa50: V577 = AND 0xff V575
---
Entry stack: [V557]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V577]
Exit stack: [S3, S2, S1, S0, V577]

================================

Block 0xa51
[0xa51:0xa56]
---
Predecessors: [0xa03]
Successors: [0xa57]
---
0xa51 JUMPDEST
0xa52 ISZERO
0xa53 PUSH2 0x741
0xa56 JUMPI
---
0xa51: JUMPDEST 
0xa52: V578 = ISZERO V577
0xa53: V579 = 0x741
0xa56: THROWI V578
---
Entry stack: [S4, S3, S2, S1, V577]
Stack pops: 1
Stack additions: []
Exit stack: [S4, S3, S2, S1]

================================

Block 0xa57
[0xa57:0xa9b]
---
Predecessors: [0xa51]
Successors: [0xa9c]
---
0xa57 DUP1
0xa58 SWAP3
0xa59 POP
0xa5a PUSH2 0x77f
0xa5d JUMP
0xa5e JUMPDEST
0xa5f PUSH2 0x77c
0xa62 PUSH1 0x4
0xa64 SLOAD
0xa65 PUSH2 0x76e
0xa68 PUSH2 0x75f
0xa6b PUSH1 0x3
0xa6d SLOAD
0xa6e TIMESTAMP
0xa6f PUSH2 0xbf4
0xa72 SWAP1
0xa73 SWAP2
0xa74 SWAP1
0xa75 PUSH4 0xffffffff
0xa7a AND
0xa7b JUMP
0xa7c JUMPDEST
0xa7d DUP5
0xa7e PUSH2 0xcf1
0xa81 SWAP1
0xa82 SWAP2
0xa83 SWAP1
0xa84 PUSH4 0xffffffff
0xa89 AND
0xa8a JUMP
0xa8b JUMPDEST
0xa8c PUSH2 0xd2c
0xa8f SWAP1
0xa90 SWAP2
0xa91 SWAP1
0xa92 PUSH4 0xffffffff
0xa97 AND
0xa98 JUMP
0xa99 JUMPDEST
0xa9a SWAP3
0xa9b POP
---
0xa5a: V580 = 0x77f
0xa5d: THROW 
0xa5e: JUMPDEST 
0xa5f: V581 = 0x77c
0xa62: V582 = 0x4
0xa64: V583 = S[0x4]
0xa65: V584 = 0x76e
0xa68: V585 = 0x75f
0xa6b: V586 = 0x3
0xa6d: V587 = S[0x3]
0xa6e: V588 = TIMESTAMP
0xa6f: V589 = 0xbf4
0xa75: V590 = 0xffffffff
0xa7a: V591 = AND 0xffffffff 0xbf4
0xa7b: THROW 
0xa7c: JUMPDEST 
0xa7e: V592 = 0xcf1
0xa84: V593 = 0xffffffff
0xa89: V594 = AND 0xffffffff 0xcf1
0xa8a: THROW 
0xa8b: JUMPDEST 
0xa8c: V595 = 0xd2c
0xa92: V596 = 0xffffffff
0xa97: V597 = AND 0xffffffff 0xd2c
0xa98: THROW 
0xa99: JUMPDEST 
---
Entry stack: [S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V587, V588, 0x75f, S0, S4, S1, S2, S0]
Exit stack: []

================================

Block 0xa9c
[0xa9c:0xb24]
---
Predecessors: [0xa57]
Successors: [0xb25]
---
0xa9c JUMPDEST
0xa9d POP
0xa9e POP
0xa9f SWAP2
0xaa0 SWAP1
0xaa1 POP
0xaa2 JUMP
0xaa3 JUMPDEST
0xaa4 PUSH1 0x1
0xaa6 PUSH1 0x0
0xaa8 SWAP1
0xaa9 SLOAD
0xaaa SWAP1
0xaab PUSH2 0x100
0xaae EXP
0xaaf SWAP1
0xab0 DIV
0xab1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xac6 AND
0xac7 DUP2
0xac8 JUMP
0xac9 JUMPDEST
0xaca PUSH1 0x0
0xacc DUP1
0xacd PUSH1 0x0
0xacf DUP1
0xad0 PUSH1 0x0
0xad2 SWAP1
0xad3 SLOAD
0xad4 SWAP1
0xad5 PUSH2 0x100
0xad8 EXP
0xad9 SWAP1
0xada DIV
0xadb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaf0 AND
0xaf1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb06 AND
0xb07 CALLER
0xb08 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb1d AND
0xb1e EQ
0xb1f ISZERO
0xb20 ISZERO
0xb21 PUSH2 0x80c
0xb24 JUMPI
---
0xa9c: JUMPDEST 
0xaa2: JUMP S4
0xaa3: JUMPDEST 
0xaa4: V598 = 0x1
0xaa6: V599 = 0x0
0xaa9: V600 = S[0x1]
0xaab: V601 = 0x100
0xaae: V602 = EXP 0x100 0x0
0xab0: V603 = DIV V600 0x1
0xab1: V604 = 0xffffffffffffffffffffffffffffffffffffffff
0xac6: V605 = AND 0xffffffffffffffffffffffffffffffffffffffff V603
0xac8: JUMP S0
0xac9: JUMPDEST 
0xaca: V606 = 0x0
0xacd: V607 = 0x0
0xad0: V608 = 0x0
0xad3: V609 = S[0x0]
0xad5: V610 = 0x100
0xad8: V611 = EXP 0x100 0x0
0xada: V612 = DIV V609 0x1
0xadb: V613 = 0xffffffffffffffffffffffffffffffffffffffff
0xaf0: V614 = AND 0xffffffffffffffffffffffffffffffffffffffff V612
0xaf1: V615 = 0xffffffffffffffffffffffffffffffffffffffff
0xb06: V616 = AND 0xffffffffffffffffffffffffffffffffffffffff V614
0xb07: V617 = CALLER
0xb08: V618 = 0xffffffffffffffffffffffffffffffffffffffff
0xb1d: V619 = AND 0xffffffffffffffffffffffffffffffffffffffff V617
0xb1e: V620 = EQ V619 V616
0xb1f: V621 = ISZERO V620
0xb20: V622 = ISZERO V621
0xb21: V623 = 0x80c
0xb24: THROWI V622
---
Entry stack: [S2, S1, S0]
Stack pops: 16
Stack additions: [0x0, 0x0, 0x0]
Exit stack: []

================================

Block 0xb25
[0xb25:0xb3f]
---
Predecessors: [0xa9c]
Successors: [0xb40]
---
0xb25 PUSH1 0x0
0xb27 DUP1
0xb28 REVERT
0xb29 JUMPDEST
0xb2a PUSH1 0x5
0xb2c PUSH1 0x0
0xb2e SWAP1
0xb2f SLOAD
0xb30 SWAP1
0xb31 PUSH2 0x100
0xb34 EXP
0xb35 SWAP1
0xb36 DIV
0xb37 PUSH1 0xff
0xb39 AND
0xb3a ISZERO
0xb3b ISZERO
0xb3c PUSH2 0x827
0xb3f JUMPI
---
0xb25: V624 = 0x0
0xb28: REVERT 0x0 0x0
0xb29: JUMPDEST 
0xb2a: V625 = 0x5
0xb2c: V626 = 0x0
0xb2f: V627 = S[0x5]
0xb31: V628 = 0x100
0xb34: V629 = EXP 0x100 0x0
0xb36: V630 = DIV V627 0x1
0xb37: V631 = 0xff
0xb39: V632 = AND 0xff V630
0xb3a: V633 = ISZERO V632
0xb3b: V634 = ISZERO V633
0xb3c: V635 = 0x827
0xb3f: THROWI V634
---
Entry stack: [0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb40
[0xb40:0xb98]
---
Predecessors: [0xb25]
Successors: [0xb99]
---
0xb40 PUSH1 0x0
0xb42 DUP1
0xb43 REVERT
0xb44 JUMPDEST
0xb45 PUSH1 0x7
0xb47 PUSH1 0x0
0xb49 DUP6
0xb4a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb5f AND
0xb60 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb75 AND
0xb76 DUP2
0xb77 MSTORE
0xb78 PUSH1 0x20
0xb7a ADD
0xb7b SWAP1
0xb7c DUP2
0xb7d MSTORE
0xb7e PUSH1 0x20
0xb80 ADD
0xb81 PUSH1 0x0
0xb83 SHA3
0xb84 PUSH1 0x0
0xb86 SWAP1
0xb87 SLOAD
0xb88 SWAP1
0xb89 PUSH2 0x100
0xb8c EXP
0xb8d SWAP1
0xb8e DIV
0xb8f PUSH1 0xff
0xb91 AND
0xb92 ISZERO
0xb93 ISZERO
0xb94 ISZERO
0xb95 PUSH2 0x880
0xb98 JUMPI
---
0xb40: V636 = 0x0
0xb43: REVERT 0x0 0x0
0xb44: JUMPDEST 
0xb45: V637 = 0x7
0xb47: V638 = 0x0
0xb4a: V639 = 0xffffffffffffffffffffffffffffffffffffffff
0xb5f: V640 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xb60: V641 = 0xffffffffffffffffffffffffffffffffffffffff
0xb75: V642 = AND 0xffffffffffffffffffffffffffffffffffffffff V640
0xb77: M[0x0] = V642
0xb78: V643 = 0x20
0xb7a: V644 = ADD 0x20 0x0
0xb7d: M[0x20] = 0x7
0xb7e: V645 = 0x20
0xb80: V646 = ADD 0x20 0x20
0xb81: V647 = 0x0
0xb83: V648 = SHA3 0x0 0x40
0xb84: V649 = 0x0
0xb87: V650 = S[V648]
0xb89: V651 = 0x100
0xb8c: V652 = EXP 0x100 0x0
0xb8e: V653 = DIV V650 0x1
0xb8f: V654 = 0xff
0xb91: V655 = AND 0xff V653
0xb92: V656 = ISZERO V655
0xb93: V657 = ISZERO V656
0xb94: V658 = ISZERO V657
0xb95: V659 = 0x880
0xb98: THROWI V658
---
Entry stack: []
Stack pops: 0
Stack additions: [S0, S1, S2, S3]
Exit stack: []

================================

Block 0xb99
[0xb99:0xc32]
---
Predecessors: [0xb40]
Successors: [0xc33]
---
0xb99 PUSH1 0x0
0xb9b DUP1
0xb9c REVERT
0xb9d JUMPDEST
0xb9e DUP4
0xb9f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbb4 AND
0xbb5 PUSH4 0x70a08231
0xbba ADDRESS
0xbbb PUSH1 0x40
0xbbd MLOAD
0xbbe DUP3
0xbbf PUSH4 0xffffffff
0xbc4 AND
0xbc5 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xbe3 MUL
0xbe4 DUP2
0xbe5 MSTORE
0xbe6 PUSH1 0x4
0xbe8 ADD
0xbe9 DUP1
0xbea DUP3
0xbeb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc00 AND
0xc01 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc16 AND
0xc17 DUP2
0xc18 MSTORE
0xc19 PUSH1 0x20
0xc1b ADD
0xc1c SWAP2
0xc1d POP
0xc1e POP
0xc1f PUSH1 0x20
0xc21 PUSH1 0x40
0xc23 MLOAD
0xc24 DUP1
0xc25 DUP4
0xc26 SUB
0xc27 DUP2
0xc28 PUSH1 0x0
0xc2a DUP8
0xc2b DUP1
0xc2c EXTCODESIZE
0xc2d ISZERO
0xc2e ISZERO
0xc2f PUSH2 0x91a
0xc32 JUMPI
---
0xb99: V660 = 0x0
0xb9c: REVERT 0x0 0x0
0xb9d: JUMPDEST 
0xb9f: V661 = 0xffffffffffffffffffffffffffffffffffffffff
0xbb4: V662 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xbb5: V663 = 0x70a08231
0xbba: V664 = ADDRESS
0xbbb: V665 = 0x40
0xbbd: V666 = M[0x40]
0xbbf: V667 = 0xffffffff
0xbc4: V668 = AND 0xffffffff 0x70a08231
0xbc5: V669 = 0x100000000000000000000000000000000000000000000000000000000
0xbe3: V670 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0xbe5: M[V666] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xbe6: V671 = 0x4
0xbe8: V672 = ADD 0x4 V666
0xbeb: V673 = 0xffffffffffffffffffffffffffffffffffffffff
0xc00: V674 = AND 0xffffffffffffffffffffffffffffffffffffffff V664
0xc01: V675 = 0xffffffffffffffffffffffffffffffffffffffff
0xc16: V676 = AND 0xffffffffffffffffffffffffffffffffffffffff V674
0xc18: M[V672] = V676
0xc19: V677 = 0x20
0xc1b: V678 = ADD 0x20 V672
0xc1f: V679 = 0x20
0xc21: V680 = 0x40
0xc23: V681 = M[0x40]
0xc26: V682 = SUB V678 V681
0xc28: V683 = 0x0
0xc2c: V684 = EXTCODESIZE V662
0xc2d: V685 = ISZERO V684
0xc2e: V686 = ISZERO V685
0xc2f: V687 = 0x91a
0xc32: THROWI V686
---
Entry stack: [S3, S2, S1, S0]
Stack pops: 0
Stack additions: [V662, 0x0, V681, V682, V681, 0x20, V678, 0x70a08231, V662, S0, S1, S2, S3]
Exit stack: []

================================

Block 0xc33
[0xc33:0xc3f]
---
Predecessors: [0xb99]
Successors: [0xc40]
---
0xc33 PUSH1 0x0
0xc35 DUP1
0xc36 REVERT
0xc37 JUMPDEST
0xc38 GAS
0xc39 CALL
0xc3a ISZERO
0xc3b ISZERO
0xc3c PUSH2 0x927
0xc3f JUMPI
---
0xc33: V688 = 0x0
0xc36: REVERT 0x0 0x0
0xc37: JUMPDEST 
0xc38: V689 = GAS
0xc39: V690 = CALL V689 S0 S1 S2 S3 S4 S5
0xc3a: V691 = ISZERO V690
0xc3b: V692 = ISZERO V691
0xc3c: V693 = 0x927
0xc3f: THROWI V692
---
Entry stack: [S12, S11, S10, S9, V662, 0x70a08231, V678, 0x20, V681, V682, V681, 0x0, V662]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc40
[0xc40:0xdf2]
---
Predecessors: [0xc33]
Successors: [0xdf3]
---
0xc40 PUSH1 0x0
0xc42 DUP1
0xc43 REVERT
0xc44 JUMPDEST
0xc45 POP
0xc46 POP
0xc47 POP
0xc48 PUSH1 0x40
0xc4a MLOAD
0xc4b DUP1
0xc4c MLOAD
0xc4d SWAP1
0xc4e POP
0xc4f SWAP3
0xc50 POP
0xc51 PUSH2 0x93c
0xc54 DUP5
0xc55 PUSH2 0x40b
0xc58 JUMP
0xc59 JUMPDEST
0xc5a SWAP2
0xc5b POP
0xc5c PUSH2 0x951
0xc5f DUP3
0xc60 DUP5
0xc61 PUSH2 0xbf4
0xc64 SWAP1
0xc65 SWAP2
0xc66 SWAP1
0xc67 PUSH4 0xffffffff
0xc6c AND
0xc6d JUMP
0xc6e JUMPDEST
0xc6f SWAP1
0xc70 POP
0xc71 PUSH1 0x1
0xc73 PUSH1 0x7
0xc75 PUSH1 0x0
0xc77 DUP7
0xc78 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc8d AND
0xc8e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xca3 AND
0xca4 DUP2
0xca5 MSTORE
0xca6 PUSH1 0x20
0xca8 ADD
0xca9 SWAP1
0xcaa DUP2
0xcab MSTORE
0xcac PUSH1 0x20
0xcae ADD
0xcaf PUSH1 0x0
0xcb1 SHA3
0xcb2 PUSH1 0x0
0xcb4 PUSH2 0x100
0xcb7 EXP
0xcb8 DUP2
0xcb9 SLOAD
0xcba DUP2
0xcbb PUSH1 0xff
0xcbd MUL
0xcbe NOT
0xcbf AND
0xcc0 SWAP1
0xcc1 DUP4
0xcc2 ISZERO
0xcc3 ISZERO
0xcc4 MUL
0xcc5 OR
0xcc6 SWAP1
0xcc7 SSTORE
0xcc8 POP
0xcc9 PUSH2 0x9f7
0xccc PUSH1 0x0
0xcce DUP1
0xccf SWAP1
0xcd0 SLOAD
0xcd1 SWAP1
0xcd2 PUSH2 0x100
0xcd5 EXP
0xcd6 SWAP1
0xcd7 DIV
0xcd8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xced AND
0xcee DUP3
0xcef DUP7
0xcf0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd05 AND
0xd06 PUSH2 0xc2b
0xd09 SWAP1
0xd0a SWAP3
0xd0b SWAP2
0xd0c SWAP1
0xd0d PUSH4 0xffffffff
0xd12 AND
0xd13 JUMP
0xd14 JUMPDEST
0xd15 PUSH32 0x44825a4b2df8acb19ce4e1afba9aa850c8b65cdb7942e2078f27d0b0960efee6
0xd36 PUSH1 0x40
0xd38 MLOAD
0xd39 PUSH1 0x40
0xd3b MLOAD
0xd3c DUP1
0xd3d SWAP2
0xd3e SUB
0xd3f SWAP1
0xd40 LOG1
0xd41 POP
0xd42 POP
0xd43 POP
0xd44 POP
0xd45 JUMP
0xd46 JUMPDEST
0xd47 PUSH1 0x5
0xd49 PUSH1 0x0
0xd4b SWAP1
0xd4c SLOAD
0xd4d SWAP1
0xd4e PUSH2 0x100
0xd51 EXP
0xd52 SWAP1
0xd53 DIV
0xd54 PUSH1 0xff
0xd56 AND
0xd57 DUP2
0xd58 JUMP
0xd59 JUMPDEST
0xd5a PUSH1 0x0
0xd5c DUP1
0xd5d SWAP1
0xd5e SLOAD
0xd5f SWAP1
0xd60 PUSH2 0x100
0xd63 EXP
0xd64 SWAP1
0xd65 DIV
0xd66 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd7b AND
0xd7c DUP2
0xd7d JUMP
0xd7e JUMPDEST
0xd7f PUSH1 0x6
0xd81 PUSH1 0x20
0xd83 MSTORE
0xd84 DUP1
0xd85 PUSH1 0x0
0xd87 MSTORE
0xd88 PUSH1 0x40
0xd8a PUSH1 0x0
0xd8c SHA3
0xd8d PUSH1 0x0
0xd8f SWAP2
0xd90 POP
0xd91 SWAP1
0xd92 POP
0xd93 SLOAD
0xd94 DUP2
0xd95 JUMP
0xd96 JUMPDEST
0xd97 PUSH1 0x3
0xd99 SLOAD
0xd9a DUP2
0xd9b JUMP
0xd9c JUMPDEST
0xd9d PUSH1 0x0
0xd9f DUP1
0xda0 SWAP1
0xda1 SLOAD
0xda2 SWAP1
0xda3 PUSH2 0x100
0xda6 EXP
0xda7 SWAP1
0xda8 DIV
0xda9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdbe AND
0xdbf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdd4 AND
0xdd5 CALLER
0xdd6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdeb AND
0xdec EQ
0xded ISZERO
0xdee ISZERO
0xdef PUSH2 0xada
0xdf2 JUMPI
---
0xc40: V694 = 0x0
0xc43: REVERT 0x0 0x0
0xc44: JUMPDEST 
0xc48: V695 = 0x40
0xc4a: V696 = M[0x40]
0xc4c: V697 = M[V696]
0xc51: V698 = 0x93c
0xc55: V699 = 0x40b
0xc58: THROW 
0xc59: JUMPDEST 
0xc5c: V700 = 0x951
0xc61: V701 = 0xbf4
0xc67: V702 = 0xffffffff
0xc6c: V703 = AND 0xffffffff 0xbf4
0xc6d: THROW 
0xc6e: JUMPDEST 
0xc71: V704 = 0x1
0xc73: V705 = 0x7
0xc75: V706 = 0x0
0xc78: V707 = 0xffffffffffffffffffffffffffffffffffffffff
0xc8d: V708 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xc8e: V709 = 0xffffffffffffffffffffffffffffffffffffffff
0xca3: V710 = AND 0xffffffffffffffffffffffffffffffffffffffff V708
0xca5: M[0x0] = V710
0xca6: V711 = 0x20
0xca8: V712 = ADD 0x20 0x0
0xcab: M[0x20] = 0x7
0xcac: V713 = 0x20
0xcae: V714 = ADD 0x20 0x20
0xcaf: V715 = 0x0
0xcb1: V716 = SHA3 0x0 0x40
0xcb2: V717 = 0x0
0xcb4: V718 = 0x100
0xcb7: V719 = EXP 0x100 0x0
0xcb9: V720 = S[V716]
0xcbb: V721 = 0xff
0xcbd: V722 = MUL 0xff 0x1
0xcbe: V723 = NOT 0xff
0xcbf: V724 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V720
0xcc2: V725 = ISZERO 0x1
0xcc3: V726 = ISZERO 0x0
0xcc4: V727 = MUL 0x1 0x1
0xcc5: V728 = OR 0x1 V724
0xcc7: S[V716] = V728
0xcc9: V729 = 0x9f7
0xccc: V730 = 0x0
0xcd0: V731 = S[0x0]
0xcd2: V732 = 0x100
0xcd5: V733 = EXP 0x100 0x0
0xcd7: V734 = DIV V731 0x1
0xcd8: V735 = 0xffffffffffffffffffffffffffffffffffffffff
0xced: V736 = AND 0xffffffffffffffffffffffffffffffffffffffff V734
0xcf0: V737 = 0xffffffffffffffffffffffffffffffffffffffff
0xd05: V738 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xd06: V739 = 0xc2b
0xd0d: V740 = 0xffffffff
0xd12: V741 = AND 0xffffffff 0xc2b
0xd13: THROW 
0xd14: JUMPDEST 
0xd15: V742 = 0x44825a4b2df8acb19ce4e1afba9aa850c8b65cdb7942e2078f27d0b0960efee6
0xd36: V743 = 0x40
0xd38: V744 = M[0x40]
0xd39: V745 = 0x40
0xd3b: V746 = M[0x40]
0xd3e: V747 = SUB V744 V746
0xd40: LOG V746 V747 0x44825a4b2df8acb19ce4e1afba9aa850c8b65cdb7942e2078f27d0b0960efee6
0xd45: JUMP S4
0xd46: JUMPDEST 
0xd47: V748 = 0x5
0xd49: V749 = 0x0
0xd4c: V750 = S[0x5]
0xd4e: V751 = 0x100
0xd51: V752 = EXP 0x100 0x0
0xd53: V753 = DIV V750 0x1
0xd54: V754 = 0xff
0xd56: V755 = AND 0xff V753
0xd58: JUMP S0
0xd59: JUMPDEST 
0xd5a: V756 = 0x0
0xd5e: V757 = S[0x0]
0xd60: V758 = 0x100
0xd63: V759 = EXP 0x100 0x0
0xd65: V760 = DIV V757 0x1
0xd66: V761 = 0xffffffffffffffffffffffffffffffffffffffff
0xd7b: V762 = AND 0xffffffffffffffffffffffffffffffffffffffff V760
0xd7d: JUMP S0
0xd7e: JUMPDEST 
0xd7f: V763 = 0x6
0xd81: V764 = 0x20
0xd83: M[0x20] = 0x6
0xd85: V765 = 0x0
0xd87: M[0x0] = S0
0xd88: V766 = 0x40
0xd8a: V767 = 0x0
0xd8c: V768 = SHA3 0x0 0x40
0xd8d: V769 = 0x0
0xd93: V770 = S[V768]
0xd95: JUMP S1
0xd96: JUMPDEST 
0xd97: V771 = 0x3
0xd99: V772 = S[0x3]
0xd9b: JUMP S0
0xd9c: JUMPDEST 
0xd9d: V773 = 0x0
0xda1: V774 = S[0x0]
0xda3: V775 = 0x100
0xda6: V776 = EXP 0x100 0x0
0xda8: V777 = DIV V774 0x1
0xda9: V778 = 0xffffffffffffffffffffffffffffffffffffffff
0xdbe: V779 = AND 0xffffffffffffffffffffffffffffffffffffffff V777
0xdbf: V780 = 0xffffffffffffffffffffffffffffffffffffffff
0xdd4: V781 = AND 0xffffffffffffffffffffffffffffffffffffffff V779
0xdd5: V782 = CALLER
0xdd6: V783 = 0xffffffffffffffffffffffffffffffffffffffff
0xdeb: V784 = AND 0xffffffffffffffffffffffffffffffffffffffff V782
0xdec: V785 = EQ V784 V781
0xded: V786 = ISZERO V785
0xdee: V787 = ISZERO V786
0xdef: V788 = 0xada
0xdf2: THROWI V787
---
Entry stack: []
Stack pops: 0
Stack additions: [S6, 0x93c, S3, S4, V697, S6, S0, S3, 0x951, S1, S0, S3, S0, V736, V738, 0x9f7, S0, S2, S3, S4, V755, S0, V762, S0, V770, S1, V772, S0]
Exit stack: []

================================

Block 0xdf3
[0xdf3:0xe2e]
---
Predecessors: [0xc40]
Successors: [0xe2f]
---
0xdf3 PUSH1 0x0
0xdf5 DUP1
0xdf6 REVERT
0xdf7 JUMPDEST
0xdf8 PUSH1 0x0
0xdfa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe0f AND
0xe10 DUP2
0xe11 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe26 AND
0xe27 EQ
0xe28 ISZERO
0xe29 ISZERO
0xe2a ISZERO
0xe2b PUSH2 0xb16
0xe2e JUMPI
---
0xdf3: V789 = 0x0
0xdf6: REVERT 0x0 0x0
0xdf7: JUMPDEST 
0xdf8: V790 = 0x0
0xdfa: V791 = 0xffffffffffffffffffffffffffffffffffffffff
0xe0f: V792 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0xe11: V793 = 0xffffffffffffffffffffffffffffffffffffffff
0xe26: V794 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xe27: V795 = EQ V794 0x0
0xe28: V796 = ISZERO V795
0xe29: V797 = ISZERO V796
0xe2a: V798 = ISZERO V797
0xe2b: V799 = 0xb16
0xe2e: THROWI V798
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0xe2f
[0xe2f:0xf1d]
---
Predecessors: [0xdf3]
Successors: [0xf1e]
---
0xe2f PUSH1 0x0
0xe31 DUP1
0xe32 REVERT
0xe33 JUMPDEST
0xe34 DUP1
0xe35 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe4a AND
0xe4b PUSH1 0x0
0xe4d DUP1
0xe4e SWAP1
0xe4f SLOAD
0xe50 SWAP1
0xe51 PUSH2 0x100
0xe54 EXP
0xe55 SWAP1
0xe56 DIV
0xe57 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe6c AND
0xe6d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe82 AND
0xe83 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xea4 PUSH1 0x40
0xea6 MLOAD
0xea7 PUSH1 0x40
0xea9 MLOAD
0xeaa DUP1
0xeab SWAP2
0xeac SUB
0xead SWAP1
0xeae LOG3
0xeaf DUP1
0xeb0 PUSH1 0x0
0xeb2 DUP1
0xeb3 PUSH2 0x100
0xeb6 EXP
0xeb7 DUP2
0xeb8 SLOAD
0xeb9 DUP2
0xeba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xecf MUL
0xed0 NOT
0xed1 AND
0xed2 SWAP1
0xed3 DUP4
0xed4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xee9 AND
0xeea MUL
0xeeb OR
0xeec SWAP1
0xeed SSTORE
0xeee POP
0xeef POP
0xef0 JUMP
0xef1 JUMPDEST
0xef2 PUSH1 0x7
0xef4 PUSH1 0x20
0xef6 MSTORE
0xef7 DUP1
0xef8 PUSH1 0x0
0xefa MSTORE
0xefb PUSH1 0x40
0xefd PUSH1 0x0
0xeff SHA3
0xf00 PUSH1 0x0
0xf02 SWAP2
0xf03 POP
0xf04 SLOAD
0xf05 SWAP1
0xf06 PUSH2 0x100
0xf09 EXP
0xf0a SWAP1
0xf0b DIV
0xf0c PUSH1 0xff
0xf0e AND
0xf0f DUP2
0xf10 JUMP
0xf11 JUMPDEST
0xf12 PUSH1 0x0
0xf14 DUP3
0xf15 DUP3
0xf16 GT
0xf17 ISZERO
0xf18 ISZERO
0xf19 ISZERO
0xf1a PUSH2 0xc02
0xf1d JUMPI
---
0xe2f: V800 = 0x0
0xe32: REVERT 0x0 0x0
0xe33: JUMPDEST 
0xe35: V801 = 0xffffffffffffffffffffffffffffffffffffffff
0xe4a: V802 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xe4b: V803 = 0x0
0xe4f: V804 = S[0x0]
0xe51: V805 = 0x100
0xe54: V806 = EXP 0x100 0x0
0xe56: V807 = DIV V804 0x1
0xe57: V808 = 0xffffffffffffffffffffffffffffffffffffffff
0xe6c: V809 = AND 0xffffffffffffffffffffffffffffffffffffffff V807
0xe6d: V810 = 0xffffffffffffffffffffffffffffffffffffffff
0xe82: V811 = AND 0xffffffffffffffffffffffffffffffffffffffff V809
0xe83: V812 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xea4: V813 = 0x40
0xea6: V814 = M[0x40]
0xea7: V815 = 0x40
0xea9: V816 = M[0x40]
0xeac: V817 = SUB V814 V816
0xeae: LOG V816 V817 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V811 V802
0xeb0: V818 = 0x0
0xeb3: V819 = 0x100
0xeb6: V820 = EXP 0x100 0x0
0xeb8: V821 = S[0x0]
0xeba: V822 = 0xffffffffffffffffffffffffffffffffffffffff
0xecf: V823 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xed0: V824 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xed1: V825 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V821
0xed4: V826 = 0xffffffffffffffffffffffffffffffffffffffff
0xee9: V827 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xeea: V828 = MUL V827 0x1
0xeeb: V829 = OR V828 V825
0xeed: S[0x0] = V829
0xef0: JUMP S1
0xef1: JUMPDEST 
0xef2: V830 = 0x7
0xef4: V831 = 0x20
0xef6: M[0x20] = 0x7
0xef8: V832 = 0x0
0xefa: M[0x0] = S0
0xefb: V833 = 0x40
0xefd: V834 = 0x0
0xeff: V835 = SHA3 0x0 0x40
0xf00: V836 = 0x0
0xf04: V837 = S[V835]
0xf06: V838 = 0x100
0xf09: V839 = EXP 0x100 0x0
0xf0b: V840 = DIV V837 0x1
0xf0c: V841 = 0xff
0xf0e: V842 = AND 0xff V840
0xf10: JUMP S1
0xf11: JUMPDEST 
0xf12: V843 = 0x0
0xf16: V844 = GT S0 S1
0xf17: V845 = ISZERO V844
0xf18: V846 = ISZERO V845
0xf19: V847 = ISZERO V846
0xf1a: V848 = 0xc02
0xf1d: THROWI V847
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [V842, S1, 0x0, S0, S1]
Exit stack: []

================================

Block 0xf1e
[0xf1e:0xf3c]
---
Predecessors: [0xe2f]
Successors: [0xf3d]
---
0xf1e INVALID
0xf1f JUMPDEST
0xf20 DUP2
0xf21 DUP4
0xf22 SUB
0xf23 SWAP1
0xf24 POP
0xf25 SWAP3
0xf26 SWAP2
0xf27 POP
0xf28 POP
0xf29 JUMP
0xf2a JUMPDEST
0xf2b PUSH1 0x0
0xf2d DUP1
0xf2e DUP3
0xf2f DUP5
0xf30 ADD
0xf31 SWAP1
0xf32 POP
0xf33 DUP4
0xf34 DUP2
0xf35 LT
0xf36 ISZERO
0xf37 ISZERO
0xf38 ISZERO
0xf39 PUSH2 0xc21
0xf3c JUMPI
---
0xf1e: INVALID 
0xf1f: JUMPDEST 
0xf22: V849 = SUB S2 S1
0xf29: JUMP S3
0xf2a: JUMPDEST 
0xf2b: V850 = 0x0
0xf30: V851 = ADD S1 S0
0xf35: V852 = LT V851 S1
0xf36: V853 = ISZERO V852
0xf37: V854 = ISZERO V853
0xf38: V855 = ISZERO V854
0xf39: V856 = 0xc21
0xf3c: THROWI V855
---
Entry stack: [S2, S1, 0x0]
Stack pops: 0
Stack additions: [V849, V851, 0x0, S0, S1]
Exit stack: []

================================

Block 0xf3d
[0xf3d:0xfe5]
---
Predecessors: [0xf1e]
Successors: [0xfe6]
---
0xf3d INVALID
0xf3e JUMPDEST
0xf3f DUP1
0xf40 SWAP2
0xf41 POP
0xf42 POP
0xf43 SWAP3
0xf44 SWAP2
0xf45 POP
0xf46 POP
0xf47 JUMP
0xf48 JUMPDEST
0xf49 DUP3
0xf4a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf5f AND
0xf60 PUSH4 0xa9059cbb
0xf65 DUP4
0xf66 DUP4
0xf67 PUSH1 0x40
0xf69 MLOAD
0xf6a DUP4
0xf6b PUSH4 0xffffffff
0xf70 AND
0xf71 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xf8f MUL
0xf90 DUP2
0xf91 MSTORE
0xf92 PUSH1 0x4
0xf94 ADD
0xf95 DUP1
0xf96 DUP4
0xf97 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfac AND
0xfad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfc2 AND
0xfc3 DUP2
0xfc4 MSTORE
0xfc5 PUSH1 0x20
0xfc7 ADD
0xfc8 DUP3
0xfc9 DUP2
0xfca MSTORE
0xfcb PUSH1 0x20
0xfcd ADD
0xfce SWAP3
0xfcf POP
0xfd0 POP
0xfd1 POP
0xfd2 PUSH1 0x20
0xfd4 PUSH1 0x40
0xfd6 MLOAD
0xfd7 DUP1
0xfd8 DUP4
0xfd9 SUB
0xfda DUP2
0xfdb PUSH1 0x0
0xfdd DUP8
0xfde DUP1
0xfdf EXTCODESIZE
0xfe0 ISZERO
0xfe1 ISZERO
0xfe2 PUSH2 0xccd
0xfe5 JUMPI
---
0xf3d: INVALID 
0xf3e: JUMPDEST 
0xf47: JUMP S4
0xf48: JUMPDEST 
0xf4a: V857 = 0xffffffffffffffffffffffffffffffffffffffff
0xf5f: V858 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xf60: V859 = 0xa9059cbb
0xf67: V860 = 0x40
0xf69: V861 = M[0x40]
0xf6b: V862 = 0xffffffff
0xf70: V863 = AND 0xffffffff 0xa9059cbb
0xf71: V864 = 0x100000000000000000000000000000000000000000000000000000000
0xf8f: V865 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0xf91: M[V861] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xf92: V866 = 0x4
0xf94: V867 = ADD 0x4 V861
0xf97: V868 = 0xffffffffffffffffffffffffffffffffffffffff
0xfac: V869 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xfad: V870 = 0xffffffffffffffffffffffffffffffffffffffff
0xfc2: V871 = AND 0xffffffffffffffffffffffffffffffffffffffff V869
0xfc4: M[V867] = V871
0xfc5: V872 = 0x20
0xfc7: V873 = ADD 0x20 V867
0xfca: M[V873] = S0
0xfcb: V874 = 0x20
0xfcd: V875 = ADD 0x20 V873
0xfd2: V876 = 0x20
0xfd4: V877 = 0x40
0xfd6: V878 = M[0x40]
0xfd9: V879 = SUB V875 V878
0xfdb: V880 = 0x0
0xfdf: V881 = EXTCODESIZE V858
0xfe0: V882 = ISZERO V881
0xfe1: V883 = ISZERO V882
0xfe2: V884 = 0xccd
0xfe5: THROWI V883
---
Entry stack: [S3, S2, 0x0, V851]
Stack pops: 0
Stack additions: [S0, V858, 0x0, V878, V879, V878, 0x20, V875, 0xa9059cbb, V858, S0, S1, S2]
Exit stack: []

================================

Block 0xfe6
[0xfe6:0xff2]
---
Predecessors: [0xf3d]
Successors: [0xff3]
---
0xfe6 PUSH1 0x0
0xfe8 DUP1
0xfe9 REVERT
0xfea JUMPDEST
0xfeb GAS
0xfec CALL
0xfed ISZERO
0xfee ISZERO
0xfef PUSH2 0xcda
0xff2 JUMPI
---
0xfe6: V885 = 0x0
0xfe9: REVERT 0x0 0x0
0xfea: JUMPDEST 
0xfeb: V886 = GAS
0xfec: V887 = CALL V886 S0 S1 S2 S3 S4 S5
0xfed: V888 = ISZERO V887
0xfee: V889 = ISZERO V888
0xfef: V890 = 0xcda
0xff2: THROWI V889
---
Entry stack: [S11, S10, S9, V858, 0xa9059cbb, V875, 0x20, V878, V879, V878, 0x0, V858]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xff3
[0xff3:0x1007]
---
Predecessors: [0xfe6]
Successors: [0x1008]
---
0xff3 PUSH1 0x0
0xff5 DUP1
0xff6 REVERT
0xff7 JUMPDEST
0xff8 POP
0xff9 POP
0xffa POP
0xffb PUSH1 0x40
0xffd MLOAD
0xffe DUP1
0xfff MLOAD
0x1000 SWAP1
0x1001 POP
0x1002 ISZERO
0x1003 ISZERO
0x1004 PUSH2 0xcec
0x1007 JUMPI
---
0xff3: V891 = 0x0
0xff6: REVERT 0x0 0x0
0xff7: JUMPDEST 
0xffb: V892 = 0x40
0xffd: V893 = M[0x40]
0xfff: V894 = M[V893]
0x1002: V895 = ISZERO V894
0x1003: V896 = ISZERO V895
0x1004: V897 = 0xcec
0x1007: THROWI V896
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1008
[0x1008:0x101a]
---
Predecessors: [0xff3]
Successors: [0x101b]
---
0x1008 INVALID
0x1009 JUMPDEST
0x100a POP
0x100b POP
0x100c POP
0x100d JUMP
0x100e JUMPDEST
0x100f PUSH1 0x0
0x1011 DUP1
0x1012 PUSH1 0x0
0x1014 DUP5
0x1015 EQ
0x1016 ISZERO
0x1017 PUSH2 0xd06
0x101a JUMPI
---
0x1008: INVALID 
0x1009: JUMPDEST 
0x100d: JUMP S3
0x100e: JUMPDEST 
0x100f: V898 = 0x0
0x1012: V899 = 0x0
0x1015: V900 = EQ S1 0x0
0x1016: V901 = ISZERO V900
0x1017: V902 = 0xd06
0x101a: THROWI V901
---
Entry stack: []
Stack pops: 0
Stack additions: [0x0, 0x0, S0, S1]
Exit stack: []

================================

Block 0x101b
[0x101b:0x1032]
---
Predecessors: [0x1008]
Successors: [0x1033]
---
0x101b PUSH1 0x0
0x101d SWAP2
0x101e POP
0x101f PUSH2 0xd25
0x1022 JUMP
0x1023 JUMPDEST
0x1024 DUP3
0x1025 DUP5
0x1026 MUL
0x1027 SWAP1
0x1028 POP
0x1029 DUP3
0x102a DUP5
0x102b DUP3
0x102c DUP2
0x102d ISZERO
0x102e ISZERO
0x102f PUSH2 0xd17
0x1032 JUMPI
---
0x101b: V903 = 0x0
0x101f: V904 = 0xd25
0x1022: THROW 
0x1023: JUMPDEST 
0x1026: V905 = MUL S3 S2
0x102d: V906 = ISZERO S3
0x102e: V907 = ISZERO V906
0x102f: V908 = 0xd17
0x1032: THROWI V907
---
Entry stack: [S3, S2, 0x0, 0x0]
Stack pops: 2
Stack additions: [V905, S3, S2, V905, S1, S2, S3]
Exit stack: []

================================

Block 0x1033
[0x1033:0x103c]
---
Predecessors: [0x101b]
Successors: [0x103d]
---
0x1033 INVALID
0x1034 JUMPDEST
0x1035 DIV
0x1036 EQ
0x1037 ISZERO
0x1038 ISZERO
0x1039 PUSH2 0xd21
0x103c JUMPI
---
0x1033: INVALID 
0x1034: JUMPDEST 
0x1035: V909 = DIV S0 S1
0x1036: V910 = EQ V909 S2
0x1037: V911 = ISZERO V910
0x1038: V912 = ISZERO V911
0x1039: V913 = 0xd21
0x103c: THROWI V912
---
Entry stack: [S6, S5, S4, V905, S2, S1, V905]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x103d
[0x103d:0x1041]
---
Predecessors: [0x1033]
Successors: [0x1042]
---
0x103d INVALID
0x103e JUMPDEST
0x103f DUP1
0x1040 SWAP2
0x1041 POP
---
0x103d: INVALID 
0x103e: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: [S0, S0]
Exit stack: []

================================

Block 0x1042
[0x1042:0x1055]
---
Predecessors: [0x103d]
Successors: [0x1056]
---
0x1042 JUMPDEST
0x1043 POP
0x1044 SWAP3
0x1045 SWAP2
0x1046 POP
0x1047 POP
0x1048 JUMP
0x1049 JUMPDEST
0x104a PUSH1 0x0
0x104c DUP1
0x104d DUP3
0x104e DUP5
0x104f DUP2
0x1050 ISZERO
0x1051 ISZERO
0x1052 PUSH2 0xd3a
0x1055 JUMPI
---
0x1042: JUMPDEST 
0x1048: JUMP S4
0x1049: JUMPDEST 
0x104a: V914 = 0x0
0x1050: V915 = ISZERO S0
0x1051: V916 = ISZERO V915
0x1052: V917 = 0xd3a
0x1055: THROWI V916
---
Entry stack: [S1, S0]
Stack pops: 9
Stack additions: [S1, S0, 0x0, 0x0, S0, S1]
Exit stack: []

================================

Block 0x1056
[0x1056:0x107e]
---
Predecessors: [0x1042]
Successors: [0x107f]
---
0x1056 INVALID
0x1057 JUMPDEST
0x1058 DIV
0x1059 SWAP1
0x105a POP
0x105b DUP1
0x105c SWAP2
0x105d POP
0x105e POP
0x105f SWAP3
0x1060 SWAP2
0x1061 POP
0x1062 POP
0x1063 JUMP
0x1064 STOP
0x1065 LOG1
0x1066 PUSH6 0x627a7a723058
0x106d SHA3
0x106e DUP12
0x106f EXTCODECOPY
0x1070 MISSING 0x28
0x1071 PUSH12 0x432e7d4dff476a0be52d73df
0x107e JUMPI
---
0x1056: INVALID 
0x1057: JUMPDEST 
0x1058: V918 = DIV S0 S1
0x1063: JUMP S6
0x1064: STOP 
0x1065: LOG S0 S1 S2
0x1066: V919 = 0x627a7a723058
0x106d: V920 = SHA3 0x627a7a723058 S3
0x106f: EXTCODECOPY S14 V920 S4 S5
0x1070: MISSING 0x28
0x1071: V921 = 0x432e7d4dff476a0be52d73df
0x107e: THROWI S0
---
Entry stack: [S5, S4, 0x0, 0x0, S1, S0]
Stack pops: 0
Stack additions: [V918, S6, S7, S8, S9, S10, S11, S12, S13, S14]
Exit stack: []

================================

Block 0x107f
[0x107f:0x1094]
---
Predecessors: [0x1056]
Successors: []
---
0x107f MISSING 0xdc
0x1080 MOD
0x1081 SWAP2
0x1082 MISSING 0xda
0x1083 CODESIZE
0x1084 DUP9
0x1085 PUSH15 0x133fbd82bdf22a9b0029
---
0x107f: MISSING 0xdc
0x1080: V922 = MOD S0 S1
0x1082: MISSING 0xda
0x1083: V923 = CODESIZE
0x1085: V924 = 0x133fbd82bdf22a9b0029
---
Entry stack: []
Stack pops: 0
Stack additions: [S3, S2, V922, 0x133fbd82bdf22a9b0029, S7, V923, S0, S1, S2, S3, S4, S5, S6, S7]
Exit stack: []

================================

Function 0:
Public function signature: 0x8da5cb5b
Entry block: 0x51
Exit block: 0x64
Body: 0x51, 0x58, 0x5c, 0x64, 0xdf

Function 1:
Public function signature: 0xf2fde38b
Entry block: 0xa6
Exit block: 0xdd
Body: 0xa6, 0xad, 0xb1, 0xdd, 0x104, 0x15b, 0x15f, 0x197, 0x19b

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

