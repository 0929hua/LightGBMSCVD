Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x6c]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x3ccfd60b
0x3c EQ
0x3d PUSH2 0x6c
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x3ccfd60b
0x3c: V13 = EQ 0x3ccfd60b V11
0x3d: V14 = 0x6c
0x40: JUMPI 0x6c V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x83]
---
0x41 DUP1
0x42 PUSH4 0x8da5cb5b
0x47 EQ
0x48 PUSH2 0x83
0x4b JUMPI
---
0x42: V15 = 0x8da5cb5b
0x47: V16 = EQ 0x8da5cb5b V11
0x48: V17 = 0x83
0x4b: JUMPI 0x83 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xda]
---
0x4c DUP1
0x4d PUSH4 0xde2ed893
0x52 EQ
0x53 PUSH2 0xda
0x56 JUMPI
---
0x4d: V18 = 0xde2ed893
0x52: V19 = EQ 0xde2ed893 V11
0x53: V20 = 0xda
0x56: JUMPI 0xda V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x105]
---
0x57 DUP1
0x58 PUSH4 0xed88c68e
0x5d EQ
0x5e PUSH2 0x105
0x61 JUMPI
---
0x58: V21 = 0xed88c68e
0x5d: V22 = EQ 0xed88c68e V11
0x5e: V23 = 0x105
0x61: JUMPI 0x105 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x69]
---
Predecessors: [0x0, 0x57]
Successors: [0x10f]
---
0x62 JUMPDEST
0x63 PUSH2 0x6a
0x66 PUSH2 0x10f
0x69 JUMP
---
0x62: JUMPDEST 
0x63: V24 = 0x6a
0x66: V25 = 0x10f
0x69: JUMP 0x10f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6a]
Exit stack: [V11, 0x6a]

================================

Block 0x6a
[0x6a:0x6b]
---
Predecessors: [0x10f]
Successors: []
---
0x6a JUMPDEST
0x6b STOP
---
0x6a: JUMPDEST 
0x6b: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x73]
---
Predecessors: [0xd]
Successors: [0x74, 0x78]
---
0x6c JUMPDEST
0x6d CALLVALUE
0x6e DUP1
0x6f ISZERO
0x70 PUSH2 0x78
0x73 JUMPI
---
0x6c: JUMPDEST 
0x6d: V26 = CALLVALUE
0x6f: V27 = ISZERO V26
0x70: V28 = 0x78
0x73: JUMPI 0x78 V27
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V26]
Exit stack: [V11, V26]

================================

Block 0x74
[0x74:0x77]
---
Predecessors: [0x6c]
Successors: []
---
0x74 PUSH1 0x0
0x76 DUP1
0x77 REVERT
---
0x74: V29 = 0x0
0x77: REVERT 0x0 0x0
---
Entry stack: [V11, V26]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V26]

================================

Block 0x78
[0x78:0x80]
---
Predecessors: [0x6c]
Successors: [0x121]
---
0x78 JUMPDEST
0x79 POP
0x7a PUSH2 0x81
0x7d PUSH2 0x121
0x80 JUMP
---
0x78: JUMPDEST 
0x7a: V30 = 0x81
0x7d: V31 = 0x121
0x80: JUMP 0x121
---
Entry stack: [V11, V26]
Stack pops: 1
Stack additions: [0x81]
Exit stack: [V11, 0x81]

================================

Block 0x81
[0x81:0x82]
---
Predecessors: [0x1fa]
Successors: []
---
0x81 JUMPDEST
0x82 STOP
---
0x81: JUMPDEST 
0x82: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x83
[0x83:0x8a]
---
Predecessors: [0x41]
Successors: [0x8b, 0x8f]
---
0x83 JUMPDEST
0x84 CALLVALUE
0x85 DUP1
0x86 ISZERO
0x87 PUSH2 0x8f
0x8a JUMPI
---
0x83: JUMPDEST 
0x84: V32 = CALLVALUE
0x86: V33 = ISZERO V32
0x87: V34 = 0x8f
0x8a: JUMPI 0x8f V33
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V32]
Exit stack: [V11, V32]

================================

Block 0x8b
[0x8b:0x8e]
---
Predecessors: [0x83]
Successors: []
---
0x8b PUSH1 0x0
0x8d DUP1
0x8e REVERT
---
0x8b: V35 = 0x0
0x8e: REVERT 0x0 0x0
---
Entry stack: [V11, V32]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V32]

================================

Block 0x8f
[0x8f:0x97]
---
Predecessors: [0x83]
Successors: [0x1fd]
---
0x8f JUMPDEST
0x90 POP
0x91 PUSH2 0x98
0x94 PUSH2 0x1fd
0x97 JUMP
---
0x8f: JUMPDEST 
0x91: V36 = 0x98
0x94: V37 = 0x1fd
0x97: JUMP 0x1fd
---
Entry stack: [V11, V32]
Stack pops: 1
Stack additions: [0x98]
Exit stack: [V11, 0x98]

================================

Block 0x98
[0x98:0xd9]
---
Predecessors: [0x1fd]
Successors: []
---
0x98 JUMPDEST
0x99 PUSH1 0x40
0x9b MLOAD
0x9c DUP1
0x9d DUP3
0x9e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb3 AND
0xb4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc9 AND
0xca DUP2
0xcb MSTORE
0xcc PUSH1 0x20
0xce ADD
0xcf SWAP2
0xd0 POP
0xd1 POP
0xd2 PUSH1 0x40
0xd4 MLOAD
0xd5 DUP1
0xd6 SWAP2
0xd7 SUB
0xd8 SWAP1
0xd9 RETURN
---
0x98: JUMPDEST 
0x99: V38 = 0x40
0x9b: V39 = M[0x40]
0x9e: V40 = 0xffffffffffffffffffffffffffffffffffffffff
0xb3: V41 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0xb4: V42 = 0xffffffffffffffffffffffffffffffffffffffff
0xc9: V43 = AND 0xffffffffffffffffffffffffffffffffffffffff V41
0xcb: M[V39] = V43
0xcc: V44 = 0x20
0xce: V45 = ADD 0x20 V39
0xd2: V46 = 0x40
0xd4: V47 = M[0x40]
0xd7: V48 = SUB V45 V47
0xd9: RETURN V47 V48
---
Entry stack: [V11, 0x98, V122]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x98]

================================

Block 0xda
[0xda:0xe1]
---
Predecessors: [0x4c]
Successors: [0xe2, 0xe6]
---
0xda JUMPDEST
0xdb CALLVALUE
0xdc DUP1
0xdd ISZERO
0xde PUSH2 0xe6
0xe1 JUMPI
---
0xda: JUMPDEST 
0xdb: V49 = CALLVALUE
0xdd: V50 = ISZERO V49
0xde: V51 = 0xe6
0xe1: JUMPI 0xe6 V50
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V49]
Exit stack: [V11, V49]

================================

Block 0xe2
[0xe2:0xe5]
---
Predecessors: [0xda]
Successors: []
---
0xe2 PUSH1 0x0
0xe4 DUP1
0xe5 REVERT
---
0xe2: V52 = 0x0
0xe5: REVERT 0x0 0x0
---
Entry stack: [V11, V49]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V49]

================================

Block 0xe6
[0xe6:0xee]
---
Predecessors: [0xda]
Successors: [0x222]
---
0xe6 JUMPDEST
0xe7 POP
0xe8 PUSH2 0xef
0xeb PUSH2 0x222
0xee JUMP
---
0xe6: JUMPDEST 
0xe8: V53 = 0xef
0xeb: V54 = 0x222
0xee: JUMP 0x222
---
Entry stack: [V11, V49]
Stack pops: 1
Stack additions: [0xef]
Exit stack: [V11, 0xef]

================================

Block 0xef
[0xef:0x104]
---
Predecessors: [0x222]
Successors: []
---
0xef JUMPDEST
0xf0 PUSH1 0x40
0xf2 MLOAD
0xf3 DUP1
0xf4 DUP3
0xf5 DUP2
0xf6 MSTORE
0xf7 PUSH1 0x20
0xf9 ADD
0xfa SWAP2
0xfb POP
0xfc POP
0xfd PUSH1 0x40
0xff MLOAD
0x100 DUP1
0x101 SWAP2
0x102 SUB
0x103 SWAP1
0x104 RETURN
---
0xef: JUMPDEST 
0xf0: V55 = 0x40
0xf2: V56 = M[0x40]
0xf6: M[V56] = V124
0xf7: V57 = 0x20
0xf9: V58 = ADD 0x20 V56
0xfd: V59 = 0x40
0xff: V60 = M[0x40]
0x102: V61 = SUB V58 V60
0x104: RETURN V60 V61
---
Entry stack: [V11, 0xef, V124]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xef]

================================

Block 0x105
[0x105:0x10c]
---
Predecessors: [0x57]
Successors: [0x10f]
---
0x105 JUMPDEST
0x106 PUSH2 0x10d
0x109 PUSH2 0x10f
0x10c JUMP
---
0x105: JUMPDEST 
0x106: V62 = 0x10d
0x109: V63 = 0x10f
0x10c: JUMP 0x10f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x10d]
Exit stack: [V11, 0x10d]

================================

Block 0x10d
[0x10d:0x10e]
---
Predecessors: [0x10f]
Successors: []
---
0x10d JUMPDEST
0x10e STOP
---
0x10d: JUMPDEST 
0x10e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x10f
[0x10f:0x120]
---
Predecessors: [0x62, 0x105]
Successors: [0x6a, 0x10d]
---
0x10f JUMPDEST
0x110 CALLVALUE
0x111 PUSH1 0x1
0x113 PUSH1 0x0
0x115 DUP3
0x116 DUP3
0x117 SLOAD
0x118 ADD
0x119 SWAP3
0x11a POP
0x11b POP
0x11c DUP2
0x11d SWAP1
0x11e SSTORE
0x11f POP
0x120 JUMP
---
0x10f: JUMPDEST 
0x110: V64 = CALLVALUE
0x111: V65 = 0x1
0x113: V66 = 0x0
0x117: V67 = S[0x1]
0x118: V68 = ADD V67 V64
0x11e: S[0x1] = V68
0x120: JUMP {0x6a, 0x10d}
---
Entry stack: [V11, {0x6a, 0x10d}]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x121
[0x121:0x177]
---
Predecessors: [0x78]
Successors: [0x178, 0x17c]
---
0x121 JUMPDEST
0x122 PUSH1 0x0
0x124 DUP1
0x125 SWAP1
0x126 SLOAD
0x127 SWAP1
0x128 PUSH2 0x100
0x12b EXP
0x12c SWAP1
0x12d DIV
0x12e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x143 AND
0x144 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x159 AND
0x15a CALLER
0x15b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x170 AND
0x171 EQ
0x172 ISZERO
0x173 ISZERO
0x174 PUSH2 0x17c
0x177 JUMPI
---
0x121: JUMPDEST 
0x122: V69 = 0x0
0x126: V70 = S[0x0]
0x128: V71 = 0x100
0x12b: V72 = EXP 0x100 0x0
0x12d: V73 = DIV V70 0x1
0x12e: V74 = 0xffffffffffffffffffffffffffffffffffffffff
0x143: V75 = AND 0xffffffffffffffffffffffffffffffffffffffff V73
0x144: V76 = 0xffffffffffffffffffffffffffffffffffffffff
0x159: V77 = AND 0xffffffffffffffffffffffffffffffffffffffff V75
0x15a: V78 = CALLER
0x15b: V79 = 0xffffffffffffffffffffffffffffffffffffffff
0x170: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x171: V81 = EQ V80 V77
0x172: V82 = ISZERO V81
0x173: V83 = ISZERO V82
0x174: V84 = 0x17c
0x177: JUMPI 0x17c V83
---
Entry stack: [V11, 0x81]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x81]

================================

Block 0x178
[0x178:0x17b]
---
Predecessors: [0x121]
Successors: []
---
0x178 PUSH1 0x0
0x17a DUP1
0x17b REVERT
---
0x178: V85 = 0x0
0x17b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x81]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x81]

================================

Block 0x17c
[0x17c:0x1f0]
---
Predecessors: [0x121]
Successors: [0x1f1, 0x1fa]
---
0x17c JUMPDEST
0x17d PUSH1 0x0
0x17f DUP1
0x180 SWAP1
0x181 SLOAD
0x182 SWAP1
0x183 PUSH2 0x100
0x186 EXP
0x187 SWAP1
0x188 DIV
0x189 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19e AND
0x19f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b4 AND
0x1b5 PUSH2 0x8fc
0x1b8 ADDRESS
0x1b9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ce AND
0x1cf BALANCE
0x1d0 SWAP1
0x1d1 DUP2
0x1d2 ISZERO
0x1d3 MUL
0x1d4 SWAP1
0x1d5 PUSH1 0x40
0x1d7 MLOAD
0x1d8 PUSH1 0x0
0x1da PUSH1 0x40
0x1dc MLOAD
0x1dd DUP1
0x1de DUP4
0x1df SUB
0x1e0 DUP2
0x1e1 DUP6
0x1e2 DUP9
0x1e3 DUP9
0x1e4 CALL
0x1e5 SWAP4
0x1e6 POP
0x1e7 POP
0x1e8 POP
0x1e9 POP
0x1ea ISZERO
0x1eb DUP1
0x1ec ISZERO
0x1ed PUSH2 0x1fa
0x1f0 JUMPI
---
0x17c: JUMPDEST 
0x17d: V86 = 0x0
0x181: V87 = S[0x0]
0x183: V88 = 0x100
0x186: V89 = EXP 0x100 0x0
0x188: V90 = DIV V87 0x1
0x189: V91 = 0xffffffffffffffffffffffffffffffffffffffff
0x19e: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff V90
0x19f: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b4: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x1b5: V95 = 0x8fc
0x1b8: V96 = ADDRESS
0x1b9: V97 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ce: V98 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x1cf: V99 = BALANCE V98
0x1d2: V100 = ISZERO V99
0x1d3: V101 = MUL V100 0x8fc
0x1d5: V102 = 0x40
0x1d7: V103 = M[0x40]
0x1d8: V104 = 0x0
0x1da: V105 = 0x40
0x1dc: V106 = M[0x40]
0x1df: V107 = SUB V103 V106
0x1e4: V108 = CALL V101 V94 V99 V106 V107 V106 0x0
0x1ea: V109 = ISZERO V108
0x1ec: V110 = ISZERO V109
0x1ed: V111 = 0x1fa
0x1f0: JUMPI 0x1fa V110
---
Entry stack: [V11, 0x81]
Stack pops: 0
Stack additions: [V109]
Exit stack: [V11, 0x81, V109]

================================

Block 0x1f1
[0x1f1:0x1f9]
---
Predecessors: [0x17c]
Successors: []
---
0x1f1 RETURNDATASIZE
0x1f2 PUSH1 0x0
0x1f4 DUP1
0x1f5 RETURNDATACOPY
0x1f6 RETURNDATASIZE
0x1f7 PUSH1 0x0
0x1f9 REVERT
---
0x1f1: V112 = RETURNDATASIZE
0x1f2: V113 = 0x0
0x1f5: RETURNDATACOPY 0x0 0x0 V112
0x1f6: V114 = RETURNDATASIZE
0x1f7: V115 = 0x0
0x1f9: REVERT 0x0 V114
---
Entry stack: [V11, 0x81, V109]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x81, V109]

================================

Block 0x1fa
[0x1fa:0x1fc]
---
Predecessors: [0x17c]
Successors: [0x81]
---
0x1fa JUMPDEST
0x1fb POP
0x1fc JUMP
---
0x1fa: JUMPDEST 
0x1fc: JUMP 0x81
---
Entry stack: [V11, 0x81, V109]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x1fd
[0x1fd:0x221]
---
Predecessors: [0x8f]
Successors: [0x98]
---
0x1fd JUMPDEST
0x1fe PUSH1 0x0
0x200 DUP1
0x201 SWAP1
0x202 SLOAD
0x203 SWAP1
0x204 PUSH2 0x100
0x207 EXP
0x208 SWAP1
0x209 DIV
0x20a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21f AND
0x220 DUP2
0x221 JUMP
---
0x1fd: JUMPDEST 
0x1fe: V116 = 0x0
0x202: V117 = S[0x0]
0x204: V118 = 0x100
0x207: V119 = EXP 0x100 0x0
0x209: V120 = DIV V117 0x1
0x20a: V121 = 0xffffffffffffffffffffffffffffffffffffffff
0x21f: V122 = AND 0xffffffffffffffffffffffffffffffffffffffff V120
0x221: JUMP 0x98
---
Entry stack: [V11, 0x98]
Stack pops: 1
Stack additions: [S0, V122]
Exit stack: [V11, 0x98, V122]

================================

Block 0x222
[0x222:0x227]
---
Predecessors: [0xe6]
Successors: [0xef]
---
0x222 JUMPDEST
0x223 PUSH1 0x1
0x225 SLOAD
0x226 DUP2
0x227 JUMP
---
0x222: JUMPDEST 
0x223: V123 = 0x1
0x225: V124 = S[0x1]
0x227: JUMP 0xef
---
Entry stack: [V11, 0xef]
Stack pops: 1
Stack additions: [S0, V124]
Exit stack: [V11, 0xef, V124]

================================

Block 0x228
[0x228:0x25f]
---
Predecessors: []
Successors: []
---
0x228 STOP
0x229 LOG1
0x22a PUSH6 0x627a7a723058
0x231 SHA3
0x232 MISSING 0xd7
0x233 SWAP12
0x234 LOG4
0x235 SSTORE
0x236 MSTORE8
0x237 EXTCODEHASH
0x238 MLOAD
0x239 PUSH3 0x201d10
0x23d MISSING 0x5e
0x23e MISSING 0xd6
0x23f MSTORE
0x240 PUSH4 0x2b48154f
0x245 BALANCE
0x246 DUP2
0x247 SWAP15
0x248 MISSING 0xb3
0x249 DUP5
0x24a MISSING 0xb9
0x24b PUSH20 0xdb2d138c62cf0029
---
0x228: STOP 
0x229: LOG S0 S1 S2
0x22a: V125 = 0x627a7a723058
0x231: V126 = SHA3 0x627a7a723058 S3
0x232: MISSING 0xd7
0x234: LOG S12 S1 S2 S3 S4 S5
0x235: S[S6] = S7
0x236: M8[S8] = S9
0x237: V127 = EXTCODEHASH S10
0x238: V128 = M[V127]
0x239: V129 = 0x201d10
0x23d: MISSING 0x5e
0x23e: MISSING 0xd6
0x23f: M[S0] = S1
0x240: V130 = 0x2b48154f
0x245: V131 = BALANCE 0x2b48154f
0x248: MISSING 0xb3
0x24a: MISSING 0xb9
0x24b: V132 = 0xdb2d138c62cf0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V126, 0x201d10, V128, S11, S0, S15, V131, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S2, S4, S0, S1, S2, S3, S4, 0xdb2d138c62cf0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0x6c
Exit block: 0x81
Body: 0x6c, 0x74, 0x78, 0x81, 0x121, 0x178, 0x17c, 0x1f1, 0x1fa

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0x83
Exit block: 0x98
Body: 0x83, 0x8b, 0x8f, 0x98, 0x1fd

Function 2:
Public function signature: 0xde2ed893
Entry block: 0xda
Exit block: 0xef
Body: 0xda, 0xe2, 0xe6, 0xef, 0x222

Function 3:
Public function signature: 0xed88c68e
Entry block: 0x105
Exit block: 0x10d
Body: 0x105, 0x10d

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x6a
Body: 0x62, 0x6a

