Block 0x0
[0x0:0x8]
---
Predecessors: []
Successors: []
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 DUP1
0x8 REVERT
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x8: REVERT 0x0 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x9
[0x9:0x3f]
---
Predecessors: []
Successors: [0x40]
---
0x9 STOP
0xa LOG1
0xb PUSH6 0x627a7a723058
0x12 SHA3
0x13 REVERT
0x14 LOG1
0x15 MUL
0x16 EXTCODEHASH
0x17 SWAP6
0x18 MISSING 0xfb
0x19 SWAP13
0x1a MISSING 0xfc
0x1b SWAP7
0x1c PUSH13 0xddd067b27b2cf884de87ea5688
0x2a ADDMOD
0x2b MISSING 0xb1
0x2c SWAP11
0x2d SAR
0x2e CALL
0x2f EXTCODEHASH
0x30 PUSH2 0xd490
0x33 STOP
0x34 MISSING 0x29
0x35 PUSH1 0x60
0x37 PUSH1 0x40
0x39 MSTORE
0x3a CALLDATASIZE
0x3b ISZERO
0x3c PUSH2 0xb8
0x3f JUMPI
---
0x9: STOP 
0xa: LOG S0 S1 S2
0xb: V3 = 0x627a7a723058
0x12: V4 = SHA3 0x627a7a723058 S3
0x13: REVERT V4 S4
0x14: LOG S0 S1 S2
0x15: V5 = MUL S3 S4
0x16: V6 = EXTCODEHASH V5
0x18: MISSING 0xfb
0x1a: MISSING 0xfc
0x1c: V7 = 0xddd067b27b2cf884de87ea5688
0x2a: V8 = ADDMOD 0xddd067b27b2cf884de87ea5688 S7 S1
0x2b: MISSING 0xb1
0x2d: V9 = SAR S11 S1
0x2e: V10 = CALL V9 S2 S3 S4 S5 S6 S7
0x2f: V11 = EXTCODEHASH V10
0x30: V12 = 0xd490
0x33: STOP 
0x34: MISSING 0x29
0x35: V13 = 0x60
0x37: V14 = 0x40
0x39: M[0x40] = 0x60
0x3a: V15 = CALLDATASIZE
0x3b: V16 = ISZERO V15
0x3c: V17 = 0xb8
0x3f: THROWI V16
---
Entry stack: []
Stack pops: 0
Stack additions: [S10, S5, S6, S7, S8, S9, V6, S13, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S0, V8, S2, S3, S4, S5, S6, S0, 0xd490, V11, S8, S9, S10, S0]
Exit stack: []

================================

Block 0x40
[0x40:0x73]
---
Predecessors: [0x9]
Successors: [0x74]
---
0x40 PUSH1 0x0
0x42 CALLDATALOAD
0x43 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x61 SWAP1
0x62 DIV
0x63 PUSH4 0xffffffff
0x68 AND
0x69 DUP1
0x6a PUSH4 0x2d05d3f
0x6f EQ
0x70 PUSH2 0x119
0x73 JUMPI
---
0x40: V18 = 0x0
0x42: V19 = CALLDATALOAD 0x0
0x43: V20 = 0x100000000000000000000000000000000000000000000000000000000
0x62: V21 = DIV V19 0x100000000000000000000000000000000000000000000000000000000
0x63: V22 = 0xffffffff
0x68: V23 = AND 0xffffffff V21
0x6a: V24 = 0x2d05d3f
0x6f: V25 = EQ 0x2d05d3f V23
0x70: V26 = 0x119
0x73: THROWI V25
---
Entry stack: []
Stack pops: 0
Stack additions: [V23]
Exit stack: [V23]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x40]
Successors: [0x7f]
---
0x74 DUP1
0x75 PUSH4 0xd009297
0x7a EQ
0x7b PUSH2 0x16e
0x7e JUMPI
---
0x75: V27 = 0xd009297
0x7a: V28 = EQ 0xd009297 V23
0x7b: V29 = 0x16e
0x7e: THROWI V28
---
Entry stack: [V23]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V23]

================================

Block 0x7f
[0x7f:0x89]
---
Predecessors: [0x74]
Successors: [0x8a]
---
0x7f DUP1
0x80 PUSH4 0x117de2fd
0x85 EQ
0x86 PUSH2 0x1a7
0x89 JUMPI
---
0x80: V30 = 0x117de2fd
0x85: V31 = EQ 0x117de2fd V23
0x86: V32 = 0x1a7
0x89: THROWI V31
---
Entry stack: [V23]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V23]

================================

Block 0x8a
[0x8a:0x94]
---
Predecessors: [0x7f]
Successors: [0x95]
---
0x8a DUP1
0x8b PUSH4 0x1b7623be
0x90 EQ
0x91 PUSH2 0x1e9
0x94 JUMPI
---
0x8b: V33 = 0x1b7623be
0x90: V34 = EQ 0x1b7623be V23
0x91: V35 = 0x1e9
0x94: THROWI V34
---
Entry stack: [V23]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V23]

================================

Block 0x95
[0x95:0x9f]
---
Predecessors: [0x8a]
Successors: [0xa0]
---
0x95 DUP1
0x96 PUSH4 0x27e235e3
0x9b EQ
0x9c PUSH2 0x22b
0x9f JUMPI
---
0x96: V36 = 0x27e235e3
0x9b: V37 = EQ 0x27e235e3 V23
0x9c: V38 = 0x22b
0x9f: THROWI V37
---
Entry stack: [V23]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V23]

================================

Block 0xa0
[0xa0:0xaa]
---
Predecessors: [0x95]
Successors: [0xab]
---
0xa0 DUP1
0xa1 PUSH4 0x4d130369
0xa6 EQ
0xa7 PUSH2 0x278
0xaa JUMPI
---
0xa1: V39 = 0x4d130369
0xa6: V40 = EQ 0x4d130369 V23
0xa7: V41 = 0x278
0xaa: THROWI V40
---
Entry stack: [V23]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V23]

================================

Block 0xab
[0xab:0xb5]
---
Predecessors: [0xa0]
Successors: [0xb6]
---
0xab DUP1
0xac PUSH4 0x6de6220b
0xb1 EQ
0xb2 PUSH2 0x2c5
0xb5 JUMPI
---
0xac: V42 = 0x6de6220b
0xb1: V43 = EQ 0x6de6220b V23
0xb2: V44 = 0x2c5
0xb5: THROWI V43
---
Entry stack: [V23]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V23]

================================

Block 0xb6
[0xb6:0xc0]
---
Predecessors: [0xab]
Successors: [0xc1]
---
0xb6 DUP1
0xb7 PUSH4 0xce845d1d
0xbc EQ
0xbd PUSH2 0x31a
0xc0 JUMPI
---
0xb7: V45 = 0xce845d1d
0xbc: V46 = EQ 0xce845d1d V23
0xbd: V47 = 0x31a
0xc0: THROWI V46
---
Entry stack: [V23]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V23]

================================

Block 0xc1
[0xc1:0xcb]
---
Predecessors: [0xb6]
Successors: [0xcc]
---
0xc1 DUP1
0xc2 PUSH4 0xd7dc6203
0xc7 EQ
0xc8 PUSH2 0x343
0xcb JUMPI
---
0xc2: V48 = 0xd7dc6203
0xc7: V49 = EQ 0xd7dc6203 V23
0xc8: V50 = 0x343
0xcb: THROWI V49
---
Entry stack: [V23]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V23]

================================

Block 0xcc
[0xcc:0xd6]
---
Predecessors: [0xc1]
Successors: [0xd7]
---
0xcc DUP1
0xcd PUSH4 0xf1d2b3c2
0xd2 EQ
0xd3 PUSH2 0x399
0xd6 JUMPI
---
0xcd: V51 = 0xf1d2b3c2
0xd2: V52 = EQ 0xf1d2b3c2 V23
0xd3: V53 = 0x399
0xd6: THROWI V52
---
Entry stack: [V23]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V23]

================================

Block 0xd7
[0xd7:0xe1]
---
Predecessors: [0xcc]
Successors: [0xe2]
---
0xd7 DUP1
0xd8 PUSH4 0xf33280b2
0xdd EQ
0xde PUSH2 0x3ee
0xe1 JUMPI
---
0xd8: V54 = 0xf33280b2
0xdd: V55 = EQ 0xf33280b2 V23
0xde: V56 = 0x3ee
0xe1: THROWI V55
---
Entry stack: [V23]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V23]

================================

Block 0xe2
[0xe2:0xec]
---
Predecessors: [0xd7]
Successors: [0xed]
---
0xe2 DUP1
0xe3 PUSH4 0xf340fa01
0xe8 EQ
0xe9 PUSH2 0x417
0xec JUMPI
---
0xe3: V57 = 0xf340fa01
0xe8: V58 = EQ 0xf340fa01 V23
0xe9: V59 = 0x417
0xec: THROWI V58
---
Entry stack: [V23]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V23]

================================

Block 0xed
[0xed:0xfa]
---
Predecessors: [0xe2]
Successors: [0xfb]
---
0xed JUMPDEST
0xee PUSH1 0x0
0xf0 PUSH1 0x4
0xf2 SLOAD
0xf3 CALLVALUE
0xf4 LT
0xf5 ISZERO
0xf6 ISZERO
0xf7 PUSH2 0x116
0xfa JUMPI
---
0xed: JUMPDEST 
0xee: V60 = 0x0
0xf0: V61 = 0x4
0xf2: V62 = S[0x4]
0xf3: V63 = CALLVALUE
0xf4: V64 = LT V63 V62
0xf5: V65 = ISZERO V64
0xf6: V66 = ISZERO V65
0xf7: V67 = 0x116
0xfa: THROWI V66
---
Entry stack: [V23]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V23, 0x0]

================================

Block 0xfb
[0xfb:0x14a]
---
Predecessors: [0xed]
Successors: [0x14b]
---
0xfb CALLVALUE
0xfc SWAP1
0xfd POP
0xfe DUP1
0xff PUSH1 0x5
0x101 PUSH1 0x0
0x103 CALLER
0x104 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x119 AND
0x11a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12f AND
0x130 DUP2
0x131 MSTORE
0x132 PUSH1 0x20
0x134 ADD
0x135 SWAP1
0x136 DUP2
0x137 MSTORE
0x138 PUSH1 0x20
0x13a ADD
0x13b PUSH1 0x0
0x13d SHA3
0x13e PUSH1 0x0
0x140 DUP3
0x141 DUP3
0x142 SLOAD
0x143 ADD
0x144 SWAP3
0x145 POP
0x146 POP
0x147 DUP2
0x148 SWAP1
0x149 SSTORE
0x14a POP
---
0xfb: V68 = CALLVALUE
0xff: V69 = 0x5
0x101: V70 = 0x0
0x103: V71 = CALLER
0x104: V72 = 0xffffffffffffffffffffffffffffffffffffffff
0x119: V73 = AND 0xffffffffffffffffffffffffffffffffffffffff V71
0x11a: V74 = 0xffffffffffffffffffffffffffffffffffffffff
0x12f: V75 = AND 0xffffffffffffffffffffffffffffffffffffffff V73
0x131: M[0x0] = V75
0x132: V76 = 0x20
0x134: V77 = ADD 0x20 0x0
0x137: M[0x20] = 0x5
0x138: V78 = 0x20
0x13a: V79 = ADD 0x20 0x20
0x13b: V80 = 0x0
0x13d: V81 = SHA3 0x0 0x40
0x13e: V82 = 0x0
0x142: V83 = S[V81]
0x143: V84 = ADD V83 V68
0x149: S[V81] = V84
---
Entry stack: [V23, 0x0]
Stack pops: 1
Stack additions: [V68]
Exit stack: [V23, V68]

================================

Block 0x14b
[0x14b:0x154]
---
Predecessors: [0xfb]
Successors: [0x155]
---
0x14b JUMPDEST
0x14c POP
0x14d STOP
0x14e JUMPDEST
0x14f CALLVALUE
0x150 ISZERO
0x151 PUSH2 0x124
0x154 JUMPI
---
0x14b: JUMPDEST 
0x14d: STOP 
0x14e: JUMPDEST 
0x14f: V85 = CALLVALUE
0x150: V86 = ISZERO V85
0x151: V87 = 0x124
0x154: THROWI V86
---
Entry stack: [V23, V68]
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x155
[0x155:0x1a9]
---
Predecessors: [0x14b]
Successors: [0x1aa]
---
0x155 PUSH1 0x0
0x157 DUP1
0x158 REVERT
0x159 JUMPDEST
0x15a PUSH2 0x12c
0x15d PUSH2 0x445
0x160 JUMP
0x161 JUMPDEST
0x162 PUSH1 0x40
0x164 MLOAD
0x165 DUP1
0x166 DUP3
0x167 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17c AND
0x17d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x192 AND
0x193 DUP2
0x194 MSTORE
0x195 PUSH1 0x20
0x197 ADD
0x198 SWAP2
0x199 POP
0x19a POP
0x19b PUSH1 0x40
0x19d MLOAD
0x19e DUP1
0x19f SWAP2
0x1a0 SUB
0x1a1 SWAP1
0x1a2 RETURN
0x1a3 JUMPDEST
0x1a4 CALLVALUE
0x1a5 ISZERO
0x1a6 PUSH2 0x179
0x1a9 JUMPI
---
0x155: V88 = 0x0
0x158: REVERT 0x0 0x0
0x159: JUMPDEST 
0x15a: V89 = 0x12c
0x15d: V90 = 0x445
0x160: THROW 
0x161: JUMPDEST 
0x162: V91 = 0x40
0x164: V92 = M[0x40]
0x167: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x17c: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x17d: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x192: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x194: M[V92] = V96
0x195: V97 = 0x20
0x197: V98 = ADD 0x20 V92
0x19b: V99 = 0x40
0x19d: V100 = M[0x40]
0x1a0: V101 = SUB V98 V100
0x1a2: RETURN V100 V101
0x1a3: JUMPDEST 
0x1a4: V102 = CALLVALUE
0x1a5: V103 = ISZERO V102
0x1a6: V104 = 0x179
0x1a9: THROWI V103
---
Entry stack: []
Stack pops: 0
Stack additions: [0x12c]
Exit stack: []

================================

Block 0x1aa
[0x1aa:0x1e2]
---
Predecessors: [0x155]
Successors: [0x1e3]
---
0x1aa PUSH1 0x0
0x1ac DUP1
0x1ad REVERT
0x1ae JUMPDEST
0x1af PUSH2 0x1a5
0x1b2 PUSH1 0x4
0x1b4 DUP1
0x1b5 DUP1
0x1b6 CALLDATALOAD
0x1b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1cc AND
0x1cd SWAP1
0x1ce PUSH1 0x20
0x1d0 ADD
0x1d1 SWAP1
0x1d2 SWAP2
0x1d3 SWAP1
0x1d4 POP
0x1d5 POP
0x1d6 PUSH2 0x46b
0x1d9 JUMP
0x1da JUMPDEST
0x1db STOP
0x1dc JUMPDEST
0x1dd CALLVALUE
0x1de ISZERO
0x1df PUSH2 0x1b2
0x1e2 JUMPI
---
0x1aa: V105 = 0x0
0x1ad: REVERT 0x0 0x0
0x1ae: JUMPDEST 
0x1af: V106 = 0x1a5
0x1b2: V107 = 0x4
0x1b6: V108 = CALLDATALOAD 0x4
0x1b7: V109 = 0xffffffffffffffffffffffffffffffffffffffff
0x1cc: V110 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x1ce: V111 = 0x20
0x1d0: V112 = ADD 0x20 0x4
0x1d6: V113 = 0x46b
0x1d9: THROW 
0x1da: JUMPDEST 
0x1db: STOP 
0x1dc: JUMPDEST 
0x1dd: V114 = CALLVALUE
0x1de: V115 = ISZERO V114
0x1df: V116 = 0x1b2
0x1e2: THROWI V115
---
Entry stack: []
Stack pops: 0
Stack additions: [V110, 0x1a5]
Exit stack: []

================================

Block 0x1e3
[0x1e3:0x224]
---
Predecessors: [0x1aa]
Successors: [0x225]
---
0x1e3 PUSH1 0x0
0x1e5 DUP1
0x1e6 REVERT
0x1e7 JUMPDEST
0x1e8 PUSH2 0x1e7
0x1eb PUSH1 0x4
0x1ed DUP1
0x1ee DUP1
0x1ef CALLDATALOAD
0x1f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x205 AND
0x206 SWAP1
0x207 PUSH1 0x20
0x209 ADD
0x20a SWAP1
0x20b SWAP2
0x20c SWAP1
0x20d DUP1
0x20e CALLDATALOAD
0x20f SWAP1
0x210 PUSH1 0x20
0x212 ADD
0x213 SWAP1
0x214 SWAP2
0x215 SWAP1
0x216 POP
0x217 POP
0x218 PUSH2 0x4af
0x21b JUMP
0x21c JUMPDEST
0x21d STOP
0x21e JUMPDEST
0x21f CALLVALUE
0x220 ISZERO
0x221 PUSH2 0x1f4
0x224 JUMPI
---
0x1e3: V117 = 0x0
0x1e6: REVERT 0x0 0x0
0x1e7: JUMPDEST 
0x1e8: V118 = 0x1e7
0x1eb: V119 = 0x4
0x1ef: V120 = CALLDATALOAD 0x4
0x1f0: V121 = 0xffffffffffffffffffffffffffffffffffffffff
0x205: V122 = AND 0xffffffffffffffffffffffffffffffffffffffff V120
0x207: V123 = 0x20
0x209: V124 = ADD 0x20 0x4
0x20e: V125 = CALLDATALOAD 0x24
0x210: V126 = 0x20
0x212: V127 = ADD 0x20 0x24
0x218: V128 = 0x4af
0x21b: THROW 
0x21c: JUMPDEST 
0x21d: STOP 
0x21e: JUMPDEST 
0x21f: V129 = CALLVALUE
0x220: V130 = ISZERO V129
0x221: V131 = 0x1f4
0x224: THROWI V130
---
Entry stack: []
Stack pops: 0
Stack additions: [V125, V122, 0x1e7]
Exit stack: []

================================

Block 0x225
[0x225:0x266]
---
Predecessors: [0x1e3]
Successors: [0x267]
---
0x225 PUSH1 0x0
0x227 DUP1
0x228 REVERT
0x229 JUMPDEST
0x22a PUSH2 0x229
0x22d PUSH1 0x4
0x22f DUP1
0x230 DUP1
0x231 CALLDATALOAD
0x232 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x247 AND
0x248 SWAP1
0x249 PUSH1 0x20
0x24b ADD
0x24c SWAP1
0x24d SWAP2
0x24e SWAP1
0x24f DUP1
0x250 CALLDATALOAD
0x251 SWAP1
0x252 PUSH1 0x20
0x254 ADD
0x255 SWAP1
0x256 SWAP2
0x257 SWAP1
0x258 POP
0x259 POP
0x25a PUSH2 0x6a3
0x25d JUMP
0x25e JUMPDEST
0x25f STOP
0x260 JUMPDEST
0x261 CALLVALUE
0x262 ISZERO
0x263 PUSH2 0x236
0x266 JUMPI
---
0x225: V132 = 0x0
0x228: REVERT 0x0 0x0
0x229: JUMPDEST 
0x22a: V133 = 0x229
0x22d: V134 = 0x4
0x231: V135 = CALLDATALOAD 0x4
0x232: V136 = 0xffffffffffffffffffffffffffffffffffffffff
0x247: V137 = AND 0xffffffffffffffffffffffffffffffffffffffff V135
0x249: V138 = 0x20
0x24b: V139 = ADD 0x20 0x4
0x250: V140 = CALLDATALOAD 0x24
0x252: V141 = 0x20
0x254: V142 = ADD 0x20 0x24
0x25a: V143 = 0x6a3
0x25d: THROW 
0x25e: JUMPDEST 
0x25f: STOP 
0x260: JUMPDEST 
0x261: V144 = CALLVALUE
0x262: V145 = ISZERO V144
0x263: V146 = 0x236
0x266: THROWI V145
---
Entry stack: []
Stack pops: 0
Stack additions: [V140, V137, 0x229]
Exit stack: []

================================

Block 0x267
[0x267:0x2b3]
---
Predecessors: [0x225]
Successors: [0x2b4]
---
0x267 PUSH1 0x0
0x269 DUP1
0x26a REVERT
0x26b JUMPDEST
0x26c PUSH2 0x262
0x26f PUSH1 0x4
0x271 DUP1
0x272 DUP1
0x273 CALLDATALOAD
0x274 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x289 AND
0x28a SWAP1
0x28b PUSH1 0x20
0x28d ADD
0x28e SWAP1
0x28f SWAP2
0x290 SWAP1
0x291 POP
0x292 POP
0x293 PUSH2 0x813
0x296 JUMP
0x297 JUMPDEST
0x298 PUSH1 0x40
0x29a MLOAD
0x29b DUP1
0x29c DUP3
0x29d DUP2
0x29e MSTORE
0x29f PUSH1 0x20
0x2a1 ADD
0x2a2 SWAP2
0x2a3 POP
0x2a4 POP
0x2a5 PUSH1 0x40
0x2a7 MLOAD
0x2a8 DUP1
0x2a9 SWAP2
0x2aa SUB
0x2ab SWAP1
0x2ac RETURN
0x2ad JUMPDEST
0x2ae CALLVALUE
0x2af ISZERO
0x2b0 PUSH2 0x283
0x2b3 JUMPI
---
0x267: V147 = 0x0
0x26a: REVERT 0x0 0x0
0x26b: JUMPDEST 
0x26c: V148 = 0x262
0x26f: V149 = 0x4
0x273: V150 = CALLDATALOAD 0x4
0x274: V151 = 0xffffffffffffffffffffffffffffffffffffffff
0x289: V152 = AND 0xffffffffffffffffffffffffffffffffffffffff V150
0x28b: V153 = 0x20
0x28d: V154 = ADD 0x20 0x4
0x293: V155 = 0x813
0x296: THROW 
0x297: JUMPDEST 
0x298: V156 = 0x40
0x29a: V157 = M[0x40]
0x29e: M[V157] = S0
0x29f: V158 = 0x20
0x2a1: V159 = ADD 0x20 V157
0x2a5: V160 = 0x40
0x2a7: V161 = M[0x40]
0x2aa: V162 = SUB V159 V161
0x2ac: RETURN V161 V162
0x2ad: JUMPDEST 
0x2ae: V163 = CALLVALUE
0x2af: V164 = ISZERO V163
0x2b0: V165 = 0x283
0x2b3: THROWI V164
---
Entry stack: []
Stack pops: 0
Stack additions: [V152, 0x262]
Exit stack: []

================================

Block 0x2b4
[0x2b4:0x300]
---
Predecessors: [0x267]
Successors: [0x301]
---
0x2b4 PUSH1 0x0
0x2b6 DUP1
0x2b7 REVERT
0x2b8 JUMPDEST
0x2b9 PUSH2 0x2af
0x2bc PUSH1 0x4
0x2be DUP1
0x2bf DUP1
0x2c0 CALLDATALOAD
0x2c1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d6 AND
0x2d7 SWAP1
0x2d8 PUSH1 0x20
0x2da ADD
0x2db SWAP1
0x2dc SWAP2
0x2dd SWAP1
0x2de POP
0x2df POP
0x2e0 PUSH2 0x82b
0x2e3 JUMP
0x2e4 JUMPDEST
0x2e5 PUSH1 0x40
0x2e7 MLOAD
0x2e8 DUP1
0x2e9 DUP3
0x2ea DUP2
0x2eb MSTORE
0x2ec PUSH1 0x20
0x2ee ADD
0x2ef SWAP2
0x2f0 POP
0x2f1 POP
0x2f2 PUSH1 0x40
0x2f4 MLOAD
0x2f5 DUP1
0x2f6 SWAP2
0x2f7 SUB
0x2f8 SWAP1
0x2f9 RETURN
0x2fa JUMPDEST
0x2fb CALLVALUE
0x2fc ISZERO
0x2fd PUSH2 0x2d0
0x300 JUMPI
---
0x2b4: V166 = 0x0
0x2b7: REVERT 0x0 0x0
0x2b8: JUMPDEST 
0x2b9: V167 = 0x2af
0x2bc: V168 = 0x4
0x2c0: V169 = CALLDATALOAD 0x4
0x2c1: V170 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d6: V171 = AND 0xffffffffffffffffffffffffffffffffffffffff V169
0x2d8: V172 = 0x20
0x2da: V173 = ADD 0x20 0x4
0x2e0: V174 = 0x82b
0x2e3: THROW 
0x2e4: JUMPDEST 
0x2e5: V175 = 0x40
0x2e7: V176 = M[0x40]
0x2eb: M[V176] = S0
0x2ec: V177 = 0x20
0x2ee: V178 = ADD 0x20 V176
0x2f2: V179 = 0x40
0x2f4: V180 = M[0x40]
0x2f7: V181 = SUB V178 V180
0x2f9: RETURN V180 V181
0x2fa: JUMPDEST 
0x2fb: V182 = CALLVALUE
0x2fc: V183 = ISZERO V182
0x2fd: V184 = 0x2d0
0x300: THROWI V183
---
Entry stack: []
Stack pops: 0
Stack additions: [V171, 0x2af]
Exit stack: []

================================

Block 0x301
[0x301:0x30c]
---
Predecessors: [0x2b4]
Successors: [0x843]
---
0x301 PUSH1 0x0
0x303 DUP1
0x304 REVERT
0x305 JUMPDEST
0x306 PUSH2 0x2d8
0x309 PUSH2 0x843
0x30c JUMP
---
0x301: V185 = 0x0
0x304: REVERT 0x0 0x0
0x305: JUMPDEST 
0x306: V186 = 0x2d8
0x309: V187 = 0x843
0x30c: JUMP 0x843
---
Entry stack: []
Stack pops: 0
Stack additions: [0x2d8]
Exit stack: []

================================

Block 0x30d
[0x30d:0x355]
---
Predecessors: []
Successors: [0x356]
---
0x30d JUMPDEST
0x30e PUSH1 0x40
0x310 MLOAD
0x311 DUP1
0x312 DUP3
0x313 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x328 AND
0x329 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x33e AND
0x33f DUP2
0x340 MSTORE
0x341 PUSH1 0x20
0x343 ADD
0x344 SWAP2
0x345 POP
0x346 POP
0x347 PUSH1 0x40
0x349 MLOAD
0x34a DUP1
0x34b SWAP2
0x34c SUB
0x34d SWAP1
0x34e RETURN
0x34f JUMPDEST
0x350 CALLVALUE
0x351 ISZERO
0x352 PUSH2 0x325
0x355 JUMPI
---
0x30d: JUMPDEST 
0x30e: V188 = 0x40
0x310: V189 = M[0x40]
0x313: V190 = 0xffffffffffffffffffffffffffffffffffffffff
0x328: V191 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x329: V192 = 0xffffffffffffffffffffffffffffffffffffffff
0x33e: V193 = AND 0xffffffffffffffffffffffffffffffffffffffff V191
0x340: M[V189] = V193
0x341: V194 = 0x20
0x343: V195 = ADD 0x20 V189
0x347: V196 = 0x40
0x349: V197 = M[0x40]
0x34c: V198 = SUB V195 V197
0x34e: RETURN V197 V198
0x34f: JUMPDEST 
0x350: V199 = CALLVALUE
0x351: V200 = ISZERO V199
0x352: V201 = 0x325
0x355: THROWI V200
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x356
[0x356:0x37e]
---
Predecessors: [0x30d]
Successors: [0x37f]
---
0x356 PUSH1 0x0
0x358 DUP1
0x359 REVERT
0x35a JUMPDEST
0x35b PUSH2 0x32d
0x35e PUSH2 0x869
0x361 JUMP
0x362 JUMPDEST
0x363 PUSH1 0x40
0x365 MLOAD
0x366 DUP1
0x367 DUP3
0x368 DUP2
0x369 MSTORE
0x36a PUSH1 0x20
0x36c ADD
0x36d SWAP2
0x36e POP
0x36f POP
0x370 PUSH1 0x40
0x372 MLOAD
0x373 DUP1
0x374 SWAP2
0x375 SUB
0x376 SWAP1
0x377 RETURN
0x378 JUMPDEST
0x379 CALLVALUE
0x37a ISZERO
0x37b PUSH2 0x34e
0x37e JUMPI
---
0x356: V202 = 0x0
0x359: REVERT 0x0 0x0
0x35a: JUMPDEST 
0x35b: V203 = 0x32d
0x35e: V204 = 0x869
0x361: THROW 
0x362: JUMPDEST 
0x363: V205 = 0x40
0x365: V206 = M[0x40]
0x369: M[V206] = S0
0x36a: V207 = 0x20
0x36c: V208 = ADD 0x20 V206
0x370: V209 = 0x40
0x372: V210 = M[0x40]
0x375: V211 = SUB V208 V210
0x377: RETURN V210 V211
0x378: JUMPDEST 
0x379: V212 = CALLVALUE
0x37a: V213 = ISZERO V212
0x37b: V214 = 0x34e
0x37e: THROWI V213
---
Entry stack: []
Stack pops: 0
Stack additions: [0x32d]
Exit stack: []

================================

Block 0x37f
[0x37f:0x3d4]
---
Predecessors: [0x356]
Successors: [0x3d5]
---
0x37f PUSH1 0x0
0x381 DUP1
0x382 REVERT
0x383 JUMPDEST
0x384 PUSH2 0x383
0x387 PUSH1 0x4
0x389 DUP1
0x38a DUP1
0x38b CALLDATALOAD
0x38c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a1 AND
0x3a2 SWAP1
0x3a3 PUSH1 0x20
0x3a5 ADD
0x3a6 SWAP1
0x3a7 SWAP2
0x3a8 SWAP1
0x3a9 DUP1
0x3aa CALLDATALOAD
0x3ab SWAP1
0x3ac PUSH1 0x20
0x3ae ADD
0x3af SWAP1
0x3b0 SWAP2
0x3b1 SWAP1
0x3b2 POP
0x3b3 POP
0x3b4 PUSH2 0x888
0x3b7 JUMP
0x3b8 JUMPDEST
0x3b9 PUSH1 0x40
0x3bb MLOAD
0x3bc DUP1
0x3bd DUP3
0x3be DUP2
0x3bf MSTORE
0x3c0 PUSH1 0x20
0x3c2 ADD
0x3c3 SWAP2
0x3c4 POP
0x3c5 POP
0x3c6 PUSH1 0x40
0x3c8 MLOAD
0x3c9 DUP1
0x3ca SWAP2
0x3cb SUB
0x3cc SWAP1
0x3cd RETURN
0x3ce JUMPDEST
0x3cf CALLVALUE
0x3d0 ISZERO
0x3d1 PUSH2 0x3a4
0x3d4 JUMPI
---
0x37f: V215 = 0x0
0x382: REVERT 0x0 0x0
0x383: JUMPDEST 
0x384: V216 = 0x383
0x387: V217 = 0x4
0x38b: V218 = CALLDATALOAD 0x4
0x38c: V219 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a1: V220 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0x3a3: V221 = 0x20
0x3a5: V222 = ADD 0x20 0x4
0x3aa: V223 = CALLDATALOAD 0x24
0x3ac: V224 = 0x20
0x3ae: V225 = ADD 0x20 0x24
0x3b4: V226 = 0x888
0x3b7: THROW 
0x3b8: JUMPDEST 
0x3b9: V227 = 0x40
0x3bb: V228 = M[0x40]
0x3bf: M[V228] = S0
0x3c0: V229 = 0x20
0x3c2: V230 = ADD 0x20 V228
0x3c6: V231 = 0x40
0x3c8: V232 = M[0x40]
0x3cb: V233 = SUB V230 V232
0x3cd: RETURN V232 V233
0x3ce: JUMPDEST 
0x3cf: V234 = CALLVALUE
0x3d0: V235 = ISZERO V234
0x3d1: V236 = 0x3a4
0x3d4: THROWI V235
---
Entry stack: []
Stack pops: 0
Stack additions: [V223, V220, 0x383]
Exit stack: []

================================

Block 0x3d5
[0x3d5:0x429]
---
Predecessors: [0x37f]
Successors: [0x42a]
---
0x3d5 PUSH1 0x0
0x3d7 DUP1
0x3d8 REVERT
0x3d9 JUMPDEST
0x3da PUSH2 0x3ac
0x3dd PUSH2 0x8e0
0x3e0 JUMP
0x3e1 JUMPDEST
0x3e2 PUSH1 0x40
0x3e4 MLOAD
0x3e5 DUP1
0x3e6 DUP3
0x3e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3fc AND
0x3fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x412 AND
0x413 DUP2
0x414 MSTORE
0x415 PUSH1 0x20
0x417 ADD
0x418 SWAP2
0x419 POP
0x41a POP
0x41b PUSH1 0x40
0x41d MLOAD
0x41e DUP1
0x41f SWAP2
0x420 SUB
0x421 SWAP1
0x422 RETURN
0x423 JUMPDEST
0x424 CALLVALUE
0x425 ISZERO
0x426 PUSH2 0x3f9
0x429 JUMPI
---
0x3d5: V237 = 0x0
0x3d8: REVERT 0x0 0x0
0x3d9: JUMPDEST 
0x3da: V238 = 0x3ac
0x3dd: V239 = 0x8e0
0x3e0: THROW 
0x3e1: JUMPDEST 
0x3e2: V240 = 0x40
0x3e4: V241 = M[0x40]
0x3e7: V242 = 0xffffffffffffffffffffffffffffffffffffffff
0x3fc: V243 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x3fd: V244 = 0xffffffffffffffffffffffffffffffffffffffff
0x412: V245 = AND 0xffffffffffffffffffffffffffffffffffffffff V243
0x414: M[V241] = V245
0x415: V246 = 0x20
0x417: V247 = ADD 0x20 V241
0x41b: V248 = 0x40
0x41d: V249 = M[0x40]
0x420: V250 = SUB V247 V249
0x422: RETURN V249 V250
0x423: JUMPDEST 
0x424: V251 = CALLVALUE
0x425: V252 = ISZERO V251
0x426: V253 = 0x3f9
0x429: THROWI V252
---
Entry stack: []
Stack pops: 0
Stack additions: [0x3ac]
Exit stack: []

================================

Block 0x42a
[0x42a:0x477]
---
Predecessors: [0x3d5]
Successors: [0x90c]
---
0x42a PUSH1 0x0
0x42c DUP1
0x42d REVERT
0x42e JUMPDEST
0x42f PUSH2 0x401
0x432 PUSH2 0x906
0x435 JUMP
0x436 JUMPDEST
0x437 PUSH1 0x40
0x439 MLOAD
0x43a DUP1
0x43b DUP3
0x43c DUP2
0x43d MSTORE
0x43e PUSH1 0x20
0x440 ADD
0x441 SWAP2
0x442 POP
0x443 POP
0x444 PUSH1 0x40
0x446 MLOAD
0x447 DUP1
0x448 SWAP2
0x449 SUB
0x44a SWAP1
0x44b RETURN
0x44c JUMPDEST
0x44d PUSH2 0x443
0x450 PUSH1 0x4
0x452 DUP1
0x453 DUP1
0x454 CALLDATALOAD
0x455 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x46a AND
0x46b SWAP1
0x46c PUSH1 0x20
0x46e ADD
0x46f SWAP1
0x470 SWAP2
0x471 SWAP1
0x472 POP
0x473 POP
0x474 PUSH2 0x90c
0x477 JUMP
---
0x42a: V254 = 0x0
0x42d: REVERT 0x0 0x0
0x42e: JUMPDEST 
0x42f: V255 = 0x401
0x432: V256 = 0x906
0x435: THROW 
0x436: JUMPDEST 
0x437: V257 = 0x40
0x439: V258 = M[0x40]
0x43d: M[V258] = S0
0x43e: V259 = 0x20
0x440: V260 = ADD 0x20 V258
0x444: V261 = 0x40
0x446: V262 = M[0x40]
0x449: V263 = SUB V260 V262
0x44b: RETURN V262 V263
0x44c: JUMPDEST 
0x44d: V264 = 0x443
0x450: V265 = 0x4
0x454: V266 = CALLDATALOAD 0x4
0x455: V267 = 0xffffffffffffffffffffffffffffffffffffffff
0x46a: V268 = AND 0xffffffffffffffffffffffffffffffffffffffff V266
0x46c: V269 = 0x20
0x46e: V270 = ADD 0x20 0x4
0x474: V271 = 0x90c
0x477: JUMP 0x90c
---
Entry stack: []
Stack pops: 0
Stack additions: [0x401, V268, 0x443]
Exit stack: []

================================

Block 0x478
[0x478:0x53a]
---
Predecessors: []
Successors: [0x53b]
---
0x478 JUMPDEST
0x479 STOP
0x47a JUMPDEST
0x47b PUSH1 0x1
0x47d PUSH1 0x0
0x47f SWAP1
0x480 SLOAD
0x481 SWAP1
0x482 PUSH2 0x100
0x485 EXP
0x486 SWAP1
0x487 DIV
0x488 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x49d AND
0x49e DUP2
0x49f JUMP
0x4a0 JUMPDEST
0x4a1 DUP1
0x4a2 PUSH1 0x2
0x4a4 PUSH1 0x0
0x4a6 PUSH2 0x100
0x4a9 EXP
0x4aa DUP2
0x4ab SLOAD
0x4ac DUP2
0x4ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c2 MUL
0x4c3 NOT
0x4c4 AND
0x4c5 SWAP1
0x4c6 DUP4
0x4c7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4dc AND
0x4dd MUL
0x4de OR
0x4df SWAP1
0x4e0 SSTORE
0x4e1 POP
0x4e2 POP
0x4e3 JUMP
0x4e4 JUMPDEST
0x4e5 PUSH1 0x1
0x4e7 PUSH1 0x0
0x4e9 SWAP1
0x4ea SLOAD
0x4eb SWAP1
0x4ec PUSH2 0x100
0x4ef EXP
0x4f0 SWAP1
0x4f1 DIV
0x4f2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x507 AND
0x508 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x51d AND
0x51e CALLER
0x51f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x534 AND
0x535 EQ
0x536 DUP1
0x537 PUSH2 0x557
0x53a JUMPI
---
0x478: JUMPDEST 
0x479: STOP 
0x47a: JUMPDEST 
0x47b: V272 = 0x1
0x47d: V273 = 0x0
0x480: V274 = S[0x1]
0x482: V275 = 0x100
0x485: V276 = EXP 0x100 0x0
0x487: V277 = DIV V274 0x1
0x488: V278 = 0xffffffffffffffffffffffffffffffffffffffff
0x49d: V279 = AND 0xffffffffffffffffffffffffffffffffffffffff V277
0x49f: JUMP S0
0x4a0: JUMPDEST 
0x4a2: V280 = 0x2
0x4a4: V281 = 0x0
0x4a6: V282 = 0x100
0x4a9: V283 = EXP 0x100 0x0
0x4ab: V284 = S[0x2]
0x4ad: V285 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c2: V286 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x4c3: V287 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x4c4: V288 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V284
0x4c7: V289 = 0xffffffffffffffffffffffffffffffffffffffff
0x4dc: V290 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x4dd: V291 = MUL V290 0x1
0x4de: V292 = OR V291 V288
0x4e0: S[0x2] = V292
0x4e3: JUMP S1
0x4e4: JUMPDEST 
0x4e5: V293 = 0x1
0x4e7: V294 = 0x0
0x4ea: V295 = S[0x1]
0x4ec: V296 = 0x100
0x4ef: V297 = EXP 0x100 0x0
0x4f1: V298 = DIV V295 0x1
0x4f2: V299 = 0xffffffffffffffffffffffffffffffffffffffff
0x507: V300 = AND 0xffffffffffffffffffffffffffffffffffffffff V298
0x508: V301 = 0xffffffffffffffffffffffffffffffffffffffff
0x51d: V302 = AND 0xffffffffffffffffffffffffffffffffffffffff V300
0x51e: V303 = CALLER
0x51f: V304 = 0xffffffffffffffffffffffffffffffffffffffff
0x534: V305 = AND 0xffffffffffffffffffffffffffffffffffffffff V303
0x535: V306 = EQ V305 V302
0x537: V307 = 0x557
0x53a: THROWI V306
---
Entry stack: []
Stack pops: 0
Stack additions: [V279, S0, V306]
Exit stack: []

================================

Block 0x53b
[0x53b:0x58b]
---
Predecessors: [0x478]
Successors: [0x58c]
---
0x53b POP
0x53c PUSH1 0x0
0x53e DUP1
0x53f SWAP1
0x540 SLOAD
0x541 SWAP1
0x542 PUSH2 0x100
0x545 EXP
0x546 SWAP1
0x547 DIV
0x548 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x55d AND
0x55e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x573 AND
0x574 CALLER
0x575 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x58a AND
0x58b EQ
---
0x53c: V308 = 0x0
0x540: V309 = S[0x0]
0x542: V310 = 0x100
0x545: V311 = EXP 0x100 0x0
0x547: V312 = DIV V309 0x1
0x548: V313 = 0xffffffffffffffffffffffffffffffffffffffff
0x55d: V314 = AND 0xffffffffffffffffffffffffffffffffffffffff V312
0x55e: V315 = 0xffffffffffffffffffffffffffffffffffffffff
0x573: V316 = AND 0xffffffffffffffffffffffffffffffffffffffff V314
0x574: V317 = CALLER
0x575: V318 = 0xffffffffffffffffffffffffffffffffffffffff
0x58a: V319 = AND 0xffffffffffffffffffffffffffffffffffffffff V317
0x58b: V320 = EQ V319 V316
---
Entry stack: [V306]
Stack pops: 1
Stack additions: [V320]
Exit stack: [V320]

================================

Block 0x58c
[0x58c:0x591]
---
Predecessors: [0x53b]
Successors: [0x592]
---
0x58c JUMPDEST
0x58d DUP1
0x58e PUSH2 0x5af
0x591 JUMPI
---
0x58c: JUMPDEST 
0x58e: V321 = 0x5af
0x591: THROWI V320
---
Entry stack: [V320]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V320]

================================

Block 0x592
[0x592:0x5e3]
---
Predecessors: [0x58c]
Successors: [0x5e4]
---
0x592 POP
0x593 PUSH1 0x3
0x595 PUSH1 0x0
0x597 SWAP1
0x598 SLOAD
0x599 SWAP1
0x59a PUSH2 0x100
0x59d EXP
0x59e SWAP1
0x59f DIV
0x5a0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5b5 AND
0x5b6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5cb AND
0x5cc CALLER
0x5cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5e2 AND
0x5e3 EQ
---
0x593: V322 = 0x3
0x595: V323 = 0x0
0x598: V324 = S[0x3]
0x59a: V325 = 0x100
0x59d: V326 = EXP 0x100 0x0
0x59f: V327 = DIV V324 0x1
0x5a0: V328 = 0xffffffffffffffffffffffffffffffffffffffff
0x5b5: V329 = AND 0xffffffffffffffffffffffffffffffffffffffff V327
0x5b6: V330 = 0xffffffffffffffffffffffffffffffffffffffff
0x5cb: V331 = AND 0xffffffffffffffffffffffffffffffffffffffff V329
0x5cc: V332 = CALLER
0x5cd: V333 = 0xffffffffffffffffffffffffffffffffffffffff
0x5e2: V334 = AND 0xffffffffffffffffffffffffffffffffffffffff V332
0x5e3: V335 = EQ V334 V331
---
Entry stack: [V320]
Stack pops: 1
Stack additions: [V335]
Exit stack: [V335]

================================

Block 0x5e4
[0x5e4:0x5e9]
---
Predecessors: [0x592]
Successors: [0x5ea]
---
0x5e4 JUMPDEST
0x5e5 ISZERO
0x5e6 PUSH2 0x69f
0x5e9 JUMPI
---
0x5e4: JUMPDEST 
0x5e5: V336 = ISZERO V335
0x5e6: V337 = 0x69f
0x5e9: THROWI V336
---
Entry stack: [V335]
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x5ea
[0x5ea:0x631]
---
Predecessors: [0x5e4]
Successors: [0x632]
---
0x5ea PUSH1 0x0
0x5ec PUSH1 0x5
0x5ee PUSH1 0x0
0x5f0 DUP5
0x5f1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x606 AND
0x607 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x61c AND
0x61d DUP2
0x61e MSTORE
0x61f PUSH1 0x20
0x621 ADD
0x622 SWAP1
0x623 DUP2
0x624 MSTORE
0x625 PUSH1 0x20
0x627 ADD
0x628 PUSH1 0x0
0x62a SHA3
0x62b SLOAD
0x62c GT
0x62d ISZERO
0x62e PUSH2 0x69e
0x631 JUMPI
---
0x5ea: V338 = 0x0
0x5ec: V339 = 0x5
0x5ee: V340 = 0x0
0x5f1: V341 = 0xffffffffffffffffffffffffffffffffffffffff
0x606: V342 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x607: V343 = 0xffffffffffffffffffffffffffffffffffffffff
0x61c: V344 = AND 0xffffffffffffffffffffffffffffffffffffffff V342
0x61e: M[0x0] = V344
0x61f: V345 = 0x20
0x621: V346 = ADD 0x20 0x0
0x624: M[0x20] = 0x5
0x625: V347 = 0x20
0x627: V348 = ADD 0x20 0x20
0x628: V349 = 0x0
0x62a: V350 = SHA3 0x0 0x40
0x62b: V351 = S[V350]
0x62c: V352 = GT V351 0x0
0x62d: V353 = ISZERO V352
0x62e: V354 = 0x69e
0x631: THROWI V353
---
Entry stack: []
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [S1, S0]

================================

Block 0x632
[0x632:0x6d2]
---
Predecessors: [0x5ea]
Successors: [0x6d3]
---
0x632 DUP2
0x633 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x648 AND
0x649 PUSH2 0x8fc
0x64c DUP3
0x64d SWAP1
0x64e DUP2
0x64f ISZERO
0x650 MUL
0x651 SWAP1
0x652 PUSH1 0x40
0x654 MLOAD
0x655 PUSH1 0x0
0x657 PUSH1 0x40
0x659 MLOAD
0x65a DUP1
0x65b DUP4
0x65c SUB
0x65d DUP2
0x65e DUP6
0x65f DUP9
0x660 DUP9
0x661 CALL
0x662 SWAP4
0x663 POP
0x664 POP
0x665 POP
0x666 POP
0x667 POP
0x668 PUSH32 0xe3987e0dbdbf4e59549b9a515a30f3b915efabc9a33f465a6da4db771831efaf
0x689 DUP3
0x68a DUP3
0x68b PUSH1 0x40
0x68d MLOAD
0x68e DUP1
0x68f DUP4
0x690 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a5 AND
0x6a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6bb AND
0x6bc DUP2
0x6bd MSTORE
0x6be PUSH1 0x20
0x6c0 ADD
0x6c1 DUP3
0x6c2 DUP2
0x6c3 MSTORE
0x6c4 PUSH1 0x20
0x6c6 ADD
0x6c7 SWAP3
0x6c8 POP
0x6c9 POP
0x6ca POP
0x6cb PUSH1 0x40
0x6cd MLOAD
0x6ce DUP1
0x6cf SWAP2
0x6d0 SUB
0x6d1 SWAP1
0x6d2 LOG1
---
0x633: V355 = 0xffffffffffffffffffffffffffffffffffffffff
0x648: V356 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x649: V357 = 0x8fc
0x64f: V358 = ISZERO S0
0x650: V359 = MUL V358 0x8fc
0x652: V360 = 0x40
0x654: V361 = M[0x40]
0x655: V362 = 0x0
0x657: V363 = 0x40
0x659: V364 = M[0x40]
0x65c: V365 = SUB V361 V364
0x661: V366 = CALL V359 V356 S0 V364 V365 V364 0x0
0x668: V367 = 0xe3987e0dbdbf4e59549b9a515a30f3b915efabc9a33f465a6da4db771831efaf
0x68b: V368 = 0x40
0x68d: V369 = M[0x40]
0x690: V370 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a5: V371 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x6a6: V372 = 0xffffffffffffffffffffffffffffffffffffffff
0x6bb: V373 = AND 0xffffffffffffffffffffffffffffffffffffffff V371
0x6bd: M[V369] = V373
0x6be: V374 = 0x20
0x6c0: V375 = ADD 0x20 V369
0x6c3: M[V375] = S0
0x6c4: V376 = 0x20
0x6c6: V377 = ADD 0x20 V375
0x6cb: V378 = 0x40
0x6cd: V379 = M[0x40]
0x6d0: V380 = SUB V377 V379
0x6d2: LOG V379 V380 0xe3987e0dbdbf4e59549b9a515a30f3b915efabc9a33f465a6da4db771831efaf
---
Entry stack: [S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [S1, S0]

================================

Block 0x6d3
[0x6d3:0x6d3]
---
Predecessors: [0x632]
Successors: [0x6d4]
---
0x6d3 JUMPDEST
---
0x6d3: JUMPDEST 
---
Entry stack: [S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [S1, S0]

================================

Block 0x6d4
[0x6d4:0x730]
---
Predecessors: [0x6d3]
Successors: [0x731]
---
0x6d4 JUMPDEST
0x6d5 POP
0x6d6 POP
0x6d7 JUMP
0x6d8 JUMPDEST
0x6d9 PUSH1 0x0
0x6db PUSH1 0x1
0x6dd PUSH1 0x0
0x6df SWAP1
0x6e0 SLOAD
0x6e1 SWAP1
0x6e2 PUSH2 0x100
0x6e5 EXP
0x6e6 SWAP1
0x6e7 DIV
0x6e8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6fd AND
0x6fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x713 AND
0x714 CALLER
0x715 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x72a AND
0x72b EQ
0x72c DUP1
0x72d PUSH2 0x74d
0x730 JUMPI
---
0x6d4: JUMPDEST 
0x6d7: JUMP S2
0x6d8: JUMPDEST 
0x6d9: V381 = 0x0
0x6db: V382 = 0x1
0x6dd: V383 = 0x0
0x6e0: V384 = S[0x1]
0x6e2: V385 = 0x100
0x6e5: V386 = EXP 0x100 0x0
0x6e7: V387 = DIV V384 0x1
0x6e8: V388 = 0xffffffffffffffffffffffffffffffffffffffff
0x6fd: V389 = AND 0xffffffffffffffffffffffffffffffffffffffff V387
0x6fe: V390 = 0xffffffffffffffffffffffffffffffffffffffff
0x713: V391 = AND 0xffffffffffffffffffffffffffffffffffffffff V389
0x714: V392 = CALLER
0x715: V393 = 0xffffffffffffffffffffffffffffffffffffffff
0x72a: V394 = AND 0xffffffffffffffffffffffffffffffffffffffff V392
0x72b: V395 = EQ V394 V391
0x72d: V396 = 0x74d
0x730: THROWI V395
---
Entry stack: [S1, S0]
Stack pops: 6
Stack additions: [V395, 0x0]
Exit stack: []

================================

Block 0x731
[0x731:0x781]
---
Predecessors: [0x6d4]
Successors: [0x782]
---
0x731 POP
0x732 PUSH1 0x0
0x734 DUP1
0x735 SWAP1
0x736 SLOAD
0x737 SWAP1
0x738 PUSH2 0x100
0x73b EXP
0x73c SWAP1
0x73d DIV
0x73e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x753 AND
0x754 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x769 AND
0x76a CALLER
0x76b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x780 AND
0x781 EQ
---
0x732: V397 = 0x0
0x736: V398 = S[0x0]
0x738: V399 = 0x100
0x73b: V400 = EXP 0x100 0x0
0x73d: V401 = DIV V398 0x1
0x73e: V402 = 0xffffffffffffffffffffffffffffffffffffffff
0x753: V403 = AND 0xffffffffffffffffffffffffffffffffffffffff V401
0x754: V404 = 0xffffffffffffffffffffffffffffffffffffffff
0x769: V405 = AND 0xffffffffffffffffffffffffffffffffffffffff V403
0x76a: V406 = CALLER
0x76b: V407 = 0xffffffffffffffffffffffffffffffffffffffff
0x780: V408 = AND 0xffffffffffffffffffffffffffffffffffffffff V406
0x781: V409 = EQ V408 V405
---
Entry stack: [0x0, V395]
Stack pops: 1
Stack additions: [V409]
Exit stack: [0x0, V409]

================================

Block 0x782
[0x782:0x787]
---
Predecessors: [0x731]
Successors: [0x788]
---
0x782 JUMPDEST
0x783 DUP1
0x784 PUSH2 0x7a5
0x787 JUMPI
---
0x782: JUMPDEST 
0x784: V410 = 0x7a5
0x787: THROWI V409
---
Entry stack: [0x0, V409]
Stack pops: 1
Stack additions: [S0]
Exit stack: [0x0, V409]

================================

Block 0x788
[0x788:0x7d9]
---
Predecessors: [0x782]
Successors: [0x7da]
---
0x788 POP
0x789 PUSH1 0x3
0x78b PUSH1 0x0
0x78d SWAP1
0x78e SLOAD
0x78f SWAP1
0x790 PUSH2 0x100
0x793 EXP
0x794 SWAP1
0x795 DIV
0x796 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7ab AND
0x7ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7c1 AND
0x7c2 CALLER
0x7c3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7d8 AND
0x7d9 EQ
---
0x789: V411 = 0x3
0x78b: V412 = 0x0
0x78e: V413 = S[0x3]
0x790: V414 = 0x100
0x793: V415 = EXP 0x100 0x0
0x795: V416 = DIV V413 0x1
0x796: V417 = 0xffffffffffffffffffffffffffffffffffffffff
0x7ab: V418 = AND 0xffffffffffffffffffffffffffffffffffffffff V416
0x7ac: V419 = 0xffffffffffffffffffffffffffffffffffffffff
0x7c1: V420 = AND 0xffffffffffffffffffffffffffffffffffffffff V418
0x7c2: V421 = CALLER
0x7c3: V422 = 0xffffffffffffffffffffffffffffffffffffffff
0x7d8: V423 = AND 0xffffffffffffffffffffffffffffffffffffffff V421
0x7d9: V424 = EQ V423 V420
---
Entry stack: [0x0, V409]
Stack pops: 1
Stack additions: [V424]
Exit stack: [0x0, V424]

================================

Block 0x7da
[0x7da:0x7df]
---
Predecessors: [0x788]
Successors: [0x7e0]
---
0x7da JUMPDEST
0x7db ISZERO
0x7dc PUSH2 0x80e
0x7df JUMPI
---
0x7da: JUMPDEST 
0x7db: V425 = ISZERO V424
0x7dc: V426 = 0x80e
0x7df: THROWI V425
---
Entry stack: [0x0, V424]
Stack pops: 1
Stack additions: []
Exit stack: [0x0]

================================

Block 0x7e0
[0x7e0:0x842]
---
Predecessors: [0x7da]
Successors: [0x843]
---
0x7e0 PUSH2 0x7b4
0x7e3 DUP4
0x7e4 DUP4
0x7e5 PUSH2 0x888
0x7e8 JUMP
0x7e9 JUMPDEST
0x7ea SWAP1
0x7eb POP
0x7ec DUP1
0x7ed PUSH1 0x6
0x7ef PUSH1 0x0
0x7f1 DUP6
0x7f2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x807 AND
0x808 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x81d AND
0x81e DUP2
0x81f MSTORE
0x820 PUSH1 0x20
0x822 ADD
0x823 SWAP1
0x824 DUP2
0x825 MSTORE
0x826 PUSH1 0x20
0x828 ADD
0x829 PUSH1 0x0
0x82b SHA3
0x82c PUSH1 0x0
0x82e DUP3
0x82f DUP3
0x830 SLOAD
0x831 ADD
0x832 SWAP3
0x833 POP
0x834 POP
0x835 DUP2
0x836 SWAP1
0x837 SSTORE
0x838 POP
0x839 PUSH2 0x80d
0x83c DUP4
0x83d DUP3
0x83e PUSH2 0x4af
0x841 JUMP
0x842 JUMPDEST
---
0x7e0: V427 = 0x7b4
0x7e5: V428 = 0x888
0x7e8: THROW 
0x7e9: JUMPDEST 
0x7ed: V429 = 0x6
0x7ef: V430 = 0x0
0x7f2: V431 = 0xffffffffffffffffffffffffffffffffffffffff
0x807: V432 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x808: V433 = 0xffffffffffffffffffffffffffffffffffffffff
0x81d: V434 = AND 0xffffffffffffffffffffffffffffffffffffffff V432
0x81f: M[0x0] = V434
0x820: V435 = 0x20
0x822: V436 = ADD 0x20 0x0
0x825: M[0x20] = 0x6
0x826: V437 = 0x20
0x828: V438 = ADD 0x20 0x20
0x829: V439 = 0x0
0x82b: V440 = SHA3 0x0 0x40
0x82c: V441 = 0x0
0x830: V442 = S[V440]
0x831: V443 = ADD V442 S0
0x837: S[V440] = V443
0x839: V444 = 0x80d
0x83e: V445 = 0x4af
0x841: THROW 
0x842: JUMPDEST 
---
Entry stack: [0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, S0, S3, 0x80d]
Exit stack: []

================================

Block 0x843
[0x843:0x90a]
---
Predecessors: [0x301, 0x7e0]
Successors: [0x90b]
---
0x843 JUMPDEST
0x844 POP
0x845 POP
0x846 POP
0x847 JUMP
0x848 JUMPDEST
0x849 PUSH1 0x5
0x84b PUSH1 0x20
0x84d MSTORE
0x84e DUP1
0x84f PUSH1 0x0
0x851 MSTORE
0x852 PUSH1 0x40
0x854 PUSH1 0x0
0x856 SHA3
0x857 PUSH1 0x0
0x859 SWAP2
0x85a POP
0x85b SWAP1
0x85c POP
0x85d SLOAD
0x85e DUP2
0x85f JUMP
0x860 JUMPDEST
0x861 PUSH1 0x6
0x863 PUSH1 0x20
0x865 MSTORE
0x866 DUP1
0x867 PUSH1 0x0
0x869 MSTORE
0x86a PUSH1 0x40
0x86c PUSH1 0x0
0x86e SHA3
0x86f PUSH1 0x0
0x871 SWAP2
0x872 POP
0x873 SWAP1
0x874 POP
0x875 SLOAD
0x876 DUP2
0x877 JUMP
0x878 JUMPDEST
0x879 PUSH1 0x2
0x87b PUSH1 0x0
0x87d SWAP1
0x87e SLOAD
0x87f SWAP1
0x880 PUSH2 0x100
0x883 EXP
0x884 SWAP1
0x885 DIV
0x886 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x89b AND
0x89c DUP2
0x89d JUMP
0x89e JUMPDEST
0x89f PUSH1 0x0
0x8a1 ADDRESS
0x8a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8b7 AND
0x8b8 BALANCE
0x8b9 SWAP1
0x8ba POP
0x8bb SWAP1
0x8bc JUMP
0x8bd JUMPDEST
0x8be PUSH1 0x0
0x8c0 PUSH1 0x64
0x8c2 DUP3
0x8c3 PUSH1 0x5
0x8c5 PUSH1 0x0
0x8c7 DUP7
0x8c8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8dd AND
0x8de PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8f3 AND
0x8f4 DUP2
0x8f5 MSTORE
0x8f6 PUSH1 0x20
0x8f8 ADD
0x8f9 SWAP1
0x8fa DUP2
0x8fb MSTORE
0x8fc PUSH1 0x20
0x8fe ADD
0x8ff PUSH1 0x0
0x901 SHA3
0x902 SLOAD
0x903 MUL
0x904 DUP2
0x905 ISZERO
0x906 ISZERO
0x907 PUSH2 0x8d7
0x90a JUMPI
---
0x843: JUMPDEST 
0x847: JUMP S3
0x848: JUMPDEST 
0x849: V446 = 0x5
0x84b: V447 = 0x20
0x84d: M[0x20] = 0x5
0x84f: V448 = 0x0
0x851: M[0x0] = S0
0x852: V449 = 0x40
0x854: V450 = 0x0
0x856: V451 = SHA3 0x0 0x40
0x857: V452 = 0x0
0x85d: V453 = S[V451]
0x85f: JUMP S1
0x860: JUMPDEST 
0x861: V454 = 0x6
0x863: V455 = 0x20
0x865: M[0x20] = 0x6
0x867: V456 = 0x0
0x869: M[0x0] = S0
0x86a: V457 = 0x40
0x86c: V458 = 0x0
0x86e: V459 = SHA3 0x0 0x40
0x86f: V460 = 0x0
0x875: V461 = S[V459]
0x877: JUMP S1
0x878: JUMPDEST 
0x879: V462 = 0x2
0x87b: V463 = 0x0
0x87e: V464 = S[0x2]
0x880: V465 = 0x100
0x883: V466 = EXP 0x100 0x0
0x885: V467 = DIV V464 0x1
0x886: V468 = 0xffffffffffffffffffffffffffffffffffffffff
0x89b: V469 = AND 0xffffffffffffffffffffffffffffffffffffffff V467
0x89d: JUMP S0
0x89e: JUMPDEST 
0x89f: V470 = 0x0
0x8a1: V471 = ADDRESS
0x8a2: V472 = 0xffffffffffffffffffffffffffffffffffffffff
0x8b7: V473 = AND 0xffffffffffffffffffffffffffffffffffffffff V471
0x8b8: V474 = BALANCE V473
0x8bc: JUMP S0
0x8bd: JUMPDEST 
0x8be: V475 = 0x0
0x8c0: V476 = 0x64
0x8c3: V477 = 0x5
0x8c5: V478 = 0x0
0x8c8: V479 = 0xffffffffffffffffffffffffffffffffffffffff
0x8dd: V480 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x8de: V481 = 0xffffffffffffffffffffffffffffffffffffffff
0x8f3: V482 = AND 0xffffffffffffffffffffffffffffffffffffffff V480
0x8f5: M[0x0] = V482
0x8f6: V483 = 0x20
0x8f8: V484 = ADD 0x20 0x0
0x8fb: M[0x20] = 0x5
0x8fc: V485 = 0x20
0x8fe: V486 = ADD 0x20 0x20
0x8ff: V487 = 0x0
0x901: V488 = SHA3 0x0 0x40
0x902: V489 = S[V488]
0x903: V490 = MUL V489 S0
0x905: V491 = ISZERO 0x64
0x906: V492 = ISZERO 0x0
0x907: V493 = 0x8d7
0x90a: THROWI 0x1
---
Entry stack: [0x2d8]
Stack pops: 99
Stack additions: [V490, 0x64, 0x0, S0, S1]
Exit stack: []

================================

Block 0x90b
[0x90b:0x90b]
---
Predecessors: [0x843]
Successors: []
---
0x90b INVALID
---
0x90b: INVALID 
---
Entry stack: [S4, S3, 0x0, 0x64, V490]
Stack pops: 0
Stack additions: []
Exit stack: [S4, S3, 0x0, 0x64, V490]

================================

Block 0x90c
[0x90c:0x94e]
---
Predecessors: [0x42a]
Successors: [0x94f]
---
0x90c JUMPDEST
0x90d DIV
0x90e SWAP1
0x90f POP
0x910 SWAP3
0x911 SWAP2
0x912 POP
0x913 POP
0x914 JUMP
0x915 JUMPDEST
0x916 PUSH1 0x3
0x918 PUSH1 0x0
0x91a SWAP1
0x91b SLOAD
0x91c SWAP1
0x91d PUSH2 0x100
0x920 EXP
0x921 SWAP1
0x922 DIV
0x923 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x938 AND
0x939 DUP2
0x93a JUMP
0x93b JUMPDEST
0x93c PUSH1 0x4
0x93e SLOAD
0x93f DUP2
0x940 JUMP
0x941 JUMPDEST
0x942 PUSH1 0x0
0x944 PUSH1 0x4
0x946 SLOAD
0x947 CALLVALUE
0x948 LT
0x949 ISZERO
0x94a ISZERO
0x94b PUSH2 0x9d5
0x94e JUMPI
---
0x90c: JUMPDEST 
0x90d: V494 = DIV V268 0x443
0x914: JUMP S5
0x915: JUMPDEST 
0x916: V495 = 0x3
0x918: V496 = 0x0
0x91b: V497 = S[0x3]
0x91d: V498 = 0x100
0x920: V499 = EXP 0x100 0x0
0x922: V500 = DIV V497 0x1
0x923: V501 = 0xffffffffffffffffffffffffffffffffffffffff
0x938: V502 = AND 0xffffffffffffffffffffffffffffffffffffffff V500
0x93a: JUMP S0
0x93b: JUMPDEST 
0x93c: V503 = 0x4
0x93e: V504 = S[0x4]
0x940: JUMP S0
0x941: JUMPDEST 
0x942: V505 = 0x0
0x944: V506 = 0x4
0x946: V507 = S[0x4]
0x947: V508 = CALLVALUE
0x948: V509 = LT V508 V507
0x949: V510 = ISZERO V509
0x94a: V511 = ISZERO V510
0x94b: V512 = 0x9d5
0x94e: THROWI V511
---
Entry stack: [0x443, V268]
Stack pops: 38
Stack additions: [0x0]
Exit stack: []

================================

Block 0x94f
[0x94f:0xa09]
---
Predecessors: [0x90c]
Successors: [0xa0a]
---
0x94f CALLVALUE
0x950 SWAP1
0x951 POP
0x952 DUP1
0x953 PUSH1 0x5
0x955 PUSH1 0x0
0x957 DUP5
0x958 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x96d AND
0x96e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x983 AND
0x984 DUP2
0x985 MSTORE
0x986 PUSH1 0x20
0x988 ADD
0x989 SWAP1
0x98a DUP2
0x98b MSTORE
0x98c PUSH1 0x20
0x98e ADD
0x98f PUSH1 0x0
0x991 SHA3
0x992 PUSH1 0x0
0x994 DUP3
0x995 DUP3
0x996 SLOAD
0x997 ADD
0x998 SWAP3
0x999 POP
0x99a POP
0x99b DUP2
0x99c SWAP1
0x99d SSTORE
0x99e POP
0x99f PUSH32 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
0x9c0 DUP3
0x9c1 CALLVALUE
0x9c2 PUSH1 0x40
0x9c4 MLOAD
0x9c5 DUP1
0x9c6 DUP4
0x9c7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9dc AND
0x9dd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9f2 AND
0x9f3 DUP2
0x9f4 MSTORE
0x9f5 PUSH1 0x20
0x9f7 ADD
0x9f8 DUP3
0x9f9 DUP2
0x9fa MSTORE
0x9fb PUSH1 0x20
0x9fd ADD
0x9fe SWAP3
0x9ff POP
0xa00 POP
0xa01 POP
0xa02 PUSH1 0x40
0xa04 MLOAD
0xa05 DUP1
0xa06 SWAP2
0xa07 SUB
0xa08 SWAP1
0xa09 LOG1
---
0x94f: V513 = CALLVALUE
0x953: V514 = 0x5
0x955: V515 = 0x0
0x958: V516 = 0xffffffffffffffffffffffffffffffffffffffff
0x96d: V517 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x96e: V518 = 0xffffffffffffffffffffffffffffffffffffffff
0x983: V519 = AND 0xffffffffffffffffffffffffffffffffffffffff V517
0x985: M[0x0] = V519
0x986: V520 = 0x20
0x988: V521 = ADD 0x20 0x0
0x98b: M[0x20] = 0x5
0x98c: V522 = 0x20
0x98e: V523 = ADD 0x20 0x20
0x98f: V524 = 0x0
0x991: V525 = SHA3 0x0 0x40
0x992: V526 = 0x0
0x996: V527 = S[V525]
0x997: V528 = ADD V527 V513
0x99d: S[V525] = V528
0x99f: V529 = 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
0x9c1: V530 = CALLVALUE
0x9c2: V531 = 0x40
0x9c4: V532 = M[0x40]
0x9c7: V533 = 0xffffffffffffffffffffffffffffffffffffffff
0x9dc: V534 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x9dd: V535 = 0xffffffffffffffffffffffffffffffffffffffff
0x9f2: V536 = AND 0xffffffffffffffffffffffffffffffffffffffff V534
0x9f4: M[V532] = V536
0x9f5: V537 = 0x20
0x9f7: V538 = ADD 0x20 V532
0x9fa: M[V538] = V530
0x9fb: V539 = 0x20
0x9fd: V540 = ADD 0x20 V538
0xa02: V541 = 0x40
0xa04: V542 = M[0x40]
0xa07: V543 = SUB V540 V542
0xa09: LOG V542 V543 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
---
Entry stack: [0x0]
Stack pops: 2
Stack additions: [S1, V513]
Exit stack: [S0, V513]

================================

Block 0xa0a
[0xa0a:0xa84]
---
Predecessors: [0x94f]
Successors: []
---
0xa0a JUMPDEST
0xa0b POP
0xa0c POP
0xa0d JUMP
0xa0e JUMPDEST
0xa0f DUP1
0xa10 PUSH1 0x3
0xa12 PUSH1 0x0
0xa14 PUSH2 0x100
0xa17 EXP
0xa18 DUP2
0xa19 SLOAD
0xa1a DUP2
0xa1b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa30 MUL
0xa31 NOT
0xa32 AND
0xa33 SWAP1
0xa34 DUP4
0xa35 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa4a AND
0xa4b MUL
0xa4c OR
0xa4d SWAP1
0xa4e SSTORE
0xa4f POP
0xa50 POP
0xa51 JUMP
0xa52 STOP
0xa53 LOG1
0xa54 PUSH6 0x627a7a723058
0xa5b SHA3
0xa5c MISSING 0x29
0xa5d SHR
0xa5e MISSING 0xc3
0xa5f PUSH19 0x31bf71b15c0cd65b5698e7bbf57e972750a2b
0xa73 MISSING 0xc9
0xa74 MISSING 0xa6
0xa75 MISSING 0x21
0xa76 MISSING 0xd6
0xa77 MISSING 0x5d
0xa78 PUSH12 0xe30fc60029
---
0xa0a: JUMPDEST 
0xa0d: JUMP S2
0xa0e: JUMPDEST 
0xa10: V544 = 0x3
0xa12: V545 = 0x0
0xa14: V546 = 0x100
0xa17: V547 = EXP 0x100 0x0
0xa19: V548 = S[0x3]
0xa1b: V549 = 0xffffffffffffffffffffffffffffffffffffffff
0xa30: V550 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xa31: V551 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xa32: V552 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V548
0xa35: V553 = 0xffffffffffffffffffffffffffffffffffffffff
0xa4a: V554 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xa4b: V555 = MUL V554 0x1
0xa4c: V556 = OR V555 V552
0xa4e: S[0x3] = V556
0xa51: JUMP S1
0xa52: STOP 
0xa53: LOG S0 S1 S2
0xa54: V557 = 0x627a7a723058
0xa5b: V558 = SHA3 0x627a7a723058 S3
0xa5c: MISSING 0x29
0xa5d: V559 = SHR S0 S1
0xa5e: MISSING 0xc3
0xa5f: V560 = 0x31bf71b15c0cd65b5698e7bbf57e972750a2b
0xa73: MISSING 0xc9
0xa74: MISSING 0xa6
0xa75: MISSING 0x21
0xa76: MISSING 0xd6
0xa77: MISSING 0x5d
0xa78: V561 = 0xe30fc60029
---
Entry stack: [S1, V513]
Stack pops: 2960
Stack additions: [0xe30fc60029]
Exit stack: []

================================

Function 0:
Public fallback function
Entry block: 0xed
Exit block: 0x90b
Body: 0xed, 0xfb, 0x14b, 0x155, 0x1aa, 0x1e3, 0x225, 0x267, 0x2b4, 0x301, 0x843, 0x90b

