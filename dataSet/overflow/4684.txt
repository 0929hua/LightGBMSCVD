Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x51]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0xc0ee0b8a
0x3c EQ
0x3d PUSH2 0x51
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0xc0ee0b8a
0x3c: V13 = EQ 0xc0ee0b8a V11
0x3d: V14 = 0x51
0x40: JUMPI 0x51 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xe4]
---
0x41 DUP1
0x42 PUSH4 0xe5a912c7
0x47 EQ
0x48 PUSH2 0xe4
0x4b JUMPI
---
0x42: V15 = 0xe5a912c7
0x47: V16 = EQ 0xe5a912c7 V11
0x48: V17 = 0xe4
0x4b: JUMPI 0xe4 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x50]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d PUSH1 0x0
0x4f DUP1
0x50 REVERT
---
0x4c: JUMPDEST 
0x4d: V18 = 0x0
0x50: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x51
[0x51:0x58]
---
Predecessors: [0xd]
Successors: [0x59, 0x5d]
---
0x51 JUMPDEST
0x52 CALLVALUE
0x53 DUP1
0x54 ISZERO
0x55 PUSH2 0x5d
0x58 JUMPI
---
0x51: JUMPDEST 
0x52: V19 = CALLVALUE
0x54: V20 = ISZERO V19
0x55: V21 = 0x5d
0x58: JUMPI 0x5d V20
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V19]
Exit stack: [V11, V19]

================================

Block 0x59
[0x59:0x5c]
---
Predecessors: [0x51]
Successors: []
---
0x59 PUSH1 0x0
0x5b DUP1
0x5c REVERT
---
0x59: V22 = 0x0
0x5c: REVERT 0x0 0x0
---
Entry stack: [V11, V19]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V19]

================================

Block 0x5d
[0x5d:0xe1]
---
Predecessors: [0x51]
Successors: [0x13b]
---
0x5d JUMPDEST
0x5e POP
0x5f PUSH2 0xe2
0x62 PUSH1 0x4
0x64 DUP1
0x65 CALLDATASIZE
0x66 SUB
0x67 DUP2
0x68 ADD
0x69 SWAP1
0x6a DUP1
0x6b DUP1
0x6c CALLDATALOAD
0x6d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x82 AND
0x83 SWAP1
0x84 PUSH1 0x20
0x86 ADD
0x87 SWAP1
0x88 SWAP3
0x89 SWAP2
0x8a SWAP1
0x8b DUP1
0x8c CALLDATALOAD
0x8d SWAP1
0x8e PUSH1 0x20
0x90 ADD
0x91 SWAP1
0x92 SWAP3
0x93 SWAP2
0x94 SWAP1
0x95 DUP1
0x96 CALLDATALOAD
0x97 SWAP1
0x98 PUSH1 0x20
0x9a ADD
0x9b SWAP1
0x9c DUP3
0x9d ADD
0x9e DUP1
0x9f CALLDATALOAD
0xa0 SWAP1
0xa1 PUSH1 0x20
0xa3 ADD
0xa4 SWAP1
0xa5 DUP1
0xa6 DUP1
0xa7 PUSH1 0x1f
0xa9 ADD
0xaa PUSH1 0x20
0xac DUP1
0xad SWAP2
0xae DIV
0xaf MUL
0xb0 PUSH1 0x20
0xb2 ADD
0xb3 PUSH1 0x40
0xb5 MLOAD
0xb6 SWAP1
0xb7 DUP2
0xb8 ADD
0xb9 PUSH1 0x40
0xbb MSTORE
0xbc DUP1
0xbd SWAP4
0xbe SWAP3
0xbf SWAP2
0xc0 SWAP1
0xc1 DUP2
0xc2 DUP2
0xc3 MSTORE
0xc4 PUSH1 0x20
0xc6 ADD
0xc7 DUP4
0xc8 DUP4
0xc9 DUP1
0xca DUP3
0xcb DUP5
0xcc CALLDATACOPY
0xcd DUP3
0xce ADD
0xcf SWAP2
0xd0 POP
0xd1 POP
0xd2 POP
0xd3 POP
0xd4 POP
0xd5 POP
0xd6 SWAP2
0xd7 SWAP3
0xd8 SWAP2
0xd9 SWAP3
0xda SWAP1
0xdb POP
0xdc POP
0xdd POP
0xde PUSH2 0x13b
0xe1 JUMP
---
0x5d: JUMPDEST 
0x5f: V23 = 0xe2
0x62: V24 = 0x4
0x65: V25 = CALLDATASIZE
0x66: V26 = SUB V25 0x4
0x68: V27 = ADD 0x4 V26
0x6c: V28 = CALLDATALOAD 0x4
0x6d: V29 = 0xffffffffffffffffffffffffffffffffffffffff
0x82: V30 = AND 0xffffffffffffffffffffffffffffffffffffffff V28
0x84: V31 = 0x20
0x86: V32 = ADD 0x20 0x4
0x8c: V33 = CALLDATALOAD 0x24
0x8e: V34 = 0x20
0x90: V35 = ADD 0x20 0x24
0x96: V36 = CALLDATALOAD 0x44
0x98: V37 = 0x20
0x9a: V38 = ADD 0x20 0x44
0x9d: V39 = ADD 0x4 V36
0x9f: V40 = CALLDATALOAD V39
0xa1: V41 = 0x20
0xa3: V42 = ADD 0x20 V39
0xa7: V43 = 0x1f
0xa9: V44 = ADD 0x1f V40
0xaa: V45 = 0x20
0xae: V46 = DIV V44 0x20
0xaf: V47 = MUL V46 0x20
0xb0: V48 = 0x20
0xb2: V49 = ADD 0x20 V47
0xb3: V50 = 0x40
0xb5: V51 = M[0x40]
0xb8: V52 = ADD V51 V49
0xb9: V53 = 0x40
0xbb: M[0x40] = V52
0xc3: M[V51] = V40
0xc4: V54 = 0x20
0xc6: V55 = ADD 0x20 V51
0xcc: CALLDATACOPY V55 V42 V40
0xce: V56 = ADD V55 V40
0xde: V57 = 0x13b
0xe1: JUMP 0x13b
---
Entry stack: [V11, V19]
Stack pops: 1
Stack additions: [0xe2, V30, V33, V51]
Exit stack: [V11, 0xe2, V30, V33, V51]

================================

Block 0xe2
[0xe2:0xe3]
---
Predecessors: [0x1a2]
Successors: []
---
0xe2 JUMPDEST
0xe3 STOP
---
0xe2: JUMPDEST 
0xe3: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe4
[0xe4:0xeb]
---
Predecessors: [0x41]
Successors: [0xec, 0xf0]
---
0xe4 JUMPDEST
0xe5 CALLVALUE
0xe6 DUP1
0xe7 ISZERO
0xe8 PUSH2 0xf0
0xeb JUMPI
---
0xe4: JUMPDEST 
0xe5: V58 = CALLVALUE
0xe7: V59 = ISZERO V58
0xe8: V60 = 0xf0
0xeb: JUMPI 0xf0 V59
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V58]
Exit stack: [V11, V58]

================================

Block 0xec
[0xec:0xef]
---
Predecessors: [0xe4]
Successors: []
---
0xec PUSH1 0x0
0xee DUP1
0xef REVERT
---
0xec: V61 = 0x0
0xef: REVERT 0x0 0x0
---
Entry stack: [V11, V58]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V58]

================================

Block 0xf0
[0xf0:0xf8]
---
Predecessors: [0xe4]
Successors: [0x1a8]
---
0xf0 JUMPDEST
0xf1 POP
0xf2 PUSH2 0xf9
0xf5 PUSH2 0x1a8
0xf8 JUMP
---
0xf0: JUMPDEST 
0xf2: V62 = 0xf9
0xf5: V63 = 0x1a8
0xf8: JUMP 0x1a8
---
Entry stack: [V11, V58]
Stack pops: 1
Stack additions: [0xf9]
Exit stack: [V11, 0xf9]

================================

Block 0xf9
[0xf9:0x13a]
---
Predecessors: [0x1a8]
Successors: []
---
0xf9 JUMPDEST
0xfa PUSH1 0x40
0xfc MLOAD
0xfd DUP1
0xfe DUP3
0xff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x114 AND
0x115 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12a AND
0x12b DUP2
0x12c MSTORE
0x12d PUSH1 0x20
0x12f ADD
0x130 SWAP2
0x131 POP
0x132 POP
0x133 PUSH1 0x40
0x135 MLOAD
0x136 DUP1
0x137 SWAP2
0x138 SUB
0x139 SWAP1
0x13a RETURN
---
0xf9: JUMPDEST 
0xfa: V64 = 0x40
0xfc: V65 = M[0x40]
0xff: V66 = 0xffffffffffffffffffffffffffffffffffffffff
0x114: V67 = AND 0xffffffffffffffffffffffffffffffffffffffff V107
0x115: V68 = 0xffffffffffffffffffffffffffffffffffffffff
0x12a: V69 = AND 0xffffffffffffffffffffffffffffffffffffffff V67
0x12c: M[V65] = V69
0x12d: V70 = 0x20
0x12f: V71 = ADD 0x20 V65
0x133: V72 = 0x40
0x135: V73 = M[0x40]
0x138: V74 = SUB V71 V73
0x13a: RETURN V73 V74
---
Entry stack: [V11, 0xf9, V107]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xf9]

================================

Block 0x13b
[0x13b:0x198]
---
Predecessors: [0x5d]
Successors: [0x199, 0x1a2]
---
0x13b JUMPDEST
0x13c PUSH1 0x0
0x13e DUP1
0x13f SWAP1
0x140 SLOAD
0x141 SWAP1
0x142 PUSH2 0x100
0x145 EXP
0x146 SWAP1
0x147 DIV
0x148 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15d AND
0x15e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x173 AND
0x174 PUSH2 0x8fc
0x177 DUP4
0x178 SWAP1
0x179 DUP2
0x17a ISZERO
0x17b MUL
0x17c SWAP1
0x17d PUSH1 0x40
0x17f MLOAD
0x180 PUSH1 0x0
0x182 PUSH1 0x40
0x184 MLOAD
0x185 DUP1
0x186 DUP4
0x187 SUB
0x188 DUP2
0x189 DUP6
0x18a DUP9
0x18b DUP9
0x18c CALL
0x18d SWAP4
0x18e POP
0x18f POP
0x190 POP
0x191 POP
0x192 ISZERO
0x193 DUP1
0x194 ISZERO
0x195 PUSH2 0x1a2
0x198 JUMPI
---
0x13b: JUMPDEST 
0x13c: V75 = 0x0
0x140: V76 = S[0x0]
0x142: V77 = 0x100
0x145: V78 = EXP 0x100 0x0
0x147: V79 = DIV V76 0x1
0x148: V80 = 0xffffffffffffffffffffffffffffffffffffffff
0x15d: V81 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x15e: V82 = 0xffffffffffffffffffffffffffffffffffffffff
0x173: V83 = AND 0xffffffffffffffffffffffffffffffffffffffff V81
0x174: V84 = 0x8fc
0x17a: V85 = ISZERO V33
0x17b: V86 = MUL V85 0x8fc
0x17d: V87 = 0x40
0x17f: V88 = M[0x40]
0x180: V89 = 0x0
0x182: V90 = 0x40
0x184: V91 = M[0x40]
0x187: V92 = SUB V88 V91
0x18c: V93 = CALL V86 V83 V33 V91 V92 V91 0x0
0x192: V94 = ISZERO V93
0x194: V95 = ISZERO V94
0x195: V96 = 0x1a2
0x198: JUMPI 0x1a2 V95
---
Entry stack: [V11, 0xe2, V30, V33, V51]
Stack pops: 2
Stack additions: [S1, S0, V94]
Exit stack: [V11, 0xe2, V30, V33, V51, V94]

================================

Block 0x199
[0x199:0x1a1]
---
Predecessors: [0x13b]
Successors: []
---
0x199 RETURNDATASIZE
0x19a PUSH1 0x0
0x19c DUP1
0x19d RETURNDATACOPY
0x19e RETURNDATASIZE
0x19f PUSH1 0x0
0x1a1 REVERT
---
0x199: V97 = RETURNDATASIZE
0x19a: V98 = 0x0
0x19d: RETURNDATACOPY 0x0 0x0 V97
0x19e: V99 = RETURNDATASIZE
0x19f: V100 = 0x0
0x1a1: REVERT 0x0 V99
---
Entry stack: [V11, 0xe2, V30, V33, V51, V94]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe2, V30, V33, V51, V94]

================================

Block 0x1a2
[0x1a2:0x1a7]
---
Predecessors: [0x13b]
Successors: [0xe2]
---
0x1a2 JUMPDEST
0x1a3 POP
0x1a4 POP
0x1a5 POP
0x1a6 POP
0x1a7 JUMP
---
0x1a2: JUMPDEST 
0x1a7: JUMP 0xe2
---
Entry stack: [V11, 0xe2, V30, V33, V51, V94]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x1a8
[0x1a8:0x1cc]
---
Predecessors: [0xf0]
Successors: [0xf9]
---
0x1a8 JUMPDEST
0x1a9 PUSH1 0x0
0x1ab DUP1
0x1ac SWAP1
0x1ad SLOAD
0x1ae SWAP1
0x1af PUSH2 0x100
0x1b2 EXP
0x1b3 SWAP1
0x1b4 DIV
0x1b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ca AND
0x1cb DUP2
0x1cc JUMP
---
0x1a8: JUMPDEST 
0x1a9: V101 = 0x0
0x1ad: V102 = S[0x0]
0x1af: V103 = 0x100
0x1b2: V104 = EXP 0x100 0x0
0x1b4: V105 = DIV V102 0x1
0x1b5: V106 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ca: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V105
0x1cc: JUMP 0xf9
---
Entry stack: [V11, 0xf9]
Stack pops: 1
Stack additions: [S0, V107]
Exit stack: [V11, 0xf9, V107]

================================

Block 0x1cd
[0x1cd:0x1f8]
---
Predecessors: []
Successors: []
---
0x1cd STOP
0x1ce LOG1
0x1cf PUSH6 0x627a7a723058
0x1d6 SHA3
0x1d7 MISSING 0xc1
0x1d8 COINBASE
0x1d9 DUP11
0x1da PUSH7 0x2d1c53e836629c
0x1e2 PUSH4 0xa65aaff
0x1e7 PUSH11 0x98fcaebf1ed0b18e246321
0x1f3 MISSING 0xd4
0x1f4 MISSING 0xe5
0x1f5 MISSING 0xa8
0x1f6 MISSING 0xbb
0x1f7 STOP
0x1f8 MISSING 0x29
---
0x1cd: STOP 
0x1ce: LOG S0 S1 S2
0x1cf: V108 = 0x627a7a723058
0x1d6: V109 = SHA3 0x627a7a723058 S3
0x1d7: MISSING 0xc1
0x1d8: V110 = COINBASE
0x1da: V111 = 0x2d1c53e836629c
0x1e2: V112 = 0xa65aaff
0x1e7: V113 = 0x98fcaebf1ed0b18e246321
0x1f3: MISSING 0xd4
0x1f4: MISSING 0xe5
0x1f5: MISSING 0xa8
0x1f6: MISSING 0xbb
0x1f7: STOP 
0x1f8: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V109, 0x98fcaebf1ed0b18e246321, 0xa65aaff, 0x2d1c53e836629c, S9, V110, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9]
Exit stack: []

================================

Function 0:
Public function signature: 0xc0ee0b8a
Entry block: 0x51
Exit block: 0xe2
Body: 0x51, 0x59, 0x5d, 0xe2, 0x13b, 0x199, 0x1a2

Function 1:
Public function signature: 0xe5a912c7
Entry block: 0xe4
Exit block: 0xf9
Body: 0xe4, 0xec, 0xf0, 0xf9, 0x1a8

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

