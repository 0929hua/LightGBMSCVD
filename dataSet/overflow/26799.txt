Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x3f]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x3f
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x3f
0xa: JUMPI 0x3f V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x414]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0xc7c625ee
0x3a EQ
0x3b PUSH2 0x414
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0xc7c625ee
0x3a: V12 = EQ 0xc7c625ee V10
0x3b: V13 = 0x414
0x3e: JUMPI 0x414 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x42]
---
Predecessors: [0x0, 0xb]
Successors: [0x43]
---
0x3f JUMPDEST
0x40 PUSH2 0x412
---
0x3f: JUMPDEST 
0x40: V14 = 0x412
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x412]
Exit stack: [V10, 0x412]

================================

Block 0x43
[0x43:0xa0]
---
Predecessors: [0x3f]
Successors: [0xa1, 0xa6]
---
0x43 JUMPDEST
0x44 PUSH1 0x0
0x46 PUSH1 0x0
0x48 PUSH1 0x0
0x4a PUSH1 0x0
0x4c PUSH1 0x0
0x4e SWAP1
0x4f SLOAD
0x50 SWAP1
0x51 PUSH2 0x100
0x54 EXP
0x55 SWAP1
0x56 DIV
0x57 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6c AND
0x6d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x82 AND
0x83 CALLER
0x84 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x99 AND
0x9a EQ
0x9b DUP1
0x9c ISZERO
0x9d PUSH2 0xa6
0xa0 JUMPI
---
0x43: JUMPDEST 
0x44: V15 = 0x0
0x46: V16 = 0x0
0x48: V17 = 0x0
0x4a: V18 = 0x0
0x4c: V19 = 0x0
0x4f: V20 = S[0x0]
0x51: V21 = 0x100
0x54: V22 = EXP 0x100 0x0
0x56: V23 = DIV V20 0x1
0x57: V24 = 0xffffffffffffffffffffffffffffffffffffffff
0x6c: V25 = AND 0xffffffffffffffffffffffffffffffffffffffff V23
0x6d: V26 = 0xffffffffffffffffffffffffffffffffffffffff
0x82: V27 = AND 0xffffffffffffffffffffffffffffffffffffffff V25
0x83: V28 = CALLER
0x84: V29 = 0xffffffffffffffffffffffffffffffffffffffff
0x99: V30 = AND 0xffffffffffffffffffffffffffffffffffffffff V28
0x9a: V31 = EQ V30 V27
0x9c: V32 = ISZERO V31
0x9d: V33 = 0xa6
0xa0: JUMPI 0xa6 V32
---
Entry stack: [V10, 0x412]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, V31]
Exit stack: [V10, 0x412, 0x0, 0x0, 0x0, V31]

================================

Block 0xa1
[0xa1:0xa5]
---
Predecessors: [0x43]
Successors: [0xa6]
---
0xa1 POP
0xa2 PUSH1 0x0
0xa4 CALLVALUE
0xa5 GT
---
0xa2: V34 = 0x0
0xa4: V35 = CALLVALUE
0xa5: V36 = GT V35 0x0
---
Entry stack: [V10, 0x412, 0x0, 0x0, 0x0, V31]
Stack pops: 1
Stack additions: [V36]
Exit stack: [V10, 0x412, 0x0, 0x0, 0x0, V36]

================================

Block 0xa6
[0xa6:0xab]
---
Predecessors: [0x43, 0xa1]
Successors: [0xac, 0xb0]
---
0xa6 JUMPDEST
0xa7 ISZERO
0xa8 PUSH2 0xb0
0xab JUMPI
---
0xa6: JUMPDEST 
0xa7: V37 = ISZERO S0
0xa8: V38 = 0xb0
0xab: JUMPI 0xb0 V37
---
Entry stack: [V10, 0x412, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x412, 0x0, 0x0, 0x0]

================================

Block 0xac
[0xac:0xaf]
---
Predecessors: [0xa6]
Successors: [0x40d]
---
0xac PUSH2 0x40d
0xaf JUMP
---
0xac: V39 = 0x40d
0xaf: JUMP 0x40d
---
Entry stack: [V10, 0x412, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x412, 0x0, 0x0, 0x0]

================================

Block 0xb0
[0xb0:0x107]
---
Predecessors: [0xa6]
Successors: [0x108, 0x10d]
---
0xb0 JUMPDEST
0xb1 PUSH1 0x0
0xb3 PUSH1 0x0
0xb5 SWAP1
0xb6 SLOAD
0xb7 SWAP1
0xb8 PUSH2 0x100
0xbb EXP
0xbc SWAP1
0xbd DIV
0xbe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd3 AND
0xd4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe9 AND
0xea CALLER
0xeb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x100 AND
0x101 EQ
0x102 DUP1
0x103 ISZERO
0x104 PUSH2 0x10d
0x107 JUMPI
---
0xb0: JUMPDEST 
0xb1: V40 = 0x0
0xb3: V41 = 0x0
0xb6: V42 = S[0x0]
0xb8: V43 = 0x100
0xbb: V44 = EXP 0x100 0x0
0xbd: V45 = DIV V42 0x1
0xbe: V46 = 0xffffffffffffffffffffffffffffffffffffffff
0xd3: V47 = AND 0xffffffffffffffffffffffffffffffffffffffff V45
0xd4: V48 = 0xffffffffffffffffffffffffffffffffffffffff
0xe9: V49 = AND 0xffffffffffffffffffffffffffffffffffffffff V47
0xea: V50 = CALLER
0xeb: V51 = 0xffffffffffffffffffffffffffffffffffffffff
0x100: V52 = AND 0xffffffffffffffffffffffffffffffffffffffff V50
0x101: V53 = EQ V52 V49
0x103: V54 = ISZERO V53
0x104: V55 = 0x10d
0x107: JUMPI 0x10d V54
---
Entry stack: [V10, 0x412, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [V53]
Exit stack: [V10, 0x412, 0x0, 0x0, 0x0, V53]

================================

Block 0x108
[0x108:0x10c]
---
Predecessors: [0xb0]
Successors: [0x10d]
---
0x108 POP
0x109 PUSH1 0x0
0x10b CALLVALUE
0x10c EQ
---
0x109: V56 = 0x0
0x10b: V57 = CALLVALUE
0x10c: V58 = EQ V57 0x0
---
Entry stack: [V10, 0x412, 0x0, 0x0, 0x0, V53]
Stack pops: 1
Stack additions: [V58]
Exit stack: [V10, 0x412, 0x0, 0x0, 0x0, V58]

================================

Block 0x10d
[0x10d:0x112]
---
Predecessors: [0xb0, 0x108]
Successors: [0x113, 0x190]
---
0x10d JUMPDEST
0x10e ISZERO
0x10f PUSH2 0x190
0x112 JUMPI
---
0x10d: JUMPDEST 
0x10e: V59 = ISZERO S0
0x10f: V60 = 0x190
0x112: JUMPI 0x190 V59
---
Entry stack: [V10, 0x412, 0x0, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x412, 0x0, 0x0, 0x0]

================================

Block 0x113
[0x113:0x189]
---
Predecessors: [0x10d]
Successors: [0x18a, 0x18b]
---
0x113 PUSH1 0x0
0x115 PUSH1 0x0
0x117 SWAP1
0x118 SLOAD
0x119 SWAP1
0x11a PUSH2 0x100
0x11d EXP
0x11e SWAP1
0x11f DIV
0x120 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x135 AND
0x136 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14b AND
0x14c PUSH2 0x8fc
0x14f ADDRESS
0x150 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x165 AND
0x166 BALANCE
0x167 SWAP1
0x168 DUP2
0x169 ISZERO
0x16a MUL
0x16b SWAP1
0x16c PUSH1 0x40
0x16e MLOAD
0x16f DUP1
0x170 SWAP1
0x171 POP
0x172 PUSH1 0x0
0x174 PUSH1 0x40
0x176 MLOAD
0x177 DUP1
0x178 DUP4
0x179 SUB
0x17a DUP2
0x17b DUP6
0x17c DUP9
0x17d DUP9
0x17e CALL
0x17f SWAP4
0x180 POP
0x181 POP
0x182 POP
0x183 POP
0x184 ISZERO
0x185 ISZERO
0x186 PUSH2 0x18b
0x189 JUMPI
---
0x113: V61 = 0x0
0x115: V62 = 0x0
0x118: V63 = S[0x0]
0x11a: V64 = 0x100
0x11d: V65 = EXP 0x100 0x0
0x11f: V66 = DIV V63 0x1
0x120: V67 = 0xffffffffffffffffffffffffffffffffffffffff
0x135: V68 = AND 0xffffffffffffffffffffffffffffffffffffffff V66
0x136: V69 = 0xffffffffffffffffffffffffffffffffffffffff
0x14b: V70 = AND 0xffffffffffffffffffffffffffffffffffffffff V68
0x14c: V71 = 0x8fc
0x14f: V72 = ADDRESS
0x150: V73 = 0xffffffffffffffffffffffffffffffffffffffff
0x165: V74 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0x166: V75 = BALANCE V74
0x169: V76 = ISZERO V75
0x16a: V77 = MUL V76 0x8fc
0x16c: V78 = 0x40
0x16e: V79 = M[0x40]
0x172: V80 = 0x0
0x174: V81 = 0x40
0x176: V82 = M[0x40]
0x179: V83 = SUB V79 V82
0x17e: V84 = CALL V77 V70 V75 V82 V83 V82 0x0
0x184: V85 = ISZERO V84
0x185: V86 = ISZERO V85
0x186: V87 = 0x18b
0x189: JUMPI 0x18b V86
---
Entry stack: [V10, 0x412, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x412, 0x0, 0x0, 0x0]

================================

Block 0x18a
[0x18a:0x18a]
---
Predecessors: [0x113]
Successors: []
---
0x18a INVALID
---
0x18a: INVALID 
---
Entry stack: [V10, 0x412, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x412, 0x0, 0x0, 0x0]

================================

Block 0x18b
[0x18b:0x18f]
---
Predecessors: [0x113]
Successors: [0x40c]
---
0x18b JUMPDEST
0x18c PUSH2 0x40c
0x18f JUMP
---
0x18b: JUMPDEST 
0x18c: V88 = 0x40c
0x18f: JUMP 0x40c
---
Entry stack: [V10, 0x412, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x412, 0x0, 0x0, 0x0]

================================

Block 0x190
[0x190:0x19a]
---
Predecessors: [0x10d]
Successors: [0x19b, 0x19c]
---
0x190 JUMPDEST
0x191 PUSH1 0x64
0x193 CALLVALUE
0x194 DUP2
0x195 ISZERO
0x196 ISZERO
0x197 PUSH2 0x19c
0x19a JUMPI
---
0x190: JUMPDEST 
0x191: V89 = 0x64
0x193: V90 = CALLVALUE
0x195: V91 = ISZERO 0x64
0x196: V92 = ISZERO 0x0
0x197: V93 = 0x19c
0x19a: JUMPI 0x19c 0x1
---
Entry stack: [V10, 0x412, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x64, V90]
Exit stack: [V10, 0x412, 0x0, 0x0, 0x0, 0x64, V90]

================================

Block 0x19b
[0x19b:0x19b]
---
Predecessors: [0x190]
Successors: []
---
0x19b INVALID
---
0x19b: INVALID 
---
Entry stack: [V10, 0x412, 0x0, 0x0, 0x0, 0x64, V90]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x412, 0x0, 0x0, 0x0, 0x64, V90]

================================

Block 0x19c
[0x19c:0x1ff]
---
Predecessors: [0x190]
Successors: [0x200, 0x201]
---
0x19c JUMPDEST
0x19d DIV
0x19e SWAP3
0x19f POP
0x1a0 PUSH1 0x0
0x1a2 PUSH1 0x0
0x1a4 SWAP1
0x1a5 SLOAD
0x1a6 SWAP1
0x1a7 PUSH2 0x100
0x1aa EXP
0x1ab SWAP1
0x1ac DIV
0x1ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c2 AND
0x1c3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d8 AND
0x1d9 PUSH2 0x8fc
0x1dc DUP5
0x1dd SWAP1
0x1de DUP2
0x1df ISZERO
0x1e0 MUL
0x1e1 SWAP1
0x1e2 PUSH1 0x40
0x1e4 MLOAD
0x1e5 DUP1
0x1e6 SWAP1
0x1e7 POP
0x1e8 PUSH1 0x0
0x1ea PUSH1 0x40
0x1ec MLOAD
0x1ed DUP1
0x1ee DUP4
0x1ef SUB
0x1f0 DUP2
0x1f1 DUP6
0x1f2 DUP9
0x1f3 DUP9
0x1f4 CALL
0x1f5 SWAP4
0x1f6 POP
0x1f7 POP
0x1f8 POP
0x1f9 POP
0x1fa ISZERO
0x1fb ISZERO
0x1fc PUSH2 0x201
0x1ff JUMPI
---
0x19c: JUMPDEST 
0x19d: V94 = DIV V90 0x64
0x1a0: V95 = 0x0
0x1a2: V96 = 0x0
0x1a5: V97 = S[0x0]
0x1a7: V98 = 0x100
0x1aa: V99 = EXP 0x100 0x0
0x1ac: V100 = DIV V97 0x1
0x1ad: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c2: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x1c3: V103 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d8: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x1d9: V105 = 0x8fc
0x1df: V106 = ISZERO V94
0x1e0: V107 = MUL V106 0x8fc
0x1e2: V108 = 0x40
0x1e4: V109 = M[0x40]
0x1e8: V110 = 0x0
0x1ea: V111 = 0x40
0x1ec: V112 = M[0x40]
0x1ef: V113 = SUB V109 V112
0x1f4: V114 = CALL V107 V104 V94 V112 V113 V112 0x0
0x1fa: V115 = ISZERO V114
0x1fb: V116 = ISZERO V115
0x1fc: V117 = 0x201
0x1ff: JUMPI 0x201 V116
---
Entry stack: [V10, 0x412, 0x0, 0x0, 0x0, 0x64, V90]
Stack pops: 5
Stack additions: [V94, S3, S2]
Exit stack: [V10, 0x412, V94, 0x0, 0x0]

================================

Block 0x200
[0x200:0x200]
---
Predecessors: [0x19c]
Successors: []
---
0x200 INVALID
---
0x200: INVALID 
---
Entry stack: [V10, 0x412, V94, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x412, V94, 0x0, 0x0]

================================

Block 0x201
[0x201:0x209]
---
Predecessors: [0x19c]
Successors: [0x4a0]
---
0x201 JUMPDEST
0x202 PUSH2 0x20a
0x205 CALLER
0x206 PUSH2 0x4a0
0x209 JUMP
---
0x201: JUMPDEST 
0x202: V118 = 0x20a
0x205: V119 = CALLER
0x206: V120 = 0x4a0
0x209: JUMP 0x4a0
---
Entry stack: [V10, 0x412, V94, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x20a, V119]
Exit stack: [V10, 0x412, V94, 0x0, 0x0, 0x20a, V119]

================================

Block 0x20a
[0x20a:0x236]
---
Predecessors: [0x4fe]
Successors: [0x4a0]
---
0x20a JUMPDEST
0x20b SWAP2
0x20c POP
0x20d PUSH2 0x237
0x210 PUSH1 0x0
0x212 PUSH1 0x0
0x214 SWAP1
0x215 SLOAD
0x216 SWAP1
0x217 PUSH2 0x100
0x21a EXP
0x21b SWAP1
0x21c DIV
0x21d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x232 AND
0x233 PUSH2 0x4a0
0x236 JUMP
---
0x20a: JUMPDEST 
0x20d: V121 = 0x237
0x210: V122 = 0x0
0x212: V123 = 0x0
0x215: V124 = S[0x0]
0x217: V125 = 0x100
0x21a: V126 = EXP 0x100 0x0
0x21c: V127 = DIV V124 0x1
0x21d: V128 = 0xffffffffffffffffffffffffffffffffffffffff
0x232: V129 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x233: V130 = 0x4a0
0x236: JUMP 0x4a0
---
Entry stack: [V10, 0x412, V94, S2, S1, S0]
Stack pops: 3
Stack additions: [S0, S1, 0x237, V129]
Exit stack: [V10, 0x412, V94, S0, S1, 0x237, V129]

================================

Block 0x237
[0x237:0x344]
---
Predecessors: [0x4fe]
Successors: [0x345, 0x40b]
---
0x237 JUMPDEST
0x238 SWAP1
0x239 POP
0x23a PUSH32 0xb69a8e32fe21e912c295abf8b3cc6f6fc80466dc6ba6f4401c1e8a56723e575b
0x25b DUP3
0x25c PUSH30 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x27b NOT
0x27c AND
0x27d PUSH1 0x40
0x27f MLOAD
0x280 DUP1
0x281 DUP3
0x282 PUSH1 0x0
0x284 NOT
0x285 AND
0x286 PUSH1 0x0
0x288 NOT
0x289 AND
0x28a DUP2
0x28b MSTORE
0x28c PUSH1 0x20
0x28e ADD
0x28f SWAP2
0x290 POP
0x291 POP
0x292 PUSH1 0x40
0x294 MLOAD
0x295 DUP1
0x296 SWAP2
0x297 SUB
0x298 SWAP1
0x299 LOG1
0x29a PUSH32 0xceca126e47a6b9a29e469fc3bc8e96c7b7189eba26060f49a5587986fbeea3f0
0x2bb DUP2
0x2bc PUSH30 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x2db NOT
0x2dc AND
0x2dd PUSH1 0x40
0x2df MLOAD
0x2e0 DUP1
0x2e1 DUP3
0x2e2 PUSH1 0x0
0x2e4 NOT
0x2e5 AND
0x2e6 PUSH1 0x0
0x2e8 NOT
0x2e9 AND
0x2ea DUP2
0x2eb MSTORE
0x2ec PUSH1 0x20
0x2ee ADD
0x2ef SWAP2
0x2f0 POP
0x2f1 POP
0x2f2 PUSH1 0x40
0x2f4 MLOAD
0x2f5 DUP1
0x2f6 SWAP2
0x2f7 SUB
0x2f8 SWAP1
0x2f9 LOG1
0x2fa DUP1
0x2fb PUSH30 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x31a NOT
0x31b AND
0x31c DUP3
0x31d PUSH30 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x33c NOT
0x33d AND
0x33e GT
0x33f ISZERO
0x340 ISZERO
0x341 PUSH2 0x40b
0x344 JUMPI
---
0x237: JUMPDEST 
0x23a: V131 = 0xb69a8e32fe21e912c295abf8b3cc6f6fc80466dc6ba6f4401c1e8a56723e575b
0x25c: V132 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x27b: V133 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x27c: V134 = AND 0xffff000000000000000000000000000000000000000000000000000000000000 S2
0x27d: V135 = 0x40
0x27f: V136 = M[0x40]
0x282: V137 = 0x0
0x284: V138 = NOT 0x0
0x285: V139 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V134
0x286: V140 = 0x0
0x288: V141 = NOT 0x0
0x289: V142 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V139
0x28b: M[V136] = V142
0x28c: V143 = 0x20
0x28e: V144 = ADD 0x20 V136
0x292: V145 = 0x40
0x294: V146 = M[0x40]
0x297: V147 = SUB V144 V146
0x299: LOG V146 V147 0xb69a8e32fe21e912c295abf8b3cc6f6fc80466dc6ba6f4401c1e8a56723e575b
0x29a: V148 = 0xceca126e47a6b9a29e469fc3bc8e96c7b7189eba26060f49a5587986fbeea3f0
0x2bc: V149 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x2db: V150 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x2dc: V151 = AND 0xffff000000000000000000000000000000000000000000000000000000000000 S0
0x2dd: V152 = 0x40
0x2df: V153 = M[0x40]
0x2e2: V154 = 0x0
0x2e4: V155 = NOT 0x0
0x2e5: V156 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V151
0x2e6: V157 = 0x0
0x2e8: V158 = NOT 0x0
0x2e9: V159 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V156
0x2eb: M[V153] = V159
0x2ec: V160 = 0x20
0x2ee: V161 = ADD 0x20 V153
0x2f2: V162 = 0x40
0x2f4: V163 = M[0x40]
0x2f7: V164 = SUB V161 V163
0x2f9: LOG V163 V164 0xceca126e47a6b9a29e469fc3bc8e96c7b7189eba26060f49a5587986fbeea3f0
0x2fb: V165 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x31a: V166 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x31b: V167 = AND 0xffff000000000000000000000000000000000000000000000000000000000000 S0
0x31d: V168 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x33c: V169 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x33d: V170 = AND 0xffff000000000000000000000000000000000000000000000000000000000000 S2
0x33e: V171 = GT V170 V167
0x33f: V172 = ISZERO V171
0x340: V173 = ISZERO V172
0x341: V174 = 0x40b
0x344: JUMPI 0x40b V173
---
Entry stack: [V10, 0x412, V94, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S0]
Exit stack: [V10, 0x412, V94, S2, S0]

================================

Block 0x345
[0x345:0x368]
---
Predecessors: [0x237]
Successors: [0x369, 0x3c4]
---
0x345 ADDRESS
0x346 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x35b AND
0x35c BALANCE
0x35d DUP4
0x35e PUSH1 0x2
0x360 CALLVALUE
0x361 MUL
0x362 SUB
0x363 GT
0x364 ISZERO
0x365 PUSH2 0x3c4
0x368 JUMPI
---
0x345: V175 = ADDRESS
0x346: V176 = 0xffffffffffffffffffffffffffffffffffffffff
0x35b: V177 = AND 0xffffffffffffffffffffffffffffffffffffffff V175
0x35c: V178 = BALANCE V177
0x35e: V179 = 0x2
0x360: V180 = CALLVALUE
0x361: V181 = MUL V180 0x2
0x362: V182 = SUB V181 V94
0x363: V183 = GT V182 V178
0x364: V184 = ISZERO V183
0x365: V185 = 0x3c4
0x368: JUMPI 0x3c4 V184
---
Entry stack: [V10, 0x412, V94, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x412, V94, S1, S0]

================================

Block 0x369
[0x369:0x3bd]
---
Predecessors: [0x345]
Successors: [0x3be, 0x3bf]
---
0x369 CALLER
0x36a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x37f AND
0x380 PUSH2 0x8fc
0x383 ADDRESS
0x384 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x399 AND
0x39a BALANCE
0x39b SWAP1
0x39c DUP2
0x39d ISZERO
0x39e MUL
0x39f SWAP1
0x3a0 PUSH1 0x40
0x3a2 MLOAD
0x3a3 DUP1
0x3a4 SWAP1
0x3a5 POP
0x3a6 PUSH1 0x0
0x3a8 PUSH1 0x40
0x3aa MLOAD
0x3ab DUP1
0x3ac DUP4
0x3ad SUB
0x3ae DUP2
0x3af DUP6
0x3b0 DUP9
0x3b1 DUP9
0x3b2 CALL
0x3b3 SWAP4
0x3b4 POP
0x3b5 POP
0x3b6 POP
0x3b7 POP
0x3b8 ISZERO
0x3b9 ISZERO
0x3ba PUSH2 0x3bf
0x3bd JUMPI
---
0x369: V186 = CALLER
0x36a: V187 = 0xffffffffffffffffffffffffffffffffffffffff
0x37f: V188 = AND 0xffffffffffffffffffffffffffffffffffffffff V186
0x380: V189 = 0x8fc
0x383: V190 = ADDRESS
0x384: V191 = 0xffffffffffffffffffffffffffffffffffffffff
0x399: V192 = AND 0xffffffffffffffffffffffffffffffffffffffff V190
0x39a: V193 = BALANCE V192
0x39d: V194 = ISZERO V193
0x39e: V195 = MUL V194 0x8fc
0x3a0: V196 = 0x40
0x3a2: V197 = M[0x40]
0x3a6: V198 = 0x0
0x3a8: V199 = 0x40
0x3aa: V200 = M[0x40]
0x3ad: V201 = SUB V197 V200
0x3b2: V202 = CALL V195 V188 V193 V200 V201 V200 0x0
0x3b8: V203 = ISZERO V202
0x3b9: V204 = ISZERO V203
0x3ba: V205 = 0x3bf
0x3bd: JUMPI 0x3bf V204
---
Entry stack: [V10, 0x412, V94, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x412, V94, S1, S0]

================================

Block 0x3be
[0x3be:0x3be]
---
Predecessors: [0x369]
Successors: []
---
0x3be INVALID
---
0x3be: INVALID 
---
Entry stack: [V10, 0x412, V94, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x412, V94, S1, S0]

================================

Block 0x3bf
[0x3bf:0x3c3]
---
Predecessors: [0x369]
Successors: [0x40a]
---
0x3bf JUMPDEST
0x3c0 PUSH2 0x40a
0x3c3 JUMP
---
0x3bf: JUMPDEST 
0x3c0: V206 = 0x40a
0x3c3: JUMP 0x40a
---
Entry stack: [V10, 0x412, V94, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x412, V94, S1, S0]

================================

Block 0x3c4
[0x3c4:0x407]
---
Predecessors: [0x345]
Successors: [0x408, 0x409]
---
0x3c4 JUMPDEST
0x3c5 CALLER
0x3c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3db AND
0x3dc PUSH2 0x8fc
0x3df DUP5
0x3e0 PUSH1 0x2
0x3e2 CALLVALUE
0x3e3 MUL
0x3e4 SUB
0x3e5 SWAP1
0x3e6 DUP2
0x3e7 ISZERO
0x3e8 MUL
0x3e9 SWAP1
0x3ea PUSH1 0x40
0x3ec MLOAD
0x3ed DUP1
0x3ee SWAP1
0x3ef POP
0x3f0 PUSH1 0x0
0x3f2 PUSH1 0x40
0x3f4 MLOAD
0x3f5 DUP1
0x3f6 DUP4
0x3f7 SUB
0x3f8 DUP2
0x3f9 DUP6
0x3fa DUP9
0x3fb DUP9
0x3fc CALL
0x3fd SWAP4
0x3fe POP
0x3ff POP
0x400 POP
0x401 POP
0x402 ISZERO
0x403 ISZERO
0x404 PUSH2 0x409
0x407 JUMPI
---
0x3c4: JUMPDEST 
0x3c5: V207 = CALLER
0x3c6: V208 = 0xffffffffffffffffffffffffffffffffffffffff
0x3db: V209 = AND 0xffffffffffffffffffffffffffffffffffffffff V207
0x3dc: V210 = 0x8fc
0x3e0: V211 = 0x2
0x3e2: V212 = CALLVALUE
0x3e3: V213 = MUL V212 0x2
0x3e4: V214 = SUB V213 V94
0x3e7: V215 = ISZERO V214
0x3e8: V216 = MUL V215 0x8fc
0x3ea: V217 = 0x40
0x3ec: V218 = M[0x40]
0x3f0: V219 = 0x0
0x3f2: V220 = 0x40
0x3f4: V221 = M[0x40]
0x3f7: V222 = SUB V218 V221
0x3fc: V223 = CALL V216 V209 V214 V221 V222 V221 0x0
0x402: V224 = ISZERO V223
0x403: V225 = ISZERO V224
0x404: V226 = 0x409
0x407: JUMPI 0x409 V225
---
Entry stack: [V10, 0x412, V94, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x412, V94, S1, S0]

================================

Block 0x408
[0x408:0x408]
---
Predecessors: [0x3c4]
Successors: []
---
0x408 INVALID
---
0x408: INVALID 
---
Entry stack: [V10, 0x412, V94, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x412, V94, S1, S0]

================================

Block 0x409
[0x409:0x409]
---
Predecessors: [0x3c4]
Successors: [0x40a]
---
0x409 JUMPDEST
---
0x409: JUMPDEST 
---
Entry stack: [V10, 0x412, V94, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x412, V94, S1, S0]

================================

Block 0x40a
[0x40a:0x40a]
---
Predecessors: [0x3bf, 0x409]
Successors: [0x40b]
---
0x40a JUMPDEST
---
0x40a: JUMPDEST 
---
Entry stack: [V10, 0x412, V94, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x412, V94, S1, S0]

================================

Block 0x40b
[0x40b:0x40b]
---
Predecessors: [0x237, 0x40a]
Successors: [0x40c]
---
0x40b JUMPDEST
---
0x40b: JUMPDEST 
---
Entry stack: [V10, 0x412, V94, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x412, V94, S1, S0]

================================

Block 0x40c
[0x40c:0x40c]
---
Predecessors: [0x18b, 0x40b]
Successors: [0x40d]
---
0x40c JUMPDEST
---
0x40c: JUMPDEST 
---
Entry stack: [V10, 0x412, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x412, S2, S1, S0]

================================

Block 0x40d
[0x40d:0x411]
---
Predecessors: [0xac, 0x40c]
Successors: [0x412]
---
0x40d JUMPDEST
0x40e POP
0x40f POP
0x410 POP
0x411 JUMP
---
0x40d: JUMPDEST 
0x411: JUMP 0x412
---
Entry stack: [V10, 0x412, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V10]

================================

Block 0x412
[0x412:0x413]
---
Predecessors: [0x40d]
Successors: []
---
0x412 JUMPDEST
0x413 STOP
---
0x412: JUMPDEST 
0x413: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x414
[0x414:0x41a]
---
Predecessors: [0xb]
Successors: [0x41b, 0x41c]
---
0x414 JUMPDEST
0x415 CALLVALUE
0x416 ISZERO
0x417 PUSH2 0x41c
0x41a JUMPI
---
0x414: JUMPDEST 
0x415: V227 = CALLVALUE
0x416: V228 = ISZERO V227
0x417: V229 = 0x41c
0x41a: JUMPI 0x41c V228
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x41b
[0x41b:0x41b]
---
Predecessors: [0x414]
Successors: []
---
0x41b INVALID
---
0x41b: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x41c
[0x41c:0x447]
---
Predecessors: [0x414]
Successors: [0x4a0]
---
0x41c JUMPDEST
0x41d PUSH2 0x448
0x420 PUSH1 0x4
0x422 DUP1
0x423 DUP1
0x424 CALLDATALOAD
0x425 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x43a AND
0x43b SWAP1
0x43c PUSH1 0x20
0x43e ADD
0x43f SWAP1
0x440 SWAP2
0x441 SWAP1
0x442 POP
0x443 POP
0x444 PUSH2 0x4a0
0x447 JUMP
---
0x41c: JUMPDEST 
0x41d: V230 = 0x448
0x420: V231 = 0x4
0x424: V232 = CALLDATALOAD 0x4
0x425: V233 = 0xffffffffffffffffffffffffffffffffffffffff
0x43a: V234 = AND 0xffffffffffffffffffffffffffffffffffffffff V232
0x43c: V235 = 0x20
0x43e: V236 = ADD 0x20 0x4
0x444: V237 = 0x4a0
0x447: JUMP 0x4a0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x448, V234]
Exit stack: [V10, 0x448, V234]

================================

Block 0x448
[0x448:0x49f]
---
Predecessors: [0x4fe]
Successors: []
---
0x448 JUMPDEST
0x449 PUSH1 0x40
0x44b MLOAD
0x44c DUP1
0x44d DUP3
0x44e PUSH30 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x46d NOT
0x46e AND
0x46f PUSH30 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x48e NOT
0x48f AND
0x490 DUP2
0x491 MSTORE
0x492 PUSH1 0x20
0x494 ADD
0x495 SWAP2
0x496 POP
0x497 POP
0x498 PUSH1 0x40
0x49a MLOAD
0x49b DUP1
0x49c SWAP2
0x49d SUB
0x49e SWAP1
0x49f RETURN
---
0x448: JUMPDEST 
0x449: V238 = 0x40
0x44b: V239 = M[0x40]
0x44e: V240 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x46d: V241 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x46e: V242 = AND 0xffff000000000000000000000000000000000000000000000000000000000000 S0
0x46f: V243 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x48e: V244 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x48f: V245 = AND 0xffff000000000000000000000000000000000000000000000000000000000000 V242
0x491: M[V239] = V245
0x492: V246 = 0x20
0x494: V247 = ADD 0x20 V239
0x498: V248 = 0x40
0x49a: V249 = M[0x40]
0x49d: V250 = SUB V247 V249
0x49f: RETURN V249 V250
---
Entry stack: [V10, 0x412, V94, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x412, V94, S2, S1]

================================

Block 0x4a0
[0x4a0:0x4fd]
---
Predecessors: [0x201, 0x20a, 0x41c]
Successors: [0x4fe]
---
0x4a0 JUMPDEST
0x4a1 PUSH1 0x0
0x4a3 DUP2
0x4a4 TIMESTAMP
0x4a5 PUSH1 0x40
0x4a7 MLOAD
0x4a8 DUP1
0x4a9 DUP4
0x4aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4bf AND
0x4c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4d5 AND
0x4d6 PUSH13 0x1000000000000000000000000
0x4e4 MUL
0x4e5 DUP2
0x4e6 MSTORE
0x4e7 PUSH1 0x14
0x4e9 ADD
0x4ea DUP3
0x4eb DUP2
0x4ec MSTORE
0x4ed PUSH1 0x20
0x4ef ADD
0x4f0 SWAP3
0x4f1 POP
0x4f2 POP
0x4f3 POP
0x4f4 PUSH1 0x40
0x4f6 MLOAD
0x4f7 DUP1
0x4f8 SWAP2
0x4f9 SUB
0x4fa SWAP1
0x4fb SHA3
0x4fc SWAP1
0x4fd POP
---
0x4a0: JUMPDEST 
0x4a1: V251 = 0x0
0x4a4: V252 = TIMESTAMP
0x4a5: V253 = 0x40
0x4a7: V254 = M[0x40]
0x4aa: V255 = 0xffffffffffffffffffffffffffffffffffffffff
0x4bf: V256 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x4c0: V257 = 0xffffffffffffffffffffffffffffffffffffffff
0x4d5: V258 = AND 0xffffffffffffffffffffffffffffffffffffffff V256
0x4d6: V259 = 0x1000000000000000000000000
0x4e4: V260 = MUL 0x1000000000000000000000000 V258
0x4e6: M[V254] = V260
0x4e7: V261 = 0x14
0x4e9: V262 = ADD 0x14 V254
0x4ec: M[V262] = V252
0x4ed: V263 = 0x20
0x4ef: V264 = ADD 0x20 V262
0x4f4: V265 = 0x40
0x4f6: V266 = M[0x40]
0x4f9: V267 = SUB V264 V266
0x4fb: V268 = SHA3 V266 V267
---
Entry stack: [V10, 0x412, V94, S3, S2, {0x20a, 0x237, 0x448}, S0]
Stack pops: 1
Stack additions: [S0, V268]
Exit stack: [V10, 0x412, V94, S3, S2, {0x20a, 0x237, 0x448}, S0, V268]

================================

Block 0x4fe
[0x4fe:0x502]
---
Predecessors: [0x4a0]
Successors: [0x20a, 0x237, 0x448]
---
0x4fe JUMPDEST
0x4ff SWAP2
0x500 SWAP1
0x501 POP
0x502 JUMP
---
0x4fe: JUMPDEST 
0x502: JUMP {0x20a, 0x237, 0x448}
---
Entry stack: [V10, 0x412, V94, S4, S3, {0x20a, 0x237, 0x448}, S1, V268]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, 0x412, V94, S4, S3, V268]

================================

Block 0x503
[0x503:0x52e]
---
Predecessors: []
Successors: []
---
0x503 STOP
0x504 LOG1
0x505 PUSH6 0x627a7a723058
0x50c SHA3
0x50d SWAP16
0x50e MISSING 0xbd
0x50f CODECOPY
0x510 BALANCE
0x511 MISSING 0xb5
0x512 MISSING 0xc6
0x513 PUSH22 0xf28307eafee3f453bc4ffe6003236a44b416789d85e3
0x52a SWAP12
0x52b MISSING 0xda
0x52c MISSING 0xc3
0x52d STOP
0x52e MISSING 0x29
---
0x503: STOP 
0x504: LOG S0 S1 S2
0x505: V269 = 0x627a7a723058
0x50c: V270 = SHA3 0x627a7a723058 S3
0x50e: MISSING 0xbd
0x50f: CODECOPY S0 S1 S2
0x510: V271 = BALANCE S3
0x511: MISSING 0xb5
0x512: MISSING 0xc6
0x513: V272 = 0xf28307eafee3f453bc4ffe6003236a44b416789d85e3
0x52b: MISSING 0xda
0x52c: MISSING 0xc3
0x52d: STOP 
0x52e: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S19, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, V270, V271, S11, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, 0xf28307eafee3f453bc4ffe6003236a44b416789d85e3]
Exit stack: []

================================

Function 0:
Public function signature: 0xc7c625ee
Entry block: 0x414
Exit block: 0x448
Body: 0x414, 0x41b, 0x41c, 0x448

Function 1:
Public fallback function
Entry block: 0x3f
Exit block: 0x448
Body: 0x3f, 0x43, 0xa1, 0xa6, 0xac, 0xb0, 0x108, 0x10d, 0x113, 0x18a, 0x18b, 0x190, 0x19b, 0x19c, 0x200, 0x201, 0x20a, 0x40c, 0x40d, 0x412, 0x448

Function 2:
Private function
Entry block: 0x4a0
Exit block: 0x4fe
Body: 0x4a0, 0x4fe

