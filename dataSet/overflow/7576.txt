Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x99]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x99
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x99
0xc: JUMPI 0x99 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0xab]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x6fdde03
0x3c EQ
0x3d PUSH2 0xab
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x6fdde03
0x3c: V13 = EQ 0x6fdde03 V11
0x3d: V14 = 0xab
0x40: JUMPI 0xab V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x13b]
---
0x41 DUP1
0x42 PUSH4 0x95ea7b3
0x47 EQ
0x48 PUSH2 0x13b
0x4b JUMPI
---
0x42: V15 = 0x95ea7b3
0x47: V16 = EQ 0x95ea7b3 V11
0x48: V17 = 0x13b
0x4b: JUMPI 0x13b V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x1a0]
---
0x4c DUP1
0x4d PUSH4 0x18160ddd
0x52 EQ
0x53 PUSH2 0x1a0
0x56 JUMPI
---
0x4d: V18 = 0x18160ddd
0x52: V19 = EQ 0x18160ddd V11
0x53: V20 = 0x1a0
0x56: JUMPI 0x1a0 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x1cb]
---
0x57 DUP1
0x58 PUSH4 0x23b872dd
0x5d EQ
0x5e PUSH2 0x1cb
0x61 JUMPI
---
0x58: V21 = 0x23b872dd
0x5d: V22 = EQ 0x23b872dd V11
0x5e: V23 = 0x1cb
0x61: JUMPI 0x1cb V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x250]
---
0x62 DUP1
0x63 PUSH4 0x313ce567
0x68 EQ
0x69 PUSH2 0x250
0x6c JUMPI
---
0x63: V24 = 0x313ce567
0x68: V25 = EQ 0x313ce567 V11
0x69: V26 = 0x250
0x6c: JUMPI 0x250 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x27b]
---
0x6d DUP1
0x6e PUSH4 0x70a08231
0x73 EQ
0x74 PUSH2 0x27b
0x77 JUMPI
---
0x6e: V27 = 0x70a08231
0x73: V28 = EQ 0x70a08231 V11
0x74: V29 = 0x27b
0x77: JUMPI 0x27b V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x2d2]
---
0x78 DUP1
0x79 PUSH4 0x95d89b41
0x7e EQ
0x7f PUSH2 0x2d2
0x82 JUMPI
---
0x79: V30 = 0x95d89b41
0x7e: V31 = EQ 0x95d89b41 V11
0x7f: V32 = 0x2d2
0x82: JUMPI 0x2d2 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x8d]
---
Predecessors: [0x78]
Successors: [0x8e, 0x362]
---
0x83 DUP1
0x84 PUSH4 0xa9059cbb
0x89 EQ
0x8a PUSH2 0x362
0x8d JUMPI
---
0x84: V33 = 0xa9059cbb
0x89: V34 = EQ 0xa9059cbb V11
0x8a: V35 = 0x362
0x8d: JUMPI 0x362 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8e
[0x8e:0x98]
---
Predecessors: [0x83]
Successors: [0x99, 0x3c7]
---
0x8e DUP1
0x8f PUSH4 0xdd62ed3e
0x94 EQ
0x95 PUSH2 0x3c7
0x98 JUMPI
---
0x8f: V36 = 0xdd62ed3e
0x94: V37 = EQ 0xdd62ed3e V11
0x95: V38 = 0x3c7
0x98: JUMPI 0x3c7 V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x99
[0x99:0xa0]
---
Predecessors: [0x0, 0x8e]
Successors: [0xa1, 0xa5]
---
0x99 JUMPDEST
0x9a CALLVALUE
0x9b DUP1
0x9c ISZERO
0x9d PUSH2 0xa5
0xa0 JUMPI
---
0x99: JUMPDEST 
0x9a: V39 = CALLVALUE
0x9c: V40 = ISZERO V39
0x9d: V41 = 0xa5
0xa0: JUMPI 0xa5 V40
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V39]
Exit stack: [V11, V39]

================================

Block 0xa1
[0xa1:0xa4]
---
Predecessors: [0x99]
Successors: []
---
0xa1 PUSH1 0x0
0xa3 DUP1
0xa4 REVERT
---
0xa1: V42 = 0x0
0xa4: REVERT 0x0 0x0
---
Entry stack: [V11, V39]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V39]

================================

Block 0xa5
[0xa5:0xaa]
---
Predecessors: [0x99]
Successors: []
---
0xa5 JUMPDEST
0xa6 POP
0xa7 PUSH1 0x0
0xa9 DUP1
0xaa REVERT
---
0xa5: JUMPDEST 
0xa7: V43 = 0x0
0xaa: REVERT 0x0 0x0
---
Entry stack: [V11, V39]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xab
[0xab:0xb2]
---
Predecessors: [0xd]
Successors: [0xb3, 0xb7]
---
0xab JUMPDEST
0xac CALLVALUE
0xad DUP1
0xae ISZERO
0xaf PUSH2 0xb7
0xb2 JUMPI
---
0xab: JUMPDEST 
0xac: V44 = CALLVALUE
0xae: V45 = ISZERO V44
0xaf: V46 = 0xb7
0xb2: JUMPI 0xb7 V45
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V44]
Exit stack: [V11, V44]

================================

Block 0xb3
[0xb3:0xb6]
---
Predecessors: [0xab]
Successors: []
---
0xb3 PUSH1 0x0
0xb5 DUP1
0xb6 REVERT
---
0xb3: V47 = 0x0
0xb6: REVERT 0x0 0x0
---
Entry stack: [V11, V44]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V44]

================================

Block 0xb7
[0xb7:0xbf]
---
Predecessors: [0xab]
Successors: [0x43e]
---
0xb7 JUMPDEST
0xb8 POP
0xb9 PUSH2 0xc0
0xbc PUSH2 0x43e
0xbf JUMP
---
0xb7: JUMPDEST 
0xb9: V48 = 0xc0
0xbc: V49 = 0x43e
0xbf: JUMP 0x43e
---
Entry stack: [V11, V44]
Stack pops: 1
Stack additions: [0xc0]
Exit stack: [V11, 0xc0]

================================

Block 0xc0
[0xc0:0xe4]
---
Predecessors: [0x43e]
Successors: [0xe5]
---
0xc0 JUMPDEST
0xc1 PUSH1 0x40
0xc3 MLOAD
0xc4 DUP1
0xc5 DUP1
0xc6 PUSH1 0x20
0xc8 ADD
0xc9 DUP3
0xca DUP2
0xcb SUB
0xcc DUP3
0xcd MSTORE
0xce DUP4
0xcf DUP2
0xd0 DUP2
0xd1 MLOAD
0xd2 DUP2
0xd3 MSTORE
0xd4 PUSH1 0x20
0xd6 ADD
0xd7 SWAP2
0xd8 POP
0xd9 DUP1
0xda MLOAD
0xdb SWAP1
0xdc PUSH1 0x20
0xde ADD
0xdf SWAP1
0xe0 DUP1
0xe1 DUP4
0xe2 DUP4
0xe3 PUSH1 0x0
---
0xc0: JUMPDEST 
0xc1: V50 = 0x40
0xc3: V51 = M[0x40]
0xc6: V52 = 0x20
0xc8: V53 = ADD 0x20 V51
0xcb: V54 = SUB V53 V51
0xcd: M[V51] = V54
0xd1: V55 = M[V306]
0xd3: M[V53] = V55
0xd4: V56 = 0x20
0xd6: V57 = ADD 0x20 V53
0xda: V58 = M[V306]
0xdc: V59 = 0x20
0xde: V60 = ADD 0x20 V306
0xe3: V61 = 0x0
---
Entry stack: [V11, 0xc0, V306]
Stack pops: 1
Stack additions: [S0, V51, V51, V57, V60, V58, V58, V57, V60, 0x0]
Exit stack: [V11, 0xc0, V306, V51, V51, V57, V60, V58, V58, V57, V60, 0x0]

================================

Block 0xe5
[0xe5:0xed]
---
Predecessors: [0xc0, 0xee]
Successors: [0xee, 0x100]
---
0xe5 JUMPDEST
0xe6 DUP4
0xe7 DUP2
0xe8 LT
0xe9 ISZERO
0xea PUSH2 0x100
0xed JUMPI
---
0xe5: JUMPDEST 
0xe8: V62 = LT S0 V58
0xe9: V63 = ISZERO V62
0xea: V64 = 0x100
0xed: JUMPI 0x100 V63
---
Entry stack: [V11, 0xc0, V306, V51, V51, V57, V60, V58, V58, V57, V60, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0xc0, V306, V51, V51, V57, V60, V58, V58, V57, V60, S0]

================================

Block 0xee
[0xee:0xff]
---
Predecessors: [0xe5]
Successors: [0xe5]
---
0xee DUP1
0xef DUP3
0xf0 ADD
0xf1 MLOAD
0xf2 DUP2
0xf3 DUP5
0xf4 ADD
0xf5 MSTORE
0xf6 PUSH1 0x20
0xf8 DUP2
0xf9 ADD
0xfa SWAP1
0xfb POP
0xfc PUSH2 0xe5
0xff JUMP
---
0xf0: V65 = ADD V60 S0
0xf1: V66 = M[V65]
0xf4: V67 = ADD V57 S0
0xf5: M[V67] = V66
0xf6: V68 = 0x20
0xf9: V69 = ADD S0 0x20
0xfc: V70 = 0xe5
0xff: JUMP 0xe5
---
Entry stack: [V11, 0xc0, V306, V51, V51, V57, V60, V58, V58, V57, V60, S0]
Stack pops: 3
Stack additions: [S2, S1, V69]
Exit stack: [V11, 0xc0, V306, V51, V51, V57, V60, V58, V58, V57, V60, V69]

================================

Block 0x100
[0x100:0x113]
---
Predecessors: [0xe5]
Successors: [0x114, 0x12d]
---
0x100 JUMPDEST
0x101 POP
0x102 POP
0x103 POP
0x104 POP
0x105 SWAP1
0x106 POP
0x107 SWAP1
0x108 DUP2
0x109 ADD
0x10a SWAP1
0x10b PUSH1 0x1f
0x10d AND
0x10e DUP1
0x10f ISZERO
0x110 PUSH2 0x12d
0x113 JUMPI
---
0x100: JUMPDEST 
0x109: V71 = ADD V58 V57
0x10b: V72 = 0x1f
0x10d: V73 = AND 0x1f V58
0x10f: V74 = ISZERO V73
0x110: V75 = 0x12d
0x113: JUMPI 0x12d V74
---
Entry stack: [V11, 0xc0, V306, V51, V51, V57, V60, V58, V58, V57, V60, S0]
Stack pops: 7
Stack additions: [V71, V73]
Exit stack: [V11, 0xc0, V306, V51, V51, V71, V73]

================================

Block 0x114
[0x114:0x12c]
---
Predecessors: [0x100]
Successors: [0x12d]
---
0x114 DUP1
0x115 DUP3
0x116 SUB
0x117 DUP1
0x118 MLOAD
0x119 PUSH1 0x1
0x11b DUP4
0x11c PUSH1 0x20
0x11e SUB
0x11f PUSH2 0x100
0x122 EXP
0x123 SUB
0x124 NOT
0x125 AND
0x126 DUP2
0x127 MSTORE
0x128 PUSH1 0x20
0x12a ADD
0x12b SWAP2
0x12c POP
---
0x116: V76 = SUB V71 V73
0x118: V77 = M[V76]
0x119: V78 = 0x1
0x11c: V79 = 0x20
0x11e: V80 = SUB 0x20 V73
0x11f: V81 = 0x100
0x122: V82 = EXP 0x100 V80
0x123: V83 = SUB V82 0x1
0x124: V84 = NOT V83
0x125: V85 = AND V84 V77
0x127: M[V76] = V85
0x128: V86 = 0x20
0x12a: V87 = ADD 0x20 V76
---
Entry stack: [V11, 0xc0, V306, V51, V51, V71, V73]
Stack pops: 2
Stack additions: [V87, S0]
Exit stack: [V11, 0xc0, V306, V51, V51, V87, V73]

================================

Block 0x12d
[0x12d:0x13a]
---
Predecessors: [0x100, 0x114]
Successors: []
---
0x12d JUMPDEST
0x12e POP
0x12f SWAP3
0x130 POP
0x131 POP
0x132 POP
0x133 PUSH1 0x40
0x135 MLOAD
0x136 DUP1
0x137 SWAP2
0x138 SUB
0x139 SWAP1
0x13a RETURN
---
0x12d: JUMPDEST 
0x133: V88 = 0x40
0x135: V89 = M[0x40]
0x138: V90 = SUB S1 V89
0x13a: RETURN V89 V90
---
Entry stack: [V11, 0xc0, V306, V51, V51, S1, V73]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0xc0]

================================

Block 0x13b
[0x13b:0x142]
---
Predecessors: [0x41]
Successors: [0x143, 0x147]
---
0x13b JUMPDEST
0x13c CALLVALUE
0x13d DUP1
0x13e ISZERO
0x13f PUSH2 0x147
0x142 JUMPI
---
0x13b: JUMPDEST 
0x13c: V91 = CALLVALUE
0x13e: V92 = ISZERO V91
0x13f: V93 = 0x147
0x142: JUMPI 0x147 V92
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V91]
Exit stack: [V11, V91]

================================

Block 0x143
[0x143:0x146]
---
Predecessors: [0x13b]
Successors: []
---
0x143 PUSH1 0x0
0x145 DUP1
0x146 REVERT
---
0x143: V94 = 0x0
0x146: REVERT 0x0 0x0
---
Entry stack: [V11, V91]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V91]

================================

Block 0x147
[0x147:0x185]
---
Predecessors: [0x13b]
Successors: [0x477]
---
0x147 JUMPDEST
0x148 POP
0x149 PUSH2 0x186
0x14c PUSH1 0x4
0x14e DUP1
0x14f CALLDATASIZE
0x150 SUB
0x151 DUP2
0x152 ADD
0x153 SWAP1
0x154 DUP1
0x155 DUP1
0x156 CALLDATALOAD
0x157 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16c AND
0x16d SWAP1
0x16e PUSH1 0x20
0x170 ADD
0x171 SWAP1
0x172 SWAP3
0x173 SWAP2
0x174 SWAP1
0x175 DUP1
0x176 CALLDATALOAD
0x177 SWAP1
0x178 PUSH1 0x20
0x17a ADD
0x17b SWAP1
0x17c SWAP3
0x17d SWAP2
0x17e SWAP1
0x17f POP
0x180 POP
0x181 POP
0x182 PUSH2 0x477
0x185 JUMP
---
0x147: JUMPDEST 
0x149: V95 = 0x186
0x14c: V96 = 0x4
0x14f: V97 = CALLDATASIZE
0x150: V98 = SUB V97 0x4
0x152: V99 = ADD 0x4 V98
0x156: V100 = CALLDATALOAD 0x4
0x157: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x16c: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x16e: V103 = 0x20
0x170: V104 = ADD 0x20 0x4
0x176: V105 = CALLDATALOAD 0x24
0x178: V106 = 0x20
0x17a: V107 = ADD 0x20 0x24
0x182: V108 = 0x477
0x185: JUMP 0x477
---
Entry stack: [V11, V91]
Stack pops: 1
Stack additions: [0x186, V102, V105]
Exit stack: [V11, 0x186, V102, V105]

================================

Block 0x186
[0x186:0x19f]
---
Predecessors: [0x477]
Successors: []
---
0x186 JUMPDEST
0x187 PUSH1 0x40
0x189 MLOAD
0x18a DUP1
0x18b DUP3
0x18c ISZERO
0x18d ISZERO
0x18e ISZERO
0x18f ISZERO
0x190 DUP2
0x191 MSTORE
0x192 PUSH1 0x20
0x194 ADD
0x195 SWAP2
0x196 POP
0x197 POP
0x198 PUSH1 0x40
0x19a MLOAD
0x19b DUP1
0x19c SWAP2
0x19d SUB
0x19e SWAP1
0x19f RETURN
---
0x186: JUMPDEST 
0x187: V109 = 0x40
0x189: V110 = M[0x40]
0x18c: V111 = ISZERO 0x1
0x18d: V112 = ISZERO 0x0
0x18e: V113 = ISZERO 0x1
0x18f: V114 = ISZERO 0x0
0x191: M[V110] = 0x1
0x192: V115 = 0x20
0x194: V116 = ADD 0x20 V110
0x198: V117 = 0x40
0x19a: V118 = M[0x40]
0x19d: V119 = SUB V116 V118
0x19f: RETURN V118 V119
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1a0
[0x1a0:0x1a7]
---
Predecessors: [0x4c]
Successors: [0x1a8, 0x1ac]
---
0x1a0 JUMPDEST
0x1a1 CALLVALUE
0x1a2 DUP1
0x1a3 ISZERO
0x1a4 PUSH2 0x1ac
0x1a7 JUMPI
---
0x1a0: JUMPDEST 
0x1a1: V120 = CALLVALUE
0x1a3: V121 = ISZERO V120
0x1a4: V122 = 0x1ac
0x1a7: JUMPI 0x1ac V121
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V120]
Exit stack: [V11, V120]

================================

Block 0x1a8
[0x1a8:0x1ab]
---
Predecessors: [0x1a0]
Successors: []
---
0x1a8 PUSH1 0x0
0x1aa DUP1
0x1ab REVERT
---
0x1a8: V123 = 0x0
0x1ab: REVERT 0x0 0x0
---
Entry stack: [V11, V120]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V120]

================================

Block 0x1ac
[0x1ac:0x1b4]
---
Predecessors: [0x1a0]
Successors: [0x569]
---
0x1ac JUMPDEST
0x1ad POP
0x1ae PUSH2 0x1b5
0x1b1 PUSH2 0x569
0x1b4 JUMP
---
0x1ac: JUMPDEST 
0x1ae: V124 = 0x1b5
0x1b1: V125 = 0x569
0x1b4: JUMP 0x569
---
Entry stack: [V11, V120]
Stack pops: 1
Stack additions: [0x1b5]
Exit stack: [V11, 0x1b5]

================================

Block 0x1b5
[0x1b5:0x1ca]
---
Predecessors: [0x569]
Successors: []
---
0x1b5 JUMPDEST
0x1b6 PUSH1 0x40
0x1b8 MLOAD
0x1b9 DUP1
0x1ba DUP3
0x1bb DUP2
0x1bc MSTORE
0x1bd PUSH1 0x20
0x1bf ADD
0x1c0 SWAP2
0x1c1 POP
0x1c2 POP
0x1c3 PUSH1 0x40
0x1c5 MLOAD
0x1c6 DUP1
0x1c7 SWAP2
0x1c8 SUB
0x1c9 SWAP1
0x1ca RETURN
---
0x1b5: JUMPDEST 
0x1b6: V126 = 0x40
0x1b8: V127 = M[0x40]
0x1bc: M[V127] = V353
0x1bd: V128 = 0x20
0x1bf: V129 = ADD 0x20 V127
0x1c3: V130 = 0x40
0x1c5: V131 = M[0x40]
0x1c8: V132 = SUB V129 V131
0x1ca: RETURN V131 V132
---
Entry stack: [V11, 0x1b5, V353]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1b5]

================================

Block 0x1cb
[0x1cb:0x1d2]
---
Predecessors: [0x57]
Successors: [0x1d3, 0x1d7]
---
0x1cb JUMPDEST
0x1cc CALLVALUE
0x1cd DUP1
0x1ce ISZERO
0x1cf PUSH2 0x1d7
0x1d2 JUMPI
---
0x1cb: JUMPDEST 
0x1cc: V133 = CALLVALUE
0x1ce: V134 = ISZERO V133
0x1cf: V135 = 0x1d7
0x1d2: JUMPI 0x1d7 V134
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V133]
Exit stack: [V11, V133]

================================

Block 0x1d3
[0x1d3:0x1d6]
---
Predecessors: [0x1cb]
Successors: []
---
0x1d3 PUSH1 0x0
0x1d5 DUP1
0x1d6 REVERT
---
0x1d3: V136 = 0x0
0x1d6: REVERT 0x0 0x0
---
Entry stack: [V11, V133]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V133]

================================

Block 0x1d7
[0x1d7:0x235]
---
Predecessors: [0x1cb]
Successors: [0x56f]
---
0x1d7 JUMPDEST
0x1d8 POP
0x1d9 PUSH2 0x236
0x1dc PUSH1 0x4
0x1de DUP1
0x1df CALLDATASIZE
0x1e0 SUB
0x1e1 DUP2
0x1e2 ADD
0x1e3 SWAP1
0x1e4 DUP1
0x1e5 DUP1
0x1e6 CALLDATALOAD
0x1e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1fc AND
0x1fd SWAP1
0x1fe PUSH1 0x20
0x200 ADD
0x201 SWAP1
0x202 SWAP3
0x203 SWAP2
0x204 SWAP1
0x205 DUP1
0x206 CALLDATALOAD
0x207 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21c AND
0x21d SWAP1
0x21e PUSH1 0x20
0x220 ADD
0x221 SWAP1
0x222 SWAP3
0x223 SWAP2
0x224 SWAP1
0x225 DUP1
0x226 CALLDATALOAD
0x227 SWAP1
0x228 PUSH1 0x20
0x22a ADD
0x22b SWAP1
0x22c SWAP3
0x22d SWAP2
0x22e SWAP1
0x22f POP
0x230 POP
0x231 POP
0x232 PUSH2 0x56f
0x235 JUMP
---
0x1d7: JUMPDEST 
0x1d9: V137 = 0x236
0x1dc: V138 = 0x4
0x1df: V139 = CALLDATASIZE
0x1e0: V140 = SUB V139 0x4
0x1e2: V141 = ADD 0x4 V140
0x1e6: V142 = CALLDATALOAD 0x4
0x1e7: V143 = 0xffffffffffffffffffffffffffffffffffffffff
0x1fc: V144 = AND 0xffffffffffffffffffffffffffffffffffffffff V142
0x1fe: V145 = 0x20
0x200: V146 = ADD 0x20 0x4
0x206: V147 = CALLDATALOAD 0x24
0x207: V148 = 0xffffffffffffffffffffffffffffffffffffffff
0x21c: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0x21e: V150 = 0x20
0x220: V151 = ADD 0x20 0x24
0x226: V152 = CALLDATALOAD 0x44
0x228: V153 = 0x20
0x22a: V154 = ADD 0x20 0x44
0x232: V155 = 0x56f
0x235: JUMP 0x56f
---
Entry stack: [V11, V133]
Stack pops: 1
Stack additions: [0x236, V144, V149, V152]
Exit stack: [V11, 0x236, V144, V149, V152]

================================

Block 0x236
[0x236:0x24f]
---
Predecessors: [0x8f9]
Successors: []
---
0x236 JUMPDEST
0x237 PUSH1 0x40
0x239 MLOAD
0x23a DUP1
0x23b DUP3
0x23c ISZERO
0x23d ISZERO
0x23e ISZERO
0x23f ISZERO
0x240 DUP2
0x241 MSTORE
0x242 PUSH1 0x20
0x244 ADD
0x245 SWAP2
0x246 POP
0x247 POP
0x248 PUSH1 0x40
0x24a MLOAD
0x24b DUP1
0x24c SWAP2
0x24d SUB
0x24e SWAP1
0x24f RETURN
---
0x236: JUMPDEST 
0x237: V156 = 0x40
0x239: V157 = M[0x40]
0x23c: V158 = ISZERO {0x0, 0x1}
0x23d: V159 = ISZERO V158
0x23e: V160 = ISZERO V159
0x23f: V161 = ISZERO V160
0x241: M[V157] = V161
0x242: V162 = 0x20
0x244: V163 = ADD 0x20 V157
0x248: V164 = 0x40
0x24a: V165 = M[0x40]
0x24d: V166 = SUB V163 V165
0x24f: RETURN V165 V166
---
Entry stack: [V11, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x250
[0x250:0x257]
---
Predecessors: [0x62]
Successors: [0x258, 0x25c]
---
0x250 JUMPDEST
0x251 CALLVALUE
0x252 DUP1
0x253 ISZERO
0x254 PUSH2 0x25c
0x257 JUMPI
---
0x250: JUMPDEST 
0x251: V167 = CALLVALUE
0x253: V168 = ISZERO V167
0x254: V169 = 0x25c
0x257: JUMPI 0x25c V168
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V167]
Exit stack: [V11, V167]

================================

Block 0x258
[0x258:0x25b]
---
Predecessors: [0x250]
Successors: []
---
0x258 PUSH1 0x0
0x25a DUP1
0x25b REVERT
---
0x258: V170 = 0x0
0x25b: REVERT 0x0 0x0
---
Entry stack: [V11, V167]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V167]

================================

Block 0x25c
[0x25c:0x264]
---
Predecessors: [0x250]
Successors: [0x900]
---
0x25c JUMPDEST
0x25d POP
0x25e PUSH2 0x265
0x261 PUSH2 0x900
0x264 JUMP
---
0x25c: JUMPDEST 
0x25e: V171 = 0x265
0x261: V172 = 0x900
0x264: JUMP 0x900
---
Entry stack: [V11, V167]
Stack pops: 1
Stack additions: [0x265]
Exit stack: [V11, 0x265]

================================

Block 0x265
[0x265:0x27a]
---
Predecessors: [0x900]
Successors: []
---
0x265 JUMPDEST
0x266 PUSH1 0x40
0x268 MLOAD
0x269 DUP1
0x26a DUP3
0x26b DUP2
0x26c MSTORE
0x26d PUSH1 0x20
0x26f ADD
0x270 SWAP2
0x271 POP
0x272 POP
0x273 PUSH1 0x40
0x275 MLOAD
0x276 DUP1
0x277 SWAP2
0x278 SUB
0x279 SWAP1
0x27a RETURN
---
0x265: JUMPDEST 
0x266: V173 = 0x40
0x268: V174 = M[0x40]
0x26c: M[V174] = 0x8
0x26d: V175 = 0x20
0x26f: V176 = ADD 0x20 V174
0x273: V177 = 0x40
0x275: V178 = M[0x40]
0x278: V179 = SUB V176 V178
0x27a: RETURN V178 V179
---
Entry stack: [V11, 0x265, 0x8]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x265]

================================

Block 0x27b
[0x27b:0x282]
---
Predecessors: [0x6d]
Successors: [0x283, 0x287]
---
0x27b JUMPDEST
0x27c CALLVALUE
0x27d DUP1
0x27e ISZERO
0x27f PUSH2 0x287
0x282 JUMPI
---
0x27b: JUMPDEST 
0x27c: V180 = CALLVALUE
0x27e: V181 = ISZERO V180
0x27f: V182 = 0x287
0x282: JUMPI 0x287 V181
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V180]
Exit stack: [V11, V180]

================================

Block 0x283
[0x283:0x286]
---
Predecessors: [0x27b]
Successors: []
---
0x283 PUSH1 0x0
0x285 DUP1
0x286 REVERT
---
0x283: V183 = 0x0
0x286: REVERT 0x0 0x0
---
Entry stack: [V11, V180]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V180]

================================

Block 0x287
[0x287:0x2bb]
---
Predecessors: [0x27b]
Successors: [0x905]
---
0x287 JUMPDEST
0x288 POP
0x289 PUSH2 0x2bc
0x28c PUSH1 0x4
0x28e DUP1
0x28f CALLDATASIZE
0x290 SUB
0x291 DUP2
0x292 ADD
0x293 SWAP1
0x294 DUP1
0x295 DUP1
0x296 CALLDATALOAD
0x297 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ac AND
0x2ad SWAP1
0x2ae PUSH1 0x20
0x2b0 ADD
0x2b1 SWAP1
0x2b2 SWAP3
0x2b3 SWAP2
0x2b4 SWAP1
0x2b5 POP
0x2b6 POP
0x2b7 POP
0x2b8 PUSH2 0x905
0x2bb JUMP
---
0x287: JUMPDEST 
0x289: V184 = 0x2bc
0x28c: V185 = 0x4
0x28f: V186 = CALLDATASIZE
0x290: V187 = SUB V186 0x4
0x292: V188 = ADD 0x4 V187
0x296: V189 = CALLDATALOAD 0x4
0x297: V190 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ac: V191 = AND 0xffffffffffffffffffffffffffffffffffffffff V189
0x2ae: V192 = 0x20
0x2b0: V193 = ADD 0x20 0x4
0x2b8: V194 = 0x905
0x2bb: JUMP 0x905
---
Entry stack: [V11, V180]
Stack pops: 1
Stack additions: [0x2bc, V191]
Exit stack: [V11, 0x2bc, V191]

================================

Block 0x2bc
[0x2bc:0x2d1]
---
Predecessors: [0x905]
Successors: []
---
0x2bc JUMPDEST
0x2bd PUSH1 0x40
0x2bf MLOAD
0x2c0 DUP1
0x2c1 DUP3
0x2c2 DUP2
0x2c3 MSTORE
0x2c4 PUSH1 0x20
0x2c6 ADD
0x2c7 SWAP2
0x2c8 POP
0x2c9 POP
0x2ca PUSH1 0x40
0x2cc MLOAD
0x2cd DUP1
0x2ce SWAP2
0x2cf SUB
0x2d0 SWAP1
0x2d1 RETURN
---
0x2bc: JUMPDEST 
0x2bd: V195 = 0x40
0x2bf: V196 = M[0x40]
0x2c3: M[V196] = V545
0x2c4: V197 = 0x20
0x2c6: V198 = ADD 0x20 V196
0x2ca: V199 = 0x40
0x2cc: V200 = M[0x40]
0x2cf: V201 = SUB V198 V200
0x2d1: RETURN V200 V201
---
Entry stack: [V11, V545]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x2d2
[0x2d2:0x2d9]
---
Predecessors: [0x78]
Successors: [0x2da, 0x2de]
---
0x2d2 JUMPDEST
0x2d3 CALLVALUE
0x2d4 DUP1
0x2d5 ISZERO
0x2d6 PUSH2 0x2de
0x2d9 JUMPI
---
0x2d2: JUMPDEST 
0x2d3: V202 = CALLVALUE
0x2d5: V203 = ISZERO V202
0x2d6: V204 = 0x2de
0x2d9: JUMPI 0x2de V203
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V202]
Exit stack: [V11, V202]

================================

Block 0x2da
[0x2da:0x2dd]
---
Predecessors: [0x2d2]
Successors: []
---
0x2da PUSH1 0x0
0x2dc DUP1
0x2dd REVERT
---
0x2da: V205 = 0x0
0x2dd: REVERT 0x0 0x0
---
Entry stack: [V11, V202]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V202]

================================

Block 0x2de
[0x2de:0x2e6]
---
Predecessors: [0x2d2]
Successors: [0x94e]
---
0x2de JUMPDEST
0x2df POP
0x2e0 PUSH2 0x2e7
0x2e3 PUSH2 0x94e
0x2e6 JUMP
---
0x2de: JUMPDEST 
0x2e0: V206 = 0x2e7
0x2e3: V207 = 0x94e
0x2e6: JUMP 0x94e
---
Entry stack: [V11, V202]
Stack pops: 1
Stack additions: [0x2e7]
Exit stack: [V11, 0x2e7]

================================

Block 0x2e7
[0x2e7:0x30b]
---
Predecessors: [0x94e]
Successors: [0x30c]
---
0x2e7 JUMPDEST
0x2e8 PUSH1 0x40
0x2ea MLOAD
0x2eb DUP1
0x2ec DUP1
0x2ed PUSH1 0x20
0x2ef ADD
0x2f0 DUP3
0x2f1 DUP2
0x2f2 SUB
0x2f3 DUP3
0x2f4 MSTORE
0x2f5 DUP4
0x2f6 DUP2
0x2f7 DUP2
0x2f8 MLOAD
0x2f9 DUP2
0x2fa MSTORE
0x2fb PUSH1 0x20
0x2fd ADD
0x2fe SWAP2
0x2ff POP
0x300 DUP1
0x301 MLOAD
0x302 SWAP1
0x303 PUSH1 0x20
0x305 ADD
0x306 SWAP1
0x307 DUP1
0x308 DUP4
0x309 DUP4
0x30a PUSH1 0x0
---
0x2e7: JUMPDEST 
0x2e8: V208 = 0x40
0x2ea: V209 = M[0x40]
0x2ed: V210 = 0x20
0x2ef: V211 = ADD 0x20 V209
0x2f2: V212 = SUB V211 V209
0x2f4: M[V209] = V212
0x2f8: V213 = M[V547]
0x2fa: M[V211] = V213
0x2fb: V214 = 0x20
0x2fd: V215 = ADD 0x20 V211
0x301: V216 = M[V547]
0x303: V217 = 0x20
0x305: V218 = ADD 0x20 V547
0x30a: V219 = 0x0
---
Entry stack: [V11, 0x2e7, V547]
Stack pops: 1
Stack additions: [S0, V209, V209, V215, V218, V216, V216, V215, V218, 0x0]
Exit stack: [V11, 0x2e7, V547, V209, V209, V215, V218, V216, V216, V215, V218, 0x0]

================================

Block 0x30c
[0x30c:0x314]
---
Predecessors: [0x2e7, 0x315]
Successors: [0x315, 0x327]
---
0x30c JUMPDEST
0x30d DUP4
0x30e DUP2
0x30f LT
0x310 ISZERO
0x311 PUSH2 0x327
0x314 JUMPI
---
0x30c: JUMPDEST 
0x30f: V220 = LT S0 V216
0x310: V221 = ISZERO V220
0x311: V222 = 0x327
0x314: JUMPI 0x327 V221
---
Entry stack: [V11, 0x2e7, V547, V209, V209, V215, V218, V216, V216, V215, V218, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x2e7, V547, V209, V209, V215, V218, V216, V216, V215, V218, S0]

================================

Block 0x315
[0x315:0x326]
---
Predecessors: [0x30c]
Successors: [0x30c]
---
0x315 DUP1
0x316 DUP3
0x317 ADD
0x318 MLOAD
0x319 DUP2
0x31a DUP5
0x31b ADD
0x31c MSTORE
0x31d PUSH1 0x20
0x31f DUP2
0x320 ADD
0x321 SWAP1
0x322 POP
0x323 PUSH2 0x30c
0x326 JUMP
---
0x317: V223 = ADD V218 S0
0x318: V224 = M[V223]
0x31b: V225 = ADD V215 S0
0x31c: M[V225] = V224
0x31d: V226 = 0x20
0x320: V227 = ADD S0 0x20
0x323: V228 = 0x30c
0x326: JUMP 0x30c
---
Entry stack: [V11, 0x2e7, V547, V209, V209, V215, V218, V216, V216, V215, V218, S0]
Stack pops: 3
Stack additions: [S2, S1, V227]
Exit stack: [V11, 0x2e7, V547, V209, V209, V215, V218, V216, V216, V215, V218, V227]

================================

Block 0x327
[0x327:0x33a]
---
Predecessors: [0x30c]
Successors: [0x33b, 0x354]
---
0x327 JUMPDEST
0x328 POP
0x329 POP
0x32a POP
0x32b POP
0x32c SWAP1
0x32d POP
0x32e SWAP1
0x32f DUP2
0x330 ADD
0x331 SWAP1
0x332 PUSH1 0x1f
0x334 AND
0x335 DUP1
0x336 ISZERO
0x337 PUSH2 0x354
0x33a JUMPI
---
0x327: JUMPDEST 
0x330: V229 = ADD V216 V215
0x332: V230 = 0x1f
0x334: V231 = AND 0x1f V216
0x336: V232 = ISZERO V231
0x337: V233 = 0x354
0x33a: JUMPI 0x354 V232
---
Entry stack: [V11, 0x2e7, V547, V209, V209, V215, V218, V216, V216, V215, V218, S0]
Stack pops: 7
Stack additions: [V229, V231]
Exit stack: [V11, 0x2e7, V547, V209, V209, V229, V231]

================================

Block 0x33b
[0x33b:0x353]
---
Predecessors: [0x327]
Successors: [0x354]
---
0x33b DUP1
0x33c DUP3
0x33d SUB
0x33e DUP1
0x33f MLOAD
0x340 PUSH1 0x1
0x342 DUP4
0x343 PUSH1 0x20
0x345 SUB
0x346 PUSH2 0x100
0x349 EXP
0x34a SUB
0x34b NOT
0x34c AND
0x34d DUP2
0x34e MSTORE
0x34f PUSH1 0x20
0x351 ADD
0x352 SWAP2
0x353 POP
---
0x33d: V234 = SUB V229 V231
0x33f: V235 = M[V234]
0x340: V236 = 0x1
0x343: V237 = 0x20
0x345: V238 = SUB 0x20 V231
0x346: V239 = 0x100
0x349: V240 = EXP 0x100 V238
0x34a: V241 = SUB V240 0x1
0x34b: V242 = NOT V241
0x34c: V243 = AND V242 V235
0x34e: M[V234] = V243
0x34f: V244 = 0x20
0x351: V245 = ADD 0x20 V234
---
Entry stack: [V11, 0x2e7, V547, V209, V209, V229, V231]
Stack pops: 2
Stack additions: [V245, S0]
Exit stack: [V11, 0x2e7, V547, V209, V209, V245, V231]

================================

Block 0x354
[0x354:0x361]
---
Predecessors: [0x327, 0x33b]
Successors: []
---
0x354 JUMPDEST
0x355 POP
0x356 SWAP3
0x357 POP
0x358 POP
0x359 POP
0x35a PUSH1 0x40
0x35c MLOAD
0x35d DUP1
0x35e SWAP2
0x35f SUB
0x360 SWAP1
0x361 RETURN
---
0x354: JUMPDEST 
0x35a: V246 = 0x40
0x35c: V247 = M[0x40]
0x35f: V248 = SUB S1 V247
0x361: RETURN V247 V248
---
Entry stack: [V11, 0x2e7, V547, V209, V209, S1, V231]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x2e7]

================================

Block 0x362
[0x362:0x369]
---
Predecessors: [0x83]
Successors: [0x36a, 0x36e]
---
0x362 JUMPDEST
0x363 CALLVALUE
0x364 DUP1
0x365 ISZERO
0x366 PUSH2 0x36e
0x369 JUMPI
---
0x362: JUMPDEST 
0x363: V249 = CALLVALUE
0x365: V250 = ISZERO V249
0x366: V251 = 0x36e
0x369: JUMPI 0x36e V250
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V249]
Exit stack: [V11, V249]

================================

Block 0x36a
[0x36a:0x36d]
---
Predecessors: [0x362]
Successors: []
---
0x36a PUSH1 0x0
0x36c DUP1
0x36d REVERT
---
0x36a: V252 = 0x0
0x36d: REVERT 0x0 0x0
---
Entry stack: [V11, V249]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V249]

================================

Block 0x36e
[0x36e:0x3ac]
---
Predecessors: [0x362]
Successors: [0x987]
---
0x36e JUMPDEST
0x36f POP
0x370 PUSH2 0x3ad
0x373 PUSH1 0x4
0x375 DUP1
0x376 CALLDATASIZE
0x377 SUB
0x378 DUP2
0x379 ADD
0x37a SWAP1
0x37b DUP1
0x37c DUP1
0x37d CALLDATALOAD
0x37e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x393 AND
0x394 SWAP1
0x395 PUSH1 0x20
0x397 ADD
0x398 SWAP1
0x399 SWAP3
0x39a SWAP2
0x39b SWAP1
0x39c DUP1
0x39d CALLDATALOAD
0x39e SWAP1
0x39f PUSH1 0x20
0x3a1 ADD
0x3a2 SWAP1
0x3a3 SWAP3
0x3a4 SWAP2
0x3a5 SWAP1
0x3a6 POP
0x3a7 POP
0x3a8 POP
0x3a9 PUSH2 0x987
0x3ac JUMP
---
0x36e: JUMPDEST 
0x370: V253 = 0x3ad
0x373: V254 = 0x4
0x376: V255 = CALLDATASIZE
0x377: V256 = SUB V255 0x4
0x379: V257 = ADD 0x4 V256
0x37d: V258 = CALLDATALOAD 0x4
0x37e: V259 = 0xffffffffffffffffffffffffffffffffffffffff
0x393: V260 = AND 0xffffffffffffffffffffffffffffffffffffffff V258
0x395: V261 = 0x20
0x397: V262 = ADD 0x20 0x4
0x39d: V263 = CALLDATALOAD 0x24
0x39f: V264 = 0x20
0x3a1: V265 = ADD 0x20 0x24
0x3a9: V266 = 0x987
0x3ac: JUMP 0x987
---
Entry stack: [V11, V249]
Stack pops: 1
Stack additions: [0x3ad, V260, V263]
Exit stack: [V11, 0x3ad, V260, V263]

================================

Block 0x3ad
[0x3ad:0x3c6]
---
Predecessors: [0xb7a]
Successors: []
---
0x3ad JUMPDEST
0x3ae PUSH1 0x40
0x3b0 MLOAD
0x3b1 DUP1
0x3b2 DUP3
0x3b3 ISZERO
0x3b4 ISZERO
0x3b5 ISZERO
0x3b6 ISZERO
0x3b7 DUP2
0x3b8 MSTORE
0x3b9 PUSH1 0x20
0x3bb ADD
0x3bc SWAP2
0x3bd POP
0x3be POP
0x3bf PUSH1 0x40
0x3c1 MLOAD
0x3c2 DUP1
0x3c3 SWAP2
0x3c4 SUB
0x3c5 SWAP1
0x3c6 RETURN
---
0x3ad: JUMPDEST 
0x3ae: V267 = 0x40
0x3b0: V268 = M[0x40]
0x3b3: V269 = ISZERO {0x0, 0x1}
0x3b4: V270 = ISZERO V269
0x3b5: V271 = ISZERO V270
0x3b6: V272 = ISZERO V271
0x3b8: M[V268] = V272
0x3b9: V273 = 0x20
0x3bb: V274 = ADD 0x20 V268
0x3bf: V275 = 0x40
0x3c1: V276 = M[0x40]
0x3c4: V277 = SUB V274 V276
0x3c6: RETURN V276 V277
---
Entry stack: [V11, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S1]

================================

Block 0x3c7
[0x3c7:0x3ce]
---
Predecessors: [0x8e]
Successors: [0x3cf, 0x3d3]
---
0x3c7 JUMPDEST
0x3c8 CALLVALUE
0x3c9 DUP1
0x3ca ISZERO
0x3cb PUSH2 0x3d3
0x3ce JUMPI
---
0x3c7: JUMPDEST 
0x3c8: V278 = CALLVALUE
0x3ca: V279 = ISZERO V278
0x3cb: V280 = 0x3d3
0x3ce: JUMPI 0x3d3 V279
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V278]
Exit stack: [V11, V278]

================================

Block 0x3cf
[0x3cf:0x3d2]
---
Predecessors: [0x3c7]
Successors: []
---
0x3cf PUSH1 0x0
0x3d1 DUP1
0x3d2 REVERT
---
0x3cf: V281 = 0x0
0x3d2: REVERT 0x0 0x0
---
Entry stack: [V11, V278]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V278]

================================

Block 0x3d3
[0x3d3:0x427]
---
Predecessors: [0x3c7]
Successors: [0xb80]
---
0x3d3 JUMPDEST
0x3d4 POP
0x3d5 PUSH2 0x428
0x3d8 PUSH1 0x4
0x3da DUP1
0x3db CALLDATASIZE
0x3dc SUB
0x3dd DUP2
0x3de ADD
0x3df SWAP1
0x3e0 DUP1
0x3e1 DUP1
0x3e2 CALLDATALOAD
0x3e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f8 AND
0x3f9 SWAP1
0x3fa PUSH1 0x20
0x3fc ADD
0x3fd SWAP1
0x3fe SWAP3
0x3ff SWAP2
0x400 SWAP1
0x401 DUP1
0x402 CALLDATALOAD
0x403 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x418 AND
0x419 SWAP1
0x41a PUSH1 0x20
0x41c ADD
0x41d SWAP1
0x41e SWAP3
0x41f SWAP2
0x420 SWAP1
0x421 POP
0x422 POP
0x423 POP
0x424 PUSH2 0xb80
0x427 JUMP
---
0x3d3: JUMPDEST 
0x3d5: V282 = 0x428
0x3d8: V283 = 0x4
0x3db: V284 = CALLDATASIZE
0x3dc: V285 = SUB V284 0x4
0x3de: V286 = ADD 0x4 V285
0x3e2: V287 = CALLDATALOAD 0x4
0x3e3: V288 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f8: V289 = AND 0xffffffffffffffffffffffffffffffffffffffff V287
0x3fa: V290 = 0x20
0x3fc: V291 = ADD 0x20 0x4
0x402: V292 = CALLDATALOAD 0x24
0x403: V293 = 0xffffffffffffffffffffffffffffffffffffffff
0x418: V294 = AND 0xffffffffffffffffffffffffffffffffffffffff V292
0x41a: V295 = 0x20
0x41c: V296 = ADD 0x20 0x24
0x424: V297 = 0xb80
0x427: JUMP 0xb80
---
Entry stack: [V11, V278]
Stack pops: 1
Stack additions: [0x428, V289, V294]
Exit stack: [V11, 0x428, V289, V294]

================================

Block 0x428
[0x428:0x43d]
---
Predecessors: [0xb80]
Successors: []
---
0x428 JUMPDEST
0x429 PUSH1 0x40
0x42b MLOAD
0x42c DUP1
0x42d DUP3
0x42e DUP2
0x42f MSTORE
0x430 PUSH1 0x20
0x432 ADD
0x433 SWAP2
0x434 POP
0x435 POP
0x436 PUSH1 0x40
0x438 MLOAD
0x439 DUP1
0x43a SWAP2
0x43b SUB
0x43c SWAP1
0x43d RETURN
---
0x428: JUMPDEST 
0x429: V298 = 0x40
0x42b: V299 = M[0x40]
0x42f: M[V299] = V677
0x430: V300 = 0x20
0x432: V301 = ADD 0x20 V299
0x436: V302 = 0x40
0x438: V303 = M[0x40]
0x43b: V304 = SUB V301 V303
0x43d: RETURN V303 V304
---
Entry stack: [V11, V677]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x43e
[0x43e:0x476]
---
Predecessors: [0xb7]
Successors: [0xc0]
---
0x43e JUMPDEST
0x43f PUSH1 0x40
0x441 DUP1
0x442 MLOAD
0x443 SWAP1
0x444 DUP2
0x445 ADD
0x446 PUSH1 0x40
0x448 MSTORE
0x449 DUP1
0x44a PUSH1 0x9
0x44c DUP2
0x44d MSTORE
0x44e PUSH1 0x20
0x450 ADD
0x451 PUSH32 0x4c696e6b546f6b656e0000000000000000000000000000000000000000000000
0x472 DUP2
0x473 MSTORE
0x474 POP
0x475 DUP2
0x476 JUMP
---
0x43e: JUMPDEST 
0x43f: V305 = 0x40
0x442: V306 = M[0x40]
0x445: V307 = ADD V306 0x40
0x446: V308 = 0x40
0x448: M[0x40] = V307
0x44a: V309 = 0x9
0x44d: M[V306] = 0x9
0x44e: V310 = 0x20
0x450: V311 = ADD 0x20 V306
0x451: V312 = 0x4c696e6b546f6b656e0000000000000000000000000000000000000000000000
0x473: M[V311] = 0x4c696e6b546f6b656e0000000000000000000000000000000000000000000000
0x476: JUMP 0xc0
---
Entry stack: [V11, 0xc0]
Stack pops: 1
Stack additions: [S0, V306]
Exit stack: [V11, 0xc0, V306]

================================

Block 0x477
[0x477:0x568]
---
Predecessors: [0x147]
Successors: [0x186]
---
0x477 JUMPDEST
0x478 PUSH1 0x0
0x47a DUP2
0x47b PUSH1 0x2
0x47d PUSH1 0x0
0x47f CALLER
0x480 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x495 AND
0x496 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ab AND
0x4ac DUP2
0x4ad MSTORE
0x4ae PUSH1 0x20
0x4b0 ADD
0x4b1 SWAP1
0x4b2 DUP2
0x4b3 MSTORE
0x4b4 PUSH1 0x20
0x4b6 ADD
0x4b7 PUSH1 0x0
0x4b9 SHA3
0x4ba PUSH1 0x0
0x4bc DUP6
0x4bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4d2 AND
0x4d3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4e8 AND
0x4e9 DUP2
0x4ea MSTORE
0x4eb PUSH1 0x20
0x4ed ADD
0x4ee SWAP1
0x4ef DUP2
0x4f0 MSTORE
0x4f1 PUSH1 0x20
0x4f3 ADD
0x4f4 PUSH1 0x0
0x4f6 SHA3
0x4f7 DUP2
0x4f8 SWAP1
0x4f9 SSTORE
0x4fa POP
0x4fb DUP3
0x4fc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x511 AND
0x512 CALLER
0x513 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x528 AND
0x529 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x54a DUP5
0x54b PUSH1 0x40
0x54d MLOAD
0x54e DUP1
0x54f DUP3
0x550 DUP2
0x551 MSTORE
0x552 PUSH1 0x20
0x554 ADD
0x555 SWAP2
0x556 POP
0x557 POP
0x558 PUSH1 0x40
0x55a MLOAD
0x55b DUP1
0x55c SWAP2
0x55d SUB
0x55e SWAP1
0x55f LOG3
0x560 PUSH1 0x1
0x562 SWAP1
0x563 POP
0x564 SWAP3
0x565 SWAP2
0x566 POP
0x567 POP
0x568 JUMP
---
0x477: JUMPDEST 
0x478: V313 = 0x0
0x47b: V314 = 0x2
0x47d: V315 = 0x0
0x47f: V316 = CALLER
0x480: V317 = 0xffffffffffffffffffffffffffffffffffffffff
0x495: V318 = AND 0xffffffffffffffffffffffffffffffffffffffff V316
0x496: V319 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ab: V320 = AND 0xffffffffffffffffffffffffffffffffffffffff V318
0x4ad: M[0x0] = V320
0x4ae: V321 = 0x20
0x4b0: V322 = ADD 0x20 0x0
0x4b3: M[0x20] = 0x2
0x4b4: V323 = 0x20
0x4b6: V324 = ADD 0x20 0x20
0x4b7: V325 = 0x0
0x4b9: V326 = SHA3 0x0 0x40
0x4ba: V327 = 0x0
0x4bd: V328 = 0xffffffffffffffffffffffffffffffffffffffff
0x4d2: V329 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x4d3: V330 = 0xffffffffffffffffffffffffffffffffffffffff
0x4e8: V331 = AND 0xffffffffffffffffffffffffffffffffffffffff V329
0x4ea: M[0x0] = V331
0x4eb: V332 = 0x20
0x4ed: V333 = ADD 0x20 0x0
0x4f0: M[0x20] = V326
0x4f1: V334 = 0x20
0x4f3: V335 = ADD 0x20 0x20
0x4f4: V336 = 0x0
0x4f6: V337 = SHA3 0x0 0x40
0x4f9: S[V337] = V105
0x4fc: V338 = 0xffffffffffffffffffffffffffffffffffffffff
0x511: V339 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x512: V340 = CALLER
0x513: V341 = 0xffffffffffffffffffffffffffffffffffffffff
0x528: V342 = AND 0xffffffffffffffffffffffffffffffffffffffff V340
0x529: V343 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x54b: V344 = 0x40
0x54d: V345 = M[0x40]
0x551: M[V345] = V105
0x552: V346 = 0x20
0x554: V347 = ADD 0x20 V345
0x558: V348 = 0x40
0x55a: V349 = M[0x40]
0x55d: V350 = SUB V347 V349
0x55f: LOG V349 V350 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V342 V339
0x560: V351 = 0x1
0x568: JUMP 0x186
---
Entry stack: [V11, 0x186, V102, V105]
Stack pops: 3
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x569
[0x569:0x56e]
---
Predecessors: [0x1ac]
Successors: [0x1b5]
---
0x569 JUMPDEST
0x56a PUSH1 0x3
0x56c SLOAD
0x56d DUP2
0x56e JUMP
---
0x569: JUMPDEST 
0x56a: V352 = 0x3
0x56c: V353 = S[0x3]
0x56e: JUMP 0x1b5
---
Entry stack: [V11, 0x1b5]
Stack pops: 1
Stack additions: [S0, V353]
Exit stack: [V11, 0x1b5, V353]

================================

Block 0x56f
[0x56f:0x5ba]
---
Predecessors: [0x1d7]
Successors: [0x5bb, 0x63c]
---
0x56f JUMPDEST
0x570 PUSH1 0x0
0x572 DUP2
0x573 PUSH1 0x1
0x575 PUSH1 0x0
0x577 DUP7
0x578 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x58d AND
0x58e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5a3 AND
0x5a4 DUP2
0x5a5 MSTORE
0x5a6 PUSH1 0x20
0x5a8 ADD
0x5a9 SWAP1
0x5aa DUP2
0x5ab MSTORE
0x5ac PUSH1 0x20
0x5ae ADD
0x5af PUSH1 0x0
0x5b1 SHA3
0x5b2 SLOAD
0x5b3 LT
0x5b4 ISZERO
0x5b5 DUP1
0x5b6 ISZERO
0x5b7 PUSH2 0x63c
0x5ba JUMPI
---
0x56f: JUMPDEST 
0x570: V354 = 0x0
0x573: V355 = 0x1
0x575: V356 = 0x0
0x578: V357 = 0xffffffffffffffffffffffffffffffffffffffff
0x58d: V358 = AND 0xffffffffffffffffffffffffffffffffffffffff V144
0x58e: V359 = 0xffffffffffffffffffffffffffffffffffffffff
0x5a3: V360 = AND 0xffffffffffffffffffffffffffffffffffffffff V358
0x5a5: M[0x0] = V360
0x5a6: V361 = 0x20
0x5a8: V362 = ADD 0x20 0x0
0x5ab: M[0x20] = 0x1
0x5ac: V363 = 0x20
0x5ae: V364 = ADD 0x20 0x20
0x5af: V365 = 0x0
0x5b1: V366 = SHA3 0x0 0x40
0x5b2: V367 = S[V366]
0x5b3: V368 = LT V367 V152
0x5b4: V369 = ISZERO V368
0x5b6: V370 = ISZERO V369
0x5b7: V371 = 0x63c
0x5ba: JUMPI 0x63c V370
---
Entry stack: [V11, 0x236, V144, V149, V152]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, V369]
Exit stack: [V11, 0x236, V144, V149, V152, 0x0, V369]

================================

Block 0x5bb
[0x5bb:0x63b]
---
Predecessors: [0x56f]
Successors: [0x63c]
---
0x5bb POP
0x5bc DUP2
0x5bd PUSH1 0x2
0x5bf PUSH1 0x0
0x5c1 DUP7
0x5c2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d7 AND
0x5d8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5ed AND
0x5ee DUP2
0x5ef MSTORE
0x5f0 PUSH1 0x20
0x5f2 ADD
0x5f3 SWAP1
0x5f4 DUP2
0x5f5 MSTORE
0x5f6 PUSH1 0x20
0x5f8 ADD
0x5f9 PUSH1 0x0
0x5fb SHA3
0x5fc PUSH1 0x0
0x5fe CALLER
0x5ff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x614 AND
0x615 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x62a AND
0x62b DUP2
0x62c MSTORE
0x62d PUSH1 0x20
0x62f ADD
0x630 SWAP1
0x631 DUP2
0x632 MSTORE
0x633 PUSH1 0x20
0x635 ADD
0x636 PUSH1 0x0
0x638 SHA3
0x639 SLOAD
0x63a LT
0x63b ISZERO
---
0x5bd: V372 = 0x2
0x5bf: V373 = 0x0
0x5c2: V374 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d7: V375 = AND 0xffffffffffffffffffffffffffffffffffffffff V144
0x5d8: V376 = 0xffffffffffffffffffffffffffffffffffffffff
0x5ed: V377 = AND 0xffffffffffffffffffffffffffffffffffffffff V375
0x5ef: M[0x0] = V377
0x5f0: V378 = 0x20
0x5f2: V379 = ADD 0x20 0x0
0x5f5: M[0x20] = 0x2
0x5f6: V380 = 0x20
0x5f8: V381 = ADD 0x20 0x20
0x5f9: V382 = 0x0
0x5fb: V383 = SHA3 0x0 0x40
0x5fc: V384 = 0x0
0x5fe: V385 = CALLER
0x5ff: V386 = 0xffffffffffffffffffffffffffffffffffffffff
0x614: V387 = AND 0xffffffffffffffffffffffffffffffffffffffff V385
0x615: V388 = 0xffffffffffffffffffffffffffffffffffffffff
0x62a: V389 = AND 0xffffffffffffffffffffffffffffffffffffffff V387
0x62c: M[0x0] = V389
0x62d: V390 = 0x20
0x62f: V391 = ADD 0x20 0x0
0x632: M[0x20] = V383
0x633: V392 = 0x20
0x635: V393 = ADD 0x20 0x20
0x636: V394 = 0x0
0x638: V395 = SHA3 0x0 0x40
0x639: V396 = S[V395]
0x63a: V397 = LT V396 V152
0x63b: V398 = ISZERO V397
---
Entry stack: [V11, 0x236, V144, V149, V152, 0x0, V369]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V398]
Exit stack: [V11, 0x236, V144, V149, V152, 0x0, V398]

================================

Block 0x63c
[0x63c:0x642]
---
Predecessors: [0x56f, 0x5bb]
Successors: [0x643, 0x648]
---
0x63c JUMPDEST
0x63d DUP1
0x63e ISZERO
0x63f PUSH2 0x648
0x642 JUMPI
---
0x63c: JUMPDEST 
0x63e: V399 = ISZERO S0
0x63f: V400 = 0x648
0x642: JUMPI 0x648 V399
---
Entry stack: [V11, 0x236, V144, V149, V152, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x236, V144, V149, V152, 0x0, S0]

================================

Block 0x643
[0x643:0x647]
---
Predecessors: [0x63c]
Successors: [0x648]
---
0x643 POP
0x644 PUSH1 0x0
0x646 DUP3
0x647 GT
---
0x644: V401 = 0x0
0x647: V402 = GT V152 0x0
---
Entry stack: [V11, 0x236, V144, V149, V152, 0x0, S0]
Stack pops: 3
Stack additions: [S2, S1, V402]
Exit stack: [V11, 0x236, V144, V149, V152, 0x0, V402]

================================

Block 0x648
[0x648:0x64d]
---
Predecessors: [0x63c, 0x643]
Successors: [0x64e, 0x8f4]
---
0x648 JUMPDEST
0x649 ISZERO
0x64a PUSH2 0x8f4
0x64d JUMPI
---
0x648: JUMPDEST 
0x649: V403 = ISZERO S0
0x64a: V404 = 0x8f4
0x64d: JUMPI 0x8f4 V403
---
Entry stack: [V11, 0x236, V144, V149, V152, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x236, V144, V149, V152, 0x0]

================================

Block 0x64e
[0x64e:0x69e]
---
Predecessors: [0x648]
Successors: [0xc07]
---
0x64e PUSH2 0x69f
0x651 DUP3
0x652 PUSH1 0x1
0x654 PUSH1 0x0
0x656 DUP8
0x657 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x66c AND
0x66d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x682 AND
0x683 DUP2
0x684 MSTORE
0x685 PUSH1 0x20
0x687 ADD
0x688 SWAP1
0x689 DUP2
0x68a MSTORE
0x68b PUSH1 0x20
0x68d ADD
0x68e PUSH1 0x0
0x690 SHA3
0x691 SLOAD
0x692 PUSH2 0xc07
0x695 SWAP1
0x696 SWAP2
0x697 SWAP1
0x698 PUSH4 0xffffffff
0x69d AND
0x69e JUMP
---
0x64e: V405 = 0x69f
0x652: V406 = 0x1
0x654: V407 = 0x0
0x657: V408 = 0xffffffffffffffffffffffffffffffffffffffff
0x66c: V409 = AND 0xffffffffffffffffffffffffffffffffffffffff V144
0x66d: V410 = 0xffffffffffffffffffffffffffffffffffffffff
0x682: V411 = AND 0xffffffffffffffffffffffffffffffffffffffff V409
0x684: M[0x0] = V411
0x685: V412 = 0x20
0x687: V413 = ADD 0x20 0x0
0x68a: M[0x20] = 0x1
0x68b: V414 = 0x20
0x68d: V415 = ADD 0x20 0x20
0x68e: V416 = 0x0
0x690: V417 = SHA3 0x0 0x40
0x691: V418 = S[V417]
0x692: V419 = 0xc07
0x698: V420 = 0xffffffff
0x69d: V421 = AND 0xffffffff 0xc07
0x69e: JUMP 0xc07
---
Entry stack: [V11, 0x236, V144, V149, V152, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x69f, V418, S1]
Exit stack: [V11, 0x236, V144, V149, V152, 0x0, 0x69f, V418, V152]

================================

Block 0x69f
[0x69f:0x770]
---
Predecessors: [0xc15]
Successors: [0xc07]
---
0x69f JUMPDEST
0x6a0 PUSH1 0x1
0x6a2 PUSH1 0x0
0x6a4 DUP7
0x6a5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6ba AND
0x6bb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6d0 AND
0x6d1 DUP2
0x6d2 MSTORE
0x6d3 PUSH1 0x20
0x6d5 ADD
0x6d6 SWAP1
0x6d7 DUP2
0x6d8 MSTORE
0x6d9 PUSH1 0x20
0x6db ADD
0x6dc PUSH1 0x0
0x6de SHA3
0x6df DUP2
0x6e0 SWAP1
0x6e1 SSTORE
0x6e2 POP
0x6e3 PUSH2 0x771
0x6e6 DUP3
0x6e7 PUSH1 0x2
0x6e9 PUSH1 0x0
0x6eb DUP8
0x6ec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x701 AND
0x702 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x717 AND
0x718 DUP2
0x719 MSTORE
0x71a PUSH1 0x20
0x71c ADD
0x71d SWAP1
0x71e DUP2
0x71f MSTORE
0x720 PUSH1 0x20
0x722 ADD
0x723 PUSH1 0x0
0x725 SHA3
0x726 PUSH1 0x0
0x728 CALLER
0x729 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x73e AND
0x73f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x754 AND
0x755 DUP2
0x756 MSTORE
0x757 PUSH1 0x20
0x759 ADD
0x75a SWAP1
0x75b DUP2
0x75c MSTORE
0x75d PUSH1 0x20
0x75f ADD
0x760 PUSH1 0x0
0x762 SHA3
0x763 SLOAD
0x764 PUSH2 0xc07
0x767 SWAP1
0x768 SWAP2
0x769 SWAP1
0x76a PUSH4 0xffffffff
0x76f AND
0x770 JUMP
---
0x69f: JUMPDEST 
0x6a0: V422 = 0x1
0x6a2: V423 = 0x0
0x6a5: V424 = 0xffffffffffffffffffffffffffffffffffffffff
0x6ba: V425 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x6bb: V426 = 0xffffffffffffffffffffffffffffffffffffffff
0x6d0: V427 = AND 0xffffffffffffffffffffffffffffffffffffffff V425
0x6d2: M[0x0] = V427
0x6d3: V428 = 0x20
0x6d5: V429 = ADD 0x20 0x0
0x6d8: M[0x20] = 0x1
0x6d9: V430 = 0x20
0x6db: V431 = ADD 0x20 0x20
0x6dc: V432 = 0x0
0x6de: V433 = SHA3 0x0 0x40
0x6e1: S[V433] = V684
0x6e3: V434 = 0x771
0x6e7: V435 = 0x2
0x6e9: V436 = 0x0
0x6ec: V437 = 0xffffffffffffffffffffffffffffffffffffffff
0x701: V438 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x702: V439 = 0xffffffffffffffffffffffffffffffffffffffff
0x717: V440 = AND 0xffffffffffffffffffffffffffffffffffffffff V438
0x719: M[0x0] = V440
0x71a: V441 = 0x20
0x71c: V442 = ADD 0x20 0x0
0x71f: M[0x20] = 0x2
0x720: V443 = 0x20
0x722: V444 = ADD 0x20 0x20
0x723: V445 = 0x0
0x725: V446 = SHA3 0x0 0x40
0x726: V447 = 0x0
0x728: V448 = CALLER
0x729: V449 = 0xffffffffffffffffffffffffffffffffffffffff
0x73e: V450 = AND 0xffffffffffffffffffffffffffffffffffffffff V448
0x73f: V451 = 0xffffffffffffffffffffffffffffffffffffffff
0x754: V452 = AND 0xffffffffffffffffffffffffffffffffffffffff V450
0x756: M[0x0] = V452
0x757: V453 = 0x20
0x759: V454 = ADD 0x20 0x0
0x75c: M[0x20] = V446
0x75d: V455 = 0x20
0x75f: V456 = ADD 0x20 0x20
0x760: V457 = 0x0
0x762: V458 = SHA3 0x0 0x40
0x763: V459 = S[V458]
0x764: V460 = 0xc07
0x76a: V461 = 0xffffffff
0x76f: V462 = AND 0xffffffff 0xc07
0x770: JUMP 0xc07
---
Entry stack: [V11, S5, S4, S3, S2, 0x0, V684]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, 0x771, V459, S2]
Exit stack: [V11, S5, S4, S3, S2, 0x0, 0x771, V459, S2]

================================

Block 0x771
[0x771:0x842]
---
Predecessors: [0xc15]
Successors: [0xc20]
---
0x771 JUMPDEST
0x772 PUSH1 0x2
0x774 PUSH1 0x0
0x776 DUP7
0x777 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x78c AND
0x78d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7a2 AND
0x7a3 DUP2
0x7a4 MSTORE
0x7a5 PUSH1 0x20
0x7a7 ADD
0x7a8 SWAP1
0x7a9 DUP2
0x7aa MSTORE
0x7ab PUSH1 0x20
0x7ad ADD
0x7ae PUSH1 0x0
0x7b0 SHA3
0x7b1 PUSH1 0x0
0x7b3 CALLER
0x7b4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7c9 AND
0x7ca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7df AND
0x7e0 DUP2
0x7e1 MSTORE
0x7e2 PUSH1 0x20
0x7e4 ADD
0x7e5 SWAP1
0x7e6 DUP2
0x7e7 MSTORE
0x7e8 PUSH1 0x20
0x7ea ADD
0x7eb PUSH1 0x0
0x7ed SHA3
0x7ee DUP2
0x7ef SWAP1
0x7f0 SSTORE
0x7f1 POP
0x7f2 PUSH2 0x843
0x7f5 DUP3
0x7f6 PUSH1 0x1
0x7f8 PUSH1 0x0
0x7fa DUP7
0x7fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x810 AND
0x811 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x826 AND
0x827 DUP2
0x828 MSTORE
0x829 PUSH1 0x20
0x82b ADD
0x82c SWAP1
0x82d DUP2
0x82e MSTORE
0x82f PUSH1 0x20
0x831 ADD
0x832 PUSH1 0x0
0x834 SHA3
0x835 SLOAD
0x836 PUSH2 0xc20
0x839 SWAP1
0x83a SWAP2
0x83b SWAP1
0x83c PUSH4 0xffffffff
0x841 AND
0x842 JUMP
---
0x771: JUMPDEST 
0x772: V463 = 0x2
0x774: V464 = 0x0
0x777: V465 = 0xffffffffffffffffffffffffffffffffffffffff
0x78c: V466 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x78d: V467 = 0xffffffffffffffffffffffffffffffffffffffff
0x7a2: V468 = AND 0xffffffffffffffffffffffffffffffffffffffff V466
0x7a4: M[0x0] = V468
0x7a5: V469 = 0x20
0x7a7: V470 = ADD 0x20 0x0
0x7aa: M[0x20] = 0x2
0x7ab: V471 = 0x20
0x7ad: V472 = ADD 0x20 0x20
0x7ae: V473 = 0x0
0x7b0: V474 = SHA3 0x0 0x40
0x7b1: V475 = 0x0
0x7b3: V476 = CALLER
0x7b4: V477 = 0xffffffffffffffffffffffffffffffffffffffff
0x7c9: V478 = AND 0xffffffffffffffffffffffffffffffffffffffff V476
0x7ca: V479 = 0xffffffffffffffffffffffffffffffffffffffff
0x7df: V480 = AND 0xffffffffffffffffffffffffffffffffffffffff V478
0x7e1: M[0x0] = V480
0x7e2: V481 = 0x20
0x7e4: V482 = ADD 0x20 0x0
0x7e7: M[0x20] = V474
0x7e8: V483 = 0x20
0x7ea: V484 = ADD 0x20 0x20
0x7eb: V485 = 0x0
0x7ed: V486 = SHA3 0x0 0x40
0x7f0: S[V486] = V684
0x7f2: V487 = 0x843
0x7f6: V488 = 0x1
0x7f8: V489 = 0x0
0x7fb: V490 = 0xffffffffffffffffffffffffffffffffffffffff
0x810: V491 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x811: V492 = 0xffffffffffffffffffffffffffffffffffffffff
0x826: V493 = AND 0xffffffffffffffffffffffffffffffffffffffff V491
0x828: M[0x0] = V493
0x829: V494 = 0x20
0x82b: V495 = ADD 0x20 0x0
0x82e: M[0x20] = 0x1
0x82f: V496 = 0x20
0x831: V497 = ADD 0x20 0x20
0x832: V498 = 0x0
0x834: V499 = SHA3 0x0 0x40
0x835: V500 = S[V499]
0x836: V501 = 0xc20
0x83c: V502 = 0xffffffff
0x841: V503 = AND 0xffffffff 0xc20
0x842: JUMP 0xc20
---
Entry stack: [V11, S5, S4, S3, S2, 0x0, V684]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, 0x843, V500, S2]
Exit stack: [V11, S5, S4, S3, S2, 0x0, 0x843, V500, S2]

================================

Block 0x843
[0x843:0x8f3]
---
Predecessors: [0xc34]
Successors: [0x8f9]
---
0x843 JUMPDEST
0x844 PUSH1 0x1
0x846 PUSH1 0x0
0x848 DUP6
0x849 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x85e AND
0x85f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x874 AND
0x875 DUP2
0x876 MSTORE
0x877 PUSH1 0x20
0x879 ADD
0x87a SWAP1
0x87b DUP2
0x87c MSTORE
0x87d PUSH1 0x20
0x87f ADD
0x880 PUSH1 0x0
0x882 SHA3
0x883 DUP2
0x884 SWAP1
0x885 SSTORE
0x886 POP
0x887 DUP3
0x888 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x89d AND
0x89e DUP5
0x89f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8b4 AND
0x8b5 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x8d6 DUP5
0x8d7 PUSH1 0x40
0x8d9 MLOAD
0x8da DUP1
0x8db DUP3
0x8dc DUP2
0x8dd MSTORE
0x8de PUSH1 0x20
0x8e0 ADD
0x8e1 SWAP2
0x8e2 POP
0x8e3 POP
0x8e4 PUSH1 0x40
0x8e6 MLOAD
0x8e7 DUP1
0x8e8 SWAP2
0x8e9 SUB
0x8ea SWAP1
0x8eb LOG3
0x8ec PUSH1 0x1
0x8ee SWAP1
0x8ef POP
0x8f0 PUSH2 0x8f9
0x8f3 JUMP
---
0x843: JUMPDEST 
0x844: V504 = 0x1
0x846: V505 = 0x0
0x849: V506 = 0xffffffffffffffffffffffffffffffffffffffff
0x85e: V507 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x85f: V508 = 0xffffffffffffffffffffffffffffffffffffffff
0x874: V509 = AND 0xffffffffffffffffffffffffffffffffffffffff V507
0x876: M[0x0] = V509
0x877: V510 = 0x20
0x879: V511 = ADD 0x20 0x0
0x87c: M[0x20] = 0x1
0x87d: V512 = 0x20
0x87f: V513 = ADD 0x20 0x20
0x880: V514 = 0x0
0x882: V515 = SHA3 0x0 0x40
0x885: S[V515] = S0
0x888: V516 = 0xffffffffffffffffffffffffffffffffffffffff
0x89d: V517 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x89f: V518 = 0xffffffffffffffffffffffffffffffffffffffff
0x8b4: V519 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x8b5: V520 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x8d7: V521 = 0x40
0x8d9: V522 = M[0x40]
0x8dd: M[V522] = S2
0x8de: V523 = 0x20
0x8e0: V524 = ADD 0x20 V522
0x8e4: V525 = 0x40
0x8e6: V526 = M[0x40]
0x8e9: V527 = SUB V524 V526
0x8eb: LOG V526 V527 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V519 V517
0x8ec: V528 = 0x1
0x8f0: V529 = 0x8f9
0x8f3: JUMP 0x8f9
---
Entry stack: [V11, S5, S4, S3, S2, 0x0, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, 0x1]
Exit stack: [V11, S5, S4, S3, S2, 0x1]

================================

Block 0x8f4
[0x8f4:0x8f8]
---
Predecessors: [0x648]
Successors: [0x8f9]
---
0x8f4 JUMPDEST
0x8f5 PUSH1 0x0
0x8f7 SWAP1
0x8f8 POP
---
0x8f4: JUMPDEST 
0x8f5: V530 = 0x0
---
Entry stack: [V11, 0x236, V144, V149, V152, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x236, V144, V149, V152, 0x0]

================================

Block 0x8f9
[0x8f9:0x8ff]
---
Predecessors: [0x843, 0x8f4]
Successors: [0x236]
---
0x8f9 JUMPDEST
0x8fa SWAP4
0x8fb SWAP3
0x8fc POP
0x8fd POP
0x8fe POP
0x8ff JUMP
---
0x8f9: JUMPDEST 
0x8ff: JUMP S4
---
Entry stack: [V11, S4, S3, S2, S1, {0x0, 0x1}]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V11, {0x0, 0x1}]

================================

Block 0x900
[0x900:0x904]
---
Predecessors: [0x25c]
Successors: [0x265]
---
0x900 JUMPDEST
0x901 PUSH1 0x8
0x903 DUP2
0x904 JUMP
---
0x900: JUMPDEST 
0x901: V531 = 0x8
0x904: JUMP 0x265
---
Entry stack: [V11, 0x265]
Stack pops: 1
Stack additions: [S0, 0x8]
Exit stack: [V11, 0x265, 0x8]

================================

Block 0x905
[0x905:0x94d]
---
Predecessors: [0x287]
Successors: [0x2bc]
---
0x905 JUMPDEST
0x906 PUSH1 0x0
0x908 PUSH1 0x1
0x90a PUSH1 0x0
0x90c DUP4
0x90d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x922 AND
0x923 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x938 AND
0x939 DUP2
0x93a MSTORE
0x93b PUSH1 0x20
0x93d ADD
0x93e SWAP1
0x93f DUP2
0x940 MSTORE
0x941 PUSH1 0x20
0x943 ADD
0x944 PUSH1 0x0
0x946 SHA3
0x947 SLOAD
0x948 SWAP1
0x949 POP
0x94a SWAP2
0x94b SWAP1
0x94c POP
0x94d JUMP
---
0x905: JUMPDEST 
0x906: V532 = 0x0
0x908: V533 = 0x1
0x90a: V534 = 0x0
0x90d: V535 = 0xffffffffffffffffffffffffffffffffffffffff
0x922: V536 = AND 0xffffffffffffffffffffffffffffffffffffffff V191
0x923: V537 = 0xffffffffffffffffffffffffffffffffffffffff
0x938: V538 = AND 0xffffffffffffffffffffffffffffffffffffffff V536
0x93a: M[0x0] = V538
0x93b: V539 = 0x20
0x93d: V540 = ADD 0x20 0x0
0x940: M[0x20] = 0x1
0x941: V541 = 0x20
0x943: V542 = ADD 0x20 0x20
0x944: V543 = 0x0
0x946: V544 = SHA3 0x0 0x40
0x947: V545 = S[V544]
0x94d: JUMP 0x2bc
---
Entry stack: [V11, 0x2bc, V191]
Stack pops: 2
Stack additions: [V545]
Exit stack: [V11, V545]

================================

Block 0x94e
[0x94e:0x986]
---
Predecessors: [0x2de]
Successors: [0x2e7]
---
0x94e JUMPDEST
0x94f PUSH1 0x40
0x951 DUP1
0x952 MLOAD
0x953 SWAP1
0x954 DUP2
0x955 ADD
0x956 PUSH1 0x40
0x958 MSTORE
0x959 DUP1
0x95a PUSH1 0x5
0x95c DUP2
0x95d MSTORE
0x95e PUSH1 0x20
0x960 ADD
0x961 PUSH32 0x4c494e4b54000000000000000000000000000000000000000000000000000000
0x982 DUP2
0x983 MSTORE
0x984 POP
0x985 DUP2
0x986 JUMP
---
0x94e: JUMPDEST 
0x94f: V546 = 0x40
0x952: V547 = M[0x40]
0x955: V548 = ADD V547 0x40
0x956: V549 = 0x40
0x958: M[0x40] = V548
0x95a: V550 = 0x5
0x95d: M[V547] = 0x5
0x95e: V551 = 0x20
0x960: V552 = ADD 0x20 V547
0x961: V553 = 0x4c494e4b54000000000000000000000000000000000000000000000000000000
0x983: M[V552] = 0x4c494e4b54000000000000000000000000000000000000000000000000000000
0x986: JUMP 0x2e7
---
Entry stack: [V11, 0x2e7]
Stack pops: 1
Stack additions: [S0, V547]
Exit stack: [V11, 0x2e7, V547]

================================

Block 0x987
[0x987:0x9d2]
---
Predecessors: [0x36e]
Successors: [0x9d3, 0x9d8]
---
0x987 JUMPDEST
0x988 PUSH1 0x0
0x98a DUP2
0x98b PUSH1 0x1
0x98d PUSH1 0x0
0x98f CALLER
0x990 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9a5 AND
0x9a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9bb AND
0x9bc DUP2
0x9bd MSTORE
0x9be PUSH1 0x20
0x9c0 ADD
0x9c1 SWAP1
0x9c2 DUP2
0x9c3 MSTORE
0x9c4 PUSH1 0x20
0x9c6 ADD
0x9c7 PUSH1 0x0
0x9c9 SHA3
0x9ca SLOAD
0x9cb LT
0x9cc ISZERO
0x9cd DUP1
0x9ce ISZERO
0x9cf PUSH2 0x9d8
0x9d2 JUMPI
---
0x987: JUMPDEST 
0x988: V554 = 0x0
0x98b: V555 = 0x1
0x98d: V556 = 0x0
0x98f: V557 = CALLER
0x990: V558 = 0xffffffffffffffffffffffffffffffffffffffff
0x9a5: V559 = AND 0xffffffffffffffffffffffffffffffffffffffff V557
0x9a6: V560 = 0xffffffffffffffffffffffffffffffffffffffff
0x9bb: V561 = AND 0xffffffffffffffffffffffffffffffffffffffff V559
0x9bd: M[0x0] = V561
0x9be: V562 = 0x20
0x9c0: V563 = ADD 0x20 0x0
0x9c3: M[0x20] = 0x1
0x9c4: V564 = 0x20
0x9c6: V565 = ADD 0x20 0x20
0x9c7: V566 = 0x0
0x9c9: V567 = SHA3 0x0 0x40
0x9ca: V568 = S[V567]
0x9cb: V569 = LT V568 V263
0x9cc: V570 = ISZERO V569
0x9ce: V571 = ISZERO V570
0x9cf: V572 = 0x9d8
0x9d2: JUMPI 0x9d8 V571
---
Entry stack: [V11, 0x3ad, V260, V263]
Stack pops: 1
Stack additions: [S0, 0x0, V570]
Exit stack: [V11, 0x3ad, V260, V263, 0x0, V570]

================================

Block 0x9d3
[0x9d3:0x9d7]
---
Predecessors: [0x987]
Successors: [0x9d8]
---
0x9d3 POP
0x9d4 PUSH1 0x0
0x9d6 DUP3
0x9d7 GT
---
0x9d4: V573 = 0x0
0x9d7: V574 = GT V263 0x0
---
Entry stack: [V11, 0x3ad, V260, V263, 0x0, V570]
Stack pops: 3
Stack additions: [S2, S1, V574]
Exit stack: [V11, 0x3ad, V260, V263, 0x0, V574]

================================

Block 0x9d8
[0x9d8:0x9dd]
---
Predecessors: [0x987, 0x9d3]
Successors: [0x9de, 0xb75]
---
0x9d8 JUMPDEST
0x9d9 ISZERO
0x9da PUSH2 0xb75
0x9dd JUMPI
---
0x9d8: JUMPDEST 
0x9d9: V575 = ISZERO S0
0x9da: V576 = 0xb75
0x9dd: JUMPI 0xb75 V575
---
Entry stack: [V11, 0x3ad, V260, V263, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x3ad, V260, V263, 0x0]

================================

Block 0x9de
[0x9de:0xa2e]
---
Predecessors: [0x9d8]
Successors: [0xc07]
---
0x9de PUSH2 0xa2f
0x9e1 DUP3
0x9e2 PUSH1 0x1
0x9e4 PUSH1 0x0
0x9e6 CALLER
0x9e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9fc AND
0x9fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa12 AND
0xa13 DUP2
0xa14 MSTORE
0xa15 PUSH1 0x20
0xa17 ADD
0xa18 SWAP1
0xa19 DUP2
0xa1a MSTORE
0xa1b PUSH1 0x20
0xa1d ADD
0xa1e PUSH1 0x0
0xa20 SHA3
0xa21 SLOAD
0xa22 PUSH2 0xc07
0xa25 SWAP1
0xa26 SWAP2
0xa27 SWAP1
0xa28 PUSH4 0xffffffff
0xa2d AND
0xa2e JUMP
---
0x9de: V577 = 0xa2f
0x9e2: V578 = 0x1
0x9e4: V579 = 0x0
0x9e6: V580 = CALLER
0x9e7: V581 = 0xffffffffffffffffffffffffffffffffffffffff
0x9fc: V582 = AND 0xffffffffffffffffffffffffffffffffffffffff V580
0x9fd: V583 = 0xffffffffffffffffffffffffffffffffffffffff
0xa12: V584 = AND 0xffffffffffffffffffffffffffffffffffffffff V582
0xa14: M[0x0] = V584
0xa15: V585 = 0x20
0xa17: V586 = ADD 0x20 0x0
0xa1a: M[0x20] = 0x1
0xa1b: V587 = 0x20
0xa1d: V588 = ADD 0x20 0x20
0xa1e: V589 = 0x0
0xa20: V590 = SHA3 0x0 0x40
0xa21: V591 = S[V590]
0xa22: V592 = 0xc07
0xa28: V593 = 0xffffffff
0xa2d: V594 = AND 0xffffffff 0xc07
0xa2e: JUMP 0xc07
---
Entry stack: [V11, 0x3ad, V260, V263, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0xa2f, V591, S1]
Exit stack: [V11, 0x3ad, V260, V263, 0x0, 0xa2f, V591, V263]

================================

Block 0xa2f
[0xa2f:0xac3]
---
Predecessors: [0xc15]
Successors: [0xc20]
---
0xa2f JUMPDEST
0xa30 PUSH1 0x1
0xa32 PUSH1 0x0
0xa34 CALLER
0xa35 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa4a AND
0xa4b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa60 AND
0xa61 DUP2
0xa62 MSTORE
0xa63 PUSH1 0x20
0xa65 ADD
0xa66 SWAP1
0xa67 DUP2
0xa68 MSTORE
0xa69 PUSH1 0x20
0xa6b ADD
0xa6c PUSH1 0x0
0xa6e SHA3
0xa6f DUP2
0xa70 SWAP1
0xa71 SSTORE
0xa72 POP
0xa73 PUSH2 0xac4
0xa76 DUP3
0xa77 PUSH1 0x1
0xa79 PUSH1 0x0
0xa7b DUP7
0xa7c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa91 AND
0xa92 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaa7 AND
0xaa8 DUP2
0xaa9 MSTORE
0xaaa PUSH1 0x20
0xaac ADD
0xaad SWAP1
0xaae DUP2
0xaaf MSTORE
0xab0 PUSH1 0x20
0xab2 ADD
0xab3 PUSH1 0x0
0xab5 SHA3
0xab6 SLOAD
0xab7 PUSH2 0xc20
0xaba SWAP1
0xabb SWAP2
0xabc SWAP1
0xabd PUSH4 0xffffffff
0xac2 AND
0xac3 JUMP
---
0xa2f: JUMPDEST 
0xa30: V595 = 0x1
0xa32: V596 = 0x0
0xa34: V597 = CALLER
0xa35: V598 = 0xffffffffffffffffffffffffffffffffffffffff
0xa4a: V599 = AND 0xffffffffffffffffffffffffffffffffffffffff V597
0xa4b: V600 = 0xffffffffffffffffffffffffffffffffffffffff
0xa60: V601 = AND 0xffffffffffffffffffffffffffffffffffffffff V599
0xa62: M[0x0] = V601
0xa63: V602 = 0x20
0xa65: V603 = ADD 0x20 0x0
0xa68: M[0x20] = 0x1
0xa69: V604 = 0x20
0xa6b: V605 = ADD 0x20 0x20
0xa6c: V606 = 0x0
0xa6e: V607 = SHA3 0x0 0x40
0xa71: S[V607] = V684
0xa73: V608 = 0xac4
0xa77: V609 = 0x1
0xa79: V610 = 0x0
0xa7c: V611 = 0xffffffffffffffffffffffffffffffffffffffff
0xa91: V612 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xa92: V613 = 0xffffffffffffffffffffffffffffffffffffffff
0xaa7: V614 = AND 0xffffffffffffffffffffffffffffffffffffffff V612
0xaa9: M[0x0] = V614
0xaaa: V615 = 0x20
0xaac: V616 = ADD 0x20 0x0
0xaaf: M[0x20] = 0x1
0xab0: V617 = 0x20
0xab2: V618 = ADD 0x20 0x20
0xab3: V619 = 0x0
0xab5: V620 = SHA3 0x0 0x40
0xab6: V621 = S[V620]
0xab7: V622 = 0xc20
0xabd: V623 = 0xffffffff
0xac2: V624 = AND 0xffffffff 0xc20
0xac3: JUMP 0xc20
---
Entry stack: [V11, S5, S4, S3, S2, 0x0, V684]
Stack pops: 4
Stack additions: [S3, S2, S1, 0xac4, V621, S2]
Exit stack: [V11, S5, S4, S3, S2, 0x0, 0xac4, V621, S2]

================================

Block 0xac4
[0xac4:0xb74]
---
Predecessors: [0xc34]
Successors: [0xb7a]
---
0xac4 JUMPDEST
0xac5 PUSH1 0x1
0xac7 PUSH1 0x0
0xac9 DUP6
0xaca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xadf AND
0xae0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaf5 AND
0xaf6 DUP2
0xaf7 MSTORE
0xaf8 PUSH1 0x20
0xafa ADD
0xafb SWAP1
0xafc DUP2
0xafd MSTORE
0xafe PUSH1 0x20
0xb00 ADD
0xb01 PUSH1 0x0
0xb03 SHA3
0xb04 DUP2
0xb05 SWAP1
0xb06 SSTORE
0xb07 POP
0xb08 DUP3
0xb09 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb1e AND
0xb1f CALLER
0xb20 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb35 AND
0xb36 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xb57 DUP5
0xb58 PUSH1 0x40
0xb5a MLOAD
0xb5b DUP1
0xb5c DUP3
0xb5d DUP2
0xb5e MSTORE
0xb5f PUSH1 0x20
0xb61 ADD
0xb62 SWAP2
0xb63 POP
0xb64 POP
0xb65 PUSH1 0x40
0xb67 MLOAD
0xb68 DUP1
0xb69 SWAP2
0xb6a SUB
0xb6b SWAP1
0xb6c LOG3
0xb6d PUSH1 0x1
0xb6f SWAP1
0xb70 POP
0xb71 PUSH2 0xb7a
0xb74 JUMP
---
0xac4: JUMPDEST 
0xac5: V625 = 0x1
0xac7: V626 = 0x0
0xaca: V627 = 0xffffffffffffffffffffffffffffffffffffffff
0xadf: V628 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xae0: V629 = 0xffffffffffffffffffffffffffffffffffffffff
0xaf5: V630 = AND 0xffffffffffffffffffffffffffffffffffffffff V628
0xaf7: M[0x0] = V630
0xaf8: V631 = 0x20
0xafa: V632 = ADD 0x20 0x0
0xafd: M[0x20] = 0x1
0xafe: V633 = 0x20
0xb00: V634 = ADD 0x20 0x20
0xb01: V635 = 0x0
0xb03: V636 = SHA3 0x0 0x40
0xb06: S[V636] = S0
0xb09: V637 = 0xffffffffffffffffffffffffffffffffffffffff
0xb1e: V638 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xb1f: V639 = CALLER
0xb20: V640 = 0xffffffffffffffffffffffffffffffffffffffff
0xb35: V641 = AND 0xffffffffffffffffffffffffffffffffffffffff V639
0xb36: V642 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xb58: V643 = 0x40
0xb5a: V644 = M[0x40]
0xb5e: M[V644] = S2
0xb5f: V645 = 0x20
0xb61: V646 = ADD 0x20 V644
0xb65: V647 = 0x40
0xb67: V648 = M[0x40]
0xb6a: V649 = SUB V646 V648
0xb6c: LOG V648 V649 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V641 V638
0xb6d: V650 = 0x1
0xb71: V651 = 0xb7a
0xb74: JUMP 0xb7a
---
Entry stack: [V11, S5, S4, S3, S2, 0x0, S0]
Stack pops: 4
Stack additions: [S3, S2, 0x1]
Exit stack: [V11, S5, S4, S3, S2, 0x1]

================================

Block 0xb75
[0xb75:0xb79]
---
Predecessors: [0x9d8]
Successors: [0xb7a]
---
0xb75 JUMPDEST
0xb76 PUSH1 0x0
0xb78 SWAP1
0xb79 POP
---
0xb75: JUMPDEST 
0xb76: V652 = 0x0
---
Entry stack: [V11, 0x3ad, V260, V263, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x3ad, V260, V263, 0x0]

================================

Block 0xb7a
[0xb7a:0xb7f]
---
Predecessors: [0xac4, 0xb75]
Successors: [0x3ad]
---
0xb7a JUMPDEST
0xb7b SWAP3
0xb7c SWAP2
0xb7d POP
0xb7e POP
0xb7f JUMP
---
0xb7a: JUMPDEST 
0xb7f: JUMP S3
---
Entry stack: [V11, S4, S3, S2, S1, {0x0, 0x1}]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V11, S4, {0x0, 0x1}]

================================

Block 0xb80
[0xb80:0xc06]
---
Predecessors: [0x3d3]
Successors: [0x428]
---
0xb80 JUMPDEST
0xb81 PUSH1 0x0
0xb83 PUSH1 0x2
0xb85 PUSH1 0x0
0xb87 DUP5
0xb88 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb9d AND
0xb9e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbb3 AND
0xbb4 DUP2
0xbb5 MSTORE
0xbb6 PUSH1 0x20
0xbb8 ADD
0xbb9 SWAP1
0xbba DUP2
0xbbb MSTORE
0xbbc PUSH1 0x20
0xbbe ADD
0xbbf PUSH1 0x0
0xbc1 SHA3
0xbc2 PUSH1 0x0
0xbc4 DUP4
0xbc5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbda AND
0xbdb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbf0 AND
0xbf1 DUP2
0xbf2 MSTORE
0xbf3 PUSH1 0x20
0xbf5 ADD
0xbf6 SWAP1
0xbf7 DUP2
0xbf8 MSTORE
0xbf9 PUSH1 0x20
0xbfb ADD
0xbfc PUSH1 0x0
0xbfe SHA3
0xbff SLOAD
0xc00 SWAP1
0xc01 POP
0xc02 SWAP3
0xc03 SWAP2
0xc04 POP
0xc05 POP
0xc06 JUMP
---
0xb80: JUMPDEST 
0xb81: V653 = 0x0
0xb83: V654 = 0x2
0xb85: V655 = 0x0
0xb88: V656 = 0xffffffffffffffffffffffffffffffffffffffff
0xb9d: V657 = AND 0xffffffffffffffffffffffffffffffffffffffff V289
0xb9e: V658 = 0xffffffffffffffffffffffffffffffffffffffff
0xbb3: V659 = AND 0xffffffffffffffffffffffffffffffffffffffff V657
0xbb5: M[0x0] = V659
0xbb6: V660 = 0x20
0xbb8: V661 = ADD 0x20 0x0
0xbbb: M[0x20] = 0x2
0xbbc: V662 = 0x20
0xbbe: V663 = ADD 0x20 0x20
0xbbf: V664 = 0x0
0xbc1: V665 = SHA3 0x0 0x40
0xbc2: V666 = 0x0
0xbc5: V667 = 0xffffffffffffffffffffffffffffffffffffffff
0xbda: V668 = AND 0xffffffffffffffffffffffffffffffffffffffff V294
0xbdb: V669 = 0xffffffffffffffffffffffffffffffffffffffff
0xbf0: V670 = AND 0xffffffffffffffffffffffffffffffffffffffff V668
0xbf2: M[0x0] = V670
0xbf3: V671 = 0x20
0xbf5: V672 = ADD 0x20 0x0
0xbf8: M[0x20] = V665
0xbf9: V673 = 0x20
0xbfb: V674 = ADD 0x20 0x20
0xbfc: V675 = 0x0
0xbfe: V676 = SHA3 0x0 0x40
0xbff: V677 = S[V676]
0xc06: JUMP 0x428
---
Entry stack: [V11, 0x428, V289, V294]
Stack pops: 3
Stack additions: [V677]
Exit stack: [V11, V677]

================================

Block 0xc07
[0xc07:0xc13]
---
Predecessors: [0x64e, 0x69f, 0x9de]
Successors: [0xc14, 0xc15]
---
0xc07 JUMPDEST
0xc08 PUSH1 0x0
0xc0a DUP3
0xc0b DUP3
0xc0c GT
0xc0d ISZERO
0xc0e ISZERO
0xc0f ISZERO
0xc10 PUSH2 0xc15
0xc13 JUMPI
---
0xc07: JUMPDEST 
0xc08: V678 = 0x0
0xc0c: V679 = GT S0 S1
0xc0d: V680 = ISZERO V679
0xc0e: V681 = ISZERO V680
0xc0f: V682 = ISZERO V681
0xc10: V683 = 0xc15
0xc13: JUMPI 0xc15 V682
---
Entry stack: [V11, S7, S6, S5, S4, 0x0, {0x69f, 0x771, 0xa2f}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V11, S7, S6, S5, S4, 0x0, {0x69f, 0x771, 0xa2f}, S1, S0, 0x0]

================================

Block 0xc14
[0xc14:0xc14]
---
Predecessors: [0xc07]
Successors: []
---
0xc14 INVALID
---
0xc14: INVALID 
---
Entry stack: [V11, S8, S7, S6, S5, 0x0, {0x69f, 0x771, 0xa2f}, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S8, S7, S6, S5, 0x0, {0x69f, 0x771, 0xa2f}, S2, S1, 0x0]

================================

Block 0xc15
[0xc15:0xc1f]
---
Predecessors: [0xc07]
Successors: [0x69f, 0x771, 0xa2f]
---
0xc15 JUMPDEST
0xc16 DUP2
0xc17 DUP4
0xc18 SUB
0xc19 SWAP1
0xc1a POP
0xc1b SWAP3
0xc1c SWAP2
0xc1d POP
0xc1e POP
0xc1f JUMP
---
0xc15: JUMPDEST 
0xc18: V684 = SUB S2 S1
0xc1f: JUMP {0x69f, 0x771, 0xa2f}
---
Entry stack: [V11, S8, S7, S6, S5, 0x0, {0x69f, 0x771, 0xa2f}, S2, S1, 0x0]
Stack pops: 4
Stack additions: [V684]
Exit stack: [V11, S8, S7, S6, S5, 0x0, V684]

================================

Block 0xc20
[0xc20:0xc32]
---
Predecessors: [0x771, 0xa2f]
Successors: [0xc33, 0xc34]
---
0xc20 JUMPDEST
0xc21 PUSH1 0x0
0xc23 DUP1
0xc24 DUP3
0xc25 DUP5
0xc26 ADD
0xc27 SWAP1
0xc28 POP
0xc29 DUP4
0xc2a DUP2
0xc2b LT
0xc2c ISZERO
0xc2d ISZERO
0xc2e ISZERO
0xc2f PUSH2 0xc34
0xc32 JUMPI
---
0xc20: JUMPDEST 
0xc21: V685 = 0x0
0xc26: V686 = ADD S1 S0
0xc2b: V687 = LT V686 S1
0xc2c: V688 = ISZERO V687
0xc2d: V689 = ISZERO V688
0xc2e: V690 = ISZERO V689
0xc2f: V691 = 0xc34
0xc32: JUMPI 0xc34 V690
---
Entry stack: [V11, S7, S6, S5, S4, 0x0, {0x843, 0xac4}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V686]
Exit stack: [V11, S7, S6, S5, S4, 0x0, {0x843, 0xac4}, S1, S0, 0x0, V686]

================================

Block 0xc33
[0xc33:0xc33]
---
Predecessors: [0xc20]
Successors: []
---
0xc33 INVALID
---
0xc33: INVALID 
---
Entry stack: [V11, S9, S8, S7, S6, 0x0, {0x843, 0xac4}, S3, S2, 0x0, V686]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S9, S8, S7, S6, 0x0, {0x843, 0xac4}, S3, S2, 0x0, V686]

================================

Block 0xc34
[0xc34:0xc3d]
---
Predecessors: [0xc20]
Successors: [0x843, 0xac4]
---
0xc34 JUMPDEST
0xc35 DUP1
0xc36 SWAP2
0xc37 POP
0xc38 POP
0xc39 SWAP3
0xc3a SWAP2
0xc3b POP
0xc3c POP
0xc3d JUMP
---
0xc34: JUMPDEST 
0xc3d: JUMP {0x843, 0xac4}
---
Entry stack: [V11, S9, S8, S7, S6, 0x0, {0x843, 0xac4}, S3, S2, 0x0, V686]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V11, S9, S8, S7, S6, 0x0, V686]

================================

Block 0xc3e
[0xc3e:0xcc2]
---
Predecessors: []
Successors: []
---
0xc3e STOP
0xc3f LOG1
0xc40 PUSH6 0x627a7a723058
0xc47 SHA3
0xc48 MISSING 0xd0
0xc49 SLOAD
0xc4a MISSING 0xb4
0xc4b MISSING 0xe9
0xc4c MISSING 0xde
0xc4d DUP5
0xc4e CALLER
0xc4f ADD
0xc50 MISSING 0xc9
0xc51 SHR
0xc52 MISSING 0xc
0xc53 MISSING 0xb9
0xc54 MISSING 0xd2
0xc55 SWAP3
0xc56 MISSING 0xd8
0xc57 DUP7
0xc58 SHA3
0xc59 MISSING 0xda
0xc5a PUSH32 0x6b7e2d18a488cfb3a6b588609900297300000000000000000000000000000000
0xc7b STOP
0xc7c STOP
0xc7d STOP
0xc7e STOP
0xc7f ADDRESS
0xc80 EQ
0xc81 PUSH1 0x80
0xc83 PUSH1 0x40
0xc85 MSTORE
0xc86 PUSH1 0x0
0xc88 DUP1
0xc89 REVERT
0xc8a STOP
0xc8b LOG1
0xc8c PUSH6 0x627a7a723058
0xc93 SHA3
0xc94 CALLVALUE
0xc95 DUP10
0xc96 SWAP11
0xc97 PUSH27 0x17bfb579c41aafa2d9a2729f4b425d5416ffdb78f42ca9d3dac7d9
0xcb3 PUSH15 0x29
---
0xc3e: STOP 
0xc3f: LOG S0 S1 S2
0xc40: V692 = 0x627a7a723058
0xc47: V693 = SHA3 0x627a7a723058 S3
0xc48: MISSING 0xd0
0xc49: V694 = S[S0]
0xc4a: MISSING 0xb4
0xc4b: MISSING 0xe9
0xc4c: MISSING 0xde
0xc4e: V695 = CALLER
0xc4f: V696 = ADD V695 S4
0xc50: MISSING 0xc9
0xc51: V697 = SHR S0 S1
0xc52: MISSING 0xc
0xc53: MISSING 0xb9
0xc54: MISSING 0xd2
0xc56: MISSING 0xd8
0xc58: V698 = SHA3 S6 S0
0xc59: MISSING 0xda
0xc5a: V699 = 0x6b7e2d18a488cfb3a6b588609900297300000000000000000000000000000000
0xc7b: STOP 
0xc7c: STOP 
0xc7d: STOP 
0xc7e: STOP 
0xc7f: V700 = ADDRESS
0xc80: V701 = EQ V700 S0
0xc81: V702 = 0x80
0xc83: V703 = 0x40
0xc85: M[0x40] = 0x80
0xc86: V704 = 0x0
0xc89: REVERT 0x0 0x0
0xc8a: STOP 
0xc8b: LOG S0 S1 S2
0xc8c: V705 = 0x627a7a723058
0xc93: V706 = SHA3 0x627a7a723058 S3
0xc94: V707 = CALLVALUE
0xc97: V708 = 0x17bfb579c41aafa2d9a2729f4b425d5416ffdb78f42ca9d3dac7d9
0xcb3: V709 = 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V693, V694, V696, S0, S1, S2, S3, S4, V697, S3, S1, S2, S0, V698, S1, S2, S3, S4, S5, S6, 0x6b7e2d18a488cfb3a6b588609900297300000000000000000000000000000000, V701, 0x29, 0x17bfb579c41aafa2d9a2729f4b425d5416ffdb78f42ca9d3dac7d9, S12, V707, V706, S4, S5, S6, S7, S8, S9, S10, S11, S11]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0xab
Exit block: 0x12d
Body: 0xab, 0xb3, 0xb7, 0xc0, 0xe5, 0xee, 0x100, 0x114, 0x12d, 0x43e

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x13b
Exit block: 0x186
Body: 0x13b, 0x143, 0x147, 0x186, 0x477

Function 2:
Public function signature: 0x18160ddd
Entry block: 0x1a0
Exit block: 0x1b5
Body: 0x1a0, 0x1a8, 0x1ac, 0x1b5, 0x569

Function 3:
Public function signature: 0x23b872dd
Entry block: 0x1cb
Exit block: 0x236
Body: 0x1cb, 0x1d3, 0x1d7, 0x236, 0x3ad, 0x56f, 0x5bb, 0x63c, 0x643, 0x648, 0x64e, 0x69f, 0x8f4, 0x8f9

Function 4:
Public function signature: 0x313ce567
Entry block: 0x250
Exit block: 0x265
Body: 0x250, 0x258, 0x25c, 0x265, 0x900

Function 5:
Public function signature: 0x70a08231
Entry block: 0x27b
Exit block: 0x2bc
Body: 0x27b, 0x283, 0x287, 0x2bc, 0x905

Function 6:
Public function signature: 0x95d89b41
Entry block: 0x2d2
Exit block: 0x354
Body: 0x2d2, 0x2da, 0x2de, 0x2e7, 0x30c, 0x315, 0x327, 0x33b, 0x354, 0x94e

Function 7:
Public function signature: 0xa9059cbb
Entry block: 0x362
Exit block: 0x3ad
Body: 0x362, 0x36a, 0x36e, 0x3ad, 0x987, 0x9d3, 0x9d8, 0x9de, 0xa2f, 0xb75, 0xb7a

Function 8:
Public function signature: 0xdd62ed3e
Entry block: 0x3c7
Exit block: 0x428
Body: 0x3c7, 0x3cf, 0x3d3, 0x428, 0xb80

Function 9:
Public fallback function
Entry block: 0x99
Exit block: 0xa5
Body: 0x99, 0xa1, 0xa5

Function 10:
Private function
Entry block: 0xc20
Exit block: 0xc34
Body: 0xc20, 0xc34

Function 11:
Private function
Entry block: 0xc07
Exit block: 0xc15
Body: 0xc07, 0xc15

