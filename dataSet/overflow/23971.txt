Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6d
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6d
0xc: JUMPI 0x6d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x6f]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x258e60b6
0x3c EQ
0x3d PUSH2 0x6f
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x258e60b6
0x3c: V13 = EQ 0x258e60b6 V11
0x3d: V14 = 0x6f
0x40: JUMPI 0x6f V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xcc]
---
0x41 DUP1
0x42 PUSH4 0x5e5c06e2
0x47 EQ
0x48 PUSH2 0xcc
0x4b JUMPI
---
0x42: V15 = 0x5e5c06e2
0x47: V16 = EQ 0x5e5c06e2 V11
0x48: V17 = 0xcc
0x4b: JUMPI 0xcc V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x119]
---
0x4c DUP1
0x4d PUSH4 0x7aef951c
0x52 EQ
0x53 PUSH2 0x119
0x56 JUMPI
---
0x4d: V18 = 0x7aef951c
0x52: V19 = EQ 0x7aef951c V11
0x53: V20 = 0x119
0x56: JUMPI 0x119 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x176]
---
0x57 DUP1
0x58 PUSH4 0x8da5cb5b
0x5d EQ
0x5e PUSH2 0x176
0x61 JUMPI
---
0x58: V21 = 0x8da5cb5b
0x5d: V22 = EQ 0x8da5cb5b V11
0x5e: V23 = 0x176
0x61: JUMPI 0x176 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x1cb]
---
0x62 DUP1
0x63 PUSH4 0xd404ea23
0x68 EQ
0x69 PUSH2 0x1cb
0x6c JUMPI
---
0x63: V24 = 0xd404ea23
0x68: V25 = EQ 0xd404ea23 V11
0x69: V26 = 0x1cb
0x6c: JUMPI 0x1cb V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x6e]
---
Predecessors: [0x0, 0x62]
Successors: []
---
0x6d JUMPDEST
0x6e STOP
---
0x6d: JUMPDEST 
0x6e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6f
[0x6f:0x75]
---
Predecessors: [0xd]
Successors: [0x76, 0x7a]
---
0x6f JUMPDEST
0x70 CALLVALUE
0x71 ISZERO
0x72 PUSH2 0x7a
0x75 JUMPI
---
0x6f: JUMPDEST 
0x70: V27 = CALLVALUE
0x71: V28 = ISZERO V27
0x72: V29 = 0x7a
0x75: JUMPI 0x7a V28
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x76
[0x76:0x79]
---
Predecessors: [0x6f]
Successors: []
---
0x76 PUSH1 0x0
0x78 DUP1
0x79 REVERT
---
0x76: V30 = 0x0
0x79: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7a
[0x7a:0xc9]
---
Predecessors: [0x6f]
Successors: [0x1fc]
---
0x7a JUMPDEST
0x7b PUSH2 0xca
0x7e PUSH1 0x4
0x80 DUP1
0x81 DUP1
0x82 CALLDATALOAD
0x83 SWAP1
0x84 PUSH1 0x20
0x86 ADD
0x87 SWAP1
0x88 DUP3
0x89 ADD
0x8a DUP1
0x8b CALLDATALOAD
0x8c SWAP1
0x8d PUSH1 0x20
0x8f ADD
0x90 SWAP1
0x91 DUP1
0x92 DUP1
0x93 PUSH1 0x1f
0x95 ADD
0x96 PUSH1 0x20
0x98 DUP1
0x99 SWAP2
0x9a DIV
0x9b MUL
0x9c PUSH1 0x20
0x9e ADD
0x9f PUSH1 0x40
0xa1 MLOAD
0xa2 SWAP1
0xa3 DUP2
0xa4 ADD
0xa5 PUSH1 0x40
0xa7 MSTORE
0xa8 DUP1
0xa9 SWAP4
0xaa SWAP3
0xab SWAP2
0xac SWAP1
0xad DUP2
0xae DUP2
0xaf MSTORE
0xb0 PUSH1 0x20
0xb2 ADD
0xb3 DUP4
0xb4 DUP4
0xb5 DUP1
0xb6 DUP3
0xb7 DUP5
0xb8 CALLDATACOPY
0xb9 DUP3
0xba ADD
0xbb SWAP2
0xbc POP
0xbd POP
0xbe POP
0xbf POP
0xc0 POP
0xc1 POP
0xc2 SWAP2
0xc3 SWAP1
0xc4 POP
0xc5 POP
0xc6 PUSH2 0x1fc
0xc9 JUMP
---
0x7a: JUMPDEST 
0x7b: V31 = 0xca
0x7e: V32 = 0x4
0x82: V33 = CALLDATALOAD 0x4
0x84: V34 = 0x20
0x86: V35 = ADD 0x20 0x4
0x89: V36 = ADD 0x4 V33
0x8b: V37 = CALLDATALOAD V36
0x8d: V38 = 0x20
0x8f: V39 = ADD 0x20 V36
0x93: V40 = 0x1f
0x95: V41 = ADD 0x1f V37
0x96: V42 = 0x20
0x9a: V43 = DIV V41 0x20
0x9b: V44 = MUL V43 0x20
0x9c: V45 = 0x20
0x9e: V46 = ADD 0x20 V44
0x9f: V47 = 0x40
0xa1: V48 = M[0x40]
0xa4: V49 = ADD V48 V46
0xa5: V50 = 0x40
0xa7: M[0x40] = V49
0xaf: M[V48] = V37
0xb0: V51 = 0x20
0xb2: V52 = ADD 0x20 V48
0xb8: CALLDATACOPY V52 V39 V37
0xba: V53 = ADD V52 V37
0xc6: V54 = 0x1fc
0xc9: JUMP 0x1fc
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xca, V48]
Exit stack: [V11, 0xca, V48]

================================

Block 0xca
[0xca:0xcb]
---
Predecessors: [0x28d]
Successors: []
---
0xca JUMPDEST
0xcb STOP
---
0xca: JUMPDEST 
0xcb: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xcc
[0xcc:0xd2]
---
Predecessors: [0x41]
Successors: [0xd3, 0xd7]
---
0xcc JUMPDEST
0xcd CALLVALUE
0xce ISZERO
0xcf PUSH2 0xd7
0xd2 JUMPI
---
0xcc: JUMPDEST 
0xcd: V55 = CALLVALUE
0xce: V56 = ISZERO V55
0xcf: V57 = 0xd7
0xd2: JUMPI 0xd7 V56
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd3
[0xd3:0xd6]
---
Predecessors: [0xcc]
Successors: []
---
0xd3 PUSH1 0x0
0xd5 DUP1
0xd6 REVERT
---
0xd3: V58 = 0x0
0xd6: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd7
[0xd7:0x102]
---
Predecessors: [0xcc]
Successors: [0x2c7]
---
0xd7 JUMPDEST
0xd8 PUSH2 0x103
0xdb PUSH1 0x4
0xdd DUP1
0xde DUP1
0xdf CALLDATALOAD
0xe0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf5 AND
0xf6 SWAP1
0xf7 PUSH1 0x20
0xf9 ADD
0xfa SWAP1
0xfb SWAP2
0xfc SWAP1
0xfd POP
0xfe POP
0xff PUSH2 0x2c7
0x102 JUMP
---
0xd7: JUMPDEST 
0xd8: V59 = 0x103
0xdb: V60 = 0x4
0xdf: V61 = CALLDATALOAD 0x4
0xe0: V62 = 0xffffffffffffffffffffffffffffffffffffffff
0xf5: V63 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0xf7: V64 = 0x20
0xf9: V65 = ADD 0x20 0x4
0xff: V66 = 0x2c7
0x102: JUMP 0x2c7
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x103, V63]
Exit stack: [V11, 0x103, V63]

================================

Block 0x103
[0x103:0x118]
---
Predecessors: [0x2c7]
Successors: []
---
0x103 JUMPDEST
0x104 PUSH1 0x40
0x106 MLOAD
0x107 DUP1
0x108 DUP3
0x109 DUP2
0x10a MSTORE
0x10b PUSH1 0x20
0x10d ADD
0x10e SWAP2
0x10f POP
0x110 POP
0x111 PUSH1 0x40
0x113 MLOAD
0x114 DUP1
0x115 SWAP2
0x116 SUB
0x117 SWAP1
0x118 RETURN
---
0x103: JUMPDEST 
0x104: V67 = 0x40
0x106: V68 = M[0x40]
0x10a: M[V68] = V201
0x10b: V69 = 0x20
0x10d: V70 = ADD 0x20 V68
0x111: V71 = 0x40
0x113: V72 = M[0x40]
0x116: V73 = SUB V70 V72
0x118: RETURN V72 V73
---
Entry stack: [V11, 0x103, V201]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x103]

================================

Block 0x119
[0x119:0x11f]
---
Predecessors: [0x4c]
Successors: [0x120, 0x124]
---
0x119 JUMPDEST
0x11a CALLVALUE
0x11b ISZERO
0x11c PUSH2 0x124
0x11f JUMPI
---
0x119: JUMPDEST 
0x11a: V74 = CALLVALUE
0x11b: V75 = ISZERO V74
0x11c: V76 = 0x124
0x11f: JUMPI 0x124 V75
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x120
[0x120:0x123]
---
Predecessors: [0x119]
Successors: []
---
0x120 PUSH1 0x0
0x122 DUP1
0x123 REVERT
---
0x120: V77 = 0x0
0x123: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x124
[0x124:0x173]
---
Predecessors: [0x119]
Successors: [0x2df]
---
0x124 JUMPDEST
0x125 PUSH2 0x174
0x128 PUSH1 0x4
0x12a DUP1
0x12b DUP1
0x12c CALLDATALOAD
0x12d SWAP1
0x12e PUSH1 0x20
0x130 ADD
0x131 SWAP1
0x132 DUP3
0x133 ADD
0x134 DUP1
0x135 CALLDATALOAD
0x136 SWAP1
0x137 PUSH1 0x20
0x139 ADD
0x13a SWAP1
0x13b DUP1
0x13c DUP1
0x13d PUSH1 0x1f
0x13f ADD
0x140 PUSH1 0x20
0x142 DUP1
0x143 SWAP2
0x144 DIV
0x145 MUL
0x146 PUSH1 0x20
0x148 ADD
0x149 PUSH1 0x40
0x14b MLOAD
0x14c SWAP1
0x14d DUP2
0x14e ADD
0x14f PUSH1 0x40
0x151 MSTORE
0x152 DUP1
0x153 SWAP4
0x154 SWAP3
0x155 SWAP2
0x156 SWAP1
0x157 DUP2
0x158 DUP2
0x159 MSTORE
0x15a PUSH1 0x20
0x15c ADD
0x15d DUP4
0x15e DUP4
0x15f DUP1
0x160 DUP3
0x161 DUP5
0x162 CALLDATACOPY
0x163 DUP3
0x164 ADD
0x165 SWAP2
0x166 POP
0x167 POP
0x168 POP
0x169 POP
0x16a POP
0x16b POP
0x16c SWAP2
0x16d SWAP1
0x16e POP
0x16f POP
0x170 PUSH2 0x2df
0x173 JUMP
---
0x124: JUMPDEST 
0x125: V78 = 0x174
0x128: V79 = 0x4
0x12c: V80 = CALLDATALOAD 0x4
0x12e: V81 = 0x20
0x130: V82 = ADD 0x20 0x4
0x133: V83 = ADD 0x4 V80
0x135: V84 = CALLDATALOAD V83
0x137: V85 = 0x20
0x139: V86 = ADD 0x20 V83
0x13d: V87 = 0x1f
0x13f: V88 = ADD 0x1f V84
0x140: V89 = 0x20
0x144: V90 = DIV V88 0x20
0x145: V91 = MUL V90 0x20
0x146: V92 = 0x20
0x148: V93 = ADD 0x20 V91
0x149: V94 = 0x40
0x14b: V95 = M[0x40]
0x14e: V96 = ADD V95 V93
0x14f: V97 = 0x40
0x151: M[0x40] = V96
0x159: M[V95] = V84
0x15a: V98 = 0x20
0x15c: V99 = ADD 0x20 V95
0x162: CALLDATACOPY V99 V86 V84
0x164: V100 = ADD V99 V84
0x170: V101 = 0x2df
0x173: JUMP 0x2df
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x174, V95]
Exit stack: [V11, 0x174, V95]

================================

Block 0x174
[0x174:0x175]
---
Predecessors: [0x42a]
Successors: []
---
0x174 JUMPDEST
0x175 STOP
---
0x174: JUMPDEST 
0x175: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x176
[0x176:0x17c]
---
Predecessors: [0x57]
Successors: [0x17d, 0x181]
---
0x176 JUMPDEST
0x177 CALLVALUE
0x178 ISZERO
0x179 PUSH2 0x181
0x17c JUMPI
---
0x176: JUMPDEST 
0x177: V102 = CALLVALUE
0x178: V103 = ISZERO V102
0x179: V104 = 0x181
0x17c: JUMPI 0x181 V103
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x17d
[0x17d:0x180]
---
Predecessors: [0x176]
Successors: []
---
0x17d PUSH1 0x0
0x17f DUP1
0x180 REVERT
---
0x17d: V105 = 0x0
0x180: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x181
[0x181:0x188]
---
Predecessors: [0x176]
Successors: [0x42d]
---
0x181 JUMPDEST
0x182 PUSH2 0x189
0x185 PUSH2 0x42d
0x188 JUMP
---
0x181: JUMPDEST 
0x182: V106 = 0x189
0x185: V107 = 0x42d
0x188: JUMP 0x42d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x189]
Exit stack: [V11, 0x189]

================================

Block 0x189
[0x189:0x1ca]
---
Predecessors: [0x42d]
Successors: []
---
0x189 JUMPDEST
0x18a PUSH1 0x40
0x18c MLOAD
0x18d DUP1
0x18e DUP3
0x18f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a4 AND
0x1a5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ba AND
0x1bb DUP2
0x1bc MSTORE
0x1bd PUSH1 0x20
0x1bf ADD
0x1c0 SWAP2
0x1c1 POP
0x1c2 POP
0x1c3 PUSH1 0x40
0x1c5 MLOAD
0x1c6 DUP1
0x1c7 SWAP2
0x1c8 SUB
0x1c9 SWAP1
0x1ca RETURN
---
0x189: JUMPDEST 
0x18a: V108 = 0x40
0x18c: V109 = M[0x40]
0x18f: V110 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a4: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V303
0x1a5: V112 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ba: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x1bc: M[V109] = V113
0x1bd: V114 = 0x20
0x1bf: V115 = ADD 0x20 V109
0x1c3: V116 = 0x40
0x1c5: V117 = M[0x40]
0x1c8: V118 = SUB V115 V117
0x1ca: RETURN V117 V118
---
Entry stack: [V11, 0x189, V303]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x189]

================================

Block 0x1cb
[0x1cb:0x1d1]
---
Predecessors: [0x62]
Successors: [0x1d2, 0x1d6]
---
0x1cb JUMPDEST
0x1cc CALLVALUE
0x1cd ISZERO
0x1ce PUSH2 0x1d6
0x1d1 JUMPI
---
0x1cb: JUMPDEST 
0x1cc: V119 = CALLVALUE
0x1cd: V120 = ISZERO V119
0x1ce: V121 = 0x1d6
0x1d1: JUMPI 0x1d6 V120
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1d2
[0x1d2:0x1d5]
---
Predecessors: [0x1cb]
Successors: []
---
0x1d2 PUSH1 0x0
0x1d4 DUP1
0x1d5 REVERT
---
0x1d2: V122 = 0x0
0x1d5: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1d6
[0x1d6:0x1dd]
---
Predecessors: [0x1cb]
Successors: [0x452]
---
0x1d6 JUMPDEST
0x1d7 PUSH2 0x1de
0x1da PUSH2 0x452
0x1dd JUMP
---
0x1d6: JUMPDEST 
0x1d7: V123 = 0x1de
0x1da: V124 = 0x452
0x1dd: JUMP 0x452
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1de]
Exit stack: [V11, 0x1de]

================================

Block 0x1de
[0x1de:0x1fb]
---
Predecessors: [0x452]
Successors: []
---
0x1de JUMPDEST
0x1df PUSH1 0x40
0x1e1 MLOAD
0x1e2 DUP1
0x1e3 DUP3
0x1e4 PUSH1 0x0
0x1e6 NOT
0x1e7 AND
0x1e8 PUSH1 0x0
0x1ea NOT
0x1eb AND
0x1ec DUP2
0x1ed MSTORE
0x1ee PUSH1 0x20
0x1f0 ADD
0x1f1 SWAP2
0x1f2 POP
0x1f3 POP
0x1f4 PUSH1 0x40
0x1f6 MLOAD
0x1f7 DUP1
0x1f8 SWAP2
0x1f9 SUB
0x1fa SWAP1
0x1fb RETURN
---
0x1de: JUMPDEST 
0x1df: V125 = 0x40
0x1e1: V126 = M[0x40]
0x1e4: V127 = 0x0
0x1e6: V128 = NOT 0x0
0x1e7: V129 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V305
0x1e8: V130 = 0x0
0x1ea: V131 = NOT 0x0
0x1eb: V132 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V129
0x1ed: M[V126] = V132
0x1ee: V133 = 0x20
0x1f0: V134 = ADD 0x20 V126
0x1f4: V135 = 0x40
0x1f6: V136 = M[0x40]
0x1f9: V137 = SUB V134 V136
0x1fb: RETURN V136 V137
---
Entry stack: [V11, 0x1de, V305]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1de]

================================

Block 0x1fc
[0x1fc:0x252]
---
Predecessors: [0x7a]
Successors: [0x253, 0x257]
---
0x1fc JUMPDEST
0x1fd PUSH1 0x0
0x1ff DUP1
0x200 SWAP1
0x201 SLOAD
0x202 SWAP1
0x203 PUSH2 0x100
0x206 EXP
0x207 SWAP1
0x208 DIV
0x209 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21e AND
0x21f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x234 AND
0x235 CALLER
0x236 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24b AND
0x24c EQ
0x24d ISZERO
0x24e ISZERO
0x24f PUSH2 0x257
0x252 JUMPI
---
0x1fc: JUMPDEST 
0x1fd: V138 = 0x0
0x201: V139 = S[0x0]
0x203: V140 = 0x100
0x206: V141 = EXP 0x100 0x0
0x208: V142 = DIV V139 0x1
0x209: V143 = 0xffffffffffffffffffffffffffffffffffffffff
0x21e: V144 = AND 0xffffffffffffffffffffffffffffffffffffffff V142
0x21f: V145 = 0xffffffffffffffffffffffffffffffffffffffff
0x234: V146 = AND 0xffffffffffffffffffffffffffffffffffffffff V144
0x235: V147 = CALLER
0x236: V148 = 0xffffffffffffffffffffffffffffffffffffffff
0x24b: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0x24c: V150 = EQ V149 V146
0x24d: V151 = ISZERO V150
0x24e: V152 = ISZERO V151
0x24f: V153 = 0x257
0x252: JUMPI 0x257 V152
---
Entry stack: [V11, 0xca, V48]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xca, V48]

================================

Block 0x253
[0x253:0x256]
---
Predecessors: [0x1fc]
Successors: []
---
0x253 PUSH1 0x0
0x255 DUP1
0x256 REVERT
---
0x253: V154 = 0x0
0x256: REVERT 0x0 0x0
---
Entry stack: [V11, 0xca, V48]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xca, V48]

================================

Block 0x257
[0x257:0x267]
---
Predecessors: [0x1fc]
Successors: [0x268]
---
0x257 JUMPDEST
0x258 DUP1
0x259 PUSH1 0x40
0x25b MLOAD
0x25c DUP1
0x25d DUP3
0x25e DUP1
0x25f MLOAD
0x260 SWAP1
0x261 PUSH1 0x20
0x263 ADD
0x264 SWAP1
0x265 DUP1
0x266 DUP4
0x267 DUP4
---
0x257: JUMPDEST 
0x259: V155 = 0x40
0x25b: V156 = M[0x40]
0x25f: V157 = M[V48]
0x261: V158 = 0x20
0x263: V159 = ADD 0x20 V48
---
Entry stack: [V11, 0xca, V48]
Stack pops: 1
Stack additions: [S0, S0, V156, V156, V159, V157, V157, V156, V159]
Exit stack: [V11, 0xca, V48, V48, V156, V156, V159, V157, V157, V156, V159]

================================

Block 0x268
[0x268:0x272]
---
Predecessors: [0x257, 0x273]
Successors: [0x273, 0x28d]
---
0x268 JUMPDEST
0x269 PUSH1 0x20
0x26b DUP4
0x26c LT
0x26d ISZERO
0x26e ISZERO
0x26f PUSH2 0x28d
0x272 JUMPI
---
0x268: JUMPDEST 
0x269: V160 = 0x20
0x26c: V161 = LT S2 0x20
0x26d: V162 = ISZERO V161
0x26e: V163 = ISZERO V162
0x26f: V164 = 0x28d
0x272: JUMPI 0x28d V163
---
Entry stack: [V11, 0xca, V48, V48, V156, V156, V159, V157, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0xca, V48, V48, V156, V156, V159, V157, S2, S1, S0]

================================

Block 0x273
[0x273:0x28c]
---
Predecessors: [0x268]
Successors: [0x268]
---
0x273 DUP1
0x274 MLOAD
0x275 DUP3
0x276 MSTORE
0x277 PUSH1 0x20
0x279 DUP3
0x27a ADD
0x27b SWAP2
0x27c POP
0x27d PUSH1 0x20
0x27f DUP2
0x280 ADD
0x281 SWAP1
0x282 POP
0x283 PUSH1 0x20
0x285 DUP4
0x286 SUB
0x287 SWAP3
0x288 POP
0x289 PUSH2 0x268
0x28c JUMP
---
0x274: V165 = M[S0]
0x276: M[S1] = V165
0x277: V166 = 0x20
0x27a: V167 = ADD S1 0x20
0x27d: V168 = 0x20
0x280: V169 = ADD S0 0x20
0x283: V170 = 0x20
0x286: V171 = SUB S2 0x20
0x289: V172 = 0x268
0x28c: JUMP 0x268
---
Entry stack: [V11, 0xca, V48, V48, V156, V156, V159, V157, S2, S1, S0]
Stack pops: 3
Stack additions: [V171, V167, V169]
Exit stack: [V11, 0xca, V48, V48, V156, V156, V159, V157, V171, V167, V169]

================================

Block 0x28d
[0x28d:0x2c6]
---
Predecessors: [0x268]
Successors: [0xca]
---
0x28d JUMPDEST
0x28e PUSH1 0x1
0x290 DUP4
0x291 PUSH1 0x20
0x293 SUB
0x294 PUSH2 0x100
0x297 EXP
0x298 SUB
0x299 DUP1
0x29a NOT
0x29b DUP3
0x29c MLOAD
0x29d AND
0x29e DUP2
0x29f DUP5
0x2a0 MLOAD
0x2a1 AND
0x2a2 DUP1
0x2a3 DUP3
0x2a4 OR
0x2a5 DUP6
0x2a6 MSTORE
0x2a7 POP
0x2a8 POP
0x2a9 POP
0x2aa POP
0x2ab POP
0x2ac POP
0x2ad SWAP1
0x2ae POP
0x2af ADD
0x2b0 SWAP2
0x2b1 POP
0x2b2 POP
0x2b3 PUSH1 0x40
0x2b5 MLOAD
0x2b6 DUP1
0x2b7 SWAP2
0x2b8 SUB
0x2b9 SWAP1
0x2ba SHA3
0x2bb PUSH1 0x2
0x2bd DUP2
0x2be PUSH1 0x0
0x2c0 NOT
0x2c1 AND
0x2c2 SWAP1
0x2c3 SSTORE
0x2c4 POP
0x2c5 POP
0x2c6 JUMP
---
0x28d: JUMPDEST 
0x28e: V173 = 0x1
0x291: V174 = 0x20
0x293: V175 = SUB 0x20 S2
0x294: V176 = 0x100
0x297: V177 = EXP 0x100 V175
0x298: V178 = SUB V177 0x1
0x29a: V179 = NOT V178
0x29c: V180 = M[S0]
0x29d: V181 = AND V180 V179
0x2a0: V182 = M[S1]
0x2a1: V183 = AND V182 V178
0x2a4: V184 = OR V181 V183
0x2a6: M[S1] = V184
0x2af: V185 = ADD V157 V156
0x2b3: V186 = 0x40
0x2b5: V187 = M[0x40]
0x2b8: V188 = SUB V185 V187
0x2ba: V189 = SHA3 V187 V188
0x2bb: V190 = 0x2
0x2be: V191 = 0x0
0x2c0: V192 = NOT 0x0
0x2c1: V193 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V189
0x2c3: S[0x2] = V193
0x2c6: JUMP 0xca
---
Entry stack: [V11, 0xca, V48, V48, V156, V156, V159, V157, S2, S1, S0]
Stack pops: 10
Stack additions: []
Exit stack: [V11]

================================

Block 0x2c7
[0x2c7:0x2de]
---
Predecessors: [0xd7]
Successors: [0x103]
---
0x2c7 JUMPDEST
0x2c8 PUSH1 0x1
0x2ca PUSH1 0x20
0x2cc MSTORE
0x2cd DUP1
0x2ce PUSH1 0x0
0x2d0 MSTORE
0x2d1 PUSH1 0x40
0x2d3 PUSH1 0x0
0x2d5 SHA3
0x2d6 PUSH1 0x0
0x2d8 SWAP2
0x2d9 POP
0x2da SWAP1
0x2db POP
0x2dc SLOAD
0x2dd DUP2
0x2de JUMP
---
0x2c7: JUMPDEST 
0x2c8: V194 = 0x1
0x2ca: V195 = 0x20
0x2cc: M[0x20] = 0x1
0x2ce: V196 = 0x0
0x2d0: M[0x0] = V63
0x2d1: V197 = 0x40
0x2d3: V198 = 0x0
0x2d5: V199 = SHA3 0x0 0x40
0x2d6: V200 = 0x0
0x2dc: V201 = S[V199]
0x2de: JUMP 0x103
---
Entry stack: [V11, 0x103, V63]
Stack pops: 2
Stack additions: [S1, V201]
Exit stack: [V11, 0x103, V201]

================================

Block 0x2df
[0x2df:0x2f6]
---
Predecessors: [0x124]
Successors: [0x2f7]
---
0x2df JUMPDEST
0x2e0 PUSH1 0x2
0x2e2 SLOAD
0x2e3 PUSH1 0x0
0x2e5 NOT
0x2e6 AND
0x2e7 DUP2
0x2e8 PUSH1 0x40
0x2ea MLOAD
0x2eb DUP1
0x2ec DUP3
0x2ed DUP1
0x2ee MLOAD
0x2ef SWAP1
0x2f0 PUSH1 0x20
0x2f2 ADD
0x2f3 SWAP1
0x2f4 DUP1
0x2f5 DUP4
0x2f6 DUP4
---
0x2df: JUMPDEST 
0x2e0: V202 = 0x2
0x2e2: V203 = S[0x2]
0x2e3: V204 = 0x0
0x2e5: V205 = NOT 0x0
0x2e6: V206 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V203
0x2e8: V207 = 0x40
0x2ea: V208 = M[0x40]
0x2ee: V209 = M[V95]
0x2f0: V210 = 0x20
0x2f2: V211 = ADD 0x20 V95
---
Entry stack: [V11, 0x174, V95]
Stack pops: 1
Stack additions: [S0, V206, S0, V208, V208, V211, V209, V209, V208, V211]
Exit stack: [V11, 0x174, V95, V206, V95, V208, V208, V211, V209, V209, V208, V211]

================================

Block 0x2f7
[0x2f7:0x301]
---
Predecessors: [0x2df, 0x302]
Successors: [0x302, 0x31c]
---
0x2f7 JUMPDEST
0x2f8 PUSH1 0x20
0x2fa DUP4
0x2fb LT
0x2fc ISZERO
0x2fd ISZERO
0x2fe PUSH2 0x31c
0x301 JUMPI
---
0x2f7: JUMPDEST 
0x2f8: V212 = 0x20
0x2fb: V213 = LT S2 0x20
0x2fc: V214 = ISZERO V213
0x2fd: V215 = ISZERO V214
0x2fe: V216 = 0x31c
0x301: JUMPI 0x31c V215
---
Entry stack: [V11, 0x174, V95, V206, V95, V208, V208, V211, V209, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x174, V95, V206, V95, V208, V208, V211, V209, S2, S1, S0]

================================

Block 0x302
[0x302:0x31b]
---
Predecessors: [0x2f7]
Successors: [0x2f7]
---
0x302 DUP1
0x303 MLOAD
0x304 DUP3
0x305 MSTORE
0x306 PUSH1 0x20
0x308 DUP3
0x309 ADD
0x30a SWAP2
0x30b POP
0x30c PUSH1 0x20
0x30e DUP2
0x30f ADD
0x310 SWAP1
0x311 POP
0x312 PUSH1 0x20
0x314 DUP4
0x315 SUB
0x316 SWAP3
0x317 POP
0x318 PUSH2 0x2f7
0x31b JUMP
---
0x303: V217 = M[S0]
0x305: M[S1] = V217
0x306: V218 = 0x20
0x309: V219 = ADD S1 0x20
0x30c: V220 = 0x20
0x30f: V221 = ADD S0 0x20
0x312: V222 = 0x20
0x315: V223 = SUB S2 0x20
0x318: V224 = 0x2f7
0x31b: JUMP 0x2f7
---
Entry stack: [V11, 0x174, V95, V206, V95, V208, V208, V211, V209, S2, S1, S0]
Stack pops: 3
Stack additions: [V223, V219, V221]
Exit stack: [V11, 0x174, V95, V206, V95, V208, V208, V211, V209, V223, V219, V221]

================================

Block 0x31c
[0x31c:0x354]
---
Predecessors: [0x2f7]
Successors: [0x355, 0x399]
---
0x31c JUMPDEST
0x31d PUSH1 0x1
0x31f DUP4
0x320 PUSH1 0x20
0x322 SUB
0x323 PUSH2 0x100
0x326 EXP
0x327 SUB
0x328 DUP1
0x329 NOT
0x32a DUP3
0x32b MLOAD
0x32c AND
0x32d DUP2
0x32e DUP5
0x32f MLOAD
0x330 AND
0x331 DUP1
0x332 DUP3
0x333 OR
0x334 DUP6
0x335 MSTORE
0x336 POP
0x337 POP
0x338 POP
0x339 POP
0x33a POP
0x33b POP
0x33c SWAP1
0x33d POP
0x33e ADD
0x33f SWAP2
0x340 POP
0x341 POP
0x342 PUSH1 0x40
0x344 MLOAD
0x345 DUP1
0x346 SWAP2
0x347 SUB
0x348 SWAP1
0x349 SHA3
0x34a PUSH1 0x0
0x34c NOT
0x34d AND
0x34e EQ
0x34f DUP1
0x350 ISZERO
0x351 PUSH2 0x399
0x354 JUMPI
---
0x31c: JUMPDEST 
0x31d: V225 = 0x1
0x320: V226 = 0x20
0x322: V227 = SUB 0x20 S2
0x323: V228 = 0x100
0x326: V229 = EXP 0x100 V227
0x327: V230 = SUB V229 0x1
0x329: V231 = NOT V230
0x32b: V232 = M[S0]
0x32c: V233 = AND V232 V231
0x32f: V234 = M[S1]
0x330: V235 = AND V234 V230
0x333: V236 = OR V233 V235
0x335: M[S1] = V236
0x33e: V237 = ADD V209 V208
0x342: V238 = 0x40
0x344: V239 = M[0x40]
0x347: V240 = SUB V237 V239
0x349: V241 = SHA3 V239 V240
0x34a: V242 = 0x0
0x34c: V243 = NOT 0x0
0x34d: V244 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V241
0x34e: V245 = EQ V244 V206
0x350: V246 = ISZERO V245
0x351: V247 = 0x399
0x354: JUMPI 0x399 V246
---
Entry stack: [V11, 0x174, V95, V206, V95, V208, V208, V211, V209, S2, S1, S0]
Stack pops: 9
Stack additions: [V245]
Exit stack: [V11, 0x174, V95, V245]

================================

Block 0x355
[0x355:0x398]
---
Predecessors: [0x31c]
Successors: [0x399]
---
0x355 POP
0x356 PUSH1 0x1
0x358 DUP1
0x359 PUSH1 0x0
0x35b CALLER
0x35c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x371 AND
0x372 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x387 AND
0x388 DUP2
0x389 MSTORE
0x38a PUSH1 0x20
0x38c ADD
0x38d SWAP1
0x38e DUP2
0x38f MSTORE
0x390 PUSH1 0x20
0x392 ADD
0x393 PUSH1 0x0
0x395 SHA3
0x396 SLOAD
0x397 EQ
0x398 ISZERO
---
0x356: V248 = 0x1
0x359: V249 = 0x0
0x35b: V250 = CALLER
0x35c: V251 = 0xffffffffffffffffffffffffffffffffffffffff
0x371: V252 = AND 0xffffffffffffffffffffffffffffffffffffffff V250
0x372: V253 = 0xffffffffffffffffffffffffffffffffffffffff
0x387: V254 = AND 0xffffffffffffffffffffffffffffffffffffffff V252
0x389: M[0x0] = V254
0x38a: V255 = 0x20
0x38c: V256 = ADD 0x20 0x0
0x38f: M[0x20] = 0x1
0x390: V257 = 0x20
0x392: V258 = ADD 0x20 0x20
0x393: V259 = 0x0
0x395: V260 = SHA3 0x0 0x40
0x396: V261 = S[V260]
0x397: V262 = EQ V261 0x1
0x398: V263 = ISZERO V262
---
Entry stack: [V11, 0x174, V95, V245]
Stack pops: 1
Stack additions: [V263]
Exit stack: [V11, 0x174, V95, V263]

================================

Block 0x399
[0x399:0x39e]
---
Predecessors: [0x31c, 0x355]
Successors: [0x39f, 0x42a]
---
0x399 JUMPDEST
0x39a ISZERO
0x39b PUSH2 0x42a
0x39e JUMPI
---
0x399: JUMPDEST 
0x39a: V264 = ISZERO S0
0x39b: V265 = 0x42a
0x39e: JUMPI 0x42a V264
---
Entry stack: [V11, 0x174, V95, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x174, V95]

================================

Block 0x39f
[0x39f:0x424]
---
Predecessors: [0x399]
Successors: [0x425, 0x429]
---
0x39f PUSH1 0x1
0x3a1 DUP1
0x3a2 PUSH1 0x0
0x3a4 CALLER
0x3a5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ba AND
0x3bb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d0 AND
0x3d1 DUP2
0x3d2 MSTORE
0x3d3 PUSH1 0x20
0x3d5 ADD
0x3d6 SWAP1
0x3d7 DUP2
0x3d8 MSTORE
0x3d9 PUSH1 0x20
0x3db ADD
0x3dc PUSH1 0x0
0x3de SHA3
0x3df DUP2
0x3e0 SWAP1
0x3e1 SSTORE
0x3e2 POP
0x3e3 CALLER
0x3e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f9 AND
0x3fa PUSH2 0x8fc
0x3fd PUSH7 0x2386f26fc10000
0x405 SWAP1
0x406 DUP2
0x407 ISZERO
0x408 MUL
0x409 SWAP1
0x40a PUSH1 0x40
0x40c MLOAD
0x40d PUSH1 0x0
0x40f PUSH1 0x40
0x411 MLOAD
0x412 DUP1
0x413 DUP4
0x414 SUB
0x415 DUP2
0x416 DUP6
0x417 DUP9
0x418 DUP9
0x419 CALL
0x41a SWAP4
0x41b POP
0x41c POP
0x41d POP
0x41e POP
0x41f ISZERO
0x420 ISZERO
0x421 PUSH2 0x429
0x424 JUMPI
---
0x39f: V266 = 0x1
0x3a2: V267 = 0x0
0x3a4: V268 = CALLER
0x3a5: V269 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ba: V270 = AND 0xffffffffffffffffffffffffffffffffffffffff V268
0x3bb: V271 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d0: V272 = AND 0xffffffffffffffffffffffffffffffffffffffff V270
0x3d2: M[0x0] = V272
0x3d3: V273 = 0x20
0x3d5: V274 = ADD 0x20 0x0
0x3d8: M[0x20] = 0x1
0x3d9: V275 = 0x20
0x3db: V276 = ADD 0x20 0x20
0x3dc: V277 = 0x0
0x3de: V278 = SHA3 0x0 0x40
0x3e1: S[V278] = 0x1
0x3e3: V279 = CALLER
0x3e4: V280 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f9: V281 = AND 0xffffffffffffffffffffffffffffffffffffffff V279
0x3fa: V282 = 0x8fc
0x3fd: V283 = 0x2386f26fc10000
0x407: V284 = ISZERO 0x2386f26fc10000
0x408: V285 = MUL 0x0 0x8fc
0x40a: V286 = 0x40
0x40c: V287 = M[0x40]
0x40d: V288 = 0x0
0x40f: V289 = 0x40
0x411: V290 = M[0x40]
0x414: V291 = SUB V287 V290
0x419: V292 = CALL 0x0 V281 0x2386f26fc10000 V290 V291 V290 0x0
0x41f: V293 = ISZERO V292
0x420: V294 = ISZERO V293
0x421: V295 = 0x429
0x424: JUMPI 0x429 V294
---
Entry stack: [V11, 0x174, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x174, V95]

================================

Block 0x425
[0x425:0x428]
---
Predecessors: [0x39f]
Successors: []
---
0x425 PUSH1 0x0
0x427 DUP1
0x428 REVERT
---
0x425: V296 = 0x0
0x428: REVERT 0x0 0x0
---
Entry stack: [V11, 0x174, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x174, V95]

================================

Block 0x429
[0x429:0x429]
---
Predecessors: [0x39f]
Successors: [0x42a]
---
0x429 JUMPDEST
---
0x429: JUMPDEST 
---
Entry stack: [V11, 0x174, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x174, V95]

================================

Block 0x42a
[0x42a:0x42c]
---
Predecessors: [0x399, 0x429]
Successors: [0x174]
---
0x42a JUMPDEST
0x42b POP
0x42c JUMP
---
0x42a: JUMPDEST 
0x42c: JUMP 0x174
---
Entry stack: [V11, 0x174, V95]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x42d
[0x42d:0x451]
---
Predecessors: [0x181]
Successors: [0x189]
---
0x42d JUMPDEST
0x42e PUSH1 0x0
0x430 DUP1
0x431 SWAP1
0x432 SLOAD
0x433 SWAP1
0x434 PUSH2 0x100
0x437 EXP
0x438 SWAP1
0x439 DIV
0x43a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x44f AND
0x450 DUP2
0x451 JUMP
---
0x42d: JUMPDEST 
0x42e: V297 = 0x0
0x432: V298 = S[0x0]
0x434: V299 = 0x100
0x437: V300 = EXP 0x100 0x0
0x439: V301 = DIV V298 0x1
0x43a: V302 = 0xffffffffffffffffffffffffffffffffffffffff
0x44f: V303 = AND 0xffffffffffffffffffffffffffffffffffffffff V301
0x451: JUMP 0x189
---
Entry stack: [V11, 0x189]
Stack pops: 1
Stack additions: [S0, V303]
Exit stack: [V11, 0x189, V303]

================================

Block 0x452
[0x452:0x457]
---
Predecessors: [0x1d6]
Successors: [0x1de]
---
0x452 JUMPDEST
0x453 PUSH1 0x2
0x455 SLOAD
0x456 DUP2
0x457 JUMP
---
0x452: JUMPDEST 
0x453: V304 = 0x2
0x455: V305 = S[0x2]
0x457: JUMP 0x1de
---
Entry stack: [V11, 0x1de]
Stack pops: 1
Stack additions: [S0, V305]
Exit stack: [V11, 0x1de, V305]

================================

Block 0x458
[0x458:0x484]
---
Predecessors: []
Successors: []
---
0x458 STOP
0x459 LOG1
0x45a PUSH6 0x627a7a723058
0x461 SHA3
0x462 MISSING 0xc2
0x463 MISSING 0x29
0x464 PUSH32 0x775a45ad0a88e3ac33a83a20335408c99cc087e3ac9e3e3f6444f285060029
---
0x458: STOP 
0x459: LOG S0 S1 S2
0x45a: V306 = 0x627a7a723058
0x461: V307 = SHA3 0x627a7a723058 S3
0x462: MISSING 0xc2
0x463: MISSING 0x29
0x464: V308 = 0x775a45ad0a88e3ac33a83a20335408c99cc087e3ac9e3e3f6444f285060029
---
Entry stack: []
Stack pops: 0
Stack additions: [V307, 0x775a45ad0a88e3ac33a83a20335408c99cc087e3ac9e3e3f6444f285060029]
Exit stack: []

================================

Function 0:
Public function signature: 0x258e60b6
Entry block: 0x6f
Exit block: 0xca
Body: 0x6f, 0x76, 0x7a, 0xca, 0x1fc, 0x253, 0x257, 0x268, 0x273, 0x28d

Function 1:
Public function signature: 0x5e5c06e2
Entry block: 0xcc
Exit block: 0x103
Body: 0xcc, 0xd3, 0xd7, 0x103, 0x2c7

Function 2:
Public function signature: 0x7aef951c
Entry block: 0x119
Exit block: 0x425
Body: 0x119, 0x120, 0x124, 0x174, 0x2df, 0x2f7, 0x302, 0x31c, 0x355, 0x399, 0x39f, 0x425, 0x429, 0x42a

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0x176
Exit block: 0x189
Body: 0x176, 0x17d, 0x181, 0x189, 0x42d

Function 4:
Public function signature: 0xd404ea23
Entry block: 0x1cb
Exit block: 0x1de
Body: 0x1cb, 0x1d2, 0x1d6, 0x1de, 0x452

Function 5:
Public fallback function
Entry block: 0x6d
Exit block: 0x6d
Body: 0x6d

