Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x99]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x99
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x99
0xc: JUMPI 0x99 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x327]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x167ff46f
0x3c EQ
0x3d PUSH2 0x327
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x167ff46f
0x3c: V13 = EQ 0x167ff46f V11
0x3d: V14 = 0x327
0x40: JUMPI 0x327 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x354]
---
0x41 DUP1
0x42 PUSH4 0x24600fc3
0x47 EQ
0x48 PUSH2 0x354
0x4b JUMPI
---
0x42: V15 = 0x24600fc3
0x47: V16 = EQ 0x24600fc3 V11
0x48: V17 = 0x354
0x4b: JUMPI 0x354 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x369]
---
0x4c DUP1
0x4d PUSH4 0x5af82abf
0x52 EQ
0x53 PUSH2 0x369
0x56 JUMPI
---
0x4d: V18 = 0x5af82abf
0x52: V19 = EQ 0x5af82abf V11
0x53: V20 = 0x369
0x56: JUMPI 0x369 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x3be]
---
0x57 DUP1
0x58 PUSH4 0x71c6d4dc
0x5d EQ
0x5e PUSH2 0x3be
0x61 JUMPI
---
0x58: V21 = 0x71c6d4dc
0x5d: V22 = EQ 0x71c6d4dc V11
0x5e: V23 = 0x3be
0x61: JUMPI 0x3be V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x413]
---
0x62 DUP1
0x63 PUSH4 0xa9059cbb
0x68 EQ
0x69 PUSH2 0x413
0x6c JUMPI
---
0x63: V24 = 0xa9059cbb
0x68: V25 = EQ 0xa9059cbb V11
0x69: V26 = 0x413
0x6c: JUMPI 0x413 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x455]
---
0x6d DUP1
0x6e PUSH4 0xb8c766b8
0x73 EQ
0x74 PUSH2 0x455
0x77 JUMPI
---
0x6e: V27 = 0xb8c766b8
0x73: V28 = EQ 0xb8c766b8 V11
0x74: V29 = 0x455
0x77: JUMPI 0x455 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x482]
---
0x78 DUP1
0x79 PUSH4 0xc89f2ce4
0x7e EQ
0x7f PUSH2 0x482
0x82 JUMPI
---
0x79: V30 = 0xc89f2ce4
0x7e: V31 = EQ 0xc89f2ce4 V11
0x7f: V32 = 0x482
0x82: JUMPI 0x482 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x8d]
---
Predecessors: [0x78]
Successors: [0x8e, 0x4ab]
---
0x83 DUP1
0x84 PUSH4 0xddd41ef6
0x89 EQ
0x8a PUSH2 0x4ab
0x8d JUMPI
---
0x84: V33 = 0xddd41ef6
0x89: V34 = EQ 0xddd41ef6 V11
0x8a: V35 = 0x4ab
0x8d: JUMPI 0x4ab V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8e
[0x8e:0x98]
---
Predecessors: [0x83]
Successors: [0x99, 0x4e4]
---
0x8e DUP1
0x8f PUSH4 0xee55efee
0x94 EQ
0x95 PUSH2 0x4e4
0x98 JUMPI
---
0x8f: V36 = 0xee55efee
0x94: V37 = EQ 0xee55efee V11
0x95: V38 = 0x4e4
0x98: JUMPI 0x4e4 V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x99
[0x99:0xb2]
---
Predecessors: [0x0, 0x8e]
Successors: [0xb3, 0xb7]
---
0x99 JUMPDEST
0x9a PUSH1 0x0
0x9c PUSH1 0x4
0x9e PUSH1 0x0
0xa0 SWAP1
0xa1 SLOAD
0xa2 SWAP1
0xa3 PUSH2 0x100
0xa6 EXP
0xa7 SWAP1
0xa8 DIV
0xa9 PUSH1 0xff
0xab AND
0xac ISZERO
0xad ISZERO
0xae ISZERO
0xaf PUSH2 0xb7
0xb2 JUMPI
---
0x99: JUMPDEST 
0x9a: V39 = 0x0
0x9c: V40 = 0x4
0x9e: V41 = 0x0
0xa1: V42 = S[0x4]
0xa3: V43 = 0x100
0xa6: V44 = EXP 0x100 0x0
0xa8: V45 = DIV V42 0x1
0xa9: V46 = 0xff
0xab: V47 = AND 0xff V45
0xac: V48 = ISZERO V47
0xad: V49 = ISZERO V48
0xae: V50 = ISZERO V49
0xaf: V51 = 0xb7
0xb2: JUMPI 0xb7 V50
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x0]

================================

Block 0xb3
[0xb3:0xb6]
---
Predecessors: [0x99]
Successors: []
---
0xb3 PUSH1 0x0
0xb5 DUP1
0xb6 REVERT
---
0xb3: V52 = 0x0
0xb6: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0xb7
[0xb7:0xc8]
---
Predecessors: [0x99]
Successors: [0xc9, 0xcd]
---
0xb7 JUMPDEST
0xb8 PUSH7 0x38d7ea4c68000
0xc0 CALLVALUE
0xc1 LT
0xc2 ISZERO
0xc3 ISZERO
0xc4 ISZERO
0xc5 PUSH2 0xcd
0xc8 JUMPI
---
0xb7: JUMPDEST 
0xb8: V53 = 0x38d7ea4c68000
0xc0: V54 = CALLVALUE
0xc1: V55 = LT V54 0x38d7ea4c68000
0xc2: V56 = ISZERO V55
0xc3: V57 = ISZERO V56
0xc4: V58 = ISZERO V57
0xc5: V59 = 0xcd
0xc8: JUMPI 0xcd V58
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0xc9
[0xc9:0xcc]
---
Predecessors: [0xb7]
Successors: []
---
0xc9 PUSH1 0x0
0xcb DUP1
0xcc REVERT
---
0xc9: V60 = 0x0
0xcc: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0xcd
[0xcd:0x195]
---
Predecessors: [0xb7]
Successors: [0x196, 0x19a]
---
0xcd JUMPDEST
0xce PUSH3 0x13880
0xd2 CALLVALUE
0xd3 MUL
0xd4 SWAP1
0xd5 POP
0xd6 PUSH1 0x1
0xd8 PUSH1 0x0
0xda SWAP1
0xdb SLOAD
0xdc SWAP1
0xdd PUSH2 0x100
0xe0 EXP
0xe1 SWAP1
0xe2 DIV
0xe3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf8 AND
0xf9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10e AND
0x10f PUSH4 0x70a08231
0x114 ADDRESS
0x115 PUSH1 0x0
0x117 PUSH1 0x40
0x119 MLOAD
0x11a PUSH1 0x20
0x11c ADD
0x11d MSTORE
0x11e PUSH1 0x40
0x120 MLOAD
0x121 DUP3
0x122 PUSH4 0xffffffff
0x127 AND
0x128 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x146 MUL
0x147 DUP2
0x148 MSTORE
0x149 PUSH1 0x4
0x14b ADD
0x14c DUP1
0x14d DUP3
0x14e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x163 AND
0x164 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x179 AND
0x17a DUP2
0x17b MSTORE
0x17c PUSH1 0x20
0x17e ADD
0x17f SWAP2
0x180 POP
0x181 POP
0x182 PUSH1 0x20
0x184 PUSH1 0x40
0x186 MLOAD
0x187 DUP1
0x188 DUP4
0x189 SUB
0x18a DUP2
0x18b PUSH1 0x0
0x18d DUP8
0x18e DUP1
0x18f EXTCODESIZE
0x190 ISZERO
0x191 ISZERO
0x192 PUSH2 0x19a
0x195 JUMPI
---
0xcd: JUMPDEST 
0xce: V61 = 0x13880
0xd2: V62 = CALLVALUE
0xd3: V63 = MUL V62 0x13880
0xd6: V64 = 0x1
0xd8: V65 = 0x0
0xdb: V66 = S[0x1]
0xdd: V67 = 0x100
0xe0: V68 = EXP 0x100 0x0
0xe2: V69 = DIV V66 0x1
0xe3: V70 = 0xffffffffffffffffffffffffffffffffffffffff
0xf8: V71 = AND 0xffffffffffffffffffffffffffffffffffffffff V69
0xf9: V72 = 0xffffffffffffffffffffffffffffffffffffffff
0x10e: V73 = AND 0xffffffffffffffffffffffffffffffffffffffff V71
0x10f: V74 = 0x70a08231
0x114: V75 = ADDRESS
0x115: V76 = 0x0
0x117: V77 = 0x40
0x119: V78 = M[0x40]
0x11a: V79 = 0x20
0x11c: V80 = ADD 0x20 V78
0x11d: M[V80] = 0x0
0x11e: V81 = 0x40
0x120: V82 = M[0x40]
0x122: V83 = 0xffffffff
0x127: V84 = AND 0xffffffff 0x70a08231
0x128: V85 = 0x100000000000000000000000000000000000000000000000000000000
0x146: V86 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x148: M[V82] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x149: V87 = 0x4
0x14b: V88 = ADD 0x4 V82
0x14e: V89 = 0xffffffffffffffffffffffffffffffffffffffff
0x163: V90 = AND 0xffffffffffffffffffffffffffffffffffffffff V75
0x164: V91 = 0xffffffffffffffffffffffffffffffffffffffff
0x179: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff V90
0x17b: M[V88] = V92
0x17c: V93 = 0x20
0x17e: V94 = ADD 0x20 V88
0x182: V95 = 0x20
0x184: V96 = 0x40
0x186: V97 = M[0x40]
0x189: V98 = SUB V94 V97
0x18b: V99 = 0x0
0x18f: V100 = EXTCODESIZE V73
0x190: V101 = ISZERO V100
0x191: V102 = ISZERO V101
0x192: V103 = 0x19a
0x195: JUMPI 0x19a V102
---
Entry stack: [V11, 0x0]
Stack pops: 1
Stack additions: [V63, V73, 0x70a08231, V94, 0x20, V97, V98, V97, 0x0, V73]
Exit stack: [V11, V63, V73, 0x70a08231, V94, 0x20, V97, V98, V97, 0x0, V73]

================================

Block 0x196
[0x196:0x199]
---
Predecessors: [0xcd]
Successors: []
---
0x196 PUSH1 0x0
0x198 DUP1
0x199 REVERT
---
0x196: V104 = 0x0
0x199: REVERT 0x0 0x0
---
Entry stack: [V11, V63, V73, 0x70a08231, V94, 0x20, V97, V98, V97, 0x0, V73]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V63, V73, 0x70a08231, V94, 0x20, V97, V98, V97, 0x0, V73]

================================

Block 0x19a
[0x19a:0x1a6]
---
Predecessors: [0xcd]
Successors: [0x1a7, 0x1ab]
---
0x19a JUMPDEST
0x19b PUSH2 0x2c6
0x19e GAS
0x19f SUB
0x1a0 CALL
0x1a1 ISZERO
0x1a2 ISZERO
0x1a3 PUSH2 0x1ab
0x1a6 JUMPI
---
0x19a: JUMPDEST 
0x19b: V105 = 0x2c6
0x19e: V106 = GAS
0x19f: V107 = SUB V106 0x2c6
0x1a0: V108 = CALL V107 V73 0x0 V97 V98 V97 0x20
0x1a1: V109 = ISZERO V108
0x1a2: V110 = ISZERO V109
0x1a3: V111 = 0x1ab
0x1a6: JUMPI 0x1ab V110
---
Entry stack: [V11, V63, V73, 0x70a08231, V94, 0x20, V97, V98, V97, 0x0, V73]
Stack pops: 6
Stack additions: []
Exit stack: [V11, V63, V73, 0x70a08231, V94]

================================

Block 0x1a7
[0x1a7:0x1aa]
---
Predecessors: [0x19a]
Successors: []
---
0x1a7 PUSH1 0x0
0x1a9 DUP1
0x1aa REVERT
---
0x1a7: V112 = 0x0
0x1aa: REVERT 0x0 0x0
---
Entry stack: [V11, V63, V73, 0x70a08231, V94]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V63, V73, 0x70a08231, V94]

================================

Block 0x1ab
[0x1ab:0x1be]
---
Predecessors: [0x19a]
Successors: [0x1bf, 0x1c3]
---
0x1ab JUMPDEST
0x1ac POP
0x1ad POP
0x1ae POP
0x1af PUSH1 0x40
0x1b1 MLOAD
0x1b2 DUP1
0x1b3 MLOAD
0x1b4 SWAP1
0x1b5 POP
0x1b6 DUP2
0x1b7 GT
0x1b8 ISZERO
0x1b9 ISZERO
0x1ba ISZERO
0x1bb PUSH2 0x1c3
0x1be JUMPI
---
0x1ab: JUMPDEST 
0x1af: V113 = 0x40
0x1b1: V114 = M[0x40]
0x1b3: V115 = M[V114]
0x1b7: V116 = GT V63 V115
0x1b8: V117 = ISZERO V116
0x1b9: V118 = ISZERO V117
0x1ba: V119 = ISZERO V118
0x1bb: V120 = 0x1c3
0x1be: JUMPI 0x1c3 V119
---
Entry stack: [V11, V63, V73, 0x70a08231, V94]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V11, V63]

================================

Block 0x1bf
[0x1bf:0x1c2]
---
Predecessors: [0x1ab]
Successors: []
---
0x1bf PUSH1 0x0
0x1c1 DUP1
0x1c2 REVERT
---
0x1bf: V121 = 0x0
0x1c2: REVERT 0x0 0x0
---
Entry stack: [V11, V63]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V63]

================================

Block 0x1c3
[0x1c3:0x282]
---
Predecessors: [0x1ab]
Successors: [0x283, 0x287]
---
0x1c3 JUMPDEST
0x1c4 PUSH1 0x1
0x1c6 PUSH1 0x0
0x1c8 SWAP1
0x1c9 SLOAD
0x1ca SWAP1
0x1cb PUSH2 0x100
0x1ce EXP
0x1cf SWAP1
0x1d0 DIV
0x1d1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e6 AND
0x1e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1fc AND
0x1fd PUSH4 0xa9059cbb
0x202 CALLER
0x203 DUP4
0x204 PUSH1 0x40
0x206 MLOAD
0x207 DUP4
0x208 PUSH4 0xffffffff
0x20d AND
0x20e PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x22c MUL
0x22d DUP2
0x22e MSTORE
0x22f PUSH1 0x4
0x231 ADD
0x232 DUP1
0x233 DUP4
0x234 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x249 AND
0x24a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x25f AND
0x260 DUP2
0x261 MSTORE
0x262 PUSH1 0x20
0x264 ADD
0x265 DUP3
0x266 DUP2
0x267 MSTORE
0x268 PUSH1 0x20
0x26a ADD
0x26b SWAP3
0x26c POP
0x26d POP
0x26e POP
0x26f PUSH1 0x0
0x271 PUSH1 0x40
0x273 MLOAD
0x274 DUP1
0x275 DUP4
0x276 SUB
0x277 DUP2
0x278 PUSH1 0x0
0x27a DUP8
0x27b DUP1
0x27c EXTCODESIZE
0x27d ISZERO
0x27e ISZERO
0x27f PUSH2 0x287
0x282 JUMPI
---
0x1c3: JUMPDEST 
0x1c4: V122 = 0x1
0x1c6: V123 = 0x0
0x1c9: V124 = S[0x1]
0x1cb: V125 = 0x100
0x1ce: V126 = EXP 0x100 0x0
0x1d0: V127 = DIV V124 0x1
0x1d1: V128 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e6: V129 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x1e7: V130 = 0xffffffffffffffffffffffffffffffffffffffff
0x1fc: V131 = AND 0xffffffffffffffffffffffffffffffffffffffff V129
0x1fd: V132 = 0xa9059cbb
0x202: V133 = CALLER
0x204: V134 = 0x40
0x206: V135 = M[0x40]
0x208: V136 = 0xffffffff
0x20d: V137 = AND 0xffffffff 0xa9059cbb
0x20e: V138 = 0x100000000000000000000000000000000000000000000000000000000
0x22c: V139 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x22e: M[V135] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x22f: V140 = 0x4
0x231: V141 = ADD 0x4 V135
0x234: V142 = 0xffffffffffffffffffffffffffffffffffffffff
0x249: V143 = AND 0xffffffffffffffffffffffffffffffffffffffff V133
0x24a: V144 = 0xffffffffffffffffffffffffffffffffffffffff
0x25f: V145 = AND 0xffffffffffffffffffffffffffffffffffffffff V143
0x261: M[V141] = V145
0x262: V146 = 0x20
0x264: V147 = ADD 0x20 V141
0x267: M[V147] = V63
0x268: V148 = 0x20
0x26a: V149 = ADD 0x20 V147
0x26f: V150 = 0x0
0x271: V151 = 0x40
0x273: V152 = M[0x40]
0x276: V153 = SUB V149 V152
0x278: V154 = 0x0
0x27c: V155 = EXTCODESIZE V131
0x27d: V156 = ISZERO V155
0x27e: V157 = ISZERO V156
0x27f: V158 = 0x287
0x282: JUMPI 0x287 V157
---
Entry stack: [V11, V63]
Stack pops: 1
Stack additions: [S0, V131, 0xa9059cbb, V149, 0x0, V152, V153, V152, 0x0, V131]
Exit stack: [V11, V63, V131, 0xa9059cbb, V149, 0x0, V152, V153, V152, 0x0, V131]

================================

Block 0x283
[0x283:0x286]
---
Predecessors: [0x1c3]
Successors: []
---
0x283 PUSH1 0x0
0x285 DUP1
0x286 REVERT
---
0x283: V159 = 0x0
0x286: REVERT 0x0 0x0
---
Entry stack: [V11, V63, V131, 0xa9059cbb, V149, 0x0, V152, V153, V152, 0x0, V131]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V63, V131, 0xa9059cbb, V149, 0x0, V152, V153, V152, 0x0, V131]

================================

Block 0x287
[0x287:0x293]
---
Predecessors: [0x1c3]
Successors: [0x294, 0x298]
---
0x287 JUMPDEST
0x288 PUSH2 0x2c6
0x28b GAS
0x28c SUB
0x28d CALL
0x28e ISZERO
0x28f ISZERO
0x290 PUSH2 0x298
0x293 JUMPI
---
0x287: JUMPDEST 
0x288: V160 = 0x2c6
0x28b: V161 = GAS
0x28c: V162 = SUB V161 0x2c6
0x28d: V163 = CALL V162 V131 0x0 V152 V153 V152 0x0
0x28e: V164 = ISZERO V163
0x28f: V165 = ISZERO V164
0x290: V166 = 0x298
0x293: JUMPI 0x298 V165
---
Entry stack: [V11, V63, V131, 0xa9059cbb, V149, 0x0, V152, V153, V152, 0x0, V131]
Stack pops: 6
Stack additions: []
Exit stack: [V11, V63, V131, 0xa9059cbb, V149]

================================

Block 0x294
[0x294:0x297]
---
Predecessors: [0x287]
Successors: []
---
0x294 PUSH1 0x0
0x296 DUP1
0x297 REVERT
---
0x294: V167 = 0x0
0x297: REVERT 0x0 0x0
---
Entry stack: [V11, V63, V131, 0xa9059cbb, V149]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V63, V131, 0xa9059cbb, V149]

================================

Block 0x298
[0x298:0x31f]
---
Predecessors: [0x287]
Successors: [0x320, 0x324]
---
0x298 JUMPDEST
0x299 POP
0x29a POP
0x29b POP
0x29c CALLVALUE
0x29d PUSH1 0x3
0x29f PUSH1 0x0
0x2a1 DUP3
0x2a2 DUP3
0x2a3 SLOAD
0x2a4 ADD
0x2a5 SWAP3
0x2a6 POP
0x2a7 POP
0x2a8 DUP2
0x2a9 SWAP1
0x2aa SSTORE
0x2ab POP
0x2ac PUSH1 0x2
0x2ae PUSH1 0x0
0x2b0 SWAP1
0x2b1 SLOAD
0x2b2 SWAP1
0x2b3 PUSH2 0x100
0x2b6 EXP
0x2b7 SWAP1
0x2b8 DIV
0x2b9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ce AND
0x2cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e4 AND
0x2e5 PUSH2 0x8fc
0x2e8 ADDRESS
0x2e9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2fe AND
0x2ff BALANCE
0x300 SWAP1
0x301 DUP2
0x302 ISZERO
0x303 MUL
0x304 SWAP1
0x305 PUSH1 0x40
0x307 MLOAD
0x308 PUSH1 0x0
0x30a PUSH1 0x40
0x30c MLOAD
0x30d DUP1
0x30e DUP4
0x30f SUB
0x310 DUP2
0x311 DUP6
0x312 DUP9
0x313 DUP9
0x314 CALL
0x315 SWAP4
0x316 POP
0x317 POP
0x318 POP
0x319 POP
0x31a ISZERO
0x31b ISZERO
0x31c PUSH2 0x324
0x31f JUMPI
---
0x298: JUMPDEST 
0x29c: V168 = CALLVALUE
0x29d: V169 = 0x3
0x29f: V170 = 0x0
0x2a3: V171 = S[0x3]
0x2a4: V172 = ADD V171 V168
0x2aa: S[0x3] = V172
0x2ac: V173 = 0x2
0x2ae: V174 = 0x0
0x2b1: V175 = S[0x2]
0x2b3: V176 = 0x100
0x2b6: V177 = EXP 0x100 0x0
0x2b8: V178 = DIV V175 0x1
0x2b9: V179 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ce: V180 = AND 0xffffffffffffffffffffffffffffffffffffffff V178
0x2cf: V181 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e4: V182 = AND 0xffffffffffffffffffffffffffffffffffffffff V180
0x2e5: V183 = 0x8fc
0x2e8: V184 = ADDRESS
0x2e9: V185 = 0xffffffffffffffffffffffffffffffffffffffff
0x2fe: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff V184
0x2ff: V187 = BALANCE V186
0x302: V188 = ISZERO V187
0x303: V189 = MUL V188 0x8fc
0x305: V190 = 0x40
0x307: V191 = M[0x40]
0x308: V192 = 0x0
0x30a: V193 = 0x40
0x30c: V194 = M[0x40]
0x30f: V195 = SUB V191 V194
0x314: V196 = CALL V189 V182 V187 V194 V195 V194 0x0
0x31a: V197 = ISZERO V196
0x31b: V198 = ISZERO V197
0x31c: V199 = 0x324
0x31f: JUMPI 0x324 V198
---
Entry stack: [V11, V63, V131, 0xa9059cbb, V149]
Stack pops: 3
Stack additions: []
Exit stack: [V11, V63]

================================

Block 0x320
[0x320:0x323]
---
Predecessors: [0x298]
Successors: []
---
0x320 PUSH1 0x0
0x322 DUP1
0x323 REVERT
---
0x320: V200 = 0x0
0x323: REVERT 0x0 0x0
---
Entry stack: [V11, V63]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V63]

================================

Block 0x324
[0x324:0x326]
---
Predecessors: [0x298]
Successors: []
---
0x324 JUMPDEST
0x325 POP
0x326 STOP
---
0x324: JUMPDEST 
0x326: STOP 
---
Entry stack: [V11, V63]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x327
[0x327:0x32d]
---
Predecessors: [0xd]
Successors: [0x32e, 0x332]
---
0x327 JUMPDEST
0x328 CALLVALUE
0x329 ISZERO
0x32a PUSH2 0x332
0x32d JUMPI
---
0x327: JUMPDEST 
0x328: V201 = CALLVALUE
0x329: V202 = ISZERO V201
0x32a: V203 = 0x332
0x32d: JUMPI 0x332 V202
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x32e
[0x32e:0x331]
---
Predecessors: [0x327]
Successors: []
---
0x32e PUSH1 0x0
0x330 DUP1
0x331 REVERT
---
0x32e: V204 = 0x0
0x331: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x332
[0x332:0x339]
---
Predecessors: [0x327]
Successors: [0x511]
---
0x332 JUMPDEST
0x333 PUSH2 0x33a
0x336 PUSH2 0x511
0x339 JUMP
---
0x332: JUMPDEST 
0x333: V205 = 0x33a
0x336: V206 = 0x511
0x339: JUMP 0x511
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x33a]
Exit stack: [V11, 0x33a]

================================

Block 0x33a
[0x33a:0x353]
---
Predecessors: [0x58a]
Successors: []
---
0x33a JUMPDEST
0x33b PUSH1 0x40
0x33d MLOAD
0x33e DUP1
0x33f DUP3
0x340 ISZERO
0x341 ISZERO
0x342 ISZERO
0x343 ISZERO
0x344 DUP2
0x345 MSTORE
0x346 PUSH1 0x20
0x348 ADD
0x349 SWAP2
0x34a POP
0x34b POP
0x34c PUSH1 0x40
0x34e MLOAD
0x34f DUP1
0x350 SWAP2
0x351 SUB
0x352 SWAP1
0x353 RETURN
---
0x33a: JUMPDEST 
0x33b: V207 = 0x40
0x33d: V208 = M[0x40]
0x340: V209 = ISZERO 0x1
0x341: V210 = ISZERO 0x0
0x342: V211 = ISZERO 0x1
0x343: V212 = ISZERO 0x0
0x345: M[V208] = 0x1
0x346: V213 = 0x20
0x348: V214 = ADD 0x20 V208
0x34c: V215 = 0x40
0x34e: V216 = M[0x40]
0x351: V217 = SUB V214 V216
0x353: RETURN V216 V217
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x354
[0x354:0x35a]
---
Predecessors: [0x41]
Successors: [0x35b, 0x35f]
---
0x354 JUMPDEST
0x355 CALLVALUE
0x356 ISZERO
0x357 PUSH2 0x35f
0x35a JUMPI
---
0x354: JUMPDEST 
0x355: V218 = CALLVALUE
0x356: V219 = ISZERO V218
0x357: V220 = 0x35f
0x35a: JUMPI 0x35f V219
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x35b
[0x35b:0x35e]
---
Predecessors: [0x354]
Successors: []
---
0x35b PUSH1 0x0
0x35d DUP1
0x35e REVERT
---
0x35b: V221 = 0x0
0x35e: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x35f
[0x35f:0x366]
---
Predecessors: [0x354]
Successors: [0x5ac]
---
0x35f JUMPDEST
0x360 PUSH2 0x367
0x363 PUSH2 0x5ac
0x366 JUMP
---
0x35f: JUMPDEST 
0x360: V222 = 0x367
0x363: V223 = 0x5ac
0x366: JUMP 0x5ac
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x367]
Exit stack: [V11, 0x367]

================================

Block 0x367
[0x367:0x368]
---
Predecessors: [0x681]
Successors: []
---
0x367 JUMPDEST
0x368 STOP
---
0x367: JUMPDEST 
0x368: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x369
[0x369:0x36f]
---
Predecessors: [0x4c]
Successors: [0x370, 0x374]
---
0x369 JUMPDEST
0x36a CALLVALUE
0x36b ISZERO
0x36c PUSH2 0x374
0x36f JUMPI
---
0x369: JUMPDEST 
0x36a: V224 = CALLVALUE
0x36b: V225 = ISZERO V224
0x36c: V226 = 0x374
0x36f: JUMPI 0x374 V225
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x370
[0x370:0x373]
---
Predecessors: [0x369]
Successors: []
---
0x370 PUSH1 0x0
0x372 DUP1
0x373 REVERT
---
0x370: V227 = 0x0
0x373: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x374
[0x374:0x37b]
---
Predecessors: [0x369]
Successors: [0x683]
---
0x374 JUMPDEST
0x375 PUSH2 0x37c
0x378 PUSH2 0x683
0x37b JUMP
---
0x374: JUMPDEST 
0x375: V228 = 0x37c
0x378: V229 = 0x683
0x37b: JUMP 0x683
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x37c]
Exit stack: [V11, 0x37c]

================================

Block 0x37c
[0x37c:0x3bd]
---
Predecessors: [0x683]
Successors: []
---
0x37c JUMPDEST
0x37d PUSH1 0x40
0x37f MLOAD
0x380 DUP1
0x381 DUP3
0x382 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x397 AND
0x398 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ad AND
0x3ae DUP2
0x3af MSTORE
0x3b0 PUSH1 0x20
0x3b2 ADD
0x3b3 SWAP2
0x3b4 POP
0x3b5 POP
0x3b6 PUSH1 0x40
0x3b8 MLOAD
0x3b9 DUP1
0x3ba SWAP2
0x3bb SUB
0x3bc SWAP1
0x3bd RETURN
---
0x37c: JUMPDEST 
0x37d: V230 = 0x40
0x37f: V231 = M[0x40]
0x382: V232 = 0xffffffffffffffffffffffffffffffffffffffff
0x397: V233 = AND 0xffffffffffffffffffffffffffffffffffffffff V431
0x398: V234 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ad: V235 = AND 0xffffffffffffffffffffffffffffffffffffffff V233
0x3af: M[V231] = V235
0x3b0: V236 = 0x20
0x3b2: V237 = ADD 0x20 V231
0x3b6: V238 = 0x40
0x3b8: V239 = M[0x40]
0x3bb: V240 = SUB V237 V239
0x3bd: RETURN V239 V240
---
Entry stack: [V11, 0x37c, V431]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x37c]

================================

Block 0x3be
[0x3be:0x3c4]
---
Predecessors: [0x57]
Successors: [0x3c5, 0x3c9]
---
0x3be JUMPDEST
0x3bf CALLVALUE
0x3c0 ISZERO
0x3c1 PUSH2 0x3c9
0x3c4 JUMPI
---
0x3be: JUMPDEST 
0x3bf: V241 = CALLVALUE
0x3c0: V242 = ISZERO V241
0x3c1: V243 = 0x3c9
0x3c4: JUMPI 0x3c9 V242
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3c5
[0x3c5:0x3c8]
---
Predecessors: [0x3be]
Successors: []
---
0x3c5 PUSH1 0x0
0x3c7 DUP1
0x3c8 REVERT
---
0x3c5: V244 = 0x0
0x3c8: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3c9
[0x3c9:0x3d0]
---
Predecessors: [0x3be]
Successors: [0x6a9]
---
0x3c9 JUMPDEST
0x3ca PUSH2 0x3d1
0x3cd PUSH2 0x6a9
0x3d0 JUMP
---
0x3c9: JUMPDEST 
0x3ca: V245 = 0x3d1
0x3cd: V246 = 0x6a9
0x3d0: JUMP 0x6a9
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x3d1]
Exit stack: [V11, 0x3d1]

================================

Block 0x3d1
[0x3d1:0x412]
---
Predecessors: [0x6a9]
Successors: []
---
0x3d1 JUMPDEST
0x3d2 PUSH1 0x40
0x3d4 MLOAD
0x3d5 DUP1
0x3d6 DUP3
0x3d7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ec AND
0x3ed PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x402 AND
0x403 DUP2
0x404 MSTORE
0x405 PUSH1 0x20
0x407 ADD
0x408 SWAP2
0x409 POP
0x40a POP
0x40b PUSH1 0x40
0x40d MLOAD
0x40e DUP1
0x40f SWAP2
0x410 SUB
0x411 SWAP1
0x412 RETURN
---
0x3d1: JUMPDEST 
0x3d2: V247 = 0x40
0x3d4: V248 = M[0x40]
0x3d7: V249 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ec: V250 = AND 0xffffffffffffffffffffffffffffffffffffffff V438
0x3ed: V251 = 0xffffffffffffffffffffffffffffffffffffffff
0x402: V252 = AND 0xffffffffffffffffffffffffffffffffffffffff V250
0x404: M[V248] = V252
0x405: V253 = 0x20
0x407: V254 = ADD 0x20 V248
0x40b: V255 = 0x40
0x40d: V256 = M[0x40]
0x410: V257 = SUB V254 V256
0x412: RETURN V256 V257
---
Entry stack: [V11, 0x3d1, V438]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x3d1]

================================

Block 0x413
[0x413:0x419]
---
Predecessors: [0x62]
Successors: [0x41a, 0x41e]
---
0x413 JUMPDEST
0x414 CALLVALUE
0x415 ISZERO
0x416 PUSH2 0x41e
0x419 JUMPI
---
0x413: JUMPDEST 
0x414: V258 = CALLVALUE
0x415: V259 = ISZERO V258
0x416: V260 = 0x41e
0x419: JUMPI 0x41e V259
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x41a
[0x41a:0x41d]
---
Predecessors: [0x413]
Successors: []
---
0x41a PUSH1 0x0
0x41c DUP1
0x41d REVERT
---
0x41a: V261 = 0x0
0x41d: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x41e
[0x41e:0x452]
---
Predecessors: [0x413]
Successors: [0x6ce]
---
0x41e JUMPDEST
0x41f PUSH2 0x453
0x422 PUSH1 0x4
0x424 DUP1
0x425 DUP1
0x426 CALLDATALOAD
0x427 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x43c AND
0x43d SWAP1
0x43e PUSH1 0x20
0x440 ADD
0x441 SWAP1
0x442 SWAP2
0x443 SWAP1
0x444 DUP1
0x445 CALLDATALOAD
0x446 SWAP1
0x447 PUSH1 0x20
0x449 ADD
0x44a SWAP1
0x44b SWAP2
0x44c SWAP1
0x44d POP
0x44e POP
0x44f PUSH2 0x6ce
0x452 JUMP
---
0x41e: JUMPDEST 
0x41f: V262 = 0x453
0x422: V263 = 0x4
0x426: V264 = CALLDATALOAD 0x4
0x427: V265 = 0xffffffffffffffffffffffffffffffffffffffff
0x43c: V266 = AND 0xffffffffffffffffffffffffffffffffffffffff V264
0x43e: V267 = 0x20
0x440: V268 = ADD 0x20 0x4
0x445: V269 = CALLDATALOAD 0x24
0x447: V270 = 0x20
0x449: V271 = ADD 0x20 0x24
0x44f: V272 = 0x6ce
0x452: JUMP 0x6ce
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x453, V266, V269]
Exit stack: [V11, 0x453, V266, V269]

================================

Block 0x453
[0x453:0x454]
---
Predecessors: [0x7ff]
Successors: []
---
0x453 JUMPDEST
0x454 STOP
---
0x453: JUMPDEST 
0x454: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x455
[0x455:0x45b]
---
Predecessors: [0x6d]
Successors: [0x45c, 0x460]
---
0x455 JUMPDEST
0x456 CALLVALUE
0x457 ISZERO
0x458 PUSH2 0x460
0x45b JUMPI
---
0x455: JUMPDEST 
0x456: V273 = CALLVALUE
0x457: V274 = ISZERO V273
0x458: V275 = 0x460
0x45b: JUMPI 0x460 V274
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x45c
[0x45c:0x45f]
---
Predecessors: [0x455]
Successors: []
---
0x45c PUSH1 0x0
0x45e DUP1
0x45f REVERT
---
0x45c: V276 = 0x0
0x45f: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x460
[0x460:0x467]
---
Predecessors: [0x455]
Successors: [0x806]
---
0x460 JUMPDEST
0x461 PUSH2 0x468
0x464 PUSH2 0x806
0x467 JUMP
---
0x460: JUMPDEST 
0x461: V277 = 0x468
0x464: V278 = 0x806
0x467: JUMP 0x806
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x468]
Exit stack: [V11, 0x468]

================================

Block 0x468
[0x468:0x481]
---
Predecessors: [0x806]
Successors: []
---
0x468 JUMPDEST
0x469 PUSH1 0x40
0x46b MLOAD
0x46c DUP1
0x46d DUP3
0x46e ISZERO
0x46f ISZERO
0x470 ISZERO
0x471 ISZERO
0x472 DUP2
0x473 MSTORE
0x474 PUSH1 0x20
0x476 ADD
0x477 SWAP2
0x478 POP
0x479 POP
0x47a PUSH1 0x40
0x47c MLOAD
0x47d DUP1
0x47e SWAP2
0x47f SUB
0x480 SWAP1
0x481 RETURN
---
0x468: JUMPDEST 
0x469: V279 = 0x40
0x46b: V280 = M[0x40]
0x46e: V281 = ISZERO V509
0x46f: V282 = ISZERO V281
0x470: V283 = ISZERO V282
0x471: V284 = ISZERO V283
0x473: M[V280] = V284
0x474: V285 = 0x20
0x476: V286 = ADD 0x20 V280
0x47a: V287 = 0x40
0x47c: V288 = M[0x40]
0x47f: V289 = SUB V286 V288
0x481: RETURN V288 V289
---
Entry stack: [V11, 0x468, V509]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x468]

================================

Block 0x482
[0x482:0x488]
---
Predecessors: [0x78]
Successors: [0x489, 0x48d]
---
0x482 JUMPDEST
0x483 CALLVALUE
0x484 ISZERO
0x485 PUSH2 0x48d
0x488 JUMPI
---
0x482: JUMPDEST 
0x483: V290 = CALLVALUE
0x484: V291 = ISZERO V290
0x485: V292 = 0x48d
0x488: JUMPI 0x48d V291
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x489
[0x489:0x48c]
---
Predecessors: [0x482]
Successors: []
---
0x489 PUSH1 0x0
0x48b DUP1
0x48c REVERT
---
0x489: V293 = 0x0
0x48c: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x48d
[0x48d:0x494]
---
Predecessors: [0x482]
Successors: [0x819]
---
0x48d JUMPDEST
0x48e PUSH2 0x495
0x491 PUSH2 0x819
0x494 JUMP
---
0x48d: JUMPDEST 
0x48e: V294 = 0x495
0x491: V295 = 0x819
0x494: JUMP 0x819
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x495]
Exit stack: [V11, 0x495]

================================

Block 0x495
[0x495:0x4aa]
---
Predecessors: [0x819]
Successors: []
---
0x495 JUMPDEST
0x496 PUSH1 0x40
0x498 MLOAD
0x499 DUP1
0x49a DUP3
0x49b DUP2
0x49c MSTORE
0x49d PUSH1 0x20
0x49f ADD
0x4a0 SWAP2
0x4a1 POP
0x4a2 POP
0x4a3 PUSH1 0x40
0x4a5 MLOAD
0x4a6 DUP1
0x4a7 SWAP2
0x4a8 SUB
0x4a9 SWAP1
0x4aa RETURN
---
0x495: JUMPDEST 
0x496: V296 = 0x40
0x498: V297 = M[0x40]
0x49c: M[V297] = V511
0x49d: V298 = 0x20
0x49f: V299 = ADD 0x20 V297
0x4a3: V300 = 0x40
0x4a5: V301 = M[0x40]
0x4a8: V302 = SUB V299 V301
0x4aa: RETURN V301 V302
---
Entry stack: [V11, 0x495, V511]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x495]

================================

Block 0x4ab
[0x4ab:0x4b1]
---
Predecessors: [0x83]
Successors: [0x4b2, 0x4b6]
---
0x4ab JUMPDEST
0x4ac CALLVALUE
0x4ad ISZERO
0x4ae PUSH2 0x4b6
0x4b1 JUMPI
---
0x4ab: JUMPDEST 
0x4ac: V303 = CALLVALUE
0x4ad: V304 = ISZERO V303
0x4ae: V305 = 0x4b6
0x4b1: JUMPI 0x4b6 V304
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4b2
[0x4b2:0x4b5]
---
Predecessors: [0x4ab]
Successors: []
---
0x4b2 PUSH1 0x0
0x4b4 DUP1
0x4b5 REVERT
---
0x4b2: V306 = 0x0
0x4b5: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4b6
[0x4b6:0x4e1]
---
Predecessors: [0x4ab]
Successors: [0x81f]
---
0x4b6 JUMPDEST
0x4b7 PUSH2 0x4e2
0x4ba PUSH1 0x4
0x4bc DUP1
0x4bd DUP1
0x4be CALLDATALOAD
0x4bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4d4 AND
0x4d5 SWAP1
0x4d6 PUSH1 0x20
0x4d8 ADD
0x4d9 SWAP1
0x4da SWAP2
0x4db SWAP1
0x4dc POP
0x4dd POP
0x4de PUSH2 0x81f
0x4e1 JUMP
---
0x4b6: JUMPDEST 
0x4b7: V307 = 0x4e2
0x4ba: V308 = 0x4
0x4be: V309 = CALLDATALOAD 0x4
0x4bf: V310 = 0xffffffffffffffffffffffffffffffffffffffff
0x4d4: V311 = AND 0xffffffffffffffffffffffffffffffffffffffff V309
0x4d6: V312 = 0x20
0x4d8: V313 = ADD 0x20 0x4
0x4de: V314 = 0x81f
0x4e1: JUMP 0x81f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x4e2, V311]
Exit stack: [V11, 0x4e2, V311]

================================

Block 0x4e2
[0x4e2:0x4e3]
---
Predecessors: [0x87b]
Successors: []
---
0x4e2 JUMPDEST
0x4e3 STOP
---
0x4e2: JUMPDEST 
0x4e3: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4e4
[0x4e4:0x4ea]
---
Predecessors: [0x8e]
Successors: [0x4eb, 0x4ef]
---
0x4e4 JUMPDEST
0x4e5 CALLVALUE
0x4e6 ISZERO
0x4e7 PUSH2 0x4ef
0x4ea JUMPI
---
0x4e4: JUMPDEST 
0x4e5: V315 = CALLVALUE
0x4e6: V316 = ISZERO V315
0x4e7: V317 = 0x4ef
0x4ea: JUMPI 0x4ef V316
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4eb
[0x4eb:0x4ee]
---
Predecessors: [0x4e4]
Successors: []
---
0x4eb PUSH1 0x0
0x4ed DUP1
0x4ee REVERT
---
0x4eb: V318 = 0x0
0x4ee: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4ef
[0x4ef:0x4f6]
---
Predecessors: [0x4e4]
Successors: [0x8bf]
---
0x4ef JUMPDEST
0x4f0 PUSH2 0x4f7
0x4f3 PUSH2 0x8bf
0x4f6 JUMP
---
0x4ef: JUMPDEST 
0x4f0: V319 = 0x4f7
0x4f3: V320 = 0x8bf
0x4f6: JUMP 0x8bf
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x4f7]
Exit stack: [V11, 0x4f7]

================================

Block 0x4f7
[0x4f7:0x510]
---
Predecessors: [0x939]
Successors: []
---
0x4f7 JUMPDEST
0x4f8 PUSH1 0x40
0x4fa MLOAD
0x4fb DUP1
0x4fc DUP3
0x4fd ISZERO
0x4fe ISZERO
0x4ff ISZERO
0x500 ISZERO
0x501 DUP2
0x502 MSTORE
0x503 PUSH1 0x20
0x505 ADD
0x506 SWAP2
0x507 POP
0x508 POP
0x509 PUSH1 0x40
0x50b MLOAD
0x50c DUP1
0x50d SWAP2
0x50e SUB
0x50f SWAP1
0x510 RETURN
---
0x4f7: JUMPDEST 
0x4f8: V321 = 0x40
0x4fa: V322 = M[0x40]
0x4fd: V323 = ISZERO 0x1
0x4fe: V324 = ISZERO 0x0
0x4ff: V325 = ISZERO 0x1
0x500: V326 = ISZERO 0x0
0x502: M[V322] = 0x1
0x503: V327 = 0x20
0x505: V328 = ADD 0x20 V322
0x509: V329 = 0x40
0x50b: V330 = M[0x40]
0x50e: V331 = SUB V328 V330
0x510: RETURN V330 V331
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x511
[0x511:0x56a]
---
Predecessors: [0x332]
Successors: [0x56b, 0x56f]
---
0x511 JUMPDEST
0x512 PUSH1 0x0
0x514 PUSH1 0x2
0x516 PUSH1 0x0
0x518 SWAP1
0x519 SLOAD
0x51a SWAP1
0x51b PUSH2 0x100
0x51e EXP
0x51f SWAP1
0x520 DIV
0x521 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x536 AND
0x537 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x54c AND
0x54d CALLER
0x54e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x563 AND
0x564 EQ
0x565 ISZERO
0x566 ISZERO
0x567 PUSH2 0x56f
0x56a JUMPI
---
0x511: JUMPDEST 
0x512: V332 = 0x0
0x514: V333 = 0x2
0x516: V334 = 0x0
0x519: V335 = S[0x2]
0x51b: V336 = 0x100
0x51e: V337 = EXP 0x100 0x0
0x520: V338 = DIV V335 0x1
0x521: V339 = 0xffffffffffffffffffffffffffffffffffffffff
0x536: V340 = AND 0xffffffffffffffffffffffffffffffffffffffff V338
0x537: V341 = 0xffffffffffffffffffffffffffffffffffffffff
0x54c: V342 = AND 0xffffffffffffffffffffffffffffffffffffffff V340
0x54d: V343 = CALLER
0x54e: V344 = 0xffffffffffffffffffffffffffffffffffffffff
0x563: V345 = AND 0xffffffffffffffffffffffffffffffffffffffff V343
0x564: V346 = EQ V345 V342
0x565: V347 = ISZERO V346
0x566: V348 = ISZERO V347
0x567: V349 = 0x56f
0x56a: JUMPI 0x56f V348
---
Entry stack: [V11, 0x33a]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x33a, 0x0]

================================

Block 0x56b
[0x56b:0x56e]
---
Predecessors: [0x511]
Successors: []
---
0x56b PUSH1 0x0
0x56d DUP1
0x56e REVERT
---
0x56b: V350 = 0x0
0x56e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x33a, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x33a, 0x0]

================================

Block 0x56f
[0x56f:0x585]
---
Predecessors: [0x511]
Successors: [0x586, 0x58a]
---
0x56f JUMPDEST
0x570 PUSH1 0x4
0x572 PUSH1 0x0
0x574 SWAP1
0x575 SLOAD
0x576 SWAP1
0x577 PUSH2 0x100
0x57a EXP
0x57b SWAP1
0x57c DIV
0x57d PUSH1 0xff
0x57f AND
0x580 ISZERO
0x581 ISZERO
0x582 PUSH2 0x58a
0x585 JUMPI
---
0x56f: JUMPDEST 
0x570: V351 = 0x4
0x572: V352 = 0x0
0x575: V353 = S[0x4]
0x577: V354 = 0x100
0x57a: V355 = EXP 0x100 0x0
0x57c: V356 = DIV V353 0x1
0x57d: V357 = 0xff
0x57f: V358 = AND 0xff V356
0x580: V359 = ISZERO V358
0x581: V360 = ISZERO V359
0x582: V361 = 0x58a
0x585: JUMPI 0x58a V360
---
Entry stack: [V11, 0x33a, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x33a, 0x0]

================================

Block 0x586
[0x586:0x589]
---
Predecessors: [0x56f]
Successors: []
---
0x586 PUSH1 0x0
0x588 DUP1
0x589 REVERT
---
0x586: V362 = 0x0
0x589: REVERT 0x0 0x0
---
Entry stack: [V11, 0x33a, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x33a, 0x0]

================================

Block 0x58a
[0x58a:0x5ab]
---
Predecessors: [0x56f]
Successors: [0x33a]
---
0x58a JUMPDEST
0x58b PUSH1 0x0
0x58d PUSH1 0x4
0x58f PUSH1 0x0
0x591 PUSH2 0x100
0x594 EXP
0x595 DUP2
0x596 SLOAD
0x597 DUP2
0x598 PUSH1 0xff
0x59a MUL
0x59b NOT
0x59c AND
0x59d SWAP1
0x59e DUP4
0x59f ISZERO
0x5a0 ISZERO
0x5a1 MUL
0x5a2 OR
0x5a3 SWAP1
0x5a4 SSTORE
0x5a5 POP
0x5a6 PUSH1 0x1
0x5a8 SWAP1
0x5a9 POP
0x5aa SWAP1
0x5ab JUMP
---
0x58a: JUMPDEST 
0x58b: V363 = 0x0
0x58d: V364 = 0x4
0x58f: V365 = 0x0
0x591: V366 = 0x100
0x594: V367 = EXP 0x100 0x0
0x596: V368 = S[0x4]
0x598: V369 = 0xff
0x59a: V370 = MUL 0xff 0x1
0x59b: V371 = NOT 0xff
0x59c: V372 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V368
0x59f: V373 = ISZERO 0x0
0x5a0: V374 = ISZERO 0x1
0x5a1: V375 = MUL 0x0 0x1
0x5a2: V376 = OR 0x0 V372
0x5a4: S[0x4] = V376
0x5a6: V377 = 0x1
0x5ab: JUMP 0x33a
---
Entry stack: [V11, 0x33a, 0x0]
Stack pops: 2
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x5ac
[0x5ac:0x603]
---
Predecessors: [0x35f]
Successors: [0x604, 0x608]
---
0x5ac JUMPDEST
0x5ad PUSH1 0x2
0x5af PUSH1 0x0
0x5b1 SWAP1
0x5b2 SLOAD
0x5b3 SWAP1
0x5b4 PUSH2 0x100
0x5b7 EXP
0x5b8 SWAP1
0x5b9 DIV
0x5ba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5cf AND
0x5d0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5e5 AND
0x5e6 CALLER
0x5e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5fc AND
0x5fd EQ
0x5fe ISZERO
0x5ff ISZERO
0x600 PUSH2 0x608
0x603 JUMPI
---
0x5ac: JUMPDEST 
0x5ad: V378 = 0x2
0x5af: V379 = 0x0
0x5b2: V380 = S[0x2]
0x5b4: V381 = 0x100
0x5b7: V382 = EXP 0x100 0x0
0x5b9: V383 = DIV V380 0x1
0x5ba: V384 = 0xffffffffffffffffffffffffffffffffffffffff
0x5cf: V385 = AND 0xffffffffffffffffffffffffffffffffffffffff V383
0x5d0: V386 = 0xffffffffffffffffffffffffffffffffffffffff
0x5e5: V387 = AND 0xffffffffffffffffffffffffffffffffffffffff V385
0x5e6: V388 = CALLER
0x5e7: V389 = 0xffffffffffffffffffffffffffffffffffffffff
0x5fc: V390 = AND 0xffffffffffffffffffffffffffffffffffffffff V388
0x5fd: V391 = EQ V390 V387
0x5fe: V392 = ISZERO V391
0x5ff: V393 = ISZERO V392
0x600: V394 = 0x608
0x603: JUMPI 0x608 V393
---
Entry stack: [V11, 0x367]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x367]

================================

Block 0x604
[0x604:0x607]
---
Predecessors: [0x5ac]
Successors: []
---
0x604 PUSH1 0x0
0x606 DUP1
0x607 REVERT
---
0x604: V395 = 0x0
0x607: REVERT 0x0 0x0
---
Entry stack: [V11, 0x367]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x367]

================================

Block 0x608
[0x608:0x67c]
---
Predecessors: [0x5ac]
Successors: [0x67d, 0x681]
---
0x608 JUMPDEST
0x609 PUSH1 0x2
0x60b PUSH1 0x0
0x60d SWAP1
0x60e SLOAD
0x60f SWAP1
0x610 PUSH2 0x100
0x613 EXP
0x614 SWAP1
0x615 DIV
0x616 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x62b AND
0x62c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x641 AND
0x642 PUSH2 0x8fc
0x645 ADDRESS
0x646 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x65b AND
0x65c BALANCE
0x65d SWAP1
0x65e DUP2
0x65f ISZERO
0x660 MUL
0x661 SWAP1
0x662 PUSH1 0x40
0x664 MLOAD
0x665 PUSH1 0x0
0x667 PUSH1 0x40
0x669 MLOAD
0x66a DUP1
0x66b DUP4
0x66c SUB
0x66d DUP2
0x66e DUP6
0x66f DUP9
0x670 DUP9
0x671 CALL
0x672 SWAP4
0x673 POP
0x674 POP
0x675 POP
0x676 POP
0x677 ISZERO
0x678 ISZERO
0x679 PUSH2 0x681
0x67c JUMPI
---
0x608: JUMPDEST 
0x609: V396 = 0x2
0x60b: V397 = 0x0
0x60e: V398 = S[0x2]
0x610: V399 = 0x100
0x613: V400 = EXP 0x100 0x0
0x615: V401 = DIV V398 0x1
0x616: V402 = 0xffffffffffffffffffffffffffffffffffffffff
0x62b: V403 = AND 0xffffffffffffffffffffffffffffffffffffffff V401
0x62c: V404 = 0xffffffffffffffffffffffffffffffffffffffff
0x641: V405 = AND 0xffffffffffffffffffffffffffffffffffffffff V403
0x642: V406 = 0x8fc
0x645: V407 = ADDRESS
0x646: V408 = 0xffffffffffffffffffffffffffffffffffffffff
0x65b: V409 = AND 0xffffffffffffffffffffffffffffffffffffffff V407
0x65c: V410 = BALANCE V409
0x65f: V411 = ISZERO V410
0x660: V412 = MUL V411 0x8fc
0x662: V413 = 0x40
0x664: V414 = M[0x40]
0x665: V415 = 0x0
0x667: V416 = 0x40
0x669: V417 = M[0x40]
0x66c: V418 = SUB V414 V417
0x671: V419 = CALL V412 V405 V410 V417 V418 V417 0x0
0x677: V420 = ISZERO V419
0x678: V421 = ISZERO V420
0x679: V422 = 0x681
0x67c: JUMPI 0x681 V421
---
Entry stack: [V11, 0x367]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x367]

================================

Block 0x67d
[0x67d:0x680]
---
Predecessors: [0x608]
Successors: []
---
0x67d PUSH1 0x0
0x67f DUP1
0x680 REVERT
---
0x67d: V423 = 0x0
0x680: REVERT 0x0 0x0
---
Entry stack: [V11, 0x367]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x367]

================================

Block 0x681
[0x681:0x682]
---
Predecessors: [0x608]
Successors: [0x367]
---
0x681 JUMPDEST
0x682 JUMP
---
0x681: JUMPDEST 
0x682: JUMP 0x367
---
Entry stack: [V11, 0x367]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x683
[0x683:0x6a8]
---
Predecessors: [0x374]
Successors: [0x37c]
---
0x683 JUMPDEST
0x684 PUSH1 0x2
0x686 PUSH1 0x0
0x688 SWAP1
0x689 SLOAD
0x68a SWAP1
0x68b PUSH2 0x100
0x68e EXP
0x68f SWAP1
0x690 DIV
0x691 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6a6 AND
0x6a7 DUP2
0x6a8 JUMP
---
0x683: JUMPDEST 
0x684: V424 = 0x2
0x686: V425 = 0x0
0x689: V426 = S[0x2]
0x68b: V427 = 0x100
0x68e: V428 = EXP 0x100 0x0
0x690: V429 = DIV V426 0x1
0x691: V430 = 0xffffffffffffffffffffffffffffffffffffffff
0x6a6: V431 = AND 0xffffffffffffffffffffffffffffffffffffffff V429
0x6a8: JUMP 0x37c
---
Entry stack: [V11, 0x37c]
Stack pops: 1
Stack additions: [S0, V431]
Exit stack: [V11, 0x37c, V431]

================================

Block 0x6a9
[0x6a9:0x6cd]
---
Predecessors: [0x3c9]
Successors: [0x3d1]
---
0x6a9 JUMPDEST
0x6aa PUSH1 0x0
0x6ac DUP1
0x6ad SWAP1
0x6ae SLOAD
0x6af SWAP1
0x6b0 PUSH2 0x100
0x6b3 EXP
0x6b4 SWAP1
0x6b5 DIV
0x6b6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6cb AND
0x6cc DUP2
0x6cd JUMP
---
0x6a9: JUMPDEST 
0x6aa: V432 = 0x0
0x6ae: V433 = S[0x0]
0x6b0: V434 = 0x100
0x6b3: V435 = EXP 0x100 0x0
0x6b5: V436 = DIV V433 0x1
0x6b6: V437 = 0xffffffffffffffffffffffffffffffffffffffff
0x6cb: V438 = AND 0xffffffffffffffffffffffffffffffffffffffff V436
0x6cd: JUMP 0x3d1
---
Entry stack: [V11, 0x3d1]
Stack pops: 1
Stack additions: [S0, V438]
Exit stack: [V11, 0x3d1, V438]

================================

Block 0x6ce
[0x6ce:0x725]
---
Predecessors: [0x41e]
Successors: [0x726, 0x72a]
---
0x6ce JUMPDEST
0x6cf PUSH1 0x2
0x6d1 PUSH1 0x0
0x6d3 SWAP1
0x6d4 SLOAD
0x6d5 SWAP1
0x6d6 PUSH2 0x100
0x6d9 EXP
0x6da SWAP1
0x6db DIV
0x6dc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6f1 AND
0x6f2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x707 AND
0x708 CALLER
0x709 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x71e AND
0x71f EQ
0x720 ISZERO
0x721 ISZERO
0x722 PUSH2 0x72a
0x725 JUMPI
---
0x6ce: JUMPDEST 
0x6cf: V439 = 0x2
0x6d1: V440 = 0x0
0x6d4: V441 = S[0x2]
0x6d6: V442 = 0x100
0x6d9: V443 = EXP 0x100 0x0
0x6db: V444 = DIV V441 0x1
0x6dc: V445 = 0xffffffffffffffffffffffffffffffffffffffff
0x6f1: V446 = AND 0xffffffffffffffffffffffffffffffffffffffff V444
0x6f2: V447 = 0xffffffffffffffffffffffffffffffffffffffff
0x707: V448 = AND 0xffffffffffffffffffffffffffffffffffffffff V446
0x708: V449 = CALLER
0x709: V450 = 0xffffffffffffffffffffffffffffffffffffffff
0x71e: V451 = AND 0xffffffffffffffffffffffffffffffffffffffff V449
0x71f: V452 = EQ V451 V448
0x720: V453 = ISZERO V452
0x721: V454 = ISZERO V453
0x722: V455 = 0x72a
0x725: JUMPI 0x72a V454
---
Entry stack: [V11, 0x453, V266, V269]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x453, V266, V269]

================================

Block 0x726
[0x726:0x729]
---
Predecessors: [0x6ce]
Successors: []
---
0x726 PUSH1 0x0
0x728 DUP1
0x729 REVERT
---
0x726: V456 = 0x0
0x729: REVERT 0x0 0x0
---
Entry stack: [V11, 0x453, V266, V269]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x453, V266, V269]

================================

Block 0x72a
[0x72a:0x7e9]
---
Predecessors: [0x6ce]
Successors: [0x7ea, 0x7ee]
---
0x72a JUMPDEST
0x72b PUSH1 0x1
0x72d PUSH1 0x0
0x72f SWAP1
0x730 SLOAD
0x731 SWAP1
0x732 PUSH2 0x100
0x735 EXP
0x736 SWAP1
0x737 DIV
0x738 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x74d AND
0x74e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x763 AND
0x764 PUSH4 0xa9059cbb
0x769 DUP4
0x76a DUP4
0x76b PUSH1 0x40
0x76d MLOAD
0x76e DUP4
0x76f PUSH4 0xffffffff
0x774 AND
0x775 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x793 MUL
0x794 DUP2
0x795 MSTORE
0x796 PUSH1 0x4
0x798 ADD
0x799 DUP1
0x79a DUP4
0x79b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7b0 AND
0x7b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7c6 AND
0x7c7 DUP2
0x7c8 MSTORE
0x7c9 PUSH1 0x20
0x7cb ADD
0x7cc DUP3
0x7cd DUP2
0x7ce MSTORE
0x7cf PUSH1 0x20
0x7d1 ADD
0x7d2 SWAP3
0x7d3 POP
0x7d4 POP
0x7d5 POP
0x7d6 PUSH1 0x0
0x7d8 PUSH1 0x40
0x7da MLOAD
0x7db DUP1
0x7dc DUP4
0x7dd SUB
0x7de DUP2
0x7df PUSH1 0x0
0x7e1 DUP8
0x7e2 DUP1
0x7e3 EXTCODESIZE
0x7e4 ISZERO
0x7e5 ISZERO
0x7e6 PUSH2 0x7ee
0x7e9 JUMPI
---
0x72a: JUMPDEST 
0x72b: V457 = 0x1
0x72d: V458 = 0x0
0x730: V459 = S[0x1]
0x732: V460 = 0x100
0x735: V461 = EXP 0x100 0x0
0x737: V462 = DIV V459 0x1
0x738: V463 = 0xffffffffffffffffffffffffffffffffffffffff
0x74d: V464 = AND 0xffffffffffffffffffffffffffffffffffffffff V462
0x74e: V465 = 0xffffffffffffffffffffffffffffffffffffffff
0x763: V466 = AND 0xffffffffffffffffffffffffffffffffffffffff V464
0x764: V467 = 0xa9059cbb
0x76b: V468 = 0x40
0x76d: V469 = M[0x40]
0x76f: V470 = 0xffffffff
0x774: V471 = AND 0xffffffff 0xa9059cbb
0x775: V472 = 0x100000000000000000000000000000000000000000000000000000000
0x793: V473 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x795: M[V469] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x796: V474 = 0x4
0x798: V475 = ADD 0x4 V469
0x79b: V476 = 0xffffffffffffffffffffffffffffffffffffffff
0x7b0: V477 = AND 0xffffffffffffffffffffffffffffffffffffffff V266
0x7b1: V478 = 0xffffffffffffffffffffffffffffffffffffffff
0x7c6: V479 = AND 0xffffffffffffffffffffffffffffffffffffffff V477
0x7c8: M[V475] = V479
0x7c9: V480 = 0x20
0x7cb: V481 = ADD 0x20 V475
0x7ce: M[V481] = V269
0x7cf: V482 = 0x20
0x7d1: V483 = ADD 0x20 V481
0x7d6: V484 = 0x0
0x7d8: V485 = 0x40
0x7da: V486 = M[0x40]
0x7dd: V487 = SUB V483 V486
0x7df: V488 = 0x0
0x7e3: V489 = EXTCODESIZE V466
0x7e4: V490 = ISZERO V489
0x7e5: V491 = ISZERO V490
0x7e6: V492 = 0x7ee
0x7e9: JUMPI 0x7ee V491
---
Entry stack: [V11, 0x453, V266, V269]
Stack pops: 2
Stack additions: [S1, S0, V466, 0xa9059cbb, V483, 0x0, V486, V487, V486, 0x0, V466]
Exit stack: [V11, 0x453, V266, V269, V466, 0xa9059cbb, V483, 0x0, V486, V487, V486, 0x0, V466]

================================

Block 0x7ea
[0x7ea:0x7ed]
---
Predecessors: [0x72a]
Successors: []
---
0x7ea PUSH1 0x0
0x7ec DUP1
0x7ed REVERT
---
0x7ea: V493 = 0x0
0x7ed: REVERT 0x0 0x0
---
Entry stack: [V11, 0x453, V266, V269, V466, 0xa9059cbb, V483, 0x0, V486, V487, V486, 0x0, V466]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x453, V266, V269, V466, 0xa9059cbb, V483, 0x0, V486, V487, V486, 0x0, V466]

================================

Block 0x7ee
[0x7ee:0x7fa]
---
Predecessors: [0x72a]
Successors: [0x7fb, 0x7ff]
---
0x7ee JUMPDEST
0x7ef PUSH2 0x2c6
0x7f2 GAS
0x7f3 SUB
0x7f4 CALL
0x7f5 ISZERO
0x7f6 ISZERO
0x7f7 PUSH2 0x7ff
0x7fa JUMPI
---
0x7ee: JUMPDEST 
0x7ef: V494 = 0x2c6
0x7f2: V495 = GAS
0x7f3: V496 = SUB V495 0x2c6
0x7f4: V497 = CALL V496 V466 0x0 V486 V487 V486 0x0
0x7f5: V498 = ISZERO V497
0x7f6: V499 = ISZERO V498
0x7f7: V500 = 0x7ff
0x7fa: JUMPI 0x7ff V499
---
Entry stack: [V11, 0x453, V266, V269, V466, 0xa9059cbb, V483, 0x0, V486, V487, V486, 0x0, V466]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x453, V266, V269, V466, 0xa9059cbb, V483]

================================

Block 0x7fb
[0x7fb:0x7fe]
---
Predecessors: [0x7ee]
Successors: []
---
0x7fb PUSH1 0x0
0x7fd DUP1
0x7fe REVERT
---
0x7fb: V501 = 0x0
0x7fe: REVERT 0x0 0x0
---
Entry stack: [V11, 0x453, V266, V269, V466, 0xa9059cbb, V483]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x453, V266, V269, V466, 0xa9059cbb, V483]

================================

Block 0x7ff
[0x7ff:0x805]
---
Predecessors: [0x7ee]
Successors: [0x453]
---
0x7ff JUMPDEST
0x800 POP
0x801 POP
0x802 POP
0x803 POP
0x804 POP
0x805 JUMP
---
0x7ff: JUMPDEST 
0x805: JUMP 0x453
---
Entry stack: [V11, 0x453, V266, V269, V466, 0xa9059cbb, V483]
Stack pops: 6
Stack additions: []
Exit stack: [V11]

================================

Block 0x806
[0x806:0x818]
---
Predecessors: [0x460]
Successors: [0x468]
---
0x806 JUMPDEST
0x807 PUSH1 0x4
0x809 PUSH1 0x0
0x80b SWAP1
0x80c SLOAD
0x80d SWAP1
0x80e PUSH2 0x100
0x811 EXP
0x812 SWAP1
0x813 DIV
0x814 PUSH1 0xff
0x816 AND
0x817 DUP2
0x818 JUMP
---
0x806: JUMPDEST 
0x807: V502 = 0x4
0x809: V503 = 0x0
0x80c: V504 = S[0x4]
0x80e: V505 = 0x100
0x811: V506 = EXP 0x100 0x0
0x813: V507 = DIV V504 0x1
0x814: V508 = 0xff
0x816: V509 = AND 0xff V507
0x818: JUMP 0x468
---
Entry stack: [V11, 0x468]
Stack pops: 1
Stack additions: [S0, V509]
Exit stack: [V11, 0x468, V509]

================================

Block 0x819
[0x819:0x81e]
---
Predecessors: [0x48d]
Successors: [0x495]
---
0x819 JUMPDEST
0x81a PUSH1 0x3
0x81c SLOAD
0x81d DUP2
0x81e JUMP
---
0x819: JUMPDEST 
0x81a: V510 = 0x3
0x81c: V511 = S[0x3]
0x81e: JUMP 0x495
---
Entry stack: [V11, 0x495]
Stack pops: 1
Stack additions: [S0, V511]
Exit stack: [V11, 0x495, V511]

================================

Block 0x81f
[0x81f:0x876]
---
Predecessors: [0x4b6]
Successors: [0x877, 0x87b]
---
0x81f JUMPDEST
0x820 PUSH1 0x2
0x822 PUSH1 0x0
0x824 SWAP1
0x825 SLOAD
0x826 SWAP1
0x827 PUSH2 0x100
0x82a EXP
0x82b SWAP1
0x82c DIV
0x82d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x842 AND
0x843 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x858 AND
0x859 CALLER
0x85a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x86f AND
0x870 EQ
0x871 ISZERO
0x872 ISZERO
0x873 PUSH2 0x87b
0x876 JUMPI
---
0x81f: JUMPDEST 
0x820: V512 = 0x2
0x822: V513 = 0x0
0x825: V514 = S[0x2]
0x827: V515 = 0x100
0x82a: V516 = EXP 0x100 0x0
0x82c: V517 = DIV V514 0x1
0x82d: V518 = 0xffffffffffffffffffffffffffffffffffffffff
0x842: V519 = AND 0xffffffffffffffffffffffffffffffffffffffff V517
0x843: V520 = 0xffffffffffffffffffffffffffffffffffffffff
0x858: V521 = AND 0xffffffffffffffffffffffffffffffffffffffff V519
0x859: V522 = CALLER
0x85a: V523 = 0xffffffffffffffffffffffffffffffffffffffff
0x86f: V524 = AND 0xffffffffffffffffffffffffffffffffffffffff V522
0x870: V525 = EQ V524 V521
0x871: V526 = ISZERO V525
0x872: V527 = ISZERO V526
0x873: V528 = 0x87b
0x876: JUMPI 0x87b V527
---
Entry stack: [V11, 0x4e2, V311]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4e2, V311]

================================

Block 0x877
[0x877:0x87a]
---
Predecessors: [0x81f]
Successors: []
---
0x877 PUSH1 0x0
0x879 DUP1
0x87a REVERT
---
0x877: V529 = 0x0
0x87a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x4e2, V311]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4e2, V311]

================================

Block 0x87b
[0x87b:0x8be]
---
Predecessors: [0x81f]
Successors: [0x4e2]
---
0x87b JUMPDEST
0x87c DUP1
0x87d PUSH1 0x2
0x87f PUSH1 0x0
0x881 PUSH2 0x100
0x884 EXP
0x885 DUP2
0x886 SLOAD
0x887 DUP2
0x888 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x89d MUL
0x89e NOT
0x89f AND
0x8a0 SWAP1
0x8a1 DUP4
0x8a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8b7 AND
0x8b8 MUL
0x8b9 OR
0x8ba SWAP1
0x8bb SSTORE
0x8bc POP
0x8bd POP
0x8be JUMP
---
0x87b: JUMPDEST 
0x87d: V530 = 0x2
0x87f: V531 = 0x0
0x881: V532 = 0x100
0x884: V533 = EXP 0x100 0x0
0x886: V534 = S[0x2]
0x888: V535 = 0xffffffffffffffffffffffffffffffffffffffff
0x89d: V536 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x89e: V537 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x89f: V538 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V534
0x8a2: V539 = 0xffffffffffffffffffffffffffffffffffffffff
0x8b7: V540 = AND 0xffffffffffffffffffffffffffffffffffffffff V311
0x8b8: V541 = MUL V540 0x1
0x8b9: V542 = OR V541 V538
0x8bb: S[0x2] = V542
0x8be: JUMP 0x4e2
---
Entry stack: [V11, 0x4e2, V311]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x8bf
[0x8bf:0x918]
---
Predecessors: [0x4ef]
Successors: [0x919, 0x91d]
---
0x8bf JUMPDEST
0x8c0 PUSH1 0x0
0x8c2 PUSH1 0x2
0x8c4 PUSH1 0x0
0x8c6 SWAP1
0x8c7 SLOAD
0x8c8 SWAP1
0x8c9 PUSH2 0x100
0x8cc EXP
0x8cd SWAP1
0x8ce DIV
0x8cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8e4 AND
0x8e5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8fa AND
0x8fb CALLER
0x8fc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x911 AND
0x912 EQ
0x913 ISZERO
0x914 ISZERO
0x915 PUSH2 0x91d
0x918 JUMPI
---
0x8bf: JUMPDEST 
0x8c0: V543 = 0x0
0x8c2: V544 = 0x2
0x8c4: V545 = 0x0
0x8c7: V546 = S[0x2]
0x8c9: V547 = 0x100
0x8cc: V548 = EXP 0x100 0x0
0x8ce: V549 = DIV V546 0x1
0x8cf: V550 = 0xffffffffffffffffffffffffffffffffffffffff
0x8e4: V551 = AND 0xffffffffffffffffffffffffffffffffffffffff V549
0x8e5: V552 = 0xffffffffffffffffffffffffffffffffffffffff
0x8fa: V553 = AND 0xffffffffffffffffffffffffffffffffffffffff V551
0x8fb: V554 = CALLER
0x8fc: V555 = 0xffffffffffffffffffffffffffffffffffffffff
0x911: V556 = AND 0xffffffffffffffffffffffffffffffffffffffff V554
0x912: V557 = EQ V556 V553
0x913: V558 = ISZERO V557
0x914: V559 = ISZERO V558
0x915: V560 = 0x91d
0x918: JUMPI 0x91d V559
---
Entry stack: [V11, 0x4f7]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x4f7, 0x0]

================================

Block 0x919
[0x919:0x91c]
---
Predecessors: [0x8bf]
Successors: []
---
0x919 PUSH1 0x0
0x91b DUP1
0x91c REVERT
---
0x919: V561 = 0x0
0x91c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x4f7, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4f7, 0x0]

================================

Block 0x91d
[0x91d:0x934]
---
Predecessors: [0x8bf]
Successors: [0x935, 0x939]
---
0x91d JUMPDEST
0x91e PUSH1 0x4
0x920 PUSH1 0x0
0x922 SWAP1
0x923 SLOAD
0x924 SWAP1
0x925 PUSH2 0x100
0x928 EXP
0x929 SWAP1
0x92a DIV
0x92b PUSH1 0xff
0x92d AND
0x92e ISZERO
0x92f ISZERO
0x930 ISZERO
0x931 PUSH2 0x939
0x934 JUMPI
---
0x91d: JUMPDEST 
0x91e: V562 = 0x4
0x920: V563 = 0x0
0x923: V564 = S[0x4]
0x925: V565 = 0x100
0x928: V566 = EXP 0x100 0x0
0x92a: V567 = DIV V564 0x1
0x92b: V568 = 0xff
0x92d: V569 = AND 0xff V567
0x92e: V570 = ISZERO V569
0x92f: V571 = ISZERO V570
0x930: V572 = ISZERO V571
0x931: V573 = 0x939
0x934: JUMPI 0x939 V572
---
Entry stack: [V11, 0x4f7, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4f7, 0x0]

================================

Block 0x935
[0x935:0x938]
---
Predecessors: [0x91d]
Successors: []
---
0x935 PUSH1 0x0
0x937 DUP1
0x938 REVERT
---
0x935: V574 = 0x0
0x938: REVERT 0x0 0x0
---
Entry stack: [V11, 0x4f7, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4f7, 0x0]

================================

Block 0x939
[0x939:0x95a]
---
Predecessors: [0x91d]
Successors: [0x4f7]
---
0x939 JUMPDEST
0x93a PUSH1 0x1
0x93c PUSH1 0x4
0x93e PUSH1 0x0
0x940 PUSH2 0x100
0x943 EXP
0x944 DUP2
0x945 SLOAD
0x946 DUP2
0x947 PUSH1 0xff
0x949 MUL
0x94a NOT
0x94b AND
0x94c SWAP1
0x94d DUP4
0x94e ISZERO
0x94f ISZERO
0x950 MUL
0x951 OR
0x952 SWAP1
0x953 SSTORE
0x954 POP
0x955 PUSH1 0x1
0x957 SWAP1
0x958 POP
0x959 SWAP1
0x95a JUMP
---
0x939: JUMPDEST 
0x93a: V575 = 0x1
0x93c: V576 = 0x4
0x93e: V577 = 0x0
0x940: V578 = 0x100
0x943: V579 = EXP 0x100 0x0
0x945: V580 = S[0x4]
0x947: V581 = 0xff
0x949: V582 = MUL 0xff 0x1
0x94a: V583 = NOT 0xff
0x94b: V584 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V580
0x94e: V585 = ISZERO 0x1
0x94f: V586 = ISZERO 0x0
0x950: V587 = MUL 0x1 0x1
0x951: V588 = OR 0x1 V584
0x953: S[0x4] = V588
0x955: V589 = 0x1
0x95a: JUMP 0x4f7
---
Entry stack: [V11, 0x4f7, 0x0]
Stack pops: 2
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x95b
[0x95b:0x994]
---
Predecessors: []
Successors: []
---
0x95b STOP
0x95c LOG1
0x95d PUSH6 0x627a7a723058
0x964 SHA3
0x965 SWAP11
0x966 MISSING 0xaa
0x967 MISSING 0x1e
0x968 SWAP5
0x969 MISSING 0xc3
0x96a MISSING 0xb9
0x96b CALL
0x96c ADDMOD
0x96d CALLDATALOAD
0x96e MISSING 0xe2
0x96f PUSH6 0xb6577537c6eb
0x976 SELFDESTRUCT
0x977 PUSH29 0x43fe13bef121774fc835eb42150029
---
0x95b: STOP 
0x95c: LOG S0 S1 S2
0x95d: V590 = 0x627a7a723058
0x964: V591 = SHA3 0x627a7a723058 S3
0x966: MISSING 0xaa
0x967: MISSING 0x1e
0x969: MISSING 0xc3
0x96a: MISSING 0xb9
0x96b: V592 = CALL S0 S1 S2 S3 S4 S5 S6
0x96c: V593 = ADDMOD V592 S7 S8
0x96d: V594 = CALLDATALOAD V593
0x96e: MISSING 0xe2
0x96f: V595 = 0xb6577537c6eb
0x976: SELFDESTRUCT 0xb6577537c6eb
0x977: V596 = 0x43fe13bef121774fc835eb42150029
---
Entry stack: []
Stack pops: 0
Stack additions: [S14, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, V591, S5, S1, S2, S3, S4, S0, V594, 0x43fe13bef121774fc835eb42150029]
Exit stack: []

================================

Function 0:
Public function signature: 0x167ff46f
Entry block: 0x327
Exit block: 0x33a
Body: 0x327, 0x32e, 0x332, 0x33a, 0x511, 0x56b, 0x56f, 0x586, 0x58a

Function 1:
Public function signature: 0x24600fc3
Entry block: 0x354
Exit block: 0x367
Body: 0x354, 0x35b, 0x35f, 0x367, 0x5ac, 0x604, 0x608, 0x67d, 0x681

Function 2:
Public function signature: 0x5af82abf
Entry block: 0x369
Exit block: 0x37c
Body: 0x369, 0x370, 0x374, 0x37c, 0x683

Function 3:
Public function signature: 0x71c6d4dc
Entry block: 0x3be
Exit block: 0x3d1
Body: 0x3be, 0x3c5, 0x3c9, 0x3d1, 0x6a9

Function 4:
Public function signature: 0xa9059cbb
Entry block: 0x413
Exit block: 0x453
Body: 0x413, 0x41a, 0x41e, 0x453, 0x6ce, 0x726, 0x72a, 0x7ea, 0x7ee, 0x7fb, 0x7ff

Function 5:
Public function signature: 0xb8c766b8
Entry block: 0x455
Exit block: 0x468
Body: 0x455, 0x45c, 0x460, 0x468, 0x806

Function 6:
Public function signature: 0xc89f2ce4
Entry block: 0x482
Exit block: 0x495
Body: 0x482, 0x489, 0x48d, 0x495, 0x819

Function 7:
Public function signature: 0xddd41ef6
Entry block: 0x4ab
Exit block: 0x4e2
Body: 0x4ab, 0x4b2, 0x4b6, 0x4e2, 0x81f, 0x877, 0x87b

Function 8:
Public function signature: 0xee55efee
Entry block: 0x4e4
Exit block: 0x4f7
Body: 0x4e4, 0x4eb, 0x4ef, 0x4f7, 0x8bf, 0x919, 0x91d, 0x935, 0x939

Function 9:
Public fallback function
Entry block: 0x99
Exit block: 0x324
Body: 0x99, 0xb3, 0xb7, 0xc9, 0xcd, 0x196, 0x19a, 0x1a7, 0x1ab, 0x1bf, 0x1c3, 0x283, 0x287, 0x294, 0x298, 0x320, 0x324

