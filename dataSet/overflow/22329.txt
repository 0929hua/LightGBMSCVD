Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x57]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x57
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x57
0xc: JUMPI 0x57 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x5c]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x4a1a89f1
0x3c EQ
0x3d PUSH2 0x5c
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x4a1a89f1
0x3c: V13 = EQ 0x4a1a89f1 V11
0x3d: V14 = 0x5c
0x40: JUMPI 0x5c V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xb1]
---
0x41 DUP1
0x42 PUSH4 0x7e245fac
0x47 EQ
0x48 PUSH2 0xb1
0x4b JUMPI
---
0x42: V15 = 0x7e245fac
0x47: V16 = EQ 0x7e245fac V11
0x48: V17 = 0xb1
0x4b: JUMPI 0xb1 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x106]
---
0x4c DUP1
0x4d PUSH4 0xc0ee0b8a
0x52 EQ
0x53 PUSH2 0x106
0x56 JUMPI
---
0x4d: V18 = 0xc0ee0b8a
0x52: V19 = EQ 0xc0ee0b8a V11
0x53: V20 = 0x106
0x56: JUMPI 0x106 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x5b]
---
Predecessors: [0x0, 0x4c]
Successors: []
---
0x57 JUMPDEST
0x58 PUSH1 0x0
0x5a DUP1
0x5b REVERT
---
0x57: JUMPDEST 
0x58: V21 = 0x0
0x5b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c
[0x5c:0x62]
---
Predecessors: [0xd]
Successors: [0x63, 0x67]
---
0x5c JUMPDEST
0x5d CALLVALUE
0x5e ISZERO
0x5f PUSH2 0x67
0x62 JUMPI
---
0x5c: JUMPDEST 
0x5d: V22 = CALLVALUE
0x5e: V23 = ISZERO V22
0x5f: V24 = 0x67
0x62: JUMPI 0x67 V23
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x63
[0x63:0x66]
---
Predecessors: [0x5c]
Successors: []
---
0x63 PUSH1 0x0
0x65 DUP1
0x66 REVERT
---
0x63: V25 = 0x0
0x66: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x67
[0x67:0x6e]
---
Predecessors: [0x5c]
Successors: [0x18b]
---
0x67 JUMPDEST
0x68 PUSH2 0x6f
0x6b PUSH2 0x18b
0x6e JUMP
---
0x67: JUMPDEST 
0x68: V26 = 0x6f
0x6b: V27 = 0x18b
0x6e: JUMP 0x18b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6f]
Exit stack: [V11, 0x6f]

================================

Block 0x6f
[0x6f:0xb0]
---
Predecessors: [0x18b]
Successors: []
---
0x6f JUMPDEST
0x70 PUSH1 0x40
0x72 MLOAD
0x73 DUP1
0x74 DUP3
0x75 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8a AND
0x8b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa0 AND
0xa1 DUP2
0xa2 MSTORE
0xa3 PUSH1 0x20
0xa5 ADD
0xa6 SWAP2
0xa7 POP
0xa8 POP
0xa9 PUSH1 0x40
0xab MLOAD
0xac DUP1
0xad SWAP2
0xae SUB
0xaf SWAP1
0xb0 RETURN
---
0x6f: JUMPDEST 
0x70: V28 = 0x40
0x72: V29 = M[0x40]
0x75: V30 = 0xffffffffffffffffffffffffffffffffffffffff
0x8a: V31 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x14b759a158879b133710f4059d32565b4a66140c
0x8b: V32 = 0xffffffffffffffffffffffffffffffffffffffff
0xa0: V33 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x14b759a158879b133710f4059d32565b4a66140c
0xa2: M[V29] = 0x14b759a158879b133710f4059d32565b4a66140c
0xa3: V34 = 0x20
0xa5: V35 = ADD 0x20 V29
0xa9: V36 = 0x40
0xab: V37 = M[0x40]
0xae: V38 = SUB V35 V37
0xb0: RETURN V37 V38
---
Entry stack: [V11, 0x6f, 0x14b759a158879b133710f4059d32565b4a66140c]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x6f]

================================

Block 0xb1
[0xb1:0xb7]
---
Predecessors: [0x41]
Successors: [0xb8, 0xbc]
---
0xb1 JUMPDEST
0xb2 CALLVALUE
0xb3 ISZERO
0xb4 PUSH2 0xbc
0xb7 JUMPI
---
0xb1: JUMPDEST 
0xb2: V39 = CALLVALUE
0xb3: V40 = ISZERO V39
0xb4: V41 = 0xbc
0xb7: JUMPI 0xbc V40
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb8
[0xb8:0xbb]
---
Predecessors: [0xb1]
Successors: []
---
0xb8 PUSH1 0x0
0xba DUP1
0xbb REVERT
---
0xb8: V42 = 0x0
0xbb: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xbc
[0xbc:0xc3]
---
Predecessors: [0xb1]
Successors: [0x1a3]
---
0xbc JUMPDEST
0xbd PUSH2 0xc4
0xc0 PUSH2 0x1a3
0xc3 JUMP
---
0xbc: JUMPDEST 
0xbd: V43 = 0xc4
0xc0: V44 = 0x1a3
0xc3: JUMP 0x1a3
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xc4]
Exit stack: [V11, 0xc4]

================================

Block 0xc4
[0xc4:0x105]
---
Predecessors: [0x1a3]
Successors: []
---
0xc4 JUMPDEST
0xc5 PUSH1 0x40
0xc7 MLOAD
0xc8 DUP1
0xc9 DUP3
0xca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdf AND
0xe0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf5 AND
0xf6 DUP2
0xf7 MSTORE
0xf8 PUSH1 0x20
0xfa ADD
0xfb SWAP2
0xfc POP
0xfd POP
0xfe PUSH1 0x40
0x100 MLOAD
0x101 DUP1
0x102 SWAP2
0x103 SUB
0x104 SWAP1
0x105 RETURN
---
0xc4: JUMPDEST 
0xc5: V45 = 0x40
0xc7: V46 = M[0x40]
0xca: V47 = 0xffffffffffffffffffffffffffffffffffffffff
0xdf: V48 = AND 0xffffffffffffffffffffffffffffffffffffffff V99
0xe0: V49 = 0xffffffffffffffffffffffffffffffffffffffff
0xf5: V50 = AND 0xffffffffffffffffffffffffffffffffffffffff V48
0xf7: M[V46] = V50
0xf8: V51 = 0x20
0xfa: V52 = ADD 0x20 V46
0xfe: V53 = 0x40
0x100: V54 = M[0x40]
0x103: V55 = SUB V52 V54
0x105: RETURN V54 V55
---
Entry stack: [V11, 0xc4, V99]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xc4]

================================

Block 0x106
[0x106:0x10c]
---
Predecessors: [0x4c]
Successors: [0x10d, 0x111]
---
0x106 JUMPDEST
0x107 CALLVALUE
0x108 ISZERO
0x109 PUSH2 0x111
0x10c JUMPI
---
0x106: JUMPDEST 
0x107: V56 = CALLVALUE
0x108: V57 = ISZERO V56
0x109: V58 = 0x111
0x10c: JUMPI 0x111 V57
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x10d
[0x10d:0x110]
---
Predecessors: [0x106]
Successors: []
---
0x10d PUSH1 0x0
0x10f DUP1
0x110 REVERT
---
0x10d: V59 = 0x0
0x110: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x111
[0x111:0x188]
---
Predecessors: [0x106]
Successors: [0x1c8]
---
0x111 JUMPDEST
0x112 PUSH2 0x189
0x115 PUSH1 0x4
0x117 DUP1
0x118 DUP1
0x119 CALLDATALOAD
0x11a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12f AND
0x130 SWAP1
0x131 PUSH1 0x20
0x133 ADD
0x134 SWAP1
0x135 SWAP2
0x136 SWAP1
0x137 DUP1
0x138 CALLDATALOAD
0x139 SWAP1
0x13a PUSH1 0x20
0x13c ADD
0x13d SWAP1
0x13e SWAP2
0x13f SWAP1
0x140 DUP1
0x141 CALLDATALOAD
0x142 SWAP1
0x143 PUSH1 0x20
0x145 ADD
0x146 SWAP1
0x147 DUP3
0x148 ADD
0x149 DUP1
0x14a CALLDATALOAD
0x14b SWAP1
0x14c PUSH1 0x20
0x14e ADD
0x14f SWAP1
0x150 DUP1
0x151 DUP1
0x152 PUSH1 0x1f
0x154 ADD
0x155 PUSH1 0x20
0x157 DUP1
0x158 SWAP2
0x159 DIV
0x15a MUL
0x15b PUSH1 0x20
0x15d ADD
0x15e PUSH1 0x40
0x160 MLOAD
0x161 SWAP1
0x162 DUP2
0x163 ADD
0x164 PUSH1 0x40
0x166 MSTORE
0x167 DUP1
0x168 SWAP4
0x169 SWAP3
0x16a SWAP2
0x16b SWAP1
0x16c DUP2
0x16d DUP2
0x16e MSTORE
0x16f PUSH1 0x20
0x171 ADD
0x172 DUP4
0x173 DUP4
0x174 DUP1
0x175 DUP3
0x176 DUP5
0x177 CALLDATACOPY
0x178 DUP3
0x179 ADD
0x17a SWAP2
0x17b POP
0x17c POP
0x17d POP
0x17e POP
0x17f POP
0x180 POP
0x181 SWAP2
0x182 SWAP1
0x183 POP
0x184 POP
0x185 PUSH2 0x1c8
0x188 JUMP
---
0x111: JUMPDEST 
0x112: V60 = 0x189
0x115: V61 = 0x4
0x119: V62 = CALLDATALOAD 0x4
0x11a: V63 = 0xffffffffffffffffffffffffffffffffffffffff
0x12f: V64 = AND 0xffffffffffffffffffffffffffffffffffffffff V62
0x131: V65 = 0x20
0x133: V66 = ADD 0x20 0x4
0x138: V67 = CALLDATALOAD 0x24
0x13a: V68 = 0x20
0x13c: V69 = ADD 0x20 0x24
0x141: V70 = CALLDATALOAD 0x44
0x143: V71 = 0x20
0x145: V72 = ADD 0x20 0x44
0x148: V73 = ADD 0x4 V70
0x14a: V74 = CALLDATALOAD V73
0x14c: V75 = 0x20
0x14e: V76 = ADD 0x20 V73
0x152: V77 = 0x1f
0x154: V78 = ADD 0x1f V74
0x155: V79 = 0x20
0x159: V80 = DIV V78 0x20
0x15a: V81 = MUL V80 0x20
0x15b: V82 = 0x20
0x15d: V83 = ADD 0x20 V81
0x15e: V84 = 0x40
0x160: V85 = M[0x40]
0x163: V86 = ADD V85 V83
0x164: V87 = 0x40
0x166: M[0x40] = V86
0x16e: M[V85] = V74
0x16f: V88 = 0x20
0x171: V89 = ADD 0x20 V85
0x177: CALLDATACOPY V89 V76 V74
0x179: V90 = ADD V89 V74
0x185: V91 = 0x1c8
0x188: JUMP 0x1c8
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x189, V64, V67, V85]
Exit stack: [V11, 0x189, V64, V67, V85]

================================

Block 0x189
[0x189:0x18a]
---
Predecessors: [0x5ab]
Successors: []
---
0x189 JUMPDEST
0x18a STOP
---
0x189: JUMPDEST 
0x18a: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x18b
[0x18b:0x1a2]
---
Predecessors: [0x67]
Successors: [0x6f]
---
0x18b JUMPDEST
0x18c PUSH20 0x14b759a158879b133710f4059d32565b4a66140c
0x1a1 DUP2
0x1a2 JUMP
---
0x18b: JUMPDEST 
0x18c: V92 = 0x14b759a158879b133710f4059d32565b4a66140c
0x1a2: JUMP 0x6f
---
Entry stack: [V11, 0x6f]
Stack pops: 1
Stack additions: [S0, 0x14b759a158879b133710f4059d32565b4a66140c]
Exit stack: [V11, 0x6f, 0x14b759a158879b133710f4059d32565b4a66140c]

================================

Block 0x1a3
[0x1a3:0x1c7]
---
Predecessors: [0xbc]
Successors: [0xc4]
---
0x1a3 JUMPDEST
0x1a4 PUSH1 0x0
0x1a6 DUP1
0x1a7 SWAP1
0x1a8 SLOAD
0x1a9 SWAP1
0x1aa PUSH2 0x100
0x1ad EXP
0x1ae SWAP1
0x1af DIV
0x1b0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c5 AND
0x1c6 DUP2
0x1c7 JUMP
---
0x1a3: JUMPDEST 
0x1a4: V93 = 0x0
0x1a8: V94 = S[0x0]
0x1aa: V95 = 0x100
0x1ad: V96 = EXP 0x100 0x0
0x1af: V97 = DIV V94 0x1
0x1b0: V98 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c5: V99 = AND 0xffffffffffffffffffffffffffffffffffffffff V97
0x1c7: JUMP 0xc4
---
Entry stack: [V11, 0xc4]
Stack pops: 1
Stack additions: [S0, V99]
Exit stack: [V11, 0xc4, V99]

================================

Block 0x1c8
[0x1c8:0x1d2]
---
Predecessors: [0x111]
Successors: [0x5b1]
---
0x1c8 JUMPDEST
0x1c9 PUSH1 0x0
0x1cb PUSH2 0x1d3
0x1ce DUP5
0x1cf PUSH2 0x5b1
0x1d2 JUMP
---
0x1c8: JUMPDEST 
0x1c9: V100 = 0x0
0x1cb: V101 = 0x1d3
0x1cf: V102 = 0x5b1
0x1d2: JUMP 0x5b1
---
Entry stack: [V11, 0x189, V64, V67, V85]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, 0x1d3, S2]
Exit stack: [V11, 0x189, V64, V67, V85, 0x0, 0x1d3, V64]

================================

Block 0x1d3
[0x1d3:0x1d9]
---
Predecessors: [0x5b1]
Successors: [0x1da, 0x1de]
---
0x1d3 JUMPDEST
0x1d4 ISZERO
0x1d5 ISZERO
0x1d6 PUSH2 0x1de
0x1d9 JUMPI
---
0x1d3: JUMPDEST 
0x1d4: V103 = ISZERO V338
0x1d5: V104 = ISZERO V103
0x1d6: V105 = 0x1de
0x1d9: JUMPI 0x1de V104
---
Entry stack: [V11, 0x189, V64, V67, V85, 0x0, V338]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x189, V64, V67, V85, 0x0]

================================

Block 0x1da
[0x1da:0x1dd]
---
Predecessors: [0x1d3]
Successors: []
---
0x1da PUSH1 0x0
0x1dc DUP1
0x1dd REVERT
---
0x1da: V106 = 0x0
0x1dd: REVERT 0x0 0x0
---
Entry stack: [V11, 0x189, V64, V67, V85, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x189, V64, V67, V85, 0x0]

================================

Block 0x1de
[0x1de:0x1e6]
---
Predecessors: [0x1d3]
Successors: [0x5c4]
---
0x1de JUMPDEST
0x1df PUSH2 0x1e7
0x1e2 CALLER
0x1e3 PUSH2 0x5c4
0x1e6 JUMP
---
0x1de: JUMPDEST 
0x1df: V107 = 0x1e7
0x1e2: V108 = CALLER
0x1e3: V109 = 0x5c4
0x1e6: JUMP 0x5c4
---
Entry stack: [V11, 0x189, V64, V67, V85, 0x0]
Stack pops: 0
Stack additions: [0x1e7, V108]
Exit stack: [V11, 0x189, V64, V67, V85, 0x0, 0x1e7, V108]

================================

Block 0x1e7
[0x1e7:0x1ed]
---
Predecessors: [0x5c4]
Successors: [0x1ee, 0x1f2]
---
0x1e7 JUMPDEST
0x1e8 ISZERO
0x1e9 ISZERO
0x1ea PUSH2 0x1f2
0x1ed JUMPI
---
0x1e7: JUMPDEST 
0x1e8: V110 = ISZERO V345
0x1e9: V111 = ISZERO V110
0x1ea: V112 = 0x1f2
0x1ed: JUMPI 0x1f2 V111
---
Entry stack: [V11, 0x189, V64, V67, V85, 0x0, V345]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x189, V64, V67, V85, 0x0]

================================

Block 0x1ee
[0x1ee:0x1f1]
---
Predecessors: [0x1e7]
Successors: []
---
0x1ee PUSH1 0x0
0x1f0 DUP1
0x1f1 REVERT
---
0x1ee: V113 = 0x0
0x1f1: REVERT 0x0 0x0
---
Entry stack: [V11, 0x189, V64, V67, V85, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x189, V64, V67, V85, 0x0]

================================

Block 0x1f2
[0x1f2:0x203]
---
Predecessors: [0x1e7]
Successors: [0x610]
---
0x1f2 JUMPDEST
0x1f3 DUP3
0x1f4 PUSH1 0x2
0x1f6 MUL
0x1f7 SWAP1
0x1f8 POP
0x1f9 PUSH1 0x1
0x1fb PUSH2 0x204
0x1fe PUSH1 0x2
0x200 PUSH2 0x610
0x203 JUMP
---
0x1f2: JUMPDEST 
0x1f4: V114 = 0x2
0x1f6: V115 = MUL 0x2 V67
0x1f9: V116 = 0x1
0x1fb: V117 = 0x204
0x1fe: V118 = 0x2
0x200: V119 = 0x610
0x203: JUMP 0x610
---
Entry stack: [V11, 0x189, V64, V67, V85, 0x0]
Stack pops: 3
Stack additions: [S2, S1, V115, 0x1, 0x204, 0x2]
Exit stack: [V11, 0x189, V64, V67, V85, V115, 0x1, 0x204, 0x2]

================================

Block 0x204
[0x204:0x20a]
---
Predecessors: [0x67a]
Successors: [0x20b, 0x5aa]
---
0x204 JUMPDEST
0x205 EQ
0x206 ISZERO
0x207 PUSH2 0x5aa
0x20a JUMPI
---
0x204: JUMPDEST 
0x205: V120 = EQ V378 0x1
0x206: V121 = ISZERO V120
0x207: V122 = 0x5aa
0x20a: JUMPI 0x5aa V121
---
Entry stack: [V11, 0x189, V64, V67, V85, V115, 0x1, V378]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x189, V64, V67, V85, V115]

================================

Block 0x20b
[0x20b:0x2ca]
---
Predecessors: [0x204]
Successors: [0x2cb, 0x2cf]
---
0x20b DUP1
0x20c PUSH1 0x0
0x20e DUP1
0x20f SWAP1
0x210 SLOAD
0x211 SWAP1
0x212 PUSH2 0x100
0x215 EXP
0x216 SWAP1
0x217 DIV
0x218 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22d AND
0x22e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x243 AND
0x244 PUSH4 0x70a08231
0x249 ADDRESS
0x24a PUSH1 0x0
0x24c PUSH1 0x40
0x24e MLOAD
0x24f PUSH1 0x20
0x251 ADD
0x252 MSTORE
0x253 PUSH1 0x40
0x255 MLOAD
0x256 DUP3
0x257 PUSH4 0xffffffff
0x25c AND
0x25d PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x27b MUL
0x27c DUP2
0x27d MSTORE
0x27e PUSH1 0x4
0x280 ADD
0x281 DUP1
0x282 DUP3
0x283 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x298 AND
0x299 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ae AND
0x2af DUP2
0x2b0 MSTORE
0x2b1 PUSH1 0x20
0x2b3 ADD
0x2b4 SWAP2
0x2b5 POP
0x2b6 POP
0x2b7 PUSH1 0x20
0x2b9 PUSH1 0x40
0x2bb MLOAD
0x2bc DUP1
0x2bd DUP4
0x2be SUB
0x2bf DUP2
0x2c0 PUSH1 0x0
0x2c2 DUP8
0x2c3 DUP1
0x2c4 EXTCODESIZE
0x2c5 ISZERO
0x2c6 ISZERO
0x2c7 PUSH2 0x2cf
0x2ca JUMPI
---
0x20c: V123 = 0x0
0x210: V124 = S[0x0]
0x212: V125 = 0x100
0x215: V126 = EXP 0x100 0x0
0x217: V127 = DIV V124 0x1
0x218: V128 = 0xffffffffffffffffffffffffffffffffffffffff
0x22d: V129 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x22e: V130 = 0xffffffffffffffffffffffffffffffffffffffff
0x243: V131 = AND 0xffffffffffffffffffffffffffffffffffffffff V129
0x244: V132 = 0x70a08231
0x249: V133 = ADDRESS
0x24a: V134 = 0x0
0x24c: V135 = 0x40
0x24e: V136 = M[0x40]
0x24f: V137 = 0x20
0x251: V138 = ADD 0x20 V136
0x252: M[V138] = 0x0
0x253: V139 = 0x40
0x255: V140 = M[0x40]
0x257: V141 = 0xffffffff
0x25c: V142 = AND 0xffffffff 0x70a08231
0x25d: V143 = 0x100000000000000000000000000000000000000000000000000000000
0x27b: V144 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x27d: M[V140] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x27e: V145 = 0x4
0x280: V146 = ADD 0x4 V140
0x283: V147 = 0xffffffffffffffffffffffffffffffffffffffff
0x298: V148 = AND 0xffffffffffffffffffffffffffffffffffffffff V133
0x299: V149 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ae: V150 = AND 0xffffffffffffffffffffffffffffffffffffffff V148
0x2b0: M[V146] = V150
0x2b1: V151 = 0x20
0x2b3: V152 = ADD 0x20 V146
0x2b7: V153 = 0x20
0x2b9: V154 = 0x40
0x2bb: V155 = M[0x40]
0x2be: V156 = SUB V152 V155
0x2c0: V157 = 0x0
0x2c4: V158 = EXTCODESIZE V131
0x2c5: V159 = ISZERO V158
0x2c6: V160 = ISZERO V159
0x2c7: V161 = 0x2cf
0x2ca: JUMPI 0x2cf V160
---
Entry stack: [V11, 0x189, V64, V67, V85, V115]
Stack pops: 1
Stack additions: [S0, S0, V131, 0x70a08231, V152, 0x20, V155, V156, V155, 0x0, V131]
Exit stack: [V11, 0x189, V64, V67, V85, V115, V115, V131, 0x70a08231, V152, 0x20, V155, V156, V155, 0x0, V131]

================================

Block 0x2cb
[0x2cb:0x2ce]
---
Predecessors: [0x20b]
Successors: []
---
0x2cb PUSH1 0x0
0x2cd DUP1
0x2ce REVERT
---
0x2cb: V162 = 0x0
0x2ce: REVERT 0x0 0x0
---
Entry stack: [V11, 0x189, V64, V67, V85, V115, V115, V131, 0x70a08231, V152, 0x20, V155, V156, V155, 0x0, V131]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x189, V64, V67, V85, V115, V115, V131, 0x70a08231, V152, 0x20, V155, V156, V155, 0x0, V131]

================================

Block 0x2cf
[0x2cf:0x2db]
---
Predecessors: [0x20b]
Successors: [0x2dc, 0x2e0]
---
0x2cf JUMPDEST
0x2d0 PUSH2 0x2c6
0x2d3 GAS
0x2d4 SUB
0x2d5 CALL
0x2d6 ISZERO
0x2d7 ISZERO
0x2d8 PUSH2 0x2e0
0x2db JUMPI
---
0x2cf: JUMPDEST 
0x2d0: V163 = 0x2c6
0x2d3: V164 = GAS
0x2d4: V165 = SUB V164 0x2c6
0x2d5: V166 = CALL V165 V131 0x0 V155 V156 V155 0x20
0x2d6: V167 = ISZERO V166
0x2d7: V168 = ISZERO V167
0x2d8: V169 = 0x2e0
0x2db: JUMPI 0x2e0 V168
---
Entry stack: [V11, 0x189, V64, V67, V85, V115, V115, V131, 0x70a08231, V152, 0x20, V155, V156, V155, 0x0, V131]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x189, V64, V67, V85, V115, V115, V131, 0x70a08231, V152]

================================

Block 0x2dc
[0x2dc:0x2df]
---
Predecessors: [0x2cf]
Successors: []
---
0x2dc PUSH1 0x0
0x2de DUP1
0x2df REVERT
---
0x2dc: V170 = 0x0
0x2df: REVERT 0x0 0x0
---
Entry stack: [V11, 0x189, V64, V67, V85, V115, V115, V131, 0x70a08231, V152]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x189, V64, V67, V85, V115, V115, V131, 0x70a08231, V152]

================================

Block 0x2e0
[0x2e0:0x2f1]
---
Predecessors: [0x2cf]
Successors: [0x2f2, 0x3de]
---
0x2e0 JUMPDEST
0x2e1 POP
0x2e2 POP
0x2e3 POP
0x2e4 PUSH1 0x40
0x2e6 MLOAD
0x2e7 DUP1
0x2e8 MLOAD
0x2e9 SWAP1
0x2ea POP
0x2eb LT
0x2ec ISZERO
0x2ed ISZERO
0x2ee PUSH2 0x3de
0x2f1 JUMPI
---
0x2e0: JUMPDEST 
0x2e4: V171 = 0x40
0x2e6: V172 = M[0x40]
0x2e8: V173 = M[V172]
0x2eb: V174 = LT V173 V115
0x2ec: V175 = ISZERO V174
0x2ed: V176 = ISZERO V175
0x2ee: V177 = 0x3de
0x2f1: JUMPI 0x3de V176
---
Entry stack: [V11, 0x189, V64, V67, V85, V115, V115, V131, 0x70a08231, V152]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x189, V64, V67, V85, V115]

================================

Block 0x2f2
[0x2f2:0x3b8]
---
Predecessors: [0x2e0]
Successors: [0x3b9, 0x3bd]
---
0x2f2 PUSH1 0x0
0x2f4 DUP1
0x2f5 SWAP1
0x2f6 SLOAD
0x2f7 SWAP1
0x2f8 PUSH2 0x100
0x2fb EXP
0x2fc SWAP1
0x2fd DIV
0x2fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x313 AND
0x314 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x329 AND
0x32a PUSH4 0xa9059cbb
0x32f DUP6
0x330 DUP4
0x331 PUSH1 0x0
0x333 PUSH1 0x40
0x335 MLOAD
0x336 PUSH1 0x20
0x338 ADD
0x339 MSTORE
0x33a PUSH1 0x40
0x33c MLOAD
0x33d DUP4
0x33e PUSH4 0xffffffff
0x343 AND
0x344 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x362 MUL
0x363 DUP2
0x364 MSTORE
0x365 PUSH1 0x4
0x367 ADD
0x368 DUP1
0x369 DUP4
0x36a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x37f AND
0x380 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x395 AND
0x396 DUP2
0x397 MSTORE
0x398 PUSH1 0x20
0x39a ADD
0x39b DUP3
0x39c DUP2
0x39d MSTORE
0x39e PUSH1 0x20
0x3a0 ADD
0x3a1 SWAP3
0x3a2 POP
0x3a3 POP
0x3a4 POP
0x3a5 PUSH1 0x20
0x3a7 PUSH1 0x40
0x3a9 MLOAD
0x3aa DUP1
0x3ab DUP4
0x3ac SUB
0x3ad DUP2
0x3ae PUSH1 0x0
0x3b0 DUP8
0x3b1 DUP1
0x3b2 EXTCODESIZE
0x3b3 ISZERO
0x3b4 ISZERO
0x3b5 PUSH2 0x3bd
0x3b8 JUMPI
---
0x2f2: V178 = 0x0
0x2f6: V179 = S[0x0]
0x2f8: V180 = 0x100
0x2fb: V181 = EXP 0x100 0x0
0x2fd: V182 = DIV V179 0x1
0x2fe: V183 = 0xffffffffffffffffffffffffffffffffffffffff
0x313: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V182
0x314: V185 = 0xffffffffffffffffffffffffffffffffffffffff
0x329: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff V184
0x32a: V187 = 0xa9059cbb
0x331: V188 = 0x0
0x333: V189 = 0x40
0x335: V190 = M[0x40]
0x336: V191 = 0x20
0x338: V192 = ADD 0x20 V190
0x339: M[V192] = 0x0
0x33a: V193 = 0x40
0x33c: V194 = M[0x40]
0x33e: V195 = 0xffffffff
0x343: V196 = AND 0xffffffff 0xa9059cbb
0x344: V197 = 0x100000000000000000000000000000000000000000000000000000000
0x362: V198 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x364: M[V194] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x365: V199 = 0x4
0x367: V200 = ADD 0x4 V194
0x36a: V201 = 0xffffffffffffffffffffffffffffffffffffffff
0x37f: V202 = AND 0xffffffffffffffffffffffffffffffffffffffff V64
0x380: V203 = 0xffffffffffffffffffffffffffffffffffffffff
0x395: V204 = AND 0xffffffffffffffffffffffffffffffffffffffff V202
0x397: M[V200] = V204
0x398: V205 = 0x20
0x39a: V206 = ADD 0x20 V200
0x39d: M[V206] = V115
0x39e: V207 = 0x20
0x3a0: V208 = ADD 0x20 V206
0x3a5: V209 = 0x20
0x3a7: V210 = 0x40
0x3a9: V211 = M[0x40]
0x3ac: V212 = SUB V208 V211
0x3ae: V213 = 0x0
0x3b2: V214 = EXTCODESIZE V186
0x3b3: V215 = ISZERO V214
0x3b4: V216 = ISZERO V215
0x3b5: V217 = 0x3bd
0x3b8: JUMPI 0x3bd V216
---
Entry stack: [V11, 0x189, V64, V67, V85, V115]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V186, 0xa9059cbb, V208, 0x20, V211, V212, V211, 0x0, V186]
Exit stack: [V11, 0x189, V64, V67, V85, V115, V186, 0xa9059cbb, V208, 0x20, V211, V212, V211, 0x0, V186]

================================

Block 0x3b9
[0x3b9:0x3bc]
---
Predecessors: [0x2f2]
Successors: []
---
0x3b9 PUSH1 0x0
0x3bb DUP1
0x3bc REVERT
---
0x3b9: V218 = 0x0
0x3bc: REVERT 0x0 0x0
---
Entry stack: [V11, 0x189, V64, V67, V85, V115, V186, 0xa9059cbb, V208, 0x20, V211, V212, V211, 0x0, V186]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x189, V64, V67, V85, V115, V186, 0xa9059cbb, V208, 0x20, V211, V212, V211, 0x0, V186]

================================

Block 0x3bd
[0x3bd:0x3c9]
---
Predecessors: [0x2f2]
Successors: [0x3ca, 0x3ce]
---
0x3bd JUMPDEST
0x3be PUSH2 0x2c6
0x3c1 GAS
0x3c2 SUB
0x3c3 CALL
0x3c4 ISZERO
0x3c5 ISZERO
0x3c6 PUSH2 0x3ce
0x3c9 JUMPI
---
0x3bd: JUMPDEST 
0x3be: V219 = 0x2c6
0x3c1: V220 = GAS
0x3c2: V221 = SUB V220 0x2c6
0x3c3: V222 = CALL V221 V186 0x0 V211 V212 V211 0x20
0x3c4: V223 = ISZERO V222
0x3c5: V224 = ISZERO V223
0x3c6: V225 = 0x3ce
0x3c9: JUMPI 0x3ce V224
---
Entry stack: [V11, 0x189, V64, V67, V85, V115, V186, 0xa9059cbb, V208, 0x20, V211, V212, V211, 0x0, V186]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x189, V64, V67, V85, V115, V186, 0xa9059cbb, V208]

================================

Block 0x3ca
[0x3ca:0x3cd]
---
Predecessors: [0x3bd]
Successors: []
---
0x3ca PUSH1 0x0
0x3cc DUP1
0x3cd REVERT
---
0x3ca: V226 = 0x0
0x3cd: REVERT 0x0 0x0
---
Entry stack: [V11, 0x189, V64, V67, V85, V115, V186, 0xa9059cbb, V208]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x189, V64, V67, V85, V115, V186, 0xa9059cbb, V208]

================================

Block 0x3ce
[0x3ce:0x3dd]
---
Predecessors: [0x3bd]
Successors: [0x5a5]
---
0x3ce JUMPDEST
0x3cf POP
0x3d0 POP
0x3d1 POP
0x3d2 PUSH1 0x40
0x3d4 MLOAD
0x3d5 DUP1
0x3d6 MLOAD
0x3d7 SWAP1
0x3d8 POP
0x3d9 POP
0x3da PUSH2 0x5a5
0x3dd JUMP
---
0x3ce: JUMPDEST 
0x3d2: V227 = 0x40
0x3d4: V228 = M[0x40]
0x3d6: V229 = M[V228]
0x3da: V230 = 0x5a5
0x3dd: JUMP 0x5a5
---
Entry stack: [V11, 0x189, V64, V67, V85, V115, V186, 0xa9059cbb, V208]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x189, V64, V67, V85, V115]

================================

Block 0x3de
[0x3de:0x4db]
---
Predecessors: [0x2e0]
Successors: [0x4dc, 0x4e0]
---
0x3de JUMPDEST
0x3df PUSH1 0x0
0x3e1 DUP1
0x3e2 SWAP1
0x3e3 SLOAD
0x3e4 SWAP1
0x3e5 PUSH2 0x100
0x3e8 EXP
0x3e9 SWAP1
0x3ea DIV
0x3eb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x400 AND
0x401 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x416 AND
0x417 PUSH4 0xa9059cbb
0x41c DUP6
0x41d PUSH1 0x0
0x41f DUP1
0x420 SWAP1
0x421 SLOAD
0x422 SWAP1
0x423 PUSH2 0x100
0x426 EXP
0x427 SWAP1
0x428 DIV
0x429 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x43e AND
0x43f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x454 AND
0x455 PUSH4 0x70a08231
0x45a ADDRESS
0x45b PUSH1 0x0
0x45d PUSH1 0x40
0x45f MLOAD
0x460 PUSH1 0x20
0x462 ADD
0x463 MSTORE
0x464 PUSH1 0x40
0x466 MLOAD
0x467 DUP3
0x468 PUSH4 0xffffffff
0x46d AND
0x46e PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x48c MUL
0x48d DUP2
0x48e MSTORE
0x48f PUSH1 0x4
0x491 ADD
0x492 DUP1
0x493 DUP3
0x494 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4a9 AND
0x4aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4bf AND
0x4c0 DUP2
0x4c1 MSTORE
0x4c2 PUSH1 0x20
0x4c4 ADD
0x4c5 SWAP2
0x4c6 POP
0x4c7 POP
0x4c8 PUSH1 0x20
0x4ca PUSH1 0x40
0x4cc MLOAD
0x4cd DUP1
0x4ce DUP4
0x4cf SUB
0x4d0 DUP2
0x4d1 PUSH1 0x0
0x4d3 DUP8
0x4d4 DUP1
0x4d5 EXTCODESIZE
0x4d6 ISZERO
0x4d7 ISZERO
0x4d8 PUSH2 0x4e0
0x4db JUMPI
---
0x3de: JUMPDEST 
0x3df: V231 = 0x0
0x3e3: V232 = S[0x0]
0x3e5: V233 = 0x100
0x3e8: V234 = EXP 0x100 0x0
0x3ea: V235 = DIV V232 0x1
0x3eb: V236 = 0xffffffffffffffffffffffffffffffffffffffff
0x400: V237 = AND 0xffffffffffffffffffffffffffffffffffffffff V235
0x401: V238 = 0xffffffffffffffffffffffffffffffffffffffff
0x416: V239 = AND 0xffffffffffffffffffffffffffffffffffffffff V237
0x417: V240 = 0xa9059cbb
0x41d: V241 = 0x0
0x421: V242 = S[0x0]
0x423: V243 = 0x100
0x426: V244 = EXP 0x100 0x0
0x428: V245 = DIV V242 0x1
0x429: V246 = 0xffffffffffffffffffffffffffffffffffffffff
0x43e: V247 = AND 0xffffffffffffffffffffffffffffffffffffffff V245
0x43f: V248 = 0xffffffffffffffffffffffffffffffffffffffff
0x454: V249 = AND 0xffffffffffffffffffffffffffffffffffffffff V247
0x455: V250 = 0x70a08231
0x45a: V251 = ADDRESS
0x45b: V252 = 0x0
0x45d: V253 = 0x40
0x45f: V254 = M[0x40]
0x460: V255 = 0x20
0x462: V256 = ADD 0x20 V254
0x463: M[V256] = 0x0
0x464: V257 = 0x40
0x466: V258 = M[0x40]
0x468: V259 = 0xffffffff
0x46d: V260 = AND 0xffffffff 0x70a08231
0x46e: V261 = 0x100000000000000000000000000000000000000000000000000000000
0x48c: V262 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x48e: M[V258] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x48f: V263 = 0x4
0x491: V264 = ADD 0x4 V258
0x494: V265 = 0xffffffffffffffffffffffffffffffffffffffff
0x4a9: V266 = AND 0xffffffffffffffffffffffffffffffffffffffff V251
0x4aa: V267 = 0xffffffffffffffffffffffffffffffffffffffff
0x4bf: V268 = AND 0xffffffffffffffffffffffffffffffffffffffff V266
0x4c1: M[V264] = V268
0x4c2: V269 = 0x20
0x4c4: V270 = ADD 0x20 V264
0x4c8: V271 = 0x20
0x4ca: V272 = 0x40
0x4cc: V273 = M[0x40]
0x4cf: V274 = SUB V270 V273
0x4d1: V275 = 0x0
0x4d5: V276 = EXTCODESIZE V249
0x4d6: V277 = ISZERO V276
0x4d7: V278 = ISZERO V277
0x4d8: V279 = 0x4e0
0x4db: JUMPI 0x4e0 V278
---
Entry stack: [V11, 0x189, V64, V67, V85, V115]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V239, 0xa9059cbb, S3, V249, 0x70a08231, V270, 0x20, V273, V274, V273, 0x0, V249]
Exit stack: [V11, 0x189, V64, V67, V85, V115, V239, 0xa9059cbb, V64, V249, 0x70a08231, V270, 0x20, V273, V274, V273, 0x0, V249]

================================

Block 0x4dc
[0x4dc:0x4df]
---
Predecessors: [0x3de]
Successors: []
---
0x4dc PUSH1 0x0
0x4de DUP1
0x4df REVERT
---
0x4dc: V280 = 0x0
0x4df: REVERT 0x0 0x0
---
Entry stack: [V11, 0x189, V64, V67, V85, V115, V239, 0xa9059cbb, V64, V249, 0x70a08231, V270, 0x20, V273, V274, V273, 0x0, V249]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x189, V64, V67, V85, V115, V239, 0xa9059cbb, V64, V249, 0x70a08231, V270, 0x20, V273, V274, V273, 0x0, V249]

================================

Block 0x4e0
[0x4e0:0x4ec]
---
Predecessors: [0x3de]
Successors: [0x4ed, 0x4f1]
---
0x4e0 JUMPDEST
0x4e1 PUSH2 0x2c6
0x4e4 GAS
0x4e5 SUB
0x4e6 CALL
0x4e7 ISZERO
0x4e8 ISZERO
0x4e9 PUSH2 0x4f1
0x4ec JUMPI
---
0x4e0: JUMPDEST 
0x4e1: V281 = 0x2c6
0x4e4: V282 = GAS
0x4e5: V283 = SUB V282 0x2c6
0x4e6: V284 = CALL V283 V249 0x0 V273 V274 V273 0x20
0x4e7: V285 = ISZERO V284
0x4e8: V286 = ISZERO V285
0x4e9: V287 = 0x4f1
0x4ec: JUMPI 0x4f1 V286
---
Entry stack: [V11, 0x189, V64, V67, V85, V115, V239, 0xa9059cbb, V64, V249, 0x70a08231, V270, 0x20, V273, V274, V273, 0x0, V249]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x189, V64, V67, V85, V115, V239, 0xa9059cbb, V64, V249, 0x70a08231, V270]

================================

Block 0x4ed
[0x4ed:0x4f0]
---
Predecessors: [0x4e0]
Successors: []
---
0x4ed PUSH1 0x0
0x4ef DUP1
0x4f0 REVERT
---
0x4ed: V288 = 0x0
0x4f0: REVERT 0x0 0x0
---
Entry stack: [V11, 0x189, V64, V67, V85, V115, V239, 0xa9059cbb, V64, V249, 0x70a08231, V270]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x189, V64, V67, V85, V115, V239, 0xa9059cbb, V64, V249, 0x70a08231, V270]

================================

Block 0x4f1
[0x4f1:0x583]
---
Predecessors: [0x4e0]
Successors: [0x584, 0x588]
---
0x4f1 JUMPDEST
0x4f2 POP
0x4f3 POP
0x4f4 POP
0x4f5 PUSH1 0x40
0x4f7 MLOAD
0x4f8 DUP1
0x4f9 MLOAD
0x4fa SWAP1
0x4fb POP
0x4fc PUSH1 0x0
0x4fe PUSH1 0x40
0x500 MLOAD
0x501 PUSH1 0x20
0x503 ADD
0x504 MSTORE
0x505 PUSH1 0x40
0x507 MLOAD
0x508 DUP4
0x509 PUSH4 0xffffffff
0x50e AND
0x50f PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x52d MUL
0x52e DUP2
0x52f MSTORE
0x530 PUSH1 0x4
0x532 ADD
0x533 DUP1
0x534 DUP4
0x535 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x54a AND
0x54b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x560 AND
0x561 DUP2
0x562 MSTORE
0x563 PUSH1 0x20
0x565 ADD
0x566 DUP3
0x567 DUP2
0x568 MSTORE
0x569 PUSH1 0x20
0x56b ADD
0x56c SWAP3
0x56d POP
0x56e POP
0x56f POP
0x570 PUSH1 0x20
0x572 PUSH1 0x40
0x574 MLOAD
0x575 DUP1
0x576 DUP4
0x577 SUB
0x578 DUP2
0x579 PUSH1 0x0
0x57b DUP8
0x57c DUP1
0x57d EXTCODESIZE
0x57e ISZERO
0x57f ISZERO
0x580 PUSH2 0x588
0x583 JUMPI
---
0x4f1: JUMPDEST 
0x4f5: V289 = 0x40
0x4f7: V290 = M[0x40]
0x4f9: V291 = M[V290]
0x4fc: V292 = 0x0
0x4fe: V293 = 0x40
0x500: V294 = M[0x40]
0x501: V295 = 0x20
0x503: V296 = ADD 0x20 V294
0x504: M[V296] = 0x0
0x505: V297 = 0x40
0x507: V298 = M[0x40]
0x509: V299 = 0xffffffff
0x50e: V300 = AND 0xffffffff 0xa9059cbb
0x50f: V301 = 0x100000000000000000000000000000000000000000000000000000000
0x52d: V302 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x52f: M[V298] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x530: V303 = 0x4
0x532: V304 = ADD 0x4 V298
0x535: V305 = 0xffffffffffffffffffffffffffffffffffffffff
0x54a: V306 = AND 0xffffffffffffffffffffffffffffffffffffffff V64
0x54b: V307 = 0xffffffffffffffffffffffffffffffffffffffff
0x560: V308 = AND 0xffffffffffffffffffffffffffffffffffffffff V306
0x562: M[V304] = V308
0x563: V309 = 0x20
0x565: V310 = ADD 0x20 V304
0x568: M[V310] = V291
0x569: V311 = 0x20
0x56b: V312 = ADD 0x20 V310
0x570: V313 = 0x20
0x572: V314 = 0x40
0x574: V315 = M[0x40]
0x577: V316 = SUB V312 V315
0x579: V317 = 0x0
0x57d: V318 = EXTCODESIZE V239
0x57e: V319 = ISZERO V318
0x57f: V320 = ISZERO V319
0x580: V321 = 0x588
0x583: JUMPI 0x588 V320
---
Entry stack: [V11, 0x189, V64, V67, V85, V115, V239, 0xa9059cbb, V64, V249, 0x70a08231, V270]
Stack pops: 6
Stack additions: [S5, S4, V312, 0x20, V315, V316, V315, 0x0, S5]
Exit stack: [V11, 0x189, V64, V67, V85, V115, V239, 0xa9059cbb, V312, 0x20, V315, V316, V315, 0x0, V239]

================================

Block 0x584
[0x584:0x587]
---
Predecessors: [0x4f1]
Successors: []
---
0x584 PUSH1 0x0
0x586 DUP1
0x587 REVERT
---
0x584: V322 = 0x0
0x587: REVERT 0x0 0x0
---
Entry stack: [V11, 0x189, V64, V67, V85, V115, V239, 0xa9059cbb, V312, 0x20, V315, V316, V315, 0x0, V239]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x189, V64, V67, V85, V115, V239, 0xa9059cbb, V312, 0x20, V315, V316, V315, 0x0, V239]

================================

Block 0x588
[0x588:0x594]
---
Predecessors: [0x4f1]
Successors: [0x595, 0x599]
---
0x588 JUMPDEST
0x589 PUSH2 0x2c6
0x58c GAS
0x58d SUB
0x58e CALL
0x58f ISZERO
0x590 ISZERO
0x591 PUSH2 0x599
0x594 JUMPI
---
0x588: JUMPDEST 
0x589: V323 = 0x2c6
0x58c: V324 = GAS
0x58d: V325 = SUB V324 0x2c6
0x58e: V326 = CALL V325 V239 0x0 V315 V316 V315 0x20
0x58f: V327 = ISZERO V326
0x590: V328 = ISZERO V327
0x591: V329 = 0x599
0x594: JUMPI 0x599 V328
---
Entry stack: [V11, 0x189, V64, V67, V85, V115, V239, 0xa9059cbb, V312, 0x20, V315, V316, V315, 0x0, V239]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x189, V64, V67, V85, V115, V239, 0xa9059cbb, V312]

================================

Block 0x595
[0x595:0x598]
---
Predecessors: [0x588]
Successors: []
---
0x595 PUSH1 0x0
0x597 DUP1
0x598 REVERT
---
0x595: V330 = 0x0
0x598: REVERT 0x0 0x0
---
Entry stack: [V11, 0x189, V64, V67, V85, V115, V239, 0xa9059cbb, V312]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x189, V64, V67, V85, V115, V239, 0xa9059cbb, V312]

================================

Block 0x599
[0x599:0x5a4]
---
Predecessors: [0x588]
Successors: [0x5a5]
---
0x599 JUMPDEST
0x59a POP
0x59b POP
0x59c POP
0x59d PUSH1 0x40
0x59f MLOAD
0x5a0 DUP1
0x5a1 MLOAD
0x5a2 SWAP1
0x5a3 POP
0x5a4 POP
---
0x599: JUMPDEST 
0x59d: V331 = 0x40
0x59f: V332 = M[0x40]
0x5a1: V333 = M[V332]
---
Entry stack: [V11, 0x189, V64, V67, V85, V115, V239, 0xa9059cbb, V312]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x189, V64, V67, V85, V115]

================================

Block 0x5a5
[0x5a5:0x5a9]
---
Predecessors: [0x3ce, 0x599]
Successors: [0x5ab]
---
0x5a5 JUMPDEST
0x5a6 PUSH2 0x5ab
0x5a9 JUMP
---
0x5a5: JUMPDEST 
0x5a6: V334 = 0x5ab
0x5a9: JUMP 0x5ab
---
Entry stack: [V11, 0x189, V64, V67, V85, V115]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x189, V64, V67, V85, V115]

================================

Block 0x5aa
[0x5aa:0x5aa]
---
Predecessors: [0x204]
Successors: [0x5ab]
---
0x5aa JUMPDEST
---
0x5aa: JUMPDEST 
---
Entry stack: [V11, 0x189, V64, V67, V85, V115]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x189, V64, V67, V85, V115]

================================

Block 0x5ab
[0x5ab:0x5b0]
---
Predecessors: [0x5a5, 0x5aa]
Successors: [0x189]
---
0x5ab JUMPDEST
0x5ac POP
0x5ad POP
0x5ae POP
0x5af POP
0x5b0 JUMP
---
0x5ab: JUMPDEST 
0x5b0: JUMP 0x189
---
Entry stack: [V11, 0x189, V64, V67, V85, V115]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x5b1
[0x5b1:0x5c3]
---
Predecessors: [0x1c8]
Successors: [0x1d3]
---
0x5b1 JUMPDEST
0x5b2 PUSH1 0x0
0x5b4 DUP1
0x5b5 DUP3
0x5b6 EXTCODESIZE
0x5b7 SWAP1
0x5b8 POP
0x5b9 PUSH1 0x0
0x5bb DUP2
0x5bc EQ
0x5bd SWAP2
0x5be POP
0x5bf POP
0x5c0 SWAP2
0x5c1 SWAP1
0x5c2 POP
0x5c3 JUMP
---
0x5b1: JUMPDEST 
0x5b2: V335 = 0x0
0x5b6: V336 = EXTCODESIZE V64
0x5b9: V337 = 0x0
0x5bc: V338 = EQ V336 0x0
0x5c3: JUMP 0x1d3
---
Entry stack: [V11, 0x189, V64, V67, V85, 0x0, 0x1d3, V64]
Stack pops: 2
Stack additions: [V338]
Exit stack: [V11, 0x189, V64, V67, V85, 0x0, V338]

================================

Block 0x5c4
[0x5c4:0x60f]
---
Predecessors: [0x1de]
Successors: [0x1e7]
---
0x5c4 JUMPDEST
0x5c5 PUSH1 0x0
0x5c7 PUSH20 0x14b759a158879b133710f4059d32565b4a66140c
0x5dc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5f1 AND
0x5f2 DUP3
0x5f3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x608 AND
0x609 EQ
0x60a SWAP1
0x60b POP
0x60c SWAP2
0x60d SWAP1
0x60e POP
0x60f JUMP
---
0x5c4: JUMPDEST 
0x5c5: V339 = 0x0
0x5c7: V340 = 0x14b759a158879b133710f4059d32565b4a66140c
0x5dc: V341 = 0xffffffffffffffffffffffffffffffffffffffff
0x5f1: V342 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x14b759a158879b133710f4059d32565b4a66140c
0x5f3: V343 = 0xffffffffffffffffffffffffffffffffffffffff
0x608: V344 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x609: V345 = EQ V344 0x14b759a158879b133710f4059d32565b4a66140c
0x60f: JUMP 0x1e7
---
Entry stack: [V11, 0x189, V64, V67, V85, 0x0, 0x1e7, V108]
Stack pops: 2
Stack additions: [V345]
Exit stack: [V11, 0x189, V64, V67, V85, 0x0, V345]

================================

Block 0x610
[0x610:0x61f]
---
Predecessors: [0x1f2]
Successors: [0x620, 0x627]
---
0x610 JUMPDEST
0x611 PUSH1 0x0
0x613 DUP1
0x614 PUSH1 0x0
0x616 DUP4
0x617 PUSH1 0x1
0x619 LT
0x61a DUP1
0x61b ISZERO
0x61c PUSH2 0x627
0x61f JUMPI
---
0x610: JUMPDEST 
0x611: V346 = 0x0
0x614: V347 = 0x0
0x617: V348 = 0x1
0x619: V349 = LT 0x1 0x2
0x61b: V350 = ISZERO 0x1
0x61c: V351 = 0x627
0x61f: JUMPI 0x627 0x0
---
Entry stack: [V11, 0x189, V64, V67, V85, V115, 0x1, 0x204, 0x2]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, 0x0, 0x1]
Exit stack: [V11, 0x189, V64, V67, V85, V115, 0x1, 0x204, 0x2, 0x0, 0x0, 0x0, 0x1]

================================

Block 0x620
[0x620:0x626]
---
Predecessors: [0x610]
Successors: [0x627]
---
0x620 POP
0x621 PUSH2 0x2710
0x624 DUP5
0x625 GT
0x626 ISZERO
---
0x621: V352 = 0x2710
0x625: V353 = GT 0x2 0x2710
0x626: V354 = ISZERO 0x0
---
Entry stack: [V11, 0x189, V64, V67, V85, V115, 0x1, 0x204, 0x2, 0x0, 0x0, 0x0, 0x1]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, 0x1]
Exit stack: [V11, 0x189, V64, V67, V85, V115, 0x1, 0x204, 0x2, 0x0, 0x0, 0x0, 0x1]

================================

Block 0x627
[0x627:0x62d]
---
Predecessors: [0x610, 0x620]
Successors: [0x62e, 0x632]
---
0x627 JUMPDEST
0x628 ISZERO
0x629 ISZERO
0x62a PUSH2 0x632
0x62d JUMPI
---
0x627: JUMPDEST 
0x628: V355 = ISZERO 0x1
0x629: V356 = ISZERO 0x0
0x62a: V357 = 0x632
0x62d: JUMPI 0x632 0x1
---
Entry stack: [V11, 0x189, V64, V67, V85, V115, 0x1, 0x204, 0x2, 0x0, 0x0, 0x0, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x189, V64, V67, V85, V115, 0x1, 0x204, 0x2, 0x0, 0x0, 0x0]

================================

Block 0x62e
[0x62e:0x631]
---
Predecessors: [0x627]
Successors: []
---
0x62e PUSH1 0x0
0x630 DUP1
0x631 REVERT
---
0x62e: V358 = 0x0
0x631: REVERT 0x0 0x0
---
Entry stack: [V11, 0x189, V64, V67, V85, V115, 0x1, 0x204, 0x2, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x189, V64, V67, V85, V115, 0x1, 0x204, 0x2, 0x0, 0x0, 0x0]

================================

Block 0x632
[0x632:0x678]
---
Predecessors: [0x627]
Successors: [0x679, 0x67a]
---
0x632 JUMPDEST
0x633 COINBASE
0x634 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x649 AND
0x64a SWAP2
0x64b POP
0x64c TIMESTAMP
0x64d SWAP1
0x64e POP
0x64f DUP4
0x650 DUP3
0x651 DUP3
0x652 PUSH1 0x40
0x654 MLOAD
0x655 DUP1
0x656 DUP4
0x657 DUP2
0x658 MSTORE
0x659 PUSH1 0x20
0x65b ADD
0x65c DUP3
0x65d DUP2
0x65e MSTORE
0x65f PUSH1 0x20
0x661 ADD
0x662 SWAP3
0x663 POP
0x664 POP
0x665 POP
0x666 PUSH1 0x40
0x668 MLOAD
0x669 DUP1
0x66a SWAP2
0x66b SUB
0x66c SWAP1
0x66d SHA3
0x66e PUSH1 0x1
0x670 SWAP1
0x671 DIV
0x672 DUP2
0x673 ISZERO
0x674 ISZERO
0x675 PUSH2 0x67a
0x678 JUMPI
---
0x632: JUMPDEST 
0x633: V359 = COINBASE
0x634: V360 = 0xffffffffffffffffffffffffffffffffffffffff
0x649: V361 = AND 0xffffffffffffffffffffffffffffffffffffffff V359
0x64c: V362 = TIMESTAMP
0x652: V363 = 0x40
0x654: V364 = M[0x40]
0x658: M[V364] = V361
0x659: V365 = 0x20
0x65b: V366 = ADD 0x20 V364
0x65e: M[V366] = V362
0x65f: V367 = 0x20
0x661: V368 = ADD 0x20 V366
0x666: V369 = 0x40
0x668: V370 = M[0x40]
0x66b: V371 = SUB V368 V370
0x66d: V372 = SHA3 V370 V371
0x66e: V373 = 0x1
0x671: V374 = DIV V372 0x1
0x673: V375 = ISZERO 0x2
0x674: V376 = ISZERO 0x0
0x675: V377 = 0x67a
0x678: JUMPI 0x67a 0x1
---
Entry stack: [V11, 0x189, V64, V67, V85, V115, 0x1, 0x204, 0x2, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, V361, V362, S3, V374]
Exit stack: [V11, 0x189, V64, V67, V85, V115, 0x1, 0x204, 0x2, 0x0, V361, V362, 0x2, V374]

================================

Block 0x679
[0x679:0x679]
---
Predecessors: [0x632]
Successors: []
---
0x679 INVALID
---
0x679: INVALID 
---
Entry stack: [V11, 0x189, V64, V67, V85, V115, 0x1, 0x204, 0x2, 0x0, V361, V362, 0x2, V374]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x189, V64, V67, V85, V115, 0x1, 0x204, 0x2, 0x0, V361, V362, 0x2, V374]

================================

Block 0x67a
[0x67a:0x683]
---
Predecessors: [0x632]
Successors: [0x204]
---
0x67a JUMPDEST
0x67b MOD
0x67c SWAP3
0x67d POP
0x67e POP
0x67f POP
0x680 SWAP2
0x681 SWAP1
0x682 POP
0x683 JUMP
---
0x67a: JUMPDEST 
0x67b: V378 = MOD V374 0x2
0x683: JUMP 0x204
---
Entry stack: [V11, 0x189, V64, V67, V85, V115, 0x1, 0x204, 0x2, 0x0, V361, V362, 0x2, V374]
Stack pops: 7
Stack additions: [V378]
Exit stack: [V11, 0x189, V64, V67, V85, V115, 0x1, V378]

================================

Block 0x684
[0x684:0x6ad]
---
Predecessors: []
Successors: [0x6ae]
Has unresolved jump.
---
0x684 STOP
0x685 LOG1
0x686 PUSH6 0x627a7a723058
0x68d SHA3
0x68e SWAP1
0x68f MISSING 0x1e
0x690 PUSH14 0x75acb358f7d6a9dce59acc15a4c4
0x69f LOG0
0x6a0 MSTORE8
0x6a1 MISSING 0xd4
0x6a2 MISSING 0xd
0x6a3 LOG2
0x6a4 CALLDATALOAD
0x6a5 MISSING 0xe
0x6a6 DUP6
0x6a7 DUP3
0x6a8 MISSING 0x27
0x6a9 MISSING 0xde
0x6aa MISSING 0x48
0x6ab MISSING 0xd6
0x6ac RETURNDATACOPY
0x6ad JUMPI
---
0x684: STOP 
0x685: LOG S0 S1 S2
0x686: V379 = 0x627a7a723058
0x68d: V380 = SHA3 0x627a7a723058 S3
0x68f: MISSING 0x1e
0x690: V381 = 0x75acb358f7d6a9dce59acc15a4c4
0x69f: LOG 0x75acb358f7d6a9dce59acc15a4c4 S0
0x6a0: M8[S1] = S2
0x6a1: MISSING 0xd4
0x6a2: MISSING 0xd
0x6a3: LOG S0 S1 S2 S3
0x6a4: V382 = CALLDATALOAD S4
0x6a5: MISSING 0xe
0x6a8: MISSING 0x27
0x6a9: MISSING 0xde
0x6aa: MISSING 0x48
0x6ab: MISSING 0xd6
0x6ac: RETURNDATACOPY S0 S1 S2
0x6ad: JUMPI S3 S4
---
Entry stack: []
Stack pops: 0
Stack additions: [S4, V380, V382, S1, S5, S0, S1, S2, S3, S4, S5]
Exit stack: []

================================

Block 0x6ae
[0x6ae:0x6af]
---
Predecessors: [0x684]
Successors: []
---
0x6ae STOP
0x6af MISSING 0x29
---
0x6ae: STOP 
0x6af: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Function 0:
Public function signature: 0x4a1a89f1
Entry block: 0x5c
Exit block: 0x6f
Body: 0x5c, 0x63, 0x67, 0x6f, 0x18b

Function 1:
Public function signature: 0x7e245fac
Entry block: 0xb1
Exit block: 0xc4
Body: 0xb1, 0xb8, 0xbc, 0xc4, 0x1a3

Function 2:
Public function signature: 0xc0ee0b8a
Entry block: 0x106
Exit block: 0x595
Body: 0x106, 0x10d, 0x111, 0x189, 0x1c8, 0x1d3, 0x1da, 0x1de, 0x1e7, 0x1ee, 0x1f2, 0x204, 0x20b, 0x2cb, 0x2cf, 0x2dc, 0x2e0, 0x2f2, 0x3b9, 0x3bd, 0x3ca, 0x3ce, 0x3de, 0x4dc, 0x4e0, 0x4ed, 0x4f1, 0x584, 0x588, 0x595, 0x599, 0x5a5, 0x5aa, 0x5ab, 0x5b1, 0x5c4, 0x610, 0x620, 0x627, 0x62e, 0x632, 0x679, 0x67a

Function 3:
Public fallback function
Entry block: 0x57
Exit block: 0x57
Body: 0x57

