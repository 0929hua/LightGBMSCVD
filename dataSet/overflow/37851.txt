Block 0x0
[0x0:0x38]
---
Predecessors: []
Successors: [0x39, 0x54]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 PUSH4 0xffffffff
0x2d AND
0x2e DUP1
0x2f PUSH4 0x368b8772
0x34 EQ
0x35 PUSH2 0x54
0x38 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x28: V6 = 0xffffffff
0x2d: V7 = AND 0xffffffff V5
0x2f: V8 = 0x368b8772
0x34: V9 = EQ 0x368b8772 V7
0x35: V10 = 0x54
0x38: JUMPI 0x54 V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0x0]
Successors: [0x44, 0xb1]
---
0x39 DUP1
0x3a PUSH4 0x8da5cb5b
0x3f EQ
0x40 PUSH2 0xb1
0x43 JUMPI
---
0x3a: V11 = 0x8da5cb5b
0x3f: V12 = EQ 0x8da5cb5b V7
0x40: V13 = 0xb1
0x43: JUMPI 0xb1 V12
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x44
[0x44:0x4e]
---
Predecessors: [0x39]
Successors: [0x4f, 0x106]
---
0x44 DUP1
0x45 PUSH4 0xe21f37ce
0x4a EQ
0x4b PUSH2 0x106
0x4e JUMPI
---
0x45: V14 = 0xe21f37ce
0x4a: V15 = EQ 0xe21f37ce V7
0x4b: V16 = 0x106
0x4e: JUMPI 0x106 V15
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x4f
[0x4f:0x53]
---
Predecessors: [0x44]
Successors: []
---
0x4f JUMPDEST
0x50 PUSH1 0x0
0x52 DUP1
0x53 REVERT
---
0x4f: JUMPDEST 
0x50: V17 = 0x0
0x53: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x54
[0x54:0x5a]
---
Predecessors: [0x0]
Successors: [0x5b, 0x5f]
---
0x54 JUMPDEST
0x55 CALLVALUE
0x56 ISZERO
0x57 PUSH2 0x5f
0x5a JUMPI
---
0x54: JUMPDEST 
0x55: V18 = CALLVALUE
0x56: V19 = ISZERO V18
0x57: V20 = 0x5f
0x5a: JUMPI 0x5f V19
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x5b
[0x5b:0x5e]
---
Predecessors: [0x54]
Successors: []
---
0x5b PUSH1 0x0
0x5d DUP1
0x5e REVERT
---
0x5b: V21 = 0x0
0x5e: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x5f
[0x5f:0xae]
---
Predecessors: [0x54]
Successors: [0x195]
---
0x5f JUMPDEST
0x60 PUSH2 0xaf
0x63 PUSH1 0x4
0x65 DUP1
0x66 DUP1
0x67 CALLDATALOAD
0x68 SWAP1
0x69 PUSH1 0x20
0x6b ADD
0x6c SWAP1
0x6d DUP3
0x6e ADD
0x6f DUP1
0x70 CALLDATALOAD
0x71 SWAP1
0x72 PUSH1 0x20
0x74 ADD
0x75 SWAP1
0x76 DUP1
0x77 DUP1
0x78 PUSH1 0x1f
0x7a ADD
0x7b PUSH1 0x20
0x7d DUP1
0x7e SWAP2
0x7f DIV
0x80 MUL
0x81 PUSH1 0x20
0x83 ADD
0x84 PUSH1 0x40
0x86 MLOAD
0x87 SWAP1
0x88 DUP2
0x89 ADD
0x8a PUSH1 0x40
0x8c MSTORE
0x8d DUP1
0x8e SWAP4
0x8f SWAP3
0x90 SWAP2
0x91 SWAP1
0x92 DUP2
0x93 DUP2
0x94 MSTORE
0x95 PUSH1 0x20
0x97 ADD
0x98 DUP4
0x99 DUP4
0x9a DUP1
0x9b DUP3
0x9c DUP5
0x9d CALLDATACOPY
0x9e DUP3
0x9f ADD
0xa0 SWAP2
0xa1 POP
0xa2 POP
0xa3 POP
0xa4 POP
0xa5 POP
0xa6 POP
0xa7 SWAP2
0xa8 SWAP1
0xa9 POP
0xaa POP
0xab PUSH2 0x195
0xae JUMP
---
0x5f: JUMPDEST 
0x60: V22 = 0xaf
0x63: V23 = 0x4
0x67: V24 = CALLDATALOAD 0x4
0x69: V25 = 0x20
0x6b: V26 = ADD 0x20 0x4
0x6e: V27 = ADD 0x4 V24
0x70: V28 = CALLDATALOAD V27
0x72: V29 = 0x20
0x74: V30 = ADD 0x20 V27
0x78: V31 = 0x1f
0x7a: V32 = ADD 0x1f V28
0x7b: V33 = 0x20
0x7f: V34 = DIV V32 0x20
0x80: V35 = MUL V34 0x20
0x81: V36 = 0x20
0x83: V37 = ADD 0x20 V35
0x84: V38 = 0x40
0x86: V39 = M[0x40]
0x89: V40 = ADD V39 V37
0x8a: V41 = 0x40
0x8c: M[0x40] = V40
0x94: M[V39] = V28
0x95: V42 = 0x20
0x97: V43 = ADD 0x20 V39
0x9d: CALLDATACOPY V43 V30 V28
0x9f: V44 = ADD V43 V28
0xab: V45 = 0x195
0xae: JUMP 0x195
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0xaf, V39]
Exit stack: [V7, 0xaf, V39]

================================

Block 0xaf
[0xaf:0xb0]
---
Predecessors: [0x209]
Successors: []
---
0xaf JUMPDEST
0xb0 STOP
---
0xaf: JUMPDEST 
0xb0: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xb1
[0xb1:0xb7]
---
Predecessors: [0x39]
Successors: [0xb8, 0xbc]
---
0xb1 JUMPDEST
0xb2 CALLVALUE
0xb3 ISZERO
0xb4 PUSH2 0xbc
0xb7 JUMPI
---
0xb1: JUMPDEST 
0xb2: V46 = CALLVALUE
0xb3: V47 = ISZERO V46
0xb4: V48 = 0xbc
0xb7: JUMPI 0xbc V47
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xb8
[0xb8:0xbb]
---
Predecessors: [0xb1]
Successors: []
---
0xb8 PUSH1 0x0
0xba DUP1
0xbb REVERT
---
0xb8: V49 = 0x0
0xbb: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xbc
[0xbc:0xc3]
---
Predecessors: [0xb1]
Successors: [0x20c]
---
0xbc JUMPDEST
0xbd PUSH2 0xc4
0xc0 PUSH2 0x20c
0xc3 JUMP
---
0xbc: JUMPDEST 
0xbd: V50 = 0xc4
0xc0: V51 = 0x20c
0xc3: JUMP 0x20c
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0xc4]
Exit stack: [V7, 0xc4]

================================

Block 0xc4
[0xc4:0x105]
---
Predecessors: [0x20c]
Successors: []
---
0xc4 JUMPDEST
0xc5 PUSH1 0x40
0xc7 MLOAD
0xc8 DUP1
0xc9 DUP3
0xca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdf AND
0xe0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf5 AND
0xf6 DUP2
0xf7 MSTORE
0xf8 PUSH1 0x20
0xfa ADD
0xfb SWAP2
0xfc POP
0xfd POP
0xfe PUSH1 0x40
0x100 MLOAD
0x101 DUP1
0x102 SWAP2
0x103 SUB
0x104 SWAP1
0x105 RETURN
---
0xc4: JUMPDEST 
0xc5: V52 = 0x40
0xc7: V53 = M[0x40]
0xca: V54 = 0xffffffffffffffffffffffffffffffffffffffff
0xdf: V55 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0xe0: V56 = 0xffffffffffffffffffffffffffffffffffffffff
0xf5: V57 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0xf7: M[V53] = V57
0xf8: V58 = 0x20
0xfa: V59 = ADD 0x20 V53
0xfe: V60 = 0x40
0x100: V61 = M[0x40]
0x103: V62 = SUB V59 V61
0x105: RETURN V61 V62
---
Entry stack: [V7, 0xc4, V141]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0xc4]

================================

Block 0x106
[0x106:0x10c]
---
Predecessors: [0x44]
Successors: [0x10d, 0x111]
---
0x106 JUMPDEST
0x107 CALLVALUE
0x108 ISZERO
0x109 PUSH2 0x111
0x10c JUMPI
---
0x106: JUMPDEST 
0x107: V63 = CALLVALUE
0x108: V64 = ISZERO V63
0x109: V65 = 0x111
0x10c: JUMPI 0x111 V64
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x10d
[0x10d:0x110]
---
Predecessors: [0x106]
Successors: []
---
0x10d PUSH1 0x0
0x10f DUP1
0x110 REVERT
---
0x10d: V66 = 0x0
0x110: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x111
[0x111:0x118]
---
Predecessors: [0x106]
Successors: [0x232]
---
0x111 JUMPDEST
0x112 PUSH2 0x119
0x115 PUSH2 0x232
0x118 JUMP
---
0x111: JUMPDEST 
0x112: V67 = 0x119
0x115: V68 = 0x232
0x118: JUMP 0x232
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x119]
Exit stack: [V7, 0x119]

================================

Block 0x119
[0x119:0x13d]
---
Predecessors: [0x2c8]
Successors: [0x13e]
---
0x119 JUMPDEST
0x11a PUSH1 0x40
0x11c MLOAD
0x11d DUP1
0x11e DUP1
0x11f PUSH1 0x20
0x121 ADD
0x122 DUP3
0x123 DUP2
0x124 SUB
0x125 DUP3
0x126 MSTORE
0x127 DUP4
0x128 DUP2
0x129 DUP2
0x12a MLOAD
0x12b DUP2
0x12c MSTORE
0x12d PUSH1 0x20
0x12f ADD
0x130 SWAP2
0x131 POP
0x132 DUP1
0x133 MLOAD
0x134 SWAP1
0x135 PUSH1 0x20
0x137 ADD
0x138 SWAP1
0x139 DUP1
0x13a DUP4
0x13b DUP4
0x13c PUSH1 0x0
---
0x119: JUMPDEST 
0x11a: V69 = 0x40
0x11c: V70 = M[0x40]
0x11f: V71 = 0x20
0x121: V72 = ADD 0x20 V70
0x124: V73 = SUB V72 V70
0x126: M[V70] = V73
0x12a: V74 = M[V162]
0x12c: M[V72] = V74
0x12d: V75 = 0x20
0x12f: V76 = ADD 0x20 V72
0x133: V77 = M[V162]
0x135: V78 = 0x20
0x137: V79 = ADD 0x20 V162
0x13c: V80 = 0x0
---
Entry stack: [V7, 0x119, V162]
Stack pops: 1
Stack additions: [S0, V70, V70, V76, V79, V77, V77, V76, V79, 0x0]
Exit stack: [V7, 0x119, V162, V70, V70, V76, V79, V77, V77, V76, V79, 0x0]

================================

Block 0x13e
[0x13e:0x146]
---
Predecessors: [0x119, 0x14f]
Successors: [0x147, 0x15a]
---
0x13e JUMPDEST
0x13f DUP4
0x140 DUP2
0x141 LT
0x142 ISZERO
0x143 PUSH2 0x15a
0x146 JUMPI
---
0x13e: JUMPDEST 
0x141: V81 = LT S0 V77
0x142: V82 = ISZERO V81
0x143: V83 = 0x15a
0x146: JUMPI 0x15a V82
---
Entry stack: [V7, 0x119, V162, V70, V70, V76, V79, V77, V77, V76, V79, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V7, 0x119, V162, V70, V70, V76, V79, V77, V77, V76, V79, S0]

================================

Block 0x147
[0x147:0x14e]
---
Predecessors: [0x13e]
Successors: [0x14f]
---
0x147 DUP1
0x148 DUP3
0x149 ADD
0x14a MLOAD
0x14b DUP2
0x14c DUP5
0x14d ADD
0x14e MSTORE
---
0x149: V84 = ADD V79 S0
0x14a: V85 = M[V84]
0x14d: V86 = ADD V76 S0
0x14e: M[V86] = V85
---
Entry stack: [V7, 0x119, V162, V70, V70, V76, V79, V77, V77, V76, V79, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V7, 0x119, V162, V70, V70, V76, V79, V77, V77, V76, V79, S0]

================================

Block 0x14f
[0x14f:0x159]
---
Predecessors: [0x147]
Successors: [0x13e]
---
0x14f JUMPDEST
0x150 PUSH1 0x20
0x152 DUP2
0x153 ADD
0x154 SWAP1
0x155 POP
0x156 PUSH2 0x13e
0x159 JUMP
---
0x14f: JUMPDEST 
0x150: V87 = 0x20
0x153: V88 = ADD S0 0x20
0x156: V89 = 0x13e
0x159: JUMP 0x13e
---
Entry stack: [V7, 0x119, V162, V70, V70, V76, V79, V77, V77, V76, V79, S0]
Stack pops: 1
Stack additions: [V88]
Exit stack: [V7, 0x119, V162, V70, V70, V76, V79, V77, V77, V76, V79, V88]

================================

Block 0x15a
[0x15a:0x16d]
---
Predecessors: [0x13e]
Successors: [0x16e, 0x187]
---
0x15a JUMPDEST
0x15b POP
0x15c POP
0x15d POP
0x15e POP
0x15f SWAP1
0x160 POP
0x161 SWAP1
0x162 DUP2
0x163 ADD
0x164 SWAP1
0x165 PUSH1 0x1f
0x167 AND
0x168 DUP1
0x169 ISZERO
0x16a PUSH2 0x187
0x16d JUMPI
---
0x15a: JUMPDEST 
0x163: V90 = ADD V77 V76
0x165: V91 = 0x1f
0x167: V92 = AND 0x1f V77
0x169: V93 = ISZERO V92
0x16a: V94 = 0x187
0x16d: JUMPI 0x187 V93
---
Entry stack: [V7, 0x119, V162, V70, V70, V76, V79, V77, V77, V76, V79, S0]
Stack pops: 7
Stack additions: [V90, V92]
Exit stack: [V7, 0x119, V162, V70, V70, V90, V92]

================================

Block 0x16e
[0x16e:0x186]
---
Predecessors: [0x15a]
Successors: [0x187]
---
0x16e DUP1
0x16f DUP3
0x170 SUB
0x171 DUP1
0x172 MLOAD
0x173 PUSH1 0x1
0x175 DUP4
0x176 PUSH1 0x20
0x178 SUB
0x179 PUSH2 0x100
0x17c EXP
0x17d SUB
0x17e NOT
0x17f AND
0x180 DUP2
0x181 MSTORE
0x182 PUSH1 0x20
0x184 ADD
0x185 SWAP2
0x186 POP
---
0x170: V95 = SUB V90 V92
0x172: V96 = M[V95]
0x173: V97 = 0x1
0x176: V98 = 0x20
0x178: V99 = SUB 0x20 V92
0x179: V100 = 0x100
0x17c: V101 = EXP 0x100 V99
0x17d: V102 = SUB V101 0x1
0x17e: V103 = NOT V102
0x17f: V104 = AND V103 V96
0x181: M[V95] = V104
0x182: V105 = 0x20
0x184: V106 = ADD 0x20 V95
---
Entry stack: [V7, 0x119, V162, V70, V70, V90, V92]
Stack pops: 2
Stack additions: [V106, S0]
Exit stack: [V7, 0x119, V162, V70, V70, V106, V92]

================================

Block 0x187
[0x187:0x194]
---
Predecessors: [0x15a, 0x16e]
Successors: []
---
0x187 JUMPDEST
0x188 POP
0x189 SWAP3
0x18a POP
0x18b POP
0x18c POP
0x18d PUSH1 0x40
0x18f MLOAD
0x190 DUP1
0x191 SWAP2
0x192 SUB
0x193 SWAP1
0x194 RETURN
---
0x187: JUMPDEST 
0x18d: V107 = 0x40
0x18f: V108 = M[0x40]
0x192: V109 = SUB S1 V108
0x194: RETURN V108 V109
---
Entry stack: [V7, 0x119, V162, V70, V70, S1, V92]
Stack pops: 5
Stack additions: []
Exit stack: [V7, 0x119]

================================

Block 0x195
[0x195:0x1ec]
---
Predecessors: [0x5f]
Successors: [0x1ed, 0x1f1]
---
0x195 JUMPDEST
0x196 PUSH1 0x1
0x198 PUSH1 0x0
0x19a SWAP1
0x19b SLOAD
0x19c SWAP1
0x19d PUSH2 0x100
0x1a0 EXP
0x1a1 SWAP1
0x1a2 DIV
0x1a3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b8 AND
0x1b9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ce AND
0x1cf CALLER
0x1d0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e5 AND
0x1e6 EQ
0x1e7 ISZERO
0x1e8 ISZERO
0x1e9 PUSH2 0x1f1
0x1ec JUMPI
---
0x195: JUMPDEST 
0x196: V110 = 0x1
0x198: V111 = 0x0
0x19b: V112 = S[0x1]
0x19d: V113 = 0x100
0x1a0: V114 = EXP 0x100 0x0
0x1a2: V115 = DIV V112 0x1
0x1a3: V116 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b8: V117 = AND 0xffffffffffffffffffffffffffffffffffffffff V115
0x1b9: V118 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ce: V119 = AND 0xffffffffffffffffffffffffffffffffffffffff V117
0x1cf: V120 = CALLER
0x1d0: V121 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e5: V122 = AND 0xffffffffffffffffffffffffffffffffffffffff V120
0x1e6: V123 = EQ V122 V119
0x1e7: V124 = ISZERO V123
0x1e8: V125 = ISZERO V124
0x1e9: V126 = 0x1f1
0x1ec: JUMPI 0x1f1 V125
---
Entry stack: [V7, 0xaf, V39]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xaf, V39]

================================

Block 0x1ed
[0x1ed:0x1f0]
---
Predecessors: [0x195]
Successors: []
---
0x1ed PUSH1 0x0
0x1ef DUP1
0x1f0 REVERT
---
0x1ed: V127 = 0x0
0x1f0: REVERT 0x0 0x0
---
Entry stack: [V7, 0xaf, V39]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xaf, V39]

================================

Block 0x1f1
[0x1f1:0x206]
---
Predecessors: [0x195]
Successors: [0x2d0]
---
0x1f1 JUMPDEST
0x1f2 DUP1
0x1f3 PUSH1 0x0
0x1f5 SWAP1
0x1f6 DUP1
0x1f7 MLOAD
0x1f8 SWAP1
0x1f9 PUSH1 0x20
0x1fb ADD
0x1fc SWAP1
0x1fd PUSH2 0x207
0x200 SWAP3
0x201 SWAP2
0x202 SWAP1
0x203 PUSH2 0x2d0
0x206 JUMP
---
0x1f1: JUMPDEST 
0x1f3: V128 = 0x0
0x1f7: V129 = M[V39]
0x1f9: V130 = 0x20
0x1fb: V131 = ADD 0x20 V39
0x1fd: V132 = 0x207
0x203: V133 = 0x2d0
0x206: JUMP 0x2d0
---
Entry stack: [V7, 0xaf, V39]
Stack pops: 1
Stack additions: [S0, 0x207, 0x0, V131, V129]
Exit stack: [V7, 0xaf, V39, 0x207, 0x0, V131, V129]

================================

Block 0x207
[0x207:0x208]
---
Predecessors: [0x34c]
Successors: [0x209]
---
0x207 JUMPDEST
0x208 POP
---
0x207: JUMPDEST 
---
Entry stack: [V7, 0xaf, V39, 0x0]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0xaf, V39]

================================

Block 0x209
[0x209:0x20b]
---
Predecessors: [0x207]
Successors: [0xaf]
---
0x209 JUMPDEST
0x20a POP
0x20b JUMP
---
0x209: JUMPDEST 
0x20b: JUMP 0xaf
---
Entry stack: [V7, 0xaf, V39]
Stack pops: 2
Stack additions: []
Exit stack: [V7]

================================

Block 0x20c
[0x20c:0x231]
---
Predecessors: [0xbc]
Successors: [0xc4]
---
0x20c JUMPDEST
0x20d PUSH1 0x1
0x20f PUSH1 0x0
0x211 SWAP1
0x212 SLOAD
0x213 SWAP1
0x214 PUSH2 0x100
0x217 EXP
0x218 SWAP1
0x219 DIV
0x21a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22f AND
0x230 DUP2
0x231 JUMP
---
0x20c: JUMPDEST 
0x20d: V134 = 0x1
0x20f: V135 = 0x0
0x212: V136 = S[0x1]
0x214: V137 = 0x100
0x217: V138 = EXP 0x100 0x0
0x219: V139 = DIV V136 0x1
0x21a: V140 = 0xffffffffffffffffffffffffffffffffffffffff
0x22f: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x231: JUMP 0xc4
---
Entry stack: [V7, 0xc4]
Stack pops: 1
Stack additions: [S0, V141]
Exit stack: [V7, 0xc4, V141]

================================

Block 0x232
[0x232:0x281]
---
Predecessors: [0x111]
Successors: [0x282, 0x2c8]
---
0x232 JUMPDEST
0x233 PUSH1 0x0
0x235 DUP1
0x236 SLOAD
0x237 PUSH1 0x1
0x239 DUP2
0x23a PUSH1 0x1
0x23c AND
0x23d ISZERO
0x23e PUSH2 0x100
0x241 MUL
0x242 SUB
0x243 AND
0x244 PUSH1 0x2
0x246 SWAP1
0x247 DIV
0x248 DUP1
0x249 PUSH1 0x1f
0x24b ADD
0x24c PUSH1 0x20
0x24e DUP1
0x24f SWAP2
0x250 DIV
0x251 MUL
0x252 PUSH1 0x20
0x254 ADD
0x255 PUSH1 0x40
0x257 MLOAD
0x258 SWAP1
0x259 DUP2
0x25a ADD
0x25b PUSH1 0x40
0x25d MSTORE
0x25e DUP1
0x25f SWAP3
0x260 SWAP2
0x261 SWAP1
0x262 DUP2
0x263 DUP2
0x264 MSTORE
0x265 PUSH1 0x20
0x267 ADD
0x268 DUP3
0x269 DUP1
0x26a SLOAD
0x26b PUSH1 0x1
0x26d DUP2
0x26e PUSH1 0x1
0x270 AND
0x271 ISZERO
0x272 PUSH2 0x100
0x275 MUL
0x276 SUB
0x277 AND
0x278 PUSH1 0x2
0x27a SWAP1
0x27b DIV
0x27c DUP1
0x27d ISZERO
0x27e PUSH2 0x2c8
0x281 JUMPI
---
0x232: JUMPDEST 
0x233: V142 = 0x0
0x236: V143 = S[0x0]
0x237: V144 = 0x1
0x23a: V145 = 0x1
0x23c: V146 = AND 0x1 V143
0x23d: V147 = ISZERO V146
0x23e: V148 = 0x100
0x241: V149 = MUL 0x100 V147
0x242: V150 = SUB V149 0x1
0x243: V151 = AND V150 V143
0x244: V152 = 0x2
0x247: V153 = DIV V151 0x2
0x249: V154 = 0x1f
0x24b: V155 = ADD 0x1f V153
0x24c: V156 = 0x20
0x250: V157 = DIV V155 0x20
0x251: V158 = MUL V157 0x20
0x252: V159 = 0x20
0x254: V160 = ADD 0x20 V158
0x255: V161 = 0x40
0x257: V162 = M[0x40]
0x25a: V163 = ADD V162 V160
0x25b: V164 = 0x40
0x25d: M[0x40] = V163
0x264: M[V162] = V153
0x265: V165 = 0x20
0x267: V166 = ADD 0x20 V162
0x26a: V167 = S[0x0]
0x26b: V168 = 0x1
0x26e: V169 = 0x1
0x270: V170 = AND 0x1 V167
0x271: V171 = ISZERO V170
0x272: V172 = 0x100
0x275: V173 = MUL 0x100 V171
0x276: V174 = SUB V173 0x1
0x277: V175 = AND V174 V167
0x278: V176 = 0x2
0x27b: V177 = DIV V175 0x2
0x27d: V178 = ISZERO V177
0x27e: V179 = 0x2c8
0x281: JUMPI 0x2c8 V178
---
Entry stack: [V7, 0x119]
Stack pops: 0
Stack additions: [V162, 0x0, V153, V166, 0x0, V177]
Exit stack: [V7, 0x119, V162, 0x0, V153, V166, 0x0, V177]

================================

Block 0x282
[0x282:0x289]
---
Predecessors: [0x232]
Successors: [0x28a, 0x29d]
---
0x282 DUP1
0x283 PUSH1 0x1f
0x285 LT
0x286 PUSH2 0x29d
0x289 JUMPI
---
0x283: V180 = 0x1f
0x285: V181 = LT 0x1f V177
0x286: V182 = 0x29d
0x289: JUMPI 0x29d V181
---
Entry stack: [V7, 0x119, V162, 0x0, V153, V166, 0x0, V177]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7, 0x119, V162, 0x0, V153, V166, 0x0, V177]

================================

Block 0x28a
[0x28a:0x29c]
---
Predecessors: [0x282]
Successors: [0x2c8]
---
0x28a PUSH2 0x100
0x28d DUP1
0x28e DUP4
0x28f SLOAD
0x290 DIV
0x291 MUL
0x292 DUP4
0x293 MSTORE
0x294 SWAP2
0x295 PUSH1 0x20
0x297 ADD
0x298 SWAP2
0x299 PUSH2 0x2c8
0x29c JUMP
---
0x28a: V183 = 0x100
0x28f: V184 = S[0x0]
0x290: V185 = DIV V184 0x100
0x291: V186 = MUL V185 0x100
0x293: M[V166] = V186
0x295: V187 = 0x20
0x297: V188 = ADD 0x20 V166
0x299: V189 = 0x2c8
0x29c: JUMP 0x2c8
---
Entry stack: [V7, 0x119, V162, 0x0, V153, V166, 0x0, V177]
Stack pops: 3
Stack additions: [V188, S1, S0]
Exit stack: [V7, 0x119, V162, 0x0, V153, V188, 0x0, V177]

================================

Block 0x29d
[0x29d:0x2aa]
---
Predecessors: [0x282]
Successors: [0x2ab]
---
0x29d JUMPDEST
0x29e DUP3
0x29f ADD
0x2a0 SWAP2
0x2a1 SWAP1
0x2a2 PUSH1 0x0
0x2a4 MSTORE
0x2a5 PUSH1 0x20
0x2a7 PUSH1 0x0
0x2a9 SHA3
0x2aa SWAP1
---
0x29d: JUMPDEST 
0x29f: V190 = ADD V166 V177
0x2a2: V191 = 0x0
0x2a4: M[0x0] = 0x0
0x2a5: V192 = 0x20
0x2a7: V193 = 0x0
0x2a9: V194 = SHA3 0x0 0x20
---
Entry stack: [V7, 0x119, V162, 0x0, V153, V166, 0x0, V177]
Stack pops: 3
Stack additions: [V190, V194, S2]
Exit stack: [V7, 0x119, V162, 0x0, V153, V190, V194, V166]

================================

Block 0x2ab
[0x2ab:0x2be]
---
Predecessors: [0x29d, 0x2ab]
Successors: [0x2ab, 0x2bf]
---
0x2ab JUMPDEST
0x2ac DUP2
0x2ad SLOAD
0x2ae DUP2
0x2af MSTORE
0x2b0 SWAP1
0x2b1 PUSH1 0x1
0x2b3 ADD
0x2b4 SWAP1
0x2b5 PUSH1 0x20
0x2b7 ADD
0x2b8 DUP1
0x2b9 DUP4
0x2ba GT
0x2bb PUSH2 0x2ab
0x2be JUMPI
---
0x2ab: JUMPDEST 
0x2ad: V195 = S[S1]
0x2af: M[S0] = V195
0x2b1: V196 = 0x1
0x2b3: V197 = ADD 0x1 S1
0x2b5: V198 = 0x20
0x2b7: V199 = ADD 0x20 S0
0x2ba: V200 = GT V190 V199
0x2bb: V201 = 0x2ab
0x2be: JUMPI 0x2ab V200
---
Entry stack: [V7, 0x119, V162, 0x0, V153, V190, S1, S0]
Stack pops: 3
Stack additions: [S2, V197, V199]
Exit stack: [V7, 0x119, V162, 0x0, V153, V190, V197, V199]

================================

Block 0x2bf
[0x2bf:0x2c7]
---
Predecessors: [0x2ab]
Successors: [0x2c8]
---
0x2bf DUP3
0x2c0 SWAP1
0x2c1 SUB
0x2c2 PUSH1 0x1f
0x2c4 AND
0x2c5 DUP3
0x2c6 ADD
0x2c7 SWAP2
---
0x2c1: V202 = SUB V199 V190
0x2c2: V203 = 0x1f
0x2c4: V204 = AND 0x1f V202
0x2c6: V205 = ADD V190 V204
---
Entry stack: [V7, 0x119, V162, 0x0, V153, V190, V197, V199]
Stack pops: 3
Stack additions: [V205, S1, S2]
Exit stack: [V7, 0x119, V162, 0x0, V153, V205, V197, V190]

================================

Block 0x2c8
[0x2c8:0x2cf]
---
Predecessors: [0x232, 0x28a, 0x2bf]
Successors: [0x119]
---
0x2c8 JUMPDEST
0x2c9 POP
0x2ca POP
0x2cb POP
0x2cc POP
0x2cd POP
0x2ce DUP2
0x2cf JUMP
---
0x2c8: JUMPDEST 
0x2cf: JUMP 0x119
---
Entry stack: [V7, 0x119, V162, 0x0, V153, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V7, 0x119, V162]

================================

Block 0x2d0
[0x2d0:0x300]
---
Predecessors: [0x1f1]
Successors: [0x301, 0x311]
---
0x2d0 JUMPDEST
0x2d1 DUP3
0x2d2 DUP1
0x2d3 SLOAD
0x2d4 PUSH1 0x1
0x2d6 DUP2
0x2d7 PUSH1 0x1
0x2d9 AND
0x2da ISZERO
0x2db PUSH2 0x100
0x2de MUL
0x2df SUB
0x2e0 AND
0x2e1 PUSH1 0x2
0x2e3 SWAP1
0x2e4 DIV
0x2e5 SWAP1
0x2e6 PUSH1 0x0
0x2e8 MSTORE
0x2e9 PUSH1 0x20
0x2eb PUSH1 0x0
0x2ed SHA3
0x2ee SWAP1
0x2ef PUSH1 0x1f
0x2f1 ADD
0x2f2 PUSH1 0x20
0x2f4 SWAP1
0x2f5 DIV
0x2f6 DUP2
0x2f7 ADD
0x2f8 SWAP3
0x2f9 DUP3
0x2fa PUSH1 0x1f
0x2fc LT
0x2fd PUSH2 0x311
0x300 JUMPI
---
0x2d0: JUMPDEST 
0x2d3: V206 = S[0x0]
0x2d4: V207 = 0x1
0x2d7: V208 = 0x1
0x2d9: V209 = AND 0x1 V206
0x2da: V210 = ISZERO V209
0x2db: V211 = 0x100
0x2de: V212 = MUL 0x100 V210
0x2df: V213 = SUB V212 0x1
0x2e0: V214 = AND V213 V206
0x2e1: V215 = 0x2
0x2e4: V216 = DIV V214 0x2
0x2e6: V217 = 0x0
0x2e8: M[0x0] = 0x0
0x2e9: V218 = 0x20
0x2eb: V219 = 0x0
0x2ed: V220 = SHA3 0x0 0x20
0x2ef: V221 = 0x1f
0x2f1: V222 = ADD 0x1f V216
0x2f2: V223 = 0x20
0x2f5: V224 = DIV V222 0x20
0x2f7: V225 = ADD V220 V224
0x2fa: V226 = 0x1f
0x2fc: V227 = LT 0x1f V129
0x2fd: V228 = 0x311
0x300: JUMPI 0x311 V227
---
Entry stack: [V7, 0xaf, V39, 0x207, 0x0, V131, V129]
Stack pops: 3
Stack additions: [S2, V225, S0, V220, S1]
Exit stack: [V7, 0xaf, V39, 0x207, 0x0, V225, V129, V220, V131]

================================

Block 0x301
[0x301:0x310]
---
Predecessors: [0x2d0]
Successors: [0x33f]
---
0x301 DUP1
0x302 MLOAD
0x303 PUSH1 0xff
0x305 NOT
0x306 AND
0x307 DUP4
0x308 DUP1
0x309 ADD
0x30a OR
0x30b DUP6
0x30c SSTORE
0x30d PUSH2 0x33f
0x310 JUMP
---
0x302: V229 = M[V131]
0x303: V230 = 0xff
0x305: V231 = NOT 0xff
0x306: V232 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V229
0x309: V233 = ADD V129 V129
0x30a: V234 = OR V233 V232
0x30c: S[0x0] = V234
0x30d: V235 = 0x33f
0x310: JUMP 0x33f
---
Entry stack: [V7, 0xaf, V39, 0x207, 0x0, V225, V129, V220, V131]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V7, 0xaf, V39, 0x207, 0x0, V225, V129, V220, V131]

================================

Block 0x311
[0x311:0x31f]
---
Predecessors: [0x2d0]
Successors: [0x320, 0x33f]
---
0x311 JUMPDEST
0x312 DUP3
0x313 DUP1
0x314 ADD
0x315 PUSH1 0x1
0x317 ADD
0x318 DUP6
0x319 SSTORE
0x31a DUP3
0x31b ISZERO
0x31c PUSH2 0x33f
0x31f JUMPI
---
0x311: JUMPDEST 
0x314: V236 = ADD V129 V129
0x315: V237 = 0x1
0x317: V238 = ADD 0x1 V236
0x319: S[0x0] = V238
0x31b: V239 = ISZERO V129
0x31c: V240 = 0x33f
0x31f: JUMPI 0x33f V239
---
Entry stack: [V7, 0xaf, V39, 0x207, 0x0, V225, V129, V220, V131]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V7, 0xaf, V39, 0x207, 0x0, V225, V129, V220, V131]

================================

Block 0x320
[0x320:0x322]
---
Predecessors: [0x311]
Successors: [0x323]
---
0x320 SWAP2
0x321 DUP3
0x322 ADD
---
0x322: V241 = ADD V131 V129
---
Entry stack: [V7, 0xaf, V39, 0x207, 0x0, V225, V129, V220, V131]
Stack pops: 3
Stack additions: [S0, S1, V241]
Exit stack: [V7, 0xaf, V39, 0x207, 0x0, V225, V131, V220, V241]

================================

Block 0x323
[0x323:0x32b]
---
Predecessors: [0x320, 0x32c]
Successors: [0x32c, 0x33e]
---
0x323 JUMPDEST
0x324 DUP3
0x325 DUP2
0x326 GT
0x327 ISZERO
0x328 PUSH2 0x33e
0x32b JUMPI
---
0x323: JUMPDEST 
0x326: V242 = GT V241 S2
0x327: V243 = ISZERO V242
0x328: V244 = 0x33e
0x32b: JUMPI 0x33e V243
---
Entry stack: [V7, 0xaf, V39, 0x207, 0x0, V225, S2, S1, V241]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V7, 0xaf, V39, 0x207, 0x0, V225, S2, S1, V241]

================================

Block 0x32c
[0x32c:0x33d]
---
Predecessors: [0x323]
Successors: [0x323]
---
0x32c DUP3
0x32d MLOAD
0x32e DUP3
0x32f SSTORE
0x330 SWAP2
0x331 PUSH1 0x20
0x333 ADD
0x334 SWAP2
0x335 SWAP1
0x336 PUSH1 0x1
0x338 ADD
0x339 SWAP1
0x33a PUSH2 0x323
0x33d JUMP
---
0x32d: V245 = M[S2]
0x32f: S[S1] = V245
0x331: V246 = 0x20
0x333: V247 = ADD 0x20 S2
0x336: V248 = 0x1
0x338: V249 = ADD 0x1 S1
0x33a: V250 = 0x323
0x33d: JUMP 0x323
---
Entry stack: [V7, 0xaf, V39, 0x207, 0x0, V225, S2, S1, V241]
Stack pops: 3
Stack additions: [V247, V249, S0]
Exit stack: [V7, 0xaf, V39, 0x207, 0x0, V225, V247, V249, V241]

================================

Block 0x33e
[0x33e:0x33e]
---
Predecessors: [0x323]
Successors: [0x33f]
---
0x33e JUMPDEST
---
0x33e: JUMPDEST 
---
Entry stack: [V7, 0xaf, V39, 0x207, 0x0, V225, S2, S1, V241]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0xaf, V39, 0x207, 0x0, V225, S2, S1, V241]

================================

Block 0x33f
[0x33f:0x34b]
---
Predecessors: [0x301, 0x311, 0x33e]
Successors: [0x350]
---
0x33f JUMPDEST
0x340 POP
0x341 SWAP1
0x342 POP
0x343 PUSH2 0x34c
0x346 SWAP2
0x347 SWAP1
0x348 PUSH2 0x350
0x34b JUMP
---
0x33f: JUMPDEST 
0x343: V251 = 0x34c
0x348: V252 = 0x350
0x34b: JUMP 0x350
---
Entry stack: [V7, 0xaf, V39, 0x207, 0x0, V225, S2, S1, S0]
Stack pops: 4
Stack additions: [0x34c, S3, S1]
Exit stack: [V7, 0xaf, V39, 0x207, 0x0, 0x34c, V225, S1]

================================

Block 0x34c
[0x34c:0x34f]
---
Predecessors: [0x372]
Successors: [0x207]
---
0x34c JUMPDEST
0x34d POP
0x34e SWAP1
0x34f JUMP
---
0x34c: JUMPDEST 
0x34f: JUMP 0x207
---
Entry stack: [V7, 0xaf, V39, 0x207, 0x0, V225]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V7, 0xaf, V39, 0x0]

================================

Block 0x350
[0x350:0x355]
---
Predecessors: [0x33f]
Successors: [0x356]
---
0x350 JUMPDEST
0x351 PUSH2 0x372
0x354 SWAP2
0x355 SWAP1
---
0x350: JUMPDEST 
0x351: V253 = 0x372
---
Entry stack: [V7, 0xaf, V39, 0x207, 0x0, 0x34c, V225, S0]
Stack pops: 2
Stack additions: [0x372, S1, S0]
Exit stack: [V7, 0xaf, V39, 0x207, 0x0, 0x34c, 0x372, V225, S0]

================================

Block 0x356
[0x356:0x35e]
---
Predecessors: [0x350, 0x35f]
Successors: [0x35f, 0x36e]
---
0x356 JUMPDEST
0x357 DUP1
0x358 DUP3
0x359 GT
0x35a ISZERO
0x35b PUSH2 0x36e
0x35e JUMPI
---
0x356: JUMPDEST 
0x359: V254 = GT V225 S0
0x35a: V255 = ISZERO V254
0x35b: V256 = 0x36e
0x35e: JUMPI 0x36e V255
---
Entry stack: [V7, 0xaf, V39, 0x207, 0x0, 0x34c, 0x372, V225, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V7, 0xaf, V39, 0x207, 0x0, 0x34c, 0x372, V225, S0]

================================

Block 0x35f
[0x35f:0x36d]
---
Predecessors: [0x356]
Successors: [0x356]
---
0x35f PUSH1 0x0
0x361 DUP2
0x362 PUSH1 0x0
0x364 SWAP1
0x365 SSTORE
0x366 POP
0x367 PUSH1 0x1
0x369 ADD
0x36a PUSH2 0x356
0x36d JUMP
---
0x35f: V257 = 0x0
0x362: V258 = 0x0
0x365: S[S0] = 0x0
0x367: V259 = 0x1
0x369: V260 = ADD 0x1 S0
0x36a: V261 = 0x356
0x36d: JUMP 0x356
---
Entry stack: [V7, 0xaf, V39, 0x207, 0x0, 0x34c, 0x372, V225, S0]
Stack pops: 1
Stack additions: [V260]
Exit stack: [V7, 0xaf, V39, 0x207, 0x0, 0x34c, 0x372, V225, V260]

================================

Block 0x36e
[0x36e:0x371]
---
Predecessors: [0x356]
Successors: [0x372]
---
0x36e JUMPDEST
0x36f POP
0x370 SWAP1
0x371 JUMP
---
0x36e: JUMPDEST 
0x371: JUMP 0x372
---
Entry stack: [V7, 0xaf, V39, 0x207, 0x0, 0x34c, 0x372, V225, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V7, 0xaf, V39, 0x207, 0x0, 0x34c, V225]

================================

Block 0x372
[0x372:0x374]
---
Predecessors: [0x36e]
Successors: [0x34c]
---
0x372 JUMPDEST
0x373 SWAP1
0x374 JUMP
---
0x372: JUMPDEST 
0x374: JUMP 0x34c
---
Entry stack: [V7, 0xaf, V39, 0x207, 0x0, 0x34c, V225]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V7, 0xaf, V39, 0x207, 0x0, V225]

================================

Block 0x375
[0x375:0x3aa]
---
Predecessors: []
Successors: []
---
0x375 STOP
0x376 LOG1
0x377 PUSH6 0x627a7a723058
0x37e SHA3
0x37f EQ
0x380 MISSING 0x1e
0x381 MISSING 0xda
0x382 SWAP12
0x383 ISZERO
0x384 PUSH16 0x549162574e697ffc2cf096debe328bdd
0x395 MISSING 0xb3
0x396 PUSH20 0xbd71914255603af60029
---
0x375: STOP 
0x376: LOG S0 S1 S2
0x377: V262 = 0x627a7a723058
0x37e: V263 = SHA3 0x627a7a723058 S3
0x37f: V264 = EQ V263 S4
0x380: MISSING 0x1e
0x381: MISSING 0xda
0x383: V265 = ISZERO S12
0x384: V266 = 0x549162574e697ffc2cf096debe328bdd
0x395: MISSING 0xb3
0x396: V267 = 0xbd71914255603af60029
---
Entry stack: []
Stack pops: 0
Stack additions: [V264, 0x549162574e697ffc2cf096debe328bdd, V265, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S0, 0xbd71914255603af60029]
Exit stack: []

================================

Function 0:
Public function signature: 0x368b8772
Entry block: 0x54
Exit block: 0xaf
Body: 0x54, 0x5b, 0x5f, 0xaf, 0x195, 0x1ed, 0x1f1, 0x207, 0x209, 0x2d0, 0x301, 0x311, 0x320, 0x323, 0x32c, 0x33e, 0x33f, 0x34c, 0x350, 0x356, 0x35f, 0x36e, 0x372

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0xb1
Exit block: 0xc4
Body: 0xb1, 0xb8, 0xbc, 0xc4, 0x20c

Function 2:
Public function signature: 0xe21f37ce
Entry block: 0x106
Exit block: 0x187
Body: 0x106, 0x10d, 0x111, 0x119, 0x13e, 0x147, 0x14f, 0x15a, 0x16e, 0x187, 0x232, 0x282, 0x28a, 0x29d, 0x2ab, 0x2bf, 0x2c8

Function 3:
Public fallback function
Entry block: 0x4f
Exit block: 0x4f
Body: 0x4f

