Block 0x0
[0x0:0x38]
---
Predecessors: []
Successors: [0x39, 0x3e]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 PUSH4 0xffffffff
0x2d AND
0x2e DUP1
0x2f PUSH4 0x90b98a11
0x34 EQ
0x35 PUSH2 0x3e
0x38 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x28: V6 = 0xffffffff
0x2d: V7 = AND 0xffffffff V5
0x2f: V8 = 0x90b98a11
0x34: V9 = EQ 0x90b98a11 V7
0x35: V10 = 0x3e
0x38: JUMPI 0x3e V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x39
[0x39:0x3d]
---
Predecessors: [0x0]
Successors: []
---
0x39 JUMPDEST
0x3a PUSH1 0x0
0x3c DUP1
0x3d REVERT
---
0x39: JUMPDEST 
0x3a: V11 = 0x0
0x3d: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x3e
[0x3e:0x44]
---
Predecessors: [0x0]
Successors: [0x45, 0x49]
---
0x3e JUMPDEST
0x3f CALLVALUE
0x40 ISZERO
0x41 PUSH2 0x49
0x44 JUMPI
---
0x3e: JUMPDEST 
0x3f: V12 = CALLVALUE
0x40: V13 = ISZERO V12
0x41: V14 = 0x49
0x44: JUMPI 0x49 V13
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x45
[0x45:0x48]
---
Predecessors: [0x3e]
Successors: []
---
0x45 PUSH1 0x0
0x47 DUP1
0x48 REVERT
---
0x45: V15 = 0x0
0x48: REVERT 0x0 0x0
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x49
[0x49:0x7d]
---
Predecessors: [0x3e]
Successors: [0x98]
---
0x49 JUMPDEST
0x4a PUSH2 0x7e
0x4d PUSH1 0x4
0x4f DUP1
0x50 DUP1
0x51 CALLDATALOAD
0x52 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x67 AND
0x68 SWAP1
0x69 PUSH1 0x20
0x6b ADD
0x6c SWAP1
0x6d SWAP2
0x6e SWAP1
0x6f DUP1
0x70 CALLDATALOAD
0x71 SWAP1
0x72 PUSH1 0x20
0x74 ADD
0x75 SWAP1
0x76 SWAP2
0x77 SWAP1
0x78 POP
0x79 POP
0x7a PUSH2 0x98
0x7d JUMP
---
0x49: JUMPDEST 
0x4a: V16 = 0x7e
0x4d: V17 = 0x4
0x51: V18 = CALLDATALOAD 0x4
0x52: V19 = 0xffffffffffffffffffffffffffffffffffffffff
0x67: V20 = AND 0xffffffffffffffffffffffffffffffffffffffff V18
0x69: V21 = 0x20
0x6b: V22 = ADD 0x20 0x4
0x70: V23 = CALLDATALOAD 0x24
0x72: V24 = 0x20
0x74: V25 = ADD 0x20 0x24
0x7a: V26 = 0x98
0x7d: JUMP 0x98
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x7e, V20, V23]
Exit stack: [V7, 0x7e, V20, V23]

================================

Block 0x7e
[0x7e:0x97]
---
Predecessors: [0x186]
Successors: []
---
0x7e JUMPDEST
0x7f PUSH1 0x40
0x81 MLOAD
0x82 DUP1
0x83 DUP3
0x84 ISZERO
0x85 ISZERO
0x86 ISZERO
0x87 ISZERO
0x88 DUP2
0x89 MSTORE
0x8a PUSH1 0x20
0x8c ADD
0x8d SWAP2
0x8e POP
0x8f POP
0x90 PUSH1 0x40
0x92 MLOAD
0x93 DUP1
0x94 SWAP2
0x95 SUB
0x96 SWAP1
0x97 RETURN
---
0x7e: JUMPDEST 
0x7f: V27 = 0x40
0x81: V28 = M[0x40]
0x84: V29 = ISZERO {0x0, 0x1}
0x85: V30 = ISZERO V29
0x86: V31 = ISZERO V30
0x87: V32 = ISZERO V31
0x89: M[V28] = V32
0x8a: V33 = 0x20
0x8c: V34 = ADD 0x20 V28
0x90: V35 = 0x40
0x92: V36 = M[0x40]
0x95: V37 = SUB V34 V36
0x97: RETURN V36 V37
---
Entry stack: [V7, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Block 0x98
[0x98:0xe0]
---
Predecessors: [0x49]
Successors: [0xe1, 0xe9]
---
0x98 JUMPDEST
0x99 PUSH1 0x0
0x9b DUP2
0x9c PUSH1 0x0
0x9e DUP1
0x9f CALLER
0xa0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb5 AND
0xb6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcb AND
0xcc DUP2
0xcd MSTORE
0xce PUSH1 0x20
0xd0 ADD
0xd1 SWAP1
0xd2 DUP2
0xd3 MSTORE
0xd4 PUSH1 0x20
0xd6 ADD
0xd7 PUSH1 0x0
0xd9 SHA3
0xda SLOAD
0xdb LT
0xdc ISZERO
0xdd PUSH2 0xe9
0xe0 JUMPI
---
0x98: JUMPDEST 
0x99: V38 = 0x0
0x9c: V39 = 0x0
0x9f: V40 = CALLER
0xa0: V41 = 0xffffffffffffffffffffffffffffffffffffffff
0xb5: V42 = AND 0xffffffffffffffffffffffffffffffffffffffff V40
0xb6: V43 = 0xffffffffffffffffffffffffffffffffffffffff
0xcb: V44 = AND 0xffffffffffffffffffffffffffffffffffffffff V42
0xcd: M[0x0] = V44
0xce: V45 = 0x20
0xd0: V46 = ADD 0x20 0x0
0xd3: M[0x20] = 0x0
0xd4: V47 = 0x20
0xd6: V48 = ADD 0x20 0x20
0xd7: V49 = 0x0
0xd9: V50 = SHA3 0x0 0x40
0xda: V51 = S[V50]
0xdb: V52 = LT V51 V23
0xdc: V53 = ISZERO V52
0xdd: V54 = 0xe9
0xe0: JUMPI 0xe9 V53
---
Entry stack: [V7, 0x7e, V20, V23]
Stack pops: 1
Stack additions: [S0, 0x0]
Exit stack: [V7, 0x7e, V20, V23, 0x0]

================================

Block 0xe1
[0xe1:0xe8]
---
Predecessors: [0x98]
Successors: [0x186]
---
0xe1 PUSH1 0x0
0xe3 SWAP1
0xe4 POP
0xe5 PUSH2 0x186
0xe8 JUMP
---
0xe1: V55 = 0x0
0xe5: V56 = 0x186
0xe8: JUMP 0x186
---
Entry stack: [V7, 0x7e, V20, V23, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V7, 0x7e, V20, V23, 0x0]

================================

Block 0xe9
[0xe9:0x185]
---
Predecessors: [0x98]
Successors: [0x186]
---
0xe9 JUMPDEST
0xea DUP2
0xeb PUSH1 0x0
0xed DUP1
0xee CALLER
0xef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x104 AND
0x105 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11a AND
0x11b DUP2
0x11c MSTORE
0x11d PUSH1 0x20
0x11f ADD
0x120 SWAP1
0x121 DUP2
0x122 MSTORE
0x123 PUSH1 0x20
0x125 ADD
0x126 PUSH1 0x0
0x128 SHA3
0x129 PUSH1 0x0
0x12b DUP3
0x12c DUP3
0x12d SLOAD
0x12e SUB
0x12f SWAP3
0x130 POP
0x131 POP
0x132 DUP2
0x133 SWAP1
0x134 SSTORE
0x135 POP
0x136 DUP2
0x137 PUSH1 0x0
0x139 DUP1
0x13a DUP6
0x13b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x150 AND
0x151 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x166 AND
0x167 DUP2
0x168 MSTORE
0x169 PUSH1 0x20
0x16b ADD
0x16c SWAP1
0x16d DUP2
0x16e MSTORE
0x16f PUSH1 0x20
0x171 ADD
0x172 PUSH1 0x0
0x174 SHA3
0x175 PUSH1 0x0
0x177 DUP3
0x178 DUP3
0x179 SLOAD
0x17a ADD
0x17b SWAP3
0x17c POP
0x17d POP
0x17e DUP2
0x17f SWAP1
0x180 SSTORE
0x181 POP
0x182 PUSH1 0x1
0x184 SWAP1
0x185 POP
---
0xe9: JUMPDEST 
0xeb: V57 = 0x0
0xee: V58 = CALLER
0xef: V59 = 0xffffffffffffffffffffffffffffffffffffffff
0x104: V60 = AND 0xffffffffffffffffffffffffffffffffffffffff V58
0x105: V61 = 0xffffffffffffffffffffffffffffffffffffffff
0x11a: V62 = AND 0xffffffffffffffffffffffffffffffffffffffff V60
0x11c: M[0x0] = V62
0x11d: V63 = 0x20
0x11f: V64 = ADD 0x20 0x0
0x122: M[0x20] = 0x0
0x123: V65 = 0x20
0x125: V66 = ADD 0x20 0x20
0x126: V67 = 0x0
0x128: V68 = SHA3 0x0 0x40
0x129: V69 = 0x0
0x12d: V70 = S[V68]
0x12e: V71 = SUB V70 V23
0x134: S[V68] = V71
0x137: V72 = 0x0
0x13b: V73 = 0xffffffffffffffffffffffffffffffffffffffff
0x150: V74 = AND 0xffffffffffffffffffffffffffffffffffffffff V20
0x151: V75 = 0xffffffffffffffffffffffffffffffffffffffff
0x166: V76 = AND 0xffffffffffffffffffffffffffffffffffffffff V74
0x168: M[0x0] = V76
0x169: V77 = 0x20
0x16b: V78 = ADD 0x20 0x0
0x16e: M[0x20] = 0x0
0x16f: V79 = 0x20
0x171: V80 = ADD 0x20 0x20
0x172: V81 = 0x0
0x174: V82 = SHA3 0x0 0x40
0x175: V83 = 0x0
0x179: V84 = S[V82]
0x17a: V85 = ADD V84 V23
0x180: S[V82] = V85
0x182: V86 = 0x1
---
Entry stack: [V7, 0x7e, V20, V23, 0x0]
Stack pops: 3
Stack additions: [S2, S1, 0x1]
Exit stack: [V7, 0x7e, V20, V23, 0x1]

================================

Block 0x186
[0x186:0x18b]
---
Predecessors: [0xe1, 0xe9]
Successors: [0x7e]
---
0x186 JUMPDEST
0x187 SWAP3
0x188 SWAP2
0x189 POP
0x18a POP
0x18b JUMP
---
0x186: JUMPDEST 
0x18b: JUMP 0x7e
---
Entry stack: [V7, 0x7e, V20, V23, {0x0, 0x1}]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V7, {0x0, 0x1}]

================================

Block 0x18c
[0x18c:0x1bd]
---
Predecessors: []
Successors: []
---
0x18c STOP
0x18d LOG1
0x18e PUSH6 0x627a7a723058
0x195 SHA3
0x196 RETURNDATACOPY
0x197 PUSH21 0xc43d9caaa51aaa81bbd457da147c169efe70a3f436
0x1ad CALLER
0x1ae PUSH15 0xb53f06477d71930029
---
0x18c: STOP 
0x18d: LOG S0 S1 S2
0x18e: V87 = 0x627a7a723058
0x195: V88 = SHA3 0x627a7a723058 S3
0x196: RETURNDATACOPY V88 S4 S5
0x197: V89 = 0xc43d9caaa51aaa81bbd457da147c169efe70a3f436
0x1ad: V90 = CALLER
0x1ae: V91 = 0xb53f06477d71930029
---
Entry stack: []
Stack pops: 0
Stack additions: [0xb53f06477d71930029, V90, 0xc43d9caaa51aaa81bbd457da147c169efe70a3f436]
Exit stack: []

================================

Function 0:
Public function signature: 0x90b98a11
Entry block: 0x3e
Exit block: 0x7e
Body: 0x3e, 0x45, 0x49, 0x7e, 0x98, 0xe1, 0xe9, 0x186

Function 1:
Public fallback function
Entry block: 0x39
Exit block: 0x39
Body: 0x39

