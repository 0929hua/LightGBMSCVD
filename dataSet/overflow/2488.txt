Block 0x0
[0x0:0x38]
---
Predecessors: []
Successors: [0x39, 0x51]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 PUSH4 0xffffffff
0x2d AND
0x2e DUP1
0x2f PUSH4 0x8da5cb5b
0x34 EQ
0x35 PUSH2 0x51
0x38 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x28: V6 = 0xffffffff
0x2d: V7 = AND 0xffffffff V5
0x2f: V8 = 0x8da5cb5b
0x34: V9 = EQ 0x8da5cb5b V7
0x35: V10 = 0x51
0x38: JUMPI 0x51 V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0x0]
Successors: [0x44, 0xa3]
---
0x39 DUP1
0x3a PUSH4 0xad8733ca
0x3f EQ
0x40 PUSH2 0xa3
0x43 JUMPI
---
0x3a: V11 = 0xad8733ca
0x3f: V12 = EQ 0xad8733ca V7
0x40: V13 = 0xa3
0x43: JUMPI 0xa3 V12
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x44
[0x44:0x4e]
---
Predecessors: [0x39]
Successors: [0x4f, 0x16d]
---
0x44 DUP1
0x45 PUSH4 0xf2fde38b
0x4a EQ
0x4b PUSH2 0x16d
0x4e JUMPI
---
0x45: V14 = 0xf2fde38b
0x4a: V15 = EQ 0xf2fde38b V7
0x4b: V16 = 0x16d
0x4e: JUMPI 0x16d V15
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x4f
[0x4f:0x50]
---
Predecessors: [0x44]
Successors: []
---
0x4f JUMPDEST
0x50 INVALID
---
0x4f: JUMPDEST 
0x50: INVALID 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x51
[0x51:0x57]
---
Predecessors: [0x0]
Successors: [0x58, 0x59]
---
0x51 JUMPDEST
0x52 CALLVALUE
0x53 ISZERO
0x54 PUSH2 0x59
0x57 JUMPI
---
0x51: JUMPDEST 
0x52: V17 = CALLVALUE
0x53: V18 = ISZERO V17
0x54: V19 = 0x59
0x57: JUMPI 0x59 V18
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x58
[0x58:0x58]
---
Predecessors: [0x51]
Successors: []
---
0x58 INVALID
---
0x58: INVALID 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x59
[0x59:0x60]
---
Predecessors: [0x51]
Successors: [0x1a3]
---
0x59 JUMPDEST
0x5a PUSH2 0x61
0x5d PUSH2 0x1a3
0x60 JUMP
---
0x59: JUMPDEST 
0x5a: V20 = 0x61
0x5d: V21 = 0x1a3
0x60: JUMP 0x1a3
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x61]
Exit stack: [V7, 0x61]

================================

Block 0x61
[0x61:0xa2]
---
Predecessors: [0x1a3]
Successors: []
---
0x61 JUMPDEST
0x62 PUSH1 0x40
0x64 MLOAD
0x65 DUP1
0x66 DUP3
0x67 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7c AND
0x7d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x92 AND
0x93 DUP2
0x94 MSTORE
0x95 PUSH1 0x20
0x97 ADD
0x98 SWAP2
0x99 POP
0x9a POP
0x9b PUSH1 0x40
0x9d MLOAD
0x9e DUP1
0x9f SWAP2
0xa0 SUB
0xa1 SWAP1
0xa2 RETURN
---
0x61: JUMPDEST 
0x62: V22 = 0x40
0x64: V23 = M[0x40]
0x67: V24 = 0xffffffffffffffffffffffffffffffffffffffff
0x7c: V25 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x7d: V26 = 0xffffffffffffffffffffffffffffffffffffffff
0x92: V27 = AND 0xffffffffffffffffffffffffffffffffffffffff V25
0x94: M[V23] = V27
0x95: V28 = 0x20
0x97: V29 = ADD 0x20 V23
0x9b: V30 = 0x40
0x9d: V31 = M[0x40]
0xa0: V32 = SUB V29 V31
0xa2: RETURN V31 V32
---
Entry stack: [V7, 0x61, V109]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0x61]

================================

Block 0xa3
[0xa3:0xa9]
---
Predecessors: [0x39]
Successors: [0xaa, 0xab]
---
0xa3 JUMPDEST
0xa4 CALLVALUE
0xa5 ISZERO
0xa6 PUSH2 0xab
0xa9 JUMPI
---
0xa3: JUMPDEST 
0xa4: V33 = CALLVALUE
0xa5: V34 = ISZERO V33
0xa6: V35 = 0xab
0xa9: JUMPI 0xab V34
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xaa
[0xaa:0xaa]
---
Predecessors: [0xa3]
Successors: []
---
0xaa INVALID
---
0xaa: INVALID 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0xab
[0xab:0x156]
---
Predecessors: [0xa3]
Successors: [0x1c9]
---
0xab JUMPDEST
0xac PUSH2 0x157
0xaf PUSH1 0x4
0xb1 DUP1
0xb2 DUP1
0xb3 CALLDATALOAD
0xb4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc9 AND
0xca SWAP1
0xcb PUSH1 0x20
0xcd ADD
0xce SWAP1
0xcf SWAP2
0xd0 SWAP1
0xd1 DUP1
0xd2 CALLDATALOAD
0xd3 SWAP1
0xd4 PUSH1 0x20
0xd6 ADD
0xd7 SWAP1
0xd8 DUP3
0xd9 ADD
0xda DUP1
0xdb CALLDATALOAD
0xdc SWAP1
0xdd PUSH1 0x20
0xdf ADD
0xe0 SWAP1
0xe1 DUP1
0xe2 DUP1
0xe3 PUSH1 0x20
0xe5 MUL
0xe6 PUSH1 0x20
0xe8 ADD
0xe9 PUSH1 0x40
0xeb MLOAD
0xec SWAP1
0xed DUP2
0xee ADD
0xef PUSH1 0x40
0xf1 MSTORE
0xf2 DUP1
0xf3 SWAP4
0xf4 SWAP3
0xf5 SWAP2
0xf6 SWAP1
0xf7 DUP2
0xf8 DUP2
0xf9 MSTORE
0xfa PUSH1 0x20
0xfc ADD
0xfd DUP4
0xfe DUP4
0xff PUSH1 0x20
0x101 MUL
0x102 DUP1
0x103 DUP3
0x104 DUP5
0x105 CALLDATACOPY
0x106 DUP3
0x107 ADD
0x108 SWAP2
0x109 POP
0x10a POP
0x10b POP
0x10c POP
0x10d POP
0x10e POP
0x10f SWAP2
0x110 SWAP1
0x111 DUP1
0x112 CALLDATALOAD
0x113 SWAP1
0x114 PUSH1 0x20
0x116 ADD
0x117 SWAP1
0x118 DUP3
0x119 ADD
0x11a DUP1
0x11b CALLDATALOAD
0x11c SWAP1
0x11d PUSH1 0x20
0x11f ADD
0x120 SWAP1
0x121 DUP1
0x122 DUP1
0x123 PUSH1 0x20
0x125 MUL
0x126 PUSH1 0x20
0x128 ADD
0x129 PUSH1 0x40
0x12b MLOAD
0x12c SWAP1
0x12d DUP2
0x12e ADD
0x12f PUSH1 0x40
0x131 MSTORE
0x132 DUP1
0x133 SWAP4
0x134 SWAP3
0x135 SWAP2
0x136 SWAP1
0x137 DUP2
0x138 DUP2
0x139 MSTORE
0x13a PUSH1 0x20
0x13c ADD
0x13d DUP4
0x13e DUP4
0x13f PUSH1 0x20
0x141 MUL
0x142 DUP1
0x143 DUP3
0x144 DUP5
0x145 CALLDATACOPY
0x146 DUP3
0x147 ADD
0x148 SWAP2
0x149 POP
0x14a POP
0x14b POP
0x14c POP
0x14d POP
0x14e POP
0x14f SWAP2
0x150 SWAP1
0x151 POP
0x152 POP
0x153 PUSH2 0x1c9
0x156 JUMP
---
0xab: JUMPDEST 
0xac: V36 = 0x157
0xaf: V37 = 0x4
0xb3: V38 = CALLDATALOAD 0x4
0xb4: V39 = 0xffffffffffffffffffffffffffffffffffffffff
0xc9: V40 = AND 0xffffffffffffffffffffffffffffffffffffffff V38
0xcb: V41 = 0x20
0xcd: V42 = ADD 0x20 0x4
0xd2: V43 = CALLDATALOAD 0x24
0xd4: V44 = 0x20
0xd6: V45 = ADD 0x20 0x24
0xd9: V46 = ADD 0x4 V43
0xdb: V47 = CALLDATALOAD V46
0xdd: V48 = 0x20
0xdf: V49 = ADD 0x20 V46
0xe3: V50 = 0x20
0xe5: V51 = MUL 0x20 V47
0xe6: V52 = 0x20
0xe8: V53 = ADD 0x20 V51
0xe9: V54 = 0x40
0xeb: V55 = M[0x40]
0xee: V56 = ADD V55 V53
0xef: V57 = 0x40
0xf1: M[0x40] = V56
0xf9: M[V55] = V47
0xfa: V58 = 0x20
0xfc: V59 = ADD 0x20 V55
0xff: V60 = 0x20
0x101: V61 = MUL 0x20 V47
0x105: CALLDATACOPY V59 V49 V61
0x107: V62 = ADD V59 V61
0x112: V63 = CALLDATALOAD 0x44
0x114: V64 = 0x20
0x116: V65 = ADD 0x20 0x44
0x119: V66 = ADD 0x4 V63
0x11b: V67 = CALLDATALOAD V66
0x11d: V68 = 0x20
0x11f: V69 = ADD 0x20 V66
0x123: V70 = 0x20
0x125: V71 = MUL 0x20 V67
0x126: V72 = 0x20
0x128: V73 = ADD 0x20 V71
0x129: V74 = 0x40
0x12b: V75 = M[0x40]
0x12e: V76 = ADD V75 V73
0x12f: V77 = 0x40
0x131: M[0x40] = V76
0x139: M[V75] = V67
0x13a: V78 = 0x20
0x13c: V79 = ADD 0x20 V75
0x13f: V80 = 0x20
0x141: V81 = MUL 0x20 V67
0x145: CALLDATACOPY V79 V69 V81
0x147: V82 = ADD V79 V81
0x153: V83 = 0x1c9
0x156: JUMP 0x1c9
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x157, V40, V55, V75]
Exit stack: [V7, 0x157, V40, V55, V75]

================================

Block 0x157
[0x157:0x16c]
---
Predecessors: [0x326]
Successors: []
---
0x157 JUMPDEST
0x158 PUSH1 0x40
0x15a MLOAD
0x15b DUP1
0x15c DUP3
0x15d DUP2
0x15e MSTORE
0x15f PUSH1 0x20
0x161 ADD
0x162 SWAP2
0x163 POP
0x164 POP
0x165 PUSH1 0x40
0x167 MLOAD
0x168 DUP1
0x169 SWAP2
0x16a SUB
0x16b SWAP1
0x16c RETURN
---
0x157: JUMPDEST 
0x158: V84 = 0x40
0x15a: V85 = M[0x40]
0x15e: M[V85] = S0
0x15f: V86 = 0x20
0x161: V87 = ADD 0x20 V85
0x165: V88 = 0x40
0x167: V89 = M[0x40]
0x16a: V90 = SUB V87 V89
0x16c: RETURN V89 V90
---
Entry stack: [V7, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Block 0x16d
[0x16d:0x173]
---
Predecessors: [0x44]
Successors: [0x174, 0x175]
---
0x16d JUMPDEST
0x16e CALLVALUE
0x16f ISZERO
0x170 PUSH2 0x175
0x173 JUMPI
---
0x16d: JUMPDEST 
0x16e: V91 = CALLVALUE
0x16f: V92 = ISZERO V91
0x170: V93 = 0x175
0x173: JUMPI 0x175 V92
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x174
[0x174:0x174]
---
Predecessors: [0x16d]
Successors: []
---
0x174 INVALID
---
0x174: INVALID 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x175
[0x175:0x1a0]
---
Predecessors: [0x16d]
Successors: [0x32e]
---
0x175 JUMPDEST
0x176 PUSH2 0x1a1
0x179 PUSH1 0x4
0x17b DUP1
0x17c DUP1
0x17d CALLDATALOAD
0x17e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x193 AND
0x194 SWAP1
0x195 PUSH1 0x20
0x197 ADD
0x198 SWAP1
0x199 SWAP2
0x19a SWAP1
0x19b POP
0x19c POP
0x19d PUSH2 0x32e
0x1a0 JUMP
---
0x175: JUMPDEST 
0x176: V94 = 0x1a1
0x179: V95 = 0x4
0x17d: V96 = CALLDATALOAD 0x4
0x17e: V97 = 0xffffffffffffffffffffffffffffffffffffffff
0x193: V98 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x195: V99 = 0x20
0x197: V100 = ADD 0x20 0x4
0x19d: V101 = 0x32e
0x1a0: JUMP 0x32e
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x1a1, V98]
Exit stack: [V7, 0x1a1, V98]

================================

Block 0x1a1
[0x1a1:0x1a2]
---
Predecessors: [0x405]
Successors: []
---
0x1a1 JUMPDEST
0x1a2 STOP
---
0x1a1: JUMPDEST 
0x1a2: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x1a3
[0x1a3:0x1c8]
---
Predecessors: [0x59]
Successors: [0x61]
---
0x1a3 JUMPDEST
0x1a4 PUSH1 0x0
0x1a6 PUSH1 0x0
0x1a8 SWAP1
0x1a9 SLOAD
0x1aa SWAP1
0x1ab PUSH2 0x100
0x1ae EXP
0x1af SWAP1
0x1b0 DIV
0x1b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c6 AND
0x1c7 DUP2
0x1c8 JUMP
---
0x1a3: JUMPDEST 
0x1a4: V102 = 0x0
0x1a6: V103 = 0x0
0x1a9: V104 = S[0x0]
0x1ab: V105 = 0x100
0x1ae: V106 = EXP 0x100 0x0
0x1b0: V107 = DIV V104 0x1
0x1b1: V108 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c6: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff V107
0x1c8: JUMP 0x61
---
Entry stack: [V7, 0x61]
Stack pops: 1
Stack additions: [S0, V109]
Exit stack: [V7, 0x61, V109]

================================

Block 0x1c9
[0x1c9:0x224]
---
Predecessors: [0xab, 0x580]
Successors: [0x225, 0x22a]
---
0x1c9 JUMPDEST
0x1ca PUSH1 0x0
0x1cc PUSH1 0x0
0x1ce PUSH1 0x0
0x1d0 PUSH1 0x0
0x1d2 SWAP1
0x1d3 SLOAD
0x1d4 SWAP1
0x1d5 PUSH2 0x100
0x1d8 EXP
0x1d9 SWAP1
0x1da DIV
0x1db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f0 AND
0x1f1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x206 AND
0x207 CALLER
0x208 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21d AND
0x21e EQ
0x21f ISZERO
0x220 ISZERO
0x221 PUSH2 0x22a
0x224 JUMPI
---
0x1c9: JUMPDEST 
0x1ca: V110 = 0x0
0x1cc: V111 = 0x0
0x1ce: V112 = 0x0
0x1d0: V113 = 0x0
0x1d3: V114 = S[0x0]
0x1d5: V115 = 0x100
0x1d8: V116 = EXP 0x100 0x0
0x1da: V117 = DIV V114 0x1
0x1db: V118 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f0: V119 = AND 0xffffffffffffffffffffffffffffffffffffffff V117
0x1f1: V120 = 0xffffffffffffffffffffffffffffffffffffffff
0x206: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x207: V122 = CALLER
0x208: V123 = 0xffffffffffffffffffffffffffffffffffffffff
0x21d: V124 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x21e: V125 = EQ V124 V121
0x21f: V126 = ISZERO V125
0x220: V127 = ISZERO V126
0x221: V128 = 0x22a
0x224: JUMPI 0x22a V127
---
Entry stack: [V7, 0x157, V40, V55, V75]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V7, 0x157, V40, V55, V75, 0x0, 0x0]

================================

Block 0x225
[0x225:0x229]
---
Predecessors: [0x1c9]
Successors: []
---
0x225 PUSH1 0x0
0x227 PUSH1 0x0
0x229 REVERT
---
0x225: V129 = 0x0
0x227: V130 = 0x0
0x229: REVERT 0x0 0x0
---
Entry stack: [V7, 0x157, V40, V55, V75, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x157, V40, V55, V75, 0x0, 0x0]

================================

Block 0x22a
[0x22a:0x22e]
---
Predecessors: [0x1c9]
Successors: [0x22f]
---
0x22a JUMPDEST
0x22b PUSH1 0x0
0x22d SWAP1
0x22e POP
---
0x22a: JUMPDEST 
0x22b: V131 = 0x0
---
Entry stack: [V7, 0x157, V40, V55, V75, 0x0, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V7, 0x157, V40, V55, V75, 0x0, 0x0]

================================

Block 0x22f
[0x22f:0x238]
---
Predecessors: [0x22a, 0x313]
Successors: [0x239, 0x321]
---
0x22f JUMPDEST
0x230 DUP4
0x231 MLOAD
0x232 DUP2
0x233 LT
0x234 ISZERO
0x235 PUSH2 0x321
0x238 JUMPI
---
0x22f: JUMPDEST 
0x231: V132 = M[V55]
0x233: V133 = LT S0 V132
0x234: V134 = ISZERO V133
0x235: V135 = 0x321
0x238: JUMPI 0x321 V134
---
Entry stack: [V7, 0x157, V40, V55, V75, 0x0, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V7, 0x157, V40, V55, V75, 0x0, S0]

================================

Block 0x239
[0x239:0x260]
---
Predecessors: [0x22f]
Successors: [0x261, 0x262]
---
0x239 DUP5
0x23a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24f AND
0x250 PUSH4 0xa9059cbb
0x255 DUP6
0x256 DUP4
0x257 DUP2
0x258 MLOAD
0x259 DUP2
0x25a LT
0x25b ISZERO
0x25c ISZERO
0x25d PUSH2 0x262
0x260 JUMPI
---
0x23a: V136 = 0xffffffffffffffffffffffffffffffffffffffff
0x24f: V137 = AND 0xffffffffffffffffffffffffffffffffffffffff V40
0x250: V138 = 0xa9059cbb
0x258: V139 = M[V55]
0x25a: V140 = LT S0 V139
0x25b: V141 = ISZERO V140
0x25c: V142 = ISZERO V141
0x25d: V143 = 0x262
0x260: JUMPI 0x262 V142
---
Entry stack: [V7, 0x157, V40, V55, V75, 0x0, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V137, 0xa9059cbb, S3, S0]
Exit stack: [V7, 0x157, V40, V55, V75, 0x0, S0, V137, 0xa9059cbb, V55, S0]

================================

Block 0x261
[0x261:0x261]
---
Predecessors: [0x239]
Successors: []
---
0x261 INVALID
---
0x261: INVALID 
---
Entry stack: [V7, 0x157, V40, V55, V75, 0x0, S4, V137, 0xa9059cbb, V55, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x157, V40, V55, V75, 0x0, S4, V137, 0xa9059cbb, V55, S0]

================================

Block 0x262
[0x262:0x278]
---
Predecessors: [0x239]
Successors: [0x279, 0x27a]
---
0x262 JUMPDEST
0x263 SWAP1
0x264 PUSH1 0x20
0x266 ADD
0x267 SWAP1
0x268 PUSH1 0x20
0x26a MUL
0x26b ADD
0x26c MLOAD
0x26d DUP6
0x26e DUP5
0x26f DUP2
0x270 MLOAD
0x271 DUP2
0x272 LT
0x273 ISZERO
0x274 ISZERO
0x275 PUSH2 0x27a
0x278 JUMPI
---
0x262: JUMPDEST 
0x264: V144 = 0x20
0x266: V145 = ADD 0x20 V55
0x268: V146 = 0x20
0x26a: V147 = MUL 0x20 S0
0x26b: V148 = ADD V147 V145
0x26c: V149 = M[V148]
0x270: V150 = M[V75]
0x272: V151 = LT S4 V150
0x273: V152 = ISZERO V151
0x274: V153 = ISZERO V152
0x275: V154 = 0x27a
0x278: JUMPI 0x27a V153
---
Entry stack: [V7, 0x157, V40, V55, V75, 0x0, S4, V137, 0xa9059cbb, V55, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, V149, S6, S4]
Exit stack: [V7, 0x157, V40, V55, V75, 0x0, S4, V137, 0xa9059cbb, V149, V75, S4]

================================

Block 0x279
[0x279:0x279]
---
Predecessors: [0x262]
Successors: []
---
0x279 INVALID
---
0x279: INVALID 
---
Entry stack: [V7, 0x157, V40, V55, V75, 0x0, S5, V137, 0xa9059cbb, V149, V75, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x157, V40, V55, V75, 0x0, S5, V137, 0xa9059cbb, V149, V75, S0]

================================

Block 0x27a
[0x27a:0x303]
---
Predecessors: [0x262]
Successors: [0x304, 0x305]
---
0x27a JUMPDEST
0x27b SWAP1
0x27c PUSH1 0x20
0x27e ADD
0x27f SWAP1
0x280 PUSH1 0x20
0x282 MUL
0x283 ADD
0x284 MLOAD
0x285 PUSH1 0x40
0x287 MLOAD
0x288 DUP4
0x289 PUSH4 0xffffffff
0x28e AND
0x28f PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2ad MUL
0x2ae DUP2
0x2af MSTORE
0x2b0 PUSH1 0x4
0x2b2 ADD
0x2b3 DUP1
0x2b4 DUP4
0x2b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ca AND
0x2cb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e0 AND
0x2e1 DUP2
0x2e2 MSTORE
0x2e3 PUSH1 0x20
0x2e5 ADD
0x2e6 DUP3
0x2e7 DUP2
0x2e8 MSTORE
0x2e9 PUSH1 0x20
0x2eb ADD
0x2ec SWAP3
0x2ed POP
0x2ee POP
0x2ef POP
0x2f0 PUSH1 0x0
0x2f2 PUSH1 0x40
0x2f4 MLOAD
0x2f5 DUP1
0x2f6 DUP4
0x2f7 SUB
0x2f8 DUP2
0x2f9 PUSH1 0x0
0x2fb DUP8
0x2fc DUP1
0x2fd EXTCODESIZE
0x2fe ISZERO
0x2ff ISZERO
0x300 PUSH2 0x305
0x303 JUMPI
---
0x27a: JUMPDEST 
0x27c: V155 = 0x20
0x27e: V156 = ADD 0x20 V75
0x280: V157 = 0x20
0x282: V158 = MUL 0x20 S0
0x283: V159 = ADD V158 V156
0x284: V160 = M[V159]
0x285: V161 = 0x40
0x287: V162 = M[0x40]
0x289: V163 = 0xffffffff
0x28e: V164 = AND 0xffffffff 0xa9059cbb
0x28f: V165 = 0x100000000000000000000000000000000000000000000000000000000
0x2ad: V166 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x2af: M[V162] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x2b0: V167 = 0x4
0x2b2: V168 = ADD 0x4 V162
0x2b5: V169 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ca: V170 = AND 0xffffffffffffffffffffffffffffffffffffffff V149
0x2cb: V171 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e0: V172 = AND 0xffffffffffffffffffffffffffffffffffffffff V170
0x2e2: M[V168] = V172
0x2e3: V173 = 0x20
0x2e5: V174 = ADD 0x20 V168
0x2e8: M[V174] = V160
0x2e9: V175 = 0x20
0x2eb: V176 = ADD 0x20 V174
0x2f0: V177 = 0x0
0x2f2: V178 = 0x40
0x2f4: V179 = M[0x40]
0x2f7: V180 = SUB V176 V179
0x2f9: V181 = 0x0
0x2fd: V182 = EXTCODESIZE V137
0x2fe: V183 = ISZERO V182
0x2ff: V184 = ISZERO V183
0x300: V185 = 0x305
0x303: JUMPI 0x305 V184
---
Entry stack: [V7, 0x157, V40, V55, V75, 0x0, S5, V137, 0xa9059cbb, V149, V75, S0]
Stack pops: 5
Stack additions: [S4, S3, V176, 0x0, V179, V180, V179, 0x0, S4]
Exit stack: [V7, 0x157, V40, V55, V75, 0x0, S5, V137, 0xa9059cbb, V176, 0x0, V179, V180, V179, 0x0, V137]

================================

Block 0x304
[0x304:0x304]
---
Predecessors: [0x27a]
Successors: []
---
0x304 INVALID
---
0x304: INVALID 
---
Entry stack: [V7, 0x157, V40, V55, V75, 0x0, S9, V137, 0xa9059cbb, V176, 0x0, V179, V180, V179, 0x0, V137]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x157, V40, V55, V75, 0x0, S9, V137, 0xa9059cbb, V176, 0x0, V179, V180, V179, 0x0, V137]

================================

Block 0x305
[0x305:0x311]
---
Predecessors: [0x27a]
Successors: [0x312, 0x313]
---
0x305 JUMPDEST
0x306 PUSH2 0x2c6
0x309 GAS
0x30a SUB
0x30b CALL
0x30c ISZERO
0x30d ISZERO
0x30e PUSH2 0x313
0x311 JUMPI
---
0x305: JUMPDEST 
0x306: V186 = 0x2c6
0x309: V187 = GAS
0x30a: V188 = SUB V187 0x2c6
0x30b: V189 = CALL V188 V137 0x0 V179 V180 V179 0x0
0x30c: V190 = ISZERO V189
0x30d: V191 = ISZERO V190
0x30e: V192 = 0x313
0x311: JUMPI 0x313 V191
---
Entry stack: [V7, 0x157, V40, V55, V75, 0x0, S9, V137, 0xa9059cbb, V176, 0x0, V179, V180, V179, 0x0, V137]
Stack pops: 6
Stack additions: []
Exit stack: [V7, 0x157, V40, V55, V75, 0x0, S9, V137, 0xa9059cbb, V176]

================================

Block 0x312
[0x312:0x312]
---
Predecessors: [0x305]
Successors: []
---
0x312 INVALID
---
0x312: INVALID 
---
Entry stack: [V7, 0x157, V40, V55, V75, 0x0, S3, V137, 0xa9059cbb, V176]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x157, V40, V55, V75, 0x0, S3, V137, 0xa9059cbb, V176]

================================

Block 0x313
[0x313:0x320]
---
Predecessors: [0x305]
Successors: [0x22f]
---
0x313 JUMPDEST
0x314 POP
0x315 POP
0x316 POP
0x317 PUSH1 0x1
0x319 DUP2
0x31a ADD
0x31b SWAP1
0x31c POP
0x31d PUSH2 0x22f
0x320 JUMP
---
0x313: JUMPDEST 
0x317: V193 = 0x1
0x31a: V194 = ADD S3 0x1
0x31d: V195 = 0x22f
0x320: JUMP 0x22f
---
Entry stack: [V7, 0x157, V40, V55, V75, 0x0, S3, V137, 0xa9059cbb, V176]
Stack pops: 4
Stack additions: [V194]
Exit stack: [V7, 0x157, V40, V55, V75, 0x0, V194]

================================

Block 0x321
[0x321:0x324]
---
Predecessors: [0x22f]
Successors: [0x325]
---
0x321 JUMPDEST
0x322 DUP1
0x323 SWAP2
0x324 POP
---
0x321: JUMPDEST 
---
Entry stack: [V7, 0x157, V40, V55, V75, 0x0, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V7, 0x157, V40, V55, V75, S0, S0]

================================

Block 0x325
[0x325:0x325]
---
Predecessors: [0x321]
Successors: [0x326]
---
0x325 JUMPDEST
---
0x325: JUMPDEST 
---
Entry stack: [V7, 0x157, V40, V55, V75, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x157, V40, V55, V75, S1, S0]

================================

Block 0x326
[0x326:0x32d]
---
Predecessors: [0x325]
Successors: [0x157]
---
0x326 JUMPDEST
0x327 POP
0x328 SWAP4
0x329 SWAP3
0x32a POP
0x32b POP
0x32c POP
0x32d JUMP
---
0x326: JUMPDEST 
0x32d: JUMP 0x157
---
Entry stack: [V7, 0x157, V40, V55, V75, S1, S0]
Stack pops: 6
Stack additions: [S1]
Exit stack: [V7, S1]

================================

Block 0x32e
[0x32e:0x385]
---
Predecessors: [0x175]
Successors: [0x386, 0x38b]
---
0x32e JUMPDEST
0x32f PUSH1 0x0
0x331 PUSH1 0x0
0x333 SWAP1
0x334 SLOAD
0x335 SWAP1
0x336 PUSH2 0x100
0x339 EXP
0x33a SWAP1
0x33b DIV
0x33c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x351 AND
0x352 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x367 AND
0x368 CALLER
0x369 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x37e AND
0x37f EQ
0x380 ISZERO
0x381 ISZERO
0x382 PUSH2 0x38b
0x385 JUMPI
---
0x32e: JUMPDEST 
0x32f: V196 = 0x0
0x331: V197 = 0x0
0x334: V198 = S[0x0]
0x336: V199 = 0x100
0x339: V200 = EXP 0x100 0x0
0x33b: V201 = DIV V198 0x1
0x33c: V202 = 0xffffffffffffffffffffffffffffffffffffffff
0x351: V203 = AND 0xffffffffffffffffffffffffffffffffffffffff V201
0x352: V204 = 0xffffffffffffffffffffffffffffffffffffffff
0x367: V205 = AND 0xffffffffffffffffffffffffffffffffffffffff V203
0x368: V206 = CALLER
0x369: V207 = 0xffffffffffffffffffffffffffffffffffffffff
0x37e: V208 = AND 0xffffffffffffffffffffffffffffffffffffffff V206
0x37f: V209 = EQ V208 V205
0x380: V210 = ISZERO V209
0x381: V211 = ISZERO V210
0x382: V212 = 0x38b
0x385: JUMPI 0x38b V211
---
Entry stack: [V7, 0x1a1, V98]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x1a1, V98]

================================

Block 0x386
[0x386:0x38a]
---
Predecessors: [0x32e]
Successors: []
---
0x386 PUSH1 0x0
0x388 PUSH1 0x0
0x38a REVERT
---
0x386: V213 = 0x0
0x388: V214 = 0x0
0x38a: REVERT 0x0 0x0
---
Entry stack: [V7, 0x1a1, V98]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x1a1, V98]

================================

Block 0x38b
[0x38b:0x3c1]
---
Predecessors: [0x32e]
Successors: [0x3c2, 0x403]
---
0x38b JUMPDEST
0x38c PUSH1 0x0
0x38e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a3 AND
0x3a4 DUP2
0x3a5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ba AND
0x3bb EQ
0x3bc ISZERO
0x3bd ISZERO
0x3be PUSH2 0x403
0x3c1 JUMPI
---
0x38b: JUMPDEST 
0x38c: V215 = 0x0
0x38e: V216 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a3: V217 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x3a5: V218 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ba: V219 = AND 0xffffffffffffffffffffffffffffffffffffffff V98
0x3bb: V220 = EQ V219 0x0
0x3bc: V221 = ISZERO V220
0x3bd: V222 = ISZERO V221
0x3be: V223 = 0x403
0x3c1: JUMPI 0x403 V222
---
Entry stack: [V7, 0x1a1, V98]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7, 0x1a1, V98]

================================

Block 0x3c2
[0x3c2:0x402]
---
Predecessors: [0x38b]
Successors: [0x403]
---
0x3c2 DUP1
0x3c3 PUSH1 0x0
0x3c5 PUSH1 0x0
0x3c7 PUSH2 0x100
0x3ca EXP
0x3cb DUP2
0x3cc SLOAD
0x3cd DUP2
0x3ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e3 MUL
0x3e4 NOT
0x3e5 AND
0x3e6 SWAP1
0x3e7 DUP4
0x3e8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3fd AND
0x3fe MUL
0x3ff OR
0x400 SWAP1
0x401 SSTORE
0x402 POP
---
0x3c3: V224 = 0x0
0x3c5: V225 = 0x0
0x3c7: V226 = 0x100
0x3ca: V227 = EXP 0x100 0x0
0x3cc: V228 = S[0x0]
0x3ce: V229 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e3: V230 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x3e4: V231 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3e5: V232 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V228
0x3e8: V233 = 0xffffffffffffffffffffffffffffffffffffffff
0x3fd: V234 = AND 0xffffffffffffffffffffffffffffffffffffffff V98
0x3fe: V235 = MUL V234 0x1
0x3ff: V236 = OR V235 V232
0x401: S[0x0] = V236
---
Entry stack: [V7, 0x1a1, V98]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7, 0x1a1, V98]

================================

Block 0x403
[0x403:0x403]
---
Predecessors: [0x38b, 0x3c2]
Successors: [0x404]
---
0x403 JUMPDEST
---
0x403: JUMPDEST 
---
Entry stack: [V7, 0x1a1, V98]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x1a1, V98]

================================

Block 0x404
[0x404:0x404]
---
Predecessors: [0x403]
Successors: [0x405]
---
0x404 JUMPDEST
---
0x404: JUMPDEST 
---
Entry stack: [V7, 0x1a1, V98]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x1a1, V98]

================================

Block 0x405
[0x405:0x407]
---
Predecessors: [0x404]
Successors: [0x1a1]
---
0x405 JUMPDEST
0x406 POP
0x407 JUMP
---
0x405: JUMPDEST 
0x407: JUMP 0x1a1
---
Entry stack: [V7, 0x1a1, V98]
Stack pops: 2
Stack additions: []
Exit stack: [V7]

================================

Block 0x408
[0x408:0x46c]
---
Predecessors: []
Successors: [0x46d]
---
0x408 STOP
0x409 LOG1
0x40a PUSH6 0x627a7a723058
0x411 SHA3
0x412 MISSING 0x4c
0x413 SIGNEXTEND
0x414 MISSING 0x2d
0x415 PUSH24 0x65a97895ffeeb787c725eea7b32bf57247cd1d0a535fb2f7
0x42e SHA3
0x42f PUSH23 0x7de1002960606040526000357c01000000000000000000
0x447 STOP
0x448 STOP
0x449 STOP
0x44a STOP
0x44b STOP
0x44c STOP
0x44d STOP
0x44e STOP
0x44f STOP
0x450 STOP
0x451 STOP
0x452 STOP
0x453 STOP
0x454 STOP
0x455 STOP
0x456 STOP
0x457 STOP
0x458 STOP
0x459 STOP
0x45a SWAP1
0x45b DIV
0x45c PUSH4 0xffffffff
0x461 AND
0x462 DUP1
0x463 PUSH4 0x8da5cb5b
0x468 EQ
0x469 PUSH2 0x46
0x46c JUMPI
---
0x408: STOP 
0x409: LOG S0 S1 S2
0x40a: V237 = 0x627a7a723058
0x411: V238 = SHA3 0x627a7a723058 S3
0x412: MISSING 0x4c
0x413: V239 = SIGNEXTEND S0 S1
0x414: MISSING 0x2d
0x415: V240 = 0x65a97895ffeeb787c725eea7b32bf57247cd1d0a535fb2f7
0x42e: V241 = SHA3 0x65a97895ffeeb787c725eea7b32bf57247cd1d0a535fb2f7 S0
0x42f: V242 = 0x7de1002960606040526000357c01000000000000000000
0x447: STOP 
0x448: STOP 
0x449: STOP 
0x44a: STOP 
0x44b: STOP 
0x44c: STOP 
0x44d: STOP 
0x44e: STOP 
0x44f: STOP 
0x450: STOP 
0x451: STOP 
0x452: STOP 
0x453: STOP 
0x454: STOP 
0x455: STOP 
0x456: STOP 
0x457: STOP 
0x458: STOP 
0x459: STOP 
0x45b: V243 = DIV S1 S0
0x45c: V244 = 0xffffffff
0x461: V245 = AND 0xffffffff V243
0x463: V246 = 0x8da5cb5b
0x468: V247 = EQ 0x8da5cb5b V245
0x469: V248 = 0x46
0x46c: THROWI V247
---
Entry stack: []
Stack pops: 0
Stack additions: [V238, V239, 0x7de1002960606040526000357c01000000000000000000, V241, V245]
Exit stack: []

================================

Block 0x46d
[0x46d:0x477]
---
Predecessors: [0x408]
Successors: [0x478]
---
0x46d DUP1
0x46e PUSH4 0xf2fde38b
0x473 EQ
0x474 PUSH2 0x98
0x477 JUMPI
---
0x46e: V249 = 0xf2fde38b
0x473: V250 = EQ 0xf2fde38b V245
0x474: V251 = 0x98
0x477: THROWI V250
---
Entry stack: [V245]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V245]

================================

Block 0x478
[0x478:0x480]
---
Predecessors: [0x46d]
Successors: [0x481]
---
0x478 JUMPDEST
0x479 INVALID
0x47a JUMPDEST
0x47b CALLVALUE
0x47c ISZERO
0x47d PUSH2 0x4e
0x480 JUMPI
---
0x478: JUMPDEST 
0x479: INVALID 
0x47a: JUMPDEST 
0x47b: V252 = CALLVALUE
0x47c: V253 = ISZERO V252
0x47d: V254 = 0x4e
0x480: THROWI V253
---
Entry stack: [V245]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x481
[0x481:0x4d2]
---
Predecessors: [0x478]
Successors: [0x4d3]
---
0x481 INVALID
0x482 JUMPDEST
0x483 PUSH2 0x56
0x486 PUSH2 0xce
0x489 JUMP
0x48a JUMPDEST
0x48b PUSH1 0x40
0x48d MLOAD
0x48e DUP1
0x48f DUP3
0x490 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4a5 AND
0x4a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4bb AND
0x4bc DUP2
0x4bd MSTORE
0x4be PUSH1 0x20
0x4c0 ADD
0x4c1 SWAP2
0x4c2 POP
0x4c3 POP
0x4c4 PUSH1 0x40
0x4c6 MLOAD
0x4c7 DUP1
0x4c8 SWAP2
0x4c9 SUB
0x4ca SWAP1
0x4cb RETURN
0x4cc JUMPDEST
0x4cd CALLVALUE
0x4ce ISZERO
0x4cf PUSH2 0xa0
0x4d2 JUMPI
---
0x481: INVALID 
0x482: JUMPDEST 
0x483: V255 = 0x56
0x486: V256 = 0xce
0x489: THROW 
0x48a: JUMPDEST 
0x48b: V257 = 0x40
0x48d: V258 = M[0x40]
0x490: V259 = 0xffffffffffffffffffffffffffffffffffffffff
0x4a5: V260 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x4a6: V261 = 0xffffffffffffffffffffffffffffffffffffffff
0x4bb: V262 = AND 0xffffffffffffffffffffffffffffffffffffffff V260
0x4bd: M[V258] = V262
0x4be: V263 = 0x20
0x4c0: V264 = ADD 0x20 V258
0x4c4: V265 = 0x40
0x4c6: V266 = M[0x40]
0x4c9: V267 = SUB V264 V266
0x4cb: RETURN V266 V267
0x4cc: JUMPDEST 
0x4cd: V268 = CALLVALUE
0x4ce: V269 = ISZERO V268
0x4cf: V270 = 0xa0
0x4d2: THROWI V269
---
Entry stack: []
Stack pops: 0
Stack additions: [0x56]
Exit stack: []

================================

Block 0x4d3
[0x4d3:0x57f]
---
Predecessors: [0x481]
Successors: [0x580]
---
0x4d3 INVALID
0x4d4 JUMPDEST
0x4d5 PUSH2 0xcc
0x4d8 PUSH1 0x4
0x4da DUP1
0x4db DUP1
0x4dc CALLDATALOAD
0x4dd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4f2 AND
0x4f3 SWAP1
0x4f4 PUSH1 0x20
0x4f6 ADD
0x4f7 SWAP1
0x4f8 SWAP2
0x4f9 SWAP1
0x4fa POP
0x4fb POP
0x4fc PUSH2 0xf4
0x4ff JUMP
0x500 JUMPDEST
0x501 STOP
0x502 JUMPDEST
0x503 PUSH1 0x0
0x505 PUSH1 0x0
0x507 SWAP1
0x508 SLOAD
0x509 SWAP1
0x50a PUSH2 0x100
0x50d EXP
0x50e SWAP1
0x50f DIV
0x510 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x525 AND
0x526 DUP2
0x527 JUMP
0x528 JUMPDEST
0x529 PUSH1 0x0
0x52b PUSH1 0x0
0x52d SWAP1
0x52e SLOAD
0x52f SWAP1
0x530 PUSH2 0x100
0x533 EXP
0x534 SWAP1
0x535 DIV
0x536 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x54b AND
0x54c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x561 AND
0x562 CALLER
0x563 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x578 AND
0x579 EQ
0x57a ISZERO
0x57b ISZERO
0x57c PUSH2 0x151
0x57f JUMPI
---
0x4d3: INVALID 
0x4d4: JUMPDEST 
0x4d5: V271 = 0xcc
0x4d8: V272 = 0x4
0x4dc: V273 = CALLDATALOAD 0x4
0x4dd: V274 = 0xffffffffffffffffffffffffffffffffffffffff
0x4f2: V275 = AND 0xffffffffffffffffffffffffffffffffffffffff V273
0x4f4: V276 = 0x20
0x4f6: V277 = ADD 0x20 0x4
0x4fc: V278 = 0xf4
0x4ff: THROW 
0x500: JUMPDEST 
0x501: STOP 
0x502: JUMPDEST 
0x503: V279 = 0x0
0x505: V280 = 0x0
0x508: V281 = S[0x0]
0x50a: V282 = 0x100
0x50d: V283 = EXP 0x100 0x0
0x50f: V284 = DIV V281 0x1
0x510: V285 = 0xffffffffffffffffffffffffffffffffffffffff
0x525: V286 = AND 0xffffffffffffffffffffffffffffffffffffffff V284
0x527: JUMP S0
0x528: JUMPDEST 
0x529: V287 = 0x0
0x52b: V288 = 0x0
0x52e: V289 = S[0x0]
0x530: V290 = 0x100
0x533: V291 = EXP 0x100 0x0
0x535: V292 = DIV V289 0x1
0x536: V293 = 0xffffffffffffffffffffffffffffffffffffffff
0x54b: V294 = AND 0xffffffffffffffffffffffffffffffffffffffff V292
0x54c: V295 = 0xffffffffffffffffffffffffffffffffffffffff
0x561: V296 = AND 0xffffffffffffffffffffffffffffffffffffffff V294
0x562: V297 = CALLER
0x563: V298 = 0xffffffffffffffffffffffffffffffffffffffff
0x578: V299 = AND 0xffffffffffffffffffffffffffffffffffffffff V297
0x579: V300 = EQ V299 V296
0x57a: V301 = ISZERO V300
0x57b: V302 = ISZERO V301
0x57c: V303 = 0x151
0x57f: THROWI V302
---
Entry stack: []
Stack pops: 0
Stack additions: [V275, 0xcc, V286, S0]
Exit stack: []

================================

Block 0x580
[0x580:0x5bb]
---
Predecessors: [0x4d3]
Successors: [0x1c9, 0x5bc]
---
0x580 PUSH1 0x0
0x582 PUSH1 0x0
0x584 REVERT
0x585 JUMPDEST
0x586 PUSH1 0x0
0x588 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x59d AND
0x59e DUP2
0x59f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5b4 AND
0x5b5 EQ
0x5b6 ISZERO
0x5b7 ISZERO
0x5b8 PUSH2 0x1c9
0x5bb JUMPI
---
0x580: V304 = 0x0
0x582: V305 = 0x0
0x584: REVERT 0x0 0x0
0x585: JUMPDEST 
0x586: V306 = 0x0
0x588: V307 = 0xffffffffffffffffffffffffffffffffffffffff
0x59d: V308 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x59f: V309 = 0xffffffffffffffffffffffffffffffffffffffff
0x5b4: V310 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x5b5: V311 = EQ V310 0x0
0x5b6: V312 = ISZERO V311
0x5b7: V313 = ISZERO V312
0x5b8: V314 = 0x1c9
0x5bb: JUMPI 0x1c9 V313
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x5bc
[0x5bc:0x5fc]
---
Predecessors: [0x580]
Successors: [0x5fd]
---
0x5bc DUP1
0x5bd PUSH1 0x0
0x5bf PUSH1 0x0
0x5c1 PUSH2 0x100
0x5c4 EXP
0x5c5 DUP2
0x5c6 SLOAD
0x5c7 DUP2
0x5c8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5dd MUL
0x5de NOT
0x5df AND
0x5e0 SWAP1
0x5e1 DUP4
0x5e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5f7 AND
0x5f8 MUL
0x5f9 OR
0x5fa SWAP1
0x5fb SSTORE
0x5fc POP
---
0x5bd: V315 = 0x0
0x5bf: V316 = 0x0
0x5c1: V317 = 0x100
0x5c4: V318 = EXP 0x100 0x0
0x5c6: V319 = S[0x0]
0x5c8: V320 = 0xffffffffffffffffffffffffffffffffffffffff
0x5dd: V321 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x5de: V322 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x5df: V323 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V319
0x5e2: V324 = 0xffffffffffffffffffffffffffffffffffffffff
0x5f7: V325 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x5f8: V326 = MUL V325 0x1
0x5f9: V327 = OR V326 V323
0x5fb: S[0x0] = V327
---
Entry stack: [S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x5fd
[0x5fd:0x5fd]
---
Predecessors: [0x5bc]
Successors: [0x5fe]
---
0x5fd JUMPDEST
---
0x5fd: JUMPDEST 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0x5fe
[0x5fe:0x5fe]
---
Predecessors: [0x5fd]
Successors: [0x5ff]
---
0x5fe JUMPDEST
---
0x5fe: JUMPDEST 
---
Entry stack: [S0]
Stack pops: 0
Stack additions: []
Exit stack: [S0]

================================

Block 0x5ff
[0x5ff:0x644]
---
Predecessors: [0x5fe]
Successors: []
---
0x5ff JUMPDEST
0x600 POP
0x601 JUMP
0x602 STOP
0x603 LOG1
0x604 PUSH6 0x627a7a723058
0x60b SHA3
0x60c DUP15
0x60d MISSING 0xbf
0x60e DUP16
0x60f MISSING 0xfc
0x610 PUSH22 0x5a44cdbf3b1f6de2f10bf99f6d6612199c7abddadc3
0x627 MISSING 0xdb
0x628 PUSH28 0xc8843e0029
---
0x5ff: JUMPDEST 
0x601: JUMP S1
0x602: STOP 
0x603: LOG S0 S1 S2
0x604: V328 = 0x627a7a723058
0x60b: V329 = SHA3 0x627a7a723058 S3
0x60d: MISSING 0xbf
0x60f: MISSING 0xfc
0x610: V330 = 0x5a44cdbf3b1f6de2f10bf99f6d6612199c7abddadc3
0x627: MISSING 0xdb
0x628: V331 = 0xc8843e0029
---
Entry stack: [S0]
Stack pops: 8
Stack additions: [S17, V329, S4, S5, S6, S7, S8, S9, S15, S0, 0xc8843e0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x8da5cb5b
Entry block: 0x51
Exit block: 0x61
Body: 0x51, 0x58, 0x59, 0x61, 0x1a3

Function 1:
Public function signature: 0xad8733ca
Entry block: 0xa3
Exit block: 0x312
Body: 0xa3, 0xaa, 0xab, 0x157, 0x1c9, 0x225, 0x22a, 0x22f, 0x239, 0x261, 0x262, 0x279, 0x27a, 0x304, 0x305, 0x312, 0x313, 0x321, 0x325, 0x326

Function 2:
Public function signature: 0xf2fde38b
Entry block: 0x16d
Exit block: 0x1a1
Body: 0x16d, 0x174, 0x175, 0x1a1, 0x32e, 0x386, 0x38b, 0x3c2, 0x403, 0x404, 0x405

Function 3:
Public fallback function
Entry block: 0x4f
Exit block: 0x4f
Body: 0x4f

