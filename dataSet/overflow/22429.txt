Block 0x0
[0x0:0x8]
---
Predecessors: []
Successors: []
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 DUP1
0x8 REVERT
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x8: REVERT 0x0 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x9
[0x9:0x41]
---
Predecessors: []
Successors: [0x42]
---
0x9 STOP
0xa LOG1
0xb PUSH6 0x627a7a723058
0x12 SHA3
0x13 MISSING 0xbe
0x14 PUSH8 0xddad1b601ac15c38
0x1d SAR
0x1e SWAP1
0x1f ISZERO
0x20 MISSING 0xba
0x21 DUP3
0x22 SLOAD
0x23 PUSH29 0x40428612bc625f861dfb24e6bb817c00296060604052600436106100a4
0x41 JUMPI
---
0x9: STOP 
0xa: LOG S0 S1 S2
0xb: V3 = 0x627a7a723058
0x12: V4 = SHA3 0x627a7a723058 S3
0x13: MISSING 0xbe
0x14: V5 = 0xddad1b601ac15c38
0x1d: V6 = SAR 0xddad1b601ac15c38 S0
0x1f: V7 = ISZERO S1
0x20: MISSING 0xba
0x22: V8 = S[S2]
0x23: V9 = 0x40428612bc625f861dfb24e6bb817c00296060604052600436106100a4
0x41: THROWI V8
---
Entry stack: []
Stack pops: 0
Stack additions: [V4, V7, V6, S0, S1, S2]
Exit stack: []

================================

Block 0x42
[0x42:0x75]
---
Predecessors: [0x9]
Successors: [0x76]
---
0x42 PUSH1 0x0
0x44 CALLDATALOAD
0x45 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x63 SWAP1
0x64 DIV
0x65 PUSH4 0xffffffff
0x6a AND
0x6b DUP1
0x6c PUSH4 0x6fdde03
0x71 EQ
0x72 PUSH2 0xa9
0x75 JUMPI
---
0x42: V10 = 0x0
0x44: V11 = CALLDATALOAD 0x0
0x45: V12 = 0x100000000000000000000000000000000000000000000000000000000
0x64: V13 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x65: V14 = 0xffffffff
0x6a: V15 = AND 0xffffffff V13
0x6c: V16 = 0x6fdde03
0x71: V17 = EQ 0x6fdde03 V15
0x72: V18 = 0xa9
0x75: THROWI V17
---
Entry stack: [S2, S1, S0]
Stack pops: 0
Stack additions: [V15]
Exit stack: [S2, S1, S0, V15]

================================

Block 0x76
[0x76:0x80]
---
Predecessors: [0x42]
Successors: [0x81]
---
0x76 DUP1
0x77 PUSH4 0x95ea7b3
0x7c EQ
0x7d PUSH2 0x137
0x80 JUMPI
---
0x77: V19 = 0x95ea7b3
0x7c: V20 = EQ 0x95ea7b3 V15
0x7d: V21 = 0x137
0x80: THROWI V20
---
Entry stack: [S3, S2, S1, V15]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S3, S2, S1, V15]

================================

Block 0x81
[0x81:0x8b]
---
Predecessors: [0x76]
Successors: [0x8c]
---
0x81 DUP1
0x82 PUSH4 0x18160ddd
0x87 EQ
0x88 PUSH2 0x191
0x8b JUMPI
---
0x82: V22 = 0x18160ddd
0x87: V23 = EQ 0x18160ddd V15
0x88: V24 = 0x191
0x8b: THROWI V23
---
Entry stack: [S3, S2, S1, V15]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S3, S2, S1, V15]

================================

Block 0x8c
[0x8c:0x96]
---
Predecessors: [0x81]
Successors: [0x97]
---
0x8c DUP1
0x8d PUSH4 0x23b872dd
0x92 EQ
0x93 PUSH2 0x1ba
0x96 JUMPI
---
0x8d: V25 = 0x23b872dd
0x92: V26 = EQ 0x23b872dd V15
0x93: V27 = 0x1ba
0x96: THROWI V26
---
Entry stack: [S3, S2, S1, V15]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S3, S2, S1, V15]

================================

Block 0x97
[0x97:0xa1]
---
Predecessors: [0x8c]
Successors: [0xa2]
---
0x97 DUP1
0x98 PUSH4 0x313ce567
0x9d EQ
0x9e PUSH2 0x233
0xa1 JUMPI
---
0x98: V28 = 0x313ce567
0x9d: V29 = EQ 0x313ce567 V15
0x9e: V30 = 0x233
0xa1: THROWI V29
---
Entry stack: [S3, S2, S1, V15]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S3, S2, S1, V15]

================================

Block 0xa2
[0xa2:0xac]
---
Predecessors: [0x97]
Successors: [0xad]
---
0xa2 DUP1
0xa3 PUSH4 0x5a3b7e42
0xa8 EQ
0xa9 PUSH2 0x262
0xac JUMPI
---
0xa3: V31 = 0x5a3b7e42
0xa8: V32 = EQ 0x5a3b7e42 V15
0xa9: V33 = 0x262
0xac: THROWI V32
---
Entry stack: [S3, S2, S1, V15]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S3, S2, S1, V15]

================================

Block 0xad
[0xad:0xb7]
---
Predecessors: [0xa2]
Successors: [0xb8]
---
0xad DUP1
0xae PUSH4 0x70a08231
0xb3 EQ
0xb4 PUSH2 0x2f0
0xb7 JUMPI
---
0xae: V34 = 0x70a08231
0xb3: V35 = EQ 0x70a08231 V15
0xb4: V36 = 0x2f0
0xb7: THROWI V35
---
Entry stack: [S3, S2, S1, V15]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S3, S2, S1, V15]

================================

Block 0xb8
[0xb8:0xc2]
---
Predecessors: [0xad]
Successors: [0xc3]
---
0xb8 DUP1
0xb9 PUSH4 0x95d89b41
0xbe EQ
0xbf PUSH2 0x33d
0xc2 JUMPI
---
0xb9: V37 = 0x95d89b41
0xbe: V38 = EQ 0x95d89b41 V15
0xbf: V39 = 0x33d
0xc2: THROWI V38
---
Entry stack: [S3, S2, S1, V15]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S3, S2, S1, V15]

================================

Block 0xc3
[0xc3:0xcd]
---
Predecessors: [0xb8]
Successors: [0xce]
---
0xc3 DUP1
0xc4 PUSH4 0xa9059cbb
0xc9 EQ
0xca PUSH2 0x3cb
0xcd JUMPI
---
0xc4: V40 = 0xa9059cbb
0xc9: V41 = EQ 0xa9059cbb V15
0xca: V42 = 0x3cb
0xcd: THROWI V41
---
Entry stack: [S3, S2, S1, V15]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S3, S2, S1, V15]

================================

Block 0xce
[0xce:0xd8]
---
Predecessors: [0xc3]
Successors: [0xd9]
---
0xce DUP1
0xcf PUSH4 0xdd62ed3e
0xd4 EQ
0xd5 PUSH2 0x425
0xd8 JUMPI
---
0xcf: V43 = 0xdd62ed3e
0xd4: V44 = EQ 0xdd62ed3e V15
0xd5: V45 = 0x425
0xd8: THROWI V44
---
Entry stack: [S3, S2, S1, V15]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S3, S2, S1, V15]

================================

Block 0xd9
[0xd9:0xe4]
---
Predecessors: [0xce]
Successors: [0xe5]
---
0xd9 JUMPDEST
0xda PUSH1 0x0
0xdc DUP1
0xdd REVERT
0xde JUMPDEST
0xdf CALLVALUE
0xe0 ISZERO
0xe1 PUSH2 0xb4
0xe4 JUMPI
---
0xd9: JUMPDEST 
0xda: V46 = 0x0
0xdd: REVERT 0x0 0x0
0xde: JUMPDEST 
0xdf: V47 = CALLVALUE
0xe0: V48 = ISZERO V47
0xe1: V49 = 0xb4
0xe4: THROWI V48
---
Entry stack: [S3, S2, S1, V15]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xe5
[0xe5:0x115]
---
Predecessors: [0xd9]
Successors: [0x116]
---
0xe5 PUSH1 0x0
0xe7 DUP1
0xe8 REVERT
0xe9 JUMPDEST
0xea PUSH2 0xbc
0xed PUSH2 0x491
0xf0 JUMP
0xf1 JUMPDEST
0xf2 PUSH1 0x40
0xf4 MLOAD
0xf5 DUP1
0xf6 DUP1
0xf7 PUSH1 0x20
0xf9 ADD
0xfa DUP3
0xfb DUP2
0xfc SUB
0xfd DUP3
0xfe MSTORE
0xff DUP4
0x100 DUP2
0x101 DUP2
0x102 MLOAD
0x103 DUP2
0x104 MSTORE
0x105 PUSH1 0x20
0x107 ADD
0x108 SWAP2
0x109 POP
0x10a DUP1
0x10b MLOAD
0x10c SWAP1
0x10d PUSH1 0x20
0x10f ADD
0x110 SWAP1
0x111 DUP1
0x112 DUP4
0x113 DUP4
0x114 PUSH1 0x0
---
0xe5: V50 = 0x0
0xe8: REVERT 0x0 0x0
0xe9: JUMPDEST 
0xea: V51 = 0xbc
0xed: V52 = 0x491
0xf0: THROW 
0xf1: JUMPDEST 
0xf2: V53 = 0x40
0xf4: V54 = M[0x40]
0xf7: V55 = 0x20
0xf9: V56 = ADD 0x20 V54
0xfc: V57 = SUB V56 V54
0xfe: M[V54] = V57
0x102: V58 = M[S0]
0x104: M[V56] = V58
0x105: V59 = 0x20
0x107: V60 = ADD 0x20 V56
0x10b: V61 = M[S0]
0x10d: V62 = 0x20
0x10f: V63 = ADD 0x20 S0
0x114: V64 = 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: [0xbc, 0x0, V63, V60, V61, V61, V63, V60, V54, V54, S0]
Exit stack: []

================================

Block 0x116
[0x116:0x11e]
---
Predecessors: [0xe5]
Successors: [0x11f]
---
0x116 JUMPDEST
0x117 DUP4
0x118 DUP2
0x119 LT
0x11a ISZERO
0x11b PUSH2 0xfc
0x11e JUMPI
---
0x116: JUMPDEST 
0x119: V65 = LT 0x0 V61
0x11a: V66 = ISZERO V65
0x11b: V67 = 0xfc
0x11e: THROWI V66
---
Entry stack: [S9, V54, V54, V60, V63, V61, V61, V60, V63, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V54, V54, V60, V63, V61, V61, V60, V63, 0x0]

================================

Block 0x11f
[0x11f:0x144]
---
Predecessors: [0x116]
Successors: [0x145]
---
0x11f DUP1
0x120 DUP3
0x121 ADD
0x122 MLOAD
0x123 DUP2
0x124 DUP5
0x125 ADD
0x126 MSTORE
0x127 PUSH1 0x20
0x129 DUP2
0x12a ADD
0x12b SWAP1
0x12c POP
0x12d PUSH2 0xe1
0x130 JUMP
0x131 JUMPDEST
0x132 POP
0x133 POP
0x134 POP
0x135 POP
0x136 SWAP1
0x137 POP
0x138 SWAP1
0x139 DUP2
0x13a ADD
0x13b SWAP1
0x13c PUSH1 0x1f
0x13e AND
0x13f DUP1
0x140 ISZERO
0x141 PUSH2 0x129
0x144 JUMPI
---
0x121: V68 = ADD V63 0x0
0x122: V69 = M[V68]
0x125: V70 = ADD V60 0x0
0x126: M[V70] = V69
0x127: V71 = 0x20
0x12a: V72 = ADD 0x0 0x20
0x12d: V73 = 0xe1
0x130: THROW 
0x131: JUMPDEST 
0x13a: V74 = ADD S4 S6
0x13c: V75 = 0x1f
0x13e: V76 = AND 0x1f S4
0x140: V77 = ISZERO V76
0x141: V78 = 0x129
0x144: THROWI V77
---
Entry stack: [S9, V54, V54, V60, V63, V61, V61, V60, V63, 0x0]
Stack pops: 3
Stack additions: [V76, V74]
Exit stack: []

================================

Block 0x145
[0x145:0x15d]
---
Predecessors: [0x11f]
Successors: [0x15e]
---
0x145 DUP1
0x146 DUP3
0x147 SUB
0x148 DUP1
0x149 MLOAD
0x14a PUSH1 0x1
0x14c DUP4
0x14d PUSH1 0x20
0x14f SUB
0x150 PUSH2 0x100
0x153 EXP
0x154 SUB
0x155 NOT
0x156 AND
0x157 DUP2
0x158 MSTORE
0x159 PUSH1 0x20
0x15b ADD
0x15c SWAP2
0x15d POP
---
0x147: V79 = SUB V74 V76
0x149: V80 = M[V79]
0x14a: V81 = 0x1
0x14d: V82 = 0x20
0x14f: V83 = SUB 0x20 V76
0x150: V84 = 0x100
0x153: V85 = EXP 0x100 V83
0x154: V86 = SUB V85 0x1
0x155: V87 = NOT V86
0x156: V88 = AND V87 V80
0x158: M[V79] = V88
0x159: V89 = 0x20
0x15b: V90 = ADD 0x20 V79
---
Entry stack: [V74, V76]
Stack pops: 2
Stack additions: [V90, S0]
Exit stack: [V90, V76]

================================

Block 0x15e
[0x15e:0x172]
---
Predecessors: [0x145]
Successors: [0x173]
---
0x15e JUMPDEST
0x15f POP
0x160 SWAP3
0x161 POP
0x162 POP
0x163 POP
0x164 PUSH1 0x40
0x166 MLOAD
0x167 DUP1
0x168 SWAP2
0x169 SUB
0x16a SWAP1
0x16b RETURN
0x16c JUMPDEST
0x16d CALLVALUE
0x16e ISZERO
0x16f PUSH2 0x142
0x172 JUMPI
---
0x15e: JUMPDEST 
0x164: V91 = 0x40
0x166: V92 = M[0x40]
0x169: V93 = SUB V90 V92
0x16b: RETURN V92 V93
0x16c: JUMPDEST 
0x16d: V94 = CALLVALUE
0x16e: V95 = ISZERO V94
0x16f: V96 = 0x142
0x172: THROWI V95
---
Entry stack: [V90, V76]
Stack pops: 10
Stack additions: []
Exit stack: []

================================

Block 0x173
[0x173:0x1cc]
---
Predecessors: [0x15e]
Successors: [0x1cd]
---
0x173 PUSH1 0x0
0x175 DUP1
0x176 REVERT
0x177 JUMPDEST
0x178 PUSH2 0x177
0x17b PUSH1 0x4
0x17d DUP1
0x17e DUP1
0x17f CALLDATALOAD
0x180 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x195 AND
0x196 SWAP1
0x197 PUSH1 0x20
0x199 ADD
0x19a SWAP1
0x19b SWAP2
0x19c SWAP1
0x19d DUP1
0x19e CALLDATALOAD
0x19f SWAP1
0x1a0 PUSH1 0x20
0x1a2 ADD
0x1a3 SWAP1
0x1a4 SWAP2
0x1a5 SWAP1
0x1a6 POP
0x1a7 POP
0x1a8 PUSH2 0x4ca
0x1ab JUMP
0x1ac JUMPDEST
0x1ad PUSH1 0x40
0x1af MLOAD
0x1b0 DUP1
0x1b1 DUP3
0x1b2 ISZERO
0x1b3 ISZERO
0x1b4 ISZERO
0x1b5 ISZERO
0x1b6 DUP2
0x1b7 MSTORE
0x1b8 PUSH1 0x20
0x1ba ADD
0x1bb SWAP2
0x1bc POP
0x1bd POP
0x1be PUSH1 0x40
0x1c0 MLOAD
0x1c1 DUP1
0x1c2 SWAP2
0x1c3 SUB
0x1c4 SWAP1
0x1c5 RETURN
0x1c6 JUMPDEST
0x1c7 CALLVALUE
0x1c8 ISZERO
0x1c9 PUSH2 0x19c
0x1cc JUMPI
---
0x173: V97 = 0x0
0x176: REVERT 0x0 0x0
0x177: JUMPDEST 
0x178: V98 = 0x177
0x17b: V99 = 0x4
0x17f: V100 = CALLDATALOAD 0x4
0x180: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x195: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x197: V103 = 0x20
0x199: V104 = ADD 0x20 0x4
0x19e: V105 = CALLDATALOAD 0x24
0x1a0: V106 = 0x20
0x1a2: V107 = ADD 0x20 0x24
0x1a8: V108 = 0x4ca
0x1ab: THROW 
0x1ac: JUMPDEST 
0x1ad: V109 = 0x40
0x1af: V110 = M[0x40]
0x1b2: V111 = ISZERO S0
0x1b3: V112 = ISZERO V111
0x1b4: V113 = ISZERO V112
0x1b5: V114 = ISZERO V113
0x1b7: M[V110] = V114
0x1b8: V115 = 0x20
0x1ba: V116 = ADD 0x20 V110
0x1be: V117 = 0x40
0x1c0: V118 = M[0x40]
0x1c3: V119 = SUB V116 V118
0x1c5: RETURN V118 V119
0x1c6: JUMPDEST 
0x1c7: V120 = CALLVALUE
0x1c8: V121 = ISZERO V120
0x1c9: V122 = 0x19c
0x1cc: THROWI V121
---
Entry stack: []
Stack pops: 0
Stack additions: [V105, V102, 0x177]
Exit stack: []

================================

Block 0x1cd
[0x1cd:0x1f5]
---
Predecessors: [0x173]
Successors: [0x1f6]
---
0x1cd PUSH1 0x0
0x1cf DUP1
0x1d0 REVERT
0x1d1 JUMPDEST
0x1d2 PUSH2 0x1a4
0x1d5 PUSH2 0x651
0x1d8 JUMP
0x1d9 JUMPDEST
0x1da PUSH1 0x40
0x1dc MLOAD
0x1dd DUP1
0x1de DUP3
0x1df DUP2
0x1e0 MSTORE
0x1e1 PUSH1 0x20
0x1e3 ADD
0x1e4 SWAP2
0x1e5 POP
0x1e6 POP
0x1e7 PUSH1 0x40
0x1e9 MLOAD
0x1ea DUP1
0x1eb SWAP2
0x1ec SUB
0x1ed SWAP1
0x1ee RETURN
0x1ef JUMPDEST
0x1f0 CALLVALUE
0x1f1 ISZERO
0x1f2 PUSH2 0x1c5
0x1f5 JUMPI
---
0x1cd: V123 = 0x0
0x1d0: REVERT 0x0 0x0
0x1d1: JUMPDEST 
0x1d2: V124 = 0x1a4
0x1d5: V125 = 0x651
0x1d8: THROW 
0x1d9: JUMPDEST 
0x1da: V126 = 0x40
0x1dc: V127 = M[0x40]
0x1e0: M[V127] = S0
0x1e1: V128 = 0x20
0x1e3: V129 = ADD 0x20 V127
0x1e7: V130 = 0x40
0x1e9: V131 = M[0x40]
0x1ec: V132 = SUB V129 V131
0x1ee: RETURN V131 V132
0x1ef: JUMPDEST 
0x1f0: V133 = CALLVALUE
0x1f1: V134 = ISZERO V133
0x1f2: V135 = 0x1c5
0x1f5: THROWI V134
---
Entry stack: []
Stack pops: 0
Stack additions: [0x1a4]
Exit stack: []

================================

Block 0x1f6
[0x1f6:0x26e]
---
Predecessors: [0x1cd]
Successors: [0x26f]
---
0x1f6 PUSH1 0x0
0x1f8 DUP1
0x1f9 REVERT
0x1fa JUMPDEST
0x1fb PUSH2 0x219
0x1fe PUSH1 0x4
0x200 DUP1
0x201 DUP1
0x202 CALLDATALOAD
0x203 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x218 AND
0x219 SWAP1
0x21a PUSH1 0x20
0x21c ADD
0x21d SWAP1
0x21e SWAP2
0x21f SWAP1
0x220 DUP1
0x221 CALLDATALOAD
0x222 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x237 AND
0x238 SWAP1
0x239 PUSH1 0x20
0x23b ADD
0x23c SWAP1
0x23d SWAP2
0x23e SWAP1
0x23f DUP1
0x240 CALLDATALOAD
0x241 SWAP1
0x242 PUSH1 0x20
0x244 ADD
0x245 SWAP1
0x246 SWAP2
0x247 SWAP1
0x248 POP
0x249 POP
0x24a PUSH2 0x657
0x24d JUMP
0x24e JUMPDEST
0x24f PUSH1 0x40
0x251 MLOAD
0x252 DUP1
0x253 DUP3
0x254 ISZERO
0x255 ISZERO
0x256 ISZERO
0x257 ISZERO
0x258 DUP2
0x259 MSTORE
0x25a PUSH1 0x20
0x25c ADD
0x25d SWAP2
0x25e POP
0x25f POP
0x260 PUSH1 0x40
0x262 MLOAD
0x263 DUP1
0x264 SWAP2
0x265 SUB
0x266 SWAP1
0x267 RETURN
0x268 JUMPDEST
0x269 CALLVALUE
0x26a ISZERO
0x26b PUSH2 0x23e
0x26e JUMPI
---
0x1f6: V136 = 0x0
0x1f9: REVERT 0x0 0x0
0x1fa: JUMPDEST 
0x1fb: V137 = 0x219
0x1fe: V138 = 0x4
0x202: V139 = CALLDATALOAD 0x4
0x203: V140 = 0xffffffffffffffffffffffffffffffffffffffff
0x218: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x21a: V142 = 0x20
0x21c: V143 = ADD 0x20 0x4
0x221: V144 = CALLDATALOAD 0x24
0x222: V145 = 0xffffffffffffffffffffffffffffffffffffffff
0x237: V146 = AND 0xffffffffffffffffffffffffffffffffffffffff V144
0x239: V147 = 0x20
0x23b: V148 = ADD 0x20 0x24
0x240: V149 = CALLDATALOAD 0x44
0x242: V150 = 0x20
0x244: V151 = ADD 0x20 0x44
0x24a: V152 = 0x657
0x24d: THROW 
0x24e: JUMPDEST 
0x24f: V153 = 0x40
0x251: V154 = M[0x40]
0x254: V155 = ISZERO S0
0x255: V156 = ISZERO V155
0x256: V157 = ISZERO V156
0x257: V158 = ISZERO V157
0x259: M[V154] = V158
0x25a: V159 = 0x20
0x25c: V160 = ADD 0x20 V154
0x260: V161 = 0x40
0x262: V162 = M[0x40]
0x265: V163 = SUB V160 V162
0x267: RETURN V162 V163
0x268: JUMPDEST 
0x269: V164 = CALLVALUE
0x26a: V165 = ISZERO V164
0x26b: V166 = 0x23e
0x26e: THROWI V165
---
Entry stack: []
Stack pops: 0
Stack additions: [V149, V146, V141, 0x219]
Exit stack: []

================================

Block 0x26f
[0x26f:0x29d]
---
Predecessors: [0x1f6]
Successors: [0x29e]
---
0x26f PUSH1 0x0
0x271 DUP1
0x272 REVERT
0x273 JUMPDEST
0x274 PUSH2 0x246
0x277 PUSH2 0x8e7
0x27a JUMP
0x27b JUMPDEST
0x27c PUSH1 0x40
0x27e MLOAD
0x27f DUP1
0x280 DUP3
0x281 PUSH1 0xff
0x283 AND
0x284 PUSH1 0xff
0x286 AND
0x287 DUP2
0x288 MSTORE
0x289 PUSH1 0x20
0x28b ADD
0x28c SWAP2
0x28d POP
0x28e POP
0x28f PUSH1 0x40
0x291 MLOAD
0x292 DUP1
0x293 SWAP2
0x294 SUB
0x295 SWAP1
0x296 RETURN
0x297 JUMPDEST
0x298 CALLVALUE
0x299 ISZERO
0x29a PUSH2 0x26d
0x29d JUMPI
---
0x26f: V167 = 0x0
0x272: REVERT 0x0 0x0
0x273: JUMPDEST 
0x274: V168 = 0x246
0x277: V169 = 0x8e7
0x27a: THROW 
0x27b: JUMPDEST 
0x27c: V170 = 0x40
0x27e: V171 = M[0x40]
0x281: V172 = 0xff
0x283: V173 = AND 0xff S0
0x284: V174 = 0xff
0x286: V175 = AND 0xff V173
0x288: M[V171] = V175
0x289: V176 = 0x20
0x28b: V177 = ADD 0x20 V171
0x28f: V178 = 0x40
0x291: V179 = M[0x40]
0x294: V180 = SUB V177 V179
0x296: RETURN V179 V180
0x297: JUMPDEST 
0x298: V181 = CALLVALUE
0x299: V182 = ISZERO V181
0x29a: V183 = 0x26d
0x29d: THROWI V182
---
Entry stack: []
Stack pops: 0
Stack additions: [0x246]
Exit stack: []

================================

Block 0x29e
[0x29e:0x2ce]
---
Predecessors: [0x26f]
Successors: [0x2cf]
---
0x29e PUSH1 0x0
0x2a0 DUP1
0x2a1 REVERT
0x2a2 JUMPDEST
0x2a3 PUSH2 0x275
0x2a6 PUSH2 0x8ec
0x2a9 JUMP
0x2aa JUMPDEST
0x2ab PUSH1 0x40
0x2ad MLOAD
0x2ae DUP1
0x2af DUP1
0x2b0 PUSH1 0x20
0x2b2 ADD
0x2b3 DUP3
0x2b4 DUP2
0x2b5 SUB
0x2b6 DUP3
0x2b7 MSTORE
0x2b8 DUP4
0x2b9 DUP2
0x2ba DUP2
0x2bb MLOAD
0x2bc DUP2
0x2bd MSTORE
0x2be PUSH1 0x20
0x2c0 ADD
0x2c1 SWAP2
0x2c2 POP
0x2c3 DUP1
0x2c4 MLOAD
0x2c5 SWAP1
0x2c6 PUSH1 0x20
0x2c8 ADD
0x2c9 SWAP1
0x2ca DUP1
0x2cb DUP4
0x2cc DUP4
0x2cd PUSH1 0x0
---
0x29e: V184 = 0x0
0x2a1: REVERT 0x0 0x0
0x2a2: JUMPDEST 
0x2a3: V185 = 0x275
0x2a6: V186 = 0x8ec
0x2a9: THROW 
0x2aa: JUMPDEST 
0x2ab: V187 = 0x40
0x2ad: V188 = M[0x40]
0x2b0: V189 = 0x20
0x2b2: V190 = ADD 0x20 V188
0x2b5: V191 = SUB V190 V188
0x2b7: M[V188] = V191
0x2bb: V192 = M[S0]
0x2bd: M[V190] = V192
0x2be: V193 = 0x20
0x2c0: V194 = ADD 0x20 V190
0x2c4: V195 = M[S0]
0x2c6: V196 = 0x20
0x2c8: V197 = ADD 0x20 S0
0x2cd: V198 = 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: [0x275, 0x0, V197, V194, V195, V195, V197, V194, V188, V188, S0]
Exit stack: []

================================

Block 0x2cf
[0x2cf:0x2d7]
---
Predecessors: [0x29e]
Successors: [0x2d8]
---
0x2cf JUMPDEST
0x2d0 DUP4
0x2d1 DUP2
0x2d2 LT
0x2d3 ISZERO
0x2d4 PUSH2 0x2b5
0x2d7 JUMPI
---
0x2cf: JUMPDEST 
0x2d2: V199 = LT 0x0 V195
0x2d3: V200 = ISZERO V199
0x2d4: V201 = 0x2b5
0x2d7: THROWI V200
---
Entry stack: [S9, V188, V188, V194, V197, V195, V195, V194, V197, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V188, V188, V194, V197, V195, V195, V194, V197, 0x0]

================================

Block 0x2d8
[0x2d8:0x2fd]
---
Predecessors: [0x2cf]
Successors: [0x2fe]
---
0x2d8 DUP1
0x2d9 DUP3
0x2da ADD
0x2db MLOAD
0x2dc DUP2
0x2dd DUP5
0x2de ADD
0x2df MSTORE
0x2e0 PUSH1 0x20
0x2e2 DUP2
0x2e3 ADD
0x2e4 SWAP1
0x2e5 POP
0x2e6 PUSH2 0x29a
0x2e9 JUMP
0x2ea JUMPDEST
0x2eb POP
0x2ec POP
0x2ed POP
0x2ee POP
0x2ef SWAP1
0x2f0 POP
0x2f1 SWAP1
0x2f2 DUP2
0x2f3 ADD
0x2f4 SWAP1
0x2f5 PUSH1 0x1f
0x2f7 AND
0x2f8 DUP1
0x2f9 ISZERO
0x2fa PUSH2 0x2e2
0x2fd JUMPI
---
0x2da: V202 = ADD V197 0x0
0x2db: V203 = M[V202]
0x2de: V204 = ADD V194 0x0
0x2df: M[V204] = V203
0x2e0: V205 = 0x20
0x2e3: V206 = ADD 0x0 0x20
0x2e6: V207 = 0x29a
0x2e9: THROW 
0x2ea: JUMPDEST 
0x2f3: V208 = ADD S4 S6
0x2f5: V209 = 0x1f
0x2f7: V210 = AND 0x1f S4
0x2f9: V211 = ISZERO V210
0x2fa: V212 = 0x2e2
0x2fd: THROWI V211
---
Entry stack: [S9, V188, V188, V194, V197, V195, V195, V194, V197, 0x0]
Stack pops: 3
Stack additions: [V210, V208]
Exit stack: []

================================

Block 0x2fe
[0x2fe:0x316]
---
Predecessors: [0x2d8]
Successors: [0x317]
---
0x2fe DUP1
0x2ff DUP3
0x300 SUB
0x301 DUP1
0x302 MLOAD
0x303 PUSH1 0x1
0x305 DUP4
0x306 PUSH1 0x20
0x308 SUB
0x309 PUSH2 0x100
0x30c EXP
0x30d SUB
0x30e NOT
0x30f AND
0x310 DUP2
0x311 MSTORE
0x312 PUSH1 0x20
0x314 ADD
0x315 SWAP2
0x316 POP
---
0x300: V213 = SUB V208 V210
0x302: V214 = M[V213]
0x303: V215 = 0x1
0x306: V216 = 0x20
0x308: V217 = SUB 0x20 V210
0x309: V218 = 0x100
0x30c: V219 = EXP 0x100 V217
0x30d: V220 = SUB V219 0x1
0x30e: V221 = NOT V220
0x30f: V222 = AND V221 V214
0x311: M[V213] = V222
0x312: V223 = 0x20
0x314: V224 = ADD 0x20 V213
---
Entry stack: [V208, V210]
Stack pops: 2
Stack additions: [V224, S0]
Exit stack: [V224, V210]

================================

Block 0x317
[0x317:0x32b]
---
Predecessors: [0x2fe]
Successors: [0x32c]
---
0x317 JUMPDEST
0x318 POP
0x319 SWAP3
0x31a POP
0x31b POP
0x31c POP
0x31d PUSH1 0x40
0x31f MLOAD
0x320 DUP1
0x321 SWAP2
0x322 SUB
0x323 SWAP1
0x324 RETURN
0x325 JUMPDEST
0x326 CALLVALUE
0x327 ISZERO
0x328 PUSH2 0x2fb
0x32b JUMPI
---
0x317: JUMPDEST 
0x31d: V225 = 0x40
0x31f: V226 = M[0x40]
0x322: V227 = SUB V224 V226
0x324: RETURN V226 V227
0x325: JUMPDEST 
0x326: V228 = CALLVALUE
0x327: V229 = ISZERO V228
0x328: V230 = 0x2fb
0x32b: THROWI V229
---
Entry stack: [V224, V210]
Stack pops: 10
Stack additions: []
Exit stack: []

================================

Block 0x32c
[0x32c:0x378]
---
Predecessors: [0x317]
Successors: [0x379]
---
0x32c PUSH1 0x0
0x32e DUP1
0x32f REVERT
0x330 JUMPDEST
0x331 PUSH2 0x327
0x334 PUSH1 0x4
0x336 DUP1
0x337 DUP1
0x338 CALLDATALOAD
0x339 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x34e AND
0x34f SWAP1
0x350 PUSH1 0x20
0x352 ADD
0x353 SWAP1
0x354 SWAP2
0x355 SWAP1
0x356 POP
0x357 POP
0x358 PUSH2 0x925
0x35b JUMP
0x35c JUMPDEST
0x35d PUSH1 0x40
0x35f MLOAD
0x360 DUP1
0x361 DUP3
0x362 DUP2
0x363 MSTORE
0x364 PUSH1 0x20
0x366 ADD
0x367 SWAP2
0x368 POP
0x369 POP
0x36a PUSH1 0x40
0x36c MLOAD
0x36d DUP1
0x36e SWAP2
0x36f SUB
0x370 SWAP1
0x371 RETURN
0x372 JUMPDEST
0x373 CALLVALUE
0x374 ISZERO
0x375 PUSH2 0x348
0x378 JUMPI
---
0x32c: V231 = 0x0
0x32f: REVERT 0x0 0x0
0x330: JUMPDEST 
0x331: V232 = 0x327
0x334: V233 = 0x4
0x338: V234 = CALLDATALOAD 0x4
0x339: V235 = 0xffffffffffffffffffffffffffffffffffffffff
0x34e: V236 = AND 0xffffffffffffffffffffffffffffffffffffffff V234
0x350: V237 = 0x20
0x352: V238 = ADD 0x20 0x4
0x358: V239 = 0x925
0x35b: THROW 
0x35c: JUMPDEST 
0x35d: V240 = 0x40
0x35f: V241 = M[0x40]
0x363: M[V241] = S0
0x364: V242 = 0x20
0x366: V243 = ADD 0x20 V241
0x36a: V244 = 0x40
0x36c: V245 = M[0x40]
0x36f: V246 = SUB V243 V245
0x371: RETURN V245 V246
0x372: JUMPDEST 
0x373: V247 = CALLVALUE
0x374: V248 = ISZERO V247
0x375: V249 = 0x348
0x378: THROWI V248
---
Entry stack: []
Stack pops: 0
Stack additions: [V236, 0x327]
Exit stack: []

================================

Block 0x379
[0x379:0x3a9]
---
Predecessors: [0x32c]
Successors: [0x3aa]
---
0x379 PUSH1 0x0
0x37b DUP1
0x37c REVERT
0x37d JUMPDEST
0x37e PUSH2 0x350
0x381 PUSH2 0x93d
0x384 JUMP
0x385 JUMPDEST
0x386 PUSH1 0x40
0x388 MLOAD
0x389 DUP1
0x38a DUP1
0x38b PUSH1 0x20
0x38d ADD
0x38e DUP3
0x38f DUP2
0x390 SUB
0x391 DUP3
0x392 MSTORE
0x393 DUP4
0x394 DUP2
0x395 DUP2
0x396 MLOAD
0x397 DUP2
0x398 MSTORE
0x399 PUSH1 0x20
0x39b ADD
0x39c SWAP2
0x39d POP
0x39e DUP1
0x39f MLOAD
0x3a0 SWAP1
0x3a1 PUSH1 0x20
0x3a3 ADD
0x3a4 SWAP1
0x3a5 DUP1
0x3a6 DUP4
0x3a7 DUP4
0x3a8 PUSH1 0x0
---
0x379: V250 = 0x0
0x37c: REVERT 0x0 0x0
0x37d: JUMPDEST 
0x37e: V251 = 0x350
0x381: V252 = 0x93d
0x384: THROW 
0x385: JUMPDEST 
0x386: V253 = 0x40
0x388: V254 = M[0x40]
0x38b: V255 = 0x20
0x38d: V256 = ADD 0x20 V254
0x390: V257 = SUB V256 V254
0x392: M[V254] = V257
0x396: V258 = M[S0]
0x398: M[V256] = V258
0x399: V259 = 0x20
0x39b: V260 = ADD 0x20 V256
0x39f: V261 = M[S0]
0x3a1: V262 = 0x20
0x3a3: V263 = ADD 0x20 S0
0x3a8: V264 = 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: [0x350, 0x0, V263, V260, V261, V261, V263, V260, V254, V254, S0]
Exit stack: []

================================

Block 0x3aa
[0x3aa:0x3b2]
---
Predecessors: [0x379]
Successors: [0x3b3]
---
0x3aa JUMPDEST
0x3ab DUP4
0x3ac DUP2
0x3ad LT
0x3ae ISZERO
0x3af PUSH2 0x390
0x3b2 JUMPI
---
0x3aa: JUMPDEST 
0x3ad: V265 = LT 0x0 V261
0x3ae: V266 = ISZERO V265
0x3af: V267 = 0x390
0x3b2: THROWI V266
---
Entry stack: [S9, V254, V254, V260, V263, V261, V261, V260, V263, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V254, V254, V260, V263, V261, V261, V260, V263, 0x0]

================================

Block 0x3b3
[0x3b3:0x3d8]
---
Predecessors: [0x3aa]
Successors: [0x3d9]
---
0x3b3 DUP1
0x3b4 DUP3
0x3b5 ADD
0x3b6 MLOAD
0x3b7 DUP2
0x3b8 DUP5
0x3b9 ADD
0x3ba MSTORE
0x3bb PUSH1 0x20
0x3bd DUP2
0x3be ADD
0x3bf SWAP1
0x3c0 POP
0x3c1 PUSH2 0x375
0x3c4 JUMP
0x3c5 JUMPDEST
0x3c6 POP
0x3c7 POP
0x3c8 POP
0x3c9 POP
0x3ca SWAP1
0x3cb POP
0x3cc SWAP1
0x3cd DUP2
0x3ce ADD
0x3cf SWAP1
0x3d0 PUSH1 0x1f
0x3d2 AND
0x3d3 DUP1
0x3d4 ISZERO
0x3d5 PUSH2 0x3bd
0x3d8 JUMPI
---
0x3b5: V268 = ADD V263 0x0
0x3b6: V269 = M[V268]
0x3b9: V270 = ADD V260 0x0
0x3ba: M[V270] = V269
0x3bb: V271 = 0x20
0x3be: V272 = ADD 0x0 0x20
0x3c1: V273 = 0x375
0x3c4: THROW 
0x3c5: JUMPDEST 
0x3ce: V274 = ADD S4 S6
0x3d0: V275 = 0x1f
0x3d2: V276 = AND 0x1f S4
0x3d4: V277 = ISZERO V276
0x3d5: V278 = 0x3bd
0x3d8: THROWI V277
---
Entry stack: [S9, V254, V254, V260, V263, V261, V261, V260, V263, 0x0]
Stack pops: 3
Stack additions: [V276, V274]
Exit stack: []

================================

Block 0x3d9
[0x3d9:0x3f1]
---
Predecessors: [0x3b3]
Successors: [0x3f2]
---
0x3d9 DUP1
0x3da DUP3
0x3db SUB
0x3dc DUP1
0x3dd MLOAD
0x3de PUSH1 0x1
0x3e0 DUP4
0x3e1 PUSH1 0x20
0x3e3 SUB
0x3e4 PUSH2 0x100
0x3e7 EXP
0x3e8 SUB
0x3e9 NOT
0x3ea AND
0x3eb DUP2
0x3ec MSTORE
0x3ed PUSH1 0x20
0x3ef ADD
0x3f0 SWAP2
0x3f1 POP
---
0x3db: V279 = SUB V274 V276
0x3dd: V280 = M[V279]
0x3de: V281 = 0x1
0x3e1: V282 = 0x20
0x3e3: V283 = SUB 0x20 V276
0x3e4: V284 = 0x100
0x3e7: V285 = EXP 0x100 V283
0x3e8: V286 = SUB V285 0x1
0x3e9: V287 = NOT V286
0x3ea: V288 = AND V287 V280
0x3ec: M[V279] = V288
0x3ed: V289 = 0x20
0x3ef: V290 = ADD 0x20 V279
---
Entry stack: [V274, V276]
Stack pops: 2
Stack additions: [V290, S0]
Exit stack: [V290, V276]

================================

Block 0x3f2
[0x3f2:0x406]
---
Predecessors: [0x3d9]
Successors: [0x407]
---
0x3f2 JUMPDEST
0x3f3 POP
0x3f4 SWAP3
0x3f5 POP
0x3f6 POP
0x3f7 POP
0x3f8 PUSH1 0x40
0x3fa MLOAD
0x3fb DUP1
0x3fc SWAP2
0x3fd SUB
0x3fe SWAP1
0x3ff RETURN
0x400 JUMPDEST
0x401 CALLVALUE
0x402 ISZERO
0x403 PUSH2 0x3d6
0x406 JUMPI
---
0x3f2: JUMPDEST 
0x3f8: V291 = 0x40
0x3fa: V292 = M[0x40]
0x3fd: V293 = SUB V290 V292
0x3ff: RETURN V292 V293
0x400: JUMPDEST 
0x401: V294 = CALLVALUE
0x402: V295 = ISZERO V294
0x403: V296 = 0x3d6
0x406: THROWI V295
---
Entry stack: [V290, V276]
Stack pops: 10
Stack additions: []
Exit stack: []

================================

Block 0x407
[0x407:0x460]
---
Predecessors: [0x3f2]
Successors: [0x461]
---
0x407 PUSH1 0x0
0x409 DUP1
0x40a REVERT
0x40b JUMPDEST
0x40c PUSH2 0x40b
0x40f PUSH1 0x4
0x411 DUP1
0x412 DUP1
0x413 CALLDATALOAD
0x414 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x429 AND
0x42a SWAP1
0x42b PUSH1 0x20
0x42d ADD
0x42e SWAP1
0x42f SWAP2
0x430 SWAP1
0x431 DUP1
0x432 CALLDATALOAD
0x433 SWAP1
0x434 PUSH1 0x20
0x436 ADD
0x437 SWAP1
0x438 SWAP2
0x439 SWAP1
0x43a POP
0x43b POP
0x43c PUSH2 0x976
0x43f JUMP
0x440 JUMPDEST
0x441 PUSH1 0x40
0x443 MLOAD
0x444 DUP1
0x445 DUP3
0x446 ISZERO
0x447 ISZERO
0x448 ISZERO
0x449 ISZERO
0x44a DUP2
0x44b MSTORE
0x44c PUSH1 0x20
0x44e ADD
0x44f SWAP2
0x450 POP
0x451 POP
0x452 PUSH1 0x40
0x454 MLOAD
0x455 DUP1
0x456 SWAP2
0x457 SUB
0x458 SWAP1
0x459 RETURN
0x45a JUMPDEST
0x45b CALLVALUE
0x45c ISZERO
0x45d PUSH2 0x430
0x460 JUMPI
---
0x407: V297 = 0x0
0x40a: REVERT 0x0 0x0
0x40b: JUMPDEST 
0x40c: V298 = 0x40b
0x40f: V299 = 0x4
0x413: V300 = CALLDATALOAD 0x4
0x414: V301 = 0xffffffffffffffffffffffffffffffffffffffff
0x429: V302 = AND 0xffffffffffffffffffffffffffffffffffffffff V300
0x42b: V303 = 0x20
0x42d: V304 = ADD 0x20 0x4
0x432: V305 = CALLDATALOAD 0x24
0x434: V306 = 0x20
0x436: V307 = ADD 0x20 0x24
0x43c: V308 = 0x976
0x43f: THROW 
0x440: JUMPDEST 
0x441: V309 = 0x40
0x443: V310 = M[0x40]
0x446: V311 = ISZERO S0
0x447: V312 = ISZERO V311
0x448: V313 = ISZERO V312
0x449: V314 = ISZERO V313
0x44b: M[V310] = V314
0x44c: V315 = 0x20
0x44e: V316 = ADD 0x20 V310
0x452: V317 = 0x40
0x454: V318 = M[0x40]
0x457: V319 = SUB V316 V318
0x459: RETURN V318 V319
0x45a: JUMPDEST 
0x45b: V320 = CALLVALUE
0x45c: V321 = ISZERO V320
0x45d: V322 = 0x430
0x460: THROWI V321
---
Entry stack: []
Stack pops: 0
Stack additions: [V305, V302, 0x40b]
Exit stack: []

================================

Block 0x461
[0x461:0x509]
---
Predecessors: [0x407]
Successors: [0x50a]
---
0x461 PUSH1 0x0
0x463 DUP1
0x464 REVERT
0x465 JUMPDEST
0x466 PUSH2 0x47b
0x469 PUSH1 0x4
0x46b DUP1
0x46c DUP1
0x46d CALLDATALOAD
0x46e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x483 AND
0x484 SWAP1
0x485 PUSH1 0x20
0x487 ADD
0x488 SWAP1
0x489 SWAP2
0x48a SWAP1
0x48b DUP1
0x48c CALLDATALOAD
0x48d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4a2 AND
0x4a3 SWAP1
0x4a4 PUSH1 0x20
0x4a6 ADD
0x4a7 SWAP1
0x4a8 SWAP2
0x4a9 SWAP1
0x4aa POP
0x4ab POP
0x4ac PUSH2 0xaff
0x4af JUMP
0x4b0 JUMPDEST
0x4b1 PUSH1 0x40
0x4b3 MLOAD
0x4b4 DUP1
0x4b5 DUP3
0x4b6 DUP2
0x4b7 MSTORE
0x4b8 PUSH1 0x20
0x4ba ADD
0x4bb SWAP2
0x4bc POP
0x4bd POP
0x4be PUSH1 0x40
0x4c0 MLOAD
0x4c1 DUP1
0x4c2 SWAP2
0x4c3 SUB
0x4c4 SWAP1
0x4c5 RETURN
0x4c6 JUMPDEST
0x4c7 PUSH1 0x40
0x4c9 DUP1
0x4ca MLOAD
0x4cb SWAP1
0x4cc DUP2
0x4cd ADD
0x4ce PUSH1 0x40
0x4d0 MSTORE
0x4d1 DUP1
0x4d2 PUSH1 0x7
0x4d4 DUP2
0x4d5 MSTORE
0x4d6 PUSH1 0x20
0x4d8 ADD
0x4d9 PUSH32 0x56617269616e7400000000000000000000000000000000000000000000000000
0x4fa DUP2
0x4fb MSTORE
0x4fc POP
0x4fd DUP2
0x4fe JUMP
0x4ff JUMPDEST
0x500 PUSH1 0x0
0x502 DUP1
0x503 DUP3
0x504 EQ
0x505 DUP1
0x506 PUSH2 0x556
0x509 JUMPI
---
0x461: V323 = 0x0
0x464: REVERT 0x0 0x0
0x465: JUMPDEST 
0x466: V324 = 0x47b
0x469: V325 = 0x4
0x46d: V326 = CALLDATALOAD 0x4
0x46e: V327 = 0xffffffffffffffffffffffffffffffffffffffff
0x483: V328 = AND 0xffffffffffffffffffffffffffffffffffffffff V326
0x485: V329 = 0x20
0x487: V330 = ADD 0x20 0x4
0x48c: V331 = CALLDATALOAD 0x24
0x48d: V332 = 0xffffffffffffffffffffffffffffffffffffffff
0x4a2: V333 = AND 0xffffffffffffffffffffffffffffffffffffffff V331
0x4a4: V334 = 0x20
0x4a6: V335 = ADD 0x20 0x24
0x4ac: V336 = 0xaff
0x4af: THROW 
0x4b0: JUMPDEST 
0x4b1: V337 = 0x40
0x4b3: V338 = M[0x40]
0x4b7: M[V338] = S0
0x4b8: V339 = 0x20
0x4ba: V340 = ADD 0x20 V338
0x4be: V341 = 0x40
0x4c0: V342 = M[0x40]
0x4c3: V343 = SUB V340 V342
0x4c5: RETURN V342 V343
0x4c6: JUMPDEST 
0x4c7: V344 = 0x40
0x4ca: V345 = M[0x40]
0x4cd: V346 = ADD V345 0x40
0x4ce: V347 = 0x40
0x4d0: M[0x40] = V346
0x4d2: V348 = 0x7
0x4d5: M[V345] = 0x7
0x4d6: V349 = 0x20
0x4d8: V350 = ADD 0x20 V345
0x4d9: V351 = 0x56617269616e7400000000000000000000000000000000000000000000000000
0x4fb: M[V350] = 0x56617269616e7400000000000000000000000000000000000000000000000000
0x4fe: JUMP S0
0x4ff: JUMPDEST 
0x500: V352 = 0x0
0x504: V353 = EQ S0 0x0
0x506: V354 = 0x556
0x509: THROWI V353
---
Entry stack: []
Stack pops: 0
Stack additions: [V333, V328, 0x47b, V345, S0, V353, 0x0, S0]
Exit stack: []

================================

Block 0x50a
[0x50a:0x58a]
---
Predecessors: [0x461]
Successors: [0x58b]
---
0x50a POP
0x50b PUSH1 0x0
0x50d PUSH1 0x2
0x50f PUSH1 0x0
0x511 CALLER
0x512 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x527 AND
0x528 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x53d AND
0x53e DUP2
0x53f MSTORE
0x540 PUSH1 0x20
0x542 ADD
0x543 SWAP1
0x544 DUP2
0x545 MSTORE
0x546 PUSH1 0x20
0x548 ADD
0x549 PUSH1 0x0
0x54b SHA3
0x54c PUSH1 0x0
0x54e DUP6
0x54f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x564 AND
0x565 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x57a AND
0x57b DUP2
0x57c MSTORE
0x57d PUSH1 0x20
0x57f ADD
0x580 SWAP1
0x581 DUP2
0x582 MSTORE
0x583 PUSH1 0x20
0x585 ADD
0x586 PUSH1 0x0
0x588 SHA3
0x589 SLOAD
0x58a EQ
---
0x50b: V355 = 0x0
0x50d: V356 = 0x2
0x50f: V357 = 0x0
0x511: V358 = CALLER
0x512: V359 = 0xffffffffffffffffffffffffffffffffffffffff
0x527: V360 = AND 0xffffffffffffffffffffffffffffffffffffffff V358
0x528: V361 = 0xffffffffffffffffffffffffffffffffffffffff
0x53d: V362 = AND 0xffffffffffffffffffffffffffffffffffffffff V360
0x53f: M[0x0] = V362
0x540: V363 = 0x20
0x542: V364 = ADD 0x20 0x0
0x545: M[0x20] = 0x2
0x546: V365 = 0x20
0x548: V366 = ADD 0x20 0x20
0x549: V367 = 0x0
0x54b: V368 = SHA3 0x0 0x40
0x54c: V369 = 0x0
0x54f: V370 = 0xffffffffffffffffffffffffffffffffffffffff
0x564: V371 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x565: V372 = 0xffffffffffffffffffffffffffffffffffffffff
0x57a: V373 = AND 0xffffffffffffffffffffffffffffffffffffffff V371
0x57c: M[0x0] = V373
0x57d: V374 = 0x20
0x57f: V375 = ADD 0x20 0x0
0x582: M[0x20] = V368
0x583: V376 = 0x20
0x585: V377 = ADD 0x20 0x20
0x586: V378 = 0x0
0x588: V379 = SHA3 0x0 0x40
0x589: V380 = S[V379]
0x58a: V381 = EQ V380 0x0
---
Entry stack: [S2, 0x0, V353]
Stack pops: 4
Stack additions: [S3, S2, S1, V381]
Exit stack: [S0, S2, 0x0, V381]

================================

Block 0x58b
[0x58b:0x591]
---
Predecessors: [0x50a]
Successors: [0x592]
---
0x58b JUMPDEST
0x58c ISZERO
0x58d ISZERO
0x58e PUSH2 0x561
0x591 JUMPI
---
0x58b: JUMPDEST 
0x58c: V382 = ISZERO V381
0x58d: V383 = ISZERO V382
0x58e: V384 = 0x561
0x591: THROWI V383
---
Entry stack: [S3, S2, 0x0, V381]
Stack pops: 1
Stack additions: []
Exit stack: [S3, S2, 0x0]

================================

Block 0x592
[0x592:0xb65]
---
Predecessors: [0x58b]
Successors: [0xb66]
---
0x592 PUSH1 0x0
0x594 DUP1
0x595 REVERT
0x596 JUMPDEST
0x597 DUP2
0x598 PUSH1 0x2
0x59a PUSH1 0x0
0x59c CALLER
0x59d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5b2 AND
0x5b3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5c8 AND
0x5c9 DUP2
0x5ca MSTORE
0x5cb PUSH1 0x20
0x5cd ADD
0x5ce SWAP1
0x5cf DUP2
0x5d0 MSTORE
0x5d1 PUSH1 0x20
0x5d3 ADD
0x5d4 PUSH1 0x0
0x5d6 SHA3
0x5d7 PUSH1 0x0
0x5d9 DUP6
0x5da PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5ef AND
0x5f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x605 AND
0x606 DUP2
0x607 MSTORE
0x608 PUSH1 0x20
0x60a ADD
0x60b SWAP1
0x60c DUP2
0x60d MSTORE
0x60e PUSH1 0x20
0x610 ADD
0x611 PUSH1 0x0
0x613 SHA3
0x614 DUP2
0x615 SWAP1
0x616 SSTORE
0x617 POP
0x618 DUP3
0x619 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x62e AND
0x62f CALLER
0x630 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x645 AND
0x646 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x667 DUP5
0x668 PUSH1 0x40
0x66a MLOAD
0x66b DUP1
0x66c DUP3
0x66d DUP2
0x66e MSTORE
0x66f PUSH1 0x20
0x671 ADD
0x672 SWAP2
0x673 POP
0x674 POP
0x675 PUSH1 0x40
0x677 MLOAD
0x678 DUP1
0x679 SWAP2
0x67a SUB
0x67b SWAP1
0x67c LOG3
0x67d PUSH1 0x1
0x67f SWAP1
0x680 POP
0x681 SWAP3
0x682 SWAP2
0x683 POP
0x684 POP
0x685 JUMP
0x686 JUMPDEST
0x687 PUSH1 0x0
0x689 SLOAD
0x68a DUP2
0x68b JUMP
0x68c JUMPDEST
0x68d PUSH1 0x0
0x68f PUSH2 0x6df
0x692 PUSH1 0x2
0x694 PUSH1 0x0
0x696 DUP7
0x697 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6ac AND
0x6ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6c2 AND
0x6c3 DUP2
0x6c4 MSTORE
0x6c5 PUSH1 0x20
0x6c7 ADD
0x6c8 SWAP1
0x6c9 DUP2
0x6ca MSTORE
0x6cb PUSH1 0x20
0x6cd ADD
0x6ce PUSH1 0x0
0x6d0 SHA3
0x6d1 PUSH1 0x0
0x6d3 CALLER
0x6d4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6e9 AND
0x6ea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6ff AND
0x700 DUP2
0x701 MSTORE
0x702 PUSH1 0x20
0x704 ADD
0x705 SWAP1
0x706 DUP2
0x707 MSTORE
0x708 PUSH1 0x20
0x70a ADD
0x70b PUSH1 0x0
0x70d SHA3
0x70e SLOAD
0x70f DUP4
0x710 PUSH2 0xb24
0x713 JUMP
0x714 JUMPDEST
0x715 PUSH1 0x2
0x717 PUSH1 0x0
0x719 DUP7
0x71a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x72f AND
0x730 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x745 AND
0x746 DUP2
0x747 MSTORE
0x748 PUSH1 0x20
0x74a ADD
0x74b SWAP1
0x74c DUP2
0x74d MSTORE
0x74e PUSH1 0x20
0x750 ADD
0x751 PUSH1 0x0
0x753 SHA3
0x754 PUSH1 0x0
0x756 CALLER
0x757 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x76c AND
0x76d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x782 AND
0x783 DUP2
0x784 MSTORE
0x785 PUSH1 0x20
0x787 ADD
0x788 SWAP1
0x789 DUP2
0x78a MSTORE
0x78b PUSH1 0x20
0x78d ADD
0x78e PUSH1 0x0
0x790 SHA3
0x791 DUP2
0x792 SWAP1
0x793 SSTORE
0x794 POP
0x795 PUSH2 0x7a8
0x798 PUSH1 0x1
0x79a PUSH1 0x0
0x79c DUP7
0x79d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7b2 AND
0x7b3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7c8 AND
0x7c9 DUP2
0x7ca MSTORE
0x7cb PUSH1 0x20
0x7cd ADD
0x7ce SWAP1
0x7cf DUP2
0x7d0 MSTORE
0x7d1 PUSH1 0x20
0x7d3 ADD
0x7d4 PUSH1 0x0
0x7d6 SHA3
0x7d7 SLOAD
0x7d8 DUP4
0x7d9 PUSH2 0xb24
0x7dc JUMP
0x7dd JUMPDEST
0x7de PUSH1 0x1
0x7e0 PUSH1 0x0
0x7e2 DUP7
0x7e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7f8 AND
0x7f9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x80e AND
0x80f DUP2
0x810 MSTORE
0x811 PUSH1 0x20
0x813 ADD
0x814 SWAP1
0x815 DUP2
0x816 MSTORE
0x817 PUSH1 0x20
0x819 ADD
0x81a PUSH1 0x0
0x81c SHA3
0x81d DUP2
0x81e SWAP1
0x81f SSTORE
0x820 POP
0x821 PUSH2 0x834
0x824 PUSH1 0x1
0x826 PUSH1 0x0
0x828 DUP6
0x829 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x83e AND
0x83f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x854 AND
0x855 DUP2
0x856 MSTORE
0x857 PUSH1 0x20
0x859 ADD
0x85a SWAP1
0x85b DUP2
0x85c MSTORE
0x85d PUSH1 0x20
0x85f ADD
0x860 PUSH1 0x0
0x862 SHA3
0x863 SLOAD
0x864 DUP4
0x865 PUSH2 0xb3d
0x868 JUMP
0x869 JUMPDEST
0x86a PUSH1 0x1
0x86c PUSH1 0x0
0x86e DUP6
0x86f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x884 AND
0x885 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x89a AND
0x89b DUP2
0x89c MSTORE
0x89d PUSH1 0x20
0x89f ADD
0x8a0 SWAP1
0x8a1 DUP2
0x8a2 MSTORE
0x8a3 PUSH1 0x20
0x8a5 ADD
0x8a6 PUSH1 0x0
0x8a8 SHA3
0x8a9 DUP2
0x8aa SWAP1
0x8ab SSTORE
0x8ac POP
0x8ad DUP3
0x8ae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8c3 AND
0x8c4 DUP5
0x8c5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8da AND
0x8db PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x8fc DUP5
0x8fd PUSH1 0x40
0x8ff MLOAD
0x900 DUP1
0x901 DUP3
0x902 DUP2
0x903 MSTORE
0x904 PUSH1 0x20
0x906 ADD
0x907 SWAP2
0x908 POP
0x909 POP
0x90a PUSH1 0x40
0x90c MLOAD
0x90d DUP1
0x90e SWAP2
0x90f SUB
0x910 SWAP1
0x911 LOG3
0x912 PUSH1 0x1
0x914 SWAP1
0x915 POP
0x916 SWAP4
0x917 SWAP3
0x918 POP
0x919 POP
0x91a POP
0x91b JUMP
0x91c JUMPDEST
0x91d PUSH1 0x12
0x91f DUP2
0x920 JUMP
0x921 JUMPDEST
0x922 PUSH1 0x40
0x924 DUP1
0x925 MLOAD
0x926 SWAP1
0x927 DUP2
0x928 ADD
0x929 PUSH1 0x40
0x92b MSTORE
0x92c DUP1
0x92d PUSH1 0x9
0x92f DUP2
0x930 MSTORE
0x931 PUSH1 0x20
0x933 ADD
0x934 PUSH32 0x546f6b656e20302e310000000000000000000000000000000000000000000000
0x955 DUP2
0x956 MSTORE
0x957 POP
0x958 DUP2
0x959 JUMP
0x95a JUMPDEST
0x95b PUSH1 0x1
0x95d PUSH1 0x20
0x95f MSTORE
0x960 DUP1
0x961 PUSH1 0x0
0x963 MSTORE
0x964 PUSH1 0x40
0x966 PUSH1 0x0
0x968 SHA3
0x969 PUSH1 0x0
0x96b SWAP2
0x96c POP
0x96d SWAP1
0x96e POP
0x96f SLOAD
0x970 DUP2
0x971 JUMP
0x972 JUMPDEST
0x973 PUSH1 0x40
0x975 DUP1
0x976 MLOAD
0x977 SWAP1
0x978 DUP2
0x979 ADD
0x97a PUSH1 0x40
0x97c MSTORE
0x97d DUP1
0x97e PUSH1 0x3
0x980 DUP2
0x981 MSTORE
0x982 PUSH1 0x20
0x984 ADD
0x985 PUSH32 0x5641520000000000000000000000000000000000000000000000000000000000
0x9a6 DUP2
0x9a7 MSTORE
0x9a8 POP
0x9a9 DUP2
0x9aa JUMP
0x9ab JUMPDEST
0x9ac PUSH1 0x0
0x9ae PUSH2 0x9c1
0x9b1 PUSH1 0x1
0x9b3 PUSH1 0x0
0x9b5 CALLER
0x9b6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9cb AND
0x9cc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9e1 AND
0x9e2 DUP2
0x9e3 MSTORE
0x9e4 PUSH1 0x20
0x9e6 ADD
0x9e7 SWAP1
0x9e8 DUP2
0x9e9 MSTORE
0x9ea PUSH1 0x20
0x9ec ADD
0x9ed PUSH1 0x0
0x9ef SHA3
0x9f0 SLOAD
0x9f1 DUP4
0x9f2 PUSH2 0xb24
0x9f5 JUMP
0x9f6 JUMPDEST
0x9f7 PUSH1 0x1
0x9f9 PUSH1 0x0
0x9fb CALLER
0x9fc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa11 AND
0xa12 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa27 AND
0xa28 DUP2
0xa29 MSTORE
0xa2a PUSH1 0x20
0xa2c ADD
0xa2d SWAP1
0xa2e DUP2
0xa2f MSTORE
0xa30 PUSH1 0x20
0xa32 ADD
0xa33 PUSH1 0x0
0xa35 SHA3
0xa36 DUP2
0xa37 SWAP1
0xa38 SSTORE
0xa39 POP
0xa3a PUSH2 0xa4d
0xa3d PUSH1 0x1
0xa3f PUSH1 0x0
0xa41 DUP6
0xa42 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa57 AND
0xa58 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa6d AND
0xa6e DUP2
0xa6f MSTORE
0xa70 PUSH1 0x20
0xa72 ADD
0xa73 SWAP1
0xa74 DUP2
0xa75 MSTORE
0xa76 PUSH1 0x20
0xa78 ADD
0xa79 PUSH1 0x0
0xa7b SHA3
0xa7c SLOAD
0xa7d DUP4
0xa7e PUSH2 0xb3d
0xa81 JUMP
0xa82 JUMPDEST
0xa83 PUSH1 0x1
0xa85 PUSH1 0x0
0xa87 DUP6
0xa88 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa9d AND
0xa9e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xab3 AND
0xab4 DUP2
0xab5 MSTORE
0xab6 PUSH1 0x20
0xab8 ADD
0xab9 SWAP1
0xaba DUP2
0xabb MSTORE
0xabc PUSH1 0x20
0xabe ADD
0xabf PUSH1 0x0
0xac1 SHA3
0xac2 DUP2
0xac3 SWAP1
0xac4 SSTORE
0xac5 POP
0xac6 DUP3
0xac7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xadc AND
0xadd CALLER
0xade PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaf3 AND
0xaf4 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xb15 DUP5
0xb16 PUSH1 0x40
0xb18 MLOAD
0xb19 DUP1
0xb1a DUP3
0xb1b DUP2
0xb1c MSTORE
0xb1d PUSH1 0x20
0xb1f ADD
0xb20 SWAP2
0xb21 POP
0xb22 POP
0xb23 PUSH1 0x40
0xb25 MLOAD
0xb26 DUP1
0xb27 SWAP2
0xb28 SUB
0xb29 SWAP1
0xb2a LOG3
0xb2b PUSH1 0x1
0xb2d SWAP1
0xb2e POP
0xb2f SWAP3
0xb30 SWAP2
0xb31 POP
0xb32 POP
0xb33 JUMP
0xb34 JUMPDEST
0xb35 PUSH1 0x2
0xb37 PUSH1 0x20
0xb39 MSTORE
0xb3a DUP2
0xb3b PUSH1 0x0
0xb3d MSTORE
0xb3e PUSH1 0x40
0xb40 PUSH1 0x0
0xb42 SHA3
0xb43 PUSH1 0x20
0xb45 MSTORE
0xb46 DUP1
0xb47 PUSH1 0x0
0xb49 MSTORE
0xb4a PUSH1 0x40
0xb4c PUSH1 0x0
0xb4e SHA3
0xb4f PUSH1 0x0
0xb51 SWAP2
0xb52 POP
0xb53 SWAP2
0xb54 POP
0xb55 POP
0xb56 SLOAD
0xb57 DUP2
0xb58 JUMP
0xb59 JUMPDEST
0xb5a PUSH1 0x0
0xb5c DUP2
0xb5d DUP4
0xb5e LT
0xb5f ISZERO
0xb60 ISZERO
0xb61 ISZERO
0xb62 PUSH2 0xb32
0xb65 JUMPI
---
0x592: V385 = 0x0
0x595: REVERT 0x0 0x0
0x596: JUMPDEST 
0x598: V386 = 0x2
0x59a: V387 = 0x0
0x59c: V388 = CALLER
0x59d: V389 = 0xffffffffffffffffffffffffffffffffffffffff
0x5b2: V390 = AND 0xffffffffffffffffffffffffffffffffffffffff V388
0x5b3: V391 = 0xffffffffffffffffffffffffffffffffffffffff
0x5c8: V392 = AND 0xffffffffffffffffffffffffffffffffffffffff V390
0x5ca: M[0x0] = V392
0x5cb: V393 = 0x20
0x5cd: V394 = ADD 0x20 0x0
0x5d0: M[0x20] = 0x2
0x5d1: V395 = 0x20
0x5d3: V396 = ADD 0x20 0x20
0x5d4: V397 = 0x0
0x5d6: V398 = SHA3 0x0 0x40
0x5d7: V399 = 0x0
0x5da: V400 = 0xffffffffffffffffffffffffffffffffffffffff
0x5ef: V401 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x5f0: V402 = 0xffffffffffffffffffffffffffffffffffffffff
0x605: V403 = AND 0xffffffffffffffffffffffffffffffffffffffff V401
0x607: M[0x0] = V403
0x608: V404 = 0x20
0x60a: V405 = ADD 0x20 0x0
0x60d: M[0x20] = V398
0x60e: V406 = 0x20
0x610: V407 = ADD 0x20 0x20
0x611: V408 = 0x0
0x613: V409 = SHA3 0x0 0x40
0x616: S[V409] = S1
0x619: V410 = 0xffffffffffffffffffffffffffffffffffffffff
0x62e: V411 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x62f: V412 = CALLER
0x630: V413 = 0xffffffffffffffffffffffffffffffffffffffff
0x645: V414 = AND 0xffffffffffffffffffffffffffffffffffffffff V412
0x646: V415 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x668: V416 = 0x40
0x66a: V417 = M[0x40]
0x66e: M[V417] = S1
0x66f: V418 = 0x20
0x671: V419 = ADD 0x20 V417
0x675: V420 = 0x40
0x677: V421 = M[0x40]
0x67a: V422 = SUB V419 V421
0x67c: LOG V421 V422 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V414 V411
0x67d: V423 = 0x1
0x685: JUMP S3
0x686: JUMPDEST 
0x687: V424 = 0x0
0x689: V425 = S[0x0]
0x68b: JUMP S0
0x68c: JUMPDEST 
0x68d: V426 = 0x0
0x68f: V427 = 0x6df
0x692: V428 = 0x2
0x694: V429 = 0x0
0x697: V430 = 0xffffffffffffffffffffffffffffffffffffffff
0x6ac: V431 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x6ad: V432 = 0xffffffffffffffffffffffffffffffffffffffff
0x6c2: V433 = AND 0xffffffffffffffffffffffffffffffffffffffff V431
0x6c4: M[0x0] = V433
0x6c5: V434 = 0x20
0x6c7: V435 = ADD 0x20 0x0
0x6ca: M[0x20] = 0x2
0x6cb: V436 = 0x20
0x6cd: V437 = ADD 0x20 0x20
0x6ce: V438 = 0x0
0x6d0: V439 = SHA3 0x0 0x40
0x6d1: V440 = 0x0
0x6d3: V441 = CALLER
0x6d4: V442 = 0xffffffffffffffffffffffffffffffffffffffff
0x6e9: V443 = AND 0xffffffffffffffffffffffffffffffffffffffff V441
0x6ea: V444 = 0xffffffffffffffffffffffffffffffffffffffff
0x6ff: V445 = AND 0xffffffffffffffffffffffffffffffffffffffff V443
0x701: M[0x0] = V445
0x702: V446 = 0x20
0x704: V447 = ADD 0x20 0x0
0x707: M[0x20] = V439
0x708: V448 = 0x20
0x70a: V449 = ADD 0x20 0x20
0x70b: V450 = 0x0
0x70d: V451 = SHA3 0x0 0x40
0x70e: V452 = S[V451]
0x710: V453 = 0xb24
0x713: THROW 
0x714: JUMPDEST 
0x715: V454 = 0x2
0x717: V455 = 0x0
0x71a: V456 = 0xffffffffffffffffffffffffffffffffffffffff
0x72f: V457 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x730: V458 = 0xffffffffffffffffffffffffffffffffffffffff
0x745: V459 = AND 0xffffffffffffffffffffffffffffffffffffffff V457
0x747: M[0x0] = V459
0x748: V460 = 0x20
0x74a: V461 = ADD 0x20 0x0
0x74d: M[0x20] = 0x2
0x74e: V462 = 0x20
0x750: V463 = ADD 0x20 0x20
0x751: V464 = 0x0
0x753: V465 = SHA3 0x0 0x40
0x754: V466 = 0x0
0x756: V467 = CALLER
0x757: V468 = 0xffffffffffffffffffffffffffffffffffffffff
0x76c: V469 = AND 0xffffffffffffffffffffffffffffffffffffffff V467
0x76d: V470 = 0xffffffffffffffffffffffffffffffffffffffff
0x782: V471 = AND 0xffffffffffffffffffffffffffffffffffffffff V469
0x784: M[0x0] = V471
0x785: V472 = 0x20
0x787: V473 = ADD 0x20 0x0
0x78a: M[0x20] = V465
0x78b: V474 = 0x20
0x78d: V475 = ADD 0x20 0x20
0x78e: V476 = 0x0
0x790: V477 = SHA3 0x0 0x40
0x793: S[V477] = S0
0x795: V478 = 0x7a8
0x798: V479 = 0x1
0x79a: V480 = 0x0
0x79d: V481 = 0xffffffffffffffffffffffffffffffffffffffff
0x7b2: V482 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x7b3: V483 = 0xffffffffffffffffffffffffffffffffffffffff
0x7c8: V484 = AND 0xffffffffffffffffffffffffffffffffffffffff V482
0x7ca: M[0x0] = V484
0x7cb: V485 = 0x20
0x7cd: V486 = ADD 0x20 0x0
0x7d0: M[0x20] = 0x1
0x7d1: V487 = 0x20
0x7d3: V488 = ADD 0x20 0x20
0x7d4: V489 = 0x0
0x7d6: V490 = SHA3 0x0 0x40
0x7d7: V491 = S[V490]
0x7d9: V492 = 0xb24
0x7dc: THROW 
0x7dd: JUMPDEST 
0x7de: V493 = 0x1
0x7e0: V494 = 0x0
0x7e3: V495 = 0xffffffffffffffffffffffffffffffffffffffff
0x7f8: V496 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x7f9: V497 = 0xffffffffffffffffffffffffffffffffffffffff
0x80e: V498 = AND 0xffffffffffffffffffffffffffffffffffffffff V496
0x810: M[0x0] = V498
0x811: V499 = 0x20
0x813: V500 = ADD 0x20 0x0
0x816: M[0x20] = 0x1
0x817: V501 = 0x20
0x819: V502 = ADD 0x20 0x20
0x81a: V503 = 0x0
0x81c: V504 = SHA3 0x0 0x40
0x81f: S[V504] = S0
0x821: V505 = 0x834
0x824: V506 = 0x1
0x826: V507 = 0x0
0x829: V508 = 0xffffffffffffffffffffffffffffffffffffffff
0x83e: V509 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x83f: V510 = 0xffffffffffffffffffffffffffffffffffffffff
0x854: V511 = AND 0xffffffffffffffffffffffffffffffffffffffff V509
0x856: M[0x0] = V511
0x857: V512 = 0x20
0x859: V513 = ADD 0x20 0x0
0x85c: M[0x20] = 0x1
0x85d: V514 = 0x20
0x85f: V515 = ADD 0x20 0x20
0x860: V516 = 0x0
0x862: V517 = SHA3 0x0 0x40
0x863: V518 = S[V517]
0x865: V519 = 0xb3d
0x868: THROW 
0x869: JUMPDEST 
0x86a: V520 = 0x1
0x86c: V521 = 0x0
0x86f: V522 = 0xffffffffffffffffffffffffffffffffffffffff
0x884: V523 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x885: V524 = 0xffffffffffffffffffffffffffffffffffffffff
0x89a: V525 = AND 0xffffffffffffffffffffffffffffffffffffffff V523
0x89c: M[0x0] = V525
0x89d: V526 = 0x20
0x89f: V527 = ADD 0x20 0x0
0x8a2: M[0x20] = 0x1
0x8a3: V528 = 0x20
0x8a5: V529 = ADD 0x20 0x20
0x8a6: V530 = 0x0
0x8a8: V531 = SHA3 0x0 0x40
0x8ab: S[V531] = S0
0x8ae: V532 = 0xffffffffffffffffffffffffffffffffffffffff
0x8c3: V533 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x8c5: V534 = 0xffffffffffffffffffffffffffffffffffffffff
0x8da: V535 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x8db: V536 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x8fd: V537 = 0x40
0x8ff: V538 = M[0x40]
0x903: M[V538] = S2
0x904: V539 = 0x20
0x906: V540 = ADD 0x20 V538
0x90a: V541 = 0x40
0x90c: V542 = M[0x40]
0x90f: V543 = SUB V540 V542
0x911: LOG V542 V543 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V535 V533
0x912: V544 = 0x1
0x91b: JUMP S5
0x91c: JUMPDEST 
0x91d: V545 = 0x12
0x920: JUMP S0
0x921: JUMPDEST 
0x922: V546 = 0x40
0x925: V547 = M[0x40]
0x928: V548 = ADD V547 0x40
0x929: V549 = 0x40
0x92b: M[0x40] = V548
0x92d: V550 = 0x9
0x930: M[V547] = 0x9
0x931: V551 = 0x20
0x933: V552 = ADD 0x20 V547
0x934: V553 = 0x546f6b656e20302e310000000000000000000000000000000000000000000000
0x956: M[V552] = 0x546f6b656e20302e310000000000000000000000000000000000000000000000
0x959: JUMP S0
0x95a: JUMPDEST 
0x95b: V554 = 0x1
0x95d: V555 = 0x20
0x95f: M[0x20] = 0x1
0x961: V556 = 0x0
0x963: M[0x0] = S0
0x964: V557 = 0x40
0x966: V558 = 0x0
0x968: V559 = SHA3 0x0 0x40
0x969: V560 = 0x0
0x96f: V561 = S[V559]
0x971: JUMP S1
0x972: JUMPDEST 
0x973: V562 = 0x40
0x976: V563 = M[0x40]
0x979: V564 = ADD V563 0x40
0x97a: V565 = 0x40
0x97c: M[0x40] = V564
0x97e: V566 = 0x3
0x981: M[V563] = 0x3
0x982: V567 = 0x20
0x984: V568 = ADD 0x20 V563
0x985: V569 = 0x5641520000000000000000000000000000000000000000000000000000000000
0x9a7: M[V568] = 0x5641520000000000000000000000000000000000000000000000000000000000
0x9aa: JUMP S0
0x9ab: JUMPDEST 
0x9ac: V570 = 0x0
0x9ae: V571 = 0x9c1
0x9b1: V572 = 0x1
0x9b3: V573 = 0x0
0x9b5: V574 = CALLER
0x9b6: V575 = 0xffffffffffffffffffffffffffffffffffffffff
0x9cb: V576 = AND 0xffffffffffffffffffffffffffffffffffffffff V574
0x9cc: V577 = 0xffffffffffffffffffffffffffffffffffffffff
0x9e1: V578 = AND 0xffffffffffffffffffffffffffffffffffffffff V576
0x9e3: M[0x0] = V578
0x9e4: V579 = 0x20
0x9e6: V580 = ADD 0x20 0x0
0x9e9: M[0x20] = 0x1
0x9ea: V581 = 0x20
0x9ec: V582 = ADD 0x20 0x20
0x9ed: V583 = 0x0
0x9ef: V584 = SHA3 0x0 0x40
0x9f0: V585 = S[V584]
0x9f2: V586 = 0xb24
0x9f5: THROW 
0x9f6: JUMPDEST 
0x9f7: V587 = 0x1
0x9f9: V588 = 0x0
0x9fb: V589 = CALLER
0x9fc: V590 = 0xffffffffffffffffffffffffffffffffffffffff
0xa11: V591 = AND 0xffffffffffffffffffffffffffffffffffffffff V589
0xa12: V592 = 0xffffffffffffffffffffffffffffffffffffffff
0xa27: V593 = AND 0xffffffffffffffffffffffffffffffffffffffff V591
0xa29: M[0x0] = V593
0xa2a: V594 = 0x20
0xa2c: V595 = ADD 0x20 0x0
0xa2f: M[0x20] = 0x1
0xa30: V596 = 0x20
0xa32: V597 = ADD 0x20 0x20
0xa33: V598 = 0x0
0xa35: V599 = SHA3 0x0 0x40
0xa38: S[V599] = S0
0xa3a: V600 = 0xa4d
0xa3d: V601 = 0x1
0xa3f: V602 = 0x0
0xa42: V603 = 0xffffffffffffffffffffffffffffffffffffffff
0xa57: V604 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xa58: V605 = 0xffffffffffffffffffffffffffffffffffffffff
0xa6d: V606 = AND 0xffffffffffffffffffffffffffffffffffffffff V604
0xa6f: M[0x0] = V606
0xa70: V607 = 0x20
0xa72: V608 = ADD 0x20 0x0
0xa75: M[0x20] = 0x1
0xa76: V609 = 0x20
0xa78: V610 = ADD 0x20 0x20
0xa79: V611 = 0x0
0xa7b: V612 = SHA3 0x0 0x40
0xa7c: V613 = S[V612]
0xa7e: V614 = 0xb3d
0xa81: THROW 
0xa82: JUMPDEST 
0xa83: V615 = 0x1
0xa85: V616 = 0x0
0xa88: V617 = 0xffffffffffffffffffffffffffffffffffffffff
0xa9d: V618 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xa9e: V619 = 0xffffffffffffffffffffffffffffffffffffffff
0xab3: V620 = AND 0xffffffffffffffffffffffffffffffffffffffff V618
0xab5: M[0x0] = V620
0xab6: V621 = 0x20
0xab8: V622 = ADD 0x20 0x0
0xabb: M[0x20] = 0x1
0xabc: V623 = 0x20
0xabe: V624 = ADD 0x20 0x20
0xabf: V625 = 0x0
0xac1: V626 = SHA3 0x0 0x40
0xac4: S[V626] = S0
0xac7: V627 = 0xffffffffffffffffffffffffffffffffffffffff
0xadc: V628 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xadd: V629 = CALLER
0xade: V630 = 0xffffffffffffffffffffffffffffffffffffffff
0xaf3: V631 = AND 0xffffffffffffffffffffffffffffffffffffffff V629
0xaf4: V632 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xb16: V633 = 0x40
0xb18: V634 = M[0x40]
0xb1c: M[V634] = S2
0xb1d: V635 = 0x20
0xb1f: V636 = ADD 0x20 V634
0xb23: V637 = 0x40
0xb25: V638 = M[0x40]
0xb28: V639 = SUB V636 V638
0xb2a: LOG V638 V639 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V631 V628
0xb2b: V640 = 0x1
0xb33: JUMP S4
0xb34: JUMPDEST 
0xb35: V641 = 0x2
0xb37: V642 = 0x20
0xb39: M[0x20] = 0x2
0xb3b: V643 = 0x0
0xb3d: M[0x0] = S1
0xb3e: V644 = 0x40
0xb40: V645 = 0x0
0xb42: V646 = SHA3 0x0 0x40
0xb43: V647 = 0x20
0xb45: M[0x20] = V646
0xb47: V648 = 0x0
0xb49: M[0x0] = S0
0xb4a: V649 = 0x40
0xb4c: V650 = 0x0
0xb4e: V651 = SHA3 0x0 0x40
0xb4f: V652 = 0x0
0xb56: V653 = S[V651]
0xb58: JUMP S2
0xb59: JUMPDEST 
0xb5a: V654 = 0x0
0xb5e: V655 = LT S1 S0
0xb5f: V656 = ISZERO V655
0xb60: V657 = ISZERO V656
0xb61: V658 = ISZERO V657
0xb62: V659 = 0xb32
0xb65: THROWI V658
---
Entry stack: [S2, S1, 0x0]
Stack pops: 0
Stack additions: [0x1, V425, S0, S0, V452, 0x6df, 0x0, S0, S1, S2, S2, V491, 0x7a8, S1, S2, S3, S4, S2, V518, 0x834, S1, S2, S3, S4, 0x1, 0x12, S0, V547, S0, V561, S1, V563, S0, S0, V585, 0x9c1, 0x0, S0, S2, V613, 0xa4d, S1, S2, S3, 0x1, V653, S2, 0x0, S0, S1]
Exit stack: []

================================

Block 0xb66
[0xb66:0xb84]
---
Predecessors: [0x592]
Successors: [0xb85]
---
0xb66 INVALID
0xb67 JUMPDEST
0xb68 DUP2
0xb69 DUP4
0xb6a SUB
0xb6b SWAP1
0xb6c POP
0xb6d SWAP3
0xb6e SWAP2
0xb6f POP
0xb70 POP
0xb71 JUMP
0xb72 JUMPDEST
0xb73 PUSH1 0x0
0xb75 DUP1
0xb76 DUP3
0xb77 DUP5
0xb78 ADD
0xb79 SWAP1
0xb7a POP
0xb7b DUP4
0xb7c DUP2
0xb7d LT
0xb7e ISZERO
0xb7f ISZERO
0xb80 ISZERO
0xb81 PUSH2 0xb51
0xb84 JUMPI
---
0xb66: INVALID 
0xb67: JUMPDEST 
0xb6a: V660 = SUB S2 S1
0xb71: JUMP S3
0xb72: JUMPDEST 
0xb73: V661 = 0x0
0xb78: V662 = ADD S1 S0
0xb7d: V663 = LT V662 S1
0xb7e: V664 = ISZERO V663
0xb7f: V665 = ISZERO V664
0xb80: V666 = ISZERO V665
0xb81: V667 = 0xb51
0xb84: THROWI V666
---
Entry stack: [S2, S1, 0x0]
Stack pops: 0
Stack additions: [V660, V662, 0x0, S0, S1]
Exit stack: []

================================

Block 0xb85
[0xb85:0xbbb]
---
Predecessors: [0xb66]
Successors: []
---
0xb85 INVALID
0xb86 JUMPDEST
0xb87 DUP1
0xb88 SWAP2
0xb89 POP
0xb8a POP
0xb8b SWAP3
0xb8c SWAP2
0xb8d POP
0xb8e POP
0xb8f JUMP
0xb90 STOP
0xb91 LOG1
0xb92 PUSH6 0x627a7a723058
0xb99 SHA3
0xb9a PUSH27 0xe8eb61e12500a9140bff63ba2cf3ff0d0e09f15cbb1d8022b2dfbd
0xbb6 NOT
0xbb7 MISSING 0xe8
0xbb8 CODESIZE
0xbb9 CALLVALUE
0xbba STOP
0xbbb MISSING 0x29
---
0xb85: INVALID 
0xb86: JUMPDEST 
0xb8f: JUMP S4
0xb90: STOP 
0xb91: LOG S0 S1 S2
0xb92: V668 = 0x627a7a723058
0xb99: V669 = SHA3 0x627a7a723058 S3
0xb9a: V670 = 0xe8eb61e12500a9140bff63ba2cf3ff0d0e09f15cbb1d8022b2dfbd
0xbb6: V671 = NOT 0xe8eb61e12500a9140bff63ba2cf3ff0d0e09f15cbb1d8022b2dfbd
0xbb7: MISSING 0xe8
0xbb8: V672 = CODESIZE
0xbb9: V673 = CALLVALUE
0xbba: STOP 
0xbbb: MISSING 0x29
---
Entry stack: [S3, S2, 0x0, V662]
Stack pops: 0
Stack additions: [S0, 0xffffffffff17149e1edaff56ebf4009c45d30c00f2f1f60ea344e27fdd4d2042, V669, V673, V672]
Exit stack: []

================================

Function 0:
Public function signature: 0xdd62ed3e
Entry block: 0xd9
Exit block: 0xb85
Body: 0xd9, 0xe5, 0x116, 0x11f, 0x145, 0x15e, 0x173, 0x1cd, 0x1f6, 0x26f, 0x29e, 0x2cf, 0x2d8, 0x2fe, 0x317, 0x32c, 0x379, 0x3aa, 0x3b3, 0x3d9, 0x3f2, 0x407, 0x461, 0x50a, 0x58b, 0x592, 0xb66, 0xb85

Function 1:
Public fallback function
Entry block: 0xd9
Exit block: 0xd9
Body: 0xd9

