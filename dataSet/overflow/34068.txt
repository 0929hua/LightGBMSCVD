Block 0x0
[0x0:0xb]
---
Predecessors: []
Successors: [0xc, 0x3f]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH1 0x3f
0xb JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x3f
0xb: JUMPI 0x3f V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xc
[0xc:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x44]
---
0xc PUSH1 0x0
0xe CALLDATALOAD
0xf PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2d SWAP1
0x2e DIV
0x2f PUSH4 0xffffffff
0x34 AND
0x35 DUP1
0x36 PUSH4 0x8da5cb5b
0x3b EQ
0x3c PUSH1 0x44
0x3e JUMPI
---
0xc: V6 = 0x0
0xe: V7 = CALLDATALOAD 0x0
0xf: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x2f: V10 = 0xffffffff
0x34: V11 = AND 0xffffffff V9
0x36: V12 = 0x8da5cb5b
0x3b: V13 = EQ 0x8da5cb5b V11
0x3c: V14 = 0x44
0x3e: JUMPI 0x44 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x3f
[0x3f:0x43]
---
Predecessors: [0x0, 0xc]
Successors: []
---
0x3f JUMPDEST
0x40 PUSH1 0x0
0x42 DUP1
0x43 REVERT
---
0x3f: JUMPDEST 
0x40: V15 = 0x0
0x43: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x44
[0x44:0x49]
---
Predecessors: [0xc]
Successors: [0x4a, 0x4e]
---
0x44 JUMPDEST
0x45 CALLVALUE
0x46 ISZERO
0x47 PUSH1 0x4e
0x49 JUMPI
---
0x44: JUMPDEST 
0x45: V16 = CALLVALUE
0x46: V17 = ISZERO V16
0x47: V18 = 0x4e
0x49: JUMPI 0x4e V17
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4a
[0x4a:0x4d]
---
Predecessors: [0x44]
Successors: []
---
0x4a PUSH1 0x0
0x4c DUP1
0x4d REVERT
---
0x4a: V19 = 0x0
0x4d: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4e
[0x4e:0x53]
---
Predecessors: [0x44]
Successors: [0x96]
---
0x4e JUMPDEST
0x4f PUSH1 0x54
0x51 PUSH1 0x96
0x53 JUMP
---
0x4e: JUMPDEST 
0x4f: V20 = 0x54
0x51: V21 = 0x96
0x53: JUMP 0x96
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x54]
Exit stack: [V11, 0x54]

================================

Block 0x54
[0x54:0x95]
---
Predecessors: [0x96]
Successors: []
---
0x54 JUMPDEST
0x55 PUSH1 0x40
0x57 MLOAD
0x58 DUP1
0x59 DUP3
0x5a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6f AND
0x70 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x85 AND
0x86 DUP2
0x87 MSTORE
0x88 PUSH1 0x20
0x8a ADD
0x8b SWAP2
0x8c POP
0x8d POP
0x8e PUSH1 0x40
0x90 MLOAD
0x91 DUP1
0x92 SWAP2
0x93 SUB
0x94 SWAP1
0x95 RETURN
---
0x54: JUMPDEST 
0x55: V22 = 0x40
0x57: V23 = M[0x40]
0x5a: V24 = 0xffffffffffffffffffffffffffffffffffffffff
0x6f: V25 = AND 0xffffffffffffffffffffffffffffffffffffffff V39
0x70: V26 = 0xffffffffffffffffffffffffffffffffffffffff
0x85: V27 = AND 0xffffffffffffffffffffffffffffffffffffffff V25
0x87: M[V23] = V27
0x88: V28 = 0x20
0x8a: V29 = ADD 0x20 V23
0x8e: V30 = 0x40
0x90: V31 = M[0x40]
0x93: V32 = SUB V29 V31
0x95: RETURN V31 V32
---
Entry stack: [V11, 0x54, V39]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x54]

================================

Block 0x96
[0x96:0xba]
---
Predecessors: [0x4e]
Successors: [0x54]
---
0x96 JUMPDEST
0x97 PUSH1 0x0
0x99 DUP1
0x9a SWAP1
0x9b SLOAD
0x9c SWAP1
0x9d PUSH2 0x100
0xa0 EXP
0xa1 SWAP1
0xa2 DIV
0xa3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb8 AND
0xb9 DUP2
0xba JUMP
---
0x96: JUMPDEST 
0x97: V33 = 0x0
0x9b: V34 = S[0x0]
0x9d: V35 = 0x100
0xa0: V36 = EXP 0x100 0x0
0xa2: V37 = DIV V34 0x1
0xa3: V38 = 0xffffffffffffffffffffffffffffffffffffffff
0xb8: V39 = AND 0xffffffffffffffffffffffffffffffffffffffff V37
0xba: JUMP 0x54
---
Entry stack: [V11, 0x54]
Stack pops: 1
Stack additions: [S0, V39]
Exit stack: [V11, 0x54, V39]

================================

Block 0xbb
[0xbb:0xf3]
---
Predecessors: []
Successors: [0xf4]
---
0xbb STOP
0xbc LOG1
0xbd PUSH6 0x627a7a723058
0xc4 SHA3
0xc5 DUP5
0xc6 AND
0xc7 BALANCE
0xc8 MISSING 0xd8
0xc9 MISSING 0xbb
0xca SHR
0xcb MISSING 0xe6
0xcc MISSING 0xe8
0xcd SELFDESTRUCT
0xce PUSH27 0xcb250adca5518b865a92955e2815857c7a8a691005f60029606060
0xea BLOCKHASH
0xeb MSTORE
0xec PUSH1 0x4
0xee CALLDATASIZE
0xef LT
0xf0 PUSH2 0x62
0xf3 JUMPI
---
0xbb: STOP 
0xbc: LOG S0 S1 S2
0xbd: V40 = 0x627a7a723058
0xc4: V41 = SHA3 0x627a7a723058 S3
0xc6: V42 = AND S7 V41
0xc7: V43 = BALANCE V42
0xc8: MISSING 0xd8
0xc9: MISSING 0xbb
0xca: V44 = SHR S0 S1
0xcb: MISSING 0xe6
0xcc: MISSING 0xe8
0xcd: SELFDESTRUCT S0
0xce: V45 = 0xcb250adca5518b865a92955e2815857c7a8a691005f60029606060
0xea: V46 = BLOCKHASH 0xcb250adca5518b865a92955e2815857c7a8a691005f60029606060
0xeb: M[V46] = S0
0xec: V47 = 0x4
0xee: V48 = CALLDATASIZE
0xef: V49 = LT V48 0x4
0xf0: V50 = 0x62
0xf3: THROWI V49
---
Entry stack: []
Stack pops: 0
Stack additions: [V43, S4, S5, S6, S7, V44]
Exit stack: []

================================

Block 0xf4
[0xf4:0x127]
---
Predecessors: [0xbb]
Successors: [0x128]
---
0xf4 PUSH1 0x0
0xf6 CALLDATALOAD
0xf7 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x115 SWAP1
0x116 DIV
0x117 PUSH4 0xffffffff
0x11c AND
0x11d DUP1
0x11e PUSH4 0x288a39c
0x123 EQ
0x124 PUSH2 0xcd
0x127 JUMPI
---
0xf4: V51 = 0x0
0xf6: V52 = CALLDATALOAD 0x0
0xf7: V53 = 0x100000000000000000000000000000000000000000000000000000000
0x116: V54 = DIV V52 0x100000000000000000000000000000000000000000000000000000000
0x117: V55 = 0xffffffff
0x11c: V56 = AND 0xffffffff V54
0x11e: V57 = 0x288a39c
0x123: V58 = EQ 0x288a39c V56
0x124: V59 = 0xcd
0x127: THROWI V58
---
Entry stack: []
Stack pops: 0
Stack additions: [V56]
Exit stack: [V56]

================================

Block 0x128
[0x128:0x132]
---
Predecessors: [0xf4]
Successors: [0x133]
---
0x128 DUP1
0x129 PUSH4 0x6b31ee01
0x12e EQ
0x12f PUSH2 0xf6
0x132 JUMPI
---
0x129: V60 = 0x6b31ee01
0x12e: V61 = EQ 0x6b31ee01 V56
0x12f: V62 = 0xf6
0x132: THROWI V61
---
Entry stack: [V56]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V56]

================================

Block 0x133
[0x133:0x13d]
---
Predecessors: [0x128]
Successors: [0x13e]
---
0x133 DUP1
0x134 PUSH4 0x8da5cb5b
0x139 EQ
0x13a PUSH2 0x11f
0x13d JUMPI
---
0x134: V63 = 0x8da5cb5b
0x139: V64 = EQ 0x8da5cb5b V56
0x13a: V65 = 0x11f
0x13d: THROWI V64
---
Entry stack: [V56]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V56]

================================

Block 0x13e
[0x13e:0x148]
---
Predecessors: [0x133]
Successors: [0x149]
---
0x13e DUP1
0x13f PUSH4 0xde3bcb97
0x144 EQ
0x145 PUSH2 0x174
0x148 JUMPI
---
0x13f: V66 = 0xde3bcb97
0x144: V67 = EQ 0xde3bcb97 V56
0x145: V68 = 0x174
0x148: THROWI V67
---
Entry stack: [V56]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V56]

================================

Block 0x149
[0x149:0x154]
---
Predecessors: [0x13e]
Successors: [0x155]
---
0x149 JUMPDEST
0x14a PUSH1 0x2
0x14c SLOAD
0x14d CALLVALUE
0x14e LT
0x14f ISZERO
0x150 ISZERO
0x151 PUSH2 0xbb
0x154 JUMPI
---
0x149: JUMPDEST 
0x14a: V69 = 0x2
0x14c: V70 = S[0x2]
0x14d: V71 = CALLVALUE
0x14e: V72 = LT V71 V70
0x14f: V73 = ISZERO V72
0x150: V74 = ISZERO V73
0x151: V75 = 0xbb
0x154: THROWI V74
---
Entry stack: [V56]
Stack pops: 0
Stack additions: []
Exit stack: [V56]

================================

Block 0x155
[0x155:0x1a1]
---
Predecessors: [0x149]
Successors: [0x1a2]
---
0x155 CALLER
0x156 PUSH1 0x1
0x158 PUSH1 0x0
0x15a PUSH2 0x100
0x15d EXP
0x15e DUP2
0x15f SLOAD
0x160 DUP2
0x161 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x176 MUL
0x177 NOT
0x178 AND
0x179 SWAP1
0x17a DUP4
0x17b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x190 AND
0x191 MUL
0x192 OR
0x193 SWAP1
0x194 SSTORE
0x195 POP
0x196 PUSH3 0x69780
0x19a TIMESTAMP
0x19b ADD
0x19c PUSH1 0x3
0x19e DUP2
0x19f SWAP1
0x1a0 SSTORE
0x1a1 POP
---
0x155: V76 = CALLER
0x156: V77 = 0x1
0x158: V78 = 0x0
0x15a: V79 = 0x100
0x15d: V80 = EXP 0x100 0x0
0x15f: V81 = S[0x1]
0x161: V82 = 0xffffffffffffffffffffffffffffffffffffffff
0x176: V83 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x177: V84 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x178: V85 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V81
0x17b: V86 = 0xffffffffffffffffffffffffffffffffffffffff
0x190: V87 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0x191: V88 = MUL V87 0x1
0x192: V89 = OR V88 V85
0x194: S[0x1] = V89
0x196: V90 = 0x69780
0x19a: V91 = TIMESTAMP
0x19b: V92 = ADD V91 0x69780
0x19c: V93 = 0x3
0x1a0: S[0x3] = V92
---
Entry stack: [V56]
Stack pops: 0
Stack additions: []
Exit stack: [V56]

================================

Block 0x1a2
[0x1a2:0x1ba]
---
Predecessors: [0x155]
Successors: [0x1bb]
---
0x1a2 JUMPDEST
0x1a3 CALLVALUE
0x1a4 PUSH1 0x2
0x1a6 PUSH1 0x0
0x1a8 DUP3
0x1a9 DUP3
0x1aa SLOAD
0x1ab ADD
0x1ac SWAP3
0x1ad POP
0x1ae POP
0x1af DUP2
0x1b0 SWAP1
0x1b1 SSTORE
0x1b2 POP
0x1b3 STOP
0x1b4 JUMPDEST
0x1b5 CALLVALUE
0x1b6 ISZERO
0x1b7 PUSH2 0xd8
0x1ba JUMPI
---
0x1a2: JUMPDEST 
0x1a3: V94 = CALLVALUE
0x1a4: V95 = 0x2
0x1a6: V96 = 0x0
0x1aa: V97 = S[0x2]
0x1ab: V98 = ADD V97 V94
0x1b1: S[0x2] = V98
0x1b3: STOP 
0x1b4: JUMPDEST 
0x1b5: V99 = CALLVALUE
0x1b6: V100 = ISZERO V99
0x1b7: V101 = 0xd8
0x1ba: THROWI V100
---
Entry stack: [V56]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1bb
[0x1bb:0x1e3]
---
Predecessors: [0x1a2]
Successors: [0x1e4]
---
0x1bb PUSH1 0x0
0x1bd DUP1
0x1be REVERT
0x1bf JUMPDEST
0x1c0 PUSH2 0xe0
0x1c3 PUSH2 0x189
0x1c6 JUMP
0x1c7 JUMPDEST
0x1c8 PUSH1 0x40
0x1ca MLOAD
0x1cb DUP1
0x1cc DUP3
0x1cd DUP2
0x1ce MSTORE
0x1cf PUSH1 0x20
0x1d1 ADD
0x1d2 SWAP2
0x1d3 POP
0x1d4 POP
0x1d5 PUSH1 0x40
0x1d7 MLOAD
0x1d8 DUP1
0x1d9 SWAP2
0x1da SUB
0x1db SWAP1
0x1dc RETURN
0x1dd JUMPDEST
0x1de CALLVALUE
0x1df ISZERO
0x1e0 PUSH2 0x101
0x1e3 JUMPI
---
0x1bb: V102 = 0x0
0x1be: REVERT 0x0 0x0
0x1bf: JUMPDEST 
0x1c0: V103 = 0xe0
0x1c3: V104 = 0x189
0x1c6: THROW 
0x1c7: JUMPDEST 
0x1c8: V105 = 0x40
0x1ca: V106 = M[0x40]
0x1ce: M[V106] = S0
0x1cf: V107 = 0x20
0x1d1: V108 = ADD 0x20 V106
0x1d5: V109 = 0x40
0x1d7: V110 = M[0x40]
0x1da: V111 = SUB V108 V110
0x1dc: RETURN V110 V111
0x1dd: JUMPDEST 
0x1de: V112 = CALLVALUE
0x1df: V113 = ISZERO V112
0x1e0: V114 = 0x101
0x1e3: THROWI V113
---
Entry stack: []
Stack pops: 0
Stack additions: [0xe0]
Exit stack: []

================================

Block 0x1e4
[0x1e4:0x20c]
---
Predecessors: [0x1bb]
Successors: [0x20d]
---
0x1e4 PUSH1 0x0
0x1e6 DUP1
0x1e7 REVERT
0x1e8 JUMPDEST
0x1e9 PUSH2 0x109
0x1ec PUSH2 0x18f
0x1ef JUMP
0x1f0 JUMPDEST
0x1f1 PUSH1 0x40
0x1f3 MLOAD
0x1f4 DUP1
0x1f5 DUP3
0x1f6 DUP2
0x1f7 MSTORE
0x1f8 PUSH1 0x20
0x1fa ADD
0x1fb SWAP2
0x1fc POP
0x1fd POP
0x1fe PUSH1 0x40
0x200 MLOAD
0x201 DUP1
0x202 SWAP2
0x203 SUB
0x204 SWAP1
0x205 RETURN
0x206 JUMPDEST
0x207 CALLVALUE
0x208 ISZERO
0x209 PUSH2 0x12a
0x20c JUMPI
---
0x1e4: V115 = 0x0
0x1e7: REVERT 0x0 0x0
0x1e8: JUMPDEST 
0x1e9: V116 = 0x109
0x1ec: V117 = 0x18f
0x1ef: THROW 
0x1f0: JUMPDEST 
0x1f1: V118 = 0x40
0x1f3: V119 = M[0x40]
0x1f7: M[V119] = S0
0x1f8: V120 = 0x20
0x1fa: V121 = ADD 0x20 V119
0x1fe: V122 = 0x40
0x200: V123 = M[0x40]
0x203: V124 = SUB V121 V123
0x205: RETURN V123 V124
0x206: JUMPDEST 
0x207: V125 = CALLVALUE
0x208: V126 = ISZERO V125
0x209: V127 = 0x12a
0x20c: THROWI V126
---
Entry stack: []
Stack pops: 0
Stack additions: [0x109]
Exit stack: []

================================

Block 0x20d
[0x20d:0x261]
---
Predecessors: [0x1e4]
Successors: [0x262]
---
0x20d PUSH1 0x0
0x20f DUP1
0x210 REVERT
0x211 JUMPDEST
0x212 PUSH2 0x132
0x215 PUSH2 0x195
0x218 JUMP
0x219 JUMPDEST
0x21a PUSH1 0x40
0x21c MLOAD
0x21d DUP1
0x21e DUP3
0x21f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x234 AND
0x235 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24a AND
0x24b DUP2
0x24c MSTORE
0x24d PUSH1 0x20
0x24f ADD
0x250 SWAP2
0x251 POP
0x252 POP
0x253 PUSH1 0x40
0x255 MLOAD
0x256 DUP1
0x257 SWAP2
0x258 SUB
0x259 SWAP1
0x25a RETURN
0x25b JUMPDEST
0x25c CALLVALUE
0x25d ISZERO
0x25e PUSH2 0x17f
0x261 JUMPI
---
0x20d: V128 = 0x0
0x210: REVERT 0x0 0x0
0x211: JUMPDEST 
0x212: V129 = 0x132
0x215: V130 = 0x195
0x218: THROW 
0x219: JUMPDEST 
0x21a: V131 = 0x40
0x21c: V132 = M[0x40]
0x21f: V133 = 0xffffffffffffffffffffffffffffffffffffffff
0x234: V134 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x235: V135 = 0xffffffffffffffffffffffffffffffffffffffff
0x24a: V136 = AND 0xffffffffffffffffffffffffffffffffffffffff V134
0x24c: M[V132] = V136
0x24d: V137 = 0x20
0x24f: V138 = ADD 0x20 V132
0x253: V139 = 0x40
0x255: V140 = M[0x40]
0x258: V141 = SUB V138 V140
0x25a: RETURN V140 V141
0x25b: JUMPDEST 
0x25c: V142 = CALLVALUE
0x25d: V143 = ISZERO V142
0x25e: V144 = 0x17f
0x261: THROWI V143
---
Entry stack: []
Stack pops: 0
Stack additions: [0x132]
Exit stack: []

================================

Block 0x262
[0x262:0x2f8]
---
Predecessors: [0x20d]
Successors: [0x2f9]
---
0x262 PUSH1 0x0
0x264 DUP1
0x265 REVERT
0x266 JUMPDEST
0x267 PUSH2 0x187
0x26a PUSH2 0x1bb
0x26d JUMP
0x26e JUMPDEST
0x26f STOP
0x270 JUMPDEST
0x271 PUSH1 0x3
0x273 SLOAD
0x274 DUP2
0x275 JUMP
0x276 JUMPDEST
0x277 PUSH1 0x2
0x279 SLOAD
0x27a DUP2
0x27b JUMP
0x27c JUMPDEST
0x27d PUSH1 0x1
0x27f PUSH1 0x0
0x281 SWAP1
0x282 SLOAD
0x283 SWAP1
0x284 PUSH2 0x100
0x287 EXP
0x288 SWAP1
0x289 DIV
0x28a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x29f AND
0x2a0 DUP2
0x2a1 JUMP
0x2a2 JUMPDEST
0x2a3 PUSH1 0x0
0x2a5 DUP1
0x2a6 SWAP1
0x2a7 SLOAD
0x2a8 SWAP1
0x2a9 PUSH2 0x100
0x2ac EXP
0x2ad SWAP1
0x2ae DIV
0x2af PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c4 AND
0x2c5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2da AND
0x2db CALLER
0x2dc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f1 AND
0x2f2 EQ
0x2f3 ISZERO
0x2f4 ISZERO
0x2f5 PUSH2 0x216
0x2f8 JUMPI
---
0x262: V145 = 0x0
0x265: REVERT 0x0 0x0
0x266: JUMPDEST 
0x267: V146 = 0x187
0x26a: V147 = 0x1bb
0x26d: THROW 
0x26e: JUMPDEST 
0x26f: STOP 
0x270: JUMPDEST 
0x271: V148 = 0x3
0x273: V149 = S[0x3]
0x275: JUMP S0
0x276: JUMPDEST 
0x277: V150 = 0x2
0x279: V151 = S[0x2]
0x27b: JUMP S0
0x27c: JUMPDEST 
0x27d: V152 = 0x1
0x27f: V153 = 0x0
0x282: V154 = S[0x1]
0x284: V155 = 0x100
0x287: V156 = EXP 0x100 0x0
0x289: V157 = DIV V154 0x1
0x28a: V158 = 0xffffffffffffffffffffffffffffffffffffffff
0x29f: V159 = AND 0xffffffffffffffffffffffffffffffffffffffff V157
0x2a1: JUMP S0
0x2a2: JUMPDEST 
0x2a3: V160 = 0x0
0x2a7: V161 = S[0x0]
0x2a9: V162 = 0x100
0x2ac: V163 = EXP 0x100 0x0
0x2ae: V164 = DIV V161 0x1
0x2af: V165 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c4: V166 = AND 0xffffffffffffffffffffffffffffffffffffffff V164
0x2c5: V167 = 0xffffffffffffffffffffffffffffffffffffffff
0x2da: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff V166
0x2db: V169 = CALLER
0x2dc: V170 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f1: V171 = AND 0xffffffffffffffffffffffffffffffffffffffff V169
0x2f2: V172 = EQ V171 V168
0x2f3: V173 = ISZERO V172
0x2f4: V174 = ISZERO V173
0x2f5: V175 = 0x216
0x2f8: THROWI V174
---
Entry stack: []
Stack pops: 0
Stack additions: [0x187, V149, S0, V151, S0, V159, S0]
Exit stack: []

================================

Block 0x2f9
[0x2f9:0x309]
---
Predecessors: [0x262]
Successors: [0x30a]
---
0x2f9 PUSH1 0x0
0x2fb DUP1
0x2fc REVERT
0x2fd JUMPDEST
0x2fe PUSH1 0x3
0x300 SLOAD
0x301 TIMESTAMP
0x302 LT
0x303 ISZERO
0x304 ISZERO
0x305 ISZERO
0x306 PUSH2 0x227
0x309 JUMPI
---
0x2f9: V176 = 0x0
0x2fc: REVERT 0x0 0x0
0x2fd: JUMPDEST 
0x2fe: V177 = 0x3
0x300: V178 = S[0x3]
0x301: V179 = TIMESTAMP
0x302: V180 = LT V179 V178
0x303: V181 = ISZERO V180
0x304: V182 = ISZERO V181
0x305: V183 = ISZERO V182
0x306: V184 = 0x227
0x309: THROWI V183
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x30a
[0x30a:0x34b]
---
Predecessors: [0x2f9]
Successors: [0x34c]
---
0x30a PUSH1 0x0
0x30c DUP1
0x30d REVERT
0x30e JUMPDEST
0x30f CALLER
0x310 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x325 AND
0x326 PUSH2 0x8fc
0x329 PUSH1 0x2
0x32b SLOAD
0x32c SWAP1
0x32d DUP2
0x32e ISZERO
0x32f MUL
0x330 SWAP1
0x331 PUSH1 0x40
0x333 MLOAD
0x334 PUSH1 0x0
0x336 PUSH1 0x40
0x338 MLOAD
0x339 DUP1
0x33a DUP4
0x33b SUB
0x33c DUP2
0x33d DUP6
0x33e DUP9
0x33f DUP9
0x340 CALL
0x341 SWAP4
0x342 POP
0x343 POP
0x344 POP
0x345 POP
0x346 ISZERO
0x347 ISZERO
0x348 PUSH2 0x269
0x34b JUMPI
---
0x30a: V185 = 0x0
0x30d: REVERT 0x0 0x0
0x30e: JUMPDEST 
0x30f: V186 = CALLER
0x310: V187 = 0xffffffffffffffffffffffffffffffffffffffff
0x325: V188 = AND 0xffffffffffffffffffffffffffffffffffffffff V186
0x326: V189 = 0x8fc
0x329: V190 = 0x2
0x32b: V191 = S[0x2]
0x32e: V192 = ISZERO V191
0x32f: V193 = MUL V192 0x8fc
0x331: V194 = 0x40
0x333: V195 = M[0x40]
0x334: V196 = 0x0
0x336: V197 = 0x40
0x338: V198 = M[0x40]
0x33b: V199 = SUB V195 V198
0x340: V200 = CALL V193 V188 V191 V198 V199 V198 0x0
0x346: V201 = ISZERO V200
0x347: V202 = ISZERO V201
0x348: V203 = 0x269
0x34b: THROWI V202
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x34c
[0x34c:0x392]
---
Predecessors: [0x30a]
Successors: []
---
0x34c PUSH1 0x0
0x34e DUP1
0x34f REVERT
0x350 JUMPDEST
0x351 PUSH1 0x0
0x353 PUSH1 0x2
0x355 DUP2
0x356 SWAP1
0x357 SSTORE
0x358 POP
0x359 JUMP
0x35a STOP
0x35b LOG1
0x35c PUSH6 0x627a7a723058
0x363 SHA3
0x364 JUMP
0x365 PUSH9 0x9ef112080098741b65
0x36f MISSING 0xd5
0x370 EXP
0x371 MISSING 0xe
0x372 MISSING 0x4b
0x373 MISSING 0xb7
0x374 PUSH30 0x6e2fd1db31825367b11c3a49314350029
---
0x34c: V204 = 0x0
0x34f: REVERT 0x0 0x0
0x350: JUMPDEST 
0x351: V205 = 0x0
0x353: V206 = 0x2
0x357: S[0x2] = 0x0
0x359: JUMP S0
0x35a: STOP 
0x35b: LOG S0 S1 S2
0x35c: V207 = 0x627a7a723058
0x363: V208 = SHA3 0x627a7a723058 S3
0x364: JUMP V208
0x365: V209 = 0x9ef112080098741b65
0x36f: MISSING 0xd5
0x370: V210 = EXP S0 S1
0x371: MISSING 0xe
0x372: MISSING 0x4b
0x373: MISSING 0xb7
0x374: V211 = 0x6e2fd1db31825367b11c3a49314350029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x9ef112080098741b65, V210, 0x6e2fd1db31825367b11c3a49314350029]
Exit stack: []

================================

Function 0:
Public function signature: 0x8da5cb5b
Entry block: 0x44
Exit block: 0x54
Body: 0x44, 0x4a, 0x4e, 0x54, 0x96

Function 1:
Public fallback function
Entry block: 0x3f
Exit block: 0x3f
Body: 0x3f

