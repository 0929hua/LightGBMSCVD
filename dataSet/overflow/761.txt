Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x41]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x41
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x41
0xc: JUMPI 0x41 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x46]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x11be40e0
0x3c EQ
0x3d PUSH2 0x46
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x11be40e0
0x3c: V13 = EQ 0x11be40e0 V11
0x3d: V14 = 0x46
0x40: JUMPI 0x46 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x45]
---
Predecessors: [0x0, 0xd]
Successors: []
---
0x41 JUMPDEST
0x42 PUSH1 0x0
0x44 DUP1
0x45 REVERT
---
0x41: JUMPDEST 
0x42: V15 = 0x0
0x45: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x46
[0x46:0x4d]
---
Predecessors: [0xd]
Successors: [0x4e, 0x52]
---
0x46 JUMPDEST
0x47 CALLVALUE
0x48 DUP1
0x49 ISZERO
0x4a PUSH2 0x52
0x4d JUMPI
---
0x46: JUMPDEST 
0x47: V16 = CALLVALUE
0x49: V17 = ISZERO V16
0x4a: V18 = 0x52
0x4d: JUMPI 0x52 V17
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V16]
Exit stack: [V11, V16]

================================

Block 0x4e
[0x4e:0x51]
---
Predecessors: [0x46]
Successors: []
---
0x4e PUSH1 0x0
0x50 DUP1
0x51 REVERT
---
0x4e: V19 = 0x0
0x51: REVERT 0x0 0x0
---
Entry stack: [V11, V16]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V16]

================================

Block 0x52
[0x52:0x12c]
---
Predecessors: [0x46]
Successors: [0x12f]
---
0x52 JUMPDEST
0x53 POP
0x54 PUSH2 0x12d
0x57 PUSH1 0x4
0x59 DUP1
0x5a CALLDATASIZE
0x5b SUB
0x5c DUP2
0x5d ADD
0x5e SWAP1
0x5f DUP1
0x60 DUP1
0x61 CALLDATALOAD
0x62 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x77 AND
0x78 SWAP1
0x79 PUSH1 0x20
0x7b ADD
0x7c SWAP1
0x7d SWAP3
0x7e SWAP2
0x7f SWAP1
0x80 DUP1
0x81 CALLDATALOAD
0x82 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x97 AND
0x98 SWAP1
0x99 PUSH1 0x20
0x9b ADD
0x9c SWAP1
0x9d SWAP3
0x9e SWAP2
0x9f SWAP1
0xa0 DUP1
0xa1 CALLDATALOAD
0xa2 SWAP1
0xa3 PUSH1 0x20
0xa5 ADD
0xa6 SWAP1
0xa7 DUP3
0xa8 ADD
0xa9 DUP1
0xaa CALLDATALOAD
0xab SWAP1
0xac PUSH1 0x20
0xae ADD
0xaf SWAP1
0xb0 DUP1
0xb1 DUP1
0xb2 PUSH1 0x20
0xb4 MUL
0xb5 PUSH1 0x20
0xb7 ADD
0xb8 PUSH1 0x40
0xba MLOAD
0xbb SWAP1
0xbc DUP2
0xbd ADD
0xbe PUSH1 0x40
0xc0 MSTORE
0xc1 DUP1
0xc2 SWAP4
0xc3 SWAP3
0xc4 SWAP2
0xc5 SWAP1
0xc6 DUP2
0xc7 DUP2
0xc8 MSTORE
0xc9 PUSH1 0x20
0xcb ADD
0xcc DUP4
0xcd DUP4
0xce PUSH1 0x20
0xd0 MUL
0xd1 DUP1
0xd2 DUP3
0xd3 DUP5
0xd4 CALLDATACOPY
0xd5 DUP3
0xd6 ADD
0xd7 SWAP2
0xd8 POP
0xd9 POP
0xda POP
0xdb POP
0xdc POP
0xdd POP
0xde SWAP2
0xdf SWAP3
0xe0 SWAP2
0xe1 SWAP3
0xe2 SWAP1
0xe3 DUP1
0xe4 CALLDATALOAD
0xe5 SWAP1
0xe6 PUSH1 0x20
0xe8 ADD
0xe9 SWAP1
0xea DUP3
0xeb ADD
0xec DUP1
0xed CALLDATALOAD
0xee SWAP1
0xef PUSH1 0x20
0xf1 ADD
0xf2 SWAP1
0xf3 DUP1
0xf4 DUP1
0xf5 PUSH1 0x20
0xf7 MUL
0xf8 PUSH1 0x20
0xfa ADD
0xfb PUSH1 0x40
0xfd MLOAD
0xfe SWAP1
0xff DUP2
0x100 ADD
0x101 PUSH1 0x40
0x103 MSTORE
0x104 DUP1
0x105 SWAP4
0x106 SWAP3
0x107 SWAP2
0x108 SWAP1
0x109 DUP2
0x10a DUP2
0x10b MSTORE
0x10c PUSH1 0x20
0x10e ADD
0x10f DUP4
0x110 DUP4
0x111 PUSH1 0x20
0x113 MUL
0x114 DUP1
0x115 DUP3
0x116 DUP5
0x117 CALLDATACOPY
0x118 DUP3
0x119 ADD
0x11a SWAP2
0x11b POP
0x11c POP
0x11d POP
0x11e POP
0x11f POP
0x120 POP
0x121 SWAP2
0x122 SWAP3
0x123 SWAP2
0x124 SWAP3
0x125 SWAP1
0x126 POP
0x127 POP
0x128 POP
0x129 PUSH2 0x12f
0x12c JUMP
---
0x52: JUMPDEST 
0x54: V20 = 0x12d
0x57: V21 = 0x4
0x5a: V22 = CALLDATASIZE
0x5b: V23 = SUB V22 0x4
0x5d: V24 = ADD 0x4 V23
0x61: V25 = CALLDATALOAD 0x4
0x62: V26 = 0xffffffffffffffffffffffffffffffffffffffff
0x77: V27 = AND 0xffffffffffffffffffffffffffffffffffffffff V25
0x79: V28 = 0x20
0x7b: V29 = ADD 0x20 0x4
0x81: V30 = CALLDATALOAD 0x24
0x82: V31 = 0xffffffffffffffffffffffffffffffffffffffff
0x97: V32 = AND 0xffffffffffffffffffffffffffffffffffffffff V30
0x99: V33 = 0x20
0x9b: V34 = ADD 0x20 0x24
0xa1: V35 = CALLDATALOAD 0x44
0xa3: V36 = 0x20
0xa5: V37 = ADD 0x20 0x44
0xa8: V38 = ADD 0x4 V35
0xaa: V39 = CALLDATALOAD V38
0xac: V40 = 0x20
0xae: V41 = ADD 0x20 V38
0xb2: V42 = 0x20
0xb4: V43 = MUL 0x20 V39
0xb5: V44 = 0x20
0xb7: V45 = ADD 0x20 V43
0xb8: V46 = 0x40
0xba: V47 = M[0x40]
0xbd: V48 = ADD V47 V45
0xbe: V49 = 0x40
0xc0: M[0x40] = V48
0xc8: M[V47] = V39
0xc9: V50 = 0x20
0xcb: V51 = ADD 0x20 V47
0xce: V52 = 0x20
0xd0: V53 = MUL 0x20 V39
0xd4: CALLDATACOPY V51 V41 V53
0xd6: V54 = ADD V51 V53
0xe4: V55 = CALLDATALOAD 0x64
0xe6: V56 = 0x20
0xe8: V57 = ADD 0x20 0x64
0xeb: V58 = ADD 0x4 V55
0xed: V59 = CALLDATALOAD V58
0xef: V60 = 0x20
0xf1: V61 = ADD 0x20 V58
0xf5: V62 = 0x20
0xf7: V63 = MUL 0x20 V59
0xf8: V64 = 0x20
0xfa: V65 = ADD 0x20 V63
0xfb: V66 = 0x40
0xfd: V67 = M[0x40]
0x100: V68 = ADD V67 V65
0x101: V69 = 0x40
0x103: M[0x40] = V68
0x10b: M[V67] = V59
0x10c: V70 = 0x20
0x10e: V71 = ADD 0x20 V67
0x111: V72 = 0x20
0x113: V73 = MUL 0x20 V59
0x117: CALLDATACOPY V71 V61 V73
0x119: V74 = ADD V71 V73
0x129: V75 = 0x12f
0x12c: JUMP 0x12f
---
Entry stack: [V11, V16]
Stack pops: 1
Stack additions: [0x12d, V27, V32, V47, V67]
Exit stack: [V11, 0x12d, V27, V32, V47, V67]

================================

Block 0x12d
[0x12d:0x12e]
---
Predecessors: [0x2dd]
Successors: []
---
0x12d JUMPDEST
0x12e STOP
---
0x12d: JUMPDEST 
0x12e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x12f
[0x12f:0x13d]
---
Predecessors: [0x52]
Successors: [0x13e, 0x142]
---
0x12f JUMPDEST
0x130 PUSH1 0x0
0x132 DUP1
0x133 DUP3
0x134 MLOAD
0x135 DUP5
0x136 MLOAD
0x137 EQ
0x138 ISZERO
0x139 ISZERO
0x13a PUSH2 0x142
0x13d JUMPI
---
0x12f: JUMPDEST 
0x130: V76 = 0x0
0x134: V77 = M[V67]
0x136: V78 = M[V47]
0x137: V79 = EQ V78 V77
0x138: V80 = ISZERO V79
0x139: V81 = ISZERO V80
0x13a: V82 = 0x142
0x13d: JUMPI 0x142 V81
---
Entry stack: [V11, 0x12d, V27, V32, V47, V67]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0]
Exit stack: [V11, 0x12d, V27, V32, V47, V67, 0x0, 0x0]

================================

Block 0x13e
[0x13e:0x141]
---
Predecessors: [0x12f]
Successors: []
---
0x13e PUSH1 0x0
0x140 DUP1
0x141 REVERT
---
0x13e: V83 = 0x0
0x141: REVERT 0x0 0x0
---
Entry stack: [V11, 0x12d, V27, V32, V47, V67, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x12d, V27, V32, V47, V67, 0x0, 0x0]

================================

Block 0x142
[0x142:0x179]
---
Predecessors: [0x12f]
Successors: [0x17a, 0x17e]
---
0x142 JUMPDEST
0x143 PUSH1 0x0
0x145 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15a AND
0x15b DUP7
0x15c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x171 AND
0x172 EQ
0x173 ISZERO
0x174 ISZERO
0x175 ISZERO
0x176 PUSH2 0x17e
0x179 JUMPI
---
0x142: JUMPDEST 
0x143: V84 = 0x0
0x145: V85 = 0xffffffffffffffffffffffffffffffffffffffff
0x15a: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x15c: V87 = 0xffffffffffffffffffffffffffffffffffffffff
0x171: V88 = AND 0xffffffffffffffffffffffffffffffffffffffff V27
0x172: V89 = EQ V88 0x0
0x173: V90 = ISZERO V89
0x174: V91 = ISZERO V90
0x175: V92 = ISZERO V91
0x176: V93 = 0x17e
0x179: JUMPI 0x17e V92
---
Entry stack: [V11, 0x12d, V27, V32, V47, V67, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V11, 0x12d, V27, V32, V47, V67, 0x0, 0x0]

================================

Block 0x17a
[0x17a:0x17d]
---
Predecessors: [0x142]
Successors: []
---
0x17a PUSH1 0x0
0x17c DUP1
0x17d REVERT
---
0x17a: V94 = 0x0
0x17d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x12d, V27, V32, V47, V67, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x12d, V27, V32, V47, V67, 0x0, 0x0]

================================

Block 0x17e
[0x17e:0x185]
---
Predecessors: [0x142]
Successors: [0x186]
---
0x17e JUMPDEST
0x17f DUP6
0x180 SWAP2
0x181 POP
0x182 PUSH1 0x0
0x184 SWAP1
0x185 POP
---
0x17e: JUMPDEST 
0x182: V95 = 0x0
---
Entry stack: [V11, 0x12d, V27, V32, V47, V67, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S5, 0x0]
Exit stack: [V11, 0x12d, V27, V32, V47, V67, V27, 0x0]

================================

Block 0x186
[0x186:0x18f]
---
Predecessors: [0x17e, 0x2be]
Successors: [0x190, 0x2dd]
---
0x186 JUMPDEST
0x187 DUP4
0x188 MLOAD
0x189 DUP2
0x18a LT
0x18b ISZERO
0x18c PUSH2 0x2dd
0x18f JUMPI
---
0x186: JUMPDEST 
0x188: V96 = M[V47]
0x18a: V97 = LT S0 V96
0x18b: V98 = ISZERO V97
0x18c: V99 = 0x2dd
0x18f: JUMPI 0x2dd V98
---
Entry stack: [V11, 0x12d, V27, V32, V47, V67, V27, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x12d, V27, V32, V47, V67, V27, S0]

================================

Block 0x190
[0x190:0x1b8]
---
Predecessors: [0x186]
Successors: [0x1b9, 0x1ba]
---
0x190 DUP2
0x191 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a6 AND
0x1a7 PUSH4 0x23b872dd
0x1ac DUP7
0x1ad DUP7
0x1ae DUP5
0x1af DUP2
0x1b0 MLOAD
0x1b1 DUP2
0x1b2 LT
0x1b3 ISZERO
0x1b4 ISZERO
0x1b5 PUSH2 0x1ba
0x1b8 JUMPI
---
0x191: V100 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a6: V101 = AND 0xffffffffffffffffffffffffffffffffffffffff V27
0x1a7: V102 = 0x23b872dd
0x1b0: V103 = M[V47]
0x1b2: V104 = LT S0 V103
0x1b3: V105 = ISZERO V104
0x1b4: V106 = ISZERO V105
0x1b5: V107 = 0x1ba
0x1b8: JUMPI 0x1ba V106
---
Entry stack: [V11, 0x12d, V27, V32, V47, V67, V27, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V101, 0x23b872dd, S4, S3, S0]
Exit stack: [V11, 0x12d, V27, V32, V47, V67, V27, S0, V101, 0x23b872dd, V32, V47, S0]

================================

Block 0x1b9
[0x1b9:0x1b9]
---
Predecessors: [0x190]
Successors: []
---
0x1b9 INVALID
---
0x1b9: INVALID 
---
Entry stack: [V11, 0x12d, V27, V32, V47, V67, V27, S5, V101, 0x23b872dd, V32, V47, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x12d, V27, V32, V47, V67, V27, S5, V101, 0x23b872dd, V32, V47, S0]

================================

Block 0x1ba
[0x1ba:0x1d0]
---
Predecessors: [0x190]
Successors: [0x1d1, 0x1d2]
---
0x1ba JUMPDEST
0x1bb SWAP1
0x1bc PUSH1 0x20
0x1be ADD
0x1bf SWAP1
0x1c0 PUSH1 0x20
0x1c2 MUL
0x1c3 ADD
0x1c4 MLOAD
0x1c5 DUP7
0x1c6 DUP6
0x1c7 DUP2
0x1c8 MLOAD
0x1c9 DUP2
0x1ca LT
0x1cb ISZERO
0x1cc ISZERO
0x1cd PUSH2 0x1d2
0x1d0 JUMPI
---
0x1ba: JUMPDEST 
0x1bc: V108 = 0x20
0x1be: V109 = ADD 0x20 V47
0x1c0: V110 = 0x20
0x1c2: V111 = MUL 0x20 S0
0x1c3: V112 = ADD V111 V109
0x1c4: V113 = M[V112]
0x1c8: V114 = M[V67]
0x1ca: V115 = LT S5 V114
0x1cb: V116 = ISZERO V115
0x1cc: V117 = ISZERO V116
0x1cd: V118 = 0x1d2
0x1d0: JUMPI 0x1d2 V117
---
Entry stack: [V11, 0x12d, V27, V32, V47, V67, V27, S5, V101, 0x23b872dd, V32, V47, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, V113, S7, S5]
Exit stack: [V11, 0x12d, V27, V32, V47, V67, V27, S5, V101, 0x23b872dd, V32, V113, V67, S5]

================================

Block 0x1d1
[0x1d1:0x1d1]
---
Predecessors: [0x1ba]
Successors: []
---
0x1d1 INVALID
---
0x1d1: INVALID 
---
Entry stack: [V11, 0x12d, V27, V32, V47, V67, V27, S6, V101, 0x23b872dd, V32, V113, V67, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x12d, V27, V32, V47, V67, V27, S6, V101, 0x23b872dd, V32, V113, V67, S0]

================================

Block 0x1d2
[0x1d2:0x28f]
---
Predecessors: [0x1ba]
Successors: [0x290, 0x294]
---
0x1d2 JUMPDEST
0x1d3 SWAP1
0x1d4 PUSH1 0x20
0x1d6 ADD
0x1d7 SWAP1
0x1d8 PUSH1 0x20
0x1da MUL
0x1db ADD
0x1dc MLOAD
0x1dd PUSH1 0x40
0x1df MLOAD
0x1e0 DUP5
0x1e1 PUSH4 0xffffffff
0x1e6 AND
0x1e7 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x205 MUL
0x206 DUP2
0x207 MSTORE
0x208 PUSH1 0x4
0x20a ADD
0x20b DUP1
0x20c DUP5
0x20d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x222 AND
0x223 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x238 AND
0x239 DUP2
0x23a MSTORE
0x23b PUSH1 0x20
0x23d ADD
0x23e DUP4
0x23f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x254 AND
0x255 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x26a AND
0x26b DUP2
0x26c MSTORE
0x26d PUSH1 0x20
0x26f ADD
0x270 DUP3
0x271 DUP2
0x272 MSTORE
0x273 PUSH1 0x20
0x275 ADD
0x276 SWAP4
0x277 POP
0x278 POP
0x279 POP
0x27a POP
0x27b PUSH1 0x20
0x27d PUSH1 0x40
0x27f MLOAD
0x280 DUP1
0x281 DUP4
0x282 SUB
0x283 DUP2
0x284 PUSH1 0x0
0x286 DUP8
0x287 DUP1
0x288 EXTCODESIZE
0x289 ISZERO
0x28a DUP1
0x28b ISZERO
0x28c PUSH2 0x294
0x28f JUMPI
---
0x1d2: JUMPDEST 
0x1d4: V119 = 0x20
0x1d6: V120 = ADD 0x20 V67
0x1d8: V121 = 0x20
0x1da: V122 = MUL 0x20 S0
0x1db: V123 = ADD V122 V120
0x1dc: V124 = M[V123]
0x1dd: V125 = 0x40
0x1df: V126 = M[0x40]
0x1e1: V127 = 0xffffffff
0x1e6: V128 = AND 0xffffffff 0x23b872dd
0x1e7: V129 = 0x100000000000000000000000000000000000000000000000000000000
0x205: V130 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x23b872dd
0x207: M[V126] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x208: V131 = 0x4
0x20a: V132 = ADD 0x4 V126
0x20d: V133 = 0xffffffffffffffffffffffffffffffffffffffff
0x222: V134 = AND 0xffffffffffffffffffffffffffffffffffffffff V32
0x223: V135 = 0xffffffffffffffffffffffffffffffffffffffff
0x238: V136 = AND 0xffffffffffffffffffffffffffffffffffffffff V134
0x23a: M[V132] = V136
0x23b: V137 = 0x20
0x23d: V138 = ADD 0x20 V132
0x23f: V139 = 0xffffffffffffffffffffffffffffffffffffffff
0x254: V140 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x255: V141 = 0xffffffffffffffffffffffffffffffffffffffff
0x26a: V142 = AND 0xffffffffffffffffffffffffffffffffffffffff V140
0x26c: M[V138] = V142
0x26d: V143 = 0x20
0x26f: V144 = ADD 0x20 V138
0x272: M[V144] = V124
0x273: V145 = 0x20
0x275: V146 = ADD 0x20 V144
0x27b: V147 = 0x20
0x27d: V148 = 0x40
0x27f: V149 = M[0x40]
0x282: V150 = SUB V146 V149
0x284: V151 = 0x0
0x288: V152 = EXTCODESIZE V101
0x289: V153 = ISZERO V152
0x28b: V154 = ISZERO V153
0x28c: V155 = 0x294
0x28f: JUMPI 0x294 V154
---
Entry stack: [V11, 0x12d, V27, V32, V47, V67, V27, S6, V101, 0x23b872dd, V32, V113, V67, S0]
Stack pops: 6
Stack additions: [S5, S4, V146, 0x20, V149, V150, V149, 0x0, S5, V153]
Exit stack: [V11, 0x12d, V27, V32, V47, V67, V27, S6, V101, 0x23b872dd, V146, 0x20, V149, V150, V149, 0x0, V101, V153]

================================

Block 0x290
[0x290:0x293]
---
Predecessors: [0x1d2]
Successors: []
---
0x290 PUSH1 0x0
0x292 DUP1
0x293 REVERT
---
0x290: V156 = 0x0
0x293: REVERT 0x0 0x0
---
Entry stack: [V11, 0x12d, V27, V32, V47, V67, V27, S10, V101, 0x23b872dd, V146, 0x20, V149, V150, V149, 0x0, V101, V153]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x12d, V27, V32, V47, V67, V27, S10, V101, 0x23b872dd, V146, 0x20, V149, V150, V149, 0x0, V101, V153]

================================

Block 0x294
[0x294:0x29e]
---
Predecessors: [0x1d2]
Successors: [0x29f, 0x2a8]
---
0x294 JUMPDEST
0x295 POP
0x296 GAS
0x297 CALL
0x298 ISZERO
0x299 DUP1
0x29a ISZERO
0x29b PUSH2 0x2a8
0x29e JUMPI
---
0x294: JUMPDEST 
0x296: V157 = GAS
0x297: V158 = CALL V157 V101 0x0 V149 V150 V149 0x20
0x298: V159 = ISZERO V158
0x29a: V160 = ISZERO V159
0x29b: V161 = 0x2a8
0x29e: JUMPI 0x2a8 V160
---
Entry stack: [V11, 0x12d, V27, V32, V47, V67, V27, S10, V101, 0x23b872dd, V146, 0x20, V149, V150, V149, 0x0, V101, V153]
Stack pops: 7
Stack additions: [V159]
Exit stack: [V11, 0x12d, V27, V32, V47, V67, V27, S10, V101, 0x23b872dd, V146, V159]

================================

Block 0x29f
[0x29f:0x2a7]
---
Predecessors: [0x294]
Successors: []
---
0x29f RETURNDATASIZE
0x2a0 PUSH1 0x0
0x2a2 DUP1
0x2a3 RETURNDATACOPY
0x2a4 RETURNDATASIZE
0x2a5 PUSH1 0x0
0x2a7 REVERT
---
0x29f: V162 = RETURNDATASIZE
0x2a0: V163 = 0x0
0x2a3: RETURNDATACOPY 0x0 0x0 V162
0x2a4: V164 = RETURNDATASIZE
0x2a5: V165 = 0x0
0x2a7: REVERT 0x0 V164
---
Entry stack: [V11, 0x12d, V27, V32, V47, V67, V27, S4, V101, 0x23b872dd, V146, V159]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x12d, V27, V32, V47, V67, V27, S4, V101, 0x23b872dd, V146, V159]

================================

Block 0x2a8
[0x2a8:0x2b9]
---
Predecessors: [0x294]
Successors: [0x2ba, 0x2be]
---
0x2a8 JUMPDEST
0x2a9 POP
0x2aa POP
0x2ab POP
0x2ac POP
0x2ad PUSH1 0x40
0x2af MLOAD
0x2b0 RETURNDATASIZE
0x2b1 PUSH1 0x20
0x2b3 DUP2
0x2b4 LT
0x2b5 ISZERO
0x2b6 PUSH2 0x2be
0x2b9 JUMPI
---
0x2a8: JUMPDEST 
0x2ad: V166 = 0x40
0x2af: V167 = M[0x40]
0x2b0: V168 = RETURNDATASIZE
0x2b1: V169 = 0x20
0x2b4: V170 = LT V168 0x20
0x2b5: V171 = ISZERO V170
0x2b6: V172 = 0x2be
0x2b9: JUMPI 0x2be V171
---
Entry stack: [V11, 0x12d, V27, V32, V47, V67, V27, S4, V101, 0x23b872dd, V146, V159]
Stack pops: 4
Stack additions: [V167, V168]
Exit stack: [V11, 0x12d, V27, V32, V47, V67, V27, S4, V167, V168]

================================

Block 0x2ba
[0x2ba:0x2bd]
---
Predecessors: [0x2a8]
Successors: []
---
0x2ba PUSH1 0x0
0x2bc DUP1
0x2bd REVERT
---
0x2ba: V173 = 0x0
0x2bd: REVERT 0x0 0x0
---
Entry stack: [V11, 0x12d, V27, V32, V47, V67, V27, S2, V167, V168]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x12d, V27, V32, V47, V67, V27, S2, V167, V168]

================================

Block 0x2be
[0x2be:0x2dc]
---
Predecessors: [0x2a8]
Successors: [0x186]
---
0x2be JUMPDEST
0x2bf DUP2
0x2c0 ADD
0x2c1 SWAP1
0x2c2 DUP1
0x2c3 DUP1
0x2c4 MLOAD
0x2c5 SWAP1
0x2c6 PUSH1 0x20
0x2c8 ADD
0x2c9 SWAP1
0x2ca SWAP3
0x2cb SWAP2
0x2cc SWAP1
0x2cd POP
0x2ce POP
0x2cf POP
0x2d0 POP
0x2d1 DUP1
0x2d2 DUP1
0x2d3 PUSH1 0x1
0x2d5 ADD
0x2d6 SWAP2
0x2d7 POP
0x2d8 POP
0x2d9 PUSH2 0x186
0x2dc JUMP
---
0x2be: JUMPDEST 
0x2c0: V174 = ADD V167 V168
0x2c4: V175 = M[V167]
0x2c6: V176 = 0x20
0x2c8: V177 = ADD 0x20 V167
0x2d3: V178 = 0x1
0x2d5: V179 = ADD 0x1 S2
0x2d9: V180 = 0x186
0x2dc: JUMP 0x186
---
Entry stack: [V11, 0x12d, V27, V32, V47, V67, V27, S2, V167, V168]
Stack pops: 3
Stack additions: [V179]
Exit stack: [V11, 0x12d, V27, V32, V47, V67, V27, V179]

================================

Block 0x2dd
[0x2dd:0x2e4]
---
Predecessors: [0x186]
Successors: [0x12d]
---
0x2dd JUMPDEST
0x2de POP
0x2df POP
0x2e0 POP
0x2e1 POP
0x2e2 POP
0x2e3 POP
0x2e4 JUMP
---
0x2dd: JUMPDEST 
0x2e4: JUMP 0x12d
---
Entry stack: [V11, 0x12d, V27, V32, V47, V67, V27, S0]
Stack pops: 7
Stack additions: []
Exit stack: [V11]

================================

Block 0x2e5
[0x2e5:0x310]
---
Predecessors: []
Successors: []
---
0x2e5 STOP
0x2e6 LOG1
0x2e7 PUSH6 0x627a7a723058
0x2ee SHA3
0x2ef RETURNDATACOPY
0x2f0 GASLIMIT
0x2f1 MISSING 0x48
0x2f2 MISSING 0xb9
0x2f3 ADDRESS
0x2f4 MISSING 0xeb
0x2f5 MISSING 0x5e
0x2f6 SWAP14
0x2f7 PUSH18 0x94fd380a2f4a6dda813b725df09e1804576a
0x30a MISSING 0x49
0x30b PUSH4 0x246aab00
0x310 MISSING 0x29
---
0x2e5: STOP 
0x2e6: LOG S0 S1 S2
0x2e7: V181 = 0x627a7a723058
0x2ee: V182 = SHA3 0x627a7a723058 S3
0x2ef: RETURNDATACOPY V182 S4 S5
0x2f0: V183 = GASLIMIT
0x2f1: MISSING 0x48
0x2f2: MISSING 0xb9
0x2f3: V184 = ADDRESS
0x2f4: MISSING 0xeb
0x2f5: MISSING 0x5e
0x2f7: V185 = 0x94fd380a2f4a6dda813b725df09e1804576a
0x30a: MISSING 0x49
0x30b: V186 = 0x246aab00
0x310: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V183, V184, 0x94fd380a2f4a6dda813b725df09e1804576a, S14, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S0, 0x246aab00]
Exit stack: []

================================

Function 0:
Public function signature: 0x11be40e0
Entry block: 0x46
Exit block: 0x2ba
Body: 0x46, 0x4e, 0x52, 0x12d, 0x12f, 0x13e, 0x142, 0x17a, 0x17e, 0x186, 0x190, 0x1b9, 0x1ba, 0x1d1, 0x1d2, 0x290, 0x294, 0x29f, 0x2a8, 0x2ba, 0x2be, 0x2dd

Function 1:
Public fallback function
Entry block: 0x41
Exit block: 0x41
Body: 0x41

