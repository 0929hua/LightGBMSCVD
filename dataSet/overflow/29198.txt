Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x67]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x4e71e0c8
0x3c EQ
0x3d PUSH2 0x67
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x4e71e0c8
0x3c: V13 = EQ 0x4e71e0c8 V11
0x3d: V14 = 0x67
0x40: JUMPI 0x67 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x7c]
---
0x41 DUP1
0x42 PUSH4 0x8da5cb5b
0x47 EQ
0x48 PUSH2 0x7c
0x4b JUMPI
---
0x42: V15 = 0x8da5cb5b
0x47: V16 = EQ 0x8da5cb5b V11
0x48: V17 = 0x7c
0x4b: JUMPI 0x7c V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xd1]
---
0x4c DUP1
0x4d PUSH4 0xe30c3978
0x52 EQ
0x53 PUSH2 0xd1
0x56 JUMPI
---
0x4d: V18 = 0xe30c3978
0x52: V19 = EQ 0xe30c3978 V11
0x53: V20 = 0xd1
0x56: JUMPI 0xd1 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x126]
---
0x57 DUP1
0x58 PUSH4 0xf2fde38b
0x5d EQ
0x5e PUSH2 0x126
0x61 JUMPI
---
0x58: V21 = 0xf2fde38b
0x5d: V22 = EQ 0xf2fde38b V11
0x5e: V23 = 0x126
0x61: JUMPI 0x126 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x66]
---
Predecessors: [0x0, 0x57]
Successors: []
---
0x62 JUMPDEST
0x63 PUSH1 0x0
0x65 DUP1
0x66 REVERT
---
0x62: JUMPDEST 
0x63: V24 = 0x0
0x66: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x67
[0x67:0x6d]
---
Predecessors: [0xd]
Successors: [0x6e, 0x72]
---
0x67 JUMPDEST
0x68 CALLVALUE
0x69 ISZERO
0x6a PUSH2 0x72
0x6d JUMPI
---
0x67: JUMPDEST 
0x68: V25 = CALLVALUE
0x69: V26 = ISZERO V25
0x6a: V27 = 0x72
0x6d: JUMPI 0x72 V26
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6e
[0x6e:0x71]
---
Predecessors: [0x67]
Successors: []
---
0x6e PUSH1 0x0
0x70 DUP1
0x71 REVERT
---
0x6e: V28 = 0x0
0x71: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x72
[0x72:0x79]
---
Predecessors: [0x67]
Successors: [0x15f]
---
0x72 JUMPDEST
0x73 PUSH2 0x7a
0x76 PUSH2 0x15f
0x79 JUMP
---
0x72: JUMPDEST 
0x73: V29 = 0x7a
0x76: V30 = 0x15f
0x79: JUMP 0x15f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x7a]
Exit stack: [V11, 0x7a]

================================

Block 0x7a
[0x7a:0x7b]
---
Predecessors: [0x1bb]
Successors: []
---
0x7a JUMPDEST
0x7b STOP
---
0x7a: JUMPDEST 
0x7b: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7c
[0x7c:0x82]
---
Predecessors: [0x41]
Successors: [0x83, 0x87]
---
0x7c JUMPDEST
0x7d CALLVALUE
0x7e ISZERO
0x7f PUSH2 0x87
0x82 JUMPI
---
0x7c: JUMPDEST 
0x7d: V31 = CALLVALUE
0x7e: V32 = ISZERO V31
0x7f: V33 = 0x87
0x82: JUMPI 0x87 V32
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x83
[0x83:0x86]
---
Predecessors: [0x7c]
Successors: []
---
0x83 PUSH1 0x0
0x85 DUP1
0x86 REVERT
---
0x83: V34 = 0x0
0x86: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x87
[0x87:0x8e]
---
Predecessors: [0x7c]
Successors: [0x2fe]
---
0x87 JUMPDEST
0x88 PUSH2 0x8f
0x8b PUSH2 0x2fe
0x8e JUMP
---
0x87: JUMPDEST 
0x88: V35 = 0x8f
0x8b: V36 = 0x2fe
0x8e: JUMP 0x2fe
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x8f]
Exit stack: [V11, 0x8f]

================================

Block 0x8f
[0x8f:0xd0]
---
Predecessors: [0x2fe]
Successors: []
---
0x8f JUMPDEST
0x90 PUSH1 0x40
0x92 MLOAD
0x93 DUP1
0x94 DUP3
0x95 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaa AND
0xab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc0 AND
0xc1 DUP2
0xc2 MSTORE
0xc3 PUSH1 0x20
0xc5 ADD
0xc6 SWAP2
0xc7 POP
0xc8 POP
0xc9 PUSH1 0x40
0xcb MLOAD
0xcc DUP1
0xcd SWAP2
0xce SUB
0xcf SWAP1
0xd0 RETURN
---
0x8f: JUMPDEST 
0x90: V37 = 0x40
0x92: V38 = M[0x40]
0x95: V39 = 0xffffffffffffffffffffffffffffffffffffffff
0xaa: V40 = AND 0xffffffffffffffffffffffffffffffffffffffff V160
0xab: V41 = 0xffffffffffffffffffffffffffffffffffffffff
0xc0: V42 = AND 0xffffffffffffffffffffffffffffffffffffffff V40
0xc2: M[V38] = V42
0xc3: V43 = 0x20
0xc5: V44 = ADD 0x20 V38
0xc9: V45 = 0x40
0xcb: V46 = M[0x40]
0xce: V47 = SUB V44 V46
0xd0: RETURN V46 V47
---
Entry stack: [V11, 0x8f, V160]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x8f]

================================

Block 0xd1
[0xd1:0xd7]
---
Predecessors: [0x4c]
Successors: [0xd8, 0xdc]
---
0xd1 JUMPDEST
0xd2 CALLVALUE
0xd3 ISZERO
0xd4 PUSH2 0xdc
0xd7 JUMPI
---
0xd1: JUMPDEST 
0xd2: V48 = CALLVALUE
0xd3: V49 = ISZERO V48
0xd4: V50 = 0xdc
0xd7: JUMPI 0xdc V49
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd8
[0xd8:0xdb]
---
Predecessors: [0xd1]
Successors: []
---
0xd8 PUSH1 0x0
0xda DUP1
0xdb REVERT
---
0xd8: V51 = 0x0
0xdb: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xdc
[0xdc:0xe3]
---
Predecessors: [0xd1]
Successors: [0x323]
---
0xdc JUMPDEST
0xdd PUSH2 0xe4
0xe0 PUSH2 0x323
0xe3 JUMP
---
0xdc: JUMPDEST 
0xdd: V52 = 0xe4
0xe0: V53 = 0x323
0xe3: JUMP 0x323
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe4]
Exit stack: [V11, 0xe4]

================================

Block 0xe4
[0xe4:0x125]
---
Predecessors: [0x323]
Successors: []
---
0xe4 JUMPDEST
0xe5 PUSH1 0x40
0xe7 MLOAD
0xe8 DUP1
0xe9 DUP3
0xea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xff AND
0x100 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x115 AND
0x116 DUP2
0x117 MSTORE
0x118 PUSH1 0x20
0x11a ADD
0x11b SWAP2
0x11c POP
0x11d POP
0x11e PUSH1 0x40
0x120 MLOAD
0x121 DUP1
0x122 SWAP2
0x123 SUB
0x124 SWAP1
0x125 RETURN
---
0xe4: JUMPDEST 
0xe5: V54 = 0x40
0xe7: V55 = M[0x40]
0xea: V56 = 0xffffffffffffffffffffffffffffffffffffffff
0xff: V57 = AND 0xffffffffffffffffffffffffffffffffffffffff V168
0x100: V58 = 0xffffffffffffffffffffffffffffffffffffffff
0x115: V59 = AND 0xffffffffffffffffffffffffffffffffffffffff V57
0x117: M[V55] = V59
0x118: V60 = 0x20
0x11a: V61 = ADD 0x20 V55
0x11e: V62 = 0x40
0x120: V63 = M[0x40]
0x123: V64 = SUB V61 V63
0x125: RETURN V63 V64
---
Entry stack: [V11, 0xe4, V168]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xe4]

================================

Block 0x126
[0x126:0x12c]
---
Predecessors: [0x57]
Successors: [0x12d, 0x131]
---
0x126 JUMPDEST
0x127 CALLVALUE
0x128 ISZERO
0x129 PUSH2 0x131
0x12c JUMPI
---
0x126: JUMPDEST 
0x127: V65 = CALLVALUE
0x128: V66 = ISZERO V65
0x129: V67 = 0x131
0x12c: JUMPI 0x131 V66
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x12d
[0x12d:0x130]
---
Predecessors: [0x126]
Successors: []
---
0x12d PUSH1 0x0
0x12f DUP1
0x130 REVERT
---
0x12d: V68 = 0x0
0x130: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x131
[0x131:0x15c]
---
Predecessors: [0x126]
Successors: [0x349]
---
0x131 JUMPDEST
0x132 PUSH2 0x15d
0x135 PUSH1 0x4
0x137 DUP1
0x138 DUP1
0x139 CALLDATALOAD
0x13a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14f AND
0x150 SWAP1
0x151 PUSH1 0x20
0x153 ADD
0x154 SWAP1
0x155 SWAP2
0x156 SWAP1
0x157 POP
0x158 POP
0x159 PUSH2 0x349
0x15c JUMP
---
0x131: JUMPDEST 
0x132: V69 = 0x15d
0x135: V70 = 0x4
0x139: V71 = CALLDATALOAD 0x4
0x13a: V72 = 0xffffffffffffffffffffffffffffffffffffffff
0x14f: V73 = AND 0xffffffffffffffffffffffffffffffffffffffff V71
0x151: V74 = 0x20
0x153: V75 = ADD 0x20 0x4
0x159: V76 = 0x349
0x15c: JUMP 0x349
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x15d, V73]
Exit stack: [V11, 0x15d, V73]

================================

Block 0x15d
[0x15d:0x15e]
---
Predecessors: [0x3a4]
Successors: []
---
0x15d JUMPDEST
0x15e STOP
---
0x15d: JUMPDEST 
0x15e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x15f
[0x15f:0x1b6]
---
Predecessors: [0x72, 0x4c1]
Successors: [0x1b7, 0x1bb]
---
0x15f JUMPDEST
0x160 PUSH1 0x1
0x162 PUSH1 0x0
0x164 SWAP1
0x165 SLOAD
0x166 SWAP1
0x167 PUSH2 0x100
0x16a EXP
0x16b SWAP1
0x16c DIV
0x16d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x182 AND
0x183 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x198 AND
0x199 CALLER
0x19a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1af AND
0x1b0 EQ
0x1b1 ISZERO
0x1b2 ISZERO
0x1b3 PUSH2 0x1bb
0x1b6 JUMPI
---
0x15f: JUMPDEST 
0x160: V77 = 0x1
0x162: V78 = 0x0
0x165: V79 = S[0x1]
0x167: V80 = 0x100
0x16a: V81 = EXP 0x100 0x0
0x16c: V82 = DIV V79 0x1
0x16d: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x182: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V82
0x183: V85 = 0xffffffffffffffffffffffffffffffffffffffff
0x198: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff V84
0x199: V87 = CALLER
0x19a: V88 = 0xffffffffffffffffffffffffffffffffffffffff
0x1af: V89 = AND 0xffffffffffffffffffffffffffffffffffffffff V87
0x1b0: V90 = EQ V89 V86
0x1b1: V91 = ISZERO V90
0x1b2: V92 = ISZERO V91
0x1b3: V93 = 0x1bb
0x1b6: JUMPI 0x1bb V92
---
Entry stack: [V11, 0x7a]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7a]

================================

Block 0x1b7
[0x1b7:0x1ba]
---
Predecessors: [0x15f]
Successors: []
---
0x1b7 PUSH1 0x0
0x1b9 DUP1
0x1ba REVERT
---
0x1b7: V94 = 0x0
0x1ba: REVERT 0x0 0x0
---
Entry stack: [V11, 0x7a]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7a]

================================

Block 0x1bb
[0x1bb:0x2fd]
---
Predecessors: [0x15f]
Successors: [0x7a]
---
0x1bb JUMPDEST
0x1bc PUSH1 0x1
0x1be PUSH1 0x0
0x1c0 SWAP1
0x1c1 SLOAD
0x1c2 SWAP1
0x1c3 PUSH2 0x100
0x1c6 EXP
0x1c7 SWAP1
0x1c8 DIV
0x1c9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1de AND
0x1df PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f4 AND
0x1f5 PUSH1 0x0
0x1f7 DUP1
0x1f8 SWAP1
0x1f9 SLOAD
0x1fa SWAP1
0x1fb PUSH2 0x100
0x1fe EXP
0x1ff SWAP1
0x200 DIV
0x201 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x216 AND
0x217 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22c AND
0x22d PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x24e PUSH1 0x40
0x250 MLOAD
0x251 PUSH1 0x40
0x253 MLOAD
0x254 DUP1
0x255 SWAP2
0x256 SUB
0x257 SWAP1
0x258 LOG3
0x259 PUSH1 0x1
0x25b PUSH1 0x0
0x25d SWAP1
0x25e SLOAD
0x25f SWAP1
0x260 PUSH2 0x100
0x263 EXP
0x264 SWAP1
0x265 DIV
0x266 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27b AND
0x27c PUSH1 0x0
0x27e DUP1
0x27f PUSH2 0x100
0x282 EXP
0x283 DUP2
0x284 SLOAD
0x285 DUP2
0x286 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x29b MUL
0x29c NOT
0x29d AND
0x29e SWAP1
0x29f DUP4
0x2a0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b5 AND
0x2b6 MUL
0x2b7 OR
0x2b8 SWAP1
0x2b9 SSTORE
0x2ba POP
0x2bb PUSH1 0x0
0x2bd PUSH1 0x1
0x2bf PUSH1 0x0
0x2c1 PUSH2 0x100
0x2c4 EXP
0x2c5 DUP2
0x2c6 SLOAD
0x2c7 DUP2
0x2c8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2dd MUL
0x2de NOT
0x2df AND
0x2e0 SWAP1
0x2e1 DUP4
0x2e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f7 AND
0x2f8 MUL
0x2f9 OR
0x2fa SWAP1
0x2fb SSTORE
0x2fc POP
0x2fd JUMP
---
0x1bb: JUMPDEST 
0x1bc: V95 = 0x1
0x1be: V96 = 0x0
0x1c1: V97 = S[0x1]
0x1c3: V98 = 0x100
0x1c6: V99 = EXP 0x100 0x0
0x1c8: V100 = DIV V97 0x1
0x1c9: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x1de: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x1df: V103 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f4: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x1f5: V105 = 0x0
0x1f9: V106 = S[0x0]
0x1fb: V107 = 0x100
0x1fe: V108 = EXP 0x100 0x0
0x200: V109 = DIV V106 0x1
0x201: V110 = 0xffffffffffffffffffffffffffffffffffffffff
0x216: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x217: V112 = 0xffffffffffffffffffffffffffffffffffffffff
0x22c: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x22d: V114 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x24e: V115 = 0x40
0x250: V116 = M[0x40]
0x251: V117 = 0x40
0x253: V118 = M[0x40]
0x256: V119 = SUB V116 V118
0x258: LOG V118 V119 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V113 V104
0x259: V120 = 0x1
0x25b: V121 = 0x0
0x25e: V122 = S[0x1]
0x260: V123 = 0x100
0x263: V124 = EXP 0x100 0x0
0x265: V125 = DIV V122 0x1
0x266: V126 = 0xffffffffffffffffffffffffffffffffffffffff
0x27b: V127 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x27c: V128 = 0x0
0x27f: V129 = 0x100
0x282: V130 = EXP 0x100 0x0
0x284: V131 = S[0x0]
0x286: V132 = 0xffffffffffffffffffffffffffffffffffffffff
0x29b: V133 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x29c: V134 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x29d: V135 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V131
0x2a0: V136 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b5: V137 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x2b6: V138 = MUL V137 0x1
0x2b7: V139 = OR V138 V135
0x2b9: S[0x0] = V139
0x2bb: V140 = 0x0
0x2bd: V141 = 0x1
0x2bf: V142 = 0x0
0x2c1: V143 = 0x100
0x2c4: V144 = EXP 0x100 0x0
0x2c6: V145 = S[0x1]
0x2c8: V146 = 0xffffffffffffffffffffffffffffffffffffffff
0x2dd: V147 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x2de: V148 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2df: V149 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V145
0x2e2: V150 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f7: V151 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x2f8: V152 = MUL 0x0 0x1
0x2f9: V153 = OR 0x0 V149
0x2fb: S[0x1] = V153
0x2fd: JUMP 0x7a
---
Entry stack: [V11, 0x7a]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x2fe
[0x2fe:0x322]
---
Predecessors: [0x87]
Successors: [0x8f]
---
0x2fe JUMPDEST
0x2ff PUSH1 0x0
0x301 DUP1
0x302 SWAP1
0x303 SLOAD
0x304 SWAP1
0x305 PUSH2 0x100
0x308 EXP
0x309 SWAP1
0x30a DIV
0x30b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x320 AND
0x321 DUP2
0x322 JUMP
---
0x2fe: JUMPDEST 
0x2ff: V154 = 0x0
0x303: V155 = S[0x0]
0x305: V156 = 0x100
0x308: V157 = EXP 0x100 0x0
0x30a: V158 = DIV V155 0x1
0x30b: V159 = 0xffffffffffffffffffffffffffffffffffffffff
0x320: V160 = AND 0xffffffffffffffffffffffffffffffffffffffff V158
0x322: JUMP 0x8f
---
Entry stack: [V11, 0x8f]
Stack pops: 1
Stack additions: [S0, V160]
Exit stack: [V11, 0x8f, V160]

================================

Block 0x323
[0x323:0x348]
---
Predecessors: [0xdc]
Successors: [0xe4]
---
0x323 JUMPDEST
0x324 PUSH1 0x1
0x326 PUSH1 0x0
0x328 SWAP1
0x329 SLOAD
0x32a SWAP1
0x32b PUSH2 0x100
0x32e EXP
0x32f SWAP1
0x330 DIV
0x331 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x346 AND
0x347 DUP2
0x348 JUMP
---
0x323: JUMPDEST 
0x324: V161 = 0x1
0x326: V162 = 0x0
0x329: V163 = S[0x1]
0x32b: V164 = 0x100
0x32e: V165 = EXP 0x100 0x0
0x330: V166 = DIV V163 0x1
0x331: V167 = 0xffffffffffffffffffffffffffffffffffffffff
0x346: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff V166
0x348: JUMP 0xe4
---
Entry stack: [V11, 0xe4]
Stack pops: 1
Stack additions: [S0, V168]
Exit stack: [V11, 0xe4, V168]

================================

Block 0x349
[0x349:0x39f]
---
Predecessors: [0x131]
Successors: [0x3a0, 0x3a4]
---
0x349 JUMPDEST
0x34a PUSH1 0x0
0x34c DUP1
0x34d SWAP1
0x34e SLOAD
0x34f SWAP1
0x350 PUSH2 0x100
0x353 EXP
0x354 SWAP1
0x355 DIV
0x356 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x36b AND
0x36c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x381 AND
0x382 CALLER
0x383 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x398 AND
0x399 EQ
0x39a ISZERO
0x39b ISZERO
0x39c PUSH2 0x3a4
0x39f JUMPI
---
0x349: JUMPDEST 
0x34a: V169 = 0x0
0x34e: V170 = S[0x0]
0x350: V171 = 0x100
0x353: V172 = EXP 0x100 0x0
0x355: V173 = DIV V170 0x1
0x356: V174 = 0xffffffffffffffffffffffffffffffffffffffff
0x36b: V175 = AND 0xffffffffffffffffffffffffffffffffffffffff V173
0x36c: V176 = 0xffffffffffffffffffffffffffffffffffffffff
0x381: V177 = AND 0xffffffffffffffffffffffffffffffffffffffff V175
0x382: V178 = CALLER
0x383: V179 = 0xffffffffffffffffffffffffffffffffffffffff
0x398: V180 = AND 0xffffffffffffffffffffffffffffffffffffffff V178
0x399: V181 = EQ V180 V177
0x39a: V182 = ISZERO V181
0x39b: V183 = ISZERO V182
0x39c: V184 = 0x3a4
0x39f: JUMPI 0x3a4 V183
---
Entry stack: [V11, 0x15d, V73]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x15d, V73]

================================

Block 0x3a0
[0x3a0:0x3a3]
---
Predecessors: [0x349]
Successors: []
---
0x3a0 PUSH1 0x0
0x3a2 DUP1
0x3a3 REVERT
---
0x3a0: V185 = 0x0
0x3a3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x15d, V73]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x15d, V73]

================================

Block 0x3a4
[0x3a4:0x3e7]
---
Predecessors: [0x349, 0x77e]
Successors: [0x15d]
---
0x3a4 JUMPDEST
0x3a5 DUP1
0x3a6 PUSH1 0x1
0x3a8 PUSH1 0x0
0x3aa PUSH2 0x100
0x3ad EXP
0x3ae DUP2
0x3af SLOAD
0x3b0 DUP2
0x3b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c6 MUL
0x3c7 NOT
0x3c8 AND
0x3c9 SWAP1
0x3ca DUP4
0x3cb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e0 AND
0x3e1 MUL
0x3e2 OR
0x3e3 SWAP1
0x3e4 SSTORE
0x3e5 POP
0x3e6 POP
0x3e7 JUMP
---
0x3a4: JUMPDEST 
0x3a6: V186 = 0x1
0x3a8: V187 = 0x0
0x3aa: V188 = 0x100
0x3ad: V189 = EXP 0x100 0x0
0x3af: V190 = S[0x1]
0x3b1: V191 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c6: V192 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x3c7: V193 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x3c8: V194 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V190
0x3cb: V195 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e0: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x3e1: V197 = MUL V196 0x1
0x3e2: V198 = OR V197 V194
0x3e4: S[0x1] = V198
0x3e7: JUMP 0x15d
---
Entry stack: [V11, 0x15d, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x3e8
[0x3e8:0x3f7]
---
Predecessors: []
Successors: [0x3f8]
Has unresolved jump.
---
0x3e8 STOP
0x3e9 LOG1
0x3ea PUSH6 0x627a7a723058
0x3f1 SHA3
0x3f2 ORIGIN
0x3f3 MISSING 0x4c
0x3f4 MISSING 0xe4
0x3f5 MISSING 0xe0
0x3f6 MISSING 0xc5
0x3f7 JUMPI
---
0x3e8: STOP 
0x3e9: LOG S0 S1 S2
0x3ea: V199 = 0x627a7a723058
0x3f1: V200 = SHA3 0x627a7a723058 S3
0x3f2: V201 = ORIGIN
0x3f3: MISSING 0x4c
0x3f4: MISSING 0xe4
0x3f5: MISSING 0xe0
0x3f6: MISSING 0xc5
0x3f7: JUMPI S0 S1
---
Entry stack: []
Stack pops: 0
Stack additions: [V201, V200]
Exit stack: []

================================

Block 0x3f8
[0x3f8:0x420]
---
Predecessors: [0x3e8]
Successors: [0x421]
---
0x3f8 SWAP1
0x3f9 MISSING 0xd4
0x3fa MISSING 0x5f
0x3fb MISSING 0xc
0x3fc MISSING 0xd8
0x3fd OR
0x3fe MISSING 0x24
0x3ff MISSING 0xe7
0x400 MISSING 0xb5
0x401 SDIV
0x402 MISSING 0xcf
0x403 LOG3
0x404 ADDMOD
0x405 DELEGATECALL
0x406 SSTORE
0x407 CODESIZE
0x408 MISSING 0xf8
0x409 SWAP13
0x40a MISSING 0xab
0x40b MISSING 0xca
0x40c MLOAD
0x40d MISSING 0x4c
0x40e MISSING 0x2c
0x40f MISSING 0xb9
0x410 SELFDESTRUCT
0x411 CALLER
0x412 STOP
0x413 MISSING 0x29
0x414 PUSH1 0x60
0x416 PUSH1 0x40
0x418 MSTORE
0x419 PUSH1 0x4
0x41b CALLDATASIZE
0x41c LT
0x41d PUSH2 0x4c
0x420 JUMPI
---
0x3f9: MISSING 0xd4
0x3fa: MISSING 0x5f
0x3fb: MISSING 0xc
0x3fc: MISSING 0xd8
0x3fd: V202 = OR S0 S1
0x3fe: MISSING 0x24
0x3ff: MISSING 0xe7
0x400: MISSING 0xb5
0x401: V203 = SDIV S0 S1
0x402: MISSING 0xcf
0x403: LOG S0 S1 S2 S3 S4
0x404: V204 = ADDMOD S5 S6 S7
0x405: V205 = DELEGATECALL V204 S8 S9 S10 S11 S12
0x406: S[V205] = S13
0x407: V206 = CODESIZE
0x408: MISSING 0xf8
0x40a: MISSING 0xab
0x40b: MISSING 0xca
0x40c: V207 = M[S0]
0x40d: MISSING 0x4c
0x40e: MISSING 0x2c
0x40f: MISSING 0xb9
0x410: SELFDESTRUCT S0
0x411: V208 = CALLER
0x412: STOP 
0x413: MISSING 0x29
0x414: V209 = 0x60
0x416: V210 = 0x40
0x418: M[0x40] = 0x60
0x419: V211 = 0x4
0x41b: V212 = CALLDATASIZE
0x41c: V213 = LT V212 0x4
0x41d: V214 = 0x4c
0x420: THROWI V213
---
Entry stack: []
Stack pops: 124382
Stack additions: []
Exit stack: []

================================

Block 0x421
[0x421:0x454]
---
Predecessors: [0x3f8]
Successors: [0x455]
---
0x421 PUSH1 0x0
0x423 CALLDATALOAD
0x424 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x442 SWAP1
0x443 DIV
0x444 PUSH4 0xffffffff
0x449 AND
0x44a DUP1
0x44b PUSH4 0x8da5cb5b
0x450 EQ
0x451 PUSH2 0x51
0x454 JUMPI
---
0x421: V215 = 0x0
0x423: V216 = CALLDATALOAD 0x0
0x424: V217 = 0x100000000000000000000000000000000000000000000000000000000
0x443: V218 = DIV V216 0x100000000000000000000000000000000000000000000000000000000
0x444: V219 = 0xffffffff
0x449: V220 = AND 0xffffffff V218
0x44b: V221 = 0x8da5cb5b
0x450: V222 = EQ 0x8da5cb5b V220
0x451: V223 = 0x51
0x454: THROWI V222
---
Entry stack: []
Stack pops: 0
Stack additions: [V220]
Exit stack: [V220]

================================

Block 0x455
[0x455:0x45f]
---
Predecessors: [0x421]
Successors: [0x460]
---
0x455 DUP1
0x456 PUSH4 0xf2fde38b
0x45b EQ
0x45c PUSH2 0xa6
0x45f JUMPI
---
0x456: V224 = 0xf2fde38b
0x45b: V225 = EQ 0xf2fde38b V220
0x45c: V226 = 0xa6
0x45f: THROWI V225
---
Entry stack: [V220]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V220]

================================

Block 0x460
[0x460:0x46b]
---
Predecessors: [0x455]
Successors: [0x46c]
---
0x460 JUMPDEST
0x461 PUSH1 0x0
0x463 DUP1
0x464 REVERT
0x465 JUMPDEST
0x466 CALLVALUE
0x467 ISZERO
0x468 PUSH2 0x5c
0x46b JUMPI
---
0x460: JUMPDEST 
0x461: V227 = 0x0
0x464: REVERT 0x0 0x0
0x465: JUMPDEST 
0x466: V228 = CALLVALUE
0x467: V229 = ISZERO V228
0x468: V230 = 0x5c
0x46b: THROWI V229
---
Entry stack: [V220]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x46c
[0x46c:0x4c0]
---
Predecessors: [0x460]
Successors: [0x4c1]
---
0x46c PUSH1 0x0
0x46e DUP1
0x46f REVERT
0x470 JUMPDEST
0x471 PUSH2 0x64
0x474 PUSH2 0xdf
0x477 JUMP
0x478 JUMPDEST
0x479 PUSH1 0x40
0x47b MLOAD
0x47c DUP1
0x47d DUP3
0x47e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x493 AND
0x494 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4a9 AND
0x4aa DUP2
0x4ab MSTORE
0x4ac PUSH1 0x20
0x4ae ADD
0x4af SWAP2
0x4b0 POP
0x4b1 POP
0x4b2 PUSH1 0x40
0x4b4 MLOAD
0x4b5 DUP1
0x4b6 SWAP2
0x4b7 SUB
0x4b8 SWAP1
0x4b9 RETURN
0x4ba JUMPDEST
0x4bb CALLVALUE
0x4bc ISZERO
0x4bd PUSH2 0xb1
0x4c0 JUMPI
---
0x46c: V231 = 0x0
0x46f: REVERT 0x0 0x0
0x470: JUMPDEST 
0x471: V232 = 0x64
0x474: V233 = 0xdf
0x477: THROW 
0x478: JUMPDEST 
0x479: V234 = 0x40
0x47b: V235 = M[0x40]
0x47e: V236 = 0xffffffffffffffffffffffffffffffffffffffff
0x493: V237 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x494: V238 = 0xffffffffffffffffffffffffffffffffffffffff
0x4a9: V239 = AND 0xffffffffffffffffffffffffffffffffffffffff V237
0x4ab: M[V235] = V239
0x4ac: V240 = 0x20
0x4ae: V241 = ADD 0x20 V235
0x4b2: V242 = 0x40
0x4b4: V243 = M[0x40]
0x4b7: V244 = SUB V241 V243
0x4b9: RETURN V243 V244
0x4ba: JUMPDEST 
0x4bb: V245 = CALLVALUE
0x4bc: V246 = ISZERO V245
0x4bd: V247 = 0xb1
0x4c0: THROWI V246
---
Entry stack: []
Stack pops: 0
Stack additions: [0x64]
Exit stack: []

================================

Block 0x4c1
[0x4c1:0x56e]
---
Predecessors: [0x46c]
Successors: [0x15f, 0x56f]
---
0x4c1 PUSH1 0x0
0x4c3 DUP1
0x4c4 REVERT
0x4c5 JUMPDEST
0x4c6 PUSH2 0xdd
0x4c9 PUSH1 0x4
0x4cb DUP1
0x4cc DUP1
0x4cd CALLDATALOAD
0x4ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4e3 AND
0x4e4 SWAP1
0x4e5 PUSH1 0x20
0x4e7 ADD
0x4e8 SWAP1
0x4e9 SWAP2
0x4ea SWAP1
0x4eb POP
0x4ec POP
0x4ed PUSH2 0x104
0x4f0 JUMP
0x4f1 JUMPDEST
0x4f2 STOP
0x4f3 JUMPDEST
0x4f4 PUSH1 0x0
0x4f6 DUP1
0x4f7 SWAP1
0x4f8 SLOAD
0x4f9 SWAP1
0x4fa PUSH2 0x100
0x4fd EXP
0x4fe SWAP1
0x4ff DIV
0x500 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x515 AND
0x516 DUP2
0x517 JUMP
0x518 JUMPDEST
0x519 PUSH1 0x0
0x51b DUP1
0x51c SWAP1
0x51d SLOAD
0x51e SWAP1
0x51f PUSH2 0x100
0x522 EXP
0x523 SWAP1
0x524 DIV
0x525 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x53a AND
0x53b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x550 AND
0x551 CALLER
0x552 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x567 AND
0x568 EQ
0x569 ISZERO
0x56a ISZERO
0x56b PUSH2 0x15f
0x56e JUMPI
---
0x4c1: V248 = 0x0
0x4c4: REVERT 0x0 0x0
0x4c5: JUMPDEST 
0x4c6: V249 = 0xdd
0x4c9: V250 = 0x4
0x4cd: V251 = CALLDATALOAD 0x4
0x4ce: V252 = 0xffffffffffffffffffffffffffffffffffffffff
0x4e3: V253 = AND 0xffffffffffffffffffffffffffffffffffffffff V251
0x4e5: V254 = 0x20
0x4e7: V255 = ADD 0x20 0x4
0x4ed: V256 = 0x104
0x4f0: THROW 
0x4f1: JUMPDEST 
0x4f2: STOP 
0x4f3: JUMPDEST 
0x4f4: V257 = 0x0
0x4f8: V258 = S[0x0]
0x4fa: V259 = 0x100
0x4fd: V260 = EXP 0x100 0x0
0x4ff: V261 = DIV V258 0x1
0x500: V262 = 0xffffffffffffffffffffffffffffffffffffffff
0x515: V263 = AND 0xffffffffffffffffffffffffffffffffffffffff V261
0x517: JUMP S0
0x518: JUMPDEST 
0x519: V264 = 0x0
0x51d: V265 = S[0x0]
0x51f: V266 = 0x100
0x522: V267 = EXP 0x100 0x0
0x524: V268 = DIV V265 0x1
0x525: V269 = 0xffffffffffffffffffffffffffffffffffffffff
0x53a: V270 = AND 0xffffffffffffffffffffffffffffffffffffffff V268
0x53b: V271 = 0xffffffffffffffffffffffffffffffffffffffff
0x550: V272 = AND 0xffffffffffffffffffffffffffffffffffffffff V270
0x551: V273 = CALLER
0x552: V274 = 0xffffffffffffffffffffffffffffffffffffffff
0x567: V275 = AND 0xffffffffffffffffffffffffffffffffffffffff V273
0x568: V276 = EQ V275 V272
0x569: V277 = ISZERO V276
0x56a: V278 = ISZERO V277
0x56b: V279 = 0x15f
0x56e: JUMPI 0x15f V278
---
Entry stack: []
Stack pops: 0
Stack additions: [V253, 0xdd, V263, S0]
Exit stack: []

================================

Block 0x56f
[0x56f:0x5aa]
---
Predecessors: [0x4c1]
Successors: [0x5ab]
---
0x56f PUSH1 0x0
0x571 DUP1
0x572 REVERT
0x573 JUMPDEST
0x574 PUSH1 0x0
0x576 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x58b AND
0x58c DUP2
0x58d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5a2 AND
0x5a3 EQ
0x5a4 ISZERO
0x5a5 ISZERO
0x5a6 ISZERO
0x5a7 PUSH2 0x19b
0x5aa JUMPI
---
0x56f: V280 = 0x0
0x572: REVERT 0x0 0x0
0x573: JUMPDEST 
0x574: V281 = 0x0
0x576: V282 = 0xffffffffffffffffffffffffffffffffffffffff
0x58b: V283 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x58d: V284 = 0xffffffffffffffffffffffffffffffffffffffff
0x5a2: V285 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x5a3: V286 = EQ V285 0x0
0x5a4: V287 = ISZERO V286
0x5a5: V288 = ISZERO V287
0x5a6: V289 = ISZERO V288
0x5a7: V290 = 0x19b
0x5aa: THROWI V289
---
Entry stack: []
Stack pops: 0
Stack additions: [S0]
Exit stack: []

================================

Block 0x5ab
[0x5ab:0x6da]
---
Predecessors: [0x56f]
Successors: [0x6db]
---
0x5ab PUSH1 0x0
0x5ad DUP1
0x5ae REVERT
0x5af JUMPDEST
0x5b0 DUP1
0x5b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5c6 AND
0x5c7 PUSH1 0x0
0x5c9 DUP1
0x5ca SWAP1
0x5cb SLOAD
0x5cc SWAP1
0x5cd PUSH2 0x100
0x5d0 EXP
0x5d1 SWAP1
0x5d2 DIV
0x5d3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5e8 AND
0x5e9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5fe AND
0x5ff PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x620 PUSH1 0x40
0x622 MLOAD
0x623 PUSH1 0x40
0x625 MLOAD
0x626 DUP1
0x627 SWAP2
0x628 SUB
0x629 SWAP1
0x62a LOG3
0x62b DUP1
0x62c PUSH1 0x0
0x62e DUP1
0x62f PUSH2 0x100
0x632 EXP
0x633 DUP2
0x634 SLOAD
0x635 DUP2
0x636 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x64b MUL
0x64c NOT
0x64d AND
0x64e SWAP1
0x64f DUP4
0x650 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x665 AND
0x666 MUL
0x667 OR
0x668 SWAP1
0x669 SSTORE
0x66a POP
0x66b POP
0x66c JUMP
0x66d STOP
0x66e LOG1
0x66f PUSH6 0x627a7a723058
0x676 SHA3
0x677 MISSING 0xb4
0x678 MISSING 0xf
0x679 MISSING 0xe0
0x67a MISSING 0xc4
0x67b SWAP10
0x67c MISSING 0x5c
0x67d MISSING 0xc0
0x67e PC
0x67f STOP
0x680 MISSING 0x21
0x681 MISSING 0x21
0x682 MISSING 0xb0
0x683 MISSING 0x23
0x684 MISSING 0xba
0x685 CALL
0x686 MISSING 0xe4
0x687 MISSING 0xf7
0x688 BYTE
0x689 CALLER
0x68a MISSING 0xb3
0x68b MISSING 0xd1
0x68c MISSING 0xe0
0x68d ORIGIN
0x68e INVALID
0x68f JUMPDEST
0x690 PUSH21 0xfa1d25566da100296060604052600080fd00a16562
0x6a6 PUSH27 0x7a72305820600517e6d25d4554cf8f78ad037383100f0b33f55b79
0x6c2 MISSING 0xda
0x6c3 MISSING 0xe2
0x6c4 MISSING 0xd9
0x6c5 DUP11
0x6c6 PUSH6 0x413c5d15de00
0x6cd MISSING 0x29
0x6ce PUSH1 0x60
0x6d0 PUSH1 0x40
0x6d2 MSTORE
0x6d3 PUSH1 0x4
0x6d5 CALLDATASIZE
0x6d6 LT
0x6d7 PUSH2 0xa4
0x6da JUMPI
---
0x5ab: V291 = 0x0
0x5ae: REVERT 0x0 0x0
0x5af: JUMPDEST 
0x5b1: V292 = 0xffffffffffffffffffffffffffffffffffffffff
0x5c6: V293 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x5c7: V294 = 0x0
0x5cb: V295 = S[0x0]
0x5cd: V296 = 0x100
0x5d0: V297 = EXP 0x100 0x0
0x5d2: V298 = DIV V295 0x1
0x5d3: V299 = 0xffffffffffffffffffffffffffffffffffffffff
0x5e8: V300 = AND 0xffffffffffffffffffffffffffffffffffffffff V298
0x5e9: V301 = 0xffffffffffffffffffffffffffffffffffffffff
0x5fe: V302 = AND 0xffffffffffffffffffffffffffffffffffffffff V300
0x5ff: V303 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x620: V304 = 0x40
0x622: V305 = M[0x40]
0x623: V306 = 0x40
0x625: V307 = M[0x40]
0x628: V308 = SUB V305 V307
0x62a: LOG V307 V308 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V302 V293
0x62c: V309 = 0x0
0x62f: V310 = 0x100
0x632: V311 = EXP 0x100 0x0
0x634: V312 = S[0x0]
0x636: V313 = 0xffffffffffffffffffffffffffffffffffffffff
0x64b: V314 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x64c: V315 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x64d: V316 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V312
0x650: V317 = 0xffffffffffffffffffffffffffffffffffffffff
0x665: V318 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x666: V319 = MUL V318 0x1
0x667: V320 = OR V319 V316
0x669: S[0x0] = V320
0x66c: JUMP S1
0x66d: STOP 
0x66e: LOG S0 S1 S2
0x66f: V321 = 0x627a7a723058
0x676: V322 = SHA3 0x627a7a723058 S3
0x677: MISSING 0xb4
0x678: MISSING 0xf
0x679: MISSING 0xe0
0x67a: MISSING 0xc4
0x67c: MISSING 0x5c
0x67d: MISSING 0xc0
0x67e: V323 = PC
0x67f: STOP 
0x680: MISSING 0x21
0x681: MISSING 0x21
0x682: MISSING 0xb0
0x683: MISSING 0x23
0x684: MISSING 0xba
0x685: V324 = CALL S0 S1 S2 S3 S4 S5 S6
0x686: MISSING 0xe4
0x687: MISSING 0xf7
0x688: V325 = BYTE S0 S1
0x689: V326 = CALLER
0x68a: MISSING 0xb3
0x68b: MISSING 0xd1
0x68c: MISSING 0xe0
0x68d: V327 = ORIGIN
0x68e: INVALID 
0x68f: JUMPDEST 
0x690: V328 = 0xfa1d25566da100296060604052600080fd00a16562
0x6a6: V329 = 0x7a72305820600517e6d25d4554cf8f78ad037383100f0b33f55b79
0x6c2: MISSING 0xda
0x6c3: MISSING 0xe2
0x6c4: MISSING 0xd9
0x6c6: V330 = 0x413c5d15de00
0x6cd: MISSING 0x29
0x6ce: V331 = 0x60
0x6d0: V332 = 0x40
0x6d2: M[0x40] = 0x60
0x6d3: V333 = 0x4
0x6d5: V334 = CALLDATASIZE
0x6d6: V335 = LT V334 0x4
0x6d7: V336 = 0xa4
0x6da: THROWI V335
---
Entry stack: [S0]
Stack pops: 0
Stack additions: [V322, S10, S1, S2, S3, S4, S5, S6, S7, S8, S9, S0, V323, V324, V326, V325, V327, 0x7a72305820600517e6d25d4554cf8f78ad037383100f0b33f55b79, 0xfa1d25566da100296060604052600080fd00a16562, 0x413c5d15de00, S10, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10]
Exit stack: []

================================

Block 0x6db
[0x6db:0x70e]
---
Predecessors: [0x5ab]
Successors: [0x70f]
---
0x6db PUSH1 0x0
0x6dd CALLDATALOAD
0x6de PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x6fc SWAP1
0x6fd DIV
0x6fe PUSH4 0xffffffff
0x703 AND
0x704 DUP1
0x705 PUSH4 0x6fdde03
0x70a EQ
0x70b PUSH2 0xa9
0x70e JUMPI
---
0x6db: V337 = 0x0
0x6dd: V338 = CALLDATALOAD 0x0
0x6de: V339 = 0x100000000000000000000000000000000000000000000000000000000
0x6fd: V340 = DIV V338 0x100000000000000000000000000000000000000000000000000000000
0x6fe: V341 = 0xffffffff
0x703: V342 = AND 0xffffffff V340
0x705: V343 = 0x6fdde03
0x70a: V344 = EQ 0x6fdde03 V342
0x70b: V345 = 0xa9
0x70e: THROWI V344
---
Entry stack: []
Stack pops: 0
Stack additions: [V342]
Exit stack: [V342]

================================

Block 0x70f
[0x70f:0x719]
---
Predecessors: [0x6db]
Successors: [0x71a]
---
0x70f DUP1
0x710 PUSH4 0x18160ddd
0x715 EQ
0x716 PUSH2 0x137
0x719 JUMPI
---
0x710: V346 = 0x18160ddd
0x715: V347 = EQ 0x18160ddd V342
0x716: V348 = 0x137
0x719: THROWI V347
---
Entry stack: [V342]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V342]

================================

Block 0x71a
[0x71a:0x724]
---
Predecessors: [0x70f]
Successors: [0x725]
---
0x71a DUP1
0x71b PUSH4 0x313ce567
0x720 EQ
0x721 PUSH2 0x160
0x724 JUMPI
---
0x71b: V349 = 0x313ce567
0x720: V350 = EQ 0x313ce567 V342
0x721: V351 = 0x160
0x724: THROWI V350
---
Entry stack: [V342]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V342]

================================

Block 0x725
[0x725:0x72f]
---
Predecessors: [0x71a]
Successors: [0x730]
---
0x725 DUP1
0x726 PUSH4 0x4e71e0c8
0x72b EQ
0x72c PUSH2 0x18f
0x72f JUMPI
---
0x726: V352 = 0x4e71e0c8
0x72b: V353 = EQ 0x4e71e0c8 V342
0x72c: V354 = 0x18f
0x72f: THROWI V353
---
Entry stack: [V342]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V342]

================================

Block 0x730
[0x730:0x73a]
---
Predecessors: [0x725]
Successors: [0x73b]
---
0x730 DUP1
0x731 PUSH4 0x70a08231
0x736 EQ
0x737 PUSH2 0x1a4
0x73a JUMPI
---
0x731: V355 = 0x70a08231
0x736: V356 = EQ 0x70a08231 V342
0x737: V357 = 0x1a4
0x73a: THROWI V356
---
Entry stack: [V342]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V342]

================================

Block 0x73b
[0x73b:0x745]
---
Predecessors: [0x730]
Successors: [0x746]
---
0x73b DUP1
0x73c PUSH4 0x867904b4
0x741 EQ
0x742 PUSH2 0x1f1
0x745 JUMPI
---
0x73c: V358 = 0x867904b4
0x741: V359 = EQ 0x867904b4 V342
0x742: V360 = 0x1f1
0x745: THROWI V359
---
Entry stack: [V342]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V342]

================================

Block 0x746
[0x746:0x750]
---
Predecessors: [0x73b]
Successors: [0x751]
---
0x746 DUP1
0x747 PUSH4 0x8da5cb5b
0x74c EQ
0x74d PUSH2 0x233
0x750 JUMPI
---
0x747: V361 = 0x8da5cb5b
0x74c: V362 = EQ 0x8da5cb5b V342
0x74d: V363 = 0x233
0x750: THROWI V362
---
Entry stack: [V342]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V342]

================================

Block 0x751
[0x751:0x75b]
---
Predecessors: [0x746]
Successors: [0x75c]
---
0x751 DUP1
0x752 PUSH4 0x95d89b41
0x757 EQ
0x758 PUSH2 0x288
0x75b JUMPI
---
0x752: V364 = 0x95d89b41
0x757: V365 = EQ 0x95d89b41 V342
0x758: V366 = 0x288
0x75b: THROWI V365
---
Entry stack: [V342]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V342]

================================

Block 0x75c
[0x75c:0x766]
---
Predecessors: [0x751]
Successors: [0x767]
---
0x75c DUP1
0x75d PUSH4 0xe30c3978
0x762 EQ
0x763 PUSH2 0x316
0x766 JUMPI
---
0x75d: V367 = 0xe30c3978
0x762: V368 = EQ 0xe30c3978 V342
0x763: V369 = 0x316
0x766: THROWI V368
---
Entry stack: [V342]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V342]

================================

Block 0x767
[0x767:0x771]
---
Predecessors: [0x75c]
Successors: [0x772]
---
0x767 DUP1
0x768 PUSH4 0xf2fde38b
0x76d EQ
0x76e PUSH2 0x36b
0x771 JUMPI
---
0x768: V370 = 0xf2fde38b
0x76d: V371 = EQ 0xf2fde38b V342
0x76e: V372 = 0x36b
0x771: THROWI V371
---
Entry stack: [V342]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V342]

================================

Block 0x772
[0x772:0x77d]
---
Predecessors: [0x767]
Successors: [0x77e]
---
0x772 JUMPDEST
0x773 PUSH1 0x0
0x775 DUP1
0x776 REVERT
0x777 JUMPDEST
0x778 CALLVALUE
0x779 ISZERO
0x77a PUSH2 0xb4
0x77d JUMPI
---
0x772: JUMPDEST 
0x773: V373 = 0x0
0x776: REVERT 0x0 0x0
0x777: JUMPDEST 
0x778: V374 = CALLVALUE
0x779: V375 = ISZERO V374
0x77a: V376 = 0xb4
0x77d: THROWI V375
---
Entry stack: [V342]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x77e
[0x77e:0x789]
---
Predecessors: [0x772]
Successors: [0x3a4]
---
0x77e PUSH1 0x0
0x780 DUP1
0x781 REVERT
0x782 JUMPDEST
0x783 PUSH2 0xbc
0x786 PUSH2 0x3a4
0x789 JUMP
---
0x77e: V377 = 0x0
0x781: REVERT 0x0 0x0
0x782: JUMPDEST 
0x783: V378 = 0xbc
0x786: V379 = 0x3a4
0x789: JUMP 0x3a4
---
Entry stack: []
Stack pops: 0
Stack additions: [0xbc]
Exit stack: []

================================

Block 0x78a
[0x78a:0x7ae]
---
Predecessors: []
Successors: [0x7af]
---
0x78a JUMPDEST
0x78b PUSH1 0x40
0x78d MLOAD
0x78e DUP1
0x78f DUP1
0x790 PUSH1 0x20
0x792 ADD
0x793 DUP3
0x794 DUP2
0x795 SUB
0x796 DUP3
0x797 MSTORE
0x798 DUP4
0x799 DUP2
0x79a DUP2
0x79b MLOAD
0x79c DUP2
0x79d MSTORE
0x79e PUSH1 0x20
0x7a0 ADD
0x7a1 SWAP2
0x7a2 POP
0x7a3 DUP1
0x7a4 MLOAD
0x7a5 SWAP1
0x7a6 PUSH1 0x20
0x7a8 ADD
0x7a9 SWAP1
0x7aa DUP1
0x7ab DUP4
0x7ac DUP4
0x7ad PUSH1 0x0
---
0x78a: JUMPDEST 
0x78b: V380 = 0x40
0x78d: V381 = M[0x40]
0x790: V382 = 0x20
0x792: V383 = ADD 0x20 V381
0x795: V384 = SUB V383 V381
0x797: M[V381] = V384
0x79b: V385 = M[S0]
0x79d: M[V383] = V385
0x79e: V386 = 0x20
0x7a0: V387 = ADD 0x20 V383
0x7a4: V388 = M[S0]
0x7a6: V389 = 0x20
0x7a8: V390 = ADD 0x20 S0
0x7ad: V391 = 0x0
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, V381, V381, V387, V390, V388, V388, V387, V390, 0x0]
Exit stack: [S0, V381, V381, V387, V390, V388, V388, V387, V390, 0x0]

================================

Block 0x7af
[0x7af:0x7b7]
---
Predecessors: [0x78a]
Successors: [0x7b8]
---
0x7af JUMPDEST
0x7b0 DUP4
0x7b1 DUP2
0x7b2 LT
0x7b3 ISZERO
0x7b4 PUSH2 0xfc
0x7b7 JUMPI
---
0x7af: JUMPDEST 
0x7b2: V392 = LT 0x0 V388
0x7b3: V393 = ISZERO V392
0x7b4: V394 = 0xfc
0x7b7: THROWI V393
---
Entry stack: [S9, V381, V381, V387, V390, V388, V388, V387, V390, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V381, V381, V387, V390, V388, V388, V387, V390, 0x0]

================================

Block 0x7b8
[0x7b8:0x7dd]
---
Predecessors: [0x7af]
Successors: [0x7de]
---
0x7b8 DUP1
0x7b9 DUP3
0x7ba ADD
0x7bb MLOAD
0x7bc DUP2
0x7bd DUP5
0x7be ADD
0x7bf MSTORE
0x7c0 PUSH1 0x20
0x7c2 DUP2
0x7c3 ADD
0x7c4 SWAP1
0x7c5 POP
0x7c6 PUSH2 0xe1
0x7c9 JUMP
0x7ca JUMPDEST
0x7cb POP
0x7cc POP
0x7cd POP
0x7ce POP
0x7cf SWAP1
0x7d0 POP
0x7d1 SWAP1
0x7d2 DUP2
0x7d3 ADD
0x7d4 SWAP1
0x7d5 PUSH1 0x1f
0x7d7 AND
0x7d8 DUP1
0x7d9 ISZERO
0x7da PUSH2 0x129
0x7dd JUMPI
---
0x7ba: V395 = ADD V390 0x0
0x7bb: V396 = M[V395]
0x7be: V397 = ADD V387 0x0
0x7bf: M[V397] = V396
0x7c0: V398 = 0x20
0x7c3: V399 = ADD 0x0 0x20
0x7c6: V400 = 0xe1
0x7c9: THROW 
0x7ca: JUMPDEST 
0x7d3: V401 = ADD S4 S6
0x7d5: V402 = 0x1f
0x7d7: V403 = AND 0x1f S4
0x7d9: V404 = ISZERO V403
0x7da: V405 = 0x129
0x7dd: THROWI V404
---
Entry stack: [S9, V381, V381, V387, V390, V388, V388, V387, V390, 0x0]
Stack pops: 3
Stack additions: [V403, V401]
Exit stack: []

================================

Block 0x7de
[0x7de:0x7f6]
---
Predecessors: [0x7b8]
Successors: [0x7f7]
---
0x7de DUP1
0x7df DUP3
0x7e0 SUB
0x7e1 DUP1
0x7e2 MLOAD
0x7e3 PUSH1 0x1
0x7e5 DUP4
0x7e6 PUSH1 0x20
0x7e8 SUB
0x7e9 PUSH2 0x100
0x7ec EXP
0x7ed SUB
0x7ee NOT
0x7ef AND
0x7f0 DUP2
0x7f1 MSTORE
0x7f2 PUSH1 0x20
0x7f4 ADD
0x7f5 SWAP2
0x7f6 POP
---
0x7e0: V406 = SUB V401 V403
0x7e2: V407 = M[V406]
0x7e3: V408 = 0x1
0x7e6: V409 = 0x20
0x7e8: V410 = SUB 0x20 V403
0x7e9: V411 = 0x100
0x7ec: V412 = EXP 0x100 V410
0x7ed: V413 = SUB V412 0x1
0x7ee: V414 = NOT V413
0x7ef: V415 = AND V414 V407
0x7f1: M[V406] = V415
0x7f2: V416 = 0x20
0x7f4: V417 = ADD 0x20 V406
---
Entry stack: [V401, V403]
Stack pops: 2
Stack additions: [V417, S0]
Exit stack: [V417, V403]

================================

Block 0x7f7
[0x7f7:0x80b]
---
Predecessors: [0x7de]
Successors: [0x80c]
---
0x7f7 JUMPDEST
0x7f8 POP
0x7f9 SWAP3
0x7fa POP
0x7fb POP
0x7fc POP
0x7fd PUSH1 0x40
0x7ff MLOAD
0x800 DUP1
0x801 SWAP2
0x802 SUB
0x803 SWAP1
0x804 RETURN
0x805 JUMPDEST
0x806 CALLVALUE
0x807 ISZERO
0x808 PUSH2 0x142
0x80b JUMPI
---
0x7f7: JUMPDEST 
0x7fd: V418 = 0x40
0x7ff: V419 = M[0x40]
0x802: V420 = SUB V417 V419
0x804: RETURN V419 V420
0x805: JUMPDEST 
0x806: V421 = CALLVALUE
0x807: V422 = ISZERO V421
0x808: V423 = 0x142
0x80b: THROWI V422
---
Entry stack: [V417, V403]
Stack pops: 10
Stack additions: []
Exit stack: []

================================

Block 0x80c
[0x80c:0x834]
---
Predecessors: [0x7f7]
Successors: [0x835]
---
0x80c PUSH1 0x0
0x80e DUP1
0x80f REVERT
0x810 JUMPDEST
0x811 PUSH2 0x14a
0x814 PUSH2 0x3dd
0x817 JUMP
0x818 JUMPDEST
0x819 PUSH1 0x40
0x81b MLOAD
0x81c DUP1
0x81d DUP3
0x81e DUP2
0x81f MSTORE
0x820 PUSH1 0x20
0x822 ADD
0x823 SWAP2
0x824 POP
0x825 POP
0x826 PUSH1 0x40
0x828 MLOAD
0x829 DUP1
0x82a SWAP2
0x82b SUB
0x82c SWAP1
0x82d RETURN
0x82e JUMPDEST
0x82f CALLVALUE
0x830 ISZERO
0x831 PUSH2 0x16b
0x834 JUMPI
---
0x80c: V424 = 0x0
0x80f: REVERT 0x0 0x0
0x810: JUMPDEST 
0x811: V425 = 0x14a
0x814: V426 = 0x3dd
0x817: THROW 
0x818: JUMPDEST 
0x819: V427 = 0x40
0x81b: V428 = M[0x40]
0x81f: M[V428] = S0
0x820: V429 = 0x20
0x822: V430 = ADD 0x20 V428
0x826: V431 = 0x40
0x828: V432 = M[0x40]
0x82b: V433 = SUB V430 V432
0x82d: RETURN V432 V433
0x82e: JUMPDEST 
0x82f: V434 = CALLVALUE
0x830: V435 = ISZERO V434
0x831: V436 = 0x16b
0x834: THROWI V435
---
Entry stack: []
Stack pops: 0
Stack additions: [0x14a]
Exit stack: []

================================

Block 0x835
[0x835:0x863]
---
Predecessors: [0x80c]
Successors: [0x864]
---
0x835 PUSH1 0x0
0x837 DUP1
0x838 REVERT
0x839 JUMPDEST
0x83a PUSH2 0x173
0x83d PUSH2 0x3e3
0x840 JUMP
0x841 JUMPDEST
0x842 PUSH1 0x40
0x844 MLOAD
0x845 DUP1
0x846 DUP3
0x847 PUSH1 0xff
0x849 AND
0x84a PUSH1 0xff
0x84c AND
0x84d DUP2
0x84e MSTORE
0x84f PUSH1 0x20
0x851 ADD
0x852 SWAP2
0x853 POP
0x854 POP
0x855 PUSH1 0x40
0x857 MLOAD
0x858 DUP1
0x859 SWAP2
0x85a SUB
0x85b SWAP1
0x85c RETURN
0x85d JUMPDEST
0x85e CALLVALUE
0x85f ISZERO
0x860 PUSH2 0x19a
0x863 JUMPI
---
0x835: V437 = 0x0
0x838: REVERT 0x0 0x0
0x839: JUMPDEST 
0x83a: V438 = 0x173
0x83d: V439 = 0x3e3
0x840: THROW 
0x841: JUMPDEST 
0x842: V440 = 0x40
0x844: V441 = M[0x40]
0x847: V442 = 0xff
0x849: V443 = AND 0xff S0
0x84a: V444 = 0xff
0x84c: V445 = AND 0xff V443
0x84e: M[V441] = V445
0x84f: V446 = 0x20
0x851: V447 = ADD 0x20 V441
0x855: V448 = 0x40
0x857: V449 = M[0x40]
0x85a: V450 = SUB V447 V449
0x85c: RETURN V449 V450
0x85d: JUMPDEST 
0x85e: V451 = CALLVALUE
0x85f: V452 = ISZERO V451
0x860: V453 = 0x19a
0x863: THROWI V452
---
Entry stack: []
Stack pops: 0
Stack additions: [0x173]
Exit stack: []

================================

Block 0x864
[0x864:0x878]
---
Predecessors: [0x835]
Successors: [0x879]
---
0x864 PUSH1 0x0
0x866 DUP1
0x867 REVERT
0x868 JUMPDEST
0x869 PUSH2 0x1a2
0x86c PUSH2 0x3e8
0x86f JUMP
0x870 JUMPDEST
0x871 STOP
0x872 JUMPDEST
0x873 CALLVALUE
0x874 ISZERO
0x875 PUSH2 0x1af
0x878 JUMPI
---
0x864: V454 = 0x0
0x867: REVERT 0x0 0x0
0x868: JUMPDEST 
0x869: V455 = 0x1a2
0x86c: V456 = 0x3e8
0x86f: THROW 
0x870: JUMPDEST 
0x871: STOP 
0x872: JUMPDEST 
0x873: V457 = CALLVALUE
0x874: V458 = ISZERO V457
0x875: V459 = 0x1af
0x878: THROWI V458
---
Entry stack: []
Stack pops: 0
Stack additions: [0x1a2]
Exit stack: []

================================

Block 0x879
[0x879:0x8c5]
---
Predecessors: [0x864]
Successors: [0x8c6]
---
0x879 PUSH1 0x0
0x87b DUP1
0x87c REVERT
0x87d JUMPDEST
0x87e PUSH2 0x1db
0x881 PUSH1 0x4
0x883 DUP1
0x884 DUP1
0x885 CALLDATALOAD
0x886 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x89b AND
0x89c SWAP1
0x89d PUSH1 0x20
0x89f ADD
0x8a0 SWAP1
0x8a1 SWAP2
0x8a2 SWAP1
0x8a3 POP
0x8a4 POP
0x8a5 PUSH2 0x587
0x8a8 JUMP
0x8a9 JUMPDEST
0x8aa PUSH1 0x40
0x8ac MLOAD
0x8ad DUP1
0x8ae DUP3
0x8af DUP2
0x8b0 MSTORE
0x8b1 PUSH1 0x20
0x8b3 ADD
0x8b4 SWAP2
0x8b5 POP
0x8b6 POP
0x8b7 PUSH1 0x40
0x8b9 MLOAD
0x8ba DUP1
0x8bb SWAP2
0x8bc SUB
0x8bd SWAP1
0x8be RETURN
0x8bf JUMPDEST
0x8c0 CALLVALUE
0x8c1 ISZERO
0x8c2 PUSH2 0x1fc
0x8c5 JUMPI
---
0x879: V460 = 0x0
0x87c: REVERT 0x0 0x0
0x87d: JUMPDEST 
0x87e: V461 = 0x1db
0x881: V462 = 0x4
0x885: V463 = CALLDATALOAD 0x4
0x886: V464 = 0xffffffffffffffffffffffffffffffffffffffff
0x89b: V465 = AND 0xffffffffffffffffffffffffffffffffffffffff V463
0x89d: V466 = 0x20
0x89f: V467 = ADD 0x20 0x4
0x8a5: V468 = 0x587
0x8a8: THROW 
0x8a9: JUMPDEST 
0x8aa: V469 = 0x40
0x8ac: V470 = M[0x40]
0x8b0: M[V470] = S0
0x8b1: V471 = 0x20
0x8b3: V472 = ADD 0x20 V470
0x8b7: V473 = 0x40
0x8b9: V474 = M[0x40]
0x8bc: V475 = SUB V472 V474
0x8be: RETURN V474 V475
0x8bf: JUMPDEST 
0x8c0: V476 = CALLVALUE
0x8c1: V477 = ISZERO V476
0x8c2: V478 = 0x1fc
0x8c5: THROWI V477
---
Entry stack: []
Stack pops: 0
Stack additions: [V465, 0x1db]
Exit stack: []

================================

Block 0x8c6
[0x8c6:0x907]
---
Predecessors: [0x879]
Successors: [0x908]
---
0x8c6 PUSH1 0x0
0x8c8 DUP1
0x8c9 REVERT
0x8ca JUMPDEST
0x8cb PUSH2 0x231
0x8ce PUSH1 0x4
0x8d0 DUP1
0x8d1 DUP1
0x8d2 CALLDATALOAD
0x8d3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8e8 AND
0x8e9 SWAP1
0x8ea PUSH1 0x20
0x8ec ADD
0x8ed SWAP1
0x8ee SWAP2
0x8ef SWAP1
0x8f0 DUP1
0x8f1 CALLDATALOAD
0x8f2 SWAP1
0x8f3 PUSH1 0x20
0x8f5 ADD
0x8f6 SWAP1
0x8f7 SWAP2
0x8f8 SWAP1
0x8f9 POP
0x8fa POP
0x8fb PUSH2 0x5d0
0x8fe JUMP
0x8ff JUMPDEST
0x900 STOP
0x901 JUMPDEST
0x902 CALLVALUE
0x903 ISZERO
0x904 PUSH2 0x23e
0x907 JUMPI
---
0x8c6: V479 = 0x0
0x8c9: REVERT 0x0 0x0
0x8ca: JUMPDEST 
0x8cb: V480 = 0x231
0x8ce: V481 = 0x4
0x8d2: V482 = CALLDATALOAD 0x4
0x8d3: V483 = 0xffffffffffffffffffffffffffffffffffffffff
0x8e8: V484 = AND 0xffffffffffffffffffffffffffffffffffffffff V482
0x8ea: V485 = 0x20
0x8ec: V486 = ADD 0x20 0x4
0x8f1: V487 = CALLDATALOAD 0x24
0x8f3: V488 = 0x20
0x8f5: V489 = ADD 0x20 0x24
0x8fb: V490 = 0x5d0
0x8fe: THROW 
0x8ff: JUMPDEST 
0x900: STOP 
0x901: JUMPDEST 
0x902: V491 = CALLVALUE
0x903: V492 = ISZERO V491
0x904: V493 = 0x23e
0x907: THROWI V492
---
Entry stack: []
Stack pops: 0
Stack additions: [V487, V484, 0x231]
Exit stack: []

================================

Block 0x908
[0x908:0x95c]
---
Predecessors: [0x8c6]
Successors: [0x95d]
---
0x908 PUSH1 0x0
0x90a DUP1
0x90b REVERT
0x90c JUMPDEST
0x90d PUSH2 0x246
0x910 PUSH2 0x74a
0x913 JUMP
0x914 JUMPDEST
0x915 PUSH1 0x40
0x917 MLOAD
0x918 DUP1
0x919 DUP3
0x91a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x92f AND
0x930 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x945 AND
0x946 DUP2
0x947 MSTORE
0x948 PUSH1 0x20
0x94a ADD
0x94b SWAP2
0x94c POP
0x94d POP
0x94e PUSH1 0x40
0x950 MLOAD
0x951 DUP1
0x952 SWAP2
0x953 SUB
0x954 SWAP1
0x955 RETURN
0x956 JUMPDEST
0x957 CALLVALUE
0x958 ISZERO
0x959 PUSH2 0x293
0x95c JUMPI
---
0x908: V494 = 0x0
0x90b: REVERT 0x0 0x0
0x90c: JUMPDEST 
0x90d: V495 = 0x246
0x910: V496 = 0x74a
0x913: THROW 
0x914: JUMPDEST 
0x915: V497 = 0x40
0x917: V498 = M[0x40]
0x91a: V499 = 0xffffffffffffffffffffffffffffffffffffffff
0x92f: V500 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x930: V501 = 0xffffffffffffffffffffffffffffffffffffffff
0x945: V502 = AND 0xffffffffffffffffffffffffffffffffffffffff V500
0x947: M[V498] = V502
0x948: V503 = 0x20
0x94a: V504 = ADD 0x20 V498
0x94e: V505 = 0x40
0x950: V506 = M[0x40]
0x953: V507 = SUB V504 V506
0x955: RETURN V506 V507
0x956: JUMPDEST 
0x957: V508 = CALLVALUE
0x958: V509 = ISZERO V508
0x959: V510 = 0x293
0x95c: THROWI V509
---
Entry stack: []
Stack pops: 0
Stack additions: [0x246]
Exit stack: []

================================

Block 0x95d
[0x95d:0x98d]
---
Predecessors: [0x908]
Successors: [0x98e]
---
0x95d PUSH1 0x0
0x95f DUP1
0x960 REVERT
0x961 JUMPDEST
0x962 PUSH2 0x29b
0x965 PUSH2 0x76f
0x968 JUMP
0x969 JUMPDEST
0x96a PUSH1 0x40
0x96c MLOAD
0x96d DUP1
0x96e DUP1
0x96f PUSH1 0x20
0x971 ADD
0x972 DUP3
0x973 DUP2
0x974 SUB
0x975 DUP3
0x976 MSTORE
0x977 DUP4
0x978 DUP2
0x979 DUP2
0x97a MLOAD
0x97b DUP2
0x97c MSTORE
0x97d PUSH1 0x20
0x97f ADD
0x980 SWAP2
0x981 POP
0x982 DUP1
0x983 MLOAD
0x984 SWAP1
0x985 PUSH1 0x20
0x987 ADD
0x988 SWAP1
0x989 DUP1
0x98a DUP4
0x98b DUP4
0x98c PUSH1 0x0
---
0x95d: V511 = 0x0
0x960: REVERT 0x0 0x0
0x961: JUMPDEST 
0x962: V512 = 0x29b
0x965: V513 = 0x76f
0x968: THROW 
0x969: JUMPDEST 
0x96a: V514 = 0x40
0x96c: V515 = M[0x40]
0x96f: V516 = 0x20
0x971: V517 = ADD 0x20 V515
0x974: V518 = SUB V517 V515
0x976: M[V515] = V518
0x97a: V519 = M[S0]
0x97c: M[V517] = V519
0x97d: V520 = 0x20
0x97f: V521 = ADD 0x20 V517
0x983: V522 = M[S0]
0x985: V523 = 0x20
0x987: V524 = ADD 0x20 S0
0x98c: V525 = 0x0
---
Entry stack: []
Stack pops: 0
Stack additions: [0x29b, 0x0, V524, V521, V522, V522, V524, V521, V515, V515, S0]
Exit stack: []

================================

Block 0x98e
[0x98e:0x996]
---
Predecessors: [0x95d]
Successors: [0x997]
---
0x98e JUMPDEST
0x98f DUP4
0x990 DUP2
0x991 LT
0x992 ISZERO
0x993 PUSH2 0x2db
0x996 JUMPI
---
0x98e: JUMPDEST 
0x991: V526 = LT 0x0 V522
0x992: V527 = ISZERO V526
0x993: V528 = 0x2db
0x996: THROWI V527
---
Entry stack: [S9, V515, V515, V521, V524, V522, V522, V521, V524, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V515, V515, V521, V524, V522, V522, V521, V524, 0x0]

================================

Block 0x997
[0x997:0x9bc]
---
Predecessors: [0x98e]
Successors: [0x9bd]
---
0x997 DUP1
0x998 DUP3
0x999 ADD
0x99a MLOAD
0x99b DUP2
0x99c DUP5
0x99d ADD
0x99e MSTORE
0x99f PUSH1 0x20
0x9a1 DUP2
0x9a2 ADD
0x9a3 SWAP1
0x9a4 POP
0x9a5 PUSH2 0x2c0
0x9a8 JUMP
0x9a9 JUMPDEST
0x9aa POP
0x9ab POP
0x9ac POP
0x9ad POP
0x9ae SWAP1
0x9af POP
0x9b0 SWAP1
0x9b1 DUP2
0x9b2 ADD
0x9b3 SWAP1
0x9b4 PUSH1 0x1f
0x9b6 AND
0x9b7 DUP1
0x9b8 ISZERO
0x9b9 PUSH2 0x308
0x9bc JUMPI
---
0x999: V529 = ADD V524 0x0
0x99a: V530 = M[V529]
0x99d: V531 = ADD V521 0x0
0x99e: M[V531] = V530
0x99f: V532 = 0x20
0x9a2: V533 = ADD 0x0 0x20
0x9a5: V534 = 0x2c0
0x9a8: THROW 
0x9a9: JUMPDEST 
0x9b2: V535 = ADD S4 S6
0x9b4: V536 = 0x1f
0x9b6: V537 = AND 0x1f S4
0x9b8: V538 = ISZERO V537
0x9b9: V539 = 0x308
0x9bc: THROWI V538
---
Entry stack: [S9, V515, V515, V521, V524, V522, V522, V521, V524, 0x0]
Stack pops: 3
Stack additions: [V537, V535]
Exit stack: []

================================

Block 0x9bd
[0x9bd:0x9d5]
---
Predecessors: [0x997]
Successors: [0x9d6]
---
0x9bd DUP1
0x9be DUP3
0x9bf SUB
0x9c0 DUP1
0x9c1 MLOAD
0x9c2 PUSH1 0x1
0x9c4 DUP4
0x9c5 PUSH1 0x20
0x9c7 SUB
0x9c8 PUSH2 0x100
0x9cb EXP
0x9cc SUB
0x9cd NOT
0x9ce AND
0x9cf DUP2
0x9d0 MSTORE
0x9d1 PUSH1 0x20
0x9d3 ADD
0x9d4 SWAP2
0x9d5 POP
---
0x9bf: V540 = SUB V535 V537
0x9c1: V541 = M[V540]
0x9c2: V542 = 0x1
0x9c5: V543 = 0x20
0x9c7: V544 = SUB 0x20 V537
0x9c8: V545 = 0x100
0x9cb: V546 = EXP 0x100 V544
0x9cc: V547 = SUB V546 0x1
0x9cd: V548 = NOT V547
0x9ce: V549 = AND V548 V541
0x9d0: M[V540] = V549
0x9d1: V550 = 0x20
0x9d3: V551 = ADD 0x20 V540
---
Entry stack: [V535, V537]
Stack pops: 2
Stack additions: [V551, S0]
Exit stack: [V551, V537]

================================

Block 0x9d6
[0x9d6:0x9ea]
---
Predecessors: [0x9bd]
Successors: [0x9eb]
---
0x9d6 JUMPDEST
0x9d7 POP
0x9d8 SWAP3
0x9d9 POP
0x9da POP
0x9db POP
0x9dc PUSH1 0x40
0x9de MLOAD
0x9df DUP1
0x9e0 SWAP2
0x9e1 SUB
0x9e2 SWAP1
0x9e3 RETURN
0x9e4 JUMPDEST
0x9e5 CALLVALUE
0x9e6 ISZERO
0x9e7 PUSH2 0x321
0x9ea JUMPI
---
0x9d6: JUMPDEST 
0x9dc: V552 = 0x40
0x9de: V553 = M[0x40]
0x9e1: V554 = SUB V551 V553
0x9e3: RETURN V553 V554
0x9e4: JUMPDEST 
0x9e5: V555 = CALLVALUE
0x9e6: V556 = ISZERO V555
0x9e7: V557 = 0x321
0x9ea: THROWI V556
---
Entry stack: [V551, V537]
Stack pops: 10
Stack additions: []
Exit stack: []

================================

Block 0x9eb
[0x9eb:0xa3f]
---
Predecessors: [0x9d6]
Successors: [0xa40]
---
0x9eb PUSH1 0x0
0x9ed DUP1
0x9ee REVERT
0x9ef JUMPDEST
0x9f0 PUSH2 0x329
0x9f3 PUSH2 0x7a8
0x9f6 JUMP
0x9f7 JUMPDEST
0x9f8 PUSH1 0x40
0x9fa MLOAD
0x9fb DUP1
0x9fc DUP3
0x9fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa12 AND
0xa13 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa28 AND
0xa29 DUP2
0xa2a MSTORE
0xa2b PUSH1 0x20
0xa2d ADD
0xa2e SWAP2
0xa2f POP
0xa30 POP
0xa31 PUSH1 0x40
0xa33 MLOAD
0xa34 DUP1
0xa35 SWAP2
0xa36 SUB
0xa37 SWAP1
0xa38 RETURN
0xa39 JUMPDEST
0xa3a CALLVALUE
0xa3b ISZERO
0xa3c PUSH2 0x376
0xa3f JUMPI
---
0x9eb: V558 = 0x0
0x9ee: REVERT 0x0 0x0
0x9ef: JUMPDEST 
0x9f0: V559 = 0x329
0x9f3: V560 = 0x7a8
0x9f6: THROW 
0x9f7: JUMPDEST 
0x9f8: V561 = 0x40
0x9fa: V562 = M[0x40]
0x9fd: V563 = 0xffffffffffffffffffffffffffffffffffffffff
0xa12: V564 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xa13: V565 = 0xffffffffffffffffffffffffffffffffffffffff
0xa28: V566 = AND 0xffffffffffffffffffffffffffffffffffffffff V564
0xa2a: M[V562] = V566
0xa2b: V567 = 0x20
0xa2d: V568 = ADD 0x20 V562
0xa31: V569 = 0x40
0xa33: V570 = M[0x40]
0xa36: V571 = SUB V568 V570
0xa38: RETURN V570 V571
0xa39: JUMPDEST 
0xa3a: V572 = CALLVALUE
0xa3b: V573 = ISZERO V572
0xa3c: V574 = 0x376
0xa3f: THROWI V573
---
Entry stack: []
Stack pops: 0
Stack additions: [0x329]
Exit stack: []

================================

Block 0xa40
[0xa40:0xb0d]
---
Predecessors: [0x9eb]
Successors: [0xb0e]
---
0xa40 PUSH1 0x0
0xa42 DUP1
0xa43 REVERT
0xa44 JUMPDEST
0xa45 PUSH2 0x3a2
0xa48 PUSH1 0x4
0xa4a DUP1
0xa4b DUP1
0xa4c CALLDATALOAD
0xa4d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa62 AND
0xa63 SWAP1
0xa64 PUSH1 0x20
0xa66 ADD
0xa67 SWAP1
0xa68 SWAP2
0xa69 SWAP1
0xa6a POP
0xa6b POP
0xa6c PUSH2 0x7ce
0xa6f JUMP
0xa70 JUMPDEST
0xa71 STOP
0xa72 JUMPDEST
0xa73 PUSH1 0x40
0xa75 DUP1
0xa76 MLOAD
0xa77 SWAP1
0xa78 DUP2
0xa79 ADD
0xa7a PUSH1 0x40
0xa7c MSTORE
0xa7d DUP1
0xa7e PUSH1 0x11
0xa80 DUP2
0xa81 MSTORE
0xa82 PUSH1 0x20
0xa84 ADD
0xa85 PUSH32 0x5365652050726573616c6520546f6b656e000000000000000000000000000000
0xaa6 DUP2
0xaa7 MSTORE
0xaa8 POP
0xaa9 DUP2
0xaaa JUMP
0xaab JUMPDEST
0xaac PUSH1 0x2
0xaae SLOAD
0xaaf DUP2
0xab0 JUMP
0xab1 JUMPDEST
0xab2 PUSH1 0x12
0xab4 DUP2
0xab5 JUMP
0xab6 JUMPDEST
0xab7 PUSH1 0x1
0xab9 PUSH1 0x0
0xabb SWAP1
0xabc SLOAD
0xabd SWAP1
0xabe PUSH2 0x100
0xac1 EXP
0xac2 SWAP1
0xac3 DIV
0xac4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xad9 AND
0xada PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaef AND
0xaf0 CALLER
0xaf1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb06 AND
0xb07 EQ
0xb08 ISZERO
0xb09 ISZERO
0xb0a PUSH2 0x444
0xb0d JUMPI
---
0xa40: V575 = 0x0
0xa43: REVERT 0x0 0x0
0xa44: JUMPDEST 
0xa45: V576 = 0x3a2
0xa48: V577 = 0x4
0xa4c: V578 = CALLDATALOAD 0x4
0xa4d: V579 = 0xffffffffffffffffffffffffffffffffffffffff
0xa62: V580 = AND 0xffffffffffffffffffffffffffffffffffffffff V578
0xa64: V581 = 0x20
0xa66: V582 = ADD 0x20 0x4
0xa6c: V583 = 0x7ce
0xa6f: THROW 
0xa70: JUMPDEST 
0xa71: STOP 
0xa72: JUMPDEST 
0xa73: V584 = 0x40
0xa76: V585 = M[0x40]
0xa79: V586 = ADD V585 0x40
0xa7a: V587 = 0x40
0xa7c: M[0x40] = V586
0xa7e: V588 = 0x11
0xa81: M[V585] = 0x11
0xa82: V589 = 0x20
0xa84: V590 = ADD 0x20 V585
0xa85: V591 = 0x5365652050726573616c6520546f6b656e000000000000000000000000000000
0xaa7: M[V590] = 0x5365652050726573616c6520546f6b656e000000000000000000000000000000
0xaaa: JUMP S0
0xaab: JUMPDEST 
0xaac: V592 = 0x2
0xaae: V593 = S[0x2]
0xab0: JUMP S0
0xab1: JUMPDEST 
0xab2: V594 = 0x12
0xab5: JUMP S0
0xab6: JUMPDEST 
0xab7: V595 = 0x1
0xab9: V596 = 0x0
0xabc: V597 = S[0x1]
0xabe: V598 = 0x100
0xac1: V599 = EXP 0x100 0x0
0xac3: V600 = DIV V597 0x1
0xac4: V601 = 0xffffffffffffffffffffffffffffffffffffffff
0xad9: V602 = AND 0xffffffffffffffffffffffffffffffffffffffff V600
0xada: V603 = 0xffffffffffffffffffffffffffffffffffffffff
0xaef: V604 = AND 0xffffffffffffffffffffffffffffffffffffffff V602
0xaf0: V605 = CALLER
0xaf1: V606 = 0xffffffffffffffffffffffffffffffffffffffff
0xb06: V607 = AND 0xffffffffffffffffffffffffffffffffffffffff V605
0xb07: V608 = EQ V607 V604
0xb08: V609 = ISZERO V608
0xb09: V610 = ISZERO V609
0xb0a: V611 = 0x444
0xb0d: THROWI V610
---
Entry stack: []
Stack pops: 0
Stack additions: [V580, 0x3a2, V585, S0, V593, S0, 0x12, S0]
Exit stack: []

================================

Block 0xb0e
[0xb0e:0xcf4]
---
Predecessors: [0xa40]
Successors: [0xcf5]
---
0xb0e PUSH1 0x0
0xb10 DUP1
0xb11 REVERT
0xb12 JUMPDEST
0xb13 PUSH1 0x1
0xb15 PUSH1 0x0
0xb17 SWAP1
0xb18 SLOAD
0xb19 SWAP1
0xb1a PUSH2 0x100
0xb1d EXP
0xb1e SWAP1
0xb1f DIV
0xb20 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb35 AND
0xb36 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb4b AND
0xb4c PUSH1 0x0
0xb4e DUP1
0xb4f SWAP1
0xb50 SLOAD
0xb51 SWAP1
0xb52 PUSH2 0x100
0xb55 EXP
0xb56 SWAP1
0xb57 DIV
0xb58 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb6d AND
0xb6e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb83 AND
0xb84 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xba5 PUSH1 0x40
0xba7 MLOAD
0xba8 PUSH1 0x40
0xbaa MLOAD
0xbab DUP1
0xbac SWAP2
0xbad SUB
0xbae SWAP1
0xbaf LOG3
0xbb0 PUSH1 0x1
0xbb2 PUSH1 0x0
0xbb4 SWAP1
0xbb5 SLOAD
0xbb6 SWAP1
0xbb7 PUSH2 0x100
0xbba EXP
0xbbb SWAP1
0xbbc DIV
0xbbd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbd2 AND
0xbd3 PUSH1 0x0
0xbd5 DUP1
0xbd6 PUSH2 0x100
0xbd9 EXP
0xbda DUP2
0xbdb SLOAD
0xbdc DUP2
0xbdd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbf2 MUL
0xbf3 NOT
0xbf4 AND
0xbf5 SWAP1
0xbf6 DUP4
0xbf7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc0c AND
0xc0d MUL
0xc0e OR
0xc0f SWAP1
0xc10 SSTORE
0xc11 POP
0xc12 PUSH1 0x0
0xc14 PUSH1 0x1
0xc16 PUSH1 0x0
0xc18 PUSH2 0x100
0xc1b EXP
0xc1c DUP2
0xc1d SLOAD
0xc1e DUP2
0xc1f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc34 MUL
0xc35 NOT
0xc36 AND
0xc37 SWAP1
0xc38 DUP4
0xc39 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc4e AND
0xc4f MUL
0xc50 OR
0xc51 SWAP1
0xc52 SSTORE
0xc53 POP
0xc54 JUMP
0xc55 JUMPDEST
0xc56 PUSH1 0x0
0xc58 PUSH1 0x3
0xc5a PUSH1 0x0
0xc5c DUP4
0xc5d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc72 AND
0xc73 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc88 AND
0xc89 DUP2
0xc8a MSTORE
0xc8b PUSH1 0x20
0xc8d ADD
0xc8e SWAP1
0xc8f DUP2
0xc90 MSTORE
0xc91 PUSH1 0x20
0xc93 ADD
0xc94 PUSH1 0x0
0xc96 SHA3
0xc97 SLOAD
0xc98 SWAP1
0xc99 POP
0xc9a SWAP2
0xc9b SWAP1
0xc9c POP
0xc9d JUMP
0xc9e JUMPDEST
0xc9f PUSH1 0x0
0xca1 DUP1
0xca2 SWAP1
0xca3 SLOAD
0xca4 SWAP1
0xca5 PUSH2 0x100
0xca8 EXP
0xca9 SWAP1
0xcaa DIV
0xcab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcc0 AND
0xcc1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcd6 AND
0xcd7 CALLER
0xcd8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xced AND
0xcee EQ
0xcef ISZERO
0xcf0 ISZERO
0xcf1 PUSH2 0x62b
0xcf4 JUMPI
---
0xb0e: V612 = 0x0
0xb11: REVERT 0x0 0x0
0xb12: JUMPDEST 
0xb13: V613 = 0x1
0xb15: V614 = 0x0
0xb18: V615 = S[0x1]
0xb1a: V616 = 0x100
0xb1d: V617 = EXP 0x100 0x0
0xb1f: V618 = DIV V615 0x1
0xb20: V619 = 0xffffffffffffffffffffffffffffffffffffffff
0xb35: V620 = AND 0xffffffffffffffffffffffffffffffffffffffff V618
0xb36: V621 = 0xffffffffffffffffffffffffffffffffffffffff
0xb4b: V622 = AND 0xffffffffffffffffffffffffffffffffffffffff V620
0xb4c: V623 = 0x0
0xb50: V624 = S[0x0]
0xb52: V625 = 0x100
0xb55: V626 = EXP 0x100 0x0
0xb57: V627 = DIV V624 0x1
0xb58: V628 = 0xffffffffffffffffffffffffffffffffffffffff
0xb6d: V629 = AND 0xffffffffffffffffffffffffffffffffffffffff V627
0xb6e: V630 = 0xffffffffffffffffffffffffffffffffffffffff
0xb83: V631 = AND 0xffffffffffffffffffffffffffffffffffffffff V629
0xb84: V632 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xba5: V633 = 0x40
0xba7: V634 = M[0x40]
0xba8: V635 = 0x40
0xbaa: V636 = M[0x40]
0xbad: V637 = SUB V634 V636
0xbaf: LOG V636 V637 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V631 V622
0xbb0: V638 = 0x1
0xbb2: V639 = 0x0
0xbb5: V640 = S[0x1]
0xbb7: V641 = 0x100
0xbba: V642 = EXP 0x100 0x0
0xbbc: V643 = DIV V640 0x1
0xbbd: V644 = 0xffffffffffffffffffffffffffffffffffffffff
0xbd2: V645 = AND 0xffffffffffffffffffffffffffffffffffffffff V643
0xbd3: V646 = 0x0
0xbd6: V647 = 0x100
0xbd9: V648 = EXP 0x100 0x0
0xbdb: V649 = S[0x0]
0xbdd: V650 = 0xffffffffffffffffffffffffffffffffffffffff
0xbf2: V651 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xbf3: V652 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xbf4: V653 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V649
0xbf7: V654 = 0xffffffffffffffffffffffffffffffffffffffff
0xc0c: V655 = AND 0xffffffffffffffffffffffffffffffffffffffff V645
0xc0d: V656 = MUL V655 0x1
0xc0e: V657 = OR V656 V653
0xc10: S[0x0] = V657
0xc12: V658 = 0x0
0xc14: V659 = 0x1
0xc16: V660 = 0x0
0xc18: V661 = 0x100
0xc1b: V662 = EXP 0x100 0x0
0xc1d: V663 = S[0x1]
0xc1f: V664 = 0xffffffffffffffffffffffffffffffffffffffff
0xc34: V665 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xc35: V666 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xc36: V667 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V663
0xc39: V668 = 0xffffffffffffffffffffffffffffffffffffffff
0xc4e: V669 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0xc4f: V670 = MUL 0x0 0x1
0xc50: V671 = OR 0x0 V667
0xc52: S[0x1] = V671
0xc54: JUMP S0
0xc55: JUMPDEST 
0xc56: V672 = 0x0
0xc58: V673 = 0x3
0xc5a: V674 = 0x0
0xc5d: V675 = 0xffffffffffffffffffffffffffffffffffffffff
0xc72: V676 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xc73: V677 = 0xffffffffffffffffffffffffffffffffffffffff
0xc88: V678 = AND 0xffffffffffffffffffffffffffffffffffffffff V676
0xc8a: M[0x0] = V678
0xc8b: V679 = 0x20
0xc8d: V680 = ADD 0x20 0x0
0xc90: M[0x20] = 0x3
0xc91: V681 = 0x20
0xc93: V682 = ADD 0x20 0x20
0xc94: V683 = 0x0
0xc96: V684 = SHA3 0x0 0x40
0xc97: V685 = S[V684]
0xc9d: JUMP S1
0xc9e: JUMPDEST 
0xc9f: V686 = 0x0
0xca3: V687 = S[0x0]
0xca5: V688 = 0x100
0xca8: V689 = EXP 0x100 0x0
0xcaa: V690 = DIV V687 0x1
0xcab: V691 = 0xffffffffffffffffffffffffffffffffffffffff
0xcc0: V692 = AND 0xffffffffffffffffffffffffffffffffffffffff V690
0xcc1: V693 = 0xffffffffffffffffffffffffffffffffffffffff
0xcd6: V694 = AND 0xffffffffffffffffffffffffffffffffffffffff V692
0xcd7: V695 = CALLER
0xcd8: V696 = 0xffffffffffffffffffffffffffffffffffffffff
0xced: V697 = AND 0xffffffffffffffffffffffffffffffffffffffff V695
0xcee: V698 = EQ V697 V694
0xcef: V699 = ISZERO V698
0xcf0: V700 = ISZERO V699
0xcf1: V701 = 0x62b
0xcf4: THROWI V700
---
Entry stack: []
Stack pops: 0
Stack additions: [V685]
Exit stack: []

================================

Block 0xcf5
[0xcf5:0xef2]
---
Predecessors: [0xb0e]
Successors: [0xef3]
---
0xcf5 PUSH1 0x0
0xcf7 DUP1
0xcf8 REVERT
0xcf9 JUMPDEST
0xcfa PUSH2 0x640
0xcfd DUP2
0xcfe PUSH1 0x2
0xd00 SLOAD
0xd01 PUSH2 0x86d
0xd04 SWAP1
0xd05 SWAP2
0xd06 SWAP1
0xd07 PUSH4 0xffffffff
0xd0c AND
0xd0d JUMP
0xd0e JUMPDEST
0xd0f PUSH1 0x2
0xd11 DUP2
0xd12 SWAP1
0xd13 SSTORE
0xd14 POP
0xd15 PUSH2 0x698
0xd18 DUP2
0xd19 PUSH1 0x3
0xd1b PUSH1 0x0
0xd1d DUP6
0xd1e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd33 AND
0xd34 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd49 AND
0xd4a DUP2
0xd4b MSTORE
0xd4c PUSH1 0x20
0xd4e ADD
0xd4f SWAP1
0xd50 DUP2
0xd51 MSTORE
0xd52 PUSH1 0x20
0xd54 ADD
0xd55 PUSH1 0x0
0xd57 SHA3
0xd58 SLOAD
0xd59 PUSH2 0x86d
0xd5c SWAP1
0xd5d SWAP2
0xd5e SWAP1
0xd5f PUSH4 0xffffffff
0xd64 AND
0xd65 JUMP
0xd66 JUMPDEST
0xd67 PUSH1 0x3
0xd69 PUSH1 0x0
0xd6b DUP5
0xd6c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd81 AND
0xd82 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd97 AND
0xd98 DUP2
0xd99 MSTORE
0xd9a PUSH1 0x20
0xd9c ADD
0xd9d SWAP1
0xd9e DUP2
0xd9f MSTORE
0xda0 PUSH1 0x20
0xda2 ADD
0xda3 PUSH1 0x0
0xda5 SHA3
0xda6 DUP2
0xda7 SWAP1
0xda8 SSTORE
0xda9 POP
0xdaa PUSH32 0xc65a3f767206d2fdcede0b094a4840e01c0dd0be1888b5ba800346eaa0123c16
0xdcb DUP3
0xdcc DUP3
0xdcd PUSH1 0x40
0xdcf MLOAD
0xdd0 DUP1
0xdd1 DUP4
0xdd2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xde7 AND
0xde8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdfd AND
0xdfe DUP2
0xdff MSTORE
0xe00 PUSH1 0x20
0xe02 ADD
0xe03 DUP3
0xe04 DUP2
0xe05 MSTORE
0xe06 PUSH1 0x20
0xe08 ADD
0xe09 SWAP3
0xe0a POP
0xe0b POP
0xe0c POP
0xe0d PUSH1 0x40
0xe0f MLOAD
0xe10 DUP1
0xe11 SWAP2
0xe12 SUB
0xe13 SWAP1
0xe14 LOG1
0xe15 POP
0xe16 POP
0xe17 JUMP
0xe18 JUMPDEST
0xe19 PUSH1 0x0
0xe1b DUP1
0xe1c SWAP1
0xe1d SLOAD
0xe1e SWAP1
0xe1f PUSH2 0x100
0xe22 EXP
0xe23 SWAP1
0xe24 DIV
0xe25 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe3a AND
0xe3b DUP2
0xe3c JUMP
0xe3d JUMPDEST
0xe3e PUSH1 0x40
0xe40 DUP1
0xe41 MLOAD
0xe42 SWAP1
0xe43 DUP2
0xe44 ADD
0xe45 PUSH1 0x40
0xe47 MSTORE
0xe48 DUP1
0xe49 PUSH1 0x3
0xe4b DUP2
0xe4c MSTORE
0xe4d PUSH1 0x20
0xe4f ADD
0xe50 PUSH32 0x5345450000000000000000000000000000000000000000000000000000000000
0xe71 DUP2
0xe72 MSTORE
0xe73 POP
0xe74 DUP2
0xe75 JUMP
0xe76 JUMPDEST
0xe77 PUSH1 0x1
0xe79 PUSH1 0x0
0xe7b SWAP1
0xe7c SLOAD
0xe7d SWAP1
0xe7e PUSH2 0x100
0xe81 EXP
0xe82 SWAP1
0xe83 DIV
0xe84 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe99 AND
0xe9a DUP2
0xe9b JUMP
0xe9c JUMPDEST
0xe9d PUSH1 0x0
0xe9f DUP1
0xea0 SWAP1
0xea1 SLOAD
0xea2 SWAP1
0xea3 PUSH2 0x100
0xea6 EXP
0xea7 SWAP1
0xea8 DIV
0xea9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xebe AND
0xebf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xed4 AND
0xed5 CALLER
0xed6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xeeb AND
0xeec EQ
0xeed ISZERO
0xeee ISZERO
0xeef PUSH2 0x829
0xef2 JUMPI
---
0xcf5: V702 = 0x0
0xcf8: REVERT 0x0 0x0
0xcf9: JUMPDEST 
0xcfa: V703 = 0x640
0xcfe: V704 = 0x2
0xd00: V705 = S[0x2]
0xd01: V706 = 0x86d
0xd07: V707 = 0xffffffff
0xd0c: V708 = AND 0xffffffff 0x86d
0xd0d: THROW 
0xd0e: JUMPDEST 
0xd0f: V709 = 0x2
0xd13: S[0x2] = S0
0xd15: V710 = 0x698
0xd19: V711 = 0x3
0xd1b: V712 = 0x0
0xd1e: V713 = 0xffffffffffffffffffffffffffffffffffffffff
0xd33: V714 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xd34: V715 = 0xffffffffffffffffffffffffffffffffffffffff
0xd49: V716 = AND 0xffffffffffffffffffffffffffffffffffffffff V714
0xd4b: M[0x0] = V716
0xd4c: V717 = 0x20
0xd4e: V718 = ADD 0x20 0x0
0xd51: M[0x20] = 0x3
0xd52: V719 = 0x20
0xd54: V720 = ADD 0x20 0x20
0xd55: V721 = 0x0
0xd57: V722 = SHA3 0x0 0x40
0xd58: V723 = S[V722]
0xd59: V724 = 0x86d
0xd5f: V725 = 0xffffffff
0xd64: V726 = AND 0xffffffff 0x86d
0xd65: THROW 
0xd66: JUMPDEST 
0xd67: V727 = 0x3
0xd69: V728 = 0x0
0xd6c: V729 = 0xffffffffffffffffffffffffffffffffffffffff
0xd81: V730 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xd82: V731 = 0xffffffffffffffffffffffffffffffffffffffff
0xd97: V732 = AND 0xffffffffffffffffffffffffffffffffffffffff V730
0xd99: M[0x0] = V732
0xd9a: V733 = 0x20
0xd9c: V734 = ADD 0x20 0x0
0xd9f: M[0x20] = 0x3
0xda0: V735 = 0x20
0xda2: V736 = ADD 0x20 0x20
0xda3: V737 = 0x0
0xda5: V738 = SHA3 0x0 0x40
0xda8: S[V738] = S0
0xdaa: V739 = 0xc65a3f767206d2fdcede0b094a4840e01c0dd0be1888b5ba800346eaa0123c16
0xdcd: V740 = 0x40
0xdcf: V741 = M[0x40]
0xdd2: V742 = 0xffffffffffffffffffffffffffffffffffffffff
0xde7: V743 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xde8: V744 = 0xffffffffffffffffffffffffffffffffffffffff
0xdfd: V745 = AND 0xffffffffffffffffffffffffffffffffffffffff V743
0xdff: M[V741] = V745
0xe00: V746 = 0x20
0xe02: V747 = ADD 0x20 V741
0xe05: M[V747] = S1
0xe06: V748 = 0x20
0xe08: V749 = ADD 0x20 V747
0xe0d: V750 = 0x40
0xe0f: V751 = M[0x40]
0xe12: V752 = SUB V749 V751
0xe14: LOG V751 V752 0xc65a3f767206d2fdcede0b094a4840e01c0dd0be1888b5ba800346eaa0123c16
0xe17: JUMP S3
0xe18: JUMPDEST 
0xe19: V753 = 0x0
0xe1d: V754 = S[0x0]
0xe1f: V755 = 0x100
0xe22: V756 = EXP 0x100 0x0
0xe24: V757 = DIV V754 0x1
0xe25: V758 = 0xffffffffffffffffffffffffffffffffffffffff
0xe3a: V759 = AND 0xffffffffffffffffffffffffffffffffffffffff V757
0xe3c: JUMP S0
0xe3d: JUMPDEST 
0xe3e: V760 = 0x40
0xe41: V761 = M[0x40]
0xe44: V762 = ADD V761 0x40
0xe45: V763 = 0x40
0xe47: M[0x40] = V762
0xe49: V764 = 0x3
0xe4c: M[V761] = 0x3
0xe4d: V765 = 0x20
0xe4f: V766 = ADD 0x20 V761
0xe50: V767 = 0x5345450000000000000000000000000000000000000000000000000000000000
0xe72: M[V766] = 0x5345450000000000000000000000000000000000000000000000000000000000
0xe75: JUMP S0
0xe76: JUMPDEST 
0xe77: V768 = 0x1
0xe79: V769 = 0x0
0xe7c: V770 = S[0x1]
0xe7e: V771 = 0x100
0xe81: V772 = EXP 0x100 0x0
0xe83: V773 = DIV V770 0x1
0xe84: V774 = 0xffffffffffffffffffffffffffffffffffffffff
0xe99: V775 = AND 0xffffffffffffffffffffffffffffffffffffffff V773
0xe9b: JUMP S0
0xe9c: JUMPDEST 
0xe9d: V776 = 0x0
0xea1: V777 = S[0x0]
0xea3: V778 = 0x100
0xea6: V779 = EXP 0x100 0x0
0xea8: V780 = DIV V777 0x1
0xea9: V781 = 0xffffffffffffffffffffffffffffffffffffffff
0xebe: V782 = AND 0xffffffffffffffffffffffffffffffffffffffff V780
0xebf: V783 = 0xffffffffffffffffffffffffffffffffffffffff
0xed4: V784 = AND 0xffffffffffffffffffffffffffffffffffffffff V782
0xed5: V785 = CALLER
0xed6: V786 = 0xffffffffffffffffffffffffffffffffffffffff
0xeeb: V787 = AND 0xffffffffffffffffffffffffffffffffffffffff V785
0xeec: V788 = EQ V787 V784
0xeed: V789 = ISZERO V788
0xeee: V790 = ISZERO V789
0xeef: V791 = 0x829
0xef2: THROWI V790
---
Entry stack: []
Stack pops: 0
Stack additions: [S0, V705, 0x640, S0, S1, V723, 0x698, S1, S2, V759, S0, V761, S0, V775, S0]
Exit stack: []

================================

Block 0xef3
[0xef3:0xf4d]
---
Predecessors: [0xcf5]
Successors: [0xf4e]
---
0xef3 PUSH1 0x0
0xef5 DUP1
0xef6 REVERT
0xef7 JUMPDEST
0xef8 DUP1
0xef9 PUSH1 0x1
0xefb PUSH1 0x0
0xefd PUSH2 0x100
0xf00 EXP
0xf01 DUP2
0xf02 SLOAD
0xf03 DUP2
0xf04 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf19 MUL
0xf1a NOT
0xf1b AND
0xf1c SWAP1
0xf1d DUP4
0xf1e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf33 AND
0xf34 MUL
0xf35 OR
0xf36 SWAP1
0xf37 SSTORE
0xf38 POP
0xf39 POP
0xf3a JUMP
0xf3b JUMPDEST
0xf3c PUSH1 0x0
0xf3e DUP1
0xf3f DUP3
0xf40 DUP5
0xf41 ADD
0xf42 SWAP1
0xf43 POP
0xf44 DUP4
0xf45 DUP2
0xf46 LT
0xf47 ISZERO
0xf48 ISZERO
0xf49 ISZERO
0xf4a PUSH2 0x881
0xf4d JUMPI
---
0xef3: V792 = 0x0
0xef6: REVERT 0x0 0x0
0xef7: JUMPDEST 
0xef9: V793 = 0x1
0xefb: V794 = 0x0
0xefd: V795 = 0x100
0xf00: V796 = EXP 0x100 0x0
0xf02: V797 = S[0x1]
0xf04: V798 = 0xffffffffffffffffffffffffffffffffffffffff
0xf19: V799 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xf1a: V800 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xf1b: V801 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V797
0xf1e: V802 = 0xffffffffffffffffffffffffffffffffffffffff
0xf33: V803 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xf34: V804 = MUL V803 0x1
0xf35: V805 = OR V804 V801
0xf37: S[0x1] = V805
0xf3a: JUMP S1
0xf3b: JUMPDEST 
0xf3c: V806 = 0x0
0xf41: V807 = ADD S1 S0
0xf46: V808 = LT V807 S1
0xf47: V809 = ISZERO V808
0xf48: V810 = ISZERO V809
0xf49: V811 = ISZERO V810
0xf4a: V812 = 0x881
0xf4d: THROWI V811
---
Entry stack: []
Stack pops: 0
Stack additions: [V807, 0x0, S0, S1]
Exit stack: []

================================

Block 0xf4e
[0xf4e:0xf65]
---
Predecessors: [0xef3]
Successors: [0xf66]
---
0xf4e INVALID
0xf4f JUMPDEST
0xf50 DUP1
0xf51 SWAP2
0xf52 POP
0xf53 POP
0xf54 SWAP3
0xf55 SWAP2
0xf56 POP
0xf57 POP
0xf58 JUMP
0xf59 STOP
0xf5a LOG1
0xf5b PUSH6 0x627a7a723058
0xf62 SHA3
0xf63 MISSING 0x28
0xf64 MISSING 0xf6
0xf65 DUP1
---
0xf4e: INVALID 
0xf4f: JUMPDEST 
0xf58: JUMP S4
0xf59: STOP 
0xf5a: LOG S0 S1 S2
0xf5b: V813 = 0x627a7a723058
0xf62: V814 = SHA3 0x627a7a723058 S3
0xf63: MISSING 0x28
0xf64: MISSING 0xf6
0xf65: NOP 
---
Entry stack: [S3, S2, 0x0, V807]
Stack pops: 0
Stack additions: [S0, V814, S0, S0]
Exit stack: []

================================

Block 0xf66
[0xf66:0xf96]
---
Predecessors: [0xf4e]
Successors: []
---
0xf66 JUMPDEST
0xf67 ADDMOD
0xf68 SAR
0xf69 BALANCE
0xf6a SWAP5
0xf6b CODESIZE
0xf6c MULMOD
0xf6d MISSING 0xa7
0xf6e MISSING 0xb4
0xf6f MISSING 0x4c
0xf70 RETURNDATACOPY
0xf71 DUP2
0xf72 DUP10
0xf73 GT
0xf74 MISSING 0xd9
0xf75 EXTCODECOPY
0xf76 DUP1
0xf77 MISSING 0xc8
0xf78 MSIZE
0xf79 PUSH29 0xc090b078c362192f5e0029
---
0xf66: JUMPDEST 
0xf67: V815 = ADDMOD S0 S1 S2
0xf68: V816 = SAR V815 S3
0xf69: V817 = BALANCE V816
0xf6b: V818 = CODESIZE
0xf6c: V819 = MULMOD V818 S8 S4
0xf6d: MISSING 0xa7
0xf6e: MISSING 0xb4
0xf6f: MISSING 0x4c
0xf70: RETURNDATACOPY S0 S1 S2
0xf73: V820 = GT S11 S4
0xf74: MISSING 0xd9
0xf75: EXTCODECOPY S0 S1 S2 S3
0xf77: MISSING 0xc8
0xf78: V821 = MSIZE
0xf79: V822 = 0xc090b078c362192f5e0029
---
Entry stack: [S1, S0]
Stack pops: 186
Stack additions: [0xc090b078c362192f5e0029, V821]
Exit stack: []

================================

Function 0:
Public function signature: 0x4e71e0c8
Entry block: 0x67
Exit block: 0x7a
Body: 0x67, 0x6e, 0x72, 0x7a, 0x15f, 0x1b7, 0x1bb

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0x7c
Exit block: 0x8f
Body: 0x7c, 0x83, 0x87, 0x8f, 0x2fe

Function 2:
Public function signature: 0xe30c3978
Entry block: 0xd1
Exit block: 0xe4
Body: 0xd1, 0xd8, 0xdc, 0xe4, 0x323

Function 3:
Public function signature: 0xf2fde38b
Entry block: 0x126
Exit block: 0x15d
Body: 0x126, 0x12d, 0x131, 0x15d, 0x349, 0x3a0, 0x3a4

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x62
Body: 0x62

